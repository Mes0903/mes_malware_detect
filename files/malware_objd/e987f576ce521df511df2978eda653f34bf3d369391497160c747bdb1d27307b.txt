
e987f576ce521df511df2978eda653f34bf3d369391497160c747bdb1d27307b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x108
  401009:	add    DWORD PTR ds:0x42f000,0x432000
  401013:	push   esi
  401014:	sub    DWORD PTR ds:0x43101c,0x42f018
  40101e:	push   edi
  40101f:	xor    DWORD PTR ds:0x42e020,0x431010
  401029:	lea    eax,[ebp-0xc4]
  40102f:	inc    DWORD PTR ds:0x42f010
  401035:	push   eax
  401036:	push   0xf
  401038:	mov    DWORD PTR ds:0x42e000,0x5c4e
  401042:	call   DWORD PTR ds:0x434913
  401048:	adc    DWORD PTR ds:0x431014,ebx
  40104e:	mov    esi,DWORD PTR ds:0x4348ef
  401054:	and    DWORD PTR ds:0x431008,0x42f010
  40105e:	push   0x4343e7
  401063:	xor    DWORD PTR ds:0x432000,0x42f010
  40106d:	xor    edi,edi
  40106f:	adc    DWORD PTR ds:0x42f01c,0x43201c
  401079:	inc    edi
  40107a:	and    DWORD PTR ds:0x42f00c,0x62f7
  401084:	push   edi
  401085:	adc    DWORD PTR ds:0x432008,0x432000
  40108f:	push   edi
  401090:	xor    DWORD PTR ds:0x430004,0x55
  40109a:	call   esi
  40109c:	xor    DWORD PTR ds:0x42e000,0x137b
  4010a6:	test   eax,eax
  4010a8:	mov    DWORD PTR ds:0x430004,0x482
  4010b2:	je     0x40119d
  4010b8:	push   0x4343ff
  4010bd:	push   edi
  4010be:	push   edi
  4010bf:	and    DWORD PTR ds:0x432008,0x42e018
  4010c9:	call   esi
  4010cb:	test   eax,eax
  4010cd:	mov    DWORD PTR ds:0x432008,0x1562
  4010d7:	je     0x4010ee
  4010dd:	adc    DWORD PTR ds:0x42f008,0x6c9b
  4010e7:	xor    eax,eax
  4010e9:	jmp    0x4026c9
  4010ee:	or     DWORD PTR ds:0x42e018,0x42e01c
  4010f8:	push   0x9
  4010fa:	and    DWORD PTR ds:0x430004,0x42e004
  401104:	push   0x434417
  401109:	add    DWORD PTR ds:0x42f004,0x43000c
  401113:	call   DWORD PTR ds:0x4348e7
  401119:	test   eax,eax
  40111b:	mov    DWORD PTR ds:0x42e008,0xb3c
  401125:	je     0x40113a
  40112b:	lea    eax,[ebp-0x20]
  40112e:	push   eax
  40112f:	call   DWORD PTR ds:0x4348a7
  401135:	jmp    0x4026c9
  40113a:	add    DWORD PTR ds:0x432000,0x7af2
  401144:	push   0x43443b
  401149:	push   edi
  40114a:	add    DWORD PTR ds:0x43100c,0x430018
  401154:	push   edi
  401155:	and    DWORD PTR ds:0x430010,0x466f
  40115f:	call   DWORD PTR ds:0x434903
  401165:	add    DWORD PTR ds:0x430010,0x431018
  40116f:	test   eax,eax
  401171:	mov    DWORD PTR ds:0x43201c,0x38e4
  40117b:	jne    0x40112b
  401181:	push   0xd
  401183:	add    DWORD PTR ds:0x42e004,0x6394
  40118d:	push   0x43444b
  401192:	call   DWORD PTR ds:0x434907
  401198:	jmp    0x4010dd
  40119d:	push   0x9
  40119f:	push   0x43445b
  4011a4:	add    DWORD PTR ds:0x43000c,0x42e000
  4011ae:	call   DWORD PTR ds:0x4348e7
  4011b4:	and    DWORD PTR ds:0x432008,0x42e018
  4011be:	test   eax,eax
  4011c0:	jne    0x401240
  4011c6:	and    DWORD PTR ds:0x430004,0x432010
  4011d0:	push   0x434477
  4011d5:	push   edi
  4011d6:	sub    DWORD PTR ds:0x430010,0x432014
  4011e0:	push   edi
  4011e1:	sbb    DWORD PTR ds:0x42e00c,0x1a43
  4011eb:	call   DWORD PTR ds:0x434903
  4011f1:	add    DWORD PTR ds:0x42f00c,0x430004
  4011fb:	test   eax,eax
  4011fd:	mov    DWORD PTR ds:0x430004,0x2e6d
  401207:	jne    0x40112b
  40120d:	and    DWORD PTR ds:0x42e008,0x43101c
  401217:	push   0xd
  401219:	push   0x434487
  40121e:	call   DWORD PTR ds:0x434907
  401224:	adc    DWORD PTR ds:0x42f018,0x799a
  40122e:	test   eax,eax
  401230:	mov    DWORD PTR ds:0x42f004,0x637d
  40123a:	jne    0x40112b
  401240:	mov    edi,DWORD PTR ds:0x41d082
  401246:	mov    edi,DWORD PTR [edi]
  401248:	and    DWORD PTR ds:0x431008,edi
  40124e:	mov    DWORD PTR [ebp-0x10],0x0
  401255:	and    DWORD PTR ds:0x431004,ebx
  40125b:	mov    eax,DWORD PTR [ebp-0x3c]
  40125e:	mov    DWORD PTR ds:0x42e01c,0x1f
  401268:	cmp    DWORD PTR ds:0x42e01c,0x0
  40126f:	je     0x4012d6
  401275:	cmp    DWORD PTR ds:0x42e01c,0xe
  40127c:	jg     0x4012d6
  401282:	jmp    0x4012aa
  401287:	push   0x431000
  40128c:	push   0x87aa
  401291:	push   0x3cef
  401296:	push   0x5469
  40129b:	push   DWORD PTR [ebp-0x24]
  40129e:	push   DWORD PTR [ebp-0x10]
  4012a1:	push   DWORD PTR [ebp-0x28]
  4012a4:	call   DWORD PTR ds:0x4348df
  4012aa:	cmp    DWORD PTR ds:0x42e01c,0xf
  4012b1:	jne    0x4012c4
  4012b7:	mov    ecx,DWORD PTR ds:0x42e01c
  4012bd:	dec    ecx
  4012be:	mov    DWORD PTR ds:0x42e01c,ecx
  4012c4:	mov    ecx,DWORD PTR ds:0x42e01c
  4012ca:	dec    ecx
  4012cb:	mov    DWORD PTR ds:0x42e01c,ecx
  4012d1:	jmp    0x401268
  4012d6:	mov    DWORD PTR [ebp-0x3c],eax
  4012d9:	mov    ecx,DWORD PTR ds:0x430010
  4012df:	or     DWORD PTR ds:0x431010,ecx
  4012e5:	mov    DWORD PTR [ebp-0x8],0xf89c8581
  4012ec:	sub    ecx,esi
  4012ee:	mov    DWORD PTR [ebp-0xc],0xf89c8580
  4012f5:	xor    edi,edi
  4012f7:	add    edi,DWORD PTR ds:0x42e008
  4012fd:	xor    DWORD PTR ds:0x42f014,edi
  401303:	lea    eax,[ebp-0x44]
  401306:	mov    DWORD PTR [ebp-0x38],eax
  401309:	movzx  esi,BYTE PTR ds:0x42f01c
  401310:	or     esi,DWORD PTR ds:0x431004
  401316:	mov    DWORD PTR ds:0x42f01c,esi
  40131c:	lea    eax,[ebp-0x48]
  40131f:	mov    DWORD PTR [ebp-0x18],eax
  401322:	mov    eax,ds:0x4342d7
  401327:	add    DWORD PTR ds:0x432008,0x58e0
  401331:	mov    eax,DWORD PTR [eax+0x1c8]
  401337:	xor    DWORD PTR ds:0x42e008,edi
  40133d:	mov    eax,DWORD PTR [eax]
  40133f:	add    edi,esi
  401341:	mov    ecx,DWORD PTR [ebp-0x18]
  401344:	or     esi,esi
  401346:	mov    esi,0x751089d
  40134b:	movzx  edi,BYTE PTR ds:0x430008
  401352:	sub    DWORD PTR ds:0x42e024,edi
  401358:	xor    eax,esi
  40135a:	mov    DWORD PTR ds:0x431008,0x1e
  401364:	cmp    DWORD PTR ds:0x431008,0x0
  40136b:	je     0x4013d1
  401371:	cmp    DWORD PTR ds:0x431008,0xc
  401378:	jg     0x4013d1
  40137e:	jmp    0x4013a5
  401383:	push   0x8e8e
  401388:	push   0x0
  40138a:	push   DWORD PTR [ebp-0x10]
  40138d:	push   0x42f008
  401392:	push   DWORD PTR [ebp-0x28]
  401395:	push   0x1613
  40139a:	push   0x69aa
  40139f:	call   DWORD PTR ds:0x4348e3
  4013a5:	cmp    DWORD PTR ds:0x431008,0xd
  4013ac:	jne    0x4013bf
  4013b2:	mov    edi,DWORD PTR ds:0x431008
  4013b8:	dec    edi
  4013b9:	mov    DWORD PTR ds:0x431008,edi
  4013bf:	mov    edi,DWORD PTR ds:0x431008
  4013c5:	dec    edi
  4013c6:	mov    DWORD PTR ds:0x431008,edi
  4013cc:	jmp    0x401364
  4013d1:	mov    edi,0x3272e4
  4013d6:	sub    DWORD PTR ds:0x42e018,0x1414
  4013e0:	add    eax,edi
  4013e2:	mov    DWORD PTR ds:0x42f018,0x348
  4013ec:	mov    DWORD PTR [ecx],eax
  4013ee:	mov    eax,ds:0x43472b
  4013f3:	mov    DWORD PTR ds:0x42f01c,0x2d77
  4013fd:	cmp    eax,0x312bc9f6
  401402:	mov    DWORD PTR ds:0x430008,0x53dc
  40140c:	jne    0x40147c
  401412:	mov    eax,DWORD PTR [ebp-0x8]
  401415:	mov    ecx,DWORD PTR ds:0x4342d7
  40141b:	mov    ecx,DWORD PTR [ecx+0x198]
  401421:	add    DWORD PTR ds:0x43101c,0x42e010
  40142b:	xor    eax,esi
  40142d:	or     DWORD PTR ds:0x430000,0x43201c
  401437:	add    eax,edi
  401439:	and    DWORD PTR ds:0x43100c,0x5e05
  401443:	mov    DWORD PTR [ecx],eax
  401445:	movzx  eax,WORD PTR ds:0x43200c
  40144c:	or     DWORD PTR ds:0x42e004,eax
  401452:	mov    eax,DWORD PTR [ebp-0x8]
  401455:	adc    DWORD PTR ds:0x42e004,0x70db
  40145f:	xor    eax,esi
  401461:	or     DWORD PTR ds:0x432010,0x4354
  40146b:	add    eax,edi
  40146d:	mov    DWORD PTR ds:0x431008,0x6492
  401477:	mov    ds:0x43472b,eax
  40147c:	mov    eax,ds:0x4342d7
  401481:	mov    eax,DWORD PTR [eax+0x18c]
  401487:	sub    DWORD PTR ds:0x431000,0x42e024
  401491:	mov    eax,DWORD PTR [eax]
  401493:	or     DWORD PTR ds:0x42e01c,0x36
  40149d:	mov    DWORD PTR [ebp-0x7c],eax
  4014a0:	neg    DWORD PTR ds:0x42e01c
  4014a6:	mov    eax,0xf89c85bd
  4014ab:	mov    DWORD PTR [ebp-0x10],eax
  4014ae:	adc    DWORD PTR ds:0x431004,0x7bd1
  4014b8:	mov    DWORD PTR [ebp-0x10],eax
  4014bb:	or     DWORD PTR ds:0x42e028,0x5a2b
  4014c5:	mov    DWORD PTR [ebp-0x10],eax
  4014c8:	mov    DWORD PTR [ebp-0x18],0xf89c8581
  4014cf:	push   ebx
  4014d0:	mov    DWORD PTR [ebp-0x10],eax
  4014d3:	mov    ebx,DWORD PTR ds:0x42e024
  4014d9:	xor    DWORD PTR ds:0x42e018,ebx
  4014df:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  4014e6:	xor    DWORD PTR ds:0x430010,0x43100c
  4014f0:	mov    ebx,DWORD PTR [ebp-0x8]
  4014f3:	xor    ebx,esi
  4014f5:	add    ebx,edi
  4014f7:	mov    DWORD PTR ds:0x43100c,0xa17
  401501:	jmp    0x401639
  401506:	not    DWORD PTR ds:0x42e028
  40150c:	mov    eax,DWORD PTR [ebp-0xc]
  40150f:	xor    eax,esi
  401511:	lea    eax,[eax+ebx*1+0x3272e4]
  401518:	adc    DWORD PTR ds:0x43201c,0x42e00c
  401522:	push   eax
  401523:	xor    DWORD PTR ds:0x43200c,0x6ae7
  40152d:	mov    eax,DWORD PTR [ebp-0x18]
  401530:	xor    eax,esi
  401532:	or     DWORD PTR ds:0x42f010,0x432010
  40153c:	lea    eax,[ebp+eax*1+0x3272ec]
  401543:	sbb    DWORD PTR ds:0x42f018,0x7b10
  40154d:	push   eax
  40154e:	mov    DWORD PTR ds:0x431000,0x1b
  401558:	cmp    DWORD PTR ds:0x431000,0x0
  40155f:	je     0x40159f
  401565:	cmp    DWORD PTR ds:0x431000,0x1e
  40156c:	jl     0x40159f
  401572:	jmp    0x40158f
  401577:	push   0x8bad
  40157c:	push   0x43001c
  401581:	push   DWORD PTR [ebp-0x18]
  401584:	push   0x177c
  401589:	call   DWORD PTR ds:0x4348eb
  40158f:	mov    eax,ds:0x431000
  401594:	dec    eax
  401595:	mov    ds:0x431000,eax
  40159a:	jmp    0x401558
  40159f:	mov    eax,ds:0x4342d7
  4015a4:	sbb    DWORD PTR ds:0x42e010,0x430000
  4015ae:	push   DWORD PTR [eax+0x1bc]
  4015b4:	neg    DWORD PTR ds:0x42f008
  4015ba:	call   0x4026dd
  4015bf:	and    DWORD PTR ds:0x42e00c,0x0
  4015c9:	mov    eax,ds:0x42e00c
  4015ce:	inc    eax
  4015cf:	mov    ds:0x42e00c,eax
  4015d4:	cmp    DWORD PTR ds:0x42e00c,0x7
  4015db:	jbe    0x401623
  4015e1:	jmp    0x4015fb
  4015e6:	push   0x3590
  4015eb:	push   0x431004
  4015f0:	push   0x4340ed
  4015f5:	call   DWORD PTR ds:0x4348f3
  4015fb:	cmp    DWORD PTR ds:0x42e00c,0x6
  401602:	jne    0x401616
  401608:	xor    eax,eax
  40160a:	or     eax,DWORD PTR ds:0x42e00c
  401610:	inc    eax
  401611:	mov    ds:0x42e00c,eax
  401616:	cmp    DWORD PTR ds:0x42e00c,0x11
  40161d:	jb     0x4015c9
  401623:	mov    eax,DWORD PTR [ebp-0xc]
  401626:	xor    DWORD PTR ds:0x42e014,0xbbe
  401630:	xor    eax,esi
  401632:	lea    ebx,[ebx+eax*1+0x3272e4]
  401639:	and    DWORD PTR ds:0x431018,0x0
  401643:	jmp    0x401653
  401648:	mov    eax,ds:0x431018
  40164d:	inc    eax
  40164e:	mov    ds:0x431018,eax
  401653:	cmp    DWORD PTR ds:0x431018,0x10
  40165a:	jae    0x401697
  401660:	cmp    DWORD PTR ds:0x431018,0x1c
  401667:	ja     0x401697
  40166d:	jmp    0x401692
  401672:	push   0x490f
  401677:	push   0x4340d1
  40167c:	push   0x783a
  401681:	push   0x4340d1
  401686:	push   DWORD PTR [ebp-0x24]
  401689:	push   DWORD PTR [ebp-0x10]
  40168c:	call   DWORD PTR ds:0x4348f7
  401692:	jmp    0x401648
  401697:	mov    eax,DWORD PTR [ebp-0xc]
  40169a:	and    DWORD PTR ds:0x42e018,0x0
  4016a4:	jmp    0x4016b6
  4016a9:	mov    ecx,DWORD PTR ds:0x42e018
  4016af:	inc    ecx
  4016b0:	mov    DWORD PTR ds:0x42e018,ecx
  4016b6:	cmp    DWORD PTR ds:0x42e018,0x18
  4016bd:	jae    0x4016fd
  4016c3:	cmp    DWORD PTR ds:0x42e018,0xd
  4016ca:	jb     0x4016fd
  4016d0:	jmp    0x4016de
  4016d5:	push   DWORD PTR [ebp-0x10]
  4016d8:	call   DWORD PTR ds:0x4348fb
  4016de:	cmp    DWORD PTR ds:0x42e018,0xc
  4016e5:	jne    0x4016f8
  4016eb:	mov    ecx,DWORD PTR ds:0x42e018
  4016f1:	inc    ecx
  4016f2:	mov    DWORD PTR ds:0x42e018,ecx
  4016f8:	jmp    0x4016a9
  4016fd:	mov    ecx,DWORD PTR [ebp-0xc]
  401700:	sub    DWORD PTR ds:0x431010,0x5342
  40170a:	xor    ecx,esi
  40170c:	and    DWORD PTR ds:0x42e028,0x43001c
  401716:	xor    eax,esi
  401718:	sbb    DWORD PTR ds:0x42f01c,0x42f014
  401722:	add    eax,ecx
  401724:	and    DWORD PTR ds:0x430014,0x0
  40172e:	jmp    0x401740
  401733:	mov    ecx,DWORD PTR ds:0x430014
  401739:	inc    ecx
  40173a:	mov    DWORD PTR ds:0x430014,ecx
  401740:	cmp    DWORD PTR ds:0x430014,0x11
  401747:	jae    0x40178f
  40174d:	cmp    DWORD PTR ds:0x430014,0x9
  401754:	jb     0x40178f
  40175a:	jmp    0x401770
  40175f:	push   DWORD PTR [ebp-0x20]
  401762:	push   0x431010
  401767:	push   DWORD PTR [ebp-0x24]
  40176a:	call   DWORD PTR ds:0x4348ff
  401770:	cmp    DWORD PTR ds:0x430014,0x8
  401777:	jne    0x40178a
  40177d:	mov    ecx,DWORD PTR ds:0x430014
  401783:	inc    ecx
  401784:	mov    DWORD PTR ds:0x430014,ecx
  40178a:	jmp    0x401733
  40178f:	mov    ecx,DWORD PTR [ebp-0xc]
  401792:	add    DWORD PTR ds:0x43000c,0x42f000
  40179c:	xor    ecx,esi
  40179e:	mov    DWORD PTR ds:0x432018,0x6f3a
  4017a8:	lea    eax,[eax+ecx*1+0x9758ac]
  4017af:	mov    DWORD PTR ds:0x42e020,0x2e88
  4017b9:	cmp    ebx,eax
  4017bb:	jbe    0x401506
  4017c1:	mov    eax,DWORD PTR [ebp+0xc]
  4017c4:	sbb    DWORD PTR ds:0x43000c,0x7d71
  4017ce:	mov    ds:0x43415b,eax
  4017d3:	mov    eax,DWORD PTR [ebp+0x10]
  4017d6:	mov    DWORD PTR ds:0x42e000,0x12
  4017e0:	cmp    DWORD PTR ds:0x42e000,0x0
  4017e7:	je     0x401833
  4017ed:	cmp    DWORD PTR ds:0x42e000,0x9
  4017f4:	ja     0x401833
  4017fa:	jmp    0x401805
  4017ff:	call   DWORD PTR ds:0x43490b
  401805:	cmp    DWORD PTR ds:0x42e000,0xa
  40180c:	jne    0x40181f
  401812:	mov    ecx,DWORD PTR ds:0x42e000
  401818:	dec    ecx
  401819:	mov    DWORD PTR ds:0x42e000,ecx
  40181f:	xor    ecx,ecx
  401821:	xor    ecx,DWORD PTR ds:0x42e000
  401827:	dec    ecx
  401828:	mov    DWORD PTR ds:0x42e000,ecx
  40182e:	jmp    0x4017e0
  401833:	mov    ds:0x4343af,eax
  401838:	mov    ecx,DWORD PTR ds:0x41d0b2
  40183e:	mov    eax,ds:0x41d08e
  401843:	sub    eax,ecx
  401845:	or     ecx,DWORD PTR [ecx+eax*1]
  401848:	mov    eax,ds:0x43415b
  40184d:	mov    ecx,DWORD PTR [ebp-0x38]
  401850:	mov    DWORD PTR ds:0x43100c,0x6301
  40185a:	sub    eax,edi
  40185c:	and    DWORD PTR ds:0x431014,0x432000
  401866:	xor    eax,esi
  401868:	mov    DWORD PTR [ecx],eax
  40186a:	mov    eax,0x929
  40186f:	mov    eax,DWORD PTR [ebp-0x3c]
  401872:	cmp    eax,0xf89c8581
  401877:	mov    DWORD PTR ds:0x42f004,0x644a
  401881:	jne    0x401ddb
  401887:	push   0x43449b
  40188c:	xor    DWORD PTR ds:0x42f01c,0x1b49
  401896:	xor    ebx,ebx
  401898:	inc    ebx
  401899:	and    DWORD PTR ds:0x432000,0x430014
  4018a3:	push   ebx
  4018a4:	sub    DWORD PTR ds:0x430004,0x431008
  4018ae:	push   ebx
  4018af:	call   DWORD PTR ds:0x4348ef
  4018b5:	test   eax,eax
  4018b7:	mov    DWORD PTR ds:0x430018,0x4952
  4018c1:	jne    0x40257b
  4018c7:	sbb    DWORD PTR ds:0x430014,0x430018
  4018d1:	push   0x9
  4018d3:	sub    DWORD PTR ds:0x42f00c,0x6999
  4018dd:	push   0x4344b3
  4018e2:	call   DWORD PTR ds:0x4348e7
  4018e8:	or     DWORD PTR ds:0x43100c,0x43001c
  4018f2:	test   eax,eax
  4018f4:	mov    DWORD PTR ds:0x432014,0x2573
  4018fe:	jne    0x402557
  401904:	add    DWORD PTR ds:0x42e01c,0x43001c
  40190e:	push   0x4344cf
  401913:	adc    DWORD PTR ds:0x42f004,0x42f010
  40191d:	push   ebx
  40191e:	adc    DWORD PTR ds:0x42e010,0xbc4
  401928:	push   ebx
  401929:	call   DWORD PTR ds:0x434903
  40192f:	sbb    DWORD PTR ds:0x431004,0x430018
  401939:	test   eax,eax
  40193b:	jne    0x402557
  401941:	sbb    DWORD PTR ds:0x431008,0x42e018
  40194b:	push   0xd
  40194d:	push   0x4344df
  401952:	and    DWORD PTR ds:0x432004,0x5cbf
  40195c:	call   DWORD PTR ds:0x434907
  401962:	xor    DWORD PTR ds:0x431004,0x11cd
  40196c:	test   eax,eax
  40196e:	jne    0x40257b
  401974:	and    DWORD PTR ds:0x42e01c,0x1a36
  40197e:	lea    eax,[ebp-0x34]
  401981:	sbb    DWORD PTR ds:0x43001c,0x43101c
  40198b:	mov    DWORD PTR [ebp-0x9c],eax
  401991:	lea    eax,[ebp+0x4]
  401994:	mov    DWORD PTR [ebp-0x34],eax
  401997:	mov    DWORD PTR ds:0x42f00c,0x1c
  4019a1:	cmp    DWORD PTR ds:0x42f00c,0x0
  4019a8:	je     0x4019dc
  4019ae:	cmp    DWORD PTR ds:0x42f00c,0x23
  4019b5:	jl     0x4019dc
  4019bb:	jmp    0x4019c9
  4019c0:	push   DWORD PTR [ebp-0x20]
  4019c3:	call   DWORD PTR ds:0x43490f
  4019c9:	xor    eax,eax
  4019cb:	add    eax,DWORD PTR ds:0x42f00c
  4019d1:	dec    eax
  4019d2:	mov    ds:0x42f00c,eax
  4019d7:	jmp    0x4019a1
  4019dc:	mov    eax,DWORD PTR [ebp-0x34]
  4019df:	test   eax,eax
  4019e1:	je     0x4026ad
  4019e7:	xor    ecx,0x7030
  4019ed:	mov    eax,DWORD PTR [ebp-0x28]
  4019f0:	mov    ecx,DWORD PTR ds:0x43201c
  4019f6:	add    DWORD PTR ds:0x431014,ecx
  4019fc:	mov    eax,DWORD PTR [ebp-0xc]
  4019ff:	mov    eax,DWORD PTR [ebp-0x8]
  401a02:	add    ecx,0x1ea6
  401a08:	mov    DWORD PTR [ebp+0xc],eax
  401a0b:	inc    DWORD PTR ds:0x431014
  401a11:	mov    eax,eax
  401a13:	sbb    ecx,DWORD PTR ds:0x431010
  401a19:	mov    eax,ds:0x4342d7
  401a1e:	inc    ecx
  401a1f:	mov    eax,DWORD PTR [eax+0x1c8]
  401a25:	movzx  ecx,WORD PTR ds:0x432018
  401a2c:	adc    ecx,DWORD PTR ds:0x42e00c
  401a32:	mov    DWORD PTR ds:0x432018,ecx
  401a38:	mov    eax,DWORD PTR [eax]
  401a3a:	mov    DWORD PTR ds:0x42e028,0x4824
  401a44:	cdq    
  401a45:	mov    ebx,eax
  401a47:	and    DWORD PTR ds:0x42e000,0x7e6d
  401a51:	mov    eax,0xfabdbee5
  401a56:	and    DWORD PTR ds:0x42e000,0x0
  401a60:	jmp    0x401a74
  401a65:	xor    ecx,ecx
  401a67:	or     ecx,DWORD PTR ds:0x42e000
  401a6d:	inc    ecx
  401a6e:	mov    DWORD PTR ds:0x42e000,ecx
  401a74:	cmp    DWORD PTR ds:0x42e000,0x19
  401a7b:	jae    0x401ac2
  401a81:	cmp    DWORD PTR ds:0x42e000,0x4
  401a88:	jg     0x401ac2
  401a8e:	jmp    0x401aa3
  401a93:	push   0x43406f
  401a98:	push   0x400000
  401a9d:	call   DWORD PTR ds:0x434917
  401aa3:	cmp    DWORD PTR ds:0x42e000,0x3
  401aaa:	jne    0x401abd
  401ab0:	mov    ecx,DWORD PTR ds:0x42e000
  401ab6:	inc    ecx
  401ab7:	mov    DWORD PTR ds:0x42e000,ecx
  401abd:	jmp    0x401a65
  401ac2:	add    ebx,eax
  401ac4:	inc    ecx
  401ac5:	adc    edx,0xffffffff
  401ac8:	and    DWORD PTR ds:0x431018,0x0
  401ad2:	mov    ecx,DWORD PTR ds:0x431018
  401ad8:	inc    ecx
  401ad9:	mov    DWORD PTR ds:0x431018,ecx
  401adf:	cmp    DWORD PTR ds:0x431018,0xb
  401ae6:	jbe    0x401b26
  401aec:	jmp    0x401aff
  401af1:	push   DWORD PTR [ebp-0x10]
  401af4:	push   0x8792
  401af9:	call   DWORD PTR ds:0x43491b
  401aff:	cmp    DWORD PTR ds:0x431018,0xa
  401b06:	jne    0x401b19
  401b0c:	mov    ecx,DWORD PTR ds:0x431018
  401b12:	inc    ecx
  401b13:	mov    DWORD PTR ds:0x431018,ecx
  401b19:	cmp    DWORD PTR ds:0x431018,0x16
  401b20:	jb     0x401ad2
  401b26:	and    DWORD PTR [ebp-0x10],0x0
  401b2a:	and    DWORD PTR ds:0x42f01c,0x0
  401b34:	jmp    0x401b46
  401b39:	mov    ecx,DWORD PTR ds:0x42f01c
  401b3f:	inc    ecx
  401b40:	mov    DWORD PTR ds:0x42f01c,ecx
  401b46:	cmp    DWORD PTR ds:0x42f01c,0x13
  401b4d:	jae    0x401b8f
  401b53:	cmp    DWORD PTR ds:0x42f01c,0x5
  401b5a:	jl     0x401b8f
  401b60:	jmp    0x401b70
  401b65:	push   0x434057
  401b6a:	call   DWORD PTR ds:0x43491f
  401b70:	cmp    DWORD PTR ds:0x42f01c,0x4
  401b77:	jne    0x401b8a
  401b7d:	mov    ecx,DWORD PTR ds:0x42f01c
  401b83:	inc    ecx
  401b84:	mov    DWORD PTR ds:0x42f01c,ecx
  401b8a:	jmp    0x401b39
  401b8f:	xor    edx,0x0
  401b92:	or     ecx,DWORD PTR ds:0x430010
  401b98:	mov    DWORD PTR [ebp-0x6c],edx
  401b9b:	mov    edx,DWORD PTR [ebp+0xc]
  401b9e:	mov    DWORD PTR [ebp-0x14],edx
  401ba1:	mov    DWORD PTR ds:0x42f010,0x1d
  401bab:	cmp    DWORD PTR ds:0x42f010,0x0
  401bb2:	je     0x401c17
  401bb8:	cmp    DWORD PTR ds:0x42f010,0x7
  401bbf:	jl     0x401c17
  401bc5:	jmp    0x401beb
  401bca:	push   0x42e020
  401bcf:	push   DWORD PTR [ebp-0x18]
  401bd2:	push   0x8651
  401bd7:	push   0x3db4
  401bdc:	push   DWORD PTR [ebp-0x1c]
  401bdf:	push   DWORD PTR [ebp-0x20]
  401be2:	push   DWORD PTR [ebp-0x1c]
  401be5:	call   DWORD PTR ds:0x4348df
  401beb:	cmp    DWORD PTR ds:0x42f010,0x8
  401bf2:	jne    0x401c05
  401bf8:	mov    ecx,DWORD PTR ds:0x42f010
  401bfe:	dec    ecx
  401bff:	mov    DWORD PTR ds:0x42f010,ecx
  401c05:	mov    ecx,DWORD PTR ds:0x42f010
  401c0b:	dec    ecx
  401c0c:	mov    DWORD PTR ds:0x42f010,ecx
  401c12:	jmp    0x401bab
  401c17:	mov    ecx,0x8a29a12f
  401c1c:	xor    ebx,ecx
  401c1e:	add    DWORD PTR [ebp-0x14],eax
  401c21:	mov    DWORD PTR ds:0x42e018,0xcc4
  401c2b:	mov    edx,DWORD PTR [ebp-0x14]
  401c2e:	adc    DWORD PTR [ebp-0x10],0xffffffff
  401c32:	sub    DWORD PTR ds:0x431010,0x4c88
  401c3c:	xor    edx,ecx
  401c3e:	adc    DWORD PTR ds:0x430004,0x42e018
  401c48:	mov    DWORD PTR [ebp-0x5c],edx
  401c4b:	or     edx,DWORD PTR ds:0x432008
  401c51:	mov    edx,DWORD PTR [ebp-0x10]
  401c54:	sbb    DWORD PTR ds:0x430008,0x42f00c
  401c5e:	xor    edx,0x0
  401c61:	mov    DWORD PTR ds:0x42f00c,0x39c
  401c6b:	mov    DWORD PTR [ebp-0x58],edx
  401c6e:	cmp    DWORD PTR [ebp-0x5c],ebx
  401c71:	jne    0x401c83
  401c77:	mov    edx,DWORD PTR [ebp-0x6c]
  401c7a:	cmp    DWORD PTR [ebp-0x58],edx
  401c7d:	je     0x401ce0
  401c83:	adc    DWORD PTR ds:0x431014,ebx
  401c89:	mov    edx,DWORD PTR ds:0x4342d7
  401c8f:	or     DWORD PTR ds:0x42e024,0x432008
  401c99:	mov    edx,DWORD PTR [edx+0x1c0]
  401c9f:	add    DWORD PTR ds:0x42e018,0x430004
  401ca9:	mov    edx,DWORD PTR [edx]
  401cab:	xor    ebx,ebx
  401cad:	add    edx,eax
  401caf:	adc    ebx,0xffffffff
  401cb2:	xor    edx,ecx
  401cb4:	xor    ebx,0x0
  401cb7:	cmp    edx,0x70941fc9
  401cbd:	mov    DWORD PTR ds:0x432014,0x6222
  401cc7:	jne    0x4026ad
  401ccd:	cmp    ebx,0xffffffff
  401cd0:	mov    DWORD PTR ds:0x430010,0x168c
  401cda:	jne    0x4026ad
  401ce0:	mov    edx,DWORD PTR ds:0x434353
  401ce6:	or     DWORD PTR ds:0x42f01c,0x338f
  401cf0:	mov    ebx,DWORD PTR ds:0x43435b
  401cf6:	sbb    DWORD PTR ds:0x42f01c,0x42e008
  401d00:	xor    edx,ebx
  401d02:	and    DWORD PTR ds:0x432000,0x0
  401d0c:	jmp    0x401d1e
  401d11:	mov    ebx,DWORD PTR ds:0x432000
  401d17:	inc    ebx
  401d18:	mov    DWORD PTR ds:0x432000,ebx
  401d1e:	cmp    DWORD PTR ds:0x432000,0x1a
  401d25:	jae    0x401d62
  401d2b:	cmp    DWORD PTR ds:0x432000,0x29
  401d32:	jle    0x401d62
  401d38:	jmp    0x401d5d
  401d3d:	push   DWORD PTR [ebp-0xc]
  401d40:	push   0x0
  401d42:	push   0x8e65
  401d47:	push   0x432008
  401d4c:	push   0x77f3
  401d51:	push   DWORD PTR [ebp-0x24]
  401d54:	push   DWORD PTR [ebp-0x20]
  401d57:	call   DWORD PTR ds:0x4348e3
  401d5d:	jmp    0x401d11
  401d62:	mov    DWORD PTR ds:0x434353,edx
  401d68:	and    DWORD PTR ds:0x430000,0x0
  401d72:	mov    ebx,DWORD PTR ds:0x430000
  401d78:	inc    ebx
  401d79:	mov    DWORD PTR ds:0x430000,ebx
  401d7f:	cmp    DWORD PTR ds:0x430000,0x21
  401d86:	jge    0x401db8
  401d8c:	jmp    0x401dab
  401d91:	push   0x349e
  401d96:	push   0x42e01c
  401d9b:	push   0x2daf
  401da0:	push   0x5f77
  401da5:	call   DWORD PTR ds:0x4348eb
  401dab:	cmp    DWORD PTR ds:0x430000,0x14
  401db2:	jb     0x401d72
  401db8:	mov    edx,DWORD PTR [ebp-0x34]
  401dbb:	mov    ebx,DWORD PTR ds:0x434353
  401dc1:	add    ebx,DWORD PTR [edx]
  401dc3:	mov    DWORD PTR ds:0x42f004,edx
  401dc9:	mov    edx,DWORD PTR [ebp-0x34]
  401dcc:	mov    DWORD PTR ds:0x432010,0x3a94
  401dd6:	jmp    0x40266c
  401ddb:	mov    DWORD PTR ds:0x43101c,0x62ff
  401de5:	mov    eax,DWORD PTR [ebp-0x44]
  401de8:	mov    DWORD PTR ds:0x432000,0x1e78
  401df2:	cmp    eax,0xf89c8580
  401df7:	je     0x40206b
  401dfd:	xor    eax,eax
  401dff:	xor    eax,DWORD PTR ds:0x41d062
  401e05:	mov    ecx,DWORD PTR ds:0x433004
  401e0b:	sub    ecx,eax
  401e0d:	and    eax,DWORD PTR [eax+ecx*1]
  401e10:	mov    eax,DWORD PTR [ebp-0x8]
  401e13:	mov    ecx,DWORD PTR [ebp-0x48]
  401e16:	xor    eax,esi
  401e18:	or     DWORD PTR ds:0x42f000,0x42e00c
  401e22:	add    eax,edi
  401e24:	mov    DWORD PTR ds:0x431010,0x752e
  401e2e:	cmp    eax,ecx
  401e30:	mov    DWORD PTR ds:0x42e028,0x5f39
  401e3a:	je     0x40206b
  401e40:	and    DWORD PTR ds:0x432018,0x431008
  401e4a:	push   0x4345fb
  401e4f:	xor    esi,esi
  401e51:	adc    DWORD PTR ds:0x431008,0x430008
  401e5b:	inc    esi
  401e5c:	push   esi
  401e5d:	push   esi
  401e5e:	call   DWORD PTR ds:0x4348ef
  401e64:	adc    DWORD PTR ds:0x432018,0x1eff
  401e6e:	test   eax,eax
  401e70:	jne    0x40257b
  401e76:	adc    DWORD PTR ds:0x42f004,0x6493
  401e80:	push   0x9
  401e82:	push   0x434613
  401e87:	sub    DWORD PTR ds:0x432010,0x1cce
  401e91:	call   DWORD PTR ds:0x4348e7
  401e97:	and    DWORD PTR ds:0x42e020,0x42e000
  401ea1:	test   eax,eax
  401ea3:	mov    DWORD PTR ds:0x43000c,0x3dc5
  401ead:	jne    0x402557
  401eb3:	push   0x43462f
  401eb8:	or     DWORD PTR ds:0x43201c,0x7d24
  401ec2:	push   esi
  401ec3:	push   esi
  401ec4:	add    DWORD PTR ds:0x43101c,0x2a6c
  401ece:	call   DWORD PTR ds:0x434903
  401ed4:	or     DWORD PTR ds:0x431008,0x42e01c
  401ede:	test   eax,eax
  401ee0:	mov    DWORD PTR ds:0x430014,0x29eb
  401eea:	jne    0x402557
  401ef0:	add    DWORD PTR ds:0x432014,0x430014
  401efa:	push   0xd
  401efc:	push   0x43463f
  401f01:	neg    DWORD PTR ds:0x43000c
  401f07:	call   DWORD PTR ds:0x434907
  401f0d:	adc    DWORD PTR ds:0x43100c,0x4142
  401f17:	test   eax,eax
  401f19:	mov    DWORD PTR ds:0x43001c,0x44ef
  401f23:	jne    0x40257b
  401f29:	and    DWORD PTR ds:0x42e000,0x0
  401f33:	jmp    0x401f43
  401f38:	mov    eax,ds:0x42e000
  401f3d:	inc    eax
  401f3e:	mov    ds:0x42e000,eax
  401f43:	cmp    DWORD PTR ds:0x42e000,0x1e
  401f4a:	jae    0x401f92
  401f50:	cmp    DWORD PTR ds:0x42e000,0x12
  401f57:	jle    0x401f92
  401f5d:	jmp    0x401f75
  401f62:	push   DWORD PTR [ebp-0x10]
  401f65:	push   0x432004
  401f6a:	push   0x434000
  401f6f:	call   DWORD PTR ds:0x4348f3
  401f75:	cmp    DWORD PTR ds:0x42e000,0x11
  401f7c:	jne    0x401f8d
  401f82:	mov    eax,ds:0x42e000
  401f87:	inc    eax
  401f88:	mov    ds:0x42e000,eax
  401f8d:	jmp    0x401f38
  401f92:	mov    eax,ds:0x4342d7
  401f97:	and    DWORD PTR ds:0x432004,ecx
  401f9d:	mov    eax,DWORD PTR [eax+0x194]
  401fa3:	xor    DWORD PTR ds:0x432010,0x2285
  401fad:	mov    ecx,DWORD PTR [eax]
  401faf:	mov    eax,DWORD PTR [ecx+0x3c]
  401fb2:	push   DWORD PTR ds:0x4343af
  401fb8:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401fbc:	push   DWORD PTR ds:0x43415b
  401fc2:	sub    DWORD PTR ds:0x432018,0x4072
  401fcc:	add    eax,ecx
  401fce:	and    DWORD PTR ds:0x42f008,0x0
  401fd8:	jmp    0x401fea
  401fdd:	mov    ecx,DWORD PTR ds:0x42f008
  401fe3:	inc    ecx
  401fe4:	mov    DWORD PTR ds:0x42f008,ecx
  401fea:	cmp    DWORD PTR ds:0x42f008,0x1e
  401ff1:	jae    0x402048
  401ff7:	cmp    DWORD PTR ds:0x42f008,0x4
  401ffe:	jge    0x402048
  402004:	jmp    0x402029
  402009:	push   0x1e10
  40200e:	push   0x4340a5
  402013:	push   0x6e6c
  402018:	push   0x4340d1
  40201d:	push   DWORD PTR [ebp-0x18]
  402020:	push   DWORD PTR [ebp-0x28]
  402023:	call   DWORD PTR ds:0x4348f7
  402029:	cmp    DWORD PTR ds:0x42f008,0x3
  402030:	jne    0x402043
  402036:	mov    ecx,DWORD PTR ds:0x42f008
  40203c:	inc    ecx
  40203d:	mov    DWORD PTR ds:0x42f008,ecx
  402043:	jmp    0x401fdd
  402048:	mov    ecx,DWORD PTR ds:0x4342d7
  40204e:	mov    ecx,DWORD PTR [ecx+0x194]
  402054:	push   DWORD PTR [ecx]
  402056:	call   eax
  402058:	mov    ecx,DWORD PTR ds:0x4342d7
  40205e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402064:	mov    DWORD PTR [ecx],eax
  402066:	jmp    0x4026ad
  40206b:	push   0x4344f3
  402070:	xor    ebx,ebx
  402072:	inc    ebx
  402073:	push   ebx
  402074:	push   ebx
  402075:	call   DWORD PTR ds:0x4348ef
  40207b:	test   eax,eax
  40207d:	jne    0x40257b
  402083:	push   0x9
  402085:	push   0x43450b
  40208a:	call   DWORD PTR ds:0x4348e7
  402090:	test   eax,eax
  402092:	jne    0x402557
  402098:	push   0x434527
  40209d:	push   ebx
  40209e:	push   ebx
  40209f:	call   DWORD PTR ds:0x434903
  4020a5:	test   eax,eax
  4020a7:	jne    0x402557
  4020ad:	push   0xd
  4020af:	push   0x434537
  4020b4:	call   DWORD PTR ds:0x434907
  4020ba:	test   eax,eax
  4020bc:	jne    0x40257b
  4020c2:	push   0x43454b
  4020c7:	push   ebx
  4020c8:	push   ebx
  4020c9:	call   DWORD PTR ds:0x4348ef
  4020cf:	test   eax,eax
  4020d1:	jne    0x40257b
  4020d7:	push   0x9
  4020d9:	push   0x434563
  4020de:	call   DWORD PTR ds:0x4348e7
  4020e4:	test   eax,eax
  4020e6:	jne    0x402557
  4020ec:	push   0x43457f
  4020f1:	push   ebx
  4020f2:	push   ebx
  4020f3:	call   DWORD PTR ds:0x434903
  4020f9:	test   eax,eax
  4020fb:	jne    0x402557
  402101:	push   0xd
  402103:	push   0x43458f
  402108:	call   DWORD PTR ds:0x434907
  40210e:	test   eax,eax
  402110:	jne    0x40257b
  402116:	mov    eax,DWORD PTR [ebp-0x8]
  402119:	mov    ecx,DWORD PTR [ebp-0x7c]
  40211c:	xor    eax,esi
  40211e:	add    eax,edi
  402120:	cmp    eax,ecx
  402122:	jne    0x4024fe
  402128:	mov    eax,DWORD PTR [ebp-0x8]
  40212b:	mov    ecx,DWORD PTR ds:0x4342d7
  402131:	mov    ecx,DWORD PTR [ecx+0x198]
  402137:	xor    eax,esi
  402139:	add    eax,edi
  40213b:	cmp    eax,DWORD PTR [ecx]
  40213d:	jne    0x402160
  402143:	mov    eax,DWORD PTR [ebp-0x8]
  402146:	push   0xf89c8581
  40214b:	xor    eax,esi
  40214d:	add    eax,edi
  40214f:	push   eax
  402150:	push   0xf89c85bd
  402155:	push   DWORD PTR [ebp-0xc]
  402158:	push   DWORD PTR [ebp-0x8]
  40215b:	call   0x40e5e8
  402160:	mov    eax,DWORD PTR [ebp-0xc]
  402163:	mov    DWORD PTR [ebp-0x4c],eax
  402166:	mov    eax,DWORD PTR [ebp-0x8]
  402169:	mov    DWORD PTR [ebp-0x60],eax
  40216c:	mov    eax,DWORD PTR [ebp-0x60]
  40216f:	xor    eax,esi
  402171:	add    eax,edi
  402173:	mov    DWORD PTR [ebp+0x10],eax
  402176:	mov    eax,ds:0x434157
  40217b:	mov    eax,DWORD PTR [eax]
  40217d:	mov    DWORD PTR [ebp+0x10],eax
  402180:	mov    eax,ds:0x43435f
  402185:	mov    eax,DWORD PTR [eax]
  402187:	mov    DWORD PTR [ebp-0x18],eax
  40218a:	mov    DWORD PTR [ebp+0xc],0xf89c8781
  402191:	mov    eax,DWORD PTR [ebp+0xc]
  402194:	xor    eax,esi
  402196:	add    eax,edi
  402198:	mov    DWORD PTR [ebp+0xc],eax
  40219b:	mov    eax,ds:0x4342d7
  4021a0:	mov    DWORD PTR [ebp+0xc],eax
  4021a3:	mov    eax,DWORD PTR [ebp+0x10]
  4021a6:	mov    DWORD PTR [ebp+0xc],eax
  4021a9:	mov    eax,DWORD PTR [ebp+0xc]
  4021ac:	push   0x4
  4021ae:	pop    ecx
  4021af:	sub    ecx,eax
  4021b1:	add    ecx,DWORD PTR [ebp-0x18]
  4021b4:	mov    DWORD PTR [ebp-0x38],0xf89c85c1
  4021bb:	mov    DWORD PTR [ebp+0x10],ecx
  4021be:	mov    DWORD PTR [ebp-0x108],0xf89c85bd
  4021c8:	mov    eax,DWORD PTR [ebp+0xc]
  4021cb:	mov    DWORD PTR [ebp-0x104],eax
  4021d1:	mov    eax,DWORD PTR [ebp+0x10]
  4021d4:	mov    DWORD PTR [ebp-0x100],eax
  4021da:	mov    eax,DWORD PTR [ebp-0x38]
  4021dd:	xor    eax,esi
  4021df:	add    eax,edi
  4021e1:	mov    DWORD PTR [ebp-0xfc],eax
  4021e7:	lea    eax,[ebp-0x98]
  4021ed:	mov    DWORD PTR [ebp-0xf8],eax
  4021f3:	mov    eax,DWORD PTR [ebp-0x108]
  4021f9:	xor    eax,esi
  4021fb:	add    eax,edi
  4021fd:	mov    DWORD PTR [ebp-0x108],eax
  402203:	lea    eax,[ebp-0x108]
  402209:	push   eax
  40220a:	mov    eax,DWORD PTR [ebp-0x4c]
  40220d:	xor    eax,esi
  40220f:	add    eax,edi
  402211:	push   eax
  402212:	mov    eax,ds:0x4342f7
  402217:	push   0x43424d
  40221c:	push   DWORD PTR [eax]
  40221e:	call   0x409457
  402223:	mov    eax,DWORD PTR [ebp+0xc]
  402226:	mov    ecx,DWORD PTR [ebp+0x10]
  402229:	mov    DWORD PTR [ebp-0x84],ecx
  40222f:	mov    ecx,DWORD PTR [ebp-0x60]
  402232:	xor    ecx,esi
  402234:	mov    DWORD PTR [ebp-0x18],eax
  402237:	add    ecx,edi
  402239:	jmp    0x40249c
  40223e:	lea    edx,[ecx+eax*1]
  402241:	mov    DWORD PTR [ebp+0x10],edx
  402244:	mov    edx,DWORD PTR [ebp-0x84]
  40224a:	sub    edx,ecx
  40224c:	mov    DWORD PTR [ebp+0xc],edx
  40224f:	mov    edx,DWORD PTR [ebp+0xc]
  402252:	mov    DWORD PTR [ebp-0x54],edx
  402255:	mov    edx,DWORD PTR [ebp+0x10]
  402258:	mov    DWORD PTR [ebp-0x50],0xf89c8581
  40225f:	mov    DWORD PTR [ebp-0x6c],edx
  402262:	mov    DWORD PTR [ebp-0x24],0xf89c8580
  402269:	mov    edx,DWORD PTR [ebp-0x50]
  40226c:	xor    edx,esi
  40226e:	add    edx,edi
  402270:	mov    DWORD PTR [ebp+0x10],edx
  402273:	mov    edx,DWORD PTR [ebp-0x50]
  402276:	xor    edx,esi
  402278:	add    edx,edi
  40227a:	mov    DWORD PTR [ebp+0xc],edx
  40227d:	mov    DWORD PTR [ebp-0x68],0xf89c85a1
  402284:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  40228b:	mov    edx,DWORD PTR [ebp-0x50]
  40228e:	mov    ebx,DWORD PTR [ebp-0x54]
  402291:	xor    edx,esi
  402293:	add    edx,edi
  402295:	cmp    ebx,edx
  402297:	je     0x402490
  40229d:	mov    eax,DWORD PTR [ebp-0x24]
  4022a0:	xor    eax,esi
  4022a2:	mov    edx,0xffcd8d1c
  4022a7:	sub    edx,eax
  4022a9:	add    edx,DWORD PTR [ebp-0x54]
  4022ac:	mov    eax,DWORD PTR [ebp-0x24]
  4022af:	mov    ebx,DWORD PTR [ebp+0x10]
  4022b2:	xor    eax,esi
  4022b4:	add    eax,edi
  4022b6:	imul   eax,ebx
  4022b9:	cmp    eax,edx
  4022bb:	ja     0x40248d
  4022c1:	mov    edx,DWORD PTR [ebp+0x10]
  4022c4:	mov    eax,DWORD PTR [ebp-0x54]
  4022c7:	mov    ebx,DWORD PTR [ebp-0x68]
  4022ca:	sub    eax,edx
  4022cc:	xor    ebx,esi
  4022ce:	xor    edx,edx
  4022d0:	add    ebx,edi
  4022d2:	div    ebx
  4022d4:	mov    DWORD PTR [ebp+0xc],eax
  4022d7:	mov    eax,DWORD PTR [ebp-0x74]
  4022da:	mov    edx,DWORD PTR [ebp+0xc]
  4022dd:	xor    eax,esi
  4022df:	add    eax,edi
  4022e1:	cmp    edx,eax
  4022e3:	jbe    0x4022f3
  4022e9:	mov    eax,DWORD PTR [ebp-0x74]
  4022ec:	xor    eax,esi
  4022ee:	add    eax,edi
  4022f0:	mov    DWORD PTR [ebp+0xc],eax
  4022f3:	mov    eax,DWORD PTR [ebp-0x68]
  4022f6:	mov    edx,DWORD PTR [ebp+0xc]
  4022f9:	xor    eax,esi
  4022fb:	add    eax,edi
  4022fd:	imul   eax,edx
  402300:	mov    DWORD PTR [ebp+0xc],eax
  402303:	mov    eax,DWORD PTR [ebp-0x50]
  402306:	mov    edx,DWORD PTR [ebp+0xc]
  402309:	xor    eax,esi
  40230b:	add    eax,edi
  40230d:	cmp    edx,eax
  40230f:	je     0x402476
  402315:	mov    eax,DWORD PTR [ebp+0xc]
  402318:	mov    DWORD PTR [ebp-0x3c],eax
  40231b:	mov    eax,DWORD PTR [ebp+0x10]
  40231e:	add    eax,DWORD PTR [ebp-0x6c]
  402321:	mov    DWORD PTR [ebp-0x38],0xf89c8581
  402328:	mov    DWORD PTR [ebp-0x30],eax
  40232b:	mov    eax,0xf89c8580
  402330:	mov    DWORD PTR [ebp-0x64],eax
  402333:	mov    DWORD PTR [ebp-0x58],0xf89c8583
  40233a:	mov    DWORD PTR [ebp-0x10],0xf89c8582
  402341:	mov    DWORD PTR [ebp-0x2c],eax
  402344:	mov    eax,DWORD PTR [ebp-0x38]
  402347:	xor    eax,esi
  402349:	add    eax,edi
  40234b:	jmp    0x402432
  402350:	mov    DWORD PTR [ebp-0x78],0xf89c85bb
  402357:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  40235e:	mov    eax,DWORD PTR [ebp-0x2c]
  402361:	mov    edx,DWORD PTR [ebp+0xc]
  402364:	xor    eax,esi
  402366:	add    eax,edi
  402368:	imul   eax,edx
  40236b:	mov    edx,DWORD PTR [ebp-0x30]
  40236e:	mov    al,BYTE PTR [eax+edx*1]
  402371:	mov    BYTE PTR [ebp-0x1],al
  402374:	mov    eax,DWORD PTR [ebp-0x2c]
  402377:	mov    edx,DWORD PTR [ebp+0xc]
  40237a:	xor    eax,esi
  40237c:	add    eax,edi
  40237e:	imul   eax,edx
  402381:	mov    edx,DWORD PTR [ebp-0x58]
  402384:	xor    edx,esi
  402386:	add    eax,edx
  402388:	mov    edx,DWORD PTR [ebp-0x30]
  40238b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e4]
  402393:	mov    edx,DWORD PTR [ebp-0x78]
  402396:	xor    edx,esi
  402398:	lea    eax,[edx+eax*1+0x3272e4]
  40239f:	movzx  edx,BYTE PTR [ebp-0x1]
  4023a3:	xor    edx,eax
  4023a5:	mov    BYTE PTR [ebp-0x1],dl
  4023a8:	mov    al,BYTE PTR [ebp-0x1]
  4023ab:	mov    edx,DWORD PTR [ebp-0x2c]
  4023ae:	mov    ebx,DWORD PTR [ebp+0xc]
  4023b1:	xor    edx,esi
  4023b3:	add    edx,edi
  4023b5:	imul   edx,ebx
  4023b8:	mov    ebx,DWORD PTR [ebp-0x30]
  4023bb:	mov    BYTE PTR [edx+ebx*1],al
  4023be:	mov    eax,DWORD PTR [ebp-0x2c]
  4023c1:	mov    edx,DWORD PTR [ebp+0xc]
  4023c4:	xor    eax,esi
  4023c6:	add    eax,edi
  4023c8:	imul   eax,edx
  4023cb:	mov    edx,DWORD PTR [ebp-0x30]
  4023ce:	mov    al,BYTE PTR [eax+edx*1]
  4023d1:	mov    BYTE PTR [ebp-0x1],al
  4023d4:	mov    eax,DWORD PTR [ebp-0x2c]
  4023d7:	mov    edx,DWORD PTR [ebp+0xc]
  4023da:	xor    eax,esi
  4023dc:	add    eax,edi
  4023de:	imul   eax,edx
  4023e1:	mov    edx,DWORD PTR [ebp-0x64]
  4023e4:	xor    edx,esi
  4023e6:	add    eax,edx
  4023e8:	mov    edx,DWORD PTR [ebp-0x30]
  4023eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e4]
  4023f3:	mov    edx,DWORD PTR [ebp-0x80]
  4023f6:	xor    edx,esi
  4023f8:	lea    eax,[edx+eax*1+0x3272e4]
  4023ff:	movzx  edx,BYTE PTR [ebp-0x1]
  402403:	xor    edx,eax
  402405:	mov    BYTE PTR [ebp-0x1],dl
  402408:	mov    al,BYTE PTR [ebp-0x1]
  40240b:	mov    edx,DWORD PTR [ebp-0x2c]
  40240e:	mov    ebx,DWORD PTR [ebp+0xc]
  402411:	xor    edx,esi
  402413:	add    edx,edi
  402415:	imul   edx,ebx
  402418:	mov    ebx,DWORD PTR [ebp-0x30]
  40241b:	mov    BYTE PTR [edx+ebx*1],al
  40241e:	mov    eax,DWORD PTR [ebp-0x10]
  402421:	mov    edx,DWORD PTR [ebp-0x64]
  402424:	xor    eax,esi
  402426:	xor    edx,esi
  402428:	add    eax,edi
  40242a:	add    edx,edi
  40242c:	imul   eax,edx
  40242f:	add    eax,DWORD PTR [ebp+0xc]
  402432:	mov    DWORD PTR [ebp+0xc],eax
  402435:	mov    eax,DWORD PTR [ebp+0xc]
  402438:	mov    edx,DWORD PTR [ebp-0x3c]
  40243b:	cmp    edx,eax
  40243d:	jb     0x402350
  402443:	mov    eax,DWORD PTR [ebp-0x64]
  402446:	mov    edx,DWORD PTR [ebp-0x3c]
  402449:	xor    eax,esi
  40244b:	add    eax,edi
  40244d:	imul   eax,edx
  402450:	mov    edx,DWORD PTR [ebp-0x38]
  402453:	xor    edx,esi
  402455:	add    edx,edi
  402457:	or     eax,edx
  402459:	mov    edx,DWORD PTR [ebp-0x24]
  40245c:	xor    edx,esi
  40245e:	add    eax,edx
  402460:	mov    edx,DWORD PTR [ebp-0x24]
  402463:	xor    edx,esi
  402465:	add    eax,edx
  402467:	mov    edx,DWORD PTR [ebp+0x10]
  40246a:	lea    eax,[eax+edx*1+0x64e5c8]
  402471:	jmp    0x402485
  402476:	mov    eax,DWORD PTR [ebp-0x24]
  402479:	mov    edx,DWORD PTR [ebp+0x10]
  40247c:	xor    eax,esi
  40247e:	lea    eax,[eax+edx*1+0x3272e4]
  402485:	mov    DWORD PTR [ebp+0x10],eax
  402488:	jmp    0x40229d
  40248d:	mov    eax,DWORD PTR [ebp-0x18]
  402490:	mov    edx,DWORD PTR [ebp-0x4c]
  402493:	xor    edx,esi
  402495:	lea    ecx,[ecx+edx*1+0x3272e4]
  40249c:	lea    edx,[ecx-0x3272e4]
  4024a2:	xor    edx,esi
  4024a4:	cmp    edx,0xf89c9581
  4024aa:	jne    0x40223e
  4024b0:	mov    ecx,DWORD PTR [ebp-0x60]
  4024b3:	mov    edx,DWORD PTR [ebp-0x4c]
  4024b6:	mov    ebx,DWORD PTR [ebp-0x60]
  4024b9:	xor    edx,esi
  4024bb:	mov    dl,BYTE PTR [edx+eax*1+0x3272e4]
  4024c2:	xor    ecx,esi
  4024c4:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e4]
  4024cb:	xor    ebx,esi
  4024cd:	mov    BYTE PTR [ebx+eax*1+0x3272e4],dl
  4024d4:	mov    edx,DWORD PTR [ebp-0x4c]
  4024d7:	xor    edx,esi
  4024d9:	mov    BYTE PTR [edx+eax*1+0x3272e4],cl
  4024e0:	mov    eax,DWORD PTR [ebp-0x4c]
  4024e3:	mov    eax,DWORD PTR [ebp-0x8]
  4024e6:	xor    eax,esi
  4024e8:	add    eax,edi
  4024ea:	mov    ds:0x43435b,eax
  4024ef:	mov    eax,DWORD PTR [ebp-0x8]
  4024f2:	xor    eax,esi
  4024f4:	add    eax,edi
  4024f6:	xor    ebx,ebx
  4024f8:	mov    ds:0x434353,eax
  4024fd:	inc    ebx
  4024fe:	lea    eax,[ebp-0x40]
  402501:	mov    DWORD PTR [ebp-0x88],eax
  402507:	lea    eax,[ebp+0x4]
  40250a:	mov    DWORD PTR [ebp-0x40],eax
  40250d:	mov    eax,DWORD PTR [ebp-0x40]
  402510:	test   eax,eax
  402512:	je     0x4026ad
  402518:	push   0x4345a3
  40251d:	push   ebx
  40251e:	push   ebx
  40251f:	call   DWORD PTR ds:0x4348ef
  402525:	test   eax,eax
  402527:	jne    0x40257b
  40252d:	push   0x9
  40252f:	push   0x4345bb
  402534:	call   DWORD PTR ds:0x4348e7
  40253a:	test   eax,eax
  40253c:	jne    0x402557
  402542:	push   0x4345d7
  402547:	push   ebx
  402548:	push   ebx
  402549:	call   DWORD PTR ds:0x434903
  40254f:	test   eax,eax
  402551:	je     0x402566
  402557:	lea    eax,[ebp-0x20]
  40255a:	push   eax
  40255b:	call   DWORD PTR ds:0x4348a7
  402561:	jmp    0x4026c8
  402566:	push   0xd
  402568:	push   0x4345e7
  40256d:	call   DWORD PTR ds:0x434907
  402573:	test   eax,eax
  402575:	je     0x402582
  40257b:	xor    eax,eax
  40257d:	jmp    0x4026c8
  402582:	mov    DWORD PTR [ebp-0x94],0xf152c38
  40258c:	mov    DWORD PTR [ebp-0xa0],0x712ed0f
  402596:	mov    DWORD PTR [ebp-0x8c],0x373fc29
  4025a0:	mov    DWORD PTR [ebp-0x90],0x72670a19
  4025aa:	call   0x40e282
  4025af:	mov    eax,DWORD PTR [ebp-0x28]
  4025b2:	mov    eax,DWORD PTR [ebp-0xc]
  4025b5:	mov    eax,DWORD PTR [ebp-0x8]
  4025b8:	mov    DWORD PTR [ebp+0xc],eax
  4025bb:	mov    eax,eax
  4025bd:	mov    eax,ds:0x4342d7
  4025c2:	mov    eax,DWORD PTR [eax+0x1c8]
  4025c8:	mov    eax,DWORD PTR [eax]
  4025ca:	cdq    
  4025cb:	mov    ebx,eax
  4025cd:	mov    eax,0xfabdbee5
  4025d2:	add    ebx,eax
  4025d4:	adc    edx,0xffffffff
  4025d7:	and    DWORD PTR [ebp-0x10],0x0
  4025db:	xor    edx,0x0
  4025de:	mov    DWORD PTR [ebp-0x6c],edx
  4025e1:	mov    edx,DWORD PTR [ebp+0xc]
  4025e4:	mov    DWORD PTR [ebp-0x14],edx
  4025e7:	mov    ecx,0x8a29a12f
  4025ec:	xor    ebx,ecx
  4025ee:	add    DWORD PTR [ebp-0x14],eax
  4025f1:	mov    edx,DWORD PTR [ebp-0x14]
  4025f4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025f8:	xor    edx,ecx
  4025fa:	mov    DWORD PTR [ebp-0x5c],edx
  4025fd:	mov    edx,DWORD PTR [ebp-0x10]
  402600:	xor    edx,0x0
  402603:	mov    DWORD PTR [ebp-0x58],edx
  402606:	cmp    DWORD PTR [ebp-0x5c],ebx
  402609:	jne    0x40261b
  40260f:	mov    edx,DWORD PTR [ebp-0x6c]
  402612:	cmp    DWORD PTR [ebp-0x58],edx
  402615:	je     0x40264a
  40261b:	mov    edx,DWORD PTR ds:0x4342d7
  402621:	mov    edx,DWORD PTR [edx+0x1c0]
  402627:	mov    edx,DWORD PTR [edx]
  402629:	xor    ebx,ebx
  40262b:	add    edx,eax
  40262d:	adc    ebx,0xffffffff
  402630:	xor    edx,ecx
  402632:	xor    ebx,0x0
  402635:	cmp    edx,0x70941fc9
  40263b:	jne    0x4026ad
  402641:	cmp    ebx,0xffffffff
  402644:	jne    0x4026ad
  40264a:	mov    edx,DWORD PTR ds:0x434353
  402650:	mov    ebx,DWORD PTR ds:0x43435b
  402656:	xor    edx,ebx
  402658:	mov    DWORD PTR ds:0x434353,edx
  40265e:	mov    edx,DWORD PTR [ebp-0x40]
  402661:	mov    ebx,DWORD PTR ds:0x434353
  402667:	add    ebx,DWORD PTR [edx]
  402669:	mov    edx,DWORD PTR [ebp-0x40]
  40266c:	mov    DWORD PTR [edx],ebx
  40266e:	mov    edx,DWORD PTR [ebp+0xc]
  402671:	xor    esi,edx
  402673:	mov    edx,DWORD PTR ds:0x434353
  402679:	add    esi,edi
  40267b:	xor    ebx,ebx
  40267d:	add    esi,eax
  40267f:	adc    ebx,0xffffffff
  402682:	xor    edi,edi
  402684:	xor    esi,ecx
  402686:	xor    ebx,0x0
  402689:	add    edx,eax
  40268b:	adc    edi,0xffffffff
  40268e:	xor    edx,ecx
  402690:	xor    edi,0x0
  402693:	cmp    edx,esi
  402695:	jne    0x4026ad
  40269b:	cmp    edi,ebx
  40269d:	jne    0x4026ad
  4026a3:	mov    eax,ds:0x434353
  4026a8:	mov    ds:0x43435b,eax
  4026ad:	mov    eax,ds:0x4342d7
  4026b2:	push   0x4
  4026b4:	add    eax,0x1cc
  4026b9:	push   eax
  4026ba:	lea    eax,[ebp-0x28]
  4026bd:	push   eax
  4026be:	call   0x4026dd
  4026c3:	mov    eax,DWORD PTR [ebp-0x28]
  4026c6:	mov    eax,DWORD PTR [eax]
  4026c8:	pop    ebx
  4026c9:	pop    edi
  4026ca:	pop    esi
  4026cb:	leave  
  4026cc:	ret    0xc
  4026cf:	xor    eax,eax
  4026d1:	or     DWORD PTR ds:0x42e008,0x42e014
  4026db:	inc    eax
  4026dc:	ret    
  4026dd:	push   ebp
  4026de:	mov    ebp,esp
  4026e0:	sub    esp,0x10
  4026e3:	and    DWORD PTR ds:0x42e00c,0x0
  4026ed:	mov    ecx,DWORD PTR ds:0x42e00c
  4026f3:	inc    ecx
  4026f4:	mov    DWORD PTR ds:0x42e00c,ecx
  4026fa:	cmp    DWORD PTR ds:0x42e00c,0x1c
  402701:	jle    0x402724
  402707:	jmp    0x402717
  40270c:	push   0x2587
  402711:	call   DWORD PTR ds:0x4348fb
  402717:	cmp    DWORD PTR ds:0x42e00c,0x12
  40271e:	jb     0x4026ed
  402724:	mov    eax,0xf89c8581
  402729:	mov    DWORD PTR [ebp-0x4],eax
  40272c:	mov    DWORD PTR [ebp-0x8],0xf89c8580
  402733:	mov    ecx,DWORD PTR [ebp-0x4]
  402736:	or     DWORD PTR ds:0x432018,edi
  40273c:	push   esi
  40273d:	or     esi,DWORD PTR ds:0x432010
  402743:	mov    edx,0x751089d
  402748:	not    DWORD PTR ds:0x42f008
  40274e:	xor    ecx,edx
  402750:	mov    esi,0x3272e4
  402755:	push   edi
  402756:	add    DWORD PTR ds:0x42f014,0x430018
  402760:	mov    edi,DWORD PTR [ebp+0x10]
  402763:	adc    DWORD PTR ds:0x43201c,0x42f01c
  40276d:	add    ecx,esi
  40276f:	cmp    ecx,edi
  402771:	je     0x40700e
  402777:	mov    DWORD PTR ds:0x430010,0x10
  402781:	cmp    DWORD PTR ds:0x430010,0x0
  402788:	je     0x4027da
  40278e:	cmp    DWORD PTR ds:0x430010,0x6
  402795:	jge    0x4027da
  40279b:	jmp    0x4027ae
  4027a0:	push   0x66cf
  4027a5:	push   DWORD PTR [ebp-0xc]
  4027a8:	call   DWORD PTR ds:0x4348d7
  4027ae:	cmp    DWORD PTR ds:0x430010,0x7
  4027b5:	jne    0x4027c8
  4027bb:	mov    ecx,DWORD PTR ds:0x430010
  4027c1:	dec    ecx
  4027c2:	mov    DWORD PTR ds:0x430010,ecx
  4027c8:	mov    ecx,DWORD PTR ds:0x430010
  4027ce:	dec    ecx
  4027cf:	mov    DWORD PTR ds:0x430010,ecx
  4027d5:	jmp    0x402781
  4027da:	mov    ecx,DWORD PTR [ebp-0x4]
  4027dd:	mov    edi,DWORD PTR [ebp+0x10]
  4027e0:	xor    eax,eax
  4027e2:	or     DWORD PTR ds:0x431004,0x8da
  4027ec:	xor    ecx,edx
  4027ee:	sub    DWORD PTR ds:0x431000,0x3add
  4027f8:	add    ecx,esi
  4027fa:	add    edi,0xfabdbee5
  402800:	jmp    0x404b88
  402805:	lahf   
  402806:	es xor al,0x90
  402809:	mov    bl,0x70
  40280b:	fwait
  40280c:	icebp  
  40280d:	sub    ecx,DWORD PTR [esi]
  40280f:	adc    ebp,DWORD PTR [esi+0x7e]
  402812:	call   0x7272:0x72720769
  402819:	pop    es
  40281a:	pop    edi
  40281b:	jb     0x40288f
  40281d:	adc    eax,0x1139172c
  402822:	and    eax,0x36652f13
  402827:	popa   
  402828:	mov    di,WORD PTR [eax+0x62]
  40282c:	bound  ebp,QWORD PTR [ebp+0x4a]
  40282f:	(bad)
  402832:	push   0x53796340
  402837:	test   al,0x78
  402839:	ins    DWORD PTR es:[edi],dx
  40283a:	push   ecx
  40283b:	iret   
  40283c:	pop    ebp
  40283d:	inc    edx
  40283e:	cmp    BYTE PTR [edx+esi*8+0x4d577687],cl
  402845:	jg     0x40287e
  402847:	mov    BYTE PTR [esi+0x33bab87f],ah
  40284d:	sub    al,0xff
  40284f:	data16 fdivr st(2),st
  402852:	imul   edi,DWORD PTR [edi+0x1e],0xffffffed
  402856:	xor    ebp,ecx
  402858:	mov    dl,0xed
  40285a:	xchg   DWORD PTR [ebx],ebp
  40285c:	fiadd  WORD PTR [ebx-0x5caef0df]
  402862:	add    ah,0xf7
  402865:	ins    DWORD PTR es:[edi],dx
  402866:	fld    QWORD PTR [esp+edx*8]
  402869:	push   cs
  40286a:	repnz adc BYTE PTR es:[eax+0xc],al
  40286f:	arpl   WORD PTR es:[eax-0x4f],sp
  402873:	scas   eax,DWORD PTR es:[edi]
  402874:	sub    ebx,DWORD PTR [ecx+0x5]
  402877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402878:	jmp    ecx
  40287a:	inc    ecx
  40287b:	and    esi,DWORD PTR [edx+ecx*2-0x40]
  40287f:	push   ebx
  402880:	icebp  
  402881:	adc    dh,dl
  402883:	jo     0x40283e
  402885:	jnp    0x402864
  402887:	nop
  402888:	pop    edi
  402889:	cmp    DWORD PTR [ecx+0x499a1407],0xb
  402890:	sahf   
  402891:	cmp    al,0x8a
  402893:	mov    eax,DWORD PTR [ebx]
  402895:	shr    BYTE PTR ds:0x4b348d6a,cl
  40289b:	push   esp
  40289c:	sti    
  40289d:	iret   
  40289e:	and    BYTE PTR [ecx],0x81
  4028a1:	enter  0xccb7,0x80
  4028a5:	imul   esp,esp,0xc4c6a45
  4028ab:	or     esi,DWORD PTR ds:[esi]
  4028ae:	sbb    ebp,DWORD PTR [ebp+0x48a7c243]
  4028b4:	fadd   DWORD PTR [esi+edx*2]
  4028b7:	std    
  4028b8:	push   0x56
  4028ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028bb:	icebp  
  4028bc:	pusha  
  4028bd:	mov    edi,0xab115af0
  4028c2:	adc    BYTE PTR [ebp+eax*1+0x65],dh
  4028c6:	or     al,0x84
  4028c8:	and    BYTE PTR [esi-0x40722701],cl
  4028ce:	test   DWORD PTR [eax-0x13eb864e],eax
  4028d4:	repnz mov esi,0x10ad8b6a
  4028da:	scas   al,BYTE PTR es:[edi]
  4028db:	and    ah,BYTE PTR [edx+ebp*8+0x25]
  4028df:	scas   al,BYTE PTR es:[edi]
  4028e0:	(bad)  
  4028e1:	pop    edx
  4028e2:	ss pop eax
  4028e4:	jo     0x402879
  4028e6:	and    ecx,edi
  4028e8:	push   edx
  4028e9:	mov    cl,0xee
  4028eb:	imul   esi,DWORD PTR [edx+0x75],0x9
  4028ef:	hlt    
  4028f0:	in     al,0xc
  4028f2:	loopne 0x4028db
  4028f4:	lods   al,BYTE PTR ds:[esi]
  4028f5:	fneni(8087 only) 
  4028f7:	mov    cs,WORD PTR [edi]
  4028f9:	dec    ebx
  4028fa:	aad    0xad
  4028fc:	(bad)  
  4028fd:	in     eax,0x4e
  4028ff:	arpl   WORD PTR [ebp+esi*4-0x6c],dx
  402903:	adc    eax,0x6de47e09
  402908:	out    0x8,al
  40290a:	jmp    0x3fac:0x1c3a6d3f
  402911:	js     0x402977
  402913:	les    esp,FWORD PTR [edi-0xa]
  402916:	mov    bh,0x85
  402918:	dec    edi
  402919:	sbb    ah,dh
  40291b:	or     BYTE PTR [edi+0x4d],bl
  40291e:	cmp    dh,ah
  402920:	cs mov edx,ebp
  402923:	mov    fs,ebp
  402925:	dec    ebp
  402926:	out    dx,al
  402927:	jg     0x4028b6
  402929:	mov    al,ds:0x3ad9eda
  40292e:	cmp    bl,BYTE PTR [esi-0x5b169af2]
  402934:	cmp    al,0x1
  402936:	(bad)  
  402937:	push   ebx
  402938:	dec    esp
  402939:	nop
  40293a:	rcl    DWORD PTR ds:0x2c7222ca,cl
  402940:	xor    dh,cl
  402942:	out    0x55,al
  402944:	div    ebx
  402946:	inc    ebx
  402947:	daa    
  402948:	jnp    0x402984
  40294a:	pop    esi
  40294b:	mov    bh,BYTE PTR [ebx]
  40294d:	dec    esp
  40294e:	jnp    0x402920
  402950:	hlt    
  402951:	cld    
  402952:	jl     0x4028d5
  402954:	(bad)  
  402955:	(bad)
  402958:	retf   
  402959:	mov    esp,0x8c44c815
  40295e:	and    ebp,DWORD PTR [ebx+esi*8-0x16]
  402962:	(bad)  
  402963:	fstp   DWORD PTR [edi]
  402965:	call   FWORD PTR [edi]
  402967:	dec    ebp
  402968:	sbb    bh,BYTE PTR [ebx+0x6f]
  40296b:	daa    
  40296c:	cmp    ebp,DWORD PTR [edi+0x3e]
  40296f:	ret    
  402970:	ins    DWORD PTR es:[edi],dx
  402971:	loop   0x402981
  402973:	xchg   edx,eax
  402974:	cmp    DWORD PTR [ebx-0x8],edx
  402977:	shl    BYTE PTR [ecx-0x7ec8d826],cl
  40297d:	mov    esi,0x93474342
  402982:	into   
  402983:	adc    edi,DWORD PTR [edi+0x5bccf685]
  402989:	and    al,0x18
  40298b:	sub    al,0x94
  40298d:	mov    eax,ds:0x2dfca898
  402992:	fimul  WORD PTR [edx+eiz*8+0x58]
  402996:	mov    esp,?
  402998:	dec    eax
  402999:	or     dh,BYTE PTR [ebp-0x7f]
  40299c:	mov    eax,ds:0x96403758
  4029a1:	stc    
  4029a2:	adc    edx,DWORD PTR cs:[edx+0xb4d1c7a]
  4029a9:	inc    ecx
  4029aa:	aaa    
  4029ab:	imul   ebp,DWORD PTR [ebx-0x79a65289],0x5859df01
  4029b5:	fnstcw WORD PTR [edi]
  4029b7:	xchg   ebp,edi
  4029b9:	fxch   st(7)
  4029bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029bc:	leave  
  4029bd:	push   ds
  4029be:	push   ebp
  4029bf:	scas   al,BYTE PTR es:[edi]
  4029c0:	and    esi,edi
  4029c2:	xchg   bl,al
  4029c4:	jmp    0xa7d4:0xb269c7d4
  4029cb:	mov    esi,0xe94d3dbe
  4029d0:	cmp    al,0xd8
  4029d2:	inc    edi
  4029d3:	les    ecx,FWORD PTR [ecx]
  4029d5:	mov    ebx,0x9da9119d
  4029da:	push   es
  4029db:	js     0x4029db
  4029dd:	into   
  4029de:	(bad)  
  4029e0:	mov    al,ds:0x7280da7d
  4029e5:	mov    ch,0x2
  4029e7:	mov    al,ds:0x7f67cca1
  4029ec:	loop   0x40299f
  4029ee:	xor    BYTE PTR [ebx],cl
  4029f0:	add    al,0xc7
  4029f2:	cdq    
  4029f3:	dec    ebp
  4029f4:	ret    0x78
  4029f7:	les    eax,FWORD PTR [edi]
  4029f9:	add    eax,0x21741741
  4029fe:	leave  
  4029ff:	mov    edi,0x87329071
  402a04:	cwde   
  402a05:	push   ebp
  402a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a07:	adc    BYTE PTR es:[eax+0x4715ad5a],bh
  402a0e:	sub    dl,BYTE PTR [esi-0x45]
  402a11:	or     al,0xff
  402a13:	mov    eax,ds:0x6bef149b
  402a18:	xchg   ecx,eax
  402a19:	sbb    DWORD PTR [eax+edx*1],edi
  402a1c:	mov    ecx,0x7d5c3bc4
  402a21:	hlt    
  402a22:	mov    dl,0xd1
  402a24:	sub    bl,bh
  402a26:	cwde   
  402a27:	cmp    DWORD PTR [ecx],edx
  402a29:	mov    BYTE PTR [ebx+0xb4312b8],ch
  402a2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a33:	push   edi
  402a34:	push   ebx
  402a35:	cmp    eax,0xd19cfe53
  402a3a:	inc    ebx
  402a3b:	dec    edi
  402a3c:	or     eax,0xbad4546a
  402a41:	sub    cl,bh
  402a43:	aam    0x7b
  402a45:	std    
  402a46:	jle    0x402a0b
  402a48:	inc    esi
  402a49:	loop   0x402a86
  402a4b:	jo     0x402a50
  402a4d:	sbb    eax,0xeb790081
  402a52:	gs cmp al,0x23
  402a55:	jns    0x402ad3
  402a57:	and    eax,0x6365ee5a
  402a5c:	mov    ah,0xd0
  402a5e:	lea    ebp,[eax-0x5f9255]
  402a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a65:	pop    ebx
  402a66:	iret   
  402a67:	adc    eax,0x59b1886f
  402a6c:	jmp    0x3c9e5635
  402a71:	idiv   DWORD PTR [ebx]
  402a73:	or     al,0x28
  402a75:	dec    esi
  402a76:	pushf  
  402a77:	pop    ebx
  402a78:	jbe    0x402a54
  402a7a:	sti    
  402a7b:	push   edx
  402a7c:	dec    ebx
  402a7d:	fistp  QWORD PTR [esi+0x3c69dde8]
  402a83:	aas    
  402a84:	test   eax,0xf87e95a8
  402a89:	repz sbb eax,0x94a049b8
  402a8f:	aas    
  402a90:	cwde   
  402a91:	push   DWORD PTR [esi+edi*4]
  402a94:	pop    es
  402a95:	lock ss or al,bh
  402a99:	dec    esi
  402a9a:	sti    
  402a9b:	push   ss
  402a9c:	dec    ebx
  402a9d:	fcmove st,st(2)
  402a9f:	stos   BYTE PTR es:[edi],al
  402aa0:	aaa    
  402aa1:	mov    WORD PTR [ecx+0xb],ds
  402aa4:	jl     0x402af9
  402aa6:	in     eax,0xfa
  402aa8:	add    al,0x56
  402aaa:	pop    ebx
  402aab:	loope  0x402af5
  402aad:	xchg   DWORD PTR [edi],ebx
  402aaf:	push   ebp
  402ab0:	in     al,0x82
  402ab2:	xchg   edx,eax
  402ab3:	int3   
  402ab4:	(bad)  
  402ab5:	loopne 0x402a93
  402ab7:	inc    edi
  402ab8:	data16 aam 0xae
  402abb:	xor    ebp,DWORD PTR [ebx+0x70719457]
  402ac1:	pop    ecx
  402ac2:	(bad)  
  402ac3:	fiadd  DWORD PTR [edx+0x54f9f592]
  402ac9:	push   0xe7b5439
  402ace:	adc    al,0x42
  402ad0:	xor    dl,BYTE PTR [esp+edi*1]
  402ad3:	outs   dx,DWORD PTR ds:[esi]
  402ad4:	test   BYTE PTR [ebx],dl
  402ad6:	shl    BYTE PTR [esi+0x5f],0x11
  402ada:	iret   
  402adb:	and    eax,DWORD PTR [eax+0x223b8e88]
  402ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ae2:	xlat   BYTE PTR ds:[ebx]
  402ae3:	jp     0x402aac
  402ae5:	mov    esi,0x164def3a
  402aea:	ds jmp 0xbbfb:0x4b2023cc
  402af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402af3:	rcr    DWORD PTR [ebx+0x6a],cl
  402af6:	(bad)  
  402af8:	ret    0x6e5f
  402afb:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  402afd:	int3   
  402afe:	xchg   esi,eax
  402aff:	leave  
  402b00:	cmp    eax,0x8eeced91
  402b05:	dec    ebx
  402b06:	mov    bh,0xba
  402b08:	cmp    DWORD PTR [eax+eax*8-0x3a],edi
  402b0c:	loop   0x402aca
  402b0e:	jecxz  0x402a98
  402b10:	and    DWORD PTR [ecx+0x20],ecx
  402b13:	add    bh,BYTE PTR [eax]
  402b15:	idiv   DWORD PTR [eax]
  402b17:	(bad)  
  402b18:	pop    esi
  402b19:	inc    eax
  402b1a:	and    BYTE PTR [ebp-0x68e3bbf],cl
  402b20:	jnp    0x402ba1
  402b22:	test   eax,0x3d7d5341
  402b27:	ficomp WORD PTR [edi+0x2fbc8eb7]
  402b2d:	fxtract 
  402b2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b30:	jg     0x402b1d
  402b32:	in     al,dx
  402b33:	xchg   ecx,eax
  402b34:	ds in  eax,0x98
  402b37:	mov    eax,ds:0x534dd395
  402b3c:	inc    esi
  402b3d:	dec    eax
  402b3e:	nop
  402b3f:	inc    edi
  402b40:	retf   
  402b41:	sbb    BYTE PTR [eax+0x25],bh
  402b44:	in     eax,0xc1
  402b46:	stc    
  402b47:	fxch   st(7)
  402b49:	xchg   edx,eax
  402b4a:	and    bh,bl
  402b4c:	xchg   esp,eax
  402b4d:	xor    eax,0x83ee5617
  402b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b53:	sub    edx,DWORD PTR [edx+ebx*8+0x25]
  402b57:	(bad)  
  402b58:	clc    
  402b59:	std    
  402b5a:	push   ecx
  402b5b:	mov    cl,0x81
  402b5d:	adc    cl,BYTE PTR [ecx-0x58]
  402b60:	sbb    eax,0x5934e70c
  402b65:	add    BYTE PTR [eax+eiz*8],dl
  402b68:	(bad)  
  402b69:	jmp    0x402ba9
  402b6b:	mov    al,0xe0
  402b6d:	(bad)  
  402b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b70:	popf   
  402b71:	daa    
  402b72:	jnp    0x402b69
  402b74:	inc    eax
  402b75:	pop    edx
  402b76:	adc    ah,BYTE PTR [edi]
  402b78:	xchg   DWORD PTR [ebx-0x10f68b19],edi
  402b7e:	jg     0x402b18
  402b80:	xchg   edi,eax
  402b81:	pusha  
  402b82:	(bad)  
  402b84:	clc    
  402b85:	add    BYTE PTR [ebx],ch
  402b87:	nop
  402b88:	loopne 0x402b53
  402b8a:	enter  0x9d62,0x6e
  402b8e:	and    ecx,ecx
  402b90:	xor    DWORD PTR [ebx+0x19],edx
  402b93:	xchg   BYTE PTR cs:[ebx+0x45],bh
  402b97:	mov    edi,0xa53c9b9d
  402b9c:	add    esp,esi
  402b9e:	mov    BYTE PTR [ebp-0x72],dl
  402ba1:	jp     0x402ba7
  402ba3:	fwait
  402ba4:	sbb    eax,0x8fa9a477
  402ba9:	pop    edi
  402baa:	addr16 mov dh,0x6f
  402bad:	std    
  402bae:	pushf  
  402baf:	push   ss
  402bb0:	xchg   DWORD PTR [edi+0x1a],ebx
  402bb3:	(bad)  
  402bb4:	test   al,0x12
  402bb6:	xor    DWORD PTR [ecx],ebx
  402bb8:	xorps  xmm7,XMMWORD PTR [ebx+esi*4-0x41]
  402bbd:	sub    eax,DWORD PTR [esi]
  402bbf:	imul   eax,DWORD PTR [ebx+esi*4-0x26],0x53
  402bc4:	mov    dh,0xc5
  402bc6:	sub    ch,bh
  402bc8:	dec    esi
  402bc9:	sbb    eax,edx
  402bcb:	int3   
  402bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bcd:	push   es
  402bce:	repz enter 0xd721,0x33
  402bd3:	pop    edi
  402bd4:	dec    ebx
  402bd5:	xlat   BYTE PTR ds:[ebx]
  402bd6:	pop    ecx
  402bd7:	loope  0x402bf1
  402bd9:	dec    ecx
  402bda:	sbb    esi,DWORD PTR [ebp+0xde2d9f5]
  402be0:	(bad)  
  402be1:	ss enterw 0xe9a9,0x0
  402be7:	jmp    0x93e2:0x5abc4cb9
  402bee:	sub    al,0x7c
  402bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bf1:	fnstcw WORD PTR [ebx]
  402bf3:	hlt    
  402bf4:	sahf   
  402bf5:	sub    DWORD PTR [edi-0x35],ebx
  402bf8:	test   DWORD PTR [edx],0x5691a501
  402bfe:	sub    al,0x73
  402c00:	mov    esp,0x327e5555
  402c05:	xchg   esi,eax
  402c06:	mov    fs,ebp
  402c08:	pop    ebp
  402c09:	push   esp
  402c0a:	loope  0x402c5d
  402c0c:	cdq    
  402c0d:	(bad)  
  402c0e:	xchg   edi,eax
  402c0f:	cmc    
  402c10:	jmp    0x44d53bad
  402c15:	scas   eax,DWORD PTR es:[edi]
  402c16:	xor    dl,BYTE PTR [ecx-0x35]
  402c19:	ds mov bh,0xfa
  402c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c1d:	pusha  
  402c1e:	push   ebx
  402c1f:	and    eax,0x7739b2aa
  402c24:	imul   ebp,DWORD PTR [esp+eax*8+0x55],0x3167bf15
  402c2c:	dec    ebx
  402c2d:	jnp    0x402c63
  402c2f:	scas   al,BYTE PTR es:[edi]
  402c30:	adc    ebp,DWORD PTR [eax+0x5720eef1]
  402c36:	or     BYTE PTR [edi],ah
  402c38:	cmp    bl,cl
  402c3a:	out    dx,eax
  402c3b:	xchg   ecx,eax
  402c3c:	dec    ebp
  402c3d:	or     BYTE PTR [ebx-0x73],ah
  402c40:	leave  
  402c41:	in     al,0x34
  402c43:	push   ss
  402c44:	outs   dx,BYTE PTR ds:[esi]
  402c45:	(bad)  
  402c47:	rcr    ah,1
  402c49:	xchg   ebp,eax
  402c4a:	sub    eax,DWORD PTR [edi]
  402c4c:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  402c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c4f:	loopne 0x402cad
  402c51:	rcr    BYTE PTR [eax],cl
  402c53:	inc    edx
  402c54:	pop    ecx
  402c55:	or     bh,BYTE PTR [edx-0x5329cf9a]
  402c5b:	inc    eax
  402c5c:	inc    eax
  402c5d:	rcr    DWORD PTR [edi],0x52
  402c60:	pop    ecx
  402c61:	addr16 pop ds
  402c63:	stos   BYTE PTR es:[edi],al
  402c64:	mov    ds:0xd99acede,eax
  402c69:	push   0xffffffb5
  402c6b:	out    dx,al
  402c6c:	into   
  402c6d:	cmc    
  402c6e:	ins    DWORD PTR es:[edi],dx
  402c6f:	inc    ebx
  402c70:	push   0xf92766d8
  402c75:	xchg   ebx,eax
  402c76:	in     eax,0x9e
  402c78:	pop    eax
  402c79:	call   0xc91d:0x96fbcd63
  402c80:	dec    BYTE PTR [edi+0x25]
  402c83:	mov    bl,0x8
  402c85:	outs   dx,BYTE PTR ds:[esi]
  402c86:	icebp  
  402c87:	in     al,dx
  402c88:	pop    edx
  402c89:	add    eax,0xc03823b
  402c8e:	pcmpeqd mm6,QWORD PTR ds:0x12261e
  402c95:	(bad)  
  402c97:	arpl   WORD PTR [eax-0x31],di
  402c9a:	mov    eax,0x23212f49
  402c9f:	cli    
  402ca0:	lds    ecx,FWORD PTR [eax+0x2f]
  402ca3:	retf   
  402ca4:	stc    
  402ca5:	in     eax,0x26
  402ca7:	and    ah,cl
  402ca9:	push   eax
  402caa:	xor    eax,0x6e1d783a
  402caf:	lods   eax,DWORD PTR ds:[esi]
  402cb0:	jecxz  0x402c5b
  402cb2:	fdivr  QWORD PTR [ebp-0x17]
  402cb5:	jmp    0x5839:0x7fd3d0b5
  402cbc:	in     eax,0xd3
  402cbe:	sub    DWORD PTR [esi+0x36],0x9d8b4817
  402cc5:	cld    
  402cc6:	jmp    0xc4568114
  402ccb:	mov    dh,0x61
  402ccd:	lock mov edi,0xf19f26ca
  402cd3:	les    edx,FWORD PTR [esi-0xd74349c]
  402cd9:	and    BYTE PTR [esi],bl
  402cdb:	in     eax,0x7f
  402cdd:	pop    es
  402cde:	and    al,0xb7
  402ce0:	push   ds
  402ce1:	dec    ebx
  402ce2:	mov    ch,0xf8
  402ce4:	ror    DWORD PTR [ebx+0x6ac6ccb2],cl
  402cea:	adc    al,0xc1
  402cec:	mov    eax,0xedd6f074
  402cf1:	mov    ds:0x8bc76c72,eax
  402cf6:	enter  0x8966,0x76
  402cfa:	out    dx,eax
  402cfb:	mov    al,ds:0xa245f4de
  402d00:	sbb    eax,0xebbac1d0
  402d05:	scas   eax,DWORD PTR es:[edi]
  402d06:	xchg   ebp,eax
  402d07:	inc    esp
  402d08:	lods   al,BYTE PTR ds:[esi]
  402d09:	(bad)  
  402d0a:	aam    0xee
  402d0c:	lds    ebp,FWORD PTR [edx]
  402d0e:	ins    BYTE PTR es:[edi],dx
  402d0f:	test   eax,0x914d52c5
  402d14:	inc    ebx
  402d15:	dec    esi
  402d16:	and    al,0x99
  402d18:	lods   eax,DWORD PTR ds:[esi]
  402d19:	inc    esp
  402d1a:	out    0x90,al
  402d1c:	retf   
  402d1d:	pop    ds
  402d1e:	cwde   
  402d1f:	inc    edx
  402d20:	mov    esp,0xff06109d
  402d25:	cmp    esi,edx
  402d27:	jg     0x402d58
  402d29:	pop    eax
  402d2a:	mov    edx,0x2b3823d8
  402d2f:	out    dx,eax
  402d30:	gs jo  0x402d00
  402d33:	iret   
  402d34:	adc    ch,BYTE PTR [ebp-0xa292a19]
  402d3a:	cs jb  0x402d86
  402d3d:	adc    eax,0xcd0f22a4
  402d42:	inc    ecx
  402d43:	cmp    DWORD PTR [ebp+0x17628657],edi
  402d49:	ret    
  402d4a:	ror    dl,0x19
  402d4d:	mov    BYTE PTR [edi-0x28],ah
  402d50:	call   0xe460fd34
  402d55:	scas   eax,DWORD PTR es:[edi]
  402d56:	add    ah,BYTE PTR [esi+0x75]
  402d59:	xor    edx,0xe00b93dd
  402d5f:	std    
  402d60:	mov    al,ds:0x2093af99
  402d65:	mov    eax,0x5b873a7d
  402d6a:	in     al,0x83
  402d6c:	out    dx,al
  402d6d:	mov    eax,0xab64e22d
  402d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d73:	push   ebx
  402d74:	shl    BYTE PTR [eax],1
  402d76:	call   0xb93f7c6e
  402d7b:	lods   al,BYTE PTR ds:[esi]
  402d7c:	mov    eax,0xd2be2be4
  402d81:	mov    ebx,0xf98a2648
  402d86:	iret   
  402d87:	mov    edx,0x700daa69
  402d8c:	or     ebx,DWORD PTR [esi-0x1d69d663]
  402d92:	test   DWORD PTR [eax-0x3d436143],eax
  402d98:	ins    DWORD PTR es:[edi],dx
  402d99:	pop    esp
  402d9a:	jecxz  0x402dda
  402d9c:	pop    edi
  402d9d:	mov    ch,BYTE PTR [edx-0x24]
  402da0:	xor    esi,DWORD PTR [edi+0x449943a6]
  402da6:	lods   al,BYTE PTR ds:[esi]
  402da7:	fwait
  402da8:	inc    edi
  402da9:	push   es
  402daa:	fwait
  402dab:	rcl    BYTE PTR [edx+edi*4-0x3ec1f017],0xee
  402db3:	test   DWORD PTR [edi+0x25f2006],eax
  402db9:	in     al,dx
  402dba:	out    0x35,al
  402dbc:	dec    ebp
  402dbd:	(bad)  
  402dbe:	cs push esp
  402dc0:	adc    edx,DWORD PTR [ebx-0x64384b43]
  402dc6:	clc    
  402dc7:	add    BYTE PTR [eax],ah
  402dc9:	jns    0x402e3b
  402dcb:	ja     0x402d9d
  402dcd:	loop   0x402dcb
  402dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dd0:	sub    ch,BYTE PTR [edi-0x36]
  402dd3:	xchg   ecx,eax
  402dd4:	sbb    al,0xe3
  402dd6:	aaa    
  402dd7:	inc    esp
  402dd8:	xor    BYTE PTR [ecx],0x96
  402ddb:	sbb    al,0xa7
  402ddd:	dec    ebp
  402dde:	add    eax,0xad195e93
  402de3:	call   FWORD PTR [ecx]
  402de5:	push   ss
  402de6:	ret    
  402de7:	test   DWORD PTR [esp+edx*1+0x36],ebp
  402deb:	pop    ecx
  402dec:	jg     0x402e54
  402dee:	lock in al,dx
  402df0:	sets   BYTE PTR [ecx+0x77]
  402df4:	int    0x1
  402df6:	xor    BYTE PTR [edx+0x25f9f76d],0xcf
  402dfd:	shl    BYTE PTR [ebp-0x7b],0x4a
  402e01:	(bad)  
  402e02:	mov    esp,0x3574e712
  402e07:	mov    eax,0x1660ec3d
  402e0c:	div    DWORD PTR [esi+0x4c8aa821]
  402e12:	mov    eax,ds:0x62cd26b7
  402e17:	pop    ss
  402e18:	pop    edi
  402e19:	lods   al,BYTE PTR ds:[esi]
  402e1a:	(bad)  
  402e1b:	not    dh
  402e1d:	dec    edi
  402e1e:	pop    ebx
  402e1f:	hlt    
  402e20:	loop   0x402e0d
  402e22:	bound  ebp,QWORD PTR [esi+0x5e]
  402e25:	inc    ecx
  402e26:	sub    esi,DWORD PTR [edx+0x759fcc4b]
  402e2c:	sub    al,0x16
  402e2e:	es das 
  402e30:	les    ebp,FWORD PTR [ecx+eiz*4]
  402e33:	test   BYTE PTR [edx],ch
  402e35:	cli    
  402e36:	jno    0x402e82
  402e38:	push   ds
  402e39:	sbb    ecx,0x63
  402e3c:	cmp    ebx,DWORD PTR [edx+0x37ba905a]
  402e42:	xchg   edi,eax
  402e43:	lods   al,BYTE PTR ds:[esi]
  402e44:	add    BYTE PTR [ecx+0x52],bl
  402e47:	or     eax,0xa7701930
  402e4c:	or     eax,DWORD PTR [esi]
  402e4e:	mov    bh,0x41
  402e50:	ins    BYTE PTR es:[edi],dx
  402e51:	in     al,0xb8
  402e53:	xor    edi,ecx
  402e55:	repz or edx,DWORD PTR ds:0xb08e0d5
  402e5c:	lods   eax,DWORD PTR ds:[esi]
  402e5d:	mov    dl,ah
  402e5f:	stc    
  402e60:	sar    DWORD PTR [esi],1
  402e62:	dec    eax
  402e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e64:	(bad)  
  402e65:	pop    es
  402e66:	imul   ecx,DWORD PTR [ecx-0x6b],0xffffffb2
  402e6a:	sub    al,0x2c
  402e6c:	data16 test al,0x98
  402e6f:	inc    esp
  402e70:	dec    ebx
  402e71:	stos   BYTE PTR es:[edi],al
  402e72:	and    al,BYTE PTR [edi-0x30b9c553]
  402e78:	jnp    0x402e2c
  402e7a:	mov    ds:0xdcab5f8a,eax
  402e7f:	idiv   BYTE PTR [esi-0x67]
  402e82:	push   es
  402e83:	test   eax,0x686b0128
  402e88:	cmp    DWORD PTR [ebp-0x21],0x78
  402e8c:	les    esp,FWORD PTR [ebp-0x2dba75f5]
  402e92:	sbb    DWORD PTR [ebp+0x4d],0xffffffc7
  402e96:	test   eax,0x22acbb40
  402e9b:	dec    ebp
  402e9c:	pop    es
  402e9d:	lock sub al,0x9
  402ea0:	addr16 es fcmovnbe st,st(0)
  402ea4:	call   0xaac9:0x6bb44cac
  402eab:	adc    eax,0x777e8239
  402eb0:	nop
  402eb1:	add    edi,eax
  402eb3:	adc    DWORD PTR [ecx+0x41],esp
  402eb6:	jmp    0x346e:0xec0ffa3e
  402ebd:	and    DWORD PTR [ecx],0xec61ea1a
  402ec3:	leave  
  402ec4:	aad    0x81
  402ec6:	xlat   BYTE PTR ds:[ebx]
  402ec7:	loop   0x402f2f
  402ec9:	jns    0x402ecd
  402ecb:	arpl   WORD PTR [edx-0x7404e18d],dx
  402ed1:	mov    bl,0xa3
  402ed3:	mov    al,0xac
  402ed5:	push   es
  402ed6:	out    0x3a,al
  402ed8:	aam    0x90
  402eda:	clc    
  402edb:	jne    0x402f3b
  402edd:	push   0xffffffd8
  402edf:	xor    DWORD PTR [ebx-0x2b91a394],esi
  402ee5:	pop    ds
  402ee6:	es repnz retf 
  402ee9:	fist   DWORD PTR [ebp+0x1a]
  402eec:	sub    al,0x68
  402eee:	mov    ebx,0x783daea7
  402ef3:	or     dl,BYTE PTR [ecx]
  402ef5:	jb     0x402f2e
  402ef7:	add    BYTE PTR [edi],dh
  402ef9:	bound  edi,QWORD PTR [eax-0x591cd47]
  402eff:	pop    edx
  402f00:	adc    esp,edx
  402f02:	inc    esp
  402f03:	sub    eax,0x9d0a2512
  402f08:	jae    0x402f80
  402f0a:	lahf   
  402f0b:	jge    0x402f2c
  402f0d:	pop    ds
  402f0e:	mov    ch,0xd4
  402f10:	out    0x96,eax
  402f12:	cmp    BYTE PTR [eax],ch
  402f14:	mov    bl,0x9e
  402f16:	ret    
  402f17:	sub    edx,edx
  402f19:	sbb    BYTE PTR ds:0x5fbd1bca,0x97
  402f20:	cmc    
  402f21:	sbb    dh,BYTE PTR [ebx-0x2b]
  402f24:	(bad)  
  402f25:	xor    ebx,DWORD PTR [ecx+0x57]
  402f28:	fisub  DWORD PTR [ebp-0x16]
  402f2b:	je     0x402f37
  402f2d:	cmp    eax,0x93bfb0f0
  402f32:	outs   dx,DWORD PTR ds:[esi]
  402f33:	push   ss
  402f34:	test   DWORD PTR [edx],0x26e55706
  402f3a:	sar    BYTE PTR [ecx],0x6f
  402f3d:	pop    edx
  402f3e:	inc    edx
  402f3f:	inc    edi
  402f40:	xchg   esp,eax
  402f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f42:	inc    esp
  402f43:	popf   
  402f44:	imul   esi,DWORD PTR [edi],0xffffffa5
  402f47:	inc    esp
  402f48:	pop    esp
  402f49:	pop    ebp
  402f4a:	xor    al,0x4b
  402f4c:	mov    al,0x86
  402f4e:	push   edx
  402f4f:	ins    BYTE PTR es:[edi],dx
  402f50:	xchg   esi,eax
  402f51:	pop    esp
  402f52:	pusha  
  402f53:	xchg   edx,esi
  402f55:	jo     0x402f09
  402f57:	jnp    0x402f5d
  402f59:	fwait
  402f5a:	in     eax,dx
  402f5b:	xor    al,0x7f
  402f5d:	push   cs
  402f5e:	jp     0x402f8f
  402f60:	inc    ebx
  402f61:	int3   
  402f62:	jmp    0x8f87:0xc07dc982
  402f69:	push   edx
  402f6a:	pop    ds
  402f6b:	jne    0x402f47
  402f6d:	cmp    eax,0x9153494d
  402f72:	fwait
  402f73:	dec    ecx
  402f74:	test   al,0x4e
  402f76:	xor    ah,dl
  402f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f79:	xchg   esp,eax
  402f7a:	clc    
  402f7b:	push   edi
  402f7c:	jecxz  0x402f09
  402f7e:	clc    
  402f7f:	adc    dh,BYTE PTR [edx]
  402f81:	push   esp
  402f82:	(bad)  
  402f83:	xchg   edi,eax
  402f84:	clc    
  402f85:	pushf  
  402f86:	mov    cl,0xc3
  402f88:	repz inc edx
  402f8a:	clc    
  402f8b:	add    cl,BYTE PTR [edi+0x37d4a56b]
  402f91:	sbb    dh,ah
  402f93:	xchg   DWORD PTR [edx-0x7c643ab2],ebx
  402f99:	mov    edx,0x267e42c6
  402f9e:	mov    DWORD PTR [ebx],ecx
  402fa0:	int3   
  402fa1:	(bad)  
  402fa2:	pusha  
  402fa3:	clc    
  402fa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fa5:	mov    bh,0xce
  402fa7:	stc    
  402fa8:	jg     0x402f88
  402faa:	or     eax,0xb869dcc4
  402faf:	push   eax
  402fb0:	xchg   BYTE PTR [ebx],dl
  402fb2:	xor    al,0xc6
  402fb4:	sti    
  402fb5:	dec    ebx
  402fb6:	pop    es
  402fb7:	call   0x60f4:0xfb217659
  402fbe:	jle    0x402fb1
  402fc0:	and    ebx,DWORD PTR [ebx]
  402fc2:	dec    ebp
  402fc3:	jg     0x402fbc
  402fc5:	popa   
  402fc6:	ja     0x402ff0
  402fc8:	(bad)  
  402fc9:	mov    cl,0x63
  402fcb:	gs add al,0xcc
  402fce:	or     ebp,edx
  402fd0:	pop    es
  402fd1:	xchg   ecx,eax
  402fd2:	ja     0x402fe5
  402fd4:	mov    dh,0x62
  402fd6:	pop    ss
  402fd7:	mov    al,ds:0x9be21aac
  402fdc:	outs   dx,DWORD PTR ds:[esi]
  402fdd:	pop    ds
  402fde:	mov    ebp,0xe0cb339c
  402fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fe4:	mov    bl,0x41
  402fe6:	push   es
  402fe7:	mov    ch,BYTE PTR [edi-0x76]
  402fea:	pop    es
  402feb:	ret    0xa9ec
  402fee:	push   eax
  402fef:	pop    esi
  402ff0:	mov    bl,BYTE PTR [eax-0x45]
  402ff3:	or     ebp,DWORD PTR cs:[edi+0xd]
  402ff7:	popf   
  402ff8:	xchg   ebp,eax
  402ff9:	shl    DWORD PTR [ecx+eiz*1-0x12c55d20],1
  403000:	rol    BYTE PTR [edx-0x14f6f3dc],0xaa
  403007:	mov    ss,ebp
  403009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40300a:	dec    edi
  40300b:	int    0xc9
  40300d:	out    dx,al
  40300e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40300f:	pop    ss
  403010:	dec    edx
  403011:	xchg   DWORD PTR ds:0xb4e73ccb,eax
  403017:	mov    edx,0xb844e959
  40301c:	test   BYTE PTR [edi-0x1bd2f019],dh
  403022:	pop    esp
  403023:	mov    ebx,0xb1b4cbbe
  403028:	outs   dx,BYTE PTR ds:[esi]
  403029:	push   cs
  40302a:	mov    bl,0x5a
  40302c:	inc    ebx
  40302d:	repz pop ecx
  40302f:	pop    edi
  403030:	mov    ebp,ss
  403032:	jmp    0x4e32:0xbab1861
  403039:	ret    
  40303a:	pop    esp
  40303b:	stos   DWORD PTR es:[edi],eax
  40303c:	pop    ebp
  40303d:	pop    edi
  40303e:	ret    
  40303f:	popa   
  403040:	stos   DWORD PTR es:[edi],eax
  403041:	cld    
  403042:	call   0xeb19:0x32f4213c
  403049:	mov    cl,0x18
  40304b:	ins    DWORD PTR es:[edi],dx
  40304c:	stos   DWORD PTR es:[edi],eax
  40304d:	sub    al,BYTE PTR [edi+0x610b370c]
  403053:	(bad)  
  403054:	dec    ebx
  403056:	test   al,0xde
  403058:	rcl    BYTE PTR [ebp+0x15e1d14e],1
  40305e:	pop    ebx
  40305f:	push   ds
  403060:	enter  0xe6d6,0x70
  403064:	les    edi,FWORD PTR [edi+ebp*4]
  403067:	and    esp,edx
  403069:	mov    dl,0xc9
  40306b:	mov    dh,0x18
  40306d:	xchg   edi,eax
  40306e:	adc    cl,ah
  403070:	stos   BYTE PTR es:[edi],al
  403071:	mov    BYTE PTR [ecx],dh
  403073:	inc    ecx
  403074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403075:	or     eax,0x31e6ba47
  40307a:	addr16 mov eax,0xc87a90ed
  403080:	je     0x403025
  403082:	shl    eax,0x39
  403085:	retf   
  403086:	test   eax,0x9f3ed9b9
  40308b:	dec    ecx
  40308c:	shl    DWORD PTR [ebp+0x4b20f4fe],0xfc
  403093:	je     0x40310f
  403095:	inc    edx
  403096:	addr16 sub al,0xe8
  403099:	lock mov dh,0x51
  40309c:	rcl    BYTE PTR [edx-0x6d251636],1
  4030a2:	push   0x49b851ee
  4030a7:	push   eax
  4030a8:	push   ecx
  4030a9:	ret    
  4030aa:	push   ebp
  4030ab:	outs   dx,DWORD PTR ds:[esi]
  4030ac:	iret   
  4030ad:	out    0x91,al
  4030af:	test   edi,0x59a2a96a
  4030b5:	sub    ah,dl
  4030b7:	sbb    cl,ah
  4030b9:	clc    
  4030ba:	adc    eax,0xffffffec
  4030bd:	outs   dx,BYTE PTR ds:[esi]
  4030be:	(bad)  
  4030c0:	cli    
  4030c1:	xchg   esi,eax
  4030c2:	dec    eax
  4030c3:	sbb    DWORD PTR [ebx],ebp
  4030c5:	fist   WORD PTR [edx]
  4030c7:	ret    0xc634
  4030ca:	push   ecx
  4030cb:	sbb    DWORD PTR [ebx+0x3584f7a0],ebx
  4030d1:	test   DWORD PTR [ecx],edx
  4030d3:	sbb    BYTE PTR [ebx],ch
  4030d5:	out    0x2,eax
  4030d7:	fwait
  4030d8:	mov    cl,0xd8
  4030da:	je     0x4030d7
  4030dc:	or     ebp,edx
  4030de:	not    BYTE PTR [edi]
  4030e0:	das    
  4030e1:	pop    eax
  4030e2:	xlat   BYTE PTR ds:[ebx]
  4030e3:	fs nop
  4030e5:	fcomp  DWORD PTR [esi]
  4030e7:	add    eax,DWORD PTR [ebx]
  4030e9:	and    edx,esi
  4030eb:	adc    BYTE PTR [eax+ebx*4],bh
  4030ee:	test   eax,0x9a0b3c6b
  4030f3:	mov    edi,0xf778090d
  4030f8:	call   0x1dd25777
  4030fd:	adc    DWORD PTR [edx],ecx
  4030ff:	in     al,0x71
  403101:	inc    esi
  403102:	sbb    esp,DWORD PTR [edi-0x145dc378]
  403108:	int3   
  403109:	cli    
  40310a:	(bad)  
  40310b:	push   0xf610e618
  403110:	add    edi,DWORD PTR [ebp+0x623b7f81]
  403116:	inc    edi
  403117:	sti    
  403118:	icebp  
  403119:	lea    esp,[ecx]
  40311b:	xlat   BYTE PTR ds:[ebx]
  40311c:	push   edi
  40311d:	ret    0xbfcc
  403120:	inc    esp
  403121:	pop    es
  403122:	pusha  
  403123:	mov    ebp,0x58ce4540
  403128:	pushf  
  403129:	repz xor al,0x2e
  40312c:	sar    DWORD PTR [edx+0x3a48d942],1
  403132:	test   DWORD PTR [edx-0x70],0xba7c0eda
  403139:	add    ax,0x228e
  40313d:	ja     0x40313d
  40313f:	in     eax,0x57
  403141:	pop    edi
  403142:	fnsave [ebx+0x3048aa67]
  403148:	sti    
  403149:	cmp    DWORD PTR [esi-0x45],edx
  40314c:	(bad)  
  40314d:	leave  
  40314e:	cwde   
  40314f:	and    eax,0x40ef7e1f
  403154:	jne    0x40312a
  403156:	pcmpeqd mm7,QWORD PTR [ecx+0x67]
  40315a:	cmp    esp,DWORD PTR [edx+0x47]
  40315d:	xchg   BYTE PTR ds:0xf13d36d0,al
  403163:	jmp    0xa8b4a2cc
  403168:	and    ch,ah
  40316a:	cs stos BYTE PTR es:[edi],al
  40316c:	push   eax
  40316d:	xor    BYTE PTR [edx],al
  40316f:	cmp    BYTE PTR [eax+0x60],0xe
  403173:	xchg   esi,eax
  403174:	inc    ecx
  403175:	cmp    bl,cl
  403177:	sbb    al,0x6e
  403179:	call   0xfdb4d99
  40317e:	fldenv [edx+0xf]
  403181:	bound  esp,QWORD PTR [eax+0x71fdac8]
  403187:	inc    edi
  403188:	aas    
  403189:	push   ebx
  40318a:	outs   dx,DWORD PTR ds:[esi]
  40318b:	popa   
  40318c:	ret    
  40318d:	add    BYTE PTR [edx+0x4b43a262],ch
  403193:	push   0x8b923e47
  403198:	aas    
  403199:	push   eax
  40319a:	or     cl,BYTE PTR [edx]
  40319c:	loope  0x403176
  40319e:	dec    ebp
  40319f:	push   esp
  4031a0:	aad    0x30
  4031a2:	cmc    
  4031a3:	mov    ch,0xae
  4031a5:	mov    ecx,0x5cfe697c
  4031aa:	cmp    esi,esp
  4031ac:	mov    bl,0xa5
  4031ae:	(bad)  
  4031af:	retf   
  4031b0:	es pop ss
  4031b2:	sbb    cl,BYTE PTR [edi]
  4031b4:	icebp  
  4031b5:	inc    esi
  4031b6:	(bad)  
  4031b7:	mov    BYTE PTR [eax+0x15],al
  4031ba:	rol    DWORD PTR [ecx],0xc6
  4031bd:	popa   
  4031be:	add    BYTE PTR ds:0x9e62114,ch
  4031c4:	(bad)  [edi]
  4031c6:	push   ebp
  4031c7:	mov    ch,0x6
  4031c9:	sbb    bl,BYTE PTR [esi+edx*4]
  4031cc:	stc    
  4031cd:	call   0x2bfc:0x15d31f16
  4031d4:	mov    ebp,0x91b65c8f
  4031d9:	cmp    ah,ch
  4031db:	or     ah,BYTE PTR [edi-0x64e1681e]
  4031e1:	push   ss
  4031e2:	or     eax,0xecfe01d
  4031e7:	sub    BYTE PTR [esi+0x7b],bl
  4031ea:	xchg   DWORD PTR [eax],ebp
  4031ec:	or     ebp,DWORD PTR [ecx]
  4031ee:	in     eax,0xa1
  4031f0:	mov    al,0x74
  4031f2:	mov    ebx,0x40066e05
  4031f7:	mov    BYTE PTR [esi],bl
  4031f9:	dec    edi
  4031fa:	adc    eax,0x6a87cb91
  4031ff:	iret   
  403200:	daa    
  403201:	test   DWORD PTR [ebx+ecx*8+0x42],edi
  403205:	arpl   cx,dx
  403207:	xchg   ebx,eax
  403208:	sar    ebx,1
  40320a:	dec    ebx
  40320b:	out    0x6d,al
  40320d:	xlat   BYTE PTR ds:[ebx]
  40320e:	add    DWORD PTR [ebp+0x65],esi
  403211:	ja     0x403213
  403213:	inc    ebx
  403214:	push   ecx
  403215:	dec    ebp
  403216:	stos   DWORD PTR es:[edi],eax
  403217:	pop    edi
  403218:	and    DWORD PTR [edx+0x69ae58b3],esi
  40321e:	xor    BYTE PTR [ecx],dl
  403220:	push   0x58
  403222:	leave  
  403223:	ds pop edx
  403225:	xor    DWORD PTR [edi+0x3e],0xd8012269
  40322c:	cld    
  40322d:	vunpcklpd ymm2,ymm2,YMMWORD PTR ds:0x419794a5
  403235:	inc    esi
  403236:	mov    ch,0x54
  403238:	add    al,0x16
  40323a:	cli    
  40323b:	ret    0x1b5b
  40323e:	or     dh,0x8d
  403241:	push   ss
  403242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403243:	and    edx,DWORD PTR [ebp+0x43ec63d8]
  403249:	mov    ecx,DWORD PTR [ebx]
  40324b:	sub    al,0xe7
  40324d:	pushf  
  40324e:	outs   dx,DWORD PTR ds:[esi]
  40324f:	cmp    eax,0x38525745
  403254:	(bad)  
  403256:	xor    DWORD PTR [ebp*2+0x780e6833],0x9090e6e9
  403261:	dec    ebp
  403262:	jno    0x4031ff
  403264:	sti    
  403265:	mov    ah,0xb3
  403267:	loope  0x4031fd
  403269:	out    0xff,eax
  40326b:	inc    edx
  40326c:	mov    cl,0xe6
  40326e:	push   ds
  40326f:	or     al,BYTE PTR [esi-0x563cd033]
  403275:	add    BYTE PTR [esi+0x69b53b82],0x69
  40327c:	ficomp WORD PTR [ebx+0x56]
  40327f:	cmc    
  403280:	sub    BYTE PTR [ecx+eiz*8+0x381bbbb],0x4a
  403288:	mov    ch,0xf7
  40328a:	push   ecx
  40328b:	jb     0x403268
  40328d:	stos   BYTE PTR es:[edi],al
  40328e:	pusha  
  40328f:	inc    eax
  403290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403291:	sbb    BYTE PTR [ebx+0x1b279e7f],0xf2
  403298:	xor    BYTE PTR [ecx+0x3e736ac6],ch
  40329e:	jge    0x4032ed
  4032a0:	sbb    eax,0x5280e096
  4032a5:	test   al,0x79
  4032a7:	mov    eax,ds:0x4f8145fb
  4032ac:	xchg   edi,eax
  4032ad:	inc    esi
  4032ae:	jno    0x403326
  4032b0:	jbe    0x40326b
  4032b2:	push   0xbfb0114b
  4032b7:	xor    DWORD PTR [esi-0x80],esi
  4032ba:	popf   
  4032bb:	jbe    0x40332c
  4032bd:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4032bf:	inc    ebx
  4032c0:	loope  0x40328e
  4032c2:	add    ecx,DWORD PTR [edi-0x44]
  4032c5:	push   eax
  4032c6:	fnstsw WORD PTR [eax-0x60]
  4032c9:	cmp    eax,0x2766f7bf
  4032ce:	cmp    DWORD PTR [edi],ebx
  4032d0:	xchg   BYTE PTR [esi],bh
  4032d2:	jbe    0x403282
  4032d4:	add    DWORD PTR [ecx+0x44],esi
  4032d7:	std    
  4032d8:	jg     0x4032e2
  4032da:	xor    BYTE PTR [ebx-0x55],dl
  4032dd:	cdq    
  4032de:	xchg   ebx,eax
  4032df:	add    al,0xce
  4032e1:	or     esi,0x40909b71
  4032e7:	aad    0x70
  4032e9:	push   ebx
  4032ea:	mov    bh,0x28
  4032ec:	(bad)  
  4032ed:	test   DWORD PTR [eax-0x60eaff35],eax
  4032f3:	xchg   ebp,eax
  4032f4:	sbb    eax,0x5b514237
  4032f9:	neg    BYTE PTR [esi+0x6]
  4032fc:	and    esp,DWORD PTR [esi-0x5a]
  4032ff:	jp     0x40330e
  403301:	push   ebp
  403302:	mov    edi,DWORD PTR [edi-0xc]
  403305:	repz sbb edi,DWORD PTR [ebp-0x38806391]
  40330c:	rcr    BYTE PTR [ecx],0x83
  40330f:	jmp    0x3eca:0xe0122f3c
  403316:	xchg   ebp,eax
  403317:	push   esi
  403318:	fadd   QWORD PTR ds:0xd72d8ccb
  40331e:	mov    ebp,0x5252a52c
  403323:	ror    DWORD PTR [ebx+0xa402c35],cl
  403329:	call   DWORD PTR [esi-0x45]
  40332c:	ficomp WORD PTR [esi+0x72]
  40332f:	or     al,0x6c
  403331:	inc    edi
  403332:	je     0x4033a2
  403334:	outs   dx,DWORD PTR ds:[esi]
  403335:	fnstsw WORD PTR [ebx+edx*8+0x71]
  403339:	adc    ah,dl
  40333b:	ins    DWORD PTR es:[edi],dx
  40333c:	ret    0x4a77
  40333f:	mov    al,ds:0xcb0f55e7
  403344:	ss push 0x7336eb3e
  40334a:	imul   esp,DWORD PTR [edx],0x59
  40334d:	inc    edx
  40334e:	leave  
  40334f:	iret   
  403350:	nop
  403351:	out    dx,eax
  403352:	stos   DWORD PTR es:[edi],eax
  403353:	sar    DWORD PTR [eax+0x574cc207],0x9a
  40335a:	leave  
  40335b:	adc    DWORD PTR [ecx+eax*8-0x3ecd8ee8],ebp
  403362:	lods   eax,DWORD PTR ds:[esi]
  403363:	fisttp QWORD PTR [edi-0x1d]
  403366:	das    
  403367:	bound  ebx,QWORD PTR [edi+eax*4]
  40336a:	rol    BYTE PTR [ecx],0x6f
  40336d:	sub    eax,0x8e4d068b
  403372:	sbb    DWORD PTR ds:0xdba27fc3,0xae423d14
  40337c:	or     eax,0xda49274a
  403381:	in     al,0x4f
  403383:	mov    bh,0x68
  403385:	fadd   DWORD PTR [eax-0x79eac567]
  40338b:	or     dl,dh
  40338d:	inc    esi
  40338e:	push   esp
  40338f:	push   0xffffffc0
  403391:	popf   
  403392:	aaa    
  403393:	or     ah,BYTE PTR [edx+0x4f]
  403396:	mov    bh,0x88
  403398:	jg     0x403378
  40339a:	out    dx,eax
  40339b:	clc    
  40339c:	repnz sub DWORD PTR [esi+0x54],edi
  4033a0:	fucom  st(1)
  4033a2:	imul   edi,ebx,0x66b21301
  4033a8:	repz or ah,dl
  4033ab:	push   es
  4033ac:	(bad)  
  4033ad:	stc    
  4033ae:	dec    edi
  4033af:	ins    BYTE PTR es:[edi],dx
  4033b0:	test   cl,ah
  4033b2:	cmp    eax,0x784c74cc
  4033b7:	inc    ecx
  4033b8:	repz das 
  4033ba:	or     bh,BYTE PTR [eax]
  4033bc:	add    DWORD PTR [ebx+0x3eaa1380],ecx
  4033c2:	clc    
  4033c3:	pushf  
  4033c4:	das    
  4033c5:	(bad)  
  4033c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033c7:	push   esi
  4033c8:	xchg   bh,dl
  4033ca:	popa   
  4033cb:	imul   ecx,edi,0x6a
  4033ce:	push   ds
  4033cf:	scas   eax,DWORD PTR es:[edi]
  4033d0:	pushf  
  4033d1:	js     0x403385
  4033d3:	cld    
  4033d4:	mov    al,ds:0xd345c634
  4033d9:	dec    eax
  4033da:	mov    esi,0x7842278b
  4033df:	fldcw  WORD PTR [esi+0x78]
  4033e2:	iret   
  4033e3:	fs adc eax,0x66c6cf2
  4033e9:	inc    esp
  4033ea:	mov    eax,edx
  4033ec:	into   
  4033ed:	jge    0x4033aa
  4033ef:	or     al,0xb
  4033f1:	(bad)  
  4033f2:	icebp  
  4033f3:	or     al,0x91
  4033f5:	dec    ebp
  4033f6:	dec    ecx
  4033f7:	data16 xor al,0xd
  4033fa:	push   ebx
  4033fb:	icebp  
  4033fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033fd:	shl    DWORD PTR [ebp+0x45],cl
  403400:	jo     0x4033fe
  403402:	imul   ecx,DWORD PTR [ebx],0xffffffe1
  403405:	xchg   BYTE PTR [eax-0x41],bl
  403408:	dec    esp
  403409:	fs iret 
  40340b:	dec    edi
  40340c:	dec    edi
  40340d:	mov    BYTE PTR [esi-0x21],ch
  403410:	mov    esi,0xb6d2441c
  403415:	sahf   
  403416:	test   ah,al
  403418:	stos   DWORD PTR es:[edi],eax
  403419:	imul   ecx,DWORD PTR [edi],0x85871320
  40341f:	mov    ds:0xb0251d40,al
  403424:	cmp    DWORD PTR [edi-0x59baf410],0xfffffffd
  40342b:	bound  ebx,QWORD PTR [esi+0x2a]
  40342e:	push   edi
  40342f:	sti    
  403430:	std    
  403431:	push   esp
  403432:	pop    ss
  403433:	mov    dl,0x68
  403435:	inc    BYTE PTR [ebx]
  403437:	pop    ebp
  403438:	inc    esp
  403439:	test   eax,0x99a7a0f6
  40343e:	dec    ecx
  40343f:	xchg   edi,eax
  403440:	xor    esp,esi
  403442:	push   edx
  403443:	pop    ebp
  403444:	dec    esi
  403445:	icebp  
  403446:	div    dh
  403448:	mul    BYTE PTR ds:[edx]
  40344b:	adc    DWORD PTR [eax],ebp
  40344d:	ins    DWORD PTR es:[edi],dx
  40344e:	fs rcl ebp,1
  403451:	hlt    
  403452:	loopne 0x4034a1
  403454:	test   ah,al
  403456:	mov    ah,0x45
  403458:	test   DWORD PTR [ecx],esp
  40345a:	add    ebp,DWORD PTR [ebx+ebx*2]
  40345d:	loope  0x4034ae
  40345f:	push   0xffffffca
  403461:	xor    eax,0xa667a236
  403466:	push   0xb6f8468d
  40346b:	push   esp
  40346c:	ret    
  40346d:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40346f:	rcl    DWORD PTR [esi],1
  403471:	jge    0x4034a9
  403473:	dec    ebx
  403474:	or     eax,0xe10a5be5
  403479:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40347b:	test   al,0xba
  40347d:	push   esi
  40347e:	push   ebx
  40347f:	iret   
  403480:	xor    bl,BYTE PTR [edx]
  403482:	mov    edi,0x37c2dd22
  403487:	cli    
  403488:	xor    eax,0xca026a39
  40348d:	cld    
  40348e:	mov    esi,DWORD PTR [edi+0x52cb12fa]
  403494:	cmp    bl,0x17
  403497:	mov    dl,0xe1
  403499:	popa   
  40349a:	mov    dh,0xfb
  40349c:	into   
  40349d:	mov    ebx,0x9e3dfadd
  4034a2:	xchg   ebp,eax
  4034a3:	xchg   BYTE PTR [edx],ch
  4034a5:	mov    bh,0xcd
  4034a7:	sbb    DWORD PTR [ecx],eax
  4034a9:	cld    
  4034aa:	jo     0x4034e0
  4034ac:	cmp    edx,DWORD PTR [edi]
  4034ae:	lock lds ebp,FWORD PTR [esi]
  4034b1:	fsub   QWORD PTR [esi]
  4034b3:	dec    esp
  4034b4:	or     eax,0xff77a258
  4034b9:	mov    eax,DWORD PTR [edx]
  4034bb:	pop    ecx
  4034bc:	adc    al,0xb6
  4034be:	sub    BYTE PTR [ebx+0x233edbb5],ah
  4034c4:	into   
  4034c5:	lahf   
  4034c6:	fsub   st(3),st
  4034c8:	(bad)
  4034cc:	adc    ch,BYTE PTR [edx]
  4034ce:	mov    ebx,0x5ac3b4bc
  4034d3:	test   DWORD PTR ds:0x4206f4ba,ebp
  4034d9:	cld    
  4034da:	add    DWORD PTR [eax+ebx*1],ebp
  4034dd:	(bad)  
  4034de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034df:	pusha  
  4034e0:	mov    ds:0x4cf84008,eax
  4034e5:	inc    eax
  4034e6:	loopne 0x403545
  4034e8:	fwait
  4034e9:	jecxz  0x403473
  4034eb:	inc    edx
  4034ec:	inc    eax
  4034ed:	sub    ah,ah
  4034ef:	inc    esp
  4034f0:	push   cs
  4034f1:	push   ecx
  4034f2:	add    dh,BYTE PTR [ebp+0x1929a08]
  4034f8:	je     0x403559
  4034fa:	mov    dl,0x52
  4034fc:	nop
  4034fd:	jmp    0x403494
  4034ff:	and    al,0x72
  403501:	shl    DWORD PTR [ebx+0x9c68e01],1
  403507:	addr16 ss jae 0x4034a2
  40350b:	xchg   esp,eax
  40350c:	fstp   DWORD PTR [edi-0x744b65c7]
  403512:	xchg   ebx,eax
  403513:	lock jns 0x40350a
  403516:	mov    bl,0xac
  403518:	sbb    ah,BYTE PTR [ebx+0x2b5facff]
  40351e:	jmp    0xcefc:0x8bf1db57
  403525:	shl    BYTE PTR [edx],cl
  403527:	dec    edx
  403528:	or     dh,ch
  40352a:	loope  0x4034cf
  40352c:	fxam   
  40352e:	dec    ebx
  40352f:	leave  
  403530:	outs   dx,BYTE PTR ds:[esi]
  403531:	shr    DWORD PTR [esp+ebx*4],cl
  403534:	push   es
  403535:	push   esp
  403536:	add    eax,DWORD PTR [esi+ecx*1]
  403539:	jmp    0x2bdf:0x23734e6d
  403540:	sahf   
  403541:	jp     0x40355e
  403543:	lds    edi,FWORD PTR [ecx-0xb7f2b9a]
  403549:	jmp    DWORD PTR [esi]
  40354b:	call   0x9f98:0xfd178fb5
  403552:	or     al,0xd5
  403554:	sbb    BYTE PTR [edx],ah
  403556:	fild   WORD PTR [ecx+0x546471a7]
  40355c:	sahf   
  40355d:	fwait
  40355e:	push   eax
  40355f:	push   ebx
  403560:	call   DWORD PTR [esi+0x1d9f0ea1]
  403566:	jecxz  0x403553
  403568:	mov    esi,0xbd927d9
  40356d:	add    al,0xc
  40356f:	and    al,0xa6
  403571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403572:	inc    ebp
  403573:	mov    ah,0x82
  403575:	aad    0x68
  403577:	repz jle 0x403525
  40357a:	test   BYTE PTR [ebx-0x22],cl
  40357d:	aaa    
  40357e:	mov    dh,0xb8
  403580:	mov    dh,0x31
  403582:	mov    ds:0x144acba2,al
  403587:	pop    ss
  403588:	xor    BYTE PTR ds:[ebp+0xb35d594],0xbf
  403590:	or     BYTE PTR [ebx],bh
  403592:	scas   eax,DWORD PTR es:[edi]
  403593:	aam    0x67
  403595:	rcr    eax,cl
  403597:	push   edx
  403598:	not    BYTE PTR [edx]
  40359a:	jnp    0x4035d3
  40359c:	icebp  
  40359d:	fcomi  st,st(1)
  40359f:	push   edx
  4035a0:	lods   eax,DWORD PTR ds:[esi]
  4035a1:	or     ebx,edx
  4035a3:	pop    esi
  4035a4:	fist   DWORD PTR [eax+0x1d5d03e4]
  4035aa:	gs dec ebx
  4035ac:	push   DWORD PTR [ebx+0x4908357c]
  4035b2:	repz sub BYTE PTR [ebp+0x67eca69],ah
  4035b9:	addr16 inc ebx
  4035bb:	fsubrp st(6),st
  4035bd:	sub    eax,0xc5134972
  4035c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035c3:	mov    ebp,0xe8072935
  4035c8:	jmp    0xd7934d0c
  4035cd:	into   
  4035ce:	sbb    DWORD PTR [ebx],0x37
  4035d1:	pusha  
  4035d2:	sbb    al,0xb1
  4035d4:	adc    bh,BYTE PTR [eax]
  4035d6:	dec    eax
  4035d7:	jbe    0x403642
  4035d9:	sbb    al,0x25
  4035db:	mov    DWORD PTR [esi],edi
  4035dd:	mov    al,ds:0x2c2882df
  4035e2:	push   eax
  4035e3:	enter  0xd587,0x7d
  4035e7:	cmc    
  4035e8:	cmp    BYTE PTR [ecx+0x23],bh
  4035eb:	out    dx,eax
  4035ec:	arpl   WORD PTR [ecx],di
  4035ee:	sub    al,0x9
  4035f0:	pop    es
  4035f1:	cmp    BYTE PTR [eax+0x76],cl
  4035f4:	jp     0x4035a9
  4035f6:	ja     0x4035d2
  4035f8:	push   0xfffffff3
  4035fa:	test   DWORD PTR [edx-0x7c44a151],edx
  403600:	arpl   si,bp
  403602:	xchg   edx,eax
  403603:	loope  0x403655
  403605:	push   ds
  403606:	inc    esp
  403607:	push   eax
  403608:	ss in  al,0xa4
  40360b:	(bad)  
  40360c:	adc    cl,BYTE PTR [edx-0x3780cd5f]
  403612:	cmp    al,0x96
  403614:	jbe    0x403628
  403616:	scas   al,BYTE PTR es:[edi]
  403617:	and    BYTE PTR [edi],cl
  403619:	stos   BYTE PTR es:[edi],al
  40361a:	leave  
  40361b:	mov    DWORD PTR [eax],edx
  40361d:	cmp    cl,ch
  40361f:	mov    bl,ch
  403621:	outs   dx,DWORD PTR ds:[esi]
  403622:	xchg   esi,eax
  403623:	loope  0x4035d9
  403625:	dec    ebx
  403626:	jno    0x40364e
  403628:	inc    ebp
  403629:	jno    0x40362e
  40362b:	xchg   edx,eax
  40362c:	adc    edx,DWORD PTR [edx-0x4c]
  40362f:	sub    al,0x3f
  403631:	jns    0x40362e
  403633:	rol    DWORD PTR [eax+0x7e0bc441],1
  403639:	neg    ebp
  40363b:	leave  
  40363c:	xor    esi,ecx
  40363e:	pop    ebp
  40363f:	jae    0x40364b
  403641:	imul   eax,DWORD PTR [eax+edx*4],0x48
  403645:	or     BYTE PTR [edi-0x1292a82f],bh
  40364b:	in     eax,dx
  40364c:	jle    0x4035d4
  40364e:	xlat   BYTE PTR ds:[ebx]
  40364f:	pop    esi
  403650:	stc    
  403651:	cmp    eax,0x9ff3755a
  403656:	jmp    0x40368a
  403658:	stc    
  403659:	cmp    BYTE PTR [eax],dh
  40365b:	jge    0x40362a
  40365d:	ror    bl,1
  40365f:	add    BYTE PTR [esi+0x46],dl
  403662:	fist   WORD PTR [ecx+eax*1]
  403665:	push   ebx
  403666:	xor    DWORD PTR [edx],0x15
  403669:	xchg   esp,eax
  40366a:	les    ebx,FWORD PTR [eax]
  40366c:	and    al,0x8f
  40366e:	pop    ecx
  40366f:	fs inc edx
  403671:	xor    BYTE PTR [edi-0x5e5c45a0],bl
  403677:	mov    al,0x1c
  403679:	mov    edi,0x45132002
  40367e:	mov    ds:0x5605b2,al
  403683:	out    dx,al
  403684:	or     edx,DWORD PTR [ecx]
  403686:	dec    eax
  403687:	stc    
  403688:	xor    BYTE PTR [ecx+0x3fa242fa],0x2a
  40368f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403690:	stos   DWORD PTR es:[edi],eax
  403691:	stos   BYTE PTR es:[edi],al
  403692:	jo     0x4036c7
  403694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403695:	xor    bh,dh
  403697:	cmp    eax,0x9f206019
  40369c:	stos   BYTE PTR es:[edi],al
  40369d:	aaa    
  40369e:	ret    
  40369f:	sbb    eax,0xaf4c2dd0
  4036a4:	xchg   edi,eax
  4036a5:	jmp    0xec321cc8
  4036aa:	les    eax,FWORD PTR [eax-0x2c]
  4036ad:	nop
  4036ae:	mov    al,0xfc
  4036b0:	xchg   DWORD PTR [edx+0x7203832d],ebp
  4036b6:	mov    bl,0x82
  4036b8:	jae    0x4036f6
  4036ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036bb:	pop    eax
  4036bc:	add    al,0xe2
  4036be:	adc    al,0xf4
  4036c0:	mov    esi,0x591b1a12
  4036c5:	add    eax,esp
  4036c7:	adc    bh,dl
  4036c9:	addr16 retf 
  4036cb:	lds    edi,FWORD PTR [edi+0x2b]
  4036ce:	stos   BYTE PTR es:[edi],al
  4036cf:	inc    ecx
  4036d0:	dec    ebx
  4036d1:	jns    0x40365f
  4036d3:	frstor [eax-0x3]
  4036d6:	jecxz  0x4036ff
  4036d8:	mov    DWORD PTR [esi],ecx
  4036da:	loope  0x4036c8
  4036dc:	and    al,0x6a
  4036de:	inc    esp
  4036df:	add    DWORD PTR [eax],0x683ee4cc
  4036e5:	inc    eax
  4036e6:	mov    ebx,0x7f0ee789
  4036eb:	or     al,0x74
  4036ed:	rcr    BYTE PTR fs:[esi],cl
  4036f0:	ds xchg esp,eax
  4036f2:	nop
  4036f3:	sub    DWORD PTR [edx],esi
  4036f5:	stc    
  4036f6:	enter  0xdf7c,0xf5
  4036fa:	ror    DWORD PTR [edi],1
  4036fc:	and    dl,BYTE PTR [esi+0x1b]
  4036ff:	sbb    DWORD PTR [eax-0x11],ebp
  403702:	mov    bl,0xe1
  403704:	or     ebx,DWORD PTR [ecx-0xfe1ebf5]
  40370a:	cdq    
  40370b:	cmp    DWORD PTR [ebx+0x143a9015],ecx
  403711:	lock lds esp,FWORD PTR [ebx-0x3d]
  403715:	rol    cl,cl
  403717:	bound  ecx,QWORD PTR [eax]
  403719:	add    dl,dh
  40371b:	jp     0x4036b2
  40371d:	pop    ds
  40371e:	mov    DWORD PTR [edx+0x7f],edx
  403721:	xchg   BYTE PTR [edx+0x7c1433ef],dl
  403727:	dec    ebp
  403728:	fnstsw WORD PTR [ebp+0x2fbf93af]
  40372e:	cmp    al,0x5f
  403731:	clc    
  403732:	sub    eax,0x1ed17ce8
  403737:	out    0x7d,eax
  403739:	or     BYTE PTR [eax+0x68],bh
  40373c:	adc    BYTE PTR [edi+0x4bdb8e99],0x76
  403743:	cli    
  403744:	mov    cl,0x3b
  403746:	dec    edx
  403747:	enter  0x3c43,0x2d
  40374b:	gs inc edi
  40374d:	arpl   WORD PTR [edi+0x62],ax
  403750:	popf   
  403751:	jne    0x4037a4
  403753:	xor    BYTE PTR cs:[edi+0x5d],ch
  403757:	cmp    ecx,DWORD PTR [edx+0x69]
  40375a:	mov    ds:0x11b5a743,al
  40375f:	cmp    DWORD PTR [esp-0x2d86135a],edi
  403766:	add    dl,BYTE PTR [eax]
  403768:	jmp    0xb669:0xf3d88ad1
  40376f:	adc    BYTE PTR [edi-0x38ce1937],bh
  403775:	ins    BYTE PTR es:[edi],dx
  403776:	int    0xd7
  403778:	add    bh,al
  40377a:	gs cmc 
  40377c:	jnp    0x403760
  40377e:	ror    bl,1
  403780:	mov    ecx,0xd4b7b6b6
  403785:	aaa    
  403786:	adc    edx,ebx
  403788:	ret    0x371c
  40378b:	xchg   ecx,eax
  40378c:	push   ss
  40378d:	das    
  40378e:	ret    0x8852
  403791:	sti    
  403792:	cdq    
  403793:	sahf   
  403794:	fwait
  403795:	cmp    bl,BYTE PTR [edx]
  403797:	jp     0x4037a4
  403799:	cmc    
  40379a:	and    DWORD PTR [edi+0x7a],0xb0b7cfe3
  4037a1:	xchg   edx,eax
  4037a2:	or     edx,DWORD PTR [edx]
  4037a4:	in     eax,dx
  4037a5:	popa   
  4037a6:	popa   
  4037a7:	and    eax,0x7e8c321e
  4037ac:	shl    BYTE PTR [eax-0x32],0xd9
  4037b0:	mov    cl,0x12
  4037b2:	(bad)  
  4037b3:	mov    dh,0xfd
  4037b5:	mov    WORD PTR [edx-0x25],gs
  4037b8:	popf   
  4037b9:	mov    al,0x63
  4037bb:	xchg   esi,eax
  4037bc:	int    0x93
  4037be:	inc    edi
  4037bf:	sub    al,0x57
  4037c1:	iret   
  4037c2:	(bad)  
  4037c3:	add    BYTE PTR [ebx-0x23974579],dl
  4037c9:	daa    
  4037ca:	out    dx,eax
  4037cb:	mul    DWORD PTR [ebx]
  4037cd:	pop    ebx
  4037ce:	in     eax,0x61
  4037d0:	mov    bl,0x19
  4037d2:	mov    ds:0xc600dd9c,al
  4037d7:	clc    
  4037d8:	fdiv   QWORD PTR [eax]
  4037da:	test   al,0xbe
  4037dc:	dec    edx
  4037dd:	or     cl,BYTE PTR [ebx]
  4037df:	fsubr  st(5),st
  4037e1:	pmulhuw mm3,QWORD PTR [edx-0x35]
  4037e5:	(bad)  
  4037e6:	in     eax,0xaa
  4037e8:	out    dx,al
  4037e9:	out    dx,al
  4037ea:	retf   
  4037eb:	and    ebp,edi
  4037ed:	xchg   BYTE PTR [esi-0x3aea784b],dl
  4037f3:	lods   eax,DWORD PTR ds:[esi]
  4037f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037f5:	pop    ss
  4037f6:	scas   al,BYTE PTR es:[edi]
  4037f7:	pushf  
  4037f8:	inc    ecx
  4037f9:	imul   ebp,edi,0x6b76ac6e
  4037ff:	mov    edi,0x997435a8
  403804:	in     al,dx
  403805:	mov    BYTE PTR [edi-0x72],bh
  403808:	add    BYTE PTR [ecx],dh
  40380a:	jg     0x4037a5
  40380c:	mov    ah,al
  40380e:	add    al,0xad
  403810:	jne    0x403810
  403812:	bound  ebp,QWORD PTR [edx-0x356f63d0]
  403818:	xchg   edi,eax
  403819:	cs pop edi
  40381b:	dec    edi
  40381c:	adc    DWORD PTR [ebp-0x63],ebp
  40381f:	xor    esp,DWORD PTR [edx+0x21]
  403822:	jle    0x40384a
  403824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403825:	pop    ecx
  403826:	call   0x40ec:0x1ca3f972
  40382d:	mov    ds:0xa9451e8c,al
  403832:	in     al,dx
  403833:	jb     0x403830
  403835:	push   fs
  403837:	in     al,dx
  403838:	idiv   DWORD PTR [edi-0x32]
  40383b:	push   cs
  40383c:	push   ebp
  40383d:	imul   DWORD PTR [ecx-0x57]
  403840:	push   0xffffffdc
  403842:	out    0x81,eax
  403844:	sub    BYTE PTR [eax-0x43],bl
  403847:	aam    0x9
  403849:	lock mov edx,0x4db3e62e
  40384f:	push   edi
  403850:	jge    0x40380d
  403852:	lds    edx,FWORD PTR [edx+0x2c39d82b]
  403858:	aam    0xf9
  40385a:	fwait
  40385b:	pop    eax
  40385c:	xchg   edi,eax
  40385d:	in     al,dx
  40385e:	xchg   esi,eax
  40385f:	pop    ss
  403860:	push   0x29
  403862:	(bad)  
  403863:	pop    eax
  403864:	call   0x248fb991
  403869:	sahf   
  40386a:	jl     0x403871
  40386c:	dec    ebx
  40386d:	hlt    
  40386e:	sub    dh,ch
  403870:	inc    ebx
  403871:	push   edx
  403872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403874:	inc    edx
  403875:	pop    edx
  403876:	cmp    bl,ch
  403878:	pop    esp
  403879:	(bad)  
  40387a:	cmp    al,0x63
  40387c:	mov    eax,ds:0x76be9283
  403881:	dec    eax
  403882:	les    edi,FWORD PTR ds:0x57b069d1
  403888:	iret   
  403889:	mov    dl,0xc
  40388b:	or     edi,DWORD PTR [edi+0x21]
  40388e:	xchg   edx,eax
  40388f:	cmc    
  403890:	push   ebx
  403891:	push   0x9d5eb757
  403896:	sbb    eax,0x9944c47e
  40389b:	add    ecx,DWORD PTR [edi-0x1470b6f3]
  4038a1:	jge    0x4038ac
  4038a3:	(bad)  
  4038a4:	xor    dl,BYTE PTR [edi-0x14dc83c2]
  4038aa:	jns    0x403893
  4038ac:	pop    edi
  4038ad:	outs   dx,BYTE PTR ds:[esi]
  4038ae:	adc    ebx,DWORD PTR [esi-0xa]
  4038b1:	das    
  4038b2:	pop    ebx
  4038b3:	add    DWORD PTR [esi],ebp
  4038b5:	add    ch,BYTE PTR ss:[edx]
  4038b8:	loope  0x40385b
  4038ba:	xchg   BYTE PTR [edx],bl
  4038bc:	pop    edi
  4038bd:	cwde   
  4038be:	sbb    ah,dh
  4038c0:	push   eax
  4038c1:	xor    edx,ecx
  4038c3:	jbe    0x403855
  4038c5:	mov    dx,0x7b5a
  4038c9:	dec    edx
  4038ca:	(bad)  
  4038cb:	xor    eax,0x23dc2b50
  4038d0:	enter  0x38e1,0x17
  4038d4:	xchg   ecx,eax
  4038d5:	push   esp
  4038d6:	nop
  4038d7:	loop   0x4038a7
  4038d9:	sub    al,0x83
  4038db:	mov    edi,esp
  4038dd:	jp     0x4038cc
  4038df:	push   edi
  4038e0:	and    al,cl
  4038e2:	retf   0xc666
  4038e5:	sti    
  4038e6:	ret    0xcbc9
  4038e9:	pop    ebx
  4038ea:	add    eax,0xb9e14698
  4038ef:	sbb    ebx,DWORD PTR [ecx-0x5f]
  4038f2:	xchg   DWORD PTR [esi],esp
  4038f4:	and    al,0x6
  4038f6:	dec    edi
  4038f7:	push   0xb
  4038f9:	test   BYTE PTR [edi-0x5bc6ab1a],0xca
  403900:	int3   
  403901:	sub    ecx,DWORD PTR [ebx+0x23fc73a1]
  403907:	scas   al,BYTE PTR es:[edi]
  403908:	sbb    al,0x16
  40390a:	retf   0xd23d
  40390d:	int    0x6d
  40390f:	test   al,bl
  403911:	mov    ebp,cs
  403913:	cmp    eax,0x5d0d80f7
  403918:	lea    ebx,cs:0xb146cc7a
  40391f:	mov    BYTE PTR [ebx],bl
  403921:	inc    ebx
  403922:	into   
  403923:	xor    al,0x23
  403925:	fwait
  403926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403928:	mov    dl,0x3b
  40392a:	sub    edi,eax
  40392c:	cli    
  40392d:	mov    esp,0x85d6ed93
  403932:	mov    bl,0x5
  403934:	cmp    al,0x69
  403936:	jp     0x40398d
  403938:	test   DWORD PTR [ebp+edi*8+0x2f2c98db],edi
  40393f:	arpl   WORD PTR [edi-0x2706aefa],bp
  403945:	add    esp,0xfbd0a58a
  40394b:	mov    esi,DWORD PTR [ebx-0x27bdfa79]
  403951:	inc    edx
  403952:	xchg   ebx,eax
  403953:	jmp    0x5d39:0xe0911636
  40395a:	movq   mm5,QWORD PTR [edi]
  40395d:	pusha  
  40395e:	xchg   esp,eax
  40395f:	into   
  403960:	mov    al,0x13
  403962:	lods   al,BYTE PTR ds:[esi]
  403963:	inc    edi
  403964:	and    ebp,esi
  403966:	ja     0x403904
  403968:	push   ebp
  403969:	xor    ebx,DWORD PTR [eax+0x54]
  40396c:	cmp    eax,0x9e09968f
  403971:	jle    0x40393a
  403973:	dec    edx
  403974:	daa    
  403975:	rol    cl,1
  403977:	mov    fs,WORD PTR [edx+0x769d35ff]
  40397d:	int    0x1
  40397f:	jmp    0xcee:0xa89b4be4
  403986:	imul   ebx,DWORD PTR [edx+ebx*8-0x5dc36ca8],0x9c5f20a1
  403991:	sbb    al,0x8f
  403993:	and    BYTE PTR [eax+0x11],bl
  403996:	adc    DWORD PTR [edx-0x6fdd9da4],eax
  40399c:	cli    
  40399d:	mov    ds,WORD PTR [ecx]
  40399f:	mov    ds,WORD PTR [ebp+0x78]
  4039a2:	and    ecx,DWORD PTR [eax+0x5a37df9]
  4039a8:	add    ah,BYTE PTR [ebx+esi*2]
  4039ab:	sub    eax,0x73ccfea3
  4039b0:	jge    0x403966
  4039b2:	adc    eax,0x5a14bfcf
  4039b7:	mov    bh,0x9a
  4039b9:	mov    BYTE PTR [ebx+0x44],ah
  4039bc:	mov    bh,0x33
  4039be:	hlt    
  4039bf:	scas   al,BYTE PTR es:[edi]
  4039c0:	(bad)  
  4039c1:	adc    DWORD PTR [edi+0x49],esp
  4039c4:	ja     0x4039b3
  4039c6:	cmp    al,0x1c
  4039c8:	mov    ds:0xd556435c,eax
  4039cd:	push   esi
  4039ce:	fimul  DWORD PTR [ecx-0x731cd19c]
  4039d4:	(bad)  
  4039d5:	push   edi
  4039d6:	sub    al,0xc8
  4039d8:	jno    0x4039e0
  4039da:	jle    0x403982
  4039dc:	lods   al,BYTE PTR ds:[esi]
  4039dd:	push   ebp
  4039de:	popf   
  4039df:	mov    ebp,gs
  4039e1:	fwait
  4039e2:	inc    ebp
  4039e3:	xchg   ebx,eax
  4039e4:	mov    ch,0xa6
  4039e6:	les    edx,FWORD PTR [edi+0x5]
  4039e9:	pop    ecx
  4039ea:	jg     0x40397b
  4039ec:	les    ebx,FWORD PTR [edx-0x8]
  4039ef:	xchg   esp,eax
  4039f0:	ja     0x40397d
  4039f2:	pop    ds
  4039f3:	into   
  4039f4:	and    al,0x6e
  4039f6:	jge    0x40399c
  4039f8:	jb     0x403a20
  4039fa:	es movaps xmm6,xmm5
  4039fe:	xchg   esp,eax
  4039ff:	stos   DWORD PTR es:[edi],eax
  403a00:	push   esp
  403a01:	cs dec esp
  403a03:	xor    ecx,DWORD PTR [edi-0x21]
  403a06:	add    dh,bh
  403a08:	pop    ebx
  403a09:	mov    eax,gs
  403a0b:	and    al,0x64
  403a0d:	nop
  403a0e:	add    cl,BYTE PTR [ebx-0x4c]
  403a11:	mov    al,0x80
  403a13:	sahf   
  403a14:	pop    ebp
  403a15:	aaa    
  403a16:	repz add ebx,esp
  403a19:	pushf  
  403a1a:	push   es
  403a1b:	or     edi,edx
  403a1d:	push   es
  403a1e:	mov    cl,BYTE PTR [edx-0x73]
  403a21:	les    eax,FWORD PTR [edi]
  403a23:	pop    edx
  403a24:	dec    edx
  403a25:	cmp    al,0x9e
  403a27:	mov    esp,0x1ff8d858
  403a2c:	pop    ecx
  403a2d:	pushf  
  403a2e:	rol    BYTE PTR [edi+0x23928bfa],cl
  403a34:	or     DWORD PTR [ecx+0x79988297],edx
  403a3a:	shl    DWORD PTR [ebx],0x74
  403a3d:	int    0x6a
  403a3f:	inc    esp
  403a40:	in     eax,dx
  403a41:	jo     0x4039da
  403a43:	lods   eax,DWORD PTR ds:[esi]
  403a44:	scas   al,BYTE PTR es:[edi]
  403a45:	fiadd  DWORD PTR [ebx+0x5e62eb6f]
  403a4b:	push   esp
  403a4c:	popf   
  403a4d:	inc    ecx
  403a4e:	rcr    DWORD PTR [edi+0x1eb02624],0x3
  403a55:	dec    esp
  403a56:	add    esi,ebp
  403a58:	xor    eax,0x77ec0159
  403a5d:	jno    0x403aaf
  403a5f:	jb     0x403a4d
  403a61:	into   
  403a62:	dec    eax
  403a63:	pop    ecx
  403a64:	dec    eax
  403a65:	mov    al,0x44
  403a67:	add    al,0xf
  403a69:	mov    al,ds:0x13e840e4
  403a6e:	add    al,0xb
  403a70:	call   0x90ac:0x5741fd20
  403a77:	jmp    0x411:0xca963f24
  403a7e:	inc    esp
  403a7f:	aas    
  403a80:	jns    0x403aef
  403a82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a83:	dec    esp
  403a84:	pushf  
  403a85:	mov    esp,0x58afaf6
  403a8a:	or     dl,BYTE PTR [edi-0x39]
  403a8d:	test   eax,0x7dd8cc07
  403a92:	loope  0x403a21
  403a94:	ficomp WORD PTR [ecx+0x15]
  403a97:	mov    al,BYTE PTR [edi-0x5ea452ab]
  403a9d:	outs   dx,WORD PTR ds:[esi]
  403a9f:	test   eax,0x78a882f7
  403aa4:	xchg   ecx,eax
  403aa5:	stos   BYTE PTR es:[edi],al
  403aa6:	add    bh,bh
  403aa8:	push   edi
  403aa9:	adc    ebx,DWORD PTR [ecx+0x2e]
  403aac:	or     bh,BYTE PTR [edx*4-0x623ea7c3]
  403ab3:	sbb    ch,BYTE PTR [ecx]
  403ab5:	mov    ebx,0xf5793812
  403aba:	nop
  403abb:	adc    eax,0x192775cb
  403ac0:	dec    eax
  403ac1:	les    ebp,FWORD PTR [ebx]
  403ac3:	lock test BYTE PTR fs:[di+0xc9e],dh
  403aca:	or     eax,0x96bfc142
  403acf:	mov    eax,DWORD PTR [eax+ebx*2-0x8]
  403ad3:	(bad)  
  403ad4:	pop    ebp
  403ad5:	(bad)  
  403ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ad7:	jbe    0x403a7c
  403ad9:	push   0x17
  403adb:	int    0xfa
  403add:	xchg   edi,eax
  403ade:	shl    DWORD PTR [edi],1
  403ae0:	out    0x6e,eax
  403ae2:	and    eax,0x58df1333
  403ae7:	xor    BYTE PTR [edi-0x9ef2d0c],al
  403aed:	psubd  mm6,mm1
  403af0:	imul   esp,DWORD PTR [ecx],0x2b228c3b
  403af6:	aas    
  403af7:	pop    ds
  403af8:	inc    edx
  403af9:	mov    dl,0xfe
  403afc:	aam    0x65
  403afe:	sub    esp,DWORD PTR [edx-0x2f]
  403b01:	mov    WORD PTR [esi],cs
  403b03:	pop    ebx
  403b04:	and    BYTE PTR [edi],cl
  403b06:	inc    esi
  403b07:	int3   
  403b08:	add    eax,0x1c6761bb
  403b0d:	xor    al,0xb2
  403b0f:	ss imul ebx,ebx,0xa439f02
  403b16:	jbe    0x403b2f
  403b18:	int3   
  403b19:	jecxz  0x403b0c
  403b1b:	jmp    0x94a9:0xa6fd488a
  403b22:	mov    al,ds:0x78cbe50
  403b27:	mov    ecx,0x3ea24ad2
  403b2c:	xchg   edi,eax
  403b2d:	pop    esi
  403b2e:	leave  
  403b2f:	mov    edi,DWORD PTR [edi+0x395706d1]
  403b35:	mov    eax,ds:0x7e859d85
  403b3a:	push   eax
  403b3b:	pop    ss
  403b3c:	pop    ecx
  403b3d:	jl     0x403b7f
  403b3f:	mov    bl,0x66
  403b41:	sbb    ecx,DWORD PTR [edi+0x37]
  403b44:	mov    ds:0xf54c53b9,eax
  403b49:	jp     0x403b87
  403b4b:	aad    0x22
  403b4d:	and    al,0xb2
  403b4f:	ins    BYTE PTR es:[edi],dx
  403b50:	cmc    
  403b51:	leave  
  403b52:	mov    ebp,0xefbf9fa7
  403b57:	or     bl,BYTE PTR [ebx]
  403b59:	xchg   ebp,eax
  403b5a:	hlt    
  403b5b:	enter  0x9ed9,0xc5
  403b5f:	repnz iret 
  403b61:	pop    esp
  403b62:	mov    BYTE PTR [edi+edx*2],bh
  403b65:	cs jp  0x403af5
  403b68:	cmp    DWORD PTR [ebp+0x7b],ecx
  403b6b:	daa    
  403b6c:	mov    cl,0xca
  403b6e:	xchg   esi,eax
  403b6f:	stos   DWORD PTR es:[edi],eax
  403b70:	(bad)  
  403b71:	dec    edi
  403b72:	ds xor cl,al
  403b75:	xchg   ecx,eax
  403b76:	aad    0xe4
  403b78:	dec    ecx
  403b79:	mov    dh,0x67
  403b7b:	and    ch,BYTE PTR [ecx+esi*4-0x132043db]
  403b82:	push   eax
  403b83:	jbe    0x403b2e
  403b85:	mov    al,ds:0x2a862ecb
  403b8a:	mov    esi,0x7a118dca
  403b8f:	xchg   esi,eax
  403b90:	pop    ecx
  403b91:	and    BYTE PTR [ecx],cl
  403b93:	neg    BYTE PTR [ecx+0x6fb5548]
  403b99:	test   eax,0x53b5e367
  403b9e:	xor    edx,ecx
  403ba0:	mov    ebx,0xc7d5da0b
  403ba5:	out    0x78,eax
  403ba7:	xor    cl,BYTE PTR [edi-0x63b6105f]
  403bad:	and    edx,ebp
  403baf:	ffree  st(3)
  403bb1:	dec    DWORD PTR [ebx-0x6f79cf6b]
  403bb7:	aas    
  403bb8:	xor    DWORD PTR [esi],edi
  403bba:	rol    DWORD PTR [ecx+0xee71734],cl
  403bc0:	pusha  
  403bc1:	xchg   esi,eax
  403bc2:	je     0x403bbf
  403bc4:	(bad)  
  403bc5:	adc    al,0x28
  403bc7:	imul   ecx,DWORD PTR [edx],0x7a
  403bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bcb:	cld    
  403bcc:	imul   ebx,ebx,0xc2aa1f82
  403bd2:	mov    ds:0xa08ddd89,eax
  403bd7:	sub    eax,0xead4317c
  403bdc:	or     esp,esi
  403bde:	or     DWORD PTR [edx+0x69],esi
  403be1:	mov    ah,0x27
  403be3:	xor    ebp,eax
  403be5:	mov    bl,0x3c
  403be7:	push   esp
  403be8:	mov    DWORD PTR [eiz*1+0x82c5f97],ebx
  403bef:	jae    0x1f5fafc
  403bf5:	jecxz  0x403c4b
  403bf7:	jl     0x403ba9
  403bf9:	sar    BYTE PTR [ecx+eiz*4+0x88a889d],1
  403c00:	push   ss
  403c01:	shl    DWORD PTR [eax],1
  403c03:	rol    DWORD PTR [eax+0x76],cl
  403c06:	and    al,0xe4
  403c08:	dec    eax
  403c09:	or     eax,0x66fc5336
  403c0e:	sahf   
  403c0f:	or     DWORD PTR [ebx+esi*4-0x55],ebx
  403c13:	fwait
  403c14:	into   
  403c15:	or     BYTE PTR [eax+0x52],dh
  403c18:	mov    al,ds:0x871ae34d
  403c1d:	or     bh,0x31
  403c20:	xor    ah,BYTE PTR [esi-0x4425387f]
  403c26:	mov    bh,0xed
  403c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c29:	pop    ss
  403c2a:	or     edx,DWORD PTR [ebx+0x353d3171]
  403c30:	cmp    DWORD PTR [edi+0x15],edx
  403c33:	push   ss
  403c34:	push   edx
  403c35:	or     al,0x67
  403c37:	inc    esi
  403c38:	into   
  403c39:	xor    esp,DWORD PTR [ecx+eiz*1+0x23f6e5b4]
  403c40:	xchg   DWORD PTR [eax+0x3b],ebp
  403c43:	mov    esp,0xf66bd593
  403c48:	icebp  
  403c49:	repnz adc al,0xb
  403c4c:	inc    esp
  403c4d:	ret    
  403c4e:	xchg   ebx,eax
  403c4f:	ins    DWORD PTR es:[edi],dx
  403c50:	xchg   ebp,eax
  403c51:	out    0x61,eax
  403c53:	jae    0x403be4
  403c55:	xchg   ecx,eax
  403c56:	fwait
  403c57:	sti    
  403c58:	push   eax
  403c59:	xchg   ecx,eax
  403c5a:	xadd   DWORD PTR [ebp-0x5fbbf138],ebx
  403c61:	add    esp,DWORD PTR [ebx-0x53]
  403c64:	dec    ebx
  403c65:	xor    edx,DWORD PTR [edi]
  403c67:	sbb    bh,bh
  403c69:	jg     0x403c70
  403c6b:	adc    BYTE PTR [esp+ebx*8],cl
  403c6e:	or     ebx,DWORD PTR [edx+0x6]
  403c71:	imul   esp,DWORD PTR [bp+si+0x3f],0x1e
  403c76:	int    0x17
  403c78:	lds    ebp,FWORD PTR [ebx]
  403c7a:	add    BYTE PTR [ebx+0x7dc4e28f],bh
  403c80:	xor    dh,BYTE PTR [ebx+0x3e96c270]
  403c86:	sub    BYTE PTR [ecx],cl
  403c88:	sti    
  403c89:	fadd   st(3),st
  403c8b:	adc    eax,0xe57fe82a
  403c90:	pop    esp
  403c91:	pop    edi
  403c92:	repnz add ah,bh
  403c95:	and    DWORD PTR [edx+0x19],edx
  403c98:	je     0x403c41
  403c9a:	jae    0x403c9a
  403c9c:	xchg   ebp,eax
  403c9d:	push   edx
  403c9e:	or     eax,0xb5262da0
  403ca3:	dec    esi
  403ca4:	mov    eax,0xbbdca4fc
  403ca9:	mov    ebp,0xf6fad225
  403cae:	lds    ebp,FWORD PTR [eax-0x7747093c]
  403cb4:	retf   
  403cb5:	imul   eax,DWORD PTR [ecx+0x3f],0xc10a8c6f
  403cbc:	push   eax
  403cbd:	xchg   ecx,eax
  403cbe:	push   eax
  403cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cc0:	xor    bl,BYTE PTR [ebp-0x16f7cc24]
  403cc6:	adc    DWORD PTR [edx-0x4b498005],0xcdf7ed5b
  403cd0:	jp     0x403d01
  403cd2:	outs   dx,DWORD PTR ds:[esi]
  403cd3:	shl    BYTE PTR [ebx+0xdf715e8],1
  403cd9:	call   0xa874104c
  403cde:	aam    0xee
  403ce0:	fwait
  403ce1:	(bad)  
  403ce2:	shl    ecx,cl
  403ce4:	pop    ss
  403ce5:	call   0x61cc82de
  403cea:	pop    esp
  403ceb:	xchg   BYTE PTR [esi-0x2d10b97b],ch
  403cf1:	xchg   ebx,eax
  403cf2:	div    dl
  403cf4:	jg     0x403c9c
  403cf6:	and    DWORD PTR [edi-0xd80c30f],edi
  403cfc:	shl    ebx,0xc
  403cff:	mov    ch,0x73
  403d01:	jecxz  0x403d56
  403d03:	mov    ecx,0x9b78dcc6
  403d08:	inc    esp
  403d09:	repz je 0x403d18
  403d0c:	xor    al,0x57
  403d0e:	xchg   DWORD PTR [bp+si],ebx
  403d11:	aas    
  403d12:	xchg   edx,eax
  403d13:	sbb    eax,0x9dbb63d8
  403d18:	mov    bl,bh
  403d1a:	shl    DWORD PTR [ebx-0x2],1
  403d1d:	(bad)  [ecx]
  403d1f:	inc    esp
  403d20:	ss jg  0x403cb4
  403d23:	sar    DWORD PTR [eax+0x22ad6325],1
  403d29:	add    ebx,ecx
  403d2b:	sub    esp,esp
  403d2d:	sbb    eax,0x3db03cfe
  403d32:	jmp    0x403cd4
  403d34:	cmp    esi,esp
  403d36:	das    
  403d37:	add    cl,dh
  403d39:	xchg   edx,eax
  403d3a:	xor    eax,DWORD PTR [esi+0xf]
  403d3d:	(bad)  
  403d3e:	sub    al,0xf0
  403d40:	or     BYTE PTR [edx+eiz*2+0x76272e32],bh
  403d47:	mov    ds,edi
  403d49:	(bad)  
  403d4a:	mov    edx,0x96959528
  403d4f:	mov    ecx,0xa6c1a025
  403d54:	pop    edx
  403d55:	pop    ss
  403d56:	pop    eax
  403d57:	sbb    BYTE PTR [ebp-0x57a39992],0xd6
  403d5e:	and    ecx,DWORD PTR ss:[esi+0x2750da8f]
  403d65:	stos   BYTE PTR es:[edi],al
  403d66:	in     eax,dx
  403d67:	sahf   
  403d68:	dec    ebx
  403d69:	mov    eax,0x20e2e27a
  403d6e:	or     al,0xc0
  403d70:	outs   dx,BYTE PTR ds:[esi]
  403d71:	xchg   ebx,eax
  403d72:	inc    esp
  403d73:	mov    ch,0xb4
  403d75:	push   edi
  403d76:	add    al,0x5c
  403d78:	inc    esp
  403d79:	call   0x11f9874e
  403d7e:	neg    al
  403d80:	pop    ss
  403d81:	je     0x403d59
  403d83:	push   0x7c4d3c62
  403d88:	inc    ebp
  403d89:	mov    eax,0x9baad6fd
  403d8e:	xor    DWORD PTR [edx+0x4d],esp
  403d91:	mov    eax,0xaaa139e0
  403d96:	ja     0x403da0
  403d98:	in     eax,0x6
  403d9a:	push   ebp
  403d9b:	lds    eax,FWORD PTR [esi+0xdb79255]
  403da1:	repnz add edi,DWORD PTR ds:0xa8c520cc
  403da8:	sbb    edi,DWORD PTR [eax+edi*1]
  403dab:	ss pop ebx
  403dad:	aaa    
  403dae:	xchg   ebx,eax
  403daf:	test   al,0x2
  403db1:	sub    DWORD PTR ds:0xc17141aa,edx
  403db7:	mov    ebp,0x1d85af
  403dbc:	adc    DWORD PTR [ecx+0x782d25cb],0x458c52bf
  403dc6:	(bad)  
  403dc7:	call   0x56d8c920
  403dcc:	or     BYTE PTR [eax],0x6a
  403dcf:	ror    DWORD PTR [esi+0x48],1
  403dd2:	aam    0xcc
  403dd4:	pusha  
  403dd5:	inc    eax
  403dd6:	add    bl,ah
  403dd8:	scas   eax,DWORD PTR es:[edi]
  403dd9:	cwde   
  403dda:	pusha  
  403ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ddc:	push   eax
  403ddd:	dec    edx
  403dde:	xchg   edi,eax
  403ddf:	sub    al,0x27
  403de1:	or     al,0xb2
  403de3:	ss ret 
  403de5:	cs (bad) 
  403de7:	lea    eax,[ecx-0x44bae1db]
  403ded:	pop    edx
  403dee:	xchg   ebx,eax
  403def:	lea    edi,[edx-0x75]
  403df2:	mov    al,0x43
  403df4:	xchg   DWORD PTR [ecx],ebp
  403df6:	and    esp,DWORD PTR [ecx-0x7a49ce5d]
  403dfc:	xor    BYTE PTR ds:0x7bd5d6d1,al
  403e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e03:	or     eax,0x3c8faa87
  403e08:	imul   edx,DWORD PTR [ebx-0x4d],0x7c
  403e0c:	push   ss
  403e0d:	loop   0x403d9c
  403e0f:	lods   al,BYTE PTR gs:[esi]
  403e11:	mov    es,edx
  403e13:	call   0xe6c10d8f
  403e18:	lds    ebp,FWORD PTR [ecx]
  403e1a:	mov    eax,ds:0xa9c6861e
  403e1f:	stos   DWORD PTR es:[edi],eax
  403e20:	push   edx
  403e21:	inc    edx
  403e22:	ret    0x337d
  403e25:	daa    
  403e26:	jno    0x403dfc
  403e28:	or     DWORD PTR [esi],edi
  403e2a:	and    ebx,DWORD PTR [esi+0x1b]
  403e2d:	mov    dh,0x4e
  403e2f:	scas   al,BYTE PTR es:[edi]
  403e30:	sub    eax,0xe02f1fd8
  403e35:	fbld   TBYTE PTR [ebp+0x7186033e]
  403e3b:	adc    al,0x37
  403e3d:	stos   DWORD PTR es:[edi],eax
  403e3e:	cmp    eax,0x379b4a34
  403e43:	or     eax,0x2c0ba6d0
  403e48:	adc    bh,bh
  403e4a:	sub    ah,dh
  403e4c:	es jl  0x403e3e
  403e4f:	and    ah,BYTE PTR [edi-0x49]
  403e52:	adc    BYTE PTR [eax-0x272538ed],dl
  403e58:	mov    ds:0xb615d8a4,al
  403e5d:	jmp    0x403de4
  403e5f:	aas    
  403e60:	pushf  
  403e61:	and    esp,DWORD PTR gs:[eax+edx*2+0x56602583]
  403e69:	mov    bl,0x4a
  403e6b:	and    ecx,edx
  403e6d:	test   eax,0xa9634fc9
  403e72:	pop    esi
  403e73:	f2xm1  
  403e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e76:	mov    esp,0x948c0ced
  403e7b:	in     eax,dx
  403e7c:	xor    DWORD PTR [edx+0x69],0x45d1d26
  403e83:	out    dx,eax
  403e84:	mov    edi,edi
  403e86:	pusha  
  403e87:	mov    ch,0xda
  403e89:	fiadd  DWORD PTR [ecx-0x10]
  403e8c:	pop    ecx
  403e8d:	add    DWORD PTR [ebx-0x5b],eax
  403e90:	pop    ds
  403e91:	xchg   BYTE PTR [ebp+0x14fd615d],cl
  403e97:	cli    
  403e98:	cmp    ah,BYTE PTR [esi-0x661b8a1c]
  403e9e:	fwait
  403e9f:	add    eax,0xbba93ac4
  403ea4:	mov    ebp,0xd0a9a52b
  403ea9:	out    dx,eax
  403eaa:	aad    0x33
  403eac:	mov    esp,0x4b1634b1
  403eb1:	xchg   esi,eax
  403eb2:	dec    ebp
  403eb3:	cdq    
  403eb4:	cmp    DWORD PTR [bx+si],ebp
  403eb7:	dec    eax
  403eb8:	push   esi
  403eb9:	xchg   ebp,eax
  403eba:	mov    ah,0xfb
  403ebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ebd:	pop    es
  403ebe:	pop    esi
  403ebf:	adc    eax,0x8b6d957a
  403ec4:	stos   DWORD PTR es:[edi],eax
  403ec5:	mov    ebp,0xe263c679
  403eca:	fiadd  DWORD PTR [edi]
  403ecc:	ins    BYTE PTR es:[edi],dx
  403ecd:	inc    eax
  403ece:	outs   dx,BYTE PTR ds:[esi]
  403ecf:	xchg   BYTE PTR [ebx],cl
  403ed1:	and    al,0x7c
  403ed3:	les    ebx,FWORD PTR [esi+0x63]
  403ed6:	fidivr WORD PTR [esi+ebx*1-0x6b9f255e]
  403edd:	(bad)  
  403ede:	sub    eax,0x2c933c06
  403ee3:	or     al,0x4e
  403ee5:	(bad)  
  403ee6:	(bad)  
  403ee7:	imul   ebp,esp,0x4bea3863
  403eed:	xchg   ecx,eax
  403eee:	xchg   ecx,eax
  403eef:	mov    ds:0xcd7494d7,eax
  403ef4:	mov    ebx,ecx
  403ef6:	jg     0x403f35
  403ef8:	lahf   
  403ef9:	jae    0x403e88
  403efb:	lock mov bl,0xd9
  403efe:	stos   BYTE PTR es:[edi],al
  403eff:	int    0x25
  403f01:	sub    al,0x87
  403f03:	and    BYTE PTR [ebx+edi*1+0x3c7dd4d4],0x4a
  403f0b:	das    
  403f0c:	cmp    al,0x2c
  403f0e:	in     eax,dx
  403f0f:	sub    ebx,DWORD PTR [esi-0x491f210e]
  403f15:	imul   esp,ecx,0x6e
  403f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f19:	sbb    edx,ecx
  403f1b:	pop    ebp
  403f1c:	push   esi
  403f1d:	push   es
  403f1e:	inc    eax
  403f1f:	fld    TBYTE PTR [edx]
  403f21:	sub    al,0x69
  403f23:	cmp    bh,cl
  403f25:	pop    ebx
  403f26:	push   eax
  403f27:	aaa    
  403f28:	add    dl,BYTE PTR [esi-0x7d976f2a]
  403f2e:	loope  0x403ef7
  403f30:	sahf   
  403f31:	mov    bh,0x7a
  403f33:	dec    esi
  403f34:	or     BYTE PTR [esi],bl
  403f36:	in     al,0x47
  403f38:	out    0xf5,eax
  403f3a:	rcl    BYTE PTR [eax+0x39432685],0xf0
  403f41:	push   ecx
  403f42:	enter  0xbdca,0xc0
  403f46:	and    eax,0x63a07a51
  403f4b:	call   0x9055b060
  403f50:	xor    al,BYTE PTR [ebp+0x1a56934]
  403f56:	cwde   
  403f57:	adc    cl,BYTE PTR [esi]
  403f59:	push   edi
  403f5a:	into   
  403f5b:	mov    BYTE PTR [ebp+0x37],bl
  403f5e:	mov    bh,0x26
  403f60:	outs   dx,BYTE PTR ds:[esi]
  403f61:	add    bh,dh
  403f63:	iret   
  403f64:	mov    al,BYTE PTR [eax]
  403f66:	(bad)  
  403f67:	mov    ds:0x261a72f6,al
  403f6c:	push   ebx
  403f6d:	mov    ch,0x36
  403f6f:	lea    ebx,ds:0x4bb04998
  403f75:	cdq    
  403f76:	push   edx
  403f77:	les    ecx,FWORD PTR [edx+0x17]
  403f7a:	jne    0x403f3d
  403f7c:	fcom   QWORD PTR [ecx+0x38cec5df]
  403f82:	mov    eax,0xbf6d25c2
  403f87:	mov    ?,edi
  403f89:	inc    BYTE PTR [ebx-0x4a3c8326]
  403f8f:	mov    ebp,0x6a3c3a16
  403f94:	rep outs dx,BYTE PTR ds:[esi]
  403f96:	jecxz  0x403fc7
  403f98:	pop    ds
  403f99:	xor    eax,0xdab5f619
  403f9e:	sbb    al,0x34
  403fa0:	pop    ss
  403fa1:	jb     0x403f43
  403fa3:	imul   esp,ebp,0x5a
  403fa6:	out    0x76,eax
  403fa8:	or     edx,DWORD PTR [eax+ebx*2-0x52d19a4c]
  403faf:	sub    eax,0xfb0cc51b
  403fb4:	aaa    
  403fb5:	dec    ecx
  403fb6:	dec    eax
  403fb7:	or     edi,DWORD PTR ds:0x232611aa
  403fbd:	nop
  403fbe:	xlat   BYTE PTR ds:[ebx]
  403fbf:	bound  ebp,QWORD PTR [edx]
  403fc1:	call   0x4f2749fe
  403fc6:	and    BYTE PTR [ebx-0x25b3457e],dh
  403fcc:	repz shr BYTE PTR ds:0x8e5ba0bd,0xb7
  403fd4:	cdq    
  403fd5:	fcom   QWORD PTR [ebp-0x53dddb47]
  403fdb:	(bad)  
  403fdc:	fdiv   DWORD PTR [eax]
  403fde:	in     eax,0x67
  403fe0:	in     eax,0xc6
  403fe2:	repnz sub bh,ah
  403fe5:	arpl   WORD PTR [edi-0x53],bp
  403fe8:	adc    eax,0x8f675794
  403fed:	mov    cs,edx
  403fef:	stos   DWORD PTR es:[edi],eax
  403ff0:	cmp    al,0xe1
  403ff2:	or     dh,BYTE PTR [edi-0x29b9b7c]
  403ff8:	sub    dl,cl
  403ffa:	test   DWORD PTR [ecx-0x2df18427],0x744c793
  404004:	push   edx
  404005:	mov    dl,BYTE PTR [edx]
  404007:	mov    BYTE PTR [ecx],ah
  404009:	ja     0x404076
  40400b:	rcr    BYTE PTR [ecx],1
  40400d:	ins    DWORD PTR es:[edi],dx
  40400e:	sub    eax,0xe2c242b2
  404013:	fdiv   st(1),st
  404015:	retf   
  404016:	xchg   esp,eax
  404017:	ret    0x3bf6
  40401a:	ret    
  40401b:	mov    ah,0x37
  40401d:	jns    0x403fd8
  40401f:	sar    DWORD PTR [ebp-0x4d],1
  404022:	enter  0xe566,0x58
  404026:	retf   0x7f1a
  404029:	dec    esp
  40402a:	icebp  
  40402b:	or     al,0x8f
  40402d:	adc    al,ah
  40402f:	mov    ds:0xc8ff261,al
  404034:	pop    ebx
  404035:	xchg   esp,eax
  404036:	cwde   
  404037:	enter  0x4cb9,0x7
  40403b:	lock xor DWORD PTR [edx],0xffffffd9
  40403f:	and    eax,0x92bb59e3
  404044:	scas   al,BYTE PTR es:[edi]
  404045:	add    BYTE PTR [eax],dh
  404047:	lods   eax,DWORD PTR ds:[esi]
  404048:	shr    BYTE PTR [eax+0x55],1
  40404b:	inc    edx
  40404c:	jmp    0x8667:0xb4b6f3d9
  404053:	sbb    DWORD PTR [eax+eax*2],0xffffffbd
  404057:	jmp    0x404099
  404059:	adc    bh,BYTE PTR [edx]
  40405b:	push   eax
  40405c:	add    eax,0x4079743c
  404061:	mov    edx,0x56de06f4
  404066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404067:	and    esi,DWORD PTR [ebx]
  404069:	mov    ch,BYTE PTR [eax+ecx*4-0x32]
  40406d:	inc    ebp
  40406e:	shl    dh,1
  404070:	shr    DWORD PTR [edx],1
  404072:	mov    ebp,0xd5a4bbe8
  404077:	sub    al,0xfd
  404079:	jo     0x4040c2
  40407b:	mov    dl,0xf1
  40407d:	push   ebx
  40407e:	jns    0x404099
  404080:	push   edx
  404081:	jmp    0x6d86:0x986c42b4
  404088:	pusha  
  404089:	sahf   
  40408a:	sbb    eax,0x4e7e46ad
  40408f:	std    
  404090:	les    edi,FWORD PTR [ebx]
  404092:	pushf  
  404093:	and    al,0x44
  404095:	jg     0x40404b
  404097:	mov    al,0xe6
  404099:	push   ebp
  40409a:	mov    ecx,0xd017fe37
  40409f:	scas   al,BYTE PTR es:[edi]
  4040a0:	cmc    
  4040a1:	adc    edx,ebx
  4040a3:	fsub   QWORD PTR [edi+0x72]
  4040a6:	jne    0x4040bd
  4040a8:	lods   al,BYTE PTR ds:[esi]
  4040a9:	jo     0x4040b1
  4040ab:	mov    esi,0x9a09a5ba
  4040b0:	pop    ss
  4040b1:	enter  0xcad9,0x20
  4040b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040b6:	mov    DWORD PTR [ebx+eax*4+0x1],0x44f0afee
  4040be:	push   eax
  4040bf:	mov    ds:0xdd3736ea,al
  4040c4:	dec    ecx
  4040c5:	sub    eax,0x7a45a9e
  4040ca:	dec    edx
  4040cb:	scas   al,BYTE PTR es:[edi]
  4040cc:	ins    BYTE PTR es:[edi],dx
  4040cd:	iret   
  4040ce:	les    esp,FWORD PTR [edx+0x6d]
  4040d1:	(bad)
  4040d4:	xchg   esp,eax
  4040d5:	icebp  
  4040d6:	sahf   
  4040d7:	or     al,0x68
  4040d9:	add    edx,edi
  4040db:	sub    DWORD PTR [eax-0x2f5f6cc2],esp
  4040e1:	(bad)  [ecx-0x2a34b24f]
  4040e7:	jb     0x404139
  4040e9:	cwde   
  4040ea:	push   ds
  4040eb:	jp     0x404125
  4040ed:	in     al,dx
  4040ee:	scas   eax,DWORD PTR es:[edi]
  4040ef:	adc    BYTE PTR [ecx+0x143979fd],dh
  4040f5:	inc    ebx
  4040f6:	ret    0x678c
  4040f9:	cmp    cl,BYTE PTR ds:0xa3dea862
  4040ff:	pop    esp
  404100:	mov    al,BYTE PTR [ebx]
  404102:	mov    bl,0xc6
  404104:	adc    DWORD PTR [edx-0x67f41902],esp
  40410a:	and    BYTE PTR [esi],al
  40410c:	fwait
  40410d:	stc    
  40410e:	int3   
  40410f:	jns    0x404151
  404111:	adc    al,0xa7
  404113:	fistp  QWORD PTR [esp+ecx*4-0x4d]
  404117:	in     al,0xba
  404119:	in     al,0xe4
  40411b:	mov    ebx,0xf6927753
  404120:	fistp  QWORD PTR [edi+0x194c4018]
  404126:	scas   eax,DWORD PTR es:[edi]
  404127:	jne    0x4040cf
  404129:	push   ss
  40412a:	int    0xd8
  40412c:	inc    ecx
  40412d:	fnstsw WORD PTR [ecx+0x71c4e91a]
  404133:	sub    esi,ebx
  404135:	jge    0x404139
  404137:	in     al,dx
  404138:	leave  
  404139:	cs fs (bad) 
  40413c:	std    
  40413d:	sti    
  40413e:	add    cl,ch
  404140:	iret   
  404141:	xchg   esp,eax
  404142:	mov    ds,ebx
  404144:	mov    eax,ds:0xbd223509
  404149:	fist   DWORD PTR [esi-0xe880bb6]
  40414f:	leave  
  404150:	lahf   
  404151:	aas    
  404152:	push   ds
  404153:	popf   
  404154:	jecxz  0x404167
  404156:	add    ebx,DWORD PTR [ebp+0x5a]
  404159:	es ins DWORD PTR es:[edi],dx
  40415b:	and    al,BYTE PTR [eax-0x2a]
  40415e:	aad    0xf
  404160:	dec    ebp
  404161:	and    DWORD PTR [edi-0x2b],0x277818e4
  404168:	or     cl,BYTE PTR ds:0x7f1e9ddc
  40416e:	out    0x86,al
  404170:	loope  0x40411c
  404172:	(bad)  
  404174:	(bad)  [ecx-0x500abdc6]
  40417a:	pop    edi
  40417b:	mov    eax,ds:0x1b1191a5
  404180:	lock dec eax
  404182:	call   0xdd012d92
  404187:	dec    esp
  404188:	mov    edi,0x20a50642
  40418d:	lahf   
  40418e:	in     al,0xf4
  404190:	shl    eax,1
  404192:	arpl   WORD PTR [edi+0x58],dx
  404195:	xchg   esp,eax
  404196:	in     al,0x9b
  404198:	pop    edx
  404199:	aad    0xc1
  40419b:	into   
  40419c:	ja     0x404170
  40419e:	or     dl,BYTE PTR [esi-0x1e]
  4041a1:	mov    dl,BYTE PTR [esi+esi*8-0x1f]
  4041a5:	push   eax
  4041a6:	jno    0x404218
  4041a8:	(bad)  
  4041a9:	ds (bad) 
  4041ac:	fmul   QWORD PTR [ecx-0x7a]
  4041af:	adc    DWORD PTR [eax+0x35],ecx
  4041b2:	xchg   ebx,eax
  4041b3:	or     dl,BYTE PTR [ebp+ebx*8+0x5e342143]
  4041ba:	dec    ecx
  4041bb:	ret    
  4041bc:	shr    BYTE PTR [ebp+eax*4-0x715bdab3],0x59
  4041c4:	xchg   DWORD PTR [ecx-0x3cb82bb1],eax
  4041ca:	mov    al,0x79
  4041cc:	inc    eax
  4041cd:	inc    ebx
  4041ce:	xor    al,BYTE PTR ds:0xd65f7d6c
  4041d4:	push   0x30
  4041d6:	jae    0x4041b3
  4041d8:	mov    dl,0x76
  4041da:	in     al,0x5c
  4041dc:	aas    
  4041dd:	mov    esp,0x20698cdf
  4041e2:	imul   edi,DWORD PTR [edx+0xc],0xffffffdd
  4041e6:	(bad)  
  4041e8:	aas    
  4041e9:	dec    esi
  4041ea:	fs push ecx
  4041ec:	mov    bh,0xe8
  4041ee:	outs   dx,DWORD PTR ds:[esi]
  4041ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041f0:	xor    DWORD PTR [ebx-0x1eb136ec],edi
  4041f6:	(bad)  
  4041f7:	fst    DWORD PTR [esi]
  4041f9:	xchg   edx,eax
  4041fa:	push   cs
  4041fb:	fwait
  4041fc:	shr    BYTE PTR [edx-0x49],0xd2
  404200:	in     al,dx
  404201:	mov    ebp,DWORD PTR [eax+0x49c9515d]
  404207:	mov    dh,0x3
  404209:	cmp    bh,BYTE PTR [ebp+0x626f9bbd]
  40420f:	cmp    ebx,DWORD PTR [ebp*8+0x674d1347]
  404216:	ret    
  404217:	push   ds
  404218:	or     eax,DWORD PTR [ebx]
  40421a:	inc    esp
  40421b:	ficomp DWORD PTR [edi+0x41e0d8c4]
  404221:	and    DWORD PTR [ecx],0x2c
  404224:	pop    eax
  404225:	repz call 0x56fb0d2b
  40422b:	jnp    0x404291
  40422d:	jno    0x40427c
  40422f:	jbe    0x4041dd
  404231:	add    BYTE PTR [edi],al
  404233:	push   eax
  404234:	xor    eax,0x8782cb19
  404239:	sub    al,0x8
  40423b:	lods   al,BYTE PTR ds:[esi]
  40423c:	push   DWORD PTR [esi+0x55]
  40423f:	jp     0x404205
  404241:	call   0xdb0b070d
  404246:	je     0x4042b4
  404248:	frstor [ebx]
  40424a:	pop    esp
  40424b:	in     eax,0x3f
  40424d:	mov    BYTE PTR [edx-0x551e94ca],dh
  404253:	mov    ?,eax
  404255:	in     eax,dx
  404256:	push   esi
  404257:	inc    ebp
  404258:	mov    eax,0x59a6969e
  40425d:	loop   0x4042d7
  40425f:	pop    edx
  404260:	push   esp
  404261:	jle    0x404267
  404263:	pusha  
  404264:	adc    cl,BYTE PTR [ebx-0x5ec342b4]
  40426a:	fsub   DWORD PTR [ebx]
  40426c:	cmp    dh,bh
  40426e:	sbb    esi,DWORD PTR [ecx-0xc0c7f59]
  404274:	mov    ds:0x45456b56,al
  404279:	repnz adc BYTE PTR [edi-0x30],bh
  40427d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40427e:	mov    ebx,0xd2ddb345
  404283:	leave  
  404284:	dec    esp
  404285:	mov    dl,0x74
  404287:	add    DWORD PTR [edi+0x173098bb],esp
  40428d:	repz jae 0x4042fc
  404290:	jbe    0x40427d
  404292:	adc    BYTE PTR [ecx],0xa8
  404295:	xchg   BYTE PTR [ecx],dl
  404297:	dec    DWORD PTR [eax-0x27]
  40429a:	outs   dx,BYTE PTR es:[esi]
  40429c:	push   ds
  40429d:	lea    ebx,[ebx]
  40429f:	loopne 0x404251
  4042a1:	lods   al,BYTE PTR ds:[esi]
  4042a2:	cmp    al,bh
  4042a4:	mov    ecx,0x3782513d
  4042a9:	repnz cmp ch,BYTE PTR [ebx]
  4042ac:	pop    esi
  4042ad:	into   
  4042ae:	fwait
  4042af:	dec    eax
  4042b0:	mov    cl,0xd2
  4042b2:	mov    cl,ah
  4042b4:	lea    ebx,[ecx-0x30f0fa46]
  4042ba:	push   ss
  4042bb:	sub    eax,0xb0e4d247
  4042c0:	cwde   
  4042c1:	mov    al,ds:0xfb14b80f
  4042c6:	daa    
  4042c7:	dec    ecx
  4042c8:	or     al,0x92
  4042ca:	rcr    dl,cl
  4042cc:	shl    DWORD PTR [edi],1
  4042ce:	pop    es
  4042cf:	ja     0x4042be
  4042d1:	fs mov ebx,0xbabb8185
  4042d7:	push   ebp
  4042d8:	je     0x404352
  4042da:	scas   eax,DWORD PTR es:[edi]
  4042db:	jo     0x40431b
  4042dd:	mov    edi,0x10b77b99
  4042e2:	imul   ebp,DWORD PTR [edx-0x7ec83e9b],0xffffffd8
  4042e9:	jg     0x404312
  4042eb:	pop    esi
  4042ec:	lock xchg ebp,eax
  4042ee:	lea    eax,[ebx+edi*2]
  4042f1:	cwde   
  4042f2:	mov    dl,0xd0
  4042f4:	call   0xa0cd:0x9acdb2d7
  4042fb:	cmp    BYTE PTR [edi+0x4c],0x49
  4042ff:	sbb    BYTE PTR [edx],dl
  404301:	sbb    BYTE PTR [edx+0x21],dl
  404304:	pop    es
  404305:	push   0xffffffe0
  404307:	popa   
  404308:	xor    esi,ebp
  40430a:	adc    al,0xf4
  40430c:	loope  0x4042c5
  40430e:	(bad)  
  40430f:	xor    eax,0x83535472
  404314:	pusha  
  404315:	aam    0xef
  404317:	retf   
  404318:	jbe    0x4042a3
  40431a:	pop    edi
  40431b:	pop    ebx
  40431c:	ins    DWORD PTR es:[edi],dx
  40431d:	add    eax,0x8e6d1a83
  404322:	pop    ds
  404323:	dec    esi
  404324:	inc    ecx
  404325:	push   ebp
  404326:	inc    edi
  404327:	xchg   DWORD PTR [ebx+0x7e],esp
  40432a:	fcomp  DWORD PTR [edi+0x3eb4ea12]
  404330:	or     eax,0x10a06261
  404335:	mov    esi,0xce80bba1
  40433a:	jmp    0x4043b2
  40433c:	(bad)  
  40433d:	push   0xffffffeb
  40433f:	adc    BYTE PTR [ecx],dl
  404341:	pop    edx
  404342:	bound  esp,QWORD PTR [ecx+0x39]
  404345:	inc    ebx
  404346:	sub    BYTE PTR [eax],dl
  404348:	hlt    
  404349:	and    BYTE PTR [eax+0x4f339982],0x43
  404350:	push   cs
  404351:	in     eax,0xd6
  404353:	test   edx,ebp
  404355:	push   ebp
  404356:	stos   BYTE PTR es:[edi],al
  404357:	sub    DWORD PTR [edi-0x5f],ebp
  40435a:	push   ss
  40435b:	bound  ebp,QWORD PTR [eax-0x4468de95]
  404361:	(bad)  
  404363:	sbb    edi,DWORD PTR [edx]
  404365:	sbb    cl,BYTE PTR [ebp+edx*8-0x33fa10ad]
  40436c:	jns    0x4043d9
  40436e:	ror    DWORD PTR [ecx+edi*4-0x31],0x60
  404373:	imul   eax,DWORD PTR [edx-0x12],0xfffffffe
  404377:	cld    
  404378:	sub    al,0x77
  40437a:	nop
  40437b:	jb     0x404390
  40437d:	and    BYTE PTR [bp+0x6956],bl
  404382:	pusha  
  404383:	jg     0x404390
  404385:	mov    DWORD PTR [ebp+0x1e],esi
  404388:	sub    ebx,ebp
  40438a:	outs   dx,DWORD PTR ds:[esi]
  40438b:	adc    DWORD PTR [edi],edx
  40438d:	pop    ss
  40438e:	loop   0x4043d7
  404390:	into   
  404391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404392:	imul   edx,ebp,0x1afcee1
  404398:	es ret 0xda53
  40439c:	xor    eax,0x74375372
  4043a1:	xor    BYTE PTR [esi],cl
  4043a3:	fld    st(6)
  4043a5:	mov    dh,0xd1
  4043a7:	cmc    
  4043a8:	out    dx,eax
  4043a9:	fist   DWORD PTR [edx+0x1b1e722]
  4043af:	jge    0x40441b
  4043b1:	stos   DWORD PTR es:[edi],eax
  4043b2:	xchg   edi,eax
  4043b3:	pop    eax
  4043b4:	lods   eax,DWORD PTR ds:[esi]
  4043b5:	das    
  4043b6:	xchg   BYTE PTR [ebx],ah
  4043b8:	rcr    esi,cl
  4043ba:	(bad)
  4043bd:	xchg   esp,eax
  4043be:	add    esp,DWORD PTR [ebx]
  4043c0:	or     al,BYTE PTR [edi]
  4043c2:	jno    0x4043a7
  4043c4:	(bad)  
  4043c5:	gs jnp 0x404373
  4043c8:	xchg   edx,eax
  4043c9:	loope  0x40442e
  4043cb:	lea    ebp,[edx-0x319d0251]
  4043d1:	mov    dl,0x5a
  4043d3:	or     ecx,DWORD PTR [eax+0x22]
  4043d6:	out    0x7f,eax
  4043d8:	pop    ebx
  4043d9:	ss inc edi
  4043db:	(bad)  
  4043dc:	call   0x2f5c0252
  4043e1:	cmp    eax,0xf9bedeff
  4043e6:	shr    BYTE PTR [edx+esi*1],0x41
  4043ea:	and    al,0x1c
  4043ec:	mov    ebp,?
  4043ee:	adc    ecx,ebx
  4043f0:	loopne 0x4043d3
  4043f2:	sub    al,0x40
  4043f4:	sub    cl,0xc9
  4043f7:	mov    edi,DWORD PTR [ebx+0x2100352a]
  4043fd:	pop    edi
  4043fe:	pop    ebp
  4043ff:	xchg   edx,eax
  404400:	rcl    DWORD PTR [eax],cl
  404402:	loope  0x40443b
  404404:	mov    bh,0x58
  404406:	mov    dl,0xcb
  404408:	outs   dx,DWORD PTR ds:[esi]
  404409:	xchg   DWORD PTR [ebp-0x36],ebp
  40440c:	mov    dh,0xc7
  40440e:	out    0xcc,al
  404410:	cmp    al,BYTE PTR [ecx-0x4]
  404413:	adc    BYTE PTR [ebp-0x22c27157],0x2d
  40441a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40441b:	test   al,0x2f
  40441e:	and    dl,0xa7
  404421:	mov    ds:0x2d500dc8,eax
  404426:	sub    al,dl
  404428:	cdq    
  404429:	hlt    
  40442a:	fiadd  DWORD PTR [ebp+0x1cf21b2b]
  404430:	pushf  
  404431:	daa    
  404432:	jg     0x4043f6
  404434:	lods   eax,DWORD PTR ds:[esi]
  404435:	and    DWORD PTR [esp+esi*2+0x6a67e829],ecx
  40443c:	cli    
  40443d:	dec    edx
  40443e:	mov    ch,0x30
  404440:	mov    ebx,0xcf0270b1
  404445:	sbb    BYTE PTR [ebx+0x81157e5],ah
  40444b:	or     eax,0xba087f6a
  404451:	pop    ebx
  404452:	inc    esi
  404453:	pop    ebp
  404454:	gs jge 0x404487
  404457:	je     0x4044bf
  404459:	rol    dh,1
  40445b:	test   eax,0x21a53ee6
  404460:	push   0x79
  404462:	jmp    0x232d7346
  404467:	mov    bh,0x2a
  404469:	fisubr DWORD PTR fs:[edi+0x77]
  40446d:	cmp    eax,0x3f8d481d
  404472:	lds    edx,FWORD PTR [edx+0x13]
  404475:	xchg   esi,eax
  404476:	mov    ah,0x8f
  404478:	pop    esi
  404479:	rcl    eax,0x33
  40447c:	sahf   
  40447d:	out    dx,al
  40447e:	and    esi,DWORD PTR [ebx]
  404480:	dec    ebx
  404481:	mov    WORD PTR [ebx-0x17],fs
  404484:	fdiv   DWORD PTR [ebx-0x26]
  404487:	ins    BYTE PTR es:[edi],dx
  404488:	jg     0x40440d
  40448a:	out    0x59,al
  40448c:	leave  
  40448d:	nop
  40448e:	rcr    DWORD PTR [edi],1
  404490:	retf   0x5347
  404493:	xchg   edx,eax
  404494:	pop    ds
  404495:	or     eax,0xae7c089f
  40449a:	xchg   edi,eax
  40449b:	ja     0x4044d3
  40449d:	cmp    DWORD PTR [ecx+0x6f20f00b],eax
  4044a3:	test   DWORD PTR [eax-0x733436e5],0xeae1db4c
  4044ad:	add    BYTE PTR [edi+edx*8-0x3b6e1462],cl
  4044b4:	ret    
  4044b5:	mov    ebx,0xb6377ba5
  4044ba:	shr    DWORD PTR [esi+ebx*8-0x68],0xee
  4044bf:	loop   0x404469
  4044c1:	add    al,0x53
  4044c3:	xchg   ecx,eax
  4044c4:	test   eax,0x3920dd5d
  4044c9:	cmp    dl,BYTE PTR [ecx]
  4044cb:	mov    esi,0xc8cdbe06
  4044d0:	(bad)  
  4044d1:	stos   DWORD PTR es:[edi],eax
  4044d2:	cld    
  4044d3:	call   0x34b5:0x560a2b57
  4044da:	pop    es
  4044db:	leave  
  4044dc:	enter  0xcbd2,0x6a
  4044e0:	jnp    0x4044b8
  4044e2:	dec    edx
  4044e3:	aam    0xa2
  4044e5:	and    bh,ah
  4044e7:	mov    dh,0xca
  4044e9:	jnp    0x4044a3
  4044eb:	pop    ebp
  4044ec:	jns    0x404549
  4044ee:	popf   
  4044ef:	pusha  
  4044f0:	add    al,0x51
  4044f2:	mov    bh,0xf1
  4044f4:	mov    ds:0x9c4c2e2c,al
  4044f9:	push   edx
  4044fa:	fistp  DWORD PTR [eax]
  4044fc:	cmc    
  4044fd:	fild   WORD PTR [edi]
  4044ff:	jmp    0xe4f1b629
  404504:	jg     0x4044f5
  404506:	scas   eax,DWORD PTR es:[di]
  404508:	dec    ebx
  404509:	jb     0x404532
  40450b:	push   edi
  40450c:	sub    bh,BYTE PTR ss:[ebx]
  40450f:	lods   al,BYTE PTR ds:[esi]
  404510:	icebp  
  404511:	and    DWORD PTR [ebx+0x1b],ecx
  404514:	mov    ds,WORD PTR [edi]
  404516:	xchg   esp,eax
  404517:	mov    edi,0xef65019b
  40451c:	lock or edi,DWORD PTR [ebx+0x67]
  404520:	cwde   
  404521:	out    dx,eax
  404522:	js     0x404540
  404524:	int    0xd2
  404526:	jmp    0x404502
  404528:	dec    ecx
  404529:	jae    0x4045a0
  40452b:	stos   BYTE PTR es:[edi],al
  40452c:	add    al,0x58
  40452e:	and    eax,0x50476521
  404533:	dec    ecx
  404534:	jmp    0x40451c
  404536:	add    DWORD PTR [edx+eiz*2-0x7],edi
  40453a:	aaa    
  40453b:	mov    eax,0xa9f78866
  404540:	les    edx,FWORD PTR [ebx]
  404542:	add    esi,DWORD PTR [edi+0x2]
  404545:	setnp  BYTE PTR [ebp-0x75]
  404549:	ficomp WORD PTR [esi]
  40454b:	dec    eax
  40454c:	outs   dx,DWORD PTR ds:[esi]
  40454d:	add    DWORD PTR [eax-0x31],esi
  404550:	pop    ebx
  404551:	nop
  404552:	xor    bh,dl
  404554:	shl    BYTE PTR [ecx],0xb0
  404557:	lock pop esp
  404559:	mov    ebx,0xbe4c03c6
  40455e:	add    BYTE PTR [eax-0x6855aa99],bh
  404564:	stos   BYTE PTR es:[edi],al
  404565:	dec    eax
  404566:	xor    DWORD PTR [eax],edx
  404568:	push   ecx
  404569:	inc    esp
  40456a:	bound  edi,QWORD PTR [ebp+0x17]
  40456d:	outs   dx,BYTE PTR ds:[esi]
  40456e:	stos   BYTE PTR es:[edi],al
  40456f:	or     al,0x1
  404571:	es mov bh,0x1a
  404574:	ja     0x4045de
  404576:	push   ss
  404577:	and    eax,0xae3b4b58
  40457c:	out    0xf0,eax
  40457e:	lock ins DWORD PTR es:[edi],dx
  404580:	(bad)  
  404581:	fwait
  404582:	xor    eax,DWORD PTR [esi+0x18b645fa]
  404588:	mov    es,WORD PTR [esi]
  40458a:	pop    esp
  40458b:	dec    esp
  40458c:	pop    edx
  40458d:	fdiv   QWORD PTR [eax-0x22]
  404590:	push   ecx
  404591:	add    eax,0x5427abc2
  404596:	mov    DWORD PTR [ecx+0x17],ecx
  404599:	shl    BYTE PTR [ebp+0x27],0x79
  40459d:	jmp    0x4045dd
  40459f:	icebp  
  4045a0:	mov    ds:0x4bc1f5c1,eax
  4045a5:	mov    bl,0xe2
  4045a7:	pop    esi
  4045a8:	add    BYTE PTR [ebp*8-0x5e190530],bh
  4045af:	cmp    BYTE PTR [edi-0x5a],cl
  4045b2:	adc    edi,DWORD PTR [edi-0x18]
  4045b5:	imul   esp,DWORD PTR [esi+0x212f56a],0x7029e743
  4045bf:	call   0xa34d:0xba6660d0
  4045c6:	lock test DWORD PTR [esi+0x655c7771],ebx
  4045cd:	addr16 or ch,ah
  4045d0:	cmp    edi,eax
  4045d2:	pop    es
  4045d3:	xchg   edi,eax
  4045d4:	jge    0x404652
  4045d6:	xchg   edi,eax
  4045d7:	or     eax,DWORD PTR [ebx+0x2d690f77]
  4045dd:	sahf   
  4045de:	xchg   ebx,eax
  4045df:	cmp    esp,DWORD PTR [eax+0x2e]
  4045e2:	mov    ah,0x3c
  4045e4:	stc    
  4045e5:	xchg   ebp,eax
  4045e6:	loop   0x4045f1
  4045e8:	mov    bx,0xddd5
  4045ec:	fdivp  st(3),st
  4045ee:	je     0x404623
  4045f0:	mov    esp,0x537ac74d
  4045f5:	jl     0x4045e4
  4045f7:	(bad)  
  4045f8:	pop    esp
  4045f9:	dec    ebx
  4045fa:	loopne 0x4045a8
  4045fc:	clc    
  4045fd:	mov    eax,ds:0x1ec57421
  404602:	out    dx,al
  404603:	ret    0x9b4f
  404606:	mov    dl,dl
  404608:	lea    ebx,cs:[ebx+0x19]
  40460c:	into   
  40460d:	sub    DWORD PTR [edx],ebp
  40460f:	call   0xcb1b:0x1d41e3f4
  404616:	outs   dx,BYTE PTR ds:[esi]
  404617:	test   al,0xba
  404619:	mov    esp,DWORD PTR [esi+ebx*2-0x39]
  40461d:	and    edx,ebx
  40461f:	leave  
  404620:	cmp    DWORD PTR [ebp-0x23],esp
  404623:	mov    edi,0xe34a692e
  404628:	hlt    
  404629:	out    0x7e,eax
  40462b:	test   eax,0x6b11139b
  404630:	lock fldenv [edi+ecx*8+0x7873c9db]
  404638:	call   0x52da:0xd6b848c2
  40463f:	sbb    ah,dl
  404641:	in     eax,dx
  404642:	jp     0x4045d6
  404644:	xor    al,0x2b
  404646:	cmp    BYTE PTR [ecx-0x1cdc1925],ch
  40464c:	push   ecx
  40464d:	inc    ecx
  40464e:	sub    ecx,DWORD PTR [eax]
  404650:	cli    
  404651:	cmc    
  404652:	xchg   esp,eax
  404653:	cmp    esp,DWORD PTR [ebp*4-0x292dccfa]
  40465a:	fist   WORD PTR [ebp-0x7b]
  40465d:	std    
  40465e:	inc    eax
  40465f:	(bad)  
  404660:	jnp    0x4045ed
  404662:	push   ss
  404663:	test   eax,0x9aefe3f8
  404668:	xchg   esi,eax
  404669:	enter  0x9eee,0xdb
  40466d:	pop    es
  40466e:	or     DWORD PTR [eax+0x2d2c92fe],esi
  404674:	into   
  404675:	and    DWORD PTR [ebx],eax
  404677:	jp     0x4046f1
  404679:	rcl    bh,0x94
  40467c:	fs out dx,eax
  40467e:	mov    ds:0x48494263,eax
  404683:	inc    eax
  404684:	inc    ecx
  404685:	push   0x4056dcc8
  40468a:	xchg   ecx,eax
  40468b:	fisttp QWORD PTR [esi]
  40468d:	dec    ecx
  40468e:	in     eax,dx
  40468f:	shl    BYTE PTR ds:[edi-0xa],cl
  404693:	xchg   ebp,eax
  404694:	aas    
  404695:	sar    ebp,0x2d
  404698:	(bad)  
  404699:	aas    
  40469a:	mov    ds:0xa4410ac5,al
  40469f:	fidiv  WORD PTR [eax-0x318c368f]
  4046a5:	xchg   ebx,eax
  4046a6:	push   edi
  4046a7:	cmp    ecx,0x7026a004
  4046ad:	cdq    
  4046ae:	mov    esp,eax
  4046b0:	sbb    BYTE PTR [edx],ch
  4046b2:	sub    esp,ebp
  4046b4:	iret   
  4046b5:	mov    al,BYTE PTR [edi+0x582214db]
  4046bb:	data16 loope 0x404714
  4046be:	jle    0x40470a
  4046c0:	mov    dh,0x23
  4046c2:	xchg   al,ah
  4046c4:	sub    dl,BYTE PTR [edx-0x3e4e8dec]
  4046ca:	sub    al,BYTE PTR ds:0xec9ce196
  4046d0:	mov    WORD PTR [ecx*8+0x4e9ee683],?
  4046d7:	sub    eax,0xb9987a1f
  4046dc:	sbb    esp,esi
  4046de:	les    esi,FWORD PTR [edx+eax*8+0x9f2c307]
  4046e5:	jle    0x40472f
  4046e7:	sbb    DWORD PTR [esp+edx*1-0x40],ebx
  4046eb:	sub    DWORD PTR ds:0x1f32e3e7,eax
  4046f1:	dec    ecx
  4046f2:	or     eax,0x31ce746a
  4046f7:	int3   
  4046f8:	sub    al,0xd6
  4046fa:	in     al,0x67
  4046fc:	jns    0x40468c
  4046fe:	cmp    al,0x74
  404700:	inc    eax
  404701:	out    0xba,al
  404703:	loopne 0x404762
  404705:	int3   
  404706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404708:	(bad)  
  40470a:	mov    esp,0x3e631715
  40470f:	fdivrp st(6),st
  404711:	shl    BYTE PTR [esi-0x39565beb],0x85
  404718:	lock inc ebx
  40471a:	and    BYTE PTR [ebx],bh
  40471c:	mov    ebp,0x4e23164e
  404721:	and    edi,0x78
  404724:	lods   al,BYTE PTR ds:[esi]
  404725:	ret    
  404726:	jno    0x404720
  404728:	pusha  
  404729:	xor    edi,DWORD PTR [ebx]
  40472b:	jne    0x40478a
  40472d:	mov    eax,ds:0x82c3dd8c
  404732:	dec    ebp
  404733:	mov    cl,0x6c
  404735:	cmp    ecx,DWORD PTR [edx]
  404737:	jno    0x404777
  404739:	jb     0x404729
  40473b:	dec    edi
  40473c:	mov    dh,0x4a
  40473e:	add    cl,BYTE PTR [edx]
  404740:	je     0x4046f8
  404742:	fmul   DWORD PTR [edx-0x2c]
  404745:	mov    esi,0x84cca53e
  40474a:	mov    BYTE PTR [esi+0x21cf43a1],ah
  404750:	sub    dh,BYTE PTR [eax-0x7c]
  404753:	(bad)  
  404754:	mov    eax,ds:0x585920f9
  404759:	xchg   ebp,eax
  40475a:	js     0x4047c8
  40475c:	fsubr  st(6),st
  40475e:	mov    ds:0x7ea91f67,eax
  404763:	xor    ebp,0x64751a0d
  404769:	fwait
  40476a:	mov    dl,0x4d
  40476c:	imul   esi,edi,0xc5744a55
  404772:	out    dx,al
  404773:	sbb    dl,ah
  404775:	aam    0xa6
  404777:	ror    DWORD PTR [edx+0x1c],cl
  40477a:	ds and al,0xa2
  40477d:	dec    eax
  40477e:	repz not BYTE PTR [ecx-0x41]
  404782:	jge    0x404746
  404784:	dec    edi
  404785:	rcr    esi,cl
  404787:	or     ah,ah
  404789:	test   bh,ah
  40478b:	test   eax,esi
  40478d:	cmp    dl,al
  40478f:	mov    dh,0x2
  404791:	out    dx,al
  404792:	xor    al,0xc5
  404794:	lahf   
  404795:	dec    eax
  404796:	pop    es
  404797:	fisub  WORD PTR [edx]
  404799:	mov    ds:0xa4c9eea2,al
  40479e:	mov    ah,0xe1
  4047a0:	adc    DWORD PTR [esi+0x78c4240],ebp
  4047a6:	(bad)  
  4047a7:	mov    ds:0xe4350a0d,al
  4047ac:	and    BYTE PTR [esi],bh
  4047ae:	sahf   
  4047af:	out    0x98,eax
  4047b1:	sar    DWORD PTR [esi+0x4c],0x9e
  4047b5:	(bad)  
  4047b6:	push   edx
  4047b7:	fisub  WORD PTR [ecx]
  4047b9:	(bad)  
  4047bc:	call   0x60aa:0xb5958f04
  4047c3:	mov    eax,ds:0x2dae7bae
  4047c8:	fmul   DWORD PTR [esp+eax*1+0x4c2a2576]
  4047cf:	sub    eax,0x4c5b3933
  4047d4:	fnstsw WORD PTR [ebp+0x627d52a4]
  4047da:	mov    ?,WORD PTR [ebx]
  4047dc:	loope  0x4047b4
  4047de:	sbb    DWORD PTR [ebp-0x5c],ebx
  4047e1:	ins    DWORD PTR es:[edi],dx
  4047e2:	or     cl,BYTE PTR [ebx+0x7c]
  4047e5:	ror    BYTE PTR [si],1
  4047e8:	test   edx,ebx
  4047ea:	xor    al,0xa9
  4047ec:	jne    0x4047a7
  4047ee:	sar    DWORD PTR [esi-0x7ec94e16],1
  4047f4:	xor    al,0x39
  4047f6:	add    dh,ch
  4047f8:	int3   
  4047f9:	ret    
  4047fa:	out    dx,eax
  4047fb:	jmp    0xdc47577a
  404800:	int    0xe3
  404802:	sub    BYTE PTR [edx],dh
  404804:	out    dx,al
  404805:	rol    ah,1
  404807:	dec    esi
  404808:	add    edx,DWORD PTR [edi]
  40480a:	lock jge 0x40480b
  40480d:	ret    
  40480e:	dec    ebp
  40480f:	cdq    
  404810:	mov    edi,0xfe4e861b
  404815:	(bad)
  404818:	aas    
  404819:	dec    edi
  40481a:	dec    BYTE PTR [ecx+edx*2]
  40481d:	fnstenv [ecx+0x400bb0a8]
  404823:	hlt    
  404824:	ret    
  404825:	nop
  404826:	and    BYTE PTR [eax],ah
  404828:	int3   
  404829:	scas   eax,DWORD PTR es:[edi]
  40482a:	scas   al,BYTE PTR es:[edi]
  40482b:	cwde   
  40482c:	or     al,0xf7
  40482e:	jle    0x4047f7
  404830:	scas   eax,DWORD PTR es:[edi]
  404831:	push   ds
  404832:	jne    0x40489b
  404834:	xlat   BYTE PTR ds:[ebx]
  404835:	mov    al,0x84
  404837:	ja     0x404876
  404839:	in     eax,dx
  40483a:	cmp    al,0xe8
  40483c:	pop    edi
  40483d:	and    eax,0x43615be5
  404842:	xchg   edi,eax
  404843:	test   al,0x86
  404845:	xlat   BYTE PTR ds:[ebx]
  404846:	call   0xf7f9:0x6d8ff88f
  40484d:	(bad)  
  40484e:	cli    
  40484f:	push   ebp
  404850:	sbb    al,0x56
  404852:	(bad)  
  404853:	pop    ss
  404854:	sub    BYTE PTR [esi],bl
  404856:	cmp    esp,DWORD PTR [eax+0x60e08b77]
  40485c:	add    eax,0x6d2bd702
  404861:	push   ss
  404862:	out    dx,eax
  404863:	je     0x40480e
  404865:	push   edi
  404866:	fcomi  st,st(6)
  404868:	pop    edx
  404869:	mov    ds:0x840af32e,eax
  40486e:	int    0x46
  404870:	mov    ecx,0x811c67d8
  404875:	stc    
  404876:	jl     0x4048b1
  404878:	mov    DWORD PTR [edx],edi
  40487a:	mov    al,ds:0x8807d698
  40487f:	pop    es
  404880:	call   0x755e:0x5323fba1
  404887:	aad    0x30
  404889:	aam    0xbb
  40488b:	dec    esi
  40488c:	pop    ebx
  40488d:	push   ds
  40488e:	add    DWORD PTR [edi+0x2f],edi
  404891:	dec    edx
  404892:	test   al,0xb5
  404894:	lock ss dec esp
  404897:	pusha  
  404898:	pop    ecx
  404899:	jmp    0x404870
  40489b:	enter  0xa706,0x14
  40489f:	fisubr DWORD PTR [ebp-0x6a]
  4048a2:	in     eax,0x86
  4048a4:	std    
  4048a5:	ret    0xff7e
  4048a8:	call   0x81b91722
  4048ad:	imul   edi,DWORD PTR [edx],0xc6b323bd
  4048b3:	js     0x404899
  4048b5:	mov    ah,0x2f
  4048b7:	les    ecx,FWORD PTR [edi+0x7a4e849d]
  4048bd:	nop
  4048be:	pop    edx
  4048bf:	xor    ecx,ebx
  4048c1:	or     eax,0x8ba3172c
  4048c6:	ds fwait
  4048c8:	or     dh,BYTE PTR [esi]
  4048ca:	add    BYTE PTR [edi],al
  4048cc:	stos   DWORD PTR es:[edi],eax
  4048cd:	add    cl,BYTE PTR [ebx-0x5d4ff829]
  4048d3:	mov    ds:0x131663ab,eax
  4048d8:	add    ecx,ebx
  4048da:	out    0xe6,al
  4048dc:	jne    0x40488c
  4048de:	int    0xcf
  4048e0:	loopne 0x40494b
  4048e2:	test   al,0xd7
  4048e4:	cwde   
  4048e5:	adc    al,0xc5
  4048e7:	sub    al,0xed
  4048e9:	dec    edi
  4048ea:	loopne 0x4048ce
  4048ec:	loope  0x404952
  4048ee:	es adc dl,bh
  4048f1:	sar    BYTE PTR [esi],cl
  4048f3:	ror    edx,0x5f
  4048f6:	int    0xd5
  4048f8:	retf   0x7c28
  4048fb:	jp     0x404904
  4048fd:	scas   eax,DWORD PTR es:[edi]
  4048fe:	dec    ebx
  4048ff:	shl    ebx,cl
  404901:	pop    edi
  404902:	mov    edx,0xd4e3466d
  404907:	repnz sub dh,BYTE PTR [edi+ebx*4+0x211d42ad]
  40490f:	dec    esp
  404910:	pusha  
  404911:	icebp  
  404912:	adc    ah,al
  404914:	(bad)  
  404915:	int3   
  404916:	or     edx,DWORD PTR [edx]
  404918:	clc    
  404919:	mov    ecx,0xbf018233
  40491e:	sub    cl,ah
  404920:	in     eax,0x28
  404922:	pop    ss
  404923:	sbb    DWORD PTR [edi-0x4797481a],0xffffff87
  40492a:	(bad)  
  40492b:	fwait
  40492c:	push   0x18367fac
  404931:	out    0x7a,al
  404933:	test   BYTE PTR [edx],al
  404935:	jmp    0x404909
  404937:	gs or  eax,esi
  40493a:	mov    ds,WORD PTR [esi+0x2c18e745]
  404940:	arpl   WORD PTR [edi-0x11],bp
  404943:	cli    
  404944:	sub    eax,0x158dbb5f
  404949:	test   eax,0x71a259ae
  40494e:	xchg   edx,eax
  40494f:	push   esi
  404950:	mov    esi,0x34a56439
  404955:	add    eax,0x881d613e
  40495a:	jecxz  0x40494c
  40495c:	xchg   ebp,eax
  40495d:	xor    dl,ah
  40495f:	sbb    ch,bl
  404961:	inc    ebp
  404962:	pop    ebx
  404963:	cmp    BYTE PTR [ebx-0x51cfd9d3],0x88
  40496a:	sub    dh,BYTE PTR [ebx]
  40496c:	pop    ss
  40496d:	jnp    0x404999
  40496f:	popa   
  404970:	xor    BYTE PTR [esi-0x64],bh
  404973:	push   0x1347c109
  404978:	cs inc esp
  40497a:	xlat   BYTE PTR ds:[ebx]
  40497b:	(bad)  
  40497c:	jo     0x404921
  40497e:	cld    
  40497f:	dec    ebp
  404980:	fst    DWORD PTR [eax]
  404982:	je     0x404987
  404984:	stos   DWORD PTR es:[edi],eax
  404985:	sti    
  404986:	xor    eax,0xd5067b2c
  40498b:	ss leave 
  40498d:	int    0xf6
  40498f:	add    DWORD PTR [esi],edi
  404991:	retf   0x350f
  404994:	cli    
  404995:	cmp    eax,0xe75ff562
  40499a:	sti    
  40499b:	lock mov edi,0x680a33f9
  4049a1:	adc    DWORD PTR [esi-0x15],eax
  4049a4:	fcom   st(0)
  4049a6:	test   DWORD PTR [edi-0x4d06bbd8],edx
  4049ac:	scas   eax,DWORD PTR es:[edi]
  4049ad:	and    BYTE PTR [edi-0x4785bedb],ch
  4049b3:	xchg   esi,eax
  4049b4:	jmp    0x458d4104
  4049b9:	ret    
  4049ba:	cmp    al,0xb0
  4049bc:	push   0x264410d1
  4049c1:	das    
  4049c2:	mov    ebx,0xe6dc7ba3
  4049c7:	aaa    
  4049c8:	push   0xfe0c2bfd
  4049cd:	scas   eax,DWORD PTR es:[edi]
  4049ce:	inc    ecx
  4049cf:	mov    esi,DWORD PTR [eax]
  4049d1:	lahf   
  4049d2:	div    DWORD PTR [ebx+0x24e51f7b]
  4049d8:	inc    edi
  4049d9:	out    0x40,eax
  4049db:	xor    ch,al
  4049dd:	mov    ch,0x99
  4049df:	repnz retf 
  4049e1:	iret   
  4049e2:	jb     0x404976
  4049e4:	xchg   dl,dl
  4049e6:	mov    eax,ecx
  4049e8:	pushf  
  4049e9:	jnp    0x404a18
  4049eb:	push   0xd185f491
  4049f0:	mov    edi,esp
  4049f2:	dec    eax
  4049f3:	mov    eax,0x1833226a
  4049f8:	ret    
  4049f9:	dec    edx
  4049fa:	fmul   st,st(3)
  4049fc:	shl    DWORD PTR [ebx],cl
  4049fe:	mov    WORD PTR [edx+0xb],ss
  404a01:	retf   0x5663
  404a04:	retf   0x6fcd
  404a07:	scas   eax,DWORD PTR es:[edi]
  404a08:	mov    ah,0xe2
  404a0a:	clc    
  404a0b:	mov    BYTE PTR [ebx+ecx*4-0x45],bl
  404a0f:	push   0x5a
  404a11:	push   0x18
  404a13:	into   
  404a14:	pop    esp
  404a15:	xchg   ebx,eax
  404a16:	fiadd  DWORD PTR [esi+0x210362b3]
  404a1c:	leave  
  404a1d:	scas   eax,DWORD PTR es:[edi]
  404a1e:	arpl   WORD PTR [eax],sp
  404a20:	mov    ebx,0x9b0cab5f
  404a25:	fcomp  DWORD PTR [esi+ecx*2+0x6db95c80]
  404a2c:	adc    BYTE PTR [ebp-0x1bccbec5],dl
  404a32:	mov    ds:0x4880d890,eax
  404a37:	mov    dl,0x34
  404a39:	and    al,0x7b
  404a3b:	xchg   ebx,eax
  404a3c:	add    eax,DWORD PTR [edi]
  404a3e:	fdivr  st(1),st
  404a40:	mov    ebx,0x6debbab0
  404a45:	sub    al,BYTE PTR ds:0xc326260
  404a4b:	clc    
  404a4c:	loopne 0x404a1d
  404a4e:	push   ds
  404a4f:	xor    eax,DWORD PTR [eax-0x2]
  404a52:	cmp    BYTE PTR [ebx],0x26
  404a55:	mov    ebx,0xfb448fe8
  404a5a:	sub    al,0x42
  404a5c:	sbb    DWORD PTR [esi+0x6e84f6a2],ecx
  404a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a63:	xlat   BYTE PTR ds:[ebx]
  404a64:	xor    esi,edi
  404a66:	ret    0x51
  404a69:	mov    ds:0xbec2930c,al
  404a6e:	dec    esp
  404a6f:	mov    ebp,0x6e3a9a7f
  404a74:	jnp    0x404a71
  404a76:	xor    eax,0x6e054a9d
  404a7b:	ret    0x1d64
  404a7e:	pushf  
  404a7f:	outs   dx,DWORD PTR ds:[esi]
  404a80:	sub    eax,0x5456584f
  404a85:	or     BYTE PTR [edx+0x1c],bh
  404a88:	mov    dh,0xf3
  404a8a:	mov    DWORD PTR [eax],ebp
  404a8c:	mov    al,ds:0x49958456
  404a91:	xor    eax,0x1db02eed
  404a96:	xchg   esi,eax
  404a97:	or     dl,dh
  404a99:	daa    
  404a9a:	add    eax,DWORD PTR [edx+ebx*1+0x77]
  404a9e:	retf   0x1ce5
  404aa1:	sub    eax,0xe1f84ef9
  404aa6:	in     al,0x37
  404aa8:	mov    al,0xd5
  404aaa:	or     DWORD PTR [eax+0x429bec3],esp
  404ab0:	mov    ebp,0x4cfd318c
  404ab5:	jp     0x404abd
  404ab7:	dec    ebx
  404ab8:	(bad)  
  404ab9:	and    esi,DWORD PTR [eax-0x61]
  404abc:	rcr    DWORD PTR [ebx+0x1c2a94b2],1
  404ac2:	stc    
  404ac3:	push   es
  404ac4:	jmp    0x9a47cac5
  404ac9:	stos   DWORD PTR es:[edi],eax
  404aca:	popa   
  404acb:	jge    0x404a56
  404acd:	or     bl,BYTE PTR [ecx-0x23efd303]
  404ad3:	pushf  
  404ad4:	jmp    0xecc28430
  404ad9:	enter  0x89d0,0xc9
  404add:	mov    si,0xca23
  404ae1:	or     bl,ch
  404ae3:	loopne 0x404b42
  404ae5:	in     eax,dx
  404ae6:	dec    edx
  404ae7:	out    0x21,eax
  404ae9:	(bad)  
  404aea:	mov    ds:0x23501ea9,eax
  404aef:	jne    0x404b68
  404af1:	mov    DWORD PTR [esi-0x9664b12],ecx
  404af7:	and    cl,0x7
  404afa:	jle    0x404b27
  404afc:	push   edx
  404afd:	inc    ebx
  404afe:	jbe    0x404b25
  404b00:	mov    BYTE PTR [esp+edx*4-0x441d0e3a],al
  404b07:	xlat   BYTE PTR ds:[ebx]
  404b08:	sbb    bh,dl
  404b0a:	enter  0xb515,0xe2
  404b0e:	inc    ecx
  404b0f:	sar    DWORD PTR [edx-0x2],1
  404b12:	jnp    0x404b78
  404b14:	mov    edx,0x3f2a2b6e
  404b19:	push   ecx
  404b1a:	and    bl,BYTE PTR [esi-0x656f65b9]
  404b20:	nop
  404b21:	jae    0x404abc
  404b23:	data16 icebp 
  404b25:	jae    0x404adc
  404b27:	sbb    bh,BYTE PTR [eax+eiz*2-0x783c4b63]
  404b2e:	xchg   esi,eax
  404b2f:	mov    edi,DWORD PTR [edi]
  404b31:	pop    ecx
  404b32:	iret   
  404b33:	dec    ebp
  404b34:	cli    
  404b35:	push   edi
  404b36:	pop    esi
  404b37:	fiadd  WORD PTR [esi-0x19]
  404b3a:	lods   al,BYTE PTR ds:[esi]
  404b3b:	cmp    bl,dl
  404b3d:	retf   
  404b3e:	mov    ah,0x31
  404b40:	neg    dh
  404b42:	test   al,0x89
  404b44:	dec    eax
  404b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b46:	lahf   
  404b47:	jp     0x404b71
  404b49:	stc    
  404b4a:	stc    
  404b4b:	pop    edx
  404b4c:	fsubr  DWORD PTR [edx+eiz*2]
  404b4f:	push   ss
  404b50:	mov    ch,0x1
  404b52:	nop
  404b53:	outs   dx,BYTE PTR ds:[esi]
  404b54:	push   esi
  404b55:	iret   
  404b56:	call   FWORD PTR [eax-0x1d]
  404b59:	lmsw   WORD PTR [ebx]
  404b5c:	or     BYTE PTR [ecx],ah
  404b5e:	or     bl,BYTE PTR es:[edx+ebx*1-0xe1a877b]
  404b66:	adc    al,0xa1
  404b68:	push   0x8c4ac7d4
  404b6d:	push   esi
  404b6e:	ins    BYTE PTR es:[edi],dx
  404b6f:	mov    bl,0xd5
  404b71:	pavgw  mm7,QWORD PTR cs:[edi-0x21]
  404b76:	and    DWORD PTR [ecx-0x1fe784ee],eax
  404b7c:	cmc    
  404b7d:	sub    eax,edi
  404b7f:	pop    ebp
  404b80:	retf   0x6a5a
  404b83:	hlt    
  404b84:	and    eax,0x83106ad7
  404b89:	sar    bh,1
  404b8b:	xor    eax,0x0
  404b8e:	add    DWORD PTR ds:0x431010,0x415e
  404b98:	mov    DWORD PTR [ebp-0xc],eax
  404b9b:	and    DWORD PTR ds:0x431018,0x0
  404ba5:	mov    eax,ds:0x431018
  404baa:	inc    eax
  404bab:	mov    ds:0x431018,eax
  404bb0:	cmp    DWORD PTR ds:0x431018,0x27
  404bb7:	jbe    0x404be2
  404bbd:	jmp    0x404bd5
  404bc2:	push   0x2a2f
  404bc7:	push   0x42e00c
  404bcc:	push   DWORD PTR [ebp-0x14]
  404bcf:	call   DWORD PTR ds:0x4348ff
  404bd5:	cmp    DWORD PTR ds:0x431018,0x1a
  404bdc:	jb     0x404ba5
  404be2:	push   ebx
  404be3:	xor    ebx,ebx
  404be5:	xor    edi,0x8a29a12f
  404beb:	mov    eax,ecx
  404bed:	add    eax,0xfabdbee5
  404bf2:	adc    ebx,0xffffffff
  404bf5:	xor    eax,0x8a29a12f
  404bfa:	xor    ebx,0x0
  404bfd:	cmp    eax,edi
  404bff:	jne    0x404c18
  404c05:	cmp    ebx,DWORD PTR [ebp-0xc]
  404c08:	je     0x404c80
  404c0e:	jmp    0x404c18
  404c13:	mov    esi,0x3272e4
  404c18:	mov    eax,DWORD PTR [ebp-0x4]
  404c1b:	mov    edi,DWORD PTR [ebp-0x8]
  404c1e:	xor    edi,edx
  404c20:	add    edi,esi
  404c22:	mov    esi,DWORD PTR [ebp+0x8]
  404c25:	imul   edi,ecx
  404c28:	mov    ebx,DWORD PTR [ebp+0xc]
  404c2b:	xor    eax,edx
  404c2d:	add    eax,ecx
  404c2f:	mov    al,BYTE PTR [ebx+eax*1+0x3272e4]
  404c36:	mov    BYTE PTR [edi+esi*1],al
  404c39:	mov    eax,DWORD PTR [ebp-0x8]
  404c3c:	mov    esi,DWORD PTR [ebp+0x10]
  404c3f:	xor    eax,edx
  404c41:	xor    ebx,ebx
  404c43:	add    esi,0xfabdbee5
  404c49:	adc    ebx,0xffffffff
  404c4c:	lea    ecx,[ecx+eax*1+0x3272e4]
  404c53:	xor    edi,edi
  404c55:	xor    esi,0x8a29a12f
  404c5b:	xor    ebx,0x0
  404c5e:	mov    eax,ecx
  404c60:	add    eax,0xfabdbee5
  404c65:	adc    edi,0xffffffff
  404c68:	xor    eax,0x8a29a12f
  404c6d:	xor    edi,0x0
  404c70:	cmp    eax,esi
  404c72:	jne    0x404c13
  404c78:	cmp    edi,ebx
  404c7a:	jne    0x404c13
  404c80:	mov    eax,0xf89c8580
  404c85:	jmp    0x40700d
  404c8a:	das    
  404c8b:	cmp    eax,DWORD PTR [edi]
  404c8d:	test   ebx,esi
  404c8f:	sub    DWORD PTR [edi+0x7717da73],0xce68af2c
  404c99:	ja     0x404ca2
  404c9b:	pop    edi
  404c9c:	jb     0x404d10
  404c9e:	pop    es
  404c9f:	pop    edi
  404ca0:	jb     0x404d14
  404ca2:	adc    al,BYTE PTR [edx]
  404ca4:	lods   al,BYTE PTR ds:[esi]
  404ca5:	xor    DWORD PTR [ebp+ebx*1+0xf],0x8db82a8c
  404cad:	cdq    
  404cae:	fstp   TBYTE PTR [edx+0x4b]
  404cb1:	outs   dx,DWORD PTR ds:[esi]
  404cb2:	cld    
  404cb3:	cdq    
  404cb4:	xchg   sp,ax
  404cb6:	lods   eax,DWORD PTR ds:[esi]
  404cb7:	adc    DWORD PTR [eax+0x70],edx
  404cba:	mov    esi,0x4e7949af
  404cbf:	and    al,0xce
  404cc1:	dec    ecx
  404cc2:	out    dx,al
  404cc3:	or     eax,0x5fa0e72a
  404cc8:	cli    
  404cc9:	jo     0x404d15
  404ccb:	loop   0x404cbc
  404ccd:	outs   dx,BYTE PTR ds:[esi]
  404cce:	add    dl,BYTE PTR [esi-0x2ec28b67]
  404cd4:	pop    ds
  404cd5:	stc    
  404cd6:	sbb    eax,0x2d7cc46c
  404cdb:	mov    ds:0xba4b943b,al
  404ce0:	repz jo 0x404d0b
  404ce3:	ror    DWORD PTR [ebp+0x6],0xf8
  404ce7:	repz fsubr QWORD PTR [eax+0x22fc10dc]
  404cee:	xor    al,0x54
  404cf0:	push   0xffffffd4
  404cf2:	inc    esp
  404cf3:	stos   BYTE PTR es:[edi],al
  404cf4:	push   0x1bdf7e8a
  404cf9:	jne    0x404cfd
  404cfb:	jg     0x404d36
  404cfd:	jmp    0xab11:0x13fd90e4
  404d04:	out    0x31,al
  404d06:	mov    eax,0x8249daf0
  404d0b:	cmp    DWORD PTR [ebx+0x6c],edx
  404d0e:	sar    al,1
  404d10:	sub    al,0xc3
  404d12:	sti    
  404d13:	push   ecx
  404d14:	jp     0x404ca2
  404d16:	repnz neg BYTE PTR [ecx+eax*1+0x14a2fc54]
  404d1e:	adc    al,0xeb
  404d20:	mov    ch,BYTE PTR [ebx]
  404d22:	out    dx,al
  404d23:	push   ds
  404d24:	into   
  404d25:	pop    ebx
  404d26:	bound  esi,QWORD PTR [ebp+0x312c45b1]
  404d2c:	sti    
  404d2d:	jle    0x404cf6
  404d2f:	stos   BYTE PTR es:[edi],al
  404d30:	inc    ebx
  404d31:	jmp    0x6999:0xf5b38760
  404d38:	fst    DWORD PTR [ebp+0x282207d]
  404d3e:	fs (bad) 
  404d40:	sub    ecx,ecx
  404d42:	jge    0x404d10
  404d44:	fnsave [esi+0x3c841ecb]
  404d4a:	test   al,0x82
  404d4c:	sub    eax,0x796fb58f
  404d51:	xor    al,BYTE PTR [edi-0x55]
  404d54:	popf   
  404d55:	cmp    DWORD PTR [edi-0x112b9a82],ecx
  404d5b:	mov    bh,cl
  404d5d:	sub    eax,0xa0b41f7c
  404d62:	sbb    eax,0xfbf065f7
  404d67:	sub    ebx,DWORD PTR [edx]
  404d69:	lea    ecx,[ebx]
  404d6b:	or     DWORD PTR [ebx+0x268ea36a],0x868f7013
  404d75:	jb     0x404d6b
  404d77:	cmc    
  404d78:	pop    esi
  404d79:	ja     0x404d4a
  404d7b:	sbb    BYTE PTR [esi],ah
  404d7d:	pop    ebx
  404d7e:	test   eax,0x7e0eae4b
  404d83:	mov    WORD PTR [edx],ds
  404d85:	cmp    eax,0xb80ca2c
  404d8a:	data16 test al,0x48
  404d8d:	rol    DWORD PTR [edx+0x157df79e],cl
  404d93:	into   
  404d94:	out    dx,al
  404d95:	in     eax,dx
  404d96:	push   esi
  404d97:	int    0x60
  404d99:	retf   0xc06b
  404d9c:	jnp    0x404da1
  404d9e:	mov    WORD PTR [ecx+0x43a79fb8],ds
  404da4:	ins    BYTE PTR es:[edi],dx
  404da5:	lds    ecx,FWORD PTR [eax+0x1a]
  404da8:	pop    DWORD PTR [eax-0x3]
  404dab:	or     al,0xd7
  404dad:	push   esi
  404dae:	mov    bl,0x15
  404db0:	jns    0x404d55
  404db2:	xor    dl,bh
  404db4:	dec    esp
  404db5:	adc    edi,DWORD PTR [esi-0x5f8b3cb0]
  404dbb:	into   
  404dbc:	sbb    DWORD PTR [eax+0x1],ebp
  404dbf:	or     al,0x2f
  404dc1:	lea    ebx,[ebx+0x65]
  404dc4:	or     al,0x80
  404dc6:	popf   
  404dc7:	push   ecx
  404dc8:	adc    BYTE PTR [ebp+esi*8+0x4d],dl
  404dcc:	dec    esi
  404dcd:	(bad)  
  404dce:	std    
  404dcf:	inc    BYTE PTR [bx+si]
  404dd2:	push   ds
  404dd3:	test   eax,0xbf81ab4
  404dd8:	add    ch,cl
  404dda:	adc    ecx,edx
  404ddc:	xchg   ebp,ecx
  404dde:	fsub   DWORD PTR [edx+0x17013923]
  404de4:	scas   eax,DWORD PTR es:[edi]
  404de5:	jo     0x404d90
  404de7:	es jno 0x404dde
  404dea:	out    dx,eax
  404deb:	push   eax
  404dec:	sub    eax,0x17cf88dc
  404df1:	xchg   esp,eax
  404df2:	dec    ebx
  404df3:	push   0x3e
  404df5:	xor    BYTE PTR [esp+edx*1],bl
  404df8:	adc    bl,BYTE PTR [ebp+0x3248b17e]
  404dfe:	jmp    0xe580ecfe
  404e03:	mov    dl,cl
  404e05:	push   edi
  404e06:	nop
  404e07:	push   edx
  404e08:	pop    ss
  404e09:	cli    
  404e0a:	adc    BYTE PTR [esi-0x35],0x28
  404e0e:	xlat   BYTE PTR ds:[ebx]
  404e0f:	push   es
  404e10:	ja     0x404e73
  404e12:	fs jnp 0x404e56
  404e15:	rcr    DWORD PTR [esi+0x7c],cl
  404e18:	ret    0xc2c8
  404e1b:	ret    0x6db8
  404e1e:	cmp    dh,BYTE PTR [eax]
  404e20:	arpl   WORD PTR [ecx+0x25],di
  404e23:	jo     0x404e78
  404e25:	jns    0x404dc5
  404e27:	mov    bl,0x5f
  404e29:	push   ds
  404e2a:	jl     0x404e79
  404e2c:	mov    esp,0x208499a6
  404e31:	int3   
  404e32:	(bad)  
  404e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e34:	dec    ebx
  404e35:	dec    edi
  404e36:	(bad)  
  404e37:	mov    al,0x17
  404e39:	push   eax
  404e3a:	retf   0x3c65
  404e3d:	sti    
  404e3e:	dec    ecx
  404e3f:	fild   WORD PTR [ecx-0xf]
  404e42:	mov    edi,0xce540242
  404e47:	stc    
  404e48:	sub    edx,DWORD PTR ss:[edx]
  404e4b:	cs mov cl,0x98
  404e4e:	jmp    0x404dd2
  404e50:	sti    
  404e51:	aad    0xce
  404e53:	ret    0x29a6
  404e56:	mov    ch,0xcc
  404e58:	adc    DWORD PTR [edx-0x592d26d],eax
  404e5e:	pop    eax
  404e5f:	div    DWORD PTR [edi+0x3e]
  404e62:	jns    0x404df7
  404e64:	out    dx,eax
  404e65:	jle    0x404e2d
  404e67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e68:	ja     0x404e4a
  404e6a:	ja     0x404dfa
  404e6c:	(bad)  
  404e6d:	inc    ecx
  404e6e:	dec    eax
  404e6f:	jmp    0xf81f350c
  404e74:	mov    ds:0x63e19e7a,al
  404e79:	lods   al,BYTE PTR ds:[esi]
  404e7a:	push   edi
  404e7b:	iret   
  404e7c:	scas   eax,DWORD PTR es:[edi]
  404e7d:	outs   dx,BYTE PTR ds:[esi]
  404e7e:	mov    ebp,0x419e63a
  404e83:	icebp  
  404e84:	pop    ecx
  404e85:	cld    
  404e86:	imul   BYTE PTR [esi]
  404e88:	mov    gs:0x426cc08c,eax
  404e8e:	mov    esp,0x3c1fba97
  404e93:	int3   
  404e94:	push   esi
  404e95:	out    0x60,eax
  404e97:	add    DWORD PTR [esi],ebx
  404e99:	std    
  404e9a:	inc    ebp
  404e9b:	cdq    
  404e9c:	xchg   ebx,eax
  404e9d:	sahf   
  404e9e:	cmp    DWORD PTR [esi+ecx*1],ecx
  404ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ea2:	sar    DWORD PTR [ebx+0x571c7e30],0xa
  404ea9:	jecxz  0x404e43
  404eab:	retf   0x96c6
  404eae:	and    eax,0xc88ec62a
  404eb3:	int    0xdd
  404eb5:	push   esp
  404eb6:	jnp    0x404e80
  404eb8:	dec    esi
  404eb9:	sar    al,0x61
  404ebc:	stc    
  404ebd:	fwait
  404ebe:	jge    0x404f2c
  404ec0:	cmp    cl,0x71
  404ec3:	dec    esi
  404ec4:	repz dec edx
  404ec6:	and    al,0x6d
  404ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ec9:	or     DWORD PTR [edi],0x46d23c40
  404ecf:	and    DWORD PTR [ebx+esi*2+0x2a4c6285],esp
  404ed6:	push   ds
  404ed7:	repnz mov bl,0x8d
  404eda:	stc    
  404edb:	dec    eax
  404edc:	lds    ecx,FWORD PTR [ebx]
  404ede:	stc    
  404edf:	dec    ecx
  404ee0:	ret    0x5730
  404ee3:	test   DWORD PTR [eax],esp
  404ee5:	test   eax,0x61f9b459
  404eea:	cdq    
  404eeb:	dec    ebx
  404eec:	mov    cs,WORD PTR [ecx]
  404eee:	ss int3 
  404ef0:	imul   ebp,DWORD PTR [edi+0x613458cf],0xffffff8d
  404ef7:	mov    ds:0xedf0e0b7,eax
  404efc:	adc    eax,0xc21f9c77
  404f01:	and    eax,0xb63c76ab
  404f06:	clc    
  404f07:	xchg   DWORD PTR [edx],eax
  404f09:	aaa    
  404f0a:	mov    edx,0xc8f4c3bd
  404f0f:	xor    eax,0xe1b0208f
  404f14:	les    edx,FWORD PTR [ebp+0x1c679ee7]
  404f1a:	fxch   st(7)
  404f1c:	fld    TBYTE PTR [edx-0xa]
  404f1f:	int    0x44
  404f21:	xchg   ebx,eax
  404f22:	out    dx,al
  404f23:	xchg   esi,eax
  404f24:	mov    ah,0x82
  404f26:	out    dx,eax
  404f27:	fnstsw WORD PTR [eax]
  404f29:	ins    DWORD PTR es:[edi],dx
  404f2a:	jp     0x404f58
  404f2c:	out    dx,eax
  404f2d:	bound  edx,QWORD PTR [edx+ebp*4+0x3b]
  404f31:	icebp  
  404f32:	xchg   edi,eax
  404f33:	repz xchg ecx,eax
  404f35:	addr16 es pop ebp
  404f38:	loopne 0x404fa3
  404f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f3b:	pusha  
  404f3c:	lahf   
  404f3d:	xor    eax,0xa835f26f
  404f42:	dec    esp
  404f43:	shr    ebx,0xb
  404f46:	mov    dh,0x59
  404f48:	sub    al,0xf4
  404f4a:	in     al,dx
  404f4b:	add    ebx,ebp
  404f4d:	hlt    
  404f4e:	es cmp eax,0x6893757b
  404f54:	inc    ebp
  404f55:	mov    dl,0x61
  404f57:	iret   
  404f58:	enter  0xaab,0x4a
  404f5c:	sbb    eax,0x7fda0cfa
  404f61:	add    DWORD PTR ds:0x4af298c,0x1d
  404f68:	adc    eax,0xc9e538e
  404f6d:	sbb    ebx,DWORD PTR [ecx-0x52987b63]
  404f73:	dec    esi
  404f74:	inc    esp
  404f75:	xchg   ebx,eax
  404f76:	js     0x404f7d
  404f78:	add    DWORD PTR [esi-0x7d],esp
  404f7b:	inc    edi
  404f7c:	addr16 in al,0xc1
  404f7f:	adc    al,0x85
  404f81:	add    eax,0xa5b09f14
  404f86:	sbb    eax,0xaf3657ab
  404f8b:	xor    BYTE PTR [edi-0x9be86ef],0xcc
  404f92:	cld    
  404f93:	sbb    DWORD PTR [edi+0x72],esi
  404f96:	test   DWORD PTR [ecx+0x36],ecx
  404f99:	test   DWORD PTR [ecx-0x2a],ebp
  404f9c:	jo     0x404fdd
  404f9e:	push   esi
  404f9f:	enter  0x902b,0xfa
  404fa3:	ds and esi,esi
  404fa6:	mov    cl,0xb9
  404fa8:	xor    eax,0xdac6de70
  404fad:	int    0xdc
  404faf:	xor    eax,0x5fc3d3b1
  404fb4:	in     eax,dx
  404fb5:	int    0xa8
  404fb7:	push   0x51
  404fb9:	(bad)  [ecx-0x66]
  404fbc:	leave  
  404fbd:	retf   0xd9b3
  404fc0:	cs dec ecx
  404fc2:	dec    esp
  404fc3:	(bad)  
  404fc4:	jo     0x405009
  404fc6:	or     eax,0x79
  404fc9:	push   esp
  404fca:	and    eax,0xab333a1f
  404fcf:	mov    eax,0xcd927d92
  404fd4:	pop    ss
  404fd5:	xchg   edi,eax
  404fd6:	cld    
  404fd7:	mov    cl,0x56
  404fd9:	inc    ebp
  404fda:	push   ecx
  404fdb:	(bad)  
  404fdc:	ror    DWORD PTR [eax-0x9],1
  404fdf:	mov    dl,0x1a
  404fe1:	(bad)  
  404fe2:	stos   DWORD PTR es:[edi],eax
  404fe3:	or     eax,0x7230f148
  404fe8:	mov    gs,WORD PTR ds:0xfb2dabb0
  404fee:	imul   edx,DWORD PTR [edi+0x26985fdf],0x4597a0ca
  404ff8:	cmp    DWORD PTR [edx],ebp
  404ffa:	jns    0x404fbf
  404ffc:	mov    ?,WORD PTR [edi]
  404ffe:	dec    ebx
  404fff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405000:	into   
  405001:	xchg   ebx,eax
  405002:	or     al,0xd
  405004:	mov    ds:0x6634401f,al
  405009:	push   ebx
  40500a:	sub    al,0x3d
  40500c:	shl    BYTE PTR [edi-0x7ea2db32],cl
  405012:	push   edx
  405013:	dec    esp
  405014:	loop   0x404fc9
  405016:	pop    eax
  405017:	cmp    eax,0x4a50edc0
  40501c:	push   ebx
  40501d:	xchg   ecx,eax
  40501e:	fld    QWORD PTR [eax+0x40378399]
  405024:	mov    esi,0x4a8e70d6
  405029:	xchg   al,ch
  40502b:	mov    dh,0xb
  40502d:	xor    al,0x80
  40502f:	xor    esp,edi
  405031:	add    eax,0xbd8d5834
  405036:	jl     0x405075
  405038:	push   0x5ed794b7
  40503d:	inc    edx
  40503e:	inc    ecx
  40503f:	push   es
  405040:	xchg   esi,eax
  405041:	push   ecx
  405042:	stos   DWORD PTR es:[edi],eax
  405043:	and    dh,dl
  405045:	popa   
  405046:	push   edi
  405047:	int    0x54
  405049:	in     eax,0xa0
  40504b:	jbe    0x404fd0
  40504d:	sub    al,0x65
  40504f:	jns    0x40506e
  405051:	popa   
  405052:	in     al,0xce
  405054:	dec    eax
  405055:	and    DWORD PTR [eax],ebx
  405057:	push   0xffffffad
  405059:	arpl   ax,si
  40505b:	call   0x96456076
  405060:	push   ebx
  405061:	out    dx,eax
  405062:	rcr    DWORD PTR [edi+0x6044f388],0xb
  405069:	loopne 0x405021
  40506b:	in     eax,0x5
  40506d:	das    
  40506e:	jg     0x40507f
  405070:	aam    0x51
  405072:	test   ebp,ecx
  405074:	or     edx,0xffffffc9
  405077:	dec    ebx
  405078:	in     eax,dx
  405079:	ss ffree st(0)
  40507c:	(bad)  
  40507d:	fstp   QWORD PTR [eax+eax*4-0x33fdff1c]
  405084:	adc    esp,esp
  405086:	fisttp DWORD PTR [ecx+0x172b1296]
  40508c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40508d:	sbb    eax,0x88780297
  405092:	jnp    0x40503c
  405094:	bound  edi,QWORD PTR [ebp-0x5d]
  405097:	sub    al,0xdd
  405099:	cmp    esi,DWORD PTR [ebx+ecx*2]
  40509c:	or     al,0x23
  40509e:	lock js 0x405073
  4050a1:	mov    WORD PTR [ecx+0x1df26aaa],?
  4050a7:	ja     0x405044
  4050a9:	jae    0x405088
  4050ab:	rcr    DWORD PTR [edi],cl
  4050ad:	adc    DWORD PTR [ecx-0x19],0xffffffb0
  4050b1:	pusha  
  4050b2:	or     DWORD PTR [edx+0x4f],eax
  4050b5:	fs jle 0x405118
  4050b8:	jo     0x40503d
  4050ba:	cmc    
  4050bb:	fldl2e 
  4050bd:	pop    eax
  4050be:	or     al,0xd1
  4050c0:	pop    eax
  4050c1:	lock fld QWORD PTR [edi]
  4050c4:	dec    edi
  4050c5:	aam    0x44
  4050c7:	(bad)  [esi]
  4050c9:	and    al,0x11
  4050cb:	mov    bl,0x4
  4050cd:	mov    dl,0x9b
  4050cf:	xchg   ecx,eax
  4050d0:	and    BYTE PTR [ecx],0xb0
  4050d3:	cmp    esi,edx
  4050d5:	(bad)  
  4050d6:	mov    ebx,0x2e461f4f
  4050db:	std    
  4050dc:	scas   al,BYTE PTR es:[edi]
  4050dd:	xor    ebx,DWORD PTR [ebx+ebp*8+0x31]
  4050e1:	cwde   
  4050e2:	xchg   esi,eax
  4050e3:	inc    esp
  4050e4:	sub    al,0x6d
  4050e6:	jb     0x405095
  4050e8:	pop    ebx
  4050e9:	test   dh,dh
  4050eb:	dec    esi
  4050ec:	ds shl ch,1
  4050ef:	arpl   WORD PTR [edi],sp
  4050f1:	jmp    0x60ab:0xdd52f6e6
  4050f8:	or     eax,0xd304cf30
  4050fd:	sbb    BYTE PTR [ecx-0x1ae52c6e],dl
  405103:	jp     0x4050dd
  405105:	(bad)  
  405107:	mov    esp,esi
  405109:	xor    al,0xcb
  40510b:	dec    edi
  40510c:	fisub  DWORD PTR [eax-0x56d2626d]
  405112:	mov    bl,0x6
  405114:	bound  edi,QWORD PTR [ecx]
  405116:	push   ebp
  405117:	clc    
  405118:	(bad)  
  40511a:	ins    DWORD PTR es:[edi],dx
  40511b:	push   0xd45a8aa5
  405120:	(bad)  
  405121:	sbb    DWORD PTR [ebp+0x2b],edi
  405124:	aad    0x87
  405126:	(bad)  
  405127:	cmc    
  405128:	loop   0x4050f9
  40512a:	cmp    eax,DWORD PTR [eax]
  40512c:	aaa    
  40512d:	loopne 0x4050e4
  40512f:	mov    esi,0x8ae7988
  405134:	push   esp
  405135:	fcom   QWORD PTR [ecx+esi*8+0x6840b714]
  40513c:	jp     0x405150
  40513e:	cli    
  40513f:	dec    edx
  405140:	push   ebx
  405141:	dec    ebp
  405142:	sub    DWORD PTR [esi+ebx*4+0x2bd50130],edx
  405149:	test   al,0xa5
  40514b:	cdq    
  40514c:	jbe    0x4050ec
  40514e:	gs je  0x4050d7
  405151:	jnp    0x405115
  405153:	lds    esi,FWORD PTR [ecx-0x4f]
  405156:	out    dx,eax
  405157:	pop    ebx
  405158:	fadd   QWORD PTR [ecx+ebp*8]
  40515b:	jnp    0x405112
  40515d:	outs   dx,BYTE PTR ds:[esi]
  40515e:	test   eax,0x2c77c379
  405163:	mov    cl,0xdc
  405165:	repnz pusha 
  405167:	mov    WORD PTR [ebx+0x36f7480b],es
  40516d:	std    
  40516e:	sub    BYTE PTR [bp+si],0x3d
  405172:	inc    ecx
  405173:	test   eax,0xfbae9126
  405178:	mov    bl,0x90
  40517a:	xor    edx,DWORD PTR [eax-0x47]
  40517d:	in     eax,0x17
  40517f:	inc    ecx
  405180:	clc    
  405181:	mov    esi,DWORD PTR [ecx+0x21]
  405184:	dec    esi
  405185:	jge    0x4051e4
  405187:	ins    BYTE PTR es:[edi],dx
  405188:	xchg   ebp,eax
  405189:	pop    ecx
  40518a:	ret    0x20e1
  40518d:	xor    DWORD PTR [esi+0x4d],eax
  405190:	xlat   BYTE PTR ds:[ebx]
  405191:	adc    BYTE PTR [eax+0x6d3f8cf8],ch
  405197:	push   0xffffffe6
  405199:	mov    ecx,DWORD PTR [ebx-0x4b]
  40519c:	pop    ebp
  40519d:	cmc    
  40519e:	(bad)  
  40519f:	push   edi
  4051a0:	pop    ss
  4051a1:	push   0xffffff83
  4051a3:	sti    
  4051a4:	xchg   edi,eax
  4051a5:	inc    ecx
  4051a6:	fnsave [edi]
  4051a8:	mov    dl,al
  4051aa:	clc    
  4051ab:	out    dx,al
  4051ac:	and    al,BYTE PTR ss:[ebp-0x672d75c8]
  4051b3:	or     BYTE PTR [eax-0x6d],al
  4051b6:	repz fucomp st(3)
  4051b9:	in     eax,0x97
  4051bb:	pop    ecx
  4051bc:	push   ecx
  4051bd:	rcr    al,1
  4051bf:	(bad)  
  4051c0:	push   esi
  4051c1:	jbe    0x405145
  4051c3:	cdq    
  4051c4:	dec    esi
  4051c5:	jmp    0x8f60:0xcb2c6460
  4051cc:	in     eax,dx
  4051cd:	sbb    eax,0x2e5e8c45
  4051d2:	popf   
  4051d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051d4:	(bad)
  4051d7:	mov    al,0x14
  4051d9:	into   
  4051da:	scas   eax,DWORD PTR es:[edi]
  4051db:	xor    bh,bh
  4051dd:	rcr    cl,0xec
  4051e0:	mov    WORD PTR [esi+0x3a],fs
  4051e3:	in     al,0xd4
  4051e5:	and    al,0xa2
  4051e7:	(bad)  
  4051e9:	not    BYTE PTR [esi+0x1c8c0e2f]
  4051ef:	enter  0x5b32,0x95
  4051f3:	mov    dh,0xfb
  4051f5:	(bad)  
  4051f6:	out    0xab,eax
  4051f8:	pusha  
  4051f9:	mov    al,0x0
  4051fb:	push   ss
  4051fc:	bound  ecx,QWORD PTR [edi+0x40]
  4051ff:	jbe    0x405260
  405201:	push   esi
  405202:	retf   
  405203:	(bad)
  405206:	(bad)
  405209:	shl    DWORD PTR [esi+0x69957d25],cl
  40520f:	test   DWORD PTR [edx+esi*2-0xb],0x6ce9e2c7
  405217:	dec    esi
  405218:	es fs xchg ebx,eax
  40521b:	jg     0x40520c
  40521d:	adc    esp,DWORD PTR [ecx-0x63f2169d]
  405223:	pop    ebp
  405224:	jbe    0x40527e
  405226:	jge    0x4051cd
  405228:	aad    0x9e
  40522a:	inc    ecx
  40522c:	iret   
  40522d:	mov    eax,ds:0x5dfca0d4
  405232:	and    al,0x1
  405234:	jmp    0x25e0:0x72cde666
  40523b:	xor    edi,eax
  40523d:	jo     0x4051e4
  40523f:	mov    ds:0x763fc84e,al
  405244:	into   
  405245:	sar    BYTE PTR [ebx-0x2330f8bd],cl
  40524b:	add    al,0x29
  40524d:	in     al,dx
  40524e:	push   ecx
  40524f:	mov    esi,ebx
  405251:	nop
  405252:	and    ah,BYTE PTR [esi]
  405254:	mov    bh,al
  405256:	es xor esp,ebx
  405259:	outs   dx,BYTE PTR ds:[esi]
  40525a:	jbe    0x4051f7
  40525c:	imul   ax,WORD PTR [eax-0x37],0xffc0
  405261:	sbb    al,0x1c
  405263:	fs push ebx
  405265:	push   ecx
  405266:	mov    eax,eax
  405268:	mov    edx,0xec17db17
  40526d:	pop    ebp
  40526e:	mov    bl,0x48
  405270:	aas    
  405271:	mov    ebx,0xacec4d06
  405276:	lods   eax,DWORD PTR ds:[esi]
  405277:	and    eax,0xe86cd24f
  40527c:	mov    ah,0x37
  40527e:	push   cs
  40527f:	mov    ?,esp
  405281:	xchg   esi,eax
  405282:	or     BYTE PTR [edx],ah
  405284:	pop    esi
  405285:	inc    ebp
  405286:	adc    DWORD PTR [eax],edi
  405288:	enter  0x6601,0x2f
  40528c:	jle    0x4052e3
  40528e:	shl    al,0xfa
  405291:	xchg   ecx,eax
  405292:	popa   
  405293:	jnp    0x40523b
  405295:	push   edx
  405296:	jg     0x40525b
  405298:	xchg   ecx,eax
  405299:	aaa    
  40529a:	pop    ecx
  40529b:	xchg   edi,eax
  40529c:	(bad)  
  40529d:	adc    ch,BYTE PTR ds:0xa5d25b33
  4052a3:	retf   0x14e0
  4052a6:	dec    esi
  4052a7:	xor    al,0xa0
  4052a9:	clc    
  4052aa:	ds mov eax,0x6f063620
  4052b0:	(bad)  
  4052b2:	icebp  
  4052b3:	jno    0x405319
  4052b5:	push   ebx
  4052b6:	iretw  
  4052b8:	into   
  4052b9:	add    dh,BYTE PTR [esi-0x6]
  4052bc:	sbb    BYTE PTR [edi-0x4],dl
  4052bf:	or     ebx,esp
  4052c1:	dec    esi
  4052c2:	loop   0x4052ff
  4052c4:	cmp    ch,BYTE PTR [esi]
  4052c6:	sub    ch,BYTE PTR [ecx+0x104d91b9]
  4052cc:	xlat   BYTE PTR ds:[ebx]
  4052cd:	test   al,0xc4
  4052cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052d0:	or     al,0x83
  4052d2:	out    dx,al
  4052d3:	aam    0xae
  4052d5:	push   0x14
  4052d7:	adc    ebx,edx
  4052d9:	adc    esi,edi
  4052db:	jecxz  0x4052f2
  4052dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052de:	cld    
  4052df:	je     0x405276
  4052e1:	aaa    
  4052e2:	(bad)  
  4052e3:	aaa    
  4052e4:	in     al,0x5a
  4052e6:	adc    esp,esp
  4052e8:	push   es
  4052e9:	jbe    0x405351
  4052eb:	add    DWORD PTR [eax-0x63a305ef],eax
  4052f1:	lods   eax,DWORD PTR ds:[esi]
  4052f2:	cmp    eax,0x374aa077
  4052f7:	pop    eax
  4052f8:	mov    ah,0x92
  4052fa:	retf   
  4052fb:	cmp    edx,ebp
  4052fd:	jb     0x4052db
  4052ff:	mov    eax,ds:0x67cd7aca
  405304:	shl    BYTE PTR [ebx],cl
  405306:	mov    ebx,0x2c63fe06
  40530b:	push   esp
  40530c:	or     al,0x82
  40530e:	sub    eax,0xbf337c6
  405313:	cmp    ebp,DWORD PTR [eax]
  405315:	sbb    dh,BYTE PTR [ebp+0x208a991e]
  40531b:	setg   BYTE PTR [eax]
  40531e:	in     al,dx
  40531f:	adc    eax,0x4238a5e5
  405324:	jg     0x103fbe95
  40532a:	sti    
  40532b:	sub    ch,ch
  40532d:	repnz jecxz 0x40534d
  405330:	cs lock scas eax,DWORD PTR es:[edi]
  405333:	arpl   dx,dx
  405335:	test   ebp,ecx
  405337:	mov    bh,0x9f
  405339:	neg    esp
  40533b:	outs   dx,BYTE PTR ds:[esi]
  40533c:	dec    edx
  40533d:	clc    
  40533e:	je     0x4052d3
  405340:	or     ah,dh
  405342:	push   edx
  405343:	imul   eax,DWORD PTR [edi+eiz*2-0x7],0xc
  405348:	les    edi,FWORD PTR [ebp+0x2447dc69]
  40534e:	repz xor eax,0xf9ab5fb4
  405354:	inc    ebx
  405355:	cli    
  405356:	xlat   BYTE PTR ds:[ebx]
  405357:	xchg   esp,eax
  405358:	out    0x39,al
  40535a:	(bad)  
  40535b:	jmp    0x224e4f48
  405360:	cdq    
  405361:	pop    eax
  405362:	xchg   bh,bh
  405364:	xchg   edx,eax
  405365:	je     0x405312
  405367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405368:	dec    esp
  405369:	in     al,dx
  40536a:	loopne 0x40534b
  40536c:	(bad)  
  40536e:	test   BYTE PTR [esi-0x1],bh
  405371:	jnp    0x40532f
  405373:	xchg   BYTE PTR [edx-0x71dd0a11],dl
  405379:	adc    eax,DWORD PTR [edx-0x1b]
  40537c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40537d:	repnz stos DWORD PTR es:[edi],eax
  40537f:	push   esp
  405380:	or     al,0xe6
  405382:	mov    eax,0xed628d22
  405387:	and    edi,esp
  405389:	mov    dh,0x7c
  40538b:	addr16 in eax,0x5b
  40538e:	jb     0x405378
  405390:	or     edx,edx
  405392:	sahf   
  405393:	fiadd  DWORD PTR [ebx]
  405395:	sub    al,0x68
  405397:	push   ebp
  405398:	hlt    
  405399:	mov    eax,ds:0xef21a65b
  40539e:	pop    ebp
  40539f:	xlat   BYTE PTR ds:[ebx]
  4053a0:	scas   al,BYTE PTR es:[edi]
  4053a1:	pop    edx
  4053a2:	js     0x405327
  4053a4:	pop    esp
  4053a5:	adc    eax,DWORD PTR ds:0x8e63d37f
  4053ab:	cli    
  4053ac:	push   es
  4053ad:	sbb    esp,0xffffffda
  4053b0:	pop    esi
  4053b1:	jge    0x405364
  4053b3:	dec    ebp
  4053b4:	mov    dl,cl
  4053b6:	enter  0x9ec9,0x2
  4053ba:	xchg   edx,eax
  4053bb:	arpl   WORD PTR ds:0xe50ef9e2,bp
  4053c1:	out    0x41,al
  4053c3:	pop    edi
  4053c4:	out    dx,eax
  4053c5:	in     al,0x3
  4053c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053c8:	mov    ebx,0x4a1492e7
  4053cd:	dec    ecx
  4053ce:	mov    ?,edx
  4053d0:	or     BYTE PTR [edx+esi*2],dl
  4053d3:	adc    ah,BYTE PTR [esi+0x1d70907c]
  4053d9:	into   
  4053da:	xor    DWORD PTR [ebp-0x19],eax
  4053dd:	pop    ebp
  4053de:	lods   al,BYTE PTR ds:[esi]
  4053df:	mov    esi,0x88e78767
  4053e4:	xchg   edi,eax
  4053e5:	push   cs
  4053e6:	dec    edx
  4053e7:	pop    ss
  4053e8:	add    dl,BYTE PTR [edx+0x6a1c03b6]
  4053ee:	push   esp
  4053ef:	jle    0x40537e
  4053f1:	push   esp
  4053f2:	fist   WORD PTR [esi+0x43]
  4053f5:	fcmovnb st,st(4)
  4053f7:	sbb    al,0x60
  4053f9:	out    0x57,eax
  4053fb:	or     al,0x4c
  4053fd:	fidiv  DWORD PTR [eax+eiz*4-0x56]
  405401:	sbb    al,0x44
  405403:	jge    0x405391
  405405:	xor    DWORD PTR [ecx-0x3],ebx
  405408:	mov    dh,0x87
  40540a:	aas    
  40540b:	fisubr DWORD PTR [eax+0xb5fff33]
  405411:	pop    esi
  405412:	pop    DWORD PTR [edx-0x13f9893b]
  405418:	mov    esi,0x3b63cb7b
  40541d:	dec    esi
  40541e:	mov    al,ds:0x209a560
  405423:	ins    BYTE PTR es:[edi],dx
  405424:	jl     0x405496
  405426:	xchg   esi,eax
  405427:	(bad)  
  405428:	push   ebx
  405429:	das    
  40542a:	in     al,0xfe
  40542c:	addr16 xor al,0x80
  40542f:	mov    ah,0x4a
  405431:	push   edi
  405432:	mov    dh,0x37
  405434:	and    ecx,esp
  405436:	mov    ah,0x11
  405438:	fwait
  405439:	jecxz  0x405448
  40543b:	pop    esp
  40543c:	push   0xea256203
  405441:	push   ebx
  405442:	(bad)  
  405444:	das    
  405445:	loope  0x4053f2
  405447:	mov    ebp,0x854ee656
  40544c:	fwait
  40544d:	push   eax
  40544e:	outs   dx,DWORD PTR ds:[esi]
  40544f:	push   edi
  405450:	push   ebx
  405451:	lahf   
  405452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405453:	cdq    
  405454:	add    BYTE PTR ds:0xb28a95f3,dh
  40545a:	xchg   ecx,eax
  40545b:	test   DWORD PTR [edi],esi
  40545d:	in     al,dx
  40545e:	add    al,0x99
  405460:	or     esi,DWORD PTR [esp+ecx*2+0x69]
  405464:	xchg   esp,eax
  405465:	ja     0x405497
  405467:	adc    bh,BYTE PTR [ecx-0x6fa6e98e]
  40546d:	loop   0x405411
  40546f:	cdq    
  405470:	push   ebx
  405471:	add    dh,BYTE PTR [ebp+0x18]
  405474:	and    BYTE PTR [edx],dh
  405476:	mov    DWORD PTR [ecx+0x191b5853],0xd8aec43c
  405480:	icebp  
  405481:	pop    edx
  405482:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405485:	ret    0x8267
  405488:	pusha  
  405489:	ja     0x40543b
  40548b:	pop    ebx
  40548c:	pop    ebx
  40548d:	dec    edx
  40548e:	xchg   ebp,eax
  40548f:	imul   ebp,edi,0x25
  405492:	fs mov dl,0x8
  405495:	imul   esi,esp,0x5c
  405498:	jb     0x4054ba
  40549a:	call   0xc8f3:0x16d2d972
  4054a1:	(bad)  
  4054a2:	inc    eax
  4054a3:	push   ecx
  4054a4:	pop    ds
  4054a5:	inc    eax
  4054a6:	jo     0x4054f2
  4054a8:	sti    
  4054a9:	jb     0x40547d
  4054ab:	add    eax,DWORD PTR [edi-0x5c]
  4054ae:	sbb    BYTE PTR ds:0xb0dec5c8,bl
  4054b4:	inc    ebx
  4054b5:	stos   DWORD PTR es:[edi],eax
  4054b6:	xor    ch,dl
  4054b8:	test   eax,0x8936e9c5
  4054bd:	stc    
  4054be:	sbb    dh,BYTE PTR [edx+0x66]
  4054c1:	jmp    0x6b38:0x2cf872ef
  4054c8:	xor    ah,ch
  4054ca:	aam    0x2a
  4054cc:	cmc    
  4054cd:	push   ds
  4054ce:	add    ah,bl
  4054d0:	sub    al,0xec
  4054d2:	shr    esi,cl
  4054d4:	out    dx,eax
  4054d5:	into   
  4054d6:	jb     0x405546
  4054d8:	test   eax,0xe45acace
  4054dd:	mov    al,ss:0x390192ac
  4054e3:	xchg   esi,eax
  4054e4:	fidivr WORD PTR [ebx+0x61c782b4]
  4054ea:	and    ah,BYTE PTR [eax]
  4054ec:	inc    ebx
  4054ed:	ret    
  4054ee:	outs   dx,BYTE PTR gs:[esi]
  4054f0:	mov    WORD PTR [ebx+ebx*8],ss
  4054f3:	xchg   ecx,eax
  4054f4:	enter  0x33a0,0x2d
  4054f8:	(bad)  
  4054fa:	mov    edx,0xae4fdfb2
  4054ff:	aam    0xf5
  405501:	and    ah,dl
  405503:	push   edx
  405504:	jb     0x405546
  405506:	sbb    DWORD PTR [edi-0x7a],esp
  405509:	pop    ecx
  40550a:	dec    esp
  40550b:	aad    0x90
  40550d:	cdq    
  40550e:	test   al,0x94
  405510:	sbb    al,0x8a
  405512:	mov    dh,bl
  405514:	imul   ebp,ebp,0xb9659fcf
  40551a:	jmp    FWORD PTR [ebx+ecx*1+0x39]
  40551e:	inc    esi
  40551f:	and    eax,0x284fbdc7
  405524:	and    DWORD PTR [edx-0x45],edi
  405527:	push   ds
  405528:	ins    BYTE PTR es:[edi],dx
  405529:	mov    ah,BYTE PTR [edi-0x5f92248f]
  40552f:	push   cs
  405530:	mov    WORD PTR [ecx-0x48],cs
  405533:	call   0x454:0xf5a3e931
  40553a:	lea    esp,[ebx+edi*8-0x6da49cb9]
  405541:	les    ebx,FWORD PTR [ecx-0x62f7005c]
  405547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405548:	daa    
  405549:	add    eax,0x6642e962
  40554e:	aad    0x8c
  405550:	ss retf 
  405552:	pop    edi
  405553:	cli    
  405554:	cli    
  405555:	int    0xf6
  405557:	push   esi
  405558:	jmp    0xd10a:0xbba0e924
  40555f:	dec    ecx
  405560:	enter  0x140b,0x17
  405564:	enter  0xbfb9,0xcb
  405568:	ficom  WORD PTR [ecx-0x3db069d4]
  40556e:	adc    dh,BYTE PTR [eax-0x10]
  405571:	xchg   BYTE PTR [ecx-0x11],bh
  405574:	adc    DWORD PTR [ebx+0x1e],eax
  405577:	rol    cl,1
  405579:	add    edi,ecx
  40557b:	mov    ecx,0xb17606cc
  405580:	fdiv   DWORD PTR [ebp-0x5d]
  405583:	cmp    BYTE PTR [ebp-0x2d],0xbd
  405587:	sti    
  405588:	sahf   
  405589:	(bad)  
  40558a:	mov    WORD PTR [edi+0xda67af6],es
  405590:	xchg   esi,eax
  405591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405592:	bound  ecx,QWORD PTR [ecx-0xf336daa]
  405598:	sub    DWORD PTR [esi-0x5f],ebx
  40559b:	js     0x405568
  40559d:	add    esp,edx
  40559f:	je     0x4055bd
  4055a1:	imul   edi,DWORD PTR [eax+0x5a],0x57
  4055a5:	adc    dl,BYTE PTR [eax-0x47]
  4055a8:	add    bh,dh
  4055aa:	cmp    DWORD PTR [eax],0xfffffffb
  4055ad:	arpl   ax,dx
  4055af:	pusha  
  4055b0:	call   0x93648f7c
  4055b5:	fsub   QWORD PTR [eax]
  4055b7:	sub    BYTE PTR [ebx+0x18],0x22
  4055bb:	mov    ch,0x4d
  4055bd:	jmp    0x405632
  4055bf:	(bad)  
  4055c0:	clc    
  4055c1:	call   0xa091520b
  4055c6:	imul   DWORD PTR [ebx+0x34198c84]
  4055cc:	addr16 sub eax,0x3c7c3d8f
  4055d2:	into   
  4055d3:	jno    0x40555a
  4055d5:	lods   eax,DWORD PTR ds:[esi]
  4055d6:	mov    ah,0x1d
  4055d8:	adc    al,0xf7
  4055da:	adc    BYTE PTR [ecx],ch
  4055dc:	(bad)  
  4055dd:	push   0xffffffe8
  4055df:	xor    edi,DWORD PTR [esi+0x1d]
  4055e2:	mov    ebx,0xc8a5f05
  4055e7:	fild   DWORD PTR [ecx+0x67f161a0]
  4055ed:	jl     0x405583
  4055ef:	push   0x9e8c362e
  4055f4:	(bad)  
  4055f5:	in     al,0xe0
  4055f7:	stc    
  4055f8:	sbb    DWORD PTR ds:[ecx-0x16],ebp
  4055fc:	inc    ecx
  4055fd:	ret    
  4055fe:	fs and al,0x2
  405601:	lds    edx,FWORD PTR [ecx+0x48]
  405604:	frstor [ecx-0x43]
  405607:	pop    ecx
  405608:	and    al,0x38
  40560a:	jae    0x405644
  40560c:	add    edx,0x5b1efa95
  405612:	lods   eax,DWORD PTR ds:[esi]
  405613:	pop    ebx
  405614:	test   DWORD PTR [edx],edi
  405616:	push   eax
  405617:	dec    ecx
  405618:	pop    edx
  405619:	sbb    ecx,DWORD PTR [ebx]
  40561b:	fbstp  TBYTE PTR [eax+0x20]
  40561e:	test   eax,0xe194746d
  405623:	and    dl,BYTE PTR [ecx-0x69]
  405626:	adc    edx,ebp
  405628:	dec    ebp
  405629:	fsub   QWORD PTR [ebx-0x25]
  40562c:	jo     0x40567d
  40562e:	ds inc edx
  405630:	or     BYTE PTR [ecx-0x75668556],ch
  405636:	inc    eax
  405637:	add    BYTE PTR [edx],ch
  405639:	stc    
  40563a:	adc    BYTE PTR [ebp+0x425f9979],bh
  405640:	enter  0x3e65,0x24
  405644:	(bad)  
  405646:	lds    edx,FWORD PTR [edi]
  405648:	pop    ds
  405649:	dec    edi
  40564a:	fisttp QWORD PTR [edi+0x7e]
  40564d:	mov    ebx,0x561db701
  405652:	or     edx,edx
  405654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405655:	push   ss
  405656:	fwait
  405657:	mov    ebp,0x8a4feabc
  40565c:	pop    ss
  40565d:	inc    ebp
  40565e:	inc    esi
  40565f:	xchg   esi,eax
  405660:	call   0xa0e029cc
  405665:	fwait
  405666:	call   0x2529:0x2e7ef3f6
  40566d:	cli    
  40566e:	mov    bh,0xef
  405670:	ins    DWORD PTR es:[edi],dx
  405671:	add    dl,BYTE PTR [ebx+0xd]
  405674:	xor    eax,0x5cc4745d
  405679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40567a:	stc    
  40567b:	xchg   edx,eax
  40567c:	jp     0x40567e
  40567e:	stos   DWORD PTR es:[edi],eax
  40567f:	jl     0x405667
  405681:	div    BYTE PTR [edi+ecx*2-0x58f9b72c]
  405688:	stos   DWORD PTR es:[edi],eax
  405689:	out    0x99,al
  40568b:	retf   0x1ea8
  40568e:	in     al,0x4
  405690:	jp     0x40565b
  405692:	jae    0x40564e
  405694:	dec    ebx
  405695:	pop    esp
  405696:	or     bl,cl
  405698:	cdq    
  405699:	cmp    al,0x9e
  40569b:	movlps xmm3,QWORD PTR [esi-0x5d]
  40569f:	mov    dh,0x7c
  4056a1:	repnz sbb eax,0xb071838e
  4056a7:	dec    esi
  4056a8:	xor    DWORD PTR [ebx+eax*8],0xffffffe8
  4056ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056ad:	scas   al,BYTE PTR es:[edi]
  4056ae:	or     DWORD PTR [ebp+0x3d],ebp
  4056b1:	call   0x5548:0x8b50b8d5
  4056b8:	jbe    0x4056e2
  4056ba:	add    eax,0xc22f6d9d
  4056bf:	adc    esp,edx
  4056c1:	in     eax,0x6a
  4056c3:	mov    ebx,0x9ff008f6
  4056c8:	push   ds
  4056c9:	je     0x4056b8
  4056cb:	cmp    ebx,DWORD PTR [ebx+0xd703e49]
  4056d1:	cmp    ch,BYTE PTR [edx]
  4056d3:	arpl   WORD PTR [esi-0x612048fb],sp
  4056d9:	inc    edx
  4056da:	jns    0x40570e
  4056dc:	push   0xffffff8c
  4056de:	cld    
  4056df:	(bad)  
  4056e0:	ror    BYTE PTR [ebx*8+0xcf204e4],cl
  4056e7:	cli    
  4056e8:	pusha  
  4056e9:	stos   BYTE PTR es:[edi],al
  4056ea:	mov    bl,0x9b
  4056ec:	and    bl,cl
  4056ee:	test   eax,0x79e58784
  4056f3:	ret    
  4056f4:	xchg   ebx,eax
  4056f5:	pop    esp
  4056f6:	dec    ebp
  4056f7:	push   eax
  4056f8:	xchg   esi,eax
  4056f9:	imul   ebp,DWORD PTR [ebx+0x4a4c6b86],0x8644021a
  405703:	sar    BYTE PTR [ebx-0x697cbaf2],1
  405709:	minps  xmm6,xmm6
  40570c:	push   edi
  40570d:	into   
  40570e:	cmc    
  40570f:	push   eax
  405710:	(bad)  
  405711:	adc    esi,esi
  405713:	inc    ebp
  405714:	jecxz  0x405738
  405716:	add    eax,0xf76dece0
  40571b:	inc    dl
  40571d:	hlt    
  40571e:	icebp  
  40571f:	adc    eax,0x625e8d5c
  405724:	mov    ch,0xa1
  405726:	sub    dh,0xa4
  405729:	js     0x4056e9
  40572b:	cmp    DWORD PTR [ecx+0x294bcad0],edi
  405731:	jp     0x4056d9
  405733:	int3   
  405734:	mov    eax,ds:0xa9ffa97d
  405739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40573a:	call   0xc2b6:0xf3e97cee
  405741:	jbe    0x4056ce
  405743:	cmc    
  405744:	jo     0x4056d4
  405746:	push   ds
  405747:	mov    ds:0x4973e478,al
  40574c:	mov    eax,0x1cf5a046
  405751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405752:	sbb    dh,BYTE PTR ds:0x404d932c
  405758:	jecxz  0x405782
  40575a:	xchg   BYTE PTR [esi+eiz*8-0x6061ed55],cl
  405761:	(bad)  
  405762:	pop    ebx
  405763:	seta   BYTE PTR [edx+0x72d6e48c]
  40576a:	js     0x4057e0
  40576c:	add    eax,0xc0e47486
  405771:	push   ss
  405772:	mov    esi,ecx
  405774:	popa   
  405775:	sbb    DWORD PTR [edi-0x684a423e],esp
  40577b:	pusha  
  40577c:	sbb    al,ch
  40577e:	push   edi
  40577f:	std    
  405780:	inc    esi
  405781:	pop    ebp
  405782:	data16 cmp al,0xe
  405785:	or     al,0xa5
  405787:	or     esp,DWORD PTR [eax+0x273c87ca]
  40578d:	sbb    cl,BYTE PTR [ecx+ebx*4]
  405790:	inc    ecx
  405791:	ret    0x98f
  405794:	xor    eax,0xf4aadb15
  405799:	ja     0x4057ea
  40579b:	mov    al,0xc0
  40579d:	sub    ecx,ebx
  40579f:	adc    DWORD PTR [eax+ecx*1-0x3b3ee18],eax
  4057a6:	hlt    
  4057a7:	inc    edi
  4057a8:	dec    ebx
  4057a9:	test   BYTE PTR [edx+0x1911da93],dh
  4057af:	adc    BYTE PTR ds:0xcd5f457a,0xba
  4057b6:	fild   WORD PTR [edx]
  4057b8:	popa   
  4057b9:	jbe    0x4057af
  4057bb:	or     al,BYTE PTR [esp+eiz*4]
  4057be:	cmp    al,0x30
  4057c0:	(bad)  
  4057c1:	mov    ah,0x37
  4057c3:	cli    
  4057c4:	inc    edi
  4057c5:	xchg   esp,eax
  4057c6:	jae    0x405789
  4057c8:	or     BYTE PTR [ebx],0x83
  4057cb:	mov    al,ds:0x7808713f
  4057d0:	mov    eax,0x6a16daad
  4057d5:	push   es
  4057d6:	pop    esp
  4057d7:	out    dx,eax
  4057d8:	shl    ecx,0xbe
  4057db:	fimul  DWORD PTR [edx+0x6]
  4057de:	push   eax
  4057df:	pusha  
  4057e0:	mov    eax,ds:0xc406c19d
  4057e5:	stos   DWORD PTR es:[edi],eax
  4057e6:	push   es
  4057e7:	clc    
  4057e8:	sub    DWORD PTR [ebx-0x40e6d7c3],ebp
  4057ee:	pop    ecx
  4057ef:	(bad)  
  4057f0:	stc    
  4057f1:	xor    ch,BYTE PTR [edx]
  4057f3:	lods   al,BYTE PTR ds:[esi]
  4057f4:	into   
  4057f5:	push   ecx
  4057f6:	dec    esp
  4057f7:	adc    eax,0xf53413f0
  4057fc:	xor    BYTE PTR [esi-0x4],ch
  4057ff:	jns    0x405859
  405801:	add    dl,BYTE PTR [edi-0x7f]
  405804:	push   ecx
  405805:	jnp    0x4057b3
  405807:	in     al,0x4d
  405809:	pop    ebx
  40580a:	test   eax,0xe7f8e9ee
  40580f:	xor    eax,0xbc40cc68
  405814:	in     al,0x1f
  405816:	cli    
  405817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405818:	daa    
  405819:	loop   0x4057aa
  40581b:	push   es
  40581c:	cwde   
  40581d:	or     DWORD PTR ds:0x6ac056fa,esi
  405823:	push   eax
  405824:	xor    BYTE PTR [ebp*1+0x332e89bc],ch
  40582b:	push   ebp
  40582c:	add    eax,0x41f8bcd5
  405831:	mov    edx,0x73cd61b9
  405836:	lds    esi,FWORD PTR [ebx-0x26264146]
  40583c:	repnz mov edx,0x796ac263
  405842:	sbb    bl,al
  405844:	daa    
  405845:	dec    edx
  405846:	xor    BYTE PTR ds:0xf25837de,0xbb
  40584d:	call   0x157c8703
  405852:	(bad)  
  405853:	loop   0x4058c5
  405855:	adc    edi,esp
  405857:	jmp    0x43e4a2ed
  40585c:	fwait
  40585d:	gs clc 
  40585f:	retf   0x5c4b
  405862:	xor    DWORD PTR [eax],ebp
  405864:	pop    ds
  405865:	or     eax,0x54258af3
  40586a:	mov    bh,0x9c
  40586c:	dec    edx
  40586d:	dec    ebx
  40586e:	mov    dh,0xb2
  405870:	lea    ecx,[esi]
  405872:	jb     0x405818
  405874:	add    ah,BYTE PTR [edx*1+0x1b8b0d04]
  40587b:	push   es
  40587c:	(bad)  
  40587e:	gs leave 
  405880:	in     al,dx
  405881:	jmp    0xd1c5:0x5b2d9669
  405888:	das    
  405889:	addr16 mov bl,0x3d
  40588c:	cs inc edi
  40588e:	jbe    0x40581c
  405890:	jno    0x40590e
  405892:	fs adc eax,0x399303b2
  405898:	mov    dl,0x55
  40589a:	les    ecx,FWORD PTR [edx-0x54]
  40589d:	je     0x40589f
  40589f:	pop    esi
  4058a0:	pop    ds
  4058a1:	adc    al,0x77
  4058a3:	and    BYTE PTR [ebx+0x6261db9f],al
  4058a9:	rcpps  xmm3,XMMWORD PTR [ecx-0x2c04f54b]
  4058b0:	(bad)  
  4058b1:	lds    ebx,FWORD PTR [edx+0x64]
  4058b4:	gs (bad) 
  4058b6:	sub    DWORD PTR [edi],0x39
  4058b9:	cs add bh,cl
  4058bc:	arpl   WORD PTR [edx-0x79],bp
  4058bf:	mov    al,ds:0xc1cdcda3
  4058c4:	xchg   edx,eax
  4058c5:	stc    
  4058c6:	jae    0x405902
  4058c8:	enter  0x3ea9,0x5f
  4058cc:	cmc    
  4058cd:	int3   
  4058ce:	inc    ebp
  4058cf:	mov    BYTE PTR [ecx-0x3ec8841e],ch
  4058d5:	xlat   BYTE PTR ds:[ebx]
  4058d6:	sar    DWORD PTR [ecx+eiz*4-0x3b],1
  4058da:	scas   al,BYTE PTR es:[edi]
  4058db:	sub    ebp,esp
  4058dd:	dec    ecx
  4058de:	push   DWORD PTR [edi-0x18bae204]
  4058e4:	cmp    bh,BYTE PTR [eax-0x57e7ede1]
  4058ea:	call   0x179a9b
  4058ef:	in     eax,dx
  4058f0:	or     al,0x93
  4058f2:	pop    ss
  4058f3:	jb     0x405956
  4058f5:	data16 cmp al,0x91
  4058f8:	ja     0x405944
  4058fa:	sbb    esp,edi
  4058fc:	xchg   ebp,eax
  4058fd:	mov    ch,0xd1
  4058ff:	push   ebp
  405900:	enter  0x9762,0xb2
  405904:	xlat   BYTE PTR ds:[ebx]
  405905:	shl    esp,1
  405907:	lea    ebx,[edi]
  405909:	xchg   ecx,eax
  40590a:	(bad)  
  40590b:	push   eax
  40590c:	lods   al,BYTE PTR ds:[esi]
  40590d:	mov    dl,0xb2
  40590f:	xor    ecx,DWORD PTR [edi]
  405911:	push   ss
  405912:	call   0x76f7:0xdb9ee61
  405919:	repz rol DWORD PTR [esi],1
  40591c:	cmp    BYTE PTR [esi-0x33],dh
  40591f:	or     bl,BYTE PTR [edx]
  405921:	sub    BYTE PTR [eax],0xa1
  405924:	loope  0x405992
  405926:	push   edx
  405927:	out    dx,eax
  405928:	mov    ch,BYTE PTR [ecx+0x54]
  40592b:	pop    ecx
  40592c:	aad    0x9b
  40592e:	gs out 0x39,al
  405931:	and    al,0xbf
  405933:	dec    ecx
  405934:	jecxz  0x405937
  405936:	js     0xb4b15e8
  40593c:	mov    edx,DWORD PTR [ebx+0x2c]
  40593f:	ds rep stos BYTE PTR es:[edi],al
  405942:	ins    BYTE PTR es:[edi],dx
  405943:	jmp    0xaf0e:0x76b3d0ad
  40594a:	add    DWORD PTR [ebp+0x14],0x294169da
  405951:	(bad)  [ebp+0x3f]
  405954:	test   al,0xce
  405956:	add    al,0x49
  405958:	cwde   
  405959:	leave  
  40595a:	hlt    
  40595b:	sub    bh,BYTE PTR [eax-0x71]
  40595e:	clc    
  40595f:	dec    ebp
  405960:	cmp    eax,0xe6754948
  405965:	rcl    bl,cl
  405967:	in     al,0xce
  405969:	lea    edi,[edi]
  40596b:	cmp    DWORD PTR [ecx-0x41],esp
  40596e:	xchg   ebp,eax
  40596f:	mov    DWORD PTR ds:0x3b1ba47e,ebx
  405975:	retf   0xecbe
  405978:	test   ah,0xc9
  40597b:	std    
  40597c:	pop    ecx
  40597d:	mov    esi,0xaa0c93da
  405982:	addr16 out 0xf2,eax
  405985:	inc    ecx
  405986:	in     al,0x44
  405988:	mov    bh,0xcb
  40598a:	sub    eax,0xc3e3d261
  40598f:	mov    edx,0x9967969d
  405994:	sbb    ah,BYTE PTR [ebx-0x4d0be4a8]
  40599a:	jle    0x405973
  40599c:	dec    edi
  40599d:	lds    esi,FWORD PTR [eax]
  40599f:	in     al,dx
  4059a0:	imul   ebp,DWORD PTR [edx+0x27],0xffffffb7
  4059a4:	push   0x57
  4059a6:	xchg   ecx,eax
  4059a7:	add    dl,BYTE PTR [esi]
  4059a9:	xchg   DWORD PTR [esi-0x934aae],ecx
  4059af:	aad    0x81
  4059b1:	mov    dl,0xd1
  4059b3:	sbb    BYTE PTR [esi],al
  4059b5:	mov    ch,0x6c
  4059b7:	lock push cs
  4059b9:	jne    0x4059ee
  4059bb:	out    0x8,eax
  4059bd:	ins    DWORD PTR es:[edi],dx
  4059be:	xchg   DWORD PTR gs:[esi-0x4],ecx
  4059c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059c3:	call   0x80f70485
  4059c8:	cmovo  ecx,DWORD PTR [eax+0x48]
  4059cc:	mov    ebp,0x41adbd02
  4059d1:	enter  0x4b1a,0xe1
  4059d5:	(bad)  
  4059d7:	fsubr  DWORD PTR [eax+0x6e]
  4059da:	inc    ecx
  4059db:	loope  0x405999
  4059dd:	push   es
  4059de:	push   cs
  4059df:	add    eax,0xe9ededd6
  4059e4:	mov    bl,0x64
  4059e6:	xchg   edi,eax
  4059e7:	fsincos 
  4059e9:	out    0x1a,eax
  4059eb:	mov    esp,0x1ea73dde
  4059f0:	int3   
  4059f1:	aas    
  4059f2:	imul   edi,DWORD PTR [eax],0xf
  4059f5:	test   al,0xba
  4059f7:	sahf   
  4059f8:	add    al,0xa2
  4059fa:	call   DWORD PTR fs:[ecx-0x2fdd7cea]
  405a01:	xor    edx,0x2691c282
  405a07:	xchg   ecx,eax
  405a08:	cmc    
  405a09:	push   cs
  405a0a:	(bad)  
  405a0b:	(bad)  
  405a0c:	hlt    
  405a0d:	xor    al,0x7f
  405a0f:	loopne 0x4059a2
  405a11:	push   ebx
  405a12:	pop    ss
  405a13:	push   esi
  405a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a15:	scas   al,BYTE PTR es:[edi]
  405a16:	(bad)  
  405a17:	mov    ecx,0x12d81334
  405a1c:	aas    
  405a1d:	nop
  405a1e:	add    cl,bh
  405a20:	fdivr  QWORD PTR [ebx+0x5225daa0]
  405a26:	mov    dh,0x5
  405a28:	outs   dx,DWORD PTR ds:[esi]
  405a29:	test   al,0x29
  405a2b:	dec    ecx
  405a2c:	arpl   dx,cx
  405a2e:	sbb    bl,BYTE PTR [ebx+eax*4]
  405a31:	mov    esp,0xcd8489f5
  405a36:	gs push ebp
  405a38:	mov    cl,0x52
  405a3a:	(bad)  
  405a3c:	fnstsw WORD PTR [ebp+0x2f0512c0]
  405a42:	pop    edi
  405a43:	adc    DWORD PTR [ecx+ecx*2-0x439153af],0xc685caa7
  405a4e:	jmp    0x69cd6e79
  405a53:	mov    DWORD PTR [eax+0x11],edi
  405a56:	dec    ebx
  405a57:	xchg   esi,eax
  405a58:	test   al,0x15
  405a5a:	xchg   ebp,edx
  405a5c:	pop    eax
  405a5d:	fdivr  QWORD PTR [edi]
  405a5f:	inc    ebp
  405a60:	sub    DWORD PTR [ecx],0xffffffce
  405a63:	gs or  eax,0xd135a0c9
  405a69:	aad    0xc5
  405a6b:	call   0xbf6d:0xffbb0ba4
  405a72:	sbb    eax,0xdfa539e4
  405a77:	loop   0x405af5
  405a79:	mul    BYTE PTR [esi-0x3611a086]
  405a7f:	ficomp DWORD PTR [ebp+0x33]
  405a82:	mov    BYTE PTR [esi+0x67],dh
  405a85:	in     eax,dx
  405a86:	stc    
  405a87:	dec    esi
  405a88:	jecxz  0x405a10
  405a8a:	push   edx
  405a8b:	lds    edi,FWORD PTR [ebp-0x50321683]
  405a91:	push   esi
  405a92:	mov    BYTE PTR [esi+0x41f5a1de],cl
  405a98:	in     al,0xd8
  405a9a:	cmp    cl,dh
  405a9c:	xchg   ebx,eax
  405a9d:	je     0x405aed
  405a9f:	pop    ss
  405aa0:	xor    al,0xf
  405aa2:	xor    eax,DWORD PTR [ebx]
  405aa4:	iret   
  405aa5:	das    
  405aa6:	jge    0x405b1e
  405aa8:	cmp    BYTE PTR [eax+0x7269039d],bh
  405aae:	jnp    0x405b23
  405ab0:	call   0x6784:0x226fc6d8
  405ab7:	lea    ebx,[esi-0x70]
  405aba:	leave  
  405abb:	js     0x405a60
  405abd:	(bad)  
  405abe:	and    BYTE PTR [esi],ah
  405ac0:	jge    0x405aaf
  405ac2:	xchg   ebp,eax
  405ac3:	out    dx,al
  405ac4:	add    DWORD PTR [ebx-0x51a1d6ce],eax
  405aca:	xchg   esi,eax
  405acb:	pop    ebp
  405acc:	jmp    0x84d05e94
  405ad1:	xor    al,BYTE PTR [esi+0x1d324dcb]
  405ad7:	std    
  405ad8:	or     DWORD PTR [edx-0x13ae59f4],esi
  405ade:	popf   
  405adf:	in     al,dx
  405ae0:	pop    edi
  405ae1:	mov    ecx,0x1491e5a3
  405ae6:	mov    edx,0xf7ad1214
  405aeb:	mov    dh,BYTE PTR [eax+0x2c]
  405aee:	jne    0x405ab0
  405af0:	mov    DWORD PTR [ecx],edi
  405af2:	clc    
  405af3:	xor    al,0xba
  405af5:	adc    edx,DWORD PTR [edx+ebp*8+0x3c5797e2]
  405afc:	std    
  405afd:	xchg   DWORD PTR [eax-0x3c401b89],esi
  405b03:	cdq    
  405b04:	rcr    BYTE PTR [edx],1
  405b06:	int3   
  405b07:	inc    ecx
  405b08:	mov    al,0xd2
  405b0a:	jno    0x405af5
  405b0c:	jnp    0x405b60
  405b0e:	pushf  
  405b0f:	pushf  
  405b10:	mov    DWORD PTR [edx+0x4],esp
  405b13:	dec    esp
  405b14:	push   cs
  405b15:	and    esi,DWORD PTR [esi+0x53]
  405b18:	call   0x384b152f
  405b1d:	cld    
  405b1e:	cmp    ebx,DWORD PTR [ebx]
  405b20:	fwait
  405b21:	push   esp
  405b22:	mov    edi,0xa7324227
  405b27:	dec    edx
  405b28:	cdq    
  405b29:	mov    edx,0x75eefab2
  405b2e:	mov    fs,WORD PTR [edx+edx*2]
  405b31:	mov    ds:0xdf78512b,eax
  405b36:	test   al,0xd4
  405b38:	push   0xffffff81
  405b3a:	fwait
  405b3b:	mov    cl,0xec
  405b3d:	cmp    ah,bh
  405b3f:	mov    gs,esi
  405b41:	pop    es
  405b42:	sub    DWORD PTR [bx],edi
  405b45:	lds    ecx,FWORD PTR [esi+0x7bc38f2c]
  405b4b:	pop    esi
  405b4c:	mul    DWORD PTR [esi]
  405b4e:	xor    eax,0x272ea1ca
  405b53:	pusha  
  405b54:	pop    ecx
  405b55:	xor    ebx,ebx
  405b57:	xor    BYTE PTR [eax+0x11],bh
  405b5a:	pop    edx
  405b5b:	(bad)  
  405b5c:	les    esi,FWORD PTR [ebp+ebx*1+0x4eef463f]
  405b63:	push   0xffffffb7
  405b65:	(bad)  [eax-0x827adb3]
  405b6b:	dec    ecx
  405b6c:	adc    DWORD PTR [esi+0x48],edi
  405b6f:	xlat   BYTE PTR ds:[ebx]
  405b70:	in     eax,dx
  405b71:	jle    0x405b21
  405b73:	sar    BYTE PTR [edx+0x6c],1
  405b76:	div    BYTE PTR [eax-0xf]
  405b79:	and    al,BYTE PTR [eax]
  405b7b:	fsubp  st(1),st
  405b7d:	mov    al,ds:0x3f04419e
  405b82:	in     al,0xfd
  405b84:	scas   eax,DWORD PTR es:[edi]
  405b85:	jmp    0xc57fc5e3
  405b8a:	mov    ds,WORD PTR [ebx]
  405b8c:	sar    BYTE PTR [ebx+ecx*1+0x5a66c8c1],1
  405b93:	shl    BYTE PTR [edi-0x13],0x11
  405b97:	mov    BYTE PTR [esi+ebp*8-0x5a40eeac],bl
  405b9e:	je     0x405c13
  405ba0:	das    
  405ba1:	arpl   bx,bp
  405ba3:	cdq    
  405ba4:	inc    eax
  405ba5:	in     al,0xa1
  405ba7:	daa    
  405ba8:	and    BYTE PTR [edx-0x72703886],al
  405bae:	mov    esp,0x805779ea
  405bb3:	(bad)  
  405bb4:	leave  
  405bb5:	inc    BYTE PTR [ecx+0x3c2f848]
  405bbb:	sbb    BYTE PTR [ebp+0x58],0xf2
  405bbf:	aam    0xc5
  405bc1:	fistp  WORD PTR [esi]
  405bc3:	mov    al,ds:0xc484d9bf
  405bc8:	mov    al,0x57
  405bca:	inc    ebx
  405bcb:	test   DWORD PTR cs:[edx-0x5d4e2f02],esp
  405bd2:	inc    ebp
  405bd3:	push   es
  405bd4:	mov    ah,0xaf
  405bd6:	add    ch,BYTE PTR [ebp-0x7d]
  405bd9:	dec    edi
  405bda:	dec    esi
  405bdb:	rcl    DWORD PTR [ebx],0xb4
  405bde:	(bad)  
  405bdf:	dec    edi
  405be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405be1:	aaa    
  405be2:	in     eax,0x6
  405be4:	mov    al,ds:0x4e7f7986
  405be9:	and    ecx,esp
  405beb:	inc    eax
  405bec:	addr16 xchg esi,eax
  405bee:	dec    edi
  405bef:	push   ss
  405bf0:	scas   al,BYTE PTR es:[edi]
  405bf1:	xchg   dl,dh
  405bf3:	je     0x405c45
  405bf5:	cmp    ebx,ebx
  405bf7:	js     0x405b9e
  405bf9:	xchg   DWORD PTR [edx+0x5d],ebp
  405bfc:	fimul  WORD PTR [esi+0x7e72ecd2]
  405c02:	aam    0x10
  405c04:	cmp    eax,0xb4e375d3
  405c09:	jno    0x405bd5
  405c0b:	cmc    
  405c0c:	pop    ds
  405c0d:	lahf   
  405c0e:	inc    ebx
  405c0f:	or     eax,0x884a604e
  405c14:	jmp    0x211:0x25e94e7
  405c1b:	shl    BYTE PTR [eax],cl
  405c1d:	jp     0x405c9d
  405c1f:	mov    eax,ds:0x9647d91d
  405c24:	and    BYTE PTR [eax],dl
  405c26:	retf   
  405c27:	data16 lahf 
  405c29:	inc    esi
  405c2a:	ins    BYTE PTR es:[edi],dx
  405c2b:	xchg   edi,esp
  405c2d:	les    edx,FWORD PTR [edx+0x78]
  405c30:	sub    DWORD PTR [edi-0x68088485],ebp
  405c36:	aam    0xa6
  405c38:	repnz push edi
  405c3a:	lods   eax,DWORD PTR ds:[esi]
  405c3b:	inc    edx
  405c3c:	dec    esi
  405c3d:	jbe    0x405c84
  405c3f:	xchg   edx,eax
  405c40:	xchg   edx,eax
  405c41:	jo     0x405c88
  405c43:	xchg   esi,eax
  405c44:	cmc    
  405c45:	retf   0xf182
  405c48:	loope  0x405c2c
  405c4a:	dec    ebp
  405c4b:	jno    0x405ca4
  405c4d:	sahf   
  405c4e:	add    ecx,DWORD PTR [edi-0x4ad0f8ae]
  405c54:	mov    eax,ds:0x4aec437f
  405c59:	inc    esp
  405c5a:	int    0x8
  405c5c:	mov    cs,esp
  405c5e:	inc    esi
  405c5f:	jno    0x405c70
  405c61:	cmp    DWORD PTR [ebp+0x21dc5d9b],esp
  405c67:	adc    cl,BYTE PTR [edx]
  405c69:	push   ecx
  405c6a:	icebp  
  405c6b:	out    dx,al
  405c6c:	adc    al,0xb9
  405c6e:	cmp    cl,al
  405c70:	jns    0x405c7f
  405c72:	nop
  405c73:	push   edx
  405c74:	mov    eax,0x267448cd
  405c79:	sbb    DWORD PTR [esi+0x8134698],esi
  405c7f:	daa    
  405c80:	nop
  405c81:	push   ss
  405c82:	pop    esp
  405c83:	adc    ebp,ecx
  405c85:	inc    edx
  405c86:	fsubr  DWORD PTR [edx-0x3e]
  405c89:	inc    edi
  405c8a:	xor    DWORD PTR [eax+0x6661326c],0xffffffe6
  405c91:	mov    ch,0xd9
  405c93:	(bad)  
  405c94:	fisub  WORD PTR [ecx]
  405c96:	bound  edx,QWORD PTR ds:0x8169e769
  405c9c:	repnz leave 
  405c9e:	ins    BYTE PTR es:[edi],dx
  405c9f:	mov    dh,0x57
  405ca1:	repnz and esi,edx
  405ca4:	mov    ah,0x41
  405ca6:	mov    ah,0x69
  405ca8:	fst    st(5)
  405caa:	jmp    0x1447:0xf9bb2c2b
  405cb1:	loopne 0x405c4d
  405cb3:	or     bl,al
  405cb5:	std    
  405cb6:	pop    ss
  405cb7:	jae    0x405c62
  405cb9:	pushf  
  405cba:	aam    0x59
  405cbc:	ss retf 
  405cbe:	jmp    0x346abf96
  405cc3:	mov    al,0x5c
  405cc5:	ds gs loope 0x405d1b
  405cc9:	cmp    bl,BYTE PTR [ebp+0x69efb84e]
  405ccf:	pop    es
  405cd0:	inc    edx
  405cd1:	ret    
  405cd2:	das    
  405cd3:	or     esi,edx
  405cd5:	daa    
  405cd6:	int    0x63
  405cd8:	not    ebx
  405cda:	(bad)  
  405cdb:	retf   0x3f90
  405cde:	repnz push es
  405ce0:	es inc edx
  405ce2:	cmp    cl,dl
  405ce4:	add    al,0x66
  405ce6:	push   esp
  405ce7:	in     al,dx
  405ce8:	add    DWORD PTR [ecx],ebx
  405cea:	mov    ebp,?
  405cec:	rcr    BYTE PTR [ecx+0x40af8f1f],cl
  405cf2:	xchg   edx,eax
  405cf3:	mov    ecx,0x54488a37
  405cf8:	js     0x405d14
  405cfa:	out    dx,al
  405cfb:	push   esp
  405cfc:	test   eax,0x164b8503
  405d01:	gs jmp 0x4f2c7912
  405d07:	dec    esi
  405d08:	sub    al,0xe0
  405d0a:	fwait
  405d0b:	cld    
  405d0c:	push   ds
  405d0d:	int    0x3f
  405d0f:	jle    0x405d36
  405d11:	call   0xff27:0x342aa7ff
  405d18:	jns    0x405d77
  405d1a:	shr    DWORD PTR [esp+edi*4],cl
  405d1d:	sbb    ecx,DWORD PTR [edi]
  405d1f:	outs   dx,BYTE PTR ds:[esi]
  405d20:	mov    BYTE PTR [edi+0x57],ch
  405d23:	and    ecx,ecx
  405d25:	mov    ss,WORD PTR [ecx]
  405d27:	sbb    DWORD PTR [ecx],esp
  405d29:	hlt    
  405d2a:	xor    eax,0xc13a041c
  405d2f:	mov    ds:0xa860c3ab,al
  405d34:	cli    
  405d35:	test   BYTE PTR [esi+edx*8+0x18ac3539],dl
  405d3c:	and    eax,0xd9f62930
  405d41:	adc    BYTE PTR [ebx+0x2b416d8f],ch
  405d47:	xlat   BYTE PTR ds:[ebx]
  405d48:	cwde   
  405d49:	add    al,0x82
  405d4b:	xor    DWORD PTR [edi+0x6f3cfc8a],0x1d
  405d52:	or     eax,0x1bdc31dd
  405d57:	gs mov dh,0xf0
  405d5a:	xchg   edx,eax
  405d5b:	lods   al,BYTE PTR ds:[esi]
  405d5c:	add    edx,ecx
  405d5e:	jo     0x405d52
  405d60:	cmp    DWORD PTR es:[ebp+0x19],0x2a3262b0
  405d68:	mov    ebp,0x7f869799
  405d6d:	test   cl,dh
  405d6f:	pop    eax
  405d70:	rol    dh,1
  405d72:	gs sub ebp,0xffffffc4
  405d76:	pusha  
  405d77:	pop    ds
  405d78:	sbb    eax,0x6c0c1c04
  405d7d:	pop    ecx
  405d7e:	mov    al,ds:0x5154856e
  405d83:	push   esi
  405d84:	(bad)  
  405d85:	lods   eax,DWORD PTR ds:[esi]
  405d86:	xchg   BYTE PTR [ebx+edx*4+0x4d],cl
  405d8a:	arpl   WORD PTR [eax+edx*4],di
  405d8d:	dec    ecx
  405d8e:	mov    eax,DWORD PTR [ebp+0x21]
  405d91:	dec    ecx
  405d92:	iret   
  405d93:	shr    DWORD PTR [ecx+0x7ed32043],cl
  405d99:	ror    dh,cl
  405d9b:	dec    edi
  405d9c:	jecxz  0x405dc9
  405d9e:	mov    ds:0x39232d5b,al
  405da3:	inc    ecx
  405da4:	mov    eax,ds:0x228144b6
  405da9:	add    BYTE PTR ds:0xa9e99ed1,al
  405daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405db0:	loopne 0x405e1b
  405db2:	sub    BYTE PTR [eax],cl
  405db4:	mov    WORD PTR [ecx+eax*2-0x6b],fs
  405db8:	addr16 jae 0x405ddd
  405dbb:	test   al,0xe7
  405dbd:	into   
  405dbe:	mul    DWORD PTR [eax+edx*4-0x6f]
  405dc2:	(bad)  
  405dc3:	jge    0x405d5f
  405dc5:	mov    ch,0xa8
  405dc7:	jne    0x405d9c
  405dc9:	cmp    edx,DWORD PTR [edx+0x4e]
  405dcc:	pop    ds
  405dcd:	adc    ebp,ebp
  405dcf:	mov    edx,DWORD PTR [ebx]
  405dd1:	mov    BYTE PTR [esi+0x8766341],dl
  405dd7:	or     edx,edi
  405dd9:	das    
  405dda:	sbb    bl,BYTE PTR [ebx+eiz*1+0x20e50037]
  405de1:	pop    ebx
  405de2:	mov    esi,0xffebc6c8
  405de7:	sub    esp,DWORD PTR [edi-0x1af5a243]
  405ded:	cmp    esp,DWORD PTR [eax+ecx*8]
  405df0:	push   esp
  405df1:	jae    0x405dac
  405df3:	div    DWORD PTR [ebx+0x6adbe36e]
  405df9:	fidiv  DWORD PTR [eax+0x70]
  405dfc:	adc    DWORD PTR [edi],ecx
  405dfe:	out    0x8d,al
  405e00:	out    0x50,al
  405e02:	lods   eax,DWORD PTR ds:[esi]
  405e03:	xchg   DWORD PTR [ebx+esi*2],ebp
  405e06:	or     DWORD PTR ds:0x1d164503,0x2
  405e0d:	imul   edx,DWORD PTR [ecx-0x47],0x33cbe5a7
  405e14:	std    
  405e15:	jo     0x405e23
  405e17:	mov    ah,cl
  405e19:	jmp    0x4c309fee
  405e1e:	cmp    eax,0x77aad173
  405e23:	inc    ecx
  405e24:	scas   al,BYTE PTR es:[edi]
  405e25:	jge    0x405e9f
  405e27:	cmp    ebx,DWORD PTR [ecx-0x63]
  405e2a:	mov    bh,0x2
  405e2c:	xchg   esp,eax
  405e2d:	jnp    0x405e67
  405e2f:	mov    ch,0xeb
  405e31:	and    al,BYTE PTR [ebp-0x66a3c878]
  405e37:	xchg   ebx,eax
  405e38:	repz push 0x8bcac6d0
  405e3e:	jmp    0xcc932a8a
  405e43:	mov    eax,ds:0xc5923cfc
  405e48:	adc    eax,DWORD PTR [edx-0x71]
  405e4b:	pusha  
  405e4c:	leave  
  405e4d:	add    eax,0xad7332b
  405e52:	cmp    bl,cl
  405e54:	stos   BYTE PTR es:[edi],al
  405e55:	sub    DWORD PTR [ecx],0x19
  405e58:	out    0xdb,al
  405e5a:	dec    ecx
  405e5b:	mov    eax,ds:0xed04ef9a
  405e60:	mov    al,ds:0x1f1c429f
  405e65:	(bad)  
  405e66:	and    eax,0x92085513
  405e6b:	test   eax,0xe2b61a21
  405e70:	(bad)  
  405e71:	cmp    DWORD PTR [ebp+0x111dd9a9],ebx
  405e77:	push   eax
  405e78:	test   DWORD PTR [ebx+eax*1],eax
  405e7b:	fisttp QWORD PTR [edi]
  405e7d:	pop    ss
  405e7e:	sub    al,0x74
  405e80:	add    eax,esp
  405e82:	or     eax,0x416c19bc
  405e87:	cmp    DWORD PTR [ecx],edx
  405e89:	pop    ebx
  405e8a:	sbb    DWORD PTR [edi],edi
  405e8c:	dec    ecx
  405e8d:	neg    BYTE PTR [esi-0x755dd41f]
  405e93:	fstp   DWORD PTR [esp+ecx*2+0x81232d2]
  405e9a:	scas   al,BYTE PTR es:[edi]
  405e9b:	ret    
  405e9c:	outs   dx,DWORD PTR ds:[esi]
  405e9d:	bnd jp 0x405e22
  405ea0:	(bad)  
  405ea1:	sbb    dl,BYTE PTR [esi-0x329e2035]
  405ea7:	daa    
  405ea8:	mov    ebp,0xf7512f60
  405ead:	mov    bl,0x89
  405eaf:	ret    0x3f95
  405eb2:	int3   
  405eb3:	addr16 retf 
  405eb5:	aaa    
  405eb6:	fsubr  QWORD PTR [edx]
  405eb8:	adc    ch,BYTE PTR [edx-0x76]
  405ebb:	jmp    0x2c27:0xf05f21d0
  405ec2:	and    eax,0xff18d5af
  405ec7:	jg     0x405ed9
  405ec9:	inc    ebx
  405eca:	fwait
  405ecb:	push   ds
  405ecc:	inc    eax
  405ecd:	(bad)  
  405ece:	rcl    BYTE PTR [edi],1
  405ed0:	pop    es
  405ed1:	test   BYTE PTR [edi],0x9e
  405ed4:	jb     0x405f05
  405ed6:	ins    BYTE PTR es:[edi],dx
  405ed7:	test   al,0x30
  405ed9:	rol    BYTE PTR [ebx-0x791a8218],1
  405edf:	test   BYTE PTR [edi+0x4c39da79],dh
  405ee5:	fild   DWORD PTR [ecx]
  405ee7:	push   ecx
  405ee8:	mov    ch,0xb9
  405eea:	lock pop esi
  405eec:	push   ax
  405eee:	push   edx
  405eef:	ror    DWORD PTR ds:0xbdf21ede,cl
  405ef5:	and    DWORD PTR [ebx],eax
  405ef7:	ins    DWORD PTR es:[edi],dx
  405ef8:	lods   al,BYTE PTR ds:[esi]
  405ef9:	mov    edi,eax
  405efb:	rol    dl,1
  405efd:	push   0xe1c92
  405f02:	cmp    BYTE PTR [edx+ebx*8-0x6d],al
  405f06:	xchg   DWORD PTR [esi+0x5aa39c54],edi
  405f0c:	lock jge 0x405f30
  405f0f:	adc    BYTE PTR [edx-0x2a],cl
  405f12:	dec    eax
  405f13:	xor    ecx,DWORD PTR [edx]
  405f15:	(bad)  
  405f16:	addr16 cmp ebx,ebp
  405f19:	or     ebx,DWORD PTR [edx-0x51]
  405f1c:	in     al,dx
  405f1d:	in     eax,0x44
  405f1f:	inc    esp
  405f20:	pop    ds
  405f21:	jle    0x405f3f
  405f23:	or     edi,edx
  405f25:	pop    esp
  405f26:	stc    
  405f27:	in     eax,0x3f
  405f29:	or     edi,DWORD PTR [esi+0x43afca70]
  405f2f:	pop    ebx
  405f30:	ins    DWORD PTR es:[edi],dx
  405f31:	repz (bad) 
  405f34:	ins    BYTE PTR es:[edi],dx
  405f35:	fs push eax
  405f37:	or     BYTE PTR [ebp-0x70277940],dl
  405f3d:	xor    BYTE PTR [eax+edx*1-0x62],ch
  405f41:	in     al,0xb4
  405f43:	fbld   TBYTE PTR [eax-0x610c9adf]
  405f49:	or     al,0xfc
  405f4b:	call   0xd782ffaa
  405f50:	jbe    0x405f5b
  405f52:	in     al,dx
  405f53:	sbb    al,0xef
  405f55:	cmp    BYTE PTR [edi],ah
  405f57:	sahf   
  405f58:	or     DWORD PTR [esi-0x41f35bbb],eax
  405f5e:	push   ds
  405f5f:	mov    bl,0x44
  405f61:	stos   BYTE PTR es:[edi],al
  405f62:	shl    DWORD PTR [eax],1
  405f64:	pushw  cs
  405f66:	lea    eax,[edi]
  405f68:	adc    DWORD PTR [edx],ebx
  405f6a:	push   ebx
  405f6b:	mov    edi,0x2c04c19e
  405f70:	jo     0x405fa1
  405f72:	cmp    bl,cl
  405f74:	jg     0x405f38
  405f76:	cmp    edx,esi
  405f78:	icebp  
  405f79:	call   0x65ee9e5b
  405f7e:	and    al,0xeb
  405f80:	in     al,0xb6
  405f82:	stc    
  405f83:	add    esp,esi
  405f85:	call   0xcd6020aa
  405f8a:	pop    ss
  405f8b:	adc    esi,DWORD PTR [edx-0x14230d82]
  405f91:	cmp    eax,0x13c570f3
  405f96:	pop    esp
  405f97:	loope  0x405f56
  405f99:	jle    0x405fb5
  405f9b:	push   ecx
  405f9c:	and    esp,edx
  405f9e:	ins    BYTE PTR es:[edi],dx
  405f9f:	sub    DWORD PTR [edx-0x10],edx
  405fa2:	sbb    DWORD PTR [edi-0x4],esp
  405fa5:	xor    dl,ch
  405fa7:	pop    es
  405fa8:	ja     0x405f99
  405faa:	xchg   edx,eax
  405fab:	add    DWORD PTR [eax],edi
  405fad:	lock cmc 
  405faf:	dec    edi
  405fb0:	pop    eax
  405fb1:	jg     0x405f6e
  405fb3:	jmp    0xb0ba:0x5a6a1cc1
  405fba:	mov    BYTE PTR [eax],ah
  405fbc:	fld    QWORD PTR [edx]
  405fbe:	dec    ecx
  405fbf:	lahf   
  405fc0:	adc    al,0x93
  405fc2:	repnz push es
  405fc4:	inc    esp
  405fc5:	pop    ss
  405fc6:	xchg   ebx,eax
  405fc7:	adc    BYTE PTR ds:0x576263aa,dl
  405fcd:	push   edx
  405fce:	jp     0x405fdf
  405fd0:	cwde   
  405fd1:	ficomp WORD PTR [ebx]
  405fd3:	adc    eax,0xa4dd42b0
  405fd8:	retf   
  405fd9:	sub    esi,ecx
  405fdb:	mov    ecx,0x3845e870
  405fe0:	and    DWORD PTR [edi-0x28],0xce7ea0e5
  405fe7:	and    eax,0x9a6e769b
  405fec:	hlt    
  405fed:	clc    
  405fee:	or     BYTE PTR [ecx-0x499721e8],al
  405ff4:	dec    ebx
  405ff5:	pushf  
  405ff6:	je     0x405fef
  405ff8:	fcos   
  405ffa:	iret   
  405ffb:	es nop
  405ffd:	int3   
  405ffe:	into   
  405fff:	loop   0x405fc3
  406001:	pushf  
  406002:	mov    al,0x86
  406004:	cwde   
  406005:	dec    ebp
  406006:	mov    eax,DWORD PTR [ecx+0x312fe96]
  40600c:	out    dx,al
  40600d:	inc    edx
  40600e:	sti    
  40600f:	rcr    BYTE PTR [ecx+0x21],cl
  406012:	loopne 0x406072
  406014:	sub    eax,0xac78897d
  406019:	jmp    0x406024
  40601b:	loopne 0x405fd2
  40601d:	mov    ah,0x1e
  40601f:	dec    ebx
  406020:	pop    ss
  406021:	ret    0xa2bb
  406024:	scas   al,BYTE PTR es:[edi]
  406025:	jo     0x405fc6
  406027:	sub    DWORD PTR [ebx],0x1c9bac4a
  40602d:	jmp    0xa3ce:0xd8c6c6da
  406034:	xlat   BYTE PTR ds:[ebx]
  406035:	loope  0x405fe9
  406037:	xor    eax,0xa0ac92f1
  40603c:	sahf   
  40603d:	lahf   
  40603e:	cdq    
  40603f:	mov    DWORD PTR [edi+edi*4-0x6d3015b2],esi
  406046:	test   bl,cl
  406048:	in     al,dx
  406049:	mov    ch,0xc5
  40604b:	xor    al,0x3f
  40604d:	mov    ah,0xcd
  40604f:	inc    esi
  406050:	mov    cl,0x68
  406052:	inc    eax
  406053:	fmul   QWORD PTR [eax]
  406055:	pop    ds
  406056:	inc    ecx
  406057:	xor    BYTE PTR [eax],0x77
  40605a:	jl     0x406027
  40605c:	mov    edx,ebx
  40605e:	adc    eax,0xc4c603cf
  406063:	es pop ebx
  406065:	out    dx,eax
  406066:	(bad)  
  406067:	stos   DWORD PTR es:[edi],eax
  406068:	out    dx,eax
  406069:	inc    edi
  40606a:	sahf   
  40606b:	xchg   ebx,eax
  40606c:	jno    0x40605b
  40606e:	cs mov bh,0x7e
  406071:	sbb    ecx,DWORD PTR [ebp-0x18da4e44]
  406077:	lods   eax,DWORD PTR ds:[esi]
  406078:	repnz inc ebp
  40607a:	rcr    BYTE PTR [ebp-0x694d97a3],cl
  406080:	clc    
  406081:	sub    eax,ebx
  406083:	and    BYTE PTR es:[eax-0x5182f165],0x11
  40608b:	mov    WORD PTR cs:[esi+0x31f613fd],gs
  406092:	aad    0x48
  406094:	ret    
  406095:	mov    ah,0x59
  406097:	cmp    bh,BYTE PTR [edx+0x7c]
  40609a:	iret   
  40609b:	jb     0x4060c8
  40609d:	sbb    bl,cl
  40609f:	stos   BYTE PTR es:[edi],al
  4060a0:	outs   dx,DWORD PTR ds:[esi]
  4060a1:	int3   
  4060a2:	mov    bl,0xb2
  4060a4:	aaa    
  4060a5:	loopne 0x406112
  4060a7:	pop    ebp
  4060a8:	outs   dx,BYTE PTR ds:[esi]
  4060a9:	add    dh,BYTE PTR [ecx]
  4060ab:	test   eax,0xcbb68953
  4060b0:	mov    ebp,0x33ebfc82
  4060b5:	cwde   
  4060b6:	mov    esp,0x216c9073
  4060bb:	retf   0x120c
  4060be:	fwait
  4060bf:	arpl   WORD PTR [edx+0x49b8ecfd],cx
  4060c5:	or     DWORD PTR [ebp-0x15a3b68a],ecx
  4060cb:	push   cs
  4060cc:	rol    esi,0x8d
  4060cf:	mov    dl,0x9e
  4060d1:	fnstsw WORD PTR [ebx+0x14]
  4060d4:	adc    eax,0xcb3f695b
  4060d9:	in     al,0x40
  4060db:	mov    ebx,0x65b2d0c4
  4060e0:	call   FWORD PTR [ebx-0x43]
  4060e3:	sub    al,0xaa
  4060e5:	jecxz  0x406074
  4060e7:	cld    
  4060e8:	sbb    BYTE PTR [ebx+0x5d],ah
  4060eb:	jle    0x40609b
  4060ed:	push   dx
  4060ef:	and    ebp,DWORD PTR [edx-0x65329743]
  4060f5:	ds jg  0x406118
  4060f8:	pop    ds
  4060f9:	int    0xb0
  4060fb:	(bad)  
  4060fc:	je     0x4060e5
  4060fe:	dec    edx
  4060ff:	rcr    BYTE PTR [edx],0x7f
  406102:	lahf   
  406103:	adc    BYTE PTR [edx+esi*4],dl
  406106:	jbe    0x4060e7
  406108:	pop    ecx
  406109:	retf   
  40610a:	jl     0x4060c5
  40610c:	inc    edx
  40610d:	add    dh,al
  40610f:	push   ds
  406110:	call   0x49a5:0xf26fe132
  406117:	lea    ebx,[eax-0x79]
  40611a:	dec    esp
  40611c:	cs jge 0x40615c
  40611f:	mov    eax,ds:0x5dc94910
  406124:	ins    DWORD PTR es:[edi],dx
  406125:	push   esp
  406126:	or     BYTE PTR [edx],dh
  406128:	jnp    0x4060dd
  40612a:	call   0xdc46:0x9c209720
  406131:	(bad)  
  406132:	js     0x406176
  406134:	idiv   DWORD PTR [ebp-0x6f26a213]
  40613a:	ja     0x4061ae
  40613c:	xchg   esp,eax
  40613d:	test   DWORD PTR [esp+esi*4-0x7e],ebx
  406141:	cld    
  406142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406143:	int3   
  406144:	mov    WORD PTR [edi+0x47],?
  406147:	sbb    eax,0x5e9ee944
  40614c:	nop
  40614d:	jp     0x4060ff
  40614f:	adc    ecx,eax
  406151:	jae    0x406162
  406153:	mov    edi,0xea221cbe
  406158:	(bad)  
  406159:	adc    cl,BYTE PTR [eax-0x4e16b5ab]
  40615f:	js     0x406162
  406161:	and    al,0x1f
  406163:	sbb    eax,0x23885a4a
  406168:	js     0x40617c
  40616a:	test   eax,0xab45547a
  40616f:	sub    ecx,DWORD PTR [edi+0x6441a5d7]
  406175:	sub    eax,0x2e806cd8
  40617a:	mov    cl,0x6a
  40617c:	icebp  
  40617d:	repnz rcl bh,0x5
  406181:	jle    0x4061f5
  406183:	ficom  DWORD PTR [esi-0x25]
  406186:	or     al,0x85
  406188:	int    0x7b
  40618a:	sub    BYTE PTR [ecx-0x69],bl
  40618d:	cmc    
  40618e:	cld    
  40618f:	add    edx,DWORD PTR [edx]
  406191:	xchg   edi,eax
  406192:	bound  eax,QWORD PTR [ecx-0x41abce6f]
  406198:	and    bl,0xff
  40619b:	mov    al,0x26
  40619d:	mov    edi,0x5099b37a
  4061a2:	imul   edi,DWORD PTR [ebp+0x2ef3e2a8],0x4eaa2f18
  4061ac:	sti    
  4061ad:	mov    ebp,0xf665b6f6
  4061b2:	adc    eax,ebx
  4061b4:	xchg   ecx,eax
  4061b5:	div    BYTE PTR [edx-0x771ef3e6]
  4061bb:	xchg   ebp,eax
  4061bc:	or     esi,DWORD PTR [ecx-0x28]
  4061bf:	or     edx,DWORD PTR [ebp+0x17]
  4061c2:	add    BYTE PTR [ebx-0x1f],dh
  4061c5:	(bad)  
  4061c6:	fist   WORD PTR [ebx+0x144ec2da]
  4061cc:	lods   eax,DWORD PTR ds:[esi]
  4061cd:	xchg   esp,eax
  4061ce:	inc    esp
  4061cf:	(bad)  
  4061d0:	ins    DWORD PTR es:[edi],dx
  4061d1:	xchg   esi,eax
  4061d2:	sub    al,0x4e
  4061d4:	push   ds
  4061d5:	sahf   
  4061d6:	leave  
  4061d7:	push   ebp
  4061d8:	mov    ecx,0xe37c992e
  4061dd:	test   DWORD PTR [ebx+0x20],edx
  4061e0:	fs dec edi
  4061e2:	sub    DWORD PTR [ebp-0x79],esi
  4061e5:	jmp    0xa381d025
  4061ea:	inc    ebx
  4061eb:	lock aad 0x96
  4061ee:	leave  
  4061ef:	int    0xa7
  4061f1:	xchg   ecx,eax
  4061f2:	inc    edx
  4061f3:	stos   BYTE PTR es:[edi],al
  4061f4:	loopne 0x4061b1
  4061f6:	push   es
  4061f7:	sbb    al,0xeb
  4061f9:	mov    edi,DWORD PTR [edx]
  4061fb:	out    0x30,eax
  4061fd:	not    DWORD PTR [ebx+0x13]
  406200:	xor    eax,0x2087151b
  406205:	jp     0x406259
  406207:	cmp    al,0xca
  406209:	pop    esi
  40620a:	out    0x6c,eax
  40620c:	retf   0xcc6f
  40620f:	fsub   st(2),st
  406211:	call   FWORD PTR [ebx-0x39bf1210]
  406217:	(bad)  
  406218:	cmp    BYTE PTR ds:0x3f3d35ce,bh
  40621e:	ficom  WORD PTR [ebx+0x35eeb501]
  406224:	or     BYTE PTR [esi+0x2869c3dc],al
  40622a:	lahf   
  40622b:	push   0x6
  40622d:	sub    cl,BYTE PTR [ebx+0x75]
  406230:	and    ecx,DWORD PTR [ecx]
  406232:	adc    dh,BYTE PTR [esi-0x29]
  406235:	leave  
  406236:	outs   dx,BYTE PTR ds:[esi]
  406237:	not    BYTE PTR [ebx+0x15]
  40623a:	mov    ah,0x1a
  40623c:	in     eax,0x11
  40623e:	mov    esp,0xb996e55
  406243:	out    dx,eax
  406244:	mov    dl,0x35
  406246:	jbe    0x406274
  406248:	cld    
  406249:	sbb    BYTE PTR [ecx+0x68a9191],bl
  40624f:	fsqrt  
  406251:	hlt    
  406252:	je     0x406208
  406254:	stos   BYTE PTR es:[edi],al
  406255:	xchg   esi,eax
  406256:	push   esi
  406257:	(bad)  
  406258:	outs   dx,DWORD PTR ds:[esi]
  406259:	lea    esp,[ecx-0x1f]
  40625c:	shl    BYTE PTR [ebx+0x200f29d0],1
  406262:	cmp    BYTE PTR [eax],0x8f
  406265:	dec    edi
  406266:	imul   esp,DWORD PTR [ebx],0x44320a62
  40626c:	dec    DWORD PTR ds:0xa52c711
  406272:	dec    edx
  406273:	dec    edi
  406274:	xlat   BYTE PTR ds:[ebx]
  406275:	cmp    ah,dl
  406277:	mov    eax,esi
  406279:	leave  
  40627a:	nop
  40627b:	dec    cx
  40627d:	hlt    
  40627e:	mov    cl,0x3b
  406280:	repz push esp
  406282:	iret   
  406283:	dec    eax
  406284:	and    DWORD PTR [edx+0x6a],ebp
  406287:	jmp    0xa4fb34e7
  40628c:	cmp    BYTE PTR [ebp-0x7de7f64a],0x12
  406293:	pop    ds
  406294:	adc    eax,0xad44cd05
  406299:	xor    eax,0x545e0c19
  40629e:	aam    0x53
  4062a0:	arpl   WORD PTR [eax-0x40],bp
  4062a3:	pop    ecx
  4062a4:	mov    DWORD PTR [eax],eax
  4062a6:	lods   eax,DWORD PTR ds:[esi]
  4062a7:	adc    ebx,DWORD PTR [edi]
  4062a9:	sub    eax,0x767e0111
  4062ae:	ds pop ds
  4062b0:	sub    DWORD PTR [ebx-0x58b7be46],0xffffff8f
  4062b7:	jecxz  0x40631c
  4062b9:	xor    al,0x4a
  4062bb:	jnp    0x406265
  4062bd:	retf   
  4062be:	sub    BYTE PTR [ebx+ebp*8-0x4a],dl
  4062c2:	lock cmp bh,al
  4062c5:	pop    edx
  4062c6:	nop
  4062c7:	xor    edx,DWORD PTR [edi+edx*1-0xb8a070d]
  4062ce:	or     ch,bh
  4062d0:	je     0x406325
  4062d2:	dec    edx
  4062d3:	sub    cl,BYTE PTR [ebp-0x27]
  4062d6:	pop    edi
  4062d7:	icebp  
  4062d8:	aam    0xbe
  4062da:	push   edi
  4062db:	js     0x4062d3
  4062dd:	pop    esi
  4062de:	cld    
  4062df:	mov    esp,0xb422f25b
  4062e4:	pop    es
  4062e5:	xor    eax,0xe226d3a1
  4062ea:	pop    esi
  4062eb:	jnp    0x406356
  4062ed:	(bad)  
  4062ee:	lds    ebx,FWORD PTR [edx]
  4062f0:	cmp    eax,0x3e2fc141
  4062f5:	and    eax,0x4869a7c9
  4062fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062fb:	out    0xf4,eax
  4062fd:	jmp    0x83b:0x27fec54a
  406304:	xchg   ebx,eax
  406305:	int3   
  406306:	dec    ebx
  406307:	push   eax
  406308:	pop    es
  406309:	lea    ebx,[ebp-0x52]
  40630c:	pop    ss
  40630d:	sub    BYTE PTR [edx+0x52],dl
  406310:	ret    
  406311:	(bad)  
  406313:	adc    esi,0xc0d16fba
  406319:	cli    
  40631a:	add    eax,0x32097a9
  40631f:	mov    ah,0x2a
  406321:	ins    DWORD PTR es:[edi],dx
  406322:	adc    BYTE PTR [ebp+0x72],dh
  406325:	xor    BYTE PTR [edx+edx*1+0xa],bh
  406329:	xlat   BYTE PTR ds:[ebx]
  40632a:	add    esp,DWORD PTR [eax]
  40632c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40632d:	mov    ds:0xc7ca2086,al
  406332:	cmp    al,0x34
  406334:	mov    cl,0xb9
  406336:	and    eax,0x98db214b
  40633b:	push   es
  40633c:	jnp    0x406372
  40633e:	jnp    0x4062d2
  406340:	fnstenv [eax+edx*1]
  406343:	jae    0x4063b1
  406345:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  406347:	push   cs
  406348:	aas    
  406349:	dec    ebx
  40634a:	xchg   BYTE PTR [edi],dh
  40634c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40634d:	push   es
  40634e:	add    bl,BYTE PTR ds:0x528f548b
  406354:	clc    
  406355:	pop    ebp
  406356:	dec    esi
  406357:	add    eax,0x6d9bd546
  40635c:	(bad)  
  40635d:	ins    DWORD PTR es:[edi],dx
  40635e:	test   al,0x8e
  406360:	iret   
  406361:	nop
  406362:	lds    ebx,FWORD PTR ds:0x1a367089
  406368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406369:	or     esp,ebx
  40636b:	fisttp DWORD PTR [edx]
  40636d:	cmp    dh,BYTE PTR [ebx-0x68]
  406370:	push   edx
  406371:	sub    eax,0x19e8ec07
  406376:	(bad)  
  406377:	or     DWORD PTR [esi-0x24],ebp
  40637a:	or     DWORD PTR [esi-0x47],esi
  40637d:	or     ebp,DWORD PTR [eax-0x67cf794c]
  406383:	mov    BYTE PTR ds:0x67a23167,dl
  406389:	hlt    
  40638a:	pop    ecx
  40638b:	ficom  WORD PTR [edi+0x6db2a3c8]
  406391:	xor    al,0x99
  406393:	loope  0x4063bf
  406395:	and    BYTE PTR [edx-0x40bb7f57],0x2b
  40639c:	push   eax
  40639d:	cld    
  40639e:	idiv   BYTE PTR [ebp+0x7a]
  4063a1:	jmp    0x406378
  4063a3:	test   al,0xf4
  4063a5:	mov    dh,0x7b
  4063a7:	sub    DWORD PTR [esi+eax*8-0x29],edi
  4063ab:	mov    dl,0x33
  4063ad:	pop    ss
  4063ae:	call   DWORD PTR [edi]
  4063b0:	lods   eax,DWORD PTR ds:[esi]
  4063b1:	push   esp
  4063b2:	jb     0x406425
  4063b4:	jp     0x4063ff
  4063b6:	xchg   DWORD PTR [ebx+0x2d],ecx
  4063b9:	jb     0x406347
  4063bb:	hlt    
  4063bc:	iret   
  4063bd:	add    ebx,DWORD PTR [edi]
  4063bf:	stc    
  4063c0:	retf   0xa5a2
  4063c3:	sbb    ah,BYTE PTR [ebx+0x1a]
  4063c6:	xor    BYTE PTR [edi+0x48],al
  4063c9:	cdq    
  4063ca:	arpl   WORD PTR [ebp-0x3b],di
  4063cd:	in     al,0x36
  4063cf:	mov    cl,0x22
  4063d1:	jbe    0x4063b0
  4063d3:	jnp    0x40636c
  4063d5:	sbb    BYTE PTR ds:0x870d6c1e,ah
  4063db:	fcomp  QWORD PTR [esi+ebx*1+0x6aa52ab5]
  4063e2:	dec    ebx
  4063e3:	into   
  4063e4:	cmp    ebx,DWORD PTR es:[edx]
  4063e7:	mov    bh,0x5f
  4063e9:	mov    ds,eax
  4063eb:	jns    0x4063f2
  4063ed:	hlt    
  4063ee:	shl    BYTE PTR [ebx+0x383da278],1
  4063f4:	adc    al,0xac
  4063f6:	xchg   edi,eax
  4063f7:	xchg   esp,eax
  4063f8:	sub    al,0xb7
  4063fa:	(bad)  
  4063fc:	sbb    BYTE PTR [edi],dh
  4063fe:	push   ss
  4063ff:	cmp    ah,BYTE PTR [ebx-0x4468a4bb]
  406405:	inc    edi
  406406:	pushf  
  406407:	call   0x3b8b065f
  40640c:	xlat   BYTE PTR ds:[ebx]
  40640d:	dec    esp
  40640e:	scas   eax,DWORD PTR es:[edi]
  40640f:	ret    0x2442
  406412:	mov    bh,0x8d
  406414:	dec    esi
  406415:	ins    BYTE PTR es:[edi],dx
  406416:	ficom  WORD PTR [edx]
  406418:	(bad)  
  40641a:	popf   
  40641b:	(bad)  
  40641c:	ror    BYTE PTR [edi+eiz*2+0x48],0x59
  406421:	out    0xfe,eax
  406423:	outs   dx,DWORD PTR ds:[esi]
  406424:	bound  ecx,QWORD PTR [edx+ebx*2]
  406427:	xor    eax,edx
  406429:	adc    ebx,DWORD PTR ds:0x6b73196
  40642f:	mul    DWORD PTR [esp+edi*1-0x10c050a8]
  406436:	(bad)  
  406437:	jnp    0x4064b7
  406439:	cmp    BYTE PTR ds:0x3f718d5c,dl
  40643f:	push   0xffffffd1
  406441:	inc    DWORD PTR [edi]
  406443:	push   ds
  406444:	neg    cl
  406446:	dec    edx
  406447:	fst    DWORD PTR [ebx+0x4c33f4d]
  40644d:	scas   eax,DWORD PTR es:[edi]
  40644e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40644f:	clc    
  406450:	mov    ds,eax
  406452:	call   0x445f1b0d
  406457:	xor    DWORD PTR [edi-0x3fab61e2],edx
  40645d:	pop    esi
  40645e:	push   cs
  40645f:	cmp    al,0x39
  406461:	js     0x40648a
  406463:	mov    al,ds:0x9fa808bd
  406468:	mov    ds:0x28a3e086,al
  40646d:	or     DWORD PTR [esi-0x59],eax
  406470:	je     0x406421
  406472:	pop    edi
  406473:	jnp    0x4063fb
  406475:	or     edx,DWORD PTR [edi-0x6eab05e8]
  40647b:	mov    al,0x11
  40647d:	ins    BYTE PTR es:[edi],dx
  40647e:	pop    ebp
  40647f:	aaa    
  406480:	jmp    0x4064ee
  406482:	adc    eax,0xe368dd5a
  406487:	add    ecx,esp
  406489:	bound  edx,QWORD PTR [edx+0x601c9e2a]
  40648f:	jae    0x40650e
  406491:	mov    esp,0x78620e96
  406496:	cwde   
  406497:	mov    dh,0x8
  406499:	call   0xe6f0:0x77e21733
  4064a0:	imul   eax,edi,0xe609b2c4
  4064a6:	push   ss
  4064a7:	lods   al,BYTE PTR ds:[esi]
  4064a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064a9:	mov    ds:0x7bb5d175,eax
  4064ae:	aaa    
  4064af:	cmp    BYTE PTR [edx+0x2fdfd7fc],bh
  4064b5:	pop    ecx
  4064b6:	ret    0x681c
  4064b9:	sahf   
  4064ba:	mov    edi,0xbbe89791
  4064bf:	pop    ss
  4064c0:	dec    ecx
  4064c1:	mov    eax,0xf515edbe
  4064c6:	fcomp  QWORD PTR [ebx+ecx*8]
  4064c9:	imul   edx,DWORD PTR [edi-0xff5d92],0xb59948df
  4064d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064d4:	cmp    BYTE PTR [ebx-0x8],dh
  4064d7:	mov    edx,0xf8d915eb
  4064dc:	jl     0x40652d
  4064de:	xchg   cx,ax
  4064e0:	and    DWORD PTR [ebp+0x27],ebp
  4064e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064e4:	sbb    ebx,DWORD PTR [edi+eax*2+0x4e]
  4064e8:	pop    esi
  4064e9:	xlat   BYTE PTR ds:[ebx]
  4064ea:	fwait
  4064eb:	test   al,0xc4
  4064ed:	das    
  4064ee:	adc    ah,dh
  4064f0:	(bad)
  4064f3:	xor    BYTE PTR [esi],dh
  4064f5:	pop    ss
  4064f6:	enter  0xe598,0xc7
  4064fa:	cmc    
  4064fb:	das    
  4064fc:	out    0xcd,al
  4064fe:	std    
  4064ff:	push   cs
  406500:	sbb    BYTE PTR [edi],0xa6
  406503:	jg     0x406582
  406505:	mov    eax,ds:0x94b04012
  40650a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40650b:	jp     0x406578
  40650d:	jle    0x4064b5
  40650f:	inc    eax
  406510:	int    0x40
  406512:	inc    eax
  406513:	leave  
  406514:	cwde   
  406515:	jg     0x406562
  406517:	sub    al,ah
  406519:	jbe    0x4064c6
  40651b:	inc    edx
  40651c:	scas   eax,DWORD PTR es:[edi]
  40651d:	push   ecx
  40651e:	pop    edx
  40651f:	shl    BYTE PTR [ebx-0x15],0x59
  406523:	mov    ds:0xea63ff25,eax
  406528:	out    dx,al
  406529:	dec    edi
  40652a:	loope  0x406542
  40652c:	sbb    eax,0xfd631bfe
  406531:	add    edi,ebp
  406533:	push   ss
  406534:	mov    esp,0x6e2bb694
  406539:	push   esp
  40653a:	cmp    bh,BYTE PTR [edx-0x14b3ca96]
  406540:	call   0xb340:0x5c70d19
  406547:	mov    dl,BYTE PTR [edi+0x40afdd28]
  40654d:	loopne 0x4065c8
  40654f:	adc    ebx,DWORD PTR [esi+edx*2]
  406552:	sbb    al,0xda
  406554:	mov    dl,BYTE PTR [esi]
  406556:	fisttp DWORD PTR [edx-0x7d]
  406559:	push   edi
  40655a:	jns    0x4064f3
  40655c:	mov    ebp,0x4ec35c4e
  406561:	rcr    DWORD PTR [eax-0x21],1
  406564:	dec    edx
  406565:	adc    eax,0xe38b6976
  40656a:	cs sbb edx,ecx
  40656d:	test   eax,0xf40467a1
  406572:	outs   dx,DWORD PTR ds:[esi]
  406573:	lds    eax,FWORD PTR [edi]
  406575:	ins    DWORD PTR es:[edi],dx
  406576:	test   bh,0x41
  406579:	aaa    
  40657a:	push   ds
  40657b:	mov    ebx,0x87269c08
  406580:	call   0xdaa2881
  406585:	cmp    cl,BYTE PTR [esi+eiz*1]
  406588:	xor    ah,BYTE PTR [eax+0xbc08149]
  40658e:	dec    eax
  40658f:	xchg   esi,eax
  406590:	(bad)  
  406591:	mov    eax,ds:0x3a266e3e
  406596:	or     edx,DWORD PTR [ecx]
  406598:	sub    edx,edx
  40659a:	adc    eax,0x6ff33af5
  40659f:	or     eax,0xb543a5bc
  4065a4:	mov    eax,0xbd611665
  4065a9:	js     0x4065b6
  4065ab:	sti    
  4065ac:	pop    esp
  4065ad:	xchg   edx,eax
  4065ae:	cli    
  4065af:	fisubr WORD PTR [edx+edi*4+0x36]
  4065b3:	pop    edi
  4065b4:	sub    bh,dh
  4065b6:	pop    ds
  4065b7:	mov    ebx,ss
  4065b9:	cwde   
  4065ba:	pop    ebp
  4065bc:	dec    ebx
  4065bd:	imul   esi,ecx,0x1b
  4065c0:	or     edx,edi
  4065c2:	loope  0x406558
  4065c4:	jecxz  0x4065b8
  4065c6:	jbe    0x40660a
  4065c8:	shl    DWORD PTR [eax-0x40ac3356],0x16
  4065cf:	mov    al,ds:0xeccb3e1c
  4065d4:	sbb    DWORD PTR ss:[esi],esi
  4065d7:	dec    esp
  4065d8:	jg     0x406565
  4065da:	les    eax,FWORD PTR [ebx+0x32277313]
  4065e0:	push   ebp
  4065e1:	adc    BYTE PTR [edi+0x17fdc1ae],0xef
  4065e8:	sbb    edi,eax
  4065ea:	cdq    
  4065eb:	mov    ebx,DWORD PTR [edx-0x1209ab51]
  4065f1:	dec    ebp
  4065f2:	xchg   edx,eax
  4065f3:	mov    al,0xba
  4065f5:	mov    ecx,0x32effafd
  4065fa:	jb     0x4065aa
  4065fc:	push   esp
  4065fd:	push   edi
  4065fe:	bound  eax,QWORD PTR [ebp+0x7e]
  406601:	and    al,0x44
  406603:	cdq    
  406604:	push   ebx
  406605:	test   eax,0x8a6e195c
  40660a:	stos   BYTE PTR es:[edi],al
  40660b:	xchg   ebp,eax
  40660c:	adc    eax,0xc420de65
  406611:	ins    BYTE PTR es:[edi],dx
  406612:	jg     0x4065f1
  406614:	xor    DWORD PTR [eax+0x71],esi
  406617:	imul   ebx,DWORD PTR [esp+edx*2-0x3f],0xffffffea
  40661c:	aad    0x16
  40661e:	out    0x72,eax
  406620:	push   ecx
  406621:	xor    eax,0x95142c3c
  406626:	pop    eax
  406627:	mov    dh,0x55
  406629:	or     eax,DWORD PTR [eax+0x55]
  40662c:	call   0x6b3a:0x124c39c2
  406633:	jmp    0x406613
  406635:	mov    esi,0xa27ecbb7
  40663a:	pop    es
  40663b:	push   edx
  40663c:	push   0x115273bd
  406641:	inc    edx
  406642:	mov    eax,ds:0xa111e09b
  406647:	sbb    eax,0x20bf5f27
  40664c:	dec    edx
  40664d:	jo     0x4066a7
  40664f:	mov    ah,0x0
  406651:	jne    0x40661e
  406653:	inc    ecx
  406654:	add    BYTE PTR [esi+0x4300b6a1],al
  40665a:	inc    esp
  40665b:	cmp    DWORD PTR [esp+edi*1+0x6],edi
  40665f:	shl    DWORD PTR [ebx+0x5a17c3c2],0x45
  406666:	sbb    dl,0x6f
  406669:	add    ebp,DWORD PTR [edx+eax*8+0x4d]
  40666d:	mov    eax,0x2049cad4
  406672:	and    BYTE PTR [esi+0x7191b378],al
  406678:	int3   
  406679:	adc    DWORD PTR [edi+0x62],ebp
  40667c:	std    
  40667d:	leave  
  40667e:	(bad)  
  40667f:	dec    esi
  406680:	test   DWORD PTR [esi-0x2a],0xa4455a3
  406687:	into   
  406688:	and    bl,BYTE PTR [edi]
  40668a:	daa    
  40668b:	dec    edx
  40668c:	mov    esp,0x84c39871
  406691:	xor    eax,0xcba79cad
  406696:	sub    eax,0x8be31ae9
  40669b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40669c:	scas   eax,DWORD PTR es:[edi]
  40669d:	push   es
  40669e:	sbb    al,0x5c
  4066a0:	daa    
  4066a1:	and    al,0xc4
  4066a3:	hlt    
  4066a4:	fdivr  QWORD PTR [edi-0x58]
  4066a7:	dec    esp
  4066a8:	or     BYTE PTR [eax],dl
  4066aa:	repz sub BYTE PTR [edx-0x42],cl
  4066ae:	outs   dx,DWORD PTR ds:[esi]
  4066af:	sub    ebp,0x4e
  4066b2:	adc    BYTE PTR [eax+0x2e215c16],0xea
  4066b9:	mov    ds:0x37824d87,eax
  4066be:	mov    dh,0x20
  4066c0:	or     ebp,DWORD PTR [edx+0x24]
  4066c3:	push   ds
  4066c4:	les    edi,FWORD PTR [esi-0x624ae07d]
  4066ca:	call   0xf94d:0x4d907f8d
  4066d1:	div    DWORD PTR [edx+0x7]
  4066d4:	pushf  
  4066d5:	mov    fs,WORD PTR [edi-0x442b7582]
  4066db:	test   al,0x3a
  4066dd:	add    BYTE PTR [eax-0x2f],0x7b
  4066e1:	push   es
  4066e2:	leave  
  4066e3:	stc    
  4066e4:	popa   
  4066e5:	sbb    dl,bh
  4066e7:	test   al,0x97
  4066e9:	jns    0x4066d1
  4066eb:	ss jg  0x4066ff
  4066ee:	call   0x54a2:0x4b4612fe
  4066f5:	mov    WORD PTR [ebx+0x14badff4],cs
  4066fb:	inc    edx
  4066fc:	dec    esi
  4066fd:	xchg   edi,eax
  4066fe:	pop    esp
  4066ff:	loopne 0x4066c8
  406701:	nop
  406702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406703:	stos   BYTE PTR es:[edi],al
  406704:	jg     0x40676d
  406706:	mov    ebx,DWORD PTR [edi+0x4b841484]
  40670c:	xor    eax,eax
  40670e:	push   ss
  40670f:	jle    0x4066f7
  406711:	push   ss
  406712:	sbb    al,0xad
  406714:	fistp  WORD PTR [ebp+0x5546b3b4]
  40671a:	in     eax,0x63
  40671c:	xchg   edi,eax
  40671d:	sahf   
  40671e:	mov    ecx,0x42d31acd
  406723:	inc    edx
  406724:	pop    es
  406725:	ficomp WORD PTR [ebx-0x69]
  406728:	dec    ecx
  406729:	mov    esi,0xbeaa77fa
  40672e:	enter  0x4571,0x33
  406732:	stc    
  406733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406734:	push   0xffffffee
  406736:	jo     0x406798
  406738:	jmp    0x4066c3
  40673a:	mov    esp,0x431952cd
  40673f:	dec    esp
  406740:	cdq    
  406741:	aaa    
  406742:	push   0xfffffff7
  406744:	mov    cs,WORD PTR [edi-0x13]
  406747:	push   eax
  406748:	add    al,0xa7
  40674a:	stos   DWORD PTR es:[edi],eax
  40674b:	pop    edx
  40674c:	mov    dl,0xfb
  40674e:	inc    edi
  40674f:	in     eax,0x65
  406751:	dec    ebp
  406752:	xchg   edx,eax
  406753:	mov    ebp,eax
  406755:	fiadd  DWORD PTR [ebx]
  406757:	adc    dh,BYTE PTR [ecx]
  406759:	fcomp  st(2)
  40675b:	adc    al,0x65
  40675d:	push   es
  40675e:	push   esi
  40675f:	ss inc eax
  406761:	push   ds
  406762:	je     0x4067b7
  406764:	ret    0x78a4
  406767:	imul   esi,DWORD PTR [eax-0x35ff6e43],0x8411a760
  406771:	cmp    DWORD PTR [ebx+0x26],0xffffffea
  406775:	(bad)  
  406777:	in     al,dx
  406778:	xor    ch,BYTE PTR [eax]
  40677a:	out    0x6c,al
  40677c:	ss dec edx
  40677e:	out    dx,al
  40677f:	mov    ebx,0x93323b42
  406784:	cmc    
  406785:	(bad)  
  406787:	loopne 0x406738
  406789:	and    DWORD PTR [edi],0x18
  40678c:	jno    0x40679e
  40678e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40678f:	adc    DWORD PTR [ecx+eiz*2],ecx
  406792:	mov    eax,ds:0x6ecfac5a
  406797:	cmc    
  406798:	dec    ebx
  406799:	jbe    0x406807
  40679b:	gs (bad) 
  40679d:	pushf  
  40679e:	xor    BYTE PTR [eax-0x7515cd64],ah
  4067a4:	add    esi,DWORD PTR [ecx+0x54]
  4067a7:	in     al,dx
  4067a8:	hlt    
  4067a9:	ja     0x40678b
  4067ab:	pop    eax
  4067ac:	in     eax,0x84
  4067ae:	ins    DWORD PTR es:[edi],dx
  4067af:	cmp    al,0xcd
  4067b1:	iret   
  4067b2:	fwait
  4067b3:	sbb    edi,edi
  4067b5:	adc    cl,cl
  4067b7:	xor    BYTE PTR [eax+0x12128e14],ch
  4067bd:	aas    
  4067be:	or     bh,ch
  4067c0:	call   0x682e:0x57eb7a90
  4067c7:	xchg   BYTE PTR [ebx-0x3c3e6651],cl
  4067cd:	jmp    0x15d0:0x4e03693
  4067d4:	mov    eax,ds:0x52615e64
  4067d9:	add    eax,0xb75c79a9
  4067de:	cmp    eax,0x72671529
  4067e3:	outs   dx,BYTE PTR ds:[esi]
  4067e4:	and    DWORD PTR [esi],0xffffffa2
  4067e7:	xor    ebp,DWORD PTR [ebp+0x72]
  4067ea:	and    dl,BYTE PTR [esi]
  4067ec:	(bad)  
  4067ed:	mov    ecx,0xd8146e96
  4067f2:	enter  0x1725,0x1a
  4067f6:	pop    es
  4067f7:	sub    al,0x52
  4067f9:	or     BYTE PTR [eax-0x16d7143a],bh
  4067ff:	shr    DWORD PTR [ebx+ecx*4+0x61],1
  406803:	lea    eax,[eax]
  406805:	dec    eax
  406806:	pop    ecx
  406807:	pop    ebx
  406808:	repnz int 0x5f
  40680b:	lea    esi,[esi-0xb43cffa]
  406811:	push   ebx
  406812:	loope  0x40687b
  406814:	mov    bl,0x3c
  406817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406818:	dec    ebp
  406819:	push   0x55
  40681b:	fbstp  TBYTE PTR [esi]
  40681d:	cli    
  40681e:	and    al,cl
  406820:	and    BYTE PTR [edx-0x46af60c],cl
  406826:	push   ecx
  406827:	gs xor eax,0x18dd40fe
  40682d:	pop    esp
  40682e:	lds    edx,FWORD PTR [esi+eax*2+0x75ff5f8a]
  406835:	sbb    ecx,ebx
  406837:	sub    eax,0xffffffba
  40683a:	loope  0x4067c5
  40683c:	push   0x2f
  40683e:	loopne 0x406896
  406840:	xor    dh,BYTE PTR [esi]
  406842:	fs jmp 0x7a20:0x32afe8cc
  40684a:	add    eax,eax
  40684c:	fistp  QWORD PTR [edi+0x40]
  40684f:	hlt    
  406850:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406851:	ss mov bl,0xb9
  406854:	mov    edx,0xa12e759f
  406859:	dec    esi
  40685a:	js     0x40688e
  40685c:	inc    eax
  40685d:	push   edi
  40685e:	mov    al,ds:0xfd9c1b81
  406863:	shr    DWORD PTR [eax+0x36a31ca9],cl
  406869:	pop    ds
  40686a:	sub    BYTE PTR [ebp-0x45f9d0b2],dh
  406870:	add    dh,BYTE PTR [ebx-0x3d]
  406873:	aad    0xf7
  406875:	push   esi
  406876:	lods   eax,DWORD PTR ds:[esi]
  406877:	icebp  
  406878:	lods   eax,DWORD PTR ds:[esi]
  40687a:	fild   QWORD PTR [eax]
  40687c:	mov    eax,0x40657dee
  406881:	int3   
  406882:	test   al,0xa5
  406884:	sbb    eax,ecx
  406886:	xchg   ebx,eax
  406887:	fsub   DWORD PTR [edx]
  406889:	inc    ecx
  40688a:	or     esi,ebp
  40688c:	xchg   esi,eax
  40688d:	loope  0x406853
  40688f:	cmp    BYTE PTR [ecx+0x37a398a9],bl
  406895:	lock repnz sub eax,0x30f8f457
  40689c:	sub    bh,0xc4
  40689f:	jae    0x4068da
  4068a1:	inc    esp
  4068a2:	xor    DWORD PTR ds:0x6dfa0050,0xaac34789
  4068ac:	and    ebx,edx
  4068ae:	mov    esp,0x3f55f8da
  4068b3:	xchg   ecx,eax
  4068b4:	inc    BYTE PTR [ecx+0x7c]
  4068b7:	fs es mov dl,0x4c
  4068bb:	cli    
  4068bc:	retf   
  4068bd:	mov    dh,dh
  4068bf:	pop    es
  4068c0:	pusha  
  4068c1:	ror    DWORD PTR [esi+0x2a],1
  4068c4:	ins    DWORD PTR es:[edi],dx
  4068c5:	sar    DWORD PTR [eax+0x77],0xfc
  4068c9:	int    0xab
  4068cb:	push   eax
  4068cc:	sbb    cl,BYTE PTR [edi+0x19]
  4068cf:	or     DWORD PTR [edx],esp
  4068d1:	or     BYTE PTR [ebx+0xf913c3d],dh
  4068d7:	sub    DWORD PTR [ecx-0x80],esp
  4068da:	adc    al,0x3b
  4068dc:	jecxz  0x4068d4
  4068de:	and    al,0x54
  4068e0:	cmc    
  4068e1:	adc    BYTE PTR ds:0xe65874f5,cl
  4068e7:	mov    ch,0x84
  4068e9:	or     ebp,ebx
  4068eb:	ret    0x2648
  4068ee:	aam    0xc3
  4068f0:	mov    eax,ds:0xd7dfe679
  4068f5:	xchg   bl,al
  4068f7:	mov    bl,0xf6
  4068f9:	push   cs
  4068fa:	xor    eax,0xeb036454
  4068ff:	jp     0x406955
  406901:	test   bl,0x2d
  406904:	retf   
  406905:	cmp    al,dl
  406907:	repz mov ds:0x1f9a0922,eax
  40690d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40690e:	xor    ecx,DWORD PTR [esi-0x51]
  406911:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406912:	push   DWORD PTR [edi]
  406914:	enter  0x907c,0xd2
  406918:	push   edi
  406919:	test   BYTE PTR [edx+0x2d],0x8
  40691d:	addr16 or ah,ah
  406920:	adc    DWORD PTR [edi+0x0],0xe3e782b5
  406927:	je     0x4068b0
  406929:	int    0x81
  40692b:	jmp    0x2649:0xde67c51c
  406932:	mov    ebp,0xf518e22e
  406937:	mov    edi,0xedd9ab4f
  40693c:	jmp    0x4068ea
  40693e:	packsswb mm6,QWORD PTR [edx-0x8e87]
  406945:	pop    ss
  406946:	mov    al,ds:0xf56c999f
  40694b:	daa    
  40694c:	imul   ebx,DWORD PTR [esi],0xffffff92
  40694f:	jge    0x406938
  406951:	nop
  406952:	cmp    al,BYTE PTR [ecx]
  406954:	push   edi
  406955:	jl     0x406957
  406957:	repnz pushf 
  406959:	ret    
  40695a:	or     eax,0x32baf1ab
  40695f:	sbb    cl,bl
  406961:	mov    WORD PTR [ebx-0x148566d0],ss
  406967:	pop    eax
  406968:	sbb    eax,0xe43e1290
  40696d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40696e:	push   esi
  40696f:	xchg   edx,eax
  406970:	pop    ds
  406971:	xchg   edx,edx
  406973:	jb     0x40693b
  406975:	les    esp,FWORD PTR ds:[ecx-0x1982500a]
  40697c:	stc    
  40697d:	ins    DWORD PTR es:[edi],dx
  40697e:	push   esi
  40697f:	fimul  WORD PTR ds:0xd8ba0643
  406985:	jl     0x406970
  406987:	nop
  406988:	ficom  WORD PTR [ecx-0x93d378e]
  40698e:	inc    ecx
  40698f:	push   ss
  406990:	imul   ebp,edx,0x60
  406993:	xor    bh,ah
  406995:	fist   WORD PTR [edi]
  406997:	loope  0x406a0b
  406999:	fwait
  40699a:	sahf   
  40699b:	push   es
  40699c:	jmp    FWORD PTR [ecx]
  40699e:	sbb    eax,0x145b7891
  4069a3:	and    eax,0x55aa9253
  4069a8:	repz and ch,BYTE PTR [eax+0x33c85dca]
  4069af:	pop    eax
  4069b0:	add    eax,0x4a50f6e8
  4069b5:	scas   eax,DWORD PTR es:[edi]
  4069b6:	xor    DWORD PTR [esi+edx*1],0x55a83f04
  4069bd:	adc    BYTE PTR [edi-0x4c],bl
  4069c0:	sbb    eax,0x3057850
  4069c5:	loope  0x406a2a
  4069c7:	fdivr  DWORD PTR [ebp+0x67]
  4069ca:	outs   dx,DWORD PTR gs:[esi]
  4069cc:	fisub  DWORD PTR [edi-0x71]
  4069cf:	dec    esp
  4069d0:	jl     0x40696e
  4069d2:	add    edi,DWORD PTR [edi+ebx*8]
  4069d5:	in     eax,dx
  4069d6:	outs   dx,BYTE PTR ds:[esi]
  4069d7:	leave  
  4069d8:	cli    
  4069d9:	dec    ecx
  4069da:	out    0xa8,al
  4069dc:	mov    ch,0x35
  4069de:	dec    eax
  4069df:	fiadd  DWORD PTR [ebp-0x47d10b9d]
  4069e5:	jecxz  0x406a17
  4069e7:	jl     0x406a52
  4069e9:	imul   edx,DWORD PTR [ebp+edx*4-0xb],0x67
  4069ee:	inc    eax
  4069ef:	stos   DWORD PTR es:[edi],eax
  4069f0:	repnz cmc 
  4069f2:	call   0x99ff5354
  4069f7:	mov    esi,0x990cc7b
  4069fc:	jecxz  0x4069a0
  4069fe:	(bad)  
  4069ff:	inc    DWORD PTR [ebx]
  406a01:	fild   DWORD PTR [eax+edi*8]
  406a04:	pop    esi
  406a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a06:	mov    ecx,0x73195567
  406a0b:	inc    eax
  406a0c:	mov    dl,0x32
  406a0e:	or     al,0x16
  406a10:	jo     0x406a45
  406a12:	and    al,0x43
  406a14:	ja     0x4069b2
  406a16:	mov    ch,bh
  406a18:	pop    es
  406a19:	mov    edx,0xcd069bf8
  406a1e:	lock imul edi,edi,0xe9f11ff5
  406a25:	loope  0x406a8f
  406a27:	ffreep st(5)
  406a29:	mov    eax,0x3e41f4e7
  406a2e:	fldcw  WORD PTR [ebx+0x60]
  406a31:	pop    esp
  406a32:	pop    edx
  406a33:	jns    0x406a23
  406a35:	cmp    BYTE PTR [edx-0x880b5da],bh
  406a3b:	xor    DWORD PTR [ebp-0x334cd5c8],ecx
  406a41:	push   esp
  406a42:	pop    es
  406a43:	push   fs
  406a45:	mov    edi,0x627d7ada
  406a4a:	mov    ch,0x7
  406a4c:	push   eax
  406a4d:	cld    
  406a4e:	bound  ecx,QWORD PTR ss:[ebx-0x73120fae]
  406a55:	jne    0x406a81
  406a57:	sbb    DWORD PTR [edi-0x737f570],0xffffff8c
  406a5e:	mov    WORD PTR [eax],?
  406a60:	cmp    ebx,edi
  406a62:	sub    DWORD PTR [ebx],ebx
  406a64:	les    edi,FWORD PTR [ecx-0x6f]
  406a67:	pop    eax
  406a68:	pop    eax
  406a69:	and    al,0xe5
  406a6b:	cmp    eax,0x9c32a98c
  406a70:	xor    BYTE PTR [ecx+0x4],bl
  406a73:	and    BYTE PTR [ecx],bh
  406a75:	test   eax,0xf9a3fcc3
  406a7a:	je     0x406a61
  406a7c:	jbe    0x406a81
  406a7e:	dec    esp
  406a7f:	lea    eax,[eax+0x8]
  406a82:	shl    cl,0x9b
  406a85:	mul    DWORD PTR [ecx]
  406a87:	loopne 0x406a94
  406a89:	mov    edx,DWORD PTR [edx+0x358c2737]
  406a8f:	jp     0x406a99
  406a91:	mov    ecx,0x3dfbaa57
  406a96:	sti    
  406a97:	jmp    FWORD PTR [eax]
  406a99:	xchg   edi,eax
  406a9a:	jge    0x406ac4
  406a9c:	int3   
  406a9d:	push   ds
  406a9e:	test   eax,0x3c3f9450
  406aa3:	and    eax,0x71590aac
  406aa8:	push   esi
  406aa9:	into   
  406aaa:	xor    edx,DWORD PTR [ecx+eiz*1]
  406aad:	test   al,0xa8
  406aaf:	cwde   
  406ab0:	xlat   BYTE PTR ds:[ebx]
  406ab1:	pop    ecx
  406ab2:	adc    DWORD PTR [edi+0x2],ebx
  406ab5:	inc    esp
  406ab6:	adc    al,0x9e
  406ab8:	imul   eax,DWORD PTR [edx+0x1e9b50b9],0x66
  406abf:	sbb    eax,0x6804ea53
  406ac4:	dec    ecx
  406ac5:	sbb    DWORD PTR [ecx-0x80],edi
  406ac8:	sub    BYTE PTR [ecx-0x23],al
  406acb:	arpl   WORD PTR [ecx-0x61],ax
  406ace:	mov    ebx,0xff3b77c7
  406ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ad4:	aad    0x93
  406ad6:	repz dec ebx
  406ad8:	(bad)  
  406ad9:	int3   
  406ada:	arpl   WORD PTR [esi+0x730029d7],bx
  406ae0:	cmp    BYTE PTR [edx+eax*8+0x2d],cl
  406ae4:	inc    eax
  406ae5:	pop    ds
  406ae6:	add    dh,BYTE PTR [eax]
  406ae8:	out    dx,al
  406ae9:	std    
  406aea:	xor    DWORD PTR [ebx-0x54ffdf2d],ebp
  406af0:	fdiv   DWORD PTR [eax]
  406af2:	hlt    
  406af3:	fdivr  DWORD PTR [ecx+0x1ed04996]
  406af9:	sbb    al,0xc3
  406afb:	mov    ebp,0xc9ca567f
  406b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b01:	mov    al,ds:0xadb22317
  406b06:	test   al,0x32
  406b08:	xlat   BYTE PTR ds:[ebx]
  406b09:	fisubr DWORD PTR [ecx+eax*1]
  406b0c:	lods   al,BYTE PTR ds:[esi]
  406b0d:	sbb    edx,ecx
  406b0f:	jl     0x406b70
  406b11:	mov    ch,0x3e
  406b13:	xor    DWORD PTR [edi+edx*8],edi
  406b16:	jae    0x406a9a
  406b18:	and    edi,ecx
  406b1a:	rcr    BYTE PTR [eax-0x48],cl
  406b1d:	cmc    
  406b1e:	inc    ebx
  406b1f:	mov    esi,0x1500f875
  406b24:	xchg   ebx,eax
  406b25:	inc    ecx
  406b26:	sub    eax,0x78db8b2e
  406b2b:	pop    ebp
  406b2c:	sbb    ebp,eax
  406b2e:	hlt    
  406b2f:	inc    edi
  406b30:	and    BYTE PTR ds:0x43c157b5,0x6d
  406b37:	pop    eax
  406b38:	mov    bl,0x20
  406b3a:	mov    ebp,0x6e2872
  406b3f:	cmp    eax,0x92386fd5
  406b44:	pop    ecx
  406b45:	add    DWORD PTR [eax+0x0],ebx
  406b48:	gs sbb bh,bh
  406b4b:	dec    ebx
  406b4c:	mov    ?,WORD PTR [edx-0x13849c43]
  406b52:	rcr    DWORD PTR cs:[ebx-0x14ed6454],0x87
  406b5a:	adc    ah,BYTE PTR [ebx+0x796e5b22]
  406b60:	push   ss
  406b61:	or     BYTE PTR [eax],bl
  406b63:	adc    ch,BYTE PTR [edi]
  406b65:	dec    ecx
  406b66:	mov    eax,0x9214fc13
  406b6b:	and    eax,0xacd96e78
  406b70:	mov    ah,0xad
  406b72:	scas   eax,DWORD PTR es:[edi]
  406b73:	enter  0xe263,0xd2
  406b77:	mov    esp,fs
  406b79:	mov    ecx,0x4c622954
  406b7e:	or     ch,BYTE PTR [ecx+0x3ba4405c]
  406b84:	stos   DWORD PTR es:[edi],eax
  406b85:	adc    DWORD PTR [edi+ebp*1],0x1d591d79
  406b8c:	jecxz  0x406c0d
  406b8e:	icebp  
  406b8f:	xchg   esi,eax
  406b90:	inc    edi
  406b91:	dec    edi
  406b92:	mov    cl,0x9a
  406b94:	sbb    eax,0x24b0e3b7
  406b99:	stos   DWORD PTR es:[edi],eax
  406b9a:	pop    esi
  406b9b:	push   ss
  406b9c:	mov    eax,ds:0xca56b42
  406ba1:	inc    ebp
  406ba2:	pop    edi
  406ba3:	nop
  406ba4:	jae    0x406bda
  406ba6:	add    esi,ecx
  406ba8:	xor    BYTE PTR [ecx],dl
  406baa:	movntq (bad),mm1
  406bab:	out    0xce,eax
  406bad:	xchg   esi,eax
  406bae:	and    al,0x58
  406bb0:	xchg   DWORD PTR [edx],esp
  406bb2:	ret    
  406bb3:	jle    0x406b55
  406bb5:	in     al,dx
  406bb6:	imul   ecx,ebp,0x64a701ea
  406bbc:	cs mov ch,0x80
  406bbf:	and    BYTE PTR [ebp-0x56380e88],ah
  406bc5:	pop    es
  406bc6:	in     al,dx
  406bc7:	mov    esp,0x6d32086a
  406bcc:	inc    ecx
  406bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bce:	into   
  406bcf:	and    BYTE PTR [edx+0x49],bl
  406bd2:	mov    BYTE PTR [eax-0x1478710a],dh
  406bd8:	(bad)  
  406bda:	inc    ebp
  406bdb:	stos   BYTE PTR es:[edi],al
  406bdc:	or     eax,0xcf3a7d8d
  406be1:	mov    ch,dh
  406be3:	js     0x406b99
  406be5:	xchg   ebp,eax
  406be6:	push   edx
  406be7:	xchg   ebx,eax
  406be8:	dec    esp
  406be9:	ret    0xe2d9
  406bec:	push   ebp
  406bed:	clc    
  406bee:	adc    BYTE PTR [edi+0x7b54046a],ch
  406bf4:	push   ss
  406bf5:	push   0x54
  406bf7:	retf   0xa8ed
  406bfa:	add    dh,BYTE PTR [eax]
  406bfc:	sub    BYTE PTR [edx-0x56],0x81
  406c00:	push   ds
  406c01:	adc    dl,BYTE PTR [ebx+0x693f5c28]
  406c07:	xchg   ecx,eax
  406c08:	xchg   edi,eax
  406c09:	and    DWORD PTR [ebx+0x45819002],esp
  406c0f:	stos   BYTE PTR es:[edi],al
  406c10:	pop    edx
  406c11:	dec    edx
  406c12:	les    ebp,FWORD PTR [ecx+esi*8]
  406c15:	aas    
  406c16:	imul   BYTE PTR [edi]
  406c18:	lahf   
  406c19:	arpl   WORD PTR ds:0xb5d7852,cx
  406c1f:	clc    
  406c20:	cmp    eax,DWORD PTR [edx+0x58d95429]
  406c26:	mov    eax,ds:0x92532a6
  406c2b:	or     al,0x10
  406c2d:	ins    BYTE PTR es:[edi],dx
  406c2e:	inc    esp
  406c2f:	stc    
  406c30:	addr16 xchg ebp,eax
  406c32:	scas   eax,DWORD PTR es:[edi]
  406c33:	call   0xae8a:0x2493a77c
  406c3a:	and    dh,dl
  406c3c:	jmp    0x406bc9
  406c3e:	(bad)  
  406c40:	inc    ebp
  406c41:	shl    esi,1
  406c43:	pop    ebx
  406c44:	sahf   
  406c45:	add    eax,0xa1047f13
  406c4a:	stc    
  406c4b:	mov    ecx,0xc86ba7c3
  406c50:	jno    0x406c3c
  406c52:	les    ebp,FWORD PTR [ecx+0x2e]
  406c55:	xchg   esi,eax
  406c56:	fisub  DWORD PTR [eax+0x29c7cbc5]
  406c5c:	mov    edx,DWORD PTR [ecx]
  406c5e:	jnp    0x406ccb
  406c60:	(bad)  
  406c61:	into   
  406c62:	inc    esp
  406c63:	in     eax,0xbb
  406c65:	push   0xfffffff4
  406c67:	xchg   ebx,eax
  406c68:	loop   0x406c49
  406c6a:	add    eax,0x7a6586fe
  406c6f:	(bad)  
  406c70:	and    al,BYTE PTR [edx+edi*4]
  406c73:	dec    edi
  406c74:	mov    eax,ds:0x7ea06c7e
  406c79:	lods   eax,DWORD PTR fs:[esi]
  406c7b:	cmp    dh,BYTE PTR [ebx]
  406c7d:	cmp    dh,ah
  406c7f:	dec    ecx
  406c80:	push   es
  406c81:	jo     0x406cfa
  406c83:	mov    eax,0xff8fae2d
  406c88:	mov    ch,0x22
  406c8a:	jb     0x406cbb
  406c8c:	fstp   TBYTE PTR [edi]
  406c8e:	xor    eax,0xa3deef61
  406c93:	rol    BYTE PTR [edx-0x5401ae94],1
  406c99:	jmp    0x5c6ce017
  406c9e:	add    ebp,DWORD PTR [esi-0x193b89e5]
  406ca4:	inc    ebx
  406ca5:	repnz dec edx
  406ca7:	dec    esi
  406ca8:	xchg   esp,eax
  406ca9:	jns    0x406ca0
  406cab:	xchg   ch,bh
  406cad:	mov    eax,0x4c301555
  406cb2:	pop    ecx
  406cb3:	adc    BYTE PTR [eax-0x27f76143],al
  406cb9:	dec    ebx
  406cba:	dec    esp
  406cbb:	mov    edi,0x8ee0acb9
  406cc0:	lds    edx,FWORD PTR [ebx]
  406cc2:	inc    edi
  406cc3:	push   edi
  406cc4:	fadd   DWORD PTR [eax-0x372fe7b5]
  406cca:	mov    esi,0x3f0b43bb
  406ccf:	and    eax,esi
  406cd1:	outs   dx,DWORD PTR ds:[esi]
  406cd2:	inc    edx
  406cd3:	jp     0x406cbc
  406cd5:	mov    ah,0xe9
  406cd7:	or     al,al
  406cd9:	lock xor DWORD PTR [ebx-0x12],esp
  406cdd:	jbe    0x406d06
  406cdf:	adc    eax,0xaf0cc6be
  406ce4:	fiadd  WORD PTR gs:[edi+0x162565fc]
  406ceb:	or     esp,DWORD PTR [ebx-0x3d]
  406cee:	cmp    ecx,ecx
  406cf0:	fldenv [edx-0x4497471f]
  406cf6:	loope  0x406d21
  406cf8:	lea    ebx,[eax]
  406cfa:	mov    dl,0x0
  406cfc:	mov    al,BYTE PTR [edi]
  406cfe:	xchg   ebx,eax
  406cff:	std    
  406d00:	or     cl,BYTE PTR cs:[esi-0x1d676ffa]
  406d07:	adc    eax,0xd9a80e95
  406d0c:	call   0xe9ded55
  406d11:	inc    esi
  406d12:	add    BYTE PTR [ecx+eiz*1],al
  406d15:	loop   0x406cf0
  406d17:	or     al,0x70
  406d19:	or     eax,0xb2758497
  406d1e:	sub    BYTE PTR ds:0xa0ed76c8,cl
  406d24:	inc    edx
  406d25:	mov    ebp,0x2bf481e3
  406d2a:	adc    edi,eax
  406d2c:	ret    
  406d2d:	push   esp
  406d2e:	pop    ss
  406d2f:	push   ecx
  406d30:	loop   0x406d40
  406d32:	ins    DWORD PTR es:[edi],dx
  406d33:	push   ebx
  406d34:	push   eax
  406d35:	or     eax,DWORD PTR [ecx+eiz*2-0x6]
  406d39:	js     0x406d9a
  406d3b:	jecxz  0x406d49
  406d3d:	aam    0x78
  406d3f:	and    bl,al
  406d41:	or     cl,dh
  406d43:	jge    0x406ce8
  406d45:	jne    0x406d55
  406d47:	jae    0x406d25
  406d49:	stc    
  406d4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d4b:	jl     0x406d53
  406d4d:	in     eax,dx
  406d4e:	jnp    0x406cf9
  406d50:	loope  0x406d31
  406d52:	sbb    esi,DWORD PTR [edi]
  406d54:	ss dec eax
  406d56:	inc    ebx
  406d57:	pusha  
  406d58:	xchg   esp,eax
  406d59:	lds    ecx,FWORD PTR [edx+0x13702df7]
  406d5f:	cmp    DWORD PTR [ebp+0x53],0x1c
  406d63:	rcr    DWORD PTR [ebx],0xc4
  406d66:	sub    DWORD PTR [edx+0x36],0x73
  406d6a:	in     eax,dx
  406d6b:	ret    0xb48c
  406d6e:	pop    ss
  406d6f:	mov    ebp,0x54926313
  406d74:	add    eax,0x626bc70c
  406d79:	adc    edi,DWORD PTR [eax]
  406d7b:	sbb    cl,BYTE PTR [esp+ebx*8+0xf]
  406d7f:	xor    dl,bl
  406d81:	push   ds
  406d82:	adc    eax,0xead7892e
  406d87:	sti    
  406d88:	aad    0xca
  406d8a:	jnp    0x406d74
  406d8c:	pop    es
  406d8d:	aaa    
  406d8e:	and    edx,DWORD PTR [eax+edi*1]
  406d91:	pop    esp
  406d92:	mov    ebx,0xf9d53069
  406d97:	sahf   
  406d98:	outs   dx,DWORD PTR ds:[esi]
  406d99:	mov    ecx,0xa50b5bf7
  406d9e:	movd   DWORD PTR [ebx+edx*8-0x57],mm6
  406da3:	xchg   ecx,eax
  406da4:	add    ah,BYTE PTR [esi-0x79b266e7]
  406daa:	xor    bh,cl
  406dac:	lea    ebx,[esi-0x3a]
  406daf:	ins    DWORD PTR es:[edi],dx
  406db0:	iret   
  406db1:	out    0x42,al
  406db3:	(bad)  
  406db4:	in     al,dx
  406db5:	xchg   BYTE PTR [esi+0x31],cl
  406db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406db9:	loope  0x406dd8
  406dbb:	in     eax,0x64
  406dbd:	inc    esp
  406dbe:	mov    edi,0x4ef8878
  406dc3:	pop    esp
  406dc4:	mov    ah,0x36
  406dc6:	mov    dl,0x5a
  406dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dc9:	adc    al,0x92
  406dcb:	in     al,dx
  406dcc:	xor    edx,0x9f44af89
  406dd2:	pusha  
  406dd3:	ins    BYTE PTR es:[edi],dx
  406dd4:	hlt    
  406dd5:	mov    bh,0x3b
  406dd7:	jl     0x406e54
  406dd9:	and    cl,BYTE PTR [edx]
  406ddb:	mov    dh,0xbd
  406ddd:	xchg   ecx,eax
  406dde:	sub    al,0xab
  406de0:	icebp  
  406de1:	div    DWORD PTR [esi+0x2f9f2ef1]
  406de7:	fstp   DWORD PTR [edi-0x274ebdfa]
  406ded:	ins    DWORD PTR es:[edi],dx
  406dee:	xor    DWORD PTR [edi],ebx
  406df0:	pushf  
  406df1:	xchg   edi,eax
  406df2:	add    bl,BYTE PTR [ecx+0x2]
  406df5:	ins    BYTE PTR es:[edi],dx
  406df6:	or     dl,BYTE PTR [edi+0x488c2787]
  406dfc:	and    eax,0x766ef096
  406e01:	add    ah,0x58
  406e04:	jo     0x406da1
  406e06:	ss cmc 
  406e08:	or     DWORD PTR [edi+0x247553e6],edx
  406e0e:	mov    bl,0x46
  406e10:	ss push ebp
  406e12:	or     BYTE PTR [ebx+0x2b],bh
  406e15:	bound  ebx,QWORD PTR [ebx+eax*8-0x719d8b83]
  406e1c:	stos   BYTE PTR es:[edi],al
  406e1d:	scas   eax,DWORD PTR es:[edi]
  406e1e:	das    
  406e1f:	lds    ebx,FWORD PTR [esp+ecx*4]
  406e22:	jbe    0x406dc2
  406e24:	xor    DWORD PTR [edi+edi*2],ebp
  406e27:	cmp    al,0xce
  406e29:	lods   al,BYTE PTR ds:[esi]
  406e2a:	cwde   
  406e2b:	aad    0x43
  406e2d:	mov    edi,0x60b51aca
  406e32:	test   DWORD PTR [ebp-0x4ca7d1ce],esp
  406e38:	scas   eax,DWORD PTR es:[edi]
  406e39:	xchg   esp,eax
  406e3a:	outs   dx,BYTE PTR ds:[esi]
  406e3b:	add    al,0xe7
  406e3d:	fisubr DWORD PTR [ebx]
  406e3f:	jmp    0x688a5f99
  406e44:	rol    DWORD PTR [edi+0x11],cl
  406e47:	jno    0x406e69
  406e49:	stos   BYTE PTR es:[edi],al
  406e4a:	out    dx,al
  406e4b:	mov    ch,0x5c
  406e4d:	stc    
  406e4e:	inc    eax
  406e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e50:	inc    edi
  406e51:	aas    
  406e52:	cmp    eax,0x71f2d36b
  406e57:	or     eax,0x1965480
  406e5c:	inc    ebx
  406e5d:	mov    dl,0xe0
  406e5f:	cmp    eax,0xc6b54819
  406e64:	in     eax,dx
  406e65:	dec    esp
  406e66:	pusha  
  406e67:	mov    ch,0x97
  406e69:	xor    ebp,ecx
  406e6b:	or     al,0x17
  406e6d:	dec    ebx
  406e6e:	(bad)  
  406e6f:	int3   
  406e70:	jp     0x406e11
  406e72:	dec    ebp
  406e73:	loopne 0x406ec6
  406e75:	pop    edx
  406e76:	mov    eax,ds:0x7fee8133
  406e7b:	adc    al,0x85
  406e7d:	push   0xffffffd4
  406e7f:	out    dx,al
  406e80:	(bad)  
  406e81:	cdq    
  406e82:	xchg   ecx,eax
  406e83:	mov    al,ds:0xddcefa8c
  406e88:	icebp  
  406e89:	in     eax,0xa0
  406e8b:	(bad)  [eax+0x455003f8]
  406e91:	adc    DWORD PTR [eax+0x76],esp
  406e94:	push   ss
  406e95:	push   0x11
  406e97:	mov    al,ds:0x42d6a74f
  406e9c:	sbb    edx,DWORD PTR [edi-0x72]
  406e9f:	mov    esp,0xf7f745c0
  406ea4:	or     DWORD PTR [ebx+0xb],edi
  406ea7:	repz retf 0x4b08
  406eab:	fs das 
  406ead:	addr16 hlt 
  406eaf:	(bad)  
  406eb0:	fs inc esi
  406eb2:	or     ecx,eax
  406eb4:	push   es
  406eb5:	fsubrp st(4),st
  406eb7:	loop   0x406eeb
  406eb9:	ret    0xc59e
  406ebc:	sbb    ebp,DWORD PTR [edi-0x13]
  406ebf:	sbb    BYTE PTR [edi+0x5e5c67f2],0xe9
  406ec6:	and    DWORD PTR [edi],0x4314bd81
  406ecc:	popf   
  406ecd:	push   ebx
  406ece:	(bad)  
  406ed0:	jb     0x406e58
  406ed2:	jnp    0x406e97
  406ed4:	xchg   ebx,eax
  406ed5:	sbb    DWORD PTR [ecx-0x16],0xd5bce38a
  406edc:	out    dx,al
  406edd:	cs ds jp 0x406ee7
  406ee1:	cmp    al,0x2
  406ee3:	sub    DWORD PTR [esi+0x1f3e5200],0x7f
  406eea:	fwait
  406eeb:	pop    ebp
  406eec:	inc    eax
  406eed:	cld    
  406eee:	jg     0x406f1e
  406ef0:	push   ebp
  406ef1:	and    eax,0x659fc743
  406ef6:	imul   esp,DWORD PTR [eax+0x4f],0x49
  406efa:	sbb    eax,0xc1165231
  406eff:	jmp    0x406e97
  406f01:	and    BYTE PTR [esi+edx*2+0x20],cl
  406f05:	jns    0x406f08
  406f07:	mov    ecx,0xfc908023
  406f0c:	inc    ecx
  406f0d:	jle    0x406f30
  406f0f:	xor    ah,dl
  406f11:	pop    ss
  406f12:	xchg   ebx,eax
  406f13:	ss stos BYTE PTR es:[edi],al
  406f15:	pop    edi
  406f16:	mov    ah,0x21
  406f18:	push   edi
  406f19:	jg     0x406f82
  406f1b:	popf   
  406f1c:	xchg   BYTE PTR [eax+edx*1-0x753c9bda],ah
  406f23:	fsub   QWORD PTR [ebx+0xbad1d34]
  406f29:	out    dx,al
  406f2a:	call   0xae067b09
  406f2f:	stc    
  406f30:	aaa    
  406f31:	out    0xf8,eax
  406f33:	test   DWORD PTR [eax],ebx
  406f35:	xlat   BYTE PTR ds:[ebx]
  406f36:	mov    esp,0x5649e4d7
  406f3b:	or     al,0x16
  406f3d:	xchg   DWORD PTR [esi+0x1a],esi
  406f40:	mov    DWORD PTR [edx+0x40],edx
  406f43:	stos   BYTE PTR es:[edi],al
  406f44:	pop    esi
  406f45:	jb     0x406edb
  406f47:	ret    
  406f48:	sub    ebp,ecx
  406f4a:	in     al,dx
  406f4b:	mov    bl,0xbd
  406f4d:	(bad)  [eax]
  406f4f:	fidivr WORD PTR [ebx-0x2e52ffea]
  406f55:	mov    ch,0xca
  406f57:	test   eax,0x73de8d8b
  406f5c:	adc    DWORD PTR [ecx+0x47],ecx
  406f5f:	adc    al,0x18
  406f61:	xchg   ebp,eax
  406f62:	ins    BYTE PTR es:[edi],dx
  406f63:	sub    eax,0x6ee57e9c
  406f68:	lock ror DWORD PTR [ecx-0x219f10da],0xa7
  406f70:	xchg   DWORD PTR [ebx],edi
  406f72:	dec    ebp
  406f73:	cld    
  406f74:	lahf   
  406f75:	imul   ebp,DWORD PTR [edx+0x2793cc86],0x6e69db3b
  406f7f:	test   al,0xe3
  406f81:	sahf   
  406f82:	out    dx,eax
  406f83:	jle    0x406fbe
  406f85:	adc    ch,BYTE PTR [edi-0x4c]
  406f88:	mov    eax,ds:0xed433b05
  406f8d:	fcomip st,st(7)
  406f8f:	imul   ecx,edi,0xf82ff059
  406f95:	xchg   esp,eax
  406f96:	in     eax,dx
  406f97:	sub    eax,0x996b8a01
  406f9c:	adc    DWORD PTR [edx-0x5c],ebx
  406f9f:	xchg   edi,eax
  406fa0:	adc    dl,bh
  406fa2:	sbb    DWORD PTR [edx-0xc16a7d],ecx
  406fa8:	adc    al,0xab
  406faa:	xchg   esi,eax
  406fab:	fimul  DWORD PTR [eax+0x14]
  406fae:	mov    BYTE PTR [esi+0x5a],0x8b
  406fb2:	inc    esp
  406fb3:	or     ebx,DWORD PTR [edi-0x433106a1]
  406fb9:	stos   DWORD PTR es:[edi],eax
  406fba:	sub    DWORD PTR ds:0x84b35129,ebx
  406fc0:	xor    eax,0xdb1e9a23
  406fc5:	nop
  406fc6:	and    BYTE PTR [ecx-0x72],bl
  406fc9:	(bad)  
  406fca:	sub    bl,ah
  406fcc:	sub    ebx,ebx
  406fce:	fstp   DWORD PTR [ebx+0x4fb36ca7]
  406fd4:	cmc    
  406fd5:	cmp    BYTE PTR [ebx-0x87d4e2d],bl
  406fdb:	clc    
  406fdc:	or     BYTE PTR [eax+0x2a7b1322],ch
  406fe2:	pop    ss
  406fe3:	dec    edi
  406fe4:	or     esp,DWORD PTR [ebx+0x2e]
  406fe7:	addr16 xor eax,0x3d9f91f7
  406fed:	scas   eax,DWORD PTR es:[edi]
  406fee:	outs   dx,BYTE PTR ds:[esi]
  406fef:	dec    ecx
  406ff0:	fs mov ah,0x7b
  406ff3:	popf   
  406ff4:	ins    DWORD PTR es:[edi],dx
  406ff5:	add    ah,BYTE PTR [esp+edx*2]
  406ff8:	in     eax,dx
  406ff9:	or     eax,0x89cc9526
  406ffe:	loop   0x40700c
  407000:	iret   
  407001:	stos   DWORD PTR es:[edi],eax
  407002:	inc    ebp
  407003:	mov    ecx,0xebcc4efc
  407008:	xor    BYTE PTR [ebx-0x25],bl
  40700b:	ror    DWORD PTR [esi-0x36a1a0a5],0xc2
  407012:	or     al,0x0
  407014:	push   ebp
  407015:	mov    ebp,esp
  407017:	push   ecx
  407018:	or     eax,eax
  40701a:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  407021:	mov    eax,DWORD PTR [ebp+0x8]
  407024:	not    ecx
  407026:	movsx  eax,BYTE PTR [eax]
  407029:	and    DWORD PTR ds:0x42e000,0x0
  407033:	mov    edx,DWORD PTR ds:0x42e000
  407039:	inc    edx
  40703a:	mov    DWORD PTR ds:0x42e000,edx
  407040:	cmp    DWORD PTR ds:0x42e000,0x21
  407047:	jl     0x407065
  40704d:	jmp    0x407058
  407052:	call   DWORD PTR ds:0x43490b
  407058:	cmp    DWORD PTR ds:0x42e000,0x11
  40705f:	jb     0x407033
  407065:	mov    edx,0x3272e4
  40706a:	sbb    ecx,0x6b74
  407070:	sub    eax,edx
  407072:	mov    ecx,0x751089d
  407077:	xor    eax,ecx
  407079:	mov    DWORD PTR ds:0x42e014,0x2a99
  407083:	cmp    eax,0xf89c85f4
  407088:	mov    DWORD PTR ds:0x42e028,0x5d7f
  407092:	jne    0x40944c
  407098:	xor    DWORD PTR ds:0x42e014,edx
  40709e:	mov    eax,DWORD PTR [ebp+0x8]
  4070a1:	or     DWORD PTR ds:0x432004,0x42f01c
  4070ab:	push   esi
  4070ac:	mov    esi,DWORD PTR [ebp+0x8]
  4070af:	add    esi,DWORD PTR [eax+0x3c]
  4070b2:	mov    DWORD PTR [ebp+0x8],esi
  4070b5:	mov    eax,DWORD PTR [ebp-0x4]
  4070b8:	mov    esi,DWORD PTR [ebp+0x8]
  4070bb:	xor    eax,ecx
  4070bd:	add    eax,edx
  4070bf:	jmp    0x40943a
  4070c4:	mov    edi,0x8bdf5962
  4070c9:	retf   
  4070ca:	mov    ebx,0x614b0602
  4070cf:	mov    ebp,0x3b991141
  4070d4:	test   al,0x38
  4070d6:	jb     0x40714a
  4070d8:	adc    BYTE PTR [edi+0x72],bl
  4070db:	jb     0x407095
  4070dd:	dec    esp
  4070de:	and    DWORD PTR [ebx+0x4716b7ab],0xd96d8a58
  4070e8:	mov    al,ds:0x9eee613e
  4070ed:	sub    DWORD PTR [ebx+0xff226b],ebx
  4070f3:	nop
  4070f4:	xchg   ecx,eax
  4070f5:	jecxz  0x4070c0
  4070f7:	inc    BYTE PTR [edi]
  4070f9:	(bad)
  4070fe:	out    0x64,eax
  407100:	adc    al,bh
  407102:	fnstcw WORD PTR [eax-0x78b572dd]
  407108:	dec    edi
  407109:	mov    eax,ds:0x9ae0d082
  40710e:	popf   
  40710f:	push   0xdce79201
  407114:	or     eax,0x103f40ea
  407119:	cmp    dh,BYTE PTR [edi+0x52]
  40711c:	out    dx,eax
  40711d:	fnstsw WORD PTR [eax+0x79fb8ba]
  407123:	mov    dl,0xe3
  407125:	hlt    
  407126:	sbb    DWORD PTR [esp+edi*4+0x13bd27dc],eax
  40712d:	jb     0x4070ea
  40712f:	xor    al,BYTE PTR [eax+0x9]
  407132:	push   DWORD PTR [esi+0x6eff0985]
  407138:	push   ebp
  407139:	jecxz  0x407113
  40713b:	hlt    
  40713c:	mov    ds:0x440992d1,al
  407141:	lods   eax,DWORD PTR ds:[esi]
  407142:	std    
  407143:	ins    BYTE PTR es:[edi],dx
  407144:	push   ecx
  407145:	cld    
  407146:	sub    DWORD PTR [ebx+0x41],ebx
  407149:	mov    ds:0x97242e4f,eax
  40714e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40714f:	mov    ebx,0x7c74fe17
  407154:	es test eax,0x55f4479a
  40715a:	mov    al,0x63
  40715c:	iret   
  40715d:	mov    dh,0xe9
  40715f:	sahf   
  407160:	sti    
  407161:	sbb    eax,0x74bee8f3
  407166:	jl     0x4071a4
  407168:	mov    ch,BYTE PTR [eax-0x33]
  40716b:	dec    edi
  40716c:	cmpxchg DWORD PTR [ebx+0x6e1a67d],esi
  407173:	xchg   edx,eax
  407174:	popf   
  407175:	arpl   WORD PTR [ebp+0x33],di
  407178:	add    ah,dl
  40717a:	xchg   bh,ah
  40717c:	add    ah,BYTE PTR [ebp+ebx*1+0x65]
  407180:	pop    esi
  407181:	aaa    
  407182:	jb     0x4071e1
  407184:	mov    ds:0x7d401872,al
  407189:	js     0x4071cd
  40718b:	cli    
  40718c:	sbb    al,bh
  40718e:	sar    DWORD PTR [ebx+0x5d],1
  407191:	dec    ebp
  407192:	mov    BYTE PTR [esi],cl
  407194:	test   al,al
  407196:	jo     0x4071b1
  407198:	outs   dx,BYTE PTR ds:[esi]
  407199:	mov    bl,0x7c
  40719b:	mov    edi,0xba0de29e
  4071a0:	or     ebp,DWORD PTR [edi]
  4071a2:	in     al,dx
  4071a3:	fsubr  DWORD PTR [ebx+0x77ccfef6]
  4071a9:	jmp    0xb17b5989
  4071ae:	lods   eax,DWORD PTR ds:[esi]
  4071af:	add    eax,0x33a5a9bb
  4071b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071b5:	inc    edx
  4071b6:	shl    bl,0xf3
  4071b9:	xchg   ecx,eax
  4071ba:	xchg   edi,eax
  4071bb:	(bad)  
  4071bd:	add    ah,ah
  4071bf:	popa   
  4071c0:	push   eax
  4071c1:	dec    esp
  4071c2:	push   0xffffffb5
  4071c4:	div    BYTE PTR [ecx-0x21f4a763]
  4071ca:	fwait
  4071cb:	pop    ebx
  4071cc:	and    edx,eax
  4071ce:	fdivr  QWORD PTR [edx-0x6f]
  4071d1:	shl    ch,cl
  4071d3:	in     eax,0xb3
  4071d5:	xchg   esi,eax
  4071d6:	stos   DWORD PTR es:[edi],eax
  4071d7:	sub    ecx,DWORD PTR [ecx+0x3aead6bd]
  4071dd:	shl    DWORD PTR [esi+0x374065a0],cl
  4071e3:	mov    WORD PTR [edi+0x1bf0bcde],gs
  4071e9:	test   BYTE PTR [esp+edx*8],cl
  4071ec:	aad    0x6b
  4071ee:	arpl   WORD PTR [eax],bx
  4071f0:	inc    edx
  4071f1:	mov    edi,0x937522d5
  4071f6:	aad    0x66
  4071f8:	pop    ds
  4071f9:	push   es
  4071fa:	xor    esp,edx
  4071fc:	mov    ecx,gs
  4071fe:	test   DWORD PTR ds:0x217fbe77,eax
  407204:	mov    ebx,0x49807404
  407209:	call   0xcdf0a9fe
  40720e:	jmp    0x407264
  407210:	retf   
  407211:	or     dh,BYTE PTR [edi-0x1b]
  407214:	in     eax,dx
  407215:	test   bl,cl
  407217:	mov    ebp,0xd586507a
  40721c:	(bad)  
  40721d:	loope  0x40728a
  40721f:	es push di
  407222:	dec    esi
  407223:	pop    ebx
  407224:	lds    eax,FWORD PTR ds:0xe8e1fe28
  40722a:	sub    eax,0x985faedc
  40722f:	arpl   bx,bp
  407231:	test   al,0x8
  407233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407234:	or     bl,BYTE PTR [edi+ebx*2+0x5e]
  407238:	mov    ds:0xc040a25f,eax
  40723d:	jecxz  0x407219
  40723f:	xchg   edi,eax
  407240:	push   es
  407241:	pop    esp
  407242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407243:	mov    cl,0x6f
  407245:	and    ecx,ebx
  407247:	imul   edi,ebx,0xffffffd7
  40724a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40724b:	xchg   edx,eax
  40724c:	or     BYTE PTR [ecx-0xccda1b2],dl
  407252:	jno    0x407211
  407254:	dec    edi
  407255:	mov    ecx,0xac92271d
  40725a:	jne    0x407231
  40725c:	or     BYTE PTR [esi],bh
  40725e:	(bad)  
  407260:	xchg   DWORD PTR [eax+0x688c857e],esi
  407266:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  407268:	cmp    BYTE PTR [ecx-0x6d],dl
  40726b:	out    0x3c,eax
  40726d:	xor    BYTE PTR [esi],cl
  40726f:	jo     0x4071fe
  407271:	(bad)  
  407272:	xlat   BYTE PTR ds:[ebx]
  407273:	adc    ecx,ebx
  407275:	sub    ch,BYTE PTR [edx-0x3ec9c850]
  40727b:	int    0xfb
  40727d:	mov    BYTE PTR [ebx-0x46],0xb8
  407281:	shl    DWORD PTR gs:[esi-0x5],cl
  407285:	xacquire xchg BYTE PTR [eax],ah
  407288:	mov    eax,0xee534978
  40728d:	mov    DWORD PTR [edi+0x557f8601],edi
  407293:	jmp    0xb5c87605
  407298:	cmp    BYTE PTR [edx],0xb8
  40729b:	push   eax
  40729c:	cmc    
  40729d:	ror    BYTE PTR [eax-0x2b05fe84],1
  4072a3:	call   0xe2ee2b8f
  4072a8:	(bad)  
  4072a9:	fdivr  DWORD PTR [esi-0x718d74e8]
  4072af:	mov    ecx,0xa6b35e74
  4072b4:	dec    ebp
  4072b5:	(bad)  
  4072b6:	(bad)  
  4072b7:	push   ds
  4072b8:	imul   ecx,DWORD PTR [esi],0xffffffd0
  4072bb:	es lock fs fucomp st(2)
  4072c0:	scas   eax,DWORD PTR es:[edi]
  4072c1:	push   0xdd5607c8
  4072c6:	or     ah,BYTE PTR [ecx-0x49f8c59b]
  4072cc:	ja     0x4072e7
  4072ce:	rol    DWORD PTR [edx+0x75f97fdf],0xac
  4072d5:	and    eax,0xad47084c
  4072da:	lahf   
  4072db:	ja     0x407322
  4072dd:	pushf  
  4072de:	pop    ebx
  4072df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072e0:	and    DWORD PTR [ebx],esi
  4072e2:	int3   
  4072e3:	outs   dx,DWORD PTR ds:[esi]
  4072e4:	js     0x407334
  4072e6:	imul   esi,ecx,0x5b928bd9
  4072ec:	jae    0x407353
  4072ee:	out    dx,al
  4072ef:	add    eax,DWORD PTR cs:[ecx-0x6f]
  4072f3:	test   eax,0x10551375
  4072f8:	sti    
  4072f9:	dec    ebx
  4072fa:	sub    DWORD PTR [esi+0x49],ecx
  4072fd:	call   DWORD PTR [esi-0x21897e9a]
  407303:	pop    edi
  407304:	fmul   st(5),st
  407306:	mov    esi,0x6d5daaa7
  40730b:	test   ax,0xc2c5
  40730f:	cmp    bl,ch
  407311:	iret   
  407312:	mov    al,ds:0xb50d8a17
  407317:	imul   si,WORD PTR [ebx],0x4a
  40731b:	into   
  40731c:	cmp    eax,DWORD PTR [ecx-0x53]
  40731f:	js     0x407327
  407321:	jns    0x407342
  407323:	icebp  
  407324:	fist   WORD PTR [edi]
  407326:	dec    esi
  407327:	sub    eax,0x9cf7248b
  40732c:	pop    es
  40732d:	xor    ch,dl
  40732f:	sbb    cl,0xc2
  407332:	dec    ebp
  407333:	add    esi,esi
  407335:	sub    al,0xf0
  407337:	aas    
  407338:	or     al,0xcb
  40733a:	ds push ebx
  40733c:	out    dx,eax
  40733d:	aad    0x7c
  40733f:	pop    esp
  407340:	test   al,0x95
  407342:	sbb    esi,ecx
  407344:	lods   al,BYTE PTR ds:[esi]
  407345:	jecxz  0x40730d
  407347:	xchg   DWORD PTR [edi],edi
  407349:	add    DWORD PTR [eax-0x6f],0xe5d5bd1d
  407350:	push   0x68e7e386
  407355:	das    
  407356:	ret    
  407357:	jo     0x40738c
  407359:	mov    ah,0xf1
  40735b:	cmp    al,0xad
  40735d:	test   DWORD PTR [ebp-0x120e2fe5],edi
  407363:	popa   
  407364:	cmp    al,0x1f
  407366:	xor    DWORD PTR [eax],edx
  407368:	sub    eax,0xb6917d59
  40736d:	jge    0x40730b
  40736f:	pop    ds
  407370:	ror    DWORD PTR [esi-0x356f317b],1
  407376:	ins    BYTE PTR es:[edi],dx
  407377:	sbb    eax,0x20f921f5
  40737c:	mov    ecx,0x68d254bc
  407381:	dec    eax
  407382:	adc    ecx,DWORD PTR [edx-0x79c4e678]
  407388:	cwde   
  407389:	out    0xd,eax
  40738b:	and    eax,0xd743fffb
  407390:	add    edx,DWORD PTR [ecx]
  407392:	mov    dx,0x7176
  407396:	mov    dh,0x9a
  407398:	(bad)  [esi-0x5d]
  40739b:	pop    es
  40739c:	ins    BYTE PTR es:[edi],dx
  40739d:	inc    ecx
  40739e:	sahf   
  40739f:	pop    ecx
  4073a0:	or     eax,0xc9dde1c5
  4073a5:	outs   dx,DWORD PTR ds:[esi]
  4073a6:	dec    ecx
  4073a7:	mov    eax,ds:0x10b1a605
  4073ac:	aam    0x5
  4073ae:	adc    ebp,DWORD PTR cs:[edx-0x4e]
  4073b2:	push   ebx
  4073b3:	leave  
  4073b4:	btr    DWORD PTR [eax],ebp
  4073b7:	sbb    eax,0xb99680b
  4073bc:	xor    cl,ch
  4073be:	rcr    BYTE PTR [ecx-0x392432df],1
  4073c4:	jmp    0x5915:0xe2013cb7
  4073cb:	dec    ecx
  4073cc:	loop   0x4073da
  4073ce:	or     eax,0x92e62d08
  4073d3:	jbe    0x407442
  4073d5:	add    eax,0x714e6406
  4073da:	inc    esp
  4073db:	imul   eax,ecx,0xac52c959
  4073e1:	or     dl,BYTE PTR [eax]
  4073e3:	add    BYTE PTR [ecx],cl
  4073e5:	ds loop 0x40738f
  4073e8:	add    eax,0xc549efda
  4073ed:	jns    0x4073d1
  4073ef:	scas   al,BYTE PTR es:[edi]
  4073f0:	pushf  
  4073f1:	cmp    al,0xe5
  4073f3:	mov    bh,0x9a
  4073f5:	mov    cl,0x36
  4073f7:	push   ss
  4073f8:	(bad)  
  4073f9:	retf   0x7937
  4073fc:	push   eax
  4073fd:	popa   
  4073fe:	add    ebx,DWORD PTR [edx-0x6c]
  407401:	call   FWORD PTR [esi-0x4f4fd7f7]
  407407:	ja     0x407413
  407409:	mov    esi,DWORD PTR [ecx+0x31154e0c]
  40740f:	mov    al,0xee
  407411:	mov    dh,0x9f
  407413:	int    0x95
  407415:	jecxz  0x40745d
  407417:	inc    ebx
  407418:	int3   
  407419:	inc    edx
  40741a:	outs   dx,BYTE PTR ds:[esi]
  40741b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40741c:	aad    0x47
  40741e:	das    
  40741f:	repz cld 
  407421:	mov    ah,0x9c
  407423:	sbb    al,0xf3
  407425:	test   eax,0xe7360de8
  40742a:	jp     0x40748c
  40742c:	fld    TBYTE PTR [ecx+0x6a]
  40742f:	rol    DWORD PTR [edi+ecx*1],1
  407432:	test   al,0x44
  407434:	add    al,0x69
  407436:	xor    eax,0xb43e0502
  40743b:	ret    
  40743c:	xchg   BYTE PTR [esp+edx*4],al
  40743f:	(bad)  
  407440:	call   0x65b9:0xc164e935
  407447:	(bad)  
  407448:	nop
  407449:	or     ecx,eax
  40744b:	mov    dl,0x66
  40744d:	mov    ah,0xe
  40744f:	add    BYTE PTR [ebp-0x1],dh
  407452:	mov    esp,0x4ca1d31d
  407457:	and    eax,0xe18b350d
  40745c:	(bad)  
  40745d:	cld    
  40745e:	into   
  40745f:	jmp    0x407448
  407461:	push   ebp
  407462:	sub    DWORD PTR ds:0xb43e7f52,esp
  407468:	xlat   BYTE PTR ds:[ebx]
  407469:	ret    0xf932
  40746c:	repz mov edi,0x2d654414
  407472:	mov    esp,0x20ac35ad
  407477:	pop    ebx
  407478:	xchg   edi,eax
  407479:	jge    0x40745d
  40747b:	pop    edx
  40747c:	push   esp
  40747d:	retf   0x78fa
  407480:	test   BYTE PTR [eax+eiz*1-0x61],al
  407484:	inc    eax
  407485:	out    dx,al
  407486:	int3   
  407487:	in     al,dx
  407488:	cmp    ebx,ebp
  40748a:	dec    esi
  40748b:	pop    edi
  40748c:	xor    DWORD PTR [eax],edi
  40748e:	int3   
  40748f:	sbb    BYTE PTR [ecx+ebx*8],bl
  407492:	pop    esi
  407493:	pop    ds
  407494:	mov    eax,0xe4b446e0
  407499:	ss pop ebp
  40749b:	sbb    BYTE PTR [ebx],bh
  40749d:	sahf   
  40749e:	jne    0x40744d
  4074a0:	or     BYTE PTR [edx-0x6ab96806],dh
  4074a6:	and    DWORD PTR [ecx-0x54],ebx
  4074a9:	inc    ebp
  4074aa:	shr    bh,1
  4074ac:	add    ah,BYTE PTR [eax+0x79a9811b]
  4074b2:	test   eax,0xeede41a7
  4074b7:	mov    ah,0x3e
  4074b9:	rcl    BYTE PTR [ebx-0x14],0xb0
  4074bd:	sub    ch,BYTE PTR [edx-0xa64f0a0]
  4074c3:	cmc    
  4074c4:	dec    ebx
  4074c5:	jle    0x407525
  4074c7:	sub    ebp,DWORD PTR [esi+0x1a84a497]
  4074cd:	popa   
  4074ce:	pop    ebx
  4074cf:	stos   BYTE PTR es:[edi],al
  4074d0:	cld    
  4074d1:	jle    0x40751c
  4074d3:	jmp    0x4074ee
  4074d5:	in     eax,0xa
  4074d7:	scas   al,BYTE PTR es:[edi]
  4074d8:	add    al,0xa9
  4074da:	pop    esp
  4074db:	out    dx,eax
  4074dc:	push   ebx
  4074dd:	jmp    0x40747a
  4074df:	push   cs
  4074e0:	data16 jge 0x407508
  4074e3:	mov    DWORD PTR [ebp+0x4b],edx
  4074e6:	jle    0x4074bb
  4074e8:	jne    0x407566
  4074ea:	shl    edi,cl
  4074ec:	cdq    
  4074ed:	pop    esp
  4074ee:	xchg   edi,eax
  4074ef:	outs   dx,BYTE PTR ds:[esi]
  4074f0:	push   es
  4074f1:	mov    ch,0x31
  4074f3:	in     eax,dx
  4074f4:	push   ebp
  4074f5:	xchg   edi,eax
  4074f6:	ins    BYTE PTR es:[edi],dx
  4074f7:	mov    DWORD PTR [esi+0x60],0x7091d34a
  4074fe:	fistp  WORD PTR [ebx+0x43]
  407501:	pop    edi
  407502:	xor    edi,0xe218faf
  407508:	dec    eax
  407509:	mov    ch,0xb5
  40750b:	inc    ebp
  40750c:	rol    DWORD PTR [esp+ebp*8],0xc2
  407510:	loop   0x4074de
  407512:	pop    ecx
  407513:	xor    eax,0x514eb11f
  407518:	xor    al,0x3
  40751a:	fwait
  40751b:	in     al,dx
  40751c:	mov    eax,ds:0x7ea005da
  407521:	push   ebx
  407522:	pop    edx
  407523:	sbb    eax,0x1c137233
  407528:	cdq    
  407529:	int3   
  40752a:	daa    
  40752b:	dec    esi
  40752c:	pop    esi
  40752d:	aas    
  40752e:	cmp    BYTE PTR [edx],0xc3
  407531:	jns    0x4074f6
  407533:	es inc esi
  407535:	add    al,0xbe
  407537:	xchg   edi,eax
  407538:	sbb    ah,BYTE PTR [eax+0x170e2f36]
  40753e:	xchg   DWORD PTR [edx-0x12],esi
  407541:	or     eax,0xdda00920
  407546:	outs   dx,BYTE PTR ds:[esi]
  407547:	mov    ebp,DWORD PTR [ebx]
  407549:	(bad)  
  40754a:	push   0xe54de202
  40754f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407550:	push   ss
  407551:	adc    DWORD PTR ds:0xfaeb7d98,0xc8ae67e
  40755b:	mov    al,ds:0x57c6e5f5
  407560:	gs and edx,eax
  407563:	add    eax,0xce9a49ba
  407568:	or     bl,BYTE PTR [ecx-0x50]
  40756b:	shl    DWORD PTR [eax+ecx*4],cl
  40756e:	aad    0x91
  407570:	in     al,0x21
  407572:	jns    0x4074fb
  407574:	gs out 0xc2,al
  407577:	ins    BYTE PTR es:[edi],dx
  407578:	push   ebx
  407579:	add    al,BYTE PTR [edi-0x1]
  40757c:	mov    ebx,0xcdee1d8f
  407581:	repnz aaa 
  407583:	scas   al,BYTE PTR es:[edi]
  407584:	cmc    
  407585:	lahf   
  407586:	ror    BYTE PTR [eax-0x32],1
  407589:	rcl    DWORD PTR [eax+0xb],0xf4
  40758d:	cmp    edi,DWORD PTR [ebx]
  40758f:	xchg   ecx,eax
  407590:	mov    ch,BYTE PTR [edx]
  407592:	das    
  407593:	add    al,0xf9
  407595:	jl     0x40753d
  407597:	mov    al,0x16
  407599:	rol    DWORD PTR [edi-0x2b0ac3ca],1
  40759f:	jle    0x4075c8
  4075a1:	daa    
  4075a2:	ss test eax,0x44c4dc0f
  4075a8:	mov    dh,0xb8
  4075aa:	addr16 (bad) 
  4075ac:	fwait
  4075ad:	sub    eax,0x8ecc9db7
  4075b2:	cmp    esp,eax
  4075b4:	stos   BYTE PTR es:[edi],al
  4075b5:	in     eax,0xc8
  4075b7:	fisttp DWORD PTR [edx]
  4075b9:	shl    BYTE PTR ds:0x8c5998d7,1
  4075bf:	cs dec esi
  4075c1:	and    BYTE PTR [edx-0x30],bl
  4075c4:	push   esi
  4075c5:	push   0x167f72f5
  4075ca:	out    0xaa,eax
  4075cc:	pop    eax
  4075cd:	add    ebp,ebp
  4075cf:	push   0x235a815d
  4075d4:	pusha  
  4075d5:	or     BYTE PTR [edx],ch
  4075d7:	push   ebp
  4075d8:	arpl   WORD PTR [esi],bx
  4075da:	cmp    eax,0x66c948e0
  4075df:	addr16 pop ebx
  4075e1:	push   ecx
  4075e2:	add    eax,0xa759b6c0
  4075e7:	ss popf 
  4075e9:	xor    DWORD PTR [edx],eax
  4075eb:	sbb    esi,DWORD PTR [esi-0x2bae1d5b]
  4075f1:	into   
  4075f2:	mov    ebx,0xa8168b6a
  4075f7:	neg    BYTE PTR [esi-0x24899f3e]
  4075fd:	xor    bh,ah
  4075ff:	popa   
  407600:	cmp    dh,BYTE PTR [ebx+0x79]
  407603:	ja     0x40766b
  407605:	push   ebp
  407606:	push   DWORD PTR [edx-0x17]
  407609:	ja     0x407592
  40760b:	retf   
  40760c:	dec    edx
  40760d:	pop    esp
  40760e:	sub    al,0x70
  407610:	sbb    BYTE PTR [ebp+0xd646529],dh
  407616:	fisub  DWORD PTR [eax]
  407618:	sbb    eax,ebp
  40761a:	retf   
  40761b:	iret   
  40761c:	jns    0x40764a
  40761e:	leave  
  40761f:	or     ah,al
  407621:	xchg   edx,eax
  407622:	(bad)  
  407623:	clc    
  407624:	outs   dx,DWORD PTR ds:[esi]
  407625:	pop    ebx
  407626:	lahf   
  407627:	sub    BYTE PTR [esi+0x2],0x80
  40762b:	mov    ecx,0x700978b8
  407630:	pusha  
  407631:	jmp    0x4076a7
  407633:	push   0x86e0e60b
  407638:	mov    ecx,0xf26dc9aa
  40763d:	push   eax
  40763e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40763f:	or     ebx,esp
  407641:	pop    ebx
  407642:	mov    ds:0x53f2b01f,eax
  407647:	paddusw mm4,QWORD PTR [edi-0x18]
  40764b:	dec    edx
  40764c:	cmp    ebx,edx
  40764e:	adc    eax,esp
  407650:	clc    
  407651:	xor    ecx,edi
  407653:	sub    BYTE PTR [ebx-0x36472087],bh
  407659:	cld    
  40765a:	pop    ecx
  40765b:	pop    ebp
  40765c:	fidivr WORD PTR [ebp+0x6e]
  40765f:	into   
  407660:	mov    ebp,0x754ddb13
  407665:	xchg   DWORD PTR [esi-0x78c9029b],esi
  40766b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40766c:	inc    edi
  40766d:	or     ebp,edx
  40766f:	jge    0x407604
  407671:	stos   BYTE PTR es:[edi],al
  407672:	outs   dx,DWORD PTR ds:[esi]
  407673:	fild   DWORD PTR [edx-0x141b1ccd]
  407679:	sub    ebx,0x20
  40767c:	sahf   
  40767d:	nop
  40767e:	loopne 0x4076a1
  407680:	cmp    al,0xd4
  407682:	call   FWORD PTR [esi+0xd]
  407685:	push   cs
  407686:	rol    DWORD PTR [esi],cl
  407688:	aaa    
  407689:	inc    esp
  40768a:	fimul  DWORD PTR [eax-0x31]
  40768d:	xchg   esi,eax
  40768e:	lods   eax,DWORD PTR ds:[esi]
  40768f:	add    eax,0x2a801811
  407694:	jbe    0x407641
  407696:	dec    eax
  407697:	shl    DWORD PTR ds:0xefd62911,1
  40769d:	adc    DWORD PTR [eax-0x65],esp
  4076a0:	not    BYTE PTR [ebx+0x1e442ee5]
  4076a6:	stc    
  4076a7:	jns    0x40762e
  4076a9:	mov    al,ds:0x593a7962
  4076ae:	rcl    DWORD PTR [esi],1
  4076b0:	sar    DWORD PTR [esi],0xb2
  4076b3:	add    ebp,DWORD PTR [esi]
  4076b5:	inc    ebx
  4076b6:	push   ds
  4076b7:	mov    al,0xa7
  4076b9:	movzx  edx,BYTE PTR [ecx]
  4076bc:	or     BYTE PTR [ecx+eax*8+0x320f58be],ch
  4076c3:	sbb    ebx,DWORD PTR [esp+ebp*2]
  4076c6:	pusha  
  4076c7:	pop    ds
  4076c8:	xor    al,0x36
  4076ca:	test   BYTE PTR [eax-0x15],bl
  4076cd:	(bad)  
  4076ce:	xlat   BYTE PTR ds:[ebx]
  4076cf:	mov    ah,BYTE PTR [ebx+0x1f]
  4076d2:	pop    ecx
  4076d3:	mov    WORD PTR ds:0xa5cb7234,ss
  4076d9:	loopne 0x40770a
  4076db:	adc    ebp,DWORD PTR [ebp-0x51d1e071]
  4076e1:	in     eax,0x4c
  4076e3:	sub    ch,cl
  4076e5:	scas   al,BYTE PTR es:[edi]
  4076e6:	push   0xaffb4652
  4076eb:	pusha  
  4076ec:	sub    al,0x54
  4076ee:	cli    
  4076ef:	jecxz  0x407760
  4076f1:	repz adc eax,0x863969f5
  4076f7:	or     ah,BYTE PTR [ecx*4+0x5582064a]
  4076fe:	ret    
  4076ff:	hlt    
  407700:	outs   dx,BYTE PTR ds:[esi]
  407701:	mov    cl,0xa0
  407703:	push   ss
  407704:	int    0xaa
  407706:	outs   dx,BYTE PTR ds:[esi]
  407707:	scas   al,BYTE PTR es:[edi]
  407708:	out    dx,al
  407709:	scas   al,BYTE PTR es:[edi]
  40770a:	fidiv  WORD PTR [esp+ebp*1]
  40770d:	std    
  40770e:	dec    esi
  40770f:	test   al,0xe2
  407711:	mov    ah,0xbb
  407713:	mov    eax,ds:0xa9dd38ce
  407718:	jle    0x4076a3
  40771a:	stos   DWORD PTR es:[edi],eax
  40771b:	mov    ebp,0x515c9f8
  407720:	aam    0x99
  407722:	leave  
  407723:	and    bl,BYTE PTR [edx]
  407725:	or     DWORD PTR [ebp-0x5a],ebx
  407728:	bnd ret 
  40772a:	push   eax
  40772b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40772c:	fucomp st(2)
  40772e:	jmp    0x5b54bda
  407733:	gs sahf 
  407735:	sbb    eax,0x73b99d18
  40773a:	xchg   edx,eax
  40773b:	sub    BYTE PTR [ecx+edx*2-0x17],ch
  40773f:	punpckldq mm7,mm2
  407742:	jle    0x4077ae
  407744:	dec    edx
  407745:	imul   esi,DWORD PTR [ecx+0x5ea15e85],0x6f231f13
  40774f:	enter  0x1866,0x53
  407753:	in     al,0xbf
  407755:	stos   DWORD PTR es:[edi],eax
  407756:	mov    eax,ds:0x775832fb
  40775b:	setp   dl
  40775e:	sbb    ah,BYTE PTR [edx+esi*2-0x2c]
  407762:	jp     0x4077af
  407764:	(bad)  
  407765:	mov    DWORD PTR [ecx],ebp
  407767:	mov    ds:0xb942ea0,eax
  40776c:	adc    dl,al
  40776e:	xchg   edx,eax
  40776f:	mov    ebp,0x10b8a3ba
  407774:	inc    ebx
  407775:	lods   al,BYTE PTR ds:[esi]
  407776:	aam    0x66
  407778:	sub    DWORD PTR [esp+eiz*8-0x13],ebp
  40777c:	inc    esp
  40777d:	mov    esi,0xa47f68fe
  407782:	pop    ecx
  407783:	stos   DWORD PTR es:[edi],eax
  407784:	cwde   
  407785:	cmp    bh,BYTE PTR [esi+0x33]
  407788:	xchg   esi,eax
  407789:	in     al,dx
  40778a:	dec    eax
  40778b:	ret    0x9ddf
  40778e:	adc    ah,BYTE PTR [ebx-0xa32f822]
  407794:	retf   
  407795:	mov    bh,0x96
  407797:	or     BYTE PTR [edx-0x7a3bd5d5],al
  40779d:	sub    esp,DWORD PTR [ebp+0x3fa553c6]
  4077a3:	shr    DWORD PTR [eax],cl
  4077a5:	or     esi,DWORD PTR [esi-0x47]
  4077a8:	xchg   ebx,eax
  4077a9:	or     al,0xec
  4077ab:	xor    esi,DWORD PTR ds:0xe4d0c1e9
  4077b1:	push   edx
  4077b2:	(bad)  ds:0xfbc15575
  4077b8:	imul   edx,DWORD PTR [eax+0x173b66fa],0xffffffd6
  4077bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077c0:	inc    edx
  4077c1:	sbb    DWORD PTR [edi],edx
  4077c3:	push   eax
  4077c4:	xchg   ebx,eax
  4077c5:	pop    esp
  4077c6:	mov    al,ds:0xda28312b
  4077cb:	or     al,0x9
  4077cd:	jbe    0x4077bf
  4077cf:	mov    edx,0xb60f2195
  4077d4:	pop    ebx
  4077d5:	fwait
  4077d6:	out    dx,eax
  4077d7:	xor    edi,DWORD PTR [edx+0x2f]
  4077da:	test   al,0xed
  4077dc:	pop    ss
  4077dd:	xchg   DWORD PTR [ebx-0x1d079ac7],ecx
  4077e3:	mov    esp,0x83f3e0ba
  4077e8:	dec    ebx
  4077e9:	scas   eax,DWORD PTR es:[edi]
  4077ea:	xor    al,0xf3
  4077ec:	test   eax,0x2f2f672c
  4077f1:	jecxz  0x407868
  4077f3:	add    dl,BYTE PTR [eax-0x4e5b1ec7]
  4077f9:	or     BYTE PTR [edi+0x8849002],dh
  4077ff:	and    ah,BYTE PTR [ebx]
  407801:	sahf   
  407802:	call   0xa2495147
  407807:	int3   
  407808:	inc    esp
  407809:	fisub  DWORD PTR [ecx]
  40780b:	cmp    al,0x85
  40780d:	cld    
  40780e:	xchg   ecx,eax
  40780f:	in     eax,0x2e
  407811:	(bad)  
  407812:	jmp    0x2ab85ceb
  407817:	mul    BYTE PTR [edx+0x61]
  40781a:	aaa    
  40781b:	sti    
  40781c:	std    
  40781d:	cmp    DWORD PTR [edx],edx
  40781f:	mov    dl,0x4e
  407821:	aaa    
  407822:	inc    esi
  407823:	jne    0x4077e4
  407825:	cwde   
  407826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407827:	int    0x2
  407829:	fadd   QWORD PTR [eax+ebp*1-0x427a3b6c]
  407830:	fdivr  QWORD PTR es:[edi+0x3f00f7df]
  407837:	dec    ebp
  407838:	ins    DWORD PTR es:[edi],dx
  407839:	int3   
  40783a:	mov    esp,0xbb59f806
  40783f:	push   cs
  407840:	sbb    al,0x6c
  407842:	pop    edx
  407843:	js     0x70c03aec
  407849:	dec    edi
  40784a:	mov    ecx,0x39ed2fa8
  40784f:	lock imul edi,DWORD PTR [ecx],0xb23f3e04
  407856:	(bad)  
  407857:	loopne 0x40784e
  407859:	cmc    
  40785a:	sti    
  40785b:	jle    0x40783e
  40785d:	adc    al,0xce
  40785f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407860:	cli    
  407861:	shl    BYTE PTR [ecx-0x8],1
  407864:	adc    eax,0x967d90c8
  407869:	gs aam 0x55
  40786c:	ret    0xa98d
  40786f:	outs   dx,BYTE PTR ds:[esi]
  407870:	call   0xea14e916
  407875:	mov    al,ds:0x27eac2c6
  40787a:	inc    edx
  40787b:	dec    ebp
  40787c:	(bad)  
  40787d:	daa    
  40787e:	inc    ebp
  40787f:	ret    0xf685
  407882:	sbb    edx,ebx
  407884:	push   edi
  407885:	mov    bh,0xd6
  407887:	icebp  
  407888:	(bad)
  40788d:	ss repz test eax,0xd8f38b54
  407894:	lds    eax,FWORD PTR [ecx+0x23]
  407897:	and    al,0x5d
  407899:	pop    es
  40789a:	cli    
  40789b:	mov    eax,ds:0xd81a4afa
  4078a0:	fist   WORD PTR [ebx+edi*1-0x3a121c7a]
  4078a7:	and    DWORD PTR [ecx-0x26],ecx
  4078aa:	sar    ebx,0xf6
  4078ad:	jmp    0xd0d8b74f
  4078b2:	scas   al,BYTE PTR es:[edi]
  4078b3:	mov    eax,0xc6f29439
  4078b8:	dec    eax
  4078b9:	popf   
  4078ba:	ficom  DWORD PTR [ebp+0x3a3eeed]
  4078c0:	xor    ebp,ecx
  4078c2:	mov    bh,0xf2
  4078c4:	sub    DWORD PTR [edi],edx
  4078c6:	sub    al,0xeb
  4078c8:	mov    ah,0x23
  4078ca:	jns    0x407914
  4078cc:	fcmovnu st,st(4)
  4078ce:	hlt    
  4078cf:	sbb    ebx,DWORD PTR [esi+0x74e5fbe9]
  4078d5:	dec    eax
  4078d6:	or     bl,BYTE PTR [esi-0x5ea23b9f]
  4078dc:	imul   ecx,DWORD PTR [ebx+0x3a],0xfffffff1
  4078e0:	bound  esp,QWORD PTR [edi]
  4078e2:	push   ecx
  4078e3:	cmp    eax,0xf7ce067b
  4078e8:	jl     0x40795a
  4078ea:	(bad)  
  4078eb:	leave  
  4078ec:	cmp    eax,0x59022484
  4078f1:	add    esp,DWORD PTR [ecx-0x23]
  4078f4:	jl     0x407913
  4078f6:	cli    
  4078f7:	popa   
  4078f8:	bound  eax,QWORD PTR [ebx+esi*8-0x215fc28f]
  4078ff:	ja     0x407929
  407901:	sbb    eax,0xa608a9dc
  407906:	ret    0x593c
  407909:	sub    al,0xed
  40790b:	mov    al,0xd0
  40790d:	sbb    dl,BYTE PTR [ecx-0x18]
  407910:	pop    edx
  407911:	adc    eax,0x53b0f085
  407916:	pop    edx
  407917:	adc    DWORD PTR [eax-0x1a],edx
  40791a:	outs   dx,BYTE PTR ds:[esi]
  40791b:	mov    bh,0x18
  40791d:	xor    DWORD PTR [edi-0x37],eax
  407920:	loopne 0x4078f7
  407922:	dec    ebp
  407923:	mov    esi,0x262abb83
  407928:	pop    esi
  407929:	push   ds
  40792a:	mov    ch,0x8e
  40792c:	inc    esi
  40792d:	out    dx,eax
  40792e:	xchg   ebp,eax
  40792f:	push   ebp
  407930:	and    eax,0x2d78581d
  407935:	ds loop 0x4078f1
  407938:	cli    
  407939:	cs or  al,0x48
  40793c:	pop    edx
  40793d:	inc    ecx
  40793e:	xor    ebx,DWORD PTR [ecx-0x3c]
  407941:	les    edx,FWORD PTR [eax]
  407943:	into   
  407944:	fiadd  WORD PTR [ebx+0x57]
  407947:	std    
  407948:	pushf  
  407949:	dec    edx
  40794a:	pop    ss
  40794b:	ja     0x40792b
  40794d:	out    dx,al
  40794e:	jbe    0x407924
  407950:	enter  0x4fea,0xb4
  407954:	and    al,0x6
  407956:	mov    ah,0x3d
  407958:	ds push ebx
  40795a:	sub    BYTE PTR [ecx],cl
  40795c:	lahf   
  40795d:	shr    DWORD PTR [ecx+0xb],0x4
  407961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407962:	mov    bh,0xbd
  407964:	cwde   
  407965:	xor    eax,0x80baf6ef
  40796a:	mov    bh,0x45
  40796c:	cmp    BYTE PTR [eax-0x4a],ah
  40796f:	fimul  WORD PTR [edx+0x73294833]
  407975:	and    BYTE PTR [ebx+0x67],ah
  407978:	rol    ah,cl
  40797a:	jnp    0x407925
  40797c:	push   es
  40797d:	js     0x407916
  40797f:	mov    eax,ds:0x826e1ec3
  407984:	add    DWORD PTR [edx-0x47],esi
  407987:	xlat   BYTE PTR ss:[ebx]
  407989:	push   ss
  40798a:	call   0x3c90:0xde796a1a
  407991:	add    DWORD PTR [edx-0x5a3eeaa0],0x7e
  407998:	pop    ebx
  407999:	add    ebp,DWORD PTR [edx]
  40799b:	shl    ecx,cl
  40799d:	mov    BYTE PTR [esi+0x5671cf68],bl
  4079a3:	jecxz  0x407978
  4079a5:	rol    BYTE PTR [edx-0x68],0x51
  4079a9:	mov    ds:0xaf35b3c4,al
  4079ae:	dec    ebp
  4079af:	or     eax,0xfa853470
  4079b4:	cmp    eax,DWORD PTR [ecx-0x2b79bd05]
  4079ba:	fiadd  DWORD PTR [esi-0x3b93e628]
  4079c0:	xor    bh,dl
  4079c2:	not    DWORD PTR [ebp+0x67]
  4079c5:	int3   
  4079c6:	mov    ebx,DWORD PTR [esi+0x12]
  4079c9:	lea    esp,[edi]
  4079cb:	mov    edx,0xca705c3c
  4079d0:	iret   
  4079d1:	wbinvd 
  4079d3:	es (bad) 
  4079d5:	cs fcmovnu st,st(1)
  4079d8:	inc    esi
  4079d9:	xchg   ebp,eax
  4079da:	cmp    BYTE PTR [edi],dl
  4079dc:	out    dx,al
  4079dd:	add    eax,0x5dec5c65
  4079e2:	sar    BYTE PTR [ebx+0x11340f8a],cl
  4079e8:	retf   
  4079e9:	test   al,0x5d
  4079eb:	pop    ds
  4079ec:	adc    DWORD PTR [esp+ecx*2+0x29a0e2cd],edx
  4079f3:	or     cl,dl
  4079f5:	xchg   BYTE PTR [ecx+0x595caa40],ah
  4079fb:	jbe    0x4079ca
  4079fd:	mov    BYTE PTR [ecx+0x42],cl
  407a00:	xlat   BYTE PTR ds:[ebx]
  407a01:	push   ss
  407a02:	pop    ds
  407a03:	dec    ecx
  407a04:	jo     0x4079ad
  407a06:	jg     0x407a71
  407a08:	lock or al,0xbb
  407a0b:	mov    edx,0xc65e247
  407a10:	mov    al,0xaf
  407a12:	pop    es
  407a13:	sub    DWORD PTR [edi],esi
  407a15:	add    cl,BYTE PTR [edx+ebx*2-0x74c2debe]
  407a1c:	pusha  
  407a1d:	xchg   DWORD PTR [edi+0x383ee380],eax
  407a23:	mov    al,0x37
  407a25:	mov    al,ds:0x7ebe3e89
  407a2a:	nop
  407a2b:	bound  esp,QWORD PTR [edi+eax*8+0x30340e0b]
  407a32:	mov    ah,0x5f
  407a34:	mov    al,ds:0xa70d603
  407a39:	push   edi
  407a3a:	inc    edi
  407a3b:	jb     0x4079cb
  407a3d:	int3   
  407a3e:	mov    bh,0x6c
  407a40:	mov    ch,0xed
  407a42:	das    
  407a43:	sbb    eax,0xc7e0f6f
  407a48:	mov    esp,0xef995235
  407a4d:	nop    DWORD PTR [eax]
  407a50:	xor    DWORD PTR [ebx+0x79],esp
  407a53:	mov    ebx,0x275d3031
  407a58:	sub    cl,BYTE PTR [esi+ebp*1+0x71]
  407a5c:	outs   dx,DWORD PTR ds:[esi]
  407a5d:	cmp    eax,0x81e42f69
  407a62:	mov    dl,BYTE PTR [edi]
  407a64:	mov    ecx,0xf2b94a86
  407a69:	imul   esp,DWORD PTR [esi],0xfffffff8
  407a6c:	mov    cl,0xec
  407a6e:	shl    BYTE PTR [esi+0x3a975e6],1
  407a74:	gs std 
  407a76:	mov    fs:0x71bbb26a,eax
  407a7c:	cmp    al,0x5a
  407a7e:	retf   0x34d5
  407a81:	(bad)  
  407a83:	adc    dh,BYTE PTR [ecx+0x37]
  407a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a87:	mov    cl,0xa3
  407a89:	cmp    DWORD PTR [edx-0x45ba5346],0x5e
  407a90:	adc    DWORD PTR [edx+0x2e],esp
  407a93:	sbb    ebx,edx
  407a95:	outs   dx,DWORD PTR ds:[esi]
  407a96:	call   0x54ae:0x8cd45ddb
  407a9d:	add    eax,0x3c67c05f
  407aa2:	dec    ecx
  407aa3:	cli    
  407aa4:	push   cs
  407aa5:	pusha  
  407aa6:	inc    al
  407aa8:	imul   esp,DWORD PTR ds:0xf957c85c,0xfffffff0
  407aaf:	pushf  
  407ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ab1:	jecxz  0x407b2b
  407ab3:	cld    
  407ab4:	sbb    al,0x3c
  407ab6:	and    eax,DWORD PTR [esi+eiz*1+0x7399e72b]
  407abd:	push   ds
  407abe:	scas   al,BYTE PTR es:[edi]
  407abf:	sub    BYTE PTR [edx],bh
  407ac1:	daa    
  407ac2:	stos   BYTE PTR es:[edi],al
  407ac3:	xchg   cx,ax
  407ac5:	mov    edx,0x32778c90
  407aca:	xchg   ebx,eax
  407acb:	(bad)  
  407acd:	inc    esi
  407ace:	pushf  
  407acf:	test   al,0x4a
  407ad1:	imul   ebx,DWORD PTR [eax],0xcc16e44a
  407ad7:	or     esi,0xffffffb3
  407ada:	js     0x407b32
  407adc:	sub    ah,BYTE PTR [ecx+0xf5a24dc]
  407ae2:	ja     0x407ab0
  407ae4:	adc    BYTE PTR ds:0x3b9bff28,0x24
  407aeb:	clc    
  407aec:	inc    edx
  407aed:	and    al,BYTE PTR [ecx-0x40]
  407af0:	and    al,0x84
  407af2:	mov    dl,0xa
  407af4:	scas   eax,DWORD PTR es:[edi]
  407af5:	xor    bh,BYTE PTR [eax+0x43]
  407af8:	retf   
  407af9:	fsubrp st(7),st
  407afb:	arpl   WORD PTR [ecx+0x376eec92],bx
  407b01:	sub    cl,BYTE PTR [ebp-0xa]
  407b04:	lea    esi,ds:0x3d99a2fa
  407b0a:	clc    
  407b0b:	mov    bl,0xe4
  407b0d:	mov    ebx,?
  407b0f:	mov    al,0xbe
  407b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b12:	adc    ch,dh
  407b14:	popa   
  407b15:	dec    edx
  407b16:	add    BYTE PTR [eax+0x2794e68],0xab
  407b1d:	mov    ecx,0xa0a44649
  407b22:	hlt    
  407b23:	imul   edi,DWORD PTR [ebp+0x6f],0x58
  407b27:	inc    edi
  407b28:	sbb    eax,0xdf3665d
  407b2d:	int    0x8e
  407b2f:	arpl   WORD PTR [ebx+esi*1],si
  407b32:	retf   0x9845
  407b35:	dec    edi
  407b36:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  407b38:	xchg   edx,eax
  407b39:	dec    ecx
  407b3a:	xor    edi,ebx
  407b3c:	int    0x84
  407b3e:	aam    0xe3
  407b40:	lahf   
  407b41:	ret    0xd21e
  407b44:	or     eax,0x65bae680
  407b49:	mov    ds:0xbc35ec72,eax
  407b4e:	mov    DWORD PTR [ebp-0x44],edx
  407b51:	(bad)  
  407b53:	and    al,0xff
  407b55:	cwde   
  407b56:	mov    dh,BYTE PTR [esi+eax*8+0x39d325eb]
  407b5d:	jne    0x407bbe
  407b5f:	push   edx
  407b60:	xchg   esp,eax
  407b61:	xor    ch,BYTE PTR ds:0x7f21949d
  407b67:	es xchg ebp,eax
  407b69:	push   es
  407b6a:	xor    dh,BYTE PTR [edi-0x2f9c081]
  407b70:	cmp    al,0x77
  407b72:	jbe    0x407bd8
  407b74:	sub    eax,DWORD PTR [edx-0x6e]
  407b77:	ss aas 
  407b79:	jmp    0x82bf:0xeda90236
  407b80:	inc    esi
  407b81:	push   edx
  407b82:	xor    BYTE PTR [esi],bh
  407b84:	inc    ecx
  407b85:	push   eax
  407b86:	gs cs out 0xb1,al
  407b8a:	inc    edx
  407b8b:	pushf  
  407b8c:	mov    edx,0xc8da9ac6
  407b91:	pop    ss
  407b92:	pop    esp
  407b93:	pop    esi
  407b94:	movq   QWORD PTR ds:0x345bc7a0,mm7
  407b9b:	push   cs
  407b9c:	pop    esp
  407b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b9e:	popa   
  407b9f:	and    ecx,eax
  407ba1:	iret   
  407ba2:	mov    fs,WORD PTR [ebx+0x275977d9]
  407ba8:	ins    BYTE PTR es:[edi],dx
  407ba9:	xor    eax,0xffffffce
  407bac:	dec    ebp
  407bad:	and    eax,0x107031ea
  407bb2:	int3   
  407bb3:	or     DWORD PTR [ebp-0x61],ecx
  407bb6:	loopne 0x407b7e
  407bb8:	stos   BYTE PTR es:[edi],al
  407bb9:	cdq    
  407bba:	(bad)  
  407bbb:	lods   eax,DWORD PTR ds:[esi]
  407bbd:	sti    
  407bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bbf:	or     eax,0x2924d4c8
  407bc4:	lock enter 0xdb1c,0x13
  407bc9:	out    0xaf,eax
  407bcb:	lods   al,BYTE PTR ds:[esi]
  407bcc:	push   edi
  407bcd:	mov    bl,0xf7
  407bcf:	jmp    0x407c08
  407bd1:	mov    bl,0x7f
  407bd3:	pusha  
  407bd4:	xchg   esi,eax
  407bd5:	repnz repnz mov bh,0xb4
  407bd9:	push   eax
  407bda:	and    DWORD PTR [edi+ecx*1+0x18],0xffffff83
  407bdf:	mov    al,ds:0xebf544dd
  407be4:	xor    ch,bh
  407be6:	out    0x59,eax
  407be8:	xchg   DWORD PTR [ecx+edx*4],esi
  407beb:	bswap  ebx
  407bed:	scas   eax,DWORD PTR es:[edi]
  407bee:	pop    DWORD PTR [edi-0x79]
  407bf1:	mov    al,ds:0xcc6b9588
  407bf6:	aam    0x2b
  407bf8:	dec    esi
  407bf9:	inc    esi
  407bfa:	xchg   ecx,eax
  407bfb:	mov    edx,ebx
  407bfd:	cmp    bh,al
  407bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c00:	push   ebp
  407c01:	jle    0x407c57
  407c03:	rcl    DWORD PTR [edx],1
  407c05:	push   ebx
  407c06:	ret    0x70a1
  407c09:	addr16 gs into 
  407c0c:	mov    ds:0x3a4e647b,eax
  407c11:	fwait
  407c12:	mov    ds:0x1c05ce44,al
  407c17:	or     al,BYTE PTR [esi-0x51]
  407c1a:	out    0xd1,al
  407c1c:	xor    edi,ebx
  407c1e:	jge    0x407bb3
  407c20:	out    0xdf,eax
  407c22:	jge    0x407bff
  407c24:	not    eax
  407c26:	and    BYTE PTR [edi+0x642181fc],0x2
  407c2d:	cmp    ebx,DWORD PTR [ecx*2+0x39670fbd]
  407c34:	int    0xec
  407c36:	mov    edx,0x889bf804
  407c3b:	ret    
  407c3c:	push   esi
  407c3d:	xchg   edi,eax
  407c3e:	rol    DWORD PTR [eax+0x79],cl
  407c41:	mov    gs,WORD PTR [ebx-0x12]
  407c44:	mov    edx,0xaf5d574
  407c49:	test   BYTE PTR [ebp+edi*2+0x1e],cl
  407c4d:	and    al,0xcc
  407c4f:	adc    ebx,edi
  407c51:	gs push ss
  407c53:	aam    0xc2
  407c55:	or     BYTE PTR ds:0x3ab58711,0x31
  407c5c:	mov    cl,0x87
  407c5e:	fisub  WORD PTR [ecx]
  407c60:	ret    
  407c61:	mov    dh,BYTE PTR [eax+0x5e]
  407c64:	jbe    0x407ca8
  407c66:	retf   
  407c67:	loop   0x407c6f
  407c69:	push   0x79748870
  407c6e:	or     ecx,esi
  407c70:	xchg   al,bh
  407c72:	pop    ss
  407c73:	or     al,0x55
  407c75:	aad    0x8d
  407c77:	(bad)  ds:0x13adca8a
  407c7d:	(bad)  
  407c7e:	cli    
  407c7f:	lahf   
  407c80:	ins    DWORD PTR es:[edi],dx
  407c81:	fst    QWORD PTR [ecx+edx*1]
  407c84:	adc    esi,0x59
  407c87:	int    0xff
  407c89:	aam    0xf6
  407c8b:	test   eax,0x65e00922
  407c90:	in     al,dx
  407c91:	call   0xb0bda501
  407c96:	fdivr  DWORD PTR [eax-0x6d]
  407c99:	retf   0xaa97
  407c9c:	jmp    0x407c51
  407c9e:	xchg   edx,eax
  407c9f:	add    eax,0xb6226a46
  407ca4:	lods   al,BYTE PTR ds:[esi]
  407ca5:	add    DWORD PTR fs:[ebx-0x68f55d1d],esp
  407cac:	leave  
  407cad:	pop    eax
  407cae:	and    al,0x2c
  407cb0:	mov    WORD PTR fs:[esi-0x6d],?
  407cb4:	dec    edx
  407cb5:	out    dx,al
  407cb6:	test   ebp,ebx
  407cb8:	jb     0x407ca7
  407cba:	cmp    ebx,ebp
  407cbc:	popf   
  407cbd:	(bad)  
  407cbf:	in     al,0x55
  407cc1:	jo     0x407d03
  407cc3:	dec    esi
  407cc4:	dec    ebx
  407cc5:	mov    ds:0x56456e71,al
  407cca:	xchg   ebp,eax
  407ccb:	sbb    BYTE PTR [ebx],0x2b
  407cce:	adc    ecx,DWORD PTR [esp+ebx*8]
  407cd1:	das    
  407cd2:	sub    esi,DWORD PTR [ebx+0x1048d4b9]
  407cd8:	pop    eax
  407cd9:	stc    
  407cda:	lds    ebx,FWORD PTR [ecx]
  407cdc:	ja     0x407cf1
  407cde:	pop    edi
  407cdf:	push   cs
  407ce0:	jle    0x407d50
  407ce2:	ret    0x5a4b
  407ce5:	fdiv   DWORD PTR [edi-0x64]
  407ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ce9:	cmp    bl,BYTE PTR [esi+0x31]
  407cec:	(bad)  
  407ced:	pop    ebp
  407cee:	enter  0x76e0,0x1c
  407cf2:	fsub   DWORD PTR [ebx]
  407cf4:	sbb    ecx,DWORD PTR [ebx+ebp*2]
  407cf7:	mov    edi,0xc8024bde
  407cfc:	lea    ecx,ds:0xbba39c98
  407d02:	mov    al,ds:0x20b98c52
  407d07:	pop    ecx
  407d08:	ins    DWORD PTR es:[edi],dx
  407d09:	push   esp
  407d0a:	inc    eax
  407d0b:	test   DWORD PTR [ebp-0x247bcf67],ebx
  407d11:	out    dx,al
  407d12:	shl    DWORD PTR cs:[edx+eax*1],0x1f
  407d17:	mov    ecx,DWORD PTR [esi]
  407d19:	push   ebx
  407d1a:	jecxz  0x407cd7
  407d1c:	clc    
  407d1d:	dec    esp
  407d1f:	inc    edx
  407d20:	sub    BYTE PTR [esi+0x3de0be7c],dh
  407d26:	and    DWORD PTR [edi+0x2d],0x3a
  407d2a:	pushf  
  407d2b:	aas    
  407d2c:	and    cl,BYTE PTR [esi+0x60c5343]
  407d32:	in     eax,dx
  407d33:	dec    ecx
  407d34:	jnp    0x407d10
  407d36:	(bad)  
  407d37:	aam    0x4e
  407d39:	inc    esp
  407d3a:	add    DWORD PTR [eax+0x3a014a4a],0xf0ed29b0
  407d44:	and    cl,0xcf
  407d47:	push   ebp
  407d48:	add    DWORD PTR ds:0xb50e282b,edx
  407d4e:	cli    
  407d4f:	push   ss
  407d50:	push   edx
  407d51:	xor    DWORD PTR [esi],edx
  407d53:	outs   dx,BYTE PTR ds:[esi]
  407d54:	(bad)  
  407d55:	push   esi
  407d56:	jbe    0x407d66
  407d58:	imul   ebx,esi,0x5839b34d
  407d5e:	not    DWORD PTR cs:[esi+ebp*2-0x1e]
  407d63:	test   ebp,esp
  407d65:	pushf  
  407d66:	loopne 0x407db1
  407d68:	mov    WORD PTR [ebx+0x43],fs
  407d6b:	adc    DWORD PTR ds:0x6fd7f9d,eax
  407d71:	hlt    
  407d72:	mov    bh,0x4a
  407d74:	sbb    ebx,ebx
  407d76:	sub    dl,BYTE PTR [eax-0x4edfe146]
  407d7c:	push   es
  407d7d:	pushf  
  407d7e:	fldenv [edi+0x40]
  407d81:	and    ch,BYTE PTR [ebx]
  407d83:	mov    edi,0xc178ea48
  407d88:	xchg   si,dx
  407d8b:	add    bl,BYTE PTR [esi]
  407d8d:	jp     0x407e0a
  407d8f:	(bad)
  407d93:	mov    edx,0xcd7f7f22
  407d98:	push   ebp
  407d99:	test   eax,0x5b355dd6
  407d9e:	sub    BYTE PTR [edi+0x8],bh
  407da1:	dec    esp
  407da2:	bound  ebp,QWORD PTR [edx+0xfedaabc]
  407da8:	push   es
  407da9:	mov    edx,0x31612db2
  407dae:	aam    0x8a
  407db0:	sbb    DWORD PTR [edx],0xdc50c33c
  407db6:	out    0xab,eax
  407db8:	xchg   ecx,eax
  407db9:	cmp    cl,dl
  407dbb:	add    bl,ch
  407dbd:	push   0xffffffe8
  407dbf:	xchg   ebp,eax
  407dc0:	dec    esp
  407dc1:	std    
  407dc2:	sti    
  407dc3:	mov    esp,0x96e333e5
  407dc8:	std    
  407dc9:	jb     0x407db1
  407dcb:	jge    0x407d83
  407dcd:	xchg   esi,eax
  407dce:	popa   
  407dcf:	in     al,dx
  407dd0:	adc    edi,esp
  407dd2:	fdivr  QWORD PTR [ebx+0x8]
  407dd5:	mov    es,eax
  407dd7:	loopne 0x407dbe
  407dd9:	fnsave [eax-0x7f32ae72]
  407ddf:	sub    eax,0x13f7c687
  407de4:	sub    eax,0x5119c180
  407de9:	mov    DWORD PTR [edi],eax
  407deb:	outs   dx,DWORD PTR ds:[esi]
  407dec:	xor    BYTE PTR [esi-0x30a7eced],dh
  407df2:	cmp    esp,DWORD PTR [ecx+edi*4]
  407df5:	mov    al,ds:0x5b948858
  407dfa:	popa   
  407dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dfc:	dec    edi
  407dfd:	jbe    0x407dcd
  407dff:	cwde   
  407e00:	fstp   DWORD PTR [eiz*2+0xc8e64fc]
  407e07:	imul   esi,DWORD PTR [eax-0x49],0x47349bed
  407e0e:	jmp    0x2e8d8e53
  407e13:	ret    
  407e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e15:	push   ss
  407e16:	fwait
  407e17:	in     al,dx
  407e18:	fldenv [esi+ebp*2+0x2a]
  407e1c:	sahf   
  407e1d:	dec    esp
  407e1e:	dec    eax
  407e1f:	add    al,0xea
  407e21:	or     edx,DWORD PTR [ebx]
  407e23:	pop    es
  407e24:	inc    esp
  407e25:	mov    bl,0xb4
  407e28:	stc    
  407e29:	and    al,0xad
  407e2b:	clc    
  407e2c:	ror    esi,1
  407e2e:	push   cs
  407e2f:	into   
  407e30:	popa   
  407e31:	sti    
  407e32:	inc    edx
  407e33:	loopne 0x407e9b
  407e35:	mov    ecx,0xaf8c677f
  407e3a:	scas   al,BYTE PTR es:[edi]
  407e3b:	sbb    al,0x32
  407e3d:	sub    al,0xc8
  407e3f:	bound  edi,QWORD PTR [edi]
  407e41:	mov    edx,edx
  407e43:	(bad)  [ebx+0x4b]
  407e46:	mov    ch,0xfe
  407e48:	dec    edi
  407e49:	dec    ebp
  407e4a:	stc    
  407e4b:	rcr    DWORD PTR [edx],cl
  407e4d:	js     0x407e73
  407e4f:	pusha  
  407e50:	xlat   BYTE PTR ds:[ebx]
  407e51:	pop    ds
  407e52:	call   0xc593:0x5639d4b1
  407e59:	pop    edi
  407e5a:	bound  ebx,QWORD PTR [edi-0x65c8a417]
  407e60:	inc    esi
  407e61:	das    
  407e62:	das    
  407e63:	aas    
  407e64:	mov    ds:0xc3a111b1,al
  407e69:	mov    bl,0x1e
  407e6b:	mov    bl,0xef
  407e6d:	cmp    DWORD PTR [eax],eax
  407e6f:	jmp    0x3c61a5de
  407e74:	dec    ebx
  407e75:	fst    st(0)
  407e77:	lock mov al,ds:0x35bb6560
  407e7d:	mov    esp,0xb9dd45d0
  407e82:	or     BYTE PTR [edi+0x78],dh
  407e85:	stc    
  407e86:	push   ebp
  407e87:	dec    ebx
  407e88:	add    DWORD PTR [eax-0x5133b784],esi
  407e8e:	fwait
  407e8f:	ror    DWORD PTR ds:0x1da3f18,1
  407e95:	(bad)
  407e99:	fcmovnb st,st(0)
  407e9b:	cdq    
  407e9c:	fwait
  407e9d:	aaa    
  407e9e:	and    DWORD PTR [ebx+0xf],eax
  407ea1:	dec    edx
  407ea2:	mov    edx,DWORD PTR [ecx]
  407ea4:	cmp    DWORD PTR [esi+ebp*4-0x5fd41644],esp
  407eab:	add    DWORD PTR [edi+0x7ea7cb3b],esi
  407eb1:	mov    al,0x6c
  407eb3:	sahf   
  407eb4:	aas    
  407eb5:	arpl   WORD PTR [edx+ebp*8],cx
  407eb8:	adc    bl,cl
  407eba:	adc    bh,0xd7
  407ebd:	int3   
  407ebe:	sub    al,0x49
  407ec0:	daa    
  407ec1:	jg     0x407f21
  407ec3:	fucomi st,st(7)
  407ec5:	jg     0x407eda
  407ec7:	fidivr DWORD PTR [edi+ecx*1-0x1a9bf057]
  407ece:	mov    bl,bh
  407ed0:	in     al,dx
  407ed1:	xor    al,0x67
  407ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ed4:	outs   dx,DWORD PTR ds:[esi]
  407ed5:	mov    ds:0x167123b5,al
  407eda:	pop    esp
  407edb:	push   ecx
  407edc:	add    BYTE PTR [ecx-0x4865f751],dh
  407ee2:	sahf   
  407ee3:	mov    edx,DWORD PTR [edi]
  407ee5:	out    dx,eax
  407ee6:	xchg   edx,eax
  407ee7:	xchg   ebp,eax
  407ee8:	ds dec ecx
  407eea:	and    esp,edx
  407eec:	ds push ss
  407eee:	mov    esp,DWORD PTR [ecx+0x2d8fc532]
  407ef4:	cli    
  407ef5:	scas   eax,DWORD PTR es:[edi]
  407ef6:	fucomi st,st(4)
  407ef8:	sbb    eax,0x33fc74d4
  407efd:	enter  0xe807,0xac
  407f01:	arpl   bp,si
  407f03:	cmp    al,cl
  407f05:	and    esi,esp
  407f07:	jp     0x407f2c
  407f09:	sbb    esp,DWORD PTR [esi-0x80]
  407f0c:	jmp    0xe9e8:0x508f230f
  407f13:	int    0x78
  407f15:	push   ds
  407f16:	cmp    al,0x92
  407f18:	call   FWORD PTR [eax-0x66]
  407f1b:	iret   
  407f1c:	add    eax,esi
  407f1e:	adc    DWORD PTR [esi-0xcd908d9],ebx
  407f24:	lahf   
  407f25:	fistp  WORD PTR [edi]
  407f27:	jmp    0x407fa8
  407f29:	mov    al,BYTE PTR [esi]
  407f2b:	xchg   esi,eax
  407f2c:	sbb    dh,ah
  407f2e:	add    esi,DWORD PTR [eax-0x4]
  407f31:	xchg   edx,eax
  407f32:	bound  ecx,QWORD PTR [ebx]
  407f34:	clc    
  407f35:	push   cs
  407f36:	mov    edx,0x9caefb46
  407f3b:	outs   dx,DWORD PTR ds:[esi]
  407f3c:	mov    bh,0x67
  407f3e:	xchg   BYTE PTR [edx-0x21b09ecd],ah
  407f44:	xor    DWORD PTR [edi+0x650f6729],eax
  407f4a:	pop    eax
  407f4b:	mov    al,0x91
  407f4d:	inc    esp
  407f4e:	(bad)  
  407f4f:	cmp    DWORD PTR [edi-0x17d2d33f],edi
  407f55:	inc    ecx
  407f56:	xor    al,0x4d
  407f58:	and    eax,0x431ec97b
  407f5d:	adc    BYTE PTR [ecx],ah
  407f5f:	jge    0x407fa7
  407f61:	out    0xc9,al
  407f63:	mov    WORD PTR [ecx-0x6c511dee],?
  407f69:	shr    DWORD PTR [edi+0x69b54789],cl
  407f6f:	jmp    0x407f04
  407f71:	cli    
  407f72:	xchg   edi,eax
  407f73:	push   esi
  407f74:	pusha  
  407f75:	mov    edi,0x8f2ad449
  407f7a:	push   ebx
  407f7b:	xchg   BYTE PTR [esi+0x5b],al
  407f7e:	and    al,BYTE PTR [edx-0x13c10dfa]
  407f84:	shl    bh,cl
  407f86:	and    eax,0x69c94c0e
  407f8b:	jp     0x407f8b
  407f8d:	std    
  407f8e:	fs in  eax,dx
  407f90:	or     DWORD PTR [eax-0x3ab4b142],eax
  407f96:	sahf   
  407f97:	out    0xf6,eax
  407f99:	or     BYTE PTR [edx],ah
  407f9b:	mov    ebp,0xc2d43bc0
  407fa0:	push   0x5d542630
  407fa5:	cmp    ah,BYTE PTR [edi+0x4d]
  407fa8:	xor    BYTE PTR [edi],al
  407faa:	push   ebp
  407fab:	inc    ebx
  407fac:	xchg   esi,eax
  407fad:	add    bh,BYTE PTR [esi]
  407faf:	push   edi
  407fb0:	stos   BYTE PTR es:[edi],al
  407fb1:	fist   WORD PTR [esi+eiz*1]
  407fb4:	inc    esi
  407fb5:	(bad)  
  407fb6:	dec    ecx
  407fb7:	jbe    0x408023
  407fb9:	mov    bh,0xb8
  407fbb:	in     al,0x2f
  407fbd:	fisttp DWORD PTR [ebx+0x665aa196]
  407fc3:	outs   dx,BYTE PTR ds:[esi]
  407fc4:	inc    esp
  407fc5:	fwait
  407fc6:	inc    ebp
  407fc7:	push   edi
  407fc8:	imul   esp,ecx,0xffffffbc
  407fcb:	lods   eax,DWORD PTR ds:[esi]
  407fcc:	and    al,0x5f
  407fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fcf:	out    0xef,eax
  407fd1:	call   0x1399:0x73023c2f
  407fd8:	popa   
  407fd9:	inc    esp
  407fda:	es clc 
  407fdc:	sti    
  407fdd:	fbld   TBYTE PTR [edx]
  407fdf:	cmp    BYTE PTR [edi-0x7584fb4a],0xa0
  407fe6:	jmp    0xb1cc:0x4ad73588
  407fed:	aad    0xa9
  407fef:	popf   
  407ff0:	mul    DWORD PTR [edi+0x20]
  407ff3:	jnp    0x407f76
  407ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ff6:	lock add al,0xbb
  407ff9:	dec    ebp
  407ffa:	mov    ecx,0xaa542e8b
  407fff:	xlat   BYTE PTR ds:[ebx]
  408000:	(bad)
  408003:	lods   eax,DWORD PTR ds:[esi]
  408004:	push   eax
  408005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408006:	xchg   ecx,eax
  408007:	inc    ebp
  408008:	xor    cl,BYTE PTR [edx+eiz*2]
  40800b:	jp     0x407fd3
  40800d:	lods   al,BYTE PTR ds:[esi]
  40800e:	fmul   QWORD PTR ds:0xce6619dc
  408014:	push   ecx
  408015:	or     ebx,DWORD PTR [eax+eax*8+0x32]
  408019:	dec    edx
  40801a:	push   esp
  40801b:	enter  0x1463,0x54
  40801f:	xchg   esi,eax
  408020:	mov    ds:0xe3bad4ff,al
  408025:	btr    DWORD PTR [ecx+0x66],edx
  408029:	push   esp
  40802a:	push   edx
  40802b:	iret   
  40802c:	shl    DWORD PTR ds:0x85d92716,cl
  408032:	(bad)  
  408033:	sti    
  408034:	nop
  408035:	lods   al,BYTE PTR ds:[esi]
  408036:	fsubr  DWORD PTR [esi+eiz*4]
  408039:	adc    ecx,DWORD PTR [ecx-0x6c]
  40803c:	fidivr DWORD PTR [edi-0x1f]
  40803f:	jp     0x40803c
  408041:	jae    0x408019
  408043:	add    ebp,DWORD PTR fs:[edx+0x4f]
  408047:	or     dl,dh
  408049:	and    eax,0xba9f7a7a
  40804e:	sub    DWORD PTR [edi+0x5cbadc18],ebp
  408054:	aas    
  408055:	jle    0x408047
  408057:	push   cs
  408058:	xchg   ebp,eax
  408059:	sbb    BYTE PTR [ebp-0x3296fe15],dh
  40805f:	js     0x4080b2
  408061:	shl    BYTE PTR [esi+0x2f],1
  408064:	inc    ebp
  408065:	sub    DWORD PTR ss:[edx+ebp*4-0x58f96e2b],esp
  40806d:	jno    0x408056
  40806f:	xor    eax,0x693e5110
  408074:	mov    eax,fs:0x4e3729da
  40807a:	(bad)  
  40807b:	fcomip st,st(6)
  40807d:	repz push esp
  40807f:	push   es
  408080:	retf   0x8f40
  408083:	push   ds
  408084:	sbb    eax,0x692188e6
  408089:	pop    ss
  40808a:	mov    ds:0x9f87dac5,al
  40808f:	inc    ecx
  408090:	mov    gs,ebp
  408092:	(bad)  
  408093:	addr16 push es
  408095:	hlt    
  408096:	pop    ebx
  408097:	mov    ah,0xf2
  408099:	in     eax,dx
  40809a:	add    DWORD PTR [eax-0x2],0x5d56c4
  4080a1:	test   eax,0xaba17b79
  4080a6:	leave  
  4080a7:	std    
  4080a8:	lahf   
  4080a9:	call   0xd879:0xa3fef2a
  4080b0:	icebp  
  4080b1:	push   0xf70d2178
  4080b6:	adc    DWORD PTR [edi],edi
  4080b8:	mov    cl,0x50
  4080ba:	push   cs
  4080bb:	mov    edi,0x7fa553e3
  4080c0:	test   BYTE PTR [ecx-0x42],ah
  4080c3:	and    BYTE PTR [esi+0x7f1c87ef],dl
  4080c9:	cmc    
  4080ca:	fucomip st,st(6)
  4080cc:	scas   al,BYTE PTR es:[edi]
  4080cd:	or     cl,BYTE PTR [esi]
  4080cf:	and    eax,0xf4302135
  4080d4:	mov    edx,0xcab68914
  4080d9:	adc    BYTE PTR [edx+eax*4],bl
  4080dc:	or     BYTE PTR [ecx-0x16],ah
  4080df:	pushf  
  4080e0:	lods   eax,DWORD PTR ds:[esi]
  4080e1:	mov    dh,0x89
  4080e3:	cmc    
  4080e4:	outs   dx,DWORD PTR ds:[esi]
  4080e5:	imul   esp,DWORD PTR [esi-0x61c9f684],0xffffffd6
  4080ec:	lods   al,BYTE PTR ds:[esi]
  4080ed:	pusha  
  4080ee:	arpl   WORD PTR [edi+0x3345c1a1],bx
  4080f4:	(bad)  
  4080f5:	jns    0x40816d
  4080f7:	mov    BYTE PTR [ecx],ah
  4080f9:	xor    eax,0x4ebc174a
  4080fe:	out    0xf5,eax
  408100:	mov    ds:0xfe4ea7a3,al
  408105:	pop    es
  408106:	push   edx
  408107:	repnz icebp 
  408109:	add    DWORD PTR [edi+0x30],ebx
  40810c:	sub    esp,ebx
  40810e:	push   edi
  40810f:	loopne 0x4080d6
  408111:	aad    0xb0
  408113:	and    BYTE PTR [edi],0x48
  408116:	push   ebp
  408117:	inc    edi
  408118:	cmp    esp,ebx
  40811a:	push   ds
  40811b:	fisub  WORD PTR [ebp+0x619aaf60]
  408121:	pop    esi
  408122:	inc    edi
  408123:	cmp    al,0x10
  408125:	inc    ecx
  408126:	adc    BYTE PTR [eax-0x624b34c8],bh
  40812c:	jmp    0xcfb6:0xf6da
  408132:	inc    edx
  408133:	pop    es
  408134:	push   es
  408135:	scas   al,BYTE PTR es:[edi]
  408136:	cmp    esi,DWORD PTR [edx-0xa]
  408139:	or     al,0x7d
  40813b:	ds sahf 
  40813d:	stos   BYTE PTR es:[edi],al
  40813e:	pop    ss
  40813f:	add    eax,0x53810d8d
  408144:	xchg   ecx,eax
  408145:	inc    ebx
  408146:	mov    ebx,0x750ebe8c
  40814b:	cmp    cl,BYTE PTR [edi-0x39]
  40814e:	sub    al,0xc7
  408150:	aaa    
  408151:	popa   
  408152:	daa    
  408153:	adc    eax,0xed52b5cb
  408158:	mov    edx,0x9614987c
  40815d:	sbb    DWORD PTR [ebx],ebx
  40815f:	sub    DWORD PTR [ecx-0x6a5b8470],0x2c
  408166:	lahf   
  408167:	lock pusha 
  408169:	ins    BYTE PTR es:[edi],dx
  40816a:	xor    BYTE PTR [edx],dh
  40816c:	int    0x77
  40816e:	les    edx,FWORD PTR [eax-0x76]
  408171:	and    al,0xd0
  408173:	dec    edi
  408174:	xchg   BYTE PTR [ebx-0x10],bl
  408177:	and    al,0xf3
  408179:	xor    al,dh
  40817b:	outs   dx,DWORD PTR ds:[esi]
  40817c:	loope  0x408180
  40817e:	sub    al,BYTE PTR [eax-0xcc3ca3]
  408184:	je     0x4081f8
  408186:	out    dx,eax
  408187:	or     al,0x49
  408189:	jecxz  0x408191
  40818b:	and    eax,0x113d79b
  408190:	loope  0x408207
  408192:	call   0x4aa8ac55
  408197:	ret    
  408198:	fidivr DWORD PTR [ebp-0x17]
  40819b:	jnp    0x40815a
  40819d:	call   0x32367f44
  4081a2:	out    dx,al
  4081a3:	pop    es
  4081a4:	dec    esi
  4081a5:	loop   0x4081b7
  4081a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081a8:	(bad)  
  4081a9:	and    eax,0x1f0eb263
  4081ae:	or     bh,ch
  4081b0:	inc    ebp
  4081b1:	mov    bl,BYTE PTR [edi+edx*4+0x3f]
  4081b5:	xor    DWORD PTR ds:0x7939572d,esi
  4081bb:	jp     0x40822f
  4081bd:	sbb    ah,bh
  4081bf:	fmul   st(1),st
  4081c1:	repnz scas al,BYTE PTR es:[edi]
  4081c3:	imul   edi,DWORD PTR [edx],0x3ea61260
  4081c9:	loopne 0x408241
  4081cb:	sub    eax,0x19fd3e2
  4081d0:	jno    0x40817a
  4081d2:	pop    edi
  4081d3:	imul   ebx,DWORD PTR [eax],0xa6d89b50
  4081d9:	fst    DWORD PTR [ebx]
  4081db:	cwde   
  4081dc:	adc    DWORD PTR [edi],ebx
  4081de:	jge    0x408247
  4081e0:	jb     0x408166
  4081e2:	mov    DWORD PTR [ebp-0x5156bcda],eax
  4081e8:	mov    DWORD PTR [esi+0x13],edx
  4081eb:	arpl   WORD PTR [eax+eiz*4],di
  4081ee:	cmc    
  4081ef:	inc    edi
  4081f0:	xchg   edx,eax
  4081f1:	push   ds
  4081f2:	xor    eax,0xc10b7c04
  4081f7:	stos   BYTE PTR es:[edi],al
  4081f8:	pop    esi
  4081f9:	add    al,0xc2
  4081fb:	out    0xa5,eax
  4081fd:	aas    
  4081fe:	lahf   
  4081ff:	(bad)  
  408200:	jl     0x40822f
  408202:	mov    edx,0xc764cddf
  408207:	ror    BYTE PTR [esp+eax*2+0x6aae526f],cl
  40820e:	fsubr  QWORD PTR [esp+edx*1-0xa]
  408212:	in     al,dx
  408213:	and    dl,ch
  408215:	les    esi,FWORD PTR [edx+0x4b9a9c26]
  40821b:	rcr    DWORD PTR [edi],cl
  40821d:	and    edx,DWORD PTR [edx]
  40821f:	pop    edi
  408220:	lods   al,BYTE PTR ds:[esi]
  408221:	inc    eax
  408222:	adc    BYTE PTR [edi+0x33],ah
  408225:	mov    ds:0x68d39e98,al
  40822a:	xor    al,0xfd
  40822c:	fist   DWORD PTR [eax]
  40822e:	data16 (bad) 
  408230:	jnp    0x40824e
  408232:	ror    BYTE PTR [ebp-0x4],1
  408235:	jae    0x408228
  408237:	gs pusha 
  408239:	adc    eax,0xbcc983ae
  40823e:	stos   DWORD PTR es:[edi],eax
  40823f:	push   ecx
  408240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408241:	aaa    
  408242:	xor    BYTE PTR [ebp+0x1],cl
  408245:	pop    ecx
  408246:	in     eax,0x1
  408248:	out    0x78,al
  40824a:	not    DWORD PTR [edi+edx*8+0x73cd0b17]
  408251:	mov    al,0xaf
  408253:	not    BYTE PTR [ebx-0x42]
  408256:	scas   al,BYTE PTR es:[edi]
  408257:	mov    ds:0xb2b38c44,eax
  40825c:	fwait
  40825d:	sbb    al,0xc8
  40825f:	xor    DWORD PTR [esi],0x2b
  408262:	iret   
  408263:	sbb    BYTE PTR [edi-0x64],ch
  408266:	or     ebp,DWORD PTR [eax+0x1dda7b30]
  40826c:	adc    ebx,esi
  40826e:	and    DWORD PTR ds:0x99fd0b14,esi
  408274:	and    al,0x90
  408276:	dec    eax
  408277:	out    0x3e,eax
  408279:	dec    ebx
  40827a:	lea    edx,[ecx-0x47]
  40827d:	xor    DWORD PTR [esi],edx
  40827f:	ja     0x4082f9
  408281:	scas   eax,DWORD PTR es:[edi]
  408282:	xor    dl,dl
  408284:	inc    esp
  408285:	aad    0xd4
  408287:	mov    WORD PTR [esi-0x6d],gs
  40828a:	mov    ah,0x2e
  40828c:	cmp    esi,edi
  40828e:	or     eax,0x35bdc76c
  408293:	icebp  
  408294:	lock ja 0x4082c7
  408297:	data16 rol BYTE PTR [edi+0x16],cl
  40829b:	xor    DWORD PTR [ebp+eiz*1+0x5272a20b],edi
  4082a2:	mov    ebx,edi
  4082a4:	xor    esi,esp
  4082a6:	jle    0x4082bf
  4082a8:	jns    0x4082c6
  4082aa:	mul    DWORD PTR [eax]
  4082ac:	(bad)  
  4082ad:	(bad)  
  4082ae:	or     ah,BYTE PTR [edx+0x1e3a715d]
  4082b4:	popa   
  4082b5:	push   edi
  4082b6:	mov    esp,0xdea78dcf
  4082bb:	pop    DWORD PTR [ecx-0x32338cc2]
  4082c1:	or     al,0x29
  4082c3:	adc    DWORD PTR ss:[ebp-0x260cd26e],0x307a4c30
  4082ce:	mov    ebx,0x418480ba
  4082d3:	stos   DWORD PTR es:[edi],eax
  4082d4:	fnstenv [esi+esi*4+0xbae21d8]
  4082db:	push   edi
  4082dc:	scas   eax,DWORD PTR es:[edi]
  4082dd:	stc    
  4082de:	fnsave [edx+0x292885be]
  4082e4:	or     esp,eax
  4082e6:	outs   dx,DWORD PTR ds:[esi]
  4082e7:	loopne 0x4082c8
  4082e9:	sub    DWORD PTR [edx+edi*2],ebx
  4082ec:	sub    BYTE PTR [ecx+0x6d],bl
  4082ef:	gs push esi
  4082f1:	mov    cl,ah
  4082f3:	call   0xc5d29c0d
  4082f8:	or     al,BYTE PTR ds:0x944e58d4
  4082fe:	mov    esp,0xe4f1b057
  408303:	hlt    
  408304:	dec    esi
  408305:	jmp    0x40833a
  408307:	add    esi,DWORD PTR [ecx]
  408309:	ss xchg esi,eax
  40830b:	dec    esi
  40830c:	call   DWORD PTR [esi+0x5dba99ed]
  408312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408313:	mov    dl,0xbe
  408315:	sub    DWORD PTR [ebx-0x2acd3ca7],esp
  40831b:	ja     0x40838a
  40831d:	int3   
  40831e:	cmp    eax,DWORD PTR [esi+0x10879384]
  408324:	and    ecx,DWORD PTR [eax]
  408326:	fldenv [ecx+0x6f]
  408329:	hlt    
  40832a:	add    ecx,DWORD PTR [ecx-0x58]
  40832d:	and    esp,esp
  40832f:	jne    0x2f6a20f2
  408335:	ror    dh,cl
  408337:	stc    
  408338:	xchg   ebp,eax
  408339:	call   0x1644:0xb50d0a0d
  408340:	jae    0x4083a1
  408342:	les    ecx,FWORD PTR [ebx+edx*1-0x25ba63df]
  408349:	inc    ecx
  40834a:	ins    DWORD PTR es:[edi],dx
  40834b:	xchg   BYTE PTR [edx+0x7c],ch
  40834e:	mov    bl,0x1e
  408350:	std    
  408351:	push   ebx
  408352:	adc    ah,ch
  408354:	ror    BYTE PTR [esi],1
  408356:	and    DWORD PTR ds:0xacda0b56,edx
  40835c:	jbe    0x40834d
  40835e:	data16 je 0x4083cf
  408361:	mov    bl,BYTE PTR ds:0x4eaf2a97
  408367:	iret   
  408368:	push   eax
  408369:	scas   eax,DWORD PTR es:[edi]
  40836a:	push   edi
  40836b:	fild   QWORD PTR [edi]
  40836d:	xchg   esp,eax
  40836e:	dec    ebx
  40836f:	pop    es
  408370:	push   DWORD PTR [ecx+eiz*2+0x13e48bf9]
  408377:	jmp    0x27e6c9cf
  40837c:	gs mov bl,0xdc
  40837f:	aad    0xd
  408381:	dec    esp
  408382:	dec    ebp
  408383:	fist   DWORD PTR [esi-0xc]
  408386:	fisub  DWORD PTR [esi+ebp*8-0x14]
  40838a:	sbb    esi,DWORD PTR [eax+0x2a7bf7ce]
  408390:	add    al,0x34
  408392:	jne    0x408399
  408394:	aaa    
  408395:	and    al,0xa7
  408397:	dec    ebp
  408398:	inc    edx
  408399:	retf   
  40839a:	add    BYTE PTR [edi],ah
  40839c:	jnp    0x408333
  40839e:	cmp    DWORD PTR [ebx],0x9b1abca4
  4083a4:	rcl    cl,1
  4083a6:	sbb    esi,eax
  4083a8:	out    dx,eax
  4083a9:	hlt    
  4083aa:	push   ss
  4083ab:	or     edx,DWORD PTR [edi]
  4083ad:	cli    
  4083ae:	enter  0x11b1,0x59
  4083b2:	fdiv   QWORD PTR [eax+0x7]
  4083b5:	iret   
  4083b6:	inc    edi
  4083b7:	cli    
  4083b8:	in     al,0xd9
  4083ba:	inc    ecx
  4083bb:	mov    edx,0xd66738fa
  4083c0:	or     eax,DWORD PTR [edx+0x63]
  4083c3:	dec    ebp
  4083c4:	mov    esp,0x11ab26ff
  4083c9:	nop    DWORD PTR [edx+edx*4-0x722b922e]
  4083d1:	push   0xf6191c96
  4083d6:	jmp    0x2783:0x1521a927
  4083dd:	cmp    eax,DWORD PTR [esi+0x7898ec19]
  4083e3:	jmp    0x8bbd:0x43961946
  4083ea:	sub    BYTE PTR [edi],0x4b
  4083ed:	iret   
  4083ee:	pop    eax
  4083ef:	xor    esi,edx
  4083f1:	scas   eax,DWORD PTR es:[edi]
  4083f2:	jecxz  0x40845b
  4083f4:	mov    edi,0x6a4183eb
  4083f9:	dec    DWORD PTR [ecx+edx*1+0x4aafe305]
  408400:	lods   al,BYTE PTR ds:[esi]
  408401:	sbb    al,BYTE PTR [bp+di+0x3f]
  408405:	scas   al,BYTE PTR es:[edi]
  408406:	inc    esp
  408407:	hlt    
  408408:	popf   
  408409:	adc    ah,BYTE PTR [ebp-0x2ee1dfed]
  40840f:	jmp    0x408436
  408411:	xchg   ecx,edx
  408413:	clc    
  408414:	jmp    0x408481
  408416:	lahf   
  408417:	mov    ds:0xad4c9abb,eax
  40841c:	test   eax,0xc5e68887
  408421:	inc    ecx
  408422:	pusha  
  408423:	jl     0x408423
  408425:	pop    ecx
  408426:	aad    0xbc
  408428:	cmp    eax,0xff358684
  40842d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40842e:	out    0x18,eax
  408430:	add    cl,bh
  408432:	xchg   edi,eax
  408433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408434:	xacquire xchg BYTE PTR [esi-0x687522d2],ch
  40843b:	imul   eax,DWORD PTR [edi-0xf13406a],0xfffffff5
  408442:	adc    ah,dh
  408444:	pop    esi
  408445:	sbb    bl,BYTE PTR [edx-0x4d]
  408448:	or     DWORD PTR [esi],ecx
  40844a:	cld    
  40844b:	jl     0x4083d9
  40844d:	mov    eax,0xfabbff3
  408452:	jo     0x408415
  408454:	stos   DWORD PTR es:[edi],eax
  408455:	dec    ebx
  408456:	in     eax,0x60
  408458:	std    
  408459:	rcr    al,0xb4
  40845c:	out    0x5d,al
  40845e:	not    ah
  408460:	or     eax,0x5aaedb80
  408465:	and    eax,0x8c4bee28
  40846a:	stos   BYTE PTR es:[edi],al
  40846b:	jb     0x408406
  40846d:	add    al,0x2f
  40846f:	mov    dl,0x16
  408471:	sub    al,0xd1
  408473:	std    
  408474:	ins    DWORD PTR es:[edi],dx
  408475:	add    eax,0x7e8e711d
  40847a:	jg     0x4084ca
  40847c:	lods   al,BYTE PTR ds:[esi]
  40847d:	icebp  
  40847e:	cmp    eax,0x72223bb5
  408483:	jo     0x408501
  408485:	lods   al,BYTE PTR ds:[esi]
  408486:	aaa    
  408487:	jae    0x408498
  408489:	mov    al,ds:0x36ae983a
  40848e:	adc    eax,0x1a926fc7
  408493:	sub    ah,dl
  408495:	add    DWORD PTR [esi],0x91ca9cec
  40849b:	xor    DWORD PTR [ebp+0x6e2bad98],0x23
  4084a2:	dec    esp
  4084a3:	out    dx,al
  4084a4:	inc    eax
  4084a5:	(bad)  [ecx]
  4084a7:	hlt    
  4084a8:	jns    0x408454
  4084aa:	sti    
  4084ab:	iret   
  4084ac:	ret    0x2231
  4084af:	fucomi st,st(7)
  4084b1:	dec    ecx
  4084b2:	and    DWORD PTR [eax],ebp
  4084b4:	push   esp
  4084b5:	or     eax,0xfd0db41d
  4084ba:	(bad)
  4084bd:	(bad)  
  4084be:	rol    BYTE PTR [ecx-0x3],0x23
  4084c2:	fdiv   QWORD PTR fs:[ebx+eiz*2]
  4084c6:	dec    edx
  4084c7:	mov    bh,0xa1
  4084c9:	daa    
  4084ca:	and    BYTE PTR [eax-0x3e],dh
  4084cd:	and    DWORD PTR [ebx-0x43],esp
  4084d0:	add    al,0x63
  4084d2:	jne    0x408528
  4084d4:	and    DWORD PTR [ebx+0x17f4c932],0xb2834621
  4084de:	repz enter 0x5486,0x80
  4084e3:	std    
  4084e4:	xor    edi,0xffffffea
  4084e7:	stos   DWORD PTR es:[edi],eax
  4084e8:	in     eax,0xaf
  4084ea:	(bad)  
  4084eb:	jne    0x408491
  4084ed:	dec    ebx
  4084ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084ef:	xor    eax,0xd6d45f68
  4084f4:	nop
  4084f5:	xchg   edx,eax
  4084f6:	dec    esi
  4084f7:	je     0x4084dd
  4084f9:	popa   
  4084fa:	(bad)  
  4084fc:	outs   dx,DWORD PTR ds:[esi]
  4084fd:	ret    0x201e
  408500:	test   DWORD PTR [eax],ecx
  408502:	pop    edx
  408503:	dec    esi
  408504:	in     eax,dx
  408505:	cmp    ah,BYTE PTR [edi-0x6a7345cb]
  40850b:	jmp    0x5f1506ba
  408510:	rcr    BYTE PTR [ebx],cl
  408512:	sbb    eax,0xe400f5f7
  408517:	jae    0x408583
  408519:	stos   DWORD PTR es:[edi],eax
  40851a:	(bad)  
  40851b:	out    dx,al
  40851c:	mov    ds,WORD PTR [edx]
  40851e:	test   DWORD PTR [edi-0x7a05dbb9],esp
  408524:	jno    0x408548
  408526:	cmp    bl,dh
  408528:	(bad)  
  408529:	or     edx,DWORD PTR [eax+0x3c]
  40852c:	cwde   
  40852d:	nop
  40852e:	mov    bh,BYTE PTR [esi+0x59]
  408531:	push   esi
  408532:	ret    
  408533:	xor    al,0xcb
  408535:	jmp    FWORD PTR [eax]
  408537:	xchg   ebx,eax
  408538:	clc    
  408539:	repnz inc edi
  40853b:	test   DWORD PTR [ecx+0xa],eax
  40853e:	mov    esp,0x4cd5e24b
  408543:	pop    ds
  408544:	push   esp
  408545:	pop    ds
  408546:	xlat   BYTE PTR ds:[ebx]
  408547:	lods   al,BYTE PTR ds:[esi]
  408548:	or     eax,0xa84ad16c
  40854d:	sahf   
  40854e:	push   edx
  40854f:	sbb    eax,0xf393599d
  408554:	mov    edx,0x1d1b4d15
  408559:	icebp  
  40855a:	ret    
  40855b:	in     eax,0xd8
  40855d:	adc    ah,BYTE PTR [ebx-0x4b40d2a8]
  408563:	fimul  WORD PTR [edx-0x38]
  408566:	outs   dx,BYTE PTR ds:[esi]
  408567:	push   es
  408568:	jae    0x40858c
  40856a:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40856c:	push   ebx
  40856d:	jmp    0x9fe1:0x9d3eb79e
  408574:	mov    bh,0x5c
  408576:	dec    ebp
  408577:	push   0x2cbe72e2
  40857c:	xchg   ah,cl
  40857e:	dec    ebx
  40857f:	mov    eax,ds:0x5b58afeb
  408584:	inc    eax
  408585:	pop    ss
  408586:	pop    ss
  408587:	xchg   ebx,eax
  408588:	retf   
  408589:	jmp    0xea971aa7
  40858e:	adc    DWORD PTR [edi],ecx
  408590:	shl    BYTE PTR [edx-0x9],1
  408593:	and    ebp,DWORD PTR [ebx-0x547eafe9]
  408599:	push   ss
  40859a:	js     0x408576
  40859c:	or     DWORD PTR [ebx],edx
  40859e:	cwde   
  40859f:	mov    edx,0x26be750c
  4085a4:	in     al,0x1e
  4085a6:	jnp    0x4085be
  4085a8:	dec    edx
  4085a9:	mov    es,edx
  4085ab:	dec    esi
  4085ac:	int3   
  4085ad:	mov    edx,0x92efd0cf
  4085b2:	cmp    esi,DWORD PTR [esi+0x4b]
  4085b5:	and    DWORD PTR [eax-0x36],edi
  4085b8:	out    0xd0,eax
  4085ba:	push   ds
  4085bb:	stos   BYTE PTR es:[edi],al
  4085bc:	and    eax,0x7ae12bce
  4085c1:	add    ebx,ecx
  4085c3:	pop    es
  4085c4:	or     eax,0xd1c58a58
  4085c9:	fs jecxz 0x4085f3
  4085cc:	xchg   ebx,eax
  4085cd:	data16 adc dl,BYTE PTR [ecx]
  4085d0:	xrelease mov DWORD PTR [edi+0x5a],eax
  4085d4:	xchg   ecx,eax
  4085d5:	lahf   
  4085d6:	mov    dh,bl
  4085d8:	xchg   edx,eax
  4085d9:	or     esi,DWORD PTR [edi+edx*8-0x3a9cdbfa]
  4085e0:	leave  
  4085e1:	xchg   edi,eax
  4085e2:	mov    DWORD PTR [edi],edx
  4085e4:	into   
  4085e5:	(bad)  
  4085e6:	fdivr  st(0),st
  4085e8:	fs cmp al,0x5f
  4085eb:	and    ebp,DWORD PTR fs:[edi-0x68]
  4085ef:	xchg   ebp,ebx
  4085f1:	xor    ch,BYTE PTR [ebx+0xc]
  4085f4:	or     esp,ecx
  4085f6:	mov    ebx,0x972c060e
  4085fb:	fwait
  4085fc:	push   ebp
  4085fd:	iret   
  4085fe:	xchg   esp,eax
  4085ff:	scas   al,BYTE PTR es:[edi]
  408600:	pop    ebx
  408601:	dec    eax
  408602:	mov    bl,0xe7
  408604:	pop    ebx
  408605:	jo     0x40861a
  408607:	sbb    al,0xe5
  408609:	xchg   ebx,eax
  40860a:	ret    0x55aa
  40860d:	cs adc al,0x28
  408610:	push   ds
  408611:	imul   edi,DWORD PTR [esi+0x7eac4980],0xffffffd2
  408618:	and    DWORD PTR [eax],ecx
  40861a:	cli    
  40861b:	xchg   esp,eax
  40861c:	xor    al,0xad
  40861e:	sub    BYTE PTR [esp+ebp*4-0x28],dh
  408622:	test   DWORD PTR [eax-0x43],ebp
  408625:	in     al,0xbf
  408627:	in     al,0x7e
  408629:	lahf   
  40862a:	mov    eax,ds:0x96475698
  40862f:	mov    BYTE PTR [edi+0x71],0x7c
  408633:	iret   
  408634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408635:	rcr    BYTE PTR [edx],cl
  408637:	or     eax,0xd1a3315f
  40863c:	and    ecx,DWORD PTR [ecx+ecx*8+0x789a2c00]
  408643:	adc    eax,0xb564ea7
  408648:	or     eax,0x37ce27b7
  40864d:	shl    DWORD PTR ds:0xb4522037,0xc6
  408654:	imul   edi,esi,0xffffff9f
  408657:	mov    ah,0x9e
  408659:	jle    0x408677
  40865b:	jge    0x40868d
  40865d:	xchg   DWORD PTR [ecx+0x8ec3d15],ebx
  408663:	daa    
  408664:	scas   al,BYTE PTR es:[edi]
  408665:	lds    esi,FWORD PTR [di-0x3b]
  408669:	pop    edi
  40866a:	popa   
  40866b:	fs daa 
  40866d:	adc    al,0xbc
  40866f:	pop    ebp
  408670:	cdq    
  408671:	in     al,dx
  408672:	fadd   DWORD PTR [ebx-0x48]
  408675:	dec    esp
  408676:	sbb    dl,dh
  408678:	rcr    edx,0x81
  40867b:	fs xchg edx,eax
  40867d:	mov    ds:0xabd24f62,eax
  408682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408683:	addr16 test al,0xe6
  408686:	enter  0xcfd,0xa
  40868a:	(bad)  
  40868b:	mov    bh,0x2d
  40868d:	push   0xcb7b5e87
  408692:	(bad)
  408695:	adc    DWORD PTR [edx+0x7832ffef],ecx
  40869b:	imul   esi,DWORD PTR [ebp+0x60],0x5d
  40869f:	cmp    BYTE PTR [edi+0x1f786ad8],ah
  4086a5:	push   esp
  4086a6:	sub    BYTE PTR [ebx],ch
  4086a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086a9:	sbb    DWORD PTR [ebp-0x6c],eax
  4086ac:	and    dh,BYTE PTR [ebx]
  4086ae:	popa   
  4086af:	dec    esi
  4086b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086b1:	(bad)  
  4086b2:	stos   BYTE PTR es:[edi],al
  4086b3:	(bad)  
  4086b4:	cli    
  4086b5:	fdivr  st(5),st
  4086b7:	push   cs
  4086b8:	sti    
  4086b9:	dec    edx
  4086ba:	mov    eax,ds:0x33aed518
  4086bf:	in     al,0x32
  4086c1:	add    eax,0x4083172
  4086c6:	push   ds
  4086c7:	dec    ebp
  4086c8:	push   0xfffffff8
  4086ca:	aad    0x4f
  4086cc:	dec    ebp
  4086cd:	cmp    al,0x3e
  4086cf:	les    ebp,FWORD PTR [edx]
  4086d1:	or     al,0xf2
  4086d3:	ins    BYTE PTR es:[edi],dx
  4086d4:	repnz shl BYTE PTR ds:0x964e0d5,cl
  4086db:	xchg   esp,eax
  4086dc:	ror    BYTE PTR [ebx+0x4f],cl
  4086df:	add    ah,al
  4086e1:	mov    al,ds:0x111027e0
  4086e6:	jbe    0x40866f
  4086e8:	cwde   
  4086e9:	cld    
  4086ea:	fidiv  DWORD PTR [edi]
  4086ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086ed:	sbb    eax,0x8116c09
  4086f2:	or     cl,al
  4086f4:	ja     0x408733
  4086f6:	mov    ds:0x62f5d136,eax
  4086fb:	inc    edx
  4086fc:	clc    
  4086fd:	mov    ds:0x9a810c4e,al
  408702:	cld    
  408703:	retf   0x502
  408706:	sub    esp,DWORD PTR [edx-0x76]
  408709:	inc    ebp
  40870a:	dec    ecx
  40870b:	mov    ch,0x41
  40870d:	cmp    ah,BYTE PTR [edi]
  40870f:	xor    ch,cl
  408711:	inc    esi
  408712:	jae    0x408703
  408714:	cdq    
  408715:	arpl   WORD PTR [ecx+0x3d513741],dx
  40871b:	in     al,dx
  40871c:	fst    QWORD PTR [ebx+0x7500324f]
  408722:	call   0xc681:0xa0f0f44c
  408729:	test   DWORD PTR [esi-0x6ee2c538],esp
  40872f:	mov    WORD PTR [ecx],?
  408731:	xor    ecx,esp
  408733:	lods   al,BYTE PTR ds:[esi]
  408734:	mov    eax,ds:0x88dbeb8f
  408739:	and    edx,DWORD PTR [edx-0x60]
  40873c:	jae    0x4087bb
  40873e:	dec    edx
  40873f:	test   DWORD PTR [ecx+0x11075b3c],edx
  408745:	or     ecx,ebp
  408747:	iret   
  408748:	cli    
  408749:	je     0x4087a8
  40874b:	out    0xdb,eax
  40874d:	dec    ecx
  40874e:	add    DWORD PTR [ebp+0x61],esi
  408751:	icebp  
  408752:	jne    0x4087cd
  408754:	mov    eax,ds:0x4376dfda
  408759:	xchg   edx,eax
  40875a:	rcl    BYTE PTR [esi+edi*8],0xe5
  40875e:	mov    edx,0xf08e75d3
  408763:	rcr    DWORD PTR [edi-0x47100be9],cl
  408769:	stos   BYTE PTR es:[edi],al
  40876a:	adc    DWORD PTR [ebx],esp
  40876c:	jp     0x40876b
  40876e:	mov    esi,0x75c69e3e
  408773:	lahf   
  408774:	pop    edi
  408775:	aam    0xe9
  408777:	jns    0x4087ab
  408779:	dec    esi
  40877a:	shr    BYTE PTR [ebx-0x7e],cl
  40877d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40877e:	lea    eax,[ecx]
  408780:	xchg   esp,eax
  408781:	jno    0x40876e
  408783:	fisub  DWORD PTR [eax-0x53]
  408786:	adc    eax,0xdb0e707d
  40878b:	retf   0x7671
  40878e:	add    eax,0x7b997226
  408793:	and    BYTE PTR [ebp-0x35],bl
  408796:	xchg   esp,eax
  408797:	push   es
  408798:	loopne 0x40878f
  40879a:	dec    ebp
  40879b:	fdivr  QWORD PTR [edi-0x155498da]
  4087a1:	and    bh,BYTE PTR [ebp-0x6a]
  4087a4:	sar    BYTE PTR [esi],0xf2
  4087a7:	mov    bl,0x58
  4087a9:	push   cs
  4087aa:	xor    eax,0x9d010e93
  4087af:	stos   DWORD PTR es:[edi],eax
  4087b0:	pusha  
  4087b1:	lahf   
  4087b2:	mov    edx,0xa52fb6ae
  4087b7:	mov    ebx,0x6a85e8b8
  4087bc:	xchg   esi,eax
  4087bd:	xor    DWORD PTR ds:0xd8d23b34,ecx
  4087c3:	arpl   WORD PTR [edx],bp
  4087c5:	lea    edi,[ebx+0x2eeef21]
  4087cb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087cd:	sbb    cl,BYTE PTR [ecx+0x37]
  4087d0:	add    ecx,DWORD PTR [eax]
  4087d2:	dec    edx
  4087d3:	cmp    ebp,esp
  4087d5:	cs cmp al,0xfb
  4087d8:	jecxz  0x4087f5
  4087da:	xchg   edx,eax
  4087db:	jns    0x4087d3
  4087dd:	call   0xbc58:0x55550ae0
  4087e4:	add    ebx,eax
  4087e6:	inc    ebp
  4087e7:	mov    DWORD PTR [edi-0x52],0xbceba270
  4087ee:	sbb    edi,edi
  4087f0:	pusha  
  4087f1:	jnp    0x4087c4
  4087f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087f4:	xchg   ebx,eax
  4087f5:	dec    eax
  4087f6:	pop    edi
  4087f7:	lods   al,BYTE PTR ds:[esi]
  4087f8:	test   BYTE PTR ds:0xe983e6e1,cl
  4087fe:	pop    edi
  4087ff:	cmp    al,BYTE PTR [esi+0x44a271dc]
  408805:	push   edx
  408806:	push   cs
  408807:	mov    eax,ds:0x31687cec
  40880c:	jbe    0x4087b2
  40880e:	not    DWORD PTR [edi+edi*2-0x61]
  408812:	out    0x44,eax
  408814:	js     0x408804
  408816:	push   edi
  408817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408818:	jecxz  0x4087c5
  40881a:	loop   0x4087d1
  40881c:	jae    0x4087bf
  40881e:	fst    DWORD PTR [esi-0x6f]
  408821:	sbb    DWORD PTR [eax+edx*4+0x56],ebp
  408825:	test   eax,0x3a5ffdbe
  40882a:	(bad)  
  40882b:	fcompp 
  40882d:	push   ecx
  40882e:	repz sbb DWORD PTR [esi],eax
  408831:	leave  
  408832:	fcmove st,st(7)
  408834:	mov    al,0x42
  408836:	sub    BYTE PTR [ebp+0x48af9f77],0x52
  40883d:	scas   al,BYTE PTR es:[edi]
  40883e:	pop    ecx
  40883f:	aad    0x50
  408841:	std    
  408842:	jg     0x62991ab9
  408848:	and    dl,BYTE PTR [ebx+0x41b1ac3e]
  40884e:	test   eax,0x9547614a
  408853:	ja     0x4087e0
  408855:	cmp    edx,esp
  408857:	sbb    ch,0xbf
  40885a:	dec    esp
  40885b:	data16 ins BYTE PTR es:[edi],dx
  40885d:	pop    ebp
  40885e:	rcr    DWORD PTR [esi+edi*8+0x64],cl
  408862:	stos   DWORD PTR es:[edi],eax
  408863:	popa   
  408864:	ja     0x40881b
  408866:	into   
  408867:	fucom  st(7)
  408869:	add    eax,0x26ccd131
  40886e:	sub    ah,BYTE PTR [eax+0x6a]
  408871:	push   ss
  408872:	in     eax,0xe0
  408874:	outs   dx,BYTE PTR ds:[esi]
  408875:	lock les esi,FWORD PTR [eax+0x3a]
  408879:	outs   dx,DWORD PTR ds:[esi]
  40887a:	ret    
  40887b:	test   DWORD PTR [ecx+0x6fd7b0ce],edx
  408881:	mov    eax,ds:0xe3b1d42b
  408886:	lods   al,BYTE PTR ds:[esi]
  408887:	push   ecx
  408888:	dec    esp
  408889:	in     eax,0xfa
  40888b:	cli    
  40888c:	or     BYTE PTR [ebx],dl
  40888e:	jl     0x4088d0
  408890:	sbb    BYTE PTR [ebx-0x74426c43],0x28
  408897:	mov    bl,BYTE PTR [edi]
  408899:	and    DWORD PTR [edi-0x7e93b2d5],eax
  40889f:	cli    
  4088a0:	(bad)  
  4088a1:	out    dx,eax
  4088a2:	adc    BYTE PTR [eax-0x10],0x88
  4088a6:	lds    esp,FWORD PTR [ebp-0x42]
  4088a9:	pusha  
  4088aa:	ret    0x246e
  4088ad:	xchg   DWORD PTR [esi+0x79baae18],ebx
  4088b3:	dec    edx
  4088b4:	push   0xa94c4d68
  4088b9:	popa   
  4088ba:	adc    DWORD PTR [esi-0x51],0x4a
  4088be:	movntq QWORD PTR [ebp-0x622770e2],mm7
  4088c5:	or     al,0x86
  4088c7:	inc    esp
  4088c8:	outs   dx,BYTE PTR ds:[esi]
  4088c9:	sbb    BYTE PTR [edx+0xc6cfa74],dl
  4088cf:	inc    edx
  4088d0:	enter  0x7ea6,0x41
  4088d4:	call   0xbb399be8
  4088d9:	cmp    DWORD PTR [esi+0x39],edi
  4088dc:	cdq    
  4088dd:	mov    bh,0xcf
  4088df:	xor    bl,BYTE PTR [edi]
  4088e1:	push   ecx
  4088e2:	push   ebx
  4088e3:	add    ebp,esp
  4088e5:	out    dx,eax
  4088e6:	pop    edx
  4088e7:	cmc    
  4088e8:	xchg   esp,eax
  4088e9:	retf   
  4088ea:	xchg   esi,eax
  4088eb:	nop
  4088ec:	adc    al,0x36
  4088ee:	mov    DWORD PTR [ebx+esi*8],esi
  4088f1:	into   
  4088f2:	icebp  
  4088f3:	cdq    
  4088f4:	in     al,0x60
  4088f6:	jno    0x4088a7
  4088f8:	xchg   ebx,eax
  4088f9:	loope  0x40896f
  4088fb:	inc    ebp
  4088fc:	mov    esp,0x66d9d2a4
  408901:	outs   dx,BYTE PTR ds:[esi]
  408902:	cmp    al,0x51
  408904:	into   
  408905:	sub    DWORD PTR [ebp+0x663fabb5],ebp
  40890b:	out    dx,al
  40890c:	jle    0x4088ff
  40890e:	xchg   bp,ax
  408910:	sub    DWORD PTR [ebx],esp
  408912:	push   esi
  408913:	cwde   
  408914:	nop
  408915:	jp     0x408935
  408917:	cmp    al,BYTE PTR [edi-0x71]
  40891a:	adc    DWORD PTR [edx-0x5f13380],esi
  408920:	fidiv  DWORD PTR [ebx+0x55]
  408923:	pushf  
  408924:	fcomp  QWORD PTR [edi+0xc]
  408927:	jnp    0x408937
  408929:	cmp    BYTE PTR [ebx-0x7dc49c07],0x25
  408930:	test   al,0xda
  408932:	xor    al,0x5e
  408934:	(bad)  
  408935:	jbe    0x408995
  408937:	sbb    bh,BYTE PTR [esi]
  408939:	cmp    al,0xea
  40893b:	shl    BYTE PTR [edx-0x7346d091],1
  408941:	xchg   edx,eax
  408942:	ret    0x42e
  408945:	mov    esp,DWORD PTR [edi-0x17]
  408948:	mov    esp,0xc18d8350
  40894d:	retf   
  40894e:	div    cl
  408950:	into   
  408951:	rcr    edx,1
  408953:	fmul   QWORD PTR [edx+edi*2+0x73bdf5fc]
  40895a:	scas   eax,DWORD PTR es:[edi]
  40895b:	fcomp  DWORD PTR [edi]
  40895d:	add    BYTE PTR [ebx-0x4e],0x7e
  408961:	mov    edx,0xfb152ec6
  408966:	mov    ch,0xf1
  408968:	outs   dx,BYTE PTR ds:[esi]
  408969:	idiv   DWORD PTR [esi-0x40a9f987]
  40896f:	out    0xf8,al
  408971:	push   0x25699bf
  408976:	xchg   ebp,eax
  408977:	fnstcw WORD PTR es:[ebp+0x5a]
  40897b:	jge    0x408928
  40897d:	ret    
  40897e:	std    
  40897f:	push   esp
  408980:	lods   eax,DWORD PTR ds:[esi]
  408981:	lds    ecx,FWORD PTR [ebx+0x633fe54b]
  408987:	cdq    
  408988:	jb     0x408931
  40898a:	and    DWORD PTR [edi-0xa540a95],ebp
  408990:	les    esp,FWORD PTR [eax-0x6b9de056]
  408996:	fldenv [edi]
  408998:	enter  0xb26f,0xc3
  40899c:	and    DWORD PTR [esi],ecx
  40899e:	outs   dx,BYTE PTR ds:[esi]
  40899f:	pop    ebp
  4089a0:	fimul  WORD PTR [edi-0x63779263]
  4089a6:	(bad)  
  4089a7:	jl     0x4089d8
  4089a9:	jb     0x408a27
  4089ab:	(bad)  
  4089ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089ae:	xchg   edx,eax
  4089af:	loopne 0x408944
  4089b1:	jae    0x408958
  4089b3:	fsubr  st(5),st
  4089b5:	ret    
  4089b6:	lods   eax,DWORD PTR ds:[esi]
  4089b7:	lock rol BYTE PTR [edx-0x10],1
  4089bb:	dec    edx
  4089bc:	cmp    BYTE PTR ds:0x9bfa63b2,cl
  4089c2:	stos   BYTE PTR es:[edi],al
  4089c3:	dec    edx
  4089c4:	push   ds
  4089c5:	mov    al,ds:0xfb89b483
  4089ca:	dec    ebx
  4089cb:	loop   0x4089bd
  4089cd:	outs   dx,BYTE PTR ds:[esi]
  4089ce:	fdiv   st,st(3)
  4089d0:	in     eax,dx
  4089d1:	cmp    al,0x47
  4089d3:	lahf   
  4089d4:	cs push ebp
  4089d6:	add    al,0x87
  4089d8:	ret    
  4089d9:	dec    ecx
  4089da:	js     0x40898c
  4089dc:	shr    DWORD PTR ds:0xa8d63170,1
  4089e2:	mov    ah,0x57
  4089e4:	mov    edx,DWORD PTR [eax-0x12]
  4089e7:	xor    al,0x8c
  4089e9:	mov    esp,0xcf840c78
  4089ee:	loopne 0x408a20
  4089f0:	mov    ebx,0xece2b7c3
  4089f5:	jge    0x408996
  4089f7:	dec    edx
  4089f8:	call   0x33a5:0x1d1f7452
  4089ff:	stos   BYTE PTR es:[edi],al
  408a00:	jg     0x408989
  408a02:	jbe    0x408a26
  408a04:	shl    esi,cl
  408a06:	cmp    edx,ecx
  408a08:	sub    DWORD PTR ds:0x6d3d0be5,edx
  408a0e:	cmp    BYTE PTR [esi-0x55],bh
  408a11:	cwde   
  408a12:	aaa    
  408a13:	(bad)  
  408a14:	pop    eax
  408a15:	inc    ebx
  408a16:	sti    
  408a17:	add    al,0xb0
  408a19:	cdq    
  408a1a:	xchg   edx,eax
  408a1b:	xor    BYTE PTR [ebp-0x127e773c],dl
  408a21:	pop    ecx
  408a22:	sub    al,0xd3
  408a24:	or     al,BYTE PTR [ecx-0x7e]
  408a27:	jnp    0x4089bd
  408a29:	mov    BYTE PTR [edx],ch
  408a2b:	outs   dx,DWORD PTR ds:[esi]
  408a2c:	ret    
  408a2d:	add    eax,0xb6310cb0
  408a32:	sub    ah,ch
  408a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a35:	xor    esp,ebp
  408a37:	iret   
  408a38:	das    
  408a39:	arpl   WORD PTR [esi],sp
  408a3b:	aam    0xb
  408a3d:	in     eax,0xa
  408a3f:	xor    al,bh
  408a41:	div    BYTE PTR [ebp-0x79]
  408a44:	dec    ebp
  408a45:	push   ss
  408a46:	ds das 
  408a48:	pop    edx
  408a49:	pop    ecx
  408a4a:	ss dec ebp
  408a4c:	(bad)  
  408a4d:	sbb    esp,DWORD PTR [eax-0x522a4b3d]
  408a53:	in     eax,dx
  408a54:	test   DWORD PTR [ecx],0x5f294c29
  408a5a:	pop    es
  408a5b:	cwde   
  408a5c:	jge    0x408a71
  408a5e:	retf   0xe2c6
  408a61:	call   0xacc9:0xcda984bd
  408a68:	push   ds
  408a69:	int    0x2
  408a6b:	mov    bh,0xb0
  408a6d:	mov    edx,0xf4b2f35a
  408a72:	fs dec esi
  408a74:	sbb    BYTE PTR [edi],0x9f
  408a77:	loope  0x408aa2
  408a79:	js     0x408ac6
  408a7b:	pop    ecx
  408a7c:	pushf  
  408a7d:	dec    ecx
  408a7e:	test   DWORD PTR [edi],esp
  408a80:	mov    ecx,0xd42926ee
  408a85:	adc    al,0x89
  408a87:	retf   0x53e7
  408a8a:	dec    esp
  408a8b:	sub    al,0x76
  408a8d:	fstp   DWORD PTR [edx]
  408a8f:	inc    ebx
  408a90:	icebp  
  408a91:	jmp    0x484e9959
  408a96:	push   ebx
  408a97:	dec    ebp
  408a98:	push   0x1a
  408a9a:	sub    dh,bh
  408a9c:	xor    edx,DWORD PTR [edi+0x3c7ebfa8]
  408aa2:	or     dl,BYTE PTR [eax]
  408aa4:	lods   al,BYTE PTR ds:[esi]
  408aa5:	cmp    eax,0x3d899b59
  408aaa:	inc    edx
  408aab:	inc    ebx
  408aac:	push   ebx
  408aad:	dec    edx
  408aae:	fcomp  DWORD PTR [ecx+0x54]
  408ab1:	aad    0xe3
  408ab3:	xor    ah,ch
  408ab5:	mov    ds:0xa468e63a,eax
  408aba:	cmc    
  408abb:	add    edi,DWORD PTR [ebx+0x1e3803dc]
  408ac1:	adc    ah,BYTE PTR [ebx+0x2f]
  408ac4:	or     bl,BYTE PTR [ebx+ecx*4-0xf910217]
  408acb:	inc    eax
  408acc:	push   0xef9b1572
  408ad1:	sub    dl,BYTE PTR [edx]
  408ad3:	std    
  408ad4:	xor    dh,BYTE PTR [edi+0x4e]
  408ad7:	leave  
  408ad8:	sar    DWORD PTR [edi],cl
  408ada:	add    eax,0xa10da47d
  408adf:	popa   
  408ae0:	repz mov dh,0x62
  408ae3:	xchg   edi,eax
  408ae4:	xchg   DWORD PTR [esi],ebx
  408ae6:	and    al,0xd7
  408ae8:	xchg   edx,eax
  408ae9:	popf   
  408aea:	fs ss cdq 
  408aed:	sahf   
  408aee:	ds xchg ebx,eax
  408af0:	push   esp
  408af1:	jb     0x408b3e
  408af3:	pop    eax
  408af4:	dec    ebp
  408af5:	cs jmp 0xc9df:0x277797ad
  408afd:	stos   DWORD PTR es:[edi],eax
  408afe:	adc    dl,bh
  408b00:	dec    esp
  408b01:	sti    
  408b02:	cld    
  408b03:	shl    BYTE PTR [ecx],cl
  408b05:	mov    eax,0x6c9e62c6
  408b0a:	mov    ch,0xc9
  408b0c:	and    eax,0x3659b72b
  408b11:	ror    BYTE PTR [esi+ecx*8],1
  408b14:	je     0x408aa5
  408b16:	hlt    
  408b17:	leave  
  408b18:	cmp    BYTE PTR [edi-0x7efd68ed],dh
  408b1e:	mov    ?,WORD PTR [ebx-0xa]
  408b21:	add    ebp,DWORD PTR [edi+0x3d]
  408b24:	ficomp WORD PTR [eax-0x16]
  408b27:	les    edx,FWORD PTR [edi]
  408b29:	fnsave [ebx-0x4d]
  408b2c:	dec    esp
  408b2d:	in     al,dx
  408b2e:	sbb    al,0x71
  408b30:	fcomip st,st(5)
  408b32:	or     esi,0x9c1cdf61
  408b38:	out    0x9d,eax
  408b3a:	inc    ebp
  408b3b:	imul   esp,DWORD PTR [ebx-0x577c3017],0xffffff95
  408b42:	inc    esi
  408b43:	icebp  
  408b44:	mov    eax,ds:0x985bd3e9
  408b49:	popf   
  408b4a:	gs (bad) 
  408b4c:	mov    eax,DWORD PTR [edi-0x53]
  408b4f:	push   edi
  408b50:	sub    ebx,eax
  408b52:	std    
  408b53:	pop    es
  408b54:	or     bl,BYTE PTR [ebx+ebp*1-0x5]
  408b58:	sub    BYTE PTR [ecx+ecx*4],0x56
  408b5c:	sub    esi,DWORD PTR [edx+esi*4]
  408b5f:	int3   
  408b60:	mov    eax,0xa3c71228
  408b65:	xlat   BYTE PTR ds:[ebx]
  408b66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b67:	js     0x408b5e
  408b69:	out    0xf,eax
  408b6b:	loop   0x408b07
  408b6d:	xor    ebp,DWORD PTR [edx-0x22]
  408b70:	sbb    eax,0xec8f35b2
  408b75:	add    BYTE PTR [eax],0xc9
  408b78:	jl     0x408b66
  408b7a:	mov    esp,0xfc5cf674
  408b7f:	sub    dl,BYTE PTR [ebx]
  408b81:	jmp    0x408b5f
  408b83:	aaa    
  408b84:	adc    al,bh
  408b86:	sub    DWORD PTR [ecx],esp
  408b88:	ja     0x408b1d
  408b8a:	pusha  
  408b8b:	or     DWORD PTR [edi+ecx*2],0xc9c3f1f9
  408b92:	dec    edi
  408b93:	sbb    dh,BYTE PTR [eax]
  408b95:	shl    BYTE PTR [edi],1
  408b97:	pop    eax
  408b98:	cli    
  408b99:	jns    0x408bcf
  408b9b:	jp     0x408ba5
  408b9d:	shl    BYTE PTR [edx-0x28332fed],0x6
  408ba4:	lods   al,BYTE PTR ds:[esi]
  408ba5:	div    ecx
  408ba7:	sbb    DWORD PTR [esi],esp
  408ba9:	adc    bl,cl
  408bab:	shr    DWORD PTR [esi+0x3cd7c4b],1
  408bb1:	cs cld 
  408bb3:	dec    edx
  408bb4:	and    al,BYTE PTR fs:[ecx]
  408bb7:	data16 stos BYTE PTR es:[edi],al
  408bb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bba:	(bad)  
  408bbb:	adc    eax,0x5ef9fcd
  408bc0:	pop    ebp
  408bc1:	or     bl,BYTE PTR [eax-0x76740573]
  408bc7:	dec    ebx
  408bc8:	test   DWORD PTR [esi+0x64a28cd3],esp
  408bce:	lock cwde 
  408bd0:	ins    DWORD PTR es:[edi],dx
  408bd1:	scas   eax,DWORD PTR es:[edi]
  408bd2:	pop    edi
  408bd3:	outs   dx,BYTE PTR ds:[esi]
  408bd4:	dec    eax
  408bd5:	xchg   ebp,eax
  408bd6:	std    
  408bd7:	push   ecx
  408bd8:	cli    
  408bd9:	inc    edi
  408bda:	adc    BYTE PTR [eax-0x3c919f17],dl
  408be0:	push   edi
  408be1:	dec    esp
  408be2:	ds fwait
  408be4:	les    esp,FWORD PTR [eax-0x1f137a7b]
  408bea:	mov    cl,BYTE PTR [edx+ebp*2-0x5d]
  408bee:	push   ebx
  408bef:	les    edx,FWORD PTR [ebx-0x4d2aa7d8]
  408bf5:	shl    bl,cl
  408bf7:	aas    
  408bf8:	pop    edx
  408bf9:	sbb    al,BYTE PTR [esi]
  408bfb:	test   BYTE PTR [ecx-0x6f],cl
  408bfe:	daa    
  408bff:	mov    ds:0x46ee6059,eax
  408c04:	call   0x1bef5390
  408c09:	in     al,dx
  408c0a:	sub    cl,al
  408c0c:	jo     0x408b95
  408c0e:	out    dx,al
  408c0f:	repz mov esi,0x4599c674
  408c15:	pop    es
  408c16:	adc    DWORD PTR [ebx-0x41b00962],edi
  408c1c:	xor    DWORD PTR [edx+0x232fb120],edi
  408c22:	int    0xf3
  408c24:	cli    
  408c25:	push   cs
  408c26:	push   0x5ee890d9
  408c2b:	push   ss
  408c2c:	mov    ebp,0x7c7464ac
  408c31:	jb     0x408c00
  408c33:	mov    ebx,0x897bbc8b
  408c38:	jb     0x408c3f
  408c3a:	jge    0x408cbb
  408c3c:	shl    esp,0xd0
  408c3f:	scas   al,BYTE PTR es:[edi]
  408c40:	hlt    
  408c41:	in     eax,dx
  408c42:	inc    edx
  408c43:	fld    DWORD PTR [esi]
  408c45:	inc    esi
  408c46:	push   ebp
  408c47:	shr    BYTE PTR [esp+eax*8],cl
  408c4a:	hlt    
  408c4b:	test   ebx,esp
  408c4d:	push   ebp
  408c4e:	xchg   edx,eax
  408c4f:	dec    edx
  408c50:	dec    ebx
  408c51:	test   DWORD PTR [eax-0x4c7d6d1f],esi
  408c57:	jmp    0x408be5
  408c59:	fcmovu st,st(5)
  408c5b:	push   ss
  408c5c:	or     al,0x1d
  408c5e:	add    BYTE PTR [ebp+0xe],0xe6
  408c62:	lods   al,BYTE PTR ds:[esi]
  408c63:	sbb    DWORD PTR [ecx],edi
  408c65:	jmp    0x408c89
  408c67:	add    DWORD PTR [edx-0x7db04a56],eax
  408c6d:	dec    edx
  408c6e:	mov    dl,0xe1
  408c70:	(bad)  
  408c71:	mov    esi,0x32d63a1c
  408c76:	fisubr WORD PTR ds:0x9c256867
  408c7c:	call   0x978be541
  408c81:	push   es
  408c82:	test   cl,ch
  408c84:	ins    BYTE PTR es:[edi],dx
  408c85:	fisttp WORD PTR [edx+0x2e]
  408c88:	sub    al,0x6b
  408c8a:	shr    ebp,0xbe
  408c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c8e:	sbb    BYTE PTR [edi+0x2f],0xe3
  408c92:	aaa    
  408c93:	pop    edi
  408c94:	sub    ecx,esp
  408c96:	push   ebp
  408c97:	cmc    
  408c98:	add    eax,0x7513cc6b
  408c9d:	mov    eax,DWORD PTR [edi]
  408c9f:	push   0x8266b691
  408ca4:	(bad)  [ecx-0x3a]
  408ca7:	bound  ebx,QWORD PTR [esp+ebp*4+0x62]
  408cab:	pop    eax
  408cac:	push   0x934339a8
  408cb1:	mov    ebp,0x6c4adbaa
  408cb6:	stos   BYTE PTR es:[edi],al
  408cb7:	fdivrp st(3),st
  408cb9:	jmp    0x408c6d
  408cbb:	test   BYTE PTR ds:0xd91dfb90,dh
  408cc1:	lahf   
  408cc2:	sub    ebx,eax
  408cc4:	mov    edi,0xb097f93a
  408cc9:	xchg   DWORD PTR [edi+0x7a0b7e9],ebx
  408ccf:	scas   eax,DWORD PTR es:[edi]
  408cd0:	addr16 pop ecx
  408cd2:	test   BYTE PTR [ebx+0x4978ed8],al
  408cd8:	pop    ds
  408cd9:	cdq    
  408cda:	mov    edx,0xc5c08a55
  408cdf:	not    BYTE PTR [eax-0x3798380c]
  408ce5:	aas    
  408ce6:	push   es
  408ce7:	data16 into 
  408ce9:	cmp    ecx,ebx
  408ceb:	mov    ?,esp
  408ced:	scas   al,BYTE PTR es:[edi]
  408cee:	sbb    dl,BYTE PTR [ebp-0x68]
  408cf1:	pop    edi
  408cf2:	mov    dh,al
  408cf4:	lods   al,BYTE PTR ds:[esi]
  408cf5:	outs   dx,DWORD PTR ds:[esi]
  408cf6:	mov    ecx,ss
  408cf8:	shr    DWORD PTR [esi-0x7],cl
  408cfb:	shr    DWORD PTR [eax],0x54
  408cfe:	les    ebp,FWORD PTR [esi-0x60]
  408d01:	jecxz  0x408d7e
  408d03:	push   ebp
  408d04:	and    BYTE PTR [eax-0x6e],bh
  408d07:	daa    
  408d08:	xor    DWORD PTR [edi-0x1a],0x3b
  408d0c:	jbe    0x408d37
  408d0e:	and    eax,0x47f434cf
  408d13:	pop    ebp
  408d14:	outs   dx,BYTE PTR ds:[esi]
  408d15:	mov    al,0xae
  408d17:	lahf   
  408d18:	pop    ds
  408d19:	fild   QWORD PTR [ecx-0x898ca84]
  408d1f:	cwde   
  408d20:	mov    ch,0xbc
  408d22:	hlt    
  408d23:	mov    ds:0xf6911287,al
  408d28:	xchg   DWORD PTR [edi],eax
  408d2a:	xchg   esi,eax
  408d2b:	fstp   QWORD PTR [eax+0x4ca6db89]
  408d31:	retf   0x6d76
  408d34:	inc    BYTE PTR [esi-0x4]
  408d37:	sbb    ch,ch
  408d39:	cmp    edx,0x21
  408d3c:	std    
  408d3d:	xor    al,0x42
  408d3f:	pop    ecx
  408d40:	arpl   WORD PTR [ebx-0x4654e2b2],si
  408d46:	mov    ebp,0x7cb27f8
  408d4b:	push   ecx
  408d4c:	add    edi,0x65
  408d4f:	pop    ss
  408d50:	inc    esp
  408d51:	popa   
  408d52:	and    esp,esp
  408d54:	ret    0xb17b
  408d57:	out    0x8b,al
  408d59:	or     DWORD PTR [edx+ebx*8+0x5b],edx
  408d5d:	jg     0x408cff
  408d5f:	cmp    al,0xae
  408d61:	lods   al,BYTE PTR ds:[esi]
  408d62:	push   ecx
  408d63:	add    BYTE PTR [esi],dh
  408d65:	inc    esp
  408d66:	xchg   ebp,eax
  408d67:	stos   DWORD PTR es:[edi],eax
  408d68:	push   0xffffffb0
  408d6a:	mov    ds:0xbd8e5a71,al
  408d6f:	fld    DWORD PTR [esi]
  408d71:	aaa    
  408d72:	push   cs
  408d73:	dec    edi
  408d74:	pop    esp
  408d75:	or     DWORD PTR [ebp-0x2a81ee6],0xa
  408d7c:	shl    DWORD PTR [edx],0xfa
  408d7f:	or     eax,0x94d48d58
  408d84:	test   DWORD PTR [edi-0x5db79858],eax
  408d8a:	inc    bp
  408d8c:	loopne 0x408d2b
  408d8e:	std    
  408d8f:	cmp    DWORD PTR [ebx+edi*1+0x7b],edx
  408d93:	add    edx,DWORD PTR [esi]
  408d95:	or     BYTE PTR [ebx],0xf1
  408d98:	ror    dh,0x6b
  408d9b:	je     0x408d84
  408d9d:	scas   al,BYTE PTR es:[edi]
  408d9e:	fistp  WORD PTR [eax+0x4e86036b]
  408da4:	cmp    bl,0xf6
  408da7:	sahf   
  408da8:	mov    ds:0xadff8c57,eax
  408dad:	add    DWORD PTR [eax],0x6cc288dc
  408db3:	push   0xc0af7501
  408db8:	jg     0x408e2a
  408dba:	test   al,0xef
  408dbc:	cli    
  408dbd:	mov    DWORD PTR [ebp-0x11aaf037],esi
  408dc3:	mov    ebx,0xa1217802
  408dc8:	mov    esi,0x464344cc
  408dcd:	(bad)  
  408dce:	mov    edi,0xb1dc7a82
  408dd3:	cld    
  408dd4:	mov    al,ds:0xe7938473
  408dd9:	test   al,0xd7
  408ddb:	test   DWORD PTR [ecx+0x6a],eax
  408dde:	and    ah,BYTE PTR [edi-0x33]
  408de1:	into   
  408de2:	pusha  
  408de3:	stos   DWORD PTR es:[edi],eax
  408de4:	in     al,dx
  408de5:	or     ebx,DWORD PTR [ebx-0x27]
  408de8:	mov    dl,0xde
  408dea:	or     dh,bl
  408dec:	mov    ah,0x57
  408dee:	or     al,0x45
  408df0:	fisub  WORD PTR [ebx-0x78]
  408df3:	call   0x829e0ace
  408df8:	in     al,dx
  408df9:	mov    ebx,ebp
  408dfb:	mov    BYTE PTR [esi],bh
  408dfd:	pop    esp
  408dfe:	or     BYTE PTR [ecx+0x7a],bh
  408e01:	mov    ds:0xb710eaf1,eax
  408e06:	les    ecx,FWORD PTR [edi-0x87b6798]
  408e0c:	mov    ds:0xc8a70a93,eax
  408e11:	out    dx,al
  408e12:	les    esp,FWORD PTR [ebp-0x64]
  408e15:	arpl   WORD PTR [ebx+0x5e885ef2],ax
  408e1b:	out    0x47,eax
  408e1d:	xchg   BYTE PTR [ecx+0x3],ch
  408e20:	cmp    BYTE PTR [ebx+0x3f055bb5],0x7b
  408e27:	test   al,0x57
  408e29:	ret    0xe0f2
  408e2c:	mov    dh,0x60
  408e2e:	xchg   esi,eax
  408e2f:	xchg   esi,edx
  408e31:	adc    DWORD PTR [edx+ebp*1-0x7bdc0694],ebx
  408e38:	out    dx,eax
  408e39:	jmp    0x408e04
  408e3b:	mov    esi,0xed231516
  408e40:	outs   dx,DWORD PTR ds:[esi]
  408e41:	jbe    0x408e1f
  408e43:	icebp  
  408e44:	cli    
  408e45:	aad    0x30
  408e47:	sub    DWORD PTR [esp+esi*4+0x1f0c15a],esi
  408e4e:	(bad)  
  408e4f:	or     eax,DWORD PTR [edi-0x3a]
  408e52:	ins    BYTE PTR es:[edi],dx
  408e53:	repz pop ds
  408e55:	inc    edi
  408e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e57:	mov    dl,0xaf
  408e59:	mov    eax,0x6391573b
  408e5e:	dec    esi
  408e5f:	mov    edi,0xece04462
  408e64:	(bad)  
  408e65:	cmp    BYTE PTR [edi+edx*1],cl
  408e68:	call   0xba26f1d6
  408e6d:	mov    WORD PTR [edx-0x2f6ed4e1],?
  408e73:	aaa    
  408e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e75:	adc    cl,BYTE PTR [ebp-0x54b5d557]
  408e7b:	imul   eax,DWORD PTR [esi-0x73],0x10b9c4fd
  408e82:	not    BYTE PTR [ebx+0x1a]
  408e85:	mov    WORD PTR [ecx],gs
  408e87:	int3   
  408e88:	es jmp 0x408efb
  408e8b:	fucomip st,st(5)
  408e8d:	mov    edx,0x21380661
  408e92:	inc    eax
  408e93:	jno    0x408e70
  408e95:	test   eax,0x84e0b838
  408e9a:	test   al,0x67
  408e9c:	cwde   
  408e9d:	dec    eax
  408e9e:	fisubr WORD PTR [ecx]
  408ea0:	push   es
  408ea1:	sub    al,0x2b
  408ea3:	mov    ebx,0x3acb64ee
  408ea8:	popf   
  408ea9:	outs   dx,DWORD PTR ds:[esi]
  408eaa:	add    dl,BYTE PTR [ebx+0x13]
  408ead:	fld    DWORD PTR [ebp+0x5f4fa60b]
  408eb3:	fstp   DWORD PTR [esi]
  408eb5:	push   eax
  408eb6:	push   0xaf583f4
  408ebb:	ds and eax,0xf2a7acb5
  408ec1:	in     al,0xda
  408ec3:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ec5:	std    
  408ec6:	sbb    BYTE PTR [ecx+esi*1],ch
  408ec9:	add    dl,BYTE PTR [esi-0x2955bf2f]
  408ecf:	mov    WORD PTR [ebp-0x6d],?
  408ed2:	sbb    edx,DWORD PTR [edx+edx*8-0x6c358ae0]
  408ed9:	mov    ds:0xb4667293,eax
  408ede:	sub    ecx,ecx
  408ee0:	xor    al,0xd8
  408ee2:	push   ebp
  408ee3:	mov    al,0xa6
  408ee5:	repz fs jg 0x408eea
  408ee9:	inc    edi
  408eea:	fwait
  408eeb:	out    dx,al
  408eec:	aad    0x3f
  408eee:	popf   
  408eef:	mov    edi,esp
  408ef1:	mov    edi,0x389af4f3
  408ef6:	ret    
  408ef7:	mov    ecx,cs
  408ef9:	in     al,0x96
  408efb:	push   esp
  408efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408efd:	and    al,0xa9
  408eff:	loop   0x408f71
  408f01:	push   esi
  408f02:	mov    dl,0x5
  408f04:	mov    edx,0x609f0c87
  408f09:	sar    BYTE PTR [eax-0x66],0x93
  408f0d:	mov    eax,0xa649d100
  408f12:	test   al,0x64
  408f14:	xor    eax,0xba3b8eb9
  408f19:	mov    dl,0xb0
  408f1b:	lea    edi,[ebp+0x5a]
  408f1e:	div    esi
  408f20:	jmp    0x408f95
  408f22:	mov    esi,0xe91d9978
  408f27:	push   cs
  408f28:	mov    ah,0x4d
  408f2a:	jmp    0x408ee4
  408f2c:	sbb    dh,ch
  408f2e:	mov    eax,ds:0xf3f00b76
  408f33:	push   ds
  408f34:	dec    ebp
  408f35:	fmulp  st(3),st
  408f37:	je     0x408f0c
  408f39:	and    cl,BYTE PTR [ebp+0x68]
  408f3c:	xchg   ebp,eax
  408f3d:	pop    ebp
  408f3e:	dec    esp
  408f3f:	idiv   BYTE PTR [si-0x1b8f]
  408f44:	add    BYTE PTR [eax+0x6e],bh
  408f47:	div    DWORD PTR [esi-0xda153a4]
  408f4d:	mov    eax,0xf0937dd4
  408f52:	mov    al,0x2c
  408f54:	mov    DWORD PTR [edi+esi*8+0x4cc9d280],esp
  408f5b:	cmp    bl,BYTE PTR [ebx-0x1e]
  408f5e:	jge    0x408f68
  408f60:	cmp    BYTE PTR [esi],al
  408f62:	fcmovb st,st(3)
  408f64:	jle    0x408f73
  408f66:	xchg   ecx,eax
  408f67:	push   edi
  408f68:	xor    eax,0x6da29309
  408f6d:	push   cs
  408f6e:	data16 es jmp 0x408f46
  408f72:	pop    es
  408f73:	mov    ebx,0x4010f1bc
  408f78:	outs   dx,BYTE PTR ds:[esi]
  408f79:	pop    esi
  408f7a:	or     eax,0x407d7b5c
  408f7f:	outs   dx,DWORD PTR ds:[esi]
  408f80:	jns    0x408f1a
  408f82:	lods   al,BYTE PTR ds:[esi]
  408f83:	cmp    BYTE PTR [edx],0x7d
  408f86:	scas   al,BYTE PTR es:[edi]
  408f87:	mov    edi,0x47e4dfa9
  408f8c:	pop    esp
  408f8d:	imul   ebx,DWORD PTR [esi-0x307a011c],0xffffff90
  408f94:	mov    ah,0xe4
  408f96:	stos   DWORD PTR es:[edi],eax
  408f97:	popf   
  408f98:	aaa    
  408f99:	hlt    
  408f9a:	test   al,0xb6
  408f9d:	jb     0x408f38
  408f9f:	mov    DWORD PTR [edi+0x45],0x4b25c151
  408fa6:	nop
  408fa7:	jg     0x408f47
  408fa9:	pop    ecx
  408faa:	adc    edx,DWORD PTR [ecx+0x7a]
  408fad:	icebp  
  408fae:	rol    edi,1
  408fb0:	push   0x3a
  408fb2:	jns    0x408f66
  408fb4:	(bad)  
  408fb5:	in     eax,0xc9
  408fb7:	aam    0xb9
  408fb9:	or     DWORD PTR [ecx-0x7a7cf171],ecx
  408fbf:	mov    ah,0x98
  408fc1:	ret    0x5759
  408fc4:	lea    eax,[ecx-0xe]
  408fc7:	jp     0x408fc4
  408fc9:	imul   ebx,DWORD PTR [ecx-0x39],0xa532d6bf
  408fd0:	mov    ah,0x8b
  408fd2:	xor    eax,0x9acf8d59
  408fd7:	push   edx
  408fd8:	or     al,0x14
  408fda:	or     al,0x82
  408fdc:	mov    bl,0x2a
  408fde:	ret    0xb4ba
  408fe1:	ja     0x408fd8
  408fe3:	pop    es
  408fe4:	(bad)  
  408fe5:	idiv   ebp
  408fe7:	rcl    DWORD PTR [edx],0xc2
  408fea:	fsubrp st(2),st
  408fec:	add    al,0x40
  408fee:	lods   eax,DWORD PTR ds:[esi]
  408fef:	sar    BYTE PTR [esi+0x58],1
  408ff2:	pusha  
  408ff3:	push   ds
  408ff4:	shufps xmm7,XMMWORD PTR [esi+esi*1-0x3eea6907],0x64
  408ffd:	xchg   ebp,eax
  408ffe:	jbe    0x408fa8
  409000:	(bad)  
  409002:	idiv   DWORD PTR [eax-0x4e2ab984]
  409008:	or     DWORD PTR [edi-0x16],0xffffffd4
  40900c:	(bad)  
  40900d:	mov    ch,BYTE PTR [ecx-0x54]
  409010:	ret    0xc961
  409013:	shl    al,cl
  409015:	jmp    0x446:0xb37e6418
  40901c:	or     cl,BYTE PTR [esp+edi*4-0x29]
  409020:	lock rcr BYTE PTR es:[edx+ecx*1],0xc1
  409026:	(bad)  
  409027:	dec    ebp
  409028:	xchg   esp,eax
  409029:	int3   
  40902a:	je     0x408fd2
  40902c:	sbb    dh,dh
  40902e:	fisubr WORD PTR [eax]
  409030:	and    esi,ecx
  409032:	pusha  
  409033:	jnp    0x408ff1
  409035:	test   BYTE PTR [ecx-0x2e804cbc],ah
  40903b:	inc    edx
  40903c:	dec    esi
  40903d:	repnz icebp 
  40903f:	ss aas 
  409041:	pop    esi
  409042:	adc    ah,BYTE PTR [ebx]
  409044:	adc    edi,DWORD PTR [edx-0xd]
  409047:	icebp  
  409048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409049:	shl    DWORD PTR [ecx],0x8d
  40904c:	dec    ebp
  40904d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40904e:	imul   edi,DWORD PTR [esp+ebp*1],0xffffff90
  409052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409053:	dec    ecx
  409054:	push   eax
  409055:	lock in eax,dx
  409057:	das    
  409058:	popf   
  409059:	ud2    
  40905b:	add    eax,0x5733b7da
  409060:	push   DWORD PTR [eax]
  409062:	xor    edi,DWORD PTR [edx+0x41]
  409065:	mov    edx,0x828eff87
  40906a:	dec    ecx
  40906b:	ficom  WORD PTR [edx+0x57]
  40906e:	cs inc edx
  409070:	aam    0xdf
  409072:	mov    ds:0xd1efba9d,eax
  409077:	and    eax,0x164afee7
  40907c:	xor    eax,0xc10b823b
  409081:	lahf   
  409082:	xchg   ebp,eax
  409083:	push   ss
  409084:	lds    esp,FWORD PTR [ebx-0x66]
  409087:	iret   
  409088:	outs   dx,DWORD PTR ds:[esi]
  409089:	scas   eax,DWORD PTR es:[edi]
  40908a:	aas    
  40908b:	pop    es
  40908c:	sbb    BYTE PTR [ebp-0x3c],ah
  40908f:	mov    dl,0x2f
  409091:	aam    0xe8
  409093:	arpl   WORD PTR [ebp-0x4e80200d],dx
  409099:	lock fiadd WORD PTR [ecx-0x779eaf2c]
  4090a0:	mov    esi,edi
  4090a2:	arpl   ax,bp
  4090a4:	dec    ebp
  4090a5:	mov    al,ds:0x871bbf5a
  4090aa:	xor    DWORD PTR [ecx-0x5d],0xd9b50caa
  4090b1:	or     eax,0x2c8870c9
  4090b6:	les    edi,FWORD PTR [ecx+0x77d24ecf]
  4090bc:	inc    ebx
  4090bd:	sub    al,0x7d
  4090bf:	sbb    eax,0x61b3f048
  4090c4:	loop   0x40905c
  4090c6:	lods   eax,DWORD PTR ds:[esi]
  4090c7:	inc    edi
  4090c8:	adc    BYTE PTR [edi-0x2b08a821],dh
  4090ce:	out    0x3d,al
  4090d0:	cmc    
  4090d1:	das    
  4090d2:	cmc    
  4090d3:	(bad)  [edi]
  4090d5:	dec    edi
  4090d6:	sbb    al,0xed
  4090d8:	mov    esp,0x100fa36
  4090dd:	xchg   DWORD PTR [ebp+0x3117af9c],esi
  4090e3:	cld    
  4090e4:	cmp    DWORD PTR [ebp-0x22dd47d3],0xbb0cb05f
  4090ee:	aad    0x16
  4090f0:	fsubr  st,st(2)
  4090f2:	cld    
  4090f3:	and    BYTE PTR [ebx],dh
  4090f5:	mov    ecx,0xfa7c68c3
  4090fa:	and    esi,DWORD PTR ds:0x63e0ad5b
  409100:	sub    eax,DWORD PTR [edi+0x60]
  409103:	cld    
  409104:	add    al,0xfb
  409106:	aam    0x6
  409108:	inc    ebp
  409109:	jae    0x40911a
  40910b:	add    ch,ah
  40910d:	jne    0x40910f
  40910f:	pushf  
  409110:	in     eax,0x84
  409112:	test   al,0xcd
  409114:	mov    ch,0xdc
  409116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409117:	stc    
  409118:	imul   edi,eax,0xc670a6f7
  40911e:	xchg   DWORD PTR [eax],edi
  409120:	push   ebx
  409121:	nop
  409122:	mov    ebx,esp
  409124:	cmp    al,0x49
  409126:	mov    ds:0xb3fcdc89,eax
  40912b:	test   eax,0x507b0b3e
  409130:	lds    edx,FWORD PTR [ebx-0x38]
  409133:	mov    esp,0x585be1f5
  409138:	(bad)  [ecx+0x37a4a9b]
  40913e:	rol    BYTE PTR [ecx+0x3022384a],1
  409144:	adc    BYTE PTR [ebx],al
  409146:	push   es
  409147:	lock das 
  409149:	rcl    BYTE PTR [esp+ebx*8-0x101cf4fa],cl
  409150:	inc    edx
  409151:	add    dh,BYTE PTR [edi]
  409153:	jo     0x409139
  409155:	pusha  
  409156:	pcmpeqw mm1,QWORD PTR [esp+edi*4+0x7d337715]
  40915e:	loope  0x4091de
  409160:	je     0x4091bb
  409162:	or     DWORD PTR ds:0xb1ac3f99,esp
  409168:	xlat   BYTE PTR ds:[ebx]
  409169:	fcom   DWORD PTR [ebx+0x36471480]
  40916f:	jg     0x409176
  409171:	or     al,0xf8
  409173:	or     ebp,edi
  409175:	pop    esi
  409176:	push   edi
  409177:	(bad)  
  409178:	gs pop ds
  40917a:	imul   esi,DWORD PTR [edi-0x76],0x316facca
  409181:	sub    edx,ebp
  409183:	gs sbb edx,edx
  409186:	scas   al,BYTE PTR es:[edi]
  409187:	repnz bound esp,QWORD PTR [edx]
  40918a:	and    eax,0xbb8024b
  40918f:	and    ah,BYTE PTR [esi]
  409191:	inc    edi
  409192:	ret    
  409193:	jne    0x409126
  409195:	jecxz  0x4091dd
  409197:	test   eax,0x9d5649cb
  40919c:	int    0x7a
  40919e:	push   cs
  40919f:	or     ebp,ecx
  4091a1:	inc    esp
  4091a2:	in     eax,0xc8
  4091a4:	mov    ds:0x3d2044bc,al
  4091a9:	push   edi
  4091aa:	dec    esp
  4091ab:	iret   
  4091ac:	pushf  
  4091ad:	cmp    esp,esp
  4091af:	push   es
  4091b0:	inc    eax
  4091b1:	mov    ebp,0xd3a71ea
  4091b6:	repnz lea ebx,[esi]
  4091b9:	jmp    0x4091c1
  4091bb:	call   0x6548:0x4a4d33c3
  4091c2:	xor    eax,0xd402416a
  4091c7:	data16 ins BYTE PTR es:[edi],dx
  4091c9:	sbb    DWORD PTR [edi],ebx
  4091cb:	outs   dx,BYTE PTR ds:[esi]
  4091cc:	dec    ah
  4091ce:	inc    ebx
  4091cf:	inc    DWORD PTR fs:[edx*2-0x29ca5956]
  4091d7:	or     eax,0x7c6a6d3b
  4091dc:	test   bl,0xbc
  4091df:	cmp    eax,0x3d0ecb30
  4091e4:	popf   
  4091e5:	das    
  4091e6:	jmp    0x4091b9
  4091e8:	cmp    cl,BYTE PTR [esi]
  4091ea:	(bad)  [ecx+0x23]
  4091ed:	or     cl,bh
  4091ef:	xchg   esp,eax
  4091f0:	cmp    al,0x4c
  4091f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091f3:	push   ebx
  4091f4:	cmp    eax,0x5e3c5584
  4091f9:	ja     0x4091d1
  4091fb:	mov    esp,0x6c9f4134
  409200:	nop
  409201:	iret   
  409202:	or     BYTE PTR [ebx+0x43],0xd0
  409206:	in     eax,0x9a
  409208:	gs pop eax
  40920a:	sub    BYTE PTR [eax],bl
  40920c:	add    esi,edx
  40920e:	ins    BYTE PTR es:[edi],dx
  40920f:	xchg   esi,eax
  409210:	cmc    
  409211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409212:	pop    edx
  409213:	call   0xe003:0xd7491feb
  40921a:	xlat   BYTE PTR ds:[ebx]
  40921b:	popa   
  40921c:	pop    edi
  40921d:	add    ah,BYTE PTR [edx+0x1b48596]
  409223:	or     ch,BYTE PTR [ebx]
  409225:	repnz test BYTE PTR [edx-0x13],ah
  409229:	xlat   BYTE PTR ds:[ebx]
  40922a:	cmp    al,ch
  40922c:	dec    esi
  40922d:	call   0x475ee04d
  409232:	das    
  409233:	ret    0x196d
  409236:	sbb    BYTE PTR [edi],ah
  409238:	and    cl,BYTE PTR [edx+0x72]
  40923b:	cwde   
  40923c:	sti    
  40923d:	jg     0x409249
  40923f:	ds repz fwait
  409242:	and    eax,0xdcf6dd64
  409247:	test   eax,0xd4789107
  40924c:	daa    
  40924d:	ins    DWORD PTR es:[edi],dx
  40924e:	or     edi,DWORD PTR [eax+0x49]
  409251:	adc    eax,0x99d5aa07
  409256:	ret    
  409257:	sub    DWORD PTR [esi],edi
  409259:	leave  
  40925a:	xor    eax,0x89254441
  40925f:	sbb    cl,al
  409261:	inc    BYTE PTR [edi]
  409263:	lahf   
  409264:	sub    BYTE PTR [eax+0x3a2b9bb1],ah
  40926a:	repz out 0xc2,al
  40926d:	jnp    0x409292
  40926f:	cmp    bl,BYTE PTR gs:[ebx-0xd]
  409273:	cmp    eax,0x3cc67564
  409278:	std    
  409279:	retf   
  40927a:	jbe    0x409299
  40927c:	inc    esi
  40927d:	icebp  
  40927e:	enter  0x8d7,0x6
  409282:	sbb    ebx,DWORD PTR ds:0xf8d0e5ef
  409288:	push   esp
  409289:	stos   DWORD PTR es:[edi],eax
  40928a:	sub    BYTE PTR ss:[ebp+edx*1-0x456bdd99],bh
  409292:	ret    
  409293:	adc    eax,ebx
  409295:	imul   edi,DWORD PTR [edx-0x328244c1],0x226d5be
  40929f:	mov    edi,0x76c193ac
  4092a4:	leave  
  4092a5:	cwde   
  4092a6:	inc    eax
  4092a7:	xor    al,0x6c
  4092a9:	dec    esp
  4092aa:	jmp    0x8a39:0x2c637d46
  4092b1:	dec    ebx
  4092b2:	mov    ebp,ds
  4092b4:	pop    eax
  4092b5:	push   edi
  4092b6:	rcl    DWORD PTR [ecx],cl
  4092b8:	cmp    eax,0xfaec743f
  4092bd:	jge    0x40931f
  4092bf:	addr16 mov dl,0x78
  4092c2:	ins    DWORD PTR es:[edi],dx
  4092c3:	pop    ebx
  4092c4:	mov    BYTE PTR [ebp+0x40],ch
  4092c7:	xchg   ecx,eax
  4092c8:	pop    ebp
  4092ca:	(bad)  
  4092cc:	dec    esi
  4092cd:	xchg   esp,eax
  4092ce:	leave  
  4092cf:	addr16 loop 0x409329
  4092d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092d3:	ficom  DWORD PTR [edx+0x61]
  4092d6:	xchg   ecx,eax
  4092d7:	outs   dx,BYTE PTR ds:[esi]
  4092d8:	dec    eax
  4092d9:	inc    edx
  4092da:	pop    esi
  4092db:	mov    dh,0x56
  4092dd:	loope  0x40933d
  4092df:	loope  0x4092ef
  4092e1:	fs fucomi st,st(5)
  4092e4:	mov    ch,0x35
  4092e6:	ins    DWORD PTR es:[edi],dx
  4092e7:	daa    
  4092e8:	mov    eax,0x78d01d30
  4092ed:	loopne 0x4092ec
  4092ef:	sub    al,0x9b
  4092f1:	stc    
  4092f2:	sub    ebx,DWORD PTR [eax-0x7]
  4092f5:	imul   BYTE PTR [esi+ecx*8+0x797736f1]
  4092fc:	push   es
  4092fd:	sbb    ch,BYTE PTR [ecx]
  4092ff:	pop    esp
  409300:	cmp    al,0x1
  409302:	mov    cl,0x2e
  409304:	xchg   edx,eax
  409305:	mov    cs:0x59ead25e,eax
  40930b:	pop    ebx
  40930c:	hlt    
  40930d:	das    
  40930e:	and    DWORD PTR [edi],ebx
  409310:	rol    BYTE PTR [ecx-0x68],0x3a
  409314:	mov    DWORD PTR [ebp+0x6570b7d9],esi
  40931a:	ret    
  40931b:	adc    al,0xff
  40931d:	shr    esi,cl
  40931f:	cs jmp 0x4092c8
  409322:	jbe    0x4092a5
  409324:	xor    al,0xc4
  409326:	ss xchg ebp,esp
  409329:	je     0x40939f
  40932b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40932c:	mov    ch,0xbb
  40932e:	aad    0x25
  409330:	jge    0x4092c6
  409332:	ss push esi
  409334:	sbb    eax,0xd70de72a
  409339:	and    al,BYTE PTR [ecx+0x52]
  40933c:	mov    dl,BYTE PTR [esi+eax*8-0x66]
  409340:	retf   
  409341:	fs mov ebp,0xb1b98882
  409347:	mov    dh,0x3b
  409349:	jmp    0x7f32:0x86180ad6
  409350:	xor    eax,DWORD PTR [ebp+0x1d]
  409353:	xor    DWORD PTR [esi],ebp
  409355:	aam    0x9
  409357:	inc    esi
  409358:	mov    ch,0x80
  40935a:	add    DWORD PTR [esi+0x36f8a4a0],esp
  409360:	ins    DWORD PTR es:[edi],dx
  409361:	push   es
  409362:	scas   eax,DWORD PTR es:[edi]
  409363:	push   esp
  409364:	lds    esi,FWORD PTR [edi+0x1a]
  409367:	ins    DWORD PTR es:[edi],dx
  409368:	push   eax
  409369:	imul   eax,eax,0x567344f1
  40936f:	pop    ecx
  409370:	inc    ebx
  409371:	pop    ebx
  409372:	sti    
  409373:	popf   
  409374:	jge    0x40934d
  409376:	add    eax,0x504c7f07
  40937b:	stos   BYTE PTR es:[edi],al
  40937c:	and    al,0xb7
  40937e:	inc    esi
  40937f:	sbb    esp,DWORD PTR [esi+0x7de51492]
  409385:	aas    
  409386:	stos   BYTE PTR es:[edi],al
  409387:	mov    dh,0xa8
  409389:	loop   0x409354
  40938b:	mov    ebp,0xbb7f3525
  409390:	sbb    cl,BYTE PTR [ecx-0x189f7e89]
  409396:	clc    
  409397:	inc    eax
  409398:	shr    BYTE PTR [eax-0x76d10323],0x29
  40939f:	mov    esp,DWORD PTR [ecx]
  4093a1:	dec    ebx
  4093a2:	arpl   WORD PTR [ecx],bx
  4093a4:	lahf   
  4093a5:	or     eax,0x625b89a3
  4093aa:	dec    edx
  4093ab:	mov    ds:0x395a9086,eax
  4093b0:	lea    edx,[esp+ebx*4-0x37]
  4093b4:	mov    eax,0xbc86ec84
  4093b9:	aaa    
  4093ba:	ja     0x40942b
  4093bc:	or     esp,0xd
  4093bf:	push   eax
  4093c0:	pop    es
  4093c1:	lods   eax,DWORD PTR ds:[esi]
  4093c2:	hlt    
  4093c3:	jne    0x4093c4
  4093c5:	gs fcmovb st,st(3)
  4093c8:	push   esp
  4093c9:	xchg   ebp,eax
  4093ca:	xor    al,0x8f
  4093cc:	(bad)  
  4093cd:	mov    dl,0x61
  4093cf:	mov    dh,0x87
  4093d1:	pop    edx
  4093d2:	lahf   
  4093d3:	popa   
  4093d4:	mov    ds:0xff0e2039,al
  4093d9:	sbb    BYTE PTR [ebp+0x74],al
  4093dc:	push   ds
  4093dd:	xlat   BYTE PTR ds:[ebx]
  4093de:	(bad)  
  4093df:	(bad)  
  4093e0:	push   edx
  4093e1:	test   bl,0x59
  4093e4:	jae    0x409444
  4093e6:	inc    edi
  4093e7:	arpl   WORD PTR [edi-0x5a],cx
  4093ea:	out    dx,al
  4093eb:	je     0x4093ea
  4093ed:	cmp    BYTE PTR [ebp+edi*8+0x6e],dh
  4093f1:	or     esp,DWORD PTR [ebp-0x9cffba2]
  4093f7:	test   eax,0x3555fac8
  4093fc:	xor    eax,edx
  4093fe:	fisttp WORD PTR [edi-0xc]
  409401:	dec    esp
  409402:	popf   
  409403:	inc    esp
  409404:	in     eax,0x5b
  409406:	rcr    DWORD PTR [ebx+0xf],cl
  409409:	test   eax,0x90c18016
  40940e:	xchg   DWORD PTR [ecx+ebx*8+0x79a56465],esi
  409415:	xor    BYTE PTR [ebx],0xfc
  409418:	dec    edx
  409419:	push   ebp
  40941a:	imul   edi,DWORD PTR [esi-0x59],0x4c9a5658
  409421:	cdq    
  409422:	ins    BYTE PTR es:[edi],dx
  409423:	mov    ah,0x77
  409425:	icebp  
  409426:	adc    dl,0x61
  409429:	arpl   cx,sp
  40942b:	sti    
  40942c:	enter  0x5ef4,0xba
  409430:	inc    ecx
  409431:	sub    ebx,DWORD PTR [ebx+ecx*8]
  409434:	push   ebx
  409435:	mov    bl,0x9e
  409437:	xchg   ecx,eax
  409438:	inc    esi
  409439:	sbb    BYTE PTR [ecx],bh
  40943b:	inc    esi
  40943c:	push   esp
  40943d:	pop    esi
  40943e:	je     0x40944c
  409444:	mov    eax,DWORD PTR [ebp+0x8]
  409447:	jmp    0x409453
  40944c:	mov    eax,DWORD PTR [ebp-0x4]
  40944f:	xor    eax,ecx
  409451:	add    eax,edx
  409453:	leave  
  409454:	ret    0x4
  409457:	push   ebp
  409458:	mov    ebp,esp
  40945a:	sub    esp,0x38
  40945d:	mov    DWORD PTR ds:0x42e020,0x15
  409467:	cmp    DWORD PTR ds:0x42e020,0x0
  40946e:	je     0x4094bf
  409474:	cmp    DWORD PTR ds:0x42e020,0xa
  40947b:	jg     0x4094bf
  409481:	jmp    0x409491
  409486:	push   0x1284
  40948b:	call   DWORD PTR ds:0x43490f
  409491:	cmp    DWORD PTR ds:0x42e020,0xb
  409498:	jne    0x4094ac
  40949e:	xor    eax,eax
  4094a0:	xor    eax,DWORD PTR ds:0x42e020
  4094a6:	dec    eax
  4094a7:	mov    ds:0x42e020,eax
  4094ac:	xor    eax,eax
  4094ae:	xor    eax,DWORD PTR ds:0x42e020
  4094b4:	dec    eax
  4094b5:	mov    ds:0x42e020,eax
  4094ba:	jmp    0x409467
  4094bf:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  4094c6:	mov    eax,ds:0x42e020
  4094cb:	sub    DWORD PTR ds:0x42e010,eax
  4094d1:	push   ebx
  4094d2:	sbb    DWORD PTR ds:0x42e018,edx
  4094d8:	mov    DWORD PTR [ebp-0xc],0xf89c8580
  4094df:	mov    DWORD PTR ds:0x430018,0x1c
  4094e9:	cmp    DWORD PTR ds:0x430018,0x0
  4094f0:	je     0x409540
  4094f6:	cmp    DWORD PTR ds:0x430018,0xb
  4094fd:	ja     0x409540
  409503:	jmp    0x409518
  409508:	push   0x434027
  40950d:	push   0x400000
  409512:	call   DWORD PTR ds:0x434917
  409518:	cmp    DWORD PTR ds:0x430018,0xc
  40951f:	jne    0x409530
  409525:	mov    eax,ds:0x430018
  40952a:	dec    eax
  40952b:	mov    ds:0x430018,eax
  409530:	mov    eax,ds:0x430018
  409535:	dec    eax
  409536:	mov    ds:0x430018,eax
  40953b:	jmp    0x4094e9
  409540:	mov    eax,DWORD PTR [ebp-0x4]
  409543:	xor    DWORD PTR ds:0x42f018,0x430004
  40954d:	push   esi
  40954e:	add    DWORD PTR ds:0x430000,0x7b7d
  409558:	mov    esi,0x751089d
  40955d:	xor    eax,esi
  40955f:	or     DWORD PTR ds:0x432010,0x1402
  409569:	push   edi
  40956a:	mov    edi,0x3272e4
  40956f:	dec    DWORD PTR ds:0x42f018
  409575:	add    eax,edi
  409577:	sbb    DWORD PTR ds:0x430010,0x432014
  409581:	mov    DWORD PTR [ebp-0x1c],eax
  409584:	mov    eax,DWORD PTR [ebp+0x14]
  409587:	add    DWORD PTR ds:0x432018,0x30e0
  409591:	test   eax,eax
  409593:	mov    DWORD PTR ds:0x42e014,0x1e76
  40959d:	je     0x4095bb
  4095a3:	mov    eax,DWORD PTR [ebp+0x14]
  4095a6:	and    ebx,DWORD PTR ds:0x43101c
  4095ac:	mov    eax,DWORD PTR [eax]
  4095ae:	add    DWORD PTR ds:0x430014,0x50e4
  4095b8:	mov    DWORD PTR [ebp-0x1c],eax
  4095bb:	and    DWORD PTR ds:0x42e010,0x0
  4095c5:	mov    eax,ds:0x42e010
  4095ca:	inc    eax
  4095cb:	mov    ds:0x42e010,eax
  4095d0:	cmp    DWORD PTR ds:0x42e010,0x10
  4095d7:	jb     0x409615
  4095dd:	jmp    0x4095f0
  4095e2:	push   DWORD PTR [ebp-0x14]
  4095e5:	push   0x371c
  4095ea:	call   DWORD PTR ds:0x43491b
  4095f0:	cmp    DWORD PTR ds:0x42e010,0xf
  4095f7:	jne    0x409608
  4095fd:	mov    eax,ds:0x42e010
  409602:	inc    eax
  409603:	mov    ds:0x42e010,eax
  409608:	cmp    DWORD PTR ds:0x42e010,0x1e
  40960f:	jb     0x4095c5
  409615:	mov    eax,DWORD PTR [ebp-0x4]
  409618:	movzx  ebx,WORD PTR ds:0x432000
  40961f:	sub    ebx,DWORD PTR ds:0x43101c
  409625:	mov    DWORD PTR ds:0x432000,ebx
  40962b:	xor    eax,esi
  40962d:	and    DWORD PTR ds:0x432014,0xc31
  409637:	add    eax,edi
  409639:	mov    DWORD PTR [ebp-0x8],eax
  40963c:	mov    eax,ds:0x41d05a
  409641:	xor    ebx,ebx
  409643:	or     ebx,DWORD PTR ds:0x41d09a
  409649:	sub    eax,ebx
  40964b:	imul   eax,DWORD PTR [eax+ebx*1]
  40964f:	mov    eax,DWORD PTR [ebp-0xc]
  409652:	and    DWORD PTR ds:0x432018,0x0
  40965c:	jmp    0x40966e
  409661:	mov    ebx,DWORD PTR ds:0x432018
  409667:	inc    ebx
  409668:	mov    DWORD PTR ds:0x432018,ebx
  40966e:	cmp    DWORD PTR ds:0x432018,0x19
  409675:	jae    0x4096b7
  40967b:	cmp    DWORD PTR ds:0x432018,0xb
  409682:	ja     0x4096b7
  409688:	jmp    0x409698
  40968d:	push   0x434027
  409692:	call   DWORD PTR ds:0x43491f
  409698:	cmp    DWORD PTR ds:0x432018,0xa
  40969f:	jne    0x4096b2
  4096a5:	mov    ebx,DWORD PTR ds:0x432018
  4096ab:	inc    ebx
  4096ac:	mov    DWORD PTR ds:0x432018,ebx
  4096b2:	jmp    0x409661
  4096b7:	xor    eax,esi
  4096b9:	and    DWORD PTR ds:0x431010,edi
  4096bf:	add    eax,edi
  4096c1:	and    DWORD PTR ds:0x42e010,0x6068
  4096cb:	mov    DWORD PTR [ebp-0x24],eax
  4096ce:	xor    ebx,DWORD PTR ds:0x432014
  4096d4:	mov    eax,DWORD PTR [ebp-0x4]
  4096d7:	add    ebx,DWORD PTR ds:0x42e008
  4096dd:	xor    eax,esi
  4096df:	add    eax,edi
  4096e1:	sub    DWORD PTR ds:0x42e000,ebx
  4096e7:	mov    DWORD PTR [ebp-0x30],eax
  4096ea:	mov    ebx,DWORD PTR [ebp-0x4]
  4096ed:	sub    DWORD PTR ds:0x42e000,ebx
  4096f3:	xor    ebx,esi
  4096f5:	add    ebx,edi
  4096f7:	neg    eax
  4096f9:	mov    eax,DWORD PTR [ebp-0x24]
  4096fc:	sub    eax,edi
  4096fe:	lea    ecx,[ebx-0x3272e4]
  409704:	xor    eax,esi
  409706:	xor    ecx,esi
  409708:	cmp    ecx,eax
  40970a:	mov    DWORD PTR ds:0x42f00c,0xec8
  409714:	je     0x4099a1
  40971a:	mov    eax,DWORD PTR [ebp-0x4]
  40971d:	xor    eax,esi
  40971f:	mov    DWORD PTR ds:0x432000,0x24d7
  409729:	add    eax,edi
  40972b:	cmp    ebx,eax
  40972d:	jne    0x4098f1
  409733:	push   DWORD PTR [ebp+0x8]
  409736:	or     DWORD PTR ds:0x43000c,0x430014
  409740:	call   0x407014
  409745:	movzx  ecx,BYTE PTR ds:0x431008
  40974c:	add    DWORD PTR ds:0x42e01c,ecx
  409752:	mov    DWORD PTR [ebp-0x14],eax
  409755:	movzx  eax,BYTE PTR ds:0x43101c
  40975c:	xor    DWORD PTR ds:0x42e024,eax
  409762:	mov    eax,DWORD PTR [ebp-0x4]
  409765:	add    ecx,DWORD PTR ds:0x432014
  40976b:	mov    ecx,DWORD PTR [ebp-0x14]
  40976e:	xor    eax,esi
  409770:	add    eax,edi
  409772:	cmp    ecx,eax
  409774:	mov    DWORD PTR ds:0x42e01c,0x3286
  40977e:	je     0x409a0c
  409784:	push   DWORD PTR [ebp-0x14]
  409787:	and    DWORD PTR ds:0x431004,0x7397
  409791:	push   DWORD PTR [ebp+0x8]
  409794:	xor    DWORD PTR ds:0x430014,0x42e00c
  40979e:	call   0x40eb4e
  4097a3:	mov    DWORD PTR [ebp-0x14],eax
  4097a6:	or     eax,ecx
  4097a8:	mov    eax,DWORD PTR [ebp-0x4]
  4097ab:	mov    DWORD PTR ds:0x42e010,0x1a
  4097b5:	cmp    DWORD PTR ds:0x42e010,0x0
  4097bc:	je     0x409801
  4097c2:	cmp    DWORD PTR ds:0x42e010,0x27
  4097c9:	jb     0x409801
  4097cf:	jmp    0x4097ed
  4097d4:	push   DWORD PTR [ebp-0x28]
  4097d7:	push   DWORD PTR [ebp-0xc]
  4097da:	push   0x88bd
  4097df:	push   DWORD PTR [ebp-0x28]
  4097e2:	push   0x4a39
  4097e7:	call   DWORD PTR ds:0x4348af
  4097ed:	xor    ecx,ecx
  4097ef:	or     ecx,DWORD PTR ds:0x42e010
  4097f5:	dec    ecx
  4097f6:	mov    DWORD PTR ds:0x42e010,ecx
  4097fc:	jmp    0x4097b5
  409801:	mov    ecx,DWORD PTR [ebp-0x14]
  409804:	xor    eax,esi
  409806:	inc    DWORD PTR ds:0x432008
  40980c:	add    eax,edi
  40980e:	mov    DWORD PTR ds:0x42e028,0x634f
  409818:	cmp    ecx,eax
  40981a:	mov    DWORD PTR ds:0x42f00c,0x55f
  409824:	je     0x409a0c
  40982a:	mov    eax,DWORD PTR [ebp-0x14]
  40982d:	mov    eax,DWORD PTR [eax+0x18]
  409830:	mov    DWORD PTR [ebp-0x24],eax
  409833:	mov    eax,DWORD PTR [ebp-0x14]
  409836:	inc    ecx
  409837:	mov    ecx,DWORD PTR [ebp+0x8]
  40983a:	sub    DWORD PTR ds:0x430000,0x42e008
  409844:	add    ecx,DWORD PTR [eax+0x20]
  409847:	and    DWORD PTR ds:0x431000,0x0
  409851:	jmp    0x409861
  409856:	mov    eax,ds:0x431000
  40985b:	inc    eax
  40985c:	mov    ds:0x431000,eax
  409861:	cmp    DWORD PTR ds:0x431000,0x1d
  409868:	jae    0x409898
  40986e:	cmp    DWORD PTR ds:0x431000,0x27
  409875:	jbe    0x409898
  40987b:	jmp    0x409893
  409880:	push   0x6890
  409885:	push   0x8109
  40988a:	push   DWORD PTR [ebp-0x1c]
  40988d:	call   DWORD PTR ds:0x4348b3
  409893:	jmp    0x409856
  409898:	mov    DWORD PTR [ebp-0x2c],ecx
  40989b:	adc    eax,eax
  40989d:	mov    eax,DWORD PTR [ebp-0x14]
  4098a0:	sbb    ecx,DWORD PTR ds:0x432010
  4098a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4098a9:	xor    DWORD PTR ds:0x42e01c,0x42f000
  4098b3:	add    ecx,DWORD PTR [eax+0x24]
  4098b6:	dec    eax
  4098b7:	mov    DWORD PTR [ebp-0x34],ecx
  4098ba:	sbb    eax,ecx
  4098bc:	mov    eax,DWORD PTR [ebp-0x14]
  4098bf:	or     ecx,DWORD PTR ds:0x42e01c
  4098c5:	mov    ecx,DWORD PTR [ebp+0x8]
  4098c8:	xor    DWORD PTR ds:0x431018,0x773f
  4098d2:	add    ecx,DWORD PTR [eax+0x1c]
  4098d5:	mov    DWORD PTR ds:0x430008,0x460
  4098df:	mov    DWORD PTR [ebp-0x14],ecx
  4098e2:	mov    DWORD PTR ds:0x43000c,0x4e44
  4098ec:	jmp    0x4099d4
  4098f1:	mov    eax,DWORD PTR [ebp-0x2c]
  4098f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4098f7:	add    ecx,DWORD PTR [eax+ebx*4]
  4098fa:	or     DWORD PTR ds:0x42e000,0x7cb4
  409904:	mov    DWORD PTR [ebp-0x28],ecx
  409907:	and    DWORD PTR ds:0x43101c,0x0
  409911:	jmp    0x409925
  409916:	xor    ecx,ecx
  409918:	or     ecx,DWORD PTR ds:0x43101c
  40991e:	inc    ecx
  40991f:	mov    DWORD PTR ds:0x43101c,ecx
  409925:	cmp    DWORD PTR ds:0x43101c,0x16
  40992c:	jae    0x40998a
  409932:	cmp    DWORD PTR ds:0x43101c,0x4
  409939:	ja     0x40998a
  40993f:	jmp    0x40996b
  409944:	push   0x430018
  409949:	push   0x748b
  40994e:	push   DWORD PTR [ebp-0xc]
  409951:	push   0x836d
  409956:	push   0x5d47
  40995b:	push   0x5d0d
  409960:	push   0x3519
  409965:	call   DWORD PTR ds:0x4348df
  40996b:	cmp    DWORD PTR ds:0x43101c,0x3
  409972:	jne    0x409985
  409978:	mov    ecx,DWORD PTR ds:0x43101c
  40997e:	inc    ecx
  40997f:	mov    DWORD PTR ds:0x43101c,ecx
  409985:	jmp    0x409916
  40998a:	mov    eax,DWORD PTR [ebp-0x4]
  40998d:	mov    ecx,DWORD PTR [ebp-0x28]
  409990:	xor    eax,esi
  409992:	add    eax,edi
  409994:	cmp    ecx,eax
  409996:	je     0x4099d4
  40999c:	jmp    0x4099c5
  4099a1:	mov    eax,DWORD PTR [ebp-0x4]
  4099a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4099a7:	xor    eax,esi
  4099a9:	add    eax,edi
  4099ab:	cmp    ecx,eax
  4099ad:	mov    eax,DWORD PTR [ebp-0x4]
  4099b0:	je     0x409a0f
  4099b6:	mov    ecx,DWORD PTR [ebp-0x30]
  4099b9:	xor    eax,esi
  4099bb:	add    eax,edi
  4099bd:	cmp    ecx,eax
  4099bf:	je     0x409a18
  4099c5:	lea    eax,[ebp-0x8]
  4099c8:	push   eax
  4099c9:	push   DWORD PTR [ebp-0x28]
  4099cc:	push   DWORD PTR [ebp+0xc]
  4099cf:	call   0x41112c
  4099d4:	mov    eax,DWORD PTR [ebp-0x4]
  4099d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4099da:	xor    eax,esi
  4099dc:	add    eax,edi
  4099de:	cmp    ecx,eax
  4099e0:	je     0x4099fb
  4099e6:	mov    eax,DWORD PTR [ebp-0x34]
  4099e9:	movzx  eax,WORD PTR [eax+ebx*2]
  4099ed:	mov    ecx,DWORD PTR [ebp-0x14]
  4099f0:	mov    eax,DWORD PTR [ecx+eax*4]
  4099f3:	mov    DWORD PTR [ebp-0x38],eax
  4099f6:	jmp    0x4099a1
  4099fb:	mov    eax,DWORD PTR [ebp-0xc]
  4099fe:	xor    eax,esi
  409a00:	lea    ebx,[ebx+eax*1+0x3272e4]
  409a07:	jmp    0x4096f7
  409a0c:	mov    eax,DWORD PTR [ebp-0x4]
  409a0f:	xor    eax,esi
  409a11:	add    eax,edi
  409a13:	jmp    0x40e27b
  409a18:	mov    eax,DWORD PTR [ebp-0x38]
  409a1b:	add    eax,DWORD PTR [ebp+0x8]
  409a1e:	mov    DWORD PTR [ebp-0x18],eax
  409a21:	mov    eax,DWORD PTR [ebp-0x1c]
  409a24:	test   eax,eax
  409a26:	je     0x409ac0
  409a2c:	mov    DWORD PTR [ebp-0x20],0x0
  409a33:	push   0x3
  409a35:	xor    edx,edx
  409a37:	pop    edx
  409a38:	add    edx,0x8
  409a3b:	push   edx
  409a3c:	pop    ecx
  409a3d:	push   0x6
  409a3f:	dec    ecx
  409a40:	pop    ebx
  409a41:	dec    ebx
  409a42:	xchg   ebx,ecx
  409a44:	sub    ebx,ecx
  409a46:	xchg   ebx,ecx
  409a48:	dec    ecx
  409a49:	mov    eax,DWORD PTR [ebp-0x1c]
  409a4c:	imul   eax,ecx
  409a4f:	sub    esp,eax
  409a51:	mov    DWORD PTR [ebp-0x20],esp
  409a54:	mov    eax,DWORD PTR [ebp-0x4]
  409a57:	xor    eax,esi
  409a59:	add    eax,edi
  409a5b:	jmp    0x409a99
  409a60:	mov    ecx,DWORD PTR [ebp-0xc]
  409a63:	mov    eax,DWORD PTR [ebp+0x8]
  409a66:	mov    edx,DWORD PTR [ebp+0x14]
  409a69:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409a6d:	xor    ecx,esi
  409a6f:	add    ecx,edi
  409a71:	xor    edx,edx
  409a73:	div    ecx
  409a75:	mov    ecx,DWORD PTR [ebp-0x4]
  409a78:	xor    ecx,esi
  409a7a:	lea    eax,[ecx+eax*1+0x3272e4]
  409a81:	mov    ecx,DWORD PTR [ebp+0x8]
  409a84:	mov    edx,DWORD PTR [ebp-0x20]
  409a87:	mov    DWORD PTR [edx+ecx*4],eax
  409a8a:	mov    eax,DWORD PTR [ebp-0xc]
  409a8d:	mov    ecx,DWORD PTR [ebp+0x8]
  409a90:	xor    eax,esi
  409a92:	lea    eax,[eax+ecx*1+0x3272e4]
  409a99:	mov    DWORD PTR [ebp+0x8],eax
  409a9c:	mov    eax,DWORD PTR [ebp-0xc]
  409a9f:	mov    ecx,DWORD PTR [ebp+0x14]
  409aa2:	xor    eax,esi
  409aa4:	add    eax,edi
  409aa6:	imul   eax,DWORD PTR [ecx]
  409aa9:	mov    ecx,DWORD PTR [ebp-0x4]
  409aac:	mov    edx,DWORD PTR [ebp+0x8]
  409aaf:	xor    ecx,esi
  409ab1:	lea    ecx,[ecx+edx*1+0x3272e4]
  409ab8:	cmp    ecx,eax
  409aba:	jne    0x409a60
  409ac0:	mov    eax,DWORD PTR [ebp-0x4]
  409ac3:	xor    eax,esi
  409ac5:	add    eax,edi
  409ac7:	mov    DWORD PTR [ebp-0x10],eax
  409aca:	mov    ebx,0x65655
  409acf:	add    ebx,0x3234
  409ad5:	xchg   ebx,esi
  409ad7:	xor    ebx,ebx
  409ad9:	push   esi
  409ada:	mov    esi,ebx
  409adc:	pop    ebx
  409add:	mov    edx,esi
  409adf:	add    ebx,0x1002
  409ae5:	lea    eax,[ebp-0x18]
  409ae8:	add    edx,eax
  409aea:	add    edx,0x5
  409aed:	push   edx
  409aee:	inc    esi
  409aef:	pop    ecx
  409af0:	dec    ecx
  409af1:	xchg   ecx,eax
  409af2:	dec    eax
  409af3:	xchg   ecx,eax
  409af4:	dec    ecx
  409af5:	xchg   ecx,edx
  409af7:	dec    edx
  409af8:	push   edx
  409af9:	jmp    0x40be9c
  409afe:	retf   
  409aff:	sbb    BYTE PTR [edi-0x75],dh
  409b02:	ja     0x409b77
  409b04:	mov    bl,0x18
  409b06:	sbb    DWORD PTR [esi+esi*1+0x53],ebp
  409b0a:	mov    al,0xb9
  409b0c:	dec    esi
  409b0d:	mov    cl,0x4e
  409b0f:	add    al,0x72
  409b11:	jb     0x409b0b
  409b13:	pop    edi
  409b14:	jb     0x409b88
  409b16:	cmp    BYTE PTR [ebx+0x6486f08d],bh
  409b1c:	loop   0x409b12
  409b1e:	jbe    0x409aa0
  409b20:	scas   eax,DWORD PTR es:[edi]
  409b21:	pusha  
  409b22:	jb     0x409b66
  409b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b25:	std    
  409b26:	inc    eax
  409b27:	push   eax
  409b28:	bound  esp,QWORD PTR [esi-0x41]
  409b2b:	fidiv  DWORD PTR [ecx-0x6f]
  409b2e:	mov    edx,0x4326fb51
  409b33:	add    DWORD PTR [ebx+0x2d],edi
  409b36:	popf   
  409b37:	xchg   al,ah
  409b39:	xchg   esi,eax
  409b3a:	pop    eax
  409b3b:	xchg   esi,eax
  409b3c:	ins    DWORD PTR es:[edi],dx
  409b3d:	test   BYTE PTR ds:0xbfa73010,0x99
  409b44:	jmp    0x409aea
  409b46:	xchg   edx,eax
  409b47:	cmp    DWORD PTR [edi+edi*8+0x4a],edx
  409b4b:	das    
  409b4c:	div    DWORD PTR [ebp+edi*1+0x14]
  409b50:	add    cl,dl
  409b52:	push   ecx
  409b53:	pop    ebx
  409b54:	std    
  409b55:	adc    eax,DWORD PTR [edx]
  409b57:	jge    0x409bab
  409b59:	dec    eax
  409b5a:	adc    bh,BYTE PTR [edi+0x5e395d4]
  409b60:	add    esi,DWORD PTR [ecx+0x60]
  409b63:	push   esi
  409b64:	and    DWORD PTR [esp+esi*1],esi
  409b67:	ja     0x409afa
  409b69:	mov    ah,0x54
  409b6b:	mov    esp,DWORD PTR [edx]
  409b6d:	inc    DWORD PTR [esi]
  409b6f:	cmc    
  409b70:	aaa    
  409b71:	mov    ds:0x8fa01127,al
  409b76:	pop    edx
  409b77:	mov    DWORD PTR [bx-0x49],edi
  409b7b:	pop    eax
  409b7c:	dec    esi
  409b7d:	dec    ebx
  409b7e:	mov    ecx,0xe16b9651
  409b83:	ds inc ecx
  409b85:	sub    al,0xa8
  409b87:	shl    DWORD PTR [edx+0x47dfb60b],0x27
  409b8e:	fdivr  st,st(4)
  409b90:	push   esi
  409b91:	push   es
  409b92:	shl    ebp,0xc9
  409b95:	or     eax,0x38f226d0
  409b9a:	pop    eax
  409b9b:	mov    dh,0x1f
  409b9d:	xor    eax,0xc0e013f8
  409ba2:	popa   
  409ba3:	jmp    0x409bb4
  409ba5:	rcr    dh,0xf3
  409ba8:	xlat   BYTE PTR ds:[ebx]
  409ba9:	sub    esi,eax
  409bab:	push   eax
  409bac:	jp     0x409be2
  409bae:	(bad)  
  409baf:	pop    edi
  409bb0:	rcl    DWORD PTR [edi],0x3a
  409bb3:	xor    al,0xd8
  409bb5:	mov    eax,0xe377da4c
  409bba:	mov    gs,edi
  409bbc:	adc    edi,eax
  409bbe:	retf   
  409bbf:	pop    ebp
  409bc0:	dec    ebx
  409bc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bc2:	icebp  
  409bc3:	ret    0x6cdf
  409bc6:	cmp    al,BYTE PTR [eax]
  409bc8:	(bad)  
  409bc9:	mul    BYTE PTR [eax-0x7c032950]
  409bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bd0:	sbb    eax,0xa5fbc020
  409bd5:	add    eax,0x6d180392
  409bda:	jno    0x409bf5
  409bdc:	xchg   edi,eax
  409bdd:	xchg   esp,eax
  409bde:	jo     0x409b8f
  409be0:	sti    
  409be1:	xor    ecx,edx
  409be3:	mov    bh,0x25
  409be5:	mov    edi,DWORD PTR [esi+0x3bc0ce54]
  409beb:	sbb    al,0x2
  409bed:	int    0xf7
  409bef:	push   0xd9b52ffd
  409bf4:	jmp    0x409ba0
  409bf6:	mov    esp,0x5fbefd13
  409bfb:	lods   al,BYTE PTR ds:[esi]
  409bfc:	(bad)  
  409bfd:	sbb    eax,esp
  409bff:	enter  0x679f,0xbd
  409c03:	hlt    
  409c04:	aas    
  409c05:	add    DWORD PTR [eax+0x328ab1e7],edx
  409c0b:	lods   al,BYTE PTR ds:[esi]
  409c0c:	and    al,0xf7
  409c0e:	in     eax,dx
  409c0f:	pop    esp
  409c10:	cmc    
  409c11:	mov    BYTE PTR [ecx],bh
  409c13:	adc    cl,BYTE PTR [esi-0x22]
  409c16:	cs inc esp
  409c18:	add    cl,0xe4
  409c1b:	dec    ebp
  409c1c:	dec    edx
  409c1d:	push   cs
  409c1e:	pop    ds
  409c1f:	xor    al,0x7f
  409c21:	lods   eax,DWORD PTR ds:[esi]
  409c22:	pop    esi
  409c23:	loopne 0x409c0c
  409c25:	and    DWORD PTR [ecx+0x75],0xffffffa5
  409c29:	popf   
  409c2a:	lds    ebx,FWORD PTR [esi-0x72]
  409c2d:	ss xor al,0x69
  409c30:	ret    
  409c31:	adc    eax,DWORD PTR [ebp+0x45d2f7bd]
  409c37:	push   eax
  409c38:	add    al,0xb1
  409c3a:	mov    ecx,0x16e5a91f
  409c3f:	dec    ecx
  409c40:	xchg   esp,eax
  409c41:	or     al,0xba
  409c43:	or     DWORD PTR [ebp+0x6431791d],ebp
  409c49:	sbb    ecx,DWORD PTR [ecx-0x6e]
  409c4c:	retf   0x20ee
  409c4f:	fdiv   QWORD PTR [esi+0x7d5cf5e]
  409c55:	sbb    eax,eax
  409c57:	adc    DWORD PTR [eax-0x1cbefe55],0xffffffa4
  409c5e:	push   esp
  409c5f:	dec    ecx
  409c60:	sti    
  409c61:	inc    edi
  409c62:	mov    al,ds:0x154579ba
  409c67:	inc    esp
  409c68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c69:	popa   
  409c6a:	push   cs
  409c6b:	out    0x95,al
  409c6d:	dec    esi
  409c6e:	in     eax,0x43
  409c70:	adc    BYTE PTR [edi+0x1c63ca23],bl
  409c76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c77:	push   0xffffff9e
  409c79:	arpl   WORD PTR [esi-0x76],cx
  409c7c:	repnz dec eax
  409c7e:	cmc    
  409c7f:	lock add edi,DWORD PTR [edx*2-0x2cf769cb]
  409c87:	jne    0x409ce2
  409c89:	dec    ebp
  409c8a:	xchg   edx,eax
  409c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c8c:	push   es
  409c8d:	mov    ebp,0x57250ce7
  409c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c93:	add    esp,edi
  409c95:	push   ebx
  409c96:	stos   DWORD PTR es:[edi],eax
  409c97:	jecxz  0x409c96
  409c99:	adc    BYTE PTR [ebp+0x13],bl
  409c9c:	lea    edx,[ebx+0x7a6349]
  409ca2:	mov    dl,0xc9
  409ca4:	cmp    esi,0x3b74b2e6
  409caa:	add    eax,0xf6766119
  409caf:	stos   DWORD PTR es:[edi],eax
  409cb0:	inc    esi
  409cb1:	mov    bh,BYTE PTR [esi+0x45577ec7]
  409cb7:	jns    0x409c8c
  409cb9:	and    ch,dh
  409cbb:	mov    esp,0xcb2f067c
  409cc0:	int3   
  409cc1:	sbb    bl,dl
  409cc3:	clc    
  409cc4:	mov    esi,fs
  409cc6:	in     eax,dx
  409cc7:	mov    ecx,ecx
  409cc9:	dec    eax
  409cca:	dec    esi
  409ccb:	loope  0x409c58
  409ccd:	ss call 0x6ec47463
  409cd3:	cwde   
  409cd4:	add    BYTE PTR [ebx+0x797eceea],0x6d
  409cdb:	inc    esi
  409cdc:	loop   0x409d02
  409cde:	fnstenv [esp+edi*4-0x5b]
  409ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ce3:	scas   al,BYTE PTR es:[edi]
  409ce4:	adc    al,0x22
  409ce6:	ret    0xe170
  409ce9:	leave  
  409cea:	jmp    0x409cfd
  409cec:	or     al,0x36
  409cee:	test   eax,0xd67b2071
  409cf3:	push   edi
  409cf4:	icebp  
  409cf5:	mov    dl,0x7a
  409cf7:	nop
  409cf8:	(bad)  
  409cf9:	fbld   TBYTE PTR [esi]
  409cfb:	push   0xde162732
  409d00:	js     0x409c96
  409d02:	loop   0x409d3d
  409d04:	xchg   DWORD PTR es:[ebx+0x2bd18647],ebx
  409d0b:	sbb    eax,0xe7eb65a2
  409d10:	(bad)  
  409d11:	js     0x409d29
  409d13:	fs cmp cl,dh
  409d16:	mov    bl,0x95
  409d18:	add    eax,0xed9968a0
  409d1d:	jp     0x409d9c
  409d1f:	xchg   di,ax
  409d22:	push   ds
  409d23:	mov    ebp,0x4d218075
  409d28:	xchg   edx,eax
  409d29:	icebp  
  409d2a:	sbb    eax,0x94f571c0
  409d2f:	je     0x409d5a
  409d31:	daa    
  409d32:	dec    ebp
  409d33:	call   0x1308:0xb5d69e78
  409d3a:	(bad)  
  409d3b:	out    0xcb,al
  409d3d:	push   eax
  409d3e:	scas   al,BYTE PTR es:[edi]
  409d3f:	push   ecx
  409d40:	je     0x409d89
  409d42:	ret    
  409d43:	rcl    eax,1
  409d45:	imul   edx,DWORD PTR [edx],0xffffff96
  409d48:	ins    BYTE PTR es:[edi],dx
  409d49:	mov    edx,0x2fe1313f
  409d4e:	test   DWORD PTR [eax],esp
  409d50:	icebp  
  409d51:	mov    ds:0xb7df9553,eax
  409d56:	pop    edi
  409d57:	adc    DWORD PTR [ebx],esi
  409d59:	mov    bl,0x4c
  409d5b:	leave  
  409d5c:	fistp  QWORD PTR [eax+eax*8-0x709015f6]
  409d63:	jbe    0x409d5b
  409d65:	push   esi
  409d66:	(bad)  
  409d67:	sbb    eax,DWORD PTR [eax-0x39598508]
  409d6d:	in     al,dx
  409d6e:	aam    0x60
  409d70:	fcmovu st,st(2)
  409d72:	gs jno 0x409d0e
  409d75:	sbb    DWORD PTR [esi],edi
  409d77:	dec    ebp
  409d78:	sbb    DWORD PTR es:[eax-0x62],edi
  409d7c:	in     eax,0x66
  409d7e:	jae    0x409d6c
  409d80:	pop    edx
  409d81:	daa    
  409d82:	xchg   ebx,eax
  409d83:	dec    esi
  409d84:	fsub   st(5),st
  409d86:	in     al,0xa5
  409d88:	push   esp
  409d89:	mov    al,BYTE PTR [edx]
  409d8b:	ins    DWORD PTR es:[edi],dx
  409d8c:	pop    ds
  409d8d:	rcr    ebp,0xf1
  409d90:	fdiv   st(4),st
  409d92:	xor    bh,dh
  409d94:	arpl   WORD PTR [edx],bx
  409d96:	aas    
  409d97:	inc    esi
  409d98:	lods   eax,DWORD PTR ds:[esi]
  409d99:	sbb    bh,BYTE PTR [edi+ecx*4]
  409d9c:	fs mov ebx,0x913ff802
  409da2:	retf   0x49b2
  409da5:	inc    ecx
  409da6:	dec    ebx
  409da7:	in     eax,0x9c
  409da9:	ds fucom st(5)
  409dac:	add    ecx,DWORD PTR [ecx-0x5ddba0c2]
  409db2:	mov    esp,DWORD PTR [edx-0x7]
  409db5:	popa   
  409db6:	xor    ebx,ebp
  409db8:	dec    esp
  409db9:	push   edx
  409dba:	ds fwait
  409dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dbd:	ins    DWORD PTR es:[edi],dx
  409dbe:	(bad)  
  409dc1:	push   esi
  409dc2:	sbb    BYTE PTR [ecx+eax*1+0x6a4a6c55],al
  409dc9:	out    0xe5,al
  409dcb:	cmp    eax,0xc6f0a905
  409dd0:	rep lods eax,DWORD PTR ds:[esi]
  409dd2:	popf   
  409dd3:	jp     0x409d9c
  409dd5:	xor    DWORD PTR [edx],ebp
  409dd7:	fldcw  WORD PTR [esi-0xa]
  409dda:	stos   DWORD PTR es:[edi],eax
  409ddb:	lods   eax,DWORD PTR ds:[esi]
  409ddc:	push   ebx
  409ddd:	or     DWORD PTR [edi-0x58],ebx
  409de0:	jbe    0x409dc1
  409de2:	pop    ss
  409de3:	mov    al,0xa6
  409de5:	hlt    
  409de6:	mulps  xmm2,XMMWORD PTR [ebx+0x686cd55b]
  409ded:	ss jbe 0x409def
  409df0:	cmp    al,bl
  409df2:	dec    eax
  409df3:	sub    ebx,ebx
  409df5:	adc    eax,0x3ae1096b
  409dfa:	pop    edx
  409dfb:	dec    esp
  409dfc:	rcl    dh,0xf9
  409dff:	daa    
  409e00:	mov    BYTE PTR [esi+0x67f849b9],ah
  409e06:	sub    eax,0x93191841
  409e0b:	out    dx,eax
  409e0c:	xor    eax,0x95ca03f2
  409e11:	mov    gs,esi
  409e13:	mov    edx,DWORD PTR ds:0xc2d0f1c8
  409e19:	pop    ecx
  409e1a:	shl    esp,0xd0
  409e1d:	ret    0x1f07
  409e20:	ins    BYTE PTR es:[edi],dx
  409e21:	retf   0x11a2
  409e24:	stos   BYTE PTR es:[edi],al
  409e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e26:	pushf  
  409e27:	add    esi,DWORD PTR ds:[ebx-0x2e02bfae]
  409e2e:	xchg   ebx,eax
  409e2f:	cmp    DWORD PTR [ebx+0x46593377],edx
  409e35:	mov    WORD PTR [ecx],gs
  409e37:	jae    0x409dcf
  409e39:	pop    edi
  409e3a:	add    esp,esi
  409e3c:	xchg   ecx,eax
  409e3d:	cs int3 
  409e3f:	and    dh,bh
  409e41:	mov    ch,0x84
  409e43:	or     DWORD PTR ds:0x38ea0f48,ecx
  409e49:	sbb    eax,DWORD PTR [ebp+eax*1+0x60]
  409e4d:	mov    esi,0x4f856501
  409e52:	aaa    
  409e53:	arpl   si,bx
  409e55:	inc    esp
  409e56:	dec    eax
  409e57:	loopne 0x409e78
  409e59:	sar    DWORD PTR [ebp-0x4d],cl
  409e5c:	loopne 0x409e2e
  409e5e:	aaa    
  409e5f:	add    al,BYTE PTR [ecx+0x44]
  409e62:	in     eax,0x79
  409e64:	repz or dh,ah
  409e67:	(bad)  
  409e68:	shl    BYTE PTR [edi+0x4b],cl
  409e6b:	imul   esp,DWORD PTR [ecx+0x0],0xffffff81
  409e6f:	dec    esp
  409e70:	sar    al,1
  409e72:	cmp    bl,ch
  409e74:	xor    BYTE PTR [edi+eiz*2+0x74],dh
  409e78:	pop    ss
  409e79:	and    dl,BYTE PTR [edi]
  409e7b:	fs cdq 
  409e7d:	dec    BYTE PTR [edi-0x38057f1c]
  409e83:	ror    WORD PTR [ecx+0x6b],1
  409e87:	out    dx,eax
  409e88:	aam    0xa
  409e8a:	cmp    BYTE PTR [esi+0x7a61a0af],al
  409e90:	dec    BYTE PTR [edx+0x4a8803e7]
  409e96:	je     0x409f06
  409e98:	jmp    0x76861ce3
  409e9d:	sbb    ebp,ebp
  409e9f:	fbstp  TBYTE PTR [esi-0x2e]
  409ea2:	push   ebp
  409ea3:	mov    cl,BYTE PTR cs:[ecx-0x4c]
  409ea7:	push   cs
  409ea8:	repnz sub eax,0xd66e55a4
  409eae:	inc    edx
  409eaf:	or     eax,0x634d181a
  409eb4:	cmp    dh,ch
  409eb6:	sbb    eax,DWORD PTR [esp+esi*4]
  409eb9:	adc    al,0x20
  409ebb:	lods   eax,DWORD PTR ds:[esi]
  409ebc:	and    DWORD PTR [eax-0x4cb6ab13],0xffffffa6
  409ec3:	mov    ecx,0xcb384088
  409ec8:	or     eax,0xf55662d3
  409ecd:	lds    esi,FWORD PTR [esi]
  409ecf:	xor    eax,0xf19b1ace
  409ed4:	push   0x9bdf7bcc
  409ed9:	dec    ebx
  409eda:	shl    BYTE PTR [eax+0x5f848a4e],0x6b
  409ee1:	sub    ch,BYTE PTR [edi-0x1c0d99f6]
  409ee7:	jne    0x409e6b
  409ee9:	cmp    eax,0xd66d523d
  409eee:	sbb    ebx,edi
  409ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ef1:	adc    DWORD PTR [edx+0x62af3748],ebp
  409ef7:	adc    eax,0x9254c6ea
  409efc:	dec    ebx
  409efd:	fistp  QWORD PTR [edx]
  409eff:	pop    edx
  409f00:	xor    al,0x16
  409f02:	push   es
  409f03:	pop    eax
  409f04:	ss cmp al,0x85
  409f07:	pop    esp
  409f08:	mov    esi,0x8f0cf518
  409f0d:	shl    DWORD PTR [ebp+0x2d5159bc],cl
  409f13:	icebp  
  409f14:	dec    edx
  409f15:	out    dx,eax
  409f16:	jecxz  0x409f33
  409f18:	jne    0x409eb4
  409f1a:	outs   dx,BYTE PTR ds:[esi]
  409f1b:	xchg   ecx,eax
  409f1c:	dec    eax
  409f1d:	fidivr WORD PTR [esi+0x40a46046]
  409f23:	cmp    BYTE PTR [ecx],ah
  409f25:	pop    ebx
  409f26:	xchg   ebx,eax
  409f27:	div    BYTE PTR [ebx]
  409f29:	jnp    0x409f8d
  409f2b:	sbb    al,0x13
  409f2d:	pop    ecx
  409f2e:	jp     0x409f92
  409f30:	addr16 inc eax
  409f32:	xchg   esi,eax
  409f33:	xor    eax,DWORD PTR [ecx-0x47]
  409f36:	add    ch,BYTE PTR [edi+0x6f7de515]
  409f3c:	mov    ?,WORD PTR [edx]
  409f3e:	ins    DWORD PTR es:[edi],dx
  409f3f:	(bad)  
  409f40:	mov    ?,WORD PTR [esi-0x6b]
  409f43:	daa    
  409f44:	jmp    0x4126a898
  409f49:	outs   dx,BYTE PTR ds:[esi]
  409f4a:	pop    esi
  409f4b:	inc    edx
  409f4c:	icebp  
  409f4d:	fwait
  409f4e:	mov    ds:0xb800b7ae,eax
  409f53:	das    
  409f54:	and    al,0x1e
  409f56:	pop    ebp
  409f57:	push   esp
  409f58:	rcr    DWORD PTR [ebp-0x421fd6c6],1
  409f5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f5f:	inc    edx
  409f60:	repnz in eax,0xe
  409f63:	and    ebp,DWORD PTR [edi+edx*8+0x59c8505d]
  409f6a:	dec    eax
  409f6b:	mov    esp,DWORD PTR [ecx+0x67]
  409f6e:	shr    eax,1
  409f70:	sbb    DWORD PTR [ebx],eax
  409f72:	push   ebp
  409f73:	fwait
  409f74:	sbb    eax,0x5fcd6e32
  409f79:	or     esi,DWORD PTR [ebp-0x58aca38c]
  409f7f:	add    DWORD PTR [eax-0x39],ebx
  409f82:	and    DWORD PTR [eax+0x7870089c],0x8ebaf03
  409f8c:	mov    DWORD PTR [edi-0x5b],0x34896003
  409f93:	and    al,0xbf
  409f95:	in     al,dx
  409f96:	inc    DWORD PTR [ebx]
  409f98:	imul   esp,DWORD PTR [ebx],0x68b3cb58
  409f9e:	sbb    DWORD PTR [eax+eiz*4-0x29],eax
  409fa2:	sub    DWORD PTR [ecx],0xe3cbdc0e
  409fa8:	xor    al,0x6e
  409faa:	rcl    DWORD PTR [eax+0x59c35713],1
  409fb0:	pop    ecx
  409fb1:	jg     0x40a027
  409fb3:	in     al,0x39
  409fb5:	call   0xd4f6c068
  409fba:	push   0xffffffe2
  409fbc:	les    ebp,FWORD PTR [edx+0x70]
  409fbf:	adc    al,0xa5
  409fc1:	cmp    DWORD PTR [eax-0x4f2fc061],eax
  409fc7:	inc    ecx
  409fc8:	cs inc edx
  409fca:	loope  0x409fe2
  409fcc:	nop
  409fcd:	mov    esi,0x9d5cde2
  409fd2:	sbb    BYTE PTR [ebx],ah
  409fd4:	lds    ebx,FWORD PTR [esi+ecx*8-0x28aad8d4]
  409fdb:	mov    cl,0x1e
  409fdd:	add    BYTE PTR [eax],ch
  409fdf:	call   FWORD PTR [eax+0x2c43a739]
  409fe5:	bound  eax,QWORD PTR [eax]
  409fe7:	sub    al,al
  409fe9:	cmovb  esi,DWORD PTR ds:0x23c8be4f
  409ff0:	or     al,0xf2
  409ff2:	repz and al,BYTE PTR [edx]
  409ff5:	aad    0x53
  409ff7:	outs   dx,BYTE PTR ds:[esi]
  409ff8:	adc    eax,0xb68fb3f9
  409ffd:	loope  0x40a019
  409fff:	mov    ebx,0x325896f4
  40a004:	jb     0x40a015
  40a006:	fisubr WORD PTR [ebp+0x6e0338b]
  40a00c:	shl    cl,cl
  40a00e:	repz adc al,BYTE PTR [ebp-0x51]
  40a012:	mov    dh,0x8e
  40a014:	cwde   
  40a015:	pop    ebp
  40a016:	lock lds esi,FWORD PTR [esi-0x3295a5b1]
  40a01d:	xor    al,0x72
  40a01f:	inc    eax
  40a020:	cld    
  40a021:	sbb    ch,bl
  40a023:	add    ebx,DWORD PTR [edi+0x66]
  40a026:	hlt    
  40a027:	cmp    DWORD PTR [edi+0x5719bcf2],esi
  40a02d:	test   al,0x30
  40a02f:	(bad)  
  40a030:	adc    al,0x80
  40a032:	rol    al,0xf9
  40a035:	js     0x40a09e
  40a037:	out    dx,eax
  40a038:	adc    esp,edx
  40a03a:	push   eax
  40a03b:	and    ebx,eax
  40a03d:	cmp    al,0xdc
  40a03f:	mov    ds:0xfa4b47f,al
  40a044:	ds daa 
  40a046:	push   0xc73648a2
  40a04b:	or     eax,0xe97d681e
  40a050:	mov    al,ds:0xc4aad9bb
  40a055:	inc    edx
  40a056:	push   ss
  40a057:	aad    0x15
  40a059:	and    DWORD PTR [eax-0x62],esi
  40a05c:	iret   
  40a05d:	dec    edi
  40a05e:	adc    eax,0xe6d5ad99
  40a063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a064:	mov    esi,0x5bfc82f7
  40a069:	outs   dx,BYTE PTR ds:[esi]
  40a06a:	jne    0x40a059
  40a06c:	ret    0xc34c
  40a06f:	mov    dh,0x17
  40a071:	mov    al,0x68
  40a073:	dec    edi
  40a074:	and    eax,0xc0946881
  40a079:	dec    edi
  40a07a:	or     eax,0x34c75ed3
  40a07f:	xlat   BYTE PTR ds:[ebx]
  40a080:	xchg   edx,eax
  40a081:	cwde   
  40a082:	mov    eax,0x2dc6de2
  40a087:	mov    ecx,0x4879007c
  40a08c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a08d:	add    DWORD PTR [ecx+0x3c],0x96acc354
  40a094:	popa   
  40a095:	xor    BYTE PTR [esi-0x3],al
  40a098:	icebp  
  40a099:	xchg   ecx,eax
  40a09a:	adc    al,0xf6
  40a09c:	data16 out 0xba,al
  40a09f:	pop    ss
  40a0a0:	clc    
  40a0a1:	dec    ebp
  40a0a2:	push   esi
  40a0a3:	push   0x38
  40a0a5:	add    DWORD PTR [ebp-0x53],0x20
  40a0a9:	pop    edi
  40a0aa:	std    
  40a0ab:	jmp    0x40a0cb
  40a0ad:	inc    ebp
  40a0ae:	fwait
  40a0af:	enter  0x777c,0x99
  40a0b3:	adc    eax,0xc60464d2
  40a0b8:	fwait
  40a0b9:	dec    eax
  40a0ba:	adc    BYTE PTR [ecx+ebp*2],ch
  40a0bd:	js     0x40a0c0
  40a0bf:	pop    es
  40a0c0:	mov    bh,0xe7
  40a0c2:	pusha  
  40a0c3:	sbb    dh,al
  40a0c5:	jle    0x40a073
  40a0c7:	int    0xac
  40a0c9:	dec    esp
  40a0ca:	stc    
  40a0cb:	xor    DWORD PTR [eax],edx
  40a0cd:	int3   
  40a0ce:	test   bh,0x58
  40a0d1:	pop    edi
  40a0d2:	mov    eax,ds:0xc8feb8d4
  40a0d7:	push   cs
  40a0d8:	push   ds
  40a0d9:	fimul  DWORD PTR [ecx+0x1d]
  40a0dc:	mov    esi,0x7894e54b
  40a0e1:	mov    DWORD PTR [edx+edx*2-0x134bf8cf],edi
  40a0e8:	ja     0x40a0e1
  40a0ea:	pusha  
  40a0eb:	dec    ebp
  40a0ec:	xchg   esp,eax
  40a0ed:	es jo  0x40a13f
  40a0f0:	and    esi,DWORD PTR [ecx]
  40a0f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0f4:	daa    
  40a0f5:	xchg   esp,eax
  40a0f6:	repnz cmp esp,DWORD PTR [ecx]
  40a0f9:	pop    es
  40a0fa:	pushw  es
  40a0fc:	addr16 aas 
  40a0fe:	dec    ebx
  40a0ff:	mov    al,ds:0x3a400e1b
  40a104:	mov    esp,0xe7178067
  40a109:	into   
  40a10a:	sti    
  40a10b:	in     eax,dx
  40a10c:	shl    DWORD PTR [esi+0x68cf3bc],1
  40a112:	mov    ds:0x324ec84f,al
  40a117:	jecxz  0x40a117
  40a119:	jp     0x40a0e0
  40a11b:	cmova  ecx,DWORD PTR [edi]
  40a11e:	gs enter 0x9956,0x3d
  40a123:	es or  eax,0x35610e74
  40a129:	push   ebx
  40a12a:	xchg   esi,eax
  40a12b:	push   ebp
  40a12c:	clc    
  40a12d:	shl    ebp,1
  40a12f:	rcl    bh,cl
  40a131:	sub    bl,bl
  40a133:	push   esp
  40a134:	ficom  DWORD PTR [ecx]
  40a136:	or     al,0x1c
  40a138:	mov    es,WORD PTR [edx+0x61517f0b]
  40a13e:	test   al,0x7a
  40a140:	lods   al,BYTE PTR ds:[esi]
  40a141:	push   edx
  40a142:	pop    ss
  40a143:	push   esp
  40a144:	lea    esp,[edi+eax*1]
  40a147:	push   cs
  40a148:	and    eax,0x345df073
  40a14d:	loopne 0x40a1a8
  40a14f:	inc    BYTE PTR [ebp+0x79def9e4]
  40a155:	sbb    esi,DWORD PTR [edi+0x37]
  40a158:	xor    eax,0xcccb0f36
  40a15d:	add    BYTE PTR [ebp+ebx*1-0x19],0xa8
  40a162:	sbb    eax,0xbefbbdc4
  40a167:	shl    DWORD PTR [edi],1
  40a169:	jl     0x40a115
  40a16b:	cmp    eax,0x480f391
  40a170:	sbb    dh,BYTE PTR [ecx+0x63e22be7]
  40a176:	push   cs
  40a177:	xchg   BYTE PTR [ebp+edi*1-0x7c22a735],bl
  40a17e:	inc    edx
  40a17f:	pop    ds
  40a180:	imul   DWORD PTR [bp+si]
  40a183:	mov    BYTE PTR [ebx-0x66],bh
  40a186:	pop    ebx
  40a187:	sub    esp,ecx
  40a189:	mov    ecx,0xdca629f6
  40a18e:	fnstenv [eax]
  40a190:	icebp  
  40a191:	in     al,0x68
  40a193:	fistp  DWORD PTR [ecx]
  40a195:	add    BYTE PTR [eax-0xf796586],0xae
  40a19c:	dec    eax
  40a19d:	enter  0xdbb7,0x67
  40a1a1:	push   ss
  40a1a2:	popa   
  40a1a3:	jmp    0xaf97:0xabdbac67
  40a1aa:	adc    bh,0x43
  40a1ad:	jbe    0x40a200
  40a1af:	push   0x42
  40a1b1:	dec    ebp
  40a1b2:	or     DWORD PTR [esi-0x4f8faa35],ebp
  40a1b8:	hlt    
  40a1b9:	mov    al,0x1d
  40a1bb:	sub    esp,0xffffff80
  40a1be:	jg     0x40a211
  40a1c0:	dec    ebp
  40a1c1:	scas   al,BYTE PTR es:[edi]
  40a1c2:	repnz fs hlt 
  40a1c5:	cli    
  40a1c6:	mov    al,ds:0x91fb8661
  40a1cb:	push   esi
  40a1cc:	test   DWORD PTR [edx],0xac82094d
  40a1d2:	imul   eax,ebx,0xf995e4bd
  40a1d8:	dec    esi
  40a1d9:	fnstcw WORD PTR [esi]
  40a1db:	push   es
  40a1dc:	scas   al,BYTE PTR es:[edi]
  40a1dd:	mov    cl,BYTE PTR [ebx]
  40a1df:	fstp   DWORD PTR [eax+0x49]
  40a1e2:	sbb    al,0x78
  40a1e4:	xchg   ebp,eax
  40a1e5:	jb     0x40a192
  40a1e7:	out    dx,al
  40a1e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1e9:	test   DWORD PTR [esi],ecx
  40a1eb:	inc    esp
  40a1ec:	repz rcl dh,cl
  40a1ef:	rcr    ah,cl
  40a1f1:	jle    0x40a18e
  40a1f3:	stos   BYTE PTR es:[edi],al
  40a1f4:	das    
  40a1f5:	and    al,0x26
  40a1f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1f8:	and    eax,0x9eaa577c
  40a1fd:	sbb    DWORD PTR [edx],esi
  40a1ff:	stc    
  40a200:	loope  0x40a27a
  40a202:	xchg   esp,eax
  40a203:	js     0x40a210
  40a205:	jns    0x40a1e3
  40a207:	add    ebp,DWORD PTR [esi]
  40a209:	ins    BYTE PTR es:[edi],dx
  40a20a:	outs   dx,DWORD PTR ds:[esi]
  40a20b:	xor    DWORD PTR [eax-0x29312ba5],edi
  40a211:	sub    BYTE PTR [edi+0x50e66297],ch
  40a217:	push   esi
  40a218:	retf   
  40a219:	fcmovnbe st,st(5)
  40a21b:	sbb    ah,bh
  40a21d:	jg     0x40a299
  40a21f:	rcl    BYTE PTR [ebx],1
  40a221:	clc    
  40a222:	mov    ebp,0x74022533
  40a227:	and    eax,0xafb465f0
  40a22c:	(bad)  
  40a22d:	push   edi
  40a22e:	in     al,dx
  40a22f:	and    eax,0xeebb0b19
  40a234:	retf   
  40a235:	push   eax
  40a236:	(bad)  
  40a237:	jnp    0x40a1e4
  40a239:	add    al,0xbe
  40a23b:	int    0x60
  40a23d:	mov    cl,0xff
  40a23f:	adc    BYTE PTR [eax-0x45211b71],cl
  40a245:	adc    eax,0x883f8444
  40a24a:	div    BYTE PTR [esi]
  40a24c:	dec    ebp
  40a24d:	push   ebp
  40a24e:	ss sbb al,0x71
  40a251:	pusha  
  40a252:	int3   
  40a253:	jmp    0xf716:0xc965936f
  40a25a:	stos   DWORD PTR es:[edi],eax
  40a25b:	sub    BYTE PTR [edi+edx*4+0x78],dh
  40a25f:	daa    
  40a260:	sbb    DWORD PTR [ebp-0xf473dad],0xfdc9ee0d
  40a26a:	inc    ah
  40a26c:	in     eax,0x5a
  40a26e:	mov    ds:0x98583ada,eax
  40a273:	stc    
  40a274:	sbb    eax,0x92480745
  40a279:	cld    
  40a27a:	mov    ds:0xc98f48f7,al
  40a27f:	sbb    al,0x42
  40a281:	jmp    0x51ceff61
  40a286:	xlat   BYTE PTR ds:[ebx]
  40a287:	cmp    ch,bl
  40a289:	icebp  
  40a28a:	sti    
  40a28b:	dec    esi
  40a28c:	pop    ss
  40a28d:	sbb    dh,bh
  40a28f:	add    ch,BYTE PTR [edi]
  40a291:	fwait
  40a292:	push   ecx
  40a293:	pop    edi
  40a294:	(bad)  
  40a295:	out    dx,eax
  40a296:	inc    edx
  40a297:	sbb    al,bl
  40a299:	shl    DWORD PTR [edi],cl
  40a29b:	jns    0x40a22f
  40a29d:	or     ecx,DWORD PTR [edi]
  40a29f:	inc    edx
  40a2a0:	dec    edi
  40a2a1:	lock imul edx,DWORD PTR [ecx-0x4e],0x3d
  40a2a6:	mov    ch,0x8c
  40a2a8:	jge    0x40a290
  40a2aa:	pushf  
  40a2ab:	pop    ecx
  40a2ac:	adc    al,dl
  40a2ae:	fcmove st,st(1)
  40a2b0:	hlt    
  40a2b1:	cmp    DWORD PTR [ebx+0x44],0xffffffa2
  40a2b5:	addr16 in al,dx
  40a2b7:	mov    esp,DWORD PTR [ebx-0x5f49e532]
  40a2bd:	loope  0x40a310
  40a2bf:	cmp    ebp,DWORD PTR [esi]
  40a2c1:	mov    WORD PTR [ecx-0x2b],cs
  40a2c4:	add    al,0x96
  40a2c6:	in     eax,dx
  40a2c7:	cdq    
  40a2c8:	push   ss
  40a2c9:	inc    esi
  40a2ca:	popf   
  40a2cb:	inc    eax
  40a2cc:	inc    esp
  40a2cd:	int3   
  40a2ce:	imul   edx,DWORD PTR [esi+ebx*4-0x9aba32f],0xffffffcb
  40a2d6:	dec    eax
  40a2d7:	push   ebp
  40a2d8:	mov    ah,dh
  40a2da:	and    ah,BYTE PTR [esp+eiz*8-0x4cbc831f]
  40a2e1:	adc    eax,0x1c0daa52
  40a2e6:	push   eax
  40a2e7:	mov    eax,ds:0x66a6dc33
  40a2ec:	push   ebx
  40a2ed:	xchg   edi,eax
  40a2ee:	in     eax,dx
  40a2ef:	sbb    al,0xdd
  40a2f1:	adc    ah,BYTE PTR ds:0x21629e8d
  40a2f7:	std    
  40a2f8:	mov    edi,0xd7df4cfb
  40a2fd:	sbb    DWORD PTR [ebp-0x31],ebp
  40a300:	pop    esi
  40a301:	shl    DWORD PTR [esi],cl
  40a303:	test   DWORD PTR [eax+0x1e],esi
  40a306:	(bad)  [ebp-0x5e]
  40a309:	mov    ebp,0xd1ae7ee3
  40a30e:	add    eax,0x18bbf30a
  40a313:	jle    0x40a2d1
  40a315:	lea    edi,[ebp*4+0x8ab31b1]
  40a31c:	push   0xa
  40a31e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a31f:	push   cs
  40a320:	mov    ch,0x71
  40a322:	mov    al,0x99
  40a324:	jmp    0xd08f:0xb7dd15a4
  40a32b:	loopne 0x40a300
  40a32d:	sub    ah,BYTE PTR [edi]
  40a32f:	repnz ds mov eax,0x7ede8c5d
  40a336:	mov    BYTE PTR [ecx],cl
  40a338:	sub    edx,DWORD PTR [ecx]
  40a33a:	xor    al,0x2
  40a33c:	inc    ebp
  40a33d:	adc    DWORD PTR [ecx],eax
  40a33f:	fcom   QWORD PTR [ebx+0xa]
  40a342:	xchg   edi,eax
  40a343:	bound  esp,QWORD PTR [ebx+0x55]
  40a346:	adc    al,0x2d
  40a348:	in     al,0xf4
  40a34a:	into   
  40a34b:	mov    ebp,0x8e6c359c
  40a350:	adc    DWORD PTR [edx-0xcc9b4f7],0x275a3522
  40a35a:	cs adc al,0x3f
  40a35d:	mov    edx,DWORD PTR [ebx+0x38]
  40a360:	fcom   QWORD PTR [ebx-0x42]
  40a363:	in     eax,dx
  40a364:	aam    0x7
  40a366:	enter  0x566e,0xd8
  40a36a:	bound  ebx,QWORD PTR [ecx+ecx*8-0x9e526bc]
  40a371:	dec    edi
  40a372:	adc    eax,0x8f9ad0ab
  40a377:	call   0x2cac3917
  40a37c:	jnp    0x40a308
  40a37e:	and    eax,esi
  40a380:	push   es
  40a381:	mov    ah,0xf
  40a383:	sub    DWORD PTR ds:[ebx-0x67237b9a],ebx
  40a38a:	ror    DWORD PTR [ecx+0x15fdfa63],1
  40a390:	inc    ecx
  40a391:	xor    eax,0x1e1a6c01
  40a396:	bound  ebx,QWORD PTR [eax-0x2bc9ff02]
  40a39c:	jg     0x40a378
  40a39e:	cmp    dl,BYTE PTR [esi]
  40a3a0:	cdq    
  40a3a1:	mov    edi,0x68eee35e
  40a3a6:	addr16 adc al,0x47
  40a3a9:	sub    DWORD PTR [ebp-0x61c74cdd],ebp
  40a3af:	sbb    BYTE PTR [esi+0x25e90bcb],0xe4
  40a3b6:	sbb    ebx,DWORD PTR [ebx+0x63]
  40a3b9:	jne    0x40a382
  40a3bb:	lahf   
  40a3bc:	fidiv  DWORD PTR [edx+edx*4-0x1cdf80a2]
  40a3c3:	std    
  40a3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3c5:	xchg   esi,eax
  40a3c6:	xor    al,0x6a
  40a3c8:	mov    BYTE PTR [esi+0x5f364b4c],dl
  40a3ce:	pop    es
  40a3cf:	rol    BYTE PTR [ebx+0x13b06ce5],cl
  40a3d5:	(bad)
  40a3d8:	fld    DWORD PTR [ebp-0x4853816e]
  40a3de:	sbb    dl,al
  40a3e0:	test   ecx,ebx
  40a3e2:	cmc    
  40a3e3:	shr    BYTE PTR [esp+ecx*1-0x7d],1
  40a3e7:	sbb    BYTE PTR ds:[ebx],al
  40a3ea:	mov    cl,0x20
  40a3ec:	dec    edi
  40a3ee:	xor    eax,0xb8691a1a
  40a3f3:	outs   dx,DWORD PTR ds:[esi]
  40a3f4:	daa    
  40a3f5:	ret    
  40a3f6:	jl     0x40a3eb
  40a3f8:	mov    bl,0x9f
  40a3fa:	or     esp,eax
  40a3fc:	cs dec edi
  40a3fe:	loopne 0x40a3a4
  40a400:	fwait
  40a401:	mov    ebx,0x5b76e687
  40a406:	call   0x81f7b6a6
  40a40b:	xor    BYTE PTR [ebp+0x66672fda],ch
  40a411:	cmp    al,cl
  40a413:	push   es
  40a414:	push   cs
  40a415:	adc    eax,0x38dd36ab
  40a41a:	scas   eax,DWORD PTR es:[edi]
  40a41b:	sub    eax,0xbaa4b01d
  40a420:	sbb    esp,0x5e07b1d3
  40a426:	sbb    eax,0x79b4e155
  40a42b:	fadd   st(3),st
  40a42d:	cmc    
  40a42e:	pop    edx
  40a42f:	mov    esp,0x6fdd6a8b
  40a434:	mov    ebx,0xc12213b0
  40a439:	shl    BYTE PTR [esi-0x68],1
  40a43c:	push   edi
  40a43d:	adc    DWORD PTR [edi-0x7511a605],esp
  40a443:	mov    bh,0xfd
  40a445:	lahf   
  40a446:	jl     0x40a453
  40a448:	(bad)  
  40a449:	sub    BYTE PTR [esi-0x26bafbab],0x4b
  40a450:	adc    edi,DWORD PTR [esi]
  40a452:	sub    cl,dh
  40a454:	iret   
  40a455:	int3   
  40a456:	call   0x315abf71
  40a45b:	stc    
  40a45c:	push   esi
  40a45d:	cdq    
  40a45e:	sbb    al,0xd5
  40a460:	cmp    DWORD PTR [ecx],ebx
  40a462:	or     esi,DWORD PTR [ecx+0x75]
  40a465:	add    al,0x70
  40a467:	(bad)  
  40a468:	push   edi
  40a469:	dec    edx
  40a46a:	lea    ebx,[ebp-0x66f19fa]
  40a470:	sahf   
  40a471:	je     0x40a408
  40a473:	inc    ecx
  40a474:	cmp    al,0x99
  40a476:	jmp    0x61c6a939
  40a47b:	scas   eax,DWORD PTR es:[edi]
  40a47c:	jae    0x40a41c
  40a47e:	ret    
  40a47f:	mov    bl,0xf7
  40a481:	jle    0x40a4eb
  40a483:	inc    esi
  40a484:	scas   eax,DWORD PTR es:[edi]
  40a485:	xor    al,ch
  40a487:	adc    edi,edx
  40a489:	xor    DWORD PTR ds:0x4c017668,eax
  40a48f:	call   0x496f887d
  40a494:	inc    ecx
  40a495:	daa    
  40a496:	xchg   edx,eax
  40a497:	xchg   ebp,eax
  40a498:	adc    eax,0xd7d38f31
  40a49d:	sbb    cl,BYTE PTR [ebx+0x5911dc84]
  40a4a3:	sbb    BYTE PTR [ebx+0x66],dl
  40a4a6:	push   edi
  40a4a7:	(bad)  [edi+ebp*4+0x73e9cf3b]
  40a4ae:	adc    eax,0xc32c67aa
  40a4b3:	sbb    al,0x71
  40a4b5:	daa    
  40a4b6:	push   eax
  40a4b7:	lahf   
  40a4b8:	mov    dl,BYTE PTR [edx-0x506da601]
  40a4be:	int    0xe
  40a4c0:	mov    ecx,0x99c5f115
  40a4c5:	dec    edi
  40a4c6:	add    ecx,DWORD PTR [edi+edx*4+0x3d6089e8]
  40a4cd:	test   DWORD PTR [ecx],ecx
  40a4cf:	pusha  
  40a4d0:	loop   0x40a480
  40a4d2:	std    
  40a4d3:	sbb    BYTE PTR [ecx+0x77],ah
  40a4d6:	inc    edx
  40a4d7:	or     al,0xa1
  40a4d9:	(bad)  [eax-0x75]
  40a4dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4dd:	cmp    ecx,DWORD PTR [eax-0x5a4af349]
  40a4e3:	dec    edi
  40a4e4:	shl    BYTE PTR [edx],1
  40a4e6:	dec    edx
  40a4e7:	sahf   
  40a4e8:	xchg   esi,eax
  40a4e9:	leave  
  40a4ea:	pop    es
  40a4eb:	imul   ebx,edi,0x2652eced
  40a4f1:	fcmovnb st,st(2)
  40a4f3:	(bad)  
  40a4f6:	ret    0xb832
  40a4f9:	je     0x40a55b
  40a4fb:	scas   eax,DWORD PTR es:[edi]
  40a4fc:	ja     0x40a511
  40a4fe:	pushf  
  40a4ff:	movntq QWORD PTR [ebx+0x61],mm4
  40a503:	mov    ebp,0xfd611ce6
  40a508:	(bad)  
  40a509:	xor    al,0xc9
  40a50b:	and    bh,BYTE PTR [ecx+0x420341cc]
  40a511:	xor    dl,BYTE PTR [edx+0x2b]
  40a514:	push   0x4a76cd91
  40a519:	aas    
  40a51a:	jnp    0x40a4e6
  40a51c:	nop
  40a51d:	dec    ebx
  40a51e:	mov    edx,0xdbd87e12
  40a523:	add    ecx,DWORD PTR [eax-0x6a]
  40a526:	aas    
  40a527:	push   esi
  40a528:	and    BYTE PTR [eax+edx*8-0x14332842],0xe4
  40a530:	mov    eax,ds:0x4ce503ce
  40a535:	add    dl,BYTE PTR [edx]
  40a537:	mov    al,0x32
  40a539:	xchg   esp,eax
  40a53a:	(bad)  [eax]
  40a53c:	fcmovne st,st(1)
  40a53e:	jl     0x40a548
  40a540:	add    esi,DWORD PTR [esi-0x3aa34b6c]
  40a546:	cli    
  40a547:	cs jbe 0x40a57c
  40a54a:	mov    al,ds:0xc7be0a1
  40a54f:	xlat   BYTE PTR ds:[ebx]
  40a550:	pop    es
  40a551:	and    dl,bh
  40a553:	lods   eax,DWORD PTR ds:[esi]
  40a554:	jl     0x40a526
  40a556:	imul   esi,esp,0x27
  40a559:	push   esi
  40a55a:	cmp    DWORD PTR [ebp-0x6390ef70],0xffffff88
  40a561:	and    dl,BYTE PTR [esi+0x41dbb99d]
  40a567:	sahf   
  40a568:	js     0x40a546
  40a56a:	clc    
  40a56b:	xor    ah,BYTE PTR [edi-0x31634b03]
  40a571:	sub    BYTE PTR [esi+eax*1+0x7c81a3fb],0xbc
  40a579:	mov    edi,DWORD PTR [esi+0x152f0ec7]
  40a57f:	arpl   WORD PTR [eax+0x6e],bp
  40a582:	imul   ebx,DWORD PTR [ecx],0xffffffd0
  40a585:	sbb    DWORD PTR [eax+0x6],edi
  40a588:	test   DWORD PTR [edi+0x16],0x519b886b
  40a58f:	dec    ecx
  40a590:	push   esp
  40a591:	mov    bl,0x29
  40a593:	jae    0x40a55d
  40a595:	and    eax,0x97795193
  40a59a:	and    DWORD PTR [ebp-0x1e7d4bfc],0x2f63a051
  40a5a4:	icebp  
  40a5a5:	fisub  WORD PTR [edx]
  40a5a7:	mov    dl,0x6e
  40a5a9:	cs icebp 
  40a5ab:	mov    ds:0x941674ae,al
  40a5b0:	(bad)  
  40a5b1:	into   
  40a5b2:	lahf   
  40a5b3:	das    
  40a5b4:	rcl    BYTE PTR [esi+edi*8-0x26],0x95
  40a5b9:	add    eax,0x74abb844
  40a5be:	sub    eax,0xa6efbc7d
  40a5c3:	or     al,BYTE PTR [ecx-0x22]
  40a5c6:	ficom  DWORD PTR [esi-0x6b]
  40a5c9:	inc    esi
  40a5ca:	fs dec edi
  40a5cc:	add    cl,bl
  40a5ce:	scas   al,BYTE PTR es:[edi]
  40a5cf:	ret    0xdbcf
  40a5d2:	mov    fs,WORD PTR [ebx+eiz*8-0x252eec63]
  40a5d9:	nop
  40a5da:	jne    0x40a5be
  40a5dc:	rcl    dx,0x43
  40a5e0:	dec    edi
  40a5e1:	jae    0x40a5b2
  40a5e3:	out    0x3a,al
  40a5e5:	mov    ebx,0xa37b2bff
  40a5ea:	aas    
  40a5eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5ec:	fs mov ch,0x5d
  40a5ef:	xchg   edi,eax
  40a5f0:	adc    al,0x41
  40a5f2:	std    
  40a5f3:	xor    edi,DWORD PTR [edx]
  40a5f5:	lock sub al,0xfb
  40a5f8:	mov    bh,0xf6
  40a5fa:	lods   eax,DWORD PTR ds:[esi]
  40a5fb:	xchg   esi,eax
  40a5fc:	cmp    bh,BYTE PTR [ecx+0x3c058a52]
  40a602:	data16 stos BYTE PTR es:[edi],al
  40a604:	pop    ebp
  40a605:	int3   
  40a606:	mov    dh,0x2c
  40a608:	cmp    ebx,DWORD PTR [ebp+0x3d]
  40a60b:	adc    eax,0x5d1fde06
  40a610:	repz jno 0x40a5e3
  40a613:	push   ebx
  40a614:	xchg   edi,eax
  40a615:	pop    esp
  40a616:	cmp    BYTE PTR [ebx-0x1],dl
  40a619:	ja     0x40a5bb
  40a61b:	add    eax,0x9ed51754
  40a620:	popa   
  40a621:	add    ebp,ebx
  40a623:	mov    ds:0xbe834bde,al
  40a628:	and    esp,DWORD PTR [edx+esi*8-0x59]
  40a62c:	push   ss
  40a62d:	lahf   
  40a62e:	pop    ebp
  40a62f:	outs   dx,BYTE PTR ds:[esi]
  40a630:	xchg   edx,eax
  40a631:	xor    esi,DWORD PTR [ecx-0x10005d9c]
  40a637:	xchg   edx,eax
  40a638:	(bad)  
  40a639:	loop   0x40a621
  40a63b:	(bad)  
  40a63d:	jge    0x40a608
  40a63f:	ins    BYTE PTR es:[edi],dx
  40a640:	cmp    dh,ah
  40a642:	mov    edi,0x9567569a
  40a647:	inc    edx
  40a648:	mov    ebx,0x3a35530a
  40a64d:	adc    DWORD PTR [esi+0x13683af7],esi
  40a653:	adc    eax,0x4278d444
  40a658:	xor    al,0x58
  40a65a:	and    eax,0x83d41343
  40a65f:	sub    al,0xe1
  40a661:	mov    DWORD PTR [esi-0x60a22946],esp
  40a667:	mov    bh,0x86
  40a669:	inc    esi
  40a66a:	in     eax,0x2b
  40a66c:	cmp    BYTE PTR [edi+0x5c],ch
  40a66f:	jne    0x40a633
  40a671:	loop   0x40a62b
  40a673:	imul   eax,DWORD PTR [edi-0x179303d8],0x32
  40a67a:	push   edx
  40a67b:	retf   0xb02a
  40a67e:	repnz ss retf 
  40a681:	sbb    esi,DWORD PTR [edx]
  40a683:	hlt    
  40a684:	jo     0x40a615
  40a686:	pushf  
  40a687:	test   BYTE PTR [eax+0x75e147f0],dl
  40a68d:	lea    edi,[ecx+0x6ab2eb01]
  40a693:	or     al,0x97
  40a695:	shl    esi,cl
  40a697:	clc    
  40a698:	stc    
  40a699:	stos   BYTE PTR es:[edi],al
  40a69a:	adc    eax,0xa76501f0
  40a69f:	cli    
  40a6a0:	inc    eax
  40a6a1:	inc    esi
  40a6a2:	pop    ebp
  40a6a3:	cmc    
  40a6a4:	dec    esi
  40a6a5:	gs iret 
  40a6a7:	scas   eax,DWORD PTR es:[edi]
  40a6a8:	mov    bl,BYTE PTR [ebp-0x4129648]
  40a6ae:	test   DWORD PTR [ecx-0x43],edi
  40a6b1:	jg     0x40a677
  40a6b3:	push   cx
  40a6b5:	inc    esi
  40a6b6:	mov    esp,DWORD PTR [eax+0x2e463d0e]
  40a6bc:	jmp    0x467dc70d
  40a6c1:	sub    al,BYTE PTR [edi]
  40a6c3:	push   ebx
  40a6c4:	jae    0x40a6f2
  40a6c6:	(bad)  
  40a6c7:	mov    ebx,ecx
  40a6c9:	push   0xfffffff1
  40a6cb:	shl    esp,1
  40a6cd:	jmp    0x3d416228
  40a6d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6d3:	fwait
  40a6d4:	les    esi,FWORD PTR [esi-0x1d]
  40a6d7:	cli    
  40a6d8:	mov    ecx,0x4f8425d4
  40a6dd:	pop    ss
  40a6de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6df:	fnstenv [ecx]
  40a6e1:	pop    ds
  40a6e2:	cmp    edx,0x4c833a70
  40a6e8:	xchg   edi,eax
  40a6e9:	popf   
  40a6ea:	pop    ecx
  40a6eb:	xchg   esp,eax
  40a6ec:	cs dec esi
  40a6ee:	push   es
  40a6ef:	retf   0xede
  40a6f2:	mov    DWORD PTR [eax+0x19],ecx
  40a6f5:	xor    eax,0xedcd7732
  40a6fa:	add    BYTE PTR [ecx+0x25],al
  40a6fd:	retf   
  40a6fe:	add    bh,BYTE PTR [edx+0x70]
  40a701:	dec    edx
  40a702:	inc    ecx
  40a703:	or     DWORD PTR [esi+0x197362df],0x2a
  40a70a:	repz arpl si,sp
  40a70d:	inc    ecx
  40a70e:	mov    bl,0x4
  40a710:	mov    BYTE PTR [eax+0x5e],cl
  40a713:	or     eax,0x298e5326
  40a718:	std    
  40a719:	aam    0xaf
  40a71b:	shr    cl,cl
  40a71d:	aaa    
  40a71e:	test   DWORD PTR [esi+0x3a],ecx
  40a721:	aad    0xc3
  40a723:	dec    ecx
  40a724:	jno    0x40a779
  40a726:	pushf  
  40a727:	mov    ebp,0xc3a85166
  40a72c:	xlat   BYTE PTR ds:[ebx]
  40a72d:	cmp    cl,BYTE PTR [edx+ebp*1+0x2f]
  40a731:	hlt    
  40a732:	out    dx,eax
  40a733:	mov    dh,0x9e
  40a735:	xor    al,0xc7
  40a737:	lods   eax,DWORD PTR ds:[esi]
  40a738:	out    dx,al
  40a739:	stos   DWORD PTR es:[edi],eax
  40a73a:	push   ecx
  40a73b:	or     al,ah
  40a73d:	enter  0xf8d1,0xc7
  40a741:	jp     0x40a769
  40a743:	cmp    dh,cl
  40a745:	or     cl,dh
  40a747:	inc    esp
  40a748:	shr    DWORD PTR [ebp-0x4f],1
  40a74b:	add    esi,DWORD PTR [eax-0xe]
  40a74e:	jmp    0x68d46e90
  40a753:	mov    cl,0xe7
  40a755:	sub    al,0xb0
  40a757:	ins    DWORD PTR es:[edi],dx
  40a758:	xor    al,0xfc
  40a75a:	add    BYTE PTR [esi],0xc0
  40a75d:	mov    esi,0x547e4db2
  40a762:	xchg   BYTE PTR ds:0x7e4d05ea,al
  40a768:	out    0x25,al
  40a76a:	mov    eax,ds:0xfe9ec42
  40a76f:	adc    al,0xdd
  40a771:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a772:	mov    bl,0x3f
  40a774:	push   esp
  40a775:	sub    BYTE PTR [ecx],ah
  40a777:	ja     0x40a704
  40a779:	mov    DWORD PTR [ebx],ebp
  40a77b:	dec    ecx
  40a77c:	jae    0x40a74c
  40a77e:	dec    esp
  40a77f:	addr16 rol edi,1
  40a782:	aam    0x33
  40a784:	and    DWORD PTR [esi],ecx
  40a786:	das    
  40a787:	sub    ecx,edi
  40a789:	les    ebp,FWORD PTR [ebp-0x36]
  40a78c:	and    BYTE PTR [edx-0x7a],bh
  40a78f:	pop    es
  40a790:	pop    esp
  40a791:	loope  0x40a72d
  40a793:	(bad)  
  40a794:	push   ebp
  40a795:	mov    dl,0x13
  40a797:	out    0x7a,eax
  40a799:	das    
  40a79a:	sub    ebx,0x46c5c77a
  40a7a0:	or     BYTE PTR [ebp+ebx*8+0x9ccef18],cl
  40a7a7:	inc    ecx
  40a7a8:	jo     0x40a754
  40a7aa:	dec    edx
  40a7ab:	jnp    0x40a750
  40a7ad:	push   esi
  40a7ae:	mov    ah,0xb9
  40a7b0:	inc    WORD PTR es:[edi]
  40a7b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7b5:	stos   DWORD PTR es:[edi],eax
  40a7b6:	sub    al,0x4f
  40a7b8:	mov    bh,0xb7
  40a7ba:	fs std 
  40a7bc:	fs mov ecx,0xcba6f994
  40a7c2:	loop   0x40a7a6
  40a7c4:	xchg   ecx,eax
  40a7c5:	cmp    ebx,DWORD PTR [edx]
  40a7c7:	(bad)  
  40a7ca:	mov    esp,0xd6017eb3
  40a7cf:	xchg   esp,eax
  40a7d0:	ins    DWORD PTR es:[edi],dx
  40a7d1:	daa    
  40a7d2:	sbb    eax,0xc836fcb8
  40a7d7:	sub    eax,0x97402d5a
  40a7dc:	sahf   
  40a7dd:	call   0x44a2:0xc288f1e6
  40a7e4:	fiadd  WORD PTR [edx+0x4e1b5b39]
  40a7ea:	loop   0x40a84d
  40a7ec:	cdq    
  40a7ed:	scas   al,BYTE PTR es:[edi]
  40a7ee:	pop    ds
  40a7ef:	das    
  40a7f0:	loop   0x40a86b
  40a7f2:	push   ebp
  40a7f3:	inc    edx
  40a7f4:	cmp    al,0x3e
  40a7f6:	sub    al,0x8f
  40a7f8:	xor    eax,0xde383bf7
  40a7fd:	icebp  
  40a7fe:	inc    ebx
  40a7ff:	aaa    
  40a800:	pop    edx
  40a801:	arpl   di,bp
  40a803:	and    BYTE PTR [ebx+0x9],0xfc
  40a807:	cs (bad) 
  40a809:	in     eax,dx
  40a80a:	in     al,dx
  40a80b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a80c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a80d:	fist   WORD PTR [esi+ecx*1-0x473df791]
  40a814:	lock xor BYTE PTR [edx+0x8],0x18
  40a819:	mov    ecx,0x1b2f7f3f
  40a81e:	jmp    0x40a849
  40a820:	add    eax,0xb10eb580
  40a825:	icebp  
  40a826:	or     ebx,DWORD PTR [esi-0xc]
  40a829:	mov    esp,0xb6f84469
  40a82e:	jnp    0x40a7f6
  40a830:	dec    ebx
  40a831:	cmc    
  40a832:	jb     0x40a7e2
  40a834:	int3   
  40a835:	fcomp  DWORD PTR [ebp-0x704b89ed]
  40a83b:	and    ch,al
  40a83d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a83e:	inc    esi
  40a83f:	adc    DWORD PTR gs:[ebp+0x3],ebx
  40a843:	sub    ebx,DWORD PTR [edi]
  40a845:	lods   eax,DWORD PTR ds:[esi]
  40a846:	inc    ecx
  40a847:	jl     0x40a887
  40a849:	push   ecx
  40a84a:	test   BYTE PTR [edi+0xb452144],al
  40a850:	sti    
  40a851:	cmp    al,0x3c
  40a853:	popa   
  40a854:	mov    ecx,0xde34c4b3
  40a859:	and    BYTE PTR fs:[edx+0x1ef97c96],cl
  40a860:	cwde   
  40a861:	ins    BYTE PTR es:[edi],dx
  40a862:	fld    DWORD PTR [edi+0x6ab44cf6]
  40a868:	mov    al,ds:0xb363d1f7
  40a86d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a86e:	push   edx
  40a86f:	jge    0x40a8cd
  40a871:	enter  0xc6a8,0x14
  40a875:	and    esp,0xa38eb06a
  40a87b:	pop    esp
  40a87c:	loope  0x40a806
  40a87e:	mov    al,ds:0x280ebeaa
  40a883:	scas   al,BYTE PTR es:[edi]
  40a884:	sbb    eax,0xddb50cd6
  40a889:	out    dx,al
  40a88a:	iret   
  40a88b:	popa   
  40a88c:	(bad)  
  40a88d:	pushf  
  40a88e:	pop    eax
  40a88f:	xor    DWORD PTR [ebp-0x72a814f],eax
  40a895:	stos   BYTE PTR es:[edi],al
  40a896:	stc    
  40a897:	sbb    BYTE PTR [ebp-0x7b03eb5e],0x62
  40a89e:	cmp    eax,0x5f247fd7
  40a8a3:	pop    gs
  40a8a5:	cld    
  40a8a6:	mul    esp
  40a8a8:	ins    DWORD PTR es:[edi],dx
  40a8a9:	imul   DWORD PTR [edi+edi*1]
  40a8ac:	cli    
  40a8ad:	ficomp WORD PTR [ecx]
  40a8af:	nop
  40a8b0:	retfw  0x8919
  40a8b4:	and    cl,cl
  40a8b6:	jae    0x40a8b9
  40a8b8:	pop    ss
  40a8b9:	jp     0x40a8b2
  40a8bb:	dec    esp
  40a8bc:	pop    edx
  40a8bd:	cmp    DWORD PTR [ebx+0x18db793d],0x58
  40a8c4:	cmp    cl,ch
  40a8c6:	mov    esi,0xdb4b7d6e
  40a8cb:	outs   dx,DWORD PTR ds:[esi]
  40a8cc:	clc    
  40a8cd:	mov    ebx,0xb8eefdc8
  40a8d2:	repz xchg edx,eax
  40a8d4:	or     al,0xd3
  40a8d6:	and    al,0x4e
  40a8d8:	add    edx,DWORD PTR [ebp+0x3d]
  40a8db:	(bad)  [edx-0x21]
  40a8de:	xlat   BYTE PTR ds:[ebx]
  40a8df:	and    esp,DWORD PTR [edx]
  40a8e1:	push   esi
  40a8e2:	push   edi
  40a8e3:	pop    ds
  40a8e4:	pusha  
  40a8e5:	jnp    0x40a914
  40a8e7:	inc    ebx
  40a8e8:	imul   ebx,DWORD PTR [edx+0x598944f5],0xc27c17ab
  40a8f2:	push   edi
  40a8f3:	out    dx,eax
  40a8f4:	xor    ebx,DWORD PTR [edx-0x43]
  40a8f7:	mov    ecx,0x44212b63
  40a8fc:	jmp    0xd2d0:0x318757a5
  40a903:	or     BYTE PTR [ecx+0x31d94310],al
  40a909:	ins    BYTE PTR es:[edi],dx
  40a90a:	xchg   DWORD PTR [esi+0x1],edi
  40a90d:	mov    esp,0x2205b96b
  40a912:	xchg   ecx,eax
  40a913:	sbb    al,0x27
  40a915:	out    dx,al
  40a916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a917:	repnz push cs
  40a919:	jbe    0x40a90b
  40a91b:	jns    0x40a987
  40a91d:	or     BYTE PTR [edi],0xd7
  40a920:	test   edi,ecx
  40a922:	adc    BYTE PTR [ecx-0x63138d9f],0xc9
  40a929:	icebp  
  40a92a:	jo     0x40a94a
  40a92c:	mov    bh,al
  40a92e:	xchg   ecx,eax
  40a92f:	mov    eax,ds:0xbc52378f
  40a934:	loop   0x40a90e
  40a936:	inc    eax
  40a937:	mov    dh,0x45
  40a939:	mov    edx,0xac75a682
  40a93e:	cmp    bh,ch
  40a940:	cmp    esi,DWORD PTR [esp+ebx*1-0x42]
  40a944:	retf   0x7cb2
  40a947:	push   ds
  40a948:	das    
  40a949:	mov    esp,0xbd67c472
  40a94e:	xchg   BYTE PTR [ecx+eiz*8-0x54],ch
  40a952:	pop    ebp
  40a953:	mov    dh,0xe9
  40a955:	fdiv   st,st(2)
  40a957:	lock xlat BYTE PTR ds:[ebx]
  40a959:	cs jns 0x40a8ec
  40a95c:	mov    ah,0x34
  40a95e:	xchg   BYTE PTR [ecx],bh
  40a960:	ror    BYTE PTR [ebx+ebx*4-0x4a],1
  40a964:	or     BYTE PTR [ebx+ebp*4],cl
  40a967:	shl    DWORD PTR [edi-0x18],0x2a
  40a96b:	dec    esi
  40a96c:	gs jg  0x40a947
  40a96f:	mov    esp,0x30cc79bc
  40a974:	dec    esp
  40a975:	mov    edx,0x13709ed7
  40a97a:	in     al,0xe4
  40a97c:	pop    eax
  40a97d:	mov    edx,0xf223fbfb
  40a982:	adc    eax,0x3116367d
  40a987:	push   0xd3b931f6
  40a98c:	retf   
  40a98d:	addr16 inc esi
  40a98f:	(bad)  
  40a990:	cmp    bl,BYTE PTR [esp+ecx*8-0x335689a7]
  40a997:	retf   0x830f
  40a99a:	mov    eax,0xe765af43
  40a99f:	pop    edi
  40a9a0:	ins    DWORD PTR es:[edi],dx
  40a9a1:	ror    BYTE PTR [edi+0x20],cl
  40a9a4:	jmp    0x88361086
  40a9a9:	inc    esp
  40a9aa:	sbb    BYTE PTR [ecx-0x75e5dd49],dl
  40a9b0:	and    al,0x62
  40a9b2:	xlat   BYTE PTR ds:[ebx]
  40a9b3:	leave  
  40a9b4:	lea    ecx,[edx-0x2449e297]
  40a9ba:	mov    esi,0x68310ce0
  40a9bf:	ror    esi,1
  40a9c1:	or     DWORD PTR [eax+edx*1],edi
  40a9c4:	fwait
  40a9c5:	push   0xffffff96
  40a9c7:	cwde   
  40a9c8:	hlt    
  40a9c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9ca:	sets   BYTE PTR [ebx-0x1379749]
  40a9d1:	retf   0xcb2e
  40a9d4:	mov    eax,0x6c4b3e24
  40a9d9:	gs call 0xfc38c865
  40a9df:	sub    al,0x3a
  40a9e1:	xor    BYTE PTR [eax],bh
  40a9e3:	cs ins DWORD PTR es:[edi],dx
  40a9e5:	out    dx,al
  40a9e6:	pop    edi
  40a9e7:	lea    ebx,[ebp-0x250ab1c6]
  40a9ed:	(bad)  
  40a9ee:	mov    edi,0xb0dd3a0a
  40a9f3:	jmp    0x60fb:0xc2bbbbf2
  40a9fa:	and    al,0xd2
  40a9fc:	fcmovne st,st(0)
  40a9fe:	imul   BYTE PTR [esp+ebp*1+0x508d413a]
  40aa05:	mov    ecx,0xe01e07ab
  40aa0a:	out    0x39,al
  40aa0c:	(bad)  [ebp-0x77f54010]
  40aa12:	or     edx,DWORD PTR [edi-0x47]
  40aa15:	ror    BYTE PTR [ecx+0x3c2e2b2a],1
  40aa1b:	fcomp  QWORD PTR [ebx-0x545fff6e]
  40aa21:	fwait
  40aa22:	inc    edx
  40aa23:	(bad)  
  40aa24:	clc    
  40aa25:	push   ecx
  40aa26:	clc    
  40aa27:	add    dh,BYTE PTR [ebx+0x5c157aab]
  40aa2d:	ror    bh,cl
  40aa2f:	add    DWORD PTR [esi+0x24],edi
  40aa32:	xchg   esp,eax
  40aa33:	repz popa 
  40aa35:	jl     0x40aa44
  40aa37:	jns    0x40aa80
  40aa39:	lahf   
  40aa3a:	loop   0x40a9d8
  40aa3c:	mov    cl,0xd5
  40aa3e:	cwde   
  40aa3f:	aad    0xe1
  40aa41:	sbb    eax,0x866a4100
  40aa46:	scas   al,BYTE PTR es:[edi]
  40aa47:	std    
  40aa48:	dec    edx
  40aa49:	in     al,dx
  40aa4a:	mov    WORD PTR [edx-0x6a],?
  40aa4d:	iret   
  40aa4e:	ret    0xc1f4
  40aa51:	inc    ebx
  40aa52:	xlat   BYTE PTR ds:[ebx]
  40aa53:	mov    bl,0xcd
  40aa55:	addr16 or dl,dl
  40aa58:	scas   al,BYTE PTR es:[edi]
  40aa59:	mov    edx,0x963b053e
  40aa5e:	push   ebx
  40aa5f:	enter  0x29b3,0x40
  40aa63:	ins    DWORD PTR es:[edi],dx
  40aa64:	add    dh,ch
  40aa66:	mov    es,WORD PTR [esi-0x65]
  40aa69:	daa    
  40aa6a:	inc    ebx
  40aa6b:	xor    BYTE PTR [edi-0x13],bh
  40aa6e:	sbb    DWORD PTR [ebp+ebp*4+0x65],ebp
  40aa72:	mov    ebp,0xde1e2e63
  40aa77:	outs   dx,BYTE PTR ds:[esi]
  40aa78:	or     ah,bh
  40aa7a:	and    dh,bl
  40aa7c:	into   
  40aa7d:	or     BYTE PTR ss:[ebx-0x1f5fe0e6],bh
  40aa84:	outs   dx,DWORD PTR ds:[esi]
  40aa85:	dec    ecx
  40aa86:	and    DWORD PTR [eax-0x5c330a0b],esp
  40aa8c:	xor    BYTE PTR [ecx-0x21fc3f0c],dh
  40aa92:	pop    ecx
  40aa93:	mov    eax,0xf74d2b49
  40aa98:	cmp    edi,DWORD PTR [esi]
  40aa9a:	mov    dh,0xb
  40aa9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa9d:	outs   dx,DWORD PTR ds:[esi]
  40aa9e:	sti    
  40aa9f:	arpl   WORD PTR [ecx],ax
  40aaa1:	pop    edi
  40aaa2:	inc    edi
  40aaa3:	jae    0x40ab04
  40aaa5:	fcomp  QWORD PTR [ecx-0x23]
  40aaa8:	je     0x40aae2
  40aaaa:	xor    al,BYTE PTR [ecx+0x6d]
  40aaad:	cmp    al,0x3d
  40aaaf:	shr    BYTE PTR [esp+ecx*8-0x4f],cl
  40aab3:	mov    cl,0x2d
  40aab5:	adc    ebp,DWORD PTR [edx+0x5497c8bc]
  40aabb:	fiadd  WORD PTR [ecx-0x74481dc6]
  40aac1:	nop
  40aac2:	add    dh,BYTE PTR [ecx+0x4e]
  40aac5:	repnz fidivr WORD PTR [edi+0x5c871949]
  40aacc:	xor    BYTE PTR [edx-0x7c],dl
  40aacf:	cmp    eax,0x23460255
  40aad4:	sbb    DWORD PTR [esi-0x69],eax
  40aad7:	cdq    
  40aad8:	daa    
  40aad9:	mov    esp,fs
  40aadb:	push   0x7
  40aadd:	xchg   esi,eax
  40aade:	(bad)  
  40aadf:	les    ebp,FWORD PTR [edi+0x4b]
  40aae2:	popf   
  40aae3:	or     eax,0xa20a8f11
  40aae8:	ficom  DWORD PTR [ebx]
  40aaea:	aaa    
  40aaeb:	xor    al,0x53
  40aaed:	pushf  
  40aaee:	add    eax,0xc759f2fd
  40aaf3:	inc    edx
  40aaf4:	pop    ss
  40aaf5:	mov    BYTE PTR ds:0x1263c4f6,bh
  40aafb:	sbb    BYTE PTR ds:0x8c4a1072,ah
  40ab01:	mov    al,0x3
  40ab03:	and    ebx,ebx
  40ab05:	lds    edi,FWORD PTR [eax]
  40ab07:	jnp    0x40aac7
  40ab09:	xor    DWORD PTR [ebp+0x2d7b8fd2],0x7dbc71fa
  40ab13:	jecxz  0x40aaa8
  40ab15:	call   0x1323:0x5d88de17
  40ab1c:	push   cs
  40ab1d:	fisttp DWORD PTR [eax+eiz*2-0x48]
  40ab21:	les    edx,FWORD PTR [esi+0x4dbc7ade]
  40ab27:	jge    0x40aada
  40ab29:	mov    edx,0x36908abe
  40ab2e:	jns    0x40ab03
  40ab30:	cmp    eax,0x8ab96f85
  40ab35:	out    0x8c,al
  40ab37:	mov    edi,0x72003f4c
  40ab3c:	pop    ds
  40ab3d:	inc    edx
  40ab3e:	dec    esi
  40ab3f:	dec    DWORD PTR [ecx]
  40ab41:	lock add al,0x9b
  40ab44:	fsubrp st(0),st
  40ab46:	inc    esp
  40ab47:	xchg   ebp,eax
  40ab48:	adc    BYTE PTR [edx-0x71],0x84
  40ab4c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40ab4e:	or     edi,ebx
  40ab50:	or     al,0x69
  40ab52:	push   esi
  40ab53:	cdq    
  40ab54:	cmp    DWORD PTR [edx-0x66],ecx
  40ab57:	sub    al,cl
  40ab59:	add    al,0x58
  40ab5b:	jmp    0x5f46:0x2f657171
  40ab62:	sbb    BYTE PTR [ebp+edx*1-0x2237bd27],bh
  40ab69:	mov    al,0x31
  40ab6b:	les    ebp,FWORD PTR [eax]
  40ab6d:	sub    bh,al
  40ab6f:	fisub  WORD PTR [edi-0x4a]
  40ab72:	mov    WORD PTR [ecx-0x2a673590],?
  40ab78:	add    dl,bl
  40ab7a:	sub    DWORD PTR [eax-0x3b69f62c],esp
  40ab80:	add    BYTE PTR [esi+0x55d99a4],0x41
  40ab87:	cli    
  40ab88:	stc    
  40ab89:	inc    ebp
  40ab8a:	adc    bl,BYTE PTR [eax+esi*2-0x5c]
  40ab8e:	adc    ecx,DWORD PTR [ebx]
  40ab90:	std    
  40ab91:	stos   BYTE PTR es:[edi],al
  40ab92:	idiv   DWORD PTR [ebx]
  40ab94:	cmc    
  40ab95:	mov    esi,0xa05ab7a2
  40ab9a:	in     eax,0xc7
  40ab9c:	push   es
  40ab9d:	ret    0xe0
  40aba0:	cmp    dh,BYTE PTR [ecx+0x31]
  40aba3:	xchg   edx,eax
  40aba4:	adc    edx,DWORD PTR [ecx+0x5e6468f2]
  40abaa:	inc    ebp
  40abab:	mov    dh,0x93
  40abad:	sub    DWORD PTR [edi+0x3befde73],edx
  40abb3:	mov    ch,0xb8
  40abb5:	dec    esi
  40abb6:	data16 icebp 
  40abb8:	jmp    0x40ac15
  40abba:	push   es
  40abbb:	shl    DWORD PTR [ebx+eiz*8+0x76e3e1b2],1
  40abc2:	sub    BYTE PTR [ecx-0x73],cl
  40abc5:	mov    eax,0x859e6c4e
  40abca:	mov    ch,0xf0
  40abcc:	cmc    
  40abcd:	xor    al,0x70
  40abcf:	dec    esi
  40abd0:	lea    ecx,[ecx-0x79]
  40abd3:	jge    0x40ab6f
  40abd5:	daa    
  40abd6:	pop    edx
  40abd7:	adc    eax,0xbba6f663
  40abdc:	jl     0x40ac3e
  40abde:	xchg   ebx,edi
  40abe0:	jo     0x40abc9
  40abe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abe3:	cmp    eax,0xd32e144a
  40abe8:	ret    
  40abe9:	xchg   ecx,eax
  40abea:	shl    BYTE PTR [edi],1
  40abec:	xchg   edi,eax
  40abed:	adc    bh,BYTE PTR [ecx-0x3ecb0433]
  40abf3:	fwait
  40abf4:	xor    eax,DWORD PTR [edx]
  40abf6:	sub    DWORD PTR [eax+0x3b],edi
  40abf9:	push   0xffffffd3
  40abfb:	dec    esp
  40abfc:	push   cs
  40abfd:	xchg   esp,eax
  40abfe:	adc    cl,al
  40ac00:	mov    esi,0x75899ec4
  40ac05:	mov    eax,ds:0x252ca96c
  40ac0a:	sub    edi,DWORD PTR [ebp+0x53]
  40ac0d:	pop    eax
  40ac0e:	aam    0x7d
  40ac10:	lock push ds
  40ac12:	push   0x29
  40ac14:	loopne 0x40ac0a
  40ac16:	sahf   
  40ac17:	fs inc edx
  40ac19:	out    dx,al
  40ac1a:	or     al,0xb1
  40ac1c:	jnp    0x40ac3f
  40ac1e:	sbb    eax,0xa1aca5c2
  40ac23:	pop    edi
  40ac24:	xor    DWORD PTR [edi+0x74d832d0],0xffffffe7
  40ac2b:	adc    al,0x35
  40ac2d:	or     BYTE PTR [ecx],0x76
  40ac30:	xor    eax,0x573bcfdb
  40ac35:	cwde   
  40ac36:	add    DWORD PTR ds:[ecx-0x35],ecx
  40ac3a:	jae    0x40abec
  40ac3c:	es add al,0xff
  40ac3f:	dec    ecx
  40ac40:	mov    gs,edx
  40ac42:	test   bh,ch
  40ac44:	push   esp
  40ac45:	sar    DWORD PTR [esi+0x33fa0db4],cl
  40ac4b:	or     edi,DWORD PTR [eax-0x1be64876]
  40ac51:	xor    DWORD PTR [ebx+0x72d80a02],ebx
  40ac57:	and    cl,0x2a
  40ac5a:	ja     0x40abe8
  40ac5c:	xor    al,0x6f
  40ac5e:	stos   BYTE PTR es:[edi],al
  40ac5f:	cli    
  40ac60:	cmc    
  40ac61:	je     0x40ac1c
  40ac63:	sbb    BYTE PTR [eax+0x28],dl
  40ac66:	sub    al,0x3b
  40ac68:	cmc    
  40ac69:	loop   0x40ac58
  40ac6b:	mov    al,0x8
  40ac6d:	popf   
  40ac6e:	repz sub BYTE PTR [ebx],bh
  40ac71:	xchg   edx,eax
  40ac72:	inc    ecx
  40ac73:	(bad)  
  40ac74:	jo     0x40acbe
  40ac76:	das    
  40ac77:	and    bl,BYTE PTR [ecx-0x41]
  40ac7a:	fsub   DWORD PTR [edi+0xdd5a6cf]
  40ac80:	push   0x67440f85
  40ac85:	mov    ecx,0x6af9a353
  40ac8a:	scas   eax,DWORD PTR es:[edi]
  40ac8b:	(bad)  
  40ac8c:	mov    edx,0x360b8d
  40ac91:	adc    BYTE PTR [ebx-0x38],cl
  40ac94:	hlt    
  40ac95:	(bad)  
  40ac96:	js     0x40ac88
  40ac98:	jno    0x40accf
  40ac9a:	enter  0x99de,0xb1
  40ac9e:	(bad)  [ebx+0x7b]
  40aca1:	inc    esi
  40aca2:	clc    
  40aca3:	add    eax,0x24085a46
  40aca8:	call   0x2c22:0x7aea07a4
  40acaf:	or     DWORD PTR [eax+eax*1],edi
  40acb2:	ins    DWORD PTR es:[edi],dx
  40acb3:	inc    ebx
  40acb4:	dec    ebp
  40acb5:	mov    ah,0x61
  40acb7:	loop   0x40ac8a
  40acb9:	sti    
  40acba:	(bad)  
  40acbb:	(bad)  
  40acbc:	mov    dh,0x81
  40acbe:	xor    eax,0xd0a1ea32
  40acc3:	ficomp WORD PTR cs:[edx+0x13927683]
  40acca:	lock rcr BYTE PTR [edx+0x24a04cfc],cl
  40acd1:	in     eax,dx
  40acd2:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40acd4:	popf   
  40acd5:	test   eax,0x1a69fcdd
  40acda:	or     bl,BYTE PTR [esi+0x42]
  40acdd:	repz div sp
  40ace1:	dec    ebp
  40ace2:	leave  
  40ace3:	push   esi
  40ace4:	adc    esi,DWORD PTR [ebx-0x6e7092a]
  40acea:	stc    
  40aceb:	ss mov ch,0xb7
  40acee:	out    0xc9,al
  40acf0:	aas    
  40acf1:	pusha  
  40acf2:	call   0x943d4b7d
  40acf7:	ret    0x6dee
  40acfa:	jae    0x40acd8
  40acfc:	stc    
  40acfd:	adc    DWORD PTR [esp+edx*8-0x8],ebp
  40ad01:	mov    ch,0x74
  40ad03:	aad    0x65
  40ad05:	imul   DWORD PTR [ebp+0xb]
  40ad08:	loope  0x40ad34
  40ad0a:	pop    ebx
  40ad0b:	and    BYTE PTR [ebp+ebx*1+0x7e],ch
  40ad0f:	jg     0x40acb1
  40ad11:	dec    ecx
  40ad12:	jecxz  0x40ad84
  40ad14:	aam    0x8c
  40ad16:	(bad)
  40ad19:	lods   eax,DWORD PTR ds:[esi]
  40ad1a:	sbb    al,0xc3
  40ad1c:	int    0x26
  40ad1e:	dec    eax
  40ad1f:	xor    eax,0xe1716726
  40ad24:	fst    QWORD PTR [esi-0x54]
  40ad27:	int3   
  40ad28:	or     BYTE PTR [eax+0x37],ah
  40ad2b:	mov    ecx,0x1de2548a
  40ad30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad31:	aad    0x4f
  40ad33:	dec    eax
  40ad34:	es jb  0x40ad2d
  40ad37:	out    dx,eax
  40ad38:	xlat   BYTE PTR ds:[ebx]
  40ad39:	lods   eax,DWORD PTR ds:[esi]
  40ad3a:	les    ecx,FWORD PTR [esi+0x7c]
  40ad3d:	mov    ah,0x21
  40ad3f:	in     al,dx
  40ad40:	imul   edx,DWORD PTR [ecx+0x6ae71a68],0xffffff89
  40ad47:	jo     0x40accf
  40ad49:	xchg   esp,edx
  40ad4b:	ins    BYTE PTR es:[edi],dx
  40ad4c:	sbb    bh,BYTE PTR [ecx+ebx*2+0x45a934ef]
  40ad53:	inc    ecx
  40ad54:	adc    DWORD PTR [edx-0x60],ebp
  40ad57:	mov    dl,0x40
  40ad59:	pop    ss
  40ad5a:	xor    DWORD PTR [eax],ebx
  40ad5c:	les    ecx,FWORD PTR [edi+0x25]
  40ad5f:	sbb    DWORD PTR [edi-0x351de33a],esi
  40ad65:	pop    eax
  40ad66:	sub    dh,BYTE PTR [edi]
  40ad68:	jmp    0x40ad2f
  40ad6a:	scas   al,BYTE PTR es:[edi]
  40ad6b:	pop    ebx
  40ad6c:	mov    al,ds:0x9fd4413d
  40ad71:	(bad)  
  40ad72:	mov    eax,0x4c5b1de1
  40ad77:	leave  
  40ad78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad79:	mov    ebx,ebp
  40ad7b:	adc    edx,DWORD PTR [esi-0x25]
  40ad7e:	mov    bh,0xb1
  40ad80:	xlat   BYTE PTR ds:[ebx]
  40ad81:	cmp    ecx,DWORD PTR ds:0x9b30f922
  40ad87:	xchg   ecx,eax
  40ad88:	or     al,0x4e
  40ad8a:	bound  ecx,QWORD PTR [ebx-0x5]
  40ad8d:	lahf   
  40ad8e:	jno    0x40add5
  40ad90:	dec    eax
  40ad91:	aaa    
  40ad92:	mov    BYTE PTR [edi],ah
  40ad94:	out    dx,eax
  40ad95:	aaa    
  40ad96:	push   ds
  40ad97:	jnp    0x40ae09
  40ad99:	dec    edx
  40ad9a:	(bad)  [edx-0x632f874f]
  40ada0:	cmp    esi,DWORD PTR ds:0xcd478bbf
  40ada6:	adc    ch,cl
  40ada8:	jb     0x40ad7f
  40adaa:	ss jmp 0x40ade7
  40adad:	mov    WORD PTR [ebx+0x3e],fs
  40adb0:	mov    esp,?
  40adb2:	pop    es
  40adb3:	(bad)  
  40adb4:	stc    
  40adb5:	or     dh,BYTE PTR [eax-0x16]
  40adb8:	and    eax,DWORD PTR [esi]
  40adba:	cmp    ebp,DWORD PTR [edx-0x25]
  40adbd:	neg    DWORD PTR [edx]
  40adbf:	and    eax,0xf458756b
  40adc4:	dec    edi
  40adc5:	mov    ds:0x207284b2,eax
  40adca:	dec    ecx
  40adcb:	adc    eax,0x35ae2787
  40add0:	mov    bl,BYTE PTR [edx]
  40add2:	mov    ch,0x56
  40add4:	pop    ds
  40add5:	retf   0x1bb3
  40add8:	sub    BYTE PTR [esi],bh
  40adda:	inc    ecx
  40addb:	daa    
  40addc:	std    
  40addd:	(bad)  
  40adde:	sar    bl,1
  40ade0:	iret   
  40ade1:	push   eax
  40ade2:	loope  0x40adb0
  40ade4:	mov    al,0x65
  40ade6:	sbb    al,0x7b
  40ade8:	loopne 0x40adcc
  40adea:	adc    bl,BYTE PTR ds:0x1fde758a
  40adf0:	das    
  40adf1:	in     al,0x53
  40adf3:	jbe    0x40ae62
  40adf5:	je     0x40ae1f
  40adf7:	iret   
  40adf8:	out    0xb5,eax
  40adfa:	fmul   DWORD PTR [edx-0x513b6db]
  40ae00:	push   esp
  40ae01:	loope  0x40adff
  40ae03:	int    0x18
  40ae05:	mov    ah,bl
  40ae07:	hlt    
  40ae08:	sti    
  40ae09:	xchg   ch,dl
  40ae0b:	retf   
  40ae0c:	mov    ch,BYTE PTR [ecx]
  40ae0e:	sbb    BYTE PTR [eax-0x4b0382d7],cl
  40ae14:	out    dx,eax
  40ae15:	add    ebp,DWORD PTR [ebx]
  40ae17:	idiv   BYTE PTR [ecx+0x5bd27f66]
  40ae1d:	sub    al,0x13
  40ae1f:	xchg   BYTE PTR ds:0xb707fd30,bl
  40ae25:	adc    ah,cl
  40ae27:	and    ecx,ebx
  40ae29:	aam    0x5f
  40ae2b:	xor    DWORD PTR ds:0xe83753b,0xffffff8a
  40ae32:	sbb    BYTE PTR [ebx+0xef6456f],cl
  40ae38:	cmp    eax,0xa8652a7
  40ae3d:	jb     0x40ae18
  40ae3f:	leave  
  40ae40:	iret   
  40ae41:	ret    0xa422
  40ae44:	out    dx,eax
  40ae45:	fwait
  40ae46:	arpl   WORD PTR [eax],ax
  40ae48:	mov    esi,0x22f11bbe
  40ae4d:	push   cs
  40ae4e:	shr    esi,cl
  40ae50:	in     al,0x40
  40ae52:	stos   BYTE PTR es:[edi],al
  40ae53:	and    eax,0x1d123e6d
  40ae58:	bound  ebx,QWORD PTR [ebx-0x6e156299]
  40ae5e:	out    dx,al
  40ae5f:	sbb    ecx,DWORD PTR [ebx]
  40ae61:	mov    esi,0x965922ca
  40ae66:	fwait
  40ae67:	cdq    
  40ae68:	inc    ecx
  40ae69:	call   0x9361:0x62896a14
  40ae70:	push   ebx
  40ae71:	jbe    0x40ae8b
  40ae73:	sub    edx,ebx
  40ae75:	cmc    
  40ae76:	push   ss
  40ae77:	sub    eax,0x77dad74a
  40ae7c:	je     0x40aeec
  40ae7e:	pop    ds
  40ae7f:	fs xor eax,0x57519f63
  40ae85:	loop   0x40aea2
  40ae87:	mov    dh,0xd6
  40ae89:	fstp   DWORD PTR [ebp+0x75f348e0]
  40ae8f:	inc    ebp
  40ae90:	adc    dh,0x84
  40ae93:	pop    edi
  40ae94:	dec    ebp
  40ae95:	imul   ebx,ecx,0x94c907ca
  40ae9b:	mov    bh,0x96
  40ae9d:	jmp    0x68194fb
  40aea2:	jb     0x40aeb1
  40aea4:	mov    edx,DWORD PTR [eax-0x45e9e3b8]
  40aeaa:	clc    
  40aeab:	jl     0x40ae81
  40aead:	dec    esi
  40aeae:	in     al,dx
  40aeaf:	mov    esp,0x40b387f
  40aeb4:	in     al,dx
  40aeb5:	ss stc 
  40aeb7:	cmp    al,0xb7
  40aeb9:	cmp    bh,BYTE PTR [ecx-0x4e]
  40aebc:	sub    al,0x82
  40aebe:	or     edi,edi
  40aec0:	xor    BYTE PTR ds:[esi+0x30de023d],0x61
  40aec8:	and    dl,ah
  40aeca:	cwde   
  40aecb:	mov    cl,0xa9
  40aecd:	xchg   ebp,eax
  40aece:	lods   eax,DWORD PTR ds:[esi]
  40aecf:	hlt    
  40aed0:	inc    ebx
  40aed1:	cmc    
  40aed2:	int3   
  40aed3:	sbb    eax,0x7e67899a
  40aed8:	aas    
  40aed9:	mov    eax,ds:0x5db0ea6e
  40aede:	fbstp  TBYTE PTR [eax-0x7b5d32ce]
  40aee4:	ja     0x40af1f
  40aee6:	dec    ecx
  40aee7:	push   eax
  40aee8:	pusha  
  40aee9:	test   DWORD PTR [ebp-0x2f],esp
  40aeec:	lds    ebp,FWORD PTR [esi]
  40aeee:	push   esp
  40aeef:	lds    ecx,FWORD PTR [edi+0x875880e]
  40aef5:	and    al,0xd7
  40aef7:	mov    ebp,0x7c7eb5d9
  40aefc:	sbb    ecx,DWORD PTR [eax]
  40aefe:	lds    ecx,FWORD PTR [edx]
  40af00:	add    DWORD PTR [edx+0x13de93b5],ecx
  40af06:	jae    0x40af6d
  40af08:	mov    dl,0xde
  40af0a:	test   BYTE PTR [eax-0x28],0xb0
  40af0e:	mov    ds:0x93e7579f,al
  40af13:	std    
  40af14:	(bad)  
  40af15:	int3   
  40af16:	add    BYTE PTR [edi+0x33],bl
  40af19:	dec    esi
  40af1a:	adc    eax,0xb56ac1d8
  40af1f:	pop    ss
  40af20:	dec    ebp
  40af21:	rcr    BYTE PTR [eax+eax*2-0x2e9889c9],cl
  40af28:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af2a:	into   
  40af2b:	sbb    ebx,ebp
  40af2d:	xor    eax,0x58fd00e3
  40af32:	lahf   
  40af33:	pushaw 
  40af35:	cwde   
  40af36:	cmp    al,0x2b
  40af38:	mov    dh,0xe6
  40af3a:	js     0x40af3e
  40af3c:	dec    edi
  40af3d:	xor    al,0x3b
  40af3f:	pop    ecx
  40af40:	push   ecx
  40af41:	aad    0xf2
  40af43:	(bad)  
  40af44:	or     eax,DWORD PTR [ecx-0x77365e5f]
  40af4a:	cli    
  40af4b:	daa    
  40af4c:	xchg   ecx,eax
  40af4d:	aad    0xc9
  40af4f:	sub    eax,0x1fdfd76
  40af54:	push   cs
  40af55:	call   0xae46de67
  40af5a:	cmc    
  40af5b:	and    al,0xb8
  40af5d:	jmp    0x40af7e
  40af5f:	cmc    
  40af60:	iret   
  40af61:	dec    ebx
  40af62:	loopne 0x40afaa
  40af64:	jge    0x40afba
  40af66:	sbb    eax,0xeccf4aca
  40af6b:	shl    DWORD PTR [ebx+0x36],cl
  40af6e:	pop    edx
  40af6f:	xchg   BYTE PTR [ecx-0x54],cl
  40af72:	test   bh,bh
  40af74:	cmp    edx,DWORD PTR [ebp+edx*8-0x3b6dee25]
  40af7b:	fisttp QWORD PTR [esi]
  40af7d:	inc    eax
  40af7e:	enter  0xa56,0x8f
  40af82:	ja     0x40afda
  40af84:	mov    DWORD PTR [eax],0xeb97a839
  40af8a:	lds    ecx,FWORD PTR [edx+esi*1+0x74]
  40af8e:	xlat   BYTE PTR ds:[ebx]
  40af8f:	call   FWORD PTR [ebx+eiz*8+0x1b]
  40af93:	pop    esp
  40af94:	(bad)  
  40af95:	dec    eax
  40af96:	hlt    
  40af97:	inc    ebp
  40af98:	pop    edi
  40af99:	clc    
  40af9a:	arpl   WORD PTR [edi+0x472eaf72],bp
  40afa0:	xor    ecx,DWORD PTR [ecx+edx*1]
  40afa3:	xor    eax,0x5481d979
  40afa8:	imul   edx,DWORD PTR ds:0xb2cddf5b,0xbca579bd
  40afb2:	push   ds
  40afb3:	xchg   ebx,eax
  40afb4:	adc    al,0xcd
  40afb6:	sub    bl,BYTE PTR [ecx]
  40afb8:	data16 fimul WORD PTR [edi-0x6e9c4aff]
  40afbf:	cdq    
  40afc0:	push   es
  40afc1:	jno    0x40b014
  40afc3:	lods   eax,DWORD PTR ds:[esi]
  40afc4:	aam    0x98
  40afc6:	adc    esp,esi
  40afc8:	daa    
  40afc9:	xor    eax,0x7ab3294b
  40afce:	and    dh,BYTE PTR [ebx+0x3b]
  40afd1:	and    BYTE PTR [edi+eax*8-0x31],bl
  40afd5:	mov    dl,0xd8
  40afd7:	sar    BYTE PTR [edx],0x7f
  40afda:	dec    esi
  40afdb:	pop    ss
  40afdc:	retf   
  40afdd:	popf   
  40afde:	mov    edx,0x66060d29
  40afe3:	shr    BYTE PTR [esi-0x14],0xb
  40afe7:	outs   dx,DWORD PTR ds:[esi]
  40afe8:	dec    esp
  40afe9:	jp     0x40b03b
  40afeb:	mov    ch,0x2
  40afed:	test   BYTE PTR ds:0x3de3a53e,al
  40aff3:	adc    cl,BYTE PTR [ebx+0x15e399fd]
  40aff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40affa:	sub    al,BYTE PTR [edx]
  40affc:	clc    
  40affd:	jnp    0x40afe8
  40afff:	iret   
  40b000:	mov    ds:0x71182ba6,eax
  40b005:	sbb    bh,BYTE PTR [edx]
  40b007:	sbb    DWORD PTR [edx],edx
  40b009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b00a:	out    0xe3,al
  40b00c:	test   al,0x2a
  40b00e:	add    BYTE PTR [ecx+edx*4+0x27d8d5d5],cl
  40b015:	in     ax,0xe7
  40b018:	jmp    0xc9a1:0xf367ad7e
  40b01f:	cmp    bh,0xf
  40b022:	dec    esp
  40b023:	cmp    eax,0x71ee424f
  40b028:	fisttp WORD PTR [edx+0x2926ec48]
  40b02e:	loope  0x40afd4
  40b030:	addr16 imul ebp,esi,0x11
  40b034:	ror    BYTE PTR [ecx],1
  40b036:	into   
  40b037:	imul   ebx,DWORD PTR [edi+0x5dfa7260],0x3
  40b03e:	lock test eax,0x2baf9cd7
  40b044:	les    esp,FWORD PTR [esp+eiz*8-0x70]
  40b048:	jge    0x40afd6
  40b04a:	dec    ebx
  40b04b:	xchg   ecx,eax
  40b04c:	adc    BYTE PTR ds:0xf8170692,0x42
  40b053:	fist   DWORD PTR [edx+0x542d52ff]
  40b059:	jmp    0x40b00f
  40b05b:	cmp    ecx,DWORD PTR [eax+esi*2+0x27a060ea]
  40b062:	xor    BYTE PTR [edx+0x16],ch
  40b065:	push   0xd1724331
  40b06a:	cdq    
  40b06b:	push   cs
  40b06c:	xchg   ebx,eax
  40b06d:	dec    eax
  40b06e:	mov    ebp,0x89bee79f
  40b073:	dec    ebx
  40b074:	cmp    al,0xb2
  40b076:	repnz repnz pop ds
  40b079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b07a:	xchg   edx,eax
  40b07b:	pop    edi
  40b07c:	add    bh,ch
  40b07e:	cmp    ah,0x8c
  40b081:	jne    0x40b003
  40b083:	mov    ecx,0xc0d1471f
  40b088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b08a:	mov    bl,0xde
  40b08c:	fidivr WORD PTR [esi-0x2dd046ce]
  40b092:	hlt    
  40b093:	ret    0xe139
  40b096:	mov    ebp,edi
  40b098:	stos   DWORD PTR es:[edi],eax
  40b099:	ror    ch,1
  40b09b:	jmp    0x266df2f3
  40b0a0:	dec    edi
  40b0a1:	test   eax,0x40100e46
  40b0a6:	mov    edi,0xb7f88a19
  40b0ab:	mov    al,0x7a
  40b0ad:	cmp    al,0x45
  40b0af:	sbb    esi,DWORD PTR [esi]
  40b0b1:	cmp    esi,edi
  40b0b3:	push   esp
  40b0b4:	mov    bl,BYTE PTR [edx]
  40b0b6:	rcl    BYTE PTR [eax+0x57],cl
  40b0b9:	jbe    0x40b0d5
  40b0bb:	in     al,0xbe
  40b0bd:	push   0xe4f5c1c
  40b0c2:	and    DWORD PTR [edx+0x78974da1],ebx
  40b0c8:	dec    ebp
  40b0c9:	lahf   
  40b0ca:	dec    edi
  40b0cb:	cs jle 0x40b118
  40b0ce:	adc    ebp,DWORD PTR [edi-0x531f1439]
  40b0d4:	icebp  
  40b0d5:	xor    bh,dl
  40b0d7:	xchg   BYTE PTR [ebx+0x1d03559],al
  40b0dd:	inc    ebp
  40b0de:	sbb    eax,0xaf4f3fa7
  40b0e3:	repnz add eax,0x296becb0
  40b0e9:	std    
  40b0ea:	sbb    BYTE PTR [edx-0x3b],dl
  40b0ed:	mov    ebx,0x3b103971
  40b0f2:	ret    0x505
  40b0f5:	jmp    0x40b160
  40b0f7:	sbb    ebp,DWORD PTR [ebx-0x35]
  40b0fa:	(bad)  
  40b0fb:	fadd   st(6),st
  40b0fd:	popf   
  40b0fe:	add    eax,0xd54c40ce
  40b103:	mov    ds:0x9d7f73f8,al
  40b108:	cld    
  40b109:	sar    bh,1
  40b10b:	repnz push 0x46
  40b10e:	popa   
  40b10f:	mov    dl,0xbd
  40b111:	mov    edx,0x948a948f
  40b116:	or     BYTE PTR [esp+edx*2-0x76],ch
  40b11a:	ret    0x6c93
  40b11d:	fs jns 0x40b0f7
  40b120:	idiv   BYTE PTR [esp+ebx*4+0x214add5d]
  40b127:	or     eax,0xfbd2fbea
  40b12c:	push   ds
  40b12d:	shr    al,cl
  40b12f:	out    0xf1,eax
  40b131:	jb     0x40b16d
  40b133:	dec    edx
  40b134:	sub    al,0x68
  40b136:	xchg   edx,eax
  40b137:	inc    ecx
  40b138:	mov    bl,0x71
  40b13a:	sti    
  40b13b:	stc    
  40b13c:	pusha  
  40b13d:	shl    ah,0x51
  40b140:	jno    0x40b0e5
  40b142:	aas    
  40b143:	ret    
  40b144:	mov    ds:0xbd244d22,eax
  40b149:	mov    edi,DWORD PTR [edi+0x31a275bd]
  40b14f:	pop    es
  40b150:	or     eax,0x4f7c72b3
  40b155:	outs   dx,DWORD PTR ds:[esi]
  40b156:	aas    
  40b157:	sbb    BYTE PTR [ebx],ch
  40b159:	inc    esp
  40b15a:	jp     0x40b15f
  40b15c:	xor    al,0xc3
  40b15e:	sub    ah,bh
  40b160:	ins    DWORD PTR es:[edi],dx
  40b161:	lock mov eax,ds:0x2d08f559
  40b167:	(bad)  
  40b168:	repnz pop es
  40b16a:	xor    bh,BYTE PTR [edi+edi*4]
  40b16d:	xor    eax,0x1869d435
  40b172:	repnz inc cx
  40b175:	sub    eax,DWORD PTR [ecx-0x6d]
  40b178:	or     dh,BYTE PTR [eax+0x56]
  40b17b:	xchg   ah,dl
  40b17d:	sbb    esp,DWORD PTR [edx-0x39]
  40b180:	jp     0x40b148
  40b182:	loop   0x40b1f2
  40b184:	pop    ebp
  40b185:	ja     0x40b1e9
  40b187:	lds    esi,FWORD PTR [edx]
  40b189:	stc    
  40b18a:	enter  0x43aa,0xf4
  40b18e:	pusha  
  40b18f:	mov    esi,0xacebdc45
  40b194:	mov    BYTE PTR [edx-0x1e],ah
  40b197:	inc    eax
  40b198:	inc    ebp
  40b199:	not    DWORD PTR [edx-0x4267f393]
  40b19f:	and    BYTE PTR ds:0x59ed42ad,bh
  40b1a5:	into   
  40b1a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1a7:	jl     0x40b1f4
  40b1a9:	mov    ecx,0xdee45ba4
  40b1ae:	ins    BYTE PTR es:[edi],dx
  40b1af:	pop    ebp
  40b1b0:	ins    BYTE PTR es:[edi],dx
  40b1b1:	dec    esi
  40b1b2:	mov    dl,0xcf
  40b1b4:	ins    DWORD PTR es:[edi],dx
  40b1b5:	rcl    DWORD PTR ds:0xe151ea9f,1
  40b1bb:	add    DWORD PTR [esi-0x6bbfaca1],0xdf575cfe
  40b1c5:	mov    DWORD PTR [edx],ebp
  40b1c7:	aaa    
  40b1c8:	sar    DWORD PTR [edi+0x67e497fc],1
  40b1ce:	sub    eax,0x9596f124
  40b1d3:	iret   
  40b1d4:	fst    DWORD PTR [edx+0x5e]
  40b1d7:	lahf   
  40b1d8:	sldt   WORD PTR [eax+0x7a]
  40b1dc:	cmp    eax,0x5d8e1fe7
  40b1e1:	inc    edx
  40b1e2:	pop    ds
  40b1e3:	adc    al,al
  40b1e5:	cmc    
  40b1e6:	test   DWORD PTR [esi+0x35112954],ebx
  40b1ec:	mov    esp,0x33e21e32
  40b1f1:	mov    bh,0xaf
  40b1f3:	mov    bh,0x2f
  40b1f6:	push   esp
  40b1f7:	lea    edx,ds:0x9a9d70b1
  40b1fd:	jbe    0x40b24a
  40b1ff:	ror    BYTE PTR [ecx],1
  40b201:	test   ah,cl
  40b203:	push   ecx
  40b204:	shr    DWORD PTR [edx+0x39],0x34
  40b208:	jg     0x40b1d5
  40b20a:	xor    DWORD PTR [edx],edx
  40b20c:	pusha  
  40b20d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b20e:	mov    esp,ebx
  40b210:	jmp    0x40b24d
  40b212:	(bad)  
  40b213:	fld    DWORD PTR [ecx+0x41]
  40b216:	fs pop es
  40b218:	repnz and BYTE PTR [edi],dl
  40b21b:	mov    BYTE PTR [ebp+0x14bda966],ch
  40b221:	or     eax,0x1f73a759
  40b226:	pop    edi
  40b227:	pop    ds
  40b228:	(bad)  
  40b229:	je     0x40b24b
  40b22b:	push   eax
  40b22c:	jmp    0x40b238
  40b22e:	sahf   
  40b22f:	sbb    BYTE PTR ds:0x5bae753f,cl
  40b235:	ror    DWORD PTR [eax+0xc327f42],0xe2
  40b23c:	xchg   ch,bh
  40b23e:	or     al,0x8a
  40b240:	adc    DWORD PTR [edx+0x13],esp
  40b243:	pop    ecx
  40b244:	and    DWORD PTR [eax],0xffffffe5
  40b247:	add    DWORD PTR [ebx],0xc6df6c3b
  40b24d:	into   
  40b24e:	push   esi
  40b24f:	je     0x40b29c
  40b251:	push   ds
  40b252:	(bad)  
  40b253:	fucomi st,st(1)
  40b255:	mov    DWORD PTR [esp+eax*2],ecx
  40b258:	cmp    DWORD PTR [edi],edx
  40b25a:	mov    ch,0xd6
  40b25c:	push   ebx
  40b25d:	ret    
  40b25e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b25f:	push   edx
  40b260:	jp     0x40b255
  40b262:	test   al,0x78
  40b264:	or     ebp,DWORD PTR [ebp-0x263038d9]
  40b26a:	daa    
  40b26b:	mov    edi,esp
  40b26d:	adc    al,0x24
  40b26f:	mov    ebx,ds
  40b271:	add    al,0x30
  40b273:	xor    BYTE PTR [esp+eiz*4+0x1de37d54],bh
  40b27a:	aaa    
  40b27b:	push   cs
  40b27c:	lahf   
  40b27d:	je     0x40b202
  40b27f:	gs sub ch,al
  40b282:	jmp    0x40b288
  40b284:	adc    bl,0x47
  40b287:	push   esi
  40b288:	jne    0x40b2ec
  40b28a:	adc    ebx,DWORD PTR [ecx-0x17]
  40b28d:	push   edx
  40b28e:	add    al,0xcc
  40b290:	int    0xfb
  40b292:	dec    esp
  40b293:	add    bl,BYTE PTR [ecx-0x68a20db6]
  40b299:	jmp    0x40b245
  40b29b:	push   es
  40b29c:	loopne 0x40b305
  40b29e:	repz pop ds
  40b2a0:	pop    ds
  40b2a1:	mov    edx,0x358f6baa
  40b2a6:	push   ecx
  40b2a7:	adc    eax,0x99f7b4b7
  40b2ac:	mov    bh,0xfb
  40b2ae:	(bad)
  40b2b1:	push   ebx
  40b2b2:	jmp    0xff76:0xade9a37d
  40b2b9:	ret    
  40b2ba:	mov    ebp,0xb0beadae
  40b2bf:	pop    DWORD PTR [edx+esi*8+0xcfc685a]
  40b2c6:	and    al,0x22
  40b2c8:	add    DWORD PTR [ebx],esp
  40b2ca:	rol    dl,1
  40b2cc:	fcom   QWORD PTR [edi-0x243e0b3c]
  40b2d2:	popa   
  40b2d3:	scas   al,BYTE PTR es:[edi]
  40b2d4:	ins    BYTE PTR es:[edi],dx
  40b2d5:	xor    DWORD PTR [esi+edi*1+0x5f80b1a2],ecx
  40b2dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2dd:	or     BYTE PTR [esi+ebx*1],ch
  40b2e0:	ret    
  40b2e1:	pusha  
  40b2e2:	cld    
  40b2e3:	jns    0x40b2f2
  40b2e5:	test   al,0xe4
  40b2e7:	data16 sub BYTE PTR [edi],0x5
  40b2eb:	and    cl,BYTE PTR [edx-0x486869b5]
  40b2f1:	pop    ebp
  40b2f2:	xchg   ebx,eax
  40b2f3:	imul   ebp,DWORD PTR [edi-0x707799a6],0x44
  40b2fa:	das    
  40b2fb:	iret   
  40b2fc:	hlt    
  40b2fd:	ror    bh,0x9b
  40b300:	pop    eax
  40b301:	stc    
  40b302:	dec    edi
  40b303:	lock or BYTE PTR [edx+0x4ccce8be],ah
  40b30a:	(bad)  
  40b30b:	cmc    
  40b30c:	pop    di
  40b30e:	cmp    ebx,DWORD PTR [ebx+ebx*2+0x56cc0c54]
  40b315:	add    eax,0x559d0024
  40b31a:	ret    
  40b31b:	add    ah,bl
  40b31d:	push   ebp
  40b31e:	sbb    al,0x6e
  40b320:	and    al,0xad
  40b322:	pop    esp
  40b323:	or     esp,esi
  40b325:	leave  
  40b326:	xlat   BYTE PTR ds:[ebx]
  40b327:	cwde   
  40b328:	nop
  40b329:	pop    es
  40b32a:	mov    esi,0xea4a8cc0
  40b32f:	pop    ecx
  40b330:	add    ah,ah
  40b332:	xchg   ebx,eax
  40b333:	pop    ss
  40b334:	dec    ecx
  40b335:	loopne 0x40b34e
  40b337:	adc    DWORD PTR [edi-0x1e],esi
  40b33a:	test   BYTE PTR [esp+ecx*2],ah
  40b33d:	adc    ebx,DWORD PTR [edi+0x5bc7d889]
  40b343:	mov    BYTE PTR [eax],dh
  40b345:	adc    bl,al
  40b347:	or     DWORD PTR [esi-0x724ecdd5],0x28cfe723
  40b351:	jg     0x40b348
  40b353:	cmc    
  40b354:	xchg   ecx,eax
  40b355:	and    ebx,0xffffffef
  40b358:	cmp    al,0x12
  40b35a:	je     0x40b3c1
  40b35c:	popa   
  40b35d:	(bad)  
  40b35e:	mov    cl,0xd9
  40b360:	push   esi
  40b361:	sub    ch,BYTE PTR [ebx]
  40b363:	or     BYTE PTR [edx],dh
  40b365:	retf   
  40b366:	push   edx
  40b367:	sub    bl,bl
  40b369:	shr    BYTE PTR [edi],0xe0
  40b36c:	jbe    0x40b3a2
  40b36e:	shl    DWORD PTR [ebx],1
  40b370:	aas    
  40b371:	push   ds
  40b372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b373:	xchg   ecx,eax
  40b374:	std    
  40b375:	fisttp WORD PTR [ebp+0x2]
  40b378:	xchg   edi,eax
  40b379:	mov    dh,0x39
  40b37b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b37c:	iret   
  40b37d:	jg     0x40b3c1
  40b37f:	inc    edi
  40b380:	adc    BYTE PTR [eax+ebp*4+0x1cda10f8],cl
  40b387:	das    
  40b388:	(bad)  
  40b389:	ja     0x40b3cc
  40b38b:	test   DWORD PTR gs:[edx],eax
  40b38e:	sti    
  40b38f:	xor    al,0xda
  40b391:	fcomi  st,st(0)
  40b393:	push   0x32ec4654
  40b398:	js     0x40b37a
  40b39a:	xor    ecx,esp
  40b39c:	in     eax,dx
  40b39d:	fcomp  DWORD PTR [eax+0x6a1f388c]
  40b3a3:	add    cl,BYTE PTR [edi]
  40b3a5:	xchg   ebx,eax
  40b3a6:	cmc    
  40b3a7:	mov    dh,0xb5
  40b3a9:	mov    ds:0x26c86754,al
  40b3ae:	int    0x7f
  40b3b0:	test   eax,0x1ea34cd
  40b3b5:	fwait
  40b3b6:	mov    ecx,0xd2db4c09
  40b3bb:	stos   BYTE PTR es:[edi],al
  40b3bc:	outs   dx,BYTE PTR ds:[esi]
  40b3bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3be:	sbb    eax,0xef2e8e09
  40b3c3:	pop    esi
  40b3c4:	mov    ch,0x5f
  40b3c6:	and    edx,DWORD PTR [edi+0x69e3878f]
  40b3cc:	or     DWORD PTR [edi],0xe21f2f94
  40b3d2:	inc    esi
  40b3d3:	test   al,0xb0
  40b3d5:	mov    ds:0xf07ca3a7,al
  40b3da:	push   ebx
  40b3db:	adc    BYTE PTR [ebx-0x42],cl
  40b3de:	push   ss
  40b3df:	fild   QWORD PTR [esi-0x503d0961]
  40b3e5:	cmp    al,0x5c
  40b3e7:	mov    esp,0xa47720c1
  40b3ec:	xchg   ebx,eax
  40b3ed:	in     al,0xbc
  40b3ef:	shl    DWORD PTR [ecx-0x16],cl
  40b3f2:	ret    
  40b3f3:	pusha  
  40b3f4:	cwde   
  40b3f5:	jle    0x40b428
  40b3f7:	loopne 0x40b460
  40b3f9:	addr16 dec edi
  40b3fb:	imul   edx,DWORD PTR ds:[edi+0x65],0xfffffff9
  40b400:	push   esi
  40b401:	popf   
  40b402:	and    BYTE PTR [edi-0x535e7f7e],al
  40b408:	dec    ecx
  40b409:	inc    ebx
  40b40a:	stos   DWORD PTR es:[edi],eax
  40b40b:	xor    eax,0x376ff1c
  40b410:	scas   al,BYTE PTR es:[edi]
  40b411:	jno    0x40b455
  40b413:	jnp    0x40b45b
  40b415:	in     al,0xf2
  40b417:	dec    esi
  40b418:	loop   0x40b44b
  40b41a:	sub    dl,bl
  40b41c:	xchg   esp,eax
  40b41d:	lea    ebp,[ebp-0x4f]
  40b420:	cmp    eax,0x1807c013
  40b425:	lock add eax,0x4cdaf55a
  40b42b:	mov    bh,0x14
  40b42d:	pop    es
  40b42e:	push   cs
  40b42f:	jge    0x40b3fc
  40b431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b432:	and    esp,DWORD PTR [ebp+ebx*4+0x6fff81d2]
  40b439:	in     eax,dx
  40b43a:	aam    0x86
  40b43c:	pop    esp
  40b43d:	js     0x40b474
  40b43f:	stos   DWORD PTR es:[edi],eax
  40b440:	sahf   
  40b441:	loopne 0x40b40f
  40b443:	aad    0xa2
  40b445:	push   eax
  40b446:	adc    bl,ch
  40b448:	adc    DWORD PTR [esi+0x28e9cdf4],edi
  40b44e:	adc    al,0xf5
  40b450:	in     eax,0x45
  40b452:	inc    ebp
  40b453:	ds inc edi
  40b455:	les    esp,FWORD PTR [edi]
  40b457:	mov    DWORD PTR [esp+ebx*1-0x5c0c9e48],esp
  40b45e:	mov    ah,0x11
  40b460:	les    ebx,FWORD PTR cs:[esi]
  40b463:	jae    0x40b441
  40b465:	mov    edx,0x510d704
  40b46a:	into   
  40b46b:	sub    BYTE PTR [esi-0x6140f275],bh
  40b471:	int    0x7f
  40b473:	fidivr DWORD PTR [eax+0x68db4891]
  40b479:	scas   eax,DWORD PTR es:[edi]
  40b47a:	ins    DWORD PTR es:[edi],dx
  40b47b:	push   eax
  40b47c:	ins    DWORD PTR es:[edi],dx
  40b47d:	enter  0xbecf,0x97
  40b481:	out    dx,eax
  40b482:	into   
  40b483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b484:	cs dec ecx
  40b486:	sbb    DWORD PTR ds:0x509c5094,esp
  40b48c:	or     BYTE PTR [esi-0x3a5fae64],ch
  40b492:	fdivp  st(3),st
  40b494:	jg     0x40b50a
  40b496:	mov    ch,BYTE PTR es:[ecx-0x7]
  40b49a:	inc    edx
  40b49b:	push   cs
  40b49c:	popa   
  40b49d:	inc    eax
  40b49e:	(bad)  
  40b49f:	jmp    0x40b4f3
  40b4a1:	in     al,0xa6
  40b4a3:	inc    edx
  40b4a4:	popf   
  40b4a5:	mov    ecx,0x4a2f817c
  40b4aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4ab:	jp     0x40b43f
  40b4ad:	add    DWORD PTR [ebp+esi*1-0x75c6d031],0xffffffda
  40b4b5:	in     ax,dx
  40b4b7:	lds    eax,FWORD PTR [ebp+0x37cf70c3]
  40b4bd:	or     dl,dl
  40b4bf:	add    eax,0xda19ec0a
  40b4c4:	inc    eax
  40b4c5:	ins    BYTE PTR es:[edi],dx
  40b4c6:	je     0x40b4b5
  40b4c8:	mov    al,0x38
  40b4ca:	jmp    0x7f6d9580
  40b4cf:	inc    ecx
  40b4d0:	xchg   edx,eax
  40b4d1:	in     al,0x54
  40b4d3:	fstp   QWORD PTR [eax+0x20]
  40b4d6:	int3   
  40b4d7:	mov    WORD PTR [edx],ss
  40b4d9:	cmp    ebp,DWORD PTR [eax+0x3196e34f]
  40b4df:	xchg   esi,eax
  40b4e0:	inc    ecx
  40b4e1:	mov    al,0xe4
  40b4e3:	addr16 mov ch,0x10
  40b4e6:	das    
  40b4e7:	fwait
  40b4e8:	imul   ebp,DWORD PTR [edx-0x1a],0xa3d46d36
  40b4ef:	neg    edi
  40b4f1:	mov    bl,0x2e
  40b4f3:	fld    TBYTE PTR [ebx+0x587d9ee6]
  40b4f9:	or     edx,DWORD PTR [edi-0x174f90d8]
  40b4ff:	jmp    0x40b54a
  40b501:	add    eax,0x4d99dc07
  40b506:	push   0xffffff8f
  40b508:	cmc    
  40b509:	inc    eax
  40b50a:	push   ebp
  40b50b:	adc    BYTE PTR [eax],0x89
  40b50e:	(bad)  
  40b50f:	sub    al,BYTE PTR [esi+0x54]
  40b512:	and    eax,0xf1915b6c
  40b517:	jns    0x40b549
  40b519:	(bad)  
  40b51a:	xor    al,0x5d
  40b51c:	ins    BYTE PTR es:[edi],dx
  40b51d:	out    0x91,eax
  40b51f:	push   0x44
  40b521:	push   0x6a
  40b523:	push   ebx
  40b524:	(bad)  
  40b525:	mov    cl,0x94
  40b527:	enter  0xa0ae,0xd4
  40b52b:	inc    edi
  40b52c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b52d:	sti    
  40b52e:	in     eax,dx
  40b52f:	neg    bl
  40b531:	cdq    
  40b532:	arpl   WORD PTR [ebx+0x77c2a45b],sp
  40b538:	(bad)  
  40b53a:	cmp    ecx,DWORD PTR [ebx+ebp*1]
  40b53d:	popf   
  40b53e:	sahf   
  40b53f:	in     eax,0x59
  40b541:	in     eax,0x7b
  40b543:	xor    DWORD PTR [ecx+0x10],0x9
  40b547:	sub    esp,esi
  40b549:	adc    eax,0x8c3a8436
  40b54e:	mov    al,ds:0xeec2aeb8
  40b553:	(bad)  
  40b554:	xor    eax,DWORD PTR [ebx+0x2414df64]
  40b55a:	mov    DWORD PTR [ecx+eax*4+0x7e],edx
  40b55e:	sbb    bh,BYTE PTR [ebp+0xe]
  40b561:	imul   edx,DWORD PTR es:[ebp+0x49],0xbc4644b9
  40b569:	out    0xdc,al
  40b56b:	sub    DWORD PTR [esi-0x1c],esp
  40b56e:	and    DWORD PTR cs:[ecx-0x5b],esi
  40b572:	jmp    0x2f2f:0x5b43733c
  40b579:	cmp    cl,bl
  40b57b:	pmullw mm3,QWORD PTR [ebp+0x3f]
  40b57f:	nop
  40b580:	cli    
  40b581:	cmp    bl,dl
  40b583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b584:	aam    0xf1
  40b586:	or     DWORD PTR [ecx+0x2e],ebx
  40b589:	test   BYTE PTR [eax+0x7b],0xab
  40b58d:	sub    al,0x2f
  40b58f:	mov    bl,0xa8
  40b591:	pop    eax
  40b592:	sbb    BYTE PTR [ecx+0x7b4eb4ff],ah
  40b598:	es xchg ecx,eax
  40b59a:	xor    BYTE PTR [edx],al
  40b59c:	adc    cl,BYTE PTR [eax-0x7bb2562c]
  40b5a2:	sbb    esp,DWORD PTR [edi]
  40b5a4:	aas    
  40b5a5:	stos   DWORD PTR es:[edi],eax
  40b5a6:	add    eax,DWORD PTR [ebp+0x39]
  40b5a9:	imul   edx,DWORD PTR [eax],0xb1b761e3
  40b5af:	aad    0xaa
  40b5b1:	iret   
  40b5b2:	sahf   
  40b5b3:	add    BYTE PTR [ecx+ebx*1-0x292cfd07],cl
  40b5ba:	int3   
  40b5bb:	xchg   esi,eax
  40b5bc:	out    0x32,al
  40b5be:	ficom  WORD PTR [esi+0x3]
  40b5c1:	push   esi
  40b5c2:	jg     0x40b630
  40b5c4:	fidiv  DWORD PTR [edx]
  40b5c6:	shr    dh,1
  40b5c8:	and    ch,BYTE PTR [esp+ecx*1-0x6ea6c697]
  40b5cf:	data16 rcr dh,0x52
  40b5d3:	in     al,dx
  40b5d4:	inc    ebp
  40b5d5:	hlt    
  40b5d6:	xor    al,0x98
  40b5d8:	retf   0x8c97
  40b5db:	push   esp
  40b5dc:	out    dx,al
  40b5dd:	shl    BYTE PTR [eax-0x33a80895],0xdb
  40b5e4:	imul   edi,ecx,0xa9e47284
  40b5ea:	xlat   BYTE PTR ds:[ebx]
  40b5eb:	mov    al,0x48
  40b5ed:	pop    ebx
  40b5ee:	jmp    0xf8ad:0x672c1b41
  40b5f5:	add    al,0xc3
  40b5f7:	inc    ebx
  40b5f8:	data16 ss fs bnd jno 0x40b5f4
  40b5fe:	fst    DWORD PTR [esi-0x758a55e7]
  40b604:	mov    ebx,0x97addcd3
  40b609:	popf   
  40b60a:	push   es
  40b60b:	xchg   DWORD PTR [esi-0x21],esi
  40b60e:	ins    DWORD PTR es:[edi],dx
  40b60f:	stc    
  40b610:	shl    BYTE PTR [ebp+0x858fbf2],0x22
  40b617:	daa    
  40b618:	pusha  
  40b619:	adc    sp,WORD PTR [ebx]
  40b61c:	call   0x3ea280c0
  40b621:	or     eax,0xbd2ce9e9
  40b626:	pop    esp
  40b627:	xchg   ebx,eax
  40b628:	lahf   
  40b629:	leave  
  40b62a:	jg     0x40b5d3
  40b62c:	or     cx,dx
  40b62f:	adc    edx,DWORD PTR [esi-0x625fb183]
  40b635:	icebp  
  40b636:	adc    dh,bh
  40b638:	push   ecx
  40b639:	sbb    esp,esi
  40b63b:	imul   eax,DWORD PTR [ecx+0x215d9d9f],0xf
  40b642:	sub    BYTE PTR [edi-0x5c5e6da4],ch
  40b648:	jmp    0x631b7931
  40b64d:	xchg   BYTE PTR [esi+ebp*8],cl
  40b650:	xchg   esi,eax
  40b651:	jnp    0x40b6a6
  40b653:	fiadd  WORD PTR [ebp+0x65]
  40b656:	(bad)  
  40b657:	gs retf 
  40b659:	mov    cl,0x2
  40b65b:	cmp    BYTE PTR [ecx+0x446dadf0],cl
  40b661:	ds ja  0x40b65c
  40b664:	jmp    0x7f2663a7
  40b669:	imul   DWORD PTR [eax+eiz*4-0x226866a0]
  40b670:	lea    esi,[eax+0x3f]
  40b673:	xor    BYTE PTR [ecx-0xfa4dd1a],cl
  40b679:	test   DWORD PTR [edx],ebp
  40b67b:	jns    0x40b63f
  40b67d:	cmp    DWORD PTR [bp+di+0x3586],esp
  40b682:	and    BYTE PTR [edx-0x5a],bh
  40b685:	sbb    BYTE PTR [eax-0x5b],bh
  40b688:	call   0x9877:0xfabc57f4
  40b68f:	mov    WORD PTR [edi+0x1d],ss
  40b692:	adc    ecx,eax
  40b694:	aad    0x13
  40b696:	mov    esi,0xa8e9289f
  40b69b:	jb     0x40b687
  40b69d:	push   0xffffff87
  40b69f:	mov    edx,DWORD PTR [edi]
  40b6a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6a2:	fdivr  QWORD PTR [ebx+esi*1-0x78]
  40b6a6:	ds push 0x35
  40b6a9:	rcr    DWORD PTR [eax+0x47123c22],1
  40b6af:	out    0x6b,eax
  40b6b1:	mov    bh,0x95
  40b6b3:	cmp    bl,ah
  40b6b5:	push   eax
  40b6b6:	repz imul esi,DWORD PTR [edx-0x5c98801a],0x4a1067b6
  40b6c1:	adc    DWORD PTR [edi+0x5f031526],esp
  40b6c7:	lods   al,BYTE PTR ds:[esi]
  40b6c8:	nop
  40b6c9:	mov    edi,0xa3593977
  40b6ce:	sbb    cl,BYTE PTR [ecx+0x5cbf116]
  40b6d4:	addr16 iret 
  40b6d6:	fwait
  40b6d7:	imul   ebx,DWORD PTR [ebx-0x7ab45bb4],0xffffffc0
  40b6de:	test   eax,0x6a4ccfe0
  40b6e3:	add    BYTE PTR [edi+0x31],dh
  40b6e6:	add    al,0x74
  40b6e8:	jl     0x40b674
  40b6ea:	and    DWORD PTR ds:0xa27116aa,eax
  40b6f0:	adc    dl,dh
  40b6f2:	jecxz  0x40b768
  40b6f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6f5:	mov    ds:0xd632c4dc,al
  40b6fa:	or     BYTE PTR [eax],al
  40b6fc:	cli    
  40b6fd:	jns    0x40b6fc
  40b6ff:	call   DWORD PTR [esi-0x1b]
  40b702:	push   edi
  40b703:	push   edi
  40b704:	add    bl,dh
  40b706:	stos   DWORD PTR es:[edi],eax
  40b707:	pop    ebx
  40b708:	and    eax,0x63897c47
  40b70d:	add    ah,BYTE PTR [edx+edx*8+0x61e383b3]
  40b714:	sub    BYTE PTR [esi-0xa],al
  40b717:	jp     0x40b6d4
  40b719:	mov    al,ds:0xa72df407
  40b71e:	into   
  40b71f:	into   
  40b720:	lds    ebp,FWORD PTR [ecx+0x7b]
  40b723:	(bad)  
  40b724:	push   ebx
  40b725:	dec    ebp
  40b726:	(bad)  
  40b727:	clc    
  40b728:	mov    ds:0x7d8cee7a,eax
  40b72d:	test   DWORD PTR ds:0xb6014e4e,edi
  40b733:	adc    cl,BYTE PTR [eax-0xc051753]
  40b739:	shr    BYTE PTR [eax],cl
  40b73b:	jb     0x40b6bf
  40b73d:	add    eax,0x7d5b2ee9
  40b742:	mov    edx,0xf79730f4
  40b747:	fsubrp st(7),st
  40b749:	cmp    DWORD PTR [eax],eax
  40b74b:	out    dx,eax
  40b74c:	pop    ebp
  40b74d:	sbb    ch,dl
  40b74f:	sbb    eax,DWORD PTR [edi-0x4f21c479]
  40b755:	cmp    al,0xa8
  40b757:	je     0x40b70b
  40b759:	jg     0x40b757
  40b75b:	push   0xffffffa2
  40b75d:	int    0x68
  40b75f:	pop    edi
  40b760:	cmp    DWORD PTR [esi+0x7c],edx
  40b763:	mov    ebx,0xbf2f0b7a
  40b768:	loope  0x40b76d
  40b76a:	xor    BYTE PTR [ecx-0x3af8f31c],al
  40b770:	imul   edx,DWORD PTR [ebx+esi*2-0xa56295f],0xffffff9b
  40b778:	jbe    0x40b755
  40b77a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b77b:	lods   eax,DWORD PTR ds:[esi]
  40b77c:	add    bl,BYTE PTR [ebp+0x454d5e50]
  40b782:	in     al,dx
  40b783:	pop    ebx
  40b784:	ss aas 
  40b786:	dec    ebp
  40b787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b788:	push   edi
  40b789:	cld    
  40b78a:	sub    al,0x90
  40b78c:	jmp    0x4328fd9a
  40b791:	popa   
  40b792:	call   0xe01b:0x2bca6904
  40b799:	dec    ebp
  40b79a:	sbb    BYTE PTR [eax-0x1a],dl
  40b79d:	xchg   DWORD PTR ds:0xdb810ea3,ecx
  40b7a3:	push   0x49571f78
  40b7a8:	inc    eax
  40b7a9:	sbb    bx,WORD PTR [ecx+0x24]
  40b7ad:	(bad)
  40b7b0:	rol    BYTE PTR [edi+0xdc6fd12],cl
  40b7b6:	cld    
  40b7b7:	out    dx,eax
  40b7b8:	pop    edx
  40b7b9:	adc    DWORD PTR [esp+ebx*2+0x39],esi
  40b7bd:	icebp  
  40b7be:	jb     0x40b7d0
  40b7c0:	bound  ebx,QWORD PTR [esi+edx*4+0x49c90dc5]
  40b7c7:	sahf   
  40b7c8:	out    dx,eax
  40b7c9:	leave  
  40b7ca:	xchg   esi,eax
  40b7cb:	jo     0x40b7a4
  40b7cd:	scas   eax,DWORD PTR es:[edi]
  40b7ce:	xor    eax,ecx
  40b7d0:	mov    DWORD PTR [edi-0x3b],esi
  40b7d3:	inc    ebx
  40b7d4:	or     ah,bh
  40b7d6:	fldcw  WORD PTR [ecx+edx*2+0x3c1cae0f]
  40b7dd:	mov    edx,0x717627a
  40b7e2:	scas   al,BYTE PTR es:[edi]
  40b7e3:	adc    eax,0x2905119
  40b7e8:	dec    edx
  40b7e9:	mov    edx,0x931cdf0f
  40b7ee:	mov    ecx,0x55db1a5d
  40b7f3:	mov    edx,0x62020f42
  40b7f8:	jle    0x40b7df
  40b7fa:	dec    ebx
  40b7fb:	cmp    DWORD PTR [ebx+0x4a],0x49
  40b7ff:	aas    
  40b800:	test   DWORD PTR [esi+0x1270496c],esp
  40b806:	pop    edi
  40b807:	sar    DWORD PTR [esi+0xf],0x27
  40b80b:	xchg   ecx,eax
  40b80c:	sbb    BYTE PTR [ecx+eiz*2-0x13],ah
  40b810:	dec    eax
  40b811:	and    al,0x21
  40b813:	shr    DWORD PTR [ebx+0x18],1
  40b816:	mov    ds:0x128430ca,eax
  40b81b:	cmp    DWORD PTR [edi],edx
  40b81d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b81e:	sar    BYTE PTR [ecx*2-0x73d39c4e],cl
  40b825:	ds in  al,dx
  40b827:	pop    esp
  40b828:	add    BYTE PTR [esi+0x2a4d3166],0x18
  40b82f:	dec    ebp
  40b830:	cdq    
  40b831:	test   ebp,ecx
  40b833:	fnstsw WORD PTR ds:[esi+0x42]
  40b837:	and    al,0x7b
  40b839:	ret    0x6011
  40b83c:	sbb    al,0xde
  40b83e:	xchg   edx,eax
  40b83f:	pusha  
  40b840:	mov    al,ds:0x625a3db7
  40b845:	sti    
  40b846:	test   BYTE PTR [edx],0x16
  40b849:	(bad)  
  40b84a:	ror    BYTE PTR [edi-0x30],1
  40b84d:	inc    eax
  40b84e:	pop    eax
  40b84f:	shl    DWORD PTR [edx+edi*4-0x1330e9bb],cl
  40b856:	mov    ebp,0x5f051578
  40b85b:	cmp    eax,0x497408fc
  40b860:	ins    BYTE PTR es:[edi],dx
  40b861:	add    DWORD PTR [ebp+0x5c],0x52fa9fe2
  40b868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b869:	push   cs
  40b86a:	outs   dx,BYTE PTR ds:[esi]
  40b86b:	fsub   DWORD PTR [edi]
  40b86d:	test   bh,dl
  40b86f:	jl     0x40b7ff
  40b871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b872:	and    DWORD PTR [ecx+0xf],ecx
  40b875:	in     al,dx
  40b876:	bnd jp 0x40b8d7
  40b879:	fdiv   QWORD PTR [ebx-0x4d5adffb]
  40b87f:	and    BYTE PTR [edx+ecx*1],0x1f
  40b883:	mov    ds:0xb6a8a665,eax
  40b888:	les    sp,DWORD PTR [edx]
  40b88b:	pop    ss
  40b88c:	lods   eax,DWORD PTR ds:[esi]
  40b88d:	cli    
  40b88e:	repnz neg DWORD PTR [ecx+0x5ee48aff]
  40b895:	jg     0x40b8d8
  40b897:	hlt    
  40b898:	icebp  
  40b899:	loop   0x40b81f
  40b89b:	outs   dx,BYTE PTR ds:[esi]
  40b89c:	ret    
  40b89d:	xchg   ebx,eax
  40b89e:	sbb    al,0x2b
  40b8a0:	jge    0x40b874
  40b8a2:	push   ecx
  40b8a3:	and    al,0x98
  40b8a5:	shl    BYTE PTR [esp+esi*8-0x9a81a70],cl
  40b8ac:	mov    DWORD PTR [edi+0x33acc2b2],esi
  40b8b2:	inc    eax
  40b8b3:	mov    ecx,0x7d10c3b
  40b8b8:	cli    
  40b8b9:	into   
  40b8ba:	in     al,dx
  40b8bb:	cmp    DWORD PTR [esi-0xc],ebx
  40b8be:	stos   BYTE PTR es:[edi],al
  40b8bf:	xor    al,0xbb
  40b8c1:	shl    BYTE PTR [esi],0x68
  40b8c4:	aaa    
  40b8c5:	lea    ebx,[eax+0x70]
  40b8c8:	sbb    ch,0x3d
  40b8cb:	add    bl,BYTE PTR [esi+0x7c202af8]
  40b8d1:	xor    ch,BYTE PTR [esp+ebp*4-0x4479888b]
  40b8d8:	jne    0x40b8fe
  40b8da:	xchg   esi,eax
  40b8db:	stos   BYTE PTR es:[edi],al
  40b8dc:	fisttp QWORD PTR [edi]
  40b8de:	in     al,0x3c
  40b8e0:	jmp    0x279:0xb5add61
  40b8e7:	bswap  edx
  40b8e9:	mov    edx,0x3d4e1fa2
  40b8ee:	cli    
  40b8ef:	test   ch,ah
  40b8f1:	sbb    DWORD PTR [esi+0x3ab9c38],ebp
  40b8f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8f8:	mov    ecx,0xdc8c29ca
  40b8fd:	push   cs
  40b8fe:	mov    edi,0x323b70b2
  40b903:	push   ebp
  40b904:	inc    ebx
  40b905:	gs scas al,BYTE PTR es:[edi]
  40b907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b908:	and    dl,BYTE PTR [ecx+ebx*1+0x79]
  40b90c:	pop    ds
  40b90d:	xor    cl,BYTE PTR [ebp+0x14]
  40b910:	mov    BYTE PTR [ebp-0x43],dl
  40b913:	inc    esp
  40b914:	rcr    BYTE PTR [edx],1
  40b916:	scas   al,BYTE PTR es:[edi]
  40b917:	aad    0x8
  40b919:	lock call 0x90e7:0xc72858d9
  40b921:	call   0x9b185d17
  40b926:	imul   esi,DWORD PTR [ebx+eiz*2+0x5f],0x7105d97e
  40b92e:	mov    BYTE PTR ds:0x73578f38,ch
  40b934:	leave  
  40b935:	xor    edx,DWORD PTR [ebx+0x4]
  40b938:	jg     0x40b96c
  40b93a:	rcr    BYTE PTR [esi+0x61],cl
  40b93d:	arpl   WORD PTR [ebx+0xa292a6f],bx
  40b943:	jbe    0x40b8e8
  40b945:	leave  
  40b946:	cmp    DWORD PTR [eax+0x254e1ec2],ebp
  40b94c:	loopne 0x40b97e
  40b94e:	jno    0x40b9c4
  40b950:	ss out 0x48,eax
  40b953:	sub    dh,BYTE PTR [eax]
  40b955:	jb     0x40b9cd
  40b957:	add    eax,DWORD PTR [ecx]
  40b959:	test   al,0x7a
  40b95b:	jp     0x40b941
  40b95d:	outs   dx,BYTE PTR ds:[esi]
  40b95e:	out    dx,al
  40b95f:	leave  
  40b960:	xor    eax,0x342ad70f
  40b965:	mov    edx,0x9e6bd20f
  40b96a:	mov    dh,0xba
  40b96c:	adc    BYTE PTR [ebp+0x33],0xd9
  40b970:	aad    0x2
  40b972:	mov    ebx,0xa3562843
  40b977:	xor    eax,0x96b2324
  40b97c:	mov    al,0x7d
  40b97e:	call   0x69fffffe
  40b983:	pop    esp
  40b984:	jne    0x40b933
  40b986:	lock pop ds
  40b988:	push   esp
  40b989:	push   esp
  40b98a:	push   es
  40b98b:	mov    ecx,0x43f52cd1
  40b990:	nop
  40b991:	or     BYTE PTR [esi+ecx*8-0x53],0x39
  40b996:	pop    edx
  40b997:	sar    BYTE PTR [edx-0x5028ef7],cl
  40b99d:	or     bh,ah
  40b99f:	fdivr  DWORD PTR [ebp+0x3c151d4e]
  40b9a5:	sbb    al,0x52
  40b9a8:	cmp    esi,esi
  40b9aa:	test   eax,0x68d67a77
  40b9af:	ss inc edi
  40b9b1:	ins    BYTE PTR es:[edi],dx
  40b9b2:	push   0x2a
  40b9b4:	cld    
  40b9b5:	ret    0x4743
  40b9b8:	retf   
  40b9b9:	stos   BYTE PTR es:[edi],al
  40b9ba:	test   al,0xc8
  40b9bc:	sbb    al,0xfa
  40b9be:	dec    ebp
  40b9bf:	call   0x4862:0xa4473928
  40b9c6:	mov    ah,0xb4
  40b9c8:	dec    eax
  40b9c9:	jg     0x40b9eb
  40b9cb:	fcomp  DWORD PTR [ebx-0x5b]
  40b9ce:	jecxz  0x40b990
  40b9d0:	sub    al,0xdd
  40b9d2:	sahf   
  40b9d3:	fist   DWORD PTR [ecx+0x27f5de72]
  40b9d9:	stos   BYTE PTR es:[edi],al
  40b9da:	js     0x40b9c4
  40b9dc:	and    eax,DWORD PTR [ebx-0x2c]
  40b9df:	push   0x1d
  40b9e1:	mov    ch,0xe8
  40b9e3:	cdq    
  40b9e4:	ins    BYTE PTR es:[edi],dx
  40b9e5:	shr    BYTE PTR [edx],0x76
  40b9e8:	jmp    0xd242:0x77954ce
  40b9ef:	test   DWORD PTR [esi],eax
  40b9f1:	test   ebp,0xfe0ec42b
  40b9f7:	inc    eax
  40b9f8:	or     al,0xe6
  40b9fa:	pop    dx
  40b9fc:	cwde   
  40b9fd:	aad    0x86
  40b9ff:	stos   BYTE PTR es:[edi],al
  40ba00:	xchg   ecx,eax
  40ba01:	stc    
  40ba02:	cwde   
  40ba03:	test   DWORD PTR [ebp-0x3b4337b6],eax
  40ba09:	popa   
  40ba0a:	lods   al,BYTE PTR ds:[esi]
  40ba0b:	hlt    
  40ba0c:	ja     0x40ba89
  40ba0e:	ror    DWORD PTR [edx+0x3967bf37],1
  40ba14:	sbb    BYTE PTR [eax+edx*2+0x6],ah
  40ba18:	adc    al,0xd7
  40ba1a:	adc    DWORD PTR [ecx-0x7e611c00],0xb532b872
  40ba24:	or     DWORD PTR ds:0xc025e8c9,0x2cadb1c5
  40ba2e:	loope  0x40ba0f
  40ba30:	mov    esp,0xf405bc1b
  40ba35:	ss jns 0x40ba8c
  40ba38:	fisttp WORD PTR [ecx-0x1f85a0e0]
  40ba3e:	xlat   BYTE PTR ds:[ebx]
  40ba3f:	jno    0x40ba34
  40ba41:	fwait
  40ba42:	inc    ebp
  40ba43:	and    edx,DWORD PTR [ebx+0x12f48c0]
  40ba49:	inc    edx
  40ba4a:	repnz push ebp
  40ba4c:	rcl    DWORD PTR [ebx+0x37c90638],cl
  40ba52:	test   BYTE PTR [ebp-0x73],cl
  40ba55:	or     DWORD PTR [edi+0x7a],ebp
  40ba58:	cmp    eax,0x47aa7a9b
  40ba5d:	mov    eax,0x8f909388
  40ba62:	xor    DWORD PTR [edx-0x18],ebp
  40ba65:	repnz mov dh,dh
  40ba68:	mov    ds:0xa43f94c2,al
  40ba6d:	outs   dx,DWORD PTR ds:[esi]
  40ba6e:	aad    0x6f
  40ba70:	bound  esp,QWORD PTR [eax]
  40ba72:	pop    ebx
  40ba73:	or     DWORD PTR es:[esp+esi*4+0x30981997],esp
  40ba7b:	xor    ah,BYTE PTR [ecx-0x2ec04b72]
  40ba81:	(bad)  
  40ba82:	xchg   edi,eax
  40ba83:	lock sub BYTE PTR [eax],0x90
  40ba87:	and    ah,bl
  40ba89:	push   ecx
  40ba8a:	sub    ebp,ebx
  40ba8c:	test   eax,0xc592a10
  40ba91:	pop    esi
  40ba92:	fwait
  40ba93:	and    eax,0xe42378b2
  40ba99:	cmp    DWORD PTR [edx-0x30],0x55a45ba8
  40baa0:	rol    ebx,1
  40baa2:	sub    esp,DWORD PTR [edx-0x3a789312]
  40baa8:	ins    DWORD PTR es:[edi],dx
  40baa9:	(bad)  
  40baaa:	push   edx
  40baab:	aas    
  40baac:	test   BYTE PTR [esi+0x445c0683],bh
  40bab2:	and    ch,ah
  40bab4:	test   eax,0x458a5414
  40bab9:	std    
  40baba:	or     eax,0x6fe5f32c
  40babf:	jmp    0x40babf
  40bac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bac2:	cmp    al,0xc7
  40bac4:	adc    bl,bl
  40bac6:	rol    ah,cl
  40bac8:	lods   eax,DWORD PTR ds:[esi]
  40bac9:	push   cs
  40baca:	shr    ebx,1
  40bacc:	sar    BYTE PTR [esi-0x3d5c741b],cl
  40bad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bad3:	cmp    bl,BYTE PTR ds:0xfad9a8f6
  40bad9:	mov    ebp,0x52d6dd0e
  40bade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40badf:	(bad)  
  40bae1:	inc    edx
  40bae2:	dec    esp
  40bae3:	fwait
  40bae4:	pop    DWORD PTR [ecx]
  40bae6:	js     0x40bb5f
  40bae8:	in     eax,dx
  40bae9:	aas    
  40baea:	sbb    BYTE PTR [ebp+0x6abb0992],dl
  40baf0:	cdq    
  40baf1:	sbb    edi,DWORD PTR [ebx]
  40baf3:	sahf   
  40baf4:	sbb    BYTE PTR [esp+eiz*4+0x38],cl
  40baf8:	jecxz  0x40bb23
  40bafa:	sbb    dl,dh
  40bafc:	es in  eax,0x82
  40baff:	cmp    eax,0xa578ff5d
  40bb04:	mov    esp,0x67570360
  40bb09:	call   0x4364d22f
  40bb0e:	xor    edi,DWORD PTR [edx+eax*2-0x51]
  40bb12:	leave  
  40bb13:	jecxz  0x40bb4b
  40bb15:	test   al,0x47
  40bb17:	mov    edi,DWORD PTR [ecx-0x4d]
  40bb1a:	jle    0x40bb2c
  40bb1c:	mov    cl,0x2f
  40bb1e:	cmp    eax,ebx
  40bb20:	mov    esi,0xd91fa62c
  40bb25:	rcl    BYTE PTR [ebp-0xf2a1f71],cl
  40bb2b:	jne    0x40bb3e
  40bb2d:	jnp    0x40baf9
  40bb2f:	outs   dx,BYTE PTR ds:[esi]
  40bb30:	frstor [esi]
  40bb32:	adc    eax,0x56ed7b72
  40bb37:	addr16 mov ebp,0xadab58f
  40bb3d:	and    ah,BYTE PTR [eax-0x2d62656c]
  40bb43:	add    al,0x5d
  40bb45:	jl     0x40bba2
  40bb47:	or     bl,BYTE PTR [ebp-0x73]
  40bb4a:	mov    esp,0xb2e15e77
  40bb4f:	mov    dl,0x9e
  40bb51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb52:	push   ebp
  40bb53:	adc    eax,0xe67331cc
  40bb58:	xchg   esi,eax
  40bb59:	fucomp st(5)
  40bb5b:	enter  0x3b9f,0xbd
  40bb5f:	mov    ebp,0xf978950a
  40bb64:	sti    
  40bb65:	mov    cl,0x3a
  40bb67:	xchg   esi,eax
  40bb68:	ss shl edx,0xf2
  40bb6c:	push   es
  40bb6d:	add    dh,ah
  40bb6f:	(bad)  
  40bb71:	add    al,BYTE PTR [ecx-0x7]
  40bb74:	(bad)  
  40bb76:	in     eax,dx
  40bb77:	repz xlat BYTE PTR ds:[ebx]
  40bb79:	xchg   esi,eax
  40bb7a:	jp     0x40bbc1
  40bb7c:	cwde   
  40bb7d:	xor    ch,0xcb
  40bb80:	dec    esi
  40bb81:	cmp    eax,DWORD PTR [edi]
  40bb83:	xor    esp,DWORD PTR [eax+0x594a10b1]
  40bb89:	loopne 0x40bb49
  40bb8b:	pop    ds
  40bb8c:	pop    esi
  40bb8d:	mov    ch,0xfe
  40bb8f:	bound  ecx,QWORD PTR [ebx]
  40bb91:	stos   BYTE PTR es:[edi],al
  40bb92:	je     0x40bb81
  40bb94:	or     ecx,DWORD PTR [ecx]
  40bb96:	mov    WORD PTR [ebp+0xa],es
  40bb99:	lea    edx,fs:[ecx]
  40bb9c:	loop   0x40bb54
  40bb9e:	adc    bh,cl
  40bba0:	mul    ch
  40bba2:	test   eax,0x10f94c2
  40bba7:	mov    edx,0x8825909e
  40bbac:	outs   dx,BYTE PTR ds:[esi]
  40bbad:	inc    edx
  40bbae:	retf   0x601f
  40bbb1:	jb     0x40bc1e
  40bbb3:	adc    eax,0x7955cf22
  40bbb9:	gs aad 0xa4
  40bbbc:	sub    al,0x46
  40bbbe:	lock jne 0x40bbf3
  40bbc1:	jle    0x40bc36
  40bbc3:	in     eax,0x87
  40bbc5:	dec    edi
  40bbc6:	cs jmp 0x4ed3:0x6ee504de
  40bbce:	cli    
  40bbcf:	jge    0x40bbd7
  40bbd1:	enter  0x1868,0x60
  40bbd5:	mov    ebx,0x1c0db5f4
  40bbda:	xchg   ebp,eax
  40bbdb:	sub    edx,DWORD PTR [eax+ecx*4]
  40bbde:	(bad)  [ebx-0x8]
  40bbe1:	in     al,0x3d
  40bbe3:	mov    ds,WORD PTR [edi]
  40bbe5:	or     BYTE PTR [eax+0x71],0xdc
  40bbe9:	mov    edi,0x41550748
  40bbee:	stos   DWORD PTR es:[edi],eax
  40bbef:	pop    ss
  40bbf0:	sbb    al,0xaf
  40bbf2:	push   ds
  40bbf3:	xchg   edx,eax
  40bbf4:	dec    edi
  40bbf5:	xchg   ebp,eax
  40bbf6:	iret   
  40bbf7:	jbe    0x40bc55
  40bbf9:	mov    ah,0x97
  40bbfb:	jp     0x40bbf5
  40bbfd:	mov    ds:0xd71db2ab,eax
  40bc02:	enter  0x1c1a,0x16
  40bc06:	mov    bh,0xfc
  40bc08:	jmp    0x19bc5eb8
  40bc0d:	repnz in al,dx
  40bc0f:	jecxz  0x40bbb1
  40bc11:	jle    0x40bbc1
  40bc13:	and    al,0xb7
  40bc15:	push   edi
  40bc16:	scas   al,BYTE PTR es:[edi]
  40bc17:	adc    cl,bl
  40bc19:	sbb    cl,0x6b
  40bc1c:	out    0x4,al
  40bc1e:	repz add esi,DWORD PTR [edx]
  40bc21:	lock jb 0x40bc3b
  40bc24:	push   ss
  40bc25:	mov    DWORD PTR [eax+ecx*1],ecx
  40bc28:	int    0x4f
  40bc2a:	bound  esp,QWORD PTR [edi]
  40bc2c:	cs inc bh
  40bc2f:	push   esp
  40bc30:	jne    0x40bc6f
  40bc32:	pushf  
  40bc33:	xor    eax,0xe6fba1ea
  40bc38:	push   ebp
  40bc39:	inc    ebx
  40bc3a:	inc    esp
  40bc3b:	pop    esi
  40bc3c:	hlt    
  40bc3d:	cs mov ah,0xc
  40bc40:	sbb    dh,ch
  40bc42:	xchg   edx,ebx
  40bc44:	sub    al,0xdb
  40bc46:	jmp    0xc1685c6a
  40bc4b:	xchg   esi,eax
  40bc4c:	push   edx
  40bc4d:	fild   DWORD PTR [edi+eax*2-0x2f]
  40bc51:	jno    0x40bc41
  40bc53:	and    dl,BYTE PTR ds:0xe97ffb6e
  40bc59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc5a:	ja     0x40bc36
  40bc5c:	jmp    0x4ee7:0x9a0b6f7c
  40bc63:	add    ecx,DWORD PTR [esi-0x4d]
  40bc66:	std    
  40bc67:	jle    0x40bbf4
  40bc69:	mov    ?,edx
  40bc6b:	ins    DWORD PTR es:[edi],dx
  40bc6c:	ror    ecx,1
  40bc6e:	loop   0x40bcdc
  40bc70:	pop    esp
  40bc71:	or     al,BYTE PTR [ebp+eiz*1-0x1e]
  40bc75:	dec    ecx
  40bc76:	mov    esi,0x4bdde2d2
  40bc7b:	inc    edx
  40bc7c:	jne    0x40bc16
  40bc7e:	arpl   WORD PTR [ebx-0x5e80e905],cx
  40bc84:	enter  0x4546,0x78
  40bc88:	push   ecx
  40bc89:	pop    ds
  40bc8a:	cmp    DWORD PTR [esi+edx*8-0x38857bbe],0x7bbf34a7
  40bc95:	jne    0x40bc5e
  40bc97:	adc    ebx,DWORD PTR [ebp+0x4093d54a]
  40bc9d:	repz cmp al,0xac
  40bca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bca1:	out    0x14,al
  40bca3:	mov    bh,0xc0
  40bca5:	lock adc eax,0xf8f46f37
  40bcab:	dec    ebx
  40bcac:	sbb    edi,esi
  40bcae:	inc    edi
  40bcaf:	ins    DWORD PTR es:[edi],dx
  40bcb0:	je     0x40bc71
  40bcb2:	ds inc ecx
  40bcb4:	pop    ds
  40bcb5:	int3   
  40bcb6:	aas    
  40bcb7:	cmp    BYTE PTR [ebx+eax*2],0xe
  40bcbb:	xor    DWORD PTR [ebx],0xffffffce
  40bcbe:	shr    al,1
  40bcc0:	adc    eax,0xe451b809
  40bcc5:	rcr    esi,cl
  40bcc7:	iret   
  40bcc8:	push   ss
  40bcc9:	sbb    al,0x89
  40bccb:	aas    
  40bccc:	and    eax,0x4fa05a1
  40bcd1:	sbb    eax,0x9b23ccd1
  40bcd6:	inc    ebx
  40bcd7:	pop    ss
  40bcd8:	mov    ah,0xe1
  40bcda:	sbb    dl,BYTE PTR [esi-0x2a80c3a7]
  40bce0:	sahf   
  40bce1:	inc    ebx
  40bce2:	jnp    0x40bd11
  40bce4:	cs test al,0x3f
  40bce7:	leave  
  40bce8:	(bad)  [edi+esi*4-0x31]
  40bcec:	mov    dh,0x84
  40bcee:	sub    cl,BYTE PTR ds:0xb7015e51
  40bcf4:	in     eax,dx
  40bcf5:	inc    ebx
  40bcf6:	add    eax,0x84be5c44
  40bcfb:	les    edx,FWORD PTR [esi+eax*1+0x11]
  40bcff:	stos   BYTE PTR es:[edi],al
  40bd00:	stos   DWORD PTR es:[edi],eax
  40bd01:	pop    ecx
  40bd02:	mov    eax,ds:0x1f9f9527
  40bd07:	outs   dx,DWORD PTR ds:[esi]
  40bd08:	adc    ecx,DWORD PTR [edx]
  40bd0a:	cs fmul st(2),st
  40bd0d:	mov    ds:0x844f8e6e,eax
  40bd12:	sbb    eax,0xb7c7d7a5
  40bd17:	adc    BYTE PTR [edi+0x184f0519],bl
  40bd1d:	test   BYTE PTR [ebx-0x355cbbb9],ch
  40bd23:	or     DWORD PTR [eax+0x16b0be5a],0x42
  40bd2a:	push   eax
  40bd2b:	lods   al,BYTE PTR ds:[esi]
  40bd2c:	add    DWORD PTR [eax+0x47c98420],esi
  40bd32:	imul   ebx,DWORD PTR [ebx-0x3a5f45f0],0x32030a9a
  40bd3c:	add    al,0xd7
  40bd3e:	xor    bh,BYTE PTR [edi+0x17db083e]
  40bd44:	in     al,dx
  40bd45:	inc    ebp
  40bd46:	inc    ebx
  40bd47:	mov    ebp,DWORD PTR [eax+ecx*4]
  40bd4a:	mov    esi,0xcef301dc
  40bd4f:	retf   
  40bd50:	push   ecx
  40bd51:	cmp    ecx,DWORD PTR [ebx+0x8]
  40bd54:	cwde   
  40bd55:	iret   
  40bd56:	mov    al,0x6c
  40bd58:	push   eax
  40bd59:	dec    ebp
  40bd5a:	mov    bh,0x5
  40bd5c:	fcmovne st,st(0)
  40bd5e:	int    0x5d
  40bd60:	sahf   
  40bd61:	rol    BYTE PTR [edx-0x1e6ae9f4],cl
  40bd67:	or     bh,BYTE PTR [edx+edx*2]
  40bd6a:	ja     0x40bd24
  40bd6c:	repz push edx
  40bd6e:	sbb    DWORD PTR [edx],ebx
  40bd70:	nop
  40bd71:	or     eax,0x2e2a3bbe
  40bd76:	and    al,0xe
  40bd78:	fs push es
  40bd7a:	xor    DWORD PTR [eax-0x22694450],edi
  40bd80:	(bad)  [esp+ecx*4+0x33e60a0b]
  40bd87:	daa    
  40bd88:	xor    eax,0xb6037fe7
  40bd8d:	js     0x40bd7a
  40bd8f:	sbb    bl,BYTE PTR [edx+0x6d921eff]
  40bd95:	xchg   ecx,eax
  40bd96:	pushf  
  40bd97:	call   0x6437ed82
  40bd9c:	and    DWORD PTR [edi],esi
  40bd9e:	loope  0x40be14
  40bda0:	retf   0x3747
  40bda3:	mov    bh,0x2
  40bda5:	nop
  40bda6:	leave  
  40bda7:	jg     0x40bdf6
  40bda9:	enter  0xa2dd,0x9f
  40bdad:	clc    
  40bdae:	aam    0x77
  40bdb0:	push   ds
  40bdb1:	iret   
  40bdb2:	aas    
  40bdb3:	stc    
  40bdb4:	sub    ebx,esi
  40bdb6:	test   al,0x20
  40bdb8:	rcl    bl,cl
  40bdba:	adc    al,0xf9
  40bdbc:	and    al,0xae
  40bdbe:	xor    eax,0xc127cb45
  40bdc3:	cwde   
  40bdc4:	adc    DWORD PTR [esi+eiz*4+0x20],edx
  40bdc8:	push   esp
  40bdc9:	nop
  40bdca:	(bad)  
  40bdcb:	aad    0x3d
  40bdcd:	pop    esp
  40bdce:	in     eax,0xdc
  40bdd0:	mov    ds:0x6670d966,eax
  40bdd5:	mov    bl,0x87
  40bdd7:	sbb    eax,0x58394def
  40bddc:	fst    QWORD PTR [edx+0x79d8074e]
  40bde2:	shl    bh,cl
  40bde4:	adc    al,0xa7
  40bde6:	ins    BYTE PTR es:[edi],dx
  40bde7:	mov    ch,ch
  40bde9:	adc    eax,0x4bf81fcd
  40bdee:	cmp    esi,ecx
  40bdf0:	and    cl,BYTE PTR [ebx-0x62]
  40bdf3:	dec    esp
  40bdf4:	adc    eax,0xf0cdedab
  40bdf9:	int    0x14
  40bdfb:	es test eax,0x3d7f0705
  40be01:	sub    eax,0x6149ff41
  40be06:	shl    BYTE PTR [ecx],1
  40be08:	mov    bl,0x26
  40be0a:	(bad)  
  40be0c:	mov    eax,0x9e72f2a8
  40be11:	enter  0x1a0,0x81
  40be15:	call   0x5137c199
  40be1a:	mov    ds,WORD PTR [eax+0xc]
  40be1d:	ins    DWORD PTR es:[edi],dx
  40be1e:	add    eax,0xa13f884b
  40be23:	fiadd  DWORD PTR [ebp+0x7403a91c]
  40be29:	pop    esp
  40be2a:	aaa    
  40be2b:	mov    ah,ch
  40be2d:	push   0x1e
  40be2f:	mov    dh,0x64
  40be31:	xor    BYTE PTR [ebx-0x1a],dh
  40be34:	lahf   
  40be35:	lods   eax,DWORD PTR ds:[esi]
  40be36:	sbb    esp,DWORD PTR [ebx-0x68270c69]
  40be3c:	jl     0x40bdd5
  40be3e:	sahf   
  40be3f:	stos   BYTE PTR es:[edi],al
  40be40:	jb     0x40bdd5
  40be42:	mov    ebp,0xf7c5fa0b
  40be47:	and    BYTE PTR [eax+0x2647e45],0x28
  40be4e:	sub    DWORD PTR [eax],0x1e0cc141
  40be54:	jno    0x40be52
  40be56:	xchg   edx,eax
  40be57:	fst    QWORD PTR ds:0xbb212f6e
  40be5d:	jg     0x40bdf7
  40be5f:	and    DWORD PTR [edi+0x28269b73],edx
  40be65:	push   0xd48091de
  40be6a:	dec    edx
  40be6b:	scas   al,BYTE PTR es:[edi]
  40be6c:	in     eax,dx
  40be6d:	icebp  
  40be6e:	xlat   BYTE PTR ds:[ebx]
  40be6f:	xchg   esp,eax
  40be70:	push   ebp
  40be71:	mov    dh,0x3d
  40be73:	imul   BYTE PTR [eax+edi*2]
  40be76:	push   cs
  40be77:	mov    ecx,0x83fb512a
  40be7c:	jmp    0x40bea0
  40be7e:	rol    bh,1
  40be80:	(bad)  
  40be81:	push   ds
  40be82:	loope  0x40be1f
  40be84:	add    esi,esi
  40be86:	adc    eax,0x3f8f659
  40be8b:	mov    ecx,0x87da0a3e
  40be90:	add    eax,DWORD PTR [eax]
  40be92:	pop    ebx
  40be93:	mov    dh,0xba
  40be95:	sub    cl,ah
  40be97:	fiadd  DWORD PTR [ebx-0x74be26a0]
  40be9d:	rcr    DWORD PTR [ebx+0x4b],cl
  40bea0:	call   DWORD PTR [ebx]
  40bea2:	cmp    DWORD PTR [ebp+0x10],esi
  40bea5:	je     0x40e267
  40beab:	xchg   edx,eax
  40beac:	push   0xb
  40beae:	pop    ecx
  40beaf:	push   0x4
  40beb1:	pop    ebx
  40beb2:	inc    ebx
  40beb3:	xchg   ebx,ecx
  40beb5:	sub    ebx,ecx
  40beb7:	xchg   ebx,ecx
  40beb9:	dec    ecx
  40beba:	dec    ecx
  40bebb:	mov    eax,DWORD PTR [ebp-0x1c]
  40bebe:	imul   eax,ecx
  40bec1:	add    esp,eax
  40bec3:	jmp    0x40e266
  40bec8:	xchg   esi,eax
  40bec9:	cli    
  40beca:	test   DWORD PTR [esi],0xca9373f3
  40bed0:	jae    0x40beb5
  40bed2:	adc    eax,0xd4534f96
  40bed7:	or     dh,BYTE PTR [ecx+eiz*8+0x5ff87272]
  40bede:	jb     0x40bf52
  40bee0:	out    dx,eax
  40bee1:	cmp    al,0x23
  40bee3:	js     0x40bf33
  40bee5:	clc    
  40bee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bee7:	jl     0x40bf26
  40bee9:	or     DWORD PTR [esi],ecx
  40beeb:	sahf   
  40beec:	cmp    edi,DWORD PTR [edi+0x1d17b0c3]
  40bef2:	sbb    ecx,edx
  40bef4:	pop    es
  40bef5:	jb     0x40be8e
  40bef7:	sbb    BYTE PTR [eax-0x1a6af588],al
  40befd:	xor    ebx,DWORD PTR [edi+0x49c3b0ba]
  40bf03:	das    
  40bf04:	inc    esi
  40bf05:	rcr    DWORD PTR [ecx+0x8e255e6],1
  40bf0b:	jb     0x40be8f
  40bf0d:	jb     0x40bec4
  40bf0f:	neg    ah
  40bf11:	out    0x7e,eax
  40bf13:	cmovs  ebp,DWORD PTR [edi+0x1c33c2b8]
  40bf1a:	xor    edi,DWORD PTR [eax]
  40bf1c:	(bad)  
  40bf1d:	sahf   
  40bf1e:	add    eax,ecx
  40bf20:	nop
  40bf21:	xlat   BYTE PTR ds:[ebx]
  40bf22:	jmp    0x40bf47
  40bf24:	jle    0x40bebe
  40bf26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf27:	addr16 add al,0x5
  40bf2a:	retf   0x4804
  40bf2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf2e:	jbe    0x40bf84
  40bf30:	clc    
  40bf31:	mov    al,0x87
  40bf33:	mov    edi,0xf1001a97
  40bf38:	xchg   ebp,eax
  40bf39:	jmp    0xdf2:0x5871a03e
  40bf40:	jno    0x40bf21
  40bf42:	mov    dh,0xf0
  40bf44:	add    BYTE PTR [edx-0x5b],0xd2
  40bf48:	push   ecx
  40bf49:	mov    dh,0xc0
  40bf4b:	mov    BYTE PTR [edi],cl
  40bf4d:	xlat   BYTE PTR ds:[ebx]
  40bf4e:	leave  
  40bf4f:	pop    esi
  40bf50:	fdiv   DWORD PTR [edx+0xe]
  40bf53:	outs   dx,BYTE PTR ds:[esi]
  40bf54:	or     edx,esp
  40bf56:	(bad)  
  40bf57:	scas   eax,DWORD PTR es:[edi]
  40bf58:	cmp    BYTE PTR [ebp+0x4],bh
  40bf5b:	aaa    
  40bf5c:	int    0x1b
  40bf5e:	pop    ebx
  40bf5f:	or     eax,0xe959369c
  40bf64:	or     ebx,DWORD PTR [ebp-0xc686323]
  40bf6a:	pop    es
  40bf6b:	jnp    0x40bfea
  40bf6d:	dec    ecx
  40bf6e:	loopne 0x40bf65
  40bf70:	popf   
  40bf71:	mov    ah,0x50
  40bf73:	add    al,0x44
  40bf75:	repnz test eax,0x694f5c92
  40bf7b:	jl     0x40bf40
  40bf7d:	and    ah,BYTE PTR [esi]
  40bf7f:	(bad)  
  40bf81:	xchg   esi,eax
  40bf82:	mov    eax,ds:0xeb5f4a40
  40bf87:	dec    esp
  40bf88:	sub    cl,BYTE PTR [ebx-0x10955b23]
  40bf8e:	rcl    ah,0x6c
  40bf91:	stos   BYTE PTR es:[edi],al
  40bf92:	retf   0xca3f
  40bf95:	mov    dh,0x3f
  40bf97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf98:	sahf   
  40bf99:	lods   eax,DWORD PTR ds:[esi]
  40bf9a:	mov    bl,0x3
  40bf9c:	push   esi
  40bf9d:	and    DWORD PTR [edi],ebx
  40bf9f:	dec    ebp
  40bfa0:	(bad)  
  40bfa2:	push   ss
  40bfa3:	inc    ebx
  40bfa4:	aam    0xb5
  40bfa6:	xchg   ebp,eax
  40bfa7:	mov    ?,WORD PTR [esp+edi*2]
  40bfaa:	std    
  40bfab:	loope  0x40bf3b
  40bfad:	psubsw mm1,QWORD PTR [ebx+ecx*1]
  40bfb1:	jmp    0x7e7f3ad
  40bfb6:	fsubr  st(1),st
  40bfb8:	xchg   ecx,eax
  40bfb9:	sbb    ebx,DWORD PTR ds:0x1d76cc36
  40bfbf:	mov    ebx,0x1560751a
  40bfc4:	stos   DWORD PTR es:[edi],eax
  40bfc5:	leave  
  40bfc6:	aaa    
  40bfc7:	cdq    
  40bfc8:	sti    
  40bfc9:	mov    esi,0x6fef48d5
  40bfce:	outs   dx,BYTE PTR ds:[esi]
  40bfcf:	es mov ecx,0x8f932429
  40bfd5:	cmp    BYTE PTR [ebp+0x7f199016],cl
  40bfdb:	or     dl,BYTE PTR [esi-0x1a56d73d]
  40bfe1:	mov    cl,0x4
  40bfe3:	push   ds
  40bfe4:	pop    ebp
  40bfe5:	in     eax,dx
  40bfe6:	mov    eax,0xaf00948a
  40bfeb:	ss scas eax,DWORD PTR es:[edi]
  40bfed:	out    dx,eax
  40bfee:	sbb    eax,0x42dc9062
  40bff3:	inc    esp
  40bff4:	push   edx
  40bff5:	fnstenv [eax-0x16]
  40bff8:	adc    ebx,DWORD PTR [ebx+eax*8-0x7704882]
  40bfff:	mov    edi,0xd7d8e0a2
  40c005:	and    al,0xab
  40c007:	cdq    
  40c008:	call   0xd3edacac
  40c00d:	cs hlt 
  40c00f:	in     al,0x27
  40c011:	add    ebp,DWORD PTR ds:0xfde73e49
  40c017:	jbe    0x40bfc6
  40c019:	lods   al,BYTE PTR ds:[esi]
  40c01a:	inc    ebx
  40c01b:	xor    edx,DWORD PTR [eax+0xf]
  40c01e:	push   0xffffff8f
  40c020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c021:	fld1   
  40c023:	mov    edi,0xa5e37566
  40c028:	fdiv   DWORD PTR [esi]
  40c02a:	sti    
  40c02b:	and    ebp,ecx
  40c02d:	pushf  
  40c02e:	jmp    0xe568:0xce54e58f
  40c035:	mov    cl,BYTE PTR [ebp+ecx*2-0x37]
  40c039:	push   edi
  40c03a:	mov    ebp,0xad28c00
  40c03f:	jne    0x40c0bc
  40c041:	jle    0x40c031
  40c043:	dec    ecx
  40c044:	ret    0x1936
  40c047:	dec    esp
  40c048:	ret    
  40c049:	test   bh,dl
  40c04b:	scas   eax,DWORD PTR es:[edi]
  40c04c:	dec    ebx
  40c04d:	xor    DWORD PTR [ecx-0x1553b8b5],0x66
  40c054:	js     0x40c083
  40c056:	rcr    BYTE PTR [ebp-0x7c],0xc3
  40c05a:	je     0x40c0d4
  40c05c:	adc    BYTE PTR [edi],ch
  40c05e:	adc    edx,DWORD PTR [edi]
  40c060:	repz adc eax,0xa6d50f1a
  40c066:	hlt    
  40c067:	(bad)  
  40c068:	retf   
  40c069:	stos   BYTE PTR es:[edi],al
  40c06a:	dec    esi
  40c06b:	inc    edi
  40c06c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c06d:	jmp    0xb3fb:0x467720d4
  40c074:	and    esp,DWORD PTR [ebp-0x69]
  40c077:	imul   edi,eax,0x2c78a186
  40c07d:	inc    BYTE PTR [ebp+0x22]
  40c080:	scas   al,BYTE PTR es:[edi]
  40c081:	pop    es
  40c082:	xor    DWORD PTR [edi+eax*1],edx
  40c085:	test   eax,0xe2b17041
  40c08a:	jl     0x40c0c7
  40c08c:	scas   al,BYTE PTR es:[edi]
  40c08d:	push   eax
  40c08e:	mov    ds:0xac4cc151,al
  40c093:	scas   al,BYTE PTR es:[edi]
  40c094:	neg    BYTE PTR [eax+0x33]
  40c097:	xor    eax,DWORD PTR [ecx-0xf]
  40c09a:	aas    
  40c09b:	fiadd  DWORD PTR [eax+0x50]
  40c09e:	adc    eax,0x6d808a19
  40c0a3:	mov    esi,0xc60a4cda
  40c0a8:	test   esi,ebx
  40c0aa:	lods   al,BYTE PTR ds:[esi]
  40c0ab:	push   es
  40c0ac:	mov    edx,0x8ab7dd26
  40c0b1:	jge    0x40c049
  40c0b3:	mov    ebx,0xe02b0
  40c0b8:	adc    eax,0xe852be86
  40c0bd:	gs mov al,ss:0xc00baf94
  40c0c4:	mov    ds,ecx
  40c0c6:	xchg   DWORD PTR [ecx+ebp*1-0x66],eax
  40c0ca:	ja     0x40c129
  40c0cc:	dec    edx
  40c0cd:	pusha  
  40c0ce:	loope  0x40c0cc
  40c0d0:	dec    ecx
  40c0d1:	and    DWORD PTR [ecx],esp
  40c0d3:	fs dec eax
  40c0d5:	scas   al,BYTE PTR es:[edi]
  40c0d6:	push   edi
  40c0d7:	and    esp,edi
  40c0d9:	test   al,0xfb
  40c0db:	xchg   BYTE PTR [edx-0x1ebde12e],dh
  40c0e1:	popf   
  40c0e2:	inc    ebx
  40c0e3:	fcom   DWORD PTR [ebp-0x1cd1acd4]
  40c0e9:	out    dx,eax
  40c0ea:	mov    WORD PTR [ebx-0x1c],cs
  40c0ed:	(bad)  
  40c0ef:	push   es
  40c0f0:	dec    edx
  40c0f1:	dec    BYTE PTR [ebp+0x23f432c0]
  40c0f7:	in     eax,dx
  40c0f8:	push   eax
  40c0f9:	sbb    DWORD PTR [ecx+0x709f08a9],esi
  40c0ff:	sbb    BYTE PTR [esi-0x61adf66f],bh
  40c105:	adc    ebx,DWORD PTR [edi+ecx*1-0x5]
  40c109:	popa   
  40c10a:	mov    ds,WORD PTR gs:[esi-0x50bf0396]
  40c111:	fs inc esp
  40c113:	loopne 0x40c0a2
  40c115:	(bad)  
  40c116:	or     eax,0x400a0a9b
  40c11b:	sti    
  40c11c:	nop
  40c11d:	shl    BYTE PTR [edx],cl
  40c11f:	cld    
  40c120:	or     DWORD PTR ds:0x42b8ef61,ecx
  40c126:	cs inc ebp
  40c128:	popa   
  40c129:	daa    
  40c12a:	stc    
  40c12b:	aas    
  40c12c:	jge    0x40c123
  40c12e:	push   ss
  40c12f:	sub    bh,BYTE PTR [eax]
  40c131:	lods   al,BYTE PTR ds:[esi]
  40c132:	nop
  40c133:	test   al,0xd3
  40c135:	add    eax,0xbd273ae7
  40c13a:	popa   
  40c13b:	pop    edi
  40c13c:	mov    bh,0xbe
  40c13e:	fsubrp st(4),st
  40c140:	xchg   BYTE PTR [edx+0x3a],dh
  40c143:	cmp    eax,0xb52e7911
  40c148:	stos   DWORD PTR es:[edi],eax
  40c149:	xor    cl,BYTE PTR [edi]
  40c14b:	(bad)  
  40c14c:	in     al,dx
  40c14d:	cmp    eax,0x7d4ecea3
  40c152:	lahf   
  40c153:	push   ebx
  40c154:	xchg   ecx,eax
  40c155:	jno    0x40c0e9
  40c157:	pop    ecx
  40c158:	stos   BYTE PTR es:[edi],al
  40c159:	cmp    DWORD PTR [edi+eiz*2],edx
  40c15c:	mov    ch,0x74
  40c15e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c15f:	mov    al,ds:0x3c13c523
  40c164:	xor    eax,0x56a250b
  40c169:	es in  al,0xfb
  40c16c:	add    BYTE PTR [edi+0xb028eb7],bh
  40c172:	(bad)  
  40c173:	jo     0x40c1b2
  40c175:	xchg   DWORD PTR [esi+0x136412f7],ebp
  40c17b:	push   cs
  40c17c:	mov    ah,0x50
  40c17e:	setne  ah
  40c181:	mov    bl,0xed
  40c183:	mov    esp,0x4be06700
  40c188:	sar    BYTE PTR [esi+0x6a],0xd6
  40c18c:	fidivr DWORD PTR [eax+esi*2+0x1080dcd2]
  40c193:	or     BYTE PTR [edx+0x64],0xa3
  40c197:	mov    bh,0xfd
  40c199:	sub    ebp,DWORD PTR [eax]
  40c19b:	jmp    0x6dcc:0x52c54495
  40c1a2:	cmp    al,0x8
  40c1a4:	out    0x52,eax
  40c1a6:	fcomp  DWORD PTR [ebp+0x31]
  40c1a9:	lods   eax,DWORD PTR ds:[esi]
  40c1aa:	mov    bl,0x16
  40c1ac:	jle    0x40c1d1
  40c1ae:	loope  0x40c176
  40c1b0:	jnp    0x40c134
  40c1b2:	pop    esp
  40c1b3:	push   ebp
  40c1b4:	mov    gs,WORD PTR [ecx+0x3c5c701b]
  40c1ba:	rol    BYTE PTR [eax+edx*4+0x13],0xff
  40c1bf:	pop    ecx
  40c1c0:	push   ebp
  40c1c1:	retf   0xaf85
  40c1c4:	mov    eax,0x3162ff61
  40c1c9:	out    dx,al
  40c1ca:	clc    
  40c1cb:	test   BYTE PTR [edx],ch
  40c1cd:	xor    eax,0x295de2fa
  40c1d2:	sub    al,0x2
  40c1d4:	push   ebx
  40c1d5:	fistp  QWORD PTR [ebx+0x4cb9bd7f]
  40c1db:	mov    gs,WORD PTR [eax]
  40c1dd:	ins    DWORD PTR es:[edi],dx
  40c1de:	into   
  40c1df:	push   edx
  40c1e0:	lahf   
  40c1e1:	pop    ecx
  40c1e2:	add    al,0x41
  40c1e4:	imul   edi,edi,0x6b
  40c1e7:	or     eax,0xcf9f22ea
  40c1ec:	ins    DWORD PTR es:[edi],dx
  40c1ed:	(bad)  
  40c1ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1ef:	mov    edx,DWORD PTR [ecx-0x45]
  40c1f2:	je     0x40c178
  40c1f4:	bound  esi,QWORD PTR [ecx]
  40c1f6:	mov    dl,0x3d
  40c1f8:	inc    ebp
  40c1f9:	sahf   
  40c1fa:	scas   al,BYTE PTR es:[edi]
  40c1fb:	or     BYTE PTR [ebx],dl
  40c1fd:	adc    bh,cl
  40c1ff:	push   eax
  40c200:	pop    ds
  40c201:	mov    al,0x6d
  40c203:	or     al,0xb8
  40c205:	mov    al,0xc6
  40c207:	adc    eax,0x6963beaf
  40c20c:	or     edx,DWORD PTR [ebx]
  40c20e:	xchg   edi,eax
  40c20f:	fcomip st,st(7)
  40c211:	mov    ecx,0xe48cae2b
  40c216:	addr16 mov dh,0x5b
  40c219:	adc    ecx,0x75e612e7
  40c21f:	mov    bh,0xc
  40c221:	jns    0x40c1c7
  40c223:	mov    bh,0x74
  40c225:	clc    
  40c226:	in     eax,dx
  40c227:	add    al,0xdf
  40c229:	neg    eax
  40c22b:	sbb    eax,0x16426cda
  40c230:	and    al,0x76
  40c232:	add    eax,0x2e47f14b
  40c237:	stos   BYTE PTR es:[edi],al
  40c238:	cli    
  40c239:	push   edx
  40c23a:	push   ds
  40c23b:	mov    ds:0xf0cd200,eax
  40c240:	cmc    
  40c241:	scas   eax,DWORD PTR es:[edi]
  40c242:	test   al,0x7f
  40c245:	ds aad 0x73
  40c248:	hlt    
  40c249:	stos   DWORD PTR es:[edi],eax
  40c24a:	jae    0x40c298
  40c24c:	cld    
  40c24d:	stc    
  40c24e:	mov    BYTE PTR [edi+0x72f6b561],al
  40c254:	retf   
  40c255:	and    BYTE PTR [ecx],cl
  40c257:	(bad)  [ecx-0x3d]
  40c25a:	mov    BYTE PTR [ebx],dh
  40c25c:	stos   DWORD PTR es:[edi],eax
  40c25d:	imul   esp,DWORD PTR fs:[esi-0x54],0x6a
  40c262:	jb     0x40c250
  40c264:	repz ja 0x40c2b8
  40c267:	stos   DWORD PTR es:[edi],eax
  40c268:	jne    0x40c22d
  40c26a:	add    ebx,ebp
  40c26c:	xchg   BYTE PTR [ecx+0x6527edf4],bl
  40c272:	out    0x4b,al
  40c274:	popa   
  40c275:	hlt    
  40c276:	mov    esp,0x3f33f9ff
  40c27b:	jmp    0xe0ac:0x5460b164
  40c282:	out    dx,al
  40c283:	mov    DWORD PTR [ecx+eiz*1+0x7e],edi
  40c287:	cmc    
  40c288:	push   eax
  40c289:	mov    al,ds:0xac7ab6c9
  40c28e:	jg     0x40c2b5
  40c290:	xchg   ecx,eax
  40c291:	xchg   edx,eax
  40c292:	scas   eax,DWORD PTR es:[edi]
  40c293:	arpl   WORD PTR [edi+0x5f],dx
  40c296:	add    bl,bl
  40c298:	push   ecx
  40c299:	jl     0x40c2ff
  40c29b:	adc    eax,0x1e8caf31
  40c2a0:	dec    ebp
  40c2a1:	ficomp WORD PTR [ebx]
  40c2a3:	pop    ds
  40c2a4:	jmp    0xd141:0x1f186e3d
  40c2ab:	pop    ebp
  40c2ac:	dec    ecx
  40c2ad:	add    al,0x30
  40c2af:	je     0x40c306
  40c2b1:	mov    ah,BYTE PTR [esi+0x4fbab8ef]
  40c2b7:	inc    ebx
  40c2b8:	xor    BYTE PTR [ebp+0x73648dd4],dh
  40c2be:	pop    esp
  40c2bf:	scas   eax,DWORD PTR es:[edi]
  40c2c0:	add    al,0x31
  40c2c2:	or     BYTE PTR [edi],bl
  40c2c4:	cmp    al,0x28
  40c2c6:	sbb    eax,0x9811e0b0
  40c2cb:	fldcw  WORD PTR [edx-0x4c]
  40c2ce:	xor    DWORD PTR [ebx+0x48648812],ecx
  40c2d4:	pusha  
  40c2d5:	mov    BYTE PTR [ecx],ah
  40c2d7:	call   0x5082:0x108ee657
  40c2de:	aas    
  40c2df:	push   ebx
  40c2e0:	xor    al,0xae
  40c2e2:	adc    bl,al
  40c2e4:	sar    DWORD PTR [edx],0x0
  40c2e7:	pop    ss
  40c2e8:	xchg   esp,eax
  40c2e9:	out    dx,eax
  40c2ea:	(bad)  
  40c2eb:	std    
  40c2ec:	fs daa 
  40c2ee:	add    al,0x2e
  40c2f0:	cmp    eax,0x1c89e9a
  40c2f5:	xor    eax,ebp
  40c2f7:	pop    esi
  40c2f8:	add    DWORD PTR [esi-0x652faaa9],eax
  40c2fe:	enter  0xcf28,0x1c
  40c302:	xchg   edx,eax
  40c303:	add    BYTE PTR [ebx-0x6ebbf9c4],bl
  40c309:	xor    BYTE PTR [edx],ah
  40c30b:	ror    esp,cl
  40c30d:	jp     0x40c2b8
  40c30f:	rcr    BYTE PTR [ebx+esi*4],cl
  40c312:	jmp    0x9a59:0xdb3b755
  40c319:	rcl    BYTE PTR [edi-0x11c1cd05],1
  40c31f:	das    
  40c320:	(bad)  
  40c321:	dec    ecx
  40c322:	xor    ebx,edx
  40c324:	les    ebx,FWORD PTR [edx-0x38]
  40c327:	pop    ebx
  40c328:	mov    al,ds:0x2c140ba5
  40c32d:	mov    WORD PTR [ebx-0x2],dx
  40c331:	jg     0x40c353
  40c333:	out    dx,al
  40c334:	add    bl,BYTE PTR [ebx+eax*2-0x78]
  40c338:	inc    eax
  40c339:	mov    ds,edx
  40c33b:	xor    ecx,edx
  40c33d:	mov    ebx,DWORD PTR [edi]
  40c33f:	push   eax
  40c340:	and    eax,0x21030c44
  40c345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c346:	inc    ecx
  40c347:	es jl  0x40c37d
  40c34a:	push   ebx
  40c34b:	dec    esi
  40c34c:	jg     0x40c354
  40c34e:	cmp    eax,0x7b086e49
  40c353:	mov    ch,0xa0
  40c355:	add    al,0x88
  40c357:	and    eax,edx
  40c359:	js     0x40c38b
  40c35b:	xchg   ecx,eax
  40c35c:	pop    ds
  40c35d:	mov    edi,0x89bbb904
  40c362:	pushf  
  40c363:	repz xor bh,bh
  40c366:	in     al,dx
  40c367:	scas   eax,DWORD PTR es:[edi]
  40c368:	jno    0x40c320
  40c36a:	mov    edi,0xbe2a67f5
  40c36f:	(bad)  
  40c370:	lea    edx,[edi+eiz*4+0x51]
  40c374:	mov    ah,0x75
  40c376:	sbb    al,0xaf
  40c378:	ret    
  40c379:	pop    es
  40c37a:	fnop   
  40c37c:	imul   esp,ebx,0x6c8d63a4
  40c382:	sub    BYTE PTR [edx+0x15868150],0xcc
  40c389:	push   esi
  40c38a:	stos   BYTE PTR es:[edi],al
  40c38b:	jnp    0x40c380
  40c38d:	xor    eax,0x4bb8915
  40c392:	cli    
  40c393:	mov    bh,0xd1
  40c395:	retf   
  40c396:	scas   eax,DWORD PTR es:[edi]
  40c397:	xchg   ebx,eax
  40c398:	arpl   WORD PTR [eax+0x64200b40],sp
  40c39e:	xchg   BYTE PTR [ebp+0x1654026d],dl
  40c3a4:	(bad)  
  40c3a6:	xor    dh,BYTE PTR [edx]
  40c3a8:	out    0x20,eax
  40c3aa:	or     BYTE PTR [ebp+eax*8-0x55],ch
  40c3ae:	ret    0xbd9c
  40c3b1:	mov    eax,0x8632aa3c
  40c3b6:	xchg   ebp,eax
  40c3b7:	jbe    0x40c36d
  40c3b9:	test   DWORD PTR [ecx+ebp*1],esi
  40c3bc:	jmp    0x40c36d
  40c3be:	fmul   st(5),st
  40c3c0:	lds    esi,FWORD PTR [edi-0x5b949682]
  40c3c6:	mov    edi,0xcf9d2b14
  40c3cb:	push   edx
  40c3cc:	pop    esp
  40c3cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3ce:	cli    
  40c3cf:	sub    dh,cl
  40c3d1:	jmp    0x40c353
  40c3d3:	jmp    0x31fc65d9
  40c3d8:	push   esi
  40c3d9:	sbb    al,0xc1
  40c3db:	call   0xf20f2313
  40c3e0:	and    al,0x32
  40c3e2:	stos   DWORD PTR es:[edi],eax
  40c3e3:	fisttp DWORD PTR [edx-0x55284d01]
  40c3e9:	div    DWORD PTR [eax-0x52]
  40c3ec:	xchg   edi,eax
  40c3ed:	push   edx
  40c3ee:	fcomi  st,st(0)
  40c3f0:	jne    0x40c401
  40c3f2:	ja     0x40c408
  40c3f4:	bound  esi,QWORD PTR [esi+eax*4+0x10cd0cf9]
  40c3fb:	or     eax,0xa86b7ff7
  40c400:	ds lock push es
  40c403:	fnclex 
  40c405:	addr16 sub ah,bl
  40c408:	test   DWORD PTR [esi+0x2e2a7140],edi
  40c40e:	jb     0x40c475
  40c410:	(bad)  
  40c411:	jb     0x40c455
  40c413:	nop
  40c414:	(bad)  
  40c415:	or     BYTE PTR [ebp+0x3398ac89],dh
  40c41b:	cmp    al,0xa7
  40c41d:	add    eax,0x76f47338
  40c422:	mov    edi,esi
  40c424:	dec    edi
  40c425:	dec    eax
  40c426:	in     eax,0xe1
  40c428:	jmp    0x1206:0xc8d6f756
  40c42f:	mov    edi,0xebf84c23
  40c434:	arpl   WORD PTR [esi-0x6d1db922],bx
  40c43a:	mov    esi,0x343a88c
  40c43f:	sub    DWORD PTR [ebx-0x7f348afa],esi
  40c445:	in     eax,0x94
  40c447:	es sahf 
  40c449:	xchg   edx,eax
  40c44a:	daa    
  40c44b:	mov    al,0x79
  40c44d:	clc    
  40c44e:	push   eax
  40c44f:	adc    ebp,ebp
  40c451:	add    DWORD PTR [ebx+ebx*4+0x29],0xe6ca4ecb
  40c459:	cmc    
  40c45a:	cmp    esp,DWORD PTR [ecx-0x48c381e6]
  40c460:	adc    al,0x90
  40c462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c464:	mov    ebx,0xcbd1823b
  40c469:	jmp    0x21f50ebf
  40c46e:	das    
  40c46f:	movntq QWORD PTR [eax],mm2
  40c472:	mov    ds:0xf71c0da2,al
  40c477:	cmp    ebp,DWORD PTR ds:0x8aa14ec6
  40c47d:	sub    ecx,esi
  40c47f:	inc    ecx
  40c480:	cmp    al,0xd3
  40c482:	call   0xec353e5c
  40c487:	xchg   ebx,eax
  40c488:	cmp    al,BYTE PTR [edx]
  40c48a:	pushf  
  40c48b:	mov    WORD PTR fs:[edi+0x9],?
  40c48f:	dec    esp
  40c490:	imul   eax,ebx,0x32
  40c493:	add    BYTE PTR [ebx],0x60
  40c496:	inc    esp
  40c497:	test   al,0xe8
  40c499:	mov    al,ds:0x15d2f56e
  40c49e:	pop    edi
  40c49f:	xor    eax,0xeecad893
  40c4a4:	lods   eax,DWORD PTR ds:[esi]
  40c4a5:	sar    ah,1
  40c4a7:	clc    
  40c4a8:	sar    DWORD PTR [edi-0x9],cl
  40c4ab:	nop
  40c4ac:	jle    0x40c46e
  40c4ae:	scas   al,BYTE PTR es:[edi]
  40c4af:	ror    DWORD PTR [eiz*1-0x1650a95],0xd0
  40c4b7:	mov    dh,0x27
  40c4b9:	sbb    ebx,DWORD PTR [edx-0x7b]
  40c4bc:	retf   0xa95
  40c4bf:	js     0x40c535
  40c4c1:	into   
  40c4c2:	cmp    DWORD PTR [ebp-0x69],ebx
  40c4c5:	xchg   edx,eax
  40c4c6:	pusha  
  40c4c7:	and    edi,DWORD PTR [esi+0x5188a293]
  40c4cd:	dec    eax
  40c4ce:	pushf  
  40c4cf:	and    DWORD PTR [edx-0xf],edi
  40c4d2:	mov    bh,0x73
  40c4d4:	and    al,0xb0
  40c4d6:	xchg   esp,eax
  40c4d7:	pop    ecx
  40c4d8:	sbb    edi,ebp
  40c4da:	popf   
  40c4db:	clc    
  40c4dc:	(bad)  
  40c4dd:	das    
  40c4de:	add    BYTE PTR [esi+0x29],dh
  40c4e1:	out    0x2c,eax
  40c4e3:	or     DWORD PTR ds:0x205b3914,edi
  40c4e9:	mov    dh,0xb8
  40c4eb:	dec    ebp
  40c4ec:	push   0x764afef4
  40c4f1:	lahf   
  40c4f2:	lahf   
  40c4f3:	test   al,0xc6
  40c4f5:	je     0x40c4ea
  40c4f7:	mov    ch,0x3c
  40c4f9:	lods   al,BYTE PTR ds:[esi]
  40c4fa:	xchg   edi,eax
  40c4fb:	mov    dl,0x23
  40c4fd:	loop   0x40c561
  40c4ff:	add    eax,0xd1cb7725
  40c504:	das    
  40c505:	fcmovnbe st,st(2)
  40c507:	pushf  
  40c508:	pop    ebp
  40c509:	push   ss
  40c50a:	movups xmm1,XMMWORD PTR [edx+0x7b]
  40c50e:	(bad)  
  40c50f:	fbstp  TBYTE PTR [esi]
  40c511:	bound  eax,QWORD PTR [esi+edx*1-0x40]
  40c515:	aam    0x2a
  40c517:	fst    QWORD PTR [eax]
  40c519:	scas   al,BYTE PTR es:[edi]
  40c51a:	or     al,0x2d
  40c51c:	pavgb  mm0,QWORD PTR [ebx-0xa2eda06]
  40c523:	bound  edx,QWORD PTR [esp+ebp*2]
  40c526:	sub    al,0x77
  40c528:	add    ebx,DWORD PTR [edx-0x3e]
  40c52b:	ret    
  40c52c:	cmp    ch,BYTE PTR [eax+0x173319dd]
  40c532:	jmp    0x1ae08560
  40c537:	pop    ds
  40c538:	adc    BYTE PTR [esi],cl
  40c53a:	repz imul esp,ebx,0xb3c044fa
  40c541:	fstp   QWORD PTR [eax]
  40c543:	dec    ecx
  40c544:	lods   eax,DWORD PTR ds:[esi]
  40c545:	ret    
  40c546:	repz out 0xbb,eax
  40c549:	jb     0x40c4e6
  40c54b:	in     eax,dx
  40c54c:	shl    BYTE PTR [ebp-0x2e9aec3e],cl
  40c552:	pop    eax
  40c553:	jns    0x40c5c9
  40c555:	xor    esp,esi
  40c557:	mov    DWORD PTR [esi],esi
  40c559:	int    0x55
  40c55b:	add    bl,ch
  40c55d:	popa   
  40c55e:	dec    esp
  40c55f:	stos   DWORD PTR es:[edi],eax
  40c560:	stos   DWORD PTR es:[edi],eax
  40c561:	and    esp,DWORD PTR [edi]
  40c563:	cmc    
  40c564:	xchg   ecx,eax
  40c565:	fist   WORD PTR [eax+0x4d8be849]
  40c56b:	jl     0x40c59a
  40c56d:	sbb    eax,0x88d93b34
  40c572:	mov    ebx,0xcf91bfc9
  40c577:	shr    dh,0x43
  40c57a:	(bad)  
  40c57c:	lea    ecx,[ebx+0x45]
  40c57f:	push   ecx
  40c580:	inc    esp
  40c581:	cmp    dl,BYTE PTR [ebx+esi*4+0x69]
  40c585:	cmp    ch,bh
  40c587:	aaa    
  40c588:	xlat   BYTE PTR ds:[ebx]
  40c589:	mov    ebp,0xe5e6af35
  40c58e:	xchg   ebp,eax
  40c58f:	(bad)  
  40c590:	cmp    dl,BYTE PTR ds:0x9a7ac98b
  40c596:	mov    eax,0xe80ce87b
  40c59b:	cld    
  40c59c:	gs lahf 
  40c59e:	addr16 jns 0x40c52b
  40c5a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5a2:	(bad)  
  40c5a3:	es push ds
  40c5a5:	mov    DWORD PTR [eax+0x28],0x97318aa6
  40c5ac:	fcmovbe st,st(4)
  40c5ae:	xchg   ebx,eax
  40c5af:	mov    edi,0x62cadfd8
  40c5b4:	xchg   esi,eax
  40c5b5:	data16 fidivr DWORD PTR [esi-0x69]
  40c5b9:	test   DWORD PTR [edi+0x3a3ebb24],ecx
  40c5bf:	ds or  al,0x8e
  40c5c2:	(bad)  
  40c5c3:	lods   al,BYTE PTR ds:[esi]
  40c5c4:	repz in eax,0xf4
  40c5c7:	adc    BYTE PTR [ebx+0x6d326e71],0x4e
  40c5ce:	jb     0x40c5a4
  40c5d0:	lahf   
  40c5d1:	cmp    eax,0x22425e3
  40c5d6:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5d8:	cmp    edx,DWORD PTR [ebp+0x7bcfc0b6]
  40c5de:	leave  
  40c5df:	loope  0x40c656
  40c5e1:	(bad)  
  40c5e2:	sahf   
  40c5e3:	retf   0xe82b
  40c5e6:	fs inc ebp
  40c5e8:	jne    0x40c594
  40c5ea:	push   cs
  40c5eb:	fcom   DWORD PTR [ebx+esi*2-0x4e1a8417]
  40c5f2:	xchg   edx,eax
  40c5f3:	and    al,0xc7
  40c5f5:	mov    edi,0x99a3744f
  40c5fa:	sbb    bh,ah
  40c5fc:	ss retf 0x4dfb
  40c600:	and    dh,al
  40c602:	int    0x0
  40c604:	cmp    BYTE PTR [ebp-0x5e],al
  40c607:	call   0x9a83b16c
  40c60c:	popa   
  40c60d:	sahf   
  40c60e:	mov    esp,0x35dd1b03
  40c613:	popf   
  40c614:	in     eax,dx
  40c615:	cmp    al,0x77
  40c617:	adc    al,0x5
  40c619:	loope  0x40c5a9
  40c61b:	jbe    0x40c5fb
  40c61d:	xlat   BYTE PTR ds:[ebx]
  40c61e:	in     eax,0x91
  40c620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c621:	(bad)  
  40c623:	inc    esp
  40c624:	std    
  40c625:	mov    ds:0x4d6d9c78,eax
  40c62a:	and    DWORD PTR ds:[esi-0x1c0aaa77],edi
  40c631:	pop    edx
  40c632:	pop    ss
  40c633:	and    DWORD PTR [eax-0x48],esi
  40c636:	jne    0x40c69a
  40c638:	or     edi,DWORD PTR [esi-0x50a480c6]
  40c63e:	mov    eax,ds:0x9145f7bc
  40c643:	and    esi,edi
  40c645:	aad    0x1e
  40c647:	aad    0xd4
  40c649:	pop    ecx
  40c64a:	inc    ecx
  40c64b:	or     DWORD PTR [edx+0xd],eax
  40c64e:	xor    eax,0x5dfa9452
  40c653:	ins    DWORD PTR es:[edi],dx
  40c654:	(bad)  
  40c657:	sbb    al,0x58
  40c65a:	sub    eax,0x89de84bb
  40c65f:	out    0xf9,eax
  40c661:	xor    DWORD PTR [ecx+ebx*4+0x5b],ecx
  40c665:	lods   al,BYTE PTR ds:[esi]
  40c666:	ins    DWORD PTR es:[edi],dx
  40c667:	or     al,0xb7
  40c669:	add    eax,0x3b125be1
  40c66e:	(bad)  
  40c670:	jmp    0x9ac8:0x28f46b8d
  40c677:	aad    0x62
  40c679:	jg     0x40c69e
  40c67b:	mov    ecx,0x4dcdd8f
  40c680:	add    bl,al
  40c682:	and    al,0xb4
  40c684:	lds    eax,FWORD PTR [ebx+0x4ec35afb]
  40c68a:	pop    edi
  40c68b:	out    0xd8,al
  40c68d:	mov    ah,0x19
  40c68f:	icebp  
  40c690:	cld    
  40c691:	shl    DWORD PTR [esi],0xd
  40c694:	adc    al,0x40
  40c696:	push   eax
  40c697:	sbb    BYTE PTR [edx-0x5e4f6108],cl
  40c69d:	(bad)  
  40c69f:	mov    eax,ds:0x9cffc2f6
  40c6a4:	div    DWORD PTR [eax]
  40c6a6:	cmp    eax,0xde3ddc16
  40c6ab:	ret    0xbe56
  40c6ae:	cmp    al,0x2d
  40c6b0:	xor    ah,BYTE PTR [edi+0x1010535b]
  40c6b6:	jle    0x40c6a3
  40c6b8:	mov    ecx,0xc432341f
  40c6bd:	xor    DWORD PTR [ecx+0x73],ecx
  40c6c0:	inc    edx
  40c6c1:	sub    ebp,edi
  40c6c3:	pop    ecx
  40c6c4:	adc    dl,dl
  40c6c6:	push   ss
  40c6c7:	jg     0x40c695
  40c6c9:	pop    eax
  40c6ca:	xor    BYTE PTR ds:0xb6786eef,bl
  40c6d0:	pop    eax
  40c6d1:	sbb    al,0x8b
  40c6d3:	or     edi,DWORD PTR [ebx-0x77]
  40c6d6:	aad    0x5f
  40c6d8:	test   DWORD PTR [ecx+0x480e0688],ebx
  40c6de:	hlt    
  40c6df:	(bad)  
  40c6e0:	leave  
  40c6e1:	push   eax
  40c6e2:	int    0x40
  40c6e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6e5:	lods   al,BYTE PTR ds:[esi]
  40c6e6:	inc    ebp
  40c6e7:	cmp    cl,BYTE PTR [eax+0x4b]
  40c6ea:	outs   dx,BYTE PTR ds:[esi]
  40c6ec:	shl    DWORD PTR [ebx+ebp*4-0x53],0x9b
  40c6f1:	push   ebp
  40c6f2:	ror    bh,1
  40c6f4:	cs cli 
  40c6f6:	pop    esp
  40c6f7:	inc    ebp
  40c6f8:	pop    ss
  40c6f9:	or     al,0xc4
  40c6fb:	cmp    eax,0x6a0c450e
  40c700:	mov    edi,0x7d4a6588
  40c705:	mov    ecx,0xc814dd31
  40c70a:	fidivr DWORD PTR [esi+0x1b]
  40c70d:	rol    BYTE PTR [ecx],0xe4
  40c710:	loope  0x40c6f8
  40c712:	dec    ebp
  40c713:	cli    
  40c714:	out    0x9b,al
  40c716:	daa    
  40c717:	mov    ch,0x8
  40c719:	gs out 0x40,al
  40c71c:	into   
  40c71d:	rcl    DWORD PTR [ecx-0x72e234cf],1
  40c723:	adc    BYTE PTR [ebp+0x21],dh
  40c726:	cmp    edx,DWORD PTR [edx+0x59f5839a]
  40c72c:	into   
  40c72d:	jge    0x40c6f2
  40c72f:	out    0xe5,al
  40c731:	les    eax,FWORD PTR [ecx+0x4bc7caf0]
  40c737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c738:	clc    
  40c739:	lea    esi,[edx+0x4a4bd275]
  40c73f:	das    
  40c740:	fisub  WORD PTR [esi-0x4420d0fc]
  40c746:	rcl    DWORD PTR [eax+0x79],cl
  40c749:	pop    esi
  40c74a:	dec    edx
  40c74b:	lock scas eax,DWORD PTR es:[edi]
  40c74d:	add    esi,DWORD PTR [ebx+0x7514be4e]
  40c753:	pop    edx
  40c754:	test   al,0xd6
  40c756:	and    bh,dl
  40c758:	js     0x40c71c
  40c75a:	xchg   edx,eax
  40c75b:	push   ebx
  40c75c:	add    al,0xa0
  40c75e:	push   ss
  40c75f:	or     eax,0xf206607
  40c764:	xchg   esi,eax
  40c765:	push   ebp
  40c766:	pop    esp
  40c767:	push   ss
  40c768:	xlat   BYTE PTR ds:[ebx]
  40c769:	sbb    eax,0x9d66f430
  40c76e:	je     0x40c7e0
  40c770:	dec    ebp
  40c771:	(bad)  
  40c772:	cmp    BYTE PTR [edi+0x7ec2d3f3],dh
  40c778:	sbb    esi,DWORD PTR [ebx+0x4187c0a8]
  40c77e:	(bad)  
  40c77f:	xchg   ebp,eax
  40c780:	push   edi
  40c781:	pop    ebp
  40c782:	aaa    
  40c783:	rcr    BYTE PTR [edx+0x1e0b030e],cl
  40c789:	dec    ebx
  40c78a:	adc    al,0xb0
  40c78c:	dec    eax
  40c78d:	xor    eax,DWORD PTR [ebx-0x3db5afe]
  40c793:	fs pop ebx
  40c795:	in     al,0x52
  40c797:	scas   al,BYTE PTR es:[edi]
  40c798:	lods   eax,DWORD PTR ds:[esi]
  40c799:	rcr    DWORD PTR [eax+eiz*8-0xa],0xc9
  40c79e:	mov    BYTE PTR [ebp+0x54],bl
  40c7a1:	push   0xef1460d3
  40c7a6:	popf   
  40c7a7:	lds    esi,FWORD PTR [ecx+0x6fa6c77a]
  40c7ad:	jl     0x40c7a0
  40c7af:	outs   dx,DWORD PTR ds:[esi]
  40c7b0:	sbb    eax,0x52b43638
  40c7b5:	out    0xe7,eax
  40c7b7:	adc    eax,0x186f2bb9
  40c7bc:	outs   dx,DWORD PTR ds:[esi]
  40c7bd:	sub    BYTE PTR [esi+eax*8+0x125fe38c],dh
  40c7c4:	cmp    DWORD PTR [eax+0x62],eax
  40c7c7:	xchg   ebx,eax
  40c7c8:	call   0x6a7dde59
  40c7cd:	fs pusha 
  40c7cf:	cmp    ecx,eax
  40c7d1:	mov    bl,0x55
  40c7d3:	dec    esi
  40c7d4:	cwde   
  40c7d5:	repz clc 
  40c7d7:	mov    esp,0x7b4ec4c
  40c7dc:	jmp    0x40c857
  40c7de:	and    al,0x30
  40c7e0:	icebp  
  40c7e1:	jne    0x40c7fc
  40c7e3:	add    DWORD PTR [ebp+0x10],eax
  40c7e6:	lahf   
  40c7e7:	ss daa 
  40c7e9:	loop   0x40c813
  40c7eb:	repz mov eax,ds:0xabb571b5
  40c7f1:	or     eax,0xc2ddd4d9
  40c7f6:	push   cs
  40c7f7:	popf   
  40c7f8:	mov    BYTE PTR [ecx+ebx*1-0x635ea300],ah
  40c7ff:	xor    eax,0x795ccef3
  40c804:	dec    esi
  40c805:	(bad)  
  40c806:	neg    BYTE PTR [edx]
  40c808:	iret   
  40c809:	fcmovbe st,st(2)
  40c80b:	in     eax,dx
  40c80c:	push   0x9fe6e054
  40c811:	add    al,BYTE PTR [edi+eax*4]
  40c814:	out    0x3c,eax
  40c816:	pop    esi
  40c817:	push   ecx
  40c818:	sub    ebp,DWORD PTR [eax+0x7afcd75c]
  40c81e:	mov    eax,ds:0xbbee4e78
  40c823:	in     al,dx
  40c824:	cmp    DWORD PTR [edi+edi*1+0x5],esi
  40c828:	fcomp  DWORD PTR [edx+0x19]
  40c82b:	(bad)  
  40c82c:	loopne 0x40c81c
  40c82e:	imul   esp,DWORD PTR [esi-0x7a071918],0x3a96bcb4
  40c838:	addr16 in al,dx
  40c83a:	gs jb  0x40c7dc
  40c83d:	sbb    ebx,esp
  40c83f:	add    BYTE PTR [eax+0x5f46675c],0x87
  40c846:	daa    
  40c847:	stc    
  40c848:	dec    esi
  40c849:	dec    ebx
  40c84a:	mov    DWORD PTR [ebp+ebx*4+0x3b7818dc],edx
  40c851:	pop    ss
  40c852:	shl    DWORD PTR [edx+0x116d7dd7],cl
  40c858:	call   0x96ec8db3
  40c85d:	mov    es,WORD PTR [bx+di-0x1d80]
  40c862:	into   
  40c863:	dec    edi
  40c864:	aas    
  40c865:	push   ebx
  40c866:	jns    0x40c855
  40c868:	int    0xa0
  40c86a:	and    eax,0x12f71e5c
  40c86f:	shld   ebp,edx,cl
  40c872:	rol    DWORD PTR [edx+0x25],0xc0
  40c876:	mov    eax,0xf8d1d6a8
  40c87b:	out    dx,al
  40c87c:	call   FWORD PTR [eax]
  40c87e:	add    bh,BYTE PTR [ecx+edi*4+0x30]
  40c882:	jo     0x40c82b
  40c884:	jecxz  0x40c8e2
  40c886:	jl     0x40c80b
  40c888:	mov    al,ds:0xfa6e36ec
  40c88d:	mov    eax,ds:0x68a39991
  40c892:	pop    ebx
  40c893:	popw   es
  40c895:	fmul   DWORD PTR [ecx+0x5bca6382]
  40c89b:	jge    0x40c8a9
  40c89d:	popf   
  40c89e:	dec    esp
  40c89f:	cld    
  40c8a0:	xor    DWORD PTR [edx-0x27b0b3af],0xffffffa1
  40c8a7:	push   ds
  40c8a8:	cmp    ch,BYTE PTR [edx-0x5eb87c1]
  40c8ae:	mov    WORD PTR [eax+0x284dfa08],ss
  40c8b4:	pop    esi
  40c8b5:	adc    dl,al
  40c8b7:	imul   esi,ecx,0xffffffea
  40c8ba:	add    DWORD PTR [edi-0x30337d86],edi
  40c8c0:	jmp    0x5e7fa021
  40c8c5:	enter  0x595e,0x4e
  40c8c9:	call   0x3dc5ab50
  40c8ce:	pop    ecx
  40c8cf:	or     al,0x1e
  40c8d1:	(bad)  
  40c8d2:	(bad)  
  40c8d4:	mov    cl,0x98
  40c8d6:	inc    edi
  40c8d7:	addr16 push 0x73
  40c8da:	cmp    BYTE PTR [ebx],dl
  40c8dc:	xchg   DWORD PTR [ebx],edx
  40c8de:	pop    ebp
  40c8df:	jne    0x40c907
  40c8e1:	outs   dx,DWORD PTR ds:[esi]
  40c8e2:	push   ecx
  40c8e3:	sti    
  40c8e4:	stos   BYTE PTR es:[edi],al
  40c8e5:	jno    0x40c8e0
  40c8e7:	add    DWORD PTR [eax+0x50500534],edi
  40c8ed:	(bad)  
  40c8ee:	pop    eax
  40c8ef:	in     al,dx
  40c8f0:	call   0xfb79:0x9a2bf009
  40c8f7:	jae    0x40c8f8
  40c8f9:	inc    edx
  40c8fa:	mov    esi,0xb6aef550
  40c8ff:	es or  eax,0x7c2155b1
  40c905:	inc    edx
  40c906:	scas   eax,DWORD PTR es:[edi]
  40c907:	mov    cl,0xd3
  40c909:	xchg   DWORD PTR [ecx+0x61],ecx
  40c90c:	stc    
  40c90d:	cmp    edi,ebp
  40c90f:	xchg   ebp,eax
  40c910:	pop    ds
  40c911:	jmp    0x40c90f
  40c913:	mov    DWORD PTR [eax],edx
  40c915:	cdq    
  40c916:	mov    al,BYTE PTR ds:0x8945ca41
  40c91c:	xchg   ecx,eax
  40c91d:	outs   dx,DWORD PTR ds:[esi]
  40c91e:	cmp    BYTE PTR [esi+0x39],al
  40c921:	mov    al,ds:0x803046c6
  40c926:	in     eax,0xa8
  40c928:	aas    
  40c929:	lods   al,BYTE PTR ds:[esi]
  40c92a:	in     al,0xc2
  40c92c:	repnz jecxz 0x40c95c
  40c92f:	sbb    dl,dh
  40c931:	mov    al,ds:0x2ad240a4
  40c936:	icebp  
  40c937:	cdq    
  40c938:	lods   al,BYTE PTR ds:[esi]
  40c939:	std    
  40c93a:	test   DWORD PTR [esi-0x14],esi
  40c93d:	push   eax
  40c93e:	retf   0x2fac
  40c941:	jns    0x40c9c1
  40c943:	test   esp,eax
  40c945:	das    
  40c946:	cs dec ebx
  40c948:	and    bl,BYTE PTR [esi+ebx*2-0x6d2ba763]
  40c94f:	mov    DWORD PTR [ecx+0x49df7c2c],ebx
  40c955:	inc    ebx
  40c956:	outs   dx,DWORD PTR ds:[esi]
  40c957:	adc    BYTE PTR [esi],0x74
  40c95a:	imul   edx,DWORD PTR [ecx+ecx*4-0x6f],0x1f
  40c95f:	outs   dx,BYTE PTR ds:[esi]
  40c960:	in     eax,0x53
  40c962:	jnp    0x40c91e
  40c964:	scas   al,BYTE PTR es:[edi]
  40c965:	jl     0x40c99d
  40c967:	icebp  
  40c968:	jg     0x40c981
  40c96a:	mov    ch,0xb3
  40c96c:	les    ebp,FWORD PTR [ecx+0x31]
  40c96f:	ret    0x2410
  40c972:	repz lds eax,FWORD PTR [esi+0x740810c8]
  40c979:	sbb    edx,ebx
  40c97b:	dec    esp
  40c97c:	pop    esp
  40c97d:	dec    edx
  40c97e:	push   ss
  40c97f:	(bad)  
  40c980:	cmp    al,0x5f
  40c982:	pushw  es
  40c984:	repz sub DWORD PTR ds:0x2081878e,esp
  40c98b:	repz xchg ecx,eax
  40c98d:	sti    
  40c98e:	ror    BYTE PTR [ecx],1
  40c990:	scas   eax,DWORD PTR es:[edi]
  40c991:	dec    esi
  40c992:	icebp  
  40c993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c994:	jl     0x40c9d5
  40c996:	sub    eax,0xb9400003
  40c99b:	outs   dx,DWORD PTR ds:[esi]
  40c99c:	push   0x49
  40c99e:	inc    edx
  40c99f:	outs   dx,DWORD PTR ds:[esi]
  40c9a0:	hlt    
  40c9a1:	or     al,0xb4
  40c9a3:	xchg   ebx,eax
  40c9a4:	jae    0x40ca1a
  40c9a6:	xor    dh,BYTE PTR [ebx-0x4a9ca905]
  40c9ac:	pop    ebp
  40c9ad:	pop    ss
  40c9ae:	scas   al,BYTE PTR es:[edi]
  40c9af:	mov    cs,WORD PTR [ebx-0x5e03973e]
  40c9b5:	mov    ch,bh
  40c9b7:	push   esp
  40c9b8:	mov    DWORD PTR [edx-0x7d1f1b12],ecx
  40c9be:	jecxz  0x40c96e
  40c9c0:	aaa    
  40c9c1:	lock jbe 0x40ca29
  40c9c4:	add    BYTE PTR [edx],0x5f
  40c9c7:	push   edx
  40c9c8:	cmp    al,0x7
  40c9ca:	xchg   esp,eax
  40c9cb:	and    al,0x1f
  40c9cd:	add    dh,dl
  40c9cf:	push   eax
  40c9d0:	sub    BYTE PTR [ebx+0x40],0xf7
  40c9d4:	xchg   ebp,eax
  40c9d5:	mov    esp,DWORD PTR [esi+0x31]
  40c9d8:	in     eax,0x8b
  40c9da:	xor    edi,DWORD PTR [edx]
  40c9dc:	cmp    al,0xd2
  40c9de:	mov    edi,0x5213bb1e
  40c9e3:	(bad)  
  40c9e4:	adc    dl,ah
  40c9e6:	mov    ah,bl
  40c9e8:	in     al,0x8e
  40c9ea:	(bad)  
  40c9eb:	aas    
  40c9ec:	sbb    DWORD PTR [ebx-0x39f325ba],ebp
  40c9f2:	mov    dh,0xf2
  40c9f4:	mov    esi,0x6aa27d0e
  40c9f9:	jno    0x40c98b
  40c9fb:	(bad)  
  40c9fc:	mov    eax,ds:0x7c4e9e20
  40ca01:	ficomp WORD PTR [edi]
  40ca03:	aas    
  40ca04:	loopne 0x40c9bf
  40ca06:	ins    BYTE PTR es:[edi],dx
  40ca07:	push   edx
  40ca08:	mov    es,WORD PTR [edi]
  40ca0a:	inc    edx
  40ca0b:	push   ds
  40ca0c:	fnstenv [ecx+0x1a055b78]
  40ca12:	addr16 sub dl,bl
  40ca15:	fmul   QWORD PTR [ecx]
  40ca17:	and    BYTE PTR [ebp-0x59],al
  40ca1a:	fdiv   DWORD PTR [esi-0x26bc8ca3]
  40ca20:	and    ch,BYTE PTR [ebp-0x30]
  40ca23:	fs shl esi,1
  40ca26:	jbe    0x40c9ca
  40ca28:	xchg   ebx,eax
  40ca29:	xchg   DWORD PTR [ebx+0x56],esi
  40ca2c:	pop    ss
  40ca2d:	pusha  
  40ca2e:	(bad)  
  40ca30:	push   0xffffff97
  40ca32:	pop    edx
  40ca33:	shl    ecx,0x85
  40ca36:	mov    dl,0xde
  40ca38:	cwde   
  40ca39:	stos   BYTE PTR es:[edi],al
  40ca3a:	loop   0x40ca4d
  40ca3c:	(bad)  
  40ca3d:	gs pushf 
  40ca3f:	mov    ch,0x17
  40ca41:	scas   eax,DWORD PTR es:[edi]
  40ca42:	sbb    BYTE PTR [edi-0x120c0966],al
  40ca48:	add    dh,BYTE PTR [edx+0x70]
  40ca4b:	lea    edi,[eax]
  40ca4d:	arpl   WORD PTR [ecx+ecx*4-0x100260a6],sp
  40ca54:	xchg   edx,eax
  40ca55:	mov    al,ds:0xa9926c81
  40ca5a:	jecxz  0x40cab6
  40ca5c:	(bad)  
  40ca5d:	scas   al,BYTE PTR es:[edi]
  40ca5e:	cmp    WORD PTR [ebx],0xa661
  40ca63:	jmp    0xb1f9:0x79e18c20
  40ca6a:	lock inc ebx
  40ca6c:	add    BYTE PTR [ebp+0x3c6a87dc],0xc4
  40ca73:	sub    DWORD PTR [eax],edx
  40ca75:	dec    esp
  40ca76:	mov    al,ds:0xaa048118
  40ca7b:	mov    esp,0xdb991e94
  40ca80:	jno    0x40ca1d
  40ca82:	xor    DWORD PTR [ebx+0xd1c72ec],eax
  40ca88:	cmp    dl,BYTE PTR [esi]
  40ca8a:	dec    edx
  40ca8b:	fisub  WORD PTR [eax-0xd102abd]
  40ca91:	cld    
  40ca92:	adc    DWORD PTR [edx+0x35851925],ebp
  40ca98:	sbb    edi,ecx
  40ca9a:	pop    eax
  40ca9b:	loop   0x40caf0
  40ca9d:	xchg   edi,eax
  40ca9e:	sub    al,0xbc
  40caa1:	and    BYTE PTR [edi+0x18],ch
  40caa4:	lods   eax,DWORD PTR ds:[esi]
  40caa5:	sub    DWORD PTR [edi-0x2e13ec98],edx
  40caab:	lods   eax,DWORD PTR ds:[esi]
  40caac:	lds    ebx,FWORD PTR [edx+0x4]
  40caaf:	mov    ds:0xf9b6cdcf,eax
  40cab4:	in     eax,dx
  40cab5:	lds    edx,FWORD PTR [ebp+ebp*2+0x40ea4209]
  40cabc:	mov    ebp,0xbeb6845e
  40cac1:	lds    ebx,FWORD PTR [eax-0x38]
  40cac4:	(bad)  
  40cac5:	clc    
  40cac6:	jmp    0xdfb95cb
  40cacb:	not    DWORD PTR [esi]
  40cacd:	adc    eax,0xc5bfcad1
  40cad2:	hlt    
  40cad3:	and    bl,dl
  40cad5:	arpl   ax,si
  40cad7:	mov    ss,WORD PTR [edx]
  40cad9:	add    bh,BYTE PTR [esi+0x421ccf33]
  40cadf:	mov    edi,ecx
  40cae1:	sbb    al,0xba
  40cae3:	and    edx,DWORD PTR [esi+ebp*8-0x6]
  40cae7:	je     0x40cb46
  40cae9:	aad    0x2d
  40caeb:	cli    
  40caec:	fsub   DWORD PTR [eax]
  40caee:	shl    ch,cl
  40caf0:	imul   eax,DWORD PTR [edi+ebp*2-0x1b],0xe31d271a
  40caf8:	mov    eax,ds:0x77a02b5f
  40cafd:	mov    ds:0x7e50d504,eax
  40cb02:	cmp    DWORD PTR [edx-0xe939c6b],edx
  40cb08:	enter  0xe75a,0x96
  40cb0c:	into   
  40cb0d:	mov    ecx,0x27f0d81d
  40cb12:	sub    ah,BYTE PTR [ecx-0x48]
  40cb15:	mov    esi,0x4afdb8c8
  40cb1a:	call   0x3921:0x9e401
  40cb21:	imul   ebp,edx,0xcda1e963
  40cb27:	jmp    0x40caf9
  40cb29:	loopne 0x40cb07
  40cb2b:	sar    DWORD PTR [eax+ebx*1+0x4aba8a5e],0x1d
  40cb33:	xchg   esp,eax
  40cb34:	je     0x40cafb
  40cb36:	or     esp,DWORD PTR [eax]
  40cb38:	dec    ecx
  40cb39:	dec    esi
  40cb3a:	pop    ebp
  40cb3b:	mov    bh,0x13
  40cb3d:	xchg   DWORD PTR [ecx-0x67],esp
  40cb40:	dec    edx
  40cb41:	mov    ecx,0x4f802d85
  40cb46:	bound  eax,QWORD PTR [ebx-0x2062794e]
  40cb4c:	jo     0x40cade
  40cb4e:	dec    esp
  40cb4f:	push   esp
  40cb50:	xchg   DWORD PTR [ebx],eax
  40cb52:	jbe    0x40cba6
  40cb54:	imul   esi,DWORD PTR [ebx-0x239da556],0x56
  40cb5b:	pop    eax
  40cb5c:	xchg   BYTE PTR [ebp-0x28],dl
  40cb5f:	sub    BYTE PTR ds:0xb7e5d5c1,bl
  40cb65:	sbb    eax,0x27b56998
  40cb6a:	jns    0x40cb61
  40cb6c:	test   eax,0x2b0c856f
  40cb71:	xor    dh,BYTE PTR [esi+0x6542f380]
  40cb77:	jae    0x40cb66
  40cb79:	jmp    FWORD PTR [ebp-0xb2eb1c4]
  40cb7f:	stc    
  40cb80:	aad    0x4
  40cb82:	mov    dh,0xea
  40cb84:	or     edi,DWORD PTR [esi+0x7]
  40cb87:	pop    edi
  40cb88:	jae    0x40cb7a
  40cb8a:	cmp    BYTE PTR [ebx+0x5f9da07b],dh
  40cb90:	cmp    al,BYTE PTR [ebp-0x76]
  40cb93:	and    al,ch
  40cb95:	add    DWORD PTR [ecx-0x156f991c],ebp
  40cb9b:	pop    ebp
  40cb9c:	and    esp,DWORD PTR [ebx+0x41]
  40cb9f:	daa    
  40cba0:	pop    esp
  40cba1:	sti    
  40cba2:	sub    dl,BYTE PTR [edx-0x3a]
  40cba5:	mov    ds:0x344d0906,al
  40cbaa:	push   esi
  40cbab:	arpl   WORD PTR [esi],ax
  40cbad:	mov    cl,0x25
  40cbaf:	pop    edx
  40cbb0:	or     edx,ebx
  40cbb2:	and    DWORD PTR [eax],ecx
  40cbb4:	xlat   BYTE PTR ds:[ebx]
  40cbb5:	and    BYTE PTR [ebp-0x5a],ah
  40cbb8:	inc    edx
  40cbb9:	add    eax,0x8888c7a4
  40cbbe:	inc    BYTE PTR [ebp+0x107ee29]
  40cbc4:	outs   dx,BYTE PTR ds:[esi]
  40cbc5:	je     0x40cb60
  40cbc7:	dec    esp
  40cbc8:	clc    
  40cbc9:	jl     0x40cbc2
  40cbcb:	out    0x23,al
  40cbcd:	ja     0x40cbd3
  40cbcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbd0:	popf   
  40cbd1:	sti    
  40cbd2:	(bad)  
  40cbd3:	push   esp
  40cbd4:	test   esp,ebx
  40cbd6:	sbb    esp,0x4
  40cbd9:	lock mov DWORD PTR [edx+0x7c],ebp
  40cbdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbde:	loopne 0x40cc1d
  40cbe0:	mov    bl,0x81
  40cbe2:	cli    
  40cbe3:	repz test DWORD PTR [esi-0x6b933b43],eax
  40cbea:	add    eax,0x3429a67a
  40cbef:	jo     0x40cc39
  40cbf1:	adc    DWORD PTR [eax+0x14],edx
  40cbf4:	paddw  mm3,mm7
  40cbf7:	mov    fs,WORD PTR [ebx]
  40cbf9:	inc    ebp
  40cbfa:	fcom   QWORD PTR [ebp+0x72]
  40cbfd:	aas    
  40cbfe:	cdq    
  40cbff:	ror    edi,0x14
  40cc02:	mov    al,BYTE PTR [esi+ebp*1]
  40cc05:	int    0x87
  40cc07:	xor    esp,DWORD PTR [edx-0x420de6ad]
  40cc0d:	popf   
  40cc0e:	inc    edx
  40cc0f:	inc    esi
  40cc10:	inc    ebx
  40cc11:	nop
  40cc12:	mov    edi,0x7ded9696
  40cc17:	clc    
  40cc18:	dec    esp
  40cc19:	pop    ds
  40cc1a:	ror    BYTE PTR [edi],0x22
  40cc1d:	mov    ebp,DWORD PTR [ebx-0x6b70c581]
  40cc23:	add    BYTE PTR [edx],dh
  40cc25:	pop    es
  40cc26:	mov    ebx,0xcf610896
  40cc2b:	push   esp
  40cc2c:	(bad)  
  40cc2d:	call   FWORD PTR [ecx]
  40cc2f:	int    0xb4
  40cc31:	add    edi,DWORD PTR [eax-0x25d06a11]
  40cc37:	out    dx,al
  40cc38:	mov    ebx,0xe0a5fee5
  40cc3d:	cld    
  40cc3e:	int    0x3d
  40cc40:	shl    DWORD PTR [ecx],1
  40cc42:	push   edx
  40cc43:	jnp    0x40cbeb
  40cc45:	fnsave [edx+ebp*2+0x2e]
  40cc49:	lock scas eax,DWORD PTR es:[edi]
  40cc4b:	pop    ss
  40cc4c:	sub    esi,esp
  40cc4e:	add    bl,dh
  40cc50:	iret   
  40cc51:	popf   
  40cc52:	and    al,0xb8
  40cc54:	nop
  40cc55:	or     DWORD PTR [edx],ebp
  40cc57:	mov    al,0x53
  40cc59:	xchg   ebx,eax
  40cc5a:	inc    ebp
  40cc5b:	mov    bl,dh
  40cc5d:	leave  
  40cc5e:	sbb    al,ah
  40cc60:	sub    ebp,ecx
  40cc62:	adc    bl,BYTE PTR [esi-0x7841df20]
  40cc68:	jmp    0x779ed446
  40cc6d:	cwde   
  40cc6e:	enter  0x4891,0xa3
  40cc72:	and    DWORD PTR [esi],0xffffffd4
  40cc75:	aad    0x86
  40cc77:	in     al,dx
  40cc78:	leave  
  40cc79:	push   ebp
  40cc7a:	push   esi
  40cc7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc7c:	cmp    dl,BYTE PTR [ebx]
  40cc7e:	mov    fs:0xbe063bf8,eax
  40cc84:	lods   eax,DWORD PTR ds:[esi]
  40cc85:	test   DWORD PTR [edx],eax
  40cc87:	lahf   
  40cc88:	xor    ebp,ebp
  40cc8a:	lods   al,BYTE PTR ds:[esi]
  40cc8b:	push   edx
  40cc8c:	call   0x73df819f
  40cc91:	popf   
  40cc92:	mov    ebp,DWORD PTR [edi-0x35]
  40cc95:	aad    0x2f
  40cc97:	jno    0x40cc34
  40cc99:	add    ebx,esp
  40cc9b:	stos   BYTE PTR es:[edi],al
  40cc9c:	int3   
  40cc9d:	mov    al,ds:0x2d220928
  40cca2:	jo     0x40cc92
  40cca4:	mov    ebp,0x3e68e410
  40cca9:	mov    esp,0x52339bd2
  40ccae:	std    
  40ccaf:	mov    eax,ds:0xdace9271
  40ccb4:	jb     0x40cc43
  40ccb6:	in     eax,dx
  40ccb7:	(bad)
  40ccbb:	sti    
  40ccbc:	inc    ebp
  40ccbd:	add    BYTE PTR [esi+0x7],0xb1
  40ccc1:	mov    bh,0x42
  40ccc3:	mov    WORD PTR [ecx-0x431bfe78],cs
  40ccc9:	mul    BYTE PTR [edi-0x25]
  40cccc:	mov    ebp,0xa907a26a
  40ccd1:	pxor   mm6,QWORD PTR [edx-0x14]
  40ccd5:	rcr    BYTE PTR [esp+esi*1+0x28],1
  40ccd9:	hlt    
  40ccda:	outs   dx,DWORD PTR ds:[esi]
  40ccdb:	repz mov esi,0x8816d98e
  40cce1:	add    ah,BYTE PTR [ebx+0x140fc74c]
  40cce7:	sahf   
  40cce8:	retf   
  40cce9:	lock dec ecx
  40cceb:	test   BYTE PTR [edx+0x6f],ch
  40ccee:	dec    edi
  40ccef:	shl    DWORD PTR [eax],0xad
  40ccf2:	mov    al,ds:0x30f81095
  40ccf7:	stos   DWORD PTR es:[edi],eax
  40ccf8:	addr16 mov edi,0x38cd9698
  40ccfe:	pop    esp
  40ccff:	in     eax,dx
  40cd00:	outs   dx,DWORD PTR ds:[esi]
  40cd01:	leave  
  40cd02:	and    al,0xf
  40cd04:	inc    edi
  40cd05:	mov    ch,0xcd
  40cd07:	test   ecx,eax
  40cd09:	cld    
  40cd0a:	dec    esi
  40cd0b:	pop    ds
  40cd0c:	push   ebx
  40cd0d:	mov    ecx,0x4b4f4e77
  40cd12:	outs   dx,DWORD PTR ds:[esi]
  40cd13:	scas   eax,DWORD PTR es:[edi]
  40cd14:	dec    eax
  40cd15:	jl     0x40ccc4
  40cd17:	es mov eax,0xf2790391
  40cd1d:	ja     0x40ccf9
  40cd1f:	push   ss
  40cd20:	xor    eax,0x24567fb1
  40cd25:	stc    
  40cd26:	and    DWORD PTR es:[edx+0x7],esi
  40cd2a:	icebp  
  40cd2b:	mul    DWORD PTR [ecx]
  40cd2d:	jnp    0x40ccc7
  40cd2f:	cli    
  40cd30:	imul   esp,DWORD PTR [esi+0x23],0x58eba92
  40cd37:	pop    ebx
  40cd38:	(bad)  
  40cd39:	loope  0x40cd86
  40cd3b:	dec    edx
  40cd3c:	xchg   DWORD PTR [ebp+0x7f],ecx
  40cd3f:	adc    ch,BYTE PTR [esi+0x58]
  40cd42:	pop    esi
  40cd43:	jmp    0x40cdb7
  40cd45:	aad    0x98
  40cd47:	adc    DWORD PTR [ebx-0x68],ebx
  40cd4a:	fisubr DWORD PTR [eax]
  40cd4c:	add    bl,BYTE PTR [ebp-0x1c6d8cf4]
  40cd52:	pop    esi
  40cd53:	mov    al,ds:0x66d276a8
  40cd58:	cmp    al,0x77
  40cd5a:	cmp    BYTE PTR [ecx],ch
  40cd5c:	fisttp WORD PTR cs:[ebp-0x52e2f902]
  40cd63:	bound  esp,QWORD PTR [edx+0x7e]
  40cd66:	test   al,0xf
  40cd68:	mov    edi,0xb643b308
  40cd6d:	jp     0x40cd4a
  40cd6f:	js     0x40cd96
  40cd71:	gs out 0x20,al
  40cd74:	pop    ss
  40cd75:	dec    edx
  40cd76:	pop    edi
  40cd77:	stc    
  40cd78:	jns    0x40cd65
  40cd7a:	mov    WORD PTR [ebp+0x5],ss
  40cd7d:	adc    al,0x8b
  40cd7f:	jecxz  0x40cd4e
  40cd81:	pop    esp
  40cd82:	add    DWORD PTR [ecx-0x28499e82],eax
  40cd88:	mov    al,0x52
  40cd8a:	sbb    eax,0x6675bb4
  40cd8f:	dec    DWORD PTR [ebp-0x2a42b508]
  40cd95:	sbb    al,0x9f
  40cd97:	scas   eax,DWORD PTR es:[edi]
  40cd98:	shl    esp,cl
  40cd9a:	xchg   esp,eax
  40cd9b:	fsub   st(7),st
  40cd9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd9e:	and    BYTE PTR [esi-0xbfaae4a],ch
  40cda4:	dec    edi
  40cda5:	lods   al,BYTE PTR ds:[esi]
  40cda6:	mov    bl,0x4b
  40cda8:	mov    bh,0x34
  40cdaa:	std    
  40cdab:	aas    
  40cdac:	lods   al,BYTE PTR ds:[esi]
  40cdad:	xchg   BYTE PTR [ebx+ecx*2-0x6f3a2b57],bh
  40cdb4:	pop    esp
  40cdb5:	test   eax,0xff357774
  40cdba:	std    
  40cdbb:	ret    0xfa26
  40cdbe:	scas   eax,DWORD PTR es:[edi]
  40cdbf:	fs jo  0x40ce24
  40cdc2:	add    al,0x6e
  40cdc4:	or     bl,BYTE PTR [esi-0x6]
  40cdc7:	and    BYTE PTR [eax-0x2595a4ff],cl
  40cdcd:	xchg   ebp,eax
  40cdce:	xchg   BYTE PTR [eax+esi*4+0x47],ah
  40cdd2:	mov    gs:0xe9c52e09,al
  40cdd8:	push   ebp
  40cdd9:	push   edx
  40cdda:	jp     0x40ce5b
  40cddc:	out    0xd5,al
  40cdde:	adc    al,0x49
  40cde0:	adc    al,ch
  40cde2:	aas    
  40cde3:	cs xchg esi,eax
  40cde5:	in     al,dx
  40cde6:	lock mov ecx,0x53e3bdf
  40cdec:	repnz int3 
  40cdee:	(bad)  
  40cdef:	fisub  DWORD PTR [esi-0x60]
  40cdf2:	int    0x32
  40cdf4:	and    BYTE PTR [ecx],al
  40cdf6:	stos   BYTE PTR es:[edi],al
  40cdf7:	repnz or BYTE PTR [edx-0x5d],dl
  40cdfb:	lgs    ebp,FWORD PTR [esi-0x3357b129]
  40ce02:	lods   eax,DWORD PTR ds:[esi]
  40ce03:	mov    BYTE PTR [edi],bh
  40ce05:	jmp    0x3c1f12f3
  40ce0a:	mov    bh,0x8
  40ce0c:	push   esp
  40ce0d:	dec    edi
  40ce0e:	jp     0x40ce1c
  40ce10:	std    
  40ce11:	scas   al,BYTE PTR es:[edi]
  40ce12:	mov    edx,0xba45a203
  40ce17:	inc    eax
  40ce18:	xchg   ah,dl
  40ce1a:	jne    0x40ce91
  40ce1c:	jmp    0x40cdf9
  40ce1e:	add    DWORD PTR [ecx],0x29
  40ce21:	mov    cl,BYTE PTR [edx+0x70]
  40ce24:	sub    edx,DWORD PTR [ebx+eiz*2+0x43]
  40ce28:	addr16 iret 
  40ce2a:	in     eax,dx
  40ce2b:	sbb    ebp,eax
  40ce2d:	sbb    ah,BYTE PTR [ebp-0x16e16d26]
  40ce33:	jo     0x40ce92
  40ce35:	loopne 0x40ce0f
  40ce37:	(bad)  
  40ce38:	sti    
  40ce39:	xchg   esp,eax
  40ce3a:	out    dx,eax
  40ce3b:	xchg   edx,eax
  40ce3c:	push   esi
  40ce3d:	js     0x40ce22
  40ce3f:	jg     0x40cdda
  40ce41:	and    al,0x13
  40ce43:	pop    esi
  40ce44:	push   ds
  40ce45:	sbb    al,0xb9
  40ce47:	adc    al,0x36
  40ce49:	push   es
  40ce4a:	js     0x40ce92
  40ce4c:	(bad)  
  40ce4d:	enter  0xbb16,0x16
  40ce51:	sbb    BYTE PTR [eax],dh
  40ce53:	inc    ecx
  40ce54:	out    0x49,ax
  40ce57:	mov    al,ds:0xb1832cb3
  40ce5c:	sub    BYTE PTR [ecx+0x32b8349e],ah
  40ce62:	xchg   esi,eax
  40ce63:	stos   DWORD PTR es:[edi],eax
  40ce64:	les    edx,FWORD PTR [edi+edi*1+0x79]
  40ce68:	jbe    0x40ce54
  40ce6a:	xlat   BYTE PTR ds:[ebx]
  40ce6b:	sar    ebx,0x78
  40ce6e:	and    BYTE PTR [ecx-0x6e2260bb],ah
  40ce74:	std    
  40ce75:	inc    esi
  40ce76:	pavgb  mm4,QWORD PTR [ebp-0x37]
  40ce7a:	inc    esi
  40ce7b:	imul   esi,DWORD PTR [esi-0x6cf1f60e],0x77
  40ce82:	in     al,0x7f
  40ce84:	xor    al,0x0
  40ce86:	int    0x40
  40ce88:	cmp    al,BYTE PTR [eax+0x4c0d393b]
  40ce8e:	adc    eax,ebx
  40ce90:	mov    edx,0x3272e977
  40ce95:	cwde   
  40ce96:	jnp    0x40cec8
  40ce98:	pop    esp
  40ce99:	popa   
  40ce9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce9b:	sub    eax,0x73357c53
  40cea0:	cld    
  40cea1:	dec    eax
  40cea2:	xchg   ebx,eax
  40cea3:	add    eax,0x14eb0609
  40cea8:	push   ecx
  40cea9:	cld    
  40ceaa:	shr    BYTE PTR [ebp-0x35e7cc75],0x93
  40ceb1:	adc    al,cl
  40ceb3:	cmp    DWORD PTR [eax],edi
  40ceb5:	mov    bl,0x6f
  40ceb7:	jne    0x40ce3d
  40ceb9:	arpl   sp,dx
  40cebb:	arpl   WORD PTR [ebp+0x6d72e64d],si
  40cec1:	call   DWORD PTR [edx+eiz*2]
  40cec4:	fistp  DWORD PTR [eax+esi*1-0x704892b0]
  40cecb:	lods   eax,DWORD PTR ds:[esi]
  40cecc:	loopne 0x40ced9
  40cece:	jmp    0xf54f8d9d
  40ced3:	jmp    0x18:0x23d87b15
  40ceda:	sbb    BYTE PTR [esi+ebx*2+0x16c9339c],al
  40cee1:	mov    al,0xcd
  40cee3:	dec    edi
  40cee4:	sbb    eax,0x3f9d9ed4
  40cee9:	jecxz  0x40cefe
  40ceeb:	or     bl,BYTE PTR [ecx]
  40ceed:	and    eax,0xe866dc9e
  40cef2:	or     ch,BYTE PTR [eax+0x4c1bcc0b]
  40cef8:	loop   0x40ce92
  40cefa:	push   0x1244e46a
  40ceff:	xchg   edi,eax
  40cf00:	lds    esi,FWORD PTR [ecx+0x11]
  40cf03:	push   es
  40cf04:	aas    
  40cf05:	lock xchg ebp,eax
  40cf07:	arpl   bx,di
  40cf09:	mov    ch,0x64
  40cf0b:	iret   
  40cf0c:	or     al,BYTE PTR [ebp+0x19]
  40cf0f:	popf   
  40cf10:	js     0x40cf0b
  40cf12:	out    0xe3,eax
  40cf14:	sub    DWORD PTR [edx-0x71],0x40
  40cf18:	sub    ebp,DWORD PTR [esi]
  40cf1a:	fdivrp st(0),st
  40cf1c:	adc    DWORD PTR [esi+0x3dde18a7],ecx
  40cf22:	stos   DWORD PTR es:[edi],eax
  40cf23:	add    ebp,DWORD PTR [ebx-0x1c5fb0d7]
  40cf29:	adc    BYTE PTR [eax],ah
  40cf2b:	and    DWORD PTR [ebp+0x6a],ebx
  40cf2e:	psllw  mm7,QWORD PTR [edi-0x1c]
  40cf32:	stos   DWORD PTR es:[edi],eax
  40cf33:	mov    DWORD PTR [esi+eax*8],eax
  40cf36:	jl     0x40cf12
  40cf38:	jb     0x40cebb
  40cf3a:	mov    al,ds:0x422e5013
  40cf3f:	sbb    DWORD PTR ds:0x178ed5e2,ebx
  40cf45:	xchg   ecx,eax
  40cf46:	xor    al,0x70
  40cf48:	in     al,0xe0
  40cf4a:	lahf   
  40cf4b:	xchg   BYTE PTR [ebp-0x2d0f8388],cl
  40cf51:	or     edi,eax
  40cf53:	gs std 
  40cf55:	leave  
  40cf56:	cmp    BYTE PTR [edi+0x11],bh
  40cf59:	inc    esi
  40cf5a:	pop    ss
  40cf5b:	test   BYTE PTR [eax+0xe],0x98
  40cf5f:	dec    esp
  40cf60:	stc    
  40cf61:	pop    ebp
  40cf62:	push   edx
  40cf63:	(bad)  
  40cf65:	rcr    DWORD PTR [ebx+0x53],cl
  40cf68:	inc    ebx
  40cf69:	inc    eax
  40cf6a:	loopne 0x40cfda
  40cf6c:	(bad)  
  40cf6e:	add    DWORD PTR [ecx+0x2afa7e9e],edx
  40cf74:	cli    
  40cf75:	dec    ebx
  40cf76:	neg    BYTE PTR [ebx+0x1b]
  40cf79:	arpl   si,si
  40cf7b:	fsub   DWORD PTR [edi]
  40cf7d:	push   es
  40cf7e:	sub    ebx,DWORD PTR [ecx+eiz*1+0x70]
  40cf82:	imul   DWORD PTR [eax-0x7882bc4a]
  40cf88:	xchg   ebp,eax
  40cf89:	xchg   ebp,eax
  40cf8b:	in     al,0x52
  40cf8d:	stos   BYTE PTR es:[edi],al
  40cf8e:	in     eax,dx
  40cf8f:	jae    0x40cfb2
  40cf91:	xchg   esi,eax
  40cf92:	shr    BYTE PTR [eax+0x6733f44e],0x61
  40cf99:	shl    al,cl
  40cf9b:	or     eax,0xe18b8824
  40cfa0:	pop    ds
  40cfa1:	mov    dl,0x8f
  40cfa3:	lds    ecx,FWORD PTR [ecx+0x5a]
  40cfa6:	out    dx,al
  40cfa7:	(bad)  
  40cfa8:	out    dx,eax
  40cfa9:	fwait
  40cfaa:	sbb    esp,DWORD PTR [esi+0x2457ddfb]
  40cfb0:	mov    WORD PTR [eax-0xd6c567c],?
  40cfb6:	push   ebx
  40cfb7:	mov    eax,eax
  40cfb9:	pop    ebp
  40cfba:	bnd ja 0x40cf70
  40cfbd:	xchg   ebp,eax
  40cfbe:	(bad)  
  40cfbf:	and    BYTE PTR [edx+0x176cb2b8],al
  40cfc5:	pop    ecx
  40cfc6:	push   edx
  40cfc7:	call   0xf5b3f0ed
  40cfcc:	pop    ebp
  40cfcd:	add    eax,0x6023cef9
  40cfd2:	push   esp
  40cfd3:	mov    al,0x8f
  40cfd5:	fnclex 
  40cfd7:	push   ds
  40cfd8:	pop    es
  40cfd9:	pop    ecx
  40cfda:	(bad)  
  40cfdb:	and    BYTE PTR [eax-0x5b],dl
  40cfde:	push   edx
  40cfdf:	pop    edx
  40cfe0:	sbb    eax,0x9c08af2b
  40cfe5:	dec    edi
  40cfe6:	or     ebp,ebx
  40cfe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfe9:	jne    0x40d026
  40cfeb:	(bad)  
  40cfed:	outs   dx,DWORD PTR ds:[esi]
  40cfee:	sub    eax,0x7ffee810
  40cff3:	xchg   edx,eax
  40cff4:	addr16 mov db3,ebp
  40cff8:	out    0xd1,eax
  40cffa:	and    ebp,DWORD PTR [ebp-0x5d0c109a]
  40d000:	mov    dl,0x7a
  40d002:	mov    edx,DWORD PTR [edx-0x7d]
  40d005:	sub    DWORD PTR [ebp+0x117f297c],esp
  40d00b:	test   BYTE PTR fs:[eax+0x14],bh
  40d00f:	mov    gs,WORD PTR [esi]
  40d011:	add    eax,0x1d8175
  40d016:	push   ebx
  40d017:	jbe    0xbade8dcf
  40d01d:	mov    ebx,0xe0524c65
  40d022:	xchg   edi,eax
  40d023:	sub    eax,0x823ce51d
  40d028:	and    DWORD PTR [edx+esi*1],ecx
  40d02b:	neg    BYTE PTR [ebp+edi*4-0x3b]
  40d02f:	inc    ebx
  40d030:	popf   
  40d031:	jmp    0x40cfef
  40d033:	mov    dh,0xe1
  40d035:	aas    
  40d036:	cmc    
  40d037:	dec    ebx
  40d038:	pop    ebp
  40d039:	(bad)  
  40d03b:	mov    DWORD PTR [ebp+0xe],ecx
  40d03e:	das    
  40d03f:	test   DWORD PTR [edi],ebp
  40d041:	xor    DWORD PTR [eax+0x64c10c11],edi
  40d047:	aas    
  40d048:	pop    esi
  40d049:	xchg   edx,eax
  40d04a:	mov    bl,0x29
  40d04c:	mov    dh,0xf5
  40d04e:	sti    
  40d04f:	and    ah,BYTE PTR [eax]
  40d051:	xor    al,0x15
  40d053:	xor    al,0xd5
  40d055:	mov    dl,0x5e
  40d057:	push   esp
  40d058:	dec    edx
  40d059:	(bad)  
  40d05a:	jp     0x40d09a
  40d05c:	sbb    bh,BYTE PTR [edx+0x1bda0613]
  40d062:	dec    ebx
  40d063:	cmp    dh,BYTE PTR [edx]
  40d065:	xchg   ebp,eax
  40d066:	fmul   QWORD PTR [esi+0x27]
  40d069:	push   eax
  40d06a:	and    ch,0xbe
  40d06d:	adc    bh,BYTE PTR [edx+0x1696f08a]
  40d073:	sub    BYTE PTR [edx-0x39],0x39
  40d077:	xor    bh,dl
  40d079:	jg     0x40d0bd
  40d07b:	mov    cl,0x8b
  40d07d:	or     BYTE PTR [esp+edi*1-0x76543307],ah
  40d084:	xor    ch,bl
  40d086:	js     0x40d085
  40d088:	cld    
  40d089:	std    
  40d08a:	mov    WORD PTR [eax],gs
  40d08c:	dec    ebx
  40d08d:	mov    ah,0xfa
  40d08f:	retf   
  40d090:	pop    edi
  40d091:	sbb    al,bl
  40d093:	sbb    al,0x3d
  40d095:	push   edi
  40d096:	fwait
  40d097:	adc    al,BYTE PTR [edi-0x5b]
  40d09a:	inc    edx
  40d09b:	mov    bh,0x4e
  40d09d:	imul   ebx,edi,0x7efd018c
  40d0a3:	mov    dl,0x71
  40d0a5:	and    ebp,DWORD PTR [esi-0xd]
  40d0a8:	adc    DWORD PTR [eax+ecx*4+0x5cbc1d4b],0x43
  40d0b0:	bnd jae 0x40d09f
  40d0b3:	mov    al,ds:0xaaa28978
  40d0b8:	and    DWORD PTR [ebx],esp
  40d0ba:	add    esp,DWORD PTR [ecx+0x49]
  40d0bd:	inc    esp
  40d0be:	fimul  DWORD PTR [edx+0x12]
  40d0c1:	jne    0x40d0ab
  40d0c3:	and    DWORD PTR [edi+0x7c],esp
  40d0c6:	or     ch,BYTE PTR [eax]
  40d0c8:	jl     0x40d142
  40d0ca:	pop    ecx
  40d0cb:	cmp    al,0xf3
  40d0cd:	inc    ebp
  40d0ce:	sbb    DWORD PTR [edx+0x74189d7d],0xffffffb0
  40d0d5:	push   ecx
  40d0d6:	fild   QWORD PTR [ebp-0x749bb914]
  40d0dc:	out    dx,eax
  40d0dd:	loope  0x40d0b5
  40d0df:	push   cs
  40d0e0:	mov    cl,0x76
  40d0e2:	es pop ss
  40d0e4:	dec    edx
  40d0e5:	push   cs
  40d0e6:	xchg   DWORD PTR [edx+0x78],edi
  40d0e9:	cmp    DWORD PTR [ebx-0x49],edi
  40d0ec:	inc    ebp
  40d0ed:	mov    eax,ds:0x790122a5
  40d0f2:	fsubr  DWORD PTR [esi+0x402f1a05]
  40d0f8:	dec    edi
  40d0f9:	bound  ebx,QWORD PTR ds:0xe73f4135
  40d0ff:	jmp    0x40d0a1
  40d101:	(bad)  
  40d102:	mov    ch,ah
  40d104:	mov    ah,0xe3
  40d106:	dec    ecx
  40d107:	xlat   BYTE PTR ds:[ebx]
  40d108:	(bad)  
  40d109:	cdq    
  40d10a:	mov    bl,0x4c
  40d10c:	mov    ecx,gs
  40d10e:	pusha  
  40d10f:	stos   BYTE PTR es:[edi],al
  40d110:	test   DWORD PTR [ecx],0xb3286139
  40d116:	sbb    bl,BYTE PTR [edi+0x3bcf59fa]
  40d11c:	inc    edi
  40d11d:	fidivr DWORD PTR gs:[eax-0x45964c85]
  40d124:	inc    esp
  40d125:	inc    ebp
  40d126:	popa   
  40d127:	in     eax,dx
  40d128:	ret    0x80cb
  40d12b:	sahf   
  40d12c:	out    0x35,eax
  40d12e:	xchg   edx,eax
  40d12f:	cmp    esi,esp
  40d131:	gs in  al,dx
  40d133:	pop    esi
  40d134:	ins    DWORD PTR es:[edi],dx
  40d135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d136:	bound  esp,QWORD PTR [esi]
  40d138:	mov    ebp,DWORD PTR [edx+0xa62d6fb]
  40d13e:	icebp  
  40d13f:	in     al,0x23
  40d141:	jnp    0x40d148
  40d143:	inc    ebp
  40d144:	ja     0x40d179
  40d146:	xchg   esi,eax
  40d147:	push   cs
  40d148:	fcomp  QWORD PTR [edx-0x108bfce0]
  40d14e:	or     ah,dl
  40d150:	(bad)  
  40d151:	shr    al,cl
  40d153:	mov    esp,0x482c562e
  40d158:	mov    esp,0xa9a53069
  40d15d:	out    dx,eax
  40d15e:	xlat   BYTE PTR ds:[ebx]
  40d15f:	ret    0xd870
  40d162:	pop    edx
  40d163:	out    dx,eax
  40d164:	rcr    BYTE PTR [eax],1
  40d166:	and    BYTE PTR [eax+0x4dfe8d06],dl
  40d16c:	icebp  
  40d16d:	mov    ah,dh
  40d16f:	adc    dh,BYTE PTR [edi]
  40d171:	xchg   ebx,eax
  40d172:	jmp    0x40d13c
  40d174:	out    0x95,al
  40d176:	jb     0x40d196
  40d178:	fisttp DWORD PTR [esi]
  40d17a:	cwde   
  40d17b:	dec    eax
  40d17c:	sbb    DWORD PTR [edx+0x4bf4d4b2],esi
  40d182:	test   DWORD PTR [esi-0x2585796c],edx
  40d188:	push   edx
  40d189:	aaa    
  40d18a:	dec    edx
  40d18b:	dec    edi
  40d18c:	push   edx
  40d18d:	imul   edx,DWORD PTR [ebx],0x80bce4c4
  40d193:	mov    edi,0x4addb138
  40d198:	bound  edi,QWORD PTR [esi]
  40d19a:	cmc    
  40d19b:	in     al,dx
  40d19c:	inc    esi
  40d19d:	xchg   DWORD PTR [ebp+0x13199b59],esp
  40d1a3:	cs call 0xa784ae47
  40d1a9:	adc    DWORD PTR [ebp-0x7b1de000],eax
  40d1af:	dec    edi
  40d1b0:	les    esi,FWORD PTR [ebx+0x6]
  40d1b3:	push   cs
  40d1b4:	jb     0x40d177
  40d1b6:	es pop es
  40d1b8:	pop    edi
  40d1b9:	stc    
  40d1ba:	mov    ?,WORD PTR [edi-0x60]
  40d1bd:	dec    esi
  40d1be:	enter  0xfea7,0x58
  40d1c2:	add    ebx,0x8f7ffe1f
  40d1c8:	sub    esi,ecx
  40d1ca:	dec    ebp
  40d1cb:	ja     0x40d20d
  40d1cd:	cdq    
  40d1ce:	(bad)  
  40d1d0:	jmp    0xea47:0xbe6b0e5
  40d1d7:	repnz enter 0x4c79,0xa7
  40d1dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1dd:	sbb    eax,0x77c1d3bb
  40d1e2:	pop    esp
  40d1e3:	push   esi
  40d1e4:	(bad)  
  40d1e5:	xchg   ebx,eax
  40d1e6:	adc    DWORD PTR [edx+0x61],esp
  40d1e9:	pop    ebx
  40d1ea:	aam    0x8b
  40d1ec:	jge    0x40d243
  40d1ee:	ss pop es
  40d1f0:	pop    edi
  40d1f1:	push   ebx
  40d1f2:	pusha  
  40d1f3:	pop    edx
  40d1f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1f5:	cli    
  40d1f6:	pop    ebp
  40d1f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1f8:	mov    al,0x59
  40d1fa:	and    al,0x5b
  40d1fc:	shl    BYTE PTR [ecx],0xbe
  40d1ff:	push   esi
  40d200:	sub    eax,0x2c22ea78
  40d205:	dec    edx
  40d206:	sub    eax,0x9ce7f966
  40d20b:	jno    0x40d22c
  40d20d:	cmp    eax,0x41651141
  40d212:	push   ebx
  40d213:	push   0xffffffd5
  40d215:	ja     0x40d228
  40d217:	out    0xe6,eax
  40d219:	nop
  40d21a:	inc    ecx
  40d21b:	cdq    
  40d21c:	neg    BYTE PTR ds:0x879ebe6b
  40d222:	sbb    BYTE PTR [esi+0x5967b19e],bl
  40d228:	jmp    0x40d28b
  40d22a:	leave  
  40d22b:	mov    ebp,0x6bfa4c9c
  40d230:	(bad)  
  40d231:	pushf  
  40d232:	out    dx,eax
  40d233:	ja     0x40d27a
  40d235:	test   eax,0xe07173b5
  40d23a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d23b:	into   
  40d23c:	in     eax,dx
  40d23d:	in     eax,dx
  40d23e:	stc    
  40d23f:	test   al,0x20
  40d241:	imul   ecx,DWORD PTR [ebx+ebx*4],0x849bf90c
  40d248:	cld    
  40d249:	aaa    
  40d24a:	retf   
  40d24b:	clc    
  40d24c:	add    al,0xb2
  40d24e:	in     al,dx
  40d24f:	out    dx,eax
  40d250:	std    
  40d251:	(bad)  
  40d252:	shr    BYTE PTR [edx+0x4b],1
  40d255:	outs   dx,DWORD PTR ds:[esi]
  40d256:	dec    ebx
  40d257:	loope  0x40d25f
  40d259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d25a:	push   0x55213e8
  40d25f:	jo     0x40d223
  40d261:	popf   
  40d262:	inc    esi
  40d263:	push   0x4a757b95
  40d268:	xchg   edi,eax
  40d269:	data16 mov al,0x9b
  40d26c:	add    esi,DWORD PTR [ecx+0x1]
  40d26f:	outs   dx,BYTE PTR ds:[esi]
  40d270:	inc    ecx
  40d271:	jo     0x40d2b4
  40d273:	or     al,0xf0
  40d275:	es std 
  40d277:	mov    bh,0x56
  40d279:	adc    bh,BYTE PTR [esi+0x118a0287]
  40d27f:	cmp    eax,0xf8f10cf
  40d284:	std    
  40d285:	mov    cl,0x5f
  40d287:	gs inc ecx
  40d289:	pop    ss
  40d28a:	xor    cl,bh
  40d28c:	inc    BYTE PTR [edi+0x24ea6885]
  40d292:	inc    edi
  40d293:	mov    WORD PTR [ecx-0xbe26c26],?
  40d299:	cdq    
  40d29a:	pop    edx
  40d29b:	add    eax,DWORD PTR [ebx-0x6652c2c6]
  40d2a1:	jl     0x40d314
  40d2a3:	dec    edx
  40d2a4:	xchg   edx,eax
  40d2a5:	xchg   edx,eax
  40d2a6:	mov    esp,0xf7c48105
  40d2ab:	adc    eax,DWORD PTR [eax-0x21]
  40d2ae:	jg     0x40d255
  40d2b0:	int    0x45
  40d2b2:	imul   ecx,DWORD PTR [esi],0xffffffbc
  40d2b5:	je     0x40d2c6
  40d2b7:	jge    0x40d23d
  40d2b9:	daa    
  40d2ba:	xor    BYTE PTR [esi+0x3b],dh
  40d2bd:	mov    ch,0x3
  40d2bf:	lock mov ah,0x7a
  40d2c2:	shl    BYTE PTR [ebx+0x4470e0a0],0xc4
  40d2c9:	push   edi
  40d2ca:	mov    esp,0x3e3a8549
  40d2cf:	jne    0x40d313
  40d2d1:	add    DWORD PTR [edx],ebp
  40d2d3:	pop    ebx
  40d2d4:	retf   
  40d2d5:	mov    dl,0xdd
  40d2d7:	jp     0x40d25a
  40d2d9:	mul    DWORD PTR [ebp-0x547eafe]
  40d2df:	mov    ch,0x55
  40d2e1:	loopne 0x40d2b8
  40d2e3:	mov    ebp,0x89291ae5
  40d2e8:	loopne 0x40d2c9
  40d2ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2eb:	daa    
  40d2ec:	sar    ah,1
  40d2ee:	xor    dl,bl
  40d2f0:	inc    eax
  40d2f1:	sahf   
  40d2f2:	adc    al,0x94
  40d2f4:	mov    ds:0xbdef5a5c,eax
  40d2f9:	push   es
  40d2fa:	lea    eax,[eax-0x22]
  40d2fd:	xchg   edx,eax
  40d2fe:	push   ebx
  40d2ff:	or     esp,DWORD PTR [edi+0xb611c45]
  40d305:	lea    esi,[edi+0x26f62f89]
  40d30b:	and    BYTE PTR [esp+ebx*2],bl
  40d30e:	popaw  
  40d310:	and    ecx,DWORD PTR [ebx+0x6e]
  40d313:	mov    ds:0x7b523f69,eax
  40d318:	pop    ss
  40d319:	out    0x9d,al
  40d31b:	int3   
  40d31c:	scas   al,BYTE PTR es:[edi]
  40d31d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d31e:	test   al,0xf6
  40d320:	push   cs
  40d321:	push   edx
  40d322:	cmp    dl,dh
  40d324:	xchg   ebp,eax
  40d325:	jae    0x40d314
  40d327:	mov    DWORD PTR [ebp+0x526a1c84],0x8d6de197
  40d331:	cld    
  40d332:	aas    
  40d333:	gs push edx
  40d335:	fadd   QWORD PTR [edx-0x71]
  40d338:	(bad)  
  40d339:	es popa 
  40d33b:	push   edx
  40d33c:	push   0xffffffca
  40d33e:	dec    esi
  40d33f:	xchg   esp,eax
  40d340:	jle    0x40d354
  40d342:	or     ebp,edi
  40d344:	fild   DWORD PTR [eax-0x24]
  40d347:	sahf   
  40d348:	mov    edi,0x89507dde
  40d34d:	aad    0x45
  40d34f:	jmp    0x5c9b:0x37001d7d
  40d356:	mov    DWORD PTR [edx-0x5b9d84fb],eax
  40d35c:	sahf   
  40d35d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d35e:	fild   DWORD PTR [edi+0xe9a46c4]
  40d364:	add    DWORD PTR [eax-0x5c],esi
  40d367:	sti    
  40d368:	xor    al,0xd7
  40d36a:	mov    esi,0xe127b57a
  40d36f:	sub    eax,0x1840bfe1
  40d374:	sbb    al,0xcc
  40d376:	imul   esp,DWORD PTR [edi],0xf96b61c0
  40d37c:	xchg   ecx,eax
  40d37d:	pushf  
  40d37e:	xchg   ebx,edx
  40d380:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40d382:	cmc    
  40d383:	fcmovu st,st(5)
  40d385:	stc    
  40d386:	sar    DWORD PTR [eax],cl
  40d388:	xor    dh,BYTE PTR [edi-0x151009c7]
  40d38e:	mov    DWORD PTR [edi+eax*2+0x10],ebx
  40d392:	shl    BYTE PTR [esi+0x7c],0x7
  40d396:	dec    esp
  40d397:	mov    ds,WORD PTR ds:0x5953848b
  40d39d:	jno    0x40d320
  40d39f:	xor    DWORD PTR [ecx-0x14a8bb19],ebx
  40d3a5:	mov    ch,0xb4
  40d3a7:	xor    BYTE PTR [edi-0x2d],bl
  40d3aa:	sub    al,0x4f
  40d3ac:	jmp    0x40d401
  40d3ae:	div    DWORD PTR [eax-0x3bb7bc6e]
  40d3b4:	xchg   esi,eax
  40d3b5:	xlat   BYTE PTR ds:[ebx]
  40d3b6:	add    eax,0xc45ed003
  40d3bb:	jle    0x40d411
  40d3bd:	mov    al,ds:0xcaebf34b
  40d3c2:	add    ebx,eax
  40d3c4:	cmp    al,0x5d
  40d3c6:	and    BYTE PTR [eax+esi*2],0x3b
  40d3ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3cb:	inc    esp
  40d3cc:	xor    bh,BYTE PTR [edi+0x30945488]
  40d3d2:	xchg   BYTE PTR [edx+0x21],ah
  40d3d5:	out    dx,al
  40d3d6:	cmp    al,0x8d
  40d3d8:	stc    
  40d3d9:	xchg   ebp,eax
  40d3da:	fcmovnu st,st(2)
  40d3dc:	daa    
  40d3dd:	fs (bad) 
  40d3df:	out    0x5f,eax
  40d3e1:	dec    esp
  40d3e2:	or     eax,0x6668aeec
  40d3e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3e8:	mov    ebp,0xeb747717
  40d3ed:	shl    BYTE PTR [esi],cl
  40d3ef:	add    DWORD PTR [esi],ebp
  40d3f1:	mov    ebp,0xe00e3d8c
  40d3f6:	mov    dl,BYTE PTR [ecx]
  40d3f8:	xchg   ebx,eax
  40d3f9:	mov    ?,WORD PTR [edi-0x5e]
  40d3fc:	fmul   QWORD PTR [edi-0x62]
  40d3ff:	jp     0x40d38e
  40d401:	inc    ebp
  40d402:	inc    ecx
  40d403:	mov    dh,0x9f
  40d405:	sbb    DWORD PTR [esi+0x7e],edi
  40d408:	loope  0x40d3e3
  40d40a:	jp     0x40d3e9
  40d40c:	les    edi,FWORD PTR [eax-0x44]
  40d40f:	sbb    BYTE PTR [eax-0x7a],al
  40d412:	mov    ebp,0x95babdca
  40d417:	push   0xffffffe2
  40d419:	inc    ebp
  40d41a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d41b:	stos   BYTE PTR es:[edi],al
  40d41c:	int    0xfa
  40d41e:	pop    ebx
  40d41f:	jae    0x40d408
  40d421:	lea    ecx,[ebp-0x4ae7be3f]
  40d427:	push   ecx
  40d428:	lea    ebp,[ebx]
  40d42a:	cmp    eax,0xc0100420
  40d42f:	into   
  40d430:	fstp   TBYTE PTR [esi]
  40d432:	jno    0x40d3e5
  40d434:	xchg   ecx,eax
  40d435:	jmp    0xb80d70ca
  40d43a:	adc    esp,DWORD PTR [ecx]
  40d43c:	nop
  40d43d:	outs   dx,BYTE PTR ds:[esi]
  40d43e:	test   edi,0xcbb655d5
  40d444:	or     eax,0x9b8547bc
  40d449:	inc    edi
  40d44a:	jp     0x40d452
  40d44c:	sbb    bh,BYTE PTR [edx-0x172917b3]
  40d452:	mov    bh,0x48
  40d454:	mov    cl,0x1e
  40d456:	jge    0x40d40b
  40d458:	loope  0x40d4c2
  40d45a:	dec    ecx
  40d45b:	mov    esp,0x258f0f76
  40d460:	mov    bl,0x63
  40d462:	mov    ebx,0x82a8ad0a
  40d467:	pusha  
  40d468:	push   ebx
  40d469:	je     0x40d4a0
  40d46b:	test   eax,0xae9717e1
  40d470:	add    DWORD PTR [esi-0x2edc6870],esi
  40d476:	push   ebx
  40d477:	or     al,cl
  40d479:	or     dh,BYTE PTR [edx]
  40d47b:	push   edx
  40d47c:	(bad)  
  40d47d:	test   eax,0x7797661
  40d482:	scas   al,BYTE PTR es:[edi]
  40d483:	cmp    bh,BYTE PTR [esi]
  40d485:	cdq    
  40d486:	popa   
  40d487:	xchg   ebp,eax
  40d488:	sub    ecx,DWORD PTR [eax]
  40d48a:	sub    BYTE PTR [edx+0x67],dl
  40d48d:	cmp    dl,BYTE PTR [edx-0x2db19e96]
  40d493:	dec    edi
  40d494:	(bad)  
  40d495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d496:	jne    0x40d4a3
  40d498:	push   eax
  40d499:	ror    ebp,cl
  40d49b:	lds    edi,FWORD PTR [edi+0x740d2628]
  40d4a1:	push   ds
  40d4a2:	in     al,dx
  40d4a3:	pop    edi
  40d4a4:	jecxz  0x40d525
  40d4a6:	push   0x72dc6079
  40d4ab:	cwde   
  40d4ac:	retf   0x6361
  40d4af:	xchg   ecx,eax
  40d4b0:	cmp    BYTE PTR [esi],0x64
  40d4b3:	enter  0xacbe,0x5d
  40d4b7:	inc    ecx
  40d4b8:	xchg   esp,eax
  40d4b9:	xor    al,0x5b
  40d4bb:	push   0xb2c8e227
  40d4c0:	push   ss
  40d4c1:	jp     0x40d4d9
  40d4c3:	mov    edi,esi
  40d4c5:	jge    0x40d487
  40d4c7:	dec    ebx
  40d4c8:	jae    0x40d4db
  40d4ca:	xchg   BYTE PTR [edx+0x78],dl
  40d4cd:	pop    ebx
  40d4ce:	mov    ebp,0x1c5e3a91
  40d4d3:	aam    0x29
  40d4d5:	dec    ecx
  40d4d6:	xchg   ecx,eax
  40d4d7:	fdivr  QWORD PTR [esp+ebx*1+0x4bdcb349]
  40d4de:	add    al,0xd2
  40d4e0:	adc    BYTE PTR [eax+0x22ea7197],ch
  40d4e6:	shl    BYTE PTR [esi+0x6f],1
  40d4e9:	shr    DWORD PTR [eax-0x2ad0c2dc],1
  40d4ef:	pop    edi
  40d4f0:	loopne 0x40d4a8
  40d4f2:	adc    esi,ecx
  40d4f4:	repz push edi
  40d4f6:	inc    ebp
  40d4f7:	fstp   TBYTE PTR [esi]
  40d4f9:	xor    al,0x1
  40d4fb:	jecxz  0x40d53f
  40d4fd:	retf   
  40d4fe:	retf   0x6417
  40d501:	and    BYTE PTR ds:0x4ff4afe0,bh
  40d507:	jb     0x40d4bb
  40d509:	mov    dl,0x5f
  40d50b:	cmc    
  40d50c:	xchg   ebx,eax
  40d50d:	lock mov cs,WORD PTR [ecx-0xb]
  40d511:	or     ebp,DWORD PTR [edx+0x195c8d67]
  40d517:	xchg   BYTE PTR [eax],ch
  40d519:	int    0x55
  40d51b:	dec    ebp
  40d51c:	cmp    al,0x31
  40d51e:	or     ecx,edx
  40d520:	ret    0xa1e
  40d523:	push   esi
  40d524:	and    eax,0x7b29d249
  40d529:	mov    gs,esp
  40d52b:	pop    ebx
  40d52c:	push   edi
  40d52d:	loopne 0x40d541
  40d52f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d530:	xchg   esi,eax
  40d531:	imul   BYTE PTR [ebx]
  40d533:	repnz cmp esp,esp
  40d536:	adc    al,0x7c
  40d538:	jge    0x40d530
  40d53a:	pop    ecx
  40d53b:	sahf   
  40d53c:	pop    esp
  40d53d:	sub    BYTE PTR [edi],bl
  40d53f:	shl    DWORD PTR [ebx+edi*8-0x4a1ccea9],cl
  40d546:	ds (bad) 
  40d548:	mov    BYTE PTR [ebx+0x48386b55],0x8a
  40d54f:	dec    esp
  40d550:	icebp  
  40d551:	and    bl,BYTE PTR ds:0xcf69bd66
  40d557:	arpl   WORD PTR [esi+edx*1-0x19],si
  40d55b:	loope  0x40d54e
  40d55d:	cwde   
  40d55e:	inc    esi
  40d55f:	sti    
  40d560:	sub    eax,0x48fa4c76
  40d565:	(bad)  
  40d566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d567:	retf   0xdd45
  40d56a:	xor    al,0x3b
  40d56c:	adc    eax,0x3bed0ce5
  40d571:	mov    ecx,0x2190f1fe
  40d576:	cs push eax
  40d578:	mov    cl,0x21
  40d57a:	sbb    DWORD PTR [ecx],edi
  40d57c:	jl     0x40d583
  40d57e:	cs xchg esp,eax
  40d580:	xchg   esi,eax
  40d581:	pushf  
  40d582:	pop    ss
  40d583:	retf   0x7e2e
  40d586:	lods   eax,DWORD PTR gs:[esi]
  40d588:	mov    WORD PTR [eax-0x2d74ac12],ds
  40d58e:	cmp    eax,0x25ec8f71
  40d593:	cli    
  40d594:	es scas al,BYTE PTR es:[edi]
  40d596:	int3   
  40d597:	cld    
  40d598:	sub    al,0xba
  40d59a:	xchg   BYTE PTR [edx],dl
  40d59c:	and    al,0xb9
  40d59e:	dec    ecx
  40d59f:	sub    dl,ah
  40d5a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5a2:	stc    
  40d5a3:	push   es
  40d5a4:	fdivp  st(0),st
  40d5a6:	cdq    
  40d5a7:	sbb    DWORD PTR [esi],edi
  40d5a9:	fcompp 
  40d5ab:	mov    edx,0xd99dafe3
  40d5b0:	add    al,0xbe
  40d5b3:	add    eax,0xbaef81ad
  40d5b8:	dec    ax
  40d5ba:	sahf   
  40d5bb:	outs   dx,BYTE PTR ds:[esi]
  40d5bc:	ja     0x40d55d
  40d5be:	pusha  
  40d5bf:	sbb    bl,BYTE PTR [esp+edi*1]
  40d5c2:	lods   eax,DWORD PTR cs:[esi]
  40d5c4:	fwait
  40d5c5:	jg     0x40d59f
  40d5c7:	dec    ecx
  40d5c8:	push   esi
  40d5c9:	sub    al,0xef
  40d5cb:	xchg   ebp,eax
  40d5cc:	pop    es
  40d5cd:	sbb    eax,0x8f1fa609
  40d5d2:	clc    
  40d5d3:	adc    bh,ah
  40d5d5:	mul    DWORD PTR [edi+ebx*8+0x1a]
  40d5d9:	mov    cl,0xbf
  40d5db:	jno    0x40d639
  40d5dd:	xchg   edi,eax
  40d5de:	jle    0x40d5b0
  40d5e0:	stc    
  40d5e1:	sub    BYTE PTR [eax+0x31],dl
  40d5e4:	dec    esp
  40d5e5:	(bad)  
  40d5e6:	out    dx,eax
  40d5e7:	pop    esp
  40d5e8:	retf   
  40d5e9:	ds ret 0x51bc
  40d5ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5ee:	pop    esi
  40d5ef:	(bad)  
  40d5f0:	test   DWORD PTR es:[edi+0x43],ebx
  40d5f4:	and    eax,0x3552f66d
  40d5f9:	ficom  DWORD PTR [eax-0xf4ac3db]
  40d5ff:	leave  
  40d600:	cmp    al,0xdd
  40d602:	clc    
  40d603:	xor    BYTE PTR [edx-0xf87131],bl
  40d609:	push   edi
  40d60a:	inc    edi
  40d60b:	outs   dx,BYTE PTR ds:[esi]
  40d60c:	sbb    eax,0x693c5581
  40d611:	adc    esi,edx
  40d613:	loop   0x40d5f0
  40d615:	popa   
  40d616:	int3   
  40d617:	dec    edx
  40d618:	or     BYTE PTR ss:[eax],dh
  40d61b:	sub    eax,0xd8c175c6
  40d620:	push   esi
  40d621:	push   edx
  40d622:	out    dx,eax
  40d623:	das    
  40d624:	xchg   ebx,eax
  40d626:	icebp  
  40d627:	pop    es
  40d628:	int    0x42
  40d62a:	lahf   
  40d62b:	lds    ecx,FWORD PTR [edi]
  40d62d:	sub    edx,DWORD PTR [edx]
  40d62f:	or     ecx,DWORD PTR [edx]
  40d631:	and    BYTE PTR [edx-0x44c4c18a],cl
  40d637:	dec    edx
  40d638:	add    bl,ah
  40d63a:	jo     0x40d5db
  40d63c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d63d:	(bad)  
  40d63f:	mov    bh,0xd
  40d641:	cmp    al,0xfd
  40d643:	sbb    eax,0x635d10b9
  40d648:	xchg   edx,eax
  40d649:	dec    esp
  40d64a:	adc    edi,DWORD PTR [esi+0x32113a4a]
  40d650:	test   BYTE PTR [esi],bl
  40d652:	sbb    eax,0x4c294c91
  40d657:	mov    ecx,DWORD PTR [eax+0x5a]
  40d65a:	js     0x40d645
  40d65c:	jne    0x40d5e2
  40d65e:	add    BYTE PTR [esi+0x2b],0x92
  40d662:	mov    ah,0xb0
  40d664:	aam    0xb9
  40d666:	adc    BYTE PTR [edi+0x54],0x4f
  40d66a:	repnz popf 
  40d66c:	inc    eax
  40d66d:	scas   al,BYTE PTR es:[edi]
  40d66e:	mov    BYTE PTR [eax+0x448bc083],ch
  40d674:	jmp    0x7d7c:0xedf172d6
  40d67b:	cld    
  40d67c:	fldl2t 
  40d67e:	xor    esp,DWORD PTR [edx+0x233ada62]
  40d684:	pop    ebp
  40d685:	int3   
  40d686:	add    eax,ebx
  40d688:	xor    esp,eax
  40d68a:	mov    ecx,0x48d971c0
  40d68f:	dec    esi
  40d690:	out    0x1e,eax
  40d692:	sar    BYTE PTR [ecx],cl
  40d694:	shr    BYTE PTR [ebx],cl
  40d696:	add    eax,0x5063ee2
  40d69b:	push   ecx
  40d69c:	mov    ch,0x2
  40d69e:	fldcw  WORD PTR [ecx-0x1d]
  40d6a1:	jno    0x40d649
  40d6a3:	mov    bh,0x80
  40d6a5:	or     BYTE PTR [ebx-0x43],0xc9
  40d6a9:	cs pop edi
  40d6ab:	pop    es
  40d6ac:	aam    0xff
  40d6ae:	xchg   ebx,eax
  40d6af:	xor    al,BYTE PTR [ecx]
  40d6b1:	mov    ds:0xd901f88,eax
  40d6b6:	mov    ebx,es
  40d6b8:	retf   0x92e4
  40d6bb:	push   ecx
  40d6bc:	sti    
  40d6bd:	fstp   QWORD PTR [edx+0x79abee33]
  40d6c3:	mov    edx,0x172bafac
  40d6c8:	hlt    
  40d6c9:	pop    edx
  40d6ca:	xor    edi,DWORD PTR [edi+0x1d]
  40d6cd:	je     0x40d6da
  40d6cf:	push   es
  40d6d0:	jnp    0x40d6e0
  40d6d2:	in     al,0x1b
  40d6d4:	jmp    0x40d67f
  40d6d6:	cmp    DWORD PTR [edx+0x5c],ebx
  40d6d9:	sbb    eax,0x9fd382db
  40d6de:	pop    ebx
  40d6df:	mov    esp,0xee53a104
  40d6e4:	xor    DWORD PTR [eax],esp
  40d6e6:	cwde   
  40d6e7:	stc    
  40d6e8:	inc    ecx
  40d6e9:	sbb    al,0xb
  40d6eb:	sub    edi,0xffffffa1
  40d6ee:	stos   DWORD PTR es:[edi],eax
  40d6ef:	pop    esp
  40d6f0:	inc    esp
  40d6f1:	mov    eax,ds:0x9b4fa82d
  40d6f6:	lahf   
  40d6f7:	data16 (bad) 
  40d6f9:	fbstp  TBYTE PTR [esi]
  40d6fb:	push   ds
  40d6fc:	(bad)  
  40d6fd:	(bad)
  40d701:	sbb    DWORD PTR [ecx+0x311e9e32],esi
  40d707:	xor    eax,0xb1925292
  40d70c:	fwait
  40d70d:	mov    ch,0x4
  40d70f:	int    0x7d
  40d711:	xor    al,BYTE PTR [eax-0x20c022c6]
  40d717:	test   eax,0x59f6a697
  40d71c:	leave  
  40d71d:	cmp    al,0xd2
  40d71f:	pop    esi
  40d720:	shl    DWORD PTR [eax+0xc],1
  40d723:	pop    ss
  40d724:	jo     0x40d6a7
  40d726:	lock jg 0x40d74c
  40d729:	jp     0x40d762
  40d72b:	pop    esp
  40d72c:	loope  0x40d76b
  40d72e:	fucomi st,st(7)
  40d730:	xor    eax,DWORD PTR [ecx]
  40d732:	push   ecx
  40d733:	add    edi,DWORD PTR [ebp-0x3ce64d9f]
  40d739:	xchg   ecx,ebx
  40d73b:	push   ebp
  40d73c:	add    dh,BYTE PTR [ecx+0x1dba9574]
  40d742:	inc    esp
  40d743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d744:	jmp    0x3f69:0x10013ea7
  40d74b:	scas   al,BYTE PTR es:[edi]
  40d74c:	jge    0x40d767
  40d74e:	retf   0x48e2
  40d751:	addr16 inc ecx
  40d753:	sahf   
  40d754:	fld    QWORD PTR [ebp+0x7]
  40d757:	stos   BYTE PTR es:[edi],al
  40d758:	call   0xe270583a
  40d75d:	std    
  40d75e:	pushf  
  40d75f:	push   0x4d
  40d761:	xor    al,0xec
  40d763:	lock jb 0x40d737
  40d766:	jne    0x40d742
  40d768:	jnp    0x40d709
  40d76a:	mov    bl,BYTE PTR [ebx-0x1f]
  40d76d:	push   eax
  40d76e:	mov    cl,ah
  40d770:	and    DWORD PTR [ecx-0x3e],edx
  40d773:	or     bl,BYTE PTR [edi+0x61]
  40d776:	or     al,0x77
  40d778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d779:	mov    ebx,0x2fe1e992
  40d77e:	push   eax
  40d77f:	dec    ebx
  40d780:	(bad)  
  40d781:	jbe    0x40d786
  40d783:	sub    ebx,edi
  40d785:	std    
  40d786:	fldenv [edx]
  40d788:	cmp    dl,al
  40d78a:	adc    esi,DWORD PTR [ebp-0x42cbe58]
  40d790:	in     al,dx
  40d791:	in     eax,dx
  40d792:	add    al,0x59
  40d794:	push   ds
  40d795:	push   ebx
  40d796:	rcl    BYTE PTR [esp+eiz*4-0x51b8754e],cl
  40d79d:	or     BYTE PTR [edi-0x7d286bc1],ch
  40d7a3:	(bad)  
  40d7a4:	js     0x40d7f2
  40d7a6:	cld    
  40d7a7:	cdq    
  40d7a8:	inc    eax
  40d7a9:	sahf   
  40d7aa:	xchg   BYTE PTR [eax+0x20],bl
  40d7ad:	add    BYTE PTR [edi+0x17],cl
  40d7b0:	mov    WORD PTR [edi+esi*2-0x73],es
  40d7b4:	call   0x6dffc6e8
  40d7b9:	xor    al,0x4b
  40d7bb:	lods   eax,DWORD PTR ds:[esi]
  40d7bc:	push   ds
  40d7bd:	es push edx
  40d7bf:	mov    edi,0x337c8205
  40d7c4:	mov    ebx,0x33f61c0f
  40d7c9:	sub    bl,BYTE PTR [ebx+0x11]
  40d7cc:	mov    ds:0x46ea0dd1,eax
  40d7d1:	xor    eax,DWORD PTR [edx-0x23]
  40d7d4:	jo     0x40d784
  40d7d6:	mov    edx,esi
  40d7d8:	add    eax,DWORD PTR [ebp-0x47]
  40d7db:	pop    edi
  40d7dc:	in     al,dx
  40d7dd:	add    eax,0x41b15052
  40d7e2:	daa    
  40d7e3:	inc    ebp
  40d7e4:	scas   al,BYTE PTR es:[edi]
  40d7e5:	gs ret 0x2b9c
  40d7e9:	sub    al,0x63
  40d7eb:	hlt    
  40d7ec:	pop    es
  40d7ed:	hlt    
  40d7ee:	or     ebx,edi
  40d7f0:	pushf  
  40d7f1:	imul   BYTE PTR [ebx+0x23]
  40d7f4:	arpl   WORD PTR [eax-0x7d],di
  40d7f7:	and    al,0xca
  40d7f9:	sub    eax,0x65386975
  40d7fe:	mov    ds:0x4fd6d190,al
  40d803:	xor    DWORD PTR [edi],ebx
  40d805:	sub    DWORD PTR [ebp+0x60],0x60398a57
  40d80c:	jne    0x40d7c3
  40d80e:	cmp    BYTE PTR [eax-0x46662ff1],al
  40d814:	mov    eax,DWORD PTR [ecx]
  40d816:	fidiv  DWORD PTR [esp+eax*1+0x69e19ef8]
  40d81d:	aad    0xea
  40d81f:	sbb    edi,eax
  40d821:	jmp    DWORD PTR [ebp+0x5f58a5e8]
  40d827:	sahf   
  40d828:	jmp    0x8a45488d
  40d82d:	ret    0x15a1
  40d830:	fstp   TBYTE PTR [eax-0x6]
  40d834:	in     eax,dx
  40d835:	push   0xd08557a9
  40d83a:	aaa    
  40d83b:	ds sub eax,0x922d2ef3
  40d841:	test   eax,0x931f1ce4
  40d846:	cmp    BYTE PTR [ebp+esi*1+0x60],dh
  40d84a:	lds    esp,FWORD PTR [ecx+0x32]
  40d84d:	or     eax,0x5dcce099
  40d852:	sub    DWORD PTR [ebp-0x2],edx
  40d855:	in     eax,dx
  40d856:	add    eax,DWORD PTR [ebx-0x65]
  40d859:	sbb    dh,BYTE PTR [eax]
  40d85b:	retf   0xb538
  40d85e:	fisubr WORD PTR [edi-0x1f]
  40d861:	sub    BYTE PTR [edi+0x1f],bh
  40d864:	(bad)  
  40d865:	lock pop ecx
  40d867:	mov    ch,0xb3
  40d869:	imul   eax,DWORD PTR [edi-0x37],0xffffffad
  40d86d:	inc    eax
  40d86e:	iret   
  40d86f:	mov    edi,DWORD PTR [edi-0x394c4f77]
  40d875:	ins    DWORD PTR es:[edi],dx
  40d876:	clc    
  40d877:	or     DWORD PTR [ebx+ebx*1+0x2c],ebp
  40d87b:	sbb    al,0x18
  40d87d:	in     eax,0xe4
  40d87f:	or     eax,0xa32c4543
  40d884:	sub    dh,BYTE PTR [ebp-0x5f330e03]
  40d88a:	xchg   ebx,eax
  40d88b:	or     DWORD PTR [ebx-0x5c96a25],0xaaba49ed
  40d895:	pop    es
  40d896:	cmp    bh,cl
  40d898:	mov    bl,0x24
  40d89a:	stc    
  40d89b:	jns    0x40d846
  40d89d:	call   0x4881a01b
  40d8a2:	fcom   DWORD PTR [ebx]
  40d8a4:	sbb    eax,0x5823ce5f
  40d8a9:	sub    al,bh
  40d8ab:	rcl    BYTE PTR [edx+0x3c],cl
  40d8ae:	cmp    ch,BYTE PTR [esi]
  40d8b0:	ret    0x9ceb
  40d8b3:	(bad)  
  40d8b4:	fstp   DWORD PTR [edi+ecx*8+0x50]
  40d8b8:	jnp    0x40d885
  40d8ba:	or     eax,0xf8b48555
  40d8bf:	add    DWORD PTR [edi-0x27d09b5d],ebx
  40d8c5:	xor    al,0x34
  40d8c7:	sbb    DWORD PTR [edx],esp
  40d8c9:	adc    BYTE PTR [esi+edx*8],0xdd
  40d8cd:	xchg   esi,eax
  40d8ce:	scas   eax,DWORD PTR es:[edi]
  40d8cf:	scas   al,BYTE PTR es:[edi]
  40d8d0:	jp     0x40d946
  40d8d2:	mov    eax,0x45e015
  40d8d7:	(bad)  
  40d8d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8d9:	inc    ebx
  40d8da:	or     BYTE PTR [bx+di+0xf5d],0xa6
  40d8e0:	push   es
  40d8e1:	push   es
  40d8e2:	mov    fs:0x870d8c6,eax
  40d8e8:	adc    eax,DWORD PTR [esi+0x14d2ffb2]
  40d8ee:	fwait
  40d8ef:	dec    edx
  40d8f0:	add    al,0xf4
  40d8f2:	pop    edx
  40d8f3:	push   esi
  40d8f4:	sar    DWORD PTR [esi-0x2d],0xab
  40d8f8:	jo     0x40d938
  40d8fa:	xor    al,0x38
  40d8fc:	cld    
  40d8fd:	xchg   DWORD PTR [esi+edx*2+0x40],eax
  40d901:	sbb    edx,DWORD PTR [ebx+0x25]
  40d904:	cmp    eax,0x6a18965b
  40d909:	xchg   BYTE PTR [edi-0x30],ah
  40d90c:	push   ebx
  40d90d:	inc    ecx
  40d90e:	jecxz  0x40d8fc
  40d910:	fistp  DWORD PTR [esi]
  40d912:	adc    DWORD PTR [edx-0x1947271f],ecx
  40d918:	mov    ch,0xf3
  40d91a:	dec    esp
  40d91b:	dec    eax
  40d91c:	pop    ds
  40d91d:	dec    ebp
  40d91e:	mov    DWORD PTR [esi+ebx*8],ebp
  40d921:	test   DWORD PTR [esi+edi*1+0x6915be50],eax
  40d928:	pop    edi
  40d929:	repnz (bad) 
  40d92b:	mov    edx,0xe4ac7a70
  40d930:	mov    esi,0x168b7e40
  40d935:	pop    esp
  40d936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d937:	arpl   WORD PTR ss:[eax-0x9],bp
  40d93b:	mov    esi,0x23cf235b
  40d940:	mov    es,WORD PTR [eax]
  40d942:	fild   DWORD PTR [ebx-0x15af44bc]
  40d948:	ds aam 0x61
  40d94b:	pop    ss
  40d94c:	and    esi,DWORD PTR [ebx+0x64f34d38]
  40d952:	sub    al,0x6f
  40d954:	imul   ebx,DWORD PTR [ebx-0x34b4f0b2],0x5ba3eb28
  40d95e:	cli    
  40d95f:	outs   dx,DWORD PTR ds:[esi]
  40d960:	fild   DWORD PTR [ebp+0x6d]
  40d963:	xor    edi,DWORD PTR [ecx-0x1ccbffd4]
  40d969:	push   ebx
  40d96a:	dec    edi
  40d96b:	leave  
  40d96c:	cwde   
  40d96d:	xchg   edx,eax
  40d96e:	pop    esp
  40d96f:	nop
  40d970:	sbb    edx,DWORD PTR [ecx+0x74db5f00]
  40d976:	pop    ebx
  40d977:	xchg   esi,eax
  40d978:	mov    ebx,0xb4173f5f
  40d97d:	inc    ecx
  40d97e:	imul   eax,DWORD PTR [edx+ebp*8+0xc],0x28
  40d983:	aad    0x16
  40d985:	jns    0x40d986
  40d987:	(bad)  
  40d988:	mov    eax,ds:0xb7bd5d36
  40d98d:	push   edi
  40d98e:	ins    BYTE PTR es:[edi],dx
  40d98f:	sahf   
  40d990:	pop    ecx
  40d991:	adc    BYTE PTR [esi-0x6d],0xcc
  40d995:	gs jp  0x40d94a
  40d998:	jbe    0x40d9f6
  40d99a:	inc    esi
  40d99b:	enter  0x6038,0x85
  40d99f:	xor    BYTE PTR [eax],0x62
  40d9a2:	mov    bl,0x97
  40d9a4:	dec    eax
  40d9a5:	stc    
  40d9a6:	test   DWORD PTR [eax+0x96d1f10],edx
  40d9ac:	loopne 0x40d970
  40d9ae:	mov    ecx,0xf2161134
  40d9b3:	jle    0x40d9c5
  40d9b5:	arpl   WORD PTR [edx-0x5d],sp
  40d9b8:	or     DWORD PTR [edx],esi
  40d9ba:	pushf  
  40d9bb:	sbb    al,cl
  40d9bd:	rol    ch,1
  40d9bf:	clc    
  40d9c0:	mov    dh,0x53
  40d9c2:	inc    edx
  40d9c3:	push   esi
  40d9c4:	push   es
  40d9c5:	jle    0x40d96e
  40d9c7:	in     al,dx
  40d9c8:	bnd ret 
  40d9ca:	sbb    al,0xe9
  40d9cc:	sub    eax,0xb27f1f4f
  40d9d1:	aad    0xda
  40d9d3:	loop   0x40d9d5
  40d9d5:	lds    ebp,FWORD PTR [edi]
  40d9d7:	jp     0x40d9ef
  40d9d9:	repz dec edx
  40d9db:	pop    edx
  40d9dc:	mov    BYTE PTR [ecx-0x6346fdee],dl
  40d9e2:	cwde   
  40d9e3:	call   DWORD PTR [ecx-0x30]
  40d9e6:	leave  
  40d9e7:	(bad)  
  40d9e8:	jl     0x40da23
  40d9ea:	pop    ebp
  40d9eb:	mov    bl,BYTE PTR [ecx]
  40d9ed:	mov    ebp,0xd50460b7
  40d9f2:	(bad)  
  40d9f3:	mov    bl,0x66
  40d9f5:	loope  0x40d984
  40d9f7:	sbb    al,0x5a
  40d9f9:	jne    0x40da74
  40d9fb:	mov    edx,DWORD PTR [ecx-0x79]
  40d9fe:	mov    ds:0x9863efa0,al
  40da03:	repnz in eax,dx
  40da05:	aad    0x15
  40da07:	popa   
  40da08:	repnz xchg esp,eax
  40da0a:	ret    0xb6e4
  40da0d:	and    esi,DWORD PTR [edi+0x38]
  40da10:	fld    QWORD PTR [ebx+0x16]
  40da13:	pop    esi
  40da15:	imul   esp,esi,0xffffffd2
  40da18:	repz pop ecx
  40da1a:	into   
  40da1b:	add    DWORD PTR [ebp+0xb404d13],ebp
  40da21:	sbb    DWORD PTR [esi],0xffffffa1
  40da24:	sbb    ch,BYTE PTR [ebx+0x2719d216]
  40da2a:	jg     0x40da58
  40da2c:	gs ret 0x7f55
  40da30:	sti    
  40da31:	mov    cl,0x5
  40da33:	sub    ecx,ebp
  40da35:	ja     0x40da05
  40da37:	cmp    eax,0x6dca65c8
  40da3c:	push   ebx
  40da3d:	fild   QWORD PTR [ecx]
  40da3f:	jb     0x40da93
  40da41:	ins    DWORD PTR es:[edi],dx
  40da42:	repnz cmovge ebx,DWORD PTR [ebx+eax*1+0x7d]
  40da48:	inc    edx
  40da49:	add    edx,DWORD PTR [ebp+ecx*2+0x2f684ae1]
  40da50:	ds mov cl,0xf1
  40da53:	mov    cs,WORD PTR [ecx+0x39089aab]
  40da59:	cs stos DWORD PTR es:[edi],eax
  40da5b:	bound  esi,QWORD PTR ds:0xdf9c5d8f
  40da61:	adc    DWORD PTR [edi],edx
  40da63:	in     al,0xd5
  40da65:	mov    edi,0xba97623
  40da6a:	push   esi
  40da6b:	jl     0x40da8e
  40da6d:	inc    eax
  40da6e:	adc    al,0x79
  40da70:	outs   dx,BYTE PTR ds:[esi]
  40da71:	enter  0x3562,0x5d
  40da75:	or     BYTE PTR [esi+0x1c],cl
  40da78:	cld    
  40da79:	mov    dh,0x2
  40da7b:	test   al,0x3
  40da7d:	setbe  ah
  40da80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da81:	mov    eax,ds:0x27d64969
  40da86:	adc    al,0x3
  40da88:	push   ds
  40da89:	push   ss
  40da8a:	mov    ch,al
  40da8c:	jne    0x40da2b
  40da8e:	mov    al,bh
  40da90:	xchg   esp,eax
  40da91:	xchg   edi,eax
  40da92:	outs   dx,BYTE PTR ds:[esi]
  40da93:	lahf   
  40da94:	jnp    0x40da9e
  40da96:	sbb    BYTE PTR [ecx+0x48],0x8d
  40da9a:	jne    0x40dae7
  40da9c:	aad    0xd7
  40da9e:	ret    0x7ad3
  40daa1:	js     0x40dae6
  40daa3:	mov    cl,BYTE PTR [ebx+eax*8-0x643ad8c5]
  40daaa:	mov    BYTE PTR [ecx+0x7e],dl
  40daad:	add    DWORD PTR [ecx-0x6e],edx
  40dab0:	cmp    BYTE PTR [edi-0x1fda804d],0x6b
  40dab7:	xor    al,0xe4
  40dab9:	enter  0x6dea,0xc5
  40dabd:	sti    
  40dabe:	inc    ebp
  40dabf:	loop   0x40da5b
  40dac1:	xchg   edi,eax
  40dac2:	addr16 inc eax
  40dac4:	mov    ah,0x17
  40dac6:	test   eax,0xffe030d1
  40dacb:	(bad)  
  40dacc:	jae    0x40dae0
  40dace:	push   ebx
  40dacf:	hlt    
  40dad0:	cmp    DWORD PTR [edx],0x18
  40dad3:	repnz repnz cld 
  40dad6:	inc    edx
  40dad7:	out    dx,al
  40dad8:	imul   edx,eax,0x37
  40dadb:	dec    esi
  40dadc:	pop    ss
  40dadd:	mov    esp,0x2ca73df8
  40dae2:	pop    esp
  40dae3:	xchg   edi,eax
  40dae4:	dec    esp
  40dae5:	ret    
  40dae6:	(bad)  
  40dae7:	push   ss
  40dae8:	or     al,0xbd
  40daea:	sub    BYTE PTR [ecx+0x15072855],cl
  40daf0:	cli    
  40daf1:	ss hlt 
  40daf3:	mov    bl,0xe1
  40daf5:	cmp    al,0xcd
  40daf7:	je     0x40da87
  40daf9:	sub    DWORD PTR [ebx+0x66],ecx
  40dafc:	leave  
  40dafd:	mov    ch,0x7b
  40daff:	or     BYTE PTR [ebp-0x33],dh
  40db02:	out    0x51,al
  40db04:	add    BYTE PTR [ebp-0x4b],0x78
  40db08:	or     edi,DWORD PTR [ebx+0x20]
  40db0b:	add    al,0xda
  40db0d:	ja     0x40db02
  40db0f:	mov    DWORD PTR [ecx+0x7e],ebp
  40db12:	jge    0x40dad8
  40db14:	neg    BYTE PTR [eax+0x37]
  40db17:	xchg   esp,eax
  40db18:	addr16 pusha 
  40db1a:	xor    bh,BYTE PTR [edi-0x44666b82]
  40db20:	ins    DWORD PTR es:[edi],dx
  40db21:	cmp    eax,0x5725c007
  40db26:	and    bl,BYTE PTR [esi-0x66]
  40db29:	fldenv [eax]
  40db2b:	cmp    eax,0x85ab458f
  40db30:	iret   
  40db31:	repz jno 0x40db43
  40db34:	fisttp QWORD PTR [eax+eax*1-0x3eafe6e5]
  40db3b:	push   ds
  40db3c:	xor    DWORD PTR [ebp+0x3d],0xa0a7c9ad
  40db43:	or     edx,DWORD PTR [edx]
  40db45:	jmp    0xf438:0x5b5d63d4
  40db4c:	push   esp
  40db4d:	cdq    
  40db4e:	lock loopne 0x40db29
  40db51:	push   eax
  40db52:	shl    ch,cl
  40db54:	int3   
  40db55:	iret   
  40db56:	or     dl,BYTE PTR [edx-0x3ee6318e]
  40db5c:	lods   al,BYTE PTR ds:[esi]
  40db5d:	fcmovnbe st,st(6)
  40db5f:	loope  0x40dbcc
  40db61:	jecxz  0x40db47
  40db63:	sbb    al,0xdc
  40db65:	push   ds
  40db66:	or     esp,DWORD PTR ds:[esi]
  40db69:	push   es
  40db6a:	sub    eax,0x33a3d75b
  40db6f:	rol    BYTE PTR ds:[ebx+0x5fa914d7],1
  40db76:	not    dh
  40db78:	push   ebx
  40db79:	mov    ebx,0xed020b13
  40db7e:	pop    edx
  40db7f:	lods   eax,DWORD PTR ds:[esi]
  40db80:	rol    BYTE PTR [edi+0x1c7e85a8],cl
  40db86:	pop    ss
  40db87:	repnz pop ss
  40db89:	outs   dx,BYTE PTR ds:[esi]
  40db8a:	out    dx,al
  40db8b:	jp     0x40dc00
  40db8d:	in     eax,0x68
  40db8f:	sbb    ecx,DWORD PTR [eax-0x16]
  40db92:	adc    DWORD PTR [ebp+0x1b9dc794],0xfc2ddbeb
  40db9c:	jmp    0xabcc0bf9
  40dba1:	fwait
  40dba2:	stos   DWORD PTR es:[edi],eax
  40dba3:	leave  
  40dba4:	imul   DWORD PTR [edi+0x4c]
  40dba7:	mov    eax,ds:0x2d7d91c4
  40dbac:	push   ss
  40dbad:	sbb    DWORD PTR [ecx+0xce4aaf6],esp
  40dbb3:	inc    edx
  40dbb4:	push   es
  40dbb5:	mov    cl,0x35
  40dbb7:	loopne 0x40db9e
  40dbb9:	mov    al,dl
  40dbbb:	or     eax,DWORD PTR [ecx]
  40dbbd:	shl    dh,cl
  40dbbf:	popf   
  40dbc0:	aas    
  40dbc1:	jl     0x40dc3c
  40dbc3:	dec    edi
  40dbc4:	sub    ecx,DWORD PTR [esi+0x22]
  40dbc7:	js     0x40db50
  40dbc9:	aaa    
  40dbca:	xchg   ecx,eax
  40dbcb:	dec    ebx
  40dbcc:	xchg   ecx,eax
  40dbcd:	push   edx
  40dbce:	mov    eax,ds:0xc8fe4659
  40dbd3:	cwde   
  40dbd4:	nop
  40dbd5:	or     eax,0xecf7037
  40dbda:	(bad)  
  40dbdb:	sahf   
  40dbdc:	and    DWORD PTR [ebp-0x3e],edi
  40dbdf:	fldcw  WORD PTR [eax-0x5bc478ae]
  40dbe5:	scas   eax,DWORD PTR es:[edi]
  40dbe6:	or     DWORD PTR [ecx-0x4e],esp
  40dbe9:	out    0x69,al
  40dbeb:	cmp    DWORD PTR [esi+0x20],edx
  40dbee:	or     al,0x45
  40dbf0:	xchg   esp,eax
  40dbf1:	cmp    eax,0xf3c6de95
  40dbf6:	inc    edi
  40dbf7:	ror    BYTE PTR [ecx],cl
  40dbf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbfa:	inc    ebx
  40dbfb:	jae    0x40dc41
  40dbfd:	inc    esi
  40dbfe:	mov    bl,0xd7
  40dc00:	lock loopne 0x40dba2
  40dc03:	push   es
  40dc04:	call   0xa8788d0e
  40dc09:	xchg   esp,eax
  40dc0a:	push   ebp
  40dc0b:	iret   
  40dc0c:	in     al,0x3d
  40dc0e:	or     eax,0x59b00ba5
  40dc13:	inc    esp
  40dc14:	cmp    al,BYTE PTR [edi+0x54369ca9]
  40dc1a:	xor    DWORD PTR ds:0x187a3040,esp
  40dc20:	xor    BYTE PTR [eax+0x7a99a59c],dl
  40dc26:	loop   0x40dbba
  40dc28:	hlt    
  40dc29:	adc    DWORD PTR [ebp+0x335975f1],edx
  40dc2f:	movhps QWORD PTR [edx-0x3d],xmm4
  40dc33:	xor    DWORD PTR [ecx+0x5c],ebx
  40dc36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc37:	cmp    eax,0xb0b6e6cf
  40dc3c:	leave  
  40dc3d:	jg     0x40dbf2
  40dc3f:	pop    ss
  40dc40:	xor    al,0x2
  40dc42:	cld    
  40dc43:	xlat   BYTE PTR ds:[ebx]
  40dc44:	imul   eax,DWORD PTR [ecx+eax*2-0x37],0x2bd42272
  40dc4c:	xor    al,0x9e
  40dc4e:	jl     0x40dc99
  40dc50:	jae    0x40dbe5
  40dc52:	or     ebx,DWORD PTR [eax+ebp*4-0x35b5d09b]
  40dc59:	jl     0x40dc87
  40dc5b:	mov    esp,0xd3de21e0
  40dc60:	push   edx
  40dc61:	stos   BYTE PTR es:[edi],al
  40dc62:	and    ebp,DWORD PTR [edx+0xa]
  40dc65:	(bad)  
  40dc67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc68:	inc    eax
  40dc69:	retf   0x4ea
  40dc6c:	or     BYTE PTR [edi],ah
  40dc6e:	icebp  
  40dc6f:	inc    ebx
  40dc70:	dec    BYTE PTR [ebx+0x4d7b02de]
  40dc76:	ror    dl,1
  40dc78:	add    DWORD PTR gs:[edi],edi
  40dc7b:	inc    ebp
  40dc7c:	mov    ds:0x869b8a52,eax
  40dc81:	lea    esp,[eax+0x59]
  40dc84:	dec    edx
  40dc85:	push   ss
  40dc86:	imul   ebp,DWORD PTR [edx+0x3334ce93],0xcc3a2779
  40dc90:	cmc    
  40dc91:	dec    ebx
  40dc92:	push   ss
  40dc93:	loope  0x40dc5c
  40dc95:	dec    edx
  40dc96:	dec    esi
  40dc97:	sbb    DWORD PTR [eax],ebx
  40dc99:	mov    ch,BYTE PTR [edi]
  40dc9b:	in     eax,0x8b
  40dc9d:	ins    BYTE PTR es:[edi],dx
  40dc9e:	xor    BYTE PTR [eax],cl
  40dca0:	bound  ebp,QWORD PTR [ebx+0xf9e851c]
  40dca6:	mov    ch,0x99
  40dca8:	fld    QWORD PTR ds:0x92bad919
  40dcae:	arpl   sp,ax
  40dcb0:	test   eax,0xb32e743f
  40dcb5:	push   eax
  40dcb6:	adc    al,0x79
  40dcb8:	out    dx,al
  40dcb9:	cs jp  0x40dc75
  40dcbc:	fxch   st(5)
  40dcbe:	iret   
  40dcbf:	adc    al,0x22
  40dcc1:	and    ah,BYTE PTR [ecx-0x3d495574]
  40dcc7:	xchg   esp,eax
  40dcc8:	pop    eax
  40dcc9:	xchg   ebx,eax
  40dcca:	xchg   BYTE PTR [eax+0x30ddbab6],bh
  40dcd0:	jae    0x40dcc5
  40dcd2:	fwait
  40dcd3:	pop    esp
  40dcd4:	jmp    0xdb0e:0x20ad001b
  40dcdb:	or     ebx,DWORD PTR [ecx]
  40dcdd:	shl    DWORD PTR ds:0xda916adb,1
  40dce3:	xor    DWORD PTR [esi],edx
  40dce5:	adc    eax,DWORD PTR [ecx+0x7a969a73]
  40dceb:	mov    cl,bh
  40dced:	iret   
  40dcee:	js     0x40dce1
  40dcf0:	pop    edi
  40dcf1:	(bad)  
  40dcf2:	stos   DWORD PTR es:[edi],eax
  40dcf3:	mov    esp,0x24dddf09
  40dcf8:	shl    DWORD PTR [edx*4+0x25dc5473],1
  40dcff:	mov    edi,0x2259020d
  40dd04:	test   eax,ebx
  40dd06:	(bad)  
  40dd07:	fs sahf 
  40dd09:	jno    0x40dd74
  40dd0b:	mov    ds:0x8a07bd5f,eax
  40dd10:	cmp    ch,dh
  40dd12:	test   eax,0xc31954fd
  40dd17:	sub    esi,DWORD PTR [esi-0x6a]
  40dd1a:	std    
  40dd1b:	iret   
  40dd1c:	xchg   BYTE PTR [edi+0x26],ah
  40dd1f:	into   
  40dd20:	push   eax
  40dd21:	pop    esp
  40dd22:	(bad)  
  40dd23:	mov    ds:0xe1847abf,al
  40dd28:	pop    ecx
  40dd29:	sub    BYTE PTR [edx+0x774f6d61],dl
  40dd2f:	popf   
  40dd30:	retf   
  40dd31:	in     al,dx
  40dd32:	pop    ebx
  40dd33:	pop    esp
  40dd34:	shl    DWORD PTR [edi-0x19],1
  40dd37:	hlt    
  40dd38:	test   BYTE PTR [esi+0x7b],dl
  40dd3b:	out    dx,eax
  40dd3c:	add    al,BYTE PTR [eax-0x2836606b]
  40dd42:	xor    esi,DWORD PTR [edx+0x6e8986af]
  40dd48:	xchg   ebx,eax
  40dd49:	clc    
  40dd4a:	outs   dx,DWORD PTR ds:[esi]
  40dd4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd4c:	je     0x40dd44
  40dd4e:	je     0x40dd80
  40dd50:	dec    eax
  40dd51:	lea    ecx,[edx-0x2]
  40dd54:	aad    0x58
  40dd56:	sub    ah,ah
  40dd58:	dec    edx
  40dd59:	in     eax,0xd6
  40dd5b:	xchg   ecx,eax
  40dd5c:	test   eax,0x8935eb52
  40dd61:	shr    BYTE PTR [esi],0xf7
  40dd64:	cmp    BYTE PTR [edx-0x59],0x74
  40dd68:	dec    ecx
  40dd69:	or     al,0x3
  40dd6b:	pusha  
  40dd6c:	mov    ebx,0xbd3f8d5
  40dd71:	mov    bh,0x3a
  40dd73:	(bad)  
  40dd74:	sub    DWORD PTR [esi+0x28d31f34],esp
  40dd7a:	cmp    DWORD PTR [ebx+0x2f1c873d],0x16ed0c72
  40dd84:	mov    dh,0x4
  40dd86:	push   ebp
  40dd87:	cmp    eax,0xfb336672
  40dd8c:	add    eax,0x36d7fc9f
  40dd91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd92:	push   edi
  40dd93:	mov    bh,BYTE PTR [ebp+edi*1-0x3bf9232e]
  40dd9a:	cmp    esi,DWORD PTR [ebx]
  40dd9c:	scas   eax,DWORD PTR es:[edi]
  40dd9d:	int3   
  40dd9e:	adc    BYTE PTR [esi+0x1c],ch
  40dda1:	pushf  
  40dda2:	mov    WORD PTR [edx-0x6109e17b],fs
  40dda8:	iret   
  40dda9:	pop    esi
  40ddaa:	fdivr  QWORD PTR [ecx+ecx*4]
  40ddad:	add    ecx,DWORD PTR [edi-0x7b0fc66]
  40ddb3:	stos   BYTE PTR es:[edi],al
  40ddb4:	fist   WORD PTR [esi]
  40ddb6:	loope  0x40dd9f
  40ddb8:	inc    DWORD PTR [ebx-0x1d0d45c]
  40ddbe:	pop    edi
  40ddbf:	test   al,0x4b
  40ddc1:	xor    eax,0x3514da23
  40ddc6:	call   0x3ac:0x1fe25371
  40ddcd:	xor    al,BYTE PTR [edi-0x38a787a5]
  40ddd3:	sub    ebx,DWORD PTR [ebx-0x5eb8992a]
  40ddd9:	or     DWORD PTR [ebx-0x71],ecx
  40dddc:	rcr    esi,1
  40ddde:	das    
  40dddf:	ficomp DWORD PTR [ebx-0x52]
  40dde2:	loop   0x40ddac
  40dde4:	inc    esp
  40dde5:	cmp    DWORD PTR [edi+0x109b84b],0x211b24b5
  40ddef:	xchg   DWORD PTR ds:0x1eb1afa6,eax
  40ddf5:	push   cs
  40ddf6:	and    eax,0xf8d73ce
  40ddfb:	dec    esp
  40ddfc:	out    dx,eax
  40ddfd:	mov    BYTE PTR [edx],cl
  40ddff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de00:	jmp    0x40ddcb
  40de02:	sbb    eax,edx
  40de04:	out    dx,al
  40de05:	xor    edi,DWORD PTR [esp+ebp*4-0x4922a726]
  40de0c:	xlat   BYTE PTR ds:[ebx]
  40de0d:	mov    dh,0x1a
  40de0f:	retf   0xd617
  40de12:	mov    edi,0x7daa2daf
  40de17:	shl    DWORD PTR [edx],cl
  40de19:	stos   BYTE PTR es:[edi],al
  40de1a:	icebp  
  40de1b:	call   0x648ebb0d
  40de20:	jns    0x40de08
  40de22:	fwait
  40de23:	jb     0x40de2a
  40de25:	add    BYTE PTR [ebp+0x229107cc],dh
  40de2b:	inc    edi
  40de2c:	or     BYTE PTR [ebx],cl
  40de2e:	popf   
  40de2f:	aas    
  40de30:	mov    es,WORD PTR ds:0x5a56e049
  40de36:	bound  edx,QWORD PTR [ebp-0x3e4ed0ed]
  40de3c:	pop    ss
  40de3d:	mov    al,0x4f
  40de3f:	outs   dx,BYTE PTR ds:[esi]
  40de40:	sbb    ah,BYTE PTR [edx-0x41]
  40de43:	push   esi
  40de44:	add    dl,0x4d
  40de47:	mov    cl,0x8e
  40de49:	cwde   
  40de4a:	add    esp,eax
  40de4c:	inc    ebp
  40de4d:	xor    DWORD PTR [edi+0xb160cc5],edx
  40de53:	jo     0x40de89
  40de55:	in     al,0xb7
  40de57:	mov    ebx,0xc5f45b2c
  40de5c:	xchg   esp,eax
  40de5d:	cmp    al,0xb3
  40de5f:	ins    BYTE PTR es:[edi],dx
  40de60:	loopne 0x40de0a
  40de62:	inc    esi
  40de63:	add    al,0xe2
  40de65:	xchg   edi,eax
  40de66:	push   ebp
  40de67:	aam    0xd4
  40de69:	scas   al,BYTE PTR es:[edi]
  40de6a:	push   es
  40de6b:	xchg   edx,eax
  40de6c:	(bad)  [ebx-0x6d55823e]
  40de72:	inc    BYTE PTR [edx+ecx*4+0xdcc004]
  40de79:	mov    esi,0xc992a74d
  40de7e:	sbb    al,0xf6
  40de80:	lahf   
  40de81:	cs sub al,0xbe
  40de84:	pop    esp
  40de85:	int    0xb5
  40de87:	int    0xbe
  40de89:	xor    cl,bl
  40de8b:	push   ebx
  40de8c:	push   DWORD PTR [edi-0x6a]
  40de8f:	mov    WORD PTR [edx+0x6113876b],gs
  40de95:	xor    al,0x25
  40de97:	in     eax,0x1e
  40de99:	int3   
  40de9a:	jle    0x40de7d
  40de9c:	sub    BYTE PTR [ecx-0x1e],ah
  40de9f:	mov    eax,DWORD PTR [edx+0x153bf2d4]
  40dea5:	pushf  
  40dea6:	ins    DWORD PTR es:[edi],dx
  40dea7:	inc    ebp
  40dea8:	mul    esi
  40deaa:	push   ds
  40deab:	cmp    esi,DWORD PTR [edx+edx*1]
  40deae:	fwait
  40deaf:	dec    ebx
  40deb0:	jnp    0x40de6a
  40deb2:	sub    esi,DWORD PTR ds:0xf21787c0
  40deb8:	not    DWORD PTR ds:0x9958e975
  40debf:	and    esp,DWORD PTR [edi+0x79dceb9d]
  40dec5:	in     eax,0xf7
  40dec7:	pushf  
  40dec8:	cld    
  40dec9:	jnp    0x40de95
  40decb:	pop    edx
  40decc:	or     DWORD PTR [ebx],esp
  40dece:	mov    ch,ah
  40ded0:	fiadd  DWORD PTR [edi-0x7da2c508]
  40ded6:	push   edx
  40ded7:	dec    esp
  40ded8:	mov    eax,ds:0xc4b178e1
  40dedd:	mov    eax,0xc50f648c
  40dee2:	xchg   al,ah
  40dee4:	(bad)  
  40dee5:	jmp    0xe34a:0x54d4efa1
  40deec:	daa    
  40deed:	sbb    al,0x15
  40deef:	pop    edi
  40def0:	and    edx,edx
  40def2:	imul   DWORD PTR ds:0x31355bc8
  40def8:	icebp  
  40def9:	aaa    
  40defa:	sbb    eax,0x37d0ca1
  40deff:	stos   DWORD PTR es:[edi],eax
  40df00:	xlat   BYTE PTR ds:[ebx]
  40df01:	pusha  
  40df02:	rcl    ch,1
  40df04:	mov    ds:0x2b386922,eax
  40df09:	int3   
  40df0a:	push   edx
  40df0b:	ror    DWORD PTR [ebx],cl
  40df0d:	pop    ebx
  40df0e:	pop    ebp
  40df0f:	cwde   
  40df10:	push   eax
  40df11:	in     al,0xb8
  40df13:	sahf   
  40df14:	loope  0x40dede
  40df16:	dec    edx
  40df17:	int    0xc7
  40df19:	iret   
  40df1a:	jmp    0x9bf:0x93548c02
  40df21:	jae    0x40df1b
  40df23:	mov    al,0xa1
  40df25:	leave  
  40df26:	push   edx
  40df27:	push   0xe
  40df29:	dec    ecx
  40df2a:	call   0x73c3:0xd4847e2e
  40df31:	retf   
  40df32:	sub    eax,0x5816879a
  40df37:	mov    esp,0x9903670b
  40df3c:	jge    0x40df90
  40df3e:	aam    0x84
  40df40:	pop    esp
  40df41:	mov    bh,0x2a
  40df43:	shl    ch,0x46
  40df46:	call   0x2034:0x32fddfef
  40df4d:	out    0xa,eax
  40df4f:	test   BYTE PTR [ecx+0x7bba6d30],cl
  40df55:	push   ebp
  40df56:	xchg   esp,eax
  40df57:	cmp    ecx,edi
  40df59:	mov    al,0xdd
  40df5b:	sub    ebp,DWORD PTR [ecx-0x4f]
  40df5e:	lahf   
  40df5f:	mov    dl,0x28
  40df61:	mov    BYTE PTR [ebx+0x36],al
  40df64:	jne    0x40defa
  40df66:	xchg   ebx,eax
  40df67:	xor    eax,0x6e4d0395
  40df6c:	xadd   BYTE PTR [esi+0x65942b3a],al
  40df73:	ficom  WORD PTR [esi]
  40df75:	loopne 0x40df11
  40df77:	cmc    
  40df78:	push   0xffffffb3
  40df7a:	test   al,0x73
  40df7d:	inc    eax
  40df7e:	gs (bad) 
  40df80:	push   DWORD PTR [ebx]
  40df82:	outs   dx,BYTE PTR ds:[esi]
  40df83:	jae    0x40df40
  40df85:	mov    ecx,0x153c4811
  40df8a:	fld    DWORD PTR [eax+0x30]
  40df8d:	sbb    DWORD PTR [bx-0x19],0xffffff92
  40df92:	push   0x796c2513
  40df97:	lods   eax,DWORD PTR ds:[esi]
  40df98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df99:	jl     0x40e013
  40df9b:	fisubr DWORD PTR [eax-0x58beeaa5]
  40dfa1:	xor    al,0xad
  40dfa3:	mov    dl,0x7
  40dfa5:	xor    BYTE PTR [edi+0xc],dl
  40dfa8:	cmp    bl,BYTE PTR [esi-0x51]
  40dfab:	inc    esi
  40dfac:	sbb    edx,DWORD PTR [edx+ebp*2-0x35]
  40dfb0:	int    0x15
  40dfb2:	sub    cl,bh
  40dfb4:	push   esi
  40dfb5:	lods   al,BYTE PTR ds:[esi]
  40dfb6:	jle    0x40df3c
  40dfb8:	rsm    
  40dfba:	jmp    0xc0696ece
  40dfbf:	inc    ecx
  40dfc0:	inc    esp
  40dfc1:	je     0x40df64
  40dfc3:	pop    esi
  40dfc4:	mov    esp,0x79ed2551
  40dfc9:	push   0x50fd9f9e
  40dfce:	shl    BYTE PTR [ecx],1
  40dfd0:	add    ah,0xf1
  40dfd3:	aad    0xde
  40dfd5:	(bad)  
  40dfd6:	sub    al,0x46
  40dfd8:	adc    cl,BYTE PTR [ebp+0x199720af]
  40dfde:	fcmovnb st,st(7)
  40dfe0:	xor    eax,0x3a6440cb
  40dfe5:	xchg   edi,eax
  40dfe6:	out    0xbb,al
  40dfe8:	outs   dx,BYTE PTR ds:[esi]
  40dfe9:	ins    DWORD PTR es:[edi],dx
  40dfea:	jle    0x40df79
  40dfec:	push   cs
  40dfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfee:	gs dec ebp
  40dff0:	pop    ecx
  40dff1:	imul   edx,DWORD PTR [eax+0x6a],0x30
  40dff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dff6:	push   esi
  40dff7:	dec    edi
  40dff8:	fwait
  40dff9:	cmp    ecx,DWORD PTR [edi]
  40dffb:	push   esi
  40dffc:	or     DWORD PTR [edx],ebp
  40dffe:	dec    edi
  40dfff:	ret    0x9bf
  40e002:	iret   
  40e003:	jbe    0x40e00e
  40e005:	xchg   esp,eax
  40e006:	jb     0x40dfad
  40e008:	int3   
  40e009:	iret   
  40e00a:	push   0xffffffc4
  40e00c:	cmp    al,0x62
  40e00e:	xchg   esp,eax
  40e00f:	inc    eax
  40e010:	mov    esp,DWORD PTR [esi+0x7a67270d]
  40e016:	test   ah,al
  40e018:	pop    ds
  40e019:	out    0x2d,al
  40e01b:	xor    al,0x5e
  40e01d:	outs   dx,BYTE PTR ds:[esi]
  40e01e:	adc    eax,0x9cd0d9a8
  40e023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e024:	sbb    ch,BYTE PTR [ecx-0x60d72888]
  40e02a:	(bad)
  40e02f:	pusha  
  40e030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e031:	sub    DWORD PTR [edx],ebx
  40e033:	xor    DWORD PTR ds:[ecx+eiz*1-0x51342a0],0x85bbc7f5
  40e03f:	adc    dl,dh
  40e041:	repnz mov ?,WORD PTR [edi]
  40e044:	and    al,ah
  40e046:	mov    DWORD PTR [edi+0xe63d123],edx
  40e04c:	or     al,0x79
  40e04e:	xlat   BYTE PTR ds:[ebx]
  40e04f:	fidivr DWORD PTR [ecx-0x4c]
  40e052:	xchg   esi,eax
  40e053:	sbb    dh,BYTE PTR [esi]
  40e055:	inc    edi
  40e056:	lock mov BYTE PTR [ecx+0x17],bl
  40e05a:	sti    
  40e05b:	add    DWORD PTR [ebp-0x7a],esi
  40e05e:	outs   dx,DWORD PTR ds:[esi]
  40e05f:	xchg   esi,eax
  40e060:	pop    ds
  40e061:	and    dl,ah
  40e063:	cmp    DWORD PTR [ecx],ebp
  40e065:	xor    BYTE PTR [eax+0x71],cl
  40e068:	int    0x4e
  40e06a:	popa   
  40e06b:	mov    eax,0x38cbbc8f
  40e070:	pop    ecx
  40e071:	ret    0xa26e
  40e074:	scas   al,BYTE PTR es:[edi]
  40e075:	sub    al,0x61
  40e077:	push   edi
  40e078:	clc    
  40e079:	xlat   BYTE PTR ds:[ebx]
  40e07a:	div    esi
  40e07c:	je     0x40e008
  40e07e:	xor    eax,DWORD PTR [edx+0x78]
  40e081:	xor    al,0x7d
  40e083:	adc    eax,ebx
  40e085:	cdq    
  40e086:	leave  
  40e087:	jb     0x40e01f
  40e089:	xor    DWORD PTR [eax+0x37],esp
  40e08c:	xchg   BYTE PTR [ebx+eiz*8-0x32e7ea6f],bh
  40e093:	cwde   
  40e094:	cli    
  40e095:	sbb    BYTE PTR [ebx],cl
  40e097:	pop    esi
  40e098:	jle    0x40e07d
  40e09a:	(bad)  
  40e09b:	mov    ah,0x4d
  40e09d:	mov    edx,0xf233deb8
  40e0a2:	pop    esp
  40e0a3:	sbb    al,0xc3
  40e0a5:	mov    edx,0xb725cf34
  40e0aa:	and    BYTE PTR [ebx-0x2a],al
  40e0ad:	shl    BYTE PTR [eax-0x6b],cl
  40e0b0:	sub    DWORD PTR [esi-0x1f],eax
  40e0b3:	lahf   
  40e0b4:	test   al,0xd8
  40e0b6:	cmc    
  40e0b7:	arpl   bp,si
  40e0b9:	clc    
  40e0ba:	sbb    dl,BYTE PTR [edi+0x4541f4ca]
  40e0c0:	xchg   esi,eax
  40e0c1:	mov    esi,0x5b8f2095
  40e0c6:	ins    DWORD PTR es:[edi],dx
  40e0c7:	mov    eax,edx
  40e0c9:	sub    eax,0xd14f12a2
  40e0ce:	pop    esp
  40e0cf:	aaa    
  40e0d0:	fbld   TBYTE PTR [ebx-0x1e]
  40e0d3:	dec    edi
  40e0d4:	test   DWORD PTR [bp+di-0x25f0],0xd537897a
  40e0dd:	cld    
  40e0de:	mov    BYTE PTR [edi],al
  40e0e0:	xchg   ebx,eax
  40e0e1:	repnz (bad) [edi*4+0x6cc3cc0f]
  40e0e9:	mov    BYTE PTR [ebx+0x5e],ch
  40e0ec:	hlt    
  40e0ed:	cmp    BYTE PTR [edx+0x66],dl
  40e0f0:	mov    al,ds:0x3d79c1d7
  40e0f5:	adc    al,0x6b
  40e0f7:	add    eax,0x11315561
  40e0fc:	add    eax,0x4844c53
  40e101:	jecxz  0x40e17b
  40e103:	fwait
  40e104:	sar    DWORD PTR [ebx-0x16088f0f],0xba
  40e10b:	jle    0x40e0cc
  40e10d:	xor    ch,BYTE PTR [ecx]
  40e10f:	xor    edx,edx
  40e111:	stos   BYTE PTR es:[edi],al
  40e112:	cmp    eax,0x504deafc
  40e117:	mov    ch,0xef
  40e119:	inc    ebp
  40e11a:	fidiv  DWORD PTR [ebx+edx*2]
  40e11d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e11e:	mov    al,0xcd
  40e120:	push   edi
  40e121:	lock repnz sbb eax,0xc7e93d0b
  40e128:	leave  
  40e129:	adc    eax,0xb397e685
  40e12e:	xor    BYTE PTR [ebp+0x50],0x11
  40e132:	mov    esi,0x7cd7a6cf
  40e137:	pop    eax
  40e138:	gs mov ebp,cs
  40e13b:	pop    esp
  40e13c:	test   BYTE PTR [eax+0x7e85248d],ah
  40e142:	out    0x9b,al
  40e144:	jo     0x40e0d8
  40e146:	push   edx
  40e147:	xor    BYTE PTR [esi-0x26],bl
  40e14a:	sub    BYTE PTR [eax+eax*8+0x3b8b3a88],dl
  40e151:	lds    ecx,FWORD PTR [edi-0x1549a75c]
  40e157:	adc    BYTE PTR [edx-0x37604930],ch
  40e15d:	push   eax
  40e15e:	lods   eax,DWORD PTR ds:[esi]
  40e15f:	mov    esp,?
  40e161:	jmp    0x40e0ef
  40e163:	mov    esp,0x4b811257
  40e168:	out    0xb8,al
  40e16a:	mov    ecx,0xeaf5c6ea
  40e16f:	call   0xdfc5:0x2fa537ad
  40e176:	fwait
  40e177:	pop    edx
  40e178:	add    ebp,esp
  40e17a:	pop    eax
  40e17b:	or     al,0x8
  40e17d:	xchg   edi,eax
  40e17e:	rcr    cl,1
  40e180:	dec    ebp
  40e181:	(bad)  
  40e182:	mov    bl,0xf1
  40e184:	and    edi,ecx
  40e186:	fdecstp 
  40e188:	mov    ch,0xfb
  40e18a:	adc    DWORD PTR [esi],esi
  40e18c:	jl     0x40e194
  40e18e:	pusha  
  40e18f:	cdq    
  40e190:	pop    ds
  40e191:	dec    eax
  40e192:	cmp    edi,DWORD PTR [esp+ebp*8-0x2ab6b8dc]
  40e199:	and    esp,DWORD PTR [edi+0x4f]
  40e19c:	out    0x7e,eax
  40e19e:	outs   dx,DWORD PTR ds:[esi]
  40e19f:	into   
  40e1a0:	add    esi,DWORD PTR [ebp-0x52]
  40e1a3:	mov    eax,ds:0xd3abf5da
  40e1a8:	push   ds
  40e1a9:	fwait
  40e1aa:	or     ah,ah
  40e1ac:	sbb    dh,BYTE PTR [ebp-0x110fb958]
  40e1b2:	fnstenv [edi]
  40e1b4:	sub    ebx,DWORD PTR [edx+ebx*1-0x6f]
  40e1b8:	sub    eax,0x74b7775d
  40e1bd:	jp     0x40e225
  40e1bf:	pop    es
  40e1c0:	jne    0x40e18a
  40e1c2:	mov    bh,0xf0
  40e1c4:	add    esi,edx
  40e1c6:	mov    DWORD PTR [ebx+0x3aea5a80],ebx
  40e1cc:	sub    dl,BYTE PTR [eax-0x59]
  40e1cf:	mov    ebp,0x27ffe4f4
  40e1d4:	and    esp,ebx
  40e1d6:	sbb    eax,0x7ea23b5d
  40e1db:	pop    edi
  40e1dc:	shl    BYTE PTR [edx+ecx*1+0xe],cl
  40e1e0:	popf   
  40e1e1:	les    edi,FWORD PTR [ebp+0x4f1d1e72]
  40e1e7:	mov    ecx,0xd3162bda
  40e1ec:	mov    eax,ds:0x4668505a
  40e1f1:	inc    esp
  40e1f2:	scas   al,BYTE PTR es:[edi]
  40e1f3:	push   es
  40e1f4:	lock or eax,DWORD PTR [eax-0x298e820]
  40e1fb:	aas    
  40e1fc:	and    eax,0x2bec464b
  40e201:	xor    eax,0x399b737b
  40e206:	and    eax,0x803d05b9
  40e20b:	sbb    cl,BYTE PTR [ecx+0x7474ce93]
  40e211:	cld    
  40e212:	xor    ecx,DWORD PTR [ebp-0x5ee760bd]
  40e218:	xchg   DWORD PTR [ebx-0x945d76c],esi
  40e21e:	pop    ds
  40e21f:	push   eax
  40e220:	push   0xbecaa1ce
  40e225:	sub    bh,ch
  40e227:	ja     0x40e238
  40e229:	(bad)  
  40e22a:	dec    ecx
  40e22b:	sbb    BYTE PTR [ebx-0x7f],dh
  40e22e:	(bad)  [ebp+0x58]
  40e231:	sahf   
  40e232:	mov    ecx,0x34fdf581
  40e237:	sub    DWORD PTR [edx-0x4b],eax
  40e23a:	mov    esp,0x6b1d6e1e
  40e23f:	repnz xor DWORD PTR [edi-0x4d935198],esp
  40e246:	jns    0x40e25b
  40e248:	jbe    0x40e1fd
  40e24a:	js     0x40e226
  40e24c:	and    al,0x77
  40e24e:	(bad)  
  40e24f:	push   0xeae4d7c7
  40e254:	int    0xb4
  40e256:	xchg   edx,eax
  40e257:	adc    eax,0x2374ade8
  40e25c:	dec    edi
  40e25d:	cwde   
  40e25e:	push   ss
  40e25f:	(bad)  
  40e260:	xchg   edi,eax
  40e261:	push   ecx
  40e262:	je     0x40e284
  40e264:	clc    
  40e265:	sub    eax,0xdb335092
  40e26a:	mov    edx,esp
  40e26c:	dec    edx
  40e26d:	inc    ebx
  40e26e:	add    ebx,DWORD PTR [edx+ebx*1]
  40e271:	dec    ebx
  40e272:	xor    edx,edx
  40e274:	add    DWORD PTR [ebp-0x10],ebx
  40e277:	pop    ebx
  40e278:	mov    eax,DWORD PTR [ebp-0x10]
  40e27b:	pop    edi
  40e27c:	pop    esi
  40e27d:	pop    ebx
  40e27e:	leave  
  40e27f:	ret    0x10
  40e282:	push   ebp
  40e283:	mov    ebp,esp
  40e285:	sub    esp,0x7c
  40e288:	mov    ecx,DWORD PTR ds:0x42e008
  40e28e:	or     ecx,DWORD PTR ds:0x42f004
  40e294:	mov    DWORD PTR ds:0x42e008,ecx
  40e29a:	push   esi
  40e29b:	push   edi
  40e29c:	mov    eax,ds:0x4342d7
  40e2a1:	sbb    edi,ecx
  40e2a3:	mov    DWORD PTR [ebp-0x24],eax
  40e2a6:	and    DWORD PTR ds:0x42f00c,edx
  40e2ac:	mov    eax,ds:0x4343e3
  40e2b1:	adc    DWORD PTR ds:0x431014,edi
  40e2b7:	mov    DWORD PTR [ebp-0x34],eax
  40e2ba:	mov    edi,DWORD PTR ds:0x430018
  40e2c0:	and    DWORD PTR ds:0x42e004,edi
  40e2c6:	and    DWORD PTR [ebp-0x30],0x0
  40e2ca:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  40e2d1:	sbb    esi,0xb54
  40e2d7:	mov    DWORD PTR [ebp-0x28],0xf89c8580
  40e2de:	sbb    DWORD PTR ds:0x42e000,ecx
  40e2e4:	mov    eax,DWORD PTR [ebp-0x10]
  40e2e7:	mov    ecx,DWORD PTR [ebp-0x10]
  40e2ea:	neg    esi
  40e2ec:	sub    eax,ecx
  40e2ee:	xor    ecx,ecx
  40e2f0:	add    ecx,DWORD PTR ds:0x41d056
  40e2f6:	mov    esi,DWORD PTR ds:0x433018
  40e2fc:	sub    ecx,esi
  40e2fe:	add    ecx,DWORD PTR [ecx+esi*1]
  40e301:	mov    DWORD PTR [ebp-0x10],eax
  40e304:	xor    ecx,ecx
  40e306:	xor    DWORD PTR [ebp-0x10],0xf89cb581
  40e30d:	sub    edi,ecx
  40e30f:	mov    eax,DWORD PTR [ebp-0x18]
  40e312:	and    DWORD PTR ds:0x42e01c,0x0
  40e31c:	mov    esi,DWORD PTR ds:0x42e01c
  40e322:	inc    esi
  40e323:	mov    DWORD PTR ds:0x42e01c,esi
  40e329:	cmp    DWORD PTR ds:0x42e01c,0xe
  40e330:	ja     0x40e387
  40e336:	jmp    0x40e360
  40e33b:	push   DWORD PTR [ebp-0x10]
  40e33e:	push   DWORD PTR [ebp-0x1c]
  40e341:	push   0x636c
  40e346:	push   0x42e004
  40e34b:	push   0x225f
  40e350:	push   0x5da7
  40e355:	push   0x835e
  40e35a:	call   DWORD PTR ds:0x4348e3
  40e360:	cmp    DWORD PTR ds:0x42e01c,0xd
  40e367:	jne    0x40e37a
  40e36d:	mov    esi,DWORD PTR ds:0x42e01c
  40e373:	inc    esi
  40e374:	mov    DWORD PTR ds:0x42e01c,esi
  40e37a:	cmp    DWORD PTR ds:0x42e01c,0x1e
  40e381:	jb     0x40e31c
  40e387:	mov    ecx,DWORD PTR [ebp-0x18]
  40e38a:	and    DWORD PTR ds:0x431010,0x0
  40e394:	jmp    0x40e3a8
  40e399:	xor    edi,edi
  40e39b:	xor    edi,DWORD PTR ds:0x431010
  40e3a1:	inc    edi
  40e3a2:	mov    DWORD PTR ds:0x431010,edi
  40e3a8:	cmp    DWORD PTR ds:0x431010,0x16
  40e3af:	jae    0x40e3e6
  40e3b5:	cmp    DWORD PTR ds:0x431010,0x1b
  40e3bc:	jle    0x40e3e6
  40e3c2:	jmp    0x40e3e1
  40e3c7:	push   0x430014
  40e3cc:	push   0x208f
  40e3d1:	push   0x8122
  40e3d6:	push   0x265c
  40e3db:	call   DWORD PTR ds:0x4348b7
  40e3e1:	jmp    0x40e399
  40e3e6:	sub    eax,ecx
  40e3e8:	mov    DWORD PTR [ebp-0x18],eax
  40e3eb:	and    DWORD PTR ds:0x42f018,0x0
  40e3f5:	xor    ecx,ecx
  40e3f7:	xor    ecx,DWORD PTR ds:0x42f018
  40e3fd:	inc    ecx
  40e3fe:	mov    DWORD PTR ds:0x42f018,ecx
  40e404:	cmp    DWORD PTR ds:0x42f018,0x2a
  40e40b:	jbe    0x40e439
  40e411:	jmp    0x40e42c
  40e416:	push   0x432014
  40e41b:	push   DWORD PTR [ebp-0x14]
  40e41e:	push   0x7281
  40e423:	push   DWORD PTR [ebp-0x1c]
  40e426:	call   DWORD PTR ds:0x4348bb
  40e42c:	cmp    DWORD PTR ds:0x42f018,0x1a
  40e433:	jb     0x40e3f5
  40e439:	or     DWORD PTR [ebp-0x18],0xf89f0581
  40e440:	and    DWORD PTR ds:0x43200c,0x0
  40e44a:	mov    esi,DWORD PTR ds:0x43200c
  40e450:	inc    esi
  40e451:	mov    DWORD PTR ds:0x43200c,esi
  40e457:	cmp    DWORD PTR ds:0x43200c,0x8
  40e45e:	jg     0x40e49b
  40e464:	jmp    0x40e472
  40e469:	push   DWORD PTR [ebp-0x24]
  40e46c:	call   DWORD PTR ds:0x4348bf
  40e472:	cmp    DWORD PTR ds:0x43200c,0x7
  40e479:	jne    0x40e48e
  40e47f:	xor    esi,esi
  40e481:	or     esi,DWORD PTR ds:0x43200c
  40e487:	inc    esi
  40e488:	mov    DWORD PTR ds:0x43200c,esi
  40e48e:	cmp    DWORD PTR ds:0x43200c,0x1d
  40e495:	jb     0x40e44a
  40e49b:	mov    eax,DWORD PTR [ebp-0xc]
  40e49e:	mov    ecx,DWORD PTR [ebp-0xc]
  40e4a1:	sub    DWORD PTR ds:0x42e020,0x4ecf
  40e4ab:	sub    eax,ecx
  40e4ad:	sub    DWORD PTR ds:0x430004,edx
  40e4b3:	mov    DWORD PTR [ebp-0xc],eax
  40e4b6:	or     ecx,ecx
  40e4b8:	or     DWORD PTR [ebp-0xc],0xf89c85c1
  40e4bf:	sbb    eax,edi
  40e4c1:	mov    eax,DWORD PTR [ebp-0x1c]
  40e4c4:	and    DWORD PTR ds:0x431018,ebx
  40e4ca:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e4cd:	sub    eax,ecx
  40e4cf:	mov    DWORD PTR [ebp-0x1c],eax
  40e4d2:	or     DWORD PTR [ebp-0x1c],0xf89c85a1
  40e4d9:	mov    eax,DWORD PTR [ebp-0x20]
  40e4dc:	mov    ecx,DWORD PTR [ebp-0x20]
  40e4df:	sub    eax,ecx
  40e4e1:	mov    DWORD PTR [ebp-0x20],eax
  40e4e4:	mov    eax,DWORD PTR [ebp-0x2c]
  40e4e7:	mov    ecx,DWORD PTR [ebp-0x20]
  40e4ea:	mov    esi,0x751089d
  40e4ef:	xor    eax,esi
  40e4f1:	mov    edi,0x3272e4
  40e4f6:	add    eax,edi
  40e4f8:	or     eax,ecx
  40e4fa:	mov    DWORD PTR [ebp-0x20],eax
  40e4fd:	mov    eax,DWORD PTR [ebp-0x4]
  40e500:	mov    ecx,DWORD PTR [ebp-0x4]
  40e503:	sub    eax,ecx
  40e505:	mov    DWORD PTR [ebp-0x4],eax
  40e508:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  40e50f:	mov    eax,DWORD PTR [ebp-0xc]
  40e512:	xor    eax,esi
  40e514:	add    eax,edi
  40e516:	push   eax
  40e517:	mov    eax,DWORD PTR [ebp-0x10]
  40e51a:	xor    eax,esi
  40e51c:	add    eax,edi
  40e51e:	push   eax
  40e51f:	mov    eax,DWORD PTR [ebp-0x4]
  40e522:	xor    eax,esi
  40e524:	add    eax,edi
  40e526:	push   eax
  40e527:	lea    eax,[ebp-0x7c]
  40e52a:	push   eax
  40e52b:	push   DWORD PTR [ebp-0x2c]
  40e52e:	push   DWORD PTR [ebp-0x28]
  40e531:	call   0x41104a
  40e536:	test   eax,eax
  40e538:	je     0x40e566
  40e53e:	lea    eax,[ebp-0x7c]
  40e541:	push   eax
  40e542:	mov    eax,DWORD PTR [ebp-0x28]
  40e545:	xor    eax,esi
  40e547:	add    eax,edi
  40e549:	push   eax
  40e54a:	mov    eax,DWORD PTR [ebp-0x24]
  40e54d:	add    eax,0xaa
  40e552:	push   eax
  40e553:	mov    eax,DWORD PTR [ebp-0x24]
  40e556:	mov    eax,DWORD PTR [eax+0x198]
  40e55c:	push   DWORD PTR [eax]
  40e55e:	call   0x409457
  40e563:	mov    DWORD PTR [ebp-0x14],eax
  40e566:	lea    eax,[ebp+0x4]
  40e569:	mov    DWORD PTR [ebp-0x30],eax
  40e56c:	mov    eax,DWORD PTR [ebp-0x14]
  40e56f:	test   eax,eax
  40e571:	je     0x40e5d9
  40e577:	lea    eax,[ebp-0x8]
  40e57a:	mov    DWORD PTR [ebp-0x38],eax
  40e57d:	mov    eax,DWORD PTR [ebp-0x34]
  40e580:	mov    DWORD PTR [ebp-0x8],eax
  40e583:	mov    eax,DWORD PTR [ebp-0x8]
  40e586:	mov    ecx,DWORD PTR [ebp-0x14]
  40e589:	sub    eax,ecx
  40e58b:	mov    DWORD PTR [ebp-0x8],eax
  40e58e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e591:	xor    ecx,esi
  40e593:	mov    eax,0xffcd8d1c
  40e598:	sub    eax,ecx
  40e59a:	add    DWORD PTR [ebp-0x8],eax
  40e59d:	mov    eax,DWORD PTR [ebp-0x8]
  40e5a0:	mov    ecx,DWORD PTR [ebp-0x14]
  40e5a3:	mov    DWORD PTR [ecx+0x1],eax
  40e5a6:	mov    eax,DWORD PTR [ebp-0x14]
  40e5a9:	push   DWORD PTR [ebp-0x24]
  40e5ac:	mov    BYTE PTR [eax],0xe9
  40e5af:	mov    eax,ds:0x434153
  40e5b4:	push   DWORD PTR [eax]
  40e5b6:	push   DWORD PTR ds:0x4343af
  40e5bc:	push   DWORD PTR ds:0x43415b
  40e5c2:	push   DWORD PTR ds:0x43438f
  40e5c8:	push   DWORD PTR ds:0x43465b
  40e5ce:	push   DWORD PTR [ebp-0x28]
  40e5d1:	push   DWORD PTR [ebp-0x2c]
  40e5d4:	mov    eax,DWORD PTR [ebp-0x14]
  40e5d7:	call   eax
  40e5d9:	mov    eax,DWORD PTR [ebp-0x30]
  40e5dc:	mov    ecx,DWORD PTR ds:0x434353
  40e5e2:	add    DWORD PTR [eax],ecx
  40e5e4:	pop    edi
  40e5e5:	pop    esi
  40e5e6:	leave  
  40e5e7:	ret    
  40e5e8:	push   ebp
  40e5e9:	mov    ebp,esp
  40e5eb:	sub    esp,0x18
  40e5ee:	xor    DWORD PTR ds:0x431008,ecx
  40e5f4:	mov    DWORD PTR [ebp-0x10],0xf89f8581
  40e5fb:	lea    eax,[ebp+0x14]
  40e5fe:	mov    DWORD PTR [ebp-0x4],eax
  40e601:	mov    DWORD PTR ds:0x42e000,0x18
  40e60b:	cmp    DWORD PTR ds:0x42e000,0x0
  40e612:	je     0x40e669
  40e618:	cmp    DWORD PTR ds:0x42e000,0x8
  40e61f:	jge    0x40e669
  40e625:	jmp    0x40e63b
  40e62a:	push   DWORD PTR [ebp-0x20]
  40e62d:	push   DWORD PTR [ebp-0x20]
  40e630:	push   0x8017
  40e635:	call   DWORD PTR ds:0x4348c3
  40e63b:	cmp    DWORD PTR ds:0x42e000,0x9
  40e642:	jne    0x40e657
  40e648:	xor    edx,edx
  40e64a:	or     edx,DWORD PTR ds:0x42e000
  40e650:	dec    edx
  40e651:	mov    DWORD PTR ds:0x42e000,edx
  40e657:	mov    edx,DWORD PTR ds:0x42e000
  40e65d:	dec    edx
  40e65e:	mov    DWORD PTR ds:0x42e000,edx
  40e664:	jmp    0x40e60b
  40e669:	push   esi
  40e66a:	and    DWORD PTR ds:0x43101c,0x0
  40e674:	jmp    0x40e686
  40e679:	mov    edx,DWORD PTR ds:0x43101c
  40e67f:	inc    edx
  40e680:	mov    DWORD PTR ds:0x43101c,edx
  40e686:	cmp    DWORD PTR ds:0x43101c,0x1d
  40e68d:	jae    0x40e6c2
  40e693:	cmp    DWORD PTR ds:0x43101c,0x25
  40e69a:	jg     0x40e6c2
  40e6a0:	jmp    0x40e6bd
  40e6a5:	push   0x7038
  40e6aa:	push   0x42f000
  40e6af:	push   0x153b
  40e6b4:	push   DWORD PTR [ebp-0x20]
  40e6b7:	call   DWORD PTR ds:0x4348eb
  40e6bd:	jmp    0x40e679
  40e6c2:	mov    esi,0xf89c8581
  40e6c7:	mov    DWORD PTR [ebp-0xc],esi
  40e6ca:	mov    DWORD PTR ds:0x430014,0x1e
  40e6d4:	cmp    DWORD PTR ds:0x430014,0x0
  40e6db:	je     0x40e718
  40e6e1:	cmp    DWORD PTR ds:0x430014,0x2c
  40e6e8:	jb     0x40e718
  40e6ee:	jmp    0x40e706
  40e6f3:	push   0x5604
  40e6f8:	push   DWORD PTR [ebp-0x10]
  40e6fb:	push   0x5bf9
  40e700:	call   DWORD PTR ds:0x4348c7
  40e706:	mov    edx,DWORD PTR ds:0x430014
  40e70c:	dec    edx
  40e70d:	mov    DWORD PTR ds:0x430014,edx
  40e713:	jmp    0x40e6d4
  40e718:	lea    eax,[ebp-0xc]
  40e71b:	sub    ecx,ecx
  40e71d:	mov    DWORD PTR [ebp-0x14],eax
  40e720:	sbb    edx,ecx
  40e722:	mov    eax,DWORD PTR [ebp-0xc]
  40e725:	mov    edx,DWORD PTR [ebp-0x14]
  40e728:	xor    ecx,0x2f7f
  40e72e:	mov    ecx,0x751089d
  40e733:	sbb    DWORD PTR ds:0x42e010,0xf56
  40e73d:	xor    eax,ecx
  40e73f:	xor    DWORD PTR ds:0x431010,0x42f00c
  40e749:	add    eax,0x3272e4
  40e74e:	mov    DWORD PTR [edx],eax
  40e750:	mov    eax,ds:0x43414f
  40e755:	mov    edx,DWORD PTR [ebp-0x4]
  40e758:	mov    eax,DWORD PTR [eax]
  40e75a:	add    eax,DWORD PTR [edx]
  40e75c:	adc    edx,DWORD PTR ds:0x42f00c
  40e762:	push   edi
  40e763:	mov    edx,DWORD PTR ds:0x42e010
  40e769:	adc    DWORD PTR ds:0x42f010,edx
  40e76f:	mov    DWORD PTR [ebp-0x8],eax
  40e772:	sbb    edx,eax
  40e774:	mov    edi,DWORD PTR [ebp+0x8]
  40e777:	mov    edx,DWORD PTR ds:0x42e01c
  40e77d:	sub    DWORD PTR ds:0x431018,edx
  40e783:	mov    eax,ds:0x4342d7
  40e788:	mov    eax,DWORD PTR [eax+0x198]
  40e78e:	xor    edi,ecx
  40e790:	mov    edx,0x3272e4
  40e795:	add    DWORD PTR ds:0x432000,0x559c
  40e79f:	add    edi,edx
  40e7a1:	mov    DWORD PTR ds:0x42f01c,0x7a9a
  40e7ab:	cmp    DWORD PTR [eax],edi
  40e7ad:	mov    DWORD PTR ds:0x432018,0x2065
  40e7b7:	je     0x40e7c4
  40e7bd:	mov    eax,DWORD PTR [eax]
  40e7bf:	jmp    0x40eb48
  40e7c4:	mov    DWORD PTR ds:0x430014,0x19b0
  40e7ce:	mov    eax,DWORD PTR [ebp+0x18]
  40e7d1:	cmp    eax,esi
  40e7d3:	mov    DWORD PTR ds:0x430010,0x5283
  40e7dd:	jne    0x40e7f7
  40e7e3:	push   0xf89c8580
  40e7e8:	mov    DWORD PTR ds:0x42e008,0x5561
  40e7f2:	jmp    0x40eb37
  40e7f7:	mov    esi,DWORD PTR [ebp+0x18]
  40e7fa:	mov    DWORD PTR ds:0x431014,0x325b
  40e804:	mov    eax,0xf89c8583
  40e809:	mov    DWORD PTR ds:0x430010,0x6ef3
  40e813:	cmp    esi,eax
  40e815:	mov    DWORD PTR ds:0x43100c,0x3861
  40e81f:	jne    0x40eb27
  40e825:	and    DWORD PTR ds:0x431014,0x0
  40e82f:	mov    eax,ds:0x431014
  40e834:	inc    eax
  40e835:	mov    ds:0x431014,eax
  40e83a:	cmp    DWORD PTR ds:0x431014,0xc
  40e841:	jl     0x40e889
  40e847:	jmp    0x40e861
  40e84c:	push   0x7302
  40e851:	push   0x43200c
  40e856:	push   0x434105
  40e85b:	call   DWORD PTR ds:0x4348f3
  40e861:	cmp    DWORD PTR ds:0x431014,0xb
  40e868:	jne    0x40e87c
  40e86e:	xor    eax,eax
  40e870:	or     eax,DWORD PTR ds:0x431014
  40e876:	inc    eax
  40e877:	mov    ds:0x431014,eax
  40e87c:	cmp    DWORD PTR ds:0x431014,0x1a
  40e883:	jb     0x40e82f
  40e889:	mov    eax,DWORD PTR [ebp+0x10]
  40e88c:	xor    eax,ecx
  40e88e:	add    esi,0x7467
  40e894:	add    eax,edx
  40e896:	and    DWORD PTR ds:0x431004,0x42e014
  40e8a0:	mov    DWORD PTR [ebp-0x18],eax
  40e8a3:	or     DWORD PTR ds:0x42f010,0x747e
  40e8ad:	mov    eax,DWORD PTR [ebp+0xc]
  40e8b0:	adc    esi,0x7f18
  40e8b6:	mov    esi,DWORD PTR [ebp-0x8]
  40e8b9:	xor    eax,ecx
  40e8bb:	or     DWORD PTR ds:0x430014,0x1014
  40e8c5:	add    eax,edx
  40e8c7:	mov    DWORD PTR ds:0x432000,0x725d
  40e8d1:	imul   eax,DWORD PTR [esi]
  40e8d4:	and    DWORD PTR ds:0x42f004,0x0
  40e8de:	jmp    0x40e8f0
  40e8e3:	mov    esi,DWORD PTR ds:0x42f004
  40e8e9:	inc    esi
  40e8ea:	mov    DWORD PTR ds:0x42f004,esi
  40e8f0:	cmp    DWORD PTR ds:0x42f004,0x1f
  40e8f7:	jae    0x40e94e
  40e8fd:	cmp    DWORD PTR ds:0x42f004,0x4
  40e904:	jge    0x40e94e
  40e90a:	jmp    0x40e92f
  40e90f:	push   0x1e35
  40e914:	push   0x4340ed
  40e919:	push   0x4e7c
  40e91e:	push   0x434105
  40e923:	push   DWORD PTR [ebp-0x28]
  40e926:	push   DWORD PTR [ebp-0x10]
  40e929:	call   DWORD PTR ds:0x4348f7
  40e92f:	cmp    DWORD PTR ds:0x42f004,0x3
  40e936:	jne    0x40e949
  40e93c:	mov    esi,DWORD PTR ds:0x42f004
  40e942:	inc    esi
  40e943:	mov    DWORD PTR ds:0x42f004,esi
  40e949:	jmp    0x40e8e3
  40e94e:	mov    esi,DWORD PTR [ebp+0x8]
  40e951:	adc    DWORD PTR ds:0x43201c,0x42e01c
  40e95b:	xor    esi,ecx
  40e95d:	mov    DWORD PTR ds:0x42e028,0x65d7
  40e967:	add    esi,edx
  40e969:	cmp    esi,eax
  40e96b:	not    DWORD PTR ds:0x42f008
  40e971:	mov    eax,DWORD PTR [ebp-0x4]
  40e974:	mov    DWORD PTR ds:0x432000,0x15b7
  40e97e:	push   ebx
  40e97f:	je     0x40e9c8
  40e985:	adc    DWORD PTR ds:0x42e004,edx
  40e98b:	mov    esi,DWORD PTR [ebp-0x18]
  40e98e:	adc    DWORD PTR ds:0x432008,0x42e020
  40e998:	add    DWORD PTR [eax],esi
  40e99a:	add    DWORD PTR ds:0x431018,0x5c37
  40e9a4:	mov    eax,DWORD PTR [ebp-0x4]
  40e9a7:	or     esi,0x3712
  40e9ad:	mov    esi,DWORD PTR [ebp+0xc]
  40e9b0:	xor    DWORD PTR ds:0x431004,0x42e000
  40e9ba:	xor    esi,ecx
  40e9bc:	add    esi,edx
  40e9be:	imul   esi,DWORD PTR [eax]
  40e9c1:	mov    DWORD PTR [eax],esi
  40e9c3:	jmp    0x40e9cd
  40e9c8:	mov    esi,DWORD PTR [ebp+0x14]
  40e9cb:	xor    DWORD PTR [eax],esi
  40e9cd:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d0:	mov    edi,DWORD PTR [ebp+0x10]
  40e9d3:	xor    edi,ecx
  40e9d5:	mov    esi,0xffcd8d1c
  40e9da:	mov    ebx,esi
  40e9dc:	sub    ebx,edi
  40e9de:	add    DWORD PTR [eax],ebx
  40e9e0:	mov    eax,DWORD PTR [ebp-0x4]
  40e9e3:	mov    edi,DWORD PTR [ebp-0x8]
  40e9e6:	add    edi,DWORD PTR [eax]
  40e9e8:	mov    DWORD PTR [ebp-0x8],edi
  40e9eb:	mov    eax,DWORD PTR [ebp+0xc]
  40e9ee:	mov    edi,DWORD PTR [ebp+0xc]
  40e9f1:	xor    edi,ecx
  40e9f3:	xor    eax,ecx
  40e9f5:	lea    eax,[eax+edi*1+0x64e5c8]
  40e9fc:	mov    edi,DWORD PTR [ebp+0xc]
  40e9ff:	xor    edi,ecx
  40ea01:	add    edi,edx
  40ea03:	imul   eax,edi
  40ea06:	mov    edi,DWORD PTR [ebp+0xc]
  40ea09:	xor    edi,ecx
  40ea0b:	sub    edi,eax
  40ea0d:	mov    eax,DWORD PTR [ebp-0x4]
  40ea10:	add    edi,edx
  40ea12:	cmp    DWORD PTR [eax],edi
  40ea14:	mov    eax,DWORD PTR [ebp-0x4]
  40ea17:	mov    edi,DWORD PTR [ebp+0x10]
  40ea1a:	jg     0x40ea2d
  40ea20:	xor    edi,ecx
  40ea22:	mov    ebx,esi
  40ea24:	sub    ebx,edi
  40ea26:	add    DWORD PTR [eax],ebx
  40ea28:	jmp    0x40ea33
  40ea2d:	xor    edi,ecx
  40ea2f:	add    edi,edx
  40ea31:	add    DWORD PTR [eax],edi
  40ea33:	mov    eax,DWORD PTR [ebp-0x8]
  40ea36:	mov    edi,DWORD PTR [ebp-0x10]
  40ea39:	mov    eax,DWORD PTR [eax]
  40ea3b:	xor    edi,ecx
  40ea3d:	add    edi,0x3272e3
  40ea43:	not    edi
  40ea45:	and    eax,edi
  40ea47:	movsx  di,BYTE PTR [eax+0x1]
  40ea4c:	mov    ebx,0x3b52
  40ea51:	sub    di,bx
  40ea54:	mov    ebx,0x8a8e
  40ea59:	xor    di,bx
  40ea5c:	mov    ebx,0x4f86
  40ea61:	cmp    di,bx
  40ea64:	jne    0x40ea8c
  40ea6a:	movsx  di,BYTE PTR [eax]
  40ea6e:	mov    ebx,0x3b52
  40ea73:	sub    di,bx
  40ea76:	mov    ebx,0x8a8e
  40ea7b:	xor    di,bx
  40ea7e:	mov    ebx,0x4e75
  40ea83:	cmp    di,bx
  40ea86:	je     0x40ea9c
  40ea8c:	mov    edi,DWORD PTR [ebp-0x10]
  40ea8f:	xor    edi,ecx
  40ea91:	mov    ebx,esi
  40ea93:	sub    ebx,edi
  40ea95:	add    eax,ebx
  40ea97:	jmp    0x40ea47
  40ea9c:	mov    esi,DWORD PTR [ebp-0x14]
  40ea9f:	mov    esi,DWORD PTR [esi]
  40eaa1:	mov    edi,DWORD PTR [eax+0x3c]
  40eaa4:	lea    esi,[edi+esi*8+0x78]
  40eaa8:	mov    esi,DWORD PTR [esi+eax*1]
  40eaab:	mov    DWORD PTR [ebp-0x8],esi
  40eaae:	mov    esi,DWORD PTR [ebp+0x8]
  40eab1:	xor    esi,ecx
  40eab3:	add    esi,edx
  40eab5:	mov    DWORD PTR [ebp-0x14],esi
  40eab8:	mov    esi,DWORD PTR [ebp+0x8]
  40eabb:	mov    edi,DWORD PTR [ebp-0x8]
  40eabe:	xor    esi,ecx
  40eac0:	add    esi,edx
  40eac2:	pop    ebx
  40eac3:	cmp    edi,esi
  40eac5:	jne    0x40eae3
  40eacb:	mov    eax,DWORD PTR [ebp+0xc]
  40eace:	xor    eax,ecx
  40ead0:	mov    ecx,DWORD PTR [ebp-0x8]
  40ead3:	add    eax,edx
  40ead5:	imul   eax,ecx
  40ead8:	mov    DWORD PTR [ebp-0x8],eax
  40eadb:	push   DWORD PTR [ebp+0x18]
  40eade:	jmp    0x40eb37
  40eae3:	mov    ecx,DWORD PTR [ebp-0x8]
  40eae6:	add    ecx,eax
  40eae8:	mov    DWORD PTR [ebp-0x14],ecx
  40eaeb:	mov    ecx,DWORD PTR [ebp-0x14]
  40eaee:	mov    ecx,DWORD PTR [ecx+0xc]
  40eaf1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40eaf6:	mov    edx,0x3b52
  40eafb:	sub    cx,dx
  40eafe:	mov    edx,0x8a8e
  40eb03:	xor    cx,dx
  40eb06:	mov    edx,0x4e77
  40eb0b:	cmp    cx,dx
  40eb0e:	jne    0x40eadb
  40eb14:	mov    ecx,DWORD PTR ds:0x4342d7
  40eb1a:	mov    ecx,DWORD PTR [ecx+0x198]
  40eb20:	mov    DWORD PTR [ecx],eax
  40eb22:	jmp    0x40eb48
  40eb27:	mov    ecx,DWORD PTR [ebp+0x18]
  40eb2a:	cmp    ecx,0xf89c8580
  40eb30:	jne    0x40eb48
  40eb36:	push   eax
  40eb37:	push   DWORD PTR [ebp+0x14]
  40eb3a:	push   DWORD PTR [ebp+0x10]
  40eb3d:	push   DWORD PTR [ebp+0xc]
  40eb40:	push   DWORD PTR [ebp+0x8]
  40eb43:	call   0x40e5e8
  40eb48:	pop    edi
  40eb49:	pop    esi
  40eb4a:	leave  
  40eb4b:	ret    0x14
  40eb4e:	push   ebp
  40eb4f:	mov    ebp,esp
  40eb51:	sub    esp,0xc
  40eb54:	sbb    edx,edx
  40eb56:	push   esi
  40eb57:	add    DWORD PTR ds:0x42e028,ebx
  40eb5d:	mov    esi,0xf89c8581
  40eb62:	mov    DWORD PTR ds:0x430014,0x17
  40eb6c:	cmp    DWORD PTR ds:0x430014,0x0
  40eb73:	je     0x40ebd3
  40eb79:	cmp    DWORD PTR ds:0x430014,0x4
  40eb80:	jg     0x40ebd3
  40eb86:	jmp    0x40eba3
  40eb8b:	push   0x42f018
  40eb90:	push   0x49bf
  40eb95:	push   0x8fc2
  40eb9a:	push   DWORD PTR [ebp-0x10]
  40eb9d:	call   DWORD PTR ds:0x4348cb
  40eba3:	cmp    DWORD PTR ds:0x430014,0x5
  40ebaa:	jne    0x40ebbf
  40ebb0:	xor    edx,edx
  40ebb2:	xor    edx,DWORD PTR ds:0x430014
  40ebb8:	dec    edx
  40ebb9:	mov    DWORD PTR ds:0x430014,edx
  40ebbf:	xor    edx,edx
  40ebc1:	add    edx,DWORD PTR ds:0x430014
  40ebc7:	dec    edx
  40ebc8:	mov    DWORD PTR ds:0x430014,edx
  40ebce:	jmp    0x40eb6c
  40ebd3:	mov    DWORD PTR [ebp-0x8],esi
  40ebd6:	mov    DWORD PTR [ebp-0x4],0xf89c8580
  40ebdd:	push   edi
  40ebde:	inc    edi
  40ebdf:	mov    eax,eax
  40ebe1:	mov    eax,DWORD PTR [ebp-0x4]
  40ebe4:	and    DWORD PTR ds:0x43201c,0x0
  40ebee:	mov    edx,DWORD PTR ds:0x43201c
  40ebf4:	inc    edx
  40ebf5:	mov    DWORD PTR ds:0x43201c,edx
  40ebfb:	cmp    DWORD PTR ds:0x43201c,0x6
  40ec02:	jge    0x40ec3f
  40ec08:	jmp    0x40ec18
  40ec0d:	push   0x29a4
  40ec12:	call   DWORD PTR ds:0x4348cf
  40ec18:	cmp    DWORD PTR ds:0x43201c,0x5
  40ec1f:	jne    0x40ec32
  40ec25:	mov    edx,DWORD PTR ds:0x43201c
  40ec2b:	inc    edx
  40ec2c:	mov    DWORD PTR ds:0x43201c,edx
  40ec32:	cmp    DWORD PTR ds:0x43201c,0x1f
  40ec39:	jb     0x40ebee
  40ec3f:	mov    edi,DWORD PTR [ebp-0x8]
  40ec42:	mov    ecx,0x751089d
  40ec47:	mov    edx,DWORD PTR ds:0x42f000
  40ec4d:	sub    DWORD PTR ds:0x43000c,edx
  40ec53:	jmp    0x410fbf
  40ec58:	xor    BYTE PTR [eax],cl
  40ec5a:	(bad)  
  40ec5c:	test   DWORD PTR [ebx+0x73],esi
  40ec5f:	or     BYTE PTR [ebx],bl
  40ec61:	loope  0x40ec3d
  40ec63:	(bad)  
  40ec66:	cmp    DWORD PTR [ebp+0x7272cd32],0x23
  40ec6d:	pop    edi
  40ec6e:	jb     0x40ece2
  40ec70:	fistp  WORD PTR [ebx-0x6f0b3175]
  40ec76:	dec    edx
  40ec77:	jl     0x40ec74
  40ec79:	and    ecx,edx
  40ec7b:	inc    edx
  40ec7c:	mov    bh,0x95
  40ec7e:	mov    ds:0x43cb0803,eax
  40ec83:	inc    esi
  40ec84:	xor    eax,0x90446d12
  40ec89:	push   esp
  40ec8a:	pop    esp
  40ec8b:	dec    ebx
  40ec8c:	push   edi
  40ec8d:	mov    esi,0xc6215b18
  40ec92:	jle    0x40ecda
  40ec94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec95:	add    BYTE PTR [edx+eax*2-0x44e2bac9],bl
  40ec9c:	in     eax,dx
  40ec9d:	ficom  WORD PTR [eax]
  40ec9f:	(bad)  
  40eca0:	jp     0x40eccb
  40eca2:	sub    DWORD PTR ds:[ebx+0x49d47349],edi
  40eca9:	retf   0xa65e
  40ecac:	mov    esi,0xb2221546
  40ecb1:	imul   edx,DWORD PTR [edi+0x3b],0x2f
  40ecb5:	rcl    DWORD PTR [edi],1
  40ecb7:	and    BYTE PTR [edx+0x73],0x15
  40ecbb:	mov    bl,0x52
  40ecbd:	(bad)  
  40ecbe:	inc    edx
  40ecbf:	xchg   DWORD PTR [edx],edi
  40ecc1:	push   eax
  40ecc2:	xor    esp,ebx
  40ecc4:	jge    0x40ec55
  40ecc6:	xor    cl,ch
  40ecc8:	pop    ebx
  40ecc9:	outs   dx,DWORD PTR ds:[esi]
  40ecca:	mov    esi,0xf7cfdd7d
  40eccf:	hlt    
  40ecd0:	popf   
  40ecd1:	add    BYTE PTR [ecx+0x51],0xd8
  40ecd5:	out    dx,al
  40ecd6:	in     al,dx
  40ecd7:	out    0x3d,al
  40ecd9:	pop    esi
  40ecda:	inc    ecx
  40ecdb:	push   cs
  40ecdc:	inc    esi
  40ecdd:	test   al,0x75
  40ecdf:	ins    DWORD PTR es:[edi],dx
  40ece0:	inc    eax
  40ece1:	mov    ecx,0x9b3cc885
  40ece6:	push   cs
  40ece7:	jg     0x40ecd6
  40ece9:	pop    ss
  40ecea:	loop   0x40eceb
  40ecec:	cmp    ebp,DWORD PTR [edx+0x4c]
  40ecef:	into   
  40ecf0:	repz sub DWORD PTR ds:0x10732fcb,eax
  40ecf7:	sbb    dl,BYTE PTR [edx+0x2e5c7b40]
  40ecfd:	mov    esp,0xc4651074
  40ed02:	adc    BYTE PTR [ebx],bl
  40ed04:	or     eax,edi
  40ed06:	je     0x40ec9e
  40ed08:	inc    edi
  40ed09:	loopne 0x40ed6c
  40ed0b:	shl    BYTE PTR [ebx+ebp*1],0xd
  40ed0f:	xor    al,0x87
  40ed11:	imul   DWORD PTR [ebp+eax*4-0x624b92b2]
  40ed18:	cmp    eax,0x23a62beb
  40ed1d:	xor    eax,0x1a4b65da
  40ed22:	mov    WORD PTR [esi],?
  40ed24:	loopne 0x40ed9d
  40ed26:	div    ecx
  40ed28:	shl    DWORD PTR [ebx-0x4a520d99],cl
  40ed2e:	mov    ah,0xb6
  40ed30:	sub    eax,0xe8246edf
  40ed35:	test   BYTE PTR [ebx],0x66
  40ed38:	aas    
  40ed39:	hlt    
  40ed3a:	mov    BYTE PTR [edx-0x437bd495],bh
  40ed40:	xchg   edi,eax
  40ed41:	jmp    0x40edbe
  40ed43:	inc    esp
  40ed44:	loopne 0x40ece3
  40ed46:	vmread ecx,esp
  40ed49:	or     ch,ch
  40ed4b:	sar    ebp,cl
  40ed4d:	ror    DWORD PTR [ebx],0x74
  40ed50:	sbb    al,0x84
  40ed52:	stos   BYTE PTR es:[edi],al
  40ed53:	stos   BYTE PTR es:[edi],al
  40ed54:	xor    al,0xb0
  40ed56:	ret    0x513b
  40ed59:	call   0xa7a6:0x362b17b
  40ed60:	mov    ecx,0x7235291a
  40ed65:	inc    edi
  40ed66:	loop   0x40ed9a
  40ed68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed69:	and    edi,DWORD PTR [esi-0x65e681c6]
  40ed6f:	jbe    0x40ed24
  40ed71:	ret    0x1021
  40ed74:	and    DWORD PTR [esi-0x9],0x1adb94b8
  40ed7b:	xchg   BYTE PTR [edx],cl
  40ed7d:	stos   DWORD PTR es:[edi],eax
  40ed7e:	cld    
  40ed7f:	xchg   BYTE PTR [ebx-0x79e470ab],ch
  40ed85:	push   0xffffff9b
  40ed87:	or     DWORD PTR [ebp+ebx*4-0x651a91d7],eax
  40ed8e:	push   0xb81e109
  40ed93:	(bad)
  40ed96:	ror    ebx,1
  40ed98:	mov    ds,WORD PTR [edx]
  40ed9a:	lods   eax,DWORD PTR ds:[esi]
  40ed9b:	iret   
  40ed9c:	jmp    0x40edda
  40ed9e:	sahf   
  40ed9f:	xchg   DWORD PTR [esi+0x4e284dd7],esi
  40eda5:	jge    0x40ed2d
  40eda7:	shr    BYTE PTR [esi+edi*2+0x76],0x7f
  40edac:	fldenv [ebx-0x6f7acc59]
  40edb2:	in     eax,0x50
  40edb4:	loop   0x40edc4
  40edb6:	fmul   QWORD PTR [esi+0x4850df90]
  40edbc:	enter  0xbf7,0xed
  40edc0:	arpl   WORD PTR [edx],cx
  40edc2:	push   ebp
  40edc3:	mov    eax,ds:0x27c788db
  40edc8:	push   esp
  40edc9:	loop   0x40edac
  40edcb:	call   0x3d31:0x17f8958
  40edd2:	mov    ds:0x5138ea28,al
  40edd7:	and    eax,0x7bb2302c
  40eddc:	and    eax,0x374134a7
  40ede1:	cwde   
  40ede2:	(bad)  
  40ede3:	std    
  40ede4:	mov    al,ds:0x2b3ebf60
  40ede9:	xor    edx,DWORD PTR [ecx-0x4bde516a]
  40edef:	pop    ebx
  40edf0:	sub    BYTE PTR [ebx-0x48],ch
  40edf3:	mov    eax,ds:0x4787dc86
  40edf8:	push   esp
  40edf9:	sub    al,0x55
  40edfb:	push   ecx
  40edfc:	mov    bl,0xce
  40edfe:	or     DWORD PTR [eax-0x6789710c],0x11dd1876
  40ee08:	dec    BYTE PTR [eax]
  40ee0a:	or     DWORD PTR [edx+0x5cce7b8a],esp
  40ee10:	dec    edx
  40ee11:	inc    ebx
  40ee12:	mov    dl,0x1e
  40ee14:	loop   0x40ee48
  40ee16:	ds or  al,dh
  40ee19:	xor    al,0xa1
  40ee1b:	push   0xffffffa9
  40ee1d:	mov    dl,0x96
  40ee1f:	fist   DWORD PTR ds:0xd6d453a8
  40ee25:	mov    esp,0xdfd439e4
  40ee2a:	push   es
  40ee2b:	out    0x28,al
  40ee2d:	or     eax,0x1f48ff49
  40ee32:	jno    0x40ee24
  40ee34:	aam    0x41
  40ee36:	arpl   WORD PTR [edx-0x6e5108d0],si
  40ee3c:	mov    bh,0x3c
  40ee3e:	jecxz  0x40ee40
  40ee40:	ins    BYTE PTR es:[edi],dx
  40ee41:	sbb    eax,0x29601194
  40ee46:	shl    BYTE PTR [eax-0x5d],cl
  40ee49:	adc    bh,al
  40ee4b:	and    al,0x3e
  40ee4d:	lds    esp,FWORD PTR [eax+0x62]
  40ee50:	sub    esp,DWORD PTR [esp+ebx*4+0x1f]
  40ee54:	xchg   ebx,eax
  40ee55:	jb     0x40ee62
  40ee57:	clc    
  40ee58:	pop    edx
  40ee59:	mov    BYTE PTR [ecx],al
  40ee5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee5c:	mov    ecx,0x5242000
  40ee61:	add    ebx,DWORD PTR [esi-0x3ebbb31b]
  40ee67:	xchg   edi,eax
  40ee68:	pop    ebp
  40ee69:	out    0x9e,eax
  40ee6b:	and    eax,0xbc3eec42
  40ee70:	add    al,0xcf
  40ee72:	pusha  
  40ee73:	pop    ebp
  40ee74:	mov    esp,0x13cf0e64
  40ee79:	aam    0x52
  40ee7b:	call   0x9ce2a93b
  40ee80:	cwde   
  40ee81:	mov    al,0x8
  40ee83:	mov    eax,0x84e9e768
  40ee88:	loope  0x40eea1
  40ee8a:	(bad)  
  40ee8b:	and    al,0xab
  40ee8d:	call   0xa18:0x170fa40b
  40ee94:	loopne 0x40ef00
  40ee96:	cmp    DWORD PTR [ebx+0x67],ebp
  40ee99:	imul   eax,DWORD PTR [ebx-0x58],0x689bcfa8
  40eea0:	sbb    ah,al
  40eea2:	enter  0x616a,0x89
  40eea6:	imul   BYTE PTR fs:[edi-0x14cf8ce4]
  40eead:	retf   0x1b67
  40eeb0:	test   ebx,0x7ea5be65
  40eeb6:	and    al,0xcd
  40eeb8:	mov    esi,0xa73acc61
  40eebd:	fist   WORD PTR [ecx]
  40eebf:	sbb    DWORD PTR [ecx-0x7],esp
  40eec2:	int    0x8e
  40eec4:	sub    BYTE PTR [eax-0x1ec41e2],ch
  40eeca:	adc    eax,0x30f075bc
  40eecf:	or     eax,0x25e47235
  40eed4:	mov    al,0x8c
  40eed6:	in     al,dx
  40eed7:	retf   0xbce1
  40eeda:	dec    edx
  40eedb:	div    BYTE PTR [edi]
  40eedd:	gs and eax,0x9f036427
  40eee3:	xor    dh,BYTE PTR [esi+0x354b4c17]
  40eee9:	cmp    bl,BYTE PTR ds:0x530c2640
  40eeef:	sub    eax,0xfb8fe06f
  40eef4:	ins    DWORD PTR es:[edi],dx
  40eef5:	add    eax,0x2eb48fbb
  40eefa:	test   al,0x6
  40eefc:	xor    ch,BYTE PTR [ebp+ebx*8-0x31]
  40ef00:	sub    BYTE PTR [edi+esi*1+0x66bd5ce4],0x8b
  40ef08:	cmc    
  40ef09:	lahf   
  40ef0a:	je     0x40ef15
  40ef0c:	sahf   
  40ef0d:	mov    ds:0x9c78fbd8,eax
  40ef12:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef14:	and    eax,0xa41b0db4
  40ef19:	cmc    
  40ef1a:	mov    ds:0x3c5474db,al
  40ef1f:	pop    esi
  40ef20:	cmp    dl,BYTE PTR [edx+0x35]
  40ef23:	or     DWORD PTR [esi+0x93ce9ed],ebx
  40ef29:	fbstp  TBYTE PTR [edi]
  40ef2b:	dec    eax
  40ef2c:	fisubr DWORD PTR [eax+0x79]
  40ef2f:	sbb    esi,ecx
  40ef31:	not    DWORD PTR [edi-0x64]
  40ef34:	pop    ss
  40ef35:	mov    ah,0x83
  40ef37:	out    dx,al
  40ef38:	(bad)  
  40ef3a:	mov    ds:0x1cd4162c,eax
  40ef3f:	in     al,dx
  40ef40:	mov    edi,0x23150b84
  40ef45:	sub    ecx,DWORD PTR [ecx+edx*1+0xb]
  40ef49:	mov    ds:0x52fcd39e,eax
  40ef4e:	ins    DWORD PTR es:[edi],dx
  40ef4f:	xchg   ebx,eax
  40ef50:	inc    ebp
  40ef51:	sbb    dh,ch
  40ef53:	pop    ebx
  40ef54:	push   edi
  40ef55:	and    ch,ch
  40ef57:	es add al,0x91
  40ef5a:	adc    esi,ebx
  40ef5c:	cmp    ebx,ebx
  40ef5e:	out    0x25,al
  40ef60:	stos   BYTE PTR es:[edi],al
  40ef61:	jb     0x40efa1
  40ef63:	xor    ebx,edi
  40ef65:	ds retf 0xb367
  40ef69:	add    ah,BYTE PTR [edi]
  40ef6b:	adc    al,0xb0
  40ef6d:	das    
  40ef6e:	pop    ebx
  40ef6f:	in     al,0x49
  40ef71:	les    ebx,FWORD PTR [edx]
  40ef73:	mov    bl,0x18
  40ef75:	jae    0x40efef
  40ef77:	in     eax,0x9a
  40ef79:	or     eax,0xf596132f
  40ef7e:	push   ecx
  40ef7f:	fcom   st(7)
  40ef81:	sbb    BYTE PTR ss:[esi-0x39],al
  40ef85:	sbb    edi,DWORD PTR ds:0x214059f5
  40ef8b:	hlt    
  40ef8c:	inc    ebp
  40ef8d:	rcr    BYTE PTR [edi+0x7d],cl
  40ef90:	sar    BYTE PTR [eax+ebx*1],1
  40ef93:	outs   dx,BYTE PTR ds:[esi]
  40ef94:	push   ss
  40ef95:	cdq    
  40ef96:	sub    al,0xfd
  40ef98:	mov    ah,0xee
  40ef9a:	jns    0x40ef1c
  40ef9c:	data16 int 0x5f
  40ef9f:	push   es
  40efa0:	adc    eax,0x5f7b1807
  40efa5:	mov    ss,WORD PTR [ecx]
  40efa7:	leave  
  40efa8:	fild   DWORD PTR [ebx]
  40efaa:	pop    edi
  40efab:	push   ecx
  40efac:	mov    ds:0xf4208008,al
  40efb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efb2:	add    ecx,DWORD PTR [edx-0x1e680ff9]
  40efb8:	sub    eax,0xb9d50724
  40efbd:	test   eax,0x678a7aa3
  40efc2:	and    ch,BYTE PTR [edi+0x50fca1ac]
  40efc8:	cli    
  40efc9:	mov    ds:0x8abbb6f0,eax
  40efce:	test   BYTE PTR [ebx-0x75],dl
  40efd1:	or     eax,0xf6ba3938
  40efd6:	test   al,0x7a
  40efd8:	pop    ecx
  40efd9:	outs   dx,DWORD PTR ds:[esi]
  40efda:	sti    
  40efdb:	dec    eax
  40efdc:	cmc    
  40efdd:	push   esi
  40efde:	mov    bh,0xd
  40efe0:	pop    DWORD PTR [edx+0x49]
  40efe3:	mov    ds:0xb6eeaa7b,eax
  40efe8:	cwde   
  40efe9:	inc    eax
  40efea:	mov    ebp,0x251886f1
  40efef:	ins    BYTE PTR es:[edi],dx
  40eff0:	sar    BYTE PTR [edi],cl
  40eff2:	repnz sbb ecx,esi
  40eff5:	sub    BYTE PTR [esi],al
  40eff7:	xor    ah,cl
  40eff9:	ror    BYTE PTR [ebx+0x73b367c7],1
  40efff:	cmp    DWORD PTR [eax+0x6d],esp
  40f002:	cmp    eax,0x215e832b
  40f007:	mov    ebp,0x9cc7130d
  40f00c:	jae    0x40efad
  40f00e:	sub    al,0xf2
  40f010:	xchg   ecx,eax
  40f011:	xchg   ebp,eax
  40f012:	out    0x1b,al
  40f014:	push   ss
  40f015:	pop    eax
  40f016:	xor    al,0xda
  40f018:	mov    esi,0xaeafb4f8
  40f01d:	xchg   DWORD PTR [ebp+0x5da35cb0],ebp
  40f023:	out    0x98,al
  40f025:	shl    DWORD PTR [ecx+0x443f2362],cl
  40f02b:	mov    esi,0x33cf13a9
  40f030:	jecxz  0x40effc
  40f032:	lock and eax,0x8e48fc21
  40f038:	pop    es
  40f039:	ins    DWORD PTR es:[edi],dx
  40f03a:	lods   eax,DWORD PTR ds:[esi]
  40f03b:	add    eax,0xfc464af0
  40f040:	pop    ss
  40f041:	and    bl,dl
  40f043:	int    0xe
  40f045:	bnd ret 0x80e4
  40f049:	les    eax,FWORD PTR [edi+eax*4+0x4374a61f]
  40f050:	ss cmp edi,ebx
  40f053:	loope  0x40f028
  40f055:	mov    ch,0xad
  40f057:	neg    BYTE PTR [edi+0x56]
  40f05a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f05b:	push   ebp
  40f05c:	cld    
  40f05d:	inc    edi
  40f05e:	mov    bl,0x1d
  40f061:	sub    eax,0xc699473a
  40f066:	je     0x40f09c
  40f068:	jne    0x40f02d
  40f06a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f06b:	into   
  40f06c:	ror    DWORD PTR [edi],1
  40f06e:	test   DWORD PTR [esi+ebp*2],0xec07921f
  40f075:	mov    bh,0x8d
  40f077:	mov    al,0x5d
  40f079:	jb     0x40f07b
  40f07b:	pop    ss
  40f07c:	out    0x51,eax
  40f07e:	cs xchg edi,eax
  40f080:	adc    bh,BYTE PTR [edx+0x74]
  40f083:	fucomp st(7)
  40f085:	sbb    al,0xa7
  40f087:	out    dx,al
  40f088:	imul   ebx,DWORD PTR [eax],0x30630828
  40f08e:	aad    0xee
  40f090:	loop   0x40f0d3
  40f092:	test   eax,0x8ae5bc3
  40f097:	adc    eax,eax
  40f099:	push   ecx
  40f09a:	(bad)  
  40f09b:	lods   eax,DWORD PTR ds:[esi]
  40f09c:	jb     0x40f0e3
  40f09e:	xor    al,0xb0
  40f0a0:	dec    ebx
  40f0a1:	ins    DWORD PTR es:[edi],dx
  40f0a2:	inc    ebx
  40f0a3:	push   ebx
  40f0a4:	pop    esi
  40f0a5:	pop    ebp
  40f0a6:	mov    esp,0x6717a849
  40f0ab:	lock jae 0x40f11c
  40f0ae:	jl     0x40f101
  40f0b0:	jo     0x40f07a
  40f0b2:	loop   0x40f097
  40f0b4:	je     0x40f0c9
  40f0b6:	xchg   esi,eax
  40f0b7:	clc    
  40f0b8:	stos   BYTE PTR es:[edi],al
  40f0b9:	xor    ecx,DWORD PTR [esi]
  40f0bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0bc:	sub    eax,0x23fd2b0
  40f0c1:	out    dx,eax
  40f0c2:	lahf   
  40f0c3:	sub    al,0x8b
  40f0c5:	push   ds
  40f0c6:	cmp    ah,BYTE PTR [edx+0x33634c6a]
  40f0cc:	push   es
  40f0cd:	or     BYTE PTR [esi],dh
  40f0cf:	sub    bh,bl
  40f0d1:	sbb    ah,al
  40f0d3:	dec    ecx
  40f0d4:	mov    edx,0x5ae262bd
  40f0d9:	jmp    0x181c:0x6014a239
  40f0e0:	loopne 0x40f0ba
  40f0e2:	pop    es
  40f0e3:	add    eax,0x7c0c258f
  40f0e8:	pop    ss
  40f0e9:	clts   
  40f0eb:	popa   
  40f0ec:	push   0x568d5be3
  40f0f1:	mov    cl,0xa2
  40f0f3:	push   ebp
  40f0f4:	call   0x4bda:0xd77342ac
  40f0fb:	dec    eax
  40f0fc:	inc    esi
  40f0fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0fe:	out    dx,al
  40f0ff:	xor    DWORD PTR [esi+0x35474e43],eax
  40f105:	lea    esp,[ecx-0x159199fa]
  40f10b:	mov    al,0xe3
  40f10d:	out    0x19,eax
  40f10f:	ret    
  40f110:	retf   
  40f111:	or     edi,DWORD PTR [ebp-0x23]
  40f114:	mov    dh,BYTE PTR [edi+0x39]
  40f117:	dec    ecx
  40f118:	pop    edx
  40f119:	adc    eax,0xbca433
  40f11e:	or     eax,0x7d9d95b0
  40f123:	sbb    esp,DWORD PTR [edi+0x3a24da66]
  40f129:	mov    bl,0xc7
  40f12b:	das    
  40f12c:	clc    
  40f12d:	not    DWORD PTR [edx]
  40f12f:	ror    BYTE PTR ds:0x236d20ea,cl
  40f135:	xchg   ebx,eax
  40f136:	ror    DWORD PTR [ecx+0x6],1
  40f139:	call   FWORD PTR [eax+0x64]
  40f13c:	sbb    esi,DWORD PTR [edi+0x73ba4e03]
  40f142:	out    0x72,al
  40f144:	outs   dx,BYTE PTR ds:[esi]
  40f145:	mov    DWORD PTR [edx+eiz*2+0x7d],ecx
  40f149:	retf   0x9ed4
  40f14c:	pop    es
  40f14d:	in     al,dx
  40f14e:	pop    ss
  40f14f:	mov    dh,0xe7
  40f151:	jl     0x40f117
  40f153:	xchg   BYTE PTR [edi+0x4d],bh
  40f156:	loopne 0x40f10d
  40f158:	fsubrp st(6),st
  40f15a:	in     al,dx
  40f15b:	mov    ?,WORD PTR [eax+0x5f]
  40f15e:	jmp    0x691c37f0
  40f163:	dec    ecx
  40f164:	jge    0x40f1c0
  40f166:	push   esi
  40f167:	addr16 inc esp
  40f169:	in     al,0x29
  40f16b:	jo     0x40f101
  40f16d:	push   ss
  40f16e:	jp     0x40f11b
  40f170:	mov    bl,0x72
  40f172:	sti    
  40f173:	xor    dh,BYTE PTR [eax-0x20c94290]
  40f179:	mov    DWORD PTR [edx],edi
  40f17b:	popf   
  40f17c:	sbb    ecx,DWORD PTR [edx+0x13826831]
  40f182:	sub    BYTE PTR [edx],ah
  40f184:	movaps xmm3,XMMWORD PTR [edi-0xe8a26e9]
  40f18b:	fstp   QWORD PTR [ebx-0x32]
  40f18e:	xor    BYTE PTR ds:0x4cfc827b,ah
  40f194:	push   esp
  40f195:	shr    BYTE PTR [ebx+0x11d0fd1d],cl
  40f19b:	sar    dh,0x6
  40f19e:	out    0xde,eax
  40f1a0:	aas    
  40f1a1:	mov    esp,0x78954266
  40f1a6:	dec    esi
  40f1a7:	repz cmp dl,dh
  40f1aa:	inc    edi
  40f1ab:	loop   0x40f1ab
  40f1ad:	cmp    eax,0x1b99e580
  40f1b2:	mov    dl,0x19
  40f1b4:	jg     0x40f196
  40f1b6:	xor    al,0xef
  40f1b8:	int3   
  40f1b9:	xor    esi,edi
  40f1bb:	inc    esi
  40f1bc:	test   BYTE PTR [edi-0x5eec9e2c],al
  40f1c2:	test   BYTE PTR [ecx-0x45],dl
  40f1c5:	adc    bh,BYTE PTR [edx+0x2242fc3d]
  40f1cb:	lods   al,BYTE PTR ds:[esi]
  40f1cc:	cmc    
  40f1cd:	push   esp
  40f1ce:	in     eax,dx
  40f1cf:	pop    es
  40f1d0:	(bad)  
  40f1d1:	sbb    ebp,ecx
  40f1d3:	push   ecx
  40f1d4:	ss loop 0x40f15c
  40f1d7:	test   BYTE PTR [ebx-0x74],al
  40f1da:	cli    
  40f1db:	mov    bh,BYTE PTR [esi-0x65a93893]
  40f1e1:	mov    BYTE PTR [eax+0x6fa127f5],cl
  40f1e7:	pop    ecx
  40f1e8:	sbb    al,0xd8
  40f1ea:	psubsw mm0,mm0
  40f1ed:	xlat   BYTE PTR ds:[ebx]
  40f1ee:	pop    ss
  40f1ef:	test   al,0xb
  40f1f1:	adc    al,0xcd
  40f1f3:	ins    DWORD PTR es:[edi],dx
  40f1f4:	imul   esi,ebp,0x8ba25700
  40f1fa:	imul   ecx,DWORD PTR [esi+0x6f],0xffffffcd
  40f1fe:	(bad)  
  40f200:	adc    eax,0x2e58b1d4
  40f205:	iret   
  40f206:	shr    dh,cl
  40f208:	ja     0x40f19c
  40f20a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f20b:	and    ecx,DWORD PTR [edi+0x6b]
  40f20e:	mov    ch,0x71
  40f210:	pop    ss
  40f211:	ret    
  40f212:	stc    
  40f213:	nop
  40f214:	aaa    
  40f215:	sbb    esp,esp
  40f217:	test   edi,ebp
  40f219:	mov    WORD PTR [esi+0x62],?
  40f21c:	pop    eax
  40f21d:	rol    BYTE PTR [edx-0x2629fe8b],cl
  40f223:	rol    DWORD PTR [ebp+ecx*8-0x5a20f28b],0x41
  40f22b:	aas    
  40f22c:	push   esi
  40f22d:	mov    eax,ds:0x18d0ec12
  40f232:	xchg   ebp,eax
  40f233:	pop    ebx
  40f234:	daa    
  40f235:	pop    ebp
  40f236:	adc    BYTE PTR [eax+0x32],ah
  40f239:	dec    edx
  40f23a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f23b:	mov    edi,0xcb4e0b0d
  40f240:	sbb    BYTE PTR [eax+ebp*8],bl
  40f243:	pushf  
  40f244:	retf   0xb97c
  40f247:	pop    ecx
  40f248:	pop    edi
  40f249:	pusha  
  40f24a:	sbb    BYTE PTR [esi],dl
  40f24c:	jecxz  0x40f1f8
  40f24e:	imul   esi,DWORD PTR [ebx],0x20
  40f251:	gs repnz xchg ebx,eax
  40f254:	iret   
  40f255:	or     ah,ch
  40f257:	scas   eax,DWORD PTR es:[edi]
  40f258:	dec    eax
  40f259:	push   edx
  40f25a:	data16 jns 0x40f1fb
  40f25d:	fdiv   QWORD PTR ds:0x5af1dcc8
  40f263:	pop    esi
  40f264:	sub    ch,dh
  40f266:	jmp    0xf0ce8239
  40f26b:	mov    ecx,0x9ebb2b8e
  40f270:	pusha  
  40f271:	push   0xc6d62275
  40f276:	(bad)  
  40f277:	idiv   al
  40f279:	je     0x40f278
  40f27b:	inc    ebp
  40f27c:	mov    esi,0x9318bbde
  40f281:	jmp    0xd2fd:0x177de46f
  40f288:	out    dx,eax
  40f289:	dec    edi
  40f28a:	add    al,0xbd
  40f28c:	mov    ?,WORD PTR [esp+eax*8-0x2874707a]
  40f293:	push   ecx
  40f294:	sbb    eax,0xa69d3ec7
  40f299:	jno    0x40f2e1
  40f29b:	inc    ebx
  40f29c:	gs stos DWORD PTR es:[edi],eax
  40f29e:	ss pop edi
  40f2a0:	fwait
  40f2a1:	ja     0x40f2c3
  40f2a3:	fadd   st,st(3)
  40f2a5:	popa   
  40f2a6:	push   ebp
  40f2a7:	xlat   BYTE PTR ds:[ebx]
  40f2a8:	fs pop eax
  40f2aa:	xor    BYTE PTR [edi+eax*1+0x22],al
  40f2ae:	jmp    0xae024f36
  40f2b3:	in     eax,0x10
  40f2b5:	fwait
  40f2b6:	loope  0x40f2f7
  40f2b8:	jno    0x40f29a
  40f2ba:	fcmovnb st,st(4)
  40f2bc:	and    DWORD PTR [esi+0x51],ebp
  40f2bf:	fcmovu st,st(0)
  40f2c1:	push   cs
  40f2c2:	mov    ecx,0xcd8df83c
  40f2c7:	pop    ebx
  40f2c8:	loopne 0x40f2a8
  40f2ca:	jmp    0x80fe:0x5f9f6363
  40f2d1:	inc    ecx
  40f2d2:	hlt    
  40f2d3:	sub    DWORD PTR [esi-0x2c],ebp
  40f2d6:	mov    ah,0x70
  40f2d8:	xor    BYTE PTR [esi+edx*1-0x41],0x3e
  40f2dd:	jbe    0x40f313
  40f2df:	inc    esp
  40f2e0:	ret    0x2bc6
  40f2e3:	jne    0x40f2d0
  40f2e5:	mov    DWORD PTR [ecx-0x1ed0ef2c],ecx
  40f2eb:	inc    esi
  40f2ec:	in     eax,0x7a
  40f2ee:	test   DWORD PTR [ebx+0x166d96aa],0xdfd952eb
  40f2f8:	mov    eax,0xdccc027
  40f2fd:	jg     0x40f369
  40f2ff:	pop    eax
  40f300:	cld    
  40f301:	dec    edi
  40f302:	mov    bh,0x37
  40f304:	jp     0x40f2ab
  40f306:	add    eax,0x7970529a
  40f30b:	adc    eax,0xf5fbf018
  40f310:	jo     0x40f30d
  40f312:	cmp    dl,BYTE PTR [eax-0x42dee7ab]
  40f318:	cmc    
  40f319:	enter  0xefbf,0xc5
  40f31d:	pusha  
  40f31e:	adc    BYTE PTR [eax-0x7a],bh
  40f321:	jmp    0x40f382
  40f323:	data16 into 
  40f325:	xor    BYTE PTR [esi-0x4f6c1a19],cl
  40f32b:	inc    ebp
  40f32c:	and    al,0x8
  40f32e:	dec    edi
  40f32f:	imul   esp,DWORD PTR ds:[ebp+0xad86374],0xc59dce0
  40f33a:	push   0xc383765c
  40f33f:	sbb    eax,0x84aa7b8d
  40f344:	icebp  
  40f345:	sbb    ebx,DWORD PTR [edi+0x7b000960]
  40f34b:	sbb    eax,0x28e4386c
  40f350:	cmp    DWORD PTR [eax+0x7f7a576b],esi
  40f356:	and    ah,dh
  40f358:	and    BYTE PTR [ecx-0x72190bd6],al
  40f35e:	fmul   QWORD PTR [edx+0x15c9a993]
  40f364:	ja     0x40f31e
  40f366:	mov    dh,0x31
  40f368:	(bad)  
  40f369:	scas   eax,DWORD PTR es:[edi]
  40f36a:	(bad)  
  40f36b:	jecxz  0x40f2f1
  40f36d:	out    0xec,al
  40f36f:	shl    DWORD PTR [eax+0x45],cl
  40f372:	jno    0x40f2f7
  40f374:	xchg   esp,eax
  40f375:	test   eax,0x7ed281e4
  40f37a:	xchg   ebx,eax
  40f37b:	dec    ebp
  40f37c:	arpl   dx,sp
  40f37e:	in     al,dx
  40f37f:	test   DWORD PTR [edx],0x72be95d5
  40f385:	test   edi,ecx
  40f387:	sahf   
  40f388:	mov    ah,BYTE PTR [ecx]
  40f38a:	jns    0x40f376
  40f38c:	mov    ch,0x9b
  40f38e:	mov    edi,0x183ee1f4
  40f393:	jb     0x40f388
  40f395:	test   eax,0x73f07c88
  40f39a:	sub    BYTE PTR [ebx+eax*1+0x3ad7f770],bh
  40f3a1:	or     BYTE PTR [edx-0x5e634e25],al
  40f3a7:	lock sahf 
  40f3a9:	mov    ebp,0xb3648f32
  40f3ae:	out    0x5d,al
  40f3b0:	scas   eax,DWORD PTR es:[edi]
  40f3b1:	lds    ebx,FWORD PTR [esi]
  40f3b3:	mov    esp,0x655b65f7
  40f3b8:	pop    ebx
  40f3b9:	mov    al,0x99
  40f3bb:	aas    
  40f3bc:	shl    bl,1
  40f3be:	sbb    ebx,DWORD PTR [esi+0x14]
  40f3c1:	pop    ds
  40f3c2:	sbb    al,0x81
  40f3c4:	mov    ebx,DWORD PTR [eax]
  40f3c6:	pop    eax
  40f3c7:	jl     0x40f384
  40f3c9:	jne    0x40f3e9
  40f3cb:	dec    edx
  40f3cc:	in     eax,0xdf
  40f3ce:	cmp    al,0x32
  40f3d0:	push   DWORD PTR [eax-0x66370108]
  40f3d6:	call   0xa0b7:0x5b6be21e
  40f3dd:	dec    ecx
  40f3de:	jno    0x40f40a
  40f3e0:	fcomp  QWORD PTR [edi+0x3c]
  40f3e3:	fdiv   QWORD PTR [esi-0x49]
  40f3e6:	dec    esi
  40f3e7:	loope  0x40f38e
  40f3e9:	mov    bl,BYTE PTR [edi+0x740163be]
  40f3ef:	ds jl  0x40f44e
  40f3f2:	dec    edx
  40f3f3:	aaa    
  40f3f4:	sahf   
  40f3f5:	jmp    0xf387:0x3c3d6765
  40f3fc:	mov    esp,0x35806694
  40f401:	push   esi
  40f402:	pop    ds
  40f403:	ss jo  0x40f42f
  40f406:	inc    edi
  40f407:	pop    ebx
  40f408:	enter  0xf76d,0x91
  40f40c:	sbb    esp,DWORD PTR [ebx+0x5c]
  40f40f:	add    al,0x87
  40f411:	dec    edi
  40f412:	push   0x5d4bb122
  40f417:	stos   BYTE PTR es:[edi],al
  40f418:	mov    BYTE PTR [eax],bh
  40f41a:	push   eax
  40f41b:	js     0x40f484
  40f41d:	out    0x84,eax
  40f41f:	inc    ebx
  40f420:	inc    edx
  40f421:	in     eax,dx
  40f422:	arpl   WORD PTR [esi-0x7fc291a9],bx
  40f428:	pop    ebx
  40f429:	jmp    0x499916ff
  40f42e:	push   ds
  40f42f:	ins    BYTE PTR es:[edi],dx
  40f430:	jns    0x40f3fd
  40f432:	sbb    DWORD PTR [edx-0x580e6ad5],ebp
  40f438:	jo     0x40f421
  40f43a:	add    bl,BYTE PTR [ebx-0x6c]
  40f43d:	add    edx,ebx
  40f43f:	mov    bh,0x88
  40f441:	push   esi
  40f442:	push   ebx
  40f443:	inc    esp
  40f444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f445:	ins    DWORD PTR es:[edi],dx
  40f446:	push   ebx
  40f447:	fstp   st(6)
  40f449:	and    eax,0x1a63d9c4
  40f44e:	stos   BYTE PTR es:[edi],al
  40f44f:	sbb    al,0x1f
  40f451:	(bad)  
  40f452:	stos   DWORD PTR es:[edi],eax
  40f453:	pop    edx
  40f454:	lea    esp,[edi+0x17]
  40f457:	pop    ds
  40f458:	sbb    al,ah
  40f45a:	dec    esi
  40f45b:	xchg   esp,eax
  40f45c:	cwde   
  40f45d:	mov    edi,0x969b5487
  40f462:	aaa    
  40f463:	ret    
  40f464:	loope  0x40f4ad
  40f466:	shr    BYTE PTR [edi+0x60],0xd2
  40f46a:	mov    ah,0x48
  40f46c:	popf   
  40f46d:	push   cs
  40f46e:	xchg   edx,eax
  40f46f:	sbb    al,0x1b
  40f471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f472:	or     eax,0x8bec46fa
  40f477:	jo     0x40f4cf
  40f479:	rcr    DWORD PTR [esi+0x2fe17181],1
  40f47f:	call   0x4de6:0x323d273c
  40f486:	mov    es,WORD PTR [edi-0x37ab90dc]
  40f48c:	pop    edx
  40f48d:	fdivr  DWORD PTR [edi-0x5f]
  40f490:	sahf   
  40f491:	aaa    
  40f492:	push   edx
  40f493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f494:	jg     0x40f50f
  40f496:	shl    BYTE PTR [ebx+0x38738386],1
  40f49c:	dec    ecx
  40f49d:	cmp    bl,BYTE PTR [ebp+edx*1-0x32]
  40f4a1:	pusha  
  40f4a2:	dec    eax
  40f4a3:	rol    DWORD PTR [eax],1
  40f4a5:	xchg   ebp,eax
  40f4a6:	or     al,0x61
  40f4a8:	lock sar DWORD PTR [ebx],0xcf
  40f4ac:	stc    
  40f4ad:	loopne 0x40f437
  40f4af:	sbb    DWORD PTR [ecx+esi*2],esi
  40f4b2:	fld    QWORD PTR [eax]
  40f4b4:	arpl   WORD PTR ds:0x79c0f508,si
  40f4ba:	(bad)  
  40f4bb:	stc    
  40f4bc:	into   
  40f4bd:	mov    ds:0x3e1ffde9,eax
  40f4c2:	outs   dx,DWORD PTR ds:[esi]
  40f4c3:	std    
  40f4c4:	add    eax,ebx
  40f4c6:	mov    esi,0x4bee1e89
  40f4cb:	(bad)  
  40f4cc:	fisttp WORD PTR [ecx]
  40f4ce:	popf   
  40f4cf:	push   esp
  40f4d0:	cmp    edi,DWORD PTR [ebp+0x71]
  40f4d3:	sbb    DWORD PTR [eax],esp
  40f4d5:	xchg   DWORD PTR [edi],ebp
  40f4d7:	sub    ah,BYTE PTR [ebx]
  40f4d9:	shl    DWORD PTR [ebx-0x6cf5f908],cl
  40f4df:	cwde   
  40f4e0:	mov    edx,0x6cadddf2
  40f4e5:	push   DWORD PTR [ecx+0x29]
  40f4e8:	jmp    0x40f50b
  40f4ea:	pop    ds
  40f4eb:	xchg   ebp,eax
  40f4ec:	push   esp
  40f4ed:	scas   al,BYTE PTR es:[edi]
  40f4ee:	xchg   ebx,eax
  40f4ef:	sub    al,0x40
  40f4f1:	push   eax
  40f4f2:	mov    DWORD PTR [ebp+ecx*8+0x7d],eax
  40f4f6:	mov    al,ds:0xbb388c51
  40f4fb:	repz push ds
  40f4fd:	cmp    cl,BYTE PTR [ebx]
  40f4ff:	xchg   edx,eax
  40f500:	sbb    BYTE PTR [ebp+ebx*4-0x6c],cl
  40f504:	inc    BYTE PTR [ecx-0xdd80c7f]
  40f50a:	mov    edx,0x476140ba
  40f50f:	pop    edi
  40f510:	test   al,0x38
  40f512:	mov    ebp,DWORD PTR [ebp-0x60]
  40f515:	cmp    eax,0x62bbb9e4
  40f51a:	adc    BYTE PTR [ebp-0x2828ff67],dl
  40f520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f521:	icebp  
  40f522:	(bad)  
  40f523:	mul    BYTE PTR [ebp+esi*8-0x3]
  40f527:	sbb    DWORD PTR [esi-0x4df6120e],0x16
  40f52e:	rcl    esi,1
  40f530:	fistp  WORD PTR [edi+0x7381f473]
  40f536:	add    DWORD PTR [esi],esi
  40f538:	das    
  40f539:	rol    DWORD PTR [eax-0x70e3f9a6],0x20
  40f540:	retf   0x6ecb
  40f543:	mov    ebx,0x11bd93d2
  40f548:	outs   dx,BYTE PTR ds:[esi]
  40f549:	stos   DWORD PTR es:[edi],eax
  40f54a:	xchg   BYTE PTR [edx-0x1efa6a3f],al
  40f550:	mov    ds:0xa4876cea,eax
  40f555:	sub    esi,DWORD PTR [edx]
  40f557:	and    al,0x8e
  40f559:	mov    esp,0x47eec570
  40f55e:	push   ebx
  40f55f:	xchg   esp,eax
  40f560:	stos   BYTE PTR es:[edi],al
  40f561:	mov    dl,0xc2
  40f563:	mov    ds:0x6a492bd3,al
  40f568:	mov    esi,0x6d15902a
  40f56d:	pop    edx
  40f56e:	xor    al,0xce
  40f570:	mov    BYTE PTR [ebp-0x6d],dh
  40f573:	inc    eax
  40f574:	mov    esp,0x986cb837
  40f579:	out    0xc1,al
  40f57b:	imul   ebx,edx,0x563b0a5e
  40f581:	sbb    al,0x69
  40f583:	mov    dl,0x55
  40f585:	pop    ebx
  40f586:	inc    edi
  40f587:	add    al,0x8b
  40f589:	mov    DWORD PTR [eax*8+0x5d59043e],edx
  40f590:	mov    ecx,0xeff9a803
  40f595:	pop    edi
  40f596:	pop    ss
  40f597:	in     eax,dx
  40f598:	shl    BYTE PTR [edi+0x1b],cl
  40f59b:	fnstenv [ebx+0x3e]
  40f59e:	mov    esi,0x1243800c
  40f5a3:	push   cs
  40f5a4:	pop    ecx
  40f5a5:	mov    DWORD PTR [ecx-0x74353e88],ecx
  40f5ab:	dec    ebp
  40f5ac:	fsubrp st(5),st
  40f5ae:	ds (bad) 
  40f5b0:	jae    0x40f587
  40f5b2:	fld    DWORD PTR [eax-0x7e]
  40f5b5:	sub    cl,BYTE PTR ds:0x6efb31ea
  40f5bb:	or     edi,DWORD PTR fs:[ebx+0x37]
  40f5bf:	ja     0x40f5ea
  40f5c1:	cmp    BYTE PTR [eax+0x47135bd1],al
  40f5c7:	sbb    ah,BYTE PTR [edi+eiz*4-0x5356534a]
  40f5ce:	mov    WORD PTR [ebp+0xe124d3c],gs
  40f5d4:	push   ebx
  40f5d5:	push   cs
  40f5d6:	xor    edi,edi
  40f5d8:	call   0xe461a95a
  40f5dd:	lods   al,BYTE PTR ds:[esi]
  40f5de:	shr    BYTE PTR ds:0xf4300673,1
  40f5e4:	ret    
  40f5e5:	clc    
  40f5e6:	mov    edi,0x87cd2138
  40f5eb:	xchg   ebx,eax
  40f5ec:	inc    ecx
  40f5ed:	int    0x3f
  40f5ef:	adc    DWORD PTR [esi+esi*8+0x1c8167bc],esi
  40f5f6:	pop    edi
  40f5f7:	std    
  40f5f8:	jl     0x40f587
  40f5fa:	xor    DWORD PTR [ebx+0xb],edx
  40f5fd:	rol    ah,1
  40f5ff:	sahf   
  40f600:	out    0x53,eax
  40f602:	loop   0x40f643
  40f604:	cmp    DWORD PTR [esp+ecx*1+0x55af3164],esi
  40f60b:	mov    al,0xed
  40f60d:	sub    edi,esp
  40f60f:	push   ecx
  40f610:	jno    0x40f5b3
  40f612:	add    esi,eax
  40f614:	iret   
  40f615:	outs   dx,DWORD PTR ds:[esi]
  40f616:	ja     0x40f5c4
  40f618:	push   cs
  40f619:	int3   
  40f61a:	ror    DWORD PTR [ecx-0x59],cl
  40f61d:	adc    bh,al
  40f61f:	push   edx
  40f620:	mov    esp,ecx
  40f622:	addr16 mov ebp,0x6bfd80dd
  40f628:	xchg   ebx,eax
  40f629:	xchg   edi,eax
  40f62a:	pop    esp
  40f62b:	fistp  DWORD PTR [eax-0x6008d3b]
  40f631:	cdq    
  40f632:	mov    ch,0x20
  40f634:	pop    edx
  40f635:	nop
  40f636:	or     edi,DWORD PTR cs:[ecx-0x4079f82f]
  40f63d:	retf   0x64e1
  40f640:	mov    ecx,0xfa22563e
  40f645:	jl     0x40f651
  40f647:	and    al,0x74
  40f649:	loope  0x40f6c7
  40f64b:	adc    eax,0xe188dc99
  40f650:	(bad)  
  40f651:	mov    BYTE PTR [ebx-0x7fc49636],bl
  40f657:	add    BYTE PTR es:[edi],cl
  40f65a:	cs mov cl,0x43
  40f65d:	(bad)  
  40f65e:	mov    edi,0xee771322
  40f663:	lahf   
  40f664:	adc    ebx,DWORD PTR [edx+0x58c2d451]
  40f66a:	jle    0x40f65f
  40f66c:	xor    eax,0xad61b89a
  40f671:	mov    edi,es
  40f673:	ror    BYTE PTR [esi-0x23],0x6e
  40f677:	inc    ebx
  40f678:	jle    0x40f6f3
  40f67a:	in     al,dx
  40f67b:	pop    ds
  40f67c:	shl    DWORD PTR [edi+0x63bd17ec],cl
  40f682:	mov    edi,0xdbf59039
  40f687:	ror    BYTE PTR [eax+0x7791c19],1
  40f68d:	test   BYTE PTR [edx],dh
  40f68f:	pop    ss
  40f690:	add    al,BYTE PTR [ebx]
  40f692:	pop    ecx
  40f693:	callw  0xdd09
  40f697:	pop    DWORD PTR [esi+ecx*4+0x32]
  40f69b:	sub    ecx,DWORD PTR [edi-0x2d042f27]
  40f6a1:	lock int3 
  40f6a3:	jns    0x40f6d0
  40f6a5:	test   DWORD PTR [ebp+ebx*1+0x43],esi
  40f6a9:	cmp    DWORD PTR [ebp-0x73ee48fc],esi
  40f6af:	out    0x2a,al
  40f6b1:	sub    ebp,DWORD PTR [ebx]
  40f6b3:	sar    BYTE PTR [edi+esi*1],0x32
  40f6b7:	aad    0x82
  40f6b9:	sub    eax,0x328fd00a
  40f6be:	cmp    DWORD PTR [edx-0x14ebb528],0x17266b7d
  40f6c8:	ja     0x40f6b7
  40f6ca:	data16 jae 0x40f6b5
  40f6cd:	push   ds
  40f6ce:	jmp    0x40f705
  40f6d0:	cmp    eax,0x3768a3df
  40f6d5:	push   esp
  40f6d6:	aam    0x2f
  40f6d8:	jbe    0x40f6ed
  40f6da:	xchg   edi,eax
  40f6db:	jns    0x40f67f
  40f6dd:	jle    0x40f6ac
  40f6df:	enter  0xef93,0x8c
  40f6e3:	sub    DWORD PTR [ebp+0x395b541e],ebx
  40f6e9:	push   edx
  40f6ea:	mov    eax,ds:0x3690b0f0
  40f6ef:	jo     0x40f76e
  40f6f1:	xchg   edx,eax
  40f6f2:	ret    
  40f6f3:	sbb    al,0x2b
  40f6f5:	push   esi
  40f6f6:	mov    ebp,0x485ce4de
  40f6fb:	jnp    0x40f6c7
  40f6fd:	imul   ecx,eax,0x67e5eef7
  40f703:	inc    edi
  40f704:	mov    BYTE PTR [ebx],0xbf
  40f707:	xor    BYTE PTR [eax],0x58
  40f70a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f70b:	xor    edi,DWORD PTR [edx]
  40f70d:	dec    ebx
  40f70e:	inc    esi
  40f70f:	outs   dx,DWORD PTR ds:[esi]
  40f710:	adc    dh,BYTE PTR [eax+eax*4-0x6c7e9348]
  40f717:	mov    bl,0xe5
  40f719:	push   ss
  40f71a:	ret    0x87c3
  40f71d:	jne    0x40f792
  40f71f:	ror    ebx,1
  40f721:	outs   dx,BYTE PTR ds:[esi]
  40f722:	sbb    edi,DWORD PTR [eax+0x77]
  40f725:	sub    al,0xb3
  40f727:	data16 sbb al,0xac
  40f72a:	jmp    0x40f6ce
  40f72c:	enter  0xb65b,0xcd
  40f730:	mov    DWORD PTR [ecx],ebx
  40f732:	ficom  DWORD PTR [esi-0x476b4ecf]
  40f738:	push   0xbffcbb2a
  40f73d:	clc    
  40f73e:	das    
  40f73f:	sti    
  40f740:	jns    0x40f766
  40f742:	scas   eax,DWORD PTR es:[edi]
  40f743:	mov    dl,BYTE PTR [ebp+0x40]
  40f746:	ja     0x40f76a
  40f748:	sub    al,BYTE PTR [eax+0x63]
  40f74b:	push   eax
  40f74c:	aad    0xe
  40f74e:	lahf   
  40f74f:	adc    BYTE PTR [ebx],0xae
  40f752:	(bad)  
  40f754:	cdq    
  40f755:	or     ebx,edx
  40f757:	rcl    BYTE PTR [edi],0x51
  40f75a:	add    al,0x74
  40f75c:	inc    ebx
  40f75d:	mov    esi,0x4e5ef3d3
  40f762:	pop    ebx
  40f763:	push   esp
  40f764:	pop    ecx
  40f765:	stos   DWORD PTR es:[edi],eax
  40f766:	xchg   edi,eax
  40f767:	jle    0x40f7b7
  40f769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f76a:	add    al,0x56
  40f76c:	test   cl,ah
  40f76e:	xor    edx,DWORD PTR [ecx-0x32e139e7]
  40f774:	aaa    
  40f775:	addr16 cdq 
  40f777:	aad    0xce
  40f779:	mov    bh,0xc0
  40f77b:	lock rcr BYTE PTR [esi],cl
  40f77e:	(bad)
  40f781:	shl    BYTE PTR [esi+eiz*1],0xfa
  40f785:	pop    ds
  40f786:	sti    
  40f787:	test   al,0xf2
  40f789:	dec    ebx
  40f78a:	mov    bl,0x2f
  40f78c:	push   0x52bb89ed
  40f791:	push   es
  40f792:	retf   0x6e11
  40f795:	and    eax,0xb0a21111
  40f79a:	cwde   
  40f79b:	xchg   DWORD PTR [edi+0x51],ebp
  40f79e:	mov    ecx,gs
  40f7a0:	in     al,dx
  40f7a1:	or     eax,0x49097ec4
  40f7a6:	pop    esp
  40f7a7:	push   ds
  40f7a8:	ins    DWORD PTR es:[edi],dx
  40f7a9:	loopne 0x40f78f
  40f7ab:	daa    
  40f7ac:	data16 gs jge 0x40f80f
  40f7b0:	dec    edi
  40f7b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7b2:	das    
  40f7b3:	mov    bl,0xa9
  40f7b5:	jno    0x40f73a
  40f7b7:	add    cl,BYTE PTR [edi]
  40f7b9:	mov    ah,0xe
  40f7bb:	mov    ds:0x32ebfb96,al
  40f7c0:	dec    DWORD PTR [ebx-0x50]
  40f7c3:	inc    eax
  40f7c4:	int3   
  40f7c5:	adc    esi,DWORD PTR [ebp-0x175e77b]
  40f7cb:	mov    ds,WORD PTR [edx]
  40f7cd:	xchg   esi,eax
  40f7ce:	ds stos DWORD PTR es:[edi],eax
  40f7d0:	or     esi,DWORD PTR [edx+0x7a]
  40f7d3:	repnz clc 
  40f7d5:	adc    ebx,DWORD PTR [ebx]
  40f7d7:	dec    ecx
  40f7d8:	inc    edi
  40f7d9:	rcl    DWORD PTR [eax-0x1f3a8e59],cl
  40f7df:	mov    eax,ebx
  40f7e1:	xor    DWORD PTR [edi],0xb866945c
  40f7e7:	mov    dh,dh
  40f7e9:	arpl   WORD PTR [ebx-0x41c08a9b],cx
  40f7ef:	sub    eax,0x88fc17a6
  40f7f4:	xchg   ecx,eax
  40f7f5:	mov    DWORD PTR [ebp-0x674975d0],edx
  40f7fb:	push   edx
  40f7fc:	test   eax,0x1d229eef
  40f801:	jno    0x40f80a
  40f803:	and    ah,BYTE PTR [edi+ebx*2]
  40f806:	lock pop edi
  40f808:	mov    esp,0xf5b682f7
  40f80d:	or     edi,eax
  40f80f:	in     al,dx
  40f810:	jmp    0x40f794
  40f812:	jb     0x40f7da
  40f814:	loop   0x40f85d
  40f816:	es scas eax,DWORD PTR es:[edi]
  40f818:	sbb    esp,edx
  40f81a:	xchg   DWORD PTR [ebx+0x70d9e89],esp
  40f820:	dec    eax
  40f821:	mov    bl,0x7e
  40f823:	mov    ecx,0x43652abf
  40f828:	test   eax,0xd13fb19d
  40f82d:	or     eax,0x42eb6e61
  40f832:	jl     0x40f841
  40f834:	(bad)  
  40f835:	xor    al,0xfe
  40f837:	fsubr  DWORD PTR [esi]
  40f839:	push   ds
  40f83a:	sbb    dl,BYTE PTR ds:0x583afe3a
  40f840:	sti    
  40f841:	nop
  40f842:	mov    al,0x4c
  40f844:	aam    0xa0
  40f846:	(bad)  
  40f847:	popa   
  40f848:	in     al,dx
  40f849:	scas   eax,DWORD PTR es:[edi]
  40f84a:	jno    0x40f898
  40f84c:	imul   esi,eax,0xffffff98
  40f84f:	pop    ds
  40f850:	or     DWORD PTR [edi+0x79f157e1],0xd5bbcc9e
  40f85a:	sub    al,0x60
  40f85c:	or     ecx,esi
  40f85e:	bound  esi,QWORD PTR [eax-0x20]
  40f861:	scas   eax,DWORD PTR es:[edi]
  40f862:	mov    esp,0x6a7b58fa
  40f867:	jno    0x40f811
  40f869:	or     esp,esp
  40f86b:	ins    DWORD PTR es:[edi],dx
  40f86c:	mov    DWORD PTR [eax+edi*8-0x772329f3],ebx
  40f873:	add    BYTE PTR [esi+0x4d430469],bh
  40f879:	out    dx,eax
  40f87a:	inc    ecx
  40f87b:	xlat   BYTE PTR ds:[ebx]
  40f87c:	lods   al,BYTE PTR ds:[esi]
  40f87d:	dec    ebx
  40f87e:	not    ebx
  40f880:	daa    
  40f881:	call   0x243b1dc0
  40f886:	push   edx
  40f887:	xor    dh,BYTE PTR [ecx-0x2649f725]
  40f88d:	push   eax
  40f88e:	mov    dh,0x42
  40f890:	or     esp,DWORD PTR [eax*2-0x7573df7a]
  40f897:	lods   eax,DWORD PTR ds:[esi]
  40f898:	adc    DWORD PTR [edx],ebx
  40f89a:	adc    al,0x6f
  40f89c:	pop    esp
  40f89d:	adc    ebp,0xffffffa8
  40f8a0:	sbb    DWORD PTR [esi+0x21],ebx
  40f8a3:	mov    edi,0xa8d78ecf
  40f8a8:	enter  0xda42,0x67
  40f8ac:	mov    ebx,0x5b2f455c
  40f8b1:	retf   0xcf13
  40f8b4:	inc    edx
  40f8b5:	fsubr  st(6),st
  40f8b7:	push   cs
  40f8b8:	mov    BYTE PTR [ecx+0x44d57064],0xf4
  40f8bf:	jg     0x40f91a
  40f8c1:	data16 sub al,ah
  40f8c4:	aas    
  40f8c5:	push   es
  40f8c6:	pop    edx
  40f8c7:	out    0x7c,eax
  40f8c9:	cmp    bh,0x8e
  40f8cc:	pusha  
  40f8cd:	xchg   BYTE PTR [eax],al
  40f8cf:	xchg   esi,eax
  40f8d0:	pop    edx
  40f8d1:	pop    ebp
  40f8d2:	nop
  40f8d3:	mov    ebp,0x3dbff673
  40f8d8:	sub    eax,0x78fd6936
  40f8dd:	pusha  
  40f8de:	mov    al,0xa3
  40f8e0:	lods   eax,DWORD PTR gs:[esi]
  40f8e2:	adc    DWORD PTR [ecx+ecx*2-0x1eb5c452],ebx
  40f8e9:	xor    DWORD PTR [esi-0x60],ecx
  40f8ec:	mov    bl,BYTE PTR [ebp+0xc6a31d2]
  40f8f2:	call   0x21472f03
  40f8f7:	add    eax,0x281597fc
  40f8fc:	std    
  40f8fd:	mov    edx,0x5366db3b
  40f902:	loopne 0x40f945
  40f904:	mov    ebp,ecx
  40f906:	bound  esp,QWORD PTR [edx+0x47fb5cec]
  40f90c:	bound  esp,QWORD PTR [ecx]
  40f90e:	sbb    dl,BYTE PTR [ecx-0x54]
  40f911:	mov    dh,0x68
  40f913:	and    eax,0xc4fc5dec
  40f918:	mov    bh,BYTE PTR [eax+0x52]
  40f91b:	int3   
  40f91c:	in     al,dx
  40f91d:	idiv   DWORD PTR [ebx+edi*4]
  40f920:	(bad)  
  40f921:	cmp    BYTE PTR [esi-0x7b],bl
  40f924:	out    dx,al
  40f925:	dec    esi
  40f926:	lds    ebp,FWORD PTR [edi-0xf456718]
  40f92c:	fimul  DWORD PTR [ebp+0xa]
  40f92f:	mov    WORD PTR gs:[edx-0xf],?
  40f933:	xor    DWORD PTR [ebp+0x55],0xffffffc7
  40f937:	call   FWORD PTR [eax]
  40f939:	lock dec esp
  40f93b:	jp     0x40f93d
  40f93d:	sbb    BYTE PTR [edx],bh
  40f93f:	into   
  40f940:	inc    esp
  40f941:	repz and esi,esp
  40f944:	xlat   BYTE PTR ds:[ebx]
  40f945:	xor    ch,BYTE PTR [eax-0x1b]
  40f948:	shl    DWORD PTR [ebx+0x4899adca],1
  40f94e:	add    BYTE PTR [eax+0x529f28f],ah
  40f954:	xchg   ebx,eax
  40f955:	lock and ah,ah
  40f958:	cwde   
  40f959:	aas    
  40f95a:	fdiv   QWORD PTR [edx+0x77]
  40f95d:	xor    ah,BYTE PTR [edx+0x768e96b8]
  40f963:	lods   al,BYTE PTR ds:[esi]
  40f964:	xchg   esi,eax
  40f965:	les    eax,FWORD PTR [edx-0x31]
  40f968:	fcom   QWORD PTR [esi]
  40f96a:	loop   0x40f8f4
  40f96c:	jb     0x40f977
  40f96e:	jb     0x40f9d5
  40f970:	ret    0x4cc1
  40f973:	inc    esi
  40f974:	mov    DWORD PTR [edx+0x5a],0xd9b9972c
  40f97b:	dec    ecx
  40f97c:	bswap  edx
  40f97e:	pop    ebx
  40f97f:	sub    ebx,esi
  40f981:	dec    ebx
  40f982:	stc    
  40f983:	jbe    0x40f9c6
  40f985:	push   0xddde4b54
  40f98a:	fidiv  DWORD PTR [esp+edi*8]
  40f98d:	sub    BYTE PTR [esi],ch
  40f98f:	lds    edx,FWORD PTR [ecx+0x74]
  40f992:	dec    edi
  40f993:	adc    al,0xeb
  40f995:	or     eax,0xf118429c
  40f99a:	cmc    
  40f99b:	push   0x58
  40f99d:	xchg   DWORD PTR [esi-0x1124b0b8],esi
  40f9a3:	xor    al,0xe0
  40f9a5:	out    dx,al
  40f9a6:	test   al,0x96
  40f9a8:	dec    esi
  40f9a9:	or     DWORD PTR [edx-0x52],ebx
  40f9ac:	jge    0x40f9f1
  40f9ae:	test   DWORD PTR [edx],esp
  40f9b0:	cmp    eax,0x8ade0970
  40f9b5:	(bad)  
  40f9b6:	and    BYTE PTR [ebx],ch
  40f9b8:	mov    dl,0xe1
  40f9ba:	stc    
  40f9bb:	push   sp
  40f9bd:	sbb    al,0x8f
  40f9bf:	jae    0x40f95a
  40f9c1:	test   BYTE PTR ds:0xe7d10735,dl
  40f9c7:	sub    DWORD PTR [esi],esp
  40f9c9:	stos   BYTE PTR es:[edi],al
  40f9ca:	inc    ebp
  40f9cb:	sbb    al,BYTE PTR [ebx-0xfdb0022]
  40f9d1:	mov    cl,BYTE PTR [ebx-0x3]
  40f9d4:	push   ecx
  40f9d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9d6:	fwait
  40f9d7:	clc    
  40f9d8:	mov    bh,0xd2
  40f9da:	mov    eax,ds:0xde64eac8
  40f9df:	daa    
  40f9e0:	mov    edx,esi
  40f9e2:	mov    esi,0xcbbbca3d
  40f9e7:	scas   eax,DWORD PTR es:[edi]
  40f9e8:	scas   eax,DWORD PTR es:[edi]
  40f9e9:	fdivr  DWORD PTR [edi]
  40f9eb:	data16 jae 0x40f9b1
  40f9ee:	jmp    0x1910:0x56e22d2f
  40f9f5:	je     0x40fa1c
  40f9f7:	icebp  
  40f9f8:	mov    dl,0x4a
  40f9fa:	inc    esi
  40f9fb:	mov    BYTE PTR [esi],bl
  40f9fd:	outs   dx,BYTE PTR ds:[esi]
  40f9fe:	xor    al,0xe7
  40fa00:	xor    BYTE PTR [ebx-0x80],ch
  40fa03:	dec    esi
  40fa04:	leave  
  40fa05:	adc    DWORD PTR [edi+0x4],0xfffffff0
  40fa09:	cmp    eax,0xc3f1cd2f
  40fa0e:	push   ecx
  40fa0f:	popf   
  40fa10:	mov    esi,0xd9ab1453
  40fa15:	jmp    0x40fa1d
  40fa17:	xchg   ebx,eax
  40fa18:	mov    BYTE PTR [ebx+eiz*1],dl
  40fa1b:	or     ah,0x4
  40fa1e:	dec    esi
  40fa1f:	pushf  
  40fa20:	lods   eax,DWORD PTR ds:[esi]
  40fa21:	sbb    edi,ebx
  40fa23:	adc    DWORD PTR [ecx-0x21],ecx
  40fa26:	sbb    DWORD PTR [esi],ebx
  40fa28:	mov    dl,0x43
  40fa2a:	ins    BYTE PTR es:[edi],dx
  40fa2b:	push   ecx
  40fa2c:	sub    al,0xf6
  40fa2e:	imul   ebp,DWORD PTR [edi],0x7
  40fa31:	clc    
  40fa32:	je     0x40fa55
  40fa34:	add    ah,ch
  40fa36:	retf   
  40fa37:	int    0x30
  40fa39:	lods   al,BYTE PTR ds:[esi]
  40fa3a:	arpl   WORD PTR [ebp-0x52],bp
  40fa3d:	jmp    0xf452:0x1475d621
  40fa44:	or     ebp,0x30958f78
  40fa4a:	inc    ecx
  40fa4b:	xchg   edi,eax
  40fa4c:	dec    ecx
  40fa4d:	(bad)
  40fa50:	adc    DWORD PTR [ecx],0xef77ca1d
  40fa56:	and    BYTE PTR [edi-0x6b58c376],ah
  40fa5c:	shl    BYTE PTR [edx-0x3d60140e],cl
  40fa62:	xchg   esi,eax
  40fa63:	addr16 adc esp,ecx
  40fa66:	stc    
  40fa67:	pop    ds
  40fa68:	fild   QWORD PTR [edx-0x72]
  40fa6b:	xor    BYTE PTR [edi-0x346e5558],bl
  40fa71:	jmp    0x40fa2d
  40fa73:	push   DWORD PTR [ebx-0x3a]
  40fa76:	mov    dh,0x42
  40fa78:	aaa    
  40fa79:	inc    edi
  40fa7a:	jl     0x40fa90
  40fa7c:	xchg   DWORD PTR [edi+0xbcbd790],eax
  40fa82:	ficomp DWORD PTR [edi+0x4590dca3]
  40fa88:	mov    ecx,0xb5700009
  40fa8d:	ins    DWORD PTR es:[edi],dx
  40fa8e:	push   esp
  40fa8f:	push   eax
  40fa90:	stos   DWORD PTR es:[edi],eax
  40fa91:	imul   edx,DWORD PTR [edx],0xb85dc75d
  40fa97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa98:	lods   eax,DWORD PTR ds:[esi]
  40fa99:	xchg   esi,eax
  40fa9a:	sar    DWORD PTR [edi-0x37c2b9f6],0x24
  40faa1:	js     0x40faa5
  40faa3:	pop    esi
  40faa4:	pop    edi
  40faa5:	pusha  
  40faa6:	fcmove st,st(5)
  40faa8:	mov    ebp,0xe710f885
  40faad:	into   
  40faae:	xchg   DWORD PTR [ebx+0x6f],eax
  40fab1:	xor    BYTE PTR [esi+0x54],0xdc
  40fab5:	mov    BYTE PTR [edx],ah
  40fab7:	pop    ebx
  40fab8:	add    BYTE PTR [ebx+0x256357f2],dh
  40fabe:	imul   esp,DWORD PTR [edx],0xa
  40fac1:	(bad)  
  40fac2:	xchg   ebx,eax
  40fac3:	(bad)  
  40fac4:	mov    ds:0x7740fe52,eax
  40fac9:	icebp  
  40faca:	xor    ch,BYTE PTR [esi]
  40facc:	dec    esp
  40facd:	lods   eax,DWORD PTR ds:[esi]
  40face:	pop    edi
  40facf:	fsubr  QWORD PTR [edi-0x1baac5c2]
  40fad5:	sub    esp,ecx
  40fad7:	stc    
  40fad8:	jmp    0x41fa0861
  40fadd:	dec    edi
  40fade:	sbb    esi,DWORD PTR [eax]
  40fae0:	int3   
  40fae1:	mov    dh,0xfc
  40fae3:	add    eax,0x7e5a1317
  40fae8:	sbb    al,0x7d
  40faea:	jmp    0x40faea
  40faec:	xor    DWORD PTR [eax],0x7c6ee266
  40faf2:	in     eax,dx
  40faf3:	imul   ebx,DWORD PTR [eax-0x39b1c81e],0xfbe565b4
  40fafd:	or     BYTE PTR [ecx-0x1d035032],dh
  40fb03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb04:	ja     0x40fa93
  40fb06:	shl    BYTE PTR [ebx+0x476bc8ef],1
  40fb0c:	mov    ebp,0x6e6075d8
  40fb11:	adc    edx,0x673e3a15
  40fb17:	mov    al,0xda
  40fb19:	test   eax,0xa7ce8240
  40fb1e:	mov    ebp,0x9b0c3c17
  40fb23:	push   edi
  40fb24:	cld    
  40fb25:	pushw  0xffa5
  40fb28:	enter  0x49c6,0xeb
  40fb2c:	push   ds
  40fb2d:	pushf  
  40fb2e:	mov    WORD PTR [esi],ss
  40fb30:	dec    esp
  40fb31:	mov    esi,0xd4c6301f
  40fb36:	dec    ebx
  40fb37:	jmp    0xdb9b:0xc3bcec65
  40fb3e:	pop    esi
  40fb3f:	call   FWORD PTR [ebp-0x96e45b1]
  40fb45:	call   0x5230:0x3e5f3d01
  40fb4c:	sbb    DWORD PTR [ecx+ebx*8],esp
  40fb4f:	xchg   edx,eax
  40fb50:	push   DWORD PTR [edx+0x5f3abc6d]
  40fb56:	std    
  40fb57:	mov    DWORD PTR [eax-0x1a8c27e8],ebx
  40fb5d:	shr    DWORD PTR [edi],0x40
  40fb60:	(bad)  
  40fb61:	loopne 0x40fb81
  40fb63:	sbb    al,BYTE PTR [ebp-0x46]
  40fb66:	jbe    0x40fbcb
  40fb68:	fs sub BYTE PTR es:[edx-0x5],bl
  40fb6d:	ds jmp 0x71d5:0x1c50572a
  40fb75:	sbb    DWORD PTR [edx+0x1ff699e],ebx
  40fb7b:	sub    bh,al
  40fb7d:	bound  edx,QWORD PTR [eax+eax*2+0x75cf224]
  40fb84:	add    eax,0xb7987bcc
  40fb89:	movzx  ebx,BYTE PTR [edx-0xe64fc2b]
  40fb90:	jge    0x40fb3c
  40fb92:	fwait
  40fb93:	sbb    edi,DWORD PTR [ebx-0x16]
  40fb96:	push   edx
  40fb97:	or     eax,0xaff6080f
  40fb9c:	mov    edx,DWORD PTR [eax]
  40fb9e:	out    0x71,eax
  40fba0:	jge    0x40fb72
  40fba2:	fistp  DWORD PTR [ecx-0x24681fb9]
  40fba8:	xor    DWORD PTR [edi],esp
  40fbaa:	ins    BYTE PTR es:[edi],dx
  40fbab:	bound  edi,QWORD PTR [ebp+0x24]
  40fbae:	inc    esp
  40fbaf:	dec    ebx
  40fbb0:	cmc    
  40fbb1:	std    
  40fbb2:	jmp    0x40fb99
  40fbb4:	xchg   esi,eax
  40fbb5:	std    
  40fbb6:	push   cs
  40fbb7:	in     eax,dx
  40fbb8:	punpcklbw mm7,DWORD PTR [edi*1-0x3a4790ca]
  40fbc0:	sbb    DWORD PTR [ebp+edi*1-0x6a],0x79
  40fbc5:	mov    ds:0x5e654fd5,al
  40fbca:	ds pop ds
  40fbcc:	mov    edi,0x1d6a6887
  40fbd1:	jo     0x40fc2e
  40fbd3:	dec    edx
  40fbd4:	xchg   edi,eax
  40fbd5:	pop    eax
  40fbd6:	ror    DWORD PTR [esp+edi*1+0x70],0x28
  40fbdb:	mul    DWORD PTR [ecx-0xb]
  40fbde:	jb     0x40fbcf
  40fbe0:	ja     0x40fc5f
  40fbe2:	mov    dh,BYTE PTR [edi-0x509b9a54]
  40fbe8:	repz fwait
  40fbea:	into   
  40fbeb:	mov    dl,0x92
  40fbed:	push   0x897224c1
  40fbf2:	lea    edx,[ebp+esi*2+0x1a]
  40fbf6:	(bad)  
  40fbf7:	mov    ds:0xb8b4e641,eax
  40fbfc:	shl    BYTE PTR [edi+0x6d],1
  40fbff:	inc    eax
  40fc00:	sbb    ch,BYTE PTR [ebx+edx*2]
  40fc03:	jo     0x40fbe6
  40fc05:	sahf   
  40fc06:	retf   
  40fc07:	sbb    esi,DWORD PTR [ecx+0x19]
  40fc0a:	daa    
  40fc0b:	cld    
  40fc0c:	or     BYTE PTR [esi+esi*4],0x4d
  40fc10:	pop    ds
  40fc11:	pop    edx
  40fc12:	ret    
  40fc13:	xchg   edi,eax
  40fc14:	mov    BYTE PTR [esp+ecx*1-0x7dd8d4f0],bh
  40fc1b:	dec    esi
  40fc1c:	inc    eax
  40fc1d:	inc    ebx
  40fc1e:	inc    esi
  40fc1f:	jmp    0xa705:0x954161e3
  40fc26:	dec    esp
  40fc27:	outs   dx,BYTE PTR ds:[esi]
  40fc28:	dec    ebx
  40fc29:	in     eax,0x59
  40fc2b:	shl    DWORD PTR [edx],cl
  40fc2d:	ret    0xcafe
  40fc30:	dec    eax
  40fc31:	cmp    DWORD PTR [edx+0x59],ebp
  40fc34:	ins    DWORD PTR es:[edi],dx
  40fc35:	and    eax,0x61a95e25
  40fc3a:	mov    edx,0xb9827693
  40fc3f:	pop    ecx
  40fc40:	sub    esp,esp
  40fc42:	mov    ch,0x6a
  40fc44:	jno    0x40fbdc
  40fc46:	dec    ebx
  40fc47:	mov    ebp,DWORD PTR [esi]
  40fc49:	lods   al,BYTE PTR ds:[esi]
  40fc4a:	aas    
  40fc4b:	mov    edi,0xbaa26300
  40fc50:	inc    ebp
  40fc51:	shl    BYTE PTR [esi],0x67
  40fc54:	stc    
  40fc55:	push   cs
  40fc56:	mov    edx,0x22527bce
  40fc5b:	mov    dl,0x70
  40fc5d:	xlat   BYTE PTR ds:[ebx]
  40fc5e:	or     BYTE PTR [ecx+0x25af4526],0xe2
  40fc65:	pop    ecx
  40fc66:	clc    
  40fc67:	push   ss
  40fc68:	pop    ebp
  40fc69:	mov    ds:0x96b3393c,al
  40fc6e:	sub    bh,BYTE PTR [eax]
  40fc70:	jno    0x40fcc2
  40fc72:	fst    QWORD PTR [ebp+0x8]
  40fc75:	in     al,0x4
  40fc77:	shr    eax,1
  40fc79:	lea    edi,[ebp-0x50]
  40fc7c:	les    ebp,FWORD PTR [ecx+0x79]
  40fc7f:	adc    dh,BYTE PTR [eax-0x1c90bcde]
  40fc85:	jno    0x40fd04
  40fc87:	fs inc esi
  40fc89:	scas   al,BYTE PTR es:[edi]
  40fc8a:	xlat   BYTE PTR ds:[ebx]
  40fc8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc8c:	add    DWORD PTR [edi-0x5a],ebx
  40fc8f:	mov    ?,WORD PTR [ebp+0x34]
  40fc92:	cmp    eax,0xd76a38a7
  40fc97:	ins    DWORD PTR es:[edi],dx
  40fc98:	ins    DWORD PTR es:[edi],dx
  40fc99:	sbb    DWORD PTR [ecx+0x60e43646],ebx
  40fc9f:	(bad)  
  40fca0:	cmp    al,dh
  40fca2:	sahf   
  40fca3:	std    
  40fca4:	sbb    eax,0x6a46c521
  40fca9:	push   esi
  40fcaa:	and    BYTE PTR [esi-0x6016e1d0],cl
  40fcb0:	fdivr  st,st(2)
  40fcb2:	outs   dx,BYTE PTR ds:[esi]
  40fcb3:	mov    ds:0xc75fc517,eax
  40fcb8:	(bad)  
  40fcb9:	xchg   esp,eax
  40fcba:	push   edx
  40fcbb:	aad    0x1e
  40fcbd:	pop    es
  40fcbe:	or     al,0x77
  40fcc0:	icebp  
  40fcc1:	cmp    eax,DWORD PTR ds:0xd6c3d6a
  40fcc7:	ficom  DWORD PTR ds:0xa385fd8f
  40fccd:	jo     0x40fc85
  40fccf:	and    BYTE PTR [edx+0x3c],cl
  40fcd2:	jp     0x40fc8d
  40fcd4:	jne    0x40fc5e
  40fcd6:	enter  0x617f,0xcf
  40fcda:	fs ss (bad) 
  40fcdd:	aam    0xea
  40fcdf:	loop   0x40fd4e
  40fce1:	sub    eax,0x570376b7
  40fce6:	add    BYTE PTR [edi+0x7f3aa058],bh
  40fcec:	inc    edi
  40fced:	shl    DWORD PTR [ecx-0x62],cl
  40fcf0:	sbb    ah,BYTE PTR [ebp+0x1c]
  40fcf3:	shl    BYTE PTR [edi],cl
  40fcf5:	and    eax,0xbebbb075
  40fcfa:	dec    eax
  40fcfb:	dec    ecx
  40fcfc:	xor    al,0x56
  40fcfe:	out    dx,eax
  40fcff:	mov    bl,0xc0
  40fd01:	fwait
  40fd02:	je     0x40fcce
  40fd04:	sub    ebp,DWORD PTR [edx+eax*2-0x2071c2ff]
  40fd0b:	rol    DWORD PTR [edx],cl
  40fd0d:	(bad)  
  40fd0e:	int    0x23
  40fd10:	dec    eax
  40fd11:	sub    al,0x89
  40fd13:	ins    DWORD PTR es:[edi],dx
  40fd14:	(bad)  
  40fd15:	push   ss
  40fd16:	jbe    0x40fd95
  40fd18:	xor    al,0x8b
  40fd1a:	add    eax,0xe5abb6f2
  40fd1f:	cmp    eax,0x879956df
  40fd24:	adc    ch,BYTE PTR [ecx+0x6442911b]
  40fd2a:	in     eax,0x8e
  40fd2c:	inc    edi
  40fd2d:	shl    ebp,0x52
  40fd30:	fsub   DWORD PTR [ebp+0x3384b177]
  40fd36:	retf   0x823f
  40fd39:	hlt    
  40fd3a:	xor    cl,bh
  40fd3c:	dec    esi
  40fd3d:	out    dx,al
  40fd3e:	dec    esi
  40fd3f:	jno    0x40fd46
  40fd41:	pop    ss
  40fd42:	lods   eax,DWORD PTR ds:[esi]
  40fd43:	inc    ecx
  40fd44:	or     DWORD PTR [esi+esi*8+0x6d],edx
  40fd48:	frndint 
  40fd4a:	imul   ecx,DWORD PTR [edx-0x4c],0x5692f377
  40fd51:	dec    esp
  40fd52:	popa   
  40fd53:	push   edx
  40fd54:	lock shr dh,0x36
  40fd58:	js     0x40fd01
  40fd5a:	stos   BYTE PTR es:[edi],al
  40fd5b:	mov    dh,ah
  40fd5d:	pop    ecx
  40fd5e:	fistp  DWORD PTR [eiz*4+0x755de9f9]
  40fd65:	loopne 0x40fd01
  40fd67:	adc    DWORD PTR [ecx],esp
  40fd69:	inc    esp
  40fd6a:	arpl   di,di
  40fd6c:	ficom  DWORD PTR [ecx+0x2c]
  40fd6f:	mov    ebx,0x32204f72
  40fd74:	std    
  40fd75:	mov    bl,0x87
  40fd77:	push   edx
  40fd78:	iret   
  40fd79:	fsin   
  40fd7b:	mov    al,ds:0x30b237d9
  40fd80:	dec    edx
  40fd81:	idiv   DWORD PTR [eax]
  40fd83:	test   BYTE PTR [ebx-0x1927ef50],0x2a
  40fd8a:	retf   0x6fa6
  40fd8d:	pop    esi
  40fd8e:	dec    edx
  40fd8f:	xchg   edx,eax
  40fd90:	push   ecx
  40fd91:	mov    ds:0xe065abd0,al
  40fd96:	pop    edi
  40fd97:	xor    edx,0x7d08f79a
  40fd9d:	rcl    DWORD PTR [eax+0x19],cl
  40fda0:	fstp   TBYTE PTR [ebx]
  40fda2:	daa    
  40fda3:	push   ebp
  40fda4:	push   ebx
  40fda5:	imul   esp,DWORD PTR ds:0xa0b1a9ac,0x23
  40fdac:	sahf   
  40fdad:	daa    
  40fdae:	xchg   BYTE PTR [ebp+0x23],bl
  40fdb1:	imul   esp,DWORD PTR [edx+eiz*4+0x5fa3cf68],0x63eae7cf
  40fdbc:	stos   BYTE PTR es:[edi],al
  40fdbd:	and    al,0x9d
  40fdbf:	pop    ss
  40fdc0:	ror    BYTE PTR [eax],cl
  40fdc2:	out    0x1b,eax
  40fdc4:	mov    esi,0x13512d51
  40fdc9:	dec    ebp
  40fdca:	cs fs loop 0x40fe2e
  40fdce:	test   BYTE PTR [ecx],ah
  40fdd0:	xchg   esi,eax
  40fdd1:	xor    dl,bh
  40fdd3:	cmp    esi,DWORD PTR [eax-0x33a799c]
  40fdd9:	mov    ebp,edx
  40fddb:	xchg   ebx,eax
  40fddc:	ins    BYTE PTR es:[edi],dx
  40fddd:	mov    ds:0x6ede1b73,al
  40fde2:	cdq    
  40fde3:	xor    al,BYTE PTR [eax]
  40fde5:	and    BYTE PTR [eax-0x20],ah
  40fde8:	xlat   BYTE PTR ds:[ebx]
  40fde9:	add    eax,0x1fa614c2
  40fdee:	mov    ebp,0xed09ec9b
  40fdf3:	scas   eax,DWORD PTR es:[edi]
  40fdf4:	adc    eax,0xcb53d88
  40fdf9:	push   0xffffff9f
  40fdfb:	int3   
  40fdfc:	cmp    edx,DWORD PTR [edx+0x5b]
  40fdff:	mov    cl,0x25
  40fe01:	out    0xe1,eax
  40fe03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe04:	mov    ebx,0xa5ee6efd
  40fe09:	and    BYTE PTR [ebx-0x35b352e1],bl
  40fe0f:	push   esi
  40fe10:	or     esi,DWORD PTR [ecx*4-0x267dcfa5]
  40fe17:	dec    eax
  40fe18:	mov    dh,bl
  40fe1a:	pop    ss
  40fe1b:	enter  0x60db,0xb3
  40fe1f:	das    
  40fe20:	mov    dh,0x93
  40fe22:	or     al,0x12
  40fe24:	and    dh,BYTE PTR [edx+0x24]
  40fe27:	push   ebx
  40fe28:	mov    cl,0xe5
  40fe2a:	pushf  
  40fe2b:	inc    edx
  40fe2c:	popf   
  40fe2d:	lea    edx,[ecx+0x6e]
  40fe30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe31:	inc    ebp
  40fe32:	inc    ebp
  40fe33:	or     ebp,esp
  40fe35:	push   0xcf3c6da7
  40fe3a:	pop    eax
  40fe3b:	cmp    BYTE PTR [esi+eiz*2],al
  40fe3e:	cmp    DWORD PTR [esi+0x47],eax
  40fe41:	dec    esp
  40fe42:	pop    esi
  40fe43:	fstp   QWORD PTR [esi-0xd86eb8]
  40fe49:	inc    ebx
  40fe4a:	pop    esi
  40fe4b:	jmp    0x158e:0x415ffc2c
  40fe52:	ror    BYTE PTR [ecx+0xac2a1b6],1
  40fe58:	rol    ebp,0x9
  40fe5b:	sbb    edi,DWORD PTR [esi-0x42]
  40fe5e:	mov    dl,0x6
  40fe60:	gs dec eax
  40fe62:	icebp  
  40fe63:	ffree  st(4)
  40fe65:	push   edi
  40fe66:	dec    ebp
  40fe67:	sub    eax,0xe4ba15f1
  40fe6c:	sub    DWORD PTR [edx],esi
  40fe6e:	push   0x2ea47912
  40fe73:	int    0x51
  40fe75:	mov    fs,WORD PTR [ebx]
  40fe77:	ror    BYTE PTR [ecx+0x27],cl
  40fe7a:	fimul  WORD PTR [esi+0x4659971c]
  40fe80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe81:	jns    0x40fe31
  40fe83:	lods   eax,DWORD PTR ds:[esi]
  40fe84:	jbe    0x40fed1
  40fe86:	fstp   TBYTE PTR [edx-0x2f]
  40fe89:	mov    esp,DWORD PTR [eax+ecx*2+0x20cddac3]
  40fe90:	popa   
  40fe91:	mov    dl,0x3
  40fe93:	aad    0x4e
  40fe95:	sub    DWORD PTR [ebx-0x3c],ecx
  40fe98:	mov    ch,0x9e
  40fe9a:	rcr    DWORD PTR [esi+0x326585ad],0x2a
  40fea1:	adc    al,0x19
  40fea3:	cmp    eax,0x4f62c04f
  40fea8:	cli    
  40fea9:	xchg   edx,eax
  40feaa:	iret   
  40feab:	inc    edx
  40feac:	pop    ds
  40fead:	frstor [esi-0x2a1bc5a3]
  40feb3:	mov    esi,0xdad9b710
  40feb8:	bound  eax,QWORD PTR [ecx+0xd0dcb2a]
  40febe:	jmp    0x40fe84
  40fec0:	cdq    
  40fec1:	gs ss retf 0xb025
  40fec6:	add    ebx,DWORD PTR [edi-0x2a617e86]
  40fecc:	fst    DWORD PTR [esp+eiz*8-0x714b043]
  40fed3:	adc    BYTE PTR [edi],al
  40fed5:	scas   al,BYTE PTR es:[edi]
  40fed6:	dec    edi
  40fed7:	mov    BYTE PTR [edi+0x7ab6604e],al
  40fedd:	mov    ecx,0xeae32f57
  40fee2:	test   BYTE PTR [edx+0x33],ch
  40fee5:	push   cs
  40fee6:	pushf  
  40fee7:	sbb    BYTE PTR [edi+0x73],ch
  40feea:	loopne 0x40fe72
  40feec:	js     0x40fea8
  40feee:	push   DWORD PTR [esi-0x2a]
  40fef1:	and    BYTE PTR [eax],dl
  40fef3:	mov    ebx,0x576276c5
  40fef8:	ret    
  40fef9:	sbb    BYTE PTR [eax-0x7dcbb486],bl
  40feff:	(bad)  
  40ff00:	lock retf 
  40ff02:	or     bh,BYTE PTR [eax+0x39868ef7]
  40ff08:	xchg   esi,eax
  40ff09:	jno    0x40ff64
  40ff0b:	push   edi
  40ff0c:	push   0x39
  40ff0e:	xchg   edx,eax
  40ff0f:	pop    ds
  40ff10:	das    
  40ff11:	rol    BYTE PTR [esi+0x503415b9],1
  40ff17:	outs   dx,DWORD PTR ds:[esi]
  40ff18:	xor    eax,0x68f7e681
  40ff1d:	sahf   
  40ff1e:	jne    0x40fef4
  40ff20:	and    ebx,DWORD PTR [edx-0x441021d5]
  40ff26:	mov    gs:0x43de83b0,al
  40ff2c:	test   al,0x3f
  40ff2e:	hlt    
  40ff2f:	(bad)
  40ff33:	arpl   WORD PTR [ecx+0x11],di
  40ff36:	jno    0x40ff16
  40ff38:	xchg   ebp,eax
  40ff39:	cdq    
  40ff3a:	icebp  
  40ff3b:	outs   dx,BYTE PTR ds:[esi]
  40ff3c:	arpl   WORD PTR [edx+0x66],dx
  40ff3f:	pushf  
  40ff40:	scas   al,BYTE PTR es:[edi]
  40ff41:	in     eax,0xd5
  40ff43:	cmp    al,0x9e
  40ff45:	pop    edi
  40ff46:	aaa    
  40ff47:	add    eax,0xb5824624
  40ff4c:	jge    0x40ff02
  40ff4e:	les    esp,FWORD PTR ds:0x803aca5a
  40ff54:	fdivr  QWORD PTR [esi]
  40ff56:	sbb    BYTE PTR [ecx-0x5a],dl
  40ff59:	dec    ecx
  40ff5a:	xchg   cl,dl
  40ff5c:	mov    ebp,DWORD PTR gs:[esi+0x4e]
  40ff60:	or     dh,BYTE PTR [edi+0x7a7ea291]
  40ff66:	ins    BYTE PTR es:[edi],dx
  40ff67:	ret    0x4650
  40ff6a:	xor    ebx,esp
  40ff6c:	(bad)  
  40ff6e:	ror    DWORD PTR [edx+0x37],cl
  40ff71:	inc    esp
  40ff72:	mov    esp,0x35b98b55
  40ff77:	or     DWORD PTR [ebx-0x31],ecx
  40ff7a:	ss inc ebp
  40ff7c:	ds stos BYTE PTR es:[edi],al
  40ff7e:	pop    es
  40ff7f:	rep lods al,BYTE PTR gs:[esi]
  40ff82:	int3   
  40ff83:	or     DWORD PTR [ebx],ebp
  40ff85:	jecxz  0x40ffbf
  40ff87:	mov    al,0xe4
  40ff89:	ins    DWORD PTR es:[edi],dx
  40ff8a:	push   esp
  40ff8b:	jno    0x40ff74
  40ff8d:	push   cs
  40ff8e:	stc    
  40ff8f:	adc    esp,DWORD PTR [ebx-0x3b2b5b2a]
  40ff95:	cmp    BYTE PTR [edi+edi*4+0x3a9aa688],0x2f
  40ff9d:	jne    0x40ff5e
  40ff9f:	dec    edx
  40ffa0:	adc    ebp,esp
  40ffa2:	retf   0x91a7
  40ffa5:	retf   0x3222
  40ffa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffa9:	cli    
  40ffaa:	adc    al,0xfa
  40ffac:	shl    BYTE PTR [ebx+0x6b],1
  40ffaf:	push   esi
  40ffb0:	icebp  
  40ffb1:	xor    DWORD PTR [ebp+0x53],ebx
  40ffb4:	or     edi,esp
  40ffb6:	dec    esi
  40ffb7:	rcl    BYTE PTR [esp+edi*1+0x7d224454],1
  40ffbe:	imul   edi,DWORD PTR [esi],0x37416f64
  40ffc4:	das    
  40ffc5:	call   0x5022:0x21e37856
  40ffcc:	cmp    ch,BYTE PTR [ebx-0x7a]
  40ffcf:	bound  ecx,QWORD PTR [esp+edi*2]
  40ffd2:	das    
  40ffd3:	hlt    
  40ffd4:	stos   DWORD PTR es:[edi],eax
  40ffd5:	jae    0x40ff87
  40ffd7:	mov    cl,BYTE PTR [edi]
  40ffd9:	jge    0x40ffac
  40ffdb:	adc    BYTE PTR [esp+ecx*8],cl
  40ffde:	add    BYTE PTR [edx+0x6da88873],ah
  40ffe4:	cmp    BYTE PTR [edx-0x348e7d70],al
  40ffea:	sub    esp,esi
  40ffec:	rcr    BYTE PTR [ebx-0xb391100],1
  40fff2:	cmp    DWORD PTR [ecx+0x9],eax
  40fff5:	inc    ebx
  40fff6:	ja     0x40ffce
  40fff8:	rol    BYTE PTR [eax],cl
  40fffa:	xor    DWORD PTR [ebx+0x17],esi
  40fffd:	hlt    
  40fffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffff:	inc    edx
  410000:	xchg   ebp,eax
  410001:	jle    0x40ffd5
  410003:	mov    eax,ds:0x37af495a
  410008:	and    eax,0x11f38124
  41000d:	xchg   edi,eax
  41000e:	pop    eax
  41000f:	or     DWORD PTR [edx+0xde99518],0xffffffc5
  410016:	pop    esi
  410017:	sub    al,0xb7
  410019:	jae    0x40fff8
  41001b:	ss out dx,eax
  41001d:	jns    0x40ffe6
  41001f:	mov    edx,0x72fe41c3
  410024:	adc    al,0x1
  410026:	addr16 xchg esi,eax
  410028:	shl    DWORD PTR [edx+esi*2],cl
  41002b:	std    
  41002c:	stos   DWORD PTR es:[edi],eax
  41002d:	mul    cl
  41002f:	js     0x41001b
  410031:	xchg   BYTE PTR [ebx-0x13962a1c],al
  410037:	mov    esp,0xd2b4f235
  41003c:	xor    BYTE PTR [ebp+0x6d],0x9c
  410040:	pop    ebx
  410041:	fmulp  st(7),st
  410043:	stc    
  410044:	cs dec edx
  410046:	jbe    0x410084
  410048:	mov    cl,0x48
  41004a:	daa    
  41004b:	pop    ss
  41004c:	js     0x40ffd6
  41004e:	test   BYTE PTR ds:[ebx],0xa4
  410052:	(bad)  
  410055:	imul   edx,DWORD PTR [esi-0x70],0xfffffffe
  410059:	xchg   DWORD PTR [esi+eax*1+0x4f],ecx
  41005d:	loop   0x40ffe4
  41005f:	out    0x91,al
  410061:	and    BYTE PTR [eax+0x19ccdf96],0xea
  410068:	lea    edi,[ebx+ebp*1+0x2f]
  41006c:	test   eax,0x26eccc73
  410071:	call   FWORD PTR [ebx-0x4e]
  410074:	icebp  
  410075:	sbb    esi,ebp
  410077:	into   
  410078:	mov    DWORD PTR [ecx],ebx
  41007a:	gs cli 
  41007c:	adc    ch,BYTE PTR [edx]
  41007e:	in     al,dx
  41007f:	inc    eax
  410080:	mov    ebp,DWORD PTR [ecx+0x6b]
  410083:	repz jno 0x410043
  410086:	sbb    ecx,DWORD PTR [ebp+0x30597203]
  41008c:	xlat   BYTE PTR ds:[ebx]
  41008d:	push   edx
  41008e:	mov    bl,0xff
  410090:	enter  0xe877,0x96
  410094:	idiv   DWORD PTR [esi-0x22]
  410097:	fdiv   QWORD PTR [ecx-0x9]
  41009a:	jp     0x4100d0
  41009c:	je     0x410080
  41009e:	iret   
  41009f:	es sbb esi,eax
  4100a2:	sub    edx,ebp
  4100a4:	imul   esi,eax,0x56fa92c3
  4100aa:	leave  
  4100ab:	mov    bh,0xf7
  4100ad:	mov    dl,0xf5
  4100af:	addr16 pop es
  4100b1:	jbe    0x4100d3
  4100b3:	cmp    DWORD PTR [ecx],ecx
  4100b5:	xor    BYTE PTR [edx],al
  4100b7:	pop    edx
  4100b8:	pop    edi
  4100b9:	stos   BYTE PTR es:[edi],al
  4100ba:	call   0x621ef671
  4100bf:	aaa    
  4100c0:	push   edx
  4100c1:	mov    ebp,esi
  4100c3:	idiv   BYTE PTR ds:0xf9e1dcdb
  4100c9:	xchg   ebx,eax
  4100ca:	daa    
  4100cb:	sub    eax,0x536b121b
  4100d0:	mov    edx,0xa1c44814
  4100d5:	xchg   bh,dl
  4100d7:	add    bl,dl
  4100d9:	mov    ds:0x73b64cff,eax
  4100de:	test   al,0xf4
  4100e0:	mov    eax,0x140c4ea1
  4100e5:	sbb    ah,dh
  4100e7:	or     DWORD PTR ds:0x2b0d5376,ebp
  4100ed:	pushf  
  4100ee:	adc    edx,DWORD PTR [ebp-0x5e]
  4100f1:	cmp    esp,ebp
  4100f3:	sub    al,0xee
  4100f5:	rcpps  xmm7,XMMWORD PTR [eax+ebx*2-0x586989c9]
  4100fd:	mov    ds:0x33e3c75b,al
  410102:	popa   
  410103:	call   0xa36a832d
  410108:	out    dx,al
  410109:	cmp    al,0x3d
  41010b:	mov    ebx,0xf075d807
  410110:	jmp    0xadd30c92
  410115:	daa    
  410116:	ins    DWORD PTR es:[edi],dx
  410117:	jnp    0x4100f4
  410119:	pop    edi
  41011a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41011b:	or     eax,0xdd721486
  410120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410121:	in     eax,0xb9
  410123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410124:	xchg   ebx,eax
  410125:	loope  0x410127
  410127:	pop    ds
  410128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410129:	mov    BYTE PTR [eax+0x7735fa0c],ch
  41012f:	push   esi
  410130:	lods   eax,DWORD PTR ds:[esi]
  410131:	mov    ss,esi
  410133:	jle    0x410162
  410135:	jae    0x410168
  410137:	aad    0xa5
  410139:	xor    eax,0x13435464
  41013e:	sub    edx,DWORD PTR [ebx-0x49]
  410141:	xor    edx,ebp
  410143:	dec    ecx
  410144:	adc    BYTE PTR [ebp-0xe],dh
  410147:	mov    cl,0x70
  410149:	test   DWORD PTR [esi-0x4d],esp
  41014c:	outs   dx,DWORD PTR ds:[esi]
  41014d:	xchg   ebp,eax
  41014e:	fld    TBYTE PTR [esi-0x29e2f1d7]
  410154:	repz add al,0x0
  410157:	sub    edi,esp
  410159:	icebp  
  41015a:	or     DWORD PTR [esi],esp
  41015c:	or     bl,bl
  41015e:	push   ss
  41015f:	fcmovnu st,st(7)
  410161:	mov    ecx,0xe88f98cb
  410166:	div    BYTE PTR [ebx+0x79]
  410169:	xor    DWORD PTR [ebx+0x1b],edi
  41016c:	ins    BYTE PTR es:[edi],dx
  41016d:	sbb    ecx,DWORD PTR [edi+ecx*2+0x67]
  410171:	ret    0xc4d8
  410174:	retf   0x9d6c
  410177:	retf   
  410178:	mov    eax,ds:0x135bc14a
  41017d:	pop    ebp
  41017e:	add    DWORD PTR [edi+ebp*2],esp
  410181:	outs   dx,BYTE PTR ds:[esi]
  410182:	dec    esi
  410183:	sbb    bl,cl
  410185:	cwde   
  410186:	jmp    0x9889e68d
  41018b:	adc    BYTE PTR [edi+0x2209a31e],ch
  410191:	dec    esp
  410192:	mov    eax,0xc6f316e2
  410197:	mov    BYTE PTR [eax],dl
  410199:	mov    cl,0x5d
  41019b:	aas    
  41019c:	dec    edi
  41019d:	and    eax,0x1e82a11c
  4101a2:	jns    0x4101bf
  4101a4:	jle    0x410155
  4101a6:	sbb    eax,0xfa4fa48
  4101ab:	les    ebp,FWORD PTR [edx-0x24]
  4101ae:	inc    ecx
  4101af:	jmp    0xa04f:0x2e0d4d8c
  4101b6:	push   cs
  4101b7:	out    0x7a,eax
  4101b9:	imul   ecx,DWORD PTR [ecx],0xffffffce
  4101bc:	push   es
  4101bd:	pop    esp
  4101be:	dec    edx
  4101bf:	mov    DWORD PTR [eax],ebp
  4101c1:	xor    BYTE PTR gs:[ecx+0x3ab7f474],dl
  4101c8:	jmp    0x4557:0xfd1076cd
  4101cf:	pop    edx
  4101d0:	sbb    eax,0xa730bd4b
  4101d5:	dec    esp
  4101d6:	out    dx,eax
  4101d7:	popa   
  4101d8:	or     ebp,DWORD PTR [ebx]
  4101da:	xchg   esi,eax
  4101db:	scas   eax,DWORD PTR es:[edi]
  4101dc:	iret   
  4101dd:	icebp  
  4101de:	jmp    0xed7e:0x8aa58ec9
  4101e5:	std    
  4101e6:	retf   0x9620
  4101e9:	gs retf 
  4101eb:	das    
  4101ec:	retf   
  4101ed:	lahf   
  4101ee:	xor    eax,DWORD PTR [eax+0x15]
  4101f1:	sub    BYTE PTR [ebp+0x1fb57058],ch
  4101f7:	rcr    DWORD PTR [ebp-0x20407b5c],cl
  4101fd:	pop    eax
  4101fe:	ja     0x410185
  410200:	push   0xfa41aa4b
  410205:	ins    DWORD PTR es:[edi],dx
  410206:	aas    
  410207:	aam    0x90
  410209:	xchg   ecx,eax
  41020a:	mov    ds:0x2a54a837,al
  41020f:	lds    ebp,FWORD PTR [ebx-0x615b5b69]
  410215:	and    eax,0x89cc19dd
  41021a:	cs adc al,0x66
  41021d:	test   DWORD PTR [edi-0x8],eax
  410220:	stos   BYTE PTR es:[edi],al
  410221:	mov    esp,0x7a3ce5ee
  410226:	sti    
  410227:	loope  0x41025e
  410229:	pop    edi
  41022a:	pop    ebp
  41022b:	in     eax,0xa2
  41022d:	xchg   edi,eax
  41022e:	int    0xac
  410230:	and    ebx,DWORD PTR [esi-0x55]
  410233:	addr16 jne 0x4101c3
  410236:	iret   
  410237:	fisttp QWORD PTR [edx+0x71]
  41023a:	cdq    
  41023b:	out    0xfb,al
  41023d:	push   es
  41023e:	xchg   esi,eax
  41023f:	clc    
  410240:	pop    esp
  410241:	sti    
  410242:	cld    
  410243:	and    al,BYTE PTR ds:0xba9e233b
  410249:	push   ebx
  41024a:	call   0x785e:0xc8f0db0d
  410251:	(bad)  
  410252:	leave  
  410253:	push   esp
  410254:	out    dx,eax
  410255:	aaa    
  410256:	push   ebx
  410257:	sub    edx,eax
  410259:	mov    WORD PTR [eax],ds
  41025b:	sub    al,0x55
  41025d:	and    edi,edi
  41025f:	daa    
  410260:	push   eax
  410261:	loop   0x410283
  410263:	and    DWORD PTR [ebx+edi*4],esi
  410266:	cli    
  410267:	xor    BYTE PTR [ebx+0x29b3ea3f],0x8b
  41026e:	push   0x1e
  410270:	pushf  
  410271:	xchg   edi,eax
  410272:	mov    edx,esi
  410274:	lock pop edx
  410276:	arpl   WORD PTR [ebp+ecx*1-0x18916d18],si
  41027d:	or     al,0xd
  41027f:	jne    0x410270
  410281:	xchg   ebp,eax
  410282:	imul   edi,DWORD PTR [edi-0x23],0x420fca9a
  410289:	sub    bl,BYTE PTR [eax]
  41028b:	sub    al,cl
  41028d:	out    dx,al
  41028e:	test   DWORD PTR [edx-0x5539245a],0xa11a9641
  410298:	cmp    eax,0xaa31ddde
  41029d:	sub    al,ah
  41029f:	mov    ch,0xc
  4102a1:	adc    cl,BYTE PTR [ecx-0x50f2dd15]
  4102a7:	jmp    DWORD PTR [ecx]
  4102a9:	add    ch,dh
  4102ab:	push   ds
  4102ac:	loop   0x410298
  4102ae:	xor    eax,0x27a19f97
  4102b3:	push   ds
  4102b4:	jb     0x4102e5
  4102b6:	ds (bad) 
  4102b8:	push   edx
  4102b9:	jg     0x410307
  4102bb:	daa    
  4102bc:	cmp    BYTE PTR [ecx-0x16],cl
  4102bf:	in     al,0xaf
  4102c1:	cli    
  4102c2:	xor    esp,DWORD PTR [edx-0x2f]
  4102c5:	imul   edx,ebp,0xe43375da
  4102cb:	add    bl,BYTE PTR [eax+0x6ddb1549]
  4102d1:	les    esp,FWORD PTR [edi]
  4102d3:	inc    esp
  4102d4:	push   ds
  4102d5:	test   BYTE PTR [ebx+0x5],0x76
  4102d9:	mov    esp,0xb29f5412
  4102de:	popa   
  4102df:	adc    al,dh
  4102e1:	lods   eax,DWORD PTR ds:[esi]
  4102e2:	mov    bl,0x16
  4102e4:	out    0xb7,al
  4102e6:	outs   dx,BYTE PTR ds:[esi]
  4102e7:	mov    eax,0x7568d5f2
  4102ec:	imul   esp,DWORD PTR [edx-0x765045a3],0xfdf8f991
  4102f6:	adc    bh,al
  4102f8:	push   0x5a6d3624
  4102fd:	bound  edx,QWORD PTR [ebx+0x58]
  410300:	ret    0xe8e9
  410303:	ja     0x410344
  410305:	cmp    bh,BYTE PTR [esi+0x6d57453c]
  41030b:	out    dx,al
  41030c:	push   cs
  41030d:	xlat   BYTE PTR ds:[ebx]
  41030e:	push   ds
  41030f:	(bad)  
  410310:	retf   
  410311:	sahf   
  410312:	lahf   
  410313:	mov    ebx,0x93e66a14
  410318:	push   ebx
  410319:	fidivr WORD PTR [edx+0x4]
  41031c:	out    0x74,al
  41031e:	add    BYTE PTR [ebp+0x63],dh
  410321:	sub    DWORD PTR [ebp+0x24],esi
  410324:	ja     0x41038d
  410326:	into   
  410327:	xor    dh,dl
  410329:	outs   dx,BYTE PTR ds:[esi]
  41032a:	test   BYTE PTR [esi-0x231ac2be],dl
  410330:	pop    es
  410331:	cld    
  410332:	fstp   DWORD PTR [edi+edi*4-0x5b]
  410336:	aas    
  410337:	jbe    0x4102cd
  410339:	adc    eax,DWORD PTR [edx]
  41033b:	sbb    BYTE PTR ds:0x810975ae,cl
  410341:	jecxz  0x410349
  410343:	inc    ebp
  410344:	and    DWORD PTR [edi],edi
  410346:	test   DWORD PTR [eax-0xb],esi
  410349:	xlat   BYTE PTR ds:[ebx]
  41034a:	jl     0x4103ba
  41034c:	sbb    bl,ch
  41034e:	jge    0x410327
  410350:	fld    TBYTE PTR [edx]
  410352:	dec    esi
  410353:	jno    0x4103a2
  410355:	jecxz  0x410352
  410357:	inc    ebx
  410358:	cmp    esp,DWORD PTR [eax+0x60]
  41035b:	mov    eax,ds:0xbeb40847
  410360:	sub    DWORD PTR [edx+0x7a4c3a7f],esp
  410366:	mov    ch,ch
  410368:	add    DWORD PTR [ebp-0x6068d415],esp
  41036e:	dec    ebx
  41036f:	dec    edi
  410370:	lea    ecx,cs:0x70be32cc
  410377:	pop    esp
  410378:	daa    
  410379:	pop    esi
  41037a:	int    0x2c
  41037c:	jmp    0x4103a9
  41037e:	xchg   BYTE PTR [ebx+0x7079a407],ch
  410384:	push   0x57
  410386:	mov    ecx,0x3ba26f98
  41038b:	sub    ch,bh
  41038d:	std    
  41038e:	mov    dl,BYTE PTR [edi-0x2f]
  410391:	fistp  QWORD PTR [ebx-0x68]
  410394:	dec    edi
  410395:	xor    al,0x33
  410397:	std    
  410398:	adc    eax,0x7b01988c
  41039d:	cdq    
  41039e:	jbe    0x4103a0
  4103a0:	into   
  4103a1:	std    
  4103a2:	lods   eax,DWORD PTR ds:[esi]
  4103a3:	pop    esp
  4103a4:	mov    ebx,0x3f62ddb8
  4103a9:	or     edx,ecx
  4103ab:	jle    0x410374
  4103ad:	mov    edx,0x76213490
  4103b2:	pop    ss
  4103b3:	xor    al,0xd8
  4103b5:	aas    
  4103b6:	iret   
  4103b7:	inc    eax
  4103b8:	rcr    BYTE PTR [esi-0x1],0xbc
  4103bc:	pop    ebp
  4103bd:	lods   al,BYTE PTR ds:[esi]
  4103be:	jne    0x410394
  4103c0:	hlt    
  4103c1:	ins    BYTE PTR es:[edi],dx
  4103c2:	dec    eax
  4103c3:	in     eax,dx
  4103c4:	add    eax,edx
  4103c6:	or     dh,0x3
  4103c9:	push   eax
  4103ca:	repnz fwait
  4103cc:	xor    al,0xa3
  4103ce:	arpl   WORD PTR [ebp+eiz*1-0x18],dx
  4103d2:	test   DWORD PTR [edx-0x1b],0x851ab42f
  4103d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103da:	ins    DWORD PTR es:[edi],dx
  4103db:	outs   dx,BYTE PTR ds:[esi]
  4103dc:	dec    esp
  4103dd:	sbb    bl,BYTE PTR [esi+0x4f2589d8]
  4103e3:	mov    bh,0x88
  4103e5:	xor    BYTE PTR [ebx+0x58],0x28
  4103e9:	sub    eax,0x5cacb269
  4103ee:	jo     0x41038b
  4103f0:	sub    al,0x3e
  4103f2:	mov    eax,0x7f900044
  4103f7:	pusha  
  4103f8:	push   0x51
  4103fa:	pop    ebx
  4103fb:	push   0xffffffdb
  4103fd:	push   esp
  4103fe:	adc    esp,DWORD PTR [edi+0x72971bfb]
  410404:	and    cl,ah
  410406:	fmul   DWORD PTR [edi+0x6aed87a5]
  41040c:	xlat   BYTE PTR ds:[ebx]
  41040d:	clc    
  41040e:	je     0x410399
  410410:	pop    ecx
  410411:	loope  0x4103c0
  410413:	xor    ah,BYTE PTR [ebx-0x1b3ff664]
  410419:	dec    edx
  41041a:	iret   
  41041b:	std    
  41041c:	mov    dl,BYTE PTR ds:0xbe544192
  410422:	pop    eax
  410423:	out    0x1c,eax
  410425:	sub    eax,0x54cdea12
  41042a:	sbb    edi,esp
  41042c:	push   ebp
  41042d:	or     bh,BYTE PTR [eax]
  41042f:	mov    WORD PTR [eax],fs
  410431:	and    bl,BYTE PTR [edx+0x59]
  410434:	fnstcw WORD PTR es:[edx+edx*8]
  410438:	push   ecx
  410439:	push   esp
  41043a:	jge    0x410487
  41043c:	hlt    
  41043d:	mul    BYTE PTR [eax]
  41043f:	nop
  410440:	jbe    0x4103ff
  410442:	cmp    ebp,DWORD PTR [ebp-0x2c64e434]
  410448:	or     DWORD PTR [ebx-0x6d26f126],ebp
  41044e:	inc    edx
  41044f:	xor    bl,BYTE PTR [ebp-0x5fc463cc]
  410455:	aad    0x66
  410457:	dec    edx
  410458:	out    0x14,al
  41045a:	and    eax,0x6555b861
  41045f:	mov    dh,0x72
  410461:	movd   mm0,DWORD PTR [edi]
  410464:	mov    bh,0x18
  410466:	loopne 0x4104a7
  410468:	cmc    
  410469:	hlt    
  41046a:	adc    eax,0xaddf3a1a
  41046f:	stos   BYTE PTR es:[edi],al
  410470:	mov    edx,0xaa99ca60
  410475:	dec    esi
  410476:	lahf   
  410477:	add    esi,ebp
  410479:	pop    ss
  41047a:	mov    bl,0x46
  41047c:	mov    esp,es
  41047e:	pop    ss
  41047f:	(bad)  
  410480:	lods   eax,DWORD PTR ds:[esi]
  410481:	loopne 0x4104df
  410483:	mov    dh,0xbb
  410485:	mov    ebx,0x2b0b1bdb
  41048a:	cmp    eax,0xb71a113f
  41048f:	enter  0xb2f0,0xb7
  410493:	mov    dl,0x55
  410495:	stos   DWORD PTR es:[edi],eax
  410496:	fimul  DWORD PTR [eax+0x2c]
  410499:	pop    ebx
  41049a:	or     esp,edi
  41049c:	adc    al,0xb5
  41049e:	fsubr  st(7),st
  4104a0:	shl    al,0x43
  4104a3:	cli    
  4104a4:	mov    esp,0x99213a4c
  4104a9:	call   0x34a8:0x5569d0bd
  4104b0:	out    0x65,eax
  4104b2:	jbe    0x4104a7
  4104b4:	jb     0x41049b
  4104b6:	outs   dx,BYTE PTR ds:[esi]
  4104b7:	clc    
  4104b8:	test   eax,0x2e8b581b
  4104bd:	push   esp
  4104be:	pop    esi
  4104bf:	je     0x41049b
  4104c1:	lock loopne 0x4104ed
  4104c4:	shr    edi,0xce
  4104c7:	aad    0x5c
  4104c9:	mov    ecx,0xd2fd07dc
  4104ce:	push   eax
  4104cf:	adc    eax,0x84a7d0c8
  4104d4:	cmp    al,0xe
  4104d6:	xchg   edx,eax
  4104d7:	addr16 mov ds:0xee65,eax
  4104db:	xchg   ebx,ecx
  4104dd:	or     bl,cl
  4104df:	cmc    
  4104e0:	stos   DWORD PTR es:[edi],eax
  4104e1:	or     dh,cl
  4104e3:	mov    dl,bh
  4104e5:	and    DWORD PTR [esi+0x58],esp
  4104e8:	mov    al,ds:0x8d6b8a0d
  4104ed:	nop
  4104ee:	sbb    eax,ebp
  4104f0:	push   ebp
  4104f1:	inc    ecx
  4104f2:	int    0xeb
  4104f4:	cmp    DWORD PTR [esi-0x6b],ebx
  4104f7:	fwait
  4104f8:	cwde   
  4104f9:	ficomp WORD PTR ds:0x8b5ae1a7
  4104ff:	jbe    0x41049c
  410501:	not    dh
  410503:	mov    esi,0xa4e853ca
  410508:	lahf   
  410509:	xor    ah,BYTE PTR [ebp-0x69]
  41050c:	(bad)  
  41050d:	adc    dh,BYTE PTR [eax+0x6174f8e8]
  410513:	(bad)  
  410514:	push   cs
  410515:	xchg   edi,eax
  410516:	in     al,dx
  410517:	rcr    BYTE PTR [ebx],1
  410519:	xchg   ecx,eax
  41051a:	in     al,0x64
  41051c:	retf   0xd184
  41051f:	jne    0x410597
  410521:	add    eax,0x4b2001ea
  410526:	jge    0x41050f
  410528:	loope  0x41053c
  41052a:	test   DWORD PTR [edx-0xb],esi
  41052d:	adc    eax,0x479622e4
  410532:	mov    al,ds:0x9b39949
  410537:	sar    ch,0x92
  41053a:	add    ebx,ecx
  41053c:	stc    
  41053d:	xor    bh,ah
  41053f:	pop    ecx
  410540:	jo     0x4104f2
  410542:	jl     0x41057e
  410544:	call   0x491f:0xf5b82733
  41054b:	sbb    ebx,ecx
  41054d:	push   esi
  41054e:	(bad)
  410552:	sbb    DWORD PTR [ecx+0x57ddd4cf],ebp
  410558:	sbb    eax,0x28dea4ee
  41055d:	fwait
  41055e:	test   DWORD PTR [edi-0x46de2392],0x1701ac55
  410568:	cmp    BYTE PTR [esi],dh
  41056a:	mov    cl,0xa9
  41056c:	(bad)  [edx]
  41056e:	jbe    0x4105e7
  410570:	out    0x4d,al
  410572:	fsubr  QWORD PTR ds:0x5676aff
  410578:	jl     0x41056a
  41057a:	dec    edi
  41057b:	xor    eax,0x38fcce4e
  410580:	inc    eax
  410581:	and    eax,0x467e07c0
  410586:	mov    edx,0x7b19a6bd
  41058b:	pop    ebp
  41058c:	sbb    bh,BYTE PTR [edi-0x7bb871f]
  410592:	inc    edi
  410593:	sbb    BYTE PTR [edi-0x38],al
  410596:	out    dx,eax
  410597:	push   0x2a70dd09
  41059c:	sbb    BYTE PTR [ecx-0x57e9ef6d],bh
  4105a2:	mov    gs,WORD PTR [ebx+0x7e01f337]
  4105a8:	popf   
  4105a9:	mov    ecx,0x87271518
  4105ae:	mov    bh,cl
  4105b0:	cmp    eax,0xdc480c4d
  4105b5:	stos   BYTE PTR es:[edi],al
  4105b6:	(bad)  
  4105b7:	out    0x28,eax
  4105b9:	mov    eax,0x66c4a3d2
  4105be:	dec    ecx
  4105bf:	xchg   ebp,eax
  4105c0:	data16 mov bl,0x7a
  4105c3:	mov    edx,0xf1c064ba
  4105c8:	mov    bl,0x9f
  4105ca:	inc    edx
  4105cb:	sbb    ecx,DWORD PTR [edx+0xf29d3ba]
  4105d1:	pushf  
  4105d2:	and    ebx,DWORD PTR [esi]
  4105d4:	iret   
  4105d5:	not    DWORD PTR [edx+0x26]
  4105d8:	xchg   BYTE PTR [eax],ch
  4105da:	xor    dl,BYTE PTR [esi-0x12386c9a]
  4105e0:	mov    ch,BYTE PTR [esi-0x407684e7]
  4105e6:	add    BYTE PTR [edx+edi*2],0xa2
  4105ea:	pop    esi
  4105eb:	rcr    BYTE PTR [edx+0xd],0x4a
  4105ef:	nop
  4105f0:	add    BYTE PTR [ecx+ecx*1-0x62],bh
  4105f4:	xor    ebp,DWORD PTR [eax+0x206baab2]
  4105fa:	mov    dh,0xc4
  4105fc:	in     al,dx
  4105fd:	or     DWORD PTR [eax+eax*8+0x1161b641],esi
  410604:	or     al,0xc
  410606:	(bad)  
  410607:	std    
  410608:	pusha  
  410609:	dec    esi
  41060a:	sti    
  41060b:	pop    edi
  41060c:	stos   DWORD PTR es:[edi],eax
  41060d:	stc    
  41060e:	test   eax,0xa46dd904
  410613:	dec    edx
  410614:	lea    ecx,[eax]
  410616:	test   bl,bh
  410618:	xchg   ebx,eax
  410619:	mov    ch,0xe5
  41061b:	call   0x5ba57fdc
  410620:	mov    ds:0xc097f3e5,al
  410625:	hlt    
  410626:	das    
  410627:	push   ecx
  410628:	and    BYTE PTR [ebx],cl
  41062a:	dec    esp
  41062b:	out    dx,eax
  41062c:	inc    ebx
  41062d:	mov    DWORD PTR [ecx+0x23],ebx
  410630:	cs int3 
  410632:	das    
  410633:	popa   
  410634:	ins    BYTE PTR es:[edi],dx
  410635:	xchg   edi,ebp
  410637:	stos   BYTE PTR es:[edi],al
  410638:	lods   al,BYTE PTR ds:[esi]
  410639:	jp     0x4106a7
  41063b:	jmp    0x410648
  41063d:	xor    ebx,ecx
  41063f:	out    dx,eax
  410640:	hlt    
  410641:	xor    eax,0xdbd1610
  410646:	dec    ebp
  410647:	(bad)  
  410648:	xchg   esp,eax
  410649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41064a:	inc    esp
  41064b:	test   BYTE PTR [ecx-0x6c],dl
  41064e:	fs call 0x72b7733f
  410654:	mov    ch,0x85
  410656:	xchg   edx,eax
  410657:	call   FWORD PTR [edx+ebx*8+0x76ddbdb6]
  41065e:	jg     0x4106c7
  410660:	clc    
  410661:	in     eax,dx
  410662:	dec    esp
  410663:	xchg   edi,eax
  410664:	(bad)  
  410665:	cli    
  410666:	inc    ebp
  410667:	mov    cl,0x86
  410669:	aaa    
  41066a:	inc    esp
  41066b:	rol    BYTE PTR [ecx+edx*4+0x45c672df],1
  410672:	sub    DWORD PTR [esi+0x7994418d],0xe533bb11
  41067c:	cmp    eax,0x6580bc12
  410681:	mov    ch,0x31
  410683:	sti    
  410684:	stos   BYTE PTR es:[edi],al
  410685:	sub    al,0xb0
  410687:	adc    ah,BYTE PTR [eax-0x4f]
  41068a:	push   ds
  41068b:	enter  0xdac2,0x30
  41068f:	outs   dx,DWORD PTR ds:[esi]
  410690:	cwde   
  410691:	clc    
  410692:	xchg   esi,eax
  410693:	pop    esi
  410694:	cmp    eax,0xc2181969
  410699:	gs into 
  41069b:	cld    
  41069c:	xor    al,0xaa
  41069e:	pop    ebx
  41069f:	push   es
  4106a0:	test   al,0x15
  4106a2:	cld    
  4106a3:	ins    BYTE PTR es:[edi],dx
  4106a4:	jns    0x410716
  4106a6:	jnp    0x5f11dbd8
  4106ac:	push   eax
  4106ad:	pop    edi
  4106ae:	lds    ebx,FWORD PTR [ebx-0x6b]
  4106b1:	and    BYTE PTR [edi],al
  4106b3:	cmp    al,0xc9
  4106b5:	jb     0x410728
  4106b7:	adc    DWORD PTR [esi],esi
  4106b9:	inc    edi
  4106ba:	cs mov ah,0x70
  4106be:	rol    esi,1
  4106c0:	pop    ebx
  4106c1:	imul   ebx,DWORD PTR [eax+esi*1],0x330bd8da
  4106c8:	imul   eax,DWORD PTR [ecx+0x18eac964],0x6fc544fa
  4106d2:	jb     0x41067a
  4106d4:	mov    bh,0x2c
  4106d6:	sti    
  4106d7:	ret    0x1c3a
  4106da:	f2xm1  
  4106dc:	jp     0x41072d
  4106de:	adc    al,0x94
  4106e0:	dec    ebx
  4106e1:	xchg   edx,eax
  4106e2:	cmp    al,ah
  4106e4:	test   eax,0xee1386dd
  4106e9:	addr16 pop ss
  4106eb:	cmp    DWORD PTR [edi-0x4],esp
  4106ee:	or     eax,0x1476650e
  4106f3:	jmp    0xfa6d3247
  4106f8:	push   ebx
  4106f9:	(bad)  
  4106fa:	or     ch,BYTE PTR [eax-0x1722c49e]
  410700:	fcom   QWORD PTR [eax-0x1c]
  410703:	sub    ecx,DWORD PTR [edi-0x366131a]
  410709:	pop    esi
  41070a:	sbb    DWORD PTR [eax],0xffffffcb
  41070d:	dec    esp
  41070e:	pop    ecx
  41070f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410710:	jmp    FWORD PTR [ebx-0x3046dd42]
  410716:	repnz fcomp st(3)
  410719:	popf   
  41071a:	pusha  
  41071b:	xchg   ebp,eax
  41071c:	mov    ch,0x4c
  41071e:	dec    edi
  41071f:	(bad)  
  410720:	mov    WORD PTR [edx+ebp*4-0x72],ss
  410724:	jge    0x410764
  410726:	cmp    ch,al
  410728:	dec    ecx
  410729:	cmp    al,0xea
  41072b:	aas    
  41072c:	lahf   
  41072d:	xlat   BYTE PTR ds:[ebx]
  41072e:	cmp    bl,BYTE PTR [ecx+eiz*8-0x2033ee6]
  410735:	mov    BYTE PTR [ecx+0xb311f0b],dh
  41073b:	arpl   WORD PTR [ecx+0x76e0f7a9],ax
  410741:	and    al,0x3e
  410743:	add    DWORD PTR [ecx],esp
  410745:	pushf  
  410746:	les    ebp,FWORD PTR [eax+0x17]
  410749:	fistp  DWORD PTR [edi+0x2d26efd3]
  41074f:	ror    cl,0x7d
  410752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410753:	loopne 0x410794
  410755:	mov    BYTE PTR [ebp-0x24ded077],bh
  41075b:	ja     0x410791
  41075d:	push   0x6748f428
  410762:	mov    esp,0x329195a3
  410767:	add    eax,0x8ab3a636
  41076c:	and    DWORD PTR [esi+0xccce358],edx
  410772:	mov    ch,0xe1
  410774:	les    eax,FWORD PTR [ebx+0x15]
  410777:	jns    0x4107f7
  410779:	sysret 
  41077b:	and    BYTE PTR [esi+0x5f5383af],dh
  410781:	jp     0x410734
  410783:	and    DWORD PTR [ebx-0x7b],eax
  410786:	xlat   BYTE PTR ds:[ebx]
  410787:	sbb    eax,0x2d94f1dc
  41078c:	(bad)  
  41078d:	call   0x3f98693e
  410792:	call   0x91a7:0x941e448
  410799:	cmp    eax,0x63caef9d
  41079e:	sub    ch,BYTE PTR [esi]
  4107a0:	lods   al,BYTE PTR ds:[esi]
  4107a1:	(bad)  
  4107a2:	mov    edi,0x213dd883
  4107a7:	xchg   edx,eax
  4107a8:	cmc    
  4107a9:	jne    0x410829
  4107ab:	mov    gs,WORD PTR [edi]
  4107ad:	(bad)  
  4107ae:	mov    ah,0xc7
  4107b0:	and    BYTE PTR [edx-0x37],ah
  4107b3:	push   ebx
  4107b4:	test   al,0x74
  4107b6:	sti    
  4107b7:	retf   
  4107b8:	out    dx,al
  4107b9:	daa    
  4107ba:	inc    ecx
  4107bb:	xchg   ebp,eax
  4107bc:	leave  
  4107bd:	stc    
  4107be:	frstor [esi-0x62]
  4107c1:	dec    esp
  4107c2:	jle    0x410762
  4107c4:	fldcw  WORD PTR [ecx+edi*8-0x6be3c8da]
  4107cb:	xabort 0x28
  4107ce:	jmp    0x7c1c:0x77dc52cc
  4107d5:	mov    ecx,0xa8dfddbd
  4107da:	lahf   
  4107db:	lds    edx,FWORD PTR [edx]
  4107dd:	in     eax,dx
  4107de:	shr    esi,1
  4107e0:	daa    
  4107e1:	mov    ?,WORD PTR [edx-0x5920b406]
  4107e7:	mov    ds:0xf8ff6137,eax
  4107ec:	push   esp
  4107ed:	dec    eax
  4107ee:	pop    fs
  4107f0:	arpl   WORD PTR [ecx+0x75],ax
  4107f3:	adc    DWORD PTR [ebx],esi
  4107f5:	pusha  
  4107f6:	push   esp
  4107f7:	push   0x468f0a5a
  4107fc:	mov    eax,ds:0x5faba7c6
  410801:	cs push edi
  410803:	ins    BYTE PTR es:[edi],dx
  410804:	ins    BYTE PTR es:[edi],dx
  410805:	addr16 push eax
  410807:	mov    al,0x15
  410809:	inc    esp
  41080a:	add    eax,edx
  41080c:	call   0xa661:0x7eb3549c
  410813:	jg     0x410855
  410815:	mov    eax,?
  410817:	sub    esi,DWORD PTR [edx+0x1fe7cb8d]
  41081d:	cdq    
  41081e:	and    ebp,edi
  410820:	shl    DWORD PTR [esi-0x4436d6f2],cl
  410826:	push   0xffffff87
  410828:	lahf   
  410829:	test   BYTE PTR [eax],bl
  41082b:	xchg   ebx,eax
  41082c:	inc    ebx
  41082d:	jns    0x410847
  41082f:	push   ss
  410830:	lods   eax,DWORD PTR ds:[esi]
  410831:	sub    ebp,DWORD PTR [ecx+0x7305c558]
  410837:	push   eax
  410838:	jmp    0x1c0e1fa
  41083d:	jns    0x410815
  41083f:	dec    eax
  410840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410841:	push   ds
  410842:	mov    eax,esp
  410844:	rcr    DWORD PTR [edi-0x77f8d693],1
  41084a:	push   esi
  41084b:	push   0x524c4c75
  410850:	outs   dx,DWORD PTR ds:[esi]
  410851:	pop    edi
  410852:	gs cmp esp,edx
  410855:	and    bl,BYTE PTR [ebx+0x30]
  410858:	aas    
  410859:	and    BYTE PTR [esi-0x18321415],al
  41085f:	xchg   esi,edi
  410861:	repz adc eax,0xe6c80d66
  410867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410868:	push   esp
  410869:	stc    
  41086a:	mov    al,ds:0xcd16068d
  41086f:	out    0x6d,eax
  410871:	jnp    0x4108de
  410873:	inc    ebx
  410874:	lock mov cl,BYTE PTR [edx-0x391b7a7]
  41087b:	dec    esp
  41087c:	push   cs
  41087d:	shr    eax,cl
  41087f:	sub    BYTE PTR [ecx+0x1],al
  410882:	pop    ebx
  410883:	mov    ch,ah
  410885:	arpl   WORD PTR [edx+eiz*4+0x5b],bp
  410889:	das    
  41088a:	mov    dl,0x93
  41088c:	add    DWORD PTR [esi],esp
  41088e:	fsubr  st,st(6)
  410890:	sbb    ecx,DWORD PTR [ebx+0x44]
  410893:	and    edi,DWORD PTR [ebx-0x57]
  410896:	mov    ds:0xd6e666e3,eax
  41089b:	mov    ah,0xef
  41089d:	jno    0x4108b3
  41089f:	daa    
  4108a0:	pop    eax
  4108a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108a2:	mov    gs,WORD PTR [esp+ebx*2+0x43]
  4108a6:	cmp    ch,BYTE PTR [eax-0x1e]
  4108a9:	mov    eax,ds:0x9077d9db
  4108ae:	add    dh,BYTE PTR [edx+edx*1]
  4108b1:	mov    al,ds:0xdd4690d8
  4108b6:	pusha  
  4108b7:	xchg   edx,eax
  4108b8:	aas    
  4108b9:	mov    eax,ds:0x29176ad1
  4108be:	in     eax,0x67
  4108c0:	jmp    0x41086d
  4108c2:	jmp    0x410892
  4108c4:	xor    DWORD PTR [ecx+0x64],edi
  4108c7:	sub    al,0xa5
  4108c9:	adc    cl,BYTE PTR [edi+0x7a53aa98]
  4108cf:	cdq    
  4108d0:	xor    al,0x95
  4108d2:	fld    DWORD PTR [edx-0x77]
  4108d5:	stc    
  4108d6:	sbb    bl,BYTE PTR [ecx-0x350338cd]
  4108dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108dd:	jae    0x41093c
  4108df:	cmp    esp,ecx
  4108e1:	pop    esi
  4108e2:	nop
  4108e3:	mov    eax,0x19abc617
  4108e8:	test   BYTE PTR [ebx],0x6d
  4108eb:	pop    es
  4108ec:	dec    ebp
  4108ed:	xor    DWORD PTR [ebx],ebx
  4108ef:	dec    esi
  4108f0:	hlt    
  4108f1:	mov    eax,0xd1889089
  4108f6:	mov    edx,edx
  4108f8:	not    DWORD PTR [ebx+0x5e]
  4108fb:	aad    0x7a
  4108fd:	or     eax,0x98953852
  410902:	aas    
  410903:	mov    edi,0xc590514e
  410908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410909:	xchg   DWORD PTR [edi-0x3c],esp
  41090c:	sti    
  41090d:	stos   DWORD PTR es:[edi],eax
  41090e:	xchg   DWORD PTR [edx],esp
  410910:	aas    
  410911:	or     eax,0x1a682e3e
  410916:	dec    esi
  410917:	cwde   
  410918:	xchg   esi,eax
  410919:	cmp    esi,ebx
  41091b:	dec    ecx
  41091c:	pusha  
  41091d:	out    dx,eax
  41091e:	je     0x410919
  410920:	xchg   esp,eax
  410921:	dec    ebx
  410922:	mov    bl,0xe0
  410924:	push   es
  410925:	popa   
  410926:	fidivr WORD PTR [edi+0x7c3754a]
  41092c:	repz add al,BYTE PTR [ecx+0x6f3ac956]
  410933:	cmp    ebx,edi
  410935:	dec    edx
  410936:	leave  
  410937:	call   0xd470b6ec
  41093c:	adc    eax,0x10ecd9fd
  410941:	and    edx,edx
  410943:	pop    ds
  410944:	neg    BYTE PTR [ebx-0x23127377]
  41094a:	cld    
  41094b:	mov    ecx,0x61221ee0
  410950:	or     ch,al
  410952:	ret    
  410953:	fisubr DWORD PTR [ecx-0x5d48ea6f]
  410959:	push   edi
  41095a:	lea    esp,[edx+esi*2-0xd3e92a7]
  410961:	(bad)
  410964:	mov    ah,0xe5
  410966:	or     eax,0xbda77694
  41096b:	push   ss
  41096c:	xor    ah,bh
  41096e:	sub    DWORD PTR [edx+eiz*8],0x5c
  410972:	mov    eax,0x93d12adb
  410977:	(bad)  
  410978:	out    0x57,eax
  41097a:	jg     0x4109cf
  41097c:	test   BYTE PTR [edx-0x7ad7f787],dl
  410982:	or     eax,0xcea38c8f
  410987:	(bad)  
  410988:	inc    BYTE PTR [esi-0x8]
  41098b:	sti    
  41098c:	push   ds
  41098d:	aam    0x1
  41098f:	push   ds
  410990:	arpl   WORD PTR [edx],bx
  410992:	div    BYTE PTR [edx+0x68]
  410995:	les    edx,FWORD PTR [ebx-0x35]
  410998:	and    eax,0xe31fa523
  41099d:	loop   0x4109b7
  41099f:	hlt    
  4109a0:	fwait
  4109a1:	xor    DWORD PTR [eax],edx
  4109a3:	(bad)  
  4109a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109a5:	pop    ds
  4109a6:	in     al,dx
  4109a7:	pop    esp
  4109a8:	add    dl,BYTE PTR [edx+eax*8+0x4d]
  4109ac:	mov    edx,0xabcc443d
  4109b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109b2:	inc    edx
  4109b3:	xchg   ebx,eax
  4109b4:	sbb    al,0x3c
  4109b6:	add    ch,BYTE PTR [ebx]
  4109b8:	test   cl,ah
  4109ba:	inc    ebx
  4109bb:	mov    al,0x8e
  4109bd:	repz imul edi,DWORD PTR [edx],0xffffffff
  4109c1:	cwde   
  4109c2:	stos   BYTE PTR es:[edi],al
  4109c3:	xor    DWORD PTR es:[edx],esi
  4109c6:	adc    eax,0x639965e8
  4109cb:	mov    ds:0x3edd6c55,al
  4109d0:	or     eax,0x4ec13a87
  4109d5:	inc    edx
  4109d6:	enter  0x2872,0xe8
  4109da:	dec    eax
  4109db:	aam    0x4e
  4109dd:	push   edi
  4109de:	xor    BYTE PTR [edi-0x46],ch
  4109e1:	shr    BYTE PTR [edi],1
  4109e3:	mov    al,gs:0x1fc67fa8
  4109e9:	ja     0x41099e
  4109eb:	xor    DWORD PTR [ecx-0x4c],edi
  4109ee:	jg     0x41098a
  4109f0:	aaa    
  4109f1:	mov    ah,0xc4
  4109f3:	outs   dx,DWORD PTR ds:[esi]
  4109f4:	mov    ds:0x6137d20b,al
  4109f9:	mov    ecx,0x682b1827
  4109fe:	sub    eax,0x2d53f97c
  410a03:	shl    esi,1
  410a05:	cmc    
  410a06:	in     eax,dx
  410a07:	mov    ecx,0xff551610
  410a0c:	lods   eax,DWORD PTR ds:[esi]
  410a0d:	enter  0x8c0c,0x8
  410a11:	cmp    BYTE PTR [eax-0x15],ch
  410a14:	repnz mov bl,0x78
  410a17:	xor    al,BYTE PTR [edx]
  410a19:	add    al,BYTE PTR [ecx]
  410a1b:	mov    ah,0xf6
  410a1d:	js     0x4109fc
  410a1f:	mov    BYTE PTR [ebp+0x7],dl
  410a22:	ss pop ebp
  410a24:	test   BYTE PTR [esp+edi*8],al
  410a27:	jns    0x410a9b
  410a29:	cmp    bl,bh
  410a2b:	fnstenv [edi+edi*2-0x20]
  410a2f:	jl     0x410a83
  410a31:	ja     0x410a69
  410a33:	jg     0x410a75
  410a35:	out    0x46,al
  410a37:	lahf   
  410a38:	inc    esp
  410a39:	pop    eax
  410a3a:	lea    esp,[edx+edx*8-0x5cc6f552]
  410a41:	out    0xb,eax
  410a43:	adc    DWORD PTR [esp+eiz*8+0x49],edi
  410a47:	or     ecx,DWORD PTR [ecx]
  410a49:	clc    
  410a4a:	test   eax,0xf13187ba
  410a4f:	int    0xf1
  410a51:	icebp  
  410a52:	std    
  410a53:	adc    cl,BYTE PTR [ebp+0x276a5298]
  410a59:	jne    0x410a84
  410a5b:	sbb    al,0x94
  410a5d:	shl    DWORD PTR [esi-0x65f32d13],1
  410a63:	fistp  WORD PTR [eax]
  410a65:	setae  BYTE PTR [eax+0x51]
  410a69:	pop    esp
  410a6a:	ss jb  0x410a9b
  410a6d:	fwait
  410a6e:	or     ah,dl
  410a70:	(bad)  
  410a71:	cs add ebx,edx
  410a74:	mov    al,ds:0xfba1d490
  410a79:	(bad)  
  410a7a:	mov    bl,BYTE PTR [edx-0x77d94510]
  410a80:	xchg   ebp,eax
  410a81:	dec    DWORD PTR [esi]
  410a83:	int3   
  410a84:	sub    DWORD PTR [edx-0x141a2f9c],ebx
  410a8a:	push   0xa3d73b54
  410a8f:	mov    BYTE PTR [ebx-0x4f52b32e],al
  410a95:	push   eax
  410a96:	sub    BYTE PTR [edx+0x10],0x3
  410a9a:	mov    ds:0xec005317,al
  410a9f:	inc    edx
  410aa0:	sbb    al,0x1d
  410aa2:	add    eax,0x25476815
  410aa7:	imul   eax,DWORD PTR ds:0x936635db,0x6c
  410aae:	stc    
  410aaf:	frstor [esi+0x49a3ee7e]
  410ab5:	fadd   st,st(0)
  410ab7:	and    eax,ebx
  410ab9:	push   esp
  410aba:	ror    BYTE PTR [ebx+0x1a],0x70
  410abe:	mov    cl,0x52
  410ac0:	retf   0xfb4c
  410ac3:	add    DWORD PTR [edi-0x11a76e4e],ecx
  410ac9:	add    ecx,DWORD PTR ds:0x585c1c1f
  410acf:	push   eax
  410ad0:	xchg   edi,eax
  410ad1:	cmp    BYTE PTR [ebp+0x1767cb20],cl
  410ad7:	gs mov cl,0x90
  410ada:	or     eax,0xbd4ea2b4
  410adf:	icebp  
  410ae0:	test   BYTE PTR [edi+0x22],bh
  410ae3:	stos   BYTE PTR es:[edi],al
  410ae4:	dec    edx
  410ae5:	sub    DWORD PTR [ebx*8-0x1249aa95],ebx
  410aec:	or     DWORD PTR [ecx],esi
  410aee:	or     DWORD PTR [edi],ecx
  410af0:	inc    ecx
  410af1:	loope  0x410aba
  410af3:	shr    DWORD PTR [edx],0x4c
  410af6:	cmp    esi,DWORD PTR [ebp-0x52]
  410af9:	in     al,0xc3
  410afb:	pop    eax
  410afc:	push   0xffffff85
  410afe:	outs   dx,BYTE PTR ds:[esi]
  410aff:	inc    ebx
  410b00:	dec    ebp
  410b01:	in     al,dx
  410b02:	leave  
  410b03:	in     eax,0xeb
  410b05:	hlt    
  410b06:	xchg   edx,eax
  410b07:	ds ret 
  410b09:	fiadd  WORD PTR [eax-0xd527e68]
  410b0f:	int3   
  410b10:	push   ebx
  410b11:	push   ecx
  410b12:	inc    ebp
  410b13:	jge    0x410add
  410b15:	stos   BYTE PTR es:[edi],al
  410b16:	ret    0x55eb
  410b19:	pop    esi
  410b1a:	adc    ch,BYTE PTR [esp+ecx*1]
  410b1d:	clc    
  410b1e:	stos   BYTE PTR es:[edi],al
  410b1f:	adc    BYTE PTR es:[edi],dl
  410b22:	or     bl,BYTE PTR [ecx+edx*1]
  410b25:	fisttp QWORD PTR [ebp+0x9]
  410b28:	neg    DWORD PTR [ecx-0x2882fb76]
  410b2e:	call   0xa2a26958
  410b33:	xor    al,0x97
  410b35:	popf   
  410b36:	fs popf 
  410b38:	popa   
  410b39:	rol    BYTE PTR [ebx],cl
  410b3b:	mov    esp,0xa78acbe4
  410b40:	mov    eax,ds:0x3bd38a26
  410b45:	aad    0xd5
  410b47:	aam    0x38
  410b49:	popa   
  410b4a:	sti    
  410b4b:	call   0x708c3ea1
  410b50:	add    dh,BYTE PTR [ebx]
  410b52:	iret   
  410b53:	and    DWORD PTR [ebx+0x46],ebp
  410b56:	push   es
  410b57:	adc    al,0x23
  410b59:	pop    ebx
  410b5a:	packssdw mm6,QWORD PTR [ecx-0x1079849a]
  410b61:	or     esi,edx
  410b63:	mov    fs,WORD PTR [ecx+0x2feb319f]
  410b69:	js     0x410bbf
  410b6b:	jmp    0x410afb
  410b6d:	mov    ah,bl
  410b6f:	or     eax,0xcd7841e2
  410b74:	lock mov eax,ds:0xbc7393be
  410b7a:	inc    ebp
  410b7b:	cmp    BYTE PTR [ebp+0x78fe9d1e],dl
  410b81:	fsub   st(5),st
  410b83:	leave  
  410b84:	jne    0x410bfa
  410b86:	or     BYTE PTR [esi],0xbf
  410b89:	sysexit 
  410b8b:	push   esp
  410b8c:	sbb    esi,DWORD PTR [ebx-0x1de5d56a]
  410b92:	gs addr16 std 
  410b95:	dec    ebp
  410b96:	test   BYTE PTR [ebp+0x5d921568],dh
  410b9c:	mov    al,ds:0x88de2c78
  410ba1:	pop    ebx
  410ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ba3:	mov    dl,0xbc
  410ba5:	cmp    ebp,DWORD PTR [ecx+ebp*1]
  410ba8:	lock loop 0x410bf9
  410bab:	loope  0x410b57
  410bad:	inc    ebp
  410bae:	inc    edx
  410baf:	lds    edi,FWORD PTR [edx-0x58de1761]
  410bb5:	mov    esp,DWORD PTR [ebp+0x30a4737f]
  410bbb:	fild   QWORD PTR [edi+eax*4+0x3dc13595]
  410bc2:	mov    dl,0x7f
  410bc4:	push   edx
  410bc5:	mov    DWORD PTR [ecx+0xb],esi
  410bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bc9:	inc    ebx
  410bca:	ror    DWORD PTR [edi-0x120d862f],1
  410bd0:	clc    
  410bd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bd2:	fisttp QWORD PTR [edi]
  410bd4:	or     al,0xa7
  410bd6:	daa    
  410bd7:	xor    cl,BYTE PTR [edi+0x647261e0]
  410bdd:	idiv   DWORD PTR [ebx]
  410bdf:	or     DWORD PTR [ebx],eax
  410be1:	loope  0x410c1c
  410be3:	out    dx,eax
  410be4:	in     al,0x18
  410be6:	in     eax,0x4
  410be8:	sar    esp,1
  410bea:	jne    0x410c56
  410bec:	lea    ecx,[ecx]
  410bee:	cs (bad) 
  410bf0:	adc    esp,DWORD PTR [ebp+0x3ed08fd3]
  410bf6:	xor    esp,DWORD PTR [edx+ebp*1+0x7362f65d]
  410bfd:	xor    eax,0x41e4e616
  410c02:	sub    ebx,DWORD PTR [esi+0x2f]
  410c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c06:	shr    BYTE PTR ds:0x899d83fc,1
  410c0c:	sbb    ebx,edx
  410c0e:	mov    edx,es
  410c10:	sub    ch,BYTE PTR ds:0xc520ffd3
  410c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c17:	adc    DWORD PTR [ebp-0x120cfdde],ebx
  410c1d:	lsl    edi,WORD PTR gs:[ebx]
  410c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c22:	xchg   edx,eax
  410c23:	dec    ecx
  410c24:	mov    ecx,ebx
  410c26:	sti    
  410c27:	mov    ds:0xee9b80fb,al
  410c2c:	popa   
  410c2d:	mov    dh,0xb0
  410c2f:	cld    
  410c30:	sub    BYTE PTR [ecx+0x15b1e6a5],0x73
  410c37:	ja     0x410c6b
  410c39:	jmp    0x4a04:0x8374ba8c
  410c40:	lods   eax,DWORD PTR ds:[esi]
  410c41:	add    BYTE PTR [esi-0x448d1e95],dl
  410c47:	jle    0x410cae
  410c49:	in     al,dx
  410c4a:	aam    0x7e
  410c4c:	sbb    dh,cl
  410c4e:	ret    
  410c4f:	pop    edi
  410c50:	jge    0x410c0d
  410c52:	imul   ebx,DWORD PTR [esi+0x2bbe296f],0xffffff89
  410c59:	icebp  
  410c5a:	pop    ss
  410c5b:	add    DWORD PTR [esi-0x7701cd25],0xc5799b27
  410c65:	or     DWORD PTR [edi],0x13
  410c68:	daa    
  410c69:	xchg   esp,eax
  410c6a:	popa   
  410c6b:	mov    eax,0x245d7017
  410c70:	(bad)  
  410c72:	sti    
  410c73:	cmp    al,0xc1
  410c75:	enter  0xb21a,0x10
  410c79:	mov    ah,0xeb
  410c7b:	int    0xab
  410c7d:	outs   dx,BYTE PTR ds:[esi]
  410c7e:	pop    ss
  410c7f:	jae    0x410cc2
  410c81:	jle    0x410c7a
  410c83:	mov    ah,0xd
  410c85:	pop    ebp
  410c86:	out    0x81,al
  410c88:	dec    edx
  410c89:	loopne 0x410c99
  410c8b:	pop    esp
  410c8c:	pop    edi
  410c8d:	and    eax,0x96488ac4
  410c92:	inc    edx
  410c93:	out    dx,eax
  410c94:	ss add al,0x7f
  410c97:	rcl    BYTE PTR [esi+0x43],1
  410c9a:	add    esp,edx
  410c9c:	mov    edi,0xfd470df1
  410ca1:	jno    0x410c5e
  410ca3:	sub    al,0xd0
  410ca5:	mov    bh,0xac
  410ca7:	sahf   
  410ca8:	cld    
  410ca9:	mov    esp,0x3a150bfa
  410cae:	xchg   ebp,eax
  410caf:	dec    esp
  410cb0:	mov    edx,0x46baa49b
  410cb5:	sub    BYTE PTR gs:[ecx-0x64],dh
  410cb9:	or     ebx,DWORD PTR [ebx-0x56]
  410cbc:	xchg   esi,eax
  410cbd:	imul   eax,DWORD PTR [edx-0x1],0x31
  410cc1:	dec    ebp
  410cc2:	and    eax,DWORD PTR [eax+0x14]
  410cc5:	jge    0x410cdc
  410cc7:	adc    BYTE PTR [edx],ch
  410cc9:	ficomp DWORD PTR [ecx+0x3e4b262b]
  410ccf:	mov    edi,0xb6e22f00
  410cd4:	pop    es
  410cd5:	retf   
  410cd6:	adc    BYTE PTR [ebp-0x22442d0a],0xcb
  410cdd:	mov    esi,DWORD PTR [esi+edi*1]
  410ce0:	mov    cl,0x96
  410ce2:	fmulp  st(0),st
  410ce4:	dec    edi
  410ce5:	arpl   si,di
  410ce7:	in     eax,dx
  410ce8:	aas    
  410ce9:	jmp    0xac1c:0x6399e17c
  410cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cf1:	push   edx
  410cf2:	outs   dx,DWORD PTR ds:[esi]
  410cf3:	cwde   
  410cf4:	mov    ebx,0xd1390408
  410cf9:	and    eax,0x6a10fc43
  410cfe:	mov    esi,0x8e45df86
  410d03:	outs   dx,DWORD PTR ds:[esi]
  410d04:	daa    
  410d05:	xor    BYTE PTR [ebx+0x50],bl
  410d08:	aas    
  410d09:	fistp  QWORD PTR [ebx-0x5d]
  410d0c:	lsl    esi,sp
  410d0f:	sub    ch,BYTE PTR [eax+0x123e14d0]
  410d15:	pop    ss
  410d16:	mov    ecx,0x4f20c642
  410d1b:	sbb    eax,0x9828d7ed
  410d20:	jnp    0x410d00
  410d22:	lea    edx,[eax-0xb]
  410d25:	inc    ecx
  410d26:	leave  
  410d27:	ror    ebp,cl
  410d29:	pop    esp
  410d2a:	push   ebp
  410d2b:	and    DWORD PTR [edi+0x39521abb],eax
  410d31:	add    eax,DWORD PTR [edx-0x6d89dccb]
  410d37:	ret    
  410d38:	and    DWORD PTR [ebx+0xa],ebx
  410d3b:	mov    eax,0x717fa324
  410d40:	retf   0xf6dc
  410d43:	mov    ebp,0x287ae1ef
  410d48:	and    ah,bl
  410d4a:	inc    ebx
  410d4b:	inc    edi
  410d4c:	sbb    ecx,edi
  410d4e:	pop    ebp
  410d4f:	adc    ebp,DWORD PTR [eax-0x6c]
  410d52:	mov    bh,0x95
  410d54:	mov    ecx,0x57b1459
  410d59:	aam    0xbc
  410d5b:	stc    
  410d5c:	div    BYTE PTR ds:0x2a42fe9e
  410d62:	or     BYTE PTR [eax+ecx*1+0x21],al
  410d66:	lds    ecx,FWORD PTR [esi-0x40]
  410d69:	test   eax,0xd2c7cc8d
  410d6e:	xchg   edx,eax
  410d6f:	cmp    dl,BYTE PTR [eax+edx*2]
  410d72:	stos   DWORD PTR es:[edi],eax
  410d73:	fcmove st,st(1)
  410d75:	or     eax,0xcaf07db7
  410d7a:	dec    eax
  410d7b:	retf   0x4646
  410d7e:	rol    DWORD PTR ds:0x3b139101,0x44
  410d85:	aas    
  410d86:	push   esp
  410d87:	inc    esp
  410d88:	test   DWORD PTR [edx-0x2b4342d5],0x250b4504
  410d92:	ficom  DWORD PTR ds:0x520190bd
  410d98:	rol    BYTE PTR [ecx],0x11
  410d9b:	sahf   
  410d9c:	repz cmp al,0x3d
  410d9f:	push   0x3
  410da1:	push   es
  410da2:	add    DWORD PTR [edi+0x2a],edx
  410da5:	push   ecx
  410da6:	xchg   DWORD PTR [ebp-0x668cdb0b],esi
  410dac:	push   edx
  410dad:	and    eax,0x8acf8107
  410db2:	fiadd  DWORD PTR [eax-0x7ae0e903]
  410db8:	push   edi
  410db9:	scas   al,BYTE PTR es:[edi]
  410dba:	mov    DWORD PTR [esi+0x48],ecx
  410dbd:	dec    edx
  410dbe:	xlat   BYTE PTR ds:[ebx]
  410dbf:	imul   esp,DWORD PTR [eax],0xfffffff8
  410dc2:	shl    BYTE PTR [eax+0x64749d55],cl
  410dc8:	or     DWORD PTR [esi],eax
  410dca:	push   ebp
  410dcb:	dec    edx
  410dcc:	dec    edx
  410dcd:	shl    ch,cl
  410dcf:	add    BYTE PTR [esp+edi*2-0x4e],0xcb
  410dd4:	retf   0x98cf
  410dd7:	rcl    BYTE PTR [ecx-0x63],cl
  410dda:	les    ebp,FWORD PTR [edi+0x5b]
  410ddd:	push   edi
  410dde:	jmp    0xe60db277
  410de3:	adc    al,0x7a
  410de5:	xchg   DWORD PTR [esi-0x3f],ecx
  410de8:	pop    es
  410de9:	int3   
  410dea:	mov    gs,ecx
  410dec:	fld    QWORD PTR [edx]
  410dee:	ror    DWORD PTR [ecx+0x1d],0xda
  410df2:	xchg   edi,eax
  410df3:	push   esi
  410df4:	adc    ebx,edi
  410df6:	hlt    
  410df7:	xchg   BYTE PTR [ebp-0x6f0a59e3],bl
  410dfd:	mov    esi,0x2796d67c
  410e02:	or     ebx,DWORD PTR [eax+edx*4-0x2a]
  410e06:	mov    ecx,0x4265bc7c
  410e0b:	xor    al,0xd3
  410e0d:	mov    BYTE PTR ds:[ebx+0x6a],bl
  410e11:	sti    
  410e12:	pop    ebx
  410e13:	iret   
  410e14:	sti    
  410e15:	pop    eax
  410e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e17:	int    0xb8
  410e19:	push   0x5cbb85dc
  410e1e:	adc    eax,0x59f2f849
  410e23:	inc    eax
  410e24:	cmovno ecx,DWORD PTR [edx+0x13]
  410e28:	in     al,0xa
  410e2a:	int    0xcf
  410e2c:	rcl    BYTE PTR [edx+0x45],cl
  410e2f:	stos   BYTE PTR es:[edi],al
  410e30:	rcl    BYTE PTR [edx],cl
  410e32:	mov    fs,WORD PTR [edi+0x16]
  410e35:	jbe    0x410e80
  410e37:	or     cl,cl
  410e39:	adc    al,0xce
  410e3b:	xchg   esi,eax
  410e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e3d:	repnz pusha 
  410e3f:	out    dx,eax
  410e40:	pop    edx
  410e41:	pop    ebx
  410e42:	mov    eax,0x72a8400
  410e47:	in     eax,dx
  410e48:	rcr    ecx,cl
  410e4a:	cmp    ch,BYTE PTR [esi]
  410e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e4d:	mov    BYTE PTR [ecx-0x492efbe2],0xa0
  410e54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e55:	fist   WORD PTR [ebx]
  410e57:	adc    al,0x30
  410e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e5a:	jns    0x410e1c
  410e5c:	mov    eax,0xc841cb70
  410e61:	and    ch,BYTE PTR [esi+0x7fbefcb8]
  410e67:	popa   
  410e68:	cmp    ebp,ecx
  410e6a:	inc    esp
  410e6b:	sub    DWORD PTR [ebx+0x596b5b94],ebx
  410e71:	adc    bh,BYTE PTR [esi+0x41]
  410e74:	xor    eax,0x3c49836e
  410e79:	or     eax,0x87360b03
  410e7e:	pop    ebx
  410e7f:	imul   esp,DWORD PTR [ebx-0x3ca3fd36],0x225e55ec
  410e89:	xchg   ebp,eax
  410e8a:	sub    ebp,DWORD PTR [ebx]
  410e8c:	jo     0x410f04
  410e8e:	adc    DWORD PTR [ebx+0x7e775775],ebp
  410e94:	int3   
  410e95:	mov    al,ds:0xbd2d222d
  410e9a:	ins    DWORD PTR es:[edi],dx
  410e9b:	mov    ah,0xae
  410e9d:	leave  
  410e9e:	mov    dl,0xe
  410ea0:	fsub   DWORD PTR [esi-0x3181a5c2]
  410ea6:	adc    eax,0x66ecbb64
  410eab:	test   eax,0x8e162cfd
  410eb0:	cmova  esp,DWORD PTR [ebx+0x19]
  410eb4:	mov    dl,0xa
  410eb6:	jle    0x410edb
  410eb8:	xchg   edx,eax
  410eb9:	es popa 
  410ebb:	xor    esp,DWORD PTR [edx]
  410ebd:	bound  ebx,QWORD PTR [ebp-0x4e8320d7]
  410ec3:	mov    al,0xac
  410ec5:	and    DWORD PTR [ebx+0x39],ebp
  410ec8:	fwait
  410ec9:	xchg   esp,eax
  410eca:	dec    edi
  410ecb:	xor    eax,0x4a3567e5
  410ed0:	mov    WORD PTR [eax],ss
  410ed2:	fstp   QWORD PTR [ecx+eiz*8]
  410ed5:	jg     0x410ea5
  410ed7:	jge    0x410e7b
  410ed9:	jge    0x410e98
  410edb:	mov    ebx,ebp
  410edd:	lds    esp,FWORD PTR [eax]
  410edf:	inc    ecx
  410ee0:	test   al,0x47
  410ee2:	sub    DWORD PTR [eax-0x73],ebp
  410ee5:	clc    
  410ee6:	es std 
  410ee8:	neg    DWORD PTR [ecx+0x39]
  410eeb:	lods   al,BYTE PTR ds:[esi]
  410eec:	or     DWORD PTR [ecx-0xf],ecx
  410eef:	mov    dl,0x1b
  410ef1:	cs clc 
  410ef3:	xor    BYTE PTR [ebp+0xd443246],ch
  410ef9:	cmpxchg BYTE PTR [ebx+edi*8+0xfd9b8ea],al
  410f01:	mov    ebp,0x870188de
  410f06:	loope  0x410e9c
  410f08:	cmp    al,0x16
  410f0a:	shr    ch,cl
  410f0c:	jnp    0x410f07
  410f0e:	sbb    eax,0x8102e21a
  410f13:	ss xor al,0x22
  410f16:	loope  0x410f72
  410f18:	pop    esp
  410f19:	add    DWORD PTR ds:0x807b1cf5,eax
  410f1f:	cli    
  410f20:	imul   DWORD PTR [edi+0x2c]
  410f23:	fs dec edi
  410f25:	cmc    
  410f26:	inc    edx
  410f27:	push   es
  410f28:	test   DWORD PTR [edi+esi*1-0x5e785d88],esp
  410f2f:	inc    edi
  410f30:	add    al,0x2e
  410f32:	push   es
  410f33:	dec    edx
  410f34:	shl    BYTE PTR [edi-0x27483f99],0x28
  410f3b:	jecxz  0x410f3f
  410f3d:	or     BYTE PTR [esi-0x3bcc84c5],0xb6
  410f44:	add    al,BYTE PTR [si+0x4559]
  410f49:	sbb    BYTE PTR ds:0xb6deb4c,bl
  410f4f:	fsub   QWORD PTR [ecx]
  410f51:	jb     0x410f7c
  410f53:	aas    
  410f54:	add    ecx,esi
  410f56:	mov    ebp,0x629ecda8
  410f5b:	addr16 adc eax,0xd259990f
  410f61:	dec    ebp
  410f62:	mov    esp,0xfaa0bf61
  410f67:	fisttp QWORD PTR [ebp-0x461ee570]
  410f6d:	sub    eax,0x41c65a57
  410f72:	cmp    DWORD PTR [ebp-0x1ee321ac],0xfca38ec1
  410f7c:	inc    edi
  410f7d:	jno    0xc4ff1df8
  410f83:	xchg   edi,eax
  410f84:	lods   eax,DWORD PTR ds:[esi]
  410f85:	cmp    BYTE PTR [edx-0x25077762],bl
  410f8b:	push   edi
  410f8c:	ds xor eax,DWORD PTR cs:[eax]
  410f90:	in     eax,dx
  410f91:	pop    eax
  410f92:	ficomp WORD PTR [esi-0xe]
  410f95:	int    0x2
  410f97:	stos   DWORD PTR es:[edi],eax
  410f98:	(bad)  
  410f99:	xchg   esp,eax
  410f9a:	fld    TBYTE PTR [eax]
  410f9c:	xchg   ebx,eax
  410f9d:	ror    BYTE PTR [edi+0x64],1
  410fa0:	fisttp WORD PTR [edi]
  410fa2:	stos   BYTE PTR es:[edi],al
  410fa3:	cmp    dl,BYTE PTR [ebx+0x4e99b8f0]
  410fa9:	xor    ebx,DWORD PTR [eax-0x1962bc8]
  410faf:	add    BYTE PTR [esi+0x27],bh
  410fb2:	mov    ecx,0xd7777774
  410fb7:	pop    eax
  410fb8:	or     ebp,ebp
  410fba:	add    eax,0x223420e
  410fbf:	xor    eax,ecx
  410fc1:	xor    edi,ecx
  410fc3:	sub    DWORD PTR ds:0x42f01c,0x4b20
  410fcd:	mov    edx,0x3272e4
  410fd2:	add    edi,edx
  410fd4:	add    eax,edx
  410fd6:	imul   eax,edi
  410fd9:	mov    edi,DWORD PTR [ebp+0xc]
  410fdc:	cmp    edi,eax
  410fde:	je     0x411033
  410fe4:	mov    DWORD PTR [ebp-0xc],esi
  410fe7:	mov    eax,DWORD PTR [ebp-0xc]
  410fea:	mov    esi,DWORD PTR [ebp+0xc]
  410fed:	xor    eax,ecx
  410fef:	lea    eax,[eax*8+0x1939798]
  410ff6:	mov    eax,DWORD PTR [esi+eax*1]
  410ff9:	mov    DWORD PTR [ebp+0xc],eax
  410ffc:	mov    eax,DWORD PTR [ebp-0x4]
  410fff:	mov    esi,DWORD PTR [ebp-0x8]
  411002:	xor    eax,ecx
  411004:	xor    esi,ecx
  411006:	add    esi,edx
  411008:	add    eax,edx
  41100a:	imul   eax,esi
  41100d:	mov    esi,DWORD PTR [ebp+0xc]
  411010:	cmp    esi,eax
  411012:	je     0x411033
  411018:	mov    eax,DWORD PTR [ebp-0x4]
  41101b:	xor    eax,ecx
  41101d:	mov    ecx,DWORD PTR [ebp+0xc]
  411020:	add    eax,edx
  411022:	imul   eax,ecx
  411025:	add    eax,DWORD PTR [ebp+0x8]
  411028:	mov    DWORD PTR [ebp+0xc],eax
  41102b:	mov    eax,DWORD PTR [ebp+0xc]
  41102e:	jmp    0x411044
  411033:	mov    eax,DWORD PTR [ebp-0x4]
  411036:	mov    esi,DWORD PTR [ebp-0x8]
  411039:	xor    esi,ecx
  41103b:	xor    eax,ecx
  41103d:	add    esi,edx
  41103f:	add    eax,edx
  411041:	imul   eax,esi
  411044:	pop    edi
  411045:	pop    esi
  411046:	leave  
  411047:	ret    0x8
  41104a:	push   ebp
  41104b:	mov    ebp,esp
  41104d:	push   ecx
  41104e:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411055:	mov    eax,DWORD PTR [ebp-0x4]
  411058:	mov    ecx,DWORD PTR ds:0x42f00c
  41105e:	sub    ecx,DWORD PTR ds:0x432000
  411064:	mov    DWORD PTR ds:0x42f00c,ecx
  41106a:	mov    edx,DWORD PTR [ebp+0x10]
  41106d:	and    DWORD PTR ds:0x431000,0x0
  411077:	mov    ecx,DWORD PTR ds:0x431000
  41107d:	inc    ecx
  41107e:	mov    DWORD PTR ds:0x431000,ecx
  411084:	cmp    DWORD PTR ds:0x431000,0x9
  41108b:	jb     0x4110c6
  411091:	jmp    0x41109f
  411096:	push   DWORD PTR [ebp-0x10]
  411099:	call   DWORD PTR ds:0x4348d3
  41109f:	cmp    DWORD PTR ds:0x431000,0x8
  4110a6:	jne    0x4110b9
  4110ac:	mov    ecx,DWORD PTR ds:0x431000
  4110b2:	inc    ecx
  4110b3:	mov    DWORD PTR ds:0x431000,ecx
  4110b9:	cmp    DWORD PTR ds:0x431000,0x15
  4110c0:	jb     0x411077
  4110c6:	mov    ecx,0x751089d
  4110cb:	adc    DWORD PTR ds:0x42e01c,0x1fe6
  4110d5:	xor    eax,ecx
  4110d7:	sub    DWORD PTR ds:0x431014,0x42e018
  4110e1:	add    eax,0x3272e4
  4110e6:	adc    DWORD PTR ds:0x42f01c,0x6968
  4110f0:	mov    DWORD PTR [edx],eax
  4110f2:	mov    eax,DWORD PTR [ebp+0xc]
  4110f5:	xor    eax,ecx
  4110f7:	push   esi
  4110f8:	mov    esi,DWORD PTR [ebp+0x10]
  4110fb:	mov    edx,0x3272e4
  411100:	add    eax,edx
  411102:	mov    DWORD PTR [esi+0x4],eax
  411105:	mov    eax,DWORD PTR [ebp+0x14]
  411108:	mov    esi,DWORD PTR [ebp+0x10]
  41110b:	mov    DWORD PTR [esi+0x8],eax
  41110e:	mov    eax,DWORD PTR [ebp+0x18]
  411111:	mov    esi,DWORD PTR [ebp+0x10]
  411114:	mov    DWORD PTR [esi+0xc],eax
  411117:	mov    eax,DWORD PTR [ebp+0x1c]
  41111a:	mov    esi,DWORD PTR [ebp+0x10]
  41111d:	mov    DWORD PTR [esi+0x10],eax
  411120:	mov    eax,DWORD PTR [ebp+0x8]
  411123:	xor    eax,ecx
  411125:	add    eax,edx
  411127:	pop    esi
  411128:	leave  
  411129:	ret    0x18
  41112c:	push   ebp
  41112d:	mov    ebp,esp
  41112f:	sub    esp,0x9c
  411135:	mov    ecx,DWORD PTR [ebp+0x8]
  411138:	mov    eax,0x8a8e
  41113d:	adc    DWORD PTR ds:0x42f01c,0x2442
  411147:	xor    ax,WORD PTR [ecx+0x20]
  41114b:	mov    ecx,0x3b52
  411150:	add    ax,cx
  411153:	inc    ecx
  411154:	movzx  eax,ax
  411157:	mov    DWORD PTR [ebp-0x10],eax
  41115a:	xor    ecx,DWORD PTR ds:0x43201c
  411160:	mov    BYTE PTR [ebp-0x1],0x7d
  411164:	lea    eax,[ebp-0x1]
  411167:	or     DWORD PTR ds:0x42f010,edi
  41116d:	mov    DWORD PTR [ebp-0xc],eax
  411170:	sbb    ecx,DWORD PTR ds:0x42e008
  411176:	mov    al,BYTE PTR [ebp-0x1]
  411179:	mov    ecx,DWORD PTR [ebp-0xc]
  41117c:	add    DWORD PTR ds:0x43000c,0x430000
  411186:	xor    al,0x75
  411188:	or     DWORD PTR ds:0x43200c,0x43201c
  411192:	sub    al,0x7
  411194:	or     DWORD PTR ds:0x43000c,0x43101c
  41119e:	mov    BYTE PTR [ecx],al
  4111a0:	and    DWORD PTR ds:0x42e00c,0x0
  4111aa:	mov    ecx,DWORD PTR ds:0x42e00c
  4111b0:	inc    ecx
  4111b1:	mov    DWORD PTR ds:0x42e00c,ecx
  4111b7:	cmp    DWORD PTR ds:0x42e00c,0xa
  4111be:	jg     0x4111fb
  4111c4:	jmp    0x4111d4
  4111c9:	push   0x5c91
  4111ce:	call   DWORD PTR ds:0x4348fb
  4111d4:	cmp    DWORD PTR ds:0x42e00c,0x9
  4111db:	jne    0x4111ee
  4111e1:	mov    ecx,DWORD PTR ds:0x42e00c
  4111e7:	inc    ecx
  4111e8:	mov    DWORD PTR ds:0x42e00c,ecx
  4111ee:	cmp    DWORD PTR ds:0x42e00c,0x1b
  4111f5:	jb     0x4111aa
  4111fb:	mov    DWORD PTR [ebp-0x18],0xf89c8581
  411202:	push   ebx
  411203:	mov    DWORD PTR [ebp-0x8],0xf89c8580
  41120a:	xor    eax,eax
  41120c:	mov    ecx,DWORD PTR [ebp-0x18]
  41120f:	movzx  eax,WORD PTR ds:0x42f004
  411216:	sbb    DWORD PTR ds:0x43200c,eax
  41121c:	push   esi
  41121d:	adc    DWORD PTR ds:0x431010,0x64e6
  411227:	mov    eax,0x751089d
  41122c:	adc    DWORD PTR ds:0x430018,0x6491
  411236:	xor    ecx,eax
  411238:	mov    esi,0x3272e4
  41123d:	push   edi
  41123e:	add    ecx,esi
  411240:	mov    DWORD PTR ds:0x431018,0x6541
  41124a:	jmp    0x411278
  41124f:	mov    DWORD PTR ds:0x43000c,0x737f
  411259:	mov    dl,BYTE PTR [ebp-0x1]
  41125c:	mov    DWORD PTR ds:0x43201c,0x6aad
  411266:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41126d:	mov    DWORD PTR ds:0x431008,0x1add
  411277:	inc    ecx
  411278:	mov    DWORD PTR ds:0x42f00c,0x3a2
  411282:	cmp    ecx,0x40
  411285:	jb     0x41124f
  41128b:	mov    edx,DWORD PTR [ebp-0x18]
  41128e:	mov    DWORD PTR ds:0x430000,0xd2a
  411298:	xor    edx,eax
  41129a:	sbb    DWORD PTR ds:0x430004,0x538e
  4112a4:	jmp    0x41365f
  4112a9:	and    ebx,DWORD PTR [ebx]
  4112ab:	mov    ecx,0x23c481e4
  4112b0:	fwait
  4112b1:	sbb    eax,0x15f7fae8
  4112b6:	sbb    BYTE PTR [eax+0x72aee300],dh
  4112bc:	jb     0x41128e
  4112be:	pop    edi
  4112bf:	jb     0x411333
  4112c1:	mov    edi,0x5c4da755
  4112c6:	xchg   ecx,eax
  4112c7:	push   esp
  4112c8:	loope  0x411255
  4112ca:	pop    edx
  4112cb:	xchg   ebx,eax
  4112cc:	stos   DWORD PTR es:[edi],eax
  4112cd:	je     0x4112d8
  4112cf:	icebp  
  4112d0:	inc    ebx
  4112d1:	dec    esp
  4112d2:	jne    0x4112fb
  4112d4:	sbb    eax,0x21c7748c
  4112d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112da:	mov    al,ds:0x79bb8c87
  4112df:	sbb    DWORD PTR [edx+ecx*8-0x27f2595a],edx
  4112e6:	(bad)  
  4112e7:	iret   
  4112e8:	cmc    
  4112e9:	loopne 0x4112ef
  4112eb:	(bad)  
  4112ec:	cmp    al,0x47
  4112ee:	mov    bl,0xda
  4112f0:	sub    BYTE PTR [edx],bh
  4112f2:	adc    DWORD PTR [esi+esi*2],ebp
  4112f5:	bound  eax,QWORD PTR [edi-0x2b]
  4112f8:	dec    esp
  4112f9:	pusha  
  4112fa:	movlps QWORD PTR [eax+0x6e],xmm5
  4112fe:	pop    ss
  4112ff:	test   BYTE PTR [edx-0x8d2980b],0xb9
  411306:	sti    
  411307:	mov    bl,0xfb
  411309:	in     eax,0xf2
  41130b:	cli    
  41130c:	adc    dl,bh
  41130e:	pop    edi
  41130f:	mul    DWORD PTR [eax]
  411311:	xchg   edi,eax
  411312:	inc    esi
  411313:	fwait
  411314:	dec    ebx
  411315:	push   es
  411316:	ret    
  411317:	popa   
  411318:	dec    eax
  411319:	sub    eax,0xe902acc
  41131e:	arpl   WORD PTR [edi],sp
  411320:	test   al,0xaf
  411322:	retf   
  411323:	lods   eax,DWORD PTR ds:[esi]
  411324:	cmp    al,0xff
  411326:	mov    al,0x44
  411328:	xlat   BYTE PTR ds:[ebx]
  411329:	in     al,dx
  41132a:	mov    ecx,0xea01c71d
  41132f:	outs   dx,BYTE PTR ds:[esi]
  411330:	shl    BYTE PTR [edi+0x3c],cl
  411333:	les    ebp,FWORD PTR [edi]
  411335:	cmp    eax,DWORD PTR [eax-0x4e]
  411338:	rcl    DWORD PTR [ecx-0x44d4b8ec],1
  41133e:	lea    esp,[edx]
  411340:	mov    ecx,0xada0a235
  411345:	mov    ecx,edi
  411347:	cmp    al,0x7
  411349:	outs   dx,DWORD PTR ds:[esi]
  41134a:	lods   eax,DWORD PTR ds:[esi]
  41134b:	dec    edi
  41134c:	xor    al,BYTE PTR [ebx+eax*1+0x17e53f4e]
  411353:	inc    esp
  411354:	test   eax,0xd207e8ce
  411359:	mov    ch,0xcd
  41135b:	xor    edi,esp
  41135d:	clc    
  41135e:	arpl   WORD PTR [eax-0x6d],dx
  411361:	lea    cx,[ebx]
  411364:	add    eax,0xc9c37bcd
  411369:	repnz inc DWORD PTR [ebp-0x42]
  41136d:	xchg   edi,eax
  41136e:	clc    
  41136f:	scas   al,BYTE PTR es:[edi]
  411370:	enter  0x668c,0xb3
  411374:	js     0x41133e
  411376:	xchg   esi,eax
  411377:	xchg   cl,al
  411379:	adc    BYTE PTR [edi-0x67650cb1],dl
  41137f:	retf   
  411380:	pop    ebp
  411381:	lahf   
  411382:	js     0x41134e
  411384:	pusha  
  411385:	inc    edi
  411386:	jl     0x4113a6
  411388:	ror    BYTE PTR [edi+ebp*4],1
  41138b:	pop    eax
  41138c:	push   0x60f21ca8
  411391:	mov    edx,0x17eb12f
  411396:	push   es
  411397:	not    DWORD PTR ds:0xe66be4d1
  41139d:	pop    esp
  41139e:	pop    edi
  41139f:	adc    dh,al
  4113a1:	ja     0x4113e3
  4113a3:	and    al,0x39
  4113a5:	shl    BYTE PTR [ecx-0x5431a707],1
  4113ab:	adc    bl,BYTE PTR [edx+0x21a1a490]
  4113b1:	xchg   ebx,eax
  4113b2:	stos   DWORD PTR es:[edi],eax
  4113b3:	and    al,0xba
  4113b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113b6:	xor    BYTE PTR [esi],0x77
  4113b9:	xchg   BYTE PTR ds:0x8a71911f,ch
  4113bf:	sahf   
  4113c0:	mov    dl,0xaa
  4113c2:	push   edi
  4113c3:	les    edi,FWORD PTR [ebp+0x76]
  4113c6:	jb     0x4113be
  4113c8:	fadd   st,st(0)
  4113ca:	inc    ebx
  4113cb:	sar    DWORD PTR [edx+0x16],cl
  4113ce:	imul   ecx,ebx,0x74467257
  4113d4:	adc    dh,ch
  4113d6:	jle    0x411446
  4113d8:	sbb    al,0xa
  4113da:	sti    
  4113db:	and    DWORD PTR [esi+0xd],0xffffffe7
  4113df:	hlt    
  4113e0:	mov    dh,0xd3
  4113e2:	je     0x4113e4
  4113e4:	mov    edi,?
  4113e6:	mov    bl,0x6d
  4113e8:	pop    ebx
  4113e9:	sbb    BYTE PTR [edx],cl
  4113eb:	pop    es
  4113ec:	out    0xc8,eax
  4113ee:	mov    edx,0x63487f28
  4113f3:	cmp    al,0x91
  4113f5:	inc    ebp
  4113f6:	jo     0x411472
  4113f8:	jle    0x4113dc
  4113fa:	cmp    BYTE PTR [esi-0x17c6c1fd],cl
  411400:	stos   DWORD PTR es:[edi],eax
  411401:	or     DWORD PTR es:[ecx],edi
  411404:	popa   
  411405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411406:	push   esp
  411407:	mov    ah,0xac
  411409:	pop    es
  41140a:	xor    eax,0xded3ab46
  41140f:	adc    bl,dh
  411411:	jmp    0x927f:0x998ffaab
  411418:	jecxz  0x4113cd
  41141a:	js     0x41143b
  41141c:	add    eax,0xaf886493
  411421:	jge    0x411497
  411423:	adc    BYTE PTR [edx],0x49
  411426:	sbb    DWORD PTR [edx+eax*4-0x5a],esi
  41142a:	xchg   edx,eax
  41142b:	jmp    FWORD PTR [edi+0x1f]
  41142e:	jmp    0xa23346d5
  411433:	xor    eax,0x88f4c869
  411438:	mov    edi,0x5f9c7f1f
  41143d:	das    
  41143e:	jnp    0x41141a
  411440:	(bad)  
  411441:	push   ds
  411442:	pushf  
  411443:	sahf   
  411444:	mov    ds:0x4badbbd8,al
  411449:	push   edi
  41144a:	xchg   ebx,eax
  41144b:	push   eax
  41144c:	mov    edx,0xb243020
  411451:	jo     0x411469
  411453:	or     eax,0xf03623a8
  411458:	loopne 0x4114d3
  41145a:	mov    ch,0xae
  41145c:	mov    edx,0x8153ef35
  411461:	pop    ecx
  411462:	dec    ebp
  411463:	cmp    BYTE PTR [ecx-0x3d],0x76
  411467:	push   es
  411468:	(bad)  
  411469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41146a:	pop    edx
  41146b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41146c:	xor    DWORD PTR [edi],esi
  41146e:	fcomp  DWORD PTR [esi]
  411470:	push   esp
  411471:	data16 fidivr DWORD PTR [ebx-0x748b097e]
  411478:	jge    0x411416
  41147a:	das    
  41147b:	ds pop ds
  41147d:	es or  al,0xf2
  411480:	lea    esi,[ecx+0x79]
  411483:	add    eax,0x8f7af63c
  411488:	jbe    0x4114ba
  41148a:	das    
  41148b:	call   0xc15b:0xc8607ba7
  411492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411493:	or     dl,0xd3
  411496:	outs   dx,WORD PTR ds:[esi]
  411498:	push   esi
  411499:	dec    ebx
  41149a:	push   cs
  41149b:	lock ret 
  41149d:	aas    
  41149e:	add    DWORD PTR [ebp-0x5197a312],ecx
  4114a4:	aas    
  4114a5:	xchg   ebx,eax
  4114a6:	inc    edi
  4114a7:	and    eax,DWORD PTR [esi-0x36591f6d]
  4114ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114ae:	pop    esi
  4114af:	data16 mov bl,0x54
  4114b2:	les    ecx,FWORD PTR [edi]
  4114b4:	mov    esp,0xaba7705d
  4114b9:	les    ebx,FWORD PTR [ebp-0x70]
  4114bc:	xlat   BYTE PTR ds:[ebx]
  4114bd:	leave  
  4114be:	mov    gs,WORD PTR [edx-0x920391e]
  4114c4:	clc    
  4114c5:	mov    edi,0x5a12ef25
  4114ca:	aas    
  4114cb:	jmp    0x2263:0x830c0f61
  4114d2:	(bad)  [eax+0x5e]
  4114d5:	pop    edi
  4114d6:	and    eax,0xd5744d98
  4114db:	aaa    
  4114dc:	pop    ecx
  4114dd:	out    dx,eax
  4114de:	cwde   
  4114df:	or     esp,edi
  4114e1:	out    0xee,eax
  4114e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e4:	mov    al,BYTE PTR [ecx]
  4114e6:	mov    bh,0x3c
  4114e8:	inc    esp
  4114e9:	mov    bh,BYTE PTR [edx+0x706be3e0]
  4114ef:	add    al,0xbf
  4114f1:	inc    ecx
  4114f2:	and    dl,BYTE PTR [ebp-0x6364827c]
  4114f8:	imul   edi,DWORD PTR [esi+0x1e2c1822],0xffffffe7
  4114ff:	fimul  WORD PTR [edi-0x6dc9a837]
  411505:	outs   dx,DWORD PTR ds:[esi]
  411506:	xor    DWORD PTR [edx+0x4dee7eee],esi
  41150c:	fidiv  DWORD PTR [ebp-0xf99ff7d]
  411512:	jecxz  0x4114fe
  411514:	dec    ecx
  411515:	das    
  411516:	outs   dx,BYTE PTR ds:[esi]
  411517:	xchg   ecx,eax
  411518:	jne    0x411547
  41151a:	lods   al,BYTE PTR ds:[esi]
  41151b:	cmp    BYTE PTR [ecx-0x26],bl
  41151e:	(bad)  
  411520:	or     esp,ebx
  411522:	retf   0xf763
  411525:	(bad)  
  411526:	aad    0xb5
  411528:	sub    ebp,edx
  41152a:	add    bh,BYTE PTR [esp+esi*2+0x15]
  41152e:	sbb    al,0x8
  411530:	or     BYTE PTR [ecx],cl
  411532:	adc    al,0x7
  411534:	addr16 call 0x3c7:0x5a755e61
  41153c:	sbb    al,0x3c
  41153e:	sbb    DWORD PTR [ecx],eax
  411540:	nop
  411541:	jnp    0x411537
  411543:	test   BYTE PTR [ebx-0x35],dh
  411546:	inc    ecx
  411547:	stos   BYTE PTR es:[edi],al
  411548:	jl     0x411584
  41154a:	aad    0x4b
  41154c:	cld    
  41154d:	rcr    DWORD PTR [ebx],0xad
  411550:	dec    eax
  411551:	addr16 sbb eax,0xc390c747
  411557:	ins    DWORD PTR es:[edi],dx
  411558:	loopne 0x411595
  41155a:	lds    eax,FWORD PTR [ebp+0x2eacecfa]
  411560:	cmp    ah,BYTE PTR [ecx+0x1b5848ca]
  411566:	xchg   ecx,eax
  411567:	mov    eax,0xa86fedbc
  41156c:	lea    esi,[ecx-0x1d]
  41156f:	lea    esi,[edx+0x1a732232]
  411575:	in     al,dx
  411576:	repz test DWORD PTR [edx+0x7c],esi
  41157a:	in     eax,dx
  41157b:	and    DWORD PTR [edx-0x4c],ebx
  41157e:	int3   
  41157f:	or     dh,cl
  411581:	test   eax,0xd02dbeb3
  411586:	test   ch,ah
  411588:	addr16 jns 0x411546
  41158b:	faddp  st(4),st
  41158d:	and    al,bh
  41158f:	daa    
  411590:	call   DWORD PTR [ecx+0x3bd4d162]
  411596:	dec    ecx
  411597:	mov    ds:0x57db147c,al
  41159c:	dec    ebp
  41159d:	in     al,0x5f
  41159f:	jb     0x411604
  4115a1:	lea    ebp,[eax-0x6f39c03f]
  4115a7:	repz inc edi
  4115a9:	repnz mov al,ds:0xa8002d90
  4115af:	data16 fwait
  4115b1:	test   esp,ebx
  4115b3:	xor    ebp,esi
  4115b5:	jecxz  0x411552
  4115b7:	in     al,dx
  4115b8:	jecxz  0x4115f2
  4115ba:	cld    
  4115bb:	mov    ch,0xfd
  4115bd:	sub    al,0xed
  4115bf:	retf   0x77c5
  4115c2:	dec    ebx
  4115c3:	xchg   ecx,eax
  4115c4:	add    DWORD PTR [edi-0x4abaa67],ebp
  4115ca:	pop    esp
  4115cb:	sbb    DWORD PTR [esi-0x4f],0xffffffd9
  4115cf:	iret   
  4115d0:	aad    0xf2
  4115d2:	not    DWORD PTR [ecx-0x41]
  4115d5:	add    al,BYTE PTR [ecx-0x6fc7d8bf]
  4115db:	fstp   QWORD PTR [ebp-0x18]
  4115de:	int3   
  4115df:	or     al,0xb8
  4115e2:	fucomp st(0)
  4115e4:	add    DWORD PTR [esi-0x3d],edx
  4115e7:	add    DWORD PTR [edi+0x45],esi
  4115ea:	adc    DWORD PTR [ecx-0x16],ecx
  4115ed:	repz jge 0x411634
  4115f0:	sub    BYTE PTR ss:[esi],al
  4115f3:	sbb    al,0xc
  4115f5:	push   edi
  4115f6:	xchg   ebx,eax
  4115f7:	bound  esi,QWORD PTR [esi]
  4115f9:	outs   dx,DWORD PTR ds:[esi]
  4115fa:	(bad)  
  4115fb:	jp     0x41167b
  4115fd:	mov    cl,0x95
  4115ff:	add    dl,BYTE PTR [bp+di+0x4f]
  411603:	sti    
  411604:	fidiv  WORD PTR [edi+0x4297b42c]
  41160a:	cwde   
  41160b:	fwait
  41160c:	or     BYTE PTR [edx+0x1843c9d7],dh
  411612:	addr16 jns 0x4115e5
  411615:	pushf  
  411616:	inc    eax
  411617:	add    BYTE PTR [esp+edi*4+0x54],ah
  41161b:	sbb    ch,bl
  41161d:	push   es
  41161e:	daa    
  41161f:	pop    ss
  411620:	lock mov edi,0x282dc2e8
  411626:	sub    al,0x38
  411628:	loop   0x411608
  41162a:	call   0xec11:0x2cd66579
  411631:	pop    ebp
  411632:	aaa    
  411633:	les    ebx,FWORD PTR [esi+ebx*1-0x5fef219f]
  41163a:	repnz add BYTE PTR [edi+0x6df184f4],0xac
  411642:	jmp    0x972a:0x222f9268
  411649:	dec    esp
  41164a:	mov    al,ds:0x6d468c17
  41164f:	sbb    BYTE PTR [ecx],dh
  411651:	dec    edi
  411652:	jl     0x41161c
  411654:	hlt    
  411655:	push   edx
  411656:	scas   eax,DWORD PTR es:[edi]
  411657:	jnp    0x411613
  411659:	addr16 nop
  41165b:	mov    ecx,fs
  41165d:	xor    ecx,DWORD PTR [esi+edi*2+0x6c]
  411661:	add    dl,BYTE PTR [ebx+0x56705c6a]
  411667:	(bad)  
  411668:	sar    DWORD PTR ds:[edx-0x5a0e0066],0xbb
  411670:	cld    
  411671:	gs fwait
  411673:	jae    0x4116ef
  411675:	test   eax,0xef7ba25b
  41167a:	mov    WORD PTR [ebx+0x2b],fs
  41167d:	mov    esi,eax
  41167f:	adc    eax,0xd3377980
  411684:	xor    ecx,esp
  411686:	jae    0x4116fb
  411688:	call   0xbf6e0650
  41168d:	(bad)  
  41168e:	sar    dl,1
  411690:	ja     0x41167f
  411692:	push   ax
  411694:	adc    eax,0x24d0b19e
  411699:	push   es
  41169a:	(bad)  
  41169b:	dec    edi
  41169c:	or     BYTE PTR [eax-0x1fcbfbec],0x2a
  4116a3:	retf   
  4116a4:	push   ebp
  4116a5:	stos   BYTE PTR es:[edi],al
  4116a6:	das    
  4116a7:	popa   
  4116a8:	xchg   ebx,eax
  4116a9:	mov    ds:0xbd97170,al
  4116ae:	dec    esp
  4116af:	jl     0x411714
  4116b1:	in     eax,dx
  4116b2:	cmp    bl,BYTE PTR [esi]
  4116b4:	mov    al,0xdb
  4116b6:	stc    
  4116b7:	pop    ebx
  4116b8:	imul   DWORD PTR [ecx-0x38]
  4116bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116bc:	lds    ebp,FWORD PTR [edi-0x14]
  4116bf:	pop    edi
  4116c0:	pop    edi
  4116c1:	xor    al,0x9
  4116c3:	out    0x8b,eax
  4116c5:	inc    edx
  4116c6:	xchg   ebp,eax
  4116c7:	sar    DWORD PTR [ebx],0x63
  4116ca:	repz ror edx,0x8f
  4116ce:	inc    edx
  4116cf:	lods   eax,DWORD PTR ds:[esi]
  4116d0:	mov    ah,0xb
  4116d2:	aad    0x2c
  4116d4:	pop    ecx
  4116d5:	push   es
  4116d6:	xchg   ebx,eax
  4116d7:	ja     0x41173c
  4116d9:	push   ebp
  4116da:	dec    edi
  4116db:	fiadd  DWORD PTR [ebx+0xc559388]
  4116e1:	xchg   BYTE PTR [esp+esi*1+0x51274df8],bl
  4116e8:	jae    0x4116c9
  4116ea:	jl     0x411709
  4116ec:	out    dx,al
  4116ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116ee:	cmp    edi,DWORD PTR [ecx-0x3d4943a7]
  4116f4:	cmp    bl,BYTE PTR [edi]
  4116f6:	sbb    DWORD PTR [esi],edx
  4116f8:	mov    ch,0x1b
  4116fa:	push   ebp
  4116fb:	cmp    ebx,eax
  4116fd:	call   0xb9f7:0x146e0a65
  411704:	dec    esi
  411705:	iret   
  411706:	in     al,0x89
  411708:	sub    al,0xef
  41170a:	dec    eax
  41170b:	jge    0x411781
  41170d:	in     al,dx
  41170e:	aas    
  41170f:	xor    ecx,DWORD PTR [edi-0x42]
  411712:	xor    DWORD PTR [ecx+0x5b],ebx
  411715:	mov    eax,0xe2066fd0
  41171a:	aam    0xa
  41171c:	sbb    dl,dl
  41171e:	xor    eax,0x8d8ee6ad
  411723:	std    
  411724:	stos   BYTE PTR es:[edi],al
  411725:	nop
  411726:	daa    
  411727:	sub    eax,0x206048cc
  41172c:	cli    
  41172d:	outs   dx,DWORD PTR ds:[esi]
  41172e:	pop    ecx
  41172f:	add    esi,DWORD PTR [ecx]
  411731:	sub    dh,ch
  411733:	xchg   edx,eax
  411734:	popf   
  411735:	aam    0xcf
  411737:	fsub   st,st(6)
  411739:	jmp    0x7861773c
  41173e:	jle    0x411763
  411740:	fisttp QWORD PTR [edi]
  411742:	aaa    
  411743:	cld    
  411744:	outs   dx,DWORD PTR ds:[esi]
  411745:	sub    edx,DWORD PTR [eax]
  411747:	and    edi,DWORD PTR [esi]
  411749:	(bad)  
  41174a:	retf   
  41174b:	add    BYTE PTR [eax+0x504ea37],bh
  411751:	pop    ss
  411752:	ret    
  411753:	mov    ds:0xd8427619,eax
  411758:	sub    eax,0xcfb6aa59
  41175d:	push   eax
  41175e:	mov    al,ds:0xdc5039b
  411763:	(bad)  
  411765:	aaa    
  411766:	test   al,0x15
  411768:	inc    ecx
  411769:	scas   al,BYTE PTR es:[edi]
  41176a:	sub    al,0xe2
  41176c:	pop    es
  41176d:	mov    eax,0x218f9795
  411772:	xchg   esi,eax
  411773:	rcr    DWORD PTR [ebx],0x55
  411776:	adc    DWORD PTR [edx+0x6fe38bbb],ebp
  41177c:	idiv   BYTE PTR [edx-0x34]
  41177f:	stc    
  411780:	cld    
  411781:	cmp    eax,DWORD PTR [eax-0x2495f269]
  411787:	mov    dh,0xd1
  411789:	adc    esi,DWORD PTR [edi]
  41178b:	mov    dl,0x3a
  41178d:	or     eax,0xe7b7d762
  411792:	mov    DWORD PTR [ecx],ecx
  411794:	int    0x1d
  411796:	not    DWORD PTR [edi]
  411798:	xchg   ecx,eax
  411799:	mov    ds:0xe21e71c0,al
  41179e:	(bad)  
  4117a0:	adc    BYTE PTR fs:[ecx+edx*8],dl
  4117a4:	and    edi,ebx
  4117a6:	push   esp
  4117a7:	mov    esp,0xcff044b2
  4117ac:	add    DWORD PTR [ebx+esi*8],esp
  4117af:	lds    ecx,FWORD PTR [ebx-0x4]
  4117b2:	jmp    DWORD PTR [edi+0x69]
  4117b5:	xor    BYTE PTR [ecx],0x83
  4117b8:	call   0x45dd:0x26cddd0a
  4117bf:	jecxz  0x411791
  4117c1:	fstp   TBYTE PTR [ecx]
  4117c3:	xchg   cl,ah
  4117c5:	ja     0x41183a
  4117c7:	adc    al,BYTE PTR [edi-0x46b0ee99]
  4117cd:	aaa    
  4117ce:	sbb    eax,0x67d4a0bc
  4117d3:	or     edx,DWORD PTR [eax]
  4117d5:	pop    ebp
  4117d6:	cs pop ecx
  4117d8:	pushf  
  4117d9:	cs pop eax
  4117db:	mov    DWORD PTR ds:0x15a11e2a,edx
  4117e1:	dec    ebx
  4117e2:	xchg   esi,eax
  4117e3:	add    eax,0x75171738
  4117e8:	jne    0x411831
  4117ea:	xor    ebx,DWORD PTR [ecx]
  4117ec:	mov    cl,0x30
  4117ee:	xchg   esi,eax
  4117ef:	add    eax,0x337c65a4
  4117f4:	call   0x70c95b3b
  4117f9:	jnp    0x411852
  4117fb:	dec    ebp
  4117fc:	push   edi
  4117fd:	mov    dh,0x50
  4117ff:	push   edi
  411801:	shl    DWORD PTR [ecx-0x2a],0xdf
  411805:	push   ebx
  411806:	pop    esp
  411808:	div    BYTE PTR [eax+0x3b]
  41180b:	ret    0xe694
  41180e:	or     ah,BYTE PTR [ecx+0x5c08cb0b]
  411814:	mov    eax,DWORD PTR [edi]
  411816:	ja     0x41184e
  411818:	inc    ebx
  411819:	mov    ds:0xf12ab994,eax
  41181e:	lock and esp,ecx
  411821:	and    eax,0x2cbc7c06
  411826:	xchg   BYTE PTR [ebx],al
  411828:	pusha  
  411829:	cmp    bl,dh
  41182b:	jmp    0xcfeed687
  411830:	lods   al,BYTE PTR ds:[esi]
  411831:	test   eax,0x9383b1a6
  411836:	lods   al,BYTE PTR ds:[esi]
  411837:	leave  
  411838:	setl   BYTE PTR [esi+0x21]
  41183c:	imul   ecx,edi,0xffffffea
  41183f:	popf   
  411840:	cmp    eax,0x102d8097
  411845:	pop    ds
  411846:	push   ss
  411847:	stos   BYTE PTR es:[edi],al
  411848:	adc    cl,bh
  41184a:	into   
  41184b:	xor    al,0x98
  41184d:	or     esi,DWORD PTR [esi+0x39]
  411850:	test   al,0xc7
  411852:	dec    esi
  411853:	retw   0xf8fc
  411857:	dec    edi
  411858:	mov    bl,0xe8
  41185a:	div    BYTE PTR fs:[edi]
  41185d:	sbb    DWORD PTR [ecx-0x2f],edi
  411860:	xchg   ecx,eax
  411861:	adc    edx,DWORD PTR [edx]
  411863:	jne    0x41181e
  411865:	pop    edx
  411866:	jecxz  0x411858
  411868:	stos   BYTE PTR es:[edi],al
  411869:	pop    ebp
  41186a:	into   
  41186b:	fstp   TBYTE PTR [esi+eiz*4]
  41186e:	add    al,0xbe
  411870:	add    al,0xba
  411872:	cmp    BYTE PTR [esi-0x1666bfaa],0x1d
  411879:	xor    al,0xcc
  41187b:	xchg   esi,eax
  41187c:	js     0x411827
  41187e:	fwait
  41187f:	xchg   esp,eax
  411880:	test   al,0x84
  411882:	(bad)  
  411883:	enter  0xce7f,0xb2
  411887:	enter  0x5c1d,0x8d
  41188b:	ffreep st(1)
  41188d:	jbe    0x41180f
  41188f:	enter  0x8f02,0x1c
  411893:	and    eax,DWORD PTR [esi-0x3f2db231]
  411899:	adc    bl,BYTE PTR [ebp+0xd0ad87e]
  41189f:	jnp    0x411831
  4118a1:	das    
  4118a2:	imul   esp,DWORD PTR cs:[ebx-0x2],0xb85a3b16
  4118aa:	lea    eax,[edi-0x1f]
  4118ad:	sub    bl,BYTE PTR [edx+eax*2-0x167ea8d4]
  4118b4:	xchg   edx,eax
  4118b5:	mov    bh,0x75
  4118b7:	out    0xef,eax
  4118b9:	mov    esi,0xdc9568e0
  4118be:	repnz sbb cl,BYTE PTR [eax]
  4118c1:	fsubr  st(4),st
  4118c3:	jne    0x41190f
  4118c5:	jne    0x4118a9
  4118c7:	sbb    ebx,DWORD PTR [ebx]
  4118c9:	inc    ecx
  4118ca:	aam    0x7e
  4118cc:	clc    
  4118cd:	inc    ebx
  4118ce:	mov    dl,0x71
  4118d0:	in     al,0x8a
  4118d2:	hlt    
  4118d3:	popa   
  4118d4:	mov    ebx,0x20a5a12d
  4118d9:	aaa    
  4118da:	aad    0x18
  4118dc:	ja     0x411867
  4118de:	fisubr DWORD PTR [esi+edi*4-0x11]
  4118e2:	(bad)  
  4118e3:	xor    bh,cl
  4118e5:	pop    ecx
  4118e6:	es jp  0x411873
  4118e9:	adc    al,0xf3
  4118eb:	icebp  
  4118ec:	and    BYTE PTR [ebx+eax*8+0x49],ch
  4118f0:	aaa    
  4118f1:	xchg   esp,eax
  4118f2:	pusha  
  4118f3:	(bad)  
  4118f4:	pusha  
  4118f5:	xlat   BYTE PTR ds:[ebx]
  4118f6:	lahf   
  4118f7:	push   edx
  4118f8:	xchg   esp,eax
  4118f9:	mov    ds:0xf1083637,eax
  4118fe:	sub    ebx,DWORD PTR [ebp+ebp*4-0x17]
  411902:	ror    al,cl
  411904:	test   eax,0x75376027
  411909:	push   0xe7c1d23c
  41190e:	scas   eax,DWORD PTR es:[edi]
  41190f:	imul   ecx,DWORD PTR [ebp-0x65],0x30e23826
  411916:	mov    edi,0xae165a3e
  41191b:	shl    DWORD PTR [esi+0x63310a74],1
  411921:	lods   eax,DWORD PTR ds:[esi]
  411922:	push   ecx
  411923:	in     eax,dx
  411924:	adc    al,0xa7
  411926:	add    al,0x33
  411928:	pop    edx
  411929:	cmp    ch,cl
  41192b:	mov    edi,0x8df7fd22
  411930:	dec    esp
  411931:	add    ecx,DWORD PTR [ebx-0x7e2c324c]
  411937:	enter  0x666d,0x8b
  41193b:	mov    bl,0xf3
  41193d:	loop   0x41194e
  41193f:	dec    ecx
  411940:	sbb    DWORD PTR [esi+ebx*2-0x5d516e05],0xb2802115
  41194b:	pusha  
  41194c:	retf   0x3201
  41194f:	push   ebp
  411950:	out    0x23,al
  411952:	mov    esp,0x4e6d84c1
  411957:	sbb    dh,BYTE PTR ss:[esi]
  41195a:	dec    esp
  41195b:	sahf   
  41195c:	ja     0x411932
  41195e:	out    dx,eax
  41195f:	lods   eax,DWORD PTR ds:[esi]
  411960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411961:	loop   0x411928
  411963:	addr16 loopne 0x41193c
  411966:	repnz push edx
  411968:	(bad)  
  411969:	or     al,0xe0
  41196b:	cmp    dh,BYTE PTR [esi]
  41196d:	int3   
  41196e:	dec    ebp
  41196f:	cli    
  411970:	mov    dh,0xc
  411972:	sbb    eax,ebp
  411974:	icebp  
  411975:	cli    
  411976:	jno    0x41193d
  411978:	pop    edi
  411979:	shl    BYTE PTR [esi-0x9],1
  41197c:	jp     0x41192f
  41197e:	cmp    DWORD PTR ss:[ebp+0x7b641c17],ebp
  411985:	and    ecx,esi
  411987:	xchg   DWORD PTR [esi+0x4a159e44],esi
  41198d:	adc    al,0xcc
  41198f:	into   
  411990:	cmc    
  411991:	jmp    0x4119d1
  411993:	sbb    al,BYTE PTR [ebx+0x6c]
  411996:	in     al,dx
  411997:	lahf   
  411998:	(bad)  
  411999:	repnz scas eax,DWORD PTR es:[edi]
  41199b:	mov    edx,0x8c686275
  4119a0:	int    0xa9
  4119a2:	push   ecx
  4119a3:	or     cl,0x78
  4119a6:	data16 (bad) 
  4119a8:	sub    eax,0x80391a01
  4119ad:	push   edx
  4119ae:	mov    bh,0x52
  4119b0:	xchg   edx,eax
  4119b1:	mov    ebx,0x915aa3b0
  4119b6:	pop    esi
  4119b7:	xchg   esp,eax
  4119b8:	nop
  4119b9:	retf   
  4119ba:	dec    esp
  4119bb:	aad    0x44
  4119bd:	adc    cl,BYTE PTR [ebp+0x5e39430d]
  4119c3:	add    al,0xd0
  4119c5:	mov    esi,0x667ff56
  4119ca:	pop    ds
  4119cb:	cld    
  4119cc:	out    dx,al
  4119cd:	ins    DWORD PTR es:[edi],dx
  4119ce:	and    ecx,DWORD PTR [edx+0x30]
  4119d1:	test   al,0x38
  4119d3:	hlt    
  4119d4:	jns    0x411a43
  4119d6:	in     eax,0x8b
  4119d8:	inc    ebx
  4119d9:	out    dx,eax
  4119da:	jmp    0xe58a:0xbadbe1d8
  4119e1:	xor    cl,ah
  4119e3:	xchg   esp,eax
  4119e4:	loope  0x411976
  4119e6:	(bad)  
  4119e7:	fldl2t 
  4119e9:	push   edi
  4119ea:	icebp  
  4119eb:	pop    ecx
  4119ec:	test   al,0xfc
  4119ee:	jno    0x4119e3
  4119f0:	xchg   ecx,eax
  4119f1:	xor    DWORD PTR [eax-0x51],0x5e90754
  4119f8:	sub    DWORD PTR [edi+0x4a307dee],ecx
  4119fe:	(bad)  
  4119ff:	push   ss
  411a00:	(bad)  
  411a01:	dec    bl
  411a03:	inc    edi
  411a04:	adc    DWORD PTR [ebp-0x1ce53569],0x6fe8c5cf
  411a0e:	push   ebp
  411a0f:	pop    edx
  411a10:	repz sub al,0xc8
  411a13:	push   sp
  411a15:	sub    al,0x36
  411a17:	out    0xdc,al
  411a19:	lock mov al,0xcb
  411a1c:	xchg   ebx,eax
  411a1d:	adc    eax,0x6c674bbf
  411a22:	pop    edi
  411a23:	dec    eax
  411a24:	xchg   ebx,eax
  411a25:	mov    ds:0x230af21f,al
  411a2a:	sub    eax,0x337586fc
  411a2f:	bt     DWORD PTR [ebx+0x70],edx
  411a33:	aas    
  411a34:	mov    esp,ebp
  411a36:	and    al,0xc4
  411a38:	inc    esi
  411a39:	mov    ebp,0xb16ce0c2
  411a3e:	jmp    0x6f3f:0xed7432ce
  411a45:	iret   
  411a46:	fisub  WORD PTR [ecx]
  411a48:	clc    
  411a49:	mov    ebp,0xa74ff451
  411a4e:	xchg   ebp,eax
  411a4f:	mov    ?,WORD PTR [ebp+ebp*4+0x38aee321]
  411a56:	dec    esi
  411a57:	push   0x38
  411a59:	push   eax
  411a5a:	shl    BYTE PTR [esi],1
  411a5c:	cs or  bh,ch
  411a5f:	stos   BYTE PTR es:[edi],al
  411a60:	xchg   ecx,eax
  411a61:	pop    ecx
  411a62:	mov    dh,0xf5
  411a64:	xchg   edi,eax
  411a65:	sub    edx,edi
  411a67:	add    DWORD PTR [edi-0x44],0xbe1780a3
  411a6e:	push   eax
  411a6f:	pop    esp
  411a70:	repnz scas al,BYTE PTR es:[edi]
  411a72:	jg     0x411ab3
  411a74:	mov    ds:0x343fb236,al
  411a79:	cs aam 0x4f
  411a7c:	pop    ecx
  411a7d:	pop    es
  411a7e:	xchg   bl,ah
  411a80:	es pushf 
  411a82:	or     dl,bh
  411a84:	sbb    al,0xa6
  411a86:	leave  
  411a87:	jg     0x411a54
  411a89:	or     eax,0x7f1cbbc8
  411a8e:	bswap  ebx
  411a90:	push   0x2298392f
  411a95:	xor    BYTE PTR [edi-0x5],dh
  411a98:	aas    
  411a99:	pop    ss
  411a9a:	pusha  
  411a9b:	leave  
  411a9c:	fimul  DWORD PTR [ebx+0x30]
  411a9f:	xchg   BYTE PTR [ebp-0x51fa61ee],cl
  411aa5:	inc    esp
  411aa7:	ins    DWORD PTR es:[edi],dx
  411aa8:	inc    ebx
  411aa9:	pop    ebp
  411aaa:	and    BYTE PTR [ebp-0x3a],cl
  411aad:	int3   
  411aae:	not    DWORD PTR [ecx-0x2c7b9ecf]
  411ab4:	xor    DWORD PTR [edi+ebp*8+0x67a7e51f],ecx
  411abb:	push   eax
  411abc:	les    edi,FWORD PTR [esi+0x3e9a9a9]
  411ac2:	mov    edx,0x1db42cae
  411ac7:	and    BYTE PTR [edi-0x76a6a7f8],bl
  411acd:	dec    edx
  411ace:	jl     0x411b41
  411ad0:	pop    esi
  411ad1:	push   ss
  411ad2:	aaa    
  411ad3:	push   ecx
  411ad4:	adc    esp,DWORD PTR [ecx-0x3e1f1052]
  411ada:	aaa    
  411adb:	pusha  
  411adc:	pushf  
  411add:	cmp    ebp,DWORD PTR [esi-0x49c1baf4]
  411ae3:	fs in  eax,dx
  411ae5:	outs   dx,DWORD PTR ds:[esi]
  411ae6:	repz and al,0xda
  411ae9:	std    
  411aea:	mov    al,bl
  411aec:	daa    
  411aed:	mov    ecx,0x6b962833
  411af2:	and    eax,0xc1bcb164
  411af7:	add    ebx,DWORD PTR [edi]
  411af9:	mov    BYTE PTR [ebx-0x1f1fbff9],ch
  411aff:	lea    ebx,[edx-0x56e73b11]
  411b05:	scas   eax,DWORD PTR es:[edi]
  411b06:	icebp  
  411b07:	mov    ch,0xa5
  411b09:	pop    ebp
  411b0a:	adc    DWORD PTR [esp+ebx*8-0x398dff73],eax
  411b11:	xor    al,0x1f
  411b13:	mov    BYTE PTR [ecx-0x2],0x83
  411b17:	xor    DWORD PTR [edi+ebp*2+0x1],ecx
  411b1b:	bound  esi,QWORD PTR [ebx+0x7d]
  411b1e:	cmp    ch,cl
  411b20:	mov    DWORD PTR ss:[esi],ecx
  411b23:	out    0x84,al
  411b25:	mov    ds:0x2e5247b4,al
  411b2a:	cmp    DWORD PTR [edx-0x17da8115],ebx
  411b30:	cmp    dh,BYTE PTR [eax-0x245738b4]
  411b36:	push   0xfffffff4
  411b38:	xchg   edi,eax
  411b39:	push   edi
  411b3a:	das    
  411b3b:	pop    ds
  411b3c:	dec    eax
  411b3d:	ins    DWORD PTR es:[edi],dx
  411b3e:	jle    0x411b09
  411b40:	xchg   DWORD PTR [esi],ebp
  411b42:	and    DWORD PTR [eax+ecx*1],ebx
  411b45:	xchg   esi,eax
  411b46:	dec    ecx
  411b47:	cdq    
  411b48:	sub    DWORD PTR [esi-0x202f478d],ebx
  411b4e:	mov    WORD PTR [edi],gs
  411b50:	std    
  411b51:	sbb    DWORD PTR [eax-0x404e2af],eax
  411b57:	out    0x89,al
  411b59:	loope  0x411b1e
  411b5b:	cmp    cl,BYTE PTR [ecx-0xb0bb82b]
  411b61:	call   0x7d4d:0x82a68274
  411b68:	(bad)  
  411b69:	mov    bh,0x33
  411b6b:	dec    eax
  411b6c:	cmp    cl,BYTE PTR [edx-0x68]
  411b6f:	push   es
  411b70:	mov    ecx,0xe479b09f
  411b75:	sub    cl,BYTE PTR [ebx+0x627c2403]
  411b7b:	pop    ss
  411b7c:	mov    esi,0x72b4b3c0
  411b81:	jecxz  0x411bc7
  411b83:	in     eax,0xf8
  411b85:	ss dec edx
  411b87:	leave  
  411b88:	mov    ch,0x4
  411b8a:	retf   
  411b8b:	sbb    DWORD PTR [ebx+eax*4+0x1912fb60],edx
  411b92:	mov    al,ds:0x6713f272
  411b97:	(bad)  
  411b98:	xchg   ebx,eax
  411b99:	jne    0x411b5a
  411b9b:	adc    BYTE PTR [ecx],dh
  411b9d:	(bad)  
  411b9e:	and    al,0x3a
  411ba0:	repnz push es
  411ba2:	mov    ds:0xb02eab95,al
  411ba7:	inc    edi
  411ba8:	leave  
  411ba9:	(bad)  
  411baa:	fdivr  QWORD PTR [ecx+0x40]
  411bad:	or     al,0x82
  411baf:	retf   
  411bb0:	retf   
  411bb1:	inc    BYTE PTR [ebp-0x14af4822]
  411bb7:	jmp    0x4912:0x63a15851
  411bbe:	xor    bh,BYTE PTR [ebx+0x3e]
  411bc1:	in     al,0x3b
  411bc3:	out    dx,eax
  411bc4:	xor    al,0x23
  411bc6:	cdq    
  411bc7:	add    edx,DWORD PTR [ebx+esi*8]
  411bca:	fwait
  411bcb:	sbb    DWORD PTR [ecx+ebp*8-0x3a669543],ebp
  411bd2:	inc    esi
  411bd3:	push   es
  411bd4:	sub    dh,BYTE PTR [esi-0x41]
  411bd7:	inc    edx
  411bd8:	repnz mov ds:0x6be946af,eax
  411bde:	mov    al,ds:0x6521f0a0
  411be3:	bound  eax,QWORD PTR [ecx+0x4d]
  411be6:	mov    ds:0x94c1fef2,al
  411beb:	pop    ebp
  411bec:	fsubrp st(3),st
  411bee:	ins    BYTE PTR es:[edi],dx
  411bef:	and    BYTE PTR [edi],dh
  411bf1:	or     al,0x91
  411bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bf4:	pop    esp
  411bf5:	sbb    BYTE PTR [esi+eax*4],0x65
  411bf9:	enter  0x605e,0x93
  411bfd:	pop    esp
  411bfe:	cld    
  411bff:	int    0xd2
  411c01:	imul   ecx,edi,0xffffffe0
  411c04:	pop    DWORD PTR [ebx]
  411c06:	push   0xffffffb3
  411c08:	add    DWORD PTR [edi],esi
  411c0a:	xchg   ebx,eax
  411c0b:	pop    edx
  411c0c:	inc    edi
  411c0d:	cmp    bh,BYTE PTR [esi-0x73]
  411c10:	pop    ss
  411c11:	xchg   dh,ah
  411c13:	jl     0x411c6a
  411c15:	retf   0xb2d8
  411c18:	xor    DWORD PTR [edi+0x3a4053df],ecx
  411c1e:	ja     0x411c1e
  411c20:	cmp    ebp,ecx
  411c22:	inc    ecx
  411c23:	into   
  411c24:	and    al,0xef
  411c26:	and    al,0xec
  411c28:	lahf   
  411c29:	cmp    ebp,ebp
  411c2b:	mov    bl,0x60
  411c2d:	xchg   ebp,eax
  411c2e:	dec    eax
  411c2f:	retf   
  411c30:	xor    eax,0x42944f13
  411c35:	test   al,0x1
  411c37:	jmp    0x46ac868c
  411c3c:	or     DWORD PTR [ebx+0x77e0c8e7],0xffffffd7
  411c43:	clc    
  411c44:	inc    ebx
  411c45:	xchg   DWORD PTR [edx-0x32304449],edx
  411c4b:	xchg   ebx,eax
  411c4c:	push   es
  411c4d:	nop
  411c4e:	rcr    BYTE PTR [eax],cl
  411c50:	push   esp
  411c51:	mov    bh,0xbb
  411c53:	add    DWORD PTR [eax+edi*8],ebx
  411c56:	sar    DWORD PTR [edx+0x24],0x3f
  411c5a:	loope  0x411c79
  411c5c:	push   edx
  411c5d:	aam    0x65
  411c5f:	sbb    BYTE PTR [eax],bh
  411c61:	dec    ecx
  411c62:	test   BYTE PTR [edx],ch
  411c64:	test   ebx,esp
  411c66:	adc    DWORD PTR [ecx+0x63658acb],ebx
  411c6c:	jmp    0x8552753f
  411c71:	dec    edi
  411c72:	add    DWORD PTR [edx+0x79],0x31365168
  411c79:	push   ds
  411c7a:	clc    
  411c7b:	push   edx
  411c7c:	xor    al,0x6f
  411c7e:	iret   
  411c7f:	mov    WORD PTR [ebp-0x3b3e759d],?
  411c85:	clc    
  411c86:	clc    
  411c87:	xor    bh,BYTE PTR [ecx+0x56e6b66b]
  411c8d:	hlt    
  411c8e:	inc    esi
  411c8f:	or     dh,bl
  411c91:	cmp    BYTE PTR [ebx-0x71],dh
  411c94:	es cli 
  411c96:	sti    
  411c97:	je     0x411c45
  411c99:	test   BYTE PTR [edx+eiz*8-0x3e7e4f5],0xb9
  411ca1:	aas    
  411ca2:	and    al,0x2c
  411ca4:	shl    BYTE PTR [eax+0x3d757ad2],0x9e
  411cab:	jmp    FWORD PTR [ebp+0x3ca5aebf]
  411cb1:	ret    
  411cb2:	cmp    DWORD PTR [edi],ebp
  411cb4:	and    BYTE PTR [edx],bl
  411cb6:	mov    ch,BYTE PTR [ecx-0x7ce61182]
  411cbc:	fcmovnbe st,st(2)
  411cbe:	mov    dh,0x68
  411cc0:	push   0xffffffa6
  411cc2:	test   eax,0xbebf4c74
  411cc7:	mov    al,ds:0xd9a8e5a0
  411ccc:	sub    ah,cl
  411cce:	repnz mov ds:0x62686b38,al
  411cd4:	sbb    BYTE PTR [ebx-0x6371c40d],0xd
  411cdb:	pushf  
  411cdc:	adc    DWORD PTR [ebx-0x2f14129a],esi
  411ce2:	sbb    BYTE PTR [eax],bl
  411ce4:	mov    edi,0xa8c65bb3
  411ce9:	push   0xe2d1cbd0
  411cee:	fs add esp,ecx
  411cf1:	cmp    eax,0x88401ef6
  411cf6:	addr16 aad 0xf2
  411cf9:	or     al,0x60
  411cfb:	mov    esi,DWORD PTR [ebp+edi*4-0x4e]
  411cff:	mov    ch,0x5e
  411d01:	xor    eax,0xee798b74
  411d06:	retf   
  411d07:	sub    dl,BYTE PTR [eax-0x52]
  411d0a:	test   eax,0x19aa9846
  411d0f:	dec    edi
  411d11:	jp     0x411d18
  411d13:	scas   al,BYTE PTR es:[edi]
  411d14:	jp     0x411d1d
  411d16:	mov    gs,WORD PTR [ebp-0x65e1f04f]
  411d1c:	outs   dx,BYTE PTR ds:[esi]
  411d1d:	dec    ebx
  411d1e:	js     0x411d5d
  411d20:	push   ebx
  411d21:	(bad)  
  411d22:	mov    esp,0xb55f9546
  411d27:	xchg   esi,eax
  411d28:	pop    es
  411d29:	std    
  411d2a:	pop    es
  411d2b:	jl     0x411d04
  411d2d:	or     eax,0x38c3b618
  411d32:	add    al,0x1f
  411d34:	in     al,dx
  411d35:	add    DWORD PTR [ebp+0x45bfb962],ebx
  411d3b:	push   ebx
  411d3c:	shl    DWORD PTR [ebx-0x1e47f64],cl
  411d42:	cld    
  411d43:	mov    ds:0x6a76c3c5,eax
  411d48:	dec    edx
  411d49:	and    esp,DWORD PTR [esi]
  411d4b:	or     al,0xe
  411d4d:	or     BYTE PTR [ecx-0x44],dl
  411d50:	adc    eax,0x3056ac6f
  411d55:	std    
  411d56:	mov    bh,0xd7
  411d58:	cdq    
  411d59:	cdq    
  411d5a:	adc    ebp,ebp
  411d5c:	sbb    BYTE PTR [ebx],cl
  411d5e:	xor    esi,ecx
  411d60:	mov    BYTE PTR ds:0x76c24f6c,ah
  411d66:	ss jge 0x411d2e
  411d69:	push   0x65f86409
  411d6e:	sti    
  411d6f:	push   esp
  411d70:	xor    cl,0x9e
  411d73:	add    eax,0x8d480bcc
  411d78:	les    edx,FWORD PTR [eax]
  411d7a:	inc    edx
  411d7b:	xor    eax,DWORD PTR [esi+edi*8+0x38198a84]
  411d82:	push   0x2bab31f6
  411d87:	dec    edx
  411d88:	push   eax
  411d89:	outs   dx,BYTE PTR ds:[esi]
  411d8a:	int3   
  411d8b:	add    eax,0xb80c4571
  411d90:	sbb    eax,0x4b0d6a52
  411d95:	test   DWORD PTR [edx+0x3e3b271],ecx
  411d9b:	outs   dx,DWORD PTR ds:[esi]
  411d9c:	xor    BYTE PTR [esp+eiz*8-0x2b940995],bh
  411da3:	mov    ecx,DWORD PTR [ecx+eax*8]
  411da6:	mov    ebp,0x677877da
  411dab:	popa   
  411dac:	aam    0x90
  411dae:	jnp    0x411e26
  411db0:	inc    cx
  411db2:	inc    esi
  411db3:	jmp    0x40d1:0x3e46f32c
  411dba:	je     0x411d4d
  411dbc:	(bad)  
  411dbd:	loopne 0x411d48
  411dbf:	jg     0x411e40
  411dc1:	dec    esi
  411dc2:	stc    
  411dc3:	mov    ds:0x62aec631,al
  411dc8:	lods   eax,DWORD PTR ds:[esi]
  411dc9:	push   ebx
  411dca:	cmc    
  411dcb:	iret   
  411dcc:	stos   DWORD PTR es:[edi],eax
  411dcd:	jg     0x411d7a
  411dcf:	js     0x411dfb
  411dd1:	mov    ecx,0xa75dbfa9
  411dd6:	and    al,0x61
  411dd8:	and    bl,al
  411dda:	js     0x411deb
  411ddc:	mov    edx,edx
  411dde:	mov    esi,0x297f3213
  411de3:	in     eax,dx
  411de4:	fbstp  TBYTE PTR [ebp-0x3c]
  411de7:	jmp    0x411e0f
  411de9:	push   ecx
  411dea:	push   DWORD PTR [ebx+esi*2-0x18]
  411dee:	les    ecx,FWORD PTR [eax]
  411df0:	jae    0x411e55
  411df2:	rep stos DWORD PTR es:[edi],eax
  411df4:	cld    
  411df5:	jne    0x411e1e
  411df7:	lods   al,BYTE PTR ds:[esi]
  411df8:	push   ds
  411df9:	nop
  411dfa:	adc    eax,0xee960845
  411dff:	ins    BYTE PTR es:[edi],dx
  411e00:	les    edi,FWORD PTR [ebx*2+0x343329e7]
  411e07:	retf   
  411e08:	xor    ah,dl
  411e0a:	jnp    0x411e4c
  411e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e0d:	adc    BYTE PTR [edx],dh
  411e0f:	or     BYTE PTR [ebp-0x192dfd54],0x5d
  411e16:	or     eax,0x46168271
  411e1b:	shl    ebp,cl
  411e1d:	repz loopne 0x411db2
  411e20:	aad    0xc4
  411e22:	daa    
  411e23:	jg     0x411ea3
  411e25:	popa   
  411e26:	outs   dx,BYTE PTR ds:[esi]
  411e27:	lods   eax,DWORD PTR ds:[esi]
  411e28:	or     al,0x3b
  411e2a:	ins    BYTE PTR es:[edi],dx
  411e2b:	loopne 0x411e3e
  411e2d:	xor    dl,BYTE PTR [ebx]
  411e2f:	pop    esi
  411e30:	stos   BYTE PTR es:[edi],al
  411e31:	(bad)  
  411e32:	bswap  ecx
  411e34:	leave  
  411e35:	cmp    ch,bl
  411e37:	inc    ecx
  411e38:	push   edi
  411e39:	pop    ecx
  411e3a:	or     BYTE PTR [edx-0x2],bl
  411e3d:	(bad)  
  411e3e:	jnp    0x411e0a
  411e40:	push   edx
  411e41:	gs jne 0x411eb4
  411e44:	fild   WORD PTR [eax-0x78]
  411e47:	and    eax,0xaac28e03
  411e4c:	mov    BYTE PTR [eax-0x2ec2143b],bl
  411e52:	add    esp,esi
  411e54:	jbe    0x411e54
  411e56:	xchg   ecx,eax
  411e57:	retf   0xf574
  411e5a:	or     DWORD PTR ds:0xfd96095,ecx
  411e60:	fs (bad) 
  411e62:	push   ebp
  411e63:	adc    ecx,DWORD PTR [ecx+0x7f]
  411e66:	pusha  
  411e67:	jmp    0x411e38
  411e69:	xchg   edi,eax
  411e6a:	adc    eax,0x585e41b6
  411e6f:	fmul   st(5),st
  411e71:	jge    0x411e0a
  411e73:	pop    edi
  411e74:	xchg   esi,eax
  411e75:	mov    esp,0xb6f8e381
  411e7a:	aam    0xbc
  411e7c:	mov    ds:0x7b37bb48,al
  411e81:	sub    ebp,DWORD PTR [edi]
  411e83:	add    ch,BYTE PTR [ecx+ecx*1+0x68034d71]
  411e8a:	mov    bh,BYTE PTR [edi+0x51]
  411e8d:	arpl   WORD PTR [edx-0x2c1b4e9f],cx
  411e93:	dec    esi
  411e94:	inc    BYTE PTR [ebx-0x2a]
  411e97:	mov    bl,0x52
  411e99:	add    al,0xd0
  411e9b:	ja     0x411e93
  411e9d:	sahf   
  411e9e:	jle    0x411ea5
  411ea0:	dec    ebp
  411ea1:	adc    esi,0xa
  411ea4:	xchg   esp,eax
  411ea5:	and    DWORD PTR [eax+ecx*4],ebp
  411ea8:	inc    eax
  411ea9:	stos   BYTE PTR es:[edi],al
  411eaa:	add    ch,bh
  411eac:	out    dx,eax
  411ead:	adc    BYTE PTR [eax-0xdcf8e45],bl
  411eb3:	daa    
  411eb4:	jnp    0x411eca
  411eb6:	in     al,0x2d
  411eb8:	ror    DWORD PTR [ecx],cl
  411eba:	mov    ds:0xb270a346,eax
  411ebf:	mov    ch,0xbd
  411ec1:	daa    
  411ec2:	div    BYTE PTR [esi+0x79]
  411ec5:	or     DWORD PTR [ebp+0x167a1178],edx
  411ecb:	jns    0x411eba
  411ecd:	jne    0x411f34
  411ecf:	hlt    
  411ed0:	cwde   
  411ed1:	and    bl,cl
  411ed3:	mov    DWORD PTR [edi-0xeaa5271],0xc087a0b6
  411edd:	mov    bl,0x35
  411edf:	mov    ds:0xe290547b,al
  411ee4:	add    eax,0x9e24e9e8
  411ee9:	cmp    eax,0x6172d14
  411eee:	and    ecx,DWORD PTR [edx+0x20]
  411ef1:	sbb    dl,dl
  411ef3:	sbb    dl,BYTE PTR [eax+edx*2+0x28dd56f1]
  411efa:	inc    edi
  411efb:	bound  ebp,QWORD PTR [esp+edx*8-0x60]
  411eff:	inc    esi
  411f00:	dec    esi
  411f01:	or     BYTE PTR [esi-0x1],bl
  411f04:	cmp    al,0x98
  411f06:	adc    dl,BYTE PTR [edi+0x2a]
  411f09:	iret   
  411f0a:	adc    eax,0x35c8fd0d
  411f0f:	pop    ebx
  411f10:	sub    BYTE PTR es:[ebx*2+0xab968ae],dl
  411f18:	push   esp
  411f19:	mov    eax,cs:0x2894f787
  411f1f:	lods   eax,DWORD PTR ds:[esi]
  411f20:	pop    eax
  411f21:	xchg   ebp,eax
  411f22:	lahf   
  411f23:	push   0x6508efb2
  411f28:	popf   
  411f29:	and    eax,0x3156f762
  411f2e:	cmp    al,0x6
  411f30:	and    ch,BYTE PTR [ebp-0x2a58e9a5]
  411f36:	int3   
  411f37:	cmp    eax,0xac6175f
  411f3c:	cwde   
  411f3d:	aam    0x1d
  411f3f:	lahf   
  411f40:	out    dx,eax
  411f41:	addr16 xor eax,0x4211d27a
  411f47:	add    ecx,DWORD PTR [ebx-0x51c908a7]
  411f4d:	mov    al,BYTE PTR [eax+0x6c9c56aa]
  411f53:	push   edi
  411f54:	je     0x411eea
  411f56:	xor    al,0x4a
  411f58:	push   DWORD PTR [eax+0x33]
  411f5b:	pop    edx
  411f5c:	(bad)
  411f5f:	out    dx,al
  411f60:	and    edi,DWORD PTR [edi-0x5d1af084]
  411f66:	cmp    esi,ebx
  411f68:	aam    0xa1
  411f6a:	gs aaa 
  411f6c:	int3   
  411f6d:	gs dec esp
  411f6f:	inc    edx
  411f70:	lock xchg edi,eax
  411f72:	jg     0x411faf
  411f74:	outs   dx,BYTE PTR ds:[esi]
  411f75:	sbb    BYTE PTR [ebx],bh
  411f77:	psrlw  mm3,mm4
  411f7a:	frstor [eax+0x10]
  411f7d:	inc    esi
  411f7e:	nop
  411f7f:	retf   
  411f80:	bound  edi,QWORD PTR ds:0xcd3b3cec
  411f86:	xor    BYTE PTR [ebp-0x3eeb46c],0x77
  411f8d:	push   esp
  411f8e:	adc    eax,esi
  411f90:	cli    
  411f91:	add    eax,0xbfa9bb3a
  411f96:	sbb    al,ah
  411f98:	cmp    al,BYTE PTR [ecx]
  411f9a:	and    DWORD PTR [esi+0x2572fbcc],ecx
  411fa0:	ret    0x9231
  411fa3:	sub    ebx,eax
  411fa5:	iret   
  411fa6:	dec    DWORD PTR [esi-0x9]
  411fa9:	push   ds
  411faa:	mov    bl,0xd5
  411fac:	cmp    eax,0xd448cf33
  411fb1:	in     al,0x63
  411fb3:	xchg   DWORD PTR [ecx-0x2752040d],eax
  411fb9:	push   es
  411fba:	stos   DWORD PTR es:[edi],eax
  411fbb:	imul   DWORD PTR [edi-0x35]
  411fbe:	lock jmp 0xbd50:0x45652c1e
  411fc6:	int    0x97
  411fc8:	pop    edx
  411fc9:	xor    DWORD PTR [edx],ecx
  411fcb:	add    al,0xd8
  411fcd:	arpl   WORD PTR [ebx],cx
  411fcf:	out    0xf7,al
  411fd1:	inc    edi
  411fd2:	xor    eax,0x596a682d
  411fd7:	nop
  411fd8:	pop    eax
  411fd9:	lds    ecx,FWORD PTR [edx+0x6c86b375]
  411fdf:	add    BYTE PTR [edi],dl
  411fe1:	adc    DWORD PTR [edx-0x1772e420],ebx
  411fe7:	mov    dh,0xa5
  411fe9:	lea    ecx,[edx-0x3c]
  411fec:	mov    esp,0x21e5a8e5
  411ff1:	jl     0x411fea
  411ff3:	sahf   
  411ff4:	(bad)  
  411ff5:	or     ecx,edx
  411ff7:	adc    eax,DWORD PTR [ecx-0x6b7049d8]
  411ffd:	fcom   QWORD PTR [edi+0x2c951bd4]
  412003:	jnp    0x411fde
  412005:	out    0xa2,eax
  412007:	mov    al,ds:0xad1e300c
  41200c:	mov    edx,0x7bdcd4d9
  412011:	sbb    dl,ch
  412013:	xchg   esi,eax
  412014:	xchg   ebx,eax
  412015:	imul   esp,esp,0xaa59d8a1
  41201b:	fwait
  41201c:	cmp    BYTE PTR [eax],al
  41201e:	mov    ecx,0x3f0da337
  412023:	lods   al,BYTE PTR ds:[esi]
  412024:	pop    edx
  412025:	popa   
  412026:	nop
  412027:	push   ecx
  412028:	mov    eax,ds:0x980a99bc
  41202d:	shr    DWORD PTR [ebx+0x5265afcf],1
  412033:	sub    al,0x95
  412035:	xor    edx,DWORD PTR [eax]
  412037:	shl    DWORD PTR [esi],cl
  412039:	cdq    
  41203a:	dec    edx
  41203b:	add    BYTE PTR [eax],0xcf
  41203e:	sbb    al,0xb7
  412040:	cwde   
  412041:	mov    ebx,0x3119d607
  412046:	mov    eax,0xabeb5e56
  41204b:	(bad)  
  41204c:	pop    esi
  41204d:	stc    
  41204e:	or     al,BYTE PTR [ebp+0x59]
  412051:	call   0x7eaaa1c7
  412056:	shl    BYTE PTR [edi+0x991977f],0x38
  41205d:	repnz push ebp
  41205f:	mov    bl,0x7d
  412061:	sbb    eax,edx
  412063:	fistp  QWORD PTR [edx-0x3ca246e2]
  412069:	cwde   
  41206a:	stos   DWORD PTR es:[edi],eax
  41206b:	retf   
  41206c:	adc    al,0x25
  41206e:	ins    BYTE PTR es:[edi],dx
  41206f:	(bad)  
  412070:	clc    
  412071:	xor    al,BYTE PTR [ecx+eiz*4]
  412074:	cmovb  ebp,DWORD PTR [esi+edx*2-0x372268ff]
  41207c:	or     eax,0x6e7aba14
  412081:	fidivr WORD PTR fs:[edi]
  412084:	out    dx,eax
  412085:	enter  0xea4c,0xd2
  412089:	in     al,0x3b
  41208b:	imul   esp,DWORD PTR [edi],0x40bf1697
  412091:	push   esp
  412092:	xor    BYTE PTR [esi],0x33
  412095:	fstp   QWORD PTR [esp+esi*1+0x1c822413]
  41209c:	push   ss
  41209d:	mov    ebp,cs
  41209f:	push   ss
  4120a0:	xor    al,0x70
  4120a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120a3:	(bad)  
  4120a4:	sbb    edi,ebx
  4120a6:	popf   
  4120a7:	mov    eax,0xb5180e5e
  4120ac:	cmc    
  4120ad:	jmp    0x41207c
  4120af:	jl     0x4120f7
  4120b1:	sti    
  4120b2:	test   al,0x7f
  4120b4:	sub    BYTE PTR [esi+0x11d258f2],ch
  4120ba:	mov    WORD PTR [ebx],gs
  4120bc:	div    esp
  4120be:	cld    
  4120bf:	sbb    al,0xf2
  4120c1:	into   
  4120c2:	jl     0x412082
  4120c4:	or     al,0x47
  4120c6:	js     0x41212a
  4120c8:	les    esi,FWORD PTR [ebx+0x66]
  4120cb:	pop    ebx
  4120cc:	rol    ecx,1
  4120ce:	or     eax,0xd6fe6279
  4120d3:	out    0xab,al
  4120d5:	test   al,0x13
  4120d7:	inc    ebp
  4120d8:	out    0xb6,eax
  4120da:	sub    DWORD PTR [ecx+esi*2+0x5c],0x1
  4120df:	ffree  st(1)
  4120e1:	fld    TBYTE PTR [edx+eax*2-0x19]
  4120e5:	xchg   ebx,eax
  4120e6:	loope  0x41208c
  4120e8:	mov    ds,WORD PTR [ecx+0x3d0f5ce9]
  4120ee:	xor    eax,DWORD PTR [ecx+0x536c52a3]
  4120f4:	les    eax,FWORD PTR [edx+0x67]
  4120f7:	popf   
  4120f8:	cwde   
  4120f9:	vpunpckhwd ymm5,ymm1,YMMWORD PTR [ebp-0x71731086]
  412101:	push   ebp
  412102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412103:	and    esi,esi
  412105:	xor    eax,0xe5c8b2d1
  41210a:	jb     0x4120e3
  41210c:	shr    BYTE PTR [edx],cl
  41210e:	dec    eax
  41210f:	ds fwait
  412111:	rcl    BYTE PTR [ebp+edx*1+0x274fb948],0x49
  412119:	(bad)  
  41211a:	imul   edx,ecx,0xfffffff7
  41211d:	shl    esp,0x70
  412120:	cwde   
  412121:	std    
  412122:	mov    esp,0x256130a4
  412127:	jecxz  0x4121a4
  412129:	mov    ebp,0xff640c77
  41212e:	inc    eax
  41212f:	addr16 inc ebp
  412131:	dec    ebx
  412132:	dec    ebp
  412133:	mov    dl,0x7b
  412135:	pop    edi
  412136:	out    dx,al
  412137:	lds    ecx,FWORD PTR [eax+0x32469376]
  41213d:	lods   al,BYTE PTR ds:[esi]
  41213e:	pop    es
  41213f:	pop    es
  412140:	mov    ah,0x51
  412142:	aad    0x7f
  412144:	adc    dl,BYTE PTR [eax+0x62860a3a]
  41214a:	adc    eax,0xf090a78a
  41214f:	and    DWORD PTR [ebp-0x2a],edx
  412152:	popa   
  412153:	jg     0x412183
  412155:	imul   esi,ebp,0x40b2cb6
  41215b:	jo     0x4121c3
  41215d:	xor    bl,bl
  41215f:	inc    esp
  412160:	sbb    edx,esp
  412162:	push   ebp
  412163:	sub    cl,bl
  412165:	fadd   st,st(2)
  412167:	mov    ?,WORD PTR [esi-0x20]
  41216a:	mov    bl,0x29
  41216c:	xor    dh,BYTE PTR [edx+edi*8+0x3a]
  412170:	mov    al,0x31
  412172:	arpl   WORD PTR [ebp-0x7ebb7203],bp
  412178:	xchg   DWORD PTR [esi+0x4e],ecx
  41217b:	jg     0x41213a
  41217d:	out    0xe8,al
  41217f:	inc    ebp
  412180:	pop    ss
  412181:	jne    0x412125
  412183:	jmp    0x220f:0xca5dd7a
  41218a:	or     eax,DWORD PTR [edx-0x61ff7183]
  412190:	push   ebx
  412191:	lahf   
  412192:	shl    DWORD PTR [esi+0x6f],1
  412195:	int    0x2a
  412197:	outs   dx,DWORD PTR ds:[esi]
  412198:	jl     0x41215e
  41219a:	(bad)  
  41219b:	and    DWORD PTR [edx],ebx
  41219d:	jl     0x4121f2
  41219f:	pop    es
  4121a0:	pop    ecx
  4121a1:	mov    dl,0x96
  4121a3:	dec    ebx
  4121a4:	jnp    0x412139
  4121a6:	retf   0x8358
  4121a9:	retf   0xfece
  4121ac:	pop    ss
  4121ad:	lock inc edi
  4121af:	and    al,BYTE PTR [esi+0x47548965]
  4121b5:	mov    ah,0xa7
  4121b7:	jae    0x412229
  4121b9:	mov    ebx,0x310ed115
  4121be:	sub    eax,esp
  4121c0:	ret    
  4121c1:	setb   bh
  4121c4:	jns    0x412177
  4121c6:	scas   eax,DWORD PTR es:[edi]
  4121c7:	xchg   ebp,eax
  4121c8:	xor    DWORD PTR [esi+0x7d89db47],ebx
  4121ce:	cwde   
  4121cf:	jl     0x41218a
  4121d1:	xchg   edx,eax
  4121d2:	add    esi,DWORD PTR [ebx-0x7e]
  4121d5:	mov    eax,0xae2d60ef
  4121da:	(bad)  
  4121db:	repnz ss dec ecx
  4121de:	push   cs
  4121df:	xor    al,0xe7
  4121e1:	ja     0x41225f
  4121e3:	inc    DWORD PTR [esp+esi*4+0x7c3e194e]
  4121ea:	add    ebp,DWORD PTR [eax+ecx*1]
  4121ed:	out    0x9c,eax
  4121ef:	mov    ds,WORD PTR [esi+ecx*4+0x49]
  4121f3:	pop    edi
  4121f4:	dec    ebp
  4121f5:	ss mov edi,0x71723572
  4121fb:	mov    al,BYTE PTR [ecx+edx*2+0x69]
  4121ff:	xchg   BYTE PTR [esi],cl
  412201:	inc    eax
  412202:	push   ebx
  412203:	dec    edi
  412204:	retf   
  412205:	mov    DWORD PTR [ecx],eax
  412207:	cs loopne 0x4121fa
  41220a:	js     0x41223d
  41220c:	push   ds
  41220d:	test   BYTE PTR [esi],ch
  41220f:	dec    edi
  412210:	int3   
  412211:	add    BYTE PTR [eax],0xdf
  412214:	inc    ecx
  412215:	push   0xffffffd6
  412217:	push   0xffffffe0
  412219:	cmc    
  41221a:	adc    ebx,edx
  41221c:	mov    dl,BYTE PTR [esi+0x5]
  41221f:	adc    eax,DWORD PTR [ebp+0xdbba74f]
  412225:	imul   ebx,DWORD PTR [ecx+0x1a4633],0x8298d2c5
  41222f:	gs push es
  412231:	stc    
  412232:	call   FWORD PTR ds:0xbe7a7a20
  412238:	lds    edx,FWORD PTR [eax+edx*8+0x76]
  41223c:	push   esp
  41223d:	cmp    eax,0x9016c20e
  412242:	xor    al,0x8d
  412244:	push   ecx
  412245:	out    dx,eax
  412246:	mov    bh,BYTE PTR [ebp+0x1545d0c3]
  41224c:	cmp    eax,0x5be8f3c8
  412251:	pop    ebx
  412252:	adc    DWORD PTR [esi+0x66af8800],ebp
  412258:	pusha  
  412259:	cs fcomip st,st(3)
  41225c:	sti    
  41225d:	ss das 
  41225f:	inc    ecx
  412260:	mov    ds:0xd9cbca36,eax
  412265:	xchg   edi,eax
  412266:	(bad)  
  412267:	mov    ah,0xa2
  412269:	jp     0x4122cc
  41226b:	mov    fs,WORD PTR [esi]
  41226d:	popa   
  41226e:	(bad)  
  41226f:	mov    ebp,0x60ce860b
  412274:	cmp    eax,0xe3a8439d
  412279:	sbb    al,0x2a
  41227b:	loopne 0x4122fb
  41227d:	sbb    DWORD PTR [edx],esi
  41227f:	lock (bad) 
  412281:	es cs mov ebp,0x605c1384
  412288:	sahf   
  412289:	mov    eax,0xd48d3f81
  41228e:	sbb    esp,DWORD PTR [edx-0xc]
  412291:	pop    ebp
  412292:	ins    BYTE PTR es:[edi],dx
  412293:	int3   
  412294:	fbstp  TBYTE PTR [eax-0x4]
  412297:	js     0x4122fb
  412299:	or     bh,cl
  41229b:	add    ch,BYTE PTR [ecx+0x244da6a1]
  4122a1:	fwait
  4122a2:	adc    bh,BYTE PTR [eax+0x63f10eb4]
  4122a8:	add    BYTE PTR [ecx+0x7b7f840b],bl
  4122ae:	mov    ds:0x798f0a,al
  4122b3:	cmp    bl,BYTE PTR [edi-0x3459337e]
  4122b9:	pop    esi
  4122ba:	dec    edi
  4122bb:	and    al,0xa7
  4122bd:	adc    BYTE PTR [edx+eax*8-0xe153ea9],0xc7
  4122c5:	mov    edx,?
  4122c7:	pop    ss
  4122c8:	push   ds
  4122c9:	pop    ebp
  4122ca:	mov    dh,0x47
  4122cc:	daa    
  4122cd:	scas   al,BYTE PTR es:[edi]
  4122ce:	sub    cl,dl
  4122d0:	std    
  4122d1:	mov    DWORD PTR [ebx+edi*8],edi
  4122d4:	dec    esi
  4122d5:	xor    esp,DWORD PTR [ecx]
  4122d7:	shl    BYTE PTR [ebx+0x71],0x25
  4122db:	popf   
  4122dc:	adc    BYTE PTR [ebx+ebp*4+0x6d],ah
  4122e0:	ins    BYTE PTR es:[edi],dx
  4122e1:	fsubr  DWORD PTR [esi+0x39]
  4122e4:	shr    DWORD PTR [esi],0x6
  4122e7:	lock pop esi
  4122e9:	pop    eax
  4122ea:	pop    edi
  4122eb:	stos   DWORD PTR es:[edi],eax
  4122ec:	test   al,0xcc
  4122ee:	dec    edi
  4122ef:	jno    0x412338
  4122f1:	or     al,0xcf
  4122f3:	jb     0x4122be
  4122f5:	mov    ebx,0x38421932
  4122fa:	sbb    al,BYTE PTR [edi]
  4122fc:	imul   ebx,DWORD PTR [edx],0x60771967
  412302:	pop    ss
  412303:	sub    BYTE PTR [ebp-0x6d36927e],0x94
  41230a:	push   es
  41230b:	xor    al,0xcb
  41230d:	aam    0x17
  41230f:	lock dec ebx
  412311:	push   0xffffff85
  412313:	sar    ebx,0x94
  412316:	inc    esp
  412317:	push   ebx
  412318:	sub    al,0x8e
  41231a:	outs   dx,BYTE PTR ds:[esi]
  41231b:	test   eax,0xf98f513a
  412320:	push   0xffffffa2
  412322:	les    esi,FWORD PTR [ebp+0x1]
  412325:	ss xor al,0x13
  412329:	in     eax,dx
  41232a:	and    al,0x13
  41232c:	outs   dx,DWORD PTR ds:[esi]
  41232d:	icebp  
  41232e:	aad    0xfd
  412330:	in     eax,0xad
  412332:	push   edi
  412333:	pop    ebx
  412334:	jg     0x4122f1
  412336:	outs   dx,DWORD PTR ds:[esi]
  412337:	jo     0x41236e
  412339:	mov    esi,0xd32e9a34
  41233e:	add    BYTE PTR [ecx],0x40
  412341:	shr    bh,cl
  412343:	inc    ecx
  412344:	add    al,0x46
  412346:	daa    
  412347:	aad    0xc2
  412349:	leave  
  41234a:	ins    BYTE PTR es:[edi],dx
  41234b:	sub    eax,0xc69527a6
  412350:	out    dx,al
  412351:	jmp    0x2f718c5a
  412356:	add    eax,ebx
  412358:	jmp    0x394f8eb2
  41235d:	add    BYTE PTR [edx+eax*4-0x4b88e2ef],bl
  412364:	xor    edx,DWORD PTR [eax-0x315e7936]
  41236a:	pop    edx
  41236b:	adc    al,al
  41236d:	sbb    DWORD PTR [ebx+0x78f90a3e],esp
  412373:	int3   
  412374:	fmulp  st(5),st
  412376:	or     DWORD PTR [ecx+0x320bc64e],edi
  41237c:	or     esp,DWORD PTR [eax+0x0]
  41237f:	add    eax,0xe47ba4dc
  412384:	ds loopne 0x412390
  412387:	pop    edi
  412388:	cmp    BYTE PTR [esp+ecx*4-0x61c8c758],0x69
  412390:	pop    ds
  412391:	dec    esi
  412392:	(bad)  
  412393:	aam    0x4a
  412395:	(bad)  
  412396:	mov    edi,0x8d78ecaf
  41239b:	test   eax,0x59e24e55
  4123a0:	push   esp
  4123a1:	inc    esp
  4123a2:	enter  0x495b,0x4c
  4123a6:	mul    BYTE PTR [ebx+ebx*4-0x4fd34772]
  4123ad:	or     bl,dh
  4123af:	lahf   
  4123b0:	call   0xf0830fa2
  4123b5:	push   0x7b
  4123b7:	loope  0x4123ea
  4123b9:	pusha  
  4123ba:	sahf   
  4123bb:	scas   eax,DWORD PTR es:[edi]
  4123bc:	out    0x10,eax
  4123be:	jno    0x4123e3
  4123c0:	leave  
  4123c1:	pop    ebp
  4123c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123c3:	test   BYTE PTR [eax-0x52],ah
  4123c6:	arpl   WORD PTR [esi-0x72],bp
  4123c9:	sub    bl,BYTE PTR [edi+esi*8]
  4123cc:	gs inc ecx
  4123ce:	xor    ebx,edx
  4123d0:	repnz mov bh,0xfb
  4123d3:	cld    
  4123d4:	mov    esp,0xd6db93
  4123d9:	imul   esi,DWORD PTR [edi+0x6f90c1e9],0x33
  4123e0:	xchg   edi,eax
  4123e1:	xor    edx,0xd3716819
  4123e7:	sub    al,0x1b
  4123e9:	jno    0x4123a9
  4123eb:	popf   
  4123ec:	xor    al,0xf2
  4123ee:	stc    
  4123ef:	xlat   BYTE PTR ds:[ebx]
  4123f0:	mov    eax,ds:0x11d811b1
  4123f5:	stos   BYTE PTR es:[edi],al
  4123f6:	mov    esp,0x9ca1dbf0
  4123fb:	jge    0x41239d
  4123fd:	ins    BYTE PTR es:[edi],dx
  4123fe:	xchg   ecx,ecx
  412400:	pop    edi
  412401:	inc    esp
  412402:	in     al,0xfd
  412404:	sub    eax,0xeeb8179e
  412409:	imul   ebx,DWORD PTR [bx-0x4f],0x48
  41240e:	cmp    bl,dh
  412410:	cmp    eax,0x98d04a58
  412415:	fiadd  DWORD PTR [esi*2+0x19b19f4a]
  41241c:	inc    BYTE PTR [edx+0x69]
  41241f:	es stos DWORD PTR es:[edi],eax
  412421:	icebp  
  412422:	(bad)  
  412423:	ja     0x412419
  412425:	int    0xf2
  412427:	in     eax,dx
  412428:	cmp    dl,0x12
  41242b:	ins    DWORD PTR es:[edi],dx
  41242c:	sahf   
  41242d:	scas   al,BYTE PTR es:[edi]
  41242e:	pop    edi
  41242f:	jns    0x41240d
  412431:	xchg   BYTE PTR [eax+0x51],dl
  412434:	out    0xd3,eax
  412436:	out    0x33,al
  412438:	mov    ds,ebp
  41243a:	push   edx
  41243b:	std    
  41243c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41243d:	scas   eax,DWORD PTR es:[edi]
  41243e:	pop    ebx
  41243f:	jo     0x412405
  412441:	lahf   
  412442:	mov    eax,ds:0x8f0fb6c5
  412447:	shr    ecx,cl
  412449:	ins    DWORD PTR es:[edi],dx
  41244a:	iret   
  41244b:	cmp    DWORD PTR [eax+0x71b9be98],ecx
  412451:	sub    eax,DWORD PTR es:[ecx]
  412454:	adc    DWORD PTR [ebx],0xffffffdf
  412457:	mov    esi,0xf7b12914
  41245c:	imul   ebp,DWORD PTR [edi],0xea0f60c5
  412462:	xor    ebx,DWORD PTR [ebx-0x1b]
  412465:	call   0x2a83a90
  41246a:	mov    eax,0x7dd58435
  41246f:	jecxz  0x4123f5
  412471:	mov    al,ds:0xf210a6c
  412476:	fild   WORD PTR [edx-0x176280fd]
  41247c:	loope  0x41247d
  41247e:	dec    esi
  41247f:	adc    cl,al
  412481:	jbe    0x41244c
  412483:	pop    edi
  412484:	jb     0x41242c
  412486:	cli    
  412487:	pop    eax
  412488:	cmp    DWORD PTR [edx],edx
  41248a:	adc    al,0x29
  41248c:	mov    eax,ds:0x688552f8
  412491:	(bad)  
  412492:	ret    0xcbae
  412495:	pop    edi
  412496:	mov    dl,0x41
  412498:	in     al,0x32
  41249a:	pop    ss
  41249b:	jp     0x4124af
  41249d:	sbb    DWORD PTR [ecx],ebx
  41249f:	cmp    eax,0x1c39697d
  4124a4:	dec    ebp
  4124a5:	push   eax
  4124a6:	popf   
  4124a7:	push   ds
  4124a8:	fimul  DWORD PTR [eax+0x4743ea86]
  4124ae:	push   ds
  4124af:	test   ecx,ecx
  4124b1:	test   DWORD PTR [esi],esp
  4124b3:	adc    eax,0x17b25d81
  4124b8:	out    dx,al
  4124b9:	rcl    BYTE PTR [esp+ecx*2+0x49],cl
  4124bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124be:	aas    
  4124bf:	dec    eax
  4124c0:	and    DWORD PTR [edi],edi
  4124c2:	and    bl,ch
  4124c4:	mov    ebx,0xd837f047
  4124c9:	push   edi
  4124ca:	arpl   si,di
  4124cc:	push   ebp
  4124cd:	data16 loopne 0x41253d
  4124d0:	or     esp,ebp
  4124d2:	mov    esp,0x2b097ff0
  4124d7:	(bad)  
  4124d9:	jl     0x412479
  4124db:	rcr    DWORD PTR [ebx+0x15],1
  4124de:	push   es
  4124df:	mov    BYTE PTR [ecx],dh
  4124e1:	sbb    dl,BYTE PTR [edi-0x2f]
  4124e4:	inc    ecx
  4124e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124e6:	mov    ss,WORD PTR [ecx]
  4124e8:	(bad)  
  4124e9:	xchg   ebp,eax
  4124ea:	mov    WORD PTR [esi],?
  4124ec:	and    BYTE PTR [edx],bl
  4124ee:	ret    0x8801
  4124f1:	loope  0x4124cb
  4124f3:	repz fs arpl bx,dx
  4124f7:	xchg   ebx,eax
  4124f8:	jno    0x4124cb
  4124fa:	push   ecx
  4124fb:	mov    bh,0x61
  4124fd:	jge    0x412566
  4124ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412500:	dec    edx
  412501:	jg     0x412542
  412503:	ds mov ah,0xa2
  412506:	jne    0x41249e
  412508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412509:	mov    eax,ds:0x290256b4
  41250e:	nop
  41250f:	sub    bl,BYTE PTR [ebp+0x5c]
  412512:	loop   0x412520
  412514:	push   ecx
  412515:	rol    DWORD PTR [ebx+0x3b],1
  412518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412519:	call   0x54fd:0x338248fb
  412520:	fsubp  st(6),st
  412522:	std    
  412523:	call   0xeb2a7055
  412528:	push   ecx
  412529:	and    eax,0x740a2781
  41252e:	push   ebp
  41252f:	and    BYTE PTR [ebp-0x71b98f4b],dh
  412535:	jmp    0x6fb1:0xe3ea80ec
  41253c:	mov    BYTE PTR [ebx+edx*1+0x32],cl
  412540:	xchg   ebx,eax
  412541:	sahf   
  412542:	fsub   st,st(0)
  412544:	add    al,0xa4
  412546:	js     0x412529
  412548:	lods   eax,DWORD PTR ds:[esi]
  412549:	jecxz  0x4124ee
  41254b:	dec    edi
  41254c:	mov    eax,ds:0xe49c15e4
  412551:	xchg   dl,dh
  412553:	mov    BYTE PTR [eax-0x5f73170a],ch
  412559:	fisubr DWORD PTR [edi+0x1ae1a1c6]
  41255f:	sub    DWORD PTR [ecx+0x6],ebx
  412562:	pop    esp
  412563:	jp     0x41252d
  412565:	dec    edx
  412566:	daa    
  412567:	mov    ah,0x61
  412569:	mov    ah,0xef
  41256b:	lahf   
  41256c:	cs jmp 0xe9be6895
  412572:	aam    0x1d
  412574:	fwait
  412575:	enter  0x9bdd,0x15
  412579:	sbb    al,0xb7
  41257b:	jg     0x412526
  41257d:	es pop edx
  41257f:	adc    dl,BYTE PTR [esp+esi*2+0x60b98f50]
  412586:	xchg   edx,eax
  412587:	jb     0x412541
  412589:	loope  0x41258f
  41258b:	(bad)  
  41258c:	mov    ch,0x12
  41258e:	sub    eax,DWORD PTR [ecx+0x5bfb6928]
  412594:	or     ebp,DWORD PTR [edi-0x75]
  412597:	jns    0x4125a1
  412599:	out    dx,eax
  41259a:	and    dh,BYTE PTR [edi+0x22]
  41259d:	(bad)  
  41259f:	dec    esp
  4125a0:	fchs   
  4125a2:	in     eax,0xbc
  4125a4:	cmc    
  4125a5:	aam    0x64
  4125a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125a8:	popf   
  4125a9:	and    edx,DWORD PTR [ecx+0x33ac4640]
  4125af:	jb     0x41255c
  4125b1:	out    dx,al
  4125b2:	mov    dl,BYTE PTR [ebp-0x20]
  4125b5:	mov    dl,0x16
  4125b7:	push   esi
  4125b8:	hlt    
  4125b9:	mov    ds:0x51b45269,al
  4125be:	adc    DWORD PTR [eax+0x27],esp
  4125c1:	jbe    0x412565
  4125c3:	jp     0x412602
  4125c5:	cmp    BYTE PTR ds:0xf074043e,dh
  4125cb:	iret   
  4125cc:	mov    edi,0x916be17d
  4125d1:	adc    bl,BYTE PTR [eax+0x38739c6b]
  4125d7:	repnz cmp eax,0x7a488dd0
  4125dd:	les    ebp,FWORD PTR [edi-0x759bd10b]
  4125e3:	mov    dh,0xff
  4125e5:	ds pop edx
  4125e7:	jns    0x4125b1
  4125e9:	mov    ds:0x6a5b8ecd,al
  4125ee:	add    al,0x3d
  4125f0:	mov    ch,0x1e
  4125f2:	add    cl,ch
  4125f4:	je     0x4125c8
  4125f6:	imul   DWORD PTR [esi]
  4125f8:	jns    0x4125f7
  4125fa:	mov    bh,0x19
  4125fc:	sub    BYTE PTR [eax-0x68],0x41
  412600:	sahf   
  412601:	fisubr WORD PTR [esi+0x53]
  412604:	sbb    bh,BYTE PTR [edi-0xc899ffc]
  41260a:	bnd jae 0x412602
  41260d:	into   
  41260e:	jnp    0x41264e
  412610:	inc    edi
  412611:	mov    al,ds:0xd9774371
  412616:	xor    BYTE PTR [esi],0x98
  412619:	sub    DWORD PTR [ecx*8-0x6354e3cc],esp
  412620:	pop    eax
  412621:	rcl    DWORD PTR [ebx-0x10],1
  412624:	es xchg ebx,eax
  412626:	call   0xcba0:0xf87f54e9
  41262d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41262e:	dec    eax
  41262f:	sbb    eax,DWORD PTR [ebx+ebp*2-0x712fec11]
  412636:	out    0x23,eax
  412638:	add    dl,dh
  41263a:	xchg   DWORD PTR [edi],esi
  41263c:	jmp    0x412630
  41263e:	or     bh,BYTE PTR [eax-0x7b]
  412641:	rcl    DWORD PTR [edx],0xd9
  412644:	push   edi
  412645:	rcl    esp,cl
  412647:	jno    0x412611
  412649:	pop    edx
  41264a:	sar    bl,cl
  41264c:	in     eax,dx
  41264d:	cmc    
  41264e:	dec    edx
  41264f:	cmp    eax,DWORD PTR [edx+eax*1+0x2c]
  412653:	js     0x4125e5
  412655:	test   DWORD PTR [ecx+0x29],edi
  412658:	push   esp
  412659:	mov    bh,BYTE PTR [edi-0x1d]
  41265c:	daa    
  41265d:	mov    bh,0x4b
  41265f:	out    0x6a,al
  412661:	dec    edx
  412662:	push   ss
  412663:	push   edi
  412664:	test   DWORD PTR [ecx+0x59],ecx
  412667:	fistp  WORD PTR [ebp-0x6995bb37]
  41266d:	adc    DWORD PTR [edx+eax*1+0x770ed1d1],ecx
  412674:	aad    0x73
  412676:	idiv   dl
  412678:	lds    esi,FWORD PTR [edi]
  41267a:	xor    ecx,eax
  41267c:	scas   al,BYTE PTR es:[edi]
  41267d:	push   cs
  41267e:	lea    ecx,[ebx-0x3d8f83ae]
  412684:	mov    ebp,0xd7de235e
  412689:	mov    ds:0x6eba4b49,al
  41268e:	hlt    
  41268f:	inc    edi
  412690:	cmp    eax,0xad726f6a
  412695:	cmp    ebp,DWORD PTR [edi]
  412697:	add    BYTE PTR [ebp+eiz*2+0x5cda0184],ah
  41269e:	cmp    BYTE PTR [edi],al
  4126a0:	lds    edx,FWORD PTR [eax]
  4126a2:	inc    eax
  4126a3:	fs dec ebx
  4126a5:	inc    eax
  4126a6:	or     DWORD PTR [edx-0x4db86bba],edi
  4126ac:	fsubr  QWORD PTR [ecx-0x3d29a115]
  4126b2:	cmp    al,0x82
  4126b4:	pop    esp
  4126b5:	and    bh,BYTE PTR [ebx]
  4126b7:	in     eax,0x59
  4126b9:	xchg   edi,eax
  4126ba:	jl     0x412702
  4126bc:	ret    0x48a1
  4126bf:	or     dh,BYTE PTR [esi+0x58]
  4126c2:	sub    DWORD PTR [ebx+0x2ddad967],0x16d18d82
  4126cc:	lods   al,BYTE PTR ds:[esi]
  4126cd:	add    BYTE PTR [esi],dh
  4126cf:	mov    DWORD PTR [ecx+0x1c947e76],0x48daccbc
  4126d9:	or     edi,DWORD PTR [edi]
  4126db:	sub    al,0xc6
  4126dd:	scas   al,BYTE PTR es:[edi]
  4126de:	aas    
  4126df:	enter  0x2bd2,0x58
  4126e3:	mov    ebx,0x7016d4c1
  4126e8:	fbstp  TBYTE PTR [ebx+0x417b4173]
  4126ee:	rcl    DWORD PTR [esi],1
  4126f0:	cli    
  4126f1:	xchg   edx,eax
  4126f2:	lahf   
  4126f3:	mov    cl,BYTE PTR [edx+0x6e]
  4126f6:	xlat   BYTE PTR ds:[ebx]
  4126f7:	lahf   
  4126f8:	mov    dl,0x13
  4126fa:	sub    al,0xa1
  4126fc:	push   edx
  4126fd:	fidivr WORD PTR [ebp+0x3075ce3a]
  412703:	(bad)  
  412704:	mov    al,ds:0x9eecbd89
  412709:	ss jl  0x412789
  41270c:	jmp    0x57bbe83c
  412711:	add    cl,BYTE PTR [edi-0x49]
  412714:	lds    ebp,FWORD PTR [esi-0x80]
  412717:	les    eax,FWORD PTR ds:0xfe9a19e3
  41271d:	imul   ebp,ebp,0xffffff92
  412720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412721:	pop    ecx
  412722:	or     BYTE PTR [edx-0x4c],ah
  412725:	jo     0x412776
  412727:	xor    al,BYTE PTR [ebx+esi*1+0x2b]
  41272b:	into   
  41272c:	ins    BYTE PTR es:[edi],dx
  41272d:	jns    0x4126ee
  41272f:	sub    al,0xc6
  412731:	fimul  DWORD PTR [edx+0x39]
  412734:	nop
  412735:	mov    esi,0x729971e5
  41273a:	inc    edx
  41273b:	xor    BYTE PTR [edi-0x3c332769],bl
  412741:	dec    esi
  412742:	dec    eax
  412743:	add    al,0xca
  412745:	pop    ecx
  412746:	test   DWORD PTR [edx],ebp
  412748:	add    bl,0x65
  41274b:	stc    
  41274c:	mov    ebx,DWORD PTR [ebp-0x38]
  41274f:	mov    eax,0xcf2b6216
  412754:	cli    
  412755:	and    edx,DWORD PTR [edi+0x63315c49]
  41275b:	adc    eax,0xe0972241
  412760:	mov    ds:0x73171379,al
  412765:	ret    0x6be8
  412768:	mov    ds:0xbc36137f,al
  41276d:	fisttp DWORD PTR [edx+0xd]
  412770:	cmp    eax,0xa0721536
  412775:	sub    esp,DWORD PTR [edx+0x10611886]
  41277b:	gs sbb eax,0xa218bfa5
  412781:	jg     0x412799
  412783:	cmp    dh,BYTE PTR [edi+0x17]
  412786:	inc    esp
  412787:	adc    eax,0x7ec0b39e
  41278c:	sbb    BYTE PTR [edx+0x3e573601],bh
  412792:	loope  0x41273f
  412794:	sub    eax,0xa5497365
  412799:	sub    DWORD PTR ds:0x9e8a055d,ecx
  41279f:	push   ecx
  4127a0:	js     0x4127ef
  4127a2:	test   eax,0xc3f730f7
  4127a7:	cmp    DWORD PTR [ebx],edi
  4127a9:	je     0x412804
  4127ab:	xlat   BYTE PTR cs:[ebx]
  4127ad:	leave  
  4127ae:	loope  0x412821
  4127b0:	pop    edx
  4127b1:	ja     0x412800
  4127b3:	outs   dx,DWORD PTR ds:[esi]
  4127b4:	shl    DWORD PTR [ebx+edi*2+0x2cf0f06b],0xde
  4127bc:	lahf   
  4127bd:	xchg   ebx,eax
  4127be:	pop    ebp
  4127bf:	xchg   edx,eax
  4127c0:	mov    ecx,0xf172ab84
  4127c5:	cmp    eax,DWORD PTR [esi]
  4127c7:	fwait
  4127c8:	xchg   ebx,eax
  4127c9:	jns    0x412807
  4127cb:	sub    eax,0xa3f1aad8
  4127d0:	jmp    0x412765
  4127d2:	sub    eax,0xd3d89c16
  4127d7:	mov    ebp,0x811ad593
  4127dc:	fnstcw WORD PTR [edi+0x2437818b]
  4127e2:	xor    ecx,DWORD PTR [edi+esi*8-0x50]
  4127e6:	pop    cx
  4127e8:	push   esi
  4127e9:	push   esi
  4127ea:	push   ebp
  4127eb:	enter  0xd0a4,0xc9
  4127ef:	pop    edx
  4127f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127f1:	mov    edx,0xeef68487
  4127f6:	fnstenv [ecx+edx*2-0x58]
  4127fa:	mov    ch,0x11
  4127fc:	mov    fs,WORD PTR [edi+0x6e]
  4127ff:	je     0x412832
  412801:	fmul   DWORD PTR [ebx-0x3f]
  412804:	retf   
  412805:	outs   dx,BYTE PTR ds:[esi]
  412806:	xor    eax,0x77d94117
  41280b:	jo     0x412860
  41280d:	xchg   BYTE PTR [edx+0x11],ah
  412810:	ss xchg ecx,eax
  412812:	xchg   sp,ax
  412814:	not    DWORD PTR [edi-0x774d00cc]
  41281a:	enter  0xf0de,0x9
  41281e:	mov    ebp,0xb34bfe96
  412823:	push   ebp
  412824:	or     ecx,DWORD PTR [ecx]
  412826:	or     BYTE PTR [edi-0x2b5ef9ca],bh
  41282c:	icebp  
  41282d:	jmp    0xadb:0x4f09f82b
  412834:	out    0xdd,al
  412836:	mov    bh,0x2f
  412838:	add    eax,0x3cbaf144
  41283d:	inc    esp
  41283e:	mov    BYTE PTR [edx-0x24],dl
  412841:	cmc    
  412842:	xor    cl,0x91
  412845:	popa   
  412846:	mov    ebx,0xfd3985ae
  41284b:	call   0xb3bedc70
  412850:	jne    0x4128b8
  412852:	push   0xfffffffa
  412854:	dec    ebp
  412855:	dec    edi
  412856:	sbb    al,bl
  412858:	cld    
  412859:	xor    cl,BYTE PTR [esi]
  41285b:	mov    esi,0xfe7bc5e
  412860:	sahf   
  412861:	jmp    0x4128b6
  412863:	sbb    al,0xf9
  412865:	xlat   BYTE PTR ds:[ebx]
  412866:	jnp    0x41282b
  412868:	cmp    BYTE PTR [ebx+0x76e613ec],dh
  41286e:	xor    eax,DWORD PTR [ebp+0x609c31a9]
  412874:	mov    al,ds:0x822b4e84
  412879:	push   ds
  41287a:	jg     0x4128bd
  41287c:	xchg   al,al
  41287e:	rol    DWORD PTR ds:0x981c4559,cl
  412884:	iret   
  412885:	and    eax,0x94a7d416
  41288a:	xor    eax,DWORD PTR [ecx+esi*8+0x40df5162]
  412891:	enter  0xed09,0x95
  412895:	inc    ebx
  412896:	push   0xda48a3de
  41289b:	mov    edi,0x4759e076
  4128a0:	cmp    cl,BYTE PTR [eax-0x6a]
  4128a3:	nop
  4128a4:	xor    DWORD PTR [esi],esp
  4128a6:	mov    WORD PTR [ebx],?
  4128a8:	loop   0x41286e
  4128aa:	add    bh,BYTE PTR [edi+0x7]
  4128ad:	add    eax,0x29510076
  4128b2:	jle    0x4128b0
  4128b4:	sbb    al,0xc7
  4128b6:	outs   dx,BYTE PTR ds:[esi]
  4128b7:	jecxz  0x412913
  4128b9:	hlt    
  4128ba:	mov    al,ds:0xc9e54fcc
  4128bf:	pusha  
  4128c0:	jbe    0x412845
  4128c2:	lea    edi,[edx-0x16]
  4128c5:	fwait
  4128c6:	pusha  
  4128c7:	mov    al,0x4e
  4128c9:	cmp    BYTE PTR [edi-0x4fada668],dl
  4128cf:	and    eax,0x2c8dd6d7
  4128d4:	mov    ecx,0xda3e0610
  4128d9:	mov    ebp,DWORD PTR [edx]
  4128db:	jp     0x412897
  4128dd:	packuswb mm5,mm4
  4128e0:	fidiv  WORD PTR [edi-0x75e9d955]
  4128e6:	or     bh,BYTE PTR [eax-0x40273dfc]
  4128ec:	pop    es
  4128ed:	loop   0x4128e6
  4128ef:	out    0x69,eax
  4128f1:	das    
  4128f2:	mov    cl,BYTE PTR [edi-0x76]
  4128f5:	fnstsw WORD PTR cs:[esi+0x3b803c73]
  4128fc:	inc    eax
  4128fd:	xchg   DWORD PTR [edi+0x56],ecx
  412900:	inc    eax
  412901:	pop    es
  412902:	mov    ds,WORD PTR [ebx-0x41]
  412905:	imul   ebp,DWORD PTR [eax-0x7710e367],0xffffffca
  41290c:	cli    
  41290d:	les    ecx,FWORD PTR [edx+0x1c]
  412910:	mov    eax,ds:0xc8c31598
  412915:	jno    0x412921
  412917:	je     0x412971
  412919:	test   eax,0xfdb2a5d5
  41291e:	and    BYTE PTR [edi-0x3e064278],ah
  412924:	cmp    BYTE PTR [edx-0x31],0x87
  412928:	arpl   WORD PTR [ecx],si
  41292a:	jmp    0x42a7:0x7573b8de
  412931:	jno    0x412901
  412933:	sub    al,0x12
  412935:	outs   dx,BYTE PTR ds:[esi]
  412936:	iret   
  412937:	sbb    al,0x3b
  412939:	out    dx,eax
  41293a:	(bad)  [esp+ecx*2]
  41293d:	mov    bh,0xe6
  41293f:	les    edi,FWORD PTR [esi]
  412941:	pop    edi
  412942:	repz out dx,al
  412944:	je     0x4128db
  412946:	adc    eax,0x75c559eb
  41294b:	(bad)  
  41294c:	cmc    
  41294d:	adc    bl,dh
  41294f:	mov    bh,0x4d
  412951:	jmp    0x345d:0x3f5bba08
  412958:	push   es
  412959:	inc    esi
  41295a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41295b:	fidiv  DWORD PTR [ebx+0x75]
  41295e:	pop    ds
  41295f:	inc    ebx
  412960:	hlt    
  412961:	popf   
  412962:	or     BYTE PTR ds:0x64018d41,bh
  412968:	cmp    bl,ah
  41296a:	popa   
  41296b:	add    esi,esp
  41296d:	dec    eax
  41296e:	or     edx,ebp
  412970:	cld    
  412971:	ret    
  412972:	jns    0x4129c3
  412974:	or     dl,BYTE PTR [edi+0x2e]
  412977:	xor    BYTE PTR [eax-0x12c6166e],bl
  41297d:	nop
  41297e:	int3   
  41297f:	xor    BYTE PTR [ebp+0x52],bl
  412982:	repz xlat BYTE PTR ds:[ebx]
  412984:	cwde   
  412985:	std    
  412986:	sub    eax,0x43ac0f8a
  41298b:	xor    cl,dh
  41298d:	adc    sp,cx
  412990:	xchg   DWORD PTR [ecx+eiz*8+0x24],edx
  412994:	or     esi,ebx
  412996:	(bad)  
  412997:	in     al,0x3f
  412999:	xchg   ecx,eax
  41299a:	stc    
  41299b:	daa    
  41299c:	pop    es
  41299d:	inc    ecx
  41299e:	xor    DWORD PTR [edi],esi
  4129a0:	pop    ds
  4129a1:	mov    ebx,0x5df48560
  4129a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129a7:	call   0xa615:0xfd60ee6c
  4129ae:	mov    al,ds:0x328f37a9
  4129b3:	or     eax,0xc817e2d8
  4129b8:	and    al,0xb
  4129ba:	push   0x54da4530
  4129bf:	scas   eax,DWORD PTR es:[edi]
  4129c0:	int    0x94
  4129c2:	mov    ?,WORD PTR [eax+0x7e]
  4129c5:	jb     0x41296f
  4129c7:	imul   edx,eax,0xffffffde
  4129ca:	mov    ah,0x91
  4129cc:	paddq  mm1,QWORD PTR ds:0x8cfe5229
  4129d3:	mov    ecx,0x61390a70
  4129d8:	sbb    DWORD PTR [esi-0x11],edx
  4129db:	sub    eax,0xc49704ff
  4129e0:	add    esi,ecx
  4129e2:	jne    0x412a2b
  4129e4:	mov    eax,ds:0xb5caea71
  4129e9:	jns    0x412974
  4129eb:	jne    0x4129c4
  4129ed:	shr    DWORD PTR [esi+0x3a],0xfd
  4129f1:	and    edi,edx
  4129f3:	mov    bh,0x7e
  4129f5:	cdq    
  4129f6:	test   eax,0xfc660d41
  4129fb:	fldenv [edi]
  4129fd:	ret    
  4129fe:	dec    edx
  4129ff:	pushf  
  412a00:	cmc    
  412a01:	mov    esi,0xd319bf22
  412a06:	adc    BYTE PTR [esi],cl
  412a08:	imul   ecx,DWORD PTR [edi],0xae3ff477
  412a0e:	ds cmp al,0xc
  412a11:	test   DWORD PTR [edx+0x74],esi
  412a14:	test   BYTE PTR [esi],dh
  412a16:	clc    
  412a17:	addr16 inc ecx
  412a19:	sbb    al,0x75
  412a1b:	adc    bh,dh
  412a1d:	popa   
  412a1e:	enter  0x84c1,0xc7
  412a22:	or     DWORD PTR ds:0x134f6942,esp
  412a28:	es push edi
  412a2a:	mov    bl,BYTE PTR [edi]
  412a2c:	andnps xmm7,xmm0
  412a2f:	outs   dx,BYTE PTR ds:[esi]
  412a30:	mov    dl,BYTE PTR [eax-0x34f8d893]
  412a36:	inc    edi
  412a37:	(bad)  
  412a38:	mov    ah,0x76
  412a3a:	sbb    dh,dl
  412a3c:	push   esp
  412a3d:	out    0xe4,al
  412a3f:	xchg   ebx,eax
  412a40:	repz and dh,BYTE PTR [ecx-0x3faa2e0e]
  412a47:	fisubr WORD PTR [ecx+ebx*2-0x2a702ca9]
  412a4e:	js     0x412a52
  412a50:	clc    
  412a51:	xor    eax,0xe7158cc5
  412a56:	add    BYTE PTR [ebx-0x64d75d91],cl
  412a5c:	xchg   ebp,eax
  412a5d:	adc    al,0xf2
  412a5f:	and    al,0xb2
  412a62:	inc    esp
  412a63:	mov    bl,BYTE PTR [esi+0x33062ba5]
  412a69:	adc    edx,DWORD PTR [ecx-0x80]
  412a6c:	ins    DWORD PTR es:[edi],dx
  412a6d:	popa   
  412a6e:	mov    ebx,0xc1ca095e
  412a73:	dec    ebx
  412a74:	int3   
  412a75:	lods   al,BYTE PTR ds:[esi]
  412a76:	not    bh
  412a78:	rcr    BYTE PTR [edx+0x15],0x90
  412a7c:	fs int3 
  412a7e:	sbb    ecx,DWORD PTR [ecx]
  412a80:	add    al,0x76
  412a82:	fistp  DWORD PTR [edi]
  412a84:	not    BYTE PTR [ebx]
  412a86:	and    al,BYTE PTR [ebx]
  412a88:	loop   0x412a7f
  412a8a:	adc    eax,0x946bba7f
  412a8f:	xor    DWORD PTR [eax],edx
  412a91:	push   es
  412a92:	mov    eax,ds:0x4eda2880
  412a97:	sub    BYTE PTR [edx],0xfc
  412a9a:	jle    0x412b1b
  412a9c:	push   0x8bf56502
  412aa1:	es push ecx
  412aa3:	fld    DWORD PTR [edi-0x594aff0b]
  412aa9:	jns    0x412b00
  412aab:	mov    DWORD PTR ds:[edx],edi
  412aae:	clc    
  412aaf:	loop   0x412b2e
  412ab1:	sti    
  412ab2:	pop    ss
  412ab3:	sub    al,0x9f
  412ab5:	ret    0x43dc
  412ab8:	aam    0x8
  412aba:	rol    DWORD PTR [edx],cl
  412abc:	xchg   ebx,eax
  412abd:	sahf   
  412abe:	mov    BYTE PTR [ebx+0x4445578],dl
  412ac4:	fs sar cl,cl
  412ac7:	adc    ah,dl
  412ac9:	sbb    esp,edx
  412acb:	push   edi
  412acc:	dec    ecx
  412acd:	jl     0x412a62
  412acf:	cmp    DWORD PTR ds:[edi+0x6b23a6e4],eax
  412ad6:	inc    esp
  412ad7:	dec    esp
  412ad8:	jecxz  0x412a5c
  412ada:	test   DWORD PTR [edi],eax
  412adc:	xor    al,0xc9
  412ade:	aam    0x6d
  412ae0:	repnz loope 0x412b1c
  412ae3:	pop    ecx
  412ae4:	das    
  412ae5:	jle    0x412b5d
  412ae7:	rol    DWORD PTR [ebp-0x6c],cl
  412aea:	mov    ah,0xce
  412aec:	mov    ds:0x3c41954c,al
  412af1:	(bad)  
  412af2:	xor    eax,0x74bb6612
  412af7:	xchg   ebx,edx
  412af9:	jmp    0x412aee
  412afb:	mov    edi,DWORD PTR [edx-0x57]
  412afe:	inc    ecx
  412aff:	js     0x412ab5
  412b01:	mov    cs,WORD PTR [edx]
  412b03:	or     BYTE PTR [edi],bl
  412b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b06:	push   esp
  412b07:	loop   0x412b74
  412b09:	ror    DWORD PTR [edi],1
  412b0b:	std    
  412b0c:	cs dec esi
  412b0e:	jns    0x412b85
  412b10:	sub    ch,BYTE PTR [esi-0x49]
  412b13:	fld    QWORD PTR [edi-0x7ea63dbe]
  412b19:	push   edx
  412b1a:	fadd   QWORD PTR [edx-0x46]
  412b1d:	jl     0x412aa7
  412b1f:	fiadd  DWORD PTR [eax]
  412b21:	mov    eax,0xbaa7e11c
  412b26:	retf   
  412b27:	addr16 sahf 
  412b29:	jbe    0x412aed
  412b2b:	in     eax,dx
  412b2c:	pop    ebp
  412b2d:	ins    BYTE PTR es:[edi],dx
  412b2e:	mov    esp,0x76b15bd0
  412b33:	push   cs
  412b34:	sar    edi,1
  412b36:	in     eax,dx
  412b37:	or     ebp,ebx
  412b39:	mov    eax,ds:0xa16ea212
  412b3e:	inc    edx
  412b3f:	jecxz  0x412ac4
  412b41:	add    eax,0x14460bf9
  412b46:	pop    ecx
  412b47:	clc    
  412b48:	mov    al,ds:0xfbc02765
  412b4d:	scas   al,BYTE PTR es:[edi]
  412b4e:	and    BYTE PTR [ebx-0x1e30446],bl
  412b54:	out    dx,al
  412b55:	jb     0x412b79
  412b57:	or     al,0xd4
  412b59:	xor    BYTE PTR ds:0xa22e7c73,dh
  412b5f:	inc    ecx
  412b60:	in     eax,0x65
  412b62:	pushf  
  412b63:	call   0x5467813e
  412b68:	(bad)  
  412b69:	xor    al,0xb8
  412b6b:	fs stos DWORD PTR es:[edi],eax
  412b6d:	cmc    
  412b6e:	cmp    bl,BYTE PTR [ebp-0x21]
  412b71:	fdivr  QWORD PTR [edx-0x2ea2d261]
  412b77:	nop
  412b78:	(bad)  
  412b79:	jmp    0x162ec240
  412b7e:	rcl    BYTE PTR [ebx*8-0x20faaab9],1
  412b85:	pop    ds
  412b86:	fcom   QWORD PTR [edi]
  412b88:	inc    edi
  412b89:	das    
  412b8a:	dec    edx
  412b8b:	retf   0x32e7
  412b8e:	add    eax,0xc7f6fe5c
  412b93:	push   cs
  412b94:	xchg   esp,eax
  412b95:	xor    al,0xc6
  412b97:	enter  0xdde4,0xa0
  412b9b:	mov    eax,0x3f508559
  412ba0:	sbb    BYTE PTR [edi],bl
  412ba2:	popa   
  412ba3:	push   ebx
  412ba4:	push   es
  412ba5:	jo     0x412b83
  412ba7:	int3   
  412ba8:	add    ah,BYTE PTR [edi-0x66562f47]
  412bae:	aas    
  412baf:	fwait
  412bb0:	xchg   edx,eax
  412bb1:	fisub  WORD PTR [esi-0x60ffca4e]
  412bb7:	and    DWORD PTR [ecx+0x681a3c4],0xffffffb8
  412bbe:	cmc    
  412bbf:	out    dx,al
  412bc0:	inc    eax
  412bc1:	adc    DWORD PTR [esi],ebx
  412bc3:	mul    DWORD PTR [eax+0x7c9cc1cf]
  412bc9:	sub    ebp,eax
  412bcb:	loop   0x412b7a
  412bcd:	cmp    DWORD PTR [edi+0x63],esi
  412bd0:	mov    ah,0xe9
  412bd2:	jmp    0x412c16
  412bd4:	jmp    0x425b:0x96cc2768
  412bdb:	or     BYTE PTR gs:[ecx],bh
  412bde:	ja     0x412bc0
  412be0:	mul    BYTE PTR ds:0x45a49263
  412be6:	jge    0x412b89
  412be8:	dec    si
  412bea:	arpl   WORD PTR [ecx],ax
  412bec:	adc    al,0x99
  412bee:	aad    0xa2
  412bf0:	ret    
  412bf1:	ins    BYTE PTR es:[edi],dx
  412bf2:	jmp    0x5a9b:0x4aebd52e
  412bf9:	mov    edx,0x8c16ebba
  412bfe:	jle    0x412b88
  412c00:	cmp    dl,ch
  412c02:	int    0xd5
  412c04:	in     al,dx
  412c05:	out    dx,al
  412c06:	xchg   ebx,eax
  412c07:	pop    edi
  412c08:	mov    fs,esi
  412c0a:	fiadd  WORD PTR [ebp-0x5]
  412c0d:	daa    
  412c0e:	or     cl,ch
  412c10:	dec    edx
  412c11:	sahf   
  412c12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c13:	push   ss
  412c14:	out    0x59,al
  412c16:	lods   eax,DWORD PTR ds:[esi]
  412c17:	cdq    
  412c18:	jae    0x412c33
  412c1a:	popf   
  412c1b:	and    al,ah
  412c1d:	in     eax,0xdf
  412c1f:	jb     0x412bc9
  412c21:	xlat   BYTE PTR ds:[ebx]
  412c22:	nop
  412c23:	mov    edx,0x843a7e2
  412c28:	inc    ebp
  412c29:	push   es
  412c2a:	(bad)  
  412c2b:	jns    0x412c95
  412c2d:	pop    esi
  412c2e:	fidiv  DWORD PTR [ebp+0x75]
  412c31:	popf   
  412c32:	xchg   edx,eax
  412c33:	cld    
  412c34:	cmp    esp,esp
  412c36:	xchg   ebx,eax
  412c37:	xor    BYTE PTR [eax+eax*8+0x35],al
  412c3b:	bound  ecx,QWORD PTR [edi-0x1b8716c1]
  412c41:	mov    ds:0x5ed9a2ec,eax
  412c46:	out    0xd7,eax
  412c48:	test   eax,0x6147b033
  412c4d:	aas    
  412c4e:	jmp    0x788520d2
  412c53:	mov    ebp,0xa2656d18
  412c58:	adc    dh,BYTE PTR [ecx]
  412c5a:	jecxz  0x412cbf
  412c5c:	loop   0x412c03
  412c5e:	mov    ebp,0xd613613
  412c63:	ret    0x1fd
  412c66:	jp     0x412c48
  412c68:	sub    eax,0x19541e56
  412c6d:	or     al,0xd7
  412c6f:	mov    ah,0xad
  412c71:	loope  0x412c22
  412c73:	shl    DWORD PTR [edi],0x84
  412c76:	cmc    
  412c77:	mov    DWORD PTR [ebp-0x1e],ebp
  412c7a:	ins    DWORD PTR es:[edi],dx
  412c7b:	repz pop ecx
  412c7d:	push   esi
  412c7e:	cwde   
  412c7f:	imul   edi,DWORD PTR [ecx+eax*8-0x11],0x1b9eaa06
  412c87:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c89:	cmp    ebx,DWORD PTR [edx]
  412c8b:	pop    esp
  412c8c:	ins    DWORD PTR es:[edi],dx
  412c8d:	xchg   DWORD PTR [edx-0x3e6c1e61],ebx
  412c93:	in     al,dx
  412c94:	mov    edi,0x7cd4c520
  412c99:	rcl    BYTE PTR [ecx-0x5c],cl
  412c9c:	les    ecx,FWORD PTR [esi+0x5e]
  412c9f:	retf   
  412ca0:	pop    edx
  412ca1:	inc    esp
  412ca2:	out    dx,al
  412ca3:	ror    DWORD PTR [esi],cl
  412ca5:	push   eax
  412ca6:	ins    DWORD PTR es:[edi],dx
  412ca7:	test   DWORD PTR [ebx-0x4fbadb4d],esp
  412cad:	es pushf 
  412caf:	(bad)  
  412cb0:	sahf   
  412cb1:	popa   
  412cb2:	mov    DWORD PTR [ebx],0x41aebcc1
  412cb8:	mov    ds:0xb593d7b5,eax
  412cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cbe:	pusha  
  412cbf:	cmp    eax,0xee700806
  412cc4:	sar    DWORD PTR [ebx-0x4e],1
  412cc7:	cmc    
  412cc8:	sub    ch,BYTE PTR [ecx]
  412cca:	xchg   edi,eax
  412ccb:	sbb    ebx,DWORD PTR [ecx+0x96bb347]
  412cd1:	call   DWORD PTR [edx]
  412cd3:	mov    DWORD PTR ds:0xf015333c,ebx
  412cd9:	mov    edi,eax
  412cdb:	adc    al,ah
  412cdd:	sahf   
  412cde:	inc    sp
  412ce0:	mov    ds:0x8db53645,eax
  412ce5:	jns    0x412d5c
  412ce7:	(bad)  
  412ce8:	in     eax,dx
  412ce9:	adc    al,ah
  412ceb:	mov    al,ds:0x62805a30
  412cf0:	retf   0x66b9
  412cf3:	mov    ah,0x92
  412cf5:	faddp  st(6),st
  412cf7:	cld    
  412cf8:	dec    ebx
  412cf9:	inc    ebx
  412cfa:	add    al,0x26
  412cfc:	jge    0x412cce
  412cfe:	and    BYTE PTR [ecx+ebp*1+0x7f],al
  412d02:	mov    ebp,0x7d368906
  412d07:	adc    al,0x86
  412d09:	std    
  412d0a:	ss pop es
  412d0c:	das    
  412d0d:	mov    esi,0x9a16a478
  412d12:	in     al,dx
  412d13:	sbb    edi,edx
  412d15:	and    BYTE PTR [edx-0x6354a5db],cl
  412d1b:	push   ds
  412d1c:	and    DWORD PTR [esi+0x29],ebp
  412d1f:	shl    DWORD PTR [esp+ecx*4+0x19],1
  412d23:	call   0xf906405d
  412d28:	ret    0xd423
  412d2b:	and    BYTE PTR [edi+0x61],ah
  412d2e:	aad    0xb5
  412d30:	sbb    dh,BYTE PTR [ebp+0x1d953e00]
  412d36:	xor    BYTE PTR [edx+0x29],bh
  412d39:	leave  
  412d3a:	pop    es
  412d3b:	aam    0xf4
  412d3d:	mov    esp,0x3d8465e4
  412d42:	scas   eax,DWORD PTR es:[edi]
  412d43:	in     al,dx
  412d44:	fs pop edx
  412d46:	mov    ah,0x49
  412d48:	aas    
  412d49:	mov    ?,WORD PTR ds:[ebp+0x19d6a0c8]
  412d50:	setnp  BYTE PTR [ebp+0x3db9a89f]
  412d57:	sar    BYTE PTR [edx],1
  412d59:	adc    cl,BYTE PTR [ebp+ebx*1+0x1b]
  412d5d:	(bad)  
  412d5e:	aam    0x93
  412d60:	jae    0x412da7
  412d62:	jl     0x412d61
  412d64:	push   cs
  412d65:	out    dx,al
  412d66:	pop    ecx
  412d67:	data16 xor BYTE PTR [eax-0x45],bl
  412d6b:	mov    DWORD PTR [edi-0x71],ecx
  412d6e:	test   eax,0xf167453f
  412d73:	or     BYTE PTR [edi+ecx*8],cl
  412d76:	adc    BYTE PTR [ebx+0x4c],0x48
  412d7a:	pop    edi
  412d7b:	lods   eax,DWORD PTR ds:[esi]
  412d7c:	and    eax,0xc26ea325
  412d81:	clc    
  412d82:	bnd call DWORD PTR [esi-0x2f8a08dd]
  412d89:	inc    edi
  412d8a:	icebp  
  412d8b:	cmp    DWORD PTR [eax-0x43],0x6c
  412d8f:	out    0x26,eax
  412d91:	dec    esp
  412d92:	xchg   ebp,eax
  412d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d94:	out    0x6f,al
  412d96:	fstp   TBYTE PTR [eax-0x7f]
  412d99:	push   cs
  412d9a:	sbb    DWORD PTR [edx-0x42],ebp
  412d9d:	inc    ecx
  412d9e:	inc    ecx
  412d9f:	and    di,WORD PTR [esi+0x3655635]
  412da6:	out    dx,al
  412da7:	cld    
  412da8:	jmp    0xb7f3:0xc40be7f
  412daf:	nop
  412db0:	rol    DWORD PTR [eax+0x7dcb1313],0xb1
  412db7:	ret    
  412db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db9:	and    dh,BYTE PTR [edx+0x1b0e0f91]
  412dbf:	dec    eax
  412dc0:	or     BYTE PTR [ebx],dl
  412dc2:	ret    0x7724
  412dc5:	int    0x2e
  412dc7:	ss cmc 
  412dc9:	lods   eax,DWORD PTR ds:[esi]
  412dca:	cmp    eax,0x9d2533a3
  412dcf:	test   BYTE PTR [ebx-0x658bb1a4],0x78
  412dd6:	repnz mov ds:0xc0c04402,al
  412ddc:	jne    0x412d6b
  412dde:	enter  0x69af,0x5c
  412de2:	int    0x81
  412de4:	mul    DWORD PTR [edi-0x5c]
  412de7:	cmc    
  412de8:	aaa    
  412de9:	mov    esp,0xe661dd72
  412dee:	pop    esp
  412def:	sbb    BYTE PTR [ecx-0x7],dh
  412df2:	aad    0x6d
  412df4:	push   cs
  412df5:	dec    ebp
  412df6:	das    
  412df7:	(bad)  
  412df8:	or     eax,0xaa482b
  412dfd:	inc    edi
  412dfe:	ja     0x412da1
  412e00:	bound  esi,QWORD PTR gs:[ecx]
  412e03:	cmc    
  412e04:	fyl2x  
  412e06:	test   BYTE PTR [edx+eiz*1+0x2d],dl
  412e0a:	pop    edi
  412e0b:	jno    0x412e2c
  412e0d:	jmp    0x412e4f
  412e0f:	ins    BYTE PTR es:[edi],dx
  412e10:	xchg   ecx,eax
  412e11:	aam    0x9
  412e13:	inc    esp
  412e14:	js     0x412ddb
  412e16:	retf   
  412e17:	sub    eax,0xb6bf0eec
  412e1c:	sub    edx,DWORD PTR [ebx]
  412e1e:	rol    ecx,1
  412e20:	xchg   ebx,esi
  412e22:	pop    ds
  412e23:	ja     0x412e05
  412e25:	mov    esp,0x132e5cf8
  412e2a:	aad    0x34
  412e2c:	mov    ebp,0x21b476c0
  412e31:	stos   DWORD PTR es:[edi],eax
  412e32:	jmp    DWORD PTR [ecx-0x4a]
  412e35:	in     eax,0x5c
  412e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e38:	sub    BYTE PTR [esi-0x1cf41f5d],cl
  412e3e:	xchg   edi,eax
  412e3f:	call   0x416d65eb
  412e44:	inc    ebx
  412e45:	aas    
  412e46:	cld    
  412e47:	mov    ebx,0xeb586100
  412e4c:	nop
  412e4d:	push   es
  412e4e:	nop
  412e4f:	in     al,0xfa
  412e51:	lahf   
  412e52:	arpl   WORD PTR [edi+0x6a],bp
  412e55:	pop    ebx
  412e56:	rol    DWORD PTR ds:[ecx+0x1ff78c24],1
  412e5d:	fld    DWORD PTR [edi+esi*8]
  412e60:	scas   al,BYTE PTR es:[edi]
  412e61:	sbb    eax,0x69d5d9d9
  412e66:	ror    BYTE PTR ds:0x2bbddfd8,1
  412e6c:	dec    eax
  412e6d:	push   eax
  412e6e:	push   eax
  412e6f:	outs   dx,DWORD PTR ds:[esi]
  412e70:	and    al,0x42
  412e72:	repnz sub ebp,DWORD PTR [ecx]
  412e75:	or     eax,0x937cbd4d
  412e7a:	mov    ds:0x78604486,eax
  412e7f:	lds    ebx,FWORD PTR [esi]
  412e81:	setp   BYTE PTR [edx+0x51c20b79]
  412e88:	add    BYTE PTR [ebp-0xbce992d],ah
  412e8e:	nop
  412e8f:	pop    edi
  412e90:	pop    eax
  412e91:	rcr    DWORD PTR [edi+0x76c499c2],cl
  412e97:	cwde   
  412e98:	cmp    BYTE PTR [ecx],ch
  412e9a:	repz sar BYTE PTR [eax],1
  412e9d:	jmp    0x946e:0xef9c15d0
  412ea4:	mov    WORD PTR [ebp-0x61],?
  412ea7:	div    BYTE PTR [edx+0x4c]
  412eaa:	stos   BYTE PTR es:[edi],al
  412eab:	emms   
  412ead:	jle    0x412ea0
  412eaf:	or     edx,DWORD PTR [edx-0x515f5402]
  412eb5:	and    BYTE PTR [esi+0x28ab8ab0],dl
  412ebb:	lock push edi
  412ebd:	adc    al,0x30
  412ebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ec0:	inc    ebp
  412ec1:	mov    edx,0xb2a378b4
  412ec6:	js     0x412f46
  412ec8:	fnstsw WORD PTR [edx-0x49041e90]
  412ece:	jmp    0xe3e1:0x7b01e4f5
  412ed5:	push   DWORD PTR ds:0xcd58acb5
  412edb:	add    BYTE PTR [eax-0x37a063c4],al
  412ee1:	cmp    eax,0x2107e0af
  412ee6:	xchg   edi,eax
  412ee7:	into   
  412ee8:	mov    dl,0xc4
  412eea:	push   ebp
  412eeb:	adc    bh,BYTE PTR [eax]
  412eed:	ins    DWORD PTR es:[edi],dx
  412eee:	xor    BYTE PTR [edx],0x7d
  412ef1:	push   0xb93b26c8
  412ef6:	inc    esp
  412ef7:	mov    ds:0x8ff87adc,al
  412efc:	and    edx,DWORD PTR [esi+0x5a]
  412eff:	sti    
  412f00:	xlat   BYTE PTR ds:[ebx]
  412f01:	sti    
  412f02:	add    al,0xd4
  412f04:	gs jp  0x412ec3
  412f07:	mov    es,WORD PTR [ebx+ebp*2+0x16fe8950]
  412f0e:	mov    ch,0x67
  412f10:	lods   al,BYTE PTR ds:[esi]
  412f11:	cmp    al,0x46
  412f13:	or     ecx,0x6573fc5a
  412f19:	cmp    dl,BYTE PTR [edx+edx*1+0x3a048e39]
  412f20:	pop    edx
  412f21:	sbb    DWORD PTR [ebp-0x39],0x6db13778
  412f28:	and    al,0xed
  412f2a:	into   
  412f2b:	mov    esp,0x16098fa2
  412f30:	xchg   DWORD PTR [ebp+0x4e],esi
  412f33:	dec    edx
  412f34:	pusha  
  412f35:	arpl   WORD PTR [eax+0x17523c6a],bp
  412f3b:	lock sub BYTE PTR [eax+0x60],bh
  412f3f:	add    DWORD PTR [edi-0x76393f61],ecx
  412f45:	jne    0x412fa0
  412f47:	sbb    DWORD PTR ds:0x1d98a5e3,ebp
  412f4d:	jmp    0x63715ee1
  412f52:	or     BYTE PTR [edi+0x7e8377cc],0x3d
  412f59:	hlt    
  412f5a:	mov    ch,0x7
  412f5c:	fst    QWORD PTR [esi-0x69]
  412f5f:	fwait
  412f60:	stos   BYTE PTR es:[edi],al
  412f61:	push   esi
  412f62:	jmp    DWORD PTR [edi]
  412f64:	sbb    ah,dh
  412f66:	xor    eax,0x8b1dea48
  412f6b:	add    DWORD PTR [ecx],edi
  412f6d:	mov    DWORD PTR [ecx],edx
  412f6f:	push   0x4e
  412f71:	dec    eax
  412f72:	out    0x9c,al
  412f74:	push   ebp
  412f75:	arpl   ax,bp
  412f77:	cmp    bh,0xa7
  412f7a:	pop    ebp
  412f7b:	dec    ebx
  412f7c:	sahf   
  412f7d:	fisttp QWORD PTR ds:0x815dab20
  412f83:	neg    BYTE PTR [eax]
  412f85:	out    dx,eax
  412f86:	scas   al,BYTE PTR es:[edi]
  412f87:	cli    
  412f88:	jnp    0x412f90
  412f8a:	sub    al,0x9a
  412f8c:	jp     0x412f5c
  412f8e:	fcmovbe st,st(5)
  412f90:	or     cl,ah
  412f92:	xchg   DWORD PTR [eax-0x56],edx
  412f95:	pushf  
  412f96:	pop    ebx
  412f97:	add    BYTE PTR [edx-0xc],bl
  412f9a:	test   DWORD PTR ds:0x49be52a,ebx
  412fa0:	jge    0x412f94
  412fa2:	test   DWORD PTR ds:0xf1a540db,esi
  412fa8:	int3   
  412fa9:	dec    ecx
  412faa:	inc    esp
  412fab:	and    edx,esp
  412fad:	pop    ebp
  412fae:	cmp    al,0x79
  412fb0:	mov    cl,0xed
  412fb2:	mov    cs,WORD PTR [ebx]
  412fb4:	sub    BYTE PTR [edx-0x66],ch
  412fb7:	outs   dx,BYTE PTR ds:[esi]
  412fb8:	loop   0x412f46
  412fba:	cmp    DWORD PTR [edi-0x6a],esi
  412fbd:	leave  
  412fbe:	mov    eax,0x5ed8fae
  412fc3:	repnz or edi,eax
  412fc6:	adc    al,0xfa
  412fc8:	push   esi
  412fc9:	sub    ah,BYTE PTR [esi-0x19e32cbf]
  412fcf:	int    0xee
  412fd1:	je     0x412ff2
  412fd3:	sub    DWORD PTR ds:0xbd6677eb,eax
  412fd9:	adc    eax,0xd6c65edf
  412fde:	jb     0x413003
  412fe0:	xchg   ecx,eax
  412fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe2:	push   eax
  412fe3:	dec    esi
  412fe4:	dec    ecx
  412fe5:	pop    ebp
  412fe6:	mov    edx,0x1b9fb168
  412feb:	inc    ecx
  412fec:	inc    edx
  412fed:	das    
  412fee:	int    0xf3
  412ff0:	dec    eax
  412ff1:	cmp    al,0x48
  412ff3:	rcl    BYTE PTR [ecx-0x50],cl
  412ff6:	gs ds stos BYTE PTR es:[edi],al
  412ff9:	inc    BYTE PTR [edx+ecx*4+0x32830602]
  413000:	sahf   
  413001:	mov    bl,0x11
  413003:	cwde   
  413004:	mov    ebx,0xe4016596
  413009:	hlt    
  41300a:	push   cs
  41300b:	call   0x18cb:0x1c3cdca9
  413012:	jnp    0x412ff4
  413014:	fnstcw WORD PTR [ecx-0x7e]
  413017:	enter  0x20d5,0x6
  41301b:	jecxz  0x412fa7
  41301d:	scas   al,BYTE PTR es:[edi]
  41301e:	xor    esp,edi
  413020:	int    0x7d
  413022:	pop    ds
  413023:	jl     0x41300a
  413025:	imul   edi,DWORD PTR [esi],0xe78d563e
  41302b:	daa    
  41302c:	or     bh,BYTE PTR [ecx-0x7f2e9768]
  413032:	push   esp
  413033:	dec    ebx
  413034:	jmp    0x7057:0x9ee3381c
  41303b:	in     eax,0xd1
  41303d:	and    BYTE PTR [ebx+ebx*1+0x1c027dc0],bh
  413044:	cmp    al,0x68
  413046:	shl    DWORD PTR [eax],1
  413048:	or     BYTE PTR [eax],dl
  41304a:	cmp    edx,DWORD PTR [esi-0x66]
  41304d:	xor    dl,cl
  41304f:	mov    ds:0x96feae70,al
  413054:	in     al,0xa1
  413056:	mov    DWORD PTR [ebx-0x29],edx
  413059:	jb     0x4130ba
  41305b:	xor    eax,DWORD PTR ds:[edx-0x520f8ae7]
  413062:	mov    esi,DWORD PTR [edx+0x2b1a6b19]
  413068:	test   DWORD PTR [esp+edi*8+0x542c3497],edx
  41306f:	inc    edi
  413070:	pop    ebp
  413071:	cmp    al,0x3
  413073:	(bad)  
  413074:	jne    0x4130c8
  413076:	stc    
  413077:	push   esp
  413078:	or     DWORD PTR [ecx],esi
  41307a:	or     edi,DWORD PTR [esp+ebx*2]
  41307d:	scas   al,BYTE PTR es:[edi]
  41307e:	sbb    al,BYTE PTR [edx]
  413080:	ds pop ecx
  413082:	scas   al,BYTE PTR es:[edi]
  413083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413084:	mov    DWORD PTR [eax+0x1b],esi
  413087:	call   0x4bcbbe39
  41308c:	mov    ebp,0xf1c0cf35
  413091:	data16 cmp al,0x2b
  413094:	clc    
  413095:	jno    0x41310f
  413097:	sub    eax,0x38b895d5
  41309c:	in     eax,0xef
  41309e:	pop    edi
  41309f:	in     eax,dx
  4130a0:	das    
  4130a1:	int3   
  4130a2:	mov    dl,0xe8
  4130a4:	in     eax,0x25
  4130a6:	mov    edi,DWORD PTR [esi-0x67]
  4130a9:	aam    0x7c
  4130ab:	add    DWORD PTR [ecx+0x6c],edx
  4130ae:	xor    eax,0x4d732976
  4130b3:	out    dx,al
  4130b4:	gs test ch,dh
  4130b7:	loopne 0x413077
  4130b9:	in     al,dx
  4130ba:	sbb    BYTE PTR [ecx+0x15],bh
  4130bd:	xor    ebx,DWORD PTR [eax]
  4130bf:	ja     0x413063
  4130c1:	fwait
  4130c2:	dec    ebp
  4130c3:	or     DWORD PTR ds:0x12d11553,ecx
  4130c9:	out    0x19,al
  4130cb:	ins    BYTE PTR es:[edi],dx
  4130cc:	into   
  4130cd:	fstp   DWORD PTR [edi+0x4376511c]
  4130d3:	rcr    eax,cl
  4130d5:	or     ebp,eax
  4130d7:	mov    ebx,DWORD PTR [ebx]
  4130d9:	imul   eax,ebx,0xada595c8
  4130df:	adc    ebp,DWORD PTR [ecx+0x6e]
  4130e2:	or     BYTE PTR [ebx-0x5d9289b4],0x50
  4130e9:	xchg   ebx,eax
  4130ea:	push   0x64
  4130ec:	inc    ebx
  4130ed:	mov    gs,WORD PTR [esp+eax*1]
  4130f0:	into   
  4130f1:	adc    ebp,DWORD PTR [esi-0x5daae09c]
  4130f7:	into   
  4130f8:	cld    
  4130f9:	ror    BYTE PTR [ebx],0x71
  4130fc:	dec    ebx
  4130fd:	in     eax,dx
  4130fe:	sub    BYTE PTR [edx-0x1a],0x7c
  413102:	das    
  413103:	mov    esp,0x45423306
  413108:	repnz (bad) 
  41310a:	(bad)  
  41310b:	fisttp WORD PTR [ecx+esi*2+0x3f]
  41310f:	outs   dx,BYTE PTR ds:[esi]
  413110:	cmp    eax,ebp
  413112:	jecxz  0x413104
  413114:	es mov ecx,0xfc2fe4ba
  41311a:	jg     0x4130da
  41311c:	scas   al,BYTE PTR es:[edi]
  41311d:	hlt    
  41311e:	lods   al,BYTE PTR ds:[esi]
  41311f:	test   DWORD PTR [edi-0x68],ebp
  413122:	fld    TBYTE PTR [ebp-0x63d1787e]
  413128:	es xchg ebx,eax
  41312a:	sbb    BYTE PTR [ecx-0x3d],dl
  41312d:	nop
  41312e:	cmp    DWORD PTR [esi+0x466e1fcc],0x9a23e9a8
  413138:	pop    esp
  413139:	adc    DWORD PTR [esi],ebp
  41313b:	xchg   edx,eax
  41313c:	xchg   ecx,eax
  41313d:	jmp    0x41313e
  41313f:	pop    ebp
  413140:	push   cs
  413141:	mul    DWORD PTR ds:0xd8cd930b
  413147:	inc    ebx
  413148:	or     DWORD PTR [ecx-0x7edd155b],ecx
  41314e:	push   ecx
  41314f:	and    eax,0xce3cc1dc
  413154:	adc    al,0xed
  413156:	das    
  413157:	or     eax,0x9a9ec04b
  41315c:	push   es
  41315d:	xchg   ebx,eax
  41315e:	and    BYTE PTR [ebx+eiz*4],0xf8
  413162:	mov    eax,ds:0x91a1b4d5
  413167:	lods   eax,DWORD PTR ds:[esi]
  413168:	xchg   edi,eax
  413169:	pop    edi
  41316a:	cmp    eax,0xbf236fd6
  41316f:	push   eax
  413170:	push   ds
  413171:	fidivr WORD PTR [edx]
  413173:	jb     0x413158
  413175:	xchg   esi,eax
  413176:	fsub   DWORD PTR [edx]
  413178:	imul   eax,DWORD PTR [esp+ebp*2+0x72],0x4f8fa199
  413180:	ret    
  413181:	lds    ecx,FWORD PTR [eax-0x79194769]
  413187:	lea    eax,[esi-0x58]
  41318a:	adc    al,0x4f
  41318c:	pop    esi
  41318d:	sub    eax,DWORD PTR [edx-0x3a483f90]
  413193:	xchg   esp,eax
  413194:	popf   
  413195:	(bad)  
  413196:	aam    0xf7
  413198:	sbb    al,0x0
  41319a:	inc    esi
  41319b:	xor    dl,dl
  41319d:	or     al,0xbe
  41319f:	sar    edi,1
  4131a1:	lock xchg ebp,eax
  4131a3:	mov    dh,dh
  4131a5:	push   edx
  4131a6:	jbe    0x41317b
  4131a8:	mov    ah,0x43
  4131aa:	gs and al,0x89
  4131ad:	mov    edx,0x4d20067d
  4131b2:	popa   
  4131b3:	cmc    
  4131b4:	fisub  WORD PTR [edi]
  4131b6:	sub    eax,0xb5729abf
  4131bb:	pop    edi
  4131bc:	cld    
  4131bd:	repnz push esi
  4131bf:	xor    ah,BYTE PTR [ebp*1+0x618d4a33]
  4131c6:	test   al,0xea
  4131c8:	daa    
  4131c9:	cmc    
  4131ca:	adc    BYTE PTR gs:[edi+0x47],dl
  4131ce:	scas   al,BYTE PTR es:[edi]
  4131cf:	jne    0x41316c
  4131d1:	push   ecx
  4131d2:	lock mov ah,0x96
  4131d5:	sub    BYTE PTR [ecx-0x434d9cd5],0x97
  4131dc:	(bad)  
  4131dd:	in     al,0xf6
  4131df:	dec    ebp
  4131e0:	sbb    eax,0x1dbc7c23
  4131e5:	pop    esi
  4131e6:	jmp    0xe844791f
  4131eb:	dec    ecx
  4131ec:	call   0xa621:0x36eacfc0
  4131f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131f4:	mov    DWORD PTR [edi],ebp
  4131f6:	bound  ecx,QWORD PTR [edi+0x13]
  4131f9:	lahf   
  4131fa:	jne    0x4131a1
  4131fc:	sub    esi,DWORD PTR [ecx+0x44582172]
  413202:	cmp    DWORD PTR [esi],eax
  413204:	fcomp  DWORD PTR [edi+0x690bd1cc]
  41320a:	mov    dl,0x82
  41320c:	dec    edx
  41320d:	call   0x7ad8a176
  413212:	cli    
  413213:	dec    ebx
  413214:	mov    bl,0x3b
  413216:	mov    eax,0xd25d04b5
  41321b:	pop    ecx
  41321c:	or     edx,eax
  41321e:	pop    edx
  41321f:	pushf  
  413220:	ds dec edi
  413222:	outs   dx,DWORD PTR ds:[esi]
  413223:	mov    bh,0xa5
  413225:	pop    edi
  413226:	jmp    0x4131e2
  413228:	stc    
  413229:	inc    ebp
  41322a:	test   DWORD PTR [esi-0xf02f20c],ebp
  413230:	rcl    BYTE PTR fs:[edi-0x262fba46],1
  413237:	xor    BYTE PTR [eax],bl
  413239:	and    esi,edi
  41323b:	add    al,BYTE PTR ss:[edi+0x68]
  41323f:	add    edx,DWORD PTR cs:[ebp-0x56628532]
  413246:	jle    0x413217
  413248:	sub    al,0x5
  41324a:	xchg   edx,eax
  41324b:	out    dx,al
  41324c:	popa   
  41324d:	je     0x413213
  41324f:	cs jns 0x413260
  413252:	mov    ds:0x249fcc85,al
  413257:	pop    esp
  413258:	jg     0x4132cc
  41325a:	adc    eax,DWORD PTR [eax-0x2fd62bf4]
  413260:	cs jl  0x41324e
  413263:	js     0x4132c6
  413265:	dec    ebp
  413266:	fstp   DWORD PTR [esi-0x7c09df18]
  41326c:	xchg   DWORD PTR [edi+0x67],esp
  41326f:	jp     0x413261
  413271:	jo     0x41320e
  413273:	inc    edx
  413274:	adc    ebx,DWORD PTR [esi+0x711d993a]
  41327a:	in     eax,0xa4
  41327c:	sub    BYTE PTR ds:0xc9e43c8f,ah
  413282:	test   al,0x2e
  413284:	in     al,dx
  413285:	dec    ebp
  413286:	lods   al,BYTE PTR ds:[esi]
  413287:	mov    DWORD PTR [esi],ebx
  413289:	mov    dh,0x32
  41328b:	test   BYTE PTR [eax],bl
  41328d:	aam    0x4a
  41328f:	xchg   esi,eax
  413290:	(bad)  
  413291:	shl    BYTE PTR [ebx],1
  413293:	popa   
  413294:	and    ebp,ebx
  413296:	addr16 push cs
  413298:	xor    al,0xd2
  41329a:	js     0x413277
  41329c:	adc    cl,BYTE PTR [eax]
  41329e:	hlt    
  41329f:	fld    QWORD PTR [esi]
  4132a1:	fadd   QWORD PTR [ebx]
  4132a3:	and    al,0x17
  4132a5:	and    al,0x10
  4132a7:	xchg   esp,eax
  4132a8:	sbb    BYTE PTR [ecx-0x516d2691],cl
  4132ae:	add    BYTE PTR [ebx],bl
  4132b0:	pop    edi
  4132b1:	fcmovnb st,st(1)
  4132b3:	xchg   ecx,eax
  4132b4:	cwde   
  4132b5:	add    BYTE PTR [edx+0x41c2644b],bh
  4132bb:	(bad)  
  4132bc:	xchg   esp,eax
  4132bd:	xchg   edi,eax
  4132be:	test   BYTE PTR [ebx+esi*1-0x13be5ca6],ah
  4132c5:	aam    0x28
  4132c7:	std    
  4132c8:	mov    eax,0x7321f693
  4132cd:	mov    esi,0x4ff521ec
  4132d2:	pusha  
  4132d3:	icebp  
  4132d4:	adc    DWORD PTR [edx+0x2dc57d26],0x498ec8ef
  4132de:	xchg   ebp,eax
  4132df:	add    DWORD PTR [edi-0xc9dc9aa],0xb127b1f6
  4132e9:	lock mov es,WORD PTR [ecx+0x55]
  4132ed:	ja     0x4132eb
  4132ef:	(bad)  
  4132f1:	out    dx,al
  4132f2:	push   ss
  4132f3:	sub    esi,DWORD PTR [ebx+0x466beec5]
  4132f9:	jb     0x41332e
  4132fb:	ficomp DWORD PTR [edx+0x71]
  4132fe:	imul   esi,DWORD PTR [esi],0x64137668
  413304:	cwde   
  413305:	mov    dl,0xc1
  413307:	sahf   
  413308:	loop   0x413332
  41330a:	popa   
  41330b:	aad    0x11
  41330d:	or     cl,ch
  41330f:	dec    ebx
  413310:	lock xchg BYTE PTR [edx-0x14c76742],ch
  413317:	aam    0x88
  413319:	icebp  
  41331a:	in     al,0x15
  41331c:	ror    DWORD PTR [ecx-0x5a65edd3],cl
  413322:	sub    DWORD PTR [eax+eax*8+0x3d],edx
  413326:	out    dx,eax
  413327:	mov    ecx,es
  413329:	jl     0x413391
  41332b:	or     al,0x19
  41332d:	popf   
  41332e:	inc    esp
  41332f:	pop    ebp
  413330:	loop   0x413317
  413332:	test   eax,0xbaeaaad0
  413337:	loop   0x4132da
  413339:	or     ebx,DWORD PTR [esi-0x64b50aba]
  41333f:	push   edx
  413340:	lods   eax,DWORD PTR ds:[esi]
  413341:	xchg   edi,eax
  413342:	cmp    DWORD PTR [edx+0x55],ecx
  413345:	dec    ecx
  413346:	pop    ecx
  413347:	lds    esi,FWORD PTR [edx]
  413349:	cs loope 0x41339d
  41334c:	loop   0x4132e9
  41334e:	stc    
  41334f:	cmp    dh,BYTE PTR [ebx]
  413351:	(bad)  
  413353:	or     bl,BYTE PTR [edi-0x2c4542b4]
  413359:	ins    BYTE PTR es:[edi],dx
  41335a:	leave  
  41335b:	xor    ebx,edx
  41335d:	jmp    0x154c56ef
  413362:	push   ss
  413363:	push   ebp
  413364:	or     al,0x7d
  413366:	jae    0x41335b
  413368:	jp     0x41335a
  41336a:	out    dx,eax
  41336b:	inc    ebp
  41336c:	inc    ebp
  41336d:	dec    esi
  41336e:	lods   al,BYTE PTR ds:[esi]
  41336f:	(bad)  
  413370:	fmul   DWORD PTR [esi-0x3f64d0]
  413376:	stos   DWORD PTR es:[edi],eax
  413377:	retf   0x48a5
  41337a:	jecxz  0x4133df
  41337c:	pop    eax
  41337d:	or     esp,0x103f4c3f
  413383:	aad    0xfc
  413385:	scas   al,BYTE PTR es:[edi]
  413386:	add    eax,0xcbeb9421
  41338b:	add    ebx,eax
  41338d:	pop    ebp
  41338e:	inc    edi
  41338f:	retf   0xd59f
  413392:	aad    0x20
  413394:	scas   al,BYTE PTR es:[edi]
  413395:	aad    0xf3
  413397:	inc    ecx
  413398:	jle    0x41337a
  41339a:	inc    ebp
  41339b:	std    
  41339c:	gs iret 
  41339e:	pop    ebp
  41339f:	jge    0x413410
  4133a1:	adc    ch,cl
  4133a3:	push   0x68625c94
  4133a8:	pop    es
  4133a9:	lahf   
  4133aa:	ds stos BYTE PTR es:[edi],al
  4133ac:	hlt    
  4133ad:	mov    ecx,0xbc02268c
  4133b2:	test   edx,esp
  4133b4:	adc    al,0xa6
  4133b6:	xlat   BYTE PTR ds:[ebx]
  4133b7:	sbb    DWORD PTR [edi-0x344a1add],esp
  4133bd:	fwait
  4133be:	les    ebx,FWORD PTR [ebp+0x65]
  4133c1:	out    0x53,eax
  4133c3:	adc    BYTE PTR [eax+edx*2-0x4a],0xbc
  4133c8:	ds jmp 0x1aa3c3f7
  4133ce:	mov    ch,0xd3
  4133d0:	ror    BYTE PTR [eax],0xd6
  4133d3:	inc    ecx
  4133d4:	or     ecx,DWORD PTR [esi-0x69062c73]
  4133da:	jp     0x4133f6
  4133dc:	jno    0x413375
  4133de:	int    0xc5
  4133e0:	repz cmp dl,dh
  4133e3:	nop
  4133e4:	push   ss
  4133e5:	pop    eax
  4133e6:	cmp    BYTE PTR [edi+ebx*1+0x42],bh
  4133ea:	aam    0xa6
  4133ec:	scas   al,BYTE PTR es:[edi]
  4133ed:	mov    eax,0x9c09793e
  4133f2:	ss push ebp
  4133f4:	aaa    
  4133f5:	mov    ds:0x30f4b4b2,al
  4133fa:	out    dx,eax
  4133fb:	mov    ebx,ebp
  4133fd:	cdq    
  4133fe:	lds    edx,FWORD PTR [eax]
  413400:	add    DWORD PTR [esi-0x5a],eax
  413403:	push   0x3e
  413405:	arpl   WORD PTR [eax-0x48],si
  413408:	jb     0x4133a7
  41340a:	test   DWORD PTR [ebx+0x77],ebx
  41340d:	pop    ebx
  41340e:	cmp    BYTE PTR [ebx-0x2a17de63],dh
  413414:	enterw 0x9049,0xd0
  413419:	xchg   esi,eax
  41341a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41341b:	jg     0x41343c
  41341d:	sbb    al,0xde
  41341f:	lods   eax,DWORD PTR ds:[esi]
  413420:	jno    0x4133ab
  413422:	sub    eax,DWORD PTR [edx*2+0x133f1e7d]
  413429:	outs   dx,BYTE PTR ds:[esi]
  41342a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41342c:	mov    DWORD PTR [esi+0x2bcc9765],ebp
  413432:	or     al,0x56
  413434:	xchg   ebp,eax
  413435:	fndisi(8087 only) 
  413437:	push   0xad21e59f
  41343c:	dec    ecx
  41343d:	dec    ebp
  41343e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41343f:	dec    edx
  413440:	adc    dh,BYTE PTR [eax]
  413442:	rcr    DWORD PTR [ebx],cl
  413444:	or     DWORD PTR [edx-0x228e00c2],0x3136e7d5
  41344e:	or     BYTE PTR [edi+eax*4+0x6d],dl
  413452:	xor    DWORD PTR [ebx+0x5d],edx
  413455:	aad    0x48
  413457:	adc    ch,dl
  413459:	rol    DWORD PTR [ebp-0x79c6094e],cl
  41345f:	mov    edx,0xf4e4c4da
  413464:	ret    0xa061
  413467:	jg     0x413457
  413469:	in     al,0x9
  41346b:	sub    eax,0x7a157f9d
  413470:	ins    DWORD PTR es:[edi],dx
  413471:	fwait
  413472:	sub    edx,DWORD PTR [esi+0x30af502e]
  413478:	push   esp
  413479:	pusha  
  41347a:	ins    BYTE PTR es:[edi],dx
  41347b:	inc    ebp
  41347c:	shl    BYTE PTR [ecx-0x31],1
  41347f:	fisubr DWORD PTR [ebx+0x33cc45]
  413485:	adc    DWORD PTR [ebx+0x4b8c1ca5],esp
  41348b:	(bad)  
  41348c:	int3   
  41348d:	and    eax,0xa17bfa73
  413492:	(bad)  
  413495:	ret    
  413496:	push   es
  413497:	scas   al,BYTE PTR es:[edi]
  413498:	xlat   BYTE PTR ds:[ebx]
  41349a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41349b:	dec    ebx
  41349c:	or     edi,DWORD PTR [ebx+eax*2+0xa]
  4134a0:	mov    esp,DWORD PTR [eax-0x16]
  4134a3:	shl    DWORD PTR [ebx-0x7a],cl
  4134a6:	sbb    eax,0x2b7901ff
  4134ab:	mov    bl,0x1f
  4134ad:	xor    al,BYTE PTR [esi+ebx*4+0x16]
  4134b1:	sbb    eax,0xa6c4b657
  4134b6:	loopne 0x41344f
  4134b8:	pop    es
  4134b9:	fiadd  DWORD PTR [ebp-0x46a2b31c]
  4134bf:	js     0x413447
  4134c1:	scas   al,BYTE PTR es:[edi]
  4134c2:	adc    al,BYTE PTR [edx-0x52]
  4134c5:	test   al,bl
  4134c7:	sub    bh,BYTE PTR [ebp+0x2270717c]
  4134cd:	mov    ebp,0x4520b959
  4134d2:	sahf   
  4134d3:	add    cl,BYTE PTR [edi-0x14615e9c]
  4134d9:	aaa    
  4134da:	push   ss
  4134db:	pop    ebp
  4134dc:	pop    ebx
  4134dd:	jge    0x4134e7
  4134df:	jle    0x413500
  4134e1:	aas    
  4134e2:	fs mov esp,0x5365a04e
  4134e8:	xor    edx,DWORD PTR [edi-0x31]
  4134eb:	jle    0x4134a9
  4134ed:	adc    BYTE PTR [edi],dh
  4134ef:	dec    esp
  4134f0:	jl     0x41351d
  4134f2:	shr    BYTE PTR [edi+0x413e5779],0xcc
  4134f9:	sbb    ecx,DWORD PTR [ebx+0x5bdc3962]
  4134ff:	pusha  
  413500:	jmp    0x413564
  413502:	rol    DWORD PTR [ecx+edi*4-0x57],1
  413506:	out    dx,eax
  413507:	aas    
  413508:	sbb    ecx,DWORD PTR [edx-0x23d47f56]
  41350e:	leave  
  41350f:	mov    edi,DWORD PTR [esi+0x6d]
  413512:	push   0x25
  413514:	jae    0x413581
  413516:	mov    cl,BYTE PTR [esi-0x14b516ec]
  41351c:	ret    
  41351d:	test   DWORD PTR [edx],ebp
  41351f:	enter  0x1446,0xc8
  413523:	mov    ds:0x50e45d33,al
  413528:	fs mov esp,0xc9c9664e
  41352e:	or     ah,BYTE PTR [ebp-0x2ca8234c]
  413534:	hlt    
  413535:	clc    
  413536:	fmul   DWORD PTR [ecx+0xdbefe2a]
  41353c:	xlat   BYTE PTR ds:[ebx]
  41353d:	dec    eax
  41353e:	jb     0x4135ad
  413540:	dec    BYTE PTR [edi]
  413542:	or     al,0xab
  413544:	pop    edi
  413545:	inc    ebx
  413546:	neg    DWORD PTR [edi-0x5f]
  413549:	or     ah,BYTE PTR [eax-0x40]
  41354c:	popf   
  41354d:	inc    esi
  41354e:	adc    ch,ch
  413550:	adc    esi,DWORD PTR [esi-0x6c]
  413553:	adc    al,0x62
  413555:	xchg   ecx,eax
  413556:	dec    edx
  413557:	call   FWORD PTR [ebx+0x2927c0e6]
  41355d:	cmp    ebp,DWORD PTR [eax-0x1834be08]
  413563:	and    BYTE PTR [ecx+0x29],ch
  413566:	jbe    0x413541
  413568:	pop    edx
  413569:	dec    esi
  41356a:	xchg   DWORD PTR [edi-0x2a],ecx
  41356d:	inc    edi
  41356e:	adc    BYTE PTR [edx+0x12eab3d5],cl
  413574:	lds    edx,FWORD PTR [ebp+0x2c5bf1a0]
  41357a:	aad    0xe4
  41357c:	dec    ebx
  41357d:	cmc    
  41357e:	push   ecx
  41357f:	stos   BYTE PTR es:[edi],al
  413580:	inc    eax
  413581:	ror    DWORD PTR [eax+esi*2-0x5],cl
  413585:	or     eax,0xac3578ba
  41358a:	push   ebx
  41358b:	ins    DWORD PTR es:[edi],dx
  41358c:	call   0x2ba2f02f
  413591:	mov    ds:0xf2a79fef,al
  413596:	adc    al,BYTE PTR [ebx+0x3a5e6201]
  41359c:	mov    ah,0x66
  41359e:	mov    esp,0x99fe282
  4135a3:	enter  0xad5e,0x35
  4135a7:	pop    edi
  4135a8:	hlt    
  4135a9:	fs jbe 0x4135ae
  4135ac:	outs   dx,DWORD PTR ds:[esi]
  4135ad:	retf   0x65c7
  4135b0:	and    BYTE PTR [eax],ah
  4135b2:	pop    ecx
  4135b3:	(bad)  
  4135b5:	push   eax
  4135b6:	stos   DWORD PTR es:[edi],eax
  4135b7:	mov    BYTE PTR [ecx+ebp*4],ah
  4135ba:	push   edx
  4135bb:	iret   
  4135bc:	jmp    0x446f363b
  4135c1:	dec    ecx
  4135c2:	inc    edx
  4135c3:	repnz xchg esp,eax
  4135c5:	jnp    0x413560
  4135c7:	shr    BYTE PTR [edx+0x79ac94d5],cl
  4135cd:	pop    esp
  4135ce:	adc    BYTE PTR [ebx-0x44],0x53
  4135d2:	aaa    
  4135d3:	rcl    DWORD PTR [ebx],0xa1
  4135d6:	inc    ecx
  4135d7:	icebp  
  4135d8:	push   0x63ce2f18
  4135dd:	in     eax,dx
  4135de:	fwait
  4135df:	jmp    0x16f6:0x35644352
  4135e6:	daa    
  4135e7:	lahf   
  4135e8:	stc    
  4135e9:	mov    cl,0x74
  4135eb:	or     ebp,DWORD PTR [ebx-0x52]
  4135ee:	adc    eax,0xf5da7af8
  4135f3:	mov    al,0x9f
  4135f5:	imul   ebp,ebx,0x5a0017a5
  4135fb:	(bad)  
  4135fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135fd:	xchg   ebp,eax
  4135fe:	iret   
  4135ff:	add    ax,0xfa58
  413603:	jecxz  0x4135f6
  413605:	jmp    0xc714:0xe4b90ce4
  41360c:	imul   esi,DWORD PTR [esi-0x20],0x71cec95c
  413613:	int    0x7d
  413615:	add    eax,0x1429e191
  41361a:	dec    esp
  41361b:	or     DWORD PTR [eax+0x464f9892],esp
  413621:	sub    cl,BYTE PTR [ebx-0x1c]
  413624:	out    0xf8,al
  413626:	rol    BYTE PTR [esi-0x32901c95],cl
  41362c:	jle    0x4135b3
  41362e:	(bad)  
  413630:	rcr    esi,cl
  413632:	xchg   ebx,eax
  413633:	leave  
  413634:	mov    ch,0xb1
  413636:	dec    ebp
  413637:	jne    0x4135c6
  413639:	and    al,0xb3
  41363b:	jle    0x413627
  41363d:	mov    ds:0xe895072a,al
  413642:	dec    edi
  413643:	mov    eax,0xec6c9409
  413648:	pop    ebp
  413649:	test   al,0x93
  41364b:	add    DWORD PTR [ebp-0xf0fc0ef],ebx
  413651:	test   al,0x47
  413653:	sbb    al,0x1f
  413655:	sub    esi,ecx
  413657:	iret   
  413658:	test   DWORD PTR [esi+0x72cde3f8],ebx
  41365e:	xlat   BYTE PTR ds:[ebx]
  41365f:	add    edx,esi
  413661:	jmp    0x4136fe
  413666:	mov    edi,DWORD PTR ds:0x432010
  41366c:	or     edi,DWORD PTR ds:0x43101c
  413672:	mov    DWORD PTR ds:0x432010,edi
  413678:	mov    edi,DWORD PTR [ebp+0x8]
  41367b:	xor    ecx,0x33c4
  413681:	mov    ecx,0x8a8e
  413686:	sub    DWORD PTR ds:0x42f018,0x431000
  413690:	xor    cx,WORD PTR [edi+edx*4+0x2]
  413695:	movzx  edi,WORD PTR ds:0x431008
  41369c:	or     edi,DWORD PTR ds:0x43201c
  4136a2:	mov    DWORD PTR ds:0x431008,edi
  4136a8:	mov    edi,0x3b52
  4136ad:	xor    DWORD PTR ds:0x42f014,0x42e00c
  4136b7:	add    cx,di
  4136ba:	add    DWORD PTR ds:0x42e008,0x7149
  4136c4:	movzx  ecx,cx
  4136c7:	mov    DWORD PTR [ebp-0xc],ecx
  4136ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4136cd:	movzx  ecx,WORD PTR [ecx+edx*4]
  4136d1:	sbb    DWORD PTR ds:0x42f00c,0x431000
  4136db:	xor    ecx,0x8a8e
  4136e1:	sbb    DWORD PTR ds:0x432010,0x432000
  4136eb:	add    ecx,edi
  4136ed:	mov    edi,DWORD PTR [ebp-0xc]
  4136f0:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  4136f7:	mov    ecx,DWORD PTR ds:0x42f004
  4136fd:	inc    edx
  4136fe:	mov    ecx,DWORD PTR [ebp-0x10]
  413701:	cmp    edx,ecx
  413703:	mov    DWORD PTR ds:0x430010,0x10d
  41370d:	jne    0x413666
  413713:	mov    ecx,DWORD PTR [ebp-0x18]
  413716:	mov    edx,DWORD PTR [ebp+0x10]
  413719:	or     DWORD PTR ds:0x430000,0x4712
  413723:	xor    ecx,eax
  413725:	and    DWORD PTR ds:0x42f004,0x0
  41372f:	jmp    0x413743
  413734:	xor    edi,edi
  413736:	add    edi,DWORD PTR ds:0x42f004
  41373c:	inc    edi
  41373d:	mov    DWORD PTR ds:0x42f004,edi
  413743:	cmp    DWORD PTR ds:0x42f004,0x13
  41374a:	jae    0x413796
  413750:	cmp    DWORD PTR ds:0x42f004,0xc
  413757:	jbe    0x413796
  41375d:	jmp    0x413777
  413762:	push   0x7f36
  413767:	push   0x430004
  41376c:	push   0x6180
  413771:	call   DWORD PTR ds:0x4348ff
  413777:	cmp    DWORD PTR ds:0x42f004,0xb
  41377e:	jne    0x413791
  413784:	mov    edi,DWORD PTR ds:0x42f004
  41378a:	inc    edi
  41378b:	mov    DWORD PTR ds:0x42f004,edi
  413791:	jmp    0x413734
  413796:	add    ecx,esi
  413798:	dec    edi
  413799:	mov    DWORD PTR [edx],ecx
  41379b:	mov    ecx,DWORD PTR [ebp-0x18]
  41379e:	xor    DWORD PTR ds:0x430000,ecx
  4137a4:	xor    ecx,eax
  4137a6:	sub    edi,0x1615
  4137ac:	add    ecx,esi
  4137ae:	mov    DWORD PTR [ebp-0xc],ecx
  4137b1:	mov    edi,DWORD PTR ds:0x432008
  4137b7:	add    DWORD PTR ds:0x42e014,edi
  4137bd:	mov    DWORD PTR [ebp+0x8],0xf89c8581
  4137c4:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  4137cb:	mov    DWORD PTR [ebp-0x10],0xf89c9581
  4137d2:	xor    DWORD PTR ds:0x432010,edx
  4137d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4137db:	xor    DWORD PTR ds:0x432000,edi
  4137e1:	mov    DWORD PTR [ebp+0x8],ecx
  4137e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4137e7:	adc    DWORD PTR ds:0x43001c,0x42e01c
  4137f1:	xor    ecx,eax
  4137f3:	add    ecx,esi
  4137f5:	mov    ecx,0x242ebed
  4137fa:	mov    DWORD PTR ds:0x42f01c,0x2580
  413804:	mov    edi,0xf641bf2
  413809:	je     0x41ab5c
  41380f:	and    DWORD PTR ds:0x432014,0x57c2
  413819:	mov    edx,DWORD PTR [ebp+0x8]
  41381c:	adc    ebx,0x6e0a
  413822:	mov    ebx,DWORD PTR [ebp-0x8]
  413825:	xor    edx,eax
  413827:	or     DWORD PTR ds:0x42e020,0x11fc
  413831:	xor    ebx,eax
  413833:	adc    DWORD PTR ds:0x430010,0x2848
  41383d:	sub    edx,ebx
  41383f:	sbb    DWORD PTR ds:0x431010,0x4ed3
  413849:	sub    edx,esi
  41384b:	adc    ebx,DWORD PTR ds:0x431018
  413851:	xor    edx,eax
  413853:	mov    DWORD PTR [ebp+0x8],edx
  413856:	mov    edx,DWORD PTR [ebp+0x8]
  413859:	mov    ebx,DWORD PTR [ebp-0x58]
  41385c:	sub    DWORD PTR ds:0x42e018,0xd4c
  413866:	add    edx,0x5708c0
  41386c:	imul   edx,ebx
  41386f:	and    DWORD PTR ds:0x432010,0x0
  413879:	jmp    0x41388b
  41387e:	mov    ebx,DWORD PTR ds:0x432010
  413884:	inc    ebx
  413885:	mov    DWORD PTR ds:0x432010,ebx
  41388b:	cmp    DWORD PTR ds:0x432010,0x16
  413892:	jae    0x4138bd
  413898:	cmp    DWORD PTR ds:0x432010,0x20
  41389f:	jg     0x4138bd
  4138a5:	jmp    0x4138b8
  4138aa:	push   0x58a4
  4138af:	push   DWORD PTR [ebp-0x10]
  4138b2:	call   DWORD PTR ds:0x4348d7
  4138b8:	jmp    0x41387e
  4138bd:	mov    DWORD PTR [ebp-0x58],edx
  4138c0:	movzx  ebx,BYTE PTR ds:0x42f01c
  4138c7:	sbb    ebx,DWORD PTR ds:0x42e018
  4138cd:	mov    DWORD PTR ds:0x42f01c,ebx
  4138d3:	mov    edx,DWORD PTR [ebp+0x8]
  4138d6:	and    DWORD PTR ds:0x430014,0x0
  4138e0:	mov    ebx,DWORD PTR ds:0x430014
  4138e6:	inc    ebx
  4138e7:	mov    DWORD PTR ds:0x430014,ebx
  4138ed:	cmp    DWORD PTR ds:0x430014,0xc
  4138f4:	ja     0x41392c
  4138fa:	jmp    0x413905
  4138ff:	call   DWORD PTR ds:0x43490b
  413905:	cmp    DWORD PTR ds:0x430014,0xb
  41390c:	jne    0x41391f
  413912:	mov    ebx,DWORD PTR ds:0x430014
  413918:	inc    ebx
  413919:	mov    DWORD PTR ds:0x430014,ebx
  41391f:	cmp    DWORD PTR ds:0x430014,0x19
  413926:	jb     0x4138e0
  41392c:	mov    ebx,DWORD PTR [ebp-0x54]
  41392f:	xor    DWORD PTR ds:0x42e01c,0x42f010
  413939:	add    edx,0x64f8a2
  41393f:	or     edx,ebx
  413941:	dec    ebx
  413942:	mov    DWORD PTR [ebp-0x54],edx
  413945:	mov    edx,DWORD PTR [ebp+0x8]
  413948:	mov    ebx,DWORD PTR [ebp-0x50]
  41394b:	add    edx,ecx
  41394d:	not    DWORD PTR ds:0x42e018
  413953:	xor    edx,ebx
  413955:	mov    DWORD PTR [ebp-0x50],edx
  413958:	xor    ebx,ebx
  41395a:	add    ebx,DWORD PTR ds:0x41d072
  413960:	xor    edx,edx
  413962:	or     edx,DWORD PTR ds:0x41d092
  413968:	sub    ebx,edx
  41396a:	imul   ebx,DWORD PTR [ebx+edx*1]
  41396e:	mov    edx,DWORD PTR [ebp+0x8]
  413971:	mov    ebx,DWORD PTR [ebp-0x4c]
  413974:	or     DWORD PTR ds:0x42e024,0x7bc8
  41397e:	add    edx,edi
  413980:	and    edx,ebx
  413982:	adc    DWORD PTR ds:0x432000,ecx
  413988:	mov    DWORD PTR [ebp-0x4c],edx
  41398b:	mov    edx,DWORD PTR [ebp+0x8]
  41398e:	add    DWORD PTR ds:0x431000,ebx
  413994:	mov    ebx,DWORD PTR [ebp-0x48]
  413997:	add    DWORD PTR ds:0x431004,0x3491
  4139a1:	lea    edx,[ebx+edx*1+0x241fc1f]
  4139a8:	mov    DWORD PTR [ebp-0x48],edx
  4139ab:	mov    DWORD PTR ds:0x42e020,0x13
  4139b5:	cmp    DWORD PTR ds:0x42e020,0x0
  4139bc:	je     0x413a09
  4139c2:	cmp    DWORD PTR ds:0x42e020,0x5
  4139c9:	jl     0x413a09
  4139cf:	jmp    0x4139dd
  4139d4:	push   DWORD PTR [ebp-0x10]
  4139d7:	call   DWORD PTR ds:0x43490f
  4139dd:	cmp    DWORD PTR ds:0x42e020,0x6
  4139e4:	jne    0x4139f7
  4139ea:	mov    ebx,DWORD PTR ds:0x42e020
  4139f0:	dec    ebx
  4139f1:	mov    DWORD PTR ds:0x42e020,ebx
  4139f7:	mov    ebx,DWORD PTR ds:0x42e020
  4139fd:	dec    ebx
  4139fe:	mov    DWORD PTR ds:0x42e020,ebx
  413a04:	jmp    0x4139b5
  413a09:	mov    edx,DWORD PTR [ebp+0x8]
  413a0c:	xor    ebx,DWORD PTR ds:0x42e018
  413a12:	mov    ebx,0xfa5e15e2
  413a17:	sub    DWORD PTR ds:0x42e028,0x60ce
  413a21:	sub    ebx,edx
  413a23:	add    ebx,DWORD PTR [ebp-0x44]
  413a26:	mov    DWORD PTR ds:0x43100c,0x16
  413a30:	cmp    DWORD PTR ds:0x43100c,0x0
  413a37:	je     0x413a8b
  413a3d:	cmp    DWORD PTR ds:0x43100c,0xc
  413a44:	ja     0x413a8b
  413a4a:	jmp    0x413a5f
  413a4f:	push   0x434082
  413a54:	push   0x400000
  413a59:	call   DWORD PTR ds:0x434917
  413a5f:	cmp    DWORD PTR ds:0x43100c,0xd
  413a66:	jne    0x413a79
  413a6c:	mov    edx,DWORD PTR ds:0x43100c
  413a72:	dec    edx
  413a73:	mov    DWORD PTR ds:0x43100c,edx
  413a79:	mov    edx,DWORD PTR ds:0x43100c
  413a7f:	dec    edx
  413a80:	mov    DWORD PTR ds:0x43100c,edx
  413a86:	jmp    0x413a30
  413a8b:	mov    DWORD PTR [ebp-0x44],ebx
  413a8e:	movzx  edx,BYTE PTR ds:0x431018
  413a95:	or     DWORD PTR ds:0x42e01c,edx
  413a9b:	mov    edx,DWORD PTR [ebp+0x8]
  413a9e:	xor    edx,eax
  413aa0:	or     DWORD PTR ds:0x42e00c,0x432004
  413aaa:	add    edx,esi
  413aac:	mov    DWORD PTR ds:0x43000c,0x316a
  413ab6:	jne    0x41380f
  413abc:	mov    DWORD PTR ds:0x431010,0x2279
  413ac6:	jmp    0x41ab5c
  413acb:	and    DWORD PTR ds:0x43100c,0x0
  413ad5:	mov    edx,DWORD PTR ds:0x43100c
  413adb:	inc    edx
  413adc:	mov    DWORD PTR ds:0x43100c,edx
  413ae2:	cmp    DWORD PTR ds:0x43100c,0x11
  413ae9:	jle    0x413b2d
  413aef:	jmp    0x413b04
  413af4:	push   0x80c1
  413af9:	push   0x8496
  413afe:	call   DWORD PTR ds:0x43491b
  413b04:	cmp    DWORD PTR ds:0x43100c,0x10
  413b0b:	jne    0x413b20
  413b11:	xor    edx,edx
  413b13:	or     edx,DWORD PTR ds:0x43100c
  413b19:	inc    edx
  413b1a:	mov    DWORD PTR ds:0x43100c,edx
  413b20:	cmp    DWORD PTR ds:0x43100c,0x1c
  413b27:	jb     0x413ad5
  413b2d:	mov    edx,DWORD PTR [ebp-0xc]
  413b30:	movzx  ebx,BYTE PTR ds:0x43201c
  413b37:	xor    DWORD PTR ds:0x42e00c,ebx
  413b3d:	sub    edx,esi
  413b3f:	sbb    DWORD PTR ds:0x42f014,ecx
  413b45:	xor    edx,eax
  413b47:	neg    ebx
  413b49:	mov    DWORD PTR [ebp-0x5c],edx
  413b4c:	mov    ebx,DWORD PTR ds:0x41d0b2
  413b52:	mov    ebx,DWORD PTR [ebx]
  413b54:	sbb    DWORD PTR ds:0x43100c,ebx
  413b5a:	mov    edx,DWORD PTR [ebp-0x10]
  413b5d:	mov    DWORD PTR ds:0x432008,0x14
  413b67:	cmp    DWORD PTR ds:0x432008,0x0
  413b6e:	je     0x413ba3
  413b74:	cmp    DWORD PTR ds:0x432008,0x19
  413b7b:	jb     0x413ba3
  413b81:	jmp    0x413b91
  413b86:	push   0x434009
  413b8b:	call   DWORD PTR ds:0x43491f
  413b91:	mov    ebx,DWORD PTR ds:0x432008
  413b97:	dec    ebx
  413b98:	mov    DWORD PTR ds:0x432008,ebx
  413b9e:	jmp    0x413b67
  413ba3:	mov    ebx,DWORD PTR [ebp-0x8]
  413ba6:	xor    edx,eax
  413ba8:	adc    DWORD PTR ds:0x430000,0x6f74
  413bb2:	xor    ebx,eax
  413bb4:	sub    edx,ebx
  413bb6:	xor    DWORD PTR ds:0x43000c,0x3be
  413bc0:	sub    edx,esi
  413bc2:	adc    DWORD PTR ds:0x432018,0x6de5
  413bcc:	xor    edx,eax
  413bce:	mov    DWORD PTR ds:0x431008,0x236c
  413bd8:	mov    DWORD PTR [ebp-0x10],edx
  413bdb:	not    edx
  413bdd:	mov    edx,DWORD PTR [ebp-0x14]
  413be0:	mov    DWORD PTR [ebp+0x8],edx
  413be3:	mov    DWORD PTR ds:0x431014,0x5696
  413bed:	jmp    0x4161ca
  413bf2:	mov    edx,DWORD PTR [ebp+0x8]
  413bf5:	and    DWORD PTR ds:0x42f014,0x0
  413bff:	jmp    0x413c13
  413c04:	xor    ebx,ebx
  413c06:	or     ebx,DWORD PTR ds:0x42f014
  413c0c:	inc    ebx
  413c0d:	mov    DWORD PTR ds:0x42f014,ebx
  413c13:	cmp    DWORD PTR ds:0x42f014,0x1e
  413c1a:	jae    0x413c50
  413c20:	cmp    DWORD PTR ds:0x42f014,0x2e
  413c27:	jb     0x413c50
  413c2d:	jmp    0x413c4b
  413c32:	push   DWORD PTR [ebp-0x10]
  413c35:	push   0x8926
  413c3a:	push   DWORD PTR [ebp-0x10]
  413c3d:	push   0x6bd5
  413c42:	push   DWORD PTR [ebp-0x10]
  413c45:	call   DWORD PTR ds:0x4348af
  413c4b:	jmp    0x413c04
  413c50:	mov    ebx,DWORD PTR [ebp-0x8]
  413c53:	xor    DWORD PTR ds:0x42e000,0x431018
  413c5d:	jmp    0x416018
  413c62:	fnstsw WORD PTR [esi+0x771bb57b]
  413c68:	mov    bl,0x96
  413c6a:	aam    0x9b
  413c6c:	aas    
  413c6d:	push   ebp
  413c6e:	mov    dl,0xf5
  413c70:	push   ebx
  413c71:	test   al,0x41
  413c73:	mov    dh,BYTE PTR [edx+0x72]
  413c76:	rcr    BYTE PTR [edi+0x72],1
  413c79:	jb     0x413c45
  413c7b:	fdivrp st(5),st
  413c7d:	sbb    bl,BYTE PTR [ebx+0x45]
  413c80:	or     DWORD PTR [ebx+ebp*2],eax
  413c83:	sub    BYTE PTR [ecx+0x7089cde5],bh
  413c89:	mov    ah,0x4f
  413c8b:	vmovlps xmm0,xmm3,QWORD PTR [eax]
  413c8f:	loop   0x413c67
  413c91:	sbb    DWORD PTR [esp+ecx*1-0x41805bdb],0x4ed199c9
  413c9c:	addr16 out 0xd4,eax
  413c9f:	sbb    esi,DWORD PTR [ebx+eiz*4-0x7]
  413ca3:	pop    edi
  413ca4:	ja     0x413d22
  413ca6:	(bad)  
  413ca7:	in     eax,0x66
  413ca9:	or     BYTE PTR [ebx],bh
  413cab:	loop   0x413c86
  413cad:	shl    BYTE PTR [ebp+0x649b1b07],cl
  413cb3:	data16 cli 
  413cb5:	jne    0x413c52
  413cb7:	fistp  QWORD PTR [ebp-0x115157a8]
  413cbd:	xchg   edi,eax
  413cbe:	push   es
  413cbf:	fimul  DWORD PTR [eax+0x1]
  413cc2:	mov    eax,0x3ebee8fb
  413cc7:	jle    0x413cef
  413cc9:	mov    ds:0xbec8af29,al
  413cce:	hlt    
  413ccf:	pop    ds
  413cd0:	scas   al,BYTE PTR es:[edi]
  413cd1:	xchg   edi,eax
  413cd2:	ret    0x826d
  413cd5:	inc    edi
  413cd6:	iret   
  413cd7:	lods   eax,DWORD PTR ds:[esi]
  413cd8:	mov    ebx,0xe6aef4e
  413cdd:	ret    
  413cde:	cli    
  413cdf:	shr    BYTE PTR [ebx-0x68],cl
  413ce2:	cs cld 
  413ce4:	scas   al,BYTE PTR es:[edi]
  413ce5:	xchg   ebp,eax
  413ce6:	mov    ebp,0x587b0ad2
  413ceb:	mov    esi,0x226bcfd9
  413cf0:	jmp    0x413c82
  413cf2:	xchg   esi,eax
  413cf3:	xchg   BYTE PTR [edx],ch
  413cf5:	pop    ds
  413cf6:	jmp    0x413c93
  413cf8:	sbb    DWORD PTR [eax+0x163595d4],0x86f1a69d
  413d02:	cmp    DWORD PTR [eax-0x7d],esi
  413d05:	push   ecx
  413d06:	loop   0x413d2f
  413d08:	jb     0x413d77
  413d0a:	in     eax,dx
  413d0b:	into   
  413d0c:	add    ebx,DWORD PTR [esi+0x4dbb5e3b]
  413d12:	push   ebp
  413d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d14:	(bad)  
  413d15:	xlat   BYTE PTR ds:[ebx]
  413d16:	inc    ebp
  413d17:	jge    0x413cda
  413d19:	jecxz  0x413d73
  413d1b:	pop    esp
  413d1c:	outs   dx,DWORD PTR ds:[esi]
  413d1d:	int    0x90
  413d1f:	adc    DWORD PTR [eax+0x5d8666ae],esi
  413d25:	cwde   
  413d26:	sbb    dl,ah
  413d28:	sbb    eax,0x9864ab45
  413d2d:	(bad)  
  413d2e:	sahf   
  413d2f:	ins    BYTE PTR es:[edi],dx
  413d30:	mov    eax,ds:0xbad43730
  413d35:	pop    ecx
  413d36:	xchg   ecx,eax
  413d37:	xchg   esi,eax
  413d38:	shl    BYTE PTR [esi],0x4b
  413d3b:	retf   
  413d3c:	jg     0x413d71
  413d3e:	aas    
  413d3f:	or     BYTE PTR [ecx],bh
  413d41:	stos   BYTE PTR es:[edi],al
  413d42:	inc    esi
  413d43:	push   edi
  413d44:	inc    edi
  413d45:	adc    eax,DWORD PTR [esi-0x6]
  413d48:	imul   eax,DWORD PTR [ebp-0x11cf0c9e],0xf2dfbd2e
  413d52:	sub    dh,BYTE PTR [ebx+0x1685f8c6]
  413d58:	mov    al,0xa6
  413d5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d5b:	ja     0x413db0
  413d5d:	aam    0x7a
  413d5f:	imul   eax,DWORD PTR [edx-0x7],0xffffffe3
  413d63:	inc    esp
  413d64:	aad    0x1
  413d66:	ds sti 
  413d68:	xor    eax,ebx
  413d6a:	xor    DWORD PTR [esi+edx*2+0x1ea5fddc],edx
  413d71:	inc    eax
  413d72:	in     al,0xcd
  413d74:	adc    DWORD PTR [ebp-0x3d8e5ce8],edi
  413d7a:	rcr    DWORD PTR [ebx],1
  413d7c:	sbb    dl,al
  413d7e:	sub    al,0x73
  413d80:	pop    ds
  413d81:	sbb    eax,0x10d2a1a3
  413d86:	dec    edi
  413d87:	jne    0x413dfb
  413d89:	bound  ebx,QWORD PTR [edx-0x65]
  413d8c:	push   esp
  413d8d:	bound  esp,QWORD PTR [edx-0xd]
  413d90:	fisttp WORD PTR [ebx]
  413d92:	retf   0xb9f2
  413d95:	push   ss
  413d96:	pusha  
  413d97:	(bad)  
  413d98:	repnz bound edx,QWORD PTR [ebp-0x54]
  413d9c:	das    
  413d9d:	xchg   edi,eax
  413d9e:	add    bh,al
  413da0:	jbe    0x413d90
  413da2:	cdq    
  413da3:	outs   dx,DWORD PTR ds:[esi]
  413da4:	push   ds
  413da5:	ret    0x26b
  413da8:	cmp    bl,BYTE PTR ss:[eax-0x4d4ac7ec]
  413daf:	js     0x413db2
  413db1:	xchg   esp,eax
  413db2:	sbb    cl,BYTE PTR [eax+esi*2+0x4f5485f6]
  413db9:	jg     0x413db7
  413dbb:	enter  0xc7c6,0x89
  413dbf:	addr16 into 
  413dc1:	fst    QWORD PTR [esi]
  413dc3:	dec    ebx
  413dc4:	pop    edx
  413dc5:	fistp  WORD PTR [ecx-0x2d158117]
  413dcb:	sub    bh,0x72
  413dce:	mov    dl,0x52
  413dd0:	imul   ebx,DWORD PTR [ecx+eiz*4-0x239c6833],0xffffffcf
  413dd8:	ret    0x8d93
  413ddb:	in     al,dx
  413ddc:	sbb    ebp,esi
  413dde:	hlt    
  413ddf:	or     dl,ah
  413de1:	sbb    ecx,ebx
  413de3:	jmp    0xf0cf:0x2e54113b
  413dea:	hlt    
  413deb:	sub    ch,BYTE PTR [ecx+0x2d]
  413dee:	adc    al,0x4c
  413df0:	mov    fs:0xbc76df10,al
  413df6:	cmp    al,0x86
  413df8:	adc    al,0x4d
  413dfa:	jae    0x413e55
  413dfc:	gs and al,0x38
  413dff:	shl    BYTE PTR [eax-0x80],0x5e
  413e03:	data16 (bad) 
  413e05:	mov    edi,0xb96548df
  413e0a:	ret    
  413e0b:	dec    ecx
  413e0c:	jmp    FWORD PTR [edx-0x74b1e795]
  413e12:	mov    cl,0x51
  413e14:	adc    ebx,DWORD PTR [eax]
  413e16:	fwait
  413e17:	pop    ss
  413e18:	mov    edx,0xe22e7702
  413e1d:	push   esi
  413e1e:	retf   
  413e1f:	cmp    eax,0xb5b4caad
  413e24:	mov    ecx,0x2db71241
  413e29:	dec    ebx
  413e2a:	dec    edi
  413e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e2c:	xchg   DWORD PTR es:[ebx+esi*4-0x58132ff0],ebx
  413e34:	or     ebp,ebx
  413e36:	mov    esp,0xe370a302
  413e3b:	test   eax,0x95395537
  413e40:	test   ch,al
  413e42:	sub    ebx,DWORD PTR [edi]
  413e44:	ss dec ebp
  413e46:	ficom  WORD PTR [ebx-0x4d28c1dd]
  413e4c:	addr16 lock mov bh,0x4a
  413e50:	daa    
  413e51:	and    eax,0x3ffc1faa
  413e56:	mov    eax,ebp
  413e58:	mov    eax,ds:0xad5073b4
  413e5d:	jbe    0x413eb6
  413e5f:	out    0xb0,eax
  413e61:	push   ss
  413e62:	sar    BYTE PTR [ecx],cl
  413e64:	fst    DWORD PTR [ecx]
  413e66:	sub    DWORD PTR [edx],edi
  413e68:	out    dx,eax
  413e69:	add    edi,ebp
  413e6b:	mov    ds:0x14650bf3,al
  413e70:	repz in al,0xf0
  413e73:	push   0x24e0b0b6
  413e78:	sbb    DWORD PTR [esi-0x29],ecx
  413e7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e7c:	mov    WORD PTR [ebx-0x68],cs
  413e7f:	cld    
  413e80:	pushf  
  413e81:	test   al,0x93
  413e83:	leave  
  413e84:	sub    dl,BYTE PTR [ebx-0x4f]
  413e87:	gs mov al,0xe1
  413e8a:	lods   al,BYTE PTR ds:[esi]
  413e8b:	cli    
  413e8c:	mov    ebx,0x78b11464
  413e91:	mov    bh,0x6
  413e93:	icebp  
  413e94:	and    BYTE PTR [ebp+0x59],dl
  413e97:	lea    eax,[eax+0x72583e23]
  413e9d:	fstp   DWORD PTR [ecx+0x4181e30f]
  413ea3:	fsub   QWORD PTR [esi]
  413ea5:	jbe    0x413ec0
  413ea7:	(bad)  
  413ea8:	push   esi
  413ea9:	pop    DWORD PTR [ebx+esi*1]
  413eac:	xor    al,0xc5
  413eae:	fsub   DWORD PTR ds:0x2fde091b
  413eb4:	xchg   ebp,eax
  413eb5:	push   ss
  413eb6:	xor    BYTE PTR [ebx+ebx*1-0x328c66da],bh
  413ebd:	mov    edx,0xc26cf1bd
  413ec2:	in     al,0x35
  413ec4:	mov    bh,0x2f
  413ec6:	xchg   ebp,eax
  413ec7:	das    
  413ec8:	scas   al,BYTE PTR es:[edi]
  413ec9:	jne    0x413ef7
  413ecb:	add    eax,0xbfdb134d
  413ed0:	lock jl 0x413e5c
  413ed3:	int    0x5f
  413ed5:	sar    esi,1
  413ed7:	dec    edx
  413ed8:	jno    0x413ea6
  413eda:	lea    esp,[edx+0x7d]
  413edd:	push   0x40
  413edf:	xchg   ebx,eax
  413ee0:	dec    esi
  413ee1:	(bad)  
  413ee3:	xor    eax,0xec7d0ec7
  413ee8:	scas   al,BYTE PTR es:[edi]
  413ee9:	mov    esi,0x9e9e33df
  413eee:	out    0x2f,eax
  413ef0:	cs xchg edx,eax
  413ef2:	sahf   
  413ef3:	cdq    
  413ef4:	clts   
  413ef6:	jae    0x413ef2
  413ef8:	cdq    
  413ef9:	sbb    bl,dl
  413efb:	ins    BYTE PTR es:[edi],dx
  413efc:	mov    bl,BYTE PTR [ebp-0x1c299847]
  413f02:	sbb    ecx,DWORD PTR [ebp+0x6f617059]
  413f08:	dec    esp
  413f09:	push   ebp
  413f0a:	cmp    bl,BYTE PTR [edi+0x35]
  413f0d:	outs   dx,DWORD PTR ds:[esi]
  413f0e:	stos   DWORD PTR es:[edi],eax
  413f0f:	test   DWORD PTR [eax+0x53],0xeaaaf082
  413f16:	push   cs
  413f17:	nop
  413f18:	lods   eax,DWORD PTR ds:[esi]
  413f19:	(bad)  
  413f1a:	sbb    bh,bl
  413f1c:	cdq    
  413f1d:	xor    al,0x7d
  413f1f:	sub    al,0x46
  413f21:	jns    0x413f84
  413f23:	mov    dl,ch
  413f25:	js     0x413f8e
  413f27:	adc    bh,BYTE PTR [edx-0x115330b9]
  413f2d:	cld    
  413f2e:	adc    BYTE PTR [eax+edi*8-0x6b],dh
  413f32:	fwait
  413f33:	xchg   ebx,eax
  413f34:	add    DWORD PTR [esi],esp
  413f36:	xor    eax,0x9c68ad46
  413f3b:	(bad)  
  413f3c:	or     esi,DWORD PTR [edx-0x46124908]
  413f42:	and    al,0x4c
  413f44:	sub    eax,0xb1b9439a
  413f49:	lea    ebx,[edi]
  413f4b:	mov    edi,0xd59eecc1
  413f50:	outs   dx,DWORD PTR ds:[esi]
  413f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f52:	xchg   ecx,eax
  413f53:	jbe    0x413f04
  413f55:	shl    DWORD PTR [eax+0x32],1
  413f58:	lods   eax,DWORD PTR ds:[esi]
  413f59:	pop    ecx
  413f5a:	int3   
  413f5b:	inc    edi
  413f5c:	xchg   esp,eax
  413f5d:	or     dl,BYTE PTR [edi+0x3f962c1d]
  413f63:	sbb    edi,ebp
  413f65:	ds (bad) 
  413f67:	cmp    ah,BYTE PTR [edx]
  413f69:	in     eax,dx
  413f6a:	cmp    al,0x70
  413f6c:	or     BYTE PTR [ebx+esi*4-0x7d],bl
  413f70:	scas   al,BYTE PTR es:[edi]
  413f71:	dec    ebp
  413f72:	inc    ebp
  413f73:	fsub   st,st(2)
  413f75:	retf   
  413f76:	fs and eax,0x7dcd0b76
  413f7c:	jns    0x413f1b
  413f7e:	rcr    ebx,1
  413f80:	mov    eax,0xd31c973a
  413f85:	push   0x30c2cedb
  413f8a:	fcmovu st,st(0)
  413f8c:	call   0x98be:0x3cce607d
  413f93:	pushf  
  413f94:	sbb    ebx,DWORD PTR ss:[eax]
  413f97:	in     al,0x5f
  413f99:	dec    ebx
  413f9a:	pushf  
  413f9b:	add    eax,0x78b2f0df
  413fa0:	pop    edi
  413fa1:	sbb    cl,bl
  413fa3:	fidiv  WORD PTR [edx+0x76]
  413fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fa7:	bound  esi,QWORD PTR [ecx-0x6f41d6a1]
  413fad:	xor    eax,0x9336b3ea
  413fb2:	jo     0x413fa8
  413fb4:	rcl    DWORD PTR [edi],0xa4
  413fb7:	jmp    DWORD PTR [ebx]
  413fb9:	inc    edx
  413fba:	dec    edx
  413fbb:	stos   BYTE PTR es:[edi],al
  413fbc:	ret    
  413fbd:	sbb    eax,0xd0a180a0
  413fc2:	(bad)  
  413fc4:	arpl   WORD PTR [ebx],sp
  413fc6:	sbb    dl,BYTE PTR [esi-0x67]
  413fc9:	sbb    ebp,edi
  413fcb:	push   0xffffffe6
  413fcd:	jp     0x413f9b
  413fcf:	jl     0x413fbe
  413fd1:	or     al,BYTE PTR [ebx+0x50]
  413fd4:	push   0x49
  413fd6:	data16 jl 0x414032
  413fd9:	xchg   edx,eax
  413fda:	mov    edx,0x2c01bb1
  413fdf:	adc    BYTE PTR [eax-0x3d],al
  413fe2:	sub    esp,DWORD PTR [eax-0x8]
  413fe5:	ret    0xa15f
  413fe8:	jge    0x413fa8
  413fea:	mov    ah,0xd2
  413fec:	pop    esp
  413fed:	fsub   QWORD PTR [esi]
  413fef:	lock sahf 
  413ff1:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  413ff3:	inc    ecx
  413ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ff5:	(bad)  
  413ff6:	dec    esp
  413ff7:	loopne 0x413fbe
  413ff9:	mov    al,0xa
  413ffb:	and    ecx,eax
  413ffd:	xchg   esp,eax
  413ffe:	nop
  413fff:	arpl   ax,cx
  414001:	in     eax,0xef
  414003:	das    
  414004:	cli    
  414005:	push   0x8384870c
  41400a:	lods   al,BYTE PTR ds:[esi]
  41400b:	push   edx
  41400c:	in     eax,0x11
  41400e:	into   
  41400f:	sub    esp,DWORD PTR [ebx]
  414011:	and    eax,DWORD PTR [ebx+0x66]
  414014:	jg     0x41400d
  414016:	push   edx
  414017:	mov    dh,0x2d
  414019:	or     esp,edx
  41401b:	pop    ds
  41401c:	jns    0x41404b
  41401e:	inc    eax
  41401f:	sbb    eax,0x589de097
  414024:	into   
  414025:	mov    WORD PTR [ebx-0x3c],ss
  414028:	mov    ebx,0x963adf09
  41402d:	stc    
  41402e:	and    al,0x65
  414030:	jmp    0x41406c
  414032:	lods   eax,DWORD PTR ds:[esi]
  414033:	cmp    al,cl
  414035:	inc    ecx
  414036:	imul   ecx,DWORD PTR [ebx-0x2b0c82d],0xffffff98
  41403d:	lds    ebp,FWORD PTR [ecx-0x41]
  414040:	xchg   ebx,eax
  414041:	inc    ebp
  414042:	xor    DWORD PTR [ecx+0x6c4de71f],esi
  414048:	or     DWORD PTR [ebx],edx
  41404a:	ins    DWORD PTR es:[di],dx
  41404c:	inc    DWORD PTR [eax+0x7b7ed132]
  414052:	cwde   
  414053:	leave  
  414054:	inc    ebp
  414055:	ror    BYTE PTR [esi-0x1e1d4b8e],0x15
  41405c:	dec    ebx
  41405d:	in     eax,dx
  41405e:	and    DWORD PTR [edi+0x69],edx
  414061:	adc    BYTE PTR [edx],cl
  414063:	(bad)  
  414064:	sti    
  414065:	fsub   DWORD PTR [ebp+ebp*8+0x37]
  414069:	retf   
  41406a:	push   edi
  41406b:	add    ah,dl
  41406d:	pop    ebp
  41406e:	add    ah,BYTE PTR [eax+0x5f]
  414071:	imul   eax,DWORD PTR [edi+edx*8],0xffffff85
  414075:	mov    esi,0xbfc95f63
  41407a:	cmp    eax,eax
  41407c:	pop    esp
  41407d:	pop    esi
  41407f:	shl    BYTE PTR [ebx],0xe9
  414082:	repz dec edx
  414084:	das    
  414085:	mov    esp,0x8cac22c
  41408a:	cwde   
  41408b:	mov    bh,0x6d
  41408d:	pop    esp
  41408e:	sbb    ebp,DWORD PTR [ebx]
  414090:	in     al,0xe2
  414092:	lds    esi,FWORD PTR gs:[ebx+0x78]
  414096:	shl    ebx,cl
  414098:	sar    ebp,cl
  41409a:	lods   al,BYTE PTR ds:[esi]
  41409b:	(bad)  
  41409c:	out    dx,eax
  41409d:	add    BYTE PTR [edi+ebp*1+0x6059ad62],0xdb
  4140a5:	aas    
  4140a6:	popa   
  4140a7:	jae    0x4140b9
  4140a9:	popf   
  4140aa:	xchg   DWORD PTR [ebx],edx
  4140ac:	jmp    0xda88:0xf366544e
  4140b3:	clc    
  4140b4:	imul   edx,DWORD PTR [edx+esi*1],0x6701ff58
  4140bb:	ins    BYTE PTR es:[edi],dx
  4140bc:	loope  0x414099
  4140be:	mov    BYTE PTR [ebp-0x34fb1c00],ch
  4140c4:	jmp    0x7f9d:0x8444633e
  4140cb:	inc    ebx
  4140cc:	push   cs
  4140cd:	repnz and BYTE PTR [edx],ch
  4140d0:	cli    
  4140d1:	or     eax,0xdbb4e9c0
  4140d6:	or     ah,BYTE PTR [edi]
  4140d8:	in     al,dx
  4140d9:	jmp    0x4140d4
  4140db:	adc    al,0x93
  4140dd:	(bad)  
  4140de:	push   esp
  4140df:	xor    DWORD PTR [ebp+0x7b],ebp
  4140e2:	pop    ecx
  4140e3:	xor    BYTE PTR [ecx-0x12897711],ch
  4140e9:	in     al,0x9a
  4140eb:	pop    ds
  4140ec:	fstp   QWORD PTR [edi+ebx*1+0x58d8d638]
  4140f3:	sbb    BYTE PTR [ecx-0x66],0xe9
  4140f7:	xchg   DWORD PTR [esi-0x43],ecx
  4140fa:	fwait
  4140fb:	repnz sub eax,0x699ace49
  414101:	sub    eax,0x2a226de
  414106:	sub    ah,dh
  414108:	add    BYTE PTR [esi-0x757d140c],cl
  41410e:	mov    eax,0x4922ad20
  414113:	and    BYTE PTR [edi+0xf7e2631],al
  414119:	nop
  41411a:	(bad)  
  41411b:	out    0x91,al
  41411d:	cmp    al,0x9c
  41411f:	out    dx,eax
  414120:	clc    
  414121:	sar    BYTE PTR [eax+eiz*8+0xe819651],cl
  414128:	(bad)  
  414129:	in     al,0x68
  41412b:	retf   0x627f
  41412e:	add    ecx,ebp
  414130:	into   
  414131:	or     eax,0x9f04bd46
  414136:	mov    ds:0xd575ad60,eax
  41413b:	fbstp  TBYTE PTR [ebp+0x5f91d5e5]
  414141:	outs   dx,BYTE PTR ds:[esi]
  414142:	out    dx,al
  414143:	mov    eax,ds:0x1cfac0aa
  414148:	inc    ecx
  414149:	(bad)  
  41414a:	xor    ch,dh
  41414c:	or     ch,ah
  41414e:	out    0xdd,al
  414150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414151:	fwait
  414152:	jb     0x4141c7
  414154:	fcomi  st,st(5)
  414156:	iret   
  414157:	xor    BYTE PTR [ebx],al
  414159:	jnp    0x41411b
  41415b:	or     dh,dh
  41415d:	dec    edx
  41415e:	dec    edx
  41415f:	sub    eax,0x850b5b76
  414164:	call   0x4a2c:0x3ecb2165
  41416b:	xchg   ebx,eax
  41416c:	jmp    0x203c:0x22484c49
  414173:	jae    0x4141f4
  414175:	adc    al,0x0
  414177:	jo     0x4141b2
  414179:	cdq    
  41417a:	add    DWORD PTR [ecx],edi
  41417c:	or     BYTE PTR [eax+ebx*2-0x271c4c49],bl
  414183:	repnz xchg esp,eax
  414185:	scas   eax,DWORD PTR es:[edi]
  414186:	pop    esi
  414187:	sub    ebp,edx
  414189:	in     eax,dx
  41418a:	(bad)
  41418f:	sub    eax,0xdf35d556
  414194:	in     eax,dx
  414195:	jge    0x4141d1
  414197:	bound  esi,QWORD PTR [esi]
  414199:	call   0x8f2249eb
  41419e:	jno    0x41418a
  4141a0:	sbb    bh,BYTE PTR [edi]
  4141a2:	push   cs
  4141a3:	lods   al,BYTE PTR ds:[esi]
  4141a4:	dec    esp
  4141a5:	or     DWORD PTR [edi+edx*1-0x2d9adb66],ebx
  4141ac:	jmp    0x5cfba55a
  4141b1:	mov    edi,0xe2f177f7
  4141b6:	sbb    eax,0x28ec00e5
  4141bb:	data16 or al,0x94
  4141be:	push   ds
  4141bf:	popa   
  4141c0:	mov    eax,0xa83f79ac
  4141c5:	lea    ebp,ds:0xd752e366
  4141cb:	sub    bh,BYTE PTR [ecx-0x76de767c]
  4141d1:	xchg   esi,eax
  4141d2:	out    dx,al
  4141d3:	mov    edx,0x507a0841
  4141d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141d9:	and    al,0x2c
  4141db:	lahf   
  4141dc:	fnstenv [ecx+0x46]
  4141df:	mov    cl,0xc0
  4141e1:	mov    dh,0xc4
  4141e3:	cli    
  4141e4:	push   0xffffff91
  4141e6:	push   esp
  4141e7:	cmp    eax,0x93af68f6
  4141ec:	mov    dh,0x76
  4141ef:	rol    DWORD PTR [esi],1
  4141f1:	xor    DWORD PTR [ecx-0x3d],edi
  4141f4:	mov    eax,0xcee40780
  4141f9:	adc    BYTE PTR [edx+0x6d],cl
  4141fc:	loopne 0x4141bd
  4141fe:	ja     0x4141fa
  414200:	rol    edi,cl
  414202:	add    dh,BYTE PTR [ebx+ecx*4+0x105f9c3]
  414209:	cli    
  41420a:	jo     0x4141a0
  41420c:	or     bl,BYTE PTR [edx-0x3f389845]
  414212:	sbb    bl,BYTE PTR [eax]
  414214:	stos   DWORD PTR es:[edi],eax
  414215:	jo     0x4141c2
  414217:	jmp    0x414254
  414219:	adc    al,0x7f
  41421b:	pop    edx
  41421c:	adc    al,0x6e
  41421e:	adc    BYTE PTR [edx-0x57],dh
  414221:	push   0xfffffffb
  414223:	bound  edi,QWORD PTR gs:0x532adc5a
  41422a:	lods   al,BYTE PTR ds:[esi]
  41422b:	or     bl,BYTE PTR gs:[eax+0x7c68868d]
  414232:	stos   BYTE PTR es:[edi],al
  414233:	lods   al,BYTE PTR ds:[esi]
  414234:	das    
  414235:	sar    DWORD PTR [ecx+0x4],cl
  414238:	and    DWORD PTR [edx+0xd0a2286],eax
  41423e:	out    dx,eax
  41423f:	mov    ds:0x9bc29b73,al
  414244:	nop
  414245:	or     cl,BYTE PTR [ecx+0x4e99d646]
  41424b:	hlt    
  41424c:	repnz loope 0x414276
  41424f:	jae    0x414258
  414251:	cmp    DWORD PTR [eax-0x1d],esp
  414254:	and    ebp,eax
  414256:	xchg   ebp,eax
  414257:	(bad)  
  414258:	sahf   
  414259:	mov    ebx,0xadd28596
  41425e:	xchg   ebp,eax
  41425f:	lock stos BYTE PTR es:[edi],al
  414261:	add    ebx,DWORD PTR [ebx+esi*1]
  414264:	scas   al,BYTE PTR es:[edi]
  414265:	cli    
  414266:	adc    al,0x7f
  414268:	aad    0x7e
  41426a:	aas    
  41426b:	enter  0x57af,0xf2
  41426f:	and    BYTE PTR [ebp+0x55ed5b1c],0xaf
  414276:	xchg   BYTE PTR [ebp+0x1d82e1f2],ah
  41427c:	mov    BYTE PTR [ebx+0x65],cl
  41427f:	mov    edi,0x89cde16e
  414284:	dec    ebx
  414285:	xchg   BYTE PTR [edx],ch
  414287:	sbb    bl,BYTE PTR [edx]
  414289:	sub    ch,BYTE PTR [eax+0x5c]
  41428c:	(bad)  
  41428d:	mov    edi,0x97d8465
  414292:	xor    eax,0x271645c6
  414297:	adc    al,0xe2
  414299:	jmp    0xd5407a
  41429e:	xor    edi,DWORD PTR [ecx+esi*8+0x5f5bb8aa]
  4142a5:	cld    
  4142a6:	inc    esi
  4142a7:	pop    ecx
  4142a8:	push   cs
  4142a9:	xor    BYTE PTR [ecx+edi*1-0x65],0xc4
  4142ae:	xchg   esi,eax
  4142af:	std    
  4142b0:	xchg   DWORD PTR [esi-0x23d9e460],esp
  4142b6:	arpl   WORD PTR [ebp+eax*2-0x1e],di
  4142ba:	jmp    0x414245
  4142bc:	imul   ecx,DWORD PTR [esi+0x41],0x4c596278
  4142c3:	ret    0x279d
  4142c6:	adc    eax,0xf3d01033
  4142cb:	ins    BYTE PTR es:[edi],dx
  4142cc:	xor    al,0xac
  4142ce:	jmp    0xf276:0x9e356d00
  4142d5:	repz inc esi
  4142d7:	fwait
  4142d8:	repnz loopne 0x41427b
  4142db:	dec    edi
  4142dc:	shl    ebp,0x93
  4142df:	fild   QWORD PTR [ebx]
  4142e1:	push   0xffffffb5
  4142e3:	sbb    al,0x7d
  4142e6:	ror    BYTE PTR [esi+eiz*8],cl
  4142e9:	rol    esi,cl
  4142eb:	ret    0x6c33
  4142ee:	ss clc 
  4142f0:	dec    edx
  4142f1:	bound  eax,QWORD PTR [eax]
  4142f3:	dec    eax
  4142f4:	fwait
  4142f5:	or     eax,0xea449dd4
  4142fa:	maskmovq mm0,(bad)
  4142fb:	test   DWORD PTR [ebx+0x6e552249],0xaa3a4bb1
  414305:	pop    edi
  414306:	loop   0x414356
  414308:	inc    ebx
  414309:	mov    ebx,DWORD PTR [eax+0x6d]
  41430c:	and    al,0xc6
  41430e:	scas   eax,DWORD PTR es:[edi]
  41430f:	xor    eax,DWORD PTR [esi+0x4cdba4a3]
  414315:	gs xchg esi,eax
  414317:	and    BYTE PTR [edx-0x5222fc6d],ch
  41431d:	(bad)  
  41431e:	xchg   esi,eax
  41431f:	fidiv  WORD PTR [esi]
  414321:	push   0x807712ed
  414326:	xchg   DWORD PTR [ebx+0x36],ecx
  414329:	pushf  
  41432a:	pop    edx
  41432b:	pop    ds
  41432c:	jle    0x4142e5
  41432e:	out    dx,al
  41432f:	push   ss
  414330:	mov    ebx,0x5b4cdfb8
  414335:	sub    dh,BYTE PTR [esi]
  414337:	(bad)  
  414338:	mov    ebx,0xf9c7c069
  41433d:	pop    edx
  41433e:	cmp    esi,edi
  414340:	loope  0x41430d
  414342:	sub    al,0x6c
  414344:	int    0xc4
  414346:	adc    eax,0x7560ab9d
  41434b:	xor    ch,ch
  41434d:	(bad)  [eax]
  41434f:	aam    0xa5
  414351:	imul   edx,DWORD PTR [ecx],0x51eead0a
  414357:	jmp    0x4142f2
  414359:	add    al,0x6f
  41435b:	sub    DWORD PTR [ebx+0x1dfff100],edx
  414361:	jp     0x414347
  414363:	arpl   WORD PTR [edi+0x3ef23c3],bx
  414369:	jbe    0x4143c0
  41436b:	inc    esp
  41436c:	mov    eax,ds:0xd1600b5a
  414371:	cmp    esi,DWORD PTR ds:0x786f6253
  414377:	cld    
  414378:	cmp    eax,0x16882761
  41437d:	daa    
  41437e:	xchg   BYTE PTR [ecx-0x6b437a8c],al
  414384:	test   DWORD PTR [ebx+0x52b910e8],esi
  41438a:	inc    ebp
  41438b:	cmc    
  41438c:	repz add bl,bl
  41438f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414390:	xor    al,0x55
  414392:	jle    0x4143de
  414394:	add    al,0x43
  414396:	call   0x40b4:0x2b821a9e
  41439d:	rcr    BYTE PTR [edi+0xe],cl
  4143a0:	dec    esi
  4143a1:	(bad)  
  4143a2:	pop    ss
  4143a3:	mov    WORD PTR [edx+ecx*2+0x54],ss
  4143a7:	shl    BYTE PTR [ebp+0x59e85913],0xc3
  4143ae:	fsubr  QWORD PTR [esi+0x26]
  4143b1:	xchg   edi,eax
  4143b2:	faddp  st(3),st
  4143b4:	(bad)  
  4143b5:	retf   0xd8f
  4143b8:	push   es
  4143b9:	sub    al,0xb8
  4143bb:	jecxz  0x414372
  4143bd:	pop    es
  4143be:	adc    edx,DWORD PTR [ebp-0x2d]
  4143c1:	fldz   
  4143c3:	inc    ebx
  4143c4:	mov    eax,ds:0x99dc67ea
  4143c9:	fild   QWORD PTR [edi+0x38]
  4143cc:	pusha  
  4143cd:	xchg   ecx,eax
  4143ce:	cmc    
  4143cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143d0:	retf   0x27e7
  4143d3:	xchg   edx,eax
  4143d4:	fst    QWORD PTR [esi-0x75]
  4143d7:	jl     0x414433
  4143d9:	or     al,0xa7
  4143db:	push   0xffffffdc
  4143dd:	jmp    0x9b79:0xb8121140
  4143e4:	cmp    al,0xb4
  4143e6:	jg     0x414442
  4143e8:	pop    edx
  4143e9:	pop    edi
  4143ea:	sub    BYTE PTR [eax-0x1f],bh
  4143ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143ee:	mov    dl,0x2e
  4143f0:	dec    edi
  4143f1:	xlat   BYTE PTR ds:[ebx]
  4143f2:	setne  BYTE PTR [esi]
  4143f5:	jne    0x41437e
  4143f7:	sub    ebp,DWORD PTR [edi]
  4143f9:	push   esi
  4143fa:	enter  0x53db,0xc3
  4143fe:	sbb    edx,DWORD PTR [eax+edx*1+0xe]
  414402:	dec    eax
  414403:	jle    0x41440d
  414405:	add    BYTE PTR [esi],al
  414407:	cld    
  414408:	fxch   st(5)
  41440a:	nop
  41440b:	and    edi,esi
  41440d:	in     eax,dx
  41440e:	mov    bh,0xa7
  414410:	sbb    DWORD PTR [ebx+0xc],edi
  414413:	inc    edx
  414414:	push   0x58a5f73f
  414419:	push   esp
  41441a:	dec    eax
  41441b:	mov    ecx,cs
  41441d:	fld    TBYTE PTR [edx-0x66da2fa7]
  414423:	dec    edx
  414424:	aam    0x7d
  414426:	jmp    0xc3b9:0x55b86a6b
  41442d:	daa    
  41442e:	push   eax
  41442f:	das    
  414430:	lods   eax,DWORD PTR ds:[esi]
  414431:	imul   ebx,DWORD PTR [eax],0x27
  414434:	clc    
  414435:	mov    ch,0x11
  414437:	pop    esp
  414438:	push   esi
  414439:	mov    BYTE PTR [edi+esi*4-0x6e4f8680],0xf5
  414441:	(bad)  
  414442:	cdq    
  414443:	jbe    0x414438
  414445:	mov    edx,0xa55a702b
  41444a:	jmp    0x41440a
  41444c:	iret   
  41444d:	int    0x80
  41444f:	dec    ebx
  414450:	(bad)  
  414451:	retf   0xa972
  414454:	adc    BYTE PTR [ebx-0x49],dl
  414457:	or     eax,0xe6a927
  41445c:	xor    bl,BYTE PTR [ebx-0x21739b2e]
  414462:	popf   
  414463:	rol    DWORD PTR [ebx+0x3c],cl
  414466:	enter  0x59bf,0xc5
  41446a:	retf   
  41446b:	(bad)  
  41446c:	shl    BYTE PTR [edx],cl
  41446e:	push   ds
  41446f:	xchg   edi,eax
  414470:	out    dx,eax
  414471:	add    al,0xc5
  414473:	push   ecx
  414474:	and    BYTE PTR gs:[esi+0x10],dl
  414478:	mov    cl,0xb7
  41447a:	push   0x4e
  41447c:	dec    ebp
  41447d:	retf   
  41447e:	les    esp,FWORD PTR ds:0x86b92177
  414484:	iret   
  414485:	and    ecx,DWORD PTR ds:0x66e9d3ee
  41448b:	bound  esp,QWORD PTR [esi+eiz*8]
  41448e:	inc    edx
  41448f:	pop    edi
  414490:	cld    
  414491:	push   ds
  414492:	fidivr WORD PTR [ecx]
  414494:	and    al,0x7e
  414496:	mov    ?,WORD PTR [esp+esi*4]
  414499:	push   ebx
  41449a:	xchg   edi,eax
  41449b:	add    esi,DWORD PTR [esp+eax*2]
  41449e:	ins    DWORD PTR es:[edi],dx
  41449f:	jp     0x41443b
  4144a1:	and    al,0x39
  4144a3:	das    
  4144a4:	rcr    BYTE PTR [edx-0x9],1
  4144a7:	lds    esi,FWORD PTR [ecx-0x5f7d1964]
  4144ad:	dec    eax
  4144ae:	jnp    0x4144e8
  4144b0:	and    eax,0x972d2edf
  4144b5:	retf   0x436e
  4144b8:	fnstcw WORD PTR [edx+0x24c123eb]
  4144be:	xchg   edx,eax
  4144bf:	adc    ebx,esi
  4144c1:	lock in eax,0x13
  4144c4:	out    dx,al
  4144c5:	add    al,0x75
  4144c7:	test   eax,0x77e17305
  4144cc:	mov    esi,0xda9955ff
  4144d1:	cmp    edx,DWORD PTR [eax]
  4144d3:	jae    0x4144f2
  4144d5:	sahf   
  4144d6:	xchg   ebp,eax
  4144d7:	push   0xff0afd28
  4144dc:	adc    eax,0x26bd9601
  4144e1:	bound  ecx,QWORD PTR [ebp-0x3a]
  4144e4:	adc    eax,0x3d013fea
  4144e9:	jns    0x4144a0
  4144eb:	fadd   QWORD PTR [ecx+0x17]
  4144ee:	cmp    edx,DWORD PTR [edx]
  4144f0:	div    BYTE PTR [edi]
  4144f2:	pop    esp
  4144f3:	fadd   QWORD PTR gs:[ebp+0x14750fb5]
  4144fa:	out    0x21,al
  4144fc:	or     BYTE PTR [ebx-0x3c],0x4e
  414500:	out    dx,al
  414501:	(bad)
  414504:	inc    bl
  414506:	inc    ebx
  414507:	jmp    0x9e63:0x17cf4746
  41450e:	dec    eax
  414510:	mov    bh,0xfa
  414512:	and    BYTE PTR [ebp+0x60aa99bb],0xf0
  414519:	lods   eax,DWORD PTR ds:[esi]
  41451a:	xlat   BYTE PTR ds:[ebx]
  41451b:	xor    eax,0x74b9ad0f
  414520:	dec    edx
  414521:	sbb    esi,DWORD PTR [ebp+0x18f45d3a]
  414527:	cli    
  414528:	aaa    
  414529:	pavgb  mm5,QWORD PTR ds:0x42004a9e
  414530:	or     al,0xda
  414532:	mov    al,ds:0xdd0e0b43
  414537:	sti    
  414538:	or     eax,0xcf45441b
  41453d:	mov    esi,0xdef042e2
  414542:	js     0x4144d3
  414544:	pop    edx
  414545:	mul    cl
  414547:	test   al,0x3a
  414549:	scas   eax,DWORD PTR es:[edi]
  41454a:	cmovge ebx,esp
  41454d:	pushf  
  41454e:	fsqrt  
  414550:	sti    
  414551:	repnz or al,0x65
  414554:	inc    esi
  414555:	mov    ds:0x5390d08d,eax
  41455a:	or     ecx,DWORD PTR [ecx+ecx*4+0x78]
  41455e:	(bad)  
  414560:	inc    eax
  414561:	push   esi
  414562:	adc    al,0x67
  414564:	out    0xed,eax
  414566:	mov    ebp,0x37814bc8
  41456b:	pop    ds
  41456c:	or     ch,BYTE PTR [ecx-0x32f945f8]
  414572:	sahf   
  414573:	lock pushf 
  414575:	pushw  0x746
  414579:	dec    ebx
  41457a:	mov    ch,0xad
  41457c:	inc    ebp
  41457d:	int    0xd5
  41457f:	cli    
  414580:	pop    ecx
  414581:	xor    eax,0xfb784384
  414586:	jb     0x41451b
  414588:	mov    dl,0xba
  41458a:	call   0x1a63d94
  41458f:	jle    0x41454f
  414591:	dec    eax
  414592:	imul   BYTE PTR [eax]
  414594:	cmp    ah,BYTE PTR [edx-0x48de214b]
  41459a:	loope  0x414530
  41459c:	sbb    al,0x55
  41459e:	pop    es
  41459f:	out    dx,eax
  4145a0:	aas    
  4145a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145a2:	out    dx,eax
  4145a3:	adc    esp,esp
  4145a5:	jo     0x4145c5
  4145a7:	sub    BYTE PTR [edx-0x58],ah
  4145aa:	std    
  4145ab:	lods   eax,DWORD PTR ds:[esi]
  4145ac:	pusha  
  4145ad:	xor    edx,DWORD PTR [eax]
  4145af:	test   BYTE PTR [ebx+edi*8],0x24
  4145b3:	push   ecx
  4145b4:	pop    ebp
  4145b5:	add    BYTE PTR [ecx],ch
  4145b7:	test   DWORD PTR [esi-0x27f46c37],ebp
  4145bd:	jns    0x4145a9
  4145bf:	mov    fs,WORD PTR [edi]
  4145c1:	and    eax,0x6c62e094
  4145c6:	mov    esp,0x1b5a20e2
  4145cb:	hlt    
  4145cc:	(bad)  
  4145cd:	int3   
  4145ce:	shr    esi,1
  4145d0:	sbb    edi,DWORD PTR [edi]
  4145d2:	push   esp
  4145d3:	fdiv   DWORD PTR [esi+0x307e783e]
  4145d9:	inc    esp
  4145da:	ins    BYTE PTR es:[edi],dx
  4145db:	mov    al,0x87
  4145dd:	icebp  
  4145de:	mov    ch,0x1a
  4145e0:	popf   
  4145e1:	mov    al,ds:0x9b24decb
  4145e6:	mov    ebx,0x28b3ac56
  4145eb:	sti    
  4145ec:	add    DWORD PTR ss:[edx],0xffffff85
  4145f0:	jne    0x41461a
  4145f2:	pop    ebp
  4145f3:	gs mov ah,0x17
  4145f6:	sub    DWORD PTR [ebp-0x76],ebx
  4145f9:	push   ecx
  4145fa:	(bad)  
  4145fb:	lods   al,BYTE PTR ds:[esi]
  4145fc:	outs   dx,BYTE PTR ds:[esi]
  4145fd:	cmp    dl,cl
  4145ff:	call   0xb20a56e7
  414604:	in     eax,0xa3
  414606:	iret   
  414607:	loope  0x4145c7
  414609:	lds    edx,FWORD PTR [edi]
  41460b:	pop    ecx
  41460c:	jb     0x414592
  41460e:	mov    eax,0x5ae6f67d
  414613:	mov    bh,0x40
  414615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414616:	or     BYTE PTR [ebx*1+0x4512ac2e],dh
  41461d:	das    
  41461e:	bound  ebp,QWORD PTR [edx+0x3379dfe8]
  414624:	in     eax,dx
  414625:	popf   
  414626:	dec    ebp
  414627:	fistp  QWORD PTR [esi]
  414629:	xor    esi,esp
  41462b:	aad    0xc0
  41462d:	rcl    dh,cl
  41462f:	add    dl,BYTE PTR ds:0x9d51c68d
  414635:	sbb    eax,0xf07e1a1
  41463a:	test   al,0xed
  41463c:	fbld   TBYTE PTR [edi]
  41463e:	js     0x41460e
  414640:	adc    ebp,DWORD PTR [edi+0x4b45093b]
  414646:	sbb    eax,eax
  414648:	inc    esp
  414649:	inc    esp
  41464a:	shl    BYTE PTR [esi+0x4652c7d9],1
  414650:	push   esp
  414651:	rcl    ebx,1
  414653:	pop    esi
  414654:	dec    esp
  414655:	dec    ebp
  414656:	lods   eax,DWORD PTR ds:[esi]
  414657:	push   0xffffffb5
  414659:	aad    0xfe
  41465b:	pop    es
  41465c:	out    0xaf,eax
  41465e:	iret   
  41465f:	sahf   
  414660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414661:	in     eax,0x19
  414663:	xor    al,0x99
  414665:	pusha  
  414666:	cmc    
  414667:	dec    ebx
  414668:	mov    dh,0xac
  41466a:	jne    0x4146b6
  41466c:	sar    edx,1
  41466e:	sti    
  41466f:	sbb    al,0x6e
  414671:	and    eax,0x4d48f906
  414676:	hlt    
  414677:	push   eax
  414678:	aaa    
  414679:	cmp    DWORD PTR [ebx+eax*8-0x31c24490],edi
  414680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414681:	dec    edi
  414683:	test   dl,dh
  414685:	sbb    al,0x9e
  414687:	(bad)  
  414688:	lea    eax,[eax-0x7f]
  41468b:	jo     0x4146a0
  41468d:	lea    eax,[esi]
  41468f:	xchg   esi,eax
  414690:	adc    eax,0x7e051ac0
  414695:	dec    ebp
  414696:	ja     0x4146c1
  414698:	ds scas al,BYTE PTR es:[edi]
  41469a:	pop    ss
  41469b:	mov    bh,0xee
  41469d:	push   ss
  41469e:	icebp  
  41469f:	push   eax
  4146a0:	inc    ebp
  4146a1:	and    edx,ebp
  4146a3:	jne    0x414724
  4146a5:	push   cs
  4146a6:	(bad)  
  4146a7:	mov    ds:0x6dfa7cf7,eax
  4146ac:	shr    DWORD PTR [edx-0x3e],0xeb
  4146b0:	mov    edx,0x97ac0299
  4146b5:	sbb    esi,0x3c
  4146b8:	jbe    0x41471c
  4146ba:	xchg   ebx,eax
  4146bb:	ret    0x9495
  4146be:	dec    DWORD PTR [edx+0x22]
  4146c1:	adc    eax,0xf19278c8
  4146c6:	adc    al,BYTE PTR [eax]
  4146c8:	jne    0x414733
  4146ca:	das    
  4146cb:	lds    esp,FWORD PTR [eax+0x34]
  4146ce:	je     0x414724
  4146d0:	lods   eax,DWORD PTR ds:[esi]
  4146d1:	and    edi,ebp
  4146d3:	jb     0x4146c1
  4146d5:	js     0x4146be
  4146d7:	push   esi
  4146d8:	arpl   WORD PTR [edx],bp
  4146da:	add    eax,DWORD PTR [edx+0x665a9f68]
  4146e0:	pop    es
  4146e1:	mov    eax,0xd5be3e8
  4146e6:	jecxz  0x41467f
  4146e8:	mov    ah,0xdf
  4146ea:	or     BYTE PTR [edx],dl
  4146ec:	in     al,0x4f
  4146ee:	sbb    ch,BYTE PTR [ebp+0x56]
  4146f1:	test   BYTE PTR [eax-0x56cbc84d],0x60
  4146f8:	call   0xaf98db2b
  4146fd:	in     al,dx
  4146fe:	sbb    bl,ch
  414700:	pusha  
  414701:	adc    ch,BYTE PTR [esp+edi*4]
  414704:	jb     0x41473d
  414706:	xchg   edi,eax
  414707:	popa   
  414708:	push   eax
  414709:	mov    eax,0x9479cb27
  41470e:	jmp    0xa495:0xe786d053
  414715:	call   0x87cb:0xc2156c16
  41471c:	out    dx,al
  41471d:	sbb    BYTE PTR [ecx+0x7d416231],cl
  414723:	leave  
  414724:	stc    
  414725:	sub    BYTE PTR [esi+0x5d],dh
  414728:	(bad)  
  414729:	cmp    al,0x8c
  41472b:	adc    al,0xf0
  41472d:	es push es
  41472f:	jp     0x41475d
  414731:	call   FWORD PTR [edi]
  414733:	xor    edi,ebx
  414735:	mov    BYTE PTR [edi-0x563e5a6e],al
  41473b:	jmp    0x4146bd
  41473d:	call   FWORD PTR [ecx-0xa]
  414740:	pop    ecx
  414741:	test   al,0x35
  414743:	rol    DWORD PTR [edx+0x6ed87f8e],cl
  414749:	sub    bh,BYTE PTR [ebx+ecx*2-0x6c3130ea]
  414750:	fst    QWORD PTR es:[eax]
  414753:	cdq    
  414754:	or     al,0x2c
  414756:	scas   eax,DWORD PTR es:[edi]
  414757:	sub    edi,DWORD PTR [ebx+0x7c999e12]
  41475d:	or     DWORD PTR [eax+0x3757a2b4],esi
  414763:	cmp    al,0x14
  414765:	cmp    bl,BYTE PTR [esi-0x62]
  414768:	sub    ah,ch
  41476a:	xchg   edx,eax
  41476b:	in     eax,0x71
  41476d:	xor    ch,cl
  41476f:	mov    ah,0x91
  414771:	imul   ebx,ebp,0xcc3a4e52
  414777:	xor    ebp,DWORD PTR [esi-0x18381db4]
  41477d:	pop    ss
  41477e:	cmc    
  41477f:	and    esi,edi
  414781:	sbb    BYTE PTR [edi+0x35a9566c],ah
  414787:	jo     0x4147d8
  414789:	dec    ebp
  41478a:	arpl   WORD PTR [esi-0x22],bx
  41478d:	sbb    BYTE PTR [ebx+0x59141bee],al
  414793:	dec    edi
  414794:	jb     0x4147bd
  414796:	(bad)  
  414797:	lds    edi,FWORD PTR [esi-0x7a]
  41479a:	mov    ds:0x82d0f5e4,eax
  41479f:	fisubr WORD PTR [edi-0x7c106375]
  4147a5:	cmp    esi,DWORD PTR [ecx+ebp*2-0x6db640ca]
  4147ac:	xor    cl,BYTE PTR [edx+0x3eedd528]
  4147b2:	push   esp
  4147b3:	pop    esi
  4147b4:	mov    al,ds:0x9d81579f
  4147b9:	sbb    ch,BYTE PTR ds:0x1936e1d
  4147bf:	pop    eax
  4147c0:	mov    esi,0xfd5248b6
  4147c5:	cdq    
  4147c6:	sbb    edi,DWORD PTR [ebx+0x237ef2f3]
  4147cc:	in     eax,0x88
  4147ce:	mov    esp,0x841e6f8
  4147d3:	fldenv [esi+ebx*1+0x53]
  4147d7:	jmp    0xe110:0xa52ecf9c
  4147de:	mov    eax,0xfd93ef5d
  4147e3:	mov    eax,DWORD PTR [esp+eax*4-0x72]
  4147e7:	mov    bh,0xc0
  4147e9:	sbb    bl,BYTE PTR [ebp-0x3e495509]
  4147ef:	push   ecx
  4147f0:	out    0x7a,eax
  4147f2:	mov    eax,0x94f2a95e
  4147f7:	pop    edi
  4147f8:	fstp   QWORD PTR [eax-0x2c]
  4147fb:	jb     0x41479d
  4147fd:	dec    esi
  4147fe:	adc    esi,0x6a94d116
  414804:	jmp    0xedb8:0xa967a27f
  41480b:	cli    
  41480c:	lods   eax,DWORD PTR ds:[esi]
  41480d:	adc    BYTE PTR [ebx],ch
  41480f:	jo     0x41483e
  414811:	aam    0x70
  414813:	adc    ecx,DWORD PTR [edi]
  414815:	pop    ss
  414816:	aam    0x65
  414818:	lods   eax,DWORD PTR ds:[esi]
  414819:	push   esp
  41481a:	sub    al,0x1
  41481c:	adc    esi,DWORD PTR [esi]
  41481e:	jae    0x414886
  414820:	sub    al,BYTE PTR [edx+0x48]
  414823:	shl    esp,0xfa
  414826:	int    0x56
  414828:	pusha  
  414829:	mov    DWORD PTR ds:[esi],esp
  41482c:	jns    0x4147c0
  41482e:	repz (bad) 
  414830:	stos   DWORD PTR es:[edi],eax
  414831:	shl    DWORD PTR [eax],1
  414833:	sar    edx,cl
  414835:	add    eax,0x1272d00f
  41483a:	lods   al,BYTE PTR ds:[esi]
  41483b:	test   DWORD PTR [esi],0x55c9cb73
  414841:	aam    0xd
  414843:	xor    bl,BYTE PTR [ebp+eax*4-0xdc02fd9]
  41484a:	jb     0x414873
  41484c:	pop    ebp
  41484d:	adc    BYTE PTR [esi+edi*2],0xd8
  414851:	arpl   WORD PTR [ecx+0x5a],si
  414854:	sbb    eax,0xbda78c7a
  414859:	or     BYTE PTR [ebp-0x5df7d6cb],0x1b
  414860:	mov    ds:0x3b1e9ff1,al
  414865:	adc    ecx,esp
  414867:	(bad)  
  414868:	jmp    0x414832
  41486a:	leave  
  41486b:	inc    ecx
  41486c:	je     0x414832
  41486e:	pop    edx
  41486f:	xchg   ebp,eax
  414870:	xchg   esp,eax
  414871:	aam    0xf2
  414873:	jmp    0xe6affef2
  414878:	and    eax,0x2fc33fc6
  41487d:	daa    
  41487e:	mov    esp,0x6af7fb23
  414883:	sbb    edi,ebp
  414885:	inc    esp
  414886:	fs inc esi
  414888:	mov    bh,bl
  41488a:	call   FWORD PTR [edx+0x54]
  41488d:	mov    dl,0x81
  41488f:	cmp    eax,0xcfc3f6c5
  414894:	mov    esp,ebx
  414896:	xchg   esp,eax
  414897:	das    
  414898:	inc    esp
  414899:	ins    DWORD PTR es:[edi],dx
  41489a:	(bad)  
  41489b:	jg     0x414884
  41489d:	mov    al,0xe6
  41489f:	adc    ebx,esi
  4148a1:	sub    DWORD PTR [edx+ebx*2-0x3d],ecx
  4148a5:	icebp  
  4148a6:	mov    ds:0xfbfe680f,eax
  4148ab:	clc    
  4148ac:	pop    edi
  4148ad:	sub    bh,al
  4148af:	test   BYTE PTR [eax+0xa4d097a],0xe5
  4148b6:	ja     0x41490f
  4148b8:	fld    QWORD PTR [edi+0x1d]
  4148bb:	mov    dl,0xe6
  4148bd:	adc    eax,0x6973bb73
  4148c2:	pop    ebp
  4148c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148c4:	(bad)  
  4148c5:	jmp    0x4148f0
  4148c7:	mov    ch,al
  4148c9:	(bad)  
  4148ca:	aad    0x18
  4148cc:	jo     0x414933
  4148ce:	adc    BYTE PTR [edi],bl
  4148d0:	jp     0x41489f
  4148d2:	mov    dl,0xce
  4148d4:	jg     0x4148fb
  4148d6:	dec    edx
  4148d7:	not    BYTE PTR [edx]
  4148d9:	pop    ebp
  4148da:	or     DWORD PTR ds:0x3a53b12f,edx
  4148e0:	xlat   BYTE PTR ds:[ebx]
  4148e1:	inc    eax
  4148e2:	push   edx
  4148e3:	xor    BYTE PTR [edi+0xc],ch
  4148e6:	pushf  
  4148e7:	aas    
  4148e8:	mov    edx,0xe1ea7219
  4148ed:	cdq    
  4148ee:	mov    ds:0x59489302,eax
  4148f3:	nop
  4148f4:	push   esp
  4148f5:	mov    DWORD PTR [esi-0x112b97e3],edx
  4148fb:	jg     0x4148ec
  4148fd:	cli    
  4148fe:	stc    
  4148ff:	cmp    edi,DWORD PTR [esi+0x24]
  414902:	jo     0x4148a9
  414904:	or     al,0x6b
  414906:	sub    ch,0xc2
  414909:	sub    al,0xfb
  41490b:	xor    eax,0xc6a64595
  414910:	sub    DWORD PTR [edx-0x28615c5d],edi
  414916:	mov    gs,WORD PTR [esi]
  414918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414919:	sub    eax,0xb234874a
  41491e:	mov    dh,0x8b
  414920:	mov    esp,0x3cd6376a
  414925:	pop    ebp
  414926:	and    eax,0xc9239fa2
  41492b:	jp     0x414980
  41492d:	push   ebp
  41492e:	push   eax
  41492f:	aaa    
  414930:	add    al,0xcb
  414932:	inc    esp
  414933:	jbe    0x414992
  414935:	mov    cl,0x98
  414937:	(bad)  
  414939:	sub    ecx,edi
  41493b:	gs scas al,BYTE PTR es:[edi]
  41493d:	cmp    al,BYTE PTR [ecx-0x2b]
  414940:	mov    ch,0xa3
  414942:	fwait
  414943:	int3   
  414944:	jle    0x4148e7
  414946:	stos   DWORD PTR es:[edi],eax
  414947:	into   
  414948:	push   ecx
  414949:	das    
  41494a:	jmp    0x414927
  41494c:	stc    
  41494d:	cdq    
  41494e:	sbb    al,0x22
  414950:	mov    DWORD PTR [edx-0x53f150ff],0x64495f15
  41495a:	sbb    DWORD PTR [edx-0x4d60114f],edx
  414960:	cmp    eax,0x9a28be08
  414965:	icebp  
  414966:	nop
  414967:	mov    bl,0xdd
  414969:	imul   ecx,DWORD PTR [ecx-0x56],0xadb17e2a
  414970:	xor    BYTE PTR [esi+0xe],0xc
  414974:	fbstp  TBYTE PTR [edx]
  414976:	dec    esp
  414977:	xchg   edx,eax
  414978:	in     eax,dx
  414979:	scas   al,BYTE PTR es:[edi]
  41497a:	in     eax,0xb1
  41497c:	es (bad) 
  41497e:	xor    eax,0x64972767
  414983:	inc    edi
  414984:	scas   al,BYTE PTR es:[edi]
  414985:	fld    QWORD PTR [esi-0x77]
  414988:	sub    eax,DWORD PTR [ebx+ebp*8-0x42f6ed4f]
  41498f:	pusha  
  414990:	sub    DWORD PTR [ebx+ebp*1],ecx
  414993:	cmp    DWORD PTR [eax+0x37],0x3e
  414997:	inc    edi
  414998:	cwde   
  414999:	mov    dl,0x96
  41499b:	jbe    0x4149bc
  41499d:	into   
  41499e:	push   edx
  41499f:	test   DWORD PTR [esi-0x17126afc],ecx
  4149a5:	(bad)  
  4149a6:	sub    bh,ch
  4149a8:	cdq    
  4149a9:	mov    edx,0xa856b0e6
  4149af:	(bad)  
  4149b1:	sub    al,0x1c
  4149b3:	shr    edx,cl
  4149b5:	pop    esp
  4149b6:	dec    edi
  4149b7:	stos   DWORD PTR es:[edi],eax
  4149b8:	outs   dx,BYTE PTR ds:[esi]
  4149b9:	xchg   edx,eax
  4149ba:	test   eax,0xbc0ab092
  4149bf:	mov    al,0xf4
  4149c1:	sub    BYTE PTR [ecx-0x2da79ca7],cl
  4149c7:	dec    edi
  4149c8:	and    BYTE PTR [ecx+0x4fc007c8],al
  4149ce:	shr    DWORD PTR [ecx+ebx*8+0x6936273a],1
  4149d5:	out    dx,eax
  4149d6:	fmul   QWORD PTR [ebx-0x52]
  4149d9:	and    BYTE PTR [esi+0x4a4b2f8d],0x32
  4149e0:	and    eax,0x558f8c24
  4149e5:	jb     0x4149b0
  4149e7:	data16 (bad) 
  4149e9:	xchg   ebx,eax
  4149ea:	mov    ch,0x8e
  4149ec:	retf   0xf0d6
  4149ef:	dec    ebp
  4149f0:	repz jge 0x41497c
  4149f3:	call   0x60dcd8ca
  4149f8:	icebp  
  4149f9:	sar    DWORD PTR [ecx+ecx*2-0x5f587e1c],cl
  414a00:	mul    BYTE PTR [eax+ecx*2]
  414a03:	xchg   esp,eax
  414a04:	sub    BYTE PTR [ebp+0x4c],0xe1
  414a08:	and    bx,WORD PTR [ebp-0x62]
  414a0c:	sub    ebp,DWORD PTR [eax]
  414a0e:	sub    DWORD PTR [ebp-0x53],ebp
  414a11:	sub    eax,0x32fd7062
  414a16:	xor    BYTE PTR [edi-0x7d],al
  414a19:	loope  0x414a29
  414a1b:	in     al,0xab
  414a1d:	out    0x6b,eax
  414a1f:	adc    eax,0xd831334a
  414a24:	sub    eax,ecx
  414a26:	sbb    ecx,DWORD PTR [eax+0x6f]
  414a29:	fs inc ebp
  414a2b:	scas   eax,DWORD PTR es:[edi]
  414a2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a2d:	jmp    0x4149bf
  414a2f:	sti    
  414a30:	repz add esi,ecx
  414a33:	cmp    ecx,edx
  414a35:	fstp   TBYTE PTR [ebx+0x2f63fd05]
  414a3b:	(bad)  
  414a3c:	in     al,dx
  414a3d:	mov    dl,0x17
  414a3f:	xor    ch,BYTE PTR [edi]
  414a41:	cmp    ecx,DWORD PTR [edi]
  414a43:	shr    BYTE PTR ds:0x412f3461,0x71
  414a4a:	(bad)  
  414a4b:	shl    DWORD PTR [edi],1
  414a4d:	pop    ds
  414a4e:	jl     0x414a50
  414a50:	mov    ah,BYTE PTR [edi]
  414a52:	pop    ds
  414a53:	addr16 jmp 0x414ac7
  414a56:	call   0x7465:0x41714c7c
  414a5d:	push   ebp
  414a5e:	mov    al,ds:0xe49ecd0d
  414a63:	xor    BYTE PTR [ecx+0x628e6529],cl
  414a69:	popa   
  414a6a:	add    al,ah
  414a6c:	xor    BYTE PTR [edi],0xf3
  414a6f:	cwde   
  414a70:	aam    0x1e
  414a72:	repz iret 
  414a74:	or     eax,0x13d26e32
  414a79:	std    
  414a7a:	pop    eax
  414a7b:	sub    ecx,ebp
  414a7d:	fs pop es
  414a7f:	mov    edx,DWORD PTR [eax]
  414a81:	mov    esp,0xe823658c
  414a86:	adc    bl,BYTE PTR [edx-0x18]
  414a89:	rcl    DWORD PTR [edi-0x3217a6dd],1
  414a8f:	mov    al,ds:0x7bb15e1d
  414a94:	sub    DWORD PTR [ebx],ecx
  414a96:	cld    
  414a97:	dec    edi
  414a98:	mov    eax,ds:0xec5854ba
  414a9d:	arpl   ax,bx
  414a9f:	stc    
  414aa0:	stc    
  414aa1:	clc    
  414aa2:	enter  0x62f7,0x3d
  414aa6:	out    0x43,al
  414aa8:	cld    
  414aa9:	pop    ds
  414aaa:	aaa    
  414aab:	or     ebp,DWORD PTR [eax+0x44]
  414aae:	dec    esi
  414aaf:	in     eax,0xda
  414ab1:	or     eax,0xec074fb9
  414ab6:	cmp    DWORD PTR [edi],edx
  414ab8:	mov    eax,0xfee19302
  414abd:	push   esi
  414abe:	mov    ecx,0x2b1e24ca
  414ac3:	(bad)  
  414ac4:	cdq    
  414ac5:	cwde   
  414ac6:	mov    ebp,0x244ed5ba
  414acb:	push   edx
  414acc:	add    esi,ecx
  414ace:	mov    esp,esp
  414ad0:	and    eax,0x1560944a
  414ad5:	inc    ecx
  414ad6:	lods   al,BYTE PTR ds:[esi]
  414ad7:	sub    DWORD PTR [ecx-0x32debf19],ebp
  414add:	iret   
  414ade:	shl    BYTE PTR [esi+0x69],cl
  414ae1:	sub    dh,BYTE PTR [edx+0x5d]
  414ae4:	and    ch,dh
  414ae6:	sbb    al,0x4b
  414ae8:	in     eax,dx
  414ae9:	hlt    
  414aea:	sahf   
  414aeb:	arpl   WORD PTR [edi-0x5184a68c],sp
  414af1:	push   0x3f747841
  414af6:	add    al,0xae
  414af8:	ins    BYTE PTR es:[edi],dx
  414af9:	cs ins DWORD PTR es:[edi],dx
  414afb:	pop    ebx
  414afc:	jge    0x414b12
  414afe:	pop    eax
  414aff:	xchg   esp,eax
  414b00:	sbb    cl,ah
  414b02:	mul    ebp
  414b04:	mov    cl,0x47
  414b06:	push   es
  414b07:	cmp    bl,BYTE PTR [edx+0x1a]
  414b0a:	outs   dx,BYTE PTR ds:[esi]
  414b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b0c:	dec    esi
  414b0d:	call   0xf612:0xf932081f
  414b14:	test   BYTE PTR ss:[ecx-0x4],ch
  414b18:	repz inc ebx
  414b1a:	sti    
  414b1b:	cmp    al,0x4b
  414b1d:	inc    edx
  414b1e:	adc    eax,0x1a1bc057
  414b23:	and    cl,BYTE PTR [edi+0x35122767]
  414b29:	or     dh,BYTE PTR [ebp-0x3a]
  414b2c:	add    eax,0xd58b1143
  414b31:	loopne 0x414b9b
  414b33:	mov    ds:0xed666def,eax
  414b38:	jge    0x414b7b
  414b3a:	mov    esi,0x332d879f
  414b3f:	mov    al,ds:0x27eb35e0
  414b44:	sahf   
  414b45:	aam    0x55
  414b47:	xchg   ebp,eax
  414b48:	mov    edx,0x1bd9455a
  414b4d:	add    al,BYTE PTR [ebp+0x519c9361]
  414b53:	(bad)  
  414b54:	mov    ch,0xb2
  414b56:	push   cs
  414b57:	lahf   
  414b58:	pop    ds
  414b59:	push   ecx
  414b5a:	push   edi
  414b5b:	fwait
  414b5c:	jnp    0x414bd9
  414b5e:	lds    ecx,FWORD PTR ss:[ebx-0x46]
  414b62:	adc    BYTE PTR [bp+si],bl
  414b65:	push   edi
  414b66:	push   cs
  414b67:	cld    
  414b68:	lods   eax,DWORD PTR ds:[esi]
  414b69:	(bad)  
  414b6a:	or     eax,0x8c0994ef
  414b6f:	sub    BYTE PTR [eax],0x12
  414b72:	pop    es
  414b73:	dec    ebx
  414b74:	or     DWORD PTR [ebp+0xef945e3],edx
  414b7a:	scas   al,BYTE PTR es:[edi]
  414b7b:	or     BYTE PTR [esi+0x59c49b16],bh
  414b81:	out    dx,eax
  414b82:	fdivr  DWORD PTR [edi+0x607d2651]
  414b88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b89:	xchg   ecx,eax
  414b8a:	mov    ecx,0xe9c3eaa4
  414b8f:	adc    esi,DWORD PTR [esi+0x49691b87]
  414b95:	sbb    ebx,ebx
  414b97:	loop   0x414c16
  414b99:	enter  0xdcf,0x61
  414b9d:	mov    ecx,0xbece70c1
  414ba2:	repnz aad 0x3a
  414ba5:	xor    ah,al
  414ba7:	push   esi
  414ba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ba9:	add    eax,0x35281020
  414bae:	dec    esi
  414baf:	cmp    DWORD PTR [ebx],ebx
  414bb1:	iret   
  414bb2:	pop    ebx
  414bb3:	pop    esp
  414bb4:	or     DWORD PTR [eax-0x7ce290d2],0x77a56b62
  414bbe:	out    dx,eax
  414bbf:	test   eax,0x2ec3e06b
  414bc4:	aas    
  414bc5:	pop    ecx
  414bc6:	mov    eax,ds:0x830b41b6
  414bcb:	jnp    0x414bfc
  414bcd:	and    al,0x6
  414bcf:	and    eax,esp
  414bd1:	lea    ebx,[eax]
  414bd3:	ret    0x34ed
  414bd6:	ja     0x414c47
  414bd8:	(bad)  
  414bda:	lahf   
  414bdb:	mov    ds:0x192064e5,al
  414be0:	xchg   ebp,eax
  414be1:	jb     0x414bbe
  414be3:	(bad)  
  414be4:	daa    
  414be5:	lahf   
  414be6:	dec    ebp
  414be7:	ins    BYTE PTR es:[edi],dx
  414be8:	mov    eax,0x8d35d9b
  414bed:	fwait
  414bee:	pop    ebx
  414bef:	nop
  414bf0:	pop    ds
  414bf1:	fwait
  414bf2:	ss arpl si,si
  414bf5:	test   eax,0x7aa1c78a
  414bfa:	jg     0x414bd0
  414bfc:	sbb    dl,BYTE PTR [esi]
  414bfe:	mov    DWORD PTR [eax+eax*8+0x41],esp
  414c02:	sub    ch,BYTE PTR [ecx-0x46eeb0e8]
  414c08:	cld    
  414c09:	aas    
  414c0a:	adc    DWORD PTR [esi+0x28],0xbcb807c6
  414c11:	pop    ebx
  414c12:	popa   
  414c13:	push   edi
  414c14:	mov    DWORD PTR [ecx-0x1d],ebp
  414c17:	jns    0x414c4b
  414c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c1a:	jae    0x414ba9
  414c1c:	mov    al,bl
  414c1e:	inc    ecx
  414c1f:	lods   eax,DWORD PTR ds:[esi]
  414c20:	adc    al,0x6c
  414c22:	std    
  414c23:	add    ecx,0x1b58bbcd
  414c29:	cmp    esp,edx
  414c2b:	jecxz  0x414bba
  414c2d:	nop
  414c2e:	pop    esp
  414c2f:	jle    0x414c86
  414c31:	mov    edx,edi
  414c33:	inc    edi
  414c34:	in     al,0xa
  414c36:	sub    eax,DWORD PTR [edi-0x1e]
  414c39:	ret    0xae85
  414c3c:	mov    al,ds:0x49a0f7b0
  414c41:	adc    BYTE PTR [edi+edx*1+0x62059781],dh
  414c48:	dec    eax
  414c49:	mov    ebp,ecx
  414c4b:	push   esi
  414c4c:	shl    eax,cl
  414c4e:	ret    0xe90d
  414c51:	outs   dx,DWORD PTR ds:[esi]
  414c52:	ret    0x46cb
  414c55:	cmp    cl,BYTE PTR [edi+0x5bfd3764]
  414c5b:	xchg   esi,eax
  414c5c:	icebp  
  414c5d:	rcr    DWORD PTR ds:0xbc80acae,0xdc
  414c64:	cmp    dl,BYTE PTR [ebx]
  414c66:	pusha  
  414c67:	xchg   ebp,eax
  414c68:	rcr    BYTE PTR [ecx-0xe],0x82
  414c6c:	mov    eax,ds:0x5fcc01fe
  414c71:	add    BYTE PTR [edx+0x3e08981c],al
  414c77:	jae    0x414c26
  414c79:	popa   
  414c7a:	mov    gs,WORD PTR [edx-0xc53dce8]
  414c80:	sar    DWORD PTR [ebx-0x186feab2],1
  414c86:	and    ebx,eax
  414c88:	ins    DWORD PTR es:[edi],dx
  414c89:	dec    esi
  414c8a:	stc    
  414c8b:	cmp    dl,BYTE PTR [ebx-0x237f1fdf]
  414c91:	and    al,0x36
  414c93:	(bad)
  414c96:	fidivr DWORD PTR [esi*1+0x128036da]
  414c9d:	jge    0x414cb3
  414c9f:	mov    dl,0xf3
  414ca1:	mov    edi,DWORD PTR cs:[edx-0x4d]
  414ca5:	mov    ch,0x7e
  414ca7:	sahf   
  414ca8:	inc    ecx
  414ca9:	dec    edx
  414caa:	push   0xbc3d28ca
  414caf:	fistp  WORD PTR [eax]
  414cb1:	iret   
  414cb2:	popf   
  414cb3:	sbb    ebx,DWORD PTR [edi-0x7f]
  414cb6:	mov    cl,0xef
  414cb8:	scas   eax,DWORD PTR es:[edi]
  414cb9:	dec    esp
  414cba:	mov    esi,0xf5b17f18
  414cbf:	idiv   DWORD PTR [edx-0x73]
  414cc2:	push   0x3c97565b
  414cc7:	and    eax,DWORD PTR [ebx-0x7]
  414cca:	or     ebx,esp
  414ccc:	mov    ds:0xff78b6c0,al
  414cd1:	shl    DWORD PTR [ebp-0x525f5c21],1
  414cd7:	mov    esi,DWORD PTR ds:0x88da528a
  414cdd:	jmp    0xe21e677d
  414ce2:	int    0x4f
  414ce4:	sub    al,0x6f
  414ce6:	imul   esi,DWORD PTR [edx+0x3c],0x0
  414cea:	pop    eax
  414ceb:	xchg   ecx,eax
  414cec:	or     BYTE PTR [esi-0x4b2458f6],dh
  414cf2:	and    al,0x2d
  414cf4:	push   cs
  414cf5:	jmp    0x6eca:0x935cac75
  414cfc:	(bad)  
  414cfe:	neg    DWORD PTR [eax+0x73b31760]
  414d04:	rcl    DWORD PTR [ecx+ebp*2+0x6f2cbe70],0xb
  414d0c:	add    ch,BYTE PTR [ebp-0x53]
  414d0f:	inc    edx
  414d10:	xor    edi,edx
  414d12:	jnp    0x414cf8
  414d14:	dec    esi
  414d15:	jl     0x414d12
  414d17:	bound  ebx,QWORD PTR [ebx+0x620aee5f]
  414d1d:	dec    eax
  414d1e:	fsub   DWORD PTR [eax-0x593bcb8]
  414d24:	or     DWORD PTR [edx-0x3f],edi
  414d27:	mov    ebx,DWORD PTR [eax-0x1b]
  414d2a:	bound  edx,QWORD PTR [esi-0x5077b6e9]
  414d30:	nop
  414d31:	adc    ch,BYTE PTR [ebx+eiz*4-0x7b36fdf3]
  414d38:	(bad)
  414d3b:	ins    DWORD PTR es:[edi],dx
  414d3c:	add    al,0x97
  414d3e:	cwde   
  414d3f:	aaa    
  414d40:	fnstsw WORD PTR [ebp+0x6c]
  414d43:	xor    edi,DWORD PTR [ebx+0x29]
  414d46:	test   eax,0x1360993d
  414d4b:	mov    edi,0xf67cef8f
  414d50:	mov    al,ds:0xc0d200bd
  414d55:	aaa    
  414d56:	je     0x414d3e
  414d58:	arpl   WORD PTR [eax-0x37],bx
  414d5b:	stos   DWORD PTR es:[edi],eax
  414d5c:	push   cs
  414d5d:	lahf   
  414d5e:	dec    esp
  414d5f:	adc    eax,DWORD PTR [ebp+0x4feac1a5]
  414d65:	gs mov ecx,cs
  414d68:	test   BYTE PTR [ecx],cl
  414d6a:	cwde   
  414d6b:	adc    al,0xf9
  414d6d:	fldenv [esi-0x43]
  414d70:	adc    al,0x79
  414d72:	rcr    DWORD PTR [edx-0x7f83807],cl
  414d78:	test   DWORD PTR [eax+0x2e26caad],edi
  414d7e:	jbe    0x414db3
  414d80:	sbb    al,0xad
  414d82:	movhps xmm4,QWORD PTR [ecx+0x79e90caf]
  414d89:	call   0x8a4f19a8
  414d8e:	sbb    DWORD PTR [edx-0x64],0xabf5ce2f
  414d95:	dec    eax
  414d96:	adc    al,0xb7
  414d98:	mov    ds:0x7ebb1a3a,al
  414d9d:	std    
  414d9e:	loopne 0x414dee
  414da0:	in     eax,0xc9
  414da2:	mov    eax,0xd88ede65
  414da7:	cld    
  414da8:	mov    ds:0x68f21136,al
  414dad:	shr    DWORD PTR [eax],cl
  414daf:	jle    0x414db3
  414db1:	call   0xf4ae:0x4deabdd
  414db8:	call   0x6c6cf4ea
  414dbd:	cmc    
  414dbe:	jnp    0x414d83
  414dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dc1:	nop
  414dc2:	push   ebx
  414dc3:	pop    edx
  414dc4:	adc    DWORD PTR [edi-0x4b],ebx
  414dc7:	mov    ecx,0xb41cc725
  414dcc:	jl     0x414dc9
  414dce:	add    al,0x25
  414dd0:	and    al,0x8c
  414dd2:	jne    0x414e33
  414dd4:	in     eax,dx
  414dd5:	jmp    0x7c8f5534
  414dda:	shl    ch,1
  414ddc:	inc    ecx
  414ddd:	push   cs
  414dde:	adc    al,0xb6
  414de0:	sar    BYTE PTR [esi+0x7b9200ae],1
  414de6:	stos   BYTE PTR es:[edi],al
  414de7:	js     0x414d69
  414de9:	fnstcw WORD PTR [ecx+0x34]
  414dec:	ds push edi
  414dee:	jle    0x414e58
  414df0:	mov    ebp,0x3972d801
  414df5:	mov    ebp,0xc77e9863
  414dfa:	dec    esp
  414dfb:	jmp    0x414dbe
  414dfd:	ret    0x5af7
  414e00:	(bad)  
  414e01:	out    dx,eax
  414e02:	xor    DWORD PTR [esi],ecx
  414e04:	add    eax,0xd0c390a2
  414e09:	push   0xc01cb361
  414e0e:	xchg   esp,eax
  414e0f:	(bad)  
  414e11:	stos   DWORD PTR es:[edi],eax
  414e12:	fimul  DWORD PTR ds:0xcf353f74
  414e18:	jmp    0x9f7f1ed4
  414e1d:	out    dx,al
  414e1e:	dec    esi
  414e1f:	mov    al,ds:0x47b74b9e
  414e24:	repz into 
  414e26:	or     ah,bh
  414e28:	in     al,0xd9
  414e2a:	pop    ds
  414e2b:	call   0x332d:0xdc944b06
  414e32:	cmp    eax,0x3d086538
  414e37:	pop    es
  414e38:	shl    DWORD PTR [esi+0xd8637],0x71
  414e3f:	push   DWORD PTR [eax+ebp*1]
  414e42:	sbb    BYTE PTR [ebp+ecx*4+0x1b],dl
  414e46:	sub    dl,ch
  414e48:	cmp    cl,BYTE PTR [ecx+0x7f64042]
  414e4e:	or     esp,esp
  414e50:	(bad)  {k4}{z}
  414e55:	mov    ds:0x888c0ab1,eax
  414e5a:	inc    ecx
  414e5b:	mov    DWORD PTR [edx-0x12],ebx
  414e5e:	sbb    ecx,esp
  414e60:	pop    edi
  414e61:	dec    ebp
  414e62:	add    eax,0xf3533d9d
  414e67:	mov    eax,ds:0xe3f33f3e
  414e6c:	jnp    0x414ebc
  414e6e:	rcl    BYTE PTR [eax+0x19],1
  414e71:	and    al,0x48
  414e73:	pop    ecx
  414e74:	mov    BYTE PTR [ebx+0x2f],ah
  414e77:	stos   BYTE PTR es:[edi],al
  414e78:	inc    eax
  414e79:	imul   ecx,eax,0x8455bcd9
  414e7f:	adc    edx,DWORD PTR [esi+0x6a470ac4]
  414e85:	cs in  al,0x62
  414e88:	inc    edi
  414e89:	lock add al,0x77
  414e8c:	hlt    
  414e8d:	clc    
  414e8e:	inc    ecx
  414e8f:	add    edi,DWORD PTR [ebx+0x79]
  414e92:	inc    esi
  414e93:	test   DWORD PTR ds:0xd16af626,esp
  414e99:	xor    esp,DWORD PTR [edi-0x5e]
  414e9c:	int    0x2a
  414e9e:	pop    ebx
  414e9f:	gs and al,0xed
  414ea2:	inc    eax
  414ea3:	retf   
  414ea4:	pop    ecx
  414ea5:	mov    al,ds:0x2de56c0a
  414eaa:	sar    DWORD PTR [edx],1
  414eac:	cmp    al,0x3b
  414eae:	rcl    BYTE PTR [edx+0x53],cl
  414eb1:	inc    esp
  414eb2:	mov    bh,0x30
  414eb4:	mov    esp,0x5a4cd27f
  414eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eba:	add    DWORD PTR es:[esi+0x421e2a3b],esp
  414ec1:	mov    dl,0x38
  414ec3:	inc    ebp
  414ec4:	pop    esp
  414ec5:	stos   BYTE PTR es:[edi],al
  414ec6:	and    eax,0xa2fa2ec2
  414ecb:	xchg   ecx,eax
  414ecc:	adc    dh,BYTE PTR [edi+0x41]
  414ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ed0:	in     eax,dx
  414ed1:	xchg   edi,eax
  414ed2:	cld    
  414ed3:	cmp    cl,dh
  414ed5:	les    esi,FWORD PTR [eax]
  414ed7:	sbb    al,0x40
  414ed9:	mov    eax,ds:0xb5d980ff
  414ede:	cs into 
  414ee0:	arpl   bp,si
  414ee2:	cmp    ah,bl
  414ee4:	cmp    cl,BYTE PTR [edx-0x49]
  414ee7:	mov    edx,DWORD PTR [ebx+0x1805f887]
  414eed:	les    esi,FWORD PTR [ecx+0x48]
  414ef0:	sub    ebp,DWORD PTR [ecx-0x465856ac]
  414ef6:	mov    bl,0x95
  414ef8:	ja     0x414e7f
  414efa:	lods   al,BYTE PTR ds:[esi]
  414efb:	mul    BYTE PTR [edx]
  414efd:	(bad)  
  414efe:	cmp    esp,DWORD PTR [edx]
  414f00:	jmp    0x414e97
  414f02:	(bad)  
  414f04:	mov    ds:0x168675e3,eax
  414f09:	jae    0x414f4d
  414f0b:	fwait
  414f0c:	and    BYTE PTR [ebp+0xd65c041],bl
  414f12:	push   0x1f
  414f14:	aas    
  414f15:	inc    edx
  414f16:	sbb    bh,ah
  414f18:	xlat   BYTE PTR ds:[ebx]
  414f19:	sar    edx,1
  414f1b:	xchg   esi,eax
  414f1c:	test   BYTE PTR [eax+0x73866d8d],bl
  414f22:	rol    DWORD PTR [ebx-0x29],cl
  414f25:	mov    ecx,0x3011c6f7
  414f2a:	mov    ds:0x7ff95621,al
  414f2f:	mov    al,0xad
  414f31:	icebp  
  414f32:	ret    0x621f
  414f35:	mov    ah,0x42
  414f37:	(bad)  
  414f38:	dec    ebx
  414f39:	hlt    
  414f3a:	retf   
  414f3b:	retf   0x22b8
  414f3e:	dec    edx
  414f3f:	das    
  414f40:	pushf  
  414f41:	lea    esp,[ebx]
  414f43:	enter  0x3814,0x27
  414f47:	push   0xe7414f1b
  414f4c:	xchg   DWORD PTR [ecx],edi
  414f4e:	mov    WORD PTR [edi-0x70],ds
  414f51:	inc    esp
  414f52:	mov    ds:0xf1174a87,al
  414f57:	adc    eax,DWORD PTR [eax]
  414f59:	mov    al,0x86
  414f5b:	call   0xe40d:0x58055863
  414f62:	mov    ecx,0x144ef5e7
  414f67:	cmp    dh,BYTE PTR [esi]
  414f69:	ret    0x27d0
  414f6c:	jnp    0x414f9c
  414f6e:	inc    ebx
  414f6f:	mov    ebp,DWORD PTR [edi-0x4]
  414f72:	inc    ebp
  414f73:	pop    edx
  414f74:	fisubr WORD PTR [ecx]
  414f76:	stos   DWORD PTR es:[edi],eax
  414f77:	mov    bh,0x57
  414f79:	out    dx,al
  414f7a:	ficomp WORD PTR [edi+0x34]
  414f7d:	lds    edx,FWORD PTR [ebp+0x2bb87f01]
  414f83:	jmp    0x9a5af32f
  414f88:	out    0xf7,al
  414f8a:	xor    DWORD PTR [esi+0x66df42fc],edi
  414f90:	lock out 0x61,eax
  414f93:	pusha  
  414f94:	or     bl,BYTE PTR [ecx+0x3a]
  414f97:	jb     0x414f76
  414f99:	jno    0x414f57
  414f9b:	sar    DWORD PTR [edx],cl
  414f9d:	xor    edx,DWORD PTR [esp+eiz*8]
  414fa0:	ror    BYTE PTR [ecx-0x50f8a7cb],0x2e
  414fa7:	xor    al,0x5e
  414fa9:	rcr    ebp,1
  414fab:	sub    al,0x47
  414fad:	out    dx,al
  414fae:	xlat   BYTE PTR ds:[ebx]
  414faf:	jb     0x414f5a
  414fb1:	in     eax,dx
  414fb2:	inc    ebx
  414fb3:	and    esp,edx
  414fb5:	sub    DWORD PTR [si],edi
  414fb8:	fwait
  414fb9:	xor    ah,BYTE PTR [edi]
  414fbb:	ss into 
  414fbd:	dec    eax
  414fbe:	sub    eax,0x6c745ef9
  414fc3:	sub    edx,edi
  414fc5:	or     BYTE PTR [edi+0x562826a9],ch
  414fcb:	dec    edi
  414fcc:	dec    esi
  414fcd:	out    dx,eax
  414fce:	ret    0xaf9b
  414fd1:	push   ds
  414fd2:	neg    DWORD PTR [eax+0x7]
  414fd5:	ins    BYTE PTR es:[edi],dx
  414fd6:	xchg   esi,eax
  414fd7:	aaa    
  414fd8:	mov    al,ds:0x6776b29c
  414fdd:	xlat   BYTE PTR ds:[ebx]
  414fde:	arpl   bp,bp
  414fe0:	or     dl,ch
  414fe2:	aam    0xc5
  414fe4:	call   FWORD PTR [esi+0x50416075]
  414fea:	std    
  414feb:	xchg   ebx,eax
  414fec:	or     eax,0x790e532d
  414ff1:	inc    edx
  414ff2:	cld    
  414ff3:	cmc    
  414ff4:	and    BYTE PTR fs:[edx],cl
  414ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ff9:	push   ecx
  414ffa:	sbb    al,0xb6
  414ffc:	scas   eax,DWORD PTR es:[edi]
  414ffd:	or     DWORD PTR [ebp+edi*2-0x3],esi
  415001:	pop    es
  415002:	or     al,0x95
  415004:	test   BYTE PTR [ebx+0x5f88ac9a],al
  41500a:	lods   eax,DWORD PTR ds:[esi]
  41500b:	jo     0x41502e
  41500d:	repz loop 0x414f94
  415010:	mov    edi,0xc00d2de4
  415015:	mov    BYTE PTR [ebx+0x21],ch
  415018:	add    esp,DWORD PTR cs:0xb519cff2
  41501f:	sub    esi,edx
  415021:	stc    
  415022:	mov    eax,0x60ab0f98
  415027:	nop
  415028:	push   edi
  415029:	sub    al,0xab
  41502b:	xchg   esi,eax
  41502c:	or     al,0x76
  41502e:	pop    ecx
  41502f:	jmp    0x7db9c50a
  415034:	out    0x1b,eax
  415036:	scas   eax,DWORD PTR es:[edi]
  415037:	inc    esi
  415038:	inc    ebp
  415039:	inc    ebx
  41503a:	cwde   
  41503b:	scas   al,BYTE PTR es:[edi]
  41503c:	push   edx
  41503d:	(bad)
  415040:	icebp  
  415041:	stos   BYTE PTR es:[edi],al
  415042:	retf   
  415043:	dec    eax
  415044:	mov    esp,0x8735cd8
  415049:	xor    al,0x12
  41504b:	jae    0x4150a0
  41504d:	cmp    al,0x5
  41504f:	aam    0x99
  415051:	mov    cl,dl
  415053:	test   edi,ebx
  415055:	or     dh,BYTE PTR [ecx-0x750b7ae9]
  41505b:	mov    WORD PTR [eax+0x7],gs
  41505e:	xchg   esp,eax
  41505f:	sub    DWORD PTR [edx+esi*2],0x26
  415063:	dec    ebx
  415064:	xchg   ecx,eax
  415065:	aad    0xa7
  415067:	test   DWORD PTR [edx+0x63],ebx
  41506a:	sbb    al,0x4f
  41506c:	jl     0x4150ec
  41506e:	dec    ebx
  41506f:	xchg   esi,eax
  415070:	mov    eax,ds:0xe738a77d
  415075:	inc    edx
  415076:	push   0x6f
  415078:	inc    edx
  415079:	mov    BYTE PTR [ebp-0x62],bl
  41507c:	mov    dl,0xd0
  41507e:	rcr    BYTE PTR fs:[ecx-0x4f],1
  415082:	xchg   ebx,eax
  415083:	inc    edx
  415084:	mov    bh,0x4
  415086:	adc    al,0xfc
  415088:	aad    0x60
  41508a:	out    dx,eax
  41508b:	inc    edx
  41508c:	and    eax,0x56179af7
  415091:	jmp    0x4150dd
  415093:	xchg   ebp,eax
  415094:	push   cs
  415095:	jp     0x41509d
  415097:	fwait
  415098:	out    0xd6,eax
  41509a:	out    dx,eax
  41509b:	xor    BYTE PTR [ebp-0x4f376cd7],bh
  4150a1:	xor    BYTE PTR [edi+0x7e],cl
  4150a4:	hlt    
  4150a5:	cmp    ch,ah
  4150a7:	outs   dx,BYTE PTR ds:[esi]
  4150a8:	sub    ah,BYTE PTR [edx+0x23]
  4150ab:	xor    BYTE PTR [ebx],0x55
  4150ae:	popf   
  4150af:	stos   DWORD PTR es:[edi],eax
  4150b0:	icebp  
  4150b1:	mov    esi,0xeeeaae9
  4150b6:	jb     0x415124
  4150b8:	loop   0x415044
  4150ba:	fsubr  DWORD PTR [esi+0x65602f93]
  4150c0:	sete   BYTE PTR [esi-0x2e440105]
  4150c7:	xor    edi,DWORD PTR [ebp+esi*1-0x5d02c143]
  4150ce:	and    eax,0xbebca37c
  4150d3:	add    dh,cl
  4150d5:	std    
  4150d6:	push   ds
  4150d7:	scas   eax,DWORD PTR es:[edi]
  4150d8:	mov    al,0x29
  4150da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150db:	mov    ecx,0xbbb73aff
  4150e0:	xchg   esp,eax
  4150e1:	jb     0x4150ae
  4150e3:	dec    eax
  4150e4:	shr    DWORD PTR ds:0x900c0068,cl
  4150ea:	jge    0x415093
  4150ec:	push   cs
  4150ed:	ss inc ebp
  4150ef:	sub    BYTE PTR [edx-0x708a4223],bl
  4150f5:	fld    DWORD PTR [ecx+0x123c7e18]
  4150fb:	adc    eax,0xeac9a0c4
  415100:	sub    al,0xcb
  415102:	pusha  
  415103:	ins    BYTE PTR es:[edi],dx
  415104:	inc    eax
  415105:	out    0xa1,eax
  415107:	dec    edx
  415108:	daa    
  415109:	xchg   esi,eax
  41510a:	push   ebx
  41510b:	lock mov WORD PTR [edx],gs
  41510e:	call   0x58d:0x809e9fcc
  415115:	clc    
  415116:	or     DWORD PTR [esi+0x19],ecx
  415119:	cmp    DWORD PTR [edx+0x3aa4a51b],edi
  41511f:	add    ecx,DWORD PTR [ecx+0x1b1cbf3a]
  415125:	mov    edx,0x9f363049
  41512a:	mov    esi,0x310100ab
  41512f:	mov    eax,0xdace37d6
  415134:	sub    eax,DWORD PTR [esi+eax*4-0x612dbe46]
  41513b:	dec    esp
  41513c:	xchg   edx,eax
  41513d:	xor    al,0x6c
  41513f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415140:	popa   
  415141:	inc    edx
  415142:	push   esi
  415143:	mov    cl,0xec
  415145:	mov    al,cl
  415147:	pop    ds
  415148:	sahf   
  415149:	and    eax,0xf41847df
  41514e:	xor    eax,DWORD PTR [ebp+0x644eae4b]
  415154:	loop   0x415148
  415156:	cmp    BYTE PTR [ebx+0x5a59f0fa],0xa9
  41515d:	push   es
  41515e:	lods   eax,DWORD PTR ds:[esi]
  41515f:	jnp    0x415146
  415161:	pop    ecx
  415162:	jp     0x415177
  415164:	or     al,0xff
  415166:	pop    esi
  415167:	popa   
  415168:	dec    ebp
  415169:	adc    al,0xab
  41516b:	lahf   
  41516c:	xlat   BYTE PTR ds:[ebx]
  41516d:	dec    esi
  41516e:	cmp    DWORD PTR [ebx],esp
  415170:	mov    esp,es
  415172:	shl    BYTE PTR [edi+0x34],1
  415175:	mov    edi,0x76ea1c77
  41517a:	out    dx,al
  41517b:	loope  0x4151a9
  41517d:	(bad)  
  41517e:	pextrw edi,(bad),0xc5
  415180:	cmp    cl,al
  415182:	inc    eax
  415183:	xor    eax,0xaa437f27
  415188:	repz add bl,al
  41518b:	xor    dl,cl
  41518d:	(bad)  
  41518e:	cli    
  41518f:	stos   BYTE PTR es:[edi],al
  415190:	sbb    edx,ebp
  415192:	scas   eax,DWORD PTR es:[edi]
  415193:	std    
  415194:	xchg   esi,eax
  415195:	pop    es
  415196:	mov    al,ch
  415198:	leave  
  415199:	adc    esp,DWORD PTR [ebx-0x1a6d1efa]
  41519f:	pop    edi
  4151a0:	sub    eax,0x3573524f
  4151a5:	pop    es
  4151a6:	push   ebx
  4151a7:	repz inc ebp
  4151a9:	or     eax,0xf7af1fd6
  4151ae:	shl    BYTE PTR [ebx+0x73],cl
  4151b1:	ss jne 0x41521e
  4151b4:	mov    edi,0xfde3719d
  4151b9:	push   es
  4151ba:	or     ch,BYTE PTR [edi-0xb]
  4151bd:	push   cs
  4151be:	jae    0x415201
  4151c0:	(bad)  
  4151c1:	xor    BYTE PTR [edi],dl
  4151c3:	hlt    
  4151c4:	in     al,0xde
  4151c6:	jl     0x4151e8
  4151c8:	nop
  4151c9:	add    eax,0xe91b4704
  4151ce:	popa   
  4151cf:	je     0x415191
  4151d1:	xchg   ecx,eax
  4151d2:	aas    
  4151d3:	(bad)  
  4151d4:	jg     0x92c795d8
  4151da:	jl     0x415198
  4151dc:	lock cmovp ecx,DWORD PTR [edx+0xe0c2d2e]
  4151e4:	jecxz  0x415219
  4151e6:	pushf  
  4151e7:	and    eax,0xa5a76f73
  4151ec:	and    al,0x83
  4151ee:	xchg   edi,eax
  4151ef:	pop    ebp
  4151f0:	sar    BYTE PTR [ebp-0x48627661],0x87
  4151f7:	in     al,0xe9
  4151f9:	pop    ds
  4151fa:	jmp    0x415245
  4151fc:	inc    esi
  4151fd:	lock push ebp
  4151ff:	test   al,0x57
  415201:	in     al,0x7a
  415203:	lds    edx,FWORD PTR [ebp+0x21]
  415206:	xor    al,BYTE PTR [edi+0x451f6c18]
  41520c:	add    al,0xba
  41520e:	add    ebp,ebp
  415210:	outs   dx,BYTE PTR ds:[esi]
  415211:	ret    0x9010
  415214:	mov    ds:0xc15e47af,eax
  415219:	jae    0x415206
  41521b:	fs ins DWORD PTR es:[edi],dx
  41521d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41521e:	jp     0x415257
  415220:	dec    esp
  415221:	mov    edi,DWORD PTR [edx+eiz*2+0x2b]
  415225:	inc    esi
  415226:	cli    
  415227:	mov    esp,0x1a9b9aca
  41522c:	nop
  41522d:	and    esi,ecx
  41522f:	mov    ch,0xb0
  415231:	ficom  DWORD PTR es:0x8dcbd293
  415238:	mov    cs,WORD PTR [edi]
  41523a:	add    al,0xae
  41523c:	or     DWORD PTR [edx-0x3affcc09],ebx
  415242:	or     ebx,edi
  415244:	pop    ebx
  415245:	pop    edx
  415246:	and    ebp,0xc97f6cf
  41524c:	add    al,al
  41524e:	imul   esp,DWORD PTR [edx],0x75d35453
  415254:	out    dx,eax
  415255:	xor    esi,DWORD PTR ds:0x7fb4cefa
  41525b:	xor    al,0x14
  41525d:	pop    edx
  41525e:	test   bl,bl
  415260:	cwde   
  415261:	mov    dl,0x2d
  415263:	scas   eax,DWORD PTR es:[edi]
  415264:	aaa    
  415265:	in     al,dx
  415266:	sbb    al,0x14
  415268:	fisub  WORD PTR [edx+0x4f202322]
  41526e:	mov    ah,0xc4
  415270:	ret    
  415271:	icebp  
  415272:	lods   eax,DWORD PTR ds:[esi]
  415273:	(bad)  
  415275:	sub    ch,BYTE PTR [ecx-0x22]
  415278:	js     0x415296
  41527a:	inc    esi
  41527b:	mov    ds:0x356e5cc,eax
  415280:	adc    al,0x5a
  415282:	out    0x87,eax
  415284:	mov    ebx,0x55881e35
  415289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41528a:	test   DWORD PTR [eax],ebx
  41528c:	or     al,0x41
  41528e:	rcl    DWORD PTR [ebx-0x74],cl
  415291:	hlt    
  415292:	shr    bl,1
  415294:	in     eax,0x60
  415296:	cmc    
  415297:	xor    eax,0x6a71eb0f
  41529c:	mov    ebp,0x63103b97
  4152a1:	retf   
  4152a2:	sub    DWORD PTR [ebx+ebx*2],esp
  4152a5:	mov    dh,0xc0
  4152a7:	jecxz  0x415310
  4152a9:	jecxz  0x415307
  4152ab:	pop    ds
  4152ac:	sbb    ebx,DWORD PTR [esi]
  4152ae:	push   eax
  4152af:	shl    DWORD PTR [eax+0x799a832c],1
  4152b5:	xchg   ebx,eax
  4152b6:	idiv   DWORD PTR [eax-0xba168e8]
  4152bc:	imul   esi,DWORD PTR [esi-0x5605a29f],0xffffff9a
  4152c3:	scas   eax,DWORD PTR es:[edi]
  4152c4:	jecxz  0x41528e
  4152c6:	cmp    al,0xd6
  4152c8:	xchg   esi,eax
  4152c9:	push   0xffffffe1
  4152cb:	mov    ah,0x55
  4152cd:	sub    al,0xca
  4152cf:	pusha  
  4152d0:	(bad)  
  4152d1:	rcl    DWORD PTR [edi],0xfb
  4152d4:	and    al,al
  4152d6:	inc    ecx
  4152d7:	add    BYTE PTR [ecx-0xf],al
  4152da:	daa    
  4152db:	push   eax
  4152dc:	mov    eax,DWORD PTR [edx-0x10]
  4152df:	mov    esp,0x59dd473c
  4152e4:	mov    bh,bh
  4152e6:	dec    ecx
  4152e7:	adc    cl,BYTE PTR [edi]
  4152e9:	arpl   di,sp
  4152eb:	mov    ah,0xf5
  4152ed:	pop    ebx
  4152ee:	les    ebx,FWORD PTR [ebp+0x7c7ac535]
  4152f4:	out    0x47,al
  4152f6:	aam    0x10
  4152f8:	cmp    eax,DWORD PTR [edi]
  4152fa:	mov    eax,ds:0x56cc8d4a
  4152ff:	or     eax,ebx
  415301:	data16 setbe cl
  415305:	in     al,0x9f
  415307:	push   esp
  415308:	sub    DWORD PTR [ebx+0x425da0ad],esp
  41530e:	ja     0x415349
  415310:	and    bl,bh
  415312:	mov    ebp,cs
  415314:	pop    edi
  415315:	cvtdq2ps xmm3,XMMWORD PTR [ecx+0x56746d65]
  41531c:	fiadd  DWORD PTR [esi]
  41531e:	cmp    eax,DWORD PTR [esi]
  415320:	into   
  415321:	sbb    edx,DWORD PTR [ebx]
  415323:	(bad)  
  415324:	popf   
  415325:	pop    ebp
  415326:	or     ebx,DWORD PTR [esi+0x2cbdd88c]
  41532c:	xchg   edi,eax
  41532d:	test   DWORD PTR [edx+0x21449c06],esp
  415333:	stos   BYTE PTR es:[edi],al
  415334:	inc    ecx
  415335:	mov    WORD PTR [edi+eiz*8-0x2bee386f],fs
  41533c:	loopne 0x4152ff
  41533e:	xor    ebx,0x4dcc32f3
  415344:	or     edi,DWORD PTR [esi]
  415346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415347:	jns    0x415377
  415349:	call   0x994f:0x641bbb3f
  415350:	retf   0x1551
  415353:	mov    ebp,?
  415355:	xchg   edi,eax
  415356:	(bad)  
  415357:	sti    
  415358:	js     0x4152e6
  41535a:	add    eax,0xc8ca4137
  41535f:	outs   dx,BYTE PTR ds:[esi]
  415360:	mov    edx,0x51fe8588
  415365:	outs   dx,BYTE PTR ds:[esi]
  415366:	sub    BYTE PTR [ecx+ebx*4-0x31],0xa4
  41536b:	ss (bad) 
  41536e:	mov    eax,0x6c71ffea
  415373:	inc    ebx
  415374:	(bad)  
  415375:	adc    dl,BYTE PTR [eax]
  415377:	shr    ah,0xc3
  41537a:	pop    eax
  41537b:	adc    BYTE PTR ds:0xf64f37aa,dh
  415381:	mov    gs,WORD PTR [eax-0x9c6e956]
  415387:	pop    ss
  415388:	out    0xcf,al
  41538a:	ja     0x415336
  41538c:	mov    edx,DWORD PTR [ebp+ebx*2-0x35806ef9]
  415393:	push   edi
  415394:	xlat   BYTE PTR ds:[ebx]
  415395:	btc    DWORD PTR [edi+edi*4+0x43],esi
  41539a:	loop   0x4153f6
  41539c:	in     al,dx
  41539d:	add    DWORD PTR [ebx],eax
  41539f:	loopne 0x415386
  4153a1:	push   cs
  4153a2:	jg     0x4153fd
  4153a4:	(bad)  
  4153a5:	ds jle 0x4153c6
  4153a8:	mov    eax,ds:0x70f85eb6
  4153ad:	pop    edx
  4153ae:	xchg   esp,eax
  4153af:	inc    esp
  4153b0:	sub    bl,BYTE PTR [ebx-0x6f]
  4153b3:	jle    0x41534e
  4153b5:	int3   
  4153b6:	xlat   BYTE PTR ds:[ebx]
  4153b7:	ja     0x4153af
  4153b9:	xlat   BYTE PTR ds:[ebx]
  4153ba:	xchg   edi,eax
  4153bb:	adc    dl,dh
  4153bd:	fnstcw WORD PTR [edx+eiz*8-0x8]
  4153c1:	test   DWORD PTR [ebx+edi*8],edi
  4153c4:	imul   edi,DWORD PTR [ebx+0x74],0x78be9e39
  4153cb:	cdq    
  4153cc:	fcmovne st,st(2)
  4153ce:	sahf   
  4153cf:	and    dl,BYTE PTR [esi]
  4153d1:	xchg   esp,eax
  4153d3:	ret    
  4153d4:	mul    DWORD PTR [ebx]
  4153d6:	vcmpss xmm5,xmm5,xmm6,0xd6
  4153db:	push   cs
  4153dc:	dec    ecx
  4153dd:	cmp    cl,BYTE PTR [edi+0x17c53d99]
  4153e3:	mov    ch,0x21
  4153e5:	jmp    0xf806a799
  4153ea:	mov    edi,0x65a2da72
  4153ef:	in     al,0x16
  4153f1:	int    0x2f
  4153f3:	xchg   DWORD PTR [edx-0x6c],edx
  4153f6:	shl    DWORD PTR ds:0xfa62f42c,cl
  4153fc:	mov    ebx,0x9b5a2cfa
  415401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415402:	adc    al,0x76
  415404:	mov    DWORD PTR [ebp+0x1fc164a7],eax
  41540a:	inc    DWORD PTR [ecx+0x4b]
  41540d:	pop    edx
  41540e:	adc    eax,0xeaf0884a
  415413:	sbb    edx,ecx
  415415:	xor    eax,DWORD PTR [ebx+0x4b]
  415418:	push   ecx
  415419:	out    dx,al
  41541a:	inc    ecx
  41541b:	push   eax
  41541c:	js     0x41546c
  41541e:	sar    BYTE PTR [ecx+0x2d1a1f28],cl
  415424:	and    bl,BYTE PTR [ebp-0x2a]
  415427:	xchg   edx,eax
  415428:	popf   
  415429:	push   esp
  41542a:	imul   edx,DWORD PTR [edx-0x408e3223],0xb46afea3
  415434:	(bad)  
  415435:	mov    ?,WORD PTR [edi+ebp*8]
  415438:	fidivr WORD PTR [ebp+0x78]
  41543b:	sub    al,0x96
  41543d:	jle    0x41543b
  41543f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415440:	pop    ebp
  415441:	pop    esp
  415442:	dec    edi
  415443:	sbb    BYTE PTR [esi-0x6a],bl
  415446:	int3   
  415447:	rcr    BYTE PTR [ecx],1
  415449:	int    0x7c
  41544b:	add    al,0xa5
  41544d:	fcomi  st,st(0)
  41544f:	jne    0x4153ea
  415451:	test   eax,0x824eac97
  415456:	pop    es
  415457:	rol    DWORD PTR [ecx+0x1a],0xa1
  41545b:	int3   
  41545c:	enter  0x37ee,0xf
  415460:	xchg   ebp,eax
  415461:	enter  0xca1,0xaa
  415465:	ret    0x2f41
  415468:	push   esi
  415469:	jecxz  0x415491
  41546b:	push   ss
  41546c:	lahf   
  41546d:	test   ch,ch
  41546f:	(bad)  
  415470:	push   esi
  415471:	popf   
  415472:	pop    ds
  415473:	sub    esp,DWORD PTR [eax+0x45]
  415476:	or     bh,BYTE PTR [edx+0x16]
  415479:	std    
  41547a:	sub    dl,dl
  41547c:	and    eax,0xcf211f6
  415481:	je     0x41545d
  415483:	jecxz  0x4154ae
  415485:	mov    edx,0x2da549f0
  41548a:	xor    eax,ebp
  41548c:	add    al,0xd9
  41548e:	loope  0x41545c
  415490:	adc    al,0x2d
  415492:	hlt    
  415493:	adc    ch,al
  415495:	lods   eax,DWORD PTR ds:[esi]
  415496:	pop    ecx
  415497:	push   es
  415498:	push   ecx
  415499:	jp     0x4154ca
  41549b:	in     eax,0x2
  41549d:	mov    al,0x62
  41549f:	sbb    DWORD PTR [edi+0x71],ebx
  4154a2:	cmp    BYTE PTR [edx+edi*8-0x211ff75f],dl
  4154a9:	mov    ?,WORD PTR [ebx+0x2f1f6c90]
  4154af:	and    BYTE PTR [edi-0x2c1bc638],ch
  4154b5:	mov    ds:0x3e6114d2,eax
  4154ba:	pop    ss
  4154bb:	cli    
  4154bc:	mov    ebx,0xb29f4423
  4154c1:	push   0x79
  4154c3:	mov    WORD PTR [edi],?
  4154c5:	stc    
  4154c6:	jae    0x415466
  4154c8:	dec    edi
  4154c9:	cmc    
  4154ca:	jb     0x4154a2
  4154cc:	sbb    BYTE PTR [edi-0x5faa00f1],bl
  4154d2:	daa    
  4154d3:	ret    0xbf8b
  4154d6:	xchg   ebx,eax
  4154d7:	and    DWORD PTR [esi],ecx
  4154d9:	out    dx,al
  4154da:	cdq    
  4154db:	cmp    dh,BYTE PTR ds:0x85a13478
  4154e1:	mov    edx,0xda6153f2
  4154e6:	iret   
  4154e7:	jecxz  0x4154b1
  4154e9:	and    al,0x5d
  4154eb:	mov    eax,0x51a2ec8a
  4154f0:	dec    edx
  4154f1:	int    0x1a
  4154f3:	mov    bl,0xe9
  4154f5:	dec    eax
  4154f6:	push   cs
  4154f7:	out    dx,eax
  4154f8:	scas   al,BYTE PTR es:[edi]
  4154f9:	xor    al,0x2a
  4154fb:	and    ebx,DWORD PTR [eax*4-0x3af1d840]
  415502:	jecxz  0x4154a4
  415504:	mov    ds:0x767404ea,eax
  415509:	mov    dl,0xa2
  41550b:	push   0xa188bbdc
  415510:	sti    
  415511:	adc    ebx,DWORD PTR [ebp+0x31f1ba69]
  415517:	push   ebx
  415518:	pop    esi
  415519:	test   al,0x1c
  41551b:	out    0x9d,eax
  41551d:	sub    edx,edx
  41551f:	(bad)  
  415520:	xor    ebx,edi
  415522:	loope  0x4154f8
  415524:	ss scas al,BYTE PTR es:[edi]
  415526:	icebp  
  415527:	inc    ecx
  415528:	neg    edx
  41552a:	dec    ebx
  41552b:	mov    esi,0x23f11776
  415530:	adc    esi,ebp
  415532:	dec    ecx
  415533:	mov    ebp,0x6fa9ebe4
  415538:	test   edi,edi
  41553a:	pop    esi
  41553b:	push   esp
  41553c:	pop    esi
  41553d:	call   0x4b9a:0x681e961c
  415544:	test   al,0x50
  415546:	dec    edx
  415547:	adc    eax,0xc616f8e3
  41554c:	dec    edx
  41554d:	pop    ss
  41554e:	in     al,dx
  41554f:	fistp  WORD PTR [esi]
  415551:	cld    
  415552:	fwait
  415553:	dec    edx
  415554:	adc    esi,ebp
  415556:	mov    eax,0x4030f534
  41555b:	cmp    eax,0xe02411b0
  415560:	inc    esi
  415561:	loope  0x415524
  415563:	loope  0x415535
  415565:	xchg   edx,eax
  415566:	nop
  415567:	pop    ss
  415568:	xchg   BYTE PTR [ecx+0x1f6c7c22],bl
  41556e:	pusha  
  41556f:	or     al,0x9b
  415571:	jle    0x415545
  415573:	pop    ebp
  415574:	(bad)  
  415575:	aam    0x6a
  415577:	inc    eax
  415578:	in     eax,0x41
  41557a:	call   0x470c:0x6585d3b6
  415581:	adc    DWORD PTR [eax+0x6ff7b4a1],ebx
  415587:	xchg   ebx,eax
  415588:	(bad)  
  415589:	sbb    DWORD PTR [eax+edx*1+0x383b4979],ecx
  415590:	rcr    ah,1
  415592:	jb     0x415586
  415594:	jbe    0x4155be
  415596:	push   esi
  415597:	mov    cl,0x38
  415599:	jg     0x4155ef
  41559b:	sub    BYTE PTR [ebx-0x3f],bh
  41559e:	pop    ss
  41559f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155a0:	stos   BYTE PTR es:[edi],al
  4155a1:	pusha  
  4155a2:	int3   
  4155a3:	shl    eax,cl
  4155a5:	stc    
  4155a6:	in     eax,dx
  4155a7:	or     esi,edx
  4155a9:	in     eax,0xe3
  4155ab:	shl    DWORD PTR [eax+0x3060b07a],1
  4155b1:	call   0x7214:0x794dc218
  4155b8:	fnstcw WORD PTR [esi-0x3b]
  4155bb:	cmp    ebx,DWORD PTR [eax]
  4155bd:	xchg   esi,eax
  4155be:	jecxz  0x415572
  4155c0:	in     eax,0x8c
  4155c2:	dec    ebp
  4155c3:	shl    DWORD PTR [edi+0x482ca682],cl
  4155c9:	cld    
  4155ca:	jp     0x4155d4
  4155cc:	xchg   esi,eax
  4155cd:	sbb    BYTE PTR [ebp+0x1ed2136f],bl
  4155d3:	push   esp
  4155d4:	inc    ebp
  4155d5:	cli    
  4155d6:	sbb    ah,BYTE PTR [esi]
  4155d8:	push   esi
  4155d9:	ret    
  4155da:	adc    al,0x74
  4155dc:	in     al,dx
  4155dd:	fnstcw WORD PTR [eax-0x6ccd9821]
  4155e3:	cmp    BYTE PTR [ecx+0x47],bh
  4155e6:	xchg   edi,eax
  4155e7:	shl    DWORD PTR [ebx-0x37],1
  4155ea:	rcr    BYTE PTR [ecx],0x2f
  4155ed:	push   ecx
  4155ee:	inc    esi
  4155ef:	stos   DWORD PTR es:[edi],eax
  4155f0:	pop    ebx
  4155f1:	or     al,0x3e
  4155f3:	sub    al,0xc8
  4155f5:	neg    DWORD PTR [eax+0x25]
  4155f8:	ja     0x415643
  4155fa:	pop    esp
  4155fb:	scas   eax,DWORD PTR es:[edi]
  4155fc:	dec    edi
  4155fd:	push   edi
  4155fe:	test   BYTE PTR [esi+0x6b6b15c0],ah
  415604:	js     0x41559c
  415606:	rcl    BYTE PTR [esi],cl
  415608:	push   cs
  415609:	and    DWORD PTR [ecx-0x214da85c],edi
  41560f:	in     eax,dx
  415610:	fs inc eax
  415612:	jbe    0x415594
  415614:	not    DWORD PTR [ecx+eiz*2]
  415617:	(bad)  
  415618:	dec    edx
  415619:	mov    esi,DWORD PTR [edx+eax*8]
  41561c:	adc    BYTE PTR [edx],bl
  41561e:	loop   0x415610
  415620:	lahf   
  415621:	lods   al,BYTE PTR ds:[esi]
  415622:	sbb    ch,BYTE PTR [edx-0x4e]
  415625:	mov    dl,0xe7
  415627:	loope  0x415687
  415629:	adc    cl,dl
  41562b:	cli    
  41562c:	pop    esp
  41562d:	scas   al,BYTE PTR es:[edi]
  41562e:	daa    
  41562f:	adc    DWORD PTR [ebx-0x23d04992],ebp
  415635:	nop
  415636:	inc    ebx
  415637:	lods   eax,DWORD PTR ds:[esi]
  415638:	rcr    esi,0x3b
  41563b:	xor    DWORD PTR [ebp+ecx*2-0x71],0xb9fb0a5f
  415643:	or     DWORD PTR [ecx],ebx
  415645:	test   cl,0x45
  415648:	mov    ebp,0x5e17a424
  41564d:	lock outs dx,BYTE PTR ds:[esi]
  41564f:	dec    BYTE PTR [eax]
  415651:	push   edx
  415652:	cs or  DWORD PTR ss:[eax],0xc564df1c
  41565a:	mov    ch,0xf6
  41565c:	sub    BYTE PTR fs:[ebx],cl
  41565f:	in     al,0x13
  415661:	add    dl,BYTE PTR [esi+ebx*1-0x27]
  415665:	out    0x6a,eax
  415667:	pop    eax
  415668:	ja     0x41569c
  41566a:	arpl   WORD PTR [ebp+ecx*1+0x6859dd68],dx
  415671:	push   ebp
  415672:	ja     0x4156ad
  415674:	sub    BYTE PTR [ecx+0x15e79f08],bh
  41567a:	inc    ebp
  41567b:	bound  esi,QWORD PTR [edx]
  41567d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41567e:	cld    
  41567f:	and    bh,bh
  415681:	fwait
  415682:	leave  
  415683:	lods   eax,DWORD PTR ds:[esi]
  415684:	or     al,0x8e
  415686:	push   cs
  415687:	and    ah,BYTE PTR [esi+0x1fab971b]
  41568d:	push   edx
  41568e:	or     eax,0x20b070f5
  415693:	or     DWORD PTR [ebx],edx
  415695:	lahf   
  415696:	xor    eax,0xd78055ed
  41569b:	dec    ebx
  41569c:	outs   dx,DWORD PTR ds:[esi]
  41569d:	cmp    DWORD PTR [ecx+0x6f],edi
  4156a0:	inc    esi
  4156a1:	push   esp
  4156a2:	jo     0x41570e
  4156a4:	lea    esi,[edi-0x64]
  4156a7:	mov    cs,WORD PTR [esi-0x1044e86b]
  4156ad:	mov    ch,bl
  4156af:	jmp    0x87e30a17
  4156b4:	push   esp
  4156b5:	cmp    BYTE PTR [ebx],al
  4156b7:	inc    DWORD PTR [edx]
  4156b9:	add    ecx,DWORD PTR [eax+eax*2+0x6a23ea87]
  4156c0:	icebp  
  4156c1:	sub    DWORD PTR [ecx],esi
  4156c3:	hlt    
  4156c4:	outs   dx,BYTE PTR ds:[esi]
  4156c5:	mov    ecx,0x3dcadb8e
  4156ca:	sbb    eax,esp
  4156cc:	and    eax,0xb625f123
  4156d1:	inc    ebp
  4156d2:	and    eax,0x953ae24a
  4156d7:	jl     0x415684
  4156d9:	pop    ebp
  4156da:	or     al,0xf7
  4156dc:	ret    0xf647
  4156df:	ins    DWORD PTR es:[edi],dx
  4156e0:	sub    BYTE PTR [ecx+0x57],dl
  4156e3:	xchg   edx,eax
  4156e4:	call   0xeffd2053
  4156e9:	mov    edi,0x733c8384
  4156ee:	xor    BYTE PTR [ebp-0xcb9dc17],bl
  4156f4:	adc    al,0xc0
  4156f6:	std    
  4156f7:	iret   
  4156f8:	ret    
  4156f9:	add    ebx,ebx
  4156fb:	addr16 jle 0x4156be
  4156fe:	js     0x415688
  415700:	loope  0x415755
  415702:	add    BYTE PTR [eax],al
  415704:	repnz popw es
  415707:	cwde   
  415708:	pop    ebx
  415709:	stos   DWORD PTR es:[edi],eax
  41570a:	push   ecx
  41570b:	xchg   DWORD PTR [ecx],ebx
  41570d:	jl     0x41572b
  41570f:	push   eax
  415710:	sbb    DWORD PTR [edx],edx
  415712:	outs   dx,DWORD PTR ds:[esi]
  415713:	adc    al,0x23
  415715:	rcl    DWORD PTR [esi+0x74],1
  415718:	out    0x39,eax
  41571a:	aam    0x4d
  41571c:	les    esp,FWORD PTR [ebp+ebp*4-0x38]
  415720:	xor    eax,0xf41ccdb
  415725:	dec    ebx
  415726:	jl     0x415748
  415728:	cmp    esi,edi
  41572a:	and    DWORD PTR [ecx+eiz*2-0x2cabda7e],esp
  415731:	pop    es
  415732:	pop    ecx
  415733:	xchg   ebp,eax
  415734:	pusha  
  415735:	bound  esi,QWORD PTR [edx-0x24]
  415738:	cmp    BYTE PTR [edi],0xbc
  41573b:	cmp    BYTE PTR [ecx+edx*2],ch
  41573e:	ror    DWORD PTR [ebp+0x29664806],0xaf
  415745:	mov    ah,0xe8
  415747:	sbb    eax,0xff93c14b
  41574c:	call   0x859db7c0
  415751:	ss ins BYTE PTR es:[edi],dx
  415753:	std    
  415754:	mov    esi,0x80d1cc6
  415759:	push   0x86a54f4
  41575e:	inc    ebx
  41575f:	push   ebp
  415760:	outs   dx,DWORD PTR ds:[esi]
  415761:	call   0xfcf9:0xb27b32de
  415768:	(bad)  
  415769:	in     eax,0x79
  41576b:	inc    ebp
  41576c:	mov    ebx,0x504393c
  415771:	xlat   BYTE PTR ds:[ebx]
  415772:	int    0x85
  415774:	shr    BYTE PTR [eax-0x23b6a1c],cl
  41577a:	push   ebx
  41577b:	loop   0x415760
  41577d:	mov    ebx,0xb03163a1
  415782:	or     eax,0x5ed053b
  415787:	fadd   st,st(6)
  415789:	push   ds
  41578a:	in     eax,dx
  41578b:	xor    al,dh
  41578d:	and    bh,BYTE PTR [ecx+ecx*1]
  415790:	sbb    bl,dh
  415792:	stos   DWORD PTR es:[edi],eax
  415793:	xchg   ebp,eax
  415794:	ins    BYTE PTR es:[edi],dx
  415795:	mov    dl,BYTE PTR es:[eax]
  415798:	push   ebp
  415799:	pop    ebp
  41579a:	arpl   bp,si
  41579c:	ret    0x8ecb
  41579f:	cmc    
  4157a0:	pop    edi
  4157a1:	pop    ecx
  4157a2:	adc    eax,0xe2228d4e
  4157a7:	push   edi
  4157a8:	sbb    BYTE PTR [edi-0x80],0x97
  4157ac:	dec    esi
  4157ad:	lds    esp,FWORD PTR [eax]
  4157af:	xor    BYTE PTR ds:0x38a28523,0xc3
  4157b6:	neg    BYTE PTR [ebx-0x7d]
  4157b9:	mov    eax,ds:0xe0d1504
  4157be:	cwde   
  4157bf:	dec    esi
  4157c0:	aad    0xae
  4157c2:	xor    eax,0x606e501a
  4157c7:	cmp    BYTE PTR [edi],dh
  4157c9:	push   ebx
  4157ca:	dec    ebp
  4157cb:	mov    cl,0x36
  4157cd:	enter  0x1bc8,0x23
  4157d1:	sbb    eax,0x957700cf
  4157d6:	cmp    al,0xe0
  4157d8:	jg     0x41575b
  4157da:	sbb    DWORD PTR [ebx+0x3e],eax
  4157dd:	pop    esi
  4157de:	push   edx
  4157df:	sub    BYTE PTR [esi],bl
  4157e1:	sbb    DWORD PTR [esi-0x7d],0xb4f8b9d0
  4157e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157e9:	pop    esp
  4157ea:	push   edx
  4157eb:	test   eax,0xd6dff23b
  4157f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157f1:	sbb    al,BYTE PTR [edi+eax*8-0x6814be74]
  4157f8:	outs   dx,BYTE PTR ds:[esi]
  4157f9:	inc    ebx
  4157fa:	fcmovnb st,st(6)
  4157fc:	pop    ecx
  4157fd:	mov    ds:0x3da8dc2,eax
  415802:	int3   
  415803:	xchg   edx,eax
  415804:	ret    
  415805:	data16 in al,dx
  415807:	inc    esp
  415808:	pop    ds
  415809:	and    BYTE PTR [eax-0x4d],bl
  41580c:	mov    bh,0xa5
  41580e:	xor    al,0x6c
  415810:	sbb    BYTE PTR [edx-0x49],ah
  415813:	mov    cl,0x9f
  415815:	je     0x4157af
  415817:	pop    esi
  415818:	cmp    DWORD PTR [ecx],edi
  41581a:	add    eax,0x95375221
  41581f:	cli    
  415820:	or     eax,DWORD PTR [esi+0x57c3cd37]
  415826:	or     BYTE PTR [ecx+0x27232456],ch
  41582c:	push   esi
  41582e:	mov    esi,0x3c8dc5e0
  415833:	ins    BYTE PTR es:[edi],dx
  415834:	adc    al,0xb4
  415836:	iret   
  415837:	imul   edi,DWORD PTR [edx+0x23],0x7f
  41583b:	sub    al,0xde
  41583d:	or     BYTE PTR [ebp+0x346567b0],0x29
  415844:	sahf   
  415845:	(bad)  
  415846:	jge    0x41581f
  415848:	lods   al,BYTE PTR ds:[esi]
  415849:	and    DWORD PTR [edx],ecx
  41584b:	inc    ecx
  41584c:	fdiv   DWORD PTR [edx-0x2494d42]
  415852:	push   ebx
  415853:	clc    
  415854:	lds    ebx,FWORD PTR [eax+0x314adcd1]
  41585a:	pop    es
  41585b:	fwait
  41585c:	aaa    
  41585d:	mov    esi,DWORD PTR [edx+0x476ab2df]
  415863:	and    al,0x82
  415865:	dec    edi
  415866:	xchg   edx,eax
  415867:	mov    al,0x90
  415869:	pop    ebx
  41586a:	aad    0x76
  41586c:	out    dx,al
  41586d:	call   0x78b:0xe9263160
  415874:	pop    ebp
  415875:	sahf   
  415876:	fld    QWORD PTR [ebx-0x64cfc794]
  41587c:	gs out dx,al
  41587e:	shr    BYTE PTR [edi+0x48],0xb2
  415882:	push   edx
  415883:	sbb    DWORD PTR [ecx+0x57],ebp
  415886:	xchg   edx,eax
  415887:	jp     0x4158cf
  415889:	pop    edi
  41588a:	mov    ecx,0xaf7b8ea3
  41588f:	xor    ah,bh
  415891:	xchg   ebx,eax
  415892:	jl     0x415867
  415894:	ror    DWORD PTR [esi+0xc],0x84
  415898:	loop   0x41582e
  41589a:	mov    bh,0xfd
  41589c:	pop    eax
  41589d:	add    BYTE PTR [edi-0x3077811d],cl
  4158a3:	xchg   esi,eax
  4158a4:	inc    ebp
  4158a5:	inc    ebx
  4158a6:	push   ebp
  4158a7:	fild   DWORD PTR [esi]
  4158a9:	jmp    0xf2e8bac
  4158ae:	cli    
  4158af:	mov    ch,0xa9
  4158b1:	xchg   BYTE PTR [eax+edi*1-0xf130b69],bl
  4158b8:	aaa    
  4158b9:	sub    ebx,DWORD PTR [eax]
  4158bb:	xchg   esp,eax
  4158bc:	sbb    eax,0x36f2f5fb
  4158c1:	or     BYTE PTR [ecx+0x37],0x5f
  4158c5:	push   0x2
  4158c7:	and    BYTE PTR [ebp-0x550fa34e],ah
  4158cd:	jle    0x41591e
  4158cf:	pop    ecx
  4158d0:	fldcw  WORD PTR [ecx-0x41d749e3]
  4158d6:	pop    es
  4158d7:	(bad)  
  4158d8:	in     eax,dx
  4158d9:	mov    BYTE PTR [edx+0x55],dl
  4158dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158dd:	lea    esp,[ebp-0x3]
  4158e0:	add    esi,DWORD PTR [eax+0x1424375c]
  4158e6:	jecxz  0x4158a7
  4158e8:	mov    edx,edx
  4158ea:	inc    edx
  4158eb:	mov    bl,0xa4
  4158ed:	add    ah,BYTE PTR [edx]
  4158ef:	mov    DWORD PTR [edx],esi
  4158f1:	cmp    DWORD PTR ds:0xc946a857,esi
  4158f7:	inc    ebp
  4158f8:	pop    ss
  4158f9:	das    
  4158fa:	add    ebp,edi
  4158fc:	push   edi
  4158fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158fe:	push   0x52
  415900:	mov    ecx,0xbe25b21b
  415905:	xchg   esi,eax
  415906:	mov    ds:0xddd3e668,al
  41590b:	mov    ds:0xfa6789d0,eax
  415910:	outs   dx,DWORD PTR ds:[esi]
  415911:	push   ecx
  415912:	out    0xf3,al
  415914:	outs   dx,BYTE PTR ds:[esi]
  415915:	aas    
  415916:	daa    
  415917:	cld    
  415918:	lods   eax,DWORD PTR ds:[esi]
  415919:	inc    ecx
  41591a:	mov    ecx,es
  41591c:	dec    edx
  41591d:	push   es
  41591e:	ds cmc 
  415920:	dec    edx
  415921:	inc    edi
  415922:	mov    bh,0x8d
  415924:	mov    ebx,0xdbded389
  415929:	add    dl,BYTE PTR [esi+0x11]
  41592c:	pop    ecx
  41592d:	or     BYTE PTR [edi+0xc],bh
  415930:	xchg   edi,eax
  415931:	jp     0x4158d8
  415933:	mov    dl,0x8b
  415935:	mov    al,ds:0xa71ce16
  41593a:	adc    eax,0x3613856
  41593f:	mov    ecx,0xea7400a
  415944:	mov    ah,0xf2
  415946:	ins    DWORD PTR es:[edi],dx
  415947:	out    0xc8,al
  415949:	ret    0xbc92
  41594c:	das    
  41594d:	push   0xffffff80
  41594f:	mov    dl,0xd3
  415951:	(bad)  
  415952:	xchg   esp,eax
  415953:	jg     0x41595b
  415955:	imul   ebp,DWORD PTR [edx-0x5b900454],0xffffffb0
  41595c:	test   BYTE PTR [ebx+edx*4+0x2e],0xaf
  415961:	jns    0x415943
  415963:	in     eax,0x9c
  415965:	cmp    BYTE PTR [ebp+0x975dd6d],bh
  41596b:	stc    
  41596c:	(bad)  
  41596d:	pop    esp
  41596e:	inc    ebp
  41596f:	(bad)  
  415971:	stos   BYTE PTR es:[edi],al
  415972:	push   esp
  415973:	jbe    0x4159b7
  415975:	mov    ch,0x2f
  415977:	das    
  415978:	sbb    DWORD PTR [edi-0x344e7fb],esp
  41597e:	push   ebx
  41597f:	pop    edi
  415980:	jmp    0x41b05911
  415985:	pop    edi
  415986:	jno    0x4159c5
  415988:	xor    DWORD PTR [edx+0x14],esp
  41598b:	sbb    edi,ecx
  41598d:	retf   0xfe3b
  415990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415991:	les    ebp,FWORD PTR [edx]
  415993:	push   es
  415994:	jne    0x415a0a
  415996:	fwait
  415997:	jp     0x415944
  415999:	or     WORD PTR cs:[ebp-0x4d3d283b],dx
  4159a1:	pop    ecx
  4159a2:	rcr    ebp,cl
  4159a4:	add    eax,eax
  4159a6:	inc    ecx
  4159a7:	cmp    DWORD PTR [eax+edx*4+0x4df5edd0],esi
  4159ae:	push   esp
  4159af:	je     0x41595f
  4159b1:	inc    esp
  4159b2:	fs pushf 
  4159b4:	xor    al,0xaa
  4159b6:	add    BYTE PTR [ecx-0x14f0d77],al
  4159bc:	sub    al,0xfd
  4159be:	mov    ebx,0xf5bdf313
  4159c3:	aaa    
  4159c4:	sub    bh,BYTE PTR [ecx-0xba5f186]
  4159ca:	push   ds
  4159cb:	sub    eax,0x5457809b
  4159d0:	cdq    
  4159d1:	mov    ds:0xdc418f5e,eax
  4159d6:	aad    0x6d
  4159d8:	(bad)  
  4159d9:	mov    al,0x86
  4159db:	xchg   ecx,eax
  4159dc:	pusha  
  4159dd:	fcmovb st,st(2)
  4159df:	mov    ch,0xf5
  4159e1:	jmp    0x21f7:0x70ad19ad
  4159e8:	and    BYTE PTR [edx+ebx*8],ah
  4159eb:	xchg   ebp,eax
  4159ec:	or     eax,0x87a79273
  4159f1:	mov    ecx,0x369eabda
  4159f6:	pusha  
  4159f7:	iret   
  4159f8:	add    al,0xc
  4159fa:	pop    es
  4159fb:	add    al,0x4e
  4159fd:	push   edi
  4159fe:	cld    
  4159ff:	jl     0x4159b1
  415a01:	and    DWORD PTR [ebp+0x4eefcbb4],ebp
  415a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a08:	mov    ch,0x7e
  415a0a:	add    eax,0x865c1e3a
  415a0f:	rol    DWORD PTR [edi+0xa],cl
  415a12:	cld    
  415a13:	mov    esp,0x620de5c1
  415a18:	jg     0x4159ef
  415a1a:	mov    eax,0x49784335
  415a1f:	and    ebx,DWORD PTR [esp+eiz*4]
  415a22:	cmp    al,cl
  415a24:	jl     0x415a7d
  415a26:	jo     0x415a0a
  415a28:	imul   BYTE PTR [ebp+0x46]
  415a2b:	or     eax,0x9c81595b
  415a30:	adc    DWORD PTR ds:0x9a84e698,edx
  415a36:	sub    BYTE PTR [ebx+0x54],0xa1
  415a3a:	inc    eax
  415a3b:	mov    ecx,0xfd654bd5
  415a40:	jnp    0x415a4a
  415a42:	sub    ah,BYTE PTR [ecx]
  415a44:	jge    0x415a2c
  415a46:	test   bl,ch
  415a48:	rcr    dh,1
  415a4a:	push   ebx
  415a4b:	fsub   st,st(5)
  415a4d:	inc    esp
  415a4e:	jne    0x415a28
  415a50:	shr    dl,cl
  415a52:	add    al,0x5d
  415a54:	mov    al,ds:0x3d9bd194
  415a59:	ss mov ecx,esi
  415a5c:	cld    
  415a5d:	adc    eax,0x48046e37
  415a62:	sub    eax,0xeb4b299f
  415a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a68:	jmp    0xb3e7:0xde33c87
  415a6f:	and    BYTE PTR [eax],0x99
  415a72:	xchg   esp,eax
  415a73:	mov    ch,BYTE PTR [ebp+0x38]
  415a76:	jmp    0x415a14
  415a78:	cli    
  415a79:	sub    bh,0x3c
  415a7c:	dec    esi
  415a7d:	sbb    dh,BYTE PTR [esi-0x7a]
  415a80:	daa    
  415a81:	in     eax,0xba
  415a83:	int    0x9d
  415a85:	jo     0x415a6b
  415a87:	and    BYTE PTR [edi-0x6],bh
  415a8a:	mov    bh,BYTE PTR [edx-0x3cdb612b]
  415a90:	add    al,0xa
  415a93:	(bad)  
  415a95:	add    dl,BYTE PTR ds:0x45f5c22e
  415a9b:	aas    
  415a9c:	fcmove st,st(5)
  415a9e:	lock lds eax,FWORD PTR ds:0xc18e49dd
  415aa5:	sub    BYTE PTR ds:0x84811bab,dl
  415aab:	inc    ebp
  415aac:	je     0x415ae3
  415aae:	cli    
  415aaf:	bound  esp,QWORD PTR [edi+0x2e]
  415ab2:	xchg   edx,eax
  415ab3:	ret    
  415ab4:	adc    eax,0x84d7df28
  415ab9:	sub    cl,BYTE PTR [eax-0x53]
  415abc:	push   esi
  415abd:	mov    eax,ds:0x83c29458
  415ac2:	or     al,0xaa
  415ac4:	jae    0x415ac7
  415ac6:	lods   eax,DWORD PTR ds:[esi]
  415ac7:	jns    0x415b18
  415ac9:	fmul   QWORD PTR [esi]
  415acb:	cmc    
  415acc:	dec    eax
  415acd:	cs lock add eax,0x9b77a0f
  415ad4:	mov    BYTE PTR [edi+eiz*2-0x6f0a9778],ah
  415adb:	shr    edi,0x88
  415ade:	xchg   edi,eax
  415adf:	loop   0x415a65
  415ae1:	in     eax,0xd1
  415ae3:	ins    DWORD PTR es:[edi],dx
  415ae4:	loope  0x415a7f
  415ae6:	imul   ebx,eax,0xc84369a1
  415aec:	jle    0x415b3b
  415aee:	xor    ah,BYTE PTR [ebp+0x560141e9]
  415af4:	dec    BYTE PTR [edx+0xc]
  415af7:	xor    eax,0xedea5b01
  415afc:	mov    esi,0x4fb1a197
  415b01:	ins    DWORD PTR es:[edi],dx
  415b02:	loope  0x415b37
  415b04:	leave  
  415b05:	das    
  415b06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b07:	jno    0x415b17
  415b09:	sar    DWORD PTR [edi-0x43a9fe12],cl
  415b0f:	push   0xfffffffe
  415b11:	and    DWORD PTR [edx-0x4d688df0],eax
  415b17:	jmp    0x415b50
  415b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b1a:	aaa    
  415b1b:	xor    DWORD PTR [esi+esi*8],ebp
  415b1e:	in     al,dx
  415b1f:	pop    edi
  415b20:	or     BYTE PTR [edi+edi*4],dh
  415b23:	adc    eax,0xacf64a8c
  415b28:	mov    eax,0xb69fbb27
  415b2d:	loope  0x415adc
  415b2f:	adc    edi,edx
  415b31:	outs   dx,DWORD PTR ds:[esi]
  415b32:	(bad)  
  415b34:	and    eax,0x77f7be05
  415b39:	fidiv  DWORD PTR [edi-0x369cf64]
  415b3f:	adc    BYTE PTR [ecx-0xb],0x53
  415b43:	pop    ds
  415b44:	push   edi
  415b45:	jbe    0x415b9a
  415b47:	aaa    
  415b48:	retf   0xd6b2
  415b4b:	mov    edi,0xca6b55e1
  415b50:	je     0x415b2a
  415b52:	mov    esp,DWORD PTR [esi+ebp*1+0x40]
  415b56:	repz ja 0x415b1b
  415b59:	mov    ah,0x9b
  415b5b:	jbe    0x415b5a
  415b5d:	aas    
  415b5e:	and    ebp,DWORD PTR [esi-0x5235c27c]
  415b64:	out    dx,eax
  415b65:	retf   
  415b66:	icebp  
  415b67:	aaa    
  415b68:	mov    ds:0xe09c8651,al
  415b6d:	push   ecx
  415b6e:	add    DWORD PTR [ecx+0x50],ebx
  415b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b72:	xchg   DWORD PTR [ebp+0x68ec0e9c],eax
  415b78:	jp     0x415b55
  415b7a:	addr16 pop esp
  415b7c:	pop    esp
  415b7d:	mov    bh,0x33
  415b7f:	fsubr  QWORD PTR [ebp+0x156f6c32]
  415b85:	mov    dh,0xd6
  415b87:	jle    0x415b37
  415b89:	js     0x415b38
  415b8b:	dec    edi
  415b8c:	pop    esi
  415b8d:	xchg   BYTE PTR [edx],cl
  415b8f:	sub    ebp,DWORD PTR [ebp-0x10]
  415b92:	and    al,0xda
  415b94:	pop    ebx
  415b95:	jno    0x415b85
  415b97:	ficom  DWORD PTR [ebp-0x6b62454f]
  415b9d:	jmp    0xceefbf55
  415ba2:	dec    esp
  415ba3:	call   FWORD PTR [ecx]
  415ba5:	in     al,dx
  415ba6:	(bad)  
  415ba7:	mov    eax,ds:0x861c8703
  415bac:	dec    esp
  415bad:	clc    
  415bae:	jecxz  0x415b5a
  415bb0:	mov    al,ds:0x5f6aa053
  415bb5:	outs   dx,DWORD PTR ds:[esi]
  415bb6:	in     eax,0x1c
  415bb8:	jle    0x415b86
  415bba:	jl     0x415c1e
  415bbc:	xor    BYTE PTR [ebx-0x4b],0xc
  415bc0:	add    BYTE PTR [edx],0xb6
  415bc3:	ds push ebx
  415bc5:	std    
  415bc6:	push   esi
  415bc7:	ss repz fs dec esi
  415bcb:	mov    bh,0xbb
  415bcd:	add    ebp,DWORD PTR [edx+0x1d]
  415bd0:	in     al,0xbc
  415bd2:	push   ebx
  415bd3:	mov    bl,0x72
  415bd5:	xor    esi,edi
  415bd7:	loope  0x415b78
  415bd9:	mov    eax,ds:0x90d2f862
  415bde:	int3   
  415bdf:	popf   
  415be0:	daa    
  415be1:	sub    eax,0x772994fc
  415be6:	aam    0xa7
  415be8:	jo     0x415ba5
  415bea:	loopne 0x415b93
  415bec:	scas   al,BYTE PTR es:[edi]
  415bed:	add    esp,DWORD PTR [esi+0x3b]
  415bf0:	cli    
  415bf1:	mov    edi,DWORD PTR [ecx-0x2f]
  415bf4:	stc    
  415bf5:	ret    
  415bf6:	mov    ebx,0x1cae345
  415bfb:	sbb    bl,BYTE PTR [ebp-0x11]
  415bfe:	(bad)  
  415bff:	jmp    0x415bb5
  415c01:	mov    ebp,0xe559a78a
  415c06:	mov    ch,0x87
  415c08:	popf   
  415c09:	ds cmp eax,0xd023a606
  415c0f:	mov    eax,0x6e032c8e
  415c14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c15:	sbb    BYTE PTR [esi-0x3735b218],al
  415c1b:	das    
  415c1c:	cmp    eax,0x4565cb4b
  415c21:	and    eax,0xae08acf1
  415c26:	pop    ecx
  415c27:	dec    eax
  415c28:	es mov dh,0x59
  415c2b:	js     0x415c2d
  415c2d:	add    al,0xe
  415c2f:	imul   esi
  415c31:	inc    eax
  415c32:	jo     0x415c14
  415c34:	fwait
  415c35:	loope  0x415ca2
  415c37:	xor    eax,0xf0d5be60
  415c3c:	clc    
  415c3d:	popf   
  415c3e:	push   eax
  415c3f:	and    dh,BYTE PTR [edx-0x46]
  415c42:	cmp    bh,BYTE PTR [ebp-0x284fd31]
  415c48:	popa   
  415c49:	mov    esp,0x6174e1c7
  415c4e:	or     DWORD PTR [esi-0x37],ebp
  415c51:	sbb    ebp,DWORD PTR [ecx-0x1e7293fc]
  415c57:	int3   
  415c58:	cmp    eax,0x3b10c4a8
  415c5d:	pushf  
  415c5e:	aas    
  415c5f:	sbb    eax,0x8233ca26
  415c64:	mov    DWORD PTR [esi+eiz*4-0x6a],esi
  415c68:	jns    0x415c38
  415c6a:	inc    ebp
  415c6b:	and    ch,ch
  415c6d:	cmp    BYTE PTR [esi+0x6b71f4d6],0xfb
  415c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c75:	fbld   TBYTE PTR [eax+eax*8+0x724bdf38]
  415c7c:	ret    0x6387
  415c7f:	sub    esp,ebx
  415c81:	ins    BYTE PTR es:[edi],dx
  415c82:	mov    WORD PTR [esp+esi*4],ds
  415c85:	xor    ch,al
  415c87:	push   cs
  415c88:	push   esp
  415c89:	or     esi,ecx
  415c8b:	loopne 0x415cd4
  415c8d:	inc    ebx
  415c8e:	fisub  WORD PTR ds:0x1abaf780
  415c94:	ins    BYTE PTR es:[edi],dx
  415c95:	xchg   DWORD PTR [edx+0x55],esi
  415c98:	cmp    BYTE PTR ds:0x2432ce46,bl
  415c9e:	inc    ebp
  415c9f:	mov    dh,0x16
  415ca1:	(bad)  
  415ca2:	and    edi,DWORD PTR [ebp+0x1e]
  415ca5:	in     eax,0xd8
  415ca7:	sub    al,0x1d
  415ca9:	cmp    BYTE PTR [ecx+0x3fea828e],bh
  415caf:	call   0xbbf2:0x930d76f7
  415cb6:	push   ss
  415cb7:	ficomp WORD PTR [esi+ecx*1]
  415cba:	dec    ebx
  415cbb:	aad    0x5e
  415cbd:	ja     0x415cbe
  415cbf:	jnp    0x415c6b
  415cc1:	(bad)  [ebx-0x23]
  415cc4:	stos   BYTE PTR es:[edi],al
  415cc5:	inc    bp
  415cc7:	jbe    0x415d21
  415cc9:	dec    eax
  415cca:	xor    bl,BYTE PTR [ebp-0x4d]
  415ccd:	mov    cl,dh
  415ccf:	jnp    0x415d0b
  415cd1:	xchg   ebp,eax
  415cd2:	mov    edx,0xc4e25e2e
  415cd7:	pop    eax
  415cd8:	and    ch,bh
  415cda:	retf   0x48f4
  415cdd:	jle    0x415cc4
  415cdf:	mov    edx,0x17cbed6c
  415ce4:	mov    ch,0xb2
  415ce6:	loop   0x415d0f
  415ce8:	sub    DWORD PTR [eax-0x4a9bec96],0x956adb40
  415cf2:	sbb    al,0xe3
  415cf4:	or     eax,0x97875dac
  415cf9:	and    al,0x1d
  415cfb:	mov    cs,WORD PTR [ecx]
  415cfd:	imul   esp,DWORD PTR [edx+eiz*8-0x5f82a741],0xffffff95
  415d05:	das    
  415d06:	mov    ebp,0x4d6e82df
  415d0b:	mov    eax,0xd276ac26
  415d10:	sub    DWORD PTR [ebx-0x4d4a81fe],edx
  415d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d17:	das    
  415d18:	pop    ds
  415d19:	popf   
  415d1a:	jne    0x415cb7
  415d1c:	sub    ah,cl
  415d1e:	add    edx,0xe
  415d21:	add    DWORD PTR [ebx-0x53e4235a],ebp
  415d27:	out    dx,eax
  415d28:	call   0xbbc1e40c
  415d2d:	stc    
  415d2e:	and    edi,DWORD PTR [ecx-0x44ee3c78]
  415d34:	sbb    BYTE PTR [edx-0xf],0x6c
  415d38:	sbb    al,BYTE PTR [ebp+0x1f]
  415d3b:	add    al,0xa3
  415d3d:	inc    esp
  415d3e:	in     eax,0xc
  415d40:	push   ecx
  415d41:	dec    eax
  415d42:	sti    
  415d43:	test   DWORD PTR [ecx],ecx
  415d45:	xlat   BYTE PTR ds:[ebx]
  415d46:	retf   
  415d47:	mov    BYTE PTR [ebx-0x2f26f8a9],dl
  415d4d:	test   DWORD PTR ds:0x6a308522,0x7d290630
  415d57:	jns    0x415d3f
  415d59:	jb     0x415db1
  415d5b:	mov    ds:0x36cc5e68,al
  415d60:	arpl   WORD PTR [edi],di
  415d62:	cmp    al,BYTE PTR [ecx+0x48ab3b65]
  415d68:	inc    ebx
  415d69:	inc    ebx
  415d6b:	je     0x415d5a
  415d6d:	pop    ds
  415d6e:	fld    DWORD PTR [ebx+ebx*8]
  415d71:	or     eax,0x16235a47
  415d76:	cmp    DWORD PTR [edi-0x2998fd18],esp
  415d7c:	(bad)  
  415d7d:	lods   al,BYTE PTR ds:[esi]
  415d7e:	add    edi,0x3b
  415d81:	push   0xffffffd5
  415d83:	inc    esp
  415d84:	stos   DWORD PTR es:[edi],eax
  415d85:	xor    BYTE PTR [eax+0x32],dl
  415d88:	add    eax,0x9d177431
  415d8d:	push   ebx
  415d8e:	xor    al,0xa
  415d90:	inc    edx
  415d91:	repz data16 mov bl,0xfa
  415d95:	out    dx,eax
  415d96:	mov    esi,0xc87c510
  415d9b:	sbb    DWORD PTR [edi+0xd],edx
  415d9e:	aas    
  415d9f:	mov    cl,0xa6
  415da1:	mov    bl,0x52
  415da3:	fwait
  415da4:	pop    ss
  415da5:	xor    edi,DWORD PTR [edx-0x6c]
  415da8:	xchg   BYTE PTR [esi-0x56],ah
  415dab:	sub    DWORD PTR [ecx+0x2f6246b3],ebp
  415db1:	mov    BYTE PTR [eax+0x74],bl
  415db4:	jne    0x415e06
  415db6:	test   al,0x3d
  415db8:	adc    eax,ebp
  415dba:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dbc:	popf   
  415dbd:	pusha  
  415dbe:	jmp    0x84d4:0x6b329091
  415dc5:	jl     0x415d93
  415dc7:	sbb    DWORD PTR [ecx+0x14ef3a7a],edi
  415dcd:	mov    ss,WORD PTR [eax]
  415dcf:	daa    
  415dd0:	or     BYTE PTR [edx+0x7f],bl
  415dd3:	dec    ebx
  415dd4:	shl    DWORD PTR [ebp+ebp*1+0x210cee46],0x42
  415ddc:	leave  
  415ddd:	stos   BYTE PTR es:[edi],al
  415dde:	shl    BYTE PTR [ebx-0x69c1e4de],1
  415de4:	leave  
  415de5:	xchg   esi,eax
  415de6:	cmp    cl,BYTE PTR [esi]
  415de8:	stc    
  415de9:	out    dx,al
  415dea:	mov    edi,0x9c0de578
  415def:	mov    al,0x7d
  415df1:	out    dx,eax
  415df2:	(bad)  
  415df3:	mov    DWORD PTR [eax-0x58],ebp
  415df6:	lea    edi,[esi]
  415df8:	add    cl,BYTE PTR [esi-0xa964cad]
  415dfe:	xor    cl,al
  415e00:	adc    DWORD PTR [ebp-0x5c],esi
  415e03:	aad    0x3b
  415e05:	rcl    DWORD PTR [edi+esi*1],1
  415e08:	sub    al,BYTE PTR [eax+0xcd5ae57]
  415e0e:	scas   al,BYTE PTR es:[edi]
  415e0f:	aaa    
  415e10:	add    al,0xc6
  415e12:	add    al,0x12
  415e14:	inc    ecx
  415e15:	popa   
  415e16:	ret    0xf248
  415e19:	outs   dx,BYTE PTR ds:[esi]
  415e1a:	xchg   DWORD PTR [ebx-0x5],esi
  415e1d:	adc    al,0x32
  415e1f:	dec    esp
  415e20:	ftst   
  415e22:	test   DWORD PTR [ecx+0x4d73b1d0],0x68c03a9b
  415e2c:	(bad)  
  415e2d:	retf   
  415e2e:	sbb    DWORD PTR [ebx+0x55],edx
  415e31:	xchg   edi,eax
  415e32:	xor    BYTE PTR [ecx-0x31],0x68
  415e36:	ins    BYTE PTR es:[edi],dx
  415e37:	push   eax
  415e38:	je     0x415e01
  415e3a:	mov    esp,0x30d45abe
  415e3f:	test   DWORD PTR [esi],esp
  415e41:	add    edx,esi
  415e43:	arpl   WORD PTR [ecx],bp
  415e45:	push   ecx
  415e46:	mov    bl,0x4c
  415e48:	jmp    0x46105457
  415e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e4e:	(bad)  [edi+0x1061f456]
  415e54:	pusha  
  415e55:	mov    ecx,0x4c8c413d
  415e5a:	and    DWORD PTR [edi-0x54],ecx
  415e5d:	popa   
  415e5e:	inc    esp
  415e5f:	nop
  415e60:	pop    esp
  415e61:	out    0xae,al
  415e63:	cmp    bl,BYTE PTR [ebx-0x455615b5]
  415e69:	or     BYTE PTR [esi+ebx*8+0xa],0xa
  415e6e:	movups xmm1,XMMWORD PTR [eax-0x2b]
  415e72:	or     DWORD PTR [eax+ecx*1+0xe],edi
  415e76:	data16 mov al,0xc6
  415e79:	jmp    0x415e86
  415e7b:	push   ds
  415e7c:	cmp    dh,BYTE PTR [ecx+0x78]
  415e7f:	cld    
  415e80:	xor    BYTE PTR [eax],dh
  415e82:	dec    esi
  415e83:	inc    ebp
  415e84:	adc    bl,BYTE PTR ds:[ebp-0x20]
  415e88:	add    eax,edi
  415e8a:	mov    edx,0x9da116f5
  415e8f:	add    DWORD PTR ds:0x96f5b7b1,esi
  415e95:	cmp    al,dl
  415e97:	hlt    
  415e98:	(bad)  
  415e99:	sar    BYTE PTR [ebx-0x687eb5b3],1
  415e9f:	adc    edx,edx
  415ea1:	xchg   ebx,eax
  415ea2:	xchg   esp,eax
  415ea3:	sbb    al,0x7f
  415ea5:	cdq    
  415ea6:	push   esp
  415ea7:	xchg   edx,eax
  415ea8:	pusha  
  415ea9:	dec    esi
  415eaa:	jb     0x415eb7
  415eac:	fild   WORD PTR [ebx-0x1e069894]
  415eb2:	jge    0x415f29
  415eb4:	fcom   DWORD PTR [eax]
  415eb6:	jmp    0x415e94
  415eb8:	call   FWORD PTR [ecx]
  415eba:	mov    esi,0xd3374d97
  415ebf:	add    dl,BYTE PTR [ebp+0x2f]
  415ec2:	pop    ds
  415ec3:	cld    
  415ec4:	mov    bl,0x28
  415ec7:	push   es
  415ec8:	enter  0xecea,0xa6
  415ecc:	loopne 0x415f30
  415ece:	push   ebp
  415ecf:	inc    edi
  415ed0:	sub    al,0x66
  415ed2:	je     0x415e99
  415ed4:	and    BYTE PTR [ecx+0xeb8278c],0x99
  415edb:	jecxz  0x415ec4
  415edd:	scas   eax,DWORD PTR es:[edi]
  415ede:	adc    eax,0x77f68c43
  415ee3:	jmp    0x49e1:0x457deb1
  415eea:	les    esi,FWORD PTR [ecx+0x70]
  415eed:	push   0x57bccee
  415ef2:	add    eax,0x175a75d2
  415ef7:	dec    ecx
  415ef8:	pop    es
  415ef9:	mov    eax,ds:0x50e33500
  415efe:	sbb    dl,al
  415f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f01:	int    0x5b
  415f03:	stos   BYTE PTR es:[edi],al
  415f04:	mov    eax,0x2906e518
  415f09:	jbe    0x415f05
  415f0b:	pop    esi
  415f0c:	(bad)  
  415f0d:	xor    ah,ch
  415f0f:	or     DWORD PTR [ebx+edx*4],esi
  415f12:	mov    esi,0x81d91f84
  415f17:	jle    0x415ea2
  415f19:	pushf  
  415f1a:	in     eax,dx
  415f1b:	jnp    0x415f7b
  415f1d:	cdq    
  415f1e:	pop    esp
  415f1f:	sbb    al,0x36
  415f21:	cli    
  415f22:	pop    ds
  415f23:	fbld   TBYTE PTR [edx+0x43bfe2b7]
  415f29:	push   esp
  415f2a:	xlat   BYTE PTR ds:[ebx]
  415f2b:	cmp    BYTE PTR [ebx-0x3],ah
  415f2e:	fst    QWORD PTR [edi+0x27]
  415f31:	mov    eax,0x4d9e8008
  415f36:	aaa    
  415f37:	add    DWORD PTR [edx-0x47a187a4],ebp
  415f3d:	pop    ebp
  415f3e:	xchg   ebx,eax
  415f3f:	(bad)  
  415f40:	call   0x8cae5bcd
  415f45:	add    ebx,ecx
  415f47:	inc    esi
  415f48:	add    DWORD PTR ds:0xe4e0010e,ebx
  415f4e:	xchg   DWORD PTR [eax-0x60],edi
  415f51:	test   BYTE PTR [ecx],ch
  415f53:	pop    ebx
  415f54:	(bad)  
  415f56:	lahf   
  415f57:	add    DWORD PTR ds:0x8e387d37,edx
  415f5d:	dec    si
  415f5f:	or     eax,DWORD PTR [ecx+0x4f4fd679]
  415f65:	adc    ebx,edi
  415f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f68:	scas   al,BYTE PTR es:[edi]
  415f69:	jae    0x415f9f
  415f6b:	xlat   BYTE PTR ds:[ebx]
  415f6c:	sti    
  415f6d:	adc    dl,bl
  415f6f:	inc    ebx
  415f70:	sbb    BYTE PTR [eax-0x170aac1c],0xb
  415f77:	cmp    ch,cl
  415f79:	(bad)  
  415f7a:	retf   
  415f7b:	add    eax,0x82519812
  415f80:	neg    BYTE PTR [edx-0x37]
  415f83:	adc    eax,0x9e7e0d7c
  415f88:	pop    edi
  415f89:	not    DWORD PTR [ebx]
  415f8b:	lahf   
  415f8c:	aad    0x6a
  415f8e:	or     al,0xaf
  415f90:	sub    ax,sp
  415f93:	imul   esi,DWORD PTR cs:[ebx-0x5d],0xde2d396b
  415f9b:	xchg   edx,eax
  415f9c:	jl     0x415f64
  415f9e:	loopne 0x415fef
  415fa0:	push   eax
  415fa1:	xor    esi,DWORD PTR [ebx]
  415fa3:	fist   DWORD PTR [edx]
  415fa5:	popa   
  415fa6:	cwde   
  415fa7:	mov    ds,WORD PTR [edi-0x9]
  415faa:	(bad)  
  415fab:	ja     0x415fb8
  415fad:	ret    0xc40b
  415fb0:	mov    DWORD PTR [ebp+0x44],0x8b6d39cc
  415fb7:	jp     0x415fae
  415fb9:	jmp    0x8fe2:0xfdb38d3c
  415fc0:	push   edi
  415fc1:	pop    ds
  415fc2:	into   
  415fc3:	aam    0xeb
  415fc5:	repnz dec edx
  415fc7:	adc    eax,0x502d5dec
  415fcc:	cmp    dl,BYTE PTR [ebx+0x2860b7e3]
  415fd2:	dec    esp
  415fd3:	mov    ecx,0xaf66256f
  415fd8:	mov    ebx,0xd00b3e73
  415fdd:	mov    al,ds:0xbb6c6797
  415fe2:	sub    ebx,edx
  415fe4:	rcl    BYTE PTR [esi+0x417abe5c],cl
  415fea:	popa   
  415feb:	sbb    BYTE PTR [edx-0x44b847ee],dl
  415ff1:	sub    dl,BYTE PTR [eax-0x61fe5f19]
  415ff7:	lods   al,BYTE PTR ds:[esi]
  415ff8:	jns    0x415fcd
  415ffa:	cmp    eax,0xdc9f5074
  415fff:	aas    
  416000:	gs push edx
  416002:	repz arpl WORD PTR [ebx-0x64],ax
  416006:	ficom  DWORD PTR ds:0xaf86747a
  41600c:	out    dx,al
  41600d:	mov    ?,WORD PTR [eax+0x594b2284]
  416013:	push   ebp
  416014:	push   0x5e
  416016:	out    dx,eax
  416017:	xor    BYTE PTR [ebx],dh
  416019:	rol    BYTE PTR [ecx+0x4310142d],1
  41601f:	add    BYTE PTR [eax+eiz*8],al
  416022:	inc    edx
  416023:	add    BYTE PTR [ebx],dh
  416025:	fsubr  DWORD PTR [ebx]
  416027:	rcr    DWORD PTR [ecx],cl
  416029:	cmp    eax,0x432018
  41602e:	sub    edx,esi
  416030:	xor    edx,eax
  416032:	mov    DWORD PTR [ebp+0x8],edx
  416035:	mov    edx,DWORD PTR [ebp+0x8]
  416038:	mov    ebx,DWORD PTR [ebp-0x58]
  41603b:	add    edx,0x5708c0
  416041:	sub    DWORD PTR ds:0x432008,0x431010
  41604b:	imul   edx,ebx
  41604e:	add    DWORD PTR ds:0x431004,edi
  416054:	mov    DWORD PTR [ebp-0x58],edx
  416057:	add    ebx,DWORD PTR ds:0x431018
  41605d:	mov    edx,DWORD PTR [ebp+0x8]
  416060:	mov    ebx,DWORD PTR [ebp-0x54]
  416063:	and    DWORD PTR ds:0x42e028,0x430008
  41606d:	add    edx,0x64f8a2
  416073:	add    DWORD PTR ds:0x42e010,0x125e
  41607d:	or     edx,ebx
  41607f:	mov    DWORD PTR [ebp-0x54],edx
  416082:	adc    ebx,edx
  416084:	mov    edx,DWORD PTR [ebp+0x8]
  416087:	sub    DWORD PTR ds:0x42e018,ecx
  41608d:	mov    ebx,DWORD PTR [ebp-0x50]
  416090:	inc    DWORD PTR ds:0x42e010
  416096:	add    edx,ecx
  416098:	xor    edx,ebx
  41609a:	adc    DWORD PTR ds:0x430010,edx
  4160a0:	mov    DWORD PTR [ebp-0x50],edx
  4160a3:	mov    edx,DWORD PTR [ebp+0x8]
  4160a6:	add    ebx,0x699b
  4160ac:	mov    ebx,DWORD PTR [ebp-0x4c]
  4160af:	sub    DWORD PTR ds:0x431000,0x2b77
  4160b9:	add    edx,edi
  4160bb:	or     DWORD PTR ds:0x430004,0x35b8
  4160c5:	and    edx,ebx
  4160c7:	and    DWORD PTR ds:0x430000,0x0
  4160d1:	jmp    0x4160e3
  4160d6:	mov    ebx,DWORD PTR ds:0x430000
  4160dc:	inc    ebx
  4160dd:	mov    DWORD PTR ds:0x430000,ebx
  4160e3:	cmp    DWORD PTR ds:0x430000,0x1f
  4160ea:	jae    0x416134
  4160f0:	cmp    DWORD PTR ds:0x430000,0xd
  4160f7:	jl     0x416134
  4160fd:	jmp    0x416115
  416102:	push   DWORD PTR [ebp-0x1c]
  416105:	push   0x6567
  41610a:	push   0x7580
  41610f:	call   DWORD PTR ds:0x4348b3
  416115:	cmp    DWORD PTR ds:0x430000,0xc
  41611c:	jne    0x41612f
  416122:	mov    ebx,DWORD PTR ds:0x430000
  416128:	inc    ebx
  416129:	mov    DWORD PTR ds:0x430000,ebx
  41612f:	jmp    0x4160d6
  416134:	mov    DWORD PTR [ebp-0x4c],edx
  416137:	and    DWORD PTR ds:0x42e018,0x0
  416141:	mov    edx,DWORD PTR ds:0x42e018
  416147:	inc    edx
  416148:	mov    DWORD PTR ds:0x42e018,edx
  41614e:	cmp    DWORD PTR ds:0x42e018,0x7
  416155:	jb     0x4161aa
  41615b:	jmp    0x416183
  416160:	push   0x430018
  416165:	push   0x8477
  41616a:	push   0x38e9
  41616f:	push   DWORD PTR [ebp-0x20]
  416172:	push   DWORD PTR [ebp-0x24]
  416175:	push   0x5246
  41617a:	push   DWORD PTR [ebp-0x1c]
  41617d:	call   DWORD PTR ds:0x4348df
  416183:	cmp    DWORD PTR ds:0x42e018,0x6
  41618a:	jne    0x41619d
  416190:	mov    edx,DWORD PTR ds:0x42e018
  416196:	inc    edx
  416197:	mov    DWORD PTR ds:0x42e018,edx
  41619d:	cmp    DWORD PTR ds:0x42e018,0x1f
  4161a4:	jb     0x416141
  4161aa:	mov    edx,DWORD PTR [ebp+0x8]
  4161ad:	mov    ebx,DWORD PTR [ebp-0x48]
  4161b0:	lea    edx,[ebx+edx*1+0x241fc1f]
  4161b7:	mov    DWORD PTR [ebp-0x48],edx
  4161ba:	mov    edx,DWORD PTR [ebp+0x8]
  4161bd:	mov    ebx,0xfa5e15e2
  4161c2:	sub    ebx,edx
  4161c4:	add    ebx,DWORD PTR [ebp-0x44]
  4161c7:	mov    DWORD PTR [ebp-0x44],ebx
  4161ca:	mov    edx,DWORD PTR [ebp+0x8]
  4161cd:	xor    edx,eax
  4161cf:	add    edx,esi
  4161d1:	jne    0x413bf2
  4161d7:	mov    edx,DWORD PTR [ebp-0xc]
  4161da:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4161e1:	mov    bl,BYTE PTR [ebp-0x1]
  4161e4:	cmp    dl,bl
  4161e6:	je     0x4162c4
  4161ec:	mov    ecx,DWORD PTR [ebp-0x5c]
  4161ef:	mov    edx,DWORD PTR [ebp-0xc]
  4161f2:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4161f9:	mov    ebx,DWORD PTR [ebp+0xc]
  4161fc:	xor    ecx,eax
  4161fe:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e4]
  416205:	jne    0x41ab6e
  41620b:	mov    ecx,DWORD PTR [ebp-0x5c]
  41620e:	mov    edx,DWORD PTR [ebp+0xc]
  416211:	xor    ecx,eax
  416213:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e4]
  41621b:	mov    edx,DWORD PTR [ebp-0x18]
  41621e:	xor    edx,eax
  416220:	add    edx,esi
  416222:	cmp    ecx,edx
  416224:	mov    ecx,DWORD PTR [ebp-0x14]
  416227:	mov    DWORD PTR [ebp+0x8],ecx
  41622a:	mov    ecx,DWORD PTR [ebp+0x8]
  41622d:	je     0x41d031
  416233:	xor    ecx,eax
  416235:	add    ecx,esi
  416237:	mov    ecx,0x242ebed
  41623c:	je     0x41aac2
  416242:	mov    edx,DWORD PTR [ebp+0x8]
  416245:	mov    ebx,DWORD PTR [ebp-0x8]
  416248:	xor    edx,eax
  41624a:	xor    ebx,eax
  41624c:	sub    edx,ebx
  41624e:	sub    edx,esi
  416250:	xor    edx,eax
  416252:	mov    DWORD PTR [ebp+0x8],edx
  416255:	mov    edx,DWORD PTR [ebp+0x8]
  416258:	mov    ebx,DWORD PTR [ebp-0x58]
  41625b:	add    edx,0x5708c0
  416261:	imul   edx,ebx
  416264:	mov    DWORD PTR [ebp-0x58],edx
  416267:	mov    edx,DWORD PTR [ebp+0x8]
  41626a:	mov    ebx,DWORD PTR [ebp-0x54]
  41626d:	add    edx,0x64f8a2
  416273:	or     edx,ebx
  416275:	mov    DWORD PTR [ebp-0x54],edx
  416278:	mov    edx,DWORD PTR [ebp+0x8]
  41627b:	mov    ebx,DWORD PTR [ebp-0x50]
  41627e:	add    edx,ecx
  416280:	xor    edx,ebx
  416282:	mov    DWORD PTR [ebp-0x50],edx
  416285:	mov    edx,DWORD PTR [ebp+0x8]
  416288:	mov    ebx,DWORD PTR [ebp-0x4c]
  41628b:	add    edx,edi
  41628d:	and    edx,ebx
  41628f:	mov    DWORD PTR [ebp-0x4c],edx
  416292:	mov    edx,DWORD PTR [ebp+0x8]
  416295:	mov    ebx,DWORD PTR [ebp-0x48]
  416298:	lea    edx,[ebx+edx*1+0x241fc1f]
  41629f:	mov    DWORD PTR [ebp-0x48],edx
  4162a2:	mov    edx,DWORD PTR [ebp+0x8]
  4162a5:	mov    ebx,0xfa5e15e2
  4162aa:	sub    ebx,edx
  4162ac:	add    ebx,DWORD PTR [ebp-0x44]
  4162af:	mov    DWORD PTR [ebp-0x44],ebx
  4162b2:	mov    edx,DWORD PTR [ebp+0x8]
  4162b5:	xor    edx,eax
  4162b7:	add    edx,esi
  4162b9:	jne    0x416242
  4162bf:	jmp    0x41aac2
  4162c4:	mov    edx,DWORD PTR [ebp-0x14]
  4162c7:	mov    DWORD PTR [ebp+0x8],edx
  4162ca:	jmp    0x41aab5
  4162cf:	mov    edx,DWORD PTR [ebp+0x8]
  4162d2:	mov    ebx,DWORD PTR [ebp-0x8]
  4162d5:	xor    edx,eax
  4162d7:	xor    ebx,eax
  4162d9:	sub    edx,ebx
  4162db:	sub    edx,esi
  4162dd:	jmp    0x418698
  4162e2:	inc    esi
  4162e3:	xor    ecx,DWORD PTR ds:0xc3900f94
  4162e9:	jae    0x4162ae
  4162eb:	mov    esi,0x44b4635a
  4162f0:	aam    0x70
  4162f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162f3:	push   edi
  4162f4:	jge    0x416368
  4162f6:	rcr    BYTE PTR [edi+0x72],1
  4162f9:	jb     0x41632f
  4162fb:	mov    ecx,0xa4e5fe82
  416300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416301:	mul    BYTE PTR [ebx]
  416303:	fimul  DWORD PTR [edx-0x6ecb3abb]
  416309:	lock in al,0x91
  41630c:	clc    
  41630d:	jg     0x416324
  41630f:	sahf   
  416310:	mov    edx,0x3534b938
  416315:	mov    edx,?
  416317:	loop   0x4162eb
  416319:	call   0x97116bc5
  41631e:	push   edx
  41631f:	mov    edi,0x84603e2
  416324:	mov    ebx,0x4dc54de8
  416329:	xchg   edx,eax
  41632a:	outs   dx,DWORD PTR ds:[esi]
  41632b:	loopne 0x416387
  41632d:	xchg   DWORD PTR [ecx-0x31319d97],eax
  416333:	loope  0x41636a
  416335:	adc    al,0xd0
  416337:	push   esi
  416338:	jne    0x4162da
  41633a:	fmul   DWORD PTR [ecx]
  41633c:	mov    dl,0x56
  41633e:	adc    bh,al
  416340:	sti    
  416341:	fsubr  QWORD PTR [eax-0xa900dcd]
  416347:	xor    edx,DWORD PTR [eax]
  416349:	cwde   
  41634a:	push   ds
  41634b:	dec    ebp
  41634c:	imul   edx,DWORD PTR [eax+0x32dcfc1c],0xa07f46a8
  416356:	bound  ecx,QWORD PTR [edi+0x405f4a5b]
  41635c:	ja     0x416314
  41635e:	mov    al,0xc6
  416360:	fwait
  416361:	add    eax,0xdda38c0c
  416366:	jae    0x416307
  416368:	aas    
  416369:	push   ebx
  41636a:	dec    esi
  41636b:	mov    bh,0xa4
  41636d:	imul   ecx,DWORD PTR [ecx+ecx*1],0x30
  416371:	lds    ebp,FWORD PTR [edi-0x23]
  416374:	inc    edi
  416375:	lock and al,0x43
  416378:	mov    cx,0x513f
  41637c:	rcl    DWORD PTR [edx],0x1e
  41637f:	(bad)  
  416381:	fcmovbe st,st(4)
  416383:	(bad)  
  416384:	adc    bl,BYTE PTR [ebp+0x707a50c5]
  41638a:	icebp  
  41638b:	scas   al,BYTE PTR es:[edi]
  41638c:	xor    esp,ebx
  41638e:	xchg   ebp,eax
  41638f:	inc    ebx
  416390:	das    
  416391:	test   dl,dh
  416393:	lods   eax,DWORD PTR ds:[esi]
  416394:	xor    esi,DWORD PTR [esi+0x585326fc]
  41639a:	jle    0x4163e5
  41639c:	pop    eax
  41639d:	and    bl,0x45
  4163a0:	mov    bl,0x75
  4163a2:	es imul ebp,esp,0xf
  4163a6:	ficom  WORD PTR [esi-0x61]
  4163a9:	shr    DWORD PTR [si+0x68b1],0xfc
  4163af:	add    BYTE PTR [esi-0x5a],al
  4163b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163b3:	dec    ecx
  4163b4:	sub    BYTE PTR ss:[edi+0x641b698d],cl
  4163bb:	outs   dx,BYTE PTR ds:[esi]
  4163bc:	sahf   
  4163bd:	mov    edx,0x6c393287
  4163c2:	push   eax
  4163c3:	bound  eax,QWORD PTR [edx]
  4163c5:	mov    ebp,0x7b8f523e
  4163ca:	inc    esp
  4163cb:	daa    
  4163cc:	adc    bh,ah
  4163ce:	adc    ebp,edx
  4163d0:	hlt    
  4163d1:	stc    
  4163d2:	xchg   DWORD PTR [edi+0xffabdaa],edx
  4163d8:	push   ds
  4163d9:	leave  
  4163da:	stos   DWORD PTR es:[edi],eax
  4163db:	test   BYTE PTR [ebx],cl
  4163dd:	inc    esp
  4163de:	cld    
  4163df:	out    0xb4,al
  4163e1:	xor    esp,DWORD PTR [ebx-0x9718dcf]
  4163e7:	xor    DWORD PTR [edx],ebx
  4163e9:	inc    edx
  4163ea:	and    ecx,esi
  4163ec:	xor    dl,bl
  4163ee:	jb     0x41646c
  4163f0:	dec    esp
  4163f1:	jbe    0x4163b7
  4163f3:	cs jbe 0x41637e
  4163f6:	cmp    BYTE PTR ds:0x4f9eb284,0x73
  4163fd:	outs   dx,DWORD PTR ds:[esi]
  4163fe:	add    al,0x95
  416400:	fistp  WORD PTR [edx]
  416402:	call   FWORD PTR ds:0x835fcb26
  416408:	div    ebp
  41640a:	pop    esp
  41640b:	xor    eax,0xb6aa7c52
  416410:	imul   DWORD PTR [ebx]
  416412:	mov    ecx,0x3a0e61ae
  416417:	mov    dl,0xfd
  416419:	call   DWORD PTR ss:[esi+0x15f95bc2]
  416420:	outs   dx,BYTE PTR ds:[esi]
  416421:	sub    BYTE PTR [edi-0x42971468],bh
  416427:	sbb    DWORD PTR [edi-0x48],edx
  41642a:	cmp    al,0xb8
  41642c:	jmp    0x40fd:0x2bf5a6ed
  416433:	jp     0x41640d
  416435:	mov    eax,ds:0xfebbdd5c
  41643a:	sub    al,0x60
  41643c:	clc    
  41643d:	stos   BYTE PTR es:[edi],al
  41643e:	pop    edi
  41643f:	aad    0xd8
  416441:	and    al,0xbe
  416443:	dec    esi
  416444:	ins    DWORD PTR es:[edi],dx
  416445:	or     bh,dl
  416447:	xchg   DWORD PTR [eax+0x4ef952ee],eax
  41644d:	dec    edi
  41644e:	test   dh,0xd
  416451:	mov    esp,0x73819aa4
  416456:	inc    ebp
  416457:	fcomp  DWORD PTR [ebx+0x29]
  41645a:	out    dx,eax
  41645b:	push   esi
  41645c:	call   0x285ab72f
  416461:	loop   0x416477
  416463:	(bad)  
  416464:	cld    
  416465:	jle    0x41649c
  416467:	mov    ds:0xfbcc9407,al
  41646c:	test   BYTE PTR [edi+0x32],ah
  41646f:	cmp    bh,cl
  416471:	cdq    
  416472:	push   esi
  416473:	mov    dl,0xdd
  416475:	pop    ds
  416476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416477:	ret    
  416478:	xor    bl,BYTE PTR [ecx+0x51]
  41647b:	lea    edx,[edi]
  41647d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41647e:	push   edi
  41647f:	sub    ebx,DWORD PTR [ebx]
  416481:	stos   DWORD PTR es:[edi],eax
  416482:	mov    cl,0xec
  416484:	fsub   QWORD PTR [eax+0x64]
  416487:	jle    0x416410
  416489:	and    ecx,ebp
  41648b:	mov    eax,DWORD PTR [esi]
  41648d:	cmp    edi,ebp
  41648f:	out    0x1,eax
  416491:	mov    ebx,0x67c360e7
  416496:	fist   WORD PTR [esi]
  416498:	out    0x28,al
  41649a:	fbld   TBYTE PTR [ebx]
  41649c:	sbb    eax,0xf7a0ef50
  4164a1:	cmc    
  4164a2:	das    
  4164a3:	popa   
  4164a4:	idiv   DWORD PTR [ebx]
  4164a6:	in     al,0x7
  4164a8:	add    eax,0x2e930596
  4164ad:	dec    cl
  4164af:	les    esp,FWORD PTR [esi-0xb]
  4164b2:	xchg   edi,eax
  4164b3:	pop    ds
  4164b4:	add    bl,dh
  4164b6:	xor    bh,BYTE PTR [edx+0x41ea2332]
  4164bc:	in     eax,dx
  4164bd:	ja     0x4164f6
  4164bf:	or     esp,DWORD PTR [eax-0x4e1a3b8f]
  4164c5:	push   es
  4164c6:	xchg   edx,eax
  4164c7:	jnp    0x416490
  4164c9:	jmp    0x557d9f39
  4164ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164cf:	cmp    al,0x4
  4164d1:	mov    ds:0xb26e4f0c,al
  4164d6:	mov    ds:0x2a406724,eax
  4164db:	inc    ebx
  4164dc:	fwait
  4164dd:	xchg   edx,eax
  4164de:	das    
  4164df:	popf   
  4164e0:	leave  
  4164e1:	jmp    0x4164df
  4164e3:	loop   0x416505
  4164e5:	push   eax
  4164e6:	dec    edi
  4164e7:	popf   
  4164e8:	add    ch,BYTE PTR [eax]
  4164ea:	xchg   ebx,eax
  4164eb:	mov    eax,ds:0x5c1ae9df
  4164f0:	stc    
  4164f1:	jg     0x416483
  4164f3:	and    eax,DWORD PTR [esi+esi*2]
  4164f6:	fldenv [ebx-0x7fad8449]
  4164fc:	imul   esi,esi,0xb520f1d9
  416502:	mov    dh,0x52
  416504:	imul   DWORD PTR [ecx]
  416506:	daa    
  416507:	dec    edx
  416508:	enter  0x3ae3,0xe
  41650c:	push   edx
  41650d:	xor    BYTE PTR [ecx],dl
  41650f:	mov    BYTE PTR [edx],dh
  416511:	inc    ecx
  416512:	and    al,0x74
  416514:	push   es
  416515:	ret    
  416516:	push   esi
  416517:	and    bl,BYTE PTR [eax-0x1c7fe597]
  41651d:	daa    
  41651e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41651f:	adc    eax,0xf9c7de04
  416524:	dec    DWORD PTR [edi-0x36]
  416527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416528:	push   edi
  416529:	pop    ds
  41652a:	sbb    DWORD PTR [ecx-0x57],esi
  41652d:	push   eax
  41652e:	dec    eax
  41652f:	leave  
  416530:	and    edi,DWORD PTR [ebp-0xb]
  416533:	fsubr  st,st(5)
  416535:	jo     0x41651b
  416537:	or     al,0xb4
  416539:	int    0xe6
  41653b:	nop
  41653c:	ss ss popa 
  41653f:	into   
  416540:	adc    edx,DWORD PTR [eax]
  416542:	jge    0x4165bc
  416544:	sub    al,0x83
  416546:	push   0x6c
  416548:	mov    DWORD PTR [edi-0x1d],esp
  41654b:	push   esp
  41654c:	cmp    al,0x7b
  41654e:	ja     0x416559
  416550:	in     al,0x3e
  416552:	cmp    esi,DWORD PTR ds:0x6db35355
  416558:	ins    DWORD PTR es:[edi],dx
  416559:	dec    ebp
  41655a:	ret    0x83ee
  41655d:	xchg   esp,eax
  41655e:	shl    BYTE PTR [ecx-0x3c0eebb3],0x7d
  416565:	les    eax,FWORD PTR [esi+0xfc0df4a]
  41656b:	retf   0x93fc
  41656e:	jne    0x4165d4
  416570:	pop    eax
  416571:	pop    edi
  416572:	or     DWORD PTR [ebx+ebx*8-0x2c],edx
  416576:	iret   
  416577:	or     DWORD PTR [eax-0x5ee92478],ecx
  41657d:	or     al,0x80
  41657f:	push   ecx
  416580:	or     ch,BYTE PTR [esi+eax*1+0x6ce0cfb2]
  416587:	loope  0x416530
  416589:	cmp    eax,0x25c3c610
  41658e:	or     eax,0xbc6bf295
  416593:	iret   
  416594:	jnp    0x416520
  416596:	or     BYTE PTR [edx-0x9a0900c],dl
  41659c:	mov    esi,0x3f6c8d95
  4165a1:	inc    eax
  4165a2:	mov    ch,0x31
  4165a4:	cmp    eax,0xcbdccaef
  4165a9:	or     al,0xe6
  4165ab:	or     DWORD PTR ss:[ecx],edx
  4165ae:	fsubr  QWORD PTR [esi+ebp*8-0x30]
  4165b2:	xor    BYTE PTR [ebx+0x64],ch
  4165b5:	xlat   BYTE PTR ds:[ebx]
  4165b6:	cmp    BYTE PTR [edi-0x40],bl
  4165b9:	add    cl,BYTE PTR ds:0x97b46e22
  4165bf:	call   esi
  4165c1:	jl     0x416562
  4165c3:	xchg   ebp,eax
  4165c4:	mov    ch,0xf9
  4165c6:	retf   
  4165c7:	stos   BYTE PTR es:[edi],al
  4165c8:	ins    DWORD PTR es:[edi],dx
  4165c9:	daa    
  4165ca:	xor    al,0x68
  4165cc:	out    dx,eax
  4165cd:	rcl    BYTE PTR [esi+0x2d3ad168],1
  4165d3:	shl    esi,0x58
  4165d6:	data16 test al,0xab
  4165d9:	imul   ebx,DWORD PTR [edx],0x52
  4165dc:	push   ecx
  4165dd:	push   esi
  4165de:	or     al,0x1e
  4165e0:	mov    ebp,0x63a9e12d
  4165e5:	push   eax
  4165e6:	xchg   esp,eax
  4165e7:	push   ds
  4165e8:	adc    DWORD PTR [ecx-0x35e3c21d],eax
  4165ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165ef:	inc    ebx
  4165f0:	and    BYTE PTR [edx+0x301749ff],cl
  4165f6:	mov    ds:0x328651c,al
  4165fb:	xor    eax,0x8fa8549f
  416600:	cmp    DWORD PTR [ebp+0x52070de],ebx
  416606:	mov    bl,0xec
  416608:	inc    esi
  416609:	sub    edx,DWORD PTR [edx-0x6f]
  41660c:	jge    0x416653
  41660e:	sbb    BYTE PTR [ecx+0x6b],cl
  416611:	cs fs push ss
  416614:	mov    ch,0x99
  416616:	addr16 inc ebp
  416618:	xchg   ecx,eax
  416619:	mov    bh,BYTE PTR [eax+0x0]
  41661c:	je     0x4165a6
  41661e:	mov    esi,0xe60b1680
  416623:	lea    eax,[eax]
  416625:	adc    al,BYTE PTR [ebp+0x79436ff9]
  41662b:	cmp    dh,0xd8
  41662e:	and    edx,esi
  416630:	call   0xdff3:0xa2975c03
  416637:	xchg   esi,eax
  416638:	dec    eax
  416639:	push   esi
  41663a:	lods   eax,DWORD PTR ds:[esi]
  41663b:	ja     0x41666b
  41663d:	push   esi
  41663e:	je     0x4165f3
  416640:	inc    esp
  416641:	sbb    DWORD PTR [esi-0x8769fc7],eax
  416647:	fchs   
  416649:	cdq    
  41664a:	xor    dh,ch
  41664c:	xchg   ebp,eax
  41664d:	aad    0x22
  41664f:	repz pusha 
  416651:	pop    esi
  416652:	sub    dh,bl
  416654:	dec    ebp
  416655:	(bad)  
  416656:	ins    BYTE PTR es:[edi],dx
  416657:	or     bl,BYTE PTR [eax]
  416659:	pop    ebx
  41665a:	fstp   QWORD PTR [edi-0x43]
  41665d:	aas    
  41665e:	mov    WORD PTR [edi],ds
  416660:	push   es
  416661:	hlt    
  416662:	sub    dh,0x96
  416665:	fimul  DWORD PTR ds:0x2593fd82
  41666b:	xor    eax,0x6c1bdd87
  416670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416671:	in     al,0x1f
  416673:	mov    ebx,0x6c98356c
  416678:	add    dl,BYTE PTR [esi-0xcd07502]
  41667e:	js     0x4166dd
  416680:	retf   0x2db1
  416683:	std    
  416684:	lea    ecx,[ecx-0x3a7db63d]
  41668a:	xor    eax,0x6237aa57
  41668f:	or     DWORD PTR [ecx+0xc],edi
  416692:	stos   DWORD PTR es:[edi],eax
  416693:	mov    dl,0x18
  416695:	jmp    0x1084:0x40e7c589
  41669c:	aaa    
  41669d:	mov    dl,0xe7
  41669f:	mov    bl,0xd5
  4166a1:	bound  esi,QWORD PTR [edx-0x31]
  4166a4:	out    dx,eax
  4166a5:	jne    0x41671a
  4166a7:	sub    al,0xfe
  4166a9:	push   es
  4166aa:	aam    0xb
  4166ac:	repz in al,0x37
  4166af:	shr    DWORD PTR [ecx+0x306a0b3f],0x14
  4166b6:	int3   
  4166b7:	inc    ecx
  4166b8:	aam    0x44
  4166ba:	cld    
  4166bb:	jns    0x4166f9
  4166bd:	das    
  4166be:	mov    BYTE PTR [edx],cl
  4166c0:	add    bh,BYTE PTR [edx-0x516e7df6]
  4166c6:	sub    al,0xc8
  4166c8:	shl    BYTE PTR [esi+edi*4-0x67cbc304],1
  4166cf:	adc    eax,DWORD PTR [esi-0x61ec7b23]
  4166d5:	push   esp
  4166d6:	sti    
  4166d7:	loopne 0x4166a5
  4166d9:	dec    esp
  4166da:	in     eax,0x1a
  4166dc:	mov    ebp,ebp
  4166de:	es cld 
  4166e0:	push   ss
  4166e1:	add    eax,DWORD PTR [esi+0x46a277c5]
  4166e7:	bound  esi,QWORD PTR [esi]
  4166e9:	icebp  
  4166ea:	push   eax
  4166eb:	dec    edi
  4166ec:	mov    bh,0x3
  4166ee:	out    0xfd,eax
  4166f0:	jbe    0x4166de
  4166f2:	ins    DWORD PTR es:[edi],dx
  4166f3:	test   BYTE PTR [edi-0x30],dh
  4166f6:	(bad)  
  4166f7:	call   0xaf1a:0xff9470c2
  4166fe:	in     al,0x6f
  416700:	xchg   edi,eax
  416701:	inc    esp
  416702:	inc    edi
  416703:	dec    eax
  416704:	sbb    al,0xee
  416706:	sub    dh,cl
  416708:	popa   
  416709:	rcl    BYTE PTR [ecx+0x60],cl
  41670c:	xor    bh,ah
  41670e:	(bad)  
  41670f:	sub    al,0xf4
  416711:	dec    edi
  416712:	ds jmp 0xe7b5:0x879e36a7
  41671a:	inc    ebp
  41671b:	mov    ah,0x19
  41671d:	or     al,0x79
  41671f:	ins    BYTE PTR es:[edi],dx
  416720:	or     eax,0xc65cc31a
  416725:	xlat   BYTE PTR ds:[ebx]
  416726:	push   ebx
  416727:	and    eax,DWORD PTR [esi-0x1e0a1b73]
  41672d:	sbb    dh,BYTE PTR [ebp-0x1d]
  416730:	xchg   esp,eax
  416731:	pop    ebp
  416732:	mov    ss,WORD PTR [edi-0x65526e7d]
  416738:	push   edx
  416739:	arpl   dx,di
  41673b:	sbb    eax,0xa589c09
  416741:	(bad)  
  416742:	fldenv ds:0x107a92e7
  416748:	xchg   ecx,eax
  416749:	(bad)  
  41674a:	cmp    cl,ah
  41674c:	jg     0x416701
  41674e:	sbb    esi,esp
  416750:	js     0x416742
  416752:	lds    esi,FWORD PTR [esi*4+0x7e614748]
  416759:	fimul  WORD PTR [eax+0x352db9f5]
  41675f:	add    ebp,DWORD PTR [ecx]
  416761:	jge    0x416762
  416763:	mov    eax,0x93b74925
  416768:	mul    BYTE PTR [ecx-0x6374b55a]
  41676e:	out    0x79,al
  416770:	mov    BYTE PTR [ebx],cl
  416772:	outs   dx,DWORD PTR ds:[esi]
  416773:	cmp    DWORD PTR [edi+0x42f39bdb],0x54
  41677a:	icebp  
  41677b:	retf   0xac42
  41677e:	repz das 
  416780:	sub    ah,BYTE PTR [ebx-0x6e1952b5]
  416786:	enter  0x7582,0xe2
  41678a:	jp     0x416761
  41678c:	and    esp,DWORD PTR [edi]
  41678e:	mov    ebp,0x9490d288
  416793:	dec    esi
  416794:	ror    DWORD PTR [esi],1
  416796:	inc    bp
  416798:	in     eax,0x58
  41679a:	repz std 
  41679c:	sti    
  41679d:	outs   dx,DWORD PTR ds:[esi]
  41679e:	xchg   BYTE PTR [edi],dl
  4167a0:	jmp    0x416734
  4167a2:	imul   edx,DWORD PTR [ecx],0x6a
  4167a5:	pop    es
  4167a6:	sti    
  4167a7:	or     BYTE PTR [esi],cl
  4167a9:	add    dl,dl
  4167ab:	pushf  
  4167ac:	push   edx
  4167ad:	ss sti 
  4167af:	mov    esi,0x98511b56
  4167b4:	out    dx,eax
  4167b5:	cmp    eax,0xcc0fbc52
  4167ba:	cmp    esi,DWORD PTR [ecx]
  4167bc:	dec    BYTE PTR [ebx+0x46]
  4167bf:	add    ah,dh
  4167c1:	icebp  
  4167c2:	sbb    esi,esp
  4167c4:	sbb    eax,0xaaab0bf2
  4167ca:	das    
  4167cb:	fsubr  st(1),st
  4167cd:	mov    esp,DWORD PTR [edx+0x1b]
  4167d0:	sub    BYTE PTR [esi+ebp*4],ah
  4167d3:	cmp    eax,0x3e1f6ca0
  4167d8:	sub    al,0xff
  4167da:	cmp    al,0x40
  4167dc:	or     esi,DWORD PTR ds:0xca0d47dc
  4167e2:	(bad)  
  4167e4:	add    DWORD PTR [ecx-0x5f4c7a44],0x2f17be7d
  4167ee:	std    
  4167ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167f0:	hlt    
  4167f1:	cmp    eax,0x182539ad
  4167f6:	adc    BYTE PTR [eax+eax*4],bh
  4167f9:	ins    DWORD PTR es:[edi],dx
  4167fa:	ins    DWORD PTR es:[edi],dx
  4167fb:	les    eax,FWORD PTR [esi]
  4167fd:	jns    0x416853
  4167ff:	aad    0xbb
  416801:	cwde   
  416802:	cs cmp ch,ah
  416805:	or     eax,0x2c58f11f
  41680a:	gs retf 
  41680c:	push   ebx
  41680d:	add    BYTE PTR [edx+0x1471e3d7],0xcf
  416814:	je     0x416885
  416816:	int3   
  416817:	mov    BYTE PTR [esi-0x6e],0x45
  41681b:	xchg   esp,eax
  41681c:	clc    
  41681d:	cdq    
  41681e:	sub    edi,0x754d7289
  416824:	int    0x4
  416826:	jg     0x41687a
  416828:	mov    WORD PTR [esi-0x7f],fs
  41682b:	cwde   
  41682c:	sbb    ecx,DWORD PTR [edi+ebx*2]
  41682f:	cmp    edx,0xffffff9e
  416832:	fsub   DWORD PTR [edi]
  416834:	scas   al,BYTE PTR es:[edi]
  416835:	imul   edx,DWORD PTR [edi-0x59],0xf627e72a
  41683c:	pop    eax
  41683d:	cld    
  41683e:	mov    al,0x9d
  416840:	ret    
  416841:	ds dec ecx
  416843:	outs   dx,BYTE PTR ds:[esi]
  416844:	dec    esi
  416845:	mov    ds:0xc97669ec,al
  41684a:	in     al,0xae
  41684c:	push   edi
  41684d:	cmc    
  41684e:	and    cl,cl
  416850:	dec    ebx
  416851:	mov    dh,0xce
  416853:	cld    
  416854:	mov    ds,WORD PTR [esi-0x18]
  416857:	add    ecx,DWORD PTR [ebx]
  416859:	jnp    0x41689d
  41685b:	add    ah,BYTE PTR [ebx]
  41685d:	jae    0x416827
  41685f:	cmp    BYTE PTR [ebx],0x60
  416862:	xor    eax,0x150f0eca
  416867:	mov    dh,0x43
  416869:	iret   
  41686a:	mov    ebp,0x58ee57f6
  41686f:	outs   dx,BYTE PTR ds:[esi]
  416870:	pop    eax
  416871:	and    al,0x75
  416873:	push   ss
  416874:	aas    
  416875:	inc    eax
  416876:	push   ss
  416877:	mov    esi,0xc1f21cb7
  41687c:	jae    0x416835
  41687e:	out    dx,al
  41687f:	add    BYTE PTR [eax-0xb2f97ba],bl
  416885:	(bad)  
  416887:	or     ch,0x46
  41688a:	fldcw  WORD PTR [ebx-0x41]
  41688d:	sti    
  41688e:	add    al,0xa4
  416890:	adc    al,0xfe
  416892:	dec    edx
  416893:	shl    DWORD PTR [ebp-0x34],1
  416896:	cld    
  416897:	cmp    eax,0x61074568
  41689c:	pop    eax
  41689d:	outs   dx,BYTE PTR ds:[esi]
  41689e:	in     eax,0x82
  4168a0:	jne    0x416904
  4168a2:	adc    bl,bh
  4168a4:	inc    eax
  4168a5:	int3   
  4168a6:	dec    edx
  4168a7:	lods   al,BYTE PTR ds:[esi]
  4168a8:	add    esp,esp
  4168aa:	add    al,0x97
  4168ac:	leave  
  4168ad:	xor    DWORD PTR [esi],edi
  4168af:	sahf   
  4168b0:	add    DWORD PTR es:0xf179091c,0x312ec03b
  4168bb:	pop    edi
  4168bc:	jae    0x4168af
  4168be:	jmp    0x4168b9
  4168c0:	(bad)  
  4168c1:	mov    ebx,0x87d002ce
  4168c6:	push   ss
  4168c7:	stos   DWORD PTR es:[edi],eax
  4168c8:	std    
  4168c9:	or     eax,0x2f1f35ba
  4168ce:	gs mov cl,0x6
  4168d1:	lds    ecx,FWORD PTR [ecx+0x6476b635]
  4168d7:	jp     0x4168d6
  4168d9:	cli    
  4168da:	dec    BYTE PTR [ecx+0x62]
  4168dd:	jmp    0x207a2fd6
  4168e2:	test   BYTE PTR [eax-0x43],al
  4168e5:	jmp    0x736f7f78
  4168ea:	lods   eax,DWORD PTR ds:[esi]
  4168eb:	mov    ebx,DWORD PTR [edi-0x1b]
  4168ee:	xchg   esi,eax
  4168ef:	sub    BYTE PTR [edi-0x398b7002],cl
  4168f5:	sbb    eax,0xa455a766
  4168fa:	(bad)  
  4168fb:	ins    BYTE PTR es:[edi],dx
  4168fc:	dec    di
  4168fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168ff:	inc    ebp
  416900:	and    al,0xa5
  416902:	mov    dh,0x68
  416904:	sub    ebx,DWORD PTR [ebx-0x5c]
  416907:	jg     0x4168ec
  416909:	(bad)  
  41690a:	sahf   
  41690b:	and    al,BYTE PTR [edi]
  41690d:	mov    edi,0x1de2cdd7
  416912:	adc    al,0xd9
  416914:	jbe    0x41692e
  416916:	into   
  416917:	and    al,dl
  416919:	fs push edx
  41691b:	ins    DWORD PTR es:[edi],dx
  41691c:	mov    BYTE PTR [ebx-0x35],ch
  41691f:	sti    
  416920:	xchg   ebp,eax
  416921:	fild   DWORD PTR ds:0xb9f837b2
  416927:	fwait
  416928:	jbe    0x416982
  41692a:	sbb    al,0xb1
  41692c:	xor    ah,BYTE PTR [ebx+eax*1-0x44]
  416930:	lds    edx,FWORD PTR [ecx]
  416932:	sar    BYTE PTR [eax+0x72],0x24
  416936:	arpl   WORD PTR [ebp-0x2c6ee399],sp
  41693c:	ins    DWORD PTR es:[edi],dx
  41693d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41693e:	sahf   
  41693f:	retf   0x32e5
  416942:	pop    ss
  416943:	lea    edi,[eax+0x6252e775]
  416949:	mov    eax,ds:0x9e05f8dc
  41694e:	adc    ecx,DWORD PTR [esi]
  416950:	sbb    al,0xc5
  416952:	push   esi
  416953:	add    BYTE PTR [ebp+ebx*4-0xe],0x9a
  416958:	call   0xb049:0x6e2117b3
  41695f:	arpl   WORD PTR [ecx-0x1cf7a05c],si
  416965:	loop   0x416902
  416967:	inc    esp
  416968:	cdq    
  416969:	add    BYTE PTR [edx+0x1d],dl
  41696c:	push   ebx
  41696d:	mov    DWORD PTR [edi+0x13601d6d],ebx
  416973:	fwait
  416974:	xchg   ebp,eax
  416975:	cmp    al,0x66
  416977:	cmp    eax,0xea82aac2
  41697c:	repnz adc BYTE PTR [edx],ah
  41697f:	out    0x46,eax
  416981:	jmp    0x4169a8
  416983:	lods   eax,DWORD PTR ds:[esi]
  416984:	repz cmp ch,al
  416987:	in     al,0x19
  416989:	(bad)  
  41698b:	inc    al
  41698d:	fdiv   DWORD PTR [eax]
  41698f:	dec    ebp
  416990:	out    dx,al
  416991:	cmp    al,BYTE PTR [edi+ecx*2]
  416994:	test   al,0x1d
  416996:	jns    0x4169c8
  416998:	jmp    0x416956
  41699a:	icebp  
  41699b:	xchg   edi,eax
  41699c:	cmp    cl,cl
  41699e:	fdiv   st,st(3)
  4169a0:	cmp    DWORD PTR [ecx+ecx*2+0x54273d99],0xfffffff0
  4169a8:	sub    BYTE PTR [ebx-0x5c],0x2
  4169ac:	xchg   esp,eax
  4169ad:	xor    DWORD PTR [edi+0x6a],esi
  4169b0:	popf   
  4169b1:	sbb    DWORD PTR [ebx-0x23],esp
  4169b4:	cmc    
  4169b5:	test   eax,0xd9b7045d
  4169ba:	jo     0x4169d2
  4169bc:	inc    ecx
  4169bd:	mov    eax,ds:0xfa0fb558
  4169c2:	stc    
  4169c3:	mov    bl,0x1e
  4169c5:	ins    DWORD PTR es:[edi],dx
  4169c6:	push   es
  4169c7:	pop    esp
  4169c8:	jb     0x4169ec
  4169ca:	xor    eax,0x7cc33
  4169cf:	daa    
  4169d0:	sub    dh,ch
  4169d2:	jmp    0xa698:0x166a36ea
  4169d9:	stc    
  4169da:	inc    esi
  4169db:	push   ebx
  4169dc:	fdivr  DWORD PTR [edi]
  4169de:	pop    ebx
  4169df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169e0:	adc    eax,0xf72858ee
  4169e5:	ins    BYTE PTR es:[edi],dx
  4169e6:	push   ds
  4169e7:	das    
  4169e8:	mov    eax,DWORD PTR [ebx+0x519558bc]
  4169ee:	test   DWORD PTR [esi],ebx
  4169f0:	xor    esi,DWORD PTR [ecx+0x6bc25310]
  4169f6:	out    0x42,eax
  4169f8:	adc    esi,esp
  4169fa:	adc    ch,BYTE PTR [ecx-0x7a]
  4169fd:	popa   
  4169fe:	fild   DWORD PTR ds:0x464a5fc0
  416a04:	mov    cl,0x12
  416a06:	push   0x51
  416a08:	push   0x5ef9d6d
  416a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a0e:	jecxz  0x416a7f
  416a10:	push   ebp
  416a11:	shr    DWORD PTR [ebx],0x16
  416a14:	sub    al,0x78
  416a16:	(bad)  
  416a17:	fldenv [edx-0x75af6ec6]
  416a1d:	loope  0x416a45
  416a1f:	xor    al,0xf3
  416a21:	pop    esi
  416a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a23:	ret    0x538c
  416a26:	jmp    0xaf7d:0x9b75634a
  416a2d:	fadd   st(1),st
  416a2f:	repnz add BYTE PTR [ecx-0x19],dl
  416a33:	inc    esi
  416a34:	(bad)  
  416a35:	retf   
  416a36:	and    eax,0x1c1b3f6
  416a3c:	lds    edx,FWORD PTR [ebx+edi*8+0x1eef7ca7]
  416a43:	lds    ecx,FWORD PTR [ebx+0x42]
  416a46:	xor    ebx,esp
  416a48:	jle    0x416a14
  416a4a:	mov    edx,0xb5ec01a0
  416a4f:	adc    al,0xde
  416a51:	xchg   BYTE PTR [ebp-0x726b4812],dh
  416a57:	mov    dh,0x44
  416a59:	ficom  WORD PTR [edi]
  416a5b:	cmp    eax,ecx
  416a5d:	or     ecx,DWORD PTR [esi+0x5d]
  416a60:	jecxz  0x416a27
  416a62:	pop    ss
  416a63:	aas    
  416a64:	rcl    DWORD PTR [ebp-0x551dffba],1
  416a6a:	leave  
  416a6b:	fnstenv [ecx]
  416a6d:	shr    BYTE PTR [eax-0x30],1
  416a70:	(bad)  
  416a71:	lock repz add ecx,DWORD PTR ds:0xb6d16705
  416a79:	cdq    
  416a7a:	sbb    ebp,DWORD PTR [edi-0x211af706]
  416a80:	sub    al,0xd7
  416a82:	mov    ds:0x2d9a7a3e,eax
  416a87:	outs   dx,DWORD PTR ds:[esi]
  416a88:	xchg   edi,eax
  416a89:	outs   dx,BYTE PTR ds:[esi]
  416a8a:	(bad)  
  416a8b:	ret    0x4d2c
  416a8e:	xlat   BYTE PTR ds:[ebx]
  416a8f:	xchg   edx,eax
  416a90:	xlat   BYTE PTR ds:[ebx]
  416a91:	cmc    
  416a92:	shl    eax,0xfe
  416a95:	mov    dh,0x69
  416a97:	inc    edi
  416a98:	stos   DWORD PTR es:[edi],eax
  416a99:	xchg   ebx,eax
  416a9a:	pop    ebx
  416a9b:	mov    ebp,0xfa57c9d3
  416aa0:	cmp    DWORD PTR [eax],esi
  416aa2:	bound  eax,QWORD PTR [ebx+0x64]
  416aa5:	ret    
  416aa6:	fwait
  416aa7:	mov    ds:0xe661ecd8,eax
  416aac:	bound  ebx,QWORD PTR [ebp+0x56940348]
  416ab2:	out    0xca,al
  416ab4:	imul   edx,DWORD PTR [edx+ebx*2],0x63
  416ab8:	cmp    edx,DWORD PTR [edi-0x7211b285]
  416abe:	fbld   TBYTE PTR [ebx]
  416ac0:	ja     0x416af3
  416ac2:	or     DWORD PTR [ebp-0x51850c3e],ebx
  416ac8:	ins    DWORD PTR es:[edi],dx
  416ac9:	rcr    DWORD PTR [ebp-0x6f],1
  416acc:	rol    esp,1
  416ace:	xchg   edi,eax
  416acf:	xor    bl,ah
  416ad1:	push   ss
  416ad2:	xor    bl,BYTE PTR [edi]
  416ad4:	scas   al,BYTE PTR es:[edi]
  416ad5:	mov    eax,ds:0xcb4b9194
  416ada:	in     al,dx
  416adb:	mov    ch,0x99
  416add:	cwde   
  416ade:	jmp    0x416b5b
  416ae0:	jg     0x416ad6
  416ae2:	fwait
  416ae3:	dec    esi
  416ae4:	mov    eax,ds:0x124ac320
  416ae9:	xchg   ebp,eax
  416aea:	lahf   
  416aeb:	shl    dl,1
  416aed:	aad    0x7a
  416aef:	imul   esi,DWORD PTR [ebx-0x68165633],0x6cece6ed
  416af9:	stc    
  416afa:	shl    BYTE PTR [ecx-0x47dcfef1],1
  416b00:	xor    BYTE PTR [ecx+0x76b63801],0xde
  416b07:	jae    0x416b63
  416b09:	cmp    al,0x70
  416b0b:	aas    
  416b0c:	inc    ecx
  416b0d:	inc    esp
  416b0e:	mov    cs,esp
  416b10:	sti    
  416b11:	cmp    eax,esi
  416b13:	xchg   edx,eax
  416b14:	leave  
  416b15:	aaa    
  416b16:	xor    dl,BYTE PTR [edi+eiz*4-0x5439e551]
  416b1d:	adc    BYTE PTR [edi-0x1887b2e6],al
  416b23:	ret    0x1673
  416b26:	or     al,0x3f
  416b28:	xchg   BYTE PTR [ebp+0x8e2ba25],al
  416b2e:	scas   al,BYTE PTR es:[edi]
  416b2f:	adc    dl,BYTE PTR [esp+ebp*8+0x6f]
  416b33:	repz mov esi,0xd08c736f
  416b39:	call   0x65918a52
  416b3e:	frstor [ebx+0x7fd8863a]
  416b44:	inc    esi
  416b45:	mov    ch,0xa6
  416b47:	xchg   edx,eax
  416b48:	mov    DWORD PTR [esi+0x5c1ca2a7],ecx
  416b4e:	mov    ah,0xca
  416b50:	std    
  416b51:	and    dh,BYTE PTR [esp+eax*4+0x35]
  416b55:	add    al,0x47
  416b57:	fisttp WORD PTR [edx+0x29]
  416b5a:	and    bh,al
  416b5c:	jg     0x416b34
  416b5e:	add    BYTE PTR [eax-0x30],cl
  416b61:	test   DWORD PTR [edx-0x61c46bc8],edx
  416b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b68:	push   esp
  416b69:	outs   dx,DWORD PTR ds:[esi]
  416b6a:	and    eax,0x4a2f2b74
  416b6f:	mov    ebp,0xdb431982
  416b74:	fadd   QWORD PTR [ebp+0x281438ec]
  416b7a:	jo     0x416ba9
  416b7c:	sub    eax,0xe9322cc1
  416b81:	mov    al,dh
  416b83:	pop    ebp
  416b84:	psllq  mm2,QWORD PTR [edi+0x50dea57d]
  416b8b:	test   al,0xa8
  416b8d:	enter  0xeb98,0x6a
  416b91:	scas   al,BYTE PTR es:[edi]
  416b92:	pop    ds
  416b93:	pop    ss
  416b94:	test   eax,0x3cadf25
  416b99:	int    0xb
  416b9b:	test   eax,0x6c928cd8
  416ba0:	dec    ebp
  416ba1:	ud2    
  416ba3:	daa    
  416ba4:	lods   eax,DWORD PTR ds:[esi]
  416ba5:	ret    0x9ae3
  416ba8:	cmp    ebx,DWORD PTR [ecx]
  416baa:	inc    esp
  416bab:	jno    0x416bf0
  416bad:	add    eax,0x97ed9c5b
  416bb2:	push   ecx
  416bb3:	les    ebx,FWORD PTR [edx]
  416bb5:	sti    
  416bb6:	clc    
  416bb7:	dec    esi
  416bb8:	xchg   ecx,eax
  416bb9:	es push 0x3467c8a7
  416bbf:	aam    0xb1
  416bc1:	dec    ebp
  416bc2:	add    BYTE PTR [esp+edx*4],dl
  416bc5:	jb     0x416c33
  416bc7:	mov    al,0xc1
  416bc9:	add    esp,ecx
  416bcb:	ficomp DWORD PTR [ebx+eiz*2+0x7d]
  416bcf:	div    BYTE PTR [ecx]
  416bd1:	mov    bl,0xb7
  416bd3:	xchg   ecx,eax
  416bd4:	sub    eax,0xc1d1a7c5
  416bd9:	adc    ah,ch
  416bdb:	sub    BYTE PTR [ebp-0x76a424aa],bh
  416be1:	jbe    0x416bfa
  416be3:	loope  0x416b65
  416be5:	push   ss
  416be6:	jg     0x416c22
  416be8:	inc    edx
  416be9:	push   ebp
  416bea:	inc    edi
  416beb:	popa   
  416bec:	pop    edi
  416bed:	or     DWORD PTR ds:0x3158639f,edx
  416bf3:	dec    ecx
  416bf4:	adc    esp,eax
  416bf6:	popa   
  416bf7:	cli    
  416bf8:	(bad)  
  416bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bfa:	mov    ah,0x37
  416bfc:	fwait
  416bfd:	loope  0x416c5b
  416bff:	xchg   ebp,eax
  416c00:	daa    
  416c01:	or     ecx,DWORD PTR [edi-0x511a7625]
  416c07:	stc    
  416c08:	push   edi
  416c09:	sti    
  416c0a:	addr16 adc eax,0xce7de8a
  416c10:	test   BYTE PTR [edi-0x53a75bf1],bh
  416c16:	sub    BYTE PTR [esi-0x12],dh
  416c19:	ficom  WORD PTR [edx-0x49911a61]
  416c1f:	mov    ss,WORD PTR [ebx-0x9]
  416c22:	and    cl,ah
  416c24:	dec    eax
  416c25:	in     al,dx
  416c26:	sub    ebp,DWORD PTR ds:0x38225503
  416c2c:	mov    ecx,0xf02652ab
  416c31:	rol    BYTE PTR [edx+0x19],1
  416c34:	adc    DWORD PTR [esi+0x21a058ad],ebx
  416c3a:	mov    esp,0x821bc436
  416c3f:	jo     0x416c94
  416c41:	jge    0x416bd2
  416c43:	ss jl  0x416c5a
  416c46:	cmp    esp,DWORD PTR [ebp+0x1b]
  416c49:	inc    edi
  416c4a:	scas   al,BYTE PTR es:[edi]
  416c4b:	sbb    DWORD PTR [ebp-0x4b6c6303],ecx
  416c51:	mov    WORD PTR [edx],?
  416c53:	outs   dx,DWORD PTR ds:[esi]
  416c54:	inc    ebp
  416c55:	ss mov esp,0x1bedccee
  416c5b:	sub    BYTE PTR [eax-0x69],al
  416c5e:	fisttp WORD PTR [ecx]
  416c60:	mov    ah,0x68
  416c62:	enter  0xa53a,0x8e
  416c66:	or     BYTE PTR [edi+0x59],al
  416c69:	inc    eax
  416c6a:	sahf   
  416c6b:	(bad)  
  416c6c:	mov    ecx,0x39f5957b
  416c71:	sbb    al,0xca
  416c73:	adc    ch,bl
  416c75:	mov    esi,0x767de971
  416c7a:	mov    ebp,0xd4de571a
  416c7f:	push   ebx
  416c80:	call   0xe6f25f46
  416c85:	scas   eax,DWORD PTR es:[edi]
  416c86:	jge    0x416c67
  416c88:	push   edi
  416c89:	pop    esp
  416c8a:	ret    0x9e9f
  416c8d:	add    DWORD PTR [ebx+0x3ce15674],eax
  416c93:	dec    edi
  416c94:	mov    edi,fs
  416c96:	scas   eax,DWORD PTR es:[edi]
  416c97:	ds or  eax,0xb28cc299
  416c9e:	loope  0x416c6a
  416ca0:	mov    esi,0x43593bc8
  416ca5:	mov    dl,0xfd
  416ca7:	outs   dx,DWORD PTR ds:[esi]
  416ca8:	dec    ecx
  416ca9:	ret    
  416caa:	xchg   ebx,eax
  416cab:	mov    esp,0x24e1428a
  416cb0:	ror    BYTE PTR [eax-0x8f01b00],cl
  416cb6:	and    al,0x43
  416cb8:	rol    DWORD PTR [ecx-0x40875304],cl
  416cbe:	inc    esp
  416cbf:	test   DWORD PTR [eax],ebp
  416cc1:	ficom  WORD PTR cs:[edx+edx*2]
  416cc5:	sub    eax,DWORD PTR ds:0x6bbf9ce9
  416ccb:	and    dh,BYTE PTR [ebp+0x1fa2efa1]
  416cd1:	ffree  st(1)
  416cd3:	pop    es
  416cd4:	lds    esp,FWORD PTR [ecx+0x5b]
  416cd7:	jl     0x416d3e
  416cd9:	sti    
  416cda:	in     eax,dx
  416cdb:	or     eax,0x6c3161bc
  416ce0:	lahf   
  416ce1:	fninit 
  416ce3:	pshufw mm3,QWORD PTR [ecx],0xbe
  416ce7:	jmp    0x416cef
  416ce9:	call   0xa103:0x17d9e5f4
  416cf0:	and    eax,0x2212de1b
  416cf5:	gs mov eax,0x83df433e
  416cfb:	leave  
  416cfc:	in     eax,0x8e
  416cfe:	push   esi
  416cff:	repnz mov ds:0xf2e360e,eax
  416d05:	inc    ecx
  416d06:	les    ebx,FWORD PTR [ebx+ebx*8-0x5e]
  416d0a:	or     BYTE PTR [esi-0x71],ch
  416d0d:	daa    
  416d0e:	inc    ebx
  416d0f:	nop
  416d10:	ja     0x416cb3
  416d12:	ins    DWORD PTR es:[edi],dx
  416d13:	mov    edi,esi
  416d15:	stc    
  416d16:	imul   ebx,DWORD PTR [ecx+0x6f],0xbd13fc9b
  416d1d:	bound  ecx,QWORD PTR [esp+eiz*2-0x7203f832]
  416d24:	rcr    DWORD PTR [edx],1
  416d26:	fadd   DWORD PTR [esi+edi*8]
  416d29:	std    
  416d2a:	sbb    eax,0x5b67d72e
  416d2f:	jmp    0x7af:0xe840dac6
  416d36:	add    BYTE PTR [ebx-0x11708a04],cl
  416d3c:	sahf   
  416d3d:	jmp    0x8f53:0x411df5a1
  416d44:	lahf   
  416d45:	sub    DWORD PTR [esi+0x4005d2df],eax
  416d4b:	mov    ds:0xce3535ff,al
  416d50:	and    eax,0x1198198e
  416d55:	xlat   BYTE PTR ds:[ebx]
  416d56:	xchg   BYTE PTR [edi],ch
  416d58:	and    dh,ah
  416d5a:	(bad)  
  416d5b:	fdiv   QWORD PTR [esi]
  416d5d:	jne    0x416d1e
  416d5f:	ds push ebp
  416d61:	sub    eax,0x7771745
  416d66:	xchg   esi,eax
  416d67:	or     BYTE PTR [ebx+0x58230be],dh
  416d6d:	outs   dx,BYTE PTR ds:[esi]
  416d6e:	and    dl,cl
  416d70:	push   ss
  416d71:	xchg   ebx,eax
  416d72:	std    
  416d73:	cmp    ebp,DWORD PTR [edx]
  416d75:	mov    esp,0x20015bcd
  416d7a:	sbb    ch,BYTE PTR [edi+edx*1]
  416d7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d7e:	and    BYTE PTR [esi],ah
  416d80:	xor    bl,dh
  416d82:	pusha  
  416d83:	mov    BYTE PTR [eax-0x43024649],ah
  416d89:	outs   dx,BYTE PTR ds:[esi]
  416d8a:	rcr    DWORD PTR [esi+0x60],cl
  416d8d:	in     eax,0x33
  416d8f:	in     al,0x83
  416d91:	lods   eax,DWORD PTR ds:[esi]
  416d92:	fwait
  416d93:	cmp    esi,DWORD PTR [edi-0x74]
  416d96:	and    al,0xcf
  416d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d99:	aas    
  416d9a:	cmp    DWORD PTR [edi-0x20],eax
  416d9d:	not    al
  416d9f:	jge    0x416e05
  416da1:	sub    eax,0xc141b56f
  416da6:	xchg   edx,eax
  416da7:	(bad)  
  416da8:	sti    
  416da9:	pop    esi
  416daa:	call   0x32fb:0x19ba99ee
  416db1:	cdq    
  416db2:	xor    BYTE PTR [ecx+0x18],cl
  416db5:	jp     0x416e1c
  416db7:	test   eax,0x2853e7df
  416dbc:	dec    ebp
  416dbd:	pop    DWORD PTR [esi+0x5bae0d92]
  416dc3:	fisub  WORD PTR [esi]
  416dc5:	mov    ebp,0x683c955f
  416dca:	dec    esp
  416dcb:	jno    0x416dff
  416dcd:	mov    edx,0xc6a10f02
  416dd2:	loopne 0x416e37
  416dd4:	jmp    0xd7f9:0xc24865c3
  416ddb:	in     al,dx
  416ddc:	adc    DWORD PTR [edx+0x19],edx
  416ddf:	add    DWORD PTR [edi+eax*4],eax
  416de2:	adc    al,0xfc
  416de4:	push   edx
  416de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416de6:	push   ss
  416de7:	ins    DWORD PTR es:[edi],dx
  416de8:	pushf  
  416de9:	xor    bh,ch
  416deb:	shl    DWORD PTR [edi-0x494a5167],cl
  416df1:	enter  0xbeeb,0xde
  416df5:	fmul   st(5),st
  416df7:	cmc    
  416df8:	xlat   BYTE PTR es:[ebx]
  416dfa:	lds    ecx,FWORD PTR [eax-0x10ef9a58]
  416e00:	push   eax
  416e01:	ret    0x73c9
  416e04:	fnstenv [ebp+0x6c5e36d9]
  416e0a:	fwait
  416e0b:	mov    dl,0xfb
  416e0d:	je     0x416da8
  416e0f:	mov    cs,WORD PTR [edi+eiz*1]
  416e12:	in     al,0x43
  416e14:	fidivr WORD PTR [esi]
  416e16:	lds    ecx,FWORD PTR ds:0xa9b57120
  416e1c:	sti    
  416e1d:	jnp    0x416e1c
  416e1f:	sub    dl,dl
  416e21:	push   ds
  416e22:	in     eax,0x93
  416e24:	in     al,dx
  416e25:	aaa    
  416e26:	mov    ?,WORD PTR [esi-0x1801635d]
  416e2c:	inc    ebx
  416e2d:	int3   
  416e2e:	mov    DWORD PTR [edx+0x43c08a2f],ecx
  416e34:	dec    edx
  416e35:	fdiv   QWORD PTR [esi-0x31]
  416e38:	mov    ah,0x34
  416e3a:	pushf  
  416e3b:	cmp    dl,bh
  416e3d:	or     DWORD PTR es:[ebx*4-0x3e54a7ce],eax
  416e45:	jo     0x416dee
  416e47:	ret    0xe84c
  416e4a:	dec    ebp
  416e4b:	mov    WORD PTR [ebp-0x10cb41a9],cs
  416e51:	clc    
  416e52:	fiadd  WORD PTR [edx]
  416e54:	lahf   
  416e55:	adc    BYTE PTR [edi+0x70a39f13],ah
  416e5b:	shr    BYTE PTR [edx+0xb],0xb6
  416e5f:	xchg   BYTE PTR [ecx],al
  416e61:	mov    fs,WORD PTR [edi+0x564188b5]
  416e67:	pop    ebx
  416e68:	arpl   WORD PTR [edx+eax*1+0x7eecc8a3],ax
  416e6f:	jns    0x416ea4
  416e71:	xor    bh,0x9f
  416e74:	in     al,dx
  416e75:	hlt    
  416e76:	push   edx
  416e77:	fldpi  
  416e79:	sbb    DWORD PTR [ebp-0x31],ebx
  416e7c:	jecxz  0x416e9b
  416e7e:	mov    eax,ds:0x44ba485
  416e83:	sbb    eax,0x965490c5
  416e88:	add    ebp,DWORD PTR [ebx+0x57]
  416e8b:	mov    bl,0xc5
  416e8d:	mov    ebx,0xf59755b0
  416e92:	sbb    DWORD PTR [ecx-0x36],edi
  416e95:	pop    es
  416e96:	sbb    al,0x1d
  416e98:	ja     0x416f09
  416e9a:	cmp    BYTE PTR [eax-0x41e0c6a9],dl
  416ea0:	dec    ebp
  416ea1:	(bad)  [edi-0x26]
  416ea4:	adc    eax,0xa2c155dc
  416ea9:	icebp  
  416eaa:	idiv   DWORD PTR [eax]
  416eac:	in     eax,0xc4
  416eae:	call   0xf8bb69b9
  416eb3:	mov    ds:0x9cac53f6,al
  416eb8:	imul   edx,DWORD PTR [edi],0xacf24b7b
  416ebe:	pop    ss
  416ebf:	(bad)  
  416ec0:	nop
  416ec1:	pop    edx
  416ec2:	or     edi,DWORD PTR [ebp-0x4a999b9d]
  416ec8:	sar    esp,0x33
  416ecb:	dec    eax
  416ecc:	nop
  416ecd:	ss pop ebx
  416ecf:	adc    DWORD PTR [edi],esi
  416ed1:	mov    dl,0xab
  416ed3:	mov    ds:0x7fd201ea,al
  416ed8:	lds    edx,FWORD PTR [edi]
  416eda:	adc    eax,0xa18f280f
  416edf:	clc    
  416ee0:	in     al,0xde
  416ee2:	jle    0x416eac
  416ee4:	cs pop esp
  416ee6:	push   ds
  416ee7:	jecxz  0x416f4c
  416ee9:	inc    edi
  416eea:	mov    ebx,0x72e62547
  416eef:	sbb    eax,DWORD PTR [ebx+0x15a0fa0d]
  416ef5:	cdq    
  416ef6:	dec    eax
  416ef7:	add    DWORD PTR [ecx+esi*8+0x79b43e8e],0xffffffdb
  416eff:	xchg   edi,eax
  416f00:	jno    0x416ec1
  416f02:	cld    
  416f03:	aaa    
  416f04:	push   0xffffffaf
  416f06:	xor    ecx,DWORD PTR [eax-0x49]
  416f09:	adc    al,0xa3
  416f0b:	jg     0x416eaf
  416f0d:	shr    ebp,cl
  416f0f:	xor    esp,DWORD PTR ds:0x679774
  416f15:	loop   0x416f8a
  416f17:	push   ecx
  416f18:	iret   
  416f19:	pop    ebx
  416f1a:	inc    edi
  416f1b:	sbb    bl,0xee
  416f1e:	fs ds aaa 
  416f21:	xor    DWORD PTR [eax+0x15fd50c],ebx
  416f27:	pop    edi
  416f28:	xor    eax,0x36d791fc
  416f2d:	and    al,0x85
  416f2f:	add    eax,0xf5e560c1
  416f34:	imul   eax,ebp,0x33027ca8
  416f3a:	leave  
  416f3b:	and    cl,al
  416f3d:	lds    eax,FWORD PTR [ebx+0x6118a666]
  416f43:	or     al,0x30
  416f45:	adc    DWORD PTR [edi+eiz*1+0x1],ebx
  416f49:	jle    0x416ede
  416f4b:	xor    eax,0x415f81bc
  416f50:	test   al,0xf5
  416f52:	mov    esp,0x5199af55
  416f57:	or     DWORD PTR [ecx-0x5938851d],esp
  416f5d:	mov    ebx,0x1209a703
  416f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f63:	add    DWORD PTR [edx+0x32],edi
  416f66:	gs inc esp
  416f68:	outs   dx,BYTE PTR ds:[esi]
  416f69:	imul   DWORD PTR [ebx+0x7f]
  416f6c:	mov    edi,0xc489570b
  416f71:	inc    DWORD PTR [edi-0x782ce1b2]
  416f77:	sahf   
  416f78:	sub    al,0xc7
  416f7a:	stc    
  416f7b:	out    dx,eax
  416f7c:	cli    
  416f7d:	mov    eax,ds:0xc4f1d43d
  416f82:	mov    ch,0xb5
  416f84:	stc    
  416f85:	or     bh,BYTE PTR [ebx]
  416f87:	adc    edi,edx
  416f89:	xor    DWORD PTR [ebx-0x1492e708],eax
  416f8f:	stos   DWORD PTR es:[edi],eax
  416f90:	push   es
  416f91:	push   ebx
  416f92:	addr16 pop ss
  416f94:	add    BYTE PTR [edi],0xca
  416f97:	and    eax,0xf82df6b9
  416f9c:	and    edx,ebp
  416f9e:	inc    esi
  416f9f:	out    0xba,eax
  416fa1:	cmp    eax,0xe5514683
  416fa6:	fldenv [eax]
  416fa8:	inc    ebp
  416fa9:	inc    edx
  416faa:	imul   esi,DWORD PTR [ebx],0x1d88fc0a
  416fb0:	add    al,0x2b
  416fb2:	pop    eax
  416fb3:	mov    cl,0x1e
  416fb5:	mov    ecx,DWORD PTR [ebp+0x12]
  416fb8:	jmp    0x89b9:0xcac6c5f0
  416fbf:	inc    edi
  416fc0:	popa   
  416fc1:	and    DWORD PTR [ebx],edx
  416fc3:	lea    edx,[edi]
  416fc5:	xor    bh,BYTE PTR [ebx]
  416fc7:	retf   0xe33
  416fca:	pop    ss
  416fcb:	es pop ss
  416fcd:	aas    
  416fce:	jbe    0x41704f
  416fd0:	arpl   WORD PTR [ebx],bp
  416fd2:	xchg   esp,eax
  416fd3:	inc    eax
  416fd4:	xor    BYTE PTR ds:[ebp-0x61],bl
  416fd8:	cmp    BYTE PTR [eax-0x7e2973c2],0x95
  416fdf:	fld    QWORD PTR [ecx+esi*4]
  416fe3:	ds mov ebx,0x6b9cd33a
  416fe9:	cwde   
  416fea:	retf   
  416feb:	shl    BYTE PTR [eax-0x47],0xb2
  416fef:	cli    
  416ff0:	stos   DWORD PTR es:[edi],eax
  416ff1:	aad    0x9
  416ff3:	sbb    DWORD PTR [edx-0x7d],ecx
  416ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ff7:	arpl   ax,bx
  416ff9:	and    BYTE PTR [eax-0x7d],ch
  416ffc:	mov    edx,0x854493f5
  417001:	mov    ?,WORD PTR [ebp-0x4e33e3dc]
  417007:	and    eax,0xcbe367ec
  41700c:	xor    al,0x51
  41700e:	in     eax,0xad
  417010:	aaa    
  417011:	xor    eax,0x3f0e615a
  417016:	enter  0xa1a8,0x8d
  41701a:	pop    ebx
  41701b:	dec    esp
  41701c:	pop    ecx
  41701d:	aas    
  41701e:	scas   eax,DWORD PTR es:[edi]
  41701f:	nop
  417020:	xor    DWORD PTR [edx],eax
  417022:	mov    bl,0x7b
  417024:	xor    al,0xb1
  417026:	add    BYTE PTR [ebp-0x528b70c4],al
  41702c:	mov    ebx,0x70fd0c0b
  417031:	lods   al,BYTE PTR ds:[esi]
  417032:	mov    eax,0x160b1fca
  417037:	cmp    eax,0x7b4d90ed
  41703c:	dec    edx
  41703d:	mov    edi,eax
  41703f:	push   es
  417040:	data16 cmp cl,BYTE PTR [eax-0x7f1f1226]
  417047:	cli    
  417048:	mov    ch,0x4d
  41704a:	lods   al,BYTE PTR ds:[esi]
  41704b:	stos   BYTE PTR es:[edi],al
  41704c:	shl    BYTE PTR ds:0xf6747e94,1
  417052:	jp     0x417012
  417054:	jno    0x416fed
  417056:	lods   eax,DWORD PTR ds:[esi]
  417057:	(bad)  
  417058:	sbb    DWORD PTR [eax-0x730557fd],ebx
  41705e:	cdq    
  41705f:	loope  0x4170df
  417061:	(bad)  
  417063:	inc    edx
  417064:	mov    dh,0xf3
  417066:	pop    ecx
  417067:	xor    BYTE PTR [ebx+0x44],ah
  41706a:	out    0xb2,eax
  41706c:	adc    BYTE PTR [edi+ebp*4-0x4c456b6e],dh
  417073:	(bad)  
  417075:	fst    DWORD PTR [ebx]
  417077:	pop    es
  417078:	ficom  DWORD PTR [ebx+0x14]
  41707b:	inc    edx
  41707c:	(bad)  
  41707d:	popf   
  41707e:	rol    BYTE PTR [ebp-0xbdcdf71],0x1
  417085:	retf   
  417086:	mov    ecx,0x56f17da0
  41708b:	pop    edi
  41708c:	fld    DWORD PTR [ecx+0x108fe5b6]
  417092:	sbb    eax,0xbe7d4b55
  417097:	fnsave [eax+0x60]
  41709a:	dec    edi
  41709b:	mov    eax,DWORD PTR [ebx+esi*1]
  41709e:	xor    cl,BYTE PTR [edx-0x54]
  4170a1:	inc    eax
  4170a2:	xor    eax,0xc5f3ea41
  4170a7:	xchg   ecx,eax
  4170a8:	leave  
  4170a9:	dec    esp
  4170aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ab:	lea    ebx,[ebp+0x65]
  4170ae:	sub    esi,DWORD PTR [eax+0x359ee057]
  4170b4:	imul   edx,DWORD PTR [edx-0x68],0x2
  4170b8:	aad    0xe5
  4170ba:	(bad)  
  4170bc:	dec    esp
  4170bd:	mov    ebp,0xace979a0
  4170c2:	sahf   
  4170c3:	ja     0x417070
  4170c5:	hlt    
  4170c6:	dec    ebp
  4170c7:	popa   
  4170c8:	adc    DWORD PTR [edi-0x273bc342],ebx
  4170ce:	xor    ebp,DWORD PTR [ebx+ebp*4+0x75]
  4170d2:	scas   eax,DWORD PTR es:[edi]
  4170d3:	fs into 
  4170d5:	loopne 0x41706c
  4170d7:	jmp    0x987c:0x2f3dccb6
  4170de:	xchg   esi,eax
  4170df:	repz or al,0xff
  4170e2:	or     dh,dl
  4170e4:	fisubr WORD PTR [ecx-0x2e]
  4170e7:	add    bh,ch
  4170e9:	in     eax,dx
  4170ea:	xor    DWORD PTR [esi-0x3a],ebp
  4170ed:	push   esp
  4170ee:	cld    
  4170ef:	adc    cl,ah
  4170f1:	fdivr  st,st(5)
  4170f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170f4:	jl     0x417140
  4170f6:	js     0x417151
  4170f8:	mov    esi,fs
  4170fa:	cld    
  4170fb:	popf   
  4170fc:	dec    ebp
  4170fd:	cmc    
  4170fe:	or     edi,DWORD PTR [ebx-0x35]
  417101:	pop    ss
  417102:	outs   dx,BYTE PTR ds:[esi]
  417103:	jns    0x417139
  417105:	lods   eax,DWORD PTR ds:[esi]
  417106:	mov    ds:0x246d9fd6,eax
  41710b:	rcr    DWORD PTR [ebp+0x41],cl
  41710e:	cmp    eax,0x1e8d5300
  417113:	push   ss
  417114:	nop
  417115:	ds inc ecx
  417117:	enter  0xeb9c,0xda
  41711b:	aam    0xd7
  41711d:	cmp    DWORD PTR [esi],esi
  41711f:	call   0xd27f:0xc552f6b8
  417126:	in     al,0x3c
  417128:	push   eax
  417129:	imul   ecx,edx,0x4a
  41712c:	and    cl,BYTE PTR fs:[ecx+0xbf1d9af]
  417133:	xchg   esp,eax
  417134:	repnz test BYTE PTR [ecx],bl
  417137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417138:	jg     0x41712f
  41713a:	(bad)  
  41713b:	pushf  
  41713c:	retf   
  41713d:	pop    es
  41713e:	add    eax,0x5d492965
  417143:	jno    0x4170d0
  417145:	jb     0x4170e2
  417147:	push   edi
  417148:	mov    bl,0x1e
  41714a:	fistp  QWORD PTR [esi-0x74]
  41714d:	ficomp WORD PTR [esi]
  41714f:	jb     0x4170f5
  417151:	lahf   
  417152:	in     eax,0xd1
  417154:	ret    0xd021
  417157:	ds jmp 0x417144
  41715a:	mov    eax,ss:0x897676f5
  417160:	popa   
  417161:	cs cmp al,0x22
  417164:	pop    edi
  417165:	(bad)  
  417166:	pop    esi
  417167:	push   edi
  417168:	adc    al,bh
  41716a:	lock int 0x58
  41716d:	enter  0x11e4,0x2a
  417171:	aad    0xf5
  417173:	inc    esp
  417174:	sahf   
  417175:	inc    ebx
  417176:	outs   dx,DWORD PTR ds:[esi]
  417177:	jo     0x4171ab
  417179:	push   ecx
  41717a:	mov    ch,0x44
  41717c:	add    eax,0xcadfa19a
  417181:	push   esp
  417182:	pop    ss
  417183:	jb     0x4171dc
  417185:	pop    edx
  417186:	dec    ebp
  417187:	je     0x41710d
  417189:	cmp    eax,0x5b50da03
  41718e:	aas    
  41718f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417190:	neg    dh
  417192:	push   ecx
  417193:	dec    ebp
  417194:	or     al,0x65
  417196:	loope  0x4171c9
  417198:	popf   
  417199:	mov    ebp,0x3d14c880
  41719e:	loope  0x4171b3
  4171a0:	lgs    edx,FWORD PTR [ebp+esi*4-0x56]
  4171a5:	out    dx,eax
  4171a6:	xchg   esp,eax
  4171a7:	out    dx,eax
  4171a8:	adc    BYTE PTR [ecx-0x1f3f129],0x63
  4171af:	ins    BYTE PTR es:[edi],dx
  4171b0:	cmp    bh,BYTE PTR [edx]
  4171b2:	ret    
  4171b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171b4:	daa    
  4171b5:	add    al,0x30
  4171b7:	add    esp,DWORD PTR ds:0x111c4122
  4171bd:	test   al,0x1c
  4171bf:	dec    edx
  4171c0:	std    
  4171c1:	xchg   esi,eax
  4171c2:	push   ebp
  4171c3:	ds mov cl,0x6a
  4171c6:	mov    ebx,0x694e18a4
  4171cb:	in     al,dx
  4171cc:	pop    es
  4171cd:	dec    edx
  4171ce:	and    al,0xb7
  4171d0:	mov    edx,0xd4bee3ed
  4171d5:	pop    edx
  4171d6:	inc    ebx
  4171d7:	adc    ebp,esi
  4171d9:	cmc    
  4171da:	jecxz  0x4171a2
  4171dc:	fwait
  4171dd:	out    0xe9,al
  4171df:	add    dh,BYTE PTR [ecx]
  4171e1:	jp     0x417185
  4171e3:	xchg   al,bl
  4171e5:	ficomp DWORD PTR [esi-0x621e1dd4]
  4171eb:	fs or  bl,ah
  4171ee:	xchg   ebp,eax
  4171ef:	mov    eax,0x5005b92
  4171f4:	sbb    BYTE PTR [esi+0x456297d2],ch
  4171fa:	(bad)  
  4171fb:	mov    ds:0x249d636d,al
  417200:	lods   eax,DWORD PTR ds:[esi]
  417201:	and    bl,0x44
  417204:	and    al,0xc8
  417206:	or     al,0x92
  417208:	mov    WORD PTR ds:0xb8b4ffbd,cs
  41720e:	shr    DWORD PTR [ecx-0x1b944dad],1
  417214:	mov    al,0x63
  417216:	adc    cl,BYTE PTR [eax+0x236b458a]
  41721c:	mov    esi,0x2f014202
  417221:	push   0x56602858
  417226:	xor    al,0x5c
  417228:	clc    
  417229:	inc    ecx
  41722a:	loop   0x417272
  41722c:	lods   al,BYTE PTR ds:[esi]
  41722d:	push   ds
  41722e:	out    dx,eax
  41722f:	inc    esi
  417230:	aas    
  417231:	or     al,0x9f
  417233:	jb     0x417286
  417235:	push   ss
  417236:	scas   eax,DWORD PTR es:[edi]
  417237:	mov    ?,WORD PTR [ebx+ecx*8]
  41723a:	into   
  41723b:	or     BYTE PTR [ebx-0x39],ah
  41723e:	lods   al,BYTE PTR ds:[esi]
  41723f:	mov    al,0x4
  417241:	or     al,0x2e
  417243:	in     al,0x7f
  417245:	and    al,0xd5
  417247:	cmp    BYTE PTR ds:0x86825621,al
  41724d:	push   es
  41724e:	mov    BYTE PTR [edi+ecx*1],bh
  417251:	int3   
  417252:	popf   
  417253:	dec    edi
  417254:	mov    edx,0x294b93d9
  417259:	fisttp WORD PTR [edx]
  41725b:	retf   0xb2c
  41725e:	xor    ecx,DWORD PTR [esi-0x58]
  417261:	mov    edi,DWORD PTR [ebx+0x550925e6]
  417267:	sub    DWORD PTR [esi],ecx
  417269:	cmp    eax,0x1675aa23
  41726e:	mov    bh,0x33
  417270:	cmp    cl,BYTE PTR [esi-0x5e]
  417273:	cli    
  417274:	loop   0x417256
  417276:	mov    cl,0x40
  417278:	aas    
  417279:	mov    esi,0xe46a857e
  41727e:	push   ds
  41727f:	out    dx,al
  417280:	out    dx,al
  417281:	arpl   WORD PTR gs:[edi-0x61ef7c69],di
  417288:	sar    DWORD PTR [esi],0x3e
  41728b:	push   0xffffffe3
  41728d:	mov    ?,WORD PTR [edi-0x4b4fc2c2]
  417293:	push   edx
  417294:	xchg   ebx,eax
  417295:	pop    ss
  417296:	lahf   
  417297:	push   esp
  417298:	mov    dl,cl
  41729a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41729b:	jg     0x417248
  41729d:	pop    esp
  41729e:	adc    ah,bl
  4172a0:	shr    DWORD PTR [ecx],0x7a
  4172a3:	adc    BYTE PTR [edx+0xcbe567],cl
  4172a9:	pop    es
  4172aa:	out    dx,al
  4172ab:	xor    al,0xde
  4172ad:	mov    esp,0xa14e8509
  4172b2:	and    al,0x91
  4172b4:	popa   
  4172b5:	repz sub BYTE PTR [ecx-0xa493a3b],bh
  4172bc:	push   0xba14a9c6
  4172c1:	test   al,0xc7
  4172c3:	jo     0x41728f
  4172c5:	sti    
  4172c6:	sbb    al,0xb6
  4172c8:	pop    eax
  4172c9:	into   
  4172ca:	add    edi,DWORD PTR [edi+0x3505cc70]
  4172d0:	aam    0xc0
  4172d2:	sbb    ebx,esp
  4172d4:	inc    edi
  4172d5:	jmp    0xec6b8173
  4172da:	imul   edi,esi,0x3abdd031
  4172e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172e1:	inc    BYTE PTR [esi+eiz*8]
  4172e4:	les    edi,FWORD PTR [edx-0x70]
  4172e7:	xlat   BYTE PTR ds:[ebx]
  4172e8:	iret   
  4172e9:	adc    al,0xc8
  4172eb:	es repnz (bad) 
  4172ee:	fwait
  4172ef:	dec    ecx
  4172f0:	pop    es
  4172f1:	rcl    DWORD PTR [eax],1
  4172f3:	ins    BYTE PTR es:[edi],dx
  4172f4:	cmp    DWORD PTR [ecx+ebp*8+0x11],esi
  4172f8:	pop    esi
  4172f9:	test   eax,0xbacb43a6
  4172fe:	mov    bl,0xe0
  417300:	int    0xe0
  417302:	xchg   BYTE PTR [ecx+0x11],dl
  417305:	rcl    BYTE PTR [bx+si+0x5d],0x10
  41730a:	in     al,0x4d
  41730c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41730d:	fild   DWORD PTR [edi+0x827fca9]
  417313:	ret    0x9cb6
  417316:	xchg   edx,eax
  417317:	aad    0x47
  417319:	mov    edx,0xc8907309
  41731e:	inc    DWORD PTR [ecx]
  417320:	sub    al,0x9
  417322:	ret    
  417323:	sub    eax,0xa87b946c
  417328:	(bad)  
  417329:	pop    esp
  41732a:	adc    BYTE PTR [eax+ebp*1-0x5783ed72],0x47
  417332:	sub    BYTE PTR [ecx+0x64],bl
  417335:	popf   
  417336:	outs   dx,BYTE PTR ds:[esi]
  417337:	cdq    
  417338:	jne    0x417389
  41733a:	sbb    BYTE PTR [ebx+0x644ea29c],ch
  417340:	push   0xcc535175
  417345:	pop    edi
  417346:	add    ebx,DWORD PTR [eax-0x3]
  417349:	cmp    DWORD PTR [ebx+0x6],edi
  41734c:	mov    bl,BYTE PTR [ebx+0x9f52d64]
  417352:	clc    
  417353:	das    
  417354:	fwait
  417355:	imul   ebx,edi,0xac2cb404
  41735b:	mov    ecx,esi
  41735d:	icebp  
  41735e:	daa    
  41735f:	dec    edx
  417360:	(bad)  
  417361:	scas   al,BYTE PTR es:[edi]
  417362:	jnp    0x417312
  417364:	xchg   ebx,eax
  417365:	cmp    ebp,eax
  417367:	jnp    0x417360
  417369:	jg     0x4172f6
  41736b:	pusha  
  41736c:	and    ah,BYTE PTR [ecx+ecx*2-0x4487fa60]
  417373:	shl    DWORD PTR [ecx],1
  417375:	xchg   edx,eax
  417376:	push   ss
  417377:	in     eax,dx
  417378:	jmp    0x4172fc
  41737a:	popf   
  41737b:	push   ebx
  41737c:	out    0xb5,al
  41737e:	xor    cl,ch
  417380:	in     eax,dx
  417381:	push   ss
  417382:	sub    eax,0xb9ed197
  417387:	add    DWORD PTR [ebp+0x1b],0x2a
  41738b:	lods   eax,DWORD PTR ds:[esi]
  41738c:	aas    
  41738d:	hlt    
  41738e:	inc    esp
  41738f:	pop    ebx
  417390:	pop    ebx
  417391:	les    ecx,FWORD PTR [esi]
  417393:	mov    eax,0x823717f6
  417398:	rcr    DWORD PTR [edi-0x40],0xe2
  41739c:	fidiv  DWORD PTR [edi+0x27]
  41739f:	sahf   
  4173a0:	jecxz  0x4173be
  4173a2:	(bad)  
  4173a4:	xor    al,0xa0
  4173a6:	pusha  
  4173a7:	push   edx
  4173a8:	jle    0x417350
  4173aa:	cmc    
  4173ab:	(bad)  
  4173ac:	push   ecx
  4173ad:	scas   eax,DWORD PTR es:[edi]
  4173ae:	push   eax
  4173af:	add    BYTE PTR [edx-0x37],dh
  4173b2:	and    BYTE PTR [ecx+0x57],0x59
  4173b6:	adc    al,0xd3
  4173b8:	push   esp
  4173b9:	sub    DWORD PTR [eax],eax
  4173bb:	xchg   edi,eax
  4173bc:	cmp    cl,BYTE PTR [ecx-0x7ae75336]
  4173c2:	test   al,0xde
  4173c4:	test   BYTE PTR [eax-0x1a],dh
  4173c7:	jmp    0x86b8e8c8
  4173cc:	adc    dh,dh
  4173ce:	mov    WORD PTR [esi-0x78],cs
  4173d1:	jmp    0x21a5:0x2f1f5127
  4173d8:	cmp    DWORD PTR [ebp-0x33],edx
  4173db:	dec    edx
  4173dc:	sub    eax,DWORD PTR [esi-0x248c0d36]
  4173e2:	(bad)  
  4173e3:	jmp    0x8d9e66e3
  4173e8:	hlt    
  4173e9:	fdivrp st(2),st
  4173eb:	add    eax,DWORD PTR [edx-0x5a341650]
  4173f1:	test   bh,0x3c
  4173f4:	push   esp
  4173f5:	or     eax,0x3a8c9dbc
  4173fa:	xchg   DWORD PTR [ecx+0x32],ecx
  4173fd:	stos   BYTE PTR es:[edi],al
  4173fe:	repz sbb al,0x60
  417401:	mov    DWORD PTR [ebx+0xa],0x32f9f198
  417408:	lods   al,BYTE PTR ds:[esi]
  417409:	pusha  
  41740a:	nop
  41740b:	push   edi
  41740c:	mov    bl,0xe2
  41740e:	fwait
  41740f:	pop    ebp
  417410:	add    BYTE PTR [ecx],dl
  417412:	cld    
  417413:	in     eax,dx
  417414:	test   al,ch
  417416:	xchg   ebx,eax
  417417:	test   al,0xdd
  417419:	fwait
  41741a:	or     al,0x97
  41741c:	sahf   
  41741d:	or     DWORD PTR [ebx-0x58],eax
  417420:	aaa    
  417421:	out    0x14,al
  417423:	dec    cl
  417425:	out    dx,al
  417426:	push   0xfffffff1
  417428:	aaa    
  417429:	clc    
  41742a:	inc    ebx
  41742b:	icebp  
  41742c:	inc    edx
  41742d:	sub    eax,0x3e35b81b
  417432:	mov    ?,WORD PTR [edx+0x6f]
  417435:	dec    DWORD PTR ds:[edx]
  417438:	cwde   
  417439:	xchg   DWORD PTR [ebx+0x621bc608],esp
  41743f:	out    dx,eax
  417440:	adc    DWORD PTR [eax+0x41],0x79edcdd0
  417447:	and    ebp,esp
  417449:	lods   al,BYTE PTR ds:[esi]
  41744a:	enter  0xcada,0x2
  41744e:	push   0x53
  417450:	clc    
  417451:	xchg   edi,eax
  417452:	cmp    ebp,DWORD PTR [eax+0x31595c69]
  417458:	mov    edi,0x83f6175d
  41745d:	or     eax,0xb17ce77a
  417462:	gs adc al,0x79
  417465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417466:	or     ebx,DWORD PTR [ecx+0x7c03b5a1]
  41746c:	xchg   esi,eax
  41746d:	or     al,0xd9
  41746f:	clc    
  417470:	idiv   esp
  417472:	loop   0x41741f
  417474:	(bad)  
  417475:	jmp    0xef88:0x76542835
  41747c:	pop    edi
  41747d:	clc    
  41747e:	retf   0x3a98
  417481:	push   esi
  417482:	jl     0x417442
  417484:	std    
  417485:	(bad)  [ebx-0x1467334e]
  41748b:	lds    esp,FWORD PTR [esi-0x51]
  41748e:	mov    esp,DWORD PTR [eax+0x3bde9ea0]
  417494:	cld    
  417495:	sbb    DWORD PTR [edx-0x53],ebx
  417498:	push   ecx
  417499:	xchg   esi,eax
  41749a:	adc    cl,BYTE PTR [ebp+edi*1-0x521978d4]
  4174a1:	loop   0x417471
  4174a3:	adc    BYTE PTR [esi+0x62360937],dh
  4174a9:	and    bl,BYTE PTR [edi-0x272ec4ea]
  4174af:	add    BYTE PTR [esi],al
  4174b1:	mov    DWORD PTR [esi+0x6bed2e04],eax
  4174b7:	jmp    0x41751a
  4174b9:	mov    bl,0x4a
  4174bb:	mov    ecx,0x9745e140
  4174c0:	icebp  
  4174c1:	hlt    
  4174c2:	or     al,0x1d
  4174c4:	in     eax,0x11
  4174c6:	inc    ebx
  4174c7:	js     0x41745e
  4174c9:	and    DWORD PTR [ebp-0x68882397],ebx
  4174cf:	add    DWORD PTR [ebx+0x3b],ebx
  4174d2:	lock or esp,DWORD PTR [edx-0x34]
  4174d6:	xor    DWORD PTR [ecx+0x6d],ebx
  4174d9:	push   esp
  4174da:	mov    edi,0x77ec707
  4174df:	scas   al,BYTE PTR es:[edi]
  4174e0:	jg     0x417474
  4174e2:	mov    es,WORD PTR [edi+0x5b]
  4174e5:	and    al,0x6c
  4174e7:	ja     0x41748b
  4174e9:	push   ecx
  4174ea:	ret    0xf6bd
  4174ed:	push   esi
  4174ee:	in     al,0xaf
  4174f0:	cld    
  4174f1:	inc    edx
  4174f2:	pop    ecx
  4174f3:	dec    edi
  4174f4:	pusha  
  4174f5:	jge    0x417574
  4174f7:	cmc    
  4174f8:	add    edx,DWORD PTR [edi]
  4174fa:	cld    
  4174fb:	add    ebp,esp
  4174fd:	adc    cl,BYTE PTR [edi-0x13cf7a8c]
  417503:	mov    ds:0x40e2feef,al
  417508:	xor    BYTE PTR [edx],dh
  41750a:	scas   eax,DWORD PTR es:[edi]
  41750b:	push   es
  41750c:	push   es
  41750d:	ins    DWORD PTR es:[edi],dx
  41750e:	popa   
  41750f:	mov    WORD PTR [esi+0x56],cs
  417512:	popa   
  417513:	mov    dl,0xa5
  417515:	imul   eax,edx,0xffffffe9
  417518:	loop   0x41758c
  41751a:	mov    cl,ch
  41751c:	sbb    esi,DWORD PTR [edx-0x5feaf0f9]
  417522:	mov    DWORD PTR [ecx],eax
  417524:	jmp    0xd3261200
  417529:	mov    ds:0x87ec0070,eax
  41752e:	sbb    BYTE PTR [edi],al
  417530:	enter  0x98b5,0xa7
  417534:	stos   DWORD PTR es:[edi],eax
  417535:	add    eax,0x344b80f8
  41753a:	data16 mov ds:0x8eea5d87,al
  417540:	(bad)  [edi+edx*1-0x3ef7d870]
  417547:	ins    BYTE PTR es:[edi],dx
  417548:	push   ebp
  417549:	out    dx,eax
  41754a:	les    ecx,FWORD PTR [eax-0x7a4d8bd9]
  417550:	adc    al,0x40
  417552:	fsub   QWORD PTR [ebx+0x62]
  417555:	push   esi
  417556:	mov    ds:0x4ea98eac,al
  41755b:	add    bl,BYTE PTR [edx+0x60868b5a]
  417561:	cwde   
  417562:	inc    ebp
  417563:	mov    eax,0xe862a657
  417568:	add    eax,0xd23af54b
  41756d:	push   es
  41756e:	ds das 
  417570:	les    edx,FWORD PTR [ecx-0x33d1b952]
  417576:	pop    ebx
  417577:	imul   esp,DWORD PTR [ecx-0x2843f117],0x61
  41757e:	shl    DWORD PTR ds:0xf56516f8,cl
  417584:	xor    dh,BYTE PTR [esp+ebx*8]
  417587:	push   ebx
  417588:	push   0x41
  41758a:	in     al,dx
  41758b:	cs leave 
  41758d:	jnp    0x417514
  41758f:	sub    esp,DWORD PTR [edi+eax*2+0x50afa7b7]
  417596:	mov    eax,ds:0xf3c6234f
  41759b:	jb     0x4175fb
  41759d:	and    bh,BYTE PTR [edx]
  41759f:	add    al,0x1c
  4175a1:	(bad)  
  4175a2:	outs   dx,DWORD PTR ds:[esi]
  4175a3:	call   0xe736e645
  4175a8:	fimul  DWORD PTR [edi]
  4175aa:	push   eax
  4175ab:	shr    DWORD PTR [edx+0x17],cl
  4175ae:	call   0xa69a:0xf0089675
  4175b5:	inc    ecx
  4175b6:	or     cl,BYTE PTR [eax+0x674aeb06]
  4175bc:	and    ecx,DWORD PTR ds:0xc8426aaa
  4175c2:	xor    DWORD PTR [edx+edi*4-0x1f],ecx
  4175c6:	xlat   BYTE PTR ds:[ebx]
  4175c7:	pop    ss
  4175c8:	popf   
  4175c9:	sti    
  4175ca:	sbb    eax,0x8ec628e1
  4175cf:	cmp    dh,BYTE PTR [eax+0x6d]
  4175d2:	mov    ds:0x883c6497,al
  4175d7:	push   ebx
  4175d8:	cld    
  4175d9:	or     eax,0xe268faf0
  4175de:	cwde   
  4175df:	mov    ch,0xd0
  4175e1:	dec    ecx
  4175e2:	fdiv   QWORD PTR [edi]
  4175e4:	ja     0x4175f5
  4175e6:	loop   0x41756e
  4175e8:	rcl    BYTE PTR [ebx+0x7133135b],0xec
  4175ef:	cmp    bh,ah
  4175f1:	mov    ecx,0x1735bcbb
  4175f6:	aam    0x46
  4175f8:	push   edx
  4175f9:	inc    esi
  4175fa:	pop    ds
  4175fb:	fwait
  4175fc:	cmp    DWORD PTR [edx],ebp
  4175fe:	sbb    cl,dl
  417600:	ins    DWORD PTR es:[edi],dx
  417601:	mov    ds,WORD PTR [ebp-0x754f344]
  417607:	pop    ebp
  417608:	mov    esp,0xcabda5c8
  41760d:	mov    dh,0xa4
  41760f:	(bad)  
  417610:	jp     0x417655
  417612:	dec    esp
  417613:	stc    
  417614:	test   BYTE PTR [edi],dl
  417616:	std    
  417617:	in     eax,dx
  417618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417619:	sar    ch,1
  41761b:	ret    0xb962
  41761e:	loope  0x41760e
  417620:	out    0xf1,al
  417622:	mov    DWORD PTR [ecx],eax
  417624:	or     al,0x86
  417626:	int    0x3c
  417628:	fcomp  DWORD PTR [ebx+0x5a8a9879]
  41762e:	fs dec edi
  417630:	adc    esp,0xcb95a407
  417636:	aad    0x1e
  417638:	mov    ah,0xc2
  41763a:	xchg   edi,eax
  41763b:	inc    ecx
  41763c:	ins    BYTE PTR es:[edi],dx
  41763d:	cmp    BYTE PTR [edi],bl
  41763f:	cld    
  417640:	jp     0x417699
  417642:	mov    bl,0x5a
  417644:	pop    ecx
  417645:	xor    edi,esi
  417647:	rcl    DWORD PTR [ecx+0x36],1
  41764a:	(bad)  
  41764c:	into   
  41764d:	mov    ecx,0x2b6b8be8
  417652:	xor    edi,DWORD PTR [esi]
  417654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417655:	sbb    bl,BYTE PTR [edx-0x4c]
  417658:	push   ds
  417659:	mov    al,ds:0x96959966
  41765e:	inc    ebx
  41765f:	or     eax,0x3252974e
  417664:	sbb    DWORD PTR [ecx+0x1cefde33],0x24
  41766b:	sti    
  41766c:	lods   eax,DWORD PTR ds:[esi]
  41766d:	ja     0x41768d
  41766f:	xlat   BYTE PTR ds:[ebx]
  417670:	bound  eax,QWORD PTR [edi-0x401a3484]
  417676:	repnz sbb al,0x50
  417679:	inc    edi
  41767a:	mov    eax,0xbb465331
  41767f:	sub    eax,0xd574520
  417684:	data16 fnstsw WORD PTR [edi]
  417687:	mov    DWORD PTR [eax],edx
  417689:	mov    eax,ds:0xcbbdf8d7
  41768e:	mov    ah,0x3d
  417690:	cli    
  417691:	pop    eax
  417692:	(bad)  
  417693:	pop    ds
  417694:	xor    ecx,DWORD PTR [eax+esi*4+0x45f8f2fa]
  41769b:	xor    edi,0x60
  41769e:	add    esp,DWORD PTR [edx+0x5]
  4176a1:	inc    esp
  4176a2:	sub    DWORD PTR [esi],0x6bc27a22
  4176a8:	add    cl,dl
  4176aa:	dec    edx
  4176ab:	cmp    eax,0xb2fecb35
  4176b0:	fisubr WORD PTR [ebx+0x7c]
  4176b3:	imul   esp,DWORD PTR [ebx-0x58b11684],0xdd4c4cbb
  4176bd:	cmp    al,0xc9
  4176bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176c0:	pop    edx
  4176c1:	div    BYTE PTR [esi+ecx*2+0x62ca0d9c]
  4176c8:	cmp    BYTE PTR [ecx+eax*4+0x10f6d6fe],ch
  4176cf:	cmc    
  4176d0:	inc    edi
  4176d1:	jno    0x4176e5
  4176d3:	lods   al,BYTE PTR ds:[esi]
  4176d4:	push   0xe1f96702
  4176d9:	inc    ebp
  4176da:	cmp    al,dh
  4176dc:	ds inc ebx
  4176de:	jmp    0x417689
  4176e0:	std    
  4176e1:	cmp    ah,BYTE PTR [ebx+ebx*8-0x2cfd2f5d]
  4176e8:	sbb    edx,DWORD PTR [eax+0x7de292a1]
  4176ee:	outs   dx,BYTE PTR ds:[esi]
  4176ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176f0:	jl     0x4176ee
  4176f2:	les    ecx,FWORD PTR [eax-0x12]
  4176f5:	add    al,0x5e
  4176f8:	mov    ebp,0xc9af21fb
  4176fd:	arpl   WORD PTR [esi],bx
  4176ff:	sti    
  417700:	pop    esi
  417701:	jecxz  0x4176dc
  417703:	loopne 0x4176a7
  417705:	into   
  417706:	add    DWORD PTR [esi-0x3d],ebp
  417709:	mov    ch,0x8f
  41770b:	pop    ebx
  41770c:	aad    0x9f
  41770e:	xchg   ebp,eax
  41770f:	ret    
  417710:	jl     0x41770a
  417712:	int3   
  417713:	push   ebx
  417714:	sub    edi,DWORD PTR [ebx]
  417716:	pop    esi
  417717:	mov    BYTE PTR [ecx-0x5d],bh
  41771a:	mov    DWORD PTR [edi],ecx
  41771c:	xchg   esi,eax
  41771d:	jg     0x4176c1
  41771f:	xor    al,0x21
  417721:	arpl   si,bx
  417723:	pop    ebx
  417724:	test   BYTE PTR [eax+0x6b],dh
  417727:	push   0x970440be
  41772c:	pop    es
  41772d:	repz sar BYTE PTR [ebp-0x4c],1
  417731:	outs   dx,DWORD PTR ds:[esi]
  417732:	xor    BYTE PTR [eax-0x116238e6],0x2
  417739:	mov    ch,0x53
  41773b:	jbe    0x4176ed
  41773d:	in     al,0xe4
  41773f:	adc    BYTE PTR [edx+0x3b],ah
  417742:	jae    0x4176e1
  417744:	mov    eax,0xecdd9c09
  417749:	clc    
  41774a:	cmp    al,0x97
  41774c:	push   0x4e
  41774e:	xchg   BYTE PTR [ecx+eiz*1+0x18f05d8a],bl
  417755:	imul   esi,esi,0xb4dec58a
  41775b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41775c:	(bad)  
  41775d:	sti    
  41775e:	mov    ds:0x89949d1a,al
  417763:	es loopne 0x417730
  417766:	in     al,0x48
  417768:	jmp    0xeea5351f
  41776d:	dec    ebp
  41776e:	call   0x871db047
  417773:	dec    edx
  417774:	inc    ecx
  417775:	in     al,dx
  417776:	cmp    BYTE PTR [esi],bh
  417778:	dec    esp
  417779:	retf   0xda20
  41777c:	pop    ecx
  41777d:	pop    eax
  41777e:	xor    ebx,eax
  417780:	sub    DWORD PTR [ebx],esp
  417782:	fs jp  0x4177aa
  417785:	or     DWORD PTR [edi+0x27ce6a91],eax
  41778b:	in     eax,0x1b
  41778d:	and    al,0xc7
  41778f:	bnd ss jo 0x4177a1
  417793:	sbb    eax,0x78de57b7
  417798:	add    al,0xed
  41779a:	fnstcw WORD PTR [ebx]
  41779c:	xchg   ebx,eax
  41779d:	stos   BYTE PTR es:[edi],al
  41779e:	mov    eax,ds:0x82d8a941
  4177a3:	dec    ebp
  4177a4:	mov    bl,0xf0
  4177a6:	lods   al,BYTE PTR ds:[esi]
  4177a7:	jmp    0x6bdd:0x67683883
  4177ae:	mov    al,ds:0xeb09d8e9
  4177b3:	dec    ebx
  4177b4:	enter  0xb93b,0xd0
  4177b8:	dec    esp
  4177b9:	cs and eax,0x1722f0cc
  4177bf:	dec    edx
  4177c0:	cmc    
  4177c1:	add    al,0x5b
  4177c3:	fnclex 
  4177c5:	(bad)  
  4177c6:	jle    0x4177eb
  4177c8:	xlat   BYTE PTR ds:[ebx]
  4177c9:	or     al,0x36
  4177cb:	sub    BYTE PTR [edx-0x7],bl
  4177ce:	addr16 or al,0xdd
  4177d1:	jp     0x417840
  4177d3:	pusha  
  4177d4:	adc    al,0x6
  4177d6:	pop    edx
  4177d7:	push   esp
  4177d8:	pop    es
  4177d9:	fimul  DWORD PTR [ecx]
  4177db:	adc    eax,0x241fa22a
  4177e0:	mov    edi,DWORD PTR [edx-0x7c9a8f40]
  4177e6:	push   edx
  4177e7:	cmp    bl,al
  4177e9:	mul    BYTE PTR [edx+ebx*2]
  4177ec:	and    DWORD PTR [ecx-0x31],ebx
  4177ef:	inc    ebx
  4177f0:	mov    esp,0xa81f9aa6
  4177f5:	shr    DWORD PTR [edi+0x116846ab],1
  4177fb:	add    esi,ebp
  4177fd:	rol    edi,0x83
  417800:	ins    DWORD PTR es:[edi],dx
  417801:	test   DWORD PTR [edx-0x8],ecx
  417804:	clc    
  417805:	(bad)  
  417806:	jb     0x4177c6
  417808:	loop   0x41787e
  41780a:	jbe    0x417811
  41780c:	sbb    DWORD PTR [ebp-0x415e98ec],0x63
  417813:	dec    edx
  417814:	or     eax,0xd7ce5bce
  417819:	pop    esi
  41781a:	out    dx,al
  41781b:	jae    0x41786f
  41781d:	mov    dh,0xa4
  41781f:	jb     0x417845
  417821:	push   esi
  417822:	test   ebx,edi
  417824:	bound  eax,QWORD PTR [ecx-0x4b]
  417827:	or     al,0xd6
  417829:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41782a:	pushf  
  41782b:	je     0x417807
  41782d:	(bad)  
  41782e:	enter  0xaccf,0x4f
  417832:	dec    eax
  417833:	mov    esi,0x4a235051
  417838:	sub    DWORD PTR [esi+0x5f],edx
  41783b:	imul   BYTE PTR [ebx-0x7f]
  41783e:	test   al,0x3
  417840:	leave  
  417841:	sbb    al,BYTE PTR [eax+0x4f]
  417844:	mov    bh,0x4a
  417846:	mov    bl,0x30
  417848:	pop    ds
  417849:	dec    eax
  41784a:	sub    DWORD PTR [edx+eax*8-0x13814a31],0xffffff9d
  417852:	jl     0x417838
  417854:	xchg   esp,eax
  417855:	(bad)  
  417856:	sbb    BYTE PTR gs:[edx],ch
  417859:	sub    al,ah
  41785b:	retf   
  41785c:	in     al,dx
  41785d:	dec    ecx
  41785e:	xchg   edi,eax
  41785f:	stos   BYTE PTR es:[edi],al
  417860:	fsub   QWORD PTR [ecx-0x8]
  417863:	rcr    BYTE PTR [edi-0x68389d3a],1
  417869:	push   edi
  41786a:	push   ebp
  41786b:	xchg   esi,eax
  41786c:	xchg   DWORD PTR ds:0xa38ec829,eax
  417872:	ret    
  417873:	adc    bh,BYTE PTR [edx]
  417875:	arpl   WORD PTR ds:[edx+0x2a],ax
  417879:	mov    ds:0xb90944f4,al
  41787e:	jle    0x4178bf
  417880:	popa   
  417881:	mov    eax,ds:0x2adaf1d4
  417886:	and    eax,0xdad63016
  41788b:	sub    BYTE PTR [edx],cl
  41788d:	xchg   ecx,eax
  41788e:	test   BYTE PTR [esi+0x726d34c4],bh
  417894:	xor    eax,0xb2305de6
  417899:	mov    esp,0xd9ef7ad5
  41789e:	icebp  
  41789f:	inc    eax
  4178a0:	in     eax,0xb4
  4178a2:	pushf  
  4178a3:	jne    0x4178a5
  4178a5:	dec    edi
  4178a6:	sar    BYTE PTR [ecx+0x9],1
  4178a9:	inc    eax
  4178aa:	inc    esi
  4178ab:	dec    ebx
  4178ac:	stos   BYTE PTR es:[edi],al
  4178ad:	repz fs push eax
  4178b0:	rcl    ah,cl
  4178b2:	sbb    ebx,DWORD PTR [edi]
  4178b4:	dec    ecx
  4178b5:	cmp    eax,0x3bf63d86
  4178ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178bb:	xchg   esi,eax
  4178bc:	fiadd  WORD PTR [esi+0x645236af]
  4178c2:	mov    edx,0x5cd5dc0c
  4178c7:	pop    ds
  4178c8:	rsqrtps xmm2,XMMWORD PTR [ebp-0xf]
  4178cc:	pop    es
  4178cd:	xchg   DWORD PTR [ecx+0x76d5ce79],edx
  4178d3:	adc    ebx,esp
  4178d5:	or     BYTE PTR [ecx-0x1a],al
  4178d8:	shl    BYTE PTR [edi-0x6],cl
  4178db:	cdq    
  4178dc:	ss inc esp
  4178de:	xchg   edx,eax
  4178df:	ret    
  4178e0:	test   al,0x7c
  4178e2:	jae    0x41791b
  4178e4:	add    BYTE PTR ss:[edx+ebx*8],ah
  4178e8:	sbb    ecx,eax
  4178ea:	int3   
  4178eb:	mov    ch,0x64
  4178ed:	popf   
  4178ee:	out    dx,al
  4178ef:	xchg   edi,eax
  4178f0:	shr    ebp,cl
  4178f2:	mov    al,0xa1
  4178f4:	mov    ecx,0x34122f95
  4178f9:	pop    es
  4178fa:	shl    edi,0x4a
  4178fd:	push   eax
  4178fe:	mov    ds:0xbdba4a37,al
  417903:	mov    al,0xcc
  417905:	rol    esp,cl
  417907:	jbe    0x417911
  417909:	pop    es
  41790a:	sbb    ch,BYTE PTR [esi+0x4e]
  41790d:	push   edi
  41790e:	push   0x42
  417910:	add    al,0x78
  417912:	xlat   BYTE PTR ds:[ebx]
  417913:	stos   BYTE PTR es:[edi],al
  417914:	popf   
  417915:	aas    
  417916:	ret    
  417917:	sar    DWORD PTR [ecx+edx*8+0x32],0xbd
  41791c:	ds mov al,0xc6
  41791f:	fist   DWORD PTR [edi+0x2afbd86f]
  417925:	mov    ds:0xda6bbcc9,al
  41792a:	inc    edx
  41792b:	fucom  st(6)
  41792d:	or     DWORD PTR [ebp+0x5569f359],0xad32b25b
  417937:	fdiv   DWORD PTR [ecx+0x358332b1]
  41793d:	mov    eax,ds:0x54727684
  417942:	iret   
  417943:	ret    0x1bb3
  417946:	lea    eax,[ebp+0x79]
  417949:	mul    BYTE PTR [ecx]
  41794b:	stc    
  41794c:	dec    ebx
  41794d:	dec    edi
  41794e:	and    eax,0xa542eea9
  417953:	fisubr WORD PTR [ecx-0x73]
  417956:	xor    edi,DWORD PTR [ecx+0x6f]
  417959:	and    ebx,edx
  41795b:	pop    esi
  41795c:	in     eax,0xed
  41795e:	pop    eax
  41795f:	ror    DWORD PTR [edx+esi*8-0x27e16ae5],0x69
  417967:	and    BYTE PTR [esi+ebp*1+0x346982f4],dh
  41796e:	or     ebx,DWORD PTR [eax-0x78]
  417971:	imul   ecx,DWORD PTR [esp+edx*1],0xffffff83
  417975:	xchg   BYTE PTR [eax+0xb739bc2],bh
  41797b:	jno    0x417949
  41797d:	inc    edx
  41797e:	pop    esi
  41797f:	ins    DWORD PTR es:[edi],dx
  417980:	out    dx,eax
  417981:	aaa    
  417982:	pop    ss
  417983:	lods   al,BYTE PTR cs:[esi]
  417985:	cwde   
  417986:	neg    ah
  417988:	jmp    0x4108:0x991c32c6
  41798f:	in     al,dx
  417990:	dec    ebx
  417991:	push   cs
  417992:	add    BYTE PTR cs:[eax-0x8],0x92
  417997:	pop    ebp
  417998:	fld    TBYTE PTR [eax-0xb9c7edf]
  41799e:	stc    
  41799f:	add    dh,BYTE PTR [edi+0x4878843d]
  4179a5:	pop    es
  4179a6:	arpl   WORD PTR [eax],sp
  4179a8:	imul   ebx,DWORD PTR [edi],0x37
  4179ab:	push   ss
  4179ac:	out    dx,eax
  4179ad:	push   ebx
  4179ae:	cmp    eax,0xf4810e30
  4179b3:	adc    BYTE PTR [ebp-0x5d],0x71
  4179b7:	sbb    DWORD PTR [edi+0x5e],0xab92a5a9
  4179be:	lods   al,BYTE PTR ds:[esi]
  4179bf:	scas   eax,DWORD PTR es:[edi]
  4179c0:	fld    QWORD PTR [ebx-0x649c4e50]
  4179c6:	inc    esp
  4179c7:	jecxz  0x417a1d
  4179c9:	arpl   WORD PTR ds:[esp+ebp*4+0x25ab956d],bp
  4179d1:	pushf  
  4179d2:	bound  edi,QWORD PTR [ecx]
  4179d4:	cmp    DWORD PTR [ecx-0x31],ebx
  4179d7:	iret   
  4179d8:	xchg   esi,eax
  4179d9:	call   0xa5ef:0x82966758
  4179e0:	inc    edx
  4179e1:	mov    ecx,0x80d835b9
  4179e6:	(bad)  
  4179e7:	fwait
  4179e8:	rcl    esp,cl
  4179ea:	(bad)  
  4179ec:	out    dx,eax
  4179ed:	jbe    0x417a0f
  4179ef:	sbb    eax,edx
  4179f1:	push   ds
  4179f2:	test   BYTE PTR [ebp+0x13c2d365],cl
  4179f8:	adc    al,BYTE PTR [edx-0x18]
  4179fb:	sti    
  4179fc:	jb     0x4179de
  4179fe:	sbb    eax,0xd4986cdd
  417a03:	scas   eax,DWORD PTR es:[edi]
  417a04:	mov    bh,BYTE PTR [ecx-0x39]
  417a07:	mov    dh,0xa4
  417a09:	stc    
  417a0a:	jp     0x417a24
  417a0c:	pusha  
  417a0d:	aam    0x6a
  417a0f:	adc    DWORD PTR [ebx+ebx*1-0x15],0x487458de
  417a17:	add    eax,0x7a2ddbe8
  417a1c:	js     0x4179ae
  417a1e:	xor    eax,DWORD PTR [edi]
  417a20:	outs   dx,DWORD PTR ds:[esi]
  417a21:	(bad)  
  417a22:	jmp    0x8a57:0x7f2f1d4b
  417a29:	or     ch,bh
  417a2b:	mov    edi,0xe24eecff
  417a30:	sbb    dh,dh
  417a32:	mov    dl,0x5a
  417a34:	retf   
  417a35:	test   eax,0x498a1971
  417a3a:	test   DWORD PTR [ebx],ebx
  417a3c:	lahf   
  417a3d:	xor    eax,0x86990d30
  417a42:	push   ss
  417a43:	in     al,dx
  417a44:	je     0x417a6f
  417a46:	loope  0x4179d6
  417a48:	lea    edi,[edi]
  417a4a:	cli    
  417a4b:	pop    ebp
  417a4c:	mov    cs,WORD PTR ds:0x63a88d9a
  417a52:	rcl    BYTE PTR [ebx+0x5b],cl
  417a55:	aaa    
  417a56:	sbb    ebp,DWORD PTR [ebx-0xe]
  417a59:	add    DWORD PTR [di],edi
  417a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a5d:	mov    al,0x7c
  417a5f:	fwait
  417a60:	add    DWORD PTR [ebx-0x1dfc52fb],edx
  417a66:	push   DWORD PTR [edi+0x35ea18a9]
  417a6c:	xchg   edx,eax
  417a6d:	sbb    BYTE PTR [esi],dl
  417a6f:	imul   edx,DWORD PTR [edx],0x6f
  417a72:	push   cs
  417a73:	clc    
  417a74:	test   DWORD PTR [ebp-0x16],eax
  417a77:	lods   eax,DWORD PTR ds:[esi]
  417a78:	retf   0xcc00
  417a7b:	jne    0x417ae7
  417a7d:	ret    0xe84c
  417a80:	popf   
  417a81:	int    0x75
  417a83:	sub    DWORD PTR gs:[esi],ebx
  417a86:	icebp  
  417a87:	enter  0xa5a1,0xcf
  417a8b:	mov    ebp,0xfb86a25a
  417a90:	jo     0x417b04
  417a92:	dec    ecx
  417a93:	jne    0x417ab6
  417a95:	adc    al,0xc7
  417a97:	out    0x52,al
  417a99:	int3   
  417a9a:	fdivr  st,st(5)
  417a9c:	jo     0x417ae0
  417a9e:	adc    dh,ah
  417aa0:	inc    eax
  417aa1:	jmp    0x8a9d40ae
  417aa6:	sub    ch,BYTE PTR [ecx-0x77]
  417aa9:	dec    esp
  417aaa:	inc    ecx
  417aab:	dec    eax
  417aac:	stos   BYTE PTR es:[edi],al
  417aad:	add    cl,BYTE PTR [ecx+0x62]
  417ab0:	and    eax,0xa2ddcedf
  417ab5:	mov    ds:0x879107d1,eax
  417aba:	sub    eax,0xcbcd997b
  417abf:	call   DWORD PTR [ecx*1+0x3f36567c]
  417ac6:	retf   
  417ac7:	shr    dh,1
  417ac9:	mov    ch,BYTE PTR ds:[eax]
  417acc:	adc    al,0xb8
  417ace:	dec    edx
  417acf:	xor    dl,BYTE PTR [edx+0xc]
  417ad2:	mov    ebx,0x7699ed1
  417ad7:	cmc    
  417ad8:	pop    edi
  417ad9:	dec    esp
  417ada:	add    edx,DWORD PTR [ebp+0x20]
  417add:	test   eax,edi
  417adf:	xchg   edi,eax
  417ae0:	nop
  417ae1:	inc    ebp
  417ae2:	xchg   ebx,eax
  417ae3:	ret    
  417ae4:	pop    eax
  417ae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ae6:	hlt    
  417ae7:	push   eax
  417ae8:	int3   
  417ae9:	pop    edx
  417aea:	and    BYTE PTR [ecx],cl
  417aec:	sbb    ebp,DWORD PTR ss:[edx+edx*1+0x7ee6701]
  417af4:	sub    dh,BYTE PTR [edi+0x53]
  417af7:	cmp    al,0xf8
  417af9:	pop    ebx
  417afa:	test   al,0xcf
  417afc:	and    BYTE PTR [ebp+0x6894c1a9],al
  417b02:	adc    edx,DWORD PTR [edi-0x24768ae7]
  417b08:	aas    
  417b09:	test   BYTE PTR [edi+0x17],ah
  417b0c:	fild   DWORD PTR [ebp-0x32076c30]
  417b12:	jo     0x417b01
  417b14:	jno    0x417ab8
  417b16:	je     0x417b1a
  417b18:	cmp    ah,BYTE PTR [edi]
  417b1a:	push   esi
  417b1b:	bound  ebx,QWORD PTR [eax-0x19f1a0de]
  417b21:	shl    BYTE PTR ds:0xdc404a0e,1
  417b27:	add    bl,bl
  417b29:	jg     0x417b81
  417b2b:	das    
  417b2c:	sbb    ch,bh
  417b2e:	iret   
  417b2f:	mov    esi,0x7251cb66
  417b34:	mov    dh,0x84
  417b36:	rol    BYTE PTR [edx+0x30],0x47
  417b3a:	mov    ds:0xd91fc529,al
  417b3f:	cmp    BYTE PTR [ecx+0x3c1a3d86],dl
  417b45:	sbb    al,0x28
  417b47:	sar    ebx,cl
  417b49:	mov    esi,0x427b9193
  417b4e:	pop    ds
  417b4f:	test   al,0x51
  417b51:	nop
  417b52:	cmp    eax,0x907bbcf5
  417b57:	sahf   
  417b58:	dec    esp
  417b59:	mov    ebx,fs
  417b5b:	mov    edx,0xea18f98c
  417b60:	loope  0x417b0d
  417b62:	xor    al,0x53
  417b64:	inc    esi
  417b65:	es (bad) 
  417b68:	imul   ebx,DWORD PTR [ebp+0x59426a07],0x24
  417b6f:	and    DWORD PTR [edi+ecx*2],0x274ae891
  417b76:	lfs    esp,FWORD PTR [eax-0xf]
  417b7a:	dec    esi
  417b7b:	push   esp
  417b7c:	pop    es
  417b7d:	ss jp  0x417bfe
  417b80:	test   BYTE PTR [edi+0x602bbf6e],bh
  417b86:	xchg   edx,eax
  417b87:	sub    DWORD PTR [edi+0x61b1fe62],ecx
  417b8d:	mov    bh,0x66
  417b8f:	pusha  
  417b90:	push   0x3a
  417b92:	ds out 0x6e,al
  417b95:	sbb    BYTE PTR [esi-0x12],ah
  417b98:	and    eax,0x86e490db
  417b9d:	pushf  
  417b9e:	jae    0x417be3
  417ba0:	and    al,BYTE PTR [ebp+0x7906debe]
  417ba6:	sti    
  417ba7:	mov    al,0x37
  417ba9:	outs   dx,BYTE PTR ds:[esi]
  417baa:	cmp    eax,0x5acdecb5
  417baf:	mov    BYTE PTR [ecx+0x30fe9a61],bl
  417bb5:	shl    esi,cl
  417bb7:	popa   
  417bb8:	push   0xffffffad
  417bba:	pushf  
  417bbb:	repnz and al,0x88
  417bbe:	jmp    0x417bae
  417bc0:	sahf   
  417bc1:	xor    al,0x73
  417bc3:	jb     0x417c1d
  417bc5:	jg     0x417bc9
  417bc7:	imul   edi,ebx,0x20
  417bca:	or     eax,0xe8a8e48c
  417bcf:	jae    0x417c47
  417bd1:	and    DWORD PTR [ecx],0xeea29b7a
  417bd7:	and    ebp,DWORD PTR [edx]
  417bd9:	mov    fs,WORD PTR [esi-0x7f7c371b]
  417bdf:	stc    
  417be0:	mov    WORD PTR [eax-0x1e],ds
  417be3:	dec    esp
  417be4:	sub    eax,0x80acd58d
  417be9:	xchg   esp,eax
  417bea:	(bad)
  417bee:	dec    esp
  417bef:	xchg   ebx,eax
  417bf0:	rcl    DWORD PTR [esi+0x17],cl
  417bf3:	aas    
  417bf4:	es cs pushf 
  417bf7:	xlat   BYTE PTR ds:[ebx]
  417bf8:	sahf   
  417bf9:	int3   
  417bfa:	in     eax,0x86
  417bfc:	je     0x417b98
  417bfe:	jl     0x417c6e
  417c00:	adc    eax,0xded2ef25
  417c05:	xchg   ecx,eax
  417c06:	test   BYTE PTR [edi+0x638d4bd2],ch
  417c0c:	adc    ecx,DWORD PTR [ecx-0x3b3ce1fe]
  417c12:	fistp  WORD PTR [esi+0x29]
  417c15:	stos   BYTE PTR es:[edi],al
  417c16:	out    dx,eax
  417c17:	mov    ah,0xe7
  417c19:	inc    esi
  417c1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c1b:	popa   
  417c1c:	imul   edx,DWORD PTR [edi+0x632b1b46],0xffffff9e
  417c23:	jge    0x417c59
  417c25:	mov    eax,ds:0xf6fd74de
  417c2a:	fucom  st(2)
  417c2c:	cmp    al,0x6a
  417c2e:	(bad)  
  417c2f:	loope  0x417bca
  417c31:	int    0x6c
  417c33:	push   ebx
  417c34:	and    ah,BYTE PTR [ecx-0x3c8af283]
  417c3a:	test   ebx,eax
  417c3c:	dec    edi
  417c3d:	paddd  mm0,QWORD PTR [edx*4+0x5b848e66]
  417c45:	dec    eax
  417c46:	add    DWORD PTR [esi-0x67cc38aa],edi
  417c4c:	xlat   BYTE PTR ds:[ebx]
  417c4d:	je     0x417c99
  417c4f:	retf   0x4da5
  417c52:	es dec edx
  417c54:	std    
  417c55:	popa   
  417c56:	inc    ecx
  417c57:	adc    BYTE PTR [ebp+0x3d9018d7],bl
  417c5d:	sub    al,0x97
  417c5f:	dec    ebp
  417c60:	push   ss
  417c61:	sub    BYTE PTR [ebp-0x4],al
  417c64:	ret    
  417c65:	and    BYTE PTR [edx+0x48],bh
  417c68:	dec    eax
  417c69:	push   ebx
  417c6a:	adc    ebx,DWORD PTR [ebx+ebx*8+0x52965514]
  417c71:	cmp    eax,0xc1855643
  417c76:	das    
  417c77:	fdiv   QWORD PTR [eax]
  417c79:	push   0xfffffff3
  417c7b:	sti    
  417c7c:	(bad)  
  417c7d:	(bad)  
  417c7e:	sbb    DWORD PTR [edx],ebp
  417c80:	stos   BYTE PTR es:[edi],al
  417c81:	pop    ds
  417c82:	pop    ebx
  417c83:	and    ch,BYTE PTR [ecx]
  417c85:	inc    esi
  417c86:	jo     0x417c7f
  417c88:	xor    ch,BYTE PTR ds:0x963f05a9
  417c8e:	sar    BYTE PTR [ebx],1
  417c90:	pop    esi
  417c91:	adc    dh,BYTE PTR [edi-0x5565313b]
  417c97:	sbb    cl,BYTE PTR [esi]
  417c99:	sub    DWORD PTR [edi],edx
  417c9b:	pop    esp
  417c9c:	(bad)  
  417c9d:	jo     0x417d13
  417c9f:	mov    BYTE PTR [ebx+0x36],ch
  417ca2:	cs retf 
  417ca4:	sub    al,bh
  417ca6:	adc    BYTE PTR [esi-0x5a],0x82
  417caa:	mov    edx,0xa469f13a
  417caf:	push   0x30
  417cb1:	ret    
  417cb2:	or     dl,al
  417cb4:	jbe    0x417cd0
  417cb6:	xlat   BYTE PTR ds:[ebx]
  417cb7:	jns    0x417c59
  417cb9:	shr    dl,0xaa
  417cbc:	imul   eax,DWORD PTR [edi-0x2f],0x4c
  417cc0:	xchg   ebp,eax
  417cc1:	shl    BYTE PTR ds:0x682a6987,0xdb
  417cc8:	popf   
  417cc9:	pop    ebp
  417cca:	pop    eax
  417ccb:	retf   
  417ccc:	rcl    DWORD PTR [edx+eax*1-0x19],0x54
  417cd1:	pop    edi
  417cd2:	(bad)  [esi]
  417cd4:	stos   BYTE PTR es:[edi],al
  417cd5:	fwait
  417cd6:	rol    dh,cl
  417cd8:	jo     0x417c7e
  417cda:	and    eax,0x8f4b2a3c
  417cdf:	xor    ah,ch
  417ce1:	cld    
  417ce2:	js     0x417cb9
  417ce4:	call   0x583330d2
  417ce9:	addr16 mov eax,ds:0xba62
  417ced:	(bad)  
  417cee:	mov    cl,0xc2
  417cf0:	cmc    
  417cf1:	les    esp,FWORD PTR ds:0xce816db6
  417cf7:	xchg   ebp,eax
  417cf8:	jnp    0x417d70
  417cfa:	inc    edx
  417cfb:	repnz (bad) 
  417cfe:	fldenv [eax-0x2452049f]
  417d04:	fisttp DWORD PTR [ecx+0x32]
  417d07:	sar    DWORD PTR [esi+ecx*8],0x9a
  417d0b:	dec    ecx
  417d0c:	adc    edi,0xffffffd4
  417d0f:	stos   DWORD PTR es:[edi],eax
  417d10:	retf   
  417d11:	imul   DWORD PTR [ecx+edx*4+0x14bfd764]
  417d18:	mov    ecx,0xcd6450e8
  417d1d:	jne    0x417d5a
  417d1f:	(bad)  
  417d20:	imul   esi,DWORD PTR [ecx],0x4b9b8540
  417d26:	outs   dx,DWORD PTR ds:[esi]
  417d27:	push   ss
  417d28:	popf   
  417d29:	jo     0x417d51
  417d2b:	xchg   edx,eax
  417d2c:	push   esp
  417d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d2e:	add    bh,bh
  417d30:	jl     0x417d4b
  417d32:	clc    
  417d33:	jge    0x417ce6
  417d35:	loop   0x417d87
  417d37:	inc    ebx
  417d38:	cmc    
  417d39:	int    0x47
  417d3b:	xchg   ebp,eax
  417d3c:	xchg   edx,eax
  417d3d:	jns    0x417d27
  417d3f:	mov    eax,0xe6d56d81
  417d44:	push   ebx
  417d45:	sub    al,0xa8
  417d47:	ret    
  417d48:	pop    ss
  417d49:	push   edx
  417d4a:	jl     0x417d4a
  417d4c:	xchg   edx,eax
  417d4d:	mov    eax,0x7af3b57d
  417d52:	in     eax,dx
  417d53:	mov    bh,dl
  417d55:	xchg   ecx,eax
  417d56:	in     al,dx
  417d57:	adc    BYTE PTR [ebx+0xe5a26f7],dl
  417d5d:	dec    esi
  417d5e:	sti    
  417d5f:	xchg   BYTE PTR [edx-0x30],ch
  417d62:	outs   dx,BYTE PTR ds:[esi]
  417d63:	xor    BYTE PTR [esi+0x31d59191],al
  417d69:	jg     0x417d1a
  417d6b:	jle    0x417de6
  417d6d:	jl     0x417d3f
  417d6f:	sar    ah,0xe9
  417d72:	imul   esi,DWORD PTR [edi-0x11862b38],0xb
  417d79:	push   0x9c83b4ac
  417d7e:	sbb    esi,DWORD PTR [edi-0xfaf5a18]
  417d84:	rcl    DWORD PTR [eax],cl
  417d86:	imul   ecx,eax,0xffffffd5
  417d89:	pop    ecx
  417d8a:	(bad)  
  417d8b:	push   eax
  417d8c:	xchg   dh,bl
  417d8e:	jbe    0x417e0a
  417d90:	gs je  0x417d77
  417d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d94:	sbb    eax,0x9dfbf924
  417d99:	mov    bl,0x96
  417d9b:	sub    eax,0x3d86ab73
  417da0:	dec    BYTE PTR [edx-0x3f]
  417da3:	test   DWORD PTR [esp+ebx*1+0x3d],ebx
  417da7:	jbe    0x417d8f
  417da9:	pusha  
  417daa:	xor    al,0x91
  417dac:	gs out 0x6d,eax
  417daf:	loope  0x417d41
  417db1:	jecxz  0x417e0d
  417db3:	add    eax,0x751b05b0
  417db8:	adc    ebx,DWORD PTR [ebx-0x18c2f9e9]
  417dbe:	inc    esi
  417dbf:	push   es
  417dc0:	sub    ah,BYTE PTR gs:[ecx+0x2f]
  417dc4:	loope  0x417da4
  417dc6:	lahf   
  417dc7:	sub    al,0x12
  417dc9:	dec    ebp
  417dca:	(bad)  
  417dcb:	out    0x1,al
  417dcd:	or     DWORD PTR [esi],edx
  417dcf:	inc    ebp
  417dd0:	xor    eax,0x556f8e07
  417dd5:	or     DWORD PTR [edx],edi
  417dd7:	sahf   
  417dd8:	ds push edi
  417dda:	shl    DWORD PTR [ebp+0x3b28551a],cl
  417de0:	idiv   DWORD PTR [ecx+ebp*4-0x14d55867]
  417de7:	loope  0x417e22
  417de9:	and    eax,0x5169ee90
  417dee:	retf   0x42b9
  417df1:	arpl   WORD PTR [ebx],dx
  417df3:	add    eax,DWORD PTR [ecx]
  417df5:	mov    al,0x52
  417df7:	lahf   
  417df8:	dec    eax
  417df9:	xchg   dl,bl
  417dfb:	mov    esp,0xbd1e0177
  417e00:	pop    ebp
  417e01:	jmp    eax
  417e03:	test   al,0x12
  417e05:	sub    bh,bl
  417e07:	rol    DWORD PTR [ecx+ebx*1],1
  417e0a:	mov    ebx,0x7ac6bf4a
  417e0f:	pop    edx
  417e10:	fidiv  DWORD PTR [edi+0x79]
  417e13:	fadd   DWORD PTR [esi-0xc700095]
  417e19:	mov    bl,BYTE PTR [esi-0x1c]
  417e1c:	mov    eax,ds:0xe237956d
  417e21:	stos   DWORD PTR es:[edi],eax
  417e22:	jecxz  0x417e6c
  417e24:	mov    dh,0x77
  417e26:	pop    esi
  417e27:	or     ch,BYTE PTR [edx]
  417e29:	jne    0x417e3b
  417e2b:	ss jecxz 0x417e28
  417e2e:	jge    0x417deb
  417e30:	pop    esp
  417e31:	mov    eax,0x69ab7395
  417e36:	sub    DWORD PTR [eax+0x22],eax
  417e39:	repz dec esp
  417e3b:	js     0x417e6d
  417e3d:	out    dx,eax
  417e3e:	sub    BYTE PTR ds:[edi-0x10],dl
  417e42:	fnsave [ecx-0x2c]
  417e45:	cmc    
  417e46:	sub    DWORD PTR [edi+0x72],esp
  417e49:	add    esi,DWORD PTR [edi+0x76]
  417e4c:	(bad)  
  417e4d:	out    0x4b,al
  417e4f:	out    dx,eax
  417e50:	test   DWORD PTR [eax-0x439d24ce],esp
  417e56:	daa    
  417e57:	aam    0xb1
  417e59:	push   esi
  417e5a:	enter  0x1de5,0x25
  417e5e:	leave  
  417e5f:	out    dx,al
  417e60:	clc    
  417e61:	pop    eax
  417e62:	or     al,0xcb
  417e64:	ins    DWORD PTR es:[edi],dx
  417e65:	jb     0x417e36
  417e67:	cmp    DWORD PTR [edx+0x517feb17],edi
  417e6d:	xlat   BYTE PTR ds:[ebx]
  417e6e:	jmp    0x417e84
  417e70:	cwde   
  417e71:	xchg   esi,eax
  417e72:	mov    ecx,0x8e96c3ee
  417e77:	mov    ecx,0x2864bfd
  417e7c:	imul   eax,ecx,0x7c5cf1dc
  417e82:	sbb    al,0x48
  417e84:	mov    ecx,0x34c7538
  417e89:	mov    cl,0x43
  417e8b:	cdq    
  417e8c:	fwait
  417e8d:	inc    edx
  417e8e:	push   eax
  417e8f:	jnp    0x417e70
  417e91:	jg     0x417e77
  417e93:	add    ebx,esp
  417e95:	xor    ah,0xc1
  417e98:	jmp    0x832:0x8f0e2f3b
  417e9f:	push   ebp
  417ea0:	mov    esi,0xf915812b
  417ea5:	adc    al,0xc
  417ea7:	dec    eax
  417ea8:	and    DWORD PTR [ecx-0x72edb694],eax
  417eae:	in     eax,0xe5
  417eb0:	jne    0x417e54
  417eb2:	pop    ebp
  417eb3:	pop    ebp
  417eb4:	mov    esi,0x17549cd7
  417eb9:	push   ds
  417eba:	retf   
  417ebb:	add    eax,0x38f16f6a
  417ec0:	sub    BYTE PTR [edi],dl
  417ec2:	and    cl,BYTE PTR ds:0xe125bae5
  417ec8:	enter  0x6e67,0xb0
  417ecc:	xchg   ecx,eax
  417ecd:	mov    ah,0xe2
  417ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ed0:	mov    fs,WORD PTR [ecx-0x3ef0697d]
  417ed6:	nop
  417ed7:	xchg   ebx,eax
  417ed8:	retf   0x8ee3
  417edb:	mov    BYTE PTR [edx+0x4be778a7],ch
  417ee1:	stos   BYTE PTR es:[edi],al
  417ee2:	pop    ebx
  417ee3:	sub    al,0x51
  417ee5:	inc    ebx
  417ee6:	push   esp
  417ee7:	jp     0x417f10
  417ee9:	mov    esi,0xdc0dca82
  417eee:	sti    
  417eef:	jecxz  0x417f0a
  417ef1:	jns    0x417ef9
  417ef3:	add    BYTE PTR [esi+0x771e8264],ch
  417ef9:	int3   
  417efa:	mov    esp,0x484d4dda
  417eff:	adc    edx,DWORD PTR [ecx+0x38]
  417f02:	xchg   BYTE PTR ds:0xd9756554,dl
  417f08:	daa    
  417f09:	std    
  417f0a:	in     al,0xa0
  417f0c:	cmp    al,0x84
  417f0e:	js     0x417f7c
  417f10:	data16 and dh,BYTE PTR [edx+0x6f]
  417f14:	jge    0x417f55
  417f16:	and    DWORD PTR [ebx+0x11844ba5],ebx
  417f1c:	pop    fs
  417f1e:	dec    eax
  417f1f:	ss dec edx
  417f21:	out    dx,eax
  417f22:	test   DWORD PTR [esi+0x74fa699],esp
  417f28:	pusha  
  417f29:	shl    ah,0x1c
  417f2c:	aas    
  417f2d:	fldenv ds:[edi-0x42]
  417f31:	fwait
  417f32:	pop    eax
  417f33:	cmp    BYTE PTR [ebx-0x61c5a17c],dh
  417f39:	daa    
  417f3a:	ins    DWORD PTR es:[edi],dx
  417f3b:	pop    ebp
  417f3c:	jl     0x417eec
  417f3e:	and    al,0x1d
  417f40:	enter  0xce8a,0xca
  417f44:	push   ecx
  417f45:	inc    esp
  417f46:	sub    esi,DWORD PTR [ebx-0x4fed8ba8]
  417f4c:	mov    BYTE PTR [edx+esi*2+0x69],bh
  417f50:	and    bl,dl
  417f52:	jge    0x417f5b
  417f54:	and    eax,0x6fd55979
  417f59:	add    ebp,esi
  417f5b:	retf   
  417f5c:	cli    
  417f5d:	jg     0x417ee0
  417f5f:	pop    eax
  417f60:	cs cmp eax,0x2da47a71
  417f66:	jecxz  0x417fa6
  417f68:	stc    
  417f69:	jb     0x417f93
  417f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f6c:	arpl   WORD PTR [eax],cx
  417f6e:	mov    ebx,0xa0ea06e5
  417f73:	fstp   TBYTE PTR [edx]
  417f75:	sub    DWORD PTR [ebx-0x59],ebp
  417f78:	scas   al,BYTE PTR es:[edi]
  417f79:	pop    DWORD PTR [eax-0x4a]
  417f7c:	push   ebp
  417f7d:	js     0x417fcb
  417f7f:	mov    ch,al
  417f81:	ins    DWORD PTR es:[edi],dx
  417f82:	gs push ss
  417f84:	cld    
  417f85:	out    dx,eax
  417f86:	add    eax,DWORD PTR [eax]
  417f88:	jmp    FWORD PTR [edx-0x26fab14e]
  417f8e:	mov    ebx,DWORD PTR [ebp-0x4e18ee9d]
  417f94:	popa   
  417f95:	xchg   esp,eax
  417f96:	rcl    BYTE PTR [edi-0x52],cl
  417f99:	cmp    ah,bl
  417f9b:	jno    0x417f66
  417f9d:	jg     0x417fbe
  417f9f:	retf   
  417fa0:	dec    esi
  417fa1:	sbb    al,0xd8
  417fa3:	and    al,0xa5
  417fa5:	lods   eax,DWORD PTR ds:[esi]
  417fa6:	add    ebx,DWORD PTR [esi-0x69]
  417fa9:	pop    ebx
  417faa:	retf   
  417fab:	test   DWORD PTR [esi-0x67858b5f],eax
  417fb1:	mov    al,0x6b
  417fb3:	mov    dh,cl
  417fb5:	iret   
  417fb6:	pusha  
  417fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fb8:	push   ebp
  417fb9:	jg     0x417fbe
  417fbb:	push   cs
  417fbc:	xor    BYTE PTR [ecx],ah
  417fbe:	dec    esi
  417fbf:	adc    edx,DWORD PTR [eax-0x41a52d56]
  417fc5:	mov    al,0x76
  417fc7:	je     0x417f80
  417fc9:	adc    al,0x46
  417fcb:	ds cmp eax,0x875d5518
  417fd1:	add    ebx,DWORD PTR [esi+0x30b07d9a]
  417fd7:	out    0x4a,eax
  417fd9:	les    ebx,FWORD PTR [eax]
  417fdb:	add    bh,BYTE PTR [esi+0x279f163e]
  417fe1:	inc    eax
  417fe2:	dec    ebp
  417fe3:	mov    ds:0x90cad032,eax
  417fe8:	repz cmp dl,dh
  417feb:	xchg   DWORD PTR ds:0x90b05a5f,ebx
  417ff1:	inc    esp
  417ff2:	push   eax
  417ff3:	js     0x417fa4
  417ff5:	lahf   
  417ff6:	pop    ebx
  417ff7:	mov    BYTE PTR [esi],ch
  417ff9:	pop    esi
  417ffa:	das    
  417ffb:	les    ecx,FWORD PTR [ebp+0x34]
  417ffe:	add    bl,ah
  418000:	mov    dh,BYTE PTR [eax-0x58de91f2]
  418006:	sbb    BYTE PTR [edi-0x29],bh
  418009:	add    dl,BYTE PTR [esi-0x61]
  41800c:	mov    DWORD PTR cs:[edx],ecx
  41800f:	call   0x4162:0xd14f350c
  418016:	push   ds
  418017:	bound  edi,QWORD PTR ds:[ecx+0x32]
  41801b:	push   eax
  41801c:	push   esi
  41801d:	add    DWORD PTR [eax+0x382ffae0],eax
  418023:	in     eax,dx
  418024:	lock adc eax,0x8e5dfcb4
  41802a:	shl    BYTE PTR [esp+edx*4+0x5ecbb965],0xc4
  418032:	jne    0x417fb6
  418034:	xchg   edi,eax
  418035:	pop    ss
  418036:	push   ecx
  418037:	and    esp,ecx
  418039:	ja     0x417fca
  41803b:	mov    cl,0x3e
  41803d:	push   ecx
  41803e:	cmp    bl,BYTE PTR gs:[ecx-0x6e]
  418042:	test   DWORD PTR [ebx+0x57300620],edx
  418048:	mov    esp,0x4faa52fd
  41804d:	push   ds
  41804e:	pop    esi
  41804f:	cmp    al,0xcd
  418051:	js     0x4180c9
  418053:	xor    eax,0xf418e5dc
  418058:	or     al,BYTE PTR [esi+ebp*2]
  41805b:	jbe    0x418056
  41805d:	sar    ah,cl
  41805f:	pop    ecx
  418060:	mov    al,0x91
  418062:	jl     0x418092
  418064:	int    0xc2
  418066:	icebp  
  418067:	stos   DWORD PTR es:[edi],eax
  418068:	pop    edi
  418069:	je     0x4180a8
  41806b:	inc    ecx
  41806c:	psubsb mm0,mm7
  41806f:	xor    ebp,eax
  418071:	mov    ebx,0x592ba132
  418076:	mov    dh,0x37
  418078:	mov    edx,0x6ee7405c
  41807d:	xchg   ebp,eax
  41807e:	adc    edi,DWORD PTR [ebp*4-0x314cc5bc]
  418085:	(bad)  
  418087:	or     ch,BYTE PTR [esi+0x6]
  41808a:	inc    ecx
  41808b:	adc    DWORD PTR [esi-0x47],esp
  41808e:	or     eax,0xbad9f857
  418093:	hlt    
  418094:	push   ss
  418095:	inc    ecx
  418096:	cmp    ah,cl
  418098:	and    al,0x78
  41809a:	or     eax,0xafffd409
  41809f:	pop    ebp
  4180a0:	lahf   
  4180a1:	cmp    edx,DWORD PTR [eax+eiz*8+0x69b015bb]
  4180a8:	call   0x1977c283
  4180ad:	mov    bl,BYTE PTR [edx]
  4180af:	rcl    DWORD PTR ds:0xb88e7299,0x3b
  4180b6:	mov    ebx,0x47e7d249
  4180bb:	mov    ds:0x28a85f1b,al
  4180c0:	push   es
  4180c1:	outs   dx,BYTE PTR ds:[esi]
  4180c2:	ss adc al,0x20
  4180c5:	out    0xa1,eax
  4180c7:	and    DWORD PTR [ecx-0x60],edx
  4180ca:	outs   dx,BYTE PTR ds:[esi]
  4180cb:	pop    ecx
  4180cc:	or     eax,0x6fad6769
  4180d1:	fist   DWORD PTR ds:0x5224a028
  4180d7:	and    al,cl
  4180d9:	or     esp,DWORD PTR [esi-0x5b]
  4180dc:	mov    dh,0xbe
  4180de:	mul    BYTE PTR [eax+ebx*2]
  4180e1:	rcl    dl,1
  4180e3:	or     eax,0x5ee9aa29
  4180e8:	in     al,dx
  4180e9:	js     0x418119
  4180eb:	sbb    edi,DWORD PTR [edx+esi*8]
  4180ee:	sahf   
  4180ef:	call   0xd48820a7
  4180f4:	int    0xed
  4180f6:	scas   eax,DWORD PTR es:[edi]
  4180f7:	sub    ch,dh
  4180f9:	lods   al,BYTE PTR ds:[esi]
  4180fa:	cld    
  4180fb:	(bad)  
  4180fc:	push   eax
  4180fd:	test   eax,0x8fc32f9a
  418102:	jmp    DWORD PTR [edx]
  418104:	sub    ah,cl
  418106:	cmp    BYTE PTR [edx],dh
  418108:	mov    gs,WORD PTR [edi-0xe]
  41810b:	jg     0xd0d06e58
  418111:	or     eax,0x403db532
  418116:	mov    bh,0x47
  418118:	les    edi,FWORD PTR [ebp-0x63]
  41811b:	test   al,0x3b
  41811d:	inc    esi
  41811e:	jmp    0x78669c27
  418123:	ret    0x1910
  418126:	dec    eax
  418127:	add    al,0x77
  418129:	inc    ebx
  41812a:	sub    ch,BYTE PTR [edi]
  41812c:	xchg   BYTE PTR ds:[bx],dl
  418130:	fs sahf 
  418132:	aam    0x8d
  418134:	add    eax,0x2660855
  418139:	push   cs
  41813a:	mov    BYTE PTR [esi-0x148593ae],0x82
  418141:	dec    ebx
  418142:	sbb    al,0x29
  418144:	jo     0x4181a3
  418146:	cwde   
  418147:	js     0x4181bf
  418149:	xchg   BYTE PTR [edi],ah
  41814b:	fld    TBYTE PTR [ecx+0xe]
  41814e:	stos   BYTE PTR es:[edi],al
  41814f:	rcr    BYTE PTR [ecx+0x56e82d0f],0xe4
  418156:	pop    esi
  418157:	push   0x8b7b332a
  41815c:	fmulp  st(4),st
  41815e:	pop    ebp
  41815f:	loop   0x418157
  418161:	test   al,0x65
  418163:	jge    0x4181bb
  418165:	mov    edi,0xc5e10f94
  41816a:	(bad)  
  41816b:	scas   eax,DWORD PTR es:[edi]
  41816c:	into   
  41816d:	pop    ds
  41816e:	push   edi
  41816f:	adc    eax,0xe4c3527d
  418174:	std    
  418175:	call   0xdc15:0xc0acb2e
  41817c:	bound  eax,QWORD PTR [ebp-0x27]
  41817f:	clc    
  418180:	mov    eax,0xf4aa4820
  418185:	dec    esp
  418186:	imul   esp,DWORD PTR [esi-0x46],0x2662ddc1
  41818d:	test   DWORD PTR ds:0x46c7b77c,edi
  418193:	cmp    BYTE PTR [ebx+0x49],cl
  418196:	pop    edi
  418197:	shl    bh,1
  418199:	fnstsw WORD PTR [ebx+0x79]
  41819c:	imul   edx,ecx,0xffffffc4
  41819f:	push   ebp
  4181a0:	(bad)  
  4181a1:	and    eax,0x6eff088f
  4181a6:	mov    bh,0x7c
  4181a8:	push   es
  4181a9:	add    edx,eax
  4181ab:	les    esp,FWORD PTR [esp+esi*2+0x42]
  4181af:	fcmovu st,st(2)
  4181b1:	inc    edx
  4181b2:	pop    ebp
  4181b3:	out    0x93,eax
  4181b5:	push   eax
  4181b6:	mov    ah,0x4d
  4181b8:	(bad)  
  4181b9:	jmp    0x450fbb1b
  4181be:	xchg   edi,eax
  4181bf:	mov    ecx,0x40e6779d
  4181c4:	cld    
  4181c5:	fiadd  WORD PTR [edi-0x59]
  4181c8:	add    ah,al
  4181ca:	pop    es
  4181cb:	add    eax,0x5d0889f2
  4181d0:	xlat   BYTE PTR ds:[ebx]
  4181d1:	cmp    eax,0xf1b0533c
  4181d6:	icebp  
  4181d7:	(bad)  
  4181d8:	cdq    
  4181d9:	add    eax,edi
  4181db:	shr    BYTE PTR [ecx*1-0x56c7568e],0x43
  4181e3:	cmc    
  4181e4:	hlt    
  4181e5:	inc    ecx
  4181e6:	fdivr  st(2),st
  4181e9:	xchg   esi,eax
  4181ea:	xchg   ebp,eax
  4181eb:	xor    eax,0xd50b60bd
  4181f0:	inc    ebx
  4181f1:	pop    ebp
  4181f2:	retf   0xb157
  4181f5:	popa   
  4181f6:	push   0xffffff81
  4181f8:	xchg   BYTE PTR [ecx],cl
  4181fa:	cld    
  4181fb:	xchg   esp,eax
  4181fc:	hlt    
  4181fd:	xchg   ebp,eax
  4181fe:	xchg   ecx,eax
  4181ff:	sub    esi,ebx
  418201:	fadd   DWORD PTR [edi]
  418203:	mov    al,ds:0x4926c6d2
  418209:	add    DWORD PTR [eax+0x7ab5e05e],edx
  41820f:	pop    ds
  418210:	cmp    DWORD PTR [esp+ebx*4],0xffffffee
  418214:	stos   DWORD PTR es:[edi],eax
  418215:	xchg   esi,eax
  418216:	les    ebp,FWORD PTR [edx+0x6d]
  418219:	dec    ecx
  41821a:	or     esp,ecx
  41821c:	icebp  
  41821d:	iret   
  41821e:	inc    ecx
  41821f:	mov    ds:0x237dfe97,eax
  418224:	push   ds
  418225:	inc    eax
  418226:	pop    eax
  418227:	fnstcw WORD PTR [eax-0x77]
  41822a:	aas    
  41822b:	and    BYTE PTR [ebx],cl
  41822d:	scas   al,BYTE PTR es:[edi]
  41822e:	xor    ch,0x17
  418231:	mov    ecx,0xf8a4610b
  418236:	pop    ebx
  418237:	xchg   ebx,eax
  418238:	icebp  
  418239:	pop    ss
  41823a:	push   ds
  41823b:	fxch   st(0)
  41823d:	add    eax,0xe3f4d0de
  418242:	daa    
  418243:	jno    0x418236
  418245:	jmp    0xdbcf:0x76a95360
  41824c:	jge    0x41823e
  41824e:	jns    0x41827c
  418250:	add    al,0x57
  418252:	or     eax,0xd7a849d3
  418257:	adc    al,0xe2
  418259:	sar    edi,0xd2
  41825c:	jmp    DWORD PTR [edx-0x51]
  41825f:	cmp    DWORD PTR [eax],edx
  418261:	leave  
  418262:	dec    esi
  418263:	adc    esi,esi
  418265:	dec    esi
  418266:	pushf  
  418267:	push   ecx
  418268:	(bad)  
  41826a:	push   es
  41826b:	or     DWORD PTR [ecx+0x1f0588fb],0xffffffff
  418272:	push   esi
  418273:	push   esp
  418274:	loop   0x41826c
  418276:	cmp    bh,BYTE PTR ds:0xe54d
  41827b:	cmp    esi,DWORD PTR [ebx+0x7e390bdd]
  418281:	popf   
  418282:	out    0x5a,eax
  418284:	fistp  QWORD PTR [edi]
  418286:	push   cs
  418287:	loopne 0x41828c
  418289:	repz and bl,BYTE PTR cs:[eax]
  41828d:	bound  esp,QWORD PTR [esi+0x52]
  418290:	js     0x418254
  418292:	std    
  418293:	ds sbb eax,0xa22ed4ec
  418299:	mov    cl,0x4a
  41829b:	push   ecx
  41829c:	je     0x418279
  41829e:	test   eax,0x47d7734f
  4182a3:	nop
  4182a4:	in     al,0xd3
  4182a6:	(bad)  
  4182a7:	imul   DWORD PTR [ebx-0x72]
  4182aa:	sub    al,BYTE PTR [ebp+0x2f384c08]
  4182b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182b1:	push   esp
  4182b2:	push   edx
  4182b3:	ins    BYTE PTR es:[edi],dx
  4182b4:	xor    al,al
  4182b6:	jmp    0x41829e
  4182b8:	pop    edi
  4182b9:	sbb    eax,0xbcdcd09e
  4182be:	push   edx
  4182bf:	loope  0x41824b
  4182c1:	js     0x418291
  4182c3:	jmp    0x16b75b79
  4182c8:	and    ecx,esi
  4182ca:	xchg   ebp,eax
  4182cb:	add    eax,0x2d122378
  4182d0:	cmp    eax,0x5de91ad2
  4182d5:	adc    BYTE PTR [eax+0x44716a46],cl
  4182db:	popf   
  4182dc:	inc    edx
  4182dd:	leave  
  4182de:	pop    edi
  4182df:	cmp    BYTE PTR [edi],0xaf
  4182e2:	pop    edx
  4182e3:	jecxz  0x418265
  4182e5:	mov    edi,0x36b79681
  4182ea:	xor    al,0x3b
  4182ec:	sub    BYTE PTR [ebp-0x3d],ah
  4182ef:	hlt    
  4182f0:	pushf  
  4182f1:	iret   
  4182f2:	aam    0x23
  4182f4:	or     ecx,DWORD PTR [ebp-0xd]
  4182f7:	xlat   BYTE PTR ds:[ebx]
  4182f8:	icebp  
  4182f9:	inc    eax
  4182fa:	ins    DWORD PTR es:[edi],dx
  4182fb:	cmp    esi,DWORD PTR [ecx-0x24e539a7]
  418301:	cmp    ah,BYTE PTR [ebx-0x6a15684b]
  418307:	pop    esp
  418308:	or     DWORD PTR [edi+esi*4],eax
  41830b:	dec    edx
  41830c:	add    BYTE PTR [esi-0x7a],dl
  41830f:	push   ebp
  418310:	aaa    
  418311:	jmp    0xf1ef5fc7
  418316:	pop    esi
  418317:	cwde   
  418318:	mov    dh,0x40
  41831a:	or     DWORD PTR [esi+0x70],esp
  41831d:	xchg   esi,eax
  41831e:	push   es
  41831f:	mov    bh,0xa0
  418321:	cli    
  418322:	(bad)  
  418323:	mov    edx,0x21f0bf48
  418328:	jg     0x418361
  41832a:	pop    edi
  41832b:	test   al,0x98
  41832d:	cmp    eax,0x9bc028d7
  418332:	push   eax
  418333:	(bad)
  418337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418338:	mov    bl,0x41
  41833a:	cmp    BYTE PTR [edi-0x29af9299],cl
  418340:	in     al,0xa0
  418342:	mov    al,0x5e
  418344:	popf   
  418345:	push   0x56
  418347:	cmc    
  418348:	jp     0x418304
  41834a:	jns    0x418358
  41834c:	mov    ebx,0x6b413cdb
  418351:	xor    ecx,DWORD PTR [esi+0x58459acc]
  418357:	icebp  
  418358:	fmul   DWORD PTR [ebp-0x20]
  41835b:	hlt    
  41835c:	fwait
  41835d:	neg    bl
  41835f:	test   DWORD PTR [ebp+0xc],esi
  418362:	cld    
  418363:	xchg   BYTE PTR [ebp-0x518f8856],bh
  418369:	add    BYTE PTR [ebx+0x29b23387],al
  41836f:	xchg   dx,ax
  418371:	mov    cl,0x80
  418373:	std    
  418374:	mov    dl,0x4a
  418376:	(bad)  
  418377:	das    
  418378:	dec    BYTE PTR [edx]
  41837a:	imul   edi,DWORD PTR [ebp+ecx*4+0x14e5af4b],0xfffffff5
  418382:	lods   al,BYTE PTR ds:[esi]
  418383:	lds    eax,FWORD PTR [ebp+0x58]
  418386:	mul    ebp
  418388:	mov    ch,0x4f
  41838a:	jg     0x4183a3
  41838c:	mov    BYTE PTR [esp+eiz*2],bh
  41838f:	dec    eax
  418390:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418391:	ss adc eax,0x57311530
  418397:	dec    ebx
  418398:	test   BYTE PTR [ecx+0x35],dl
  41839b:	outs   dx,BYTE PTR ds:[esi]
  41839c:	add    DWORD PTR [ecx+ebx*2+0x5a],ecx
  4183a0:	fdivrp st(3),st
  4183a2:	imul   esi,DWORD PTR [eax+0x3ec7cdd9],0xb3c4a371
  4183ac:	dec    esp
  4183ad:	mov    bh,0x44
  4183af:	fidivr DWORD PTR [ecx+0x5c]
  4183b2:	mov    db5,ebp
  4183b5:	add    dh,BYTE PTR [ebx-0x7782fc91]
  4183bb:	cld    
  4183bc:	hlt    
  4183bd:	call   0x4cdf3025
  4183c2:	and    al,0x85
  4183c4:	(bad)  [ebx+0x5cc1d026]
  4183ca:	mov    edi,0x8a9a64d2
  4183cf:	dec    ecx
  4183d0:	mov    ch,0xc8
  4183d2:	stos   BYTE PTR es:[edi],al
  4183d3:	and    eax,0x5a888b5f
  4183d8:	iret   
  4183d9:	(bad)  
  4183da:	daa    
  4183db:	fwait
  4183dc:	pop    gs
  4183de:	sub    bl,cl
  4183e0:	jl     0x418437
  4183e2:	sub    DWORD PTR ds:0xc8d9ea9d,eax
  4183e8:	(bad)  
  4183e9:	xchg   edx,eax
  4183ea:	mov    bl,0x40
  4183ec:	ds push es
  4183ee:	pusha  
  4183ef:	push   ecx
  4183f0:	xor    DWORD PTR [ecx-0x4d7b2778],esi
  4183f6:	mov    cl,0x69
  4183f8:	pop    esi
  4183f9:	loopne 0x418436
  4183fb:	(bad)  
  4183fd:	mov    ebp,0xedd06840
  418402:	sub    dh,BYTE PTR [esi-0x4cc27c5]
  418408:	out    0xea,eax
  41840a:	fwait
  41840b:	mov    ebp,0x18fa3366
  418410:	repnz fsubr DWORD PTR [esi]
  418413:	(bad)  
  418415:	aas    
  418416:	push   es
  418417:	dec    ebx
  418418:	jo     0x4183e4
  41841a:	push   ecx
  41841b:	iret   
  41841c:	aaa    
  41841d:	icebp  
  41841e:	sbb    ch,BYTE PTR [ecx+0x47f30b43]
  418424:	fdivr  QWORD PTR [ebp+0x28]
  418427:	add    al,dh
  418429:	sub    esp,DWORD PTR [eax-0x1b]
  41842c:	mov    ebp,DWORD PTR [esi]
  41842e:	pop    edi
  41842f:	sbb    al,al
  418431:	cmp    dl,0x9e
  418434:	adc    edx,ecx
  418436:	ins    BYTE PTR es:[edi],dx
  418437:	das    
  418438:	in     eax,dx
  418439:	mov    ch,0x11
  41843b:	je     0x4183d1
  41843d:	mov    DWORD PTR [eax+edi*2-0x34],esi
  418441:	inc    ebp
  418442:	mov    DWORD PTR [ebp+edx*8-0x76fc6377],ebp
  418449:	sbb    esi,ebx
  41844b:	ja     0x418498
  41844d:	gs popf 
  41844f:	scas   eax,DWORD PTR es:[edi]
  418450:	fwait
  418451:	jl     0x41841a
  418453:	ds add al,0x58
  418456:	push   ecx
  418457:	sub    ebp,0x12
  41845a:	cld    
  41845b:	out    0x7a,al
  41845d:	mov    edi,0x8f18507e
  418462:	mov    ebx,edx
  418464:	sub    eax,0xccd2dab4
  418469:	sbb    bh,BYTE PTR [ebx-0x16efa50a]
  41846f:	out    0x3b,al
  418471:	inc    ebp
  418472:	inc    ecx
  418473:	sub    DWORD PTR [eax-0x74],0x2238467
  41847a:	gs xor al,0x1e
  41847d:	rol    edi,1
  41847f:	mov    es,WORD PTR [ebp+0x5c]
  418482:	retf   0x150b
  418485:	dec    eax
  418486:	jb     0x418423
  418488:	cmp    eax,DWORD PTR [esi]
  41848a:	arpl   WORD PTR [ecx],bx
  41848c:	aaa    
  41848d:	inc    esi
  41848e:	sub    al,0x9c
  418490:	repz test DWORD PTR [ebp-0x25bb8fb9],edi
  418497:	mov    esi,0x61947b
  41849c:	push   ecx
  41849d:	mov    cl,0x79
  41849f:	das    
  4184a0:	inc    eax
  4184a1:	out    dx,al
  4184a2:	inc    esi
  4184a3:	pop    ss
  4184a4:	mov    ds:0x590e62cc,eax
  4184a9:	mov    edi,0xfef34e2f
  4184ae:	adc    cl,BYTE PTR [ebx+0x331ca19]
  4184b4:	imul   eax,DWORD PTR [ecx+esi*8+0x37f3d5e4],0x7b
  4184bc:	sbb    DWORD PTR [ebx-0x1b],ebp
  4184bf:	ss sub ebx,edi
  4184c2:	pop    eax
  4184c3:	pop    ebp
  4184c4:	jge    0x4184e3
  4184c6:	(bad)  
  4184c7:	and    eax,0x6ed36b48
  4184cc:	sub    ebp,ecx
  4184ce:	xor    eax,DWORD PTR [edx+0x2b374678]
  4184d4:	push   ecx
  4184d5:	mov    DWORD PTR [ebp+0x20],eax
  4184d8:	repnz sub edx,DWORD PTR [esi+0x17]
  4184dc:	out    0x1,eax
  4184de:	stc    
  4184df:	pop    es
  4184e0:	aad    0x68
  4184e2:	inc    esp
  4184e3:	push   cs
  4184e4:	in     al,dx
  4184e5:	fs pop ebx
  4184e7:	les    ebx,FWORD PTR [eax-0x1a]
  4184ea:	xor    BYTE PTR [ebp+0x76],al
  4184ed:	leavew 
  4184ef:	nop
  4184f0:	out    0xc8,al
  4184f2:	ja     0x4184bf
  4184f4:	jne    0x418554
  4184f6:	out    dx,eax
  4184f7:	mov    dl,0x34
  4184f9:	cmp    cl,BYTE PTR [ecx-0x37]
  4184fc:	scas   eax,DWORD PTR es:[edi]
  4184fd:	imul   ecx,DWORD PTR [edi+0xee30786],0xd6dbc1ec
  418507:	xchg   edi,eax
  418508:	rol    BYTE PTR [edx-0x16],1
  41850b:	lods   al,BYTE PTR ds:[esi]
  41850c:	or     BYTE PTR [ecx-0x5e],ah
  41850f:	mov    dl,0x77
  418511:	sar    BYTE PTR ss:[ebx+0x1d],0x41
  418516:	enter  0x843f,0x7f
  41851a:	aaa    
  41851b:	in     eax,0x4b
  41851d:	pushf  
  41851e:	xchg   ebx,eax
  41851f:	leave  
  418520:	push   edi
  418521:	popf   
  418522:	mov    ah,0xd3
  418524:	aaa    
  418525:	cmp    esp,DWORD PTR [ebx+0xaf90a82]
  41852b:	call   0xa9d49430
  418530:	sbb    edx,DWORD PTR [edx+0x20]
  418533:	xor    esp,DWORD PTR [ebp+0xc8d46a1]
  418539:	push   ecx
  41853a:	xchg   BYTE PTR [edi],dh
  41853c:	repz mov dl,0x90
  41853f:	(bad)  
  418540:	mov    bh,BYTE PTR [esi+ebx*1]
  418543:	mov    ch,al
  418545:	ret    
  418546:	sbb    bl,BYTE PTR [edi+0x2793a3cd]
  41854c:	push   ds
  41854d:	cmp    ah,BYTE PTR [ecx+0x2fa21cf9]
  418553:	loop   0x418531
  418555:	mov    dh,0x73
  418557:	adc    eax,0x1a7fbc32
  41855c:	xchg   eax,ebx
  41855e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41855f:	jae    0x418529
  418561:	leave  
  418562:	inc    esp
  418563:	adc    dl,ah
  418565:	js     0x418591
  418567:	or     ebx,DWORD PTR [ebx-0x45]
  41856a:	hlt    
  41856b:	repnz pop ebx
  41856d:	in     al,dx
  41856e:	test   al,0xa9
  418570:	push   ebx
  418571:	mov    edx,edx
  418573:	adc    dl,BYTE PTR [edi-0x1c]
  418576:	mov    ecx,0xa243e977
  41857b:	pop    ss
  41857c:	bound  edx,QWORD PTR [eax]
  41857e:	sub    eax,0x57e7d966
  418583:	mov    dl,0x25
  418585:	cld    
  418586:	sub    al,0x20
  418588:	scas   eax,DWORD PTR es:[edi]
  418589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41858a:	adc    eax,0xb462bcc9
  41858f:	(bad)  
  418590:	push   ds
  418591:	jle    0x418581
  418593:	xchg   BYTE PTR [edx],cl
  418595:	add    ebp,DWORD PTR [ebx+0x50]
  418598:	ret    0x27eb
  41859b:	lods   al,BYTE PTR ds:[esi]
  41859c:	test   eax,0x2b0fba0f
  4185a1:	rcr    ebx,cl
  4185a3:	jae    0x41853f
  4185a5:	pop    esp
  4185a6:	mov    esp,0xefa8fb3e
  4185ab:	int3   
  4185ac:	jb     0x4185da
  4185ae:	lods   eax,DWORD PTR ds:[esi]
  4185af:	fs jb  0x4185e9
  4185b2:	loopne 0x418598
  4185b4:	js     0x418575
  4185b6:	xor    al,0xff
  4185b8:	mov    WORD PTR [ebp-0x7c],?
  4185bb:	mov    ds:0xffc2fd37,al
  4185c0:	inc    edi
  4185c1:	(bad)  
  4185c2:	iret   
  4185c3:	bswap  ebx
  4185c5:	or     dl,BYTE PTR [ebx+0x19]
  4185c8:	inc    eax
  4185c9:	xor    BYTE PTR ds:0xbd030212,ah
  4185cf:	loop   0x4185a2
  4185d1:	in     al,0xeb
  4185d3:	push   esp
  4185d4:	sub    BYTE PTR [esi+edi*1+0x5aaab341],0x69
  4185dc:	(bad)  
  4185dd:	jp     0x418608
  4185df:	cwde   
  4185e0:	shl    DWORD PTR [eax],cl
  4185e2:	lods   al,BYTE PTR ds:[esi]
  4185e3:	pop    es
  4185e4:	out    0x32,al
  4185e6:	push   ecx
  4185e7:	sahf   
  4185e8:	ret    
  4185e9:	lds    esi,FWORD PTR [ebp-0x19]
  4185ec:	push   esp
  4185ed:	sub    BYTE PTR [edi],bh
  4185ef:	inc    ebp
  4185f0:	loop   0x418613
  4185f2:	add    ebp,ebp
  4185f4:	push   ss
  4185f5:	add    BYTE PTR [eax],0x1e
  4185f8:	adc    al,0xbb
  4185fa:	jp     0x41865a
  4185fc:	push   esp
  4185fd:	ret    0x3db8
  418600:	cmc    
  418601:	enter  0xe89e,0x24
  418605:	jo     0x4185d9
  418607:	leave  
  418608:	popf   
  418609:	jns    0x4185d3
  41860b:	mov    edx,0x108cca2e
  418610:	push   ebp
  418611:	scas   eax,DWORD PTR es:[edi]
  418612:	fmul   DWORD PTR [ebx]
  418614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418615:	dec    eax
  418616:	adc    BYTE PTR [ecx-0x31a3470a],0xf2
  41861d:	gs jg  0x41861a
  418620:	jno    0x418663
  418622:	jecxz  0x418631
  418624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418625:	xlat   BYTE PTR ds:[ebx]
  418626:	int3   
  418627:	rcl    DWORD PTR [ebx+ecx*1-0x3f0055ac],0xb3
  41862f:	dec    edx
  418630:	mov    ds:0x18f03104,al
  418635:	sbb    DWORD PTR [ebx+ecx*1],eax
  418638:	sbb    bl,ah
  41863a:	adc    eax,0xaab362bb
  41863f:	dec    BYTE PTR [edx+0x1a]
  418642:	xor    BYTE PTR [ebp+0x1c69c91f],0xa2
  418649:	inc    eax
  41864a:	pop    edx
  41864b:	inc    esi
  41864c:	pop    ds
  41864d:	aaa    
  41864e:	mov    al,0x7
  418650:	out    0xb8,eax
  418652:	out    0xd,eax
  418654:	and    edi,DWORD PTR [esi]
  418656:	je     0x418634
  418658:	dec    ebx
  418659:	jns    0x418666
  41865b:	aam    0x24
  41865d:	jg     0x41863b
  41865f:	cmp    BYTE PTR [edx+0x23],cl
  418662:	cmp    BYTE PTR [edi],0x28
  418665:	imul   edx,DWORD PTR [eax+0x5c95fc06],0x6e5c294f
  41866f:	adc    al,bh
  418671:	mov    cl,0x6a
  418673:	jbe    0x4186e9
  418675:	jl     0x418609
  418677:	mov    ah,0xda
  418679:	jge    0x418690
  41867b:	ins    DWORD PTR es:[edi],dx
  41867c:	mov    BYTE PTR [ebp+0xcd5e200],ch
  418682:	sub    ch,BYTE PTR [edx-0x1b]
  418685:	ss pop edx
  418687:	pop    esi
  418688:	cmp    esi,edx
  41868a:	call   0x55ec:0xb075a381
  418691:	inc    eax
  418692:	adc    esi,ecx
  418694:	xchg   ebx,eax
  418695:	mov    edx,0xd0337e2e
  41869a:	mov    DWORD PTR [ebp+0x8],edx
  41869d:	mov    edx,DWORD PTR [ebp+0x8]
  4186a0:	mov    ebx,DWORD PTR [ebp-0x58]
  4186a3:	add    edx,0x5708c0
  4186a9:	imul   edx,ebx
  4186ac:	mov    DWORD PTR [ebp-0x58],edx
  4186af:	mov    edx,DWORD PTR [ebp+0x8]
  4186b2:	mov    ebx,DWORD PTR [ebp-0x54]
  4186b5:	add    edx,0x64f8a2
  4186bb:	or     edx,ebx
  4186bd:	mov    DWORD PTR [ebp-0x54],edx
  4186c0:	mov    edx,DWORD PTR [ebp+0x8]
  4186c3:	mov    ebx,DWORD PTR [ebp-0x50]
  4186c6:	add    edx,ecx
  4186c8:	xor    edx,ebx
  4186ca:	mov    DWORD PTR [ebp-0x50],edx
  4186cd:	mov    edx,DWORD PTR [ebp+0x8]
  4186d0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4186d3:	add    edx,edi
  4186d5:	and    edx,ebx
  4186d7:	mov    DWORD PTR [ebp-0x4c],edx
  4186da:	mov    edx,DWORD PTR [ebp+0x8]
  4186dd:	mov    ebx,DWORD PTR [ebp-0x48]
  4186e0:	lea    edx,[ebx+edx*1+0x241fc1f]
  4186e7:	mov    DWORD PTR [ebp-0x48],edx
  4186ea:	mov    edx,DWORD PTR [ebp+0x8]
  4186ed:	mov    ebx,0xfa5e15e2
  4186f2:	sub    ebx,edx
  4186f4:	add    ebx,DWORD PTR [ebp-0x44]
  4186f7:	jmp    0x41aab2
  4186fc:	or     ch,BYTE PTR [edi+0x35]
  4186ff:	aad    0xf7
  418701:	mov    bh,0x8a
  418703:	(bad)  
  418704:	sahf   
  418705:	fidivr DWORD PTR [ecx+0x6a12c0fb]
  41870b:	inc    ebx
  41870c:	add    eax,0xd0727d33
  418711:	pop    edi
  418712:	jb     0x418786
  418714:	(bad)  [edx-0x65c734a4]
  41871a:	dec    eax
  41871b:	ja     0x4186e5
  41871d:	xor    eax,DWORD PTR [eax]
  41871f:	mov    esi,0x6b8b7df9
  418724:	push   edx
  418725:	push   0x59fadd09
  41872a:	es ss push esi
  41872d:	push   ebp
  41872e:	and    BYTE PTR ds:0x78204923,bh
  418734:	jb     0x41874e
  418736:	(bad)  
  418737:	jns    0x418787
  418739:	pop    esp
  41873a:	xor    al,0xe7
  41873c:	push   ebp
  41873d:	mov    ebp,0xc38c5912
  418742:	pop    edx
  418743:	push   eax
  418744:	push   es
  418745:	aaa    
  418746:	sub    DWORD PTR [ecx+0x4e],esi
  418749:	cmp    DWORD PTR [esi+0x18],ebx
  41874c:	push   edx
  41874d:	fisttp DWORD PTR [esi-0x3fe24c48]
  418753:	jg     0x4186dd
  418755:	adc    DWORD PTR [edx],eax
  418757:	pop    ds
  418758:	cdq    
  418759:	mov    eax,0xefcec834
  41875e:	stos   DWORD PTR es:[edi],eax
  41875f:	js     0x418777
  418761:	jbe    0x418711
  418763:	ret    0xfc12
  418766:	push   0xffffffa6
  418768:	shr    DWORD PTR [eiz*4+0x3aa56159],1
  41876f:	mov    esp,0xf1d1f077
  418774:	cmp    cl,BYTE PTR [edi+0x61c86779]
  41877a:	popf   
  41877b:	stos   DWORD PTR es:[edi],eax
  41877c:	mov    BYTE PTR [edx-0x55],ah
  41877f:	ja     0x4187f7
  418781:	adc    bh,BYTE PTR [edx]
  418783:	inc    ebx
  418784:	pop    ebp
  418785:	(bad)  
  418786:	pusha  
  418787:	fimul  DWORD PTR [ebx-0x25]
  41878a:	sub    DWORD PTR [esi],0x4bd71284
  418790:	jbe    0x41875d
  418792:	sar    DWORD PTR [ecx-0x11],cl
  418795:	pop    ecx
  418796:	sbb    eax,0x64516467
  41879b:	icebp  
  41879c:	sbb    eax,0x6802cb59
  4187a1:	mov    al,0xba
  4187a3:	push   es
  4187a4:	push   ds
  4187a5:	sub    DWORD PTR [eax+0x57751b61],esi
  4187ab:	xchg   dh,ch
  4187ad:	scas   al,BYTE PTR es:[edi]
  4187ae:	jl     0x41876a
  4187b0:	les    ebx,FWORD PTR [esi+0x63]
  4187b3:	test   BYTE PTR [edi],dh
  4187b5:	xchg   edi,eax
  4187b6:	fld    QWORD PTR [edi]
  4187b8:	fdiv   st(0),st
  4187ba:	fdiv   QWORD PTR [ecx]
  4187bc:	int3   
  4187bd:	xor    dh,cl
  4187bf:	mov    edi,0x2eb7b66f
  4187c4:	fcmovb st,st(5)
  4187c6:	(bad)  
  4187c7:	adc    al,0x5f
  4187c9:	mov    ds:0x9b3c922b,al
  4187ce:	or     bh,bh
  4187d0:	pushf  
  4187d1:	sub    eax,DWORD PTR [ecx]
  4187d3:	jo     0x418821
  4187d5:	pop    ecx
  4187d6:	repnz fiadd WORD PTR [ebp+0x757077ff]
  4187dd:	pop    ebx
  4187de:	bound  edx,QWORD PTR [edx+0x6a]
  4187e1:	sub    BYTE PTR ds:0x78b3d1e2,0xf7
  4187e8:	inc    ebp
  4187e9:	(bad)  
  4187ea:	popa   
  4187eb:	and    BYTE PTR [ebp+0x12],dh
  4187ee:	jmp    0x7a4870b2
  4187f3:	sub    al,0x90
  4187f5:	imul   ebx,DWORD PTR [ebp-0x22208b1d],0x48
  4187fc:	jl     0x418835
  4187fe:	dec    edx
  4187ff:	push   esp
  418800:	(bad)  
  418801:	mov    esi,0x999ae8d5
  418806:	xchg   edx,eax
  418807:	loope  0x41884f
  418809:	sub    al,0xd8
  41880b:	jmp    0x4046:0x2c0d23cd
  418812:	inc    esi
  418813:	in     eax,dx
  418814:	out    dx,eax
  418815:	sbb    al,ah
  418817:	dec    ecx
  418818:	imul   eax,DWORD PTR [ecx-0x5f],0xd197bc14
  41881f:	add    eax,0xbebb0b7b
  418824:	or     BYTE PTR [esi-0x715893],ch
  41882a:	mov    esp,0x81edbad8
  41882f:	and    al,0x92
  418831:	daa    
  418832:	pop    ss
  418833:	fst    st(1)
  418835:	lods   al,BYTE PTR ds:[esi]
  418836:	xchg   ebx,eax
  418837:	mov    al,0xf4
  418839:	pop    ecx
  41883a:	mov    edi,0xfd232828
  41883f:	jo     0x41889e
  418841:	aam    0x60
  418843:	or     BYTE PTR [edx],0xcc
  418846:	jns    0x4188c5
  418848:	jl     0x418884
  41884a:	in     al,dx
  41884b:	imul   edi,DWORD PTR [ecx],0xffffffea
  41884e:	pusha  
  41884f:	ss or  BYTE PTR gs:[edi-0x4],ch
  418854:	jecxz  0x4187df
  418856:	xchg   edx,eax
  418857:	(bad)  
  418858:	shl    BYTE PTR [esi-0x61e79428],1
  41885e:	aaa    
  41885f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418860:	mov    WORD PTR [edx+0x64],gs
  418863:	push   ebx
  418864:	sub    BYTE PTR fs:[edx-0x47],bh
  418868:	and    eax,0xd562eeb
  41886d:	push   ebp
  41886e:	imul   edx,DWORD PTR [ebp-0x2495dede],0x55
  418875:	das    
  418876:	leave  
  418877:	loop   0x4188e7
  418879:	inc    esp
  41887a:	jp     0x4188e9
  41887c:	addr16 push ds
  41887e:	addr16 mov ch,dl
  418881:	pop    eax
  418882:	inc    esi
  418883:	mov    dl,0x8
  418885:	jnp    0x4188c9
  418887:	xchg   ebp,eax
  418888:	mov    esi,0xe45062d1
  41888d:	jl     0x4188df
  41888f:	cs xchg esp,eax
  418891:	int    0x7c
  418893:	pop    ds
  418894:	inc    esp
  418895:	lock iret 
  418897:	lods   eax,DWORD PTR ds:[esi]
  418898:	mov    es,ebp
  41889a:	enter  0x6b9d,0xfd
  41889e:	sbb    DWORD PTR [ecx-0x36],edx
  4188a1:	test   DWORD PTR [ebx-0x47],esp
  4188a4:	pop    edx
  4188a5:	sbb    DWORD PTR ds:[edx-0x33],edx
  4188a9:	inc    esp
  4188aa:	sbb    al,0x35
  4188ac:	or     al,0x9d
  4188ae:	sti    
  4188af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188b1:	inc    edi
  4188b2:	inc    eax
  4188b3:	push   ecx
  4188b4:	fst    QWORD PTR ds:0xb34580b3
  4188ba:	pusha  
  4188bb:	sub    DWORD PTR [edx],ebx
  4188bd:	ins    BYTE PTR es:[edi],dx
  4188be:	mov    bh,0x5c
  4188c0:	pusha  
  4188c1:	xor    bh,BYTE PTR [esi-0x7b]
  4188c4:	or     esi,DWORD PTR [ecx-0x6f]
  4188c7:	sbb    eax,0x71a1834
  4188cc:	es jno 0x418888
  4188cf:	add    BYTE PTR [ecx-0xc],bl
  4188d2:	outs   dx,BYTE PTR ds:[esi]
  4188d3:	jge    0x41887a
  4188d5:	in     eax,0x98
  4188d7:	xor    dh,0xa2
  4188da:	sahf   
  4188db:	mov    al,ds:0x2e5cd486
  4188e0:	jl     0x4188bc
  4188e2:	lds    ebx,FWORD PTR [esi+edx*4]
  4188e5:	xor    DWORD PTR [eax-0x28],ebp
  4188e8:	dec    eax
  4188e9:	jns    0x41894f
  4188eb:	rcr    bl,0x5d
  4188ee:	scas   eax,DWORD PTR es:[edi]
  4188ef:	mov    BYTE PTR [ecx+0x1597671b],ch
  4188f5:	adc    BYTE PTR [ecx],ah
  4188f7:	ins    DWORD PTR es:[edi],dx
  4188f8:	mov    al,ds:0xe792ae48
  4188fd:	mov    ds:0xa88d97c4,eax
  418903:	test   DWORD PTR [esi-0x69],esp
  418906:	pop    ds
  418907:	inc    eax
  418908:	loopne 0x418988
  41890a:	sbb    eax,DWORD PTR [edi-0x74]
  41890d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41890e:	lods   al,BYTE PTR ds:[esi]
  41890f:	mov    dh,0x98
  418911:	and    al,0xea
  418913:	(bad)  
  418914:	fnsave [ebp-0x53938228]
  41891a:	sub    BYTE PTR [edx+0x5e85928c],bl
  418920:	loope  0x418978
  418922:	add    eax,0x1bdecf48
  418927:	sub    DWORD PTR [esi+0x5e],esi
  41892a:	sub    DWORD PTR [eax],eax
  41892c:	mov    ecx,0x78094be2
  418931:	fdivr  QWORD PTR [edi+0x611b658a]
  418937:	out    0x22,al
  418939:	fisttp WORD PTR [ebp*2+0x721d055]
  418940:	sbb    eax,0x73a3f03d
  418945:	shl    BYTE PTR [ecx+0x38],0xd
  418949:	mov    ah,0x7d
  41894b:	test   eax,edi
  41894d:	sbb    eax,0xe7e39149
  418952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418953:	fwait
  418954:	xchg   ebx,eax
  418955:	ins    DWORD PTR es:[edi],dx
  418956:	shl    al,0x91
  418959:	mov    ebp,0xf857631d
  41895e:	pop    esp
  41895f:	sysret 
  418961:	es aam 0x3f
  418964:	xchg   DWORD PTR [ecx+0x20],esp
  418967:	jmp    0x418967
  418969:	inc    edi
  41896a:	arpl   WORD PTR es:[ecx],ax
  41896d:	or     DWORD PTR [esi],ebx
  41896f:	or     eax,0x5b3ce03c
  418974:	push   esp
  418975:	dec    esp
  418976:	cmc    
  418977:	or     esi,ecx
  418979:	aas    
  41897a:	sahf   
  41897b:	push   ecx
  41897c:	retf   0x58d8
  41897f:	push   eax
  418980:	stc    
  418981:	sti    
  418982:	stc    
  418983:	jnp    0x41898e
  418985:	jl     0x418952
  418987:	call   0x8f71:0xc176fea8
  41898e:	ja     0x418995
  418990:	xchg   al,ah
  418992:	dec    esi
  418993:	push   cs
  418994:	mov    eax,DWORD PTR [ebp+0x35]
  418997:	cmp    al,0xa5
  418999:	jbe    0x4189c4
  41899b:	test   DWORD PTR [eax-0x66a65de9],eax
  4189a1:	inc    esp
  4189a2:	jne    0x41897f
  4189a4:	shl    dl,1
  4189a6:	jne    0x418945
  4189a8:	call   0x35b9:0xe2c00b17
  4189af:	add    ebp,ecx
  4189b1:	fiadd  WORD PTR [ebp+edi*8+0x26]
  4189b5:	xchg   edi,eax
  4189b6:	cmp    eax,0x96af2e24
  4189bb:	push   ebp
  4189bc:	repnz dec edi
  4189be:	pop    ds
  4189bf:	push   esi
  4189c0:	or     ebx,DWORD PTR [esi-0x49]
  4189c3:	addr16 dec ecx
  4189c5:	ins    BYTE PTR es:[edi],dx
  4189c6:	dec    ecx
  4189c7:	pop    es
  4189c8:	pop    ss
  4189c9:	imul   ecx,DWORD PTR [ebp-0x6ac3fe2c],0xffffffc2
  4189d0:	jge    0x418a41
  4189d2:	xchg   ebx,edx
  4189d4:	out    0x1b,eax
  4189d6:	cwde   
  4189d7:	ins    DWORD PTR es:[edi],dx
  4189d8:	dec    ebp
  4189d9:	les    esi,FWORD PTR [edx-0xb]
  4189dc:	add    eax,0xffffff90
  4189df:	inc    ebx
  4189e0:	mov    eax,0x4e62ebc8
  4189e5:	jno    0x418a43
  4189e7:	shl    BYTE PTR [esi],1
  4189e9:	xchg   edi,eax
  4189ea:	sub    DWORD PTR [eax+ebp*2],eax
  4189ed:	xchg   esi,eax
  4189ee:	sbb    eax,0x66d5766c
  4189f3:	ret    
  4189f4:	in     al,0x51
  4189f6:	dec    eax
  4189f7:	out    dx,al
  4189f8:	into   
  4189f9:	fs mov al,0xc8
  4189fc:	pop    ecx
  4189fd:	retf   
  4189fe:	xchg   esp,eax
  4189ff:	mov    dh,0x4d
  418a01:	sahf   
  418a02:	inc    edi
  418a03:	mov    BYTE PTR [edi+esi*4],dl
  418a06:	enter  0xa42,0x38
  418a0a:	nop
  418a0b:	add    al,0x52
  418a0d:	mov    bl,BYTE PTR [eax-0x3e1c979b]
  418a13:	mov    ah,0x79
  418a15:	inc    esi
  418a16:	cmp    BYTE PTR [ebx+0x6d],ch
  418a19:	push   dx
  418a1b:	pop    ds
  418a1c:	call   0x6cd75e4e
  418a21:	cmp    al,0xb2
  418a23:	push   edx
  418a24:	lea    edx,[ebp-0x49]
  418a27:	adc    eax,0x5226035c
  418a2c:	ja     0x4189b9
  418a2e:	mov    ecx,DWORD PTR [edi-0x3]
  418a31:	shl    DWORD PTR [esi+0x53],cl
  418a34:	pop    eax
  418a35:	mov    dh,0x48
  418a37:	sub    bh,BYTE PTR [edx+0x68]
  418a3a:	aas    
  418a3b:	(bad)  
  418a3c:	add    BYTE PTR es:[ecx+0xae629f3],bh
  418a43:	aam    0x30
  418a45:	sub    ebx,DWORD PTR [edx+edi*1]
  418a48:	xor    al,dh
  418a4a:	xor    BYTE PTR [esi+0x73dd6b67],ah
  418a50:	in     al,0x62
  418a52:	add    eax,0x9a3b19d2
  418a57:	mov    ecx,0xf43cbf0c
  418a5c:	sbb    dh,BYTE PTR [edx-0x36425600]
  418a62:	cmp    BYTE PTR [eax],dl
  418a64:	push   esp
  418a65:	and    eax,0x77542629
  418a6a:	push   ss
  418a6b:	mov    eax,DWORD PTR [ecx-0x71]
  418a6e:	cmc    
  418a6f:	dec    edx
  418a70:	xchg   edi,eax
  418a71:	inc    esi
  418a72:	mov    bh,0x9c
  418a74:	fxam   
  418a76:	jp     0x418ad5
  418a78:	dec    ebp
  418a79:	aam    0x48
  418a7b:	pop    ecx
  418a7c:	push   ebx
  418a7d:	pushf  
  418a7e:	sbb    al,0x79
  418a80:	in     eax,dx
  418a81:	jle    0x418afa
  418a83:	xchg   DWORD PTR [ebx-0x13],esi
  418a86:	dec    ebx
  418a87:	(bad)  
  418a88:	lock sar al,1
  418a8b:	or     al,0xef
  418a8d:	mov    al,ds:0xe5eb16c
  418a92:	cmp    bh,bh
  418a94:	push   cs
  418a95:	or     ebp,DWORD PTR ds:0xbfc39fca
  418a9b:	(bad)  
  418a9c:	sbb    DWORD PTR [edx],edi
  418a9e:	jb     0x418ae3
  418aa0:	dec    esp
  418aa1:	int3   
  418aa2:	test   DWORD PTR [ebp-0x25],ecx
  418aa5:	or     cl,BYTE PTR [ecx]
  418aa7:	cmp    DWORD PTR [edx+0x35],ebp
  418aaa:	outs   dx,BYTE PTR ds:[esi]
  418aab:	jmp    0x418b06
  418aad:	imul   edi,DWORD PTR [edi+0x49a12d13],0xbbb3be48
  418ab7:	outs   dx,DWORD PTR ds:[esi]
  418ab8:	out    dx,eax
  418ab9:	adc    al,0x2
  418abb:	add    ebp,DWORD PTR [edx-0x49]
  418abe:	mov    BYTE PTR [eax],cl
  418ac0:	ficom  WORD PTR [ebx+0x24402db8]
  418ac6:	mov    edx,0xb52310be
  418acb:	dec    eax
  418acc:	push   cs
  418acd:	xchg   esi,eax
  418ace:	mul    DWORD PTR [ecx+0x55db27a8]
  418ad4:	mov    bl,0x89
  418ad6:	ret    
  418ad7:	add    bl,bh
  418ad9:	pop    esp
  418ada:	jmp    FWORD PTR [esi+0x1fd942f3]
  418ae0:	mov    BYTE PTR [ecx],0xc7
  418ae3:	fs push ebp
  418ae5:	cli    
  418ae6:	and    DWORD PTR [esi],esi
  418ae8:	sbb    ebx,edx
  418aea:	push   eax
  418aeb:	xor    al,0xff
  418aed:	repz std 
  418aef:	jmp    0x5cfa0e14
  418af4:	pop    ds
  418af5:	adc    dl,cl
  418af7:	shl    BYTE PTR [ebx+0xe],1
  418afa:	loopne 0x418ace
  418afc:	loopne 0x418a88
  418afe:	dec    ecx
  418aff:	fstp   QWORD PTR [edi-0x5aca8597]
  418b05:	and    BYTE PTR [eax+0x6c71cc79],bl
  418b0b:	dec    ebp
  418b0c:	(bad)  
  418b0d:	in     al,0xf2
  418b0f:	rcr    DWORD PTR [ebx-0x5958b925],cl
  418b15:	xchg   ecx,eax
  418b16:	dec    eax
  418b17:	push   ebx
  418b18:	add    eax,0x23d90ace
  418b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b1e:	dec    edi
  418b1f:	mov    ds:0x4922587f,al
  418b24:	fist   WORD PTR ds:0x8f76b927
  418b2a:	xchg   ecx,eax
  418b2b:	sbb    dl,BYTE PTR [edi+ebp*4+0x42]
  418b2f:	arpl   WORD PTR ds:0xd53f0f75,bx
  418b35:	cli    
  418b36:	in     al,0x1d
  418b38:	shl    DWORD PTR [esi-0x533170ec],0x9d
  418b3f:	cmp    eax,0x7452a2a4
  418b44:	inc    ebx
  418b45:	aas    
  418b46:	call   DWORD PTR [esi-0x6454b5b]
  418b4c:	jno    0x418b6d
  418b4e:	mov    dl,0x34
  418b50:	std    
  418b51:	pop    eax
  418b52:	popa   
  418b53:	icebp  
  418b54:	mov    eax,DWORD PTR [ecx+0x76bf5a0c]
  418b5a:	push   ds
  418b5b:	dec    ecx
  418b5c:	sti    
  418b5d:	adc    ebp,esi
  418b5f:	mov    ebx,0x85f1d07b
  418b64:	mov    bh,0x81
  418b66:	or     BYTE PTR [eax+0x2b900745],al
  418b6c:	jne    0x418b40
  418b6e:	dec    edx
  418b6f:	mov    esp,0x25a6f48f
  418b74:	adc    eax,0x45fde3ba
  418b79:	pop    es
  418b7a:	fisub  DWORD PTR [edi]
  418b7c:	sahf   
  418b7d:	push   esp
  418b7e:	cmovb  esp,DWORD PTR [ecx-0x4c]
  418b82:	scas   eax,DWORD PTR es:[edi]
  418b83:	mov    edi,0xfeb48b29
  418b88:	test   BYTE PTR [ebp+0x1c],bl
  418b8b:	adc    ebx,DWORD PTR [ebp+0x52f63d06]
  418b91:	sub    dh,BYTE PTR [ebp-0x329b369a]
  418b97:	cmp    cl,BYTE PTR [esp+edx*2]
  418b9a:	idiv   ch
  418b9c:	pop    es
  418b9d:	add    eax,0x5cd54f2a
  418ba2:	push   eax
  418ba3:	bound  ebx,QWORD PTR [esi+0x17]
  418ba6:	clc    
  418ba7:	stos   DWORD PTR es:[edi],eax
  418ba8:	jg     0x418c22
  418baa:	cld    
  418bab:	sub    ah,ah
  418bad:	retf   0xb888
  418bb0:	fnstenv [edx]
  418bb2:	ffreep st(4)
  418bb4:	mov    ecx,0xaff68fba
  418bb9:	cwde   
  418bba:	cs in  eax,0x23
  418bbd:	test   BYTE PTR [ecx+0x563fe97e],dh
  418bc3:	push   edi
  418bc4:	push   eax
  418bc5:	js     0x418bc6
  418bc7:	jo     0x418bb7
  418bc9:	addr16 into 
  418bcb:	outs   dx,DWORD PTR ds:[esi]
  418bcc:	xchg   esi,eax
  418bcd:	mov    al,ds:0x6663d0e9
  418bd2:	lahf   
  418bd3:	or     cl,dh
  418bd5:	jne    0x418bcd
  418bd7:	fisub  WORD PTR [ecx-0x26]
  418bda:	sbb    DWORD PTR [edi],edi
  418bdc:	shl    BYTE PTR ds:0x22e094a1,1
  418be2:	cwde   
  418be3:	into   
  418be4:	std    
  418be5:	or     eax,0x36925f08
  418bea:	or     al,0xc2
  418bec:	mov    edi,0xdf2d955c
  418bf1:	push   ebx
  418bf2:	add    ah,ch
  418bf4:	into   
  418bf5:	cli    
  418bf6:	sbb    al,0x9e
  418bf8:	inc    esp
  418bf9:	es and eax,0xf2f6761
  418bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c00:	cwde   
  418c01:	jns    0x418c06
  418c03:	mov    edi,0xc7549724
  418c09:	(bad)  
  418c0a:	not    BYTE PTR [ebp+0x35]
  418c0d:	out    dx,al
  418c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c0f:	rol    BYTE PTR [esi-0x4a],cl
  418c12:	imul   ecx,ebx,0x2efa1e3f
  418c18:	jmp    0xee116e24
  418c1d:	jl     0x418bca
  418c1f:	cmp    bl,bh
  418c21:	or     BYTE PTR [ebx+0x18c5eed7],dh
  418c27:	ja     0x418c9d
  418c29:	stos   DWORD PTR es:[edi],eax
  418c2a:	inc    ecx
  418c2b:	fyl2xp1 
  418c2d:	fisttp WORD PTR [ecx]
  418c2f:	mov    BYTE PTR [edi*4-0xf5c87ad],cl
  418c36:	mov    WORD PTR [ebp-0x3dbfde2],gs
  418c3c:	xor    esp,DWORD PTR [ebp-0x45]
  418c3f:	test   BYTE PTR [eax],al
  418c41:	or     ch,ch
  418c43:	test   edi,0x7ecd19f9
  418c49:	cmp    BYTE PTR [edx],ah
  418c4b:	js     0x418c7b
  418c4d:	lahf   
  418c4e:	mov    esi,DWORD PTR ss:[ecx-0x56751ea7]
  418c55:	iret   
  418c56:	pop    edx
  418c57:	leave  
  418c58:	faddp  st(7),st
  418c5a:	mov    dh,0x2f
  418c5c:	lahf   
  418c5d:	ss cmp al,0x21
  418c60:	xlat   BYTE PTR ds:[ebx]
  418c61:	adc    esp,0x5cd109ef
  418c67:	xchg   ecx,eax
  418c68:	and    eax,0x14cb6f9f
  418c6d:	inc    eax
  418c6e:	es sti 
  418c70:	pop    esp
  418c71:	lar    edx,WORD PTR [esi]
  418c74:	daa    
  418c75:	sar    BYTE PTR [ebx+0x4b],cl
  418c78:	xor    eax,0x54c384a9
  418c7d:	cld    
  418c7e:	xchg   esi,eax
  418c7f:	add    al,0x36
  418c81:	hlt    
  418c82:	sub    edi,DWORD PTR [eiz*4+0x591e24ed]
  418c89:	add    al,0xea
  418c8b:	in     eax,dx
  418c8c:	mov    bh,0x20
  418c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c8f:	popa   
  418c90:	(bad)  
  418c92:	in     eax,dx
  418c93:	lock dec ebx
  418c95:	daa    
  418c96:	adc    DWORD PTR [ebx],esp
  418c98:	xor    DWORD PTR [edx+0x4d53eb5b],ebp
  418c9e:	inc    ebx
  418c9f:	adc    DWORD PTR [ecx+ecx*4-0x5d],ebp
  418ca3:	pop    ecx
  418ca4:	stos   BYTE PTR es:[edi],al
  418ca5:	fisub  WORD PTR gs:[ebp+0x2f]
  418ca9:	xchg   ecx,eax
  418caa:	push   ds
  418cab:	push   ecx
  418cac:	mov    ebx,0x6ef7ae6c
  418cb1:	sbb    edx,ecx
  418cb3:	jl     0x418ce4
  418cb5:	jp     0x418ccb
  418cb7:	test   eax,0x5f761b6e
  418cbc:	inc    edi
  418cbd:	aaa    
  418cbe:	pop    ds
  418cbf:	jp     0x418ca4
  418cc1:	xchg   edx,eax
  418cc2:	pop    ecx
  418cc3:	leave  
  418cc4:	jnp    0x418cfc
  418cc6:	test   DWORD PTR [eax-0x17277c04],eax
  418ccc:	loopne 0x418c62
  418cce:	test   BYTE PTR [ebx+0x925439f],cl
  418cd4:	or     eax,0xab564a8c
  418cd9:	cmp    esp,eax
  418cdb:	add    al,0xb7
  418cdd:	repz mov bh,bl
  418ce0:	mov    ah,0xc4
  418ce2:	lea    edi,[edx+0x645aca42]
  418ce8:	ror    ebp,cl
  418cea:	mov    cs,edi
  418cec:	push   0x2d
  418cee:	shl    DWORD PTR [ebp+0x75],1
  418cf1:	xchg   ebp,eax
  418cf2:	ins    DWORD PTR es:[edi],dx
  418cf3:	push   ecx
  418cf4:	cdq    
  418cf5:	fs div bl
  418cf8:	jl     0x418ca0
  418cfa:	xchg   esi,eax
  418cfb:	cli    
  418cfc:	div    DWORD PTR [ebx]
  418cfe:	ins    DWORD PTR es:[edi],dx
  418cff:	mov    ah,0x70
  418d01:	leave  
  418d02:	icebp  
  418d03:	in     al,0xca
  418d05:	push   esi
  418d06:	stos   BYTE PTR es:[edi],al
  418d07:	lods   eax,DWORD PTR ds:[esi]
  418d08:	shr    BYTE PTR [ebp-0x27a25f82],cl
  418d0e:	aaa    
  418d0f:	outs   dx,BYTE PTR ds:[esi]
  418d10:	ja     0x418c97
  418d12:	adc    eax,0x48eead4
  418d17:	aam    0x1
  418d19:	or     eax,DWORD PTR [ecx+0x7f]
  418d1c:	cmp    al,0x2
  418d1e:	xor    ebx,DWORD PTR [esi+0x752449b5]
  418d24:	cmp    cl,BYTE PTR [eax+0x6f5a6c01]
  418d2a:	dec    ecx
  418d2b:	aas    
  418d2c:	fs mov dl,0x2
  418d2f:	outs   dx,DWORD PTR ds:[esi]
  418d30:	or     al,0xd8
  418d32:	ins    BYTE PTR es:[edi],dx
  418d33:	or     al,0xf9
  418d35:	push   ds
  418d36:	div    DWORD PTR [edx+0x1]
  418d39:	jns    0x418cd0
  418d3b:	sbb    ebx,DWORD PTR [eax*8+0x1235c44]
  418d42:	jne    0x418d39
  418d44:	jne    0x418d98
  418d46:	fst    DWORD PTR [ebx+eiz*1+0x2bf7a9c6]
  418d4d:	jge    0x418cff
  418d4f:	jecxz  0x418ce0
  418d51:	popf   
  418d52:	jle    0x418d5f
  418d54:	xchg   ebx,eax
  418d55:	jns    0x418cde
  418d57:	fwait
  418d58:	in     eax,dx
  418d59:	in     al,dx
  418d5a:	mov    dh,BYTE PTR [eax-0x45]
  418d5d:	clc    
  418d5e:	sar    BYTE PTR [ecx+0x5ac98af7],0xf1
  418d65:	sub    DWORD PTR [ecx],ebp
  418d67:	gs mov bl,0xbb
  418d6a:	sbb    BYTE PTR [eax-0x5bac3b9],bl
  418d70:	dec    edx
  418d71:	mov    bl,0x7c
  418d73:	mov    edi,0x5d4173f1
  418d78:	jmp    0x4a89f7bb
  418d7d:	pop    edi
  418d7e:	vmread DWORD PTR [esi],ecx
  418d81:	push   ebp
  418d82:	aas    
  418d83:	(bad)  
  418d84:	int3   
  418d85:	jbe    0x418d43
  418d87:	mov    eax,?
  418d89:	ds in  eax,dx
  418d8b:	fdiv   DWORD PTR [edi+0x46]
  418d8e:	popa   
  418d8f:	pop    edi
  418d90:	mov    ecx,0x39bef024
  418d95:	aas    
  418d96:	sub    ch,ch
  418d98:	int    0x1f
  418d9a:	pop    ss
  418d9b:	pop    edi
  418d9c:	clc    
  418d9d:	pusha  
  418d9e:	mov    ?,WORD PTR [esi]
  418da0:	retf   
  418da1:	(bad)  
  418da2:	outs   dx,BYTE PTR ds:[esi]
  418da3:	or     BYTE PTR [edx-0x33694db9],0xdb
  418daa:	dec    ebp
  418dab:	or     al,0x8e
  418dad:	sub    BYTE PTR [ebx],0xed
  418db0:	ss mov ebp,0xeb708b32
  418db6:	xchg   DWORD PTR [edx+0x2ca922f7],esp
  418dbc:	add    al,0xd2
  418dbe:	push   ebx
  418dbf:	shl    BYTE PTR [esi+0x10fe83b0],0xe3
  418dc6:	out    dx,eax
  418dc7:	and    dh,BYTE PTR [edx+0x43]
  418dca:	in     eax,dx
  418dcb:	fwait
  418dcc:	call   0xec896e24
  418dd1:	fs loop 0x418df2
  418dd4:	push   eax
  418dd5:	add    ecx,DWORD PTR [esi]
  418dd7:	shr    ebp,1
  418dd9:	dec    eax
  418dda:	dec    edi
  418ddb:	sub    BYTE PTR [esi+edx*1+0x42],cl
  418ddf:	ins    DWORD PTR es:[edi],dx
  418de0:	shl    DWORD PTR [esi+0x5b],0xa
  418de4:	imul   ecx,DWORD PTR [edi-0x7e],0x29d2eb4a
  418deb:	xchg   ecx,eax
  418dec:	int3   
  418ded:	mov    esp,edx
  418def:	leave  
  418df0:	push   cs
  418df1:	or     DWORD PTR [eax],0xb
  418df4:	mov    esi,0xa19687eb
  418df9:	mov    al,BYTE PTR [edx]
  418dfb:	xchg   esp,eax
  418dfc:	dec    eax
  418dfd:	cs aam 0xe8
  418e00:	inc    ebp
  418e01:	into   
  418e02:	or     bl,BYTE PTR [esi]
  418e04:	sub    al,0x1e
  418e06:	call   0xe5b9:0x2f87c6a1
  418e0d:	rol    DWORD PTR [ecx],cl
  418e0f:	test   eax,0x3a1d7c45
  418e14:	loopne 0x418de0
  418e16:	dec    ecx
  418e17:	jno    0x418deb
  418e19:	mov    es,WORD PTR [eax]
  418e1b:	jmp    0xfe85c223
  418e20:	iret   
  418e21:	pop    ebx
  418e22:	jmp    0xbc00:0x54dde7e2
  418e29:	jne    0x418e03
  418e2b:	cmp    al,0x55
  418e2d:	fdivp  st(5),st
  418e2f:	test   al,0x43
  418e31:	cmp    BYTE PTR [ecx],dh
  418e33:	int    0x8b
  418e35:	or     BYTE PTR [esi+edi*4],al
  418e38:	cmp    ebx,DWORD PTR [ebx]
  418e3a:	das    
  418e3b:	sbb    eax,0x6424fe6b
  418e40:	icebp  
  418e41:	int    0xb2
  418e43:	data16 mov WORD PTR [ebx+0x1fa2a534],fs
  418e4a:	fld    DWORD PTR [ecx-0x56462f3]
  418e50:	mov    DWORD PTR [esi-0x1ee9db3f],0x457a20d
  418e5a:	cdq    
  418e5b:	inc    esp
  418e5c:	push   0xffffffc5
  418e5e:	adc    ecx,DWORD PTR [ebx+0x0]
  418e61:	out    dx,al
  418e62:	sub    cl,bh
  418e64:	jg     0x418e50
  418e66:	adc    esi,DWORD PTR [ecx-0x70c43433]
  418e6c:	pop    ebx
  418e6d:	sbb    BYTE PTR [edi+0x7a],0x31
  418e71:	inc    ebx
  418e72:	cmp    ah,dh
  418e74:	retf   
  418e75:	dec    edx
  418e76:	inc    edi
  418e77:	xchg   BYTE PTR [ecx+0x35],bh
  418e7a:	sbb    al,0x53
  418e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e7d:	or     al,0x65
  418e7f:	jne    0x418eee
  418e81:	and    al,BYTE PTR [ebp+0xc]
  418e84:	inc    ebx
  418e85:	jnp    0x418eef
  418e87:	jp     0x418e1b
  418e89:	push   eax
  418e8a:	or     esp,DWORD PTR [ecx]
  418e8c:	lods   eax,DWORD PTR ds:[esi]
  418e8d:	aaa    
  418e8e:	add    ah,BYTE PTR [edx]
  418e90:	rcr    BYTE PTR [ebx],0x52
  418e93:	inc    ebx
  418e94:	rcl    DWORD PTR [ebp-0x6ddec76c],1
  418e9a:	stos   DWORD PTR es:[edi],eax
  418e9b:	ins    BYTE PTR es:[edi],dx
  418e9c:	stc    
  418e9d:	in     al,dx
  418e9e:	mov    ah,0xe9
  418ea0:	repz mov eax,ds:0x9e6f1183
  418ea6:	push   esp
  418ea7:	jge    0x418eb9
  418ea9:	xlat   BYTE PTR ds:[ebx]
  418eaa:	in     al,dx
  418eab:	mov    ds:0xe4771eb6,al
  418eb1:	inc    esp
  418eb2:	push   ds
  418eb3:	xor    eax,0xd3b6324
  418eb8:	jge    0x418eab
  418eba:	and    BYTE PTR [edx],0xa0
  418ebd:	retf   
  418ebe:	lahf   
  418ebf:	fld    QWORD PTR [esi+eax*1+0x6e58075a]
  418ec6:	fsub   QWORD PTR [ebx-0x392d104c]
  418ecc:	test   al,0xd0
  418ece:	in     al,0xad
  418ed0:	aad    0xab
  418ed2:	fisubr DWORD PTR [edi+0x12]
  418ed5:	fs stos DWORD PTR es:[edi],eax
  418ed7:	xchg   DWORD PTR [ebx],edx
  418ed9:	or     cl,BYTE PTR [ecx-0x1c1ab928]
  418edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ee0:	cmp    edi,DWORD PTR [ebx+0x36]
  418ee3:	mov    al,0xe
  418ee5:	test   eax,0x7e7fa816
  418eea:	push   esp
  418eeb:	scas   eax,DWORD PTR es:[edi]
  418eec:	mov    al,ds:0xc6b58d53
  418ef1:	test   DWORD PTR [edi+0x5a483d31],eax
  418ef7:	ror    edx,1
  418ef9:	fwait
  418efa:	mov    ecx,0x433e5027
  418eff:	fisubr DWORD PTR [ebx-0x54]
  418f02:	mov    ebx,edx
  418f04:	or     ch,BYTE PTR [esi-0x5a]
  418f07:	out    dx,eax
  418f08:	and    BYTE PTR [ecx+0x29],bl
  418f0b:	arpl   WORD PTR [edx],sp
  418f0d:	lds    edx,FWORD PTR [di+0x7d48]
  418f12:	inc    ebx
  418f13:	add    dh,BYTE PTR [edx-0x2c]
  418f16:	arpl   WORD PTR [ebp+0x21ea9082],si
  418f1c:	stos   DWORD PTR es:[edi],eax
  418f1d:	je     0x418ef5
  418f1f:	aam    0x94
  418f21:	sti    
  418f22:	lods   eax,DWORD PTR ds:[esi]
  418f23:	mov    DWORD PTR [edx-0x3c25ccac],0xee392fa
  418f2d:	test   BYTE PTR [ecx-0x32161f57],bl
  418f33:	jecxz  0x418f6d
  418f35:	adc    al,BYTE PTR [ebx+0x76924aa7]
  418f3b:	or     al,0x70
  418f3d:	pushf  
  418f3e:	jne    0x418edf
  418f40:	xchg   ecx,eax
  418f41:	sbb    al,0x6d
  418f43:	imul   edi,DWORD PTR [edx+0x5b],0xc
  418f47:	add    DWORD PTR [edx+0x415992b5],ebx
  418f4d:	and    eax,0x73644105
  418f52:	or     DWORD PTR [ecx],edx
  418f54:	in     eax,0x99
  418f56:	cdq    
  418f57:	retf   
  418f58:	mov    ds:0x81aa8e2c,eax
  418f5d:	ins    DWORD PTR es:[edi],dx
  418f5e:	por    mm0,QWORD PTR [ecx+edx*4-0x3e279384]
  418f66:	cmp    eax,DWORD PTR [ebx+0x66af3f65]
  418f6c:	fcomp  DWORD PTR [ebx+0x49]
  418f6f:	bound  esi,QWORD PTR [si]
  418f72:	pop    ebx
  418f73:	mov    eax,ds:0xaa196a2c
  418f78:	clc    
  418f79:	push   edx
  418f7a:	call   0x19b7:0x94d01a7e
  418f81:	adc    BYTE PTR [edi-0x1a],al
  418f84:	or     eax,DWORD PTR [bp+di+0x6d]
  418f88:	xor    eax,0xa84f413b
  418f8d:	dec    esp
  418f8e:	jo     0x41900c
  418f90:	sub    ecx,DWORD PTR [edi-0x35]
  418f93:	into   
  418f94:	mov    al,0xaa
  418f96:	add    al,0x4c
  418f98:	xchg   edx,eax
  418f99:	adc    DWORD PTR [esi],0xffffff97
  418f9c:	scas   al,BYTE PTR es:[edi]
  418f9d:	xor    ah,BYTE PTR [eax+0x246b8703]
  418fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fa4:	mov    bh,0xae
  418fa6:	and    eax,0xaa7645a8
  418fab:	jmp    FWORD PTR [ebp+0x619abe3d]
  418fb1:	xor    esp,DWORD PTR [ecx]
  418fb3:	scas   eax,DWORD PTR es:[edi]
  418fb4:	lahf   
  418fb5:	sti    
  418fb6:	pop    ss
  418fb7:	enter  0x424f,0xe5
  418fbb:	ins    DWORD PTR es:[edi],dx
  418fbc:	add    bl,al
  418fbe:	xchg   esp,eax
  418fbf:	xchg   ebp,eax
  418fc0:	sub    ecx,DWORD PTR [edx-0x6b]
  418fc3:	pop    esi
  418fc4:	mov    eax,ds:0x9aca5cb8
  418fc9:	leave  
  418fca:	cmc    
  418fcb:	lea    ebx,[ebx]
  418fcd:	popa   
  418fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fcf:	adc    ecx,edi
  418fd1:	test   BYTE PTR [esp+eiz*8+0x492a9d94],dh
  418fd8:	pop    edx
  418fd9:	mov    al,ds:0x43dbdf98
  418fde:	inc    edx
  418fdf:	jmp    0x61be:0x8147b775
  418fe6:	push   ebp
  418fe7:	adc    eax,0xd46eafce
  418fec:	push   ebx
  418fed:	push   edi
  418fee:	mov    eax,ds:0x6704de73
  418ff3:	jecxz  0x418ff1
  418ff5:	rcr    DWORD PTR [edi],0xd0
  418ff8:	stc    
  418ff9:	fmul   QWORD PTR [eax+ebp*4+0x1a]
  418ffd:	xor    eax,0x25192b8
  419002:	outs   dx,BYTE PTR ds:[esi]
  419003:	out    0xc7,al
  419005:	sub    BYTE PTR [eax+0x211956c1],dh
  41900b:	out    0x34,eax
  41900d:	or     DWORD PTR [ebp-0x9],0x6797ddc9
  419014:	pop    es
  419015:	rol    DWORD PTR [ebp-0x61],0xfc
  419019:	jle    0x418ffa
  41901b:	inc    ebx
  41901c:	xor    ebx,DWORD PTR [eax-0x6e31f73f]
  419022:	push   cs
  419023:	paddsb mm3,QWORD PTR [ebx+0xee97a0f]
  41902a:	jmp    0x45af:0x8356185e
  419031:	out    dx,eax
  419032:	or     dh,dl
  419034:	sbb    eax,0xc972bda6
  419039:	inc    edi
  41903a:	nop
  41903b:	out    dx,eax
  41903c:	or     DWORD PTR [edi-0x6f],edx
  41903f:	lock clc 
  419041:	fsub   QWORD PTR [eax+0x36c10788]
  419047:	push   ebp
  419048:	inc    ecx
  419049:	inc    esi
  41904a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41904b:	cmp    DWORD PTR [eax],ebx
  41904d:	rol    BYTE PTR [edi+edx*1+0x3571ee43],cl
  419054:	sti    
  419055:	push   es
  419056:	inc    ecx
  419057:	popf   
  419058:	loop   0x419030
  41905a:	inc    ebp
  41905b:	mov    ecx,0xccb40be7
  419060:	sbb    eax,0x434714e0
  419065:	add    DWORD PTR ds:0xb906d610,ebp
  41906b:	add    al,0x51
  41906d:	or     ah,BYTE PTR [esp+edx*1]
  419070:	jecxz  0x419085
  419072:	xor    esp,DWORD PTR [ecx]
  419074:	ficomp WORD PTR [ebx+0x7a]
  419077:	cs dec ecx
  419079:	mov    ds:0x8b499c5f,al
  41907e:	in     eax,dx
  41907f:	push   DWORD PTR [ebp-0x1e]
  419082:	or     BYTE PTR [esi-0x56189173],0x27
  419089:	fwait
  41908a:	ret    0x51b7
  41908d:	in     eax,0xe3
  41908f:	mov    bh,0xa3
  419091:	xchg   ebp,eax
  419092:	mov    esi,0x9d4e94bc
  419097:	add    BYTE PTR [ebp-0x5737d946],ah
  41909d:	pop    edi
  41909e:	cmc    
  41909f:	out    0x4,eax
  4190a1:	jae    0x419077
  4190a3:	xchg   edi,eax
  4190a4:	fcomp  QWORD PTR [ecx-0x6d]
  4190a7:	xchg   edx,eax
  4190a8:	je     0x419050
  4190aa:	jne    0x4190d3
  4190ac:	adc    al,0x34
  4190af:	outs   dx,DWORD PTR ds:[esi]
  4190b0:	dec    ecx
  4190b1:	pop    edi
  4190b2:	adc    DWORD PTR [ecx],ecx
  4190b4:	jae    0x419063
  4190b6:	mov    bh,0x87
  4190b8:	mov    ds:0x9fad45c4,eax
  4190bd:	dec    ebx
  4190be:	fcmovb st,st(3)
  4190c0:	dec    esp
  4190c1:	mov    esp,0xb73daecf
  4190c6:	add    al,0x57
  4190c8:	aas    
  4190c9:	inc    esp
  4190ca:	cwde   
  4190cb:	in     eax,0x2f
  4190cd:	cwde   
  4190ce:	push   ds
  4190cf:	int    0x21
  4190d1:	in     eax,0x1a
  4190d3:	cmp    ebx,DWORD PTR [edi]
  4190d5:	ficomp DWORD PTR [eax]
  4190d7:	jae    0x41906c
  4190d9:	(bad)  [ebx]
  4190db:	sbb    esp,0x6c
  4190de:	xor    al,BYTE PTR [ebx+esi*4-0x2142f9a2]
  4190e5:	mov    WORD PTR ds:0x51749439,ss
  4190eb:	inc    esi
  4190ec:	hlt    
  4190ed:	(bad)  
  4190ee:	lods   al,BYTE PTR ds:[esi]
  4190ef:	push   edx
  4190f0:	jb     0x419109
  4190f2:	add    DWORD PTR [ecx],esp
  4190f4:	mov    DWORD PTR [eax-0x71],0x4aa6349b
  4190fb:	xchg   BYTE PTR [ecx+0x21],ah
  4190fe:	and    eax,0x6cf32ad7
  419103:	(bad)  
  419104:	sahf   
  419105:	in     al,0xfb
  419107:	xchg   esp,eax
  419108:	dec    eax
  419109:	mov    cl,ch
  41910b:	xor    eax,0x88a81f
  419110:	sbb    bl,ch
  419112:	cdq    
  419113:	loop   0x4190d0
  419115:	add    dl,BYTE PTR ds:0x1bdd3a80
  41911b:	pop    ds
  41911c:	and    ah,dh
  41911e:	ror    ecx,cl
  419120:	xchg   ebp,eax
  419121:	mov    edx,0xc880a96b
  419126:	out    0xc7,al
  419128:	inc    ebp
  419129:	rol    DWORD PTR [ebx],cl
  41912b:	ins    BYTE PTR es:[edi],dx
  41912c:	sub    al,0x63
  41912e:	sbb    BYTE PTR [ebp+0xcc18046],bl
  419134:	inc    esp
  419135:	or     eax,0x8aa805a0
  41913a:	stos   DWORD PTR es:[edi],eax
  41913b:	adc    ah,BYTE PTR [esi+0x30]
  41913e:	(bad)  
  41913f:	loop   0x419104
  419141:	pop    edx
  419142:	iret   
  419143:	sbb    al,0xc4
  419145:	push   0x1eda81fe
  41914a:	es and eax,0x238d8f27
  419150:	test   eax,0x7ab4d812
  419155:	cld    
  419156:	lock lods al,BYTE PTR es:[esi]
  419159:	pop    edx
  41915a:	jne    0x41911c
  41915c:	daa    
  41915d:	lea    edx,[ecx-0x7325cf11]
  419163:	fwait
  419164:	jp     0x4190f8
  419166:	retf   
  419167:	(bad)  
  419168:	retf   
  419169:	pop    edx
  41916a:	mov    bl,0xf9
  41916c:	adc    eax,0xaf200c6f
  419171:	js     0x419198
  419173:	loopne 0x41918c
  419175:	add    eax,0x7ea7bd34
  41917a:	test   eax,0x4da27bbc
  41917f:	jmp    0x8768:0x7936f205
  419186:	ret    0x68c1
  419189:	out    0x38,eax
  41918b:	(bad)  
  41918c:	mov    ch,0x89
  41918e:	jl     0x419125
  419190:	adc    DWORD PTR [edi],ecx
  419192:	add    DWORD PTR [eax+ebp*4],0x9858bcd9
  419199:	aam    0x73
  41919b:	scas   eax,DWORD PTR es:[edi]
  41919c:	test   eax,0xa2160623
  4191a1:	lods   eax,DWORD PTR ds:[esi]
  4191a2:	push   ebx
  4191a3:	cmc    
  4191a4:	lods   eax,DWORD PTR ds:[esi]
  4191a5:	mov    ecx,0xba89f335
  4191aa:	mov    ecx,0xb01616b9
  4191af:	inc    ecx
  4191b0:	into   
  4191b1:	mov    cl,dh
  4191b3:	ds cmp dl,cl
  4191b6:	fst    DWORD PTR [eax]
  4191b8:	ret    0x288a
  4191bb:	fcomp  QWORD PTR [ebp+0x17]
  4191be:	xchg   edx,eax
  4191bf:	test   eax,0xd098245b
  4191c4:	sub    eax,0x59b860e9
  4191c9:	xchg   esi,eax
  4191ca:	sbb    edi,DWORD PTR [edx-0x303bbff0]
  4191d0:	mov    BYTE PTR [edi+eiz*4-0x58169cdb],dh
  4191d7:	inc    esi
  4191d8:	mov    eax,ds:0x28d00ff
  4191dd:	adc    edx,DWORD PTR [edx]
  4191df:	out    0xa,eax
  4191e1:	call   0xef3c:0x2f8e1256
  4191e8:	ds pop esp
  4191ea:	sahf   
  4191eb:	xchg   esi,eax
  4191ec:	push   es
  4191ed:	aam    0x81
  4191ef:	mov    dh,0xab
  4191f1:	sub    DWORD PTR [edi+0x2eaa8735],0xe62a8972
  4191fb:	inc    edi
  4191fc:	add    BYTE PTR [esi-0x75],ch
  4191ff:	int    0x14
  419201:	je     0x419192
  419203:	pop    ebp
  419204:	and    ecx,DWORD PTR [edx]
  419206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419207:	or     al,0x6d
  419209:	shl    DWORD PTR [edx],cl
  41920b:	sub    eax,DWORD PTR [ebp+0x7b07ffea]
  419211:	mov    dl,0x40
  419213:	fadd   QWORD PTR [eax-0x23d3de77]
  419219:	xchg   edi,eax
  41921a:	out    dx,eax
  41921b:	adc    BYTE PTR [edx+eax*4-0x313e07ec],dl
  419222:	jecxz  0x419209
  419224:	cwde   
  419225:	dec    eax
  419226:	cmpxchg BYTE PTR [edi-0x1b],bh
  41922a:	repz add DWORD PTR [ebp-0x44f758ca],esp
  419231:	xchg   esp,eax
  419232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419233:	fist   DWORD PTR [edi-0x67455dfc]
  419239:	aam    0x5f
  41923b:	loop   0x419271
  41923d:	inc    ebp
  41923e:	cmovl  esi,esi
  419241:	pop    eax
  419242:	xlat   BYTE PTR ds:[ebx]
  419243:	aas    
  419244:	pusha  
  419245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419246:	mov    edx,0x75855df
  41924b:	lds    ecx,FWORD PTR [edi]
  41924d:	pop    esi
  41924e:	imul   eax,DWORD PTR [eax+0x6f],0xfa8b7656
  419255:	xor    al,0x62
  419257:	call   0x531b:0x3c65a6a7
  41925e:	call   0xca84:0x175fab9
  419265:	(bad)  
  419266:	sbb    eax,0x80e5499e
  41926b:	cmp    DWORD PTR [ebp-0x25],0x6ef216b1
  419272:	pop    ebx
  419273:	mov    dl,ch
  419275:	mov    BYTE PTR [edx+0x58323d58],cl
  41927b:	icebp  
  41927c:	pop    ebx
  41927d:	cmp    al,BYTE PTR [ebx-0x5b]
  419280:	add    al,0xf5
  419282:	dec    eax
  419283:	inc    ebx
  419284:	aaa    
  419285:	mov    gs,WORD PTR [edi-0x424faeb3]
  41928b:	pop    ecx
  41928c:	pop    esi
  41928d:	outs   dx,DWORD PTR ds:[esi]
  41928e:	add    edx,DWORD PTR [ebx]
  419290:	nop
  419291:	dec    ebx
  419292:	lock or DWORD PTR [ebp-0x716d7aa7],esi
  419299:	sbb    eax,DWORD PTR [esi]
  41929b:	outs   dx,BYTE PTR ds:[esi]
  41929c:	sbb    cl,al
  41929e:	(bad)  
  41929f:	push   ebx
  4192a0:	sbb    eax,DWORD PTR [eax]
  4192a2:	shr    DWORD PTR [ecx],0xa4
  4192a5:	shr    DWORD PTR [esi-0x78],1
  4192a8:	jns    0x41923c
  4192aa:	xchg   DWORD PTR [ebp+0x2d],esi
  4192ad:	arpl   WORD PTR [edx-0x6f],si
  4192b0:	mov    ds:0x6a519849,al
  4192b5:	loopne 0x4192df
  4192b7:	daa    
  4192b8:	mov    ds:0x9a7efa4f,al
  4192bd:	sub    bl,ah
  4192bf:	sti    
  4192c0:	aam    0xd3
  4192c2:	dec    esi
  4192c3:	cmp    eax,0xcddbbf9d
  4192c8:	cmp    BYTE PTR [ecx+0x7bae30dd],cl
  4192ce:	ins    DWORD PTR es:[edi],dx
  4192cf:	ror    DWORD PTR [eax+0x3684dd59],cl
  4192d5:	js     0x419289
  4192d7:	inc    esi
  4192d8:	out    dx,al
  4192d9:	fild   DWORD PTR [esi+0x1fc7e93f]
  4192df:	cmp    dh,dh
  4192e1:	push   ss
  4192e2:	lock inc edx
  4192e4:	mov    dl,0xb4
  4192e6:	mov    bl,BYTE PTR [ecx-0x702ac888]
  4192ec:	(bad)  
  4192ed:	push   esi
  4192ee:	out    0x81,eax
  4192f0:	imul   BYTE PTR [eax+0x57]
  4192f3:	retf   0x9e54
  4192f6:	inc    edi
  4192f7:	cmp    esi,DWORD PTR [ebx]
  4192f9:	arpl   WORD PTR [ebx+0x6c],bx
  4192fc:	inc    edx
  4192fd:	cs dec ebp
  4192ff:	lods   al,BYTE PTR ds:[esi]
  419300:	lahf   
  419301:	xchg   BYTE PTR [ebp-0x3],cl
  419304:	adc    esi,ecx
  419306:	pop    eax
  419307:	repnz (bad)
  41930a:	inc    ebx
  41930b:	in     eax,0x5
  41930d:	mov    bh,0xaf
  41930f:	dec    ebx
  419310:	xchg   ebp,eax
  419311:	call   0xb45b:0x42c32ee6
  419318:	cmp    edx,DWORD PTR [edi+0x67]
  41931b:	fsubr  DWORD PTR [edi]
  41931d:	dec    eax
  41931e:	sub    BYTE PTR [ebp+0xe],dl
  419321:	pop    edi
  419322:	mov    eax,ds:0xf442c801
  419327:	push   esp
  419328:	jmp    0x8071:0xd9b4c671
  41932f:	rol    dl,0x2d
  419332:	adc    bh,ah
  419334:	dec    eax
  419335:	or     BYTE PTR [eax+edi*2],cl
  419338:	or     dl,al
  41933a:	or     eax,0x3e9be1e3
  41933f:	and    edi,ecx
  419341:	aam    0xa7
  419343:	mov    ecx,0x9a77901d
  419348:	retf   
  419349:	xor    BYTE PTR [ebx+0x7d],cl
  41934c:	aaa    
  41934d:	push   ds
  41934e:	jmp    eax
  419350:	(bad)  
  419351:	mov    esp,0xfc1173f9
  419356:	(bad)  
  419358:	xor    al,0x24
  41935a:	das    
  41935b:	jle    0x41930a
  41935d:	or     ecx,esp
  41935f:	adc    eax,0xb4da7394
  419364:	or     al,0x7f
  419366:	sbb    ebx,ecx
  419368:	xor    BYTE PTR [esi-0x38a3b469],ah
  41936e:	add    ecx,edx
  419370:	mov    cl,0x88
  419372:	xor    ch,al
  419374:	pop    ds
  419375:	repnz and ah,0xd9
  419379:	jns    0x419312
  41937b:	outs   dx,DWORD PTR ds:[esi]
  41937c:	mov    bl,ch
  41937e:	mov    ebx,DWORD PTR [edi-0x30ea8d37]
  419384:	(bad)  
  419385:	mov    edi,0xf7fd5403
  41938a:	lahf   
  41938b:	sbb    eax,0x81959b99
  419390:	jne    0x419403
  419392:	ds xchg edx,eax
  419394:	jb     0x419390
  419396:	iret   
  419397:	adc    BYTE PTR [ecx],dl
  419399:	mov    dh,0xd5
  41939b:	sbb    BYTE PTR [eax-0x71c1b437],0xe7
  4193a2:	mov    ch,0x8c
  4193a4:	fcom   DWORD PTR [ebx]
  4193a6:	aam    0x6d
  4193a8:	les    edi,FWORD PTR [ebx-0x57c2489b]
  4193ae:	cmp    al,0x1d
  4193b0:	fdiv   st,st(1)
  4193b2:	inc    ebp
  4193b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193b4:	fwait
  4193b5:	inc    ebx
  4193b6:	mov    eax,0x2a43f7b6
  4193bb:	mov    dl,0xe0
  4193bd:	sub    al,0xfe
  4193bf:	add    al,bh
  4193c1:	and    cl,bl
  4193c3:	out    0xb2,eax
  4193c5:	or     DWORD PTR [esi-0x55d948ec],eax
  4193cb:	retf   0x223
  4193ce:	ror    BYTE PTR [ecx+0x7f0218a],0xa7
  4193d5:	sbb    DWORD PTR [eax-0x3f8b892e],0x9
  4193dc:	stc    
  4193dd:	nop
  4193de:	pop    ss
  4193df:	sbb    DWORD PTR [edx+0x1a],esi
  4193e2:	mov    bh,0xcf
  4193e4:	imul   BYTE PTR [eax+0x65cbcbb6]
  4193ea:	fs loopne 0x4193d8
  4193ed:	(bad)  
  4193ee:	xor    al,0x8c
  4193f0:	fdivp  st(5),st
  4193f2:	mov    esi,0xb3cce25a
  4193f7:	in     eax,0x57
  4193f9:	sub    DWORD PTR [ebp-0x28],esp
  4193fc:	inc    esp
  4193fd:	aaa    
  4193fe:	adc    eax,0x9c9c1516
  419403:	or     al,0x70
  419405:	in     eax,0x96
  419407:	jnp    0x419423
  419409:	xor    DWORD PTR [eax],ebp
  41940b:	pop    edi
  41940c:	add    ebx,esi
  41940e:	sbb    ebx,DWORD PTR [edi]
  419410:	ret    0xb9e0
  419413:	fs jg  0x41944c
  419416:	adc    dl,BYTE PTR [eax+edi*8+0x56]
  41941a:	test   eax,0xcf64b3d7
  41941f:	jle    0x4193b1
  419421:	add    al,0x7
  419423:	loop   0x419485
  419425:	lock add edi,esp
  419428:	adc    ebp,DWORD PTR [ecx]
  41942a:	jmp    0xde4e42d0
  41942f:	test   dl,ah
  419431:	dec    eax
  419432:	jae    0x419404
  419434:	sti    
  419435:	mov    al,0x25
  419437:	es jbe 0x419457
  41943a:	add    DWORD PTR [ebp-0x1e],0x2c
  41943e:	scas   eax,DWORD PTR es:[edi]
  41943f:	xor    BYTE PTR [ecx+0x1c5e9256],bh
  419445:	std    
  419446:	jg     0x419418
  419448:	cs jns 0x419463
  41944b:	mov    ebp,0x3ba9f844
  419450:	je     0x419464
  419452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419453:	dec    esp
  419454:	pop    esi
  419455:	and    al,0x1
  419457:	dec    bx
  419459:	cmp    bl,BYTE PTR ds:0x6cad001f
  41945f:	xchg   edx,eax
  419460:	xor    DWORD PTR [eax-0x42a1ded0],esi
  419466:	push   ebp
  419467:	jmp    0x4194dd
  419469:	in     al,dx
  41946a:	ja     0x41942b
  41946c:	std    
  41946d:	or     esi,DWORD PTR [edi+0x50]
  419470:	pop    ebp
  419471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419472:	ds inc esp
  419474:	hlt    
  419475:	lahf   
  419476:	(bad)  
  419477:	ins    BYTE PTR es:[edi],dx
  419478:	push   0xffffff95
  41947a:	jge    0x419407
  41947c:	ds pop eax
  41947e:	cwde   
  41947f:	loop   0x4194b2
  419481:	(bad)  
  419482:	xchg   ebx,eax
  419483:	js     0x4194b2
  419485:	xor    DWORD PTR [esi+0x5e],esi
  419488:	nop
  419489:	ror    BYTE PTR [ebp+0x51],1
  41948c:	ds das 
  41948e:	add    bh,BYTE PTR ds:0x76413e4b
  419494:	mov    dl,0xe2
  419496:	cmc    
  419497:	mov    BYTE PTR [esi+0x3d],al
  41949a:	rol    BYTE PTR [edi-0x25],0xd7
  41949e:	icebp  
  41949f:	or     al,BYTE PTR [ebx-0x30]
  4194a2:	adc    eax,0xbd3ff93f
  4194a7:	xchg   ecx,eax
  4194a8:	iret   
  4194a9:	jl     0x41949d
  4194ab:	sbb    al,0x2a
  4194ad:	aaa    
  4194ae:	jl     0x47cd88d5
  4194b4:	pop    ebp
  4194b5:	or     al,0x8c
  4194b7:	cs fucomi st,st(3)
  4194ba:	mov    ds:0x776e59cf,eax
  4194bf:	(bad)  
  4194c0:	gs es xchg esi,eax
  4194c3:	cmp    BYTE PTR [esi+eiz*2+0x308b9968],ah
  4194ca:	jp     0x4194df
  4194cc:	mov    ds:0x331a5762,al
  4194d1:	inc    ecx
  4194d2:	pop    es
  4194d3:	mov    edi,DWORD PTR [edi+0x28]
  4194d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194d7:	repz pop esp
  4194d9:	retf   0x611
  4194dc:	mov    eax,0xcc7dcebd
  4194e1:	adc    edx,DWORD PTR [esi]
  4194e3:	add    DWORD PTR [ebx-0x21],edi
  4194e6:	or     BYTE PTR [ebp+0x72],0x92
  4194ea:	jne    0x419537
  4194ec:	mov    ecx,0x7e87bc7c
  4194f1:	popf   
  4194f2:	and    DWORD PTR [edx+0x24469741],eax
  4194f8:	inc    ebp
  4194f9:	and    BYTE PTR [ecx+0x30],ch
  4194fc:	xchg   ebx,eax
  4194fd:	and    DWORD PTR [ecx+ecx*8],ecx
  419500:	xor    eax,0xe8a25034
  419505:	mov    dl,0x11
  419507:	fsubr  DWORD PTR [ebx+0xe79e992]
  41950d:	aaa    
  41950e:	loop   0x419564
  419510:	addr16 sub dl,al
  419513:	pop    eax
  419514:	(bad)  [edi+eax*4+0x5a]
  419518:	cmc    
  419519:	fisub  DWORD PTR [eax+0x16f9a4d7]
  41951f:	dec    eax
  419520:	std    
  419521:	shl    ebx,1
  419523:	ret    0x77e
  419526:	sub    ax,0x580c
  41952a:	in     eax,dx
  41952b:	and    ebx,DWORD PTR [ecx+0x53]
  41952e:	inc    edi
  41952f:	lea    eax,[esi+0x22]
  419532:	sbb    BYTE PTR [di-0x7bfb],0x26
  419538:	xchg   edi,eax
  419539:	push   ebx
  41953a:	jecxz  0x419563
  41953c:	adc    al,0xa4
  41953e:	cmp    esp,DWORD PTR ds:0x5f7a390d
  419544:	sbb    DWORD PTR [esi-0x18],edi
  419547:	cld    
  419548:	pop    ebx
  419549:	cwde   
  41954a:	inc    esp
  41954b:	(bad)  
  41954c:	ins    DWORD PTR es:[edi],dx
  41954d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41954e:	cmovne edx,DWORD PTR [ecx+eax*4+0xa]
  419553:	jg     0x419566
  419555:	mov    al,ds:0xf20c211f
  41955a:	ss cmc 
  41955c:	div    esp
  41955e:	pop    ds
  41955f:	inc    ecx
  419560:	xchg   ebx,eax
  419561:	jg     0x419519
  419563:	and    cl,BYTE PTR [ebx+ecx*8+0x7f59222f]
  41956a:	xor    bh,BYTE PTR [edi-0x38]
  41956d:	int3   
  41956e:	sub    al,0x26
  419570:	fadd   DWORD PTR [eax]
  419572:	mov    eax,ds:0x965465a8
  419577:	inc    esi
  419578:	aaa    
  419579:	push   0xffffffdd
  41957b:	ins    DWORD PTR es:[edi],dx
  41957c:	sbb    dh,BYTE PTR ds:[edi-0x16]
  419580:	fidiv  WORD PTR [ecx]
  419582:	jb     0x4195a0
  419584:	fnstenv [ebp+0x50]
  419587:	cs xor al,0xe3
  41958a:	arpl   WORD PTR [ebx+ebp*4+0x2b],dx
  41958e:	or     DWORD PTR [esi+0x2],edi
  419591:	arpl   cx,ax
  419593:	mov    BYTE PTR [edx],dl
  419595:	ss add bl,al
  419598:	sar    DWORD PTR [ecx+ebx*4-0x47526d56],cl
  41959f:	out    0x5b,al
  4195a1:	test   cl,bh
  4195a3:	daa    
  4195a4:	lods   al,BYTE PTR ds:[esi]
  4195a5:	or     ebp,ebp
  4195a7:	jg     0x419565
  4195a9:	adc    BYTE PTR [ecx-0x62],0x78
  4195ad:	mov    BYTE PTR [eax],dl
  4195af:	and    ecx,DWORD PTR [edi]
  4195b1:	out    0xa2,al
  4195b3:	ret    
  4195b4:	ret    0xd64f
  4195b7:	dec    edx
  4195b8:	sub    DWORD PTR [edx],edx
  4195ba:	arpl   WORD PTR [edx-0x79],bx
  4195bd:	and    bl,BYTE PTR [edi+0x40]
  4195c0:	sbb    eax,0xc5a0e1ac
  4195c5:	(bad)  
  4195c6:	sbb    ebp,DWORD PTR [edi-0x560b9a50]
  4195cc:	mov    al,0x88
  4195ce:	sbb    eax,0xe8157af9
  4195d3:	imul   edi,DWORD PTR [edx-0x30307653],0x5abf484f
  4195dd:	push   ebx
  4195de:	mov    edi,DWORD PTR [esi-0x18905c65]
  4195e4:	jmp    0xc546:0x95339a29
  4195eb:	push   ebp
  4195ec:	and    edx,edi
  4195ee:	mov    ah,al
  4195f0:	mov    ebx,0xc7bd9e4b
  4195f5:	or     eax,0xe997b1fb
  4195fa:	shr    bl,cl
  4195fc:	and    eax,0x62ecb21a
  419601:	sahf   
  419602:	stos   DWORD PTR es:[edi],eax
  419603:	das    
  419604:	(bad)  
  419605:	mov    eax,0xc8f00c89
  41960a:	clc    
  41960b:	and    al,BYTE PTR [ecx+0x2544fb2e]
  419611:	mov    ebp,0x5ff2a519
  419616:	push   0x6613c565
  41961b:	sub    edx,DWORD PTR [eax]
  41961d:	push   esp
  41961e:	leave  
  41961f:	rol    BYTE PTR [edi],cl
  419621:	mov    ds:0x93d3d13c,eax
  419626:	xchg   esp,eax
  419627:	test   al,0x9e
  419629:	push   ebp
  41962a:	jae    0x4195ba
  41962c:	mov    esp,0x49ef6954
  419631:	jge    0x419679
  419633:	dec    ecx
  419634:	push   edi
  419635:	cmc    
  419636:	push   eax
  419637:	jne    0x4195d7
  419639:	pusha  
  41963a:	test   edi,ecx
  41963c:	call   0xaaaa:0x4d724449
  419643:	je     0x419673
  419645:	daa    
  419646:	stc    
  419647:	std    
  419648:	jb     0x419630
  41964a:	xor    ecx,esp
  41964c:	adc    al,0x42
  41964e:	pop    ebp
  41964f:	add    al,0x6b
  419651:	push   ebx
  419652:	into   
  419653:	mov    edx,0xa4e548c0
  419658:	hlt    
  419659:	xchg   ecx,eax
  41965a:	adc    DWORD PTR [ecx],esp
  41965c:	xchg   esp,eax
  41965d:	mov    al,ds:0x12b90497
  419662:	repz adc eax,0x490ae4fb
  419668:	int    0xf6
  41966a:	sbb    eax,0x6f8c79d0
  41966f:	add    edi,DWORD PTR [edi+0x77cacde3]
  419675:	std    
  419676:	xchg   ecx,eax
  419677:	add    eax,0x2c399478
  41967c:	jl     0x4196b3
  41967e:	jg     0x4196b2
  419680:	stos   DWORD PTR es:[edi],eax
  419681:	icebp  
  419682:	fwait
  419683:	into   
  419684:	xchg   esi,eax
  419685:	ret    
  419686:	or     edi,DWORD PTR [ebp+0x13c32c22]
  41968c:	push   edx
  41968d:	mov    edi,0x3d9e9112
  419692:	adc    eax,0xc75bad70
  419697:	or     edx,ecx
  419699:	jl     0x419661
  41969b:	enter  0x3772,0xe4
  41969f:	cdq    
  4196a0:	pop    ebp
  4196a1:	dec    esi
  4196a2:	pop    ebp
  4196a3:	push   eax
  4196a4:	inc    esi
  4196a5:	push   cs
  4196a6:	xchg   esp,eax
  4196a7:	xor    al,0x3e
  4196a9:	sbb    DWORD PTR [ecx+0x39],ebp
  4196ac:	iret   
  4196ad:	fcom   QWORD PTR [ecx-0x274a6302]
  4196b3:	cmp    esi,edx
  4196b5:	cmp    esp,DWORD PTR ds:0x380191af
  4196bb:	jp     0x41967f
  4196bd:	enter  0x893d,0x67
  4196c1:	xor    eax,esp
  4196c3:	adc    al,bl
  4196c5:	push   es
  4196c6:	mov    ecx,0x669332ac
  4196cb:	xor    al,0xc9
  4196cd:	outs   dx,BYTE PTR ds:[esi]
  4196ce:	mov    al,0x12
  4196d0:	lods   al,BYTE PTR ds:[esi]
  4196d1:	(bad)  
  4196d3:	mov    dh,ah
  4196d5:	ss pop esp
  4196d7:	fistp  WORD PTR [edi-0x1f11f09e]
  4196de:	adc    DWORD PTR [edx],0xffffffd8
  4196e1:	ds add eax,0xeda181b2
  4196e7:	popf   
  4196e8:	std    
  4196e9:	outs   dx,DWORD PTR ds:[esi]
  4196ea:	push   ebx
  4196eb:	fbld   TBYTE PTR [eax+0x26978b5f]
  4196f1:	pusha  
  4196f2:	inc    edi
  4196f3:	add    eax,0xaaa7e13f
  4196f8:	or     eax,0x8dd99014
  4196fd:	add    al,0x41
  4196ff:	jb     0x419753
  419701:	pusha  
  419702:	jg     0x4196b2
  419704:	clc    
  419705:	rcl    BYTE PTR [esi+0x12],1
  419708:	scas   eax,DWORD PTR es:[edi]
  419709:	cmp    BYTE PTR [edi+0x302756c2],ah
  41970f:	std    
  419710:	mov    dl,0x94
  419712:	or     al,0x20
  419714:	leave  
  419715:	jl     0x419718
  419717:	push   ebx
  419718:	pop    WORD PTR [eax]
  41971b:	pop    edx
  41971c:	int    0x5
  41971e:	mov    edx,eax
  419720:	int    0xbe
  419722:	fdiv   st,st(3)
  419724:	inc    ebx
  419725:	mov    eax,ds:0x7e328b84
  41972a:	scas   al,BYTE PTR es:[edi]
  41972b:	or     BYTE PTR [edi],dh
  41972d:	inc    edx
  41972e:	pop    ss
  41972f:	mov    al,ds:0x52faa091
  419734:	xchg   ebx,eax
  419735:	retf   0xa0eb
  419738:	ret    
  419739:	outs   dx,DWORD PTR ds:[esi]
  41973a:	fs neg ebp
  41973d:	test   BYTE PTR [ebx],dh
  41973f:	inc    eax
  419740:	push   ebx
  419741:	cmc    
  419742:	test   BYTE PTR [edx+0x1],cl
  419745:	sahf   
  419746:	ja     0x419768
  419748:	rcl    bl,1
  41974a:	loope  0x4196d7
  41974c:	or     al,0xc
  41974e:	imul   ebx,ebx,0xaa4f4965
  419754:	int    0x14
  419756:	sub    bl,BYTE PTR [esi]
  419758:	sti    
  419759:	mov    ch,0x14
  41975b:	mov    al,ds:0x57c4f22
  419760:	repz lds eax,FWORD PTR [ebx-0x6b]
  419764:	cmp    BYTE PTR [esi+0x5d],bh
  419767:	ins    BYTE PTR es:[edi],dx
  419768:	mov    dh,0x4c
  41976a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41976b:	cmp    BYTE PTR [ecx],dh
  41976d:	icebp  
  41976e:	mov    cl,0x5a
  419770:	sub    eax,0x27d07211
  419775:	mov    ch,0x32
  419777:	mov    ah,0xa2
  419779:	pusha  
  41977a:	adc    edi,edx
  41977c:	cmc    
  41977d:	inc    esi
  41977e:	jmp    0x99737537
  419783:	and    BYTE PTR [ebx+esi*1-0x1f7ef4c9],dl
  41978a:	sbb    DWORD PTR [edx+0x1de1f86c],ebp
  419790:	mov    ah,0xeb
  419792:	ficomp WORD PTR [ebp-0x6f]
  419795:	sbb    bp,bx
  419798:	dec    ebx
  419799:	and    eax,0xe450f745
  41979e:	loope  0x419769
  4197a0:	test   DWORD PTR [edi-0x56],eax
  4197a3:	xor    dl,BYTE PTR [ecx+0x3ea32a52]
  4197a9:	cmp    bl,BYTE PTR [edi-0x59]
  4197ac:	push   ds
  4197ad:	dec    DWORD PTR [edi+edx*4+0x7aef0bca]
  4197b4:	dec    ecx
  4197b5:	mov    ah,0x99
  4197b7:	ftst   
  4197b9:	test   eax,0x4ccdec1e
  4197be:	test   eax,0x1a4a61b7
  4197c3:	cdq    
  4197c4:	ins    DWORD PTR es:[edi],dx
  4197c5:	jbe    0x41974d
  4197c7:	inc    ecx
  4197c8:	shr    esi,0x8e
  4197cb:	scas   eax,DWORD PTR es:[edi]
  4197cc:	cwde   
  4197cd:	repz xor DWORD PTR [edx+edx*8],0x74
  4197d2:	outs   dx,BYTE PTR ds:[esi]
  4197d3:	cmp    eax,0x7146f514
  4197d8:	fsubr  DWORD PTR [ebp-0x5e513aca]
  4197de:	jbe    0x419848
  4197e0:	loopne 0x4197fe
  4197e2:	add    BYTE PTR [edx+0x5e4de2ea],dh
  4197e8:	outs   dx,DWORD PTR fs:[esi]
  4197ea:	jno    0x4197bc
  4197ec:	addr16 xor eax,0x12c7cf78
  4197f2:	dec    edx
  4197f3:	mov    esp,0xf6e39d0c
  4197f8:	fsub   DWORD PTR [eax]
  4197fa:	sub    al,BYTE PTR [eax-0x4a58909]
  419800:	push   DWORD PTR [ecx-0x2e]
  419803:	retf   0x311a
  419806:	sub    esp,DWORD PTR [ebx+0x25]
  419809:	sub    dh,BYTE PTR es:[edi]
  41980c:	jo     0x4197cf
  41980e:	pop    edx
  41980f:	inc    esi
  419810:	sbb    cl,BYTE PTR [edi]
  419812:	dec    eax
  419813:	xor    esp,0x97a0a3c0
  419819:	test   BYTE PTR [edx-0x26],bh
  41981c:	or     bl,BYTE PTR [ecx+0x23]
  41981f:	imul   ebp,DWORD PTR [ebp+ebp*2+0x6d],0x12
  419824:	outs   dx,DWORD PTR ds:[esi]
  419825:	xchg   ebx,eax
  419826:	adc    DWORD PTR [eax-0x752755b4],edx
  41982c:	je     0x419880
  41982e:	ja     0x41986e
  419830:	(bad)
  419833:	stos   DWORD PTR es:[edi],eax
  419834:	int    0xdf
  419836:	popa   
  419837:	mov    DWORD PTR [eax-0x54b8506d],esp
  41983d:	mov    dh,0x7c
  41983f:	or     dl,BYTE PTR ds:0x6a933576
  419845:	inc    edi
  419846:	fs xor al,0x10
  419849:	les    esi,FWORD PTR [esi]
  41984b:	mov    al,0xec
  41984d:	cli    
  41984e:	pop    ecx
  41984f:	lods   eax,DWORD PTR ds:[esi]
  419850:	icebp  
  419851:	stos   BYTE PTR es:[edi],al
  419852:	ins    BYTE PTR es:[edi],dx
  419853:	xor    DWORD PTR [edi+0x62],eax
  419856:	add    eax,0xf4a58747
  41985b:	(bad)  
  41985c:	and    ah,al
  41985e:	ss icebp 
  419860:	sbb    dl,0xb2
  419863:	jp     0x4197ee
  419865:	ficom  WORD PTR [edi+0x445b3cf]
  41986b:	xchg   esp,eax
  41986c:	dec    esp
  41986d:	xchg   esi,eax
  41986e:	pop    ebp
  41986f:	mov    ebp,0xf57a1931
  419874:	cs mov ah,0xe9
  419877:	je     0x41985a
  419879:	js     0x419807
  41987b:	data16 fnstcw WORD PTR [eax+eiz*8+0x72]
  419880:	xor    eax,0x10359101
  419885:	je     0x419822
  419887:	pop    esp
  419888:	call   0xdbf6:0xec5188e6
  41988f:	lds    edi,FWORD PTR [ebx]
  419891:	mov    ebx,0x5c1de37b
  419896:	leave  
  419897:	dec    DWORD PTR [edi+0x4ea7c6c0]
  41989d:	lahf   
  41989e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41989f:	mov    esi,0x3fb2b390
  4198a4:	push   esp
  4198a5:	les    edx,FWORD PTR [edx+0x5ba16166]
  4198ab:	inc    esp
  4198ac:	mov    es,WORD PTR [ebp+0x3e]
  4198af:	jg     0x419908
  4198b1:	hlt    
  4198b2:	(bad)  
  4198b3:	xchg   ebp,eax
  4198b4:	cmp    esi,esp
  4198b6:	shl    dh,1
  4198b8:	xchg   ebp,eax
  4198b9:	inc    ebx
  4198ba:	test   DWORD PTR [edi-0x6318fd4c],0xb720b954
  4198c4:	mov    cs,WORD PTR [esi+0x3b03260e]
  4198ca:	(bad)  
  4198cb:	mov    bh,0x97
  4198cd:	jle    0x419944
  4198cf:	in     al,0xf0
  4198d1:	cdq    
  4198d2:	jle    0x419884
  4198d4:	xchg   DWORD PTR [ebx],ecx
  4198d6:	mov    bl,0x7
  4198d8:	sub    ebp,DWORD PTR [ebp-0x7cbdb83b]
  4198de:	scas   al,BYTE PTR es:[edi]
  4198df:	xchg   ecx,eax
  4198e1:	or     edx,0xffffffb6
  4198e4:	leave  
  4198e5:	pop    ds
  4198e6:	cmp    esi,DWORD PTR [ebx+0x2d]
  4198e9:	adc    dl,BYTE PTR [edx-0x5e]
  4198ec:	inc    edx
  4198ed:	fstp   QWORD PTR [ebp*1+0x6b93b032]
  4198f4:	mov    esi,0x9b32c8b5
  4198f9:	retf   0xd8cb
  4198fc:	test   ebp,ecx
  4198fe:	scas   eax,DWORD PTR es:[edi]
  4198ff:	les    edx,FWORD PTR [ebp-0x36ed2cc6]
  419905:	cwde   
  419906:	loop   0x41991e
  419908:	fidivr WORD PTR [esi+0x18]
  41990b:	sub    dl,bh
  41990d:	mov    bl,0x35
  41990f:	pop    edi
  419910:	cdq    
  419911:	cmp    BYTE PTR [edi+0xd],cl
  419914:	xchg   esi,eax
  419915:	push   0x9b5c4b63
  41991a:	sbb    eax,0x6316fecb
  41991f:	rol    DWORD PTR [ebx],1
  419921:	sub    eax,DWORD PTR [ecx+eax*4+0x40]
  419925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419926:	adc    DWORD PTR [edi+esi*2+0x14],ebx
  41992a:	inc    ebx
  41992b:	dec    esi
  41992c:	inc    ecx
  41992d:	jo     0x4198ee
  41992f:	inc    ebp
  419930:	(bad)  
  419931:	(bad)  
  419932:	push   esi
  419933:	into   
  419934:	xchg   BYTE PTR [edi+0x4d],al
  419937:	out    dx,al
  419938:	iret   
  419939:	bound  edx,QWORD PTR [edx+0x3a958b92]
  41993f:	mov    BYTE PTR [edi+0x48bfa76b],dh
  419945:	sub    al,dl
  419947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419948:	aam    0xfd
  41994a:	add    al,0x1e
  41994c:	lds    ebp,FWORD PTR [esi+0x1baeef35]
  419952:	mov    ds:0x883ac901,eax
  419957:	xchg   edx,eax
  419958:	jmp    0x4198ee
  41995a:	adc    eax,0x18041a94
  41995f:	js     0x419960
  419961:	add    ebx,DWORD PTR [edx]
  419963:	xchg   ecx,eax
  419964:	ins    BYTE PTR es:[edi],dx
  419965:	pop    edx
  419966:	call   0xf36caf47
  41996b:	sbb    al,0x88
  41996d:	push   edx
  41996e:	lea    edx,[ebp+0x7b]
  419971:	add    al,0xb6
  419973:	pusha  
  419974:	fadd   QWORD PTR [esi+edi*1-0x575cbc79]
  41997b:	stos   BYTE PTR es:[edi],al
  41997c:	fcom   QWORD PTR ds:0x62c58dc6
  419982:	ja     0x419957
  419984:	test   DWORD PTR [ebx+0x338dffd1],0x4fd77f1a
  41998e:	jl     0x419980
  419990:	or     bh,0xbe
  419993:	std    
  419994:	cmp    ebx,DWORD PTR [esp+eax*4]
  419997:	lock mov esp,0x82029727
  41999d:	int    0x8a
  41999f:	sti    
  4199a0:	mov    al,ds:0x44bcf68e
  4199a5:	imul   esp,DWORD PTR [eax+0x0],0x42
  4199a9:	sub    BYTE PTR [eax],dh
  4199ab:	add    eax,0xba2bb4e9
  4199b0:	lea    esp,[esi]
  4199b2:	jne    0x419942
  4199b4:	lods   eax,DWORD PTR ds:[esi]
  4199b5:	out    0x2f,eax
  4199b7:	pop    eax
  4199b8:	jnp    0x419999
  4199ba:	lods   al,BYTE PTR ds:[esi]
  4199bb:	push   ss
  4199bc:	ins    DWORD PTR es:[edi],dx
  4199bd:	into   
  4199be:	int3   
  4199bf:	add    DWORD PTR gs:[edx-0xb],0x39137c2a
  4199c7:	shl    DWORD PTR [ebp-0x60],0x8e
  4199cb:	call   0x3fcc:0x9aff0435
  4199d2:	jns    0x4199a5
  4199d4:	test   DWORD PTR [ecx+0x5a3a2252],edx
  4199da:	cmp    esi,ebp
  4199dc:	dec    ebp
  4199dd:	outs   dx,BYTE PTR ds:[esi]
  4199de:	and    bl,ch
  4199e0:	pop    edi
  4199e1:	ficom  WORD PTR [edx-0x20]
  4199e4:	pop    esp
  4199e5:	sti    
  4199e6:	leave  
  4199e7:	sbb    bl,BYTE PTR [eax+0x47d07e92]
  4199ed:	dec    esi
  4199ee:	and    al,0x36
  4199f0:	mov    esp,ds
  4199f2:	adc    BYTE PTR [esi+edi*2-0x73440830],dl
  4199f9:	dec    esp
  4199fa:	mov    al,0xd8
  4199fc:	xor    DWORD PTR [edi+0x5d943c8a],ecx
  419a02:	pushf  
  419a03:	cmc    
  419a04:	cmp    BYTE PTR [esp+ecx*8],al
  419a07:	out    dx,al
  419a08:	into   
  419a09:	pop    ecx
  419a0a:	sbb    al,0x52
  419a0c:	pusha  
  419a0d:	or     ebx,DWORD PTR [ebx-0x70]
  419a10:	jae    0x419a77
  419a12:	or     eax,edi
  419a14:	aad    0x82
  419a16:	rcl    BYTE PTR [edi-0x7b],cl
  419a19:	jge    0x419a50
  419a1b:	sbb    edi,DWORD PTR [ebx-0x4e]
  419a1e:	loope  0x419a2a
  419a20:	test   al,0x18
  419a22:	sbb    DWORD PTR [ebx],0x1b
  419a25:	dec    edi
  419a26:	jecxz  0x4199db
  419a28:	dec    edi
  419a29:	jecxz  0x419a82
  419a2b:	(bad)  
  419a2c:	shl    DWORD PTR gs:[ebx+0x2c],cl
  419a30:	mov    ?,WORD PTR [eax+0x1f055360]
  419a36:	or     al,0x21
  419a38:	cld    
  419a39:	mov    ebp,DWORD PTR [ecx+0x79186f3b]
  419a3f:	mov    eax,es:0x6a6b42ae
  419a45:	xchg   BYTE PTR [edx+0x1aad0f41],dl
  419a4b:	js     0x419a32
  419a4d:	cmp    al,BYTE PTR [edi]
  419a4f:	jbe    0x419aad
  419a51:	fnstenv [edx+0x21a14c83]
  419a57:	adc    al,0x6c
  419a59:	xchg   edx,eax
  419a5a:	xchg   edx,eax
  419a5b:	mov    DWORD PTR [ebp-0x16],edi
  419a5e:	ret    0xcfc8
  419a61:	scas   eax,DWORD PTR es:[edi]
  419a62:	add    al,0xd
  419a64:	popa   
  419a65:	into   
  419a66:	and    al,0x18
  419a68:	shl    edx,cl
  419a6a:	fistp  QWORD PTR [esi-0x43795aa]
  419a70:	push   esp
  419a71:	(bad)  
  419a73:	pop    eax
  419a74:	push   ecx
  419a75:	push   es
  419a76:	shl    DWORD PTR [edi+ebp*2+0x75],0x50
  419a7b:	rcr    BYTE PTR [esi],1
  419a7d:	mov    cl,0x8a
  419a7f:	cmp    al,0x20
  419a81:	icebp  
  419a82:	and    BYTE PTR [ecx+0xd],bl
  419a85:	pop    esi
  419a86:	retw   
  419a88:	sub    al,0x8e
  419a8a:	in     al,dx
  419a8b:	fist   WORD PTR [ebp-0x39]
  419a8e:	neg    DWORD PTR [eax]
  419a90:	(bad)  
  419a91:	sahf   
  419a92:	mov    esi,0xaf3fbb29
  419a97:	(bad)  
  419a98:	stc    
  419a99:	cld    
  419a9a:	dec    esp
  419a9b:	sub    edx,DWORD PTR ss:[edx+0x1e]
  419a9f:	or     al,0x56
  419aa1:	rcl    BYTE PTR [edi],0x56
  419aa4:	in     al,dx
  419aa5:	inc    edi
  419aa6:	shl    DWORD PTR [edi+0x3c],0x87
  419aaa:	or     al,BYTE PTR [ecx-0x7d4f54c8]
  419ab0:	and    bh,cl
  419ab2:	dec    ebx
  419ab3:	or     al,0xdf
  419ab5:	add    DWORD PTR [edi+eiz*4-0x73dd4bf6],esp
  419abc:	int3   
  419abd:	jle    0x419a6f
  419abf:	xor    edx,ebp
  419ac1:	loope  0x419aa3
  419ac3:	imul   ecx,DWORD PTR ds:0xd32d95e1,0xea1b581d
  419acd:	cdq    
  419ace:	(bad)  
  419acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ad0:	inc    ecx
  419ad2:	into   
  419ad3:	add    al,0xd5
  419ad5:	int3   
  419ad6:	add    al,0x3
  419ad8:	xchg   edx,eax
  419ad9:	neg    BYTE PTR [ebp-0x77]
  419adc:	setnp  ah
  419adf:	jno    0x419b34
  419ae1:	not    BYTE PTR [ebx]
  419ae3:	jp     0x419a90
  419ae5:	hlt    
  419ae6:	xchg   ecx,eax
  419ae7:	jns    0x419b11
  419ae9:	out    0x5e,eax
  419aeb:	xor    eax,0x36307b10
  419af0:	jmp    0x6f31:0x8ad21811
  419af7:	jp     0x419a98
  419af9:	enter  0x16a5,0x8c
  419afd:	push   cs
  419afe:	jle    0x419b29
  419b00:	lea    esi,[edi]
  419b02:	or     ah,BYTE PTR [esi+0xe]
  419b05:	pushf  
  419b06:	and    esi,edi
  419b08:	arpl   WORD PTR [ecx-0x42],ax
  419b0b:	inc    esi
  419b0c:	xchg   esi,eax
  419b0d:	out    dx,al
  419b0e:	push   cs
  419b0f:	into   
  419b10:	in     eax,dx
  419b11:	inc    esp
  419b12:	sub    BYTE PTR [ebp+0x3c],bl
  419b15:	pop    eax
  419b16:	sbb    BYTE PTR [ecx+0x37],0xd8
  419b1a:	xor    ebp,DWORD PTR [edx]
  419b1c:	xchg   DWORD PTR [ebx],ebp
  419b1e:	sti    
  419b1f:	neg    BYTE PTR [edx+0x44]
  419b22:	push   es
  419b23:	xor    al,BYTE PTR [eax-0x52]
  419b26:	push   ecx
  419b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b28:	push   cs
  419b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b2a:	stos   BYTE PTR es:[edi],al
  419b2b:	cmp    DWORD PTR [ecx+0x8],0xffffffd7
  419b2f:	adc    al,0x9c
  419b31:	fstp   TBYTE PTR [ecx-0x43735ef8]
  419b37:	xchg   ebx,eax
  419b38:	and    eax,0xdc3642dd
  419b3d:	xor    ecx,DWORD PTR [edi+0x24]
  419b40:	jl     0x419b2d
  419b42:	or     BYTE PTR [esi],bl
  419b44:	cmp    DWORD PTR [eax+ebx*2+0x36b0f4e1],eax
  419b4b:	loope  0x419bbf
  419b4d:	aas    
  419b4e:	jae    0x419afd
  419b50:	sub    dh,cl
  419b52:	imul   ecx,DWORD PTR [edi+0x5d],0x5ae5b8a
  419b59:	or     eax,0xce95b545
  419b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b5f:	inc    ecx
  419b60:	sub    al,0x79
  419b62:	xor    eax,esi
  419b64:	scas   eax,DWORD PTR es:[edi]
  419b65:	popa   
  419b66:	iret   
  419b67:	cmp    eax,0xdd07fa67
  419b6c:	or     DWORD PTR [esi-0xbab068],ebp
  419b72:	sbb    eax,0x6488eaec
  419b77:	or     al,0x7
  419b79:	rcr    BYTE PTR [ecx-0x78eeb6a1],1
  419b7f:	fs (bad) 
  419b81:	outs   dx,DWORD PTR ds:[esi]
  419b82:	cmp    eax,0x1ced4e19
  419b87:	inc    eax
  419b88:	xor    al,0xdc
  419b8a:	fs hlt 
  419b8c:	jp     0x419b40
  419b8e:	std    
  419b8f:	xchg   esp,eax
  419b90:	xchg   DWORD PTR [esi+0x7b],ebp
  419b93:	ficom  WORD PTR [edi+0x76]
  419b96:	inc    edi
  419b97:	sub    BYTE PTR [edx+0x40],0xc8
  419b9b:	xor    al,0xcf
  419b9d:	sbb    ah,BYTE PTR [esi-0x6f]
  419ba0:	adc    DWORD PTR [ecx],edx
  419ba2:	xchg   esi,eax
  419ba3:	retf   
  419ba4:	push   cs
  419ba5:	pop    edx
  419ba6:	dec    ecx
  419ba7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  419ba9:	add    ah,cl
  419bab:	inc    ebp
  419bac:	mov    ebx,DWORD PTR [esi]
  419bae:	lea    esp,[ebp+0x31]
  419bb1:	aam    0x2c
  419bb3:	fs add edx,eax
  419bb6:	push   edi
  419bb7:	jg     0x419c21
  419bb9:	cs icebp 
  419bbb:	mov    BYTE PTR [eax+0x4d],cl
  419bbe:	jno    0x419b4f
  419bc0:	xchg   ebx,eax
  419bc1:	fsubp  st(5),st
  419bc3:	out    0xad,eax
  419bc5:	test   al,0xb6
  419bc7:	pusha  
  419bc8:	jae    0x419b72
  419bca:	nop
  419bcb:	sub    DWORD PTR [eax],ebx
  419bcd:	retf   
  419bce:	(bad)
  419bd1:	loopne 0x419b93
  419bd3:	inc    ecx
  419bd4:	daa    
  419bd5:	mov    esp,0x35083205
  419bda:	jle    0x419bbb
  419bdc:	psubusw mm0,QWORD PTR [edi]
  419bdf:	stos   DWORD PTR es:[edi],eax
  419be0:	and    DWORD PTR [edx],0x75556af6
  419be6:	ret    0x7ab7
  419be9:	push   0x99743274
  419bee:	and    al,0x8f
  419bf0:	cmc    
  419bf1:	call   0x598f70dd
  419bf6:	xchg   edx,eax
  419bf7:	xchg   esi,eax
  419bf8:	pop    ebp
  419bf9:	sub    DWORD PTR [ebp+0x72],eax
  419bfc:	pop    edi
  419bfd:	aas    
  419bfe:	cmp    edx,DWORD PTR [ecx]
  419c00:	xor    eax,0xa0b39693
  419c05:	dec    ecx
  419c06:	add    DWORD PTR [eax+0x11],0x68330f4b
  419c0d:	pop    ds
  419c0e:	jnp    0x419bee
  419c10:	xchg   esp,eax
  419c11:	leave  
  419c12:	dec    ecx
  419c13:	xchg   ax,ax
  419c15:	inc    ecx
  419c16:	mov    edx,0xe48588c
  419c1b:	jl     0x419c64
  419c1d:	imul   esp,DWORD PTR [ebx-0x40],0x1640f970
  419c24:	loope  0x419c18
  419c26:	jo     0x419c80
  419c28:	inc    ebx
  419c29:	pop    ebp
  419c2a:	mov    eax,ds:0x1f981228
  419c2f:	rcr    cl,1
  419c31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c32:	mov    esp,DWORD PTR [eax-0x6a]
  419c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c36:	cmp    bh,BYTE PTR [eax+0x757fa91f]
  419c3c:	pop    eax
  419c3d:	mov    esp,0xe2cc703b
  419c42:	hlt    
  419c43:	arpl   di,si
  419c45:	adc    eax,0xda909fee
  419c4a:	sbb    DWORD PTR [ebx+0x3944cc9b],esi
  419c50:	verw   ax
  419c53:	ret    
  419c54:	pop    ebp
  419c55:	bound  esi,QWORD PTR [ebp-0x53]
  419c58:	and    esp,0x67
  419c5b:	(bad)  
  419c5c:	shl    BYTE PTR [esi+0x5a],1
  419c5f:	jne    0x419c6f
  419c61:	pop    ecx
  419c62:	nop
  419c63:	repz shl BYTE PTR [ecx+0x33],0x31
  419c68:	xchg   ebp,eax
  419c69:	or     esp,DWORD PTR [ebx+0x1c]
  419c6c:	pop    edi
  419c6d:	clc    
  419c6e:	adc    eax,0x1937932e
  419c73:	stc    
  419c74:	test   DWORD PTR [ebx],eax
  419c76:	jecxz  0x419c83
  419c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c79:	push   edx
  419c7a:	or     DWORD PTR [ecx+0x76d8cbf9],0x34
  419c81:	pop    es
  419c82:	cli    
  419c83:	and    cl,BYTE PTR cs:[bx-0x6c93]
  419c89:	test   DWORD PTR [eax],0x39703c49
  419c8f:	std    
  419c90:	mov    ah,BYTE PTR ds:0x22157e1b
  419c96:	jg     0x419c68
  419c98:	inc    edx
  419c99:	sahf   
  419c9a:	cld    
  419c9b:	mov    cl,0xe6
  419c9d:	xor    eax,0xce4e9b69
  419ca2:	jbe    0x419c27
  419ca4:	outs   dx,BYTE PTR ds:[esi]
  419ca5:	xor    edx,esi
  419ca7:	and    ecx,DWORD PTR [eax]
  419ca9:	push   ebx
  419caa:	inc    eax
  419cab:	ret    0x6265
  419cae:	mov    ch,0xf8
  419cb0:	and    al,0xb6
  419cb2:	aaa    
  419cb3:	loop   0x419c38
  419cb5:	shl    DWORD PTR ds:0x9dfda4fd,1
  419cbb:	adc    eax,0xd8081838
  419cc0:	mov    ds:0xcc241916,eax
  419cc5:	inc    ecx
  419cc6:	cmp    eax,0x9a9b69bd
  419ccb:	arpl   WORD PTR [ebp-0x13fb3afc],si
  419cd1:	out    0x97,al
  419cd3:	fdivr  DWORD PTR [esi+0x13]
  419cd6:	popa   
  419cd7:	inc    ebp
  419cd8:	scas   eax,DWORD PTR es:[edi]
  419cd9:	jae    0x419c86
  419cdb:	sub    BYTE PTR [edi+0x32a6d5bc],dh
  419ce1:	out    dx,al
  419ce2:	rcl    edi,0x54
  419ce5:	inc    esp
  419ce6:	jecxz  0x419cc5
  419ce8:	pop    edx
  419ce9:	jns    0x419ca2
  419ceb:	sahf   
  419cec:	scas   al,BYTE PTR es:[edi]
  419ced:	test   eax,0x3fb66fab
  419cf2:	pop    ebx
  419cf3:	adc    eax,0xbf79e026
  419cf8:	rcl    BYTE PTR [ebp-0x3f],0x22
  419cfc:	(bad)  
  419cfd:	and    BYTE PTR [eax],ah
  419cff:	or     dh,al
  419d01:	xchg   esi,eax
  419d02:	add    esi,DWORD PTR [ebx+0x654d8476]
  419d08:	loop   0x419cb6
  419d0a:	mov    ch,0xbb
  419d0c:	pop    esp
  419d0d:	aaa    
  419d0e:	dec    DWORD PTR [edx-0x76641b36]
  419d14:	pop    esi
  419d15:	fsubr  QWORD PTR [eax]
  419d17:	inc    ebp
  419d18:	add    BYTE PTR [eax+0x1f],cl
  419d1b:	cmp    ebp,DWORD PTR [ecx]
  419d1d:	out    dx,eax
  419d1e:	out    0x78,eax
  419d20:	jno    0x419ce0
  419d22:	jl     0x419d9f
  419d24:	jge    0x419d3f
  419d26:	xchg   esi,eax
  419d27:	cmp    edx,DWORD PTR es:[edx]
  419d2a:	loope  0x419d49
  419d2c:	mov    esp,0xfeee5dd0
  419d31:	xchg   BYTE PTR [ebx],ah
  419d33:	das    
  419d34:	outs   dx,DWORD PTR ds:[esi]
  419d35:	jno    0x419d06
  419d37:	add    ebp,eax
  419d39:	nop
  419d3a:	and    ecx,eax
  419d3c:	stc    
  419d3d:	in     al,0xa
  419d3f:	cdq    
  419d40:	lock xchg DWORD PTR [edi+0x23b5a380],ebx
  419d47:	mov    eax,ds:0xcca469d8
  419d4c:	(bad)  
  419d4d:	test   eax,0x44c4f185
  419d52:	mov    DWORD PTR [ebx+0x48],edi
  419d55:	daa    
  419d56:	into   
  419d57:	xor    eax,0xd884efc7
  419d5c:	jecxz  0x419cdf
  419d5e:	xchg   esi,eax
  419d5f:	mov    bh,0x36
  419d61:	std    
  419d62:	mov    ebp,0x8f9f41b7
  419d67:	leave  
  419d68:	loopne 0x419dd8
  419d6a:	pop    esp
  419d6b:	mov    bl,0x64
  419d6d:	lods   eax,DWORD PTR ds:[esi]
  419d6e:	add    al,0x4
  419d70:	(bad)  
  419d71:	icebp  
  419d72:	cld    
  419d73:	dec    esi
  419d74:	call   DWORD PTR [esi]
  419d76:	arpl   WORD PTR [eax+esi*8+0x6],dx
  419d7a:	(bad)  
  419d7c:	pop    eax
  419d7d:	loope  0x419de0
  419d7f:	mov    ebp,0x91188f9d
  419d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d85:	(bad)  [eax]
  419d87:	mov    ah,0x4c
  419d89:	dec    eax
  419d8a:	sti    
  419d8b:	sub    eax,0x4dea7f36
  419d90:	(bad)  
  419d91:	test   al,0x39
  419d93:	out    0x4e,eax
  419d95:	mov    ecx,esp
  419d97:	or     al,0x1c
  419d99:	jmp    0x419d8b
  419d9b:	sbb    eax,0x54f9bde
  419da0:	sub    al,BYTE PTR [eax]
  419da2:	xchg   DWORD PTR [edi],ebp
  419da4:	loop   0x419d2a
  419da6:	scas   eax,DWORD PTR es:[edi]
  419da7:	in     al,dx
  419da8:	fsub   QWORD PTR [edi-0x78f5b4e9]
  419dae:	sbb    DWORD PTR [ebp+0x49],edi
  419db1:	(bad)  
  419db2:	dec    ebx
  419db3:	lods   al,BYTE PTR ds:[esi]
  419db4:	out    0x49,al
  419db6:	popf   
  419db7:	sbb    BYTE PTR [edx],bl
  419db9:	test   al,0xb0
  419dbb:	in     al,dx
  419dbc:	mov    ah,0x14
  419dbe:	std    
  419dbf:	sbb    eax,0xc2760125
  419dc4:	push   0x56
  419dc6:	jnp    0x419dba
  419dc8:	mov    ebp,0xaa79c450
  419dcd:	cmp    edi,edx
  419dcf:	mov    eax,DWORD PTR [ebp+0x5a]
  419dd2:	add    BYTE PTR [edx-0x67f4d720],ch
  419dd8:	mov    WORD PTR [ebp-0x3b],fs
  419ddb:	xchg   ebx,eax
  419ddc:	call   0x171c:0xf725125f
  419de3:	xlat   BYTE PTR ds:[ebx]
  419de4:	sbb    ecx,ebp
  419de6:	push   ds
  419de7:	jle    0x419df0
  419de9:	pop    edx
  419dea:	cmp    BYTE PTR [bp+si-0x4005],dh
  419def:	aaa    
  419df0:	adc    BYTE PTR [edx+0x6611c820],ch
  419df6:	je     0x419e66
  419df8:	lock push edi
  419dfa:	gs push es
  419dfc:	sbb    DWORD PTR [eax],edx
  419dfe:	shl    al,0x74
  419e01:	fnstcw WORD PTR [ebx+0x4d]
  419e04:	sbb    esp,DWORD PTR [ebx-0x12]
  419e07:	outs   dx,DWORD PTR ds:[esi]
  419e08:	jg     0x419e33
  419e0a:	and    al,0x79
  419e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e0d:	jg     0x419dcb
  419e0f:	iret   
  419e10:	int    0xf5
  419e12:	and    edx,eax
  419e14:	in     eax,0xa2
  419e16:	(bad)  [ecx-0x775ce3c4]
  419e1c:	fmul   DWORD PTR [edx]
  419e1e:	fwait
  419e1f:	js     0x419e48
  419e21:	ret    
  419e22:	repnz inc esp
  419e24:	outs   dx,BYTE PTR ds:[esi]
  419e25:	inc    eax
  419e26:	push   edx
  419e27:	push   es
  419e28:	jno    0x419e71
  419e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e2b:	leave  
  419e2c:	jne    0x419df4
  419e2e:	mov    edx,0xc6811c99
  419e33:	mov    edx,es
  419e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e36:	xchg   DWORD PTR [edi+0x14],ecx
  419e39:	mov    edx,0x976eb3b6
  419e3e:	push   0x79
  419e40:	out    dx,eax
  419e41:	dec    esp
  419e42:	jmp    0x7d45:0xb1245e9d
  419e49:	and    al,0xad
  419e4b:	cmp    BYTE PTR [edx-0x51],al
  419e4e:	cmp    ebp,DWORD PTR [edi+0x3f303db7]
  419e54:	(bad)  
  419e55:	mov    ebp,0x775d6e90
  419e5a:	daa    
  419e5b:	sahf   
  419e5c:	push   0x3ab67637
  419e61:	and    eax,0xffe88440
  419e66:	mov    edx,0x9b78056b
  419e6b:	imul   esp,DWORD PTR [eax],0x8ebe6f22
  419e71:	push   cs
  419e72:	test   BYTE PTR [edx],dh
  419e74:	cdq    
  419e75:	jge    0x419e1f
  419e77:	in     eax,dx
  419e78:	es in  eax,0x77
  419e7b:	push   0xffffffab
  419e7d:	jecxz  0x419e93
  419e7f:	je     0x419ece
  419e81:	sub    edi,ecx
  419e83:	daa    
  419e84:	sahf   
  419e85:	xor    ebx,DWORD PTR [ecx]
  419e87:	inc    esp
  419e88:	js     0x419e7b
  419e8a:	sbb    eax,ebx
  419e8c:	mov    bh,0xcf
  419e8e:	xor    BYTE PTR [ebp+0x75],ah
  419e91:	push   cs
  419e92:	ror    BYTE PTR [eax+0x25],cl
  419e95:	mov    bl,0x6b
  419e97:	les    edi,FWORD PTR [ebx]
  419e99:	lahf   
  419e9a:	(bad)
  419e9d:	scas   al,BYTE PTR es:[edi]
  419e9e:	xor    al,0x33
  419ea0:	(bad)  
  419ea1:	jle    0x419e4c
  419ea3:	repz cmp eax,0xdbadf13d
  419ea9:	adc    bh,BYTE PTR [ebp+edi*4-0x3b492ba1]
  419eb0:	push   edi
  419eb1:	nop
  419eb2:	divps  xmm6,xmm0
  419eb5:	mov    ds:0xb4bbaf14,al
  419eba:	add    esi,DWORD PTR [edx+0x9]
  419ebd:	mov    BYTE PTR [ebx+0x54],bh
  419ec0:	or     ecx,DWORD PTR [eax+0x5c]
  419ec3:	shl    BYTE PTR ds:[esi+0x47],0xf6
  419ec8:	pop    esi
  419ec9:	ret    
  419eca:	jmp    DWORD PTR [edx]
  419ecc:	mov    al,0xdf
  419ece:	aam    0x33
  419ed0:	fwait
  419ed1:	dec    edi
  419ed2:	or     BYTE PTR [ecx-0x3562b04],bh
  419ed8:	data16 xchg BYTE PTR ds:0x830eda89,al
  419edf:	add    BYTE PTR [esi+0x24187976],ah
  419ee5:	unpckhps xmm3,XMMWORD PTR [ebx+0x23]
  419ee9:	stos   DWORD PTR es:[edi],eax
  419eea:	inc    esi
  419eeb:	lock stos BYTE PTR es:[edi],al
  419eed:	cmp    al,BYTE PTR [ebp-0x65]
  419ef0:	dec    ecx
  419ef1:	enter  0xd8a8,0x1
  419ef5:	ss in  al,0xf5
  419ef8:	sahf   
  419ef9:	enter  0xbb72,0x9a
  419efd:	ret    
  419efe:	frstor [eax-0x79bb9c90]
  419f04:	xchg   DWORD PTR [ebp-0x40],edi
  419f07:	jo     0x419f04
  419f09:	aad    0x55
  419f0b:	adc    bh,BYTE PTR [ebx-0x1faae41a]
  419f11:	sbb    edi,DWORD PTR [edi]
  419f13:	pusha  
  419f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f15:	stos   BYTE PTR es:[edi],al
  419f16:	xor    ah,dh
  419f18:	inc    ecx
  419f19:	mov    WORD PTR [eax-0x69e28df7],ss
  419f1f:	jecxz  0x419f18
  419f21:	jo     0x419f50
  419f23:	dec    edi
  419f24:	xor    al,0x34
  419f26:	dec    esi
  419f27:	ds int 0xd1
  419f2a:	loopne 0x419eea
  419f2c:	jbe    0x419f16
  419f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f2f:	outs   dx,DWORD PTR ds:[esi]
  419f30:	xchg   BYTE PTR [ebx+0x6fe41caf],dl
  419f36:	pop    esi
  419f37:	adc    eax,0x469d2a62
  419f3c:	push   0x3530ae53
  419f41:	mov    ebx,0x28830211
  419f46:	mov    esp,0x4739dfac
  419f4b:	jnp    0x419f4b
  419f4d:	ins    BYTE PTR es:[edi],dx
  419f4e:	ss pop esp
  419f50:	dec    esp
  419f51:	ss or  eax,0x58a9b35c
  419f57:	xchg   ebp,eax
  419f58:	je     0xe4315a98
  419f5e:	xchg   BYTE PTR [ebp+0x24965d4c],al
  419f64:	adc    ecx,DWORD PTR [eax-0x4736cff4]
  419f6a:	pop    esp
  419f6b:	iret   
  419f6c:	test   BYTE PTR [eax],cl
  419f6e:	out    0x4e,al
  419f70:	pop    eax
  419f71:	clc    
  419f72:	into   
  419f73:	rcl    DWORD PTR [edx+0x2b9df63b],0xbf
  419f7a:	or     dl,ah
  419f7c:	xchg   edx,eax
  419f7d:	pusha  
  419f7e:	mov    esp,0xd901fd30
  419f83:	xchg   ebx,eax
  419f84:	stc    
  419f85:	mov    edx,0xe2821448
  419f8a:	cld    
  419f8b:	in     eax,0x94
  419f8d:	out    dx,al
  419f8e:	les    ebx,FWORD PTR [ecx-0x220f94d1]
  419f94:	ror    BYTE PTR [ebx-0x5ca2880c],0x3b
  419f9b:	les    esi,FWORD PTR [edi]
  419f9d:	xlat   BYTE PTR ds:[ebx]
  419f9e:	(bad)  
  419f9f:	jmp    0xacebc6ac
  419fa4:	xor    BYTE PTR [esi],0x73
  419fa7:	repz mov ebx,0x11b5a1f6
  419fad:	imul   edi,DWORD PTR [ebx+0x7a],0xffffffd9
  419fb1:	mov    edx,DWORD PTR [eax-0x79d79095]
  419fb7:	add    eax,0xf819514a
  419fbc:	int    0x67
  419fbe:	sub    DWORD PTR [ebx],0x5b
  419fc1:	push   esi
  419fc2:	jb     0x41a036
  419fc4:	inc    eax
  419fc5:	loopne 0x41a039
  419fc7:	pusha  
  419fc8:	inc    ecx
  419fc9:	bound  ebx,QWORD PTR [eax+0x7]
  419fcc:	dec    ebx
  419fcd:	loope  0x419f66
  419fcf:	call   0xbb3a94ea
  419fd4:	xchg   edi,eax
  419fd5:	clc    
  419fd6:	add    al,0x78
  419fd8:	pop    edx
  419fd9:	xchg   ecx,eax
  419fda:	pop    edi
  419fdb:	pusha  
  419fdc:	inc    edx
  419fdd:	cmp    al,0x4f
  419fdf:	xor    al,0xa4
  419fe1:	inc    eax
  419fe2:	sahf   
  419fe3:	imul   eax,DWORD PTR [ecx],0x61cd948d
  419fe9:	data16 jmp 0x41a006
  419fec:	mov    edi,es
  419fee:	pop    ds
  419fef:	xor    ebp,DWORD PTR [edi-0x37b570f4]
  419ff5:	mov    bh,0x80
  419ff7:	mov    ebx,0x79fcb2b
  419ffc:	lods   al,BYTE PTR ds:[esi]
  419ffd:	inc    esp
  419ffe:	retf   
  419fff:	dec    DWORD PTR [esi+0x681346e7]
  41a005:	xchg   edx,eax
  41a006:	aad    0x8
  41a008:	and    DWORD PTR [ebx-0x67],esi
  41a00b:	shl    BYTE PTR [edi+0x7d],1
  41a00e:	and    eax,0x34c328f8
  41a013:	sub    ah,BYTE PTR [edi-0x28]
  41a016:	push   ebp
  41a017:	cld    
  41a018:	call   0x5dc9c5a5
  41a01d:	sub    bl,ah
  41a01f:	add    BYTE PTR [esi+0x38],bl
  41a022:	mov    edx,0xb359b565
  41a027:	add    edi,DWORD PTR [edx-0x6]
  41a02a:	fidiv  DWORD PTR [ecx+0x16]
  41a02d:	sub    dl,cl
  41a02f:	fisub  WORD PTR ss:0x436440e9
  41a036:	das    
  41a037:	push   es
  41a038:	das    
  41a039:	(bad)  
  41a03b:	fsub   DWORD PTR [ecx]
  41a03d:	cmp    DWORD PTR [eax-0x2e],eax
  41a040:	bound  esp,QWORD PTR [ecx+0x6332b6ac]
  41a046:	inc    esp
  41a047:	test   eax,0xb54989bf
  41a04c:	in     eax,dx
  41a04d:	xor    al,0xc2
  41a04f:	ss scas eax,DWORD PTR es:[di]
  41a052:	add    ebp,DWORD PTR [eax-0x65]
  41a055:	test   BYTE PTR [edi-0x613fded9],0x3b
  41a05c:	push   eax
  41a05d:	ins    DWORD PTR es:[edi],dx
  41a05e:	adc    ecx,DWORD PTR [ebx+0x1b]
  41a061:	cmp    al,0x56
  41a063:	xchg   esi,eax
  41a064:	sub    al,0x1d
  41a066:	adc    ah,bl
  41a068:	mov    ebx,0x7ae63b7e
  41a06d:	es jbe 0x41a0e9
  41a070:	imul   esi,DWORD PTR [esi+ebp*1-0x596ff75d],0xc36199b3
  41a07b:	outs   dx,BYTE PTR ds:[esi]
  41a07c:	fisttp WORD PTR [esi-0x2a]
  41a07f:	aad    0x7c
  41a081:	(bad)  
  41a082:	(bad)  
  41a083:	repnz std 
  41a085:	inc    edi
  41a086:	aad    0x1e
  41a088:	add    al,0x21
  41a08a:	rcl    DWORD PTR [esi+0x75],0xde
  41a08e:	pusha  
  41a08f:	push   cs
  41a090:	mov    cl,0x76
  41a092:	dec    edx
  41a093:	mov    bh,0x41
  41a095:	cld    
  41a096:	icebp  
  41a097:	pop    ss
  41a098:	sub    eax,0x99be5ae0
  41a09d:	in     al,0xcc
  41a09f:	mov    al,0x86
  41a0a1:	xor    DWORD PTR [ebp+0x1e727fad],esp
  41a0a7:	das    
  41a0a8:	add    ch,BYTE PTR [edx+0x1e374543]
  41a0ae:	add    esi,edx
  41a0b0:	fild   WORD PTR [edi-0xa]
  41a0b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0b4:	fcomip st,st(2)
  41a0b6:	xor    esi,DWORD PTR ds:0xfba158c
  41a0bc:	cmp    ebp,DWORD PTR [eax]
  41a0be:	daa    
  41a0bf:	xchg   ebx,eax
  41a0c0:	inc    ecx
  41a0c1:	pop    edi
  41a0c2:	nop
  41a0c3:	or     eax,0xae54e101
  41a0c8:	sbb    ah,BYTE PTR [esi]
  41a0ca:	adc    eax,0x5ec5edd1
  41a0cf:	mov    esp,0x4bc1f2da
  41a0d4:	cwde   
  41a0d5:	adc    al,0x23
  41a0d7:	adc    al,0x18
  41a0d9:	fcom   QWORD PTR ss:[esi-0x752a44c9]
  41a0e0:	sub    DWORD PTR [edx],edx
  41a0e2:	imul   DWORD PTR es:[eax]
  41a0e5:	cmp    BYTE PTR [esi+0x5efbee1b],ah
  41a0eb:	sahf   
  41a0ec:	rcl    esi,cl
  41a0ee:	dec    ecx
  41a0ef:	push   ebx
  41a0f0:	dec    edi
  41a0f1:	or     ecx,DWORD PTR [eax-0x25]
  41a0f4:	and    DWORD PTR [esi+0x2a],edi
  41a0f7:	lea    ecx,ds:0x9f6c72bc
  41a0fd:	mov    ds:0x5b264142,eax
  41a102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a103:	mov    esi,0x5797e9c4
  41a108:	xor    BYTE PTR [esi],0x6c
  41a10b:	cld    
  41a10c:	imul   ecx,eax,0xffffff9a
  41a10f:	cmp    DWORD PTR [ecx+ebx*1-0x7c5190b],ebx
  41a116:	mov    BYTE PTR [esi+0x7f],dh
  41a119:	stos   DWORD PTR es:[edi],eax
  41a11a:	push   esi
  41a11b:	xchg   edx,eax
  41a11c:	or     BYTE PTR [edx-0x33],dh
  41a11f:	or     DWORD PTR [esi],esp
  41a121:	push   edx
  41a122:	jno    0x41a0df
  41a124:	imul   eax,DWORD PTR [eax],0xbd388b0f
  41a12a:	icebp  
  41a12b:	sub    BYTE PTR [ebp+0x1481cfeb],dh
  41a131:	adc    BYTE PTR [edi+0x6e],ah
  41a134:	cld    
  41a135:	iret   
  41a136:	jmp    0x8b7c:0x918fb6ee
  41a13d:	xor    eax,0xa9f1d39d
  41a142:	mov    al,0xa
  41a144:	add    bl,BYTE PTR [eax]
  41a146:	and    DWORD PTR [edi],edx
  41a148:	push   0xf0d4af79
  41a14d:	inc    edx
  41a14e:	or     eax,0x91bbd303
  41a153:	hlt    
  41a154:	pop    ss
  41a155:	add    ebx,eax
  41a157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a158:	inc    ecx
  41a159:	test   al,0xa0
  41a15b:	or     BYTE PTR [esi-0x6a51f666],dl
  41a161:	jbe    0x41a0f2
  41a163:	pop    ds
  41a164:	mov    bh,0x37
  41a166:	inc    edi
  41a167:	(bad)  
  41a168:	cmc    
  41a169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a16a:	neg    BYTE PTR [edi-0x52770a32]
  41a170:	hlt    
  41a171:	arpl   WORD PTR ds:0x60d9e2a6,cx
  41a177:	repz mov esp,0x830bc409
  41a17d:	mov    BYTE PTR [esp+ebp*4-0x7c162c85],cl
  41a184:	xchg   ecx,eax
  41a185:	sub    ebx,DWORD PTR [edx]
  41a187:	sahf   
  41a188:	shl    DWORD PTR [ebx+0x14],1
  41a18b:	aas    
  41a18c:	cmp    eax,edx
  41a18e:	std    
  41a18f:	ds cld 
  41a191:	ror    dl,1
  41a193:	out    0xfb,al
  41a195:	sti    
  41a196:	mov    ds:0x29e2a288,eax
  41a19b:	imul   esi,DWORD PTR [edi+0x33],0x11
  41a19f:	xchg   edi,eax
  41a1a0:	or     edx,esi
  41a1a2:	jmp    ebx
  41a1a4:	cwde   
  41a1a5:	xchg   edx,eax
  41a1a6:	cmp    cl,BYTE PTR [ebx+ecx*2]
  41a1a9:	out    0x79,al
  41a1ab:	cld    
  41a1ac:	mov    cl,0x51
  41a1ae:	cmp    ebp,DWORD PTR [edi-0x6c]
  41a1b1:	pushf  
  41a1b2:	cmp    BYTE PTR [ebx-0x7c],ch
  41a1b5:	mov    edx,0x8696cf82
  41a1ba:	test   DWORD PTR [ecx+0x237c72e2],edi
  41a1c0:	das    
  41a1c1:	out    dx,al
  41a1c2:	stc    
  41a1c3:	sbb    ecx,DWORD PTR [edi-0x5792e50f]
  41a1c9:	and    al,0x1f
  41a1cb:	jmp    0x39b5:0x18fed4b5
  41a1d2:	fld    TBYTE PTR [ebx]
  41a1d4:	fsub   DWORD PTR [eax+edx*4-0x74]
  41a1d8:	mov    al,0x42
  41a1da:	jne    0x41a216
  41a1dc:	leave  
  41a1dd:	ins    BYTE PTR es:[edi],dx
  41a1de:	(bad)  
  41a1df:	adc    ecx,edx
  41a1e1:	lods   al,BYTE PTR ds:[esi]
  41a1e2:	pusha  
  41a1e3:	das    
  41a1e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1e5:	dec    esi
  41a1e6:	ror    dh,0xf1
  41a1e9:	js     0x41a260
  41a1eb:	ins    DWORD PTR es:[edi],dx
  41a1ec:	dec    eax
  41a1ed:	pop    eax
  41a1ee:	mov    DWORD PTR [ebx+0x1d],edx
  41a1f1:	inc    esi
  41a1f2:	aas    
  41a1f3:	dec    ecx
  41a1f4:	and    bl,ah
  41a1f6:	inc    ebp
  41a1f7:	jmp    0x39ba99cd
  41a1fc:	scas   al,BYTE PTR es:[edi]
  41a1fd:	(bad)  
  41a1fe:	mov    ds:0x1f5aa0b,al
  41a203:	push   esp
  41a204:	(bad)  
  41a205:	dec    ecx
  41a206:	aaa    
  41a207:	inc    ebp
  41a208:	mov    ecx,0xaafc9c53
  41a20d:	mov    dl,0x6a
  41a20f:	xchg   edi,eax
  41a210:	mov    WORD PTR [edi+0x2f95f004],es
  41a216:	(bad)  
  41a217:	mov    ecx,0xd790f9aa
  41a21c:	or     eax,0xee69f461
  41a221:	cs int3 
  41a223:	pop    ds
  41a224:	mov    WORD PTR [ebx+edi*1],ds
  41a227:	out    0x96,eax
  41a229:	out    dx,eax
  41a22a:	into   
  41a22b:	lods   al,BYTE PTR ds:[esi]
  41a22c:	dec    ebp
  41a22d:	sbb    esi,edx
  41a22f:	stos   DWORD PTR es:[edi],eax
  41a230:	das    
  41a231:	daa    
  41a232:	fld    TBYTE PTR [edx]
  41a234:	xchg   esp,eax
  41a235:	sub    eax,0x74d22ea3
  41a23a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a23c:	dec    eax
  41a23d:	jns    0x41a1ff
  41a23f:	jge    0x41a22c
  41a241:	mov    al,0xa1
  41a243:	cmp    BYTE PTR [ebp-0x7da70cf5],bh
  41a249:	loope  0x41a1f7
  41a24b:	mov    dl,0xa5
  41a24d:	mov    esi,0x7558ac94
  41a252:	sbb    dh,0x62
  41a255:	out    0xb,al
  41a257:	cmp    BYTE PTR [eax+esi*4],cl
  41a25a:	fld    QWORD PTR ds:0xaad014ba
  41a260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a261:	sbb    DWORD PTR [ebx+0x68],ebp
  41a264:	mov    bh,0x1a
  41a266:	inc    ecx
  41a267:	jmp    0x83f3:0x6d69af7e
  41a26e:	(bad)  
  41a26f:	loope  0x41a274
  41a271:	jo     0x41a221
  41a273:	and    BYTE PTR [ecx+0x29],al
  41a276:	stc    
  41a277:	mov    cl,BYTE PTR [edx+esi*1+0x4d52f73b]
  41a27e:	jge    0x41a2e8
  41a280:	cmp    DWORD PTR [ebx],esi
  41a282:	xor    DWORD PTR [edx+ebp*2-0x23a840fd],ecx
  41a289:	dec    ebp
  41a28a:	jl     0x41a28a
  41a28c:	repz pushf 
  41a28e:	fs mov dl,0x7e
  41a291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a292:	or     eax,0xddae6dd2
  41a297:	xchg   esp,eax
  41a298:	jl     0x41a23c
  41a29a:	and    bl,BYTE PTR [ecx]
  41a29c:	int3   
  41a29d:	fwait
  41a29e:	ret    0xb844
  41a2a1:	pusha  
  41a2a2:	(bad)  
  41a2a3:	pop    ebx
  41a2a4:	rol    BYTE PTR [edx-0x3b],0x28
  41a2a8:	pop    esi
  41a2a9:	shl    DWORD PTR [edx-0x19],1
  41a2ac:	cmp    BYTE PTR [edi],ah
  41a2ae:	and    dh,0x25
  41a2b1:	sub    DWORD PTR [ebp+0x65],ebx
  41a2b4:	out    0x95,al
  41a2b6:	jo     0x41a318
  41a2b8:	stos   DWORD PTR es:[edi],eax
  41a2b9:	fsubrp st(3),st
  41a2bb:	or     ah,BYTE PTR [ecx-0x5fd849e7]
  41a2c1:	xchg   esi,eax
  41a2c2:	add    edx,DWORD PTR [edi-0x14ceaf95]
  41a2c8:	sbb    DWORD PTR [esi],esp
  41a2ca:	xchg   BYTE PTR es:0xcf8e68a,bh
  41a2d1:	and    edi,esi
  41a2d3:	sbb    dl,BYTE PTR [eax]
  41a2d5:	in     eax,dx
  41a2d6:	lahf   
  41a2d7:	dec    esi
  41a2d8:	pop    ecx
  41a2d9:	lods   al,BYTE PTR ds:[esi]
  41a2da:	loope  0x41a304
  41a2dc:	sbb    DWORD PTR [ebx-0xe],ebx
  41a2df:	sub    al,0xe0
  41a2e1:	push   0xffffffeb
  41a2e3:	mov    edi,0xbcfc5cee
  41a2e8:	(bad)  
  41a2e9:	and    ch,BYTE PTR [ebx-0x62]
  41a2ec:	jmp    0xc604cdf
  41a2f1:	call   DWORD PTR ds:0xe47ab678
  41a2f7:	mov    ds:0xf9450a79,eax
  41a2fc:	jns    0x41a2d4
  41a2fe:	add    DWORD PTR fs:[ecx+0x5e3ad45a],0xd94faf33
  41a309:	int3   
  41a30a:	xor    eax,0x23ba1d7e
  41a30f:	hlt    
  41a310:	or     ebx,DWORD PTR [edi-0xb]
  41a313:	pop    edi
  41a314:	xchg   al,bh
  41a316:	shr    DWORD PTR [esi-0x66b2f1ff],1
  41a31c:	mov    cs,WORD PTR [ecx-0x143f9f81]
  41a322:	dec    ecx
  41a323:	imul   ecx,DWORD PTR [edx+eax*4+0x3dbce51],0xd25aa80d
  41a32e:	sub    ah,BYTE PTR [esi-0x4ee32c4f]
  41a334:	imul   ecx,edi,0xffffffa4
  41a337:	xor    al,0x60
  41a339:	je     0x41a306
  41a33b:	fsubr  QWORD PTR [edx+edi*4-0x26]
  41a33f:	pop    es
  41a340:	(bad)
  41a343:	in     eax,0xdc
  41a345:	jge    0x41a398
  41a347:	mov    ebx,0x2ca4e129
  41a34c:	cld    
  41a34d:	sub    al,0xb1
  41a34f:	sub    al,0x57
  41a351:	rol    dl,cl
  41a353:	sbb    edi,esp
  41a355:	pushf  
  41a356:	fst    DWORD PTR [ecx]
  41a358:	mov    edi,DWORD PTR [ecx]
  41a35a:	sahf   
  41a35b:	(bad)  
  41a35c:	(bad)  
  41a35d:	(bad)  
  41a35e:	or     eax,0x24dee7a2
  41a363:	jo     0x41a365
  41a365:	in     al,0xab
  41a367:	das    
  41a368:	loope  0x41a2eb
  41a36a:	inc    edx
  41a36b:	jge    0x41a33c
  41a36d:	jbe    0x41a382
  41a36f:	jmp    0xa55b5b98
  41a374:	push   esi
  41a375:	pop    ss
  41a376:	push   esp
  41a377:	adc    ebp,DWORD PTR [esi-0x425f684a]
  41a37d:	loopne 0x41a3f6
  41a37f:	rol    DWORD PTR [ebx-0x7a55bbbe],0xc4
  41a386:	ins    BYTE PTR es:[edi],dx
  41a387:	push   ss
  41a388:	popa   
  41a389:	sbb    esi,DWORD PTR [edx+0x4f40fe7c]
  41a38f:	mov    dh,0xdf
  41a391:	cli    
  41a392:	ins    BYTE PTR es:[edi],dx
  41a393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a394:	push   esi
  41a395:	or     DWORD PTR [edi-0x35e261ce],ebp
  41a39b:	add    ebx,0x4bd3fdfd
  41a3a1:	sbb    al,0x89
  41a3a3:	pop    ds
  41a3a4:	mov    bh,0x60
  41a3a6:	(bad)  
  41a3a7:	mov    ecx,esp
  41a3a9:	dec    eax
  41a3aa:	cwde   
  41a3ab:	inc    edi
  41a3ac:	mov    al,ds:0x52df9315
  41a3b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3b2:	add    BYTE PTR [edx-0x38280c4b],ah
  41a3b8:	or     al,0xde
  41a3ba:	push   cs
  41a3bb:	fiadd  WORD PTR [edi+edi*8]
  41a3be:	shl    BYTE PTR [edx+ebp*8-0xfdd6ea3],1
  41a3c5:	mov    al,ds:0x9119f973
  41a3ca:	sar    DWORD PTR [esi-0x7f],1
  41a3cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3ce:	sar    BYTE PTR [ecx+0x2e],1
  41a3d1:	push   ebp
  41a3d2:	push   esi
  41a3d3:	inc    ebx
  41a3d4:	inc    ecx
  41a3d5:	stos   DWORD PTR es:[edi],eax
  41a3d6:	stos   BYTE PTR es:[edi],al
  41a3d7:	jge    0x41a416
  41a3d9:	shr    BYTE PTR [ebx-0x41],0x6e
  41a3dd:	(bad)  
  41a3de:	shl    BYTE PTR [edi+0x39b44655],1
  41a3e4:	scas   al,BYTE PTR es:[edi]
  41a3e5:	cmp    DWORD PTR [edi],esi
  41a3e7:	inc    edx
  41a3e8:	dec    edi
  41a3e9:	repz neg BYTE PTR [esi-0x79]
  41a3ed:	xchg   DWORD PTR [ebx+0x1e26d4b0],ecx
  41a3f3:	or     DWORD PTR ds:0xd2fcb9da,edx
  41a3f9:	in     eax,dx
  41a3fa:	cwde   
  41a3fb:	push   edi
  41a3fc:	mov    eax,0xd581b43d
  41a401:	mov    cl,0xf8
  41a403:	jge    0x41a3ab
  41a405:	pop    esi
  41a406:	adc    al,0x4c
  41a408:	(bad)  
  41a409:	repnz and eax,0xb5b9c539
  41a40f:	(bad)  
  41a411:	xor    DWORD PTR [ebx+0xae7aaf6],0x5b
  41a418:	add    eax,0xea2bf919
  41a41d:	bnd ret 
  41a41f:	adc    dl,dh
  41a421:	adc    ebp,DWORD PTR [esi+ecx*2-0x728723ae]
  41a428:	out    dx,al
  41a429:	mov    ebp,0xb11c0fe8
  41a42e:	pop    esp
  41a42f:	dec    edi
  41a430:	sahf   
  41a431:	lahf   
  41a432:	jo     0x41a3f3
  41a434:	and    ecx,eax
  41a436:	ret    
  41a437:	or     DWORD PTR [ecx-0x6f],ecx
  41a43a:	xchg   edx,eax
  41a43b:	pop    ecx
  41a43c:	sbb    eax,0x5909d720
  41a441:	cmp    al,0x59
  41a443:	inc    edi
  41a444:	sub    al,0x64
  41a446:	jne    0x41a445
  41a448:	inc    BYTE PTR [eax-0x1]
  41a44b:	or     DWORD PTR [edi+0x5c81d3bb],edx
  41a451:	xchg   edi,eax
  41a452:	gs ret 0xcb9f
  41a456:	fwait
  41a457:	out    0xad,al
  41a459:	sub    edx,DWORD PTR [esi+0x6d8ed67d]
  41a45f:	retf   
  41a460:	(bad)  
  41a461:	stos   DWORD PTR es:[edi],eax
  41a462:	push   esi
  41a463:	inc    ebx
  41a464:	push   0xe10e08eb
  41a469:	mov    BYTE PTR [edi-0x25],ah
  41a46c:	ja     0x41a467
  41a46e:	shr    BYTE PTR [edi],cl
  41a470:	jl     0x41a42d
  41a472:	movsx  esp,WORD PTR [ebx]
  41a475:	test   BYTE PTR [esi],ch
  41a477:	inc    ebp
  41a478:	xor    BYTE PTR [edi-0x173a2ddf],ah
  41a47e:	pop    DWORD PTR [eax-0x16eaa577]
  41a484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a485:	xor    al,0xcb
  41a487:	test   al,0x85
  41a489:	shl    DWORD PTR [esi+0x2d],1
  41a48c:	iret   
  41a48d:	out    0x9d,eax
  41a48f:	scas   al,BYTE PTR es:[edi]
  41a490:	daa    
  41a491:	mov    eax,0xe85b04a4
  41a496:	dec    edi
  41a497:	dec    ebx
  41a498:	xchg   ebx,eax
  41a499:	dec    ecx
  41a49a:	(bad)  
  41a49b:	and    bl,BYTE PTR [edx]
  41a49d:	push   0x567502f1
  41a4a2:	out    dx,al
  41a4a3:	les    edx,FWORD PTR [ecx]
  41a4a5:	xor    eax,0x61e1e9e7
  41a4aa:	xchg   esp,eax
  41a4ab:	pop    edi
  41a4ac:	xor    bl,cl
  41a4ae:	in     al,dx
  41a4af:	adc    DWORD PTR [eax-0x1f],esp
  41a4b2:	int    0x9b
  41a4b4:	test   BYTE PTR [eax+0x4d],bh
  41a4b7:	dec    ebx
  41a4b8:	std    
  41a4b9:	out    dx,eax
  41a4ba:	outs   dx,BYTE PTR ds:[esi]
  41a4bb:	and    eax,0xed610d75
  41a4c0:	xor    eax,0x297499df
  41a4c5:	and    DWORD PTR [edi-0x255dd572],esp
  41a4cb:	add    al,0xd4
  41a4cd:	aam    0x6a
  41a4cf:	inc    esp
  41a4d0:	inc    ecx
  41a4d1:	sbb    BYTE PTR [esi],0x18
  41a4d4:	nop
  41a4d5:	sahf   
  41a4d6:	addr16 sbb eax,0x1c8457e2
  41a4dc:	jp     0x41a4e5
  41a4de:	fdiv   QWORD PTR [ebp+edi*2+0x47011ec9]
  41a4e5:	cli    
  41a4e6:	clc    
  41a4e7:	std    
  41a4e8:	test   edi,ecx
  41a4ea:	jmp    0x21e40e89
  41a4ef:	leave  
  41a4f0:	pop    esi
  41a4f1:	push   ss
  41a4f2:	daa    
  41a4f3:	cdq    
  41a4f4:	pop    ebp
  41a4f5:	add    BYTE PTR [ebx-0x6c],cl
  41a4f8:	pusha  
  41a4f9:	cpuid  
  41a4fb:	mov    cl,0xe0
  41a4fd:	repz xchg esp,eax
  41a4ff:	push   ss
  41a500:	int3   
  41a501:	sbb    edx,DWORD PTR ds:0xdcd84414
  41a507:	xchg   esi,eax
  41a508:	mov    dh,0xb0
  41a50a:	aaa    
  41a50b:	sbb    al,0x87
  41a50d:	cmp    al,0x68
  41a50f:	fcmovb st,st(1)
  41a511:	jp     0x41a4c4
  41a513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a514:	mov    bh,0x38
  41a516:	push   ebx
  41a517:	push   0x78
  41a519:	test   BYTE PTR [ecx+esi*8+0x5c],al
  41a51d:	push   esp
  41a51e:	and    BYTE PTR [edi+0x503cf511],bh
  41a524:	cld    
  41a525:	xchg   ebx,eax
  41a526:	lea    ecx,[edx-0x61f6f2c3]
  41a52c:	xor    BYTE PTR [ecx],bl
  41a52e:	mov    ah,BYTE PTR [esi-0x7f690b6]
  41a534:	mov    ebx,0x52d08f37
  41a539:	mov    cl,BYTE PTR [ecx+ecx*1]
  41a53c:	dec    eax
  41a53d:	repnz add bl,BYTE PTR [esi]
  41a540:	fld    DWORD PTR [ecx+ecx*2]
  41a543:	push   ecx
  41a544:	cmp    eax,DWORD PTR [ecx+0x336f937c]
  41a54a:	jne    0x41a593
  41a54c:	fidivr DWORD PTR [eax-0x539eb1fd]
  41a552:	cwde   
  41a553:	pop    edx
  41a554:	sbb    dh,ah
  41a556:	(bad)  
  41a557:	aam    0xac
  41a559:	xchg   edi,eax
  41a55a:	jmp    0xa80f:0x55167b8f
  41a561:	fsub   QWORD PTR [edx-0x256b985b]
  41a567:	and    eax,0x40ba43d2
  41a56c:	stos   DWORD PTR es:[edi],eax
  41a56d:	pop    eax
  41a56e:	pop    es
  41a56f:	stc    
  41a570:	fmulp  st(7),st
  41a572:	ret    
  41a573:	fisttp QWORD PTR [edx]
  41a575:	mov    BYTE PTR [ecx],dh
  41a577:	and    BYTE PTR [ebp-0x76],cl
  41a57a:	cmp    esp,DWORD PTR [esi+0x3e0b6813]
  41a580:	lods   eax,DWORD PTR ds:[esi]
  41a581:	mov    esp,0xe47162b0
  41a586:	sub    al,BYTE PTR [esp+eax*8-0x16]
  41a58a:	ins    DWORD PTR es:[edi],dx
  41a58b:	in     eax,dx
  41a58c:	call   0x6f185471
  41a591:	cld    
  41a592:	loopne 0x41a5d9
  41a594:	pop    ds
  41a595:	jo     0x41a58f
  41a597:	mov    edx,DWORD PTR [edx-0xd]
  41a59a:	xor    BYTE PTR [edx-0x358f6217],dl
  41a5a0:	or     BYTE PTR [esi+0x13],cl
  41a5a3:	jl     0x41a56c
  41a5a5:	dec    esp
  41a5a6:	out    0xf1,al
  41a5a8:	xor    DWORD PTR [ebp+0x26],edi
  41a5ab:	dec    edi
  41a5ac:	sbb    dl,dl
  41a5ae:	pusha  
  41a5af:	mov    bh,0x2
  41a5b1:	in     eax,0xbe
  41a5b3:	jne    0x41a5a9
  41a5b5:	(bad)  
  41a5b6:	mov    BYTE PTR [edx+0x4c4307c4],ah
  41a5bc:	and    eax,ebp
  41a5be:	aaa    
  41a5bf:	loop   0x41a5be
  41a5c1:	or     ch,BYTE PTR [esi]
  41a5c3:	out    0x65,al
  41a5c5:	sahf   
  41a5c6:	test   ch,ch
  41a5c8:	pusha  
  41a5c9:	icebp  
  41a5ca:	inc    ebx
  41a5cb:	or     eax,0x5ca2554b
  41a5d0:	pushf  
  41a5d1:	mov    eax,ds:0xce5a098f
  41a5d6:	adc    eax,0xb903035f
  41a5db:	les    eax,FWORD PTR [esi]
  41a5dd:	outs   dx,DWORD PTR ds:[esi]
  41a5de:	gs iret 
  41a5e0:	pop    ebx
  41a5e1:	push   esp
  41a5e2:	fistp  WORD PTR [eax]
  41a5e4:	in     eax,0xc8
  41a5e6:	pop    es
  41a5e7:	add    ecx,DWORD PTR [edi+ebx*4+0x70b07b5c]
  41a5ee:	or     al,ah
  41a5f0:	or     edx,DWORD PTR [edi-0x6bed6325]
  41a5f6:	in     eax,dx
  41a5f7:	xchg   edx,eax
  41a5f8:	pop    edi
  41a5f9:	mov    DWORD PTR [ebx+ebp*4-0x457c1bb4],esi
  41a600:	aas    
  41a601:	xor    ah,ah
  41a603:	xor    BYTE PTR [ecx-0x1d],ch
  41a606:	jle    0x41a658
  41a608:	inc    ebx
  41a609:	je     0x41a5f1
  41a60b:	adc    BYTE PTR [ebp+0x46a7b75c],0x1
  41a612:	push   esp
  41a613:	jno    0x41a674
  41a615:	sbb    al,0xeb
  41a617:	dec    ebx
  41a618:	into   
  41a619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a61a:	mov    ch,0xd9
  41a61c:	test   eax,0x295aebe8
  41a621:	cwde   
  41a622:	pop    ss
  41a623:	dec    edx
  41a624:	popa   
  41a625:	add    DWORD PTR [ebp-0x22],0x6ec0cdc0
  41a62c:	pop    esi
  41a62d:	or     DWORD PTR [esi],ebp
  41a62f:	mov    WORD PTR [eax-0x27],ds
  41a632:	and    DWORD PTR [edx+0x4f],esi
  41a635:	sub    eax,0xfbaa5d25
  41a63a:	cmp    al,0xf6
  41a63c:	imul   edx
  41a63e:	dec    eax
  41a63f:	mov    ebx,DWORD PTR [ebx-0x7d]
  41a642:	imul   DWORD PTR [ecx]
  41a644:	lock xor dl,BYTE PTR [bx+di]
  41a648:	dec    eax
  41a649:	(bad)  
  41a64b:	lds    ebp,FWORD PTR [esi+0x65401c44]
  41a651:	clc    
  41a652:	test   DWORD PTR [ecx-0x6d],0xed60d3c7
  41a659:	push   cs
  41a65a:	sti    
  41a65b:	inc    esi
  41a65c:	aaa    
  41a65d:	or     ah,BYTE PTR [ecx+0x7a3ce5d1]
  41a663:	dec    edi
  41a664:	data16 test BYTE PTR [edi-0x74],0xd3
  41a669:	add    DWORD PTR [edx+0x47],ebx
  41a66c:	loop   0x41a697
  41a66e:	sub    ebx,DWORD PTR [ecx+0x1f]
  41a671:	mov    ?,WORD PTR [esi-0xded7b7c]
  41a677:	xchg   esp,eax
  41a678:	xchg   edx,eax
  41a679:	(bad)  
  41a67b:	jg     0x41a677
  41a67d:	mov    esp,0x29795f0f
  41a682:	into   
  41a683:	push   ebp
  41a684:	test   edx,ebx
  41a686:	jno    0x41a611
  41a688:	xchg   edx,eax
  41a689:	sahf   
  41a68a:	stos   DWORD PTR es:[edi],eax
  41a68b:	pushw  ss
  41a68d:	add    eax,0x6b00cd22
  41a692:	push   0xffffff80
  41a694:	sbb    cl,dl
  41a696:	and    bl,dl
  41a698:	repz adc al,0x17
  41a69b:	test   eax,0x4e9b3271
  41a6a0:	or     BYTE PTR ds:0x7c8987dc,0x2
  41a6a7:	int3   
  41a6a8:	imul   esp,DWORD PTR [edx-0x59ee71cf],0xfbb1515c
  41a6b2:	dec    edi
  41a6b3:	fsubr  st(1),st
  41a6b5:	or     eax,0x1d4a5864
  41a6ba:	jno    0x41a64b
  41a6bc:	(bad)  
  41a6bd:	and    DWORD PTR [edi-0x3217c653],edx
  41a6c3:	dec    eax
  41a6c4:	mov    bh,0xa1
  41a6c6:	push   ecx
  41a6c7:	and    DWORD PTR [ebp+esi*8+0x37],0x99da065f
  41a6cf:	pusha  
  41a6d0:	loopne 0x41a71e
  41a6d2:	pop    ds
  41a6d3:	daa    
  41a6d4:	jecxz  0x41a704
  41a6d6:	inc    ebp
  41a6d8:	jns    0x41a69d
  41a6da:	dec    esi
  41a6db:	dec    ebx
  41a6dc:	ja     0x41a6fe
  41a6de:	in     eax,dx
  41a6df:	adc    al,0x36
  41a6e1:	stc    
  41a6e2:	cmp    dl,bl
  41a6e4:	hlt    
  41a6e5:	cmp    DWORD PTR [ecx+eiz*2-0x4e],ecx
  41a6e9:	addr16 es icebp 
  41a6ec:	pop    edi
  41a6ed:	sbb    eax,0x59aea022
  41a6f2:	add    ecx,DWORD PTR [ebp+eiz*8+0x29eee9cc]
  41a6f9:	out    0x9e,eax
  41a6fb:	stc    
  41a6fc:	mov    ebx,0x9a450ea7
  41a701:	dec    esp
  41a702:	in     al,0x59
  41a704:	je     0x41a72e
  41a706:	or     dh,bl
  41a708:	adc    BYTE PTR [eax+eax*4-0x33],ch
  41a70c:	ins    DWORD PTR es:[edi],dx
  41a70d:	xor    eax,ebp
  41a70f:	push   eax
  41a710:	jb     0x41a6fc
  41a712:	dec    edi
  41a713:	sub    BYTE PTR ds:0x622c76a7,al
  41a719:	mov    dl,0x66
  41a71b:	and    DWORD PTR fs:[ebx-0x35],ebp
  41a71f:	test   BYTE PTR [eax],al
  41a721:	push   0x366500ff
  41a726:	ret    
  41a727:	cmp    eax,DWORD PTR [eax-0x62]
  41a72a:	fnstenv ds:0x3ece2b92
  41a730:	adc    DWORD PTR [edx],ecx
  41a732:	mov    esp,0xa8998459
  41a737:	dec    ebp
  41a738:	or     DWORD PTR [ebx+0x30],0x7b
  41a73c:	add    BYTE PTR [edi+0x435bff11],0x82
  41a743:	ret    0x163d
  41a746:	mov    bl,0x99
  41a748:	rcl    DWORD PTR ds:0x8c41b2e6,1
  41a74e:	arpl   WORD PTR [esi],di
  41a750:	cmp    BYTE PTR [edi],ch
  41a752:	popf   
  41a753:	out    0x25,al
  41a755:	adc    al,0x22
  41a757:	cmp    BYTE PTR [ebx-0x722e39b0],bh
  41a75d:	dec    ecx
  41a75e:	sub    BYTE PTR [ebx+0x12],bl
  41a761:	adc    al,BYTE PTR [edx-0x126f2ee3]
  41a767:	inc    edx
  41a768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a769:	aaa    
  41a76a:	shl    ah,0xe8
  41a76d:	repz pusha 
  41a76f:	aas    
  41a770:	test   edi,edi
  41a772:	mov    esi,0xa5c55fa9
  41a777:	inc    ebp
  41a778:	mov    edx,edx
  41a77a:	jmp    0xa862dbc0
  41a77f:	inc    esi
  41a780:	imul   ch
  41a782:	das    
  41a783:	xchg   ebx,eax
  41a784:	out    0xb,al
  41a786:	or     dl,BYTE PTR [edx-0x39]
  41a789:	xor    bl,BYTE PTR [eax+0x13]
  41a78c:	mov    ebx,0x340df7b9
  41a791:	jno    0x41a720
  41a793:	loopne 0x41a7db
  41a795:	mov    dh,0xd0
  41a797:	cmc    
  41a798:	ret    
  41a799:	imul   edi,DWORD PTR [ecx],0x32
  41a79c:	xor    ch,ch
  41a79e:	xor    DWORD PTR [edi+ebx*1-0x61880320],0x9ea1a13
  41a7a9:	or     al,0xfe
  41a7ab:	push   0x3820b9c6
  41a7b0:	(bad)  
  41a7b1:	sbb    al,0xd2
  41a7b3:	dec    esi
  41a7b4:	dec    ebp
  41a7b5:	scas   al,BYTE PTR es:[edi]
  41a7b6:	addr16 leave 
  41a7b8:	push   ecx
  41a7b9:	and    al,0x1d
  41a7bb:	xchg   BYTE PTR [eax-0x32],ch
  41a7be:	sbb    al,0x13
  41a7c0:	stc    
  41a7c1:	sub    WORD PTR [eax+0x2c6a034b],dx
  41a7c8:	and    al,dl
  41a7ca:	outs   dx,DWORD PTR ds:[esi]
  41a7cb:	pop    es
  41a7cc:	cwde   
  41a7cd:	add    BYTE PTR [edi+0x4e],cl
  41a7d0:	xchg   esp,eax
  41a7d1:	mov    eax,0x8755c664
  41a7d6:	mov    ebp,0x7b076d8f
  41a7db:	lds    eax,FWORD PTR [eax+0x2b]
  41a7de:	ffreep st(7)
  41a7e0:	add    BYTE PTR [eax+0x53],ch
  41a7e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7e4:	das    
  41a7e5:	cmp    ebx,edx
  41a7e7:	aam    0xfb
  41a7e9:	loop   0x41a7ef
  41a7eb:	xor    eax,0xdbd95b49
  41a7f0:	sub    ah,dl
  41a7f2:	push   ss
  41a7f3:	dec    ecx
  41a7f4:	not    edi
  41a7f6:	je     0x41a7cc
  41a7f8:	je     0x41a781
  41a7fa:	outs   dx,BYTE PTR ds:[esi]
  41a7fb:	repnz xchg ebp,eax
  41a7fd:	fwait
  41a7fe:	jecxz  0x41a7c2
  41a800:	jo     0x41a7bc
  41a802:	jmp    DWORD PTR [ebp-0x1e]
  41a805:	and    eax,DWORD PTR [ebp+0x55]
  41a808:	(bad)  
  41a809:	mov    ebp,0x8dc3818d
  41a80e:	jge    0x41a7c0
  41a810:	rol    ebp,0x5e
  41a813:	ja     0x41a7a0
  41a815:	cmp    DWORD PTR [edi],esi
  41a817:	(bad)  
  41a818:	aas    
  41a819:	call   0x9d511479
  41a81e:	cmc    
  41a81f:	test   cl,bh
  41a821:	mov    ebx,ebx
  41a823:	xchg   esi,eax
  41a824:	ins    BYTE PTR es:[edi],dx
  41a825:	aam    0xbf
  41a827:	clc    
  41a828:	pop    edi
  41a829:	cmp    al,0x24
  41a82b:	mov    ebx,0x8e15196e
  41a830:	stos   DWORD PTR es:[edi],eax
  41a831:	arpl   WORD PTR [bp+si-0x4c],dx
  41a835:	pop    ss
  41a836:	ss pushf 
  41a838:	(bad)  
  41a839:	(bad)  
  41a83b:	or     esp,ecx
  41a83d:	scas   al,BYTE PTR es:[edi]
  41a83e:	aaa    
  41a83f:	bound  ebp,QWORD PTR [ecx]
  41a841:	xor    al,0x41
  41a843:	jle    0x41a830
  41a845:	push   ebx
  41a846:	push   es
  41a847:	xchg   edx,eax
  41a848:	repz cs mov esp,ebx
  41a84c:	pop    eax
  41a84d:	adc    edi,esi
  41a84f:	call   0xa005:0x9ac908e9
  41a856:	pop    ds
  41a857:	mov    esp,0x1fc828ef
  41a85c:	retf   
  41a85d:	aad    0x28
  41a85f:	dec    ecx
  41a860:	dec    ebp
  41a861:	mov    ebp,0xf0412a6f
  41a866:	call   FWORD PTR [ebx]
  41a868:	icebp  
  41a869:	ffreep st(5)
  41a86b:	cld    
  41a86c:	dec    esp
  41a86d:	jecxz  0x41a8af
  41a86f:	fild   QWORD PTR [ebx+0x4d0512c5]
  41a875:	sbb    dh,dh
  41a877:	stos   BYTE PTR es:[edi],al
  41a878:	enter  0xd114,0x29
  41a87c:	jmp    0x48c8d27a
  41a881:	jg     0x41a839
  41a883:	(bad)  
  41a884:	out    0xfc,eax
  41a886:	add    DWORD PTR [esi],0x9b52c8ff
  41a88c:	cmp    dh,al
  41a88e:	xchg   esi,eax
  41a88f:	out    0xb0,al
  41a891:	adc    ch,BYTE PTR [ebx+0x17]
  41a894:	loopne 0x41a827
  41a896:	aas    
  41a897:	daa    
  41a898:	pop    es
  41a899:	mov    ah,0x27
  41a89b:	inc    ebx
  41a89c:	gs and ecx,eax
  41a89f:	mov    ebx,0x9ae463
  41a8a4:	jle    0x41a8c4
  41a8a6:	ds es out 0xac,eax
  41a8aa:	test   al,0x7
  41a8ac:	int3   
  41a8ad:	jecxz  0x41a8ad
  41a8af:	sbb    eax,0xbc6242d7
  41a8b4:	pushf  
  41a8b5:	xchg   ebp,eax
  41a8b6:	mov    eax,DWORD PTR [ebp-0x50]
  41a8b9:	sub    BYTE PTR [esi+eax*4+0x4f2a8f88],dl
  41a8c0:	and    BYTE PTR [ebp+0x4e],ch
  41a8c3:	and    eax,0x88954ff6
  41a8c8:	sub    BYTE PTR [ecx-0x11],0x3e
  41a8cc:	retf   
  41a8cd:	imul   ebp,DWORD PTR [ebp-0x5d07210c],0x9f63b72f
  41a8d7:	add    ah,al
  41a8d9:	jmp    0x41a94a
  41a8db:	sbb    cl,ah
  41a8dd:	loopne 0x41a91c
  41a8df:	xor    DWORD PTR [esi+0x27],0x56
  41a8e3:	pop    edx
  41a8e4:	fst    st(3)
  41a8e6:	cs inc ebp
  41a8e8:	hlt    
  41a8e9:	mov    eax,ds:0x6ffbdb8d
  41a8ee:	mov    al,0x6
  41a8f0:	xor    ah,BYTE PTR [ebp+0xc95f707]
  41a8f6:	mov    bh,0x8d
  41a8f8:	add    DWORD PTR [esi],esi
  41a8fa:	cld    
  41a8fb:	pop    ds
  41a8fc:	jmp    0x9270f93b
  41a901:	xor    eax,0xb64023bb
  41a906:	and    al,0xb0
  41a908:	push   esp
  41a909:	out    0x2f,eax
  41a90b:	cli    
  41a90c:	adc    DWORD PTR [ecx+ebx*2],edx
  41a90f:	in     eax,dx
  41a910:	sbb    ebx,DWORD PTR [edx-0x3f4b85d1]
  41a916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a917:	push   ss
  41a918:	out    dx,eax
  41a919:	jmp    0xcde4:0x7d581162
  41a920:	xor    eax,0x6add27c2
  41a925:	xchg   BYTE PTR [ecx],al
  41a927:	mov    edx,0xf17e7b6f
  41a92c:	dec    edi
  41a92d:	gs out dx,eax
  41a92f:	mov    cl,0xbf
  41a931:	sti    
  41a932:	xchg   edx,eax
  41a933:	and    esp,0xffffffa0
  41a936:	(bad)  
  41a937:	sub    al,0x4a
  41a939:	or     esp,DWORD PTR [edi-0x4d63ced0]
  41a93f:	inc    esp
  41a940:	stc    
  41a941:	pushf  
  41a942:	mov    edi,ecx
  41a944:	inc    eax
  41a945:	xchg   edi,eax
  41a946:	fwait
  41a947:	mov    BYTE PTR [ebp+ecx*2+0x3c],dl
  41a94b:	lea    edx,[eax+0x42ad2a19]
  41a951:	mov    fs,WORD PTR [ebx]
  41a953:	adc    dl,bh
  41a955:	pop    esp
  41a956:	xchg   esi,eax
  41a957:	and    DWORD PTR [ecx+0x6c9a4d7e],edx
  41a95d:	fsub   st(4),st
  41a95f:	ss cmp bh,al
  41a962:	sbb    BYTE PTR [edx],0xc3
  41a965:	inc    edi
  41a966:	mov    ebx,0x8d855f41
  41a96b:	push   0xb66487c3
  41a970:	mov    bl,0xc3
  41a972:	test   BYTE PTR [esi-0x4593f55a],dh
  41a978:	dec    esi
  41a979:	out    0x2,al
  41a97b:	addr16 iret 
  41a97d:	cmp    esp,edx
  41a97f:	mov    bl,0x78
  41a981:	das    
  41a982:	adc    ah,dl
  41a984:	mov    esp,0x1e8a9dba
  41a989:	fcom   QWORD PTR [ecx-0x61314ca]
  41a98f:	or     edx,DWORD PTR [ebx-0x7d]
  41a992:	jns    0x41a98e
  41a994:	mov    WORD PTR ss:[esi+0x6b],es
  41a998:	and    dh,BYTE PTR [ebp+0x59ee1ffe]
  41a99e:	sub    al,0x1a
  41a9a0:	test   BYTE PTR [edx],cl
  41a9a2:	xchg   edi,eax
  41a9a3:	push   ebx
  41a9a4:	rcl    BYTE PTR [eax+0x59],0x57
  41a9a8:	lds    ecx,FWORD PTR [edx-0xa]
  41a9ab:	adc    BYTE PTR [edx-0x38],dh
  41a9ae:	sub    ah,BYTE PTR [edx-0x1]
  41a9b1:	daa    
  41a9b2:	hlt    
  41a9b3:	pushf  
  41a9b4:	test   DWORD PTR [edi-0x50],esi
  41a9b7:	dec    edx
  41a9b8:	mov    esi,0x1a8d8e35
  41a9bd:	mov    ch,0x5
  41a9bf:	push   edx
  41a9c0:	inc    ebp
  41a9c1:	pop    edx
  41a9c2:	sbb    eax,0x3af7077b
  41a9c7:	xor    eax,0xf540a15
  41a9cc:	mov    esi,0xbabb6bf8
  41a9d1:	push   edi
  41a9d2:	or     BYTE PTR [edx],al
  41a9d4:	ss aad 0xc2
  41a9d7:	fdiv   QWORD PTR [ebp-0x9]
  41a9da:	sbb    DWORD PTR [eax],esi
  41a9dc:	and    eax,DWORD PTR [ebx+0x6c]
  41a9df:	xchg   edi,esi
  41a9e1:	cmp    esp,DWORD PTR [eax+0x7d0d00df]
  41a9e7:	mov    eax,0xc3cfaf2c
  41a9ec:	add    DWORD PTR [ecx],0xffffffc7
  41a9ef:	cdq    
  41a9f0:	and    al,0x72
  41a9f2:	xor    al,0xa5
  41a9f4:	in     al,0x6c
  41a9f6:	outs   dx,BYTE PTR ds:[esi]
  41a9f7:	fdiv   QWORD PTR [eax+0x3e]
  41a9fa:	dec    ecx
  41a9fb:	adc    al,0xaa
  41a9fd:	call   0x3d9dcd37
  41aa02:	fild   WORD PTR [ebx]
  41aa04:	fild   WORD PTR fs:[esi]
  41aa07:	or     al,0xf7
  41aa09:	inc    esp
  41aa0a:	ret    
  41aa0b:	mov    esp,0x6ed5618f
  41aa10:	cwde   
  41aa11:	popf   
  41aa12:	fucom  st(1)
  41aa14:	mov    WORD PTR [edx+esi*2],fs
  41aa17:	int    0x9a
  41aa19:	aad    0x11
  41aa1b:	or     edi,DWORD PTR [ebx]
  41aa1d:	sub    edi,DWORD PTR [ebx]
  41aa1f:	stc    
  41aa20:	in     al,dx
  41aa21:	push   esi
  41aa22:	pop    ebp
  41aa23:	push   ebx
  41aa24:	pop    es
  41aa25:	pop    es
  41aa26:	arpl   bx,sp
  41aa28:	aaa    
  41aa29:	jp     0x41aa90
  41aa2b:	cmp    BYTE PTR [edi+0x3f],al
  41aa2e:	mov    BYTE PTR [esi+eiz*2+0x23],0x22
  41aa33:	push   ebp
  41aa34:	test   DWORD PTR [edi-0x2235dd2f],esi
  41aa3a:	popf   
  41aa3b:	xchg   BYTE PTR [ecx-0x7809db17],bl
  41aa41:	dec    edx
  41aa42:	cmc    
  41aa43:	dec    edx
  41aa44:	ds mov dh,0x32
  41aa47:	push   cs
  41aa48:	mov    ebp,0xcfdd36fc
  41aa4d:	(bad)  
  41aa4e:	sti    
  41aa4f:	pmullw mm4,QWORD PTR [ebp+0x29b18857]
  41aa56:	(bad)  
  41aa57:	lock int3 
  41aa59:	cmp    al,0x85
  41aa5b:	(bad)  
  41aa5c:	jge    0x41aad6
  41aa5e:	sub    eax,0x8f7ef484
  41aa63:	pop    edi
  41aa64:	fcomp  DWORD PTR [edx+0x77]
  41aa67:	(bad)
  41aa6b:	mov    eax,0xaa51e457
  41aa70:	ror    dl,1
  41aa72:	push   eax
  41aa73:	cwde   
  41aa74:	aam    0xf8
  41aa76:	mov    bl,BYTE PTR [edx+ecx*4]
  41aa79:	aaa    
  41aa7a:	push   es
  41aa7b:	out    dx,eax
  41aa7c:	ret    
  41aa7d:	std    
  41aa7e:	ds jae 0x41aabb
  41aa81:	out    0xb4,eax
  41aa83:	mov    ah,0xea
  41aa85:	scas   al,BYTE PTR es:[edi]
  41aa86:	pushf  
  41aa87:	ds push ss
  41aa89:	cmp    bh,BYTE PTR [edi+0x192bdd22]
  41aa8f:	dec    esi
  41aa90:	jns    0x41aa92
  41aa92:	fdiv   QWORD PTR es:[edx-0x73]
  41aa96:	jg     0x41aa4f
  41aa98:	xchg   edi,eax
  41aa99:	jl     0x41aac5
  41aa9b:	cmp    dl,BYTE PTR [edi-0x6d]
  41aa9e:	mov    eax,ss
  41aaa0:	adc    DWORD PTR [edi-0x3b],ecx
  41aaa3:	and    dl,BYTE PTR [edx-0x7eaed170]
  41aaa9:	repz (bad) 
  41aaab:	pop    ecx
  41aaac:	mov    cl,0xe6
  41aaae:	je     0x41aaa4
  41aab0:	push   0xbc5d89e4
  41aab5:	mov    edx,DWORD PTR [ebp+0x8]
  41aab8:	xor    edx,eax
  41aaba:	add    edx,esi
  41aabc:	jne    0x4162cf
  41aac2:	mov    edx,DWORD PTR [ebp-0x14]
  41aac5:	mov    DWORD PTR [ebp+0x8],edx
  41aac8:	jmp    0x41ab3d
  41aacd:	mov    edx,DWORD PTR [ebp+0x8]
  41aad0:	mov    ebx,DWORD PTR [ebp-0x8]
  41aad3:	xor    edx,eax
  41aad5:	xor    ebx,eax
  41aad7:	sub    edx,ebx
  41aad9:	sub    edx,esi
  41aadb:	xor    edx,eax
  41aadd:	mov    DWORD PTR [ebp+0x8],edx
  41aae0:	mov    edx,DWORD PTR [ebp+0x8]
  41aae3:	mov    ebx,DWORD PTR [ebp-0x58]
  41aae6:	add    edx,0x5708c0
  41aaec:	imul   edx,ebx
  41aaef:	mov    DWORD PTR [ebp-0x58],edx
  41aaf2:	mov    edx,DWORD PTR [ebp+0x8]
  41aaf5:	mov    ebx,DWORD PTR [ebp-0x54]
  41aaf8:	add    edx,0x64f8a2
  41aafe:	or     edx,ebx
  41ab00:	mov    DWORD PTR [ebp-0x54],edx
  41ab03:	mov    edx,DWORD PTR [ebp+0x8]
  41ab06:	mov    ebx,DWORD PTR [ebp-0x50]
  41ab09:	add    edx,ecx
  41ab0b:	xor    edx,ebx
  41ab0d:	mov    DWORD PTR [ebp-0x50],edx
  41ab10:	mov    edx,DWORD PTR [ebp+0x8]
  41ab13:	mov    ebx,DWORD PTR [ebp-0x4c]
  41ab16:	add    edx,edi
  41ab18:	and    edx,ebx
  41ab1a:	mov    DWORD PTR [ebp-0x4c],edx
  41ab1d:	mov    edx,DWORD PTR [ebp+0x8]
  41ab20:	mov    ebx,DWORD PTR [ebp-0x48]
  41ab23:	lea    edx,[ebx+edx*1+0x241fc1f]
  41ab2a:	mov    DWORD PTR [ebp-0x48],edx
  41ab2d:	mov    edx,DWORD PTR [ebp+0x8]
  41ab30:	mov    ebx,0xfa5e15e2
  41ab35:	sub    ebx,edx
  41ab37:	add    ebx,DWORD PTR [ebp-0x44]
  41ab3a:	mov    DWORD PTR [ebp-0x44],ebx
  41ab3d:	mov    edx,DWORD PTR [ebp+0x8]
  41ab40:	xor    edx,eax
  41ab42:	add    edx,esi
  41ab44:	jne    0x41aacd
  41ab4a:	mov    edx,DWORD PTR [ebp-0x8]
  41ab4d:	mov    ebx,DWORD PTR [ebp-0xc]
  41ab50:	xor    edx,eax
  41ab52:	lea    edx,[edx+ebx*1+0x3272e4]
  41ab59:	mov    DWORD PTR [ebp-0xc],edx
  41ab5c:	mov    edx,DWORD PTR [ebp-0x10]
  41ab5f:	xor    edx,eax
  41ab61:	add    edx,esi
  41ab63:	jne    0x413acb
  41ab69:	jmp    0x41d03b
  41ab6e:	mov    ecx,DWORD PTR [ebp-0x14]
  41ab71:	mov    DWORD PTR [ebp+0x8],ecx
  41ab74:	jmp    0x41abed
  41ab79:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab7c:	mov    edx,DWORD PTR [ebp-0x8]
  41ab7f:	xor    ecx,eax
  41ab81:	xor    edx,eax
  41ab83:	sub    ecx,edx
  41ab85:	sub    ecx,esi
  41ab87:	xor    ecx,eax
  41ab89:	mov    DWORD PTR [ebp+0x8],ecx
  41ab8c:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab8f:	mov    edx,DWORD PTR [ebp-0x58]
  41ab92:	add    ecx,0x5708c0
  41ab98:	imul   ecx,edx
  41ab9b:	mov    DWORD PTR [ebp-0x58],ecx
  41ab9e:	mov    ecx,DWORD PTR [ebp+0x8]
  41aba1:	mov    edx,DWORD PTR [ebp-0x54]
  41aba4:	add    ecx,0x64f8a2
  41abaa:	or     ecx,edx
  41abac:	mov    DWORD PTR [ebp-0x54],ecx
  41abaf:	mov    ecx,DWORD PTR [ebp+0x8]
  41abb2:	mov    edx,DWORD PTR [ebp-0x50]
  41abb5:	add    ecx,0x242ebed
  41abbb:	xor    ecx,edx
  41abbd:	mov    DWORD PTR [ebp-0x50],ecx
  41abc0:	mov    ecx,DWORD PTR [ebp+0x8]
  41abc3:	mov    edx,DWORD PTR [ebp-0x4c]
  41abc6:	add    ecx,edi
  41abc8:	and    ecx,edx
  41abca:	mov    DWORD PTR [ebp-0x4c],ecx
  41abcd:	mov    ecx,DWORD PTR [ebp+0x8]
  41abd0:	mov    edx,DWORD PTR [ebp-0x48]
  41abd3:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41abda:	mov    DWORD PTR [ebp-0x48],ecx
  41abdd:	mov    ecx,DWORD PTR [ebp+0x8]
  41abe0:	mov    edx,0xfa5e15e2
  41abe5:	sub    edx,ecx
  41abe7:	add    edx,DWORD PTR [ebp-0x44]
  41abea:	mov    DWORD PTR [ebp-0x44],edx
  41abed:	mov    ecx,DWORD PTR [ebp+0x8]
  41abf0:	xor    ecx,eax
  41abf2:	add    ecx,esi
  41abf4:	jne    0x41ab79
  41abfa:	jmp    0x41d047
  41abff:	mov    ecx,DWORD PTR [ebp+0x8]
  41ac02:	mov    edx,DWORD PTR [ebp-0x8]
  41ac05:	xor    ecx,eax
  41ac07:	xor    edx,eax
  41ac09:	sub    ecx,edx
  41ac0b:	sub    ecx,esi
  41ac0d:	xor    ecx,eax
  41ac0f:	mov    DWORD PTR [ebp+0x8],ecx
  41ac12:	mov    ecx,DWORD PTR [ebp+0x8]
  41ac15:	mov    edx,DWORD PTR [ebp-0x58]
  41ac18:	jmp    0x41cfd3
  41ac1d:	sbb    DWORD PTR [eax+0x2e],esp
  41ac20:	xrelease lock add DWORD PTR ss:[ebx],edx
  41ac25:	push   esi
  41ac26:	mov    dl,0xc6
  41ac28:	aaa    
  41ac29:	cs xor eax,0x1f7b6db5
  41ac2f:	jge    0x41aca3
  41ac31:	rcr    BYTE PTR [edi+0x72],1
  41ac34:	jb     0x41acb4
  41ac36:	push   ebp
  41ac37:	push   0x68
  41ac39:	dec    edi
  41ac3a:	retf   0x8d6e
  41ac3d:	stos   BYTE PTR es:[edi],al
  41ac3e:	xor    cl,BYTE PTR ds:0x8bd389c6
  41ac44:	inc    esi
  41ac45:	out    0x3a,eax
  41ac47:	out    dx,al
  41ac48:	xlat   BYTE PTR ds:[ebx]
  41ac49:	pusha  
  41ac4a:	std    
  41ac4b:	jae    0x41ac2c
  41ac4d:	add    al,0x93
  41ac4f:	nop
  41ac50:	sbb    bh,BYTE PTR [ebp-0x7db3f7fd]
  41ac56:	xchg   esi,eax
  41ac57:	cmp    ah,cl
  41ac59:	lds    ebp,FWORD PTR [eax+0x16]
  41ac5c:	mov    WORD PTR [esi-0x667a038],ss
  41ac62:	repnz pushf 
  41ac64:	mov    ch,0x53
  41ac66:	adc    al,0x66
  41ac68:	pop    esi
  41ac69:	out    0x49,al
  41ac6b:	lock jle 0x41ac5f
  41ac6e:	gs into 
  41ac70:	add    DWORD PTR [esi],esi
  41ac72:	push   esi
  41ac73:	fstp   TBYTE PTR [ecx+0x1f4c8941]
  41ac79:	ret    
  41ac7a:	and    eax,0x18bc7e6c
  41ac7f:	lods   eax,DWORD PTR ds:[esi]
  41ac80:	imul   ebp,esp,0xe1f69497
  41ac86:	xor    ebp,edx
  41ac88:	hlt    
  41ac89:	int3   
  41ac8a:	aam    0xb4
  41ac8c:	mov    al,ds:0xe6826ac4
  41ac91:	xchg   esp,eax
  41ac92:	es inc eax
  41ac94:	into   
  41ac95:	sub    eax,0x44e67d72
  41ac9a:	fmul   DWORD PTR [eax-0x5bdcfc94]
  41aca0:	neg    BYTE PTR [ebx-0x216c70d9]
  41aca6:	sub    al,dh
  41aca8:	hlt    
  41aca9:	inc    esi
  41acaa:	adc    al,0x3a
  41acac:	ror    BYTE PTR [ebp+eax*4+0x742aae6c],cl
  41acb3:	add    BYTE PTR [eax],0x1d
  41acb6:	xor    edx,DWORD PTR [eax]
  41acb8:	or     eax,0x8403b3bc
  41acbd:	xchg   edx,eax
  41acbe:	mov    dh,dl
  41acc0:	mov    WORD PTR [edx-0x48cb7591],?
  41acc6:	daa    
  41acc7:	and    eax,0xb9c5ce4
  41accc:	xchg   ebx,eax
  41accd:	push   eax
  41acce:	mov    al,ds:0xf1e674d7
  41acd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acd4:	jne    0x41accc
  41acd6:	call   0x4ede55fd
  41acdb:	jp     0x41ad53
  41acdd:	inc    ebp
  41acde:	and    DWORD PTR ds:0x68904dbf,ebp
  41ace4:	xchg   esp,eax
  41ace5:	push   esi
  41ace6:	sti    
  41ace7:	repnz dec ax
  41acea:	pop    esi
  41aceb:	out    0xf3,al
  41aced:	pop    es
  41acee:	and    DWORD PTR [ebx],ebp
  41acf0:	(bad)  
  41acf1:	xchg   ebx,eax
  41acf2:	cdq    
  41acf3:	xchg   esi,eax
  41acf4:	in     al,dx
  41acf5:	or     bl,BYTE PTR [esi]
  41acf7:	jns    0x41acd0
  41acf9:	jnp    0x41ad21
  41acfb:	rol    BYTE PTR [ecx-0x52de0390],0x9d
  41ad02:	fld    TBYTE PTR [ecx]
  41ad04:	fst    QWORD PTR [eax]
  41ad06:	dec    ecx
  41ad07:	mov    bl,0xf3
  41ad09:	pop    edi
  41ad0a:	ret    
  41ad0b:	cmp    ch,BYTE PTR [esi-0x6da556e]
  41ad11:	out    0x67,al
  41ad13:	hlt    
  41ad14:	loopne 0x41aced
  41ad16:	cmp    eax,0xb1138ab3
  41ad1b:	mov    bh,0xd
  41ad1d:	clc    
  41ad1e:	lea    edx,[edi+edx*1]
  41ad21:	mov    al,ds:0x4695b616
  41ad26:	in     eax,dx
  41ad27:	xchg   edi,eax
  41ad28:	stc    
  41ad29:	bound  esp,QWORD PTR ds:0x83568d49
  41ad2f:	push   ss
  41ad30:	jle    0x41ad52
  41ad32:	fidiv  DWORD PTR [ecx-0x2058baa2]
  41ad38:	(bad)  
  41ad39:	repz jne 0x41ad29
  41ad3c:	inc    eax
  41ad3d:	jb     0x41ad4a
  41ad3f:	out    0xb,eax
  41ad41:	call   0xa0b268dc
  41ad46:	push   0xffffff9f
  41ad48:	push   edi
  41ad49:	sbb    al,0xa0
  41ad4b:	pop    edi
  41ad4c:	mov    cl,0x7d
  41ad4e:	jecxz  0x41ad75
  41ad50:	adc    BYTE PTR [esi+0x698465f6],bl
  41ad56:	lock or edx,DWORD PTR [edi-0x64ad7876]
  41ad5d:	lock (bad) 
  41ad5f:	sbb    cl,BYTE PTR [ebx+0xf]
  41ad62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad63:	test   DWORD PTR [edi+eax*8-0x68],edx
  41ad67:	pop    ebx
  41ad68:	or     eax,0xbf512747
  41ad6d:	aaa    
  41ad6e:	imul   edi,DWORD PTR [ecx],0xd
  41ad71:	lods   eax,DWORD PTR ds:[esi]
  41ad72:	call   DWORD PTR [ecx]
  41ad74:	jae    0x41adae
  41ad76:	mov    edi,0x2ac1ea3c
  41ad7b:	sbb    eax,0xc05a612a
  41ad80:	int3   
  41ad81:	pop    es
  41ad82:	jne    0x41ad69
  41ad84:	dec    edi
  41ad85:	sbb    ebp,ecx
  41ad87:	cmp    BYTE PTR [ecx+0xd],ah
  41ad8a:	sub    eax,0x67e63689
  41ad8f:	sbb    eax,0x55763250
  41ad94:	push   esp
  41ad95:	adc    ah,bh
  41ad97:	xlat   BYTE PTR ds:[ebx]
  41ad98:	mov    bh,0x94
  41ad9a:	mov    dl,0x8c
  41ad9c:	ja     0x41ad6b
  41ad9e:	add    BYTE PTR [ebx-0x58f12122],ch
  41ada4:	mov    ds:0x10d99791,al
  41ada9:	or     esp,0xffffff88
  41adac:	add    DWORD PTR [ebp-0x57],ecx
  41adaf:	pop    esi
  41adb0:	dec    ebx
  41adb1:	cwde   
  41adb2:	es ins BYTE PTR es:[edi],dx
  41adb4:	cmc    
  41adb5:	push   ebp
  41adb6:	mov    ds,WORD PTR [ebx+0x5f]
  41adb9:	jne    0x41ad41
  41adbb:	pop    esi
  41adbc:	push   esp
  41adbd:	xchg   dh,dl
  41adbf:	push   ebp
  41adc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adc1:	add    BYTE PTR [esi],bl
  41adc3:	out    dx,eax
  41adc4:	add    eax,0xe7b1e16a
  41adc9:	cmp    BYTE PTR [edi],0x7d
  41adcc:	(bad)
  41adcf:	dec    edx
  41add0:	mov    ch,cl
  41add2:	xor    DWORD PTR [ebp+esi*4+0x65],esp
  41add6:	in     al,0x7c
  41add8:	sub    bh,BYTE PTR [ebp+0x5344c5e3]
  41adde:	into   
  41addf:	ss mov ecx,eax
  41ade2:	cmp    eax,0x72b1688b
  41ade7:	mov    edx,0xe649b8d
  41adec:	and    DWORD PTR [ecx],ebp
  41adee:	jno    0x41ae26
  41adf0:	aaa    
  41adf1:	xchg   edx,eax
  41adf2:	inc    esi
  41adf3:	xor    BYTE PTR [edi-0x64b7d4a2],0xba
  41adfa:	pop    DWORD PTR [ebx+0x5b]
  41adfd:	pop    ebp
  41adfe:	mov    cl,0x14
  41ae00:	dec    DWORD PTR [ebp+0x7f66adc5]
  41ae06:	pop    es
  41ae07:	sti    
  41ae08:	leave  
  41ae09:	fidiv  WORD PTR [eax]
  41ae0b:	mov    cl,0x1
  41ae0d:	or     DWORD PTR [eax],0xffffffbc
  41ae10:	cld    
  41ae11:	jnp    0x41addb
  41ae13:	sti    
  41ae14:	or     ebp,DWORD PTR [ecx+0x2302a156]
  41ae1a:	lahf   
  41ae1b:	mov    ebp,0x16e03294
  41ae20:	add    ebp,DWORD PTR [ebx*2+0x3109fe0]
  41ae27:	and    al,0xc5
  41ae29:	jg     0x41ae8b
  41ae2b:	out    0xb4,al
  41ae2d:	or     eax,0xd92fba72
  41ae32:	adc    esp,esp
  41ae34:	fiadd  DWORD PTR [edx]
  41ae36:	xchg   edi,eax
  41ae37:	imul   ch
  41ae39:	loope  0x41ae17
  41ae3b:	mov    ch,0x20
  41ae3d:	inc    ecx
  41ae3e:	jb     0x41ae7d
  41ae40:	xchg   eax,edi
  41ae42:	jns    0x41ae7e
  41ae44:	jmp    0x41ae72
  41ae46:	sub    al,0x5a
  41ae48:	cli    
  41ae49:	xchg   ebx,eax
  41ae4a:	loope  0x41ae26
  41ae4c:	sbb    DWORD PTR ds:0x1d505d46,esi
  41ae52:	jbe    0x41ade8
  41ae54:	or     DWORD PTR [edx-0x3f],ecx
  41ae57:	jp     0x41ae50
  41ae59:	mov    bl,0xc0
  41ae5b:	sbb    BYTE PTR [ecx],cl
  41ae5d:	cdq    
  41ae5e:	mov    WORD PTR ss:[eax+ebx*8-0x28],cs
  41ae63:	es jge 0x41ae92
  41ae66:	xchg   ebx,eax
  41ae67:	daa    
  41ae68:	inc    edi
  41ae69:	xchg   BYTE PTR [esi+0x265879d0],al
  41ae6f:	pop    esi
  41ae70:	retf   0xac5f
  41ae73:	pop    es
  41ae74:	stc    
  41ae75:	dec    edi
  41ae76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae77:	pushf  
  41ae78:	inc    ecx
  41ae79:	sahf   
  41ae7a:	bound  ebp,QWORD PTR ds:0x259ba10c
  41ae80:	inc    edi
  41ae81:	sub    dl,BYTE PTR ds:0x3516bd82
  41ae87:	mov    ebx,0xbd608c57
  41ae8c:	push   eax
  41ae8d:	aaa    
  41ae8e:	dec    esi
  41ae8f:	mov    dl,0xdc
  41ae91:	or     al,0x8
  41ae93:	push   edi
  41ae94:	and    cl,ah
  41ae96:	lods   al,BYTE PTR ds:[esi]
  41ae97:	int    0xea
  41ae99:	in     eax,0x93
  41ae9b:	nop
  41ae9c:	push   0x72
  41ae9e:	push   edx
  41ae9f:	(bad)  
  41aea0:	in     al,0x3d
  41aea2:	dec    esi
  41aea3:	and    eax,0x34d36369
  41aea8:	mov    ecx,ds
  41aeaa:	and    BYTE PTR [edi+0xb],al
  41aead:	push   edi
  41aeae:	sbb    DWORD PTR [esi+0x5eec98d2],ebp
  41aeb4:	adc    BYTE PTR [eax],ch
  41aeb6:	neg    DWORD PTR [eax]
  41aeb8:	pop    ebx
  41aeb9:	xchg   ecx,eax
  41aeba:	call   0xf534:0x272be0b7
  41aec1:	sbb    eax,0x511653cf
  41aec6:	fbld   TBYTE PTR [ebp-0x485a7f5b]
  41aecc:	cmp    dl,BYTE PTR [eax]
  41aece:	and    al,0x93
  41aed0:	xor    ch,BYTE PTR [ecx+0x24]
  41aed3:	gs out dx,eax
  41aed5:	cmc    
  41aed6:	dec    edx
  41aed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aed8:	fisub  WORD PTR ss:[edx-0xc]
  41aedc:	xchg   BYTE PTR [esi-0x36],dh
  41aedf:	push   esi
  41aee0:	ret    0xc9e6
  41aee3:	jmp    0x41aec5
  41aee5:	pop    ebp
  41aee6:	rol    DWORD PTR [eax+0x15],0x9f
  41aeea:	xor    BYTE PTR [ecx+0x55],cl
  41aeed:	int    0xc3
  41aeef:	aam    0x17
  41aef1:	aaa    
  41aef2:	inc    edx
  41aef3:	sti    
  41aef4:	adc    BYTE PTR [edx],ch
  41aef6:	push   cs
  41aef7:	popa   
  41aef8:	fsub   QWORD PTR [ebx+0x70]
  41aefb:	repz sbb cl,BYTE PTR ds:0xff7d0e5d
  41af02:	(bad)  
  41af03:	in     eax,dx
  41af04:	fbld   TBYTE PTR [edx-0x2e73c563]
  41af0a:	xchg   dh,ah
  41af0c:	sahf   
  41af0d:	(bad)  
  41af0e:	pop    ebx
  41af0f:	xchg   edi,eax
  41af10:	push   es
  41af11:	or     BYTE PTR [ebx+0x76420b72],al
  41af17:	(bad)  
  41af18:	leave  
  41af19:	xor    eax,0x128dada
  41af1e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41af20:	popa   
  41af21:	fadd   QWORD PTR [ebp+edx*8-0x146e9005]
  41af28:	or     DWORD PTR [ecx-0x17],esp
  41af2b:	pop    eax
  41af2c:	mov    ecx,0xa49fdac2
  41af31:	jo     0x41af0a
  41af33:	mov    esi,0xed9e7527
  41af38:	sar    BYTE PTR [ecx+0x1ad9fe52],cl
  41af3e:	clc    
  41af3f:	xor    eax,0xa023e7bc
  41af44:	lods   al,BYTE PTR ds:[esi]
  41af45:	pop    esi
  41af46:	and    al,0x79
  41af48:	inc    esi
  41af49:	sbb    al,0x70
  41af4b:	cmp    eax,0x7ed33a7e
  41af50:	xchg   ebx,eax
  41af51:	mov    esi,0x1c0f537a
  41af56:	shufps xmm2,XMMWORD PTR [ecx-0x5c],0xec
  41af5b:	in     eax,0x19
  41af5d:	pop    eax
  41af5e:	adc    BYTE PTR [ebx],0x47
  41af61:	dec    esi
  41af62:	mov    ah,0x33
  41af64:	xor    edi,DWORD PTR [edx]
  41af66:	xor    BYTE PTR [eax-0x10],0x2f
  41af6a:	adc    BYTE PTR [esi],dl
  41af6c:	iret   
  41af6d:	push   ss
  41af6e:	mov    edx,?
  41af70:	les    ecx,FWORD PTR [ebx+0x5edf940]
  41af76:	repnz outs dx,DWORD PTR fs:[esi]
  41af79:	xchg   edi,eax
  41af7a:	call   0x1a8414ee
  41af7f:	inc    esp
  41af80:	mov    bl,0x25
  41af82:	inc    esp
  41af83:	push   0x2f
  41af85:	sub    ebx,esi
  41af87:	pop    edx
  41af88:	outs   dx,BYTE PTR ds:[esi]
  41af89:	call   0x6871:0x7141fcef
  41af90:	mov    ebp,0xb094ce4f
  41af95:	xor    dl,cl
  41af97:	and    ebx,edx
  41af99:	push   eax
  41af9a:	lods   al,BYTE PTR ds:[esi]
  41af9b:	inc    ecx
  41af9c:	addr16 je 0x41af44
  41af9f:	jge    0x41b005
  41afa1:	rcr    DWORD PTR [edi],cl
  41afa3:	push   ds
  41afa4:	outs   dx,BYTE PTR ds:[esi]
  41afa5:	out    dx,al
  41afa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afa7:	sub    BYTE PTR [ecx],bl
  41afa9:	jb     0x41af2f
  41afab:	sbb    BYTE PTR [edx],al
  41afad:	mov    edi,0x52ba143c
  41afb2:	jmp    0xd11827d3
  41afb7:	or     ch,0x48
  41afba:	fwait
  41afbb:	jno    0x41afbe
  41afbd:	icebp  
  41afbe:	nop
  41afbf:	loope  0x41afcb
  41afc1:	js     0x41af72
  41afc3:	enter  0xd3db,0x2d
  41afc7:	mov    bl,cl
  41afc9:	mov    bl,BYTE PTR [ebp+0xe]
  41afcc:	push   es
  41afcd:	push   esi
  41afce:	push   ss
  41afcf:	add    ebx,eax
  41afd1:	or     al,0x14
  41afd3:	xor    dl,bl
  41afd5:	arpl   WORD PTR [edi-0x4d],bx
  41afd8:	xchg   ebp,eax
  41afd9:	xchg   ecx,eax
  41afda:	ror    DWORD PTR [edx+0x9],0x21
  41afde:	adc    edi,DWORD PTR [ecx-0x2f]
  41afe1:	mov    edi,0xd54398db
  41afe6:	inc    eax
  41afe7:	jnp    0x41affb
  41afe9:	xlat   BYTE PTR ds:[ebx]
  41afea:	xchg   esp,eax
  41afeb:	cmp    DWORD PTR [eax],ebx
  41afed:	xor    eax,0xc24a306c
  41aff2:	loop   0x41b05b
  41aff4:	outs   dx,DWORD PTR ds:[esi]
  41aff5:	push   ss
  41aff6:	popa   
  41aff7:	xor    BYTE PTR [eax+0x18],dl
  41affa:	sbb    BYTE PTR [ebp+0x78],ah
  41affd:	or     dh,al
  41afff:	jb     0x41aff4
  41b001:	inc    eax
  41b002:	xchg   edi,eax
  41b003:	mov    eax,DWORD PTR [edx]
  41b005:	test   BYTE PTR [esi+esi*1-0x6cc06221],cl
  41b00c:	es jp  0x41b044
  41b00f:	hlt    
  41b010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b011:	cmp    esp,ecx
  41b013:	lods   eax,DWORD PTR ds:[esi]
  41b014:	test   al,0x20
  41b016:	jb     0x41b013
  41b018:	(bad)  
  41b019:	and    eax,0x530975bc
  41b01e:	jl     0x41b027
  41b020:	stos   DWORD PTR es:[edi],eax
  41b021:	mov    ah,BYTE PTR [esi]
  41b023:	cmp    al,0x68
  41b025:	ins    DWORD PTR es:[edi],dx
  41b026:	inc    edx
  41b027:	in     eax,dx
  41b028:	mov    esp,0x790376fb
  41b02d:	jl     0x41b064
  41b02f:	fiadd  DWORD PTR [esp+eax*4-0x6a]
  41b033:	cli    
  41b034:	out    0x7,eax
  41b036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b037:	xor    al,0x20
  41b039:	add    BYTE PTR ds:0x74c4433,ch
  41b03f:	scas   al,BYTE PTR es:[edi]
  41b040:	loopne 0x41b004
  41b042:	int    0xd4
  41b044:	bound  ebp,QWORD PTR [ecx+0x1f]
  41b047:	dec    esi
  41b048:	clc    
  41b049:	xchg   edx,eax
  41b04a:	(bad)  
  41b04c:	mov    edx,0xb4545859
  41b051:	(bad)  
  41b052:	fwait
  41b053:	xor    edx,0x2b2e1cee
  41b059:	out    dx,eax
  41b05a:	enter  0x4ed1,0x77
  41b05e:	mov    al,ds:0x2f42ced
  41b063:	loopne 0x41b032
  41b065:	push   0x17ecfc0c
  41b06a:	shl    dh,cl
  41b06c:	mov    ebp,0xe5a87491
  41b071:	push   eax
  41b072:	je     0x41b0f0
  41b074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b075:	push   ss
  41b076:	mov    ebx,0x7e89cf13
  41b07b:	rcl    DWORD PTR [ebx-0x69],cl
  41b07e:	fsub   st,st(2)
  41b080:	inc    edx
  41b081:	popf   
  41b082:	mov    cl,0x4
  41b084:	dec    edi
  41b085:	mov    ecx,0x54bebf91
  41b08a:	push   edi
  41b08b:	xchg   ebx,eax
  41b08c:	dec    ebx
  41b08d:	gs adc al,0x87
  41b090:	(bad)  
  41b091:	jecxz  0x41b09f
  41b093:	add    DWORD PTR [eax+0x3f],esp
  41b096:	hlt    
  41b097:	mov    al,ds:0x165695ab
  41b09c:	jnp    0x41b0ef
  41b09e:	repnz xlat BYTE PTR ds:[ebx]
  41b0a0:	pop    ss
  41b0a1:	push   ebx
  41b0a2:	add    al,0xc
  41b0a4:	out    0xe8,eax
  41b0a6:	sub    ah,0x8d
  41b0a9:	in     eax,dx
  41b0aa:	out    dx,eax
  41b0ab:	je     0x41b12c
  41b0ad:	push   ss
  41b0ae:	xchg   edx,ecx
  41b0b0:	pop    eax
  41b0b1:	(bad)  
  41b0b2:	stos   DWORD PTR es:[edi],eax
  41b0b3:	pop    edx
  41b0b4:	adc    bh,BYTE PTR [ecx]
  41b0b6:	lahf   
  41b0b7:	push   cs
  41b0b8:	jns    0x41b0fc
  41b0ba:	dec    esp
  41b0bb:	add    bl,bh
  41b0bd:	or     cl,bl
  41b0bf:	inc    ebx
  41b0c0:	mov    dl,0x37
  41b0c2:	inc    edx
  41b0c3:	in     al,dx
  41b0c4:	shl    BYTE PTR [eax-0x46],cl
  41b0c7:	out    dx,eax
  41b0c8:	repz mov esi,0x201122d3
  41b0ce:	out    dx,eax
  41b0cf:	fild   WORD PTR [edx]
  41b0d1:	jnp    0x41b140
  41b0d3:	cmp    BYTE PTR [ecx-0x6c3460e],0xc3
  41b0da:	cs jb  0x41b0a2
  41b0dd:	jge    0x41b0c0
  41b0df:	mov    eax,ds:0x9c80c0c8
  41b0e4:	sub    cl,bl
  41b0e6:	mov    ds:0xa6ae9667,al
  41b0eb:	pop    es
  41b0ec:	sbb    BYTE PTR [ebp-0x29e233e2],ch
  41b0f2:	inc    eax
  41b0f3:	pop    esp
  41b0f4:	jmp    0x41b162
  41b0f6:	sar    DWORD PTR [edx-0x58],cl
  41b0f9:	jle    0x41b098
  41b0fb:	pusha  
  41b0fc:	sar    DWORD PTR ds:0xec2836a,1
  41b102:	out    dx,eax
  41b103:	fwait
  41b104:	xchg   esp,eax
  41b105:	mov    esp,0x54488a29
  41b10a:	lea    edx,[ecx+0x3af1daa1]
  41b110:	jnp    0x41b0d2
  41b112:	(bad)  
  41b113:	int3   
  41b114:	jmp    0xbda3235
  41b119:	or     al,BYTE PTR [ecx-0xa698611]
  41b11f:	aas    
  41b120:	stc    
  41b121:	xchg   ebp,eax
  41b122:	in     eax,dx
  41b123:	mov    dh,0xf1
  41b125:	inc    ebp
  41b126:	ins    BYTE PTR es:[edi],dx
  41b127:	mov    esi,0xb8b9aaf7
  41b12c:	xor    BYTE PTR [ecx+0x67],dh
  41b12f:	iret   
  41b130:	jae    0x41b16c
  41b132:	sbb    ch,BYTE PTR [ebx-0x32]
  41b135:	aam    0x60
  41b137:	in     eax,0xb4
  41b139:	jno    0x41b19e
  41b13b:	pop    ebx
  41b13c:	xchg   edx,eax
  41b13d:	ins    DWORD PTR es:[edi],dx
  41b13e:	dec    esi
  41b13f:	push   es
  41b140:	clc    
  41b141:	and    BYTE PTR [edi-0x2f4cef2c],0x41
  41b148:	push   0xaaea025f
  41b14d:	jne    0x41b10d
  41b14f:	daa    
  41b150:	inc    ebx
  41b151:	(bad)  
  41b152:	xlat   BYTE PTR ds:[ebx]
  41b153:	pop    edi
  41b154:	cs popf 
  41b156:	jnp    0x41b18e
  41b158:	cld    
  41b159:	mov    ebx,0x67c17f64
  41b15e:	loope  0x41b11d
  41b160:	mov    ds:0xa64329c,al
  41b165:	dec    esi
  41b166:	lea    esi,[ecx-0x4e7ef268]
  41b16c:	sti    
  41b16d:	les    esp,FWORD PTR [esi]
  41b16f:	mov    al,dl
  41b171:	push   edx
  41b172:	fcmovnu st,st(6)
  41b174:	imul   edx,DWORD PTR [ebx],0x10
  41b177:	int3   
  41b178:	pushf  
  41b179:	(bad)  
  41b17a:	cmp    ecx,DWORD PTR [esi-0x21]
  41b17d:	dec    esi
  41b17e:	jmp    FWORD PTR [edx+0x47]
  41b181:	test   DWORD PTR [esi-0x13],edi
  41b184:	cmp    al,BYTE PTR [edi+0x593b9b76]
  41b18a:	iret   
  41b18b:	jmp    0x41b13e
  41b18d:	cmp    eax,0xf7dc86f9
  41b192:	xchg   BYTE PTR [esi+edi*8-0x7d144893],bl
  41b199:	in     eax,dx
  41b19a:	out    0x58,al
  41b19c:	stos   BYTE PTR es:[edi],al
  41b19d:	dec    edx
  41b19e:	add    esp,esi
  41b1a0:	jmp    0x8488:0x355b824f
  41b1a7:	mov    ds:0x7e0f5510,al
  41b1ac:	pop    edx
  41b1ad:	or     DWORD PTR [eax+0x7242c2d6],edx
  41b1b3:	xchg   esi,eax
  41b1b4:	pop    edx
  41b1b5:	fdivrp st(4),st
  41b1b7:	ds test dh,0x84
  41b1bb:	sbb    eax,DWORD PTR [edi+0x56d1d5fa]
  41b1c1:	shl    BYTE PTR [edi-0x47f3a1aa],1
  41b1c7:	bound  ecx,QWORD PTR [ebx+0x2b]
  41b1ca:	jnp    0x41b197
  41b1cc:	in     eax,dx
  41b1cd:	mul    DWORD PTR [ecx]
  41b1cf:	xchg   BYTE PTR [edx+0x1bd6010f],dh
  41b1d5:	mov    esi,0x499cb8c8
  41b1da:	or     BYTE PTR [edi],dh
  41b1dc:	xchg   BYTE PTR [ebx+esi*8+0x1a],bh
  41b1e0:	push   0x5
  41b1e2:	xchg   ebp,eax
  41b1e3:	xchg   edi,eax
  41b1e4:	and    al,BYTE PTR [edx+0x747e463f]
  41b1ea:	fmul   st,st(3)
  41b1ec:	add    ebx,DWORD PTR ds:0x48f0fefc
  41b1f2:	rcr    BYTE PTR [ebx-0x57],0xa2
  41b1f6:	xor    BYTE PTR [ebx],0xe1
  41b1f9:	adc    ecx,edi
  41b1fb:	xchg   esp,eax
  41b1fc:	jns    0x41b1f7
  41b1fe:	push   ecx
  41b1ff:	push   cs
  41b200:	sub    ch,0x51
  41b203:	ficomp WORD PTR [edi-0x34c72c47]
  41b209:	mov    ds:0x2bc67360,al
  41b20e:	fmul   QWORD PTR [edx]
  41b210:	icebp  
  41b211:	mov    ebx,0xcfa383e5
  41b216:	ss popw ss
  41b219:	pop    edx
  41b21a:	jmp    0x1e4440ba
  41b21f:	xchg   ecx,eax
  41b220:	test   eax,0x2b615ab0
  41b225:	xchg   esi,esp
  41b227:	dec    ebp
  41b228:	(bad)  
  41b229:	scas   eax,DWORD PTR es:[edi]
  41b22a:	ret    
  41b22b:	fldcw  WORD PTR [ebp+0x909d2f2]
  41b231:	push   edi
  41b232:	fild   WORD PTR [ecx-0x13]
  41b235:	fwait
  41b236:	aad    0x92
  41b238:	outs   dx,BYTE PTR ds:[esi]
  41b239:	adc    esp,ebp
  41b23b:	mov    edi,0xa153b987
  41b240:	call   0x82d:0x54fae65c
  41b247:	mov    ebp,0x390078cb
  41b24c:	fdivrp st(2),st
  41b24e:	sbb    edx,DWORD PTR [esi-0x78]
  41b251:	jp     0x41b240
  41b253:	fs aad 0x47
  41b256:	gs jmp 0x41b1e4
  41b259:	pop    ss
  41b25a:	or     al,0x8a
  41b25c:	jne    0x41b285
  41b25e:	jg     0x41b234
  41b260:	lds    eax,FWORD PTR [ebp+0x3a08b97c]
  41b266:	aas    
  41b267:	test   esi,esp
  41b269:	push   esi
  41b26a:	nop
  41b26b:	add    al,0xb2
  41b26d:	mov    bl,0xcf
  41b26f:	outs   dx,DWORD PTR ds:[esi]
  41b270:	xor    al,0x8f
  41b272:	scas   al,BYTE PTR es:[edi]
  41b273:	mov    ebp,0x36e36aeb
  41b278:	jne    0x41b26a
  41b27a:	xor    DWORD PTR [ebx+0x45],eax
  41b27d:	mov    dh,0xe4
  41b27f:	mov    ebx,0xaa805b6c
  41b284:	retf   0x2b0e
  41b287:	rcr    dl,0x5d
  41b28a:	pop    ebx
  41b28b:	and    esi,DWORD PTR [ebx-0x25]
  41b28e:	pop    ebx
  41b28f:	jnp    0x41b2fd
  41b291:	push   ds
  41b292:	sub    bh,BYTE PTR [edx+0x17]
  41b295:	and    DWORD PTR [edi-0x17370e23],eax
  41b29b:	rcr    BYTE PTR [ebp-0x8],cl
  41b29e:	mov    esp,DWORD PTR [ebx+esi*1]
  41b2a1:	mov    ch,0x91
  41b2a3:	sub    cl,bh
  41b2a5:	push   esi
  41b2a6:	repnz dec edx
  41b2a8:	(bad)  
  41b2a9:	mov    es,WORD PTR [esi-0x643bc673]
  41b2af:	sub    eax,0x50aadfc7
  41b2b4:	rol    esi,cl
  41b2b6:	repnz sahf 
  41b2b8:	aas    
  41b2b9:	mov    dh,0xaf
  41b2bb:	cmp    edx,edi
  41b2bd:	push   es
  41b2be:	dec    eax
  41b2bf:	test   DWORD PTR [edi],0xca964ed9
  41b2c5:	pop    eax
  41b2c6:	sub    BYTE PTR [ebx],cl
  41b2c8:	sar    BYTE PTR ds:0xd3d8ebf1,0x58
  41b2d0:	pop    ebx
  41b2d1:	jecxz  0x41b324
  41b2d3:	push   esi
  41b2d4:	adc    al,BYTE PTR [edx-0x6e51d3e2]
  41b2da:	xchg   ebx,edi
  41b2dc:	pop    es
  41b2dd:	addr16 mov bh,0xe0
  41b2e0:	push   0x77e7b0a6
  41b2e5:	daa    
  41b2e6:	cs fs jmp 0xc364:0x4aefbb34
  41b2ef:	ret    0x1f9f
  41b2f2:	into   
  41b2f3:	mov    al,0xce
  41b2f5:	out    0x4b,eax
  41b2f7:	pop    ss
  41b2f8:	push   esi
  41b2f9:	in     al,dx
  41b2fa:	mov    DWORD PTR [ebx+edi*8+0x31],ecx
  41b2fe:	sub    BYTE PTR [ebp-0x618347c1],0xeb
  41b305:	pushf  
  41b306:	icebp  
  41b307:	mov    dl,0xde
  41b309:	test   eax,0xce6d7e9d
  41b30e:	jae    0x41b38f
  41b310:	(bad)  
  41b311:	mov    ds:0xf91f4869,eax
  41b316:	cmp    cl,BYTE PTR [ebx-0x4e]
  41b319:	sbb    eax,eax
  41b31b:	mov    edi,0xf38743c2
  41b320:	sub    eax,0x4bbbf04c
  41b325:	out    dx,al
  41b326:	sbb    ebx,DWORD PTR [ebp-0x60]
  41b329:	fsub   QWORD PTR [ebx-0x45d3e4d4]
  41b32f:	je     0x41b383
  41b331:	pop    eax
  41b332:	fistp  QWORD PTR [edi]
  41b334:	sahf   
  41b335:	test   esi,ebp
  41b337:	mov    bl,0x40
  41b339:	scas   al,BYTE PTR es:[edi]
  41b33a:	ss jmp 0xa4fb460b
  41b340:	xor    eax,0x48acebb9
  41b345:	lea    edx,[eax]
  41b347:	test   al,0x3e
  41b349:	cmp    ecx,0xbcffec62
  41b34f:	mov    WORD PTR [esi],fs
  41b351:	jle    0x41b32e
  41b353:	imul   edx,eax,0x69
  41b356:	out    0x9e,al
  41b358:	jecxz  0x41b3d7
  41b35a:	jp     0x41b32c
  41b35c:	xchg   BYTE PTR fs:[eax-0x68],bh
  41b360:	inc    edx
  41b361:	mov    eax,0x13ed8a09
  41b366:	out    dx,al
  41b367:	mov    DWORD PTR [esi],ebp
  41b369:	cmp    DWORD PTR [ebx+edi*2],edi
  41b36c:	add    dl,BYTE PTR [ebx]
  41b36e:	sbb    eax,0xf61c36fb
  41b373:	shl    BYTE PTR [edx],0x8b
  41b376:	pop    ebx
  41b377:	xor    DWORD PTR [ebp+0x6926a13d],0x6e4b0e18
  41b381:	out    0x1e,eax
  41b383:	dec    BYTE PTR [edx-0x2]
  41b386:	sti    
  41b387:	dec    edx
  41b388:	xchg   edi,eax
  41b389:	gs (bad) 
  41b38b:	push   ss
  41b38c:	mov    ecx,0x543efc55
  41b391:	push   es
  41b392:	dec    edi
  41b393:	mov    ds:0x8023c87b,eax
  41b398:	add    eax,edi
  41b39a:	sbb    al,0xa8
  41b39c:	adc    eax,0xc52aed8a
  41b3a1:	push   cs
  41b3a2:	sub    dl,BYTE PTR [ebp+0x1daddc2c]
  41b3a8:	lds    esi,FWORD PTR [edx+0x32]
  41b3ab:	push   eax
  41b3ac:	scas   eax,DWORD PTR es:[edi]
  41b3ad:	lock xchg ebp,eax
  41b3af:	pusha  
  41b3b0:	inc    esp
  41b3b1:	jns    0x41b337
  41b3b3:	enter  0x1f0f,0x53
  41b3b7:	nop
  41b3b8:	fisub  DWORD PTR [esi]
  41b3ba:	push   ebx
  41b3bb:	adc    BYTE PTR [ecx-0x13d314fc],ah
  41b3c1:	mov    ds:0x638aa397,al
  41b3c6:	loop   0x41b3e3
  41b3c8:	ror    DWORD PTR [edi-0x2e49c021],1
  41b3ce:	mov    gs,WORD PTR [esi-0x3d]
  41b3d1:	hlt    
  41b3d2:	lods   al,BYTE PTR ds:[esi]
  41b3d3:	push   edi
  41b3d4:	jne    0x41b42f
  41b3d6:	sbb    al,0x22
  41b3d8:	icebp  
  41b3d9:	pop    edi
  41b3da:	add    al,0x41
  41b3dc:	popf   
  41b3dd:	fwait
  41b3de:	or     al,0xae
  41b3e0:	jns    0x41b3f8
  41b3e2:	call   0x2cdedb95
  41b3e7:	pop    eax
  41b3e8:	mov    eax,0x3d685b4d
  41b3ed:	xor    al,0x16
  41b3ef:	mov    dl,bl
  41b3f1:	popf   
  41b3f2:	mov    esp,0xc5b5121d
  41b3f7:	je     0x41b388
  41b3f9:	shl    DWORD PTR [edx+0x12],cl
  41b3fc:	xchg   esi,eax
  41b3fd:	mov    al,ds:0x8e7faae8
  41b402:	xor    DWORD PTR fs:[ebp+0x6a173917],eax
  41b409:	inc    ebx
  41b40a:	push   esi
  41b40b:	cmp    DWORD PTR [edx+0x64],edi
  41b40e:	sbb    ecx,DWORD PTR [edx+0x18800ddf]
  41b414:	sub    BYTE PTR [ebx-0x2e2a7ebb],dh
  41b41a:	xor    esp,edi
  41b41c:	pop    eax
  41b41d:	xor    DWORD PTR [ecx-0x1d],esi
  41b420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b421:	mov    ah,0xe5
  41b423:	pusha  
  41b424:	icebp  
  41b425:	pop    ebp
  41b426:	test   ebx,esi
  41b428:	in     al,dx
  41b429:	into   
  41b42a:	out    dx,al
  41b42b:	push   ecx
  41b42c:	pop    ss
  41b42d:	ss jge 0x41b475
  41b430:	outs   dx,BYTE PTR ds:[esi]
  41b431:	jecxz  0x41b43c
  41b433:	shr    BYTE PTR [ebx+0x42],0xfe
  41b437:	and    DWORD PTR [eax],0xffffffea
  41b43a:	sub    esp,DWORD PTR [edi+0x63fb4608]
  41b440:	adc    ch,al
  41b442:	sbb    BYTE PTR [ebp+0x3bd482ed],ah
  41b448:	push   esi
  41b449:	xchg   esp,eax
  41b44a:	ss xchg ebp,eax
  41b44c:	aam    0x27
  41b44e:	(bad)  
  41b44f:	and    bl,bl
  41b451:	sub    ecx,ebx
  41b453:	or     BYTE PTR [edx-0x5570ffe0],0x47
  41b45a:	std    
  41b45b:	inc    esi
  41b45c:	ds loop 0x41b41c
  41b45f:	pop    ebx
  41b460:	inc    ecx
  41b461:	or     al,0xd9
  41b463:	das    
  41b464:	and    esi,DWORD PTR [ecx]
  41b466:	and    al,0xe9
  41b468:	sub    DWORD PTR [ecx-0x5a38d7ac],ecx
  41b46e:	push   ecx
  41b46f:	adc    DWORD PTR [eax+0x3b4a02eb],esp
  41b475:	or     BYTE PTR [eax-0xa],0x23
  41b479:	lahf   
  41b47a:	and    ax,0x1254
  41b47e:	pop    ecx
  41b47f:	jnp    0x41b42c
  41b481:	jle    0x41b47a
  41b483:	das    
  41b484:	mov    ecx,0xb853b76d
  41b489:	mov    bh,0x29
  41b48b:	cwde   
  41b48c:	sub    eax,0x8d0fcef8
  41b491:	addr16 xor al,0x39
  41b494:	pop    ebp
  41b495:	add    ebx,DWORD PTR [ebx-0x53]
  41b498:	jno    0x41b453
  41b49a:	pop    eax
  41b49b:	outs   dx,BYTE PTR ds:[esi]
  41b49c:	cmp    al,0xf9
  41b49e:	aas    
  41b49f:	mov    bl,0x7e
  41b4a1:	and    al,0xd
  41b4a3:	sub    esi,DWORD PTR [ebp+0x204fbcb2]
  41b4a9:	mov    ds:0xa71b65e7,al
  41b4ae:	ret    0xb884
  41b4b1:	sub    edx,esp
  41b4b3:	stc    
  41b4b4:	or     al,0x0
  41b4b6:	push   eax
  41b4b7:	xchg   esi,eax
  41b4b8:	sbb    DWORD PTR [ecx+esi*8-0xa],ecx
  41b4bc:	xor    BYTE PTR [ebp+0x1c],cl
  41b4bf:	repz cmp edi,DWORD PTR [ebx]
  41b4c2:	push   ebx
  41b4c3:	ins    DWORD PTR es:[edi],dx
  41b4c4:	inc    esi
  41b4c5:	sub    eax,0xc75e3d90
  41b4ca:	les    esp,FWORD PTR [eax-0x5705a2c1]
  41b4d0:	mov    ds:0x6b9d037f,eax
  41b4d5:	pop    ss
  41b4d6:	xchg   ebx,eax
  41b4d7:	or     BYTE PTR [esi],0xf6
  41b4da:	adc    DWORD PTR [ecx-0x6c],edi
  41b4dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4de:	pusha  
  41b4df:	fnstcw WORD PTR [edx+ebx*1]
  41b4e2:	fld    DWORD PTR [edx]
  41b4e4:	and    BYTE PTR es:[ebp-0x43],cl
  41b4e8:	int    0x9a
  41b4ea:	sbb    cl,BYTE PTR [eax+edi*2-0x2eac0b38]
  41b4f1:	jg     0x41b53d
  41b4f3:	test   al,0xfd
  41b4f5:	mov    al,ds:0xc61921e2
  41b4fa:	push   esi
  41b4fb:	inc    esp
  41b4fc:	xchg   edi,eax
  41b4fd:	in     eax,0xac
  41b4ff:	fwait
  41b500:	xchg   ebx,eax
  41b501:	xor    ch,bl
  41b503:	dec    esi
  41b504:	dec    ecx
  41b505:	pop    ebx
  41b506:	sub    DWORD PTR [ecx],ecx
  41b508:	scas   eax,DWORD PTR es:[edi]
  41b509:	pop    ecx
  41b50a:	je     0x41b588
  41b50c:	push   0x4819658d
  41b511:	scas   eax,DWORD PTR es:[edi]
  41b512:	pop    ecx
  41b513:	ret    
  41b514:	leave  
  41b515:	sub    ebx,edi
  41b517:	lahf   
  41b518:	cmp    eax,0x1718b7a2
  41b51d:	iret   
  41b51e:	push   cs
  41b51f:	fild   DWORD PTR [esi+0x35]
  41b522:	xchg   edx,eax
  41b523:	hlt    
  41b524:	mov    al,0x9a
  41b526:	lock adc al,0x86
  41b529:	test   eax,0xff4273d0
  41b52e:	mov    bh,0x2b
  41b530:	and    eax,0x557e6d40
  41b535:	mov    ecx,0x38a05b40
  41b53a:	cwde   
  41b53b:	into   
  41b53c:	push   esp
  41b53d:	out    0x58,al
  41b53f:	mov    ch,0x57
  41b541:	inc    edi
  41b542:	push   eax
  41b543:	(bad)  
  41b545:	inc    ebx
  41b546:	int    0xe6
  41b548:	fsub   DWORD PTR [edx+0x2c048dd9]
  41b54e:	ds jle 0x41b526
  41b551:	mov    ds:0xf1cb7dcf,al
  41b556:	push   ebp
  41b557:	lods   al,BYTE PTR ds:[esi]
  41b558:	mov    ch,0xe2
  41b55a:	dec    eax
  41b55b:	push   ebp
  41b55c:	ja     0x41b5d1
  41b55e:	xchg   BYTE PTR [edi],cl
  41b560:	ret    0x2f7c
  41b563:	adc    eax,0xa97391eb
  41b568:	ins    BYTE PTR es:[edi],dx
  41b569:	out    0x3f,eax
  41b56b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b56c:	dec    edx
  41b56d:	fld    TBYTE PTR [edx+0xc]
  41b570:	in     eax,0xb4
  41b572:	jbe    0x41b54e
  41b574:	mov    edi,DWORD PTR ds:0x55bc9d87
  41b57a:	arpl   si,bp
  41b57c:	stos   BYTE PTR es:[edi],al
  41b57d:	adc    DWORD PTR [esp+esi*8+0x5b],esi
  41b581:	mov    ebp,ebx
  41b583:	outs   dx,BYTE PTR ds:[esi]
  41b584:	fidiv  WORD PTR [esi]
  41b586:	mov    bh,0xe6
  41b588:	lock lods eax,DWORD PTR ds:[esi]
  41b58a:	xchg   edx,eax
  41b58b:	ror    esp,1
  41b58d:	inc    ecx
  41b58e:	fs aas 
  41b590:	adc    cl,BYTE PTR [edi+ebp*2+0x2d5765f6]
  41b597:	xchg   ecx,eax
  41b598:	add    eax,0x8153465d
  41b59d:	test   eax,0x4732fc45
  41b5a2:	xchg   ecx,eax
  41b5a3:	xchg   BYTE PTR ds:0x671d372a,cl
  41b5a9:	jge    0x41b57f
  41b5ab:	cmp    edi,edi
  41b5ad:	xchg   ebp,eax
  41b5ae:	and    cl,BYTE PTR [edi]
  41b5b0:	pop    eax
  41b5b1:	and    BYTE PTR [edx+eax*8-0x44],cl
  41b5b5:	or     eax,0x65fcd54c
  41b5ba:	lea    esi,[edx-0x47]
  41b5bd:	lock mov bl,0xe4
  41b5c0:	add    DWORD PTR [ebx-0x12198f35],edi
  41b5c6:	cmp    DWORD PTR [edx-0x3398c910],eax
  41b5cc:	rcl    BYTE PTR [esi],1
  41b5ce:	sub    al,0xc6
  41b5d0:	out    dx,eax
  41b5d1:	retf   0x39a0
  41b5d4:	jo     0x41b61d
  41b5d6:	unpckhps xmm2,XMMWORD PTR [ecx+0x8]
  41b5da:	mov    WORD PTR [esi-0x708388fa],ds
  41b5e0:	jmp    0x4f56:0x1a4513
  41b5e7:	loop   0x41b56e
  41b5e9:	dec    ecx
  41b5ea:	gs in  al,0x4f
  41b5ed:	sbb    dl,BYTE PTR [edi+eax*4]
  41b5f0:	repnz pop esi
  41b5f2:	hlt    
  41b5f3:	dec    ecx
  41b5f4:	shl    al,0xa3
  41b5f7:	stos   BYTE PTR es:[edi],al
  41b5f8:	fdivrp st(6),st
  41b5fa:	test   DWORD PTR [edi],edx
  41b5fc:	inc    esi
  41b5fd:	xchg   ecx,eax
  41b5fe:	mov    ds:0x2162c85a,al
  41b603:	xlat   BYTE PTR ds:[ebx]
  41b604:	cdq    
  41b605:	lock retf 0x312f
  41b609:	sub    eax,0xa9e6d936
  41b60e:	adc    al,0x26
  41b610:	mov    ebx,0xfd9429bd
  41b615:	fistp  WORD PTR [edx]
  41b617:	and    ch,dl
  41b619:	pop    ecx
  41b61a:	fld    st(4)
  41b61c:	aas    
  41b61d:	imul   eax,DWORD PTR [esi],0xffffffab
  41b620:	(bad)  
  41b621:	fldenv [eax-0x17]
  41b624:	stos   DWORD PTR es:[edi],eax
  41b625:	fld1   
  41b627:	jge    0x41b5c6
  41b629:	outs   dx,DWORD PTR ds:[esi]
  41b62a:	and    eax,0xc028301c
  41b62f:	(bad)
  41b633:	and    edx,DWORD PTR [esi]
  41b635:	xchg   ebx,ebp
  41b637:	dec    ebx
  41b638:	mov    ah,BYTE PTR [ecx+0x68]
  41b63b:	dec    ecx
  41b63c:	push   eax
  41b63d:	js     0x41b638
  41b63f:	mov    ebp,0x903eba6d
  41b644:	lock mov es,WORD PTR es:[ecx+ebp*2-0x2935116d]
  41b64d:	mov    ch,BYTE PTR [edi-0x58]
  41b650:	rcl    BYTE PTR [esi+0x6bdfdcde],1
  41b656:	fild   WORD PTR [eax-0x71]
  41b659:	push   esi
  41b65a:	push   cs
  41b65b:	xlat   BYTE PTR ds:[ebx]
  41b65c:	fsubr  QWORD PTR [esi+esi*4+0x1f11803c]
  41b663:	stc    
  41b664:	call   0x4c6bf39
  41b669:	fimul  DWORD PTR gs:[edx+0x7a829b31]
  41b670:	push   es
  41b671:	mov    edi,0xc9010414
  41b676:	mov    al,ds:0xb6668f61
  41b67b:	mov    eax,0x3ea48446
  41b680:	test   BYTE PTR [ebx],dh
  41b682:	addr16 loop 0x41b6c5
  41b685:	pushf  
  41b686:	mov    DWORD PTR [edx+0x4f47894],edx
  41b68c:	test   eax,0x71ee610b
  41b691:	in     al,0xca
  41b693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b694:	pushf  
  41b695:	pop    ss
  41b696:	jg     0x41b66c
  41b698:	dec    esp
  41b699:	adc    al,0xff
  41b69b:	std    
  41b69c:	xchg   esp,eax
  41b69d:	mov    WORD PTR [edi+0x37],?
  41b6a0:	mov    ds:0xfe86f404,al
  41b6a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6a6:	mov    cl,0x79
  41b6a8:	xor    DWORD PTR [ebp+0x6cd0271c],ecx
  41b6ae:	aas    
  41b6af:	push   ss
  41b6b0:	mov    ch,0xdc
  41b6b2:	inc    edx
  41b6b3:	pushf  
  41b6b4:	mov    ch,0x59
  41b6b6:	sbb    edx,DWORD PTR [eax]
  41b6b8:	pop    esi
  41b6b9:	push   eax
  41b6ba:	nop
  41b6bb:	jecxz  0x41b700
  41b6bd:	out    dx,eax
  41b6be:	jno    0x41b673
  41b6c0:	dec    esp
  41b6c1:	xchg   edi,eax
  41b6c2:	leave  
  41b6c3:	(bad)
  41b6c6:	les    edi,FWORD PTR [edx]
  41b6c8:	jmp    0x2925:0x4d30f6ca
  41b6cf:	xchg   edx,eax
  41b6d0:	fidivr DWORD PTR [eax+0x1b9cfd30]
  41b6d6:	sahf   
  41b6d7:	test   eax,0x9a50f4dc
  41b6dc:	enter  0xe471,0x46
  41b6e0:	adc    al,0x31
  41b6e2:	cmp    ecx,DWORD PTR [eax+0x52]
  41b6e5:	sbb    eax,0x7afc3c98
  41b6ea:	sub    al,0xe5
  41b6ec:	jns    0x41b6e8
  41b6ee:	gs retf 0xef6
  41b6f2:	jp     0x41b74b
  41b6f4:	push   ds
  41b6f5:	int3   
  41b6f6:	sbb    al,0x86
  41b6f8:	add    eax,0xc1943194
  41b6fd:	mov    al,0x60
  41b6ff:	and    al,0x42
  41b701:	or     al,0x4
  41b703:	adc    eax,0x941837aa
  41b708:	fidivr WORD PTR [ebp+eiz*2+0x79191955]
  41b70f:	xchg   edx,eax
  41b710:	adc    bh,dh
  41b712:	or     bl,dh
  41b714:	mov    ebx,DWORD PTR [ebx]
  41b716:	mov    edx,0x6bbb7509
  41b71b:	sub    dh,bl
  41b71d:	cmp    cl,BYTE PTR [ecx+0x3bdb9144]
  41b723:	dec    ebx
  41b724:	sub    eax,0x57580538
  41b729:	(bad)  
  41b72a:	repnz cdq 
  41b72c:	inc    edi
  41b72d:	mov    al,ds:0xbf50d0d2
  41b732:	mov    fs,edx
  41b734:	inc    edi
  41b735:	div    DWORD PTR [edx-0x4d4d8da5]
  41b73b:	arpl   WORD PTR [ebx],sp
  41b73d:	cli    
  41b73e:	jp     0x41b78f
  41b740:	cmp    BYTE PTR [edi+0x34b09770],0xe1
  41b747:	aam    0xc4
  41b749:	aad    0x46
  41b74b:	(bad)  
  41b74c:	stos   DWORD PTR es:[edi],eax
  41b74d:	stc    
  41b74e:	inc    BYTE PTR [ebp-0x52a1e096]
  41b754:	idiv   BYTE PTR [edi+0x5b]
  41b757:	clc    
  41b758:	mov    ds:0xe57ae621,eax
  41b75d:	test   al,0x9
  41b75f:	add    BYTE PTR [edi+eax*2],0x72
  41b763:	xlat   BYTE PTR ds:[ebx]
  41b764:	pop    ecx
  41b765:	je     0x41b7e0
  41b767:	and    DWORD PTR [eax],esi
  41b769:	in     eax,0xc2
  41b76b:	push   cs
  41b76c:	fisttp DWORD PTR [edi+0x4d]
  41b76f:	pop    eax
  41b770:	xchg   edx,eax
  41b771:	xchg   esp,eax
  41b772:	in     al,dx
  41b773:	cmp    DWORD PTR [edi],ecx
  41b775:	(bad)  
  41b776:	jle    0x41b788
  41b778:	fs aas 
  41b77a:	sub    al,0x9f
  41b77c:	pop    edx
  41b77d:	sbb    DWORD PTR [eax+ebp*2+0x48],esp
  41b781:	adc    BYTE PTR [ebp-0x2d],dh
  41b784:	and    edi,esi
  41b786:	sbb    esi,edi
  41b788:	sub    esp,DWORD PTR [eiz*2-0x13943d17]
  41b78f:	mov    WORD PTR [esp+eiz*4+0x2d12d20e],ss
  41b796:	push   ss
  41b797:	data16 adc BYTE PTR [ebx-0x30],0x37
  41b79c:	push   edx
  41b79d:	inc    ebx
  41b79e:	icebp  
  41b79f:	popf   
  41b7a0:	stos   BYTE PTR es:[edi],al
  41b7a1:	das    
  41b7a2:	add    DWORD PTR [edx-0x4d],ebp
  41b7a5:	or     ebp,DWORD PTR [eax+0x5a]
  41b7a8:	stc    
  41b7a9:	mov    dh,0x76
  41b7ab:	xchg   ecx,eax
  41b7ac:	(bad)  
  41b7ad:	cld    
  41b7ae:	dec    edx
  41b7af:	mov    ds:0x26f842d0,eax
  41b7b4:	mov    ecx,0x2d8eb837
  41b7b9:	dec    ebx
  41b7ba:	and    DWORD PTR [eax-0x4eea3a58],ecx
  41b7c0:	fld    TBYTE PTR [ecx]
  41b7c2:	sub    bl,dl
  41b7c4:	pop    eax
  41b7c5:	ins    BYTE PTR es:[edi],dx
  41b7c6:	push   0x8b23d144
  41b7cb:	(bad)  
  41b7cc:	adc    edx,ebx
  41b7ce:	xchg   edx,eax
  41b7cf:	push   ecx
  41b7d0:	aam    0x9c
  41b7d2:	push   0x7ec6dbc2
  41b7d7:	jno    0x41b854
  41b7d9:	adc    edi,ebx
  41b7db:	sbb    BYTE PTR [ebx+0x6f812fc6],dl
  41b7e1:	add    BYTE PTR [ebx],ah
  41b7e3:	(bad)  
  41b7e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7e6:	cmp    al,0x8a
  41b7e8:	jl     0x41b79c
  41b7ea:	xchg   edx,eax
  41b7eb:	jmp    0x41b857
  41b7ed:	sub    DWORD PTR [esp+ecx*1-0x25e81270],edi
  41b7f4:	aad    0x49
  41b7f6:	in     al,0x87
  41b7f8:	cmp    edi,DWORD PTR [ecx]
  41b7fa:	xchg   esi,eax
  41b7fb:	mov    edi,0xa2fa6b05
  41b800:	dec    eax
  41b801:	xor    DWORD PTR [ecx],0x186b6db1
  41b807:	push   ds
  41b808:	test   eax,0x503d3c58
  41b80d:	pop    esi
  41b80e:	rol    DWORD PTR [ebx],1
  41b810:	ret    0xfa5e
  41b813:	cmp    edi,eax
  41b815:	xlat   BYTE PTR ds:[ebx]
  41b816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b817:	cmp    cl,BYTE PTR [esi+0x214e09f3]
  41b81d:	lock sub BYTE PTR [edx+0x42ea4d4c],dl
  41b824:	push   es
  41b825:	sbb    ebp,DWORD PTR [ebx+0x6f5845da]
  41b82b:	mov    ch,0x4a
  41b82d:	repz into 
  41b82f:	es jl  0x41b818
  41b832:	jle    0x41b8ae
  41b834:	mov    eax,0xcb687a10
  41b839:	scas   al,BYTE PTR es:[edi]
  41b83a:	cmp    eax,0xf8fe70d4
  41b83f:	gs jp  0x41b85e
  41b842:	or     al,0xc9
  41b844:	hlt    
  41b845:	inc    edx
  41b846:	fistp  QWORD PTR [eax+0xd522956]
  41b84c:	or     esi,DWORD PTR [edi+0x72]
  41b84f:	cmp    eax,0x8cd8c9f2
  41b854:	jecxz  0x41b84e
  41b856:	mov    eax,0x5fe84deb
  41b85b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b85c:	mov    dl,0x63
  41b85e:	aaa    
  41b85f:	mov    ah,0x6
  41b861:	test   al,0x4a
  41b863:	loope  0x41b7ed
  41b865:	mov    al,ds:0x67bea8a7
  41b86a:	test   DWORD PTR [esi-0x2bdec57d],esp
  41b870:	mov    ecx,0x5e854743
  41b875:	outs   dx,BYTE PTR ds:[esi]
  41b876:	loop   0x41b8e9
  41b878:	fldcw  WORD PTR [ebx]
  41b87a:	adc    eax,0xd4a49387
  41b87f:	shl    DWORD PTR [edx],cl
  41b881:	mov    esi,ss
  41b883:	sbb    al,0xe0
  41b885:	cmp    al,BYTE PTR [ebx-0xeb69054]
  41b88b:	(bad)  
  41b88c:	cmp    BYTE PTR [esi],0x3b
  41b88f:	cmp    BYTE PTR [ebp+0x6d],ch
  41b892:	ret    
  41b893:	lock leave 
  41b895:	pop    ds
  41b896:	jmp    0x3bdd8212
  41b89b:	pop    eax
  41b89c:	shl    DWORD PTR [edi+0x7c],cl
  41b89f:	test   eax,0x79204b0
  41b8a4:	push   ss
  41b8a5:	mov    ds:0x909a7bc,al
  41b8aa:	inc    edx
  41b8ab:	pop    edx
  41b8ac:	sub    BYTE PTR [esi+0x68d50070],ah
  41b8b2:	sbb    eax,0x75fa9a99
  41b8b7:	fcom   st(0)
  41b8b9:	mov    al,ds:0x6947c3c6
  41b8be:	shr    BYTE PTR [ebx+0x4b],cl
  41b8c1:	jecxz  0x41b8c9
  41b8c3:	mov    ds:0xceaac628,eax
  41b8c8:	in     al,0x27
  41b8ca:	mov    bh,0x37
  41b8cc:	enter  0x6201,0x73
  41b8d0:	out    dx,eax
  41b8d1:	stos   DWORD PTR es:[edi],eax
  41b8d2:	clc    
  41b8d3:	ss pop ecx
  41b8d5:	dec    edi
  41b8d7:	ins    BYTE PTR es:[edi],dx
  41b8d8:	nop    DWORD PTR [edx+0x47521318]
  41b8df:	rol    BYTE PTR [edi-0x4e70f567],0x2b
  41b8e6:	ret    
  41b8e7:	in     al,0xb
  41b8e9:	or     esi,DWORD PTR [eax]
  41b8eb:	repz xor BYTE PTR [edi+0x78075495],0x2
  41b8f3:	or     eax,0xfccb7fc9
  41b8f8:	aas    
  41b8f9:	or     ecx,DWORD PTR [ebx+0x239d25bb]
  41b8ff:	cmp    al,dl
  41b901:	sub    eax,0x47787570
  41b906:	leave  
  41b907:	pop    ss
  41b908:	inc    edx
  41b909:	xor    BYTE PTR [esi+eiz*2-0x1d2ad13],dh
  41b910:	sbb    esp,ecx
  41b912:	out    dx,al
  41b913:	call   0x28c0:0x81727d0f
  41b91a:	mov    DWORD PTR [edx+eax*1+0x59],esi
  41b91e:	cmp    ebp,DWORD PTR [ebp+ebx*8+0x3a6fad6c]
  41b925:	xchg   esi,eax
  41b926:	or     dh,BYTE PTR [eax+0xe64a15c]
  41b92c:	pop    ss
  41b92d:	cs adc al,0x94
  41b930:	mov    ss,WORD PTR [esi]
  41b932:	pop    esp
  41b933:	bound  edi,QWORD PTR [eax]
  41b935:	dec    eax
  41b936:	jp     0x41b98b
  41b938:	mov    eax,ds:0xe80a0858
  41b93d:	xchg   BYTE PTR [ebx+0x5e],bh
  41b940:	dec    edi
  41b941:	cdq    
  41b942:	cwde   
  41b943:	mov    esi,0xd3b1dcec
  41b948:	push   esp
  41b949:	iret   
  41b94a:	inc    esi
  41b94b:	mov    dl,0xf8
  41b94d:	shl    BYTE PTR [edx-0x1a],cl
  41b950:	or     edx,DWORD PTR [ebx]
  41b952:	iret   
  41b953:	sbb    al,0xf5
  41b955:	dec    ebp
  41b956:	mov    cl,BYTE PTR [edi-0x5274484c]
  41b95c:	jge    0x41b97e
  41b95e:	mov    BYTE PTR [edx],bl
  41b960:	retf   0x98ea
  41b963:	les    ebx,FWORD PTR [esi-0x5f]
  41b966:	aam    0x41
  41b968:	adc    DWORD PTR [eax-0x8],ebp
  41b96b:	dec    esi
  41b96c:	xor    BYTE PTR [edi],bl
  41b96e:	push   DWORD PTR [esi+0x6b185051]
  41b974:	retf   0xbb9b
  41b977:	popf   
  41b978:	sar    BYTE PTR [ecx],1
  41b97a:	jb     0x41b958
  41b97c:	arpl   WORD PTR [edx],bp
  41b97e:	out    dx,eax
  41b97f:	xor    ebp,DWORD PTR [edi+eax*1-0x6a]
  41b983:	rcr    DWORD PTR [ecx+0x195bca94],0x5c
  41b98a:	push   0xffffffa3
  41b98c:	(bad)
  41b991:	aam    0xf
  41b993:	and    esp,ecx
  41b995:	scas   al,BYTE PTR es:[edi]
  41b996:	dec    esi
  41b997:	js     0x41b9ff
  41b999:	sub    dl,BYTE PTR [edi]
  41b99b:	iret   
  41b99c:	sub    DWORD PTR [eax-0x7d3744ff],eax
  41b9a2:	iret   
  41b9a3:	cmp    BYTE PTR [esi],dl
  41b9a5:	mov    al,0x6d
  41b9a7:	mov    bh,BYTE PTR [ebp-0x5cbaaf32]
  41b9ad:	stos   BYTE PTR es:[edi],al
  41b9ae:	sub    ch,BYTE PTR [ebp-0x7c713e28]
  41b9b4:	lods   eax,DWORD PTR ds:[esi]
  41b9b5:	(bad)  
  41b9b6:	aas    
  41b9b7:	mov    cl,0x13
  41b9b9:	sub    al,0xd0
  41b9bb:	add    eax,0xf8a1d31a
  41b9c0:	rcl    BYTE PTR [eax+ecx*2+0x77623356],1
  41b9c7:	iret   
  41b9c8:	and    eax,0xaefe715f
  41b9cd:	xor    BYTE PTR [edx],0x26
  41b9d0:	dec    edx
  41b9d1:	scas   al,BYTE PTR es:[edi]
  41b9d2:	jmp    0xeb5b08e2
  41b9d7:	cli    
  41b9d8:	popf   
  41b9d9:	sahf   
  41b9da:	dec    edx
  41b9db:	clc    
  41b9dc:	and    al,BYTE PTR [ecx]
  41b9de:	pop    ss
  41b9df:	les    ecx,FWORD PTR [edx]
  41b9e1:	xchg   edi,eax
  41b9e2:	inc    esi
  41b9e3:	mov    ah,0xed
  41b9e5:	bound  ebx,QWORD PTR [edx-0x7b]
  41b9e8:	inc    si
  41b9ea:	out    dx,al
  41b9eb:	rcr    DWORD PTR [edi],1
  41b9ed:	mov    cl,0x83
  41b9ef:	sub    ch,cl
  41b9f1:	(bad)  
  41b9f2:	jl     0x41ba49
  41b9f4:	out    dx,eax
  41b9f5:	outs   dx,DWORD PTR ds:[esi]
  41b9f6:	fisub  DWORD PTR [edx]
  41b9f8:	pop    edx
  41b9f9:	jnp    0x41ba3a
  41b9fb:	jg     0x41ba2a
  41b9fd:	or     esi,eax
  41b9ff:	ds jmp 0x41b9a1
  41ba02:	push   edi
  41ba03:	push   edi
  41ba04:	ss and al,0x7f
  41ba07:	cmp    DWORD PTR [ecx+edi*2-0x45bea36f],ebp
  41ba0e:	xor    DWORD PTR [edx],ebx
  41ba10:	xor    edx,ecx
  41ba12:	mov    esp,0x1b126c72
  41ba17:	mov    ebp,0x61876c3c
  41ba1c:	xlat   BYTE PTR es:[ebx]
  41ba1e:	retf   
  41ba1f:	aas    
  41ba20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba21:	stc    
  41ba22:	loop   0x41b9f8
  41ba24:	jnp    0x41ba71
  41ba26:	dec    ecx
  41ba27:	mov    dh,0xe6
  41ba29:	mov    fs,eax
  41ba2b:	cmp    al,0xed
  41ba2d:	jno    0x41ba6b
  41ba2f:	popf   
  41ba30:	pop    ebp
  41ba31:	aam    0xd
  41ba33:	fdivr  QWORD PTR [edx+0x5d2e09bd]
  41ba39:	adc    eax,0xd24b54f2
  41ba3e:	fucomi st,st(4)
  41ba40:	pop    ds
  41ba41:	xor    al,BYTE PTR [ecx-0x6e]
  41ba44:	pop    es
  41ba45:	sbb    DWORD PTR [edi+0x708d565a],edi
  41ba4b:	cmp    ebx,ebp
  41ba4d:	stc    
  41ba4e:	and    ecx,DWORD PTR [ecx]
  41ba50:	sub    BYTE PTR [ebx-0x47feaff8],bh
  41ba56:	mov    BYTE PTR [edx-0x4d0e105c],ah
  41ba5c:	sub    BYTE PTR [ebx],bl
  41ba5e:	fwait
  41ba5f:	ret    
  41ba60:	(bad)  
  41ba61:	lahf   
  41ba62:	and    al,0x77
  41ba64:	les    esi,FWORD PTR [esi+0x1e8f352e]
  41ba6a:	enter  0x5f41,0xb5
  41ba6e:	mov    eax,0x8f961cfe
  41ba73:	test   al,0xd8
  41ba76:	push   es
  41ba77:	mul    DWORD PTR [edx]
  41ba79:	or     eax,0x9860409a
  41ba7e:	sbb    al,0xfa
  41ba80:	cmp    ebx,DWORD PTR [edx+ebp*4-0x45389553]
  41ba87:	in     al,0x48
  41ba89:	lods   eax,DWORD PTR ds:[esi]
  41ba8a:	cwde   
  41ba8b:	push   ecx
  41ba8c:	shl    BYTE PTR [edi],1
  41ba8e:	jl     0x41ba1c
  41ba90:	mov    ebx,0xb8f707f3
  41ba95:	add    eax,0x3338146e
  41ba9a:	(bad)  
  41ba9b:	stos   DWORD PTR es:[edi],eax
  41ba9c:	xor    eax,0x7d08f6ea
  41baa1:	jp     0x41bad6
  41baa3:	add    eax,0x7ed2f4c2
  41baa8:	pop    ebp
  41baa9:	mov    ebx,0x8ebfcc43
  41baae:	and    ebp,eax
  41bab0:	pop    ecx
  41bab1:	cli    
  41bab2:	imul   ebx,edx,0xffffffa2
  41bab5:	or     al,0x3a
  41bab7:	hlt    
  41bab8:	nop
  41bab9:	stos   BYTE PTR es:[edi],al
  41baba:	stc    
  41babb:	or     ch,cl
  41babd:	push   ecx
  41babe:	aad    0xcd
  41bac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bac1:	lods   eax,DWORD PTR ds:[esi]
  41bac2:	into   
  41bac3:	test   eax,0xbe73f6a2
  41bac8:	mov    ds:0xee0cf6aa,eax
  41bacd:	jecxz  0x41bb0d
  41bacf:	int3   
  41bad0:	inc    ebp
  41bad1:	mov    WORD PTR [eax+0x5d],ss
  41bad4:	sub    DWORD PTR [esp+ebx*2+0x9],esi
  41bad8:	scas   eax,DWORD PTR es:[edi]
  41bad9:	jns    0x41bb4f
  41badb:	fld    DWORD PTR [esi]
  41badd:	in     al,dx
  41bade:	jg     0x41bb59
  41bae0:	inc    eax
  41bae1:	add    ch,ah
  41bae3:	(bad)  
  41bae4:	jp     0x41ba79
  41bae6:	outs   dx,BYTE PTR ds:[esi]
  41bae7:	test   eax,0xdb9f7f83
  41baec:	jbe    0x41ba8e
  41baee:	pushf  
  41baef:	mov    al,0x40
  41baf1:	jle    0x41bb65
  41baf3:	fidiv  WORD PTR [ecx]
  41baf5:	std    
  41baf6:	lock enter 0x6f1,0x1
  41bafb:	enter  0x5ef9,0xb
  41baff:	ds push ebx
  41bb01:	mov    dl,0x88
  41bb03:	ins    BYTE PTR es:[edi],dx
  41bb04:	outs   dx,BYTE PTR ds:[esi]
  41bb05:	cmp    ebx,DWORD PTR [ecx+0x6a17adff]
  41bb0b:	mov    ds:0x50c5e6f7,al
  41bb10:	add    eax,0x713bdd9a
  41bb15:	jmp    0xb0fa6d42
  41bb1a:	add    eax,0x83094ace
  41bb1f:	push   0x5581fd2e
  41bb24:	mov    ds:0xfc460234,eax
  41bb29:	ficomp DWORD PTR [ecx]
  41bb2b:	xchg   ebp,eax
  41bb2c:	mov    esp,0x1aabd995
  41bb31:	jmp    0xf1a36e10
  41bb36:	cs cmp al,0xa3
  41bb3a:	fadd   DWORD PTR [esi+edx*1-0x209cd35b]
  41bb41:	call   0x8366:0xb7343a36
  41bb48:	push   eax
  41bb49:	mov    dl,dh
  41bb4b:	add    bh,al
  41bb4d:	add    cl,bh
  41bb4f:	sub    BYTE PTR [ecx+ebx*8+0x55],bh
  41bb53:	ret    
  41bb54:	bound  eax,QWORD PTR [ebx-0x5daaca3]
  41bb5a:	outs   dx,DWORD PTR ds:[esi]
  41bb5b:	cmp    al,BYTE PTR [eax-0x28]
  41bb5e:	sbb    eax,0x5ae4c94b
  41bb63:	lea    esp,ds:0xded2966a
  41bb69:	add    al,0x3e
  41bb6b:	inc    eax
  41bb6c:	in     al,dx
  41bb6d:	dec    ecx
  41bb6e:	pop    ecx
  41bb6f:	and    edi,ecx
  41bb71:	adc    al,BYTE PTR [ebp+0x17382414]
  41bb77:	daa    
  41bb78:	mov    cs,ebx
  41bb7a:	sbb    esp,DWORD PTR [ebx+0xb70e780]
  41bb80:	je     0x41bbb6
  41bb82:	jne    0x41bb5c
  41bb84:	jmp    0x41bb94
  41bb86:	adc    DWORD PTR [esi+0x2d],ebx
  41bb89:	adc    esp,DWORD PTR [ebp-0x586d09f7]
  41bb8f:	loope  0x41bbf5
  41bb91:	xor    DWORD PTR [esi],esp
  41bb93:	aad    0xc
  41bb95:	adc    dl,BYTE PTR ss:[ebp+0x109b946d]
  41bb9c:	or     edi,DWORD PTR [edx]
  41bb9e:	test   DWORD PTR [ecx],esi
  41bba0:	stos   DWORD PTR es:[edi],eax
  41bba1:	iret   
  41bba2:	mov    eax,ds:0xe6a63ab8
  41bba7:	data16 jns 0x41bb33
  41bbaa:	stc    
  41bbab:	lahf   
  41bbac:	push   eax
  41bbad:	ins    BYTE PTR es:[edi],dx
  41bbae:	call   0xebef1cf0
  41bbb3:	sti    
  41bbb4:	push   es
  41bbb5:	xor    BYTE PTR [edx-0xc96024],dh
  41bbbb:	xchg   ecx,eax
  41bbbc:	idiv   DWORD PTR [ecx+0x61]
  41bbbf:	sbb    dh,BYTE PTR [ebx+0x4]
  41bbc2:	push   edx
  41bbc3:	fdivr  QWORD PTR ds:0x92a6ddfd
  41bbc9:	adc    bh,BYTE PTR [ecx]
  41bbcb:	call   DWORD PTR [ebp+eax*4-0x5d]
  41bbcf:	and    al,0x95
  41bbd1:	push   ds
  41bbd2:	bound  ebp,QWORD PTR [edi]
  41bbd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbd5:	mov    esi,0x2109f422
  41bbda:	xor    ecx,edx
  41bbdc:	loope  0x41bb8b
  41bbde:	jae    0x41bbab
  41bbe0:	jmp    0x16ae:0x825cd74c
  41bbe7:	outs   dx,BYTE PTR ds:[esi]
  41bbe8:	fld    QWORD PTR [ebx+0x19]
  41bbeb:	xor    al,0x6
  41bbed:	js     0x41bbd5
  41bbef:	xchg   ebp,eax
  41bbf0:	aaa    
  41bbf1:	and    bh,BYTE PTR [ebx]
  41bbf3:	test   DWORD PTR [eax-0x1e],esp
  41bbf6:	jbe    0x41bc61
  41bbf8:	mov    ebx,0x23280bbd
  41bbfd:	mov    bh,0xb8
  41bbff:	adc    cl,bh
  41bc01:	sub    DWORD PTR [eax-0xe],ebp
  41bc04:	dec    ebp
  41bc05:	not    DWORD PTR ds:0x8a435024
  41bc0b:	call   0x7744:0x53fcd9e8
  41bc12:	push   ecx
  41bc13:	or     ch,al
  41bc15:	shl    DWORD PTR [ebx],1
  41bc17:	inc    ebp
  41bc18:	mov    esi,?
  41bc1a:	and    BYTE PTR [eax-0x3],0x21
  41bc1e:	arpl   dx,di
  41bc20:	mov    ebx,0xbd44c87e
  41bc25:	add    eax,0xba545552
  41bc2a:	dec    edx
  41bc2b:	ret    
  41bc2c:	pop    esp
  41bc2d:	add    eax,DWORD PTR [esi]
  41bc2f:	fcmovu st,st(3)
  41bc31:	lahf   
  41bc32:	jne    0x41bc3c
  41bc34:	scas   al,BYTE PTR es:[edi]
  41bc35:	loop   0x41bc06
  41bc37:	inc    ecx
  41bc38:	int3   
  41bc39:	lods   eax,DWORD PTR ds:[esi]
  41bc3a:	cli    
  41bc3b:	ror    BYTE PTR [eax],0xc3
  41bc3e:	test   ch,dh
  41bc40:	popa   
  41bc41:	stc    
  41bc42:	pushf  
  41bc43:	int    0x5c
  41bc45:	xor    BYTE PTR [ecx-0x72],ch
  41bc48:	aad    0xdc
  41bc4a:	pop    esi
  41bc4b:	sub    al,0x29
  41bc4d:	inc    esp
  41bc4e:	add    DWORD PTR [edi+0x141761af],0xffffff80
  41bc55:	iret   
  41bc56:	xor    DWORD PTR [eax-0x5da42bcc],0xfffffff9
  41bc5d:	fisub  WORD PTR [ebx]
  41bc5f:	retf   0x3eef
  41bc62:	rcr    DWORD PTR [ebx+0x58],0x4b
  41bc66:	push   cs
  41bc67:	jmp    0x41bc82
  41bc69:	call   0x27c8b966
  41bc6e:	icebp  
  41bc6f:	rcr    DWORD PTR [edx],cl
  41bc71:	sbb    BYTE PTR [edi-0x6],dh
  41bc74:	(bad)  
  41bc75:	repz pushw cs
  41bc78:	aas    
  41bc79:	and    ebp,DWORD PTR [eax+0x3cd8cc14]
  41bc7f:	test   cl,bh
  41bc81:	data16 ins BYTE PTR es:[edi],dx
  41bc83:	mov    edx,0x2effef48
  41bc88:	ror    DWORD PTR [eax],0x8c
  41bc8b:	jmp    0x41bcf2
  41bc8d:	push   es
  41bc8e:	and    bh,BYTE PTR [ebx+0x7f98e057]
  41bc94:	test   BYTE PTR ds:0xaa5939e,0x5c
  41bc9b:	mov    BYTE PTR [esi+0x6c6aa3c3],dh
  41bca1:	adc    BYTE PTR [edx+0x64c27f7f],bh
  41bca7:	out    0x36,eax
  41bca9:	cmp    DWORD PTR [ebp+0x44],ebx
  41bcac:	sub    eax,0x85843ff1
  41bcb1:	xchg   BYTE PTR [esp+edx*4+0x362060b4],bh
  41bcb8:	sbb    BYTE PTR [edi+ebp*4],ah
  41bcbb:	(bad)  
  41bcbc:	in     al,0x4f
  41bcbe:	xor    eax,DWORD PTR [edx-0x68a8e614]
  41bcc4:	sub    al,0x34
  41bcc6:	aas    
  41bcc7:	retf   
  41bcc8:	or     DWORD PTR [edi],0xf7c660df
  41bcce:	pminub mm1,QWORD PTR [ebx-0x5da75626]
  41bcd5:	scas   al,BYTE PTR es:[edi]
  41bcd6:	aas    
  41bcd7:	(bad)  
  41bcd8:	push   esp
  41bcd9:	maskmovq mm6,(bad)
  41bcda:	div    DWORD PTR [ebx-0x2b]
  41bcdd:	mov    esp,0x29f110fb
  41bce2:	add    ch,ah
  41bce4:	ror    esp,0x7f
  41bce7:	or     ecx,DWORD PTR [edx-0x2e09bf0e]
  41bced:	data16 es (bad) 
  41bcf0:	mov    eax,0x42b39bb5
  41bcf5:	inc    eax
  41bcf6:	shl    DWORD PTR [esi+esi*1+0x4cc8ff39],cl
  41bcfd:	nop
  41bcfe:	in     al,0x22
  41bd00:	push   ss
  41bd01:	push   edx
  41bd02:	stos   DWORD PTR es:[edi],eax
  41bd03:	dec    esp
  41bd04:	mov    al,0xb4
  41bd06:	ja     0x41bcd8
  41bd08:	mov    bh,0xc4
  41bd0a:	stc    
  41bd0b:	add    DWORD PTR [eax+ebx*8-0x6a],ebp
  41bd0f:	pcmpgtb mm1,QWORD PTR [ebp+0x7e]
  41bd13:	mov    dh,0x58
  41bd15:	mov    eax,0xb02c4408
  41bd1a:	and    BYTE PTR [esi+0xd],ah
  41bd1d:	add    al,0xea
  41bd1f:	sub    ah,al
  41bd21:	jg     0x41bcd5
  41bd23:	or     al,0xfb
  41bd25:	(bad)  
  41bd26:	cmp    ebp,DWORD PTR [esi]
  41bd28:	stos   BYTE PTR es:[edi],al
  41bd29:	inc    edx
  41bd2a:	add    al,0xd
  41bd2c:	in     al,0xf3
  41bd2e:	mov    ch,0x5f
  41bd30:	nop
  41bd31:	cmp    ebx,DWORD PTR [edx-0x7d551dfb]
  41bd37:	dec    eax
  41bd38:	ror    eax,1
  41bd3a:	pop    es
  41bd3b:	jle    0x41bd03
  41bd3d:	and    BYTE PTR [ebp+esi*2+0x7c69f027],dh
  41bd44:	inc    eax
  41bd45:	adc    BYTE PTR [edi+0xe],bl
  41bd48:	xor    bl,BYTE PTR [ecx]
  41bd4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd4b:	bound  eax,QWORD PTR [ecx]
  41bd4d:	pop    edx
  41bd4e:	ss jns 0x41bd72
  41bd51:	leave  
  41bd52:	inc    ebx
  41bd53:	ror    BYTE PTR [ecx-0x68df1442],0x7
  41bd5a:	xchg   esp,eax
  41bd5b:	jmp    0x41bd54
  41bd5d:	jns    0x41bd8f
  41bd5f:	loope  0x41bd25
  41bd61:	out    dx,al
  41bd62:	jmp    0x172660c6
  41bd67:	or     eax,0x85866b30
  41bd6c:	jae    0x41bda1
  41bd6e:	loop   0x41bd72
  41bd70:	jo     0x41bdcf
  41bd72:	addr16 mov al,ds:0xa60b
  41bd76:	or     edx,DWORD PTR [esi]
  41bd78:	js     0x41bde6
  41bd7a:	xor    ah,cl
  41bd7c:	pop    ebp
  41bd7d:	in     eax,dx
  41bd7e:	and    eax,0x6a3ab1f3
  41bd83:	jbe    0x41bdbc
  41bd85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd86:	mov    dh,0x84
  41bd88:	xlat   BYTE PTR ds:[ebx]
  41bd89:	pusha  
  41bd8a:	xchg   ebp,eax
  41bd8b:	cmp    ebp,DWORD PTR [eax]
  41bd8d:	test   DWORD PTR [edi+0x34],esp
  41bd90:	popf   
  41bd91:	adc    eax,0x5b34a7ab
  41bd96:	adc    edx,DWORD PTR [edx]
  41bd98:	sub    BYTE PTR [edx+0x70ceaff],bl
  41bd9e:	(bad)  [edx]
  41bda0:	cmp    BYTE PTR ds:0x60338f00,dl
  41bda6:	les    ebx,FWORD PTR [esi+0x2562a67b]
  41bdac:	test   BYTE PTR [eax+eax*2-0x25],dh
  41bdb0:	or     DWORD PTR [eax],esp
  41bdb2:	xlat   BYTE PTR ds:[ebx]
  41bdb3:	ret    0x4979
  41bdb6:	(bad)  
  41bdb7:	scas   eax,DWORD PTR es:[edi]
  41bdb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdb9:	xchg   esp,eax
  41bdba:	push   es
  41bdbb:	or     DWORD PTR [edx*1+0x388060cb],esp
  41bdc2:	sbb    eax,0x87c60fd0
  41bdc7:	mov    al,ds:0x715148d5
  41bdcc:	sub    DWORD PTR [edi-0x4e2ad675],ecx
  41bdd2:	or     DWORD PTR [esi+0x21a0d5d9],ebx
  41bdd8:	sub    eax,0xab45aa8
  41bddd:	or     eax,0x2acf6efb
  41bde2:	out    dx,eax
  41bde3:	imul   DWORD PTR [ebx]
  41bde5:	dec    edx
  41bde6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bde7:	jno    0x41bd9b
  41bde9:	dec    ecx
  41bdea:	pop    ecx
  41bdeb:	cmp    eax,0x511dd63d
  41bdf0:	jg     0x41bdef
  41bdf2:	iret   
  41bdf3:	sub    eax,DWORD PTR [esi-0x55]
  41bdf6:	mov    eax,ds:0x4dcf07b6
  41bdfb:	mov    esi,0x3c6b076
  41be00:	push   edi
  41be01:	in     eax,dx
  41be02:	xor    al,0xc0
  41be04:	jl     0x41bde7
  41be06:	out    dx,eax
  41be07:	pop    edi
  41be08:	inc    ebp
  41be09:	push   ebx
  41be0a:	push   edi
  41be0b:	xor    BYTE PTR [edi+edx*4],bl
  41be0e:	and    esi,DWORD PTR [edi+esi*1-0x60f8c6ad]
  41be15:	aas    
  41be16:	cwde   
  41be17:	mov    cl,0x9a
  41be19:	fdiv   DWORD PTR [ebp+ebx*2+0x699f3921]
  41be20:	sbb    DWORD PTR [eax],ebx
  41be22:	inc    edi
  41be23:	rcl    esi,1
  41be25:	imul   edi,DWORD PTR [ebp-0x46b6a3e5],0xe54a79dc
  41be2f:	shr    dl,1
  41be31:	xchg   ebx,eax
  41be32:	jmp    0x4486:0x31ed8b56
  41be39:	jp     0x41beb1
  41be3b:	mov    ebx,0xbb98dff6
  41be40:	or     edx,DWORD PTR [ebp+edi*4-0x6030723d]
  41be47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be48:	stos   BYTE PTR es:[edi],al
  41be49:	cdq    
  41be4a:	or     BYTE PTR [ebx-0x7df1730b],dl
  41be50:	es mov esi,0x8962a2bb
  41be56:	fmul   DWORD PTR [edx+0xd61d757]
  41be5c:	lahf   
  41be5d:	(bad)  
  41be5f:	push   ds
  41be60:	jb     0x41be82
  41be62:	cmp    bh,BYTE PTR [eax+0x20]
  41be65:	and    al,0xdb
  41be67:	jbe    0x41bdef
  41be69:	pop    ebp
  41be6a:	(bad)  
  41be6b:	cdq    
  41be6c:	daa    
  41be6d:	pop    edi
  41be6e:	mov    ebx,0xcb32e867
  41be73:	dec    edx
  41be74:	or     eax,0xf6d6ccb6
  41be79:	xchg   BYTE PTR [ecx],bh
  41be7b:	inc    ebp
  41be7c:	imul   edi,eax,0x81787b95
  41be82:	pop    eax
  41be83:	rcr    BYTE PTR [ebx+0x5f5e4f08],1
  41be89:	adc    eax,DWORD PTR [eax]
  41be8b:	imul   ebx,DWORD PTR [eax-0x67fc62a3],0xb9c5a6de
  41be95:	(bad)  
  41be97:	xchg   ebp,eax
  41be98:	lea    esi,[edi]
  41be9a:	test   bh,dh
  41be9c:	mov    BYTE PTR [ebx-0x73a729d1],dh
  41bea2:	push   edx
  41bea3:	mov    ah,0xbd
  41bea5:	std    
  41bea6:	add    al,0x86
  41bea8:	sbb    BYTE PTR [edx],ch
  41beaa:	jns    0x41bef6
  41beac:	dec    ebx
  41bead:	ret    
  41beae:	pop    ebx
  41beaf:	add    al,ch
  41beb1:	dec    ebp
  41beb2:	add    eax,0xa055c9f2
  41beb7:	cs cld 
  41beb9:	out    0x92,al
  41bebb:	(bad)  
  41bebc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bebd:	push   cs
  41bebe:	mov    eax,0x98f4fd53
  41bec3:	and    al,0x94
  41bec5:	mov    dh,0x9
  41bec7:	xor    BYTE PTR ds:0xe74b3b83,dh
  41becd:	pop    ebx
  41bece:	and    bh,bh
  41bed0:	and    edx,DWORD PTR [ebx-0x2bfcd2b6]
  41bed6:	in     eax,dx
  41bed7:	pop    ebx
  41bed8:	(bad)  
  41bed9:	arpl   WORD PTR [eax-0x4c353dd6],bx
  41bedf:	pushf  
  41bee0:	xchg   ecx,eax
  41bee1:	pop    esi
  41bee2:	pcmpeqb mm6,QWORD PTR [ebx-0xe]
  41bee6:	pop    esi
  41bee7:	icebp  
  41bee8:	inc    ebx
  41bee9:	inc    ebx
  41beea:	in     eax,dx
  41beeb:	sbb    BYTE PTR [ecx],cl
  41beed:	mov    esp,0x568dab69
  41bef2:	dec    dl
  41bef4:	lahf   
  41bef5:	cmp    cl,dl
  41bef7:	and    eax,0x47fb2c7b
  41befc:	fwait
  41befd:	cdq    
  41befe:	or     esi,DWORD PTR [ebx-0x7]
  41bf01:	in     eax,dx
  41bf02:	je     0x41befe
  41bf04:	jle    0x41be87
  41bf06:	adc    bl,BYTE PTR [esi+0x3d]
  41bf09:	out    0xeb,al
  41bf0b:	or     DWORD PTR [edx],0xffffff90
  41bf0e:	or     ebx,DWORD PTR ds:0x779adb18
  41bf14:	xor    dl,BYTE PTR [ecx-0x2e22f2a3]
  41bf1a:	push   edi
  41bf1b:	in     al,dx
  41bf1c:	pop    bp
  41bf1e:	jle    0x41bf8d
  41bf20:	xor    bl,ch
  41bf22:	or     al,0x93
  41bf24:	jg     0x41bebc
  41bf26:	sbb    eax,0x1cd1f347
  41bf2b:	inc    esi
  41bf2c:	mov    ah,0x83
  41bf2e:	addr16 (bad) 
  41bf30:	xor    BYTE PTR [esi-0x14],al
  41bf33:	je     0x41bf11
  41bf35:	(bad)  
  41bf36:	mov    ch,0x7f
  41bf38:	daa    
  41bf39:	dec    edi
  41bf3a:	mov    DWORD PTR [edi],edx
  41bf3c:	mov    eax,0x9e755567
  41bf41:	or     eax,0x25e707cc
  41bf46:	add    edi,0xfffffffb
  41bf49:	aas    
  41bf4a:	dec    ebp
  41bf4b:	dec    ebx
  41bf4c:	repnz push 0x5f57a962
  41bf52:	push   0xffffffb5
  41bf54:	lods   al,BYTE PTR ds:[esi]
  41bf55:	dec    edi
  41bf56:	inc    BYTE PTR [edi-0x2a]
  41bf59:	dec    edx
  41bf5a:	repnz mov esp,0x4ac57654
  41bf60:	push   edi
  41bf61:	adc    eax,DWORD PTR [edi]
  41bf63:	hlt    
  41bf64:	(bad)  
  41bf65:	out    0xb,eax
  41bf67:	sub    edx,edx
  41bf69:	(bad)  
  41bf6b:	das    
  41bf6c:	sbb    DWORD PTR [edx],edi
  41bf6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf6f:	leave  
  41bf70:	xor    esi,DWORD PTR ds:0x8f24bd85
  41bf77:	ins    BYTE PTR es:[edi],dx
  41bf78:	dec    ebp
  41bf79:	push   es
  41bf7a:	jb     0x41bf82
  41bf7c:	retf   0xcf1f
  41bf7f:	test   eax,0x5caf37e9
  41bf84:	enter  0x55a9,0xa2
  41bf88:	push   ecx
  41bf89:	jmp    0x41bf2f
  41bf8b:	leave  
  41bf8c:	loopne 0x41bf9e
  41bf8e:	js     0x41c007
  41bf90:	sbb    ah,ah
  41bf92:	mov    esi,0x9ca5549c
  41bf97:	(bad)  [edx+ebx*4+0xd]
  41bf9b:	adc    BYTE PTR [edi],ah
  41bf9d:	pushf  
  41bf9e:	xchg   esi,eax
  41bf9f:	test   al,0x6c
  41bfa1:	mov    al,0xe2
  41bfa3:	xchg   bl,al
  41bfa5:	mov    al,0x75
  41bfa7:	fldenv [eax]
  41bfa9:	in     eax,0x5d
  41bfab:	adc    al,0x7
  41bfad:	inc    esp
  41bfae:	add    eax,0xf64c1429
  41bfb3:	cmp    al,0xd1
  41bfb5:	loop   0x41bf3a
  41bfb7:	pop    edx
  41bfb8:	movaps XMMWORD PTR [edx],xmm1
  41bfbb:	test   DWORD PTR [edx+0xc],eax
  41bfbe:	mov    edx,DWORD PTR ds:0xeb21bdf2
  41bfc4:	or     BYTE PTR [eax+0x2fdcc958],bl
  41bfca:	in     eax,dx
  41bfcb:	test   BYTE PTR [eax],dl
  41bfcd:	das    
  41bfce:	sub    eax,0xfff58436
  41bfd3:	add    DWORD PTR [eax-0x53611a0b],ebp
  41bfd9:	or     ebp,DWORD PTR [edx]
  41bfdb:	mov    BYTE PTR ds:0x73cb3009,bh
  41bfe1:	adc    edi,DWORD PTR [ecx]
  41bfe3:	js     0x41c062
  41bfe5:	sub    BYTE PTR [esi+0x54e3b37c],bh
  41bfeb:	inc    edi
  41bfec:	sar    DWORD PTR [edx],cl
  41bfee:	jecxz  0x41bf90
  41bff0:	or     eax,0x79027761
  41bff5:	aaa    
  41bff6:	imul   ebp,DWORD PTR [edi+edi*1],0x30
  41bffa:	clc    
  41bffb:	clc    
  41bffc:	push   esi
  41bffd:	cs mov ebp,0xffd5fa64
  41c003:	add    al,0x84
  41c005:	loopne 0x41c02f
  41c007:	aam    0x63
  41c009:	xor    al,0x33
  41c00b:	(bad)  
  41c00d:	int3   
  41c00e:	cmp    al,0xd2
  41c010:	jp     0x41bff7
  41c012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c013:	sub    eax,0xee66266b
  41c018:	jecxz  0x41c045
  41c01a:	xor    ebp,DWORD PTR [ecx]
  41c01c:	adc    eax,0xf9398f79
  41c021:	inc    edx
  41c022:	or     esi,DWORD PTR [ebp-0x6d]
  41c025:	rcr    DWORD PTR [edx],0xb3
  41c028:	xchg   DWORD PTR [ecx],ecx
  41c02a:	and    BYTE PTR [ebp+0x10e1100d],dh
  41c030:	jg     0x41c074
  41c032:	jle    0x41bfd6
  41c034:	arpl   WORD PTR [ecx],bp
  41c036:	add    ecx,DWORD PTR [edx+0x1ab37373]
  41c03c:	fiadd  DWORD PTR [eax-0x6f]
  41c03f:	jae    0x41bfd2
  41c041:	shl    dh,0x5e
  41c044:	maxps  xmm1,xmm4
  41c047:	push   esp
  41c048:	xor    ah,BYTE PTR [ebp+eiz*1+0x7]
  41c04c:	sub    al,0x39
  41c04e:	cld    
  41c04f:	and    DWORD PTR [edi],eax
  41c051:	(bad)  
  41c052:	mov    al,0x80
  41c054:	icebp  
  41c055:	repz xlat BYTE PTR ds:[ebx]
  41c057:	dec    edi
  41c058:	mov    esi,DWORD PTR [eax-0x35]
  41c05b:	add    DWORD PTR [ebp+0x4b],esp
  41c05e:	sub    al,0x25
  41c060:	test   al,0xc4
  41c062:	neg    DWORD PTR [eax]
  41c064:	jo     0x41c04f
  41c066:	cmp    cl,al
  41c068:	add    DWORD PTR [esi+0x6f18de5b],esi
  41c06e:	xor    DWORD PTR [ecx+ebx*2],edi
  41c071:	jnp    0x41c096
  41c073:	mov    dh,0x81
  41c075:	mov    cl,0xe0
  41c077:	add    DWORD PTR [edx+edi*4+0x50a80ab2],eax
  41c07e:	bnd jmp 0x41c0ff
  41c081:	sbb    eax,DWORD PTR [edx-0x3d]
  41c084:	int3   
  41c085:	cmp    bl,bl
  41c087:	repz sbb edi,DWORD PTR [edi+0x63c67056]
  41c08e:	in     al,dx
  41c08f:	cmc    
  41c090:	pop    es
  41c091:	push   esi
  41c092:	(bad)  
  41c093:	out    0x23,al
  41c095:	repnz push es
  41c097:	es mov dl,0x8
  41c09a:	xor    al,0x7e
  41c09c:	jns    0x41c0ca
  41c09e:	cmc    
  41c09f:	inc    esp
  41c0a0:	pop    eax
  41c0a1:	cmp    al,0xa2
  41c0a3:	pop    ss
  41c0a4:	sbb    al,0xb8
  41c0a6:	mov    ch,BYTE PTR [esi+0xc]
  41c0a9:	sbb    BYTE PTR [ebx],0x4a
  41c0ac:	pop    ss
  41c0ad:	jmp    0x41c0ff
  41c0af:	or     DWORD PTR [edi+ebp*1+0x12],esi
  41c0b3:	aas    
  41c0b4:	aam    0x5c
  41c0b6:	stos   BYTE PTR es:[edi],al
  41c0b7:	enter  0x59a7,0xd3
  41c0bb:	mul    ch
  41c0bd:	and    ch,BYTE PTR [esi+0x72d88af8]
  41c0c3:	mov    ds:0x3474b20e,al
  41c0c8:	dec    esp
  41c0c9:	addr16 cs inc ebp
  41c0cc:	jnp    0x41c053
  41c0ce:	test   DWORD PTR [edi],esp
  41c0d0:	dec    eax
  41c0d1:	das    
  41c0d2:	inc    edi
  41c0d3:	push   eax
  41c0d4:	inc    ebp
  41c0d5:	xor    edi,DWORD PTR [ecx]
  41c0d7:	pop    ds
  41c0d8:	xor    DWORD PTR [eax],esp
  41c0da:	fwait
  41c0db:	bound  edi,QWORD PTR [edi]
  41c0dd:	pop    ds
  41c0de:	or     eax,0x4e1dec5
  41c0e3:	arpl   bx,bp
  41c0e5:	mov    ebp,0x3456e849
  41c0ea:	mov    ah,0x95
  41c0ec:	pop    esi
  41c0ed:	mov    cl,0x74
  41c0ef:	clc    
  41c0f0:	(bad)  
  41c0f1:	mov    bl,0xe3
  41c0f3:	popa   
  41c0f4:	fild   DWORD PTR [esp+ebx*8]
  41c0f7:	aam    0x8d
  41c0f9:	sbb    ecx,DWORD PTR [ebx]
  41c0fb:	lahf   
  41c0fc:	mov    esi,0x74903b0
  41c101:	(bad)  
  41c102:	das    
  41c103:	add    DWORD PTR [ebx-0x2c22e95],eax
  41c109:	dec    esp
  41c10a:	or     cl,BYTE PTR [ecx-0x4602fb19]
  41c110:	ins    BYTE PTR es:[edi],dx
  41c111:	mov    edx,0xb2c67f58
  41c116:	mov    esp,0xe5fd759b
  41c11b:	xchg   ebx,eax
  41c11c:	cmp    eax,0xe25c7f7a
  41c121:	loopne 0x41c172
  41c123:	(bad)  [eax+edi*1+0x6a]
  41c127:	out    dx,al
  41c128:	mov    eax,ds:0x5ee07f9d
  41c12d:	pop    ebp
  41c12e:	mov    cl,dl
  41c130:	mov    bl,0xc5
  41c132:	push   cs
  41c133:	inc    ecx
  41c134:	dec    ebp
  41c135:	cmp    BYTE PTR [ecx-0x22f63a18],0x3a
  41c13c:	sbb    eax,0xa0646a16
  41c141:	adc    bh,ah
  41c143:	or     al,0xb4
  41c145:	mov    esp,0x1af101bd
  41c14a:	mov    al,0x3f
  41c14c:	jecxz  0x41c110
  41c14e:	stos   BYTE PTR es:[edi],al
  41c14f:	pop    ebx
  41c150:	mov    bl,0x69
  41c152:	fstp   QWORD PTR [eax+ebp*8]
  41c155:	xchg   ebp,ebx
  41c157:	push   esp
  41c158:	mov    al,0x92
  41c15a:	push   esp
  41c15b:	pop    ebp
  41c15c:	jo     0x41c1d0
  41c15e:	mov    eax,ds:0x1148c883
  41c163:	inc    ebx
  41c164:	shrd   DWORD PTR [ecx+ecx*1+0x4f],ebx,0x65
  41c16a:	neg    ebx
  41c16c:	add    ch,BYTE PTR [edx]
  41c16e:	xchg   al,bl
  41c170:	das    
  41c171:	pop    es
  41c172:	push   ecx
  41c173:	pop    ebx
  41c174:	imul   esi,DWORD PTR [esi+eiz*8-0x51],0xfffffff3
  41c179:	dec    edi
  41c17a:	repz mov WORD PTR [eax-0x72661bb3],es
  41c181:	mov    DWORD PTR [ebp+0x24b5cfd6],esi
  41c187:	xchg   esp,eax
  41c189:	dec    ecx
  41c18a:	push   0xffffffd9
  41c18c:	xchg   BYTE PTR [eax+ebx*2-0x64],cl
  41c190:	pop    es
  41c191:	pop    esp
  41c192:	fnstcw WORD PTR [edi+eiz*2+0x19f9288a]
  41c199:	mov    eax,ds:0x9a3f2cf1
  41c19e:	and    al,0xb8
  41c1a0:	xor    eax,edx
  41c1a2:	dec    esi
  41c1a3:	stos   DWORD PTR es:[edi],eax
  41c1a4:	inc    eax
  41c1a5:	test   BYTE PTR [ebx],bl
  41c1a7:	xor    eax,0x37a6724f
  41c1ac:	or     DWORD PTR [ecx+0xe],ecx
  41c1af:	mov    edi,0x27e529ab
  41c1b4:	ret    0xa415
  41c1b7:	xchg   ecx,eax
  41c1b8:	xor    DWORD PTR [ebx+edi*4],0xc3d571b1
  41c1bf:	psadbw mm3,QWORD PTR [esi+ecx*8+0x47]
  41c1c4:	icebp  
  41c1c5:	and    al,0x16
  41c1c7:	pushf  
  41c1c8:	pop    esp
  41c1c9:	bound  ecx,QWORD PTR ds:[esi-0x55d83a32]
  41c1d0:	cmp    eax,DWORD PTR [esi]
  41c1d2:	adc    eax,0x401eb3f9
  41c1d7:	mov    bh,0x42
  41c1d9:	push   0xcc6f9572
  41c1de:	mov    ebp,0x9c1610ee
  41c1e3:	add    al,0xa0
  41c1e5:	data16 mov al,0xe7
  41c1e8:	xlat   BYTE PTR ds:[ebx]
  41c1e9:	push   ds
  41c1ea:	inc    ebx
  41c1eb:	mov    bh,0x6d
  41c1ed:	ds clc 
  41c1ef:	ja     0x41c176
  41c1f1:	stc    
  41c1f2:	lock dec ebp
  41c1f4:	push   ss
  41c1f5:	dec    ebp
  41c1f6:	int3   
  41c1f7:	int    0xd3
  41c1f9:	adc    al,0x24
  41c1fb:	repz int3 
  41c1fd:	and    eax,0xbb060dd1
  41c202:	xor    al,0x6
  41c204:	mov    edi,0x4c53d7e9
  41c209:	repnz dec edi
  41c20b:	les    edx,FWORD PTR [esi]
  41c20d:	and    bh,ah
  41c20f:	jecxz  0x41c269
  41c211:	stos   DWORD PTR es:[edi],eax
  41c212:	fidivr WORD PTR [ebx+0x73]
  41c215:	adc    al,0xe0
  41c217:	enter  0xa882,0xf9
  41c21b:	jne    0x41c23e
  41c21d:	mov    cl,BYTE PTR [esi+0x7ec8d90b]
  41c223:	add    eax,edx
  41c225:	std    
  41c226:	mov    dh,BYTE PTR [ecx+0x17]
  41c229:	add    BYTE PTR [eax+0x5d4c63fe],bl
  41c22f:	push   esi
  41c230:	mov    al,ds:0x7a8293d2
  41c235:	sbb    BYTE PTR es:[edi+esi*2],al
  41c239:	and    BYTE PTR [edx-0x27],bh
  41c23c:	in     al,dx
  41c23d:	push   ebp
  41c23e:	xor    DWORD PTR [ecx+0x4249cc87],0xb
  41c245:	pushf  
  41c246:	mov    ds,WORD PTR [ecx-0x5bb4088d]
  41c24c:	loope  0x41c276
  41c24e:	int3   
  41c24f:	pop    ss
  41c250:	xor    eax,0xbaa47a99
  41c255:	add    edx,edx
  41c257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c258:	sar    BYTE PTR [edx+0x7c],cl
  41c25b:	dec    ebx
  41c25c:	sub    bl,BYTE PTR [ebx-0x7e]
  41c25f:	mov    edx,0x568df931
  41c264:	out    dx,al
  41c265:	std    
  41c266:	imul   eax,DWORD PTR [edi],0x5f
  41c269:	sahf   
  41c26a:	vpunpckhdq ymm6,ymm2,YMMWORD PTR [ebx-0x2]
  41c26f:	in     eax,0x5
  41c271:	push   ds
  41c272:	jnp    0x41c2e4
  41c274:	lods   eax,DWORD PTR ds:[esi]
  41c275:	and    al,0x9b
  41c277:	cdq    
  41c278:	push   esp
  41c279:	mov    dl,0x27
  41c27b:	in     eax,0x27
  41c27d:	add    dl,cl
  41c27f:	mov    ?,WORD PTR [eax-0x2f]
  41c282:	sbb    al,0x68
  41c284:	scas   eax,DWORD PTR es:[edi]
  41c285:	dec    eax
  41c286:	into   
  41c287:	jo     0x41c2ea
  41c289:	fwait
  41c28a:	sub    eax,0xcfdc3350
  41c28f:	xor    cl,ch
  41c291:	or     esi,DWORD PTR [ecx-0x49b1dae1]
  41c297:	sar    BYTE PTR [ebp-0x28de48ff],cl
  41c29d:	push   esp
  41c29e:	jp     0x41c2e4
  41c2a0:	dec    edx
  41c2a1:	add    eax,0x391fc098
  41c2a6:	sbb    cl,BYTE PTR [esi]
  41c2a8:	mov    ebx,0x5695bfff
  41c2ad:	into   
  41c2ae:	sbb    eax,0x1b5f1d8
  41c2b3:	jge    0x41c291
  41c2b5:	or     DWORD PTR [esi+0x42],ecx
  41c2b8:	inc    esp
  41c2b9:	xchg   ecx,eax
  41c2ba:	(bad)  
  41c2bb:	call   0x790538c6
  41c2c0:	fiadd  WORD PTR [edi+0x6226fad8]
  41c2c6:	push   ss
  41c2c7:	jno    0x41c337
  41c2c9:	shr    DWORD PTR [ecx-0x3585643f],cl
  41c2cf:	push   edi
  41c2d0:	fdivr  DWORD PTR [esi-0x5707ae45]
  41c2d6:	dec    ebp
  41c2d7:	test   eax,0x55a07286
  41c2dc:	in     al,dx
  41c2dd:	xor    BYTE PTR [edx],dl
  41c2df:	jnp    0x41c2c1
  41c2e1:	or     BYTE PTR [ebx-0x45],cl
  41c2e4:	es inc eax
  41c2e6:	dec    edi
  41c2e7:	sub    eax,0xd4fc834c
  41c2ec:	xor    cl,BYTE PTR [ebx-0x41ae30c5]
  41c2f2:	mov    al,BYTE PTR [esi-0x7cc189bf]
  41c2f8:	sbb    esp,DWORD PTR [edi]
  41c2fa:	push   0xffffff8f
  41c2fc:	mov    WORD PTR [edx],es
  41c2fe:	mov    cl,0xe5
  41c300:	xchg   DWORD PTR [eax-0x5ba8b8dc],ebp
  41c306:	mov    cl,0x6d
  41c308:	jno    0x41c348
  41c30a:	hlt    
  41c30b:	ja     0x41c2fc
  41c30d:	mov    ?,WORD PTR [edi+0x50cca8d5]
  41c313:	sub    BYTE PTR [esi+0x562897d5],cl
  41c319:	xor    ch,BYTE PTR [edi-0x3b]
  41c31c:	mov    ecx,0x985d7f1f
  41c321:	or     bh,BYTE PTR [esp+ebp*1+0x51]
  41c325:	les    edi,FWORD PTR [eax]
  41c327:	mov    DWORD PTR [edi+0x37b111bc],edx
  41c32d:	pop    edi
  41c32e:	dec    edi
  41c32f:	stc    
  41c330:	or     ebx,DWORD PTR [edx+0x7911ab7]
  41c336:	and    dl,BYTE PTR [ecx]
  41c338:	dec    edi
  41c339:	fadd   DWORD PTR [ecx+edx*8]
  41c33c:	(bad)  
  41c33d:	sub    al,0x9a
  41c33f:	test   al,0xc1
  41c341:	or     eax,0xa73e1447
  41c346:	shr    dl,1
  41c348:	(bad)  
  41c349:	sbb    eax,0x563d0f4c
  41c34e:	push   ebx
  41c34f:	rcl    BYTE PTR [ecx+eiz*4-0x69c7eda0],0x6b
  41c357:	je     0x41c2f4
  41c359:	nop
  41c35a:	cmp    DWORD PTR [edx-0x3c61fd37],ecx
  41c360:	mov    al,es:0x5d3f4046
  41c366:	scas   eax,DWORD PTR es:[edi]
  41c367:	xchg   ecx,eax
  41c368:	cmp    ebp,ebp
  41c36a:	out    dx,eax
  41c36b:	push   esi
  41c36c:	in     eax,dx
  41c36d:	or     DWORD PTR [ebx-0x399dde72],esi
  41c373:	ja     0x41c3b0
  41c375:	repz dec esp
  41c377:	xchg   esi,eax
  41c379:	enter  0xe2a1,0x9e
  41c37d:	xchg   esi,ecx
  41c37f:	mov    ch,0x39
  41c381:	pusha  
  41c382:	mov    ebx,0x2230227d
  41c387:	xchg   ebx,eax
  41c388:	xlat   BYTE PTR ds:[ebx]
  41c389:	pop    esi
  41c38a:	sub    eax,0x3827d366
  41c38f:	adc    cl,al
  41c391:	add    ch,BYTE PTR [esp+edi*2-0x219342e8]
  41c398:	ds in  eax,0x39
  41c39b:	add    eax,0xf43dc016
  41c3a0:	push   ds
  41c3a1:	xor    DWORD PTR [edi],ebx
  41c3a3:	jp     0x41c376
  41c3a5:	jmp    0xd6ec:0x5687b1fc
  41c3ac:	(bad)  
  41c3ad:	sbb    ah,BYTE PTR [ebx]
  41c3af:	test   al,0x1c
  41c3b1:	mov    DWORD PTR [ecx+edi*1],esi
  41c3b4:	jb     0x41c35f
  41c3b6:	in     al,0x3f
  41c3b8:	mov    bl,0xe4
  41c3ba:	push   es
  41c3bb:	(bad)  [ebp+0x7fdc8d9a]
  41c3c1:	ja     0x41c3fc
  41c3c3:	pop    edx
  41c3c4:	dec    esp
  41c3c5:	mov    esi,DWORD PTR [edx+0x769bea86]
  41c3cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3cc:	lahf   
  41c3cd:	repnz cwde 
  41c3cf:	enter  0xf1e6,0xc5
  41c3d3:	pop    ss
  41c3d4:	cli    
  41c3d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3d6:	lods   al,BYTE PTR ds:[esi]
  41c3d7:	jae    0x41c3e8
  41c3d9:	push   edx
  41c3da:	frstor [edi-0x55]
  41c3dd:	inc    edi
  41c3de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3df:	cmp    DWORD PTR [edi-0x22],edi
  41c3e2:	cli    
  41c3e3:	stos   BYTE PTR es:[edi],al
  41c3e4:	adc    al,0x5b
  41c3e6:	adc    al,0x78
  41c3e8:	(bad)  
  41c3e9:	lods   al,BYTE PTR ds:[esi]
  41c3ea:	push   ebx
  41c3eb:	xor    esi,esp
  41c3ed:	rcl    DWORD PTR [ecx-0x2d],cl
  41c3f0:	scas   eax,DWORD PTR es:[edi]
  41c3f1:	pop    ss
  41c3f2:	fdivr  DWORD PTR [edi-0x411ca067]
  41c3f8:	test   DWORD PTR [esi],eax
  41c3fa:	dec    edi
  41c3fb:	dec    edx
  41c3fc:	and    ah,BYTE PTR [edx+0x41]
  41c3ff:	inc    ebp
  41c400:	jbe    0x41c434
  41c402:	jp     0x41c434
  41c404:	jge    0x41c453
  41c406:	rcr    eax,0x8b
  41c409:	(bad)  
  41c40b:	(bad)  [esi-0x6a5cc08]
  41c411:	xor    eax,0x341be787
  41c416:	mov    bl,0xbf
  41c418:	icebp  
  41c419:	or     BYTE PTR [ecx],dh
  41c41b:	adc    bh,cl
  41c41d:	push   ecx
  41c41e:	pop    ebp
  41c41f:	mov    esp,0xb4080767
  41c424:	stc    
  41c425:	and    DWORD PTR [ecx],edi
  41c427:	out    0xc1,eax
  41c429:	push   es
  41c42a:	adc    eax,0xbbcce7
  41c42f:	fst    DWORD PTR [ebp+0x4cc7456b]
  41c435:	or     bl,al
  41c437:	xor    edx,DWORD PTR [edx]
  41c439:	out    dx,al
  41c43a:	jbe    0x41c456
  41c43c:	gs jle 0x41c470
  41c43f:	fwait
  41c440:	sub    esp,DWORD PTR [edi+edx*2-0x1e]
  41c444:	add    edi,DWORD PTR [edi]
  41c446:	or     BYTE PTR [eax-0x5],al
  41c449:	add    bl,BYTE PTR [ecx+0x50726fd3]
  41c44f:	adc    al,0xd6
  41c451:	jl     0x41c443
  41c453:	sahf   
  41c454:	fbstp  TBYTE PTR [ebp-0x1a2277a6]
  41c45a:	pop    ebx
  41c45b:	pop    ss
  41c45c:	dec    ebp
  41c45d:	std    
  41c45e:	test   BYTE PTR [bp+0x6b],0xaa
  41c463:	pop    edx
  41c464:	retf   0xff
  41c467:	inc    eax
  41c468:	(bad)  
  41c469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c46a:	adc    al,0xc3
  41c46c:	arpl   WORD PTR [ecx-0x1076f861],bp
  41c472:	mov    esi,0x8f5f3363
  41c477:	icebp  
  41c478:	shl    BYTE PTR [ecx],0x32
  41c47b:	and    bl,BYTE PTR [esi+0x54171e71]
  41c481:	lahf   
  41c482:	repnz fcos 
  41c485:	inc    ecx
  41c486:	or     ebp,DWORD PTR [edx+0x697aee69]
  41c48c:	dec    ecx
  41c48d:	mov    dl,0xab
  41c48f:	pop    ds
  41c490:	int    0x65
  41c492:	xchg   edi,eax
  41c493:	or     al,0x76
  41c495:	in     al,0x47
  41c497:	pop    es
  41c498:	push   esp
  41c499:	mov    eax,0xf424e8ab
  41c49e:	and    eax,0xfb1fbba5
  41c4a3:	push   eax
  41c4a4:	popf   
  41c4a5:	adc    BYTE PTR [eax],ch
  41c4a7:	jno    0x41c48e
  41c4a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4aa:	xchg   ebp,eax
  41c4ab:	fcomp  DWORD PTR [ebx]
  41c4ad:	push   edx
  41c4ae:	stos   DWORD PTR es:[edi],eax
  41c4af:	xchg   esp,eax
  41c4b0:	mov    ah,0x41
  41c4b2:	inc    ebx
  41c4b3:	mov    bh,0x6
  41c4b5:	jle    0x41c46f
  41c4b7:	test   DWORD PTR [edi+eiz*8-0x24cd3124],ebx
  41c4be:	lahf   
  41c4bf:	outs   dx,DWORD PTR ds:[esi]
  41c4c0:	cmc    
  41c4c1:	mov    ebx,0x1954b688
  41c4c6:	jo     0x41c486
  41c4c8:	mov    esi,0x37df42a
  41c4cd:	das    
  41c4ce:	leave  
  41c4cf:	pop    edx
  41c4d0:	jmp    0x5f61ec65
  41c4d5:	les    ebx,FWORD PTR [edx]
  41c4d7:	jae    0x41c497
  41c4d9:	mov    ebx,ecx
  41c4db:	cmp    al,0x1a
  41c4dd:	cmp    edx,DWORD PTR [edx+0xccb936c]
  41c4e3:	push   edx
  41c4e4:	sub    esp,eax
  41c4e6:	lods   eax,DWORD PTR ds:[esi]
  41c4e7:	mov    ?,WORD PTR [ebp-0x47]
  41c4ea:	stos   BYTE PTR es:[edi],al
  41c4eb:	fdivr  QWORD PTR [esi+0x7a]
  41c4ee:	sub    eax,0xa9a2652b
  41c4f3:	push   esi
  41c4f4:	cdq    
  41c4f5:	dec    ecx
  41c4f6:	int    0x6f
  41c4f8:	ss dec ebp
  41c4fa:	mov    ebx,0x3f53b748
  41c4ff:	repz iret 
  41c501:	mov    ch,0x2d
  41c503:	repz mov ds:0x53264a44,al
  41c509:	jg     0x41c50f
  41c50b:	mov    al,ds:0xfc1535a2
  41c510:	(bad)  
  41c511:	div    BYTE PTR [ecx]
  41c513:	lods   al,BYTE PTR ds:[esi]
  41c514:	xor    BYTE PTR [bp+si+0x54],bl
  41c518:	sbb    ebp,DWORD PTR [ecx+ecx*4+0x3f]
  41c51c:	push   0xda5d0868
  41c521:	cld    
  41c522:	or     bh,BYTE PTR [ebx-0x1e]
  41c525:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c526:	rcl    DWORD PTR [ecx-0x22d4abed],1
  41c52c:	(bad)  
  41c52d:	pop    esi
  41c52e:	mov    cl,0x6c
  41c530:	lods   eax,DWORD PTR ds:[esi]
  41c531:	inc    esi
  41c532:	or     BYTE PTR [eax],0xa0
  41c535:	iret   
  41c536:	adc    eax,0xc751295d
  41c53b:	jo     0x41c53d
  41c53d:	sub    ebp,ebx
  41c53f:	cmp    ebp,DWORD PTR [eax-0x51]
  41c542:	data16 imul BYTE PTR [ebp+0x7c]
  41c546:	sbb    al,0x56
  41c548:	push   es
  41c549:	jmp    0xb6d190f
  41c54e:	cld    
  41c54f:	push   eax
  41c550:	jb     0x41c4d5
  41c552:	out    dx,eax
  41c553:	in     al,dx
  41c554:	mov    eax,ds:0xf941d243
  41c559:	inc    ebx
  41c55a:	fninit 
  41c55c:	out    dx,al
  41c55d:	ret    0xcc08
  41c560:	dec    esp
  41c561:	aas    
  41c562:	lds    ebx,FWORD PTR [esi]
  41c564:	addr16 jg 0x41c4ec
  41c567:	or     BYTE PTR [ebx+0x22],0xfa
  41c56b:	jae    0x41c5cd
  41c56d:	ins    BYTE PTR es:[edi],dx
  41c56e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c56f:	sub    eax,0xabfe2ad2
  41c574:	or     BYTE PTR [esi],bl
  41c576:	jns    0x41c577
  41c578:	sub    BYTE PTR [esi+eax*4],0xc9
  41c57c:	dec    ebx
  41c57d:	and    DWORD PTR [edx],0x39
  41c580:	adc    eax,0x2da9b9ab
  41c585:	popa   
  41c586:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41c588:	add    eax,0x768fc373
  41c58d:	adc    ebx,DWORD PTR [eax-0x607d88a6]
  41c593:	das    
  41c594:	or     bh,BYTE PTR [ebx]
  41c596:	(bad)  
  41c597:	mov    esi,0x64e39328
  41c59c:	jb     0x41c58e
  41c59e:	stos   DWORD PTR es:[edi],eax
  41c59f:	jmp    0xaac6:0x52e84556
  41c5a6:	push   0xffffffbc
  41c5a8:	adc    eax,DWORD PTR [ebx]
  41c5aa:	cmp    eax,0x8e7e7251
  41c5af:	adc    DWORD PTR [edx],0x4d591c8d
  41c5b5:	mov    DWORD PTR [bx+di+0x3],0xd472417d
  41c5bd:	ins    BYTE PTR es:[edi],dx
  41c5be:	repz or ebx,ebx
  41c5c1:	push   cs
  41c5c2:	and    eax,0xd6f62397
  41c5c7:	jmp    0x7a5e2c10
  41c5cc:	push   es
  41c5cd:	add    ecx,DWORD PTR [eax]
  41c5cf:	mov    DWORD PTR [edx-0x4fa17de8],eax
  41c5d5:	test   eax,0x2c28d54e
  41c5da:	mov    dl,0x6b
  41c5dc:	push   0x79
  41c5de:	inc    ebp
  41c5df:	push   esp
  41c5e0:	(bad)  
  41c5e2:	popf   
  41c5e3:	aam    0x11
  41c5e5:	cdq    
  41c5e6:	bswap  ebx
  41c5e8:	fisub  WORD PTR [esi+ebp*1-0x54aab72b]
  41c5ef:	fisttp WORD PTR [edi+0x38e23382]
  41c5f5:	jl     0x41c5b9
  41c5f7:	mov    bh,0x92
  41c5f9:	jmp    0x41c61a
  41c5fb:	in     al,0xc6
  41c5fd:	lods   eax,DWORD PTR ds:[esi]
  41c5fe:	xor    al,0xed
  41c600:	push   0x31
  41c602:	and    al,0xfe
  41c604:	jmp    0x259813c3
  41c609:	mov    bl,0xa9
  41c60b:	les    edi,FWORD PTR [edx-0x53]
  41c60e:	cwde   
  41c60f:	push   0x7176ffaa
  41c614:	aad    0xb
  41c616:	inc    eax
  41c617:	fld    DWORD PTR [edi-0x72]
  41c61a:	jns    0x41c5de
  41c61c:	jecxz  0x41c5e7
  41c61e:	mov    ds:0xc70bbb63,al
  41c623:	inc    ebp
  41c624:	popw   ds
  41c626:	push   esi
  41c627:	iret   
  41c628:	pop    ebx
  41c629:	cld    
  41c62a:	jae    0x41c603
  41c62c:	(bad)  
  41c62d:	add    ch,ch
  41c62f:	pop    eax
  41c630:	mov    ecx,0xc0b9ae6f
  41c635:	rcr    BYTE PTR [ebx-0x5d2cb104],0x15
  41c63c:	sub    al,0x7c
  41c63e:	dec    eax
  41c63f:	daa    
  41c640:	add    DWORD PTR [eax+ebp*2+0x5e],0xffffffca
  41c645:	adc    eax,DWORD PTR [ebx]
  41c647:	ret    
  41c648:	lods   ax,WORD PTR fs:[esi]
  41c64b:	or     al,0x32
  41c64d:	scas   eax,DWORD PTR es:[edi]
  41c64e:	das    
  41c64f:	rcl    BYTE PTR [esi-0x7d],1
  41c652:	mov    esp,0x1ec7745b
  41c657:	push   ss
  41c658:	sub    DWORD PTR [eax+0x61],ebx
  41c65b:	ret    
  41c65c:	out    dx,al
  41c65d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c65e:	sub    eax,0xa93c5daa
  41c663:	fnstenv es:[edx+0x6cc521ef]
  41c66a:	xor    ebx,ecx
  41c66c:	loopne 0x41c6d5
  41c66e:	push   ss
  41c66f:	sbb    BYTE PTR [ebp+0x3],bl
  41c672:	mov    edi,0x23aedd75
  41c677:	out    0x29,eax
  41c679:	retf   0xcf1a
  41c67c:	(bad)  
  41c67e:	sub    DWORD PTR [ebx],edi
  41c680:	sbb    bl,ah
  41c682:	aaa    
  41c683:	ds jno 0x41c62a
  41c686:	push   eax
  41c687:	dec    BYTE PTR [ecx-0x71809a9b]
  41c68d:	inc    esi
  41c68e:	loop   0x41c70b
  41c690:	(bad)  
  41c691:	dec    ebp
  41c692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c693:	sbb    DWORD PTR ds:0x79e4b164,esi
  41c699:	adc    esi,esp
  41c69b:	enter  0x69a0,0xb6
  41c69f:	stos   DWORD PTR es:[edi],eax
  41c6a0:	xchg   ebp,eax
  41c6a1:	and    ecx,0x67b5aa54
  41c6a7:	xchg   ecx,eax
  41c6a8:	pop    ss
  41c6a9:	imul   esp,DWORD PTR [ebp-0x1],0x4f
  41c6ad:	sbb    eax,0x1723635f
  41c6b2:	dec    ebp
  41c6b3:	mov    ch,bl
  41c6b5:	bound  ebx,QWORD PTR [ecx+0x45fa5c1b]
  41c6bb:	push   ds
  41c6bc:	popf   
  41c6bd:	cld    
  41c6be:	sub    ah,BYTE PTR [ecx-0x793f53f8]
  41c6c4:	xchg   DWORD PTR [edx],esi
  41c6c6:	das    
  41c6c7:	data16 jle 0x41c6dc
  41c6ca:	mov    WORD PTR [esi-0x50],ss
  41c6cd:	mov    ds:0xa7f88df9,eax
  41c6d2:	dec    ecx
  41c6d3:	mov    ds:0xa7a1028d,eax
  41c6d8:	pop    eax
  41c6d9:	pop    edi
  41c6da:	lods   eax,DWORD PTR ds:[si]
  41c6dc:	stos   BYTE PTR es:[edi],al
  41c6dd:	add    BYTE PTR ds:0x466add1a,0x3e
  41c6e4:	shl    DWORD PTR [ebp+0x1d],0xe2
  41c6e8:	test   eax,0x82434dce
  41c6ed:	adc    ah,al
  41c6ef:	outs   dx,BYTE PTR ds:[esi]
  41c6f0:	cmc    
  41c6f1:	adc    ecx,DWORD PTR [ebx+0x4952ab52]
  41c6f7:	xor    eax,0x478b7e5d
  41c6fc:	mov    al,ds:0x4abf3814
  41c701:	push   ds
  41c702:	adc    cl,BYTE PTR [eax+0x35f2236b]
  41c708:	sub    BYTE PTR [edi-0x30265c23],ah
  41c70e:	addr16 dec eax
  41c710:	sbb    eax,0x6088716e
  41c715:	lods   al,BYTE PTR ds:[esi]
  41c716:	xchg   esp,eax
  41c717:	push   cs
  41c718:	std    
  41c719:	test   al,0x8d
  41c71b:	into   
  41c71c:	pop    ss
  41c71d:	cmc    
  41c71e:	clc    
  41c71f:	pop    esi
  41c720:	dec    eax
  41c721:	(bad)  
  41c722:	adc    ebp,ebx
  41c724:	jmp    0x41c742
  41c726:	popf   
  41c727:	fimul  WORD PTR [eax-0x21]
  41c72a:	in     eax,0x62
  41c72c:	mov    ds:0x6a9bd185,eax
  41c731:	outs   dx,BYTE PTR ds:[esi]
  41c732:	daa    
  41c733:	mov    ds:0x99bf4ed,eax
  41c738:	rcl    DWORD PTR ds:0xd0d8c142,0xf6
  41c73f:	xlat   BYTE PTR ds:[ebx]
  41c740:	add    BYTE PTR [esi],bl
  41c742:	iret   
  41c743:	adc    DWORD PTR [eax],edx
  41c745:	fdiv   QWORD PTR fs:[edx]
  41c748:	dec    ebp
  41c749:	mov    eax,ds:0xbc44db3e
  41c74e:	push   esi
  41c74f:	in     eax,dx
  41c750:	inc    esi
  41c751:	mov    ecx,DWORD PTR [ecx+0x554f1a2]
  41c757:	iret   
  41c758:	fucom  st(3)
  41c75a:	push   ds
  41c75b:	inc    edi
  41c75c:	xchg   ebp,eax
  41c75d:	in     eax,0x49
  41c75f:	fwait
  41c760:	xchg   ebx,eax
  41c761:	xchg   ebx,eax
  41c762:	mov    edi,0xfce16dc1
  41c767:	xlat   BYTE PTR ds:[ebx]
  41c768:	jecxz  0x41c78f
  41c76a:	xor    bh,dh
  41c76c:	xor    DWORD PTR [esi+ebx*8-0x3c],edi
  41c770:	enter  0xadd9,0x7a
  41c774:	or     DWORD PTR [edx],ebx
  41c776:	push   0xccb32dff
  41c77b:	mov    gs,WORD PTR [ebx-0x1a9839aa]
  41c781:	dec    ebp
  41c782:	jbe    0x41c7db
  41c784:	shl    DWORD PTR [ebp+0x2abeab8d],1
  41c78a:	ins    BYTE PTR es:[edi],dx
  41c78b:	pop    es
  41c78c:	xchg   cl,ah
  41c78e:	ret    0x44bd
  41c791:	dec    edi
  41c792:	pop    edi
  41c793:	inc    esi
  41c794:	sti    
  41c795:	xchg   esp,eax
  41c796:	sub    eax,0x2fc67581
  41c79b:	push   es
  41c79c:	fsub   st,st(5)
  41c79e:	xor    ch,BYTE PTR [ecx+0x30]
  41c7a1:	xor    BYTE PTR [ebp-0x35],0xa2
  41c7a5:	lods   al,BYTE PTR ds:[esi]
  41c7a6:	pop    esp
  41c7a7:	sub    eax,0x266f9914
  41c7ac:	scas   al,BYTE PTR es:[edi]
  41c7ad:	mov    edi,esi
  41c7af:	adc    al,0xf1
  41c7b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7b2:	and    eax,0xfe896223
  41c7b7:	sbb    DWORD PTR ds:0xe6696ed9,0xf18fcf6d
  41c7c1:	les    edx,FWORD PTR [ebp-0x231c557f]
  41c7c7:	ja     0x41c830
  41c7c9:	inc    ebx
  41c7ca:	or     ecx,ebp
  41c7cc:	dec    ecx
  41c7cd:	leave  
  41c7ce:	fisub  WORD PTR [esi+edx*4]
  41c7d1:	push   0x2e
  41c7d3:	jmp    0x6a1575bf
  41c7d8:	gs xchg edi,eax
  41c7da:	pop    ss
  41c7db:	push   esp
  41c7dc:	pop    ecx
  41c7dd:	in     al,dx
  41c7de:	int3   
  41c7df:	mov    ebp,0x8dc8b4a8
  41c7e4:	lds    ebx,FWORD PTR ds:0xc598c0ba
  41c7ea:	fnsave [edi+0x36]
  41c7ed:	add    eax,0x30703735
  41c7f2:	imul   esi,DWORD PTR [ebx],0x5f
  41c7f5:	sbb    ebp,DWORD PTR [ebp+0x3f]
  41c7f8:	outs   dx,DWORD PTR ds:[esi]
  41c7f9:	pushf  
  41c7fa:	bound  ebx,QWORD PTR [edi]
  41c7fc:	in     eax,0x5e
  41c7fe:	mov    cl,0x92
  41c800:	dec    ebp
  41c801:	jbe    0x41c7ac
  41c803:	in     eax,0xf3
  41c805:	sub    edi,edi
  41c807:	js     0x41c78b
  41c809:	xor    BYTE PTR [eax-0x40],al
  41c80c:	arpl   bx,bx
  41c80e:	test   BYTE PTR [ebp-0x43],ah
  41c811:	leave  
  41c812:	loope  0x41c7dd
  41c814:	(bad)  
  41c815:	int3   
  41c816:	push   eax
  41c817:	push   edi
  41c818:	sahf   
  41c819:	test   al,0xfe
  41c81b:	leave  
  41c81c:	(bad)  
  41c81d:	adc    al,0xad
  41c81f:	xor    bh,BYTE PTR [ebx+0xc]
  41c822:	and    edi,edx
  41c824:	jecxz  0x41c872
  41c826:	bnd call 0xcfcda072
  41c82c:	mov    edx,0xa942bce3
  41c831:	adc    DWORD PTR [edi],ecx
  41c833:	dec    ecx
  41c834:	ret    
  41c835:	(bad)  
  41c836:	add    BYTE PTR [edx+0x32],al
  41c839:	mov    ds:0x19f9c991,eax
  41c83e:	mov    eax,ds:0xf3848b6c
  41c843:	inc    edx
  41c844:	jo     0x41c85c
  41c846:	inc    ebx
  41c847:	jg     0x41c840
  41c849:	xchg   edi,eax
  41c84a:	sub    al,0x4e
  41c84c:	pop    eax
  41c84d:	mov    dh,0x3a
  41c84f:	xchg   ebx,esi
  41c851:	js     0x41c7f3
  41c853:	jbe    0x41c878
  41c855:	pushf  
  41c856:	jo     0x41c7e3
  41c858:	or     al,0x84
  41c85a:	in     eax,0x71
  41c85c:	push   ecx
  41c85d:	add    dl,dl
  41c85f:	call   0x52792318
  41c864:	jp     0x41c883
  41c866:	and    eax,0xb61832cd
  41c86b:	adc    BYTE PTR cs:[eax],dh
  41c86e:	jbe    0x41c816
  41c870:	fst    QWORD PTR [eax-0x341da48a]
  41c876:	xor    bl,dh
  41c878:	loop   0x41c816
  41c87a:	retf   0x5f39
  41c87d:	nop
  41c87e:	mov    al,ds:0x42392752
  41c883:	imul   ebp,DWORD PTR [edx+0xc0a1436],0x392258e7
  41c88d:	cmc    
  41c88e:	(bad)  
  41c88f:	xor    BYTE PTR [ebx],ch
  41c891:	into   
  41c892:	call   0xa041ae93
  41c897:	(bad)  
  41c898:	jno    0x41c8e1
  41c89a:	sub    edx,esi
  41c89c:	call   0xc168:0xb5758424
  41c8a3:	sar    BYTE PTR [edx+0x14],1
  41c8a6:	xchg   DWORD PTR [ebp-0x2a],ebp
  41c8a9:	inc    ebp
  41c8aa:	jg     0x41c834
  41c8ac:	retf   
  41c8ad:	jne    0x41c889
  41c8af:	push   es
  41c8b0:	push   edx
  41c8b1:	push   edx
  41c8b2:	arpl   WORD PTR [edx],si
  41c8b4:	dec    eax
  41c8b5:	mov    ds:0x5a586575,al
  41c8ba:	cdq    
  41c8bb:	sub    esp,DWORD PTR [edx]
  41c8bd:	dec    ebx
  41c8be:	and    ebp,DWORD PTR [ecx-0x4b]
  41c8c1:	push   edx
  41c8c2:	cmp    BYTE PTR [edx],0xd8
  41c8c5:	dec    edx
  41c8c6:	cmp    DWORD PTR [ecx],0x7f
  41c8c9:	cli    
  41c8ca:	fist   DWORD PTR [eax]
  41c8cc:	in     al,0x78
  41c8ce:	dec    edx
  41c8cf:	mov    eax,ds:0xb872571c
  41c8d4:	pop    ds
  41c8d5:	paddsw mm6,mm3
  41c8d8:	in     eax,0x68
  41c8da:	jne    0x41c885
  41c8dc:	push   ebx
  41c8dd:	pop    ds
  41c8de:	add    DWORD PTR [edx-0x1307affc],edi
  41c8e4:	push   ecx
  41c8e5:	push   cs
  41c8e6:	xchg   ebx,eax
  41c8e7:	pop    eax
  41c8e8:	xchg   edi,eax
  41c8e9:	popa   
  41c8ea:	inc    esp
  41c8eb:	mov    fs:0x68bb9deb,al
  41c8f1:	sbb    al,0xda
  41c8f3:	das    
  41c8f4:	mov    bl,0xc6
  41c8f6:	add    bl,al
  41c8f8:	add    bh,BYTE PTR [ebx]
  41c8fa:	mov    dh,0x57
  41c8fc:	int3   
  41c8fd:	enter  0x9abf,0x2
  41c901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c902:	add    dl,BYTE PTR [edi-0x16]
  41c905:	push   ebp
  41c906:	mov    ah,0x4c
  41c908:	sbb    DWORD PTR [ecx-0x3f],esi
  41c90b:	outs   dx,DWORD PTR gs:[esi]
  41c90d:	scas   eax,DWORD PTR es:[edi]
  41c90e:	jl     0x41c8c0
  41c910:	inc    ebp
  41c911:	adc    eax,0x4e98aaca
  41c916:	fld    QWORD PTR [ebx]
  41c918:	fisttp QWORD PTR [ebp+0x45]
  41c91b:	and    bh,dl
  41c91d:	repz xor ebp,DWORD PTR [eax-0x6a]
  41c921:	sar    ebp,cl
  41c923:	adc    al,0x23
  41c925:	retf   0x6bc6
  41c928:	(bad)  
  41c92a:	mov    ds:0xf8fc96d5,eax
  41c92f:	mov    DWORD PTR [ecx],ebp
  41c931:	out    0xa4,eax
  41c933:	les    eax,FWORD PTR [ebp-0x30]
  41c936:	push   0x89b9cb37
  41c93b:	or     cl,al
  41c93d:	dec    eax
  41c93e:	ja     0x41c911
  41c940:	mov    esi,0xac30bd61
  41c945:	xor    eax,esp
  41c947:	inc    esi
  41c948:	hlt    
  41c949:	jecxz  0x41c96a
  41c94b:	lods   eax,DWORD PTR ds:[esi]
  41c94c:	pop    ebp
  41c94d:	xchg   ebx,eax
  41c94e:	mov    edx,0xf70c316d
  41c953:	adc    BYTE PTR [ebx],dh
  41c955:	jecxz  0x41c8dd
  41c957:	shr    BYTE PTR ds:0x5e013a83,cl
  41c95d:	xchg   edx,eax
  41c95e:	fild   DWORD PTR [esi+0x3e462991]
  41c964:	sbb    eax,0xba5577a9
  41c969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c96a:	mov    dl,BYTE PTR [edi-0x4e]
  41c96d:	clc    
  41c96e:	xor    eax,0x5447b99a
  41c973:	outs   dx,BYTE PTR ds:[esi]
  41c974:	fldenv [ebx-0x29171c35]
  41c97a:	adc    al,0x24
  41c97c:	inc    ebx
  41c97d:	imul   ebx,DWORD PTR [eax-0x25c62015],0xcc8c86d9
  41c987:	jns    0x41c9e0
  41c989:	fnsave [ebx+0x6e]
  41c98c:	add    ah,ch
  41c98e:	jb     0x41c94a
  41c990:	jmp    0x54c2:0x6aac4b02
  41c997:	mov    bh,0xa3
  41c999:	aas    
  41c99a:	mul    eax
  41c99c:	popf   
  41c99d:	pop    esi
  41c99e:	popa   
  41c99f:	mov    dl,0x15
  41c9a1:	pusha  
  41c9a2:	dec    ebp
  41c9a3:	push   es
  41c9a4:	pop    ss
  41c9a5:	dec    edi
  41c9a6:	mov    ebp,0xc44457cb
  41c9ab:	dec    edi
  41c9ac:	int    0xc7
  41c9ae:	xchg   ch,dh
  41c9b0:	pop    edi
  41c9b1:	mov    edi,0x6a5613d7
  41c9b6:	mov    eax,0x4bb4a3df
  41c9bb:	and    al,0x18
  41c9bd:	jbe    0x41ca14
  41c9bf:	mov    dl,0x17
  41c9c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9c2:	pushf  
  41c9c3:	add    eax,0xc1d6b52
  41c9c8:	fwait
  41c9c9:	arpl   WORD PTR [edx],bp
  41c9cb:	or     bh,BYTE PTR gs:[edx-0x48eec93c]
  41c9d2:	out    0xbf,al
  41c9d4:	pop    es
  41c9d5:	dec    edi
  41c9d6:	mov    ch,0xcd
  41c9d8:	adc    al,0x4f
  41c9da:	pop    ds
  41c9db:	dec    eax
  41c9dc:	mov    esi,0x3633c8da
  41c9e1:	jg     0x41ca3a
  41c9e3:	jnp    0x41ca2f
  41c9e5:	ror    dh,1
  41c9e7:	mov    al,0xba
  41c9e9:	inc    edx
  41c9ea:	cs popf 
  41c9ec:	ja     0x41c970
  41c9ee:	mov    al,ds:0x58089de0
  41c9f3:	adc    DWORD PTR [ecx+0x5e0df9dd],eax
  41c9f9:	xor    eax,0x1ed9fcb3
  41c9fe:	mov    WORD PTR [ebx-0x71697da5],ss
  41ca04:	jne    0x41c9c0
  41ca06:	dec    esi
  41ca07:	mov    ds:0xe8ce24c,al
  41ca0c:	mov    bl,0x60
  41ca0e:	ja     0x41ca29
  41ca10:	inc    ebp
  41ca11:	mov    al,ds:0xe1ab769a
  41ca16:	push   ebp
  41ca17:	and    eax,ebx
  41ca19:	xor    al,0x8f
  41ca1b:	scas   al,BYTE PTR es:[edi]
  41ca1c:	jmp    0x41ca24
  41ca1e:	outs   dx,DWORD PTR ds:[esi]
  41ca1f:	jo     0x41ca26
  41ca21:	outs   dx,BYTE PTR ds:[esi]
  41ca22:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41ca24:	adc    eax,0x3ef18ca6
  41ca29:	jns    0x41c9dc
  41ca2b:	ss and eax,0xcc8410e8
  41ca31:	xchg   esp,eax
  41ca32:	inc    edx
  41ca33:	enter  0xf9e,0x5d
  41ca37:	add    BYTE PTR [ecx-0x480d7736],0x3a
  41ca3e:	dec    esp
  41ca3f:	aaa    
  41ca40:	lds    ecx,FWORD PTR [edi+0x44fd692b]
  41ca46:	cmp    ecx,DWORD PTR [eax+0x49d3c9b4]
  41ca4c:	inc    edi
  41ca4d:	sub    DWORD PTR [edx-0x604f5e8a],eax
  41ca53:	clc    
  41ca54:	mov    ds:0x8234e63e,al
  41ca59:	(bad)  
  41ca5a:	fucomi st,st(7)
  41ca5c:	add    al,0xf7
  41ca5e:	and    eax,0xe9976d7b
  41ca63:	lods   eax,DWORD PTR ds:[esi]
  41ca64:	popa   
  41ca65:	(bad)  
  41ca66:	mov    ah,0x99
  41ca68:	out    dx,al
  41ca69:	hlt    
  41ca6a:	fimul  DWORD PTR [eax+eax*4+0x0]
  41ca6e:	pop    es
  41ca6f:	lahf   
  41ca70:	fcom   DWORD PTR [edx-0x56]
  41ca73:	inc    eax
  41ca74:	sbb    eax,0xf5ab6f39
  41ca79:	dec    edx
  41ca7a:	fnsave [ecx-0x6feeb0db]
  41ca80:	pop    es
  41ca81:	mov    al,0xb0
  41ca83:	mov    ds:0x592ef2e4,eax
  41ca88:	xchg   ebp,eax
  41ca89:	les    ecx,FWORD PTR [edi+0x17352ff6]
  41ca8f:	les    eax,FWORD PTR [edx-0xf0e7a33]
  41ca95:	in     al,0xa6
  41ca97:	call   0x7790618f
  41ca9c:	dec    esp
  41ca9d:	aaa    
  41ca9e:	pop    ss
  41ca9f:	fmul   DWORD PTR [ebp+0xa00e03b]
  41caa5:	xor    al,0xae
  41caa7:	push   ss
  41caa8:	jmp    0xa43352fd
  41caad:	out    dx,eax
  41caae:	call   0xa726:0xbde7ca5b
  41cab5:	aad    0x43
  41cab7:	push   edi
  41cab8:	xchg   esi,eax
  41cab9:	dec    esi
  41caba:	sahf   
  41cabb:	jecxz  0x41cb3a
  41cabd:	(bad)  
  41cabe:	aam    0xb9
  41cac0:	xchg   edi,eax
  41cac1:	push   es
  41cac2:	or     DWORD PTR [edi],esp
  41cac4:	push   0xa
  41cac6:	cmp    ch,BYTE PTR [edi]
  41cac8:	pushf  
  41cac9:	dec    edx
  41caca:	out    dx,eax
  41cacb:	cmp    al,0x84
  41cacd:	inc    esp
  41cace:	(bad)  
  41cacf:	imul   eax,DWORD PTR [ecx],0xffffffed
  41cad2:	jp     0x41caa6
  41cad4:	mov    ebx,0x85d2cada
  41cad9:	repnz push esi
  41cadb:	adc    dh,BYTE PTR [ebx-0x93c1ac8]
  41cae1:	call   0xb03e:0xbb038896
  41cae8:	sbb    al,0x4
  41caea:	fwait
  41caeb:	in     eax,0x8c
  41caed:	push   es
  41caee:	inc    ebx
  41caef:	mov    DWORD PTR [edi],esp
  41caf1:	jnp    0x41cac0
  41caf3:	sbb    ah,BYTE PTR [esi]
  41caf5:	in     eax,0x15
  41caf7:	fbstp  TBYTE PTR [edx+0x5b]
  41cafa:	cmc    
  41cafb:	xchg   ebp,eax
  41cafc:	shr    BYTE PTR [ebp-0x3486c154],0x9b
  41cb03:	jae    0x41cb44
  41cb05:	lock xor ch,BYTE PTR [eax]
  41cb08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb09:	fcom   QWORD PTR [esi+edi*4-0x59e62a16]
  41cb10:	mov    esp,0xcdaa1670
  41cb15:	mov    BYTE PTR [esi-0x11],dl
  41cb18:	xchg   edx,eax
  41cb19:	std    
  41cb1a:	inc    ebx
  41cb1b:	retf   0xe3ab
  41cb1e:	sub    al,0xe8
  41cb20:	cmp    edi,ecx
  41cb22:	dec    ecx
  41cb23:	dec    ecx
  41cb24:	jno    0x41cba5
  41cb26:	in     eax,0x2
  41cb28:	inc    edx
  41cb29:	mov    ds:0x2520248b,al
  41cb2e:	pop    ebx
  41cb2f:	xchg   ebp,eax
  41cb30:	and    ch,bl
  41cb32:	inc    ebx
  41cb33:	sbb    eax,0xb505a519
  41cb38:	xchg   esi,eax
  41cb39:	call   0x70ad:0xb1240d7
  41cb40:	sbb    al,0x3
  41cb42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb43:	sub    eax,0x96d5256f
  41cb48:	popf   
  41cb49:	fisttp QWORD PTR [ebx-0x74c2eee3]
  41cb4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb50:	pop    eax
  41cb51:	jg     0x41cb92
  41cb53:	jp     0x41cb37
  41cb55:	out    0x20,al
  41cb57:	mov    WORD PTR [eiz*4+0x7f2b51e7],fs
  41cb5e:	aad    0xb3
  41cb60:	in     al,0xc8
  41cb62:	sahf   
  41cb63:	or     BYTE PTR [ebx+0x38],dh
  41cb66:	push   edi
  41cb67:	clc    
  41cb68:	pop    ebx
  41cb69:	add    edi,esi
  41cb6b:	xor    BYTE PTR [esp+eax*8],dl
  41cb6e:	addr16 (bad) 
  41cb70:	fidivr DWORD PTR [ebx-0x6989b6ce]
  41cb76:	(bad)  
  41cb77:	or     al,0xa4
  41cb79:	rcl    BYTE PTR ds:0x6dea4906,cl
  41cb7f:	rcl    dh,0xb9
  41cb82:	dec    ebx
  41cb83:	jo     0x41cb4d
  41cb85:	gs cmp eax,0xaa53de9
  41cb8b:	(bad)  
  41cb8c:	xor    DWORD PTR [edi],ebp
  41cb8e:	and    eax,0xe5126380
  41cb93:	mov    esp,0x5721705f
  41cb98:	pop    ss
  41cb99:	clc    
  41cb9a:	dec    ebp
  41cb9b:	outs   dx,DWORD PTR ds:[esi]
  41cb9c:	xor    BYTE PTR [esi+0x2d1402dd],cl
  41cba2:	xchg   ebp,eax
  41cba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cba4:	mov    eax,ds:0x618591b4
  41cba9:	or     dh,ah
  41cbab:	pop    ecx
  41cbac:	stc    
  41cbad:	xchg   bh,ch
  41cbaf:	cwde   
  41cbb0:	adc    al,0x57
  41cbb2:	push   ebp
  41cbb3:	sahf   
  41cbb4:	cmc    
  41cbb5:	mov    BYTE PTR [edi+0x44],bl
  41cbb8:	mov    dl,BYTE PTR [ecx+0x4e]
  41cbbb:	in     al,0xcf
  41cbbd:	cmp    ecx,0xdd114c22
  41cbc3:	xor    al,0xd2
  41cbc5:	(bad)  [ebx+0x2156b6d2]
  41cbcb:	popa   
  41cbcc:	or     ah,bh
  41cbce:	xchg   ebp,eax
  41cbcf:	sub    al,0x63
  41cbd1:	xor    eax,0x40
  41cbd4:	aam    0xda
  41cbd6:	cld    
  41cbd7:	inc    eax
  41cbd8:	cmp    DWORD PTR [ecx],edi
  41cbda:	jo     0x41cbce
  41cbdc:	inc    edi
  41cbdd:	lock mov ds:0xc4852ae4,eax
  41cbe3:	lahf   
  41cbe4:	or     DWORD PTR [ecx+0x43128be8],edi
  41cbea:	enter  0x7b8d,0x2a
  41cbee:	(bad)  
  41cbef:	inc    DWORD PTR [edx]
  41cbf1:	bound  ebp,QWORD PTR [edi+0x77]
  41cbf4:	out    dx,al
  41cbf5:	push   ds
  41cbf6:	clc    
  41cbf7:	mov    bh,0x95
  41cbf9:	mov    ebp,0x67178fca
  41cbfe:	std    
  41cbff:	(bad)
  41cc03:	cmp    al,0x4a
  41cc05:	test   bl,dl
  41cc07:	es stos BYTE PTR es:[edi],al
  41cc09:	pop    ebx
  41cc0a:	(bad)  
  41cc0c:	lds    ebp,FWORD PTR [ecx+ecx*4-0x56370c92]
  41cc13:	sti    
  41cc14:	lahf   
  41cc15:	cld    
  41cc16:	adc    al,0x7c
  41cc18:	and    BYTE PTR [eax],ch
  41cc1a:	ret    
  41cc1b:	pop    esp
  41cc1c:	pop    esi
  41cc1d:	mov    esp,0x3b630b23
  41cc22:	hlt    
  41cc23:	sub    eax,DWORD PTR [ebp+0x225878c1]
  41cc29:	outs   dx,DWORD PTR ds:[esi]
  41cc2a:	xchg   edx,eax
  41cc2b:	mov    edi,0x54c8138e
  41cc30:	out    0xd1,al
  41cc32:	pushf  
  41cc33:	xor    BYTE PTR [ebp+0x5d6806fd],bh
  41cc39:	outs   dx,DWORD PTR ds:[esi]
  41cc3a:	mov    dh,0x5b
  41cc3c:	or     DWORD PTR [ecx-0x370373a7],eax
  41cc42:	out    0x7f,al
  41cc44:	adc    DWORD PTR [esp+esi*1-0x2b],ebx
  41cc48:	fcomp  QWORD PTR [ecx]
  41cc4a:	jmp    0x86d51068
  41cc4f:	imul   edx,DWORD PTR [edi],0x59
  41cc52:	mov    BYTE PTR [ecx-0x54b44f3],al
  41cc58:	mov    ds:0xfeb7ee2a,eax
  41cc5d:	cdq    
  41cc5e:	or     bh,BYTE PTR [edx+0x5f86d95e]
  41cc64:	cmp    ebx,esp
  41cc66:	mov    ds:0x54a6f13f,al
  41cc6b:	popa   
  41cc6c:	and    ch,ah
  41cc6e:	not    DWORD PTR [esi+0x109321ac]
  41cc74:	or     DWORD PTR [esi+0x6b],ecx
  41cc77:	popa   
  41cc78:	repz inc eax
  41cc7a:	inc    edi
  41cc7b:	es cmp eax,0x60e02c7f
  41cc81:	and    eax,0xa8301bde
  41cc86:	xlat   BYTE PTR ds:[ebx]
  41cc87:	inc    BYTE PTR [edi+0x4]
  41cc8a:	pop    eax
  41cc8b:	push   ecx
  41cc8c:	add    al,0x0
  41cc8e:	xchg   edi,eax
  41cc8f:	jmp    0x41cc2f
  41cc91:	arpl   WORD PTR [eax+0x23],bx
  41cc94:	out    0xab,al
  41cc96:	inc    edx
  41cc97:	rol    ch,0x3
  41cc9a:	mov    ch,0x0
  41cc9c:	lods   eax,DWORD PTR ds:[esi]
  41cc9d:	(bad)  
  41cc9e:	call   DWORD PTR [ebp+0x6e]
  41cca1:	mov    dl,0xad
  41cca3:	push   edx
  41cca4:	cmp    DWORD PTR [esi],edi
  41cca6:	retf   
  41cca7:	aas    
  41cca8:	test   DWORD PTR [ebp+ecx*1-0x3e],edx
  41ccac:	ins    DWORD PTR es:[edi],dx
  41ccad:	or     ch,BYTE PTR [esi-0x7f]
  41ccb0:	loope  0x41cd0e
  41ccb2:	out    dx,al
  41ccb3:	scas   al,BYTE PTR es:[edi]
  41ccb4:	fist   WORD PTR [eax-0x49]
  41ccb7:	sbb    ch,ah
  41ccb9:	js     0x41cd0e
  41ccbb:	outs   dx,BYTE PTR ds:[esi]
  41ccbc:	push   edi
  41ccbd:	mov    ecx,0x88e46ff6
  41ccc2:	dec    edi
  41ccc3:	loopne 0x41cc83
  41ccc5:	nop
  41ccc6:	js     0x41ccc5
  41ccc8:	lahf   
  41ccc9:	test   eax,0xa23fc4c4
  41ccce:	jbe    0x41cd49
  41ccd0:	mov    dl,0x57
  41ccd2:	sar    BYTE PTR [edi-0x459f67bb],1
  41ccd8:	pop    ebx
  41ccd9:	cmp    BYTE PTR [eax],bh
  41ccdb:	rol    DWORD PTR gs:[ecx],cl
  41ccde:	mov    ?,ebp
  41cce0:	gs stos BYTE PTR es:[edi],al
  41cce2:	cmc    
  41cce3:	cdq    
  41cce4:	repz dec esp
  41cce6:	push   eax
  41cce7:	sub    al,bl
  41cce9:	jno    0x41ccf9
  41cceb:	sbb    DWORD PTR [ebx+0xd],esi
  41ccee:	je     0x41ccd1
  41ccf0:	sub    DWORD PTR [ecx+0x2cf6cae0],edi
  41ccf6:	rcr    DWORD PTR [esi+0x718a8ab6],1
  41ccfc:	sti    
  41ccfd:	in     eax,dx
  41ccfe:	sub    eax,0xa5330d20
  41cd03:	adc    eax,0x6e0ac35a
  41cd08:	test   ebx,ebp
  41cd0a:	sub    esp,ebp
  41cd0c:	out    dx,eax
  41cd0d:	imul   esi,DWORD PTR [ebp-0x2f],0xb
  41cd11:	or     BYTE PTR [eax-0x3f],cl
  41cd14:	mov    ds:0xf7f0da3b,eax
  41cd19:	jne    0x41cd02
  41cd1b:	mov    edx,esi
  41cd1d:	jb     0x41ccc6
  41cd1f:	add    DWORD PTR [ebp+eax*2-0x6a],ecx
  41cd23:	stos   BYTE PTR es:[edi],al
  41cd24:	scas   eax,DWORD PTR es:[edi]
  41cd25:	call   0x224863a0
  41cd2a:	pop    edx
  41cd2b:	popa   
  41cd2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd2d:	(bad)  
  41cd2e:	jp     0x41cd25
  41cd30:	mov    BYTE PTR [esi-0x41],bh
  41cd33:	mov    bl,0xbf
  41cd35:	call   DWORD PTR [esi-0x31db392a]
  41cd3b:	nop
  41cd3c:	dec    eax
  41cd3d:	pop    ecx
  41cd3e:	ja     0x41cd83
  41cd40:	add    edi,DWORD PTR [esi-0x39c84d4b]
  41cd46:	lahf   
  41cd47:	add    DWORD PTR [ebx+0x39],ebx
  41cd4a:	mov    ecx,0x441b50de
  41cd4f:	adc    al,0xf0
  41cd51:	int    0xdd
  41cd53:	in     eax,dx
  41cd54:	mov    ah,ch
  41cd56:	sub    esi,DWORD PTR [ecx]
  41cd58:	js     0x41cd3b
  41cd5a:	stc    
  41cd5b:	lock nop
  41cd5d:	mov    esp,0x45d21f9d
  41cd62:	inc    esp
  41cd63:	(bad)  
  41cd64:	in     al,0x9a
  41cd66:	or     BYTE PTR [esp+edi*1+0x3b],0x2b
  41cd6b:	pop    ebx
  41cd6c:	rcl    DWORD PTR [edi],0x97
  41cd6f:	push   edi
  41cd70:	add    ebp,DWORD PTR ds:0x31aecd49
  41cd76:	and    ebx,DWORD PTR [esp+eiz*8]
  41cd79:	out    dx,eax
  41cd7a:	jmp    0x5978a28d
  41cd7f:	mov    dh,0xa
  41cd81:	cmp    DWORD PTR [ecx+0x25280cd8],ebp
  41cd87:	lahf   
  41cd88:	pop    edx
  41cd89:	xor    bl,BYTE PTR [edx+ecx*2+0x5b]
  41cd8d:	mov    eax,ds:0x41cb0827
  41cd92:	arpl   WORD PTR [esi-0xb48b6],sp
  41cd98:	pushf  
  41cd99:	mul    DWORD PTR [ebp+0x34453e62]
  41cd9f:	repnz or eax,0x1005665a
  41cda5:	je     0x41cd9e
  41cda7:	pushf  
  41cda8:	pop    esi
  41cda9:	mov    cl,dl
  41cdab:	and    edi,DWORD PTR cs:[eax-0x55311c69]
  41cdb2:	jo     0x41cdd3
  41cdb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdb5:	dec    DWORD PTR [eax+0x72530aa6]
  41cdbb:	jne    0x41cdb2
  41cdbd:	mov    ch,0x63
  41cdbf:	cli    
  41cdc0:	jg     0x41cdec
  41cdc2:	mov    ch,0x20
  41cdc4:	sbb    DWORD PTR [esi-0x50],esp
  41cdc7:	fsub   DWORD PTR [esi]
  41cdc9:	test   dh,bl
  41cdcb:	std    
  41cdcc:	or     eax,0x63c5cdc1
  41cdd1:	clc    
  41cdd2:	add    DWORD PTR [ebx+0x69],eax
  41cdd5:	or     eax,0xd2e9985d
  41cdda:	mov    ah,BYTE PTR [edi+0x30565ae0]
  41cde0:	xchg   edx,eax
  41cde1:	mov    edx,0x1ed5856c
  41cde6:	xor    DWORD PTR es:[edx-0x3833019d],ebp
  41cded:	pop    es
  41cdee:	adc    al,0x40
  41cdf0:	fiadd  DWORD PTR [edi+0x7e]
  41cdf3:	add    ebx,DWORD PTR [esi-0x54]
  41cdf6:	push   ebp
  41cdf7:	mov    al,ds:0x90bcac61
  41cdfc:	shr    bh,1
  41cdfe:	add    al,0x38
  41ce00:	hlt    
  41ce01:	mov    cl,0x98
  41ce03:	imul   ebx,ecx,0xc
  41ce06:	mov    ds:0x1fe5accd,al
  41ce0b:	lock jae 0x41cdc0
  41ce0e:	push   fs
  41ce10:	or     edx,0x6f
  41ce13:	call   0x3995:0xc265c4bc
  41ce1a:	aaa    
  41ce1b:	sbb    al,cl
  41ce1d:	and    al,0x65
  41ce1f:	sbb    DWORD PTR [ebx],0x6d6ee656
  41ce25:	or     esi,DWORD PTR [eax+ecx*4]
  41ce28:	mov    ecx,0xe4cab4c0
  41ce2d:	mov    ah,0xcb
  41ce2f:	imul   ebx,DWORD PTR [edi],0xd141cd66
  41ce35:	push   ds
  41ce36:	iret   
  41ce37:	push   DWORD PTR [ebx+0x2b3ad426]
  41ce3d:	xchg   esi,eax
  41ce3e:	mov    eax,ds:0x6d0e92a5
  41ce43:	aad    0x22
  41ce45:	push   ebp
  41ce46:	mov    al,ds:0xd7a389fd
  41ce4b:	imul   edi,ebx,0x64bedd56
  41ce51:	xor    edi,esp
  41ce53:	push   es
  41ce54:	xchg   ebx,eax
  41ce55:	or     DWORD PTR [ebx],0xffffff96
  41ce58:	mov    WORD PTR [edi],?
  41ce5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce5b:	rcr    DWORD PTR [esi-0x37],1
  41ce5e:	ds inc ecx
  41ce60:	jg     0x41cecc
  41ce62:	cdq    
  41ce63:	jo     0x41ce2a
  41ce65:	inc    esp
  41ce66:	ds dec ebx
  41ce68:	push   edx
  41ce69:	ret    
  41ce6a:	adc    BYTE PTR [edi],ch
  41ce6c:	stos   BYTE PTR es:[edi],al
  41ce6d:	xor    DWORD PTR [esi],eax
  41ce6f:	retf   
  41ce70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce71:	shl    esi,1
  41ce73:	hlt    
  41ce74:	cli    
  41ce75:	(bad)  
  41ce76:	(bad)  
  41ce77:	pop    ebx
  41ce78:	enter  0x41af,0x7e
  41ce7c:	or     al,0x51
  41ce7e:	jne    0x41ce30
  41ce80:	push   esp
  41ce81:	push   edi
  41ce82:	jne    0x41ce87
  41ce84:	jg     0x41ce0a
  41ce86:	dec    esp
  41ce87:	adc    BYTE PTR ds:0x4bbbed00,0xa3
  41ce8e:	cmp    BYTE PTR [ecx-0x3e5ec5bb],dh
  41ce94:	inc    esp
  41ce95:	or     eax,0xc676a5ed
  41ce9a:	arpl   WORD PTR [edi+esi*1],dx
  41ce9d:	sub    ebp,edx
  41ce9f:	shl    DWORD PTR [esi+0x78],1
  41cea2:	pusha  
  41cea3:	out    0x22,eax
  41cea5:	sub    al,0xdf
  41cea7:	xchg   BYTE PTR [edi+ebx*2-0x5f],dh
  41ceab:	ins    BYTE PTR es:[edi],dx
  41ceac:	push   es
  41cead:	fld    QWORD PTR [edi+0x2a]
  41ceb0:	jbe    0x41cf1f
  41ceb2:	mov    edx,0x3c69ed45
  41ceb7:	leave  
  41ceb8:	lahf   
  41ceb9:	mov    dl,0x8a
  41cebb:	cwde   
  41cebc:	es stos DWORD PTR es:[edi],eax
  41cebe:	or     edx,DWORD PTR [edx]
  41cec0:	scas   al,BYTE PTR es:[edi]
  41cec1:	lea    ecx,[ecx-0x71fd80bd]
  41cec7:	scas   eax,DWORD PTR es:[edi]
  41cec8:	push   0x4c
  41ceca:	dec    ebx
  41cecb:	xor    al,0x31
  41cecd:	adc    DWORD PTR [eax-0x5b],esi
  41ced0:	call   0x699f712b
  41ced5:	ds (bad) 
  41ced7:	dec    edx
  41ced8:	adc    eax,0x7803b309
  41cedd:	arpl   di,bx
  41cedf:	int3   
  41cee0:	jmp    0xcd26:0xfe5937ac
  41cee7:	add    BYTE PTR [edx],ch
  41cee9:	sbb    esp,esp
  41ceeb:	scas   al,BYTE PTR es:[edi]
  41ceec:	push   ebp
  41ceed:	sbb    bh,dh
  41ceef:	ds dec ebx
  41cef1:	xor    eax,0x72043e02
  41cef6:	push   es
  41cef7:	fld    TBYTE PTR [edx+edi*8]
  41cefa:	dec    ebx
  41cefb:	call   0xa1f33b85
  41cf00:	loope  0x41cee7
  41cf02:	xchg   edi,eax
  41cf03:	lods   al,BYTE PTR ds:[esi]
  41cf04:	popa   
  41cf05:	push   esi
  41cf06:	xor    bl,cl
  41cf08:	inc    ecx
  41cf09:	jmp    0xf81a:0x6a1672e
  41cf10:	lock fwait
  41cf12:	lods   al,BYTE PTR gs:[esi]
  41cf14:	pop    edx
  41cf15:	xor    bh,BYTE PTR ds:0xd8c2edc9
  41cf1b:	inc    esp
  41cf1c:	mov    ds:0xd95ecb3c,al
  41cf21:	mov    edi,0x529ff3b4
  41cf26:	cmp    eax,0x3478a8c6
  41cf2b:	push   ecx
  41cf2c:	mov    ds:0x1b70a7e9,al
  41cf31:	mov    edx,0x29aba9b9
  41cf36:	test   eax,0x43832df8
  41cf3b:	xchg   edx,eax
  41cf3c:	cmp    dl,BYTE PTR [esi-0x329d8529]
  41cf42:	js     0x41cf23
  41cf44:	(bad)  
  41cf45:	pop    eax
  41cf46:	into   
  41cf47:	rol    BYTE PTR [edi+0x11],0xca
  41cf4b:	pop    esp
  41cf4c:	stos   DWORD PTR es:[edi],eax
  41cf4d:	imul   esi,DWORD PTR [ebx],0xb4c7a606
  41cf53:	sbb    al,0x75
  41cf55:	jmp    0xe7e0:0x18f7a883
  41cf5c:	fwait
  41cf5d:	cmp    dl,BYTE PTR [ebx-0x56]
  41cf60:	and    al,0xb8
  41cf62:	stc    
  41cf63:	mov    dh,0x5e
  41cf65:	(bad)  
  41cf66:	aam    0xe6
  41cf68:	pusha  
  41cf69:	jb     0x41cfa7
  41cf6b:	loope  0x41cfbf
  41cf6d:	ror    DWORD PTR gs:[esi],0x9b
  41cf71:	mov    dl,0x9c
  41cf73:	or     ebp,DWORD PTR [ecx]
  41cf75:	xchg   ebx,eax
  41cf76:	pop    edx
  41cf77:	and    DWORD PTR [ecx+0x7d],esi
  41cf7a:	mov    ss,esi
  41cf7c:	test   BYTE PTR [ecx-0x27a574e7],0x56
  41cf83:	ret    
  41cf84:	fdivr  st,st(2)
  41cf86:	je     0x41cf20
  41cf88:	sbb    BYTE PTR [eax],al
  41cf8a:	mov    ecx,0xd286c436
  41cf8f:	adc    bh,BYTE PTR [ecx]
  41cf91:	mov    al,ds:0x736a137e
  41cf96:	or     al,0xf2
  41cf98:	cmp    ebp,DWORD PTR [esi-0x45]
  41cf9b:	adc    ebx,DWORD PTR [edx+eax*8]
  41cf9e:	or     esp,DWORD PTR [esi+ebx*4-0xa]
  41cfa2:	adc    dl,BYTE PTR [ecx-0x4]
  41cfa5:	call   0x77c4:0x354c685f
  41cfac:	stos   BYTE PTR es:[edi],al
  41cfad:	iret   
  41cfae:	cwde   
  41cfaf:	dec    eax
  41cfb0:	repz arpl WORD PTR [edi+0xa],bp
  41cfb4:	mov    eax,ds:0xb2eb1094
  41cfb9:	fsubr  DWORD PTR [ebx+0x596e29ca]
  41cfbf:	out    0x34,al
  41cfc1:	icebp  
  41cfc2:	aad    0x26
  41cfc4:	std    
  41cfc5:	and    DWORD PTR [edx+0x55ad4488],0x81aedd17
  41cfcf:	dec    eax
  41cfd0:	mov    dl,ah
  41cfd2:	clc    
  41cfd3:	add    ecx,0x5708c0
  41cfd9:	imul   ecx,edx
  41cfdc:	mov    DWORD PTR [ebp-0x58],ecx
  41cfdf:	mov    ecx,DWORD PTR [ebp+0x8]
  41cfe2:	mov    edx,DWORD PTR [ebp-0x54]
  41cfe5:	add    ecx,0x64f8a2
  41cfeb:	or     ecx,edx
  41cfed:	mov    DWORD PTR [ebp-0x54],ecx
  41cff0:	mov    ecx,DWORD PTR [ebp+0x8]
  41cff3:	mov    edx,DWORD PTR [ebp-0x50]
  41cff6:	add    ecx,0x242ebed
  41cffc:	xor    ecx,edx
  41cffe:	mov    DWORD PTR [ebp-0x50],ecx
  41d001:	mov    ecx,DWORD PTR [ebp+0x8]
  41d004:	mov    edx,DWORD PTR [ebp-0x4c]
  41d007:	add    ecx,edi
  41d009:	and    ecx,edx
  41d00b:	mov    DWORD PTR [ebp-0x4c],ecx
  41d00e:	mov    ecx,DWORD PTR [ebp+0x8]
  41d011:	mov    edx,DWORD PTR [ebp-0x48]
  41d014:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41d01b:	mov    DWORD PTR [ebp-0x48],ecx
  41d01e:	mov    ecx,DWORD PTR [ebp+0x8]
  41d021:	mov    edx,0xfa5e15e2
  41d026:	sub    edx,ecx
  41d028:	add    edx,DWORD PTR [ebp-0x44]
  41d02b:	mov    DWORD PTR [ebp-0x44],edx
  41d02e:	mov    ecx,DWORD PTR [ebp+0x8]
  41d031:	xor    ecx,eax
  41d033:	add    ecx,esi
  41d035:	jne    0x41abff
  41d03b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d03e:	xor    ecx,eax
  41d040:	mov    eax,DWORD PTR [ebp+0x10]
  41d043:	add    ecx,esi
  41d045:	mov    DWORD PTR [eax],ecx
  41d047:	pop    edi
  41d048:	pop    esi
  41d049:	pop    ebx
  41d04a:	leave  
  41d04b:	ret    0xc
  41d04e:	add    al,ah
  41d050:	inc    edx
  41d051:	add    BYTE PTR [eax+eiz*8],al
  41d054:	inc    edx
  41d055:	add    BYTE PTR [eax],cl
  41d057:	loopne 0x41d09b
  41d059:	add    BYTE PTR [eax+eiz*8],cl
  41d05c:	inc    edx
  41d05d:	add    BYTE PTR [eax],dl
  41d05f:	loopne 0x41d0a3
  41d061:	add    BYTE PTR [eax+eiz*8],dl
  41d064:	inc    edx
  41d065:	add    BYTE PTR [eax],bl
  41d067:	loopne 0x41d0ab
  41d069:	add    BYTE PTR [eax+eiz*8],bl
  41d06c:	inc    edx
  41d06d:	add    BYTE PTR [eax],ah
  41d06f:	loopne 0x41d0b3
  41d071:	add    BYTE PTR [eax+eiz*8],ah
  41d074:	inc    edx
  41d075:	add    BYTE PTR [eax],ch
  41d077:	loopne 0x41d0bb
  41d079:	add    BYTE PTR [eax],al
  41d07b:	add    BYTE PTR [ebx+0x0],al
  41d07e:	add    al,0x0
  41d080:	inc    ebx
  41d081:	add    BYTE PTR [eax],cl
  41d083:	add    BYTE PTR [ebx+0x0],al
  41d086:	or     al,0x0
  41d088:	inc    ebx
  41d089:	add    BYTE PTR [eax],dl
  41d08b:	add    BYTE PTR [ebx+0x0],al
  41d08e:	adc    al,0x0
  41d090:	inc    ebx
  41d091:	add    BYTE PTR [eax],bl
  41d093:	add    BYTE PTR [ebx+0x0],al
  41d096:	sbb    al,0x0
  41d098:	inc    ebx
  41d099:	add    BYTE PTR [eax],al
  41d09b:	lock inc edx
  41d09d:	add    BYTE PTR [eax+esi*8],al
  41d0a0:	inc    edx
  41d0a1:	add    BYTE PTR [eax],cl
  41d0a3:	lock inc edx
  41d0a5:	add    BYTE PTR [eax+esi*8],cl
  41d0a8:	inc    edx
  41d0a9:	add    BYTE PTR [eax],dl
  41d0ab:	lock inc edx
  41d0ad:	add    BYTE PTR [eax+esi*8],dl
  41d0b0:	inc    edx
  41d0b1:	add    BYTE PTR [eax],bl
  41d0b3:	lock inc edx
  41d0b5:	add    BYTE PTR [eax+esi*8],bl
  41d0b8:	inc    edx
	...
  41d0c1:	add    BYTE PTR [eax],al
  41d0c3:	add    BYTE PTR [ecx+0x4d35d8],al
  41d0c9:	add    BYTE PTR [eax],al
  41d0cb:	add    BYTE PTR [edx],al
  41d0cd:	add    BYTE PTR [eax],al
  41d0cf:	add    BYTE PTR [esi],bh
  41d0d1:	add    BYTE PTR [eax],al
  41d0d3:	add    BYTE PTR [eax],al
  41d0d5:	rol    DWORD PTR [ecx],1
  41d0d7:	add    BYTE PTR [eax],al
  41d0d9:	lds    eax,FWORD PTR [ecx]
  41d0db:	add    BYTE PTR [eax],al
  41d0dd:	adc    BYTE PTR [ebx+0x0],al
  41d0e0:	add    al,0x10
  41d0e2:	inc    ebx
  41d0e3:	add    BYTE PTR [eax],cl
  41d0e5:	adc    BYTE PTR [ebx+0x0],al
  41d0e8:	or     al,0x10
  41d0ea:	inc    ebx
  41d0eb:	add    BYTE PTR [eax],dl
  41d0ed:	adc    BYTE PTR [ebx+0x0],al
  41d0f0:	adc    al,0x10
  41d0f2:	inc    ebx
  41d0f3:	add    BYTE PTR [eax],bl
  41d0f5:	adc    BYTE PTR [ebx+0x0],al
  41d0f8:	sbb    al,0x10
  41d0fa:	inc    ebx
  41d0fb:	add    BYTE PTR [eax],al
  41d0fd:	add    BYTE PTR [eax],al
  41d0ff:	add    BYTE PTR [edx+0x53],dl
  41d102:	inc    esp
  41d103:	push   ebx
  41d104:	dec    ecx
  41d105:	or     dl,cl
  41d107:	cli    
  41d108:	xor    eax,0xbd41bb24
  41d10d:	dec    ecx
  41d10e:	in     eax,dx
  41d10f:	jne    0x41d177
  41d111:	xor    DWORD PTR [ebx+ebx*8],ebp
  41d114:	add    DWORD PTR [eax],eax
  41d116:	add    BYTE PTR [eax],al
  41d118:	inc    esp
  41d119:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  41d11d:	outs   dx,WORD PTR ds:[esi]
  41d11f:	inc    esi
  41d120:	outs   dx,DWORD PTR ds:[esi]
  41d121:	ins    BYTE PTR es:[edi],dx
  41d122:	fs gs jb 0x41d16a
  41d126:	popa   
  41d127:	je     0x41d18a
  41d129:	pop    esp
  41d12a:	push   edi
  41d12b:	imul   ebp,DWORD PTR [esi+0x64],0x4973776f
  41d132:	outs   dx,BYTE PTR ds:[esi]
  41d133:	je     0x41d19a
  41d135:	jb     0x41d1a5
  41d137:	popa   
  41d138:	ins    BYTE PTR es:[edi],dx
  41d139:	inc    esi
  41d13a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x81ec558b
  41d142:	in     al,dx
  41d143:	or     BYTE PTR [ecx],al
  41d145:	add    BYTE PTR [eax],al
  41d147:	push   ebx
  41d148:	mov    eax,ebx
  41d14a:	xchg   ecx,eax
  41d14b:	mov    eax,DWORD PTR [ebp+0x8]
  41d14e:	cmp    eax,0xf89c8581
  41d153:	jne    0x41d5d8
  41d159:	mov    eax,DWORD PTR [ebp+0xc]
  41d15c:	cmp    eax,0xf89c8580
  41d161:	jne    0x41d5d8
  41d167:	mov    eax,DWORD PTR [ebp+0x24]
  41d16a:	mov    DWORD PTR [ebp-0x4],eax
  41d16d:	mov    BYTE PTR [ebp-0x18],0x1b
  41d171:	mov    BYTE PTR [ebp-0x17],0x1e
  41d175:	mov    BYTE PTR [ebp-0x16],0x5
  41d179:	mov    BYTE PTR [ebp-0x15],0x4f
  41d17d:	mov    BYTE PTR [ebp-0x14],0x4c
  41d181:	mov    BYTE PTR [ebp-0x13],0x72
  41d185:	mov    BYTE PTR [ebp-0x20],0x9
  41d189:	mov    BYTE PTR [ebp-0x1f],0xf
  41d18d:	mov    BYTE PTR [ebp-0x1e],0x19
  41d191:	mov    BYTE PTR [ebp-0x1d],0xc
  41d195:	mov    BYTE PTR [ebp-0x1c],0x4f
  41d199:	mov    BYTE PTR [ebp-0x1b],0x4c
  41d19d:	mov    BYTE PTR [ebp-0x1a],0x72
  41d1a1:	mov    BYTE PTR [ebp-0x28],0xf
  41d1a5:	mov    BYTE PTR [ebp-0x27],0x1a
  41d1a9:	mov    BYTE PTR [ebp-0x26],0x6
  41d1ad:	mov    BYTE PTR [ebp-0x25],0xb
  41d1b1:	mov    BYTE PTR [ebp-0x24],0x1d
  41d1b5:	mov    BYTE PTR [ebp-0x23],0x2
  41d1b9:	push   esi
  41d1ba:	mov    BYTE PTR [ebp-0x22],0x5
  41d1be:	mov    BYTE PTR [ebp-0x21],0x72
  41d1c2:	xor    esi,esi
  41d1c4:	mov    eax,0xf9
  41d1c9:	lea    ecx,[ebp+esi*1-0x18]
  41d1cd:	movzx  edx,BYTE PTR [ecx]
  41d1d0:	xor    edx,0x75
  41d1d3:	add    edx,eax
  41d1d5:	inc    esi
  41d1d6:	mov    BYTE PTR [ecx],dl
  41d1d8:	cmp    esi,0x6
  41d1db:	jb     0x41d1c9
  41d1dd:	xor    esi,esi
  41d1df:	lea    ecx,[ebp+esi*1-0x20]
  41d1e3:	movzx  edx,BYTE PTR [ecx]
  41d1e6:	xor    edx,0x75
  41d1e9:	add    edx,eax
  41d1eb:	inc    esi
  41d1ec:	mov    BYTE PTR [ecx],dl
  41d1ee:	cmp    esi,0x7
  41d1f1:	jb     0x41d1df
  41d1f3:	xor    esi,esi
  41d1f5:	lea    ecx,[ebp+esi*1-0x28]
  41d1f9:	movzx  edx,BYTE PTR [ecx]
  41d1fc:	xor    edx,0x75
  41d1ff:	add    edx,eax
  41d201:	inc    esi
  41d202:	mov    BYTE PTR [ecx],dl
  41d204:	cmp    esi,0x8
  41d207:	jb     0x41d1f5
  41d209:	lea    eax,[ebp-0x2c]
  41d20c:	mov    DWORD PTR [ebp-0x8],eax
  41d20f:	mov    ecx,DWORD PTR [ebp-0x8]
  41d212:	mov    eax,0x7113fcef
  41d217:	mov    DWORD PTR [ecx],eax
  41d219:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d21c:	push   edi
  41d21d:	mov    esi,0x4e20
  41d222:	mov    ebx,0x3272e4
  41d227:	cmp    ecx,eax
  41d229:	jne    0x41d2f4
  41d22f:	lea    eax,[esi+0x59]
  41d232:	mov    WORD PTR [ebp-0x78],ax
  41d236:	mov    eax,esi
  41d238:	mov    WORD PTR [ebp-0x76],ax
  41d23c:	add    eax,0x5f
  41d23f:	mov    WORD PTR [ebp-0x74],ax
  41d243:	lea    eax,[esi+0x1e]
  41d246:	mov    WORD PTR [ebp-0x72],ax
  41d24a:	add    eax,0x23
  41d24d:	mov    ecx,eax
  41d24f:	lea    eax,[esi+0x17]
  41d252:	mov    WORD PTR [ebp-0x66],ax
  41d256:	mov    eax,esi
  41d258:	mov    WORD PTR [ebp-0x64],ax
  41d25c:	add    eax,0x14
  41d25f:	mov    WORD PTR [ebp-0x62],ax
  41d263:	mov    eax,0x46d
  41d268:	mov    WORD PTR [ebp-0x60],ax
  41d26c:	mov    eax,0x567a
  41d271:	mov    WORD PTR [ebp-0x5e],ax
  41d275:	mov    eax,0x611a
  41d27a:	mov    WORD PTR [ebp-0x5c],ax
  41d27e:	lea    eax,[ebp-0xe0]
  41d284:	push   eax
  41d285:	mov    eax,DWORD PTR [ebp+0xc]
  41d288:	mov    edi,0x751089d
  41d28d:	xor    eax,edi
  41d28f:	add    eax,ebx
  41d291:	push   eax
  41d292:	mov    WORD PTR [ebp-0x70],cx
  41d296:	lea    ecx,[esi+0x1a]
  41d299:	mov    edx,ecx
  41d29b:	lea    eax,[ebp-0x78]
  41d29e:	push   eax
  41d29f:	mov    eax,DWORD PTR [ebp-0x4]
  41d2a2:	mov    eax,DWORD PTR [eax+0x198]
  41d2a8:	mov    WORD PTR [ebp-0x6e],dx
  41d2ac:	mov    edx,0x4f94
  41d2b1:	mov    WORD PTR [ebp-0x6c],dx
  41d2b5:	mov    DWORD PTR [ebp-0x6a],0x4e614e3b
  41d2bc:	mov    DWORD PTR [ebp-0x5a],0x4e3af108
  41d2c3:	mov    DWORD PTR [ebp-0xe0],0x1
  41d2cd:	mov    DWORD PTR [ebp-0xdc],0x255
  41d2d7:	push   DWORD PTR [eax]
  41d2d9:	mov    eax,DWORD PTR [ebp+0x10]
  41d2dc:	call   eax
  41d2de:	mov    DWORD PTR [ebp-0x8],eax
  41d2e1:	mov    eax,DWORD PTR [ebp-0x8]
  41d2e4:	test   eax,eax
  41d2e6:	je     0x41d2f9
  41d2e8:	xor    DWORD PTR ds:0x76586876,0x87687666
  41d2f2:	jmp    0x41d2f9
  41d2f4:	mov    edi,0x751089d
  41d2f9:	mov    eax,DWORD PTR [ebp-0x4]
  41d2fc:	mov    ecx,DWORD PTR [eax+0x18c]
  41d302:	xor    eax,eax
  41d304:	cmp    DWORD PTR [ecx],eax
  41d306:	jne    0x41d573
  41d30c:	mov    ecx,DWORD PTR [ebp-0x4]
  41d30f:	mov    ecx,DWORD PTR [ecx+0x17c]
  41d315:	mov    DWORD PTR [ecx],eax
  41d317:	mov    ecx,DWORD PTR [ebp-0x4]
  41d31a:	mov    ecx,DWORD PTR [ecx+0x180]
  41d320:	mov    DWORD PTR [ecx],eax
  41d322:	mov    eax,0x4f8f
  41d327:	mov    WORD PTR [ebp-0x9c],ax
  41d32e:	mov    eax,esi
  41d330:	mov    WORD PTR [ebp-0x9a],ax
  41d337:	mov    eax,0x4e7f
  41d33c:	mov    WORD PTR [ebp-0x98],ax
  41d343:	add    eax,0xffffffc0
  41d346:	mov    WORD PTR [ebp-0x96],ax
  41d34d:	mov    eax,0x4f90
  41d352:	mov    WORD PTR [ebp-0x94],ax
  41d359:	mov    eax,0x4e3c
  41d35e:	mov    WORD PTR [ebp-0x92],ax
  41d365:	add    eax,0x25
  41d368:	mov    WORD PTR [ebp-0x90],ax
  41d36f:	mov    eax,0x4e3a
  41d374:	mov    WORD PTR [ebp-0x8e],ax
  41d37b:	mov    eax,esi
  41d37d:	mov    WORD PTR [ebp-0x8c],ax
  41d384:	mov    eax,0x4e3b
  41d389:	mov    WORD PTR [ebp-0x8a],ax
  41d390:	mov    eax,0x99ff
  41d395:	mov    WORD PTR [ebp-0x88],ax
  41d39c:	mov    eax,0x828c
  41d3a1:	mov    WORD PTR [ebp-0x86],ax
  41d3a8:	mov    eax,0xd671
  41d3ad:	mov    WORD PTR [ebp-0x84],ax
  41d3b4:	mov    eax,0xd7ad
  41d3b9:	mov    WORD PTR [ebp-0x82],ax
  41d3c0:	mov    eax,0x27aa
  41d3c5:	mov    WORD PTR [ebp-0x80],ax
  41d3c9:	mov    eax,0x47aa
  41d3ce:	mov    WORD PTR [ebp-0x7e],ax
  41d3d2:	mov    eax,0x4e3d
  41d3d7:	push   0x8
  41d3d9:	mov    WORD PTR [ebp-0x7c],ax
  41d3dd:	mov    DWORD PTR [ebp-0x10],0xb061a0f
  41d3e4:	mov    DWORD PTR [ebp-0xc],0x7205021d
  41d3eb:	lea    eax,[ebp-0x10]
  41d3ee:	pop    ecx
  41d3ef:	mov    dl,BYTE PTR [eax]
  41d3f1:	xor    dl,0x75
  41d3f4:	sub    dl,0x7
  41d3f7:	mov    BYTE PTR [eax],dl
  41d3f9:	inc    eax
  41d3fa:	dec    ecx
  41d3fb:	jne    0x41d3ef
  41d3fd:	lea    eax,[ebp-0x10]
  41d400:	mov    DWORD PTR [ebp-0xdc],eax
  41d406:	lea    eax,[ebp-0xe0]
  41d40c:	push   eax
  41d40d:	mov    eax,DWORD PTR [ebp+0xc]
  41d410:	xor    eax,edi
  41d412:	add    eax,ebx
  41d414:	push   eax
  41d415:	mov    eax,DWORD PTR [ebp-0x4]
  41d418:	add    eax,0x66
  41d41b:	push   eax
  41d41c:	mov    eax,DWORD PTR [ebp-0x4]
  41d41f:	mov    eax,DWORD PTR [eax+0x198]
  41d425:	mov    DWORD PTR [ebp-0xe0],0x1
  41d42f:	push   DWORD PTR [eax]
  41d431:	mov    eax,DWORD PTR [ebp+0x10]
  41d434:	call   eax
  41d436:	mov    ecx,DWORD PTR [ebp+0x8]
  41d439:	xor    ecx,edi
  41d43b:	add    ecx,ebx
  41d43d:	mov    DWORD PTR [ebp-0x8],eax
  41d440:	cmp    eax,ecx
  41d442:	jne    0x41d45d
  41d444:	mov    eax,ds:0x33730bee
  41d449:	or     eax,0x22150bef
  41d44e:	mov    ds:0x33730bee,eax
  41d453:	add    eax,0x3372e90f
  41d458:	mov    ds:0x33730bee,eax
  41d45d:	mov    ecx,0x4f88
  41d462:	mov    eax,ecx
  41d464:	mov    WORD PTR [ebp-0x40],ax
  41d468:	mov    eax,0x4e75
  41d46d:	mov    edx,eax
  41d46f:	mov    WORD PTR [ebp-0x3e],dx
  41d473:	lea    edx,[ecx+0x15]
  41d476:	mov    WORD PTR [ebp-0x3c],dx
  41d47a:	add    edx,0xfffffff8
  41d47d:	mov    WORD PTR [ebp-0x3a],dx
  41d481:	lea    edx,[ecx+0xb]
  41d484:	mov    WORD PTR [ebp-0x38],dx
  41d488:	add    edx,0x1b
  41d48b:	mov    WORD PTR [ebp-0x36],dx
  41d48f:	lea    edx,[ecx+0x21]
  41d492:	mov    WORD PTR [ebp-0x34],dx
  41d496:	mov    WORD PTR [ebp-0x32],cx
  41d49a:	mov    ecx,esi
  41d49c:	mov    WORD PTR [ebp-0x30],cx
  41d4a0:	lea    ecx,[edx-0x1]
  41d4a3:	mov    edx,ecx
  41d4a5:	mov    WORD PTR [ebp-0x54],dx
  41d4a9:	mov    edx,eax
  41d4ab:	mov    WORD PTR [ebp-0x52],dx
  41d4af:	add    edx,0x8
  41d4b2:	mov    WORD PTR [ebp-0x50],dx
  41d4b6:	mov    WORD PTR [ebp-0x4e],ax
  41d4ba:	add    eax,0xfffffffe
  41d4bd:	mov    WORD PTR [ebp-0x4c],ax
  41d4c1:	lea    eax,[ecx-0x1a]
  41d4c4:	mov    WORD PTR [ebp-0x4a],ax
  41d4c8:	add    eax,0xfffffffb
  41d4cb:	mov    WORD PTR [ebp-0x48],ax
  41d4cf:	mov    WORD PTR [ebp-0x46],cx
  41d4d3:	mov    WORD PTR [ebp-0x44],si
  41d4d7:	mov    eax,DWORD PTR [ebp+0x8]
  41d4da:	movzx  ecx,WORD PTR [ebp-0x54]
  41d4de:	xor    eax,edi
  41d4e0:	add    eax,ebx
  41d4e2:	xor    eax,ecx
  41d4e4:	mov    WORD PTR [ebp-0x54],ax
  41d4e8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4eb:	movzx  ecx,WORD PTR [ebp-0x40]
  41d4ef:	xor    eax,edi
  41d4f1:	add    eax,ebx
  41d4f3:	xor    eax,ecx
  41d4f5:	mov    WORD PTR [ebp-0x40],ax
  41d4f9:	xor    eax,eax
  41d4fb:	mov    WORD PTR [ebp-0xf4],ax
  41d502:	mov    WORD PTR [ebp-0x108],ax
  41d509:	mov    edi,DWORD PTR [ebp+0x24]
  41d50c:	lea    eax,[ebp-0xf4]
  41d512:	lea    edx,[ebp-0x54]
  41d515:	mov    DWORD PTR [ebp-0xe0],0x2
  41d51f:	mov    DWORD PTR [ebp-0xdc],eax
  41d525:	call   0x41ff39
  41d52a:	mov    DWORD PTR [ebp-0xd8],eax
  41d530:	lea    eax,[ebp-0xe0]
  41d536:	push   eax
  41d537:	mov    eax,DWORD PTR [ebp+0xc]
  41d53a:	xor    eax,0x751089d
  41d53f:	add    eax,ebx
  41d541:	push   eax
  41d542:	lea    eax,[ebp-0x9c]
  41d548:	push   eax
  41d549:	push   DWORD PTR [ebp-0x8]
  41d54c:	mov    eax,DWORD PTR [ebp+0x10]
  41d54f:	call   eax
  41d551:	mov    edi,DWORD PTR [ebp+0x24]
  41d554:	lea    eax,[ebp-0x108]
  41d55a:	lea    edx,[ebp-0x40]
  41d55d:	mov    DWORD PTR [ebp-0xdc],eax
  41d563:	call   0x41ff39
  41d568:	mov    DWORD PTR [ebp-0xd8],eax
  41d56e:	mov    edi,0x751089d
  41d573:	mov    eax,DWORD PTR [ebp+0x14]
  41d576:	push   DWORD PTR [ebp-0x4]
  41d579:	push   DWORD PTR [ebp+0x20]
  41d57c:	push   DWORD PTR [ebp+0x1c]
  41d57f:	push   DWORD PTR [ebp+0x18]
  41d582:	push   DWORD PTR [ebp+0x10]
  41d585:	push   DWORD PTR [ebp+0x8]
  41d588:	push   DWORD PTR [ebp+0xc]
  41d58b:	call   0x41e7d8
  41d590:	test   eax,eax
  41d592:	je     0x41d5d6
  41d594:	add    DWORD PTR [ebp-0x4],eax
  41d597:	push   DWORD PTR [ebp-0x4]
  41d59a:	lea    esi,[ebp+0x4]
  41d59d:	call   0x41d9c6
  41d5a2:	mov    eax,DWORD PTR [ebp-0x4]
  41d5a5:	mov    eax,DWORD PTR [eax+0x1c8]
  41d5ab:	mov    eax,DWORD PTR [eax]
  41d5ad:	xor    eax,edi
  41d5af:	add    eax,ebx
  41d5b1:	mov    eax,DWORD PTR [ebp-0x4]
  41d5b4:	jne    0x41d5cc
  41d5b6:	mov    ecx,DWORD PTR [ebp-0x4]
  41d5b9:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d5bf:	push   DWORD PTR [ecx]
  41d5c1:	mov    eax,DWORD PTR [eax+0x1d8]
  41d5c7:	call   DWORD PTR [eax+0x28]
  41d5ca:	jmp    0x41d5d6
  41d5cc:	mov    eax,DWORD PTR [eax+0x17c]
  41d5d2:	mov    eax,DWORD PTR [eax]
  41d5d4:	add    DWORD PTR [esi],eax
  41d5d6:	pop    edi
  41d5d7:	pop    esi
  41d5d8:	pop    ebx
  41d5d9:	leave  
  41d5da:	ret    0x20
  41d5dd:	push   edi
  41d5de:	push   esi
  41d5df:	push   ebx
  41d5e0:	push   ebp
  41d5e1:	mov    ebp,esp
  41d5e3:	mov    eax,DWORD PTR [ebp+0x24]
  41d5e6:	add    DWORD PTR [ebp+0x28],eax
  41d5e9:	push   eax
  41d5ea:	cld    
  41d5eb:	mov    esi,DWORD PTR [ebp+0x18]
  41d5ee:	add    DWORD PTR [ebp+0x1c],esi
  41d5f1:	push   esi
  41d5f2:	mov    esi,DWORD PTR [ebp+0x14]
  41d5f5:	lods   eax,DWORD PTR ds:[esi]
  41d5f6:	xchg   edx,eax
  41d5f7:	push   edx
  41d5f8:	mov    cl,BYTE PTR [esi-0x2]
  41d5fb:	or     eax,0xffffffff
  41d5fe:	shl    eax,cl
  41d600:	not    eax
  41d602:	push   eax
  41d603:	mov    cl,dh
  41d605:	or     eax,0xffffffff
  41d608:	shl    eax,cl
  41d60a:	not    eax
  41d60c:	push   eax
  41d60d:	add    cl,dl
  41d60f:	mov    edi,esi
  41d611:	sub    esp,0xc
  41d614:	sub    eax,eax
  41d616:	inc    eax
  41d617:	push   eax
  41d618:	push   eax
  41d619:	push   eax
  41d61a:	push   eax
  41d61b:	push   eax
  41d61c:	push   edi
  41d61d:	sub    esi,esi
  41d61f:	push   esi
  41d620:	or     ebx,0xffffffff
  41d623:	mov    eax,0x300
  41d628:	shl    eax,cl
  41d62a:	lea    ecx,[eax+0x736]
  41d630:	mov    eax,0x4000400
  41d635:	shr    ecx,1
  41d637:	rep stos DWORD PTR es:[edi],eax
  41d639:	push   0x5
  41d63b:	pop    ecx
  41d63c:	call   0x41d927
  41d641:	loop   0x41d63c
  41d643:	lea    esi,[esi]
  41d645:	lea    edi,[edi]
  41d647:	mov    edi,DWORD PTR [ebp-0x4]
  41d64a:	mov    eax,DWORD PTR [ebp-0x10]
  41d64d:	sub    edi,DWORD PTR [ebp+0x24]
  41d650:	and    eax,edi
  41d652:	mov    DWORD PTR [ebp-0x18],eax
  41d655:	mov    al,0x0
  41d657:	call   0x41d93f
  41d65c:	jne    0x41d6f7
  41d662:	mov    cl,BYTE PTR [ebp-0xc]
  41d665:	and    edi,DWORD PTR [ebp-0x14]
  41d668:	shl    edi,cl
  41d66a:	sub    cl,0x8
  41d66d:	neg    cl
  41d66f:	shr    esi,cl
  41d671:	pop    eax
  41d672:	add    edi,esi
  41d674:	pop    esi
  41d675:	lea    edi,[edi+edi*2]
  41d678:	shl    edi,0x8
  41d67b:	cmp    al,0x7
  41d67d:	pop    edx
  41d67e:	lea    ecx,[esi+edi*2+0xe6c]
  41d685:	push   ecx
  41d686:	push   esi
  41d687:	mov    esi,0x100
  41d68c:	push   eax
  41d68d:	mov    al,0x1
  41d68f:	jb     0x41d6c5
  41d691:	mov    edi,DWORD PTR [ebp-0x4]
  41d694:	sub    edi,DWORD PTR [ebp-0x24]
  41d697:	movzx  edi,BYTE PTR [edi]
  41d69a:	mov    ebp,DWORD PTR [ebp-0x34]
  41d69d:	shl    edi,1
  41d69f:	mov    ecx,esi
  41d6a1:	and    esi,edi
  41d6a3:	add    ecx,esi
  41d6a5:	lea    ebp,[ebp+ecx*2+0x0]
  41d6a9:	call   0x41d95e
  41d6ae:	mov    ecx,eax
  41d6b0:	shr    esi,0x8
  41d6b3:	and    ecx,0x1
  41d6b6:	cmp    esi,ecx
  41d6b8:	mov    esi,0x100
  41d6bd:	jne    0x41d6cd
  41d6bf:	cmp    eax,esi
  41d6c1:	jb     0x41d69a
  41d6c3:	jmp    0x41d6d9
  41d6c5:	mov    ebp,DWORD PTR [ebp-0x34]
  41d6c8:	call   0x41d95e
  41d6cd:	inc    eax
  41d6ce:	inc    esi
  41d6cf:	sub    eax,0x1
  41d6d2:	sub    esi,0x1
  41d6d5:	cmp    eax,esi
  41d6d7:	jb     0x41d6c5
  41d6d9:	pop    edx
  41d6da:	inc    edx
  41d6db:	cmp    edx,0x5
  41d6de:	dec    edx
  41d6df:	mov    ecx,edx
  41d6e1:	jb     0x41d6f2
  41d6e3:	inc    edx
  41d6e4:	cmp    edx,0xb
  41d6e7:	dec    edx
  41d6e8:	mov    cl,0x4
  41d6ea:	dec    cl
  41d6ec:	jb     0x41d6f2
  41d6ee:	mov    cl,0x7
  41d6f0:	dec    cl
  41d6f2:	sub    edx,ecx
  41d6f4:	push   edx
  41d6f5:	jmp    0x41d746
  41d6f7:	mov    al,0xc1
  41d6f9:	dec    al
  41d6fb:	call   0x41d94f
  41d700:	jne    0x41d716
  41d702:	pop    eax
  41d703:	pop    edi
  41d704:	pop    edx
  41d705:	pop    ecx
  41d706:	pop    edx
  41d707:	pop    ecx
  41d708:	push   DWORD PTR [esp]
  41d70b:	push   ecx
  41d70c:	push   edx
  41d70d:	mov    edx,0x664
  41d712:	mov    cl,0x0
  41d714:	jmp    0x41d789
  41d716:	mov    al,0xcd
  41d718:	dec    al
  41d71a:	call   0x41d94f
  41d71f:	jne    0x41d74f
  41d721:	mov    al,0xf1
  41d723:	dec    al
  41d725:	call   0x41d93f
  41d72a:	jne    0x41d77f
  41d72c:	pop    eax
  41d72d:	cmp    al,0x7
  41d72f:	mov    al,0x9
  41d731:	jb     0x41d735
  41d733:	mov    al,0xb
  41d735:	push   eax
  41d736:	mov    esi,DWORD PTR [ebp-0x4]
  41d739:	sub    esi,DWORD PTR [ebp-0x24]
  41d73c:	cmp    esi,DWORD PTR [ebp+0x24]
  41d73f:	jb     0x41d916
  41d745:	lods   al,BYTE PTR ds:[esi]
  41d746:	mov    edi,DWORD PTR [ebp-0x4]
  41d749:	stos   BYTE PTR es:[edi],al
  41d74a:	jmp    0x41d8dd
  41d74f:	mov    al,0xd8
  41d751:	call   0x41d94f
  41d756:	mov    esi,DWORD PTR [ebp-0x28]
  41d759:	je     0x41d776
  41d75b:	mov    al,0xe4
  41d75d:	call   0x41d94f
  41d762:	mov    esi,DWORD PTR [ebp-0x2c]
  41d765:	je     0x41d770
  41d767:	mov    esi,DWORD PTR [ebp-0x30]
  41d76a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d76d:	mov    DWORD PTR [ebp-0x30],ecx
  41d770:	mov    ecx,DWORD PTR [ebp-0x28]
  41d773:	mov    DWORD PTR [ebp-0x2c],ecx
  41d776:	mov    ecx,DWORD PTR [ebp-0x24]
  41d779:	mov    DWORD PTR [ebp-0x28],ecx
  41d77c:	mov    DWORD PTR [ebp-0x24],esi
  41d77f:	pop    eax
  41d780:	pop    edi
  41d781:	pop    ecx
  41d782:	mov    edx,0xa68
  41d787:	mov    cl,0x8
  41d789:	add    edx,edi
  41d78b:	push   edx
  41d78c:	push   edi
  41d78d:	cmp    al,0x7
  41d78f:	mov    al,cl
  41d791:	jb     0x41d795
  41d793:	add    al,0x3
  41d795:	push   eax
  41d796:	mov    ebp,DWORD PTR [ebp-0x34]
  41d799:	call   0x41d95c
  41d79e:	jne    0x41d7b4
  41d7a0:	mov    eax,DWORD PTR [ebp-0x18]
  41d7a3:	mov    edi,DWORD PTR [ebp-0x34]
  41d7a6:	shl    eax,0x3
  41d7a9:	sub    ecx,ecx
  41d7ab:	push   0x8
  41d7ad:	pop    esi
  41d7ae:	lea    edi,[edi+eax*2+0x4]
  41d7b2:	jmp    0x41d7e9
  41d7b4:	mov    ebp,DWORD PTR [ebp-0x34]
  41d7b7:	add    ebp,0x2
  41d7ba:	call   0x41d95c
  41d7bf:	jne    0x41d7d9
  41d7c1:	mov    eax,DWORD PTR [ebp-0x18]
  41d7c4:	mov    edi,DWORD PTR [ebp-0x34]
  41d7c7:	shl    eax,0x3
  41d7ca:	push   0x8
  41d7cc:	pop    ecx
  41d7cd:	push   0x8
  41d7cf:	pop    esi
  41d7d0:	lea    edi,[edi+eax*2+0x104]
  41d7d7:	jmp    0x41d7e9
  41d7d9:	mov    edi,0x204
  41d7de:	add    edi,DWORD PTR [ebp-0x34]
  41d7e1:	push   0x10
  41d7e3:	pop    ecx
  41d7e4:	mov    esi,0x100
  41d7e9:	mov    DWORD PTR [ebp-0x1c],ecx
  41d7ec:	sub    eax,eax
  41d7ee:	inc    eax
  41d7ef:	mov    ebp,edi
  41d7f1:	call   0x41d95e
  41d7f6:	mov    ecx,eax
  41d7f8:	sub    ecx,esi
  41d7fa:	jb     0x41d7ef
  41d7fc:	add    DWORD PTR [ebp-0x1c],ecx
  41d7ff:	cmp    DWORD PTR [ebp-0x3c],0x4
  41d803:	jae    0x41d8b9
  41d809:	add    DWORD PTR [ebp-0x3c],0x7
  41d80d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d810:	cmp    ecx,0x4
  41d813:	jb     0x41d818
  41d815:	push   0x3
  41d817:	pop    ecx
  41d818:	mov    edi,DWORD PTR [ebp-0x38]
  41d81b:	shl    ecx,0x6
  41d81e:	sub    eax,eax
  41d820:	inc    eax
  41d821:	push   0x40
  41d823:	pop    esi
  41d824:	lea    edi,[edi+ecx*2+0x360]
  41d82b:	mov    ebp,edi
  41d82d:	call   0x41d95e
  41d832:	mov    ecx,eax
  41d834:	sub    ecx,esi
  41d836:	jb     0x41d82b
  41d838:	mov    DWORD PTR [ebp-0x18],ecx
  41d83b:	mov    DWORD PTR [ebp-0x24],ecx
  41d83e:	cmp    ecx,0x4
  41d841:	jb     0x41d8b6
  41d843:	mov    esi,ecx
  41d845:	and    DWORD PTR [ebp-0x24],0x1
  41d849:	shr    esi,1
  41d84b:	or     DWORD PTR [ebp-0x24],0x2
  41d84f:	dec    esi
  41d850:	cmp    ecx,0xe
  41d853:	jae    0x41d86e
  41d855:	mov    eax,0x2af
  41d85a:	sub    eax,ecx
  41d85c:	mov    ecx,esi
  41d85e:	shl    BYTE PTR [ebp-0x24],cl
  41d861:	add    eax,DWORD PTR [ebp-0x24]
  41d864:	shl    eax,1
  41d866:	add    eax,DWORD PTR [ebp-0x38]
  41d869:	mov    DWORD PTR [ebp-0x34],eax
  41d86c:	jmp    0x41d89b
  41d86e:	sub    esi,0x4
  41d871:	call   0x41d91b
  41d876:	shr    ebx,1
  41d878:	shl    DWORD PTR [ebp-0x24],1
  41d87b:	cmp    DWORD PTR [ebp-0x20],ebx
  41d87e:	jb     0x41d886
  41d880:	inc    DWORD PTR [ebp-0x24]
  41d883:	sub    DWORD PTR [ebp-0x20],ebx
  41d886:	dec    esi
  41d887:	jne    0x41d871
  41d889:	mov    eax,0x644
  41d88e:	add    eax,DWORD PTR [ebp-0x38]
  41d891:	mov    DWORD PTR [ebp-0x34],eax
  41d894:	shl    DWORD PTR [ebp-0x24],0x4
  41d898:	push   0x4
  41d89a:	pop    esi
  41d89b:	sub    edi,edi
  41d89d:	inc    edi
  41d89e:	mov    eax,edi
  41d8a0:	mov    ebp,DWORD PTR [ebp-0x34]
  41d8a3:	call   0x41d95e
  41d8a8:	test   al,0x1
  41d8aa:	je     0x41d8af
  41d8ac:	or     DWORD PTR [ebp-0x24],edi
  41d8af:	shl    edi,1
  41d8b1:	dec    esi
  41d8b2:	jne    0x41d8a0
  41d8b4:	jmp    0x41d8b6
  41d8b6:	inc    DWORD PTR [ebp-0x24]
  41d8b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d8bc:	add    ecx,0x2
  41d8bf:	mov    edi,DWORD PTR [ebp-0x4]
  41d8c2:	mov    eax,edi
  41d8c4:	sub    eax,DWORD PTR [ebp+0x24]
  41d8c7:	cmp    DWORD PTR [ebp-0x24],eax
  41d8ca:	ja     0x41d916
  41d8cc:	mov    esi,edi
  41d8ce:	sub    esi,DWORD PTR [ebp-0x24]
  41d8d1:	mov    edx,DWORD PTR [ebp+0x28]
  41d8d4:	lods   al,BYTE PTR ds:[esi]
  41d8d5:	stos   BYTE PTR es:[edi],al
  41d8d6:	cmp    edi,edx
  41d8d8:	jae    0x41d8dd
  41d8da:	dec    ecx
  41d8db:	jne    0x41d8d4
  41d8dd:	mov    DWORD PTR [ebp-0x4],edi
  41d8e0:	movzx  esi,al
  41d8e3:	cmp    edi,DWORD PTR [ebp+0x28]
  41d8e6:	jb     0x41d647
  41d8ec:	call   0x41d91b
  41d8f1:	sub    eax,eax
  41d8f3:	lea    ebp,[esp+0x3c]
  41d8f7:	mov    edx,DWORD PTR [ebp+0x20]
  41d8fa:	mov    esi,DWORD PTR [ebp-0x8]
  41d8fd:	sub    esi,DWORD PTR [ebp+0x18]
  41d900:	mov    DWORD PTR [edx],esi
  41d902:	mov    edx,DWORD PTR [ebp+0x2c]
  41d905:	mov    edi,DWORD PTR [ebp-0x4]
  41d908:	sub    edi,DWORD PTR [ebp+0x24]
  41d90b:	mov    DWORD PTR [edx],edi
  41d90d:	leave  
  41d90e:	pop    ebx
  41d90f:	pop    esi
  41d910:	pop    edi
  41d911:	ret    0x1c
  41d914:	pop    esi
  41d915:	pop    eax
  41d916:	sub    eax,eax
  41d918:	inc    eax
  41d919:	jmp    0x41d8f3
  41d91b:	cmp    ebx,0x1000000
  41d921:	jb     0x41d924
  41d923:	ret    
  41d924:	shl    ebx,0x8
  41d927:	push   esi
  41d928:	mov    esi,DWORD PTR [ebp-0x8]
  41d92b:	cmp    esi,DWORD PTR [ebp+0x1c]
  41d92e:	jae    0x41d914
  41d930:	mov    eax,DWORD PTR [ebp-0x20]
  41d933:	shl    eax,0x8
  41d936:	lods   al,BYTE PTR ds:[esi]
  41d937:	mov    DWORD PTR [ebp-0x20],eax
  41d93a:	mov    DWORD PTR [ebp-0x8],esi
  41d93d:	pop    esi
  41d93e:	ret    
  41d93f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d942:	movzx  eax,al
  41d945:	shl    ecx,0x4
  41d948:	add    eax,DWORD PTR [ebp-0x18]
  41d94b:	add    eax,ecx
  41d94d:	jmp    0x41d955
  41d94f:	movzx  eax,al
  41d952:	add    eax,DWORD PTR [ebp-0x3c]
  41d955:	mov    ebp,DWORD PTR [ebp-0x38]
  41d958:	lea    ebp,[ebp+eax*2+0x0]
  41d95c:	sub    eax,eax
  41d95e:	lea    ebp,[ebp+eax*2+0x0]
  41d962:	cmp    ebx,0x1000000
  41d968:	jae    0x41d986
  41d96a:	mov    ecx,DWORD PTR [esp+0x38]
  41d96e:	shl    DWORD PTR [esp+0x20],0x8
  41d973:	cmp    ecx,DWORD PTR [esp+0x5c]
  41d977:	jae    0x41d915
  41d979:	mov    dl,BYTE PTR [ecx]
  41d97b:	inc    DWORD PTR [esp+0x38]
  41d97f:	shl    ebx,0x8
  41d982:	mov    BYTE PTR [esp+0x20],dl
  41d986:	mov    ecx,ebx
  41d988:	movzx  edx,WORD PTR [ebp+0x0]
  41d98c:	shr    ecx,0xb
  41d98f:	imul   ecx,edx
  41d992:	cmp    DWORD PTR [esp+0x20],ecx
  41d996:	jae    0x41d9af
  41d998:	mov    ebx,ecx
  41d99a:	mov    ecx,0x800
  41d99f:	sub    ecx,edx
  41d9a1:	shr    ecx,0x5
  41d9a4:	add    WORD PTR [ebp+0x0],cx
  41d9a8:	add    eax,eax
  41d9aa:	lea    ebp,[esp+0x40]
  41d9ae:	ret    
  41d9af:	shr    edx,0x5
  41d9b2:	sub    DWORD PTR [esp+0x20],ecx
  41d9b6:	sub    ebx,ecx
  41d9b8:	sub    WORD PTR [ebp+0x0],dx
  41d9bc:	add    eax,eax
  41d9be:	add    eax,0x1
  41d9c1:	lea    ebp,[esp+0x40]
  41d9c5:	ret    
  41d9c6:	push   ebp
  41d9c7:	mov    ebp,esp
  41d9c9:	sub    esp,0x12c
  41d9cf:	push   ebx
  41d9d0:	push   esi
  41d9d1:	push   edi
  41d9d2:	mov    DWORD PTR [ebp-0x10],0xf89c8581
  41d9d9:	mov    DWORD PTR [ebp-0x18],0xf89c8580
  41d9e0:	mov    eax,DWORD PTR [ebp+0x8]
  41d9e3:	mov    DWORD PTR [ebp+0x8],eax
  41d9e6:	mov    ecx,DWORD PTR [ebp-0x10]
  41d9e9:	mov    ebx,0x751089d
  41d9ee:	xor    ecx,ebx
  41d9f0:	mov    eax,0x3272e4
  41d9f5:	add    ecx,eax
  41d9f7:	mov    DWORD PTR [ebp-0x2c],ecx
  41d9fa:	mov    ecx,DWORD PTR [ebp-0x10]
  41d9fd:	xor    ecx,ebx
  41d9ff:	add    ecx,eax
  41da01:	mov    DWORD PTR [ebp-0x3c],ecx
  41da04:	mov    ecx,DWORD PTR [ebp-0x10]
  41da07:	xor    ecx,ebx
  41da09:	add    ecx,eax
  41da0b:	mov    DWORD PTR [ebp-0x40],ecx
  41da0e:	mov    ecx,DWORD PTR [ebp-0x10]
  41da11:	xor    ecx,ebx
  41da13:	add    ecx,eax
  41da15:	mov    DWORD PTR [ebp-0xd8],ecx
  41da1b:	mov    DWORD PTR [ebp-0x50],0xf89f0581
  41da22:	mov    DWORD PTR [ebp-0x40],0xf89cb581
  41da29:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  41da30:	push   0x25
  41da32:	pop    ecx
  41da33:	mov    DWORD PTR [ebp-0x38],ecx
  41da36:	mov    DWORD PTR [ebp-0x38],ecx
  41da39:	push   0x65
  41da3b:	pop    ecx
  41da3c:	mov    DWORD PTR [ebp-0x38],ecx
  41da3f:	mov    DWORD PTR [ebp-0x38],ecx
  41da42:	mov    DWORD PTR [ebp-0x38],0x4d
  41da49:	mov    DWORD PTR [ebp-0x38],0x43
  41da50:	mov    ecx,DWORD PTR [ebp-0x10]
  41da53:	xor    ecx,ebx
  41da55:	add    ecx,eax
  41da57:	mov    DWORD PTR [ebp-0x38],ecx
  41da5a:	mov    ecx,DWORD PTR [ebp-0x10]
  41da5d:	xor    ecx,ebx
  41da5f:	add    ecx,eax
  41da61:	mov    DWORD PTR [ebp-0x38],ecx
  41da64:	mov    DWORD PTR [ebp-0x28],0x258
  41da6b:	mov    DWORD PTR [ebp-0x20],0x36
  41da72:	mov    DWORD PTR [ebp-0x14],0x7a
  41da79:	lea    edi,[ebp-0x10c]
  41da7f:	lea    esi,[ebp-0x12c]
  41da85:	call   0x41e747
  41da8a:	dec    DWORD PTR [ebp-0x14]
  41da8d:	jne    0x41da79
  41da8f:	dec    DWORD PTR [ebp-0x20]
  41da92:	jne    0x41da72
  41da94:	dec    DWORD PTR [ebp-0x28]
  41da97:	jne    0x41da6b
  41da99:	mov    DWORD PTR [ebp-0x28],0x400e
  41daa0:	mov    eax,DWORD PTR [ebp-0x10]
  41daa3:	xor    eax,ebx
  41daa5:	mov    esi,0x3272e4
  41daaa:	add    eax,esi
  41daac:	mov    DWORD PTR [ebp-0x1c],eax
  41daaf:	mov    eax,DWORD PTR [ebp-0x10]
  41dab2:	and    DWORD PTR [ebp-0x94],0x0
  41dab9:	xor    eax,ebx
  41dabb:	add    eax,esi
  41dabd:	mov    DWORD PTR [ebp-0x34],eax
  41dac0:	mov    eax,fs:0x18
  41dac6:	mov    DWORD PTR [ebp-0x94],eax
  41dacc:	mov    eax,DWORD PTR [eax+0x30]
  41dacf:	mov    DWORD PTR [ebp-0xcc],eax
  41dad5:	mov    eax,DWORD PTR [eax+0xc]
  41dad8:	mov    DWORD PTR [ebp-0xc0],eax
  41dade:	mov    eax,DWORD PTR [ebp+0x8]
  41dae1:	lea    ecx,[ebp-0x94]
  41dae7:	mov    DWORD PTR [eax+0x1a0],ecx
  41daed:	mov    eax,DWORD PTR [ebp+0x8]
  41daf0:	lea    ecx,[ebp-0xcc]
  41daf6:	mov    DWORD PTR [eax+0x1a4],ecx
  41dafc:	mov    eax,DWORD PTR [ebp+0x8]
  41daff:	push   DWORD PTR [ebp+0x8]
  41db02:	lea    ecx,[ebp-0xc0]
  41db08:	mov    DWORD PTR [eax+0x1a8],ecx
  41db0e:	call   0x41ff0a
  41db13:	mov    ecx,DWORD PTR [ebp-0x10]
  41db16:	xor    ecx,ebx
  41db18:	add    ecx,esi
  41db1a:	cmp    ecx,eax
  41db1c:	je     0x41de9f
  41db22:	mov    eax,DWORD PTR [ebp+0x8]
  41db25:	mov    eax,DWORD PTR [eax+0x194]
  41db2b:	mov    ecx,DWORD PTR [eax]
  41db2d:	mov    eax,DWORD PTR [ebp+0x8]
  41db30:	mov    eax,DWORD PTR [eax+0x194]
  41db36:	mov    eax,DWORD PTR [eax]
  41db38:	add    eax,DWORD PTR [ecx+0x3c]
  41db3b:	mov    ecx,DWORD PTR [ebp+0x8]
  41db3e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41db44:	lea    edx,[ebp-0xec]
  41db4a:	push   edx
  41db4b:	mov    edx,DWORD PTR [ebp+0x8]
  41db4e:	mov    edx,DWORD PTR [edx+0x18c]
  41db54:	mov    edx,DWORD PTR [edx]
  41db56:	add    edx,DWORD PTR [eax+0x88]
  41db5c:	push   0x4
  41db5e:	push   DWORD PTR [eax+0x8c]
  41db64:	push   edx
  41db65:	call   DWORD PTR [ecx+0x1c]
  41db68:	push   DWORD PTR [ebp+0x8]
  41db6b:	xor    eax,eax
  41db6d:	mov    DWORD PTR [ebp-0xa8],0x1a3f0f25
  41db77:	mov    DWORD PTR [ebp-0xa4],0x3260c1d
  41db81:	mov    DWORD PTR [ebp-0xa0],0x3d0c190b
  41db8b:	mov    BYTE PTR [ebp-0x9c],0x72
  41db92:	lea    edi,[ebp-0x9b]
  41db98:	stos   DWORD PTR es:[edi],eax
  41db99:	stos   WORD PTR es:[edi],ax
  41db9b:	stos   BYTE PTR es:[edi],al
  41db9c:	xor    eax,eax
  41db9e:	mov    DWORD PTR [ebp-0xbc],0x1a3f0f25
  41dba8:	mov    DWORD PTR [ebp-0xb8],0x3260c1d
  41dbb2:	mov    DWORD PTR [ebp-0xb4],0x2b0c190b
  41dbbc:	mov    BYTE PTR [ebp-0xb0],0x72
  41dbc3:	lea    edi,[ebp-0xaf]
  41dbc9:	stos   DWORD PTR es:[edi],eax
  41dbca:	stos   WORD PTR es:[edi],ax
  41dbcc:	stos   BYTE PTR es:[edi],al
  41dbcd:	mov    edi,DWORD PTR [ebp+0x8]
  41dbd0:	mov    eax,DWORD PTR [ebp+0x8]
  41dbd3:	mov    edx,DWORD PTR [eax+0x1b8]
  41dbd9:	mov    DWORD PTR [ebp-0x68],0xc0e0f06
  41dbe0:	mov    DWORD PTR [ebp-0x64],0x502011f
  41dbe7:	mov    WORD PTR [ebp-0x60],0x723d
  41dbed:	mov    DWORD PTR [ebp-0x90],0x1a3f0f25
  41dbf7:	mov    DWORD PTR [ebp-0x8c],0x63d0c1d
  41dc01:	mov    DWORD PTR [ebp-0x88],0x201d1a02
  41dc0b:	mov    DWORD PTR [ebp-0x84],0xc190109
  41dc15:	mov    DWORD PTR [ebp-0x80],0x723d1f05
  41dc1c:	mov    DWORD PTR [ebp-0x7c],0x1a3f0f25
  41dc23:	mov    DWORD PTR [ebp-0x78],0x63d0c1d
  41dc2a:	mov    DWORD PTR [ebp-0x74],0x201d1a02
  41dc31:	mov    DWORD PTR [ebp-0x70],0xc190109
  41dc38:	mov    DWORD PTR [ebp-0x6c],0x722b1f05
  41dc3f:	call   0x41ff39
  41dc44:	push   eax
  41dc45:	mov    eax,DWORD PTR [ebp+0x8]
  41dc48:	mov    eax,DWORD PTR [eax+0x1a8]
  41dc4e:	push   DWORD PTR [eax]
  41dc50:	call   0x41fbda
  41dc55:	test   eax,eax
  41dc57:	jne    0x41dca9
  41dc59:	mov    eax,DWORD PTR [ebp+0x8]
  41dc5c:	mov    eax,DWORD PTR [eax+0x1d8]
  41dc62:	mov    edi,DWORD PTR [ebp+0x8]
  41dc65:	add    eax,0x4
  41dc68:	mov    DWORD PTR [ebp-0x24],eax
  41dc6b:	mov    eax,DWORD PTR [ebp+0x8]
  41dc6e:	mov    edx,DWORD PTR [eax+0x1b8]
  41dc74:	call   0x41ff39
  41dc79:	push   eax
  41dc7a:	mov    eax,DWORD PTR [ebp-0x24]
  41dc7d:	call   DWORD PTR [eax]
  41dc7f:	test   eax,eax
  41dc81:	jne    0x41dca9
  41dc83:	mov    eax,DWORD PTR [ebp+0x8]
  41dc86:	mov    eax,DWORD PTR [eax+0x1d8]
  41dc8c:	mov    edi,DWORD PTR [ebp+0x8]
  41dc8f:	add    eax,0x10
  41dc92:	mov    DWORD PTR [ebp-0x24],eax
  41dc95:	mov    eax,DWORD PTR [ebp+0x8]
  41dc98:	mov    edx,DWORD PTR [eax+0x1b8]
  41dc9e:	call   0x41ff39
  41dca3:	push   eax
  41dca4:	mov    eax,DWORD PTR [ebp-0x24]
  41dca7:	call   DWORD PTR [eax]
  41dca9:	mov    eax,DWORD PTR [ebp-0x10]
  41dcac:	mov    ecx,DWORD PTR [ebp-0x28]
  41dcaf:	xor    eax,ebx
  41dcb1:	add    eax,esi
  41dcb3:	cmp    eax,ecx
  41dcb5:	je     0x41de78
  41dcbb:	mov    eax,DWORD PTR [ebp-0x18]
  41dcbe:	xor    eax,ebx
  41dcc0:	mov    ecx,0xffcd8d1c
  41dcc5:	sub    ecx,eax
  41dcc7:	add    ecx,DWORD PTR [ebp-0x28]
  41dcca:	mov    eax,DWORD PTR [ebp-0x1c]
  41dccd:	cmp    eax,ecx
  41dccf:	ja     0x41de78
  41dcd5:	mov    DWORD PTR [ebp-0x20],0x0
  41dcdc:	push   DWORD PTR [ebp+0x8]
  41dcdf:	mov    edi,DWORD PTR [ebp+0x8]
  41dce2:	mov    eax,DWORD PTR [ebp+0x8]
  41dce5:	mov    edx,DWORD PTR [eax+0x1b4]
  41dceb:	call   0x41ff39
  41dcf0:	push   eax
  41dcf1:	mov    eax,DWORD PTR [ebp+0x8]
  41dcf4:	mov    eax,DWORD PTR [eax+0x1a8]
  41dcfa:	push   DWORD PTR [eax]
  41dcfc:	call   0x41fbda
  41dd01:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd04:	mov    ecx,DWORD PTR [ecx+0x19c]
  41dd0a:	mov    DWORD PTR [ecx],eax
  41dd0c:	mov    eax,DWORD PTR [ebp+0x8]
  41dd0f:	mov    edi,DWORD PTR [eax+0x1d8]
  41dd15:	mov    esi,DWORD PTR [ebp+0x8]
  41dd18:	xor    eax,eax
  41dd1a:	lea    edx,[ebp-0x7c]
  41dd1d:	call   0x41ff6f
  41dd22:	push   eax
  41dd23:	mov    eax,DWORD PTR [ebp+0x8]
  41dd26:	mov    eax,DWORD PTR [eax+0x19c]
  41dd2c:	push   DWORD PTR [eax]
  41dd2e:	call   DWORD PTR [edi+0x8]
  41dd31:	mov    DWORD PTR [ebp-0x24],eax
  41dd34:	mov    eax,DWORD PTR [ebp+0x8]
  41dd37:	mov    edi,DWORD PTR [eax+0x1d8]
  41dd3d:	mov    esi,DWORD PTR [ebp+0x8]
  41dd40:	xor    eax,eax
  41dd42:	lea    edx,[ebp-0x90]
  41dd48:	call   0x41ff6f
  41dd4d:	push   eax
  41dd4e:	mov    eax,DWORD PTR [ebp+0x8]
  41dd51:	mov    eax,DWORD PTR [eax+0x19c]
  41dd57:	push   DWORD PTR [eax]
  41dd59:	call   DWORD PTR [edi+0x8]
  41dd5c:	mov    eax,DWORD PTR [ebp+0x8]
  41dd5f:	mov    edi,DWORD PTR [eax+0x1d8]
  41dd65:	mov    esi,DWORD PTR [ebp+0x8]
  41dd68:	xor    eax,eax
  41dd6a:	lea    edx,[ebp-0xa8]
  41dd70:	call   0x41ff6f
  41dd75:	push   eax
  41dd76:	mov    eax,DWORD PTR [ebp+0x8]
  41dd79:	mov    eax,DWORD PTR [eax+0x19c]
  41dd7f:	push   DWORD PTR [eax]
  41dd81:	call   DWORD PTR [edi+0x8]
  41dd84:	and    DWORD PTR [ebp-0x8],0x0
  41dd88:	mov    DWORD PTR [ebp-0x44],eax
  41dd8b:	mov    eax,DWORD PTR [ebp-0x8]
  41dd8e:	and    eax,0x7
  41dd91:	add    eax,0x31
  41dd94:	push   eax
  41dd95:	call   DWORD PTR [ebp-0x24]
  41dd98:	test   eax,eax
  41dd9a:	je     0x41ddde
  41dd9c:	mov    eax,DWORD PTR [ebp-0x8]
  41dd9f:	push   0x19
  41dda1:	xor    edx,edx
  41dda3:	pop    ecx
  41dda4:	div    ecx
  41dda6:	add    dl,0x41
  41dda9:	movzx  eax,dl
  41ddac:	push   eax
  41ddad:	call   DWORD PTR [ebp-0x44]
  41ddb0:	test   eax,eax
  41ddb2:	jne    0x41ddde
  41ddb4:	mov    eax,DWORD PTR [ebp+0x8]
  41ddb7:	mov    edi,DWORD PTR [eax+0x1d8]
  41ddbd:	mov    esi,DWORD PTR [ebp+0x8]
  41ddc0:	xor    eax,eax
  41ddc2:	lea    edx,[ebp-0x68]
  41ddc5:	call   0x41ff6f
  41ddca:	push   eax
  41ddcb:	mov    eax,DWORD PTR [ebp+0x8]
  41ddce:	mov    eax,DWORD PTR [eax+0x198]
  41ddd4:	push   DWORD PTR [eax]
  41ddd6:	call   DWORD PTR [edi+0x8]
  41ddd9:	mov    DWORD PTR [ebp-0x14],eax
  41dddc:	jmp    0x41dde2
  41ddde:	and    DWORD PTR [ebp-0x14],0x0
  41dde2:	inc    DWORD PTR [ebp-0x8]
  41dde5:	cmp    DWORD PTR [ebp-0x8],0x10
  41dde9:	jb     0x41dd8b
  41ddeb:	mov    eax,DWORD PTR [ebp-0x18]
  41ddee:	mov    esi,DWORD PTR [ebp+0x8]
  41ddf1:	xor    eax,ebx
  41ddf3:	mov    edi,0x3272e4
  41ddf8:	add    eax,edi
  41ddfa:	lea    edx,[ebp-0x10c]
  41de00:	call   0x41ff6f
  41de05:	push   eax
  41de06:	mov    eax,DWORD PTR [ebp-0x10]
  41de09:	mov    esi,DWORD PTR [ebp+0x8]
  41de0c:	xor    eax,ebx
  41de0e:	add    eax,edi
  41de10:	lea    edx,[ebp-0x12c]
  41de16:	call   0x41ff6f
  41de1b:	push   eax
  41de1c:	call   DWORD PTR [ebp-0x14]
  41de1f:	mov    ecx,DWORD PTR [ebp-0x10]
  41de22:	xor    ecx,ebx
  41de24:	add    ecx,edi
  41de26:	cmp    ecx,eax
  41de28:	jne    0x41de31
  41de2a:	mov    DWORD PTR [ebp-0x20],0x1
  41de31:	mov    eax,DWORD PTR [ebp-0x18]
  41de34:	mov    ecx,DWORD PTR [ebp-0x1c]
  41de37:	xor    eax,ebx
  41de39:	lea    eax,[eax+ecx*1+0x3272e4]
  41de40:	mov    DWORD PTR [ebp-0x1c],eax
  41de43:	mov    eax,DWORD PTR [ebp-0x20]
  41de46:	test   eax,eax
  41de48:	je     0x41de5c
  41de4a:	mov    eax,DWORD PTR [ebp-0x18]
  41de4d:	mov    ecx,DWORD PTR [ebp-0x34]
  41de50:	xor    eax,ebx
  41de52:	lea    eax,[eax+ecx*1+0x3272e4]
  41de59:	mov    DWORD PTR [ebp-0x34],eax
  41de5c:	mov    eax,DWORD PTR [ebp-0x18]
  41de5f:	xor    eax,ebx
  41de61:	mov    ecx,0xffcd8d1c
  41de66:	sub    ecx,eax
  41de68:	add    ecx,DWORD PTR [ebp-0x28]
  41de6b:	mov    eax,DWORD PTR [ebp-0x1c]
  41de6e:	cmp    eax,ecx
  41de70:	jbe    0x41dcd5
  41de76:	mov    esi,edi
  41de78:	mov    eax,DWORD PTR [ebp-0x34]
  41de7b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41de7e:	cmp    ecx,eax
  41de80:	jne    0x41de93
  41de82:	push   DWORD PTR [ebp+0x8]
  41de85:	lea    eax,[ebp-0x3c]
  41de88:	push   eax
  41de89:	call   0x4209df
  41de8e:	mov    DWORD PTR [ebp-0x2c],eax
  41de91:	jmp    0x41de9f
  41de93:	mov    eax,DWORD PTR [ebp-0x2c]
  41de96:	mov    ecx,DWORD PTR [ebp-0x18]
  41de99:	xor    ecx,ebx
  41de9b:	add    ecx,esi
  41de9d:	xor    DWORD PTR [eax],ecx
  41de9f:	mov    eax,DWORD PTR [ebp-0x10]
  41dea2:	mov    ecx,DWORD PTR [ebp-0x2c]
  41dea5:	xor    eax,ebx
  41dea7:	add    eax,esi
  41dea9:	cmp    eax,ecx
  41deab:	je     0x41e625
  41deb1:	mov    eax,DWORD PTR [ebp-0x10]
  41deb4:	mov    ecx,DWORD PTR [ebp-0x3c]
  41deb7:	xor    eax,ebx
  41deb9:	add    eax,esi
  41debb:	cmp    eax,ecx
  41debd:	je     0x41e625
  41dec3:	mov    eax,DWORD PTR [ebp-0x10]
  41dec6:	xor    eax,ebx
  41dec8:	add    eax,esi
  41deca:	jmp    0x41dee8
  41decc:	mov    edi,DWORD PTR [ebp-0x2c]
  41decf:	mov    cl,al
  41ded1:	and    cl,0x1f
  41ded4:	or     dl,0xff
  41ded7:	sub    dl,cl
  41ded9:	add    BYTE PTR [edi+eax*1],dl
  41dedc:	mov    ecx,DWORD PTR [ebp-0x18]
  41dedf:	xor    ecx,ebx
  41dee1:	lea    eax,[eax+ecx*1+0x3272e4]
  41dee8:	mov    ecx,DWORD PTR [ebp-0x3c]
  41deeb:	cmp    eax,ecx
  41deed:	jb     0x41decc
  41deef:	mov    eax,DWORD PTR [ebp-0x3c]
  41def2:	mov    DWORD PTR [ebp-0x28],eax
  41def5:	mov    eax,DWORD PTR [ebp-0x2c]
  41def8:	mov    DWORD PTR [ebp-0x34],0xf89c8581
  41deff:	mov    DWORD PTR [ebp-0xd4],eax
  41df05:	mov    edi,0xf89c8580
  41df0a:	mov    DWORD PTR [ebp-0x30],edi
  41df0d:	mov    eax,DWORD PTR [ebp-0x34]
  41df10:	xor    eax,ebx
  41df12:	add    eax,esi
  41df14:	mov    DWORD PTR [ebp-0xc],eax
  41df17:	mov    eax,DWORD PTR [ebp-0x34]
  41df1a:	xor    eax,ebx
  41df1c:	add    eax,esi
  41df1e:	mov    DWORD PTR [ebp-0x8],eax
  41df21:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  41df28:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  41df2f:	mov    eax,DWORD PTR [ebp-0x34]
  41df32:	mov    ecx,DWORD PTR [ebp-0x28]
  41df35:	xor    eax,ebx
  41df37:	add    eax,esi
  41df39:	cmp    ecx,eax
  41df3b:	je     0x41e13a
  41df41:	jmp    0x41e116
  41df46:	mov    ecx,DWORD PTR [ebp-0xc]
  41df49:	mov    eax,DWORD PTR [ebp-0x28]
  41df4c:	sub    eax,ecx
  41df4e:	mov    ecx,DWORD PTR [ebp-0x44]
  41df51:	xor    ecx,ebx
  41df53:	add    ecx,esi
  41df55:	xor    edx,edx
  41df57:	div    ecx
  41df59:	mov    DWORD PTR [ebp-0x8],eax
  41df5c:	mov    eax,DWORD PTR [ebp-0x4c]
  41df5f:	mov    ecx,DWORD PTR [ebp-0x8]
  41df62:	xor    eax,ebx
  41df64:	add    eax,esi
  41df66:	cmp    ecx,eax
  41df68:	jbe    0x41df74
  41df6a:	mov    eax,DWORD PTR [ebp-0x4c]
  41df6d:	xor    eax,ebx
  41df6f:	add    eax,esi
  41df71:	mov    DWORD PTR [ebp-0x8],eax
  41df74:	mov    eax,DWORD PTR [ebp-0x44]
  41df77:	mov    ecx,DWORD PTR [ebp-0x8]
  41df7a:	xor    eax,ebx
  41df7c:	add    eax,esi
  41df7e:	imul   eax,ecx
  41df81:	mov    DWORD PTR [ebp-0x8],eax
  41df84:	mov    eax,DWORD PTR [ebp-0x34]
  41df87:	mov    ecx,DWORD PTR [ebp-0x8]
  41df8a:	xor    eax,ebx
  41df8c:	add    eax,esi
  41df8e:	cmp    ecx,eax
  41df90:	je     0x41e104
  41df96:	mov    eax,DWORD PTR [ebp-0x8]
  41df99:	mov    DWORD PTR [ebp-0x14],eax
  41df9c:	mov    eax,DWORD PTR [ebp-0xc]
  41df9f:	add    eax,DWORD PTR [ebp-0xd4]
  41dfa5:	mov    DWORD PTR [ebp-0x24],0xf89c8581
  41dfac:	mov    DWORD PTR [ebp-0x20],edi
  41dfaf:	mov    DWORD PTR [ebp-0xe8],0xf89c8583
  41dfb9:	mov    DWORD PTR [ebp-0x8],eax
  41dfbc:	mov    DWORD PTR [ebp-0x38],0xf89c8582
  41dfc3:	mov    DWORD PTR [ebp-0x1c],edi
  41dfc6:	mov    eax,DWORD PTR [ebp-0x24]
  41dfc9:	xor    eax,ebx
  41dfcb:	add    eax,esi
  41dfcd:	jmp    0x41e0c3
  41dfd2:	mov    DWORD PTR [ebp-0xe0],0xf89c85bb
  41dfdc:	mov    DWORD PTR [ebp-0xc4],0xf89c85ad
  41dfe6:	mov    eax,DWORD PTR [ebp-0x1c]
  41dfe9:	mov    ecx,DWORD PTR [ebp-0x48]
  41dfec:	xor    eax,ebx
  41dfee:	add    eax,esi
  41dff0:	imul   eax,ecx
  41dff3:	mov    ecx,DWORD PTR [ebp-0x8]
  41dff6:	mov    al,BYTE PTR [eax+ecx*1]
  41dff9:	mov    BYTE PTR [ebp-0x2],al
  41dffc:	mov    eax,DWORD PTR [ebp-0x1c]
  41dfff:	mov    ecx,DWORD PTR [ebp-0x48]
  41e002:	xor    eax,ebx
  41e004:	add    eax,esi
  41e006:	imul   eax,ecx
  41e009:	mov    ecx,DWORD PTR [ebp-0xe8]
  41e00f:	xor    ecx,ebx
  41e011:	add    eax,ecx
  41e013:	mov    ecx,DWORD PTR [ebp-0x8]
  41e016:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e4]
  41e01e:	mov    ecx,DWORD PTR [ebp-0xe0]
  41e024:	xor    ecx,ebx
  41e026:	lea    eax,[ecx+eax*1+0x3272e4]
  41e02d:	movzx  ecx,BYTE PTR [ebp-0x2]
  41e031:	xor    ecx,eax
  41e033:	mov    BYTE PTR [ebp-0x2],cl
  41e036:	mov    al,BYTE PTR [ebp-0x2]
  41e039:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e03c:	mov    edx,DWORD PTR [ebp-0x48]
  41e03f:	xor    ecx,ebx
  41e041:	add    ecx,esi
  41e043:	imul   ecx,edx
  41e046:	mov    edx,DWORD PTR [ebp-0x8]
  41e049:	mov    BYTE PTR [ecx+edx*1],al
  41e04c:	mov    eax,DWORD PTR [ebp-0x1c]
  41e04f:	mov    ecx,DWORD PTR [ebp-0x48]
  41e052:	xor    eax,ebx
  41e054:	add    eax,esi
  41e056:	imul   eax,ecx
  41e059:	mov    ecx,DWORD PTR [ebp-0x8]
  41e05c:	mov    al,BYTE PTR [eax+ecx*1]
  41e05f:	mov    BYTE PTR [ebp-0x2],al
  41e062:	mov    eax,DWORD PTR [ebp-0x1c]
  41e065:	mov    ecx,DWORD PTR [ebp-0x48]
  41e068:	xor    eax,ebx
  41e06a:	add    eax,esi
  41e06c:	imul   eax,ecx
  41e06f:	mov    ecx,DWORD PTR [ebp-0x20]
  41e072:	xor    ecx,ebx
  41e074:	add    eax,ecx
  41e076:	mov    ecx,DWORD PTR [ebp-0x8]
  41e079:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e4]
  41e081:	mov    ecx,DWORD PTR [ebp-0xc4]
  41e087:	xor    ecx,ebx
  41e089:	lea    eax,[ecx+eax*1+0x3272e4]
  41e090:	movzx  ecx,BYTE PTR [ebp-0x2]
  41e094:	xor    ecx,eax
  41e096:	mov    BYTE PTR [ebp-0x2],cl
  41e099:	mov    al,BYTE PTR [ebp-0x2]
  41e09c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e09f:	mov    edx,DWORD PTR [ebp-0x48]
  41e0a2:	xor    ecx,ebx
  41e0a4:	add    ecx,esi
  41e0a6:	imul   ecx,edx
  41e0a9:	mov    edx,DWORD PTR [ebp-0x8]
  41e0ac:	mov    BYTE PTR [ecx+edx*1],al
  41e0af:	mov    eax,DWORD PTR [ebp-0x38]
  41e0b2:	mov    ecx,DWORD PTR [ebp-0x20]
  41e0b5:	xor    eax,ebx
  41e0b7:	xor    ecx,ebx
  41e0b9:	add    eax,esi
  41e0bb:	add    ecx,esi
  41e0bd:	imul   eax,ecx
  41e0c0:	add    eax,DWORD PTR [ebp-0x48]
  41e0c3:	mov    DWORD PTR [ebp-0x48],eax
  41e0c6:	mov    eax,DWORD PTR [ebp-0x48]
  41e0c9:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0cc:	cmp    ecx,eax
  41e0ce:	jb     0x41dfd2
  41e0d4:	mov    eax,DWORD PTR [ebp-0x20]
  41e0d7:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0da:	xor    eax,ebx
  41e0dc:	add    eax,esi
  41e0de:	imul   eax,ecx
  41e0e1:	mov    ecx,DWORD PTR [ebp-0x24]
  41e0e4:	xor    ecx,ebx
  41e0e6:	add    ecx,esi
  41e0e8:	or     eax,ecx
  41e0ea:	mov    ecx,DWORD PTR [ebp-0x30]
  41e0ed:	xor    ecx,ebx
  41e0ef:	add    eax,ecx
  41e0f1:	mov    ecx,DWORD PTR [ebp-0x30]
  41e0f4:	xor    ecx,ebx
  41e0f6:	add    eax,ecx
  41e0f8:	mov    ecx,DWORD PTR [ebp-0xc]
  41e0fb:	lea    eax,[eax+ecx*1+0x64e5c8]
  41e102:	jmp    0x41e113
  41e104:	mov    eax,DWORD PTR [ebp-0x30]
  41e107:	mov    ecx,DWORD PTR [ebp-0xc]
  41e10a:	xor    eax,ebx
  41e10c:	lea    eax,[eax+ecx*1+0x3272e4]
  41e113:	mov    DWORD PTR [ebp-0xc],eax
  41e116:	mov    eax,DWORD PTR [ebp-0x30]
  41e119:	xor    eax,ebx
  41e11b:	mov    ecx,0xffcd8d1c
  41e120:	sub    ecx,eax
  41e122:	add    ecx,DWORD PTR [ebp-0x28]
  41e125:	mov    eax,DWORD PTR [ebp-0x30]
  41e128:	mov    edx,DWORD PTR [ebp-0xc]
  41e12b:	xor    eax,ebx
  41e12d:	add    eax,esi
  41e12f:	imul   eax,edx
  41e132:	cmp    eax,ecx
  41e134:	jbe    0x41df46
  41e13a:	mov    eax,DWORD PTR [ebp-0x10]
  41e13d:	mov    ecx,DWORD PTR [ebp-0x3c]
  41e140:	mov    eax,DWORD PTR [ebp+0x8]
  41e143:	mov    edx,DWORD PTR [ebp-0x54]
  41e146:	mov    eax,DWORD PTR [eax+0x1d8]
  41e14c:	xor    edx,ebx
  41e14e:	add    edx,esi
  41e150:	push   edx
  41e151:	mov    edx,DWORD PTR [ebp-0x40]
  41e154:	xor    edx,ebx
  41e156:	add    edx,esi
  41e158:	push   edx
  41e159:	push   ecx
  41e15a:	mov    DWORD PTR [ebp-0x38],ecx
  41e15d:	mov    ecx,DWORD PTR [ebp-0x10]
  41e160:	xor    ecx,ebx
  41e162:	add    ecx,esi
  41e164:	push   ecx
  41e165:	call   DWORD PTR [eax+0x14]
  41e168:	mov    edi,eax
  41e16a:	mov    eax,DWORD PTR [ebp-0x10]
  41e16d:	xor    eax,ebx
  41e16f:	add    eax,esi
  41e171:	cmp    eax,edi
  41e173:	je     0x41e1ce
  41e175:	mov    eax,DWORD PTR [ebp-0x10]
  41e178:	jmp    0x41e19b
  41e17a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e17d:	xor    eax,ebx
  41e17f:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e4]
  41e186:	mov    BYTE PTR [eax+edi*1+0x3272e4],cl
  41e18d:	mov    ecx,DWORD PTR [ebp-0x18]
  41e190:	xor    ecx,ebx
  41e192:	lea    eax,[ecx+eax*1+0x3272e4]
  41e199:	xor    eax,ebx
  41e19b:	mov    ecx,DWORD PTR [ebp-0x3c]
  41e19e:	sub    ecx,esi
  41e1a0:	xor    ecx,ebx
  41e1a2:	cmp    eax,ecx
  41e1a4:	jne    0x41e17a
  41e1a6:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a9:	mov    ecx,DWORD PTR [ebp-0x50]
  41e1ac:	mov    eax,DWORD PTR [eax+0x1d8]
  41e1b2:	xor    ecx,ebx
  41e1b4:	add    ecx,esi
  41e1b6:	push   ecx
  41e1b7:	mov    ecx,DWORD PTR [ebp-0x10]
  41e1ba:	xor    ecx,ebx
  41e1bc:	add    ecx,esi
  41e1be:	push   ecx
  41e1bf:	push   DWORD PTR [ebp-0x2c]
  41e1c2:	call   DWORD PTR [eax+0x18]
  41e1c5:	mov    eax,DWORD PTR [ebp-0x38]
  41e1c8:	mov    DWORD PTR [ebp-0x2c],edi
  41e1cb:	mov    DWORD PTR [ebp-0x3c],eax
  41e1ce:	mov    eax,DWORD PTR [ebp-0x2c]
  41e1d1:	mov    DWORD PTR [ebp-0x14],eax
  41e1d4:	mov    eax,DWORD PTR [ebp-0x18]
  41e1d7:	mov    ecx,DWORD PTR [ebp-0x10]
  41e1da:	xor    eax,ebx
  41e1dc:	add    eax,esi
  41e1de:	mov    DWORD PTR [ebp-0x5c],0x3d2a222a
  41e1e5:	mov    DWORD PTR [ebp-0x58],0x272a3f2a
  41e1ec:	jmp    0x41e21f
  41e1ee:	mov    edx,DWORD PTR [ebp-0x14]
  41e1f1:	mov    edi,ecx
  41e1f3:	xor    edi,ebx
  41e1f5:	mov    cl,BYTE PTR [ebp+edi*1+0x327288]
  41e1fc:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e4]
  41e204:	xor    cl,0x75
  41e207:	sub    cl,0x7
  41e20a:	movzx  ecx,cl
  41e20d:	cmp    edx,ecx
  41e20f:	jne    0x41e229
  41e211:	mov    ecx,DWORD PTR [ebp-0x18]
  41e214:	xor    ecx,ebx
  41e216:	lea    ecx,[ecx+edi*1+0x3272e4]
  41e21d:	xor    ecx,ebx
  41e21f:	cmp    ecx,0xf89c85b9
  41e225:	jne    0x41e1ee
  41e227:	jmp    0x41e230
  41e229:	mov    eax,DWORD PTR [ebp-0x10]
  41e22c:	xor    eax,ebx
  41e22e:	add    eax,esi
  41e230:	mov    ecx,DWORD PTR [ebp-0x10]
  41e233:	xor    ecx,ebx
  41e235:	add    ecx,esi
  41e237:	cmp    ecx,eax
  41e239:	je     0x41e3af
  41e23f:	mov    eax,DWORD PTR [ebp-0x14]
  41e242:	mov    eax,DWORD PTR [eax+0x8]
  41e245:	mov    DWORD PTR [ebp-0xc],0xf89c8581
  41e24c:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41e253:	mov    DWORD PTR [ebp-0x44],0xf89cb581
  41e25a:	mov    DWORD PTR [ebp-0x24],0xf89c85bd
  41e261:	mov    DWORD PTR [ebp-0x20],eax
  41e264:	mov    eax,DWORD PTR [ebp+0x8]
  41e267:	mov    ecx,DWORD PTR [ebp-0x24]
  41e26a:	xor    ecx,ebx
  41e26c:	add    ecx,esi
  41e26e:	push   ecx
  41e26f:	mov    ecx,DWORD PTR [ebp-0x44]
  41e272:	mov    eax,DWORD PTR [eax+0x1d8]
  41e278:	xor    ecx,ebx
  41e27a:	add    ecx,esi
  41e27c:	push   ecx
  41e27d:	mov    ecx,DWORD PTR [ebp-0x40]
  41e280:	xor    ecx,ebx
  41e282:	add    ecx,esi
  41e284:	push   ecx
  41e285:	mov    ecx,DWORD PTR [ebp-0xc]
  41e288:	xor    ecx,ebx
  41e28a:	add    ecx,esi
  41e28c:	push   ecx
  41e28d:	call   DWORD PTR [eax+0x14]
  41e290:	mov    edi,eax
  41e292:	mov    eax,DWORD PTR [ebp+0x8]
  41e295:	mov    ecx,DWORD PTR [ebp-0x24]
  41e298:	mov    eax,DWORD PTR [eax+0x1d8]
  41e29e:	xor    ecx,ebx
  41e2a0:	add    ecx,esi
  41e2a2:	push   ecx
  41e2a3:	mov    ecx,DWORD PTR [ebp-0x44]
  41e2a6:	xor    ecx,ebx
  41e2a8:	add    ecx,esi
  41e2aa:	push   ecx
  41e2ab:	mov    ecx,DWORD PTR [ebp-0xc]
  41e2ae:	push   DWORD PTR [ebp-0x20]
  41e2b1:	xor    ecx,ebx
  41e2b3:	add    ecx,esi
  41e2b5:	push   ecx
  41e2b6:	call   DWORD PTR [eax+0x14]
  41e2b9:	mov    ecx,DWORD PTR [ebp-0xc]
  41e2bc:	xor    ecx,ebx
  41e2be:	add    ecx,esi
  41e2c0:	mov    DWORD PTR [ebp-0x24],eax
  41e2c3:	cmp    ecx,edi
  41e2c5:	je     0x41e652
  41e2cb:	mov    ecx,DWORD PTR [ebp-0xc]
  41e2ce:	xor    ecx,ebx
  41e2d0:	add    ecx,esi
  41e2d2:	cmp    ecx,eax
  41e2d4:	je     0x41e652
  41e2da:	mov    DWORD PTR [ebp-0x40],0xf89c8582
  41e2e1:	mov    DWORD PTR [ebp-0x54],0xf89c8583
  41e2e8:	mov    ecx,DWORD PTR [ebp-0x40]
  41e2eb:	xor    cl,0x9d
  41e2ee:	sub    cl,0x1c
  41e2f1:	mov    BYTE PTR [edi],cl
  41e2f3:	mov    ecx,DWORD PTR [ebp-0xc]
  41e2f6:	xor    cl,0x9d
  41e2f9:	sub    cl,0x1c
  41e2fc:	mov    BYTE PTR [edi+0x1],cl
  41e2ff:	mov    ecx,DWORD PTR [ebp-0x54]
  41e302:	xor    cl,0x9d
  41e305:	sub    cl,0x1c
  41e308:	mov    BYTE PTR [edi+0x2],cl
  41e30b:	and    DWORD PTR [ebp-0xc8],0x0
  41e312:	and    DWORD PTR [ebp-0xdc],0x0
  41e319:	lea    ecx,[ebp-0xdc]
  41e31f:	push   ecx
  41e320:	push   DWORD PTR [ebp-0x20]
  41e323:	push   eax
  41e324:	lea    eax,[ebp-0xc8]
  41e32a:	push   eax
  41e32b:	mov    eax,DWORD PTR [ebp-0x14]
  41e32e:	push   DWORD PTR [eax+0xc]
  41e331:	mov    eax,DWORD PTR [ebp-0x2c]
  41e334:	add    eax,0x10
  41e337:	push   eax
  41e338:	push   edi
  41e339:	call   0x41d5dd
  41e33e:	mov    DWORD PTR [ebp-0x40],eax
  41e341:	mov    eax,DWORD PTR [ebp+0x8]
  41e344:	mov    ecx,DWORD PTR [ebp-0x50]
  41e347:	mov    eax,DWORD PTR [eax+0x1d8]
  41e34d:	xor    ecx,ebx
  41e34f:	add    ecx,esi
  41e351:	push   ecx
  41e352:	mov    ecx,DWORD PTR [ebp-0xc]
  41e355:	xor    ecx,ebx
  41e357:	add    ecx,esi
  41e359:	push   ecx
  41e35a:	push   edi
  41e35b:	call   DWORD PTR [eax+0x18]
  41e35e:	mov    eax,DWORD PTR [ebp-0x40]
  41e361:	add    eax,0xffcd8d1c
  41e366:	xor    eax,ebx
  41e368:	cmp    eax,0xf89c8581
  41e36d:	mov    eax,DWORD PTR [ebp+0x8]
  41e370:	mov    eax,DWORD PTR [eax+0x1d8]
  41e376:	mov    ecx,DWORD PTR [ebp-0x50]
  41e379:	jne    0x41e39c
  41e37b:	xor    ecx,ebx
  41e37d:	add    ecx,esi
  41e37f:	push   ecx
  41e380:	mov    ecx,DWORD PTR [ebp-0xc]
  41e383:	xor    ecx,ebx
  41e385:	add    ecx,esi
  41e387:	push   ecx
  41e388:	push   DWORD PTR [ebp-0x2c]
  41e38b:	call   DWORD PTR [eax+0x18]
  41e38e:	mov    eax,DWORD PTR [ebp-0x24]
  41e391:	mov    DWORD PTR [ebp-0x2c],eax
  41e394:	mov    eax,DWORD PTR [ebp-0x20]
  41e397:	mov    DWORD PTR [ebp-0x3c],eax
  41e39a:	jmp    0x41e3af
  41e39c:	xor    ecx,ebx
  41e39e:	add    ecx,esi
  41e3a0:	push   ecx
  41e3a1:	mov    ecx,DWORD PTR [ebp-0xc]
  41e3a4:	xor    ecx,ebx
  41e3a6:	add    ecx,esi
  41e3a8:	push   ecx
  41e3a9:	push   DWORD PTR [ebp-0x24]
  41e3ac:	call   DWORD PTR [eax+0x18]
  41e3af:	mov    eax,DWORD PTR [ebp-0x3c]
  41e3b2:	mov    DWORD PTR [ebp-0x34],eax
  41e3b5:	mov    eax,DWORD PTR [ebp-0x2c]
  41e3b8:	mov    DWORD PTR [ebp-0x28],0xf89c8581
  41e3bf:	mov    DWORD PTR [ebp-0x40],eax
  41e3c2:	mov    edi,0xf89c8580
  41e3c7:	mov    DWORD PTR [ebp-0x30],edi
  41e3ca:	mov    eax,DWORD PTR [ebp-0x28]
  41e3cd:	xor    eax,ebx
  41e3cf:	add    eax,esi
  41e3d1:	mov    DWORD PTR [ebp-0xc],eax
  41e3d4:	mov    eax,DWORD PTR [ebp-0x28]
  41e3d7:	xor    eax,ebx
  41e3d9:	add    eax,esi
  41e3db:	mov    DWORD PTR [ebp-0x14],eax
  41e3de:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  41e3e5:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  41e3ec:	mov    eax,DWORD PTR [ebp-0x28]
  41e3ef:	mov    ecx,DWORD PTR [ebp-0x34]
  41e3f2:	xor    eax,ebx
  41e3f4:	add    eax,esi
  41e3f6:	cmp    ecx,eax
  41e3f8:	je     0x41e5ee
  41e3fe:	jmp    0x41e5ca
  41e403:	mov    ecx,DWORD PTR [ebp-0xc]
  41e406:	mov    eax,DWORD PTR [ebp-0x34]
  41e409:	sub    eax,ecx
  41e40b:	mov    ecx,DWORD PTR [ebp-0x44]
  41e40e:	xor    ecx,ebx
  41e410:	add    ecx,esi
  41e412:	xor    edx,edx
  41e414:	div    ecx
  41e416:	mov    DWORD PTR [ebp-0x14],eax
  41e419:	mov    eax,DWORD PTR [ebp-0x24]
  41e41c:	mov    ecx,DWORD PTR [ebp-0x14]
  41e41f:	xor    eax,ebx
  41e421:	add    eax,esi
  41e423:	cmp    ecx,eax
  41e425:	jbe    0x41e431
  41e427:	mov    eax,DWORD PTR [ebp-0x24]
  41e42a:	xor    eax,ebx
  41e42c:	add    eax,esi
  41e42e:	mov    DWORD PTR [ebp-0x14],eax
  41e431:	mov    eax,DWORD PTR [ebp-0x44]
  41e434:	mov    ecx,DWORD PTR [ebp-0x14]
  41e437:	xor    eax,ebx
  41e439:	add    eax,esi
  41e43b:	imul   eax,ecx
  41e43e:	mov    DWORD PTR [ebp-0x14],eax
  41e441:	mov    eax,DWORD PTR [ebp-0x28]
  41e444:	mov    ecx,DWORD PTR [ebp-0x14]
  41e447:	xor    eax,ebx
  41e449:	add    eax,esi
  41e44b:	cmp    ecx,eax
  41e44d:	je     0x41e5b8
  41e453:	mov    eax,DWORD PTR [ebp-0x14]
  41e456:	mov    DWORD PTR [ebp-0x20],eax
  41e459:	mov    eax,DWORD PTR [ebp-0xc]
  41e45c:	add    eax,DWORD PTR [ebp-0x40]
  41e45f:	mov    DWORD PTR [ebp-0x4c],0xf89c8581
  41e466:	mov    DWORD PTR [ebp-0x14],edi
  41e469:	mov    DWORD PTR [ebp-0x54],0xf89c8583
  41e470:	mov    DWORD PTR [ebp-0x1c],eax
  41e473:	mov    DWORD PTR [ebp-0x38],0xf89c8582
  41e47a:	mov    DWORD PTR [ebp-0x8],edi
  41e47d:	mov    eax,DWORD PTR [ebp-0x4c]
  41e480:	xor    eax,ebx
  41e482:	add    eax,esi
  41e484:	jmp    0x41e577
  41e489:	mov    DWORD PTR [ebp-0xe4],0xf89c85bb
  41e493:	mov    DWORD PTR [ebp-0xd0],0xf89c85ad
  41e49d:	mov    eax,DWORD PTR [ebp-0x8]
  41e4a0:	mov    ecx,DWORD PTR [ebp-0x18]
  41e4a3:	xor    eax,ebx
  41e4a5:	add    eax,esi
  41e4a7:	imul   eax,ecx
  41e4aa:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e4ad:	mov    al,BYTE PTR [eax+ecx*1]
  41e4b0:	mov    BYTE PTR [ebp-0x1],al
  41e4b3:	mov    eax,DWORD PTR [ebp-0x8]
  41e4b6:	mov    ecx,DWORD PTR [ebp-0x18]
  41e4b9:	xor    eax,ebx
  41e4bb:	add    eax,esi
  41e4bd:	imul   eax,ecx
  41e4c0:	mov    ecx,DWORD PTR [ebp-0x54]
  41e4c3:	xor    ecx,ebx
  41e4c5:	add    eax,ecx
  41e4c7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e4ca:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e4]
  41e4d2:	mov    ecx,DWORD PTR [ebp-0xe4]
  41e4d8:	xor    ecx,ebx
  41e4da:	lea    eax,[ecx+eax*1+0x3272e4]
  41e4e1:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e4e5:	xor    ecx,eax
  41e4e7:	mov    BYTE PTR [ebp-0x1],cl
  41e4ea:	mov    al,BYTE PTR [ebp-0x1]
  41e4ed:	mov    ecx,DWORD PTR [ebp-0x8]
  41e4f0:	mov    edx,DWORD PTR [ebp-0x18]
  41e4f3:	xor    ecx,ebx
  41e4f5:	add    ecx,esi
  41e4f7:	imul   ecx,edx
  41e4fa:	mov    edx,DWORD PTR [ebp-0x1c]
  41e4fd:	mov    BYTE PTR [ecx+edx*1],al
  41e500:	mov    eax,DWORD PTR [ebp-0x8]
  41e503:	mov    ecx,DWORD PTR [ebp-0x18]
  41e506:	xor    eax,ebx
  41e508:	add    eax,esi
  41e50a:	imul   eax,ecx
  41e50d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e510:	mov    al,BYTE PTR [eax+ecx*1]
  41e513:	mov    BYTE PTR [ebp-0x1],al
  41e516:	mov    eax,DWORD PTR [ebp-0x8]
  41e519:	mov    ecx,DWORD PTR [ebp-0x18]
  41e51c:	xor    eax,ebx
  41e51e:	add    eax,esi
  41e520:	imul   eax,ecx
  41e523:	mov    ecx,DWORD PTR [ebp-0x14]
  41e526:	xor    ecx,ebx
  41e528:	add    eax,ecx
  41e52a:	mov    ecx,DWORD PTR [ebp-0x1c]
  41e52d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e4]
  41e535:	mov    ecx,DWORD PTR [ebp-0xd0]
  41e53b:	xor    ecx,ebx
  41e53d:	lea    eax,[ecx+eax*1+0x3272e4]
  41e544:	movzx  ecx,BYTE PTR [ebp-0x1]
  41e548:	xor    ecx,eax
  41e54a:	mov    BYTE PTR [ebp-0x1],cl
  41e54d:	mov    al,BYTE PTR [ebp-0x1]
  41e550:	mov    ecx,DWORD PTR [ebp-0x8]
  41e553:	mov    edx,DWORD PTR [ebp-0x18]
  41e556:	xor    ecx,ebx
  41e558:	add    ecx,esi
  41e55a:	imul   ecx,edx
  41e55d:	mov    edx,DWORD PTR [ebp-0x1c]
  41e560:	mov    BYTE PTR [ecx+edx*1],al
  41e563:	mov    eax,DWORD PTR [ebp-0x38]
  41e566:	mov    ecx,DWORD PTR [ebp-0x14]
  41e569:	xor    eax,ebx
  41e56b:	xor    ecx,ebx
  41e56d:	add    eax,esi
  41e56f:	add    ecx,esi
  41e571:	imul   eax,ecx
  41e574:	add    eax,DWORD PTR [ebp-0x18]
  41e577:	mov    DWORD PTR [ebp-0x18],eax
  41e57a:	mov    eax,DWORD PTR [ebp-0x18]
  41e57d:	mov    ecx,DWORD PTR [ebp-0x20]
  41e580:	cmp    ecx,eax
  41e582:	jb     0x41e489
  41e588:	mov    eax,DWORD PTR [ebp-0x14]
  41e58b:	mov    ecx,DWORD PTR [ebp-0x20]
  41e58e:	xor    eax,ebx
  41e590:	add    eax,esi
  41e592:	imul   eax,ecx
  41e595:	mov    ecx,DWORD PTR [ebp-0x4c]
  41e598:	xor    ecx,ebx
  41e59a:	add    ecx,esi
  41e59c:	or     eax,ecx
  41e59e:	mov    ecx,DWORD PTR [ebp-0x30]
  41e5a1:	xor    ecx,ebx
  41e5a3:	add    eax,ecx
  41e5a5:	mov    ecx,DWORD PTR [ebp-0x30]
  41e5a8:	xor    ecx,ebx
  41e5aa:	add    eax,ecx
  41e5ac:	mov    ecx,DWORD PTR [ebp-0xc]
  41e5af:	lea    eax,[eax+ecx*1+0x64e5c8]
  41e5b6:	jmp    0x41e5c7
  41e5b8:	mov    eax,DWORD PTR [ebp-0x30]
  41e5bb:	mov    ecx,DWORD PTR [ebp-0xc]
  41e5be:	xor    eax,ebx
  41e5c0:	lea    eax,[eax+ecx*1+0x3272e4]
  41e5c7:	mov    DWORD PTR [ebp-0xc],eax
  41e5ca:	mov    eax,DWORD PTR [ebp-0x30]
  41e5cd:	xor    eax,ebx
  41e5cf:	mov    ecx,0xffcd8d1c
  41e5d4:	sub    ecx,eax
  41e5d6:	add    ecx,DWORD PTR [ebp-0x34]
  41e5d9:	mov    eax,DWORD PTR [ebp-0x30]
  41e5dc:	mov    edx,DWORD PTR [ebp-0xc]
  41e5df:	xor    eax,ebx
  41e5e1:	add    eax,esi
  41e5e3:	imul   eax,edx
  41e5e6:	cmp    eax,ecx
  41e5e8:	jbe    0x41e403
  41e5ee:	push   DWORD PTR [ebp+0x8]
  41e5f1:	mov    eax,DWORD PTR [ebp+0x8]
  41e5f4:	push   DWORD PTR [eax+0x1cc]
  41e5fa:	lea    eax,[ebp-0xd8]
  41e600:	push   eax
  41e601:	mov    eax,DWORD PTR [ebp+0x8]
  41e604:	mov    eax,DWORD PTR [eax+0x1c4]
  41e60a:	push   DWORD PTR [eax]
  41e60c:	mov    eax,DWORD PTR [ebp+0x8]
  41e60f:	mov    eax,DWORD PTR [eax+0x1c0]
  41e615:	push   DWORD PTR [eax]
  41e617:	push   DWORD PTR [ebp-0x3c]
  41e61a:	push   DWORD PTR [ebp-0x2c]
  41e61d:	call   0x41f0b4
  41e622:	mov    DWORD PTR [ebp-0x40],eax
  41e625:	mov    eax,DWORD PTR [ebp-0x10]
  41e628:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e62b:	xor    eax,ebx
  41e62d:	add    eax,esi
  41e62f:	cmp    eax,ecx
  41e631:	je     0x41e652
  41e633:	mov    eax,DWORD PTR [ebp+0x8]
  41e636:	mov    ecx,DWORD PTR [ebp-0x50]
  41e639:	mov    eax,DWORD PTR [eax+0x1d8]
  41e63f:	xor    ecx,ebx
  41e641:	add    ecx,esi
  41e643:	push   ecx
  41e644:	mov    ecx,DWORD PTR [ebp-0x10]
  41e647:	xor    ecx,ebx
  41e649:	add    ecx,esi
  41e64b:	push   ecx
  41e64c:	push   DWORD PTR [ebp-0x2c]
  41e64f:	call   DWORD PTR [eax+0x18]
  41e652:	pop    edi
  41e653:	pop    esi
  41e654:	pop    ebx
  41e655:	leave  
  41e656:	ret    0x4
  41e659:	push   ebp
  41e65a:	mov    ebp,esp
  41e65c:	push   ecx
  41e65d:	push   ecx
  41e65e:	lea    eax,[ebp-0x8]
  41e661:	mov    DWORD PTR [ebp-0x4],eax
  41e664:	push   esi
  41e665:	mov    esi,DWORD PTR [ebp-0x4]
  41e668:	mov    eax,0xf881ba0f
  41e66d:	mov    DWORD PTR [esi],eax
  41e66f:	mov    esi,DWORD PTR [ebp-0x8]
  41e672:	cmp    esi,eax
  41e674:	pop    esi
  41e675:	jne    0x41e67f
  41e677:	mov    BYTE PTR [ecx+0xa],0x72
  41e67b:	mov    BYTE PTR [edx+0x8],0x2f
  41e67f:	mov    BYTE PTR [edx+0xa],0x72
  41e683:	mov    BYTE PTR [ecx+0x2],0x0
  41e687:	leave  
  41e688:	ret    
  41e689:	push   ebp
  41e68a:	mov    ebp,esp
  41e68c:	push   ecx
  41e68d:	push   ecx
  41e68e:	lea    eax,[ebp-0x8]
  41e691:	mov    DWORD PTR [ebp-0x4],eax
  41e694:	mov    edx,DWORD PTR [ebp-0x4]
  41e697:	mov    eax,0xf88b0beb
  41e69c:	mov    DWORD PTR [edx],eax
  41e69e:	mov    edx,DWORD PTR [ebp-0x8]
  41e6a1:	cmp    edx,eax
  41e6a3:	jne    0x41e6b4
  41e6a5:	mov    eax,DWORD PTR [ebp+0x8]
  41e6a8:	mov    BYTE PTR [ecx+0x9],0xe
  41e6ac:	mov    BYTE PTR [eax+0x7],0x47
  41e6b0:	mov    BYTE PTR [ecx+0x6],0xf
  41e6b4:	mov    BYTE PTR [ecx+0x3],0x1e
  41e6b8:	leave  
  41e6b9:	ret    0x4
  41e6bc:	push   ebp
  41e6bd:	mov    ebp,esp
  41e6bf:	push   ecx
  41e6c0:	push   ecx
  41e6c1:	lea    eax,[ebp-0x8]
  41e6c4:	mov    DWORD PTR [ebp-0x4],eax
  41e6c7:	mov    edx,DWORD PTR [ebp-0x4]
  41e6ca:	mov    eax,0x7e0da0f
  41e6cf:	mov    DWORD PTR [edx],eax
  41e6d1:	mov    edx,DWORD PTR [ebp-0x8]
  41e6d4:	cmp    edx,eax
  41e6d6:	jne    0x41e6dc
  41e6d8:	mov    BYTE PTR [ecx+0x7],0x47
  41e6dc:	mov    eax,DWORD PTR [ebp+0x8]
  41e6df:	mov    BYTE PTR [ecx+0x1],0x5
  41e6e3:	mov    BYTE PTR [eax+0x9],0x2e
  41e6e7:	leave  
  41e6e8:	ret    0x4
  41e6eb:	push   ebp
  41e6ec:	mov    ebp,esp
  41e6ee:	push   ecx
  41e6ef:	push   ecx
  41e6f0:	lea    eax,[ebp-0x8]
  41e6f3:	mov    DWORD PTR [ebp-0x4],eax
  41e6f6:	push   esi
  41e6f7:	mov    esi,DWORD PTR [ebp-0x4]
  41e6fa:	mov    eax,0x7060e3e
  41e6ff:	mov    DWORD PTR [esi],eax
  41e701:	mov    esi,DWORD PTR [ebp-0x8]
  41e704:	cmp    esi,eax
  41e706:	pop    esi
  41e707:	jne    0x41e713
  41e709:	mov    BYTE PTR [edx+0x4],0x3
  41e70d:	mov    WORD PTR [ecx+0x3],0x31e
  41e713:	mov    BYTE PTR [edx],0x3f
  41e716:	leave  
  41e717:	ret    
  41e718:	push   ebp
  41e719:	mov    ebp,esp
  41e71b:	push   ecx
  41e71c:	push   ecx
  41e71d:	lea    eax,[ebp-0x8]
  41e720:	mov    DWORD PTR [ebp-0x4],eax
  41e723:	mov    edx,DWORD PTR [ebp-0x4]
  41e726:	mov    eax,0xf8870b3f
  41e72b:	mov    DWORD PTR [edx],eax
  41e72d:	mov    edx,DWORD PTR [ebp-0x8]
  41e730:	cmp    edx,eax
  41e732:	jne    0x41e73f
  41e734:	mov    eax,DWORD PTR [ebp+0x8]
  41e737:	mov    BYTE PTR [ecx+0x8],0xf
  41e73b:	mov    BYTE PTR [eax+0x1],0x5
  41e73f:	mov    BYTE PTR [ecx+0x5],0xb
  41e743:	leave  
  41e744:	ret    0x4
  41e747:	push   esi
  41e748:	mov    ecx,edi
  41e74a:	call   0x41e718
  41e74f:	mov    edx,edi
  41e751:	mov    ecx,esi
  41e753:	mov    BYTE PTR [esi],0x1f
  41e756:	call   0x41e6eb
  41e75b:	push   esi
  41e75c:	mov    ecx,edi
  41e75e:	mov    BYTE PTR [esi+0x5],0xb
  41e762:	call   0x41e6bc
  41e767:	push   esi
  41e768:	mov    BYTE PTR [esi+0x6],0xf
  41e76c:	call   0x41e689
  41e771:	mov    BYTE PTR [esi+0x2],0x0
  41e775:	mov    edx,esi
  41e777:	jmp    0x41e659
  41e77c:	push   ebp
  41e77d:	mov    ebp,esp
  41e77f:	push   ecx
  41e780:	mov    ecx,DWORD PTR [edx+0x194]
  41e786:	push   esi
  41e787:	mov    esi,DWORD PTR [ebp+0x8]
  41e78a:	mov    esi,DWORD PTR [esi]
  41e78c:	mov    DWORD PTR [ecx],esi
  41e78e:	mov    ecx,DWORD PTR [edx+0x194]
  41e794:	mov    ecx,DWORD PTR [ecx]
  41e796:	mov    esi,DWORD PTR [edx+0x190]
  41e79c:	mov    DWORD PTR [esi],ecx
  41e79e:	mov    eax,DWORD PTR [edx+0x194]
  41e7a4:	mov    ecx,DWORD PTR [eax]
  41e7a6:	mov    ecx,DWORD PTR [ecx+0x3c]
  41e7a9:	add    ecx,DWORD PTR [eax]
  41e7ab:	mov    DWORD PTR [ebp-0x4],0xf89ca581
  41e7b2:	mov    eax,DWORD PTR [ebp-0x4]
  41e7b5:	movzx  ecx,WORD PTR [ecx+0x16]
  41e7b9:	xor    eax,0x751089d
  41e7be:	add    eax,0x3272e4
  41e7c3:	pop    esi
  41e7c4:	test   ecx,eax
  41e7c6:	je     0x41e7d4
  41e7c8:	mov    eax,DWORD PTR [edx+0x1c8]
  41e7ce:	mov    DWORD PTR [eax],0xf89c8580
  41e7d4:	leave  
  41e7d5:	ret    0x4
  41e7d8:	push   ebp
  41e7d9:	mov    ebp,esp
  41e7db:	sub    esp,0x70
  41e7de:	and    DWORD PTR [ebp-0x20],0x0
  41e7e2:	mov    DWORD PTR [ebp-0x18],0xf89cb581
  41e7e9:	mov    DWORD PTR [ebp-0x1c],0xf89c85c1
  41e7f0:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41e7f7:	mov    DWORD PTR [ebp-0x14],0xf89c8583
  41e7fe:	mov    DWORD PTR [ebp-0x2c],0xf89f0581
  41e805:	mov    eax,DWORD PTR [ebp+0x20]
  41e808:	mov    eax,DWORD PTR [eax+0x194]
  41e80e:	mov    DWORD PTR [ebp-0xc],eax
  41e811:	mov    eax,DWORD PTR [ebp+0x20]
  41e814:	push   ebx
  41e815:	push   esi
  41e816:	mov    esi,DWORD PTR [eax+0x190]
  41e81c:	mov    eax,DWORD PTR [ebp+0x20]
  41e81f:	mov    eax,DWORD PTR [eax+0x18c]
  41e825:	mov    DWORD PTR [ebp-0x8],eax
  41e828:	mov    eax,DWORD PTR [eax]
  41e82a:	push   edi
  41e82b:	mov    DWORD PTR [ebp-0x4],esi
  41e82e:	test   eax,eax
  41e830:	jne    0x41e83d
  41e832:	push   DWORD PTR [ebp+0x1c]
  41e835:	mov    edx,DWORD PTR [ebp+0x20]
  41e838:	call   0x41e77c
  41e83d:	mov    eax,DWORD PTR [esi]
  41e83f:	mov    ebx,DWORD PTR [esi]
  41e841:	add    ebx,DWORD PTR [eax+0x3c]
  41e844:	mov    eax,DWORD PTR [ebp+0xc]
  41e847:	mov    ecx,DWORD PTR [ebp-0x8]
  41e84a:	mov    ecx,DWORD PTR [ecx]
  41e84c:	mov    esi,0x751089d
  41e851:	xor    eax,esi
  41e853:	mov    edi,0x3272e4
  41e858:	add    eax,edi
  41e85a:	cmp    eax,ecx
  41e85c:	jne    0x41ea94
  41e862:	mov    eax,DWORD PTR [ebp-0xc]
  41e865:	mov    eax,DWORD PTR [eax]
  41e867:	mov    DWORD PTR [ebp-0x10],eax
  41e86a:	mov    eax,DWORD PTR [ebx+0x50]
  41e86d:	mov    DWORD PTR [ebp-0x68],eax
  41e870:	mov    eax,DWORD PTR [ebp-0x18]
  41e873:	xor    eax,esi
  41e875:	add    eax,edi
  41e877:	mov    DWORD PTR [ebp-0x64],eax
  41e87a:	mov    eax,DWORD PTR [ebp-0x14]
  41e87d:	and    DWORD PTR [ebp-0x6c],0x0
  41e881:	xor    eax,esi
  41e883:	add    eax,edi
  41e885:	mov    DWORD PTR [ebp-0x60],eax
  41e888:	lea    eax,[ebp-0x70]
  41e88b:	push   eax
  41e88c:	mov    eax,DWORD PTR [ebp+0x8]
  41e88f:	xor    eax,esi
  41e891:	add    eax,edi
  41e893:	push   eax
  41e894:	mov    eax,DWORD PTR [ebp+0x20]
  41e897:	add    eax,0xaa
  41e89c:	push   eax
  41e89d:	mov    eax,DWORD PTR [ebp+0x20]
  41e8a0:	mov    eax,DWORD PTR [eax+0x198]
  41e8a6:	mov    DWORD PTR [ebp-0x70],0x4
  41e8ad:	push   DWORD PTR [eax]
  41e8af:	mov    eax,DWORD PTR [ebp+0x10]
  41e8b2:	call   eax
  41e8b4:	mov    ecx,DWORD PTR [ebp-0xc]
  41e8b7:	mov    ecx,DWORD PTR [ecx]
  41e8b9:	mov    edx,DWORD PTR [ebp-0x8]
  41e8bc:	mov    DWORD PTR [ebp-0x6c],eax
  41e8bf:	mov    DWORD PTR [ebp+0x1c],eax
  41e8c2:	mov    DWORD PTR [edx],ecx
  41e8c4:	mov    ecx,DWORD PTR [ebp-0x4]
  41e8c7:	mov    DWORD PTR [ecx],eax
  41e8c9:	mov    eax,DWORD PTR [ebx+0x50]
  41e8cc:	mov    DWORD PTR [ebp-0x68],eax
  41e8cf:	mov    eax,DWORD PTR [ebp-0x1c]
  41e8d2:	xor    eax,esi
  41e8d4:	add    eax,edi
  41e8d6:	mov    DWORD PTR [ebp-0x64],eax
  41e8d9:	lea    eax,[ebp-0x20]
  41e8dc:	mov    DWORD PTR [ebp-0x60],eax
  41e8df:	lea    eax,[ebp-0x70]
  41e8e2:	push   eax
  41e8e3:	mov    eax,DWORD PTR [ebp+0x8]
  41e8e6:	xor    eax,esi
  41e8e8:	add    eax,edi
  41e8ea:	push   eax
  41e8eb:	mov    eax,DWORD PTR [ebp+0x20]
  41e8ee:	add    eax,0xee
  41e8f3:	push   eax
  41e8f4:	mov    eax,DWORD PTR [ebp+0x20]
  41e8f7:	mov    eax,DWORD PTR [eax+0x198]
  41e8fd:	mov    DWORD PTR [ebp-0x70],0x4
  41e904:	push   DWORD PTR [eax]
  41e906:	mov    eax,DWORD PTR [ebp+0x10]
  41e909:	call   eax
  41e90b:	test   eax,eax
  41e90d:	je     0x41e932
  41e90f:	and    DWORD PTR [ebp+0xc],0x0
  41e913:	cmp    DWORD PTR [ebx+0x50],0x0
  41e917:	jbe    0x41e932
  41e919:	mov    eax,DWORD PTR [ebp+0x1c]
  41e91c:	mov    ecx,DWORD PTR [ebp-0x10]
  41e91f:	sub    ecx,eax
  41e921:	mov    dl,BYTE PTR [ecx+eax*1]
  41e924:	inc    DWORD PTR [ebp+0xc]
  41e927:	mov    BYTE PTR [eax],dl
  41e929:	mov    edx,DWORD PTR [ebp+0xc]
  41e92c:	inc    eax
  41e92d:	cmp    edx,DWORD PTR [ebx+0x50]
  41e930:	jb     0x41e921
  41e932:	mov    edx,DWORD PTR [ebp+0x1c]
  41e935:	mov    ecx,DWORD PTR [edx+0x3c]
  41e938:	add    ecx,edx
  41e93a:	mov    eax,DWORD PTR [ecx+0xa0]
  41e940:	mov    ebx,DWORD PTR [ecx+0x28]
  41e943:	add    eax,edx
  41e945:	sub    edx,DWORD PTR [ebp-0x10]
  41e948:	add    ebx,DWORD PTR [ebp+0x1c]
  41e94b:	mov    DWORD PTR [ebp+0xc],edx
  41e94e:	mov    DWORD PTR [ebp-0x2c],ecx
  41e951:	mov    DWORD PTR [ebp-0x14],ebx
  41e954:	mov    DWORD PTR [ebp-0x8],0x0
  41e95b:	jmp    0x41e9d7
  41e95d:	add    edx,0xfffffff8
  41e960:	shr    edx,1
  41e962:	mov    DWORD PTR [ebp-0x18],edx
  41e965:	je     0x41e9c3
  41e967:	lea    edx,[eax+0x8]
  41e96a:	mov    DWORD PTR [ebp-0x4],edx
  41e96d:	mov    edx,DWORD PTR [ebp-0x18]
  41e970:	mov    DWORD PTR [ebp-0x18],edx
  41e973:	mov    edx,DWORD PTR [ebp-0x4]
  41e976:	movzx  edx,WORD PTR [edx]
  41e979:	mov    DWORD PTR [ebp-0x24],edx
  41e97c:	and    edx,0xfff
  41e982:	mov    DWORD PTR [ebp-0x28],edx
  41e985:	mov    edx,DWORD PTR [ebp-0x24]
  41e988:	shr    edx,0xc
  41e98b:	add    edx,0xffcd8d1c
  41e991:	xor    edx,esi
  41e993:	cmp    edx,0xf89c8582
  41e999:	jne    0x41e9ba
  41e99b:	mov    edx,DWORD PTR [ebp-0x28]
  41e99e:	add    edx,DWORD PTR [ebp+0x1c]
  41e9a1:	mov    ebx,DWORD PTR [eax]
  41e9a3:	cmp    DWORD PTR [ebx+edx*1],0x0
  41e9a7:	je     0x41e9b7
  41e9a9:	mov    ecx,DWORD PTR [ebp+0xc]
  41e9ac:	add    ecx,DWORD PTR [ebx+edx*1]
  41e9af:	mov    ebx,DWORD PTR [eax]
  41e9b1:	mov    DWORD PTR [edx+ebx*1],ecx
  41e9b4:	mov    ecx,DWORD PTR [ebp-0x2c]
  41e9b7:	mov    ebx,DWORD PTR [ebp-0x14]
  41e9ba:	add    DWORD PTR [ebp-0x4],0x2
  41e9be:	dec    DWORD PTR [ebp-0x18]
  41e9c1:	jne    0x41e973
  41e9c3:	mov    edx,DWORD PTR [ebp-0xc]
  41e9c6:	add    DWORD PTR [ebp-0x8],edx
  41e9c9:	mov    edx,DWORD PTR [ebp-0x8]
  41e9cc:	cmp    edx,DWORD PTR [ecx+0xa4]
  41e9d2:	jae    0x41e9e5
  41e9d4:	add    eax,DWORD PTR [ebp-0xc]
  41e9d7:	mov    edx,DWORD PTR [eax+0x4]
  41e9da:	mov    DWORD PTR [ebp-0xc],edx
  41e9dd:	test   edx,edx
  41e9df:	jne    0x41e95d
  41e9e5:	mov    eax,DWORD PTR [ebp-0x10]
  41e9e8:	mov    DWORD PTR [ebp-0x6c],eax
  41e9eb:	mov    DWORD PTR [ebp-0x70],0x4
  41e9f2:	mov    eax,DWORD PTR [ecx+0x50]
  41e9f5:	mov    DWORD PTR [ebp-0x68],eax
  41e9f8:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9fb:	xor    eax,esi
  41e9fd:	add    eax,edi
  41e9ff:	mov    DWORD PTR [ebp-0x64],eax
  41ea02:	lea    eax,[ebp-0x20]
  41ea05:	mov    DWORD PTR [ebp-0x60],eax
  41ea08:	lea    eax,[ebp-0x70]
  41ea0b:	push   eax
  41ea0c:	mov    eax,DWORD PTR [ebp+0x8]
  41ea0f:	xor    eax,esi
  41ea11:	add    eax,edi
  41ea13:	push   eax
  41ea14:	mov    eax,DWORD PTR [ebp+0x20]
  41ea17:	add    eax,0xee
  41ea1c:	push   eax
  41ea1d:	mov    eax,DWORD PTR [ebp+0x20]
  41ea20:	mov    eax,DWORD PTR [eax+0x198]
  41ea26:	push   DWORD PTR [eax]
  41ea28:	mov    eax,DWORD PTR [ebp+0x10]
  41ea2b:	call   eax
  41ea2d:	mov    eax,DWORD PTR [ebp+0x20]
  41ea30:	mov    eax,DWORD PTR [eax+0x180]
  41ea36:	add    eax,DWORD PTR [ebp+0xc]
  41ea39:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea3c:	push   DWORD PTR [ebp+0x18]
  41ea3f:	mov    DWORD PTR [eax],ecx
  41ea41:	push   DWORD PTR [ebp+0x14]
  41ea44:	push   DWORD PTR [ebp+0x1c]
  41ea47:	call   ebx
  41ea49:	mov    ecx,DWORD PTR [ebp+0xc]
  41ea4c:	add    ecx,DWORD PTR [ebp+0x20]
  41ea4f:	lea    eax,[ebp+0x4]
  41ea52:	mov    DWORD PTR [ebp+0x20],ecx
  41ea55:	mov    ecx,DWORD PTR [ebp+0x20]
  41ea58:	mov    ecx,DWORD PTR [ebp+0x20]
  41ea5b:	mov    edx,DWORD PTR [ecx+0x190]
  41ea61:	mov    ecx,DWORD PTR [ebp+0x20]
  41ea64:	mov    ecx,DWORD PTR [ecx+0x18c]
  41ea6a:	mov    esi,DWORD PTR [ecx]
  41ea6c:	cmp    DWORD PTR [eax],esi
  41ea6e:	jb     0x41ea8f
  41ea70:	mov    esi,DWORD PTR [edx]
  41ea72:	mov    edi,DWORD PTR [edx]
  41ea74:	mov    esi,DWORD PTR [esi+0x3c]
  41ea77:	lea    esi,[edi+esi*1+0x50]
  41ea7b:	mov    edi,DWORD PTR [ecx]
  41ea7d:	add    edi,DWORD PTR [esi]
  41ea7f:	cmp    DWORD PTR [eax],edi
  41ea81:	jae    0x41ea8f
  41ea83:	mov    esi,DWORD PTR [ecx]
  41ea85:	mov    ecx,DWORD PTR [eax]
  41ea87:	mov    edx,DWORD PTR [edx]
  41ea89:	sub    ecx,esi
  41ea8b:	add    edx,ecx
  41ea8d:	mov    DWORD PTR [eax],edx
  41ea8f:	mov    eax,DWORD PTR [ebp+0xc]
  41ea92:	jmp    0x41ea96
  41ea94:	xor    eax,eax
  41ea96:	pop    edi
  41ea97:	pop    esi
  41ea98:	pop    ebx
  41ea99:	leave  
  41ea9a:	ret    0x1c
  41ea9d:	push   ebp
  41ea9e:	mov    ebp,esp
  41eaa0:	sub    esp,0x1c
  41eaa3:	push   esi
  41eaa4:	mov    esi,eax
  41eaa6:	mov    eax,DWORD PTR [ecx+0x190]
  41eaac:	cmp    DWORD PTR [eax],0x0
  41eaaf:	je     0x41ebbf
  41eab5:	test   edx,edx
  41eab7:	je     0x41ebbf
  41eabd:	test   esi,esi
  41eabf:	je     0x41ebbf
  41eac5:	mov    eax,DWORD PTR [esi+0x88]
  41eacb:	test   eax,eax
  41eacd:	je     0x41ebba
  41ead3:	cmp    DWORD PTR [esi+0x8c],0x10
  41eada:	je     0x41ebba
  41eae0:	cmp    DWORD PTR [esi+0x34],edx
  41eae3:	je     0x41ebba
  41eae9:	mov    esi,DWORD PTR [ecx+0x18c]
  41eaef:	and    DWORD PTR [ebp-0x10],0x0
  41eaf3:	mov    ecx,edx
  41eaf5:	sub    ecx,DWORD PTR [esi]
  41eaf7:	add    eax,edx
  41eaf9:	movzx  edx,WORD PTR [eax+0xc]
  41eafd:	mov    DWORD PTR [ebp-0x1c],ecx
  41eb00:	movzx  ecx,WORD PTR [eax+0xe]
  41eb04:	add    ecx,edx
  41eb06:	je     0x41ebba
  41eb0c:	lea    ecx,[eax+0x14]
  41eb0f:	push   ebx
  41eb10:	mov    DWORD PTR [ebp-0x18],ecx
  41eb13:	mov    esi,0x7fffffff
  41eb18:	push   edi
  41eb19:	test   DWORD PTR [ecx],esi
  41eb1b:	je     0x41eb9c
  41eb1d:	mov    edx,DWORD PTR [ecx]
  41eb1f:	and    DWORD PTR [ebp-0xc],0x0
  41eb23:	and    edx,esi
  41eb25:	add    edx,eax
  41eb27:	movzx  edi,WORD PTR [edx+0xe]
  41eb2b:	movzx  ebx,WORD PTR [edx+0xc]
  41eb2f:	add    edi,ebx
  41eb31:	je     0x41eb9c
  41eb33:	lea    ecx,[edx+0x14]
  41eb36:	mov    DWORD PTR [ebp-0x14],ecx
  41eb39:	test   DWORD PTR [ecx],esi
  41eb3b:	je     0x41eb7e
  41eb3d:	mov    ecx,DWORD PTR [ecx]
  41eb3f:	and    DWORD PTR [ebp-0x8],0x0
  41eb43:	and    ecx,esi
  41eb45:	add    ecx,eax
  41eb47:	movzx  edi,WORD PTR [ecx+0xe]
  41eb4b:	movzx  ebx,WORD PTR [ecx+0xc]
  41eb4f:	add    edi,ebx
  41eb51:	je     0x41eb7e
  41eb53:	lea    edi,[ecx+0x14]
  41eb56:	mov    DWORD PTR [ebp-0x4],edi
  41eb59:	mov    edi,DWORD PTR [ebp-0x4]
  41eb5c:	mov    edi,DWORD PTR [edi]
  41eb5e:	test   edi,edi
  41eb60:	je     0x41eb68
  41eb62:	mov    ebx,DWORD PTR [ebp-0x1c]
  41eb65:	add    DWORD PTR [edi+eax*1],ebx
  41eb68:	movzx  edi,WORD PTR [ecx+0xe]
  41eb6c:	movzx  ebx,WORD PTR [ecx+0xc]
  41eb70:	inc    DWORD PTR [ebp-0x8]
  41eb73:	add    DWORD PTR [ebp-0x4],0x8
  41eb77:	add    edi,ebx
  41eb79:	cmp    DWORD PTR [ebp-0x8],edi
  41eb7c:	jb     0x41eb59
  41eb7e:	movzx  edi,WORD PTR [edx+0xe]
  41eb82:	movzx  ebx,WORD PTR [edx+0xc]
  41eb86:	mov    ecx,DWORD PTR [ebp-0x14]
  41eb89:	inc    DWORD PTR [ebp-0xc]
  41eb8c:	add    ecx,0x8
  41eb8f:	add    edi,ebx
  41eb91:	mov    DWORD PTR [ebp-0x14],ecx
  41eb94:	cmp    DWORD PTR [ebp-0xc],edi
  41eb97:	jb     0x41eb39
  41eb99:	mov    ecx,DWORD PTR [ebp-0x18]
  41eb9c:	movzx  edx,WORD PTR [eax+0xe]
  41eba0:	movzx  edi,WORD PTR [eax+0xc]
  41eba4:	inc    DWORD PTR [ebp-0x10]
  41eba7:	add    ecx,0x8
  41ebaa:	add    edx,edi
  41ebac:	mov    DWORD PTR [ebp-0x18],ecx
  41ebaf:	cmp    DWORD PTR [ebp-0x10],edx
  41ebb2:	jb     0x41eb19
  41ebb8:	pop    edi
  41ebb9:	pop    ebx
  41ebba:	xor    eax,eax
  41ebbc:	inc    eax
  41ebbd:	jmp    0x41ebc1
  41ebbf:	xor    eax,eax
  41ebc1:	pop    esi
  41ebc2:	leave  
  41ebc3:	ret    
  41ebc4:	push   ebp
  41ebc5:	mov    ebp,esp
  41ebc7:	mov    ecx,DWORD PTR [ecx+0x190]
  41ebcd:	mov    eax,DWORD PTR [ebp+0xc]
  41ebd0:	sub    esp,0x10
  41ebd3:	push   ebx
  41ebd4:	xor    ebx,ebx
  41ebd6:	push   esi
  41ebd7:	push   edi
  41ebd8:	cmp    DWORD PTR [ecx],ebx
  41ebda:	je     0x41ec62
  41ebe0:	cmp    eax,ebx
  41ebe2:	je     0x41ec62
  41ebe4:	cmp    DWORD PTR [eax+0x78],ebx
  41ebe7:	jne    0x41ebee
  41ebe9:	xor    eax,eax
  41ebeb:	inc    eax
  41ebec:	jmp    0x41ec64
  41ebee:	mov    eax,DWORD PTR [eax+0x78]
  41ebf1:	add    eax,DWORD PTR [ebp+0x8]
  41ebf4:	mov    ecx,DWORD PTR [eax+0x1c]
  41ebf7:	mov    edx,DWORD PTR [eax+0x24]
  41ebfa:	mov    esi,DWORD PTR [eax+0x14]
  41ebfd:	mov    edi,DWORD PTR [eax+0x18]
  41ec00:	add    ecx,DWORD PTR [ebp+0x8]
  41ec03:	add    edx,DWORD PTR [ebp+0x8]
  41ec06:	mov    DWORD PTR [ebp-0x4],esi
  41ec09:	cmp    esi,edi
  41ec0b:	ja     0x41ec10
  41ec0d:	mov    DWORD PTR [ebp-0x4],edi
  41ec10:	mov    DWORD PTR [ebp-0x8],ebx
  41ec13:	cmp    DWORD PTR [ebp-0x4],ebx
  41ec16:	jbe    0x41ebe9
  41ec18:	cmp    ebx,DWORD PTR [eax+0x14]
  41ec1b:	jae    0x41ec23
  41ec1d:	movzx  esi,WORD PTR [edx+ebx*2]
  41ec21:	jmp    0x41ec25
  41ec23:	mov    esi,ebx
  41ec25:	lea    esi,[ecx+esi*4]
  41ec28:	mov    edi,DWORD PTR [esi]
  41ec2a:	test   edi,edi
  41ec2c:	je     0x41ec57
  41ec2e:	add    edi,DWORD PTR [ebp+0x8]
  41ec31:	mov    DWORD PTR [ebp-0x10],edi
  41ec34:	cmp    edi,eax
  41ec36:	jbe    0x41ec48
  41ec38:	mov    ebx,DWORD PTR [ebp+0xc]
  41ec3b:	mov    ebx,DWORD PTR [ebx+0x7c]
  41ec3e:	add    ebx,eax
  41ec40:	cmp    edi,ebx
  41ec42:	jae    0x41ec48
  41ec44:	mov    esi,DWORD PTR [esi]
  41ec46:	jmp    0x41ec50
  41ec48:	sub    edi,DWORD PTR [ebp+0x8]
  41ec4b:	mov    DWORD PTR [esi],edi
  41ec4d:	mov    esi,DWORD PTR [ebp-0x10]
  41ec50:	test   esi,esi
  41ec52:	je     0x41ec62
  41ec54:	mov    ebx,DWORD PTR [ebp-0x8]
  41ec57:	inc    ebx
  41ec58:	mov    DWORD PTR [ebp-0x8],ebx
  41ec5b:	cmp    ebx,DWORD PTR [ebp-0x4]
  41ec5e:	jb     0x41ec18
  41ec60:	jmp    0x41ebe9
  41ec62:	xor    eax,eax
  41ec64:	pop    edi
  41ec65:	pop    esi
  41ec66:	pop    ebx
  41ec67:	leave  
  41ec68:	ret    0x8
  41ec6b:	push   ebp
  41ec6c:	mov    ebp,esp
  41ec6e:	sub    esp,0x2c
  41ec71:	mov    edx,0xf89c8581
  41ec76:	mov    DWORD PTR [ebp-0x4],edx
  41ec79:	mov    DWORD PTR [ebp-0x8],0xf89c8580
  41ec80:	mov    eax,DWORD PTR [ebp-0x4]
  41ec83:	mov    ecx,DWORD PTR [ebp-0x4]
  41ec86:	mov    ecx,DWORD PTR [ebp-0x4]
  41ec89:	mov    ecx,DWORD PTR [ebp-0x4]
  41ec8c:	mov    ecx,DWORD PTR [ebp-0x4]
  41ec8f:	mov    ecx,DWORD PTR [ebp-0x4]
  41ec92:	push   ebx
  41ec93:	mov    ebx,DWORD PTR [ebp+0x10]
  41ec96:	push   esi
  41ec97:	mov    esi,0x751089d
  41ec9c:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41eca3:	mov    ecx,DWORD PTR [ebp-0x4]
  41eca6:	mov    ebx,DWORD PTR [ebx+0x190]
  41ecac:	push   edi
  41ecad:	mov    edi,0x3272e4
  41ecb2:	xor    ecx,esi
  41ecb4:	xor    eax,esi
  41ecb6:	add    eax,edi
  41ecb8:	add    ecx,edi
  41ecba:	mov    DWORD PTR [ebp-0x18],eax
  41ecbd:	cmp    ecx,DWORD PTR [ebx]
  41ecbf:	je     0x41ef40
  41ecc5:	mov    ebx,DWORD PTR [ebp-0x4]
  41ecc8:	mov    ecx,DWORD PTR [ebp+0xc]
  41eccb:	xor    ebx,esi
  41eccd:	add    ebx,edi
  41eccf:	cmp    ebx,ecx
  41ecd1:	je     0x41ef40
  41ecd7:	mov    ebx,DWORD PTR [ebp-0x4]
  41ecda:	mov    ecx,DWORD PTR [ecx+0x80]
  41ece0:	xor    ebx,esi
  41ece2:	add    ebx,edi
  41ece4:	cmp    ecx,ebx
  41ece6:	je     0x41ef3b
  41ecec:	add    ecx,DWORD PTR [ebp+0x8]
  41ecef:	mov    DWORD PTR [ebp-0x2c],ecx
  41ecf2:	mov    ebx,edx
  41ecf4:	xor    ebx,esi
  41ecf6:	add    ebx,edi
  41ecf8:	mov    DWORD PTR [ebp-0x10],ebx
  41ecfb:	mov    ebx,DWORD PTR [ebp-0x10]
  41ecfe:	cmp    ebx,edx
  41ed00:	je     0x41ed14
  41ed02:	mov    edx,DWORD PTR [ebp-0x10]
  41ed05:	mov    ebx,DWORD PTR [ebp-0x4]
  41ed08:	imul   edx,edx,0x14
  41ed0b:	xor    ebx,esi
  41ed0d:	add    ebx,edi
  41ed0f:	cmp    DWORD PTR [edx+ecx*1],ebx
  41ed12:	jne    0x41ed2b
  41ed14:	mov    edx,DWORD PTR [ebp-0x10]
  41ed17:	mov    ebx,DWORD PTR [ebp-0x4]
  41ed1a:	imul   edx,edx,0x14
  41ed1d:	xor    ebx,esi
  41ed1f:	add    ebx,edi
  41ed21:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41ed25:	je     0x41ef2d
  41ed2b:	mov    eax,DWORD PTR [ebp-0x4]
  41ed2e:	mov    ebx,DWORD PTR [ebp-0x4]
  41ed31:	mov    eax,DWORD PTR [ebp-0x10]
  41ed34:	imul   eax,eax,0x14
  41ed37:	add    eax,ecx
  41ed39:	mov    ecx,DWORD PTR [eax+0x10]
  41ed3c:	add    ecx,DWORD PTR [ebp+0x8]
  41ed3f:	xor    ebx,esi
  41ed41:	mov    DWORD PTR [ebp-0x1c],ecx
  41ed44:	mov    ecx,DWORD PTR [ebp-0x4]
  41ed47:	mov    edx,DWORD PTR [ebp-0x4]
  41ed4a:	xor    ecx,esi
  41ed4c:	add    ecx,edi
  41ed4e:	xor    edx,esi
  41ed50:	mov    DWORD PTR [ebp-0x24],ecx
  41ed53:	mov    ecx,DWORD PTR [eax]
  41ed55:	add    edx,edi
  41ed57:	add    ebx,edi
  41ed59:	cmp    ecx,edx
  41ed5b:	je     0x41ed63
  41ed5d:	add    ecx,DWORD PTR [ebp+0x8]
  41ed60:	mov    DWORD PTR [ebp-0x24],ecx
  41ed63:	mov    ecx,DWORD PTR [ebp-0x4]
  41ed66:	xor    ecx,esi
  41ed68:	add    ecx,DWORD PTR [eax+0xc]
  41ed6b:	mov    eax,DWORD PTR [ebp+0x8]
  41ed6e:	lea    eax,[ecx+eax*1+0x3272e4]
  41ed75:	mov    DWORD PTR [ebp+0xc],eax
  41ed78:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41ed7f:	mov    eax,DWORD PTR [ebp+0x10]
  41ed82:	push   DWORD PTR [ebp+0xc]
  41ed85:	mov    eax,DWORD PTR [eax+0x1d8]
  41ed8b:	call   DWORD PTR [eax]
  41ed8d:	mov    ecx,DWORD PTR [ebp-0x4]
  41ed90:	xor    ecx,esi
  41ed92:	add    ecx,edi
  41ed94:	mov    DWORD PTR [ebp-0xc],eax
  41ed97:	cmp    ecx,eax
  41ed99:	jne    0x41edad
  41ed9b:	mov    eax,DWORD PTR [ebp+0x10]
  41ed9e:	push   DWORD PTR [ebp+0xc]
  41eda1:	mov    eax,DWORD PTR [eax+0x1d8]
  41eda7:	call   DWORD PTR [eax+0xc]
  41edaa:	mov    DWORD PTR [ebp-0xc],eax
  41edad:	mov    DWORD PTR [ebp-0x20],0x7f661b08
  41edb4:	mov    DWORD PTR [ebp-0x20],0xf89c9998
  41edbb:	mov    eax,DWORD PTR [ebp-0x4]
  41edbe:	xor    eax,esi
  41edc0:	add    eax,edi
  41edc2:	cmp    eax,DWORD PTR [ebp-0xc]
  41edc5:	jne    0x41edea
  41edc7:	mov    eax,DWORD PTR [ebp-0x8]
  41edca:	mov    ecx,DWORD PTR [ebp-0x20]
  41edcd:	xor    eax,esi
  41edcf:	xor    ecx,esi
  41edd1:	lea    ebx,[ebx+eax*1+0x3272e4]
  41edd8:	mov    eax,DWORD PTR [ebp+0x10]
  41eddb:	mov    eax,DWORD PTR [eax+0x1d8]
  41ede1:	add    ecx,edi
  41ede3:	imul   ecx,ebx
  41ede6:	push   ecx
  41ede7:	call   DWORD PTR [eax+0x24]
  41edea:	mov    eax,DWORD PTR [ebp-0x4]
  41eded:	xor    eax,esi
  41edef:	add    eax,edi
  41edf1:	cmp    eax,DWORD PTR [ebp-0xc]
  41edf4:	jne    0x41ee05
  41edf6:	mov    eax,DWORD PTR [ebp-0x28]
  41edf9:	xor    eax,esi
  41edfb:	add    eax,edi
  41edfd:	cmp    ebx,eax
  41edff:	jbe    0x41ed7f
  41ee05:	mov    eax,DWORD PTR [ebp-0x4]
  41ee08:	xor    eax,esi
  41ee0a:	add    eax,edi
  41ee0c:	cmp    eax,DWORD PTR [ebp-0xc]
  41ee0f:	jne    0x41ee28
  41ee11:	mov    eax,DWORD PTR [ebp-0x8]
  41ee14:	mov    ecx,DWORD PTR [ebp-0x18]
  41ee17:	xor    eax,esi
  41ee19:	lea    eax,[ecx+eax*1+0x3272e4]
  41ee20:	mov    DWORD PTR [ebp-0x18],eax
  41ee23:	jmp    0x41ef17
  41ee28:	mov    DWORD PTR [ebp-0x14],0x1121b09
  41ee2f:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41ee36:	mov    ebx,DWORD PTR [ebp-0x4]
  41ee39:	xor    ebx,esi
  41ee3b:	add    ebx,edi
  41ee3d:	jmp    0x41ef04
  41ee42:	mov    eax,DWORD PTR [ebp-0x4]
  41ee45:	xor    eax,esi
  41ee47:	add    eax,edi
  41ee49:	mov    DWORD PTR [ebp-0x14],eax
  41ee4c:	mov    eax,DWORD PTR [ebp-0x4]
  41ee4f:	xor    eax,esi
  41ee51:	add    eax,edi
  41ee53:	mov    DWORD PTR [ebp+0xc],eax
  41ee56:	mov    ecx,DWORD PTR [ebp-0x4]
  41ee59:	mov    eax,DWORD PTR [ebp-0x24]
  41ee5c:	xor    ecx,esi
  41ee5e:	add    ecx,edi
  41ee60:	cmp    ecx,eax
  41ee62:	je     0x41ee6a
  41ee64:	mov    eax,DWORD PTR [eax+ebx*4]
  41ee67:	mov    DWORD PTR [ebp-0x14],eax
  41ee6a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ee6d:	mov    eax,DWORD PTR [eax+ebx*4]
  41ee70:	mov    DWORD PTR [ebp+0xc],eax
  41ee73:	mov    eax,DWORD PTR [ebp-0x4]
  41ee76:	mov    ecx,DWORD PTR [ebp-0x14]
  41ee79:	xor    eax,esi
  41ee7b:	add    eax,edi
  41ee7d:	cmp    eax,ecx
  41ee7f:	je     0x41eeaa
  41ee81:	mov    eax,DWORD PTR [ebp-0x4]
  41ee84:	mov    ecx,DWORD PTR [ebp-0x14]
  41ee87:	xor    eax,esi
  41ee89:	add    eax,edi
  41ee8b:	shr    ecx,0x1f
  41ee8e:	cmp    eax,ecx
  41ee90:	je     0x41eeaa
  41ee92:	mov    ecx,DWORD PTR [ebp-0x14]
  41ee95:	mov    eax,DWORD PTR [ebp+0x10]
  41ee98:	mov    eax,DWORD PTR [eax+0x1d8]
  41ee9e:	movzx  ecx,cx
  41eea1:	push   ecx
  41eea2:	push   DWORD PTR [ebp-0xc]
  41eea5:	call   DWORD PTR [eax+0x8]
  41eea8:	jmp    0x41eec3
  41eeaa:	mov    eax,DWORD PTR [ebp+0xc]
  41eead:	add    eax,DWORD PTR [ebp+0x8]
  41eeb0:	mov    ecx,DWORD PTR [ebp+0x10]
  41eeb3:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41eeb9:	add    eax,0x2
  41eebc:	push   eax
  41eebd:	push   DWORD PTR [ebp-0xc]
  41eec0:	call   DWORD PTR [ecx+0x8]
  41eec3:	mov    DWORD PTR [ebp+0xc],eax
  41eec6:	mov    eax,DWORD PTR [ebp-0x4]
  41eec9:	mov    ecx,DWORD PTR [ebp+0xc]
  41eecc:	xor    eax,esi
  41eece:	add    eax,edi
  41eed0:	cmp    eax,ecx
  41eed2:	mov    eax,DWORD PTR [ebp-0x8]
  41eed5:	jne    0x41eee8
  41eed7:	mov    ecx,DWORD PTR [ebp-0x18]
  41eeda:	xor    eax,esi
  41eedc:	lea    eax,[ecx+eax*1+0x3272e4]
  41eee3:	mov    DWORD PTR [ebp-0x18],eax
  41eee6:	jmp    0x41eef8
  41eee8:	mov    ecx,DWORD PTR [ebp+0xc]
  41eeeb:	xor    eax,esi
  41eeed:	add    eax,edi
  41eeef:	imul   eax,ecx
  41eef2:	mov    ecx,DWORD PTR [ebp-0x1c]
  41eef5:	mov    DWORD PTR [ecx+ebx*4],eax
  41eef8:	mov    eax,DWORD PTR [ebp-0x8]
  41eefb:	xor    eax,esi
  41eefd:	lea    ebx,[ebx+eax*1+0x3272e4]
  41ef04:	mov    eax,DWORD PTR [ebp-0x4]
  41ef07:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ef0a:	xor    eax,esi
  41ef0c:	add    eax,edi
  41ef0e:	cmp    DWORD PTR [ecx+ebx*4],eax
  41ef11:	jne    0x41ee42
  41ef17:	mov    edx,DWORD PTR [ebp-0x10]
  41ef1a:	mov    eax,DWORD PTR [ebp-0x18]
  41ef1d:	mov    ecx,DWORD PTR [ebp-0x2c]
  41ef20:	sub    edx,0x3272e3
  41ef26:	xor    edx,esi
  41ef28:	jmp    0x41ecf2
  41ef2d:	mov    ecx,DWORD PTR [ebp-0x4]
  41ef30:	xor    ecx,esi
  41ef32:	add    ecx,edi
  41ef34:	cmp    eax,ecx
  41ef36:	mov    eax,DWORD PTR [ebp-0x4]
  41ef39:	jne    0x41ef43
  41ef3b:	mov    eax,DWORD PTR [ebp-0x8]
  41ef3e:	jmp    0x41ef43
  41ef40:	mov    eax,DWORD PTR [ebp-0x4]
  41ef43:	xor    eax,esi
  41ef45:	add    eax,edi
  41ef47:	pop    edi
  41ef48:	pop    esi
  41ef49:	pop    ebx
  41ef4a:	leave  
  41ef4b:	ret    0xc
  41ef4e:	push   ebp
  41ef4f:	mov    ebp,esp
  41ef51:	sub    esp,0x28
  41ef54:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  41ef5b:	mov    DWORD PTR [ebp-0x28],0xf89c8580
  41ef62:	mov    eax,DWORD PTR [ebp+0xc]
  41ef65:	mov    DWORD PTR [ebp+0xc],eax
  41ef68:	push   esi
  41ef69:	mov    eax,eax
  41ef6b:	mov    eax,DWORD PTR [ebp-0x4]
  41ef6e:	mov    esi,DWORD PTR [ebp+0x8]
  41ef71:	mov    ecx,0x751089d
  41ef76:	xor    eax,ecx
  41ef78:	mov    edx,0x3272e4
  41ef7d:	add    eax,edx
  41ef7f:	cmp    esi,eax
  41ef81:	je     0x41f0a8
  41ef87:	mov    eax,DWORD PTR [ebp+0x8]
  41ef8a:	mov    esi,DWORD PTR [ebp+0x8]
  41ef8d:	add    esi,DWORD PTR [eax+0x3c]
  41ef90:	push   edi
  41ef91:	mov    DWORD PTR [ebp+0xc],esi
  41ef94:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41ef9b:	mov    eax,DWORD PTR [ebp-0x1c]
  41ef9e:	mov    esi,DWORD PTR [ebp-0x4]
  41efa1:	mov    edi,DWORD PTR [ebp+0xc]
  41efa4:	xor    esi,ecx
  41efa6:	xor    eax,ecx
  41efa8:	add    esi,edx
  41efaa:	cmp    DWORD PTR [edi+eax*8+0x1939798],esi
  41efb1:	je     0x41f0a2
  41efb7:	mov    esi,DWORD PTR [ebp+0xc]
  41efba:	mov    eax,DWORD PTR [ebp+0x8]
  41efbd:	add    eax,DWORD PTR [esi+0xa0]
  41efc3:	mov    esi,DWORD PTR [ebp+0x8]
  41efc6:	mov    edi,DWORD PTR [ebp+0xc]
  41efc9:	sub    esi,DWORD PTR [edi+0x34]
  41efcc:	mov    edi,DWORD PTR [ebp-0x4]
  41efcf:	xor    edi,ecx
  41efd1:	add    edi,edx
  41efd3:	mov    DWORD PTR [ebp-0x24],esi
  41efd6:	cmp    esi,edi
  41efd8:	je     0x41f0a2
  41efde:	mov    esi,DWORD PTR [ebp-0x4]
  41efe1:	xor    esi,ecx
  41efe3:	add    esi,edx
  41efe5:	mov    DWORD PTR [ebp-0x8],esi
  41efe8:	push   ebx
  41efe9:	mov    DWORD PTR [ebp-0x10],0xf89c8582
  41eff0:	jmp    0x41f08c
  41eff5:	mov    esi,DWORD PTR [ebp-0x4]
  41eff8:	xor    esi,ecx
  41effa:	lea    edi,[ebx-0x8]
  41effd:	add    esi,edx
  41efff:	shr    edi,1
  41f001:	cmp    esi,edi
  41f003:	jae    0x41f072
  41f005:	sub    edi,esi
  41f007:	lea    ebx,[eax+esi*2+0x8]
  41f00b:	mov    DWORD PTR [ebp-0x18],edi
  41f00e:	movzx  esi,WORD PTR [ebx]
  41f011:	and    esi,0xfff
  41f017:	mov    DWORD PTR [ebp-0x14],esi
  41f01a:	mov    edi,DWORD PTR [ebp-0x14]
  41f01d:	mov    esi,DWORD PTR [eax]
  41f01f:	sub    esi,edx
  41f021:	add    edi,esi
  41f023:	movzx  esi,WORD PTR [ebx]
  41f026:	shr    esi,0xc
  41f029:	xor    edi,ecx
  41f02b:	mov    DWORD PTR [ebp-0x20],edi
  41f02e:	mov    DWORD PTR [ebp-0x14],esi
  41f031:	mov    esi,DWORD PTR [ebp-0x20]
  41f034:	mov    edi,DWORD PTR [ebp+0x8]
  41f037:	xor    esi,ecx
  41f039:	lea    esi,[esi+edi*1+0x3272e4]
  41f040:	mov    DWORD PTR [ebp-0x20],esi
  41f043:	mov    esi,DWORD PTR [ebp-0x10]
  41f046:	mov    edi,DWORD PTR [ebp-0x14]
  41f049:	xor    esi,ecx
  41f04b:	add    esi,edx
  41f04d:	cmp    edi,esi
  41f04f:	jne    0x41f067
  41f051:	mov    esi,DWORD PTR [ebp-0x10]
  41f054:	mov    edi,DWORD PTR [ebp-0x14]
  41f057:	xor    esi,ecx
  41f059:	add    esi,edx
  41f05b:	cmp    edi,esi
  41f05d:	jne    0x41f067
  41f05f:	mov    esi,DWORD PTR [ebp-0x20]
  41f062:	mov    edi,DWORD PTR [ebp-0x24]
  41f065:	add    DWORD PTR [esi],edi
  41f067:	add    ebx,0x2
  41f06a:	dec    DWORD PTR [ebp-0x18]
  41f06d:	jne    0x41f00e
  41f06f:	mov    ebx,DWORD PTR [ebp-0xc]
  41f072:	add    DWORD PTR [ebp-0x8],ebx
  41f075:	mov    esi,DWORD PTR [ebp-0x1c]
  41f078:	mov    edi,DWORD PTR [ebp-0x8]
  41f07b:	mov    ebx,DWORD PTR [ebp+0xc]
  41f07e:	xor    esi,ecx
  41f080:	cmp    edi,DWORD PTR [ebx+esi*8+0x193979c]
  41f087:	jae    0x41f0a1
  41f089:	add    eax,DWORD PTR [ebp-0xc]
  41f08c:	mov    esi,DWORD PTR [ebp-0x4]
  41f08f:	mov    ebx,DWORD PTR [eax+0x4]
  41f092:	xor    esi,ecx
  41f094:	add    esi,edx
  41f096:	mov    DWORD PTR [ebp-0xc],ebx
  41f099:	cmp    ebx,esi
  41f09b:	jne    0x41eff5
  41f0a1:	pop    ebx
  41f0a2:	mov    eax,DWORD PTR [ebp-0x28]
  41f0a5:	pop    edi
  41f0a6:	jmp    0x41f0ab
  41f0a8:	mov    eax,DWORD PTR [ebp-0x4]
  41f0ab:	xor    eax,ecx
  41f0ad:	add    eax,edx
  41f0af:	pop    esi
  41f0b0:	leave  
  41f0b1:	ret    0x8
  41f0b4:	push   ebp
  41f0b5:	mov    ebp,esp
  41f0b7:	sub    esp,0xd8
  41f0bd:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  41f0c4:	mov    DWORD PTR [ebp-0x24],0xf89c8580
  41f0cb:	mov    eax,DWORD PTR [ebp-0x4]
  41f0ce:	push   ebx
  41f0cf:	push   esi
  41f0d0:	mov    esi,0x751089d
  41f0d5:	xor    eax,esi
  41f0d7:	push   edi
  41f0d8:	mov    edi,0x3272e4
  41f0dd:	add    eax,edi
  41f0df:	mov    DWORD PTR [ebp-0x18],eax
  41f0e2:	mov    eax,DWORD PTR [ebp-0x4]
  41f0e5:	xor    eax,esi
  41f0e7:	add    eax,edi
  41f0e9:	mov    DWORD PTR [ebp-0x8],eax
  41f0ec:	mov    ebx,DWORD PTR [ebp+0x20]
  41f0ef:	mov    eax,DWORD PTR [ebp-0x1c]
  41f0f2:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f0f5:	xor    eax,ecx
  41f0f7:	mov    DWORD PTR [ebp-0x1c],eax
  41f0fa:	add    DWORD PTR [ebp-0x1c],0xf89cb581
  41f101:	mov    eax,DWORD PTR [ebp-0xc]
  41f104:	mov    ecx,DWORD PTR [ebp-0xc]
  41f107:	xor    eax,ecx
  41f109:	mov    DWORD PTR [ebp-0xc],eax
  41f10c:	add    DWORD PTR [ebp-0xc],0xf89c85c1
  41f113:	mov    eax,DWORD PTR [ebp-0x10]
  41f116:	mov    ecx,DWORD PTR [ebp-0x10]
  41f119:	xor    eax,ecx
  41f11b:	mov    DWORD PTR [ebp-0x10],eax
  41f11e:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41f125:	mov    eax,DWORD PTR [ebp-0x28]
  41f128:	mov    ecx,DWORD PTR [ebp-0x28]
  41f12b:	xor    eax,ecx
  41f12d:	mov    DWORD PTR [ebp-0x28],eax
  41f130:	add    DWORD PTR [ebp-0x28],0xf89f0581
  41f137:	mov    DWORD PTR [ebp+0x20],0xf89ceff4
  41f13e:	mov    eax,DWORD PTR [ebp+0x8]
  41f141:	test   eax,eax
  41f143:	je     0x41f5cc
  41f149:	mov    eax,DWORD PTR [ebp+0xc]
  41f14c:	test   eax,eax
  41f14e:	je     0x41f5cc
  41f154:	mov    eax,DWORD PTR [ebp+0x18]
  41f157:	test   eax,eax
  41f159:	je     0x41f5cc
  41f15f:	mov    eax,DWORD PTR [ebp+0x20]
  41f162:	mov    ecx,DWORD PTR [ebp+0x8]
  41f165:	xor    eax,0x89d
  41f16a:	add    eax,0x72e4
  41f16f:	cmp    WORD PTR [ecx],ax
  41f172:	jne    0x41f5cc
  41f178:	mov    eax,DWORD PTR [ebp-0x4]
  41f17b:	xor    eax,esi
  41f17d:	add    eax,edi
  41f17f:	mov    DWORD PTR [ebp-0x30],eax
  41f182:	mov    eax,DWORD PTR [ebp-0x4]
  41f185:	mov    ecx,DWORD PTR [ebp+0x8]
  41f188:	mov    eax,DWORD PTR [ebp+0x8]
  41f18b:	add    eax,DWORD PTR [ecx+0x3c]
  41f18e:	mov    DWORD PTR [ebp+0xc],eax
  41f191:	mov    eax,DWORD PTR [eax+0x50]
  41f194:	test   eax,eax
  41f196:	je     0x41f5cc
  41f19c:	mov    DWORD PTR [ebp-0x2c],0xf88c8581
  41f1a3:	mov    eax,DWORD PTR [ebp-0x2c]
  41f1a6:	xor    eax,esi
  41f1a8:	add    eax,edi
  41f1aa:	mov    DWORD PTR [ebp-0x2c],eax
  41f1ad:	mov    eax,DWORD PTR [ebp-0x4]
  41f1b0:	mov    eax,DWORD PTR [ebx+0x190]
  41f1b6:	mov    ecx,DWORD PTR [eax]
  41f1b8:	mov    ecx,DWORD PTR [ecx+0x3c]
  41f1bb:	add    ecx,DWORD PTR [eax]
  41f1bd:	mov    eax,DWORD PTR [ebp-0x4]
  41f1c0:	mov    eax,DWORD PTR [ebx+0x18c]
  41f1c6:	mov    edx,DWORD PTR [eax]
  41f1c8:	mov    DWORD PTR [ebp-0x20],ecx
  41f1cb:	mov    DWORD PTR [ebp+0x20],edx
  41f1ce:	cmp    edx,edx
  41f1d0:	jne    0x41f204
  41f1d2:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f1d8:	lea    edx,[ebp-0x18]
  41f1db:	push   edx
  41f1dc:	mov    edx,DWORD PTR [ebp-0xc]
  41f1df:	xor    edx,esi
  41f1e1:	add    edx,edi
  41f1e3:	push   edx
  41f1e4:	push   DWORD PTR [ecx+0x50]
  41f1e7:	push   DWORD PTR [ebp+0x20]
  41f1ea:	call   DWORD PTR [eax+0x1c]
  41f1ed:	mov    eax,DWORD PTR [ebp-0x20]
  41f1f0:	mov    ecx,DWORD PTR [eax+0x54]
  41f1f3:	mov    eax,DWORD PTR [eax+0x50]
  41f1f6:	sub    eax,ecx
  41f1f8:	add    ecx,DWORD PTR [ebp+0x20]
  41f1fb:	push   ecx
  41f1fc:	call   0x41fb69
  41f201:	mov    edx,DWORD PTR [ebp+0x20]
  41f204:	mov    eax,DWORD PTR [ebx+0x194]
  41f20a:	mov    DWORD PTR [eax],edx
  41f20c:	mov    eax,DWORD PTR [ebp+0xc]
  41f20f:	push   DWORD PTR [eax+0x54]
  41f212:	push   DWORD PTR [ebp+0x8]
  41f215:	push   edx
  41f216:	call   0x41fa5f
  41f21b:	mov    ecx,DWORD PTR [ebp+0x20]
  41f21e:	mov    eax,DWORD PTR [ecx+0x3c]
  41f221:	add    eax,ecx
  41f223:	movzx  ecx,WORD PTR [eax+0x14]
  41f227:	lea    ecx,[ecx+eax*1+0x18]
  41f22b:	mov    DWORD PTR [ebp+0x18],ecx
  41f22e:	mov    ecx,DWORD PTR [ebp-0x4]
  41f231:	movzx  edx,WORD PTR [eax+0x6]
  41f235:	xor    ecx,esi
  41f237:	add    ecx,edi
  41f239:	mov    DWORD PTR [ebp+0xc],eax
  41f23c:	cmp    edx,ecx
  41f23e:	je     0x41f2eb
  41f244:	mov    ecx,DWORD PTR [ebp-0x4]
  41f247:	xor    ecx,esi
  41f249:	add    ecx,edi
  41f24b:	mov    DWORD PTR [ebp-0x8],ecx
  41f24e:	mov    ecx,DWORD PTR [ebp-0x24]
  41f251:	movzx  edx,WORD PTR [eax+0x6]
  41f255:	xor    ecx,esi
  41f257:	sub    edx,ecx
  41f259:	sub    edx,edi
  41f25b:	cmp    DWORD PTR [ebp-0x8],edx
  41f25e:	ja     0x41f2eb
  41f264:	mov    edx,DWORD PTR [ebp+0x18]
  41f267:	add    edx,0x8
  41f26a:	mov    DWORD PTR [ebp+0x18],edx
  41f26d:	jmp    0x41f272
  41f26f:	mov    edx,DWORD PTR [ebp+0x18]
  41f272:	mov    eax,DWORD PTR [eax+0x38]
  41f275:	lea    ecx,[eax-0x1]
  41f278:	mov    DWORD PTR [ebp-0x38],eax
  41f27b:	mov    eax,DWORD PTR [edx]
  41f27d:	test   eax,ecx
  41f27f:	je     0x41f288
  41f281:	not    ecx
  41f283:	and    eax,ecx
  41f285:	add    eax,DWORD PTR [ebp-0x38]
  41f288:	mov    ecx,DWORD PTR [edx+0x4]
  41f28b:	add    ecx,DWORD PTR [ebp+0x20]
  41f28e:	push   ecx
  41f28f:	call   0x41fb69
  41f294:	mov    edx,DWORD PTR [ebp-0x4]
  41f297:	mov    eax,DWORD PTR [ebp+0x18]
  41f29a:	mov    ecx,DWORD PTR [eax+0x8]
  41f29d:	xor    edx,esi
  41f29f:	add    edx,edi
  41f2a1:	cmp    ecx,edx
  41f2a3:	je     0x41f2bc
  41f2a5:	push   ecx
  41f2a6:	mov    ecx,DWORD PTR [ebp+0x8]
  41f2a9:	add    ecx,DWORD PTR [eax+0xc]
  41f2ac:	mov    eax,DWORD PTR [eax+0x4]
  41f2af:	add    eax,DWORD PTR [ebp+0x20]
  41f2b2:	push   ecx
  41f2b3:	push   eax
  41f2b4:	call   0x41fa5f
  41f2b9:	mov    eax,DWORD PTR [ebp+0x18]
  41f2bc:	mov    ecx,DWORD PTR [ebp-0x24]
  41f2bf:	mov    edx,DWORD PTR [ebp-0x8]
  41f2c2:	add    eax,0x28
  41f2c5:	xor    ecx,esi
  41f2c7:	lea    ecx,[edx+ecx*1+0x3272e4]
  41f2ce:	mov    edx,DWORD PTR [ebp+0xc]
  41f2d1:	mov    DWORD PTR [ebp+0x18],eax
  41f2d4:	mov    eax,DWORD PTR [ebp-0x24]
  41f2d7:	movzx  edx,WORD PTR [edx+0x6]
  41f2db:	xor    eax,esi
  41f2dd:	sub    edx,eax
  41f2df:	mov    eax,DWORD PTR [ebp+0xc]
  41f2e2:	sub    edx,edi
  41f2e4:	mov    DWORD PTR [ebp-0x8],ecx
  41f2e7:	cmp    ecx,edx
  41f2e9:	jbe    0x41f26f
  41f2eb:	mov    edx,DWORD PTR [ebx+0x18c]
  41f2f1:	mov    ecx,DWORD PTR [ebp+0x20]
  41f2f4:	cmp    ecx,DWORD PTR [edx]
  41f2f6:	jne    0x41f31f
  41f2f8:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f2fe:	lea    edx,[ebp-0x18]
  41f301:	push   edx
  41f302:	mov    edx,DWORD PTR [ebp-0x10]
  41f305:	xor    edx,esi
  41f307:	add    edx,edi
  41f309:	push   edx
  41f30a:	mov    edx,DWORD PTR [ebp-0x20]
  41f30d:	push   DWORD PTR [edx+0x54]
  41f310:	push   ecx
  41f311:	call   DWORD PTR [eax+0x1c]
  41f314:	test   eax,eax
  41f316:	je     0x41f5bd
  41f31c:	mov    eax,DWORD PTR [ebp+0xc]
  41f31f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41f325:	mov    ecx,DWORD PTR [ecx]
  41f327:	xor    ecx,esi
  41f329:	add    ecx,edi
  41f32b:	je     0x41f4e8
  41f331:	mov    eax,DWORD PTR [ebp-0x4]
  41f334:	xor    eax,esi
  41f336:	add    eax,edi
  41f338:	and    DWORD PTR [ebp+0x8],0x0
  41f33c:	mov    DWORD PTR [ebp-0x14],eax
  41f33f:	mov    eax,0xf89c851d
  41f344:	lea    ecx,[eax-0x8]
  41f347:	mov    DWORD PTR [ebp-0x58],0xf89c8517
  41f34e:	mov    DWORD PTR [ebp-0x54],0xf89c850d
  41f355:	mov    DWORD PTR [ebp-0x50],eax
  41f358:	mov    DWORD PTR [ebp-0x4c],ecx
  41f35b:	mov    DWORD PTR [ebp-0x48],ecx
  41f35e:	mov    DWORD PTR [ebp-0x44],0xf89c8581
  41f365:	mov    edx,DWORD PTR [ebp+0x8]
  41f368:	mov    ecx,0x89d
  41f36d:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  41f372:	mov    edx,0x72e4
  41f377:	add    cx,dx
  41f37a:	mov    edx,DWORD PTR [ebp+0x8]
  41f37d:	inc    DWORD PTR [ebp+0x8]
  41f380:	cmp    DWORD PTR [ebp+0x8],0x6
  41f384:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  41f38c:	jb     0x41f365
  41f38e:	mov    ecx,0xf89c8513
  41f393:	mov    DWORD PTR [ebp-0xb0],eax
  41f399:	mov    DWORD PTR [ebp-0x9c],eax
  41f39f:	mov    DWORD PTR [ebp-0x74],eax
  41f3a2:	mov    DWORD PTR [ebp-0x70],eax
  41f3a5:	lea    eax,[ecx-0x1]
  41f3a8:	mov    edx,0xf89c85ff
  41f3ad:	mov    DWORD PTR [ebp-0x64],eax
  41f3b0:	mov    DWORD PTR [ebp-0x60],eax
  41f3b3:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  41f3bd:	mov    DWORD PTR [ebp-0xac],ecx
  41f3c3:	mov    DWORD PTR [ebp-0xa8],edx
  41f3c9:	mov    DWORD PTR [ebp-0xa4],0xf89c8518
  41f3d3:	mov    DWORD PTR [ebp-0xa0],0xf89c8517
  41f3dd:	mov    DWORD PTR [ebp-0x98],0xf89c85fc
  41f3e7:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41f3f1:	mov    DWORD PTR [ebp-0x90],0xf89c850d
  41f3fb:	mov    DWORD PTR [ebp-0x8c],ecx
  41f401:	mov    DWORD PTR [ebp-0x88],0xf89c8508
  41f40b:	mov    DWORD PTR [ebp-0x84],edx
  41f411:	mov    DWORD PTR [ebp-0x80],0xf89c8516
  41f418:	mov    DWORD PTR [ebp-0x7c],ecx
  41f41b:	mov    DWORD PTR [ebp-0x78],0xf89c85c0
  41f422:	mov    DWORD PTR [ebp-0x6c],ecx
  41f425:	mov    DWORD PTR [ebp-0x68],0xf89c851c
  41f42c:	mov    DWORD PTR [ebp-0x5c],0xf89c8581
  41f433:	xor    eax,eax
  41f435:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  41f43c:	xor    cl,0x9d
  41f43f:	sub    cl,0x1c
  41f442:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  41f449:	inc    eax
  41f44a:	cmp    eax,0x17
  41f44d:	jb     0x41f435
  41f44f:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f455:	lea    ecx,[ebp-0xc0]
  41f45b:	push   ecx
  41f45c:	call   DWORD PTR [eax+0x4]
  41f45f:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41f465:	lea    edx,[ebp-0xd8]
  41f46b:	push   edx
  41f46c:	push   eax
  41f46d:	call   DWORD PTR [ecx+0x8]
  41f470:	mov    DWORD PTR [ebp-0x40],eax
  41f473:	lea    eax,[ebp-0x14]
  41f476:	push   eax
  41f477:	mov    eax,DWORD PTR [ebx+0x18c]
  41f47d:	push   DWORD PTR [eax]
  41f47f:	mov    eax,DWORD PTR [ebp-0x40]
  41f482:	call   eax
  41f484:	mov    eax,DWORD PTR [ebp-0x4]
  41f487:	xor    eax,esi
  41f489:	add    eax,edi
  41f48b:	mov    DWORD PTR [ebp-0x34],eax
  41f48e:	mov    ecx,DWORD PTR [ebp-0x4]
  41f491:	mov    eax,DWORD PTR [ebp-0x14]
  41f494:	xor    ecx,esi
  41f496:	add    ecx,edi
  41f498:	cmp    eax,ecx
  41f49a:	je     0x41f4e5
  41f49c:	mov    DWORD PTR [ebp-0x3c],eax
  41f49f:	jmp    0x41f4b0
  41f4a1:	mov    eax,DWORD PTR [eax]
  41f4a3:	mov    ecx,DWORD PTR [ebp-0x3c]
  41f4a6:	mov    DWORD PTR [ebp-0x14],eax
  41f4a9:	mov    eax,DWORD PTR [ebp-0x14]
  41f4ac:	cmp    eax,ecx
  41f4ae:	je     0x41f4bd
  41f4b0:	mov    edx,DWORD PTR [eax+0x18]
  41f4b3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f4b9:	cmp    edx,DWORD PTR [ecx]
  41f4bb:	jne    0x41f4a1
  41f4bd:	mov    ecx,DWORD PTR [ebx+0x18c]
  41f4c3:	mov    edx,DWORD PTR [eax+0x18]
  41f4c6:	cmp    edx,DWORD PTR [ecx]
  41f4c8:	jne    0x41f4e5
  41f4ca:	mov    ecx,DWORD PTR [ebx+0x190]
  41f4d0:	mov    edx,DWORD PTR [ebp-0x20]
  41f4d3:	mov    edx,DWORD PTR [edx+0x28]
  41f4d6:	add    edx,DWORD PTR [ecx]
  41f4d8:	mov    DWORD PTR [eax+0x1c],edx
  41f4db:	mov    eax,DWORD PTR [ebp-0x24]
  41f4de:	xor    eax,esi
  41f4e0:	add    eax,edi
  41f4e2:	mov    DWORD PTR [ebp-0x34],eax
  41f4e5:	mov    eax,DWORD PTR [ebp+0xc]
  41f4e8:	push   ebx
  41f4e9:	push   eax
  41f4ea:	push   DWORD PTR [ebp+0x20]
  41f4ed:	call   0x41ec6b
  41f4f2:	test   eax,eax
  41f4f4:	je     0x41f5bd
  41f4fa:	push   DWORD PTR [ebp+0xc]
  41f4fd:	mov    ecx,ebx
  41f4ff:	push   DWORD PTR [ebp+0x20]
  41f502:	call   0x41ebc4
  41f507:	test   eax,eax
  41f509:	je     0x41f5bd
  41f50f:	mov    eax,DWORD PTR [ebp+0xc]
  41f512:	mov    edx,DWORD PTR [ebp+0x20]
  41f515:	mov    ecx,ebx
  41f517:	call   0x41ea9d
  41f51c:	test   eax,eax
  41f51e:	je     0x41f5bd
  41f524:	push   ebx
  41f525:	push   DWORD PTR [ebp+0x20]
  41f528:	call   0x41ef4e
  41f52d:	test   eax,eax
  41f52f:	je     0x41f5bd
  41f535:	mov    eax,DWORD PTR [ebx+0x18c]
  41f53b:	mov    edx,DWORD PTR [ebp+0x20]
  41f53e:	cmp    edx,DWORD PTR [eax]
  41f540:	jne    0x41f55c
  41f542:	mov    eax,DWORD PTR [ebx+0x1d8]
  41f548:	lea    ecx,[ebp-0x18]
  41f54b:	push   ecx
  41f54c:	push   DWORD PTR [ebp-0x18]
  41f54f:	mov    ecx,DWORD PTR [ebp-0x20]
  41f552:	push   DWORD PTR [ecx+0x54]
  41f555:	push   edx
  41f556:	call   DWORD PTR [eax+0x1c]
  41f559:	mov    edx,DWORD PTR [ebp+0x20]
  41f55c:	mov    eax,DWORD PTR [ebx+0x1c8]
  41f562:	mov    eax,DWORD PTR [eax]
  41f564:	xor    eax,esi
  41f566:	add    eax,edi
  41f568:	je     0x41f5a1
  41f56a:	mov    ecx,DWORD PTR [ebp+0xc]
  41f56d:	mov    eax,DWORD PTR [ecx+0x28]
  41f570:	mov    DWORD PTR [ebp+0x8],0xf89ca581
  41f577:	mov    esi,DWORD PTR [ebp+0x8]
  41f57a:	push   DWORD PTR [ebp+0x14]
  41f57d:	xor    esi,0x89d
  41f583:	push   DWORD PTR [ebp+0x10]
  41f586:	add    esi,0x72e4
  41f58c:	or     WORD PTR [ecx+0x16],si
  41f590:	add    eax,edx
  41f592:	push   edx
  41f593:	call   eax
  41f595:	mov    DWORD PTR [ebx+0x1d0],0xf89c8580
  41f59f:	jmp    0x41f5ab
  41f5a1:	mov    eax,DWORD PTR [ebp+0xc]
  41f5a4:	mov    eax,DWORD PTR [eax+0x28]
  41f5a7:	add    eax,edx
  41f5a9:	call   eax
  41f5ab:	mov    DWORD PTR [ebp-0x8],eax
  41f5ae:	mov    eax,DWORD PTR [ebp-0x8]
  41f5b1:	mov    ecx,DWORD PTR [ebp+0x1c]
  41f5b4:	mov    DWORD PTR [ecx],eax
  41f5b6:	mov    DWORD PTR [ebp-0x30],0x1
  41f5bd:	cmp    DWORD PTR [ebp-0x30],0x0
  41f5c1:	jne    0x41f5c7
  41f5c3:	and    DWORD PTR [ebp+0x20],0x0
  41f5c7:	mov    eax,DWORD PTR [ebp+0x20]
  41f5ca:	jmp    0x41f5ce
  41f5cc:	xor    eax,eax
  41f5ce:	pop    edi
  41f5cf:	pop    esi
  41f5d0:	pop    ebx
  41f5d1:	leave  
  41f5d2:	ret    0x1c
  41f5d5:	push   ebp
  41f5d6:	mov    ebp,esp
  41f5d8:	movzx  edx,WORD PTR [ecx+0x6]
  41f5dc:	movzx  eax,WORD PTR [ecx+0x14]
  41f5e0:	push   ebx
  41f5e1:	push   edi
  41f5e2:	xor    edi,edi
  41f5e4:	lea    eax,[eax+ecx*1+0x18]
  41f5e8:	test   edx,edx
  41f5ea:	je     0x41f60b
  41f5ec:	mov    ecx,DWORD PTR [eax+0xc]
  41f5ef:	lea    ebx,[ecx+esi*1]
  41f5f2:	cmp    DWORD PTR [ebp+0x8],ebx
  41f5f5:	jb     0x41f603
  41f5f7:	mov    ebx,DWORD PTR [eax+0x8]
  41f5fa:	add    ebx,ecx
  41f5fc:	add    ebx,esi
  41f5fe:	cmp    DWORD PTR [ebp+0x8],ebx
  41f601:	jb     0x41f60d
  41f603:	add    eax,0x28
  41f606:	inc    edi
  41f607:	cmp    edi,edx
  41f609:	jb     0x41f5ec
  41f60b:	xor    eax,eax
  41f60d:	pop    edi
  41f60e:	pop    ebx
  41f60f:	pop    ebp
  41f610:	ret    0x4
  41f613:	push   ebp
  41f614:	mov    ebp,esp
  41f616:	sub    esp,0x34
  41f619:	mov    DWORD PTR [ebp-0xc],0xf89c8581
  41f620:	mov    DWORD PTR [ebp-0x18],0xf89c8580
  41f627:	mov    DWORD PTR [ebp-0x1c],0xf89c8583
  41f62e:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  41f635:	mov    DWORD PTR [ebp-0x20],0xf89c85c0
  41f63c:	mov    DWORD PTR [ebp-0x2c],0xf89c850b
  41f643:	mov    DWORD PTR [ebp-0x2c],0xf89c85eb
  41f64a:	mov    DWORD PTR [ebp-0x10],eax
  41f64d:	mov    eax,DWORD PTR [ebp+0x8]
  41f650:	mov    DWORD PTR [ebp-0x14],eax
  41f653:	mov    eax,DWORD PTR [ebp-0xc]
  41f656:	push   ebx
  41f657:	mov    ecx,0x751089d
  41f65c:	xor    eax,ecx
  41f65e:	push   esi
  41f65f:	mov    esi,DWORD PTR [ebp-0x10]
  41f662:	mov    edx,0x3272e4
  41f667:	add    eax,edx
  41f669:	push   edi
  41f66a:	cmp    esi,eax
  41f66c:	je     0x41f84b
  41f672:	mov    eax,DWORD PTR [ebp-0xc]
  41f675:	mov    esi,DWORD PTR [ebp-0x14]
  41f678:	xor    eax,ecx
  41f67a:	add    eax,edx
  41f67c:	cmp    esi,eax
  41f67e:	je     0x41f84b
  41f684:	mov    eax,DWORD PTR [ebp-0xc]
  41f687:	xor    eax,ecx
  41f689:	add    eax,edx
  41f68b:	mov    DWORD PTR [ebp-0x24],eax
  41f68e:	mov    eax,DWORD PTR [ebp-0xc]
  41f691:	xor    eax,ecx
  41f693:	add    eax,edx
  41f695:	mov    DWORD PTR [ebp-0x28],eax
  41f698:	mov    edi,DWORD PTR [ebp-0x20]
  41f69b:	mov    ebx,DWORD PTR [ebp-0x8]
  41f69e:	mov    esi,0x89d
  41f6a3:	xor    edi,esi
  41f6a5:	mov    eax,0x72e4
  41f6aa:	xor    ebx,esi
  41f6ac:	add    edi,eax
  41f6ae:	add    ebx,eax
  41f6b0:	sub    ebx,edi
  41f6b2:	mov    WORD PTR [ebp-0x8],bx
  41f6b6:	jmp    0x41f77b
  41f6bb:	mov    edi,DWORD PTR [ebp-0xc]
  41f6be:	mov    bx,WORD PTR [ebp-0x4]
  41f6c2:	xor    edi,esi
  41f6c4:	add    edi,eax
  41f6c6:	cmp    bx,di
  41f6c9:	je     0x41f7bd
  41f6cf:	mov    edi,DWORD PTR [ebp-0xc]
  41f6d2:	mov    ebx,DWORD PTR [ebp+0xc]
  41f6d5:	xor    edi,ecx
  41f6d7:	add    edi,edx
  41f6d9:	cmp    ebx,edi
  41f6db:	mov    di,WORD PTR [ebp-0x4]
  41f6df:	mov    bx,WORD PTR [ebp+0x8]
  41f6e3:	je     0x41f74e
  41f6e5:	cmp    bx,di
  41f6e8:	je     0x41f757
  41f6ea:	mov    edi,DWORD PTR [ebp-0x20]
  41f6ed:	mov    bx,WORD PTR [ebp+0x8]
  41f6f1:	xor    edi,esi
  41f6f3:	add    edi,eax
  41f6f5:	cmp    bx,di
  41f6f8:	jb     0x41f718
  41f6fa:	mov    edi,DWORD PTR [ebp-0x2c]
  41f6fd:	mov    bx,WORD PTR [ebp+0x8]
  41f701:	xor    edi,esi
  41f703:	add    edi,eax
  41f705:	cmp    bx,di
  41f708:	ja     0x41f718
  41f70a:	movzx  edi,WORD PTR [ebp+0x8]
  41f70e:	movzx  ebx,WORD PTR [ebp-0x8]
  41f712:	add    edi,ebx
  41f714:	mov    WORD PTR [ebp+0x8],di
  41f718:	mov    edi,DWORD PTR [ebp-0x20]
  41f71b:	mov    bx,WORD PTR [ebp-0x4]
  41f71f:	xor    edi,esi
  41f721:	add    edi,eax
  41f723:	cmp    bx,di
  41f726:	jb     0x41f746
  41f728:	mov    edi,DWORD PTR [ebp-0x2c]
  41f72b:	mov    bx,WORD PTR [ebp-0x4]
  41f72f:	xor    edi,esi
  41f731:	add    edi,eax
  41f733:	cmp    bx,di
  41f736:	ja     0x41f746
  41f738:	movzx  edi,WORD PTR [ebp-0x4]
  41f73c:	movzx  ebx,WORD PTR [ebp-0x8]
  41f740:	add    edi,ebx
  41f742:	mov    WORD PTR [ebp-0x4],di
  41f746:	mov    di,WORD PTR [ebp-0x4]
  41f74a:	mov    bx,WORD PTR [ebp+0x8]
  41f74e:	cmp    bx,di
  41f751:	jne    0x41f84b
  41f757:	mov    edi,DWORD PTR [ebp-0x1c]
  41f75a:	mov    ebx,DWORD PTR [ebp-0x10]
  41f75d:	xor    edi,ecx
  41f75f:	lea    edi,[edi+ebx*1+0x3272e4]
  41f766:	mov    DWORD PTR [ebp-0x10],edi
  41f769:	mov    edi,DWORD PTR [ebp-0x1c]
  41f76c:	mov    ebx,DWORD PTR [ebp-0x14]
  41f76f:	xor    edi,ecx
  41f771:	lea    edi,[edi+ebx*1+0x3272e4]
  41f778:	mov    DWORD PTR [ebp-0x14],edi
  41f77b:	mov    edi,DWORD PTR [ebp-0x24]
  41f77e:	mov    ebx,DWORD PTR [ebp-0x10]
  41f781:	mov    di,WORD PTR [ebx+edi*2]
  41f785:	mov    WORD PTR [ebp+0x8],di
  41f789:	mov    edi,DWORD PTR [ebp-0x28]
  41f78c:	mov    ebx,DWORD PTR [ebp-0x14]
  41f78f:	mov    di,WORD PTR [ebx+edi*2]
  41f793:	mov    WORD PTR [ebp-0x4],di
  41f797:	mov    edi,DWORD PTR [ebp-0xc]
  41f79a:	mov    bx,WORD PTR [ebp+0x8]
  41f79e:	xor    edi,esi
  41f7a0:	add    edi,eax
  41f7a2:	cmp    bx,di
  41f7a5:	jne    0x41f6bb
  41f7ab:	mov    eax,DWORD PTR [ebp-0x18]
  41f7ae:	mov    esi,DWORD PTR [ebp-0xc]
  41f7b1:	xor    eax,ecx
  41f7b3:	add    eax,edx
  41f7b5:	imul   eax,esi
  41f7b8:	mov    DWORD PTR [ebp-0xc],eax
  41f7bb:	jmp    0x41f7cf
  41f7bd:	mov    eax,DWORD PTR [ebp-0xc]
  41f7c0:	mov    esi,DWORD PTR [ebp-0x18]
  41f7c3:	xor    eax,ecx
  41f7c5:	lea    eax,[eax+esi*1+0x3272e4]
  41f7cc:	mov    DWORD PTR [ebp-0x18],eax
  41f7cf:	mov    eax,DWORD PTR [ebp-0x24]
  41f7d2:	sub    eax,edx
  41f7d4:	xor    eax,ecx
  41f7d6:	mov    DWORD PTR [ebp-0x30],eax
  41f7d9:	mov    eax,DWORD PTR [ebp-0x28]
  41f7dc:	sub    eax,edx
  41f7de:	xor    eax,ecx
  41f7e0:	mov    DWORD PTR [ebp-0x34],eax
  41f7e3:	mov    eax,DWORD PTR [ebp-0x34]
  41f7e6:	mov    esi,DWORD PTR [ebp-0x1c]
  41f7e9:	xor    esi,ecx
  41f7eb:	add    esi,edx
  41f7ed:	xor    eax,ecx
  41f7ef:	add    eax,0x3272e4
  41f7f4:	imul   esi,eax
  41f7f7:	mov    eax,DWORD PTR [ebp-0x14]
  41f7fa:	movzx  eax,WORD PTR [esi+eax*1]
  41f7fe:	mov    esi,DWORD PTR [ebp-0x30]
  41f801:	mov    edi,DWORD PTR [ebp-0x1c]
  41f804:	xor    esi,ecx
  41f806:	add    esi,edx
  41f808:	xor    edi,ecx
  41f80a:	add    edi,edx
  41f80c:	imul   edi,esi
  41f80f:	mov    esi,DWORD PTR [ebp-0x10]
  41f812:	movzx  esi,WORD PTR [edi+esi*1]
  41f816:	sub    eax,edx
  41f818:	sub    esi,edx
  41f81a:	xor    eax,ecx
  41f81c:	xor    esi,ecx
  41f81e:	cmp    esi,eax
  41f820:	jne    0x41f84b
  41f822:	mov    eax,DWORD PTR [ebp-0x30]
  41f825:	mov    esi,DWORD PTR [ebp-0x1c]
  41f828:	xor    eax,ecx
  41f82a:	add    eax,0x3272e4
  41f82f:	xor    esi,ecx
  41f831:	add    esi,edx
  41f833:	imul   esi,eax
  41f836:	mov    eax,DWORD PTR [ebp-0x10]
  41f839:	movzx  eax,WORD PTR [esi+eax*1]
  41f83d:	mov    esi,DWORD PTR [ebp-0xc]
  41f840:	sub    eax,edx
  41f842:	xor    eax,ecx
  41f844:	cmp    eax,esi
  41f846:	mov    eax,DWORD PTR [ebp-0xc]
  41f849:	je     0x41f84e
  41f84b:	mov    eax,DWORD PTR [ebp-0x18]
  41f84e:	pop    edi
  41f84f:	xor    eax,ecx
  41f851:	pop    esi
  41f852:	add    eax,edx
  41f854:	pop    ebx
  41f855:	leave  
  41f856:	ret    0x8
  41f859:	push   ebp
  41f85a:	mov    ebp,esp
  41f85c:	push   ecx
  41f85d:	mov    cx,WORD PTR [eax]
  41f860:	push   esi
  41f861:	mov    esi,0x3b52
  41f866:	sub    cx,si
  41f869:	mov    esi,0x8a8e
  41f86e:	xor    cx,si
  41f871:	mov    esi,0x4e20
  41f876:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f87d:	mov    edx,0xf89c8581
  41f882:	cmp    cx,si
  41f885:	je     0x41f8e4
  41f887:	push   ebx
  41f888:	push   edi
  41f889:	movzx  ecx,cx
  41f88c:	mov    edi,0xffcd8d1c
  41f891:	mov    esi,0x751089d
  41f896:	mov    ebx,0x4f84
  41f89b:	cmp    cx,bx
  41f89e:	jne    0x41f8a3
  41f8a0:	mov    DWORD PTR [ebp-0x4],edx
  41f8a3:	lea    edx,[edi+0x1]
  41f8a6:	xor    edx,esi
  41f8a8:	mov    edi,edx
  41f8aa:	xor    edi,esi
  41f8ac:	mov    cx,WORD PTR [eax+edi*2+0x64e5c8]
  41f8b4:	mov    ebx,0x3b52
  41f8b9:	sub    cx,bx
  41f8bc:	mov    ebx,0x8a8e
  41f8c1:	xor    cx,bx
  41f8c4:	mov    ebx,0x4e20
  41f8c9:	cmp    cx,bx
  41f8cc:	jne    0x41f896
  41f8ce:	mov    ecx,DWORD PTR [ebp-0x4]
  41f8d1:	pop    edi
  41f8d2:	pop    ebx
  41f8d3:	cmp    ecx,0xf89c8586
  41f8d9:	je     0x41f8e4
  41f8db:	xor    ecx,esi
  41f8dd:	lea    eax,[eax+ecx*2+0x64e5ca]
  41f8e4:	pop    esi
  41f8e5:	leave  
  41f8e6:	ret    
  41f8e7:	push   ebp
  41f8e8:	mov    ebp,esp
  41f8ea:	push   ecx
  41f8eb:	push   esi
  41f8ec:	push   edi
  41f8ed:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f8f4:	mov    esi,0xf89c8581
  41f8f9:	call   0x41f859
  41f8fe:	mov    edi,eax
  41f900:	mov    al,BYTE PTR [edi]
  41f902:	add    al,0x7
  41f904:	xor    al,0x75
  41f906:	cmp    al,0x72
  41f908:	je     0x41f96b
  41f90a:	mov    eax,edi
  41f90c:	mov    edx,0xffcd8d1c
  41f911:	mov    ecx,0x751089d
  41f916:	push   ebx
  41f917:	mov    ax,WORD PTR [eax]
  41f91a:	mov    ebx,0x3b52
  41f91f:	sub    ax,bx
  41f922:	mov    ebx,0x8a8e
  41f927:	xor    ax,bx
  41f92a:	mov    ebx,0x4e52
  41f92f:	cmp    ax,bx
  41f932:	jne    0x41f937
  41f934:	mov    DWORD PTR [ebp-0x4],esi
  41f937:	lea    esi,[edx+0x1]
  41f93a:	xor    esi,ecx
  41f93c:	mov    edx,esi
  41f93e:	xor    edx,ecx
  41f940:	lea    eax,[edi+edx*2+0x64e5c8]
  41f947:	mov    bl,BYTE PTR [eax]
  41f949:	add    bl,0x7
  41f94c:	xor    bl,0x75
  41f94f:	cmp    bl,0x72
  41f952:	jne    0x41f917
  41f954:	mov    eax,DWORD PTR [ebp-0x4]
  41f957:	pop    ebx
  41f958:	cmp    eax,0xf89c8586
  41f95d:	je     0x41f96b
  41f95f:	xor    eax,ecx
  41f961:	xor    ecx,ecx
  41f963:	mov    WORD PTR [edi+eax*2+0x64e5c8],cx
  41f96b:	mov    eax,edi
  41f96d:	pop    edi
  41f96e:	pop    esi
  41f96f:	leave  
  41f970:	ret    
  41f971:	push   ebp
  41f972:	mov    ebp,esp
  41f974:	push   ecx
  41f975:	push   esi
  41f976:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41f97d:	mov    esi,0xf89c8581
  41f982:	call   0x41f859
  41f987:	mov    cx,WORD PTR [eax]
  41f98a:	mov    edx,0x3b52
  41f98f:	sub    cx,dx
  41f992:	mov    edx,0x8a8e
  41f997:	xor    cx,dx
  41f99a:	mov    edx,0x4e20
  41f99f:	cmp    cx,dx
  41f9a2:	je     0x41f9fb
  41f9a4:	push   ebx
  41f9a5:	push   edi
  41f9a6:	movzx  ecx,cx
  41f9a9:	mov    edx,0xffcd8d1c
  41f9ae:	mov    edi,0x751089d
  41f9b3:	mov    ebx,0x4e52
  41f9b8:	cmp    cx,bx
  41f9bb:	jne    0x41f9c0
  41f9bd:	mov    DWORD PTR [ebp-0x4],esi
  41f9c0:	lea    esi,[edx+0x1]
  41f9c3:	xor    esi,edi
  41f9c5:	mov    edx,esi
  41f9c7:	xor    edx,edi
  41f9c9:	mov    cx,WORD PTR [eax+edx*2+0x64e5c8]
  41f9d1:	mov    ebx,0x3b52
  41f9d6:	sub    cx,bx
  41f9d9:	mov    ebx,0x8a8e
  41f9de:	xor    cx,bx
  41f9e1:	mov    ebx,0x4e20
  41f9e6:	cmp    cx,bx
  41f9e9:	jne    0x41f9b3
  41f9eb:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41f9f2:	pop    edi
  41f9f3:	pop    ebx
  41f9f4:	je     0x41f9fb
  41f9f6:	xor    eax,eax
  41f9f8:	inc    eax
  41f9f9:	jmp    0x41f9fd
  41f9fb:	xor    eax,eax
  41f9fd:	pop    esi
  41f9fe:	leave  
  41f9ff:	ret    
  41fa00:	push   ebp
  41fa01:	mov    ebp,esp
  41fa03:	push   ecx
  41fa04:	mov    eax,DWORD PTR [ebp+0x8]
  41fa07:	movzx  ecx,WORD PTR [eax]
  41fa0a:	push   esi
  41fa0b:	lea    eax,[ecx-0x3b52]
  41fa11:	mov    esi,0x8a8e
  41fa16:	push   edi
  41fa17:	xor    eax,esi
  41fa19:	mov    edi,0x4e20
  41fa1e:	mov    DWORD PTR [ebp-0x4],edx
  41fa21:	cmp    ax,di
  41fa24:	je     0x41fa51
  41fa26:	mov    eax,DWORD PTR [ebp+0x8]
  41fa29:	sub    eax,edx
  41fa2b:	mov    DWORD PTR [ebp+0x8],eax
  41fa2e:	jmp    0x41fa33
  41fa30:	mov    eax,DWORD PTR [ebp+0x8]
  41fa33:	mov    WORD PTR [edx],cx
  41fa36:	add    edx,0x2
  41fa39:	movzx  edi,WORD PTR [eax+edx*1]
  41fa3d:	mov    ecx,edi
  41fa3f:	add    edi,0xffffc4ae
  41fa45:	xor    edi,esi
  41fa47:	mov    eax,0x4e20
  41fa4c:	cmp    di,ax
  41fa4f:	jne    0x41fa30
  41fa51:	xor    eax,eax
  41fa53:	pop    edi
  41fa54:	mov    WORD PTR [edx],ax
  41fa57:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5a:	pop    esi
  41fa5b:	leave  
  41fa5c:	ret    0x4
  41fa5f:	push   ebp
  41fa60:	mov    ebp,esp
  41fa62:	sub    esp,0x18
  41fa65:	mov    DWORD PTR [ebp-0x8],0xf89c8581
  41fa6c:	mov    DWORD PTR [ebp-0x18],0xf89c8580
  41fa73:	mov    ecx,DWORD PTR [ebp-0x8]
  41fa76:	push   esi
  41fa77:	mov    eax,0x751089d
  41fa7c:	xor    ecx,eax
  41fa7e:	mov    esi,0x3272e4
  41fa83:	add    ecx,esi
  41fa85:	mov    DWORD PTR [ebp-0x4],ecx
  41fa88:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41fa8f:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41fa96:	push   edi
  41fa97:	mov    DWORD PTR [ebp-0x14],0xf89c8583
  41fa9e:	jmp    0x41fb3f
  41faa3:	mov    ecx,DWORD PTR [ebp-0x4]
  41faa6:	mov    edx,DWORD PTR [ebp+0x10]
  41faa9:	sub    edx,ecx
  41faab:	mov    ecx,DWORD PTR [ebp-0xc]
  41faae:	xor    ecx,eax
  41fab0:	add    ecx,esi
  41fab2:	cmp    edx,ecx
  41fab4:	jbe    0x41fad1
  41fab6:	mov    edx,DWORD PTR [ebp-0x4]
  41fab9:	add    edx,DWORD PTR [ebp+0x8]
  41fabc:	mov    ecx,DWORD PTR [ebp-0x4]
  41fabf:	add    ecx,DWORD PTR [ebp+0xc]
  41fac2:	mov    edi,DWORD PTR [ecx]
  41fac4:	mov    DWORD PTR [edx],edi
  41fac6:	mov    ecx,DWORD PTR [ecx+0x4]
  41fac9:	mov    DWORD PTR [edx+0x4],ecx
  41facc:	mov    ecx,DWORD PTR [ebp-0xc]
  41facf:	jmp    0x41fb1e
  41fad1:	mov    ecx,DWORD PTR [ebp-0x4]
  41fad4:	mov    edx,DWORD PTR [ebp+0x10]
  41fad7:	sub    edx,ecx
  41fad9:	mov    ecx,DWORD PTR [ebp-0x10]
  41fadc:	xor    ecx,eax
  41fade:	add    ecx,esi
  41fae0:	cmp    edx,ecx
  41fae2:	mov    ecx,DWORD PTR [ebp-0x4]
  41fae5:	jbe    0x41faf9
  41fae7:	add    ecx,DWORD PTR [ebp+0x8]
  41faea:	mov    edx,DWORD PTR [ebp-0x4]
  41faed:	add    edx,DWORD PTR [ebp+0xc]
  41faf0:	mov    edx,DWORD PTR [edx]
  41faf2:	mov    DWORD PTR [ecx],edx
  41faf4:	mov    ecx,DWORD PTR [ebp-0x10]
  41faf7:	jmp    0x41fb1e
  41faf9:	mov    edx,DWORD PTR [ebp+0x10]
  41fafc:	sub    edx,ecx
  41fafe:	mov    ecx,DWORD PTR [ebp-0x14]
  41fb01:	xor    ecx,eax
  41fb03:	add    ecx,esi
  41fb05:	cmp    edx,ecx
  41fb07:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb0a:	jbe    0x41fb2f
  41fb0c:	add    ecx,DWORD PTR [ebp+0x8]
  41fb0f:	mov    edx,DWORD PTR [ebp-0x4]
  41fb12:	add    edx,DWORD PTR [ebp+0xc]
  41fb15:	mov    dx,WORD PTR [edx]
  41fb18:	mov    WORD PTR [ecx],dx
  41fb1b:	mov    ecx,DWORD PTR [ebp-0x14]
  41fb1e:	mov    edx,DWORD PTR [ebp-0x4]
  41fb21:	xor    ecx,eax
  41fb23:	lea    ecx,[ecx+edx*1+0x3272e4]
  41fb2a:	mov    DWORD PTR [ebp-0x4],ecx
  41fb2d:	jmp    0x41fb3f
  41fb2f:	add    ecx,DWORD PTR [ebp+0x8]
  41fb32:	mov    edx,DWORD PTR [ebp-0x4]
  41fb35:	add    edx,DWORD PTR [ebp+0xc]
  41fb38:	mov    dl,BYTE PTR [edx]
  41fb3a:	mov    BYTE PTR [ecx],dl
  41fb3c:	inc    DWORD PTR [ebp-0x4]
  41fb3f:	mov    ecx,DWORD PTR [ebp-0x18]
  41fb42:	mov    edx,DWORD PTR [ebp+0x10]
  41fb45:	xor    ecx,eax
  41fb47:	add    ecx,esi
  41fb49:	imul   ecx,edx
  41fb4c:	mov    edx,DWORD PTR [ebp-0x8]
  41fb4f:	mov    edi,DWORD PTR [ebp-0x4]
  41fb52:	xor    edx,eax
  41fb54:	lea    edx,[edx+edi*1+0x3272e4]
  41fb5b:	cmp    edx,ecx
  41fb5d:	jb     0x41faa3
  41fb63:	pop    edi
  41fb64:	pop    esi
  41fb65:	leave  
  41fb66:	ret    0xc
  41fb69:	push   ebp
  41fb6a:	mov    ebp,esp
  41fb6c:	sub    esp,0xc
  41fb6f:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  41fb76:	push   esi
  41fb77:	mov    esi,eax
  41fb79:	mov    DWORD PTR [ebp-0x8],0xf89c8580
  41fb80:	mov    edx,DWORD PTR [ebp-0x4]
  41fb83:	mov    eax,0x751089d
  41fb88:	xor    edx,eax
  41fb8a:	mov    ecx,0x3272e4
  41fb8f:	add    edx,ecx
  41fb91:	cmp    esi,edx
  41fb93:	je     0x41fbd5
  41fb95:	push   ebx
  41fb96:	push   edi
  41fb97:	mov    edx,DWORD PTR [ebp-0x8]
  41fb9a:	mov    ebx,DWORD PTR [ebp+0x8]
  41fb9d:	xor    edx,eax
  41fb9f:	mov    edi,0xffcd8d1c
  41fba4:	sub    edi,edx
  41fba6:	add    esi,edi
  41fba8:	lea    edx,[esi-0x3272e4]
  41fbae:	xor    edx,eax
  41fbb0:	mov    DWORD PTR [ebp-0xc],edx
  41fbb3:	mov    edx,DWORD PTR [ebp-0x4]
  41fbb6:	mov    edi,DWORD PTR [ebp-0xc]
  41fbb9:	xor    dl,0x9d
  41fbbc:	sub    dl,0x1c
  41fbbf:	xor    edi,eax
  41fbc1:	mov    BYTE PTR [edi+ebx*1+0x3272e4],dl
  41fbc8:	mov    edx,DWORD PTR [ebp-0x4]
  41fbcb:	xor    edx,eax
  41fbcd:	add    edx,ecx
  41fbcf:	cmp    esi,edx
  41fbd1:	jne    0x41fb97
  41fbd3:	pop    edi
  41fbd4:	pop    ebx
  41fbd5:	pop    esi
  41fbd6:	leave  
  41fbd7:	ret    0x4
  41fbda:	push   ebp
  41fbdb:	mov    ebp,esp
  41fbdd:	sub    esp,0x21c
  41fbe3:	mov    DWORD PTR [ebp-0x4],0xf89c8581
  41fbea:	mov    DWORD PTR [ebp-0x14],0xf89c8580
  41fbf1:	mov    eax,DWORD PTR [ebp+0x10]
  41fbf4:	mov    eax,DWORD PTR [ebp-0x4]
  41fbf7:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbfa:	push   esi
  41fbfb:	push   edi
  41fbfc:	mov    edi,0x751089d
  41fc01:	xor    eax,edi
  41fc03:	mov    esi,0x3272e4
  41fc08:	add    eax,esi
  41fc0a:	cmp    eax,ecx
  41fc0c:	mov    eax,DWORD PTR [ebp-0x4]
  41fc0f:	jne    0x41fc1a
  41fc11:	xor    eax,edi
  41fc13:	add    eax,esi
  41fc15:	jmp    0x41fcc6
  41fc1a:	mov    ecx,DWORD PTR [ebp+0xc]
  41fc1d:	xor    eax,edi
  41fc1f:	add    eax,esi
  41fc21:	cmp    eax,ecx
  41fc23:	jne    0x41fc2a
  41fc25:	mov    eax,DWORD PTR [ebp-0x4]
  41fc28:	jmp    0x41fc11
  41fc2a:	lea    eax,[ebp-0x21c]
  41fc30:	mov    DWORD PTR [ebp-0x8],eax
  41fc33:	mov    eax,DWORD PTR [ebp+0xc]
  41fc36:	mov    DWORD PTR [ebp-0x10],eax
  41fc39:	mov    eax,DWORD PTR [ebp-0x4]
  41fc3c:	xor    eax,edi
  41fc3e:	add    eax,esi
  41fc40:	mov    DWORD PTR [ebp+0x10],eax
  41fc43:	mov    eax,DWORD PTR [ebp+0xc]
  41fc46:	push   ebx
  41fc47:	call   0x41f971
  41fc4c:	mov    ebx,eax
  41fc4e:	mov    eax,DWORD PTR [ebp+0x8]
  41fc51:	mov    eax,DWORD PTR [eax+0x14]
  41fc54:	jmp    0x41fcae
  41fc56:	mov    eax,DWORD PTR [ebp+0xc]
  41fc59:	sub    eax,0x8
  41fc5c:	mov    DWORD PTR [ebp-0xc],eax
  41fc5f:	mov    eax,DWORD PTR [ebp-0xc]
  41fc62:	mov    eax,DWORD PTR [eax+0x28]
  41fc65:	call   0x41f859
  41fc6a:	mov    DWORD PTR [ebp+0x10],eax
  41fc6d:	push   DWORD PTR [ebp+0x10]
  41fc70:	mov    edx,DWORD PTR [ebp-0x8]
  41fc73:	call   0x41fa00
  41fc78:	mov    eax,DWORD PTR [ebp-0x4]
  41fc7b:	xor    eax,edi
  41fc7d:	add    eax,esi
  41fc7f:	cmp    eax,ebx
  41fc81:	jne    0x41fc8b
  41fc83:	mov    eax,DWORD PTR [ebp-0x8]
  41fc86:	call   0x41f8e7
  41fc8b:	mov    eax,DWORD PTR [ebp-0x14]
  41fc8e:	xor    eax,edi
  41fc90:	add    eax,esi
  41fc92:	push   eax
  41fc93:	push   DWORD PTR [ebp-0x10]
  41fc96:	mov    eax,DWORD PTR [ebp-0x8]
  41fc99:	call   0x41f613
  41fc9e:	mov    ecx,DWORD PTR [ebp-0x4]
  41fca1:	xor    ecx,edi
  41fca3:	add    ecx,esi
  41fca5:	cmp    eax,ecx
  41fca7:	je     0x41fccc
  41fca9:	mov    eax,DWORD PTR [ebp+0xc]
  41fcac:	mov    eax,DWORD PTR [eax]
  41fcae:	mov    DWORD PTR [ebp+0xc],eax
  41fcb1:	mov    eax,DWORD PTR [ebp+0x8]
  41fcb4:	mov    ecx,DWORD PTR [ebp+0xc]
  41fcb7:	add    eax,0x14
  41fcba:	cmp    ecx,eax
  41fcbc:	jne    0x41fc56
  41fcbe:	mov    eax,DWORD PTR [ebp-0x4]
  41fcc1:	xor    eax,edi
  41fcc3:	add    eax,esi
  41fcc5:	pop    ebx
  41fcc6:	pop    edi
  41fcc7:	pop    esi
  41fcc8:	leave  
  41fcc9:	ret    0xc
  41fccc:	mov    eax,DWORD PTR [ebp-0xc]
  41fccf:	mov    eax,DWORD PTR [eax+0x18]
  41fcd2:	jmp    0x41fcc5
  41fcd4:	push   ebp
  41fcd5:	mov    ebp,esp
  41fcd7:	mov    eax,DWORD PTR [ebp+0xc]
  41fcda:	sub    esp,0x10
  41fcdd:	cmp    DWORD PTR [ebp+0x8],0x0
  41fce1:	push   ebx
  41fce2:	push   esi
  41fce3:	push   edi
  41fce4:	je     0x41fd99
  41fcea:	test   eax,eax
  41fcec:	je     0x41fd99
  41fcf2:	movzx  eax,WORD PTR [eax+0x20]
  41fcf6:	mov    ecx,eax
  41fcf8:	mov    DWORD PTR [ebp-0x10],eax
  41fcfb:	xor    edx,edx
  41fcfd:	and    DWORD PTR [ebp-0x8],edx
  41fd00:	mov    eax,0x8a8e
  41fd05:	xor    ecx,eax
  41fd07:	add    ecx,0x3b52
  41fd0d:	mov    DWORD PTR [ebp-0xc],ecx
  41fd10:	and    DWORD PTR [ebp-0x4],0x0
  41fd14:	xor    ecx,ecx
  41fd16:	push   0x7c
  41fd18:	pop    edi
  41fd19:	cmp    cx,WORD PTR [ebp-0xc]
  41fd1d:	jae    0x41fd83
  41fd1f:	lea    esi,[edx-0x3b52]
  41fd25:	xor    esi,eax
  41fd27:	movzx  ecx,WORD PTR [ebp-0x4]
  41fd2b:	mov    ebx,DWORD PTR [ebp+0xc]
  41fd2e:	lea    ecx,[ebx+ecx*4]
  41fd31:	cmp    WORD PTR [ecx+0x2],si
  41fd35:	jne    0x41fd6e
  41fd37:	movzx  ecx,WORD PTR [ecx]
  41fd3a:	mov    edi,0x4e20
  41fd3f:	cmp    cx,di
  41fd42:	jne    0x41fd50
  41fd44:	mov    ebx,DWORD PTR [ebp+0x8]
  41fd47:	movzx  edi,dx
  41fd4a:	cmp    BYTE PTR [edi+ebx*1],0x0
  41fd4e:	je     0x41fd7d
  41fd50:	mov    ebx,DWORD PTR [ebp+0x8]
  41fd53:	movzx  edi,dx
  41fd56:	movsx  di,BYTE PTR [edi+ebx*1]
  41fd5b:	mov    ebx,0x3b52
  41fd60:	sub    di,bx
  41fd63:	xor    di,ax
  41fd66:	cmp    cx,di
  41fd69:	je     0x41fd7d
  41fd6b:	push   0x72
  41fd6d:	pop    edi
  41fd6e:	inc    DWORD PTR [ebp-0x4]
  41fd71:	mov    cx,WORD PTR [ebp-0xc]
  41fd75:	cmp    WORD PTR [ebp-0x4],cx
  41fd79:	jb     0x41fd27
  41fd7b:	jmp    0x41fd83
  41fd7d:	inc    DWORD PTR [ebp-0x8]
  41fd80:	push   0x7d
  41fd82:	pop    edi
  41fd83:	mov    esi,DWORD PTR [ebp+0x8]
  41fd86:	movzx  ecx,dx
  41fd89:	cmp    BYTE PTR [ecx+esi*1],0x0
  41fd8d:	je     0x41fda2
  41fd8f:	inc    edx
  41fd90:	cmp    edi,0x72
  41fd93:	jne    0x41fd10
  41fd99:	xor    eax,eax
  41fd9b:	pop    edi
  41fd9c:	pop    esi
  41fd9d:	pop    ebx
  41fd9e:	leave  
  41fd9f:	ret    0x8
  41fda2:	mov    ecx,DWORD PTR [ebp-0x8]
  41fda5:	add    ecx,0xffffc4ae
  41fdab:	xor    cx,ax
  41fdae:	xor    eax,eax
  41fdb0:	cmp    cx,WORD PTR [ebp-0x10]
  41fdb4:	sete   al
  41fdb7:	jmp    0x41fd9b
  41fdb9:	push   ebp
  41fdba:	mov    ebp,esp
  41fdbc:	sub    esp,0x50
  41fdbf:	push   edi
  41fdc0:	mov    edi,eax
  41fdc2:	mov    eax,DWORD PTR [edi+0x1a8]
  41fdc8:	cmp    DWORD PTR [eax],0x0
  41fdcb:	jne    0x41fdd4
  41fdcd:	xor    eax,eax
  41fdcf:	jmp    0x41ff05
  41fdd4:	push   DWORD PTR [ebp+0x8]
  41fdd7:	push   0x2c
  41fdd9:	pop    eax
  41fdda:	call   0x41fb69
  41fddf:	mov    edx,DWORD PTR [edi+0x1ac]
  41fde5:	lea    eax,[edi+0x22]
  41fde8:	mov    DWORD PTR [ebp-0x4c],eax
  41fdeb:	lea    eax,[edi+0x44]
  41fdee:	mov    DWORD PTR [ebp-0x48],eax
  41fdf1:	lea    eax,[edi+0x66]
  41fdf4:	mov    DWORD PTR [ebp-0x44],eax
  41fdf7:	lea    eax,[edi+0x88]
  41fdfd:	mov    DWORD PTR [ebp-0x40],eax
  41fe00:	lea    eax,[edi+0xaa]
  41fe06:	mov    DWORD PTR [ebp-0x3c],eax
  41fe09:	lea    eax,[edi+0xcc]
  41fe0f:	mov    DWORD PTR [ebp-0x38],eax
  41fe12:	lea    eax,[edi+0xee]
  41fe18:	mov    DWORD PTR [ebp-0x34],eax
  41fe1b:	lea    eax,[edi+0x110]
  41fe21:	mov    DWORD PTR [ebp-0x30],eax
  41fe24:	lea    eax,[edi+0x132]
  41fe2a:	mov    DWORD PTR [ebp-0x2c],eax
  41fe2d:	lea    eax,[edi+0x154]
  41fe33:	push   edi
  41fe34:	mov    DWORD PTR [ebp-0x50],edi
  41fe37:	mov    DWORD PTR [ebp-0x28],eax
  41fe3a:	call   0x41ff39
  41fe3f:	push   eax
  41fe40:	mov    eax,DWORD PTR [edi+0x1a8]
  41fe46:	push   DWORD PTR [eax]
  41fe48:	call   0x41fbda
  41fe4d:	mov    DWORD PTR [ebp-0x10],eax
  41fe50:	test   eax,eax
  41fe52:	je     0x41ff05
  41fe58:	mov    ecx,DWORD PTR [eax+0x3c]
  41fe5b:	push   ebx
  41fe5c:	push   esi
  41fe5d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41fe61:	add    esi,eax
  41fe63:	mov    edi,DWORD PTR [esi+0x24]
  41fe66:	mov    ecx,DWORD PTR [esi+0x1c]
  41fe69:	mov    edx,DWORD PTR [esi+0x20]
  41fe6c:	mov    ebx,DWORD PTR [esi+0x18]
  41fe6f:	add    edi,eax
  41fe71:	mov    DWORD PTR [ebp-0x20],edi
  41fe74:	mov    edi,DWORD PTR [esi+0x14]
  41fe77:	add    ecx,eax
  41fe79:	add    edx,eax
  41fe7b:	mov    DWORD PTR [ebp-0xc],ecx
  41fe7e:	mov    DWORD PTR [ebp-0x1c],edx
  41fe81:	mov    DWORD PTR [ebp-0x8],edi
  41fe84:	cmp    edi,ebx
  41fe86:	ja     0x41fe8b
  41fe88:	mov    DWORD PTR [ebp-0x8],ebx
  41fe8b:	xor    ebx,ebx
  41fe8d:	mov    DWORD PTR [ebp-0x18],ebx
  41fe90:	cmp    DWORD PTR [ebp-0x8],ebx
  41fe93:	jbe    0x41ff03
  41fe95:	jmp    0x41fe9a
  41fe97:	mov    edx,DWORD PTR [ebp-0x1c]
  41fe9a:	mov    edi,DWORD PTR [ebp-0x20]
  41fe9d:	movzx  edi,WORD PTR [edi+ebx*2]
  41fea1:	cmp    ebx,DWORD PTR [esi+0x18]
  41fea4:	jae    0x41ff03
  41fea6:	cmp    edi,DWORD PTR [esi+0x14]
  41fea9:	jae    0x41ff03
  41feab:	mov    ebx,DWORD PTR [edx+ebx*4]
  41feae:	mov    edx,DWORD PTR [ebp+0x8]
  41feb1:	mov    edi,DWORD PTR [ecx+edi*4]
  41feb4:	mov    DWORD PTR [ebp-0x4],edx
  41feb7:	lea    edx,[ebp-0x50]
  41feba:	add    ebx,eax
  41febc:	add    edi,eax
  41febe:	sub    edx,DWORD PTR [ebp+0x8]
  41fec1:	mov    DWORD PTR [ebp-0x14],0xb
  41fec8:	mov    DWORD PTR [ebp-0x24],edx
  41fecb:	mov    edx,DWORD PTR [ebp-0x4]
  41fece:	cmp    DWORD PTR [edx],0x0
  41fed1:	jne    0x41feee
  41fed3:	mov    eax,DWORD PTR [ebp-0x24]
  41fed6:	push   DWORD PTR [eax+edx*1]
  41fed9:	push   ebx
  41feda:	call   0x41fcd4
  41fedf:	mov    ecx,DWORD PTR [ebp-0xc]
  41fee2:	test   eax,eax
  41fee4:	je     0x41feeb
  41fee6:	mov    eax,DWORD PTR [ebp-0x4]
  41fee9:	mov    DWORD PTR [eax],edi
  41feeb:	mov    eax,DWORD PTR [ebp-0x10]
  41feee:	add    DWORD PTR [ebp-0x4],0x4
  41fef2:	dec    DWORD PTR [ebp-0x14]
  41fef5:	jne    0x41fecb
  41fef7:	mov    ebx,DWORD PTR [ebp-0x18]
  41fefa:	inc    ebx
  41fefb:	mov    DWORD PTR [ebp-0x18],ebx
  41fefe:	cmp    ebx,DWORD PTR [ebp-0x8]
  41ff01:	jb     0x41fe97
  41ff03:	pop    esi
  41ff04:	pop    ebx
  41ff05:	pop    edi
  41ff06:	leave  
  41ff07:	ret    0x4
  41ff0a:	push   ebp
  41ff0b:	mov    ebp,esp
  41ff0d:	mov    eax,DWORD PTR [ebp+0x8]
  41ff10:	push   esi
  41ff11:	push   DWORD PTR [eax+0x1d8]
  41ff17:	lea    esi,[eax+0x198]
  41ff1d:	mov    eax,DWORD PTR [ebp+0x8]
  41ff20:	call   0x41fdb9
  41ff25:	mov    ecx,DWORD PTR [esi]
  41ff27:	mov    DWORD PTR [ecx],eax
  41ff29:	mov    eax,DWORD PTR [esi]
  41ff2b:	xor    ecx,ecx
  41ff2d:	cmp    DWORD PTR [eax],ecx
  41ff2f:	pop    esi
  41ff30:	setne  cl
  41ff33:	mov    eax,ecx
  41ff35:	pop    ebp
  41ff36:	ret    0x4
  41ff39:	mov    ecx,DWORD PTR [edi+0x188]
  41ff3f:	push   ebx
  41ff40:	jmp    0x41ff55
  41ff42:	xor    eax,0x8a8e
  41ff47:	add    eax,0x3b52
  41ff4c:	mov    WORD PTR [ecx],ax
  41ff4f:	add    ecx,0x2
  41ff52:	add    edx,0x2
  41ff55:	movzx  eax,WORD PTR [edx]
  41ff58:	mov    ebx,0x4e20
  41ff5d:	cmp    ax,bx
  41ff60:	jne    0x41ff42
  41ff62:	xor    eax,eax
  41ff64:	mov    WORD PTR [ecx],ax
  41ff67:	mov    eax,DWORD PTR [edi+0x188]
  41ff6d:	pop    ebx
  41ff6e:	ret    
  41ff6f:	push   edi
  41ff70:	mov    edi,eax
  41ff72:	mov    eax,DWORD PTR [esi+0x188]
  41ff78:	shl    edi,0x6
  41ff7b:	add    eax,edi
  41ff7d:	jmp    0x41ff89
  41ff7f:	xor    cl,0x75
  41ff82:	sub    cl,0x7
  41ff85:	mov    BYTE PTR [eax],cl
  41ff87:	inc    eax
  41ff88:	inc    edx
  41ff89:	mov    cl,BYTE PTR [edx]
  41ff8b:	cmp    cl,0x72
  41ff8e:	jne    0x41ff7f
  41ff90:	mov    BYTE PTR [eax],0x0
  41ff93:	mov    eax,DWORD PTR [esi+0x188]
  41ff99:	add    eax,edi
  41ff9b:	pop    edi
  41ff9c:	ret    
  41ff9d:	push   ebp
  41ff9e:	mov    ebp,esp
  41ffa0:	sub    esp,0x14
  41ffa3:	mov    DWORD PTR [ebp-0x10],0xf89c8581
  41ffaa:	mov    DWORD PTR [ebp-0x4],0xf89c8580
  41ffb1:	mov    eax,DWORD PTR [ebx]
  41ffb3:	mov    DWORD PTR [ebp-0x8],eax
  41ffb6:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41ffbd:	push   esi
  41ffbe:	push   edi
  41ffbf:	mov    DWORD PTR [ebp-0x14],0xead718a1
  41ffc6:	mov    edi,DWORD PTR [ebp-0x4]
  41ffc9:	mov    ecx,DWORD PTR [ebp-0x10]
  41ffcc:	mov    eax,0x751089d
  41ffd1:	xor    edi,eax
  41ffd3:	mov    edx,0x3272e4
  41ffd8:	xor    ecx,eax
  41ffda:	add    edi,edx
  41ffdc:	add    ecx,edx
  41ffde:	imul   edi,ecx
  41ffe1:	jmp    0x420029
  41ffe3:	mov    ecx,DWORD PTR [ebp-0x8]
  41ffe6:	mov    esi,DWORD PTR [ebp-0x4]
  41ffe9:	xor    ecx,eax
  41ffeb:	xor    esi,eax
  41ffed:	add    ecx,edx
  41ffef:	add    esi,edx
  41fff1:	test   esi,ecx
  41fff3:	mov    esi,DWORD PTR [ebp-0x8]
  41fff6:	mov    ecx,DWORD PTR [ebp-0x4]
  41fff9:	je     0x420010
  41fffb:	xor    ecx,eax
  41fffd:	xor    esi,eax
  41ffff:	add    ecx,edx
  420001:	add    esi,edx
  420003:	shr    esi,cl
  420005:	mov    ecx,DWORD PTR [ebp-0x14]
  420008:	xor    ecx,eax
  42000a:	add    ecx,edx
  42000c:	xor    esi,ecx
  42000e:	jmp    0x42001a
  420010:	xor    esi,eax
  420012:	xor    ecx,eax
  420014:	add    esi,edx
  420016:	add    ecx,edx
  420018:	shr    esi,cl
  42001a:	mov    DWORD PTR [ebp-0x8],esi
  42001d:	mov    ecx,DWORD PTR [ebp-0x4]
  420020:	xor    ecx,eax
  420022:	lea    edi,[edi+ecx*1+0x3272e4]
  420029:	mov    ecx,DWORD PTR [ebp-0xc]
  42002c:	mov    esi,DWORD PTR [ebp-0x4]
  42002f:	xor    esi,eax
  420031:	xor    ecx,eax
  420033:	sub    ecx,esi
  420035:	cmp    edi,ecx
  420037:	jbe    0x41ffe3
  420039:	mov    eax,DWORD PTR [ebp-0x8]
  42003c:	pop    edi
  42003d:	mov    DWORD PTR [ebx],eax
  42003f:	mov    eax,DWORD PTR [ebp-0x8]
  420042:	pop    esi
  420043:	leave  
  420044:	ret    
  420045:	push   ebp
  420046:	mov    ebp,esp
  420048:	sub    esp,0x38
  42004b:	push   ebx
  42004c:	mov    ebx,0xf89c8581
  420051:	mov    DWORD PTR [ebp-0x4],ebx
  420054:	lea    eax,[ebx-0x1]
  420057:	push   esi
  420058:	mov    DWORD PTR [ebp-0x24],eax
  42005b:	mov    ecx,DWORD PTR [ebp-0x4]
  42005e:	mov    edx,DWORD PTR [ebp+0x8]
  420061:	mov    esi,0x751089d
  420066:	push   edi
  420067:	xor    ecx,esi
  420069:	mov    edi,0x3272e4
  42006e:	add    ecx,edi
  420070:	cmp    edx,ecx
  420072:	je     0x4201d8
  420078:	mov    ecx,DWORD PTR [ebp-0x4]
  42007b:	mov    edx,DWORD PTR [ebp+0xc]
  42007e:	xor    ecx,esi
  420080:	add    ecx,edi
  420082:	cmp    edx,ecx
  420084:	je     0x4201d8
  42008a:	mov    ecx,DWORD PTR [ebp+0x10]
  42008d:	mov    DWORD PTR [ebp-0x14],ecx
  420090:	mov    ecx,DWORD PTR [ebp+0xc]
  420093:	mov    edx,DWORD PTR [ebp+0x8]
  420096:	mov    DWORD PTR [ebp-0x18],0xf89c8506
  42009d:	mov    DWORD PTR [ebp-0x1c],eax
  4200a0:	mov    DWORD PTR [ebp-0x10],ebx
  4200a3:	mov    DWORD PTR [ebp+0xc],eax
  4200a6:	mov    DWORD PTR [ebp+0x10],0xf89c8583
  4200ad:	mov    eax,DWORD PTR [ebp+0xc]
  4200b0:	xor    eax,esi
  4200b2:	mov    DWORD PTR [ebp-0x20],ecx
  4200b5:	sub    ecx,eax
  4200b7:	sub    ecx,edi
  4200b9:	mov    DWORD PTR [ebp+0x8],ecx
  4200bc:	mov    DWORD PTR [ebp-0xc],edx
  4200bf:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  4200c6:	jmp    0x4201c8
  4200cb:	mov    eax,DWORD PTR [ebp+0xc]
  4200ce:	mov    ecx,DWORD PTR [ebp+0xc]
  4200d1:	xor    eax,esi
  4200d3:	xor    ecx,esi
  4200d5:	lea    ecx,[eax+ecx*1+0x64e5c8]
  4200dc:	mov    eax,DWORD PTR [ebp+0x8]
  4200df:	xor    edx,edx
  4200e1:	div    ecx
  4200e3:	mov    eax,DWORD PTR [ebp+0x10]
  4200e6:	mov    ecx,DWORD PTR [ebp+0xc]
  4200e9:	xor    eax,esi
  4200eb:	xor    ecx,esi
  4200ed:	sub    eax,ecx
  4200ef:	cmp    edx,eax
  4200f1:	jne    0x420187
  4200f7:	mov    eax,DWORD PTR [ebp+0x8]
  4200fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4200fd:	mov    dl,BYTE PTR [eax+ecx*1]
  420100:	mov    eax,DWORD PTR [ebp-0x10]
  420103:	mov    ecx,DWORD PTR [ebp-0x8]
  420106:	xor    eax,esi
  420108:	xor    ecx,esi
  42010a:	add    eax,edi
  42010c:	add    ecx,edi
  42010e:	cmp    eax,ecx
  420110:	jae    0x420158
  420112:	lea    ecx,[eax-0x3272e4]
  420118:	mov    DWORD PTR [ebp-0x4],ecx
  42011b:	mov    ebx,DWORD PTR [ebp-0x4]
  42011e:	xor    ebx,esi
  420120:	add    ebx,0x7f55d8c3
  420126:	lea    ecx,[ebp+eax*4-0x38]
  42012a:	mov    DWORD PTR [ecx],ebx
  42012c:	mov    ebx,DWORD PTR [ecx]
  42012e:	cmp    ebx,0x244ecba2
  420134:	jbe    0x42013e
  420136:	add    DWORD PTR [ecx],0x405fc1d
  42013c:	jmp    0x420144
  42013e:	add    DWORD PTR [ecx],0xfdaf43e3
  420144:	mov    ecx,DWORD PTR [ebp-0x8]
  420147:	xor    ecx,esi
  420149:	inc    eax
  42014a:	inc    DWORD PTR [ebp-0x4]
  42014d:	add    ecx,edi
  42014f:	cmp    eax,ecx
  420151:	jb     0x42011b
  420153:	mov    ebx,0xf89c8581
  420158:	cmp    DWORD PTR [ebp-0x14],0x0
  42015c:	jne    0x420166
  42015e:	xor    dl,0x75
  420161:	sub    dl,0x7
  420164:	jmp    0x42017c
  420166:	mov    eax,DWORD PTR [ebp-0x18]
  420169:	xor    al,0x9d
  42016b:	mov    cl,0x1c
  42016d:	sub    cl,al
  42016f:	add    dl,cl
  420171:	mov    ecx,DWORD PTR [ebp-0x1c]
  420174:	xor    cl,0x9d
  420177:	sub    cl,0x1c
  42017a:	ror    dl,cl
  42017c:	xor    eax,eax
  42017e:	mov    eax,DWORD PTR [ebp+0x8]
  420181:	mov    ecx,DWORD PTR [ebp-0xc]
  420184:	mov    BYTE PTR [eax+ecx*1],dl
  420187:	mov    eax,DWORD PTR [ebp+0x8]
  42018a:	mov    ecx,DWORD PTR [ebp-0x10]
  42018d:	sub    eax,edi
  42018f:	xor    eax,esi
  420191:	cmp    eax,ecx
  420193:	jne    0x4201b6
  420195:	mov    eax,DWORD PTR [ebp+0x10]
  420198:	mov    ecx,DWORD PTR [ebp+0xc]
  42019b:	xor    eax,esi
  42019d:	xor    ecx,esi
  42019f:	sub    eax,ecx
  4201a1:	mov    ecx,DWORD PTR [ebp-0x20]
  4201a4:	sub    eax,edi
  4201a6:	xor    eax,esi
  4201a8:	mov    DWORD PTR [ebp+0x10],eax
  4201ab:	mov    eax,DWORD PTR [ebp+0xc]
  4201ae:	xor    eax,esi
  4201b0:	sub    ecx,eax
  4201b2:	sub    ecx,edi
  4201b4:	jmp    0x4201c5
  4201b6:	mov    eax,DWORD PTR [ebp+0xc]
  4201b9:	xor    eax,esi
  4201bb:	mov    ecx,0xffcd8d1c
  4201c0:	sub    ecx,eax
  4201c2:	add    ecx,DWORD PTR [ebp+0x8]
  4201c5:	mov    DWORD PTR [ebp+0x8],ecx
  4201c8:	mov    eax,DWORD PTR [ebp+0x10]
  4201cb:	cmp    eax,ebx
  4201cd:	jne    0x4200cb
  4201d3:	mov    eax,DWORD PTR [ebp-0x24]
  4201d6:	jmp    0x4201db
  4201d8:	mov    eax,DWORD PTR [ebp-0x4]
  4201db:	xor    eax,esi
  4201dd:	add    eax,edi
  4201df:	pop    edi
  4201e0:	pop    esi
  4201e1:	pop    ebx
  4201e2:	leave  
  4201e3:	ret    0xc
  4201e6:	push   ebp
  4201e7:	mov    ebp,esp
  4201e9:	sub    esp,0x420
  4201ef:	mov    DWORD PTR [ebp-0x14],0xf89c8581
  4201f6:	mov    DWORD PTR [ebp-0xc],0xf89c8580
  4201fd:	mov    DWORD PTR [ebp-0x18],0xf89c8681
  420204:	push   ebx
  420205:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  42020c:	mov    eax,DWORD PTR [ebp-0x14]
  42020f:	push   esi
  420210:	mov    esi,0x751089d
  420215:	push   edi
  420216:	xor    eax,esi
  420218:	mov    edi,0x3272e4
  42021d:	add    eax,edi
  42021f:	mov    DWORD PTR [ebp-0x8],eax
  420222:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  420229:	mov    DWORD PTR [ebp-0x4],0xead718a1
  420230:	mov    DWORD PTR [ebp-0x10],0x8
  420237:	mov    ecx,ecx
  420239:	mov    eax,DWORD PTR [ebp-0xc]
  42023c:	mov    ecx,DWORD PTR [ebp-0x14]
  42023f:	xor    eax,esi
  420241:	xor    ecx,esi
  420243:	add    eax,edi
  420245:	add    ecx,edi
  420247:	imul   eax,ecx
  42024a:	jmp    0x42027d
  42024c:	mov    eax,DWORD PTR [ebp-0x4]
  42024f:	sub    eax,edi
  420251:	xor    eax,esi
  420253:	mov    DWORD PTR [ebp-0x8],eax
  420256:	lea    ebx,[ebp-0x8]
  420259:	call   0x41ff9d
  42025e:	mov    DWORD PTR [ebp-0x8],eax
  420261:	mov    eax,DWORD PTR [ebp-0x8]
  420264:	mov    ecx,DWORD PTR [ebp-0x4]
  420267:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42026e:	mov    eax,DWORD PTR [ebp-0xc]
  420271:	mov    ecx,DWORD PTR [ebp-0x4]
  420274:	xor    eax,esi
  420276:	lea    eax,[eax+ecx*1+0x3272e4]
  42027d:	mov    DWORD PTR [ebp-0x4],eax
  420280:	mov    eax,DWORD PTR [ebp-0x18]
  420283:	mov    ecx,DWORD PTR [ebp-0xc]
  420286:	xor    ecx,esi
  420288:	xor    eax,esi
  42028a:	sub    eax,ecx
  42028c:	mov    ecx,DWORD PTR [ebp-0x4]
  42028f:	cmp    ecx,eax
  420291:	jbe    0x42024c
  420293:	mov    eax,DWORD PTR [ebp-0x1c]
  420296:	xor    eax,esi
  420298:	add    eax,edi
  42029a:	mov    DWORD PTR [ebp-0x8],eax
  42029d:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  4202a4:	mov    ebx,ebx
  4202a6:	jmp    0x420309
  4202a8:	mov    ecx,DWORD PTR [ebp-0x20]
  4202ab:	mov    eax,DWORD PTR [ebp-0x8]
  4202ae:	xor    ecx,esi
  4202b0:	add    ecx,edi
  4202b2:	shr    eax,cl
  4202b4:	mov    DWORD PTR [ebp-0x4],eax
  4202b7:	mov    eax,DWORD PTR [ebp+0x8]
  4202ba:	mov    cl,BYTE PTR [eax]
  4202bc:	mov    BYTE PTR [ebp+0xb],cl
  4202bf:	mov    cl,BYTE PTR [ebp+0xb]
  4202c2:	mov    edx,DWORD PTR [ebp-0x8]
  4202c5:	movzx  ecx,cl
  4202c8:	xor    ecx,edx
  4202ca:	mov    DWORD PTR [ebp+0x8],ecx
  4202cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4202d0:	mov    edx,DWORD PTR [ebp+0x8]
  4202d3:	xor    ecx,esi
  4202d5:	add    ecx,edi
  4202d7:	and    ecx,edx
  4202d9:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  4202e0:	mov    edx,DWORD PTR [ebp-0x4]
  4202e3:	xor    ecx,edx
  4202e5:	mov    DWORD PTR [ebp-0x8],ecx
  4202e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4202eb:	xor    ecx,esi
  4202ed:	lea    eax,[eax+ecx*1+0x3272e4]
  4202f4:	mov    DWORD PTR [ebp+0x8],eax
  4202f7:	mov    eax,DWORD PTR [ebp-0xc]
  4202fa:	xor    eax,esi
  4202fc:	mov    ecx,0xffcd8d1c
  420301:	sub    ecx,eax
  420303:	add    ecx,DWORD PTR [ebp-0x10]
  420306:	mov    DWORD PTR [ebp-0x10],ecx
  420309:	mov    eax,DWORD PTR [ebp-0x14]
  42030c:	mov    ecx,DWORD PTR [ebp-0x10]
  42030f:	xor    eax,esi
  420311:	add    eax,edi
  420313:	cmp    ecx,eax
  420315:	jne    0x4202a8
  420317:	mov    eax,DWORD PTR [ebp-0x1c]
  42031a:	mov    ecx,DWORD PTR [ebp-0x8]
  42031d:	xor    eax,esi
  42031f:	add    eax,edi
  420321:	pop    edi
  420322:	pop    esi
  420323:	xor    eax,ecx
  420325:	pop    ebx
  420326:	leave  
  420327:	ret    0x4
  42032a:	push   ebp
  42032b:	mov    ebp,esp
  42032d:	mov    eax,DWORD PTR [ebp+0x1c]
  420330:	mov    ecx,DWORD PTR [ebp+0x8]
  420333:	mov    edx,DWORD PTR [ebp+0x10]
  420336:	mov    eax,DWORD PTR [eax+0x190]
  42033c:	mov    eax,DWORD PTR [eax]
  42033e:	sub    esp,0x64
  420341:	push   ebx
  420342:	push   esi
  420343:	push   edi
  420344:	mov    edi,0x751089d
  420349:	xor    ecx,edi
  42034b:	mov    ebx,0x3272e4
  420350:	add    ecx,ebx
  420352:	cmp    ecx,edx
  420354:	jne    0x420365
  420356:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  420360:	jmp    0x420861
  420365:	mov    ecx,DWORD PTR [ebp+0x8]
  420368:	mov    esi,DWORD PTR [ebp+0x14]
  42036b:	mov    edx,DWORD PTR [esi]
  42036d:	xor    ecx,edi
  42036f:	add    ecx,ebx
  420371:	cmp    edx,ecx
  420373:	je     0x42081c
  420379:	mov    ecx,DWORD PTR [ebp+0x1c]
  42037c:	mov    DWORD PTR [ebp-0x1c],eax
  42037f:	mov    DWORD PTR [ebp+0x1c],ecx
  420382:	mov    ecx,DWORD PTR [ebp+0x18]
  420385:	mov    eax,DWORD PTR [esi]
  420387:	mov    DWORD PTR [ebp-0x20],eax
  42038a:	mov    DWORD PTR [ebp+0x8],0xf89c8581
  420391:	mov    edx,0xf89c8580
  420396:	mov    DWORD PTR [ebp-0x8],edx
  420399:	mov    eax,DWORD PTR [ebp+0x1c]
  42039c:	mov    DWORD PTR [ebp+0x1c],eax
  42039f:	mov    eax,DWORD PTR [ebp+0x1c]
  4203a2:	mov    eax,DWORD PTR [eax+0x190]
  4203a8:	mov    eax,DWORD PTR [eax]
  4203aa:	mov    DWORD PTR [ebp-0x24],ecx
  4203ad:	mov    ecx,DWORD PTR [ebp+0x1c]
  4203b0:	mov    ecx,DWORD PTR [ecx+0x190]
  4203b6:	mov    ecx,DWORD PTR [ecx]
  4203b8:	add    ecx,DWORD PTR [eax+0x3c]
  4203bb:	mov    DWORD PTR [ebp+0x10],ecx
  4203be:	mov    eax,DWORD PTR [ebp+0x8]
  4203c1:	xor    eax,edi
  4203c3:	add    eax,ebx
  4203c5:	mov    DWORD PTR [ebp-0x4],eax
  4203c8:	mov    eax,DWORD PTR [ebp+0x8]
  4203cb:	xor    eax,edi
  4203cd:	add    eax,ebx
  4203cf:	mov    DWORD PTR [ebp+0x18],eax
  4203d2:	mov    eax,DWORD PTR [ebp+0x10]
  4203d5:	mov    eax,DWORD PTR [eax+0x50]
  4203d8:	sub    eax,0xc
  4203db:	mov    DWORD PTR [ebp-0x28],eax
  4203de:	mov    eax,DWORD PTR [ebp+0x10]
  4203e1:	mov    eax,DWORD PTR [eax+0x38]
  4203e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4203e7:	dec    eax
  4203e8:	test   DWORD PTR [ecx+0x54],eax
  4203eb:	mov    eax,DWORD PTR [ebp+0x10]
  4203ee:	je     0x420408
  4203f0:	mov    eax,DWORD PTR [eax+0x38]
  4203f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4203f6:	mov    ecx,DWORD PTR [ecx+0x54]
  4203f9:	dec    eax
  4203fa:	not    eax
  4203fc:	and    ecx,eax
  4203fe:	mov    eax,DWORD PTR [ebp+0x10]
  420401:	mov    eax,DWORD PTR [eax+0x38]
  420404:	add    eax,ecx
  420406:	jmp    0x42040b
  420408:	mov    eax,DWORD PTR [eax+0x54]
  42040b:	mov    DWORD PTR [ebp+0x1c],eax
  42040e:	mov    eax,DWORD PTR [ebp+0x8]
  420411:	xor    eax,edi
  420413:	add    eax,ebx
  420415:	mov    DWORD PTR [ebp+0x18],eax
  420418:	mov    eax,DWORD PTR [ebp+0x8]
  42041b:	xor    eax,edi
  42041d:	add    eax,ebx
  42041f:	mov    DWORD PTR [ebp+0x18],eax
  420422:	mov    eax,DWORD PTR [ebp+0x8]
  420425:	mov    ecx,DWORD PTR [ebp-0x24]
  420428:	xor    eax,edi
  42042a:	add    eax,ebx
  42042c:	mov    DWORD PTR [ecx],eax
  42042e:	mov    DWORD PTR [ebp+0x18],edx
  420431:	mov    DWORD PTR [ebp+0x18],0xf89c8583
  420438:	mov    DWORD PTR [ebp+0x18],0xf89c8582
  42043f:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  420446:	mov    eax,DWORD PTR [ebp-0x8]
  420449:	mov    ecx,DWORD PTR [ebp+0x1c]
  42044c:	xor    eax,edi
  42044e:	add    eax,ebx
  420450:	imul   eax,ecx
  420453:	mov    ecx,DWORD PTR [ebp+0x8]
  420456:	mov    edx,DWORD PTR [ebp-0x28]
  420459:	xor    ecx,edi
  42045b:	lea    ecx,[ecx+edx*1+0x3272e4]
  420462:	cmp    eax,ecx
  420464:	jae    0x420815
  42046a:	mov    eax,DWORD PTR [ebp+0x8]
  42046d:	xor    eax,edi
  42046f:	add    eax,ebx
  420471:	mov    DWORD PTR [ebp+0x18],eax
  420474:	mov    eax,DWORD PTR [ebp+0x1c]
  420477:	add    eax,DWORD PTR [ebp-0x1c]
  42047a:	mov    DWORD PTR [ebp-0x4],eax
  42047d:	push   DWORD PTR [ebp-0x4]
  420480:	mov    esi,DWORD PTR [ebp-0x1c]
  420483:	mov    ecx,DWORD PTR [ebp+0x10]
  420486:	call   0x41f5d5
  42048b:	mov    DWORD PTR [ebp+0xc],eax
  42048e:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  420495:	mov    eax,DWORD PTR [ebp-0x18]
  420498:	xor    eax,edi
  42049a:	lea    ecx,[ebp-0x40]
  42049d:	add    eax,ebx
  42049f:	push   ecx
  4204a0:	call   0x41fb69
  4204a5:	mov    eax,DWORD PTR [ebp+0xc]
  4204a8:	test   eax,eax
  4204aa:	je     0x4204fa
  4204ac:	mov    eax,DWORD PTR [ebp-0x18]
  4204af:	xor    eax,edi
  4204b1:	add    eax,ebx
  4204b3:	push   eax
  4204b4:	push   DWORD PTR [ebp+0xc]
  4204b7:	lea    eax,[ebp-0x40]
  4204ba:	push   eax
  4204bb:	call   0x41fa5f
  4204c0:	mov    eax,DWORD PTR [ebp-0x4]
  4204c3:	mov    DWORD PTR [ebp-0x18],eax
  4204c6:	mov    eax,DWORD PTR [ebp-0x18]
  4204c9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4204cc:	sub    eax,ecx
  4204ce:	mov    DWORD PTR [ebp-0x18],eax
  4204d1:	mov    eax,DWORD PTR [ebp+0xc]
  4204d4:	mov    ecx,DWORD PTR [ebp+0xc]
  4204d7:	mov    eax,DWORD PTR [eax+0x10]
  4204da:	add    eax,DWORD PTR [ecx+0xc]
  4204dd:	mov    ecx,DWORD PTR [ebp-0x18]
  4204e0:	cmp    ecx,eax
  4204e2:	jb     0x4204fa
  4204e4:	mov    eax,DWORD PTR [ebp+0xc]
  4204e7:	mov    eax,DWORD PTR [eax+0xc]
  4204ea:	mov    ecx,DWORD PTR [ebp+0xc]
  4204ed:	add    eax,DWORD PTR [ecx+0x8]
  4204f0:	mov    ecx,DWORD PTR [ebp-0x18]
  4204f3:	sub    eax,ecx
  4204f5:	jmp    0x4207e8
  4204fa:	push   0xc
  4204fc:	push   DWORD PTR [ebp-0x4]
  4204ff:	lea    eax,[ebp-0x4c]
  420502:	push   eax
  420503:	call   0x41fa5f
  420508:	mov    eax,0xf89c8581
  42050d:	mov    DWORD PTR [ebp-0x2c],eax
  420510:	mov    DWORD PTR [ebp-0x30],0xf89c8580
  420517:	mov    DWORD PTR [ebp-0x34],0xf89c8583
  42051e:	mov    DWORD PTR [ebp-0x38],0xf89c8582
  420525:	lea    ecx,[ebp-0x2c]
  420528:	mov    DWORD PTR [ebp-0xc],ecx
  42052b:	lea    ecx,[ebp-0x30]
  42052e:	mov    DWORD PTR [ebp-0x10],ecx
  420531:	lea    ecx,[ebp-0x34]
  420534:	mov    DWORD PTR [ebp+0xc],ecx
  420537:	lea    ecx,[ebp-0x38]
  42053a:	mov    DWORD PTR [ebp-0x14],ecx
  42053d:	mov    ecx,DWORD PTR [ebp+0x8]
  420540:	xor    ecx,edi
  420542:	add    ecx,ebx
  420544:	mov    DWORD PTR [ebp-0x18],ecx
  420547:	jmp    0x420743
  42054c:	cmp    eax,0xf89c8583
  420551:	je     0x420755
  420557:	mov    ecx,DWORD PTR [ebp-0x8]
  42055a:	xor    ecx,edi
  42055c:	mov    esi,eax
  42055e:	add    ecx,ebx
  420560:	mov    DWORD PTR [ebp+0x18],ecx
  420563:	mov    eax,DWORD PTR [ebp-0x18]
  420566:	xor    esi,edi
  420568:	lea    eax,[eax+esi*1+0x3272e4]
  42056f:	mov    DWORD PTR [ebp-0x18],eax
  420572:	mov    eax,DWORD PTR [ebp-0x8]
  420575:	mov    ecx,DWORD PTR [ebp-0x18]
  420578:	xor    eax,edi
  42057a:	add    eax,ebx
  42057c:	cmp    ecx,eax
  42057e:	jne    0x420593
  420580:	mov    eax,DWORD PTR [ebp+0x8]
  420583:	xor    eax,edi
  420585:	add    eax,ebx
  420587:	push   eax
  420588:	push   0xc
  42058a:	lea    eax,[ebp-0x4c]
  42058d:	push   eax
  42058e:	call   0x420045
  420593:	mov    eax,DWORD PTR [ebp-0xc]
  420596:	mov    eax,DWORD PTR [eax]
  420598:	xor    eax,edi
  42059a:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  4205a1:	mov    ecx,DWORD PTR [ebp+0x8]
  4205a4:	xor    ecx,edi
  4205a6:	movzx  eax,al
  4205a9:	add    ecx,ebx
  4205ab:	cmp    eax,ecx
  4205ad:	je     0x42072b
  4205b3:	mov    eax,DWORD PTR [ebp-0x10]
  4205b6:	mov    eax,DWORD PTR [eax]
  4205b8:	xor    eax,edi
  4205ba:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  4205c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4205c4:	xor    ecx,edi
  4205c6:	movzx  eax,al
  4205c9:	add    ecx,ebx
  4205cb:	cmp    eax,ecx
  4205cd:	je     0x42072b
  4205d3:	mov    eax,DWORD PTR [ebp+0xc]
  4205d6:	mov    eax,DWORD PTR [eax]
  4205d8:	xor    eax,edi
  4205da:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  4205e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4205e4:	xor    ecx,edi
  4205e6:	movzx  eax,al
  4205e9:	add    ecx,ebx
  4205eb:	cmp    eax,ecx
  4205ed:	je     0x42072b
  4205f3:	mov    eax,DWORD PTR [ebp-0x14]
  4205f6:	mov    eax,DWORD PTR [eax]
  4205f8:	xor    eax,edi
  4205fa:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  420601:	mov    ecx,DWORD PTR [ebp+0x8]
  420604:	xor    ecx,edi
  420606:	movzx  eax,al
  420609:	add    ecx,ebx
  42060b:	cmp    eax,ecx
  42060d:	je     0x42072b
  420613:	mov    eax,DWORD PTR [ebp-0x10]
  420616:	mov    eax,DWORD PTR [eax]
  420618:	xor    eax,edi
  42061a:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  420621:	mov    ecx,DWORD PTR [ebp-0xc]
  420624:	mov    ecx,DWORD PTR [ecx]
  420626:	xor    ecx,edi
  420628:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  42062f:	xor    al,cl
  420631:	mov    ecx,DWORD PTR [ebp+0xc]
  420634:	mov    ecx,DWORD PTR [ecx]
  420636:	xor    ecx,edi
  420638:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  42063f:	or     al,cl
  420641:	mov    ecx,DWORD PTR [ebp-0xc]
  420644:	mov    ecx,DWORD PTR [ecx]
  420646:	xor    ecx,edi
  420648:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729c]
  42064f:	cmp    cl,al
  420651:	jne    0x42072b
  420657:	mov    eax,DWORD PTR [ebp+0xc]
  42065a:	mov    eax,DWORD PTR [eax]
  42065c:	xor    eax,edi
  42065e:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  420665:	mov    ecx,DWORD PTR [ebp-0x10]
  420668:	mov    ecx,DWORD PTR [ecx]
  42066a:	xor    ecx,edi
  42066c:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  420673:	xor    al,cl
  420675:	mov    ecx,DWORD PTR [ebp-0x14]
  420678:	mov    ecx,DWORD PTR [ecx]
  42067a:	xor    ecx,edi
  42067c:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  420683:	or     al,cl
  420685:	mov    ecx,DWORD PTR [ebp-0x10]
  420688:	mov    ecx,DWORD PTR [ecx]
  42068a:	xor    ecx,edi
  42068c:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729c]
  420693:	cmp    cl,al
  420695:	jne    0x42072b
  42069b:	mov    eax,DWORD PTR [ebp-0x14]
  42069e:	mov    eax,DWORD PTR [eax]
  4206a0:	xor    eax,edi
  4206a2:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  4206a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4206ac:	mov    ecx,DWORD PTR [ecx]
  4206ae:	xor    ecx,edi
  4206b0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  4206b7:	xor    al,cl
  4206b9:	mov    ecx,DWORD PTR [ebp-0xc]
  4206bc:	mov    ecx,DWORD PTR [ecx]
  4206be:	xor    ecx,edi
  4206c0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  4206c7:	or     al,cl
  4206c9:	mov    ecx,DWORD PTR [ebp+0xc]
  4206cc:	mov    ecx,DWORD PTR [ecx]
  4206ce:	xor    ecx,edi
  4206d0:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729c]
  4206d7:	cmp    cl,al
  4206d9:	jne    0x42072b
  4206db:	mov    eax,DWORD PTR [ebp-0x14]
  4206de:	mov    eax,DWORD PTR [eax]
  4206e0:	xor    eax,edi
  4206e2:	mov    al,BYTE PTR [ebp+eax*1+0x327298]
  4206e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4206ec:	mov    ecx,DWORD PTR [ecx]
  4206ee:	xor    ecx,edi
  4206f0:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  4206f7:	xor    al,cl
  4206f9:	mov    ecx,DWORD PTR [ebp-0x10]
  4206fc:	mov    ecx,DWORD PTR [ecx]
  4206fe:	xor    ecx,edi
  420700:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  420707:	or     al,cl
  420709:	mov    ecx,DWORD PTR [ebp-0x14]
  42070c:	mov    ecx,DWORD PTR [ecx]
  42070e:	xor    ecx,edi
  420710:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729c]
  420717:	cmp    cl,al
  420719:	jne    0x42072b
  42071b:	lea    eax,[ebp-0x4c]
  42071e:	push   eax
  42071f:	call   0x4201e6
  420724:	mov    ecx,DWORD PTR [ebp-0x44]
  420727:	cmp    eax,ecx
  420729:	je     0x420735
  42072b:	mov    eax,DWORD PTR [ebp+0x8]
  42072e:	xor    eax,edi
  420730:	add    eax,ebx
  420732:	mov    DWORD PTR [ebp+0x18],eax
  420735:	mov    eax,DWORD PTR [ebp-0x8]
  420738:	xor    eax,edi
  42073a:	lea    eax,[eax+esi*1+0x3272e4]
  420741:	xor    eax,edi
  420743:	mov    ecx,DWORD PTR [ebp+0x8]
  420746:	mov    edx,DWORD PTR [ebp+0x18]
  420749:	xor    ecx,edi
  42074b:	add    ecx,ebx
  42074d:	cmp    edx,ecx
  42074f:	je     0x42054c
  420755:	mov    eax,DWORD PTR [ebp+0x8]
  420758:	mov    ecx,DWORD PTR [ebp+0x18]
  42075b:	xor    eax,edi
  42075d:	add    eax,ebx
  42075f:	cmp    ecx,eax
  420761:	jne    0x420774
  420763:	mov    eax,DWORD PTR [ebp-0x8]
  420766:	mov    ecx,DWORD PTR [ebp+0x1c]
  420769:	xor    eax,edi
  42076b:	lea    eax,[eax+ecx*1+0x3272e4]
  420772:	jmp    0x4207eb
  420774:	push   0x18
  420776:	push   DWORD PTR [ebp-0x4]
  420779:	lea    eax,[ebp-0x64]
  42077c:	push   eax
  42077d:	call   0x41fa5f
  420782:	mov    eax,DWORD PTR [ebp+0x8]
  420785:	mov    ecx,DWORD PTR [ebp-0x18]
  420788:	xor    eax,edi
  42078a:	add    eax,ebx
  42078c:	cmp    eax,ecx
  42078e:	je     0x4207a3
  420790:	mov    eax,DWORD PTR [ebp+0x8]
  420793:	xor    eax,edi
  420795:	add    eax,ebx
  420797:	push   eax
  420798:	push   0x18
  42079a:	lea    eax,[ebp-0x64]
  42079d:	push   eax
  42079e:	call   0x420045
  4207a3:	mov    eax,DWORD PTR [ebp-0x4]
  4207a6:	add    eax,0x18
  4207a9:	mov    DWORD PTR [ebp+0x18],eax
  4207ac:	push   DWORD PTR [ebp-0x50]
  4207af:	push   DWORD PTR [ebp+0x18]
  4207b2:	mov    eax,DWORD PTR [ebp-0x54]
  4207b5:	add    eax,DWORD PTR [ebp-0x20]
  4207b8:	push   eax
  4207b9:	call   0x41fa5f
  4207be:	mov    eax,DWORD PTR [ebp+0x8]
  4207c1:	mov    ecx,DWORD PTR [ebp-0x18]
  4207c4:	xor    eax,edi
  4207c6:	add    eax,ebx
  4207c8:	cmp    eax,ecx
  4207ca:	je     0x4207dd
  4207cc:	push   0x0
  4207ce:	push   DWORD PTR [ebp-0x50]
  4207d1:	mov    eax,DWORD PTR [ebp-0x54]
  4207d4:	add    eax,DWORD PTR [ebp-0x20]
  4207d7:	push   eax
  4207d8:	call   0x420045
  4207dd:	mov    eax,DWORD PTR [ebp-0x24]
  4207e0:	mov    ecx,DWORD PTR [ebp-0x50]
  4207e3:	add    DWORD PTR [eax],ecx
  4207e5:	mov    eax,DWORD PTR [ebp-0x50]
  4207e8:	add    eax,DWORD PTR [ebp+0x1c]
  4207eb:	mov    DWORD PTR [ebp+0x1c],eax
  4207ee:	mov    eax,DWORD PTR [ebp-0x8]
  4207f1:	mov    ecx,DWORD PTR [ebp+0x1c]
  4207f4:	xor    eax,edi
  4207f6:	add    eax,ebx
  4207f8:	imul   eax,ecx
  4207fb:	mov    ecx,DWORD PTR [ebp+0x8]
  4207fe:	mov    edx,DWORD PTR [ebp-0x28]
  420801:	xor    ecx,edi
  420803:	lea    ecx,[ecx+edx*1+0x3272e4]
  42080a:	cmp    eax,ecx
  42080c:	jb     0x42046a
  420812:	mov    esi,DWORD PTR [ebp+0x14]
  420815:	mov    eax,DWORD PTR [ebp-0x20]
  420818:	mov    DWORD PTR [esi],eax
  42081a:	jmp    0x420861
  42081c:	mov    ecx,DWORD PTR [ebp+0x8]
  42081f:	mov    edx,DWORD PTR [ebp+0xc]
  420822:	xor    ecx,edi
  420824:	xor    edx,edi
  420826:	add    ecx,ebx
  420828:	add    edx,ebx
  42082a:	cmp    ecx,edx
  42082c:	jne    0x420840
  42082e:	mov    eax,ds:0x7f642d1e
  420833:	imul   eax,eax,0x9f15fcef
  420839:	mov    ds:0x7f642d1e,eax
  42083e:	jmp    0x420861
  420840:	mov    ecx,DWORD PTR [ebp+0x8]
  420843:	xor    ecx,edi
  420845:	add    ecx,ebx
  420847:	cmp    eax,ecx
  420849:	je     0x420857
  42084b:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  420855:	jmp    0x420861
  420857:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  420861:	pop    edi
  420862:	pop    esi
  420863:	pop    ebx
  420864:	leave  
  420865:	ret    0x18
  420868:	push   ebp
  420869:	mov    ebp,esp
  42086b:	and    esp,0xfffffff8
  42086e:	mov    eax,DWORD PTR [ebp+0x20]
  420871:	sub    esp,0x14
  420874:	push   ebx
  420875:	mov    ebx,DWORD PTR [ebp+0x14]
  420878:	push   esi
  420879:	push   edi
  42087a:	cmp    eax,0xf89c8581
  42087f:	jne    0x42088b
  420881:	push   0xf89c8580
  420886:	jmp    0x4209bd
  42088b:	mov    eax,DWORD PTR [ebp+0x20]
  42088e:	cmp    eax,0xf89c8580
  420893:	jne    0x42089f
  420895:	push   0xf89c8583
  42089a:	jmp    0x4209bd
  42089f:	mov    eax,DWORD PTR [ebp+0x20]
  4208a2:	cmp    eax,0xf89c8583
  4208a7:	jne    0x4208b3
  4208a9:	push   0xf89c8582
  4208ae:	jmp    0x4209bd
  4208b3:	mov    eax,DWORD PTR [ebp+0x20]
  4208b6:	cmp    eax,0xf89c8582
  4208bb:	jne    0x4208c7
  4208bd:	push   0xf89c85bd
  4208c2:	jmp    0x4209bd
  4208c7:	mov    ecx,DWORD PTR [ebp+0x20]
  4208ca:	mov    eax,0xf89c85be
  4208cf:	cmp    ecx,eax
  4208d1:	jne    0x42098d
  4208d7:	mov    eax,DWORD PTR [ebp+0x10]
  4208da:	mov    DWORD PTR [esp+0xc],eax
  4208de:	mov    eax,DWORD PTR [ebp+0x18]
  4208e1:	mov    DWORD PTR [esp+0x14],eax
  4208e5:	mov    eax,DWORD PTR [ebp+0xc]
  4208e8:	mov    DWORD PTR [esp+0x18],eax
  4208ec:	mov    eax,DWORD PTR [ebp+0x8]
  4208ef:	mov    DWORD PTR [esp+0x10],eax
  4208f3:	mov    eax,DWORD PTR [esp+0x10]
  4208f7:	mov    ecx,DWORD PTR [esp+0x14]
  4208fb:	mov    edi,0x751089d
  420900:	xor    eax,edi
  420902:	mov    esi,0x3272e4
  420907:	add    eax,esi
  420909:	mov    DWORD PTR [ecx],eax
  42090b:	mov    eax,DWORD PTR [esp+0xc]
  42090f:	mov    eax,DWORD PTR [eax+0x194]
  420915:	mov    ecx,DWORD PTR [eax]
  420917:	mov    eax,DWORD PTR [esp+0xc]
  42091b:	mov    eax,DWORD PTR [eax+0x194]
  420921:	mov    eax,DWORD PTR [eax]
  420923:	add    eax,DWORD PTR [ecx+0x3c]
  420926:	mov    ecx,DWORD PTR [esp+0xc]
  42092a:	mov    ecx,DWORD PTR [ecx+0x1d8]
  420930:	mov    ecx,DWORD PTR [ecx+0x14]
  420933:	push   0x4
  420935:	push   0x3000
  42093a:	push   DWORD PTR [eax+0x50]
  42093d:	push   0x0
  42093f:	call   ecx
  420941:	mov    DWORD PTR [ebx],eax
  420943:	mov    eax,DWORD PTR [esp+0x10]
  420947:	push   DWORD PTR [esp+0xc]
  42094b:	xor    eax,edi
  42094d:	add    eax,esi
  42094f:	mov    DWORD PTR [esp+0x20],eax
  420953:	lea    eax,[esp+0x20]
  420957:	push   eax
  420958:	push   ebx
  420959:	push   DWORD PTR [esp+0x20]
  42095d:	push   DWORD PTR [esp+0x28]
  420961:	push   DWORD PTR [esp+0x24]
  420965:	call   0x42032a
  42096a:	mov    eax,DWORD PTR [esp+0x10]
  42096e:	mov    ecx,DWORD PTR [ebx]
  420970:	xor    eax,edi
  420972:	add    eax,esi
  420974:	cmp    ecx,eax
  420976:	je     0x4209d4
  420978:	mov    eax,DWORD PTR [esp+0x18]
  42097c:	mov    ecx,DWORD PTR [esp+0x14]
  420980:	xor    eax,edi
  420982:	add    eax,esi
  420984:	imul   eax,DWORD PTR [esp+0x1c]
  420989:	mov    DWORD PTR [ecx],eax
  42098b:	jmp    0x4209d4
  42098d:	mov    ecx,DWORD PTR [ebp+0x20]
  420990:	cmp    ecx,0xf89c85bd
  420996:	jne    0x42099f
  420998:	push   0xf89c85bc
  42099d:	jmp    0x4209bd
  42099f:	mov    ecx,DWORD PTR [ebp+0x20]
  4209a2:	cmp    ecx,0xf89c85bc
  4209a8:	jne    0x4209b1
  4209aa:	push   0xf89c85bf
  4209af:	jmp    0x4209bd
  4209b1:	mov    ecx,DWORD PTR [ebp+0x20]
  4209b4:	cmp    ecx,0xf89c85bf
  4209ba:	jne    0x4209d4
  4209bc:	push   eax
  4209bd:	push   DWORD PTR [ebp+0x1c]
  4209c0:	push   DWORD PTR [ebp+0x18]
  4209c3:	push   ebx
  4209c4:	push   DWORD PTR [ebp+0x10]
  4209c7:	push   DWORD PTR [ebp+0xc]
  4209ca:	push   DWORD PTR [ebp+0x8]
  4209cd:	call   0x420868
  4209d2:	mov    DWORD PTR [ebx],eax
  4209d4:	mov    eax,DWORD PTR [ebx]
  4209d6:	pop    edi
  4209d7:	pop    esi
  4209d8:	pop    ebx
  4209d9:	mov    esp,ebp
  4209db:	pop    ebp
  4209dc:	ret    0x1c
  4209df:	push   ebp
  4209e0:	mov    ebp,esp
  4209e2:	sub    esp,0xc
  4209e5:	mov    eax,0xf89c8581
  4209ea:	mov    DWORD PTR [ebp-0x8],eax
  4209ed:	mov    DWORD PTR [ebp-0xc],0xf89c8580
  4209f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4209f7:	xor    ecx,0x751089d
  4209fd:	add    ecx,0x3272e4
  420a03:	mov    DWORD PTR [ebp-0x4],ecx
  420a06:	mov    ecx,DWORD PTR [ebp+0xc]
  420a09:	push   eax
  420a0a:	mov    DWORD PTR [ebp+0xc],ecx
  420a0d:	push   DWORD PTR [ebp+0xc]
  420a10:	lea    eax,[ebp-0x4]
  420a13:	push   DWORD PTR [ebp+0x8]
  420a16:	push   eax
  420a17:	push   DWORD PTR [ebp+0xc]
  420a1a:	push   DWORD PTR [ebp-0xc]
  420a1d:	push   DWORD PTR [ebp-0x8]
  420a20:	call   0x420868
  420a25:	mov    DWORD PTR [ebp-0x4],eax
  420a28:	mov    eax,DWORD PTR [ebp-0x4]
  420a2b:	leave  
  420a2c:	ret    0x8
  420a2f:	dec    esp
  420a30:	inc    ecx
  420a31:	mov    ebp,0xeffebd16
  420a36:	pop    ebx
  420a37:	adc    DWORD PTR [eax],eax
  420a39:	ret    0x4a72
  420a3c:	dec    edi
  420a3d:	das    
  420a3e:	arpl   WORD PTR [ebp-0x17fffe7a],sp
  420a44:	add    DWORD PTR [eax],eax
  420a46:	add    ch,dl
  420a48:	(bad)  
  420a49:	sbb    eax,0x20fd0d6c
  420a4e:	std    
  420a4f:	loop   0x420a6e
  420a51:	in     eax,dx
  420a52:	out    0x74,eax
  420a54:	clc    
  420a55:	add    BYTE PTR [edx+0x3dbf3ee8],bl
  420a5b:	dec    eax
  420a5c:	xchg   edi,eax
  420a5d:	adc    DWORD PTR [esi],eax
  420a5f:	jp     0x420a41
  420a61:	je     0x420a85
  420a63:	popa   
  420a64:	sub    dh,bl
  420a66:	call   0x5f7b6349
  420a6b:	icebp  
  420a6c:	arpl   sp,sp
  420a6e:	add    DWORD PTR [ebx+0x64],edi
  420a71:	or     cl,BYTE PTR [esi+0x3a]
  420a74:	fmulp  st(6),st
  420a76:	adc    eax,0x857b7f98
  420a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a7c:	xor    eax,0xb4aeac44
  420a81:	mov    gs,eax
  420a83:	push   cs
  420a84:	test   al,0x4a
  420a86:	adc    al,0xeb
  420a88:	mov    ebx,0xdbdc81e7
  420a8d:	mov    eax,ds:0xb7ab3f48
  420a92:	and    ebp,eax
  420a94:	outs   dx,BYTE PTR ds:[esi]
  420a95:	leave  
  420a96:	mov    ebx,0x50dd8087
  420a9b:	sbb    dh,0x2
  420a9e:	pop    ecx
  420a9f:	xchg   edx,eax
  420aa0:	adc    eax,DWORD PTR [eax+0x66896572]
  420aa6:	ins    DWORD PTR es:[edi],dx
  420aa7:	add    edi,edi
  420aa9:	popf   
  420aaa:	push   ebp
  420aab:	or     edi,ecx
  420aad:	mov    ecx,0x2ee49f08
  420ab2:	jmp    0x4e5086da
  420ab7:	ds scas al,BYTE PTR es:[edi]
  420ab9:	ret    0x4465
  420abc:	or     bh,BYTE PTR [ebx]
  420abe:	cmp    esp,edi
  420ac0:	xlat   BYTE PTR ds:[ebx]
  420ac1:	xchg   edx,eax
  420ac2:	push   esi
  420ac3:	jo     0x420a67
  420ac5:	test   dl,bl
  420ac7:	xchg   esp,eax
  420ac8:	and    bl,BYTE PTR [ebx-0x7dbcdbe2]
  420ace:	jle    0x420a6b
  420ad0:	push   edi
  420ad1:	push   ds
  420ad2:	sub    dh,BYTE PTR [edx+0x42]
  420ad5:	ds loope 0x420a8f
  420ad8:	test   al,0x4f
  420ada:	cwde   
  420adb:	fwait
  420adc:	mov    al,0x8
  420ade:	cld    
  420adf:	push   esp
  420ae0:	std    
  420ae1:	outs   dx,DWORD PTR ds:[esi]
  420ae2:	mov    al,0x9e
  420ae4:	aas    
  420ae5:	loop   0x420a93
  420ae7:	inc    ecx
  420ae8:	cmp    edi,esp
  420aea:	pusha  
  420aeb:	pushf  
  420aec:	inc    ebx
  420aed:	scas   eax,DWORD PTR es:[edi]
  420aee:	cmp    al,0x96
  420af0:	fld    DWORD PTR [eax+0x6e]
  420af3:	or     dh,dl
  420af5:	jg     0x420ad7
  420af7:	or     eax,0x949f23a8
  420afc:	xchg   edx,eax
  420afd:	add    BYTE PTR [esi-0x12],dh
  420b00:	in     al,dx
  420b01:	sbb    al,0x4
  420b03:	js     0x420b67
  420b05:	fild   WORD PTR [esp+eiz*2]
  420b08:	mov    edi,0x920b6d44
  420b0d:	add    eax,0x24030add
  420b12:	ja     0x420b36
  420b14:	bound  edx,QWORD PTR [ebx-0x28]
  420b17:	aam    0x82
  420b19:	push   ds
  420b1a:	lds    edx,FWORD PTR [ebp-0x7230764d]
  420b20:	pop    esp
  420b21:	cli    
  420b22:	xor    bh,BYTE PTR [eax]
  420b24:	das    
  420b25:	add    DWORD PTR [eax],edx
  420b27:	cmp    al,0xf6
  420b29:	mov    esi,0x6ca865be
  420b2e:	sbb    DWORD PTR [ebx-0x5907b57f],esi
  420b34:	gs mov ebx,0xc8418688
  420b3a:	push   0xffffffde
  420b3c:	push   es
  420b3d:	jnp    0x420aeb
  420b3f:	out    dx,eax
  420b40:	mov    dl,0xf4
  420b42:	push   ebp
  420b43:	jbe    0x420bb4
  420b45:	and    dh,BYTE PTR [ecx-0x51]
  420b48:	mov    edx,0x21da03e1
  420b4d:	cmp    ebp,DWORD PTR [eax+0x34]
  420b50:	sub    ecx,eax
  420b52:	dec    edi
  420b53:	jecxz  0x420aeb
  420b55:	shl    DWORD PTR [edi+0x3b8ef63d],cl
  420b5b:	(bad)  
  420b5c:	mov    cl,0x9e
  420b5e:	adc    DWORD PTR [eax],ebx
  420b60:	pop    ebp
  420b61:	out    dx,al
  420b62:	xchg   edx,eax
  420b63:	lods   al,BYTE PTR ds:[esi]
  420b64:	xchg   BYTE PTR [eax],dh
  420b66:	dec    ebp
  420b67:	jno    0x420b6f
  420b69:	xchg   esi,eax
  420b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b6b:	into   
  420b6c:	and    dl,BYTE PTR [edi+0x26]
  420b6f:	mov    al,0x90
  420b71:	mov    cl,0xf6
  420b73:	call   0x550a8dd9
  420b78:	rol    DWORD PTR ds:0xe84e7d3,1
  420b7e:	cmp    BYTE PTR [ecx+0x26],ah
  420b81:	sbb    edx,DWORD PTR [ebx]
  420b83:	cmp    eax,0x4c0edc63
  420b88:	(bad)  
  420b89:	xor    dh,dh
  420b8b:	jnp    0x420b5e
  420b8d:	ins    DWORD PTR es:[edi],dx
  420b8e:	js     0x420be8
  420b90:	xlat   BYTE PTR ds:[ebx]
  420b91:	dec    esi
  420b92:	scas   eax,DWORD PTR es:[edi]
  420b93:	add    al,0xcb
  420b95:	fs loope 0x420bb5
  420b98:	mov    al,ds:0xad7f9d99
  420b9d:	or     DWORD PTR [edx+0x5f],esp
  420ba0:	je     0x420ba4
  420ba2:	lods   eax,DWORD PTR ds:[esi]
  420ba3:	aas    
  420ba4:	push   cs
  420ba5:	fcomp  DWORD PTR [ebp-0x36]
  420ba8:	pop    ebx
  420ba9:	jo     0x420c0a
  420bab:	inc    ebx
  420bac:	je     0x420c2c
  420bae:	pop    es
  420baf:	sahf   
  420bb0:	push   ebx
  420bb1:	fisttp DWORD PTR [edx+0x286c41b8]
  420bb7:	jns    0x420ba1
  420bb9:	mov    dl,0x70
  420bbb:	imul   ecx,esi,0xffffff8e
  420bbe:	inc    ebp
  420bbf:	or     al,0x7f
  420bc1:	lods   eax,DWORD PTR ds:[esi]
  420bc2:	in     eax,0x58
  420bc4:	inc    ebp
  420bc5:	push   cs
  420bc6:	sub    al,0xd0
  420bc8:	push   edx
  420bc9:	call   0x12b26ac5
  420bce:	and    eax,0xd750ffea
  420bd3:	retf   
  420bd4:	ret    
  420bd5:	adc    ebx,ebx
  420bd7:	add    eax,ecx
  420bd9:	in     eax,dx
  420bda:	sub    ecx,DWORD PTR [ebp+ebp*2+0x65ecacb0]
  420be1:	hlt    
  420be2:	test   eax,0xe55a2789
  420be7:	sbb    esi,0x77
  420bea:	pop    ebx
  420beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bec:	or     ecx,DWORD PTR [esi]
  420bee:	mov    eax,0xf4e9cfb7
  420bf3:	js     0x420c0c
  420bf5:	sbb    eax,0x51357059
  420bfa:	in     al,0xc1
  420bfc:	imul   esi,ebx,0xef32692a
  420c02:	mov    ecx,0x4e5502df
  420c07:	sbb    eax,0x22c67363
  420c0c:	aaa    
  420c0d:	pop    edx
  420c0e:	and    BYTE PTR [esi+0x4c4ee8db],0xdb
  420c15:	js     0x420bc4
  420c17:	(bad)  
  420c19:	fwait
  420c1a:	into   
  420c1b:	sbb    eax,0xa40cf178
  420c20:	lds    ebx,FWORD PTR [esi]
  420c22:	data16 jge 0x420c6b
  420c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c26:	idiv   BYTE PTR [ebx-0x3a]
  420c29:	push   ecx
  420c2a:	lahf   
  420c2b:	loope  0x420bdd
  420c2d:	arpl   dx,ax
  420c2f:	scas   al,BYTE PTR es:[edi]
  420c30:	add    ebx,ebp
  420c32:	mov    ds:0xdeeebef,eax
  420c37:	jle    0x420bd4
  420c39:	mov    edi,0xb28c71ce
  420c3e:	cld    
  420c3f:	lea    ecx,[eax+0x1e80001]
  420c45:	add    BYTE PTR [eax],al
  420c47:	mov    al,0x5f
  420c49:	int3   
  420c4a:	and    DWORD PTR [esi-0x34],0x11
  420c4e:	loopne 0x420c20
  420c50:	in     al,0xd7
  420c52:	dec    BYTE PTR [ebp+ecx*2-0x42494f8a]
  420c59:	and    DWORD PTR [edx+0x2a3109da],ebx
  420c5f:	or     DWORD PTR [edi+0x1eb0df88],0xa
  420c66:	or     BYTE PTR [edx-0x4d1b4cc6],dh
  420c6c:	mov    al,0x61
  420c6e:	inc    ebp
  420c6f:	xlat   BYTE PTR ds:[ebx]
  420c70:	mov    eax,ds:0xe7c3144d
  420c75:	xor    cl,dh
  420c77:	fisttp QWORD PTR [edi+0x25aa1e95]
  420c7d:	rcl    BYTE PTR [ebp+0x4],0x5f
  420c81:	pop    edx
  420c83:	ss push es
  420c85:	pop    edi
  420c86:	loop   0x420c54
  420c88:	adc    dl,ch
  420c8a:	jo     0x420c68
  420c8c:	inc    ebp
  420c8d:	jne    0x420cb5
  420c8f:	dec    esp
  420c90:	add    al,0xd3
  420c92:	aad    0xcf
  420c94:	xor    DWORD PTR [esi+0xa0384aa],ebp
  420c9a:	cdq    
  420c9b:	adc    eax,DWORD PTR [ebx-0x6f]
  420c9e:	sbb    bl,BYTE PTR [ecx-0x656aec43]
  420ca4:	inc    edi
  420ca5:	cmp    al,0xb8
  420ca7:	pop    ss
  420ca8:	xchg   esp,eax
  420ca9:	ss mov ch,0xd2
  420cac:	sar    DWORD PTR [edi-0x7c],1
  420caf:	call   0xcdb3:0xc5b9ba65
  420cb6:	mov    bh,0x2f
  420cb8:	xchg   ecx,eax
  420cb9:	ins    BYTE PTR es:[edi],dx
  420cba:	adc    DWORD PTR [edi+0x6c3a8810],esp
  420cc0:	cmp    al,0xa7
  420cc2:	jl     0x420c61
  420cc4:	or     eax,0x5e3f8f2b
  420cc9:	cs push edx
  420ccb:	das    
  420ccc:	push   esi
  420ccd:	mov    ebx,0xaed59992
  420cd2:	or     DWORD PTR [edx-0x2f8ffeb9],ecx
  420cd8:	out    dx,eax
  420cd9:	cmp    al,0xf9
  420cdb:	(bad)  
  420cdc:	jp     0x420c71
  420cde:	(bad)  
  420cdf:	jnp    0x420d30
  420ce1:	sub    bl,bl
  420ce3:	xchg   esp,eax
  420ce4:	dec    esp
  420ce5:	jnp    0x420cb3
  420ce7:	jmp    0x420cdf
  420ce9:	xchg   ebp,eax
  420cea:	xchg   ebp,eax
  420ceb:	pop    ds
  420cec:	pop    edx
  420ced:	daa    
  420cee:	pop    ebp
  420cef:	xor    DWORD PTR [esi],esi
  420cf1:	outs   dx,DWORD PTR ds:[esi]
  420cf2:	pop    esp
  420cf3:	repnz fs shr bh,cl
  420cf7:	xlat   BYTE PTR ds:[ebx]
  420cf8:	shrd   DWORD PTR [edx+0x3b975d86],eax,cl
  420cff:	or     BYTE PTR [ebx+eiz*1-0x7f],al
  420d03:	ror    ebp,1
  420d05:	lea    edx,[ecx+0x5d]
  420d08:	xlat   BYTE PTR ds:[ebx]
  420d09:	ja     0x420cbc
  420d0b:	mov    ds:0x89f88f1f,eax
  420d10:	xchg   dh,dl
  420d12:	enter  0x5b5b,0x16
  420d16:	push   ebx
  420d17:	sbb    eax,0x65cf7e4
  420d1c:	jecxz  0x420d3e
  420d1e:	push   eax
  420d1f:	sbb    ecx,DWORD PTR ss:[ebp-0x2bdc2fcb]
  420d26:	in     al,0xb8
  420d28:	sbb    DWORD PTR [esi],esi
  420d2a:	sub    DWORD PTR [ebx-0x2f],ebp
  420d2d:	sbb    al,0x94
  420d2f:	mov    ds:0x9a581f3c,al
  420d34:	test   bh,bl
  420d36:	jg     0x420dab
  420d38:	mov    bh,0xa9
  420d3a:	iret   
  420d3b:	pop    ecx
  420d3c:	sbb    dh,cl
  420d3e:	adc    BYTE PTR [edi],cl
  420d40:	push   ebx
  420d41:	adc    ebx,ebp
  420d43:	fistp  DWORD PTR [edi+0xb]
  420d46:	xchg   edi,eax
  420d47:	lods   al,BYTE PTR ds:[esi]
  420d48:	fcom   DWORD PTR [esi+0x7ac8af8e]
  420d4e:	and    eax,edx
  420d50:	das    
  420d51:	xlat   BYTE PTR ds:[ebx]
  420d52:	pop    edx
  420d53:	scas   al,BYTE PTR es:[edi]
  420d54:	pop    edx
  420d55:	(bad)  
  420d56:	nop
  420d57:	dec    ecx
  420d58:	mov    ecx,0xe3764112
  420d5d:	int    0x93
  420d5f:	lahf   
  420d60:	pop    ecx
  420d61:	mov    eax,ds:0xd97e1240
  420d66:	das    
  420d67:	jae    0x420d38
  420d69:	inc    ebp
  420d6a:	pop    esi
  420d6b:	pop    ss
  420d6c:	dec    edi
  420d6d:	add    eax,0xfedf0d49
  420d72:	test   al,0x34
  420d74:	mov    eax,0xd60302d9
  420d79:	or     esi,DWORD PTR [edi]
  420d7b:	lea    ebp,[esi*1-0x6515d9b]
  420d82:	loopne 0x420dfd
  420d84:	mov    esi,0xb506b35d
  420d89:	add    eax,0x4c5e6500
  420d8e:	in     al,0xfd
  420d90:	cmp    al,0x84
  420d92:	call   0x95a8:0xcf57aa46
  420d99:	mov    edx,0x7c97d0f8
  420d9e:	xor    al,0x93
  420da0:	pop    esp
  420da1:	mov    esp,0xb20c3d71
  420da6:	jmp    0x5fd4:0x5641d9e3
  420dad:	les    ebx,FWORD PTR [ecx-0x3e5a06f0]
  420db3:	add    DWORD PTR [eax],ebp
  420db5:	retf   0x92ed
  420db8:	jae    0x420d7b
  420dba:	leave  
  420dbb:	ins    BYTE PTR es:[edi],dx
  420dbc:	sbb    eax,0x367d84c4
  420dc1:	ficomp DWORD PTR [ebx+0x15]
  420dc4:	inc    esp
  420dc5:	out    0x28,eax
  420dc7:	inc    DWORD PTR [ecx+edx*1]
  420dca:	adc    eax,0x37ac4739
  420dcf:	jle    0x420db3
  420dd1:	(bad)  
  420dd2:	je     0x420dee
  420dd4:	shr    edi,1
  420dd6:	jns    0x420d85
  420dd8:	jmp    0x420e31
  420dda:	xor    al,0x1
  420ddc:	jle    0x420e35
  420dde:	sbb    al,0x96
  420de0:	pop    eax
  420de1:	cmp    al,0xf9
  420de3:	in     eax,0xe1
  420de5:	pop    ecx
  420de6:	xchg   edx,eax
  420de7:	xchg   ebp,eax
  420de8:	cmp    al,0xf1
  420dea:	enter  0xc1d0,0xfb
  420dee:	mov    eax,ds:0x6230e106
  420df3:	mov    ebp,edx
  420df5:	pop    ss
  420df6:	mov    BYTE PTR [ebx+0xc0b7eb3],ch
  420dfc:	fbld   TBYTE PTR [ecx-0x22bd96d0]
  420e02:	in     al,dx
  420e03:	pop    ecx
  420e04:	push   ss
  420e05:	(bad)  
  420e06:	popa   
  420e07:	sbb    al,0xf8
  420e09:	push   esp
  420e0a:	pop    esi
  420e0b:	sbb    BYTE PTR [esi],cl
  420e0d:	ins    DWORD PTR es:[edi],dx
  420e0e:	and    ah,dh
  420e10:	dec    ecx
  420e11:	call   0xf4c23cf4
  420e16:	test   eax,0x2129a86b
  420e1b:	dec    ecx
  420e1c:	pop    ebp
  420e1d:	jmp    0xc7e92a74
  420e22:	add    dl,ch
  420e24:	jmp    0x420e64
  420e26:	pushf  
  420e27:	aad    0x50
  420e29:	mov    esi,0xfa8ecff2
  420e2e:	jmp    0x8e18ce07
  420e33:	(bad)  
  420e34:	in     eax,dx
  420e35:	(bad)  
  420e37:	push   edx
  420e38:	js     0x420ead
  420e3a:	mov    esp,0x44c23b1e
  420e3f:	jne    0x420dcb
  420e41:	add    DWORD PTR [eax],eax
  420e43:	call   0x9f420e49
  420e48:	dec    edi
  420e49:	mov    ch,0xe9
  420e4b:	pushf  
  420e4c:	mov    al,0x4c
  420e4e:	ins    BYTE PTR es:[edi],dx
  420e4f:	adc    bh,BYTE PTR [edi]
  420e51:	mov    bh,0xd0
  420e53:	dec    eax
  420e54:	cmp    BYTE PTR [ecx],0xad
  420e57:	cmp    al,0x8a
  420e59:	adc    ebp,DWORD PTR [esi+0xb]
  420e5c:	xchg   ebp,eax
  420e5d:	int    0xb4
  420e5f:	and    al,0xc8
  420e61:	mov    dh,0x1b
  420e63:	loop   0x420e02
  420e65:	sub    ah,BYTE PTR [esi-0x55]
  420e68:	(bad)  
  420e69:	(bad)  
  420e6b:	mov    ah,0xb2
  420e6d:	jae    0x420e26
  420e6f:	retf   0x27e8
  420e72:	push   edx
  420e73:	mov    edi,DWORD PTR [ebp+0x7b]
  420e76:	in     al,dx
  420e77:	sbb    ebx,DWORD PTR [ecx+eax*2]
  420e7a:	jno    0x420eee
  420e7c:	lods   al,BYTE PTR ds:[esi]
  420e7d:	cmp    eax,0x175c718a
  420e82:	out    0x8c,eax
  420e84:	sar    DWORD PTR [edx-0x55353249],0x43
  420e8b:	jp     0x420ecc
  420e8d:	outs   dx,DWORD PTR ds:[esi]
  420e8e:	popf   
  420e8f:	call   0xd267:0xc3427abb
  420e96:	and    al,0xec
  420e98:	das    
  420e99:	mov    cl,0x34
  420e9b:	es push edx
  420e9d:	xor    ecx,ebp
  420e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ea0:	mov    ah,0x10
  420ea2:	push   ebx
  420ea3:	jge    0x420e5a
  420ea5:	jae    0x420e4e
  420ea7:	aas    
  420ea8:	cld    
  420ea9:	xchg   ecx,eax
  420eaa:	cmp    ecx,DWORD PTR [eax-0xd]
  420ead:	fsubr  DWORD PTR [ebx+ebx*4]
  420eb0:	nop
  420eb1:	dec    esi
  420eb2:	add    esp,DWORD PTR [edx+0x4f]
  420eb5:	add    eax,0xd52a04ee
  420eba:	fstp   DWORD PTR [esi]
  420ebc:	xor    al,0x92
  420ebe:	push   ds
  420ebf:	hlt    
  420ec0:	mov    bl,ch
  420ec2:	add    al,0x5c
  420ec4:	mov    esi,db7
  420ec7:	push   es
  420ec8:	into   
  420ec9:	pop    ebx
  420eca:	pop    edi
  420ecb:	sub    al,0xab
  420ecd:	push   esi
  420ece:	call   0xbcaae72a
  420ed3:	jle    0x420eb6
  420ed5:	push   ss
  420ed6:	rcr    dh,0x4f
  420ed9:	aam    0x91
  420edb:	xchg   edi,eax
  420edc:	dec    esi
  420edd:	sub    eax,0xa41964f1
  420ee2:	hlt    
  420ee3:	pop    ebp
  420ee4:	sbb    DWORD PTR [edi],ecx
  420ee6:	rcl    DWORD PTR [edx-0x779d5b87],cl
  420eec:	outs   dx,BYTE PTR ds:[si]
  420eee:	jbe    0x420e71
  420ef0:	push   cs
  420ef1:	gs not dl
  420ef4:	popa   
  420ef5:	cmp    eax,0x37b41500
  420efa:	cld    
  420efb:	fs gs cmp eax,0x95557e27
  420f02:	mov    ebx,0xa94d4a5f
  420f07:	dec    edi
  420f08:	and    DWORD PTR [ebp-0x255d5601],ebp
  420f0e:	mov    edx,0x37a05c47
  420f13:	sub    DWORD PTR [edi-0x2fa3dd31],eax
  420f19:	call   0x53cc0823
  420f1e:	sahf   
  420f1f:	jne    0x420f48
  420f21:	stos   BYTE PTR es:[edi],al
  420f22:	in     al,dx
  420f23:	int    0x97
  420f25:	test   BYTE PTR [ecx+0x2c9fd972],al
  420f2b:	aad    0x9e
  420f2d:	mov    eax,0xc8d409f6
  420f32:	pop    esi
  420f33:	push   es
  420f34:	or     eax,0x249bc141
  420f39:	add    BYTE PTR [edx],bl
  420f3b:	and    eax,0x912708e5
  420f40:	push   es
  420f41:	js     0x420ed6
  420f43:	mov    bh,0x1f
  420f45:	cmp    eax,0x4c21fe96
  420f4a:	and    esp,0x8e99c2c9
  420f50:	inc    esp
  420f51:	xchg   DWORD PTR [eax+0x3eefae48],esp
  420f57:	push   ss
  420f58:	call   0xaaf8:0x6d9a
  420f5e:	pushf  
  420f5f:	sar    ebx,1
  420f61:	adc    DWORD PTR [edx+0x6e2262fd],edx
  420f67:	lock inc DWORD PTR [ebp+0x44]
  420f6b:	adc    cl,BYTE PTR [ecx-0x2f]
  420f6e:	ins    BYTE PTR es:[edi],dx
  420f6f:	push   edi
  420f70:	xchg   esp,eax
  420f71:	pop    ds
  420f72:	imul   ecx,DWORD PTR [edx-0x65],0xffffffd6
  420f76:	inc    eax
  420f77:	sbb    esi,0xe87e4cc8
  420f7d:	fidivr WORD PTR [esi]
  420f7f:	mov    ecx,0xcbcdca6b
  420f84:	add    esp,DWORD PTR [esi-0x11]
  420f87:	fcomp  QWORD PTR [eax]
  420f89:	retf   0x55ba
  420f8c:	pop    ebp
  420f8d:	mov    DWORD PTR [edx-0x41],eax
  420f90:	jl     0x420f67
  420f92:	scas   eax,DWORD PTR es:[edi]
  420f93:	push   ecx
  420f94:	sub    al,0x1
  420f96:	dec    ebx
  420f97:	rol    BYTE PTR [edx],1
  420f99:	test   DWORD PTR [edx],eax
  420f9b:	jb     0x420f5d
  420f9d:	mov    edx,DWORD PTR [esi-0x564ee135]
  420fa3:	xor    BYTE PTR [edx+0x7d4f930d],0x49
  420faa:	jg     0x420fcb
  420fac:	int    0x46
  420fae:	icebp  
  420faf:	push   es
  420fb0:	shl    DWORD PTR [edi+0x76037f68],cl
  420fb6:	adc    edi,DWORD PTR [ebx-0x76687e39]
  420fbc:	mov    ds:0xdcf0a2bf,al
  420fc1:	int    0xec
  420fc3:	lods   al,BYTE PTR ds:[esi]
  420fc4:	pop    ebx
  420fc5:	lock nop
  420fc7:	adc    al,0xca
  420fc9:	into   
  420fca:	fld    TBYTE PTR [edx]
  420fcc:	sbb    ebx,DWORD PTR [ebx]
  420fce:	pop    ebp
  420fcf:	mov    eax,ds:0x14630efc
  420fd4:	mov    dl,BYTE PTR [esi]
  420fd6:	dec    edx
  420fd7:	pop    es
  420fd8:	icebp  
  420fd9:	pop    es
  420fda:	popf   
  420fdb:	lahf   
  420fdc:	or     edx,DWORD PTR [ecx]
  420fde:	pushf  
  420fdf:	xor    DWORD PTR [eax-0x258a52d],edi
  420fe5:	mov    edi,DWORD PTR ds:0xe2ff9b09
  420feb:	sub    eax,0xef6ea5ca
  420ff0:	push   0x9edd6837
  420ff5:	pop    ebx
  420ff6:	sar    esi,0xb
  420ff9:	call   0xe5d4f42
  420ffe:	or     BYTE PTR [ebx-0x72dd2993],bl
  421004:	ss sahf 
  421006:	dec    esi
  421007:	sbb    al,0x5e
  421009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42100a:	cdq    
  42100b:	mov    ebx,0x63fe9af8
  421010:	xor    al,0xae
  421012:	or     BYTE PTR [ebx-0x3e],ch
  421015:	test   eax,0x7b53dc44
  42101a:	pop    es
  42101b:	out    dx,al
  42101c:	iret   
  42101d:	push   ecx
  42101e:	mul    ch
  421020:	lds    esi,FWORD PTR [ecx-0x27ea09c2]
  421026:	into   
  421027:	pop    es
  421028:	xor    al,0xa9
  42102a:	pop    esp
  42102b:	push   0x37
  42102d:	jmp    0x421043
  42102f:	inc    ebx
  421030:	clc    
  421031:	gs sbb edi,edi
  421034:	popf   
  421035:	jg     0x421031
  421037:	enter  0x5972,0xa2
  42103b:	test   eax,0x5d5d9f79
  421040:	mov    WORD PTR [ecx],es
  421042:	add    al,ch
  421044:	add    DWORD PTR [eax],eax
  421046:	add    BYTE PTR [ebx],ch
  421048:	sahf   
  421049:	jg     0x420fe0
  42104b:	sub    ebx,edi
  42104d:	retf   0x32cd
  421050:	sub    BYTE PTR [edi+0x51d5d26d],cl
  421056:	popa   
  421057:	or     bl,bl
  421059:	lea    eax,[edx]
  42105b:	xor    BYTE PTR [ebx-0x4e],ah
  42105e:	sbb    edi,DWORD PTR [edi+eax*8]
  421061:	(bad)  
  421062:	mov    eax,ds:0x5ebf6906
  421067:	jmp    0xbbaa5995
  42106c:	sahf   
  42106d:	out    0x12,al
  42106f:	sub    ebp,edi
  421071:	add    ah,BYTE PTR ds:[ebx]
  421074:	leave  
  421075:	add    cl,BYTE PTR [edi]
  421077:	scas   eax,DWORD PTR es:[edi]
  421078:	lds    edx,FWORD PTR [esi+0x74bbd702]
  42107e:	mov    al,ds:0xbd187f81
  421083:	stos   DWORD PTR es:[edi],eax
  421084:	out    0x35,al
  421086:	stc    
  421087:	fisubr DWORD PTR [ebx+0x4eeb25b9]
  42108d:	xchg   ebx,eax
  42108e:	out    dx,al
  42108f:	adc    al,0x5b
  421091:	xchg   BYTE PTR [eax],ah
  421093:	fwait
  421094:	lods   al,BYTE PTR ds:[esi]
  421095:	mov    WORD PTR ds:0x5a4aea34,?
  42109b:	fnclex 
  42109d:	push   0xffffffc4
  42109f:	lods   eax,DWORD PTR ds:[esi]
  4210a0:	into   
  4210a1:	mov    cs,WORD PTR cs:[ebp-0x2b246e62]
  4210a8:	or     ah,BYTE PTR [esi]
  4210aa:	mov    esi,DWORD PTR [ecx+0x41f6ed92]
  4210b0:	jg     0x4210a4
  4210b2:	test   al,0x88
  4210b4:	scas   al,BYTE PTR es:[edi]
  4210b5:	shl    ecx,cl
  4210b7:	pop    edx
  4210b8:	xchg   ebx,eax
  4210b9:	mov    ebp,0x8d5dd12c
  4210be:	gs ins DWORD PTR es:[edi],dx
  4210c0:	scas   al,BYTE PTR es:[edi]
  4210c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210c2:	xor    BYTE PTR [edx],al
  4210c4:	sbb    eax,0xa96f7e2f
  4210c9:	adc    esi,esi
  4210cb:	int3   
  4210cc:	jmp    0x444f7c38
  4210d1:	jl     0x421083
  4210d3:	dec    edx
  4210d4:	les    edi,FWORD PTR [edi-0x4f]
  4210d7:	sub    DWORD PTR [esi-0x3084256a],0x76
  4210de:	popw   es
  4210e0:	jae    0x4210ee
  4210e2:	adc    BYTE PTR [edi-0x564a8e21],ch
  4210e8:	pop    edx
  4210e9:	enter  0x31b8,0xc2
  4210ed:	xor    al,0x4f
  4210ef:	xor    eax,0x4c43370
  4210f4:	dec    edi
  4210f5:	(bad)  
  4210f6:	mov    cl,0xec
  4210f8:	mov    bh,0x50
  4210fa:	inc    eax
  4210fb:	sbb    al,BYTE PTR [ebp+0x57d8ff2d]
  421101:	mov    edx,0xc1aa63e0
  421106:	dec    esi
  421107:	out    0x2,al
  421109:	cmp    cl,BYTE PTR [esi]
  42110b:	and    ch,dh
  42110d:	pop    es
  42110e:	mov    edi,0x6e0dc96e
  421113:	inc    ebx
  421114:	sbb    dh,0x73
  421117:	and    edx,DWORD PTR ds:0x4049b1a0
  42111d:	scas   al,BYTE PTR es:[edi]
  42111e:	aaa    
  42111f:	push   ecx
  421120:	repnz push ebx
  421122:	lods   al,BYTE PTR ds:[esi]
  421123:	xchg   esp,eax
  421124:	das    
  421125:	call   0x1fab544a
  42112a:	xchg   edx,eax
  42112b:	popa   
  42112c:	or     edx,DWORD PTR [ebx]
  42112e:	push   eax
  42112f:	pop    esp
  421130:	jge    0x421174
  421132:	inc    eax
  421133:	aaa    
  421134:	sbb    esp,DWORD PTR [edx+0x79ab8f51]
  42113a:	(bad)  
  42113b:	lods   eax,DWORD PTR ds:[esi]
  42113c:	in     al,0x97
  42113e:	push   0x70
  421140:	stos   BYTE PTR es:[edi],al
  421141:	out    0x1a,al
  421143:	or     BYTE PTR [ebp+ebx*8+0x46381d47],cl
  42114a:	inc    eax
  42114b:	push   eax
  42114c:	sub    al,cl
  42114e:	pop    esp
  42114f:	aam    0x26
  421151:	mov    ds:0x997c1d10,eax
  421156:	mov    edx,0xfc2ac8cd
  42115b:	mov    ah,0xa2
  42115d:	jl     0x421107
  42115f:	rol    DWORD PTR [eax],0xee
  421162:	sub    edx,DWORD PTR [esi-0x709deba1]
  421168:	xchg   ebp,eax
  421169:	cdq    
  42116a:	add    DWORD PTR [ecx-0x53],ebp
  42116d:	enter  0x36a7,0x5d
  421171:	and    dl,BYTE PTR [ebp*4+0x58382067]
  421178:	sbb    BYTE PTR [edi],dl
  42117a:	sbb    eax,0xefdbccb1
  42117f:	and    bl,dl
  421181:	sub    BYTE PTR [ecx-0x45ad014d],ch
  421187:	push   esi
  421188:	inc    ebp
  421189:	sti    
  42118a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42118b:	or     DWORD PTR [ecx+ebp*8+0xe],esp
  42118f:	cdq    
  421190:	push   esi
  421191:	dec    edx
  421192:	add    cl,BYTE PTR [edi]
  421194:	mov    dh,0xb8
  421196:	and    eax,0x3d418717
  42119b:	sbb    eax,0x85ce1af8
  4211a0:	fidivr WORD PTR [ecx-0x26]
  4211a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211a4:	loope  0x421130
  4211a6:	push   0x7835a1dc
  4211ab:	adc    BYTE PTR [esi+edx*4],bh
  4211ae:	ins    DWORD PTR es:[edi],dx
  4211af:	mov    bh,BYTE PTR [eax+0x265ba9e5]
  4211b5:	aas    
  4211b6:	xlat   BYTE PTR ds:[ebx]
  4211b7:	pop    ds
  4211b8:	ds mov BYTE PTR cs:[edi],ah
  4211bc:	mov    al,cs:0xfba83784
  4211c2:	mov    ecx,ebx
  4211c4:	clc    
  4211c5:	add    DWORD PTR [esi-0xb],esp
  4211c8:	mov    eax,0xa7669d4b
  4211cd:	jle    0x421208
  4211cf:	loopne 0x42115d
  4211d1:	mov    ss,WORD PTR [esi-0x569a928a]
  4211d7:	mov    al,0x32
  4211d9:	popa   
  4211da:	(bad)  
  4211db:	mov    al,ds:0x6adf4dd3
  4211e0:	push   ebp
  4211e1:	out    dx,eax
  4211e2:	popa   
  4211e3:	ror    BYTE PTR [eax+0x673756fa],cl
  4211e9:	xor    eax,DWORD PTR [edx]
  4211eb:	popa   
  4211ec:	cmp    al,0xd4
  4211ee:	mov    edi,0xfb3872f9
  4211f3:	mov    al,0xc0
  4211f5:	xchg   ebp,eax
  4211f6:	inc    ecx
  4211f7:	inc    ecx
  4211f8:	push   ebx
  4211f9:	and    DWORD PTR [edi-0x76],esp
  4211fc:	enter  0x8de5,0xf1
  421200:	pusha  
  421201:	arpl   bp,bx
  421203:	fld    QWORD PTR ds:0xa0d95f2a
  421209:	push   ecx
  42120a:	or     cl,BYTE PTR [ebp-0xb97b67]
  421210:	lods   eax,DWORD PTR ds:[esi]
  421211:	jo     0x4211a9
  421213:	sbb    cl,ah
  421215:	sbb    BYTE PTR [ebp+ebx*8+0x2824777],al
  42121c:	add    eax,0xb7fe2ecb
  421221:	xchg   ebp,eax
  421222:	xchg   edx,eax
  421223:	daa    
  421224:	lods   eax,DWORD PTR ds:[esi]
  421225:	arpl   WORD PTR [edx+0x23],cx
  421228:	retf   
  421229:	div    esi
  42122b:	xchg   ebx,eax
  42122c:	mov    cl,0x96
  42122e:	cwde   
  42122f:	pop    es
  421230:	sbb    BYTE PTR [esi+0x3fbf9fa7],0xa2
  421237:	loope  0x421292
  421239:	add    dh,BYTE PTR ss:[ecx+0x45321ade]
  421240:	mov    es,WORD PTR [ecx]
  421242:	add    al,ch
  421244:	add    DWORD PTR [eax],eax
  421246:	add    BYTE PTR [esi-0x69],dl
  421249:	cmp    bl,cl
  42124b:	xor    eax,0x47ddcbc4
  421250:	dec    edi
  421251:	jno    0x421273
  421253:	mov    ds:0x359a0817,al
  421258:	jae    0x42121a
  42125a:	cmp    eax,0xe0799625
  42125f:	cmp    al,0xd9
  421261:	jns    0x4212ba
  421263:	and    DWORD PTR [ecx],eax
  421265:	rol    BYTE PTR [eax],0x64
  421268:	repz or esi,DWORD PTR es:[edi+0x3000066b]
  421270:	pop    ebx
  421271:	std    
  421272:	in     eax,0xf8
  421274:	push   ss
  421275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421276:	push   ebp
  421277:	loope  0x4211ff
  421279:	(bad)  
  42127a:	iret   
  42127b:	add    DWORD PTR [edi],edi
  42127d:	xchg   DWORD PTR [edx],ecx
  42127f:	ja     0x421293
  421281:	inc    ecx
  421282:	loop   0x4212ad
  421284:	adc    eax,0xa2f754c9
  421289:	pop    di
  42128b:	mov    ch,ah
  42128d:	mov    BYTE PTR [ebx],bl
  42128f:	mov    esp,0x4d63c626
  421294:	add    eax,0xca4d454b
  421299:	out    0xd9,al
  42129b:	loopne 0x421270
  42129d:	lea    esi,[ebx]
  42129f:	loope  0x42126f
  4212a1:	(bad)  
  4212a2:	jmp    0x4212c2
  4212a4:	fs push 0xf5bdf501
  4212aa:	out    dx,eax
  4212ab:	in     al,0x1
  4212ad:	out    0x39,eax
  4212af:	mov    esp,0x699ac84d
  4212b4:	dec    ebx
  4212b5:	dec    ebp
  4212b6:	sbb    al,0x1a
  4212b8:	arpl   WORD PTR [esi-0x23],dx
  4212bb:	pop    edi
  4212bc:	mov    cl,0x87
  4212be:	(bad)  
  4212bf:	cli    
  4212c0:	out    0xc2,al
  4212c2:	repz mov ebp,DWORD PTR [ebp+0x643460b4]
  4212c9:	push   ecx
  4212ca:	cs add al,0x3d
  4212cd:	mov    ebx,gs
  4212cf:	aad    0xff
  4212d1:	std    
  4212d2:	xor    al,0x29
  4212d4:	sub    BYTE PTR [ecx-0x7a],0x49
  4212d8:	mov    bh,0xf2
  4212da:	fadd   DWORD PTR ds:0x4760714c
  4212e0:	sub    eax,0xe16abb
  4212e5:	(bad)  
  4212e6:	cli    
  4212e7:	test   DWORD PTR [edx],edi
  4212e9:	fst    DWORD PTR [edx-0x26]
  4212ec:	and    al,0xeb
  4212ee:	in     al,0x4e
  4212f0:	retf   0x8893
  4212f3:	(bad)  
  4212f4:	test   eax,0x87c03aa0
  4212f9:	fcmovnb st,st(3)
  4212fb:	mov    bh,0x6
  4212fd:	mov    bl,0xff
  4212ff:	dec    edx
  421300:	addr16 js 0x4212ba
  421303:	sti    
  421304:	push   ecx
  421305:	pop    edi
  421306:	push   ebp
  421307:	outs   dx,BYTE PTR ds:[esi]
  421308:	xchg   edi,eax
  421309:	out    0x38,al
  42130b:	popa   
  42130c:	mov    ebp,0x6d4b2c63
  421311:	(bad)  
  421312:	xchg   ebp,eax
  421313:	retf   0xcd2f
  421316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421317:	es sbb edi,edx
  42131a:	stos   DWORD PTR es:[edi],eax
  42131b:	add    ebp,DWORD PTR [ebx+0x51]
  42131e:	xlat   BYTE PTR ds:[ebx]
  42131f:	test   eax,0xb97c9201
  421324:	vpcomuq xmm13,xmm6,xmm2,0x11
  42132a:	mov    edx,0xc83afd74
  42132f:	mov    WORD PTR [esi-0x50f2008],cs
  421335:	les    esi,FWORD PTR [ecx]
  421337:	iret   
  421338:	cmc    
  421339:	mov    eax,0x95d4fdc9
  42133e:	mov    bl,0x6c
  421340:	test   al,0xa5
  421342:	adc    DWORD PTR [ecx],esp
  421344:	adc    DWORD PTR [esi+0x6e],edx
  421347:	or     al,0xc3
  421349:	push   ebx
  42134a:	(bad)  
  42134c:	jo     0x4213a4
  42134e:	adc    al,dl
  421350:	and    eax,0xb6e1cee6
  421355:	xchg   edx,eax
  421356:	inc    ebp
  421357:	cld    
  421358:	cwde   
  421359:	stos   BYTE PTR es:[edi],al
  42135a:	inc    esp
  42135b:	dec    ebp
  42135c:	in     al,dx
  42135d:	and    edi,DWORD PTR [esi+0x52]
  421360:	dec    esi
  421361:	jg     0x421310
  421363:	mov    bh,0x98
  421365:	in     al,0xbf
  421367:	out    0x6a,eax
  421369:	push   edx
  42136a:	sahf   
  42136b:	inc    esp
  42136c:	out    dx,eax
  42136d:	xor    eax,0xaf9147f9
  421372:	adc    ebp,DWORD PTR [eax-0x67]
  421375:	dec    ebp
  421376:	int3   
  421377:	pop    esi
  421378:	mov    ecx,0xe50b0e31
  42137d:	dec    eax
  42137e:	or     eax,0xc256d0c5
  421383:	inc    edx
  421384:	add    al,0xbd
  421386:	mov    ?,WORD PTR [ebx-0x8223022]
  42138c:	xor    al,0x42
  42138e:	inc    ecx
  42138f:	mov    DWORD PTR [edi],esi
  421391:	dec    ecx
  421392:	or     al,0x3c
  421394:	div    esi
  421396:	adc    ecx,DWORD PTR [edx+0x7a236a4b]
  42139c:	sti    
  42139d:	and    al,0x76
  42139f:	add    al,0xb7
  4213a1:	test   al,0x37
  4213a3:	ds das 
  4213a5:	mov    esp,0x41693549
  4213aa:	cmp    BYTE PTR [edi+ebp*2],bh
  4213ad:	mov    al,cl
  4213af:	je     0x4213c1
  4213b1:	std    
  4213b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213b3:	jmp    DWORD PTR [ecx-0x3070488a]
  4213b9:	(bad)  
  4213ba:	int    0x14
  4213bc:	int    0xaa
  4213be:	inc    ebp
  4213bf:	add    al,0x48
  4213c1:	jnp    0x4213b7
  4213c3:	in     al,0x20
  4213c5:	shr    DWORD PTR [ebp-0x6c],0x43
  4213c9:	ror    DWORD PTR [ebp+edx*1+0x70],cl
  4213cd:	fbld   TBYTE PTR ds:0x7d5248e5
  4213d3:	mov    dl,0x1a
  4213d5:	jmp    0x17e1fcd9
  4213da:	mov    ds:0xa266e45a,eax
  4213df:	inc    DWORD PTR [edx-0x16]
  4213e2:	add    DWORD PTR [esi+ebx*8+0x66a7994b],0x17eac462
  4213ed:	(bad)  
  4213f0:	lods   eax,DWORD PTR ds:[esi]
  4213f1:	sub    al,0xb
  4213f3:	xchg   ebx,eax
  4213f4:	mov    ah,0xec
  4213f6:	xchg   edx,eax
  4213f7:	popf   
  4213f8:	jno    0x42137d
  4213fa:	(bad)  
  4213fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213fd:	sub    DWORD PTR [edi-0x45],esi
  421400:	loopne 0x4213cb
  421402:	and    BYTE PTR [edx+0x1c],bh
  421405:	ficom  WORD PTR [eax-0x11]
  421408:	imul   esi,DWORD PTR [esi],0xa49bf1a7
  42140e:	leave  
  42140f:	mov    cl,0xa8
  421411:	in     al,dx
  421412:	aaa    
  421413:	fisttp DWORD PTR [eax-0x5af80018]
  421419:	xor    eax,0xb5b027a6
  42141e:	jge    0x4213ac
  421420:	jb     0x42143d
  421422:	mov    eax,ds:0x9f80995b
  421427:	cmp    BYTE PTR [eax+0x448b0320],bh
  42142d:	push   esp
  42142e:	or     al,0xe3
  421430:	call   0xf8dde4c5
  421435:	jecxz  0x421432
  421437:	sbb    eax,DWORD PTR [ecx+0x102b9fe1]
  42143d:	and    BYTE PTR [ebp*1-0x17fffe70],dl
  421444:	add    DWORD PTR [eax],eax
  421446:	add    BYTE PTR [edx+0x6caa7c08],dh
  42144c:	nop
  42144d:	mov    al,0xa
  42144f:	push   0x43
  421451:	mul    BYTE PTR [edi]
  421453:	push   esp
  421454:	xchg   edi,eax
  421455:	dec    ecx
  421456:	sbb    DWORD PTR [esi+eax*4],edx
  421459:	xchg   esi,ebp
  42145b:	sbb    BYTE PTR [ebx],dl
  42145d:	fwait
  42145e:	sub    BYTE PTR [ebp+0x171b9c39],ah
  421464:	ins    BYTE PTR es:[edi],dx
  421465:	pop    edx
  421466:	hlt    
  421467:	loope  0x42145f
  421469:	add    al,0xd8
  42146b:	jge    0x421426
  42146d:	and    BYTE PTR [eax+0x79e63f30],cl
  421473:	repz daa 
  421475:	mov    edx,0x497470bf
  42147a:	dec    esp
  42147b:	ret    0x248e
  42147e:	repnz push eax
  421480:	call   0x2bf9:0xa6e8c057
  421487:	adc    al,0xd
  421489:	or     eax,0x1981c7dd
  42148e:	imul   ecx,DWORD PTR [edi],0x2d35a7a5
  421494:	push   0xffffffce
  421496:	std    
  421497:	push   ebp
  421498:	sub    dh,BYTE PTR [ebx+0x2f01a6d4]
  42149e:	je     0x4214e5
  4214a0:	fwait
  4214a1:	icebp  
  4214a2:	xchg   esi,eax
  4214a3:	out    0x99,eax
  4214a5:	sbb    dl,BYTE PTR [ecx-0x60]
  4214a8:	shl    DWORD PTR [ecx+0x66],cl
  4214ab:	retf   0xed8c
  4214ae:	icebp  
  4214af:	mov    WORD PTR [edi],gs
  4214b1:	mov    eax,ds:0xb8771bb4
  4214b6:	(bad)  
  4214b7:	or     al,0xff
  4214b9:	stos   DWORD PTR es:[edi],eax
  4214ba:	adc    edx,DWORD PTR [edi-0x13e5eb36]
  4214c0:	xlat   BYTE PTR ds:[ebx]
  4214c1:	inc    ecx
  4214c2:	leave  
  4214c3:	xchg   edi,eax
  4214c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214c5:	sahf   
  4214c6:	xor    eax,0x406f97e1
  4214cb:	out    0xf3,eax
  4214cd:	jmp    0x9e65:0xdcbaf2e7
  4214d4:	(bad)  
  4214d5:	sub    cl,0x0
  4214d8:	stos   BYTE PTR es:[edi],al
  4214d9:	cmp    eax,DWORD PTR [esi-0x1d]
  4214dc:	push   0x48
  4214de:	xchg   esp,eax
  4214df:	aad    0xf9
  4214e1:	cmp    al,0x2a
  4214e3:	xor    al,0x9c
  4214e5:	cmp    BYTE PTR [edi+0x75],al
  4214e8:	inc    ebx
  4214e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214ea:	pop    ebx
  4214eb:	cmc    
  4214ec:	test   BYTE PTR [esi-0x4c],bl
  4214ef:	and    eax,0x42df20b9
  4214f4:	pop    eax
  4214f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214f6:	cwde   
  4214f7:	mov    ebx,0x16efefa8
  4214fc:	addr16 mov esi,0xaee17e0a
  421502:	ficom  WORD PTR [edi+0x10ddfcca]
  421508:	iret   
  421509:	sbb    eax,0x652b6dc3
  42150e:	jmp    0x4214a2
  421510:	repnz cdq 
  421512:	mov    ebx,0xa6afb48b
  421517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421518:	stos   BYTE PTR es:[edi],al
  421519:	xchg   ebx,eax
  42151a:	cld    
  42151b:	out    0x18,al
  42151d:	lahf   
  42151e:	xchg   esp,eax
  42151f:	xchg   ebx,edi
  421521:	rcr    BYTE PTR [ecx-0x3d],0xc6
  421525:	cmp    bh,bh
  421527:	xor    eax,0x1720bb68
  42152c:	inc    ecx
  42152d:	fisttp WORD PTR [eax]
  42152f:	retf   0x55f4
  421532:	pusha  
  421533:	push   0x58
  421535:	shl    BYTE PTR [eax+0x6f9334c],0x99
  42153c:	ins    DWORD PTR es:[edi],dx
  42153d:	jbe    0x421583
  42153f:	pop    ss
  421540:	mov    eax,0x6e4a9eca
  421545:	push   es
  421546:	in     al,0xa2
  421548:	sahf   
  421549:	fcmovu st,st(3)
  42154b:	cld    
  42154c:	add    eax,0x25be2bd7
  421551:	inc    esi
  421552:	add    BYTE PTR [edi+0xa],bl
  421555:	jge    0x421504
  421557:	lods   al,BYTE PTR ds:[esi]
  421558:	mov    ah,0x67
  42155a:	stos   BYTE PTR es:[edi],al
  42155b:	jg     0x421542
  42155d:	dec    esi
  42155e:	inc    eax
  42155f:	push   ds
  421560:	out    0x67,eax
  421562:	push   esp
  421563:	aaa    
  421564:	mov    esp,0x6a06938a
  421569:	inc    edx
  42156a:	(bad)  
  42156b:	push   edx
  42156c:	mov    ecx,0x5494055d
  421571:	shl    BYTE PTR [ebp-0x26],cl
  421574:	sbb    BYTE PTR [ecx+ebp*2-0x351c705c],al
  42157b:	jo     0x4215e0
  42157d:	xchg   ebx,eax
  42157e:	ret    0x7a54
  421581:	clc    
  421582:	pushf  
  421583:	adc    al,0x27
  421585:	xor    cl,BYTE PTR ds:0xd876ca6e
  42158b:	xchg   esp,eax
  42158c:	imul   eax,eax,0x74ab999f
  421592:	and    DWORD PTR [ecx],ebx
  421594:	int    0x4
  421596:	jbe    0x42152f
  421598:	mov    cl,0x75
  42159a:	pusha  
  42159b:	les    edi,FWORD PTR [eax+0x27]
  42159e:	fs jne 0x421593
  4215a1:	cmp    al,0x62
  4215a3:	dec    esi
  4215a4:	inc    esp
  4215a5:	cdq    
  4215a6:	pop    ebp
  4215a7:	outs   dx,DWORD PTR ds:[esi]
  4215a8:	pushf  
  4215a9:	imul   esi,esp,0x812e1f54
  4215af:	das    
  4215b0:	cdq    
  4215b1:	lods   al,BYTE PTR ds:[esi]
  4215b2:	push   0x6d
  4215b4:	scas   eax,DWORD PTR es:[edi]
  4215b5:	leave  
  4215b6:	or     DWORD PTR [ebp+0x71],esp
  4215b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215ba:	xchg   ecx,eax
  4215bb:	mov    ebx,0x896c014b
  4215c0:	push   ss
  4215c1:	push   esi
  4215c2:	rol    DWORD PTR [esp+eiz*8+0x5919415d],0xb
  4215ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215cb:	aaa    
  4215cc:	mov    al,ds:0x8f354e67
  4215d1:	(bad)  
  4215d2:	and    BYTE PTR [ebx-0x25f875d],ah
  4215d8:	jbe    0x42155d
  4215da:	shr    ecx,0x87
  4215dd:	je     0x4215a6
  4215df:	aas    
  4215e0:	and    ah,BYTE PTR [eax]
  4215e2:	inc    esi
  4215e3:	fwait
  4215e4:	and    bh,BYTE PTR [eax]
  4215e6:	call   0xb77b:0x82933b52
  4215ed:	xor    al,0xe3
  4215ef:	jg     0x421644
  4215f1:	sbb    ah,BYTE PTR [ecx-0x2d]
  4215f4:	inc    edi
  4215f5:	xchg   ebp,eax
  4215f6:	int    0xc2
  4215f8:	pushf  
  4215f9:	adc    ch,0x35
  4215fc:	pop    edx
  4215fd:	mov    eax,0x5d7c0066
  421602:	popa   
  421603:	adc    DWORD PTR [ebp+0x21],0x6157fdac
  42160a:	out    0xcc,eax
  42160c:	dec    esi
  42160d:	out    0xc7,al
  42160f:	pop    eax
  421610:	test   eax,0x5e7b7f7d
  421615:	mov    dl,0x7
  421617:	lods   eax,DWORD PTR ds:[esi]
  421619:	mov    esp,0x1935fae2
  42161e:	xchg   esi,eax
  42161f:	mov    BYTE PTR [ebx+0x71691622],al
  421625:	dec    esi
  421626:	jb     0x421630
  421628:	(bad)  
  421629:	stc    
  42162a:	aaa    
  42162b:	jmp    0xf466:0xee616d5d
  421632:	lods   eax,DWORD PTR ds:[esi]
  421633:	cld    
  421634:	mov    edi,0x9c9c67ff
  421639:	push   edi
  42163a:	jge    0x421642
  42163c:	mov    WORD PTR [eax+0x19215d4],es
  421642:	add    al,ch
  421644:	add    DWORD PTR [eax],eax
  421646:	add    BYTE PTR [edi],ah
  421648:	inc    ebx
  421649:	sahf   
  42164a:	ja     0x421627
  42164c:	jns    0x421632
  42164e:	sub    ebx,DWORD PTR [esi+ecx*8]
  421651:	rcl    BYTE PTR [ebp+0x6f1c688e],cl
  421657:	add    BYTE PTR [ecx+eiz*4-0x376512da],0xb5
  42165f:	cdq    
  421660:	push   ds
  421661:	nop
  421662:	add    BYTE PTR [ecx+0x1892fc2],0x3e
  421669:	dec    edx
  42166a:	mov    ch,0x32
  42166c:	mov    ds:0xf8b6a3cd,al
  421671:	out    dx,al
  421672:	push   0xb896de88
  421677:	shl    BYTE PTR [edx-0x3c],cl
  42167a:	sub    edi,DWORD PTR [ecx+edx*8]
  42167d:	mov    esp,0x8e3ad048
  421682:	cmp    eax,DWORD PTR [esi+0x5c]
  421685:	mov    edx,0x56f5734a
  42168a:	stos   BYTE PTR es:[edi],al
  42168b:	add    eax,DWORD PTR [edi+0x58]
  42168e:	mul    edi
  421690:	cmp    BYTE PTR [esi+eax*2+0x7a],cl
  421694:	(bad)  
  421695:	and    bh,BYTE PTR [eax+eax*4+0x7795ca7e]
  42169c:	call   FWORD PTR [ebp-0x80]
  42169f:	jae    0x4216f7
  4216a1:	push   edx
  4216a2:	and    esp,DWORD PTR ds:0xb90af711
  4216a8:	jns    0x4216a9
  4216aa:	inc    esi
  4216ab:	xchg   ebp,eax
  4216ac:	cmp    DWORD PTR [ebx],edx
  4216ae:	inc    ebx
  4216af:	popa   
  4216b0:	pmullw mm6,QWORD PTR [esi]
  4216b3:	xchg   BYTE PTR [edx],bl
  4216b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216b6:	push   ebx
  4216b7:	or     DWORD PTR [edx+esi*2],ebx
  4216ba:	add    eax,0xe74fee36
  4216bf:	or     DWORD PTR [ebx+ecx*4],esp
  4216c2:	(bad)  
  4216c5:	mov    ds:0xf340add,eax
  4216ca:	add    al,0xe
  4216cc:	jp     0x42173a
  4216ce:	mov    eax,ds:0x20ef55b
  4216d3:	mov    ebx,0x7f987f15
  4216d8:	in     eax,dx
  4216d9:	fsubr  QWORD PTR [ebx]
  4216db:	cmp    BYTE PTR [edx],ch
  4216dd:	aaa    
  4216de:	loope  0x4216de
  4216e0:	fcom   QWORD PTR ds:0x12e5dc0a
  4216e6:	mov    bl,0x29
  4216e8:	jae    0x421692
  4216ea:	cmp    bh,BYTE PTR [eax]
  4216ec:	repnz cmp DWORD PTR ss:[esi],0xffffffde
  4216f1:	(bad)  
  4216f2:	mov    esp,0xd37974b5
  4216f7:	xor    BYTE PTR [edi+0x678bf4bb],bh
  4216fd:	jno    0x421766
  4216ff:	cdq    
  421700:	ror    DWORD PTR [ecx],cl
  421702:	loop   0x4216e7
  421704:	mov    eax,0xc5860f76
  421709:	call   0x86204524
  42170e:	mov    ds,WORD PTR [ecx+0x5c]
  421711:	(bad)  
  421712:	xor    al,BYTE PTR [esi-0x2c03ccef]
  421718:	lods   eax,DWORD PTR ds:[esi]
  421719:	fidivr DWORD PTR [ebp-0x25]
  42171c:	jge    0x421727
  42171e:	sub    ah,BYTE PTR ds:[edi]
  421721:	jge    0x4216e9
  421723:	cmp    al,0x4c
  421725:	pop    esp
  421726:	and    BYTE PTR [eax],dh
  421728:	js     0x4217a2
  42172a:	xchg   ebx,eax
  42172b:	leave  
  42172c:	and    DWORD PTR [ebp+0x3982e279],eax
  421732:	sar    DWORD PTR [ecx+0x56],0x1a
  421736:	or     esi,DWORD PTR [edx+0x51]
  421739:	dec    edi
  42173a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42173b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42173c:	bound  ebp,QWORD PTR [esi-0x5b38eeef]
  421742:	adc    al,0x90
  421744:	mov    ebx,0x2ec109a0
  421749:	cld    
  42174a:	sahf   
  42174b:	pop    ds
  42174c:	int3   
  42174d:	inc    ebx
  42174e:	aad    0x94
  421750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421751:	lods   al,BYTE PTR ds:[esi]
  421752:	mov    WORD PTR [eax+0x3d],cs
  421755:	in     al,0x2c
  421757:	lods   al,BYTE PTR ds:[esi]
  421758:	lahf   
  421759:	push   ebp
  42175a:	scas   eax,DWORD PTR es:[edi]
  42175b:	sti    
  42175c:	or     DWORD PTR [esi-0x4d],ecx
  42175f:	imul   edi,ecx,0xffffffc6
  421762:	mov    ch,0xc3
  421764:	inc    esi
  421765:	rcr    BYTE PTR [esi+0x77],cl
  421768:	in     al,dx
  421769:	mov    ds:0x2a43dad5,eax
  42176e:	add    al,0x77
  421770:	mov    fs,WORD PTR [ebx+0x7a]
  421773:	jl     0x4217d2
  421775:	call   0x88b5:0x751c1cc2
  42177c:	or     bh,al
  42177e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42177f:	pop    ss
  421780:	aad    0xb3
  421782:	pop    ds
  421783:	test   eax,0x57df991d
  421788:	bound  edi,QWORD PTR [eax]
  42178a:	cmp    DWORD PTR [edi+0x14],ebp
  42178d:	cmp    BYTE PTR [ecx-0x23],dh
  421790:	repz mov ds:0xe898685c,al
  421796:	repz and BYTE PTR [edx-0x1dd1f619],bh
  42179d:	push   edi
  42179e:	add    DWORD PTR [ecx],ebp
  4217a0:	jmp    0x2a54f3d0
  4217a5:	lahf   
  4217a6:	pop    edi
  4217a7:	leave  
  4217a8:	push   edi
  4217a9:	hlt    
  4217aa:	lea    eax,[eax+0x10]
  4217ad:	stos   DWORD PTR es:[edi],eax
  4217ae:	out    dx,eax
  4217af:	adc    al,0x4d
  4217b1:	into   
  4217b2:	jg     0x4217db
  4217b4:	arpl   WORD PTR [ebp+0x4f],bp
  4217b7:	or     ebp,edi
  4217b9:	int3   
  4217ba:	and    ch,dl
  4217bc:	adc    esi,DWORD PTR [ebx+eax*1-0x4a63683]
  4217c3:	sub    esp,DWORD PTR [eax-0x4f30a5ec]
  4217c9:	inc    ebx
  4217ca:	(bad)  
  4217cb:	mov    ecx,0xd75932a2
  4217d0:	setbe  BYTE PTR [eax-0x60]
  4217d4:	pop    ecx
  4217d5:	jnp    0x42182d
  4217d7:	hlt    
  4217d8:	mov    ebx,0xdb97f784
  4217dd:	sbb    al,0xf5
  4217df:	ds stc 
  4217e1:	aas    
  4217e2:	and    DWORD PTR [ecx+edx*4+0x6ef7f371],esi
  4217e9:	push   ecx
  4217ea:	std    
  4217eb:	inc    ebx
  4217ec:	enter  0x3ec7,0x96
  4217f0:	inc    eax
  4217f1:	xchg   esp,eax
  4217f2:	bsr    edx,DWORD PTR [eax+eax*8-0x7b3a27d8]
  4217fa:	cld    
  4217fb:	mov    esi,0x3520f837
  421800:	pop    ds
  421801:	lds    esp,FWORD PTR [esi-0x27065d10]
  421807:	sub    eax,DWORD PTR [ebp+0x45]
  42180a:	stc    
  42180b:	ficom  DWORD PTR [eax+esi*1+0x20]
  42180f:	int    0xf9
  421811:	mov    bh,0x2
  421813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421814:	bound  ebx,QWORD PTR [edx]
  421816:	mov    edi,0xc9c8839e
  42181b:	cmp    esi,ebx
  42181d:	pushf  
  42181e:	out    dx,eax
  42181f:	stc    
  421820:	jo     0x42182d
  421822:	xchg   esp,eax
  421823:	mov    eax,DWORD PTR [eax]
  421825:	fs popa 
  421827:	mov    ebx,0xfaa66544
  42182c:	inc    edx
  42182d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42182e:	es adc eax,0x7fd60e68
  421834:	neg    ch
  421836:	jmp    0x4217ef
  421838:	popa   
  421839:	test   eax,0xd019f5b1
  42183e:	clc    
  42183f:	std    
  421840:	xchg   ebx,eax
  421841:	add    DWORD PTR [eax],eax
  421843:	call   0x41421849
  421848:	mov    bh,0x69
  42184a:	push   ebx
  42184b:	inc    esp
  42184c:	faddp  st(2),st
  42184e:	pop    es
  42184f:	leave  
  421850:	push   0x61945104
  421855:	lds    esp,FWORD PTR [eax+0x19]
  421858:	mov    edi,?
  42185a:	add    bl,dl
  42185c:	adc    eax,0xaf351d72
  421861:	and    ebx,DWORD PTR [ecx]
  421863:	(bad)  
  421864:	push   0x4d
  421866:	call   0xbeb0:0xb6fa0ef6
  42186d:	mov    ecx,0x3fe14925
  421872:	adc    eax,0x39bd40eb
  421877:	dec    edi
  421878:	mov    ecx,cs
  42187a:	outs   dx,BYTE PTR ds:[esi]
  42187b:	sub    edi,DWORD PTR [ebx]
  42187d:	jl     0x421876
  42187f:	fisub  WORD PTR ds:0x4fb85a6a
  421885:	dec    esp
  421886:	loop   0x421808
  421888:	pop    ebx
  421889:	sbb    bl,0x87
  42188c:	push   eax
  42188d:	cmp    eax,0x201fa600
  421892:	aaa    
  421893:	iret   
  421894:	sbb    cl,al
  421896:	imul   ecx,DWORD PTR [esi+0x596b4d64],0x80214ca2
  4218a0:	jo     0x421901
  4218a2:	iret   
  4218a3:	in     eax,dx
  4218a4:	sub    dl,BYTE PTR [edx]
  4218a6:	nop
  4218a7:	call   0xb38e9de8
  4218ac:	adc    ah,cl
  4218ae:	cmp    ah,bh
  4218b0:	or     eax,0x1bd4184c
  4218b5:	(bad)  
  4218b7:	jne    0x4218d7
  4218b9:	xlat   BYTE PTR ds:[ebx]
  4218ba:	je     0x42184d
  4218bc:	pop    ds
  4218bd:	xchg   edx,eax
  4218be:	jp     0x421863
  4218c0:	xchg   esp,eax
  4218c1:	sbb    al,0xcb
  4218c3:	outs   dx,BYTE PTR ds:[esi]
  4218c4:	mov    ch,0xc7
  4218c6:	jl     0x421887
  4218c8:	(bad)  
  4218c9:	fsub   DWORD PTR [ebx]
  4218cb:	stc    
  4218cc:	jns    0x421917
  4218ce:	loopne 0x421869
  4218d0:	cmp    al,0xb1
  4218d2:	jae    0x42193d
  4218d4:	adc    eax,0x9a0e79fc
  4218d9:	imul   edx,DWORD PTR [ecx],0x2f181cc0
  4218df:	dec    edx
  4218e0:	(bad)
  4218e3:	pop    es
  4218e4:	lea    eax,[ecx-0x75]
  4218e7:	shr    DWORD PTR [edx+0x23b15378],1
  4218ed:	push   esi
  4218ee:	sub    eax,0x9afa28cf
  4218f3:	in     eax,dx
  4218f4:	out    0xfe,eax
  4218f6:	cmc    
  4218f7:	jge    0x4218be
  4218f9:	adc    DWORD PTR [ecx+0x5a],ecx
  4218fc:	outs   dx,BYTE PTR gs:[si]
  4218ff:	popa   
  421900:	rcr    ecx,0x99
  421903:	xchg   BYTE PTR [ecx-0x6898462],ah
  421909:	aas    
  42190a:	cmp    esi,DWORD PTR [ebx+0x21455e03]
  421910:	and    BYTE PTR [ebp+0x1cb56e0],bh
  421916:	inc    BYTE PTR [esi+0x3e]
  421919:	retf   0x3a86
  42191c:	sub    DWORD PTR [edx+0x6029d353],ebp
  421922:	hlt    
  421923:	jo     0x4218cd
  421925:	scas   al,BYTE PTR es:[edi]
  421926:	push   es
  421927:	jns    0x421916
  421929:	inc    esi
  42192a:	mov    ah,0xef
  42192c:	add    bl,BYTE PTR [eax+0x73d257a9]
  421932:	test   al,0xa1
  421934:	mov    ds:0x35ed15a7,al
  421939:	dec    edi
  42193a:	sbb    BYTE PTR [esi],cl
  42193c:	mov    esi,0xd94c01a3
  421941:	sti    
  421942:	(bad)  
  421943:	or     esi,DWORD PTR [eax]
  421945:	inc    esp
  421946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421947:	jmp    0x421946
  421949:	jb     0x4218e0
  42194b:	add    DWORD PTR [edi-0x60],ebp
  42194e:	mov    edi,ebp
  421950:	sub    dh,al
  421952:	loop   0x4218e8
  421954:	mov    esi,edx
  421956:	push   edx
  421957:	aaa    
  421958:	xor    al,0xa0
  42195a:	repz mov cl,0x80
  42195d:	dec    edx
  42195e:	test   dl,bh
  421960:	out    dx,al
  421961:	adc    eax,0xc002d257
  421966:	jns    0x4218ea
  421968:	mov    ah,0x84
  42196a:	(bad)  
  42196b:	cli    
  42196c:	je     0x42196c
  42196e:	add    edi,DWORD PTR [ebx+ecx*8]
  421971:	aas    
  421972:	mov    bl,0xbf
  421974:	leave  
  421975:	cmc    
  421976:	ret    0xc998
  421979:	push   es
  42197a:	adc    al,0x51
  42197c:	mov    ds:0x8a8e467f,eax
  421981:	or     bl,dl
  421983:	popa   
  421984:	pushf  
  421985:	jge    0x421a05
  421987:	sbb    eax,0x7916abf4
  42198c:	and    BYTE PTR [ebx-0x6963d292],dh
  421992:	dec    eax
  421993:	pop    esi
  421994:	adc    ebp,DWORD PTR [ebx+0x4b]
  421997:	xchg   esp,eax
  421998:	or     bh,0x77
  42199b:	popf   
  42199c:	test   DWORD PTR [esp+esi*1-0x79],edi
  4219a0:	sti    
  4219a1:	push   ebx
  4219a2:	mov    DWORD PTR [edx+ebp*8+0x35239add],esi
  4219a9:	mov    dl,0xf3
  4219ab:	adc    al,0x16
  4219ad:	xchg   ecx,eax
  4219ae:	xchg   ebp,eax
  4219af:	jp     0x421a11
  4219b1:	repnz sub edi,eax
  4219b4:	pusha  
  4219b5:	push   0x347df39c
  4219ba:	inc    esi
  4219bb:	rcr    BYTE PTR [ebp+edx*4-0x7e],0xbd
  4219c0:	jae    0x4219c7
  4219c2:	jb     0x421994
  4219c4:	xchg   BYTE PTR ds:[ecx-0x1eda0bc0],cl
  4219cb:	or     esi,edi
  4219cd:	xchg   esp,eax
  4219ce:	stos   DWORD PTR es:[edi],eax
  4219cf:	push   cs
  4219d0:	push   es
  4219d1:	push   ebp
  4219d2:	jmp    0x77e2e928
  4219d7:	aaa    
  4219d8:	jno    0x421a05
  4219da:	sbb    DWORD PTR [ebp-0x3f9f4458],0xbaf2c2e4
  4219e4:	fldenv [edx]
  4219e6:	fstp   QWORD PTR [eax-0xf0bcf2f]
  4219ec:	lods   eax,DWORD PTR ds:[esi]
  4219ed:	rcl    DWORD PTR [eax+edi*4],1
  4219f0:	pop    esp
  4219f1:	rdtsc  
  4219f3:	lods   eax,DWORD PTR ds:[esi]
  4219f4:	fidiv  DWORD PTR ds:0xc35a8992
  4219fa:	mov    bl,0x7c
  4219fc:	pop    ecx
  4219fd:	rol    DWORD PTR [ebx],cl
  4219ff:	imul   ebx,DWORD PTR [ebx+0x5c],0xffffffc8
  421a03:	mov    ah,0x22
  421a05:	and    eax,0x8362a6cd
  421a0a:	inc    eax
  421a0b:	cmp    eax,0xea1adbba
  421a10:	inc    eax
  421a11:	mov    ch,0x10
  421a13:	mov    BYTE PTR [esi],dl
  421a15:	icebp  
  421a16:	out    0x2a,eax
  421a18:	or     bh,BYTE PTR [edi-0x10291e46]
  421a1e:	adc    esi,DWORD PTR [edx+0x79bb4a32]
  421a24:	test   eax,0x4233b73c
  421a29:	and    DWORD PTR [edi],eax
  421a2b:	dec    edi
  421a2c:	mov    eax,0x8cfc3e16
  421a31:	mov    ah,0xd3
  421a33:	hlt    
  421a34:	sti    
  421a35:	jmp    FWORD PTR [edi+0x2ff28bb1]
  421a3b:	xchg   ebp,eax
  421a3c:	sar    DWORD PTR [ebx+ebx*2+0x195e5],cl
  421a43:	call   0x13421a49
  421a48:	es retf 0x24a0
  421a4c:	lock sbb ebp,DWORD PTR [edx*1+0x6af85efd]
  421a54:	je     0x421aa4
  421a56:	mov    al,0x3b
  421a58:	cli    
  421a59:	(bad)  [ebx-0x326db4ad]
  421a5f:	xchg   BYTE PTR [esp+eax*8],cl
  421a62:	repz sub al,BYTE PTR [edi]
  421a65:	jmp    0x421a42
  421a67:	dec    edi
  421a68:	jge    0x421ae2
  421a6a:	gs push ebx
  421a6c:	ja     0x421a34
  421a6e:	idiv   DWORD PTR [esi+0x5]
  421a71:	xchg   ebp,eax
  421a72:	mov    ss,ecx
  421a74:	jbe    0x421abb
  421a76:	(bad)  
  421a77:	cld    
  421a78:	sar    BYTE PTR [ebx],1
  421a7a:	inc    edx
  421a7b:	hlt    
  421a7c:	cmp    esi,DWORD PTR [eax+0x5a]
  421a7f:	mov    ecx,0x147aaa0a
  421a84:	scas   al,BYTE PTR es:[edi]
  421a85:	or     DWORD PTR [esi+0x42d5703e],0x5f3b0dcb
  421a8f:	xor    edx,DWORD PTR [ecx]
  421a91:	inc    edi
  421a92:	add    dl,ch
  421a94:	cmc    
  421a95:	cs mov esp,0x754f5200
  421a9b:	test   al,0x48
  421a9d:	push   edx
  421a9e:	pop    edi
  421a9f:	dec    ebx
  421aa0:	and    ebx,DWORD PTR [ebp+0x19]
  421aa3:	mov    DWORD PTR [edi+0x33d2bd6],ebp
  421aa9:	aam    0xf2
  421aab:	fist   WORD PTR ds:0x5cad0c6c
  421ab1:	push   edi
  421ab2:	inc    ebp
  421ab3:	and    BYTE PTR [ecx],bl
  421ab5:	sbb    edx,DWORD PTR [ebp+0x13]
  421ab8:	(bad)  
  421aba:	jns    0x421a96
  421abc:	adc    eax,0x8e245ba5
  421ac1:	retf   0x63fc
  421ac4:	sahf   
  421ac5:	add    DWORD PTR [ecx],0xffffff85
  421ac8:	sbb    eax,0x6ceca59a
  421acd:	inc    edx
  421ace:	test   DWORD PTR [edx],ecx
  421ad0:	jmp    0x4835dd5c
  421ad5:	fwait
  421ad6:	jg     0x421a8a
  421ad8:	adc    bh,al
  421ada:	aas    
  421adb:	retf   
  421adc:	add    ebx,DWORD PTR [edx+0x12]
  421adf:	addr16 mov ebp,0x95700202
  421ae5:	cmp    bl,dh
  421ae7:	mov    eax,DWORD PTR [ebx+0xd5461d8]
  421aed:	mov    ds:0x5b9945cc,eax
  421af2:	loope  0x421b0f
  421af4:	dec    esp
  421af5:	adc    bl,BYTE PTR [ecx+0x45670d24]
  421afb:	jne    0x421abf
  421afd:	mov    edi,0xeb198d4b
  421b02:	out    dx,eax
  421b03:	hlt    
  421b04:	scas   eax,DWORD PTR es:[edi]
  421b05:	mov    bh,0x3c
  421b07:	out    0xa1,al
  421b09:	mov    ebx,0x4517dfcf
  421b0e:	or     DWORD PTR [ebx-0x5e],edi
  421b11:	mov    ds:0x4a6f2db3,eax
  421b16:	rcl    BYTE PTR [edx],1
  421b18:	adc    edi,esi
  421b1a:	retf   
  421b1b:	fsubr  QWORD PTR [edi]
  421b1d:	cmp    ebx,DWORD PTR ds:0xd344e5d1
  421b23:	dec    ebx
  421b24:	retf   0x96f0
  421b27:	test   eax,ecx
  421b29:	ret    0x9858
  421b2c:	data16 clc 
  421b2e:	popa   
  421b2f:	dec    ebx
  421b30:	out    0x1,eax
  421b32:	cli    
  421b33:	nop
  421b34:	xlat   BYTE PTR ds:[ebx]
  421b35:	outs   dx,BYTE PTR ds:[esi]
  421b36:	scas   eax,DWORD PTR es:[edi]
  421b37:	push   0x106b75d8
  421b3c:	xor    DWORD PTR [esp+ebx*1-0x1c29a721],0xc6b44248
  421b47:	hlt    
  421b48:	push   ebp
  421b49:	mov    gs,WORD PTR [ecx+ebp*1]
  421b4c:	xchg   edi,eax
  421b4d:	xchg   edx,eax
  421b4e:	int    0x12
  421b50:	xor    ecx,edi
  421b52:	(bad)  
  421b54:	imul   edx,ecx,0xffffff81
  421b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b58:	popa   
  421b59:	sub    cl,bh
  421b5b:	inc    edx
  421b5c:	push   ds
  421b5d:	and    esi,DWORD PTR [ebx-0x444106aa]
  421b63:	test   eax,0x75bb7a65
  421b68:	cmc    
  421b69:	push   es
  421b6a:	jmp    0x7cee:0xcc52180c
  421b71:	lds    edx,FWORD PTR [ebp+eax*4-0x761fb7e1]
  421b78:	sti    
  421b79:	gs nop
  421b7b:	mov    al,ds:0xdfc0f9b2
  421b80:	or     DWORD PTR [ebx-0x2c7ded34],esi
  421b86:	ror    ebx,0x79
  421b89:	cmp    DWORD PTR [ebp+0x71],edx
  421b8c:	pop    edx
  421b8d:	sbb    al,0xca
  421b8f:	push   ebx
  421b90:	xor    eax,DWORD PTR [edi+0x1b]
  421b93:	ins    DWORD PTR es:[edi],dx
  421b94:	pop    ebx
  421b95:	data16 (bad) 
  421b97:	pop    ss
  421b98:	lods   al,BYTE PTR ds:[esi]
  421b99:	les    ebx,FWORD PTR [ebx+ecx*8-0x4cffa1b]
  421ba0:	cmp    eax,0x565db969
  421ba5:	mov    esi,0xe708d6f5
  421baa:	push   0x5e
  421bac:	(bad)  
  421bad:	pop    eax
  421bae:	ret    
  421baf:	pushf  
  421bb0:	mov    al,0xa9
  421bb2:	pop    ss
  421bb3:	mov    ds:0x4abf0cdb,eax
  421bb8:	push   0xa2c18a55
  421bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bbe:	mov    ch,cl
  421bc0:	out    0x4e,al
  421bc2:	call   0xdade4fdc
  421bc7:	call   FWORD PTR gs:[ebp-0x4a]
  421bcb:	loope  0x421b5e
  421bcd:	out    0xbf,eax
  421bcf:	gs inc ecx
  421bd1:	out    dx,eax
  421bd2:	std    
  421bd3:	jb     0x421c0f
  421bd5:	push   ss
  421bd6:	gs jno 0x421baa
  421bd9:	pop    esi
  421bda:	std    
  421bdb:	mov    bh,0x93
  421bdd:	lods   al,BYTE PTR ds:[esi]
  421bde:	out    dx,al
  421bdf:	xchg   esp,eax
  421be0:	dec    ecx
  421be1:	mov    esi,DWORD PTR [esp+edx*1]
  421be4:	aam    0x78
  421be6:	add    eax,0xa0b7e0ae
  421beb:	aam    0x18
  421bed:	aad    0x1a
  421bef:	shr    esi,0xdf
  421bf2:	(bad)  
  421bf3:	cmc    
  421bf4:	ds loopne 0x421b90
  421bf7:	mov    ds:0x5881883b,eax
  421bfc:	outs   dx,BYTE PTR ds:[esi]
  421bfd:	clc    
  421bfe:	jmp    0xdd91:0xdcf072b7
  421c05:	cmp    DWORD PTR ds:0xdcfffadd,ebx
  421c0b:	cmp    eax,0x8ebe74a
  421c10:	(bad)  
  421c11:	jecxz  0x421c7a
  421c13:	mov    cl,0x48
  421c15:	ins    BYTE PTR es:[edi],dx
  421c16:	fistp  QWORD PTR [ecx+0x5a]
  421c19:	add    DWORD PTR [ebx-0x3210a6fc],ecx
  421c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c20:	add    eax,DWORD PTR [edx+0x4571168f]
  421c26:	xchg   ebp,eax
  421c27:	or     esp,DWORD PTR [edi]
  421c29:	or     DWORD PTR [edi+0x61],ebp
  421c2c:	sub    eax,0xa8cb5c96
  421c31:	xchg   ecx,eax
  421c32:	sbb    eax,0xfecf3df3
  421c37:	push   esp
  421c38:	jne    0x421ca1
  421c3a:	loop   0x421c14
  421c3c:	scas   al,BYTE PTR es:[edi]
  421c3d:	cmp    DWORD PTR [ebp+ecx*8-0x69],ecx
  421c41:	add    DWORD PTR [eax],eax
  421c43:	call   0x53421c49
  421c48:	xor    dl,BYTE PTR [eax+0x68b93b0a]
  421c4e:	(bad)  
  421c4f:	sbb    edx,DWORD PTR [ecx-0x44]
  421c52:	arpl   WORD PTR [esi],sp
  421c54:	pop    es
  421c55:	jns    0x421bec
  421c57:	(bad)  
  421c58:	ror    BYTE PTR [ebx-0x20],1
  421c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c5c:	ret    
  421c5d:	sub    edx,esp
  421c5f:	and    al,0xa0
  421c61:	loop   0x421c0f
  421c63:	jo     0x421cdf
  421c65:	clc    
  421c66:	sub    ebp,DWORD PTR [esi]
  421c68:	fbld   TBYTE PTR [edx-0x6a]
  421c6b:	adc    dh,cl
  421c6d:	sub    BYTE PTR fs:[eax+0x2df0eed7],dl
  421c74:	cmp    bh,BYTE PTR [edx+eiz*4-0x3c]
  421c78:	xor    bl,BYTE PTR [edi+0x16673583]
  421c7e:	mov    ch,0x66
  421c80:	sar    ch,cl
  421c82:	mov    ah,0xd2
  421c84:	imul   ecx,DWORD PTR [ebx],0x48bb9141
  421c8a:	add    eax,DWORD PTR ds:0x521d865e
  421c90:	lahf   
  421c91:	ds pop eax
  421c93:	imul   edx,DWORD PTR [ebx],0x9e5bd7ce
  421c99:	or     DWORD PTR [edx+0xe336876],edi
  421c9f:	popf   
  421ca0:	int3   
  421ca1:	dec    eax
  421ca2:	pop    esi
  421ca3:	mov    esi,0xacbce791
  421ca8:	mov    ds:0x48297966,al
  421cad:	mov    eax,ds:0x11235a3e
  421cb2:	and    al,0x5b
  421cb4:	pop    es
  421cb5:	sub    eax,DWORD PTR [edx+ebp*1]
  421cb8:	jg     0x421c93
  421cba:	and    eax,0xd997479f
  421cbf:	(bad)  
  421cc0:	repnz loop 0x421cd5
  421cc3:	xlat   BYTE PTR ds:[ebx]
  421cc4:	pop    ebp
  421cc5:	daa    
  421cc6:	and    eax,0x56d60db4
  421ccb:	je     0x421c79
  421ccd:	stos   BYTE PTR es:[edi],al
  421cce:	xor    ebx,DWORD PTR [ebp-0x2]
  421cd1:	sbb    bh,ch
  421cd3:	sti    
  421cd4:	jp     0x421c6d
  421cd6:	leave  
  421cd7:	dec    esi
  421cd8:	pop    ss
  421cd9:	js     0x421d12
  421cdb:	push   ecx
  421cdc:	jns    0x421cb9
  421cde:	and    eax,edi
  421ce0:	rol    DWORD PTR [edx+edx*1+0x34],1
  421ce4:	mov    ah,0x4
  421ce6:	int3   
  421ce7:	add    esp,DWORD PTR [ecx-0x67]
  421cea:	pop    edx
  421ceb:	ror    esp,cl
  421ced:	jle    0x421cdf
  421cef:	shl    BYTE PTR [ebp+0x58],0x32
  421cf3:	ins    BYTE PTR es:[edi],dx
  421cf4:	cvtpi2ps xmm5,mm0
  421cf7:	loope  0x421cbb
  421cf9:	hlt    
  421cfa:	loope  0x421cae
  421cfc:	retf   
  421cfd:	mov    esp,0x4334c571
  421d02:	fcmovnbe st,st(1)
  421d04:	pop    ecx
  421d05:	mov    ds:0x5eadd640,al
  421d0a:	mov    al,ds:0x8ef96c6
  421d0f:	cmc    
  421d10:	mov    WORD PTR [ecx+0x19],?
  421d13:	push   edx
  421d14:	cli    
  421d15:	(bad)  
  421d16:	shl    DWORD PTR [esi+0x3a7c792c],1
  421d1c:	lahf   
  421d1d:	fxch   st(5)
  421d1f:	retf   0xe679
  421d22:	mov    dl,0x2d
  421d24:	or     BYTE PTR [edi-0x5ac8fa73],0xb2
  421d2b:	inc    eax
  421d2c:	sbb    ah,BYTE PTR [ecx]
  421d2e:	leave  
  421d2f:	push   esi
  421d30:	pusha  
  421d31:	ret    0x3520
  421d34:	xchg   eax,ebx
  421d36:	imul   edx,DWORD PTR [eax-0x17],0x33cf490c
  421d3d:	add    DWORD PTR [esi-0xc],ebp
  421d40:	sbb    eax,0xa8851a1d
  421d45:	div    ebp
  421d47:	cdq    
  421d48:	sub    ecx,DWORD PTR [edx-0x5beae43b]
  421d4e:	int3   
  421d4f:	lods   eax,DWORD PTR ds:[esi]
  421d50:	pop    ds
  421d51:	add    BYTE PTR [ecx],dl
  421d53:	add    DWORD PTR [edx-0x62610f75],esi
  421d59:	ins    DWORD PTR es:[edi],dx
  421d5a:	out    dx,al
  421d5b:	xor    eax,0x78a56627
  421d60:	(bad)  
  421d62:	push   0x1bad7da6
  421d67:	stos   DWORD PTR es:[edi],eax
  421d68:	push   edx
  421d69:	shr    DWORD PTR [edx],cl
  421d6b:	cdq    
  421d6c:	outs   dx,BYTE PTR ds:[esi]
  421d6d:	mov    ebx,0x4450a7ca
  421d72:	jp     0x421de6
  421d74:	ds mov edx,0x7d7a217b
  421d7a:	arpl   WORD PTR [esi],di
  421d7c:	das    
  421d7d:	stos   DWORD PTR es:[edi],eax
  421d7e:	jmp    0x6af9:0xde4f0ea2
  421d85:	cmp    eax,0xd7d89389
  421d8a:	mov    esp,0xfb81b3cf
  421d8f:	out    dx,eax
  421d90:	mov    dl,0x10
  421d92:	int3   
  421d93:	dec    ebp
  421d94:	ret    
  421d95:	xchg   BYTE PTR [esi],ah
  421d97:	pop    ebx
  421d98:	call   0xa9302bdf
  421d9d:	sbb    eax,0x8e7cb2f3
  421da2:	cld    
  421da3:	retf   0xc68b
  421da6:	and    bh,dh
  421da8:	fwait
  421da9:	call   0xc872:0x8de67bee
  421db0:	bound  esi,QWORD PTR [ecx+eiz*2+0x1d]
  421db4:	mov    al,0x7c
  421db6:	ss hlt 
  421db8:	push   cs
  421db9:	in     al,dx
  421dba:	call   ebx
  421dbc:	mov    cl,0x55
  421dbe:	dec    esp
  421dbf:	and    DWORD PTR [ebx+0x6ef9823b],0x52
  421dc6:	and    DWORD PTR [edi+0x14],0x691375c0
  421dcd:	cli    
  421dce:	sbb    al,0x70
  421dd0:	rol    BYTE PTR [edi+edx*2],cl
  421dd3:	rcl    DWORD PTR [edi],cl
  421dd5:	(bad)  
  421dd6:	mov    esi,0xfe45b157
  421ddb:	jb     0x421e3f
  421ddd:	and    dl,BYTE PTR [esi+0x29c176ac]
  421de3:	and    al,0x1a
  421de5:	icebp  
  421de6:	rcl    BYTE PTR [esi],cl
  421de8:	mov    ah,0x42
  421dea:	or     DWORD PTR [esi],ecx
  421dec:	ds pop es
  421dee:	dec    ecx
  421def:	cld    
  421df0:	dec    edi
  421df1:	ins    BYTE PTR es:[edi],dx
  421df2:	shl    BYTE PTR [esp+edi*2+0x997722a],cl
  421df9:	ror    DWORD PTR [esi],0xb6
  421dfc:	xchg   esi,eax
  421dfd:	add    al,0x55
  421dff:	lahf   
  421e00:	mov    esi,0xace9ca4e
  421e05:	test   DWORD PTR [bx+di-0x9],0x966de439
  421e0d:	inc    esp
  421e0e:	stos   DWORD PTR es:[edi],eax
  421e0f:	lods   al,BYTE PTR ds:[esi]
  421e10:	(bad)  
  421e11:	bound  ebp,QWORD PTR [ebx-0x6b]
  421e14:	adc    edx,DWORD PTR [eax]
  421e16:	mov    bh,0x69
  421e18:	or     BYTE PTR [edi],al
  421e1a:	(bad)  
  421e1b:	adc    DWORD PTR [esi],esi
  421e1d:	push   esi
  421e1e:	lahf   
  421e1f:	xchg   BYTE PTR [eax+edx*1+0x77],cl
  421e23:	xor    al,0xd3
  421e25:	mov    bh,0xf8
  421e27:	int3   
  421e28:	jecxz  0x421e02
  421e2a:	adc    al,0x74
  421e2c:	(bad)  
  421e2d:	retf   
  421e2e:	shl    BYTE PTR [edi+ecx*2+0x53ff531c],cl
  421e35:	(bad)  
  421e36:	out    dx,eax
  421e37:	and    BYTE PTR [ecx-0x69],al
  421e3a:	into   
  421e3b:	and    al,0x8b
  421e3d:	mov    ebp,DWORD PTR [eax-0x4b]
  421e40:	cdq    
  421e41:	add    DWORD PTR [eax],eax
  421e43:	call   0x44421e49
  421e48:	push   cs
  421e49:	mov    ebp,0x5e329fe6
  421e4e:	cmp    al,0x9e
  421e50:	push   ebx
  421e51:	test   al,0x38
  421e53:	(bad)  
  421e54:	loop   0x421e06
  421e56:	and    esp,esi
  421e58:	add    BYTE PTR [ecx-0x5],al
  421e5b:	inc    ebx
  421e5c:	push   edx
  421e5d:	sar    DWORD PTR [esi+0x5c],1
  421e60:	hlt    
  421e61:	data16 jg 0x421ed4
  421e64:	cs fcmove st,st(0)
  421e67:	imul   eax,DWORD PTR [ebp+0x2],0x730ca1e5
  421e6e:	stos   BYTE PTR es:[edi],al
  421e6f:	sub    al,0xe5
  421e71:	call   ecx
  421e73:	mov    esi,0x30ecbb77
  421e78:	xor    esi,eax
  421e7a:	jo     0x421e65
  421e7c:	popa   
  421e7d:	and    DWORD PTR ds:0x6cb6afea,0xad12cd00
  421e87:	or     ch,cl
  421e89:	dec    eax
  421e8a:	xor    edi,DWORD PTR [esi]
  421e8c:	add    bh,BYTE PTR [edx]
  421e8e:	cmc    
  421e8f:	addr16 xor al,0xbb
  421e92:	(bad)  
  421e93:	mov    cl,0x3
  421e95:	test   BYTE PTR [ecx-0x46f8803],0x72
  421e9c:	nop
  421e9d:	dec    ah
  421e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ea0:	jl     0x421ec8
  421ea2:	rcr    ebx,cl
  421ea4:	and    DWORD PTR [ecx+esi*2+0x525795d8],esp
  421eab:	and    al,0xaa
  421ead:	ss add al,0x86
  421eb0:	sti    
  421eb1:	fs (bad) 
  421eb3:	mov    edi,0x850fc500
  421eb8:	pop    es
  421eb9:	lods   al,BYTE PTR ds:[esi]
  421eba:	xor    ecx,esp
  421ebc:	mov    ah,0xa1
  421ebe:	popf   
  421ebf:	dec    edx
  421ec0:	xchg   BYTE PTR ds:[edi+0x2c5f4da],ah
  421ec7:	out    dx,eax
  421ec8:	dec    eax
  421ec9:	push   esp
  421eca:	iret   
  421ecb:	in     al,dx
  421ecc:	enter  0x2ca5,0xc2
  421ed0:	(bad)  
  421ed1:	js     0x421f4a
  421ed3:	inc    ecx
  421ed4:	xchg   ebp,eax
  421ed5:	pop    esi
  421ed6:	push   0x8a1676a1
  421edb:	aad    0xa3
  421edd:	push   eax
  421ede:	lods   al,BYTE PTR ds:[esi]
  421edf:	or     DWORD PTR [ebx],ebp
  421ee1:	stos   DWORD PTR es:[edi],eax
  421ee2:	push   ebx
  421ee3:	xchg   edx,eax
  421ee4:	fimul  WORD PTR [edx]
  421ee6:	sub    eax,0x8a8e0f69
  421eeb:	gs xchg ebp,eax
  421eed:	mov    edi,0x93d08314
  421ef2:	retf   
  421ef3:	outs   dx,BYTE PTR es:[esi]
  421ef5:	sbb    ebx,ecx
  421ef7:	dec    esp
  421ef8:	jae    0x421e81
  421efa:	xor    al,0x25
  421efc:	neg    edx
  421efe:	enter  0xc16c,0x41
  421f02:	jmp    0x92a5:0x3ddac968
  421f09:	(bad)  
  421f0a:	lods   al,BYTE PTR ds:[esi]
  421f0b:	xor    BYTE PTR [eax-0x6c2ac22e],bl
  421f11:	std    
  421f12:	mov    esp,edi
  421f14:	repz sub esi,ebp
  421f17:	in     eax,0x49
  421f19:	out    0x5b,al
  421f1b:	dec    ebx
  421f1c:	fwait
  421f1d:	cld    
  421f1e:	xchg   edi,eax
  421f1f:	das    
  421f20:	mov    ch,0x62
  421f22:	or     al,BYTE PTR [ecx-0x2b]
  421f25:	cmp    eax,DWORD PTR [edi-0x14]
  421f28:	add    dl,BYTE PTR [eax]
  421f2a:	add    BYTE PTR [ebp+0x3ec2a558],bl
  421f30:	(bad)
  421f34:	in     eax,0x6
  421f36:	repz jecxz 0x421f8b
  421f39:	mov    esi,0xa2daa069
  421f3e:	xchg   ebp,eax
  421f3f:	loop   0x421ee3
  421f41:	das    
  421f42:	pop    ds
  421f43:	pop    ss
  421f44:	mov    ecx,0xccf72890
  421f49:	or     DWORD PTR [ebp-0x7a1330d8],edx
  421f4f:	push   esp
  421f50:	sbb    eax,0x19e82f32
  421f55:	fsub   QWORD PTR [eax]
  421f57:	std    
  421f58:	add    al,0x7f
  421f5a:	push   ss
  421f5b:	call   0x90e3a14d
  421f60:	pop    ebx
  421f61:	mov    esi,DWORD PTR [ecx]
  421f63:	test   al,0xc1
  421f65:	pop    es
  421f66:	inc    esp
  421f67:	sub    cl,BYTE PTR [edi+ebx*2]
  421f6a:	add    al,0xf3
  421f6c:	adc    al,BYTE PTR [edx-0x61]
  421f6f:	outs   dx,BYTE PTR ds:[esi]
  421f70:	xlat   BYTE PTR ds:[ebx]
  421f71:	and    eax,0x15ca3c4
  421f76:	int3   
  421f77:	and    al,0x57
  421f79:	mov    dl,0x76
  421f7b:	add    BYTE PTR ds:0x4476a4f5,bh
  421f81:	dec    edi
  421f82:	mov    dl,0x2a
  421f84:	enter  0x996d,0xcf
  421f88:	mov    ch,0x6e
  421f8a:	mov    cl,0xdc
  421f8c:	push   ebx
  421f8d:	fsub   QWORD PTR [eax+0x548526db]
  421f93:	(bad)  
  421f94:	pop    ebp
  421f95:	xor    dl,BYTE PTR [edx-0x21]
  421f98:	sbb    DWORD PTR [edi],0x5b
  421f9b:	loope  0x421f2a
  421f9d:	in     eax,dx
  421f9e:	hlt    
  421f9f:	and    ecx,DWORD PTR [eax]
  421fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fa2:	and    esp,0x6bdb372a
  421fa8:	mov    al,ds:0x93a4408e
  421fad:	daa    
  421fae:	mov    BYTE PTR [eax],al
  421fb0:	mov    edi,0xfda201b5
  421fb5:	fisubr DWORD PTR [esi+0x55]
  421fb8:	pop    es
  421fb9:	js     0x421f76
  421fbb:	daa    
  421fbc:	jl     0x421f71
  421fbe:	(bad)  
  421fc0:	int    0xe8
  421fc2:	cmp    ebx,DWORD PTR [ebx+0x5a]
  421fc5:	mov    ds:0xfea44aac,eax
  421fca:	add    bl,BYTE PTR [ebx]
  421fcc:	sub    bh,ah
  421fce:	popf   
  421fcf:	or     al,dl
  421fd1:	outs   dx,DWORD PTR ds:[esi]
  421fd2:	push   esp
  421fd3:	push   0xca17608b
  421fd8:	cmc    
  421fd9:	push   ebp
  421fda:	(bad)  
  421fdb:	or     esp,DWORD PTR [ebp+0x73]
  421fde:	xchg   BYTE PTR [ecx],ah
  421fe0:	push   ds
  421fe1:	pop    es
  421fe2:	ret    
  421fe3:	pop    eax
  421fe4:	fdivr  st,st(6)
  421fe6:	mov    edi,0x930bf2c6
  421feb:	loopne 0x42203f
  421fed:	dec    esp
  421fee:	push   ss
  421fef:	mov    BYTE PTR [ebp+ebp*2-0x7b],ah
  421ff3:	out    0x71,eax
  421ff5:	in     al,dx
  421ff6:	xchg   edx,eax
  421ff7:	ficom  DWORD PTR [edx+0x13]
  421ffa:	ja     0x422022
  421ffc:	loope  0x42202f
  421ffe:	in     al,dx
  421fff:	jae    0x42207f
  422001:	push   0xe6a8c48e
  422006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422007:	into   
  422008:	aaa    
  422009:	pushf  
  42200a:	pop    ss
  42200b:	sbb    DWORD PTR [edx+0x4b],esi
  42200e:	stos   DWORD PTR es:[edi],eax
  42200f:	cmp    DWORD PTR [edi],eax
  422011:	sub    ebp,DWORD PTR [ebp+0x1df180ca]
  422017:	or     ecx,DWORD PTR [eax]
  422019:	sete   BYTE PTR [edx]
  42201c:	mov    al,0xb7
  42201e:	pop    ebp
  42201f:	jns    0x421fd1
  422021:	sbb    BYTE PTR [esp+ecx*4+0x2d0e4f78],ah
  422028:	aas    
  422029:	daa    
  42202a:	fdivr  QWORD PTR [ebp-0x3bdda27a]
  422030:	leave  
  422031:	or     BYTE PTR [eax-0x12131ef3],ah
  422037:	xor    al,0x42
  422039:	(bad)  
  42203a:	xor    BYTE PTR [edi],cl
  42203c:	(bad)  [esi]
  42203e:	stos   BYTE PTR es:[edi],al
  42203f:	popf   
  422040:	fwait
  422041:	add    DWORD PTR [eax],eax
  422043:	call   0x64422049
  422048:	and    al,0x7a
  42204a:	add    al,0x9a
  42204c:	sub    eax,0x27e0865
  422051:	loopne 0x42202e
  422053:	adc    edx,esi
  422055:	xchg   edx,eax
  422056:	pop    ebx
  422057:	mov    edi,0x9c951263
  42205c:	or     BYTE PTR [eax+edx*1+0x5d],bl
  422060:	shr    BYTE PTR [ebx],1
  422062:	pusha  
  422063:	cmp    al,BYTE PTR [ecx+0x13fbe439]
  422069:	pop    edx
  42206a:	sub    eax,0xd0a2cfb6
  42206f:	retf   
  422070:	(bad)  
  422071:	out    0xf5,al
  422073:	fisttp WORD PTR [esi-0x5ba0476a]
  422079:	dec    ebx
  42207a:	fsub   QWORD PTR [ecx+0x36]
  42207d:	add    esp,DWORD PTR [ecx-0x36]
  422080:	into   
  422081:	pushf  
  422082:	and    ch,BYTE PTR ds:0x8bc89ed8
  422088:	or     bh,BYTE PTR [esi]
  42208a:	inc    ebp
  42208b:	mov    dl,0x3f
  42208d:	cmp    al,0xd
  42208f:	sbb    eax,0xad6fd47d
  422094:	retf   0x27f7
  422097:	fiadd  DWORD PTR [ecx-0x43]
  42209a:	xlat   BYTE PTR ds:[ebx]
  42209b:	mov    DWORD PTR ds:0x467dfc71,esp
  4220a1:	loop   0x4220a6
  4220a3:	daa    
  4220a4:	xchg   DWORD PTR [edx-0x71],esp
  4220a7:	xchg   ebx,eax
  4220a8:	jp     0x422093
  4220aa:	maskmovq mm0,(bad)
  4220ab:	test   DWORD PTR [edx-0x75],0x7f02186a
  4220b2:	outs   dx,BYTE PTR ds:[esi]
  4220b3:	sbb    eax,0xeecb7574
  4220b8:	sub    BYTE PTR [ecx+0x10b65e23],dl
  4220be:	push   ebx
  4220bf:	dec    ebx
  4220c0:	(bad)  
  4220c1:	shl    DWORD PTR [ebp-0x2668f555],1
  4220c7:	jmp    FWORD PTR [edi+ebp*8]
  4220ca:	test   DWORD PTR [ecx],eax
  4220cc:	push   ss
  4220cd:	or     eax,0x5822790b
  4220d2:	mov    edx,edx
  4220d4:	cmp    BYTE PTR [edi],dl
  4220d6:	pop    edi
  4220d7:	xchg   ebp,eax
  4220d8:	or     cl,BYTE PTR [esp+ebx*4-0x6c22c0c8]
  4220df:	jge    0x4220bd
  4220e1:	and    al,0xfd
  4220e3:	and    al,0xd9
  4220e5:	xchg   ebp,eax
  4220e6:	mov    ebp,0xf987ebc1
  4220eb:	imul   esi,DWORD PTR [esi],0x3e52f083
  4220f1:	sbb    eax,0xeceb5cef
  4220f6:	jp     0x42215b
  4220f8:	push   0x2016d44b
  4220fd:	leave  
  4220fe:	shl    DWORD PTR [ebx],1
  422100:	rcr    BYTE PTR [ebx-0x68a19e55],1
  422106:	neg    DWORD PTR [esi+0xd52d69a]
  42210c:	xchg   esp,eax
  42210d:	jnp    0x422141
  42210f:	mov    DWORD PTR [edx+0x4c19536],esp
  422115:	xor    DWORD PTR [edi],edx
  422117:	cld    
  422118:	idiv   dh
  42211a:	push   ecx
  42211b:	stos   BYTE PTR es:[edi],al
  42211c:	out    dx,eax
  42211d:	dec    ebp
  42211e:	push   ebp
  42211f:	daa    
  422120:	jae    0x42213c
  422122:	mov    BYTE PTR [ecx],bl
  422124:	pop    esi
  422125:	push   0x43
  422127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422128:	sar    ebp,1
  42212a:	es jb  0x42211e
  42212d:	sub    edx,DWORD PTR [eax+edx*4]
  422130:	ret    
  422131:	cmp    BYTE PTR [eax],ah
  422133:	iret   
  422134:	pop    ds
  422135:	outs   dx,DWORD PTR ds:[esi]
  422136:	int3   
  422137:	pop    ebx
  422138:	rcl    BYTE PTR [ebp+edx*8-0x6f3fae64],0xa2
  422140:	retf   0xf44e
  422143:	(bad)
  422146:	lods   eax,DWORD PTR ds:[esi]
  422147:	out    0xf0,eax
  422149:	xor    al,0x73
  42214b:	xchg   edx,eax
  42214c:	mov    WORD PTR [ecx+0x31be47c9],fs
  422152:	jno    0x4221c7
  422154:	add    al,0x87
  422156:	aad    0xad
  422158:	jb     0x4221c0
  42215a:	test   BYTE PTR [esp+ebx*1],ch
  42215d:	out    0x46,eax
  42215f:	out    dx,al
  422160:	adc    eax,0x7954e95b
  422165:	sbb    ecx,esp
  422167:	xchg   esp,eax
  422168:	imul   edx,DWORD PTR [ecx+0xb],0xffffffd2
  42216c:	xor    al,dh
  42216e:	cmp    BYTE PTR [edx+0x527f304a],cl
  422174:	jnp    0x4221ac
  422176:	push   edi
  422177:	dec    edx
  422178:	sbb    eax,0x74b794d8
  42217d:	es sbb ebp,ecx
  422180:	dec    ebx
  422181:	adc    edi,0xffffffb7
  422184:	ret    
  422185:	sbb    al,dh
  422187:	push   cs
  422188:	in     eax,0x3b
  42218a:	sub    al,0xb6
  42218c:	je     0x422141
  42218e:	out    dx,eax
  42218f:	lock inc esi
  422191:	ret    
  422192:	jge    0x4221b3
  422194:	(bad)  
  422195:	cmp    al,0x87
  422197:	push   0xfffb01b
  42219c:	pusha  
  42219d:	jnp    0x4221f6
  42219f:	fdivr  DWORD PTR [ebp+0x2f683b62]
  4221a5:	add    esi,DWORD PTR [eax-0x57]
  4221a8:	jne    0x422167
  4221aa:	js     0x4221c4
  4221ac:	(bad)  
  4221ad:	xlat   BYTE PTR ds:[ebx]
  4221ae:	pop    edx
  4221af:	cli    
  4221b0:	(bad)  
  4221b1:	aad    0xe7
  4221b3:	or     ah,BYTE PTR [ebp-0x3d0b9b50]
  4221b9:	adc    BYTE PTR [ebx-0x35],ch
  4221bc:	and    ch,al
  4221be:	xor    BYTE PTR [ebp-0x34180f73],ch
  4221c4:	pop    edi
  4221c5:	scas   al,BYTE PTR es:[edi]
  4221c6:	inc    ebp
  4221c7:	call   0x5b439336
  4221cc:	cwde   
  4221cd:	mov    eax,0x9523f846
  4221d2:	sub    DWORD PTR cs:[ecx],ebx
  4221d5:	loop   0x422173
  4221d7:	int3   
  4221d8:	stos   BYTE PTR es:[edi],al
  4221d9:	popa   
  4221da:	ins    BYTE PTR es:[edi],dx
  4221db:	es adc al,0x5
  4221de:	or     edi,DWORD PTR [ebx-0x1d]
  4221e1:	cmp    eax,0x7b5338a0
  4221e6:	push   esi
  4221e7:	into   
  4221e8:	scas   eax,DWORD PTR es:[edi]
  4221e9:	scas   al,BYTE PTR es:[edi]
  4221ea:	es mov ah,0xe3
  4221ed:	stc    
  4221ee:	adc    al,BYTE PTR [ecx+0x20]
  4221f1:	mov    dl,0xbe
  4221f3:	je     0x422218
  4221f5:	scas   eax,DWORD PTR es:[edi]
  4221f6:	aas    
  4221f7:	xor    DWORD PTR [edx],edi
  4221f9:	mov    ebp,0x8e7a76a6
  4221fe:	aam    0x5d
  422200:	mov    esi,DWORD PTR [esi+0x74]
  422203:	or     dl,0x2b
  422206:	jns    0x422277
  422208:	mov    dl,0x73
  42220a:	(bad)  
  42220b:	adc    edx,ebp
  42220d:	pop    edi
  42220e:	or     al,0x22
  422210:	adc    DWORD PTR [esi],0x5e
  422213:	outs   dx,DWORD PTR ds:[esi]
  422214:	fnstsw WORD PTR [eax-0x67]
  422217:	ja     0x422250
  422219:	sbb    BYTE PTR ds:0x215aa9de,al
  42221f:	and    ch,0x6c
  422222:	xchg   BYTE PTR [edx-0x7e587457],bh
  422228:	addr16 out dx,eax
  42222a:	or     ebp,DWORD PTR [eax+ebp*8+0x77996b53]
  422231:	out    dx,eax
  422232:	out    dx,al
  422233:	out    dx,eax
  422234:	(bad)  
  422235:	cdq    
  422236:	ja     0x422240
  422238:	(bad)  
  422239:	daa    
  42223a:	loop   0x4221be
  42223c:	xchg   ebp,eax
  42223d:	jp     0x4221c0
  42223f:	test   DWORD PTR [ebp+0x1e80001],ebx
  422245:	add    BYTE PTR [eax],al
  422247:	inc    esp
  422248:	imul   edx,DWORD PTR [esi-0x7],0xd2343ed2
  42224f:	and    DWORD PTR [ebx-0x65],0x733f299
  422256:	sbb    cl,dh
  422258:	dec    esp
  422259:	adc    eax,0x51cfd3aa
  42225e:	outs   dx,DWORD PTR ds:[esi]
  42225f:	mov    ch,0xd7
  422261:	jecxz  0x422201
  422263:	pop    eax
  422264:	je     0x422277
  422266:	mov    ebx,0xae53d555
  42226b:	push   esp
  42226c:	push   edx
  42226d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42226e:	ret    0xd3a3
  422271:	xchg   DWORD PTR [edi-0x2d7b70a6],ecx
  422277:	add    al,0x17
  422279:	aad    0x3
  42227b:	mov    esp,0x8d6dee57
  422280:	mov    cl,0x31
  422282:	enter  0xc355,0xe8
  422286:	int3   
  422287:	lds    eax,FWORD PTR [ebp+0x33]
  42228a:	in     al,0xaa
  42228c:	scas   al,BYTE PTR es:[edi]
  42228d:	bound  sp,DWORD PTR [ebx]
  422290:	and    al,0x6c
  422292:	leave  
  422293:	loope  0x4222e8
  422295:	(bad)  
  422296:	imul   cl
  422298:	or     al,0xc
  42229a:	pusha  
  42229b:	sti    
  42229c:	dec    eax
  42229d:	add    esp,DWORD PTR [eax+0x3c]
  4222a0:	js     0x4222be
  4222a2:	lods   al,BYTE PTR ds:[esi]
  4222a3:	or     esp,esp
  4222a5:	and    eax,ecx
  4222a7:	test   DWORD PTR [eax+0x30bcbaa8],ecx
  4222ad:	adc    BYTE PTR [edi-0x41],bh
  4222b0:	das    
  4222b1:	ja     0x42228d
  4222b3:	cmp    cl,ch
  4222b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222b6:	add    BYTE PTR [ecx+0x11],0x1d
  4222ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222bb:	inc    edi
  4222bc:	mov    dl,0xd0
  4222be:	xchg   ecx,eax
  4222bf:	push   cs
  4222c0:	dec    DWORD PTR [esi+ebx*2]
  4222c3:	xchg   edi,eax
  4222c4:	stc    
  4222c5:	and    edx,DWORD PTR [edi-0x5d]
  4222c8:	xchg   DWORD PTR [edx-0x2b],ebx
  4222cb:	mov    eax,0xe3f5c7f3
  4222d0:	push   edx
  4222d1:	pop    edi
  4222d2:	test   edi,0xffc47f
  4222d8:	push   ebx
  4222d9:	ins    DWORD PTR es:[edi],dx
  4222da:	push   es
  4222db:	lods   al,BYTE PTR ds:[esi]
  4222dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222dd:	fmul   DWORD PTR [ebx+0x5ba8f5b5]
  4222e3:	mov    bh,0x7d
  4222e5:	jle    0x422337
  4222e7:	xchg   BYTE PTR [eax+0x58],bh
  4222ea:	test   BYTE PTR [eax],dh
  4222ec:	push   ebx
  4222ed:	or     ecx,ebp
  4222ef:	pushf  
  4222f0:	in     al,dx
  4222f1:	jne    0x422293
  4222f3:	stc    
  4222f4:	xor    DWORD PTR [esi],esp
  4222f6:	fs loope 0x422291
  4222f9:	xor    dl,BYTE PTR [edx]
  4222fb:	nop
  4222fc:	pop    eax
  4222fd:	stc    
  4222fe:	frstor [bx+di]
  422301:	cwde   
  422302:	fdiv   st,st(3)
  422304:	mov    DWORD PTR [esi],ecx
  422306:	mov    ebp,0xdddb9b2d
  42230b:	shr    DWORD PTR [esi+0xb],cl
  42230e:	push   cs
  42230f:	push   esi
  422310:	loopne 0x422307
  422312:	test   eax,0x7325ff38
  422317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422318:	inc    esp
  422319:	mov    al,ds:0x2766f78a
  42231e:	les    ebx,FWORD PTR [edx+0x3487576f]
  422324:	or     BYTE PTR [ebx-0x37],dl
  422327:	add    al,0x9d
  422329:	xor    eax,0x4bc2d781
  42232e:	retf   0xb869
  422331:	jg     0x4222e6
  422333:	inc    eax
  422334:	mov    ds:0x358e5f90,eax
  422339:	cmp    bl,bl
  42233b:	retf   0xa009
  42233e:	fiadd  WORD PTR [ecx]
  422340:	pop    ecx
  422341:	adc    DWORD PTR [edi+0x6e],esp
  422344:	shl    DWORD PTR [edi-0x75],0x55
  422348:	sbb    esp,DWORD PTR [ebx-0x2ae1fb1f]
  42234e:	mov    dl,0xa1
  422350:	jb     0x42232b
  422352:	loopne 0x4222d5
  422354:	sbb    DWORD PTR [esi+0x27be0dae],0xfffffff5
  42235b:	fptan  
  42235d:	xor    DWORD PTR ds:0xb212baa0,eax
  422363:	sbb    cl,bh
  422365:	or     DWORD PTR ds:0x5ef82c2f,ebp
  42236b:	idiv   DWORD PTR ds:0x2c8f109
  422371:	sub    DWORD PTR [ecx],esi
  422373:	cmovg  edx,DWORD PTR [eax]
  422376:	std    
  422377:	xchg   edi,eax
  422378:	push   edx
  422379:	aaa    
  42237a:	xor    BYTE PTR [eax],al
  42237c:	and    al,0x67
  42237e:	pop    esp
  42237f:	dec    edi
  422380:	mov    eax,ds:0x580e236d
  422385:	popa   
  422386:	mov    edx,0xfeb7457b
  42238b:	ret    0x1571
  42238e:	and    al,0x29
  422390:	fs fwait
  422392:	lea    ebp,[eax+0x7080e750]
  422398:	cmp    BYTE PTR [edi+0x26],al
  42239b:	mov    ds:0x1e2b0242,al
  4223a0:	pop    ds
  4223a1:	fld    QWORD PTR [edi+0x5465199a]
  4223a7:	xor    al,0x73
  4223a9:	rcl    DWORD PTR [edi+0x60],1
  4223ac:	sub    eax,0xb09dee6
  4223b1:	jae    0x422361
  4223b3:	out    0x81,eax
  4223b5:	sbb    esi,DWORD PTR [ecx*2+0x7546a55]
  4223bc:	and    al,0x2d
  4223be:	test   BYTE PTR [ecx],bh
  4223c0:	into   
  4223c1:	sub    al,BYTE PTR [ebx+esi*1-0x3d]
  4223c5:	push   ebx
  4223c6:	jo     0x4223b6
  4223c8:	jg     0x4223dd
  4223ca:	cld    
  4223cb:	sahf   
  4223cc:	or     eax,0xb99abb26
  4223d1:	call   0x68dc:0x44556a1b
  4223d8:	sar    DWORD PTR [ecx+0x6c],1
  4223db:	sub    al,0x7c
  4223dd:	push   edi
  4223de:	push   esp
  4223df:	bound  ecx,QWORD PTR [ebx+0x59]
  4223e2:	sub    bl,ch
  4223e4:	jne    0x4223dd
  4223e6:	outs   dx,DWORD PTR ds:[esi]
  4223e7:	test   BYTE PTR [esi+0x1b],0x3d
  4223eb:	sbb    al,BYTE PTR [esi+0x5a]
  4223ee:	push   ss
  4223ef:	fadd   QWORD PTR [esi+ecx*1]
  4223f2:	les    ebx,FWORD PTR [esi-0x3580225e]
  4223f8:	int    0xb1
  4223fa:	hlt    
  4223fb:	mov    ah,0xab
  4223fe:	cli    
  4223ff:	inc    esp
  422400:	adc    al,BYTE PTR [edx+ecx*2]
  422403:	jmp    0x42245c
  422405:	ds hlt 
  422407:	jmp    FWORD PTR [ebx+0x4e]
  42240a:	jge    0x422472
  42240c:	popa   
  42240d:	xchg   esp,eax
  42240e:	add    BYTE PTR [ebx+edx*1-0x6c],0xbb
  422413:	call   0x80ce:0x95010908
  42241a:	cwde   
  42241b:	dec    eax
  42241c:	popa   
  42241d:	icebp  
  42241e:	mov    ds:0x6934ede5,al
  422423:	mov    al,0xbe
  422425:	pop    edi
  422426:	push   eax
  422427:	add    dh,BYTE PTR [edi-0xb]
  42242a:	fimul  WORD PTR [eax+0x59]
  42242d:	or     DWORD PTR [ecx],esp
  42242f:	xchg   edx,eax
  422430:	inc    esp
  422431:	mov    al,BYTE PTR [edi+0x559fcfde]
  422437:	or     eax,0xf0d229a6
  42243c:	push   ss
  42243d:	mov    ebx,0x19f6dea
  422442:	add    al,ch
  422444:	add    DWORD PTR [eax],eax
  422446:	add    dh,ch
  422448:	cmp    al,0x37
  42244a:	leave  
  42244b:	add    dh,0x54
  42244e:	sub    eax,0xa66a48e4
  422453:	(bad)  
  422455:	aad    0x5f
  422457:	mov    edi,0xca5271e7
  42245c:	js     0xabc5fdf0
  422462:	xchg   ebp,eax
  422463:	mov    cl,0xe9
  422465:	cmp    eax,0x6aa5d89c
  42246a:	inc    eax
  42246b:	cmp    eax,0x29942bb2
  422470:	test   eax,0xfb97ed16
  422475:	jmp    FWORD PTR [ebp+0x70de6b62]
  42247b:	inc    edx
  42247c:	rol    ah,1
  42247e:	adc    BYTE PTR ds:0xb1f60999,ah
  422484:	sbb    dl,BYTE PTR [edx-0x613c821]
  42248a:	sbb    dh,BYTE PTR [ebp-0x48d66fa8]
  422490:	mov    esp,0x80791a08
  422495:	retf   0x5501
  422498:	jne    0x4224c2
  42249a:	icebp  
  42249b:	pop    esp
  42249c:	or     dh,al
  42249e:	in     eax,0x92
  4224a0:	mov    dh,0x1b
  4224a2:	xchg   DWORD PTR [ebx-0x66],edi
  4224a5:	and    eax,0x940c39e9
  4224aa:	or     eax,0x9b7398ae
  4224af:	mov    esp,0xc54bad55
  4224b4:	xor    DWORD PTR [ebx-0x36],edx
  4224b7:	inc    ebp
  4224b8:	out    dx,al
  4224b9:	mov    al,ds:0x1df1c4bd
  4224be:	aam    0x2d
  4224c0:	stc    
  4224c1:	xchg   esi,eax
  4224c2:	push   ss
  4224c3:	pop    ds
  4224c4:	xchg   ebx,eax
  4224c5:	and    eax,0x485b3809
  4224ca:	call   0xdcb4:0xe5b1dd26
  4224d1:	into   
  4224d2:	clc    
  4224d3:	mov    esi,0x2d7ad580
  4224d8:	pop    eax
  4224d9:	int3   
  4224da:	aam    0x82
  4224dc:	sub    DWORD PTR [edx+0x44a83fbc],ebx
  4224e2:	xrelease mov BYTE PTR [eax],dl
  4224e5:	sbb    bh,BYTE PTR [eax-0x75ded78]
  4224eb:	mov    al,0xef
  4224ed:	xor    al,BYTE PTR [edi]
  4224ef:	add    al,ch
  4224f1:	or     esi,DWORD PTR [edx+0x10]
  4224f4:	sbb    BYTE PTR [esi+0x56c4559d],cl
  4224fa:	jmp    0x4224ca
  4224fc:	jecxz  0x42248a
  4224fe:	pop    edi
  4224ff:	test   al,0x1e
  422501:	pop    edi
  422502:	and    DWORD PTR [edi],0x8c9d1e51
  422508:	adc    dh,BYTE PTR [eax-0x38e50059]
  42250e:	imul   ebp,DWORD PTR [esi-0x66e7eae5],0xf0f63801
  422518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422519:	push   es
  42251a:	inc    eax
  42251b:	xchg   esi,eax
  42251c:	or     eax,0xd816f495
  422521:	fisubr DWORD PTR [eax]
  422523:	cmp    BYTE PTR [esi],bl
  422525:	ret    0xb9b
  422528:	ret    
  422529:	dec    ecx
  42252a:	mov    cl,0x17
  42252c:	rol    BYTE PTR [ebx-0x2486e61a],0x2
  422533:	adc    al,0x87
  422535:	xchg   DWORD PTR [ebx+edi*1-0x4e7b54c0],esi
  42253c:	outs   dx,DWORD PTR ds:[esi]
  42253d:	pop    edx
  42253e:	repz fnstcw WORD PTR [edx]
  422541:	and    eax,0x25fb70b0
  422546:	(bad)  
  422547:	xchg   esi,eax
  422548:	dec    edx
  422549:	push   ebx
  42254a:	fnsave [ebp+0x77]
  42254d:	mov    bh,BYTE PTR [esp+ebp*1-0x51d3dd32]
  422554:	mov    fs,WORD PTR [ebp+0x2740499d]
  42255a:	mov    edi,0x4d5ec279
  42255f:	sbb    ebp,ebp
  422561:	xchg   edi,eax
  422562:	push   edi
  422563:	(bad)  
  422564:	or     BYTE PTR [eax-0x7e],al
  422567:	push   esp
  422568:	xchg   ebx,eax
  422569:	(bad)  
  42256a:	fistp  QWORD PTR [ecx-0x43]
  42256d:	sbb    BYTE PTR ss:[edx+ecx*2],ch
  422571:	pop    ebx
  422572:	pop    ss
  422573:	xchg   DWORD PTR [esi-0x1a],esi
  422576:	int3   
  422577:	jmp    0x5c8862c9
  42257c:	or     al,0xfe
  42257e:	jae    0x42251f
  422580:	(bad)  
  422581:	ds push 0xd965b02f
  422587:	out    0x1f,eax
  422589:	pop    esi
  42258a:	add    eax,0x4c536302
  42258f:	and    eax,0xc18ba1d3
  422594:	xor    bh,BYTE PTR [ebx+0x68dcfefb]
  42259a:	xlat   BYTE PTR ds:[ebx]
  42259b:	mov    ss,edi
  42259d:	fidiv  WORD PTR [ecx+0x7c]
  4225a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225a1:	dec    ebp
  4225a2:	and    esp,DWORD PTR [edi]
  4225a4:	cmc    
  4225a5:	imul   ebp,DWORD PTR [esp+esi*8],0x31
  4225a9:	rol    BYTE PTR [esi+0x3c8cf649],1
  4225af:	mov    esi,0x8a94c379
  4225b4:	push   eax
  4225b5:	shr    BYTE PTR [ebx+0x67],1
  4225b8:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225ba:	xor    ebp,DWORD PTR [esi+0x46d3ad79]
  4225c0:	scas   eax,DWORD PTR es:[edi]
  4225c1:	adc    DWORD PTR [eax+0x3d],eax
  4225c4:	das    
  4225c5:	pusha  
  4225c6:	push   cs
  4225c7:	aas    
  4225c8:	test   al,0x19
  4225ca:	and    eax,0x24825831
  4225cf:	cmp    DWORD PTR [esp+eax*4],eax
  4225d2:	lahf   
  4225d3:	test   ebx,edx
  4225d5:	xchg   DWORD PTR [esi],eax
  4225d7:	loope  0x422629
  4225d9:	mov    ?,WORD PTR [ecx-0x3bb165f7]
  4225df:	es pop es
  4225e1:	and    al,BYTE PTR [eax-0x5e]
  4225e4:	imul   edi,DWORD PTR [edi+0x3f],0xffffff93
  4225e8:	jae    0x422652
  4225ea:	sbb    eax,0x1ae32a1b
  4225ef:	pop    ecx
  4225f0:	push   ebp
  4225f1:	xchg   edi,eax
  4225f2:	pusha  
  4225f3:	jg     0x4225fc
  4225f5:	fidivr DWORD PTR [esi]
  4225f7:	fwait
  4225f8:	pusha  
  4225f9:	xchg   BYTE PTR [ecx+0x40],cl
  4225fc:	inc    ebp
  4225fd:	(bad)  
  4225fe:	ret    0xbb54
  422601:	adc    esi,DWORD PTR [ebx-0x4e]
  422604:	jmp    0x5282:0xe7991cf4
  42260b:	data16 rcr bh,0xb1
  42260f:	and    eax,0xc1f0d87f
  422614:	enter  0x7afc,0x1b
  422618:	sbb    al,0xa3
  42261a:	push   esp
  42261b:	cld    
  42261c:	stos   DWORD PTR es:[edi],eax
  42261d:	or     BYTE PTR [ebx+edx*4],dh
  422620:	pop    ebx
  422621:	je     0x4225d1
  422623:	xchg   DWORD PTR [eax],ecx
  422625:	retf   
  422626:	jmp    0x6ab2b04e
  42262b:	(bad)  
  42262c:	mov    ebp,0x569aa4bb
  422631:	dec    edi
  422632:	icebp  
  422633:	iret   
  422634:	stc    
  422635:	mov    esi,0x6f42b97f
  42263a:	loopne 0x4226a2
  42263c:	aaa    
  42263d:	retf   0x55f4
  422640:	mov    eax,ds:0x1e80001
  422645:	add    BYTE PTR [eax],al
  422647:	(bad)  
  422648:	ins    DWORD PTR es:[edi],dx
  422649:	mov    esp,0x9c26f8a3
  42264e:	pop    es
  42264f:	inc    ebx
  422650:	sbb    DWORD PTR [ebx+0xe9130de],ebx
  422656:	jmp    0xff05:0x9dfec48e
  42265d:	lea    ecx,ds:[edi-0x2d281854]
  422664:	jmp    0x4225fd
  422666:	push   ds
  422667:	lds    edi,FWORD PTR [esi+0x61]
  42266a:	adc    ecx,ebx
  42266c:	mov    BYTE PTR [esp+0x53b3634c],al
  422673:	cs dec edi
  422675:	and    eax,0xd022159e
  42267a:	hlt    
  42267b:	push   edx
  42267c:	div    DWORD PTR [edi+0x38]
  42267f:	clc    
  422680:	sbb    eax,0xe55d6810
  422685:	jnp    0x422643
  422687:	outs   dx,BYTE PTR ds:[esi]
  422688:	inc    ecx
  422689:	cmp    cl,cl
  42268b:	aam    0x43
  42268d:	adc    al,0xa
  42268f:	sub    BYTE PTR [esi+0x5f89619c],dh
  422695:	push   0x10
  422697:	mov    ds:0x30e231e1,eax
  42269c:	iret   
  42269d:	mov    dh,0x36
  42269f:	xor    BYTE PTR [esi],0x9f
  4226a2:	xchg   ebx,esp
  4226a4:	mov    WORD PTR [esi-0x1a],fs
  4226a7:	inc    ebp
  4226a8:	ins    DWORD PTR es:[edi],dx
  4226a9:	adc    ebp,esp
  4226ab:	xor    esp,DWORD PTR [ebp-0x1c]
  4226ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226af:	mov    cl,0xfa
  4226b1:	imul   DWORD PTR [esi+edx*2]
  4226b4:	ja     0x4226c9
  4226b6:	fs mov ebx,0x6de025e9
  4226bc:	jmp    0x4bc2:0xa31fda40
  4226c3:	jp     0x42268a
  4226c5:	dec    ecx
  4226c6:	out    0x4d,al
  4226c8:	pop    esp
  4226c9:	test   DWORD PTR [edx+esi*4+0x63d09eb3],edx
  4226d0:	dec    ecx
  4226d1:	and    al,0x2a
  4226d3:	fdivp  st(6),st
  4226d5:	and    ebx,DWORD PTR [eax]
  4226d7:	sub    esi,edx
  4226d9:	jbe    0x4226e9
  4226db:	fldenv [edi]
  4226dd:	jle    0x4226ef
  4226df:	call   0xee2f4c0d
  4226e4:	sbb    eax,0x9dad06c9
  4226e9:	loopne 0x422760
  4226eb:	inc    esi
  4226ec:	sub    eax,0xbe4e2fd
  4226f1:	icebp  
  4226f2:	cmp    BYTE PTR [ecx-0x36],dh
  4226f5:	lock dec edi
  4226f7:	sub    bl,BYTE PTR [eax]
  4226f9:	jmp    0xb6c50438
  4226fe:	retf   
  4226ff:	iret   
  422700:	dec    DWORD PTR [edx+0x54597fd8]
  422706:	pop    ebp
  422707:	mov    esp,0x25da8084
  42270c:	add    al,0x60
  42270e:	sti    
  42270f:	scas   eax,DWORD PTR es:[edi]
  422710:	jl     0x4226d3
  422712:	add    ch,BYTE PTR [eax-0x572dd318]
  422718:	fidivr DWORD PTR [ebx+ebp*8]
  42271b:	inc    esp
  42271c:	in     al,0xf1
  42271e:	dec    eax
  42271f:	ret    
  422720:	mov    dh,0xdb
  422722:	lods   al,BYTE PTR ds:[esi]
  422723:	xor    al,0x5c
  422725:	call   0x1bf12bd0
  42272a:	cmp    ebx,DWORD PTR [ebx]
  42272c:	(bad)  
  42272d:	sbb    ah,dl
  42272f:	jecxz  0x4227a2
  422731:	sub    bh,BYTE PTR [ecx+0x4ff601f9]
  422737:	int    0x5b
  422739:	cmp    eax,0xde6958e0
  42273e:	dec    BYTE PTR ds:0x1df861e5
  422744:	or     DWORD PTR ds:0xfc7e6f53,edx
  42274a:	pop    edi
  42274b:	aad    0x40
  42274d:	pop    esi
  42274e:	push   esp
  42274f:	out    dx,eax
  422750:	cld    
  422751:	outs   dx,DWORD PTR ds:[esi]
  422752:	cmp    BYTE PTR [edi+0x3f],cl
  422755:	retf   0x6a61
  422758:	std    
  422759:	sub    al,0xb9
  42275b:	xlat   BYTE PTR ds:[ebx]
  42275c:	jmp    FWORD PTR [ebp+0x46]
  42275f:	add    ebx,ebp
  422761:	sbb    DWORD PTR [ebp+0x4e],esp
  422764:	les    edx,FWORD PTR [ecx]
  422766:	push   0xffffffe8
  422768:	jns    0x4226eb
  42276a:	pop    ds
  42276b:	aad    0xe1
  42276d:	pop    edi
  42276e:	jbe    0x42273b
  422770:	rcl    bl,0x63
  422773:	pop    ebx
  422774:	pop    es
  422775:	or     al,BYTE PTR [esi+0x1d]
  422778:	push   eax
  422779:	push   ds
  42277a:	ds jl  0x4227e8
  42277d:	stos   BYTE PTR es:[edi],al
  42277e:	lods   al,BYTE PTR ds:[esi]
  42277f:	jp     0x42276b
  422781:	jb     0x422723
  422783:	(bad)  
  422784:	push   esp
  422785:	adc    dh,dh
  422787:	ins    BYTE PTR es:[edi],dx
  422788:	xchg   DWORD PTR [esi+0x6412c147],eax
  42278e:	pop    esi
  42278f:	sub    bl,BYTE PTR [eax-0x44989cc8]
  422795:	or     al,0x3a
  422797:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422798:	js     0x422725
  42279a:	dec    edx
  42279b:	dec    eax
  42279c:	sbb    eax,0x8a319206
  4227a1:	jg     0x422769
  4227a3:	xor    bh,BYTE PTR [ebp-0x2770de8]
  4227a9:	jne    0x42275d
  4227ab:	jecxz  0x4227f1
  4227ad:	int3   
  4227ae:	jge    0x4227f6
  4227b0:	add    esi,DWORD PTR [esi+0x2a]
  4227b3:	mov    cs,WORD PTR [ebp-0x1b714963]
  4227b9:	leave  
  4227ba:	loopne 0x422807
  4227bc:	inc    ebx
  4227bd:	mov    ebp,0xb255c524
  4227c2:	je     0x42278b
  4227c4:	or     DWORD PTR [ebx+0x3f],esi
  4227c7:	push   ss
  4227c8:	mov    ds:0x9b27d5e,eax
  4227cd:	scas   eax,DWORD PTR es:[edi]
  4227ce:	dec    eax
  4227cf:	fnstsw WORD PTR [edx-0x16]
  4227d2:	icebp  
  4227d3:	hlt    
  4227d4:	loop   0x4227c1
  4227d6:	cmp    DWORD PTR [esi-0x4012d31b],ebp
  4227dc:	in     eax,0x77
  4227de:	test   al,0x1b
  4227e0:	cmp    BYTE PTR [eax-0x53],bl
  4227e3:	xlat   BYTE PTR ds:[ebx]
  4227e4:	inc    ebp
  4227e5:	or     BYTE PTR [edx],0x87
  4227e8:	add    ch,BYTE PTR [ebp+0x19c0766b]
  4227ee:	sbb    DWORD PTR [edi+edx*2],ebp
  4227f1:	sbb    BYTE PTR [edi-0x3e000830],0x1e
  4227f8:	dec    esp
  4227f9:	cwde   
  4227fa:	mov    dl,0x60
  4227fc:	adc    al,0x1f
  4227fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227ff:	adc    BYTE PTR [eax+edi*1+0x3e],bh
  422803:	mov    ds:0xfab3690c,eax
  422808:	pop    esi
  422809:	sbb    ebp,esi
  42280b:	push   0x64
  42280d:	or     al,0x2c
  42280f:	and    ah,BYTE PTR [eax]
  422811:	dec    edi
  422812:	cwde   
  422813:	push   0x937383fa
  422818:	mov    ah,0xf4
  42281a:	dec    edi
  42281b:	addr16 push ebx
  42281d:	dec    edi
  42281e:	retf   
  42281f:	xor    al,0xa1
  422821:	mov    edx,0x8c538e69
  422826:	fist   WORD PTR [eax+0x1f]
  422829:	(bad)  
  42282a:	and    DWORD PTR [ecx],ebx
  42282c:	push   eax
  42282d:	scas   eax,DWORD PTR es:[edi]
  42282e:	jne    0x42282c
  422830:	xlat   BYTE PTR ds:[ebx]
  422831:	dec    esp
  422832:	call   0xd83f23a6
  422837:	loop   0x422880
  422839:	les    esi,FWORD PTR [eax+0x6b]
  42283c:	ja     0x42280c
  42283e:	(bad)  
  422840:	mov    ds:0x1e80001,eax
  422845:	add    BYTE PTR [eax],al
  422847:	inc    ebp
  422848:	jnp    0x422891
  42284a:	ret    0xcde0
  42284d:	and    ebx,DWORD PTR [eax+0x46]
  422850:	imul   BYTE PTR [eax+0x3f]
  422853:	push   ebx
  422854:	cs mov edx,0xcddfebbb
  42285a:	pop    ds
  42285b:	xchg   esp,eax
  42285c:	leave  
  42285d:	data16 into 
  42285f:	mov    ebp,0xbe8c63a7
  422864:	adc    BYTE PTR [edx],ch
  422866:	mov    al,ds:0x8683ef6
  42286b:	jg     0x422849
  42286d:	ins    BYTE PTR es:[edi],dx
  42286e:	push   ds
  42286f:	jns    0x422814
  422871:	or     ebx,DWORD PTR [esi]
  422873:	and    eax,0xd33879f0
  422878:	jg     0x4227fd
  42287a:	jp     0x422858
  42287c:	push   ss
  42287d:	imul   DWORD PTR [eax-0x18]
  422880:	imul   eax,DWORD PTR [esi],0x2e
  422883:	clc    
  422884:	out    dx,al
  422885:	adc    bl,BYTE PTR [ecx+0x27]
  422888:	in     eax,0xd7
  42288a:	popa   
  42288b:	ja     0x422884
  42288d:	cmp    edx,DWORD PTR [edi-0x16db2968]
  422893:	scas   al,BYTE PTR es:[edi]
  422894:	ss int 0xab
  422897:	dec    esp
  422898:	outs   dx,DWORD PTR ds:[esi]
  422899:	add    cl,al
  42289b:	jnp    0x422908
  42289d:	sbb    cl,ah
  42289f:	mov    ebx,ebp
  4228a1:	stc    
  4228a2:	inc    edi
  4228a3:	aad    0xe8
  4228a5:	not    DWORD PTR [eax]
  4228a7:	das    
  4228a8:	push   esi
  4228a9:	dec    ebp
  4228aa:	gs int 0x95
  4228ad:	xchg   edx,eax
  4228ae:	sbb    edi,edx
  4228b0:	(bad)  
  4228b1:	int3   
  4228b2:	call   0x697aa8ac
  4228b7:	mov    dh,0xb0
  4228b9:	sub    edi,DWORD PTR [esi+0x64]
  4228bc:	inc    ebx
  4228bd:	sub    al,dl
  4228bf:	scas   eax,DWORD PTR es:[edi]
  4228c0:	mov    ecx,0xe69f4551
  4228c5:	xor    edi,ebx
  4228c7:	pop    dx
  4228c9:	sub    eax,0xe100bf66
  4228ce:	inc    ecx
  4228cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228d0:	loopne 0x42287c
  4228d2:	or     al,0xd8
  4228d4:	(bad)  
  4228d5:	stc    
  4228d6:	pop    ebx
  4228d7:	xor    DWORD PTR ds:0x9c60ec41,ecx
  4228dd:	xchg   edx,ebp
  4228df:	mov    WORD PTR [ebx+0x46dc2276],es
  4228e5:	push   eax
  4228e6:	and    DWORD PTR [ebp-0x3d8cba59],edi
  4228ec:	mov    edx,0x583311f5
  4228f1:	(bad)  
  4228f2:	bound  eax,QWORD PTR [eax+ecx*4+0x11f22625]
  4228f9:	shl    BYTE PTR [ebp-0x70],cl
  4228fc:	add    dl,bh
  4228fe:	push   0xffffffec
  422900:	push   0x5e
  422902:	nop
  422903:	retf   
  422904:	scas   eax,DWORD PTR es:[edi]
  422905:	mov    ds,WORD PTR [ecx]
  422907:	rol    DWORD PTR [edi+0x43],0x42
  42290b:	jl     0x422908
  42290d:	xchg   edi,eax
  42290e:	scas   eax,DWORD PTR es:[edi]
  42290f:	adc    al,dh
  422911:	mov    dl,0x6c
  422913:	(bad)  
  422914:	ins    DWORD PTR es:[edi],dx
  422915:	mov    bh,0xab
  422917:	jl     0x42297e
  422919:	mov    dl,0x5b
  42291b:	bnd jo 0x4228de
  42291e:	jg     0x4228cc
  422920:	fs sub al,0xa7
  422923:	xlat   BYTE PTR ds:[ebx]
  422924:	enter  0x5d6a,0x2e
  422928:	bound  ebp,QWORD PTR [edx]
  42292a:	sub    BYTE PTR ds:0x31be8d2c,bh
  422930:	xchg   esp,eax
  422931:	mov    dx,0x15bb
  422935:	push   0x956074e
  42293a:	or     al,0x8f
  42293c:	sahf   
  42293d:	(bad)  
  42293e:	push   esp
  42293f:	out    dx,al
  422940:	mov    cl,al
  422942:	fisttp WORD PTR [esi+0x13d16682]
  422948:	nop    DWORD PTR [edi]
  42294b:	scas   eax,DWORD PTR es:[edi]
  42294c:	je     0x422958
  42294e:	fs inc esi
  422950:	mov    bh,0x4f
  422952:	(bad)
  422956:	inc    ecx
  422957:	scas   eax,DWORD PTR es:[edi]
  422958:	nop
  422959:	aam    0x8b
  42295b:	mov    edi,0xe2e3a651
  422960:	pop    es
  422961:	cmp    eax,0xa13d39c
  422966:	fidiv  WORD PTR [ebx]
  422968:	sbb    cl,BYTE PTR [edi-0x57]
  42296b:	mov    eax,ds:0xeccb0ae6
  422971:	jecxz  0x4229c0
  422973:	std    
  422974:	xor    BYTE PTR [ebx],0xc7
  422977:	add    eax,0xaddd62cb
  42297c:	mov    bl,0xa3
  42297e:	sahf   
  42297f:	aaa    
  422980:	adc    edx,DWORD PTR [edi]
  422982:	xor    al,dl
  422984:	jns    0x422962
  422986:	sti    
  422987:	test   esp,ebx
  422989:	les    ecx,FWORD PTR [edx]
  42298b:	addr16 pop ebp
  42298d:	shl    DWORD PTR [edx+0x69],0xb8
  422991:	cmp    cl,BYTE PTR [edi]
  422993:	fs sahf 
  422995:	push   0x73174b3f
  42299a:	fdivr  QWORD PTR [ebx]
  42299c:	scas   al,BYTE PTR es:[edi]
  42299d:	ficom  DWORD PTR [ebp+0x35181b71]
  4229a3:	cwde   
  4229a4:	retf   
  4229a5:	mov    dl,0xf7
  4229a7:	ja     0x422973
  4229a9:	adc    ebp,0x96c9171b
  4229af:	xor    BYTE PTR [ecx-0x61],bh
  4229b2:	jmp    0x42295b
  4229b4:	lods   eax,DWORD PTR ds:[esi]
  4229b5:	mov    ds:0xebdfda43,eax
  4229ba:	nop
  4229bb:	fnsave [ebx+0x630f0fc5]
  4229c1:	out    dx,eax
  4229c2:	or     ecx,DWORD PTR [ebx+0x5c]
  4229c5:	mov    WORD PTR [esi],fs
  4229c7:	push   ss
  4229c8:	or     DWORD PTR [eax-0x4e072c15],edx
  4229ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229cf:	cmp    BYTE PTR [ecx],dh
  4229d1:	std    
  4229d2:	in     al,0xb9
  4229d4:	and    DWORD PTR [esi],ebp
  4229d6:	add    bl,BYTE PTR [eax-0x7c]
  4229d9:	(bad)  
  4229da:	aaa    
  4229db:	xchg   BYTE PTR [ebx-0xa],ah
  4229de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229df:	pop    esi
  4229e0:	stc    
  4229e1:	int    0x4b
  4229e3:	cwde   
  4229e4:	rcl    DWORD PTR [edx],1
  4229e6:	sbb    eax,0x8cbc5a60
  4229eb:	loopne 0x4229e2
  4229ed:	push   ss
  4229ee:	mov    ebx,0x94c7c1d4
  4229f3:	scas   eax,DWORD PTR es:[edi]
  4229f4:	mov    edx,0xf37433f7
  4229f9:	inc    ebx
  4229fa:	std    
  4229fb:	cwde   
  4229fc:	pandn  mm3,QWORD PTR [esi-0x7f]
  422a00:	lds    esp,FWORD PTR [edi]
  422a02:	out    0xf2,al
  422a04:	mov    ebx,0xc110a04b
  422a09:	cmp    dh,bh
  422a0b:	sub    edi,DWORD PTR [ebp+0x58a3b3cd]
  422a11:	xor    DWORD PTR [edx],eax
  422a13:	jecxz  0x422a2b
  422a15:	jmp    0x4ad4:0x7e7ffa31
  422a1c:	adc    bl,BYTE PTR [ecx]
  422a1e:	or     al,0xf2
  422a20:	icebp  
  422a21:	mov    ebx,0xeac4c7f7
  422a26:	mov    ebx,db7
  422a29:	imul   esi,DWORD PTR [esi+0x37],0x41f4f4c3
  422a30:	out    dx,eax
  422a31:	jnp    0x422a61
  422a33:	(bad)  
  422a34:	mov    esi,0x1864ef55
  422a39:	xlat   BYTE PTR ds:[ebx]
  422a3a:	paddd  mm5,mm2
  422a3d:	cs inc esi
  422a3f:	and    eax,0xe80001a5
  422a44:	add    DWORD PTR [eax],eax
  422a46:	add    BYTE PTR [edx+0x2a2800e3],ch
  422a4c:	mov    DWORD PTR ds:0xdd13e332,eax
  422a52:	mov    bl,0xae
  422a54:	add    eax,0xde6f2e8f
  422a59:	pop    esi
  422a5a:	sbb    eax,0x2d3ad0dd
  422a5f:	lods   al,BYTE PTR ds:[esi]
  422a60:	clc    
  422a61:	push   ecx
  422a62:	in     al,dx
  422a63:	inc    ebx
  422a64:	cmc    
  422a65:	dec    ebp
  422a66:	jns    0x422a05
  422a68:	and    esp,0x4bfe8554
  422a6e:	popf   
  422a6f:	and    bl,BYTE PTR [ebx]
  422a71:	cwde   
  422a72:	dec    edi
  422a73:	push   ds
  422a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a75:	cmp    dh,bl
  422a77:	jne    0x4229fd
  422a79:	clc    
  422a7a:	add    esi,eax
  422a7c:	cmp    ch,dl
  422a7e:	shr    BYTE PTR [ebp+edi*8-0x4f],cl
  422a82:	dec    esi
  422a83:	repz test DWORD PTR [ebp-0x77],ebx
  422a87:	outs   dx,DWORD PTR ds:[esi]
  422a88:	fnstsw WORD PTR [eax-0x566245dd]
  422a8e:	jno    0x422ad8
  422a90:	cli    
  422a91:	jns    0x422aaa
  422a93:	ins    DWORD PTR es:[edi],dx
  422a94:	pop    esi
  422a95:	imul   esp,esp,0x4
  422a98:	(bad)  
  422a99:	popf   
  422a9a:	push   es
  422a9b:	hlt    
  422a9c:	push   edi
  422a9d:	aaa    
  422a9e:	loope  0x422ad3
  422aa0:	lds    esp,FWORD PTR [esi+ecx*8]
  422aa3:	inc    edx
  422aa4:	out    0xdf,eax
  422aa6:	inc    edx
  422aa7:	int    0x1b
  422aa9:	cmc    
  422aaa:	and    BYTE PTR [ebp-0x3a],dl
  422aad:	mov    ecx,0x320f9529
  422ab2:	add    al,0x74
  422ab4:	xor    ecx,ebp
  422ab6:	or     eax,0x2c6b808c
  422abb:	pop    ecx
  422abc:	mov    edi,DWORD PTR ds:0xe76371be
  422ac2:	mov    edx,0x97aca582
  422ac7:	fisttp DWORD PTR [edi-0x26e4ddad]
  422acd:	imul   edx,DWORD PTR [esp+ecx*2],0xffffff85
  422ad1:	in     al,dx
  422ad2:	mov    al,ds:0x1a4014c1
  422ad7:	mov    ch,0xc
  422ad9:	fnstcw WORD PTR [ebx-0xc745824]
  422adf:	jbe    0x422a62
  422ae1:	adc    BYTE PTR [ebp+0x32e9e700],bh
  422ae7:	dec    esp
  422ae8:	fmul   QWORD PTR [ebx]
  422aea:	pop    es
  422aeb:	adc    eax,0x391f241d
  422af0:	and    al,0x6
  422af2:	imul   esi,DWORD PTR [edx],0xffffffb1
  422af5:	xchg   bh,bl
  422af7:	sub    cl,BYTE PTR [ecx+0x29c21138]
  422afd:	or     ebx,ecx
  422aff:	push   0x4b1577d7
  422b04:	cmp    edi,DWORD PTR [esi+0x2]
  422b07:	adc    DWORD PTR [eax-0xb0291b8],ebp
  422b0d:	push   es
  422b0e:	aad    0xa8
  422b10:	pop    ds
  422b11:	mov    al,0x88
  422b13:	shl    DWORD PTR [edx-0x4e8d6403],1
  422b19:	inc    edx
  422b1a:	mov    dl,0x1f
  422b1c:	lds    edx,FWORD PTR [edx-0x4c]
  422b1f:	push   cs
  422b20:	inc    ebp
  422b21:	scas   al,BYTE PTR es:[edi]
  422b22:	xor    al,0xad
  422b24:	ja     0x422b55
  422b26:	shl    ebx,cl
  422b28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b29:	jmp    0x422b20
  422b2b:	sub    dh,dl
  422b2d:	(bad)  
  422b2f:	cmovne esi,DWORD PTR ds:0x9847ac58
  422b36:	pop    ebp
  422b37:	or     ah,ch
  422b39:	xchg   ch,bh
  422b3b:	in     al,0xab
  422b3d:	push   esp
  422b3e:	mov    edi,?
  422b40:	out    dx,eax
  422b41:	jle    0x422b66
  422b43:	mov    cl,0x8a
  422b45:	jecxz  0x422b52
  422b47:	pop    eax
  422b48:	(bad)
  422b4b:	and    al,0xbe
  422b4d:	mul    edi
  422b4f:	inc    ecx
  422b50:	mov    esi,0xfae8cf81
  422b55:	lea    ecx,[edi+0x1d8ae9fa]
  422b5b:	not    DWORD PTR [ecx+esi*2+0x66]
  422b5f:	mov    WORD PTR ds:0xea4e1a5c,fs
  422b65:	loop   0x422b29
  422b67:	mov    WORD PTR [esi-0x6d],es
  422b6a:	stos   BYTE PTR es:[edi],al
  422b6b:	ret    0xc4ed
  422b6e:	add    BYTE PTR [ecx],dl
  422b70:	daa    
  422b71:	pop    ebp
  422b72:	(bad)  
  422b73:	cld    
  422b74:	retf   
  422b75:	push   es
  422b76:	lahf   
  422b77:	or     DWORD PTR [edx],ecx
  422b79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b7a:	push   0x7e
  422b7c:	push   ds
  422b7d:	push   ebp
  422b7e:	fstp   QWORD PTR [esi-0x29]
  422b81:	pop    eax
  422b82:	jg     0x422b88
  422b84:	scas   al,BYTE PTR es:[edi]
  422b85:	test   al,0x33
  422b87:	pop    ds
  422b88:	sbb    eax,ecx
  422b8a:	xor    ebp,0x67a2c3b7
  422b90:	les    edi,FWORD PTR gs:[edi+0x14]
  422b94:	mov    ebp,0x926ffe59
  422b99:	ins    DWORD PTR es:[edi],dx
  422b9a:	mov    ch,0x15
  422b9c:	jg     0x422bf9
  422b9e:	sub    ecx,DWORD PTR [ebx-0x21e9acf1]
  422ba4:	fcomip st,st(7)
  422ba6:	sbb    ch,BYTE PTR [edx-0x15fb2d41]
  422bac:	das    
  422bad:	push   ebx
  422bae:	retf   
  422baf:	rol    dh,cl
  422bb1:	leave  
  422bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bb3:	test   DWORD PTR [eax],ebx
  422bb5:	dec    ecx
  422bb6:	cmp    eax,DWORD PTR [esp-0x80]
  422bba:	mov    cl,0x74
  422bbc:	mov    esp,0x43ee608f
  422bc1:	fs sbb al,0x89
  422bc4:	push   edx
  422bc5:	sub    eax,0x5ea74b16
  422bca:	xchg   ecx,eax
  422bcb:	jmp    DWORD PTR [edx+0x4c]
  422bce:	sub    al,0x2e
  422bd0:	mov    esp,0xe0c00b2a
  422bd5:	lods   al,BYTE PTR ds:[esi]
  422bd6:	ja     0x422b68
  422bd8:	add    DWORD PTR [esp+edi*2-0x35],0x14
  422bdd:	cs call 0x2bbf:0xf2740467
  422be5:	xchg   BYTE PTR [esi+0x563c4e6d],bh
  422beb:	repz or DWORD PTR [esi],ecx
  422bee:	out    0x88,al
  422bf0:	ja     0x422bb1
  422bf2:	jo     0x422b8e
  422bf4:	sub    al,0x77
  422bf6:	add    eax,0x5dc9627f
  422bfb:	inc    esi
  422bfc:	jns    0x422c51
  422bfe:	js     0x422c38
  422c00:	sbb    cl,dh
  422c02:	iret   
  422c03:	neg    eax
  422c05:	inc    esi
  422c06:	icebp  
  422c07:	sbb    dl,BYTE PTR [ebx]
  422c09:	adc    ecx,DWORD PTR [eax]
  422c0b:	inc    ebx
  422c0c:	or     esi,DWORD PTR [ebp+0x56a6cb79]
  422c12:	lock clc 
  422c14:	jns    0x422c06
  422c16:	scas   eax,DWORD PTR es:[edi]
  422c17:	mov    ah,dh
  422c19:	iret   
  422c1a:	xlat   BYTE PTR ds:[ebx]
  422c1b:	enter  0xb018,0xa3
  422c1f:	mov    bl,0xd5
  422c21:	dec    esi
  422c22:	jmp    0x7b29:0xa1de8005
  422c29:	push   esp
  422c2a:	call   0x2cde2a42
  422c2f:	adc    eax,0x7f7d7f79
  422c34:	jg     0x422c4d
  422c36:	jns    0x422c85
  422c38:	dec    edx
  422c39:	lea    ecx,[ebx+0x6c]
  422c3c:	dec    edx
  422c3d:	pop    edi
  422c3e:	or     BYTE PTR ds:0xe80001a7,cl
  422c44:	add    DWORD PTR [eax],eax
  422c46:	add    BYTE PTR [ecx-0x1cff8ac7],dh
  422c4c:	fsub   DWORD PTR [edx-0xb07128c]
  422c52:	add    ebx,ebp
  422c54:	mov    BYTE PTR [ecx+ebp*4+0x69d81ca0],dl
  422c5b:	fs mov dh,0x26
  422c5e:	retf   0x4f6d
  422c61:	push   eax
  422c62:	enter  0x96f4,0x55
  422c66:	pop    esp
  422c67:	jnp    0x422ca8
  422c69:	pop    edx
  422c6a:	in     eax,0x52
  422c6c:	stc    
  422c6d:	push   ss
  422c6e:	sub    ecx,esp
  422c70:	pop    es
  422c71:	lea    ebx,[edx+0x7d62d119]
  422c77:	sub    dh,BYTE PTR [esi-0x77]
  422c7a:	xchg   DWORD PTR ds:0x237e72ac,esi
  422c80:	mov    edx,0x4de7d134
  422c85:	add    al,0x53
  422c87:	test   eax,0x78476216
  422c8c:	add    ebx,edi
  422c8e:	sub    ebx,DWORD PTR [ecx-0x50]
  422c91:	sub    dl,dh
  422c93:	jl     0x422c8b
  422c95:	jae    0x422cfd
  422c97:	add    eax,0xf6c71cdc
  422c9c:	jns    0x422d03
  422c9e:	into   
  422c9f:	inc    ecx
  422ca0:	pop    edx
  422ca1:	add    DWORD PTR ds:0x54e0403,ecx
  422ca7:	sti    
  422ca8:	sbb    bh,cl
  422caa:	out    0xaf,eax
  422cac:	adc    eax,DWORD PTR [ebx+0x10]
  422caf:	call   0x8893:0xd4d49ef8
  422cb6:	test   al,0xcc
  422cb8:	jb     0x422ceb
  422cba:	sub    BYTE PTR [eax-0x7e6fc202],0x69
  422cc1:	xchg   BYTE PTR [edx-0x45ac27a0],bl
  422cc7:	pop    ss
  422cc8:	lods   eax,DWORD PTR ds:[esi]
  422cc9:	clc    
  422cca:	pop    esi
  422ccb:	icebp  
  422ccc:	fdivrp st(1),st
  422cce:	imul   edx,DWORD PTR [eax],0x97ae2aaa
  422cd4:	xchg   BYTE PTR [ebx+0x19a2fe62],bh
  422cda:	jmp    0xd55924b0
  422cdf:	int    0x63
  422ce1:	push   ds
  422ce2:	add    BYTE PTR [ebp-0x64],0xf7
  422ce6:	cmp    esi,DWORD PTR [edi+0x5d]
  422ce9:	rcl    BYTE PTR [edx],1
  422ceb:	pop    ebp
  422cec:	fidiv  DWORD PTR [ebx-0x520b4fae]
  422cf2:	lds    ecx,FWORD PTR [ebp+ebp*2+0x26568132]
  422cf9:	out    0x98,al
  422cfb:	jne    0x422c9a
  422cfd:	mov    ch,0x9
  422cff:	loope  0x422d47
  422d01:	ds pushf 
  422d03:	ss jnp 0x422ccd
  422d06:	loop   0x422d28
  422d08:	retf   0xadcd
  422d0b:	cld    
  422d0c:	mov    bh,0xcf
  422d0e:	ffreep st(3)
  422d10:	jmp    0x5a1e:0xe47542ee
  422d17:	adc    eax,0xb2c19eea
  422d1c:	out    dx,eax
  422d1d:	jmp    FWORD PTR [ecx+0x31]
  422d20:	jb     0x422d00
  422d22:	cwde   
  422d23:	out    dx,al
  422d24:	or     DWORD PTR [edi],ecx
  422d26:	jle    0x422d1a
  422d28:	cmc    
  422d29:	call   FWORD PTR [edi+0x24]
  422d2c:	or     BYTE PTR [edx+0x36],bh
  422d2f:	mov    BYTE PTR [ebp+0x46],0x1b
  422d33:	dec    ecx
  422d34:	fcomp  DWORD PTR [ebx+eax*1]
  422d37:	out    0xdb,al
  422d39:	mov    cl,cl
  422d3b:	jae    0x422d54
  422d3d:	pop    esp
  422d3e:	imul   edx,DWORD PTR [ecx],0xffffffd1
  422d41:	add    dh,ch
  422d43:	(bad)  
  422d44:	(bad)  [esi+0x32]
  422d47:	jl     0x422d04
  422d49:	mov    ebp,fs
  422d4b:	pop    ecx
  422d4c:	popf   
  422d4d:	cld    
  422d4e:	mov    dh,0x25
  422d50:	clc    
  422d51:	jb     0x422d88
  422d53:	xchg   ebp,eax
  422d54:	push   edx
  422d55:	mov    ecx,0x33aab9b9
  422d5a:	jbe    0x422d17
  422d5c:	mov    bh,0xa6
  422d5e:	(bad)  
  422d5f:	shl    DWORD PTR [ecx+edi*8+0x2198221c],cl
  422d66:	cmp    BYTE PTR ds:0x80d4fdab,cl
  422d6c:	adc    ebx,ecx
  422d6e:	lds    ebx,FWORD PTR [eax+eiz*1-0x3f0f3217]
  422d75:	pop    ecx
  422d76:	aaa    
  422d77:	mov    edi,0x1bb75fec
  422d7c:	lods   eax,DWORD PTR ds:[esi]
  422d7d:	gs sahf 
  422d7f:	push   edi
  422d80:	push   0x4d73261e
  422d85:	pop    edx
  422d86:	repnz pop ecx
  422d88:	retf   0xb3fc
  422d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d8c:	add    BYTE PTR [ecx-0x21],0xfb
  422d90:	or     ch,dh
  422d92:	add    BYTE PTR [ebx-0x1c],bl
  422d95:	call   0x6164:0xa4c65bf0
  422d9c:	xchg   esi,ecx
  422d9e:	inc    ebx
  422d9f:	cdq    
  422da0:	push   ebx
  422da1:	iret   
  422da2:	inc    esi
  422da3:	add    bl,BYTE PTR [edi+0x1e34dea2]
  422da9:	push   cs
  422daa:	and    DWORD PTR [edx],edi
  422dac:	(bad)  
  422dad:	sbb    edx,ebx
  422daf:	es daa 
  422db1:	sbb    eax,0xe9ac7c6
  422db6:	mov    bl,0xb7
  422db8:	in     eax,dx
  422db9:	pop    eax
  422dba:	dec    ebx
  422dbb:	stos   BYTE PTR es:[edi],al
  422dbc:	xor    edx,DWORD PTR [ebp+0x36]
  422dbf:	xchg   esp,eax
  422dc0:	xchg   edx,eax
  422dc1:	jmp    0x4acc:0x3e2e3dc6
  422dc8:	mov    bh,0xae
  422dca:	or     edi,edi
  422dcc:	jp     0x422d6d
  422dce:	rcr    cl,1
  422dd0:	push   ecx
  422dd1:	cmp    eax,0xcf07f38
  422dd6:	fwait
  422dd7:	mov    ch,BYTE PTR [ecx+0x52a51fac]
  422ddd:	iret   
  422dde:	xchg   edx,eax
  422ddf:	dec    edi
  422de0:	std    
  422de1:	retf   0xebad
  422de4:	ror    DWORD PTR [ebx+0x25b62288],cl
  422dea:	rcr    DWORD PTR [edi],0x52
  422ded:	out    dx,al
  422dee:	xchg   edi,eax
  422def:	or     BYTE PTR [ebx-0x7ca5b467],dl
  422df5:	aad    0xeb
  422df7:	push   0xffffffe7
  422df9:	add    BYTE PTR [edx+edi*1+0x3e9b814b],ch
  422e00:	(bad)  
  422e01:	das    
  422e02:	xchg   esp,eax
  422e03:	fst    DWORD PTR [eax+ebp*4]
  422e06:	fiadd  WORD PTR [ecx]
  422e08:	xor    bl,BYTE PTR ds:0x9359f30f
  422e0e:	loope  0x422db7
  422e10:	fnsave [edi+esi*1-0x17b5d4e0]
  422e17:	fcmovnbe st,st(7)
  422e19:	sbb    cl,bh
  422e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e1c:	xchg   ebx,eax
  422e1d:	mov    al,ds:0x1f447c9b
  422e22:	pusha  
  422e23:	pop    eax
  422e24:	retf   0xa2f1
  422e27:	fsubp  st(5),st
  422e29:	sbb    DWORD PTR [eax+0x77],ebx
  422e2c:	int3   
  422e2d:	pop    es
  422e2e:	cli    
  422e2f:	outs   dx,BYTE PTR ds:[esi]
  422e30:	idiv   DWORD PTR [ebx-0x1924497]
  422e36:	test   DWORD PTR [ebp+0x39153db3],0xf50728e3
  422e40:	test   al,0x1
  422e42:	add    al,ch
  422e44:	add    DWORD PTR [eax],eax
  422e46:	add    cl,ch
  422e48:	clc    
  422e49:	add    BYTE PTR [ebx+0x5a],bl
  422e4c:	das    
  422e4d:	adc    edi,0x305a500e
  422e53:	outs   dx,DWORD PTR ds:[esi]
  422e54:	(bad)  
  422e55:	pop    eax
  422e56:	dec    eax
  422e57:	out    dx,eax
  422e58:	bound  edx,QWORD PTR [edi]
  422e5a:	mov    dh,0x53
  422e5c:	and    ch,BYTE PTR [edx]
  422e5e:	outs   dx,BYTE PTR ds:[esi]
  422e5f:	pop    ecx
  422e60:	mov    dl,0x33
  422e62:	add    DWORD PTR [ecx],ebx
  422e64:	int    0xe1
  422e66:	cdq    
  422e67:	mov    ebp,0xd2738522
  422e6c:	mov    dl,0x41
  422e6e:	hlt    
  422e6f:	push   eax
  422e70:	ss iret 
  422e72:	and    eax,DWORD PTR [ecx]
  422e74:	mov    fs,WORD PTR [ecx-0x39]
  422e77:	xchg   edx,eax
  422e78:	push   cs
  422e79:	imul   eax,DWORD PTR [esp+edi*2],0x9efa0b07
  422e80:	fbld   TBYTE PTR [ebx]
  422e82:	and    DWORD PTR [edi+ecx*1],0x6a
  422e86:	leave  
  422e87:	sbb    BYTE PTR [edi+0x65940987],al
  422e8d:	push   esi
  422e8e:	push   0xc1f2a604
  422e93:	sub    BYTE PTR [ebx+0x6a],0xc8
  422e97:	cmp    al,0x2d
  422e99:	and    dh,dl
  422e9b:	das    
  422e9c:	mov    dl,0x5e
  422e9e:	xlat   BYTE PTR ds:[ebx]
  422e9f:	(bad)  
  422ea0:	sub    bl,dl
  422ea2:	inc    esp
  422ea3:	xlat   BYTE PTR ds:[ebx]
  422ea4:	pop    ss
  422ea5:	xchg   DWORD PTR [edi],esi
  422ea7:	or     bh,BYTE PTR [esi+0x7e29b37c]
  422ead:	jle    0x422e68
  422eaf:	out    0xed,eax
  422eb1:	cmc    
  422eb2:	mov    cl,0x82
  422eb4:	cli    
  422eb5:	cmp    ebx,esp
  422eb7:	in     al,0x62
  422eb9:	scas   al,BYTE PTR es:[edi]
  422eba:	jmp    0x422f32
  422ebc:	pop    ss
  422ebd:	dec    esi
  422ebe:	xchg   ebp,eax
  422ebf:	mov    esi,DWORD PTR [ecx+0x2fb5e376]
  422ec5:	pop    edx
  422ec6:	add    eax,edx
  422ec8:	xor    dl,BYTE PTR [edx+eax*1-0x66]
  422ecc:	add    eax,ebx
  422ece:	sbb    eax,0xfc33cc58
  422ed3:	mov    eax,0x3aaa0ba1
  422ed8:	je     0x422f19
  422eda:	fidiv  WORD PTR [esi-0x27d3ce9]
  422ee0:	pop    ebp
  422ee1:	or     ax,0x1102
  422ee5:	jecxz  0x422ee8
  422ee7:	es or  al,0x72
  422eea:	sahf   
  422eeb:	lock jne 0x422ea1
  422eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422eef:	pop    esp
  422ef0:	push   ebx
  422ef1:	jge    0x422e79
  422ef3:	push   es
  422ef4:	test   dl,dh
  422ef6:	jne    0x422f27
  422ef8:	ds daa 
  422efa:	stc    
  422efb:	loopne 0x422f43
  422efd:	stos   DWORD PTR es:[edi],eax
  422efe:	dec    edi
  422eff:	sbb    ch,BYTE PTR [ebp*2-0x23fa8a21]
  422f06:	test   BYTE PTR [ebx+eiz*2+0x728758c6],bh
  422f0d:	fldcw  WORD PTR [edx]
  422f0f:	sub    al,0x88
  422f11:	inc    edi
  422f12:	sbb    al,0xd1
  422f14:	mov    esi,0x9330bd5a
  422f19:	jae    0x422f99
  422f1b:	sahf   
  422f1c:	lahf   
  422f1d:	das    
  422f1e:	jb     0x422f71
  422f20:	inc    esi
  422f21:	add    eax,0x5bca8d84
  422f26:	or     DWORD PTR [eax+ebx*8+0x3f],edi
  422f2a:	inc    esp
  422f2b:	mov    eax,ds:0xea083d8c
  422f30:	arpl   WORD PTR [ebp-0x5ff6e91c],si
  422f36:	fdiv   DWORD PTR [eax]
  422f38:	mov    eax,ds:0xd7925f08
  422f3d:	fadd   st(2),st
  422f3f:	inc    ah
  422f41:	test   eax,0xa1f24e65
  422f46:	or     al,BYTE PTR [edx+0xe50c36f]
  422f4c:	dec    esp
  422f4d:	cwde   
  422f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f4f:	mov    esp,0x8a111aeb
  422f54:	nop
  422f55:	(bad)  [eax-0x56]
  422f58:	mov    ds:0x35f805c6,eax
  422f5d:	in     al,0x5b
  422f5f:	(bad)  
  422f60:	pop    ss
  422f61:	popa   
  422f62:	mov    ebx,0xee364a08
  422f67:	dec    edi
  422f68:	pop    edx
  422f69:	jne    0x422fd0
  422f6b:	shl    ebx,0x60
  422f6e:	push   edx
  422f6f:	jo     0x422f16
  422f71:	popf   
  422f72:	pop    edi
  422f73:	sbb    al,0x7a
  422f75:	sub    al,ch
  422f77:	sub    BYTE PTR [ecx+0xd757f5b],cl
  422f7d:	gs js  0x422f83
  422f80:	mov    eax,ds:0xd76b2861
  422f85:	cmp    dl,BYTE PTR [ecx]
  422f87:	fstp   QWORD PTR [eax-0x66]
  422f8a:	cmp    al,0x23
  422f8c:	mov    WORD PTR [edx-0x51bcd4a2],?
  422f92:	or     al,0x6e
  422f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f95:	cdq    
  422f96:	lea    ecx,[edi-0x34]
  422f99:	inc    ecx
  422f9a:	sub    eax,0x492d5bb5
  422f9f:	cmp    BYTE PTR [eax-0x6df63064],ch
  422fa5:	test   BYTE PTR [esi+0x5f],0xc4
  422fa9:	test   al,0xfb
  422fab:	pop    esi
  422fac:	xchg   edi,eax
  422fad:	loopne 0x422f36
  422faf:	inc    edx
  422fb0:	in     al,0x15
  422fb2:	jae    0x422f3a
  422fb4:	cmp    ah,BYTE PTR [ebp-0x34]
  422fb7:	push   es
  422fb8:	ins    BYTE PTR es:[edi],dx
  422fb9:	out    dx,al
  422fba:	jp     0x422f42
  422fbc:	add    ebp,eax
  422fbe:	mov    ds:0x9cc28ddc,eax
  422fc3:	jbe    0x422f86
  422fc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fc6:	ror    ebx,cl
  422fc8:	push   edi
  422fc9:	not    ebp
  422fcb:	inc    ebp
  422fcc:	sar    ecx,0xb0
  422fcf:	stos   BYTE PTR es:[edi],al
  422fd0:	inc    edx
  422fd1:	adc    BYTE PTR [ebp+0x5dc1d7e],dl
  422fd7:	adc    bl,bh
  422fd9:	push   ecx
  422fda:	test   BYTE PTR [edi+esi*8+0xb],bl
  422fde:	push   ds
  422fdf:	aam    0x58
  422fe1:	lods   eax,DWORD PTR ds:[esi]
  422fe2:	cdq    
  422fe3:	sub    eax,0xe3ab28bb
  422fe8:	mov    es,WORD PTR [edi-0x46401fc1]
  422fee:	and    al,0xeb
  422ff0:	sar    DWORD PTR [esi+ebp*2+0x6e],1
  422ff4:	in     eax,0x35
  422ff6:	xchg   esp,eax
  422ff7:	neg    DWORD PTR [ebp-0xb193901]
  422ffd:	in     al,dx
  422ffe:	and    eax,0x5013fabc
  423003:	out    dx,al
  423004:	pop    edi
  423005:	ins    BYTE PTR es:[edi],dx
  423006:	push   0x687f04f6
  42300b:	push   esi
  42300c:	leave  
  42300d:	xor    al,BYTE PTR [eax]
  42300f:	mov    ebx,0x7d582f5d
  423014:	lds    esi,FWORD PTR [esi]
  423016:	retf   0x10bd
  423019:	addr16 xchg esp,eax
  42301b:	adc    BYTE PTR [edx],0x47
  42301e:	push   edx
  42301f:	inc    esp
  423020:	jo     0x42303e
  423022:	sbb    ebx,DWORD PTR [ebx]
  423024:	in     eax,dx
  423025:	test   DWORD PTR [ebx+eiz*2-0x79776b4e],esp
  42302c:	jle    0x422fc4
  42302e:	mov    ch,0x2d
  423030:	les    ebx,FWORD PTR [edi-0x5]
  423033:	(bad)  
  423034:	sti    
  423035:	lods   eax,DWORD PTR ds:[esi]
  423036:	(bad)  
  423037:	xchg   ecx,eax
  423038:	loop   0x422fc2
  42303a:	xchg   edx,eax
  42303b:	inc    edx
  42303c:	repz sbb edx,ebp
  42303f:	(bad)  [edx+0x1e80001]
  423045:	add    BYTE PTR [eax],al
  423047:	push   edi
  423048:	(bad)  [edi-0x69]
  42304b:	push   ds
  42304c:	and    al,0x24
  42304e:	(bad)  
  42304f:	fldenv [esi]
  423051:	in     al,dx
  423052:	pop    esp
  423053:	lds    esi,FWORD PTR [edx]
  423055:	ret    0x14dc
  423058:	iret   
  423059:	icebp  
  42305a:	mul    DWORD PTR [edx]
  42305c:	in     al,dx
  42305d:	mov    edi,0xdccbb522
  423062:	es push es
  423064:	cmp    DWORD PTR [ecx],esp
  423066:	xor    eax,0x5dc3a40
  42306b:	lahf   
  42306c:	cmp    al,0x4
  42306e:	retf   
  42306f:	outs   dx,DWORD PTR ds:[esi]
  423070:	sub    BYTE PTR [ebx],dl
  423072:	popa   
  423073:	mov    ss,esi
  423075:	(bad)  
  423076:	push   esp
  423077:	or     eax,DWORD PTR [edx+0x5e349855]
  42307d:	mov    edx,0x39ed573b
  423082:	or     al,0x5
  423084:	sbb    dh,BYTE PTR [edi]
  423086:	cmp    eax,0xec273d25
  42308b:	(bad)  
  42308c:	cli    
  42308d:	mov    edi,0x5816e94c
  423092:	xlat   BYTE PTR ds:[ebx]
  423093:	xor    BYTE PTR [ebp+0x8],ah
  423096:	adc    al,0xab
  423098:	loop   0x4230aa
  42309a:	pop    ss
  42309b:	loop   0x4230aa
  42309d:	or     eax,0x33805242
  4230a2:	push   ebp
  4230a3:	xor    DWORD PTR [ecx+ebp*2+0x66f7e85c],eax
  4230aa:	and    al,0x95
  4230ac:	imul   eax,ecx,0x953b81e9
  4230b2:	stos   BYTE PTR es:[edi],al
  4230b3:	mov    cs,WORD PTR [ecx-0x5c]
  4230b6:	mov    edi,DWORD PTR [ecx+0x46]
  4230b9:	and    al,BYTE PTR [eax]
  4230bb:	or     eax,0xa3409711
  4230c0:	mov    ecx,0x1a84518b
  4230c5:	push   esi
  4230c6:	stos   BYTE PTR es:[edi],al
  4230c7:	add    eax,0x3db68d7d
  4230cc:	xor    edx,esp
  4230ce:	in     al,0x97
  4230d0:	std    
  4230d1:	(bad)  
  4230d2:	push   edi
  4230d3:	aam    0x63
  4230d5:	sub    cl,BYTE PTR [ebp+0x3c]
  4230d8:	dec    esp
  4230d9:	test   eax,0xab4f1f85
  4230de:	loopne 0x4230c2
  4230e0:	mov    esi,0x71066913
  4230e5:	mov    ds:0xdeeac89e,al
  4230ea:	adc    DWORD PTR [eax+0x3b],ebx
  4230ed:	fwait
  4230ee:	pop    edi
  4230ef:	aam    0xc7
  4230f1:	repnz cmc 
  4230f3:	sbb    ah,BYTE PTR [edi+0x18]
  4230f6:	cli    
  4230f7:	pop    ebp
  4230f8:	jbe    0x423138
  4230fa:	scas   al,BYTE PTR es:[edi]
  4230fb:	sti    
  4230fc:	and    DWORD PTR [edx],ebp
  4230fe:	daa    
  4230ff:	std    
  423100:	repz push 0xffffff89
  423103:	cmc    
  423104:	sti    
  423105:	mov    cl,0xfc
  423107:	pop    ebx
  423108:	cdq    
  423109:	cmp    ah,0xac
  42310c:	pop    edi
  42310d:	inc    edx
  42310e:	pusha  
  42310f:	inc    esp
  423110:	clc    
  423111:	jl     0x423189
  423113:	in     al,dx
  423114:	ss (bad) 
  423116:	mov    ch,0x1a
  423118:	jp     0x4230dd
  42311a:	push   esp
  42311b:	sbb    ecx,DWORD PTR [ecx+edi*1+0x5e]
  42311f:	cmp    ah,dh
  423121:	iret   
  423122:	enter  0x5cc6,0xbe
  423126:	jae    0x4230b7
  423128:	in     al,0xc7
  42312a:	ins    DWORD PTR es:[edi],dx
  42312b:	mov    edx,0xa78ccc4e
  423130:	jl     0x423171
  423132:	inc    esi
  423133:	(bad)  
  423134:	cmp    eax,0xa083fb4e
  423139:	dec    ecx
  42313a:	arpl   WORD PTR [edi+0x1],di
  42313d:	push   ebx
  42313e:	lods   eax,DWORD PTR ds:[esi]
  42313f:	xor    ah,BYTE PTR [edx+ebx*8+0x1f43dfd3]
  423146:	push   ebp
  423147:	adc    DWORD PTR [ecx+eiz*8],esi
  42314a:	lahf   
  42314b:	gs xchg ecx,eax
  42314d:	stos   BYTE PTR es:[edi],al
  42314e:	movsx  ebp,BYTE PTR [esi-0x4a97925f]
  423155:	xchg   edx,eax
  423156:	mov    ds:0xfd30da21,eax
  42315b:	inc    eax
  42315c:	xor    esi,ebx
  42315e:	popf   
  42315f:	stos   DWORD PTR es:[edi],eax
  423160:	dec    ebx
  423161:	xchg   edx,eax
  423162:	fcomip st,st(4)
  423164:	or     bh,dl
  423166:	test   BYTE PTR [eax-0x32],al
  423169:	cwde   
  42316a:	outs   dx,BYTE PTR ds:[esi]
  42316b:	je     0x423119
  42316d:	jnp    0x423124
  42316f:	outs   dx,DWORD PTR ds:[esi]
  423170:	dec    ebp
  423171:	xchg   DWORD PTR [ecx+0x43bfa596],esp
  423177:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423178:	sbb    al,0xe6
  42317a:	xchg   ecx,eax
  42317b:	mov    eax,ds:0xb8a498bc
  423180:	xchg   ebp,eax
  423181:	retf   0xaa2e
  423184:	ficom  DWORD PTR [ebx-0x73]
  423187:	adc    DWORD PTR [ebx],ecx
  423189:	cmp    BYTE PTR [eax],dl
  42318b:	in     eax,dx
  42318c:	jno    0x423161
  42318e:	adc    DWORD PTR ds:0x34c9908f,edx
  423194:	pop    esi
  423195:	mov    al,ds:0xea258b1d
  42319a:	sbb    DWORD PTR [esi],esi
  42319c:	scas   al,BYTE PTR es:[edi]
  42319d:	in     al,0x99
  42319f:	fs and al,0xee
  4231a2:	ja     0x423212
  4231a4:	sub    esp,ebp
  4231a6:	or     ch,cl
  4231a8:	sbb    cl,BYTE PTR [edx-0x1093c25a]
  4231ae:	sahf   
  4231af:	xor    DWORD PTR [esi],ecx
  4231b1:	or     al,0xac
  4231b3:	add    al,0x5e
  4231b5:	sub    DWORD PTR ds:0x11cf8472,ecx
  4231bb:	jp     0x4231c6
  4231bd:	mov    esp,0x9bcb1351
  4231c2:	mov    ah,ch
  4231c4:	cmp    ah,BYTE PTR [esi+edx*8]
  4231c7:	xchg   edx,eax
  4231c8:	inc    ebp
  4231c9:	sub    bl,bl
  4231cb:	scas   al,BYTE PTR es:[edi]
  4231cc:	pop    ds
  4231cd:	out    0x42,al
  4231cf:	cs jno 0x423223
  4231d2:	push   es
  4231d3:	dec    ebx
  4231d4:	push   ebx
  4231d5:	push   0x752ea9f3
  4231da:	mov    al,ds:0xc271a575
  4231df:	call   0xfd5fa81d
  4231e4:	inc    esp
  4231e5:	pop    es
  4231e6:	mov    esp,0xe0250dd1
  4231eb:	rol    BYTE PTR [eax+0x34],0x19
  4231ef:	std    
  4231f0:	aam    0x47
  4231f2:	dec    ecx
  4231f3:	in     al,0xe5
  4231f5:	mov    edi,0x3b54ec4e
  4231fa:	dec    ebx
  4231fb:	shl    DWORD PTR [ebx],cl
  4231fd:	and    eax,0x8653c00e
  423202:	jl     0x4231aa
  423204:	xchg   esp,eax
  423205:	adc    BYTE PTR [edi-0x78],dl
  423208:	and    eax,0x5c19a974
  42320d:	mov    bl,0xe1
  42320f:	faddp  st(0),st
  423211:	mov    ds:0xe78efaba,al
  423216:	sub    eax,0xb8993388
  42321b:	test   al,0xae
  42321d:	jns    0x42327c
  42321f:	ins    DWORD PTR es:[edi],dx
  423220:	inc    esp
  423221:	xchg   esi,eax
  423222:	test   BYTE PTR [ecx],al
  423224:	mov    DWORD PTR [edi+0x3f61b22d],ecx
  42322a:	pop    edi
  42322b:	or     esi,esi
  42322d:	pop    ebx
  42322e:	es jle 0x4231f3
  423231:	in     al,dx
  423232:	push   cs
  423233:	cld    
  423234:	cs (bad) 
  423236:	repnz cld 
  423238:	std    
  423239:	push   ds
  42323a:	retf   0x8939
  42323d:	cmp    edx,eax
  42323f:	lds    ebp,FWORD PTR [ecx+eax*1+0x1e800]
  423246:	add    BYTE PTR [edi],ah
  423248:	inc    ebx
  423249:	xchg   esp,eax
  42324a:	mov    ah,0xbe
  42324c:	arpl   WORD PTR [edx-0x644b4c6],dx
  423252:	imul   eax,DWORD PTR [ebp+0x44],0xffffffc6
  423256:	adc    DWORD PTR [edx-0xe233236],esi
  42325c:	popa   
  42325d:	stos   BYTE PTR es:[edi],al
  42325e:	sub    DWORD PTR [eax-0x6d],esp
  423261:	retf   
  423262:	rol    ebx,0xdb
  423265:	add    al,0xd1
  423267:	(bad)  
  423269:	fwait
  42326a:	push   edi
  42326b:	add    al,0x50
  42326d:	xchg   ebx,eax
  42326e:	pusha  
  42326f:	push   ds
  423270:	xor    ebx,DWORD PTR [eax+0xf4ffb81]
  423276:	bound  edx,QWORD PTR [edi+esi*8]
  423279:	lods   eax,DWORD PTR ds:[esi]
  42327a:	(bad)  
  42327b:	jns    0x4232bf
  42327d:	sbb    edi,0xcafe8854
  423283:	dec    ecx
  423284:	lods   al,BYTE PTR ds:[esi]
  423285:	(bad)  
  423286:	shl    bl,1
  423288:	imul   ebp,DWORD PTR [edi+0x25c83976],0xffffffeb
  42328f:	sbb    ebp,ebp
  423291:	fistp  WORD PTR [ecx+0x21]
  423294:	mov    esp,0xf3dc65f7
  423299:	in     eax,0x59
  42329b:	push   edx
  42329c:	and    esi,eax
  42329e:	push   ebp
  42329f:	daa    
  4232a0:	or     al,0x84
  4232a2:	inc    edi
  4232a3:	dec    ecx
  4232a4:	or     al,0x8e
  4232a6:	idiv   al
  4232a8:	xor    BYTE PTR [edx+0x4f],0x82
  4232ac:	fdivp  st(7),st
  4232ae:	in     al,dx
  4232af:	xchg   DWORD PTR [edx+0xe3a12b6],esi
  4232b5:	fist   WORD PTR [ecx-0x5a]
  4232b8:	js     0x423246
  4232ba:	pop    es
  4232bb:	pop    ebx
  4232bc:	mov    es,WORD PTR [edi+esi*2-0x4199f76d]
  4232c3:	or     ecx,ecx
  4232c5:	frstor [esi-0x60]
  4232c8:	sub    BYTE PTR [esp+eax*1+0x2b463e14],al
  4232cf:	getsec 
  4232d1:	mov    ?,WORD PTR [ebp-0x43df5ff2]
  4232d7:	add    al,0x96
  4232d9:	in     eax,dx
  4232da:	jns    0x423297
  4232dc:	jns    0x42328c
  4232de:	push   eax
  4232df:	cli    
  4232e0:	out    0xff,eax
  4232e2:	(bad)  
  4232e3:	jns    0x42329d
  4232e5:	adc    DWORD PTR ds:0x4cac7393,0xd
  4232ec:	push   eax
  4232ed:	(bad)  
  4232ee:	and    eax,0x5e0d8e08
  4232f3:	xchg   ebp,eax
  4232f4:	jg     0x4232d6
  4232f6:	jnp    0x423284
  4232f8:	aas    
  4232f9:	(bad)  
  4232fa:	bound  eax,QWORD PTR [edi]
  4232fc:	lahf   
  4232fd:	mov    BYTE PTR [eax],bl
  4232ff:	cld    
  423300:	push   0x4853ade6
  423305:	jmp    0x4232a7
  423307:	sub    eax,0x33ff1518
  42330c:	lds    edi,FWORD PTR [eax+0x3f]
  42330f:	add    dh,BYTE PTR [edi-0x5eb4e160]
  423315:	ins    BYTE PTR es:[edi],dx
  423316:	sub    DWORD PTR [eax+0xa],0x1639fc55
  42331d:	or     eax,0x34cabe45
  423322:	cmp    esp,DWORD PTR [edi]
  423324:	jns    0x423309
  423326:	jnp    0x423352
  423328:	call   0x1c8b:0x9d443675
  42332f:	test   DWORD PTR [edi+0x40],esp
  423332:	fxch   st(7)
  423334:	mov    esi,0x20d1b72b
  423339:	push   0xffffffd4
  42333b:	mov    WORD PTR [ebx],es
  42333d:	mov    ds:0x6d7ad1f6,al
  423342:	ret    0xe7c7
  423345:	addr16 push esi
  423347:	sti    
  423348:	mov    ds:0x46491f3d,al
  42334d:	scas   eax,DWORD PTR es:[edi]
  42334e:	sbb    esi,DWORD PTR [edi-0x9849cb3]
  423354:	or     DWORD PTR ds:0xf669ae2d,ebp
  42335a:	pop    ebx
  42335b:	xor    DWORD PTR [esi],0xffffff9f
  42335e:	push   eax
  42335f:	mov    al,0xa7
  423361:	pop    eax
  423362:	test   BYTE PTR [ebx-0x8959eae],dl
  423368:	sbb    DWORD PTR [eax],0xe189669f
  42336e:	cmp    bh,BYTE PTR [edi]
  423370:	xor    al,0x2c
  423372:	inc    edi
  423373:	or     eax,0xc7835ac
  423378:	xchg   edi,eax
  423379:	dec    ebp
  42337a:	dec    edi
  42337b:	jge    0x42338c
  42337d:	imul   esi,DWORD PTR [eax],0x2c
  423380:	pop    ds
  423381:	mov    ss,WORD PTR [ecx]
  423383:	adc    ch,dl
  423385:	mov    ch,0x22
  423387:	jbe    0x4233c9
  423389:	lahf   
  42338a:	dec    esi
  42338b:	idiv   BYTE PTR [ecx-0x5b]
  42338e:	sub    DWORD PTR [ecx-0x77501f59],esi
  423394:	lea    ebx,[eax-0x530e74e7]
  42339a:	ficomp DWORD PTR [edx-0x5d]
  42339d:	loope  0x423393
  42339f:	sub    eax,0x9f92160a
  4233a4:	adc    esp,edx
  4233a6:	fld    QWORD PTR [esi-0x7cff2e12]
  4233ac:	dec    edi
  4233ad:	xor    DWORD PTR [esi-0x55],0xffffffc1
  4233b1:	add    DWORD PTR [esi-0x2e],edx
  4233b4:	jnp    0x42337a
  4233b6:	mov    eax,edx
  4233b8:	int3   
  4233b9:	xchg   esi,eax
  4233ba:	inc    eax
  4233bb:	dec    edi
  4233bc:	aam    0xb
  4233be:	test   eax,0xadf20be8
  4233c3:	mov    esi,0xaa3a18e6
  4233c8:	sub    eax,0xdd1c2299
  4233cd:	fimul  DWORD PTR [ebp+eax*2+0x52f49fa6]
  4233d4:	(bad)  
  4233d5:	cmp    esp,edi
  4233d7:	leave  
  4233d8:	cs jp  0x4233cf
  4233db:	loope  0x42345c
  4233dd:	push   0xffffff80
  4233df:	jnp    0x4233aa
  4233e1:	sbb    DWORD PTR [ecx],esp
  4233e3:	mov    edi,0xf302f2fb
  4233e8:	(bad)  
  4233ea:	mov    ebp,0xe32d04a8
  4233ef:	es mov ebp,0xe399c0a8
  4233f5:	jmp    0xf5c69726
  4233fa:	aaa    
  4233fb:	cwde   
  4233fc:	sbb    BYTE PTR [eax],bh
  4233fe:	or     al,0xfd
  423400:	pushw  0xff8b
  423403:	xchg   edx,eax
  423404:	test   eax,0x21ba616a
  423409:	imul   esp,DWORD PTR [ebp+0x37167d87],0x7c1a7efb
  423413:	in     eax,0x84
  423415:	mov    al,0x3c
  423417:	out    0x97,eax
  423419:	mov    ebx,cs
  42341b:	fwait
  42341c:	ins    BYTE PTR es:[edi],dx
  42341d:	sub    DWORD PTR [ebp+0x65435d74],ebx
  423423:	popf   
  423424:	pop    es
  423425:	push   edi
  423426:	retf   0x6543
  423429:	xchg   ebp,eax
  42342a:	iret   
  42342b:	ror    BYTE PTR [ebp-0x36b10405],1
  423431:	(bad)  [edi+ebx*8+0x5c]
  423435:	(bad)  
  423437:	sbb    eax,0xdc70d97a
  42343c:	pop    edi
  42343d:	inc    esp
  42343e:	shr    BYTE PTR [ebp-0x17fffe52],0x1
  423445:	add    BYTE PTR [eax],al
  423447:	push   cs
  423448:	enter  0x6ce6,0x61
  42344c:	mov    dl,al
  42344e:	pop    edx
  42344f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423450:	jg     0x423446
  423452:	push   esp
  423453:	sbb    bh,BYTE PTR [eax]
  423455:	data16 cli 
  423457:	pop    ds
  423458:	cmp    al,0xde
  42345a:	xor    BYTE PTR [edi+0x78],bh
  42345d:	lahf   
  42345e:	xor    edx,edx
  423460:	cdq    
  423461:	mov    edi,0xe907c926
  423466:	loopne 0x4234cf
  423468:	gs mov ebp,0x527ed36f
  42346e:	jmp    0xb83d3b9b
  423473:	inc    ebp
  423474:	push   edx
  423475:	xchg   ch,bl
  423477:	lock jmp 0xcf95c19e
  42347d:	mov    esp,0x74f3f50b
  423482:	inc    ebx
  423483:	xchg   DWORD PTR [edi-0x73],ebx
  423486:	fdiv   st,st(0)
  423488:	inc    edi
  423489:	out    dx,al
  42348a:	cmp    al,0x6e
  42348c:	(bad)  
  42348d:	push   esp
  42348e:	into   
  42348f:	inc    ebx
  423490:	imul   esi,DWORD PTR [ecx-0xf],0x2edd2ef2
  423497:	push   0x19
  423499:	fidivr WORD PTR [ecx-0x55aa7fc]
  42349f:	add    BYTE PTR [eax-0x4551ab34],0xb0
  4234a6:	arpl   WORD PTR [edx-0x4600447c],cx
  4234ac:	mov    esi,0xf914e7ab
  4234b1:	push   esp
  4234b2:	add    al,0x18
  4234b4:	mov    esi,0x2d0dc46f
  4234b9:	test   eax,ebx
  4234bb:	add    al,0x55
  4234bd:	cld    
  4234be:	or     al,ch
  4234c0:	outs   dx,WORD PTR ds:[esi]
  4234c2:	pop    esi
  4234c3:	mov    eax,ds:0x8fa5089a
  4234c8:	scas   al,BYTE PTR es:[edi]
  4234c9:	daa    
  4234ca:	in     al,0xcd
  4234cc:	fstp   TBYTE PTR [ebx-0x71]
  4234cf:	add    BYTE PTR [eax-0x7b],bl
  4234d2:	mov    al,ds:0xc0f6051c
  4234d7:	mov    eax,0xd6ef9528
  4234dc:	sub    ch,cl
  4234de:	jbe    0x423534
  4234e0:	popa   
  4234e1:	pop    esp
  4234e2:	fist   WORD PTR [ebx+edi*4-0x42aad819]
  4234e9:	mov    edi,0xc06151e6
  4234ee:	mov    bh,0xec
  4234f0:	dec    esp
  4234f1:	xor    eax,0x2d0ba480
  4234f6:	pop    esi
  4234f7:	mov    edi,0xcc404ace
  4234fc:	mov    cl,BYTE PTR [ecx]
  4234fe:	mov    eax,0xec1ce5a2
  423503:	test   DWORD PTR ds:0xfec836a4,esi
  423509:	adc    al,0x13
  42350b:	xchg   edi,eax
  42350c:	mov    cl,0x5f
  42350e:	scas   al,BYTE PTR es:[edi]
  42350f:	adc    edi,DWORD PTR [ebp+0x587b4022]
  423515:	xchg   edi,eax
  423516:	add    edx,eax
  423518:	mov    al,ds:0x56bbbb17
  42351d:	retf   0xc7eb
  423520:	jo     0x4234ee
  423522:	mov    bl,0x13
  423524:	pop    ds
  423525:	push   esi
  423526:	(bad)  
  423527:	push   ebp
  423528:	cli    
  423529:	mov    eax,ds:0x6c26642a
  42352e:	push   esi
  42352f:	int    0xf8
  423531:	shr    BYTE PTR [esi],1
  423533:	xor    eax,DWORD PTR [edi]
  423535:	fidivr WORD PTR [ebx-0x24f6219e]
  42353b:	cli    
  42353c:	(bad)  
  42353d:	arpl   WORD PTR [ebp+0x41],bp
  423540:	inc    ebx
  423541:	out    dx,eax
  423542:	out    dx,eax
  423543:	inc    ecx
  423544:	loopne 0x4235b8
  423546:	iret   
  423547:	je     0x42356c
  423549:	cmp    ecx,edx
  42354b:	out    dx,al
  42354c:	pop    esp
  42354d:	popa   
  42354e:	push   ds
  42354f:	out    dx,eax
  423550:	fwait
  423551:	mov    ah,0x81
  423553:	ret    0x4ab5
  423556:	fwait
  423557:	cmp    eax,0x9270e74c
  42355c:	mov    dh,0x4d
  42355e:	(bad)  
  42355f:	sub    eax,0x4fa097d8
  423564:	test   eax,0x211b0a4c
  423569:	lods   al,BYTE PTR ds:[esi]
  42356a:	xchg   ecx,eax
  42356b:	inc    ebp
  42356c:	call   0xf08ac0e8
  423571:	jno    0x42352c
  423573:	shr    BYTE PTR [ecx+0x3e],0x7f
  423577:	outs   dx,BYTE PTR ds:[esi]
  423578:	fistp  WORD PTR [eax]
  42357a:	cdq    
  42357b:	aad    0x32
  42357d:	push   esp
  42357e:	mov    eax,ds:0x714d13d5
  423583:	pop    ebp
  423584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423585:	test   DWORD PTR [ebp+0x430d0078],ebx
  42358b:	out    dx,eax
  42358c:	sub    eax,0x8b6c5581
  423592:	retf   
  423593:	adc    ch,BYTE PTR [esi-0x50]
  423596:	lods   al,BYTE PTR ds:[esi]
  423597:	add    dh,BYTE PTR [ecx-0x3570e571]
  42359d:	outs   dx,DWORD PTR ds:[esi]
  42359e:	pop    edi
  42359f:	pop    es
  4235a0:	imul   ah
  4235a2:	(bad)  
  4235a3:	das    
  4235a4:	add    edx,DWORD PTR [edi]
  4235a6:	pushf  
  4235a7:	arpl   WORD PTR [edi],bp
  4235a9:	in     al,dx
  4235aa:	jno    0x4235c3
  4235ac:	dec    esi
  4235ad:	jecxz  0x4235b6
  4235af:	lods   al,BYTE PTR ds:[esi]
  4235b0:	sub    ch,0xf3
  4235b3:	loopne 0x423607
  4235b5:	scas   al,BYTE PTR es:[edi]
  4235b6:	jmp    0xfe21874
  4235bb:	repnz call 0x3d79:0xa2dbbdb1
  4235c3:	push   cs
  4235c4:	push   cs
  4235c5:	mov    al,ds:0xa4b4b11a
  4235ca:	xchg   DWORD PTR [edi+ebp*8-0x63],esi
  4235ce:	xchg   ecx,eax
  4235cf:	adc    BYTE PTR [edi+0x20264eb2],ch
  4235d5:	mov    cl,0xee
  4235d7:	add    al,0xa2
  4235d9:	mov    BYTE PTR [ecx],dl
  4235db:	xor    esp,DWORD PTR [edi-0x59a3df27]
  4235e1:	cmp    ecx,DWORD PTR [edx-0x36dd3ec0]
  4235e7:	imul   esi,ecx,0xed572d11
  4235ed:	mov    ebp,ecx
  4235ef:	mov    ss,WORD PTR [edi]
  4235f1:	xchg   ah,bh
  4235f3:	addr16 xchg ebx,eax
  4235f5:	push   eax
  4235f6:	ds mov ebp,0x75878744
  4235fc:	or     bh,bh
  4235fe:	data16 lods al,BYTE PTR ss:[esi]
  423601:	icebp  
  423602:	outs   dx,DWORD PTR ds:[esi]
  423603:	inc    ecx
  423604:	adc    eax,0xe698be4c
  423609:	fild   QWORD PTR [ebp+0x3b3cc9ab]
  42360f:	push   ebp
  423610:	icebp  
  423611:	push   ecx
  423612:	jae    0x4235f9
  423614:	dec    ecx
  423615:	jb     0x4235ef
  423617:	jnp    0x42366d
  423619:	jo     0x423681
  42361b:	jmp    0x423669
  42361d:	jne    0x42360c
  42361f:	sub    al,al
  423621:	push   0xffffff80
  423623:	jae    0x42364e
  423625:	xchg   ecx,eax
  423626:	adc    eax,0xf223a73c
  42362b:	scas   eax,DWORD PTR es:[edi]
  42362c:	test   al,0xdc
  42362e:	(bad)  
  42362f:	xor    dl,al
  423631:	and    ecx,ebp
  423633:	repz jmp 0x42362e
  423636:	fld    TBYTE PTR [ebx+0x42]
  423639:	icebp  
  42363a:	gs sar cl,cl
  42363d:	pusha  
  42363e:	cmp    eax,0x1b095
  423643:	call   0x92423649
  423648:	ins    DWORD PTR es:[edi],dx
  423649:	out    dx,al
  42364a:	dec    ebp
  42364b:	mov    dh,0xe0
  42364d:	stc    
  42364e:	push   ds
  42364f:	jae    0x423621
  423651:	es push edx
  423653:	lock in al,dx
  423655:	xchg   edx,eax
  423656:	hlt    
  423657:	ficomp DWORD PTR [esi]
  423659:	int    0xeb
  42365b:	jbe    0x4236b2
  42365d:	imul   esp,edx,0xffffffa1
  423660:	jecxz  0x42369a
  423662:	std    
  423663:	or     eax,0xbe06398f
  423668:	das    
  423669:	sti    
  42366a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42366b:	xchg   ebx,eax
  42366c:	hlt    
  42366d:	cld    
  42366e:	out    dx,eax
  42366f:	imul   esi,DWORD PTR [edi+0x5b],0xe232211b
  423676:	ds in  al,dx
  423678:	lahf   
  423679:	ret    
  42367a:	inc    ebp
  42367b:	lods   eax,DWORD PTR ds:[esi]
  42367c:	retf   0xc8a5
  42367f:	cdq    
  423680:	nop
  423681:	jp     0x42367a
  423683:	(bad)  
  423684:	or     eax,0x3396f01f
  423689:	mov    ds:0xb0d6b7be,eax
  42368e:	mov    ch,0x9d
  423690:	pop    ebp
  423691:	js     0x423650
  423693:	addr16 mov edx,0xe25a0668
  423699:	enter  0x4f73,0x9d
  42369d:	xchg   esp,eax
  42369e:	dec    edx
  42369f:	jne    0x423647
  4236a1:	adc    DWORD PTR ds:0xb05a0f34,ecx
  4236a7:	adc    ebx,0x27
  4236aa:	sar    DWORD PTR [ebp-0x19],0x64
  4236ae:	rcl    ebp,1
  4236b0:	xor    eax,0x293d3270
  4236b5:	pop    edi
  4236b6:	push   ebp
  4236b7:	jbe    0x423707
  4236b9:	push   esp
  4236ba:	fbld   TBYTE PTR ds:0x2e6c2f72
  4236c0:	loope  0x4236b7
  4236c2:	mov    ah,bh
  4236c4:	cmp    al,0xe9
  4236c6:	ror    eax,cl
  4236c8:	mov    ds:0xfaf40169,al
  4236cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236ce:	popf   
  4236cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236d0:	nop
  4236d1:	cmp    DWORD PTR [ebp+0x55],0x2d627b53
  4236d8:	mov    cl,0x6d
  4236da:	stos   BYTE PTR es:[edi],al
  4236db:	jl     0x423663
  4236dd:	data16 imul BYTE PTR [eax-0x7e]
  4236e1:	dec    ebp
  4236e2:	in     al,dx
  4236e3:	sbb    al,0x4e
  4236e5:	and    eax,0xe960a8e
  4236ea:	cmp    DWORD PTR [ebx],esp
  4236ec:	hlt    
  4236ed:	xor    al,0x46
  4236ef:	mov    ebx,0x1298e412
  4236f4:	and    DWORD PTR [edx],edx
  4236f6:	pushf  
  4236f7:	je     0x42376d
  4236f9:	jno    0x423759
  4236fb:	rol    DWORD PTR [ebx],cl
  4236fd:	xchg   edi,eax
  4236fe:	and    edi,esp
  423700:	cmc    
  423701:	dec    edi
  423702:	mov    ebp,0xddfa9a05
  423707:	mov    esi,0x38964039
  42370c:	and    BYTE PTR [ebp-0x77e85d75],cl
  423712:	sub    dl,BYTE PTR [ecx+0x548b4281]
  423718:	push   0xffffffa4
  42371a:	cld    
  42371b:	adc    DWORD PTR [ebp+0x58],ecx
  42371e:	scas   al,BYTE PTR es:[edi]
  42371f:	test   eax,0x73524d7d
  423724:	inc    esi
  423725:	jb     0x423765
  423727:	jbe    0x42378d
  423729:	pop    esi
  42372a:	cs cs dec esp
  42372d:	or     DWORD PTR [ecx+0x74237088],ebp
  423733:	test   BYTE PTR [edi+0x2e02b593],dl
  423739:	inc    edi
  42373a:	mov    eax,ds:0x9e59f81e
  42373f:	push   eax
  423740:	dec    ebp
  423741:	(bad)  
  423742:	mov    eax,0x6c224f9b
  423747:	sbb    eax,0xcdf06c02
  42374c:	mov    ebx,0xaae0483b
  423751:	pop    edx
  423752:	pop    edi
  423753:	or     eax,0xe11128f9
  423758:	mov    ds:0xeaa80e99,eax
  42375d:	nop
  42375e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42375f:	xchg   ebx,eax
  423760:	aam    0x95
  423762:	ficom  DWORD PTR [edi]
  423764:	sar    ebp,0x20
  423767:	cmp    DWORD PTR [eax+0x3dd404fb],0x42c88151
  423771:	shl    edi,cl
  423773:	popf   
  423774:	xor    ecx,edx
  423776:	retf   
  423777:	sar    BYTE PTR [esi+0x45],cl
  42377a:	lock or bl,BYTE PTR [ecx]
  42377d:	mov    cl,bh
  42377f:	sbb    dh,bh
  423781:	jle    0x42379e
  423783:	call   0xfac75731
  423788:	mov    ds:0xd4150250,al
  42378d:	shl    BYTE PTR [eax-0x27],cl
  423790:	scas   eax,DWORD PTR es:[edi]
  423791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423792:	addr16 push cs
  423794:	imul   DWORD PTR [ebx]
  423796:	ret    0x2f29
  423799:	les    ebp,FWORD PTR [esi-0x79]
  42379c:	dec    ecx
  42379d:	int    0x6e
  42379f:	fsub   QWORD PTR [ecx]
  4237a1:	sbb    bh,BYTE PTR [ecx-0xc]
  4237a4:	or     ebx,edi
  4237a6:	fld    TBYTE PTR [ecx+0x57]
  4237a9:	lds    ecx,FWORD PTR [ebx+esi*2+0x1ff6f50e]
  4237b0:	add    ah,BYTE PTR [edi]
  4237b2:	pop    edi
  4237b3:	adc    edx,DWORD PTR [esi-0x3f]
  4237b6:	fisub  DWORD PTR [eax-0x73dd01a]
  4237bc:	jae    0x423805
  4237be:	ror    BYTE PTR [ebx+0x21],cl
  4237c1:	pop    esp
  4237c2:	cmp    ah,dl
  4237c4:	dec    esi
  4237c5:	mov    eax,ds:0xf0fe6a67
  4237ca:	test   eax,0x71ce481a
  4237cf:	xchg   ebx,ebp
  4237d1:	or     eax,0x8a32628c
  4237d6:	inc    esp
  4237d7:	mov    edi,0x2b4c2cc4
  4237dc:	aam    0xee
  4237de:	(bad)  [ebx]
  4237e0:	dec    eax
  4237e1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237e3:	(bad)  
  4237e5:	retf   
  4237e6:	jbe    0x42382b
  4237e8:	xchg   ebp,eax
  4237e9:	push   esp
  4237ea:	loop   0x423853
  4237ec:	retf   0x5752
  4237ef:	stos   BYTE PTR es:[edi],al
  4237f0:	fstp   TBYTE PTR gs:[edx+0x2579bab8]
  4237f7:	(bad)  
  4237f8:	cmp    ch,BYTE PTR [ecx+0x3b1cecba]
  4237fe:	lahf   
  4237ff:	push   ebp
  423800:	aas    
  423801:	les    edi,FWORD PTR [esi-0x22]
  423804:	fisub  WORD PTR [ebx*2-0x443f3daa]
  42380b:	push   ebp
  42380c:	mov    ch,0x97
  42380e:	call   0x78282566
  423813:	in     al,0x6f
  423815:	icebp  
  423816:	push   edi
  423817:	or     al,0xa6
  423819:	sub    dh,BYTE PTR [esi-0x52]
  42381c:	das    
  42381d:	sbb    ecx,DWORD PTR [edi+0x3e38b313]
  423823:	jle    0x4237bc
  423825:	xchg   esp,ebx
  423827:	(bad)  
  423828:	popa   
  423829:	ss mov ebp,0xdf955428
  42382f:	inc    edx
  423830:	add    eax,0x65676020
  423835:	inc    edx
  423836:	daa    
  423837:	or     eax,ecx
  423839:	push   esp
  42383a:	jo     0x423850
  42383c:	shl    BYTE PTR [ebx],0x11
  42383f:	jge    0x4237f3
  423841:	add    DWORD PTR [eax],eax
  423843:	call   0xd7423849
  423848:	ficomp WORD PTR [edi+0x79]
  42384b:	or     DWORD PTR ds:0xf39de144,eax
  423851:	retf   0x5645
  423854:	xor    eax,DWORD PTR [esi-0x76]
  423857:	jo     0x423809
  423859:	cmova  edx,edi
  42385c:	nop
  42385d:	sbb    esi,ebp
  42385f:	inc    ecx
  423860:	push   ecx
  423861:	add    al,0xe3
  423863:	outs   dx,BYTE PTR ds:[esi]
  423864:	or     al,0x2c
  423866:	mov    edi,0x538ae77c
  42386b:	pop    ds
  42386c:	loopne 0x423884
  42386e:	or     DWORD PTR [ebp+0x7c],edi
  423871:	stc    
  423872:	sub    dh,bh
  423874:	xlat   BYTE PTR ds:[ebx]
  423875:	dec    esi
  423876:	add    bl,ah
  423878:	imul   edi,DWORD PTR [ebp+0x50],0xe1f9aeee
  42387f:	xor    BYTE PTR ds:0x31a5385a,0xa2
  423886:	xchg   DWORD PTR ds:0xed6e3542,esi
  42388c:	cmp    cl,BYTE PTR [edi]
  42388e:	pop    esp
  42388f:	sub    al,0xff
  423891:	enter  0xff06,0x54
  423895:	xchg   ebp,eax
  423896:	pop    ebx
  423897:	or     eax,0x9b731995
  42389c:	test   DWORD PTR [esi+eax*2-0x5c0c958c],ecx
  4238a3:	ins    DWORD PTR es:[edi],dx
  4238a4:	jg     0x423883
  4238a6:	add    cl,bl
  4238a8:	dec    edx
  4238a9:	mov    ebp,0xc5a6f8fc
  4238ae:	xchg   edi,eax
  4238af:	stc    
  4238b0:	jnp    0x42388f
  4238b2:	and    eax,0x4302444a
  4238b7:	xchg   ebp,eax
  4238b8:	aam    0xd4
  4238ba:	in     al,dx
  4238bb:	or     dh,BYTE PTR [ebp-0x5132b74a]
  4238c1:	mov    ah,0xcb
  4238c3:	add    edx,DWORD PTR [eax-0x608f7dcd]
  4238c9:	xor    BYTE PTR [esp+ebx*4+0x21],0x96
  4238ce:	dec    ecx
  4238cf:	push   edx
  4238d0:	data16 xor ah,dl
  4238d3:	ins    DWORD PTR es:[edi],dx
  4238d4:	test   al,0x58
  4238d6:	daa    
  4238d7:	or     edi,DWORD PTR [edi+0x147964dd]
  4238dd:	cmp    edx,DWORD PTR [ecx+ecx*8-0x51b13320]
  4238e4:	xchg   edi,eax
  4238e5:	fisub  DWORD PTR [edx-0x4f]
  4238e8:	and    esi,DWORD PTR [ebx-0x58]
  4238eb:	imul   edi,DWORD PTR [ecx],0xffffff8d
  4238ee:	inc    ebx
  4238ef:	mov    WORD PTR [esi-0x2fead0d2],cs
  4238f5:	dec    edi
  4238f6:	fcom   DWORD PTR gs:[eax+0x64]
  4238fa:	xchg   esi,eax
  4238fb:	dec    ecx
  4238fc:	mov    ds:0x60af77c5,al
  423901:	cld    
  423902:	pop    di
  423904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423905:	push   ecx
  423906:	ins    BYTE PTR es:[edi],dx
  423907:	aad    0x36
  423909:	mov    al,ds:0x1958d983
  42390e:	mov    cl,0x74
  423910:	rdmsr  
  423912:	ret    
  423913:	(bad)  
  423914:	pop    ds
  423915:	test   eax,0x9f6671e8
  42391a:	nop
  42391b:	push   0x10
  42391d:	inc    esi
  42391e:	int3   
  42391f:	pop    ecx
  423920:	xchg   ebx,eax
  423921:	mov    eax,0xd4cced2
  423926:	xor    cl,BYTE PTR [ebx]
  423928:	mov    bl,BYTE PTR [edi-0xa]
  42392b:	pop    esp
  42392c:	xchg   edx,eax
  42392d:	idiv   DWORD PTR [esi+0x2c08e30]
  423933:	mov    bh,bh
  423935:	add    al,0xd2
  423937:	and    DWORD PTR [esi],esp
  423939:	daa    
  42393a:	pop    ss
  42393b:	adc    edx,esp
  42393d:	cmp    al,0xe5
  42393f:	mov    DWORD PTR [esi],edx
  423941:	mov    dh,0xee
  423943:	call   0x27787c75
  423948:	call   0x80589035
  42394d:	rcr    BYTE PTR [ecx+0x22dda032],cl
  423953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423954:	sar    BYTE PTR ds:0xbba7ee9,0x34
  42395b:	fwait
  42395c:	ret    0x1847
  42395f:	ins    BYTE PTR es:[edi],dx
  423960:	out    0xa2,al
  423962:	mov    ah,0x47
  423964:	lods   eax,DWORD PTR cs:[esi]
  423966:	popa   
  423967:	int    0xf2
  423969:	es xchg edi,eax
  42396b:	fld    QWORD PTR [edi+0x24]
  42396e:	push   esp
  42396f:	jecxz  0x4239f0
  423971:	iret   
  423972:	bound  ebp,QWORD PTR es:[edi]
  423975:	push   esp
  423976:	adc    bh,bl
  423978:	sub    al,0xf0
  42397a:	jle    0x423924
  42397c:	aaa    
  42397d:	loope  0x4239c3
  42397f:	sbb    eax,0x3e7438da
  423984:	mov    eax,0xa88ef367
  423989:	xor    ebp,DWORD PTR [ebx-0x23cd5aff]
  42398f:	(bad)  
  423990:	dec    esp
  423991:	jle    0x4239c8
  423993:	xchg   ecx,eax
  423994:	push   esp
  423995:	popa   
  423996:	jmp    0x423952
  423998:	push   edx
  423999:	push   edi
  42399a:	dec    esp
  42399b:	adc    BYTE PTR [esp+edi*4],ah
  42399e:	dec    esi
  42399f:	cmp    al,0xb6
  4239a1:	fisubr WORD PTR [edx+0x4f]
  4239a4:	dec    edi
  4239a5:	(bad)  
  4239a6:	iret   
  4239a7:	not    ah
  4239a9:	pop    ds
  4239aa:	pop    ebp
  4239ab:	push   ebp
  4239ac:	xchg   edx,eax
  4239ad:	fwait
  4239ae:	xchg   DWORD PTR [ecx+0x2f5539e0],esp
  4239b4:	aas    
  4239b5:	cs xchg bl,al
  4239b8:	pop    ss
  4239b9:	mov    cl,0x8a
  4239bb:	sahf   
  4239bc:	push   esp
  4239bd:	mov    ecx,0xc7a92aba
  4239c2:	sbb    al,0x4b
  4239c4:	aad    0x42
  4239c6:	mov    al,0x1a
  4239c8:	xor    ch,BYTE PTR [edi+0x76]
  4239cb:	(bad)  
  4239cd:	inc    ebx
  4239ce:	push   esp
  4239cf:	call   0x8fbc:0xb7d9c43e
  4239d6:	mov    ds:0xaf67bcac,al
  4239db:	(bad)  
  4239dc:	aas    
  4239dd:	push   edx
  4239de:	ins    BYTE PTR es:[edi],dx
  4239df:	rcl    BYTE PTR [ecx],cl
  4239e1:	add    BYTE PTR [ebx],0x9d
  4239e4:	xchg   ebp,eax
  4239e5:	lods   eax,DWORD PTR ds:[esi]
  4239e6:	jmp    0xefabd2a3
  4239eb:	sbb    al,0x58
  4239ed:	sub    eax,0xf3722719
  4239f2:	mul    BYTE PTR [eax]
  4239f4:	sbb    DWORD PTR [eax+0x742a9c09],edi
  4239fa:	nop
  4239fb:	retf   
  4239fc:	push   esp
  4239fd:	rol    BYTE PTR [ebx-0x59b0c7f9],cl
  423a03:	jbe    0x4239e3
  423a05:	push   ds
  423a06:	push   edi
  423a07:	mov    al,0x59
  423a09:	lods   eax,DWORD PTR ds:[esi]
  423a0a:	xor    bl,BYTE PTR [eax+edx*8+0xb]
  423a0e:	push   esp
  423a10:	imul   edx,DWORD PTR [edx-0x63d42362],0x62
  423a17:	call   0x43316688
  423a1c:	repnz cmp ch,BYTE PTR [ebx+0x16]
  423a20:	mov    ds:0x12aabb36,eax
  423a25:	icebp  
  423a26:	and    edx,edi
  423a28:	and    BYTE PTR [edi-0x63],dh
  423a2b:	ss add eax,0x2fbfe430
  423a31:	sbb    al,0x80
  423a33:	pushf  
  423a34:	mov    bl,0xbf
  423a36:	aas    
  423a37:	dec    esp
  423a38:	lahf   
  423a39:	mov    esp,0x6eec24bc
  423a3e:	or     esp,DWORD PTR [ebp-0x4c]
  423a41:	add    DWORD PTR [eax],eax
  423a43:	call   0x3423a49
  423a48:	sbb    dl,bh
  423a4a:	dec    ebp
  423a4b:	cli    
  423a4c:	adc    DWORD PTR [edi+ecx*1],esp
  423a4f:	mov    ebx,0x6afa64a1
  423a54:	sub    al,0xab
  423a56:	sbb    DWORD PTR [edi],eax
  423a58:	jmp    0x2c65:0x68da10c2
  423a5f:	icebp  
  423a60:	mov    esi,0xb5410c5
  423a65:	sbb    dh,0xbf
  423a68:	mov    eax,0x90078742
  423a6d:	pop    ds
  423a6e:	(bad)  
  423a70:	sub    eax,0x67643c2c
  423a75:	cs std 
  423a77:	xchg   esi,eax
  423a78:	pusha  
  423a79:	stos   DWORD PTR es:[edi],eax
  423a7a:	mov    DWORD PTR [eax-0x10],esp
  423a7d:	and    eax,0x90bd55ba
  423a82:	sub    DWORD PTR [edi-0x36a2c502],edi
  423a88:	jp     0x423a0a
  423a8a:	xchg   esp,eax
  423a8b:	dec    ecx
  423a8c:	mov    esp,DWORD PTR [ebx+0x31]
  423a8f:	ss scas eax,DWORD PTR es:[edi]
  423a91:	(bad)  [esi+0x2486691b]
  423a97:	xor    DWORD PTR [ebp-0x4b],eax
  423a9a:	xlat   BYTE PTR ds:[ebx]
  423a9b:	ret    0x1b6
  423a9e:	and    edi,DWORD PTR [eax]
  423aa0:	aaa    
  423aa1:	adc    edi,esp
  423aa3:	fwait
  423aa4:	ins    BYTE PTR es:[edi],dx
  423aa5:	(bad)
  423aa9:	mov    ds,WORD PTR [esi-0x2eb20361]
  423aaf:	inc    esi
  423ab0:	jmp    0xf6c6cfc0
  423ab5:	es jno 0x423ab5
  423ab8:	loop   0x423afa
  423aba:	test   eax,0x44eae651
  423abf:	(bad)  
  423ac0:	clc    
  423ac1:	pop    ebp
  423ac2:	popf   
  423ac3:	fdiv   DWORD PTR [edx-0x54ba03c2]
  423ac9:	and    DWORD PTR ds:0x254974c1,ebp
  423acf:	cli    
  423ad0:	outs   dx,DWORD PTR ds:[esi]
  423ad1:	iret   
  423ad2:	pop    eax
  423ad3:	pushf  
  423ad4:	(bad)  
  423ad5:	mov    dl,0x41
  423ad7:	mov    bl,BYTE PTR ds:0x117196dc
  423add:	xchg   ecx,eax
  423ade:	sub    DWORD PTR [eax+ebp*4-0x35c58b88],edi
  423ae5:	adc    al,0xd0
  423ae7:	xchg   ecx,eax
  423ae8:	pop    es
  423ae9:	adc    al,0x80
  423aeb:	push   0xe5cabdc6
  423af0:	cdq    
  423af1:	nop
  423af2:	mov    ebp,ds
  423af4:	sbb    al,0x1f
  423af6:	xor    DWORD PTR [ebp+0x34],ecx
  423af9:	push   esi
  423afa:	outs   dx,DWORD PTR ds:[esi]
  423afb:	sbb    esi,ecx
  423afd:	call   0x6e370b3a
  423b02:	or     BYTE PTR [esi+0x75c20d77],ch
  423b08:	cli    
  423b09:	ss cdq 
  423b0b:	sti    
  423b0c:	call   0x573c:0x28468641
  423b13:	adc    BYTE PTR [edx+0x28aae1b9],0x76
  423b1a:	test   eax,0xbad0baed
  423b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b20:	mov    edi,0xea548883
  423b25:	xor    BYTE PTR [ebx-0x21],0xc6
  423b29:	xor    ah,BYTE PTR [ecx]
  423b2b:	out    dx,al
  423b2c:	fnsave [eax+ebp*2+0x425aef57]
  423b33:	leave  
  423b34:	add    eax,0x3c4eac4d
  423b39:	shl    edx,0x7
  423b3c:	fsubr  QWORD PTR [esp+edi*4+0x25]
  423b40:	loopne 0x423b45
  423b42:	scas   al,BYTE PTR es:[edi]
  423b43:	mov    al,0x8f
  423b45:	iret   
  423b46:	adc    edx,DWORD PTR [esi-0x71]
  423b49:	cmp    eax,0xb36c9c5a
  423b4e:	xor    dh,al
  423b50:	sbb    al,0x9f
  423b52:	je     0x423af8
  423b54:	mov    esp,0x942fd407
  423b59:	int3   
  423b5a:	aaa    
  423b5b:	ins    BYTE PTR es:[edi],dx
  423b5c:	fcomp  DWORD PTR [ebx-0x51]
  423b5f:	sub    dh,BYTE PTR [ecx-0x57346f35]
  423b65:	xchg   ah,al
  423b67:	jnp    0x423b4b
  423b69:	sti    
  423b6a:	add    BYTE PTR [edx],al
  423b6c:	outs   dx,BYTE PTR ds:[esi]
  423b6d:	in     al,0xfd
  423b6f:	add    al,0xf
  423b72:	mov    cl,0xe7
  423b74:	push   esp
  423b75:	sub    DWORD PTR ds:0xf5cca1ab,0x51b73d8d
  423b7f:	add    al,0xe1
  423b81:	mov    ch,0xb
  423b83:	ret    0x6d16
  423b86:	cdq    
  423b87:	and    dl,ah
  423b89:	out    dx,eax
  423b8a:	fisub  WORD PTR [ecx-0x607fa3df]
  423b90:	push   ebx
  423b91:	mov    ch,0xa7
  423b93:	inc    esp
  423b94:	pusha  
  423b95:	mov    ds:0x5070398b,al
  423b9a:	add    BYTE PTR [ecx-0x31],dh
  423b9d:	push   ebp
  423b9e:	pusha  
  423b9f:	adc    ebx,DWORD PTR [ecx+eiz*4]
  423ba2:	inc    eax
  423ba3:	fnstenv [esi]
  423ba5:	push   ecx
  423ba6:	adc    DWORD PTR [esi*4+0x1876253],esi
  423bad:	pop    ebx
  423bae:	in     eax,dx
  423baf:	adc    dh,BYTE PTR [esi-0x80]
  423bb2:	jge    0x423bfc
  423bb4:	aam    0x59
  423bb6:	sbb    BYTE PTR [esi+0x2f],cl
  423bb9:	je     0x423bc8
  423bbb:	cmp    eax,0x9f7b0c98
  423bc0:	retf   0x18ba
  423bc3:	push   edi
  423bc4:	push   ebx
  423bc5:	sahf   
  423bc6:	inc    esp
  423bc7:	arpl   si,si
  423bc9:	scas   al,BYTE PTR es:[edi]
  423bca:	dec    esi
  423bcb:	cmp    al,0x2d
  423bcd:	xchg   esp,eax
  423bce:	popf   
  423bcf:	fnstcw WORD PTR [edi]
  423bd1:	nop
  423bd2:	add    BYTE PTR [ebx-0x7801fb85],dh
  423bd8:	jle    0x423c50
  423bda:	das    
  423bdb:	inc    esi
  423bdc:	push   eax
  423bdd:	pop    eax
  423bde:	les    esp,FWORD PTR [ecx+esi*8]
  423be1:	sbb    ch,BYTE PTR [ebx+0x3572edb9]
  423be7:	mov    edx,0x151a18c8
  423bec:	jns    0x423bff
  423bee:	fcmove st,st(1)
  423bf0:	fbstp  TBYTE PTR [edx-0x4ceef9cc]
  423bf6:	push   cs
  423bf7:	pushf  
  423bf8:	mov    edx,0x1589e10c
  423bfd:	jno    0x423c4a
  423bff:	xchg   edx,eax
  423c00:	cdq    
  423c01:	jbe    0x423c12
  423c03:	xchg   edx,eax
  423c04:	sub    ebx,ebp
  423c06:	xchg   ebx,eax
  423c07:	dec    edx
  423c08:	jmp    0x423c44
  423c0a:	cmp    al,0xe2
  423c0c:	fbld   TBYTE PTR [esi-0x546d5d2f]
  423c12:	pusha  
  423c13:	popf   
  423c14:	(bad)  
  423c15:	rcl    BYTE PTR [esi+0x24a7d07a],1
  423c1b:	dec    ebx
  423c1c:	stc    
  423c1d:	push   edi
  423c1e:	add    edi,DWORD PTR [ebp+0x3347b65c]
  423c24:	xchg   ecx,eax
  423c25:	jmp    0xe321:0xa69c9849
  423c2c:	push   0xb4892455
  423c31:	mov    dh,0xf3
  423c33:	mov    edi,0xe9fecdf3
  423c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c39:	mov    ah,BYTE PTR [ebx]
  423c3b:	adc    edx,DWORD PTR [ecx+ecx*8+0x1b64de0]
  423c42:	add    al,ch
  423c44:	add    DWORD PTR [eax],eax
  423c46:	add    BYTE PTR [ebp+0x58290035],ah
  423c4c:	jmp    0xf8af929e
  423c51:	scas   al,BYTE PTR es:[edi]
  423c52:	aas    
  423c53:	sub    al,0x5e
  423c55:	int    0x86
  423c57:	sahf   
  423c58:	(bad)  
  423c59:	retf   0xc701
  423c5c:	inc    ecx
  423c5d:	and    BYTE PTR [ebp+0x7250ec20],dl
  423c63:	add    esi,ecx
  423c65:	mov    cl,0x59
  423c67:	and    BYTE PTR [edx],ch
  423c69:	jo     0x423ca4
  423c6b:	in     eax,dx
  423c6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c6d:	loopne 0x423cd3
  423c6f:	cwde   
  423c70:	and    ecx,DWORD PTR [ebx]
  423c72:	fild   WORD PTR [edx+eiz*4-0x110c85c1]
  423c79:	(bad)  
  423c7a:	mov    esp,0xee9d829d
  423c7f:	adc    edx,esi
  423c81:	push   edx
  423c82:	mul    BYTE PTR [eax-0x4c]
  423c85:	sub    BYTE PTR [edx+0x5b],ch
  423c88:	repnz mov eax,ds:0xf6e7e3d5
  423c8e:	cmp    bl,BYTE PTR [ebx+0x44b0c89d]
  423c94:	sbb    edx,ecx
  423c96:	jne    0x423d15
  423c98:	mov    dl,0xa9
  423c9a:	call   DWORD PTR [ecx+0x4d]
  423c9d:	jbe    0x423ccd
  423c9f:	aaa    
  423ca0:	repz dec esi
  423ca2:	in     eax,0x82
  423ca4:	out    dx,eax
  423ca5:	lea    edx,[esi+ecx*1]
  423ca8:	test   BYTE PTR [eax-0x2d7c9e12],al
  423cae:	dec    edi
  423caf:	jecxz  0x423c72
  423cb1:	push   ecx
  423cb2:	test   eax,0x401c9bc3
  423cb7:	push   0xa5c0be6d
  423cbc:	xor    ah,dh
  423cbe:	adc    eax,0x24842fcc
  423cc3:	push   esi
  423cc4:	aaa    
  423cc5:	cbw    
  423cc7:	mov    cl,BYTE PTR [eax+0x5bc913a2]
  423ccd:	push   ds
  423cce:	xchg   ebx,eax
  423ccf:	iret   
  423cd0:	in     eax,dx
  423cd1:	sbb    bh,BYTE PTR [ecx]
  423cd3:	cmp    BYTE PTR [ebx+0x336481ca],dh
  423cd9:	outs   dx,BYTE PTR ds:[esi]
  423cda:	retf   0xc693
  423cdd:	xchg   edx,esi
  423cdf:	repz dec edi
  423ce1:	rcl    DWORD PTR [edx-0x48],cl
  423ce4:	mov    ebp,DWORD PTR [ecx-0x27]
  423ce7:	xchg   esp,eax
  423ce8:	jo     0x423ce9
  423cea:	jmp    0xd303:0x719c6185
  423cf1:	stc    
  423cf2:	add    eax,0x3848bf4c
  423cf7:	test   eax,0x611aaea0
  423cfc:	jae    0x423c92
  423cfe:	dec    esp
  423cff:	imul   ebx,ebp,0xfffffff9
  423d02:	imul   ebx,edx,0x7856dcbd
  423d08:	fld    TBYTE PTR ds:0xacbf6eb3
  423d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d0f:	jnp    0x423d09
  423d11:	imul   DWORD PTR [ebp+0x53d24409]
  423d17:	in     al,0x22
  423d19:	ja     0x423d48
  423d1b:	mov    DWORD PTR [ecx+0x47],esp
  423d1e:	out    dx,eax
  423d1f:	repnz add al,0x1f
  423d22:	mov    eax,ds:0x71547c52
  423d27:	adc    DWORD PTR [ebp-0x4d],edi
  423d2a:	fwait
  423d2b:	xchg   esi,eax
  423d2c:	stos   BYTE PTR es:[edi],al
  423d2d:	sbb    DWORD PTR ds:0x4324b845,0xc57817ad
  423d37:	xchg   esi,eax
  423d38:	jmp    0x1721:0x61f52e88
  423d3f:	mov    ch,0x8c
  423d41:	gs push eax
  423d43:	push   ebp
  423d44:	shl    DWORD PTR [edi+0x550b2678],0x7c
  423d4b:	mov    ch,0x10
  423d4d:	aad    0x2b
  423d4f:	inc    eax
  423d50:	mov    dh,0x53
  423d52:	mov    ss,WORD PTR [edi-0x78]
  423d55:	push   cs
  423d56:	mov    ah,0x29
  423d58:	mov    esi,0x82ba086a
  423d5d:	out    dx,eax
  423d5e:	mov    al,BYTE PTR [edi]
  423d60:	sbb    dl,dh
  423d62:	pop    es
  423d63:	mov    dx,0xf72e
  423d67:	repz out dx,eax
  423d69:	stos   BYTE PTR es:[edi],al
  423d6a:	mov    cl,0x7d
  423d6c:	pusha  
  423d6d:	mov    DWORD PTR [eax-0x1],0xfb205524
  423d74:	retf   0xff9a
  423d77:	xchg   BYTE PTR [eax],ah
  423d79:	jb     0x423dc2
  423d7b:	adc    BYTE PTR [eax+edi*1-0x11],dh
  423d7f:	out    0x9d,eax
  423d81:	lds    edx,FWORD PTR fs:[eax+0x4d524535]
  423d88:	or     al,0x32
  423d8a:	add    DWORD PTR [esi+0x64],edi
  423d8d:	mov    bh,0x5a
  423d8f:	ins    DWORD PTR es:[edi],dx
  423d90:	push   es
  423d91:	mov    esi,0x7a9bf840
  423d96:	fcom   QWORD PTR [eax]
  423d98:	add    dh,BYTE PTR ds:0x8dad0cc2
  423d9e:	jecxz  0x423d59
  423da0:	mov    ch,0xb9
  423da2:	loopne 0x423db4
  423da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423da5:	sub    DWORD PTR [esi],esi
  423da7:	ja     0x423dfc
  423da9:	shr    BYTE PTR ds:0x77459534,cl
  423daf:	scas   al,BYTE PTR es:[edi]
  423db0:	inc    ebx
  423db1:	mov    esi,DWORD PTR [ebx+0x2fa38bd5]
  423db7:	push   0x477c0124
  423dbc:	push   esi
  423dbd:	cld    
  423dbe:	or     DWORD PTR [eax],ecx
  423dc0:	(bad)  
  423dc1:	popa   
  423dc2:	adc    bh,bl
  423dc4:	movaps XMMWORD PTR [edi+0x3d88c5bb],xmm7
  423dcb:	mov    cl,dh
  423dcd:	loop   0x423e45
  423dcf:	jmp    0xcf34e8e7
  423dd4:	icebp  
  423dd5:	(bad)  
  423dd6:	aad    0xfc
  423dd8:	xchg   edi,eax
  423dd9:	push   es
  423dda:	stos   DWORD PTR es:[edi],eax
  423ddb:	js     0x423dfe
  423ddd:	pop    esp
  423dde:	cs scas al,BYTE PTR es:[edi]
  423de0:	sub    eax,0xd1d7ff5e
  423de5:	aas    
  423de6:	and    DWORD PTR [ecx+0x793626d3],0xffffffbf
  423ded:	xor    dh,dl
  423def:	rol    cl,1
  423df1:	scas   al,BYTE PTR es:[edi]
  423df2:	lahf   
  423df3:	xor    BYTE PTR [ebx+0x51],dl
  423df6:	push   ebx
  423df7:	mov    dh,0x31
  423df9:	mov    esp,0x81ff894
  423dfe:	mov    edx,0x3bbd16b0
  423e03:	sbb    ebx,DWORD PTR [eax+0x1d]
  423e06:	sub    edx,esp
  423e08:	(bad)  
  423e09:	sub    DWORD PTR [ebx-0x2d8a9a66],esi
  423e0f:	fbstp  TBYTE PTR [esi+0x79]
  423e12:	mov    bl,0x8b
  423e14:	ror    bh,cl
  423e16:	fcompp 
  423e18:	inc    ecx
  423e19:	add    esi,edi
  423e1b:	clc    
  423e1c:	and    bh,ah
  423e1e:	test   eax,0xd251f256
  423e23:	xchg   DWORD PTR [edi-0xf],edx
  423e26:	mov    ebx,0xa841011c
  423e2b:	jb     0x423dd5
  423e2d:	(bad)  
  423e2f:	xchg   esp,eax
  423e30:	or     bl,BYTE PTR [ebp-0x6a6060f4]
  423e36:	call   0xbd0a:0x74aa037d
  423e3d:	loop   0x423df1
  423e3f:	xor    eax,0xe80001b8
  423e44:	add    DWORD PTR [eax],eax
  423e46:	add    BYTE PTR [edx-0x42],dl
  423e49:	je     0x423ec4
  423e4b:	mov    ebx,0x3935fbf6
  423e50:	or     BYTE PTR [edx+edi*4],0x72
  423e54:	ins    BYTE PTR es:[edi],dx
  423e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e56:	or     al,BYTE PTR [edx+0x1e]
  423e59:	outs   dx,BYTE PTR ds:[esi]
  423e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e5b:	nop
  423e5c:	data16 jno 0x423e39
  423e5f:	xor    BYTE PTR [esi-0x2bda82f0],bh
  423e65:	(bad)  
  423e66:	pop    ds
  423e67:	sub    BYTE PTR ds:0x9a06b8c8,ch
  423e6d:	call   0x5195:0xd33a5ba0
  423e74:	inc    ebp
  423e75:	mov    ds:0x9db79659,eax
  423e7a:	add    BYTE PTR [ebx-0x3e3b0cb3],ch
  423e80:	mov    esp,0x483d43d0
  423e85:	call   0xb2152603
  423e8a:	shl    BYTE PTR [ebx+0x44],cl
  423e8d:	das    
  423e8e:	cld    
  423e8f:	and    al,0x4e
  423e91:	mov    dl,0xe6
  423e93:	dec    esp
  423e94:	sar    DWORD PTR [ebp+0x72],1
  423e97:	dec    ebp
  423e98:	dec    esi
  423e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e9a:	cmp    eax,0xbc512525
  423e9f:	(bad)  
  423ea0:	push   0xfa7072e2
  423ea5:	mov    ebp,0x5786cb13
  423eaa:	xlat   BYTE PTR ds:[ebx]
  423eab:	repnz push ecx
  423ead:	pop    esi
  423eae:	and    dl,BYTE PTR [ebx+0x7d]
  423eb1:	pop    es
  423eb2:	ins    BYTE PTR es:[edi],dx
  423eb3:	jnp    0x423e8c
  423eb5:	and    bl,BYTE PTR fs:[eax-0x309c7765]
  423ebc:	xchg   edi,eax
  423ebd:	mov    ebp,DWORD PTR [ebp-0x14]
  423ec0:	jle    0x423efd
  423ec2:	icebp  
  423ec3:	or     dh,ch
  423ec5:	adc    DWORD PTR [eax],ebx
  423ec7:	out    0xc7,eax
  423ec9:	pop    esi
  423eca:	push   edi
  423ecb:	clc    
  423ecc:	inc    ebx
  423ecd:	aaa    
  423ece:	aaa    
  423ecf:	mov    eax,0xe9356d3d
  423ed4:	fwait
  423ed5:	or     BYTE PTR [edi+eiz*1-0x18],0x18
  423eda:	sbb    al,0x6c
  423edc:	loopne 0x423e7e
  423ede:	(bad)  [edi-0x7c117d5f]
  423ee4:	inc    esi
  423ee5:	add    eax,0xa03ec59a
  423eea:	lahf   
  423eeb:	stos   DWORD PTR es:[edi],eax
  423eec:	inc    esp
  423eed:	sub    dh,BYTE PTR [edi-0x31]
  423ef0:	outs   dx,DWORD PTR ds:[esi]
  423ef1:	gs mov dh,0x7b
  423ef4:	imul   edx,ebp,0xffffffd0
  423ef7:	add    DWORD PTR [edx-0x2e8f583b],edx
  423efd:	inc    ebp
  423efe:	pop    ebx
  423eff:	call   0x7722:0x65496108
  423f06:	sub    eax,0xf62751de
  423f0b:	(bad)  
  423f0c:	fstp   TBYTE PTR [ebx+0x62]
  423f0f:	jmp    0x1df4:0xfd373b4f
  423f16:	and    eax,0x18abfcc9
  423f1b:	cmc    
  423f1c:	cli    
  423f1d:	sbb    eax,0x3b18c7f0
  423f22:	(bad)  
  423f23:	leave  
  423f24:	je     0x423ec3
  423f26:	xchg   BYTE PTR [edi-0x54],bh
  423f29:	mov    cl,0xa0
  423f2b:	add    BYTE PTR [edx-0x49],dl
  423f2e:	jne    0x423ee8
  423f30:	mov    al,ds:0xe132bbfc
  423f35:	data16 or dh,al
  423f38:	mov    cl,BYTE PTR [edx-0x137f5821]
  423f3e:	lods   al,BYTE PTR ds:[esi]
  423f3f:	fsub   QWORD PTR [ecx+0x5ba42179]
  423f45:	pushf  
  423f46:	(bad)  
  423f47:	xor    ebp,DWORD PTR [eax-0x4052a853]
  423f4d:	adc    ch,dl
  423f4f:	loop   0x423edd
  423f51:	(bad)  
  423f54:	adc    al,0x1
  423f56:	mov    WORD PTR [esp+edi*2+0x2f],es
  423f5a:	(bad)
  423f5d:	add    ecx,DWORD PTR [ebp-0x1e17c1e9]
  423f63:	mov    dh,0x1b
  423f65:	mov    esi,0xba3186cf
  423f6a:	(bad)  
  423f6b:	out    dx,eax
  423f6c:	adc    al,0x18
  423f6e:	mov    ah,0x1e
  423f70:	outs   dx,DWORD PTR ds:[esi]
  423f71:	inc    eax
  423f72:	sub    BYTE PTR [eax+0x28ab68e7],bh
  423f78:	iret   
  423f79:	adc    edx,edx
  423f7b:	(bad)  
  423f7c:	mov    al,0xfe
  423f7e:	and    eax,0x95abb4b3
  423f83:	adc    DWORD PTR [ebx-0x18],edx
  423f86:	jl     0x423f50
  423f88:	mov    ds:0x3395120,al
  423f8d:	ror    edx,cl
  423f8f:	adc    bl,al
  423f91:	push   es
  423f92:	enter  0x7518,0xf3
  423f96:	inc    eax
  423f97:	or     eax,0x8d76e9bf
  423f9c:	dec    edi
  423f9d:	fimul  DWORD PTR [edi+0x12f927a0]
  423fa3:	cmp    al,0x74
  423fa5:	jmp    0xe614:0xff850d38
  423fac:	mov    eax,0x774a8919
  423fb1:	mov    ds:0x87c9f005,al
  423fb6:	and    al,0xdd
  423fb8:	jecxz  0x423f5b
  423fba:	jnp    0x423fb1
  423fbc:	adc    dl,BYTE PTR [edi+0x15138818]
  423fc2:	sub    esp,ebx
  423fc4:	sub    eax,0xc9f5f636
  423fc9:	inc    edi
  423fca:	in     eax,0xc2
  423fcc:	or     BYTE PTR [eax-0x5a],ch
  423fcf:	leave  
  423fd0:	out    0x12,al
  423fd2:	dec    ebp
  423fd3:	mov    eax,0x9bf1a308
  423fd8:	sub    ebp,DWORD PTR [edi-0x36]
  423fdb:	mov    al,ds:0x73f6c10a
  423fe0:	add    esi,ecx
  423fe2:	lock (bad) 
  423fe4:	jg     0x423f84
  423fe6:	imul   ebp,DWORD PTR [edi+0x2e],0x918491c2
  423fed:	add    ch,BYTE PTR [edi+0x76e1118a]
  423ff3:	mov    dl,al
  423ff5:	ss nop
  423ff7:	out    0xd7,eax
  423ff9:	mov    esi,0xc0e8b05a
  423ffe:	inc    ebx
  423fff:	push   0x856eac55
  424004:	repnz mov esp,DWORD PTR [esi]
  424007:	ds mov bl,0xf2
  42400a:	mov    ebp,0x242033a2
  42400f:	imul   ecx,eax,0xf252121d
  424015:	mov    eax,0xce489dfd
  42401a:	xchg   edx,eax
  42401b:	xor    eax,0xeb04c980
  424020:	loop   0x423fa9
  424022:	inc    ecx
  424023:	jmp    0x1a23:0x3826db7d
  42402a:	sub    edx,ecx
  42402c:	repnz mov bh,0x83
  42402f:	nop
  424030:	mov    bl,0x8c
  424032:	fild   QWORD PTR [edi-0x6e002c01]
  424038:	(bad)  
  42403a:	adc    al,0xdb
  42403c:	push   ebx
  42403d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42403e:	mov    esp,0x1ba1d
  424043:	call   0x3424049
  424048:	(bad)  
  424049:	mov    esp,0x866b4b43
  42404e:	add    ebx,DWORD PTR [eax-0x6003c5a3]
  424054:	fs mov dh,0x8a
  424057:	(bad)  
  424058:	mov    esi,0xb551a802
  42405d:	xor    eax,0x41988d13
  424062:	inc    eax
  424063:	add    al,0xd3
  424065:	sbb    al,0xfb
  424067:	mov    edx,DWORD PTR [ebx-0x33434009]
  42406d:	ins    BYTE PTR es:[edi],dx
  42406e:	adc    eax,0xcfcfc057
  424073:	ret    0x5dfb
  424076:	sbb    al,BYTE PTR [esi+0x6ca89224]
  42407c:	jbe    0x4240ef
  42407e:	xor    eax,0x879db154
  424083:	shl    BYTE PTR [edi-0x5b],1
  424086:	mov    dl,0x18
  424088:	and    eax,0x3c11bdb4
  42408d:	push   cs
  42408e:	add    DWORD PTR [ecx],edx
  424090:	test   cl,dl
  424092:	push   eax
  424093:	ficomp DWORD PTR [ecx+0x536d5d3a]
  424099:	jge    0x424097
  42409b:	sahf   
  42409c:	push   eax
  42409d:	sbb    dh,BYTE PTR [esi-0x44]
  4240a0:	popf   
  4240a1:	ss and eax,0x3b54e412
  4240a7:	in     eax,0x4d
  4240a9:	sbb    eax,DWORD PTR [eax-0x2b90f132]
  4240af:	sbb    dh,dl
  4240b1:	lods   eax,DWORD PTR ds:[esi]
  4240b2:	jo     0x42403a
  4240b4:	dec    ebx
  4240b5:	shr    BYTE PTR [eax-0x39f95303],1
  4240bb:	hlt    
  4240bc:	dec    esi
  4240bd:	in     eax,0x60
  4240bf:	out    dx,al
  4240c0:	ins    DWORD PTR es:[edi],dx
  4240c1:	out    dx,al
  4240c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240c3:	icebp  
  4240c4:	fst    QWORD PTR [eax+0x6ea38394]
  4240ca:	pusha  
  4240cb:	inc    ebp
  4240cc:	adc    BYTE PTR [edi-0x4829f964],0xe2
  4240d3:	loop   0x424127
  4240d5:	fst    st(5)
  4240d7:	add    al,bl
  4240d9:	pop    ebx
  4240da:	imul   esp,DWORD PTR [edi+eax*1-0x3df5eeb],0x2d
  4240e2:	icebp  
  4240e3:	adc    BYTE PTR cs:[esi-0x25],0x87
  4240e8:	shl    DWORD PTR [ebp+0x68be78d6],cl
  4240ee:	dec    eax
  4240ef:	imul   edx,DWORD PTR [esp+edx*4+0x57],0x19f70129
  4240f7:	jle    0x424138
  4240f9:	adc    dh,BYTE PTR [ebx+eax*4]
  4240fc:	dec    ecx
  4240fd:	mov    eax,ds:0x1762b74b
  424102:	dec    esp
  424103:	push   edx
  424104:	dec    esp
  424105:	jp     0x424178
  424107:	jbe    0x4240bc
  424109:	es sub edi,esi
  42410c:	ss xor eax,0x9c9aaa54
  424112:	mov    BYTE PTR [eax+eiz*8+0xf428be7],al
  424119:	jecxz  0x4240f4
  42411b:	lahf   
  42411c:	xchg   edx,eax
  42411d:	call   0x9cc1a27a
  424122:	retf   0x28dc
  424125:	and    ebx,DWORD PTR [eax]
  424127:	in     eax,dx
  424128:	xlat   BYTE PTR ds:[ebx]
  424129:	jae    0x4240ba
  42412b:	and    al,0xbf
  42412d:	daa    
  42412e:	adc    al,0xe4
  424130:	jbe    0x42413b
  424132:	lahf   
  424133:	push   cs
  424134:	cli    
  424135:	data16 sub al,0xd
  424138:	test   al,0xa8
  42413a:	mov    ebp,0xf46acebe
  42413f:	dec    eax
  424140:	lds    edi,FWORD PTR [edx-0x3b807077]
  424146:	cs test al,0xf4
  424149:	stos   DWORD PTR es:[edi],eax
  42414a:	mov    eax,ds:0x56d32209
  42414f:	call   0x7e41abe2
  424154:	mov    DWORD PTR [edx],ecx
  424156:	add    eax,0x2fc0e381
  42415b:	adc    eax,0xbdbea155
  424160:	jl     0x424114
  424162:	sub    esi,esp
  424164:	adc    eax,0xbc6b238d
  424169:	iret   
  42416a:	es out 0x3e,al
  42416d:	xor    al,0x53
  42416f:	nop
  424170:	pop    ebp
  424171:	dec    edx
  424172:	push   0x28412a52
  424177:	push   ecx
  424178:	push   ebx
  424179:	xor    eax,0xc7653bd9
  42417e:	inc    esi
  42417f:	add    DWORD PTR [ecx],0xb68ce91d
  424185:	add    eax,0x223aef2
  42418a:	test   BYTE PTR [edi+ebp*1],0xac
  42418e:	mov    bh,0x80
  424190:	hlt    
  424191:	push   0xffffffb3
  424193:	out    dx,eax
  424194:	and    BYTE PTR [ecx],dl
  424196:	(bad)  
  424197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424198:	fstp   QWORD PTR [edx-0x7e5ec74d]
  42419e:	cwde   
  42419f:	movzx  ecx,WORD PTR [esi+0x73]
  4241a3:	add    al,0x92
  4241a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241a6:	mov    ebx,0x3f871f97
  4241ab:	push   cs
  4241ac:	push   cs
  4241ad:	and    al,0x75
  4241af:	mov    eax,DWORD PTR [edi+0xf281016]
  4241b5:	push   0x76
  4241b7:	std    
  4241b8:	in     al,dx
  4241b9:	and    ecx,edx
  4241bb:	push   ds
  4241bc:	xlat   BYTE PTR ds:[ebx]
  4241bd:	fs jge 0x4241ae
  4241c0:	xchg   BYTE PTR [eax],dh
  4241c2:	in     eax,0xd3
  4241c4:	call   0xa7d5:0x83428efd
  4241cb:	ret    0xaa02
  4241ce:	xchg   esi,eax
  4241cf:	data16 ins BYTE PTR es:[edi],dx
  4241d1:	pushf  
  4241d2:	mov    eax,0x2478d771
  4241d7:	repz mov esp,0xfa4cc313
  4241dd:	hlt    
  4241de:	add    ecx,DWORD PTR [edi-0x27]
  4241e1:	cmp    BYTE PTR [ecx+0x1c071e49],bl
  4241e7:	fcom   QWORD PTR [ecx]
  4241e9:	add    BYTE PTR [ebp-0x3556161a],bh
  4241ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241f0:	mov    esp,0x69bddd74
  4241f5:	jno    0x424206
  4241f7:	push   ds
  4241f8:	jns    0x424217
  4241fa:	and    al,0x6e
  4241fc:	es sbb BYTE PTR gs:0xa01f20cc,dh
  424204:	mov    bh,0xb7
  424206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424207:	xor    esi,esp
  424209:	xor    cl,BYTE PTR [esi-0x13740b05]
  42420f:	les    ecx,FWORD PTR [edi+0x63c79a70]
  424215:	or     ecx,DWORD PTR [edx+0x3c4ffbf7]
  42421b:	push   ecx
  42421c:	test   DWORD PTR [ebp+0x61],esi
  42421f:	repnz clc 
  424221:	test   eax,0x6116b137
  424226:	das    
  424227:	pop    ds
  424228:	adc    al,0xf6
  42422a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42422b:	sbb    al,0xa
  42422d:	loop   0x42429e
  42422f:	dec    ecx
  424230:	test   eax,0x9df89d38
  424235:	in     eax,dx
  424236:	std    
  424237:	xchg   ebx,eax
  424238:	retf   
  424239:	or     eax,0xcdee6aae
  42423e:	loop   0x424245
  424240:	mov    esp,0x1e80001
  424245:	add    BYTE PTR [eax],al
  424247:	add    BYTE PTR [ebp+0x14],dh
  42424a:	cmp    eax,0x53e101b3
  42424f:	push   eax
  424250:	push   ebp
  424251:	repz mov bh,0xde
  424254:	fdivr  DWORD PTR [ecx+0x58896f3d]
  42425a:	add    eax,0xdeffe488
  42425f:	mov    bl,dl
  424261:	imul   ecx,edx,0xffffffa4
  424264:	es out 0xc0,eax
  424267:	mov    BYTE PTR [ecx+0x2e],ah
  42426a:	or     DWORD PTR [edx],ebp
  42426c:	inc    edi
  42426d:	xchg   edx,eax
  42426e:	ds add eax,0xc718aab0
  424274:	mov    bh,0xd
  424276:	adc    ah,BYTE PTR [ebp+0x1d5de327]
  42427c:	pop    es
  42427d:	xchg   ecx,eax
  42427e:	out    dx,eax
  42427f:	out    0x82,eax
  424281:	push   ss
  424282:	pop    ebp
  424283:	inc    esi
  424284:	stos   DWORD PTR es:[edi],eax
  424285:	cmp    DWORD PTR [edx-0x34f61611],edi
  42428b:	mov    dl,0x39
  42428d:	mov    ds:0x8419691e,al
  424292:	adc    bh,dl
  424294:	xlat   BYTE PTR ds:[ebx]
  424295:	add    edi,esp
  424297:	jl     0x4242f7
  424299:	adc    eax,0x4bf7ec97
  42429e:	sbb    eax,0x4378d7d6
  4242a3:	inc    eax
  4242a4:	mov    al,ds:0xaf269f2
  4242a9:	call   FWORD PTR [edx+0x7d]
  4242ac:	cwde   
  4242ad:	fnstcw WORD PTR [ecx-0x3f]
  4242b0:	jnp    0x4242e6
  4242b2:	add    ecx,0xffffffef
  4242b5:	xor    edx,DWORD PTR [esi-0x4d]
  4242b8:	sti    
  4242b9:	cmp    ecx,DWORD PTR [edi]
  4242bb:	mov    eax,0x8ab0b141
  4242c0:	inc    edi
  4242c1:	add    DWORD PTR [eax],edx
  4242c3:	jae    0x4242da
  4242c5:	sbb    BYTE PTR [esi+eax*1],bh
  4242c8:	lahf   
  4242c9:	es out 0xdf,al
  4242cc:	dec    edx
  4242cd:	mov    ebp,0x6a3b906d
  4242d2:	das    
  4242d3:	cmc    
  4242d4:	inc    esp
  4242d5:	dec    ebx
  4242d6:	xor    BYTE PTR [ebx],al
  4242d8:	add    eax,0x4550f48e
  4242dd:	xchg   esi,eax
  4242de:	or     DWORD PTR cs:[eax],ebx
  4242e1:	ins    BYTE PTR es:[edi],dx
  4242e2:	xchg   esi,eax
  4242e3:	jnp    0x4242ea
  4242e5:	pop    ds
  4242e6:	gs out dx,eax
  4242e8:	push   ebp
  4242e9:	(bad)  
  4242ea:	mov    eax,0xdaf36558
  4242ef:	popf   
  4242f0:	sbb    esi,edi
  4242f2:	mov    ds:0x1e97cccc,al
  4242f7:	cmp    eax,0x5b09350b
  4242fc:	xor    DWORD PTR [esi-0x6de19078],0x32933642
  424306:	mov    esi,DWORD PTR [ecx]
  424308:	dec    esp
  424309:	add    BYTE PTR [esi+eax*4],ch
  42430c:	pop    ds
  42430d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42430e:	pop    eax
  42430f:	mov    BYTE PTR [edx+0x22],dl
  424312:	pop    es
  424313:	cmp    ebp,edi
  424315:	sub    al,0xa1
  424317:	test   eax,0x28c5557b
  42431c:	faddp  st(5),st
  42431e:	jmp    0x9d01aa16
  424323:	dec    edx
  424324:	push   eax
  424325:	and    cl,BYTE PTR [edi-0x65]
  424328:	imul   esi,ebx,0x7351dac3
  42432e:	dec    esi
  42432f:	sti    
  424330:	mov    edi,0x8a550581
  424335:	lods   eax,DWORD PTR ds:[esi]
  424336:	div    DWORD PTR [ebx+0x37]
  424339:	xchg   edi,eax
  42433a:	push   ss
  42433b:	dec    edx
  42433d:	push   esp
  42433e:	out    dx,al
  42433f:	mov    al,0x76
  424341:	(bad)  
  424342:	shl    DWORD PTR ds:0x27a3326c,cl
  424348:	push   edx
  424349:	sub    al,0xf6
  42434b:	cmp    BYTE PTR [ebx+edx*4+0xe],0x9b
  424350:	add    eax,0xc167f5c9
  424355:	xchg   DWORD PTR [eax-0x87dca5a],esi
  42435b:	cmp    DWORD PTR [esi],eax
  42435d:	xchg   ebx,eax
  42435e:	pop    eax
  42435f:	mov    ecx,0x4ba7728c
  424364:	int3   
  424365:	fs pop eax
  424367:	or     BYTE PTR [ebx+0x6c033c97],0xe
  42436e:	pop    es
  42436f:	jge    0x4243b4
  424371:	leave  
  424372:	mov    dl,0x18
  424374:	bound  ebx,QWORD PTR [esp+ecx*8+0x2a]
  424378:	cmp    DWORD PTR [edi],ebp
  42437a:	out    dx,al
  42437b:	pop    ds
  42437c:	or     esp,DWORD PTR [ecx-0x4af5ccca]
  424382:	jl     0x42438e
  424384:	cmp    bh,BYTE PTR [edx+ebx*1]
  424387:	push   ebp
  424388:	arpl   WORD PTR [edi-0x7f],si
  42438b:	stc    
  42438c:	lods   al,BYTE PTR ds:[esi]
  42438d:	imul   edi,DWORD PTR [edx-0x5],0xccf0ec51
  424394:	pop    edx
  424395:	jl     0x424354
  424397:	mov    ds:0x7ef80da1,eax
  42439c:	dec    edx
  42439d:	mov    ecx,0x20015d2c
  4243a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243a3:	jnp    0x424355
  4243a5:	jecxz  0x42434c
  4243a7:	stc    
  4243a8:	(bad)  
  4243a9:	xor    bh,BYTE PTR ds:0xda012ff9
  4243af:	enter  0x5130,0x51
  4243b3:	cmp    eax,0x47cf3624
  4243b8:	adc    ah,BYTE PTR [ecx]
  4243ba:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243bc:	sub    eax,edi
  4243be:	stos   DWORD PTR es:[edi],eax
  4243bf:	push   es
  4243c0:	out    0x11,al
  4243c2:	sub    eax,0xe453b49d
  4243c7:	xor    ebp,DWORD PTR [eax+0x44cc5d49]
  4243cd:	add    eax,0x76493472
  4243d2:	in     al,0xfd
  4243d4:	fisub  WORD PTR [edx]
  4243d6:	mov    BYTE PTR [ebp+0x3b],al
  4243d9:	imul   ecx,esp,0x9adcb026
  4243df:	in     al,0x64
  4243e1:	pop    esp
  4243e2:	adc    DWORD PTR [eax+0x6f],0x77
  4243e6:	sub    eax,edx
  4243e8:	jge    0x42445c
  4243ea:	scas   eax,DWORD PTR es:[edi]
  4243eb:	arpl   WORD PTR [ecx-0x2e],cx
  4243ee:	mov    dh,0xa9
  4243f0:	cmc    
  4243f1:	cmc    
  4243f2:	push   esp
  4243f3:	and    BYTE PTR [edi-0x210d535d],0xa8
  4243fa:	ss mov bl,0x40
  4243fd:	imul   DWORD PTR [eax-0x19]
  424400:	outs   dx,DWORD PTR ds:[esi]
  424401:	loop   0x4243f0
  424403:	cmc    
  424404:	cmp    al,0xf3
  424406:	mov    dh,0xa6
  424408:	sahf   
  424409:	adc    al,0x27
  42440b:	or     eax,0xfdcc6a8a
  424410:	jno    0x4243ec
  424412:	loope  0x42443f
  424414:	lds    esi,FWORD PTR [ebx]
  424416:	test   eax,0x20d298e
  42441b:	lds    ebp,FWORD PTR [esi+edi*8]
  42441e:	xor    eax,0x906ae40f
  424423:	cdq    
  424424:	cmp    al,0x8d
  424426:	scas   eax,DWORD PTR es:[edi]
  424427:	pop    ds
  424428:	sbb    BYTE PTR [ebx],bh
  42442a:	inc    edx
  42442b:	inc    esp
  42442c:	xchg   esi,eax
  42442d:	cmp    DWORD PTR [ebx-0x70f247da],esi
  424433:	lahf   
  424434:	mov    edi,0xd972b9a6
  424439:	adc    esp,edi
  42443b:	adc    al,0xbb
  42443d:	popa   
  42443e:	(bad)  
  42443f:	in     eax,dx
  424440:	mov    ebp,0x1e80001
  424445:	add    BYTE PTR [eax],al
  424447:	sbb    cl,BYTE PTR [ebp-0x3a]
  42444a:	cmc    
  42444b:	add    dl,BYTE PTR [eax]
  42444d:	popa   
  42444e:	es jo  0x4244c5
  424451:	fst    DWORD PTR [ebx-0x270fd91e]
  424457:	xchg   edx,eax
  424458:	test   al,0xe1
  42445a:	icebp  
  42445b:	je     0x4243f6
  42445d:	out    dx,eax
  42445e:	jns    0x424401
  424460:	xor    DWORD PTR cs:[ecx-0x3c],esp
  424464:	dec    esp
  424465:	push   ds
  424466:	les    edi,FWORD PTR [ebx+ebp*8]
  424469:	not    DWORD PTR [ecx+0x73]
  42446c:	jle    0x424434
  42446e:	outs   dx,BYTE PTR ds:[esi]
  42446f:	pop    ss
  424470:	jge    0x424441
  424472:	cmp    BYTE PTR [eax],dl
  424474:	(bad)  
  424475:	sub    bh,bh
  424477:	add    dh,BYTE PTR [ebx]
  424479:	inc    ebp
  42447a:	xchg   DWORD PTR [edx],ebp
  42447c:	outs   dx,BYTE PTR ds:[esi]
  42447d:	fdivrp st(4),st
  42447f:	mov    ds:0x955ff3d5,eax
  424484:	clc    
  424485:	(bad)  
  424486:	enter  0x2d83,0x23
  42448a:	pop    ebx
  42448b:	adc    edi,ebx
  42448d:	and    bl,BYTE PTR [ebx+0x9b22094]
  424493:	sbb    al,0xce
  424495:	ds gs hlt 
  424498:	inc    eax
  424499:	or     ebx,ebp
  42449b:	outs   dx,DWORD PTR ds:[esi]
  42449c:	inc    ecx
  42449d:	xor    BYTE PTR [edx+eiz*8+0x39798bb3],0x8a
  4244a5:	adc    DWORD PTR [eax],edx
  4244a7:	nop
  4244a8:	aam    0x2c
  4244aa:	xor    ebp,DWORD PTR [esi]
  4244ac:	retf   0xe9b9
  4244af:	cld    
  4244b0:	sahf   
  4244b1:	imul   cl
  4244b3:	loope  0x424477
  4244b5:	mov    ch,0x9f
  4244b7:	dec    ebp
  4244b8:	inc    eax
  4244b9:	xchg   esi,eax
  4244ba:	cmp    al,0x60
  4244bc:	add    al,0xca
  4244be:	int    0x64
  4244c0:	(bad)  
  4244c1:	in     al,0xd1
  4244c3:	in     al,0x1d
  4244c5:	sub    BYTE PTR [esi],ah
  4244c7:	stos   DWORD PTR es:[edi],eax
  4244c8:	cmc    
  4244c9:	std    
  4244ca:	cmp    eax,0x58d0d8b8
  4244cf:	loope  0x42445c
  4244d1:	pushf  
  4244d2:	xchg   esi,eax
  4244d3:	xor    BYTE PTR [edx-0x22],ch
  4244d6:	inc    edi
  4244d7:	inc    esi
  4244d8:	ds js  0x4244fe
  4244db:	out    dx,eax
  4244dc:	adc    al,0xae
  4244de:	dec    esi
  4244df:	sub    eax,DWORD PTR [eax]
  4244e1:	dec    esp
  4244e2:	inc    esi
  4244e3:	dec    edi
  4244e4:	pop    ebp
  4244e5:	inc    eax
  4244e6:	daa    
  4244e7:	dec    ecx
  4244e8:	sbb    ebx,ecx
  4244ea:	out    0xf0,eax
  4244ec:	stos   BYTE PTR es:[edi],al
  4244ed:	xlat   BYTE PTR ds:[ebx]
  4244ee:	adc    edi,DWORD PTR [eax-0x6c]
  4244f1:	loope  0x4244d8
  4244f3:	aaa    
  4244f4:	lods   eax,DWORD PTR ds:[esi]
  4244f5:	and    al,0x6d
  4244f7:	ja     0x424545
  4244f9:	mov    dl,0x7
  4244fb:	add    edi,edx
  4244fd:	push   ecx
  4244fe:	aam    0xc1
  424500:	add    BYTE PTR [ecx+ebp*2+0xc24f9c6],ah
  424507:	cwde   
  424508:	and    DWORD PTR [eax-0x42],edx
  42450b:	jne    0x42456c
  42450d:	mov    DWORD PTR [ebx],edx
  42450f:	mov    DWORD PTR [ebx-0x7a2cc849],esi
  424515:	lods   eax,DWORD PTR ds:[esi]
  424516:	ins    BYTE PTR es:[edi],dx
  424517:	lea    ebx,[eax+0x65d9cf1e]
  42451d:	sahf   
  42451e:	stos   BYTE PTR es:[edi],al
  42451f:	sub    al,0x99
  424521:	dec    esi
  424522:	xchg   edx,eax
  424523:	mov    DWORD PTR [ebx+0x735252ad],esp
  424529:	xchg   edx,eax
  42452a:	sub    eax,0x47ca75a4
  424530:	dec    edi
  424531:	es inc ebx
  424533:	mov    ecx,0x16cfc42b
  424538:	sbb    al,BYTE PTR [eax+0x7ec077e3]
  42453e:	adc    DWORD PTR [ebx-0x32],edx
  424541:	mov    ecx,0xfb2643e
  424546:	repnz xchg esp,eax
  424548:	mov    ebx,DWORD PTR [eax]
  42454a:	sub    BYTE PTR [ebx+ebp*1],bl
  42454d:	fdivrp st(5),st
  42454f:	pavgw  mm4,mm4
  424552:	pop    es
  424553:	lods   eax,DWORD PTR ds:[esi]
  424554:	and    al,BYTE PTR [esi-0x77]
  424557:	inc    ecx
  424558:	push   cs
  424559:	sbb    DWORD PTR ds:0x4ef1c25e,0xf349d1d8
  424563:	retf   
  424564:	sub    esp,DWORD PTR [ebx]
  424566:	test   al,0x19
  424568:	sahf   
  424569:	xchg   esi,eax
  42456a:	adc    BYTE PTR [ebx],dh
  42456c:	mov    eax,0x8c4402b4
  424571:	xor    BYTE PTR [edi+ebp*2],al
  424574:	loop   0x424514
  424576:	adc    dl,dh
  424578:	xor    esp,DWORD PTR [eax+0x1444c326]
  42457e:	mov    bl,0x65
  424580:	lock mov cl,0x3d
  424583:	jno    0x4245f4
  424585:	sub    BYTE PTR [esi+0x317daff8],dh
  42458b:	push   ebx
  42458c:	fsub   QWORD PTR [edi]
  42458e:	xchg   esp,eax
  42458f:	add    BYTE PTR [ebp+eax*2-0x66],ch
  424593:	mov    esi,0xc68337fe
  424598:	mov    ds:0xc3a8406c,al
  42459d:	popa   
  42459e:	dec    esi
  42459f:	mov    ch,0xdc
  4245a1:	ds pop ebx
  4245a3:	jp     0x424566
  4245a5:	stos   BYTE PTR es:[edi],al
  4245a6:	jo     0x4245d5
  4245a8:	popf   
  4245a9:	xor    al,0xbe
  4245ab:	jmp    0xe44a:0x405f2259
  4245b2:	rcr    edx,0xf5
  4245b5:	push   ss
  4245b6:	retf   
  4245b7:	shl    BYTE PTR [edx-0x651e4fb7],cl
  4245bd:	inc    esp
  4245be:	inc    ebx
  4245bf:	sub    dh,bh
  4245c1:	mov    ch,0xda
  4245c3:	popa   
  4245c4:	mov    ebp,0xe3b86d49
  4245c9:	test   BYTE PTR [edx-0x719d9e38],ah
  4245cf:	mov    al,ds:0x560f6322
  4245d4:	mov    ebx,0xd057c0f0
  4245d9:	and    eax,0x204ed925
  4245de:	push   ss
  4245df:	mov    dl,0x32
  4245e1:	data16 cld 
  4245e3:	inc    edx
  4245e4:	mov    DWORD PTR [eax*8-0x6fda53c2],ebp
  4245eb:	repnz loop 0x424657
  4245ee:	loope  0x4245aa
  4245f0:	inc    ebp
  4245f1:	dec    edi
  4245f2:	out    dx,eax
  4245f3:	(bad)  
  4245f4:	fwait
  4245f5:	xchg   esp,eax
  4245f6:	(bad)
  4245f9:	add    al,0x5f
  4245fb:	adc    esp,DWORD PTR [bx+si]
  4245fe:	pop    edx
  4245ff:	jmp    0x7c56b15f
  424604:	inc    esi
  424605:	in     al,dx
  424606:	sub    BYTE PTR [eax-0x4d89071a],cl
  42460c:	cwde   
  42460d:	mov    dl,0x84
  42460f:	cmp    bh,BYTE PTR [ebp-0x5f]
  424612:	jmp    0xba3c:0x667f573
  424619:	inc    edx
  42461a:	push   esi
  42461b:	jg     0x424672
  42461d:	sti    
  42461e:	cmc    
  42461f:	sahf   
  424620:	je     0x42469e
  424622:	sti    
  424623:	pop    edi
  424624:	mov    edi,ebp
  424626:	and    BYTE PTR [ebp+0x3a79d14d],dh
  42462c:	mov    bl,0x2d
  42462e:	dec    ecx
  42462f:	dec    edx
  424630:	jo     0x42460a
  424632:	jl     0x42462e
  424634:	cld    
  424635:	out    dx,al
  424636:	jbe    0x4245dd
  424638:	mov    eax,0xba446213
  42463d:	mov    DWORD PTR [ebx],ebp
  42463f:	aad    0xbf
  424641:	add    DWORD PTR [eax],eax
  424643:	call   0x53424649
  424648:	aas    
  424649:	pop    esp
  42464a:	xor    esp,ecx
  42464c:	xchg   edx,esi
  42464e:	loop   0x424689
  424650:	sbb    BYTE PTR [ebp-0x20dbf19b],ch
  424656:	push   ebx
  424657:	test   eax,0xb42e4aad
  42465c:	dec    edi
  42465d:	sub    eax,DWORD PTR [ebp+0x1e02f8b7]
  424663:	fs jno 0x42468c
  424666:	lock inc ecx
  424668:	mov    esi,0x5d50e362
  42466d:	jmp    DWORD PTR [eax+0x24f20270]
  424673:	std    
  424674:	test   dh,ah
  424676:	and    ah,dh
  424678:	nop
  424679:	rcl    DWORD PTR [esi-0x7db5dc70],0x97
  424680:	jmp    0x9f1b:0xdfb71503
  424687:	ror    BYTE PTR [esi+0x60],1
  42468a:	adc    eax,0xe2e20006
  42468f:	sbb    cl,BYTE PTR [esi+0x6174d078]
  424695:	pusha  
  424696:	and    DWORD PTR [eax-0x6f3383ac],ebx
  42469c:	pop    ebp
  42469d:	mov    fs,bx
  4246a0:	push   0x19
  4246a2:	add    eax,0xe99e24f0
  4246a7:	ss jae 0x4246a0
  4246aa:	jmp    0xd1e9aa48
  4246af:	xchg   DWORD PTR [eax+0x6c],esp
  4246b2:	inc    ecx
  4246b3:	push   edx
  4246b4:	inc    esi
  4246b5:	add    BYTE PTR [edx],0xfd
  4246b8:	mov    ds:0xc6d2bd55,eax
  4246bd:	add    al,0x79
  4246bf:	cmc    
  4246c0:	sti    
  4246c1:	cmp    al,0x83
  4246c3:	cwde   
  4246c4:	iret   
  4246c5:	rol    bl,1
  4246c7:	out    dx,eax
  4246c8:	or     DWORD PTR [edi-0x65],0xf2e04562
  4246cf:	mov    WORD PTR [edi+edi*2+0x7085426],?
  4246d6:	imul   ebp,DWORD PTR [ecx-0x36],0xffffffea
  4246da:	push   ecx
  4246db:	aad    0x2f
  4246dd:	inc    edi
  4246de:	xlat   BYTE PTR ds:[ebx]
  4246df:	xor    esp,edi
  4246e1:	div    ebx
  4246e3:	je     0x42474e
  4246e5:	popf   
  4246e6:	push   ecx
  4246e7:	pop    esp
  4246e8:	iret   
  4246e9:	shl    DWORD PTR [eax],cl
  4246eb:	cmp    dh,BYTE PTR [ebp+esi*8-0x1a]
  4246ef:	(bad)  
  4246f1:	or     eax,0xc7729f0d
  4246f6:	nop
  4246f7:	out    0x6,eax
  4246f9:	fild   WORD PTR [edi+0x523ffada]
  4246ff:	icebp  
  424700:	cmp    BYTE PTR [ecx],bl
  424702:	jb     0x4246cf
  424704:	xchg   ebx,eax
  424705:	push   es
  424706:	sti    
  424707:	jmp    0x4246c4
  424709:	lahf   
  42470a:	mov    esi,0xcd178316
  42470f:	push   esp
  424710:	jbe    0x4246a4
  424712:	dec    esi
  424713:	jmp    0x424726
  424715:	xchg   edx,eax
  424716:	mov    ecx,0x30f7d299
  42471b:	sbb    ebp,ebp
  42471d:	push   edi
  42471e:	mov    edi,DWORD PTR [ecx+0xd]
  424721:	(bad)  
  424722:	in     eax,dx
  424723:	scas   al,BYTE PTR es:[edi]
  424724:	add    esi,DWORD PTR [ebp-0x402e24c1]
  42472a:	dec    ebx
  42472b:	adc    DWORD PTR ds:[ebx-0x1f],eax
  42472f:	jge    0x4247b0
  424731:	pop    ebp
  424732:	mov    ebp,0xa54a2349
  424737:	xchg   BYTE PTR [ecx],ch
  424739:	cwde   
  42473a:	inc    ebx
  42473b:	out    dx,eax
  42473c:	jnp    0x4247a2
  42473e:	or     eax,0x40d99e96
  424743:	repz adc bl,BYTE PTR [edi+0x67]
  424747:	pop    ss
  424748:	jb     0x424702
  42474a:	scas   al,BYTE PTR es:[edi]
  42474b:	es cs and eax,0x4804aaea
  424752:	adc    eax,DWORD PTR [ebp+0xc3595e7]
  424758:	fdivrp st(4),st
  42475a:	jecxz  0x424715
  42475c:	pop    ebx
  42475d:	into   
  42475e:	mov    esi,esp
  424760:	scas   al,BYTE PTR es:[edi]
  424761:	or     DWORD PTR [ebx-0x16e5e5b4],esp
  424767:	xchg   ebx,eax
  424768:	push   cs
  424769:	jle    0x42470c
  42476b:	nop
  42476c:	inc    eax
  42476d:	cdq    
  42476e:	add    DWORD PTR ds:0x6605a932,ebp
  424774:	ins    BYTE PTR es:[edi],dx
  424775:	pop    esi
  424776:	imul   ebx
  424778:	push   esi
  424779:	pushf  
  42477a:	sub    BYTE PTR [eax],dl
  42477c:	mov    eax,0xebc7bb78
  424781:	pop    esi
  424782:	je     0x4247c6
  424784:	mov    cl,0xa9
  424786:	xchg   edi,eax
  424787:	fmul   DWORD PTR [esp+esi*1]
  42478a:	cmp    DWORD PTR [esi+0x76],ebp
  42478d:	cmovbe esp,ebx
  424790:	inc    esp
  424791:	sub    ah,bl
  424793:	cld    
  424794:	pop    edx
  424795:	test   DWORD PTR [eax-0x74065ca0],esp
  42479b:	in     al,0x16
  42479d:	add    eax,0x3f6d5a7f
  4247a2:	fsub   QWORD PTR [esi]
  4247a4:	pop    ebx
  4247a5:	(bad)  
  4247a6:	pop    esi
  4247a7:	popf   
  4247a8:	push   esi
  4247a9:	push   0xd8e11537
  4247ae:	adc    al,0x29
  4247b0:	fistp  DWORD PTR [ebp+0x48]
  4247b3:	push   0x9cd3ad05
  4247b8:	mov    ebx,0xee8f58fc
  4247bd:	or     eax,0xddc86e4b
  4247c2:	outs   dx,BYTE PTR ds:[esi]
  4247c3:	push   es
  4247c4:	(bad)  
  4247c5:	loope  0x42477e
  4247c7:	bound  esp,QWORD PTR [ebp+eiz*8+0x5b]
  4247cb:	mov    ch,0xf3
  4247cd:	bound  eax,QWORD PTR [edx-0x6d]
  4247d0:	and    BYTE PTR [edi+ecx*1+0x0],ch
  4247d4:	push   cs
  4247d5:	push   edx
  4247d6:	aad    0x16
  4247d8:	sbb    ebp,DWORD PTR [ebp+0x42]
  4247db:	jbe    0x424822
  4247dd:	(bad)  
  4247de:	push   ebx
  4247df:	mov    WORD PTR [ebx-0x10ece584],gs
  4247e5:	je     0x4247b6
  4247e7:	xchg   ecx,eax
  4247e8:	sbb    al,0x8b
  4247ea:	xor    edx,DWORD PTR ds:[eax-0x78]
  4247ee:	pop    ebp
  4247ef:	cmp    al,0x5
  4247f1:	stc    
  4247f2:	xchg   esi,eax
  4247f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247f4:	hlt    
  4247f5:	sub    eax,0xa52bfcef
  4247fa:	das    
  4247fb:	cmp    eax,0xee5287c7
  424800:	inc    edi
  424801:	mov    al,ds:0xb37b5156
  424806:	fcomp  QWORD PTR [ecx-0x60926f4b]
  42480c:	sbb    al,0x31
  42480e:	test   BYTE PTR [ecx],ah
  424810:	cmp    al,BYTE PTR [edx+0x24a9040a]
  424816:	inc    edi
  424817:	pop    ss
  424818:	or     eax,0x7b4965e3
  42481d:	sub    al,dl
  42481f:	retf   
  424820:	sbb    bh,BYTE PTR [ecx+0x42]
  424823:	mov    eax,gs:0x52a288e0
  424829:	loopne 0x42483e
  42482b:	ret    
  42482c:	(bad)  
  42482d:	das    
  42482e:	jge    0x4247bd
  424830:	fld    QWORD PTR [ebx-0x70212c74]
  424836:	fld    QWORD PTR [edx]
  424838:	(bad)  
  424839:	mov    dh,0x7
  42483b:	cmc    
  42483c:	push   edi
  42483d:	xlat   BYTE PTR ds:[ebx]
  42483e:	pusha  
  42483f:	mov    ebp,0xe80001c1
  424844:	add    DWORD PTR [eax],eax
  424846:	add    BYTE PTR [ecx+0x6beda269],ah
  42484c:	push   0xffffffda
  42484e:	push   ss
  42484f:	std    
  424850:	cmp    esi,ebx
  424852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424853:	or     al,ah
  424855:	push   eax
  424856:	in     eax,dx
  424857:	push   esi
  424858:	sbb    esi,DWORD PTR [ecx-0x2f]
  42485b:	sub    ebx,DWORD PTR [ebp+esi*1-0x77]
  42485f:	cld    
  424860:	dec    esi
  424861:	dec    esp
  424862:	ins    BYTE PTR es:[edi],dx
  424863:	sbb    DWORD PTR [ebx+edx*1-0x59],ebp
  424867:	mov    ds:0x2551ecf2,eax
  42486c:	je     0x424855
  42486e:	neg    DWORD PTR [esi-0x60]
  424871:	ret    0x9d8f
  424874:	jle    0x4247fb
  424876:	stc    
  424877:	(bad)  
  424878:	in     al,dx
  424879:	ins    DWORD PTR es:[edi],dx
  42487a:	mov    ch,0x63
  42487c:	push   0xffffffa6
  42487e:	lea    ebp,[ebx+eiz*4]
  424881:	push   eax
  424882:	push   edi
  424883:	sar    ah,0xa4
  424886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424887:	rcr    BYTE PTR [ecx+0x2af4287a],1
  42488d:	in     al,dx
  42488e:	mov    ah,0x70
  424890:	popf   
  424891:	dec    esi
  424892:	sbb    edx,ebp
  424894:	in     al,0xdb
  424896:	jmp    0x4248ff
  424898:	mov    cl,0x92
  42489a:	push   edi
  42489b:	out    0x7,eax
  42489d:	cli    
  42489e:	lods   eax,DWORD PTR ds:[esi]
  42489f:	inc    ebx
  4248a0:	ins    DWORD PTR es:[edi],dx
  4248a1:	ja     0x424922
  4248a3:	(bad)  
  4248a4:	fistp  DWORD PTR [edi+eax*4]
  4248a7:	fnsave [eax-0x78]
  4248aa:	js     0x42487d
  4248ac:	sub    dh,BYTE PTR [edi-0x6f]
  4248af:	jmp    0x2c9225c3
  4248b4:	call   0xeaf9a57f
  4248b9:	cdq    
  4248ba:	pop    esp
  4248bb:	lea    ecx,[edx+edi*8+0x37]
  4248bf:	xbegin 0x993c596e
  4248c5:	mov    al,0x1f
  4248c7:	jl     0x424916
  4248c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248ca:	dec    edx
  4248cb:	or     DWORD PTR [ebx],edi
  4248cd:	ins    DWORD PTR es:[edi],dx
  4248ce:	sbb    BYTE PTR [esi-0x5e],dh
  4248d1:	push   esi
  4248d2:	or     eax,0xccd6f322
  4248d7:	dec    ecx
  4248d8:	scas   eax,DWORD PTR es:[edi]
  4248d9:	mov    ah,0x18
  4248db:	jg     0x42492c
  4248dd:	mov    eax,ds:0x834be31f
  4248e2:	outs   dx,DWORD PTR ds:[esi]
  4248e3:	push   cs
  4248e4:	enter  0xffa4,0xef
  4248e8:	mov    dh,0x7a
  4248ea:	xor    DWORD PTR [ebx+0xefe94cb],ecx
  4248f0:	clc    
  4248f1:	xchg   DWORD PTR [edx],eax
  4248f3:	fsubr  st,st(2)
  4248f5:	and    al,0xd8
  4248f7:	stos   DWORD PTR es:[edi],eax
  4248f8:	inc    ebx
  4248f9:	add    edi,0xffffff8f
  4248fc:	dec    ebp
  4248fd:	xchg   ebp,eax
  4248fe:	test   DWORD PTR [esi+0x5e],esp
  424901:	sub    al,BYTE PTR [ebp+0x6]
  424904:	and    BYTE PTR [eax-0x3048ad0c],0xcd
  42490b:	rol    DWORD PTR [eax+ebx*8],cl
  42490e:	sbb    BYTE PTR [edi],ch
  424910:	sbb    cl,ch
  424912:	inc    ebx
  424913:	push   edi
  424914:	dec    ebp
  424915:	xchg   edi,eax
  424916:	dec    esi
  424917:	push   ss
  424918:	fnsetpm(287 only) 
  42491a:	mov    ds:0x4bff7af1,al
  42491f:	dec    eax
  424920:	mov    edi,0xd1e9205f
  424925:	into   
  424926:	jmp    0x6168:0x13d8472a
  42492d:	jp     0x4249a2
  42492f:	std    
  424930:	sub    al,0x9f
  424932:	jle    0x424922
  424934:	(bad)  
  424936:	repz in eax,dx
  424938:	es xchg ebp,eax
  42493a:	adc    eax,0xd7c49198
  42493f:	add    BYTE PTR [esi+0x5b05f1e2],dh
  424945:	bound  ebx,QWORD PTR [edx]
  424947:	aaa    
  424948:	sbb    dl,bl
  42494a:	xchg   ebp,eax
  42494b:	fistp  DWORD PTR [ebp+0x3d]
  42494e:	fbld   TBYTE PTR [ecx]
  424950:	call   0x67f400dc
  424955:	push   es
  424956:	gs sub eax,0xd5451b42
  42495c:	sbb    cl,BYTE PTR [edi]
  42495e:	pop    ebx
  42495f:	(bad)  
  424960:	push   edi
  424961:	icebp  
  424962:	pop    ecx
  424963:	inc    edx
  424964:	push   ebp
  424965:	xchg   ebx,eax
  424966:	xchg   DWORD PTR es:[edx+0x31],ebx
  42496a:	adc    al,0x6
  42496d:	xor    eax,esi
  42496f:	xor    dl,BYTE PTR [edi]
  424971:	inc    edx
  424972:	lods   al,BYTE PTR ds:[esi]
  424973:	jae    0x4249b2
  424975:	sti    
  424976:	pop    es
  424977:	shl    edx,cl
  424979:	js     0x424913
  42497b:	sbb    al,0xb1
  42497d:	mov    esi,0xc2c367b6
  424982:	jg     0x42491d
  424984:	(bad)  
  424985:	sar    bl,cl
  424987:	sbb    DWORD PTR [edi+0x51],esp
  42498a:	mov    ebp,0xe0366722
  42498f:	scas   eax,DWORD PTR es:[edi]
  424990:	inc    ecx
  424991:	icebp  
  424992:	add    DWORD PTR [eax-0x70],0xfd87d08b
  424999:	pop    edi
  42499a:	iret   
  42499b:	cmp    bl,BYTE PTR ds:0x173050e4
  4249a1:	mov    esp,0x5a8918b3
  4249a6:	and    BYTE PTR [esi-0x62],0xf2
  4249aa:	sbb    edx,0x2edbf376
  4249b0:	pop    ebp
  4249b1:	shl    ebp,cl
  4249b3:	inc    ebx
  4249b4:	inc    ecx
  4249b5:	fwait
  4249b6:	in     eax,0xe0
  4249b8:	nop
  4249b9:	push   edx
  4249ba:	mov    al,0x97
  4249bc:	js     0x424a32
  4249be:	call   0x27329560
  4249c3:	stc    
  4249c4:	pop    ebp
  4249c5:	scas   eax,DWORD PTR es:[edi]
  4249c6:	cmp    eax,DWORD PTR ds:0x96ef8ec8
  4249cc:	imul   esi,esi,0x31
  4249cf:	inc    DWORD PTR [edx]
  4249d1:	push   0x8bf6723d
  4249d6:	cdq    
  4249d7:	inc    ebp
  4249d8:	ss sbb al,0xa6
  4249db:	out    dx,eax
  4249dc:	xchg   ebp,eax
  4249dd:	mov    fs,ebx
  4249df:	push   es
  4249e0:	into   
  4249e1:	add    al,0x0
  4249e3:	shl    BYTE PTR [edx],0x38
  4249e6:	inc    eax
  4249e7:	sti    
  4249e8:	push   ds
  4249e9:	icebp  
  4249ea:	mov    DWORD PTR [edx-0x12],esp
  4249ed:	jo     0x424a2e
  4249ef:	scas   eax,DWORD PTR es:[edi]
  4249f0:	add    eax,0xa209c4c3
  4249f5:	dec    eax
  4249f6:	repz add ah,al
  4249f9:	jmp    FWORD PTR [eax+0x4e]
  4249fc:	mov    al,ds:0xe1e7cd36
  424a01:	push   esi
  424a02:	inc    eax
  424a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a04:	cwde   
  424a05:	fucomp st(3)
  424a07:	retf   0x8d2a
  424a0a:	or     edx,edx
  424a0c:	add    edx,DWORD PTR [ebx]
  424a0e:	dec    eax
  424a0f:	adc    DWORD PTR [edi-0x158e3223],ecx
  424a15:	mov    ah,0xc8
  424a17:	stc    
  424a18:	xor    ebp,DWORD PTR ds:[eax+0x58]
  424a1c:	sahf   
  424a1d:	jno    0x4249b4
  424a1f:	call   0x841b:0x954b33c
  424a26:	lods   al,BYTE PTR ds:[esi]
  424a27:	test   ebx,esi
  424a29:	ja     0x424a9d
  424a2b:	pop    edx
  424a2c:	imul   ecx,esi,0x4a463e3c
  424a32:	mov    ebp,0xc7ffbd7a
  424a37:	xchg   ecx,eax
  424a38:	adc    eax,0x31a18f33
  424a3d:	add    DWORD PTR [edi-0x5b],ecx
  424a40:	ret    
  424a41:	add    DWORD PTR [eax],eax
  424a43:	call   0x5b424a49
  424a48:	inc    edx
  424a49:	xor    eax,0x541d8a1d
  424a4e:	out    0x59,al
  424a50:	loope  0x424a90
  424a52:	inc    edi
  424a53:	cmp    eax,0xa883a2bb
  424a58:	test   ch,bl
  424a5a:	repnz cld 
  424a5c:	jmp    0x5734:0x9f55abcf
  424a63:	lea    ebx,[ecx+ebx*2-0x41bdb79d]
  424a6a:	push   ds
  424a6b:	ja     0x424acd
  424a6d:	dec    ebp
  424a6e:	xchg   BYTE PTR [edi-0x1e],cl
  424a71:	xchg   ebx,eax
  424a72:	sub    BYTE PTR [ecx-0x64703d3],ah
  424a78:	or     DWORD PTR [edi],ebp
  424a7a:	or     BYTE PTR [esi+0x334dbf8a],ah
  424a80:	sahf   
  424a81:	arpl   WORD PTR [ebp+0x188deda4],si
  424a87:	dec    ecx
  424a88:	push   ds
  424a89:	imul   ecx,DWORD PTR [edi-0x41],0xf92f2454
  424a90:	adc    ch,BYTE PTR [ebx+0x32b04c0a]
  424a96:	pop    ss
  424a97:	inc    eax
  424a98:	(bad)
  424a9b:	mov    al,0xd9
  424a9d:	aad    0xcf
  424a9f:	and    BYTE PTR [ecx],dh
  424aa1:	pop    ebp
  424aa2:	in     eax,0x2b
  424aa4:	cmp    eax,0xa76afffc
  424aa9:	xor    dh,BYTE PTR [edx+ebp*1]
  424aac:	mov    ecx,0xe3335e06
  424ab1:	or     al,0xf0
  424ab3:	(bad)  
  424ab4:	xor    BYTE PTR ds:0x72d06376,ch
  424aba:	cdq    
  424abb:	mov    bl,0x18
  424abd:	mov    edx,0x91ac2f3c
  424ac2:	or     eax,0xfb37ceb9
  424ac7:	sbb    al,0xbe
  424ac9:	cmp    edx,DWORD PTR [edx]
  424acb:	fmul   DWORD PTR [ecx+0x352e3fec]
  424ad1:	mov    bh,dh
  424ad3:	jno    0x424af2
  424ad5:	test   BYTE PTR [edx+0x58],0x8b
  424ad9:	sti    
  424ada:	test   DWORD PTR [ebx-0x5],ecx
  424add:	adc    BYTE PTR [ecx],0x8
  424ae0:	adc    eax,0xabf6f5f6
  424ae5:	ss xchg ebx,eax
  424ae7:	or     eax,0xf505ac2c
  424aec:	xchg   edx,eax
  424aed:	shl    al,0x5a
  424af0:	sbb    al,0xcc
  424af2:	sub    DWORD PTR [ebx],esi
  424af4:	mov    dh,0x3d
  424af6:	sub    ecx,DWORD PTR [ecx]
  424af8:	std    
  424af9:	(bad)  
  424afa:	lahf   
  424afb:	das    
  424afc:	pop    es
  424afd:	jbe    0x424acb
  424aff:	xor    dh,0x89
  424b02:	data16 mov bl,0x7f
  424b05:	in     eax,dx
  424b06:	dec    eax
  424b07:	ror    DWORD PTR [edx+0x61138c60],1
  424b0d:	xor    BYTE PTR [edx+0x57],bl
  424b10:	add    eax,0xb1734fed
  424b15:	xchg   esi,eax
  424b16:	lods   al,BYTE PTR ds:[esi]
  424b17:	cmp    ah,BYTE PTR [esi]
  424b19:	ds sahf 
  424b1b:	hlt    
  424b1c:	jl     0x424ab1
  424b1e:	jp     0x424b06
  424b20:	cmc    
  424b21:	xchg   edi,eax
  424b22:	sahf   
  424b23:	jb     0x424b45
  424b25:	xchg   esp,eax
  424b26:	pop    eax
  424b27:	iret   
  424b28:	call   0x69d9:0x85f2c8be
  424b2f:	mov    dl,0x4d
  424b31:	xchg   BYTE PTR [bx],bh
  424b34:	mov    BYTE PTR [ecx+0x6b],ch
  424b37:	fisubr DWORD PTR [eax*4+0x2475fbbf]
  424b3e:	das    
  424b3f:	call   0x6e6:0x8582c4ec
  424b46:	xchg   edi,eax
  424b47:	stos   DWORD PTR es:[edi],eax
  424b48:	outs   dx,DWORD PTR ds:[esi]
  424b49:	ret    
  424b4a:	mov    esp,0x171bb3b2
  424b4f:	stos   DWORD PTR es:[edi],eax
  424b50:	xchg   ebp,eax
  424b51:	mov    ebx,0x8982fb21
  424b56:	mov    ds:0xe3242a9b,eax
  424b5b:	inc    ebp
  424b5c:	jo     0x424b98
  424b5e:	out    dx,eax
  424b5f:	jns    0x424ae7
  424b61:	mov    ds:0x7afb3813,eax
  424b66:	pop    eax
  424b67:	adc    bh,BYTE PTR [ebx]
  424b69:	shr    BYTE PTR [edx],cl
  424b6b:	xor    esi,DWORD PTR [edi]
  424b6d:	pop    ebp
  424b6e:	pop    ebx
  424b6f:	pop    esi
  424b70:	add    esi,DWORD PTR [ecx]
  424b72:	dec    ecx
  424b73:	push   edx
  424b74:	jbe    0x424b71
  424b76:	(bad)  
  424b77:	sbb    dh,BYTE PTR [edx+0x6478f328]
  424b7d:	lahf   
  424b7e:	int    0xf2
  424b80:	inc    BYTE PTR [ebp+0x562fc50]
  424b86:	pushf  
  424b87:	mov    cl,0x12
  424b89:	sbb    edx,esp
  424b8b:	adc    al,0x3f
  424b8d:	and    esp,DWORD PTR [esi+0x1e]
  424b90:	lods   eax,DWORD PTR ds:[esi]
  424b91:	pop    ss
  424b92:	xchg   ebx,eax
  424b93:	fmul   DWORD PTR [ecx]
  424b95:	shl    BYTE PTR [ebp-0x3e1bfcde],cl
  424b9b:	loop   0x424bc2
  424b9d:	mov    fs,WORD PTR [ebx-0x60]
  424ba0:	nop
  424ba1:	xchg   ebx,eax
  424ba2:	outs   dx,BYTE PTR ds:[esi]
  424ba3:	stos   BYTE PTR es:[edi],al
  424ba4:	jb     0x424b42
  424ba6:	adc    esi,DWORD PTR [ecx+0x0]
  424ba9:	sahf   
  424baa:	and    BYTE PTR [edx-0x1e0e2f0c],ah
  424bb0:	pop    esp
  424bb1:	fs call 0x4320:0xd11ded71
  424bb9:	aam    0x6c
  424bbb:	or     edi,DWORD PTR [ebp+edi*2+0x59]
  424bbf:	lods   al,BYTE PTR ds:[esi]
  424bc0:	(bad)  
  424bc1:	and    al,0xf0
  424bc3:	mov    ebp,0xe7efdfa5
  424bc8:	pop    ss
  424bc9:	inc    ebp
  424bca:	in     al,dx
  424bcb:	jns    0x424b67
  424bcd:	inc    esp
  424bce:	lods   eax,DWORD PTR ds:[esi]
  424bcf:	std    
  424bd0:	mov    esp,DWORD PTR [esi+0x3c815fb6]
  424bd6:	call   0x28a9:0xb9bf2d98
  424bdd:	lea    esi,[esi-0x21]
  424be0:	ret    0xab22
  424be3:	mov    ch,0xe6
  424be5:	sub    dl,BYTE PTR [eax-0x1e]
  424be8:	xchg   dl,dh
  424bea:	jecxz  0x424c3a
  424bec:	clc    
  424bed:	adc    eax,0xc97da9cf
  424bf2:	push   cs
  424bf3:	xor    al,0x4d
  424bf5:	retf   
  424bf6:	aad    0x58
  424bf8:	or     DWORD PTR [eax+eiz*2+0x5a],esp
  424bfc:	push   esi
  424bfd:	pushf  
  424bfe:	xlat   BYTE PTR ds:[ebx]
  424bff:	mov    ch,0x68
  424c01:	mov    dl,0x83
  424c03:	cmp    DWORD PTR [esi+0x2ba724b8],ebx
  424c09:	dec    ecx
  424c0b:	jo     0x424bee
  424c0d:	addr16 mov esi,0xd4ca7e0b
  424c13:	xor    al,0x74
  424c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c16:	mov    cl,0xa0
  424c18:	mov    ecx,0xb0c4cbbf
  424c1d:	mov    BYTE PTR [ebx+0x5cd0ebd3],ch
  424c23:	(bad)  
  424c24:	and    ah,BYTE PTR [edx+0x10430eb1]
  424c2a:	inc    ebp
  424c2b:	rcl    ebx,cl
  424c2d:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  424c2f:	or     al,0xc2
  424c31:	xlat   BYTE PTR ds:[ebx]
  424c32:	and    bl,bh
  424c34:	aaa    
  424c35:	std    
  424c36:	out    dx,al
  424c37:	test   ecx,ebx
  424c39:	inc    edx
  424c3a:	ins    DWORD PTR es:[edi],dx
  424c3b:	outs   dx,BYTE PTR ds:[esi]
  424c3c:	cmp    al,0x6d
  424c3e:	jge    0x424bcd
  424c40:	lds    eax,FWORD PTR [ecx]
  424c42:	add    al,ch
  424c44:	add    DWORD PTR [eax],eax
  424c46:	add    BYTE PTR [edx+esi*1],al
  424c49:	cmp    ebp,DWORD PTR [eax+0x765f3699]
  424c4f:	mov    esi,0x3b5bc1e
  424c54:	xchg   esp,eax
  424c55:	sub    al,0xcd
  424c57:	dec    BYTE PTR [edi-0x37]
  424c5a:	(bad)  
  424c5b:	in     eax,0xe1
  424c5d:	iret   
  424c5e:	ficom  WORD PTR [ecx+0x52924cbf]
  424c64:	enter  0x2114,0xef
  424c68:	data16 mov cl,BYTE PTR [eax]
  424c6b:	mov    DWORD PTR [ecx-0x30b542f3],ebx
  424c71:	bound  ebp,QWORD PTR ds:0xcc59dd0c
  424c77:	jo     0x424c30
  424c79:	push   ss
  424c7a:	cmp    DWORD PTR [ebx+0x2f],ebx
  424c7d:	fisubr DWORD PTR ds:0xd69a5d67
  424c83:	test   DWORD PTR [eax],eax
  424c85:	push   cs
  424c86:	inc    eax
  424c87:	mov    edi,0xe9ebb52b
  424c8c:	lock clc 
  424c8e:	jnp    0x424c6e
  424c90:	inc    esp
  424c91:	mov    cl,dh
  424c93:	add    eax,0x1a79d01d
  424c98:	cmp    DWORD PTR [ebx],0xde447f49
  424c9e:	adc    eax,0xfd132cf1
  424ca3:	dec    ecx
  424ca4:	mov    eax,0xb9652bc8
  424ca9:	push   esp
  424caa:	out    dx,al
  424cab:	shl    BYTE PTR [edx-0x2e],0xd3
  424caf:	popa   
  424cb0:	(bad)  
  424cb1:	or     dh,BYTE PTR [esi+0x31666be9]
  424cb7:	ret    
  424cb8:	and    al,0x68
  424cba:	test   DWORD PTR [ecx+0xce3b4ce],0xcc5545f7
  424cc4:	mov    ch,0xe5
  424cc6:	lods   eax,DWORD PTR ds:[si]
  424cc8:	out    0xa,al
  424cca:	push   ebx
  424ccb:	call   0xe57ac1b
  424cd0:	inc    edx
  424cd1:	mov    ch,0x4a
  424cd3:	sub    eax,0x895f0b2
  424cd8:	clc    
  424cd9:	rol    ebx,1
  424cdb:	push   ds
  424cdc:	fcom   QWORD PTR [edi-0x3c573555]
  424ce2:	js     0x424cd7
  424ce4:	cmp    edi,DWORD PTR [edi]
  424ce6:	and    BYTE PTR [edi+ecx*1],cl
  424ce9:	lods   al,BYTE PTR ds:[esi]
  424cea:	adc    eax,0xfaf0834e
  424cef:	(bad)  
  424cf0:	xor    BYTE PTR [ebp+esi*2+0x52],ch
  424cf4:	xchg   edi,eax
  424cf5:	mov    ecx,DWORD PTR [eax]
  424cf7:	jl     0x424c96
  424cf9:	mov    bh,0x31
  424cfb:	and    DWORD PTR [esi],edx
  424cfd:	mov    eax,ds:0x2460ffd0
  424d02:	test   al,0x1c
  424d04:	pop    ecx
  424d05:	adc    cl,BYTE PTR [ebp-0x69]
  424d08:	(bad)  
  424d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d0a:	daa    
  424d0b:	sbb    BYTE PTR [edx+eiz*4],cl
  424d0e:	mov    ah,0x1d
  424d10:	iret   
  424d11:	out    0x0,al
  424d13:	cwde   
  424d14:	sbb    eax,0x6f32de07
  424d19:	cmp    eax,0x9c69d2aa
  424d1e:	and    al,0x52
  424d20:	cmc    
  424d21:	and    DWORD PTR [ebx+0x53],0xe926bdb4
  424d28:	pop    edx
  424d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d2a:	pop    ss
  424d2b:	cs cwde 
  424d2d:	push   sp
  424d2f:	push   ss
  424d30:	mov    ebp,0x8759ee13
  424d35:	sahf   
  424d36:	xchg   edx,eax
  424d37:	pop    DWORD PTR [ebx+0x19]
  424d3a:	push   edx
  424d3b:	icebp  
  424d3c:	loop   0x424cfc
  424d3e:	popa   
  424d3f:	mov    dh,BYTE PTR [edx-0x147488a0]
  424d45:	fwait
  424d46:	daa    
  424d47:	fadd   DWORD PTR [ecx-0x5c]
  424d4a:	fnstcw WORD PTR [eax+0x69]
  424d4d:	pop    eax
  424d4e:	(bad)  
  424d4f:	adc    al,0xac
  424d51:	pop    ss
  424d52:	arpl   dx,bx
  424d54:	fist   DWORD PTR [ebx-0xa]
  424d57:	xrelease xchg DWORD PTR [esi+0x6581e2ce],edx
  424d5e:	fs xor DWORD PTR ss:[edi+0x7a],edx
  424d63:	repz test eax,0x7184cc90
  424d69:	(bad)  
  424d6a:	sar    BYTE PTR [esi-0x4c],cl
  424d6d:	adc    edx,edi
  424d6f:	ins    DWORD PTR es:[edi],dx
  424d70:	(bad)  
  424d71:	push   ds
  424d72:	dec    ecx
  424d73:	dec    edi
  424d74:	out    dx,al
  424d75:	xchg   ebx,eax
  424d76:	test   BYTE PTR [ebp-0x26],al
  424d79:	ds loopne 0x424d6f
  424d7c:	dec    edx
  424d7d:	daa    
  424d7e:	sbb    eax,0x45d56f3a
  424d83:	mov    dh,0x9a
  424d85:	xchg   BYTE PTR [esp+ebp*1-0x8],dl
  424d89:	test   eax,0x3ed3505e
  424d8e:	xor    dh,0xe3
  424d91:	in     eax,dx
  424d92:	sti    
  424d93:	push   ss
  424d94:	sub    eax,0xaa05117
  424d99:	lahf   
  424d9a:	imul   ebx,eax,0x7f606a8
  424da0:	inc    ebx
  424da1:	fwait
  424da2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424da3:	pop    ds
  424da4:	pop    eax
  424da5:	mov    cl,0x65
  424da7:	loope  0x424d8e
  424da9:	and    al,0xb9
  424dab:	jl     0x424d41
  424dad:	dec    ebx
  424dae:	loopne 0x424e2c
  424db0:	(bad)  
  424db1:	stos   DWORD PTR es:[edi],eax
  424db2:	mov    DWORD PTR [ecx],esp
  424db4:	fbld   TBYTE PTR [esi+0x29]
  424db7:	jl     0x424e2e
  424db9:	(bad)  
  424dba:	popa   
  424dbb:	fwait
  424dbc:	out    0x25,eax
  424dbe:	cdq    
  424dbf:	and    eax,0x22f5dee3
  424dc4:	sar    BYTE PTR [ebx+0x19],0x50
  424dc8:	push   0xcb1d4b53
  424dcd:	bound  edi,QWORD PTR [ebx+0x50]
  424dd0:	pop    edi
  424dd1:	jmp    0x424e2d
  424dd3:	repz stc 
  424dd5:	pop    edi
  424dd6:	scas   eax,DWORD PTR es:[edi]
  424dd7:	je     0x424e52
  424dd9:	add    edx,DWORD PTR [edi+0x2e00cf15]
  424ddf:	fdiv   DWORD PTR [esi]
  424de1:	pop    esp
  424de2:	xor    DWORD PTR ds:0x95ab3637,ebp
  424de8:	jne    0x424db2
  424dea:	mov    bl,0xb7
  424dec:	dec    ecx
  424ded:	inc    esi
  424dee:	adc    al,bh
  424df0:	retf   
  424df1:	test   al,0x6f
  424df3:	pop    esi
  424df4:	mov    ds:0x7b00dc98,eax
  424df9:	push   edx
  424dfa:	popf   
  424dfb:	add    eax,0x58c794c9
  424e00:	dec    edi
  424e01:	in     eax,0xf9
  424e03:	xchg   esi,eax
  424e04:	and    esi,edi
  424e06:	add    dh,bl
  424e08:	shr    DWORD PTR [eax-0x5b],0x9f
  424e0c:	mov    ds:0x607a109c,eax
  424e11:	popf   
  424e12:	(bad)  
  424e13:	jb     0x424df4
  424e15:	xchg   ebp,eax
  424e16:	pop    ss
  424e17:	jmp    esp
  424e19:	lods   eax,DWORD PTR ds:[esi]
  424e1a:	mov    cl,0x97
  424e1c:	loop   0x424e0a
  424e1e:	fdivr  QWORD PTR [eax]
  424e20:	lock jo 0x424e5e
  424e23:	mov    BYTE PTR [esp+edx*1-0x4a135bea],cl
  424e2a:	xchg   esp,eax
  424e2b:	jne    0x424de8
  424e2d:	xor    al,0x42
  424e2f:	inc    edx
  424e30:	dec    edi
  424e31:	nop
  424e32:	int3   
  424e33:	popf   
  424e34:	fistp  WORD PTR [esi-0x31]
  424e37:	aad    0xa
  424e39:	pop    esi
  424e3a:	jns    0x424e04
  424e3c:	and    ebp,esi
  424e3e:	xor    BYTE PTR [ebp-0x39],0x1
  424e42:	add    al,ch
  424e44:	add    DWORD PTR [eax],eax
  424e46:	add    BYTE PTR [edx-0x56],bh
  424e49:	(bad)  
  424e4a:	jmp    0xeecd:0x9770a492
  424e51:	jb     0x424e18
  424e53:	mov    WORD PTR [ebx],ss
  424e55:	iret   
  424e56:	(bad)  
  424e57:	or     BYTE PTR [ebp-0x48],0x9b
  424e5b:	lds    esp,FWORD PTR [esi]
  424e5d:	jl     0x424ec3
  424e5f:	repnz or DWORD PTR cs:[ebx+0x62],ebx
  424e64:	xchg   DWORD PTR [edi+0xe0decec],esi
  424e6a:	add    DWORD PTR [ecx+ebx*8+0x181212e0],eax
  424e71:	shl    BYTE PTR [eax+0x4c292b07],0x51
  424e78:	adc    BYTE PTR [edi+esi*8+0x66],0x53
  424e7d:	and    bh,al
  424e7f:	sti    
  424e80:	jno    0x424ed4
  424e82:	stc    
  424e83:	pop    eax
  424e84:	fwait
  424e85:	in     al,dx
  424e86:	xlat   BYTE PTR ds:[ebx]
  424e87:	pop    ss
  424e88:	cmp    al,0x82
  424e8a:	out    dx,al
  424e8b:	jecxz  0x424e6c
  424e8d:	jmp    0x424eb9
  424e8f:	push   0x539ef957
  424e94:	repz inc edx
  424e96:	jne    0x424f0e
  424e98:	sub    al,0xad
  424e9a:	mov    ch,0x5e
  424e9c:	cmp    eax,0x3196be33
  424ea1:	adc    eax,DWORD PTR [edx-0x1e]
  424ea4:	adc    eax,0xc4da0b74
  424ea9:	and    edi,DWORD PTR [edi]
  424eab:	es xchg ebx,eax
  424ead:	adc    al,0x2e
  424eaf:	jmp    0x6b2874f7
  424eb4:	(bad)  
  424eb5:	(bad)  
  424eb7:	mov    ds:0x58268f47,eax
  424ebc:	mov    eax,esp
  424ebe:	cmp    eax,0xef31988f
  424ec3:	lahf   
  424ec4:	arpl   di,dx
  424ec6:	or     BYTE PTR [edx-0x15fc665c],al
  424ecc:	fs and eax,0xb2494cf8
  424ed2:	or     ch,BYTE PTR [esi-0x51]
  424ed5:	xchg   esp,esi
  424ed7:	inc    edx
  424ed8:	test   al,0x13
  424eda:	test   al,0x90
  424edc:	pop    edx
  424edd:	pop    ebp
  424ede:	sar    DWORD PTR [ebp+0x2b],cl
  424ee1:	inc    ecx
  424ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  424ee5:	mov    eax,0x839b10b0
  424eea:	push   eax
  424eeb:	aaa    
  424eec:	out    0x9,al
  424eee:	cdq    
  424eef:	out    dx,al
  424ef0:	fs xchg esp,eax
  424ef2:	test   al,0xd9
  424ef4:	xchg   DWORD PTR [edx],edi
  424ef6:	pushf  
  424ef7:	xor    esi,ebp
  424ef9:	xchg   esi,eax
  424efa:	adc    edx,ebp
  424efc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424efd:	xchg   ebx,eax
  424efe:	and    esi,edx
  424f00:	mov    dl,0xf6
  424f02:	jp     0x424f44
  424f04:	stc    
  424f05:	pop    ds
  424f06:	inc    edi
  424f07:	adc    al,0xec
  424f09:	push   eax
  424f0a:	push   ss
  424f0b:	enter  0x6616,0xd6
  424f0f:	clc    
  424f10:	popa   
  424f11:	and    edi,DWORD PTR [ebp+0x5]
  424f14:	xor    eax,0x553c63a4
  424f19:	(bad)  
  424f1a:	jge    0x424f61
  424f1c:	ror    esi,1
  424f1e:	jb     0x424eea
  424f20:	test   eax,0x3940d82
  424f25:	jo     0x424f48
  424f27:	or     esp,DWORD PTR ds:0x6ea29f8
  424f2d:	cmp    al,0xda
  424f2f:	jl     0x424f36
  424f31:	inc    esi
  424f32:	ja     0x424f3e
  424f34:	lds    ecx,FWORD PTR [eax+0x0]
  424f37:	pop    ebx
  424f38:	rcr    DWORD PTR [esi-0x3b7cef84],1
  424f3e:	jmp    0x424ee6
  424f40:	jecxz  0x424f37
  424f42:	push   ebx
  424f43:	pop    ss
  424f44:	ja     0x424f9e
  424f46:	jge    0x424fb4
  424f48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f49:	dec    esp
  424f4a:	mov    esi,0x88d13ac0
  424f4f:	jmp    0xca60:0xeb831741
  424f56:	arpl   WORD PTR [eax+eiz*2-0x72f3fde0],dx
  424f5d:	sub    DWORD PTR [edi],esi
  424f5f:	lahf   
  424f60:	mov    cl,0xe
  424f62:	(bad)  
  424f63:	popa   
  424f64:	call   0x6ee:0x396c17f
  424f6b:	dec    edi
  424f6c:	lea    esp,[ebp+0x7113ab8e]
  424f72:	in     al,dx
  424f73:	jnp    0x424f51
  424f75:	pop    esi
  424f76:	mov    ebp,0xc0bab44f
  424f7b:	inc    esp
  424f7c:	push   cs
  424f7d:	cmp    ch,dh
  424f7f:	and    eax,DWORD PTR [esi]
  424f81:	dec    eax
  424f82:	mov    dh,0x9e
  424f84:	push   ecx
  424f85:	xor    al,0xf1
  424f87:	out    dx,eax
  424f88:	sbb    dl,BYTE PTR ds:[ebx+0x4a]
  424f8c:	int3   
  424f8d:	cmp    dl,dl
  424f8f:	push   ecx
  424f90:	and    BYTE PTR [esi],cl
  424f92:	std    
  424f93:	hlt    
  424f94:	mov    ebp,0xe90bd590
  424f99:	or     eax,0xd25acff7
  424f9e:	and    al,BYTE PTR [edx]
  424fa0:	ret    0x981e
  424fa3:	and    dl,al
  424fa5:	test   DWORD PTR [ebx-0x32],esp
  424fa8:	mov    eax,gs:0xb3661b73
  424fae:	icebp  
  424faf:	jne    0x424fc2
  424fb1:	pop    esp
  424fb2:	aas    
  424fb3:	push   eax
  424fb4:	mov    BYTE PTR [ecx],bh
  424fb6:	dec    edx
  424fb7:	jbe    0x424ff5
  424fb9:	sbb    BYTE PTR [edx-0xc7d6e8],bh
  424fbf:	and    bh,ch
  424fc1:	lods   al,BYTE PTR ds:[esi]
  424fc2:	mov    al,bh
  424fc4:	pop    ecx
  424fc5:	push   edi
  424fc6:	mov    eax,0x58c84f19
  424fcb:	test   al,0x23
  424fcd:	add    ch,BYTE PTR [eax-0x47]
  424fd0:	xor    BYTE PTR [ebx],0xe3
  424fd3:	call   FWORD PTR [esi]
  424fd5:	sbb    al,BYTE PTR [edx-0x75481c9a]
  424fdb:	push   es
  424fdc:	mov    cl,0xfb
  424fde:	inc    eax
  424fdf:	sbb    al,0x86
  424fe1:	int3   
  424fe2:	and    BYTE PTR [ecx+ebx*1-0x6c],0x62
  424fe7:	dec    ebp
  424fe8:	sahf   
  424fe9:	add    cl,BYTE PTR [eax+ebx*4-0x6d9e8cb7]
  424ff0:	jmp    0x65a6:0x5e6f5588
  424ff7:	jns    0x424ffe
  424ff9:	loopne 0x42500c
  424ffb:	imul   edx,DWORD PTR [esi],0xffffffb5
  424ffe:	jp     0x424fa3
  425000:	sar    BYTE PTR [ecx+ebp*1],cl
  425003:	test   BYTE PTR gs:[edx+0xb79da9d],0x53
  42500b:	mov    edi,0xc6aec09d
  425010:	icebp  
  425011:	rcr    BYTE PTR [esi],1
  425013:	pmaxub mm3,QWORD PTR [edi]
  425016:	mov    esp,0x19112106
  42501b:	xchg   esi,edi
  42501d:	ror    DWORD PTR [ebx-0x12ee0f71],cl
  425023:	mov    dl,0x47
  425025:	ret    0x8b73
  425028:	mov    ecx,0x44a7dc64
  42502d:	pop    ecx
  42502e:	mov    DWORD PTR [esi+0x7c],esp
  425031:	loopne 0x424fee
  425033:	cli    
  425034:	mov    edi,0xc56cfd7f
  425039:	ret    
  42503a:	ds cmp eax,0x5d4f5bf9
  425040:	leave  
  425041:	add    DWORD PTR [eax],eax
  425043:	call   0xe4425049
  425048:	fcom   DWORD PTR [ebp-0x15924194]
  42504e:	and    dh,al
  425050:	(bad)  [eax+edi*1]
  425053:	cmp    BYTE PTR [ebx+0x60d3ae6d],0x8e
  42505a:	mov    ecx,DWORD PTR [esi+0xd]
  42505d:	push   0xfffffff6
  42505f:	outs   dx,BYTE PTR ds:[esi]
  425060:	cli    
  425061:	stos   DWORD PTR es:[edi],eax
  425062:	dec    BYTE PTR [ebp-0x31]
  425065:	mov    eax,0xf00eaa0b
  42506a:	gs in  al,dx
  42506c:	inc    edx
  42506d:	mov    edi,edx
  42506f:	call   0x2fb8:0x58b44f55
  425076:	out    dx,al
  425077:	pushf  
  425078:	ror    BYTE PTR [edx+edx*2-0x6e],cl
  42507c:	loopne 0x425099
  42507e:	or     bh,BYTE PTR [edi+0x67]
  425081:	dec    ebp
  425082:	cmp    eax,0x62babf9a
  425087:	push   ss
  425088:	and    eax,0x868871f7
  42508d:	out    0x1a,eax
  42508f:	ss mov edx,0x72f2e213
  425095:	loope  0x4250fa
  425097:	adc    BYTE PTR [edi-0x45],bh
  42509a:	js     0x4250e4
  42509c:	sahf   
  42509d:	repnz sub dl,dl
  4250a0:	fisub  WORD PTR [ebx*4+0x4139ab7d]
  4250a7:	cmp    ecx,edx
  4250a9:	xor    eax,esp
  4250ab:	ja     0x425092
  4250ad:	mov    ebx,0x3fa38eff
  4250b2:	out    dx,al
  4250b3:	xchg   edx,eax
  4250b4:	retf   0x374b
  4250b7:	out    dx,eax
  4250b8:	mov    al,ds:0x14274ab9
  4250bd:	pusha  
  4250be:	pop    edi
  4250bf:	pop    eax
  4250c0:	push   cs
  4250c1:	mov    bl,0xc6
  4250c3:	add    esp,edx
  4250c5:	icebp  
  4250c6:	pop    edi
  4250c7:	stos   DWORD PTR es:[edi],eax
  4250c8:	shl    BYTE PTR [ebx+0x73],0x3d
  4250cc:	mov    bh,BYTE PTR [ebx+0x3379cd83]
  4250d2:	(bad)  
  4250d3:	aas    
  4250d4:	dec    edi
  4250d5:	outs   dx,BYTE PTR ds:[esi]
  4250d6:	les    ecx,FWORD PTR [esi-0x40]
  4250d9:	aad    0xf5
  4250db:	mov    BYTE PTR [esi-0x2d],dl
  4250de:	das    
  4250df:	in     eax,dx
  4250e0:	cmc    
  4250e1:	leave  
  4250e2:	sahf   
  4250e3:	imul   esp,DWORD PTR [ecx],0x6f
  4250e6:	dec    eax
  4250e7:	mov    bl,0xfe
  4250e9:	out    0x10,al
  4250eb:	stos   DWORD PTR es:[edi],eax
  4250ec:	mov    al,ds:0x6a849eee
  4250f1:	call   0x55fe5551
  4250f6:	dec    edi
  4250f7:	mov    edx,0x5ac4a0b6
  4250fc:	mov    bl,0x4d
  4250fe:	inc    ebx
  4250ff:	(bad)
  425102:	shl    DWORD PTR [ecx+0x4ac3a90c],1
  425108:	call   0x1ca7:0xaa56aacf
  42510f:	add    al,0xcf
  425111:	pop    ebx
  425112:	dec    esp
  425113:	shl    BYTE PTR [edx+edi*2-0x43b72f9a],0x63
  42511b:	int3   
  42511c:	jmp    0x4250cf
  42511e:	cmp    eax,0x1ef2139b
  425123:	sbb    ah,dl
  425125:	pop    esi
  425126:	inc    esi
  425127:	jg     0x4250ec
  425129:	cmp    ah,BYTE PTR [edx]
  42512b:	xor    ecx,esp
  42512d:	and    al,0xc9
  42512f:	clc    
  425130:	aas    
  425131:	call   0x684e:0xdd5d4ba4
  425138:	data16 mov ch,0x49
  42513b:	dec    eax
  42513c:	(bad)  
  42513e:	jmp    0x12bd:0xce5571bd
  425145:	into   
  425146:	dec    esp
  425147:	fisttp WORD PTR [esi-0x30b7f0ac]
  42514d:	jnp    0x42512c
  42514f:	xor    BYTE PTR [ebx+ebx*4+0x7c7b8137],ah
  425156:	mov    edi,0xf8a760a
  42515b:	stc    
  42515c:	call   FWORD PTR [eax+0x7c39b3af]
  425162:	cli    
  425163:	shl    BYTE PTR [edi+0x63],cl
  425166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425167:	sbb    edx,DWORD PTR [ebp+0x542974c1]
  42516d:	jl     0x42511c
  42516f:	push   0xffffffef
  425171:	mov    BYTE PTR [ebp+0x7d],ch
  425174:	or     al,0x82
  425176:	popf   
  425177:	rol    BYTE PTR [edx-0x61c4f1e3],1
  42517d:	mov    al,ds:0x2e9fdf54
  425182:	and    DWORD PTR [edx],ebx
  425184:	mov    BYTE PTR [eax+0x69],cl
  425187:	and    ecx,ebx
  425189:	jp     0x425115
  42518b:	in     eax,0x58
  42518d:	jns    0x4251e6
  42518f:	add    DWORD PTR [edx+0x17],esi
  425192:	mov    al,ds:0x47ba032f
  425197:	mov    bh,0xe9
  425199:	(bad)  
  42519b:	inc    esp
  42519c:	sub    esp,DWORD PTR [esi+0x7]
  42519f:	icebp  
  4251a0:	or     eax,0x664d5ae6
  4251a5:	inc    ebp
  4251a6:	stos   DWORD PTR es:[edi],eax
  4251a7:	dec    esi
  4251a8:	ins    DWORD PTR es:[edi],dx
  4251a9:	sahf   
  4251aa:	mul    dh
  4251ac:	addr16 dec edx
  4251ae:	mov    edi,0x5fd7d2ca
  4251b3:	jae    0x425143
  4251b5:	rcr    DWORD PTR [ebp+0x2ba33a3e],1
  4251bb:	mov    eax,0x100de12b
  4251c0:	addr16 gs xchg ecx,eax
  4251c3:	or     BYTE PTR [edx+0x78333013],cl
  4251c9:	leave  
  4251ca:	adc    cl,BYTE PTR [ecx+ebx*1-0x4ac446b6]
  4251d1:	stc    
  4251d2:	and    BYTE PTR [bx+si],bl
  4251d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251d6:	adc    bl,BYTE PTR [ecx+0xd280b84]
  4251dc:	xchg   ebp,eax
  4251dd:	push   esi
  4251de:	cwde   
  4251df:	test   DWORD PTR ds:0xe640718d,eax
  4251e5:	inc    ebx
  4251e6:	jb     0x425233
  4251e8:	daa    
  4251e9:	xchg   esi,eax
  4251ea:	aaa    
  4251eb:	aam    0x36
  4251ed:	fdiv   DWORD PTR [edx+0x72674fa0]
  4251f3:	mov    ch,0x88
  4251f5:	pop    es
  4251f6:	sti    
  4251f7:	mov    DWORD PTR [ebx-0x2583fe0e],ebx
  4251fd:	xchg   esp,eax
  4251fe:	mov    BYTE PTR [ebx],bh
  425200:	or     BYTE PTR [ecx+ecx*4-0x3d],0xcc
  425205:	inc    esp
  425206:	dec    edx
  425207:	pushf  
  425208:	mov    ebp,0xdbe8c159
  42520d:	adc    ecx,esp
  42520f:	jmp    0x4251c8
  425211:	in     al,dx
  425212:	lods   al,BYTE PTR ds:[esi]
  425213:	lods   al,BYTE PTR ds:[esi]
  425214:	rep lods eax,DWORD PTR ds:[esi]
  425216:	cmp    DWORD PTR [ebp+edx*1+0x13],0x54
  42521b:	mov    BYTE PTR [ecx],ah
  42521d:	fsubr  DWORD PTR [ebx+edi*1+0x775ae25]
  425224:	fst    QWORD PTR [ecx-0x3b]
  425227:	fisttp WORD PTR [edx]
  425229:	neg    BYTE PTR [esi]
  42522b:	push   ebx
  42522c:	sub    eax,0x756721d2
  425231:	int3   
  425232:	inc    eax
  425233:	fdivp  st(1),st
  425235:	out    dx,eax
  425236:	ja     0x425288
  425238:	xor    ebx,DWORD PTR [eax+0x52]
  42523b:	push   ecx
  42523c:	xchg   edx,eax
  42523d:	sub    BYTE PTR [ebp+eax*2-0x17fffe35],bl
  425244:	add    DWORD PTR [eax],eax
  425246:	add    BYTE PTR [ebx-0x7e7e8ab2],dh
  42524c:	ror    DWORD PTR [edi+eax*1-0x59fac4fa],1
  425253:	mov    edi,0x64cd981f
  425258:	sub    DWORD PTR [edx+0x73],ebx
  42525b:	pop    esp
  42525c:	cmp    esi,ecx
  42525e:	or     DWORD PTR [edx-0xf],ecx
  425261:	adc    DWORD PTR [eax],edx
  425263:	daa    
  425264:	gs int3 
  425266:	jb     0x425207
  425268:	sbb    ch,BYTE PTR [edx+0x23bc1d2d]
  42526e:	out    0xb4,eax
  425270:	fst    DWORD PTR [edi+0x56bef017]
  425276:	mov    dh,0x4f
  425278:	retf   
  425279:	jae    0x4252f3
  42527b:	jmp    0x425227
  42527d:	rol    BYTE PTR [eax+0x9684985],cl
  425283:	rol    esi,cl
  425285:	sbb    ecx,DWORD PTR [ebx+0x76]
  425288:	cmp    eax,0xfd152d28
  42528d:	or     al,0xd4
  42528f:	push   ebx
  425290:	mov    dh,0x66
  425292:	xchg   ebp,eax
  425293:	pop    ds
  425294:	cdq    
  425295:	dec    DWORD PTR [edi-0xc211886]
  42529b:	xchg   ecx,eax
  42529c:	shl    DWORD PTR [esi-0x7c],1
  42529f:	jae    0x42525d
  4252a1:	adc    DWORD PTR [eax+edx*2+0xbf65f1d],ebp
  4252a8:	pop    esp
  4252a9:	mov    eax,0xd9f34a50
  4252ae:	daa    
  4252af:	imul   esi,DWORD PTR [edi+0x20774b1],0x5ef1fc47
  4252b9:	mov    ecx,DWORD PTR [ebx-0x6cc619c7]
  4252bf:	jbe    0x42525f
  4252c1:	hlt    
  4252c2:	jb     0x425268
  4252c4:	and    ah,BYTE PTR [edi+edx*1+0x4471ffcf]
  4252cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252cc:	mov    esp,0xac5a819b
  4252d1:	or     DWORD PTR [edx+0x1316c514],edx
  4252d7:	cld    
  4252d8:	sub    BYTE PTR [esi+0xac881c0],al
  4252de:	push   0x15798f8c
  4252e3:	sti    
  4252e4:	jmp    0xaa9b5b04
  4252e9:	sahf   
  4252ea:	adc    DWORD PTR [ebx],0xc4393d2a
  4252f0:	cmp    bl,bl
  4252f2:	nop
  4252f3:	cmp    DWORD PTR [esi+0x5c],0xffffffe0
  4252f7:	cdq    
  4252f8:	dec    eax
  4252f9:	pop    ebx
  4252fa:	fadd   st(0),st
  4252fc:	aas    
  4252fd:	jnp    0x42534b
  4252ff:	lea    eax,[ebx+0x7a]
  425302:	add    eax,0xaadfc4
  425307:	xchg   edi,eax
  425308:	sahf   
  425309:	sub    DWORD PTR [eax+0x54fa5a7a],ebp
  42530f:	pop    es
  425310:	js     0x4252cf
  425312:	mov    ecx,0x80a8632d
  425317:	call   FWORD PTR fs:[ebp+0x201deaeb]
  42531e:	sub    ch,al
  425320:	xchg   DWORD PTR [esi+ebp*2],eax
  425323:	or     BYTE PTR [edx],ch
  425325:	shl    DWORD PTR [ecx+0x57],1
  425328:	mov    bh,0xb4
  42532a:	push   cs
  42532b:	cmovnp ecx,DWORD PTR ds:0xa11982d1
  425332:	sbb    al,0x8
  425334:	or     DWORD PTR [edx+0x2f],ebx
  425337:	or     esp,esp
  425339:	push   ebx
  42533a:	xor    ebx,DWORD PTR [edx]
  42533c:	add    ecx,DWORD PTR [eax-0x63]
  42533f:	loop   0x425345
  425341:	scas   eax,DWORD PTR es:[edi]
  425342:	pop    ecx
  425343:	or     al,0x41
  425345:	dec    esi
  425346:	push   ecx
  425347:	pop    ebx
  425348:	cld    
  425349:	push   ds
  42534a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42534b:	cmp    BYTE PTR [ecx],ah
  42534d:	shl    esi,0x8c
  425350:	push   edx
  425351:	les    ecx,FWORD PTR [ecx+esi*8+0x5e9c83e]
  425358:	mov    ebp,0x40d961ea
  42535d:	data16 jno 0x425328
  425360:	popf   
  425361:	add    esi,edi
  425363:	sbb    BYTE PTR [edi-0x3e],al
  425366:	aas    
  425367:	in     eax,dx
  425368:	repnz outs dx,BYTE PTR ds:[esi]
  42536a:	inc    edi
  42536b:	aam    0xd0
  42536d:	call   0xf6c:0x5a03caa9
  425374:	ins    BYTE PTR es:[edi],dx
  425375:	mov    bh,ah
  425377:	push   eax
  425378:	or     BYTE PTR [eax-0x6f0b8d8],al
  42537e:	xor    al,0xc0
  425380:	je     0x4253c1
  425382:	ror    BYTE PTR [ebp+0x70],1
  425385:	add    bh,BYTE PTR [ecx+0x5b]
  425388:	mov    ch,0xd3
  42538a:	jp     0x425335
  42538c:	xchg   ecx,eax
  42538d:	in     al,dx
  42538e:	xor    al,0x6d
  425390:	mov    al,ds:0xf52ba27d
  425395:	clc    
  425396:	xor    ecx,esp
  425398:	dec    edi
  425399:	sub    ch,BYTE PTR [eax-0x45]
  42539c:	push   esp
  42539d:	and    DWORD PTR [ebx+0x75],ebp
  4253a0:	loope  0x4253aa
  4253a2:	jp     0x4253d4
  4253a4:	mov    cl,0xcf
  4253a6:	pop    ecx
  4253a7:	cwde   
  4253a8:	pop    ebx
  4253a9:	xchg   ecx,eax
  4253aa:	lock iret 
  4253ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4253ad:	ret    
  4253ae:	jmp    0x665f0a02
  4253b3:	fcom   DWORD PTR [ebx+0xf3714d0]
  4253b9:	add    eax,0xa431d6cd
  4253be:	in     eax,0x52
  4253c0:	mov    esi,0xf5e3ad64
  4253c5:	es es cmp al,0x48
  4253c9:	sbb    BYTE PTR [eax],al
  4253cb:	jmp    0xaec6:0xf30b9f01
  4253d2:	pop    ds
  4253d3:	loopne 0x425384
  4253d5:	jle    0x42539b
  4253d7:	sub    ebx,DWORD PTR [esi+0xae5c7ae]
  4253dd:	xchg   edi,eax
  4253de:	lods   al,BYTE PTR ds:[esi]
  4253df:	sub    ch,BYTE PTR ds:0xa136543e
  4253e5:	xchg   edx,eax
  4253e6:	fs ds sbb bh,dl
  4253ea:	dec    edx
  4253eb:	shl    BYTE PTR [ebp+0x56],cl
  4253ee:	and    al,BYTE PTR [ecx+0x2b3f06a]
  4253f4:	cmp    al,al
  4253f6:	jae    0x4253b1
  4253f8:	addr16 lahf 
  4253fa:	scas   eax,DWORD PTR es:[edi]
  4253fb:	pusha  
  4253fc:	nop
  4253fd:	arpl   WORD PTR es:[esi],bp
  425400:	jns    0x4253e5
  425402:	pop    es
  425403:	adc    al,0x77
  425405:	xchg   edx,eax
  425406:	lock mov ds:0xcfe7a7c0,al
  42540c:	lods   al,BYTE PTR ds:[esi]
  42540d:	dec    esi
  42540e:	sub    al,0xfe
  425410:	test   al,al
  425412:	inc    ecx
  425413:	dec    esi
  425414:	mov    ebx,?
  425416:	pop    esi
  425417:	push   ds
  425418:	jo     0x4253c5
  42541a:	inc    ebp
  42541b:	out    0x65,eax
  42541d:	popf   
  42541e:	pop    ecx
  42541f:	mov    DWORD PTR [eax],esi
  425421:	mov    edi,0xb594ba12
  425426:	dec    ebx
  425427:	cmp    bh,BYTE PTR [edx+0x1409cf58]
  42542d:	add    DWORD PTR [ebp+0x9b42ca0],eax
  425433:	mov    esp,0x6aadbd99
  425438:	pop    eax
  425439:	je     0x425454
  42543b:	mov    ds:0x2d2b2f38,al
  425440:	int    0x1
  425442:	add    al,ch
  425444:	add    DWORD PTR [eax],eax
  425446:	add    BYTE PTR [eax+0x4e7e604a],dl
  42544c:	je     0x42547e
  42544e:	or     al,BYTE PTR [ebx+0x2a]
  425451:	adc    edx,DWORD PTR [esi]
  425453:	pop    ecx
  425454:	cmp    BYTE PTR ds:0x18c9c730,al
  42545a:	add    DWORD PTR [eax],esi
  42545c:	sub    ch,BYTE PTR [ebx]
  42545e:	mov    al,0x84
  425460:	std    
  425461:	mov    ds:0x399b088,eax
  425466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425467:	iret   
  425468:	ds pop ss
  42546a:	mov    BYTE PTR [eax-0x59],dl
  42546d:	push   ebx
  42546e:	sti    
  42546f:	mov    edx,0x5005adcc
  425474:	mov    esi,0xa908922d
  425479:	inc    eax
  42547a:	push   ebx
  42547b:	mov    BYTE PTR [esi+0x6c40814e],al
  425481:	mov    ds:0xc2fb2c38,al
  425486:	mov    esi,0x8eba0744
  42548b:	lds    edx,FWORD PTR [eax+esi*8]
  42548e:	mov    bl,0xec
  425490:	inc    esi
  425491:	adc    ah,BYTE PTR [ebp+edi*4+0x76600f53]
  425498:	pop    es
  425499:	mov    dh,0xb8
  42549b:	inc    ebp
  42549c:	dec    eax
  42549d:	and    al,0x28
  42549f:	aam    0x67
  4254a1:	mov    ch,0x41
  4254a3:	arpl   sp,ax
  4254a5:	xchg   ecx,eax
  4254a6:	icebp  
  4254a7:	mov    bh,BYTE PTR ds:0x55a4ae11
  4254ad:	loope  0x425466
  4254af:	(bad)  
  4254b0:	and    DWORD PTR [ebx],esi
  4254b2:	cmp    DWORD PTR [edi],ebx
  4254b4:	push   es
  4254b5:	loope  0x425458
  4254b7:	cmp    DWORD PTR es:0x1543ca6c,0x205084b9
  4254c2:	jmp    0x6602:0x668c1eef
  4254c9:	and    edx,eax
  4254cb:	mov    edi,0x8d80fe2e
  4254d0:	addr16 jle 0x4254b9
  4254d3:	and    bl,BYTE PTR [edi]
  4254d5:	jmp    0x4254c4
  4254d7:	mov    esi,0x51d381eb
  4254dc:	jg     0x425469
  4254de:	mov    edx,0x5ca2318f
  4254e3:	mov    ah,0xe4
  4254e5:	fcomi  st,st(6)
  4254e7:	jbe    0x4254e3
  4254e9:	xchg   esp,eax
  4254ea:	out    0x22,al
  4254ec:	inc    ecx
  4254ed:	dec    esp
  4254ee:	push   0x57
  4254f0:	int    0x6f
  4254f2:	xchg   DWORD PTR [edx],eax
  4254f4:	bound  esi,QWORD PTR [ecx+esi*4-0x420cd3f6]
  4254fb:	fs dec edx
  4254fd:	mov    bh,0x96
  4254ff:	or     BYTE PTR [ecx],bl
  425501:	icebp  
  425502:	and    ebp,esi
  425504:	(bad)  
  425505:	xchg   ebx,eax
  425506:	cmp    BYTE PTR [ecx+edx*1-0x2d],bh
  42550a:	sub    ebp,DWORD PTR [ebx+eax*8]
  42550d:	sbb    BYTE PTR [edx],0x49
  425510:	mov    bl,0x84
  425512:	adc    eax,0x9a1ffb77
  425517:	stc    
  425518:	(bad)  
  425519:	pop    ss
  42551a:	xchg   BYTE PTR ds:0x38b214c2,bl
  425520:	stos   DWORD PTR es:[edi],eax
  425521:	push   ebp
  425522:	xchg   edi,eax
  425523:	sbb    cl,bl
  425525:	xchg   edi,eax
  425526:	lods   eax,DWORD PTR ds:[esi]
  425527:	xchg   edi,eax
  425528:	adc    BYTE PTR [ecx+0x1],cl
  42552b:	repnz pop ecx
  42552d:	retf   
  42552e:	cli    
  42552f:	xor    eax,0xa274ee37
  425534:	add    DWORD PTR [eax-0x3a],edi
  425537:	arpl   ax,bx
  425539:	mov    bh,0xad
  42553b:	mov    ebp,0xed6dedd5
  425540:	popa   
  425541:	xchg   ebp,eax
  425542:	pop    es
  425543:	mov    ch,0x6f
  425545:	fidivr WORD PTR [ecx+ecx*1]
  425548:	jmp    0x2570718c
  42554d:	sahf   
  42554e:	add    DWORD PTR [esi],edi
  425550:	or     BYTE PTR [esp+eiz*2-0x1456b5e3],bh
  425557:	out    dx,eax
  425558:	and    BYTE PTR [eax],dh
  42555a:	mov    DWORD PTR [ecx],ebp
  42555c:	push   DWORD PTR [edx]
  42555e:	call   0xe34edf98
  425563:	xchg   DWORD PTR ds:0xc406195b,esi
  425569:	inc    esi
  42556a:	lea    esi,[edi+0x27977a5e]
  425570:	(bad)  
  425571:	div    DWORD PTR [esi+edx*1-0x2a]
  425575:	cmp    ebx,DWORD PTR [ebp-0x6a]
  425578:	jae    0x4255a2
  42557a:	mov    ebp,0x26bf49d6
  42557f:	test   bl,bl
  425581:	pmulhw mm1,QWORD PTR [eax+eiz*8]
  425585:	imul   edi,DWORD PTR [esi],0xe94c2283
  42558b:	xchg   ebp,eax
  42558c:	scas   al,BYTE PTR es:[edi]
  42558d:	push   0xb8f24e5
  425592:	pop    edx
  425593:	es popf 
  425595:	outs   dx,BYTE PTR ds:[esi]
  425596:	aaa    
  425597:	pop    eax
  425598:	sub    DWORD PTR [esi-0x1869183],ecx
  42559e:	inc    edi
  42559f:	adc    esi,DWORD PTR [edi+0x5a65064f]
  4255a5:	push   0x5df5a497
  4255aa:	inc    ebx
  4255ab:	cld    
  4255ac:	lods   eax,DWORD PTR ds:[esi]
  4255ad:	and    bh,al
  4255af:	mov    ds:0xf886ae30,eax
  4255b4:	lock inc ebx
  4255b6:	call   0x9c93deef
  4255bb:	pop    ebp
  4255bc:	stc    
  4255bd:	ins    DWORD PTR es:[edi],dx
  4255be:	xor    al,BYTE PTR [ebp+0x59893583]
  4255c4:	ret    0xc5f8
  4255c7:	lea    esi,[eax]
  4255c9:	mov    ebp,0x22e877f3
  4255ce:	pop    eax
  4255cf:	into   
  4255d0:	test   eax,0xa8868ed2
  4255d5:	add    DWORD PTR [esi-0x17],esi
  4255d8:	dec    edx
  4255d9:	mov    dl,0xe3
  4255db:	out    dx,eax
  4255dc:	out    0x20,al
  4255de:	pop    edi
  4255df:	mov    fs:0xb8f4ebb9,eax
  4255e5:	xor    al,0x30
  4255e7:	out    0x38,eax
  4255e9:	(bad)  
  4255ea:	pop    edx
  4255eb:	das    
  4255ec:	rcl    BYTE PTR [edi],0xf7
  4255ef:	adc    al,0x6
  4255f1:	mov    ebx,0x3c133a68
  4255f6:	adc    eax,edi
  4255f8:	stos   DWORD PTR es:[edi],eax
  4255f9:	cmc    
  4255fa:	or     esp,DWORD PTR [ebx]
  4255fc:	mov    bl,0x61
  4255fe:	inc    esp
  4255ff:	arpl   WORD PTR [esi],bx
  425601:	mov    al,0xf9
  425603:	cmp    ecx,DWORD PTR [ebx]
  425605:	mov    bh,0x99
  425607:	pop    ecx
  425608:	mov    dh,0x2a
  42560a:	xchg   DWORD PTR [eax],edi
  42560c:	fwait
  42560d:	xchg   edi,eax
  42560e:	fsubrp st(1),st
  425610:	repnz stos BYTE PTR es:[edi],al
  425612:	pusha  
  425613:	add    BYTE PTR [edi+0x14],bl
  425616:	jmp    0x4255dc
  425618:	jne    0x425664
  42561a:	jecxz  0x42565e
  42561c:	xchg   esi,eax
  42561d:	cmp    DWORD PTR [edi-0x64c9125c],ebx
  425623:	fnsave [edx]
  425625:	inc    esp
  425626:	dec    esp
  425627:	sbb    BYTE PTR [edi+0x74],bl
  42562a:	aas    
  42562b:	sub    al,0x3f
  42562d:	ds dec ebp
  42562f:	add    dh,BYTE PTR [ebx]
  425631:	mov    edi,DWORD PTR [eax]
  425633:	mov    ebx,0xb13bb3b8
  425638:	sbb    BYTE PTR [edi+0x1d],dh
  42563b:	push   ebp
  42563c:	pop    ebx
  42563d:	imul   ecx,DWORD PTR [ebp+edx*1-0x17fffe31],0x80000001
  425648:	mov    dl,0x7c
  42564a:	in     eax,0x4e
  42564c:	push   esi
  42564d:	mov    esi,0x607c5c72
  425652:	dec    esp
  425653:	stc    
  425654:	out    dx,eax
  425655:	add    DWORD PTR [edx+eiz*2-0x2c],edi
  425659:	aam    0x67
  42565b:	mov    dl,0x42
  42565d:	xor    DWORD PTR [esi+0x1d],0xfffffff4
  425661:	and    eax,0x83c798d7
  425666:	push   ebp
  425667:	hlt    
  425668:	fsubp  st(7),st
  42566a:	(bad)  
  42566b:	in     eax,dx
  42566c:	lock mov bh,BYTE PTR [ecx+0x728a4f21]
  425673:	outs   dx,BYTE PTR ds:[esi]
  425674:	ret    0x26b9
  425677:	aaa    
  425678:	mov    BYTE PTR [ecx],ch
  42567a:	and    ch,bl
  42567c:	outs   dx,DWORD PTR ds:[esi]
  42567d:	jnp    0x425643
  42567f:	mov    dh,bh
  425681:	ins    BYTE PTR es:[edi],dx
  425682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425683:	adc    al,0xce
  425685:	(bad)  
  425686:	arpl   bp,si
  425688:	push   ds
  425689:	mov    ch,0xaf
  42568b:	push   esi
  42568c:	jge    0x42569d
  42568e:	cdq    
  42568f:	push   es
  425690:	popa   
  425691:	and    BYTE PTR [ecx+eax*1-0x1cfd8a28],ah
  425698:	pop    eax
  425699:	sbb    ch,BYTE PTR [eax]
  42569b:	rol    BYTE PTR [esi-0x43],0x47
  42569f:	pop    ds
  4256a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256a1:	sbb    DWORD PTR [esi+0x3dcf5465],eax
  4256a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256a8:	adc    esi,0x1
  4256ab:	mov    esi,0x202e3f3d
  4256b0:	mov    dl,0x77
  4256b2:	ja     0x4256bd
  4256b4:	add    DWORD PTR [eax+0x3084de5b],edx
  4256ba:	cs (bad) 
  4256bc:	pop    ebx
  4256bd:	scas   al,BYTE PTR es:[edi]
  4256be:	jno    0x4256a4
  4256c0:	test   DWORD PTR [ebx-0xa],edx
  4256c3:	loope  0x4256f2
  4256c5:	push   cs
  4256c6:	pop    esp
  4256c7:	repnz dec ebp
  4256c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256ca:	les    ebx,FWORD PTR [esi]
  4256cc:	sbb    ah,0xa8
  4256cf:	or     eax,0xada39445
  4256d4:	clc    
  4256d5:	mov    dh,0xea
  4256d7:	and    cl,bl
  4256d9:	rol    ebp,cl
  4256db:	fild   QWORD PTR [edi+0x795859bc]
  4256e1:	xchg   edi,eax
  4256e2:	push   eax
  4256e3:	xor    ah,BYTE PTR es:[ecx+0x7bcfb54f]
  4256ea:	scas   eax,DWORD PTR es:[edi]
  4256eb:	sub    ebp,ecx
  4256ed:	cmp    DWORD PTR cs:[esi],ebp
  4256f0:	rol    edi,cl
  4256f2:	xor    edx,edx
  4256f4:	inc    ebx
  4256f5:	les    ebp,FWORD PTR [ecx+eiz*1+0x76]
  4256f9:	sub    eax,0xa7bafcbb
  4256fe:	aas    
  4256ff:	xchg   ebp,eax
  425700:	popa   
  425701:	jne    0x4256f0
  425703:	cmp    DWORD PTR [ebx-0x62ae126e],ebp
  425709:	retf   
  42570a:	bound  ecx,QWORD PTR [esi-0x4e5bc8ed]
  425710:	jb     0x42573b
  425712:	push   esi
  425713:	xor    ecx,ecx
  425715:	cwde   
  425716:	xor    edx,DWORD PTR [ebp-0x70060796]
  42571c:	push   es
  42571d:	out    dx,al
  42571e:	int    0x77
  425720:	out    dx,eax
  425721:	mov    ch,0x8f
  425723:	xchg   esi,eax
  425724:	jno    0x4256d1
  425726:	fidivr DWORD PTR [edi+0x1]
  425729:	paddsb mm7,QWORD PTR [eax-0x1a5af390]
  425730:	retf   0x89b
  425733:	imul   ebx,DWORD PTR [edx+0x7b96db61],0x1c
  42573a:	add    ch,BYTE PTR [edi]
  42573c:	dec    esi
  42573d:	adc    eax,0x69033d86
  425742:	jmp    0x32b45d0c
  425747:	mov    al,0xaf
  425749:	call   0x24d918bf
  42574e:	inc    esp
  42574f:	jae    0x425724
  425751:	sub    eax,0x52a46534
  425756:	mov    bl,0x1c
  425758:	fdivr  QWORD PTR [ebp+0x62f17d2c]
  42575e:	cli    
  42575f:	enter  0x22ce,0xe4
  425763:	push   cs
  425764:	int3   
  425765:	lock mov BYTE PTR [edx],ch
  425768:	xor    BYTE PTR [ecx-0x53],ch
  42576b:	sbb    bl,BYTE PTR [edx+0x76]
  42576e:	es iret 
  425770:	pop    esp
  425771:	test   BYTE PTR [ebx],dh
  425773:	psubsb mm0,QWORD PTR [edx-0x50]
  425777:	mov    ds:0x3786c5b1,eax
  42577c:	dec    ecx
  42577d:	cld    
  42577e:	fcom   DWORD PTR [ebx-0x1e]
  425781:	pushf  
  425782:	push   0xffffff96
  425784:	daa    
  425785:	sbb    al,BYTE PTR [ecx-0x6e]
  425788:	xchg   BYTE PTR [ecx+edi*1+0x57],bh
  42578c:	xor    eax,0x4a11212d
  425791:	(bad)  
  425792:	jb     0x425758
  425794:	sbb    eax,0xd3526ca0
  425799:	jo     0x4257ba
  42579b:	xchg   ebp,eax
  42579c:	sub    bh,bh
  42579e:	adc    al,0xc1
  4257a0:	and    al,0x9e
  4257a2:	test   eax,0x509bdd7c
  4257a7:	cmp    ch,BYTE PTR [ecx-0x20]
  4257aa:	fwait
  4257ab:	call   0x656f:0xceb6baa8
  4257b2:	js     0x425771
  4257b4:	push   ds
  4257b5:	cdq    
  4257b6:	sbb    DWORD PTR [edi],ebp
  4257b8:	add    ecx,DWORD PTR [eax]
  4257ba:	mov    WORD PTR [edx+0x62e90294],gs
  4257c0:	ret    0x3fb0
  4257c3:	mov    ch,0x12
  4257c5:	mov    bl,0xcd
  4257c7:	loope  0x425829
  4257c9:	fwait
  4257ca:	mov    edi,0x5d694e25
  4257cf:	test   BYTE PTR [ebp-0x67],bl
  4257d2:	dec    ebp
  4257d3:	adc    cl,BYTE PTR [edi+0x10]
  4257d6:	add    eax,0x7212bc94
  4257db:	inc    edi
  4257dc:	mov    edx,0x86e5fc28
  4257e1:	outs   dx,BYTE PTR ds:[esi]
  4257e2:	and    DWORD PTR [edi-0x50ed7722],esp
  4257e8:	jg     0x425787
  4257ea:	int    0xdb
  4257ec:	push   esi
  4257ed:	outs   dx,DWORD PTR ds:[esi]
  4257ee:	inc    ebx
  4257ef:	or     al,0x55
  4257f1:	xor    al,BYTE PTR [ebx-0x28939377]
  4257f7:	mov    bh,0xe3
  4257f9:	push   edi
  4257fa:	jnp    0x42581a
  4257fc:	mov    BYTE PTR [ecx+ebp*1-0x4ef00e5b],dl
  425803:	adc    eax,0xad9dd740
  425808:	push   ss
  425809:	and    eax,DWORD PTR [esi+edi*1]
  42580c:	sar    BYTE PTR [edi],cl
  42580e:	repnz mov eax,0x854290b9
  425814:	xor    al,0x54
  425816:	cld    
  425817:	push   ecx
  425818:	aam    0xa4
  42581a:	popw   ss
  42581c:	std    
  42581d:	sti    
  42581e:	aad    0xc4
  425820:	pop    es
  425821:	mov    edx,DWORD PTR [edi+0x6810bbca]
  425827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425828:	xchg   ebp,eax
  425829:	push   es
  42582a:	fild   QWORD PTR [esi-0x59c6da3]
  425830:	dec    esp
  425831:	push   es
  425832:	ret    
  425833:	mov    dh,0xcb
  425835:	(bad)  
  425836:	jge    0x425885
  425838:	shr    BYTE PTR [eax],1
  42583a:	test   eax,0x89cd4358
  42583f:	std    
  425840:	rol    BYTE PTR [ecx],1
  425842:	add    al,ch
  425844:	add    DWORD PTR [eax],eax
  425846:	add    BYTE PTR [edx],dl
  425848:	fstp   TBYTE PTR [edx]
  42584a:	inc    edx
  42584b:	and    BYTE PTR [edx-0x37bceee1],ch
  425851:	dec    edi
  425852:	cwde   
  425853:	sub    al,0x30
  425855:	mov    DWORD PTR [esi+eax*4],ebx
  425858:	fstp   QWORD PTR [edi-0x3ab794fb]
  42585e:	pop    edi
  42585f:	out    0x55,al
  425861:	mov    ah,0xa4
  425863:	push   es
  425864:	jnp    0x42583a
  425866:	in     eax,0x58
  425868:	ins    DWORD PTR es:[edi],dx
  425869:	mov    eax,ds:0x9f25c790
  42586e:	inc    esp
  42586f:	scas   al,BYTE PTR es:[edi]
  425870:	mov    eax,0x6c11a659
  425875:	add    edx,DWORD PTR [esi]
  425877:	sahf   
  425878:	adc    BYTE PTR [ebx-0x11],bl
  42587b:	mov    WORD PTR [ecx-0x29b953a7],?
  425881:	add    ch,bh
  425883:	into   
  425884:	loop   0x4258c2
  425886:	dec    ecx
  425887:	add    ecx,edi
  425889:	nop
  42588a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42588b:	outs   dx,BYTE PTR ds:[esi]
  42588c:	pop    esp
  42588d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42588e:	imul   eax,DWORD PTR [esi+0xf],0xeba00029
  425895:	mov    edx,0x1e9cf12
  42589a:	jno    0x4258a9
  42589c:	sbb    dh,dl
  42589e:	in     eax,0xbd
  4258a0:	dec    ebp
  4258a1:	test   al,0xd6
  4258a3:	jo     0x425851
  4258a5:	mov    ds:0x11be1cb4,al
  4258aa:	aad    0xa4
  4258ac:	lods   eax,DWORD PTR ds:[esi]
  4258ad:	mov    ?,edi
  4258af:	rcl    BYTE PTR [ebp-0x5a],0x53
  4258b3:	jecxz  0x4258ea
  4258b5:	fisubr DWORD PTR [edx-0x76c08edf]
  4258bb:	sub    edx,ebx
  4258bd:	sar    edx,1
  4258bf:	repnz popa 
  4258c1:	dec    edx
  4258c2:	or     eax,0x7f48f68e
  4258c7:	add    al,0x95
  4258c9:	cmp    eax,0x298635b9
  4258ce:	call   0x4595:0x9f755ed1
  4258d5:	pop    ss
  4258d6:	push   0xd4be52ad
  4258db:	lock xchg DWORD PTR [edi-0x59],ebp
  4258df:	sub    cl,BYTE PTR [ebx]
  4258e1:	arpl   WORD PTR [esi-0x39],di
  4258e4:	push   esp
  4258e5:	test   bl,0x56
  4258e8:	push   cs
  4258e9:	mov    cl,0xd2
  4258eb:	mov    ch,0x6e
  4258ed:	inc    esi
  4258ee:	pop    esp
  4258ef:	je     0x4258a6
  4258f1:	cmp    eax,DWORD PTR ds:0x8018132f
  4258f7:	add    DWORD PTR [esi+eax*2],0x7d7957f3
  4258fe:	daa    
  4258ff:	sar    BYTE PTR [eax+edx*4],0x71
  425903:	add    DWORD PTR [esi-0x31],esp
  425906:	xor    dl,BYTE PTR [edi+0x46ae7469]
  42590c:	lds    ebx,FWORD PTR [ebp-0x743d4411]
  425912:	or     dh,ch
  425914:	(bad)  
  425915:	cmp    dl,BYTE PTR [ecx+0x617efc12]
  42591b:	dec    edi
  42591c:	ins    BYTE PTR es:[edi],dx
  42591d:	add    al,0x75
  42591f:	fcomp  st(3)
  425921:	xor    cl,BYTE PTR [ebp-0x1c24f63c]
  425927:	cmc    
  425928:	arpl   WORD PTR [ecx],si
  42592a:	pop    esi
  42592b:	(bad)  
  42592c:	not    BYTE PTR [esi]
  42592e:	mov    ebp,0x119b4769
  425933:	mov    ebp,0x2f00144c
  425938:	repnz into 
  42593a:	nop
  42593b:	adc    BYTE PTR [ecx+0x5b],dl
  42593e:	test   dl,0xf2
  425941:	pop    es
  425942:	loopne 0x425952
  425944:	loop   0x4258f5
  425946:	add    BYTE PTR [ecx+0x33],al
  425949:	gs pop edx
  42594b:	inc    esp
  42594c:	and    ebp,DWORD PTR [ecx]
  42594e:	pop    ss
  42594f:	lds    ecx,FWORD PTR [eax-0x6c]
  425952:	test   BYTE PTR [ecx+0x7777ff08],0x29
  425959:	xor    ax,0x56f6
  42595d:	jb     0x42596d
  42595f:	jno    0x425965
  425961:	ret    0xc00b
  425964:	cmp    esp,DWORD PTR [esp+ebx*2+0x28]
  425968:	xchg   edi,eax
  425969:	or     BYTE PTR [esi-0x1],dl
  42596c:	nop
  42596d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42596e:	xchg   ebp,eax
  42596f:	jp     0x42591a
  425971:	cs cs push edi
  425974:	lods   al,BYTE PTR ds:[esi]
  425975:	adc    DWORD PTR [edx],0xd5d233db
  42597b:	xchg   ebx,eax
  42597c:	fisttp QWORD PTR [edi+0x3f]
  42597f:	sub    eax,0x198e29d5
  425984:	imul   eax,ecx,0x28f5ae0c
  42598a:	xchg   DWORD PTR [edi],edx
  42598c:	mov    ah,0x4
  42598e:	cli    
  42598f:	arpl   WORD PTR [ecx+0x24],si
  425992:	and    cl,BYTE PTR [edi+0x2630fa73]
  425998:	test   al,0xb6
  42599a:	add    al,0xab
  42599c:	js     0x4259b0
  42599e:	mov    al,0x75
  4259a0:	mov    edx,0x953bcd19
  4259a5:	cli    
  4259a6:	dec    BYTE PTR [eax+0x4e]
  4259a9:	jl     0x425992
  4259ab:	add    eax,0x5f1ae775
  4259b0:	jge    0x425956
  4259b2:	cmp    esp,esp
  4259b4:	jbe    0x42599d
  4259b6:	dec    esi
  4259b7:	aad    0xbb
  4259b9:	add    edx,DWORD PTR [ecx+eiz*4]
  4259bc:	push   0x26
  4259be:	fs xchg edx,eax
  4259c0:	fs faddp st(4),st
  4259c3:	aaa    
  4259c4:	pop    ebx
  4259c5:	in     al,dx
  4259c6:	sub    DWORD PTR [eax+0x2275c824],ebx
  4259cc:	retf   0xa2c9
  4259cf:	js     0x4259a9
  4259d1:	mov    ebx,eax
  4259d3:	pop    ds
  4259d4:	jns    0x4259d9
  4259d6:	ret    0x21f2
  4259d9:	jl     0x4259cf
  4259db:	outs   dx,DWORD PTR ds:[esi]
  4259dc:	push   ds
  4259dd:	aad    0x89
  4259df:	js     0x425a33
  4259e1:	mov    eax,0xcec3bfe7
  4259e6:	sbb    esp,0x1a
  4259e9:	sub    edi,DWORD PTR [edx+0x6d2d2588]
  4259ef:	push   ecx
  4259f0:	arpl   WORD PTR [edi],sp
  4259f2:	(bad)  
  4259f3:	out    0xe0,al
  4259f5:	jnp    0x425a18
  4259f7:	sbb    BYTE PTR [esi],al
  4259f9:	cld    
  4259fa:	scas   al,BYTE PTR es:[edi]
  4259fb:	push   ebx
  4259fc:	adc    DWORD PTR [ebp-0x74f1c9f2],esi
  425a02:	push   ebx
  425a03:	jmp    0x425a7c
  425a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a06:	xlat   BYTE PTR ds:[ebx]
  425a07:	mov    bl,0x54
  425a09:	rol    DWORD PTR [edx-0x3f915d64],cl
  425a0f:	std    
  425a10:	dec    eax
  425a11:	ret    
  425a12:	mov    BYTE PTR [edx],cl
  425a14:	int    0x17
  425a16:	and    al,0xcd
  425a18:	jmp    0x425a61
  425a1a:	hlt    
  425a1b:	sub    al,0x50
  425a1d:	mov    bh,0x6c
  425a1f:	retf   0x517e
  425a22:	dec    ebx
  425a23:	scas   eax,DWORD PTR es:[edi]
  425a24:	dec    edi
  425a25:	cmp    DWORD PTR [ecx-0x2b530b32],0xfffffff1
  425a2c:	cmc    
  425a2d:	mov    bh,0x1e
  425a2f:	sbb    al,0x66
  425a31:	in     eax,0x66
  425a33:	jmp    edi
  425a35:	lahf   
  425a36:	jle    0x425a43
  425a38:	dec    edx
  425a39:	sub    BYTE PTR [esi],bh
  425a3b:	shl    BYTE PTR ds:0xd2e5041d,0x1
  425a42:	add    al,ch
  425a44:	add    DWORD PTR [eax],eax
  425a46:	add    BYTE PTR [ebp-0x79],bh
  425a49:	(bad)  
  425a4a:	and    ah,BYTE PTR [ebx+edi*8+0x4f]
  425a4e:	sub    BYTE PTR [ebp+0xfae0c42],al
  425a54:	or     ebp,ecx
  425a56:	ret    
  425a57:	jmp    0x532d561b
  425a5c:	jmp    0xa0670af4
  425a61:	ins    DWORD PTR es:[edi],dx
  425a62:	pop    ecx
  425a63:	test   eax,0x89da5062
  425a68:	or     ecx,DWORD PTR [edx]
  425a6a:	popa   
  425a6b:	add    al,BYTE PTR [ebx+0x13]
  425a6e:	adc    ebx,ebx
  425a70:	pop    ds
  425a71:	out    0x94,eax
  425a73:	enter  0x22e3,0xec
  425a77:	mov    ebx,0x2b1a414c
  425a7c:	xchg   ecx,eax
  425a7d:	dec    edx
  425a7e:	bound  ebx,QWORD PTR [ecx+esi*1+0x24f17970]
  425a85:	in     eax,dx
  425a86:	add    ah,BYTE PTR [ecx]
  425a88:	add    BYTE PTR [ecx+eiz*2],bh
  425a8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a8c:	scas   eax,DWORD PTR es:[edi]
  425a8d:	jl     0x425a2a
  425a8f:	pop    ss
  425a90:	or     ebx,DWORD PTR [edi]
  425a92:	dec    edi
  425a93:	(bad)  
  425a94:	pop    ebp
  425a95:	cmp    al,0x9
  425a97:	or     al,0x2e
  425a99:	mov    BYTE PTR [edx-0xc],ah
  425a9c:	pop    ecx
  425a9d:	std    
  425a9e:	je     0x425a4d
  425aa0:	xor    al,0x44
  425aa2:	fnstcw WORD PTR [esi-0x64]
  425aa5:	outs   dx,BYTE PTR ds:[esi]
  425aa6:	xchg   BYTE PTR [edx],al
  425aa8:	in     eax,0xfa
  425aaa:	sbb    ebx,esi
  425aac:	pop    ebp
  425aad:	setl   BYTE PTR [esp+ecx*8+0x4f3b8117]
  425ab5:	jmp    0x2c59:0x440c54cf
  425abc:	rcr    DWORD PTR [ecx+0x63],0x16
  425ac0:	sbb    BYTE PTR [eax-0x5c7cf742],al
  425ac6:	nop
  425ac7:	mov    ds:0xb11ea315,al
  425acc:	pop    esi
  425acd:	mov    eax,0xb31bc832
  425ad2:	pop    esp
  425ad3:	xor    ebp,edx
  425ad5:	mov    ah,0xbd
  425ad7:	pmullw mm3,QWORD PTR [ecx+0x30f212c8]
  425ade:	add    dh,BYTE PTR [edx+0x17]
  425ae1:	jbe    0x425a6c
  425ae3:	mov    ds:0x355a5518,eax
  425ae8:	fiadd  DWORD PTR [ebx-0x46]
  425aeb:	loop   0x425b68
  425aed:	inc    esp
  425aee:	fnstsw WORD PTR [eax-0x5b48b4ae]
  425af4:	je     0x425b55
  425af6:	add    edi,DWORD PTR [edx+0x8]
  425af9:	adc    BYTE PTR [edx+0x3838abe6],al
  425aff:	push   es
  425b00:	mov    DWORD PTR [eax+0x6b3a0f39],edx
  425b06:	cmc    
  425b07:	in     al,dx
  425b08:	add    BYTE PTR [edx],dh
  425b0a:	or     al,0x2b
  425b0c:	gs xor eax,0xb39e1ba1
  425b12:	lock sti 
  425b14:	cwde   
  425b15:	repnz data16 cmc 
  425b18:	adc    al,al
  425b1a:	mov    ds:0xa4179e4b,eax
  425b1f:	das    
  425b20:	dec    BYTE PTR [edx]
  425b22:	mov    ch,0x54
  425b24:	bnd jno 0x425b98
  425b27:	cld    
  425b28:	sub    eax,ecx
  425b2a:	not    bh
  425b2c:	mov    esp,0x98d113ef
  425b31:	sti    
  425b32:	jmp    0x425ad0
  425b34:	retf   
  425b35:	dec    esi
  425b36:	sahf   
  425b37:	test   eax,0x9de1305e
  425b3c:	adc    cl,cl
  425b3e:	cld    
  425b3f:	sbb    DWORD PTR [esi+0x41d571e7],ebx
  425b45:	jne    0x425bbe
  425b47:	int3   
  425b48:	mov    BYTE PTR [ebp-0x7a0ecaae],al
  425b4e:	lods   al,BYTE PTR ds:[esi]
  425b4f:	push   ecx
  425b50:	mov    eax,0x14d26b78
  425b55:	jae    0x425bc8
  425b57:	xchg   DWORD PTR [edx+0x54],esi
  425b5a:	mov    eax,ds:0x48cfdf5e
  425b5f:	push   es
  425b60:	mov    dl,0x31
  425b62:	call   0xba5f70a8
  425b67:	mov    bl,0x52
  425b69:	inc    di
  425b6b:	jne    0x425b48
  425b6d:	dec    esp
  425b6e:	jo     0x425b80
  425b70:	iret   
  425b71:	lds    esi,FWORD PTR [ecx+edi*2]
  425b74:	inc    edi
  425b75:	or     eax,0xc7fa0afc
  425b7a:	add    esi,ebx
  425b7c:	daa    
  425b7d:	imul   ebp,DWORD PTR [ebx+0x14c83f49],0x73309bd5
  425b87:	unpcklps xmm7,xmm2
  425b8a:	rcr    BYTE PTR [ecx+0x278d6a55],0xc3
  425b91:	mov    ds:0x99b6a6a7,al
  425b96:	jnp    0x425b38
  425b98:	enter  0xa598,0xb7
  425b9c:	and    DWORD PTR [edi-0x2f],edi
  425b9f:	cs and ah,BYTE PTR ds:[eax-0x5a622a8d]
  425ba7:	mov    ds:0x4f1e534b,al
  425bac:	jo     0x425c19
  425bae:	jns    0x425bc0
  425bb0:	pop    edx
  425bb1:	popf   
  425bb2:	and    DWORD PTR [esi-0x2ad0072e],edx
  425bb8:	lods   eax,DWORD PTR ds:[esi]
  425bb9:	mov    es:0x50ab666,al
  425bbf:	pop    ebx
  425bc0:	jae    0x425c39
  425bc2:	leave  
  425bc3:	ret    0x3d5
  425bc6:	mov    al,dh
  425bc8:	inc    eax
  425bc9:	in     al,0xd0
  425bcb:	pop    ebp
  425bcc:	mov    DWORD PTR [esi],eax
  425bce:	mov    ?,WORD PTR [esi]
  425bd0:	push   ss
  425bd1:	add    eax,0x16228b22
  425bd6:	inc    DWORD PTR [ebp+0x56cdaec9]
  425bdc:	adc    DWORD PTR [eax+0x4db734f0],eax
  425be2:	xor    bl,BYTE PTR [edx+0x37]
  425be5:	xlat   BYTE PTR ds:[ebx]
  425be6:	or     DWORD PTR [ebx+eax*4-0xe82f689],0x7c
  425bee:	sahf   
  425bef:	repnz test eax,eax
  425bf2:	std    
  425bf3:	mov    al,0x33
  425bf5:	pushf  
  425bf6:	mov    ebp,0xc7adcf13
  425bfb:	fdivr  QWORD PTR [ebx+0x12e54031]
  425c01:	(bad)  
  425c02:	mov    dl,0x58
  425c04:	int    0xcb
  425c06:	les    edx,FWORD PTR [edx]
  425c08:	out    0xfe,al
  425c0a:	daa    
  425c0b:	cmp    al,0x75
  425c0d:	ins    BYTE PTR es:[edi],dx
  425c0e:	push   ds
  425c0f:	xchg   edi,eax
  425c10:	sub    eax,0x6d27e043
  425c15:	cwde   
  425c16:	je     0x425c86
  425c18:	push   0x1
  425c1a:	pop    esp
  425c1b:	add    esp,esi
  425c1d:	jae    0x425c08
  425c1f:	inc    esp
  425c20:	sbb    BYTE PTR [ebx+esi*1-0x46],0xe5
  425c25:	mov    dh,BYTE PTR [ebp+0x50952caf]
  425c2b:	xchg   ebp,eax
  425c2c:	mov    ecx,0xfa49b6d4
  425c31:	mov    ebx,0xfd4fbb4e
  425c36:	inc    DWORD PTR [edx+0x6027c159]
  425c3c:	bound  esi,QWORD PTR [edx]
  425c3e:	dec    ebp
  425c3f:	int    0xd4
  425c41:	add    DWORD PTR [eax],eax
  425c43:	call   0x62425c49
  425c48:	stos   BYTE PTR es:[edi],al
  425c49:	outs   dx,DWORD PTR ds:[esi]
  425c4a:	add    bh,BYTE PTR [ebp+0x62]
  425c4d:	ja     0x425c5c
  425c4f:	(bad)  ds:0xc0ac7ade
  425c55:	or     al,0xfd
  425c57:	retf   0xd969
  425c5a:	dec    eax
  425c5b:	lahf   
  425c5c:	int3   
  425c5d:	sub    DWORD PTR [edi-0x11],eax
  425c60:	sub    al,0x5d
  425c62:	mov    BYTE PTR [ebx+ecx*2],dl
  425c65:	sahf   
  425c66:	aad    0xdc
  425c68:	test   eax,0x7c5fe53
  425c6d:	aaa    
  425c6e:	test   BYTE PTR [ebx+esi*4+0x53c0e476],dl
  425c75:	xchg   esi,eax
  425c76:	scas   al,BYTE PTR es:[edi]
  425c77:	and    ch,al
  425c79:	je     0x425c8f
  425c7b:	stos   DWORD PTR es:[edi],eax
  425c7c:	mov    ebx,0x94cf11f4
  425c81:	mov    ecx,0x358c7dc2
  425c86:	icebp  
  425c87:	call   0x632301b
  425c8c:	cmp    al,0x98
  425c8e:	jmp    0x1092:0x300b9088
  425c95:	jnp    0x425c51
  425c97:	mov    al,0xb0
  425c99:	cs test al,0x43
  425c9c:	jle    0x425ce0
  425c9e:	shl    BYTE PTR [esi],0x4f
  425ca1:	xor    al,0x6a
  425ca3:	sbb    cl,BYTE PTR ds:[esi]
  425ca6:	pop    ebx
  425ca7:	cmc    
  425ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ca9:	data16 (bad) 
  425cab:	sbb    BYTE PTR [ebx+0x6885f0f3],bl
  425cb1:	sub    cl,cl
  425cb3:	adc    DWORD PTR [edi],ebp
  425cb5:	daa    
  425cb6:	loop   0x425cff
  425cb8:	xchg   ebp,eax
  425cb9:	mov    cl,0x21
  425cbb:	jne    0x425ca4
  425cbd:	mov    al,0x1c
  425cbf:	aas    
  425cc0:	les    edx,FWORD PTR [esi+0x442b72ec]
  425cc6:	test   ch,al
  425cc8:	ins    BYTE PTR es:[edi],dx
  425cc9:	add    eax,0x4a507446
  425cce:	imul   al
  425cd0:	cdq    
  425cd1:	mov    eax,0x552d20a5
  425cd6:	fmul   DWORD PTR [ecx+0x4c2572a2]
  425cdc:	int    0x31
  425cde:	dec    edi
  425cdf:	lds    edx,FWORD PTR [ebx]
  425ce1:	push   ebx
  425ce2:	pop    edx
  425ce3:	ret    0xd6b7
  425ce6:	inc    ebp
  425ce7:	div    esp
  425ce9:	cdq    
  425cea:	and    al,0x55
  425cec:	mov    edx,0x97c7034e
  425cf1:	sbb    cl,bl
  425cf3:	jle    0x425ce0
  425cf5:	and    eax,0x3c5f1a7
  425cfa:	call   0x271:0xc77fdd1a
  425d01:	out    0xdc,al
  425d03:	sbb    eax,0xbd4b062b
  425d08:	jmp    FWORD PTR [ecx]
  425d0a:	call   0x9347:0x93db2db2
  425d11:	cmp    ebp,esi
  425d13:	cwde   
  425d14:	outs   dx,BYTE PTR ds:[esi]
  425d15:	cmp    DWORD PTR [esi+0x77],edx
  425d18:	inc    eax
  425d19:	xchg   ecx,eax
  425d1a:	sub    edx,0xffffffdb
  425d1d:	rol    eax,0x2a
  425d20:	cld    
  425d21:	icebp  
  425d22:	(bad)  
  425d23:	jmp    0x47bd5282
  425d28:	mov    ebp,0x5c2bdd83
  425d2d:	adc    BYTE PTR [edx+ebx*1],ch
  425d30:	inc    ecx
  425d31:	loope  0x425cf7
  425d33:	loope  0x425d3b
  425d35:	mov    edx,0x7cc37f56
  425d3a:	sub    BYTE PTR [ecx],bh
  425d3c:	cli    
  425d3d:	push   ebx
  425d3e:	adc    DWORD PTR [ebx+ebx*2],ebp
  425d41:	dec    esi
  425d42:	mov    eax,es:0x58f75eec
  425d48:	ins    DWORD PTR es:[edi],dx
  425d49:	add    DWORD PTR [esi],esi
  425d4b:	mov    cl,0xa3
  425d4d:	les    ecx,FWORD PTR [esi-0x5b]
  425d50:	std    
  425d51:	fnsave [eax-0x69a583fd]
  425d57:	fwait
  425d58:	cld    
  425d59:	sahf   
  425d5a:	push   ds
  425d5b:	sbb    eax,0x2978231d
  425d60:	push   ebx
  425d61:	int    0x55
  425d63:	mov    eax,ds:0x9ecbd570
  425d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d69:	pop    es
  425d6a:	loopne 0x425db2
  425d6c:	in     eax,0xf4
  425d6e:	and    al,0xe0
  425d70:	leave  
  425d71:	mov    edi,0x1ad275d6
  425d76:	and    ah,BYTE PTR [eax-0x29]
  425d79:	out    0xaa,eax
  425d7b:	push   edi
  425d7c:	add    ebx,eax
  425d7e:	retf   
  425d7f:	pop    ss
  425d80:	mov    cl,0xb1
  425d82:	sbb    ebx,ecx
  425d84:	mov    ch,BYTE PTR [esi+ecx*4]
  425d87:	push   esp
  425d88:	fisubr DWORD PTR gs:[esp+esi*2+0xd3c9089]
  425d90:	scas   eax,DWORD PTR es:[edi]
  425d91:	mov    esp,0x15381d68
  425d96:	push   edi
  425d97:	aaa    
  425d98:	adc    bh,BYTE PTR cs:[ecx-0x58]
  425d9c:	rep lods al,BYTE PTR ds:[esi]
  425d9e:	push   esi
  425d9f:	stc    
  425da0:	inc    edi
  425da1:	push   ebx
  425da2:	mov    esi,ss
  425da4:	sbb    cl,BYTE PTR [edi+0x21]
  425da7:	shr    DWORD PTR [ebp-0x2b],1
  425daa:	sbb    BYTE PTR [eax-0x9],bl
  425dad:	sbb    edi,DWORD PTR [ebp-0xb8ae3db]
  425db3:	arpl   WORD PTR [edx-0x77],si
  425db6:	and    DWORD PTR [ecx+edx*4-0x785614a2],esi
  425dbd:	mov    cl,0x10
  425dbf:	push   ds
  425dc0:	das    
  425dc1:	fnstsw WORD PTR [esi-0x1f8669a]
  425dc7:	pop    es
  425dc8:	adc    BYTE PTR [ecx],al
  425dca:	sbb    eax,0x66c7c94f
  425dcf:	sbb    al,0x16
  425dd1:	sub    ch,dh
  425dd3:	sub    ch,dh
  425dd5:	lds    eax,FWORD PTR [ebp+0x3fe080e5]
  425ddb:	lahf   
  425ddc:	neg    dh
  425dde:	popa   
  425ddf:	xchg   ebx,eax
  425de0:	mov    edi,0x3ed1c452
  425de5:	mov    es,WORD PTR [edi-0x12]
  425de8:	nop
  425de9:	sbb    al,0x7f
  425deb:	pusha  
  425dec:	sbb    eax,0x935dd309
  425df1:	mov    bl,bh
  425df3:	mov    ecx,0x30f28e24
  425df8:	stos   DWORD PTR es:[edi],eax
  425df9:	je     0x425e4b
  425dfb:	pop    es
  425dfc:	push   es
  425dfd:	out    0x40,eax
  425dff:	jmp    0x425e7b
  425e01:	(bad)  
  425e02:	aas    
  425e03:	jno    0x425ddb
  425e05:	retfw  0x3af8
  425e09:	cli    
  425e0a:	inc    ebp
  425e0b:	stos   BYTE PTR es:[edi],al
  425e0c:	ja     0x425e23
  425e0e:	dec    ebx
  425e0f:	xchg   esi,eax
  425e10:	inc    edi
  425e11:	or     eax,0x357cf98d
  425e16:	mov    esi,0xb1d9f9ed
  425e1b:	test   eax,0xbbca879
  425e20:	mov    ah,0xc2
  425e22:	pop    ebx
  425e23:	sub    DWORD PTR [edx],ebp
  425e25:	fist   DWORD PTR [ebx]
  425e27:	js     0x425da9
  425e29:	gs (bad) 
  425e2b:	jae    0x425e9a
  425e2d:	push   ebp
  425e2e:	adc    al,0x31
  425e30:	retf   
  425e31:	xor    BYTE PTR [ebx-0x6],0x7b
  425e35:	icebp  
  425e36:	retf   
  425e37:	cld    
  425e38:	adc    al,0x79
  425e3a:	(bad)  
  425e3b:	push   cs
  425e3c:	pusha  
  425e3d:	push   0x1d6b56d
  425e42:	add    al,ch
  425e44:	add    DWORD PTR [eax],eax
  425e46:	add    BYTE PTR [ecx+0x392ad960],ch
  425e4c:	push   0x41
  425e4e:	test   al,0xc2
  425e50:	(bad)  
  425e51:	cmc    
  425e52:	dec    ebx
  425e53:	xchg   ebp,eax
  425e54:	jge    0x425ebe
  425e56:	jecxz  0x425ec9
  425e58:	fdiv   QWORD PTR [ebx+esi*1]
  425e5b:	push   0x5d85b659
  425e60:	ret    
  425e61:	push   ecx
  425e62:	int    0x8b
  425e64:	xor    esp,DWORD PTR [ebx+0x7a]
  425e67:	pushf  
  425e68:	dec    edx
  425e69:	mov    al,ds:0xed124578
  425e6e:	push   edx
  425e6f:	push   DWORD PTR [edi-0x39d7f3cf]
  425e75:	fwait
  425e76:	and    edi,esp
  425e78:	cmp    al,0x1e
  425e7a:	and    DWORD PTR [ebx-0x26],0x4622702
  425e81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e82:	popa   
  425e83:	jecxz  0x425e78
  425e85:	fs dec edi
  425e87:	xchg   ebx,eax
  425e88:	push   edx
  425e89:	es icebp 
  425e8b:	bound  eax,QWORD PTR [ebp+0x40d6e6bb]
  425e91:	pop    edx
  425e92:	jb     0x425eb1
  425e94:	push   edi
  425e95:	push   esi
  425e96:	jge    0x425efb
  425e98:	inc    eax
  425e99:	outs   dx,BYTE PTR ds:[esi]
  425e9a:	sbb    ebx,DWORD PTR [edx]
  425e9c:	jg     0x425e6c
  425e9e:	fsubp  st(6),st
  425ea0:	sti    
  425ea1:	lods   al,BYTE PTR ds:[esi]
  425ea2:	inc    ebp
  425ea3:	pusha  
  425ea4:	or     dl,BYTE PTR [ecx]
  425ea6:	push   es
  425ea7:	or     BYTE PTR [edx+eiz*4+0x7e],al
  425eab:	mov    ch,0xa1
  425ead:	or     cl,BYTE PTR [esi+0x49]
  425eb0:	arpl   bx,di
  425eb2:	mov    edi,DWORD PTR [edi+0x2f]
  425eb5:	leave  
  425eb6:	sub    ebp,DWORD PTR [edi+ebx*1+0x1cbc5909]
  425ebd:	mov    ah,0xfa
  425ebf:	push   0xd1e7cb3b
  425ec4:	inc    eax
  425ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ec6:	adc    dl,BYTE PTR [ecx+eax*1]
  425ec9:	jle    0x425e96
  425ecb:	push   ebp
  425ecc:	(bad)  
  425ecd:	std    
  425ece:	pop    ds
  425ecf:	push   edi
  425ed0:	mov    ah,0x8e
  425ed2:	in     eax,dx
  425ed3:	pop    ecx
  425ed4:	daa    
  425ed5:	pop    ebx
  425ed6:	bound  edx,QWORD PTR [ecx-0x19b79f0f]
  425edc:	jmp    0xf44bc493
  425ee1:	dec    ecx
  425ee2:	mov    cl,0x6a
  425ee4:	inc    ebp
  425ee5:	(bad)  
  425ee6:	(bad)  
  425ee7:	xor    al,0xac
  425ee9:	and    BYTE PTR [ebx+0x1d26b500],dl
  425eef:	dec    eax
  425ef0:	mov    edx,0xc8e0bc49
  425ef5:	pop    ss
  425ef6:	fmulp  st(2),st
  425ef8:	push   0xe026ec25
  425efd:	pushf  
  425efe:	out    0x67,eax
  425f00:	xchg   esp,eax
  425f01:	jge    0x425f07
  425f03:	dec    esp
  425f04:	lahf   
  425f05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f06:	or     al,0x26
  425f08:	cli    
  425f09:	test   BYTE PTR [eax+0xf3ef6f0],bl
  425f0f:	fdivr  DWORD PTR [esp+edx*2-0x53]
  425f13:	js     0x425f37
  425f15:	sbb    DWORD PTR [ebx+0x63],edx
  425f18:	jmp    0x425ebb
  425f1a:	fs push ss
  425f1c:	dec    ebp
  425f1d:	adc    DWORD PTR [esi-0x13],ebp
  425f20:	sbb    DWORD PTR [ecx-0x4db5c2d],ecx
  425f26:	pop    edi
  425f27:	mov    al,ds:0x736f7706
  425f2c:	loop   0x425eda
  425f2e:	sbb    al,0x21
  425f30:	dec    ebp
  425f31:	inc    esp
  425f32:	lods   al,BYTE PTR ds:[esi]
  425f33:	push   eax
  425f34:	es push ebx
  425f36:	(bad)  
  425f37:	mov    bh,0xfc
  425f39:	iret   
  425f3a:	push   es
  425f3b:	pop    edi
  425f3c:	fdiv   QWORD PTR [ebx-0x11]
  425f3f:	dec    edi
  425f40:	imul   edx,DWORD PTR [ebx-0x53],0xfffffffa
  425f44:	fcom   DWORD PTR [ebp-0x37e40bd1]
  425f4a:	(bad)  
  425f4b:	cld    
  425f4c:	mov    edi,0x48353952
  425f51:	push   es
  425f52:	sub    eax,0x9985d65d
  425f57:	je     0x425f18
  425f59:	mov    ch,0x11
  425f5b:	into   
  425f5c:	leave  
  425f5d:	enter  0x77ed,0xa2
  425f61:	in     eax,0x2e
  425f63:	arpl   bp,bp
  425f65:	xlat   BYTE PTR ds:[ebx]
  425f66:	ret    0x33f6
  425f69:	enter  0x9e2b,0xcd
  425f6d:	xor    edx,eax
  425f6f:	mov    edx,0xbbae20ee
  425f74:	sub    DWORD PTR [esi],0x675a9a05
  425f7a:	mov    ecx,DWORD PTR ds:0xe28d1290
  425f80:	icebp  
  425f81:	retf   
  425f82:	loop   0x425fcf
  425f84:	or     BYTE PTR [esi+0x72],cl
  425f87:	or     eax,0x7b02422f
  425f8c:	call   0x706f138f
  425f91:	(bad)  
  425f92:	rcr    BYTE PTR [ecx-0x2c02d7a1],1
  425f98:	rcr    BYTE PTR [ecx+eax*1],0x42
  425f9c:	ficomp WORD PTR [edi]
  425f9e:	push   esi
  425f9f:	loope  0x425fd5
  425fa1:	(bad)  
  425fa3:	(bad)  
  425fa4:	push   eax
  425fa5:	out    dx,al
  425fa6:	xchg   esi,eax
  425fa7:	imul   ecx,DWORD PTR [esi-0x61],0xffffff81
  425fab:	add    BYTE PTR [ecx+ebp*1],cl
  425fae:	adc    DWORD PTR [edx-0x5d],esi
  425fb1:	popa   
  425fb2:	jge    0x425f53
  425fb4:	rcl    ch,0x1b
  425fb7:	cwde   
  425fb8:	ja     0x425f7c
  425fba:	data16 arpl WORD PTR fs:[esi+0x4664eba3],bx
  425fc2:	cmp    al,0x42
  425fc4:	imul   edx,DWORD PTR [esp+edx*2],0x90dab2a8
  425fcb:	or     esi,esi
  425fcd:	or     ebx,DWORD PTR gs:[ecx+0x42]
  425fd1:	mov    al,0xc1
  425fd3:	es pop es
  425fd5:	pop    ecx
  425fd6:	ins    DWORD PTR es:[edi],dx
  425fd7:	loop   0x425fc1
  425fd9:	add    esp,DWORD PTR [ebp-0x5e]
  425fdc:	gs sub DWORD PTR gs:[ebx+0xd],0x4b
  425fe2:	or     DWORD PTR ds:0xe72f40d2,0x7a
  425fe9:	stos   DWORD PTR es:[edi],eax
  425fea:	inc    eax
  425feb:	jns    0x425fb4
  425fed:	syscall 
  425fef:	icebp  
  425ff0:	xlat   BYTE PTR ds:[ebx]
  425ff1:	dec    ebp
  425ff2:	call   0xa172d99b
  425ff7:	in     eax,0x30
  425ff9:	sub    al,dl
  425ffb:	(bad)  [edx-0x665773fd]
  426001:	push   ebp
  426002:	xchg   DWORD PTR [edx],edi
  426004:	mov    dh,0xdd
  426006:	sbb    ebx,ebp
  426008:	sbb    DWORD PTR [edi],esi
  42600a:	ins    BYTE PTR es:[edi],dx
  42600b:	jne    0x42603e
  42600d:	lods   al,BYTE PTR ds:[esi]
  42600e:	mov    esp,0x57b03a74
  426013:	inc    ecx
  426014:	ret    
  426015:	pop    esi
  426016:	test   eax,0x19d168c4
  42601b:	out    0xc0,eax
  42601d:	or     cl,BYTE PTR [esi]
  42601f:	dec    esi
  426020:	iret   
  426021:	imul   ecx,DWORD PTR [edx-0x4e],0x77
  426025:	daa    
  426026:	into   
  426027:	in     eax,dx
  426028:	repz sbb BYTE PTR [edi],al
  42602b:	pop    edi
  42602c:	lahf   
  42602d:	(bad)  
  42602e:	fdivrp st(7),st
  426030:	in     eax,0x9f
  426032:	jp     0x425fd3
  426034:	jp     0x42602d
  426036:	in     eax,dx
  426037:	xor    al,dl
  426039:	xor    cl,ch
  42603b:	cmp    dl,dh
  42603d:	dec    ebp
  42603e:	call   0x1e8:0x1d89d
  426045:	add    BYTE PTR [eax],al
  426047:	mov    cl,0xce
  426049:	inc    esp
  42604a:	lock mov ds:0xba85c05,eax
  426050:	pop    edx
  426051:	mov    al,0x6
  426053:	lahf   
  426054:	aaa    
  426055:	lds    esp,FWORD PTR [esi+0x4a]
  426058:	cmp    al,0xd0
  42605a:	and    DWORD PTR [ebp+edi*2+0x20],edx
  42605e:	icebp  
  42605f:	out    0xb9,al
  426061:	jb     0x426059
  426063:	xchg   ecx,edi
  426065:	ins    BYTE PTR es:[edi],dx
  426066:	pop    ebp
  426067:	(bad)  
  426068:	mov    ecx,0xf5a54867
  42606d:	call   0xbf919aa2
  426072:	sbb    al,0x96
  426074:	mov    edx,0x6a45c91
  426079:	mov    ds:0x99c7c676,al
  42607e:	push   ebx
  42607f:	call   0x9b76:0xfd71d3a
  426086:	xchg   DWORD PTR [ebx+0x6f773363],eax
  42608c:	pop    ecx
  42608d:	popa   
  42608e:	mov    di,0x4511
  426092:	mov    dl,0x73
  426094:	sar    dl,0xb3
  426097:	push   esp
  426098:	jl     0x4260f2
  42609a:	mov    dh,BYTE PTR [edi]
  42609c:	pop    ds
  42609d:	fsubr  DWORD PTR [edi+0x63]
  4260a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260a1:	sub    eax,0x7412b376
  4260a6:	sub    BYTE PTR [ebx+ecx*8],bl
  4260a9:	jmp    0xfc082d95
  4260ae:	pop    ds
  4260af:	mov    esp,0x75cac44a
  4260b4:	ss call 0x1133:0xa783a6d0
  4260bc:	cmp    edi,DWORD PTR [ebx]
  4260be:	xchg   esi,eax
  4260bf:	or     BYTE PTR [eiz*8+0x60d64578],cl
  4260c6:	inc    edi
  4260c7:	cwde   
  4260c8:	ret    0x43dd
  4260cb:	aaa    
  4260cc:	sub    eax,0x43e686e1
  4260d1:	mov    dh,0xcb
  4260d3:	shl    DWORD PTR [edx+0x7d83aabb],1
  4260d9:	icebp  
  4260da:	mov    eax,0xf813042f
  4260df:	shl    DWORD PTR [eax+0x2b1ee3c],0x62
  4260e6:	icebp  
  4260e7:	std    
  4260e8:	test   al,0xc8
  4260ea:	mov    ebp,0x325266a2
  4260ef:	push   es
  4260f0:	xchg   esp,eax
  4260f1:	retf   0xae5d
  4260f4:	inc    eax
  4260f5:	loop   0x4260ca
  4260f7:	je     0x4260ac
  4260f9:	jno    0x4260e8
  4260fb:	push   0x36
  4260fd:	popf   
  4260fe:	mov    eax,ds:0xe731c014
  426103:	xchg   ebp,eax
  426104:	test   al,0xc8
  426106:	sbb    BYTE PTR [ebx+ebx*4+0x646a4fb0],dh
  42610d:	je     0x426104
  42610f:	test   al,0x23
  426111:	out    dx,eax
  426112:	xor    al,0xf8
  426114:	mov    bl,0xff
  426116:	arpl   WORD PTR [edx-0x1dcb0c72],si
  42611c:	sbb    dh,BYTE PTR [ebx+edx*2]
  42611f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426120:	sub    eax,DWORD PTR [edi+0x25]
  426123:	out    dx,eax
  426124:	or     eax,0x53455d97
  426129:	les    ebx,FWORD PTR [esi]
  42612b:	sub    BYTE PTR [edi+0x3f],0xf6
  42612f:	shl    BYTE PTR [ebx-0x5b44b9c5],1
  426135:	pop    ds
  426136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426137:	xor    DWORD PTR [edx-0x28],edi
  42613a:	fist   DWORD PTR [esp+eax*4-0x2]
  42613e:	jp     0x4260c8
  426140:	pminsw mm3,QWORD PTR [edx-0xf]
  426144:	rol    BYTE PTR [edi-0x77],1
  426147:	cmp    ecx,esp
  426149:	into   
  42614a:	rol    BYTE PTR [eax],1
  42614c:	adc    DWORD PTR [esi],esi
  42614e:	(bad)  
  42614f:	into   
  426150:	jmp    0x42616c
  426152:	inc    ebp
  426153:	push   esp
  426154:	ins    BYTE PTR es:[edi],dx
  426155:	push   0x9d393a7a
  42615a:	inc    ebx
  42615b:	(bad)  
  42615c:	xor    al,0x6e
  42615e:	aaa    
  42615f:	mov    dl,0xe1
  426161:	test   edx,esi
  426163:	xchg   esp,eax
  426164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426165:	addr16 inc ebp
  426167:	(bad)  
  426168:	in     al,dx
  426169:	out    0x6c,al
  42616b:	add    al,0x7
  42616d:	imul   eax,DWORD PTR [ebx+0x254bd698],0xffffffda
  426174:	in     eax,0xc8
  426176:	test   DWORD PTR [edx-0x7b6d1099],ebp
  42617c:	ror    edi,0x1c
  42617f:	lock aam 0x7
  426182:	popf   
  426183:	push   esp
  426184:	jae    0x42613b
  426186:	es fwait
  426188:	jne    0x4261b2
  42618a:	je     0x426151
  42618c:	shl    edx,cl
  42618e:	xchg   DWORD PTR [ebp-0x6b],edx
  426191:	adc    al,0x13
  426193:	gs call 0xfde2:0x2becf08f
  42619b:	retf   
  42619c:	fsub   st(6),st
  42619e:	ins    BYTE PTR es:[edi],dx
  42619f:	daa    
  4261a0:	cs xchg esi,ebx
  4261a3:	cli    
  4261a4:	dec    esp
  4261a5:	nop
  4261a6:	inc    BYTE PTR [eax-0x706fda17]
  4261ac:	pop    edx
  4261ad:	out    0x6a,eax
  4261af:	jmp    0x9955:0xea3b305
  4261b6:	pop    ebp
  4261b7:	aas    
  4261b8:	jle    0x42614c
  4261ba:	xchg   ebp,eax
  4261bb:	pop    esi
  4261bc:	test   DWORD PTR [edx+esi*1-0x7c],edx
  4261c0:	ret    
  4261c1:	in     al,0x94
  4261c3:	sahf   
  4261c4:	(bad)  
  4261c5:	lock imul ebx,DWORD PTR [eax-0x5aa25be5],0x7
  4261cd:	inc    ecx
  4261ce:	pop    ds
  4261cf:	inc    ebx
  4261d0:	push   ebp
  4261d1:	adc    dh,BYTE PTR [edx]
  4261d3:	mov    bl,BYTE PTR [edx]
  4261d5:	ins    DWORD PTR es:[edi],dx
  4261d6:	retf   0xcf50
  4261d9:	pop    ecx
  4261da:	pop    eax
  4261db:	cli    
  4261dc:	outs   dx,BYTE PTR ds:[esi]
  4261dd:	sbb    eax,0xffffffdc
  4261e0:	(bad)  
  4261e1:	fnstsw WORD PTR [eax+ebp*2+0x34]
  4261e5:	xchg   BYTE PTR [edi-0x202d669a],dl
  4261eb:	cmp    al,0xe3
  4261ed:	mov    edx,0x48fc5406
  4261f2:	add    bl,ah
  4261f4:	imul   edi,DWORD PTR [ebx+0x56],0xbe965414
  4261fb:	cmp    esp,DWORD PTR [esi+0x56a9aa4a]
  426201:	test   esp,edx
  426203:	sti    
  426204:	call   0x1a09ab97
  426209:	jne    0x4261e8
  42620b:	or     ebp,esp
  42620d:	dec    ebx
  42620e:	mov    ecx,0x680a7f2e
  426213:	imul   ebp,DWORD PTR [eax+0x3f20b1c5],0x2c6e66a6
  42621d:	cwde   
  42621e:	imul   ebp,DWORD PTR [edx+0x36552164],0x23cd0bcc
  426228:	jge    0x42623a
  42622a:	test   bh,0x7f
  42622d:	scas   al,BYTE PTR es:[edi]
  42622e:	imul   ebp,DWORD PTR [ebx-0x71],0xffffff8a
  426232:	jl     0x426222
  426234:	jge    0x426235
  426236:	lahf   
  426237:	loope  0x426240
  426239:	adc    al,0x86
  42623b:	push   esp
  42623c:	in     al,dx
  42623d:	cmp    al,0x5a
  42623f:	test   edx,ebx
  426241:	add    DWORD PTR [eax],eax
  426243:	call   0x4d426249
  426248:	ins    BYTE PTR es:[edi],dx
  426249:	dec    edx
  42624a:	xor    BYTE PTR [eax],ch
  42624c:	popf   
  42624d:	ds in  eax,dx
  42624f:	ret    0x8798
  426252:	outs   dx,DWORD PTR ds:[esi]
  426253:	ins    BYTE PTR es:[edi],dx
  426254:	loope  0x4262b7
  426256:	daa    
  426257:	and    BYTE PTR [ebx],cl
  426259:	pusha  
  42625a:	cmp    edi,edx
  42625c:	sub    eax,esp
  42625e:	jns    0x42621d
  426260:	and    cl,cl
  426262:	loopne 0x4262e2
  426264:	xor    ch,dl
  426266:	cmp    al,0xa
  426268:	add    dh,BYTE PTR ds:0x53bef40a
  42626e:	adc    WORD PTR [esi+eax*2],bx
  426272:	retf   
  426273:	imul   ebx,DWORD PTR [eax],0xffffff97
  426276:	add    esp,DWORD PTR [edx+eiz*4-0x5c]
  42627a:	jbe    0x4262f1
  42627c:	test   DWORD PTR [eax+0x70a21ea1],edx
  426282:	jmp    0x426274
  426284:	dec    ebp
  426285:	loopne 0x42621c
  426287:	push   edi
  426288:	fisub  WORD PTR [edi-0x19dbcf0c]
  42628e:	test   DWORD PTR [edi+0xf],ebx
  426291:	xor    DWORD PTR [edx],0xca1f9d4d
  426297:	and    DWORD PTR [ecx],0xf012805c
  42629d:	mov    DWORD PTR [ecx-0x26a66fec],ebp
  4262a3:	push   ecx
  4262a4:	pop    esp
  4262a5:	mov    esi,ss
  4262a7:	rcr    DWORD PTR [edx+0x7f],0x67
  4262ab:	std    
  4262ac:	xchg   dx,ax
  4262ae:	arpl   WORD PTR ds:0x1734873a,si
  4262b4:	mov    ah,BYTE PTR [eax]
  4262b6:	ret    
  4262b7:	add    ah,BYTE PTR [esp+edx*1]
  4262ba:	stos   DWORD PTR es:[edi],eax
  4262bb:	daa    
  4262bc:	shl    BYTE PTR [ebx],cl
  4262be:	pop    ecx
  4262bf:	(bad)  
  4262c0:	or     eax,0xc3efac3f
  4262c5:	adc    ch,bl
  4262c7:	ret    
  4262c8:	cli    
  4262c9:	xlat   BYTE PTR ds:[ebx]
  4262ca:	pop    esp
  4262cb:	mov    WORD PTR [ebp+0x2ecdc659],ds
  4262d1:	push   ecx
  4262d2:	pop    es
  4262d3:	push   ds
  4262d4:	cmc    
  4262d5:	out    0x9c,eax
  4262d7:	sbb    BYTE PTR ds:0xc5fb1b49,ch
  4262dd:	sbb    al,0x20
  4262df:	pushf  
  4262e0:	adc    eax,0xa0db65b7
  4262e5:	push   es
  4262e6:	sbb    BYTE PTR [edi+ebx*2-0x53],al
  4262ea:	xor    BYTE PTR [eax],al
  4262ec:	retf   
  4262ed:	ins    DWORD PTR es:[edi],dx
  4262ee:	nop
  4262ef:	dec    esp
  4262f0:	sahf   
  4262f1:	nop
  4262f2:	mov    dl,0xc6
  4262f4:	pop    edi
  4262f5:	xor    eax,0x67b2991c
  4262fa:	pusha  
  4262fb:	hlt    
  4262fc:	mov    ds:0xd773adef,al
  426301:	lods   al,BYTE PTR ds:[esi]
  426302:	sub    ecx,DWORD PTR [ebx+0x65]
  426305:	mov    edi,0xcb829694
  42630a:	hlt    
  42630b:	in     al,0x78
  42630d:	(bad)  
  42630e:	icebp  
  42630f:	sub    BYTE PTR [eax+0x47c4775d],bl
  426315:	imul   eax,ebp,0x8e087427
  42631b:	mov    ecx,0x9bd73191
  426320:	xchg   ecx,eax
  426321:	cmp    DWORD PTR [esi+ebp*4],0xa5aa5f0b
  426328:	sahf   
  426329:	mov    fs,WORD PTR [edi+0x2c]
  42632c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42632d:	adc    eax,0xefd3c4c2
  426332:	stos   BYTE PTR es:[edi],al
  426333:	cmp    eax,0xff727560
  426338:	add    BYTE PTR [edi+0x49],ah
  42633b:	sar    DWORD PTR [esi-0x4c9fa50e],0xe7
  426342:	and    edx,0xffffffa7
  426345:	cs add al,0xfb
  426348:	lea    esp,[ecx+0x7f]
  42634b:	xchg   edi,eax
  42634c:	into   
  42634d:	push   edx
  42634e:	mov    DWORD PTR [ebx+0x75ffbc63],esi
  426354:	push   esp
  426355:	in     al,0xf9
  426357:	push   ecx
  426358:	bound  ebp,QWORD PTR [ebp+0x14]
  42635b:	jb     0x426366
  42635d:	or     bl,0x43
  426360:	sbb    DWORD PTR [eax-0x3e],eax
  426363:	pop    ebx
  426364:	inc    ebp
  426365:	rol    DWORD PTR [esi+edx*8+0x1cbed512],0xfa
  42636d:	pop    eax
  42636e:	push   ds
  42636f:	adc    ecx,ebx
  426371:	fadd   DWORD PTR [ebx+eiz*1]
  426374:	mov    eax,0xf4e8ed42
  426379:	dec    eax
  42637a:	cld    
  42637b:	mov    eax,fs
  42637d:	dec    ebp
  42637e:	ret    
  42637f:	pop    ecx
  426380:	outs   dx,DWORD PTR ds:[esi]
  426381:	in     al,0x58
  426383:	je     0x426397
  426385:	mov    bl,0xce
  426387:	xchg   ebx,eax
  426388:	arpl   WORD PTR [edi-0x32],sp
  42638b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42638c:	scas   al,BYTE PTR es:[edi]
  42638d:	sbb    cl,al
  42638f:	(bad)  [esi+0x2b51f266]
  426395:	jno    0x426326
  426397:	xchg   edx,eax
  426398:	push   edi
  426399:	fnstcw WORD PTR [esp+eiz*4-0xe362f1a]
  4263a0:	mov    bl,0xc5
  4263a2:	repnz pop es
  4263a4:	mov    ah,0x3e
  4263a6:	(bad)  
  4263a7:	mov    WORD PTR [ebx-0x31],fs
  4263aa:	loopne 0x426426
  4263ac:	fwait
  4263ad:	push   es
  4263ae:	jne    0x426412
  4263b0:	and    BYTE PTR [esi-0x4de899aa],al
  4263b6:	retf   0x4fa4
  4263b9:	mov    dh,0x41
  4263bb:	mov    ds:0xc808394e,al
  4263c0:	xor    BYTE PTR [esp+ebp*8+0x7f004995],al
  4263c7:	jb     0x42636e
  4263c9:	mov    edi,0xa3ff48f9
  4263ce:	xchg   DWORD PTR [edx],edi
  4263d0:	mov    eax,ds:0x66d7d4d9
  4263d5:	out    dx,al
  4263d6:	or     BYTE PTR [edi-0xafb03b3],ah
  4263dc:	jmp    0x4263a3
  4263de:	jmp    0x426386
  4263e0:	jl     0x426461
  4263e2:	mov    dl,0x17
  4263e4:	enter  0xd6f1,0xae
  4263e8:	or     DWORD PTR [ebx+0x47],esi
  4263eb:	jno    0x4263ac
  4263ed:	xchg   ecx,eax
  4263ee:	dec    ecx
  4263ef:	fnsave ds:0x32b30da5
  4263f5:	test   BYTE PTR [edx+0x6a199dc1],bl
  4263fb:	outs   dx,BYTE PTR ds:[esi]
  4263fc:	test   BYTE PTR [ebp-0x1cfcee64],dl
  426402:	mov    ecx,0xdf9c55f4
  426407:	mov    ch,0x41
  426409:	scas   eax,DWORD PTR es:[edi]
  42640a:	jae    0x426411
  42640c:	test   DWORD PTR [eax],eax
  42640e:	pop    ebp
  42640f:	xchg   ebp,eax
  426410:	fwait
  426411:	or     bl,ah
  426413:	dec    edi
  426414:	xchg   ecx,eax
  426415:	retf   0x1f4c
  426418:	shl    DWORD PTR [ebp+0x1d],0xe7
  42641c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42641d:	shr    BYTE PTR [eax],cl
  42641f:	popf   
  426420:	sbb    DWORD PTR [esi],edx
  426422:	ret    0x8f0c
  426425:	aaa    
  426426:	test   BYTE PTR [esi+0x3a],ah
  426429:	or     ch,ah
  42642b:	push   ds
  42642c:	and    edi,edx
  42642e:	cld    
  42642f:	push   ebp
  426430:	push   0xffffffe6
  426432:	mov    bl,0xff
  426434:	mov    edi,0xa2aee55
  426439:	idiv   DWORD PTR [eax]
  42643b:	popa   
  42643c:	nop
  42643d:	int3   
  42643e:	pop    ecx
  42643f:	ins    DWORD PTR es:[edi],dx
  426440:	fadd   QWORD PTR [ecx]
  426442:	add    al,ch
  426444:	add    DWORD PTR [eax],eax
  426446:	add    BYTE PTR [esi],ah
  426448:	add    BYTE PTR [ebx],0xd2
  42644b:	mov    ah,0x7e
  42644d:	xor    eax,0x4dcca3e5
  426452:	retf   0x773f
  426455:	pusha  
  426456:	sbb    dh,BYTE PTR [eax]
  426458:	push   edi
  426459:	rcl    DWORD PTR [edi],0xaa
  42645c:	xor    esp,esi
  42645e:	fiadd  DWORD PTR ds:0x7d66e7a0
  426464:	mov    cl,0x78
  426466:	stos   DWORD PTR es:[edi],eax
  426467:	sub    ah,BYTE PTR [esp+ecx*2+0xe]
  42646b:	cmp    al,0x2a
  42646d:	dec    esp
  42646e:	cmp    dl,BYTE PTR [eax-0x56ff74fa]
  426474:	xor    al,cl
  426476:	jmp    0x4264e0
  426478:	popa   
  426479:	and    al,0xf6
  42647b:	loopne 0x4264ba
  42647d:	fwait
  42647e:	(bad)  
  42647f:	dec    edx
  426480:	adc    al,0x6b
  426482:	push   edx
  426483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426484:	std    
  426485:	shl    cl,1
  426487:	stc    
  426488:	xchg   DWORD PTR [ecx],esi
  42648a:	arpl   WORD PTR [ebx],bx
  42648c:	mov    eax,ds:0x27514a80
  426491:	xlat   BYTE PTR ds:[ebx]
  426492:	in     al,0xf8
  426494:	add    al,0x3e
  426496:	pop    ss
  426497:	pop    ecx
  426498:	jmp    0xdee5f26d
  42649d:	push   0x105c1eb9
  4264a2:	loop   0x42646c
  4264a4:	sbb    edx,ebx
  4264a6:	sbb    eax,0xbdb7b6c1
  4264ab:	xlat   BYTE PTR ds:[ebx]
  4264ac:	jmp    0x2f83:0xd375caae
  4264b3:	inc    ebx
  4264b4:	addr16 push es
  4264b6:	sub    BYTE PTR [edx-0x13],dl
  4264b9:	scas   eax,DWORD PTR es:[edi]
  4264ba:	push   0xffffffbf
  4264bc:	dec    edi
  4264bd:	sub    DWORD PTR ds:[esp+esi*2+0x211a5304],esp
  4264c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264c6:	rcl    DWORD PTR [ebx-0x25],1
  4264c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264ca:	inc    ebx
  4264cb:	les    eax,FWORD PTR [esi]
  4264cd:	scas   al,BYTE PTR es:[edi]
  4264ce:	(bad)  
  4264cf:	jns    0x42645a
  4264d1:	rol    BYTE PTR [ecx+0x1c719c20],0x13
  4264d8:	and    cl,bh
  4264da:	les    esi,FWORD PTR [edi]
  4264dc:	push   esp
  4264dd:	retf   0x5fa6
  4264e0:	in     eax,dx
  4264e1:	cmp    eax,0xb50b5101
  4264e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264e7:	jnp    0x426550
  4264e9:	xor    DWORD PTR [ebp+eiz*2+0x1e],esi
  4264ed:	inc    ecx
  4264ee:	xchg   ebx,eax
  4264ef:	adc    ecx,DWORD PTR [eax+0x19]
  4264f2:	dec    esp
  4264f3:	aas    
  4264f4:	add    ah,BYTE PTR [eax+0x7b654ccf]
  4264fa:	out    dx,eax
  4264fb:	rol    BYTE PTR [edi+0x2d],cl
  4264fe:	push   ebx
  4264ff:	nop
  426500:	push   cs
  426501:	es (bad) 
  426503:	push   ds
  426504:	nop
  426505:	rcr    BYTE PTR ds:[esp+edx*1],0x1b
  42650a:	pop    es
  42650b:	jb     0x4264bf
  42650d:	fdiv   QWORD PTR [eax-0x428e9624]
  426513:	adc    dh,ah
  426515:	jle    0x4264aa
  426517:	jae    0x426531
  426519:	jg     0x4264ee
  42651b:	les    ecx,FWORD PTR [edi-0x17]
  42651e:	(bad)  [ecx+edi*4+0x28]
  426522:	jb     0x426566
  426524:	push   esp
  426525:	cmp    al,BYTE PTR [ebp+0x762360f5]
  42652b:	adc    dl,BYTE PTR [ebp+0x4c6a32d0]
  426531:	shr    edx,cl
  426533:	test   eax,0x71a03acd
  426538:	pop    edi
  426539:	call   0xb37de352
  42653e:	daa    
  42653f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426540:	call   0xde9cbfed
  426545:	inc    ebp
  426546:	push   ebx
  426547:	dec    edx
  426548:	pop    edi
  426549:	push   ebp
  42654a:	sbb    ch,BYTE PTR [eax-0x377f1484]
  426550:	mov    ecx,DWORD PTR [ebx+0x7f64fa26]
  426556:	mov    BYTE PTR [eax-0x54f33835],dl
  42655c:	inc    ecx
  42655d:	sti    
  42655e:	mov    WORD PTR ds:0x5f4d462b,cs
  426564:	ret    0x86de
  426567:	mov    edi,0x56e76575
  42656c:	pop    ebx
  42656d:	xchg   esp,eax
  42656e:	addr16 sti 
  426570:	mov    ah,0xe7
  426572:	cli    
  426573:	jns    0x426542
  426575:	hlt    
  426576:	dec    esi
  426577:	push   0x38235873
  42657c:	push   ebx
  42657d:	aaa    
  42657e:	les    ecx,FWORD PTR [edx]
  426580:	or     ecx,DWORD PTR [ebp-0x5d]
  426583:	add    al,0xa9
  426585:	cmp    al,0xc4
  426587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426588:	xchg   ebx,eax
  426589:	jae    0x42654d
  42658b:	mov    bh,0x99
  42658d:	fld    DWORD PTR [ebp+0x12]
  426590:	arpl   sp,ax
  426592:	pop    eax
  426593:	outs   dx,BYTE PTR ds:[esi]
  426594:	das    
  426595:	jns    0x666444b6
  42659b:	jmp    0x3c56:0xc8cbfac1
  4265a2:	pop    edx
  4265a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265a4:	cmc    
  4265a5:	cmc    
  4265a6:	cmc    
  4265a7:	add    DWORD PTR ds:0xa72cfde9,ebx
  4265ad:	sti    
  4265ae:	mov    al,ds:0x6abb3392
  4265b3:	popa   
  4265b4:	int3   
  4265b5:	js     0x42660b
  4265b7:	cdq    
  4265b8:	out    dx,eax
  4265b9:	sub    ch,BYTE PTR [ecx-0x2c36f307]
  4265bf:	in     al,dx
  4265c0:	mov    ebp,0xb347d497
  4265c5:	inc    esi
  4265c6:	xchg   edx,eax
  4265c7:	mov    ds:0x140818ad,eax
  4265cc:	mov    ds:0x92119d58,eax
  4265d1:	lods   al,BYTE PTR ds:[esi]
  4265d2:	cdq    
  4265d3:	call   0x59fae5f6
  4265d8:	add    al,0x9d
  4265da:	jp     0x426649
  4265dc:	xor    al,0xe5
  4265de:	das    
  4265df:	xor    DWORD PTR [edx-0x5b],ebp
  4265e2:	push   cs
  4265e3:	push   ds
  4265e4:	add    al,0xa3
  4265e6:	ins    DWORD PTR es:[edi],dx
  4265e7:	mov    dl,0x6c
  4265e9:	shl    BYTE PTR [ecx],0x98
  4265ec:	call   FWORD PTR [esi+edi*8]
  4265ef:	test   al,0xdf
  4265f1:	dec    edx
  4265f2:	push   ebp
  4265f3:	lods   eax,DWORD PTR ds:[esi]
  4265f4:	ins    BYTE PTR es:[edi],dx
  4265f5:	test   ecx,edx
  4265f7:	sub    DWORD PTR [edi],ecx
  4265f9:	inc    eax
  4265fa:	stos   DWORD PTR es:[edi],eax
  4265fb:	sbb    DWORD PTR [ebp+0x17],esp
  4265fe:	lea    ebp,[ebx+0x61]
  426601:	retf   
  426602:	inc    eax
  426603:	xor    al,0x6b
  426605:	mov    dl,0x2b
  426607:	add    al,0x7c
  426609:	pusha  
  42660a:	cmp    DWORD PTR [esp+eiz*4],0x45
  42660e:	sub    bl,BYTE PTR [ecx-0x3b]
  426611:	ret    0x8857
  426614:	retf   0xbdcb
  426617:	repnz in al,0x58
  42661a:	sbb    ebp,DWORD PTR [edi]
  42661c:	xchg   edx,eax
  42661d:	sub    eax,0x47cebcd3
  426622:	(bad)  
  426623:	sub    esp,DWORD PTR [edx]
  426625:	je     0x426616
  426627:	inc    esp
  426628:	je     0x426641
  42662a:	dec    edx
  42662b:	in     al,dx
  42662c:	fadd   DWORD PTR ds:[ebx-0x2494e272]
  426633:	sti    
  426634:	(bad)  
  426635:	mov    esi,0xa4979b5d
  42663a:	adc    eax,esi
  42663c:	mov    eax,ds:0xde5587a6
  426641:	add    DWORD PTR [eax],eax
  426643:	call   0xd7426649
  426648:	sub    ah,BYTE PTR [edx]
  42664a:	pop    edi
  42664b:	jae    0x4266be
  42664d:	imul   ecx,DWORD PTR [esi+0x71cf0907],0x6c
  426654:	cmp    BYTE PTR [edx-0x58b8ff94],bl
  42665a:	addr16 pop esi
  42665c:	(bad)  
  42665d:	push   edi
  42665e:	or     DWORD PTR [edi+0x41],ebp
  426661:	and    al,0x1
  426663:	push   DWORD PTR [edx]
  426665:	mov    esp,0xa0a0dc44
  42666a:	lods   eax,DWORD PTR ds:[esi]
  42666b:	pop    es
  42666c:	xor    BYTE PTR [ecx-0x3b335ac8],dh
  426672:	retf   
  426673:	push   ss
  426674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426675:	cmp    cl,BYTE PTR [ebx+eiz*2-0x41]
  426679:	cmp    al,0xbe
  42667b:	dec    esp
  42667c:	fs call 0xb85d099f
  426682:	inc    edi
  426683:	dec    edi
  426684:	adc    edi,ebp
  426686:	sbb    DWORD PTR [ebx],edx
  426688:	int3   
  426689:	jns    0x42660c
  42668b:	and    al,BYTE PTR [ebp+0x65]
  42668e:	mov    bh,0x21
  426690:	cmp    al,0xd4
  426692:	imul   esp,edi,0x56
  426695:	lea    esp,[eax]
  426697:	mov    BYTE PTR [edi],dl
  426699:	leave  
  42669a:	push   ebp
  42669b:	inc    ebp
  42669c:	fwait
  42669d:	add    al,0x3e
  42669f:	rcr    BYTE PTR [edi-0x23],1
  4266a2:	test   DWORD PTR [eax-0x71],ebp
  4266a5:	stos   DWORD PTR es:[edi],eax
  4266a6:	pop    ss
  4266a7:	dec    esi
  4266a8:	push   esi
  4266a9:	cmp    al,0x80
  4266ab:	jmp    0x29b:0x4efc5487
  4266b2:	pusha  
  4266b3:	jns    0x42670f
  4266b5:	mov    esi,0x638bb40
  4266ba:	enter  0x18a1,0xbe
  4266be:	mov    edx,DWORD PTR [esi]
  4266c0:	stc    
  4266c1:	popf   
  4266c2:	mov    esp,DWORD PTR [eax-0x41]
  4266c5:	fistp  DWORD PTR [ebp+0x3e26315b]
  4266cb:	push   cs
  4266cc:	sub    ax,0x81c1
  4266d0:	lods   eax,DWORD PTR ds:[esi]
  4266d1:	cld    
  4266d2:	cmp    DWORD PTR [edx+0x3f],edi
  4266d5:	iret   
  4266d6:	cs push ebp
  4266d8:	mov    al,0xbe
  4266da:	mov    ebp,0x8e10699b
  4266df:	jmp    DWORD PTR [edi-0x67343a02]
  4266e5:	sub    bh,BYTE PTR [ebx-0x67]
  4266e8:	add    eax,0xeb6add5a
  4266ed:	sar    bh,cl
  4266ef:	mov    esi,edx
  4266f1:	cmc    
  4266f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266f3:	adc    BYTE PTR [eax],dl
  4266f5:	shl    DWORD PTR [esp+eax*4+0x590504a4],0x2d
  4266fd:	sub    BYTE PTR [edx+0x1461d1d8],cl
  426703:	push   es
  426704:	ins    DWORD PTR es:[edi],dx
  426705:	ror    DWORD PTR ds:0xb8ce8f2d,cl
  42670b:	cmp    BYTE PTR [ebp-0x7cb5cafd],bh
  426711:	stos   BYTE PTR es:[edi],al
  426712:	mov    eax,ds:0xd6f3601a
  426717:	and    edx,DWORD PTR ds:0x8f2b0867
  42671d:	dec    edx
  42671e:	repnz std 
  426720:	xchg   ecx,eax
  426721:	(bad)  
  426722:	and    BYTE PTR [ebp-0x3b],al
  426725:	pop    edx
  426726:	das    
  426727:	sbb    dh,BYTE PTR [eax-0x6]
  42672a:	cmp    DWORD PTR [eax],ebp
  42672c:	pop    ecx
  42672d:	push   ds
  42672e:	cmp    edx,DWORD PTR [eax]
  426730:	fcmovnu st,st(6)
  426732:	test   al,0x46
  426734:	mov    esp,0xe26a7628
  426739:	std    
  42673a:	and    al,0xac
  42673c:	mov    eax,ds:0xcf755f6e
  426741:	mov    eax,ds:0x24b441ac
  426746:	enter  0xadbc,0xce
  42674a:	cdq    
  42674b:	test   DWORD PTR [ecx-0x28],ecx
  42674e:	sahf   
  42674f:	ja     0x4266f9
  426751:	jmp    0x987:0xce955afc
  426758:	jl     0x42673f
  42675a:	or     edi,DWORD PTR ds:0x2f010709
  426760:	gs xchg ebx,eax
  426762:	jb     0x4266fb
  426764:	mov    ebp,DWORD PTR [edi]
  426766:	(bad)  
  426767:	loopne 0x426721
  426769:	stc    
  42676a:	gs call 0x80f7ccf5
  426770:	outs   dx,DWORD PTR ds:[esi]
  426771:	stos   BYTE PTR es:[edi],al
  426772:	out    0x2d,eax
  426774:	adc    DWORD PTR [edi-0x5b],esp
  426777:	imul   ebp,DWORD PTR [ebx+esi*2],0xeaff23ea
  42677e:	loopne 0x42679d
  426780:	mov    dl,0xb6
  426782:	jmp    0x426796
  426784:	pusha  
  426785:	ins    DWORD PTR es:[edi],dx
  426786:	sub    BYTE PTR [edi+edi*1+0x46],bl
  42678a:	mov    BYTE PTR [ebp+edi*1-0x4a],dl
  42678e:	mov    ds,WORD PTR [ebp-0x72]
  426791:	xchg   BYTE PTR [ebp-0x4764e09c],ch
  426797:	adc    BYTE PTR [ebx],bl
  426799:	adc    bh,BYTE PTR [esi+0x18]
  42679c:	div    DWORD PTR [ebp-0x73]
  42679f:	fcomp  DWORD PTR [eax-0x11]
  4267a2:	push   esi
  4267a3:	and    bh,bl
  4267a5:	shl    DWORD PTR [ecx],1
  4267a7:	pop    edx
  4267a8:	lods   al,BYTE PTR ds:[esi]
  4267a9:	popa   
  4267aa:	dec    edi
  4267ab:	push   es
  4267ac:	aad    0x6a
  4267ae:	scas   al,BYTE PTR es:[edi]
  4267af:	shl    ebx,1
  4267b1:	adc    eax,0xb5f39189
  4267b6:	es std 
  4267b8:	push   esi
  4267b9:	mov    es,WORD PTR [edx+0x1fa78900]
  4267bf:	push   edx
  4267c0:	pop    edx
  4267c1:	cld    
  4267c2:	popf   
  4267c3:	cld    
  4267c4:	mov    dl,0xd4
  4267c6:	mov    BYTE PTR [eax-0x7934240f],al
  4267cc:	sbb    bl,BYTE PTR [ecx+0x44]
  4267cf:	or     eax,0xdf6f4749
  4267d4:	and    DWORD PTR [edx-0x6387299e],edi
  4267da:	lock js 0x4267e3
  4267dd:	xchg   ecx,eax
  4267de:	ins    DWORD PTR es:[edi],dx
  4267df:	adc    DWORD PTR [ebp+0x2e],0xffffffb7
  4267e3:	mov    DWORD PTR [eax],esi
  4267e5:	add    BYTE PTR gs:[edi+0x14],cl
  4267e9:	or     esp,DWORD PTR [edx+0x1385c73]
  4267ef:	fisub  WORD PTR [eax+edx*4+0x2ac8208f]
  4267f6:	enter  0xe601,0x3f
  4267fa:	pop    ecx
  4267fb:	mov    ebx,0xd1258cb2
  426800:	push   eax
  426801:	ror    edi,0x85
  426804:	outs   dx,DWORD PTR ds:[esi]
  426805:	scas   eax,DWORD PTR es:[edi]
  426806:	ret    
  426807:	mov    eax,ds:0x7bbab39e
  42680c:	cmp    ecx,DWORD PTR [ecx-0x43]
  42680f:	or     eax,0x3f4748c5
  426814:	pop    ebx
  426815:	xchg   BYTE PTR [ecx+0x7759393c],ah
  42681b:	cmp    BYTE PTR [edx],al
  42681d:	fmul   DWORD PTR [eax+0x252dbb5f]
  426823:	je     0x4267b6
  426825:	int3   
  426826:	mov    cs,WORD PTR [ecx+0x6b2a7a29]
  42682c:	or     DWORD PTR [esi],ecx
  42682e:	jno    0x426899
  426830:	mov    esi,0xb7ffb63b
  426835:	in     eax,dx
  426836:	inc    DWORD PTR [ebx-0x78c151d5]
  42683c:	jle    0x426891
  42683e:	dec    ecx
  42683f:	cmp    eax,0xe80001e0
  426844:	add    DWORD PTR [eax],eax
  426846:	add    BYTE PTR [ecx+0x225ffb3],ch
  42684c:	mov    DWORD PTR [eax],edx
  42684e:	pop    ebx
  42684f:	or     bl,BYTE PTR [bp+si+0x23a8]
  426854:	sbb    DWORD PTR [edx],0xe6925753
  42685a:	mov    ch,0x92
  42685c:	push   ebx
  42685d:	cmp    al,0x76
  42685f:	dec    ebx
  426860:	stos   BYTE PTR es:[edi],al
  426861:	push   eax
  426862:	vprotb xmm2,xmm0,0x51
  426867:	fcmovne st,st(1)
  426869:	mov    dl,0xdd
  42686b:	sub    ebx,DWORD PTR [eax]
  42686d:	inc    esi
  42686e:	mov    es,WORD PTR [esi]
  426870:	sti    
  426871:	repz repz les ebx,FWORD PTR [eax+ebp*8]
  426876:	xchg   esp,eax
  426877:	out    dx,eax
  426878:	mov    BYTE PTR [ecx],ah
  42687a:	scas   al,BYTE PTR es:[edi]
  42687b:	ja     0x426845
  42687d:	cdq    
  42687e:	pop    es
  42687f:	(bad)  
  426880:	cmp    BYTE PTR [esi],ah
  426882:	xchg   edx,eax
  426883:	fsub   DWORD PTR [ecx+0x2f]
  426886:	sbb    ch,BYTE PTR [ecx]
  426888:	xor    DWORD PTR [eax-0x799237b3],esp
  42688e:	cmp    eax,0x591ccd1
  426893:	or     ah,BYTE PTR [ebx]
  426895:	daa    
  426896:	test   BYTE PTR [edx+0xb],al
  426899:	jl     0x4268fc
  42689b:	or     BYTE PTR [eax],bh
  42689d:	bound  edx,QWORD PTR [ebp-0x7705feea]
  4268a3:	mov    bl,0x76
  4268a5:	and    ebx,DWORD PTR [edi*4+0xcdfa109]
  4268ac:	jp     0x426855
  4268ae:	(bad)  [ecx]
  4268b0:	test   eax,0x9e67203c
  4268b5:	push   ss
  4268b6:	pop    esp
  4268b7:	sbb    eax,0x642d9260
  4268bc:	or     ch,BYTE PTR [esi]
  4268be:	je     0x42686d
  4268c0:	xor    edi,DWORD PTR [edx+0xf75b0b3]
  4268c6:	jle    0x4268ba
  4268c8:	pop    edi
  4268c9:	jp     0x4268f4
  4268cb:	aad    0xd0
  4268cd:	jle    0x426852
  4268cf:	add    eax,0xdb76ceb0
  4268d4:	fdiv   QWORD PTR [eax-0x17e85780]
  4268da:	lods   eax,DWORD PTR ds:[esi]
  4268db:	jns    0x426941
  4268dd:	in     al,0x9f
  4268df:	inc    eax
  4268e0:	cmc    
  4268e1:	inc    edx
  4268e2:	retf   0x2385
  4268e5:	ret    0x19e2
  4268e8:	aad    0x9f
  4268ea:	mov    esi,0x74b0be40
  4268ef:	pop    edx
  4268f0:	call   0x75ca98c8
  4268f5:	push   edi
  4268f6:	xchg   edi,eax
  4268f7:	sbb    bh,BYTE PTR [ebx+0x6a93b325]
  4268fd:	(bad)
  426900:	std    
  426901:	sti    
  426902:	adc    al,0x24
  426904:	jns    0x42692f
  426906:	es call 0xfff4:0xe1f2eb8b
  42690e:	aas    
  42690f:	(bad)  
  426910:	arpl   WORD PTR [eax],cx
  426912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426913:	inc    ebp
  426914:	sahf   
  426915:	add    ah,BYTE PTR [ecx+0x34c045be]
  42691b:	test   eax,0x95f57d0b
  426920:	add    ecx,DWORD PTR [eax-0x66058aad]
  426926:	pop    ebx
  426927:	fisttp DWORD PTR [ebx+ebp*1+0x16]
  42692b:	rcr    BYTE PTR [edi+0x1f50c816],0x80
  426932:	push   edx
  426933:	rcr    BYTE PTR ds:0x3b4dd0e3,1
  426939:	fdiv   DWORD PTR [edi+0x2f]
  42693c:	ret    
  42693d:	iret   
  42693e:	inc    esi
  42693f:	std    
  426940:	aad    0xf2
  426942:	mov    ebx,0x7062ad7e
  426947:	sub    BYTE PTR [ebp+0x78],al
  42694a:	je     0x426971
  42694c:	out    dx,al
  42694d:	pop    es
  42694e:	cmp    DWORD PTR [ebx+ebp*2-0x14d83ff0],ebx
  426955:	fidiv  DWORD PTR [ebx]
  426957:	repz shl cl,0xa0
  42695b:	aam    0xaa
  42695d:	mov    dl,0x23
  42695f:	push   eax
  426960:	inc    ebx
  426961:	call   0xde8d8330
  426966:	push   ds
  426967:	ja     0x426949
  426969:	mov    al,0x80
  42696b:	ror    BYTE PTR [edx+0x632a4ba6],0x79
  426972:	call   0x5df46012
  426977:	xlat   BYTE PTR ds:[ebx]
  426978:	sub    ebx,DWORD PTR [edx]
  42697a:	clc    
  42697b:	imul   ebx,DWORD PTR [ebp+0x27],0xbe696295
  426982:	or     al,0x4c
  426984:	lods   al,BYTE PTR ds:[esi]
  426985:	(bad)  
  426986:	or     edi,edi
  426988:	retf   0xa60f
  42698b:	test   DWORD PTR [ebp+0x5c],0xf7391a67
  426992:	jno    0x426974
  426994:	shr    BYTE PTR ds:0x7e15d85e,1
  42699a:	mov    edx,0xa99e2a39
  42699f:	addr16 je 0x426a0f
  4269a2:	cmp    cl,BYTE PTR [edx-0x2cc55961]
  4269a8:	lock sbb BYTE PTR [eax],dh
  4269ab:	(bad)  
  4269ac:	mov    edi,0xaab45b18
  4269b1:	setno  ch
  4269b4:	cwde   
  4269b5:	cmp    ah,BYTE PTR [edx]
  4269b7:	imul   ebp,ebp,0x80a8d29
  4269bd:	aaa    
  4269be:	jge    0x426a3d
  4269c0:	retf   0xfbcf
  4269c3:	inc    edx
  4269c4:	es enter 0x9c34,0x4f
  4269c9:	dec    esp
  4269ca:	retf   0x7dce
  4269cd:	mov    ebp,0xaa60b7e1
  4269d2:	add    DWORD PTR [eax],ebx
  4269d4:	xchg   esi,eax
  4269d5:	test   BYTE PTR [eax],bh
  4269d7:	leave  
  4269d8:	loop   0x4269ee
  4269da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269db:	arpl   si,ax
  4269dd:	pop    ecx
  4269de:	mov    ah,0x6c
  4269e0:	fwait
  4269e1:	outs   dx,DWORD PTR ds:[esi]
  4269e2:	es cmp al,0xd4
  4269e5:	ins    BYTE PTR es:[edi],dx
  4269e6:	fldl2e 
  4269e8:	pop    ebx
  4269e9:	pop    eax
  4269ea:	adc    BYTE PTR [edi+0x13],ch
  4269ed:	out    dx,eax
  4269ee:	(bad)  
  4269ef:	popa   
  4269f0:	inc    esi
  4269f1:	jp     0x426a6a
  4269f3:	repnz inc eax
  4269f5:	xchg   DWORD PTR [eax],eax
  4269f7:	mov    al,0xa0
  4269f9:	fwait
  4269fa:	rcr    bh,cl
  4269fc:	mov    dh,BYTE PTR [eax]
  4269fe:	adc    edx,DWORD PTR [ebx+ebp*8+0x4e36bd60]
  426a05:	mov    ch,0x5d
  426a07:	cmp    ch,BYTE PTR [edi-0x1ef73c6]
  426a0d:	cs dec edx
  426a0f:	ss dec eax
  426a11:	out    dx,eax
  426a12:	sahf   
  426a13:	xchg   edx,eax
  426a14:	jmp    0x3c6e:0x6374c5ac
  426a1b:	or     BYTE PTR [ebp-0x14f1c487],bl
  426a21:	bound  edx,QWORD PTR [edx+eiz*1-0x74]
  426a25:	xchg   esi,eax
  426a26:	not    DWORD PTR [ebx]
  426a28:	retf   0xd97e
  426a2b:	adc    ebp,DWORD PTR [esi+0x48ebcb38]
  426a31:	or     al,0xc7
  426a33:	scas   eax,DWORD PTR es:[edi]
  426a34:	(bad)  
  426a35:	jmp    0x426aa3
  426a37:	arpl   WORD PTR [ebx+edx*4+0x408b2f48],bx
  426a3e:	jae    0x426a65
  426a40:	loop   0x426a43
  426a42:	add    al,ch
  426a44:	add    DWORD PTR [eax],eax
  426a46:	add    BYTE PTR [ebx],bl
  426a48:	fwait
  426a49:	jae    0x426a51
  426a4b:	and    esp,DWORD PTR [edx]
  426a4d:	add    BYTE PTR [ebp+0x3e],dh
  426a50:	mov    ch,0x82
  426a52:	dec    ebx
  426a53:	add    ch,cl
  426a55:	ja     0x426a98
  426a57:	push   ecx
  426a58:	or     ebp,esi
  426a5a:	cmove  ebx,DWORD PTR [ebx+0x64730b3d]
  426a61:	jmp    0x47b9:0xc2c9f711
  426a68:	cmp    BYTE PTR [edi],dl
  426a6a:	or     BYTE PTR [eax+0x45d0ccc5],0x32
  426a71:	mov    bh,0xd6
  426a73:	jno    0x426a9b
  426a75:	je     0x426a60
  426a77:	push   eax
  426a78:	pop    esp
  426a79:	pushf  
  426a7a:	or     BYTE PTR [eax+esi*4-0x6f57e382],cl
  426a81:	xor    DWORD PTR [esp+ebp*4-0x55],esi
  426a85:	cdq    
  426a86:	mov    eax,0x1252df39
  426a8b:	mul    DWORD PTR [edi+ebp*1]
  426a8e:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a90:	mov    dh,0xca
  426a92:	push   esp
  426a93:	push   eax
  426a94:	pushf  
  426a95:	inc    ebp
  426a96:	xchg   ebx,eax
  426a97:	or     cl,BYTE PTR [edx+0x6d66771b]
  426a9d:	jl     0x426a47
  426a9f:	rcl    ecx,0x90
  426aa2:	stc    
  426aa3:	xchg   ecx,eax
  426aa4:	mov    eax,0x271e9e81
  426aa9:	call   0xb3856c9b
  426aae:	scas   al,BYTE PTR es:[edi]
  426aaf:	xor    eax,0x1af9aca3
  426ab4:	cmc    
  426ab5:	mov    ch,BYTE PTR [edi]
  426ab7:	mov    eax,ds:0x5ab3c39b
  426abc:	mov    ?,edx
  426abe:	mov    ebx,cs
  426ac0:	pop    eax
  426ac1:	loop   0x426ac2
  426ac3:	xchg   esp,eax
  426ac4:	jp     0x426b00
  426ac6:	fcompp 
  426ac8:	dec    ebx
  426ac9:	mov    esi,0x809592f4
  426ace:	das    
  426acf:	cmp    ebx,DWORD PTR [ebx]
  426ad1:	jmp    0x426ab7
  426ad3:	cmp    ah,dl
  426ad5:	jge    0x426b4d
  426ad7:	jl     0x426b3c
  426ad9:	dec    ebx
  426ada:	fcmovnu st,st(4)
  426adc:	popf   
  426add:	cmp    ebp,ebp
  426adf:	mov    edx,0xa604c9c4
  426ae4:	cmp    DWORD PTR [esi],ecx
  426ae6:	or     bh,BYTE PTR [ebp-0x3e0e3b21]
  426aec:	push   0x11092a5f
  426af1:	jl     0x426b08
  426af3:	or     DWORD PTR [eax-0x43f095c9],ebx
  426af9:	call   0x1ac0:0x91579069
  426b00:	mov    al,0x84
  426b02:	mov    edi,DWORD PTR [ebx-0x36]
  426b05:	cmp    DWORD PTR [esi],ebx
  426b07:	mov    ds:0x4a204b9f,eax
  426b0c:	scas   eax,DWORD PTR es:[edi]
  426b0d:	mov    cl,0x99
  426b0f:	mov    eax,0x5c691544
  426b14:	jns    0x426acf
  426b16:	sbb    edx,ecx
  426b18:	cld    
  426b19:	popa   
  426b1a:	out    0x2a,eax
  426b1c:	add    al,0x98
  426b1e:	sbb    eax,0xb631ad47
  426b23:	pop    esi
  426b24:	cmp    BYTE PTR ds:0x5f5314dd,bl
  426b2a:	(bad)  
  426b2b:	in     eax,dx
  426b2c:	mov    edx,0xab89fb9
  426b31:	push   ebx
  426b32:	dec    edi
  426b33:	(bad)  
  426b34:	shr    DWORD PTR [ebp+0x54e8cafa],cl
  426b3a:	je     0x426b1c
  426b3c:	pop    DWORD PTR ds:0x3696a26c
  426b42:	popf   
  426b43:	daa    
  426b44:	ja     0x426add
  426b46:	push   esp
  426b47:	imul   ebp,DWORD PTR [ebx],0xffffffaf
  426b4a:	stos   DWORD PTR es:[edi],eax
  426b4b:	push   ds
  426b4c:	ret    
  426b4d:	aam    0xd3
  426b4f:	sbb    al,0x2f
  426b51:	pusha  
  426b52:	sub    ebx,edi
  426b54:	das    
  426b55:	cmp    BYTE PTR ds:0xf73264c0,dl
  426b5b:	cmp    eax,0xc560c6d3
  426b60:	shl    DWORD PTR [eax],cl
  426b62:	enter  0x6db4,0x46
  426b66:	ja     0x426af7
  426b68:	scas   eax,DWORD PTR es:[edi]
  426b69:	repnz or DWORD PTR [edx+esi*1-0x30cf68e5],0x18352999
  426b75:	push   0xc057b3e5
  426b7a:	hlt    
  426b7b:	cwde   
  426b7c:	jns    0x426b89
  426b7e:	jnp    0x426b97
  426b80:	ss sahf 
  426b82:	call   0x391a:0x72c5a311
  426b89:	add    eax,0x53d0a7d
  426b8e:	jmp    0xd9d50bec
  426b93:	sub    DWORD PTR [ebx+edi*8-0x4d013030],0xaadb1bc3
  426b9e:	(bad)  
  426ba0:	ins    BYTE PTR es:[edi],dx
  426ba1:	faddp  st(1),st
  426ba3:	ret    0x11a
  426ba6:	xor    eax,0x89ffdf1a
  426bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bac:	pop    ecx
  426bad:	mov    DWORD PTR [ebp+0x47],esi
  426bb0:	adc    eax,0xd003a66e
  426bb5:	gs retf 0xf18b
  426bb9:	cld    
  426bba:	jecxz  0x426bc8
  426bbc:	hlt    
  426bbd:	pop    esp
  426bbe:	jbe    0x426b9e
  426bc0:	fadd   DWORD PTR [esi+0x1af41f9b]
  426bc6:	lock fld TBYTE PTR ss:[edi-0x344b2467]
  426bce:	xor    bl,BYTE PTR [ebx+0x63baf78c]
  426bd4:	fsub   QWORD PTR [ecx]
  426bd6:	movaps XMMWORD PTR [edx],xmm4
  426bd9:	jl     0x426bb6
  426bdb:	sbb    DWORD PTR gs:[esi-0x5f5338c5],esp
  426be2:	xchg   BYTE PTR [edi+0x46],ah
  426be5:	mov    edx,0x21c23b0
  426bea:	push   0xffffffa9
  426bec:	jnp    0x426c12
  426bee:	mov    ds:0x20877fd1,al
  426bf3:	sar    BYTE PTR [edi-0x31],cl
  426bf6:	repz and eax,0x1dcb32ff
  426bfc:	jecxz  0x426c5e
  426bfe:	sbb    ah,BYTE PTR [ebp+0x39]
  426c01:	jo     0x426b9c
  426c03:	jae    0x426c60
  426c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c06:	fnstsw WORD PTR [ecx]
  426c08:	mov    cl,0x84
  426c0a:	xchg   edi,eax
  426c0b:	mov    BYTE PTR [esi-0x5906396c],bl
  426c11:	sbb    eax,0xd0bb4dba
  426c16:	out    dx,al
  426c17:	push   gs
  426c19:	sub    ebx,DWORD PTR [esi+0x2fe9fa9]
  426c1f:	or     al,0x13
  426c21:	ins    BYTE PTR es:[edi],dx
  426c22:	mov    ecx,0x3f71720f
  426c27:	scas   al,BYTE PTR es:[edi]
  426c28:	pop    ds
  426c29:	and    BYTE PTR [eax-0x1ec7a010],cl
  426c2f:	in     al,dx
  426c30:	test   BYTE PTR [eax-0x5f],ah
  426c33:	push   0xd0cdede5
  426c38:	imul   ebp,DWORD PTR [ebx],0x5e794603
  426c3e:	sti    
  426c3f:	or     eax,0xe80001e4
  426c44:	add    DWORD PTR [eax],eax
  426c46:	add    cl,dl
  426c48:	mov    edi,0x9b311973
  426c4d:	mov    al,ds:0xaa572cb7
  426c52:	mov    ebp,0x2d8e3fb0
  426c57:	lods   eax,DWORD PTR ds:[esi]
  426c58:	jbe    0x426cc7
  426c5a:	jns    0x426cd4
  426c5c:	xchg   edi,eax
  426c5d:	pop    ebp
  426c5e:	jp     0x426c50
  426c60:	cwde   
  426c61:	mov    eax,0xb0724701
  426c66:	mov    edx,0x15da6f0a
  426c6b:	sub    eax,0xdc3b7c11
  426c70:	push   esi
  426c71:	push   edi
  426c72:	sub    BYTE PTR [edx],ch
  426c74:	adc    BYTE PTR [eax],0xfe
  426c77:	xor    al,BYTE PTR [edx]
  426c79:	jmp    0x99a22c0c
  426c7e:	inc    BYTE PTR [esi*2+0x56ab0551]
  426c85:	(bad)  
  426c86:	outs   dx,DWORD PTR ds:[esi]
  426c87:	dec    edi
  426c88:	bnd je 0x426c23
  426c8b:	sar    edx,0xac
  426c8e:	aaa    
  426c8f:	dec    ecx
  426c90:	and    eax,0xebe4fe11
  426c95:	les    esp,FWORD PTR [ebx-0x70]
  426c98:	sub    al,0xb0
  426c9a:	pop    ebp
  426c9b:	das    
  426c9c:	stc    
  426c9d:	ins    BYTE PTR es:[edi],dx
  426c9e:	or     BYTE PTR [eax-0x53],ch
  426ca1:	sahf   
  426ca2:	jmp    0x53c80aac
  426ca7:	and    al,BYTE PTR [edi-0x594d12a6]
  426cad:	sti    
  426cae:	repnz or al,0xb7
  426cb1:	daa    
  426cb2:	dec    esi
  426cb3:	inc    edi
  426cb4:	fcomp  DWORD PTR [eax+0x1129cfbc]
  426cba:	shr    BYTE PTR [ebp-0xd],0x11
  426cbe:	aam    0xc6
  426cc0:	(bad)  
  426cc1:	out    dx,al
  426cc2:	jb     0x426c67
  426cc4:	and    eax,0x156a68ac
  426cc9:	xchg   ebx,eax
  426cca:	jecxz  0x426cd1
  426ccc:	mov    cl,BYTE PTR [ebx]
  426cce:	adc    BYTE PTR [ecx+0x42],al
  426cd1:	out    0x95,eax
  426cd3:	rol    DWORD PTR [esi],0xe
  426cd6:	jo     0x426d0a
  426cd8:	imul   ecx,ebp,0xffffff99
  426cdb:	jle    0x426d3f
  426cdd:	or     BYTE PTR ds:0xeaaa82b9,al
  426ce3:	ja     0x426d01
  426ce5:	jle    0x426cd5
  426ce7:	loop   0x426ce9
  426ce9:	aam    0x74
  426ceb:	cld    
  426cec:	icebp  
  426ced:	in     eax,dx
  426cee:	or     dl,BYTE PTR [eax+0x1303b1ec]
  426cf4:	xchg   edi,eax
  426cf5:	pusha  
  426cf6:	mov    ebp,gs
  426cf8:	jecxz  0x426d67
  426cfa:	adc    ebp,DWORD PTR [esi]
  426cfc:	fisubr DWORD PTR [ebp+0x1a]
  426cff:	test   DWORD PTR [esi+0x63568b73],edx
  426d05:	lds    ecx,FWORD PTR [edi+0x4e]
  426d08:	xchg   BYTE PTR [edi],dh
  426d0a:	pop    esp
  426d0b:	je     0x426d81
  426d0d:	(bad)  
  426d0e:	mov    ch,0x34
  426d10:	int3   
  426d11:	add    dl,0xc3
  426d14:	shr    DWORD PTR [edi-0x5c],0xd4
  426d18:	js     0x426d2f
  426d1a:	scas   eax,DWORD PTR es:[edi]
  426d1b:	pop    es
  426d1c:	xchg   DWORD PTR [eax],ebp
  426d1e:	jmp    0xa5ff:0xfb2f0602
  426d25:	test   BYTE PTR [eax+0x79],ah
  426d28:	enter  0xb629,0x16
  426d2c:	cmp    eax,0xe871966e
  426d31:	mov    ch,0x90
  426d33:	dec    ebp
  426d34:	in     al,dx
  426d35:	ror    BYTE PTR [ecx-0xb8f442],0x3e
  426d3c:	push   ds
  426d3d:	dec    eax
  426d3e:	fild   WORD PTR [eax+0x5b]
  426d41:	fild   QWORD PTR [edx]
  426d43:	ja     0x426d8f
  426d45:	sbb    edi,0x90b53410
  426d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d4c:	jmp    0x8ccf:0x993a7865
  426d53:	mov    edx,0xb10ef6b7
  426d58:	inc    ecx
  426d59:	mov    esp,0xbbcce3bb
  426d5e:	(bad)
  426d61:	pop    ebp
  426d62:	cmp    DWORD PTR [eax],ecx
  426d64:	sbb    al,0xc9
  426d66:	call   0xe335af6d
  426d6b:	dec    esi
  426d6c:	jbe    0x426d59
  426d6e:	lods   eax,DWORD PTR ds:[esi]
  426d6f:	out    0xa0,eax
  426d71:	in     al,0xae
  426d73:	sub    al,0x51
  426d75:	mov    esp,0x3a3d890d
  426d7a:	or     al,0x2
  426d7c:	dec    edi
  426d7d:	push   es
  426d7e:	shl    BYTE PTR [edi],1
  426d80:	add    al,0x10
  426d82:	and    dl,al
  426d84:	les    edi,FWORD PTR [esi-0x64068551]
  426d8a:	mov    eax,ds:0x39373ffa
  426d8f:	inc    edi
  426d90:	sub    al,0x24
  426d92:	and    al,0x18
  426d94:	xchg   edx,eax
  426d95:	cdq    
  426d96:	sbb    al,0xc2
  426d98:	das    
  426d99:	call   0xcd36:0x7b3abc10
  426da0:	pop    edx
  426da1:	pop    esp
  426da2:	jmp    0x3a7e6232
  426da7:	ins    DWORD PTR es:[edi],dx
  426da8:	addr16 jmp 0x5f00c6f4
  426dae:	sub    BYTE PTR [ebx+eiz*1+0x160e5715],dl
  426db5:	dec    BYTE PTR ds:0x1709eeed
  426dbb:	cdq    
  426dbc:	stos   BYTE PTR es:[edi],al
  426dbd:	loope  0x426d9f
  426dbf:	adc    BYTE PTR [eax],bl
  426dc1:	jbe    0x426df2
  426dc3:	pop    ebp
  426dc4:	mov    DWORD PTR [esi+0x40],ebx
  426dc7:	fwait
  426dc8:	into   
  426dc9:	fs add edi,ecx
  426dcc:	push   ss
  426dcd:	out    0xcb,eax
  426dcf:	call   0x1c5e0851
  426dd4:	inc    esp
  426dd5:	xchg   ebp,eax
  426dd6:	in     al,0x99
  426dd8:	and    al,0xfa
  426dda:	or     eax,edx
  426ddc:	xchg   ecx,eax
  426ddd:	test   DWORD PTR [ebp+0x24ea06ea],0xe0c8526e
  426de7:	dec    edi
  426de8:	mov    eax,0x43070da8
  426ded:	rcl    DWORD PTR [esi+0x625a11a1],0xbf
  426df4:	test   BYTE PTR [ebx-0x1d0cb1bf],al
  426dfa:	scas   eax,DWORD PTR es:[edi]
  426dfb:	mov    ?,WORD PTR [esi+edx*4-0x6d]
  426dff:	es icebp 
  426e01:	jbe    0x426dd9
  426e03:	xor    eax,0x852eac84
  426e08:	std    
  426e09:	pop    edx
  426e0a:	ja     0x426d8e
  426e0c:	cmp    DWORD PTR [ecx+ecx*2+0x5f3a6eae],ebp
  426e13:	js     0x426e1e
  426e15:	mov    es,edx
  426e17:	fimul  DWORD PTR [edx]
  426e19:	jl     0x426e32
  426e1b:	jl     0x426e99
  426e1d:	jle    0x426e39
  426e1f:	xlat   BYTE PTR ds:[ebx]
  426e20:	popf   
  426e21:	loop   0x426e06
  426e23:	sbb    ebx,edi
  426e25:	jecxz  0x426e2a
  426e27:	cs outs dx,DWORD PTR fs:[esi]
  426e2a:	cmp    DWORD PTR [ebp*4+0x515aa5f8],edi
  426e31:	leave  
  426e32:	popf   
  426e33:	retf   
  426e34:	popf   
  426e35:	pop    esi
  426e36:	xlat   BYTE PTR ds:[ebx]
  426e37:	aaa    
  426e38:	add    bl,ch
  426e3a:	arpl   WORD PTR [esi-0xa3d61f9],cx
  426e40:	in     eax,0x1
  426e42:	add    al,ch
  426e44:	add    DWORD PTR [eax],eax
  426e46:	add    BYTE PTR [ecx+ecx*1+0x6e],al
  426e4a:	push   edi
  426e4b:	mov    dh,0xf
  426e4d:	sub    esi,esi
  426e4f:	xchg   edi,eax
  426e50:	aad    0x2d
  426e52:	aad    0xd7
  426e54:	aam    0x5e
  426e56:	pop    esp
  426e57:	inc    DWORD PTR [eax]
  426e59:	(bad)  
  426e5a:	rcl    BYTE PTR [edx],0x4
  426e5d:	mov    esi,0xa889eba2
  426e62:	push   0x67de1b62
  426e67:	adc    ecx,DWORD PTR [edi+0xf0bf888]
  426e6d:	mov    esp,0x64bc6720
  426e72:	cld    
  426e73:	mov    edx,0x6187f088
  426e78:	neg    ch
  426e7a:	or     ecx,esp
  426e7c:	push   ebp
  426e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e7e:	js     0x426ed0
  426e80:	daa    
  426e81:	pusha  
  426e82:	arpl   sp,cx
  426e84:	push   es
  426e85:	dec    eax
  426e86:	mov    esi,DWORD PTR [eax+0x619822c]
  426e8c:	in     eax,dx
  426e8d:	xchg   DWORD PTR [eax],edi
  426e8f:	xchg   bl,dl
  426e91:	mov    eax,0xcbae8c2a
  426e96:	cld    
  426e97:	inc    eax
  426e98:	inc    esp
  426e99:	or     eax,0x26834736
  426e9e:	cmp    eax,0x9b698248
  426ea3:	push   eax
  426ea4:	sub    dl,BYTE PTR [esi+0x33]
  426ea7:	mov    dh,0x3b
  426ea9:	and    BYTE PTR [edx+0x45],al
  426eac:	out    dx,eax
  426ead:	xor    DWORD PTR [edx+0x1266d99],ebx
  426eb3:	jne    0x426e8c
  426eb5:	repnz fadd st,st(6)
  426eb8:	sar    BYTE PTR [ecx+edx*1],1
  426ebb:	and    al,0x7b
  426ebd:	leave  
  426ebe:	pop    esp
  426ebf:	dec    ecx
  426ec0:	xor    DWORD PTR [edi+0x3dbcb062],eax
  426ec6:	(bad)  [esp+ecx*8-0x6a7e333f]
  426ecd:	push   edx
  426ece:	xchg   edx,eax
  426ecf:	test   DWORD PTR [ebp+0x1fe177e7],edi
  426ed5:	or     eax,0x1864c1bf
  426eda:	je     0x426f54
  426edc:	inc    edx
  426edd:	in     eax,dx
  426ede:	xor    eax,DWORD PTR [ebp+esi*4-0x295e1051]
  426ee5:	add    eax,0xdb569a3
  426eea:	inc    ecx
  426eeb:	mov    dh,BYTE PTR [ebp-0x55]
  426eee:	sti    
  426eef:	inc    eax
  426ef0:	retf   
  426ef1:	and    BYTE PTR [esi],ah
  426ef3:	or     al,0x16
  426ef5:	ffree  st(3)
  426ef7:	sub    DWORD PTR [esi],edx
  426ef9:	out    dx,eax
  426efa:	lods   eax,DWORD PTR ds:[esi]
  426efb:	mov    al,0x6d
  426efd:	jg     0x426e9d
  426eff:	mov    BYTE PTR [edi+0x7f2ee7c7],cl
  426f05:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  426f07:	fld    QWORD PTR [ecx+0x4d]
  426f0a:	xor    BYTE PTR [ebp-0x29bf4af7],al
  426f10:	hlt    
  426f11:	mov    ebp,0x4c335401
  426f16:	mov    cs,ebx
  426f18:	stc    
  426f19:	adc    al,0x4
  426f1b:	ds jno 0x426eb0
  426f1e:	repz jmp 0xbf61270a
  426f24:	cwde   
  426f25:	lea    ebp,[eax]
  426f27:	push   ebp
  426f28:	stos   BYTE PTR es:[edi],al
  426f29:	mov    ah,0xce
  426f2b:	mov    edi,0xc0c844d3
  426f30:	clc    
  426f31:	bt     DWORD PTR [esi-0x42f7b82f],esp
  426f38:	add    eax,0xcba7b2df
  426f3d:	xlat   BYTE PTR ds:[ebx]
  426f3e:	sbb    DWORD PTR [ecx-0x45ed6400],0x6c
  426f45:	xchg   esi,eax
  426f46:	or     al,0x3a
  426f48:	iret   
  426f49:	xchg   esp,eax
  426f4a:	test   DWORD PTR [edx-0x45f8af1a],0xf5516054
  426f54:	fcomp  QWORD PTR [ebx*8-0x3a623183]
  426f5b:	sub    DWORD PTR [ebx],0xffffffb0
  426f5e:	xchg   esp,eax
  426f5f:	or     bl,BYTE PTR ss:0x3ff15b7c
  426f66:	add    eax,0x874f38be
  426f6b:	sar    DWORD PTR [ebx-0x8],0x63
  426f6f:	in     eax,0x3
  426f71:	xchg   esi,eax
  426f72:	dec    ecx
  426f73:	in     eax,0x41
  426f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f76:	sbb    al,0x90
  426f78:	mul    cl
  426f7a:	jmp    0x426f1a
  426f7c:	sbb    dl,dl
  426f7e:	jnp    0x426fc9
  426f80:	dec    ebp
  426f81:	(bad)  
  426f82:	icebp  
  426f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f84:	in     eax,dx
  426f85:	cdq    
  426f86:	popa   
  426f87:	pop    ebp
  426f88:	push   edx
  426f89:	adc    BYTE PTR gs:[eax+eiz*4+0x175f81be],ch
  426f91:	gs dec ebp
  426f93:	sbb    BYTE PTR [edi],bl
  426f95:	sbb    ch,BYTE PTR [esp+ebp*4+0x7f]
  426f99:	scas   al,BYTE PTR es:[edi]
  426f9a:	sbb    al,0xc6
  426f9c:	ins    DWORD PTR es:[edi],dx
  426f9d:	pop    esi
  426f9e:	inc    ebx
  426f9f:	(bad)
  426fa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fa3:	xchg   edi,eax
  426fa4:	cmp    al,0xc0
  426fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426fa7:	push   ecx
  426fa8:	fild   QWORD PTR [esi-0x5c]
  426fab:	sahf   
  426fac:	mov    dh,0xc8
  426fae:	push   ecx
  426faf:	pop    edi
  426fb0:	dec    ebp
  426fb1:	xlat   BYTE PTR fs:[ebx]
  426fb3:	loop   0x426f82
  426fb5:	call   0x5ab1170d
  426fba:	call   0xa6d9:0xa24d0bab
  426fc1:	mov    ebp,0xa1bc338c
  426fc6:	loopne 0x427019
  426fc8:	xchg   esi,eax
  426fc9:	call   0xaa2f:0x4fa6fce4
  426fd0:	mov    al,ds:0xb32a2735
  426fd5:	mov    gs,WORD PTR [ebp+0x2ba2e02d]
  426fdb:	sar    BYTE PTR [esp+ebx*4+0x75],1
  426fdf:	jecxz  0x426fed
  426fe1:	in     eax,dx
  426fe2:	popf   
  426fe3:	cmp    DWORD PTR [eax-0x47],esp
  426fe6:	pop    ecx
  426fe7:	repz popa 
  426fe9:	mov    bl,0x4b
  426feb:	cmp    eax,0x9d47fa9d
  426ff0:	push   esi
  426ff1:	in     al,dx
  426ff2:	sub    DWORD PTR cs:[edi+edx*1+0x1],eax
  426ff7:	and    al,0x6f
  426ff9:	stos   DWORD PTR es:[edi],eax
  426ffa:	(bad)  [ebx-0x2cb36186]
  427000:	push   ds
  427001:	fisub  WORD PTR [ecx+0x4f]
  427004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427005:	jmp    0x52a5:0x906236c3
  42700c:	mov    al,0x2c
  42700e:	fwait
  42700f:	and    cl,BYTE PTR [eax+esi*8-0x25e7a6fb]
  427016:	(bad)  
  427017:	hlt    
  427018:	ja     0x426ff6
  42701a:	xor    eax,DWORD PTR [ebx]
  42701c:	jecxz  0x42707e
  42701e:	mov    edi,DWORD PTR [ebx]
  427020:	pop    ecx
  427021:	imul   ebp,DWORD PTR [edx+edi*2],0x6e
  427025:	mov    dl,0xe0
  427027:	add    eax,0x8b172237
  42702c:	(bad)  
  42702d:	fs mov dh,0x1a
  427030:	call   0x3e4cc0
  427035:	pop    edi
  427036:	out    dx,al
  427037:	and    ebp,DWORD PTR [ebx-0x2f5ca5e5]
  42703d:	mov    eax,0x1e7dd48
  427042:	add    al,ch
  427044:	add    DWORD PTR [eax],eax
  427046:	add    BYTE PTR [ecx],dl
  427048:	push   esi
  427049:	push   esp
  42704a:	or     DWORD PTR [ebp+eax*8-0x19],edi
  42704e:	mul    BYTE PTR [edx+0x174c8ee]
  427054:	mov    esp,DWORD PTR [edx-0x31]
  427057:	clc    
  427058:	cmp    dh,al
  42705a:	in     al,0x9e
  42705c:	stos   BYTE PTR es:[edi],al
  42705d:	cmp    BYTE PTR [esi+0x18],ch
  427060:	cs mov dl,0x46
  427063:	lods   eax,DWORD PTR ds:[esi]
  427064:	xlat   BYTE PTR ds:[ebx]
  427065:	sub    DWORD PTR [esi-0x64266f09],0xef7dc495
  42706f:	jae    0x427043
  427071:	jge    0x4270ea
  427073:	pop    edx
  427074:	je     0x4270dd
  427076:	(bad)  
  427077:	jmp    0x427091
  427079:	adc    BYTE PTR [ebx+0x6a25571e],0x34
  427080:	addr16 (bad) 
  427082:	mov    dl,0x6d
  427084:	es or  al,0xe4
  427087:	adc    BYTE PTR [eax],ah
  427089:	add    al,0xab
  42708b:	fimul  WORD PTR [edx-0xa3114e1]
  427091:	dec    esp
  427092:	mov    bl,0x34
  427094:	inc    esi
  427095:	xor    bl,ch
  427097:	fs sahf 
  427099:	mov    esp,0xa1444407
  42709e:	sbb    BYTE PTR fs:[ebp+0x2069edfa],al
  4270a5:	adc    bl,dh
  4270a7:	sbb    esp,eax
  4270a9:	popa   
  4270aa:	or     dh,BYTE PTR [ecx]
  4270ac:	cli    
  4270ad:	retf   0xf2f4
  4270b0:	retf   
  4270b1:	clc    
  4270b2:	retf   0x1ec6
  4270b5:	jb     0x4270c8
  4270b7:	inc    eax
  4270b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270b9:	pop    es
  4270ba:	adc    cl,cl
  4270bc:	jmp    0xeeb2:0x4291d716
  4270c3:	repnz nop
  4270c5:	xchg   esp,eax
  4270c6:	loop   0x4270da
  4270c8:	mov    ds:0x1d6b85c7,eax
  4270cd:	pusha  
  4270ce:	cmp    eax,0xaad046df
  4270d3:	int    0xab
  4270d5:	rcr    DWORD PTR [ebx+0x28],cl
  4270d8:	call   0x74d30806
  4270dd:	pusha  
  4270de:	nop
  4270df:	ret    
  4270e0:	enter  0x8371,0x40
  4270e4:	ss pusha 
  4270e6:	fcomp  st(7)
  4270e8:	add    dh,BYTE PTR [ebx-0x42]
  4270eb:	push   esi
  4270ec:	lods   eax,DWORD PTR ds:[esi]
  4270ed:	div    BYTE PTR [eax-0x4a]
  4270f0:	int3   
  4270f1:	adc    bh,bh
  4270f3:	or     eax,0xc185ad70
  4270f8:	mov    dh,0xda
  4270fa:	imul   esp,DWORD PTR [ebp+edi*2+0x1e],0xffffff8d
  4270ff:	inc    ebx
  427100:	jb     0x4270ba
  427102:	test   al,0x6
  427104:	push   cs
  427105:	cmp    ah,BYTE PTR [edx]
  427107:	out    0xa3,eax
  427109:	fisttp WORD PTR [edx+0x27b7f365]
  42710f:	mov    al,ds:0xe1831256
  427114:	(bad)  
  427115:	pop    esi
  427116:	cmp    bh,cl
  427118:	aad    0x10
  42711a:	nop
  42711b:	hlt    
  42711c:	adc    edi,DWORD PTR [ebx+0x6052b21]
  427122:	in     eax,dx
  427123:	ret    
  427124:	icebp  
  427125:	xchg   BYTE PTR [ebx],ch
  427127:	jo     0x427175
  427129:	stos   DWORD PTR es:[edi],eax
  42712a:	lods   eax,DWORD PTR ds:[esi]
  42712b:	xor    eax,0xa6e07141
  427130:	pop    DWORD PTR [edi-0x3c]
  427133:	xchg   esi,eax
  427134:	es ins BYTE PTR es:[edi],dx
  427136:	fwait
  427137:	inc    ebp
  427138:	sub    ch,BYTE PTR [esi-0xf]
  42713b:	sti    
  42713c:	pop    edi
  42713d:	dec    ebp
  42713e:	fs pop ds
  427140:	jb     0x4271a1
  427142:	inc    edi
  427143:	mov    WORD PTR [ebx+0x12],?
  427146:	cmp    DWORD PTR [ecx-0x666e93f4],ecx
  42714c:	mov    al,0xdb
  42714e:	xor    BYTE PTR [ebx-0x11ad484],al
  427154:	cmp    eax,0x5f1f658e
  427159:	push   es
  42715a:	jmp    0x643a:0xa5a5f624
  427161:	pop    ebp
  427162:	xchg   ebp,eax
  427163:	sbb    eax,0xd9e2a328
  427168:	jge    0x427172
  42716a:	ror    edx,0x94
  42716d:	ficom  DWORD PTR [ecx]
  42716f:	sbb    BYTE PTR [esi+0x7a],bl
  427172:	jns    0x427147
  427174:	adc    ebx,edx
  427176:	sub    BYTE PTR ds:0x3e4b04b7,bl
  42717c:	lds    edi,FWORD PTR [ebx+0x2f]
  42717f:	ret    0xea59
  427182:	sbb    eax,0x8514e6fb
  427187:	loop   0x4271f3
  427189:	fnstsw WORD PTR [ebx+0x34db3285]
  42718f:	inc    esi
  427190:	mov    ch,0x30
  427192:	sbb    dl,dh
  427194:	loop   0x427174
  427196:	dec    ebx
  427197:	add    BYTE PTR [ebx+ecx*2],cl
  42719a:	and    ecx,DWORD PTR [ebx+edi*4+0x1c7e0656]
  4271a1:	or     BYTE PTR [edi],0x5f
  4271a4:	(bad)  
  4271a5:	cli    
  4271a6:	mov    dl,BYTE PTR [ebx]
  4271a8:	retf   0x729f
  4271ab:	jb     0x427187
  4271ad:	cli    
  4271ae:	push   edx
  4271af:	clc    
  4271b0:	aaa    
  4271b1:	lock dec edi
  4271b3:	cmc    
  4271b4:	and    DWORD PTR [eax+0x20547d91],edx
  4271ba:	pop    ebp
  4271bb:	ficomp DWORD PTR [esi]
  4271bd:	sahf   
  4271be:	daa    
  4271bf:	inc    ebp
  4271c0:	push   0xffffff9d
  4271c2:	stos   DWORD PTR es:[edi],eax
  4271c3:	jge    0x427157
  4271c5:	jle    0x42723f
  4271c7:	sbb    DWORD PTR [esi-0x68],0xb3e3fd4e
  4271ce:	jne    0x4271e9
  4271d0:	(bad)  
  4271d1:	arpl   WORD PTR [esi+0x6326eaee],bp
  4271d7:	cli    
  4271d8:	dec    ebx
  4271d9:	adc    ch,al
  4271db:	ins    BYTE PTR es:[edi],dx
  4271dc:	push   DWORD PTR [edi+0x1d]
  4271df:	adc    eax,0xa249950c
  4271e4:	and    BYTE PTR [ecx+0x50fd913c],al
  4271ea:	xor    eax,0xb2e1208f
  4271ef:	jb     0x4271d9
  4271f1:	pop    ss
  4271f2:	pushf  
  4271f3:	push   esi
  4271f4:	fwait
  4271f5:	mov    dh,0x74
  4271f7:	(bad)  
  4271f9:	xchg   BYTE PTR [edi],bl
  4271fb:	call   FWORD PTR [ecx]
  4271fd:	jmp    0x7e2c0a58
  427202:	pusha  
  427203:	push   ebx
  427204:	xchg   edi,eax
  427205:	mov    eax,ds:0x7c54a95a
  42720a:	jl     0x427230
  42720c:	(bad)  
  42720d:	cli    
  42720e:	push   eax
  42720f:	into   
  427210:	test   BYTE PTR [eax-0x61163c81],0x14
  427217:	and    esp,DWORD PTR [edx+0x5f]
  42721a:	mov    edx,0x7cbbf31b
  42721f:	sbb    DWORD PTR [ebp-0x255f694c],ebx
  427225:	das    
  427226:	jmp    0x11ec:0x7ec6ea4a
  42722d:	mov    esp,0x517be224
  427232:	data16 fldcw WORD PTR [esi-0x9]
  427236:	dec    ecx
  427238:	imul   edx,DWORD PTR [ecx+0x73073862],0x27
  42723f:	(bad)
  427242:	add    al,ch
  427244:	add    DWORD PTR [eax],eax
  427246:	add    BYTE PTR [ecx],ah
  427248:	popf   
  427249:	loop   0x427223
  42724b:	inc    ecx
  42724c:	fimul  WORD PTR [eax-0x49]
  42724f:	mov    dl,0xfb
  427251:	jb     0x42728b
  427253:	push   cs
  427254:	adc    ah,BYTE PTR [ebx-0x63]
  427257:	mov    ebp,0x463d5679
  42725c:	inc    esi
  42725d:	push   cs
  42725e:	xor    cl,0x97
  427261:	cli    
  427262:	xor    bh,BYTE PTR [edi-0x28]
  427265:	cmp    BYTE PTR [edi],al
  427267:	xor    al,BYTE PTR [edx-0x5d8b39eb]
  42726d:	dec    ecx
  42726e:	sbb    ah,BYTE PTR [esp+esi*8]
  427271:	(bad)  
  427272:	rol    BYTE PTR [edx],1
  427274:	adc    BYTE PTR [ebp+ebp*8+0x5d],ch
  427278:	cmp    BYTE PTR [eax],0x3
  42727b:	loop   0x4272e5
  42727d:	cmp    BYTE PTR [eax],bh
  42727f:	mov    ebx,0xb253f286
  427284:	sbb    cl,cl
  427286:	pop    eax
  427287:	leave  
  427288:	and    eax,0x91f1dec5
  42728d:	sbb    cl,bh
  42728f:	inc    esp
  427290:	xchg   ecx,eax
  427291:	aam    0x22
  427293:	push   0xffffff98
  427295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427296:	xchg   DWORD PTR [ebx+0x48],eax
  427299:	push   ebx
  42729a:	mov    dh,0x5e
  42729c:	aam    0x90
  42729e:	and    BYTE PTR [ebx-0x3bf83b8c],dh
  4272a4:	rcr    BYTE PTR [eax+0x40],0xd0
  4272a8:	loopne 0x4272d6
  4272aa:	lahf   
  4272ab:	dec    edi
  4272ac:	iret   
  4272ad:	add    bh,al
  4272af:	dec    esi
  4272b0:	das    
  4272b1:	jno    0x427241
  4272b3:	ss repnz ror BYTE PTR ss:[eax+edx*8-0x6d],cl
  4272ba:	cmc    
  4272bb:	xor    al,0x98
  4272bd:	pop    esi
  4272be:	xlat   BYTE PTR ds:[ebx]
  4272bf:	mov    WORD PTR [edx+0x38],?
  4272c2:	jnp    0x42729c
  4272c4:	outs   dx,BYTE PTR ds:[esi]
  4272c5:	stos   DWORD PTR es:[edi],eax
  4272c6:	mov    bh,0xa0
  4272c8:	sahf   
  4272c9:	mov    ds:0x958f2223,al
  4272ce:	push   ss
  4272cf:	or     dl,BYTE PTR [edi-0x3f]
  4272d2:	xor    ch,BYTE PTR [edx]
  4272d4:	hlt    
  4272d5:	scas   eax,DWORD PTR es:[edi]
  4272d6:	mov    ch,BYTE PTR [ecx]
  4272d8:	inc    ecx
  4272d9:	fmul   QWORD PTR [eax+0x44]
  4272dc:	jecxz  0x427293
  4272de:	sahf   
  4272df:	imul   edx,DWORD PTR [edx+0x9fbd6f8],0xfffffff8
  4272e6:	cli    
  4272e7:	adc    DWORD PTR [edi],eax
  4272e9:	call   0x3f06:0xe7aa70a3
  4272f0:	pop    ecx
  4272f1:	imul   edx,ecx,0x3
  4272f4:	adc    ebx,DWORD PTR [eax+edx*1+0x43]
  4272f8:	mov    ebp,0xf3b83728
  4272fd:	mov    DWORD PTR [esi-0x4972725c],ebp
  427303:	inc    edi
  427304:	push   0xc213dc1c
  427309:	test   al,0x4c
  42730b:	push   ds
  42730c:	mov    ch,0x2b
  42730e:	(bad)  
  42730f:	daa    
  427310:	std    
  427311:	adc    ebx,0x72c6702a
  427317:	out    dx,al
  427318:	test   BYTE PTR [ecx],ch
  42731a:	dec    esp
  42731b:	inc    esp
  42731c:	cs jl  0x4272e7
  42731f:	xchg   ebx,eax
  427320:	mov    bl,0x96
  427322:	mov    ah,0xe0
  427324:	std    
  427325:	ror    BYTE PTR [esi],cl
  427327:	cmp    esi,eax
  427329:	and    BYTE PTR [ecx+0x540d9e75],dh
  42732f:	dec    edi
  427330:	je     0x4272cd
  427332:	lahf   
  427333:	push   ebx
  427334:	push   0xffffffc5
  427336:	mov    ds:0x619a1f9a,al
  42733b:	fwait
  42733c:	mov    bl,0xc1
  42733e:	shl    DWORD PTR [ecx-0x27246958],cl
  427344:	mov    ah,0xc
  427346:	push   ebx
  427347:	shr    BYTE PTR [esi-0x2e],1
  42734a:	in     eax,0x86
  42734c:	clc    
  42734d:	loope  0x4273b7
  42734f:	int3   
  427350:	jp     0x4272fe
  427352:	out    0x8,eax
  427354:	jecxz  0x4272e4
  427356:	push   edi
  427357:	inc    esp
  427358:	or     al,BYTE PTR [ecx+eax*2-0x77b7691]
  42735f:	cmp    ah,bl
  427361:	hlt    
  427362:	mov    ebx,0x8e4cbaae
  427367:	mov    esp,0xe1fdbd38
  42736c:	xchg   edi,eax
  42736d:	hlt    
  42736e:	mov    ebx,0xcaa55207
  427373:	ror    DWORD PTR [eax],1
  427375:	stos   BYTE PTR es:[edi],al
  427376:	ss sub dh,ah
  427379:	int3   
  42737a:	hlt    
  42737b:	jno    0x427377
  42737d:	mov    ds:0xf622d154,al
  427382:	pop    es
  427383:	push   esi
  427384:	jmp    0x4273eb
  427386:	push   ebx
  427387:	inc    ebx
  427388:	xlat   BYTE PTR ds:[ebx]
  427389:	pop    edx
  42738a:	inc    edx
  42738b:	sbb    eax,0x60021536
  427390:	dec    esi
  427391:	mulps  xmm6,XMMWORD PTR [edx+0x3c]
  427395:	xchg   ebp,eax
  427396:	imul   BYTE PTR [eax-0x6a]
  427399:	cmp    al,0xf5
  42739b:	pop    ds
  42739c:	sti    
  42739d:	jmp    0x4273e9
  42739f:	nop
  4273a0:	pop    ds
  4273a1:	dec    ebp
  4273a2:	cdq    
  4273a3:	mov    dl,0x4d
  4273a5:	call   FWORD PTR [eax+0x26]
  4273a8:	scas   al,BYTE PTR es:[edi]
  4273a9:	dec    ecx
  4273aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273ab:	leave  
  4273ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4273ad:	(bad)  
  4273ae:	lock dec esp
  4273b0:	mov    cl,0xb3
  4273b2:	inc    edx
  4273b3:	fisubr DWORD PTR [ebp+edx*2+0x2f]
  4273b7:	aas    
  4273b8:	mov    ecx,0x4cee5c9b
  4273bd:	jbe    0x427397
  4273bf:	sub    ch,BYTE PTR [ecx-0x4ffa4497]
  4273c5:	pop    ebp
  4273c6:	xchg   esi,eax
  4273c7:	fbld   TBYTE PTR [ebx-0x1a]
  4273ca:	not    esp
  4273cc:	and    ebp,DWORD PTR [ebx-0x22ffdce2]
  4273d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273d3:	xchg   edi,eax
  4273d4:	jecxz  0x42739e
  4273d6:	les    ebx,FWORD PTR [esi+0x7a]
  4273d9:	aam    0x3b
  4273db:	adc    dl,dh
  4273dd:	sub    DWORD PTR [eax],edi
  4273df:	je     0x42739f
  4273e1:	(bad)  [ecx-0x66c14146]
  4273e7:	aad    0x5e
  4273e9:	ret    
  4273ea:	xchg   DWORD PTR [edi],ebp
  4273ec:	in     eax,0xe9
  4273ee:	mov    eax,ds:0x7ddb3016
  4273f3:	xchg   esp,eax
  4273f4:	test   BYTE PTR [edi+0x5b],cl
  4273f7:	cld    
  4273f8:	out    0xc4,eax
  4273fa:	mov    ecx,0x6b8ccac0
  4273ff:	pusha  
  427400:	mov    eax,ds:0x79a6fb3d
  427405:	mov    edi,0xd1c74f3e
  42740a:	adc    DWORD PTR [esi-0x489e8cc8],esp
  427410:	sub    cl,bh
  427412:	ss xchg esp,eax
  427414:	inc    ebp
  427415:	jo     0x427475
  427417:	ja     0x4273f7
  427419:	adc    BYTE PTR [esi-0x158c56fe],0x26
  427420:	clc    
  427421:	nop
  427422:	and    DWORD PTR es:[edx],esp
  427425:	in     al,dx
  427426:	pop    ebp
  427427:	cmp    eax,0x71516cfd
  42742c:	jp     0x4273b0
  42742e:	jmp    0x4273f1
  427430:	into   
  427431:	psrld  mm1,QWORD PTR [edi]
  427434:	rcr    ebp,cl
  427436:	fistp  WORD PTR [edi+0x5f9a13f0]
  42743c:	imul   ecx,esi,0x1ebad5b
  427442:	add    al,ch
  427444:	add    DWORD PTR [eax],eax
  427446:	add    BYTE PTR [eax+eiz*1-0x1dde8e32],dh
  42744d:	mov    WORD PTR [ecx-0x23],ss
  427450:	mov    edx,0xab2b23b6
  427455:	mov    edx,0x23e56eac
  42745a:	sub    cl,al
  42745c:	sbb    DWORD PTR ds:0xc0dc1cdd,ebp
  427462:	stc    
  427463:	pop    eax
  427464:	(bad)  [ecx+0x6d23bdf]
  42746a:	aad    0xdf
  42746c:	loope  0x4273f1
  42746e:	jl     0x427471
  427470:	mov    al,ds:0x185203f6
  427475:	(bad)  [edi]
  427477:	jge    0x4274e9
  427479:	and    eax,0x6ea4f38d
  42747e:	adc    ch,BYTE PTR [edx+eiz*1]
  427481:	ja     0x4274db
  427483:	inc    ecx
  427484:	pop    ds
  427485:	push   esp
  427486:	ret    0x6767
  427489:	cmp    DWORD PTR [ecx],esi
  42748b:	aaa    
  42748c:	push   cs
  42748d:	push   edx
  42748e:	mov    dh,0xae
  427490:	rcr    DWORD PTR [edx+0x25],0xcb
  427494:	sbb    al,0x70
  427496:	lods   eax,DWORD PTR ds:[esi]
  427497:	aas    
  427498:	push   0xc006d45b
  42749d:	pop    esi
  42749e:	lods   eax,DWORD PTR ds:[esi]
  42749f:	in     al,dx
  4274a0:	in     eax,dx
  4274a1:	cmp    ah,bh
  4274a3:	add    ch,BYTE PTR [ebx-0x5a]
  4274a6:	or     eax,0x1e32de4
  4274ab:	jnp    0x4274cf
  4274ad:	inc    eax
  4274ae:	inc    edx
  4274af:	ror    DWORD PTR [ebx-0x58df5ac9],cl
  4274b5:	(bad)  
  4274b6:	ret    0xbcf4
  4274b9:	jnp    0x427521
  4274bb:	cmp    DWORD PTR [ebx-0x1a],ebx
  4274be:	jns    0x42749f
  4274c0:	in     eax,0x8e
  4274c2:	pop    ecx
  4274c3:	inc    ebp
  4274c4:	add    ebx,DWORD PTR [edi-0x5e]
  4274c7:	mov    dl,0x52
  4274c9:	push   ebp
  4274ca:	mov    fs,WORD PTR [esi-0xfce8f0d]
  4274d0:	ja     0x4274c6
  4274d2:	enter  0x84a9,0x78
  4274d6:	inc    eax
  4274d7:	das    
  4274d8:	pop    edx
  4274d9:	inc    ebx
  4274da:	fs mov bh,0xec
  4274dd:	pop    eax
  4274de:	sbb    DWORD PTR [edx-0x57fbb686],eax
  4274e4:	cwde   
  4274e5:	mov    ebp,0x941fb929
  4274ea:	fild   WORD PTR [esi+0x267c8a29]
  4274f0:	das    
  4274f1:	or     eax,0xf3d6f6f0
  4274f6:	jmp    0x4274b9
  4274f8:	clc    
  4274f9:	inc    ebx
  4274fa:	xchg   edx,eax
  4274fb:	push   esi
  4274fc:	loopne 0x42755b
  4274fe:	or     DWORD PTR [eax-0x39758cdb],eax
  427504:	sub    dl,BYTE PTR [ebp-0x1c]
  427507:	lods   al,BYTE PTR ds:[esi]
  427508:	and    DWORD PTR [edx+0x54],0xfffffff1
  42750c:	mov    WORD PTR [ebp+0x270349cc],?
  427512:	mov    dl,0x84
  427514:	inc    ebx
  427515:	push   edx
  427516:	in     al,0x1d
  427518:	xor    eax,0xcca5be2f
  42751d:	rcr    BYTE PTR [ecx-0x755c865],cl
  427523:	xor    DWORD PTR [esi],esp
  427525:	stos   BYTE PTR es:[edi],al
  427526:	adc    eax,0x611f2170
  42752b:	loopne 0x4274b3
  42752d:	loopne 0x4275a8
  42752f:	subps  xmm3,XMMWORD PTR [edx-0x74d41be9]
  427536:	push   DWORD PTR [ebp-0x30]
  427539:	adc    DWORD PTR [ebx-0x4d6a6d05],esi
  42753f:	aaa    
  427540:	(bad)
  427543:	mov    ecx,0xd1cfab54
  427548:	xchg   edi,eax
  427549:	jmp    0x4275c4
  42754b:	adc    edi,DWORD PTR [ebp+0x10851577]
  427551:	(bad)  
  427552:	xlat   BYTE PTR ds:[ebx]
  427553:	and    eax,0x88002496
  427558:	jae    0x427544
  42755a:	add    BYTE PTR [ecx+edi*2],bl
  42755d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42755e:	inc    edx
  42755f:	(bad)  
  427560:	int    0x8d
  427562:	in     al,dx
  427563:	jp     0x42751c
  427565:	dec    esi
  427566:	ss repz mov edx,0x80d879a8
  42756d:	push   eax
  42756e:	pop    ss
  42756f:	cmp    al,0x4f
  427571:	loopne 0x42756a
  427573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427574:	push   ebx
  427575:	loope  0x4275be
  427577:	or     eax,0x6753a2ac
  42757c:	mov    edx,0x696030c4
  427581:	imul   esp,DWORD PTR [edx],0x46de0579
  427587:	mov    eax,0xfcdfd85e
  42758c:	pop    ebx
  42758d:	inc    ebp
  42758e:	sbb    eax,0x42d5e362
  427593:	mov    ?,WORD PTR [edi-0x1cc15e56]
  427599:	xor    DWORD PTR [edi-0x76],esi
  42759c:	xor    al,0x9
  42759e:	xor    eax,0x34e8bdae
  4275a3:	or     eax,0x180066db
  4275a8:	js     0x427578
  4275aa:	mov    dl,0xbe
  4275ac:	cmc    
  4275ad:	push   esi
  4275ae:	sahf   
  4275af:	push   0xffffffea
  4275b1:	aam    0xc4
  4275b3:	xchg   ebp,eax
  4275b4:	out    dx,al
  4275b5:	mov    edx,0xcf04dbc5
  4275ba:	inc    ecx
  4275bb:	bound  esi,QWORD PTR [eax-0x670c6f6]
  4275c1:	mov    BYTE PTR [ecx-0x67],dh
  4275c4:	inc    ecx
  4275c5:	popf   
  4275c6:	enter  0x7785,0x1f
  4275ca:	inc    esp
  4275cb:	adc    edx,DWORD PTR [ebx+0x57]
  4275ce:	pop    edi
  4275cf:	fnstenv [eax]
  4275d1:	int    0xf8
  4275d3:	mov    edx,0xcbf7da1a
  4275d8:	or     ah,BYTE PTR [esi-0x79386789]
  4275de:	aaa    
  4275df:	outs   dx,BYTE PTR ds:[esi]
  4275e0:	sbb    eax,0xd46d0b73
  4275e5:	inc    ebx
  4275e6:	mov    edi,DWORD PTR [edi+0x6c]
  4275e9:	les    eax,FWORD PTR [edx-0x77f2a7d3]
  4275ef:	scas   eax,DWORD PTR es:[edi]
  4275f0:	js     0x427664
  4275f2:	add    BYTE PTR [ebx+ebp*1],cl
  4275f5:	xor    eax,0x2fa7170f
  4275fa:	push   esp
  4275fb:	inc    edx
  4275fc:	fbld   TBYTE PTR [esi]
  4275fe:	pop    ss
  4275ff:	jne    0x427672
  427601:	repz and eax,0xd600db9
  427607:	mov    bl,0xe2
  427609:	dec    eax
  42760a:	mov    bl,0xa6
  42760c:	add    eax,0x5d37301a
  427611:	scas   eax,DWORD PTR es:[edi]
  427612:	aaa    
  427613:	cmp    eax,0xd4aafed6
  427618:	cwde   
  427619:	sahf   
  42761a:	mov    ecx,0x818dc8cd
  42761f:	loopne 0x427656
  427621:	or     al,0x68
  427623:	scas   al,BYTE PTR es:[edi]
  427624:	test   esi,esi
  427626:	adc    DWORD PTR [ecx],ecx
  427628:	push   ss
  427629:	sub    ah,al
  42762b:	pop    esp
  42762c:	loop   0x4275cf
  42762e:	dec    ebx
  42762f:	lock lock pusha 
  427632:	pushf  
  427633:	pusha  
  427634:	pushf  
  427635:	cld    
  427636:	cld    
  427637:	mov    cl,0xdf
  427639:	aaa    
  42763a:	or     esp,ebx
  42763c:	in     eax,dx
  42763d:	and    al,ah
  42763f:	xchg   ebp,eax
  427640:	in     eax,dx
  427641:	add    DWORD PTR [eax],eax
  427643:	call   0xde427649
  427648:	push   cs
  427649:	jnp    0x42768f
  42764b:	test   al,0x1a
  42764d:	imul   ebp,DWORD PTR [edi-0x44a06fcf],0xffffff83
  427654:	mov    ch,0xf1
  427656:	arpl   WORD PTR ds:0xf6b1d6dd,di
  42765c:	pop    edi
  42765d:	nop
  42765e:	gs ss add eax,0xeb0f7e1e
  427665:	mov    al,ds:0x46553ddc
  42766a:	cmp    ch,bh
  42766c:	test   eax,0xdda6f6df
  427671:	or     al,0xbe
  427673:	push   edx
  427674:	ds jl  0x42765c
  427677:	or     cl,BYTE PTR [esi]
  427679:	in     eax,dx
  42767a:	adc    ebp,DWORD PTR [ecx]
  42767c:	test   dh,cl
  42767e:	jmp    0x427664
  427680:	je     0x4276b1
  427682:	push   ebx
  427683:	sub    DWORD PTR es:[ebp+eiz*1-0x1b67687],eax
  42768b:	out    dx,eax
  42768c:	sub    BYTE PTR [edx],ah
  42768e:	cmp    BYTE PTR [eax+ebx*8-0x26ddc8ab],ch
  427695:	loop   0x427668
  427697:	sahf   
  427698:	(bad)  
  427699:	aam    0xdc
  42769b:	mov    bh,0x91
  42769d:	int3   
  42769e:	popa   
  42769f:	out    dx,eax
  4276a0:	je     0x4276b8
  4276a2:	jecxz  0x4276b2
  4276a4:	dec    esi
  4276a5:	push   eax
  4276a6:	gs mov ebx,0x81d049b1
  4276ac:	inc    ebx
  4276ad:	mov    es,WORD PTR [ebx-0x45]
  4276b0:	jns    0x427731
  4276b2:	(bad)  
  4276b3:	jp     0x4276b1
  4276b5:	ret    0xc9f3
  4276b8:	sub    DWORD PTR [eax+0x4c8ff403],0xa282b78e
  4276c2:	sub    al,BYTE PTR [edi-0x36]
  4276c5:	mov    ah,cl
  4276c7:	or     BYTE PTR [edi],ah
  4276c9:	das    
  4276ca:	pop    edi
  4276cb:	jg     0x4276ac
  4276cd:	nop
  4276ce:	lods   eax,DWORD PTR ds:[esi]
  4276cf:	cld    
  4276d0:	jmp    0xd9f343b0
  4276d5:	push   esp
  4276d6:	mov    ebp,DWORD PTR [eax+0x5c]
  4276d9:	out    0x3b,eax
  4276db:	fs (bad) 
  4276df:	lock mov bh,0x2a
  4276e2:	adc    ebx,DWORD PTR [edi+eiz*1+0x19]
  4276e6:	cmc    
  4276e7:	lea    ecx,[ebp-0x2a]
  4276ea:	jecxz  0x4276a5
  4276ec:	fisub  WORD PTR [ecx-0x783ac63b]
  4276f2:	mov    cl,0xa8
  4276f4:	scas   al,BYTE PTR es:[edi]
  4276f5:	push   ebp
  4276f6:	xchg   DWORD PTR [ecx+0x26],ebp
  4276f9:	xor    DWORD PTR [ebp-0x3f],0x2102b80b
  427700:	mov    esp,0xeb6dacbf
  427705:	and    DWORD PTR [edx+ecx*2-0x3b99aabf],esi
  42770c:	sbb    ah,dl
  42770e:	add    ebp,edi
  427710:	in     al,dx
  427711:	(bad)  
  427712:	loopne 0x4276a4
  427714:	ins    BYTE PTR es:[edi],dx
  427715:	xor    eax,0xe298fbbd
  42771a:	loop   0x427729
  42771c:	or     DWORD PTR [edi],0xffffff8d
  42771f:	lods   al,BYTE PTR ds:[esi]
  427720:	pop    eax
  427721:	pop    esp
  427722:	ins    DWORD PTR es:[edi],dx
  427723:	(bad)  
  427725:	jp     0x4276b3
  427727:	and    esp,DWORD PTR [ecx+0x39]
  42772a:	push   ebx
  42772b:	jae    0x427758
  42772d:	(bad)  
  42772e:	jle    0x4276c8
  427730:	icebp  
  427731:	into   
  427732:	int3   
  427733:	mov    al,ds:0x5412a34a
  427738:	xchg   ebp,eax
  427739:	sub    bl,ah
  42773b:	push   ss
  42773c:	test   al,0x41
  42773e:	pop    edi
  42773f:	mov    ah,0x70
  427741:	fiadd  WORD PTR [ebp+0x239ebcca]
  427747:	dec    esp
  427748:	pop    ds
  427749:	jge    0x4276ce
  42774b:	adc    al,0xb3
  42774d:	xchg   edx,eax
  42774e:	test   DWORD PTR [ebx],ecx
  427750:	jne    0x427747
  427752:	or     al,0x20
  427754:	xchg   ecx,eax
  427755:	add    ch,BYTE PTR [esi+0x7ded8002]
  42775b:	jno    0x4277cf
  42775d:	mov    eax,ds:0xf9893560
  427762:	push   ecx
  427763:	sub    BYTE PTR [edi-0x220d0045],cl
  427769:	sub    al,BYTE PTR [esp+ecx*2+0x5a]
  42776d:	jecxz  0x427701
  42776f:	or     ch,BYTE PTR [ebx-0x6c]
  427772:	div    DWORD PTR cs:[ecx+0x6241bee]
  427779:	xchg   BYTE PTR [edi+0x76],dh
  42777c:	adc    al,0x40
  42777e:	adc    esp,DWORD PTR [edx-0xc1fa0db]
  427784:	mov    WORD PTR [ebp-0x3ba28d28],gs
  42778a:	adc    BYTE PTR [eax-0x33],cl
  42778d:	push   0xffffff93
  42778f:	fsub   DWORD PTR [ebx]
  427791:	daa    
  427792:	cwde   
  427793:	inc    ebp
  427794:	pop    ss
  427795:	mov    ecx,0x3ebefd29
  42779a:	xchg   BYTE PTR [esi+esi*8-0x2de31755],dh
  4277a1:	dec    esp
  4277a2:	fsubrp st(6),st
  4277a4:	jns    0x427741
  4277a6:	add    DWORD PTR [edi+0x5f],eax
  4277a9:	iret   
  4277aa:	cmp    al,0x3e
  4277ac:	in     al,0x71
  4277ae:	xchg   edx,eax
  4277af:	mov    ecx,0x52ad1bd7
  4277b4:	ins    BYTE PTR es:[edi],dx
  4277b5:	loopne 0x4277b7
  4277b7:	cmp    eax,0xabc0ef21
  4277bc:	dec    ecx
  4277bd:	iret   
  4277be:	push   ecx
  4277bf:	sbb    BYTE PTR [esi+edx*4+0xd],bh
  4277c3:	rcr    BYTE PTR [edi],1
  4277c5:	ins    BYTE PTR es:[edi],dx
  4277c6:	cmp    BYTE PTR [ecx-0x67],0xff
  4277ca:	xchg   esi,eax
  4277cb:	push   edx
  4277cc:	xchg   esi,eax
  4277cd:	xor    al,0x67
  4277cf:	cmp    BYTE PTR [ebx],dl
  4277d1:	je     0x42780b
  4277d3:	or     ebx,DWORD PTR [edi]
  4277d5:	push   esp
  4277d6:	jo     0x4277b8
  4277d8:	jmp    0x4277ad
  4277da:	js     0x427769
  4277dc:	or     al,0xb2
  4277de:	and    edi,ebp
  4277e0:	push   esi
  4277e1:	hlt    
  4277e2:	mov    ebp,0x9a5b40b0
  4277e7:	add    eax,edi
  4277e9:	imul   eax,DWORD PTR [ebx],0x80cc9540
  4277ef:	push   ebx
  4277f0:	and    al,0x98
  4277f2:	dec    edi
  4277f3:	outs   dx,BYTE PTR ds:[esi]
  4277f4:	clc    
  4277f5:	sbb    DWORD PTR [ecx-0x4c0017b6],0x3da5d203
  4277ff:	jns    0x42784d
  427801:	jmp    0x427858
  427803:	push   cs
  427804:	cmp    ebp,ebp
  427806:	sub    DWORD PTR [ecx-0x5],0x24
  42780a:	aaa    
  42780b:	pop    edx
  42780c:	pop    eax
  42780d:	(bad)  
  42780e:	sbb    BYTE PTR [esi+0x1460e750],dl
  427814:	pushaw 
  427816:	test   DWORD PTR [ebx+0x4c],ebp
  427819:	xchg   esi,eax
  42781a:	imul   edx,DWORD PTR [edx+0x75],0xc0c66512
  427821:	or     DWORD PTR [eax],edx
  427823:	xor    eax,0x34f87169
  427828:	add    cl,bh
  42782a:	or     dl,ch
  42782c:	scas   al,BYTE PTR es:[edi]
  42782d:	xchg   DWORD PTR [ebx+ebx*1+0x7fc36545],ebx
  427834:	jecxz  0x4277f5
  427836:	fst    QWORD PTR [esi-0x5de643fd]
  42783c:	inc    BYTE PTR [ebx]
  42783e:	push   ds
  42783f:	jge    0x427830
  427841:	add    DWORD PTR [eax],eax
  427843:	call   0xc9427849
  427848:	pop    es
  427849:	adc    BYTE PTR [ecx+0x1a],bl
  42784c:	jns    0x427812
  42784e:	xor    BYTE PTR [edx-0x4c87a854],cl
  427854:	mov    cl,0xab
  427856:	pop    esi
  427857:	mov    esi,0xbd4ac38d
  42785c:	and    al,0x24
  42785e:	sub    eax,0x8f34dc14
  427863:	int    0x83
  427865:	ret    
  427866:	repnz imul DWORD PTR [esi]
  427869:	pushf  
  42786a:	add    eax,0x75f49374
  42786f:	stos   BYTE PTR es:[edi],al
  427870:	test   DWORD PTR [ecx-0x34],ebx
  427873:	data16 add BYTE PTR [edi],dl
  427876:	outs   dx,BYTE PTR ds:[esi]
  427877:	je     0x427841
  427879:	sub    eax,0xc8497f92
  42787e:	(bad)  
  42787f:	je     0x42788f
  427881:	xchg   esi,eax
  427882:	loope  0x427847
  427884:	mov    edi,0xdc470b05
  427889:	test   eax,0x118ed781
  42788e:	out    0xe3,eax
  427890:	repnz out dx,eax
  427892:	jmp    0xe8117b99
  427897:	gs pop edi
  427899:	xchg   ecx,eax
  42789b:	lock push esp
  42789d:	cmp    bl,BYTE PTR [edi+0x1]
  4278a0:	jecxz  0x4278fc
  4278a2:	fwait
  4278a3:	jbe    0x4278b3
  4278a5:	popa   
  4278a6:	add    BYTE PTR [esp+eiz*4-0x72],dh
  4278aa:	pop    es
  4278ab:	inc    esi
  4278ac:	(bad)  
  4278ad:	scas   al,BYTE PTR es:[edi]
  4278ae:	fsubr  st,st(7)
  4278b0:	mov    cl,BYTE PTR [esi]
  4278b2:	adc    DWORD PTR [edx-0xd126930],ebx
  4278b8:	sahf   
  4278b9:	inc    edx
  4278ba:	dec    esp
  4278bb:	outs   dx,BYTE PTR ds:[esi]
  4278bc:	pop    esi
  4278bd:	addr16 push esi
  4278bf:	nop
  4278c0:	dec    edx
  4278c1:	pop    ecx
  4278c2:	in     eax,dx
  4278c3:	shl    BYTE PTR [edi-0x50],1
  4278c6:	retf   0x240d
  4278c9:	dec    edi
  4278ca:	xor    esi,DWORD PTR [ebx-0x559db030]
  4278d0:	dec    ebp
  4278d1:	xchg   ecx,eax
  4278d2:	and    eax,0x8ffe67a4
  4278d7:	xchg   edx,eax
  4278d8:	jecxz  0x42794d
  4278da:	inc    ecx
  4278db:	icebp  
  4278dc:	pop    eax
  4278dd:	mov    dl,0x3e
  4278df:	loopne 0x4278e0
  4278e1:	push   cs
  4278e2:	fist   WORD PTR [ecx]
  4278e4:	int    0xd8
  4278e6:	mov    ds:0x2af74a31,eax
  4278eb:	mov    dh,0xbb
  4278ed:	inc    ebp
  4278ee:	sbb    DWORD PTR [eax+0x62],esp
  4278f1:	sbb    eax,0xb7d0d2a3
  4278f6:	xchg   edi,eax
  4278f7:	jge    0x427904
  4278f9:	xlat   BYTE PTR ds:[ebx]
  4278fa:	cmp    eax,0xde0b7d37
  4278ff:	add    BYTE PTR [esi-0x3b73c460],dl
  427905:	mov    bh,0x49
  427907:	mov    cl,0x6e
  427909:	dec    esi
  42790a:	nop
  42790b:	mov    al,ds:0x9ea8ea8e
  427910:	outs   dx,BYTE PTR ds:[esi]
  427911:	arpl   WORD PTR [edx-0x50],bp
  427914:	sbb    BYTE PTR [edi],0x6f
  427917:	enter  0xc690,0x4e
  42791b:	mov    eax,0xa43ea35
  427920:	dec    esp
  427921:	pop    ss
  427922:	gs xchg edx,eax
  427925:	and    al,0x8c
  427927:	clc    
  427928:	sti    
  427929:	iret   
  42792a:	inc    ebx
  42792b:	mov    ?,WORD PTR ss:[edx-0x63ad2efe]
  427932:	fcmovnbe st,st(2)
  427934:	outs   dx,DWORD PTR ds:[esi]
  427935:	inc    esp
  427936:	out    dx,al
  427937:	xor    edx,esp
  427939:	shr    BYTE PTR [ecx+eiz*2+0x2e],0x1c
  42793e:	sub    bh,dl
  427940:	pop    edi
  427941:	shl    BYTE PTR [ecx],0x18
  427944:	push   ebx
  427945:	out    dx,al
  427946:	cmp    BYTE PTR [edi-0x3ce170ed],ah
  42794c:	pop    es
  42794d:	pushf  
  42794e:	test   BYTE PTR [edx],al
  427950:	push   edi
  427951:	std    
  427952:	js     0x4278e4
  427954:	push   cs
  427955:	jnp    0x42792a
  427957:	int    0xeb
  427959:	xor    edi,DWORD PTR [esi+0x4f55304f]
  42795f:	(bad)  
  427960:	pop    ecx
  427961:	fcom   QWORD PTR [eax+eax*2]
  427964:	sub    al,0x64
  427966:	push   eax
  427967:	pop    edx
  427968:	lea    esi,[esi]
  42796a:	imul   ecx,DWORD PTR [eax],0xc
  42796d:	inc    eax
  42796e:	lods   al,BYTE PTR ds:[esi]
  42796f:	mov    al,0xe0
  427971:	daa    
  427972:	cs xchg edi,eax
  427974:	jnp    0x42790f
  427976:	mov    DWORD PTR [ecx],ebx
  427978:	or     dh,ah
  42797a:	add    eax,0x47d97368
  42797f:	pop    esp
  427980:	fnstcw WORD PTR [esi-0x3eee929]
  427986:	cmp    esi,DWORD PTR [edi+ecx*8-0x599ebb68]
  42798d:	dec    edx
  42798e:	inc    ebp
  42798f:	(bad)  
  427990:	mov    gs,WORD PTR [edi+ebp*8-0x2285259a]
  427997:	lods   eax,DWORD PTR ds:[esi]
  427998:	dec    eax
  427999:	mov    ?,WORD PTR [esi+ecx*4]
  42799c:	mov    esi,0x661207f7
  4279a1:	xchg   BYTE PTR [esi-0x49],dl
  4279a4:	mov    eax,ds:0xbc6804f8
  4279a9:	inc    esp
  4279aa:	pop    esp
  4279ab:	mov    cl,0xa6
  4279ad:	xchg   esp,eax
  4279ae:	mov    edi,?
  4279b0:	sti    
  4279b1:	xchg   esi,eax
  4279b2:	xor    eax,0xdc9d892a
  4279b7:	sti    
  4279b8:	in     eax,0x1f
  4279ba:	jmp    0x6fa336ad
  4279bf:	daa    
  4279c0:	mov    bl,0x4
  4279c2:	xchg   BYTE PTR [ecx-0x7c],al
  4279c5:	(bad)  
  4279c7:	sahf   
  4279c8:	xchg   dl,al
  4279ca:	(bad)  
  4279cb:	jg     0x427a09
  4279cd:	pop    ecx
  4279ce:	jnp    0x427a4e
  4279d0:	cld    
  4279d1:	les    esp,FWORD PTR es:[edx]
  4279d4:	in     al,0x3e
  4279d6:	clc    
  4279d7:	fidivr WORD PTR [esi+0x45d94a5c]
  4279dd:	loope  0x4279e1
  4279df:	imul   eax,DWORD PTR [esi+ebx*8+0x1b],0xffffff8a
  4279e4:	dec    esp
  4279e5:	mov    eax,0x29a45663
  4279ea:	dec    esp
  4279eb:	mov    al,0x2c
  4279ed:	mov    esi,0xdaac3b09
  4279f2:	(bad)  
  4279f3:	jle    0x4279e5
  4279f5:	inc    ebp
  4279f6:	and    BYTE PTR [esi],dh
  4279f8:	xchg   esi,eax
  4279f9:	daa    
  4279fa:	mov    DWORD PTR [eax+0x26664e64],0xaeb9ee5e
  427a04:	sub    BYTE PTR ds:0xc172a618,0x62
  427a0b:	xchg   ecx,eax
  427a0c:	std    
  427a0d:	lahf   
  427a0e:	xchg   esi,eax
  427a0f:	and    dl,BYTE PTR [edi+edi*2]
  427a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a13:	jge    0x427a62
  427a15:	popf   
  427a16:	dec    edx
  427a17:	popf   
  427a18:	xchg   esi,eax
  427a19:	and    ah,dl
  427a1b:	push   esp
  427a1c:	dec    ebp
  427a1d:	aaa    
  427a1e:	cld    
  427a1f:	or     DWORD PTR [edi-0x13],eax
  427a22:	mov    ch,0xb
  427a24:	ror    BYTE PTR [ebx-0x66491f67],0xae
  427a2b:	repz rol DWORD PTR [ebx+0x43470ce7],0x94
  427a33:	dec    ebx
  427a34:	xchg   esp,eax
  427a35:	(bad)  
  427a37:	dec    eax
  427a38:	into   
  427a39:	adc    bl,BYTE PTR [ebp-0x49a801ca]
  427a3f:	gs icebp 
  427a41:	add    DWORD PTR [eax],eax
  427a43:	call   0x6b427a49
  427a48:	cli    
  427a49:	fild   QWORD PTR [esi+0x6712f557]
  427a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a50:	or     BYTE PTR [esi],dh
  427a52:	and    BYTE PTR [edi-0x63],cl
  427a55:	push   ss
  427a56:	fisub  WORD PTR [eax-0x38]
  427a59:	int3   
  427a5a:	les    ebx,FWORD PTR [ebx-0x4c1f0b18]
  427a60:	jmp    0x427ad9
  427a62:	cmp    al,0xf3
  427a64:	not    DWORD PTR [ebp-0x14a75518]
  427a6a:	push   esi
  427a6b:	pop    ebp
  427a6c:	adc    DWORD PTR [edx+edi*8-0x20062eb9],esp
  427a73:	sbb    BYTE PTR [esi+eax*2+0x5e],cl
  427a77:	xor    cl,BYTE PTR ds:0xba07e732
  427a7d:	xchg   edx,eax
  427a7e:	popa   
  427a7f:	ins    BYTE PTR es:[edi],dx
  427a80:	mov    ecx,0xdfaa229f
  427a85:	cmp    al,0x83
  427a87:	enter  0x713c,0x36
  427a8b:	xchg   ecx,eax
  427a8c:	inc    ebp
  427a8d:	ds mov bh,0xda
  427a90:	out    0x2e,al
  427a92:	in     al,0xc5
  427a94:	fwait
  427a95:	sbb    al,0xcf
  427a97:	enter  0xa7fa,0xcb
  427a9b:	pop    edx
  427a9c:	pop    edi
  427a9d:	dec    ebx
  427a9e:	std    
  427a9f:	sub    eax,0x133721f0
  427aa4:	pushf  
  427aa5:	xchg   ebp,eax
  427aa6:	pushf  
  427aa7:	loope  0x427a2d
  427aa9:	ins    DWORD PTR es:[edi],dx
  427aaa:	adc    edx,0xfc9549ef
  427ab0:	adc    DWORD PTR [esi],0xffffffe6
  427ab3:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  427ab5:	in     al,0x2e
  427ab7:	outs   dx,BYTE PTR ds:[esi]
  427ab8:	xchg   ecx,eax
  427ab9:	outs   dx,BYTE PTR ds:[esi]
  427aba:	pop    ecx
  427abb:	and    dh,BYTE PTR [edi-0x518622b6]
  427ac1:	frstor [esi-0x5c]
  427ac4:	inc    ebp
  427ac5:	retf   0x16d
  427ac8:	lods   eax,DWORD PTR ds:[esi]
  427ac9:	sub    al,0xb5
  427acb:	mov    esp,0x4e66fd5f
  427ad0:	jae    0x427a68
  427ad2:	dec    ebx
  427ad3:	(bad)
  427ad6:	scas   al,BYTE PTR es:[edi]
  427ad7:	lock mov esp,0x6d4cf7b6
  427add:	pop    ds
  427ade:	cmc    
  427adf:	das    
  427ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ae1:	test   BYTE PTR [edi],bh
  427ae3:	jle    0x427a94
  427ae5:	ins    BYTE PTR es:[edi],dx
  427ae6:	pop    edx
  427ae7:	dec    edx
  427ae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ae9:	es push ecx
  427aeb:	not    DWORD PTR [eax+0x353b045c]
  427af1:	out    dx,al
  427af2:	dec    edx
  427af3:	test   eax,0xf5ebe31e
  427af8:	in     eax,0x23
  427afa:	and    BYTE PTR [edi+0x7a],dl
  427afd:	pushf  
  427afe:	add    DWORD PTR [ebp+0x6e],edx
  427b01:	addr16 std 
  427b03:	adc    DWORD PTR [eax-0x73],edi
  427b06:	sub    al,0x4c
  427b08:	inc    ebx
  427b09:	and    esi,DWORD PTR [esi+0x4008489a]
  427b0f:	dec    esi
  427b10:	arpl   WORD PTR [eax+0x34],cx
  427b13:	in     eax,0x9d
  427b15:	mul    DWORD PTR [ecx-0x24]
  427b18:	int    0xd4
  427b1a:	push   esp
  427b1b:	cmp    bh,BYTE PTR [edx-0x1ef15368]
  427b21:	jle    0x427b4d
  427b23:	mov    ebx,0x17f60ec6
  427b28:	iret   
  427b29:	pop    edi
  427b2a:	jno    0x427b79
  427b2c:	add    ebx,edi
  427b2e:	mov    bl,BYTE PTR [ecx-0x55]
  427b31:	cdq    
  427b32:	push   edx
  427b33:	stc    
  427b34:	jmp    FWORD PTR [ebx]
  427b36:	sti    
  427b37:	pop    ds
  427b38:	jae    0x427abe
  427b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b3b:	dec    esp
  427b3c:	sub    ah,BYTE PTR [edi]
  427b3e:	mov    al,ds:0x78d4c035
  427b43:	cmp    cl,bh
  427b45:	arpl   WORD PTR [eax+0xf9f2727],bx
  427b4b:	sub    ebp,DWORD PTR [esi-0x31]
  427b4e:	sbb    al,0xc2
  427b50:	mov    al,ds:0x377c3dbb
  427b55:	or     ebp,esp
  427b57:	add    BYTE PTR [ebx],0x26
  427b5a:	loopne 0x427b90
  427b5c:	pop    ecx
  427b5d:	dec    ecx
  427b5e:	arpl   WORD PTR [ecx-0x32],sp
  427b61:	mov    dh,0x75
  427b63:	lods   al,BYTE PTR ds:[esi]
  427b64:	bound  edx,QWORD PTR [ecx-0x1f7a37b7]
  427b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b6b:	inc    ebx
  427b6c:	fcom   QWORD PTR [ebp+ecx*1+0x55834ea]
  427b73:	in     eax,0x91
  427b75:	dec    edx
  427b76:	xor    ebp,ecx
  427b78:	mov    esi,0xe96f8172
  427b7d:	out    dx,eax
  427b7e:	mov    al,ds:0x516872dc
  427b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b84:	add    edi,DWORD PTR [ebp-0x408a8e99]
  427b8a:	les    ebx,FWORD PTR [ebx+esi*4+0x32c36228]
  427b91:	xchg   ecx,eax
  427b92:	fwait
  427b93:	adc    eax,0x8b4fecc
  427b98:	leave  
  427b99:	in     al,dx
  427b9a:	mov    al,0xab
  427b9c:	pop    eax
  427b9d:	or     al,0xe0
  427b9f:	dec    esi
  427ba0:	pop    eax
  427ba1:	mov    eax,0x58aa4380
  427ba6:	lods   al,BYTE PTR ds:[esi]
  427ba7:	xchg   ecx,eax
  427ba8:	or     DWORD PTR [edx-0x1a],ebx
  427bab:	sahf   
  427bac:	dec    edx
  427bad:	push   esi
  427bae:	div    DWORD PTR [edi+0x10]
  427bb1:	pop    ebx
  427bb2:	loop   0x427bc2
  427bb4:	dec    esp
  427bb5:	fistp  QWORD PTR [ebx]
  427bb7:	out    0x68,eax
  427bb9:	adc    eax,0x297917a3
  427bbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bbf:	lahf   
  427bc0:	mov    ch,0x9d
  427bc2:	repnz xchg edx,eax
  427bc4:	ss nop
  427bc6:	add    eax,0xaa3f5be
  427bcb:	pop    es
  427bcc:	mov    ch,0x9c
  427bce:	sar    DWORD PTR [edx-0x6ca86c92],0x38
  427bd5:	rcl    edx,0x6c
  427bd8:	pop    edx
  427bd9:	dec    esp
  427bda:	pop    edx
  427bdb:	aas    
  427bdc:	loopne 0x427bf7
  427bde:	adc    al,0xf1
  427be0:	lods   eax,DWORD PTR ds:[esi]
  427be1:	out    dx,al
  427be2:	mov    ds:0x9cb1f820,eax
  427be7:	xlat   BYTE PTR ds:[ebx]
  427be8:	pop    ebp
  427be9:	(bad)  
  427bea:	pop    esi
  427beb:	mov    dl,0x4f
  427bed:	pop    edx
  427bee:	loop   0x427b89
  427bf0:	jnp    0x427bae
  427bf2:	pop    ebp
  427bf3:	mov    DWORD PTR [esi-0x60c5df0e],ebx
  427bf9:	dec    ecx
  427bfa:	aad    0xfd
  427bfc:	wbinvd 
  427bfe:	mov    edx,DWORD PTR [ecx-0x24d8c6d8]
  427c04:	stc    
  427c05:	add    bl,BYTE PTR [esi-0x469b1cd3]
  427c0b:	stos   BYTE PTR es:[edi],al
  427c0c:	adc    ah,dl
  427c0e:	ss add al,0x36
  427c11:	jb     0x427c4b
  427c13:	xchg   edx,eax
  427c14:	pop    ebx
  427c15:	jb     0x427c67
  427c17:	and    DWORD PTR [ebx-0xa],ebp
  427c1a:	cld    
  427c1b:	sbb    BYTE PTR [ebx+ecx*2+0x13a4e294],dl
  427c22:	test   al,0x18
  427c24:	lds    esp,FWORD PTR [eax]
  427c26:	clc    
  427c27:	test   BYTE PTR [ebx-0x5d],0x10
  427c2b:	ret    
  427c2c:	std    
  427c2d:	push   ds
  427c2e:	sub    BYTE PTR [esp+eax*2],0x23
  427c32:	js     0x427c9f
  427c34:	jg     0x427cb5
  427c36:	push   esp
  427c37:	mov    WORD PTR [eax-0x43],fs
  427c3a:	outs   dx,BYTE PTR ds:[esi]
  427c3b:	sbb    eax,0x4d15b816
  427c40:	repz add DWORD PTR [eax],eax
  427c43:	call   0xcc427c49
  427c48:	cmp    DWORD PTR [edi-0xe06877c],0x23
  427c4f:	ficomp WORD PTR [edx-0x3e]
  427c52:	adc    DWORD PTR [ebp+0xb],ecx
  427c55:	sar    DWORD PTR [edi-0x7e],0x3d
  427c59:	enter  0x2de6,0xfb
  427c5d:	test   DWORD PTR [eax+0x6f593b49],ebx
  427c63:	(bad)  
  427c64:	iret   
  427c65:	out    0x59,al
  427c67:	int    0x52
  427c69:	jg     0x427c5d
  427c6b:	jnp    0x427c3f
  427c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c6e:	sbb    al,0x56
  427c70:	pop    DWORD PTR [ebx+0x1c]
  427c73:	inc    esp
  427c74:	mov    gs,WORD PTR [edx-0x6b407fcf]
  427c7a:	in     eax,dx
  427c7b:	jp     0x427c87
  427c7d:	test   al,0x26
  427c7f:	sar    esp,cl
  427c81:	inc    ecx
  427c82:	call   0x37bd5425
  427c87:	xor    ah,BYTE PTR [ebx+0x7ebdd1a1]
  427c8d:	add    eax,0x6a3d6a1e
  427c92:	or     eax,0xf4c9e554
  427c97:	push   ebx
  427c98:	retf   
  427c99:	daa    
  427c9a:	jle    0x427c87
  427c9c:	jno    0x427ca0
  427c9e:	push   0xaab83917
  427ca3:	pop    ebx
  427ca4:	into   
  427ca5:	neg    DWORD PTR [edi]
  427ca7:	icebp  
  427ca8:	xchg   ebx,eax
  427ca9:	fimul  WORD PTR [ecx]
  427cab:	nop
  427cac:	call   0xe48ff048
  427cb1:	sti    
  427cb2:	and    ah,ch
  427cb4:	xor    al,0x2a
  427cb6:	outs   dx,BYTE PTR ds:[esi]
  427cb7:	push   esp
  427cb8:	jo     0x427c9a
  427cba:	ins    DWORD PTR es:[edi],dx
  427cbb:	xchg   ecx,eax
  427cbc:	imul   esp,DWORD PTR [edi-0x7a],0x306a26c
  427cc3:	pop    edi
  427cc4:	inc    eax
  427cc5:	and    BYTE PTR [ebp+eax*4+0x2b],ah
  427cc9:	mov    bl,0x9b
  427ccb:	xchg   DWORD PTR [ecx],esp
  427ccd:	add    ah,BYTE PTR [esi*1-0x553ee2f0]
  427cd4:	xor    DWORD PTR [ebp-0x789020fe],ebp
  427cda:	add    al,0xc2
  427cdc:	xchg   DWORD PTR [ebp+0x44db846e],edi
  427ce2:	icebp  
  427ce3:	outs   dx,DWORD PTR ds:[esi]
  427ce4:	xor    al,0x25
  427ce6:	adc    DWORD PTR [eax-0x558e7d11],ebx
  427cec:	shr    eax,1
  427cee:	les    ecx,FWORD PTR [ecx+0x6]
  427cf1:	inc    eax
  427cf2:	imul   ecx,DWORD PTR [ebp+0x25ff3678],0xfffffff6
  427cf9:	(bad)  
  427cfa:	data16 add BYTE PTR fs:[edx],dh
  427cfe:	ins    BYTE PTR es:[edi],dx
  427cff:	and    al,0x61
  427d01:	popf   
  427d02:	cmp    al,0xe6
  427d04:	mov    edi,DWORD PTR [ebp-0x58722eb7]
  427d0a:	shl    bh,1
  427d0c:	ret    
  427d0d:	mov    ebp,0xf5f363fc
  427d12:	(bad)  
  427d13:	mov    ds:0x56beb386,eax
  427d18:	cli    
  427d19:	add    BYTE PTR [edx+ebx*2+0x25],ch
  427d1d:	lahf   
  427d1e:	or     DWORD PTR [ebp+0x3a],ebp
  427d21:	retf   
  427d22:	and    DWORD PTR [ecx],esp
  427d24:	outs   dx,BYTE PTR ds:[esi]
  427d25:	dec    edx
  427d26:	(bad)  
  427d27:	lods   al,BYTE PTR ds:[esi]
  427d28:	jle    0x427d0c
  427d2a:	jl     0x427d7c
  427d2c:	jmp    DWORD PTR [edi+0x2bdc38c7]
  427d32:	xor    ebx,0x2a013bb3
  427d38:	jne    0x427d27
  427d3a:	fcmovb st,st(7)
  427d3c:	mov    esp,0x4ae7d103
  427d41:	xacquire xchg DWORD PTR [eax],edi
  427d44:	imul   ebx,DWORD PTR [ebx+edx*8],0xdadf26
  427d4b:	cmp    DWORD PTR [edi+0x5188ca33],edi
  427d51:	outs   dx,DWORD PTR ds:[esi]
  427d52:	clc    
  427d53:	ja     0x427d80
  427d55:	inc    edi
  427d56:	add    dl,bh
  427d58:	cdq    
  427d59:	(bad)  
  427d5a:	push   esp
  427d5b:	inc    esi
  427d5c:	ins    DWORD PTR es:[edi],dx
  427d5d:	cmc    
  427d5e:	adc    esi,DWORD PTR [ebx-0x44]
  427d61:	mov    eax,0x70ff459e
  427d66:	mov    esi,0x71c5c149
  427d6b:	mov    WORD PTR [ebx+0x6a34bc94],ds
  427d71:	cdq    
  427d72:	mov    WORD PTR [edx+eax*8+0x7ebb9421],ds
  427d79:	lock mov ds:0xd3e29c72,al
  427d7f:	imul   ebp,DWORD PTR [eax-0x1d3ed3e9],0x5e007f77
  427d89:	inc    ebx
  427d8a:	sub    BYTE PTR [esi-0x2],ah
  427d8d:	push   ecx
  427d8e:	scas   al,BYTE PTR es:[edi]
  427d8f:	ds call 0xa1e0ec1e
  427d95:	cmp    cl,cl
  427d97:	xor    DWORD PTR [esi-0x5],edi
  427d9a:	out    0xa9,eax
  427d9c:	leave  
  427d9d:	mov    edx,0xd1e36d01
  427da2:	test   DWORD PTR [esi-0x5c],eax
  427da5:	aas    
  427da6:	sbb    BYTE PTR [eax],0x96
  427da9:	jns    0x427df3
  427dab:	mov    ds,WORD PTR [ebx+0x5d]
  427dae:	push   esi
  427daf:	dec    esi
  427db0:	fwait
  427db1:	sar    BYTE PTR [esi-0x6fb645e1],cl
  427db7:	in     al,0x93
  427db9:	push   es
  427dba:	fisubr WORD PTR [ecx+0x20da4ae3]
  427dc0:	xor    BYTE PTR [ebx],0xb9
  427dc3:	cs inc ebx
  427dc5:	sbb    eax,0x9fd3787d
  427dca:	adc    edx,edx
  427dcc:	xchg   ecx,eax
  427dcd:	test   al,0x8b
  427dcf:	add    eax,0xc8ff815f
  427dd4:	or     eax,DWORD PTR [edi-0x150e3f40]
  427dda:	dec    ecx
  427ddb:	ins    DWORD PTR es:[edi],dx
  427ddc:	ins    DWORD PTR es:[edi],dx
  427ddd:	and    dh,dl
  427ddf:	shl    DWORD PTR [esp+eax*4-0x59],cl
  427de3:	adc    dl,BYTE PTR [ecx]
  427de5:	add    eax,0xc0460686
  427dea:	clc    
  427deb:	mov    ebx,0x51b9450a
  427df0:	mov    ch,0x1d
  427df2:	dec    esp
  427df3:	stc    
  427df4:	add    bl,bl
  427df6:	mov    esi,0x44e63d0d
  427dfb:	jle    0x427dcb
  427dfd:	push   edx
  427dfe:	push   ds
  427dff:	jp     0x427df7
  427e01:	or     edi,0xffffffc8
  427e04:	pop    edi
  427e05:	xchg   edi,eax
  427e06:	mov    esp,edx
  427e08:	mov    ebp,0x3b89a1b4
  427e0d:	xchg   ebx,eax
  427e0e:	in     eax,0x90
  427e10:	cmp    al,0x23
  427e12:	jnp    0x427dd0
  427e14:	mov    ds:0x8587b079,eax
  427e19:	mov    ah,0x6c
  427e1b:	dec    eax
  427e1c:	mov    edi,0x8e790ded
  427e21:	call   0x202720b3
  427e26:	adc    al,0x52
  427e28:	mov    esi,0xb947b1cf
  427e2d:	xor    ebp,DWORD PTR [edi+0x2b]
  427e30:	loopne 0x427ead
  427e32:	cmp    bl,bh
  427e34:	mov    ebx,0x2946f36b
  427e39:	in     al,dx
  427e3a:	cmp    bl,bh
  427e3c:	push   ebx
  427e3d:	pop    edi
  427e3e:	icebp  
  427e3f:	xor    eax,0xe80001f5
  427e44:	add    DWORD PTR [eax],eax
  427e46:	add    BYTE PTR [esi+0x125ac1fc],al
  427e4c:	push   ebp
  427e4d:	(bad)  
  427e4e:	xchg   esp,eax
  427e4f:	scas   eax,DWORD PTR es:[edi]
  427e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e51:	sub    DWORD PTR [eax-0x4d82a63],0x26
  427e58:	repnz xchg ebp,eax
  427e5a:	push   0xffffff9e
  427e5c:	mov    esp,0x8b312087
  427e61:	dec    esp
  427e62:	push   ecx
  427e63:	pop    esi
  427e64:	repz jmp 0x427eab
  427e67:	imul   esp,DWORD PTR [ebx+0x73f19fe1],0x3633834b
  427e71:	inc    ecx
  427e72:	mov    BYTE PTR [ecx+0x3b7f60d0],dl
  427e78:	fs mov bh,0xe4
  427e7b:	mov    bl,0xc
  427e7d:	test   DWORD PTR [ebx],0x20b89e93
  427e83:	adc    ebx,DWORD PTR [eax+ebp*8+0x6d]
  427e87:	jmp    0xecf2bd78
  427e8c:	push   cs
  427e8d:	sbb    BYTE PTR [ecx],dh
  427e8f:	xor    al,0xe1
  427e91:	add    al,0xe5
  427e93:	sbb    BYTE PTR [ecx+ebp*8+0x1812543f],0x53
  427e9b:	fcom   QWORD PTR [ecx+0x30]
  427e9e:	xchg   BYTE PTR [eax+0xd1cad86],dl
  427ea4:	das    
  427ea5:	ja     0x427e2d
  427ea7:	daa    
  427ea8:	rcr    edx,1
  427eaa:	not    BYTE PTR [ebp+0x7e]
  427ead:	sbb    eax,0xb78794df
  427eb2:	iret   
  427eb3:	mov    edx,0x6819a8ac
  427eb8:	sahf   
  427eb9:	test   BYTE PTR [ecx],al
  427ebb:	in     al,dx
  427ebc:	add    al,0x8d
  427ebe:	sbb    DWORD PTR [eax],edx
  427ec0:	popf   
  427ec1:	jno    0x427edb
  427ec3:	cs push edx
  427ec5:	sbb    ebp,0x643ffe88
  427ecb:	mov    dh,0x4e
  427ecd:	(bad)  
  427ecf:	adc    BYTE PTR [edi],0x69
  427ed2:	les    edi,FWORD PTR ds:0xd013d92b
  427ed8:	test   eax,0x39c64552
  427edd:	iret   
  427ede:	cmp    al,0x51
  427ee0:	data16 loopne 0x427e9f
  427ee3:	ret    
  427ee4:	repnz dec ebp
  427ee6:	sti    
  427ee7:	pop    ss
  427ee8:	rcr    eax,1
  427eea:	inc    ebp
  427eeb:	je     0x427f20
  427eed:	popf   
  427eee:	or     eax,0xb0cefcaa
  427ef3:	(bad)  
  427ef4:	xchg   ebx,eax
  427ef5:	test   al,0x58
  427ef7:	rol    ah,cl
  427ef9:	pop    edi
  427efa:	iret   
  427efb:	call   0x607:0xcec6ef96
  427f02:	in     al,dx
  427f03:	ss sbb eax,0xa1b04c8
  427f09:	(bad)  
  427f0a:	jmp    0xde1d78b8
  427f0f:	lods   eax,DWORD PTR ds:[esi]
  427f10:	add    BYTE PTR [ecx-0x31],dl
  427f13:	pop    ebx
  427f14:	popf   
  427f15:	fsub   st(0),st
  427f17:	or     al,0x30
  427f19:	push   ebp
  427f1a:	mov    bh,0x39
  427f1c:	loope  0x427f73
  427f1e:	fs or  eax,0xccd67a4f
  427f24:	xchg   edx,eax
  427f25:	fidivr WORD PTR [eax+0x7d]
  427f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f29:	mov    DWORD PTR [edi+0x37d9e791],ebx
  427f2f:	sub    eax,0x66a1683d
  427f34:	or     esp,DWORD PTR [ebp+eiz*8-0x31f0366e]
  427f3b:	jnp    0x427f79
  427f3d:	sub    al,0x51
  427f3f:	dec    ebp
  427f40:	in     al,dx
  427f41:	(bad)  
  427f43:	and    ch,BYTE PTR [edi-0x23]
  427f46:	out    0x80,al
  427f48:	aas    
  427f49:	push   ds
  427f4a:	imul   esi,DWORD PTR [edi],0xcf674baf
  427f50:	test   BYTE PTR [eax+0x23],dl
  427f53:	fld    st(6)
  427f55:	out    0x73,al
  427f57:	popa   
  427f58:	call   0xcf1a:0xf2ca56cb
  427f5f:	mov    ebx,0x79bca69d
  427f64:	mov    eax,ds:0x96c197d5
  427f69:	cmp    DWORD PTR [eax-0x69],ebx
  427f6c:	dec    edx
  427f6d:	add    eax,0xe63a9421
  427f72:	dec    ecx
  427f73:	adc    al,0x47
  427f75:	sub    cl,BYTE PTR [eax]
  427f77:	std    
  427f78:	outs   dx,BYTE PTR ds:[esi]
  427f79:	xchg   ecx,eax
  427f7a:	repnz popf 
  427f7c:	xor    bh,ah
  427f7e:	fs adc al,0xf7
  427f81:	sbb    ah,BYTE PTR [eax]
  427f83:	add    dh,ch
  427f85:	pop    ebx
  427f86:	ret    0xb8d3
  427f89:	mov    esi,ebp
  427f8b:	in     al,0xf5
  427f8d:	adc    eax,0x55d58629
  427f92:	jg     0x427f53
  427f94:	das    
  427f95:	jmp    DWORD PTR [esi]
  427f97:	jnp    0x428000
  427f99:	(bad)  
  427f9a:	clc    
  427f9b:	mov    ch,0xd9
  427f9d:	xor    DWORD PTR [eax-0xe],ecx
  427fa0:	add    dh,BYTE PTR [edi]
  427fa2:	loopne 0x428000
  427fa4:	jns    0x427f95
  427fa6:	and    BYTE PTR [ecx],cl
  427fa8:	and    dh,dh
  427faa:	push   ebp
  427fab:	add    ebx,edx
  427fad:	lea    ecx,[edi+0xf]
  427fb0:	mov    al,al
  427fb2:	repnz (bad) 
  427fb4:	test   al,0x6e
  427fb6:	std    
  427fb7:	mov    eax,ds:0x84139101
  427fbc:	jge    0x427fe1
  427fbe:	ja     0x427fa2
  427fc0:	mov    eax,ds:0x6cc57628
  427fc5:	or     BYTE PTR ds:0xbd4d14ee,bl
  427fcb:	in     eax,0x7d
  427fcd:	inc    ebx
  427fce:	mov    ch,0x7f
  427fd0:	sbb    edx,DWORD PTR ss:[ebx-0x4625760]
  427fd7:	inc    ecx
  427fd8:	jno    0x427f6a
  427fda:	cmp    dl,BYTE PTR [ecx]
  427fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fdd:	adc    eax,ebp
  427fdf:	xchg   edx,eax
  427fe0:	xchg   ecx,eax
  427fe1:	into   
  427fe2:	cmp    edi,DWORD PTR [esi+0x5bcdb694]
  427fe8:	ret    
  427fe9:	push   es
  427fea:	add    al,0x8
  427fec:	jb     0x427f87
  427fee:	(bad)  
  427fef:	ss cld 
  427ff1:	fimul  WORD PTR [esi]
  427ff3:	mov    dl,0xda
  427ff5:	sbb    ah,BYTE PTR [eax-0x3c]
  427ff8:	adc    bl,BYTE PTR [eax*2+0x4b9a68e7]
  427fff:	ins    BYTE PTR es:[edi],dx
  428000:	sbb    edx,0xffffffbb
  428003:	ja     0x428076
  428005:	jge    0x427fe2
  428007:	jge    0x427f9d
  428009:	fs ret 
  42800b:	lock iret 
  42800d:	adc    DWORD PTR ds:0x2c84621b,ebx
  428013:	cmp    BYTE PTR [edx*1+0x443eddb1],0xc9
  42801b:	das    
  42801c:	daa    
  42801d:	xchg   DWORD PTR [eax+ebp*1],edi
  428020:	mov    ch,0x6f
  428022:	call   0x89dc5a38
  428027:	sbb    esp,DWORD PTR [edx-0x2a]
  42802a:	sbb    esp,0x5e
  42802d:	popf   
  42802e:	je     0x427fe4
  428030:	mov    eax,ebp
  428032:	xlat   BYTE PTR ds:[ebx]
  428033:	(bad)  
  428034:	fbstp  TBYTE PTR [esi-0x5bc5bc15]
  42803a:	cmp    BYTE PTR fs:[esi-0x8e2c6f7],al
  428041:	add    DWORD PTR [eax],eax
  428043:	fld    QWORD PTR [ecx]
  428045:	add    BYTE PTR [eax],al
  428047:	push   eax
  428048:	ror    al,0x37
  42804b:	inc    ebx
  42804c:	outs   dx,BYTE PTR ds:[esi]
  42804d:	xor    cl,BYTE PTR [ebp-0x2bd70cf7]
  428053:	jle    0x428013
  428055:	repnz and al,0x4f
  428058:	loop   0x42805f
  42805a:	xchg   esi,eax
  42805b:	mov    cl,0xf8
  42805d:	xchg   DWORD PTR [ebx-0x73b2075e],esp
  428063:	clc    
  428064:	(bad)  
  428065:	sar    BYTE PTR [esi-0x3a],1
  428068:	xlat   BYTE PTR ds:[ebx]
  428069:	iret   
  42806a:	aam    0xe4
  42806c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42806d:	cmp    eax,DWORD PTR [ebp-0x4f]
  428070:	or     BYTE PTR [ebx+0x1f],dl
  428073:	inc    eax
  428074:	ja     0x4280b7
  428076:	cmp    DWORD PTR [edi-0x86a5b1d],esi
  42807c:	mov    esp,0xc7cbd0e4
  428081:	lea    ebp,[ebp+0x21fb117]
  428087:	mov    ebx,0x67edc389
  42808c:	in     eax,0x11
  42808e:	hlt    
  42808f:	pop    edi
  428090:	pop    esi
  428091:	add    al,0xa1
  428093:	mov    bl,0x74
  428095:	sbb    ebp,edi
  428097:	dec    ecx
  428098:	sbb    esp,DWORD PTR [edi]
  42809a:	std    
  42809b:	leave  
  42809c:	jp     0x4280a5
  42809e:	aas    
  42809f:	sbb    cl,BYTE PTR [esi]
  4280a1:	mov    bh,al
  4280a3:	shr    BYTE PTR [ebp-0x16d775ef],0x66
  4280aa:	stos   DWORD PTR es:[edi],eax
  4280ab:	popa   
  4280ac:	mov    ah,0x98
  4280ae:	xchg   ebp,eax
  4280af:	jg     0x428047
  4280b1:	fbld   TBYTE PTR ds:[ebx-0x2f327915]
  4280b8:	popa   
  4280b9:	jae    0x428107
  4280bb:	adc    cl,BYTE PTR [esi]
  4280bd:	dec    esp
  4280be:	mov    edx,0xfb5f6456
  4280c3:	mov    eax,ds:0x4bbb7c58
  4280c8:	push   edi
  4280c9:	js     0x42805d
  4280cb:	out    dx,eax
  4280cc:	dec    esp
  4280cd:	in     al,dx
  4280ce:	cdq    
  4280cf:	icebp  
  4280d0:	push   es
  4280d1:	mov    esp,0x6beaf5d6
  4280d6:	fdiv   st(0),st
  4280d8:	test   BYTE PTR [edi],al
  4280da:	rcr    ah,cl
  4280dc:	(bad)  
  4280dd:	idiv   BYTE PTR [edi]
  4280df:	push   ebx
  4280e0:	xor    dl,ah
  4280e2:	in     al,dx
  4280e3:	and    al,BYTE PTR [ecx+0x4725563d]
  4280e9:	mov    edi,0xc88dd36a
  4280ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280ef:	xchg   edx,eax
  4280f0:	test   al,0xb
  4280f2:	xchg   edi,eax
  4280f3:	jl     0x42810d
  4280f5:	test   DWORD PTR [ebx-0x1a0f15c1],ecx
  4280fb:	jg     0x428177
  4280fd:	aaa    
  4280fe:	nop
  4280ff:	jecxz  0x428112
  428101:	cmp    BYTE PTR [eax+0x33c988a6],ah
  428107:	fsub   DWORD PTR [eax]
  428109:	xchg   ebp,eax
  42810a:	sbb    eax,DWORD PTR [edi]
  42810c:	scas   eax,DWORD PTR es:[edi]
  42810d:	into   
  42810e:	pushf  
  42810f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428110:	or     ch,BYTE PTR [esi+0x78]
  428113:	aad    0xfe
  428115:	rcr    bh,0x81
  428118:	out    dx,eax
  428119:	xor    ebp,edi
  42811b:	xchg   BYTE PTR [edi],dl
  42811d:	test   eax,0x301d20cb
  428122:	mov    ebp,0x69c84f5a
  428127:	push   eax
  428128:	push   edx
  428129:	xchg   DWORD PTR [ecx],esp
  42812b:	add    al,0xb4
  42812d:	inc    esp
  42812e:	stos   BYTE PTR es:[edi],al
  42812f:	rol    BYTE PTR [eax+0x2a],0xf1
  428133:	sahf   
  428134:	dec    edi
  428135:	ror    BYTE PTR [esi+0x600e22e9],0x2f
  42813c:	or     BYTE PTR [edx+0x9bab835],bl
  428142:	xor    al,0xc0
  428144:	xchg   edx,edx
  428146:	fcomp  DWORD PTR [esi+edi*2-0x2af82086]
  42814d:	push   ebp
  42814e:	rcl    ah,cl
  428150:	mov    ds:0x8a3b7066,eax
  428155:	or     dh,BYTE PTR [eax+ecx*2]
  428158:	mov    ah,0x7e
  42815a:	(bad)
  42815d:	mov    dh,0x21
  42815f:	pusha  
  428160:	push   edx
  428161:	and    eax,0x8f6da0a6
  428166:	daa    
  428167:	pop    edi
  428168:	mov    BYTE PTR [eax],ch
  42816a:	lods   al,BYTE PTR ds:[esi]
  42816b:	sub    DWORD PTR ds:0x29576f18,esi
  428171:	mov    al,ds:0x32aeac0c
  428177:	or     eax,0x83e56cc9
  42817c:	jg     0x4281de
  42817e:	sbb    ecx,DWORD PTR [edx]
  428180:	xchg   esi,eax
  428181:	jb     0x428104
  428183:	iret   
  428184:	cmp    ebx,esp
  428186:	jle    0x428128
  428188:	daa    
  428189:	or     edx,esp
  42818b:	retf   
  42818c:	push   edx
  42818d:	fwait
  42818e:	dec    edx
  42818f:	pop    ecx
  428190:	pusha  
  428191:	iret   
  428192:	fld    QWORD PTR [ebx+eax*2]
  428195:	add    BYTE PTR [esi],0x27
  428198:	ret    0xfd0d
  42819b:	mov    cl,ah
  42819d:	inc    edx
  42819e:	nop
  42819f:	loopne 0x428134
  4281a1:	mov    edi,0x3a66d699
  4281a6:	in     eax,0x16
  4281a8:	mov    eax,ds:0xfe2461ac
  4281ad:	div    bh
  4281af:	mov    al,ds:0xd7cd1d84
  4281b4:	std    
  4281b5:	pop    ebp
  4281b6:	(bad)  
  4281b7:	lock nop
  4281b9:	int    0xb5
  4281bb:	pop    ecx
  4281bc:	repnz mov ds:0x877c0c3d,eax
  4281c2:	cdq    
  4281c3:	xchg   ebp,eax
  4281c4:	inc    ecx
  4281c5:	xchg   BYTE PTR [ecx+esi*2+0x37b43d63],ch
  4281cc:	(bad)  
  4281ce:	push   es
  4281cf:	xchg   esp,eax
  4281d0:	fidivr WORD PTR [ebx-0x20]
  4281d3:	sub    BYTE PTR [ebp-0x4465155d],0xee
  4281da:	scas   eax,DWORD PTR es:[edi]
  4281db:	inc    edi
  4281dc:	les    edx,FWORD PTR [ebp+0x19808db1]
  4281e2:	mov    ds:0xab3219c,al
  4281e7:	gs je  0x428256
  4281ea:	mov    ch,0xb3
  4281ec:	adc    DWORD PTR [eax],esi
  4281ee:	or     ah,bl
  4281f0:	leave  
  4281f1:	arpl   WORD PTR [ebp+0x1a],dx
  4281f4:	inc    esp
  4281f5:	sbb    DWORD PTR [ecx-0x7f3bba8d],ecx
  4281fb:	enter  0x9498,0xf7
  4281ff:	test   eax,0x730a2800
  428204:	push   esi
  428205:	inc    eax
  428206:	jbe    0x428241
  428208:	cmp    BYTE PTR [edx+0x3d],ch
  42820b:	mov    eax,0xdc09b026
  428210:	mov    ebx,cr3
  428213:	div    DWORD PTR ds:0x15609636
  428219:	dec    edi
  42821a:	and    BYTE PTR [ecx+0x70],0x56
  42821e:	iret   
  42821f:	jno    0x428234
  428221:	fdivr  QWORD PTR [ebp+0x1a]
	...
