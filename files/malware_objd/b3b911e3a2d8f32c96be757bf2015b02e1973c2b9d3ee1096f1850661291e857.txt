
b3b911e3a2d8f32c96be757bf2015b02e1973c2b9d3ee1096f1850661291e857.exe:     file format pei-i386


Disassembly of section .text:

10001000 <.text>:
10001000:	jmp    DWORD PTR ds:0x10064614
10001006:	int3   
10001007:	int3   
10001008:	int3   
10001009:	int3   
1000100a:	int3   
1000100b:	int3   
1000100c:	int3   
1000100d:	int3   
1000100e:	int3   
1000100f:	int3   
10001010:	push   esi
10001011:	mov    esi,DWORD PTR [esp+0x8]
10001015:	test   esi,esi
10001017:	je     0x10001048
10001019:	mov    eax,DWORD PTR [esp+0xc]
1000101d:	test   eax,eax
1000101f:	je     0x10001048
10001021:	mov    ecx,DWORD PTR [esp+0x10]
10001025:	mov    edx,DWORD PTR [esp+0x14]
10001029:	push   0x0
1000102b:	push   0x0
1000102d:	push   ecx
1000102e:	push   esi
1000102f:	push   0xffffffff
10001031:	push   eax
10001032:	push   0x0
10001034:	push   edx
10001035:	mov    BYTE PTR [esi],0x0
10001038:	call   DWORD PTR ds:0x1002c02c
1000103e:	neg    eax
10001040:	sbb    eax,eax
10001042:	and    eax,esi
10001044:	pop    esi
10001045:	ret    0x10
10001048:	xor    eax,eax
1000104a:	pop    esi
1000104b:	ret    0x10
1000104e:	int3   
1000104f:	int3   
10001050:	mov    eax,DWORD PTR [esp+0x4]
10001054:	push   0x10058a24
10001059:	lea    ecx,[esp+0x8]
1000105d:	push   ecx
1000105e:	mov    DWORD PTR [esp+0xc],eax
10001062:	call   0x100161ce
10001067:	int3   
10001068:	int3   
10001069:	int3   
1000106a:	int3   
1000106b:	int3   
1000106c:	int3   
1000106d:	int3   
1000106e:	int3   
1000106f:	int3   
10001070:	mov    eax,DWORD PTR [esp+0x4]
10001074:	cmp    eax,0x50
10001077:	ja     0x1000109b
10001079:	movzx  ecx,BYTE PTR [eax+0x100010b8]
10001080:	jmp    DWORD PTR [ecx*4+0x100010a8]
10001087:	push   0x8007000e
1000108c:	call   0x10001050
10001091:	push   0x80070057
10001096:	call   0x10001050
1000109b:	push   0x80004005
100010a0:	call   0x10001050
100010a5:	ret    
100010a6:	mov    edi,edi
100010a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100010a9:	adc    BYTE PTR [eax],al
100010ab:	adc    BYTE PTR [edi-0x6eeffff0],al
100010b1:	adc    BYTE PTR [eax],al
100010b3:	adc    BYTE PTR [ebx+0x100010],bl
100010b9:	add    eax,DWORD PTR [ebx]
100010bb:	add    eax,DWORD PTR [ebx]
100010bd:	add    eax,DWORD PTR [ebx]
100010bf:	add    eax,DWORD PTR [ebx]
100010c1:	add    eax,DWORD PTR [ebx]
100010c3:	add    eax,DWORD PTR [ecx]
100010c5:	add    eax,DWORD PTR [ebx]
100010c7:	add    eax,DWORD PTR [ebx]
100010c9:	add    eax,DWORD PTR [ebx]
100010cb:	add    eax,DWORD PTR [ebx]
100010cd:	add    eax,DWORD PTR [edx]
100010cf:	add    eax,DWORD PTR [ebx]
100010d1:	add    eax,DWORD PTR [ebx]
100010d3:	add    eax,DWORD PTR [ebx]
100010d5:	add    eax,DWORD PTR [ebx]
100010d7:	add    eax,DWORD PTR [ebx]
100010d9:	add    eax,DWORD PTR [edx]
100010db:	add    eax,DWORD PTR [ebx]
100010dd:	add    eax,DWORD PTR [ebx]
100010df:	add    eax,DWORD PTR [ebx]
100010e1:	add    eax,DWORD PTR [ebx]
100010e3:	add    eax,DWORD PTR [ebx]
100010e5:	add    eax,DWORD PTR [ebx]
100010e7:	add    eax,DWORD PTR [ebx]
100010e9:	add    eax,DWORD PTR [ebx]
100010eb:	add    eax,DWORD PTR [ebx]
100010ed:	add    eax,DWORD PTR [ebx]
100010ef:	add    eax,DWORD PTR [ebx]
100010f1:	add    eax,DWORD PTR [ebx]
100010f3:	add    eax,DWORD PTR [ebx]
100010f5:	add    eax,DWORD PTR [ebx]
100010f7:	add    eax,DWORD PTR [ebx]
100010f9:	add    eax,DWORD PTR [ebx]
100010fb:	add    eax,DWORD PTR [ebx]
100010fd:	add    eax,DWORD PTR [ebx]
100010ff:	add    eax,DWORD PTR [ebx]
10001101:	add    eax,DWORD PTR [ebx]
10001103:	add    eax,DWORD PTR [ebx]
10001105:	add    eax,DWORD PTR [ebx]
10001107:	add    eax,DWORD PTR [eax]
10001109:	int3   
1000110a:	int3   
1000110b:	int3   
1000110c:	int3   
1000110d:	int3   
1000110e:	int3   
1000110f:	int3   
10001110:	mov    eax,DWORD PTR [esp+0x10]
10001114:	mov    ecx,DWORD PTR [esp+0xc]
10001118:	mov    edx,DWORD PTR [esp+0x8]
1000111c:	push   eax
1000111d:	mov    eax,DWORD PTR [esp+0x8]
10001121:	push   ecx
10001122:	push   edx
10001123:	push   eax
10001124:	call   0x1001647e
10001129:	push   eax
1000112a:	call   0x10001070
1000112f:	add    esp,0x14
10001132:	ret    
10001133:	int3   
10001134:	int3   
10001135:	int3   
10001136:	int3   
10001137:	int3   
10001138:	int3   
10001139:	int3   
1000113a:	int3   
1000113b:	int3   
1000113c:	int3   
1000113d:	int3   
1000113e:	int3   
1000113f:	int3   
10001140:	push   ebx
10001141:	mov    ebx,DWORD PTR [esp+0x8]
10001145:	push   edi
10001146:	mov    edi,DWORD PTR [esp+0x10]
1000114a:	push   edi
1000114b:	push   ebx
1000114c:	call   DWORD PTR ds:0x1002c090
10001152:	test   eax,eax
10001154:	jne    0x10001159
10001156:	pop    edi
10001157:	pop    ebx
10001158:	ret    
10001159:	push   esi
1000115a:	push   eax
1000115b:	call   DWORD PTR ds:0x1002c08c
10001161:	mov    esi,eax
10001163:	test   esi,esi
10001165:	je     0x10001194
10001167:	push   edi
10001168:	push   ebx
10001169:	call   DWORD PTR ds:0x1002c088
1000116f:	mov    ecx,DWORD PTR [esp+0x18]
10001173:	add    eax,esi
10001175:	and    ecx,0xf
10001178:	jbe    0x10001190
1000117a:	lea    ebx,[ebx+0x0]
10001180:	cmp    esi,eax
10001182:	jae    0x10001194
10001184:	sub    ecx,0x1
10001187:	movzx  edx,WORD PTR [esi]
1000118a:	lea    esi,[esi+edx*2+0x2]
1000118e:	jne    0x10001180
10001190:	cmp    esi,eax
10001192:	jb     0x1000119a
10001194:	pop    esi
10001195:	pop    edi
10001196:	xor    eax,eax
10001198:	pop    ebx
10001199:	ret    
1000119a:	mov    ax,WORD PTR [esi]
1000119d:	neg    ax
100011a0:	sbb    eax,eax
100011a2:	and    eax,esi
100011a4:	pop    esi
100011a5:	pop    edi
100011a6:	pop    ebx
100011a7:	ret    
100011a8:	int3   
100011a9:	int3   
100011aa:	int3   
100011ab:	int3   
100011ac:	int3   
100011ad:	int3   
100011ae:	int3   
100011af:	int3   
100011b0:	push   ebx
100011b1:	push   ebp
100011b2:	push   esi
100011b3:	push   edi
100011b4:	xor    edi,edi
100011b6:	push   edi
100011b7:	mov    ecx,0x1006613c
100011bc:	call   0x10015834
100011c1:	mov    esi,eax
100011c3:	test   esi,esi
100011c5:	lea    ebp,[edi+0x1]
100011c8:	je     0x10001217
100011ca:	mov    ebx,DWORD PTR [esp+0x14]
100011ce:	mov    edi,edi
100011d0:	test   edi,edi
100011d2:	jne    0x10001217
100011d4:	mov    eax,DWORD PTR [esp+0x18]
100011d8:	mov    ecx,ebx
100011da:	shr    ecx,0x4
100011dd:	add    ecx,0x1
100011e0:	push   eax
100011e1:	movzx  edx,cx
100011e4:	push   edx
100011e5:	push   0x6
100011e7:	push   esi
100011e8:	call   DWORD PTR ds:0x1002c094
100011ee:	test   eax,eax
100011f0:	je     0x10001203
100011f2:	push   ebx
100011f3:	push   eax
100011f4:	push   esi
100011f5:	call   0x10001140
100011fa:	mov    edi,eax
100011fc:	add    esp,0xc
100011ff:	test   edi,edi
10001201:	jne    0x1000121e
10001203:	push   ebp
10001204:	mov    ecx,0x1006613c
10001209:	call   0x10015834
1000120e:	mov    esi,eax
10001210:	add    ebp,0x1
10001213:	test   esi,esi
10001215:	jne    0x100011d0
10001217:	pop    edi
10001218:	pop    esi
10001219:	pop    ebp
1000121a:	xor    eax,eax
1000121c:	pop    ebx
1000121d:	ret    
1000121e:	pop    edi
1000121f:	mov    eax,esi
10001221:	pop    esi
10001222:	pop    ebp
10001223:	pop    ebx
10001224:	ret    
10001225:	int3   
10001226:	int3   
10001227:	int3   
10001228:	int3   
10001229:	int3   
1000122a:	int3   
1000122b:	int3   
1000122c:	int3   
1000122d:	int3   
1000122e:	int3   
1000122f:	int3   
10001230:	mov    eax,DWORD PTR [esp+0x8]
10001234:	ret    
10001235:	int3   
10001236:	int3   
10001237:	int3   
10001238:	int3   
10001239:	int3   
1000123a:	int3   
1000123b:	int3   
1000123c:	int3   
1000123d:	int3   
1000123e:	int3   
1000123f:	int3   
10001240:	ret    
10001241:	int3   
10001242:	int3   
10001243:	int3   
10001244:	int3   
10001245:	int3   
10001246:	int3   
10001247:	int3   
10001248:	int3   
10001249:	int3   
1000124a:	int3   
1000124b:	int3   
1000124c:	int3   
1000124d:	int3   
1000124e:	int3   
1000124f:	int3   
10001250:	push   esi
10001251:	lea    eax,[esp+0x8]
10001255:	push   eax
10001256:	mov    esi,ecx
10001258:	call   0x1001626e
1000125d:	mov    DWORD PTR [esi],0x1002c4ec
10001263:	mov    eax,esi
10001265:	pop    esi
10001266:	ret    0x4
10001269:	int3   
1000126a:	int3   
1000126b:	int3   
1000126c:	int3   
1000126d:	int3   
1000126e:	int3   
1000126f:	int3   
10001270:	mov    DWORD PTR [ecx],0x1002c4ec
10001276:	jmp    0x1001632c
1000127b:	int3   
1000127c:	int3   
1000127d:	int3   
1000127e:	int3   
1000127f:	int3   
10001280:	push   esi
10001281:	mov    esi,ecx
10001283:	mov    DWORD PTR [esi],0x1002c4ec
10001289:	call   0x1001632c
1000128e:	test   BYTE PTR [esp+0x8],0x1
10001293:	je     0x1000129e
10001295:	push   esi
10001296:	call   0x10015ad6
1000129b:	add    esp,0x4
1000129e:	mov    eax,esi
100012a0:	pop    esi
100012a1:	ret    0x4
100012a4:	int3   
100012a5:	int3   
100012a6:	int3   
100012a7:	int3   
100012a8:	int3   
100012a9:	int3   
100012aa:	int3   
100012ab:	int3   
100012ac:	int3   
100012ad:	int3   
100012ae:	int3   
100012af:	int3   
100012b0:	mov    eax,DWORD PTR [esp+0xc]
100012b4:	cmp    eax,0x4
100012b7:	mov    ecx,DWORD PTR [esp+0x8]
100012bb:	mov    edx,DWORD PTR [esp+0x4]
100012bf:	push   esi
100012c0:	push   edi
100012c1:	jb     0x100012d7
100012c3:	mov    esi,DWORD PTR [edx]
100012c5:	cmp    esi,DWORD PTR [ecx]
100012c7:	jne    0x100012db
100012c9:	sub    eax,0x4
100012cc:	add    ecx,0x4
100012cf:	add    edx,0x4
100012d2:	cmp    eax,0x4
100012d5:	jae    0x100012c3
100012d7:	test   eax,eax
100012d9:	je     0x10001339
100012db:	movzx  esi,BYTE PTR [edx]
100012de:	movzx  edi,BYTE PTR [ecx]
100012e1:	sub    esi,edi
100012e3:	jne    0x1000132a
100012e5:	sub    eax,0x1
100012e8:	add    ecx,0x1
100012eb:	add    edx,0x1
100012ee:	test   eax,eax
100012f0:	je     0x10001339
100012f2:	movzx  esi,BYTE PTR [edx]
100012f5:	movzx  edi,BYTE PTR [ecx]
100012f8:	sub    esi,edi
100012fa:	jne    0x1000132a
100012fc:	sub    eax,0x1
100012ff:	add    ecx,0x1
10001302:	add    edx,0x1
10001305:	test   eax,eax
10001307:	je     0x10001339
10001309:	movzx  esi,BYTE PTR [edx]
1000130c:	movzx  edi,BYTE PTR [ecx]
1000130f:	sub    esi,edi
10001311:	jne    0x1000132a
10001313:	sub    eax,0x1
10001316:	add    ecx,0x1
10001319:	add    edx,0x1
1000131c:	test   eax,eax
1000131e:	je     0x10001339
10001320:	movzx  esi,BYTE PTR [edx]
10001323:	movzx  eax,BYTE PTR [ecx]
10001326:	sub    esi,eax
10001328:	je     0x10001339
1000132a:	test   esi,esi
1000132c:	mov    eax,0x1
10001331:	jg     0x1000133b
10001333:	pop    edi
10001334:	or     eax,0xffffffff
10001337:	pop    esi
10001338:	ret    
10001339:	xor    eax,eax
1000133b:	pop    edi
1000133c:	pop    esi
1000133d:	ret    
1000133e:	int3   
1000133f:	int3   
10001340:	mov    eax,ecx
10001342:	mov    DWORD PTR [eax],0x0
10001348:	ret    
10001349:	int3   
1000134a:	int3   
1000134b:	int3   
1000134c:	int3   
1000134d:	int3   
1000134e:	int3   
1000134f:	int3   
10001350:	push   0xffffffff
10001352:	push   0x1002a8f8
10001357:	mov    eax,fs:0x0
1000135d:	push   eax
1000135e:	push   ecx
1000135f:	push   esi
10001360:	mov    eax,ds:0x10064694
10001365:	xor    eax,esp
10001367:	push   eax
10001368:	lea    eax,[esp+0xc]
1000136c:	mov    fs:0x0,eax
10001372:	mov    esi,ecx
10001374:	mov    DWORD PTR [esp+0x8],esi
10001378:	call   0x1001625d
1000137d:	xor    eax,eax
1000137f:	mov    DWORD PTR [esp+0x14],eax
10001383:	lea    ecx,[esi+0xc]
10001386:	mov    DWORD PTR [esi],0x1002c4e0
1000138c:	push   0xffffffff
1000138e:	mov    DWORD PTR [ecx+0x14],eax
10001391:	mov    DWORD PTR [ecx+0x18],0xf
10001398:	push   eax
10001399:	mov    BYTE PTR [ecx+0x4],al
1000139c:	mov    eax,DWORD PTR [esp+0x24]
100013a0:	push   eax
100013a1:	call   0x10003820
100013a6:	mov    eax,esi
100013a8:	mov    ecx,DWORD PTR [esp+0xc]
100013ac:	mov    DWORD PTR fs:0x0,ecx
100013b3:	pop    ecx
100013b4:	pop    esi
100013b5:	add    esp,0x10
100013b8:	ret    0x4
100013bb:	int3   
100013bc:	int3   
100013bd:	int3   
100013be:	int3   
100013bf:	int3   
100013c0:	mov    eax,DWORD PTR [esp+0x4]
100013c4:	push   esi
100013c5:	push   eax
100013c6:	mov    esi,ecx
100013c8:	call   0x10001350
100013cd:	mov    DWORD PTR [esi],0x1002c4d4
100013d3:	mov    eax,esi
100013d5:	pop    esi
100013d6:	ret    0x4
100013d9:	int3   
100013da:	int3   
100013db:	int3   
100013dc:	int3   
100013dd:	int3   
100013de:	int3   
100013df:	int3   
100013e0:	mov    eax,DWORD PTR [esp+0x4]
100013e4:	push   esi
100013e5:	push   eax
100013e6:	mov    esi,ecx
100013e8:	call   0x10001350
100013ed:	mov    DWORD PTR [esi],0x1002c4f8
100013f3:	mov    eax,esi
100013f5:	pop    esi
100013f6:	ret    0x4
100013f9:	int3   
100013fa:	int3   
100013fb:	int3   
100013fc:	int3   
100013fd:	int3   
100013fe:	int3   
100013ff:	int3   
10001400:	push   esi
10001401:	mov    esi,ecx
10001403:	mov    DWORD PTR [esi],0x1002c4e0
10001409:	cmp    DWORD PTR [esi+0x24],0x10
1000140d:	jb     0x1000141b
1000140f:	mov    eax,DWORD PTR [esi+0x10]
10001412:	push   eax
10001413:	call   0x10015ad6
10001418:	add    esp,0x4
1000141b:	xor    eax,eax
1000141d:	mov    DWORD PTR [esi+0x24],0xf
10001424:	mov    DWORD PTR [esi+0x20],eax
10001427:	mov    BYTE PTR [esi+0x10],al
1000142a:	mov    ecx,esi
1000142c:	pop    esi
1000142d:	jmp    0x1001632c
10001432:	int3   
10001433:	int3   
10001434:	int3   
10001435:	int3   
10001436:	int3   
10001437:	int3   
10001438:	int3   
10001439:	int3   
1000143a:	int3   
1000143b:	int3   
1000143c:	int3   
1000143d:	int3   
1000143e:	int3   
1000143f:	int3   
10001440:	push   esi
10001441:	mov    esi,ecx
10001443:	mov    DWORD PTR [esi],0x1002c4e0
10001449:	cmp    DWORD PTR [esi+0x24],0x10
1000144d:	jb     0x1000145b
1000144f:	mov    eax,DWORD PTR [esi+0x10]
10001452:	push   eax
10001453:	call   0x10015ad6
10001458:	add    esp,0x4
1000145b:	xor    eax,eax
1000145d:	mov    DWORD PTR [esi+0x24],0xf
10001464:	mov    DWORD PTR [esi+0x20],eax
10001467:	mov    ecx,esi
10001469:	mov    BYTE PTR [esi+0x10],al
1000146c:	call   0x1001632c
10001471:	test   BYTE PTR [esp+0x8],0x1
10001476:	je     0x10001481
10001478:	push   esi
10001479:	call   0x10015ad6
1000147e:	add    esp,0x4
10001481:	mov    eax,esi
10001483:	pop    esi
10001484:	ret    0x4
10001487:	int3   
10001488:	int3   
10001489:	int3   
1000148a:	int3   
1000148b:	int3   
1000148c:	int3   
1000148d:	int3   
1000148e:	int3   
1000148f:	int3   
10001490:	push   0xffffffff
10001492:	push   0x1002a8c8
10001497:	mov    eax,fs:0x0
1000149d:	push   eax
1000149e:	push   esi
1000149f:	mov    eax,ds:0x10064694
100014a4:	xor    eax,esp
100014a6:	push   eax
100014a7:	lea    eax,[esp+0x8]
100014ab:	mov    fs:0x0,eax
100014b1:	mov    esi,DWORD PTR [esp+0x18]
100014b5:	mov    ecx,esi
100014b7:	call   0x1001625d
100014bc:	xor    eax,eax
100014be:	mov    DWORD PTR [esp+0x10],eax
100014c2:	lea    ecx,[esi+0xc]
100014c5:	mov    DWORD PTR [esi],0x1004ffac
100014cb:	push   0xffffffff
100014cd:	mov    DWORD PTR [ecx+0x14],eax
100014d0:	mov    DWORD PTR [ecx+0x18],0xf
100014d7:	push   eax
100014d8:	mov    BYTE PTR [ecx+0x4],al
100014db:	mov    eax,DWORD PTR [esp+0x24]
100014df:	push   eax
100014e0:	call   0x10003820
100014e5:	mov    eax,esi
100014e7:	mov    ecx,DWORD PTR [esp+0x8]
100014eb:	mov    DWORD PTR fs:0x0,ecx
100014f2:	pop    ecx
100014f3:	pop    esi
100014f4:	add    esp,0xc
100014f7:	ret    0x8
100014fa:	int3   
100014fb:	int3   
100014fc:	int3   
100014fd:	int3   
100014fe:	int3   
100014ff:	int3   
10001500:	cmp    DWORD PTR [ecx+0x24],0x10
10001504:	jb     0x1000150a
10001506:	mov    eax,DWORD PTR [ecx+0x10]
10001509:	ret    
1000150a:	lea    eax,[ecx+0x10]
1000150d:	ret    
1000150e:	int3   
1000150f:	int3   
10001510:	push   0xffffffff
10001512:	push   0x1002a898
10001517:	mov    eax,fs:0x0
1000151d:	push   eax
1000151e:	push   ecx
1000151f:	push   esi
10001520:	push   edi
10001521:	mov    eax,ds:0x10064694
10001526:	xor    eax,esp
10001528:	push   eax
10001529:	lea    eax,[esp+0x10]
1000152d:	mov    fs:0x0,eax
10001533:	mov    esi,ecx
10001535:	mov    DWORD PTR [esp+0xc],esi
10001539:	mov    edi,DWORD PTR [esp+0x20]
1000153d:	push   edi
1000153e:	call   0x100162d4
10001543:	xor    edx,edx
10001545:	mov    DWORD PTR [esp+0x18],edx
10001549:	push   0xffffffff
1000154b:	lea    ecx,[esi+0xc]
1000154e:	mov    DWORD PTR [esi],0x1004ffac
10001554:	lea    eax,[edi+0xc]
10001557:	push   edx
10001558:	mov    DWORD PTR [ecx+0x18],0xf
1000155f:	mov    DWORD PTR [ecx+0x14],edx
10001562:	push   eax
10001563:	mov    BYTE PTR [ecx+0x4],dl
10001566:	call   0x10003820
1000156b:	mov    eax,esi
1000156d:	mov    ecx,DWORD PTR [esp+0x10]
10001571:	mov    DWORD PTR fs:0x0,ecx
10001578:	pop    ecx
10001579:	pop    edi
1000157a:	pop    esi
1000157b:	add    esp,0x10
1000157e:	ret    0x4
10001581:	int3   
10001582:	int3   
10001583:	int3   
10001584:	int3   
10001585:	int3   
10001586:	int3   
10001587:	int3   
10001588:	int3   
10001589:	int3   
1000158a:	int3   
1000158b:	int3   
1000158c:	int3   
1000158d:	int3   
1000158e:	int3   
1000158f:	int3   
10001590:	push   ecx
10001591:	push   edi
10001592:	mov    edi,DWORD PTR [ecx]
10001594:	test   edi,edi
10001596:	je     0x100015d9
10001598:	push   0x0
1000159a:	lea    ecx,[esp+0x8]
1000159e:	call   0x10015a52
100015a3:	mov    eax,DWORD PTR [edi+0x4]
100015a6:	test   eax,eax
100015a8:	jbe    0x100015b5
100015aa:	cmp    eax,0xffffffff
100015ad:	jae    0x100015b5
100015af:	add    eax,0xffffffff
100015b2:	mov    DWORD PTR [edi+0x4],eax
100015b5:	push   esi
100015b6:	mov    esi,DWORD PTR [edi+0x4]
100015b9:	neg    esi
100015bb:	sbb    esi,esi
100015bd:	not    esi
100015bf:	lea    ecx,[esp+0x8]
100015c3:	and    esi,edi
100015c5:	call   0x10015a73
100015ca:	test   esi,esi
100015cc:	je     0x100015d8
100015ce:	mov    eax,DWORD PTR [esi]
100015d0:	mov    edx,DWORD PTR [eax]
100015d2:	push   0x1
100015d4:	mov    ecx,esi
100015d6:	call   edx
100015d8:	pop    esi
100015d9:	pop    edi
100015da:	pop    ecx
100015db:	ret    
100015dc:	int3   
100015dd:	int3   
100015de:	int3   
100015df:	int3   
100015e0:	mov    eax,DWORD PTR [esp+0x4]
100015e4:	push   esi
100015e5:	push   eax
100015e6:	mov    esi,ecx
100015e8:	call   0x10001600
100015ed:	mov    DWORD PTR [esi],0x1002c4f8
100015f3:	mov    eax,esi
100015f5:	pop    esi
100015f6:	ret    0x4
100015f9:	int3   
100015fa:	int3   
100015fb:	int3   
100015fc:	int3   
100015fd:	int3   
100015fe:	int3   
100015ff:	int3   
10001600:	push   0xffffffff
10001602:	push   0x1002a868
10001607:	mov    eax,fs:0x0
1000160d:	push   eax
1000160e:	push   ecx
1000160f:	push   esi
10001610:	push   edi
10001611:	mov    eax,ds:0x10064694
10001616:	xor    eax,esp
10001618:	push   eax
10001619:	lea    eax,[esp+0x10]
1000161d:	mov    fs:0x0,eax
10001623:	mov    esi,ecx
10001625:	mov    DWORD PTR [esp+0xc],esi
10001629:	mov    edi,DWORD PTR [esp+0x20]
1000162d:	push   edi
1000162e:	call   0x100162d4
10001633:	xor    edx,edx
10001635:	mov    DWORD PTR [esp+0x18],edx
10001639:	push   0xffffffff
1000163b:	lea    ecx,[esi+0xc]
1000163e:	mov    DWORD PTR [esi],0x1002c4e0
10001644:	lea    eax,[edi+0xc]
10001647:	push   edx
10001648:	mov    DWORD PTR [ecx+0x18],0xf
1000164f:	mov    DWORD PTR [ecx+0x14],edx
10001652:	push   eax
10001653:	mov    BYTE PTR [ecx+0x4],dl
10001656:	call   0x10003820
1000165b:	mov    eax,esi
1000165d:	mov    ecx,DWORD PTR [esp+0x10]
10001661:	mov    DWORD PTR fs:0x0,ecx
10001668:	pop    ecx
10001669:	pop    edi
1000166a:	pop    esi
1000166b:	add    esp,0x10
1000166e:	ret    0x4
10001671:	int3   
10001672:	int3   
10001673:	int3   
10001674:	int3   
10001675:	int3   
10001676:	int3   
10001677:	int3   
10001678:	int3   
10001679:	int3   
1000167a:	int3   
1000167b:	int3   
1000167c:	int3   
1000167d:	int3   
1000167e:	int3   
1000167f:	int3   
10001680:	mov    eax,esi
10001682:	mov    edx,0xe3
10001687:	push   edi
10001688:	mov    ecx,DWORD PTR [eax+0x4]
1000168b:	mov    edi,DWORD PTR [eax]
1000168d:	xor    edi,ecx
1000168f:	and    edi,0x7ffffffe
10001695:	xor    edi,DWORD PTR [eax]
10001697:	and    cl,0x1
1000169a:	shr    edi,1
1000169c:	sub    edx,0x1
1000169f:	neg    cl
100016a1:	sbb    ecx,ecx
100016a3:	and    ecx,0x9908b0df
100016a9:	xor    edi,ecx
100016ab:	xor    edi,DWORD PTR [eax+0x634]
100016b1:	add    eax,0x4
100016b4:	test   edx,edx
100016b6:	mov    DWORD PTR [eax-0x4],edi
100016b9:	jne    0x10001688
100016bb:	mov    edx,0x18c
100016c0:	mov    ecx,DWORD PTR [eax+0x4]
100016c3:	mov    edi,DWORD PTR [eax]
100016c5:	xor    edi,ecx
100016c7:	and    edi,0x7ffffffe
100016cd:	xor    edi,DWORD PTR [eax]
100016cf:	and    cl,0x1
100016d2:	shr    edi,1
100016d4:	neg    cl
100016d6:	sbb    ecx,ecx
100016d8:	and    ecx,0x9908b0df
100016de:	xor    edi,ecx
100016e0:	xor    edi,DWORD PTR [eax-0x38c]
100016e6:	add    eax,0x4
100016e9:	sub    edx,0x1
100016ec:	mov    DWORD PTR [eax-0x4],edi
100016ef:	jne    0x100016c0
100016f1:	mov    ecx,DWORD PTR [esi]
100016f3:	mov    edx,DWORD PTR [eax]
100016f5:	xor    edx,ecx
100016f7:	and    edx,0x7ffffffe
100016fd:	xor    edx,DWORD PTR [eax]
100016ff:	and    cl,0x1
10001702:	shr    edx,1
10001704:	neg    cl
10001706:	pop    edi
10001707:	sbb    ecx,ecx
10001709:	and    ecx,0x9908b0df
1000170f:	xor    edx,ecx
10001711:	xor    edx,DWORD PTR [eax-0x38c]
10001717:	mov    DWORD PTR [eax],edx
10001719:	mov    DWORD PTR [esi+0x9c4],0x270
10001723:	mov    DWORD PTR [esi+0x9c0],esi
10001729:	ret    
1000172a:	int3   
1000172b:	int3   
1000172c:	int3   
1000172d:	int3   
1000172e:	int3   
1000172f:	int3   
10001730:	push   esi
10001731:	mov    esi,eax
10001733:	push   edi
10001734:	mov    ecx,0x1
10001739:	mov    DWORD PTR [esi],edx
1000173b:	jmp    0x10001740
1000173d:	lea    ecx,[ecx+0x0]
10001740:	mov    edx,DWORD PTR [eax]
10001742:	mov    edi,edx
10001744:	shr    edi,0x1e
10001747:	xor    edi,edx
10001749:	imul   edi,edi,0x6c078965
1000174f:	add    edi,ecx
10001751:	mov    DWORD PTR [eax+0x4],edi
10001754:	add    ecx,0x1
10001757:	add    eax,0x4
1000175a:	cmp    ecx,0x270
10001760:	jl     0x10001740
10001762:	call   0x10001680
10001767:	pop    edi
10001768:	pop    esi
10001769:	ret    
1000176a:	int3   
1000176b:	int3   
1000176c:	int3   
1000176d:	int3   
1000176e:	int3   
1000176f:	int3   
10001770:	push   esi
10001771:	push   edi
10001772:	mov    edi,ebx
10001774:	shr    edi,1
10001776:	or     edi,ebx
10001778:	mov    esi,eax
1000177a:	mov    eax,edi
1000177c:	shr    eax,0x2
1000177f:	or     edi,eax
10001781:	mov    ecx,edi
10001783:	shr    ecx,0x4
10001786:	or     edi,ecx
10001788:	mov    edx,edi
1000178a:	shr    edx,0x8
1000178d:	or     edi,edx
1000178f:	mov    eax,edi
10001791:	shr    eax,0x10
10001794:	or     edi,eax
10001796:	cmp    DWORD PTR [esi+0x9c4],0x0
1000179d:	jne    0x100017a4
1000179f:	call   0x10001680
100017a4:	mov    eax,DWORD PTR [esi+0x9c0]
100017aa:	add    DWORD PTR [esi+0x9c4],0xffffffff
100017b1:	mov    ecx,DWORD PTR [eax]
100017b3:	add    eax,0x4
100017b6:	mov    edx,ecx
100017b8:	shr    edx,0xb
100017bb:	xor    ecx,edx
100017bd:	mov    DWORD PTR [esi+0x9c0],eax
100017c3:	mov    eax,ecx
100017c5:	and    eax,0xff3a58ad
100017ca:	shl    eax,0x7
100017cd:	xor    ecx,eax
100017cf:	mov    edx,ecx
100017d1:	and    edx,0xffffdf8c
100017d7:	shl    edx,0xf
100017da:	xor    ecx,edx
100017dc:	mov    eax,ecx
100017de:	shr    eax,0x12
100017e1:	xor    eax,ecx
100017e3:	and    eax,edi
100017e5:	cmp    eax,ebx
100017e7:	ja     0x10001796
100017e9:	pop    edi
100017ea:	pop    esi
100017eb:	ret    
100017ec:	int3   
100017ed:	int3   
100017ee:	int3   
100017ef:	int3   
100017f0:	cmp    DWORD PTR ds:0x10066e18,0x0
100017f7:	jne    0x10001878
100017f9:	push   esi
100017fa:	push   0x11c
100017ff:	push   0x0
10001801:	push   0x10066e20
10001806:	mov    DWORD PTR ds:0x10066e1c,0x0
10001810:	call   0x10016530
10001815:	mov    esi,DWORD PTR ds:0x1002c160
1000181b:	add    esp,0xc
1000181e:	push   0x10066e20
10001823:	mov    DWORD PTR ds:0x10066e20,0x114
1000182d:	call   esi
1000182f:	test   eax,eax
10001831:	je     0x10001874
10001833:	cmp    DWORD PTR ds:0x10066e30,0x2
1000183a:	mov    DWORD PTR ds:0x10066e18,0x1
10001844:	jne    0x10001874
10001846:	cmp    DWORD PTR ds:0x10066e24,0x5
1000184d:	jb     0x10001874
1000184f:	push   0x11c
10001854:	push   0x0
10001856:	push   0x10066e20
1000185b:	call   0x10016530
10001860:	add    esp,0xc
10001863:	push   0x10066e20
10001868:	mov    DWORD PTR ds:0x10066e20,0x11c
10001872:	call   esi
10001874:	mov    eax,edi
10001876:	pop    esi
10001877:	ret    
10001878:	mov    eax,edi
1000187a:	ret    
1000187b:	int3   
1000187c:	int3   
1000187d:	int3   
1000187e:	int3   
1000187f:	int3   
10001880:	push   ebp
10001881:	mov    ebp,esp
10001883:	and    esp,0xfffffff8
10001886:	push   0xffffffff
10001888:	push   0x1002a6d0
1000188d:	mov    eax,fs:0x0
10001893:	push   eax
10001894:	sub    esp,0x50
10001897:	push   ebx
10001898:	push   esi
10001899:	push   edi
1000189a:	mov    eax,ds:0x10064694
1000189f:	xor    eax,esp
100018a1:	push   eax
100018a2:	lea    eax,[esp+0x60]
100018a6:	mov    fs:0x0,eax
100018ac:	xor    ebx,ebx
100018ae:	push   0x4000
100018b3:	mov    DWORD PTR [esp+0x18],ebx
100018b7:	call   0x100159f5
100018bc:	mov    edi,eax
100018be:	push   0x38
100018c0:	mov    DWORD PTR [esp+0x70],ebx
100018c4:	push   0x10055574
100018c9:	lea    eax,[esp+0x30]
100018cd:	push   0x2f
100018cf:	push   eax
100018d0:	mov    DWORD PTR [esp+0x58],ebx
100018d4:	mov    DWORD PTR [esp+0x5c],ebx
100018d8:	mov    DWORD PTR [esp+0x60],ebx
100018dc:	mov    DWORD PTR [esp+0x3c],ebx
100018e0:	mov    DWORD PTR [esp+0x38],ebx
100018e4:	call   0x10026110
100018e9:	add    esp,0x14
100018ec:	test   eax,eax
100018ee:	je     0x1000191d
100018f0:	mov    esi,DWORD PTR [ebp+0x8]
100018f3:	push   ebx
100018f4:	mov    DWORD PTR [esp+0x1c],ebx
100018f8:	mov    DWORD PTR [esi],ebx
100018fa:	call   0x10015ad6
100018ff:	push   edi
10001900:	call   0x10015ad6
10001905:	add    esp,0x8
10001908:	mov    eax,esi
1000190a:	mov    ecx,DWORD PTR [esp+0x60]
1000190e:	mov    DWORD PTR fs:0x0,ecx
10001915:	pop    ecx
10001916:	pop    edi
10001917:	pop    esi
10001918:	pop    ebx
10001919:	mov    esp,ebp
1000191b:	pop    ebp
1000191c:	ret    
1000191d:	mov    ecx,DWORD PTR [ebp+0x10]
10001920:	mov    edx,DWORD PTR [ebp+0xc]
10001923:	mov    DWORD PTR [esp+0x28],ecx
10001927:	mov    DWORD PTR [esp+0x24],edx
1000192b:	jmp    0x10001930
1000192d:	lea    ecx,[ecx+0x0]
10001930:	lea    ecx,[esp+0x24]
10001934:	lea    eax,[ebx+edi*1]
10001937:	push   0x4
10001939:	push   ecx
1000193a:	mov    DWORD PTR [esp+0x3c],0x4000
10001942:	mov    DWORD PTR [esp+0x38],eax
10001946:	call   0x100262f0
1000194b:	mov    esi,eax
1000194d:	add    esp,0x8
10001950:	cmp    esi,0xfffffffc
10001953:	mov    DWORD PTR [esp+0x18],esi
10001957:	jl     0x1000196b
10001959:	cmp    esi,0xfffffffd
1000195c:	jle    0x10001a02
10001962:	cmp    esi,0x2
10001965:	je     0x10001a02
1000196b:	mov    ecx,DWORD PTR [esp+0x34]
1000196f:	mov    eax,0x4000
10001974:	sub    eax,ecx
10001976:	add    ebx,eax
10001978:	test   ecx,ecx
1000197a:	mov    DWORD PTR [esp+0x14],ebx
1000197e:	jne    0x100019e9
10001980:	mov    esi,edi
10001982:	mov    DWORD PTR [esp+0x1c],ecx
10001986:	mov    DWORD PTR [esp+0x20],esi
1000198a:	add    ebx,0x4000
10001990:	push   ebx
10001991:	mov    BYTE PTR [esp+0x6c],0x1
10001996:	call   0x100159f5
1000199b:	mov    edi,eax
1000199d:	add    esp,0x4
100019a0:	test   edi,edi
100019a2:	mov    DWORD PTR [esp+0x10],0x0
100019aa:	je     0x100019b6
100019ac:	push   0x0
100019ae:	call   0x10015ad6
100019b3:	add    esp,0x4
100019b6:	mov    edx,DWORD PTR [esp+0x10]
100019ba:	push   edx
100019bb:	call   0x10015ad6
100019c0:	mov    ebx,DWORD PTR [esp+0x18]
100019c4:	push   ebx
100019c5:	push   esi
100019c6:	push   edi
100019c7:	call   0x100167d0
100019cc:	push   esi
100019cd:	mov    BYTE PTR [esp+0x7c],0x0
100019d2:	call   0x10015ad6
100019d7:	add    esp,0x14
100019da:	cmp    DWORD PTR [esp+0x34],0x0
100019df:	je     0x10001930
100019e5:	mov    esi,DWORD PTR [esp+0x18]
100019e9:	lea    ecx,[esp+0x24]
100019ed:	push   ecx
100019ee:	call   0x100278e0
100019f3:	add    esp,0x4
100019f6:	cmp    esi,0x1
100019f9:	jne    0x10001a42
100019fb:	mov    edx,DWORD PTR [ebp+0x14]
100019fe:	mov    DWORD PTR [edx],ebx
10001a00:	jmp    0x10001a66
10001a02:	lea    eax,[esp+0x24]
10001a06:	push   eax
10001a07:	call   0x100278e0
10001a0c:	mov    esi,DWORD PTR [ebp+0x8]
10001a0f:	push   0x0
10001a11:	mov    DWORD PTR [esp+0x28],0x0
10001a19:	mov    DWORD PTR [esi],0x0
10001a1f:	call   0x10015ad6
10001a24:	push   edi
10001a25:	call   0x10015ad6
10001a2a:	add    esp,0xc
10001a2d:	mov    eax,esi
10001a2f:	mov    ecx,DWORD PTR [esp+0x60]
10001a33:	mov    DWORD PTR fs:0x0,ecx
10001a3a:	pop    ecx
10001a3b:	pop    edi
10001a3c:	pop    esi
10001a3d:	pop    ebx
10001a3e:	mov    esp,ebp
10001a40:	pop    ebp
10001a41:	ret    
10001a42:	test   edi,edi
10001a44:	mov    DWORD PTR [esp+0x18],0x0
10001a4c:	je     0x10001a57
10001a4e:	push   edi
10001a4f:	call   0x10015ad6
10001a54:	add    esp,0x4
10001a57:	mov    eax,DWORD PTR [esp+0x18]
10001a5b:	push   eax
10001a5c:	xor    edi,edi
10001a5e:	call   0x10015ad6
10001a63:	add    esp,0x4
10001a66:	mov    esi,DWORD PTR [ebp+0x8]
10001a69:	push   0x0
10001a6b:	mov    DWORD PTR [esi],edi
10001a6d:	call   0x10015ad6
10001a72:	add    esp,0x4
10001a75:	mov    eax,esi
10001a77:	mov    ecx,DWORD PTR [esp+0x60]
10001a7b:	mov    DWORD PTR fs:0x0,ecx
10001a82:	pop    ecx
10001a83:	pop    edi
10001a84:	pop    esi
10001a85:	pop    ebx
10001a86:	mov    esp,ebp
10001a88:	pop    ebp
10001a89:	ret    
10001a8a:	int3   
10001a8b:	int3   
10001a8c:	int3   
10001a8d:	int3   
10001a8e:	int3   
10001a8f:	int3   
10001a90:	sub    esp,0x1c
10001a93:	lea    eax,[esp+0x8]
10001a97:	push   eax
10001a98:	call   DWORD PTR ds:0x1002c0f8
10001a9e:	lea    ecx,[esp]
10001aa1:	push   ecx
10001aa2:	lea    edx,[esp+0xc]
10001aa6:	push   edx
10001aa7:	call   DWORD PTR ds:0x1002c0e8
10001aad:	mov    edx,DWORD PTR [esp+0x4]
10001ab1:	mov    eax,DWORD PTR [esp]
10001ab4:	add    esp,0x1c
10001ab7:	ret    
10001ab8:	int3   
10001ab9:	int3   
10001aba:	int3   
10001abb:	int3   
10001abc:	int3   
10001abd:	int3   
10001abe:	int3   
10001abf:	int3   
10001ac0:	sub    esp,0x74
10001ac3:	mov    eax,ds:0x10064694
10001ac8:	xor    eax,esp
10001aca:	mov    DWORD PTR [esp+0x70],eax
10001ace:	mov    eax,DWORD PTR [esp+0x78]
10001ad2:	movzx  ecx,BYTE PTR [eax+0xf]
10001ad6:	movzx  edx,BYTE PTR [eax+0xe]
10001ada:	push   ecx
10001adb:	movzx  ecx,BYTE PTR [eax+0xd]
10001adf:	push   edx
10001ae0:	movzx  edx,BYTE PTR [eax+0xc]
10001ae4:	push   ecx
10001ae5:	movzx  ecx,BYTE PTR [eax+0xb]
10001ae9:	push   edx
10001aea:	movzx  edx,BYTE PTR [eax+0xa]
10001aee:	push   ecx
10001aef:	movzx  ecx,BYTE PTR [eax+0x9]
10001af3:	push   edx
10001af4:	movzx  edx,BYTE PTR [eax+0x8]
10001af8:	push   ecx
10001af9:	movzx  ecx,WORD PTR [eax+0x6]
10001afd:	push   edx
10001afe:	movzx  edx,WORD PTR [eax+0x4]
10001b02:	mov    eax,DWORD PTR [eax]
10001b04:	push   ecx
10001b05:	push   edx
10001b06:	push   eax
10001b07:	push   0x10055594
10001b0c:	push   0x32
10001b0e:	push   0x100555c4
10001b13:	mov    DWORD PTR [esp+0x38],0x0
10001b1b:	call   0x10003340
10001b20:	add    esp,0xc
10001b23:	push   eax
10001b24:	lea    ecx,[esp+0x34]
10001b28:	push   ecx
10001b29:	call   0x10017443
10001b2e:	lea    eax,[esp+0x38]
10001b32:	mov    DWORD PTR [esi+0x18],0xf
10001b39:	mov    DWORD PTR [esi+0x14],0x0
10001b40:	add    esp,0x34
10001b43:	mov    BYTE PTR [esi+0x4],0x0
10001b47:	lea    edx,[eax+0x1]
10001b4a:	lea    ebx,[ebx+0x0]
10001b50:	mov    cl,BYTE PTR [eax]
10001b52:	add    eax,0x1
10001b55:	test   cl,cl
10001b57:	jne    0x10001b50
10001b59:	sub    eax,edx
10001b5b:	push   eax
10001b5c:	lea    edx,[esp+0x8]
10001b60:	push   edx
10001b61:	mov    ecx,esi
10001b63:	call   0x10003900
10001b68:	mov    ecx,DWORD PTR [esp+0x70]
10001b6c:	xor    ecx,esp
10001b6e:	mov    eax,esi
10001b70:	call   0x10015adb
10001b75:	add    esp,0x74
10001b78:	ret    
10001b79:	int3   
10001b7a:	int3   
10001b7b:	int3   
10001b7c:	int3   
10001b7d:	int3   
10001b7e:	int3   
10001b7f:	int3   
10001b80:	push   0xffffffff
10001b82:	push   0x1002af91
10001b87:	mov    eax,fs:0x0
10001b8d:	push   eax
10001b8e:	sub    esp,0x48
10001b91:	push   ebx
10001b92:	push   esi
10001b93:	push   edi
10001b94:	mov    eax,ds:0x10064694
10001b99:	xor    eax,esp
10001b9b:	push   eax
10001b9c:	lea    eax,[esp+0x58]
10001ba0:	mov    fs:0x0,eax
10001ba6:	xor    ebx,ebx
10001ba8:	mov    DWORD PTR [esp+0x60],ebx
10001bac:	mov    DWORD PTR [esp+0x10],ebx
10001bb0:	mov    eax,ds:0x10066120
10001bb5:	mov    edx,DWORD PTR [eax+0xc]
10001bb8:	mov    ecx,0x10066120
10001bbd:	call   edx
10001bbf:	mov    edi,DWORD PTR [esp+0x68]
10001bc3:	add    eax,0x10
10001bc6:	mov    DWORD PTR [edi],eax
10001bc8:	mov    DWORD PTR [esp+0x60],ebx
10001bcc:	mov    ecx,0x1
10001bd1:	sub    ecx,DWORD PTR [eax-0x4]
10001bd4:	mov    eax,DWORD PTR [eax-0x8]
10001bd7:	sub    eax,0x800
10001bdc:	or     eax,ecx
10001bde:	mov    DWORD PTR [esp+0x10],0x1
10001be6:	jge    0x10001bf4
10001be8:	push   0x800
10001bed:	mov    ecx,edi
10001bef:	call   0x10004920
10001bf4:	mov    eax,DWORD PTR [edi]
10001bf6:	push   0x800
10001bfb:	push   eax
10001bfc:	call   DWORD PTR ds:0x1002c0dc
10001c02:	test   eax,eax
10001c04:	jne    0x10001c6c
10001c06:	push   0x10055604
10001c0b:	push   0x1c
10001c0d:	push   0x1005563c
10001c12:	call   0x10003340
10001c17:	mov    ecx,eax
10001c19:	add    esp,0xc
10001c1c:	mov    DWORD PTR [esp+0x2c],0xf
10001c24:	mov    DWORD PTR [esp+0x28],ebx
10001c28:	mov    BYTE PTR [esp+0x18],bl
10001c2c:	lea    esi,[ecx+0x1]
10001c2f:	nop
10001c30:	mov    dl,BYTE PTR [ecx]
10001c32:	add    ecx,0x1
10001c35:	cmp    dl,bl
10001c37:	jne    0x10001c30
10001c39:	sub    ecx,esi
10001c3b:	push   ecx
10001c3c:	push   eax
10001c3d:	lea    ecx,[esp+0x1c]
10001c41:	call   0x10003900
10001c46:	lea    eax,[esp+0x14]
10001c4a:	push   eax
10001c4b:	lea    ecx,[esp+0x34]
10001c4f:	push   ecx
10001c50:	mov    DWORD PTR [esp+0x68],0x1
10001c58:	call   0x10001490
10001c5d:	push   0x10058a78
10001c62:	lea    edx,[esp+0x34]
10001c66:	push   edx
10001c67:	call   0x100161ce
10001c6c:	mov    edx,DWORD PTR [edi]
10001c6e:	cmp    edx,ebx
10001c70:	jne    0x10001c76
10001c72:	xor    eax,eax
10001c74:	jmp    0x10001c91
10001c76:	mov    eax,edx
10001c78:	lea    esi,[eax+0x2]
10001c7b:	jmp    0x10001c80
10001c7d:	lea    ecx,[ecx+0x0]
10001c80:	mov    cx,WORD PTR [eax]
10001c83:	add    eax,0x2
10001c86:	cmp    cx,bx
10001c89:	jne    0x10001c80
10001c8b:	sub    eax,esi
10001c8d:	sar    eax,1
10001c8f:	js     0x10001cd5
10001c91:	cmp    eax,DWORD PTR [edx-0x8]
10001c94:	jg     0x10001cd5
10001c96:	mov    DWORD PTR [edx-0xc],eax
10001c99:	mov    ecx,DWORD PTR [edi]
10001c9b:	mov    WORD PTR [ecx+eax*2],bx
10001c9f:	mov    ecx,DWORD PTR [edi]
10001ca1:	mov    edx,DWORD PTR [ecx-0xc]
10001ca4:	lea    eax,[edx-0x1]
10001ca7:	cmp    eax,ebx
10001ca9:	jl     0x10001cd5
10001cab:	cmp    eax,edx
10001cad:	jg     0x10001cd5
10001caf:	movzx  eax,WORD PTR [ecx+eax*2]
10001cb3:	cmp    ax,0x5c
10001cb7:	je     0x10001cc0
10001cb9:	push   0x5c
10001cbb:	call   0x10002f10
10001cc0:	mov    eax,edi
10001cc2:	mov    ecx,DWORD PTR [esp+0x58]
10001cc6:	mov    DWORD PTR fs:0x0,ecx
10001ccd:	pop    ecx
10001cce:	pop    edi
10001ccf:	pop    esi
10001cd0:	pop    ebx
10001cd1:	add    esp,0x54
10001cd4:	ret    
10001cd5:	push   0x80070057
10001cda:	call   0x10001050
10001cdf:	int3   
10001ce0:	push   0xffffffff
10001ce2:	push   0x1002b411
10001ce7:	mov    eax,fs:0x0
10001ced:	push   eax
10001cee:	sub    esp,0x50
10001cf1:	push   ebx
10001cf2:	push   ebp
10001cf3:	push   esi
10001cf4:	push   edi
10001cf5:	mov    eax,ds:0x10064694
10001cfa:	xor    eax,esp
10001cfc:	push   eax
10001cfd:	lea    eax,[esp+0x64]
10001d01:	mov    fs:0x0,eax
10001d07:	mov    esi,DWORD PTR [esp+0x74]
10001d0b:	xor    ebx,ebx
10001d0d:	push   ebx
10001d0e:	mov    DWORD PTR [esp+0x70],ebx
10001d12:	push   esi
10001d13:	mov    DWORD PTR [esp+0x20],ebx
10001d17:	call   0x10001b80
10001d1c:	add    esp,0x8
10001d1f:	mov    DWORD PTR [esp+0x6c],ebx
10001d23:	mov    eax,DWORD PTR [esi]
10001d25:	mov    ebp,0x1
10001d2a:	sub    eax,0x10
10001d2d:	cmp    DWORD PTR [eax+0xc],ebp
10001d30:	mov    DWORD PTR [esp+0x18],ebp
10001d34:	jle    0x10001d41
10001d36:	mov    eax,DWORD PTR [eax+0x4]
10001d39:	push   eax
10001d3a:	mov    ecx,esi
10001d3c:	call   0x10003d10
10001d41:	mov    eax,DWORD PTR [esi]
10001d43:	push   0x5c
10001d45:	push   eax
10001d46:	call   0x10016fc5
10001d4b:	mov    edi,eax
10001d4d:	add    esp,0x8
10001d50:	cmp    edi,ebx
10001d52:	jne    0x10001db7
10001d54:	push   0x1005565c
10001d59:	push   0x18
10001d5b:	push   0x10055694
10001d60:	call   0x10003340
10001d65:	mov    ecx,eax
10001d67:	add    esp,0xc
10001d6a:	mov    DWORD PTR [esp+0x34],0xf
10001d72:	mov    DWORD PTR [esp+0x30],ebx
10001d76:	mov    BYTE PTR [esp+0x20],bl
10001d7a:	lea    esi,[ecx+0x1]
10001d7d:	lea    ecx,[ecx+0x0]
10001d80:	mov    dl,BYTE PTR [ecx]
10001d82:	add    ecx,ebp
10001d84:	cmp    dl,bl
10001d86:	jne    0x10001d80
10001d88:	sub    ecx,esi
10001d8a:	push   ecx
10001d8b:	push   eax
10001d8c:	lea    ecx,[esp+0x24]
10001d90:	call   0x10003900
10001d95:	lea    ecx,[esp+0x1c]
10001d99:	push   ecx
10001d9a:	lea    edx,[esp+0x3c]
10001d9e:	push   edx
10001d9f:	mov    DWORD PTR [esp+0x74],ebp
10001da3:	call   0x10001490
10001da8:	push   0x10058a78
10001dad:	lea    eax,[esp+0x3c]
10001db1:	push   eax
10001db2:	call   0x100161ce
10001db7:	mov    eax,DWORD PTR [esi]
10001db9:	sub    eax,0x10
10001dbc:	cmp    DWORD PTR [eax+0xc],ebp
10001dbf:	jle    0x10001dcc
10001dc1:	mov    ecx,DWORD PTR [eax+0x4]
10001dc4:	push   ecx
10001dc5:	mov    ecx,esi
10001dc7:	call   0x10003d10
10001dcc:	mov    ecx,DWORD PTR [esi]
10001dce:	sub    edi,ecx
10001dd0:	sar    edi,1
10001dd2:	add    edi,ebp
10001dd4:	cmp    ecx,ebx
10001dd6:	jne    0x10001ddc
10001dd8:	xor    eax,eax
10001dda:	jmp    0x10001df7
10001ddc:	mov    eax,ecx
10001dde:	lea    ebp,[eax+0x2]
10001de1:	mov    dx,WORD PTR [eax]
10001de4:	add    eax,0x2
10001de7:	cmp    dx,bx
10001dea:	jne    0x10001de1
10001dec:	sub    eax,ebp
10001dee:	sar    eax,1
10001df0:	js     0x10001e4a
10001df2:	mov    ebp,0x1
10001df7:	cmp    eax,DWORD PTR [ecx-0x8]
10001dfa:	jg     0x10001e4a
10001dfc:	mov    DWORD PTR [ecx-0xc],eax
10001dff:	mov    edx,DWORD PTR [esi]
10001e01:	mov    WORD PTR [edx+eax*2],bx
10001e05:	mov    eax,DWORD PTR [esi]
10001e07:	sub    eax,0x10
10001e0a:	mov    ecx,ebp
10001e0c:	sub    ecx,DWORD PTR [eax+0xc]
10001e0f:	mov    eax,DWORD PTR [eax+0x8]
10001e12:	sub    eax,edi
10001e14:	or     eax,ecx
10001e16:	jge    0x10001e20
10001e18:	push   edi
10001e19:	mov    ecx,esi
10001e1b:	call   0x10004920
10001e20:	cmp    edi,ebx
10001e22:	jl     0x10001e4a
10001e24:	mov    eax,DWORD PTR [esi]
10001e26:	cmp    edi,DWORD PTR [eax-0x8]
10001e29:	jg     0x10001e4a
10001e2b:	mov    DWORD PTR [eax-0xc],edi
10001e2e:	mov    eax,DWORD PTR [esi]
10001e30:	mov    WORD PTR [eax+edi*2],bx
10001e34:	mov    eax,esi
10001e36:	mov    ecx,DWORD PTR [esp+0x64]
10001e3a:	mov    DWORD PTR fs:0x0,ecx
10001e41:	pop    ecx
10001e42:	pop    edi
10001e43:	pop    esi
10001e44:	pop    ebp
10001e45:	pop    ebx
10001e46:	add    esp,0x5c
10001e49:	ret    
10001e4a:	push   0x80070057
10001e4f:	call   0x10001050
10001e54:	int3   
10001e55:	int3   
10001e56:	int3   
10001e57:	int3   
10001e58:	int3   
10001e59:	int3   
10001e5a:	int3   
10001e5b:	int3   
10001e5c:	int3   
10001e5d:	int3   
10001e5e:	int3   
10001e5f:	int3   
10001e60:	push   ebp
10001e61:	mov    ebp,esp
10001e63:	push   0xffffffff
10001e65:	push   0x1002b56f
10001e6a:	mov    eax,fs:0x0
10001e70:	push   eax
10001e71:	sub    esp,0x134
10001e77:	mov    eax,ds:0x10064694
10001e7c:	xor    eax,ebp
10001e7e:	mov    DWORD PTR [ebp-0x10],eax
10001e81:	push   ebx
10001e82:	push   esi
10001e83:	push   edi
10001e84:	push   eax
10001e85:	lea    eax,[ebp-0xc]
10001e88:	mov    fs:0x0,eax
10001e8e:	call   DWORD PTR ds:0x10064614
10001e94:	mov    ebx,eax
10001e96:	lea    eax,[ebp-0x7c]
10001e99:	push   eax
10001e9a:	call   0x10001ce0
10001e9f:	add    esp,0x4
10001ea2:	push   0x0
10001ea4:	push   0x0
10001ea6:	lea    ecx,[ebp-0x88]
10001eac:	push   ecx
10001ead:	lea    edx,[ebp-0x84]
10001eb3:	push   edx
10001eb4:	lea    eax,[ebp-0x80]
10001eb7:	push   eax
10001eb8:	push   0x0
10001eba:	mov    DWORD PTR [ebp-0x4],0x0
10001ec1:	mov    ecx,DWORD PTR [ebp-0x7c]
10001ec4:	push   0x0
10001ec6:	push   ecx
10001ec7:	call   DWORD PTR ds:0x1002c0e4
10001ecd:	test   eax,eax
10001ecf:	jne    0x10001fff
10001ed5:	call   DWORD PTR ds:0x1002c07c
10001edb:	push   0xa
10001edd:	lea    edx,[ebp-0x78]
10001ee0:	push   edx
10001ee1:	push   eax
10001ee2:	call   0x10017330
10001ee7:	mov    eax,DWORD PTR [ebp-0x7c]
10001eea:	add    esp,0xc
10001eed:	test   eax,eax
10001eef:	mov    edi,eax
10001ef1:	je     0x10001f1f
10001ef3:	push   eax
10001ef4:	call   DWORD PTR ds:0x1002c028
10001efa:	add    eax,0x1
10001efd:	cmp    eax,0x3fffffff
10001f02:	jle    0x10001f08
10001f04:	xor    edi,edi
10001f06:	jmp    0x10001f1f
10001f08:	lea    esi,[eax+eax*1]
10001f0b:	mov    eax,esi
10001f0d:	call   0x10015af0
10001f12:	mov    eax,esp
10001f14:	push   ebx
10001f15:	push   esi
10001f16:	push   edi
10001f17:	push   eax
10001f18:	call   0x10001010
10001f1d:	mov    edi,eax
10001f1f:	push   0x100556f0
10001f24:	push   0x21
10001f26:	push   0x10055724
10001f2b:	call   0x10003340
10001f30:	mov    ecx,eax
10001f32:	add    esp,0xc
10001f35:	mov    DWORD PTR [ebp-0x8c],0xf
10001f3f:	mov    DWORD PTR [ebp-0x90],0x0
10001f49:	mov    BYTE PTR [ebp-0xa0],0x0
10001f50:	lea    esi,[ecx+0x1]
10001f53:	mov    dl,BYTE PTR [ecx]
10001f55:	add    ecx,0x1
10001f58:	test   dl,dl
10001f5a:	jne    0x10001f53
10001f5c:	sub    ecx,esi
10001f5e:	push   ecx
10001f5f:	push   eax
10001f60:	lea    ecx,[ebp-0xa4]
10001f66:	call   0x10003900
10001f6b:	lea    eax,[ebp-0xa4]
10001f71:	push   eax
10001f72:	lea    esi,[ebp-0xe8]
10001f78:	mov    BYTE PTR [ebp-0x4],0x1
10001f7c:	call   0x10006ae0
10001f81:	add    esp,0x4
10001f84:	mov    esi,eax
10001f86:	push   0x100556b4
10001f8b:	push   0x7
10001f8d:	push   0x100556e8
10001f92:	mov    BYTE PTR [ebp-0x4],0x2
10001f96:	call   0x10003340
10001f9b:	add    esp,0xc
10001f9e:	push   esi
10001f9f:	mov    edi,eax
10001fa1:	lea    esi,[ebp-0x104]
10001fa7:	call   0x10006ae0
10001fac:	add    esp,0x4
10001faf:	push   eax
10001fb0:	lea    edi,[ebp-0x78]
10001fb3:	lea    esi,[ebp-0x13c]
10001fb9:	mov    BYTE PTR [ebp-0x4],0x3
10001fbd:	call   0x10006ae0
10001fc2:	add    esp,0x4
10001fc5:	push   eax
10001fc6:	mov    edi,0x100556b0
10001fcb:	lea    esi,[ebp-0x120]
10001fd1:	mov    BYTE PTR [ebp-0x4],0x4
10001fd5:	call   0x10006ae0
10001fda:	add    esp,0x4
10001fdd:	push   eax
10001fde:	lea    ecx,[ebp-0xcc]
10001fe4:	push   ecx
10001fe5:	mov    BYTE PTR [ebp-0x4],0x5
10001fe9:	call   0x10001490
10001fee:	push   0x10058a78
10001ff3:	lea    edx,[ebp-0xcc]
10001ff9:	push   edx
10001ffa:	call   0x100161ce
10001fff:	mov    esi,DWORD PTR [ebp-0x80]
10002002:	mov    DWORD PTR [ebp-0x4],0xffffffff
10002009:	mov    eax,DWORD PTR [ebp-0x7c]
1000200c:	add    eax,0xfffffff0
1000200f:	lea    ecx,[eax+0xc]
10002012:	or     edx,0xffffffff
10002015:	lock xadd DWORD PTR [ecx],edx
10002019:	dec    edx
1000201a:	test   edx,edx
1000201c:	jg     0x10002028
1000201e:	mov    ecx,DWORD PTR [eax]
10002020:	mov    edx,DWORD PTR [ecx]
10002022:	push   eax
10002023:	mov    eax,DWORD PTR [edx+0x4]
10002026:	call   eax
10002028:	mov    eax,esi
1000202a:	lea    esp,[ebp-0x150]
10002030:	mov    ecx,DWORD PTR [ebp-0xc]
10002033:	mov    DWORD PTR fs:0x0,ecx
1000203a:	pop    ecx
1000203b:	pop    edi
1000203c:	pop    esi
1000203d:	pop    ebx
1000203e:	mov    ecx,DWORD PTR [ebp-0x10]
10002041:	xor    ecx,ebp
10002043:	call   0x10015adb
10002048:	mov    esp,ebp
1000204a:	pop    ebp
1000204b:	ret    
1000204c:	int3   
1000204d:	int3   
1000204e:	int3   
1000204f:	int3   
10002050:	push   ebp
10002051:	mov    ebp,esp
10002053:	and    esp,0xfffffff8
10002056:	push   ecx
10002057:	push   edi
10002058:	mov    DWORD PTR [esp+0x4],0x0
10002060:	call   0x10001e60
10002065:	mov    ecx,DWORD PTR [ebp+0xc]
10002068:	mov    edi,DWORD PTR [ebp+0x8]
1000206b:	push   ecx
1000206c:	mov    ecx,DWORD PTR [ebp+0x10]
1000206f:	mov    edx,eax
10002071:	call   0x10002290
10002076:	add    esp,0x4
10002079:	mov    eax,edi
1000207b:	pop    edi
1000207c:	mov    esp,ebp
1000207e:	pop    ebp
1000207f:	ret    
10002080:	sub    esp,0x8
10002083:	mov    DWORD PTR [esp],0x0
1000208a:	mov    DWORD PTR [esp+0x4],0x0
10002092:	call   DWORD PTR ds:0x10064614
10002098:	mov    eax,DWORD PTR [esp+0x10]
1000209c:	mov    eax,DWORD PTR [eax]
1000209e:	lea    ecx,[esp+0x4]
100020a2:	push   ecx
100020a3:	push   0x0
100020a5:	lea    edx,[esp+0x8]
100020a9:	push   edx
100020aa:	push   0x0
100020ac:	push   0x0
100020ae:	push   0x4
100020b0:	push   0x1
100020b2:	push   eax
100020b3:	call   DWORD PTR ds:0x1002c008
100020b9:	test   eax,eax
100020bb:	jne    0x100020d8
100020bd:	mov    ecx,DWORD PTR [esp+0xc]
100020c1:	mov    edx,DWORD PTR [ecx]
100020c3:	push   eax
100020c4:	mov    eax,DWORD PTR [esp+0x4]
100020c8:	push   eax
100020c9:	push   0x0
100020cb:	push   0x0
100020cd:	push   0x4
100020cf:	push   0x1
100020d1:	push   edx
100020d2:	call   DWORD PTR ds:0x1002c010
100020d8:	add    esp,0x8
100020db:	ret    
100020dc:	int3   
100020dd:	int3   
100020de:	int3   
100020df:	int3   
100020e0:	mov    eax,0x10000000
100020e5:	ret    
100020e6:	int3   
100020e7:	int3   
100020e8:	int3   
100020e9:	int3   
100020ea:	int3   
100020eb:	int3   
100020ec:	int3   
100020ed:	int3   
100020ee:	int3   
100020ef:	int3   
100020f0:	push   ecx
100020f1:	mov    eax,DWORD PTR [esp+0xc]
100020f5:	push   esi
100020f6:	mov    esi,DWORD PTR [esp+0xc]
100020fa:	push   eax
100020fb:	push   esi
100020fc:	mov    DWORD PTR [esp+0xc],0x0
10002104:	call   0x10002120
10002109:	add    esp,0x8
1000210c:	mov    eax,esi
1000210e:	pop    esi
1000210f:	pop    ecx
10002110:	ret    
10002111:	int3   
10002112:	int3   
10002113:	int3   
10002114:	int3   
10002115:	int3   
10002116:	int3   
10002117:	int3   
10002118:	int3   
10002119:	int3   
1000211a:	int3   
1000211b:	int3   
1000211c:	int3   
1000211d:	int3   
1000211e:	int3   
1000211f:	int3   
10002120:	push   0xffffffff
10002122:	push   0x1002aae8
10002127:	mov    eax,fs:0x0
1000212d:	push   eax
1000212e:	push   ecx
1000212f:	push   ebp
10002130:	push   esi
10002131:	mov    eax,ds:0x10064694
10002136:	xor    eax,esp
10002138:	push   eax
10002139:	lea    eax,[esp+0x10]
1000213d:	mov    fs:0x0,eax
10002143:	mov    ebp,DWORD PTR [esp+0x20]
10002147:	mov    DWORD PTR [esp+0xc],0x0
1000214f:	mov    eax,ds:0x10066120
10002154:	mov    edx,DWORD PTR [eax+0xc]
10002157:	mov    ecx,0x10066120
1000215c:	call   edx
1000215e:	lea    esi,[eax+0x10]
10002161:	mov    DWORD PTR [esp+0xc],esi
10002165:	mov    DWORD PTR [esp+0x18],0x0
1000216d:	mov    eax,DWORD PTR [esi-0x8]
10002170:	mov    ecx,0x1
10002175:	sub    ecx,DWORD PTR [esi-0x4]
10002178:	sub    eax,0x104
1000217d:	or     eax,ecx
1000217f:	jge    0x10002193
10002181:	push   0x104
10002186:	lea    ecx,[esp+0x10]
1000218a:	call   0x10004920
1000218f:	mov    esi,DWORD PTR [esp+0xc]
10002193:	cmp    DWORD PTR [esi-0x8],0x104
1000219a:	jge    0x100021a6
1000219c:	push   0x80070057
100021a1:	call   0x10001050
100021a6:	push   0x104
100021ab:	push   esi
100021ac:	mov    DWORD PTR [esi-0xc],0x104
100021b3:	push   0x10000000
100021b8:	mov    WORD PTR [esi+0x208],0x0
100021c1:	call   DWORD PTR ds:0x1002c0d8
100021c7:	mov    eax,esi
100021c9:	lea    edx,[eax+0x2]
100021cc:	lea    esp,[esp+0x0]
100021d0:	mov    cx,WORD PTR [eax]
100021d3:	add    eax,0x2
100021d6:	test   cx,cx
100021d9:	jne    0x100021d0
100021db:	sub    eax,edx
100021dd:	sar    eax,1
100021df:	js     0x1000219c
100021e1:	cmp    eax,DWORD PTR [esi-0x8]
100021e4:	jg     0x1000219c
100021e6:	cmp    BYTE PTR [esp+0x24],cl
100021ea:	mov    DWORD PTR [esi-0xc],eax
100021ed:	mov    WORD PTR [esi+eax*2],cx
100021f1:	je     0x10002221
100021f3:	add    esi,0xfffffff0
100021f6:	push   esi
100021f7:	call   0x10004970
100021fc:	add    eax,0x10
100021ff:	mov    DWORD PTR [ebp+0x0],eax
10002202:	add    esp,0x4
10002205:	mov    DWORD PTR [esp+0x18],0xffffffff
1000220d:	lea    eax,[esi+0xc]
10002210:	or     ecx,0xffffffff
10002213:	lock xadd DWORD PTR [eax],ecx
10002217:	dec    ecx
10002218:	test   ecx,ecx
1000221a:	jg     0x10002276
1000221c:	mov    ecx,DWORD PTR [esi]
1000221e:	push   esi
1000221f:	jmp    0x1000226f
10002221:	push   0x5c
10002223:	push   esi
10002224:	call   0x100172a4
10002229:	add    esp,0x8
1000222c:	test   eax,eax
1000222e:	je     0x1000223b
10002230:	sub    eax,esi
10002232:	sar    eax,1
10002234:	mov    ecx,eax
10002236:	cmp    ecx,0xffffffff
10002239:	jne    0x1000223f
1000223b:	xor    ecx,ecx
1000223d:	jmp    0x10002242
1000223f:	add    ecx,0x1
10002242:	mov    eax,DWORD PTR [esi-0xc]
10002245:	sub    eax,ecx
10002247:	push   eax
10002248:	push   ebp
10002249:	lea    ecx,[esp+0x14]
1000224d:	call   0x10002fa0
10002252:	lea    eax,[esi-0x10]
10002255:	mov    DWORD PTR [esp+0x18],0xffffffff
1000225d:	lea    ecx,[eax+0xc]
10002260:	or     edx,0xffffffff
10002263:	lock xadd DWORD PTR [ecx],edx
10002267:	dec    edx
10002268:	test   edx,edx
1000226a:	jg     0x10002276
1000226c:	mov    ecx,DWORD PTR [eax]
1000226e:	push   eax
1000226f:	mov    edx,DWORD PTR [ecx]
10002271:	mov    eax,DWORD PTR [edx+0x4]
10002274:	call   eax
10002276:	mov    eax,ebp
10002278:	mov    ecx,DWORD PTR [esp+0x10]
1000227c:	mov    DWORD PTR fs:0x0,ecx
10002283:	pop    ecx
10002284:	pop    esi
10002285:	pop    ebp
10002286:	add    esp,0x10
10002289:	ret    
1000228a:	int3   
1000228b:	int3   
1000228c:	int3   
1000228d:	int3   
1000228e:	int3   
1000228f:	int3   
10002290:	push   ebp
10002291:	mov    ebp,esp
10002293:	push   0xffffffff
10002295:	push   0x1002b3bf
1000229a:	mov    eax,fs:0x0
100022a0:	push   eax
100022a1:	sub    esp,0xa14
100022a7:	mov    eax,ds:0x10064694
100022ac:	xor    eax,ebp
100022ae:	mov    DWORD PTR [ebp-0x14],eax
100022b1:	push   ebx
100022b2:	push   esi
100022b3:	push   eax
100022b4:	lea    eax,[ebp-0xc]
100022b7:	mov    fs:0x0,eax
100022bd:	mov    esi,ecx
100022bf:	mov    ecx,DWORD PTR [ebp+0x8]
100022c2:	xor    eax,eax
100022c4:	mov    DWORD PTR [ebp-0x4],eax
100022c7:	mov    DWORD PTR [ebp-0x30],eax
100022ca:	lea    eax,[esi+esi*4]
100022cd:	lea    eax,[ecx+eax*2]
100022d0:	add    edx,eax
100022d2:	lea    eax,[ebp-0xa1c]
100022d8:	mov    DWORD PTR [ebp-0x34],edi
100022db:	call   0x10001730
100022e0:	mov    ebx,0x1
100022e5:	test   BYTE PTR ds:0x10066f54,bl
100022eb:	jne    0x100023ad
100022f1:	or     DWORD PTR ds:0x10066f54,ebx
100022f7:	push   0x10055824
100022fc:	push   0x3
100022fe:	push   0x1005581c
10002303:	mov    DWORD PTR [ebp-0x4],ebx
10002306:	call   0x10003540
1000230b:	add    esp,0xc
1000230e:	push   0x100557ec
10002313:	push   0x3
10002315:	push   0x100557e4
1000231a:	mov    ds:0x10066dcc,eax
1000231f:	mov    DWORD PTR ds:0x10066dd0,ebx
10002325:	call   0x10003540
1000232a:	add    esp,0xc
1000232d:	push   0x100557ac
10002332:	push   0x0
10002334:	push   0x10055570
10002339:	mov    ds:0x10066dd4,eax
1000233e:	mov    DWORD PTR ds:0x10066dd8,ebx
10002344:	call   0x10003540
10002349:	add    esp,0xc
1000234c:	push   0x10055788
10002351:	push   0x0
10002353:	push   0x10055570
10002358:	mov    ds:0x10066ddc,eax
1000235d:	mov    DWORD PTR ds:0x10066de0,ebx
10002363:	call   0x10003540
10002368:	add    esp,0xc
1000236b:	push   0x10055754
10002370:	push   0x4
10002372:	push   0x10055748
10002377:	mov    ds:0x10066de4,eax
1000237c:	mov    DWORD PTR ds:0x10066de8,ebx
10002382:	call   0x10003540
10002387:	add    esp,0xc
1000238a:	mov    ds:0x10066dec,eax
1000238f:	mov    DWORD PTR ds:0x10066df0,ebx
10002395:	mov    DWORD PTR ds:0x10066df4,0x10055570
1000239f:	mov    DWORD PTR ds:0x10066df8,0x2
100023a9:	mov    BYTE PTR [ebp-0x4],0x0
100023ad:	lea    ecx,[esi-0x1]
100023b0:	cmp    ecx,0x5
100023b3:	ja     0x100023ce
100023b5:	mov    eax,DWORD PTR [ebp+0x8]
100023b8:	lea    edx,[esi+esi*2]
100023bb:	lea    ecx,[eax+edx*2]
100023be:	mov    eax,DWORD PTR [ecx*8+0x10066d9c]
100023c5:	mov    esi,DWORD PTR [ecx*8+0x10066da0]
100023cc:	jmp    0x100023d5
100023ce:	mov    eax,0x10055570
100023d3:	xor    esi,esi
100023d5:	push   eax
100023d6:	mov    ecx,edi
100023d8:	call   0x10002d50
100023dd:	xor    ecx,ecx
100023df:	mov    eax,esi
100023e1:	sub    eax,ebx
100023e3:	mov    DWORD PTR [ebp-0x4],ecx
100023e6:	mov    DWORD PTR [ebp-0x30],ebx
100023e9:	je     0x1000251d
100023ef:	sub    eax,ebx
100023f1:	jne    0x100024fa
100023f7:	mov    DWORD PTR [ebp-0x20],eax
100023fa:	mov    DWORD PTR [ebp-0x1c],eax
100023fd:	mov    DWORD PTR [ebp-0x18],eax
10002400:	or     ebx,0xffffffff
10002403:	lea    eax,[ebp-0xa1c]
10002409:	call   0x10001770
1000240e:	mov    DWORD PTR [ebp-0x24],eax
10002411:	or     ebx,0xffffffff
10002414:	lea    eax,[ebp-0xa1c]
1000241a:	call   0x10001770
1000241f:	mov    DWORD PTR [ebp-0x20],eax
10002422:	or     ebx,0xffffffff
10002425:	lea    eax,[ebp-0xa1c]
1000242b:	call   0x10001770
10002430:	mov    DWORD PTR [ebp-0x1c],eax
10002433:	or     ebx,0xffffffff
10002436:	lea    eax,[ebp-0xa1c]
1000243c:	call   0x10001770
10002441:	mov    DWORD PTR [ebp-0x18],eax
10002444:	call   DWORD PTR ds:0x10064614
1000244a:	lea    ecx,[ebp-0x24]
1000244d:	push   ecx
1000244e:	lea    esi,[ebp-0x50]
10002451:	mov    DWORD PTR [ebp-0x2c],eax
10002454:	call   0x10001ac0
10002459:	add    esp,0x4
1000245c:	mov    DWORD PTR [ebp-0x4],0x2
10002463:	cmp    DWORD PTR [eax+0x18],0x10
10002467:	jb     0x10002471
10002469:	mov    eax,DWORD PTR [eax+0x4]
1000246c:	mov    DWORD PTR [ebp-0x28],eax
1000246f:	jmp    0x10002477
10002471:	add    eax,0x4
10002474:	mov    DWORD PTR [ebp-0x28],eax
10002477:	test   eax,eax
10002479:	jne    0x1000247f
1000247b:	xor    edx,edx
1000247d:	jmp    0x100024df
1000247f:	push   eax
10002480:	call   DWORD PTR ds:0x1002c038
10002486:	mov    ebx,eax
10002488:	add    ebx,0x1
1000248b:	cmp    ebx,0x3fffffff
10002491:	jg     0x100024c2
10002493:	lea    eax,[ebx+ebx*1]
10002496:	call   0x10015af0
1000249b:	mov    esi,esp
1000249d:	test   esi,esi
1000249f:	je     0x100024c2
100024a1:	mov    edx,DWORD PTR [ebp-0x28]
100024a4:	mov    eax,DWORD PTR [ebp-0x2c]
100024a7:	push   ebx
100024a8:	push   esi
100024a9:	push   0xffffffff
100024ab:	push   edx
100024ac:	push   0x0
100024ae:	push   eax
100024af:	mov    WORD PTR [esi],0x0
100024b4:	call   DWORD PTR ds:0x1002c080
100024ba:	neg    eax
100024bc:	sbb    eax,eax
100024be:	and    eax,esi
100024c0:	jmp    0x100024c4
100024c2:	xor    eax,eax
100024c4:	mov    edx,eax
100024c6:	test   edx,edx
100024c8:	je     0x100024df
100024ca:	mov    eax,edx
100024cc:	lea    esi,[eax+0x2]
100024cf:	nop
100024d0:	mov    cx,WORD PTR [eax]
100024d3:	add    eax,0x2
100024d6:	test   cx,cx
100024d9:	jne    0x100024d0
100024db:	sub    eax,esi
100024dd:	sar    eax,1
100024df:	push   eax
100024e0:	push   edx
100024e1:	mov    ecx,edi
100024e3:	call   0x10003bc0
100024e8:	cmp    DWORD PTR [ebp-0x38],0x10
100024ec:	jb     0x100024fa
100024ee:	mov    ecx,DWORD PTR [ebp-0x4c]
100024f1:	push   ecx
100024f2:	call   0x10015ad6
100024f7:	add    esp,0x4
100024fa:	mov    eax,edi
100024fc:	lea    esp,[ebp-0xa2c]
10002502:	mov    ecx,DWORD PTR [ebp-0xc]
10002505:	mov    DWORD PTR fs:0x0,ecx
1000250c:	pop    ecx
1000250d:	pop    esi
1000250e:	pop    ebx
1000250f:	mov    ecx,DWORD PTR [ebp-0x14]
10002512:	xor    ecx,ebp
10002514:	call   0x10015adb
10002519:	mov    esp,ebp
1000251b:	pop    ebp
1000251c:	ret    
1000251d:	mov    DWORD PTR [ebp-0x2c],ecx
10002520:	mov    ebx,0x23
10002525:	lea    eax,[ebp-0xa1c]
1000252b:	call   0x10001770
10002530:	cmp    eax,0xa
10002533:	jae    0x10002540
10002535:	add    eax,0x30
10002538:	movzx  edx,ax
1000253b:	mov    DWORD PTR [ebp-0x28],edx
1000253e:	jmp    0x10002549
10002540:	add    eax,0x57
10002543:	movzx  eax,ax
10002546:	mov    DWORD PTR [ebp-0x28],eax
10002549:	mov    eax,DWORD PTR [edi]
1000254b:	mov    ebx,DWORD PTR [eax-0xc]
1000254e:	mov    ecx,0x1
10002553:	sub    ecx,DWORD PTR [eax-0x4]
10002556:	mov    eax,DWORD PTR [eax-0x8]
10002559:	lea    esi,[ebx+0x1]
1000255c:	sub    eax,esi
1000255e:	or     eax,ecx
10002560:	jge    0x1000256a
10002562:	push   esi
10002563:	mov    ecx,edi
10002565:	call   0x10004920
1000256a:	test   esi,esi
1000256c:	mov    eax,DWORD PTR [edi]
1000256e:	mov    cx,WORD PTR [ebp-0x28]
10002572:	mov    WORD PTR [eax+ebx*2],cx
10002576:	jl     0x1000259d
10002578:	mov    eax,DWORD PTR [edi]
1000257a:	cmp    esi,DWORD PTR [eax-0x8]
1000257d:	jg     0x1000259d
1000257f:	mov    DWORD PTR [eax-0xc],esi
10002582:	mov    eax,DWORD PTR [ebp-0x2c]
10002585:	mov    edx,DWORD PTR [edi]
10002587:	add    eax,0x1
1000258a:	cmp    eax,0x5
1000258d:	mov    WORD PTR [edx+esi*2],0x0
10002593:	mov    DWORD PTR [ebp-0x2c],eax
10002596:	jl     0x10002520
10002598:	jmp    0x100024fa
1000259d:	push   0x80070057
100025a2:	call   0x10001050
100025a7:	int3   
100025a8:	int3   
100025a9:	int3   
100025aa:	int3   
100025ab:	int3   
100025ac:	int3   
100025ad:	int3   
100025ae:	int3   
100025af:	int3   
100025b0:	push   0xffffffff
100025b2:	push   0x1002b508
100025b7:	mov    eax,fs:0x0
100025bd:	push   eax
100025be:	sub    esp,0x8
100025c1:	push   edi
100025c2:	mov    eax,ds:0x10064694
100025c7:	xor    eax,esp
100025c9:	push   eax
100025ca:	lea    eax,[esp+0x10]
100025ce:	mov    fs:0x0,eax
100025d4:	cmp    DWORD PTR ds:0x10066dfc,0x0
100025db:	jne    0x10002684
100025e1:	push   0x10055854
100025e6:	push   0x12
100025e8:	push   0x10055880
100025ed:	mov    DWORD PTR ds:0x10066dfc,0xc
100025f7:	mov    DWORD PTR ds:0x10066e04,0x0
10002601:	call   0x10003540
10002606:	add    esp,0xc
10002609:	push   eax
1000260a:	lea    ecx,[esp+0x10]
1000260e:	call   0x10002d50
10002613:	lea    edi,[esp+0xb]
10002617:	mov    DWORD PTR [esp+0x18],0x0
1000261f:	call   0x100017f0
10002624:	call   0x1000c2e0
10002629:	cmp    eax,0x6a
1000262c:	je     0x10002638
1000262e:	call   0x1000c2e0
10002633:	cmp    eax,0x6b
10002636:	jne    0x10002648
10002638:	push   0xf
1000263a:	push   0x100558a8
1000263f:	lea    ecx,[esp+0x14]
10002643:	call   0x10003bc0
10002648:	mov    eax,DWORD PTR [esp+0xc]
1000264c:	push   0x0
1000264e:	push   0x10066e00
10002653:	push   0x1
10002655:	push   eax
10002656:	call   DWORD PTR ds:0x1002c00c
1000265c:	mov    DWORD PTR [esp+0x18],0xffffffff
10002664:	mov    eax,DWORD PTR [esp+0xc]
10002668:	add    eax,0xfffffff0
1000266b:	lea    ecx,[eax+0xc]
1000266e:	or     edx,0xffffffff
10002671:	lock xadd DWORD PTR [ecx],edx
10002675:	dec    edx
10002676:	test   edx,edx
10002678:	jg     0x10002684
1000267a:	mov    ecx,DWORD PTR [eax]
1000267c:	mov    edx,DWORD PTR [ecx]
1000267e:	push   eax
1000267f:	mov    eax,DWORD PTR [edx+0x4]
10002682:	call   eax
10002684:	mov    eax,0x10066dfc
10002689:	mov    ecx,DWORD PTR [esp+0x10]
1000268d:	mov    DWORD PTR fs:0x0,ecx
10002694:	pop    ecx
10002695:	pop    edi
10002696:	add    esp,0x14
10002699:	ret    
1000269a:	int3   
1000269b:	int3   
1000269c:	int3   
1000269d:	int3   
1000269e:	int3   
1000269f:	int3   
100026a0:	push   0xffffffff
100026a2:	push   0x1002b791
100026a7:	mov    eax,fs:0x0
100026ad:	push   eax
100026ae:	sub    esp,0xc
100026b1:	push   esi
100026b2:	push   edi
100026b3:	mov    eax,ds:0x10064694
100026b8:	xor    eax,esp
100026ba:	push   eax
100026bb:	lea    eax,[esp+0x18]
100026bf:	mov    fs:0x0,eax
100026c5:	xor    edi,edi
100026c7:	mov    DWORD PTR [esp+0x20],edi
100026cb:	mov    DWORD PTR [esp+0xc],edi
100026cf:	mov    eax,ds:0x10066120
100026d4:	mov    edx,DWORD PTR [eax+0xc]
100026d7:	mov    ecx,0x10066120
100026dc:	call   edx
100026de:	mov    esi,DWORD PTR [esp+0x28]
100026e2:	add    eax,0x10
100026e5:	mov    DWORD PTR [esi],eax
100026e7:	cmp    BYTE PTR [esp+0x2c],0x0
100026ec:	mov    DWORD PTR [esp+0x20],edi
100026f0:	mov    DWORD PTR [esp+0xc],0x1
100026f8:	je     0x10002743
100026fa:	lea    eax,[esp+0x10]
100026fe:	push   edi
100026ff:	push   eax
10002700:	call   0x10001b80
10002705:	add    esp,0x8
10002708:	mov    DWORD PTR [esp+0x20],0x1
10002710:	mov    eax,DWORD PTR [eax]
10002712:	mov    ecx,DWORD PTR [eax-0xc]
10002715:	push   ecx
10002716:	push   eax
10002717:	mov    ecx,esi
10002719:	call   0x10003bc0
1000271e:	mov    BYTE PTR [esp+0x20],0x0
10002723:	mov    eax,DWORD PTR [esp+0x10]
10002727:	add    eax,0xfffffff0
1000272a:	lea    ecx,[eax+0xc]
1000272d:	or     edx,0xffffffff
10002730:	lock xadd DWORD PTR [ecx],edx
10002734:	dec    edx
10002735:	test   edx,edx
10002737:	jg     0x10002743
10002739:	mov    ecx,DWORD PTR [eax]
1000273b:	mov    edx,DWORD PTR [ecx]
1000273d:	push   eax
1000273e:	mov    eax,DWORD PTR [edx+0x4]
10002741:	call   eax
10002743:	push   0x1
10002745:	lea    ecx,[esp+0x18]
10002749:	push   0x2
1000274b:	push   ecx
1000274c:	call   0x10002050
10002751:	mov    edi,eax
10002753:	push   0x100558c8
10002758:	push   0x4
1000275a:	push   0x100558f0
1000275f:	mov    DWORD PTR [esp+0x38],0x2
10002767:	call   0x10003540
1000276c:	push   eax
1000276d:	lea    edx,[esp+0x2c]
10002771:	push   edi
10002772:	push   edx
10002773:	call   0x100030b0
10002778:	add    esp,0x24
1000277b:	mov    BYTE PTR [esp+0x20],0x3
10002780:	mov    eax,DWORD PTR [eax]
10002782:	mov    ecx,DWORD PTR [eax-0xc]
10002785:	push   ecx
10002786:	push   eax
10002787:	mov    ecx,esi
10002789:	call   0x10003bc0
1000278e:	mov    BYTE PTR [esp+0x20],0x2
10002793:	mov    eax,DWORD PTR [esp+0x10]
10002797:	add    eax,0xfffffff0
1000279a:	lea    ecx,[eax+0xc]
1000279d:	or     edx,0xffffffff
100027a0:	lock xadd DWORD PTR [ecx],edx
100027a4:	dec    edx
100027a5:	test   edx,edx
100027a7:	jg     0x100027b3
100027a9:	mov    ecx,DWORD PTR [eax]
100027ab:	mov    edx,DWORD PTR [ecx]
100027ad:	push   eax
100027ae:	mov    eax,DWORD PTR [edx+0x4]
100027b1:	call   eax
100027b3:	mov    BYTE PTR [esp+0x20],0x0
100027b8:	mov    eax,DWORD PTR [esp+0x14]
100027bc:	add    eax,0xfffffff0
100027bf:	lea    ecx,[eax+0xc]
100027c2:	or     edx,0xffffffff
100027c5:	lock xadd DWORD PTR [ecx],edx
100027c9:	dec    edx
100027ca:	test   edx,edx
100027cc:	jg     0x100027d8
100027ce:	mov    ecx,DWORD PTR [eax]
100027d0:	mov    edx,DWORD PTR [ecx]
100027d2:	push   eax
100027d3:	mov    eax,DWORD PTR [edx+0x4]
100027d6:	call   eax
100027d8:	mov    eax,esi
100027da:	mov    ecx,DWORD PTR [esp+0x18]
100027de:	mov    DWORD PTR fs:0x0,ecx
100027e5:	pop    ecx
100027e6:	pop    edi
100027e7:	pop    esi
100027e8:	add    esp,0x18
100027eb:	ret    
100027ec:	int3   
100027ed:	int3   
100027ee:	int3   
100027ef:	int3   
100027f0:	push   0xffffffff
100027f2:	push   0x1002b741
100027f7:	mov    eax,fs:0x0
100027fd:	push   eax
100027fe:	sub    esp,0xc
10002801:	push   esi
10002802:	push   edi
10002803:	mov    eax,ds:0x10064694
10002808:	xor    eax,esp
1000280a:	push   eax
1000280b:	lea    eax,[esp+0x18]
1000280f:	mov    fs:0x0,eax
10002815:	xor    edi,edi
10002817:	mov    DWORD PTR [esp+0x20],edi
1000281b:	mov    DWORD PTR [esp+0xc],edi
1000281f:	mov    eax,ds:0x10066120
10002824:	mov    edx,DWORD PTR [eax+0xc]
10002827:	mov    ecx,0x10066120
1000282c:	call   edx
1000282e:	mov    esi,DWORD PTR [esp+0x28]
10002832:	add    eax,0x10
10002835:	mov    DWORD PTR [esi],eax
10002837:	cmp    BYTE PTR [esp+0x2c],0x0
1000283c:	mov    DWORD PTR [esp+0x20],edi
10002840:	mov    DWORD PTR [esp+0xc],0x1
10002848:	je     0x10002893
1000284a:	lea    eax,[esp+0x10]
1000284e:	push   edi
1000284f:	push   eax
10002850:	call   0x10001b80
10002855:	add    esp,0x8
10002858:	mov    DWORD PTR [esp+0x20],0x1
10002860:	mov    eax,DWORD PTR [eax]
10002862:	mov    ecx,DWORD PTR [eax-0xc]
10002865:	push   ecx
10002866:	push   eax
10002867:	mov    ecx,esi
10002869:	call   0x10003bc0
1000286e:	mov    BYTE PTR [esp+0x20],0x0
10002873:	mov    eax,DWORD PTR [esp+0x10]
10002877:	add    eax,0xfffffff0
1000287a:	lea    ecx,[eax+0xc]
1000287d:	or     edx,0xffffffff
10002880:	lock xadd DWORD PTR [ecx],edx
10002884:	dec    edx
10002885:	test   edx,edx
10002887:	jg     0x10002893
10002889:	mov    ecx,DWORD PTR [eax]
1000288b:	mov    edx,DWORD PTR [ecx]
1000288d:	push   eax
1000288e:	mov    eax,DWORD PTR [edx+0x4]
10002891:	call   eax
10002893:	push   0x1
10002895:	lea    ecx,[esp+0x18]
10002899:	push   0x3
1000289b:	push   ecx
1000289c:	call   0x10002050
100028a1:	mov    edi,eax
100028a3:	push   0x100558fc
100028a8:	push   0x4
100028aa:	push   0x100558f0
100028af:	mov    DWORD PTR [esp+0x38],0x2
100028b7:	call   0x10003540
100028bc:	push   eax
100028bd:	lea    edx,[esp+0x2c]
100028c1:	push   edi
100028c2:	push   edx
100028c3:	call   0x100030b0
100028c8:	add    esp,0x24
100028cb:	mov    BYTE PTR [esp+0x20],0x3
100028d0:	mov    eax,DWORD PTR [eax]
100028d2:	mov    ecx,DWORD PTR [eax-0xc]
100028d5:	push   ecx
100028d6:	push   eax
100028d7:	mov    ecx,esi
100028d9:	call   0x10003bc0
100028de:	mov    BYTE PTR [esp+0x20],0x2
100028e3:	mov    eax,DWORD PTR [esp+0x10]
100028e7:	add    eax,0xfffffff0
100028ea:	lea    ecx,[eax+0xc]
100028ed:	or     edx,0xffffffff
100028f0:	lock xadd DWORD PTR [ecx],edx
100028f4:	dec    edx
100028f5:	test   edx,edx
100028f7:	jg     0x10002903
100028f9:	mov    ecx,DWORD PTR [eax]
100028fb:	mov    edx,DWORD PTR [ecx]
100028fd:	push   eax
100028fe:	mov    eax,DWORD PTR [edx+0x4]
10002901:	call   eax
10002903:	mov    BYTE PTR [esp+0x20],0x0
10002908:	mov    eax,DWORD PTR [esp+0x14]
1000290c:	add    eax,0xfffffff0
1000290f:	lea    ecx,[eax+0xc]
10002912:	or     edx,0xffffffff
10002915:	lock xadd DWORD PTR [ecx],edx
10002919:	dec    edx
1000291a:	test   edx,edx
1000291c:	jg     0x10002928
1000291e:	mov    ecx,DWORD PTR [eax]
10002920:	mov    edx,DWORD PTR [ecx]
10002922:	push   eax
10002923:	mov    eax,DWORD PTR [edx+0x4]
10002926:	call   eax
10002928:	mov    eax,esi
1000292a:	mov    ecx,DWORD PTR [esp+0x18]
1000292e:	mov    DWORD PTR fs:0x0,ecx
10002935:	pop    ecx
10002936:	pop    edi
10002937:	pop    esi
10002938:	add    esp,0x18
1000293b:	ret    
1000293c:	int3   
1000293d:	int3   
1000293e:	int3   
1000293f:	int3   
10002940:	push   0xffffffff
10002942:	push   0x1002a7b3
10002947:	mov    eax,fs:0x0
1000294d:	push   eax
1000294e:	sub    esp,0x434
10002954:	mov    eax,ds:0x10064694
10002959:	xor    eax,esp
1000295b:	mov    DWORD PTR [esp+0x430],eax
10002962:	push   ebx
10002963:	push   ebp
10002964:	push   esi
10002965:	push   edi
10002966:	mov    eax,ds:0x10064694
1000296b:	xor    eax,esp
1000296d:	push   eax
1000296e:	lea    eax,[esp+0x448]
10002975:	mov    fs:0x0,eax
1000297b:	mov    eax,DWORD PTR [esp+0x458]
10002982:	push   eax
10002983:	push   0x18
10002985:	mov    DWORD PTR [esp+0x458],0x0
10002990:	call   0x10015390
10002995:	mov    esi,eax
10002997:	mov    DWORD PTR [esp+0x18],esi
1000299b:	or     ebp,0xffffffff
1000299e:	cmp    esi,ebp
100029a0:	mov    BYTE PTR [esp+0x450],0x1
100029a8:	jne    0x100029d6
100029aa:	call   DWORD PTR ds:0x1002c07c
100029b0:	push   ebp
100029b1:	mov    esi,eax
100029b3:	call   DWORD PTR ds:0x1002c058
100029b9:	push   esi
100029ba:	call   DWORD PTR ds:0x1002c078
100029c0:	mov    DWORD PTR [esp+0x450],ebp
100029c7:	mov    eax,DWORD PTR [esp+0x45c]
100029ce:	add    eax,0xfffffff0
100029d1:	jmp    0x10002a92
100029d6:	lea    ecx,[esp+0x1c]
100029da:	push   ecx
100029db:	push   esi
100029dc:	mov    DWORD PTR [esp+0x24],0x428
100029e4:	call   0x10015396
100029e9:	test   eax,eax
100029eb:	jne    0x10002a22
100029ed:	test   esi,esi
100029ef:	je     0x10002a07
100029f1:	call   DWORD PTR ds:0x1002c07c
100029f7:	push   esi
100029f8:	mov    edi,eax
100029fa:	call   DWORD PTR ds:0x1002c058
10002a00:	push   edi
10002a01:	call   DWORD PTR ds:0x1002c078
10002a07:	mov    DWORD PTR [esp+0x450],ebp
10002a0e:	mov    eax,DWORD PTR [esp+0x45c]
10002a15:	add    eax,0xfffffff0
10002a18:	lea    edx,[eax+0xc]
10002a1b:	lock xadd DWORD PTR [edx],ebp
10002a1f:	dec    ebp
10002a20:	jmp    0x10002a9a
10002a22:	mov    edi,DWORD PTR [esp+0x45c]
10002a29:	lea    esp,[esp+0x0]
10002a30:	cmp    DWORD PTR [edi-0x4],0x1
10002a34:	jle    0x10002a4d
10002a36:	mov    ecx,DWORD PTR [edi-0xc]
10002a39:	push   ecx
10002a3a:	lea    ecx,[esp+0x460]
10002a41:	call   0x10003d10
10002a46:	mov    edi,DWORD PTR [esp+0x45c]
10002a4d:	lea    edx,[esp+0x3c]
10002a51:	push   edi
10002a52:	push   edx
10002a53:	call   0x1001673b
10002a58:	add    esp,0x8
10002a5b:	test   eax,eax
10002a5d:	je     0x10002ad2
10002a5f:	lea    eax,[esp+0x1c]
10002a63:	push   eax
10002a64:	push   esi
10002a65:	call   0x1001539c
10002a6a:	test   eax,eax
10002a6c:	jne    0x10002a30
10002a6e:	test   esi,esi
10002a70:	je     0x10002a88
10002a72:	call   DWORD PTR ds:0x1002c07c
10002a78:	push   esi
10002a79:	mov    ebx,eax
10002a7b:	call   DWORD PTR ds:0x1002c058
10002a81:	push   ebx
10002a82:	call   DWORD PTR ds:0x1002c078
10002a88:	mov    DWORD PTR [esp+0x450],ebp
10002a8f:	lea    eax,[edi-0x10]
10002a92:	lea    ecx,[eax+0xc]
10002a95:	lock xadd DWORD PTR [ecx],ebp
10002a99:	dec    ebp
10002a9a:	test   ebp,ebp
10002a9c:	jg     0x10002aa8
10002a9e:	mov    ecx,DWORD PTR [eax]
10002aa0:	mov    edx,DWORD PTR [ecx]
10002aa2:	push   eax
10002aa3:	mov    eax,DWORD PTR [edx+0x4]
10002aa6:	call   eax
10002aa8:	xor    al,al
10002aaa:	mov    ecx,DWORD PTR [esp+0x448]
10002ab1:	mov    DWORD PTR fs:0x0,ecx
10002ab8:	pop    ecx
10002ab9:	pop    edi
10002aba:	pop    esi
10002abb:	pop    ebp
10002abc:	pop    ebx
10002abd:	mov    ecx,DWORD PTR [esp+0x430]
10002ac4:	xor    ecx,esp
10002ac6:	call   0x10015adb
10002acb:	add    esp,0x440
10002ad1:	ret    
10002ad2:	test   esi,esi
10002ad4:	je     0x10002aec
10002ad6:	call   DWORD PTR ds:0x1002c07c
10002adc:	push   esi
10002add:	mov    ebx,eax
10002adf:	call   DWORD PTR ds:0x1002c058
10002ae5:	push   ebx
10002ae6:	call   DWORD PTR ds:0x1002c078
10002aec:	lea    eax,[edi-0x10]
10002aef:	mov    DWORD PTR [esp+0x450],ebp
10002af6:	lea    ecx,[eax+0xc]
10002af9:	lock xadd DWORD PTR [ecx],ebp
10002afd:	dec    ebp
10002afe:	test   ebp,ebp
10002b00:	jg     0x10002b0c
10002b02:	mov    ecx,DWORD PTR [eax]
10002b04:	mov    edx,DWORD PTR [ecx]
10002b06:	push   eax
10002b07:	mov    eax,DWORD PTR [edx+0x4]
10002b0a:	call   eax
10002b0c:	mov    al,0x1
10002b0e:	jmp    0x10002aaa
10002b10:	xor    ax,ax
10002b13:	ret    
10002b14:	int3   
10002b15:	int3   
10002b16:	int3   
10002b17:	int3   
10002b18:	int3   
10002b19:	int3   
10002b1a:	int3   
10002b1b:	int3   
10002b1c:	int3   
10002b1d:	int3   
10002b1e:	int3   
10002b1f:	int3   
10002b20:	mov    eax,ecx
10002b22:	xor    ecx,ecx
10002b24:	mov    DWORD PTR [eax+0x18],0xf
10002b2b:	mov    DWORD PTR [eax+0x14],ecx
10002b2e:	mov    BYTE PTR [eax+0x4],cl
10002b31:	ret    
10002b32:	int3   
10002b33:	int3   
10002b34:	int3   
10002b35:	int3   
10002b36:	int3   
10002b37:	int3   
10002b38:	int3   
10002b39:	int3   
10002b3a:	int3   
10002b3b:	int3   
10002b3c:	int3   
10002b3d:	int3   
10002b3e:	int3   
10002b3f:	int3   
10002b40:	mov    edx,DWORD PTR [esp+0x4]
10002b44:	push   esi
10002b45:	mov    esi,ecx
10002b47:	mov    eax,edx
10002b49:	push   edi
10002b4a:	mov    DWORD PTR [esi+0x18],0xf
10002b51:	mov    DWORD PTR [esi+0x14],0x0
10002b58:	mov    BYTE PTR [esi+0x4],0x0
10002b5c:	lea    edi,[eax+0x1]
10002b5f:	nop
10002b60:	mov    cl,BYTE PTR [eax]
10002b62:	add    eax,0x1
10002b65:	test   cl,cl
10002b67:	jne    0x10002b60
10002b69:	sub    eax,edi
10002b6b:	push   eax
10002b6c:	push   edx
10002b6d:	mov    ecx,esi
10002b6f:	call   0x10003900
10002b74:	pop    edi
10002b75:	mov    eax,esi
10002b77:	pop    esi
10002b78:	ret    0x4
10002b7b:	int3   
10002b7c:	int3   
10002b7d:	int3   
10002b7e:	int3   
10002b7f:	int3   
10002b80:	push   esi
10002b81:	mov    esi,ecx
10002b83:	cmp    DWORD PTR [esi+0x18],0x10
10002b87:	jb     0x10002b95
10002b89:	mov    eax,DWORD PTR [esi+0x4]
10002b8c:	push   eax
10002b8d:	call   0x10015ad6
10002b92:	add    esp,0x4
10002b95:	xor    eax,eax
10002b97:	mov    DWORD PTR [esi+0x18],0xf
10002b9e:	mov    DWORD PTR [esi+0x14],eax
10002ba1:	mov    BYTE PTR [esi+0x4],al
10002ba4:	pop    esi
10002ba5:	ret    
10002ba6:	int3   
10002ba7:	int3   
10002ba8:	int3   
10002ba9:	int3   
10002baa:	int3   
10002bab:	int3   
10002bac:	int3   
10002bad:	int3   
10002bae:	int3   
10002baf:	int3   
10002bb0:	mov    eax,DWORD PTR [esp+0x4]
10002bb4:	push   0xffffffff
10002bb6:	push   0x0
10002bb8:	push   eax
10002bb9:	call   0x10003820
10002bbe:	ret    0x4
10002bc1:	int3   
10002bc2:	int3   
10002bc3:	int3   
10002bc4:	int3   
10002bc5:	int3   
10002bc6:	int3   
10002bc7:	int3   
10002bc8:	int3   
10002bc9:	int3   
10002bca:	int3   
10002bcb:	int3   
10002bcc:	int3   
10002bcd:	int3   
10002bce:	int3   
10002bcf:	int3   
10002bd0:	push   esi
10002bd1:	mov    esi,DWORD PTR [esp+0x8]
10002bd5:	mov    eax,esi
10002bd7:	push   edi
10002bd8:	lea    edi,[eax+0x1]
10002bdb:	jmp    0x10002be0
10002bdd:	lea    ecx,[ecx+0x0]
10002be0:	mov    dl,BYTE PTR [eax]
10002be2:	add    eax,0x1
10002be5:	test   dl,dl
10002be7:	jne    0x10002be0
10002be9:	sub    eax,edi
10002beb:	push   eax
10002bec:	push   esi
10002bed:	call   0x10003900
10002bf2:	pop    edi
10002bf3:	pop    esi
10002bf4:	ret    0x4
10002bf7:	int3   
10002bf8:	int3   
10002bf9:	int3   
10002bfa:	int3   
10002bfb:	int3   
10002bfc:	int3   
10002bfd:	int3   
10002bfe:	int3   
10002bff:	int3   
10002c00:	mov    ecx,DWORD PTR [esp+0x4]
10002c04:	push   ebx
10002c05:	push   ebp
10002c06:	mov    ebp,DWORD PTR [esp+0x10]
10002c0a:	push   esi
10002c0b:	mov    esi,eax
10002c0d:	mov    edx,DWORD PTR [esi+0x18]
10002c10:	cmp    edx,0x10
10002c13:	push   edi
10002c14:	lea    ebx,[esi+0x4]
10002c17:	jb     0x10002c1d
10002c19:	mov    eax,DWORD PTR [ebx]
10002c1b:	jmp    0x10002c1f
10002c1d:	mov    eax,ebx
10002c1f:	cmp    ecx,eax
10002c21:	jb     0x10002c50
10002c23:	cmp    edx,0x10
10002c26:	jb     0x10002c2c
10002c28:	mov    eax,DWORD PTR [ebx]
10002c2a:	jmp    0x10002c2e
10002c2c:	mov    eax,ebx
10002c2e:	mov    edi,DWORD PTR [esi+0x14]
10002c31:	add    edi,eax
10002c33:	cmp    edi,ecx
10002c35:	jbe    0x10002c50
10002c37:	cmp    edx,0x10
10002c3a:	jb     0x10002c3e
10002c3c:	mov    ebx,DWORD PTR [ebx]
10002c3e:	sub    ecx,ebx
10002c40:	push   ecx
10002c41:	push   esi
10002c42:	mov    eax,ebp
10002c44:	call   0x10003730
10002c49:	pop    edi
10002c4a:	pop    esi
10002c4b:	pop    ebp
10002c4c:	pop    ebx
10002c4d:	ret    0x8
10002c50:	mov    eax,DWORD PTR [esi+0x14]
10002c53:	or     ecx,0xffffffff
10002c56:	sub    ecx,eax
10002c58:	cmp    ecx,ebp
10002c5a:	jbe    0x10002c63
10002c5c:	lea    edx,[eax+ebp*1]
10002c5f:	cmp    edx,eax
10002c61:	jae    0x10002c68
10002c63:	call   0x10015977
10002c68:	test   ebp,ebp
10002c6a:	jbe    0x10002ce0
10002c6c:	mov    edi,DWORD PTR [esi+0x14]
10002c6f:	add    edi,ebp
10002c71:	cmp    edi,0xfffffffe
10002c74:	jbe    0x10002c7b
10002c76:	call   0x10015977
10002c7b:	mov    eax,DWORD PTR [esi+0x18]
10002c7e:	cmp    eax,edi
10002c80:	jae    0x10002c9e
10002c82:	mov    eax,DWORD PTR [esi+0x14]
10002c85:	push   eax
10002c86:	push   edi
10002c87:	mov    ecx,esi
10002c89:	call   0x10004600
10002c8e:	test   edi,edi
10002c90:	jbe    0x10002ce0
10002c92:	mov    eax,DWORD PTR [esi+0x18]
10002c95:	cmp    eax,0x10
10002c98:	jb     0x10002cb8
10002c9a:	mov    edx,DWORD PTR [ebx]
10002c9c:	jmp    0x10002cba
10002c9e:	test   edi,edi
10002ca0:	jne    0x10002c90
10002ca2:	cmp    eax,0x10
10002ca5:	mov    DWORD PTR [esi+0x14],edi
10002ca8:	jb     0x10002cac
10002caa:	mov    ebx,DWORD PTR [ebx]
10002cac:	pop    edi
10002cad:	mov    eax,esi
10002caf:	pop    esi
10002cb0:	pop    ebp
10002cb1:	mov    BYTE PTR [ebx],0x0
10002cb4:	pop    ebx
10002cb5:	ret    0x8
10002cb8:	mov    edx,ebx
10002cba:	mov    ecx,DWORD PTR [esi+0x14]
10002cbd:	push   ebp
10002cbe:	mov    ebp,DWORD PTR [esp+0x18]
10002cc2:	sub    eax,ecx
10002cc4:	push   ebp
10002cc5:	push   eax
10002cc6:	add    ecx,edx
10002cc8:	push   ecx
10002cc9:	call   0x10016153
10002cce:	add    esp,0x10
10002cd1:	cmp    DWORD PTR [esi+0x18],0x10
10002cd5:	mov    DWORD PTR [esi+0x14],edi
10002cd8:	jb     0x10002cdc
10002cda:	mov    ebx,DWORD PTR [ebx]
10002cdc:	mov    BYTE PTR [ebx+edi*1],0x0
10002ce0:	pop    edi
10002ce1:	mov    eax,esi
10002ce3:	pop    esi
10002ce4:	pop    ebp
10002ce5:	pop    ebx
10002ce6:	ret    0x8
10002ce9:	int3   
10002cea:	int3   
10002ceb:	int3   
10002cec:	int3   
10002ced:	int3   
10002cee:	int3   
10002cef:	int3   
10002cf0:	cmp    DWORD PTR [ecx+0x18],0x10
10002cf4:	jb     0x10002cfa
10002cf6:	mov    eax,DWORD PTR [ecx+0x4]
10002cf9:	ret    
10002cfa:	lea    eax,[ecx+0x4]
10002cfd:	ret    
10002cfe:	int3   
10002cff:	int3   
10002d00:	mov    eax,DWORD PTR [ecx+0x14]
10002d03:	ret    
10002d04:	int3   
10002d05:	int3   
10002d06:	int3   
10002d07:	int3   
10002d08:	int3   
10002d09:	int3   
10002d0a:	int3   
10002d0b:	int3   
10002d0c:	int3   
10002d0d:	int3   
10002d0e:	int3   
10002d0f:	int3   
10002d10:	mov    eax,ds:0x10066120
10002d15:	mov    edx,DWORD PTR [eax+0xc]
10002d18:	push   esi
10002d19:	mov    esi,ecx
10002d1b:	mov    ecx,0x10066120
10002d20:	call   edx
10002d22:	add    eax,0x10
10002d25:	mov    DWORD PTR [esi],eax
10002d27:	mov    eax,esi
10002d29:	pop    esi
10002d2a:	ret    
10002d2b:	int3   
10002d2c:	int3   
10002d2d:	int3   
10002d2e:	int3   
10002d2f:	int3   
10002d30:	mov    eax,DWORD PTR [esp+0x4]
10002d34:	mov    eax,DWORD PTR [eax]
10002d36:	push   esi
10002d37:	sub    eax,0x10
10002d3a:	push   eax
10002d3b:	mov    esi,ecx
10002d3d:	call   0x10004970
10002d42:	add    eax,0x10
10002d45:	mov    DWORD PTR [esi],eax
10002d47:	add    esp,0x4
10002d4a:	mov    eax,esi
10002d4c:	pop    esi
10002d4d:	ret    0x4
10002d50:	push   0xffffffff
10002d52:	push   0x1002ac18
10002d57:	mov    eax,fs:0x0
10002d5d:	push   eax
10002d5e:	push   ecx
10002d5f:	push   esi
10002d60:	push   edi
10002d61:	mov    eax,ds:0x10064694
10002d66:	xor    eax,esp
10002d68:	push   eax
10002d69:	lea    eax,[esp+0x10]
10002d6d:	mov    fs:0x0,eax
10002d73:	mov    edi,ecx
10002d75:	mov    DWORD PTR [esp+0xc],edi
10002d79:	mov    eax,ds:0x10066120
10002d7e:	mov    edx,DWORD PTR [eax+0xc]
10002d81:	mov    ecx,0x10066120
10002d86:	call   edx
10002d88:	add    eax,0x10
10002d8b:	mov    DWORD PTR [edi],eax
10002d8d:	mov    edx,DWORD PTR [esp+0x20]
10002d91:	test   edx,edx
10002d93:	mov    DWORD PTR [esp+0x18],0x0
10002d9b:	je     0x10002dc2
10002d9d:	test   edx,0xffff0000
10002da3:	jne    0x10002dc6
10002da5:	movzx  esi,dx
10002da8:	push   0x0
10002daa:	push   esi
10002dab:	call   0x100011b0
10002db0:	add    esp,0x8
10002db3:	test   eax,eax
10002db5:	je     0x10002de8
10002db7:	push   esi
10002db8:	push   eax
10002db9:	mov    ecx,edi
10002dbb:	call   0x10005150
10002dc0:	jmp    0x10002de8
10002dc2:	xor    eax,eax
10002dc4:	jmp    0x10002ddf
10002dc6:	mov    eax,edx
10002dc8:	lea    esi,[eax+0x2]
10002dcb:	jmp    0x10002dd0
10002dcd:	lea    ecx,[ecx+0x0]
10002dd0:	mov    cx,WORD PTR [eax]
10002dd3:	add    eax,0x2
10002dd6:	test   cx,cx
10002dd9:	jne    0x10002dd0
10002ddb:	sub    eax,esi
10002ddd:	sar    eax,1
10002ddf:	push   eax
10002de0:	push   edx
10002de1:	mov    ecx,edi
10002de3:	call   0x10004870
10002de8:	mov    eax,edi
10002dea:	mov    ecx,DWORD PTR [esp+0x10]
10002dee:	mov    DWORD PTR fs:0x0,ecx
10002df5:	pop    ecx
10002df6:	pop    edi
10002df7:	pop    esi
10002df8:	add    esp,0x10
10002dfb:	ret    0x4
10002dfe:	int3   
10002dff:	int3   
10002e00:	push   0xffffffff
10002e02:	push   0x1002abe8
10002e07:	mov    eax,fs:0x0
10002e0d:	push   eax
10002e0e:	push   ecx
10002e0f:	push   esi
10002e10:	push   edi
10002e11:	mov    eax,ds:0x10064694
10002e16:	xor    eax,esp
10002e18:	push   eax
10002e19:	lea    eax,[esp+0x10]
10002e1d:	mov    fs:0x0,eax
10002e23:	mov    esi,ecx
10002e25:	mov    DWORD PTR [esp+0xc],esi
10002e29:	mov    eax,ds:0x10066120
10002e2e:	mov    edx,DWORD PTR [eax+0xc]
10002e31:	mov    ecx,0x10066120
10002e36:	call   edx
10002e38:	add    eax,0x10
10002e3b:	mov    DWORD PTR [esi],eax
10002e3d:	mov    eax,DWORD PTR [esp+0x20]
10002e41:	test   eax,eax
10002e43:	mov    DWORD PTR [esp+0x18],0x0
10002e4b:	je     0x10002e71
10002e4d:	test   eax,0xffff0000
10002e52:	jne    0x10002e71
10002e54:	movzx  edi,ax
10002e57:	push   0x0
10002e59:	push   edi
10002e5a:	call   0x100011b0
10002e5f:	add    esp,0x8
10002e62:	test   eax,eax
10002e64:	je     0x10002e79
10002e66:	push   edi
10002e67:	push   eax
10002e68:	mov    ecx,esi
10002e6a:	call   0x10005150
10002e6f:	jmp    0x10002e79
10002e71:	push   eax
10002e72:	mov    ecx,esi
10002e74:	call   0x10003aa0
10002e79:	mov    eax,esi
10002e7b:	mov    ecx,DWORD PTR [esp+0x10]
10002e7f:	mov    DWORD PTR fs:0x0,ecx
10002e86:	pop    ecx
10002e87:	pop    edi
10002e88:	pop    esi
10002e89:	add    esp,0x10
10002e8c:	ret    0x4
10002e8f:	int3   
10002e90:	mov    eax,DWORD PTR [ecx]
10002e92:	sub    eax,0x10
10002e95:	lea    ecx,[eax+0xc]
10002e98:	or     edx,0xffffffff
10002e9b:	lock xadd DWORD PTR [ecx],edx
10002e9f:	dec    edx
10002ea0:	test   edx,edx
10002ea2:	jg     0x10002eae
10002ea4:	mov    ecx,DWORD PTR [eax]
10002ea6:	mov    edx,DWORD PTR [ecx]
10002ea8:	push   eax
10002ea9:	mov    eax,DWORD PTR [edx+0x4]
10002eac:	call   eax
10002eae:	ret    
10002eaf:	int3   
10002eb0:	mov    eax,DWORD PTR [esp+0x4]
10002eb4:	push   esi
10002eb5:	push   eax
10002eb6:	mov    esi,ecx
10002eb8:	call   0x10003b40
10002ebd:	mov    eax,esi
10002ebf:	pop    esi
10002ec0:	ret    0x4
10002ec3:	int3   
10002ec4:	int3   
10002ec5:	int3   
10002ec6:	int3   
10002ec7:	int3   
10002ec8:	int3   
10002ec9:	int3   
10002eca:	int3   
10002ecb:	int3   
10002ecc:	int3   
10002ecd:	int3   
10002ece:	int3   
10002ecf:	int3   
10002ed0:	mov    edx,DWORD PTR [esp+0x4]
10002ed4:	test   edx,edx
10002ed6:	push   edi
10002ed7:	mov    edi,ecx
10002ed9:	jne    0x10002eea
10002edb:	xor    eax,eax
10002edd:	push   eax
10002ede:	push   edx
10002edf:	call   0x10003bc0
10002ee4:	mov    eax,edi
10002ee6:	pop    edi
10002ee7:	ret    0x4
10002eea:	mov    eax,edx
10002eec:	push   esi
10002eed:	lea    esi,[eax+0x2]
10002ef0:	mov    cx,WORD PTR [eax]
10002ef3:	add    eax,0x2
10002ef6:	test   cx,cx
10002ef9:	jne    0x10002ef0
10002efb:	sub    eax,esi
10002efd:	pop    esi
10002efe:	sar    eax,1
10002f00:	push   eax
10002f01:	push   edx
10002f02:	mov    ecx,edi
10002f04:	call   0x10003bc0
10002f09:	mov    eax,edi
10002f0b:	pop    edi
10002f0c:	ret    0x4
10002f0f:	int3   
10002f10:	mov    eax,DWORD PTR [edi]
10002f12:	mov    edx,DWORD PTR [eax-0x8]
10002f15:	push   ebx
10002f16:	mov    ebx,DWORD PTR [eax-0xc]
10002f19:	push   esi
10002f1a:	mov    ecx,0x1
10002f1f:	sub    ecx,DWORD PTR [eax-0x4]
10002f22:	lea    esi,[ebx+0x1]
10002f25:	sub    edx,esi
10002f27:	or     ecx,edx
10002f29:	jge    0x10002f33
10002f2b:	push   esi
10002f2c:	mov    ecx,edi
10002f2e:	call   0x10004920
10002f33:	test   esi,esi
10002f35:	mov    eax,DWORD PTR [edi]
10002f37:	mov    cx,WORD PTR [esp+0xc]
10002f3c:	mov    WORD PTR [eax+ebx*2],cx
10002f40:	jl     0x10002f5b
10002f42:	mov    eax,DWORD PTR [edi]
10002f44:	cmp    esi,DWORD PTR [eax-0x8]
10002f47:	jg     0x10002f5b
10002f49:	mov    DWORD PTR [eax-0xc],esi
10002f4c:	mov    edx,DWORD PTR [edi]
10002f4e:	mov    WORD PTR [edx+esi*2],0x0
10002f54:	pop    esi
10002f55:	mov    eax,edi
10002f57:	pop    ebx
10002f58:	ret    0x4
10002f5b:	push   0x80070057
10002f60:	call   0x10001050
10002f65:	int3   
10002f66:	int3   
10002f67:	int3   
10002f68:	int3   
10002f69:	int3   
10002f6a:	int3   
10002f6b:	int3   
10002f6c:	int3   
10002f6d:	int3   
10002f6e:	int3   
10002f6f:	int3   
10002f70:	push   esi
10002f71:	mov    esi,ecx
10002f73:	mov    ecx,DWORD PTR [esp+0x8]
10002f77:	mov    eax,DWORD PTR [esi]
10002f79:	push   ecx
10002f7a:	push   eax
10002f7b:	call   0x100172a4
10002f80:	add    esp,0x8
10002f83:	test   eax,eax
10002f85:	jne    0x10002f8e
10002f87:	or     eax,0xffffffff
10002f8a:	pop    esi
10002f8b:	ret    0x4
10002f8e:	sub    eax,DWORD PTR [esi]
10002f90:	pop    esi
10002f91:	sar    eax,1
10002f93:	ret    0x4
10002f96:	int3   
10002f97:	int3   
10002f98:	int3   
10002f99:	int3   
10002f9a:	int3   
10002f9b:	int3   
10002f9c:	int3   
10002f9d:	int3   
10002f9e:	int3   
10002f9f:	int3   
10002fa0:	push   ecx
10002fa1:	push   ebx
10002fa2:	push   esi
10002fa3:	push   edi
10002fa4:	mov    edi,DWORD PTR [esp+0x18]
10002fa8:	test   edi,edi
10002faa:	mov    ebx,ecx
10002fac:	mov    DWORD PTR [esp+0xc],0x0
10002fb4:	jge    0x10002fb8
10002fb6:	xor    edi,edi
10002fb8:	mov    eax,DWORD PTR [ebx]
10002fba:	mov    esi,DWORD PTR [eax-0xc]
10002fbd:	cmp    edi,esi
10002fbf:	jl     0x10002fdf
10002fc1:	add    eax,0xfffffff0
10002fc4:	push   eax
10002fc5:	call   0x10004970
10002fca:	add    esp,0x4
10002fcd:	mov    ecx,eax
10002fcf:	mov    eax,DWORD PTR [esp+0x14]
10002fd3:	pop    edi
10002fd4:	add    ecx,0x10
10002fd7:	pop    esi
10002fd8:	mov    DWORD PTR [eax],ecx
10002fda:	pop    ebx
10002fdb:	pop    ecx
10002fdc:	ret    0x8
10002fdf:	mov    eax,DWORD PTR [eax-0x10]
10002fe2:	test   eax,eax
10002fe4:	je     0x10002ff3
10002fe6:	mov    edx,DWORD PTR [eax]
10002fe8:	mov    ecx,eax
10002fea:	mov    eax,DWORD PTR [edx+0x10]
10002fed:	call   eax
10002fef:	test   eax,eax
10002ff1:	jne    0x10003003
10002ff3:	mov    edx,DWORD PTR ds:0x10066120
10002ff9:	mov    eax,DWORD PTR [edx+0x10]
10002ffc:	mov    ecx,0x10066120
10003001:	call   eax
10003003:	mov    ecx,DWORD PTR [ebx]
10003005:	sub    esi,edi
10003007:	push   eax
10003008:	lea    edx,[ecx+esi*2]
1000300b:	mov    esi,DWORD PTR [esp+0x18]
1000300f:	push   edi
10003010:	push   edx
10003011:	mov    ecx,esi
10003013:	call   0x10004780
10003018:	pop    edi
10003019:	mov    eax,esi
1000301b:	pop    esi
1000301c:	pop    ebx
1000301d:	pop    ecx
1000301e:	ret    0x8
10003021:	int3   
10003022:	int3   
10003023:	int3   
10003024:	int3   
10003025:	int3   
10003026:	int3   
10003027:	int3   
10003028:	int3   
10003029:	int3   
1000302a:	int3   
1000302b:	int3   
1000302c:	int3   
1000302d:	int3   
1000302e:	int3   
1000302f:	int3   
10003030:	push   ecx
10003031:	push   esi
10003032:	mov    esi,DWORD PTR [esp+0x10]
10003036:	test   esi,esi
10003038:	push   edi
10003039:	mov    edi,ecx
1000303b:	mov    DWORD PTR [esp+0x8],0x0
10003043:	jge    0x10003047
10003045:	xor    esi,esi
10003047:	mov    eax,DWORD PTR [edi]
10003049:	cmp    esi,DWORD PTR [eax-0xc]
1000304c:	jl     0x1000306b
1000304e:	add    eax,0xfffffff0
10003051:	push   eax
10003052:	call   0x10004970
10003057:	add    esp,0x4
1000305a:	mov    ecx,eax
1000305c:	mov    eax,DWORD PTR [esp+0x10]
10003060:	add    ecx,0x10
10003063:	pop    edi
10003064:	mov    DWORD PTR [eax],ecx
10003066:	pop    esi
10003067:	pop    ecx
10003068:	ret    0x8
1000306b:	mov    ecx,DWORD PTR [eax-0x10]
1000306e:	test   ecx,ecx
10003070:	je     0x1000307d
10003072:	mov    edx,DWORD PTR [ecx]
10003074:	mov    eax,DWORD PTR [edx+0x10]
10003077:	call   eax
10003079:	test   eax,eax
1000307b:	jne    0x1000308d
1000307d:	mov    edx,DWORD PTR ds:0x10066120
10003083:	mov    eax,DWORD PTR [edx+0x10]
10003086:	mov    ecx,0x10066120
1000308b:	call   eax
1000308d:	mov    ecx,DWORD PTR [edi]
1000308f:	push   eax
10003090:	push   esi
10003091:	mov    esi,DWORD PTR [esp+0x18]
10003095:	push   ecx
10003096:	mov    ecx,esi
10003098:	call   0x10004780
1000309d:	pop    edi
1000309e:	mov    eax,esi
100030a0:	pop    esi
100030a1:	pop    ecx
100030a2:	ret    0x8
100030a5:	int3   
100030a6:	int3   
100030a7:	int3   
100030a8:	int3   
100030a9:	int3   
100030aa:	int3   
100030ab:	int3   
100030ac:	int3   
100030ad:	int3   
100030ae:	int3   
100030af:	int3   
100030b0:	push   0xffffffff
100030b2:	push   0x1002aab9
100030b7:	mov    eax,fs:0x0
100030bd:	push   eax
100030be:	push   ecx
100030bf:	push   ebp
100030c0:	push   esi
100030c1:	push   edi
100030c2:	mov    eax,ds:0x10064694
100030c7:	xor    eax,esp
100030c9:	push   eax
100030ca:	lea    eax,[esp+0x14]
100030ce:	mov    fs:0x0,eax
100030d4:	mov    ebp,DWORD PTR [esp+0x28]
100030d8:	mov    DWORD PTR [esp+0x1c],0x0
100030e0:	mov    DWORD PTR [esp+0x10],0x0
100030e8:	mov    eax,DWORD PTR [ebp+0x0]
100030eb:	mov    ecx,DWORD PTR [eax-0x10]
100030ee:	test   ecx,ecx
100030f0:	je     0x100030fd
100030f2:	mov    edx,DWORD PTR [ecx]
100030f4:	mov    eax,DWORD PTR [edx+0x10]
100030f7:	call   eax
100030f9:	test   eax,eax
100030fb:	jne    0x1000310d
100030fd:	mov    edx,DWORD PTR ds:0x10066120
10003103:	mov    eax,DWORD PTR [edx+0x10]
10003106:	mov    ecx,0x10066120
1000310b:	call   eax
1000310d:	xor    ecx,ecx
1000310f:	test   eax,eax
10003111:	setne  cl
10003114:	test   ecx,ecx
10003116:	jne    0x10003122
10003118:	push   0x80004005
1000311d:	call   0x10001050
10003122:	mov    edx,DWORD PTR [eax]
10003124:	mov    ecx,eax
10003126:	mov    eax,DWORD PTR [edx+0xc]
10003129:	call   eax
1000312b:	mov    esi,DWORD PTR [esp+0x24]
1000312f:	add    eax,0x10
10003132:	mov    DWORD PTR [esi],eax
10003134:	mov    edi,DWORD PTR [esp+0x2c]
10003138:	test   edi,edi
1000313a:	mov    DWORD PTR [esp+0x1c],0x0
10003142:	mov    DWORD PTR [esp+0x10],0x1
1000314a:	jne    0x10003150
1000314c:	xor    eax,eax
1000314e:	jmp    0x10003164
10003150:	mov    eax,edi
10003152:	lea    edx,[eax+0x2]
10003155:	mov    cx,WORD PTR [eax]
10003158:	add    eax,0x2
1000315b:	test   cx,cx
1000315e:	jne    0x10003155
10003160:	sub    eax,edx
10003162:	sar    eax,1
10003164:	mov    ecx,DWORD PTR [ebp+0x0]
10003167:	mov    edx,DWORD PTR [ecx-0xc]
1000316a:	push   eax
1000316b:	push   edi
1000316c:	push   edx
1000316d:	push   ecx
1000316e:	push   esi
1000316f:	call   0x10003c80
10003174:	add    esp,0x14
10003177:	mov    eax,esi
10003179:	mov    ecx,DWORD PTR [esp+0x14]
1000317d:	mov    DWORD PTR fs:0x0,ecx
10003184:	pop    ecx
10003185:	pop    edi
10003186:	pop    esi
10003187:	pop    ebp
10003188:	add    esp,0x10
1000318b:	ret    
1000318c:	int3   
1000318d:	int3   
1000318e:	int3   
1000318f:	int3   
10003190:	push   esi
10003191:	mov    esi,ecx
10003193:	mov    eax,DWORD PTR [esi]
10003195:	sub    eax,0x10
10003198:	cmp    DWORD PTR [eax+0xc],0x1
1000319c:	jle    0x100031a7
1000319e:	mov    eax,DWORD PTR [eax+0x4]
100031a1:	push   eax
100031a2:	call   0x10003d10
100031a7:	mov    eax,DWORD PTR [esi]
100031a9:	pop    esi
100031aa:	ret    
100031ab:	int3   
100031ac:	int3   
100031ad:	int3   
100031ae:	int3   
100031af:	int3   
100031b0:	push   esi
100031b1:	mov    esi,ecx
100031b3:	mov    eax,DWORD PTR [esi]
100031b5:	mov    edx,DWORD PTR [eax-0x8]
100031b8:	sub    eax,0x10
100031bb:	mov    ecx,0x1
100031c0:	sub    ecx,DWORD PTR [eax+0xc]
100031c3:	mov    eax,DWORD PTR [esp+0x8]
100031c7:	sub    edx,eax
100031c9:	or     ecx,edx
100031cb:	jge    0x100031d5
100031cd:	push   eax
100031ce:	mov    ecx,esi
100031d0:	call   0x10004920
100031d5:	mov    eax,DWORD PTR [esi]
100031d7:	pop    esi
100031d8:	ret    0x4
100031db:	int3   
100031dc:	int3   
100031dd:	int3   
100031de:	int3   
100031df:	int3   
100031e0:	mov    eax,DWORD PTR [ecx]
100031e2:	mov    eax,DWORD PTR [eax-0xc]
100031e5:	ret    
100031e6:	int3   
100031e7:	int3   
100031e8:	int3   
100031e9:	int3   
100031ea:	int3   
100031eb:	int3   
100031ec:	int3   
100031ed:	int3   
100031ee:	int3   
100031ef:	int3   
100031f0:	mov    eax,DWORD PTR [esp+0x4]
100031f4:	cmp    eax,0xffffffff
100031f7:	jne    0x10003213
100031f9:	mov    eax,DWORD PTR [ecx]
100031fb:	test   eax,eax
100031fd:	je     0x10003217
100031ff:	push   esi
10003200:	lea    esi,[eax+0x2]
10003203:	mov    dx,WORD PTR [eax]
10003206:	add    eax,0x2
10003209:	test   dx,dx
1000320c:	jne    0x10003203
1000320e:	sub    eax,esi
10003210:	sar    eax,1
10003212:	pop    esi
10003213:	test   eax,eax
10003215:	jl     0x1000322c
10003217:	mov    edx,DWORD PTR [ecx]
10003219:	cmp    eax,DWORD PTR [edx-0x8]
1000321c:	jg     0x1000322c
1000321e:	mov    DWORD PTR [edx-0xc],eax
10003221:	mov    ecx,DWORD PTR [ecx]
10003223:	mov    WORD PTR [ecx+eax*2],0x0
10003229:	ret    0x4
1000322c:	push   0x80070057
10003231:	call   0x10001050
10003236:	int3   
10003237:	int3   
10003238:	int3   
10003239:	int3   
1000323a:	int3   
1000323b:	int3   
1000323c:	int3   
1000323d:	int3   
1000323e:	int3   
1000323f:	int3   
10003240:	push   esi
10003241:	mov    esi,DWORD PTR [esp+0x8]
10003245:	push   edi
10003246:	mov    edi,ecx
10003248:	mov    eax,DWORD PTR [edi]
1000324a:	mov    edx,DWORD PTR [eax-0x8]
1000324d:	sub    eax,0x10
10003250:	mov    ecx,0x1
10003255:	sub    ecx,DWORD PTR [eax+0xc]
10003258:	sub    edx,esi
1000325a:	or     ecx,edx
1000325c:	jge    0x10003266
1000325e:	push   esi
1000325f:	mov    ecx,edi
10003261:	call   0x10004920
10003266:	test   esi,esi
10003268:	jl     0x10003281
1000326a:	mov    eax,DWORD PTR [edi]
1000326c:	cmp    esi,DWORD PTR [eax-0x8]
1000326f:	jg     0x10003281
10003271:	mov    DWORD PTR [eax-0xc],esi
10003274:	mov    eax,DWORD PTR [edi]
10003276:	pop    edi
10003277:	mov    WORD PTR [eax+esi*2],0x0
1000327d:	pop    esi
1000327e:	ret    0x4
10003281:	push   0x80070057
10003286:	call   0x10001050
1000328b:	int3   
1000328c:	int3   
1000328d:	int3   
1000328e:	int3   
1000328f:	int3   
10003290:	mov    eax,ecx
10003292:	mov    ecx,DWORD PTR [esp+0x4]
10003296:	mov    DWORD PTR [eax],ecx
10003298:	ret    0x4
1000329b:	int3   
1000329c:	int3   
1000329d:	int3   
1000329e:	int3   
1000329f:	int3   
100032a0:	push   esi
100032a1:	mov    esi,ecx
100032a3:	push   edi
100032a4:	mov    edi,DWORD PTR [esi]
100032a6:	test   edi,edi
100032a8:	je     0x100032c2
100032aa:	push   ebx
100032ab:	call   DWORD PTR ds:0x1002c07c
100032b1:	push   edi
100032b2:	mov    ebx,eax
100032b4:	call   DWORD PTR ds:0x1002c058
100032ba:	push   ebx
100032bb:	call   DWORD PTR ds:0x1002c078
100032c1:	pop    ebx
100032c2:	pop    edi
100032c3:	mov    DWORD PTR [esi],0x0
100032c9:	pop    esi
100032ca:	ret    
100032cb:	int3   
100032cc:	int3   
100032cd:	int3   
100032ce:	int3   
100032cf:	int3   
100032d0:	mov    eax,ecx
100032d2:	mov    ecx,DWORD PTR [esp+0x4]
100032d6:	mov    edx,DWORD PTR [ecx]
100032d8:	mov    DWORD PTR [ecx],0x0
100032de:	mov    DWORD PTR [eax],edx
100032e0:	ret    0x4
100032e3:	int3   
100032e4:	int3   
100032e5:	int3   
100032e6:	int3   
100032e7:	int3   
100032e8:	int3   
100032e9:	int3   
100032ea:	int3   
100032eb:	int3   
100032ec:	int3   
100032ed:	int3   
100032ee:	int3   
100032ef:	int3   
100032f0:	mov    eax,DWORD PTR [esp+0x4]
100032f4:	push   esi
100032f5:	push   edi
100032f6:	mov    edi,DWORD PTR [eax]
100032f8:	mov    esi,ecx
100032fa:	mov    DWORD PTR [eax],0x0
10003300:	mov    eax,DWORD PTR [esi]
10003302:	cmp    edi,eax
10003304:	je     0x1000330f
10003306:	push   eax
10003307:	call   0x10015ad6
1000330c:	add    esp,0x4
1000330f:	mov    DWORD PTR [esi],edi
10003311:	pop    edi
10003312:	mov    eax,esi
10003314:	pop    esi
10003315:	ret    0x4
10003318:	int3   
10003319:	int3   
1000331a:	int3   
1000331b:	int3   
1000331c:	int3   
1000331d:	int3   
1000331e:	int3   
1000331f:	int3   
10003320:	mov    eax,DWORD PTR [ecx]
10003322:	push   eax
10003323:	call   0x10015ad6
10003328:	pop    ecx
10003329:	ret    
1000332a:	int3   
1000332b:	int3   
1000332c:	int3   
1000332d:	int3   
1000332e:	int3   
1000332f:	int3   
10003330:	mov    eax,DWORD PTR [ecx]
10003332:	ret    
10003333:	int3   
10003334:	int3   
10003335:	int3   
10003336:	int3   
10003337:	int3   
10003338:	int3   
10003339:	int3   
1000333a:	int3   
1000333b:	int3   
1000333c:	int3   
1000333d:	int3   
1000333e:	int3   
1000333f:	int3   
10003340:	push   ebp
10003341:	mov    ebp,esp
10003343:	and    esp,0xfffffff8
10003346:	push   0xffffffff
10003348:	push   0x1002af40
1000334d:	mov    eax,fs:0x0
10003353:	push   eax
10003354:	sub    esp,0x50
10003357:	mov    eax,ds:0x10064694
1000335c:	xor    eax,esp
1000335e:	mov    DWORD PTR [esp+0x48],eax
10003362:	push   ebx
10003363:	push   esi
10003364:	push   edi
10003365:	mov    eax,ds:0x10064694
1000336a:	xor    eax,esp
1000336c:	push   eax
1000336d:	lea    eax,[esp+0x60]
10003371:	mov    fs:0x0,eax
10003377:	mov    eax,ds:0x10066e08
1000337c:	mov    esi,DWORD PTR [ebp+0x8]
1000337f:	xor    edi,edi
10003381:	cmp    eax,edi
10003383:	mov    DWORD PTR [esp+0x1c],esi
10003387:	jne    0x10003397
10003389:	push   edi
1000338a:	push   edi
1000338b:	push   edi
1000338c:	call   DWORD PTR ds:0x1002c0c8
10003392:	mov    ds:0x10066e08,eax
10003397:	push   0xffffffff
10003399:	push   eax
1000339a:	call   DWORD PTR ds:0x1002c04c
100033a0:	test   eax,eax
100033a2:	je     0x100033ab
100033a4:	mov    eax,esi
100033a6:	jmp    0x10003517
100033ab:	mov    eax,DWORD PTR [ebp+0xc]
100033ae:	push   eax
100033af:	push   esi
100033b0:	lea    ecx,[esp+0x28]
100033b4:	mov    DWORD PTR [esp+0x40],0xf
100033bc:	mov    DWORD PTR [esp+0x3c],edi
100033c0:	mov    BYTE PTR [esp+0x2c],0x0
100033c5:	call   0x10003900
100033ca:	lea    ecx,[esp+0x20]
100033ce:	push   ecx
100033cf:	lea    edx,[esp+0x18]
100033d3:	push   edx
100033d4:	mov    DWORD PTR [esp+0x70],edi
100033d8:	call   0x10003dd0
100033dd:	mov    ecx,eax
100033df:	call   0x100041f0
100033e4:	call   0x10003dd0
100033e9:	mov    esi,DWORD PTR [esp+0x14]
100033ed:	cmp    esi,edi
100033ef:	mov    ebx,DWORD PTR [eax+0x4]
100033f2:	je     0x100033f8
100033f4:	cmp    esi,eax
100033f6:	je     0x100033fd
100033f8:	call   0x10016143
100033fd:	mov    edi,DWORD PTR [esp+0x18]
10003401:	cmp    edi,ebx
10003403:	jne    0x1000347a
10003405:	sub    esp,0x1c
10003408:	mov    ecx,esp
1000340a:	mov    DWORD PTR [esp+0x30],esp
1000340e:	push   0xffffffff
10003410:	push   0x0
10003412:	lea    eax,[esp+0x44]
10003416:	mov    DWORD PTR [ecx+0x18],0xf
1000341d:	mov    DWORD PTR [ecx+0x14],0x0
10003424:	push   eax
10003425:	mov    BYTE PTR [ecx+0x4],0x0
10003429:	call   0x10003820
1000342e:	lea    ecx,[esp+0x58]
10003432:	push   ecx
10003433:	call   0x10003e60
10003438:	add    esp,0x20
1000343b:	lea    edx,[esp+0x20]
1000343f:	push   edx
10003440:	mov    BYTE PTR [esp+0x6c],0x1
10003445:	call   0x10003dd0
1000344a:	mov    ecx,eax
1000344c:	call   0x10004090
10003451:	push   0xffffffff
10003453:	push   0x0
10003455:	lea    ecx,[esp+0x44]
10003459:	push   ecx
1000345a:	mov    ecx,eax
1000345c:	call   0x10003820
10003461:	mov    BYTE PTR [esp+0x68],0x0
10003466:	cmp    DWORD PTR [esp+0x54],0x10
1000346b:	jb     0x1000347a
1000346d:	mov    edx,DWORD PTR [esp+0x40]
10003471:	push   edx
10003472:	call   0x10015ad6
10003477:	add    esp,0x4
1000347a:	mov    eax,DWORD PTR [ebp+0x10]
1000347d:	movzx  ecx,BYTE PTR [eax]
10003480:	cmp    ecx,0x100
10003486:	jge    0x100034a3
10003488:	lea    edx,[esp+0x20]
1000348c:	push   edx
1000348d:	lea    eax,[esp+0x18]
10003491:	push   eax
10003492:	call   0x10003dd0
10003497:	mov    ecx,eax
10003499:	call   0x100041f0
1000349e:	mov    esi,DWORD PTR [eax]
100034a0:	mov    edi,DWORD PTR [eax+0x4]
100034a3:	call   0x10003dd0
100034a8:	test   esi,esi
100034aa:	mov    ebx,DWORD PTR [eax+0x4]
100034ad:	je     0x100034b3
100034af:	cmp    esi,eax
100034b1:	je     0x100034b8
100034b3:	call   0x10016143
100034b8:	cmp    edi,ebx
100034ba:	je     0x100034df
100034bc:	test   esi,esi
100034be:	jne    0x100034c5
100034c0:	call   0x10016143
100034c5:	cmp    edi,DWORD PTR [esi+0x4]
100034c8:	jne    0x100034cf
100034ca:	call   0x10016143
100034cf:	cmp    DWORD PTR [edi+0x40],0x10
100034d3:	jb     0x100034da
100034d5:	mov    edi,DWORD PTR [edi+0x2c]
100034d8:	jmp    0x100034e3
100034da:	add    edi,0x2c
100034dd:	jmp    0x100034e3
100034df:	mov    edi,DWORD PTR [esp+0x1c]
100034e3:	mov    eax,ds:0x10066e08
100034e8:	test   eax,eax
100034ea:	jne    0x100034fa
100034ec:	push   eax
100034ed:	push   eax
100034ee:	push   eax
100034ef:	call   DWORD PTR ds:0x1002c0c8
100034f5:	mov    ds:0x10066e08,eax
100034fa:	push   eax
100034fb:	call   DWORD PTR ds:0x1002c0a8
10003501:	cmp    DWORD PTR [esp+0x38],0x10
10003506:	jb     0x10003515
10003508:	mov    ecx,DWORD PTR [esp+0x24]
1000350c:	push   ecx
1000350d:	call   0x10015ad6
10003512:	add    esp,0x4
10003515:	mov    eax,edi
10003517:	mov    ecx,DWORD PTR [esp+0x60]
1000351b:	mov    DWORD PTR fs:0x0,ecx
10003522:	pop    ecx
10003523:	pop    edi
10003524:	pop    esi
10003525:	pop    ebx
10003526:	mov    ecx,DWORD PTR [esp+0x48]
1000352a:	xor    ecx,esp
1000352c:	call   0x10015adb
10003531:	mov    esp,ebp
10003533:	pop    ebp
10003534:	ret    
10003535:	int3   
10003536:	int3   
10003537:	int3   
10003538:	int3   
10003539:	int3   
1000353a:	int3   
1000353b:	int3   
1000353c:	int3   
1000353d:	int3   
1000353e:	int3   
1000353f:	int3   
10003540:	push   ebp
10003541:	mov    ebp,esp
10003543:	and    esp,0xfffffff8
10003546:	push   0xffffffff
10003548:	push   0x1002af00
1000354d:	mov    eax,fs:0x0
10003553:	push   eax
10003554:	sub    esp,0x50
10003557:	mov    eax,ds:0x10064694
1000355c:	xor    eax,esp
1000355e:	mov    DWORD PTR [esp+0x48],eax
10003562:	push   ebx
10003563:	push   esi
10003564:	push   edi
10003565:	mov    eax,ds:0x10064694
1000356a:	xor    eax,esp
1000356c:	push   eax
1000356d:	lea    eax,[esp+0x60]
10003571:	mov    fs:0x0,eax
10003577:	mov    eax,ds:0x10066e08
1000357c:	mov    esi,DWORD PTR [ebp+0x8]
1000357f:	xor    edi,edi
10003581:	cmp    eax,edi
10003583:	mov    DWORD PTR [esp+0x1c],esi
10003587:	jne    0x10003597
10003589:	push   edi
1000358a:	push   edi
1000358b:	push   edi
1000358c:	call   DWORD PTR ds:0x1002c0c8
10003592:	mov    ds:0x10066e08,eax
10003597:	push   0xffffffff
10003599:	push   eax
1000359a:	call   DWORD PTR ds:0x1002c04c
100035a0:	test   eax,eax
100035a2:	je     0x100035ab
100035a4:	mov    eax,esi
100035a6:	jmp    0x10003712
100035ab:	mov    eax,DWORD PTR [ebp+0xc]
100035ae:	push   eax
100035af:	push   esi
100035b0:	lea    ecx,[esp+0x28]
100035b4:	mov    DWORD PTR [esp+0x40],0x7
100035bc:	mov    DWORD PTR [esp+0x3c],edi
100035c0:	mov    WORD PTR [esp+0x2c],di
100035c5:	call   0x10004da0
100035ca:	lea    ecx,[esp+0x20]
100035ce:	push   ecx
100035cf:	lea    edx,[esp+0x18]
100035d3:	push   edx
100035d4:	mov    DWORD PTR [esp+0x70],edi
100035d8:	call   0x10003f30
100035dd:	mov    ecx,eax
100035df:	call   0x10004430
100035e4:	call   0x10003f30
100035e9:	mov    esi,DWORD PTR [esp+0x14]
100035ed:	cmp    esi,edi
100035ef:	mov    ebx,DWORD PTR [eax+0x4]
100035f2:	je     0x100035f8
100035f4:	cmp    esi,eax
100035f6:	je     0x100035fd
100035f8:	call   0x10016143
100035fd:	mov    edi,DWORD PTR [esp+0x18]
10003601:	cmp    edi,ebx
10003603:	jne    0x10003675
10003605:	sub    esp,0x1c
10003608:	mov    ecx,esp
1000360a:	mov    DWORD PTR [esp+0x30],esp
1000360e:	xor    ebx,ebx
10003610:	push   0xffffffff
10003612:	push   ebx
10003613:	lea    eax,[esp+0x44]
10003617:	mov    DWORD PTR [ecx+0x18],0x7
1000361e:	mov    DWORD PTR [ecx+0x14],ebx
10003621:	push   eax
10003622:	mov    WORD PTR [ecx+0x4],bx
10003626:	call   0x10004cb0
1000362b:	lea    ecx,[esp+0x58]
1000362f:	push   ecx
10003630:	call   0x10003fc0
10003635:	add    esp,0x20
10003638:	lea    edx,[esp+0x20]
1000363c:	push   edx
1000363d:	mov    BYTE PTR [esp+0x6c],0x1
10003642:	call   0x10003f30
10003647:	mov    ecx,eax
10003649:	call   0x100042d0
1000364e:	push   0xffffffff
10003650:	push   ebx
10003651:	lea    ecx,[esp+0x44]
10003655:	push   ecx
10003656:	mov    ecx,eax
10003658:	call   0x10004cb0
1000365d:	mov    BYTE PTR [esp+0x68],bl
10003661:	cmp    DWORD PTR [esp+0x54],0x8
10003666:	jb     0x10003675
10003668:	mov    edx,DWORD PTR [esp+0x40]
1000366c:	push   edx
1000366d:	call   0x10015ad6
10003672:	add    esp,0x4
10003675:	mov    eax,DWORD PTR [ebp+0x10]
10003678:	movzx  ecx,BYTE PTR [eax]
1000367b:	cmp    ecx,0x100
10003681:	jge    0x1000369e
10003683:	lea    edx,[esp+0x20]
10003687:	push   edx
10003688:	lea    eax,[esp+0x18]
1000368c:	push   eax
1000368d:	call   0x10003f30
10003692:	mov    ecx,eax
10003694:	call   0x10004430
10003699:	mov    esi,DWORD PTR [eax]
1000369b:	mov    edi,DWORD PTR [eax+0x4]
1000369e:	call   0x10003f30
100036a3:	test   esi,esi
100036a5:	mov    ebx,DWORD PTR [eax+0x4]
100036a8:	je     0x100036ae
100036aa:	cmp    esi,eax
100036ac:	je     0x100036b3
100036ae:	call   0x10016143
100036b3:	cmp    edi,ebx
100036b5:	je     0x100036da
100036b7:	test   esi,esi
100036b9:	jne    0x100036c0
100036bb:	call   0x10016143
100036c0:	cmp    edi,DWORD PTR [esi+0x4]
100036c3:	jne    0x100036ca
100036c5:	call   0x10016143
100036ca:	cmp    DWORD PTR [edi+0x40],0x8
100036ce:	jb     0x100036d5
100036d0:	mov    edi,DWORD PTR [edi+0x2c]
100036d3:	jmp    0x100036de
100036d5:	add    edi,0x2c
100036d8:	jmp    0x100036de
100036da:	mov    edi,DWORD PTR [esp+0x1c]
100036de:	mov    eax,ds:0x10066e08
100036e3:	test   eax,eax
100036e5:	jne    0x100036f5
100036e7:	push   eax
100036e8:	push   eax
100036e9:	push   eax
100036ea:	call   DWORD PTR ds:0x1002c0c8
100036f0:	mov    ds:0x10066e08,eax
100036f5:	push   eax
100036f6:	call   DWORD PTR ds:0x1002c0a8
100036fc:	cmp    DWORD PTR [esp+0x38],0x8
10003701:	jb     0x10003710
10003703:	mov    ecx,DWORD PTR [esp+0x24]
10003707:	push   ecx
10003708:	call   0x10015ad6
1000370d:	add    esp,0x4
10003710:	mov    eax,edi
10003712:	mov    ecx,DWORD PTR [esp+0x60]
10003716:	mov    DWORD PTR fs:0x0,ecx
1000371d:	pop    ecx
1000371e:	pop    edi
1000371f:	pop    esi
10003720:	pop    ebx
10003721:	mov    ecx,DWORD PTR [esp+0x48]
10003725:	xor    ecx,esp
10003727:	call   0x10015adb
1000372c:	mov    esp,ebp
1000372e:	pop    ebp
1000372f:	ret    
10003730:	push   ebx
10003731:	push   ebp
10003732:	mov    ebp,DWORD PTR [esp+0xc]
10003736:	push   edi
10003737:	mov    edi,DWORD PTR [esp+0x14]
1000373b:	cmp    DWORD PTR [ebp+0x14],edi
1000373e:	mov    ebx,eax
10003740:	jae    0x10003747
10003742:	call   0x100159b6
10003747:	mov    eax,DWORD PTR [ebp+0x14]
1000374a:	sub    eax,edi
1000374c:	cmp    eax,ebx
1000374e:	jae    0x10003752
10003750:	mov    ebx,eax
10003752:	mov    eax,DWORD PTR [esi+0x14]
10003755:	or     ecx,0xffffffff
10003758:	sub    ecx,eax
1000375a:	cmp    ecx,ebx
1000375c:	jbe    0x10003765
1000375e:	lea    edx,[eax+ebx*1]
10003761:	cmp    edx,eax
10003763:	jae    0x1000376a
10003765:	call   0x10015977
1000376a:	test   ebx,ebx
1000376c:	jbe    0x10003816
10003772:	mov    edi,DWORD PTR [esi+0x14]
10003775:	add    edi,ebx
10003777:	cmp    edi,0xfffffffe
1000377a:	jbe    0x10003781
1000377c:	call   0x10015977
10003781:	mov    eax,DWORD PTR [esi+0x18]
10003784:	cmp    eax,edi
10003786:	jae    0x100037a3
10003788:	mov    eax,DWORD PTR [esi+0x14]
1000378b:	push   eax
1000378c:	push   edi
1000378d:	mov    ecx,esi
1000378f:	call   0x10004600
10003794:	test   edi,edi
10003796:	jbe    0x10003816
10003798:	cmp    DWORD PTR [ebp+0x18],0x10
1000379c:	jb     0x100037cb
1000379e:	mov    ebp,DWORD PTR [ebp+0x4]
100037a1:	jmp    0x100037ce
100037a3:	test   edi,edi
100037a5:	jne    0x10003796
100037a7:	cmp    eax,0x10
100037aa:	mov    DWORD PTR [esi+0x14],edi
100037ad:	jb     0x100037bd
100037af:	mov    eax,DWORD PTR [esi+0x4]
100037b2:	pop    edi
100037b3:	pop    ebp
100037b4:	mov    BYTE PTR [eax],0x0
100037b7:	mov    eax,esi
100037b9:	pop    ebx
100037ba:	ret    0x8
100037bd:	pop    edi
100037be:	lea    eax,[esi+0x4]
100037c1:	pop    ebp
100037c2:	mov    BYTE PTR [eax],0x0
100037c5:	mov    eax,esi
100037c7:	pop    ebx
100037c8:	ret    0x8
100037cb:	add    ebp,0x4
100037ce:	mov    eax,DWORD PTR [esi+0x18]
100037d1:	cmp    eax,0x10
100037d4:	jb     0x100037db
100037d6:	mov    edx,DWORD PTR [esi+0x4]
100037d9:	jmp    0x100037de
100037db:	lea    edx,[esi+0x4]
100037de:	mov    ecx,DWORD PTR [esi+0x14]
100037e1:	push   ebx
100037e2:	mov    ebx,DWORD PTR [esp+0x18]
100037e6:	add    ebp,ebx
100037e8:	sub    eax,ecx
100037ea:	push   ebp
100037eb:	push   eax
100037ec:	add    ecx,edx
100037ee:	push   ecx
100037ef:	call   0x10016153
100037f4:	add    esp,0x10
100037f7:	cmp    DWORD PTR [esi+0x18],0x10
100037fb:	mov    DWORD PTR [esi+0x14],edi
100037fe:	jb     0x1000380f
10003800:	mov    eax,DWORD PTR [esi+0x4]
10003803:	mov    BYTE PTR [eax+edi*1],0x0
10003807:	pop    edi
10003808:	pop    ebp
10003809:	mov    eax,esi
1000380b:	pop    ebx
1000380c:	ret    0x8
1000380f:	lea    eax,[esi+0x4]
10003812:	mov    BYTE PTR [eax+edi*1],0x0
10003816:	pop    edi
10003817:	pop    ebp
10003818:	mov    eax,esi
1000381a:	pop    ebx
1000381b:	ret    0x8
1000381e:	int3   
1000381f:	int3   
10003820:	push   ebx
10003821:	mov    ebx,DWORD PTR [esp+0x8]
10003825:	push   ebp
10003826:	mov    ebp,DWORD PTR [esp+0x10]
1000382a:	cmp    DWORD PTR [ebx+0x14],ebp
1000382d:	push   esi
1000382e:	push   edi
1000382f:	mov    esi,ecx
10003831:	jae    0x10003838
10003833:	call   0x100159b6
10003838:	mov    edi,DWORD PTR [ebx+0x14]
1000383b:	mov    eax,DWORD PTR [esp+0x1c]
1000383f:	sub    edi,ebp
10003841:	cmp    eax,edi
10003843:	jae    0x10003847
10003845:	mov    edi,eax
10003847:	cmp    esi,ebx
10003849:	jne    0x1000386a
1000384b:	push   0xffffffff
1000384d:	add    edi,ebp
1000384f:	push   edi
10003850:	mov    ecx,esi
10003852:	call   0x10004570
10003857:	push   ebp
10003858:	push   0x0
1000385a:	mov    ecx,esi
1000385c:	call   0x10004570
10003861:	pop    edi
10003862:	mov    eax,esi
10003864:	pop    esi
10003865:	pop    ebp
10003866:	pop    ebx
10003867:	ret    0xc
1000386a:	cmp    edi,0xfffffffe
1000386d:	jbe    0x10003874
1000386f:	call   0x10015977
10003874:	mov    eax,DWORD PTR [esi+0x18]
10003877:	cmp    eax,edi
10003879:	jae    0x10003896
1000387b:	mov    eax,DWORD PTR [esi+0x14]
1000387e:	push   eax
1000387f:	push   edi
10003880:	mov    ecx,esi
10003882:	call   0x10004600
10003887:	test   edi,edi
10003889:	jbe    0x100038f1
1000388b:	cmp    DWORD PTR [ebx+0x18],0x10
1000388f:	jb     0x100038c0
10003891:	mov    edx,DWORD PTR [ebx+0x4]
10003894:	jmp    0x100038c3
10003896:	test   edi,edi
10003898:	jne    0x10003889
1000389a:	cmp    eax,0x10
1000389d:	mov    DWORD PTR [esi+0x14],edi
100038a0:	jb     0x100038b1
100038a2:	mov    eax,DWORD PTR [esi+0x4]
100038a5:	pop    edi
100038a6:	mov    BYTE PTR [eax],0x0
100038a9:	mov    eax,esi
100038ab:	pop    esi
100038ac:	pop    ebp
100038ad:	pop    ebx
100038ae:	ret    0xc
100038b1:	lea    eax,[esi+0x4]
100038b4:	pop    edi
100038b5:	mov    BYTE PTR [eax],0x0
100038b8:	mov    eax,esi
100038ba:	pop    esi
100038bb:	pop    ebp
100038bc:	pop    ebx
100038bd:	ret    0xc
100038c0:	lea    edx,[ebx+0x4]
100038c3:	mov    ecx,DWORD PTR [esi+0x18]
100038c6:	cmp    ecx,0x10
100038c9:	lea    ebx,[esi+0x4]
100038cc:	jb     0x100038d2
100038ce:	mov    eax,DWORD PTR [ebx]
100038d0:	jmp    0x100038d4
100038d2:	mov    eax,ebx
100038d4:	push   edi
100038d5:	add    edx,ebp
100038d7:	push   edx
100038d8:	push   ecx
100038d9:	push   eax
100038da:	call   0x10016153
100038df:	add    esp,0x10
100038e2:	cmp    DWORD PTR [esi+0x18],0x10
100038e6:	mov    DWORD PTR [esi+0x14],edi
100038e9:	jb     0x100038ed
100038eb:	mov    ebx,DWORD PTR [ebx]
100038ed:	mov    BYTE PTR [ebx+edi*1],0x0
100038f1:	pop    edi
100038f2:	mov    eax,esi
100038f4:	pop    esi
100038f5:	pop    ebp
100038f6:	pop    ebx
100038f7:	ret    0xc
100038fa:	int3   
100038fb:	int3   
100038fc:	int3   
100038fd:	int3   
100038fe:	int3   
100038ff:	int3   
10003900:	push   ebx
10003901:	push   ebp
10003902:	push   esi
10003903:	mov    esi,ecx
10003905:	mov    ecx,DWORD PTR [esi+0x18]
10003908:	cmp    ecx,0x10
1000390b:	lea    ebx,[esi+0x4]
1000390e:	jb     0x10003914
10003910:	mov    eax,DWORD PTR [ebx]
10003912:	jmp    0x10003916
10003914:	mov    eax,ebx
10003916:	mov    ebp,DWORD PTR [esp+0x10]
1000391a:	cmp    ebp,eax
1000391c:	jb     0x1000394f
1000391e:	cmp    ecx,0x10
10003921:	jb     0x10003927
10003923:	mov    eax,DWORD PTR [ebx]
10003925:	jmp    0x10003929
10003927:	mov    eax,ebx
10003929:	mov    edx,DWORD PTR [esi+0x14]
1000392c:	add    edx,eax
1000392e:	cmp    edx,ebp
10003930:	jbe    0x1000394f
10003932:	cmp    ecx,0x10
10003935:	jb     0x10003939
10003937:	mov    ebx,DWORD PTR [ebx]
10003939:	mov    eax,DWORD PTR [esp+0x14]
1000393d:	push   eax
1000393e:	sub    ebp,ebx
10003940:	push   ebp
10003941:	push   esi
10003942:	mov    ecx,esi
10003944:	call   0x10003820
10003949:	pop    esi
1000394a:	pop    ebp
1000394b:	pop    ebx
1000394c:	ret    0x8
1000394f:	push   edi
10003950:	mov    edi,DWORD PTR [esp+0x18]
10003954:	cmp    edi,0xfffffffe
10003957:	jbe    0x1000395e
10003959:	call   0x10015977
1000395e:	mov    eax,DWORD PTR [esi+0x18]
10003961:	cmp    eax,edi
10003963:	jae    0x10003981
10003965:	mov    ecx,DWORD PTR [esi+0x14]
10003968:	push   ecx
10003969:	push   edi
1000396a:	mov    ecx,esi
1000396c:	call   0x10004600
10003971:	test   edi,edi
10003973:	jbe    0x100039b8
10003975:	mov    ecx,DWORD PTR [esi+0x18]
10003978:	cmp    ecx,0x10
1000397b:	jb     0x1000399b
1000397d:	mov    eax,DWORD PTR [ebx]
1000397f:	jmp    0x1000399d
10003981:	test   edi,edi
10003983:	jne    0x10003973
10003985:	cmp    eax,0x10
10003988:	mov    DWORD PTR [esi+0x14],edi
1000398b:	jb     0x1000398f
1000398d:	mov    ebx,DWORD PTR [ebx]
1000398f:	pop    edi
10003990:	mov    eax,esi
10003992:	pop    esi
10003993:	pop    ebp
10003994:	mov    BYTE PTR [ebx],0x0
10003997:	pop    ebx
10003998:	ret    0x8
1000399b:	mov    eax,ebx
1000399d:	push   edi
1000399e:	push   ebp
1000399f:	push   ecx
100039a0:	push   eax
100039a1:	call   0x10016153
100039a6:	add    esp,0x10
100039a9:	cmp    DWORD PTR [esi+0x18],0x10
100039ad:	mov    DWORD PTR [esi+0x14],edi
100039b0:	jb     0x100039b4
100039b2:	mov    ebx,DWORD PTR [ebx]
100039b4:	mov    BYTE PTR [ebx+edi*1],0x0
100039b8:	pop    edi
100039b9:	mov    eax,esi
100039bb:	pop    esi
100039bc:	pop    ebp
100039bd:	pop    ebx
100039be:	ret    0x8
100039c1:	int3   
100039c2:	int3   
100039c3:	int3   
100039c4:	int3   
100039c5:	int3   
100039c6:	int3   
100039c7:	int3   
100039c8:	int3   
100039c9:	int3   
100039ca:	int3   
100039cb:	int3   
100039cc:	int3   
100039cd:	int3   
100039ce:	int3   
100039cf:	int3   
100039d0:	push   ebx
100039d1:	push   ebp
100039d2:	mov    ebp,DWORD PTR [esp+0xc]
100039d6:	push   esi
100039d7:	push   edi
100039d8:	mov    edi,ecx
100039da:	cmp    DWORD PTR [edi+0x14],ebp
100039dd:	jae    0x100039e4
100039df:	call   0x100159b6
100039e4:	mov    eax,DWORD PTR [edi+0x14]
100039e7:	mov    esi,DWORD PTR [esp+0x18]
100039eb:	sub    eax,ebp
100039ed:	cmp    eax,esi
100039ef:	jae    0x100039f3
100039f1:	mov    esi,eax
100039f3:	mov    ebx,DWORD PTR [esp+0x20]
100039f7:	cmp    esi,ebx
100039f9:	mov    eax,esi
100039fb:	jb     0x100039ff
100039fd:	mov    eax,ebx
100039ff:	cmp    DWORD PTR [edi+0x18],0x10
10003a03:	jb     0x10003a0a
10003a05:	mov    edi,DWORD PTR [edi+0x4]
10003a08:	jmp    0x10003a0d
10003a0a:	add    edi,0x4
10003a0d:	push   eax
10003a0e:	mov    eax,DWORD PTR [esp+0x20]
10003a12:	push   eax
10003a13:	add    edi,ebp
10003a15:	push   edi
10003a16:	call   0x100012b0
10003a1b:	add    esp,0xc
10003a1e:	test   eax,eax
10003a20:	jne    0x10003a37
10003a22:	cmp    esi,ebx
10003a24:	jae    0x10003a30
10003a26:	pop    edi
10003a27:	pop    esi
10003a28:	pop    ebp
10003a29:	or     eax,0xffffffff
10003a2c:	pop    ebx
10003a2d:	ret    0x10
10003a30:	xor    eax,eax
10003a32:	cmp    esi,ebx
10003a34:	setne  al
10003a37:	pop    edi
10003a38:	pop    esi
10003a39:	pop    ebp
10003a3a:	pop    ebx
10003a3b:	ret    0x10
10003a3e:	int3   
10003a3f:	int3   
10003a40:	mov    ecx,DWORD PTR [esp+0x4]
10003a44:	sub    esp,0xc
10003a47:	test   ecx,ecx
10003a49:	ja     0x10003a5c
10003a4b:	xor    ecx,ecx
10003a4d:	push   ecx
10003a4e:	call   0x10016414
10003a53:	add    esp,0x4
10003a56:	add    esp,0xc
10003a59:	ret    0x4
10003a5c:	or     eax,0xffffffff
10003a5f:	xor    edx,edx
10003a61:	div    ecx
10003a63:	cmp    eax,0x1
10003a66:	jae    0x10003a4d
10003a68:	lea    eax,[esp+0x10]
10003a6c:	push   eax
10003a6d:	lea    ecx,[esp+0x4]
10003a71:	mov    DWORD PTR [esp+0x14],0x0
10003a79:	call   0x1001626e
10003a7e:	push   0x10058b44
10003a83:	lea    ecx,[esp+0x4]
10003a87:	push   ecx
10003a88:	mov    DWORD PTR [esp+0x8],0x1002c4ec
10003a90:	call   0x100161ce
10003a95:	int3   
10003a96:	int3   
10003a97:	int3   
10003a98:	int3   
10003a99:	int3   
10003a9a:	int3   
10003a9b:	int3   
10003a9c:	int3   
10003a9d:	int3   
10003a9e:	int3   
10003a9f:	int3   
10003aa0:	push   ebx
10003aa1:	mov    ebx,DWORD PTR [esp+0x8]
10003aa5:	test   ebx,ebx
10003aa7:	push   ebp
10003aa8:	push   esi
10003aa9:	push   edi
10003aaa:	mov    edi,ecx
10003aac:	je     0x10003b24
10003aae:	call   DWORD PTR ds:0x10064614
10003ab4:	mov    ebp,DWORD PTR ds:0x1002c080
10003aba:	push   0x0
10003abc:	push   0x0
10003abe:	push   0xffffffff
10003ac0:	push   ebx
10003ac1:	push   0x0
10003ac3:	push   eax
10003ac4:	call   ebp
10003ac6:	mov    esi,eax
10003ac8:	sub    esi,0x1
10003acb:	test   esi,esi
10003acd:	jle    0x10003b24
10003acf:	mov    eax,DWORD PTR [edi]
10003ad1:	mov    edx,DWORD PTR [eax-0x8]
10003ad4:	sub    eax,0x10
10003ad7:	mov    ecx,0x1
10003adc:	sub    ecx,DWORD PTR [eax+0xc]
10003adf:	sub    edx,esi
10003ae1:	or     ecx,edx
10003ae3:	jge    0x10003aed
10003ae5:	push   esi
10003ae6:	mov    ecx,edi
10003ae8:	call   0x10004920
10003aed:	mov    eax,DWORD PTR [edi]
10003aef:	push   esi
10003af0:	push   eax
10003af1:	push   0xffffffff
10003af3:	push   ebx
10003af4:	push   0x0
10003af6:	call   DWORD PTR ds:0x10064614
10003afc:	push   eax
10003afd:	call   ebp
10003aff:	mov    eax,DWORD PTR [edi]
10003b01:	cmp    esi,DWORD PTR [eax-0x8]
10003b04:	jg     0x10003b1a
10003b06:	mov    DWORD PTR [eax-0xc],esi
10003b09:	mov    eax,DWORD PTR [edi]
10003b0b:	mov    WORD PTR [eax+esi*2],0x0
10003b11:	mov    eax,edi
10003b13:	pop    edi
10003b14:	pop    esi
10003b15:	pop    ebp
10003b16:	pop    ebx
10003b17:	ret    0x4
10003b1a:	push   0x80070057
10003b1f:	call   0x10001050
10003b24:	mov    ecx,edi
10003b26:	call   0x10004800
10003b2b:	mov    eax,edi
10003b2d:	pop    edi
10003b2e:	pop    esi
10003b2f:	pop    ebp
10003b30:	pop    ebx
10003b31:	ret    0x4
10003b34:	int3   
10003b35:	int3   
10003b36:	int3   
10003b37:	int3   
10003b38:	int3   
10003b39:	int3   
10003b3a:	int3   
10003b3b:	int3   
10003b3c:	int3   
10003b3d:	int3   
10003b3e:	int3   
10003b3f:	int3   
10003b40:	mov    eax,DWORD PTR [esp+0x4]
10003b44:	push   esi
10003b45:	push   edi
10003b46:	mov    edi,ecx
10003b48:	mov    ecx,DWORD PTR [eax]
10003b4a:	mov    esi,DWORD PTR [edi]
10003b4c:	lea    eax,[ecx-0x10]
10003b4f:	sub    esi,0x10
10003b52:	cmp    eax,esi
10003b54:	je     0x10003baa
10003b56:	cmp    DWORD PTR [esi+0xc],0x0
10003b5a:	push   ebx
10003b5b:	lea    ebx,[esi+0xc]
10003b5e:	jl     0x10003b96
10003b60:	mov    edx,DWORD PTR [eax]
10003b62:	cmp    edx,DWORD PTR [esi]
10003b64:	jne    0x10003b96
10003b66:	push   ebp
10003b67:	push   eax
10003b68:	call   0x10004970
10003b6d:	mov    ebp,eax
10003b6f:	add    esp,0x4
10003b72:	or     eax,0xffffffff
10003b75:	lock xadd DWORD PTR [ebx],eax
10003b79:	dec    eax
10003b7a:	test   eax,eax
10003b7c:	jg     0x10003b88
10003b7e:	mov    ecx,DWORD PTR [esi]
10003b80:	mov    edx,DWORD PTR [ecx]
10003b82:	mov    eax,DWORD PTR [edx+0x4]
10003b85:	push   esi
10003b86:	call   eax
10003b88:	add    ebp,0x10
10003b8b:	mov    DWORD PTR [edi],ebp
10003b8d:	pop    ebp
10003b8e:	pop    ebx
10003b8f:	mov    eax,edi
10003b91:	pop    edi
10003b92:	pop    esi
10003b93:	ret    0x4
10003b96:	mov    edx,DWORD PTR [ecx-0xc]
10003b99:	push   edx
10003b9a:	push   ecx
10003b9b:	mov    ecx,edi
10003b9d:	call   0x10004870
10003ba2:	pop    ebx
10003ba3:	mov    eax,edi
10003ba5:	pop    edi
10003ba6:	pop    esi
10003ba7:	ret    0x4
10003baa:	mov    eax,edi
10003bac:	pop    edi
10003bad:	pop    esi
10003bae:	ret    0x4
10003bb1:	int3   
10003bb2:	int3   
10003bb3:	int3   
10003bb4:	int3   
10003bb5:	int3   
10003bb6:	int3   
10003bb7:	int3   
10003bb8:	int3   
10003bb9:	int3   
10003bba:	int3   
10003bbb:	int3   
10003bbc:	int3   
10003bbd:	int3   
10003bbe:	int3   
10003bbf:	int3   
10003bc0:	push   ebx
10003bc1:	push   ebp
10003bc2:	push   esi
10003bc3:	mov    esi,DWORD PTR [esp+0x10]
10003bc7:	mov    ebp,ecx
10003bc9:	mov    eax,DWORD PTR [ebp+0x0]
10003bcc:	mov    ebx,DWORD PTR [eax-0xc]
10003bcf:	mov    ecx,DWORD PTR [esp+0x14]
10003bd3:	sub    esi,eax
10003bd5:	mov    edx,0x1
10003bda:	sub    edx,DWORD PTR [eax-0x4]
10003bdd:	mov    eax,DWORD PTR [eax-0x8]
10003be0:	push   edi
10003be1:	lea    edi,[ebx+ecx*1]
10003be4:	sub    eax,edi
10003be6:	sar    esi,1
10003be8:	or     edx,eax
10003bea:	jge    0x10003bf4
10003bec:	push   edi
10003bed:	mov    ecx,ebp
10003bef:	call   0x10004920
10003bf4:	cmp    esi,ebx
10003bf6:	mov    ecx,DWORD PTR [ebp+0x0]
10003bf9:	ja     0x10003c02
10003bfb:	lea    edx,[ecx+esi*2]
10003bfe:	mov    DWORD PTR [esp+0x14],edx
10003c02:	mov    eax,DWORD PTR [esp+0x18]
10003c06:	mov    edx,DWORD PTR [esp+0x14]
10003c0a:	add    eax,eax
10003c0c:	push   eax
10003c0d:	push   edx
10003c0e:	push   eax
10003c0f:	lea    eax,[ecx+ebx*2]
10003c12:	push   eax
10003c13:	call   0x10016153
10003c18:	add    esp,0x10
10003c1b:	test   edi,edi
10003c1d:	jl     0x10003c3a
10003c1f:	mov    eax,DWORD PTR [ebp+0x0]
10003c22:	cmp    edi,DWORD PTR [eax-0x8]
10003c25:	jg     0x10003c3a
10003c27:	mov    DWORD PTR [eax-0xc],edi
10003c2a:	mov    ecx,DWORD PTR [ebp+0x0]
10003c2d:	mov    WORD PTR [ecx+edi*2],0x0
10003c33:	pop    edi
10003c34:	pop    esi
10003c35:	pop    ebp
10003c36:	pop    ebx
10003c37:	ret    0x8
10003c3a:	push   0x80070057
10003c3f:	call   0x10001050
10003c44:	int3   
10003c45:	int3   
10003c46:	int3   
10003c47:	int3   
10003c48:	int3   
10003c49:	int3   
10003c4a:	int3   
10003c4b:	int3   
10003c4c:	int3   
10003c4d:	int3   
10003c4e:	int3   
10003c4f:	int3   
10003c50:	mov    eax,DWORD PTR [esp+0x4]
10003c54:	test   eax,eax
10003c56:	jl     0x10003c6d
10003c58:	mov    edx,DWORD PTR [ecx]
10003c5a:	cmp    eax,DWORD PTR [edx-0x8]
10003c5d:	jg     0x10003c6d
10003c5f:	mov    DWORD PTR [edx-0xc],eax
10003c62:	mov    ecx,DWORD PTR [ecx]
10003c64:	mov    WORD PTR [ecx+eax*2],0x0
10003c6a:	ret    0x4
10003c6d:	push   0x80070057
10003c72:	call   0x10001050
10003c77:	int3   
10003c78:	int3   
10003c79:	int3   
10003c7a:	int3   
10003c7b:	int3   
10003c7c:	int3   
10003c7d:	int3   
10003c7e:	int3   
10003c7f:	int3   
10003c80:	mov    eax,DWORD PTR [esp+0x14]
10003c84:	push   ebp
10003c85:	mov    ebp,DWORD PTR [esp+0x8]
10003c89:	push   esi
10003c8a:	mov    esi,DWORD PTR [esp+0x14]
10003c8e:	push   edi
10003c8f:	lea    edi,[esi+eax*1]
10003c92:	mov    eax,DWORD PTR [ebp+0x0]
10003c95:	mov    edx,DWORD PTR [eax-0x8]
10003c98:	sub    eax,0x10
10003c9b:	mov    ecx,0x1
10003ca0:	sub    ecx,DWORD PTR [eax+0xc]
10003ca3:	sub    edx,edi
10003ca5:	or     ecx,edx
10003ca7:	jge    0x10003cb1
10003ca9:	push   edi
10003caa:	mov    ecx,ebp
10003cac:	call   0x10004920
10003cb1:	mov    eax,DWORD PTR [esp+0x14]
10003cb5:	push   ebx
10003cb6:	mov    ebx,DWORD PTR [ebp+0x0]
10003cb9:	add    esi,esi
10003cbb:	push   esi
10003cbc:	push   eax
10003cbd:	push   esi
10003cbe:	push   ebx
10003cbf:	call   0x10016153
10003cc4:	mov    eax,DWORD PTR [esp+0x34]
10003cc8:	mov    ecx,DWORD PTR [esp+0x30]
10003ccc:	add    eax,eax
10003cce:	push   eax
10003ccf:	push   ecx
10003cd0:	push   eax
10003cd1:	add    esi,ebx
10003cd3:	push   esi
10003cd4:	call   0x10016153
10003cd9:	add    esp,0x20
10003cdc:	test   edi,edi
10003cde:	pop    ebx
10003cdf:	jl     0x10003cf9
10003ce1:	mov    eax,DWORD PTR [ebp+0x0]
10003ce4:	cmp    edi,DWORD PTR [eax-0x8]
10003ce7:	jg     0x10003cf9
10003ce9:	mov    DWORD PTR [eax-0xc],edi
10003cec:	mov    edx,DWORD PTR [ebp+0x0]
10003cef:	mov    WORD PTR [edx+edi*2],0x0
10003cf5:	pop    edi
10003cf6:	pop    esi
10003cf7:	pop    ebp
10003cf8:	ret    
10003cf9:	push   0x80070057
10003cfe:	call   0x10001050
10003d03:	int3   
10003d04:	int3   
10003d05:	int3   
10003d06:	int3   
10003d07:	int3   
10003d08:	int3   
10003d09:	int3   
10003d0a:	int3   
10003d0b:	int3   
10003d0c:	int3   
10003d0d:	int3   
10003d0e:	int3   
10003d0f:	int3   
10003d10:	push   ecx
10003d11:	push   ebx
10003d12:	push   ebp
10003d13:	push   esi
10003d14:	mov    esi,DWORD PTR [ecx]
10003d16:	mov    ebx,DWORD PTR [esi-0xc]
10003d19:	sub    esi,0x10
10003d1c:	mov    DWORD PTR [esp+0xc],ecx
10003d20:	mov    ecx,DWORD PTR [esi]
10003d22:	mov    eax,DWORD PTR [ecx]
10003d24:	mov    edx,DWORD PTR [eax+0x10]
10003d27:	push   edi
10003d28:	call   edx
10003d2a:	mov    edx,DWORD PTR [eax]
10003d2c:	mov    ebp,DWORD PTR [esp+0x18]
10003d30:	push   0x2
10003d32:	mov    ecx,eax
10003d34:	mov    eax,DWORD PTR [edx]
10003d36:	push   ebp
10003d37:	call   eax
10003d39:	mov    edi,eax
10003d3b:	test   edi,edi
10003d3d:	jne    0x10003d44
10003d3f:	call   0x10004910
10003d44:	cmp    ebx,ebp
10003d46:	jge    0x10003d4a
10003d48:	mov    ebp,ebx
10003d4a:	lea    eax,[ebp+ebp*1+0x2]
10003d4e:	push   eax
10003d4f:	lea    ecx,[esi+0x10]
10003d52:	push   ecx
10003d53:	push   eax
10003d54:	lea    ebp,[edi+0x10]
10003d57:	push   ebp
10003d58:	call   0x10016153
10003d5d:	add    esp,0x10
10003d60:	mov    DWORD PTR [edi+0x4],ebx
10003d63:	lea    edx,[esi+0xc]
10003d66:	or     eax,0xffffffff
10003d69:	lock xadd DWORD PTR [edx],eax
10003d6d:	dec    eax
10003d6e:	test   eax,eax
10003d70:	jg     0x10003d7c
10003d72:	mov    ecx,DWORD PTR [esi]
10003d74:	mov    edx,DWORD PTR [ecx]
10003d76:	mov    eax,DWORD PTR [edx+0x4]
10003d79:	push   esi
10003d7a:	call   eax
10003d7c:	mov    ecx,DWORD PTR [esp+0x10]
10003d80:	pop    edi
10003d81:	pop    esi
10003d82:	mov    DWORD PTR [ecx],ebp
10003d84:	pop    ebp
10003d85:	pop    ebx
10003d86:	pop    ecx
10003d87:	ret    0x4
10003d8a:	int3   
10003d8b:	int3   
10003d8c:	int3   
10003d8d:	int3   
10003d8e:	int3   
10003d8f:	int3   
10003d90:	push   esi
10003d91:	mov    esi,ecx
10003d93:	push   edi
10003d94:	mov    edi,DWORD PTR [esi]
10003d96:	test   edi,edi
10003d98:	je     0x10003dbd
10003d9a:	push   ebx
10003d9b:	call   DWORD PTR ds:0x1002c07c
10003da1:	push   edi
10003da2:	mov    ebx,eax
10003da4:	call   DWORD PTR ds:0x1002c058
10003daa:	push   ebx
10003dab:	call   DWORD PTR ds:0x1002c078
10003db1:	mov    eax,DWORD PTR [esp+0x10]
10003db5:	pop    ebx
10003db6:	pop    edi
10003db7:	mov    DWORD PTR [esi],eax
10003db9:	pop    esi
10003dba:	ret    0x4
10003dbd:	mov    ecx,DWORD PTR [esp+0xc]
10003dc1:	pop    edi
10003dc2:	mov    DWORD PTR [esi],ecx
10003dc4:	pop    esi
10003dc5:	ret    0x4
10003dc8:	int3   
10003dc9:	int3   
10003dca:	int3   
10003dcb:	int3   
10003dcc:	int3   
10003dcd:	int3   
10003dce:	int3   
10003dcf:	int3   
10003dd0:	push   0xffffffff
10003dd2:	push   0x1002aece
10003dd7:	mov    eax,fs:0x0
10003ddd:	push   eax
10003dde:	mov    eax,ds:0x10064694
10003de3:	xor    eax,esp
10003de5:	push   eax
10003de6:	lea    eax,[esp+0x4]
10003dea:	mov    fs:0x0,eax
10003df0:	test   BYTE PTR ds:0x10066dc4,0x1
10003df7:	jne    0x10003e49
10003df9:	or     DWORD PTR ds:0x10066dc4,0x1
10003e00:	mov    ecx,0x10066db8
10003e05:	mov    DWORD PTR [esp+0xc],0x0
10003e0d:	call   0x10006830
10003e12:	mov    ds:0x10066dbc,eax
10003e17:	mov    BYTE PTR [eax+0x45],0x1
10003e1b:	mov    eax,ds:0x10066dbc
10003e20:	mov    DWORD PTR [eax+0x4],eax
10003e23:	mov    eax,ds:0x10066dbc
10003e28:	mov    DWORD PTR [eax],eax
10003e2a:	mov    eax,ds:0x10066dbc
10003e2f:	mov    DWORD PTR [eax+0x8],eax
10003e32:	push   0x1002bb30
10003e37:	mov    DWORD PTR ds:0x10066dc0,0x0
10003e41:	call   0x10016007
10003e46:	add    esp,0x4
10003e49:	mov    eax,0x10066db8
10003e4e:	mov    ecx,DWORD PTR [esp+0x4]
10003e52:	mov    DWORD PTR fs:0x0,ecx
10003e59:	pop    ecx
10003e5a:	add    esp,0xc
10003e5d:	ret    
10003e5e:	int3   
10003e5f:	int3   
10003e60:	push   0xffffffff
10003e62:	push   0x1002aa78
10003e67:	mov    eax,fs:0x0
10003e6d:	push   eax
10003e6e:	push   ecx
10003e6f:	push   ebx
10003e70:	push   ebp
10003e71:	push   esi
10003e72:	push   edi
10003e73:	mov    eax,ds:0x10064694
10003e78:	xor    eax,esp
10003e7a:	push   eax
10003e7b:	lea    eax,[esp+0x18]
10003e7f:	mov    fs:0x0,eax
10003e85:	mov    esi,DWORD PTR [esp+0x28]
10003e89:	xor    eax,eax
10003e8b:	mov    DWORD PTR [esp+0x14],eax
10003e8f:	mov    DWORD PTR [esp+0x20],eax
10003e93:	push   0xffffffff
10003e95:	mov    DWORD PTR [esi+0x14],eax
10003e98:	mov    DWORD PTR [esi+0x18],0xf
10003e9f:	lea    ebp,[esi+0x4]
10003ea2:	push   eax
10003ea3:	mov    BYTE PTR [ebp+0x0],al
10003ea6:	lea    eax,[esp+0x34]
10003eaa:	push   eax
10003eab:	mov    ecx,esi
10003ead:	call   0x10003820
10003eb2:	mov    eax,DWORD PTR [esi+0x14]
10003eb5:	mov    edi,0x1
10003eba:	cmp    eax,edi
10003ebc:	jbe    0x10003efd
10003ebe:	cmp    edi,eax
10003ec0:	jbe    0x10003ec7
10003ec2:	call   0x10016143
10003ec7:	cmp    DWORD PTR [esi+0x18],0x10
10003ecb:	jb     0x10003ed2
10003ecd:	mov    ebx,DWORD PTR [ebp+0x0]
10003ed0:	jmp    0x10003ed4
10003ed2:	mov    ebx,ebp
10003ed4:	lea    ecx,[edi-0x1]
10003ed7:	cmp    ecx,DWORD PTR [esi+0x14]
10003eda:	jbe    0x10003ee1
10003edc:	call   0x10016143
10003ee1:	cmp    DWORD PTR [esi+0x18],0x10
10003ee5:	jb     0x10003eec
10003ee7:	mov    eax,DWORD PTR [ebp+0x0]
10003eea:	jmp    0x10003eee
10003eec:	mov    eax,ebp
10003eee:	mov    dl,BYTE PTR [eax+edi*1-0x1]
10003ef2:	xor    BYTE PTR [ebx+edi*1],dl
10003ef5:	add    edi,0x1
10003ef8:	cmp    edi,DWORD PTR [esi+0x14]
10003efb:	jb     0x10003ec7
10003efd:	cmp    DWORD PTR [esp+0x44],0x10
10003f02:	jb     0x10003f11
10003f04:	mov    eax,DWORD PTR [esp+0x30]
10003f08:	push   eax
10003f09:	call   0x10015ad6
10003f0e:	add    esp,0x4
10003f11:	mov    eax,esi
10003f13:	mov    ecx,DWORD PTR [esp+0x18]
10003f17:	mov    DWORD PTR fs:0x0,ecx
10003f1e:	pop    ecx
10003f1f:	pop    edi
10003f20:	pop    esi
10003f21:	pop    ebp
10003f22:	pop    ebx
10003f23:	add    esp,0x10
10003f26:	ret    
10003f27:	int3   
10003f28:	int3   
10003f29:	int3   
10003f2a:	int3   
10003f2b:	int3   
10003f2c:	int3   
10003f2d:	int3   
10003f2e:	int3   
10003f2f:	int3   
10003f30:	push   0xffffffff
10003f32:	push   0x1002ae9e
10003f37:	mov    eax,fs:0x0
10003f3d:	push   eax
10003f3e:	mov    eax,ds:0x10064694
10003f43:	xor    eax,esp
10003f45:	push   eax
10003f46:	lea    eax,[esp+0x4]
10003f4a:	mov    fs:0x0,eax
10003f50:	test   BYTE PTR ds:0x10066db4,0x1
10003f57:	jne    0x10003fa9
10003f59:	or     DWORD PTR ds:0x10066db4,0x1
10003f60:	mov    ecx,0x10066da8
10003f65:	mov    DWORD PTR [esp+0xc],0x0
10003f6d:	call   0x10006830
10003f72:	mov    ds:0x10066dac,eax
10003f77:	mov    BYTE PTR [eax+0x45],0x1
10003f7b:	mov    eax,ds:0x10066dac
10003f80:	mov    DWORD PTR [eax+0x4],eax
10003f83:	mov    eax,ds:0x10066dac
10003f88:	mov    DWORD PTR [eax],eax
10003f8a:	mov    eax,ds:0x10066dac
10003f8f:	mov    DWORD PTR [eax+0x8],eax
10003f92:	push   0x1002bae0
10003f97:	mov    DWORD PTR ds:0x10066db0,0x0
10003fa1:	call   0x10016007
10003fa6:	add    esp,0x4
10003fa9:	mov    eax,0x10066da8
10003fae:	mov    ecx,DWORD PTR [esp+0x4]
10003fb2:	mov    DWORD PTR fs:0x0,ecx
10003fb9:	pop    ecx
10003fba:	add    esp,0xc
10003fbd:	ret    
10003fbe:	int3   
10003fbf:	int3   
10003fc0:	push   0xffffffff
10003fc2:	push   0x1002a838
10003fc7:	mov    eax,fs:0x0
10003fcd:	push   eax
10003fce:	push   ecx
10003fcf:	push   ebx
10003fd0:	push   ebp
10003fd1:	push   esi
10003fd2:	push   edi
10003fd3:	mov    eax,ds:0x10064694
10003fd8:	xor    eax,esp
10003fda:	push   eax
10003fdb:	lea    eax,[esp+0x18]
10003fdf:	mov    fs:0x0,eax
10003fe5:	mov    esi,DWORD PTR [esp+0x28]
10003fe9:	xor    eax,eax
10003feb:	mov    DWORD PTR [esp+0x14],eax
10003fef:	mov    DWORD PTR [esp+0x20],eax
10003ff3:	push   0xffffffff
10003ff5:	mov    DWORD PTR [esi+0x14],eax
10003ff8:	mov    DWORD PTR [esi+0x18],0x7
10003fff:	lea    ebp,[esi+0x4]
10004002:	push   eax
10004003:	mov    WORD PTR [ebp+0x0],ax
10004007:	lea    eax,[esp+0x34]
1000400b:	push   eax
1000400c:	mov    ecx,esi
1000400e:	call   0x10004cb0
10004013:	mov    eax,DWORD PTR [esi+0x14]
10004016:	mov    edi,0x1
1000401b:	cmp    eax,edi
1000401d:	jbe    0x10004060
1000401f:	cmp    edi,eax
10004021:	jbe    0x10004028
10004023:	call   0x10016143
10004028:	cmp    DWORD PTR [esi+0x18],0x8
1000402c:	jb     0x10004033
1000402e:	mov    ebx,DWORD PTR [ebp+0x0]
10004031:	jmp    0x10004035
10004033:	mov    ebx,ebp
10004035:	lea    ecx,[edi-0x1]
10004038:	cmp    ecx,DWORD PTR [esi+0x14]
1000403b:	jbe    0x10004042
1000403d:	call   0x10016143
10004042:	cmp    DWORD PTR [esi+0x18],0x8
10004046:	jb     0x1000404d
10004048:	mov    eax,DWORD PTR [ebp+0x0]
1000404b:	jmp    0x1000404f
1000404d:	mov    eax,ebp
1000404f:	mov    dx,WORD PTR [eax+edi*2-0x2]
10004054:	xor    WORD PTR [ebx+edi*2],dx
10004058:	add    edi,0x1
1000405b:	cmp    edi,DWORD PTR [esi+0x14]
1000405e:	jb     0x10004028
10004060:	cmp    DWORD PTR [esp+0x44],0x8
10004065:	jb     0x10004074
10004067:	mov    eax,DWORD PTR [esp+0x30]
1000406b:	push   eax
1000406c:	call   0x10015ad6
10004071:	add    esp,0x4
10004074:	mov    eax,esi
10004076:	mov    ecx,DWORD PTR [esp+0x18]
1000407a:	mov    DWORD PTR fs:0x0,ecx
10004081:	pop    ecx
10004082:	pop    edi
10004083:	pop    esi
10004084:	pop    ebp
10004085:	pop    ebx
10004086:	add    esp,0x10
10004089:	ret    
1000408a:	int3   
1000408b:	int3   
1000408c:	int3   
1000408d:	int3   
1000408e:	int3   
1000408f:	int3   
10004090:	push   ebp
10004091:	mov    ebp,esp
10004093:	and    esp,0xfffffff8
10004096:	push   0xffffffff
10004098:	push   0x1002ae70
1000409d:	mov    eax,fs:0x0
100040a3:	push   eax
100040a4:	sub    esp,0x60
100040a7:	push   ebx
100040a8:	push   esi
100040a9:	push   edi
100040aa:	mov    eax,ds:0x10064694
100040af:	xor    eax,esp
100040b1:	push   eax
100040b2:	lea    eax,[esp+0x70]
100040b6:	mov    fs:0x0,eax
100040bc:	mov    edi,ecx
100040be:	mov    ebx,DWORD PTR [ebp+0x8]
100040c1:	push   ebx
100040c2:	call   0x10005640
100040c7:	test   edi,edi
100040c9:	mov    esi,eax
100040cb:	jne    0x100040d2
100040cd:	call   0x10016143
100040d2:	mov    eax,DWORD PTR [edi+0x4]
100040d5:	cmp    esi,eax
100040d7:	je     0x10004101
100040d9:	cmp    DWORD PTR [esi+0x24],0x10
100040dd:	mov    ecx,DWORD PTR [esi+0x20]
100040e0:	jb     0x100040e7
100040e2:	mov    eax,DWORD PTR [esi+0x10]
100040e5:	jmp    0x100040ea
100040e7:	lea    eax,[esi+0x10]
100040ea:	push   ecx
100040eb:	push   eax
100040ec:	mov    eax,DWORD PTR [ebx+0x14]
100040ef:	push   eax
100040f0:	push   0x0
100040f2:	mov    ecx,ebx
100040f4:	call   0x100039d0
100040f9:	test   eax,eax
100040fb:	jge    0x100041b5
10004101:	xor    eax,eax
10004103:	mov    DWORD PTR [esp+0x30],0xf
1000410b:	mov    DWORD PTR [esp+0x2c],eax
1000410f:	mov    BYTE PTR [esp+0x1c],al
10004113:	lea    ecx,[esp+0x18]
10004117:	push   ecx
10004118:	push   ebx
10004119:	lea    ecx,[esp+0x3c]
1000411d:	mov    DWORD PTR [esp+0x80],eax
10004124:	call   0x10004c30
10004129:	push   eax
1000412a:	push   esi
1000412b:	push   edi
1000412c:	lea    edx,[esp+0x1c]
10004130:	push   edx
10004131:	mov    ecx,edi
10004133:	mov    BYTE PTR [esp+0x88],0x1
1000413b:	call   0x100049e0
10004140:	cmp    DWORD PTR [esp+0x68],0x10
10004145:	mov    edi,DWORD PTR [eax]
10004147:	mov    esi,DWORD PTR [eax+0x4]
1000414a:	jb     0x10004159
1000414c:	mov    eax,DWORD PTR [esp+0x54]
10004150:	push   eax
10004151:	call   0x10015ad6
10004156:	add    esp,0x4
10004159:	xor    ebx,ebx
1000415b:	cmp    DWORD PTR [esp+0x4c],0x10
10004160:	mov    DWORD PTR [esp+0x68],0xf
10004168:	mov    DWORD PTR [esp+0x64],ebx
1000416c:	mov    BYTE PTR [esp+0x54],bl
10004170:	jb     0x1000417f
10004172:	mov    ecx,DWORD PTR [esp+0x38]
10004176:	push   ecx
10004177:	call   0x10015ad6
1000417c:	add    esp,0x4
1000417f:	cmp    DWORD PTR [esp+0x30],0x10
10004184:	mov    DWORD PTR [esp+0x4c],0xf
1000418c:	mov    DWORD PTR [esp+0x48],ebx
10004190:	mov    BYTE PTR [esp+0x38],bl
10004194:	jb     0x100041a3
10004196:	mov    edx,DWORD PTR [esp+0x1c]
1000419a:	push   edx
1000419b:	call   0x10015ad6
100041a0:	add    esp,0x4
100041a3:	mov    DWORD PTR [esp+0x30],0xf
100041ab:	mov    DWORD PTR [esp+0x2c],ebx
100041af:	mov    BYTE PTR [esp+0x1c],bl
100041b3:	jmp    0x100041b7
100041b5:	xor    ebx,ebx
100041b7:	cmp    edi,ebx
100041b9:	jne    0x100041c0
100041bb:	call   0x10016143
100041c0:	cmp    esi,DWORD PTR [edi+0x4]
100041c3:	jne    0x100041ca
100041c5:	call   0x10016143
100041ca:	lea    eax,[esi+0x28]
100041cd:	mov    ecx,DWORD PTR [esp+0x70]
100041d1:	mov    DWORD PTR fs:0x0,ecx
100041d8:	pop    ecx
100041d9:	pop    edi
100041da:	pop    esi
100041db:	pop    ebx
100041dc:	mov    esp,ebp
100041de:	pop    ebp
100041df:	ret    0x4
100041e2:	int3   
100041e3:	int3   
100041e4:	int3   
100041e5:	int3   
100041e6:	int3   
100041e7:	int3   
100041e8:	int3   
100041e9:	int3   
100041ea:	int3   
100041eb:	int3   
100041ec:	int3   
100041ed:	int3   
100041ee:	int3   
100041ef:	int3   
100041f0:	sub    esp,0x18
100041f3:	push   ebx
100041f4:	mov    ebx,DWORD PTR [esp+0x24]
100041f8:	push   esi
100041f9:	push   edi
100041fa:	push   ebx
100041fb:	mov    esi,ecx
100041fd:	call   0x10005640
10004202:	test   esi,esi
10004204:	mov    edi,eax
10004206:	mov    DWORD PTR [esp+0x14],edi
1000420a:	jne    0x10004211
1000420c:	call   0x10016143
10004211:	cmp    edi,DWORD PTR [esi+0x4]
10004214:	mov    DWORD PTR [esp+0x10],esi
10004218:	je     0x10004244
1000421a:	cmp    DWORD PTR [edi+0x24],0x10
1000421e:	mov    eax,DWORD PTR [edi+0x20]
10004221:	jb     0x10004228
10004223:	mov    edi,DWORD PTR [edi+0x10]
10004226:	jmp    0x1000422b
10004228:	add    edi,0x10
1000422b:	push   eax
1000422c:	mov    eax,DWORD PTR [ebx+0x14]
1000422f:	push   edi
10004230:	push   eax
10004231:	push   0x0
10004233:	mov    ecx,ebx
10004235:	call   0x100039d0
1000423a:	test   eax,eax
1000423c:	jl     0x10004244
1000423e:	lea    ecx,[esp+0x10]
10004242:	jmp    0x10004253
10004244:	mov    ecx,DWORD PTR [esi+0x4]
10004247:	mov    DWORD PTR [esp+0x1c],ecx
1000424b:	mov    DWORD PTR [esp+0x18],esi
1000424f:	lea    ecx,[esp+0x18]
10004253:	mov    edx,DWORD PTR [ecx]
10004255:	mov    eax,DWORD PTR [esp+0x28]
10004259:	mov    ecx,DWORD PTR [ecx+0x4]
1000425c:	pop    edi
1000425d:	pop    esi
1000425e:	mov    DWORD PTR [eax],edx
10004260:	mov    DWORD PTR [eax+0x4],ecx
10004263:	pop    ebx
10004264:	add    esp,0x18
10004267:	ret    0x8
1000426a:	int3   
1000426b:	int3   
1000426c:	int3   
1000426d:	int3   
1000426e:	int3   
1000426f:	int3   
10004270:	push   esi
10004271:	mov    esi,ecx
10004273:	mov    eax,DWORD PTR [esi]
10004275:	test   eax,eax
10004277:	push   edi
10004278:	mov    edi,DWORD PTR [esp+0xc]
1000427c:	je     0x10004282
1000427e:	cmp    eax,DWORD PTR [edi]
10004280:	je     0x10004287
10004282:	call   0x10016143
10004287:	mov    eax,DWORD PTR [esi+0x4]
1000428a:	xor    ecx,ecx
1000428c:	cmp    eax,DWORD PTR [edi+0x4]
1000428f:	pop    edi
10004290:	sete   cl
10004293:	mov    al,cl
10004295:	pop    esi
10004296:	ret    0x4
10004299:	int3   
1000429a:	int3   
1000429b:	int3   
1000429c:	int3   
1000429d:	int3   
1000429e:	int3   
1000429f:	int3   
100042a0:	push   esi
100042a1:	mov    esi,ecx
100042a3:	cmp    DWORD PTR [esi+0x18],0x8
100042a7:	jb     0x100042b5
100042a9:	mov    eax,DWORD PTR [esi+0x4]
100042ac:	push   eax
100042ad:	call   0x10015ad6
100042b2:	add    esp,0x4
100042b5:	xor    eax,eax
100042b7:	mov    DWORD PTR [esi+0x18],0x7
100042be:	mov    DWORD PTR [esi+0x14],eax
100042c1:	mov    WORD PTR [esi+0x4],ax
100042c5:	pop    esi
100042c6:	ret    
100042c7:	int3   
100042c8:	int3   
100042c9:	int3   
100042ca:	int3   
100042cb:	int3   
100042cc:	int3   
100042cd:	int3   
100042ce:	int3   
100042cf:	int3   
100042d0:	push   ebp
100042d1:	mov    ebp,esp
100042d3:	and    esp,0xfffffff8
100042d6:	push   0xffffffff
100042d8:	push   0x1002ae40
100042dd:	mov    eax,fs:0x0
100042e3:	push   eax
100042e4:	sub    esp,0x60
100042e7:	push   ebx
100042e8:	push   esi
100042e9:	push   edi
100042ea:	mov    eax,ds:0x10064694
100042ef:	xor    eax,esp
100042f1:	push   eax
100042f2:	lea    eax,[esp+0x70]
100042f6:	mov    fs:0x0,eax
100042fc:	mov    edi,ecx
100042fe:	mov    ebx,DWORD PTR [ebp+0x8]
10004301:	push   ebx
10004302:	call   0x10005ad0
10004307:	test   edi,edi
10004309:	mov    esi,eax
1000430b:	jne    0x10004312
1000430d:	call   0x10016143
10004312:	mov    eax,DWORD PTR [edi+0x4]
10004315:	cmp    esi,eax
10004317:	je     0x10004341
10004319:	cmp    DWORD PTR [esi+0x24],0x8
1000431d:	mov    ecx,DWORD PTR [esi+0x20]
10004320:	jb     0x10004327
10004322:	mov    eax,DWORD PTR [esi+0x10]
10004325:	jmp    0x1000432a
10004327:	lea    eax,[esi+0x10]
1000432a:	push   ecx
1000432b:	push   eax
1000432c:	mov    eax,DWORD PTR [ebx+0x14]
1000432f:	push   eax
10004330:	push   0x0
10004332:	mov    ecx,ebx
10004334:	call   0x10006bd0
10004339:	test   eax,eax
1000433b:	jge    0x100043f9
10004341:	xor    eax,eax
10004343:	mov    DWORD PTR [esp+0x30],0x7
1000434b:	mov    DWORD PTR [esp+0x2c],eax
1000434f:	mov    WORD PTR [esp+0x1c],ax
10004354:	lea    ecx,[esp+0x18]
10004358:	push   ecx
10004359:	push   ebx
1000435a:	lea    ecx,[esp+0x3c]
1000435e:	mov    DWORD PTR [esp+0x80],eax
10004365:	call   0x100050d0
1000436a:	push   eax
1000436b:	push   esi
1000436c:	push   edi
1000436d:	lea    edx,[esp+0x1c]
10004371:	push   edx
10004372:	mov    ecx,edi
10004374:	mov    BYTE PTR [esp+0x88],0x1
1000437c:	call   0x10004e80
10004381:	cmp    DWORD PTR [esp+0x68],0x8
10004386:	mov    edi,DWORD PTR [eax]
10004388:	mov    esi,DWORD PTR [eax+0x4]
1000438b:	jb     0x1000439a
1000438d:	mov    eax,DWORD PTR [esp+0x54]
10004391:	push   eax
10004392:	call   0x10015ad6
10004397:	add    esp,0x4
1000439a:	xor    ebx,ebx
1000439c:	cmp    DWORD PTR [esp+0x4c],0x8
100043a1:	mov    DWORD PTR [esp+0x68],0x7
100043a9:	mov    DWORD PTR [esp+0x64],ebx
100043ad:	mov    WORD PTR [esp+0x54],bx
100043b2:	jb     0x100043c1
100043b4:	mov    ecx,DWORD PTR [esp+0x38]
100043b8:	push   ecx
100043b9:	call   0x10015ad6
100043be:	add    esp,0x4
100043c1:	cmp    DWORD PTR [esp+0x30],0x8
100043c6:	mov    DWORD PTR [esp+0x4c],0x7
100043ce:	mov    DWORD PTR [esp+0x48],ebx
100043d2:	mov    WORD PTR [esp+0x38],bx
100043d7:	jb     0x100043e6
100043d9:	mov    edx,DWORD PTR [esp+0x1c]
100043dd:	push   edx
100043de:	call   0x10015ad6
100043e3:	add    esp,0x4
100043e6:	mov    DWORD PTR [esp+0x30],0x7
100043ee:	mov    DWORD PTR [esp+0x2c],ebx
100043f2:	mov    WORD PTR [esp+0x1c],bx
100043f7:	jmp    0x100043fb
100043f9:	xor    ebx,ebx
100043fb:	cmp    edi,ebx
100043fd:	jne    0x10004404
100043ff:	call   0x10016143
10004404:	cmp    esi,DWORD PTR [edi+0x4]
10004407:	jne    0x1000440e
10004409:	call   0x10016143
1000440e:	lea    eax,[esi+0x28]
10004411:	mov    ecx,DWORD PTR [esp+0x70]
10004415:	mov    DWORD PTR fs:0x0,ecx
1000441c:	pop    ecx
1000441d:	pop    edi
1000441e:	pop    esi
1000441f:	pop    ebx
10004420:	mov    esp,ebp
10004422:	pop    ebp
10004423:	ret    0x4
10004426:	int3   
10004427:	int3   
10004428:	int3   
10004429:	int3   
1000442a:	int3   
1000442b:	int3   
1000442c:	int3   
1000442d:	int3   
1000442e:	int3   
1000442f:	int3   
10004430:	sub    esp,0x18
10004433:	push   ebx
10004434:	mov    ebx,DWORD PTR [esp+0x24]
10004438:	push   esi
10004439:	push   edi
1000443a:	push   ebx
1000443b:	mov    esi,ecx
1000443d:	call   0x10005ad0
10004442:	test   esi,esi
10004444:	mov    edi,eax
10004446:	mov    DWORD PTR [esp+0x14],edi
1000444a:	jne    0x10004451
1000444c:	call   0x10016143
10004451:	cmp    edi,DWORD PTR [esi+0x4]
10004454:	mov    DWORD PTR [esp+0x10],esi
10004458:	je     0x10004484
1000445a:	cmp    DWORD PTR [edi+0x24],0x8
1000445e:	mov    eax,DWORD PTR [edi+0x20]
10004461:	jb     0x10004468
10004463:	mov    edi,DWORD PTR [edi+0x10]
10004466:	jmp    0x1000446b
10004468:	add    edi,0x10
1000446b:	push   eax
1000446c:	mov    eax,DWORD PTR [ebx+0x14]
1000446f:	push   edi
10004470:	push   eax
10004471:	push   0x0
10004473:	mov    ecx,ebx
10004475:	call   0x10006bd0
1000447a:	test   eax,eax
1000447c:	jl     0x10004484
1000447e:	lea    ecx,[esp+0x10]
10004482:	jmp    0x10004493
10004484:	mov    ecx,DWORD PTR [esi+0x4]
10004487:	mov    DWORD PTR [esp+0x1c],ecx
1000448b:	mov    DWORD PTR [esp+0x18],esi
1000448f:	lea    ecx,[esp+0x18]
10004493:	mov    edx,DWORD PTR [ecx]
10004495:	mov    eax,DWORD PTR [esp+0x28]
10004499:	mov    ecx,DWORD PTR [ecx+0x4]
1000449c:	pop    edi
1000449d:	pop    esi
1000449e:	mov    DWORD PTR [eax],edx
100044a0:	mov    DWORD PTR [eax+0x4],ecx
100044a3:	pop    ebx
100044a4:	add    esp,0x18
100044a7:	ret    0x8
100044aa:	int3   
100044ab:	int3   
100044ac:	int3   
100044ad:	int3   
100044ae:	int3   
100044af:	int3   
100044b0:	mov    eax,DWORD PTR [esp+0x4]
100044b4:	push   esi
100044b5:	push   eax
100044b6:	mov    esi,ecx
100044b8:	call   0x10001600
100044bd:	mov    DWORD PTR [esi],0x1002c4d4
100044c3:	mov    eax,esi
100044c5:	pop    esi
100044c6:	ret    0x4
100044c9:	int3   
100044ca:	int3   
100044cb:	int3   
100044cc:	int3   
100044cd:	int3   
100044ce:	int3   
100044cf:	int3   
100044d0:	push   ebx
100044d1:	push   esi
100044d2:	mov    esi,ecx
100044d4:	cmp    DWORD PTR [esi+0x34],0x10
100044d8:	jb     0x100044e6
100044da:	mov    eax,DWORD PTR [esi+0x20]
100044dd:	push   eax
100044de:	call   0x10015ad6
100044e3:	add    esp,0x4
100044e6:	xor    ebx,ebx
100044e8:	mov    DWORD PTR [esi+0x34],0xf
100044ef:	mov    DWORD PTR [esi+0x30],ebx
100044f2:	mov    BYTE PTR [esi+0x20],bl
100044f5:	cmp    DWORD PTR [esi+0x18],0x10
100044f9:	jb     0x10004507
100044fb:	mov    ecx,DWORD PTR [esi+0x4]
100044fe:	push   ecx
100044ff:	call   0x10015ad6
10004504:	add    esp,0x4
10004507:	mov    DWORD PTR [esi+0x14],ebx
1000450a:	mov    DWORD PTR [esi+0x18],0xf
10004511:	mov    BYTE PTR [esi+0x4],bl
10004514:	pop    esi
10004515:	pop    ebx
10004516:	ret    
10004517:	int3   
10004518:	int3   
10004519:	int3   
1000451a:	int3   
1000451b:	int3   
1000451c:	int3   
1000451d:	int3   
1000451e:	int3   
1000451f:	int3   
10004520:	push   esi
10004521:	mov    esi,ecx
10004523:	cmp    DWORD PTR [esi+0x34],0x8
10004527:	push   edi
10004528:	jb     0x10004536
1000452a:	mov    eax,DWORD PTR [esi+0x20]
1000452d:	push   eax
1000452e:	call   0x10015ad6
10004533:	add    esp,0x4
10004536:	xor    edi,edi
10004538:	mov    DWORD PTR [esi+0x34],0x7
1000453f:	mov    DWORD PTR [esi+0x30],edi
10004542:	mov    WORD PTR [esi+0x20],di
10004546:	cmp    DWORD PTR [esi+0x18],0x8
1000454a:	jb     0x10004558
1000454c:	mov    ecx,DWORD PTR [esi+0x4]
1000454f:	push   ecx
10004550:	call   0x10015ad6
10004555:	add    esp,0x4
10004558:	mov    DWORD PTR [esi+0x14],edi
1000455b:	mov    DWORD PTR [esi+0x18],0x7
10004562:	mov    WORD PTR [esi+0x4],di
10004566:	pop    edi
10004567:	pop    esi
10004568:	ret    
10004569:	int3   
1000456a:	int3   
1000456b:	int3   
1000456c:	int3   
1000456d:	int3   
1000456e:	int3   
1000456f:	int3   
10004570:	push   ebx
10004571:	mov    ebx,DWORD PTR [esp+0x8]
10004575:	push   esi
10004576:	mov    esi,ecx
10004578:	cmp    DWORD PTR [esi+0x14],ebx
1000457b:	push   edi
1000457c:	jae    0x10004583
1000457e:	call   0x100159b6
10004583:	mov    eax,DWORD PTR [esi+0x14]
10004586:	mov    edi,DWORD PTR [esp+0x14]
1000458a:	sub    eax,ebx
1000458c:	cmp    eax,edi
1000458e:	jae    0x10004592
10004590:	mov    edi,eax
10004592:	test   edi,edi
10004594:	jbe    0x100045eb
10004596:	mov    ecx,DWORD PTR [esi+0x18]
10004599:	cmp    ecx,0x10
1000459c:	push   ebp
1000459d:	lea    ebp,[esi+0x4]
100045a0:	jb     0x100045ab
100045a2:	mov    edx,DWORD PTR [ebp+0x0]
100045a5:	mov    DWORD PTR [esp+0x14],edx
100045a9:	jmp    0x100045af
100045ab:	mov    DWORD PTR [esp+0x14],ebp
100045af:	cmp    ecx,0x10
100045b2:	jb     0x100045b9
100045b4:	mov    edx,DWORD PTR [ebp+0x0]
100045b7:	jmp    0x100045bb
100045b9:	mov    edx,ebp
100045bb:	sub    eax,edi
100045bd:	push   eax
100045be:	mov    eax,DWORD PTR [esp+0x18]
100045c2:	add    eax,ebx
100045c4:	add    eax,edi
100045c6:	push   eax
100045c7:	sub    ecx,ebx
100045c9:	push   ecx
100045ca:	add    edx,ebx
100045cc:	push   edx
100045cd:	call   0x1001647e
100045d2:	mov    eax,DWORD PTR [esi+0x14]
100045d5:	sub    eax,edi
100045d7:	add    esp,0x10
100045da:	cmp    DWORD PTR [esi+0x18],0x10
100045de:	mov    DWORD PTR [esi+0x14],eax
100045e1:	jb     0x100045e6
100045e3:	mov    ebp,DWORD PTR [ebp+0x0]
100045e6:	mov    BYTE PTR [eax+ebp*1],0x0
100045ea:	pop    ebp
100045eb:	pop    edi
100045ec:	mov    eax,esi
100045ee:	pop    esi
100045ef:	pop    ebx
100045f0:	ret    0x8
100045f3:	int3   
100045f4:	int3   
100045f5:	int3   
100045f6:	int3   
100045f7:	int3   
100045f8:	int3   
100045f9:	int3   
100045fa:	int3   
100045fb:	int3   
100045fc:	int3   
100045fd:	int3   
100045fe:	int3   
100045ff:	int3   
10004600:	push   ebp
10004601:	mov    ebp,esp
10004603:	push   0xffffffff
10004605:	push   0x1002a810
1000460a:	mov    eax,fs:0x0
10004610:	push   eax
10004611:	sub    esp,0x1c
10004614:	push   ebx
10004615:	push   esi
10004616:	push   edi
10004617:	mov    eax,ds:0x10064694
1000461c:	xor    eax,ebp
1000461e:	push   eax
1000461f:	lea    eax,[ebp-0xc]
10004622:	mov    fs:0x0,eax
10004628:	mov    DWORD PTR [ebp-0x10],esp
1000462b:	mov    edi,ecx
1000462d:	mov    DWORD PTR [ebp-0x14],edi
10004630:	mov    eax,DWORD PTR [ebp+0x8]
10004633:	mov    esi,eax
10004635:	or     esi,0xf
10004638:	cmp    esi,0xfffffffe
1000463b:	jbe    0x10004641
1000463d:	mov    esi,eax
1000463f:	jmp    0x10004663
10004641:	mov    ebx,DWORD PTR [edi+0x18]
10004644:	mov    eax,0xaaaaaaab
10004649:	mul    esi
1000464b:	mov    ecx,ebx
1000464d:	shr    ecx,1
1000464f:	shr    edx,1
10004651:	cmp    edx,ecx
10004653:	jae    0x10004663
10004655:	mov    eax,0xfffffffe
1000465a:	sub    eax,ecx
1000465c:	cmp    ebx,eax
1000465e:	ja     0x10004663
10004660:	lea    esi,[ecx+ebx*1]
10004663:	xor    ebx,ebx
10004665:	lea    ecx,[esi+0x1]
10004668:	cmp    ecx,ebx
1000466a:	mov    DWORD PTR [ebp-0x4],ebx
1000466d:	ja     0x1000467f
1000466f:	xor    ecx,ecx
10004671:	push   ecx
10004672:	call   0x10016414
10004677:	add    esp,0x4
1000467a:	mov    DWORD PTR [ebp+0x8],eax
1000467d:	jmp    0x100046d7
1000467f:	or     eax,0xffffffff
10004682:	xor    edx,edx
10004684:	div    ecx
10004686:	cmp    eax,0x1
10004689:	jae    0x10004671
1000468b:	lea    ecx,[ebp-0x18]
1000468e:	push   ecx
1000468f:	lea    ecx,[ebp-0x28]
10004692:	mov    DWORD PTR [ebp-0x18],ebx
10004695:	call   0x1001626e
1000469a:	push   0x10058b44
1000469f:	lea    edx,[ebp-0x28]
100046a2:	push   edx
100046a3:	mov    DWORD PTR [ebp-0x28],0x1002c4ec
100046aa:	call   0x100161ce
100046af:	mov    eax,DWORD PTR [ebp+0x8]
100046b2:	mov    ecx,DWORD PTR [ebp-0x14]
100046b5:	mov    DWORD PTR [ebp-0x1c],eax
100046b8:	add    eax,0x1
100046bb:	mov    DWORD PTR [ebp-0x10],esp
100046be:	push   eax
100046bf:	mov    BYTE PTR [ebp-0x4],0x2
100046c3:	call   0x10003a40
100046c8:	mov    DWORD PTR [ebp+0x8],eax
100046cb:	mov    eax,0x100046d1
100046d0:	ret    
100046d1:	mov    edi,DWORD PTR [ebp-0x14]
100046d4:	mov    esi,DWORD PTR [ebp-0x1c]
100046d7:	mov    ebx,DWORD PTR [ebp+0xc]
100046da:	test   ebx,ebx
100046dc:	jbe    0x100046fe
100046de:	cmp    DWORD PTR [edi+0x18],0x10
100046e2:	jb     0x100046e9
100046e4:	mov    eax,DWORD PTR [edi+0x4]
100046e7:	jmp    0x100046ec
100046e9:	lea    eax,[edi+0x4]
100046ec:	mov    ecx,DWORD PTR [ebp+0x8]
100046ef:	push   ebx
100046f0:	push   eax
100046f1:	lea    eax,[esi+0x1]
100046f4:	push   eax
100046f5:	push   ecx
100046f6:	call   0x10016153
100046fb:	add    esp,0x10
100046fe:	cmp    DWORD PTR [edi+0x18],0x10
10004702:	jb     0x10004710
10004704:	mov    edx,DWORD PTR [edi+0x4]
10004707:	push   edx
10004708:	call   0x10015ad6
1000470d:	add    esp,0x4
10004710:	cmp    esi,0x10
10004713:	mov    ecx,DWORD PTR [ebp+0x8]
10004716:	lea    eax,[edi+0x4]
10004719:	mov    BYTE PTR [eax],0x0
1000471c:	mov    DWORD PTR [eax],ecx
1000471e:	mov    DWORD PTR [edi+0x18],esi
10004721:	mov    DWORD PTR [edi+0x14],ebx
10004724:	jb     0x10004728
10004726:	mov    eax,ecx
10004728:	mov    BYTE PTR [eax+ebx*1],0x0
1000472c:	mov    ecx,DWORD PTR [ebp-0xc]
1000472f:	mov    DWORD PTR fs:0x0,ecx
10004736:	pop    ecx
10004737:	pop    edi
10004738:	pop    esi
10004739:	pop    ebx
1000473a:	mov    esp,ebp
1000473c:	pop    ebp
1000473d:	ret    0x8
10004740:	mov    esi,DWORD PTR [ebp-0x14]
10004743:	cmp    DWORD PTR [esi+0x18],0x10
10004747:	jb     0x10004755
10004749:	mov    eax,DWORD PTR [esi+0x4]
1000474c:	push   eax
1000474d:	call   0x10015ad6
10004752:	add    esp,0x4
10004755:	push   0x0
10004757:	mov    DWORD PTR [esi+0x18],0xf
1000475e:	mov    DWORD PTR [esi+0x14],0x0
10004765:	push   0x0
10004767:	mov    BYTE PTR [esi+0x4],0x0
1000476b:	call   0x100161ce
10004770:	int3   
10004771:	int3   
10004772:	int3   
10004773:	int3   
10004774:	int3   
10004775:	int3   
10004776:	int3   
10004777:	int3   
10004778:	int3   
10004779:	int3   
1000477a:	int3   
1000477b:	int3   
1000477c:	int3   
1000477d:	int3   
1000477e:	int3   
1000477f:	int3   
10004780:	push   edi
10004781:	mov    edi,ecx
10004783:	mov    ecx,DWORD PTR [esp+0x10]
10004787:	test   ecx,ecx
10004789:	jne    0x10004795
1000478b:	push   0x80004005
10004790:	call   0x10001050
10004795:	push   ebx
10004796:	mov    ebx,DWORD PTR [esp+0xc]
1000479a:	test   ebx,ebx
1000479c:	push   esi
1000479d:	mov    esi,DWORD PTR [esp+0x14]
100047a1:	jne    0x100047b1
100047a3:	test   esi,esi
100047a5:	je     0x100047b1
100047a7:	push   0x80070057
100047ac:	call   0x10001050
100047b1:	mov    eax,DWORD PTR [ecx]
100047b3:	mov    edx,DWORD PTR [eax]
100047b5:	push   0x2
100047b7:	push   esi
100047b8:	call   edx
100047ba:	test   eax,eax
100047bc:	jne    0x100047c3
100047be:	call   0x10004910
100047c3:	add    eax,0x10
100047c6:	test   esi,esi
100047c8:	mov    DWORD PTR [edi],eax
100047ca:	jl     0x100047a7
100047cc:	cmp    esi,DWORD PTR [eax-0x8]
100047cf:	jg     0x100047a7
100047d1:	mov    DWORD PTR [eax-0xc],esi
100047d4:	mov    ecx,DWORD PTR [edi]
100047d6:	lea    eax,[esi+esi*1]
100047d9:	push   eax
100047da:	push   ebx
100047db:	mov    WORD PTR [eax+ecx*1],0x0
100047e1:	mov    edx,DWORD PTR [edi]
100047e3:	push   eax
100047e4:	push   edx
100047e5:	call   0x10016153
100047ea:	add    esp,0x10
100047ed:	pop    esi
100047ee:	pop    ebx
100047ef:	mov    eax,edi
100047f1:	pop    edi
100047f2:	ret    0xc
100047f5:	int3   
100047f6:	int3   
100047f7:	int3   
100047f8:	int3   
100047f9:	int3   
100047fa:	int3   
100047fb:	int3   
100047fc:	int3   
100047fd:	int3   
100047fe:	int3   
100047ff:	int3   
10004800:	push   esi
10004801:	mov    esi,ecx
10004803:	mov    ecx,DWORD PTR [esi]
10004805:	cmp    DWORD PTR [ecx-0xc],0x0
10004809:	lea    eax,[ecx-0x10]
1000480c:	push   edi
1000480d:	mov    edi,DWORD PTR [eax]
1000480f:	je     0x1000485f
10004811:	cmp    DWORD PTR [eax+0xc],0x0
10004815:	lea    edx,[eax+0xc]
10004818:	jge    0x1000483b
1000481a:	cmp    DWORD PTR [ecx-0x8],0x0
1000481e:	jge    0x1000482a
10004820:	push   0x80070057
10004825:	call   0x10001050
1000482a:	mov    DWORD PTR [ecx-0xc],0x0
10004831:	mov    eax,DWORD PTR [esi]
10004833:	pop    edi
10004834:	mov    WORD PTR [eax],0x0
10004839:	pop    esi
1000483a:	ret    
1000483b:	or     ecx,0xffffffff
1000483e:	lock xadd DWORD PTR [edx],ecx
10004842:	dec    ecx
10004843:	test   ecx,ecx
10004845:	jg     0x10004851
10004847:	mov    ecx,DWORD PTR [eax]
10004849:	mov    edx,DWORD PTR [ecx]
1000484b:	push   eax
1000484c:	mov    eax,DWORD PTR [edx+0x4]
1000484f:	call   eax
10004851:	mov    edx,DWORD PTR [edi]
10004853:	mov    eax,DWORD PTR [edx+0xc]
10004856:	mov    ecx,edi
10004858:	call   eax
1000485a:	add    eax,0x10
1000485d:	mov    DWORD PTR [esi],eax
1000485f:	pop    edi
10004860:	pop    esi
10004861:	ret    
10004862:	int3   
10004863:	int3   
10004864:	int3   
10004865:	int3   
10004866:	int3   
10004867:	int3   
10004868:	int3   
10004869:	int3   
1000486a:	int3   
1000486b:	int3   
1000486c:	int3   
1000486d:	int3   
1000486e:	int3   
1000486f:	int3   
10004870:	push   ebx
10004871:	mov    ebx,DWORD PTR [esp+0xc]
10004875:	test   ebx,ebx
10004877:	push   ebp
10004878:	mov    ebp,ecx
1000487a:	jne    0x10004886
1000487c:	call   0x10004800
10004881:	pop    ebp
10004882:	pop    ebx
10004883:	ret    0x8
10004886:	push   esi
10004887:	mov    esi,DWORD PTR [esp+0x10]
1000488b:	test   esi,esi
1000488d:	jne    0x10004899
1000488f:	push   0x80070057
10004894:	call   0x10001050
10004899:	mov    eax,DWORD PTR [ebp+0x0]
1000489c:	mov    edx,DWORD PTR [eax-0x8]
1000489f:	mov    ecx,0x1
100048a4:	sub    ecx,DWORD PTR [eax-0x4]
100048a7:	sub    esi,eax
100048a9:	sub    edx,ebx
100048ab:	sar    esi,1
100048ad:	or     ecx,edx
100048af:	push   edi
100048b0:	mov    edi,DWORD PTR [eax-0xc]
100048b3:	jge    0x100048bd
100048b5:	push   ebx
100048b6:	mov    ecx,ebp
100048b8:	call   0x10004920
100048bd:	mov    eax,DWORD PTR [ebp+0x0]
100048c0:	cmp    esi,edi
100048c2:	lea    edi,[ebx+ebx*1]
100048c5:	push   edi
100048c6:	ja     0x100048d5
100048c8:	lea    ecx,[eax+esi*2]
100048cb:	push   ecx
100048cc:	push   edi
100048cd:	push   eax
100048ce:	call   0x1001647e
100048d3:	jmp    0x100048e1
100048d5:	mov    edx,DWORD PTR [esp+0x18]
100048d9:	push   edx
100048da:	push   edi
100048db:	push   eax
100048dc:	call   0x10016153
100048e1:	add    esp,0x10
100048e4:	test   ebx,ebx
100048e6:	jl     0x10004903
100048e8:	mov    eax,DWORD PTR [ebp+0x0]
100048eb:	cmp    ebx,DWORD PTR [eax-0x8]
100048ee:	jg     0x10004903
100048f0:	mov    DWORD PTR [eax-0xc],ebx
100048f3:	mov    eax,DWORD PTR [ebp+0x0]
100048f6:	mov    WORD PTR [edi+eax*1],0x0
100048fc:	pop    edi
100048fd:	pop    esi
100048fe:	pop    ebp
100048ff:	pop    ebx
10004900:	ret    0x8
10004903:	push   0x80070057
10004908:	call   0x10001050
1000490d:	int3   
1000490e:	int3   
1000490f:	int3   
10004910:	push   0x8007000e
10004915:	call   0x10001050
1000491a:	int3   
1000491b:	int3   
1000491c:	int3   
1000491d:	int3   
1000491e:	int3   
1000491f:	int3   
10004920:	mov    eax,DWORD PTR [ecx]
10004922:	mov    edx,DWORD PTR [esp+0x4]
10004926:	sub    eax,0x10
10004929:	push   esi
1000492a:	mov    esi,DWORD PTR [eax+0x4]
1000492d:	cmp    esi,edx
1000492f:	jle    0x10004933
10004931:	mov    edx,esi
10004933:	cmp    DWORD PTR [eax+0xc],0x1
10004937:	pop    esi
10004938:	jle    0x10004943
1000493a:	mov    DWORD PTR [esp+0x4],edx
1000493e:	jmp    0x10003d10
10004943:	mov    eax,DWORD PTR [eax+0x8]
10004946:	cmp    eax,edx
10004948:	jge    0x10004969
1000494a:	cmp    eax,0x400
1000494f:	jle    0x10004958
10004951:	add    eax,0x400
10004956:	jmp    0x1000495a
10004958:	add    eax,eax
1000495a:	cmp    eax,edx
1000495c:	jge    0x10004960
1000495e:	mov    eax,edx
10004960:	mov    DWORD PTR [esp+0x4],eax
10004964:	jmp    0x10005220
10004969:	ret    0x4
1000496c:	int3   
1000496d:	int3   
1000496e:	int3   
1000496f:	int3   
10004970:	push   esi
10004971:	mov    esi,DWORD PTR [esp+0x8]
10004975:	mov    ecx,DWORD PTR [esi]
10004977:	mov    eax,DWORD PTR [ecx]
10004979:	mov    edx,DWORD PTR [eax+0x10]
1000497c:	push   edi
1000497d:	call   edx
1000497f:	cmp    DWORD PTR [esi+0xc],0x0
10004983:	lea    ecx,[esi+0xc]
10004986:	jl     0x1000499c
10004988:	cmp    eax,DWORD PTR [esi]
1000498a:	jne    0x1000499c
1000498c:	mov    edi,esi
1000498e:	mov    eax,0x1
10004993:	lock xadd DWORD PTR [ecx],eax
10004997:	mov    eax,edi
10004999:	pop    edi
1000499a:	pop    esi
1000499b:	ret    
1000499c:	mov    ecx,DWORD PTR [esi+0x4]
1000499f:	mov    edx,DWORD PTR [eax]
100049a1:	mov    edx,DWORD PTR [edx]
100049a3:	push   0x2
100049a5:	push   ecx
100049a6:	mov    ecx,eax
100049a8:	call   edx
100049aa:	mov    edi,eax
100049ac:	test   edi,edi
100049ae:	jne    0x100049b5
100049b0:	jmp    0x10004910
100049b5:	mov    eax,DWORD PTR [esi+0x4]
100049b8:	mov    DWORD PTR [edi+0x4],eax
100049bb:	mov    eax,DWORD PTR [esi+0x4]
100049be:	lea    eax,[eax+eax*1+0x2]
100049c2:	push   eax
100049c3:	add    esi,0x10
100049c6:	push   esi
100049c7:	push   eax
100049c8:	lea    ecx,[edi+0x10]
100049cb:	push   ecx
100049cc:	call   0x10016153
100049d1:	add    esp,0x10
100049d4:	mov    eax,edi
100049d6:	pop    edi
100049d7:	pop    esi
100049d8:	ret    
100049d9:	int3   
100049da:	int3   
100049db:	int3   
100049dc:	int3   
100049dd:	int3   
100049de:	int3   
100049df:	int3   
100049e0:	push   ebp
100049e1:	mov    ebp,esp
100049e3:	and    esp,0xfffffff8
100049e6:	sub    esp,0x14
100049e9:	push   ebx
100049ea:	push   esi
100049eb:	mov    esi,ecx
100049ed:	cmp    DWORD PTR [esi+0x8],0x0
100049f1:	push   edi
100049f2:	jne    0x10004a14
100049f4:	mov    eax,DWORD PTR [ebp+0x14]
100049f7:	mov    ecx,DWORD PTR [esi+0x4]
100049fa:	mov    edi,DWORD PTR [ebp+0x8]
100049fd:	push   eax
100049fe:	push   ecx
100049ff:	push   0x1
10004a01:	push   edi
10004a02:	mov    ecx,esi
10004a04:	call   0x100053f0
10004a09:	mov    eax,edi
10004a0b:	pop    edi
10004a0c:	pop    esi
10004a0d:	pop    ebx
10004a0e:	mov    esp,ebp
10004a10:	pop    ebp
10004a11:	ret    0x10
10004a14:	mov    edx,DWORD PTR [esi+0x4]
10004a17:	mov    edi,DWORD PTR [ebp+0xc]
10004a1a:	test   edi,edi
10004a1c:	mov    eax,DWORD PTR [edx]
10004a1e:	mov    DWORD PTR [esp+0x18],eax
10004a22:	je     0x10004a28
10004a24:	cmp    edi,esi
10004a26:	je     0x10004a2d
10004a28:	call   0x10016143
10004a2d:	mov    ebx,DWORD PTR [ebp+0x10]
10004a30:	cmp    ebx,DWORD PTR [esp+0x18]
10004a34:	jne    0x10004a67
10004a36:	mov    edi,DWORD PTR [ebp+0x14]
10004a39:	lea    ecx,[ebx+0xc]
10004a3c:	push   ecx
10004a3d:	push   edi
10004a3e:	mov    ecx,esi
10004a40:	call   0x10004bf0
10004a45:	test   al,al
10004a47:	je     0x10004bc3
10004a4d:	push   edi
10004a4e:	mov    edi,DWORD PTR [ebp+0x8]
10004a51:	push   ebx
10004a52:	push   0x1
10004a54:	push   edi
10004a55:	mov    ecx,esi
10004a57:	call   0x100053f0
10004a5c:	mov    eax,edi
10004a5e:	pop    edi
10004a5f:	pop    esi
10004a60:	pop    ebx
10004a61:	mov    esp,ebp
10004a63:	pop    ebp
10004a64:	ret    0x10
10004a67:	test   edi,edi
10004a69:	mov    edx,DWORD PTR [esi+0x4]
10004a6c:	mov    DWORD PTR [esp+0x18],edx
10004a70:	je     0x10004a76
10004a72:	cmp    edi,esi
10004a74:	je     0x10004a7b
10004a76:	call   0x10016143
10004a7b:	cmp    ebx,DWORD PTR [esp+0x18]
10004a7f:	mov    edi,DWORD PTR [ebp+0x14]
10004a82:	mov    ecx,esi
10004a84:	jne    0x10004abe
10004a86:	mov    eax,DWORD PTR [esi+0x4]
10004a89:	mov    eax,DWORD PTR [eax+0x8]
10004a8c:	add    eax,0xc
10004a8f:	push   edi
10004a90:	push   eax
10004a91:	call   0x10004bf0
10004a96:	test   al,al
10004a98:	je     0x10004bc3
10004a9e:	mov    ecx,DWORD PTR [esi+0x4]
10004aa1:	mov    edx,DWORD PTR [ecx+0x8]
10004aa4:	push   edi
10004aa5:	mov    edi,DWORD PTR [ebp+0x8]
10004aa8:	push   edx
10004aa9:	push   0x0
10004aab:	push   edi
10004aac:	mov    ecx,esi
10004aae:	call   0x100053f0
10004ab3:	mov    eax,edi
10004ab5:	pop    edi
10004ab6:	pop    esi
10004ab7:	pop    ebx
10004ab8:	mov    esp,ebp
10004aba:	pop    ebp
10004abb:	ret    0x10
10004abe:	lea    eax,[ebx+0xc]
10004ac1:	push   eax
10004ac2:	push   edi
10004ac3:	call   0x10004bf0
10004ac8:	test   al,al
10004aca:	je     0x10004b2f
10004acc:	mov    eax,DWORD PTR [ebp+0xc]
10004acf:	lea    ecx,[esp+0xc]
10004ad3:	mov    DWORD PTR [esp+0xc],eax
10004ad7:	mov    DWORD PTR [esp+0x10],ebx
10004adb:	call   0x100063b0
10004ae0:	mov    ecx,DWORD PTR [esp+0x10]
10004ae4:	add    ecx,0xc
10004ae7:	push   edi
10004ae8:	push   ecx
10004ae9:	mov    ecx,esi
10004aeb:	call   0x10004bf0
10004af0:	test   al,al
10004af2:	je     0x10004b2f
10004af4:	mov    eax,DWORD PTR [esp+0x10]
10004af8:	mov    edx,DWORD PTR [eax+0x8]
10004afb:	cmp    BYTE PTR [edx+0x45],0x0
10004aff:	push   edi
10004b00:	mov    edi,DWORD PTR [ebp+0x8]
10004b03:	mov    ecx,esi
10004b05:	je     0x10004b1b
10004b07:	push   eax
10004b08:	push   0x0
10004b0a:	push   edi
10004b0b:	call   0x100053f0
10004b10:	mov    eax,edi
10004b12:	pop    edi
10004b13:	pop    esi
10004b14:	pop    ebx
10004b15:	mov    esp,ebp
10004b17:	pop    ebp
10004b18:	ret    0x10
10004b1b:	push   ebx
10004b1c:	push   0x1
10004b1e:	push   edi
10004b1f:	call   0x100053f0
10004b24:	mov    eax,edi
10004b26:	pop    edi
10004b27:	pop    esi
10004b28:	pop    ebx
10004b29:	mov    esp,ebp
10004b2b:	pop    ebp
10004b2c:	ret    0x10
10004b2f:	push   edi
10004b30:	lea    eax,[ebx+0xc]
10004b33:	push   eax
10004b34:	mov    ecx,esi
10004b36:	call   0x10004bf0
10004b3b:	test   al,al
10004b3d:	je     0x10004bc3
10004b43:	mov    ecx,DWORD PTR [esi+0x4]
10004b46:	mov    eax,DWORD PTR [ebp+0xc]
10004b49:	mov    DWORD PTR [esp+0x18],ecx
10004b4d:	lea    ecx,[esp+0xc]
10004b51:	mov    DWORD PTR [esp+0xc],eax
10004b55:	mov    DWORD PTR [esp+0x10],ebx
10004b59:	mov    DWORD PTR [esp+0x14],esi
10004b5d:	call   0x10006440
10004b62:	lea    edx,[esp+0x14]
10004b66:	push   edx
10004b67:	lea    ecx,[esp+0x10]
10004b6b:	call   0x10004270
10004b70:	test   al,al
10004b72:	jne    0x10004b88
10004b74:	mov    eax,DWORD PTR [esp+0x10]
10004b78:	add    eax,0xc
10004b7b:	push   eax
10004b7c:	push   edi
10004b7d:	mov    ecx,esi
10004b7f:	call   0x10004bf0
10004b84:	test   al,al
10004b86:	je     0x10004bc3
10004b88:	mov    ecx,DWORD PTR [ebx+0x8]
10004b8b:	cmp    BYTE PTR [ecx+0x45],0x0
10004b8f:	push   edi
10004b90:	mov    edi,DWORD PTR [ebp+0x8]
10004b93:	mov    ecx,esi
10004b95:	je     0x10004bab
10004b97:	push   ebx
10004b98:	push   0x0
10004b9a:	push   edi
10004b9b:	call   0x100053f0
10004ba0:	mov    eax,edi
10004ba2:	pop    edi
10004ba3:	pop    esi
10004ba4:	pop    ebx
10004ba5:	mov    esp,ebp
10004ba7:	pop    ebp
10004ba8:	ret    0x10
10004bab:	mov    edx,DWORD PTR [esp+0x14]
10004baf:	push   edx
10004bb0:	push   0x1
10004bb2:	push   edi
10004bb3:	call   0x100053f0
10004bb8:	mov    eax,edi
10004bba:	pop    edi
10004bbb:	pop    esi
10004bbc:	pop    ebx
10004bbd:	mov    esp,ebp
10004bbf:	pop    ebp
10004bc0:	ret    0x10
10004bc3:	push   edi
10004bc4:	lea    eax,[esp+0x18]
10004bc8:	push   eax
10004bc9:	mov    ecx,esi
10004bcb:	call   0x10005260
10004bd0:	mov    edx,DWORD PTR [eax]
10004bd2:	mov    ecx,DWORD PTR [ebp+0x8]
10004bd5:	pop    edi
10004bd6:	mov    DWORD PTR [ecx],edx
10004bd8:	mov    eax,DWORD PTR [eax+0x4]
10004bdb:	pop    esi
10004bdc:	mov    DWORD PTR [ecx+0x4],eax
10004bdf:	mov    eax,ecx
10004be1:	pop    ebx
10004be2:	mov    esp,ebp
10004be4:	pop    ebp
10004be5:	ret    0x10
10004be8:	int3   
10004be9:	int3   
10004bea:	int3   
10004beb:	int3   
10004bec:	int3   
10004bed:	int3   
10004bee:	int3   
10004bef:	int3   
10004bf0:	mov    eax,DWORD PTR [esp+0x8]
10004bf4:	cmp    DWORD PTR [eax+0x18],0x10
10004bf8:	mov    ecx,DWORD PTR [eax+0x14]
10004bfb:	jb     0x10004c02
10004bfd:	mov    eax,DWORD PTR [eax+0x4]
10004c00:	jmp    0x10004c05
10004c02:	add    eax,0x4
10004c05:	push   ecx
10004c06:	mov    ecx,DWORD PTR [esp+0x8]
10004c0a:	push   eax
10004c0b:	mov    eax,DWORD PTR [ecx+0x14]
10004c0e:	push   eax
10004c0f:	push   0x0
10004c11:	call   0x100039d0
10004c16:	xor    ecx,ecx
10004c18:	test   eax,eax
10004c1a:	setl   cl
10004c1d:	mov    al,cl
10004c1f:	ret    0x8
10004c22:	int3   
10004c23:	int3   
10004c24:	int3   
10004c25:	int3   
10004c26:	int3   
10004c27:	int3   
10004c28:	int3   
10004c29:	int3   
10004c2a:	int3   
10004c2b:	int3   
10004c2c:	int3   
10004c2d:	int3   
10004c2e:	int3   
10004c2f:	int3   
10004c30:	push   0xffffffff
10004c32:	push   0x1002aa48
10004c37:	mov    eax,fs:0x0
10004c3d:	push   eax
10004c3e:	push   ecx
10004c3f:	push   ebx
10004c40:	push   esi
10004c41:	mov    eax,ds:0x10064694
10004c46:	xor    eax,esp
10004c48:	push   eax
10004c49:	lea    eax,[esp+0x10]
10004c4d:	mov    fs:0x0,eax
10004c53:	mov    esi,ecx
10004c55:	mov    DWORD PTR [esp+0xc],esi
10004c59:	mov    eax,DWORD PTR [esp+0x20]
10004c5d:	xor    ebx,ebx
10004c5f:	push   0xffffffff
10004c61:	push   ebx
10004c62:	mov    DWORD PTR [esi+0x18],0xf
10004c69:	mov    DWORD PTR [esi+0x14],ebx
10004c6c:	push   eax
10004c6d:	mov    BYTE PTR [esi+0x4],bl
10004c70:	call   0x10003820
10004c75:	mov    edx,DWORD PTR [esp+0x24]
10004c79:	push   0xffffffff
10004c7b:	lea    ecx,[esi+0x1c]
10004c7e:	mov    DWORD PTR [esp+0x1c],ebx
10004c82:	push   ebx
10004c83:	mov    DWORD PTR [ecx+0x18],0xf
10004c8a:	mov    DWORD PTR [ecx+0x14],ebx
10004c8d:	push   edx
10004c8e:	mov    BYTE PTR [ecx+0x4],bl
10004c91:	call   0x10003820
10004c96:	mov    eax,esi
10004c98:	mov    ecx,DWORD PTR [esp+0x10]
10004c9c:	mov    DWORD PTR fs:0x0,ecx
10004ca3:	pop    ecx
10004ca4:	pop    esi
10004ca5:	pop    ebx
10004ca6:	add    esp,0x10
10004ca9:	ret    0x8
10004cac:	int3   
10004cad:	int3   
10004cae:	int3   
10004caf:	int3   
10004cb0:	push   ebx
10004cb1:	mov    ebx,DWORD PTR [esp+0xc]
10004cb5:	push   ebp
10004cb6:	mov    ebp,DWORD PTR [esp+0xc]
10004cba:	cmp    DWORD PTR [ebp+0x14],ebx
10004cbd:	push   esi
10004cbe:	push   edi
10004cbf:	mov    esi,ecx
10004cc1:	jae    0x10004cc8
10004cc3:	call   0x100159b6
10004cc8:	mov    edi,DWORD PTR [ebp+0x14]
10004ccb:	mov    eax,DWORD PTR [esp+0x1c]
10004ccf:	sub    edi,ebx
10004cd1:	cmp    eax,edi
10004cd3:	jae    0x10004cd7
10004cd5:	mov    edi,eax
10004cd7:	cmp    esi,ebp
10004cd9:	jne    0x10004cfa
10004cdb:	push   0xffffffff
10004cdd:	add    edi,ebx
10004cdf:	push   edi
10004ce0:	mov    ecx,esi
10004ce2:	call   0x100056d0
10004ce7:	push   ebx
10004ce8:	push   0x0
10004cea:	mov    ecx,esi
10004cec:	call   0x100056d0
10004cf1:	pop    edi
10004cf2:	mov    eax,esi
10004cf4:	pop    esi
10004cf5:	pop    ebp
10004cf6:	pop    ebx
10004cf7:	ret    0xc
10004cfa:	cmp    edi,0x7ffffffe
10004d00:	jbe    0x10004d07
10004d02:	call   0x10015977
10004d07:	mov    eax,DWORD PTR [esi+0x18]
10004d0a:	cmp    eax,edi
10004d0c:	jae    0x10004d29
10004d0e:	mov    eax,DWORD PTR [esi+0x14]
10004d11:	push   eax
10004d12:	push   edi
10004d13:	mov    ecx,esi
10004d15:	call   0x10005d90
10004d1a:	test   edi,edi
10004d1c:	jbe    0x10004d96
10004d1e:	cmp    DWORD PTR [ebp+0x18],0x8
10004d22:	jb     0x10004d55
10004d24:	mov    ecx,DWORD PTR [ebp+0x4]
10004d27:	jmp    0x10004d58
10004d29:	test   edi,edi
10004d2b:	jne    0x10004d1c
10004d2d:	cmp    eax,0x8
10004d30:	mov    DWORD PTR [esi+0x14],edi
10004d33:	jb     0x10004d44
10004d35:	mov    eax,DWORD PTR [esi+0x4]
10004d38:	mov    WORD PTR [eax],di
10004d3b:	pop    edi
10004d3c:	mov    eax,esi
10004d3e:	pop    esi
10004d3f:	pop    ebp
10004d40:	pop    ebx
10004d41:	ret    0xc
10004d44:	lea    eax,[esi+0x4]
10004d47:	pop    edi
10004d48:	mov    WORD PTR [eax],0x0
10004d4d:	mov    eax,esi
10004d4f:	pop    esi
10004d50:	pop    ebp
10004d51:	pop    ebx
10004d52:	ret    0xc
10004d55:	lea    ecx,[ebp+0x4]
10004d58:	cmp    DWORD PTR [esi+0x18],0x8
10004d5c:	lea    ebp,[esi+0x4]
10004d5f:	jb     0x10004d66
10004d61:	mov    eax,DWORD PTR [ebp+0x0]
10004d64:	jmp    0x10004d68
10004d66:	mov    eax,ebp
10004d68:	mov    edx,DWORD PTR [esp+0x18]
10004d6c:	lea    ecx,[ecx+edx*2]
10004d6f:	lea    ebx,[edi+edi*1]
10004d72:	push   ebx
10004d73:	push   ecx
10004d74:	mov    ecx,DWORD PTR [esi+0x18]
10004d77:	lea    edx,[ecx+ecx*1]
10004d7a:	push   edx
10004d7b:	push   eax
10004d7c:	call   0x10016153
10004d81:	add    esp,0x10
10004d84:	cmp    DWORD PTR [esi+0x18],0x8
10004d88:	mov    DWORD PTR [esi+0x14],edi
10004d8b:	jb     0x10004d90
10004d8d:	mov    ebp,DWORD PTR [ebp+0x0]
10004d90:	mov    WORD PTR [ebx+ebp*1],0x0
10004d96:	pop    edi
10004d97:	mov    eax,esi
10004d99:	pop    esi
10004d9a:	pop    ebp
10004d9b:	pop    ebx
10004d9c:	ret    0xc
10004d9f:	int3   
10004da0:	push   ebp
10004da1:	push   esi
10004da2:	mov    esi,ecx
10004da4:	mov    edx,DWORD PTR [esi+0x18]
10004da7:	cmp    edx,0x8
10004daa:	push   edi
10004dab:	lea    ebp,[esi+0x4]
10004dae:	jb     0x10004db5
10004db0:	mov    ecx,DWORD PTR [ebp+0x0]
10004db3:	jmp    0x10004db7
10004db5:	mov    ecx,ebp
10004db7:	mov    eax,DWORD PTR [esp+0x10]
10004dbb:	cmp    eax,ecx
10004dbd:	jb     0x10004df5
10004dbf:	cmp    edx,0x8
10004dc2:	jb     0x10004dc9
10004dc4:	mov    ecx,DWORD PTR [ebp+0x0]
10004dc7:	jmp    0x10004dcb
10004dc9:	mov    ecx,ebp
10004dcb:	mov    edi,DWORD PTR [esi+0x14]
10004dce:	lea    ecx,[ecx+edi*2]
10004dd1:	cmp    ecx,eax
10004dd3:	jbe    0x10004df5
10004dd5:	cmp    edx,0x8
10004dd8:	jb     0x10004ddd
10004dda:	mov    ebp,DWORD PTR [ebp+0x0]
10004ddd:	mov    edx,DWORD PTR [esp+0x14]
10004de1:	sub    eax,ebp
10004de3:	push   edx
10004de4:	sar    eax,1
10004de6:	push   eax
10004de7:	push   esi
10004de8:	mov    ecx,esi
10004dea:	call   0x10004cb0
10004def:	pop    edi
10004df0:	pop    esi
10004df1:	pop    ebp
10004df2:	ret    0x8
10004df5:	mov    edi,DWORD PTR [esp+0x14]
10004df9:	cmp    edi,0x7ffffffe
10004dff:	jbe    0x10004e06
10004e01:	call   0x10015977
10004e06:	mov    eax,DWORD PTR [esi+0x18]
10004e09:	cmp    eax,edi
10004e0b:	jae    0x10004e2a
10004e0d:	mov    eax,DWORD PTR [esi+0x14]
10004e10:	push   eax
10004e11:	push   edi
10004e12:	mov    ecx,esi
10004e14:	call   0x10005d90
10004e19:	test   edi,edi
10004e1b:	jbe    0x10004e72
10004e1d:	mov    ecx,DWORD PTR [esi+0x18]
10004e20:	cmp    ecx,0x8
10004e23:	jb     0x10004e47
10004e25:	mov    eax,DWORD PTR [ebp+0x0]
10004e28:	jmp    0x10004e49
10004e2a:	test   edi,edi
10004e2c:	jne    0x10004e1b
10004e2e:	cmp    eax,0x8
10004e31:	mov    DWORD PTR [esi+0x14],edi
10004e34:	jb     0x10004e39
10004e36:	mov    ebp,DWORD PTR [ebp+0x0]
10004e39:	pop    edi
10004e3a:	mov    eax,esi
10004e3c:	pop    esi
10004e3d:	mov    WORD PTR [ebp+0x0],0x0
10004e43:	pop    ebp
10004e44:	ret    0x8
10004e47:	mov    eax,ebp
10004e49:	mov    edx,DWORD PTR [esp+0x10]
10004e4d:	push   ebx
10004e4e:	lea    ebx,[edi+edi*1]
10004e51:	push   ebx
10004e52:	push   edx
10004e53:	add    ecx,ecx
10004e55:	push   ecx
10004e56:	push   eax
10004e57:	call   0x10016153
10004e5c:	add    esp,0x10
10004e5f:	cmp    DWORD PTR [esi+0x18],0x8
10004e63:	mov    DWORD PTR [esi+0x14],edi
10004e66:	jb     0x10004e6b
10004e68:	mov    ebp,DWORD PTR [ebp+0x0]
10004e6b:	mov    WORD PTR [ebx+ebp*1],0x0
10004e71:	pop    ebx
10004e72:	pop    edi
10004e73:	mov    eax,esi
10004e75:	pop    esi
10004e76:	pop    ebp
10004e77:	ret    0x8
10004e7a:	int3   
10004e7b:	int3   
10004e7c:	int3   
10004e7d:	int3   
10004e7e:	int3   
10004e7f:	int3   
10004e80:	push   ebp
10004e81:	mov    ebp,esp
10004e83:	and    esp,0xfffffff8
10004e86:	sub    esp,0x14
10004e89:	push   ebx
10004e8a:	push   esi
10004e8b:	mov    esi,ecx
10004e8d:	cmp    DWORD PTR [esi+0x8],0x0
10004e91:	push   edi
10004e92:	jne    0x10004eb4
10004e94:	mov    eax,DWORD PTR [ebp+0x14]
10004e97:	mov    ecx,DWORD PTR [esi+0x4]
10004e9a:	mov    edi,DWORD PTR [ebp+0x8]
10004e9d:	push   eax
10004e9e:	push   ecx
10004e9f:	push   0x1
10004ea1:	push   edi
10004ea2:	mov    ecx,esi
10004ea4:	call   0x10005880
10004ea9:	mov    eax,edi
10004eab:	pop    edi
10004eac:	pop    esi
10004ead:	pop    ebx
10004eae:	mov    esp,ebp
10004eb0:	pop    ebp
10004eb1:	ret    0x10
10004eb4:	mov    edx,DWORD PTR [esi+0x4]
10004eb7:	mov    edi,DWORD PTR [ebp+0xc]
10004eba:	test   edi,edi
10004ebc:	mov    eax,DWORD PTR [edx]
10004ebe:	mov    DWORD PTR [esp+0x18],eax
10004ec2:	je     0x10004ec8
10004ec4:	cmp    edi,esi
10004ec6:	je     0x10004ecd
10004ec8:	call   0x10016143
10004ecd:	mov    ebx,DWORD PTR [ebp+0x10]
10004ed0:	cmp    ebx,DWORD PTR [esp+0x18]
10004ed4:	jne    0x10004f07
10004ed6:	mov    edi,DWORD PTR [ebp+0x14]
10004ed9:	lea    ecx,[ebx+0xc]
10004edc:	push   ecx
10004edd:	push   edi
10004ede:	mov    ecx,esi
10004ee0:	call   0x10005090
10004ee5:	test   al,al
10004ee7:	je     0x10005063
10004eed:	push   edi
10004eee:	mov    edi,DWORD PTR [ebp+0x8]
10004ef1:	push   ebx
10004ef2:	push   0x1
10004ef4:	push   edi
10004ef5:	mov    ecx,esi
10004ef7:	call   0x10005880
10004efc:	mov    eax,edi
10004efe:	pop    edi
10004eff:	pop    esi
10004f00:	pop    ebx
10004f01:	mov    esp,ebp
10004f03:	pop    ebp
10004f04:	ret    0x10
10004f07:	test   edi,edi
10004f09:	mov    edx,DWORD PTR [esi+0x4]
10004f0c:	mov    DWORD PTR [esp+0x18],edx
10004f10:	je     0x10004f16
10004f12:	cmp    edi,esi
10004f14:	je     0x10004f1b
10004f16:	call   0x10016143
10004f1b:	cmp    ebx,DWORD PTR [esp+0x18]
10004f1f:	mov    edi,DWORD PTR [ebp+0x14]
10004f22:	mov    ecx,esi
10004f24:	jne    0x10004f5e
10004f26:	mov    eax,DWORD PTR [esi+0x4]
10004f29:	mov    eax,DWORD PTR [eax+0x8]
10004f2c:	add    eax,0xc
10004f2f:	push   edi
10004f30:	push   eax
10004f31:	call   0x10005090
10004f36:	test   al,al
10004f38:	je     0x10005063
10004f3e:	mov    ecx,DWORD PTR [esi+0x4]
10004f41:	mov    edx,DWORD PTR [ecx+0x8]
10004f44:	push   edi
10004f45:	mov    edi,DWORD PTR [ebp+0x8]
10004f48:	push   edx
10004f49:	push   0x0
10004f4b:	push   edi
10004f4c:	mov    ecx,esi
10004f4e:	call   0x10005880
10004f53:	mov    eax,edi
10004f55:	pop    edi
10004f56:	pop    esi
10004f57:	pop    ebx
10004f58:	mov    esp,ebp
10004f5a:	pop    ebp
10004f5b:	ret    0x10
10004f5e:	lea    eax,[ebx+0xc]
10004f61:	push   eax
10004f62:	push   edi
10004f63:	call   0x10005090
10004f68:	test   al,al
10004f6a:	je     0x10004fcf
10004f6c:	mov    eax,DWORD PTR [ebp+0xc]
10004f6f:	lea    ecx,[esp+0xc]
10004f73:	mov    DWORD PTR [esp+0xc],eax
10004f77:	mov    DWORD PTR [esp+0x10],ebx
10004f7b:	call   0x100063b0
10004f80:	mov    ecx,DWORD PTR [esp+0x10]
10004f84:	add    ecx,0xc
10004f87:	push   edi
10004f88:	push   ecx
10004f89:	mov    ecx,esi
10004f8b:	call   0x10005090
10004f90:	test   al,al
10004f92:	je     0x10004fcf
10004f94:	mov    eax,DWORD PTR [esp+0x10]
10004f98:	mov    edx,DWORD PTR [eax+0x8]
10004f9b:	cmp    BYTE PTR [edx+0x45],0x0
10004f9f:	push   edi
10004fa0:	mov    edi,DWORD PTR [ebp+0x8]
10004fa3:	mov    ecx,esi
10004fa5:	je     0x10004fbb
10004fa7:	push   eax
10004fa8:	push   0x0
10004faa:	push   edi
10004fab:	call   0x10005880
10004fb0:	mov    eax,edi
10004fb2:	pop    edi
10004fb3:	pop    esi
10004fb4:	pop    ebx
10004fb5:	mov    esp,ebp
10004fb7:	pop    ebp
10004fb8:	ret    0x10
10004fbb:	push   ebx
10004fbc:	push   0x1
10004fbe:	push   edi
10004fbf:	call   0x10005880
10004fc4:	mov    eax,edi
10004fc6:	pop    edi
10004fc7:	pop    esi
10004fc8:	pop    ebx
10004fc9:	mov    esp,ebp
10004fcb:	pop    ebp
10004fcc:	ret    0x10
10004fcf:	push   edi
10004fd0:	lea    eax,[ebx+0xc]
10004fd3:	push   eax
10004fd4:	mov    ecx,esi
10004fd6:	call   0x10005090
10004fdb:	test   al,al
10004fdd:	je     0x10005063
10004fe3:	mov    ecx,DWORD PTR [esi+0x4]
10004fe6:	mov    eax,DWORD PTR [ebp+0xc]
10004fe9:	mov    DWORD PTR [esp+0x18],ecx
10004fed:	lea    ecx,[esp+0xc]
10004ff1:	mov    DWORD PTR [esp+0xc],eax
10004ff5:	mov    DWORD PTR [esp+0x10],ebx
10004ff9:	mov    DWORD PTR [esp+0x14],esi
10004ffd:	call   0x10006440
10005002:	lea    edx,[esp+0x14]
10005006:	push   edx
10005007:	lea    ecx,[esp+0x10]
1000500b:	call   0x10004270
10005010:	test   al,al
10005012:	jne    0x10005028
10005014:	mov    eax,DWORD PTR [esp+0x10]
10005018:	add    eax,0xc
1000501b:	push   eax
1000501c:	push   edi
1000501d:	mov    ecx,esi
1000501f:	call   0x10005090
10005024:	test   al,al
10005026:	je     0x10005063
10005028:	mov    ecx,DWORD PTR [ebx+0x8]
1000502b:	cmp    BYTE PTR [ecx+0x45],0x0
1000502f:	push   edi
10005030:	mov    edi,DWORD PTR [ebp+0x8]
10005033:	mov    ecx,esi
10005035:	je     0x1000504b
10005037:	push   ebx
10005038:	push   0x0
1000503a:	push   edi
1000503b:	call   0x10005880
10005040:	mov    eax,edi
10005042:	pop    edi
10005043:	pop    esi
10005044:	pop    ebx
10005045:	mov    esp,ebp
10005047:	pop    ebp
10005048:	ret    0x10
1000504b:	mov    edx,DWORD PTR [esp+0x14]
1000504f:	push   edx
10005050:	push   0x1
10005052:	push   edi
10005053:	call   0x10005880
10005058:	mov    eax,edi
1000505a:	pop    edi
1000505b:	pop    esi
1000505c:	pop    ebx
1000505d:	mov    esp,ebp
1000505f:	pop    ebp
10005060:	ret    0x10
10005063:	push   edi
10005064:	lea    eax,[esp+0x18]
10005068:	push   eax
10005069:	mov    ecx,esi
1000506b:	call   0x10005770
10005070:	mov    edx,DWORD PTR [eax]
10005072:	mov    ecx,DWORD PTR [ebp+0x8]
10005075:	pop    edi
10005076:	mov    DWORD PTR [ecx],edx
10005078:	mov    eax,DWORD PTR [eax+0x4]
1000507b:	pop    esi
1000507c:	mov    DWORD PTR [ecx+0x4],eax
1000507f:	mov    eax,ecx
10005081:	pop    ebx
10005082:	mov    esp,ebp
10005084:	pop    ebp
10005085:	ret    0x10
10005088:	int3   
10005089:	int3   
1000508a:	int3   
1000508b:	int3   
1000508c:	int3   
1000508d:	int3   
1000508e:	int3   
1000508f:	int3   
10005090:	mov    eax,DWORD PTR [esp+0x8]
10005094:	cmp    DWORD PTR [eax+0x18],0x8
10005098:	mov    ecx,DWORD PTR [eax+0x14]
1000509b:	jb     0x100050a2
1000509d:	mov    eax,DWORD PTR [eax+0x4]
100050a0:	jmp    0x100050a5
100050a2:	add    eax,0x4
100050a5:	push   ecx
100050a6:	mov    ecx,DWORD PTR [esp+0x8]
100050aa:	push   eax
100050ab:	mov    eax,DWORD PTR [ecx+0x14]
100050ae:	push   eax
100050af:	push   0x0
100050b1:	call   0x10006bd0
100050b6:	xor    ecx,ecx
100050b8:	test   eax,eax
100050ba:	setl   cl
100050bd:	mov    al,cl
100050bf:	ret    0x8
100050c2:	int3   
100050c3:	int3   
100050c4:	int3   
100050c5:	int3   
100050c6:	int3   
100050c7:	int3   
100050c8:	int3   
100050c9:	int3   
100050ca:	int3   
100050cb:	int3   
100050cc:	int3   
100050cd:	int3   
100050ce:	int3   
100050cf:	int3   
100050d0:	push   0xffffffff
100050d2:	push   0x1002aa18
100050d7:	mov    eax,fs:0x0
100050dd:	push   eax
100050de:	push   ecx
100050df:	push   esi
100050e0:	push   edi
100050e1:	mov    eax,ds:0x10064694
100050e6:	xor    eax,esp
100050e8:	push   eax
100050e9:	lea    eax,[esp+0x10]
100050ed:	mov    fs:0x0,eax
100050f3:	mov    esi,ecx
100050f5:	mov    DWORD PTR [esp+0xc],esi
100050f9:	mov    eax,DWORD PTR [esp+0x20]
100050fd:	xor    edi,edi
100050ff:	push   0xffffffff
10005101:	push   edi
10005102:	mov    DWORD PTR [esi+0x18],0x7
10005109:	mov    DWORD PTR [esi+0x14],edi
1000510c:	push   eax
1000510d:	mov    WORD PTR [esi+0x4],di
10005111:	call   0x10004cb0
10005116:	mov    edx,DWORD PTR [esp+0x24]
1000511a:	push   0xffffffff
1000511c:	lea    ecx,[esi+0x1c]
1000511f:	mov    DWORD PTR [esp+0x1c],edi
10005123:	push   edi
10005124:	mov    DWORD PTR [ecx+0x18],0x7
1000512b:	mov    DWORD PTR [ecx+0x14],edi
1000512e:	push   edx
1000512f:	mov    WORD PTR [ecx+0x4],di
10005133:	call   0x10004cb0
10005138:	mov    eax,esi
1000513a:	mov    ecx,DWORD PTR [esp+0x10]
1000513e:	mov    DWORD PTR fs:0x0,ecx
10005145:	pop    ecx
10005146:	pop    edi
10005147:	pop    esi
10005148:	add    esp,0x10
1000514b:	ret    0x8
1000514e:	int3   
1000514f:	int3   
10005150:	push   ebx
10005151:	push   esi
10005152:	mov    esi,DWORD PTR [esp+0x10]
10005156:	mov    eax,esi
10005158:	shr    eax,0x4
1000515b:	push   edi
1000515c:	mov    edi,DWORD PTR [esp+0x10]
10005160:	add    eax,0x1
10005163:	mov    ebx,ecx
10005165:	movzx  ecx,ax
10005168:	push   0x6
1000516a:	push   ecx
1000516b:	push   edi
1000516c:	call   DWORD PTR ds:0x1002c084
10005172:	test   eax,eax
10005174:	je     0x10005187
10005176:	push   esi
10005177:	push   eax
10005178:	push   edi
10005179:	call   0x10001140
1000517e:	mov    esi,eax
10005180:	add    esp,0xc
10005183:	test   esi,esi
10005185:	jne    0x1000518f
10005187:	pop    edi
10005188:	pop    esi
10005189:	xor    eax,eax
1000518b:	pop    ebx
1000518c:	ret    0x8
1000518f:	mov    eax,DWORD PTR [ebx]
10005191:	movzx  edi,WORD PTR [esi]
10005194:	sub    eax,0x10
10005197:	mov    edx,0x1
1000519c:	sub    edx,DWORD PTR [eax+0xc]
1000519f:	mov    eax,DWORD PTR [eax+0x8]
100051a2:	sub    eax,edi
100051a4:	or     edx,eax
100051a6:	jge    0x100051b0
100051a8:	push   edi
100051a9:	mov    ecx,ebx
100051ab:	call   0x10004920
100051b0:	movzx  eax,WORD PTR [esi]
100051b3:	cmp    eax,0xffffffff
100051b6:	push   ebp
100051b7:	mov    ebp,DWORD PTR [ebx]
100051b9:	lea    edx,[esi+0x2]
100051bc:	jne    0x100051d5
100051be:	mov    eax,edx
100051c0:	lea    esi,[eax+0x2]
100051c3:	mov    cx,WORD PTR [eax]
100051c6:	add    eax,0x2
100051c9:	test   cx,cx
100051cc:	jne    0x100051c3
100051ce:	sub    eax,esi
100051d0:	sar    eax,1
100051d2:	add    eax,0x1
100051d5:	lea    ecx,[eax+eax*1]
100051d8:	push   ecx
100051d9:	push   edx
100051da:	lea    esi,[edi+edi*1]
100051dd:	push   esi
100051de:	push   ebp
100051df:	call   0x10016153
100051e4:	push   eax
100051e5:	call   0x10001070
100051ea:	add    esp,0x14
100051ed:	test   edi,edi
100051ef:	pop    ebp
100051f0:	jl     0x1000520f
100051f2:	mov    eax,DWORD PTR [ebx]
100051f4:	cmp    edi,DWORD PTR [eax-0x8]
100051f7:	jg     0x1000520f
100051f9:	mov    DWORD PTR [eax-0xc],edi
100051fc:	mov    edx,DWORD PTR [ebx]
100051fe:	pop    edi
100051ff:	mov    WORD PTR [esi+edx*1],0x0
10005205:	pop    esi
10005206:	mov    eax,0x1
1000520b:	pop    ebx
1000520c:	ret    0x8
1000520f:	push   0x80070057
10005214:	call   0x10001050
10005219:	int3   
1000521a:	int3   
1000521b:	int3   
1000521c:	int3   
1000521d:	int3   
1000521e:	int3   
1000521f:	int3   
10005220:	mov    edx,DWORD PTR [esp+0x4]
10005224:	push   esi
10005225:	mov    esi,ecx
10005227:	mov    eax,DWORD PTR [esi]
10005229:	mov    ecx,DWORD PTR [eax-0x10]
1000522c:	sub    eax,0x10
1000522f:	cmp    DWORD PTR [eax+0x8],edx
10005232:	jge    0x10005249
10005234:	test   edx,edx
10005236:	jle    0x10005249
10005238:	push   edi
10005239:	mov    edi,DWORD PTR [ecx]
1000523b:	push   0x2
1000523d:	push   edx
1000523e:	push   eax
1000523f:	mov    eax,DWORD PTR [edi+0x8]
10005242:	call   eax
10005244:	test   eax,eax
10005246:	pop    edi
10005247:	jne    0x1000524e
10005249:	call   0x10004910
1000524e:	add    eax,0x10
10005251:	mov    DWORD PTR [esi],eax
10005253:	pop    esi
10005254:	ret    0x4
10005257:	int3   
10005258:	int3   
10005259:	int3   
1000525a:	int3   
1000525b:	int3   
1000525c:	int3   
1000525d:	int3   
1000525e:	int3   
1000525f:	int3   
10005260:	push   ebp
10005261:	mov    ebp,esp
10005263:	and    esp,0xfffffff8
10005266:	sub    esp,0x24
10005269:	push   ebx
1000526a:	push   esi
1000526b:	push   edi
1000526c:	mov    edi,ecx
1000526e:	mov    eax,DWORD PTR [edi+0x4]
10005271:	mov    esi,DWORD PTR [eax+0x4]
10005274:	cmp    BYTE PTR [esi+0x45],0x0
10005278:	mov    ecx,eax
1000527a:	mov    al,0x1
1000527c:	mov    DWORD PTR [esp+0x28],edi
10005280:	mov    DWORD PTR [esp+0x10],ecx
10005284:	mov    BYTE PTR [esp+0x18],al
10005288:	jne    0x10005328
1000528e:	mov    edx,DWORD PTR [ebp+0xc]
10005291:	mov    eax,DWORD PTR [edx+0x14]
10005294:	mov    ecx,DWORD PTR [edx+0x18]
10005297:	mov    DWORD PTR [esp+0x20],eax
1000529b:	mov    DWORD PTR [esp+0x1c],eax
1000529f:	mov    DWORD PTR [esp+0x24],ecx
100052a3:	jmp    0x100052ac
100052a5:	mov    edx,DWORD PTR [ebp+0xc]
100052a8:	mov    eax,DWORD PTR [esp+0x1c]
100052ac:	cmp    DWORD PTR [esi+0x24],0x10
100052b0:	mov    ebx,DWORD PTR [esi+0x20]
100052b3:	mov    DWORD PTR [esp+0x10],esi
100052b7:	jb     0x100052be
100052b9:	mov    ecx,DWORD PTR [esi+0x10]
100052bc:	jmp    0x100052c1
100052be:	lea    ecx,[esi+0x10]
100052c1:	mov    edi,DWORD PTR [esp+0x20]
100052c5:	cmp    eax,edi
100052c7:	mov    DWORD PTR [esp+0x14],ecx
100052cb:	jae    0x100052cf
100052cd:	mov    edi,eax
100052cf:	cmp    edi,ebx
100052d1:	mov    ecx,edi
100052d3:	jb     0x100052d7
100052d5:	mov    ecx,ebx
100052d7:	cmp    DWORD PTR [esp+0x24],0x10
100052dc:	lea    eax,[edx+0x4]
100052df:	jb     0x100052e3
100052e1:	mov    eax,DWORD PTR [eax]
100052e3:	mov    edx,DWORD PTR [esp+0x14]
100052e7:	push   ecx
100052e8:	push   edx
100052e9:	push   eax
100052ea:	call   0x100012b0
100052ef:	add    esp,0xc
100052f2:	test   eax,eax
100052f4:	jne    0x10005308
100052f6:	cmp    edi,ebx
100052f8:	jae    0x100052ff
100052fa:	or     eax,0xffffffff
100052fd:	jmp    0x10005306
100052ff:	xor    eax,eax
10005301:	cmp    edi,ebx
10005303:	setne  al
10005306:	test   eax,eax
10005308:	setl   al
1000530b:	test   al,al
1000530d:	mov    BYTE PTR [esp+0x18],al
10005311:	je     0x10005317
10005313:	mov    esi,DWORD PTR [esi]
10005315:	jmp    0x1000531a
10005317:	mov    esi,DWORD PTR [esi+0x8]
1000531a:	cmp    BYTE PTR [esi+0x45],0x0
1000531e:	je     0x100052a5
10005320:	mov    edi,DWORD PTR [esp+0x28]
10005324:	mov    ecx,DWORD PTR [esp+0x10]
10005328:	test   al,al
1000532a:	mov    esi,ecx
1000532c:	mov    DWORD PTR [esp+0x2c],esi
10005330:	mov    DWORD PTR [esp+0x28],edi
10005334:	je     0x10005379
10005336:	mov    eax,DWORD PTR [edi+0x4]
10005339:	cmp    ecx,DWORD PTR [eax]
1000533b:	jne    0x1000536c
1000533d:	mov    edx,DWORD PTR [ebp+0xc]
10005340:	push   edx
10005341:	push   ecx
10005342:	push   0x1
10005344:	lea    eax,[esp+0x34]
10005348:	push   eax
10005349:	mov    ecx,edi
1000534b:	call   0x100053f0
10005350:	mov    ecx,eax
10005352:	mov    edx,DWORD PTR [ecx]
10005354:	mov    eax,DWORD PTR [ebp+0x8]
10005357:	mov    ecx,DWORD PTR [ecx+0x4]
1000535a:	mov    DWORD PTR [eax+0x4],ecx
1000535d:	mov    BYTE PTR [eax+0x8],0x1
10005361:	mov    DWORD PTR [eax],edx
10005363:	pop    edi
10005364:	pop    esi
10005365:	pop    ebx
10005366:	mov    esp,ebp
10005368:	pop    ebp
10005369:	ret    0x8
1000536c:	lea    ecx,[esp+0x28]
10005370:	call   0x100063b0
10005375:	mov    esi,DWORD PTR [esp+0x2c]
10005379:	mov    ebx,DWORD PTR [ebp+0xc]
1000537c:	cmp    DWORD PTR [ebx+0x18],0x10
10005380:	mov    edx,DWORD PTR [ebx+0x14]
10005383:	lea    ecx,[esi+0xc]
10005386:	jb     0x1000538d
10005388:	mov    eax,DWORD PTR [ebx+0x4]
1000538b:	jmp    0x10005390
1000538d:	lea    eax,[ebx+0x4]
10005390:	push   edx
10005391:	mov    edx,DWORD PTR [ecx+0x14]
10005394:	push   eax
10005395:	push   edx
10005396:	push   0x0
10005398:	call   0x100039d0
1000539d:	test   eax,eax
1000539f:	jge    0x100053d4
100053a1:	mov    eax,DWORD PTR [esp+0x10]
100053a5:	mov    ecx,DWORD PTR [esp+0x18]
100053a9:	push   ebx
100053aa:	push   eax
100053ab:	push   ecx
100053ac:	lea    edx,[esp+0x34]
100053b0:	push   edx
100053b1:	mov    ecx,edi
100053b3:	call   0x100053f0
100053b8:	mov    ecx,eax
100053ba:	mov    edx,DWORD PTR [ecx]
100053bc:	mov    eax,DWORD PTR [ebp+0x8]
100053bf:	mov    ecx,DWORD PTR [ecx+0x4]
100053c2:	mov    DWORD PTR [eax+0x4],ecx
100053c5:	mov    BYTE PTR [eax+0x8],0x1
100053c9:	mov    DWORD PTR [eax],edx
100053cb:	pop    edi
100053cc:	pop    esi
100053cd:	pop    ebx
100053ce:	mov    esp,ebp
100053d0:	pop    ebp
100053d1:	ret    0x8
100053d4:	mov    eax,DWORD PTR [ebp+0x8]
100053d7:	mov    edx,DWORD PTR [esp+0x28]
100053db:	pop    edi
100053dc:	mov    DWORD PTR [eax+0x4],esi
100053df:	pop    esi
100053e0:	mov    BYTE PTR [eax+0x8],0x0
100053e4:	mov    DWORD PTR [eax],edx
100053e6:	pop    ebx
100053e7:	mov    esp,ebp
100053e9:	pop    ebp
100053ea:	ret    0x8
100053ed:	int3   
100053ee:	int3   
100053ef:	int3   
100053f0:	push   ebp
100053f1:	mov    ebp,esp
100053f3:	and    esp,0xfffffff8
100053f6:	push   0xffffffff
100053f8:	push   0x1002ae08
100053fd:	mov    eax,fs:0x0
10005403:	push   eax
10005404:	sub    esp,0x50
10005407:	push   ebx
10005408:	push   esi
10005409:	push   edi
1000540a:	mov    eax,ds:0x10064694
1000540f:	xor    eax,esp
10005411:	push   eax
10005412:	lea    eax,[esp+0x60]
10005416:	mov    fs:0x0,eax
1000541c:	mov    edi,ecx
1000541e:	xor    ebx,ebx
10005420:	cmp    DWORD PTR [edi+0x8],0x4924923
10005427:	jb     0x10005472
10005429:	push   0x13
1000542b:	push   0x10055920
10005430:	lea    ecx,[esp+0x20]
10005434:	mov    DWORD PTR [esp+0x38],0xf
1000543c:	mov    DWORD PTR [esp+0x34],ebx
10005440:	mov    BYTE PTR [esp+0x24],bl
10005444:	call   0x10003900
10005449:	lea    eax,[esp+0x18]
1000544d:	push   eax
1000544e:	lea    ecx,[esp+0x38]
10005452:	mov    DWORD PTR [esp+0x6c],ebx
10005456:	call   0x10001350
1000545b:	push   0x10058b0c
10005460:	lea    ecx,[esp+0x38]
10005464:	push   ecx
10005465:	mov    DWORD PTR [esp+0x3c],0x1002c4d4
1000546d:	call   0x100161ce
10005472:	mov    edx,DWORD PTR [ebp+0x14]
10005475:	mov    eax,DWORD PTR [edi+0x4]
10005478:	mov    esi,DWORD PTR [ebp+0x10]
1000547b:	push   ebx
1000547c:	push   edx
1000547d:	push   eax
1000547e:	push   esi
1000547f:	push   eax
10005480:	call   0x10005cf0
10005485:	add    DWORD PTR [edi+0x8],0x1
10005489:	mov    ecx,eax
1000548b:	mov    eax,DWORD PTR [edi+0x4]
1000548e:	cmp    esi,eax
10005490:	mov    DWORD PTR [esp+0x14],ecx
10005494:	jne    0x100054a6
10005496:	mov    DWORD PTR [eax+0x4],ecx
10005499:	mov    eax,DWORD PTR [edi+0x4]
1000549c:	mov    DWORD PTR [eax],ecx
1000549e:	mov    edx,DWORD PTR [edi+0x4]
100054a1:	mov    DWORD PTR [edx+0x8],ecx
100054a4:	jmp    0x100054c6
100054a6:	cmp    BYTE PTR [ebp+0xc],bl
100054a9:	je     0x100054b8
100054ab:	mov    DWORD PTR [esi],ecx
100054ad:	mov    eax,DWORD PTR [edi+0x4]
100054b0:	cmp    esi,DWORD PTR [eax]
100054b2:	jne    0x100054c6
100054b4:	mov    DWORD PTR [eax],ecx
100054b6:	jmp    0x100054c6
100054b8:	mov    DWORD PTR [esi+0x8],ecx
100054bb:	mov    eax,DWORD PTR [edi+0x4]
100054be:	cmp    esi,DWORD PTR [eax+0x8]
100054c1:	jne    0x100054c6
100054c3:	mov    DWORD PTR [eax+0x8],ecx
100054c6:	mov    edx,DWORD PTR [ecx+0x4]
100054c9:	cmp    BYTE PTR [edx+0x44],bl
100054cc:	lea    eax,[ecx+0x4]
100054cf:	mov    esi,ecx
100054d1:	jne    0x10005612
100054d7:	mov    ecx,DWORD PTR [eax]
100054d9:	mov    edx,DWORD PTR [ecx+0x4]
100054dc:	cmp    ecx,DWORD PTR [edx]
100054de:	jne    0x10005585
100054e4:	mov    edx,DWORD PTR [edx+0x8]
100054e7:	cmp    BYTE PTR [edx+0x44],bl
100054ea:	je     0x1000558c
100054f0:	cmp    esi,DWORD PTR [ecx+0x8]
100054f3:	jne    0x10005530
100054f5:	mov    esi,ecx
100054f7:	mov    ecx,DWORD PTR [esi+0x8]
100054fa:	mov    eax,DWORD PTR [ecx]
100054fc:	mov    DWORD PTR [esi+0x8],eax
100054ff:	mov    eax,DWORD PTR [ecx]
10005501:	cmp    BYTE PTR [eax+0x45],bl
10005504:	jne    0x10005509
10005506:	mov    DWORD PTR [eax+0x4],esi
10005509:	mov    edx,DWORD PTR [esi+0x4]
1000550c:	lea    eax,[esi+0x4]
1000550f:	mov    DWORD PTR [ecx+0x4],edx
10005512:	mov    edx,DWORD PTR [edi+0x4]
10005515:	cmp    esi,DWORD PTR [edx+0x4]
10005518:	jne    0x1000551f
1000551a:	mov    DWORD PTR [edx+0x4],ecx
1000551d:	jmp    0x1000552c
1000551f:	mov    edx,DWORD PTR [eax]
10005521:	cmp    esi,DWORD PTR [edx]
10005523:	jne    0x10005529
10005525:	mov    DWORD PTR [edx],ecx
10005527:	jmp    0x1000552c
10005529:	mov    DWORD PTR [edx+0x8],ecx
1000552c:	mov    DWORD PTR [ecx],esi
1000552e:	mov    DWORD PTR [eax],ecx
10005530:	mov    ecx,DWORD PTR [eax]
10005532:	mov    BYTE PTR [ecx+0x44],0x1
10005536:	mov    edx,DWORD PTR [eax]
10005538:	mov    ecx,DWORD PTR [edx+0x4]
1000553b:	mov    BYTE PTR [ecx+0x44],bl
1000553e:	mov    edx,DWORD PTR [eax]
10005540:	mov    eax,DWORD PTR [edx+0x4]
10005543:	mov    ecx,DWORD PTR [eax]
10005545:	mov    edx,DWORD PTR [ecx+0x8]
10005548:	mov    DWORD PTR [eax],edx
1000554a:	mov    edx,DWORD PTR [ecx+0x8]
1000554d:	cmp    BYTE PTR [edx+0x45],bl
10005550:	jne    0x10005555
10005552:	mov    DWORD PTR [edx+0x4],eax
10005555:	mov    edx,DWORD PTR [eax+0x4]
10005558:	mov    DWORD PTR [ecx+0x4],edx
1000555b:	mov    edx,DWORD PTR [edi+0x4]
1000555e:	cmp    eax,DWORD PTR [edx+0x4]
10005561:	jne    0x1000556e
10005563:	mov    DWORD PTR [edx+0x4],ecx
10005566:	mov    DWORD PTR [ecx+0x8],eax
10005569:	jmp    0x100055fc
1000556e:	mov    edx,DWORD PTR [eax+0x4]
10005571:	cmp    eax,DWORD PTR [edx+0x8]
10005574:	jne    0x1000557e
10005576:	mov    DWORD PTR [edx+0x8],ecx
10005579:	mov    DWORD PTR [ecx+0x8],eax
1000557c:	jmp    0x100055fc
1000557e:	mov    DWORD PTR [edx],ecx
10005580:	mov    DWORD PTR [ecx+0x8],eax
10005583:	jmp    0x100055fc
10005585:	mov    edx,DWORD PTR [edx]
10005587:	cmp    BYTE PTR [edx+0x44],bl
1000558a:	jne    0x100055a3
1000558c:	mov    BYTE PTR [ecx+0x44],0x1
10005590:	mov    BYTE PTR [edx+0x44],0x1
10005594:	mov    edx,DWORD PTR [eax]
10005596:	mov    ecx,DWORD PTR [edx+0x4]
10005599:	mov    BYTE PTR [ecx+0x44],bl
1000559c:	mov    edx,DWORD PTR [eax]
1000559e:	mov    esi,DWORD PTR [edx+0x4]
100055a1:	jmp    0x100055ff
100055a3:	cmp    esi,DWORD PTR [ecx]
100055a5:	jne    0x100055b1
100055a7:	mov    esi,ecx
100055a9:	push   esi
100055aa:	mov    ecx,edi
100055ac:	call   0x10005c90
100055b1:	mov    eax,DWORD PTR [esi+0x4]
100055b4:	mov    BYTE PTR [eax+0x44],0x1
100055b8:	mov    ecx,DWORD PTR [esi+0x4]
100055bb:	mov    edx,DWORD PTR [ecx+0x4]
100055be:	mov    BYTE PTR [edx+0x44],bl
100055c1:	mov    eax,DWORD PTR [esi+0x4]
100055c4:	mov    eax,DWORD PTR [eax+0x4]
100055c7:	mov    ecx,DWORD PTR [eax+0x8]
100055ca:	mov    edx,DWORD PTR [ecx]
100055cc:	mov    DWORD PTR [eax+0x8],edx
100055cf:	mov    edx,DWORD PTR [ecx]
100055d1:	cmp    BYTE PTR [edx+0x45],bl
100055d4:	jne    0x100055d9
100055d6:	mov    DWORD PTR [edx+0x4],eax
100055d9:	mov    edx,DWORD PTR [eax+0x4]
100055dc:	mov    DWORD PTR [ecx+0x4],edx
100055df:	mov    edx,DWORD PTR [edi+0x4]
100055e2:	cmp    eax,DWORD PTR [edx+0x4]
100055e5:	jne    0x100055ec
100055e7:	mov    DWORD PTR [edx+0x4],ecx
100055ea:	jmp    0x100055fa
100055ec:	mov    edx,DWORD PTR [eax+0x4]
100055ef:	cmp    eax,DWORD PTR [edx]
100055f1:	jne    0x100055f7
100055f3:	mov    DWORD PTR [edx],ecx
100055f5:	jmp    0x100055fa
100055f7:	mov    DWORD PTR [edx+0x8],ecx
100055fa:	mov    DWORD PTR [ecx],eax
100055fc:	mov    DWORD PTR [eax+0x4],ecx
100055ff:	mov    ecx,DWORD PTR [esi+0x4]
10005602:	cmp    BYTE PTR [ecx+0x44],bl
10005605:	lea    eax,[esi+0x4]
10005608:	je     0x100054d7
1000560e:	mov    ecx,DWORD PTR [esp+0x14]
10005612:	mov    edx,DWORD PTR [edi+0x4]
10005615:	mov    eax,DWORD PTR [edx+0x4]
10005618:	mov    BYTE PTR [eax+0x44],0x1
1000561c:	mov    eax,DWORD PTR [ebp+0x8]
1000561f:	mov    DWORD PTR [eax+0x4],ecx
10005622:	mov    DWORD PTR [eax],edi
10005624:	mov    ecx,DWORD PTR [esp+0x60]
10005628:	mov    DWORD PTR fs:0x0,ecx
1000562f:	pop    ecx
10005630:	pop    edi
10005631:	pop    esi
10005632:	pop    ebx
10005633:	mov    esp,ebp
10005635:	pop    ebp
10005636:	ret    0x10
10005639:	int3   
1000563a:	int3   
1000563b:	int3   
1000563c:	int3   
1000563d:	int3   
1000563e:	int3   
1000563f:	int3   
10005640:	push   ecx
10005641:	mov    eax,DWORD PTR [ecx+0x4]
10005644:	push   esi
10005645:	mov    esi,DWORD PTR [eax+0x4]
10005648:	cmp    BYTE PTR [esi+0x45],0x0
1000564c:	mov    DWORD PTR [esp+0x4],eax
10005650:	jne    0x100056c7
10005652:	mov    eax,DWORD PTR [esp+0xc]
10005656:	mov    ecx,DWORD PTR [eax+0x18]
10005659:	push   ebx
1000565a:	mov    ebx,DWORD PTR [eax+0x14]
1000565d:	push   ebp
1000565e:	push   edi
1000565f:	mov    DWORD PTR [esp+0x18],ecx
10005663:	lea    ebp,[eax+0x4]
10005666:	cmp    DWORD PTR [esp+0x18],0x10
1000566b:	jb     0x10005672
1000566d:	mov    edx,DWORD PTR [ebp+0x0]
10005670:	jmp    0x10005674
10005672:	mov    edx,ebp
10005674:	mov    edi,DWORD PTR [esi+0x20]
10005677:	mov    eax,edi
10005679:	cmp    eax,edi
1000567b:	jae    0x1000567d
1000567d:	cmp    edi,ebx
1000567f:	mov    ecx,edi
10005681:	jb     0x10005685
10005683:	mov    ecx,ebx
10005685:	cmp    DWORD PTR [esi+0x24],0x10
10005689:	jb     0x10005690
1000568b:	mov    eax,DWORD PTR [esi+0x10]
1000568e:	jmp    0x10005693
10005690:	lea    eax,[esi+0x10]
10005693:	push   ecx
10005694:	push   edx
10005695:	push   eax
10005696:	call   0x100012b0
1000569b:	add    esp,0xc
1000569e:	test   eax,eax
100056a0:	jne    0x100056ad
100056a2:	cmp    edi,ebx
100056a4:	jb     0x100056af
100056a6:	cmp    edi,ebx
100056a8:	setne  al
100056ab:	test   eax,eax
100056ad:	jge    0x100056b4
100056af:	mov    esi,DWORD PTR [esi+0x8]
100056b2:	jmp    0x100056ba
100056b4:	mov    DWORD PTR [esp+0x10],esi
100056b8:	mov    esi,DWORD PTR [esi]
100056ba:	cmp    BYTE PTR [esi+0x45],0x0
100056be:	je     0x10005666
100056c0:	mov    eax,DWORD PTR [esp+0x10]
100056c4:	pop    edi
100056c5:	pop    ebp
100056c6:	pop    ebx
100056c7:	pop    esi
100056c8:	pop    ecx
100056c9:	ret    0x4
100056cc:	int3   
100056cd:	int3   
100056ce:	int3   
100056cf:	int3   
100056d0:	push   ebx
100056d1:	mov    ebx,DWORD PTR [esp+0x8]
100056d5:	push   esi
100056d6:	mov    esi,ecx
100056d8:	cmp    DWORD PTR [esi+0x14],ebx
100056db:	push   edi
100056dc:	jae    0x100056e3
100056de:	call   0x100159b6
100056e3:	mov    eax,DWORD PTR [esi+0x14]
100056e6:	mov    edi,DWORD PTR [esp+0x14]
100056ea:	sub    eax,ebx
100056ec:	cmp    eax,edi
100056ee:	jae    0x100056f2
100056f0:	mov    edi,eax
100056f2:	test   edi,edi
100056f4:	jbe    0x1000575f
100056f6:	mov    ecx,DWORD PTR [esi+0x18]
100056f9:	cmp    ecx,0x8
100056fc:	push   ebp
100056fd:	lea    ebp,[esi+0x4]
10005700:	jb     0x1000570b
10005702:	mov    edx,DWORD PTR [ebp+0x0]
10005705:	mov    DWORD PTR [esp+0x14],edx
10005709:	jmp    0x1000570f
1000570b:	mov    DWORD PTR [esp+0x14],ebp
1000570f:	cmp    ecx,0x8
10005712:	jb     0x1000571d
10005714:	mov    edx,DWORD PTR [ebp+0x0]
10005717:	mov    DWORD PTR [esp+0x18],edx
1000571b:	jmp    0x10005721
1000571d:	mov    DWORD PTR [esp+0x18],ebp
10005721:	mov    edx,DWORD PTR [esp+0x14]
10005725:	sub    eax,edi
10005727:	add    eax,eax
10005729:	push   eax
1000572a:	lea    eax,[ebx+edi*1]
1000572d:	lea    eax,[edx+eax*2]
10005730:	sub    ecx,ebx
10005732:	push   eax
10005733:	add    ecx,ecx
10005735:	push   ecx
10005736:	mov    ecx,DWORD PTR [esp+0x24]
1000573a:	lea    edx,[ecx+ebx*2]
1000573d:	push   edx
1000573e:	call   0x1001647e
10005743:	mov    eax,DWORD PTR [esi+0x14]
10005746:	sub    eax,edi
10005748:	add    esp,0x10
1000574b:	cmp    DWORD PTR [esi+0x18],0x8
1000574f:	mov    DWORD PTR [esi+0x14],eax
10005752:	jb     0x10005757
10005754:	mov    ebp,DWORD PTR [ebp+0x0]
10005757:	mov    WORD PTR [ebp+eax*2+0x0],0x0
1000575e:	pop    ebp
1000575f:	pop    edi
10005760:	mov    eax,esi
10005762:	pop    esi
10005763:	pop    ebx
10005764:	ret    0x8
10005767:	int3   
10005768:	int3   
10005769:	int3   
1000576a:	int3   
1000576b:	int3   
1000576c:	int3   
1000576d:	int3   
1000576e:	int3   
1000576f:	int3   
10005770:	push   ebp
10005771:	mov    ebp,esp
10005773:	and    esp,0xfffffff8
10005776:	sub    esp,0x14
10005779:	mov    eax,DWORD PTR [ecx+0x4]
1000577c:	push   ebx
1000577d:	push   esi
1000577e:	mov    esi,DWORD PTR [eax+0x4]
10005781:	cmp    BYTE PTR [esi+0x45],0x0
10005785:	mov    ebx,eax
10005787:	mov    al,0x1
10005789:	push   edi
1000578a:	mov    edi,DWORD PTR [ebp+0xc]
1000578d:	mov    DWORD PTR [esp+0x14],ecx
10005791:	mov    BYTE PTR [esp+0x10],al
10005795:	jne    0x100057d7
10005797:	cmp    DWORD PTR [esi+0x24],0x8
1000579b:	mov    ecx,DWORD PTR [esi+0x20]
1000579e:	mov    ebx,esi
100057a0:	jb     0x100057a7
100057a2:	mov    eax,DWORD PTR [esi+0x10]
100057a5:	jmp    0x100057aa
100057a7:	lea    eax,[esi+0x10]
100057aa:	push   ecx
100057ab:	push   eax
100057ac:	mov    eax,DWORD PTR [edi+0x14]
100057af:	push   eax
100057b0:	push   0x0
100057b2:	mov    ecx,edi
100057b4:	call   0x10006bd0
100057b9:	test   eax,eax
100057bb:	setl   al
100057be:	test   al,al
100057c0:	mov    BYTE PTR [esp+0x10],al
100057c4:	je     0x100057ca
100057c6:	mov    esi,DWORD PTR [esi]
100057c8:	jmp    0x100057cd
100057ca:	mov    esi,DWORD PTR [esi+0x8]
100057cd:	cmp    BYTE PTR [esi+0x45],0x0
100057d1:	je     0x10005797
100057d3:	mov    ecx,DWORD PTR [esp+0x14]
100057d7:	test   al,al
100057d9:	mov    esi,ebx
100057db:	mov    DWORD PTR [esp+0x1c],esi
100057df:	mov    DWORD PTR [esp+0x18],ecx
100057e3:	je     0x10005823
100057e5:	mov    edx,DWORD PTR [ecx+0x4]
100057e8:	cmp    ebx,DWORD PTR [edx]
100057ea:	jne    0x10005816
100057ec:	push   edi
100057ed:	push   ebx
100057ee:	push   0x1
100057f0:	lea    eax,[esp+0x24]
100057f4:	push   eax
100057f5:	call   0x10005880
100057fa:	mov    ecx,eax
100057fc:	mov    edx,DWORD PTR [ecx]
100057fe:	mov    eax,DWORD PTR [ebp+0x8]
10005801:	mov    ecx,DWORD PTR [ecx+0x4]
10005804:	mov    DWORD PTR [eax+0x4],ecx
10005807:	mov    BYTE PTR [eax+0x8],0x1
1000580b:	mov    DWORD PTR [eax],edx
1000580d:	pop    edi
1000580e:	pop    esi
1000580f:	pop    ebx
10005810:	mov    esp,ebp
10005812:	pop    ebp
10005813:	ret    0x8
10005816:	lea    ecx,[esp+0x18]
1000581a:	call   0x100063b0
1000581f:	mov    esi,DWORD PTR [esp+0x1c]
10005823:	cmp    DWORD PTR [edi+0x18],0x8
10005827:	mov    edx,DWORD PTR [edi+0x14]
1000582a:	lea    ecx,[esi+0xc]
1000582d:	jb     0x10005834
1000582f:	mov    eax,DWORD PTR [edi+0x4]
10005832:	jmp    0x10005837
10005834:	lea    eax,[edi+0x4]
10005837:	push   edx
10005838:	mov    edx,DWORD PTR [ecx+0x14]
1000583b:	push   eax
1000583c:	push   edx
1000583d:	push   0x0
1000583f:	call   0x10006bd0
10005844:	test   eax,eax
10005846:	jge    0x1000585a
10005848:	mov    eax,DWORD PTR [esp+0x10]
1000584c:	push   edi
1000584d:	push   ebx
1000584e:	lea    ecx,[esp+0x20]
10005852:	push   eax
10005853:	push   ecx
10005854:	mov    ecx,DWORD PTR [esp+0x24]
10005858:	jmp    0x100057f5
1000585a:	mov    eax,DWORD PTR [ebp+0x8]
1000585d:	mov    edx,DWORD PTR [esp+0x18]
10005861:	pop    edi
10005862:	mov    DWORD PTR [eax+0x4],esi
10005865:	pop    esi
10005866:	mov    BYTE PTR [eax+0x8],0x0
1000586a:	mov    DWORD PTR [eax],edx
1000586c:	pop    ebx
1000586d:	mov    esp,ebp
1000586f:	pop    ebp
10005870:	ret    0x8
10005873:	int3   
10005874:	int3   
10005875:	int3   
10005876:	int3   
10005877:	int3   
10005878:	int3   
10005879:	int3   
1000587a:	int3   
1000587b:	int3   
1000587c:	int3   
1000587d:	int3   
1000587e:	int3   
1000587f:	int3   
10005880:	push   ebp
10005881:	mov    ebp,esp
10005883:	and    esp,0xfffffff8
10005886:	push   0xffffffff
10005888:	push   0x1002add8
1000588d:	mov    eax,fs:0x0
10005893:	push   eax
10005894:	sub    esp,0x50
10005897:	push   ebx
10005898:	push   esi
10005899:	push   edi
1000589a:	mov    eax,ds:0x10064694
1000589f:	xor    eax,esp
100058a1:	push   eax
100058a2:	lea    eax,[esp+0x60]
100058a6:	mov    fs:0x0,eax
100058ac:	mov    edi,ecx
100058ae:	xor    ebx,ebx
100058b0:	cmp    DWORD PTR [edi+0x8],0x4924923
100058b7:	jb     0x10005902
100058b9:	push   0x13
100058bb:	push   0x10055920
100058c0:	lea    ecx,[esp+0x20]
100058c4:	mov    DWORD PTR [esp+0x38],0xf
100058cc:	mov    DWORD PTR [esp+0x34],ebx
100058d0:	mov    BYTE PTR [esp+0x24],bl
100058d4:	call   0x10003900
100058d9:	lea    eax,[esp+0x18]
100058dd:	push   eax
100058de:	lea    ecx,[esp+0x38]
100058e2:	mov    DWORD PTR [esp+0x6c],ebx
100058e6:	call   0x10001350
100058eb:	push   0x10058b0c
100058f0:	lea    ecx,[esp+0x38]
100058f4:	push   ecx
100058f5:	mov    DWORD PTR [esp+0x3c],0x1002c4d4
100058fd:	call   0x100161ce
10005902:	mov    edx,DWORD PTR [ebp+0x14]
10005905:	mov    eax,DWORD PTR [edi+0x4]
10005908:	mov    esi,DWORD PTR [ebp+0x10]
1000590b:	push   ebx
1000590c:	push   edx
1000590d:	push   eax
1000590e:	push   esi
1000590f:	push   eax
10005910:	call   0x10005ff0
10005915:	add    DWORD PTR [edi+0x8],0x1
10005919:	mov    ecx,eax
1000591b:	mov    eax,DWORD PTR [edi+0x4]
1000591e:	cmp    esi,eax
10005920:	mov    DWORD PTR [esp+0x14],ecx
10005924:	jne    0x10005936
10005926:	mov    DWORD PTR [eax+0x4],ecx
10005929:	mov    eax,DWORD PTR [edi+0x4]
1000592c:	mov    DWORD PTR [eax],ecx
1000592e:	mov    edx,DWORD PTR [edi+0x4]
10005931:	mov    DWORD PTR [edx+0x8],ecx
10005934:	jmp    0x10005956
10005936:	cmp    BYTE PTR [ebp+0xc],bl
10005939:	je     0x10005948
1000593b:	mov    DWORD PTR [esi],ecx
1000593d:	mov    eax,DWORD PTR [edi+0x4]
10005940:	cmp    esi,DWORD PTR [eax]
10005942:	jne    0x10005956
10005944:	mov    DWORD PTR [eax],ecx
10005946:	jmp    0x10005956
10005948:	mov    DWORD PTR [esi+0x8],ecx
1000594b:	mov    eax,DWORD PTR [edi+0x4]
1000594e:	cmp    esi,DWORD PTR [eax+0x8]
10005951:	jne    0x10005956
10005953:	mov    DWORD PTR [eax+0x8],ecx
10005956:	mov    edx,DWORD PTR [ecx+0x4]
10005959:	cmp    BYTE PTR [edx+0x44],bl
1000595c:	lea    eax,[ecx+0x4]
1000595f:	mov    esi,ecx
10005961:	jne    0x10005aa2
10005967:	mov    ecx,DWORD PTR [eax]
10005969:	mov    edx,DWORD PTR [ecx+0x4]
1000596c:	cmp    ecx,DWORD PTR [edx]
1000596e:	jne    0x10005a15
10005974:	mov    edx,DWORD PTR [edx+0x8]
10005977:	cmp    BYTE PTR [edx+0x44],bl
1000597a:	je     0x10005a1c
10005980:	cmp    esi,DWORD PTR [ecx+0x8]
10005983:	jne    0x100059c0
10005985:	mov    esi,ecx
10005987:	mov    ecx,DWORD PTR [esi+0x8]
1000598a:	mov    eax,DWORD PTR [ecx]
1000598c:	mov    DWORD PTR [esi+0x8],eax
1000598f:	mov    eax,DWORD PTR [ecx]
10005991:	cmp    BYTE PTR [eax+0x45],bl
10005994:	jne    0x10005999
10005996:	mov    DWORD PTR [eax+0x4],esi
10005999:	mov    edx,DWORD PTR [esi+0x4]
1000599c:	lea    eax,[esi+0x4]
1000599f:	mov    DWORD PTR [ecx+0x4],edx
100059a2:	mov    edx,DWORD PTR [edi+0x4]
100059a5:	cmp    esi,DWORD PTR [edx+0x4]
100059a8:	jne    0x100059af
100059aa:	mov    DWORD PTR [edx+0x4],ecx
100059ad:	jmp    0x100059bc
100059af:	mov    edx,DWORD PTR [eax]
100059b1:	cmp    esi,DWORD PTR [edx]
100059b3:	jne    0x100059b9
100059b5:	mov    DWORD PTR [edx],ecx
100059b7:	jmp    0x100059bc
100059b9:	mov    DWORD PTR [edx+0x8],ecx
100059bc:	mov    DWORD PTR [ecx],esi
100059be:	mov    DWORD PTR [eax],ecx
100059c0:	mov    ecx,DWORD PTR [eax]
100059c2:	mov    BYTE PTR [ecx+0x44],0x1
100059c6:	mov    edx,DWORD PTR [eax]
100059c8:	mov    ecx,DWORD PTR [edx+0x4]
100059cb:	mov    BYTE PTR [ecx+0x44],bl
100059ce:	mov    edx,DWORD PTR [eax]
100059d0:	mov    eax,DWORD PTR [edx+0x4]
100059d3:	mov    ecx,DWORD PTR [eax]
100059d5:	mov    edx,DWORD PTR [ecx+0x8]
100059d8:	mov    DWORD PTR [eax],edx
100059da:	mov    edx,DWORD PTR [ecx+0x8]
100059dd:	cmp    BYTE PTR [edx+0x45],bl
100059e0:	jne    0x100059e5
100059e2:	mov    DWORD PTR [edx+0x4],eax
100059e5:	mov    edx,DWORD PTR [eax+0x4]
100059e8:	mov    DWORD PTR [ecx+0x4],edx
100059eb:	mov    edx,DWORD PTR [edi+0x4]
100059ee:	cmp    eax,DWORD PTR [edx+0x4]
100059f1:	jne    0x100059fe
100059f3:	mov    DWORD PTR [edx+0x4],ecx
100059f6:	mov    DWORD PTR [ecx+0x8],eax
100059f9:	jmp    0x10005a8c
100059fe:	mov    edx,DWORD PTR [eax+0x4]
10005a01:	cmp    eax,DWORD PTR [edx+0x8]
10005a04:	jne    0x10005a0e
10005a06:	mov    DWORD PTR [edx+0x8],ecx
10005a09:	mov    DWORD PTR [ecx+0x8],eax
10005a0c:	jmp    0x10005a8c
10005a0e:	mov    DWORD PTR [edx],ecx
10005a10:	mov    DWORD PTR [ecx+0x8],eax
10005a13:	jmp    0x10005a8c
10005a15:	mov    edx,DWORD PTR [edx]
10005a17:	cmp    BYTE PTR [edx+0x44],bl
10005a1a:	jne    0x10005a33
10005a1c:	mov    BYTE PTR [ecx+0x44],0x1
10005a20:	mov    BYTE PTR [edx+0x44],0x1
10005a24:	mov    edx,DWORD PTR [eax]
10005a26:	mov    ecx,DWORD PTR [edx+0x4]
10005a29:	mov    BYTE PTR [ecx+0x44],bl
10005a2c:	mov    edx,DWORD PTR [eax]
10005a2e:	mov    esi,DWORD PTR [edx+0x4]
10005a31:	jmp    0x10005a8f
10005a33:	cmp    esi,DWORD PTR [ecx]
10005a35:	jne    0x10005a41
10005a37:	mov    esi,ecx
10005a39:	push   esi
10005a3a:	mov    ecx,edi
10005a3c:	call   0x10005c90
10005a41:	mov    eax,DWORD PTR [esi+0x4]
10005a44:	mov    BYTE PTR [eax+0x44],0x1
10005a48:	mov    ecx,DWORD PTR [esi+0x4]
10005a4b:	mov    edx,DWORD PTR [ecx+0x4]
10005a4e:	mov    BYTE PTR [edx+0x44],bl
10005a51:	mov    eax,DWORD PTR [esi+0x4]
10005a54:	mov    eax,DWORD PTR [eax+0x4]
10005a57:	mov    ecx,DWORD PTR [eax+0x8]
10005a5a:	mov    edx,DWORD PTR [ecx]
10005a5c:	mov    DWORD PTR [eax+0x8],edx
10005a5f:	mov    edx,DWORD PTR [ecx]
10005a61:	cmp    BYTE PTR [edx+0x45],bl
10005a64:	jne    0x10005a69
10005a66:	mov    DWORD PTR [edx+0x4],eax
10005a69:	mov    edx,DWORD PTR [eax+0x4]
10005a6c:	mov    DWORD PTR [ecx+0x4],edx
10005a6f:	mov    edx,DWORD PTR [edi+0x4]
10005a72:	cmp    eax,DWORD PTR [edx+0x4]
10005a75:	jne    0x10005a7c
10005a77:	mov    DWORD PTR [edx+0x4],ecx
10005a7a:	jmp    0x10005a8a
10005a7c:	mov    edx,DWORD PTR [eax+0x4]
10005a7f:	cmp    eax,DWORD PTR [edx]
10005a81:	jne    0x10005a87
10005a83:	mov    DWORD PTR [edx],ecx
10005a85:	jmp    0x10005a8a
10005a87:	mov    DWORD PTR [edx+0x8],ecx
10005a8a:	mov    DWORD PTR [ecx],eax
10005a8c:	mov    DWORD PTR [eax+0x4],ecx
10005a8f:	mov    ecx,DWORD PTR [esi+0x4]
10005a92:	cmp    BYTE PTR [ecx+0x44],bl
10005a95:	lea    eax,[esi+0x4]
10005a98:	je     0x10005967
10005a9e:	mov    ecx,DWORD PTR [esp+0x14]
10005aa2:	mov    edx,DWORD PTR [edi+0x4]
10005aa5:	mov    eax,DWORD PTR [edx+0x4]
10005aa8:	mov    BYTE PTR [eax+0x44],0x1
10005aac:	mov    eax,DWORD PTR [ebp+0x8]
10005aaf:	mov    DWORD PTR [eax+0x4],ecx
10005ab2:	mov    DWORD PTR [eax],edi
10005ab4:	mov    ecx,DWORD PTR [esp+0x60]
10005ab8:	mov    DWORD PTR fs:0x0,ecx
10005abf:	pop    ecx
10005ac0:	pop    edi
10005ac1:	pop    esi
10005ac2:	pop    ebx
10005ac3:	mov    esp,ebp
10005ac5:	pop    ebp
10005ac6:	ret    0x10
10005ac9:	int3   
10005aca:	int3   
10005acb:	int3   
10005acc:	int3   
10005acd:	int3   
10005ace:	int3   
10005acf:	int3   
10005ad0:	mov    eax,DWORD PTR [ecx+0x4]
10005ad3:	push   ebp
10005ad4:	push   esi
10005ad5:	mov    esi,DWORD PTR [eax+0x4]
10005ad8:	cmp    BYTE PTR [esi+0x45],0x0
10005adc:	mov    ebp,eax
10005ade:	jne    0x10005b26
10005ae0:	push   ebx
10005ae1:	push   edi
10005ae2:	mov    edi,DWORD PTR [esp+0x14]
10005ae6:	lea    ebx,[edi+0x4]
10005ae9:	lea    esp,[esp+0x0]
10005af0:	cmp    DWORD PTR [edi+0x18],0x8
10005af4:	mov    edx,DWORD PTR [edi+0x14]
10005af7:	lea    ecx,[esi+0xc]
10005afa:	jb     0x10005b00
10005afc:	mov    eax,DWORD PTR [ebx]
10005afe:	jmp    0x10005b02
10005b00:	mov    eax,ebx
10005b02:	push   edx
10005b03:	push   eax
10005b04:	mov    eax,DWORD PTR [ecx+0x14]
10005b07:	push   eax
10005b08:	push   0x0
10005b0a:	call   0x10006bd0
10005b0f:	test   eax,eax
10005b11:	jge    0x10005b18
10005b13:	mov    esi,DWORD PTR [esi+0x8]
10005b16:	jmp    0x10005b1c
10005b18:	mov    ebp,esi
10005b1a:	mov    esi,DWORD PTR [esi]
10005b1c:	cmp    BYTE PTR [esi+0x45],0x0
10005b20:	je     0x10005af0
10005b22:	pop    edi
10005b23:	mov    eax,ebp
10005b25:	pop    ebx
10005b26:	pop    esi
10005b27:	pop    ebp
10005b28:	ret    0x4
10005b2b:	int3   
10005b2c:	int3   
10005b2d:	int3   
10005b2e:	int3   
10005b2f:	int3   
10005b30:	push   ebp
10005b31:	mov    ebp,esp
10005b33:	and    esp,0xfffffff8
10005b36:	sub    esp,0x14
10005b39:	push   ebx
10005b3a:	push   esi
10005b3b:	push   edi
10005b3c:	mov    edi,ecx
10005b3e:	mov    eax,DWORD PTR [edi+0x4]
10005b41:	mov    ebx,DWORD PTR [eax]
10005b43:	mov    eax,DWORD PTR [ebp+0xc]
10005b46:	test   eax,eax
10005b48:	je     0x10005b4e
10005b4a:	cmp    eax,edi
10005b4c:	je     0x10005b53
10005b4e:	call   0x10016143
10005b53:	mov    esi,DWORD PTR [ebp+0x10]
10005b56:	cmp    esi,ebx
10005b58:	jne    0x10005bb0
10005b5a:	mov    eax,DWORD PTR [ebp+0x14]
10005b5d:	test   eax,eax
10005b5f:	mov    ebx,DWORD PTR [edi+0x4]
10005b62:	je     0x10005b68
10005b64:	cmp    eax,edi
10005b66:	je     0x10005b6d
10005b68:	call   0x10016143
10005b6d:	cmp    DWORD PTR [ebp+0x18],ebx
10005b70:	jne    0x10005bb0
10005b72:	mov    ecx,DWORD PTR [edi+0x4]
10005b75:	mov    edx,DWORD PTR [ecx+0x4]
10005b78:	push   edx
10005b79:	mov    ecx,edi
10005b7b:	call   0x10006970
10005b80:	mov    eax,DWORD PTR [edi+0x4]
10005b83:	mov    DWORD PTR [eax+0x4],eax
10005b86:	mov    eax,DWORD PTR [edi+0x4]
10005b89:	mov    DWORD PTR [edi+0x8],0x0
10005b90:	mov    DWORD PTR [eax],eax
10005b92:	mov    eax,DWORD PTR [edi+0x4]
10005b95:	mov    DWORD PTR [eax+0x8],eax
10005b98:	mov    eax,DWORD PTR [edi+0x4]
10005b9b:	mov    ecx,DWORD PTR [eax]
10005b9d:	mov    eax,DWORD PTR [ebp+0x8]
10005ba0:	mov    DWORD PTR [eax+0x4],ecx
10005ba3:	mov    DWORD PTR [eax],edi
10005ba5:	pop    edi
10005ba6:	pop    esi
10005ba7:	pop    ebx
10005ba8:	mov    esp,ebp
10005baa:	pop    ebp
10005bab:	ret    0x14
10005bae:	mov    edi,edi
10005bb0:	mov    ebx,DWORD PTR [ebp+0xc]
10005bb3:	test   ebx,ebx
10005bb5:	je     0x10005bbc
10005bb7:	cmp    ebx,DWORD PTR [ebp+0x14]
10005bba:	je     0x10005bc1
10005bbc:	call   0x10016143
10005bc1:	cmp    esi,DWORD PTR [ebp+0x18]
10005bc4:	je     0x10005c2e
10005bc6:	test   ebx,ebx
10005bc8:	mov    DWORD PTR [esp+0x14],esi
10005bcc:	jne    0x10005bd3
10005bce:	call   0x10016143
10005bd3:	cmp    BYTE PTR [esi+0x45],0x0
10005bd7:	je     0x10005be0
10005bd9:	call   0x10016143
10005bde:	jmp    0x10005c1a
10005be0:	mov    eax,DWORD PTR [esi+0x8]
10005be3:	cmp    BYTE PTR [eax+0x45],0x0
10005be7:	jne    0x10005bff
10005be9:	mov    esi,eax
10005beb:	mov    eax,DWORD PTR [esi]
10005bed:	cmp    BYTE PTR [eax+0x45],0x0
10005bf1:	jne    0x10005c1a
10005bf3:	mov    esi,eax
10005bf5:	mov    eax,DWORD PTR [esi]
10005bf7:	cmp    BYTE PTR [eax+0x45],0x0
10005bfb:	je     0x10005bf3
10005bfd:	jmp    0x10005c1a
10005bff:	mov    eax,DWORD PTR [esi+0x4]
10005c02:	cmp    BYTE PTR [eax+0x45],0x0
10005c06:	jne    0x10005c18
10005c08:	cmp    esi,DWORD PTR [eax+0x8]
10005c0b:	jne    0x10005c18
10005c0d:	mov    esi,eax
10005c0f:	mov    eax,DWORD PTR [eax+0x4]
10005c12:	cmp    BYTE PTR [eax+0x45],0x0
10005c16:	je     0x10005c08
10005c18:	mov    esi,eax
10005c1a:	mov    edx,DWORD PTR [esp+0x14]
10005c1e:	push   edx
10005c1f:	push   ebx
10005c20:	lea    eax,[esp+0x20]
10005c24:	push   eax
10005c25:	mov    ecx,edi
10005c27:	call   0x10006090
10005c2c:	jmp    0x10005bb0
10005c2e:	mov    eax,DWORD PTR [ebp+0x8]
10005c31:	pop    edi
10005c32:	mov    DWORD PTR [eax+0x4],esi
10005c35:	pop    esi
10005c36:	mov    DWORD PTR [eax],ebx
10005c38:	pop    ebx
10005c39:	mov    esp,ebp
10005c3b:	pop    ebp
10005c3c:	ret    0x14
10005c3f:	int3   
10005c40:	mov    edx,DWORD PTR [esp+0x4]
10005c44:	mov    eax,DWORD PTR [edx+0x8]
10005c47:	push   esi
10005c48:	mov    esi,DWORD PTR [eax]
10005c4a:	mov    DWORD PTR [edx+0x8],esi
10005c4d:	mov    esi,DWORD PTR [eax]
10005c4f:	cmp    BYTE PTR [esi+0x45],0x0
10005c53:	jne    0x10005c58
10005c55:	mov    DWORD PTR [esi+0x4],edx
10005c58:	mov    esi,DWORD PTR [edx+0x4]
10005c5b:	mov    DWORD PTR [eax+0x4],esi
10005c5e:	mov    ecx,DWORD PTR [ecx+0x4]
10005c61:	cmp    edx,DWORD PTR [ecx+0x4]
10005c64:	pop    esi
10005c65:	jne    0x10005c72
10005c67:	mov    DWORD PTR [ecx+0x4],eax
10005c6a:	mov    DWORD PTR [eax],edx
10005c6c:	mov    DWORD PTR [edx+0x4],eax
10005c6f:	ret    0x4
10005c72:	mov    ecx,DWORD PTR [edx+0x4]
10005c75:	cmp    edx,DWORD PTR [ecx]
10005c77:	jne    0x10005c83
10005c79:	mov    DWORD PTR [ecx],eax
10005c7b:	mov    DWORD PTR [eax],edx
10005c7d:	mov    DWORD PTR [edx+0x4],eax
10005c80:	ret    0x4
10005c83:	mov    DWORD PTR [ecx+0x8],eax
10005c86:	mov    DWORD PTR [eax],edx
10005c88:	mov    DWORD PTR [edx+0x4],eax
10005c8b:	ret    0x4
10005c8e:	int3   
10005c8f:	int3   
10005c90:	mov    edx,DWORD PTR [esp+0x4]
10005c94:	mov    eax,DWORD PTR [edx]
10005c96:	push   esi
10005c97:	mov    esi,DWORD PTR [eax+0x8]
10005c9a:	mov    DWORD PTR [edx],esi
10005c9c:	mov    esi,DWORD PTR [eax+0x8]
10005c9f:	cmp    BYTE PTR [esi+0x45],0x0
10005ca3:	jne    0x10005ca8
10005ca5:	mov    DWORD PTR [esi+0x4],edx
10005ca8:	mov    esi,DWORD PTR [edx+0x4]
10005cab:	mov    DWORD PTR [eax+0x4],esi
10005cae:	mov    ecx,DWORD PTR [ecx+0x4]
10005cb1:	cmp    edx,DWORD PTR [ecx+0x4]
10005cb4:	pop    esi
10005cb5:	jne    0x10005cc3
10005cb7:	mov    DWORD PTR [ecx+0x4],eax
10005cba:	mov    DWORD PTR [eax+0x8],edx
10005cbd:	mov    DWORD PTR [edx+0x4],eax
10005cc0:	ret    0x4
10005cc3:	mov    ecx,DWORD PTR [edx+0x4]
10005cc6:	cmp    edx,DWORD PTR [ecx+0x8]
10005cc9:	jne    0x10005cd7
10005ccb:	mov    DWORD PTR [ecx+0x8],eax
10005cce:	mov    DWORD PTR [eax+0x8],edx
10005cd1:	mov    DWORD PTR [edx+0x4],eax
10005cd4:	ret    0x4
10005cd7:	mov    DWORD PTR [ecx],eax
10005cd9:	mov    DWORD PTR [eax+0x8],edx
10005cdc:	mov    DWORD PTR [edx+0x4],eax
10005cdf:	ret    0x4
10005ce2:	int3   
10005ce3:	int3   
10005ce4:	int3   
10005ce5:	int3   
10005ce6:	int3   
10005ce7:	int3   
10005ce8:	int3   
10005ce9:	int3   
10005cea:	int3   
10005ceb:	int3   
10005cec:	int3   
10005ced:	int3   
10005cee:	int3   
10005cef:	int3   
10005cf0:	push   ebp
10005cf1:	mov    ebp,esp
10005cf3:	push   0xffffffff
10005cf5:	push   0x1002a9f1
10005cfa:	mov    eax,fs:0x0
10005d00:	push   eax
10005d01:	sub    esp,0xc
10005d04:	push   ebx
10005d05:	push   esi
10005d06:	push   edi
10005d07:	mov    eax,ds:0x10064694
10005d0c:	xor    eax,ebp
10005d0e:	push   eax
10005d0f:	lea    eax,[ebp-0xc]
10005d12:	mov    fs:0x0,eax
10005d18:	mov    DWORD PTR [ebp-0x10],esp
10005d1b:	push   0x48
10005d1d:	call   0x10016414
10005d22:	mov    esi,eax
10005d24:	mov    DWORD PTR [ebp-0x4],0x0
10005d2b:	add    esp,0x4
10005d2e:	mov    DWORD PTR [ebp-0x14],esi
10005d31:	mov    DWORD PTR [ebp-0x18],esi
10005d34:	test   esi,esi
10005d36:	mov    BYTE PTR [ebp-0x4],0x1
10005d3a:	je     0x10005d63
10005d3c:	mov    eax,DWORD PTR [ebp+0x8]
10005d3f:	mov    ecx,DWORD PTR [ebp+0xc]
10005d42:	mov    edx,DWORD PTR [ebp+0x10]
10005d45:	mov    DWORD PTR [esi],eax
10005d47:	mov    eax,DWORD PTR [ebp+0x14]
10005d4a:	mov    DWORD PTR [esi+0x4],ecx
10005d4d:	push   eax
10005d4e:	lea    ecx,[esi+0xc]
10005d51:	mov    DWORD PTR [esi+0x8],edx
10005d54:	call   0x10006870
10005d59:	mov    cl,BYTE PTR [ebp+0x18]
10005d5c:	mov    BYTE PTR [esi+0x44],cl
10005d5f:	mov    BYTE PTR [esi+0x45],0x0
10005d63:	mov    eax,esi
10005d65:	mov    ecx,DWORD PTR [ebp-0xc]
10005d68:	mov    DWORD PTR fs:0x0,ecx
10005d6f:	pop    ecx
10005d70:	pop    edi
10005d71:	pop    esi
10005d72:	pop    ebx
10005d73:	mov    esp,ebp
10005d75:	pop    ebp
10005d76:	ret    0x14
10005d79:	mov    edx,DWORD PTR [ebp-0x14]
10005d7c:	push   edx
10005d7d:	call   0x10015ad6
10005d82:	add    esp,0x4
10005d85:	push   0x0
10005d87:	push   0x0
10005d89:	call   0x100161ce
10005d8e:	int3   
10005d8f:	int3   
10005d90:	push   ebp
10005d91:	mov    ebp,esp
10005d93:	push   0xffffffff
10005d95:	push   0x1002a7f0
10005d9a:	mov    eax,fs:0x0
10005da0:	push   eax
10005da1:	sub    esp,0xc
10005da4:	push   ebx
10005da5:	push   esi
10005da6:	push   edi
10005da7:	mov    eax,ds:0x10064694
10005dac:	xor    eax,ebp
10005dae:	push   eax
10005daf:	lea    eax,[ebp-0xc]
10005db2:	mov    fs:0x0,eax
10005db8:	mov    DWORD PTR [ebp-0x10],esp
10005dbb:	mov    edi,ecx
10005dbd:	mov    DWORD PTR [ebp-0x14],edi
10005dc0:	mov    eax,DWORD PTR [ebp+0x8]
10005dc3:	mov    esi,eax
10005dc5:	or     esi,0x7
10005dc8:	cmp    esi,0x7ffffffe
10005dce:	jbe    0x10005dd4
10005dd0:	mov    esi,eax
10005dd2:	jmp    0x10005df6
10005dd4:	mov    ebx,DWORD PTR [edi+0x18]
10005dd7:	mov    eax,0xaaaaaaab
10005ddc:	mul    esi
10005dde:	mov    ecx,ebx
10005de0:	shr    ecx,1
10005de2:	shr    edx,1
10005de4:	cmp    edx,ecx
10005de6:	jae    0x10005df6
10005de8:	mov    eax,0x7ffffffe
10005ded:	sub    eax,ecx
10005def:	cmp    ebx,eax
10005df1:	ja     0x10005df6
10005df3:	lea    esi,[ecx+ebx*1]
10005df6:	lea    ecx,[esi+0x1]
10005df9:	push   ecx
10005dfa:	mov    ecx,edi
10005dfc:	mov    DWORD PTR [ebp-0x4],0x0
10005e03:	call   0x100064b0
10005e08:	mov    DWORD PTR [ebp+0x8],eax
10005e0b:	jmp    0x10005e35
10005e0d:	mov    eax,DWORD PTR [ebp+0x8]
10005e10:	mov    ecx,DWORD PTR [ebp-0x14]
10005e13:	mov    DWORD PTR [ebp-0x18],eax
10005e16:	add    eax,0x1
10005e19:	mov    DWORD PTR [ebp-0x10],esp
10005e1c:	push   eax
10005e1d:	mov    BYTE PTR [ebp-0x4],0x2
10005e21:	call   0x100064b0
10005e26:	mov    DWORD PTR [ebp+0x8],eax
10005e29:	mov    eax,0x10005e2f
10005e2e:	ret    
10005e2f:	mov    edi,DWORD PTR [ebp-0x14]
10005e32:	mov    esi,DWORD PTR [ebp-0x18]
10005e35:	mov    ebx,DWORD PTR [ebp+0xc]
10005e38:	test   ebx,ebx
10005e3a:	jbe    0x10005e60
10005e3c:	cmp    DWORD PTR [edi+0x18],0x8
10005e40:	jb     0x10005e47
10005e42:	mov    eax,DWORD PTR [edi+0x4]
10005e45:	jmp    0x10005e4a
10005e47:	lea    eax,[edi+0x4]
10005e4a:	mov    ecx,DWORD PTR [ebp+0x8]
10005e4d:	lea    edx,[ebx+ebx*1]
10005e50:	push   edx
10005e51:	push   eax
10005e52:	lea    eax,[esi+esi*1+0x2]
10005e56:	push   eax
10005e57:	push   ecx
10005e58:	call   0x10016153
10005e5d:	add    esp,0x10
10005e60:	cmp    DWORD PTR [edi+0x18],0x8
10005e64:	jb     0x10005e72
10005e66:	mov    edx,DWORD PTR [edi+0x4]
10005e69:	push   edx
10005e6a:	call   0x10015ad6
10005e6f:	add    esp,0x4
10005e72:	cmp    esi,0x8
10005e75:	mov    ecx,DWORD PTR [ebp+0x8]
10005e78:	lea    eax,[edi+0x4]
10005e7b:	mov    WORD PTR [eax],0x0
10005e80:	mov    DWORD PTR [eax],ecx
10005e82:	mov    DWORD PTR [edi+0x18],esi
10005e85:	mov    DWORD PTR [edi+0x14],ebx
10005e88:	jb     0x10005e8c
10005e8a:	mov    eax,ecx
10005e8c:	mov    WORD PTR [eax+ebx*2],0x0
10005e92:	mov    ecx,DWORD PTR [ebp-0xc]
10005e95:	mov    DWORD PTR fs:0x0,ecx
10005e9c:	pop    ecx
10005e9d:	pop    edi
10005e9e:	pop    esi
10005e9f:	pop    ebx
10005ea0:	mov    esp,ebp
10005ea2:	pop    ebp
10005ea3:	ret    0x8
10005ea6:	mov    esi,DWORD PTR [ebp-0x14]
10005ea9:	cmp    DWORD PTR [esi+0x18],0x8
10005ead:	jb     0x10005ebb
10005eaf:	mov    eax,DWORD PTR [esi+0x4]
10005eb2:	push   eax
10005eb3:	call   0x10015ad6
10005eb8:	add    esp,0x4
10005ebb:	xor    eax,eax
10005ebd:	push   eax
10005ebe:	mov    DWORD PTR [esi+0x18],0x7
10005ec5:	mov    DWORD PTR [esi+0x14],eax
10005ec8:	push   eax
10005ec9:	mov    WORD PTR [esi+0x4],ax
10005ecd:	call   0x100161ce
10005ed2:	int3   
10005ed3:	int3   
10005ed4:	int3   
10005ed5:	int3   
10005ed6:	int3   
10005ed7:	int3   
10005ed8:	int3   
10005ed9:	int3   
10005eda:	int3   
10005edb:	int3   
10005edc:	int3   
10005edd:	int3   
10005ede:	int3   
10005edf:	int3   
10005ee0:	push   ebp
10005ee1:	mov    ebp,esp
10005ee3:	and    esp,0xfffffff8
10005ee6:	sub    esp,0x14
10005ee9:	push   ebx
10005eea:	push   esi
10005eeb:	push   edi
10005eec:	mov    edi,ecx
10005eee:	mov    eax,DWORD PTR [edi+0x4]
10005ef1:	mov    ebx,DWORD PTR [eax]
10005ef3:	mov    eax,DWORD PTR [ebp+0xc]
10005ef6:	test   eax,eax
10005ef8:	je     0x10005efe
10005efa:	cmp    eax,edi
10005efc:	je     0x10005f03
10005efe:	call   0x10016143
10005f03:	mov    esi,DWORD PTR [ebp+0x10]
10005f06:	cmp    esi,ebx
10005f08:	jne    0x10005f60
10005f0a:	mov    eax,DWORD PTR [ebp+0x14]
10005f0d:	test   eax,eax
10005f0f:	mov    ebx,DWORD PTR [edi+0x4]
10005f12:	je     0x10005f18
10005f14:	cmp    eax,edi
10005f16:	je     0x10005f1d
10005f18:	call   0x10016143
10005f1d:	cmp    DWORD PTR [ebp+0x18],ebx
10005f20:	jne    0x10005f60
10005f22:	mov    ecx,DWORD PTR [edi+0x4]
10005f25:	mov    edx,DWORD PTR [ecx+0x4]
10005f28:	push   edx
10005f29:	mov    ecx,edi
10005f2b:	call   0x10006a10
10005f30:	mov    eax,DWORD PTR [edi+0x4]
10005f33:	mov    DWORD PTR [eax+0x4],eax
10005f36:	mov    eax,DWORD PTR [edi+0x4]
10005f39:	mov    DWORD PTR [edi+0x8],0x0
10005f40:	mov    DWORD PTR [eax],eax
10005f42:	mov    eax,DWORD PTR [edi+0x4]
10005f45:	mov    DWORD PTR [eax+0x8],eax
10005f48:	mov    eax,DWORD PTR [edi+0x4]
10005f4b:	mov    ecx,DWORD PTR [eax]
10005f4d:	mov    eax,DWORD PTR [ebp+0x8]
10005f50:	mov    DWORD PTR [eax+0x4],ecx
10005f53:	mov    DWORD PTR [eax],edi
10005f55:	pop    edi
10005f56:	pop    esi
10005f57:	pop    ebx
10005f58:	mov    esp,ebp
10005f5a:	pop    ebp
10005f5b:	ret    0x14
10005f5e:	mov    edi,edi
10005f60:	mov    ebx,DWORD PTR [ebp+0xc]
10005f63:	test   ebx,ebx
10005f65:	je     0x10005f6c
10005f67:	cmp    ebx,DWORD PTR [ebp+0x14]
10005f6a:	je     0x10005f71
10005f6c:	call   0x10016143
10005f71:	cmp    esi,DWORD PTR [ebp+0x18]
10005f74:	je     0x10005fde
10005f76:	test   ebx,ebx
10005f78:	mov    DWORD PTR [esp+0x14],esi
10005f7c:	jne    0x10005f83
10005f7e:	call   0x10016143
10005f83:	cmp    BYTE PTR [esi+0x45],0x0
10005f87:	je     0x10005f90
10005f89:	call   0x10016143
10005f8e:	jmp    0x10005fca
10005f90:	mov    eax,DWORD PTR [esi+0x8]
10005f93:	cmp    BYTE PTR [eax+0x45],0x0
10005f97:	jne    0x10005faf
10005f99:	mov    esi,eax
10005f9b:	mov    eax,DWORD PTR [esi]
10005f9d:	cmp    BYTE PTR [eax+0x45],0x0
10005fa1:	jne    0x10005fca
10005fa3:	mov    esi,eax
10005fa5:	mov    eax,DWORD PTR [esi]
10005fa7:	cmp    BYTE PTR [eax+0x45],0x0
10005fab:	je     0x10005fa3
10005fad:	jmp    0x10005fca
10005faf:	mov    eax,DWORD PTR [esi+0x4]
10005fb2:	cmp    BYTE PTR [eax+0x45],0x0
10005fb6:	jne    0x10005fc8
10005fb8:	cmp    esi,DWORD PTR [eax+0x8]
10005fbb:	jne    0x10005fc8
10005fbd:	mov    esi,eax
10005fbf:	mov    eax,DWORD PTR [eax+0x4]
10005fc2:	cmp    BYTE PTR [eax+0x45],0x0
10005fc6:	je     0x10005fb8
10005fc8:	mov    esi,eax
10005fca:	mov    edx,DWORD PTR [esp+0x14]
10005fce:	push   edx
10005fcf:	push   ebx
10005fd0:	lea    eax,[esp+0x20]
10005fd4:	push   eax
10005fd5:	mov    ecx,edi
10005fd7:	call   0x10006510
10005fdc:	jmp    0x10005f60
10005fde:	mov    eax,DWORD PTR [ebp+0x8]
10005fe1:	pop    edi
10005fe2:	mov    DWORD PTR [eax+0x4],esi
10005fe5:	pop    esi
10005fe6:	mov    DWORD PTR [eax],ebx
10005fe8:	pop    ebx
10005fe9:	mov    esp,ebp
10005feb:	pop    ebp
10005fec:	ret    0x14
10005fef:	int3   
10005ff0:	push   ebp
10005ff1:	mov    ebp,esp
10005ff3:	push   0xffffffff
10005ff5:	push   0x1002a9c1
10005ffa:	mov    eax,fs:0x0
10006000:	push   eax
10006001:	sub    esp,0xc
10006004:	push   ebx
10006005:	push   esi
10006006:	push   edi
10006007:	mov    eax,ds:0x10064694
1000600c:	xor    eax,ebp
1000600e:	push   eax
1000600f:	lea    eax,[ebp-0xc]
10006012:	mov    fs:0x0,eax
10006018:	mov    DWORD PTR [ebp-0x10],esp
1000601b:	push   0x48
1000601d:	call   0x10016414
10006022:	mov    esi,eax
10006024:	mov    DWORD PTR [ebp-0x4],0x0
1000602b:	add    esp,0x4
1000602e:	mov    DWORD PTR [ebp-0x14],esi
10006031:	mov    DWORD PTR [ebp-0x18],esi
10006034:	test   esi,esi
10006036:	mov    BYTE PTR [ebp-0x4],0x1
1000603a:	je     0x10006063
1000603c:	mov    eax,DWORD PTR [ebp+0x8]
1000603f:	mov    ecx,DWORD PTR [ebp+0xc]
10006042:	mov    edx,DWORD PTR [ebp+0x10]
10006045:	mov    DWORD PTR [esi],eax
10006047:	mov    eax,DWORD PTR [ebp+0x14]
1000604a:	mov    DWORD PTR [esi+0x4],ecx
1000604d:	push   eax
1000604e:	lea    ecx,[esi+0xc]
10006051:	mov    DWORD PTR [esi+0x8],edx
10006054:	call   0x100068f0
10006059:	mov    cl,BYTE PTR [ebp+0x18]
1000605c:	mov    BYTE PTR [esi+0x44],cl
1000605f:	mov    BYTE PTR [esi+0x45],0x0
10006063:	mov    eax,esi
10006065:	mov    ecx,DWORD PTR [ebp-0xc]
10006068:	mov    DWORD PTR fs:0x0,ecx
1000606f:	pop    ecx
10006070:	pop    edi
10006071:	pop    esi
10006072:	pop    ebx
10006073:	mov    esp,ebp
10006075:	pop    ebp
10006076:	ret    0x14
10006079:	mov    edx,DWORD PTR [ebp-0x14]
1000607c:	push   edx
1000607d:	call   0x10015ad6
10006082:	add    esp,0x4
10006085:	push   0x0
10006087:	push   0x0
10006089:	call   0x100161ce
1000608e:	int3   
1000608f:	int3   
10006090:	push   ebp
10006091:	mov    ebp,esp
10006093:	and    esp,0xfffffff8
10006096:	push   0xffffffff
10006098:	push   0x1002ada8
1000609d:	mov    eax,fs:0x0
100060a3:	push   eax
100060a4:	sub    esp,0x50
100060a7:	push   ebx
100060a8:	push   esi
100060a9:	push   edi
100060aa:	mov    eax,ds:0x10064694
100060af:	xor    eax,esp
100060b1:	push   eax
100060b2:	lea    eax,[esp+0x60]
100060b6:	mov    fs:0x0,eax
100060bc:	mov    DWORD PTR [esp+0x14],ecx
100060c0:	mov    edi,DWORD PTR [ebp+0x10]
100060c3:	cmp    BYTE PTR [edi+0x45],0x0
100060c7:	je     0x10006115
100060c9:	push   0x1b
100060cb:	xor    esi,esi
100060cd:	push   0x10055934
100060d2:	lea    ecx,[esp+0x20]
100060d6:	mov    DWORD PTR [esp+0x38],0xf
100060de:	mov    DWORD PTR [esp+0x34],esi
100060e2:	mov    BYTE PTR [esp+0x24],0x0
100060e7:	call   0x10003900
100060ec:	lea    eax,[esp+0x18]
100060f0:	push   eax
100060f1:	lea    ecx,[esp+0x38]
100060f5:	mov    DWORD PTR [esp+0x6c],esi
100060f9:	call   0x10001350
100060fe:	push   0x10058ad0
10006103:	lea    ecx,[esp+0x38]
10006107:	push   ecx
10006108:	mov    DWORD PTR [esp+0x3c],0x1002c4f8
10006110:	call   0x100161ce
10006115:	lea    ecx,[ebp+0xc]
10006118:	call   0x10006440
1000611d:	mov    ecx,DWORD PTR [edi]
1000611f:	cmp    BYTE PTR [ecx+0x45],0x0
10006123:	je     0x1000612a
10006125:	mov    ebx,DWORD PTR [edi+0x8]
10006128:	jmp    0x10006141
1000612a:	mov    edx,DWORD PTR [edi+0x8]
1000612d:	cmp    BYTE PTR [edx+0x45],0x0
10006131:	je     0x10006137
10006133:	mov    ebx,ecx
10006135:	jmp    0x10006141
10006137:	mov    eax,DWORD PTR [ebp+0x10]
1000613a:	cmp    eax,edi
1000613c:	mov    ebx,DWORD PTR [eax+0x8]
1000613f:	jne    0x100061bd
10006141:	cmp    BYTE PTR [ebx+0x45],0x0
10006145:	mov    esi,DWORD PTR [edi+0x4]
10006148:	jne    0x1000614d
1000614a:	mov    DWORD PTR [ebx+0x4],esi
1000614d:	mov    ecx,DWORD PTR [esp+0x14]
10006151:	mov    eax,DWORD PTR [ecx+0x4]
10006154:	cmp    DWORD PTR [eax+0x4],edi
10006157:	jne    0x1000615e
10006159:	mov    DWORD PTR [eax+0x4],ebx
1000615c:	jmp    0x10006169
1000615e:	cmp    DWORD PTR [esi],edi
10006160:	jne    0x10006166
10006162:	mov    DWORD PTR [esi],ebx
10006164:	jmp    0x10006169
10006166:	mov    DWORD PTR [esi+0x8],ebx
10006169:	mov    eax,DWORD PTR [ecx+0x4]
1000616c:	cmp    DWORD PTR [eax],edi
1000616e:	jne    0x1000618c
10006170:	cmp    BYTE PTR [ebx+0x45],0x0
10006174:	je     0x1000617a
10006176:	mov    eax,esi
10006178:	jmp    0x10006187
1000617a:	push   ebx
1000617b:	call   0x100069f0
10006180:	mov    ecx,DWORD PTR [esp+0x18]
10006184:	add    esp,0x4
10006187:	mov    edx,DWORD PTR [ecx+0x4]
1000618a:	mov    DWORD PTR [edx],eax
1000618c:	mov    eax,DWORD PTR [ecx+0x4]
1000618f:	cmp    DWORD PTR [eax+0x8],edi
10006192:	jne    0x1000621c
10006198:	cmp    BYTE PTR [ebx+0x45],0x0
1000619c:	je     0x100061a8
1000619e:	mov    edx,DWORD PTR [ecx+0x4]
100061a1:	mov    eax,esi
100061a3:	mov    DWORD PTR [edx+0x8],eax
100061a6:	jmp    0x1000621c
100061a8:	push   ebx
100061a9:	call   0x10006a90
100061ae:	mov    ecx,DWORD PTR [esp+0x18]
100061b2:	mov    edx,DWORD PTR [ecx+0x4]
100061b5:	add    esp,0x4
100061b8:	mov    DWORD PTR [edx+0x8],eax
100061bb:	jmp    0x1000621c
100061bd:	mov    DWORD PTR [ecx+0x4],eax
100061c0:	mov    ecx,DWORD PTR [edi]
100061c2:	mov    DWORD PTR [eax],ecx
100061c4:	cmp    eax,DWORD PTR [edi+0x8]
100061c7:	jne    0x100061cd
100061c9:	mov    esi,eax
100061cb:	jmp    0x100061e7
100061cd:	cmp    BYTE PTR [ebx+0x45],0x0
100061d1:	mov    esi,DWORD PTR [eax+0x4]
100061d4:	jne    0x100061d9
100061d6:	mov    DWORD PTR [ebx+0x4],esi
100061d9:	mov    DWORD PTR [esi],ebx
100061db:	mov    edx,DWORD PTR [edi+0x8]
100061de:	mov    DWORD PTR [eax+0x8],edx
100061e1:	mov    ecx,DWORD PTR [edi+0x8]
100061e4:	mov    DWORD PTR [ecx+0x4],eax
100061e7:	mov    edx,DWORD PTR [esp+0x14]
100061eb:	mov    ecx,DWORD PTR [edx+0x4]
100061ee:	cmp    DWORD PTR [ecx+0x4],edi
100061f1:	jne    0x100061f8
100061f3:	mov    DWORD PTR [ecx+0x4],eax
100061f6:	jmp    0x10006206
100061f8:	mov    ecx,DWORD PTR [edi+0x4]
100061fb:	cmp    DWORD PTR [ecx],edi
100061fd:	jne    0x10006203
100061ff:	mov    DWORD PTR [ecx],eax
10006201:	jmp    0x10006206
10006203:	mov    DWORD PTR [ecx+0x8],eax
10006206:	mov    ecx,DWORD PTR [edi+0x4]
10006209:	mov    DWORD PTR [eax+0x4],ecx
1000620c:	mov    cl,BYTE PTR [eax+0x44]
1000620f:	mov    dl,BYTE PTR [edi+0x44]
10006212:	mov    BYTE PTR [eax+0x44],dl
10006215:	mov    BYTE PTR [edi+0x44],cl
10006218:	mov    ecx,DWORD PTR [esp+0x14]
1000621c:	cmp    BYTE PTR [edi+0x44],0x1
10006220:	jne    0x10006331
10006226:	mov    eax,DWORD PTR [ecx+0x4]
10006229:	cmp    ebx,DWORD PTR [eax+0x4]
1000622c:	je     0x1000632d
10006232:	cmp    BYTE PTR [ebx+0x44],0x1
10006236:	jne    0x1000632d
1000623c:	mov    eax,DWORD PTR [esi]
1000623e:	cmp    ebx,eax
10006240:	jne    0x100062b0
10006242:	mov    eax,DWORD PTR [esi+0x8]
10006245:	cmp    BYTE PTR [eax+0x44],0x0
10006249:	jne    0x10006260
1000624b:	mov    BYTE PTR [eax+0x44],0x1
1000624f:	push   esi
10006250:	mov    BYTE PTR [esi+0x44],0x0
10006254:	call   0x10005c40
10006259:	mov    eax,DWORD PTR [esi+0x8]
1000625c:	mov    ecx,DWORD PTR [esp+0x14]
10006260:	cmp    BYTE PTR [eax+0x45],0x0
10006264:	jne    0x100062e5
10006266:	mov    edx,DWORD PTR [eax]
10006268:	cmp    BYTE PTR [edx+0x44],0x1
1000626c:	jne    0x10006277
1000626e:	mov    edx,DWORD PTR [eax+0x8]
10006271:	cmp    BYTE PTR [edx+0x44],0x1
10006275:	je     0x100062e1
10006277:	mov    edx,DWORD PTR [eax+0x8]
1000627a:	cmp    BYTE PTR [edx+0x44],0x1
1000627e:	jne    0x10006297
10006280:	mov    edx,DWORD PTR [eax]
10006282:	mov    BYTE PTR [edx+0x44],0x1
10006286:	push   eax
10006287:	mov    BYTE PTR [eax+0x44],0x0
1000628b:	call   0x10005c90
10006290:	mov    eax,DWORD PTR [esi+0x8]
10006293:	mov    ecx,DWORD PTR [esp+0x14]
10006297:	mov    dl,BYTE PTR [esi+0x44]
1000629a:	mov    BYTE PTR [eax+0x44],dl
1000629d:	mov    BYTE PTR [esi+0x44],0x1
100062a1:	mov    eax,DWORD PTR [eax+0x8]
100062a4:	push   esi
100062a5:	mov    BYTE PTR [eax+0x44],0x1
100062a9:	call   0x10005c40
100062ae:	jmp    0x1000632d
100062b0:	cmp    BYTE PTR [eax+0x44],0x0
100062b4:	jne    0x100062ca
100062b6:	mov    BYTE PTR [eax+0x44],0x1
100062ba:	push   esi
100062bb:	mov    BYTE PTR [esi+0x44],0x0
100062bf:	call   0x10005c90
100062c4:	mov    eax,DWORD PTR [esi]
100062c6:	mov    ecx,DWORD PTR [esp+0x14]
100062ca:	cmp    BYTE PTR [eax+0x45],0x0
100062ce:	jne    0x100062e5
100062d0:	mov    edx,DWORD PTR [eax+0x8]
100062d3:	cmp    BYTE PTR [edx+0x44],0x1
100062d7:	jne    0x100062f8
100062d9:	mov    edx,DWORD PTR [eax]
100062db:	cmp    BYTE PTR [edx+0x44],0x1
100062df:	jne    0x100062f8
100062e1:	mov    BYTE PTR [eax+0x44],0x0
100062e5:	mov    eax,DWORD PTR [ecx+0x4]
100062e8:	mov    ebx,esi
100062ea:	cmp    ebx,DWORD PTR [eax+0x4]
100062ed:	mov    esi,DWORD PTR [esi+0x4]
100062f0:	jne    0x10006232
100062f6:	jmp    0x1000632d
100062f8:	mov    edx,DWORD PTR [eax]
100062fa:	cmp    BYTE PTR [edx+0x44],0x1
100062fe:	jne    0x10006317
10006300:	mov    edx,DWORD PTR [eax+0x8]
10006303:	mov    BYTE PTR [edx+0x44],0x1
10006307:	push   eax
10006308:	mov    BYTE PTR [eax+0x44],0x0
1000630c:	call   0x10005c40
10006311:	mov    eax,DWORD PTR [esi]
10006313:	mov    ecx,DWORD PTR [esp+0x14]
10006317:	mov    dl,BYTE PTR [esi+0x44]
1000631a:	mov    BYTE PTR [eax+0x44],dl
1000631d:	mov    BYTE PTR [esi+0x44],0x1
10006321:	mov    eax,DWORD PTR [eax]
10006323:	push   esi
10006324:	mov    BYTE PTR [eax+0x44],0x1
10006328:	call   0x10005c90
1000632d:	mov    BYTE PTR [ebx+0x44],0x1
10006331:	cmp    DWORD PTR [edi+0x40],0x10
10006335:	jb     0x10006343
10006337:	mov    ecx,DWORD PTR [edi+0x2c]
1000633a:	push   ecx
1000633b:	call   0x10015ad6
10006340:	add    esp,0x4
10006343:	xor    esi,esi
10006345:	mov    ebx,0xf
1000634a:	mov    DWORD PTR [edi+0x40],ebx
1000634d:	mov    DWORD PTR [edi+0x3c],esi
10006350:	mov    BYTE PTR [edi+0x2c],0x0
10006354:	cmp    DWORD PTR [edi+0x24],0x10
10006358:	jb     0x10006366
1000635a:	mov    edx,DWORD PTR [edi+0x10]
1000635d:	push   edx
1000635e:	call   0x10015ad6
10006363:	add    esp,0x4
10006366:	mov    DWORD PTR [edi+0x24],ebx
10006369:	mov    DWORD PTR [edi+0x20],esi
1000636c:	push   edi
1000636d:	mov    BYTE PTR [edi+0x10],0x0
10006371:	call   0x10015ad6
10006376:	mov    ecx,DWORD PTR [esp+0x18]
1000637a:	mov    eax,DWORD PTR [ecx+0x8]
1000637d:	add    esp,0x4
10006380:	cmp    eax,esi
10006382:	jbe    0x1000638a
10006384:	add    eax,0xffffffff
10006387:	mov    DWORD PTR [ecx+0x8],eax
1000638a:	mov    eax,DWORD PTR [ebp+0x8]
1000638d:	mov    ecx,DWORD PTR [ebp+0xc]
10006390:	mov    edx,DWORD PTR [ebp+0x10]
10006393:	mov    DWORD PTR [eax],ecx
10006395:	mov    DWORD PTR [eax+0x4],edx
10006398:	mov    ecx,DWORD PTR [esp+0x60]
1000639c:	mov    DWORD PTR fs:0x0,ecx
100063a3:	pop    ecx
100063a4:	pop    edi
100063a5:	pop    esi
100063a6:	pop    ebx
100063a7:	mov    esp,ebp
100063a9:	pop    ebp
100063aa:	ret    0xc
100063ad:	int3   
100063ae:	int3   
100063af:	int3   
100063b0:	push   esi
100063b1:	mov    esi,ecx
100063b3:	cmp    DWORD PTR [esi],0x0
100063b6:	jne    0x100063bd
100063b8:	call   0x10016143
100063bd:	mov    eax,DWORD PTR [esi+0x4]
100063c0:	cmp    BYTE PTR [eax+0x45],0x0
100063c4:	je     0x100063d8
100063c6:	mov    eax,DWORD PTR [eax+0x8]
100063c9:	mov    DWORD PTR [esi+0x4],eax
100063cc:	cmp    BYTE PTR [eax+0x45],0x0
100063d0:	je     0x10006437
100063d2:	pop    esi
100063d3:	jmp    0x10016143
100063d8:	mov    ecx,DWORD PTR [eax]
100063da:	cmp    BYTE PTR [ecx+0x45],0x0
100063de:	jne    0x10006400
100063e0:	mov    eax,DWORD PTR [ecx+0x8]
100063e3:	cmp    BYTE PTR [eax+0x45],0x0
100063e7:	jne    0x100063fb
100063e9:	lea    esp,[esp+0x0]
100063f0:	mov    ecx,eax
100063f2:	mov    eax,DWORD PTR [ecx+0x8]
100063f5:	cmp    BYTE PTR [eax+0x45],0x0
100063f9:	je     0x100063f0
100063fb:	mov    DWORD PTR [esi+0x4],ecx
100063fe:	pop    esi
100063ff:	ret    
10006400:	mov    eax,DWORD PTR [eax+0x4]
10006403:	cmp    BYTE PTR [eax+0x45],0x0
10006407:	jne    0x10006425
10006409:	lea    esp,[esp+0x0]
10006410:	mov    ecx,DWORD PTR [esi+0x4]
10006413:	cmp    ecx,DWORD PTR [eax]
10006415:	jne    0x10006425
10006417:	mov    DWORD PTR [esi+0x4],eax
1000641a:	mov    edx,eax
1000641c:	mov    eax,DWORD PTR [edx+0x4]
1000641f:	cmp    BYTE PTR [eax+0x45],0x0
10006423:	je     0x10006410
10006425:	mov    ecx,DWORD PTR [esi+0x4]
10006428:	cmp    BYTE PTR [ecx+0x45],0x0
1000642c:	je     0x10006434
1000642e:	pop    esi
1000642f:	jmp    0x10016143
10006434:	mov    DWORD PTR [esi+0x4],eax
10006437:	pop    esi
10006438:	ret    
10006439:	int3   
1000643a:	int3   
1000643b:	int3   
1000643c:	int3   
1000643d:	int3   
1000643e:	int3   
1000643f:	int3   
10006440:	push   esi
10006441:	mov    esi,ecx
10006443:	cmp    DWORD PTR [esi],0x0
10006446:	jne    0x1000644d
10006448:	call   0x10016143
1000644d:	mov    eax,DWORD PTR [esi+0x4]
10006450:	cmp    BYTE PTR [eax+0x45],0x0
10006454:	je     0x1000645c
10006456:	pop    esi
10006457:	jmp    0x10016143
1000645c:	mov    ecx,DWORD PTR [eax+0x8]
1000645f:	cmp    BYTE PTR [ecx+0x45],0x0
10006463:	jne    0x1000647f
10006465:	mov    eax,DWORD PTR [ecx]
10006467:	cmp    BYTE PTR [eax+0x45],0x0
1000646b:	jne    0x1000647a
1000646d:	lea    ecx,[ecx+0x0]
10006470:	mov    ecx,eax
10006472:	mov    eax,DWORD PTR [ecx]
10006474:	cmp    BYTE PTR [eax+0x45],0x0
10006478:	je     0x10006470
1000647a:	mov    DWORD PTR [esi+0x4],ecx
1000647d:	pop    esi
1000647e:	ret    
1000647f:	mov    eax,DWORD PTR [eax+0x4]
10006482:	cmp    BYTE PTR [eax+0x45],0x0
10006486:	jne    0x1000649e
10006488:	mov    ecx,DWORD PTR [esi+0x4]
1000648b:	cmp    ecx,DWORD PTR [eax+0x8]
1000648e:	jne    0x1000649e
10006490:	mov    DWORD PTR [esi+0x4],eax
10006493:	mov    edx,eax
10006495:	mov    eax,DWORD PTR [edx+0x4]
10006498:	cmp    BYTE PTR [eax+0x45],0x0
1000649c:	je     0x10006488
1000649e:	mov    DWORD PTR [esi+0x4],eax
100064a1:	pop    esi
100064a2:	ret    
100064a3:	int3   
100064a4:	int3   
100064a5:	int3   
100064a6:	int3   
100064a7:	int3   
100064a8:	int3   
100064a9:	int3   
100064aa:	int3   
100064ab:	int3   
100064ac:	int3   
100064ad:	int3   
100064ae:	int3   
100064af:	int3   
100064b0:	mov    ecx,DWORD PTR [esp+0x4]
100064b4:	sub    esp,0xc
100064b7:	test   ecx,ecx
100064b9:	ja     0x100064cf
100064bb:	xor    ecx,ecx
100064bd:	lea    edx,[ecx+ecx*1]
100064c0:	push   edx
100064c1:	call   0x10016414
100064c6:	add    esp,0x4
100064c9:	add    esp,0xc
100064cc:	ret    0x4
100064cf:	or     eax,0xffffffff
100064d2:	xor    edx,edx
100064d4:	div    ecx
100064d6:	cmp    eax,0x2
100064d9:	jae    0x100064bd
100064db:	lea    eax,[esp+0x10]
100064df:	push   eax
100064e0:	lea    ecx,[esp+0x4]
100064e4:	mov    DWORD PTR [esp+0x14],0x0
100064ec:	call   0x1001626e
100064f1:	push   0x10058b44
100064f6:	lea    ecx,[esp+0x4]
100064fa:	push   ecx
100064fb:	mov    DWORD PTR [esp+0x8],0x1002c4ec
10006503:	call   0x100161ce
10006508:	int3   
10006509:	int3   
1000650a:	int3   
1000650b:	int3   
1000650c:	int3   
1000650d:	int3   
1000650e:	int3   
1000650f:	int3   
10006510:	push   ebp
10006511:	mov    ebp,esp
10006513:	and    esp,0xfffffff8
10006516:	push   0xffffffff
10006518:	push   0x1002ad78
1000651d:	mov    eax,fs:0x0
10006523:	push   eax
10006524:	sub    esp,0x50
10006527:	push   ebx
10006528:	push   esi
10006529:	push   edi
1000652a:	mov    eax,ds:0x10064694
1000652f:	xor    eax,esp
10006531:	push   eax
10006532:	lea    eax,[esp+0x60]
10006536:	mov    fs:0x0,eax
1000653c:	mov    DWORD PTR [esp+0x14],ecx
10006540:	mov    edi,DWORD PTR [ebp+0x10]
10006543:	cmp    BYTE PTR [edi+0x45],0x0
10006547:	je     0x10006595
10006549:	push   0x1b
1000654b:	xor    esi,esi
1000654d:	push   0x10055934
10006552:	lea    ecx,[esp+0x20]
10006556:	mov    DWORD PTR [esp+0x38],0xf
1000655e:	mov    DWORD PTR [esp+0x34],esi
10006562:	mov    BYTE PTR [esp+0x24],0x0
10006567:	call   0x10003900
1000656c:	lea    eax,[esp+0x18]
10006570:	push   eax
10006571:	lea    ecx,[esp+0x38]
10006575:	mov    DWORD PTR [esp+0x6c],esi
10006579:	call   0x10001350
1000657e:	push   0x10058ad0
10006583:	lea    ecx,[esp+0x38]
10006587:	push   ecx
10006588:	mov    DWORD PTR [esp+0x3c],0x1002c4f8
10006590:	call   0x100161ce
10006595:	lea    ecx,[ebp+0xc]
10006598:	call   0x10006440
1000659d:	mov    ecx,DWORD PTR [edi]
1000659f:	cmp    BYTE PTR [ecx+0x45],0x0
100065a3:	je     0x100065aa
100065a5:	mov    ebx,DWORD PTR [edi+0x8]
100065a8:	jmp    0x100065c1
100065aa:	mov    edx,DWORD PTR [edi+0x8]
100065ad:	cmp    BYTE PTR [edx+0x45],0x0
100065b1:	je     0x100065b7
100065b3:	mov    ebx,ecx
100065b5:	jmp    0x100065c1
100065b7:	mov    eax,DWORD PTR [ebp+0x10]
100065ba:	cmp    eax,edi
100065bc:	mov    ebx,DWORD PTR [eax+0x8]
100065bf:	jne    0x1000663d
100065c1:	cmp    BYTE PTR [ebx+0x45],0x0
100065c5:	mov    esi,DWORD PTR [edi+0x4]
100065c8:	jne    0x100065cd
100065ca:	mov    DWORD PTR [ebx+0x4],esi
100065cd:	mov    ecx,DWORD PTR [esp+0x14]
100065d1:	mov    eax,DWORD PTR [ecx+0x4]
100065d4:	cmp    DWORD PTR [eax+0x4],edi
100065d7:	jne    0x100065de
100065d9:	mov    DWORD PTR [eax+0x4],ebx
100065dc:	jmp    0x100065e9
100065de:	cmp    DWORD PTR [esi],edi
100065e0:	jne    0x100065e6
100065e2:	mov    DWORD PTR [esi],ebx
100065e4:	jmp    0x100065e9
100065e6:	mov    DWORD PTR [esi+0x8],ebx
100065e9:	mov    eax,DWORD PTR [ecx+0x4]
100065ec:	cmp    DWORD PTR [eax],edi
100065ee:	jne    0x1000660c
100065f0:	cmp    BYTE PTR [ebx+0x45],0x0
100065f4:	je     0x100065fa
100065f6:	mov    eax,esi
100065f8:	jmp    0x10006607
100065fa:	push   ebx
100065fb:	call   0x100069f0
10006600:	mov    ecx,DWORD PTR [esp+0x18]
10006604:	add    esp,0x4
10006607:	mov    edx,DWORD PTR [ecx+0x4]
1000660a:	mov    DWORD PTR [edx],eax
1000660c:	mov    eax,DWORD PTR [ecx+0x4]
1000660f:	cmp    DWORD PTR [eax+0x8],edi
10006612:	jne    0x1000669c
10006618:	cmp    BYTE PTR [ebx+0x45],0x0
1000661c:	je     0x10006628
1000661e:	mov    edx,DWORD PTR [ecx+0x4]
10006621:	mov    eax,esi
10006623:	mov    DWORD PTR [edx+0x8],eax
10006626:	jmp    0x1000669c
10006628:	push   ebx
10006629:	call   0x10006a90
1000662e:	mov    ecx,DWORD PTR [esp+0x18]
10006632:	mov    edx,DWORD PTR [ecx+0x4]
10006635:	add    esp,0x4
10006638:	mov    DWORD PTR [edx+0x8],eax
1000663b:	jmp    0x1000669c
1000663d:	mov    DWORD PTR [ecx+0x4],eax
10006640:	mov    ecx,DWORD PTR [edi]
10006642:	mov    DWORD PTR [eax],ecx
10006644:	cmp    eax,DWORD PTR [edi+0x8]
10006647:	jne    0x1000664d
10006649:	mov    esi,eax
1000664b:	jmp    0x10006667
1000664d:	cmp    BYTE PTR [ebx+0x45],0x0
10006651:	mov    esi,DWORD PTR [eax+0x4]
10006654:	jne    0x10006659
10006656:	mov    DWORD PTR [ebx+0x4],esi
10006659:	mov    DWORD PTR [esi],ebx
1000665b:	mov    edx,DWORD PTR [edi+0x8]
1000665e:	mov    DWORD PTR [eax+0x8],edx
10006661:	mov    ecx,DWORD PTR [edi+0x8]
10006664:	mov    DWORD PTR [ecx+0x4],eax
10006667:	mov    edx,DWORD PTR [esp+0x14]
1000666b:	mov    ecx,DWORD PTR [edx+0x4]
1000666e:	cmp    DWORD PTR [ecx+0x4],edi
10006671:	jne    0x10006678
10006673:	mov    DWORD PTR [ecx+0x4],eax
10006676:	jmp    0x10006686
10006678:	mov    ecx,DWORD PTR [edi+0x4]
1000667b:	cmp    DWORD PTR [ecx],edi
1000667d:	jne    0x10006683
1000667f:	mov    DWORD PTR [ecx],eax
10006681:	jmp    0x10006686
10006683:	mov    DWORD PTR [ecx+0x8],eax
10006686:	mov    ecx,DWORD PTR [edi+0x4]
10006689:	mov    DWORD PTR [eax+0x4],ecx
1000668c:	mov    cl,BYTE PTR [eax+0x44]
1000668f:	mov    dl,BYTE PTR [edi+0x44]
10006692:	mov    BYTE PTR [eax+0x44],dl
10006695:	mov    BYTE PTR [edi+0x44],cl
10006698:	mov    ecx,DWORD PTR [esp+0x14]
1000669c:	cmp    BYTE PTR [edi+0x44],0x1
100066a0:	jne    0x100067b1
100066a6:	mov    eax,DWORD PTR [ecx+0x4]
100066a9:	cmp    ebx,DWORD PTR [eax+0x4]
100066ac:	je     0x100067ad
100066b2:	cmp    BYTE PTR [ebx+0x44],0x1
100066b6:	jne    0x100067ad
100066bc:	mov    eax,DWORD PTR [esi]
100066be:	cmp    ebx,eax
100066c0:	jne    0x10006730
100066c2:	mov    eax,DWORD PTR [esi+0x8]
100066c5:	cmp    BYTE PTR [eax+0x44],0x0
100066c9:	jne    0x100066e0
100066cb:	mov    BYTE PTR [eax+0x44],0x1
100066cf:	push   esi
100066d0:	mov    BYTE PTR [esi+0x44],0x0
100066d4:	call   0x10005c40
100066d9:	mov    eax,DWORD PTR [esi+0x8]
100066dc:	mov    ecx,DWORD PTR [esp+0x14]
100066e0:	cmp    BYTE PTR [eax+0x45],0x0
100066e4:	jne    0x10006765
100066e6:	mov    edx,DWORD PTR [eax]
100066e8:	cmp    BYTE PTR [edx+0x44],0x1
100066ec:	jne    0x100066f7
100066ee:	mov    edx,DWORD PTR [eax+0x8]
100066f1:	cmp    BYTE PTR [edx+0x44],0x1
100066f5:	je     0x10006761
100066f7:	mov    edx,DWORD PTR [eax+0x8]
100066fa:	cmp    BYTE PTR [edx+0x44],0x1
100066fe:	jne    0x10006717
10006700:	mov    edx,DWORD PTR [eax]
10006702:	mov    BYTE PTR [edx+0x44],0x1
10006706:	push   eax
10006707:	mov    BYTE PTR [eax+0x44],0x0
1000670b:	call   0x10005c90
10006710:	mov    eax,DWORD PTR [esi+0x8]
10006713:	mov    ecx,DWORD PTR [esp+0x14]
10006717:	mov    dl,BYTE PTR [esi+0x44]
1000671a:	mov    BYTE PTR [eax+0x44],dl
1000671d:	mov    BYTE PTR [esi+0x44],0x1
10006721:	mov    eax,DWORD PTR [eax+0x8]
10006724:	push   esi
10006725:	mov    BYTE PTR [eax+0x44],0x1
10006729:	call   0x10005c40
1000672e:	jmp    0x100067ad
10006730:	cmp    BYTE PTR [eax+0x44],0x0
10006734:	jne    0x1000674a
10006736:	mov    BYTE PTR [eax+0x44],0x1
1000673a:	push   esi
1000673b:	mov    BYTE PTR [esi+0x44],0x0
1000673f:	call   0x10005c90
10006744:	mov    eax,DWORD PTR [esi]
10006746:	mov    ecx,DWORD PTR [esp+0x14]
1000674a:	cmp    BYTE PTR [eax+0x45],0x0
1000674e:	jne    0x10006765
10006750:	mov    edx,DWORD PTR [eax+0x8]
10006753:	cmp    BYTE PTR [edx+0x44],0x1
10006757:	jne    0x10006778
10006759:	mov    edx,DWORD PTR [eax]
1000675b:	cmp    BYTE PTR [edx+0x44],0x1
1000675f:	jne    0x10006778
10006761:	mov    BYTE PTR [eax+0x44],0x0
10006765:	mov    eax,DWORD PTR [ecx+0x4]
10006768:	mov    ebx,esi
1000676a:	cmp    ebx,DWORD PTR [eax+0x4]
1000676d:	mov    esi,DWORD PTR [esi+0x4]
10006770:	jne    0x100066b2
10006776:	jmp    0x100067ad
10006778:	mov    edx,DWORD PTR [eax]
1000677a:	cmp    BYTE PTR [edx+0x44],0x1
1000677e:	jne    0x10006797
10006780:	mov    edx,DWORD PTR [eax+0x8]
10006783:	mov    BYTE PTR [edx+0x44],0x1
10006787:	push   eax
10006788:	mov    BYTE PTR [eax+0x44],0x0
1000678c:	call   0x10005c40
10006791:	mov    eax,DWORD PTR [esi]
10006793:	mov    ecx,DWORD PTR [esp+0x14]
10006797:	mov    dl,BYTE PTR [esi+0x44]
1000679a:	mov    BYTE PTR [eax+0x44],dl
1000679d:	mov    BYTE PTR [esi+0x44],0x1
100067a1:	mov    eax,DWORD PTR [eax]
100067a3:	push   esi
100067a4:	mov    BYTE PTR [eax+0x44],0x1
100067a8:	call   0x10005c90
100067ad:	mov    BYTE PTR [ebx+0x44],0x1
100067b1:	cmp    DWORD PTR [edi+0x40],0x8
100067b5:	jb     0x100067c3
100067b7:	mov    ecx,DWORD PTR [edi+0x2c]
100067ba:	push   ecx
100067bb:	call   0x10015ad6
100067c0:	add    esp,0x4
100067c3:	xor    esi,esi
100067c5:	mov    ebx,0x7
100067ca:	mov    DWORD PTR [edi+0x40],ebx
100067cd:	mov    DWORD PTR [edi+0x3c],esi
100067d0:	mov    WORD PTR [edi+0x2c],si
100067d4:	cmp    DWORD PTR [edi+0x24],0x8
100067d8:	jb     0x100067e6
100067da:	mov    edx,DWORD PTR [edi+0x10]
100067dd:	push   edx
100067de:	call   0x10015ad6
100067e3:	add    esp,0x4
100067e6:	mov    DWORD PTR [edi+0x24],ebx
100067e9:	mov    DWORD PTR [edi+0x20],esi
100067ec:	push   edi
100067ed:	mov    WORD PTR [edi+0x10],si
100067f1:	call   0x10015ad6
100067f6:	mov    ecx,DWORD PTR [esp+0x18]
100067fa:	mov    eax,DWORD PTR [ecx+0x8]
100067fd:	add    esp,0x4
10006800:	cmp    eax,esi
10006802:	jbe    0x1000680a
10006804:	add    eax,0xffffffff
10006807:	mov    DWORD PTR [ecx+0x8],eax
1000680a:	mov    eax,DWORD PTR [ebp+0x8]
1000680d:	mov    ecx,DWORD PTR [ebp+0xc]
10006810:	mov    edx,DWORD PTR [ebp+0x10]
10006813:	mov    DWORD PTR [eax],ecx
10006815:	mov    DWORD PTR [eax+0x4],edx
10006818:	mov    ecx,DWORD PTR [esp+0x60]
1000681c:	mov    DWORD PTR fs:0x0,ecx
10006823:	pop    ecx
10006824:	pop    edi
10006825:	pop    esi
10006826:	pop    ebx
10006827:	mov    esp,ebp
10006829:	pop    ebp
1000682a:	ret    0xc
1000682d:	int3   
1000682e:	int3   
1000682f:	int3   
10006830:	push   0x48
10006832:	call   0x10016414
10006837:	add    esp,0x4
1000683a:	test   eax,eax
1000683c:	je     0x10006844
1000683e:	mov    DWORD PTR [eax],0x0
10006844:	lea    ecx,[eax+0x4]
10006847:	test   ecx,ecx
10006849:	je     0x10006851
1000684b:	mov    DWORD PTR [ecx],0x0
10006851:	lea    ecx,[eax+0x8]
10006854:	test   ecx,ecx
10006856:	je     0x1000685e
10006858:	mov    DWORD PTR [ecx],0x0
1000685e:	mov    BYTE PTR [eax+0x44],0x1
10006862:	mov    BYTE PTR [eax+0x45],0x0
10006866:	ret    
10006867:	int3   
10006868:	int3   
10006869:	int3   
1000686a:	int3   
1000686b:	int3   
1000686c:	int3   
1000686d:	int3   
1000686e:	int3   
1000686f:	int3   
10006870:	push   0xffffffff
10006872:	push   0x1002a988
10006877:	mov    eax,fs:0x0
1000687d:	push   eax
1000687e:	push   ecx
1000687f:	push   ebx
10006880:	push   esi
10006881:	push   edi
10006882:	mov    eax,ds:0x10064694
10006887:	xor    eax,esp
10006889:	push   eax
1000688a:	lea    eax,[esp+0x14]
1000688e:	mov    fs:0x0,eax
10006894:	mov    esi,ecx
10006896:	mov    DWORD PTR [esp+0x10],esi
1000689a:	mov    edi,DWORD PTR [esp+0x24]
1000689e:	xor    ebx,ebx
100068a0:	push   0xffffffff
100068a2:	push   ebx
100068a3:	mov    DWORD PTR [esi+0x18],0xf
100068aa:	mov    DWORD PTR [esi+0x14],ebx
100068ad:	push   edi
100068ae:	mov    BYTE PTR [esi+0x4],bl
100068b1:	call   0x10003820
100068b6:	push   0xffffffff
100068b8:	lea    ecx,[esi+0x1c]
100068bb:	mov    DWORD PTR [esp+0x20],ebx
100068bf:	lea    eax,[edi+0x1c]
100068c2:	push   ebx
100068c3:	mov    DWORD PTR [ecx+0x18],0xf
100068ca:	mov    DWORD PTR [ecx+0x14],ebx
100068cd:	push   eax
100068ce:	mov    BYTE PTR [ecx+0x4],bl
100068d1:	call   0x10003820
100068d6:	mov    eax,esi
100068d8:	mov    ecx,DWORD PTR [esp+0x14]
100068dc:	mov    DWORD PTR fs:0x0,ecx
100068e3:	pop    ecx
100068e4:	pop    edi
100068e5:	pop    esi
100068e6:	pop    ebx
100068e7:	add    esp,0x10
100068ea:	ret    0x4
100068ed:	int3   
100068ee:	int3   
100068ef:	int3   
100068f0:	push   0xffffffff
100068f2:	push   0x1002a958
100068f7:	mov    eax,fs:0x0
100068fd:	push   eax
100068fe:	push   ecx
100068ff:	push   ebx
10006900:	push   esi
10006901:	push   edi
10006902:	mov    eax,ds:0x10064694
10006907:	xor    eax,esp
10006909:	push   eax
1000690a:	lea    eax,[esp+0x14]
1000690e:	mov    fs:0x0,eax
10006914:	mov    esi,ecx
10006916:	mov    DWORD PTR [esp+0x10],esi
1000691a:	mov    ebx,DWORD PTR [esp+0x24]
1000691e:	xor    edi,edi
10006920:	push   0xffffffff
10006922:	push   edi
10006923:	mov    DWORD PTR [esi+0x18],0x7
1000692a:	mov    DWORD PTR [esi+0x14],edi
1000692d:	push   ebx
1000692e:	mov    WORD PTR [esi+0x4],di
10006932:	call   0x10004cb0
10006937:	push   0xffffffff
10006939:	lea    ecx,[esi+0x1c]
1000693c:	mov    DWORD PTR [esp+0x20],edi
10006940:	lea    eax,[ebx+0x1c]
10006943:	push   edi
10006944:	mov    DWORD PTR [ecx+0x18],0x7
1000694b:	mov    DWORD PTR [ecx+0x14],edi
1000694e:	push   eax
1000694f:	mov    WORD PTR [ecx+0x4],di
10006953:	call   0x10004cb0
10006958:	mov    eax,esi
1000695a:	mov    ecx,DWORD PTR [esp+0x14]
1000695e:	mov    DWORD PTR fs:0x0,ecx
10006965:	pop    ecx
10006966:	pop    edi
10006967:	pop    esi
10006968:	pop    ebx
10006969:	add    esp,0x10
1000696c:	ret    0x4
1000696f:	int3   
10006970:	push   ecx
10006971:	push   ebx
10006972:	push   esi
10006973:	mov    esi,DWORD PTR [esp+0x10]
10006977:	xor    ebx,ebx
10006979:	cmp    BYTE PTR [esi+0x45],bl
1000697c:	push   edi
1000697d:	mov    DWORD PTR [esp+0xc],ecx
10006981:	mov    edi,esi
10006983:	jne    0x100069e6
10006985:	push   ebp
10006986:	lea    ebp,[ebx+0xf]
10006989:	lea    esp,[esp+0x0]
10006990:	mov    eax,DWORD PTR [edi+0x8]
10006993:	mov    ecx,DWORD PTR [esp+0x10]
10006997:	push   eax
10006998:	call   0x10006970
1000699d:	cmp    DWORD PTR [esi+0x40],0x10
100069a1:	mov    edi,DWORD PTR [edi]
100069a3:	jb     0x100069b1
100069a5:	mov    ecx,DWORD PTR [esi+0x2c]
100069a8:	push   ecx
100069a9:	call   0x10015ad6
100069ae:	add    esp,0x4
100069b1:	mov    DWORD PTR [esi+0x40],ebp
100069b4:	mov    DWORD PTR [esi+0x3c],ebx
100069b7:	mov    BYTE PTR [esi+0x2c],bl
100069ba:	cmp    DWORD PTR [esi+0x24],0x10
100069be:	jb     0x100069cc
100069c0:	mov    edx,DWORD PTR [esi+0x10]
100069c3:	push   edx
100069c4:	call   0x10015ad6
100069c9:	add    esp,0x4
100069cc:	mov    DWORD PTR [esi+0x24],ebp
100069cf:	mov    DWORD PTR [esi+0x20],ebx
100069d2:	push   esi
100069d3:	mov    BYTE PTR [esi+0x10],bl
100069d6:	call   0x10015ad6
100069db:	add    esp,0x4
100069de:	cmp    BYTE PTR [edi+0x45],bl
100069e1:	mov    esi,edi
100069e3:	je     0x10006990
100069e5:	pop    ebp
100069e6:	pop    edi
100069e7:	pop    esi
100069e8:	pop    ebx
100069e9:	pop    ecx
100069ea:	ret    0x4
100069ed:	int3   
100069ee:	int3   
100069ef:	int3   
100069f0:	mov    eax,DWORD PTR [esp+0x4]
100069f4:	mov    ecx,DWORD PTR [eax]
100069f6:	cmp    BYTE PTR [ecx+0x45],0x0
100069fa:	jne    0x10006a0a
100069fc:	lea    esp,[esp+0x0]
10006a00:	mov    eax,ecx
10006a02:	mov    ecx,DWORD PTR [eax]
10006a04:	cmp    BYTE PTR [ecx+0x45],0x0
10006a08:	je     0x10006a00
10006a0a:	ret    
10006a0b:	int3   
10006a0c:	int3   
10006a0d:	int3   
10006a0e:	int3   
10006a0f:	int3   
10006a10:	push   ecx
10006a11:	push   ebx
10006a12:	push   esi
10006a13:	mov    esi,DWORD PTR [esp+0x10]
10006a17:	xor    ebx,ebx
10006a19:	cmp    BYTE PTR [esi+0x45],bl
10006a1c:	push   edi
10006a1d:	mov    DWORD PTR [esp+0xc],ecx
10006a21:	mov    edi,esi
10006a23:	jne    0x10006a88
10006a25:	push   ebp
10006a26:	lea    ebp,[ebx+0x7]
10006a29:	lea    esp,[esp+0x0]
10006a30:	mov    eax,DWORD PTR [edi+0x8]
10006a33:	mov    ecx,DWORD PTR [esp+0x10]
10006a37:	push   eax
10006a38:	call   0x10006a10
10006a3d:	cmp    DWORD PTR [esi+0x40],0x8
10006a41:	mov    edi,DWORD PTR [edi]
10006a43:	jb     0x10006a51
10006a45:	mov    ecx,DWORD PTR [esi+0x2c]
10006a48:	push   ecx
10006a49:	call   0x10015ad6
10006a4e:	add    esp,0x4
10006a51:	mov    DWORD PTR [esi+0x40],ebp
10006a54:	mov    DWORD PTR [esi+0x3c],ebx
10006a57:	mov    WORD PTR [esi+0x2c],bx
10006a5b:	cmp    DWORD PTR [esi+0x24],0x8
10006a5f:	jb     0x10006a6d
10006a61:	mov    edx,DWORD PTR [esi+0x10]
10006a64:	push   edx
10006a65:	call   0x10015ad6
10006a6a:	add    esp,0x4
10006a6d:	mov    DWORD PTR [esi+0x24],ebp
10006a70:	mov    DWORD PTR [esi+0x20],ebx
10006a73:	push   esi
10006a74:	mov    WORD PTR [esi+0x10],bx
10006a78:	call   0x10015ad6
10006a7d:	add    esp,0x4
10006a80:	cmp    BYTE PTR [edi+0x45],bl
10006a83:	mov    esi,edi
10006a85:	je     0x10006a30
10006a87:	pop    ebp
10006a88:	pop    edi
10006a89:	pop    esi
10006a8a:	pop    ebx
10006a8b:	pop    ecx
10006a8c:	ret    0x4
10006a8f:	int3   
10006a90:	mov    eax,DWORD PTR [esp+0x4]
10006a94:	mov    ecx,DWORD PTR [eax+0x8]
10006a97:	cmp    BYTE PTR [ecx+0x45],0x0
10006a9b:	jne    0x10006aab
10006a9d:	lea    ecx,[ecx+0x0]
10006aa0:	mov    eax,ecx
10006aa2:	mov    ecx,DWORD PTR [eax+0x8]
10006aa5:	cmp    BYTE PTR [ecx+0x45],0x0
10006aa9:	je     0x10006aa0
10006aab:	ret    
10006aac:	int3   
10006aad:	int3   
10006aae:	int3   
10006aaf:	int3   
10006ab0:	mov    eax,DWORD PTR [esp+0x8]
10006ab4:	mov    ecx,DWORD PTR [esp+0xc]
10006ab8:	or     edx,0xffffffff
10006abb:	sub    edx,eax
10006abd:	cmp    edx,ecx
10006abf:	jae    0x10006ac7
10006ac1:	mov    eax,0x80070057
10006ac6:	ret    
10006ac7:	add    eax,ecx
10006ac9:	mov    ecx,DWORD PTR [esp+0x4]
10006acd:	mov    DWORD PTR [ecx],eax
10006acf:	xor    eax,eax
10006ad1:	ret    
10006ad2:	int3   
10006ad3:	int3   
10006ad4:	int3   
10006ad5:	int3   
10006ad6:	int3   
10006ad7:	int3   
10006ad8:	int3   
10006ad9:	int3   
10006ada:	int3   
10006adb:	int3   
10006adc:	int3   
10006add:	int3   
10006ade:	int3   
10006adf:	int3   
10006ae0:	push   0xffffffff
10006ae2:	push   0x1002abb8
10006ae7:	mov    eax,fs:0x0
10006aed:	push   eax
10006aee:	sub    esp,0x20
10006af1:	push   ebx
10006af2:	push   ebp
10006af3:	mov    eax,ds:0x10064694
10006af8:	xor    eax,esp
10006afa:	push   eax
10006afb:	lea    eax,[esp+0x2c]
10006aff:	mov    fs:0x0,eax
10006b05:	mov    eax,DWORD PTR [esp+0x3c]
10006b09:	xor    ebx,ebx
10006b0b:	push   0xffffffff
10006b0d:	push   ebx
10006b0e:	push   eax
10006b0f:	lea    ecx,[esp+0x1c]
10006b13:	mov    DWORD PTR [esp+0x18],ebx
10006b17:	mov    DWORD PTR [esp+0x34],0xf
10006b1f:	mov    DWORD PTR [esp+0x30],ebx
10006b23:	mov    BYTE PTR [esp+0x20],bl
10006b27:	call   0x10003820
10006b2c:	mov    eax,edi
10006b2e:	mov    DWORD PTR [esp+0x34],ebx
10006b32:	lea    ebp,[eax+0x1]
10006b35:	mov    cl,BYTE PTR [eax]
10006b37:	add    eax,0x1
10006b3a:	cmp    cl,bl
10006b3c:	jne    0x10006b35
10006b3e:	sub    eax,ebp
10006b40:	push   eax
10006b41:	push   edi
10006b42:	lea    eax,[esp+0x18]
10006b46:	call   0x10002c00
10006b4b:	push   0xffffffff
10006b4d:	push   ebx
10006b4e:	mov    DWORD PTR [esi+0x18],0xf
10006b55:	mov    DWORD PTR [esi+0x14],ebx
10006b58:	push   eax
10006b59:	mov    ecx,esi
10006b5b:	mov    BYTE PTR [esi+0x4],bl
10006b5e:	call   0x10003820
10006b63:	cmp    DWORD PTR [esp+0x28],0x10
10006b68:	jb     0x10006b77
10006b6a:	mov    ecx,DWORD PTR [esp+0x14]
10006b6e:	push   ecx
10006b6f:	call   0x10015ad6
10006b74:	add    esp,0x4
10006b77:	mov    eax,esi
10006b79:	mov    ecx,DWORD PTR [esp+0x2c]
10006b7d:	mov    DWORD PTR fs:0x0,ecx
10006b84:	pop    ecx
10006b85:	pop    ebp
10006b86:	pop    ebx
10006b87:	add    esp,0x2c
10006b8a:	ret    
10006b8b:	int3   
10006b8c:	int3   
10006b8d:	int3   
10006b8e:	int3   
10006b8f:	int3   
10006b90:	mov    eax,DWORD PTR [esp+0x4]
10006b94:	mov    cl,BYTE PTR [eax]
10006b96:	push   esi
10006b97:	mov    esi,DWORD PTR [esp+0xc]
10006b9b:	mov    dl,BYTE PTR [esi]
10006b9d:	mov    BYTE PTR [eax],dl
10006b9f:	mov    BYTE PTR [esi],cl
10006ba1:	pop    esi
10006ba2:	ret    
10006ba3:	int3   
10006ba4:	int3   
10006ba5:	int3   
10006ba6:	int3   
10006ba7:	int3   
10006ba8:	int3   
10006ba9:	int3   
10006baa:	int3   
10006bab:	int3   
10006bac:	int3   
10006bad:	int3   
10006bae:	int3   
10006baf:	int3   
10006bb0:	mov    eax,DWORD PTR [esp+0x4]
10006bb4:	push   esi
10006bb5:	push   eax
10006bb6:	mov    esi,ecx
10006bb8:	call   0x100162d4
10006bbd:	mov    DWORD PTR [esi],0x1002c4ec
10006bc3:	mov    eax,esi
10006bc5:	pop    esi
10006bc6:	ret    0x4
10006bc9:	int3   
10006bca:	int3   
10006bcb:	int3   
10006bcc:	int3   
10006bcd:	int3   
10006bce:	int3   
10006bcf:	int3   
10006bd0:	push   ebx
10006bd1:	push   ebp
10006bd2:	push   esi
10006bd3:	push   edi
10006bd4:	mov    edi,DWORD PTR [esp+0x14]
10006bd8:	mov    esi,ecx
10006bda:	cmp    DWORD PTR [esi+0x14],edi
10006bdd:	jae    0x10006be4
10006bdf:	call   0x100159b6
10006be4:	mov    eax,DWORD PTR [esi+0x14]
10006be7:	mov    ebx,DWORD PTR [esp+0x18]
10006beb:	sub    eax,edi
10006bed:	cmp    eax,ebx
10006bef:	jae    0x10006bf3
10006bf1:	mov    ebx,eax
10006bf3:	mov    ebp,DWORD PTR [esp+0x20]
10006bf7:	cmp    ebx,ebp
10006bf9:	mov    edx,ebx
10006bfb:	jb     0x10006bff
10006bfd:	mov    edx,ebp
10006bff:	cmp    DWORD PTR [esi+0x18],0x8
10006c03:	jb     0x10006c0a
10006c05:	mov    eax,DWORD PTR [esi+0x4]
10006c08:	jmp    0x10006c0d
10006c0a:	lea    eax,[esi+0x4]
10006c0d:	test   edx,edx
10006c0f:	mov    ecx,DWORD PTR [esp+0x1c]
10006c13:	lea    eax,[eax+edi*2]
10006c16:	jbe    0x10006c3d
10006c18:	mov    si,WORD PTR [eax]
10006c1b:	cmp    si,WORD PTR [ecx]
10006c1e:	jne    0x10006c2d
10006c20:	add    eax,0x2
10006c23:	add    ecx,0x2
10006c26:	sub    edx,0x1
10006c29:	jne    0x10006c18
10006c2b:	jmp    0x10006c3d
10006c2d:	movzx  eax,WORD PTR [eax]
10006c30:	cmp    ax,WORD PTR [ecx]
10006c33:	sbb    eax,eax
10006c35:	and    eax,0xfffffffe
10006c38:	add    eax,0x1
10006c3b:	jne    0x10006c52
10006c3d:	cmp    ebx,ebp
10006c3f:	jae    0x10006c4b
10006c41:	pop    edi
10006c42:	pop    esi
10006c43:	pop    ebp
10006c44:	or     eax,0xffffffff
10006c47:	pop    ebx
10006c48:	ret    0x10
10006c4b:	xor    eax,eax
10006c4d:	cmp    ebx,ebp
10006c4f:	setne  al
10006c52:	pop    edi
10006c53:	pop    esi
10006c54:	pop    ebp
10006c55:	pop    ebx
10006c56:	ret    0x10
10006c59:	int3   
10006c5a:	int3   
10006c5b:	int3   
10006c5c:	int3   
10006c5d:	int3   
10006c5e:	int3   
10006c5f:	int3   
10006c60:	push   esi
10006c61:	push   0x10066e0c
10006c66:	mov    esi,ecx
10006c68:	call   DWORD PTR ds:0x1002c0e0
10006c6e:	mov    eax,esi
10006c70:	pop    esi
10006c71:	ret    
10006c72:	int3   
10006c73:	int3   
10006c74:	int3   
10006c75:	int3   
10006c76:	int3   
10006c77:	int3   
10006c78:	int3   
10006c79:	int3   
10006c7a:	int3   
10006c7b:	int3   
10006c7c:	int3   
10006c7d:	int3   
10006c7e:	int3   
10006c7f:	int3   
10006c80:	push   0x10066e0c
10006c85:	call   DWORD PTR ds:0x1002c0ec
10006c8b:	ret    
10006c8c:	int3   
10006c8d:	int3   
10006c8e:	int3   
10006c8f:	int3   
10006c90:	mov    eax,ds:0x10066f40
10006c95:	push   eax
10006c96:	call   DWORD PTR ds:0x1002c09c
10006c9c:	ret    
10006c9d:	int3   
10006c9e:	int3   
10006c9f:	int3   
10006ca0:	push   ebx
10006ca1:	mov    ebx,DWORD PTR ds:0x1002c070
10006ca7:	push   ebp
10006ca8:	mov    ebp,DWORD PTR ds:0x1002c0fc
10006cae:	push   esi
10006caf:	push   edi
10006cb0:	mov    edi,DWORD PTR [esp+0x14]
10006cb4:	xor    esi,esi
10006cb6:	push   0x0
10006cb8:	push   0x0
10006cba:	push   0x10066e0c
10006cbf:	call   ebp
10006cc1:	test   eax,eax
10006cc3:	je     0x10006cd7
10006cc5:	cmp    edi,0xffffffff
10006cc8:	je     0x10006cce
10006cca:	cmp    esi,edi
10006ccc:	ja     0x10006cde
10006cce:	push   0xa
10006cd0:	call   ebx
10006cd2:	add    esi,0xa
10006cd5:	jmp    0x10006cb6
10006cd7:	pop    edi
10006cd8:	pop    esi
10006cd9:	pop    ebp
10006cda:	mov    al,0x1
10006cdc:	pop    ebx
10006cdd:	ret    
10006cde:	pop    edi
10006cdf:	pop    esi
10006ce0:	pop    ebp
10006ce1:	xor    al,al
10006ce3:	pop    ebx
10006ce4:	ret    
10006ce5:	int3   
10006ce6:	int3   
10006ce7:	int3   
10006ce8:	int3   
10006ce9:	int3   
10006cea:	int3   
10006ceb:	int3   
10006cec:	int3   
10006ced:	int3   
10006cee:	int3   
10006cef:	int3   
10006cf0:	sub    esp,0x8
10006cf3:	mov    edx,DWORD PTR [esp+0x10]
10006cf7:	mov    eax,DWORD PTR [esp+0xc]
10006cfb:	mov    ecx,DWORD PTR ds:0x10066f40
10006d01:	push   edx
10006d02:	mov    DWORD PTR [esp+0x4],eax
10006d06:	push   0x0
10006d08:	lea    eax,[esp+0x8]
10006d0c:	push   eax
10006d0d:	push   0x2
10006d0f:	mov    DWORD PTR [esp+0x14],ecx
10006d13:	call   DWORD PTR ds:0x1002c06c
10006d19:	add    esp,0x8
10006d1c:	ret    
10006d1d:	int3   
10006d1e:	int3   
10006d1f:	int3   
10006d20:	mov    eax,ecx
10006d22:	mov    cl,BYTE PTR [esp+0x8]
10006d26:	mov    BYTE PTR [eax],cl
10006d28:	mov    DWORD PTR [eax+0x4],0xffffffff
10006d2f:	mov    BYTE PTR [eax+0x8],0x1
10006d33:	ret    0x8
10006d36:	int3   
10006d37:	int3   
10006d38:	int3   
10006d39:	int3   
10006d3a:	int3   
10006d3b:	int3   
10006d3c:	int3   
10006d3d:	int3   
10006d3e:	int3   
10006d3f:	int3   
10006d40:	push   esi
10006d41:	mov    esi,ecx
10006d43:	push   edi
10006d44:	mov    edi,DWORD PTR [esi+0x4]
10006d47:	test   edi,edi
10006d49:	je     0x10006d63
10006d4b:	push   ebx
10006d4c:	call   DWORD PTR ds:0x1002c07c
10006d52:	push   edi
10006d53:	mov    ebx,eax
10006d55:	call   DWORD PTR ds:0x1002c058
10006d5b:	push   ebx
10006d5c:	call   DWORD PTR ds:0x1002c078
10006d62:	pop    ebx
10006d63:	pop    edi
10006d64:	mov    DWORD PTR [esi+0x4],0x0
10006d6b:	pop    esi
10006d6c:	ret    
10006d6d:	int3   
10006d6e:	int3   
10006d6f:	int3   
10006d70:	push   0xffffffff
10006d72:	push   0x1002b370
10006d77:	mov    eax,fs:0x0
10006d7d:	push   eax
10006d7e:	sub    esp,0x10
10006d81:	push   ebx
10006d82:	push   esi
10006d83:	mov    eax,ds:0x10064694
10006d88:	xor    eax,esp
10006d8a:	push   eax
10006d8b:	lea    eax,[esp+0x1c]
10006d8f:	mov    fs:0x0,eax
10006d95:	mov    esi,ecx
10006d97:	mov    eax,ds:0x10066120
10006d9c:	mov    edx,DWORD PTR [eax+0xc]
10006d9f:	mov    ecx,0x10066120
10006da4:	call   edx
10006da6:	add    eax,0x10
10006da9:	mov    DWORD PTR [esp+0x18],eax
10006dad:	mov    DWORD PTR [esp+0x24],0x0
10006db5:	mov    eax,ds:0x10066120
10006dba:	mov    edx,DWORD PTR [eax+0xc]
10006dbd:	mov    ecx,0x10066120
10006dc2:	call   edx
10006dc4:	add    eax,0x10
10006dc7:	mov    DWORD PTR [esp+0x14],eax
10006dcb:	mov    BYTE PTR [esp+0x24],0x1
10006dd0:	mov    eax,ds:0x10066120
10006dd5:	mov    edx,DWORD PTR [eax+0xc]
10006dd8:	mov    ecx,0x10066120
10006ddd:	call   edx
10006ddf:	add    eax,0x10
10006de2:	mov    DWORD PTR [esp+0x10],eax
10006de6:	mov    BYTE PTR [esp+0x24],0x2
10006deb:	mov    eax,ds:0x10066120
10006df0:	mov    edx,DWORD PTR [eax+0xc]
10006df3:	mov    ecx,0x10066120
10006df8:	call   edx
10006dfa:	add    eax,0x10
10006dfd:	mov    DWORD PTR [esp+0xc],eax
10006e01:	mov    edx,DWORD PTR [esp+0x2c]
10006e05:	lea    eax,[esp+0x10]
10006e09:	push   eax
10006e0a:	lea    ecx,[esp+0x1c]
10006e0e:	push   ecx
10006e0f:	push   edx
10006e10:	lea    edx,[esp+0x18]
10006e14:	lea    ebx,[esp+0x20]
10006e18:	mov    ecx,esi
10006e1a:	mov    BYTE PTR [esp+0x30],0x3
10006e1f:	call   0x10006ed0
10006e24:	mov    BYTE PTR [esp+0x24],0x2
10006e29:	mov    eax,DWORD PTR [esp+0xc]
10006e2d:	add    eax,0xfffffff0
10006e30:	lea    ecx,[eax+0xc]
10006e33:	or     edx,0xffffffff
10006e36:	lock xadd DWORD PTR [ecx],edx
10006e3a:	dec    edx
10006e3b:	test   edx,edx
10006e3d:	jg     0x10006e49
10006e3f:	mov    ecx,DWORD PTR [eax]
10006e41:	mov    edx,DWORD PTR [ecx]
10006e43:	push   eax
10006e44:	mov    eax,DWORD PTR [edx+0x4]
10006e47:	call   eax
10006e49:	mov    BYTE PTR [esp+0x24],0x1
10006e4e:	mov    eax,DWORD PTR [esp+0x10]
10006e52:	add    eax,0xfffffff0
10006e55:	lea    ecx,[eax+0xc]
10006e58:	or     edx,0xffffffff
10006e5b:	lock xadd DWORD PTR [ecx],edx
10006e5f:	dec    edx
10006e60:	test   edx,edx
10006e62:	jg     0x10006e6e
10006e64:	mov    ecx,DWORD PTR [eax]
10006e66:	mov    edx,DWORD PTR [ecx]
10006e68:	push   eax
10006e69:	mov    eax,DWORD PTR [edx+0x4]
10006e6c:	call   eax
10006e6e:	mov    BYTE PTR [esp+0x24],0x0
10006e73:	mov    eax,DWORD PTR [esp+0x14]
10006e77:	add    eax,0xfffffff0
10006e7a:	lea    ecx,[eax+0xc]
10006e7d:	or     edx,0xffffffff
10006e80:	lock xadd DWORD PTR [ecx],edx
10006e84:	dec    edx
10006e85:	test   edx,edx
10006e87:	jg     0x10006e93
10006e89:	mov    ecx,DWORD PTR [eax]
10006e8b:	mov    edx,DWORD PTR [ecx]
10006e8d:	push   eax
10006e8e:	mov    eax,DWORD PTR [edx+0x4]
10006e91:	call   eax
10006e93:	mov    DWORD PTR [esp+0x24],0xffffffff
10006e9b:	mov    eax,DWORD PTR [esp+0x18]
10006e9f:	add    eax,0xfffffff0
10006ea2:	lea    ecx,[eax+0xc]
10006ea5:	or     edx,0xffffffff
10006ea8:	lock xadd DWORD PTR [ecx],edx
10006eac:	dec    edx
10006ead:	test   edx,edx
10006eaf:	jg     0x10006ebb
10006eb1:	mov    ecx,DWORD PTR [eax]
10006eb3:	mov    edx,DWORD PTR [ecx]
10006eb5:	push   eax
10006eb6:	mov    eax,DWORD PTR [edx+0x4]
10006eb9:	call   eax
10006ebb:	mov    ecx,DWORD PTR [esp+0x1c]
10006ebf:	mov    DWORD PTR fs:0x0,ecx
10006ec6:	pop    ecx
10006ec7:	pop    esi
10006ec8:	pop    ebx
10006ec9:	add    esp,0x1c
10006ecc:	ret    0x4
10006ecf:	int3   
10006ed0:	push   ebp
10006ed1:	mov    ebp,esp
10006ed3:	and    esp,0xfffffff8
10006ed6:	push   0xffffffff
10006ed8:	push   0x1002b31b
10006edd:	mov    eax,fs:0x0
10006ee3:	push   eax
10006ee4:	sub    esp,0x16c
10006eea:	mov    eax,ds:0x10064694
10006eef:	xor    eax,esp
10006ef1:	mov    DWORD PTR [esp+0x164],eax
10006ef8:	push   esi
10006ef9:	push   edi
10006efa:	mov    eax,ds:0x10064694
10006eff:	xor    eax,esp
10006f01:	push   eax
10006f02:	lea    eax,[esp+0x178]
10006f09:	mov    fs:0x0,eax
10006f0f:	mov    eax,DWORD PTR [ebp+0x10]
10006f12:	mov    esi,DWORD PTR [ebp+0x8]
10006f15:	mov    edi,DWORD PTR [ebp+0xc]
10006f18:	push   0x110
10006f1d:	mov    DWORD PTR [esp+0x14],eax
10006f21:	lea    eax,[esp+0x60]
10006f25:	push   eax
10006f26:	mov    DWORD PTR [esp+0x1c],edx
10006f2a:	push   0x110
10006f2f:	mov    edx,eax
10006f31:	push   edx
10006f32:	push   0x1
10006f34:	call   0x100073f0
10006f39:	test   eax,eax
10006f3b:	jne    0x10006fab
10006f3d:	push   0x10055950
10006f42:	push   0x1f
10006f44:	push   0x10055978
10006f49:	call   0x10003340
10006f4e:	add    esp,0xc
10006f51:	xor    edi,edi
10006f53:	mov    ecx,eax
10006f55:	mov    DWORD PTR [esp+0x30],0xf
10006f5d:	mov    DWORD PTR [esp+0x2c],edi
10006f61:	mov    BYTE PTR [esp+0x1c],0x0
10006f66:	lea    esi,[ecx+0x1]
10006f69:	lea    esp,[esp+0x0]
10006f70:	mov    dl,BYTE PTR [ecx]
10006f72:	add    ecx,0x1
10006f75:	test   dl,dl
10006f77:	jne    0x10006f70
10006f79:	sub    ecx,esi
10006f7b:	push   ecx
10006f7c:	push   eax
10006f7d:	lea    ecx,[esp+0x20]
10006f81:	call   0x10003900
10006f86:	lea    eax,[esp+0x18]
10006f8a:	push   eax
10006f8b:	lea    ecx,[esp+0x38]
10006f8f:	push   ecx
10006f90:	mov    DWORD PTR [esp+0x188],edi
10006f97:	call   0x10001490
10006f9c:	push   0x10058a78
10006fa1:	lea    edx,[esp+0x38]
10006fa5:	push   edx
10006fa6:	call   0x100161ce
10006fab:	mov    eax,DWORD PTR [esp+0x9c]
10006fb2:	mov    ecx,DWORD PTR [esp+0xa0]
10006fb9:	mov    edx,DWORD PTR [esp+0xa4]
10006fc0:	mov    DWORD PTR [esi],eax
10006fc2:	mov    eax,DWORD PTR [esp+0xa8]
10006fc9:	mov    DWORD PTR [esi+0x4],ecx
10006fcc:	mov    DWORD PTR [esi+0x8],edx
10006fcf:	mov    DWORD PTR [esi+0xc],eax
10006fd2:	lea    eax,[esp+0x5c]
10006fd6:	lea    edx,[eax+0x2]
10006fd9:	lea    esp,[esp+0x0]
10006fe0:	mov    cx,WORD PTR [eax]
10006fe3:	add    eax,0x2
10006fe6:	test   cx,cx
10006fe9:	jne    0x10006fe0
10006feb:	sub    eax,edx
10006fed:	sar    eax,1
10006fef:	push   eax
10006ff0:	lea    ecx,[esp+0x60]
10006ff4:	push   ecx
10006ff5:	mov    ecx,edi
10006ff7:	call   0x10004870
10006ffc:	lea    eax,[esp+0xac]
10007003:	lea    edx,[eax+0x2]
10007006:	mov    cx,WORD PTR [eax]
10007009:	add    eax,0x2
1000700c:	test   cx,cx
1000700f:	jne    0x10007006
10007011:	sub    eax,edx
10007013:	sar    eax,1
10007015:	push   eax
10007016:	lea    edx,[esp+0xb0]
1000701d:	push   edx
1000701e:	mov    ecx,ebx
10007020:	call   0x10004870
10007025:	lea    eax,[esp+0xec]
1000702c:	lea    edx,[eax+0x2]
1000702f:	nop
10007030:	mov    cx,WORD PTR [eax]
10007033:	add    eax,0x2
10007036:	test   cx,cx
10007039:	jne    0x10007030
1000703b:	mov    ecx,DWORD PTR [esp+0x10]
1000703f:	sub    eax,edx
10007041:	sar    eax,1
10007043:	push   eax
10007044:	lea    eax,[esp+0xf0]
1000704b:	push   eax
1000704c:	call   0x10004870
10007051:	lea    eax,[esp+0x12c]
10007058:	lea    edx,[eax+0x2]
1000705b:	jmp    0x10007060
1000705d:	lea    ecx,[ecx+0x0]
10007060:	mov    cx,WORD PTR [eax]
10007063:	add    eax,0x2
10007066:	test   cx,cx
10007069:	jne    0x10007060
1000706b:	sub    eax,edx
1000706d:	sar    eax,1
1000706f:	push   eax
10007070:	lea    ecx,[esp+0x130]
10007077:	push   ecx
10007078:	mov    ecx,DWORD PTR [esp+0x1c]
1000707c:	call   0x10004870
10007081:	mov    ecx,DWORD PTR [esp+0x178]
10007088:	mov    DWORD PTR fs:0x0,ecx
1000708f:	pop    ecx
10007090:	pop    edi
10007091:	pop    esi
10007092:	mov    ecx,DWORD PTR [esp+0x164]
10007099:	xor    ecx,esp
1000709b:	call   0x10015adb
100070a0:	mov    esp,ebp
100070a2:	pop    ebp
100070a3:	ret    0xc
100070a6:	int3   
100070a7:	int3   
100070a8:	int3   
100070a9:	int3   
100070aa:	int3   
100070ab:	int3   
100070ac:	int3   
100070ad:	int3   
100070ae:	int3   
100070af:	int3   
100070b0:	push   ebp
100070b1:	mov    ebp,esp
100070b3:	and    esp,0xfffffff8
100070b6:	push   0xffffffff
100070b8:	push   0x1002b2e8
100070bd:	mov    eax,fs:0x0
100070c3:	push   eax
100070c4:	sub    esp,0x50
100070c7:	push   ebx
100070c8:	push   esi
100070c9:	push   edi
100070ca:	mov    eax,ds:0x10064694
100070cf:	xor    eax,esp
100070d1:	push   eax
100070d2:	lea    eax,[esp+0x60]
100070d6:	mov    fs:0x0,eax
100070dc:	xor    ebx,ebx
100070de:	mov    DWORD PTR [esp+0x10],ebx
100070e2:	mov    DWORD PTR [esp+0x14],ebx
100070e6:	push   0xa
100070e8:	mov    DWORD PTR [esp+0x6c],ebx
100070ec:	call   0x100159f5
100070f1:	mov    edi,eax
100070f3:	add    esp,0x4
100070f6:	mov    DWORD PTR [esp+0x10],edi
100070fa:	mov    eax,DWORD PTR [ebp+0x10]
100070fd:	cmp    eax,ebx
100070ff:	mov    BYTE PTR [esp+0x68],0x1
10007104:	mov    DWORD PTR [edi+0x4],0x2
1000710b:	je     0x10007114
1000710d:	mov    ax,WORD PTR [eax]
10007110:	mov    WORD PTR [edi+0x8],ax
10007114:	mov    eax,DWORD PTR [edi+0x4]
10007117:	mov    ecx,DWORD PTR [ebp+0x8]
1000711a:	add    eax,0x8
1000711d:	push   eax
1000711e:	push   edi
1000711f:	push   eax
10007120:	push   edi
10007121:	push   0x3
10007123:	call   0x100073f0
10007128:	test   eax,eax
1000712a:	jne    0x1000718f
1000712c:	push   0x10055998
10007131:	push   0x19
10007133:	push   0x100559d0
10007138:	call   0x10003340
1000713d:	mov    ecx,eax
1000713f:	add    esp,0xc
10007142:	mov    DWORD PTR [esp+0x30],0xf
1000714a:	mov    DWORD PTR [esp+0x2c],ebx
1000714e:	mov    BYTE PTR [esp+0x1c],0x0
10007153:	lea    esi,[ecx+0x1]
10007156:	mov    dl,BYTE PTR [ecx]
10007158:	add    ecx,0x1
1000715b:	test   dl,dl
1000715d:	jne    0x10007156
1000715f:	sub    ecx,esi
10007161:	push   ecx
10007162:	push   eax
10007163:	lea    ecx,[esp+0x20]
10007167:	call   0x10003900
1000716c:	lea    ecx,[esp+0x18]
10007170:	push   ecx
10007171:	lea    edx,[esp+0x38]
10007175:	push   edx
10007176:	mov    BYTE PTR [esp+0x70],0x2
1000717b:	call   0x10001490
10007180:	push   0x10058a78
10007185:	lea    eax,[esp+0x38]
10007189:	push   eax
1000718a:	call   0x100161ce
1000718f:	cmp    DWORD PTR [edi],0x1
10007192:	jne    0x100071e8
10007194:	mov    ebx,DWORD PTR [edi+0x4]
10007197:	lea    ecx,[ebx+0x8]
1000719a:	push   ecx
1000719b:	call   0x100159f5
100071a0:	mov    esi,eax
100071a2:	add    esp,0x4
100071a5:	cmp    esi,edi
100071a7:	je     0x100071b2
100071a9:	push   edi
100071aa:	call   0x10015ad6
100071af:	add    esp,0x4
100071b2:	mov    eax,DWORD PTR [ebp+0x10]
100071b5:	test   eax,eax
100071b7:	mov    edi,esi
100071b9:	mov    DWORD PTR [esp+0x10],edi
100071bd:	mov    DWORD PTR [esi+0x4],ebx
100071c0:	je     0x100071c9
100071c2:	mov    dx,WORD PTR [eax]
100071c5:	mov    WORD PTR [esi+0x8],dx
100071c9:	mov    eax,DWORD PTR [esi+0x4]
100071cc:	mov    ecx,DWORD PTR [ebp+0x8]
100071cf:	add    eax,0x8
100071d2:	push   eax
100071d3:	push   esi
100071d4:	push   eax
100071d5:	push   esi
100071d6:	push   0x3
100071d8:	call   0x100073f0
100071dd:	test   eax,eax
100071df:	je     0x10007231
100071e1:	cmp    DWORD PTR [esi],0x1
100071e4:	je     0x10007194
100071e6:	xor    ebx,ebx
100071e8:	cmp    DWORD PTR [edi],ebx
100071ea:	je     0x10007299
100071f0:	push   0x10055a20
100071f5:	push   0x19
100071f7:	push   0x100559d0
100071fc:	call   0x10003340
10007201:	add    esp,0xc
10007204:	push   eax
10007205:	lea    ecx,[esp+0x1c]
10007209:	call   0x10002b40
1000720e:	lea    eax,[esp+0x18]
10007212:	push   eax
10007213:	lea    ecx,[esp+0x38]
10007217:	push   ecx
10007218:	mov    BYTE PTR [esp+0x70],0x4
1000721d:	call   0x10001490
10007222:	push   0x10058a78
10007227:	lea    edx,[esp+0x38]
1000722b:	push   edx
1000722c:	call   0x100161ce
10007231:	push   0x100559ec
10007236:	push   0x19
10007238:	push   0x100559d0
1000723d:	call   0x10003340
10007242:	mov    ecx,eax
10007244:	add    esp,0xc
10007247:	mov    DWORD PTR [esp+0x30],0xf
1000724f:	mov    DWORD PTR [esp+0x2c],0x0
10007257:	mov    BYTE PTR [esp+0x1c],0x0
1000725c:	lea    esi,[ecx+0x1]
1000725f:	nop
10007260:	mov    dl,BYTE PTR [ecx]
10007262:	add    ecx,0x1
10007265:	test   dl,dl
10007267:	jne    0x10007260
10007269:	sub    ecx,esi
1000726b:	push   ecx
1000726c:	push   eax
1000726d:	lea    ecx,[esp+0x20]
10007271:	call   0x10003900
10007276:	lea    eax,[esp+0x18]
1000727a:	push   eax
1000727b:	lea    ecx,[esp+0x38]
1000727f:	push   ecx
10007280:	mov    BYTE PTR [esp+0x70],0x3
10007285:	call   0x10001490
1000728a:	push   0x10058a78
1000728f:	lea    edx,[esp+0x38]
10007293:	push   edx
10007294:	call   0x100161ce
10007299:	mov    eax,DWORD PTR [edi+0x4]
1000729c:	mov    esi,DWORD PTR [ebp+0xc]
1000729f:	push   eax
100072a0:	lea    eax,[edi+0x8]
100072a3:	mov    DWORD PTR [esi+0x18],0xf
100072aa:	mov    DWORD PTR [esi+0x14],ebx
100072ad:	push   eax
100072ae:	mov    ecx,esi
100072b0:	mov    BYTE PTR [esi+0x4],0x0
100072b4:	call   0x10003900
100072b9:	push   edi
100072ba:	call   0x10015ad6
100072bf:	add    esp,0x4
100072c2:	push   ebx
100072c3:	call   0x10015ad6
100072c8:	add    esp,0x4
100072cb:	mov    eax,esi
100072cd:	mov    ecx,DWORD PTR [esp+0x60]
100072d1:	mov    DWORD PTR fs:0x0,ecx
100072d8:	pop    ecx
100072d9:	pop    edi
100072da:	pop    esi
100072db:	pop    ebx
100072dc:	mov    esp,ebp
100072de:	pop    ebp
100072df:	ret    0xc
100072e2:	int3   
100072e3:	int3   
100072e4:	int3   
100072e5:	int3   
100072e6:	int3   
100072e7:	int3   
100072e8:	int3   
100072e9:	int3   
100072ea:	int3   
100072eb:	int3   
100072ec:	int3   
100072ed:	int3   
100072ee:	int3   
100072ef:	int3   
100072f0:	push   ebp
100072f1:	mov    ebp,esp
100072f3:	and    esp,0xfffffff8
100072f6:	push   0xffffffff
100072f8:	push   0x1002b298
100072fd:	mov    eax,fs:0x0
10007303:	push   eax
10007304:	sub    esp,0x50
10007307:	push   esi
10007308:	mov    eax,ds:0x10064694
1000730d:	xor    eax,esp
1000730f:	push   eax
10007310:	lea    eax,[esp+0x58]
10007314:	mov    fs:0x0,eax
1000731a:	mov    eax,DWORD PTR [ebp+0x8]
1000731d:	push   0x4
1000731f:	lea    edx,[esp+0x10]
10007323:	push   edx
10007324:	mov    DWORD PTR [esp+0x14],eax
10007328:	push   0x4
1000732a:	mov    eax,edx
1000732c:	push   eax
1000732d:	push   0x2
1000732f:	call   0x100073f0
10007334:	test   eax,eax
10007336:	jne    0x100073a2
10007338:	push   0x10055a58
1000733d:	push   0x12
1000733f:	push   0x10055a84
10007344:	call   0x10003340
10007349:	mov    ecx,eax
1000734b:	add    esp,0xc
1000734e:	mov    DWORD PTR [esp+0x28],0xf
10007356:	mov    DWORD PTR [esp+0x24],0x0
1000735e:	mov    BYTE PTR [esp+0x14],0x0
10007363:	lea    esi,[ecx+0x1]
10007366:	mov    dl,BYTE PTR [ecx]
10007368:	add    ecx,0x1
1000736b:	test   dl,dl
1000736d:	jne    0x10007366
1000736f:	sub    ecx,esi
10007371:	push   ecx
10007372:	push   eax
10007373:	lea    ecx,[esp+0x18]
10007377:	call   0x10003900
1000737c:	lea    ecx,[esp+0x10]
10007380:	push   ecx
10007381:	lea    edx,[esp+0x30]
10007385:	push   edx
10007386:	mov    DWORD PTR [esp+0x68],0x0
1000738e:	call   0x10001490
10007393:	push   0x10058a78
10007398:	lea    eax,[esp+0x30]
1000739c:	push   eax
1000739d:	call   0x100161ce
100073a2:	cmp    DWORD PTR [esp+0xc],0x0
100073a7:	setne  al
100073aa:	mov    ecx,DWORD PTR [esp+0x58]
100073ae:	mov    DWORD PTR fs:0x0,ecx
100073b5:	pop    ecx
100073b6:	pop    esi
100073b7:	mov    esp,ebp
100073b9:	pop    ebp
100073ba:	ret    0x4
100073bd:	int3   
100073be:	int3   
100073bf:	int3   
100073c0:	push   ecx
100073c1:	push   esi
100073c2:	mov    esi,DWORD PTR [esp+0xc]
100073c6:	lea    eax,[esp+0x10]
100073ca:	push   eax
100073cb:	push   esi
100073cc:	push   ecx
100073cd:	mov    DWORD PTR [esp+0x10],0x0
100073d5:	call   0x100070b0
100073da:	mov    eax,esi
100073dc:	pop    esi
100073dd:	pop    ecx
100073de:	ret    0x8
100073e1:	int3   
100073e2:	int3   
100073e3:	int3   
100073e4:	int3   
100073e5:	int3   
100073e6:	int3   
100073e7:	int3   
100073e8:	int3   
100073e9:	int3   
100073ea:	int3   
100073eb:	int3   
100073ec:	int3   
100073ed:	int3   
100073ee:	int3   
100073ef:	int3   
100073f0:	push   0xffffffff
100073f2:	push   0x1002b268
100073f7:	mov    eax,fs:0x0
100073fd:	push   eax
100073fe:	push   ecx
100073ff:	push   ebx
10007400:	push   ebp
10007401:	push   esi
10007402:	push   edi
10007403:	mov    eax,ds:0x10064694
10007408:	xor    eax,esp
1000740a:	push   eax
1000740b:	lea    eax,[esp+0x18]
1000740f:	mov    fs:0x0,eax
10007415:	mov    esi,ecx
10007417:	xor    ebp,ebp
10007419:	mov    DWORD PTR [esp+0x14],ebp
1000741d:	mov    DWORD PTR [esp+0x20],ebp
10007421:	cmp    BYTE PTR [esi],0x0
10007424:	jne    0x10007431
10007426:	call   0x100074f0
1000742b:	mov    ebp,eax
1000742d:	mov    ebx,ebp
1000742f:	jmp    0x10007467
10007431:	cmp    DWORD PTR [esi+0x4],0xffffffff
10007435:	jne    0x10007464
10007437:	call   0x100074f0
1000743c:	mov    edi,DWORD PTR [esi+0x4]
1000743f:	test   edi,edi
10007441:	mov    DWORD PTR [esp+0x14],eax
10007445:	je     0x1000745d
10007447:	call   DWORD PTR ds:0x1002c07c
1000744d:	push   edi
1000744e:	mov    ebx,eax
10007450:	call   DWORD PTR ds:0x1002c058
10007456:	push   ebx
10007457:	call   DWORD PTR ds:0x1002c078
1000745d:	mov    eax,DWORD PTR [esp+0x14]
10007461:	mov    DWORD PTR [esi+0x4],eax
10007464:	mov    ebx,DWORD PTR [esi+0x4]
10007467:	cmp    ebx,0xffffffff
1000746a:	jne    0x1000748a
1000746c:	test   ebp,ebp
1000746e:	je     0x10007486
10007470:	call   DWORD PTR ds:0x1002c07c
10007476:	push   ebp
10007477:	mov    esi,eax
10007479:	call   DWORD PTR ds:0x1002c058
1000747f:	push   esi
10007480:	call   DWORD PTR ds:0x1002c078
10007486:	xor    eax,eax
10007488:	jmp    0x100074d5
1000748a:	mov    ecx,DWORD PTR [esp+0x38]
1000748e:	mov    edx,DWORD PTR [esp+0x30]
10007492:	mov    edi,DWORD PTR [esp+0x34]
10007496:	push   ecx
10007497:	mov    ecx,DWORD PTR [esp+0x2c]
1000749b:	push   edx
1000749c:	mov    edx,DWORD PTR [esp+0x34]
100074a0:	push   esi
100074a1:	call   0x100076f0
100074a6:	mov    edi,eax
100074a8:	test   edi,edi
100074aa:	jne    0x100074b9
100074ac:	cmp    BYTE PTR [esi],al
100074ae:	je     0x100074b9
100074b0:	push   eax
100074b1:	lea    ecx,[esi+0x4]
100074b4:	call   0x10003d90
100074b9:	test   ebp,ebp
100074bb:	je     0x100074d3
100074bd:	call   DWORD PTR ds:0x1002c07c
100074c3:	push   ebp
100074c4:	mov    esi,eax
100074c6:	call   DWORD PTR ds:0x1002c058
100074cc:	push   esi
100074cd:	call   DWORD PTR ds:0x1002c078
100074d3:	mov    eax,edi
100074d5:	mov    ecx,DWORD PTR [esp+0x18]
100074d9:	mov    DWORD PTR fs:0x0,ecx
100074e0:	pop    ecx
100074e1:	pop    edi
100074e2:	pop    esi
100074e3:	pop    ebp
100074e4:	pop    ebx
100074e5:	add    esp,0x10
100074e8:	ret    0x14
100074eb:	int3   
100074ec:	int3   
100074ed:	int3   
100074ee:	int3   
100074ef:	int3   
100074f0:	push   ebp
100074f1:	mov    ebp,esp
100074f3:	and    esp,0xfffffff8
100074f6:	push   0xffffffff
100074f8:	push   0x1002b23e
100074fd:	mov    eax,fs:0x0
10007503:	push   eax
10007504:	sub    esp,0x14
10007507:	push   ebx
10007508:	push   ebp
10007509:	push   esi
1000750a:	push   edi
1000750b:	mov    eax,ds:0x10064694
10007510:	xor    eax,esp
10007512:	push   eax
10007513:	lea    eax,[esp+0x28]
10007517:	mov    fs:0x0,eax
1000751d:	xor    edi,edi
1000751f:	mov    DWORD PTR [esp+0x1c],edi
10007523:	mov    DWORD PTR [esp+0x30],edi
10007527:	mov    eax,ds:0x10066f44
1000752c:	push   eax
1000752d:	lea    ecx,[esp+0x1c]
10007531:	call   0x10002d50
10007536:	mov    ebx,0x1
1000753b:	mov    BYTE PTR [esp+0x30],bl
1000753f:	test   BYTE PTR ds:0x10066f50,bl
10007545:	jne    0x10007592
10007547:	or     DWORD PTR ds:0x10066f50,ebx
1000754d:	push   0x10055a98
10007552:	push   0xb
10007554:	push   0x10055ac0
10007559:	mov    BYTE PTR [esp+0x3c],0x2
1000755e:	call   0x10003340
10007563:	add    esp,0xc
10007566:	push   eax
10007567:	push   0x10055acc
1000756c:	push   0xc
1000756e:	push   0x10055b04
10007573:	call   0x10003340
10007578:	add    esp,0xc
1000757b:	push   eax
1000757c:	call   DWORD PTR ds:0x1002c100
10007582:	push   eax
10007583:	call   DWORD PTR ds:0x1002c044
10007589:	mov    ds:0x10066f4c,eax
1000758e:	mov    BYTE PTR [esp+0x30],bl
10007592:	mov    ebx,DWORD PTR ds:0x1002c07c
10007598:	mov    ecx,DWORD PTR [esp+0x18]
1000759c:	push   0x0
1000759e:	push   0x0
100075a0:	push   0x3
100075a2:	push   0x0
100075a4:	push   0x0
100075a6:	push   0xc0000000
100075ab:	push   ecx
100075ac:	call   DWORD PTR ds:0x10066f4c
100075b2:	test   edi,edi
100075b4:	mov    esi,eax
100075b6:	je     0x100075ce
100075b8:	call   ebx
100075ba:	push   edi
100075bb:	mov    ebp,eax
100075bd:	call   DWORD PTR ds:0x1002c058
100075c3:	push   ebp
100075c4:	mov    ebp,DWORD PTR ds:0x1002c078
100075ca:	call   ebp
100075cc:	jmp    0x100075d4
100075ce:	mov    ebp,DWORD PTR ds:0x1002c078
100075d4:	cmp    esi,0xffffffff
100075d7:	mov    edi,esi
100075d9:	mov    DWORD PTR [esp+0x1c],edi
100075dd:	jne    0x10007605
100075df:	call   ebx
100075e1:	cmp    eax,0xe7
100075e6:	jne    0x100076a1
100075ec:	mov    edx,DWORD PTR [esp+0x18]
100075f0:	push   0x1f4
100075f5:	push   edx
100075f6:	call   DWORD PTR ds:0x1002c104
100075fc:	test   eax,eax
100075fe:	jne    0x10007598
10007600:	jmp    0x100076a3
10007605:	push   0x0
10007607:	push   0x0
10007609:	lea    eax,[esp+0x28]
1000760d:	push   eax
1000760e:	push   esi
1000760f:	mov    DWORD PTR [esp+0x30],0x2
10007617:	call   DWORD PTR ds:0x1002c108
1000761d:	test   eax,eax
1000761f:	jne    0x1000765e
10007621:	call   ebx
10007623:	mov    BYTE PTR [esp+0x30],0x0
10007628:	mov    eax,DWORD PTR [esp+0x18]
1000762c:	add    eax,0xfffffff0
1000762f:	lea    ecx,[eax+0xc]
10007632:	or     edx,0xffffffff
10007635:	lock xadd DWORD PTR [ecx],edx
10007639:	dec    edx
1000763a:	test   edx,edx
1000763c:	jg     0x10007648
1000763e:	mov    ecx,DWORD PTR [eax]
10007640:	mov    edx,DWORD PTR [ecx]
10007642:	push   eax
10007643:	mov    eax,DWORD PTR [edx+0x4]
10007646:	call   eax
10007648:	test   esi,esi
1000764a:	je     0x100076d7
10007650:	call   ebx
10007652:	push   esi
10007653:	mov    edi,eax
10007655:	call   DWORD PTR ds:0x1002c058
1000765b:	push   edi
1000765c:	jmp    0x100076d5
1000765e:	mov    BYTE PTR [esp+0x30],0x0
10007663:	mov    eax,DWORD PTR [esp+0x18]
10007667:	add    eax,0xfffffff0
1000766a:	mov    DWORD PTR [esp+0x1c],0x0
10007672:	lea    ecx,[eax+0xc]
10007675:	or     edx,0xffffffff
10007678:	lock xadd DWORD PTR [ecx],edx
1000767c:	dec    edx
1000767d:	test   edx,edx
1000767f:	jg     0x1000768b
10007681:	mov    ecx,DWORD PTR [eax]
10007683:	mov    edx,DWORD PTR [ecx]
10007685:	push   eax
10007686:	mov    eax,DWORD PTR [edx+0x4]
10007689:	call   eax
1000768b:	mov    eax,esi
1000768d:	mov    ecx,DWORD PTR [esp+0x28]
10007691:	mov    DWORD PTR fs:0x0,ecx
10007698:	pop    ecx
10007699:	pop    edi
1000769a:	pop    esi
1000769b:	pop    ebp
1000769c:	pop    ebx
1000769d:	mov    esp,ebp
1000769f:	pop    ebp
100076a0:	ret    
100076a1:	call   ebx
100076a3:	mov    BYTE PTR [esp+0x30],0x0
100076a8:	mov    eax,DWORD PTR [esp+0x18]
100076ac:	add    eax,0xfffffff0
100076af:	or     edx,0xffffffff
100076b2:	lea    ecx,[eax+0xc]
100076b5:	lock xadd DWORD PTR [ecx],edx
100076b9:	dec    edx
100076ba:	test   edx,edx
100076bc:	jg     0x100076c8
100076be:	mov    ecx,DWORD PTR [eax]
100076c0:	mov    edx,DWORD PTR [ecx]
100076c2:	push   eax
100076c3:	mov    eax,DWORD PTR [edx+0x4]
100076c6:	call   eax
100076c8:	call   ebx
100076ca:	push   0xffffffff
100076cc:	mov    esi,eax
100076ce:	call   DWORD PTR ds:0x1002c058
100076d4:	push   esi
100076d5:	call   ebp
100076d7:	or     eax,0xffffffff
100076da:	mov    ecx,DWORD PTR [esp+0x28]
100076de:	mov    DWORD PTR fs:0x0,ecx
100076e5:	pop    ecx
100076e6:	pop    edi
100076e7:	pop    esi
100076e8:	pop    ebp
100076e9:	pop    ebx
100076ea:	mov    esp,ebp
100076ec:	pop    ebp
100076ed:	ret    
100076ee:	int3   
100076ef:	int3   
100076f0:	push   ebp
100076f1:	mov    ebp,esp
100076f3:	and    esp,0xfffffff8
100076f6:	sub    esp,0x5c
100076f9:	mov    eax,ds:0x10064694
100076fe:	xor    eax,esp
10007700:	mov    DWORD PTR [esp+0x58],eax
10007704:	xor    eax,eax
10007706:	cmp    BYTE PTR ds:0x10066e10,al
1000770c:	push   esi
1000770d:	mov    esi,edx
1000770f:	mov    WORD PTR [esp+0x18],ax
10007714:	mov    DWORD PTR [esp+0x1a],eax
10007718:	mov    DWORD PTR [esp+0x1e],eax
1000771c:	mov    DWORD PTR [esp+0x22],eax
10007720:	mov    WORD PTR [esp+0x26],ax
10007725:	mov    DWORD PTR [esp+0x28],eax
10007729:	mov    DWORD PTR [esp+0x2c],eax
1000772d:	mov    DWORD PTR [esp+0x30],eax
10007731:	mov    DWORD PTR [esp+0x34],eax
10007735:	mov    DWORD PTR [esp+0x38],eax
10007739:	mov    WORD PTR [esp+0x3c],ax
1000773e:	mov    DWORD PTR [esp+0x3e],eax
10007742:	mov    DWORD PTR [esp+0x42],eax
10007746:	mov    DWORD PTR [esp+0x46],eax
1000774a:	mov    WORD PTR [esp+0x4a],ax
1000774f:	mov    DWORD PTR [esp+0x4c],eax
10007753:	mov    DWORD PTR [esp+0x50],eax
10007757:	mov    DWORD PTR [esp+0x54],eax
1000775b:	mov    DWORD PTR [esp+0x58],eax
1000775f:	jne    0x100077ae
10007761:	mov    DWORD PTR [esp+0x28],ecx
10007765:	call   DWORD PTR ds:0x1002c0a0
1000776b:	mov    ecx,DWORD PTR [ebp+0x10]
1000776e:	mov    DWORD PTR [esp+0x2c],eax
10007772:	mov    eax,DWORD PTR [ebp+0xc]
10007775:	cmp    esi,edi
10007777:	mov    DWORD PTR [esp+0x30],eax
1000777b:	mov    eax,DWORD PTR [ebp+0x8]
1000777e:	sete   dl
10007781:	cmp    BYTE PTR [eax+0x8],0x0
10007785:	mov    DWORD PTR [esp+0x34],ecx
10007789:	mov    BYTE PTR [esp+0x38],dl
1000778d:	je     0x100077a3
1000778f:	push   0x8
10007791:	lea    ecx,[esp+0x1c]
10007795:	push   0x1005557c
1000779a:	push   ecx
1000779b:	call   0x1001789e
100077a0:	add    esp,0xc
100077a3:	mov    eax,0x24
100077a8:	lea    ecx,[esp+0x18]
100077ac:	jmp    0x100077ef
100077ae:	mov    edx,DWORD PTR [ebp+0xc]
100077b1:	mov    eax,DWORD PTR [ebp+0x10]
100077b4:	cmp    esi,edi
100077b6:	mov    DWORD PTR [esp+0x50],edx
100077ba:	mov    edx,DWORD PTR [ebp+0x8]
100077bd:	mov    DWORD PTR [esp+0x4c],ecx
100077c1:	sete   cl
100077c4:	cmp    BYTE PTR [edx+0x8],0x0
100077c8:	mov    DWORD PTR [esp+0x54],eax
100077cc:	mov    BYTE PTR [esp+0x58],cl
100077d0:	je     0x100077e6
100077d2:	push   0x8
100077d4:	lea    eax,[esp+0x40]
100077d8:	push   0x1005557c
100077dd:	push   eax
100077de:	call   0x1001789e
100077e3:	add    esp,0xc
100077e6:	mov    eax,0x20
100077eb:	lea    ecx,[esp+0x3c]
100077ef:	push   0x0
100077f1:	lea    edx,[esp+0x14]
100077f5:	push   edx
100077f6:	push   eax
100077f7:	push   ecx
100077f8:	push   ebx
100077f9:	call   DWORD PTR ds:0x1002c0ac
100077ff:	test   eax,eax
10007801:	jne    0x10007817
10007803:	xor    eax,eax
10007805:	pop    esi
10007806:	mov    ecx,DWORD PTR [esp+0x58]
1000780a:	xor    ecx,esp
1000780c:	call   0x10015adb
10007811:	mov    esp,ebp
10007813:	pop    ebp
10007814:	ret    0xc
10007817:	mov    ecx,DWORD PTR [ebp+0xc]
1000781a:	push   0x0
1000781c:	lea    eax,[esp+0x14]
10007820:	push   eax
10007821:	push   ecx
10007822:	push   esi
10007823:	push   ebx
10007824:	call   DWORD PTR ds:0x1002c0ac
1000782a:	test   eax,eax
1000782c:	je     0x10007803
1000782e:	mov    esi,DWORD PTR ds:0x1002c068
10007834:	xor    eax,eax
10007836:	push   eax
10007837:	lea    edx,[esp+0x18]
1000783b:	push   edx
1000783c:	mov    DWORD PTR [esp+0x10],eax
10007840:	mov    DWORD PTR [esp+0x14],eax
10007844:	push   0x8
10007846:	lea    eax,[esp+0x14]
1000784a:	push   eax
1000784b:	push   ebx
1000784c:	call   esi
1000784e:	test   eax,eax
10007850:	je     0x10007803
10007852:	cmp    DWORD PTR [esp+0x8],0x0
10007857:	je     0x10007803
10007859:	mov    eax,DWORD PTR [esp+0xc]
1000785d:	cmp    eax,DWORD PTR [ebp+0x10]
10007860:	ja     0x10007803
10007862:	test   eax,eax
10007864:	je     0x10007876
10007866:	push   0x0
10007868:	lea    ecx,[esp+0x18]
1000786c:	push   ecx
1000786d:	push   eax
1000786e:	push   edi
1000786f:	push   ebx
10007870:	call   esi
10007872:	test   eax,eax
10007874:	je     0x10007803
10007876:	mov    ecx,DWORD PTR [esp+0x5c]
1000787a:	pop    esi
1000787b:	xor    ecx,esp
1000787d:	mov    eax,0x1
10007882:	call   0x10015adb
10007887:	mov    esp,ebp
10007889:	pop    ebp
1000788a:	ret    0xc
1000788d:	int3   
1000788e:	int3   
1000788f:	int3   
10007890:	mov    eax,DWORD PTR [ecx]
10007892:	mov    DWORD PTR [ecx],0x0
10007898:	ret    
10007899:	int3   
1000789a:	int3   
1000789b:	int3   
1000789c:	int3   
1000789d:	int3   
1000789e:	int3   
1000789f:	int3   
100078a0:	mov    ecx,DWORD PTR [eax]
100078a2:	push   ecx
100078a3:	call   0x10015ad6
100078a8:	pop    ecx
100078a9:	ret    
100078aa:	int3   
100078ab:	int3   
100078ac:	int3   
100078ad:	int3   
100078ae:	int3   
100078af:	int3   
100078b0:	jmp    0x1001708e
100078b5:	int3   
100078b6:	int3   
100078b7:	int3   
100078b8:	int3   
100078b9:	int3   
100078ba:	int3   
100078bb:	int3   
100078bc:	int3   
100078bd:	int3   
100078be:	int3   
100078bf:	int3   
100078c0:	jmp    0x10017223
100078c5:	int3   
100078c6:	int3   
100078c7:	int3   
100078c8:	int3   
100078c9:	int3   
100078ca:	int3   
100078cb:	int3   
100078cc:	int3   
100078cd:	int3   
100078ce:	int3   
100078cf:	int3   
100078d0:	push   ecx
100078d1:	xor    eax,eax
100078d3:	cmp    WORD PTR [esp+0x8],ax
100078d8:	mov    DWORD PTR [esp],eax
100078db:	je     0x100078f0
100078dd:	mov    DWORD PTR [esp+0x8],eax
100078e1:	push   0x10058b78
100078e6:	lea    eax,[esp+0xc]
100078ea:	push   eax
100078eb:	call   0x100161ce
100078f0:	push   0x25
100078f2:	push   0x10056714
100078f7:	push   0xbf4
100078fc:	push   0x10055b20
10007901:	push   esi
10007902:	call   0x1000b590
10007907:	add    esp,0x14
1000790a:	mov    eax,esi
1000790c:	pop    ecx
1000790d:	ret    
1000790e:	int3   
1000790f:	int3   
10007910:	push   ecx
10007911:	xor    eax,eax
10007913:	cmp    WORD PTR [esp+0x8],ax
10007918:	mov    DWORD PTR [esp],eax
1000791b:	je     0x10007930
1000791d:	mov    DWORD PTR [esp+0x8],eax
10007921:	push   0x10058b78
10007926:	lea    eax,[esp+0xc]
1000792a:	push   eax
1000792b:	call   0x100161ce
10007930:	push   0x25
10007932:	push   0x10056794
10007937:	push   0x53
10007939:	push   0x10056740
1000793e:	push   esi
1000793f:	call   0x1000b590
10007944:	add    esp,0x14
10007947:	mov    eax,esi
10007949:	pop    ecx
1000794a:	ret    
1000794b:	int3   
1000794c:	int3   
1000794d:	int3   
1000794e:	int3   
1000794f:	int3   
10007950:	sub    esp,0x8
10007953:	xor    eax,eax
10007955:	cmp    WORD PTR [esp+0xc],ax
1000795a:	mov    DWORD PTR [esp+0x4],eax
1000795e:	je     0x10007973
10007960:	mov    DWORD PTR [esp+0xc],eax
10007964:	push   0x10058b78
10007969:	lea    eax,[esp+0x10]
1000796d:	push   eax
1000796e:	call   0x100161ce
10007973:	push   0x25
10007975:	push   0x10056850
1000797a:	push   0x8e
1000797f:	push   0x100567c0
10007984:	push   esi
10007985:	call   0x1000b590
1000798a:	add    esp,0x14
1000798d:	mov    eax,esi
1000798f:	add    esp,0x8
10007992:	ret    
10007993:	int3   
10007994:	int3   
10007995:	int3   
10007996:	int3   
10007997:	int3   
10007998:	int3   
10007999:	int3   
1000799a:	int3   
1000799b:	int3   
1000799c:	int3   
1000799d:	int3   
1000799e:	int3   
1000799f:	int3   
100079a0:	mov    DWORD PTR [ecx],0x1005709c
100079a6:	ret    
100079a7:	int3   
100079a8:	int3   
100079a9:	int3   
100079aa:	int3   
100079ab:	int3   
100079ac:	int3   
100079ad:	int3   
100079ae:	int3   
100079af:	int3   
100079b0:	test   BYTE PTR [esp+0x4],0x1
100079b5:	push   esi
100079b6:	mov    esi,ecx
100079b8:	mov    DWORD PTR [esi],0x1005709c
100079be:	je     0x100079c9
100079c0:	push   esi
100079c1:	call   0x10015ad6
100079c6:	add    esp,0x4
100079c9:	mov    eax,esi
100079cb:	pop    esi
100079cc:	ret    0x4
100079cf:	int3   
100079d0:	push   0xffffffff
100079d2:	push   0x1002a928
100079d7:	mov    eax,fs:0x0
100079dd:	push   eax
100079de:	push   esi
100079df:	mov    eax,ds:0x10064694
100079e4:	xor    eax,esp
100079e6:	push   eax
100079e7:	lea    eax,[esp+0x8]
100079eb:	mov    fs:0x0,eax
100079f1:	mov    esi,DWORD PTR [esp+0x18]
100079f5:	mov    eax,DWORD PTR [esp+0x1c]
100079f9:	mov    DWORD PTR [esp+0x10],0x0
10007a01:	mov    DWORD PTR [esi],0x100570a8
10007a07:	mov    eax,DWORD PTR [eax]
10007a09:	sub    eax,0x10
10007a0c:	push   eax
10007a0d:	call   0x10004970
10007a12:	add    esp,0x4
10007a15:	add    eax,0x10
10007a18:	mov    DWORD PTR [esi+0x4],eax
10007a1b:	mov    eax,esi
10007a1d:	mov    ecx,DWORD PTR [esp+0x8]
10007a21:	mov    DWORD PTR fs:0x0,ecx
10007a28:	pop    ecx
10007a29:	pop    esi
10007a2a:	add    esp,0xc
10007a2d:	ret    0x8
10007a30:	mov    ecx,DWORD PTR [ecx+0x4]
10007a33:	push   ecx
10007a34:	call   DWORD PTR ds:0x1002c098
10007a3a:	test   eax,eax
10007a3c:	jne    0x10007a43
10007a3e:	xor    edx,edx
10007a40:	ret    0x4
10007a43:	mov    ecx,DWORD PTR [esp+0x4]
10007a47:	push   ecx
10007a48:	push   eax
10007a49:	call   DWORD PTR ds:0x1002c044
10007a4f:	xor    edx,edx
10007a51:	ret    0x4
10007a54:	int3   
10007a55:	int3   
10007a56:	int3   
10007a57:	int3   
10007a58:	int3   
10007a59:	int3   
10007a5a:	int3   
10007a5b:	int3   
10007a5c:	int3   
10007a5d:	int3   
10007a5e:	int3   
10007a5f:	int3   
10007a60:	push   esi
10007a61:	mov    esi,ecx
10007a63:	mov    eax,DWORD PTR [esi+0x4]
10007a66:	sub    eax,0x10
10007a69:	lea    ecx,[eax+0xc]
10007a6c:	or     edx,0xffffffff
10007a6f:	lock xadd DWORD PTR [ecx],edx
10007a73:	dec    edx
10007a74:	test   edx,edx
10007a76:	jg     0x10007a82
10007a78:	mov    ecx,DWORD PTR [eax]
10007a7a:	mov    edx,DWORD PTR [ecx]
10007a7c:	push   eax
10007a7d:	mov    eax,DWORD PTR [edx+0x4]
10007a80:	call   eax
10007a82:	test   BYTE PTR [esp+0x8],0x1
10007a87:	mov    DWORD PTR [esi],0x1005709c
10007a8d:	je     0x10007a98
10007a8f:	push   esi
10007a90:	call   0x10015ad6
10007a95:	add    esp,0x4
10007a98:	mov    eax,esi
10007a9a:	pop    esi
10007a9b:	ret    0x4
10007a9e:	int3   
10007a9f:	int3   
10007aa0:	push   0xffffffff
10007aa2:	push   0x1002ab93
10007aa7:	mov    eax,fs:0x0
10007aad:	push   eax
10007aae:	push   ecx
10007aaf:	push   esi
10007ab0:	mov    eax,ds:0x10064694
10007ab5:	xor    eax,esp
10007ab7:	push   eax
10007ab8:	lea    eax,[esp+0xc]
10007abc:	mov    fs:0x0,eax
10007ac2:	xor    esi,esi
10007ac4:	push   0x8
10007ac6:	mov    DWORD PTR [esp+0x18],esi
10007aca:	call   0x10016414
10007acf:	add    esp,0x4
10007ad2:	mov    DWORD PTR [esp+0x8],eax
10007ad6:	cmp    eax,esi
10007ad8:	mov    BYTE PTR [esp+0x14],0x1
10007add:	je     0x10007aec
10007adf:	lea    ecx,[esp+0x1c]
10007ae3:	push   ecx
10007ae4:	push   eax
10007ae5:	call   0x100079d0
10007aea:	mov    esi,eax
10007aec:	mov    DWORD PTR [esp+0x14],0xffffffff
10007af4:	mov    eax,DWORD PTR [esp+0x1c]
10007af8:	add    eax,0xfffffff0
10007afb:	lea    edx,[eax+0xc]
10007afe:	or     ecx,0xffffffff
10007b01:	lock xadd DWORD PTR [edx],ecx
10007b05:	dec    ecx
10007b06:	test   ecx,ecx
10007b08:	jg     0x10007b14
10007b0a:	mov    ecx,DWORD PTR [eax]
10007b0c:	mov    edx,DWORD PTR [ecx]
10007b0e:	push   eax
10007b0f:	mov    eax,DWORD PTR [edx+0x4]
10007b12:	call   eax
10007b14:	mov    eax,esi
10007b16:	mov    ecx,DWORD PTR [esp+0xc]
10007b1a:	mov    DWORD PTR fs:0x0,ecx
10007b21:	pop    ecx
10007b22:	pop    esi
10007b23:	add    esp,0x10
10007b26:	ret    
10007b27:	int3   
10007b28:	int3   
10007b29:	int3   
10007b2a:	int3   
10007b2b:	int3   
10007b2c:	int3   
10007b2d:	int3   
10007b2e:	int3   
10007b2f:	int3   
10007b30:	mov    eax,DWORD PTR [eax]
10007b32:	ret    
10007b33:	int3   
10007b34:	int3   
10007b35:	int3   
10007b36:	int3   
10007b37:	int3   
10007b38:	int3   
10007b39:	int3   
10007b3a:	int3   
10007b3b:	int3   
10007b3c:	int3   
10007b3d:	int3   
10007b3e:	int3   
10007b3f:	int3   
10007b40:	push   esi
10007b41:	mov    esi,eax
10007b43:	call   0x10007c50
10007b48:	mov    ecx,esi
10007b4a:	pop    esi
10007b4b:	jmp    0x1000a130
10007b50:	push   0xffffffff
10007b52:	push   0x1002ad48
10007b57:	mov    eax,fs:0x0
10007b5d:	push   eax
10007b5e:	sub    esp,0x28
10007b61:	push   ebx
10007b62:	push   ebp
10007b63:	push   esi
10007b64:	push   edi
10007b65:	mov    eax,ds:0x10064694
10007b6a:	xor    eax,esp
10007b6c:	push   eax
10007b6d:	lea    eax,[esp+0x3c]
10007b71:	mov    fs:0x0,eax
10007b77:	mov    esi,ecx
10007b79:	call   DWORD PTR ds:0x1002c138
10007b7f:	mov    DWORD PTR [esp+0x18],eax
10007b83:	call   0x10007c50
10007b88:	push   0x0
10007b8a:	push   0x4
10007b8c:	call   0x10015390
10007b91:	mov    edi,eax
10007b93:	mov    DWORD PTR [esp+0x1c],edi
10007b97:	cmp    edi,0xffffffff
10007b9a:	mov    DWORD PTR [esp+0x44],0x0
10007ba2:	jne    0x10007bad
10007ba4:	call   DWORD PTR ds:0x1002c07c
10007baa:	push   edi
10007bab:	jmp    0x10007c1c
10007bad:	lea    eax,[esp+0x20]
10007bb1:	push   eax
10007bb2:	push   edi
10007bb3:	mov    DWORD PTR [esp+0x28],0x1c
10007bbb:	call   0x100153a2
10007bc0:	test   eax,eax
10007bc2:	je     0x10007c11
10007bc4:	mov    ebx,DWORD PTR ds:0x1002c11c
10007bca:	mov    ebp,DWORD PTR ds:0x1002c134
10007bd0:	mov    ecx,DWORD PTR [esp+0x4c]
10007bd4:	cmp    DWORD PTR [esp+0x2c],ecx
10007bd8:	jne    0x10007c02
10007bda:	mov    eax,DWORD PTR [esp+0x28]
10007bde:	cmp    DWORD PTR [esp+0x18],eax
10007be2:	je     0x10007c02
10007be4:	push   eax
10007be5:	push   0x0
10007be7:	push   0x2
10007be9:	call   ebx
10007beb:	lea    edx,[esp+0x14]
10007bef:	push   edx
10007bf0:	mov    ecx,esi
10007bf2:	mov    DWORD PTR [esp+0x18],eax
10007bf6:	call   0x1000a0e0
10007bfb:	mov    eax,DWORD PTR [esp+0x14]
10007bff:	push   eax
10007c00:	call   ebp
10007c02:	lea    ecx,[esp+0x20]
10007c06:	push   ecx
10007c07:	push   edi
10007c08:	call   0x100153a8
10007c0d:	test   eax,eax
10007c0f:	jne    0x10007bd0
10007c11:	test   edi,edi
10007c13:	je     0x10007c2b
10007c15:	call   DWORD PTR ds:0x1002c07c
10007c1b:	push   edi
10007c1c:	mov    esi,eax
10007c1e:	call   DWORD PTR ds:0x1002c058
10007c24:	push   esi
10007c25:	call   DWORD PTR ds:0x1002c078
10007c2b:	mov    ecx,DWORD PTR [esp+0x3c]
10007c2f:	mov    DWORD PTR fs:0x0,ecx
10007c36:	pop    ecx
10007c37:	pop    edi
10007c38:	pop    esi
10007c39:	pop    ebp
10007c3a:	pop    ebx
10007c3b:	add    esp,0x34
10007c3e:	ret    0x4
10007c41:	int3   
10007c42:	int3   
10007c43:	int3   
10007c44:	int3   
10007c45:	int3   
10007c46:	int3   
10007c47:	int3   
10007c48:	int3   
10007c49:	int3   
10007c4a:	int3   
10007c4b:	int3   
10007c4c:	int3   
10007c4d:	int3   
10007c4e:	int3   
10007c4f:	int3   
10007c50:	mov    ecx,esi
10007c52:	call   0x1000a090
10007c57:	test   eax,eax
10007c59:	je     0x10007c9c
10007c5b:	push   ebx
10007c5c:	mov    ebx,DWORD PTR ds:0x1002c058
10007c62:	push   edi
10007c63:	mov    edi,DWORD PTR ds:0x1002c13c
10007c69:	lea    esp,[esp+0x0]
10007c70:	mov    ecx,esi
10007c72:	call   0x1000a0b0
10007c77:	mov    eax,DWORD PTR [eax]
10007c79:	push   eax
10007c7a:	call   edi
10007c7c:	mov    ecx,esi
10007c7e:	call   0x1000a0b0
10007c83:	mov    ecx,DWORD PTR [eax]
10007c85:	push   ecx
10007c86:	call   ebx
10007c88:	mov    ecx,esi
10007c8a:	call   0x1000a110
10007c8f:	mov    ecx,esi
10007c91:	call   0x1000a090
10007c96:	test   eax,eax
10007c98:	jne    0x10007c70
10007c9a:	pop    edi
10007c9b:	pop    ebx
10007c9c:	ret    
10007c9d:	int3   
10007c9e:	int3   
10007c9f:	int3   
10007ca0:	push   0xffffffff
10007ca2:	push   0x1002ad1a
10007ca7:	mov    eax,fs:0x0
10007cad:	push   eax
10007cae:	sub    esp,0x24
10007cb1:	push   ebx
10007cb2:	push   ebp
10007cb3:	push   esi
10007cb4:	push   edi
10007cb5:	mov    eax,ds:0x10064694
10007cba:	xor    eax,esp
10007cbc:	push   eax
10007cbd:	lea    eax,[esp+0x38]
10007cc1:	mov    fs:0x0,eax
10007cc7:	mov    esi,ecx
10007cc9:	mov    edi,DWORD PTR [esp+0x48]
10007ccd:	xor    ebx,ebx
10007ccf:	mov    DWORD PTR [esp+0x14],ebx
10007cd3:	mov    DWORD PTR [edi],ebx
10007cd5:	mov    DWORD PTR [esp+0x40],ebx
10007cd9:	lea    ecx,[edi+0x894]
10007cdf:	push   ebx
10007ce0:	mov    DWORD PTR [edi+0x4],esi
10007ce3:	mov    DWORD PTR [edi+0x888],ebx
10007ce9:	mov    BYTE PTR [edi+0x890],bl
10007cef:	call   0x1000f950
10007cf4:	push   esi
10007cf5:	push   ebx
10007cf6:	push   0x1f0fff
10007cfb:	mov    BYTE PTR [esp+0x4c],0x1
10007d00:	call   DWORD PTR ds:0x1002c054
10007d06:	mov    esi,DWORD PTR [edi]
10007d08:	test   esi,esi
10007d0a:	mov    ebp,eax
10007d0c:	je     0x10007d2a
10007d0e:	call   DWORD PTR ds:0x1002c07c
10007d14:	push   esi
10007d15:	mov    DWORD PTR [esp+0x18],eax
10007d19:	call   DWORD PTR ds:0x1002c058
10007d1f:	mov    eax,DWORD PTR [esp+0x14]
10007d23:	push   eax
10007d24:	call   DWORD PTR ds:0x1002c078
10007d2a:	push   0x8
10007d2c:	mov    DWORD PTR [edi],ebp
10007d2e:	call   0x10016414
10007d33:	mov    ebp,eax
10007d35:	add    esp,0x4
10007d38:	mov    DWORD PTR [esp+0x18],ebp
10007d3c:	test   ebp,ebp
10007d3e:	mov    BYTE PTR [esp+0x40],0x2
10007d43:	je     0x10007d6b
10007d45:	push   0x0
10007d47:	lea    esi,[esp+0x20]
10007d4b:	call   0x100078d0
10007d50:	add    esp,0x4
10007d53:	mov    BYTE PTR [esp+0x40],0x3
10007d58:	mov    ebx,0x1
10007d5d:	push   ebp
10007d5e:	mov    ecx,eax
10007d60:	mov    DWORD PTR [esp+0x18],ebx
10007d64:	call   0x1000c4e0
10007d69:	jmp    0x10007d6d
10007d6b:	xor    eax,eax
10007d6d:	push   eax
10007d6e:	lea    ecx,[edi+0x894]
10007d74:	call   0x10009fd0
10007d79:	test   bl,0x1
10007d7c:	je     0x10007d92
10007d7e:	cmp    DWORD PTR [esp+0x34],0x10
10007d83:	jb     0x10007d92
10007d85:	mov    ecx,DWORD PTR [esp+0x20]
10007d89:	push   ecx
10007d8a:	call   0x10015ad6
10007d8f:	add    esp,0x4
10007d92:	mov    eax,edi
10007d94:	mov    ecx,DWORD PTR [esp+0x38]
10007d98:	mov    DWORD PTR fs:0x0,ecx
10007d9f:	pop    ecx
10007da0:	pop    edi
10007da1:	pop    esi
10007da2:	pop    ebp
10007da3:	pop    ebx
10007da4:	add    esp,0x30
10007da7:	ret    0x4
10007daa:	int3   
10007dab:	int3   
10007dac:	int3   
10007dad:	int3   
10007dae:	int3   
10007daf:	int3   
10007db0:	push   0xffffffff
10007db2:	push   0x1002acbe
10007db7:	mov    eax,fs:0x0
10007dbd:	push   eax
10007dbe:	sub    esp,0x98
10007dc4:	push   ebx
10007dc5:	push   ebp
10007dc6:	push   esi
10007dc7:	push   edi
10007dc8:	mov    eax,ds:0x10064694
10007dcd:	xor    eax,esp
10007dcf:	push   eax
10007dd0:	lea    eax,[esp+0xac]
10007dd7:	mov    fs:0x0,eax
10007ddd:	mov    ebx,ecx
10007ddf:	mov    ebp,DWORD PTR [esp+0xbc]
10007de6:	mov    esi,DWORD PTR [ebp+0x3c]
10007de9:	mov    ecx,DWORD PTR [esi+ebp*1+0x50]
10007ded:	mov    edx,DWORD PTR [esi+ebp*1+0x34]
10007df1:	mov    eax,DWORD PTR [ebx]
10007df3:	push   0x40
10007df5:	add    esi,ebp
10007df7:	push   0x3000
10007dfc:	push   ecx
10007dfd:	push   edx
10007dfe:	push   eax
10007dff:	call   DWORD PTR ds:0x1002c110
10007e05:	mov    edi,eax
10007e07:	test   edi,edi
10007e09:	jne    0x10007e75
10007e0b:	mov    ecx,DWORD PTR [esi+0x50]
10007e0e:	mov    eax,DWORD PTR [ebx]
10007e10:	push   0x40
10007e12:	push   0x3000
10007e17:	push   ecx
10007e18:	push   edi
10007e19:	push   eax
10007e1a:	call   DWORD PTR ds:0x1002c110
10007e20:	mov    edi,eax
10007e22:	test   edi,edi
10007e24:	jne    0x10007e75
10007e26:	xor    esi,esi
10007e28:	push   esi
10007e29:	push   0x10055592
10007e2e:	lea    ecx,[esp+0x28]
10007e32:	mov    DWORD PTR [esp+0x40],0xf
10007e3a:	mov    DWORD PTR [esp+0x3c],esi
10007e3e:	mov    BYTE PTR [esp+0x2c],0x0
10007e43:	call   0x10003900
10007e48:	lea    edx,[esp+0x20]
10007e4c:	push   edx
10007e4d:	lea    eax,[esp+0x5c]
10007e51:	push   eax
10007e52:	mov    DWORD PTR [esp+0xbc],esi
10007e59:	call   0x10001490
10007e5e:	push   0x10058bb4
10007e63:	lea    ecx,[esp+0x5c]
10007e67:	push   ecx
10007e68:	mov    DWORD PTR [esp+0x60],0x10057090
10007e70:	call   0x100161ce
10007e75:	mov    eax,DWORD PTR [ebx]
10007e77:	lea    edx,[esp+0x1c]
10007e7b:	push   edx
10007e7c:	mov    DWORD PTR [esp+0x20],0x0
10007e84:	mov    ecx,DWORD PTR [esi+0x54]
10007e87:	push   ecx
10007e88:	push   ebp
10007e89:	push   edi
10007e8a:	push   eax
10007e8b:	call   DWORD PTR ds:0x1002c128
10007e91:	test   eax,eax
10007e93:	jne    0x10007ef1
10007e95:	call   DWORD PTR ds:0x1002c07c
10007e9b:	push   0x0
10007e9d:	push   0x10055592
10007ea2:	lea    ecx,[esp+0x28]
10007ea6:	mov    DWORD PTR [esp+0x40],0xf
10007eae:	mov    DWORD PTR [esp+0x3c],0x0
10007eb6:	mov    BYTE PTR [esp+0x2c],0x0
10007ebb:	call   0x10003900
10007ec0:	lea    edx,[esp+0x20]
10007ec4:	push   edx
10007ec5:	lea    eax,[esp+0x5c]
10007ec9:	push   eax
10007eca:	mov    DWORD PTR [esp+0xbc],0x1
10007ed5:	call   0x10001490
10007eda:	push   0x10058bb4
10007edf:	lea    ecx,[esp+0x5c]
10007ee3:	push   ecx
10007ee4:	mov    DWORD PTR [esp+0x60],0x10057090
10007eec:	call   0x100161ce
10007ef1:	movzx  eax,WORD PTR [esi+0x6]
10007ef5:	sub    eax,0x1
10007ef8:	movzx  edx,WORD PTR [esi+0x14]
10007efc:	lea    ebp,[edx+esi*1+0x18]
10007f00:	mov    DWORD PTR [esp+0x18],0x0
10007f08:	js     0x10007f51
10007f0a:	add    ebp,0x10
10007f0d:	lea    ecx,[ecx+0x0]
10007f10:	mov    ecx,DWORD PTR [ebp+0x0]
10007f13:	test   ecx,ecx
10007f15:	je     0x10007f38
10007f17:	mov    edx,DWORD PTR [ebp-0x4]
10007f1a:	mov    eax,DWORD PTR [ebx]
10007f1c:	push   0x0
10007f1e:	push   ecx
10007f1f:	mov    ecx,DWORD PTR [ebp+0x4]
10007f22:	add    ecx,DWORD PTR [esp+0xc4]
10007f29:	add    edx,edi
10007f2b:	push   ecx
10007f2c:	push   edx
10007f2d:	push   eax
10007f2e:	call   DWORD PTR ds:0x1002c128
10007f34:	test   eax,eax
10007f36:	je     0x10007f7c
10007f38:	movzx  ecx,WORD PTR [esi+0x6]
10007f3c:	mov    eax,DWORD PTR [esp+0x18]
10007f40:	add    eax,0x1
10007f43:	sub    ecx,0x1
10007f46:	add    ebp,0x28
10007f49:	cmp    eax,ecx
10007f4b:	mov    DWORD PTR [esp+0x18],eax
10007f4f:	jle    0x10007f10
10007f51:	mov    eax,edi
10007f53:	cdq    
10007f54:	mov    DWORD PTR [ebx+0x70],eax
10007f57:	mov    DWORD PTR [ebx+0x74],edx
10007f5a:	mov    edx,DWORD PTR [esi+0x50]
10007f5d:	mov    DWORD PTR [ebx+0x78],edx
10007f60:	mov    ecx,DWORD PTR [esp+0xac]
10007f67:	mov    DWORD PTR fs:0x0,ecx
10007f6e:	pop    ecx
10007f6f:	pop    edi
10007f70:	pop    esi
10007f71:	pop    ebp
10007f72:	pop    ebx
10007f73:	add    esp,0xa4
10007f79:	ret    0x4
10007f7c:	call   DWORD PTR ds:0x1002c07c
10007f82:	mov    ebx,DWORD PTR [ebx]
10007f84:	push   0x8000
10007f89:	push   0x0
10007f8b:	push   edi
10007f8c:	push   ebx
10007f8d:	call   DWORD PTR ds:0x1002c124
10007f93:	push   0x0
10007f95:	push   0x10055592
10007f9a:	lea    ecx,[esp+0x44]
10007f9e:	mov    DWORD PTR [esp+0x5c],0xf
10007fa6:	mov    DWORD PTR [esp+0x58],0x0
10007fae:	mov    BYTE PTR [esp+0x48],0x0
10007fb3:	call   0x10003900
10007fb8:	lea    edx,[esp+0x3c]
10007fbc:	push   edx
10007fbd:	lea    eax,[esp+0x84]
10007fc4:	push   eax
10007fc5:	mov    DWORD PTR [esp+0xbc],0x2
10007fd0:	call   0x10001490
10007fd5:	push   0x10058bb4
10007fda:	lea    ecx,[esp+0x84]
10007fe1:	push   ecx
10007fe2:	mov    DWORD PTR [esp+0x88],0x10057090
10007fed:	call   0x100161ce
10007ff2:	int3   
10007ff3:	int3   
10007ff4:	int3   
10007ff5:	int3   
10007ff6:	int3   
10007ff7:	int3   
10007ff8:	int3   
10007ff9:	int3   
10007ffa:	int3   
10007ffb:	int3   
10007ffc:	int3   
10007ffd:	int3   
10007ffe:	int3   
10007fff:	int3   
10008000:	mov    eax,DWORD PTR [esp+0x4]
10008004:	push   esi
10008005:	push   eax
10008006:	mov    esi,ecx
10008008:	call   0x10001510
1000800d:	mov    DWORD PTR [esi],0x10057090
10008013:	mov    eax,esi
10008015:	pop    esi
10008016:	ret    0x4
10008019:	int3   
1000801a:	int3   
1000801b:	int3   
1000801c:	int3   
1000801d:	int3   
1000801e:	int3   
1000801f:	int3   
10008020:	push   0xffffffff
10008022:	push   0x1002b1fe
10008027:	mov    eax,fs:0x0
1000802d:	push   eax
1000802e:	sub    esp,0xa8
10008034:	push   ebx
10008035:	push   ebp
10008036:	push   esi
10008037:	mov    eax,ds:0x10064694
1000803c:	xor    eax,esp
1000803e:	push   eax
1000803f:	lea    eax,[esp+0xb8]
10008046:	mov    fs:0x0,eax
1000804c:	lea    eax,[esp+0x18]
10008050:	push   eax
10008051:	call   DWORD PTR ds:0x1002c0f8
10008057:	lea    ecx,[esp+0x38]
1000805b:	push   ecx
1000805c:	lea    edx,[esp+0x1c]
10008060:	push   edx
10008061:	call   DWORD PTR ds:0x1002c0e8
10008067:	mov    ecx,DWORD PTR [esp+0x38]
1000806b:	mov    eax,DWORD PTR [esp+0x3c]
1000806f:	sub    ecx,0x2a69c000
10008075:	push   0x2
10008077:	sbb    eax,0xc9
1000807c:	xor    ebx,ebx
1000807e:	push   ebx
1000807f:	push   ebx
10008080:	mov    DWORD PTR [edi+0x80],ecx
10008086:	lea    ecx,[esp+0x40]
1000808a:	mov    DWORD PTR [edi+0x84],eax
10008090:	mov    eax,DWORD PTR [edi]
10008092:	push   ecx
10008093:	push   eax
10008094:	push   eax
10008095:	mov    DWORD PTR [esp+0x4c],ebx
10008099:	call   DWORD PTR ds:0x1002c0d0
1000809f:	push   eax
100080a0:	call   DWORD PTR ds:0x1002c140
100080a6:	mov    eax,DWORD PTR [esp+0x34]
100080aa:	push   0x10056878
100080af:	cdq    
100080b0:	push   0x9
100080b2:	push   0x100568b0
100080b7:	mov    DWORD PTR [edi+0x68],eax
100080ba:	mov    DWORD PTR [edi+0x6c],edx
100080bd:	call   0x10003540
100080c2:	add    esp,0x8
100080c5:	mov    ecx,esp
100080c7:	mov    DWORD PTR [esp+0x3c],esp
100080cb:	push   eax
100080cc:	call   0x10002d50
100080d1:	call   0x10007aa0
100080d6:	add    esp,0x4
100080d9:	push   eax
100080da:	lea    ecx,[esp+0x18]
100080de:	call   0x1000f950
100080e3:	lea    ecx,[esp+0x14]
100080e7:	mov    DWORD PTR [esp+0xc0],ebx
100080ee:	call   0x10009fb0
100080f3:	push   0x100568c4
100080f8:	mov    esi,eax
100080fa:	mov    ebp,DWORD PTR [esi]
100080fc:	push   0xd
100080fe:	push   0x100568f8
10008103:	call   0x10003340
10008108:	mov    edx,DWORD PTR [ebp+0x0]
1000810b:	add    esp,0xc
1000810e:	push   eax
1000810f:	mov    ecx,esi
10008111:	call   edx
10008113:	lea    ecx,[esp+0x14]
10008117:	mov    DWORD PTR [esp+0x58],eax
1000811b:	call   0x10009fb0
10008120:	push   0x10056908
10008125:	mov    esi,eax
10008127:	mov    ebp,DWORD PTR [esi]
10008129:	push   0xf
1000812b:	push   0x10056938
10008130:	call   0x10003340
10008135:	add    esp,0xc
10008138:	push   eax
10008139:	mov    eax,DWORD PTR [ebp+0x0]
1000813c:	mov    ecx,esi
1000813e:	call   eax
10008140:	lea    ecx,[esp+0x14]
10008144:	mov    DWORD PTR [esp+0x48],eax
10008148:	call   0x10009fb0
1000814d:	mov    esi,eax
1000814f:	mov    ebp,DWORD PTR [esi]
10008151:	push   0x10056948
10008156:	push   0xe
10008158:	push   0x10056988
1000815d:	call   0x10003340
10008162:	mov    edx,DWORD PTR [ebp+0x0]
10008165:	add    esp,0xc
10008168:	push   eax
10008169:	mov    ecx,esi
1000816b:	call   edx
1000816d:	lea    ecx,[esp+0x14]
10008171:	mov    DWORD PTR [esp+0x50],eax
10008175:	call   0x10009fb0
1000817a:	push   0x10056998
1000817f:	mov    esi,eax
10008181:	mov    ebp,DWORD PTR [esi]
10008183:	push   0x12
10008185:	push   0x100569d0
1000818a:	call   0x10003340
1000818f:	add    esp,0xc
10008192:	push   eax
10008193:	mov    eax,DWORD PTR [ebp+0x0]
10008196:	mov    ecx,esi
10008198:	call   eax
1000819a:	lea    ecx,[esp+0x14]
1000819e:	mov    DWORD PTR [esp+0x5c],eax
100081a2:	call   0x10009fb0
100081a7:	push   0x100569e4
100081ac:	mov    esi,eax
100081ae:	mov    ebp,DWORD PTR [esi]
100081b0:	push   0x14
100081b2:	push   0x10056a14
100081b7:	call   0x10003340
100081bc:	mov    edx,DWORD PTR [ebp+0x0]
100081bf:	add    esp,0xc
100081c2:	push   eax
100081c3:	mov    ecx,esi
100081c5:	call   edx
100081c7:	lea    ecx,[esp+0x14]
100081cb:	mov    DWORD PTR [esp+0x4c],eax
100081cf:	call   0x10009fb0
100081d4:	push   0x10056a2c
100081d9:	mov    esi,eax
100081db:	mov    ebp,DWORD PTR [esi]
100081dd:	push   0xa
100081df:	push   0x10056a68
100081e4:	call   0x10003340
100081e9:	add    esp,0xc
100081ec:	push   eax
100081ed:	mov    eax,DWORD PTR [ebp+0x0]
100081f0:	mov    ecx,esi
100081f2:	call   eax
100081f4:	lea    ecx,[esp+0x14]
100081f8:	mov    DWORD PTR [esp+0x54],eax
100081fc:	call   0x10009fb0
10008201:	push   0x10056a74
10008206:	mov    esi,eax
10008208:	mov    ebp,DWORD PTR [esi]
1000820a:	push   0x15
1000820c:	push   0x10056aa8
10008211:	call   0x10003340
10008216:	mov    edx,DWORD PTR [ebp+0x0]
10008219:	add    esp,0xc
1000821c:	push   eax
1000821d:	mov    ecx,esi
1000821f:	call   edx
10008221:	lea    ecx,[esp+0x14]
10008225:	mov    DWORD PTR [esp+0x40],eax
10008229:	call   0x10009fb0
1000822e:	push   0x10056ac0
10008233:	mov    esi,eax
10008235:	mov    ebp,DWORD PTR [esi]
10008237:	push   0x7
10008239:	push   0x10056af0
1000823e:	call   0x10003340
10008243:	add    esp,0xc
10008246:	push   eax
10008247:	mov    eax,DWORD PTR [ebp+0x0]
1000824a:	mov    ecx,esi
1000824c:	call   eax
1000824e:	lea    ecx,[esp+0x14]
10008252:	mov    DWORD PTR [esp+0x44],eax
10008256:	call   0x10009fb0
1000825b:	mov    esi,eax
1000825d:	mov    ebp,DWORD PTR [esi]
1000825f:	push   0x10056af8
10008264:	push   0x14
10008266:	push   0x10056b30
1000826b:	call   0x10003340
10008270:	mov    edx,DWORD PTR [ebp+0x0]
10008273:	add    esp,0xc
10008276:	push   eax
10008277:	mov    ecx,esi
10008279:	call   edx
1000827b:	lea    ecx,[esp+0x60]
1000827f:	mov    DWORD PTR [esp+0x38],eax
10008283:	call   0x1000a040
10008288:	mov    BYTE PTR [esp+0xc0],0x1
10008290:	mov    eax,DWORD PTR [edi+0x4]
10008293:	push   eax
10008294:	lea    ecx,[esp+0x64]
10008298:	call   0x10007b50
1000829d:	push   0x10056b48
100082a2:	push   0xf
100082a4:	push   0x10056b70
100082a9:	call   0x10003340
100082ae:	mov    ecx,eax
100082b0:	add    esp,0xc
100082b3:	mov    DWORD PTR [esp+0x30],0xf
100082bb:	mov    DWORD PTR [esp+0x2c],ebx
100082bf:	mov    BYTE PTR [esp+0x1c],bl
100082c3:	lea    esi,[ecx+0x1]
100082c6:	mov    dl,BYTE PTR [ecx]
100082c8:	add    ecx,0x1
100082cb:	cmp    dl,bl
100082cd:	jne    0x100082c6
100082cf:	sub    ecx,esi
100082d1:	push   ecx
100082d2:	push   eax
100082d3:	lea    ecx,[esp+0x20]
100082d7:	call   0x10003900
100082dc:	lea    ecx,[esp+0x18]
100082e0:	lea    ebp,[edi+0x894]
100082e6:	push   ecx
100082e7:	mov    BYTE PTR [esp+0xc4],0x2
100082ef:	mov    esi,DWORD PTR [edi]
100082f1:	mov    ecx,ebp
100082f3:	call   0x10009fb0
100082f8:	call   0x1000c570
100082fd:	add    eax,DWORD PTR [edi+0x88c]
10008303:	mov    edx,DWORD PTR [esp+0x58]
10008307:	push   eax
10008308:	push   edx
10008309:	call   0x1000c9a0
1000830e:	cdq    
1000830f:	add    esp,0x8
10008312:	mov    BYTE PTR [esp+0xc0],0x1
1000831a:	cmp    DWORD PTR [esp+0x30],0x10
1000831f:	mov    DWORD PTR [edi+0x8],eax
10008322:	mov    DWORD PTR [edi+0xc],edx
10008325:	jb     0x10008334
10008327:	mov    eax,DWORD PTR [esp+0x1c]
1000832b:	push   eax
1000832c:	call   0x10015ad6
10008331:	add    esp,0x4
10008334:	push   0x10056b80
10008339:	push   0x11
1000833b:	push   0x10056bc0
10008340:	call   0x10003340
10008345:	mov    esi,eax
10008347:	mov    ecx,esi
10008349:	add    esp,0xc
1000834c:	mov    DWORD PTR [esp+0x30],0xf
10008354:	mov    DWORD PTR [esp+0x2c],ebx
10008358:	mov    BYTE PTR [esp+0x1c],bl
1000835c:	lea    edx,[ecx+0x1]
1000835f:	nop
10008360:	mov    al,BYTE PTR [ecx]
10008362:	add    ecx,0x1
10008365:	cmp    al,bl
10008367:	jne    0x10008360
10008369:	sub    ecx,edx
1000836b:	push   ecx
1000836c:	push   esi
1000836d:	lea    ecx,[esp+0x20]
10008371:	call   0x10003900
10008376:	lea    ecx,[esp+0x18]
1000837a:	push   ecx
1000837b:	mov    BYTE PTR [esp+0xc4],0x3
10008383:	mov    esi,DWORD PTR [edi]
10008385:	mov    ecx,ebp
10008387:	call   0x10009fb0
1000838c:	call   0x1000c570
10008391:	add    eax,DWORD PTR [edi+0x88c]
10008397:	mov    edx,DWORD PTR [esp+0x48]
1000839b:	push   eax
1000839c:	push   edx
1000839d:	call   0x1000c9a0
100083a2:	cdq    
100083a3:	add    esp,0x8
100083a6:	mov    BYTE PTR [esp+0xc0],0x1
100083ae:	cmp    DWORD PTR [esp+0x30],0x10
100083b3:	mov    DWORD PTR [edi+0x10],eax
100083b6:	mov    DWORD PTR [edi+0x14],edx
100083b9:	jb     0x100083c8
100083bb:	mov    eax,DWORD PTR [esp+0x1c]
100083bf:	push   eax
100083c0:	call   0x10015ad6
100083c5:	add    esp,0x4
100083c8:	push   0x10056bd4
100083cd:	push   0x10
100083cf:	push   0x10056c0c
100083d4:	call   0x10003340
100083d9:	mov    esi,eax
100083db:	mov    ecx,esi
100083dd:	add    esp,0xc
100083e0:	mov    DWORD PTR [esp+0x30],0xf
100083e8:	mov    DWORD PTR [esp+0x2c],ebx
100083ec:	mov    BYTE PTR [esp+0x1c],bl
100083f0:	lea    eax,[ecx+0x1]
100083f3:	mov    dl,BYTE PTR [ecx]
100083f5:	add    ecx,0x1
100083f8:	cmp    dl,bl
100083fa:	jne    0x100083f3
100083fc:	sub    ecx,eax
100083fe:	push   ecx
100083ff:	push   esi
10008400:	lea    ecx,[esp+0x20]
10008404:	call   0x10003900
10008409:	lea    ecx,[esp+0x18]
1000840d:	push   ecx
1000840e:	mov    BYTE PTR [esp+0xc4],0x4
10008416:	mov    esi,DWORD PTR [edi]
10008418:	mov    ecx,ebp
1000841a:	call   0x10009fb0
1000841f:	call   0x1000c570
10008424:	add    eax,DWORD PTR [edi+0x88c]
1000842a:	mov    edx,DWORD PTR [esp+0x50]
1000842e:	push   eax
1000842f:	push   edx
10008430:	call   0x1000c9a0
10008435:	cdq    
10008436:	add    esp,0x8
10008439:	mov    BYTE PTR [esp+0xc0],0x1
10008441:	cmp    DWORD PTR [esp+0x30],0x10
10008446:	mov    DWORD PTR [edi+0x28],eax
10008449:	mov    DWORD PTR [edi+0x2c],edx
1000844c:	jb     0x1000845b
1000844e:	mov    eax,DWORD PTR [esp+0x1c]
10008452:	push   eax
10008453:	call   0x10015ad6
10008458:	add    esp,0x4
1000845b:	push   0x10056c20
10008460:	push   0x14
10008462:	push   0x10056c48
10008467:	call   0x10003340
1000846c:	mov    esi,eax
1000846e:	mov    ecx,esi
10008470:	add    esp,0xc
10008473:	mov    DWORD PTR [esp+0x30],0xf
1000847b:	mov    DWORD PTR [esp+0x2c],ebx
1000847f:	mov    BYTE PTR [esp+0x1c],bl
10008483:	lea    eax,[ecx+0x1]
10008486:	mov    dl,BYTE PTR [ecx]
10008488:	add    ecx,0x1
1000848b:	cmp    dl,bl
1000848d:	jne    0x10008486
1000848f:	sub    ecx,eax
10008491:	push   ecx
10008492:	push   esi
10008493:	lea    ecx,[esp+0x20]
10008497:	call   0x10003900
1000849c:	lea    ecx,[esp+0x18]
100084a0:	push   ecx
100084a1:	mov    BYTE PTR [esp+0xc4],0x5
100084a9:	mov    esi,DWORD PTR [edi]
100084ab:	mov    ecx,ebp
100084ad:	call   0x10009fb0
100084b2:	call   0x1000c570
100084b7:	add    eax,DWORD PTR [edi+0x88c]
100084bd:	mov    edx,DWORD PTR [esp+0x5c]
100084c1:	push   eax
100084c2:	push   edx
100084c3:	call   0x1000c9a0
100084c8:	cdq    
100084c9:	add    esp,0x8
100084cc:	mov    BYTE PTR [esp+0xc0],0x1
100084d4:	cmp    DWORD PTR [esp+0x30],0x10
100084d9:	mov    DWORD PTR [edi+0x18],eax
100084dc:	mov    DWORD PTR [edi+0x1c],edx
100084df:	jb     0x100084ee
100084e1:	mov    eax,DWORD PTR [esp+0x1c]
100084e5:	push   eax
100084e6:	call   0x10015ad6
100084eb:	add    esp,0x4
100084ee:	push   0x10056c60
100084f3:	push   0x16
100084f5:	push   0x10056c84
100084fa:	call   0x10003340
100084ff:	mov    esi,eax
10008501:	mov    ecx,esi
10008503:	add    esp,0xc
10008506:	mov    DWORD PTR [esp+0x30],0xf
1000850e:	mov    DWORD PTR [esp+0x2c],ebx
10008512:	mov    BYTE PTR [esp+0x1c],bl
10008516:	lea    eax,[ecx+0x1]
10008519:	lea    esp,[esp+0x0]
10008520:	mov    dl,BYTE PTR [ecx]
10008522:	add    ecx,0x1
10008525:	cmp    dl,bl
10008527:	jne    0x10008520
10008529:	sub    ecx,eax
1000852b:	push   ecx
1000852c:	push   esi
1000852d:	lea    ecx,[esp+0x20]
10008531:	call   0x10003900
10008536:	lea    ecx,[esp+0x18]
1000853a:	push   ecx
1000853b:	mov    BYTE PTR [esp+0xc4],0x6
10008543:	mov    esi,DWORD PTR [edi]
10008545:	mov    ecx,ebp
10008547:	call   0x10009fb0
1000854c:	call   0x1000c570
10008551:	add    eax,DWORD PTR [edi+0x88c]
10008557:	mov    edx,DWORD PTR [esp+0x4c]
1000855b:	push   eax
1000855c:	push   edx
1000855d:	call   0x1000c9a0
10008562:	cdq    
10008563:	add    esp,0x8
10008566:	mov    BYTE PTR [esp+0xc0],0x1
1000856e:	cmp    DWORD PTR [esp+0x30],0x10
10008573:	mov    DWORD PTR [edi+0x20],eax
10008576:	mov    DWORD PTR [edi+0x24],edx
10008579:	jb     0x10008588
1000857b:	mov    eax,DWORD PTR [esp+0x1c]
1000857f:	push   eax
10008580:	call   0x10015ad6
10008585:	add    esp,0x4
10008588:	push   0x10056c9c
1000858d:	push   0x17
1000858f:	push   0x10056ccc
10008594:	call   0x10003340
10008599:	mov    esi,eax
1000859b:	mov    ecx,esi
1000859d:	add    esp,0xc
100085a0:	mov    DWORD PTR [esp+0x30],0xf
100085a8:	mov    DWORD PTR [esp+0x2c],ebx
100085ac:	mov    BYTE PTR [esp+0x1c],bl
100085b0:	lea    eax,[ecx+0x1]
100085b3:	mov    dl,BYTE PTR [ecx]
100085b5:	add    ecx,0x1
100085b8:	cmp    dl,bl
100085ba:	jne    0x100085b3
100085bc:	sub    ecx,eax
100085be:	push   ecx
100085bf:	push   esi
100085c0:	lea    ecx,[esp+0x20]
100085c4:	call   0x10003900
100085c9:	lea    ecx,[esp+0x18]
100085cd:	push   ecx
100085ce:	mov    BYTE PTR [esp+0xc4],0x7
100085d6:	mov    esi,DWORD PTR [edi]
100085d8:	mov    ecx,ebp
100085da:	call   0x10009fb0
100085df:	call   0x1000c570
100085e4:	add    eax,DWORD PTR [edi+0x88c]
100085ea:	mov    edx,DWORD PTR [esp+0x40]
100085ee:	push   eax
100085ef:	push   edx
100085f0:	call   0x1000c9a0
100085f5:	cdq    
100085f6:	add    esp,0x8
100085f9:	mov    BYTE PTR [esp+0xc0],0x1
10008601:	cmp    DWORD PTR [esp+0x30],0x10
10008606:	mov    DWORD PTR [edi+0x30],eax
10008609:	mov    DWORD PTR [edi+0x34],edx
1000860c:	jb     0x1000861b
1000860e:	mov    eax,DWORD PTR [esp+0x1c]
10008612:	push   eax
10008613:	call   0x10015ad6
10008618:	add    esp,0x4
1000861b:	push   0x10056ce8
10008620:	push   0xc
10008622:	push   0x10056d28
10008627:	call   0x10003340
1000862c:	mov    esi,eax
1000862e:	mov    ecx,esi
10008630:	add    esp,0xc
10008633:	mov    DWORD PTR [esp+0x30],0xf
1000863b:	mov    DWORD PTR [esp+0x2c],ebx
1000863f:	mov    BYTE PTR [esp+0x1c],bl
10008643:	lea    edx,[ecx+0x1]
10008646:	mov    al,BYTE PTR [ecx]
10008648:	add    ecx,0x1
1000864b:	cmp    al,bl
1000864d:	jne    0x10008646
1000864f:	sub    ecx,edx
10008651:	push   ecx
10008652:	push   esi
10008653:	lea    ecx,[esp+0x20]
10008657:	call   0x10003900
1000865c:	lea    ecx,[esp+0x18]
10008660:	push   ecx
10008661:	mov    BYTE PTR [esp+0xc4],0x8
10008669:	mov    esi,DWORD PTR [edi]
1000866b:	mov    ecx,ebp
1000866d:	call   0x10009fb0
10008672:	call   0x1000c570
10008677:	add    eax,DWORD PTR [edi+0x88c]
1000867d:	mov    edx,DWORD PTR [esp+0x54]
10008681:	push   eax
10008682:	push   edx
10008683:	call   0x1000c9a0
10008688:	cdq    
10008689:	add    esp,0x8
1000868c:	mov    BYTE PTR [esp+0xc0],0x1
10008694:	cmp    DWORD PTR [esp+0x30],0x10
10008699:	mov    DWORD PTR [edi+0x38],eax
1000869c:	mov    DWORD PTR [edi+0x3c],edx
1000869f:	jb     0x100086ae
100086a1:	mov    eax,DWORD PTR [esp+0x1c]
100086a5:	push   eax
100086a6:	call   0x10015ad6
100086ab:	add    esp,0x4
100086ae:	push   0x10056d38
100086b3:	push   0x9
100086b5:	push   0x10056d70
100086ba:	call   0x10003340
100086bf:	mov    esi,eax
100086c1:	mov    ecx,esi
100086c3:	add    esp,0xc
100086c6:	mov    DWORD PTR [esp+0x30],0xf
100086ce:	mov    DWORD PTR [esp+0x2c],ebx
100086d2:	mov    BYTE PTR [esp+0x1c],bl
100086d6:	lea    eax,[ecx+0x1]
100086d9:	lea    esp,[esp+0x0]
100086e0:	mov    dl,BYTE PTR [ecx]
100086e2:	add    ecx,0x1
100086e5:	cmp    dl,bl
100086e7:	jne    0x100086e0
100086e9:	sub    ecx,eax
100086eb:	push   ecx
100086ec:	push   esi
100086ed:	lea    ecx,[esp+0x20]
100086f1:	call   0x10003900
100086f6:	lea    ecx,[esp+0x18]
100086fa:	push   ecx
100086fb:	mov    BYTE PTR [esp+0xc4],0x9
10008703:	mov    esi,DWORD PTR [edi]
10008705:	mov    ecx,ebp
10008707:	call   0x10009fb0
1000870c:	call   0x1000c570
10008711:	add    eax,DWORD PTR [edi+0x88c]
10008717:	mov    edx,DWORD PTR [esp+0x44]
1000871b:	push   eax
1000871c:	push   edx
1000871d:	call   0x1000c9a0
10008722:	cdq    
10008723:	add    esp,0x8
10008726:	mov    BYTE PTR [esp+0xc0],0x1
1000872e:	cmp    DWORD PTR [esp+0x30],0x10
10008733:	mov    DWORD PTR [edi+0x40],eax
10008736:	mov    DWORD PTR [edi+0x44],edx
10008739:	jb     0x10008748
1000873b:	mov    eax,DWORD PTR [esp+0x1c]
1000873f:	push   eax
10008740:	call   0x10015ad6
10008745:	add    esp,0x4
10008748:	push   0x10056d7c
1000874d:	push   0x16
1000874f:	push   0x10056da4
10008754:	call   0x10003340
10008759:	mov    esi,eax
1000875b:	mov    ecx,esi
1000875d:	add    esp,0xc
10008760:	mov    DWORD PTR [esp+0x30],0xf
10008768:	mov    DWORD PTR [esp+0x2c],ebx
1000876c:	mov    BYTE PTR [esp+0x1c],bl
10008770:	lea    eax,[ecx+0x1]
10008773:	mov    dl,BYTE PTR [ecx]
10008775:	add    ecx,0x1
10008778:	cmp    dl,bl
1000877a:	jne    0x10008773
1000877c:	sub    ecx,eax
1000877e:	push   ecx
1000877f:	push   esi
10008780:	lea    ecx,[esp+0x20]
10008784:	call   0x10003900
10008789:	lea    ecx,[esp+0x18]
1000878d:	push   ecx
1000878e:	mov    BYTE PTR [esp+0xc4],0xa
10008796:	mov    esi,DWORD PTR [edi]
10008798:	mov    ecx,ebp
1000879a:	call   0x10009fb0
1000879f:	call   0x1000c570
100087a4:	add    eax,DWORD PTR [edi+0x88c]
100087aa:	mov    edx,DWORD PTR [esp+0x38]
100087ae:	push   eax
100087af:	push   edx
100087b0:	call   0x1000c9a0
100087b5:	cdq    
100087b6:	add    esp,0x8
100087b9:	mov    BYTE PTR [esp+0xc0],0x1
100087c1:	cmp    DWORD PTR [esp+0x30],0x10
100087c6:	mov    DWORD PTR [edi+0x48],eax
100087c9:	mov    DWORD PTR [edi+0x4c],edx
100087cc:	jb     0x100087db
100087ce:	mov    eax,DWORD PTR [esp+0x1c]
100087d2:	push   eax
100087d3:	call   0x10015ad6
100087d8:	add    esp,0x4
100087db:	mov    ecx,DWORD PTR [edi+0x8]
100087de:	or     ecx,DWORD PTR [edi+0xc]
100087e1:	je     0x10008874
100087e7:	mov    edx,DWORD PTR [edi+0x10]
100087ea:	or     edx,DWORD PTR [edi+0x14]
100087ed:	je     0x10008874
100087f3:	mov    eax,DWORD PTR [edi+0x28]
100087f6:	or     eax,DWORD PTR [edi+0x2c]
100087f9:	je     0x10008874
100087fb:	mov    ecx,DWORD PTR [edi+0x18]
100087fe:	or     ecx,DWORD PTR [edi+0x1c]
10008801:	je     0x10008874
10008803:	mov    edx,DWORD PTR [edi+0x20]
10008806:	or     edx,DWORD PTR [edi+0x24]
10008809:	je     0x10008874
1000880b:	mov    eax,DWORD PTR [edi+0x30]
1000880e:	or     eax,DWORD PTR [edi+0x34]
10008811:	je     0x10008874
10008813:	mov    ecx,DWORD PTR [edi+0x38]
10008816:	or     ecx,DWORD PTR [edi+0x3c]
10008819:	je     0x10008874
1000881b:	mov    edx,DWORD PTR [edi+0x40]
1000881e:	or     edx,DWORD PTR [edi+0x44]
10008821:	je     0x10008874
10008823:	mov    eax,DWORD PTR [edi+0x48]
10008826:	or     eax,DWORD PTR [edi+0x4c]
10008829:	je     0x10008874
1000882b:	push   edi
1000882c:	call   0x10008a30
10008831:	lea    esi,[esp+0x60]
10008835:	call   0x10007c50
1000883a:	mov    ecx,esi
1000883c:	call   0x1000a130
10008841:	call   DWORD PTR ds:0x1002c0a0
10008847:	lea    ecx,[esp+0x14]
1000884b:	mov    DWORD PTR [esp+0xc0],0xffffffff
10008856:	call   0x1000a150
1000885b:	mov    ecx,DWORD PTR [esp+0xb8]
10008862:	mov    DWORD PTR fs:0x0,ecx
10008869:	pop    ecx
1000886a:	pop    esi
1000886b:	pop    ebp
1000886c:	pop    ebx
1000886d:	add    esp,0xb4
10008873:	ret    
10008874:	push   ebx
10008875:	push   0x10055592
1000887a:	lea    ecx,[esp+0x7c]
1000887e:	mov    DWORD PTR [esp+0x94],0xf
10008889:	mov    DWORD PTR [esp+0x90],ebx
10008890:	mov    BYTE PTR [esp+0x80],bl
10008897:	call   0x10003900
1000889c:	lea    ecx,[esp+0x74]
100088a0:	push   ecx
100088a1:	lea    edx,[esp+0x94]
100088a8:	push   edx
100088a9:	mov    BYTE PTR [esp+0xc8],0xb
100088b1:	call   0x10001490
100088b6:	push   0x10058a78
100088bb:	lea    eax,[esp+0x94]
100088c2:	push   eax
100088c3:	call   0x100161ce
100088c8:	int3   
100088c9:	int3   
100088ca:	int3   
100088cb:	int3   
100088cc:	int3   
100088cd:	int3   
100088ce:	int3   
100088cf:	int3   
100088d0:	push   0xffffffff
100088d2:	push   0x1002b158
100088d7:	mov    eax,fs:0x0
100088dd:	push   eax
100088de:	sub    esp,0x1c
100088e1:	push   ebx
100088e2:	push   ebp
100088e3:	push   edi
100088e4:	mov    eax,ds:0x10064694
100088e9:	xor    eax,esp
100088eb:	push   eax
100088ec:	lea    eax,[esp+0x2c]
100088f0:	mov    fs:0x0,eax
100088f6:	mov    eax,DWORD PTR [esi]
100088f8:	mov    ebx,DWORD PTR ds:0x1002c110
100088fe:	push   0x4
10008900:	push   0x3000
10008905:	push   0x880
1000890a:	push   0x0
1000890c:	push   eax
1000890d:	call   ebx
1000890f:	lea    edi,[esi+0x894]
10008915:	mov    ecx,edi
10008917:	mov    DWORD PTR [esi+0x888],eax
1000891d:	call   0x10009fb0
10008922:	mov    eax,DWORD PTR [eax]
10008924:	mov    ebp,DWORD PTR [eax+0x6]
10008927:	mov    eax,DWORD PTR [esi]
10008929:	push   0x40
1000892b:	push   0x3000
10008930:	push   ebp
10008931:	push   0x0
10008933:	push   eax
10008934:	call   ebx
10008936:	push   eax
10008937:	mov    ecx,edi
10008939:	mov    DWORD PTR [esi+0x88c],eax
1000893f:	call   0x10009fb0
10008944:	call   0x1000c660
10008949:	mov    ecx,edi
1000894b:	call   0x10009fb0
10008950:	mov    eax,DWORD PTR [eax]
10008952:	mov    ecx,DWORD PTR [esi]
10008954:	push   0x0
10008956:	push   ebp
10008957:	mov    ebp,DWORD PTR ds:0x1002c128
1000895d:	add    eax,0x12
10008960:	push   eax
10008961:	mov    eax,DWORD PTR [esi+0x88c]
10008967:	push   eax
10008968:	push   ecx
10008969:	call   ebp
1000896b:	test   eax,eax
1000896d:	jne    0x10008975
1000896f:	call   DWORD PTR ds:0x1002c07c
10008975:	push   0x10056dbc
1000897a:	push   0xe
1000897c:	push   0x10056dec
10008981:	call   0x10003340
10008986:	mov    ecx,eax
10008988:	add    esp,0xc
1000898b:	mov    DWORD PTR [esp+0x28],0xf
10008993:	mov    DWORD PTR [esp+0x24],0x0
1000899b:	mov    BYTE PTR [esp+0x14],0x0
100089a0:	lea    ebx,[ecx+0x1]
100089a3:	mov    dl,BYTE PTR [ecx]
100089a5:	add    ecx,0x1
100089a8:	test   dl,dl
100089aa:	jne    0x100089a3
100089ac:	sub    ecx,ebx
100089ae:	push   ecx
100089af:	push   eax
100089b0:	lea    ecx,[esp+0x18]
100089b4:	call   0x10003900
100089b9:	lea    ecx,[esp+0x10]
100089bd:	push   ecx
100089be:	xor    ebx,ebx
100089c0:	mov    ecx,edi
100089c2:	mov    DWORD PTR [esp+0x38],ebx
100089c6:	call   0x10009fb0
100089cb:	call   0x1000c570
100089d0:	cmp    DWORD PTR [esp+0x28],0x10
100089d5:	mov    edi,eax
100089d7:	jb     0x100089e6
100089d9:	mov    edx,DWORD PTR [esp+0x14]
100089dd:	push   edx
100089de:	call   0x10015ad6
100089e3:	add    esp,0x4
100089e6:	mov    eax,DWORD PTR [esi]
100089e8:	push   ebx
100089e9:	push   0x4
100089eb:	lea    ecx,[esi+0x888]
100089f1:	push   ecx
100089f2:	mov    ecx,DWORD PTR [esi+0x88c]
100089f8:	add    ecx,edi
100089fa:	push   ecx
100089fb:	push   eax
100089fc:	mov    DWORD PTR [esp+0x3c],0xf
10008a04:	mov    DWORD PTR [esp+0x38],ebx
10008a08:	mov    BYTE PTR [esp+0x28],0x0
10008a0d:	call   ebp
10008a0f:	test   eax,eax
10008a11:	jne    0x10008a19
10008a13:	call   DWORD PTR ds:0x1002c07c
10008a19:	mov    ecx,DWORD PTR [esp+0x2c]
10008a1d:	mov    DWORD PTR fs:0x0,ecx
10008a24:	pop    ecx
10008a25:	pop    edi
10008a26:	pop    ebp
10008a27:	pop    ebx
10008a28:	add    esp,0x28
10008a2b:	ret    
10008a2c:	int3   
10008a2d:	int3   
10008a2e:	int3   
10008a2f:	int3   
10008a30:	push   0xffffffff
10008a32:	push   0x1002ac78
10008a37:	mov    eax,fs:0x0
10008a3d:	push   eax
10008a3e:	sub    esp,0x48
10008a41:	mov    eax,ds:0x10064694
10008a46:	xor    eax,esp
10008a48:	push   eax
10008a49:	lea    eax,[esp+0x4c]
10008a4d:	mov    fs:0x0,eax
10008a53:	mov    eax,DWORD PTR [esp+0x5c]
10008a57:	mov    ecx,DWORD PTR [eax]
10008a59:	push   0x0
10008a5b:	push   0x880
10008a60:	lea    edx,[eax+0x8]
10008a63:	mov    eax,DWORD PTR [eax+0x888]
10008a69:	push   edx
10008a6a:	push   eax
10008a6b:	push   ecx
10008a6c:	call   DWORD PTR ds:0x1002c128
10008a72:	test   eax,eax
10008a74:	jne    0x10008abb
10008a76:	push   eax
10008a77:	push   0x10055592
10008a7c:	lea    ecx,[esp+0xc]
10008a80:	mov    DWORD PTR [esp+0x24],0xf
10008a88:	mov    DWORD PTR [esp+0x20],eax
10008a8c:	mov    BYTE PTR [esp+0x10],al
10008a90:	call   0x10003900
10008a95:	lea    ecx,[esp+0x4]
10008a99:	push   ecx
10008a9a:	lea    edx,[esp+0x24]
10008a9e:	push   edx
10008a9f:	mov    DWORD PTR [esp+0x5c],0x0
10008aa7:	call   0x10001490
10008aac:	push   0x10058a78
10008ab1:	lea    eax,[esp+0x24]
10008ab5:	push   eax
10008ab6:	call   0x100161ce
10008abb:	mov    ecx,DWORD PTR [esp+0x4c]
10008abf:	mov    DWORD PTR fs:0x0,ecx
10008ac6:	pop    ecx
10008ac7:	add    esp,0x54
10008aca:	ret    0x4
10008acd:	int3   
10008ace:	int3   
10008acf:	int3   
10008ad0:	push   ebp
10008ad1:	mov    ebp,esp
10008ad3:	push   0xfffffffe
10008ad5:	push   0x10058bf8
10008ada:	push   0x10017aa0
10008adf:	mov    eax,fs:0x0
10008ae5:	push   eax
10008ae6:	sub    esp,0x28
10008ae9:	push   ebx
10008aea:	push   esi
10008aeb:	push   edi
10008aec:	mov    eax,ds:0x10064694
10008af1:	xor    DWORD PTR [ebp-0x8],eax
10008af4:	xor    eax,ebp
10008af6:	push   eax
10008af7:	lea    eax,[ebp-0x10]
10008afa:	mov    fs:0x0,eax
10008b00:	mov    esi,DWORD PTR [ebp+0x8]
10008b03:	xor    ebx,ebx
10008b05:	mov    DWORD PTR [ebp-0x2c],ebx
10008b08:	mov    DWORD PTR [ebp-0x30],ebx
10008b0b:	mov    DWORD PTR [ebp-0x20],ebx
10008b0e:	mov    DWORD PTR [ebp-0x34],ebx
10008b11:	mov    DWORD PTR [ebp-0x38],ebx
10008b14:	mov    DWORD PTR [ebp-0x24],ebx
10008b17:	mov    BYTE PTR [ebp-0x19],bl
10008b1a:	mov    DWORD PTR [ebp-0x4],ebx
10008b1d:	push   0x4
10008b1f:	push   0x3000
10008b24:	push   0x1020
10008b29:	push   ebx
10008b2a:	push   esi
10008b2b:	call   DWORD PTR ds:0x1002c110
10008b31:	mov    edi,eax
10008b33:	mov    DWORD PTR [ebp-0x2c],edi
10008b36:	test   edi,edi
10008b38:	jne    0x10008b45
10008b3a:	call   DWORD PTR ds:0x1002c07c
10008b40:	jmp    0x10008c0d
10008b45:	lea    eax,[ebp-0x24]
10008b48:	push   eax
10008b49:	push   0x1020
10008b4e:	mov    ecx,DWORD PTR [ebp+0x14]
10008b51:	push   ecx
10008b52:	push   edi
10008b53:	push   esi
10008b54:	call   DWORD PTR ds:0x1002c128
10008b5a:	test   eax,eax
10008b5c:	je     0x10008c0d
10008b62:	push   0x40
10008b64:	push   0x3000
10008b69:	mov    edx,DWORD PTR [ebp+0x10]
10008b6c:	push   edx
10008b6d:	push   0x0
10008b6f:	push   esi
10008b70:	call   DWORD PTR ds:0x1002c110
10008b76:	mov    ebx,eax
10008b78:	mov    DWORD PTR [ebp-0x30],ebx
10008b7b:	test   ebx,ebx
10008b7d:	je     0x10008c0d
10008b83:	lea    eax,[ebp-0x24]
10008b86:	push   eax
10008b87:	mov    ecx,DWORD PTR [ebp+0x10]
10008b8a:	push   ecx
10008b8b:	mov    edx,DWORD PTR [ebp+0xc]
10008b8e:	push   edx
10008b8f:	push   ebx
10008b90:	push   esi
10008b91:	call   DWORD PTR ds:0x1002c128
10008b97:	test   eax,eax
10008b99:	je     0x10008c0d
10008b9b:	mov    DWORD PTR [ebp-0x28],0x0
10008ba2:	lea    eax,[ebp-0x28]
10008ba5:	push   eax
10008ba6:	push   0xf01ff
10008bab:	push   esi
10008bac:	call   DWORD PTR ds:0x1002c014
10008bb2:	test   eax,eax
10008bb4:	je     0x10008c0d
10008bb6:	mov    ecx,DWORD PTR [ebp-0x28]
10008bb9:	push   ecx
10008bba:	call   DWORD PTR ds:0x1002c004
10008bc0:	test   eax,eax
10008bc2:	je     0x10008c0d
10008bc4:	lea    edx,[ebp-0x34]
10008bc7:	push   edx
10008bc8:	push   0x0
10008bca:	push   edi
10008bcb:	push   ebx
10008bcc:	push   0x0
10008bce:	push   0x0
10008bd0:	push   esi
10008bd1:	call   DWORD PTR ds:0x1002c144
10008bd7:	mov    DWORD PTR [ebp-0x20],eax
10008bda:	test   eax,eax
10008bdc:	je     0x10008c0d
10008bde:	call   DWORD PTR ds:0x1002c000
10008be4:	push   0xffffffff
10008be6:	mov    eax,DWORD PTR [ebp-0x20]
10008be9:	push   eax
10008bea:	call   DWORD PTR ds:0x1002c04c
10008bf0:	lea    ecx,[ebp-0x24]
10008bf3:	push   ecx
10008bf4:	push   0x1020
10008bf9:	mov    edx,DWORD PTR [ebp+0x14]
10008bfc:	push   edx
10008bfd:	push   edi
10008bfe:	push   esi
10008bff:	call   DWORD PTR ds:0x1002c118
10008c05:	test   eax,eax
10008c07:	je     0x10008c0d
10008c09:	mov    BYTE PTR [ebp-0x19],0x1
10008c0d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10008c14:	call   0x10008c37
10008c19:	mov    al,BYTE PTR [ebp-0x19]
10008c1c:	mov    ecx,DWORD PTR [ebp-0x10]
10008c1f:	mov    DWORD PTR fs:0x0,ecx
10008c26:	pop    ecx
10008c27:	pop    edi
10008c28:	pop    esi
10008c29:	pop    ebx
10008c2a:	mov    esp,ebp
10008c2c:	pop    ebp
10008c2d:	ret    
10008c2e:	mov    esi,DWORD PTR [ebp+0x8]
10008c31:	mov    edi,DWORD PTR [ebp-0x2c]
10008c34:	mov    ebx,DWORD PTR [ebp-0x30]
10008c37:	test   edi,edi
10008c39:	je     0x10008c4a
10008c3b:	push   0x8000
10008c40:	push   0x0
10008c42:	push   edi
10008c43:	push   esi
10008c44:	call   DWORD PTR ds:0x1002c124
10008c4a:	test   ebx,ebx
10008c4c:	je     0x10008c5d
10008c4e:	push   0x8000
10008c53:	push   0x0
10008c55:	push   ebx
10008c56:	push   esi
10008c57:	call   DWORD PTR ds:0x1002c124
10008c5d:	mov    eax,DWORD PTR [ebp-0x20]
10008c60:	test   eax,eax
10008c62:	je     0x10008c79
10008c64:	lea    ecx,[ebp-0x38]
10008c67:	push   ecx
10008c68:	push   eax
10008c69:	call   DWORD PTR ds:0x1002c10c
10008c6f:	mov    edx,DWORD PTR [ebp-0x20]
10008c72:	push   edx
10008c73:	call   DWORD PTR ds:0x1002c058
10008c79:	ret    
10008c7a:	int3   
10008c7b:	int3   
10008c7c:	int3   
10008c7d:	int3   
10008c7e:	int3   
10008c7f:	int3   
10008c80:	push   ebp
10008c81:	mov    ebp,esp
10008c83:	push   0xffffffff
10008c85:	push   0x1002b121
10008c8a:	mov    eax,fs:0x0
10008c90:	push   eax
10008c91:	push   ecx
10008c92:	mov    eax,0x1060
10008c97:	call   0x10016500
10008c9c:	mov    eax,ds:0x10064694
10008ca1:	xor    eax,ebp
10008ca3:	mov    DWORD PTR [ebp-0x14],eax
10008ca6:	push   ebx
10008ca7:	push   esi
10008ca8:	push   edi
10008ca9:	push   eax
10008caa:	lea    eax,[ebp-0xc]
10008cad:	mov    fs:0x0,eax
10008cb3:	mov    DWORD PTR [ebp-0x10],esp
10008cb6:	mov    ebx,DWORD PTR [ebp+0xc]
10008cb9:	mov    eax,DWORD PTR [ebp+0x8]
10008cbc:	push   0x1018
10008cc1:	xor    edi,edi
10008cc3:	lea    edx,[ebp-0x1030]
10008cc9:	push   edi
10008cca:	push   edx
10008ccb:	mov    DWORD PTR [ebp-0x104c],eax
10008cd1:	mov    DWORD PTR [ebp-0x1048],ecx
10008cd7:	mov    BYTE PTR [ebp-0x1038],0x0
10008cde:	call   0x10016530
10008ce3:	mov    eax,ebx
10008ce5:	add    esp,0xc
10008ce8:	lea    edx,[eax+0x2]
10008ceb:	jmp    0x10008cf0
10008ced:	lea    ecx,[ecx+0x0]
10008cf0:	mov    cx,WORD PTR [eax]
10008cf3:	add    eax,0x2
10008cf6:	cmp    cx,di
10008cf9:	jne    0x10008cf0
10008cfb:	sub    eax,edx
10008cfd:	sar    eax,1
10008cff:	cmp    eax,0x400
10008d04:	ja     0x10008eaf
10008d0a:	push   edi
10008d0b:	lea    ecx,[ebp-0x103c]
10008d11:	call   0x1000f950
10008d16:	push   0x10056dfc
10008d1b:	push   0xc
10008d1d:	mov    DWORD PTR [ebp-0x4],edi
10008d20:	push   0x10056e3c
10008d25:	mov    BYTE PTR [ebp-0x4],0x1
10008d29:	call   0x10003540
10008d2e:	add    esp,0xc
10008d31:	push   ecx
10008d32:	mov    ecx,esp
10008d34:	mov    DWORD PTR [ebp-0x1050],esp
10008d3a:	push   eax
10008d3b:	call   0x10002d50
10008d40:	call   0x10007aa0
10008d45:	add    esp,0x4
10008d48:	push   eax
10008d49:	lea    ecx,[ebp-0x103c]
10008d4f:	call   0x1000a190
10008d54:	mov    DWORD PTR [ebp-0x4],edi
10008d57:	jmp    0x10008d6b
10008d59:	mov    DWORD PTR [ebp-0x4],0x0
10008d60:	mov    eax,0x10008d66
10008d65:	ret    
10008d66:	mov    ebx,DWORD PTR [ebp+0xc]
10008d69:	xor    edi,edi
10008d6b:	lea    ecx,[ebp-0x103c]
10008d71:	call   0x1000f8c0
10008d76:	test   eax,eax
10008d78:	je     0x10008e9d
10008d7e:	push   edi
10008d7f:	lea    esi,[ebp-0x106c]
10008d85:	call   0x10007950
10008d8a:	add    esp,0x4
10008d8d:	lea    ecx,[ebp-0x1044]
10008d93:	push   ecx
10008d94:	mov    ecx,eax
10008d96:	mov    BYTE PTR [ebp-0x4],0x3
10008d9a:	call   0x1000c4e0
10008d9f:	mov    BYTE PTR [ebp-0x4],0x5
10008da3:	cmp    DWORD PTR [ebp-0x1054],0x10
10008daa:	jb     0x10008dbb
10008dac:	mov    edx,DWORD PTR [ebp-0x1068]
10008db2:	push   edx
10008db3:	call   0x10015ad6
10008db8:	add    esp,0x4
10008dbb:	lea    ecx,[ebp-0x103c]
10008dc1:	mov    DWORD PTR [ebp-0x1054],0xf
10008dcb:	mov    DWORD PTR [ebp-0x1058],edi
10008dd1:	mov    BYTE PTR [ebp-0x1068],0x0
10008dd8:	mov    BYTE PTR [ebp-0x1038],0x0
10008ddf:	call   0x10009fb0
10008de4:	push   0x10056e58
10008de9:	mov    esi,eax
10008deb:	mov    edi,DWORD PTR [esi]
10008ded:	push   0x17
10008def:	push   0x10056e7c
10008df4:	call   0x10003340
10008df9:	add    esp,0xc
10008dfc:	push   eax
10008dfd:	mov    eax,DWORD PTR [edi]
10008dff:	mov    ecx,esi
10008e01:	call   eax
10008e03:	lea    ecx,[ebp-0x103c]
10008e09:	mov    DWORD PTR [ebp-0x1030],eax
10008e0f:	mov    DWORD PTR [ebp-0x102c],edx
10008e15:	call   0x10009fb0
10008e1a:	push   0x10056e94
10008e1f:	mov    esi,eax
10008e21:	mov    edi,DWORD PTR [esi]
10008e23:	push   0x17
10008e25:	push   0x10056ebc
10008e2a:	call   0x10003340
10008e2f:	mov    edx,DWORD PTR [edi]
10008e31:	add    esp,0xc
10008e34:	push   eax
10008e35:	mov    ecx,esi
10008e37:	call   edx
10008e39:	mov    DWORD PTR [ebp-0x1024],edx
10008e3f:	lea    edx,[ebp-0x1020]
10008e45:	mov    DWORD PTR [ebp-0x1028],eax
10008e4b:	mov    eax,ebx
10008e4d:	sub    edx,ebx
10008e4f:	nop
10008e50:	movzx  ecx,WORD PTR [eax]
10008e53:	mov    WORD PTR [edx+eax*1],cx
10008e57:	add    eax,0x2
10008e5a:	test   cx,cx
10008e5d:	jne    0x10008e50
10008e5f:	mov    eax,DWORD PTR [ebp-0x1044]
10008e65:	lea    edx,[ebp-0x1038]
10008e6b:	push   edx
10008e6c:	mov    DWORD PTR [ebp-0x20],0x40
10008e73:	mov    ecx,DWORD PTR [eax+0x6]
10008e76:	push   ecx
10008e77:	add    eax,0x12
10008e7a:	push   eax
10008e7b:	mov    eax,DWORD PTR [ebp-0x104c]
10008e81:	push   eax
10008e82:	call   0x10008ad0
10008e87:	add    esp,0x10
10008e8a:	test   al,al
10008e8c:	jne    0x10008eb3
10008e8e:	mov    ecx,DWORD PTR [ebp-0x1044]
10008e94:	push   ecx
10008e95:	call   0x10015ad6
10008e9a:	add    esp,0x4
10008e9d:	lea    ecx,[ebp-0x103c]
10008ea3:	mov    DWORD PTR [ebp-0x4],0xffffffff
10008eaa:	call   0x1000a150
10008eaf:	xor    eax,eax
10008eb1:	jmp    0x10008f02
10008eb3:	mov    esi,DWORD PTR [ebp-0x20]
10008eb6:	cmp    esi,0x40
10008eb9:	jae    0x10008edf
10008ebb:	mov    edx,DWORD PTR [ebp-0x1048]
10008ec1:	lea    eax,[ebp-0x820]
10008ec7:	mov    ecx,eax
10008ec9:	sub    edx,ecx
10008ecb:	jmp    0x10008ed0
10008ecd:	lea    ecx,[ecx+0x0]
10008ed0:	movzx  ecx,WORD PTR [eax]
10008ed3:	mov    WORD PTR [edx+eax*1],cx
10008ed7:	add    eax,0x2
10008eda:	test   cx,cx
10008edd:	jne    0x10008ed0
10008edf:	mov    edx,DWORD PTR [ebp-0x1044]
10008ee5:	push   edx
10008ee6:	call   0x10015ad6
10008eeb:	add    esp,0x4
10008eee:	lea    ecx,[ebp-0x103c]
10008ef4:	mov    DWORD PTR [ebp-0x4],0xffffffff
10008efb:	call   0x1000a150
10008f00:	mov    eax,esi
10008f02:	mov    ecx,DWORD PTR [ebp-0xc]
10008f05:	mov    DWORD PTR fs:0x0,ecx
10008f0c:	pop    ecx
10008f0d:	pop    edi
10008f0e:	pop    esi
10008f0f:	pop    ebx
10008f10:	mov    ecx,DWORD PTR [ebp-0x14]
10008f13:	xor    ecx,ebp
10008f15:	call   0x10015adb
10008f1a:	mov    esp,ebp
10008f1c:	pop    ebp
10008f1d:	ret    
10008f1e:	int3   
10008f1f:	int3   
10008f20:	push   ebp
10008f21:	mov    ebp,esp
10008f23:	push   0xffffffff
10008f25:	push   0x1002b0d1
10008f2a:	mov    eax,fs:0x0
10008f30:	push   eax
10008f31:	push   ecx
10008f32:	mov    eax,0x105c
10008f37:	call   0x10016500
10008f3c:	mov    eax,ds:0x10064694
10008f41:	xor    eax,ebp
10008f43:	mov    DWORD PTR [ebp-0x18],eax
10008f46:	push   ebx
10008f47:	push   esi
10008f48:	push   edi
10008f49:	push   eax
10008f4a:	lea    eax,[ebp-0xc]
10008f4d:	mov    fs:0x0,eax
10008f53:	mov    DWORD PTR [ebp-0x10],esp
10008f56:	mov    ebx,DWORD PTR [ebp+0xc]
10008f59:	mov    eax,DWORD PTR [ebp+0x8]
10008f5c:	push   0x1018
10008f61:	xor    edi,edi
10008f63:	lea    ecx,[ebp-0x1034]
10008f69:	push   edi
10008f6a:	push   ecx
10008f6b:	mov    DWORD PTR [ebp-0x1044],eax
10008f71:	mov    BYTE PTR [ebp-0x103c],0x0
10008f78:	call   0x10016530
10008f7d:	mov    eax,ebx
10008f7f:	add    esp,0xc
10008f82:	lea    edx,[eax+0x2]
10008f85:	mov    cx,WORD PTR [eax]
10008f88:	add    eax,0x2
10008f8b:	cmp    cx,di
10008f8e:	jne    0x10008f85
10008f90:	sub    eax,edx
10008f92:	sar    eax,1
10008f94:	cmp    eax,0x400
10008f99:	ja     0x10009178
10008f9f:	mov    eax,DWORD PTR [ebp+0x10]
10008fa2:	lea    edx,[eax+0x2]
10008fa5:	mov    cx,WORD PTR [eax]
10008fa8:	add    eax,0x2
10008fab:	cmp    cx,di
10008fae:	jne    0x10008fa5
10008fb0:	sub    eax,edx
10008fb2:	sar    eax,1
10008fb4:	cmp    eax,0x400
10008fb9:	ja     0x10009178
10008fbf:	push   edi
10008fc0:	lea    ecx,[ebp-0x1040]
10008fc6:	call   0x1000f950
10008fcb:	push   0x10056ed4
10008fd0:	push   0xc
10008fd2:	mov    DWORD PTR [ebp-0x4],edi
10008fd5:	push   0x10056e3c
10008fda:	mov    BYTE PTR [ebp-0x4],0x1
10008fde:	call   0x10003540
10008fe3:	add    esp,0xc
10008fe6:	push   ecx
10008fe7:	mov    ecx,esp
10008fe9:	mov    DWORD PTR [ebp-0x1050],esp
10008fef:	push   eax
10008ff0:	call   0x10002d50
10008ff5:	call   0x10007aa0
10008ffa:	add    esp,0x4
10008ffd:	push   eax
10008ffe:	lea    ecx,[ebp-0x1040]
10009004:	call   0x1000a190
10009009:	mov    DWORD PTR [ebp-0x4],edi
1000900c:	jmp    0x10009020
1000900e:	mov    DWORD PTR [ebp-0x4],0x0
10009015:	mov    eax,0x1000901b
1000901a:	ret    
1000901b:	mov    ebx,DWORD PTR [ebp+0xc]
1000901e:	xor    edi,edi
10009020:	lea    ecx,[ebp-0x1040]
10009026:	call   0x1000f8c0
1000902b:	test   eax,eax
1000902d:	je     0x10009166
10009033:	push   edi
10009034:	lea    esi,[ebp-0x106c]
1000903a:	call   0x10007950
1000903f:	add    esp,0x4
10009042:	lea    edx,[ebp-0x104c]
10009048:	push   edx
10009049:	mov    ecx,eax
1000904b:	mov    BYTE PTR [ebp-0x4],0x3
1000904f:	call   0x1000c4e0
10009054:	mov    BYTE PTR [ebp-0x4],0x5
10009058:	cmp    DWORD PTR [ebp-0x1054],0x10
1000905f:	jb     0x10009070
10009061:	mov    eax,DWORD PTR [ebp-0x1068]
10009067:	push   eax
10009068:	call   0x10015ad6
1000906d:	add    esp,0x4
10009070:	lea    ecx,[ebp-0x1040]
10009076:	mov    DWORD PTR [ebp-0x1054],0xf
10009080:	mov    DWORD PTR [ebp-0x1058],edi
10009086:	mov    BYTE PTR [ebp-0x1068],0x0
1000908d:	mov    BYTE PTR [ebp-0x103c],0x1
10009094:	call   0x10009fb0
10009099:	push   0x10056f14
1000909e:	mov    esi,eax
100090a0:	mov    edi,DWORD PTR [esi]
100090a2:	push   0x17
100090a4:	push   0x10056e7c
100090a9:	call   0x10003340
100090ae:	mov    edx,DWORD PTR [edi]
100090b0:	add    esp,0xc
100090b3:	push   eax
100090b4:	mov    ecx,esi
100090b6:	call   edx
100090b8:	lea    ecx,[ebp-0x1040]
100090be:	mov    DWORD PTR [ebp-0x1034],eax
100090c4:	mov    DWORD PTR [ebp-0x1030],edx
100090ca:	call   0x10009fb0
100090cf:	push   0x10056f40
100090d4:	mov    esi,eax
100090d6:	mov    edi,DWORD PTR [esi]
100090d8:	push   0x17
100090da:	push   0x10056ebc
100090df:	call   0x10003340
100090e4:	add    esp,0xc
100090e7:	push   eax
100090e8:	mov    eax,DWORD PTR [edi]
100090ea:	mov    ecx,esi
100090ec:	call   eax
100090ee:	mov    DWORD PTR [ebp-0x1028],edx
100090f4:	lea    edx,[ebp-0x1024]
100090fa:	mov    DWORD PTR [ebp-0x102c],eax
10009100:	mov    eax,ebx
10009102:	sub    edx,ebx
10009104:	movzx  ecx,WORD PTR [eax]
10009107:	mov    WORD PTR [edx+eax*1],cx
1000910b:	add    eax,0x2
1000910e:	test   cx,cx
10009111:	jne    0x10009104
10009113:	mov    eax,DWORD PTR [ebp+0x10]
10009116:	lea    edx,[ebp-0x824]
1000911c:	sub    edx,eax
1000911e:	mov    edi,edi
10009120:	movzx  ecx,WORD PTR [eax]
10009123:	mov    WORD PTR [edx+eax*1],cx
10009127:	add    eax,0x2
1000912a:	test   cx,cx
1000912d:	jne    0x10009120
1000912f:	mov    eax,DWORD PTR [ebp-0x104c]
10009135:	mov    ecx,DWORD PTR [eax+0x6]
10009138:	lea    edx,[ebp-0x103c]
1000913e:	push   edx
1000913f:	push   ecx
10009140:	add    eax,0x12
10009143:	push   eax
10009144:	mov    eax,DWORD PTR [ebp-0x1044]
1000914a:	push   eax
1000914b:	call   0x10008ad0
10009150:	add    esp,0x10
10009153:	test   al,al
10009155:	jne    0x1000917c
10009157:	mov    ecx,DWORD PTR [ebp-0x104c]
1000915d:	push   ecx
1000915e:	call   0x10015ad6
10009163:	add    esp,0x4
10009166:	lea    ecx,[ebp-0x1040]
1000916c:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009173:	call   0x1000a150
10009178:	xor    eax,eax
1000917a:	jmp    0x100091a2
1000917c:	mov    edx,DWORD PTR [ebp-0x104c]
10009182:	push   edx
10009183:	call   0x10015ad6
10009188:	add    esp,0x4
1000918b:	lea    ecx,[ebp-0x1040]
10009191:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009198:	call   0x1000a150
1000919d:	mov    eax,0x1
100091a2:	mov    ecx,DWORD PTR [ebp-0xc]
100091a5:	mov    DWORD PTR fs:0x0,ecx
100091ac:	pop    ecx
100091ad:	pop    edi
100091ae:	pop    esi
100091af:	pop    ebx
100091b0:	mov    ecx,DWORD PTR [ebp-0x18]
100091b3:	xor    ecx,ebp
100091b5:	call   0x10015adb
100091ba:	mov    esp,ebp
100091bc:	pop    ebp
100091bd:	ret    
100091be:	int3   
100091bf:	int3   
100091c0:	push   0xffffffff
100091c2:	push   0x1002b4cb
100091c7:	mov    eax,fs:0x0
100091cd:	push   eax
100091ce:	sub    esp,0x88
100091d4:	mov    eax,ds:0x10064694
100091d9:	xor    eax,esp
100091db:	mov    DWORD PTR [esp+0x84],eax
100091e2:	push   edi
100091e3:	mov    eax,ds:0x10064694
100091e8:	xor    eax,esp
100091ea:	push   eax
100091eb:	lea    eax,[esp+0x90]
100091f2:	mov    fs:0x0,eax
100091f8:	mov    BYTE PTR [esi+0x890],0x0
100091ff:	mov    eax,ds:0x10066120
10009204:	mov    edx,DWORD PTR [eax+0xc]
10009207:	mov    ecx,0x10066120
1000920c:	call   edx
1000920e:	add    eax,0x10
10009211:	mov    DWORD PTR [esp+0x8],eax
10009215:	mov    DWORD PTR [esp+0x98],0x0
10009220:	mov    eax,DWORD PTR [esi+0x4]
10009223:	push   eax
10009224:	push   0x10056f74
10009229:	push   0x10
1000922b:	push   0x10056fa0
10009230:	call   0x10003540
10009235:	add    esp,0xc
10009238:	push   eax
10009239:	lea    ecx,[esp+0x10]
1000923d:	push   ecx
1000923e:	call   0x1000aa40
10009243:	mov    edx,DWORD PTR [esp+0x14]
10009247:	mov    eax,DWORD PTR [esi]
10009249:	add    esp,0xc
1000924c:	push   edx
1000924d:	push   eax
1000924e:	lea    ecx,[esp+0x14]
10009252:	call   0x10008c80
10009257:	add    esp,0x8
1000925a:	test   eax,eax
1000925c:	je     0x100092b8
1000925e:	lea    eax,[esp+0xc]
10009262:	push   eax
10009263:	call   0x100164ef
10009268:	mov    edi,eax
1000926a:	add    esp,0x4
1000926d:	test   edi,edi
1000926f:	je     0x100092b8
10009271:	mov    eax,DWORD PTR [esi]
10009273:	push   0x0
10009275:	push   0x880
1000927a:	lea    ecx,[esi+0x8]
1000927d:	push   ecx
1000927e:	push   edi
1000927f:	push   eax
10009280:	call   DWORD PTR ds:0x1002c118
10009286:	test   eax,eax
10009288:	jne    0x100092ab
1000928a:	mov    DWORD PTR [esp+0x98],0xffffffff
10009295:	mov    eax,DWORD PTR [esp+0x8]
10009299:	add    eax,0xfffffff0
1000929c:	lea    edx,[eax+0xc]
1000929f:	or     ecx,0xffffffff
100092a2:	lock xadd DWORD PTR [edx],ecx
100092a6:	dec    ecx
100092a7:	test   ecx,ecx
100092a9:	jmp    0x100092d7
100092ab:	mov    DWORD PTR [esi+0x888],edi
100092b1:	mov    BYTE PTR [esi+0x890],0x1
100092b8:	mov    DWORD PTR [esp+0x98],0xffffffff
100092c3:	mov    eax,DWORD PTR [esp+0x8]
100092c7:	add    eax,0xfffffff0
100092ca:	or     edx,0xffffffff
100092cd:	lea    ecx,[eax+0xc]
100092d0:	lock xadd DWORD PTR [ecx],edx
100092d4:	dec    edx
100092d5:	test   edx,edx
100092d7:	jg     0x100092e3
100092d9:	mov    ecx,DWORD PTR [eax]
100092db:	mov    edx,DWORD PTR [ecx]
100092dd:	push   eax
100092de:	mov    eax,DWORD PTR [edx+0x4]
100092e1:	call   eax
100092e3:	mov    ecx,DWORD PTR [esp+0x90]
100092ea:	mov    DWORD PTR fs:0x0,ecx
100092f1:	pop    ecx
100092f2:	pop    edi
100092f3:	mov    ecx,DWORD PTR [esp+0x84]
100092fa:	xor    ecx,esp
100092fc:	call   0x10015adb
10009301:	add    esp,0x94
10009307:	ret    
10009308:	int3   
10009309:	int3   
1000930a:	int3   
1000930b:	int3   
1000930c:	int3   
1000930d:	int3   
1000930e:	int3   
1000930f:	int3   
10009310:	push   ebp
10009311:	mov    ebp,esp
10009313:	and    esp,0xfffffff8
10009316:	push   0xffffffff
10009318:	push   0x1002b661
1000931d:	mov    eax,fs:0x0
10009323:	push   eax
10009324:	sub    esp,0x874
1000932a:	mov    eax,ds:0x10064694
1000932f:	xor    eax,esp
10009331:	mov    DWORD PTR [esp+0x86c],eax
10009338:	push   esi
10009339:	push   edi
1000933a:	mov    eax,ds:0x10064694
1000933f:	xor    eax,esp
10009341:	push   eax
10009342:	lea    eax,[esp+0x880]
10009349:	mov    fs:0x0,eax
1000934f:	mov    eax,DWORD PTR [ebp+0x8]
10009352:	mov    edi,ecx
10009354:	mov    esi,edi
10009356:	mov    DWORD PTR [esp+0x14],eax
1000935a:	call   0x100091c0
1000935f:	cmp    BYTE PTR [edi+0x890],0x0
10009366:	je     0x1000945d
1000936c:	push   ecx
1000936d:	lea    esi,[edi+0x88]
10009373:	mov    ecx,esp
10009375:	mov    DWORD PTR [esp+0x1c],esp
10009379:	push   esi
1000937a:	call   0x10002d50
1000937f:	mov    ecx,DWORD PTR [edi+0x4]
10009382:	push   ecx
10009383:	call   0x10002940
10009388:	add    esp,0x8
1000938b:	test   al,al
1000938d:	je     0x100093d6
1000938f:	xor    esi,esi
10009391:	push   esi
10009392:	push   0x10055592
10009397:	lea    ecx,[esp+0x38]
1000939b:	mov    DWORD PTR [esp+0x50],0xf
100093a3:	mov    DWORD PTR [esp+0x4c],esi
100093a7:	mov    BYTE PTR [esp+0x3c],0x0
100093ac:	call   0x10003900
100093b1:	lea    edx,[esp+0x30]
100093b5:	push   edx
100093b6:	lea    eax,[esp+0x50]
100093ba:	push   eax
100093bb:	mov    DWORD PTR [esp+0x890],esi
100093c2:	call   0x10001490
100093c7:	push   0x10058a78
100093cc:	lea    ecx,[esp+0x50]
100093d0:	push   ecx
100093d1:	call   0x100161ce
100093d6:	mov    edx,esi
100093d8:	mov    eax,ebx
100093da:	sub    edx,ebx
100093dc:	lea    esp,[esp+0x0]
100093e0:	movzx  ecx,WORD PTR [eax]
100093e3:	mov    WORD PTR [edx+eax*1],cx
100093e7:	add    eax,0x2
100093ea:	test   cx,cx
100093ed:	jne    0x100093e0
100093ef:	lea    ecx,[esp+0x1c]
100093f3:	call   0x1000a040
100093f8:	mov    DWORD PTR [esp+0x888],0x1
10009403:	mov    edx,DWORD PTR [edi+0x4]
10009406:	push   edx
10009407:	lea    ecx,[esp+0x20]
1000940b:	call   0x10007b50
10009410:	mov    eax,DWORD PTR [edi+0x70]
10009413:	mov    ecx,DWORD PTR [edi]
10009415:	xor    edx,edx
10009417:	push   0x8000
1000941c:	push   edx
1000941d:	push   eax
1000941e:	push   ecx
1000941f:	mov    DWORD PTR [edi+0x70],edx
10009422:	mov    DWORD PTR [edi+0x74],edx
10009425:	mov    DWORD PTR [edi+0x78],edx
10009428:	call   DWORD PTR ds:0x1002c124
1000942e:	mov    eax,DWORD PTR [esp+0x14]
10009432:	push   eax
10009433:	mov    ecx,edi
10009435:	call   0x10007db0
1000943a:	push   edi
1000943b:	call   0x10008a30
10009440:	lea    esi,[esp+0x1c]
10009444:	mov    DWORD PTR [esp+0x888],0xffffffff
1000944f:	call   0x10007c50
10009454:	mov    ecx,esi
10009456:	call   0x1000a130
1000945b:	jmp    0x10009495
1000945d:	lea    edx,[edi+0x88]
10009463:	mov    eax,ebx
10009465:	sub    edx,ebx
10009467:	jmp    0x10009470
10009469:	lea    esp,[esp+0x0]
10009470:	movzx  ecx,WORD PTR [eax]
10009473:	mov    WORD PTR [edx+eax*1],cx
10009477:	add    eax,0x2
1000947a:	test   cx,cx
1000947d:	jne    0x10009470
1000947f:	call   0x100088d0
10009484:	mov    ecx,DWORD PTR [esp+0x14]
10009488:	push   ecx
10009489:	mov    ecx,edi
1000948b:	call   0x10007db0
10009490:	call   0x10008020
10009495:	mov    eax,DWORD PTR [edi+0x888]
1000949b:	push   0xa
1000949d:	lea    edx,[esp+0x78]
100094a1:	push   edx
100094a2:	cdq    
100094a3:	push   edx
100094a4:	push   eax
100094a5:	call   0x10017951
100094aa:	mov    eax,ds:0x10066120
100094af:	mov    edx,DWORD PTR [eax+0xc]
100094b2:	add    esp,0x10
100094b5:	mov    ecx,0x10066120
100094ba:	call   edx
100094bc:	add    eax,0x10
100094bf:	mov    DWORD PTR [esp+0x10],eax
100094c3:	mov    DWORD PTR [esp+0x888],0x2
100094ce:	mov    eax,DWORD PTR [edi+0x4]
100094d1:	push   eax
100094d2:	push   0x10056fc4
100094d7:	push   0x10
100094d9:	push   0x10056fa0
100094de:	call   0x10003540
100094e3:	add    esp,0xc
100094e6:	push   eax
100094e7:	lea    ecx,[esp+0x18]
100094eb:	push   ecx
100094ec:	call   0x1000aa40
100094f1:	mov    eax,DWORD PTR [esp+0x1c]
100094f5:	mov    edi,DWORD PTR [edi]
100094f7:	add    esp,0xc
100094fa:	lea    edx,[esp+0x74]
100094fe:	push   edx
100094ff:	push   eax
10009500:	push   edi
10009501:	call   0x10008f20
10009506:	mov    DWORD PTR [esp+0x894],0xffffffff
10009511:	mov    eax,DWORD PTR [esp+0x1c]
10009515:	add    eax,0xfffffff0
10009518:	add    esp,0xc
1000951b:	lea    ecx,[eax+0xc]
1000951e:	or     edx,0xffffffff
10009521:	lock xadd DWORD PTR [ecx],edx
10009525:	dec    edx
10009526:	test   edx,edx
10009528:	jg     0x10009534
1000952a:	mov    ecx,DWORD PTR [eax]
1000952c:	mov    edx,DWORD PTR [ecx]
1000952e:	push   eax
1000952f:	mov    eax,DWORD PTR [edx+0x4]
10009532:	call   eax
10009534:	mov    ecx,DWORD PTR [esp+0x880]
1000953b:	mov    DWORD PTR fs:0x0,ecx
10009542:	pop    ecx
10009543:	pop    edi
10009544:	pop    esi
10009545:	mov    ecx,DWORD PTR [esp+0x86c]
1000954c:	xor    ecx,esp
1000954e:	call   0x10015adb
10009553:	mov    esp,ebp
10009555:	pop    ebp
10009556:	ret    0x4
10009559:	int3   
1000955a:	int3   
1000955b:	int3   
1000955c:	int3   
1000955d:	int3   
1000955e:	int3   
1000955f:	int3   
10009560:	push   ebp
10009561:	mov    ebp,esp
10009563:	push   0xffffffff
10009565:	push   0x1002b6e6
1000956a:	mov    eax,fs:0x0
10009570:	push   eax
10009571:	sub    esp,0x8bc
10009577:	mov    eax,ds:0x10064694
1000957c:	xor    eax,ebp
1000957e:	mov    DWORD PTR [ebp-0x14],eax
10009581:	push   ebx
10009582:	push   esi
10009583:	push   edi
10009584:	push   eax
10009585:	lea    eax,[ebp-0xc]
10009588:	mov    fs:0x0,eax
1000958e:	mov    DWORD PTR [ebp-0x10],esp
10009591:	mov    esi,DWORD PTR [ebp+0x8]
10009594:	mov    edi,DWORD PTR [ebp+0xc]
10009597:	mov    ebx,DWORD PTR [ebp+0x10]
1000959a:	lea    eax,[ebp-0x8ac]
100095a0:	push   eax
100095a1:	mov    ecx,esi
100095a3:	mov    DWORD PTR [ebp-0x4],0x0
100095aa:	call   0x10007ca0
100095af:	push   edi
100095b0:	lea    ecx,[ebp-0x8ac]
100095b6:	mov    BYTE PTR [ebp-0x4],0x1
100095ba:	call   0x10009310
100095bf:	call   DWORD PTR ds:0x10064614
100095c5:	mov    edi,eax
100095c7:	call   DWORD PTR ds:0x1002c0a0
100095cd:	cmp    esi,eax
100095cf:	je     0x10009638
100095d1:	test   ebx,ebx
100095d3:	jne    0x100095e9
100095d5:	mov    ecx,DWORD PTR [ebp-0x8ac]
100095db:	xor    eax,eax
100095dd:	push   eax
100095de:	push   ecx
100095df:	call   0x10009b00
100095e4:	add    esp,0x8
100095e7:	jmp    0x1000963f
100095e9:	push   ebx
100095ea:	call   DWORD PTR ds:0x1002c028
100095f0:	add    eax,0x1
100095f3:	cmp    eax,0x3fffffff
100095f8:	jle    0x1000960e
100095fa:	mov    ecx,DWORD PTR [ebp-0x8ac]
10009600:	xor    eax,eax
10009602:	push   eax
10009603:	push   ecx
10009604:	call   0x10009b00
10009609:	add    esp,0x8
1000960c:	jmp    0x1000963f
1000960e:	lea    esi,[eax+eax*1]
10009611:	mov    eax,esi
10009613:	call   0x10015af0
10009618:	mov    DWORD PTR [ebp-0x10],esp
1000961b:	mov    eax,esp
1000961d:	push   edi
1000961e:	push   esi
1000961f:	push   ebx
10009620:	push   eax
10009621:	call   0x10001010
10009626:	mov    ecx,DWORD PTR [ebp-0x8ac]
1000962c:	push   eax
1000962d:	push   ecx
1000962e:	call   0x10009b00
10009633:	add    esp,0x8
10009636:	jmp    0x1000963f
10009638:	push   ebx
10009639:	call   DWORD PTR ds:0x1002c12c
1000963f:	lea    ecx,[ebp-0x18]
10009642:	call   0x10009f60
10009647:	mov    esi,DWORD PTR [ebp-0x8ac]
1000964d:	test   esi,esi
1000964f:	je     0x10009667
10009651:	call   DWORD PTR ds:0x1002c07c
10009657:	push   esi
10009658:	mov    edi,eax
1000965a:	call   DWORD PTR ds:0x1002c058
10009660:	push   edi
10009661:	call   DWORD PTR ds:0x1002c078
10009667:	lea    esp,[ebp-0x8d8]
1000966d:	mov    ecx,DWORD PTR [ebp-0xc]
10009670:	mov    DWORD PTR fs:0x0,ecx
10009677:	pop    ecx
10009678:	pop    edi
10009679:	pop    esi
1000967a:	pop    ebx
1000967b:	mov    ecx,DWORD PTR [ebp-0x14]
1000967e:	xor    ecx,ebp
10009680:	call   0x10015adb
10009685:	mov    esp,ebp
10009687:	pop    ebp
10009688:	ret    
10009689:	push   0x10055592
1000968e:	lea    ecx,[ebp-0x8c8]
10009694:	call   0x10002b40
10009699:	lea    edx,[ebp-0x8c8]
1000969f:	push   edx
100096a0:	push   0x0
100096a2:	push   0x4
100096a4:	mov    BYTE PTR [ebp-0x4],0x3
100096a8:	call   0x1000c240
100096ad:	add    esp,0xc
100096b0:	lea    ecx,[ebp-0x8c8]
100096b6:	call   0x10002b80
100096bb:	mov    eax,0x10009667
100096c0:	ret    
100096c1:	int3   
100096c2:	int3   
100096c3:	int3   
100096c4:	int3   
100096c5:	int3   
100096c6:	int3   
100096c7:	int3   
100096c8:	int3   
100096c9:	int3   
100096ca:	int3   
100096cb:	int3   
100096cc:	int3   
100096cd:	int3   
100096ce:	int3   
100096cf:	int3   
100096d0:	push   edi
100096d1:	lea    ecx,[esi+0x894]
100096d7:	call   0x10009f60
100096dc:	mov    edi,DWORD PTR [esi]
100096de:	test   edi,edi
100096e0:	je     0x100096fa
100096e2:	push   ebx
100096e3:	call   DWORD PTR ds:0x1002c07c
100096e9:	push   edi
100096ea:	mov    ebx,eax
100096ec:	call   DWORD PTR ds:0x1002c058
100096f2:	push   ebx
100096f3:	call   DWORD PTR ds:0x1002c078
100096f9:	pop    ebx
100096fa:	mov    DWORD PTR [esi],0x0
10009700:	pop    edi
10009701:	ret    
10009702:	int3   
10009703:	int3   
10009704:	int3   
10009705:	int3   
10009706:	int3   
10009707:	int3   
10009708:	int3   
10009709:	int3   
1000970a:	int3   
1000970b:	int3   
1000970c:	int3   
1000970d:	int3   
1000970e:	int3   
1000970f:	int3   
10009710:	push   ebp
10009711:	mov    ebp,esp
10009713:	push   0xffffffff
10009715:	push   0x1002b6a6
1000971a:	mov    eax,fs:0x0
10009720:	push   eax
10009721:	push   ecx
10009722:	sub    esp,0x910
10009728:	mov    eax,ds:0x10064694
1000972d:	xor    eax,ebp
1000972f:	mov    DWORD PTR [ebp-0x18],eax
10009732:	push   ebx
10009733:	push   esi
10009734:	push   edi
10009735:	push   eax
10009736:	lea    eax,[ebp-0xc]
10009739:	mov    fs:0x0,eax
1000973f:	mov    DWORD PTR [ebp-0x10],esp
10009742:	mov    DWORD PTR [ebp-0x4],0x0
10009749:	lea    eax,[ebp-0x8b0]
1000974f:	push   eax
10009750:	mov    ecx,DWORD PTR [ebp+0x8]
10009753:	call   0x10007ca0
10009758:	mov    DWORD PTR [ebp-0x914],eax
1000975e:	mov    BYTE PTR [ebp-0x4],0x1
10009762:	mov    ecx,DWORD PTR [ebp+0xc]
10009765:	push   ecx
10009766:	mov    ebx,DWORD PTR [ebp+0x10]
10009769:	lea    ecx,[ebp-0x8b0]
1000976f:	call   0x10009310
10009774:	call   0x10001000
10009779:	mov    DWORD PTR [ebp-0x8b8],eax
1000977f:	mov    edx,DWORD PTR [ebp+0x10]
10009782:	mov    DWORD PTR [ebp-0x8b4],edx
10009788:	cmp    DWORD PTR [ebp-0x8b4],0x0
1000978f:	jne    0x1000979d
10009791:	mov    DWORD PTR [ebp-0x918],0x0
1000979b:	jmp    0x1000980a
1000979d:	mov    eax,DWORD PTR [ebp-0x8b4]
100097a3:	push   eax
100097a4:	call   DWORD PTR ds:0x1002c028
100097aa:	add    eax,0x1
100097ad:	mov    DWORD PTR [ebp-0x14],eax
100097b0:	cmp    DWORD PTR [ebp-0x14],0x3fffffff
100097b7:	jle    0x100097c5
100097b9:	mov    DWORD PTR [ebp-0x91c],0x0
100097c3:	jmp    0x100097fe
100097c5:	mov    eax,DWORD PTR [ebp-0x14]
100097c8:	shl    eax,1
100097ca:	call   0x10015af0
100097cf:	mov    DWORD PTR [ebp-0x920],esp
100097d5:	mov    DWORD PTR [ebp-0x10],esp
100097d8:	mov    ecx,DWORD PTR [ebp-0x8b8]
100097de:	push   ecx
100097df:	mov    edx,DWORD PTR [ebp-0x14]
100097e2:	shl    edx,1
100097e4:	push   edx
100097e5:	mov    eax,DWORD PTR [ebp-0x8b4]
100097eb:	push   eax
100097ec:	mov    ecx,DWORD PTR [ebp-0x920]
100097f2:	push   ecx
100097f3:	call   0x10001010
100097f8:	mov    DWORD PTR [ebp-0x91c],eax
100097fe:	mov    edx,DWORD PTR [ebp-0x91c]
10009804:	mov    DWORD PTR [ebp-0x918],edx
1000980a:	mov    eax,DWORD PTR [ebp-0x918]
10009810:	push   eax
10009811:	lea    eax,[ebp-0x8b0]
10009817:	call   0x10007b30
1000981c:	push   eax
1000981d:	call   0x10009b00
10009822:	add    esp,0x8
10009825:	mov    BYTE PTR [ebp-0x8bd],0x1
1000982c:	mov    BYTE PTR [ebp-0x4],0x0
10009830:	lea    esi,[ebp-0x8b0]
10009836:	call   0x100096d0
1000983b:	mov    al,BYTE PTR [ebp-0x8bd]
10009841:	jmp    0x1000988f
10009843:	push   0x10055592
10009848:	lea    ecx,[ebp-0x8dc]
1000984e:	call   0x10002b40
10009853:	mov    BYTE PTR [ebp-0x4],0x3
10009857:	lea    ecx,[ebp-0x8dc]
1000985d:	push   ecx
1000985e:	push   0x0
10009860:	push   0x4
10009862:	call   0x1000c240
10009867:	add    esp,0xc
1000986a:	mov    BYTE PTR [ebp-0x4],0x2
1000986e:	lea    ecx,[ebp-0x8dc]
10009874:	call   0x10002b80
10009879:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009880:	mov    eax,0x1000988d
10009885:	ret    
10009886:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000988d:	xor    al,al
1000988f:	lea    esp,[ebp-0x930]
10009895:	mov    ecx,DWORD PTR [ebp-0xc]
10009898:	mov    DWORD PTR fs:0x0,ecx
1000989f:	pop    ecx
100098a0:	pop    edi
100098a1:	pop    esi
100098a2:	pop    ebx
100098a3:	mov    ecx,DWORD PTR [ebp-0x18]
100098a6:	xor    ecx,ebp
100098a8:	call   0x10015adb
100098ad:	mov    esp,ebp
100098af:	pop    ebp
100098b0:	ret    
100098b1:	int3   
100098b2:	int3   
100098b3:	int3   
100098b4:	int3   
100098b5:	int3   
100098b6:	int3   
100098b7:	int3   
100098b8:	int3   
100098b9:	int3   
100098ba:	int3   
100098bb:	int3   
100098bc:	int3   
100098bd:	int3   
100098be:	int3   
100098bf:	int3   
100098c0:	push   ebp
100098c1:	mov    ebp,esp
100098c3:	sub    esp,0x14
100098c6:	lea    ecx,[ebp-0x5]
100098c9:	call   0x10006c60
100098ce:	mov    eax,DWORD PTR [ebp+0x8]
100098d1:	mov    DWORD PTR [ebp-0x4],eax
100098d4:	mov    ecx,DWORD PTR [ebp-0x4]
100098d7:	mov    DWORD PTR [ebp-0x10],ecx
100098da:	mov    edx,DWORD PTR [ebp-0x10]
100098dd:	mov    eax,DWORD PTR [edx+0x4]
100098e0:	push   eax
100098e1:	mov    ecx,DWORD PTR [ebp-0x4]
100098e4:	mov    edx,DWORD PTR [ecx]
100098e6:	push   edx
100098e7:	call   0x10006cf0
100098ec:	add    esp,0x8
100098ef:	push   0x0
100098f1:	mov    eax,DWORD PTR [ebp-0x4]
100098f4:	mov    ecx,DWORD PTR [eax]
100098f6:	push   ecx
100098f7:	call   DWORD PTR ds:0x1002c120
100098fd:	mov    DWORD PTR [ebp-0xc],0x0
10009904:	mov    edx,DWORD PTR [ebp-0x4]
10009907:	mov    DWORD PTR [ebp-0x14],edx
1000990a:	mov    eax,DWORD PTR [ebp-0x14]
1000990d:	push   eax
1000990e:	call   0x10015ad6
10009913:	add    esp,0x4
10009916:	lea    ecx,[ebp-0x5]
10009919:	call   0x10006c80
1000991e:	mov    eax,DWORD PTR [ebp-0xc]
10009921:	mov    esp,ebp
10009923:	pop    ebp
10009924:	ret    0x4
10009927:	int3   
10009928:	int3   
10009929:	int3   
1000992a:	int3   
1000992b:	int3   
1000992c:	int3   
1000992d:	int3   
1000992e:	int3   
1000992f:	int3   
10009930:	push   ebp
10009931:	mov    ebp,esp
10009933:	push   0xffffffff
10009935:	push   0x1002b7c0
1000993a:	mov    eax,fs:0x0
10009940:	push   eax
10009941:	sub    esp,0x94
10009947:	mov    eax,ds:0x10064694
1000994c:	xor    eax,ebp
1000994e:	push   eax
1000994f:	lea    eax,[ebp-0xc]
10009952:	mov    fs:0x0,eax
10009958:	mov    DWORD PTR [ebp-0x64],0x0
1000995f:	push   0x40
10009961:	push   0x0
10009963:	lea    eax,[ebp-0x60]
10009966:	push   eax
10009967:	call   0x10016530
1000996c:	add    esp,0xc
1000996f:	mov    DWORD PTR [ebp-0x64],0x44
10009976:	mov    DWORD PTR [ebp-0x1c],0x0
1000997d:	xor    ecx,ecx
1000997f:	mov    DWORD PTR [ebp-0x18],ecx
10009982:	mov    DWORD PTR [ebp-0x14],ecx
10009985:	mov    DWORD PTR [ebp-0x10],ecx
10009988:	lea    edx,[ebp-0x1c]
1000998b:	push   edx
1000998c:	lea    eax,[ebp-0x64]
1000998f:	push   eax
10009990:	push   0x0
10009992:	push   0x0
10009994:	push   0x4
10009996:	push   0x1
10009998:	push   0x0
1000999a:	push   0x0
1000999c:	push   0x10055570
100099a1:	mov    ecx,DWORD PTR [ebp+0xc]
100099a4:	push   ecx
100099a5:	call   DWORD PTR ds:0x1002c0c4
100099ab:	test   eax,eax
100099ad:	je     0x10009ae0
100099b3:	push   0x0
100099b5:	lea    ecx,[ebp-0x6c]
100099b8:	call   0x10003290
100099bd:	mov    DWORD PTR [ebp-0x4],0x0
100099c4:	mov    edx,DWORD PTR [ebp-0x1c]
100099c7:	push   edx
100099c8:	lea    ecx,[ebp-0x6c]
100099cb:	call   0x10003d90
100099d0:	push   0x0
100099d2:	lea    ecx,[ebp-0x68]
100099d5:	call   0x10003290
100099da:	mov    BYTE PTR [ebp-0x4],0x1
100099de:	mov    eax,DWORD PTR [ebp-0x18]
100099e1:	push   eax
100099e2:	lea    ecx,[ebp-0x68]
100099e5:	call   0x10003d90
100099ea:	mov    ecx,DWORD PTR [ebp+0x10]
100099ed:	push   ecx
100099ee:	mov    edx,DWORD PTR [ebp+0x8]
100099f1:	push   edx
100099f2:	mov    eax,DWORD PTR [ebp-0x14]
100099f5:	push   eax
100099f6:	call   0x10009710
100099fb:	add    esp,0xc
100099fe:	movzx  ecx,al
10009a01:	test   ecx,ecx
10009a03:	je     0x10009ac3
10009a09:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10009a0d:	je     0x10009ac3
10009a13:	mov    DWORD PTR [ebp-0x78],0x8
10009a1a:	mov    edx,DWORD PTR [ebp-0x78]
10009a1d:	push   edx
10009a1e:	call   0x10016414
10009a23:	add    esp,0x4
10009a26:	mov    DWORD PTR [ebp-0x7c],eax
10009a29:	cmp    DWORD PTR [ebp-0x7c],0x0
10009a2d:	je     0x10009a4c
10009a2f:	mov    eax,DWORD PTR [ebp-0x78]
10009a32:	push   eax
10009a33:	push   0x0
10009a35:	mov    ecx,DWORD PTR [ebp-0x7c]
10009a38:	push   ecx
10009a39:	call   0x10016530
10009a3e:	add    esp,0xc
10009a41:	mov    edx,DWORD PTR [ebp-0x7c]
10009a44:	mov    DWORD PTR [ebp-0x88],edx
10009a4a:	jmp    0x10009a56
10009a4c:	mov    DWORD PTR [ebp-0x88],0x0
10009a56:	mov    eax,DWORD PTR [ebp-0x88]
10009a5c:	mov    DWORD PTR [ebp-0x70],eax
10009a5f:	mov    ecx,DWORD PTR [ebp-0x70]
10009a62:	mov    DWORD PTR [ebp-0x90],ecx
10009a68:	lea    ecx,[ebp-0x6c]
10009a6b:	call   0x10007890
10009a70:	mov    edx,DWORD PTR [ebp-0x90]
10009a76:	mov    DWORD PTR [edx],eax
10009a78:	mov    eax,DWORD PTR [ebp-0x70]
10009a7b:	mov    ecx,DWORD PTR [ebp+0x14]
10009a7e:	mov    DWORD PTR [eax+0x4],ecx
10009a81:	mov    edx,DWORD PTR [ebp-0x70]
10009a84:	mov    DWORD PTR [ebp-0x94],edx
10009a8a:	mov    DWORD PTR [ebp-0x70],0x0
10009a91:	push   0x0
10009a93:	push   0x0
10009a95:	mov    eax,DWORD PTR [ebp-0x94]
10009a9b:	push   eax
10009a9c:	push   0x100098c0
10009aa1:	push   0x0
10009aa3:	push   0x0
10009aa5:	call   DWORD PTR ds:0x1002c074
10009aab:	mov    ecx,DWORD PTR [ebp-0x70]
10009aae:	mov    DWORD PTR [ebp-0x98],ecx
10009ab4:	mov    edx,DWORD PTR [ebp-0x98]
10009aba:	push   edx
10009abb:	call   0x10015ad6
10009ac0:	add    esp,0x4
10009ac3:	mov    BYTE PTR [ebp-0x4],0x0
10009ac7:	lea    ecx,[ebp-0x68]
10009aca:	call   0x100032a0
10009acf:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009ad6:	lea    ecx,[ebp-0x6c]
10009ad9:	call   0x100032a0
10009ade:	jmp    0x10009ae9
10009ae0:	call   DWORD PTR ds:0x1002c07c
10009ae6:	mov    DWORD PTR [ebp-0x74],eax
10009ae9:	mov    ecx,DWORD PTR [ebp-0xc]
10009aec:	mov    DWORD PTR fs:0x0,ecx
10009af3:	pop    ecx
10009af4:	mov    esp,ebp
10009af6:	pop    ebp
10009af7:	ret    
10009af8:	int3   
10009af9:	int3   
10009afa:	int3   
10009afb:	int3   
10009afc:	int3   
10009afd:	int3   
10009afe:	int3   
10009aff:	int3   
10009b00:	push   ebp
10009b01:	mov    ebp,esp
10009b03:	push   0xffffffff
10009b05:	push   0x1002b07b
10009b0a:	mov    eax,fs:0x0
10009b10:	push   eax
10009b11:	push   ecx
10009b12:	sub    esp,0x220
10009b18:	mov    eax,ds:0x10064694
10009b1d:	xor    eax,ebp
10009b1f:	mov    DWORD PTR [ebp-0x3c],eax
10009b22:	push   ebx
10009b23:	push   esi
10009b24:	push   edi
10009b25:	push   eax
10009b26:	lea    eax,[ebp-0xc]
10009b29:	mov    fs:0x0,eax
10009b2f:	mov    DWORD PTR [ebp-0x10],esp
10009b32:	push   0x10056ff4
10009b37:	push   0xc
10009b39:	push   0x10056e3c
10009b3e:	call   0x10003540
10009b43:	add    esp,0x8
10009b46:	mov    ecx,esp
10009b48:	mov    DWORD PTR [ebp-0xd8],esp
10009b4e:	push   eax
10009b4f:	call   0x10002d50
10009b54:	mov    DWORD PTR [ebp-0x200],eax
10009b5a:	call   0x10007aa0
10009b5f:	add    esp,0x4
10009b62:	mov    DWORD PTR [ebp-0x174],eax
10009b68:	mov    eax,DWORD PTR [ebp-0x174]
10009b6e:	mov    DWORD PTR [ebp-0x28],eax
10009b71:	mov    DWORD PTR [ebp-0x4],0x0
10009b78:	cmp    DWORD PTR [ebp-0x28],0x0
10009b7c:	jne    0x10009bdc
10009b7e:	mov    BYTE PTR [ebp-0xd9],0x0
10009b85:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009b8c:	mov    ecx,DWORD PTR [ebp-0x28]
10009b8f:	mov    DWORD PTR [ebp-0x17c],ecx
10009b95:	mov    edx,DWORD PTR [ebp-0x17c]
10009b9b:	mov    DWORD PTR [ebp-0x178],edx
10009ba1:	cmp    DWORD PTR [ebp-0x178],0x0
10009ba8:	je     0x10009bc7
10009baa:	push   0x1
10009bac:	mov    eax,DWORD PTR [ebp-0x178]
10009bb2:	mov    edx,DWORD PTR [eax]
10009bb4:	mov    ecx,DWORD PTR [ebp-0x178]
10009bba:	mov    eax,DWORD PTR [edx+0x4]
10009bbd:	call   eax
10009bbf:	mov    DWORD PTR [ebp-0x204],eax
10009bc5:	jmp    0x10009bd1
10009bc7:	mov    DWORD PTR [ebp-0x204],0x0
10009bd1:	mov    al,BYTE PTR [ebp-0xd9]
10009bd7:	jmp    0x10009f40
10009bdc:	mov    ecx,DWORD PTR [ebp+0x8]
10009bdf:	push   ecx
10009be0:	call   0x10002b10
10009be5:	add    esp,0x4
10009be8:	push   eax
10009be9:	lea    esi,[ebp-0xf8]
10009bef:	call   0x10007910
10009bf4:	add    esp,0x4
10009bf7:	mov    DWORD PTR [ebp-0x208],eax
10009bfd:	mov    edx,DWORD PTR [ebp-0x208]
10009c03:	mov    DWORD PTR [ebp-0x20c],edx
10009c09:	mov    BYTE PTR [ebp-0x4],0x1
10009c0d:	lea    eax,[ebp-0x38]
10009c10:	push   eax
10009c11:	mov    ecx,DWORD PTR [ebp-0x20c]
10009c17:	call   0x1000c4e0
10009c1c:	mov    BYTE PTR [ebp-0x4],0x3
10009c20:	lea    ecx,[ebp-0xf8]
10009c26:	call   0x10002b80
10009c2b:	mov    BYTE PTR [ebp-0x11],0x0
10009c2f:	mov    DWORD PTR [ebp-0x18],0x0
10009c36:	mov    DWORD PTR [ebp-0x30],0x0
10009c3d:	mov    DWORD PTR [ebp-0x24],0x0
10009c44:	mov    DWORD PTR [ebp-0x2c],0x0
10009c4b:	mov    DWORD PTR [ebp-0x1c],0x0
10009c52:	mov    DWORD PTR [ebp-0x20],0x0
10009c59:	mov    BYTE PTR [ebp-0x4],0x4
10009c5d:	mov    ecx,DWORD PTR [ebp-0x28]
10009c60:	mov    DWORD PTR [ebp-0x210],ecx
10009c66:	push   0x10057034
10009c6b:	push   0xc
10009c6d:	push   0x10057068
10009c72:	call   0x10003340
10009c77:	add    esp,0xc
10009c7a:	mov    DWORD PTR [ebp-0x214],eax
10009c80:	mov    edx,DWORD PTR [ebp-0x214]
10009c86:	push   edx
10009c87:	mov    eax,DWORD PTR [ebp-0x210]
10009c8d:	mov    edx,DWORD PTR [eax]
10009c8f:	mov    ecx,DWORD PTR [ebp-0x210]
10009c95:	mov    eax,DWORD PTR [edx]
10009c97:	call   eax
10009c99:	mov    DWORD PTR [ebp-0x21c],eax
10009c9f:	mov    DWORD PTR [ebp-0x218],edx
10009ca5:	mov    ecx,DWORD PTR [ebp-0x21c]
10009cab:	mov    DWORD PTR [ebp-0xc8],ecx
10009cb1:	mov    edx,DWORD PTR [ebp-0x218]
10009cb7:	mov    DWORD PTR [ebp-0xc4],edx
10009cbd:	push   0x80
10009cc2:	push   0x0
10009cc4:	lea    eax,[ebp-0xc0]
10009cca:	push   eax
10009ccb:	call   0x10016530
10009cd0:	add    esp,0xc
10009cd3:	mov    ecx,DWORD PTR [ebp+0xc]
10009cd6:	mov    DWORD PTR [ebp-0x220],ecx
10009cdc:	lea    edx,[ebp-0xc0]
10009ce2:	mov    DWORD PTR [ebp-0x224],edx
10009ce8:	mov    eax,DWORD PTR [ebp-0x224]
10009cee:	mov    DWORD PTR [ebp-0x228],eax
10009cf4:	mov    ecx,DWORD PTR [ebp-0x220]
10009cfa:	mov    dl,BYTE PTR [ecx]
10009cfc:	mov    BYTE PTR [ebp-0x229],dl
10009d02:	mov    eax,DWORD PTR [ebp-0x224]
10009d08:	mov    cl,BYTE PTR [ebp-0x229]
10009d0e:	mov    BYTE PTR [eax],cl
10009d10:	mov    edx,DWORD PTR [ebp-0x220]
10009d16:	add    edx,0x1
10009d19:	mov    DWORD PTR [ebp-0x220],edx
10009d1f:	mov    eax,DWORD PTR [ebp-0x224]
10009d25:	add    eax,0x1
10009d28:	mov    DWORD PTR [ebp-0x224],eax
10009d2e:	cmp    BYTE PTR [ebp-0x229],0x0
10009d35:	jne    0x10009cf4
10009d37:	mov    ecx,DWORD PTR [ebp-0xc8]
10009d3d:	or     ecx,DWORD PTR [ebp-0xc4]
10009d43:	jne    0x10009d4a
10009d45:	jmp    0x10009e6f
10009d4a:	push   0x4
10009d4c:	push   0x3000
10009d51:	push   0x88
10009d56:	push   0x0
10009d58:	mov    edx,DWORD PTR [ebp+0x8]
10009d5b:	push   edx
10009d5c:	call   DWORD PTR ds:0x1002c110
10009d62:	mov    DWORD PTR [ebp-0x18],eax
10009d65:	cmp    DWORD PTR [ebp-0x18],0x0
10009d69:	jne    0x10009d7c
10009d6b:	call   DWORD PTR ds:0x1002c07c
10009d71:	mov    DWORD PTR [ebp-0xd4],eax
10009d77:	jmp    0x10009e6f
10009d7c:	lea    eax,[ebp-0x20]
10009d7f:	push   eax
10009d80:	push   0x88
10009d85:	lea    ecx,[ebp-0xc8]
10009d8b:	push   ecx
10009d8c:	mov    edx,DWORD PTR [ebp-0x18]
10009d8f:	push   edx
10009d90:	mov    eax,DWORD PTR [ebp+0x8]
10009d93:	push   eax
10009d94:	call   DWORD PTR ds:0x1002c128
10009d9a:	lea    eax,[ebp-0x38]
10009d9d:	call   0x1000c650
10009da2:	mov    DWORD PTR [ebp-0xcc],eax
10009da8:	push   0x40
10009daa:	push   0x3000
10009daf:	mov    ecx,DWORD PTR [ebp-0xcc]
10009db5:	push   ecx
10009db6:	push   0x0
10009db8:	mov    edx,DWORD PTR [ebp+0x8]
10009dbb:	push   edx
10009dbc:	call   DWORD PTR ds:0x1002c110
10009dc2:	mov    DWORD PTR [ebp-0x30],eax
10009dc5:	mov    eax,DWORD PTR [ebp-0x30]
10009dc8:	push   eax
10009dc9:	lea    eax,[ebp-0x38]
10009dcc:	call   0x1000c660
10009dd1:	cmp    DWORD PTR [ebp-0x30],0x0
10009dd5:	jne    0x10009ddc
10009dd7:	jmp    0x10009e6f
10009ddc:	lea    ecx,[ebp-0x20]
10009ddf:	push   ecx
10009de0:	mov    edx,DWORD PTR [ebp-0xcc]
10009de6:	push   edx
10009de7:	lea    eax,[ebp-0x38]
10009dea:	call   0x1000c640
10009def:	push   eax
10009df0:	mov    eax,DWORD PTR [ebp-0x30]
10009df3:	push   eax
10009df4:	mov    ecx,DWORD PTR [ebp+0x8]
10009df7:	push   ecx
10009df8:	call   DWORD PTR ds:0x1002c128
10009dfe:	mov    DWORD PTR [ebp-0xd0],0x0
10009e08:	lea    edx,[ebp-0xd0]
10009e0e:	push   edx
10009e0f:	push   0xf01ff
10009e14:	mov    eax,DWORD PTR [ebp+0x8]
10009e17:	push   eax
10009e18:	call   DWORD PTR ds:0x1002c014
10009e1e:	mov    ecx,DWORD PTR [ebp-0xd0]
10009e24:	push   ecx
10009e25:	call   DWORD PTR ds:0x1002c004
10009e2b:	lea    edx,[ebp-0x2c]
10009e2e:	push   edx
10009e2f:	push   0x0
10009e31:	mov    eax,DWORD PTR [ebp-0x18]
10009e34:	push   eax
10009e35:	mov    ecx,DWORD PTR [ebp-0x30]
10009e38:	push   ecx
10009e39:	push   0x0
10009e3b:	push   0x0
10009e3d:	mov    edx,DWORD PTR [ebp+0x8]
10009e40:	push   edx
10009e41:	call   DWORD PTR ds:0x1002c144
10009e47:	mov    DWORD PTR [ebp-0x24],eax
10009e4a:	cmp    DWORD PTR [ebp-0x24],0x0
10009e4e:	jne    0x10009e52
10009e50:	jmp    0x10009e6f
10009e52:	call   DWORD PTR ds:0x1002c000
10009e58:	push   0xffffffff
10009e5a:	mov    eax,DWORD PTR [ebp-0x24]
10009e5d:	push   eax
10009e5e:	call   DWORD PTR ds:0x1002c04c
10009e64:	mov    BYTE PTR [ebp-0x11],0x1
10009e68:	jmp    0x10009e6f
10009e6a:	jmp    0x10009c5d
10009e6f:	jmp    0x10009e7e
10009e71:	mov    DWORD PTR [ebp-0x4],0x3
10009e78:	mov    eax,0x10009e85
10009e7d:	ret    
10009e7e:	mov    DWORD PTR [ebp-0x4],0x3
10009e85:	cmp    DWORD PTR [ebp-0x18],0x0
10009e89:	je     0x10009ea0
10009e8b:	push   0x8000
10009e90:	push   0x0
10009e92:	mov    ecx,DWORD PTR [ebp-0x18]
10009e95:	push   ecx
10009e96:	mov    edx,DWORD PTR [ebp+0x8]
10009e99:	push   edx
10009e9a:	call   DWORD PTR ds:0x1002c124
10009ea0:	cmp    DWORD PTR [ebp-0x30],0x0
10009ea4:	je     0x10009ebb
10009ea6:	push   0x8000
10009eab:	push   0x0
10009ead:	mov    eax,DWORD PTR [ebp-0x30]
10009eb0:	push   eax
10009eb1:	mov    ecx,DWORD PTR [ebp+0x8]
10009eb4:	push   ecx
10009eb5:	call   DWORD PTR ds:0x1002c124
10009ebb:	cmp    DWORD PTR [ebp-0x24],0x0
10009ebf:	je     0x10009ed9
10009ec1:	lea    edx,[ebp-0x1c]
10009ec4:	push   edx
10009ec5:	mov    eax,DWORD PTR [ebp-0x24]
10009ec8:	push   eax
10009ec9:	call   DWORD PTR ds:0x1002c10c
10009ecf:	mov    ecx,DWORD PTR [ebp-0x24]
10009ed2:	push   ecx
10009ed3:	call   DWORD PTR ds:0x1002c058
10009ed9:	mov    dl,BYTE PTR [ebp-0x11]
10009edc:	mov    BYTE PTR [ebp-0xf9],dl
10009ee2:	mov    BYTE PTR [ebp-0x4],0x0
10009ee6:	lea    eax,[ebp-0x38]
10009ee9:	call   0x100078a0
10009eee:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009ef5:	mov    eax,DWORD PTR [ebp-0x28]
10009ef8:	mov    DWORD PTR [ebp-0x1fc],eax
10009efe:	mov    ecx,DWORD PTR [ebp-0x1fc]
10009f04:	mov    DWORD PTR [ebp-0x1f8],ecx
10009f0a:	cmp    DWORD PTR [ebp-0x1f8],0x0
10009f11:	je     0x10009f30
10009f13:	push   0x1
10009f15:	mov    edx,DWORD PTR [ebp-0x1f8]
10009f1b:	mov    eax,DWORD PTR [edx]
10009f1d:	mov    ecx,DWORD PTR [ebp-0x1f8]
10009f23:	mov    edx,DWORD PTR [eax+0x4]
10009f26:	call   edx
10009f28:	mov    DWORD PTR [ebp-0x230],eax
10009f2e:	jmp    0x10009f3a
10009f30:	mov    DWORD PTR [ebp-0x230],0x0
10009f3a:	mov    al,BYTE PTR [ebp-0xf9]
10009f40:	mov    ecx,DWORD PTR [ebp-0xc]
10009f43:	mov    DWORD PTR fs:0x0,ecx
10009f4a:	pop    ecx
10009f4b:	pop    edi
10009f4c:	pop    esi
10009f4d:	pop    ebx
10009f4e:	mov    ecx,DWORD PTR [ebp-0x3c]
10009f51:	xor    ecx,ebp
10009f53:	call   0x10015adb
10009f58:	mov    esp,ebp
10009f5a:	pop    ebp
10009f5b:	ret    
10009f5c:	int3   
10009f5d:	int3   
10009f5e:	int3   
10009f5f:	int3   
10009f60:	push   ebp
10009f61:	mov    ebp,esp
10009f63:	sub    esp,0x14
10009f66:	mov    DWORD PTR [ebp-0x10],ecx
10009f69:	mov    eax,DWORD PTR [ebp-0x10]
10009f6c:	mov    ecx,DWORD PTR [eax]
10009f6e:	mov    DWORD PTR [ebp-0x8],ecx
10009f71:	mov    edx,DWORD PTR [ebp-0x8]
10009f74:	mov    DWORD PTR [ebp-0x4],edx
10009f77:	cmp    DWORD PTR [ebp-0x4],0x0
10009f7b:	je     0x10009fa3
10009f7d:	mov    eax,DWORD PTR [ebp-0x4]
10009f80:	call   0x100078a0
10009f85:	mov    eax,0x1
10009f8a:	and    eax,0x1
10009f8d:	je     0x10009f9b
10009f8f:	mov    ecx,DWORD PTR [ebp-0x4]
10009f92:	push   ecx
10009f93:	call   0x10015ad6
10009f98:	add    esp,0x4
10009f9b:	mov    edx,DWORD PTR [ebp-0x4]
10009f9e:	mov    DWORD PTR [ebp-0x14],edx
10009fa1:	jmp    0x10009faa
10009fa3:	mov    DWORD PTR [ebp-0x14],0x0
10009faa:	mov    esp,ebp
10009fac:	pop    ebp
10009fad:	ret    
10009fae:	int3   
10009faf:	int3   
10009fb0:	push   ebp
10009fb1:	mov    ebp,esp
10009fb3:	sub    esp,0x8
10009fb6:	mov    DWORD PTR [ebp-0x8],ecx
10009fb9:	mov    eax,DWORD PTR [ebp-0x8]
10009fbc:	mov    ecx,DWORD PTR [eax]
10009fbe:	mov    DWORD PTR [ebp-0x4],ecx
10009fc1:	mov    eax,DWORD PTR [ebp-0x4]
10009fc4:	mov    esp,ebp
10009fc6:	pop    ebp
10009fc7:	ret    
10009fc8:	int3   
10009fc9:	int3   
10009fca:	int3   
10009fcb:	int3   
10009fcc:	int3   
10009fcd:	int3   
10009fce:	int3   
10009fcf:	int3   
10009fd0:	push   ebp
10009fd1:	mov    ebp,esp
10009fd3:	sub    esp,0x14
10009fd6:	mov    DWORD PTR [ebp-0x10],ecx
10009fd9:	mov    eax,DWORD PTR [ebp-0x10]
10009fdc:	mov    ecx,DWORD PTR [ebp+0x8]
10009fdf:	cmp    ecx,DWORD PTR [eax]
10009fe1:	je     0x1000a024
10009fe3:	mov    edx,DWORD PTR [ebp-0x10]
10009fe6:	mov    eax,DWORD PTR [edx]
10009fe8:	mov    DWORD PTR [ebp-0x8],eax
10009feb:	mov    ecx,DWORD PTR [ebp-0x8]
10009fee:	mov    DWORD PTR [ebp-0x4],ecx
10009ff1:	cmp    DWORD PTR [ebp-0x4],0x0
10009ff5:	je     0x1000a01d
10009ff7:	mov    eax,DWORD PTR [ebp-0x4]
10009ffa:	call   0x100078a0
10009fff:	mov    edx,0x1
1000a004:	and    edx,0x1
1000a007:	je     0x1000a015
1000a009:	mov    eax,DWORD PTR [ebp-0x4]
1000a00c:	push   eax
1000a00d:	call   0x10015ad6
1000a012:	add    esp,0x4
1000a015:	mov    ecx,DWORD PTR [ebp-0x4]
1000a018:	mov    DWORD PTR [ebp-0x14],ecx
1000a01b:	jmp    0x1000a024
1000a01d:	mov    DWORD PTR [ebp-0x14],0x0
1000a024:	mov    edx,DWORD PTR [ebp-0x10]
1000a027:	mov    eax,DWORD PTR [ebp+0x8]
1000a02a:	mov    DWORD PTR [edx],eax
1000a02c:	mov    esp,ebp
1000a02e:	pop    ebp
1000a02f:	ret    0x4
1000a032:	int3   
1000a033:	int3   
1000a034:	int3   
1000a035:	int3   
1000a036:	int3   
1000a037:	int3   
1000a038:	int3   
1000a039:	int3   
1000a03a:	int3   
1000a03b:	int3   
1000a03c:	int3   
1000a03d:	int3   
1000a03e:	int3   
1000a03f:	int3   
1000a040:	push   ebp
1000a041:	mov    ebp,esp
1000a043:	sub    esp,0x18
1000a046:	mov    DWORD PTR [ebp-0x18],ecx
1000a049:	lea    eax,[ebp-0x12]
1000a04c:	mov    DWORD PTR [ebp-0x8],eax
1000a04f:	lea    ecx,[ebp-0x11]
1000a052:	mov    DWORD PTR [ebp-0x10],ecx
1000a055:	mov    edx,DWORD PTR [ebp-0x18]
1000a058:	mov    DWORD PTR [edx+0x4],0x0
1000a05f:	mov    eax,DWORD PTR [ebp-0x18]
1000a062:	mov    DWORD PTR [eax+0x8],0x0
1000a069:	mov    ecx,DWORD PTR [ebp-0x18]
1000a06c:	mov    DWORD PTR [ecx+0xc],0x0
1000a073:	mov    edx,DWORD PTR [ebp-0x18]
1000a076:	mov    DWORD PTR [edx+0x10],0x0
1000a07d:	mov    eax,DWORD PTR [ebp-0x18]
1000a080:	mov    esp,ebp
1000a082:	pop    ebp
1000a083:	ret    
1000a084:	int3   
1000a085:	int3   
1000a086:	int3   
1000a087:	int3   
1000a088:	int3   
1000a089:	int3   
1000a08a:	int3   
1000a08b:	int3   
1000a08c:	int3   
1000a08d:	int3   
1000a08e:	int3   
1000a08f:	int3   
1000a090:	push   ebp
1000a091:	mov    ebp,esp
1000a093:	sub    esp,0x8
1000a096:	mov    DWORD PTR [ebp-0x8],ecx
1000a099:	mov    eax,DWORD PTR [ebp-0x8]
1000a09c:	mov    ecx,DWORD PTR [eax+0x10]
1000a09f:	mov    DWORD PTR [ebp-0x4],ecx
1000a0a2:	mov    eax,DWORD PTR [ebp-0x4]
1000a0a5:	mov    esp,ebp
1000a0a7:	pop    ebp
1000a0a8:	ret    
1000a0a9:	int3   
1000a0aa:	int3   
1000a0ab:	int3   
1000a0ac:	int3   
1000a0ad:	int3   
1000a0ae:	int3   
1000a0af:	int3   
1000a0b0:	push   ebp
1000a0b1:	mov    ebp,esp
1000a0b3:	sub    esp,0x20
1000a0b6:	mov    DWORD PTR [ebp-0x20],ecx
1000a0b9:	lea    eax,[ebp-0xc]
1000a0bc:	push   eax
1000a0bd:	mov    ecx,DWORD PTR [ebp-0x20]
1000a0c0:	call   0x1000a470
1000a0c5:	mov    DWORD PTR [ebp-0x1c],eax
1000a0c8:	mov    ecx,DWORD PTR [ebp-0x1c]
1000a0cb:	call   0x1000a9b0
1000a0d0:	mov    esp,ebp
1000a0d2:	pop    ebp
1000a0d3:	ret    
1000a0d4:	int3   
1000a0d5:	int3   
1000a0d6:	int3   
1000a0d7:	int3   
1000a0d8:	int3   
1000a0d9:	int3   
1000a0da:	int3   
1000a0db:	int3   
1000a0dc:	int3   
1000a0dd:	int3   
1000a0de:	int3   
1000a0df:	int3   
1000a0e0:	push   ebp
1000a0e1:	mov    ebp,esp
1000a0e3:	sub    esp,0xc8
1000a0e9:	mov    DWORD PTR [ebp-0xc8],ecx
1000a0ef:	mov    eax,DWORD PTR [ebp+0x8]
1000a0f2:	push   eax
1000a0f3:	mov    ecx,DWORD PTR [ebp-0xc8]
1000a0f9:	call   0x1000a260
1000a0fe:	mov    esp,ebp
1000a100:	pop    ebp
1000a101:	ret    0x4
1000a104:	int3   
1000a105:	int3   
1000a106:	int3   
1000a107:	int3   
1000a108:	int3   
1000a109:	int3   
1000a10a:	int3   
1000a10b:	int3   
1000a10c:	int3   
1000a10d:	int3   
1000a10e:	int3   
1000a10f:	int3   
1000a110:	push   ebp
1000a111:	mov    ebp,esp
1000a113:	sub    esp,0x8
1000a116:	mov    DWORD PTR [ebp-0x8],ecx
1000a119:	mov    ecx,DWORD PTR [ebp-0x8]
1000a11c:	call   0x1000a1e0
1000a121:	mov    esp,ebp
1000a123:	pop    ebp
1000a124:	ret    
1000a125:	int3   
1000a126:	int3   
1000a127:	int3   
1000a128:	int3   
1000a129:	int3   
1000a12a:	int3   
1000a12b:	int3   
1000a12c:	int3   
1000a12d:	int3   
1000a12e:	int3   
1000a12f:	int3   
1000a130:	push   ebp
1000a131:	mov    ebp,esp
1000a133:	sub    esp,0x1c
1000a136:	mov    DWORD PTR [ebp-0x1c],ecx
1000a139:	mov    ecx,DWORD PTR [ebp-0x1c]
1000a13c:	call   0x1000a3c0
1000a141:	mov    esp,ebp
1000a143:	pop    ebp
1000a144:	ret    
1000a145:	int3   
1000a146:	int3   
1000a147:	int3   
1000a148:	int3   
1000a149:	int3   
1000a14a:	int3   
1000a14b:	int3   
1000a14c:	int3   
1000a14d:	int3   
1000a14e:	int3   
1000a14f:	int3   
1000a150:	push   ebp
1000a151:	mov    ebp,esp
1000a153:	sub    esp,0x10
1000a156:	mov    DWORD PTR [ebp-0xc],ecx
1000a159:	mov    eax,DWORD PTR [ebp-0xc]
1000a15c:	mov    ecx,DWORD PTR [eax]
1000a15e:	mov    DWORD PTR [ebp-0x8],ecx
1000a161:	mov    edx,DWORD PTR [ebp-0x8]
1000a164:	mov    DWORD PTR [ebp-0x4],edx
1000a167:	cmp    DWORD PTR [ebp-0x4],0x0
1000a16b:	je     0x1000a181
1000a16d:	push   0x1
1000a16f:	mov    eax,DWORD PTR [ebp-0x4]
1000a172:	mov    edx,DWORD PTR [eax]
1000a174:	mov    ecx,DWORD PTR [ebp-0x4]
1000a177:	mov    eax,DWORD PTR [edx+0x4]
1000a17a:	call   eax
1000a17c:	mov    DWORD PTR [ebp-0x10],eax
1000a17f:	jmp    0x1000a188
1000a181:	mov    DWORD PTR [ebp-0x10],0x0
1000a188:	mov    esp,ebp
1000a18a:	pop    ebp
1000a18b:	ret    
1000a18c:	int3   
1000a18d:	int3   
1000a18e:	int3   
1000a18f:	int3   
1000a190:	push   ebp
1000a191:	mov    ebp,esp
1000a193:	sub    esp,0x10
1000a196:	mov    DWORD PTR [ebp-0xc],ecx
1000a199:	mov    eax,DWORD PTR [ebp-0xc]
1000a19c:	mov    ecx,DWORD PTR [ebp+0x8]
1000a19f:	cmp    ecx,DWORD PTR [eax]
1000a1a1:	je     0x1000a1d2
1000a1a3:	mov    edx,DWORD PTR [ebp-0xc]
1000a1a6:	mov    eax,DWORD PTR [edx]
1000a1a8:	mov    DWORD PTR [ebp-0x8],eax
1000a1ab:	mov    ecx,DWORD PTR [ebp-0x8]
1000a1ae:	mov    DWORD PTR [ebp-0x4],ecx
1000a1b1:	cmp    DWORD PTR [ebp-0x4],0x0
1000a1b5:	je     0x1000a1cb
1000a1b7:	push   0x1
1000a1b9:	mov    edx,DWORD PTR [ebp-0x4]
1000a1bc:	mov    eax,DWORD PTR [edx]
1000a1be:	mov    ecx,DWORD PTR [ebp-0x4]
1000a1c1:	mov    edx,DWORD PTR [eax+0x4]
1000a1c4:	call   edx
1000a1c6:	mov    DWORD PTR [ebp-0x10],eax
1000a1c9:	jmp    0x1000a1d2
1000a1cb:	mov    DWORD PTR [ebp-0x10],0x0
1000a1d2:	mov    eax,DWORD PTR [ebp-0xc]
1000a1d5:	mov    ecx,DWORD PTR [ebp+0x8]
1000a1d8:	mov    DWORD PTR [eax],ecx
1000a1da:	mov    esp,ebp
1000a1dc:	pop    ebp
1000a1dd:	ret    0x4
1000a1e0:	push   ebp
1000a1e1:	mov    ebp,esp
1000a1e3:	sub    esp,0x8
1000a1e6:	mov    DWORD PTR [ebp-0x8],ecx
1000a1e9:	mov    eax,DWORD PTR [ebp-0x8]
1000a1ec:	xor    ecx,ecx
1000a1ee:	cmp    DWORD PTR [eax+0x10],0x0
1000a1f2:	sete   cl
1000a1f5:	movzx  edx,cl
1000a1f8:	test   edx,edx
1000a1fa:	jne    0x1000a254
1000a1fc:	mov    eax,DWORD PTR [ebp-0x8]
1000a1ff:	mov    ecx,DWORD PTR [eax+0xc]
1000a202:	shr    ecx,0x2
1000a205:	mov    DWORD PTR [ebp-0x4],ecx
1000a208:	mov    edx,DWORD PTR [ebp-0x8]
1000a20b:	mov    eax,DWORD PTR [edx+0xc]
1000a20e:	add    eax,0x1
1000a211:	mov    ecx,DWORD PTR [ebp-0x8]
1000a214:	mov    DWORD PTR [ecx+0xc],eax
1000a217:	mov    edx,DWORD PTR [ebp-0x8]
1000a21a:	mov    eax,DWORD PTR [edx+0x8]
1000a21d:	shl    eax,0x2
1000a220:	mov    ecx,DWORD PTR [ebp-0x8]
1000a223:	cmp    eax,DWORD PTR [ecx+0xc]
1000a226:	ja     0x1000a232
1000a228:	mov    edx,DWORD PTR [ebp-0x8]
1000a22b:	mov    DWORD PTR [edx+0xc],0x0
1000a232:	mov    eax,DWORD PTR [ebp-0x8]
1000a235:	mov    ecx,DWORD PTR [eax+0x10]
1000a238:	sub    ecx,0x1
1000a23b:	mov    edx,DWORD PTR [ebp-0x8]
1000a23e:	mov    DWORD PTR [edx+0x10],ecx
1000a241:	mov    eax,DWORD PTR [ebp-0x8]
1000a244:	cmp    DWORD PTR [eax+0x10],0x0
1000a248:	jne    0x1000a254
1000a24a:	mov    ecx,DWORD PTR [ebp-0x8]
1000a24d:	mov    DWORD PTR [ecx+0xc],0x0
1000a254:	mov    esp,ebp
1000a256:	pop    ebp
1000a257:	ret    
1000a258:	int3   
1000a259:	int3   
1000a25a:	int3   
1000a25b:	int3   
1000a25c:	int3   
1000a25d:	int3   
1000a25e:	int3   
1000a25f:	int3   
1000a260:	push   ebp
1000a261:	mov    ebp,esp
1000a263:	sub    esp,0xe8
1000a269:	push   esi
1000a26a:	mov    DWORD PTR [ebp-0xe4],ecx
1000a270:	mov    eax,DWORD PTR [ebp-0xe4]
1000a276:	mov    eax,DWORD PTR [eax+0xc]
1000a279:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a27f:	add    eax,DWORD PTR [ecx+0x10]
1000a282:	xor    edx,edx
1000a284:	mov    ecx,0x4
1000a289:	div    ecx
1000a28b:	test   edx,edx
1000a28d:	jne    0x1000a2b6
1000a28f:	mov    edx,DWORD PTR [ebp-0xe4]
1000a295:	mov    eax,DWORD PTR [edx+0x10]
1000a298:	add    eax,0x4
1000a29b:	shr    eax,0x2
1000a29e:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a2a4:	cmp    DWORD PTR [ecx+0x8],eax
1000a2a7:	ja     0x1000a2b6
1000a2a9:	push   0x1
1000a2ab:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a2b1:	call   0x1000a560
1000a2b6:	mov    edx,DWORD PTR [ebp-0xe4]
1000a2bc:	mov    eax,DWORD PTR [edx+0xc]
1000a2bf:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a2c5:	add    eax,DWORD PTR [ecx+0x10]
1000a2c8:	mov    DWORD PTR [ebp-0x4],eax
1000a2cb:	mov    edx,DWORD PTR [ebp-0x4]
1000a2ce:	shr    edx,0x2
1000a2d1:	mov    DWORD PTR [ebp-0x8],edx
1000a2d4:	mov    eax,DWORD PTR [ebp-0xe4]
1000a2da:	mov    ecx,DWORD PTR [eax+0x8]
1000a2dd:	cmp    ecx,DWORD PTR [ebp-0x8]
1000a2e0:	ja     0x1000a2f1
1000a2e2:	mov    edx,DWORD PTR [ebp-0xe4]
1000a2e8:	mov    eax,DWORD PTR [ebp-0x8]
1000a2eb:	sub    eax,DWORD PTR [edx+0x8]
1000a2ee:	mov    DWORD PTR [ebp-0x8],eax
1000a2f1:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a2f7:	mov    edx,DWORD PTR [ecx+0x4]
1000a2fa:	mov    eax,DWORD PTR [ebp-0x8]
1000a2fd:	cmp    DWORD PTR [edx+eax*4],0x0
1000a301:	jne    0x1000a322
1000a303:	push   0x4
1000a305:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a30b:	add    ecx,0x1
1000a30e:	call   0x1000a910
1000a313:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a319:	mov    edx,DWORD PTR [ecx+0x4]
1000a31c:	mov    ecx,DWORD PTR [ebp-0x8]
1000a31f:	mov    DWORD PTR [edx+ecx*4],eax
1000a322:	mov    edx,DWORD PTR [ebp-0xe4]
1000a328:	mov    ecx,DWORD PTR [edx+0x4]
1000a32b:	mov    eax,DWORD PTR [ebp-0x4]
1000a32e:	xor    edx,edx
1000a330:	mov    esi,0x4
1000a335:	div    esi
1000a337:	mov    eax,DWORD PTR [ebp-0x8]
1000a33a:	mov    ecx,DWORD PTR [ecx+eax*4]
1000a33d:	lea    edx,[ecx+edx*4]
1000a340:	mov    DWORD PTR [ebp-0xe0],edx
1000a346:	mov    eax,DWORD PTR [ebp-0xe0]
1000a34c:	mov    DWORD PTR [ebp-0xd8],eax
1000a352:	mov    ecx,DWORD PTR [ebp-0xd8]
1000a358:	push   ecx
1000a359:	push   0x4
1000a35b:	call   0x10001230
1000a360:	add    esp,0x8
1000a363:	mov    DWORD PTR [ebp-0xdc],eax
1000a369:	cmp    DWORD PTR [ebp-0xdc],0x0
1000a370:	je     0x1000a38d
1000a372:	mov    edx,DWORD PTR [ebp-0xdc]
1000a378:	mov    eax,DWORD PTR [ebp+0x8]
1000a37b:	mov    ecx,DWORD PTR [eax]
1000a37d:	mov    DWORD PTR [edx],ecx
1000a37f:	mov    edx,DWORD PTR [ebp-0xdc]
1000a385:	mov    DWORD PTR [ebp-0xe8],edx
1000a38b:	jmp    0x1000a397
1000a38d:	mov    DWORD PTR [ebp-0xe8],0x0
1000a397:	mov    eax,DWORD PTR [ebp-0xe4]
1000a39d:	mov    ecx,DWORD PTR [eax+0x10]
1000a3a0:	add    ecx,0x1
1000a3a3:	mov    edx,DWORD PTR [ebp-0xe4]
1000a3a9:	mov    DWORD PTR [edx+0x10],ecx
1000a3ac:	pop    esi
1000a3ad:	mov    esp,ebp
1000a3af:	pop    ebp
1000a3b0:	ret    0x4
1000a3b3:	int3   
1000a3b4:	int3   
1000a3b5:	int3   
1000a3b6:	int3   
1000a3b7:	int3   
1000a3b8:	int3   
1000a3b9:	int3   
1000a3ba:	int3   
1000a3bb:	int3   
1000a3bc:	int3   
1000a3bd:	int3   
1000a3be:	int3   
1000a3bf:	int3   
1000a3c0:	push   ebp
1000a3c1:	mov    ebp,esp
1000a3c3:	sub    esp,0x1c
1000a3c6:	mov    DWORD PTR [ebp-0x1c],ecx
1000a3c9:	mov    eax,DWORD PTR [ebp-0x1c]
1000a3cc:	xor    ecx,ecx
1000a3ce:	cmp    DWORD PTR [eax+0x10],0x0
1000a3d2:	sete   cl
1000a3d5:	movzx  edx,cl
1000a3d8:	test   edx,edx
1000a3da:	jne    0x1000a3e6
1000a3dc:	mov    ecx,DWORD PTR [ebp-0x1c]
1000a3df:	call   0x1000a4e0
1000a3e4:	jmp    0x1000a3c9
1000a3e6:	mov    eax,DWORD PTR [ebp-0x1c]
1000a3e9:	mov    ecx,DWORD PTR [eax+0x8]
1000a3ec:	mov    DWORD PTR [ebp-0x4],ecx
1000a3ef:	cmp    DWORD PTR [ebp-0x4],0x0
1000a3f3:	jbe    0x1000a42a
1000a3f5:	mov    edx,DWORD PTR [ebp-0x4]
1000a3f8:	sub    edx,0x1
1000a3fb:	mov    DWORD PTR [ebp-0x4],edx
1000a3fe:	mov    eax,DWORD PTR [ebp-0x1c]
1000a401:	mov    ecx,DWORD PTR [eax+0x4]
1000a404:	mov    edx,DWORD PTR [ebp-0x4]
1000a407:	cmp    DWORD PTR [ecx+edx*4],0x0
1000a40b:	je     0x1000a428
1000a40d:	mov    eax,DWORD PTR [ebp-0x1c]
1000a410:	mov    ecx,DWORD PTR [eax+0x4]
1000a413:	mov    edx,DWORD PTR [ebp-0x4]
1000a416:	mov    eax,DWORD PTR [ecx+edx*4]
1000a419:	mov    DWORD PTR [ebp-0x10],eax
1000a41c:	mov    ecx,DWORD PTR [ebp-0x10]
1000a41f:	push   ecx
1000a420:	call   0x10015ad6
1000a425:	add    esp,0x4
1000a428:	jmp    0x1000a3ef
1000a42a:	mov    edx,DWORD PTR [ebp-0x1c]
1000a42d:	cmp    DWORD PTR [edx+0x4],0x0
1000a431:	je     0x1000a451
1000a433:	mov    eax,DWORD PTR [ebp-0x1c]
1000a436:	mov    ecx,DWORD PTR [eax+0x8]
1000a439:	mov    DWORD PTR [ebp-0x18],ecx
1000a43c:	mov    edx,DWORD PTR [ebp-0x1c]
1000a43f:	mov    eax,DWORD PTR [edx+0x4]
1000a442:	mov    DWORD PTR [ebp-0x14],eax
1000a445:	mov    ecx,DWORD PTR [ebp-0x14]
1000a448:	push   ecx
1000a449:	call   0x10015ad6
1000a44e:	add    esp,0x4
1000a451:	mov    edx,DWORD PTR [ebp-0x1c]
1000a454:	mov    DWORD PTR [edx+0x8],0x0
1000a45b:	mov    eax,DWORD PTR [ebp-0x1c]
1000a45e:	mov    DWORD PTR [eax+0x4],0x0
1000a465:	mov    esp,ebp
1000a467:	pop    ebp
1000a468:	ret    
1000a469:	int3   
1000a46a:	int3   
1000a46b:	int3   
1000a46c:	int3   
1000a46d:	int3   
1000a46e:	int3   
1000a46f:	int3   
1000a470:	push   ebp
1000a471:	mov    ebp,esp
1000a473:	sub    esp,0x8
1000a476:	mov    DWORD PTR [ebp-0x8],ecx
1000a479:	mov    eax,DWORD PTR [ebp-0x8]
1000a47c:	mov    ecx,DWORD PTR [eax+0xc]
1000a47f:	mov    DWORD PTR [ebp-0x4],ecx
1000a482:	mov    ecx,DWORD PTR [ebp+0x8]
1000a485:	call   0x10001340
1000a48a:	mov    edx,0x1
1000a48f:	test   edx,edx
1000a491:	je     0x1000a4ba
1000a493:	cmp    DWORD PTR [ebp-0x8],0x0
1000a497:	je     0x1000a4b5
1000a499:	mov    eax,DWORD PTR [ebp-0x8]
1000a49c:	mov    ecx,DWORD PTR [eax+0xc]
1000a49f:	cmp    ecx,DWORD PTR [ebp-0x4]
1000a4a2:	ja     0x1000a4b5
1000a4a4:	mov    edx,DWORD PTR [ebp-0x8]
1000a4a7:	mov    eax,DWORD PTR [edx+0xc]
1000a4aa:	mov    ecx,DWORD PTR [ebp-0x8]
1000a4ad:	add    eax,DWORD PTR [ecx+0x10]
1000a4b0:	cmp    DWORD PTR [ebp-0x4],eax
1000a4b3:	jbe    0x1000a4ba
1000a4b5:	call   0x10016143
1000a4ba:	mov    edx,DWORD PTR [ebp+0x8]
1000a4bd:	mov    eax,DWORD PTR [ebp-0x8]
1000a4c0:	mov    DWORD PTR [edx+0x4],eax
1000a4c3:	mov    ecx,DWORD PTR [ebp+0x8]
1000a4c6:	mov    edx,DWORD PTR [ebp-0x4]
1000a4c9:	mov    DWORD PTR [ecx+0x8],edx
1000a4cc:	mov    eax,DWORD PTR [ebp+0x8]
1000a4cf:	mov    esp,ebp
1000a4d1:	pop    ebp
1000a4d2:	ret    0x4
1000a4d5:	int3   
1000a4d6:	int3   
1000a4d7:	int3   
1000a4d8:	int3   
1000a4d9:	int3   
1000a4da:	int3   
1000a4db:	int3   
1000a4dc:	int3   
1000a4dd:	int3   
1000a4de:	int3   
1000a4df:	int3   
1000a4e0:	push   ebp
1000a4e1:	mov    ebp,esp
1000a4e3:	sub    esp,0xc
1000a4e6:	mov    DWORD PTR [ebp-0xc],ecx
1000a4e9:	mov    eax,DWORD PTR [ebp-0xc]
1000a4ec:	xor    ecx,ecx
1000a4ee:	cmp    DWORD PTR [eax+0x10],0x0
1000a4f2:	sete   cl
1000a4f5:	movzx  edx,cl
1000a4f8:	test   edx,edx
1000a4fa:	jne    0x1000a551
1000a4fc:	mov    eax,DWORD PTR [ebp-0xc]
1000a4ff:	mov    ecx,DWORD PTR [eax+0x10]
1000a502:	mov    edx,DWORD PTR [ebp-0xc]
1000a505:	mov    eax,DWORD PTR [edx+0xc]
1000a508:	lea    ecx,[ecx+eax*1-0x1]
1000a50c:	mov    DWORD PTR [ebp-0x4],ecx
1000a50f:	mov    edx,DWORD PTR [ebp-0x4]
1000a512:	shr    edx,0x2
1000a515:	mov    DWORD PTR [ebp-0x8],edx
1000a518:	mov    eax,DWORD PTR [ebp-0xc]
1000a51b:	mov    ecx,DWORD PTR [eax+0x8]
1000a51e:	cmp    ecx,DWORD PTR [ebp-0x8]
1000a521:	ja     0x1000a52f
1000a523:	mov    edx,DWORD PTR [ebp-0xc]
1000a526:	mov    eax,DWORD PTR [ebp-0x8]
1000a529:	sub    eax,DWORD PTR [edx+0x8]
1000a52c:	mov    DWORD PTR [ebp-0x8],eax
1000a52f:	mov    ecx,DWORD PTR [ebp-0xc]
1000a532:	mov    edx,DWORD PTR [ecx+0x10]
1000a535:	sub    edx,0x1
1000a538:	mov    eax,DWORD PTR [ebp-0xc]
1000a53b:	mov    DWORD PTR [eax+0x10],edx
1000a53e:	mov    ecx,DWORD PTR [ebp-0xc]
1000a541:	cmp    DWORD PTR [ecx+0x10],0x0
1000a545:	jne    0x1000a551
1000a547:	mov    edx,DWORD PTR [ebp-0xc]
1000a54a:	mov    DWORD PTR [edx+0xc],0x0
1000a551:	mov    esp,ebp
1000a553:	pop    ebp
1000a554:	ret    
1000a555:	int3   
1000a556:	int3   
1000a557:	int3   
1000a558:	int3   
1000a559:	int3   
1000a55a:	int3   
1000a55b:	int3   
1000a55c:	int3   
1000a55d:	int3   
1000a55e:	int3   
1000a55f:	int3   
1000a560:	push   ebp
1000a561:	mov    ebp,esp
1000a563:	sub    esp,0x168
1000a569:	mov    DWORD PTR [ebp-0x160],ecx
1000a56f:	mov    DWORD PTR [ebp-0x20],0x3fffffff
1000a576:	cmp    DWORD PTR [ebp-0x20],0x0
1000a57a:	jbe    0x1000a587
1000a57c:	mov    eax,DWORD PTR [ebp-0x20]
1000a57f:	mov    DWORD PTR [ebp-0x164],eax
1000a585:	jmp    0x1000a591
1000a587:	mov    DWORD PTR [ebp-0x164],0x1
1000a591:	mov    ecx,DWORD PTR [ebp-0x164]
1000a597:	shr    ecx,0x2
1000a59a:	mov    edx,DWORD PTR [ebp-0x160]
1000a5a0:	sub    ecx,DWORD PTR [edx+0x8]
1000a5a3:	cmp    ecx,DWORD PTR [ebp+0x8]
1000a5a6:	jae    0x1000a5ad
1000a5a8:	call   0x1000a930
1000a5ad:	mov    eax,DWORD PTR [ebp-0x160]
1000a5b3:	mov    ecx,DWORD PTR [eax+0x8]
1000a5b6:	shr    ecx,1
1000a5b8:	mov    DWORD PTR [ebp-0x8],ecx
1000a5bb:	cmp    DWORD PTR [ebp-0x8],0x8
1000a5bf:	jae    0x1000a5c8
1000a5c1:	mov    DWORD PTR [ebp-0x8],0x8
1000a5c8:	mov    edx,DWORD PTR [ebp+0x8]
1000a5cb:	cmp    edx,DWORD PTR [ebp-0x8]
1000a5ce:	jae    0x1000a60f
1000a5d0:	mov    DWORD PTR [ebp-0x6c],0x3fffffff
1000a5d7:	cmp    DWORD PTR [ebp-0x6c],0x0
1000a5db:	jbe    0x1000a5e8
1000a5dd:	mov    eax,DWORD PTR [ebp-0x6c]
1000a5e0:	mov    DWORD PTR [ebp-0x168],eax
1000a5e6:	jmp    0x1000a5f2
1000a5e8:	mov    DWORD PTR [ebp-0x168],0x1
1000a5f2:	mov    ecx,DWORD PTR [ebp-0x168]
1000a5f8:	shr    ecx,0x2
1000a5fb:	sub    ecx,DWORD PTR [ebp-0x8]
1000a5fe:	mov    edx,DWORD PTR [ebp-0x160]
1000a604:	cmp    DWORD PTR [edx+0x8],ecx
1000a607:	ja     0x1000a60f
1000a609:	mov    eax,DWORD PTR [ebp-0x8]
1000a60c:	mov    DWORD PTR [ebp+0x8],eax
1000a60f:	mov    ecx,DWORD PTR [ebp-0x160]
1000a615:	mov    edx,DWORD PTR [ecx+0xc]
1000a618:	shr    edx,0x2
1000a61b:	mov    DWORD PTR [ebp-0x4],edx
1000a61e:	mov    eax,DWORD PTR [ebp-0x160]
1000a624:	mov    ecx,DWORD PTR [eax+0x8]
1000a627:	add    ecx,DWORD PTR [ebp+0x8]
1000a62a:	mov    DWORD PTR [ebp-0x7c],ecx
1000a62d:	push   0x0
1000a62f:	mov    edx,DWORD PTR [ebp-0x7c]
1000a632:	push   edx
1000a633:	call   0x1000aae0
1000a638:	add    esp,0x8
1000a63b:	mov    DWORD PTR [ebp-0x10],eax
1000a63e:	mov    eax,DWORD PTR [ebp-0x4]
1000a641:	mov    ecx,DWORD PTR [ebp-0x10]
1000a644:	lea    edx,[ecx+eax*4]
1000a647:	mov    DWORD PTR [ebp-0xc],edx
1000a64a:	mov    eax,DWORD PTR [ebp-0x160]
1000a650:	push   eax
1000a651:	mov    ecx,DWORD PTR [ebp-0xc]
1000a654:	push   ecx
1000a655:	mov    edx,DWORD PTR [ebp-0x160]
1000a65b:	mov    eax,DWORD PTR [edx+0x8]
1000a65e:	mov    ecx,DWORD PTR [ebp-0x160]
1000a664:	mov    edx,DWORD PTR [ecx+0x4]
1000a667:	lea    eax,[edx+eax*4]
1000a66a:	push   eax
1000a66b:	mov    ecx,DWORD PTR [ebp-0x160]
1000a671:	mov    edx,DWORD PTR [ecx+0x4]
1000a674:	mov    eax,DWORD PTR [ebp-0x4]
1000a677:	lea    ecx,[edx+eax*4]
1000a67a:	push   ecx
1000a67b:	call   0x1000aa70
1000a680:	add    esp,0x10
1000a683:	mov    DWORD PTR [ebp-0xc],eax
1000a686:	mov    edx,DWORD PTR [ebp-0x4]
1000a689:	cmp    edx,DWORD PTR [ebp+0x8]
1000a68c:	ja     0x1000a7b4
1000a692:	mov    eax,DWORD PTR [ebp-0x160]
1000a698:	push   eax
1000a699:	mov    ecx,DWORD PTR [ebp-0xc]
1000a69c:	push   ecx
1000a69d:	mov    edx,DWORD PTR [ebp-0x160]
1000a6a3:	mov    eax,DWORD PTR [edx+0x4]
1000a6a6:	mov    ecx,DWORD PTR [ebp-0x4]
1000a6a9:	lea    edx,[eax+ecx*4]
1000a6ac:	push   edx
1000a6ad:	mov    eax,DWORD PTR [ebp-0x160]
1000a6b3:	mov    ecx,DWORD PTR [eax+0x4]
1000a6b6:	push   ecx
1000a6b7:	call   0x1000aa70
1000a6bc:	add    esp,0x10
1000a6bf:	mov    DWORD PTR [ebp-0xc],eax
1000a6c2:	mov    DWORD PTR [ebp-0x14],0x0
1000a6c9:	mov    edx,DWORD PTR [ebp-0xc]
1000a6cc:	mov    DWORD PTR [ebp-0xd0],edx
1000a6d2:	xor    eax,eax
1000a6d4:	mov    BYTE PTR [ebp-0xba],al
1000a6da:	mov    cl,BYTE PTR [ebp-0xbc]
1000a6e0:	mov    BYTE PTR [ebp-0xbb],cl
1000a6e6:	mov    dl,BYTE PTR [ebp-0xba]
1000a6ec:	mov    BYTE PTR [ebp-0xc9],dl
1000a6f2:	mov    eax,DWORD PTR [ebp-0xd0]
1000a6f8:	mov    DWORD PTR [ebp-0xc8],eax
1000a6fe:	mov    ecx,DWORD PTR [ebp-0xc8]
1000a704:	mov    DWORD PTR [ebp-0xc4],ecx
1000a70a:	xor    edx,edx
1000a70c:	mov    BYTE PTR [ebp-0xbd],dl
1000a712:	mov    al,BYTE PTR [ebp-0xbd]
1000a718:	push   eax
1000a719:	mov    cl,BYTE PTR [ebp-0xbe]
1000a71f:	push   ecx
1000a720:	lea    edx,[ebp-0x14]
1000a723:	push   edx
1000a724:	mov    eax,DWORD PTR [ebp+0x8]
1000a727:	sub    eax,DWORD PTR [ebp-0x4]
1000a72a:	push   eax
1000a72b:	mov    ecx,DWORD PTR [ebp-0xc4]
1000a731:	push   ecx
1000a732:	call   0x1000ac10
1000a737:	add    esp,0x14
1000a73a:	mov    DWORD PTR [ebp-0x18],0x0
1000a741:	mov    edx,DWORD PTR [ebp-0x10]
1000a744:	mov    DWORD PTR [ebp-0xe8],edx
1000a74a:	xor    eax,eax
1000a74c:	mov    BYTE PTR [ebp-0xd1],al
1000a752:	mov    cl,BYTE PTR [ebp-0xd3]
1000a758:	mov    BYTE PTR [ebp-0xd2],cl
1000a75e:	mov    dl,BYTE PTR [ebp-0xd1]
1000a764:	mov    BYTE PTR [ebp-0xe1],dl
1000a76a:	mov    eax,DWORD PTR [ebp-0xe8]
1000a770:	mov    DWORD PTR [ebp-0xe0],eax
1000a776:	mov    ecx,DWORD PTR [ebp-0xe0]
1000a77c:	mov    DWORD PTR [ebp-0xdc],ecx
1000a782:	xor    edx,edx
1000a784:	mov    BYTE PTR [ebp-0xd4],dl
1000a78a:	mov    al,BYTE PTR [ebp-0xd4]
1000a790:	push   eax
1000a791:	mov    cl,BYTE PTR [ebp-0xd5]
1000a797:	push   ecx
1000a798:	lea    edx,[ebp-0x18]
1000a79b:	push   edx
1000a79c:	mov    eax,DWORD PTR [ebp-0x4]
1000a79f:	push   eax
1000a7a0:	mov    ecx,DWORD PTR [ebp-0xdc]
1000a7a6:	push   ecx
1000a7a7:	call   0x1000ac10
1000a7ac:	add    esp,0x14
1000a7af:	jmp    0x1000a86a
1000a7b4:	mov    edx,DWORD PTR [ebp-0x160]
1000a7ba:	push   edx
1000a7bb:	mov    eax,DWORD PTR [ebp-0xc]
1000a7be:	push   eax
1000a7bf:	mov    ecx,DWORD PTR [ebp-0x160]
1000a7c5:	mov    edx,DWORD PTR [ecx+0x4]
1000a7c8:	mov    eax,DWORD PTR [ebp+0x8]
1000a7cb:	lea    ecx,[edx+eax*4]
1000a7ce:	push   ecx
1000a7cf:	mov    edx,DWORD PTR [ebp-0x160]
1000a7d5:	mov    eax,DWORD PTR [edx+0x4]
1000a7d8:	push   eax
1000a7d9:	call   0x1000aa70
1000a7de:	add    esp,0x10
1000a7e1:	mov    ecx,DWORD PTR [ebp-0x160]
1000a7e7:	push   ecx
1000a7e8:	mov    edx,DWORD PTR [ebp-0x10]
1000a7eb:	push   edx
1000a7ec:	mov    eax,DWORD PTR [ebp-0x160]
1000a7f2:	mov    ecx,DWORD PTR [eax+0x4]
1000a7f5:	mov    edx,DWORD PTR [ebp-0x4]
1000a7f8:	lea    eax,[ecx+edx*4]
1000a7fb:	push   eax
1000a7fc:	mov    ecx,DWORD PTR [ebp-0x160]
1000a802:	mov    edx,DWORD PTR [ecx+0x4]
1000a805:	mov    eax,DWORD PTR [ebp+0x8]
1000a808:	lea    ecx,[edx+eax*4]
1000a80b:	push   ecx
1000a80c:	call   0x1000aa70
1000a811:	add    esp,0x10
1000a814:	mov    DWORD PTR [ebp-0xc],eax
1000a817:	mov    DWORD PTR [ebp-0x1c],0x0
1000a81e:	mov    edx,DWORD PTR [ebp-0xc]
1000a821:	mov    DWORD PTR [ebp-0x148],edx
1000a827:	xor    eax,eax
1000a829:	mov    BYTE PTR [ebp-0x126],al
1000a82f:	mov    cl,BYTE PTR [ebp-0x128]
1000a835:	mov    BYTE PTR [ebp-0x127],cl
1000a83b:	mov    dl,BYTE PTR [ebp-0x126]
1000a841:	mov    BYTE PTR [ebp-0x141],dl
1000a847:	mov    eax,DWORD PTR [ebp-0x148]
1000a84d:	mov    DWORD PTR [ebp-0x140],eax
1000a853:	lea    ecx,[ebp-0x1c]
1000a856:	push   ecx
1000a857:	mov    edx,DWORD PTR [ebp+0x8]
1000a85a:	push   edx
1000a85b:	mov    eax,DWORD PTR [ebp-0x140]
1000a861:	push   eax
1000a862:	call   0x1000aba0
1000a867:	add    esp,0xc
1000a86a:	mov    ecx,DWORD PTR [ebp-0x160]
1000a870:	mov    edx,DWORD PTR [ecx+0x8]
1000a873:	mov    eax,DWORD PTR [ebp-0x160]
1000a879:	mov    ecx,DWORD PTR [eax+0x4]
1000a87c:	lea    edx,[ecx+edx*4]
1000a87f:	mov    DWORD PTR [ebp-0x154],edx
1000a885:	mov    eax,DWORD PTR [ebp-0x160]
1000a88b:	mov    ecx,DWORD PTR [eax+0x4]
1000a88e:	mov    edx,DWORD PTR [ebp-0x4]
1000a891:	lea    eax,[ecx+edx*4]
1000a894:	mov    DWORD PTR [ebp-0x150],eax
1000a89a:	mov    cl,BYTE PTR [ebp-0x14a]
1000a8a0:	mov    BYTE PTR [ebp-0x149],cl
1000a8a6:	mov    edx,DWORD PTR [ebp-0x160]
1000a8ac:	cmp    DWORD PTR [edx+0x4],0x0
1000a8b0:	je     0x1000a8df
1000a8b2:	mov    eax,DWORD PTR [ebp-0x160]
1000a8b8:	mov    ecx,DWORD PTR [eax+0x8]
1000a8bb:	mov    DWORD PTR [ebp-0x15c],ecx
1000a8c1:	mov    edx,DWORD PTR [ebp-0x160]
1000a8c7:	mov    eax,DWORD PTR [edx+0x4]
1000a8ca:	mov    DWORD PTR [ebp-0x158],eax
1000a8d0:	mov    ecx,DWORD PTR [ebp-0x158]
1000a8d6:	push   ecx
1000a8d7:	call   0x10015ad6
1000a8dc:	add    esp,0x4
1000a8df:	mov    edx,DWORD PTR [ebp-0x160]
1000a8e5:	mov    eax,DWORD PTR [ebp-0x10]
1000a8e8:	mov    DWORD PTR [edx+0x4],eax
1000a8eb:	mov    ecx,DWORD PTR [ebp-0x160]
1000a8f1:	mov    edx,DWORD PTR [ecx+0x8]
1000a8f4:	add    edx,DWORD PTR [ebp+0x8]
1000a8f7:	mov    eax,DWORD PTR [ebp-0x160]
1000a8fd:	mov    DWORD PTR [eax+0x8],edx
1000a900:	mov    esp,ebp
1000a902:	pop    ebp
1000a903:	ret    0x4
1000a906:	int3   
1000a907:	int3   
1000a908:	int3   
1000a909:	int3   
1000a90a:	int3   
1000a90b:	int3   
1000a90c:	int3   
1000a90d:	int3   
1000a90e:	int3   
1000a90f:	int3   
1000a910:	push   ebp
1000a911:	mov    ebp,esp
1000a913:	sub    esp,0x10
1000a916:	mov    DWORD PTR [ebp-0x10],ecx
1000a919:	push   0x0
1000a91b:	mov    eax,DWORD PTR [ebp+0x8]
1000a91e:	push   eax
1000a91f:	call   0x1000aae0
1000a924:	add    esp,0x8
1000a927:	mov    esp,ebp
1000a929:	pop    ebp
1000a92a:	ret    0x4
1000a92d:	int3   
1000a92e:	int3   
1000a92f:	int3   
1000a930:	push   ebp
1000a931:	mov    ebp,esp
1000a933:	push   0xffffffff
1000a935:	push   0x1002ac48
1000a93a:	mov    eax,fs:0x0
1000a940:	push   eax
1000a941:	sub    esp,0x6c
1000a944:	mov    eax,ds:0x10064694
1000a949:	xor    eax,ebp
1000a94b:	push   eax
1000a94c:	lea    eax,[ebp-0xc]
1000a94f:	mov    fs:0x0,eax
1000a955:	push   0x10057078
1000a95a:	lea    ecx,[ebp-0x50]
1000a95d:	call   0x10002b40
1000a962:	mov    DWORD PTR [ebp-0x4],0x0
1000a969:	lea    eax,[ebp-0x50]
1000a96c:	push   eax
1000a96d:	lea    ecx,[ebp-0x34]
1000a970:	call   0x100013c0
1000a975:	push   0x10058b0c
1000a97a:	lea    ecx,[ebp-0x34]
1000a97d:	push   ecx
1000a97e:	call   0x100161ce
1000a983:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000a98a:	lea    ecx,[ebp-0x50]
1000a98d:	call   0x10002b80
1000a992:	mov    ecx,DWORD PTR [ebp-0xc]
1000a995:	mov    DWORD PTR fs:0x0,ecx
1000a99c:	pop    ecx
1000a99d:	mov    esp,ebp
1000a99f:	pop    ebp
1000a9a0:	ret    
1000a9a1:	int3   
1000a9a2:	int3   
1000a9a3:	int3   
1000a9a4:	int3   
1000a9a5:	int3   
1000a9a6:	int3   
1000a9a7:	int3   
1000a9a8:	int3   
1000a9a9:	int3   
1000a9aa:	int3   
1000a9ab:	int3   
1000a9ac:	int3   
1000a9ad:	int3   
1000a9ae:	int3   
1000a9af:	int3   
1000a9b0:	push   ebp
1000a9b1:	mov    ebp,esp
1000a9b3:	sub    esp,0xc
1000a9b6:	mov    DWORD PTR [ebp-0xc],ecx
1000a9b9:	mov    eax,DWORD PTR [ebp-0xc]
1000a9bc:	mov    ecx,DWORD PTR [eax+0x8]
1000a9bf:	shr    ecx,0x2
1000a9c2:	mov    DWORD PTR [ebp-0x4],ecx
1000a9c5:	mov    edx,DWORD PTR [ebp-0xc]
1000a9c8:	mov    eax,DWORD PTR [edx+0x8]
1000a9cb:	and    eax,0x3
1000a9ce:	mov    DWORD PTR [ebp-0x8],eax
1000a9d1:	mov    ecx,DWORD PTR [ebp-0xc]
1000a9d4:	cmp    DWORD PTR [ecx+0x4],0x0
1000a9d8:	jne    0x1000a9df
1000a9da:	call   0x10016143
1000a9df:	mov    edx,DWORD PTR [ebp-0xc]
1000a9e2:	mov    eax,DWORD PTR [edx+0x4]
1000a9e5:	mov    ecx,DWORD PTR [ebp-0xc]
1000a9e8:	mov    edx,DWORD PTR [ecx+0x4]
1000a9eb:	mov    eax,DWORD PTR [eax+0xc]
1000a9ee:	add    eax,DWORD PTR [edx+0x10]
1000a9f1:	mov    ecx,DWORD PTR [ebp-0xc]
1000a9f4:	cmp    DWORD PTR [ecx+0x8],eax
1000a9f7:	jb     0x1000a9fe
1000a9f9:	call   0x10016143
1000a9fe:	mov    edx,DWORD PTR [ebp-0xc]
1000aa01:	mov    eax,DWORD PTR [edx+0x4]
1000aa04:	mov    ecx,DWORD PTR [eax+0x8]
1000aa07:	cmp    ecx,DWORD PTR [ebp-0x4]
1000aa0a:	ja     0x1000aa1b
1000aa0c:	mov    edx,DWORD PTR [ebp-0xc]
1000aa0f:	mov    eax,DWORD PTR [edx+0x4]
1000aa12:	mov    ecx,DWORD PTR [ebp-0x4]
1000aa15:	sub    ecx,DWORD PTR [eax+0x8]
1000aa18:	mov    DWORD PTR [ebp-0x4],ecx
1000aa1b:	mov    edx,DWORD PTR [ebp-0xc]
1000aa1e:	mov    eax,DWORD PTR [edx+0x4]
1000aa21:	mov    ecx,DWORD PTR [eax+0x4]
1000aa24:	mov    edx,DWORD PTR [ebp-0x4]
1000aa27:	mov    eax,DWORD PTR [ecx+edx*4]
1000aa2a:	mov    ecx,DWORD PTR [ebp-0x8]
1000aa2d:	lea    eax,[eax+ecx*4]
1000aa30:	mov    esp,ebp
1000aa32:	pop    ebp
1000aa33:	ret    
1000aa34:	int3   
1000aa35:	int3   
1000aa36:	int3   
1000aa37:	int3   
1000aa38:	int3   
1000aa39:	int3   
1000aa3a:	int3   
1000aa3b:	int3   
1000aa3c:	int3   
1000aa3d:	int3   
1000aa3e:	int3   
1000aa3f:	int3   
1000aa40:	push   ebp
1000aa41:	mov    ebp,esp
1000aa43:	sub    esp,0x18
1000aa46:	lea    eax,[ebp+0x10]
1000aa49:	mov    DWORD PTR [ebp-0x4],eax
1000aa4c:	mov    ecx,DWORD PTR [ebp-0x4]
1000aa4f:	push   ecx
1000aa50:	mov    edx,DWORD PTR [ebp+0xc]
1000aa53:	push   edx
1000aa54:	mov    ecx,DWORD PTR [ebp+0x8]
1000aa57:	call   0x1000ab30
1000aa5c:	mov    DWORD PTR [ebp-0x4],0x0
1000aa63:	mov    esp,ebp
1000aa65:	pop    ebp
1000aa66:	ret    
1000aa67:	int3   
1000aa68:	int3   
1000aa69:	int3   
1000aa6a:	int3   
1000aa6b:	int3   
1000aa6c:	int3   
1000aa6d:	int3   
1000aa6e:	int3   
1000aa6f:	int3   
1000aa70:	push   ebp
1000aa71:	mov    ebp,esp
1000aa73:	sub    esp,0x20
1000aa76:	xor    eax,eax
1000aa78:	mov    BYTE PTR [ebp-0x1],al
1000aa7b:	mov    cl,BYTE PTR [ebp-0x3]
1000aa7e:	mov    BYTE PTR [ebp-0x2],cl
1000aa81:	mov    edx,DWORD PTR [ebp+0xc]
1000aa84:	mov    DWORD PTR [ebp-0x8],edx
1000aa87:	mov    eax,DWORD PTR [ebp+0x8]
1000aa8a:	mov    DWORD PTR [ebp-0x10],eax
1000aa8d:	mov    cl,BYTE PTR [ebp-0x1]
1000aa90:	mov    BYTE PTR [ebp-0x1d],cl
1000aa93:	mov    edx,DWORD PTR [ebp+0x10]
1000aa96:	mov    DWORD PTR [ebp-0x1c],edx
1000aa99:	mov    eax,DWORD PTR [ebp-0x8]
1000aa9c:	sub    eax,DWORD PTR [ebp-0x10]
1000aa9f:	sar    eax,0x2
1000aaa2:	mov    DWORD PTR [ebp-0x14],eax
1000aaa5:	mov    ecx,DWORD PTR [ebp-0x14]
1000aaa8:	mov    edx,DWORD PTR [ebp-0x1c]
1000aaab:	lea    eax,[edx+ecx*4]
1000aaae:	mov    DWORD PTR [ebp-0x18],eax
1000aab1:	je     0x1000aad1
1000aab3:	mov    ecx,DWORD PTR [ebp-0x14]
1000aab6:	shl    ecx,0x2
1000aab9:	push   ecx
1000aaba:	mov    edx,DWORD PTR [ebp-0x10]
1000aabd:	push   edx
1000aabe:	mov    eax,DWORD PTR [ebp-0x14]
1000aac1:	shl    eax,0x2
1000aac4:	push   eax
1000aac5:	mov    ecx,DWORD PTR [ebp-0x1c]
1000aac8:	push   ecx
1000aac9:	call   0x1001647e
1000aace:	add    esp,0x10
1000aad1:	mov    eax,DWORD PTR [ebp-0x18]
1000aad4:	mov    esp,ebp
1000aad6:	pop    ebp
1000aad7:	ret    
1000aad8:	int3   
1000aad9:	int3   
1000aada:	int3   
1000aadb:	int3   
1000aadc:	int3   
1000aadd:	int3   
1000aade:	int3   
1000aadf:	int3   
1000aae0:	push   ebp
1000aae1:	mov    ebp,esp
1000aae3:	sub    esp,0xc
1000aae6:	cmp    DWORD PTR [ebp+0x8],0x0
1000aaea:	ja     0x1000aaf5
1000aaec:	mov    DWORD PTR [ebp+0x8],0x0
1000aaf3:	jmp    0x1000ab1a
1000aaf5:	or     eax,0xffffffff
1000aaf8:	xor    edx,edx
1000aafa:	div    DWORD PTR [ebp+0x8]
1000aafd:	cmp    eax,0x4
1000ab00:	jae    0x1000ab1a
1000ab02:	push   0x0
1000ab04:	lea    ecx,[ebp-0xc]
1000ab07:	call   0x10001250
1000ab0c:	push   0x10058b44
1000ab11:	lea    eax,[ebp-0xc]
1000ab14:	push   eax
1000ab15:	call   0x100161ce
1000ab1a:	mov    ecx,DWORD PTR [ebp+0x8]
1000ab1d:	shl    ecx,0x2
1000ab20:	push   ecx
1000ab21:	call   0x10016414
1000ab26:	add    esp,0x4
1000ab29:	mov    esp,ebp
1000ab2b:	pop    ebp
1000ab2c:	ret    
1000ab2d:	int3   
1000ab2e:	int3   
1000ab2f:	int3   
1000ab30:	push   ebp
1000ab31:	mov    ebp,esp
1000ab33:	sub    esp,0x18
1000ab36:	mov    DWORD PTR [ebp-0x18],ecx
1000ab39:	cmp    DWORD PTR [ebp+0x8],0x0
1000ab3d:	jne    0x1000ab49
1000ab3f:	push   0x80070057
1000ab44:	call   0x10001050
1000ab49:	mov    eax,DWORD PTR [ebp+0xc]
1000ab4c:	push   eax
1000ab4d:	mov    ecx,DWORD PTR [ebp+0x8]
1000ab50:	push   ecx
1000ab51:	call   0x100078b0
1000ab56:	add    esp,0x8
1000ab59:	mov    DWORD PTR [ebp-0x8],eax
1000ab5c:	mov    edx,DWORD PTR [ebp-0x8]
1000ab5f:	push   edx
1000ab60:	mov    ecx,DWORD PTR [ebp-0x18]
1000ab63:	call   0x100031b0
1000ab68:	mov    DWORD PTR [ebp-0x4],eax
1000ab6b:	mov    eax,DWORD PTR [ebp+0xc]
1000ab6e:	push   eax
1000ab6f:	mov    ecx,DWORD PTR [ebp+0x8]
1000ab72:	push   ecx
1000ab73:	mov    edx,DWORD PTR [ebp-0x8]
1000ab76:	add    edx,0x1
1000ab79:	push   edx
1000ab7a:	mov    eax,DWORD PTR [ebp-0x4]
1000ab7d:	push   eax
1000ab7e:	call   0x100078c0
1000ab83:	add    esp,0x10
1000ab86:	mov    ecx,DWORD PTR [ebp-0x8]
1000ab89:	push   ecx
1000ab8a:	mov    ecx,DWORD PTR [ebp-0x18]
1000ab8d:	call   0x10003c50
1000ab92:	mov    esp,ebp
1000ab94:	pop    ebp
1000ab95:	ret    0x8
1000ab98:	int3   
1000ab99:	int3   
1000ab9a:	int3   
1000ab9b:	int3   
1000ab9c:	int3   
1000ab9d:	int3   
1000ab9e:	int3   
1000ab9f:	int3   
1000aba0:	push   ebp
1000aba1:	mov    ebp,esp
1000aba3:	sub    esp,0x20
1000aba6:	xor    eax,eax
1000aba8:	mov    BYTE PTR [ebp-0x1],al
1000abab:	mov    cl,BYTE PTR [ebp-0x1]
1000abae:	mov    BYTE PTR [ebp-0x1e],cl
1000abb1:	mov    dl,BYTE PTR [ebp-0x2]
1000abb4:	mov    BYTE PTR [ebp-0x1d],dl
1000abb7:	mov    eax,DWORD PTR [ebp+0x8]
1000abba:	mov    DWORD PTR [ebp-0x1c],eax
1000abbd:	mov    ecx,DWORD PTR [ebp+0xc]
1000abc0:	mov    edx,DWORD PTR [ebp-0x1c]
1000abc3:	lea    eax,[edx+ecx*4]
1000abc6:	mov    DWORD PTR [ebp-0x8],eax
1000abc9:	xor    ecx,ecx
1000abcb:	mov    BYTE PTR [ebp-0x9],cl
1000abce:	mov    dl,BYTE PTR [ebp-0x9]
1000abd1:	mov    BYTE PTR [ebp-0x15],dl
1000abd4:	mov    eax,DWORD PTR [ebp+0xc]
1000abd7:	mov    DWORD PTR [ebp-0x14],eax
1000abda:	mov    ecx,DWORD PTR [ebp-0x1c]
1000abdd:	mov    DWORD PTR [ebp-0x10],ecx
1000abe0:	jmp    0x1000abf4
1000abe2:	mov    edx,DWORD PTR [ebp-0x14]
1000abe5:	sub    edx,0x1
1000abe8:	mov    DWORD PTR [ebp-0x14],edx
1000abeb:	mov    eax,DWORD PTR [ebp-0x10]
1000abee:	add    eax,0x4
1000abf1:	mov    DWORD PTR [ebp-0x10],eax
1000abf4:	cmp    DWORD PTR [ebp-0x14],0x0
1000abf8:	jbe    0x1000ac06
1000abfa:	mov    ecx,DWORD PTR [ebp-0x10]
1000abfd:	mov    edx,DWORD PTR [ebp+0x10]
1000ac00:	mov    eax,DWORD PTR [edx]
1000ac02:	mov    DWORD PTR [ecx],eax
1000ac04:	jmp    0x1000abe2
1000ac06:	mov    esp,ebp
1000ac08:	pop    ebp
1000ac09:	ret    
1000ac0a:	int3   
1000ac0b:	int3   
1000ac0c:	int3   
1000ac0d:	int3   
1000ac0e:	int3   
1000ac0f:	int3   
1000ac10:	push   ebp
1000ac11:	mov    ebp,esp
1000ac13:	sub    esp,0x14
1000ac16:	mov    eax,DWORD PTR [ebp+0xc]
1000ac19:	mov    ecx,DWORD PTR [ebp+0x8]
1000ac1c:	lea    edx,[ecx+eax*4]
1000ac1f:	mov    DWORD PTR [ebp-0x4],edx
1000ac22:	xor    eax,eax
1000ac24:	mov    BYTE PTR [ebp-0x5],al
1000ac27:	mov    cl,BYTE PTR [ebp-0x5]
1000ac2a:	mov    BYTE PTR [ebp-0x11],cl
1000ac2d:	mov    edx,DWORD PTR [ebp+0xc]
1000ac30:	mov    DWORD PTR [ebp-0x10],edx
1000ac33:	mov    eax,DWORD PTR [ebp+0x8]
1000ac36:	mov    DWORD PTR [ebp-0xc],eax
1000ac39:	jmp    0x1000ac4d
1000ac3b:	mov    ecx,DWORD PTR [ebp-0x10]
1000ac3e:	sub    ecx,0x1
1000ac41:	mov    DWORD PTR [ebp-0x10],ecx
1000ac44:	mov    edx,DWORD PTR [ebp-0xc]
1000ac47:	add    edx,0x4
1000ac4a:	mov    DWORD PTR [ebp-0xc],edx
1000ac4d:	cmp    DWORD PTR [ebp-0x10],0x0
1000ac51:	jbe    0x1000ac5f
1000ac53:	mov    eax,DWORD PTR [ebp-0xc]
1000ac56:	mov    ecx,DWORD PTR [ebp+0x10]
1000ac59:	mov    edx,DWORD PTR [ecx]
1000ac5b:	mov    DWORD PTR [eax],edx
1000ac5d:	jmp    0x1000ac3b
1000ac5f:	mov    esp,ebp
1000ac61:	pop    ebp
1000ac62:	ret    
1000ac63:	int3   
1000ac64:	int3   
1000ac65:	int3   
1000ac66:	int3   
1000ac67:	int3   
1000ac68:	int3   
1000ac69:	int3   
1000ac6a:	int3   
1000ac6b:	int3   
1000ac6c:	int3   
1000ac6d:	int3   
1000ac6e:	int3   
1000ac6f:	int3   
1000ac70:	push   ebx
1000ac71:	push   esi
1000ac72:	push   edi
1000ac73:	push   0x0
1000ac75:	push   0x0
1000ac77:	mov    esi,ecx
1000ac79:	push   esi
1000ac7a:	push   0x1000acc0
1000ac7f:	push   0x0
1000ac81:	push   0x0
1000ac83:	call   DWORD PTR ds:0x1002c074
1000ac89:	mov    edi,DWORD PTR [esi+0x4]
1000ac8c:	test   edi,edi
1000ac8e:	mov    ebx,eax
1000ac90:	je     0x1000acaa
1000ac92:	push   ebp
1000ac93:	call   DWORD PTR ds:0x1002c07c
1000ac99:	push   edi
1000ac9a:	mov    ebp,eax
1000ac9c:	call   DWORD PTR ds:0x1002c058
1000aca2:	push   ebp
1000aca3:	call   DWORD PTR ds:0x1002c078
1000aca9:	pop    ebp
1000acaa:	pop    edi
1000acab:	mov    DWORD PTR [esi+0x4],ebx
1000acae:	pop    esi
1000acaf:	pop    ebx
1000acb0:	ret    
1000acb1:	int3   
1000acb2:	int3   
1000acb3:	int3   
1000acb4:	int3   
1000acb5:	int3   
1000acb6:	int3   
1000acb7:	int3   
1000acb8:	int3   
1000acb9:	int3   
1000acba:	int3   
1000acbb:	int3   
1000acbc:	int3   
1000acbd:	int3   
1000acbe:	int3   
1000acbf:	int3   
1000acc0:	mov    eax,DWORD PTR [esp+0x4]
1000acc4:	push   eax
1000acc5:	call   0x1000ad80
1000acca:	xor    eax,eax
1000accc:	ret    0x4
1000accf:	int3   
1000acd0:	push   0xffffffff
1000acd2:	push   0x1002a778
1000acd7:	mov    eax,fs:0x0
1000acdd:	push   eax
1000acde:	sub    esp,0x8
1000ace1:	push   ebx
1000ace2:	push   esi
1000ace3:	push   edi
1000ace4:	mov    eax,ds:0x10064694
1000ace9:	xor    eax,esp
1000aceb:	push   eax
1000acec:	lea    eax,[esp+0x18]
1000acf0:	mov    fs:0x0,eax
1000acf6:	push   0x10066e0c
1000acfb:	call   DWORD PTR ds:0x1002c0e0
1000ad01:	mov    DWORD PTR [esp+0x20],0x0
1000ad09:	mov    esi,DWORD PTR [esp+0x28]
1000ad0d:	mov    DWORD PTR [esp+0x28],esi
1000ad11:	mov    BYTE PTR [esp+0x20],0x2
1000ad16:	mov    eax,DWORD PTR [esi+0x4]
1000ad19:	mov    ebx,DWORD PTR [esi]
1000ad1b:	push   eax
1000ad1c:	mov    DWORD PTR [esp+0x18],ebx
1000ad20:	call   0x1000afd0
1000ad25:	push   ebx
1000ad26:	call   DWORD PTR ds:0x1002c154
1000ad2c:	push   ebx
1000ad2d:	call   DWORD PTR ds:0x1002c14c
1000ad33:	test   ebx,ebx
1000ad35:	je     0x1000ad4d
1000ad37:	call   DWORD PTR ds:0x1002c07c
1000ad3d:	push   ebx
1000ad3e:	mov    edi,eax
1000ad40:	call   DWORD PTR ds:0x1002c058
1000ad46:	push   edi
1000ad47:	call   DWORD PTR ds:0x1002c078
1000ad4d:	push   esi
1000ad4e:	call   0x10015ad6
1000ad53:	add    esp,0x4
1000ad56:	push   0x10066e0c
1000ad5b:	call   DWORD PTR ds:0x1002c0ec
1000ad61:	xor    eax,eax
1000ad63:	mov    ecx,DWORD PTR [esp+0x18]
1000ad67:	mov    DWORD PTR fs:0x0,ecx
1000ad6e:	pop    ecx
1000ad6f:	pop    edi
1000ad70:	pop    esi
1000ad71:	pop    ebx
1000ad72:	add    esp,0x14
1000ad75:	ret    0x4
1000ad78:	int3   
1000ad79:	int3   
1000ad7a:	int3   
1000ad7b:	int3   
1000ad7c:	int3   
1000ad7d:	int3   
1000ad7e:	int3   
1000ad7f:	int3   
1000ad80:	push   0xffffffff
1000ad82:	push   0x1002b623
1000ad87:	mov    eax,fs:0x0
1000ad8d:	push   eax
1000ad8e:	sub    esp,0x20
1000ad91:	push   ebx
1000ad92:	push   ebp
1000ad93:	push   esi
1000ad94:	push   edi
1000ad95:	mov    eax,ds:0x10064694
1000ad9a:	xor    eax,esp
1000ad9c:	push   eax
1000ad9d:	lea    eax,[esp+0x34]
1000ada1:	mov    fs:0x0,eax
1000ada7:	push   0x10066e0c
1000adac:	call   DWORD PTR ds:0x1002c0e0
1000adb2:	push   0x100032a0
1000adb7:	push   0x1000afc0
1000adbc:	push   0x4
1000adbe:	push   0x4
1000adc0:	lea    eax,[esp+0x34]
1000adc4:	xor    edi,edi
1000adc6:	push   eax
1000adc7:	mov    DWORD PTR [esp+0x50],edi
1000adcb:	call   0x100179b7
1000add0:	mov    BYTE PTR [esp+0x3c],0x1
1000add5:	mov    ecx,DWORD PTR ds:0x10066f44
1000addb:	push   ecx
1000addc:	lea    ecx,[esp+0x1c]
1000ade0:	call   0x10002d50
1000ade5:	mov    BYTE PTR [esp+0x3c],0x2
1000adea:	mov    esi,DWORD PTR [esp+0x18]
1000adee:	call   0x100025b0
1000adf3:	push   eax
1000adf4:	push   0x0
1000adf6:	push   0x800
1000adfb:	push   0x800
1000ae00:	push   0xff
1000ae05:	push   0x6
1000ae07:	push   0x3
1000ae09:	push   esi
1000ae0a:	call   DWORD PTR ds:0x1002c150
1000ae10:	mov    esi,DWORD PTR [esp+edi*4+0x24]
1000ae14:	test   esi,esi
1000ae16:	mov    ebp,eax
1000ae18:	je     0x1000ae30
1000ae1a:	call   DWORD PTR ds:0x1002c07c
1000ae20:	push   esi
1000ae21:	mov    ebx,eax
1000ae23:	call   DWORD PTR ds:0x1002c058
1000ae29:	push   ebx
1000ae2a:	call   DWORD PTR ds:0x1002c078
1000ae30:	mov    DWORD PTR [esp+edi*4+0x24],ebp
1000ae34:	add    edi,0x1
1000ae37:	cmp    edi,0x4
1000ae3a:	jne    0x1000adea
1000ae3c:	mov    ebx,DWORD PTR ds:0x1002c074
1000ae42:	xor    ebp,ebp
1000ae44:	mov    DWORD PTR [esp+0x1c],ebp
1000ae48:	mov    eax,DWORD PTR [esp+ebp*4+0x24]
1000ae4c:	push   0x0
1000ae4e:	push   eax
1000ae4f:	call   DWORD PTR ds:0x1002c148
1000ae55:	test   eax,eax
1000ae57:	je     0x1000ae60
1000ae59:	mov    esi,0x1
1000ae5e:	jmp    0x1000ae72
1000ae60:	call   DWORD PTR ds:0x1002c07c
1000ae66:	xor    edx,edx
1000ae68:	cmp    eax,0x217
1000ae6d:	sete   dl
1000ae70:	mov    esi,edx
1000ae72:	mov    eax,ds:0x10066f40
1000ae77:	push   0x0
1000ae79:	push   eax
1000ae7a:	call   DWORD PTR ds:0x1002c04c
1000ae80:	test   eax,eax
1000ae82:	je     0x1000af5a
1000ae88:	test   esi,esi
1000ae8a:	je     0x1000aed4
1000ae8c:	push   0x8
1000ae8e:	call   0x10016414
1000ae93:	mov    ecx,DWORD PTR [esp+0x48]
1000ae97:	add    esp,0x4
1000ae9a:	push   0x0
1000ae9c:	push   0x0
1000ae9e:	push   eax
1000ae9f:	push   0x1000acd0
1000aea4:	mov    DWORD PTR [eax+0x4],ecx
1000aea7:	mov    ecx,DWORD PTR [esp+ebp*4+0x34]
1000aeab:	push   0x0
1000aead:	mov    DWORD PTR [esp+ebp*4+0x38],0x0
1000aeb5:	push   0x0
1000aeb7:	mov    DWORD PTR [eax],ecx
1000aeb9:	call   ebx
1000aebb:	push   eax
1000aebc:	call   DWORD PTR ds:0x1002c058
1000aec2:	push   0xa
1000aec4:	call   DWORD PTR ds:0x1002c070
1000aeca:	push   0x0
1000aecc:	call   0x10015ad6
1000aed1:	add    esp,0x4
1000aed4:	mov    edx,DWORD PTR [esp+0x18]
1000aed8:	push   0x0
1000aeda:	push   0x0
1000aedc:	push   0x800
1000aee1:	push   0x800
1000aee6:	push   0xff
1000aeeb:	push   0x6
1000aeed:	push   0x3
1000aeef:	push   edx
1000aef0:	call   DWORD PTR ds:0x1002c150
1000aef6:	mov    esi,DWORD PTR [esp+ebp*4+0x24]
1000aefa:	test   esi,esi
1000aefc:	mov    edi,eax
1000aefe:	je     0x1000af1a
1000af00:	call   DWORD PTR ds:0x1002c07c
1000af06:	push   esi
1000af07:	mov    ebp,eax
1000af09:	call   DWORD PTR ds:0x1002c058
1000af0f:	push   ebp
1000af10:	call   DWORD PTR ds:0x1002c078
1000af16:	mov    ebp,DWORD PTR [esp+0x1c]
1000af1a:	mov    eax,edi
1000af1c:	cmp    eax,0xffffffff
1000af1f:	mov    DWORD PTR [esp+ebp*4+0x24],edi
1000af23:	je     0x1000af5a
1000af25:	push   0x0
1000af27:	push   0x0
1000af29:	lea    ecx,[esp+0x28]
1000af2d:	push   ecx
1000af2e:	push   eax
1000af2f:	mov    DWORD PTR [esp+0x30],0x2
1000af37:	call   DWORD PTR ds:0x1002c108
1000af3d:	test   eax,eax
1000af3f:	je     0x1000af5a
1000af41:	add    ebp,0x1
1000af44:	and    ebp,0x80000003
1000af4a:	jns    0x1000af51
1000af4c:	dec    ebp
1000af4d:	or     ebp,0xfffffffc
1000af50:	inc    ebp
1000af51:	mov    DWORD PTR [esp+0x1c],ebp
1000af55:	jmp    0x1000ae48
1000af5a:	mov    BYTE PTR [esp+0x3c],0x1
1000af5f:	mov    eax,DWORD PTR [esp+0x18]
1000af63:	add    eax,0xfffffff0
1000af66:	lea    edx,[eax+0xc]
1000af69:	or     ecx,0xffffffff
1000af6c:	lock xadd DWORD PTR [edx],ecx
1000af70:	dec    ecx
1000af71:	test   ecx,ecx
1000af73:	jg     0x1000af7f
1000af75:	mov    ecx,DWORD PTR [eax]
1000af77:	mov    edx,DWORD PTR [ecx]
1000af79:	push   eax
1000af7a:	mov    eax,DWORD PTR [edx+0x4]
1000af7d:	call   eax
1000af7f:	push   0x100032a0
1000af84:	push   0x4
1000af86:	push   0x4
1000af88:	lea    ecx,[esp+0x30]
1000af8c:	push   ecx
1000af8d:	mov    BYTE PTR [esp+0x4c],0x0
1000af92:	call   0x10017594
1000af97:	push   0x10066e0c
1000af9c:	call   DWORD PTR ds:0x1002c0ec
1000afa2:	mov    ecx,DWORD PTR [esp+0x34]
1000afa6:	mov    DWORD PTR fs:0x0,ecx
1000afad:	pop    ecx
1000afae:	pop    edi
1000afaf:	pop    esi
1000afb0:	pop    ebp
1000afb1:	pop    ebx
1000afb2:	add    esp,0x2c
1000afb5:	ret    0x4
1000afb8:	int3   
1000afb9:	int3   
1000afba:	int3   
1000afbb:	int3   
1000afbc:	int3   
1000afbd:	int3   
1000afbe:	int3   
1000afbf:	int3   
1000afc0:	mov    DWORD PTR [ecx],0x0
1000afc6:	ret    
1000afc7:	int3   
1000afc8:	int3   
1000afc9:	int3   
1000afca:	int3   
1000afcb:	int3   
1000afcc:	int3   
1000afcd:	int3   
1000afce:	int3   
1000afcf:	int3   
1000afd0:	push   ebp
1000afd1:	mov    ebp,esp
1000afd3:	and    esp,0xfffffff8
1000afd6:	push   0xffffffff
1000afd8:	push   0x1002a700
1000afdd:	mov    eax,fs:0x0
1000afe3:	push   eax
1000afe4:	sub    esp,0x4c
1000afe7:	mov    eax,ds:0x10064694
1000afec:	xor    eax,esp
1000afee:	mov    DWORD PTR [esp+0x44],eax
1000aff2:	push   esi
1000aff3:	push   edi
1000aff4:	mov    eax,ds:0x10064694
1000aff9:	xor    eax,esp
1000affb:	push   eax
1000affc:	lea    eax,[esp+0x58]
1000b000:	mov    fs:0x0,eax
1000b006:	mov    eax,DWORD PTR [ebp+0x8]
1000b009:	mov    DWORD PTR [esp+0x24],eax
1000b00d:	lea    ecx,[ecx+0x0]
1000b010:	xor    edi,edi
1000b012:	xor    eax,eax
1000b014:	mov    DWORD PTR [esp+0x10],edi
1000b018:	mov    DWORD PTR [esp+0x14],edi
1000b01c:	mov    WORD PTR [esp+0x2c],di
1000b021:	mov    DWORD PTR [esp+0x2e],eax
1000b025:	mov    DWORD PTR [esp+0x32],eax
1000b029:	mov    DWORD PTR [esp+0x36],eax
1000b02d:	mov    WORD PTR [esp+0x3a],ax
1000b032:	mov    DWORD PTR [esp+0x3c],eax
1000b036:	mov    DWORD PTR [esp+0x40],eax
1000b03a:	mov    DWORD PTR [esp+0x44],eax
1000b03e:	mov    DWORD PTR [esp+0x48],eax
1000b042:	mov    DWORD PTR [esp+0x4c],eax
1000b046:	jmp    0x1000b050
1000b048:	lea    esp,[esp+0x0]
1000b04f:	nop
1000b050:	mov    esi,DWORD PTR ds:0x1002c068
1000b056:	push   edi
1000b057:	lea    ecx,[esp+0x14]
1000b05b:	push   ecx
1000b05c:	push   0x24
1000b05e:	lea    edx,[esp+0x38]
1000b062:	push   edx
1000b063:	push   ebx
1000b064:	call   esi
1000b066:	cmp    eax,edi
1000b068:	je     0x1000b1be
1000b06e:	cmp    DWORD PTR [esp+0x10],edi
1000b072:	jbe    0x1000b050
1000b074:	cmp    WORD PTR [esp+0x2c],di
1000b079:	je     0x1000b097
1000b07b:	push   0x8
1000b07d:	lea    eax,[esp+0x30]
1000b081:	push   0x1005557c
1000b086:	push   eax
1000b087:	call   0x10017982
1000b08c:	add    esp,0xc
1000b08f:	test   eax,eax
1000b091:	jne    0x1000b1be
1000b097:	mov    ecx,DWORD PTR [esp+0x44]
1000b09b:	push   ecx
1000b09c:	call   0x100159f5
1000b0a1:	mov    edi,eax
1000b0a3:	add    esp,0x4
1000b0a6:	mov    DWORD PTR [esp+0x28],edi
1000b0aa:	push   0x0
1000b0ac:	lea    edx,[esp+0x14]
1000b0b0:	push   edx
1000b0b1:	mov    DWORD PTR [esp+0x68],0x0
1000b0b9:	mov    eax,DWORD PTR [esp+0x4c]
1000b0bd:	push   eax
1000b0be:	push   edi
1000b0bf:	push   ebx
1000b0c0:	call   esi
1000b0c2:	test   eax,eax
1000b0c4:	je     0x1000b199
1000b0ca:	mov    DWORD PTR [esp+0xc],0x0
1000b0d2:	mov    BYTE PTR [esp+0x60],0x1
1000b0d7:	cmp    BYTE PTR [esp+0x4c],0x0
1000b0dc:	je     0x1000b0e2
1000b0de:	mov    esi,edi
1000b0e0:	jmp    0x1000b103
1000b0e2:	mov    ecx,DWORD PTR [esp+0x48]
1000b0e6:	push   ecx
1000b0e7:	call   0x100159f5
1000b0ec:	mov    esi,eax
1000b0ee:	add    esp,0x4
1000b0f1:	test   esi,esi
1000b0f3:	je     0x1000b0ff
1000b0f5:	push   0x0
1000b0f7:	call   0x10015ad6
1000b0fc:	add    esp,0x4
1000b0ff:	mov    DWORD PTR [esp+0xc],esi
1000b103:	mov    edx,DWORD PTR [esp+0x48]
1000b107:	mov    ecx,DWORD PTR [esp+0x24]
1000b10b:	mov    DWORD PTR [esp+0x18],edx
1000b10f:	lea    edx,[esp+0x18]
1000b113:	push   edx
1000b114:	mov    edx,DWORD PTR [esp+0x48]
1000b118:	xor    eax,eax
1000b11a:	push   esi
1000b11b:	push   edx
1000b11c:	mov    edx,DWORD PTR [esp+0x48]
1000b120:	mov    DWORD PTR [esp+0x28],eax
1000b124:	mov    DWORD PTR [esp+0x2c],eax
1000b128:	mov    eax,DWORD PTR [ecx]
1000b12a:	mov    eax,DWORD PTR [eax+0x4]
1000b12d:	push   edi
1000b12e:	push   edx
1000b12f:	call   eax
1000b131:	movzx  eax,al
1000b134:	push   0x0
1000b136:	mov    DWORD PTR [esp+0x20],eax
1000b13a:	lea    ecx,[esp+0x18]
1000b13e:	push   ecx
1000b13f:	neg    eax
1000b141:	push   0x8
1000b143:	sbb    eax,eax
1000b145:	and    eax,DWORD PTR [esp+0x24]
1000b149:	lea    edx,[esp+0x28]
1000b14d:	push   edx
1000b14e:	push   ebx
1000b14f:	mov    DWORD PTR [esp+0x34],eax
1000b153:	call   DWORD PTR ds:0x1002c0ac
1000b159:	test   eax,eax
1000b15b:	je     0x1000b1a4
1000b15d:	mov    eax,DWORD PTR [esp+0x20]
1000b161:	test   eax,eax
1000b163:	jbe    0x1000b179
1000b165:	push   0x0
1000b167:	lea    ecx,[esp+0x18]
1000b16b:	push   ecx
1000b16c:	push   eax
1000b16d:	push   esi
1000b16e:	push   ebx
1000b16f:	call   DWORD PTR ds:0x1002c0ac
1000b175:	test   eax,eax
1000b177:	je     0x1000b1ab
1000b179:	mov    edx,DWORD PTR [esp+0xc]
1000b17d:	push   edx
1000b17e:	call   0x10015ad6
1000b183:	push   edi
1000b184:	mov    DWORD PTR [esp+0x68],0xffffffff
1000b18c:	call   0x10015ad6
1000b191:	add    esp,0x8
1000b194:	jmp    0x1000b010
1000b199:	push   edi
1000b19a:	call   0x10015ad6
1000b19f:	add    esp,0x4
1000b1a2:	jmp    0x1000b1be
1000b1a4:	mov    eax,DWORD PTR [esp+0xc]
1000b1a8:	push   eax
1000b1a9:	jmp    0x1000b1b0
1000b1ab:	mov    ecx,DWORD PTR [esp+0xc]
1000b1af:	push   ecx
1000b1b0:	call   0x10015ad6
1000b1b5:	push   edi
1000b1b6:	call   0x10015ad6
1000b1bb:	add    esp,0x8
1000b1be:	mov    ecx,DWORD PTR [esp+0x58]
1000b1c2:	mov    DWORD PTR fs:0x0,ecx
1000b1c9:	pop    ecx
1000b1ca:	pop    edi
1000b1cb:	pop    esi
1000b1cc:	mov    ecx,DWORD PTR [esp+0x44]
1000b1d0:	xor    ecx,esp
1000b1d2:	call   0x10015adb
1000b1d7:	mov    esp,ebp
1000b1d9:	pop    ebp
1000b1da:	ret    0x4
1000b1dd:	int3   
1000b1de:	int3   
1000b1df:	int3   
1000b1e0:	push   ebp
1000b1e1:	mov    ebp,esp
1000b1e3:	and    esp,0xfffffff8
1000b1e6:	sub    esp,0x34
1000b1e9:	xor    eax,eax
1000b1eb:	push   ebx
1000b1ec:	mov    DWORD PTR [esp+0x24],eax
1000b1f0:	mov    DWORD PTR [esp+0x28],eax
1000b1f4:	mov    DWORD PTR [esp+0x2c],eax
1000b1f8:	mov    DWORD PTR [esp+0x30],eax
1000b1fc:	mov    DWORD PTR [esp+0x34],eax
1000b200:	mov    eax,DWORD PTR [ebp+0xc]
1000b203:	push   esi
1000b204:	push   edi
1000b205:	mov    edi,DWORD PTR [ebp+0x8]
1000b208:	add    eax,0xc
1000b20b:	mov    DWORD PTR [esp+0xc],edi
1000b20f:	mov    DWORD PTR [esp+0x18],eax
1000b213:	mov    eax,0x14
1000b218:	lea    ecx,[esp+0x2c]
1000b21c:	mov    edx,edi
1000b21e:	mov    edi,edi
1000b220:	mov    esi,DWORD PTR [edx]
1000b222:	cmp    esi,DWORD PTR [ecx]
1000b224:	jne    0x1000b238
1000b226:	sub    eax,0x4
1000b229:	add    ecx,0x4
1000b22c:	add    edx,0x4
1000b22f:	cmp    eax,0x4
1000b232:	jae    0x1000b220
1000b234:	test   eax,eax
1000b236:	je     0x1000b295
1000b238:	movzx  esi,BYTE PTR [edx]
1000b23b:	movzx  ebx,BYTE PTR [ecx]
1000b23e:	sub    esi,ebx
1000b240:	jne    0x1000b287
1000b242:	sub    eax,0x1
1000b245:	add    ecx,0x1
1000b248:	add    edx,0x1
1000b24b:	test   eax,eax
1000b24d:	je     0x1000b295
1000b24f:	movzx  esi,BYTE PTR [edx]
1000b252:	movzx  ebx,BYTE PTR [ecx]
1000b255:	sub    esi,ebx
1000b257:	jne    0x1000b287
1000b259:	sub    eax,0x1
1000b25c:	add    ecx,0x1
1000b25f:	add    edx,0x1
1000b262:	test   eax,eax
1000b264:	je     0x1000b295
1000b266:	movzx  esi,BYTE PTR [edx]
1000b269:	movzx  ebx,BYTE PTR [ecx]
1000b26c:	sub    esi,ebx
1000b26e:	jne    0x1000b287
1000b270:	sub    eax,0x1
1000b273:	add    ecx,0x1
1000b276:	add    edx,0x1
1000b279:	test   eax,eax
1000b27b:	je     0x1000b295
1000b27d:	movzx  esi,BYTE PTR [edx]
1000b280:	movzx  ecx,BYTE PTR [ecx]
1000b283:	sub    esi,ecx
1000b285:	je     0x1000b295
1000b287:	test   esi,esi
1000b289:	mov    eax,0x1
1000b28e:	jg     0x1000b297
1000b290:	or     eax,0xffffffff
1000b293:	jmp    0x1000b297
1000b295:	xor    eax,eax
1000b297:	test   eax,eax
1000b299:	je     0x1000b37d
1000b29f:	mov    eax,DWORD PTR [ebp+0xc]
1000b2a2:	sub    eax,DWORD PTR [ebp+0x8]
1000b2a5:	cdq    
1000b2a6:	mov    ebx,eax
1000b2a8:	mov    DWORD PTR [esp+0x24],edx
1000b2ac:	mov    edx,DWORD PTR [esp+0x18]
1000b2b0:	mov    eax,DWORD PTR [edx]
1000b2b2:	lea    esi,[eax+ebx*1+0x10000000]
1000b2b9:	push   esi
1000b2ba:	mov    DWORD PTR [esp+0x24],ebx
1000b2be:	call   DWORD PTR ds:0x1002c100
1000b2c4:	test   eax,eax
1000b2c6:	mov    DWORD PTR [esp+0x1c],eax
1000b2ca:	jne    0x1000b2d7
1000b2cc:	push   esi
1000b2cd:	call   DWORD PTR ds:0x1002c048
1000b2d3:	mov    DWORD PTR [esp+0x1c],eax
1000b2d7:	mov    edi,DWORD PTR [edi]
1000b2d9:	mov    ecx,DWORD PTR [esp+0xc]
1000b2dd:	mov    esi,DWORD PTR [ecx+0x10]
1000b2e0:	add    edi,0x10000000
1000b2e6:	add    esi,0x10000000
1000b2ec:	cmp    DWORD PTR [edi],0x0
1000b2ef:	lea    edx,[ebx+edi*1]
1000b2f2:	mov    DWORD PTR [esp+0x14],edx
1000b2f6:	je     0x1000b35e
1000b2f8:	mov    eax,DWORD PTR [esp+0x14]
1000b2fc:	mov    eax,DWORD PTR [eax]
1000b2fe:	test   eax,eax
1000b300:	je     0x1000b34e
1000b302:	js     0x1000b34e
1000b304:	mov    edx,DWORD PTR [esp+0x1c]
1000b308:	lea    ecx,[eax+ebx*1+0x10000002]
1000b30f:	push   ecx
1000b310:	push   edx
1000b311:	call   DWORD PTR ds:0x1002c044
1000b317:	mov    ebx,eax
1000b319:	xor    eax,eax
1000b31b:	mov    ecx,ebx
1000b31d:	or     ecx,eax
1000b31f:	je     0x1000b374
1000b321:	lea    edx,[esp+0x10]
1000b325:	push   edx
1000b326:	push   0x40
1000b328:	push   0x4
1000b32a:	push   esi
1000b32b:	mov    DWORD PTR [esp+0x20],eax
1000b32f:	call   DWORD PTR ds:0x10066e14
1000b335:	mov    ecx,DWORD PTR [esp+0x10]
1000b339:	lea    eax,[esp+0x10]
1000b33d:	push   eax
1000b33e:	push   ecx
1000b33f:	push   0x4
1000b341:	push   esi
1000b342:	mov    DWORD PTR [esi],ebx
1000b344:	call   DWORD PTR ds:0x10066e14
1000b34a:	mov    ebx,DWORD PTR [esp+0x20]
1000b34e:	add    DWORD PTR [esp+0x14],0x4
1000b353:	add    edi,0x4
1000b356:	add    esi,0x4
1000b359:	cmp    DWORD PTR [edi],0x0
1000b35c:	jne    0x1000b2f8
1000b35e:	mov    eax,0x14
1000b363:	add    DWORD PTR [esp+0xc],eax
1000b367:	add    DWORD PTR [esp+0x18],eax
1000b36b:	mov    edi,DWORD PTR [esp+0xc]
1000b36f:	jmp    0x1000b213
1000b374:	xor    al,al
1000b376:	pop    edi
1000b377:	pop    esi
1000b378:	pop    ebx
1000b379:	mov    esp,ebp
1000b37b:	pop    ebp
1000b37c:	ret    
1000b37d:	pop    edi
1000b37e:	pop    esi
1000b37f:	mov    al,0x1
1000b381:	pop    ebx
1000b382:	mov    esp,ebp
1000b384:	pop    ebp
1000b385:	ret    
1000b386:	int3   
1000b387:	int3   
1000b388:	int3   
1000b389:	int3   
1000b38a:	int3   
1000b38b:	int3   
1000b38c:	int3   
1000b38d:	int3   
1000b38e:	int3   
1000b38f:	int3   
1000b390:	mov    eax,0x853c
1000b395:	call   0x10016500
1000b39a:	mov    eax,ds:0x10064694
1000b39f:	xor    eax,esp
1000b3a1:	mov    DWORD PTR [esp+0x8538],eax
1000b3a8:	push   ebx
1000b3a9:	push   esi
1000b3aa:	push   edi
1000b3ab:	mov    edi,DWORD PTR [esp+0x854c]
1000b3b2:	push   0x10057110
1000b3b7:	push   0x10057120
1000b3bc:	call   DWORD PTR ds:0x1002c100
1000b3c2:	push   eax
1000b3c3:	call   DWORD PTR ds:0x1002c044
1000b3c9:	mov    ds:0x10066e14,eax
1000b3ce:	mov    eax,ds:0x1000003c
1000b3d3:	mov    eax,DWORD PTR [eax+0x10000080]
1000b3d9:	test   eax,eax
1000b3db:	je     0x1000b3e9
1000b3dd:	lea    ecx,[eax+0x10000000]
1000b3e3:	mov    DWORD PTR [esp+0x10],ecx
1000b3e7:	jmp    0x1000b3f1
1000b3e9:	mov    DWORD PTR [esp+0x10],0x0
1000b3f1:	push   0x10057108
1000b3f6:	push   0x2711
1000b3fb:	push   edi
1000b3fc:	call   DWORD PTR ds:0x1002c084
1000b402:	mov    esi,eax
1000b404:	test   esi,esi
1000b406:	je     0x1000b4b5
1000b40c:	push   esi
1000b40d:	push   edi
1000b40e:	call   DWORD PTR ds:0x1002c090
1000b414:	mov    ebx,eax
1000b416:	test   ebx,ebx
1000b418:	je     0x1000b4b5
1000b41e:	push   esi
1000b41f:	push   edi
1000b420:	call   DWORD PTR ds:0x1002c088
1000b426:	push   ebx
1000b427:	mov    esi,eax
1000b429:	call   DWORD PTR ds:0x1002c08c
1000b42f:	mov    ebx,eax
1000b431:	mov    eax,0x4
1000b436:	mov    ecx,0x10055b18
1000b43b:	mov    edx,ebx
1000b43d:	push   ebp
1000b43e:	mov    edi,edi
1000b440:	mov    edi,DWORD PTR [edx]
1000b442:	cmp    edi,DWORD PTR [ecx]
1000b444:	jne    0x1000b458
1000b446:	sub    eax,0x4
1000b449:	add    ecx,0x4
1000b44c:	add    edx,0x4
1000b44f:	cmp    eax,0x4
1000b452:	jae    0x1000b440
1000b454:	test   eax,eax
1000b456:	je     0x1000b4cf
1000b458:	movzx  edi,BYTE PTR [edx]
1000b45b:	movzx  ebp,BYTE PTR [ecx]
1000b45e:	sub    edi,ebp
1000b460:	jne    0x1000b4a7
1000b462:	sub    eax,0x1
1000b465:	add    ecx,0x1
1000b468:	add    edx,0x1
1000b46b:	test   eax,eax
1000b46d:	je     0x1000b4cf
1000b46f:	movzx  edi,BYTE PTR [edx]
1000b472:	movzx  ebp,BYTE PTR [ecx]
1000b475:	sub    edi,ebp
1000b477:	jne    0x1000b4a7
1000b479:	sub    eax,0x1
1000b47c:	add    ecx,0x1
1000b47f:	add    edx,0x1
1000b482:	test   eax,eax
1000b484:	je     0x1000b4cf
1000b486:	movzx  edi,BYTE PTR [edx]
1000b489:	movzx  ebp,BYTE PTR [ecx]
1000b48c:	sub    edi,ebp
1000b48e:	jne    0x1000b4a7
1000b490:	sub    eax,0x1
1000b493:	add    ecx,0x1
1000b496:	add    edx,0x1
1000b499:	test   eax,eax
1000b49b:	je     0x1000b4cf
1000b49d:	movzx  edi,BYTE PTR [edx]
1000b4a0:	movzx  edx,BYTE PTR [ecx]
1000b4a3:	sub    edi,edx
1000b4a5:	je     0x1000b4cf
1000b4a7:	test   edi,edi
1000b4a9:	mov    eax,0x1
1000b4ae:	jg     0x1000b4d1
1000b4b0:	or     eax,0xffffffff
1000b4b3:	jmp    0x1000b4d1
1000b4b5:	pop    edi
1000b4b6:	pop    esi
1000b4b7:	xor    al,al
1000b4b9:	pop    ebx
1000b4ba:	mov    ecx,DWORD PTR [esp+0x8538]
1000b4c1:	xor    ecx,esp
1000b4c3:	call   0x10015adb
1000b4c8:	add    esp,0x853c
1000b4ce:	ret    
1000b4cf:	xor    eax,eax
1000b4d1:	test   eax,eax
1000b4d3:	pop    ebp
1000b4d4:	jne    0x1000b4b5
1000b4d6:	mov    edi,DWORD PTR [ebx+0x4]
1000b4d9:	push   edi
1000b4da:	lea    eax,[ebx+0x8]
1000b4dd:	push   eax
1000b4de:	lea    ecx,[esp+0x1c]
1000b4e2:	push   ecx
1000b4e3:	call   0x100167d0
1000b4e8:	sub    esi,edi
1000b4ea:	sub    esi,0x8
1000b4ed:	push   esi
1000b4ee:	lea    edx,[edi+ebx*1+0x8]
1000b4f2:	push   edx
1000b4f3:	lea    eax,[esp+0x1028]
1000b4fa:	push   eax
1000b4fb:	call   0x100167d0
1000b500:	add    esp,0x18
1000b503:	xor    ecx,ecx
1000b505:	xor    edx,edx
1000b507:	test   esi,esi
1000b509:	je     0x1000b529
1000b50b:	jmp    0x1000b510
1000b50d:	lea    ecx,[ecx+0x0]
1000b510:	mov    al,BYTE PTR [esp+edx*1+0x14]
1000b514:	xor    BYTE PTR [esp+ecx*1+0x1014],al
1000b51b:	lea    eax,[edx+0x1]
1000b51e:	xor    edx,edx
1000b520:	add    ecx,0x1
1000b523:	div    edi
1000b525:	cmp    ecx,esi
1000b527:	jne    0x1000b510
1000b529:	mov    edi,DWORD PTR [esp+0x10]
1000b52d:	lea    ecx,[esp+0xc]
1000b531:	push   ecx
1000b532:	push   0x40
1000b534:	push   esi
1000b535:	push   edi
1000b536:	mov    DWORD PTR [esp+0x1c],0x0
1000b53e:	call   DWORD PTR ds:0x10066e14
1000b544:	lea    edx,[esp+0x1014]
1000b54b:	push   edx
1000b54c:	push   edi
1000b54d:	call   0x1000b1e0
1000b552:	mov    ecx,DWORD PTR [esp+0x14]
1000b556:	add    esp,0x8
1000b559:	mov    bl,al
1000b55b:	lea    eax,[esp+0xc]
1000b55f:	push   eax
1000b560:	push   ecx
1000b561:	push   esi
1000b562:	push   edi
1000b563:	call   DWORD PTR ds:0x10066e14
1000b569:	mov    ecx,DWORD PTR [esp+0x8544]
1000b570:	pop    edi
1000b571:	pop    esi
1000b572:	mov    al,bl
1000b574:	pop    ebx
1000b575:	xor    ecx,esp
1000b577:	call   0x10015adb
1000b57c:	add    esp,0x853c
1000b582:	ret    
1000b583:	int3   
1000b584:	int3   
1000b585:	int3   
1000b586:	int3   
1000b587:	int3   
1000b588:	int3   
1000b589:	int3   
1000b58a:	int3   
1000b58b:	int3   
1000b58c:	int3   
1000b58d:	int3   
1000b58e:	int3   
1000b58f:	int3   
1000b590:	push   0xffffffff
1000b592:	push   0x1002ab60
1000b597:	mov    eax,fs:0x0
1000b59d:	push   eax
1000b59e:	sub    esp,0xc
1000b5a1:	push   ebx
1000b5a2:	push   ebp
1000b5a3:	push   esi
1000b5a4:	push   edi
1000b5a5:	mov    eax,ds:0x10064694
1000b5aa:	xor    eax,esp
1000b5ac:	push   eax
1000b5ad:	lea    eax,[esp+0x20]
1000b5b1:	mov    fs:0x0,eax
1000b5b7:	xor    ebx,ebx
1000b5b9:	mov    DWORD PTR [esp+0x14],ebx
1000b5bd:	mov    edi,DWORD PTR [esp+0x38]
1000b5c1:	push   edi
1000b5c2:	call   0x100159f5
1000b5c7:	mov    esi,eax
1000b5c9:	mov    DWORD PTR [esp+0x1c],esi
1000b5cd:	mov    eax,DWORD PTR [esp+0x38]
1000b5d1:	push   edi
1000b5d2:	push   eax
1000b5d3:	push   esi
1000b5d4:	mov    DWORD PTR [esp+0x38],ebx
1000b5d8:	call   0x100167d0
1000b5dd:	add    esp,0x10
1000b5e0:	xor    ecx,ecx
1000b5e2:	xor    edx,edx
1000b5e4:	cmp    edi,ebx
1000b5e6:	je     0x1000b606
1000b5e8:	mov    ebp,DWORD PTR [esp+0x40]
1000b5ec:	mov    ebx,DWORD PTR [esp+0x3c]
1000b5f0:	mov    al,BYTE PTR [edx+ebx*1]
1000b5f3:	xor    BYTE PTR [ecx+esi*1],al
1000b5f6:	lea    eax,[edx+0x1]
1000b5f9:	xor    edx,edx
1000b5fb:	add    ecx,0x1
1000b5fe:	div    ebp
1000b600:	cmp    ecx,edi
1000b602:	jne    0x1000b5f0
1000b604:	xor    ebx,ebx
1000b606:	lea    ecx,[esp+0x14]
1000b60a:	push   ecx
1000b60b:	push   edi
1000b60c:	lea    edx,[esp+0x40]
1000b610:	push   esi
1000b611:	push   edx
1000b612:	call   0x10001880
1000b617:	mov    ecx,DWORD PTR [eax]
1000b619:	mov    ebp,ecx
1000b61b:	mov    DWORD PTR [eax],ebx
1000b61d:	mov    DWORD PTR [esp+0x2c],ebp
1000b621:	mov    BYTE PTR [esp+0x38],0x1
1000b626:	mov    edx,DWORD PTR [esp+0x48]
1000b62a:	push   edx
1000b62b:	call   0x10015ad6
1000b630:	mov    edi,DWORD PTR [esp+0x44]
1000b634:	mov    eax,DWORD PTR [esp+0x28]
1000b638:	add    esp,0x14
1000b63b:	push   eax
1000b63c:	mov    DWORD PTR [edi+0x18],0xf
1000b643:	mov    DWORD PTR [edi+0x14],ebx
1000b646:	push   ebp
1000b647:	mov    ecx,edi
1000b649:	mov    BYTE PTR [edi+0x4],0x0
1000b64d:	call   0x10003900
1000b652:	push   ebp
1000b653:	call   0x10015ad6
1000b658:	push   esi
1000b659:	call   0x10015ad6
1000b65e:	add    esp,0x8
1000b661:	mov    eax,edi
1000b663:	mov    ecx,DWORD PTR [esp+0x20]
1000b667:	mov    DWORD PTR fs:0x0,ecx
1000b66e:	pop    ecx
1000b66f:	pop    edi
1000b670:	pop    esi
1000b671:	pop    ebp
1000b672:	pop    ebx
1000b673:	add    esp,0x18
1000b676:	ret    
1000b677:	int3   
1000b678:	int3   
1000b679:	int3   
1000b67a:	int3   
1000b67b:	int3   
1000b67c:	int3   
1000b67d:	int3   
1000b67e:	int3   
1000b67f:	int3   
1000b680:	push   0xffffffff
1000b682:	push   0x1002ab29
1000b687:	mov    eax,fs:0x0
1000b68d:	push   eax
1000b68e:	push   ecx
1000b68f:	push   esi
1000b690:	push   edi
1000b691:	mov    eax,ds:0x10064694
1000b696:	xor    eax,esp
1000b698:	push   eax
1000b699:	lea    eax,[esp+0x10]
1000b69d:	mov    fs:0x0,eax
1000b6a3:	mov    edi,DWORD PTR [esp+0x24]
1000b6a7:	mov    DWORD PTR [esp+0x18],0x0
1000b6af:	mov    DWORD PTR [esp+0xc],0x0
1000b6b7:	mov    eax,DWORD PTR [edi]
1000b6b9:	mov    ecx,DWORD PTR [eax-0x10]
1000b6bc:	test   ecx,ecx
1000b6be:	je     0x1000b6cb
1000b6c0:	mov    edx,DWORD PTR [ecx]
1000b6c2:	mov    eax,DWORD PTR [edx+0x10]
1000b6c5:	call   eax
1000b6c7:	test   eax,eax
1000b6c9:	jne    0x1000b6db
1000b6cb:	mov    edx,DWORD PTR ds:0x10066120
1000b6d1:	mov    eax,DWORD PTR [edx+0x10]
1000b6d4:	mov    ecx,0x10066120
1000b6d9:	call   eax
1000b6db:	xor    ecx,ecx
1000b6dd:	test   eax,eax
1000b6df:	setne  cl
1000b6e2:	test   ecx,ecx
1000b6e4:	jne    0x1000b6f0
1000b6e6:	push   0x80004005
1000b6eb:	call   0x10001050
1000b6f0:	mov    edx,DWORD PTR [eax]
1000b6f2:	mov    ecx,eax
1000b6f4:	mov    eax,DWORD PTR [edx+0xc]
1000b6f7:	call   eax
1000b6f9:	mov    esi,DWORD PTR [esp+0x20]
1000b6fd:	add    eax,0x10
1000b700:	mov    DWORD PTR [esi],eax
1000b702:	mov    ecx,DWORD PTR [esp+0x28]
1000b706:	mov    DWORD PTR [esp+0x18],0x0
1000b70e:	mov    eax,DWORD PTR [ecx]
1000b710:	mov    edx,DWORD PTR [eax-0xc]
1000b713:	mov    ecx,DWORD PTR [edi]
1000b715:	mov    edi,DWORD PTR [ecx-0xc]
1000b718:	push   edx
1000b719:	push   eax
1000b71a:	push   edi
1000b71b:	push   ecx
1000b71c:	push   esi
1000b71d:	mov    DWORD PTR [esp+0x20],0x1
1000b725:	call   0x10003c80
1000b72a:	add    esp,0x14
1000b72d:	mov    eax,esi
1000b72f:	mov    ecx,DWORD PTR [esp+0x10]
1000b733:	mov    DWORD PTR fs:0x0,ecx
1000b73a:	pop    ecx
1000b73b:	pop    edi
1000b73c:	pop    esi
1000b73d:	add    esp,0x10
1000b740:	ret    
1000b741:	int3   
1000b742:	int3   
1000b743:	int3   
1000b744:	int3   
1000b745:	int3   
1000b746:	int3   
1000b747:	int3   
1000b748:	int3   
1000b749:	int3   
1000b74a:	int3   
1000b74b:	int3   
1000b74c:	int3   
1000b74d:	int3   
1000b74e:	int3   
1000b74f:	int3   
1000b750:	push   ecx
1000b751:	push   ebx
1000b752:	push   esi
1000b753:	push   edi
1000b754:	push   0x2710
1000b759:	call   DWORD PTR ds:0x1002c070
1000b75f:	mov    esi,DWORD PTR [esp+0x14]
1000b763:	mov    ebx,DWORD PTR ds:0x1002c0ac
1000b769:	mov    DWORD PTR [esp+0xc],0x0
1000b771:	xor    edi,edi
1000b773:	push   0x0
1000b775:	lea    eax,[esp+0x18]
1000b779:	push   eax
1000b77a:	push   0x4
1000b77c:	lea    ecx,[esp+0x18]
1000b780:	push   ecx
1000b781:	push   esi
1000b782:	call   ebx
1000b784:	test   eax,eax
1000b786:	je     0x1000b790
1000b788:	add    edi,0x1
1000b78b:	cmp    edi,0xa
1000b78e:	jne    0x1000b773
1000b790:	test   esi,esi
1000b792:	je     0x1000b7aa
1000b794:	call   DWORD PTR ds:0x1002c07c
1000b79a:	push   esi
1000b79b:	mov    edi,eax
1000b79d:	call   DWORD PTR ds:0x1002c058
1000b7a3:	push   edi
1000b7a4:	call   DWORD PTR ds:0x1002c078
1000b7aa:	pop    edi
1000b7ab:	pop    esi
1000b7ac:	xor    eax,eax
1000b7ae:	pop    ebx
1000b7af:	pop    ecx
1000b7b0:	ret    0x4
1000b7b3:	int3   
1000b7b4:	int3   
1000b7b5:	int3   
1000b7b6:	int3   
1000b7b7:	int3   
1000b7b8:	int3   
1000b7b9:	int3   
1000b7ba:	int3   
1000b7bb:	int3   
1000b7bc:	int3   
1000b7bd:	int3   
1000b7be:	int3   
1000b7bf:	int3   
1000b7c0:	sub    esp,0x14
1000b7c3:	push   ebx
1000b7c4:	mov    ebx,DWORD PTR ds:0x1002c0d0
1000b7ca:	push   esi
1000b7cb:	mov    esi,DWORD PTR [esp+0x20]
1000b7cf:	push   edi
1000b7d0:	mov    edi,DWORD PTR [esi+0xc]
1000b7d3:	push   0x2
1000b7d5:	push   0x0
1000b7d7:	push   0x0
1000b7d9:	lea    eax,[esp+0x18]
1000b7dd:	push   eax
1000b7de:	mov    DWORD PTR [esp+0x1c],0x0
1000b7e6:	call   ebx
1000b7e8:	push   eax
1000b7e9:	push   edi
1000b7ea:	call   ebx
1000b7ec:	push   eax
1000b7ed:	call   DWORD PTR ds:0x1002c140
1000b7f3:	test   eax,eax
1000b7f5:	je     0x1000b889
1000b7fb:	mov    ecx,DWORD PTR [esp+0xc]
1000b7ff:	push   0x0
1000b801:	push   0x0
1000b803:	push   ecx
1000b804:	push   0x1000b750
1000b809:	push   0x0
1000b80b:	push   0x0
1000b80d:	call   DWORD PTR ds:0x1002c074
1000b813:	push   0x0
1000b815:	lea    edx,[esp+0x18]
1000b819:	push   edx
1000b81a:	push   0x4
1000b81c:	mov    edi,eax
1000b81e:	mov    eax,DWORD PTR [esi+0x8]
1000b821:	lea    ecx,[esp+0x30]
1000b825:	push   ecx
1000b826:	push   eax
1000b827:	mov    DWORD PTR [esp+0x24],edi
1000b82b:	mov    DWORD PTR [esp+0x38],0x0
1000b833:	call   DWORD PTR ds:0x1002c068
1000b839:	test   eax,eax
1000b83b:	je     0x1000b86f
1000b83d:	cmp    DWORD PTR [esp+0x14],0x4
1000b842:	jne    0x1000b86f
1000b844:	mov    edx,DWORD PTR [esp+0x24]
1000b848:	mov    eax,DWORD PTR [esi+0x4]
1000b84b:	push   0x0
1000b84d:	lea    ecx,[esp+0x20]
1000b851:	push   ecx
1000b852:	mov    DWORD PTR [esp+0x20],edx
1000b856:	push   0x4
1000b858:	lea    edx,[esp+0x24]
1000b85c:	push   edx
1000b85d:	push   eax
1000b85e:	call   DWORD PTR ds:0x1002c0ac
1000b864:	lea    ecx,[esp+0x10]
1000b868:	call   0x100032a0
1000b86d:	jmp    0x1000b889
1000b86f:	test   edi,edi
1000b871:	je     0x1000b889
1000b873:	call   DWORD PTR ds:0x1002c07c
1000b879:	push   edi
1000b87a:	mov    ebx,eax
1000b87c:	call   DWORD PTR ds:0x1002c058
1000b882:	push   ebx
1000b883:	call   DWORD PTR ds:0x1002c078
1000b889:	call   0x1000bd80
1000b88e:	push   esi
1000b88f:	call   0x10015ad6
1000b894:	add    esp,0x4
1000b897:	pop    edi
1000b898:	pop    esi
1000b899:	xor    eax,eax
1000b89b:	pop    ebx
1000b89c:	add    esp,0x14
1000b89f:	ret    0x4
1000b8a2:	int3   
1000b8a3:	int3   
1000b8a4:	int3   
1000b8a5:	int3   
1000b8a6:	int3   
1000b8a7:	int3   
1000b8a8:	int3   
1000b8a9:	int3   
1000b8aa:	int3   
1000b8ab:	int3   
1000b8ac:	int3   
1000b8ad:	int3   
1000b8ae:	int3   
1000b8af:	int3   
1000b8b0:	push   0xffffffff
1000b8b2:	push   0x1002b029
1000b8b7:	mov    eax,fs:0x0
1000b8bd:	push   eax
1000b8be:	sub    esp,0x2c
1000b8c1:	mov    eax,ds:0x10064694
1000b8c6:	xor    eax,esp
1000b8c8:	mov    DWORD PTR [esp+0x28],eax
1000b8cc:	push   ebx
1000b8cd:	push   ebp
1000b8ce:	push   esi
1000b8cf:	push   edi
1000b8d0:	mov    eax,ds:0x10064694
1000b8d5:	xor    eax,esp
1000b8d7:	push   eax
1000b8d8:	lea    eax,[esp+0x40]
1000b8dc:	mov    fs:0x0,eax
1000b8e2:	mov    ebp,DWORD PTR [esp+0x50]
1000b8e6:	mov    esi,ecx
1000b8e8:	xor    ebx,ebx
1000b8ea:	mov    DWORD PTR [esp+0x18],ebx
1000b8ee:	mov    DWORD PTR [esi+0x18],0xf
1000b8f5:	mov    DWORD PTR [esi+0x14],ebx
1000b8f8:	mov    DWORD PTR [esp+0x1c],esi
1000b8fc:	mov    BYTE PTR [esi+0x4],bl
1000b8ff:	mov    DWORD PTR [esp+0x48],ebx
1000b903:	mov    edi,0x1
1000b908:	mov    DWORD PTR [esp+0x18],edi
1000b90c:	call   DWORD PTR ds:0x1002c19c
1000b912:	xor    ecx,ecx
1000b914:	cmp    ecx,ebx
1000b916:	jle    0x1000b925
1000b918:	cmp    WORD PTR [eax+ecx*2-0x2],bx
1000b91d:	jne    0x1000b925
1000b91f:	cmp    WORD PTR [eax+ecx*2],bx
1000b923:	je     0x1000b929
1000b925:	add    ecx,edi
1000b927:	jmp    0x1000b914
1000b929:	add    ecx,ecx
1000b92b:	push   ecx
1000b92c:	push   eax
1000b92d:	lea    ecx,[esp+0x28]
1000b931:	mov    DWORD PTR [esp+0x40],0xf
1000b939:	mov    DWORD PTR [esp+0x3c],ebx
1000b93d:	mov    BYTE PTR [esp+0x2c],bl
1000b941:	call   0x10003900
1000b946:	push   ebx
1000b947:	lea    edx,[esp+0x24]
1000b94b:	push   edx
1000b94c:	or     eax,0xffffffff
1000b94f:	mov    DWORD PTR [esp+0x50],edi
1000b953:	call   0x10003730
1000b958:	mov    BYTE PTR [esp+0x48],bl
1000b95c:	cmp    DWORD PTR [esp+0x38],0x10
1000b961:	jb     0x1000b970
1000b963:	mov    eax,DWORD PTR [esp+0x24]
1000b967:	push   eax
1000b968:	call   0x10015ad6
1000b96d:	add    esp,0x4
1000b970:	mov    edx,DWORD PTR ds:0x10066120
1000b976:	mov    eax,DWORD PTR [edx+0xc]
1000b979:	mov    ecx,0x10066120
1000b97e:	call   eax
1000b980:	add    eax,0x10
1000b983:	mov    DWORD PTR [esp+0x14],eax
1000b987:	mov    DWORD PTR [esp+0x48],0x2
1000b98f:	mov    eax,DWORD PTR [ebp+0x0]
1000b992:	push   eax
1000b993:	push   0x10057134
1000b998:	push   0x5
1000b99a:	push   0x10057164
1000b99f:	call   0x10003540
1000b9a4:	add    esp,0xc
1000b9a7:	push   eax
1000b9a8:	lea    ecx,[esp+0x1c]
1000b9ac:	push   ecx
1000b9ad:	call   0x1000aa40
1000b9b2:	mov    eax,DWORD PTR [esp+0x20]
1000b9b6:	mov    edi,DWORD PTR [eax-0xc]
1000b9b9:	add    esp,0xc
1000b9bc:	cmp    DWORD PTR [eax-0x4],0x1
1000b9c0:	jle    0x1000b9d2
1000b9c2:	mov    edx,edi
1000b9c4:	push   edx
1000b9c5:	lea    ecx,[esp+0x18]
1000b9c9:	call   0x10003d10
1000b9ce:	mov    eax,DWORD PTR [esp+0x14]
1000b9d2:	lea    ecx,[edi+edi*1+0x2]
1000b9d6:	push   ecx
1000b9d7:	push   eax
1000b9d8:	lea    ecx,[esp+0x28]
1000b9dc:	mov    DWORD PTR [esp+0x40],0xf
1000b9e4:	mov    DWORD PTR [esp+0x3c],ebx
1000b9e8:	mov    BYTE PTR [esp+0x2c],bl
1000b9ec:	call   0x10003900
1000b9f1:	push   ebx
1000b9f2:	lea    edx,[esp+0x24]
1000b9f6:	push   edx
1000b9f7:	or     eax,0xffffffff
1000b9fa:	mov    BYTE PTR [esp+0x50],0x3
1000b9ff:	call   0x10003730
1000ba04:	cmp    DWORD PTR [esp+0x38],0x10
1000ba09:	jb     0x1000ba18
1000ba0b:	mov    eax,DWORD PTR [esp+0x24]
1000ba0f:	push   eax
1000ba10:	call   0x10015ad6
1000ba15:	add    esp,0x4
1000ba18:	mov    BYTE PTR [esp+0x48],bl
1000ba1c:	mov    eax,DWORD PTR [esp+0x14]
1000ba20:	add    eax,0xfffffff0
1000ba23:	mov    DWORD PTR [esp+0x38],0xf
1000ba2b:	mov    DWORD PTR [esp+0x34],ebx
1000ba2f:	mov    BYTE PTR [esp+0x24],bl
1000ba33:	lea    ecx,[eax+0xc]
1000ba36:	or     edx,0xffffffff
1000ba39:	lock xadd DWORD PTR [ecx],edx
1000ba3d:	dec    edx
1000ba3e:	test   edx,edx
1000ba40:	jg     0x1000ba4c
1000ba42:	mov    ecx,DWORD PTR [eax]
1000ba44:	mov    edx,DWORD PTR [ecx]
1000ba46:	push   eax
1000ba47:	mov    eax,DWORD PTR [edx+0x4]
1000ba4a:	call   eax
1000ba4c:	mov    edx,DWORD PTR ds:0x10066120
1000ba52:	mov    eax,DWORD PTR [edx+0xc]
1000ba55:	mov    ecx,0x10066120
1000ba5a:	call   eax
1000ba5c:	add    eax,0x10
1000ba5f:	mov    DWORD PTR [esp+0x14],eax
1000ba63:	mov    DWORD PTR [esp+0x48],0x4
1000ba6b:	mov    eax,DWORD PTR [ebp+0xc]
1000ba6e:	push   eax
1000ba6f:	push   0x10057170
1000ba74:	push   0x5
1000ba76:	push   0x1005719c
1000ba7b:	call   0x10003540
1000ba80:	add    esp,0xc
1000ba83:	push   eax
1000ba84:	lea    ecx,[esp+0x1c]
1000ba88:	push   ecx
1000ba89:	call   0x1000aa40
1000ba8e:	mov    eax,DWORD PTR [esp+0x20]
1000ba92:	mov    edi,DWORD PTR [eax-0xc]
1000ba95:	add    esp,0xc
1000ba98:	cmp    DWORD PTR [eax-0x4],0x1
1000ba9c:	jle    0x1000baae
1000ba9e:	mov    edx,edi
1000baa0:	push   edx
1000baa1:	lea    ecx,[esp+0x18]
1000baa5:	call   0x10003d10
1000baaa:	mov    eax,DWORD PTR [esp+0x14]
1000baae:	lea    ecx,[edi+edi*1+0x2]
1000bab2:	push   ecx
1000bab3:	mov    ebp,0xf
1000bab8:	push   eax
1000bab9:	lea    ecx,[esp+0x28]
1000babd:	mov    DWORD PTR [esp+0x40],ebp
1000bac1:	mov    DWORD PTR [esp+0x3c],ebx
1000bac5:	mov    BYTE PTR [esp+0x2c],bl
1000bac9:	call   0x10003900
1000bace:	push   ebx
1000bacf:	lea    edx,[esp+0x24]
1000bad3:	push   edx
1000bad4:	or     eax,0xffffffff
1000bad7:	mov    BYTE PTR [esp+0x50],0x5
1000badc:	call   0x10003730
1000bae1:	mov    edi,0x10
1000bae6:	cmp    DWORD PTR [esp+0x38],edi
1000baea:	jb     0x1000baf9
1000baec:	mov    eax,DWORD PTR [esp+0x24]
1000baf0:	push   eax
1000baf1:	call   0x10015ad6
1000baf6:	add    esp,0x4
1000baf9:	mov    BYTE PTR [esp+0x48],bl
1000bafd:	mov    eax,DWORD PTR [esp+0x14]
1000bb01:	add    eax,0xfffffff0
1000bb04:	mov    DWORD PTR [esp+0x38],ebp
1000bb08:	mov    DWORD PTR [esp+0x34],ebx
1000bb0c:	mov    BYTE PTR [esp+0x24],bl
1000bb10:	lea    ecx,[eax+0xc]
1000bb13:	or     edx,0xffffffff
1000bb16:	lock xadd DWORD PTR [ecx],edx
1000bb1a:	dec    edx
1000bb1b:	test   edx,edx
1000bb1d:	jg     0x1000bb29
1000bb1f:	mov    ecx,DWORD PTR [eax]
1000bb21:	mov    edx,DWORD PTR [ecx]
1000bb23:	push   eax
1000bb24:	mov    eax,DWORD PTR [edx+0x4]
1000bb27:	call   eax
1000bb29:	push   0x2
1000bb2b:	push   0x10057130
1000bb30:	lea    ecx,[esp+0x2c]
1000bb34:	push   ebp
1000bb35:	push   ecx
1000bb36:	mov    DWORD PTR [esp+0x48],ebp
1000bb3a:	mov    DWORD PTR [esp+0x44],ebx
1000bb3e:	mov    BYTE PTR [esp+0x34],bl
1000bb42:	call   0x10016153
1000bb47:	mov    eax,DWORD PTR [esp+0x34]
1000bb4b:	add    esp,0x10
1000bb4e:	cmp    DWORD PTR [esp+0x38],edi
1000bb52:	mov    DWORD PTR [esp+0x34],0x2
1000bb5a:	jae    0x1000bb60
1000bb5c:	lea    eax,[esp+0x24]
1000bb60:	mov    BYTE PTR [eax+0x2],bl
1000bb63:	push   ebx
1000bb64:	lea    edx,[esp+0x24]
1000bb68:	push   edx
1000bb69:	or     eax,0xffffffff
1000bb6c:	mov    DWORD PTR [esp+0x50],0x6
1000bb74:	call   0x10003730
1000bb79:	cmp    DWORD PTR [esp+0x38],edi
1000bb7d:	jb     0x1000bb8c
1000bb7f:	mov    eax,DWORD PTR [esp+0x24]
1000bb83:	push   eax
1000bb84:	call   0x10015ad6
1000bb89:	add    esp,0x4
1000bb8c:	mov    eax,esi
1000bb8e:	mov    ecx,DWORD PTR [esp+0x40]
1000bb92:	mov    DWORD PTR fs:0x0,ecx
1000bb99:	pop    ecx
1000bb9a:	pop    edi
1000bb9b:	pop    esi
1000bb9c:	pop    ebp
1000bb9d:	pop    ebx
1000bb9e:	mov    ecx,DWORD PTR [esp+0x28]
1000bba2:	xor    ecx,esp
1000bba4:	call   0x10015adb
1000bba9:	add    esp,0x38
1000bbac:	ret    
1000bbad:	int3   
1000bbae:	int3   
1000bbaf:	int3   
1000bbb0:	push   0xffffffff
1000bbb2:	push   0x1002b498
1000bbb7:	mov    eax,fs:0x0
1000bbbd:	push   eax
1000bbbe:	sub    esp,0x24
1000bbc1:	push   ebx
1000bbc2:	push   ebp
1000bbc3:	push   esi
1000bbc4:	push   edi
1000bbc5:	mov    eax,ds:0x10064694
1000bbca:	xor    eax,esp
1000bbcc:	push   eax
1000bbcd:	lea    eax,[esp+0x38]
1000bbd1:	mov    fs:0x0,eax
1000bbd7:	mov    eax,DWORD PTR [esp+0x48]
1000bbdb:	xor    edi,edi
1000bbdd:	push   0x10
1000bbdf:	mov    DWORD PTR [esp+0x28],eax
1000bbe3:	mov    DWORD PTR [esp+0x18],edi
1000bbe7:	call   0x10016414
1000bbec:	add    esp,0x4
1000bbef:	cmp    eax,edi
1000bbf1:	je     0x1000bc02
1000bbf3:	mov    DWORD PTR [eax],edi
1000bbf5:	mov    DWORD PTR [eax+0x4],edi
1000bbf8:	mov    DWORD PTR [eax+0x8],edi
1000bbfb:	mov    DWORD PTR [eax+0xc],edi
1000bbfe:	mov    esi,eax
1000bc00:	jmp    0x1000bc04
1000bc02:	xor    esi,esi
1000bc04:	mov    DWORD PTR [esp+0x34],esi
1000bc08:	push   edi
1000bc09:	lea    ecx,[esp+0x2c]
1000bc0d:	push   ecx
1000bc0e:	mov    DWORD PTR [esp+0x48],edi
1000bc12:	lea    edx,[esp+0x24]
1000bc16:	push   edx
1000bc17:	lea    eax,[esp+0x2c]
1000bc1b:	push   eax
1000bc1c:	mov    DWORD PTR [esp+0x38],0xc
1000bc24:	mov    DWORD PTR [esp+0x40],0x1
1000bc2c:	mov    DWORD PTR [esp+0x3c],edi
1000bc30:	mov    DWORD PTR [esp+0x30],edi
1000bc34:	mov    DWORD PTR [esp+0x2c],edi
1000bc38:	call   DWORD PTR ds:0x1002c15c
1000bc3e:	test   eax,eax
1000bc40:	mov    ebx,DWORD PTR ds:0x1002c07c
1000bc46:	mov    ebp,DWORD PTR ds:0x1002c058
1000bc4c:	je     0x1000bca4
1000bc4e:	mov    edi,DWORD PTR [esi+0x8]
1000bc51:	test   edi,edi
1000bc53:	mov    ecx,DWORD PTR [esp+0x20]
1000bc57:	mov    DWORD PTR [esp+0x14],ecx
1000bc5b:	je     0x1000bc71
1000bc5d:	call   ebx
1000bc5f:	push   edi
1000bc60:	mov    DWORD PTR [esp+0x1c],eax
1000bc64:	call   ebp
1000bc66:	mov    edx,DWORD PTR [esp+0x18]
1000bc6a:	push   edx
1000bc6b:	call   DWORD PTR ds:0x1002c078
1000bc71:	mov    eax,DWORD PTR [esp+0x14]
1000bc75:	mov    DWORD PTR [esi+0x8],eax
1000bc78:	mov    edi,DWORD PTR [esi+0xc]
1000bc7b:	test   edi,edi
1000bc7d:	mov    ecx,DWORD PTR [esp+0x1c]
1000bc81:	mov    DWORD PTR [esp+0x18],ecx
1000bc85:	je     0x1000bc9b
1000bc87:	call   ebx
1000bc89:	push   edi
1000bc8a:	mov    DWORD PTR [esp+0x18],eax
1000bc8e:	call   ebp
1000bc90:	mov    edx,DWORD PTR [esp+0x14]
1000bc94:	push   edx
1000bc95:	call   DWORD PTR ds:0x1002c078
1000bc9b:	mov    eax,DWORD PTR [esp+0x18]
1000bc9f:	mov    DWORD PTR [esi+0xc],eax
1000bca2:	xor    edi,edi
1000bca4:	push   edi
1000bca5:	lea    ecx,[esp+0x2c]
1000bca9:	push   ecx
1000bcaa:	lea    edx,[esp+0x24]
1000bcae:	push   edx
1000bcaf:	lea    eax,[esp+0x2c]
1000bcb3:	push   eax
1000bcb4:	call   DWORD PTR ds:0x1002c15c
1000bcba:	test   eax,eax
1000bcbc:	je     0x1000bd12
1000bcbe:	mov    edi,DWORD PTR [esi]
1000bcc0:	test   edi,edi
1000bcc2:	mov    ecx,DWORD PTR [esp+0x20]
1000bcc6:	mov    DWORD PTR [esp+0x18],ecx
1000bcca:	je     0x1000bce0
1000bccc:	call   ebx
1000bcce:	push   edi
1000bccf:	mov    DWORD PTR [esp+0x18],eax
1000bcd3:	call   ebp
1000bcd5:	mov    edx,DWORD PTR [esp+0x14]
1000bcd9:	push   edx
1000bcda:	call   DWORD PTR ds:0x1002c078
1000bce0:	mov    eax,DWORD PTR [esp+0x18]
1000bce4:	mov    DWORD PTR [esi],eax
1000bce6:	mov    edi,DWORD PTR [esi+0x4]
1000bce9:	test   edi,edi
1000bceb:	mov    ecx,DWORD PTR [esp+0x1c]
1000bcef:	mov    DWORD PTR [esp+0x18],ecx
1000bcf3:	je     0x1000bd09
1000bcf5:	call   ebx
1000bcf7:	push   edi
1000bcf8:	mov    DWORD PTR [esp+0x18],eax
1000bcfc:	call   ebp
1000bcfe:	mov    edx,DWORD PTR [esp+0x14]
1000bd02:	push   edx
1000bd03:	call   DWORD PTR ds:0x1002c078
1000bd09:	mov    eax,DWORD PTR [esp+0x18]
1000bd0d:	mov    DWORD PTR [esi+0x4],eax
1000bd10:	xor    edi,edi
1000bd12:	mov    ecx,DWORD PTR [esp+0x24]
1000bd16:	push   esi
1000bd17:	call   0x1000b8b0
1000bd1c:	add    esp,0x4
1000bd1f:	push   edi
1000bd20:	push   edi
1000bd21:	push   esi
1000bd22:	push   0x1000b7c0
1000bd27:	push   edi
1000bd28:	push   edi
1000bd29:	call   DWORD PTR ds:0x1002c074
1000bd2f:	mov    esi,eax
1000bd31:	cmp    esi,edi
1000bd33:	je     0x1000bd43
1000bd35:	call   ebx
1000bd37:	push   esi
1000bd38:	mov    edi,eax
1000bd3a:	call   ebp
1000bd3c:	push   edi
1000bd3d:	call   DWORD PTR ds:0x1002c078
1000bd43:	mov    eax,DWORD PTR [esp+0x24]
1000bd47:	mov    ecx,DWORD PTR [esp+0x38]
1000bd4b:	mov    DWORD PTR fs:0x0,ecx
1000bd52:	pop    ecx
1000bd53:	pop    edi
1000bd54:	pop    esi
1000bd55:	pop    ebp
1000bd56:	pop    ebx
1000bd57:	add    esp,0x30
1000bd5a:	ret    
1000bd5b:	int3   
1000bd5c:	int3   
1000bd5d:	int3   
1000bd5e:	int3   
1000bd5f:	int3   
1000bd60:	push   esi
1000bd61:	mov    esi,DWORD PTR [eax]
1000bd63:	test   esi,esi
1000bd65:	je     0x1000bd75
1000bd67:	call   0x1000bd80
1000bd6c:	push   esi
1000bd6d:	call   0x10015ad6
1000bd72:	add    esp,0x4
1000bd75:	pop    esi
1000bd76:	ret    
1000bd77:	int3   
1000bd78:	int3   
1000bd79:	int3   
1000bd7a:	int3   
1000bd7b:	int3   
1000bd7c:	int3   
1000bd7d:	int3   
1000bd7e:	int3   
1000bd7f:	int3   
1000bd80:	sub    esp,0x8
1000bd83:	mov    eax,DWORD PTR [esi+0xc]
1000bd86:	test   eax,eax
1000bd88:	push   ebx
1000bd89:	mov    ebx,DWORD PTR ds:0x1002c058
1000bd8f:	push   ebp
1000bd90:	mov    ebp,DWORD PTR ds:0x1002c078
1000bd96:	push   edi
1000bd97:	mov    edi,DWORD PTR ds:0x1002c07c
1000bd9d:	mov    DWORD PTR [esp+0xc],eax
1000bda1:	je     0x1000bdb7
1000bda3:	call   edi
1000bda5:	mov    DWORD PTR [esp+0x10],eax
1000bda9:	mov    eax,DWORD PTR [esp+0xc]
1000bdad:	push   eax
1000bdae:	call   ebx
1000bdb0:	mov    ecx,DWORD PTR [esp+0x10]
1000bdb4:	push   ecx
1000bdb5:	call   ebp
1000bdb7:	mov    DWORD PTR [esi+0xc],0x0
1000bdbe:	mov    eax,DWORD PTR [esi+0x8]
1000bdc1:	test   eax,eax
1000bdc3:	mov    DWORD PTR [esp+0x10],eax
1000bdc7:	je     0x1000bddd
1000bdc9:	call   edi
1000bdcb:	mov    edx,DWORD PTR [esp+0x10]
1000bdcf:	push   edx
1000bdd0:	mov    DWORD PTR [esp+0x10],eax
1000bdd4:	call   ebx
1000bdd6:	mov    eax,DWORD PTR [esp+0xc]
1000bdda:	push   eax
1000bddb:	call   ebp
1000bddd:	mov    DWORD PTR [esi+0x8],0x0
1000bde4:	mov    eax,DWORD PTR [esi+0x4]
1000bde7:	test   eax,eax
1000bde9:	mov    DWORD PTR [esp+0x10],eax
1000bded:	je     0x1000be03
1000bdef:	call   edi
1000bdf1:	mov    ecx,DWORD PTR [esp+0x10]
1000bdf5:	push   ecx
1000bdf6:	mov    DWORD PTR [esp+0x10],eax
1000bdfa:	call   ebx
1000bdfc:	mov    edx,DWORD PTR [esp+0xc]
1000be00:	push   edx
1000be01:	call   ebp
1000be03:	mov    DWORD PTR [esi+0x4],0x0
1000be0a:	mov    eax,DWORD PTR [esi]
1000be0c:	test   eax,eax
1000be0e:	mov    DWORD PTR [esp+0x10],eax
1000be12:	je     0x1000be22
1000be14:	call   edi
1000be16:	mov    edi,eax
1000be18:	mov    eax,DWORD PTR [esp+0x10]
1000be1c:	push   eax
1000be1d:	call   ebx
1000be1f:	push   edi
1000be20:	call   ebp
1000be22:	pop    edi
1000be23:	pop    ebp
1000be24:	mov    DWORD PTR [esi],0x0
1000be2a:	pop    ebx
1000be2b:	add    esp,0x8
1000be2e:	ret    
1000be2f:	int3   
1000be30:	push   esi
1000be31:	mov    esi,ecx
1000be33:	mov    DWORD PTR [esi],0x1004ffac
1000be39:	cmp    DWORD PTR [esi+0x24],0x10
1000be3d:	jb     0x1000be4b
1000be3f:	mov    eax,DWORD PTR [esi+0x10]
1000be42:	push   eax
1000be43:	call   0x10015ad6
1000be48:	add    esp,0x4
1000be4b:	xor    eax,eax
1000be4d:	mov    DWORD PTR [esi+0x24],0xf
1000be54:	mov    DWORD PTR [esi+0x20],eax
1000be57:	mov    BYTE PTR [esi+0x10],al
1000be5a:	mov    ecx,esi
1000be5c:	pop    esi
1000be5d:	jmp    0x1001632c
1000be62:	int3   
1000be63:	int3   
1000be64:	int3   
1000be65:	int3   
1000be66:	int3   
1000be67:	int3   
1000be68:	int3   
1000be69:	int3   
1000be6a:	int3   
1000be6b:	int3   
1000be6c:	int3   
1000be6d:	int3   
1000be6e:	int3   
1000be6f:	int3   
1000be70:	mov    eax,DWORD PTR [esp+0x4]
1000be74:	push   esi
1000be75:	push   eax
1000be76:	mov    esi,ecx
1000be78:	call   0x10001510
1000be7d:	mov    DWORD PTR [esi],0x100571fc
1000be83:	mov    eax,esi
1000be85:	pop    esi
1000be86:	ret    0x4
1000be89:	int3   
1000be8a:	int3   
1000be8b:	int3   
1000be8c:	int3   
1000be8d:	int3   
1000be8e:	int3   
1000be8f:	int3   
1000be90:	push   esi
1000be91:	mov    esi,ecx
1000be93:	mov    DWORD PTR [esi],0x1004ffac
1000be99:	cmp    DWORD PTR [esi+0x24],0x10
1000be9d:	jb     0x1000beab
1000be9f:	mov    eax,DWORD PTR [esi+0x10]
1000bea2:	push   eax
1000bea3:	call   0x10015ad6
1000bea8:	add    esp,0x4
1000beab:	xor    eax,eax
1000bead:	mov    DWORD PTR [esi+0x24],0xf
1000beb4:	mov    DWORD PTR [esi+0x20],eax
1000beb7:	mov    ecx,esi
1000beb9:	mov    BYTE PTR [esi+0x10],al
1000bebc:	call   0x1001632c
1000bec1:	test   BYTE PTR [esp+0x8],0x1
1000bec6:	je     0x1000bed1
1000bec8:	push   esi
1000bec9:	call   0x10015ad6
1000bece:	add    esp,0x4
1000bed1:	mov    eax,esi
1000bed3:	pop    esi
1000bed4:	ret    0x4
1000bed7:	int3   
1000bed8:	int3   
1000bed9:	int3   
1000beda:	int3   
1000bedb:	int3   
1000bedc:	int3   
1000bedd:	int3   
1000bede:	int3   
1000bedf:	int3   
1000bee0:	push   0xffffffff
1000bee2:	push   0x1002afb8
1000bee7:	mov    eax,fs:0x0
1000beed:	push   eax
1000beee:	sub    esp,0x1c
1000bef1:	push   esi
1000bef2:	mov    eax,ds:0x10064694
1000bef7:	xor    eax,esp
1000bef9:	push   eax
1000befa:	lea    eax,[esp+0x24]
1000befe:	mov    fs:0x0,eax
1000bf04:	push   0x100571a8
1000bf09:	push   0xd
1000bf0b:	push   0x100571e8
1000bf10:	call   0x10003340
1000bf15:	mov    ecx,eax
1000bf17:	add    esp,0xc
1000bf1a:	mov    DWORD PTR [esp+0x20],0xf
1000bf22:	mov    DWORD PTR [esp+0x1c],0x0
1000bf2a:	mov    BYTE PTR [esp+0xc],0x0
1000bf2f:	lea    esi,[ecx+0x1]
1000bf32:	mov    dl,BYTE PTR [ecx]
1000bf34:	add    ecx,0x1
1000bf37:	test   dl,dl
1000bf39:	jne    0x1000bf32
1000bf3b:	sub    ecx,esi
1000bf3d:	push   ecx
1000bf3e:	push   eax
1000bf3f:	lea    ecx,[esp+0x10]
1000bf43:	call   0x10003900
1000bf48:	lea    eax,[esp+0x8]
1000bf4c:	push   eax
1000bf4d:	push   edi
1000bf4e:	mov    DWORD PTR [esp+0x34],0x0
1000bf56:	call   0x10001490
1000bf5b:	cmp    DWORD PTR [esp+0x20],0x10
1000bf60:	jb     0x1000bf6f
1000bf62:	mov    ecx,DWORD PTR [esp+0xc]
1000bf66:	push   ecx
1000bf67:	call   0x10015ad6
1000bf6c:	add    esp,0x4
1000bf6f:	mov    eax,edi
1000bf71:	mov    DWORD PTR [edi],0x100571fc
1000bf77:	mov    ecx,DWORD PTR [esp+0x24]
1000bf7b:	mov    DWORD PTR fs:0x0,ecx
1000bf82:	pop    ecx
1000bf83:	pop    esi
1000bf84:	add    esp,0x28
1000bf87:	ret    
1000bf88:	int3   
1000bf89:	int3   
1000bf8a:	int3   
1000bf8b:	int3   
1000bf8c:	int3   
1000bf8d:	int3   
1000bf8e:	int3   
1000bf8f:	int3   
1000bf90:	mov    edx,DWORD PTR [esp+0x4]
1000bf94:	mov    eax,ecx
1000bf96:	mov    ecx,DWORD PTR [esp+0x8]
1000bf9a:	mov    DWORD PTR [eax],0x0
1000bfa0:	mov    DWORD PTR [eax+0x4],ecx
1000bfa3:	mov    DWORD PTR [eax+0x8],edx
1000bfa6:	ret    0x8
1000bfa9:	int3   
1000bfaa:	int3   
1000bfab:	int3   
1000bfac:	int3   
1000bfad:	int3   
1000bfae:	int3   
1000bfaf:	int3   
1000bfb0:	push   ebp
1000bfb1:	mov    ebp,esp
1000bfb3:	and    esp,0xfffffff8
1000bfb6:	push   0xffffffff
1000bfb8:	push   0x1002b5d8
1000bfbd:	mov    eax,fs:0x0
1000bfc3:	push   eax
1000bfc4:	sub    esp,0x38
1000bfc7:	push   ebx
1000bfc8:	push   esi
1000bfc9:	push   edi
1000bfca:	mov    eax,ds:0x10064694
1000bfcf:	xor    eax,esp
1000bfd1:	push   eax
1000bfd2:	lea    eax,[esp+0x48]
1000bfd6:	mov    fs:0x0,eax
1000bfdc:	mov    edi,DWORD PTR [ebp+0x8]
1000bfdf:	mov    esi,ecx
1000bfe1:	xor    eax,eax
1000bfe3:	mov    DWORD PTR [esp+0x14],eax
1000bfe7:	mov    ecx,DWORD PTR [esi]
1000bfe9:	mov    DWORD PTR [esp+0x14],esi
1000bfed:	mov    DWORD PTR [esp+0x18],ecx
1000bff1:	mov    ecx,esi
1000bff3:	mov    DWORD PTR [esp+0x50],eax
1000bff7:	call   0x1000c060
1000bffc:	mov    ecx,DWORD PTR [esi]
1000bffe:	mov    edx,DWORD PTR [esi+0x4]
1000c001:	mov    ebx,eax
1000c003:	sub    edx,ecx
1000c005:	cmp    ebx,edx
1000c007:	jbe    0x1000c01f
1000c009:	lea    edi,[esp+0x1c]
1000c00d:	call   0x1000bee0
1000c012:	push   0x10058be8
1000c017:	mov    eax,edi
1000c019:	push   eax
1000c01a:	call   0x100161ce
1000c01f:	mov    eax,DWORD PTR [esi+0x8]
1000c022:	add    eax,ecx
1000c024:	push   ebx
1000c025:	mov    DWORD PTR [edi+0x18],0xf
1000c02c:	mov    DWORD PTR [edi+0x14],0x0
1000c033:	push   eax
1000c034:	mov    ecx,edi
1000c036:	mov    BYTE PTR [edi+0x4],0x0
1000c03a:	call   0x10003900
1000c03f:	add    DWORD PTR [esi],ebx
1000c041:	mov    eax,edi
1000c043:	mov    ecx,DWORD PTR [esp+0x48]
1000c047:	mov    DWORD PTR fs:0x0,ecx
1000c04e:	pop    ecx
1000c04f:	pop    edi
1000c050:	pop    esi
1000c051:	pop    ebx
1000c052:	mov    esp,ebp
1000c054:	pop    ebp
1000c055:	ret    0x4
1000c058:	int3   
1000c059:	int3   
1000c05a:	int3   
1000c05b:	int3   
1000c05c:	int3   
1000c05d:	int3   
1000c05e:	int3   
1000c05f:	int3   
1000c060:	push   ebp
1000c061:	mov    ebp,esp
1000c063:	and    esp,0xfffffff8
1000c066:	push   0xffffffff
1000c068:	push   0x1002b468
1000c06d:	mov    eax,fs:0x0
1000c073:	push   eax
1000c074:	sub    esp,0x3c
1000c077:	push   esi
1000c078:	push   edi
1000c079:	mov    eax,ds:0x10064694
1000c07e:	xor    eax,esp
1000c080:	push   eax
1000c081:	lea    eax,[esp+0x48]
1000c085:	mov    fs:0x0,eax
1000c08b:	mov    eax,DWORD PTR [ecx]
1000c08d:	mov    DWORD PTR [esp+0x14],ecx
1000c091:	mov    DWORD PTR [esp+0x18],eax
1000c095:	mov    DWORD PTR [esp+0x50],0x0
1000c09d:	mov    edi,DWORD PTR [ecx+0x4]
1000c0a0:	cmp    eax,edi
1000c0a2:	jb     0x1000c0ba
1000c0a4:	lea    edi,[esp+0x1c]
1000c0a8:	call   0x1000bee0
1000c0ad:	push   0x10058be8
1000c0b2:	mov    eax,edi
1000c0b4:	push   eax
1000c0b5:	call   0x100161ce
1000c0ba:	mov    esi,DWORD PTR [ecx+0x8]
1000c0bd:	mov    dl,BYTE PTR [esi+eax*1]
1000c0c0:	add    eax,0x1
1000c0c3:	cmp    eax,edi
1000c0c5:	mov    BYTE PTR [esp+0x10],dl
1000c0c9:	mov    DWORD PTR [ecx],eax
1000c0cb:	jb     0x1000c0e3
1000c0cd:	lea    edi,[esp+0x1c]
1000c0d1:	call   0x1000bee0
1000c0d6:	push   0x10058be8
1000c0db:	mov    eax,edi
1000c0dd:	push   eax
1000c0de:	call   0x100161ce
1000c0e3:	mov    dl,BYTE PTR [eax+esi*1]
1000c0e6:	add    eax,0x1
1000c0e9:	cmp    eax,edi
1000c0eb:	mov    BYTE PTR [esp+0x11],dl
1000c0ef:	mov    DWORD PTR [ecx],eax
1000c0f1:	jb     0x1000c109
1000c0f3:	lea    edi,[esp+0x1c]
1000c0f7:	call   0x1000bee0
1000c0fc:	push   0x10058be8
1000c101:	mov    eax,edi
1000c103:	push   eax
1000c104:	call   0x100161ce
1000c109:	mov    dl,BYTE PTR [eax+esi*1]
1000c10c:	add    eax,0x1
1000c10f:	cmp    eax,edi
1000c111:	mov    BYTE PTR [esp+0x12],dl
1000c115:	mov    DWORD PTR [ecx],eax
1000c117:	jb     0x1000c12f
1000c119:	lea    edi,[esp+0x1c]
1000c11d:	call   0x1000bee0
1000c122:	push   0x10058be8
1000c127:	mov    eax,edi
1000c129:	push   eax
1000c12a:	call   0x100161ce
1000c12f:	mov    dl,BYTE PTR [eax+esi*1]
1000c132:	add    eax,0x1
1000c135:	mov    BYTE PTR [esp+0x13],dl
1000c139:	mov    DWORD PTR [ecx],eax
1000c13b:	mov    eax,DWORD PTR [esp+0x10]
1000c13f:	mov    ecx,DWORD PTR [esp+0x48]
1000c143:	mov    DWORD PTR fs:0x0,ecx
1000c14a:	pop    ecx
1000c14b:	pop    edi
1000c14c:	pop    esi
1000c14d:	mov    esp,ebp
1000c14f:	pop    ebp
1000c150:	ret    
1000c151:	int3   
1000c152:	int3   
1000c153:	int3   
1000c154:	int3   
1000c155:	int3   
1000c156:	int3   
1000c157:	int3   
1000c158:	int3   
1000c159:	int3   
1000c15a:	int3   
1000c15b:	int3   
1000c15c:	int3   
1000c15d:	int3   
1000c15e:	int3   
1000c15f:	int3   
1000c160:	push   ebp
1000c161:	mov    ebp,esp
1000c163:	and    esp,0xfffffff8
1000c166:	push   0xffffffff
1000c168:	push   0x1002b5a8
1000c16d:	mov    eax,fs:0x0
1000c173:	push   eax
1000c174:	sub    esp,0x30
1000c177:	push   ebx
1000c178:	push   esi
1000c179:	push   edi
1000c17a:	mov    eax,ds:0x10064694
1000c17f:	xor    eax,esp
1000c181:	push   eax
1000c182:	lea    eax,[esp+0x40]
1000c186:	mov    fs:0x0,eax
1000c18c:	mov    esi,ecx
1000c18e:	mov    edi,DWORD PTR [ebp+0xc]
1000c191:	push   edi
1000c192:	mov    DWORD PTR [esp+0x14],0x0
1000c19a:	call   0x100159f5
1000c19f:	mov    ebx,eax
1000c1a1:	add    esp,0x4
1000c1a4:	mov    DWORD PTR [esp+0x10],ebx
1000c1a8:	mov    DWORD PTR [esp+0x48],0x0
1000c1b0:	mov    eax,DWORD PTR [esi]
1000c1b2:	lea    ecx,[eax+edi*1]
1000c1b5:	cmp    ecx,DWORD PTR [esi+0x4]
1000c1b8:	jbe    0x1000c1d0
1000c1ba:	lea    edi,[esp+0x14]
1000c1be:	call   0x1000bee0
1000c1c3:	push   0x10058be8
1000c1c8:	mov    edx,edi
1000c1ca:	push   edx
1000c1cb:	call   0x100161ce
1000c1d0:	mov    ecx,DWORD PTR [esi+0x8]
1000c1d3:	push   edi
1000c1d4:	add    ecx,eax
1000c1d6:	push   ecx
1000c1d7:	push   ebx
1000c1d8:	call   0x100167d0
1000c1dd:	add    DWORD PTR [esi],edi
1000c1df:	mov    esi,DWORD PTR [ebp+0x8]
1000c1e2:	add    esp,0xc
1000c1e5:	push   edi
1000c1e6:	mov    DWORD PTR [esi+0x18],0xf
1000c1ed:	mov    DWORD PTR [esi+0x14],0x0
1000c1f4:	push   ebx
1000c1f5:	mov    ecx,esi
1000c1f7:	mov    BYTE PTR [esi+0x4],0x0
1000c1fb:	call   0x10003900
1000c200:	push   ebx
1000c201:	call   0x10015ad6
1000c206:	add    esp,0x4
1000c209:	mov    eax,esi
1000c20b:	mov    ecx,DWORD PTR [esp+0x40]
1000c20f:	mov    DWORD PTR fs:0x0,ecx
1000c216:	pop    ecx
1000c217:	pop    edi
1000c218:	pop    esi
1000c219:	pop    ebx
1000c21a:	mov    esp,ebp
1000c21c:	pop    ebp
1000c21d:	ret    0x8
1000c220:	mov    eax,DWORD PTR [ecx+0x4]
1000c223:	sub    eax,DWORD PTR [ecx]
1000c225:	ret    
1000c226:	int3   
1000c227:	int3   
1000c228:	int3   
1000c229:	int3   
1000c22a:	int3   
1000c22b:	int3   
1000c22c:	int3   
1000c22d:	int3   
1000c22e:	int3   
1000c22f:	int3   
1000c230:	mov    eax,DWORD PTR [ecx]
1000c232:	test   eax,eax
1000c234:	je     0x1000c23b
1000c236:	mov    ecx,DWORD PTR [ecx+0x4]
1000c239:	mov    DWORD PTR [eax],ecx
1000c23b:	ret    
1000c23c:	int3   
1000c23d:	int3   
1000c23e:	int3   
1000c23f:	int3   
1000c240:	push   ebp
1000c241:	mov    ebp,esp
1000c243:	push   0xffffffff
1000c245:	push   0x1002b438
1000c24a:	mov    eax,fs:0x0
1000c250:	push   eax
1000c251:	sub    esp,0x10
1000c254:	push   ebx
1000c255:	push   esi
1000c256:	push   edi
1000c257:	mov    eax,ds:0x10064694
1000c25c:	xor    eax,ebp
1000c25e:	push   eax
1000c25f:	lea    eax,[ebp-0xc]
1000c262:	mov    fs:0x0,eax
1000c268:	mov    DWORD PTR [ebp-0x10],esp
1000c26b:	mov    DWORD PTR [ebp-0x4],0x0
1000c272:	mov    al,0x1
1000c274:	mov    BYTE PTR [ebp-0x1c],al
1000c277:	mov    DWORD PTR [ebp-0x18],0xffffffff
1000c27e:	mov    BYTE PTR [ebp-0x14],al
1000c281:	push   0x4
1000c283:	lea    ecx,[ebp+0x8]
1000c286:	push   ecx
1000c287:	push   0x4
1000c289:	mov    edx,ecx
1000c28b:	mov    BYTE PTR [ebp-0x4],al
1000c28e:	mov    eax,DWORD PTR [ebp+0x8]
1000c291:	push   edx
1000c292:	push   0x7
1000c294:	lea    ecx,[ebp-0x1c]
1000c297:	mov    DWORD PTR [ebp+0x8],eax
1000c29a:	call   0x100073f0
1000c29f:	mov    edi,DWORD PTR [ebp-0x18]
1000c2a2:	test   edi,edi
1000c2a4:	je     0x1000c2bc
1000c2a6:	call   DWORD PTR ds:0x1002c07c
1000c2ac:	push   edi
1000c2ad:	mov    esi,eax
1000c2af:	call   DWORD PTR ds:0x1002c058
1000c2b5:	push   esi
1000c2b6:	call   DWORD PTR ds:0x1002c078
1000c2bc:	mov    ecx,DWORD PTR [ebp-0xc]
1000c2bf:	mov    DWORD PTR fs:0x0,ecx
1000c2c6:	pop    ecx
1000c2c7:	pop    edi
1000c2c8:	pop    esi
1000c2c9:	pop    ebx
1000c2ca:	mov    esp,ebp
1000c2cc:	pop    ebp
1000c2cd:	ret    
1000c2ce:	mov    eax,0x1000c2bc
1000c2d3:	ret    
1000c2d4:	int3   
1000c2d5:	int3   
1000c2d6:	int3   
1000c2d7:	int3   
1000c2d8:	int3   
1000c2d9:	int3   
1000c2da:	int3   
1000c2db:	int3   
1000c2dc:	int3   
1000c2dd:	int3   
1000c2de:	int3   
1000c2df:	int3   
1000c2e0:	mov    ecx,DWORD PTR ds:0x10066e30
1000c2e6:	mov    eax,ds:0x10066e28
1000c2eb:	mov    edx,DWORD PTR ds:0x10066e24
1000c2f1:	push   esi
1000c2f2:	movzx  esi,WORD PTR ds:0x10066e2c
1000c2f9:	push   edi
1000c2fa:	xor    edi,edi
1000c2fc:	cmp    ecx,0x1
1000c2ff:	jne    0x1000c3a4
1000c305:	cmp    edx,0x4
1000c308:	jne    0x1000c462
1000c30e:	cmp    eax,0xa
1000c311:	jae    0x1000c34f
1000c313:	cmp    esi,0x3b6
1000c319:	jne    0x1000c322
1000c31b:	mov    edi,ecx
1000c31d:	mov    eax,edi
1000c31f:	pop    edi
1000c320:	pop    esi
1000c321:	ret    
1000c322:	lea    ecx,[esi-0x3b7]
1000c328:	cmp    ecx,0x81
1000c32e:	ja     0x1000c33a
1000c330:	mov    edi,0x2
1000c335:	mov    eax,edi
1000c337:	pop    edi
1000c338:	pop    esi
1000c339:	ret    
1000c33a:	cmp    esi,0x438
1000c340:	jbe    0x1000c34c
1000c342:	mov    edi,0x3
1000c347:	mov    eax,edi
1000c349:	pop    edi
1000c34a:	pop    esi
1000c34b:	ret    
1000c34c:	cmp    eax,0xa
1000c34f:	jne    0x1000c391
1000c351:	cmp    esi,0x7ce
1000c357:	jne    0x1000c363
1000c359:	mov    edi,0x4
1000c35e:	mov    eax,edi
1000c360:	pop    edi
1000c361:	pop    esi
1000c362:	ret    
1000c363:	lea    edx,[esi-0x7cf]
1000c369:	cmp    edx,0xb7
1000c36f:	ja     0x1000c37b
1000c371:	mov    edi,0x5
1000c376:	mov    eax,edi
1000c378:	pop    edi
1000c379:	pop    esi
1000c37a:	ret    
1000c37b:	cmp    esi,0x887
1000c381:	jb     0x1000c462
1000c387:	mov    edi,0x6
1000c38c:	mov    eax,edi
1000c38e:	pop    edi
1000c38f:	pop    esi
1000c390:	ret    
1000c391:	cmp    eax,0x5a
1000c394:	jne    0x1000c462
1000c39a:	mov    edi,0x7
1000c39f:	mov    eax,edi
1000c3a1:	pop    edi
1000c3a2:	pop    esi
1000c3a3:	ret    
1000c3a4:	cmp    ecx,0x2
1000c3a7:	jne    0x1000c458
1000c3ad:	cmp    edx,0x3
1000c3b0:	jne    0x1000c3c5
1000c3b2:	cmp    eax,0x33
1000c3b5:	jne    0x1000c462
1000c3bb:	mov    edi,0x65
1000c3c0:	mov    eax,edi
1000c3c2:	pop    edi
1000c3c3:	pop    esi
1000c3c4:	ret    
1000c3c5:	cmp    edx,0x4
1000c3c8:	jne    0x1000c3dc
1000c3ca:	test   eax,eax
1000c3cc:	jne    0x1000c462
1000c3d2:	mov    edi,0x66
1000c3d7:	mov    eax,edi
1000c3d9:	pop    edi
1000c3da:	pop    esi
1000c3db:	ret    
1000c3dc:	cmp    edx,0x5
1000c3df:	jne    0x1000c40d
1000c3e1:	test   eax,eax
1000c3e3:	jne    0x1000c3ef
1000c3e5:	mov    edi,0x67
1000c3ea:	mov    eax,edi
1000c3ec:	pop    edi
1000c3ed:	pop    esi
1000c3ee:	ret    
1000c3ef:	cmp    eax,0x1
1000c3f2:	jne    0x1000c3fe
1000c3f4:	mov    edi,0x68
1000c3f9:	mov    eax,edi
1000c3fb:	pop    edi
1000c3fc:	pop    esi
1000c3fd:	ret    
1000c3fe:	cmp    eax,0x2
1000c401:	jne    0x1000c462
1000c403:	mov    edi,0x69
1000c408:	mov    eax,edi
1000c40a:	pop    edi
1000c40b:	pop    esi
1000c40c:	ret    
1000c40d:	cmp    edx,0x6
1000c410:	jne    0x1000c462
1000c412:	test   eax,eax
1000c414:	jne    0x1000c423
1000c416:	lea    edi,[edx+0x64]
1000c419:	call   0x1000c470
1000c41e:	mov    eax,edi
1000c420:	pop    edi
1000c421:	pop    esi
1000c422:	ret    
1000c423:	cmp    eax,0x1
1000c426:	jne    0x1000c43d
1000c428:	cmp    BYTE PTR ds:0x10066f3a,al
1000c42e:	jne    0x1000c462
1000c430:	lea    edi,[eax+0x6a]
1000c433:	call   0x1000c470
1000c438:	mov    eax,edi
1000c43a:	pop    edi
1000c43b:	pop    esi
1000c43c:	ret    
1000c43d:	cmp    eax,0x2
1000c440:	jne    0x1000c462
1000c442:	cmp    BYTE PTR ds:0x10066f3a,0x1
1000c449:	jne    0x1000c462
1000c44b:	lea    edi,[eax+0x6a]
1000c44e:	call   0x1000c470
1000c453:	mov    eax,edi
1000c455:	pop    edi
1000c456:	pop    esi
1000c457:	ret    
1000c458:	cmp    ecx,0x3
1000c45b:	jne    0x1000c462
1000c45d:	mov    edi,0xc9
1000c462:	mov    eax,edi
1000c464:	pop    edi
1000c465:	pop    esi
1000c466:	ret    
1000c467:	int3   
1000c468:	int3   
1000c469:	int3   
1000c46a:	int3   
1000c46b:	int3   
1000c46c:	int3   
1000c46d:	int3   
1000c46e:	int3   
1000c46f:	int3   
1000c470:	push   ebp
1000c471:	mov    ebp,esp
1000c473:	and    esp,0xfffffff8
1000c476:	push   ecx
1000c477:	mov    eax,ds:0x10066e1c
1000c47c:	test   eax,eax
1000c47e:	push   esi
1000c47f:	jne    0x1000c4d6
1000c481:	push   0x10057204
1000c486:	push   0xc
1000c488:	push   0x10057240
1000c48d:	call   0x10003540
1000c492:	add    esp,0xc
1000c495:	push   eax
1000c496:	call   DWORD PTR ds:0x1002c098
1000c49c:	mov    esi,eax
1000c49e:	test   esi,esi
1000c4a0:	je     0x1000c4d1
1000c4a2:	push   0x1005725c
1000c4a7:	push   0xe
1000c4a9:	push   0x10057298
1000c4ae:	call   0x10003340
1000c4b3:	add    esp,0xc
1000c4b6:	push   eax
1000c4b7:	push   esi
1000c4b8:	call   DWORD PTR ds:0x1002c044
1000c4be:	test   eax,eax
1000c4c0:	je     0x1000c4d1
1000c4c2:	push   0x10066e1c
1000c4c7:	push   0x0
1000c4c9:	push   0x0
1000c4cb:	push   0x0
1000c4cd:	push   0x6
1000c4cf:	call   eax
1000c4d1:	mov    eax,ds:0x10066e1c
1000c4d6:	pop    esi
1000c4d7:	mov    esp,ebp
1000c4d9:	pop    ebp
1000c4da:	ret    
1000c4db:	int3   
1000c4dc:	int3   
1000c4dd:	int3   
1000c4de:	int3   
1000c4df:	int3   
1000c4e0:	push   0xffffffff
1000c4e2:	push   0x1002a738
1000c4e7:	mov    eax,fs:0x0
1000c4ed:	push   eax
1000c4ee:	push   ebx
1000c4ef:	push   esi
1000c4f0:	push   edi
1000c4f1:	mov    eax,ds:0x10064694
1000c4f6:	xor    eax,esp
1000c4f8:	push   eax
1000c4f9:	lea    eax,[esp+0x10]
1000c4fd:	mov    fs:0x0,eax
1000c503:	mov    esi,ecx
1000c505:	mov    edi,DWORD PTR [esp+0x20]
1000c509:	mov    DWORD PTR [edi],0x0
1000c50f:	mov    DWORD PTR [esp+0x18],0x0
1000c517:	mov    eax,DWORD PTR [esi+0x14]
1000c51a:	mov    DWORD PTR [edi+0x4],eax
1000c51d:	mov    eax,DWORD PTR [esi+0x14]
1000c520:	push   eax
1000c521:	call   0x100159f5
1000c526:	mov    ebx,eax
1000c528:	mov    eax,DWORD PTR [edi]
1000c52a:	add    esp,0x4
1000c52d:	cmp    ebx,eax
1000c52f:	je     0x1000c53a
1000c531:	push   eax
1000c532:	call   0x10015ad6
1000c537:	add    esp,0x4
1000c53a:	mov    DWORD PTR [edi],ebx
1000c53c:	cmp    DWORD PTR [esi+0x18],0x10
1000c540:	mov    eax,DWORD PTR [esi+0x14]
1000c543:	jb     0x1000c54a
1000c545:	mov    esi,DWORD PTR [esi+0x4]
1000c548:	jmp    0x1000c54d
1000c54a:	add    esi,0x4
1000c54d:	push   eax
1000c54e:	push   esi
1000c54f:	push   ebx
1000c550:	call   0x100167d0
1000c555:	add    esp,0xc
1000c558:	mov    eax,edi
1000c55a:	mov    ecx,DWORD PTR [esp+0x10]
1000c55e:	mov    DWORD PTR fs:0x0,ecx
1000c565:	pop    ecx
1000c566:	pop    edi
1000c567:	pop    esi
1000c568:	pop    ebx
1000c569:	add    esp,0xc
1000c56c:	ret    0x4
1000c56f:	int3   
1000c570:	sub    esp,0x14
1000c573:	mov    eax,DWORD PTR [eax]
1000c575:	mov    ecx,DWORD PTR [eax+0xa]
1000c578:	imul   ecx,ecx,0xd
1000c57b:	add    ecx,DWORD PTR [eax+0x6]
1000c57e:	push   ebx
1000c57f:	push   ebp
1000c580:	lea    ebp,[ecx+eax*1+0x12]
1000c584:	mov    eax,DWORD PTR [eax+0xe]
1000c587:	test   eax,eax
1000c589:	push   esi
1000c58a:	push   edi
1000c58b:	mov    DWORD PTR [esp+0x10],0x0
1000c593:	mov    DWORD PTR [esp+0x20],eax
1000c597:	je     0x1000c619
1000c59d:	mov    eax,DWORD PTR [esp+0x28]
1000c5a1:	mov    edx,DWORD PTR [eax+0x14]
1000c5a4:	mov    DWORD PTR [esp+0x14],edx
1000c5a8:	mov    edx,DWORD PTR [eax+0x18]
1000c5ab:	mov    DWORD PTR [esp+0x1c],edx
1000c5af:	nop
1000c5b0:	lea    ebx,[ebp+0x6]
1000c5b3:	mov    eax,ebx
1000c5b5:	lea    edx,[eax+0x1]
1000c5b8:	mov    cl,BYTE PTR [eax]
1000c5ba:	add    eax,0x1
1000c5bd:	test   cl,cl
1000c5bf:	jne    0x1000c5b8
1000c5c1:	mov    esi,DWORD PTR [esp+0x14]
1000c5c5:	sub    eax,edx
1000c5c7:	mov    edi,eax
1000c5c9:	cmp    esi,edi
1000c5cb:	mov    eax,esi
1000c5cd:	mov    ecx,esi
1000c5cf:	jb     0x1000c5d3
1000c5d1:	mov    ecx,edi
1000c5d3:	cmp    DWORD PTR [esp+0x1c],0x10
1000c5d8:	mov    eax,DWORD PTR [esp+0x28]
1000c5dc:	jb     0x1000c5e3
1000c5de:	mov    eax,DWORD PTR [eax+0x4]
1000c5e1:	jmp    0x1000c5e6
1000c5e3:	add    eax,0x4
1000c5e6:	push   ecx
1000c5e7:	push   ebx
1000c5e8:	push   eax
1000c5e9:	call   0x100012b0
1000c5ee:	add    esp,0xc
1000c5f1:	test   eax,eax
1000c5f3:	jne    0x1000c602
1000c5f5:	cmp    esi,edi
1000c5f7:	jb     0x1000c602
1000c5f9:	cmp    esi,edi
1000c5fb:	setne  al
1000c5fe:	test   eax,eax
1000c600:	je     0x1000c626
1000c602:	movzx  ecx,WORD PTR [ebp+0x0]
1000c606:	mov    eax,DWORD PTR [esp+0x10]
1000c60a:	add    eax,0x1
1000c60d:	add    ebp,ecx
1000c60f:	cmp    eax,DWORD PTR [esp+0x20]
1000c613:	mov    DWORD PTR [esp+0x10],eax
1000c617:	jne    0x1000c5b0
1000c619:	pop    edi
1000c61a:	pop    esi
1000c61b:	pop    ebp
1000c61c:	or     eax,0xffffffff
1000c61f:	pop    ebx
1000c620:	add    esp,0x14
1000c623:	ret    0x4
1000c626:	mov    eax,DWORD PTR [ebp+0x2]
1000c629:	pop    edi
1000c62a:	pop    esi
1000c62b:	pop    ebp
1000c62c:	pop    ebx
1000c62d:	add    esp,0x14
1000c630:	ret    0x4
1000c633:	int3   
1000c634:	int3   
1000c635:	int3   
1000c636:	int3   
1000c637:	int3   
1000c638:	int3   
1000c639:	int3   
1000c63a:	int3   
1000c63b:	int3   
1000c63c:	int3   
1000c63d:	int3   
1000c63e:	int3   
1000c63f:	int3   
1000c640:	mov    eax,DWORD PTR [eax]
1000c642:	add    eax,0x12
1000c645:	ret    
1000c646:	int3   
1000c647:	int3   
1000c648:	int3   
1000c649:	int3   
1000c64a:	int3   
1000c64b:	int3   
1000c64c:	int3   
1000c64d:	int3   
1000c64e:	int3   
1000c64f:	int3   
1000c650:	mov    ecx,DWORD PTR [eax]
1000c652:	mov    eax,DWORD PTR [ecx+0x6]
1000c655:	ret    
1000c656:	int3   
1000c657:	int3   
1000c658:	int3   
1000c659:	int3   
1000c65a:	int3   
1000c65b:	int3   
1000c65c:	int3   
1000c65d:	int3   
1000c65e:	int3   
1000c65f:	int3   
1000c660:	push   ebp
1000c661:	push   esi
1000c662:	mov    esi,DWORD PTR [eax]
1000c664:	mov    ecx,DWORD PTR [esi+0x6]
1000c667:	push   edi
1000c668:	lea    edi,[esi+0x12]
1000c66b:	xor    ebp,ebp
1000c66d:	add    ecx,edi
1000c66f:	cmp    DWORD PTR [esi+0xa],ebp
1000c672:	je     0x1000c6a6
1000c674:	push   ebx
1000c675:	cmp    BYTE PTR [ecx+0x4],0x0
1000c679:	jne    0x1000c689
1000c67b:	mov    edx,DWORD PTR [ecx+0x5]
1000c67e:	add    edx,DWORD PTR [esp+0x14]
1000c682:	mov    eax,DWORD PTR [ecx]
1000c684:	mov    DWORD PTR [edi+eax*1],edx
1000c687:	jmp    0x1000c69a
1000c689:	mov    eax,DWORD PTR [ecx+0x5]
1000c68c:	add    eax,DWORD PTR [esp+0x14]
1000c690:	mov    ebx,DWORD PTR [ecx]
1000c692:	cdq    
1000c693:	mov    DWORD PTR [edi+ebx*1],eax
1000c696:	mov    DWORD PTR [edi+ebx*1+0x4],edx
1000c69a:	add    ebp,0x1
1000c69d:	add    ecx,0xd
1000c6a0:	cmp    ebp,DWORD PTR [esi+0xa]
1000c6a3:	jne    0x1000c675
1000c6a5:	pop    ebx
1000c6a6:	pop    edi
1000c6a7:	pop    esi
1000c6a8:	pop    ebp
1000c6a9:	ret    0x4
1000c6ac:	int3   
1000c6ad:	int3   
1000c6ae:	int3   
1000c6af:	int3   
1000c6b0:	sub    esp,0x8
1000c6b3:	push   edi
1000c6b4:	mov    edi,DWORD PTR ds:0x1002c168
1000c6ba:	lea    eax,[esp+0x4]
1000c6be:	push   eax
1000c6bf:	mov    eax,ds:0x10065af8
1000c6c4:	lea    ecx,[eax+eax*2]
1000c6c7:	push   0x40
1000c6c9:	add    ecx,ecx
1000c6cb:	push   ecx
1000c6cc:	push   esi
1000c6cd:	mov    DWORD PTR [esp+0x14],0x0
1000c6d5:	call   edi
1000c6d7:	mov    edx,DWORD PTR [esp+0x14]
1000c6db:	sub    edx,DWORD PTR [esp+0x1c]
1000c6df:	mov    ecx,DWORD PTR [esp+0x10]
1000c6e3:	lea    eax,[esi+0x1]
1000c6e6:	sub    edx,eax
1000c6e8:	lea    edx,[edx+ecx*1-0x4]
1000c6ec:	mov    ecx,DWORD PTR [esp+0x4]
1000c6f0:	mov    BYTE PTR [esi],0xe9
1000c6f3:	mov    DWORD PTR [eax],edx
1000c6f5:	lea    eax,[esp+0x8]
1000c6f9:	push   eax
1000c6fa:	push   ecx
1000c6fb:	push   0x5
1000c6fd:	push   esi
1000c6fe:	mov    DWORD PTR [esp+0x18],0x0
1000c706:	call   edi
1000c708:	pop    edi
1000c709:	add    esp,0x8
1000c70c:	ret    
1000c70d:	int3   
1000c70e:	int3   
1000c70f:	int3   
1000c710:	mov    eax,0x193c
1000c715:	call   0x10016500
1000c71a:	push   ebx
1000c71b:	xor    eax,eax
1000c71d:	push   ebp
1000c71e:	push   esi
1000c71f:	push   edi
1000c720:	mov    DWORD PTR [esp+0x38],eax
1000c724:	mov    DWORD PTR [esp+0x3c],eax
1000c728:	mov    DWORD PTR [esp+0x40],eax
1000c72c:	mov    DWORD PTR [esp+0x30],eax
1000c730:	mov    DWORD PTR [esp+0x34],eax
1000c734:	mov    DWORD PTR [esp+0x44],eax
1000c738:	mov    eax,DWORD PTR [esp+0x1950]
1000c73f:	lea    edx,[esp+0x20]
1000c743:	push   edx
1000c744:	mov    ebx,ecx
1000c746:	mov    ecx,DWORD PTR ds:0x10065afc
1000c74c:	mov    DWORD PTR [esp+0x3c],eax
1000c750:	push   0x64
1000c752:	lea    eax,[esp+0x50]
1000c756:	mov    DWORD PTR [esp+0x48],ecx
1000c75a:	xor    esi,esi
1000c75c:	push   eax
1000c75d:	lea    ecx,[esp+0x34]
1000c761:	push   ecx
1000c762:	mov    DWORD PTR [esp+0x30],esi
1000c766:	mov    DWORD PTR [esp+0x38],esi
1000c76a:	mov    DWORD PTR [esp+0x3c],esi
1000c76e:	mov    DWORD PTR [esp+0x4c],0x1e
1000c776:	call   0x10012520
1000c77b:	add    esp,0x10
1000c77e:	cmp    eax,0x3
1000c781:	jne    0x1000c790
1000c783:	xor    eax,eax
1000c785:	pop    edi
1000c786:	pop    esi
1000c787:	pop    ebp
1000c788:	pop    ebx
1000c789:	add    esp,0x193c
1000c78f:	ret    
1000c790:	xor    edi,edi
1000c792:	xor    ebp,ebp
1000c794:	cmp    DWORD PTR [esp+0x20],esi
1000c798:	mov    DWORD PTR [esp+0x14],edi
1000c79c:	mov    DWORD PTR [esp+0x10],esi
1000c7a0:	jbe    0x1000c8d2
1000c7a6:	lea    edx,[esp+0x50]
1000c7aa:	mov    DWORD PTR [esp+0x18],edx
1000c7ae:	jmp    0x1000c7b4
1000c7b0:	mov    edx,DWORD PTR [esp+0x18]
1000c7b4:	cmp    edi,DWORD PTR [esp+0x1954]
1000c7bb:	jae    0x1000c8d2
1000c7c1:	mov    eax,DWORD PTR [esp+0x1950]
1000c7c8:	add    edi,eax
1000c7ca:	mov    DWORD PTR [esp+0x1c],0xffffffff
1000c7d2:	lea    eax,[edx+0xa]
1000c7d5:	mov    cl,BYTE PTR [eax]
1000c7d7:	test   cl,cl
1000c7d9:	je     0x1000c7ef
1000c7db:	cmp    cl,0x8
1000c7de:	jne    0x1000c7e4
1000c7e0:	mov    DWORD PTR [esp+0x1c],esi
1000c7e4:	add    esi,0x1
1000c7e7:	add    eax,0x4
1000c7ea:	cmp    esi,0x4
1000c7ed:	jne    0x1000c7d5
1000c7ef:	mov    DWORD PTR [esp+0x24],esi
1000c7f3:	movzx  esi,BYTE PTR [edx]
1000c7f6:	push   esi
1000c7f7:	lea    ecx,[ebx+ebp*1]
1000c7fa:	push   edi
1000c7fb:	push   ecx
1000c7fc:	call   0x100167d0
1000c801:	add    esp,0xc
1000c804:	cmp    DWORD PTR [esp+0x24],0x1
1000c809:	jne    0x1000c8a3
1000c80f:	cmp    DWORD PTR [esp+0x1c],0x0
1000c814:	jne    0x1000c8a3
1000c81a:	mov    edx,DWORD PTR [esp+0x18]
1000c81e:	movzx  ecx,WORD PTR [edx+0xc]
1000c822:	movzx  eax,cx
1000c825:	shr    eax,0x3
1000c828:	cmp    cx,0x10
1000c82c:	jne    0x1000c84b
1000c82e:	sub    edi,ebx
1000c830:	sub    edi,ebp
1000c832:	sub    edi,DWORD PTR [esp+0x1960]
1000c839:	sub    esi,eax
1000c83b:	add    edi,DWORD PTR [esp+0x1958]
1000c842:	add    esi,ebp
1000c844:	add    esi,ebx
1000c846:	add    WORD PTR [esi],di
1000c849:	jmp    0x1000c8a3
1000c84b:	cmp    cx,0x20
1000c84f:	jne    0x1000c86f
1000c851:	sub    esi,eax
1000c853:	mov    eax,DWORD PTR [esp+0x1958]
1000c85a:	sub    eax,DWORD PTR [esp+0x1960]
1000c861:	add    esi,ebp
1000c863:	sub    eax,ebp
1000c865:	sub    eax,ebx
1000c867:	add    esi,ebx
1000c869:	add    eax,edi
1000c86b:	add    DWORD PTR [esi],eax
1000c86d:	jmp    0x1000c8a3
1000c86f:	cmp    cx,0x40
1000c873:	jne    0x1000c8a3
1000c875:	sub    esi,eax
1000c877:	mov    eax,edi
1000c879:	sub    eax,ebp
1000c87b:	sub    eax,ebx
1000c87d:	add    esi,ebp
1000c87f:	cdq    
1000c880:	add    esi,ebx
1000c882:	sub    eax,DWORD PTR [esp+0x1960]
1000c889:	sbb    edx,DWORD PTR [esp+0x1964]
1000c890:	add    eax,DWORD PTR [esp+0x1958]
1000c897:	adc    edx,DWORD PTR [esp+0x195c]
1000c89e:	add    DWORD PTR [esi],eax
1000c8a0:	adc    DWORD PTR [esi+0x4],edx
1000c8a3:	mov    ecx,DWORD PTR [esp+0x18]
1000c8a7:	movzx  eax,BYTE PTR [ecx]
1000c8aa:	add    DWORD PTR [esp+0x14],eax
1000c8ae:	mov    edi,DWORD PTR [esp+0x14]
1000c8b2:	add    ebp,eax
1000c8b4:	mov    eax,DWORD PTR [esp+0x10]
1000c8b8:	add    eax,0x1
1000c8bb:	add    ecx,0x40
1000c8be:	xor    esi,esi
1000c8c0:	cmp    eax,DWORD PTR [esp+0x20]
1000c8c4:	mov    DWORD PTR [esp+0x10],eax
1000c8c8:	mov    DWORD PTR [esp+0x18],ecx
1000c8cc:	jb     0x1000c7b0
1000c8d2:	mov    eax,ds:0x10065af8
1000c8d7:	mov    ecx,DWORD PTR [esp+0x1950]
1000c8de:	lea    edx,[esp+0x10]
1000c8e2:	push   edx
1000c8e3:	lea    eax,[eax+eax*2]
1000c8e6:	push   0x40
1000c8e8:	add    eax,eax
1000c8ea:	add    ebx,ebp
1000c8ec:	mov    ebp,DWORD PTR ds:0x1002c168
1000c8f2:	push   eax
1000c8f3:	push   ebx
1000c8f4:	add    edi,ecx
1000c8f6:	mov    DWORD PTR [esp+0x20],esi
1000c8fa:	call   ebp
1000c8fc:	mov    eax,DWORD PTR [esp+0x1958]
1000c903:	sub    eax,DWORD PTR [esp+0x1960]
1000c90a:	lea    ecx,[ebx+0x1]
1000c90d:	sub    eax,ecx
1000c90f:	lea    edx,[eax+edi*1-0x4]
1000c913:	mov    BYTE PTR [ebx],0xe9
1000c916:	lea    eax,[esp+0x1c]
1000c91a:	push   eax
1000c91b:	mov    DWORD PTR [ecx],edx
1000c91d:	mov    ecx,DWORD PTR [esp+0x14]
1000c921:	push   ecx
1000c922:	push   0x5
1000c924:	push   ebx
1000c925:	mov    DWORD PTR [esp+0x2c],esi
1000c929:	call   ebp
1000c92b:	pop    edi
1000c92c:	pop    esi
1000c92d:	pop    ebp
1000c92e:	mov    eax,0x1
1000c933:	pop    ebx
1000c934:	add    esp,0x193c
1000c93a:	ret    
1000c93b:	int3   
1000c93c:	int3   
1000c93d:	int3   
1000c93e:	int3   
1000c93f:	int3   
1000c940:	mov    ecx,DWORD PTR [esp+0x1c]
1000c944:	mov    edx,DWORD PTR ds:0x10065af8
1000c94a:	push   ebx
1000c94b:	mov    ebx,DWORD PTR [esp+0x10]
1000c94f:	push   esi
1000c950:	push   edi
1000c951:	mov    edi,DWORD PTR [esp+0x1c]
1000c955:	mov    esi,eax
1000c957:	mov    eax,DWORD PTR [esp+0x2c]
1000c95b:	push   eax
1000c95c:	push   ecx
1000c95d:	mov    ecx,DWORD PTR [esp+0x18]
1000c961:	push   edi
1000c962:	push   ebx
1000c963:	push   edx
1000c964:	push   esi
1000c965:	call   0x1000c710
1000c96a:	add    esp,0x18
1000c96d:	test   eax,eax
1000c96f:	jne    0x1000c975
1000c971:	pop    edi
1000c972:	pop    esi
1000c973:	pop    ebx
1000c974:	ret    
1000c975:	mov    eax,DWORD PTR [esp+0x24]
1000c979:	mov    ecx,DWORD PTR [esp+0x20]
1000c97d:	mov    edx,DWORD PTR [esp+0x14]
1000c981:	push   edi
1000c982:	push   ebx
1000c983:	push   eax
1000c984:	push   ecx
1000c985:	push   edx
1000c986:	call   0x1000c6b0
1000c98b:	add    esp,0x14
1000c98e:	pop    edi
1000c98f:	pop    esi
1000c990:	mov    eax,0x1
1000c995:	pop    ebx
1000c996:	ret    
1000c997:	int3   
1000c998:	int3   
1000c999:	int3   
1000c99a:	int3   
1000c99b:	int3   
1000c99c:	int3   
1000c99d:	int3   
1000c99e:	int3   
1000c99f:	int3   
1000c9a0:	sub    esp,0x8
1000c9a3:	push   ebx
1000c9a4:	push   ebp
1000c9a5:	push   edi
1000c9a6:	push   0x20
1000c9a8:	mov    DWORD PTR [esp+0x14],0x0
1000c9b0:	call   0x100159f5
1000c9b5:	add    esp,0x4
1000c9b8:	push   0x20
1000c9ba:	mov    ebx,eax
1000c9bc:	call   0x100159f5
1000c9c1:	mov    ebp,eax
1000c9c3:	mov    eax,ds:0x10065af8
1000c9c8:	lea    eax,[eax+eax*2]
1000c9cb:	add    eax,eax
1000c9cd:	add    esp,0x4
1000c9d0:	push   eax
1000c9d1:	call   0x100159f5
1000c9d6:	add    esp,0x4
1000c9d9:	mov    DWORD PTR [esp+0xc],eax
1000c9dd:	mov    eax,ds:0x10065af8
1000c9e2:	push   0x40
1000c9e4:	lea    eax,[eax+eax*2]
1000c9e7:	push   0x3000
1000c9ec:	add    eax,eax
1000c9ee:	push   eax
1000c9ef:	push   0x0
1000c9f1:	push   esi
1000c9f2:	call   DWORD PTR ds:0x1002c110
1000c9f8:	mov    edi,eax
1000c9fa:	test   edi,edi
1000c9fc:	je     0x1000caae
1000ca02:	mov    eax,DWORD PTR [esp+0x18]
1000ca06:	push   0x0
1000ca08:	push   0x20
1000ca0a:	push   ebx
1000ca0b:	push   eax
1000ca0c:	push   esi
1000ca0d:	call   DWORD PTR ds:0x1002c118
1000ca13:	test   eax,eax
1000ca15:	je     0x1000ca9f
1000ca1b:	mov    ecx,DWORD PTR [esp+0x1c]
1000ca1f:	push   0x0
1000ca21:	push   0x20
1000ca23:	push   ebp
1000ca24:	push   ecx
1000ca25:	push   esi
1000ca26:	call   DWORD PTR ds:0x1002c118
1000ca2c:	test   eax,eax
1000ca2e:	je     0x1000ca9f
1000ca30:	mov    ecx,DWORD PTR [esp+0xc]
1000ca34:	mov    eax,edi
1000ca36:	sub    eax,ecx
1000ca38:	cdq    
1000ca39:	push   edx
1000ca3a:	push   eax
1000ca3b:	mov    eax,DWORD PTR [esp+0x24]
1000ca3f:	sub    eax,ebp
1000ca41:	cdq    
1000ca42:	push   edx
1000ca43:	push   eax
1000ca44:	mov    eax,DWORD PTR [esp+0x28]
1000ca48:	sub    eax,ebx
1000ca4a:	cdq    
1000ca4b:	push   edx
1000ca4c:	push   eax
1000ca4d:	push   ebp
1000ca4e:	push   ecx
1000ca4f:	mov    eax,ebx
1000ca51:	call   0x1000c940
1000ca56:	add    esp,0x20
1000ca59:	test   eax,eax
1000ca5b:	je     0x1000ca9f
1000ca5d:	mov    eax,ds:0x10065af8
1000ca62:	push   0x0
1000ca64:	lea    edx,[eax+eax*2]
1000ca67:	mov    eax,DWORD PTR [esp+0x10]
1000ca6b:	add    edx,edx
1000ca6d:	push   edx
1000ca6e:	push   eax
1000ca6f:	push   edi
1000ca70:	push   esi
1000ca71:	call   DWORD PTR ds:0x1002c128
1000ca77:	mov    ecx,DWORD PTR [esp+0x18]
1000ca7b:	push   0x0
1000ca7d:	push   0x20
1000ca7f:	push   ebx
1000ca80:	push   ecx
1000ca81:	push   esi
1000ca82:	call   DWORD PTR ds:0x1002c128
1000ca88:	mov    edx,DWORD PTR [esp+0x1c]
1000ca8c:	push   0x0
1000ca8e:	push   0x20
1000ca90:	push   ebp
1000ca91:	push   edx
1000ca92:	push   esi
1000ca93:	call   DWORD PTR ds:0x1002c128
1000ca99:	mov    DWORD PTR [esp+0x10],edi
1000ca9d:	jmp    0x1000caae
1000ca9f:	push   0x8000
1000caa4:	push   0x0
1000caa6:	push   edi
1000caa7:	push   esi
1000caa8:	call   DWORD PTR ds:0x1002c124
1000caae:	push   ebx
1000caaf:	call   0x10017899
1000cab4:	add    esp,0x4
1000cab7:	push   ebp
1000cab8:	call   0x10017899
1000cabd:	mov    eax,DWORD PTR [esp+0x10]
1000cac1:	add    esp,0x4
1000cac4:	push   eax
1000cac5:	call   0x10017899
1000caca:	mov    eax,DWORD PTR [esp+0x14]
1000cace:	add    esp,0x4
1000cad1:	pop    edi
1000cad2:	pop    ebp
1000cad3:	pop    ebx
1000cad4:	add    esp,0x8
1000cad7:	ret    
1000cad8:	int3   
1000cad9:	int3   
1000cada:	int3   
1000cadb:	int3   
1000cadc:	int3   
1000cadd:	int3   
1000cade:	int3   
1000cadf:	int3   
1000cae0:	push   ebp
1000cae1:	mov    ebp,esp
1000cae3:	mov    eax,0x80000048
1000cae8:	pop    ebp
1000cae9:	ret    0x8
1000caec:	int3   
1000caed:	int3   
1000caee:	int3   
1000caef:	int3   
1000caf0:	push   ebp
1000caf1:	mov    ebp,esp
1000caf3:	mov    eax,0x80000048
1000caf8:	pop    ebp
1000caf9:	ret    0x14
1000cafc:	int3   
1000cafd:	int3   
1000cafe:	int3   
1000caff:	int3   
1000cb00:	push   ebp
1000cb01:	mov    ebp,esp
1000cb03:	mov    eax,0x80000048
1000cb08:	pop    ebp
1000cb09:	ret    0x10
1000cb0c:	int3   
1000cb0d:	int3   
1000cb0e:	int3   
1000cb0f:	int3   
1000cb10:	push   ebp
1000cb11:	mov    ebp,esp
1000cb13:	mov    eax,0x80000048
1000cb18:	pop    ebp
1000cb19:	ret    0x4
1000cb1c:	int3   
1000cb1d:	int3   
1000cb1e:	int3   
1000cb1f:	int3   
1000cb20:	push   ebp
1000cb21:	mov    ebp,esp
1000cb23:	mov    eax,0x80000048
1000cb28:	pop    ebp
1000cb29:	ret    0x4
1000cb2c:	int3   
1000cb2d:	int3   
1000cb2e:	int3   
1000cb2f:	int3   
1000cb30:	push   ebp
1000cb31:	mov    ebp,esp
1000cb33:	mov    eax,0x80000048
1000cb38:	pop    ebp
1000cb39:	ret    0x4
1000cb3c:	int3   
1000cb3d:	int3   
1000cb3e:	int3   
1000cb3f:	int3   
1000cb40:	push   ebp
1000cb41:	mov    ebp,esp
1000cb43:	mov    eax,0x80000048
1000cb48:	pop    ebp
1000cb49:	ret    0xc
1000cb4c:	int3   
1000cb4d:	int3   
1000cb4e:	int3   
1000cb4f:	int3   
1000cb50:	push   ebp
1000cb51:	mov    ebp,esp
1000cb53:	mov    eax,0x80000048
1000cb58:	pop    ebp
1000cb59:	ret    0x10
1000cb5c:	int3   
1000cb5d:	int3   
1000cb5e:	int3   
1000cb5f:	int3   
1000cb60:	push   ebp
1000cb61:	mov    ebp,esp
1000cb63:	mov    eax,0x80000048
1000cb68:	pop    ebp
1000cb69:	ret    0x14
1000cb6c:	int3   
1000cb6d:	int3   
1000cb6e:	int3   
1000cb6f:	int3   
1000cb70:	push   ebp
1000cb71:	mov    ebp,esp
1000cb73:	mov    eax,0x80000048
1000cb78:	pop    ebp
1000cb79:	ret    0xc
1000cb7c:	int3   
1000cb7d:	int3   
1000cb7e:	int3   
1000cb7f:	int3   
1000cb80:	push   ebp
1000cb81:	mov    ebp,esp
1000cb83:	mov    eax,0x80000048
1000cb88:	pop    ebp
1000cb89:	ret    0x8
1000cb8c:	int3   
1000cb8d:	int3   
1000cb8e:	int3   
1000cb8f:	int3   
1000cb90:	push   ebp
1000cb91:	mov    ebp,esp
1000cb93:	mov    eax,0x80000048
1000cb98:	pop    ebp
1000cb99:	ret    0x8
1000cb9c:	int3   
1000cb9d:	int3   
1000cb9e:	int3   
1000cb9f:	int3   
1000cba0:	push   ebp
1000cba1:	mov    ebp,esp
1000cba3:	mov    eax,0x80000048
1000cba8:	pop    ebp
1000cba9:	ret    0x8
1000cbac:	int3   
1000cbad:	int3   
1000cbae:	int3   
1000cbaf:	int3   
1000cbb0:	push   ebp
1000cbb1:	mov    ebp,esp
1000cbb3:	mov    eax,0x80000048
1000cbb8:	pop    ebp
1000cbb9:	ret    0x10
1000cbbc:	int3   
1000cbbd:	int3   
1000cbbe:	int3   
1000cbbf:	int3   
1000cbc0:	push   ebp
1000cbc1:	mov    ebp,esp
1000cbc3:	mov    eax,0x80000048
1000cbc8:	pop    ebp
1000cbc9:	ret    0x1c
1000cbcc:	int3   
1000cbcd:	int3   
1000cbce:	int3   
1000cbcf:	int3   
1000cbd0:	push   ebp
1000cbd1:	mov    ebp,esp
1000cbd3:	mov    eax,0x80000048
1000cbd8:	pop    ebp
1000cbd9:	ret    0x8
1000cbdc:	int3   
1000cbdd:	int3   
1000cbde:	int3   
1000cbdf:	int3   
1000cbe0:	push   ebp
1000cbe1:	mov    ebp,esp
1000cbe3:	mov    eax,0x80000048
1000cbe8:	pop    ebp
1000cbe9:	ret    0x8
1000cbec:	int3   
1000cbed:	int3   
1000cbee:	int3   
1000cbef:	int3   
1000cbf0:	push   ebp
1000cbf1:	mov    ebp,esp
1000cbf3:	mov    eax,0x80000048
1000cbf8:	pop    ebp
1000cbf9:	ret    0x1c
1000cbfc:	int3   
1000cbfd:	int3   
1000cbfe:	int3   
1000cbff:	int3   
1000cc00:	push   ebp
1000cc01:	mov    ebp,esp
1000cc03:	push   ecx
1000cc04:	mov    DWORD PTR [ebp-0x4],0x0
1000cc0b:	mov    eax,DWORD PTR [ebp+0x14]
1000cc0e:	mov    DWORD PTR [eax],0x30000
1000cc14:	mov    eax,DWORD PTR [ebp-0x4]
1000cc17:	mov    esp,ebp
1000cc19:	pop    ebp
1000cc1a:	ret    0x10
1000cc1d:	int3   
1000cc1e:	int3   
1000cc1f:	int3   
1000cc20:	push   ebp
1000cc21:	mov    ebp,esp
1000cc23:	mov    eax,0x80000048
1000cc28:	pop    ebp
1000cc29:	ret    0x14
1000cc2c:	int3   
1000cc2d:	int3   
1000cc2e:	int3   
1000cc2f:	int3   
1000cc30:	push   ebp
1000cc31:	mov    ebp,esp
1000cc33:	mov    eax,0x80000048
1000cc38:	pop    ebp
1000cc39:	ret    0x8
1000cc3c:	int3   
1000cc3d:	int3   
1000cc3e:	int3   
1000cc3f:	int3   
1000cc40:	push   ebp
1000cc41:	mov    ebp,esp
1000cc43:	xor    eax,eax
1000cc45:	pop    ebp
1000cc46:	ret    0x8
1000cc49:	int3   
1000cc4a:	int3   
1000cc4b:	int3   
1000cc4c:	int3   
1000cc4d:	int3   
1000cc4e:	int3   
1000cc4f:	int3   
1000cc50:	push   ebp
1000cc51:	mov    ebp,esp
1000cc53:	xor    eax,eax
1000cc55:	pop    ebp
1000cc56:	ret    0x10
1000cc59:	int3   
1000cc5a:	int3   
1000cc5b:	int3   
1000cc5c:	int3   
1000cc5d:	int3   
1000cc5e:	int3   
1000cc5f:	int3   
1000cc60:	push   ebp
1000cc61:	mov    ebp,esp
1000cc63:	call   0x1000df70
1000cc68:	mov    eax,DWORD PTR [ebp+0x24]
1000cc6b:	mov    DWORD PTR [eax],0x1
1000cc71:	xor    eax,eax
1000cc73:	pop    ebp
1000cc74:	ret    0x20
1000cc77:	int3   
1000cc78:	int3   
1000cc79:	int3   
1000cc7a:	int3   
1000cc7b:	int3   
1000cc7c:	int3   
1000cc7d:	int3   
1000cc7e:	int3   
1000cc7f:	int3   
1000cc80:	push   ebp
1000cc81:	mov    ebp,esp
1000cc83:	xor    eax,eax
1000cc85:	pop    ebp
1000cc86:	ret    0x8
1000cc89:	int3   
1000cc8a:	int3   
1000cc8b:	int3   
1000cc8c:	int3   
1000cc8d:	int3   
1000cc8e:	int3   
1000cc8f:	int3   
1000cc90:	push   ebp
1000cc91:	mov    ebp,esp
1000cc93:	xor    eax,eax
1000cc95:	pop    ebp
1000cc96:	ret    0x8
1000cc99:	int3   
1000cc9a:	int3   
1000cc9b:	int3   
1000cc9c:	int3   
1000cc9d:	int3   
1000cc9e:	int3   
1000cc9f:	int3   
1000cca0:	push   ebp
1000cca1:	mov    ebp,esp
1000cca3:	xor    eax,eax
1000cca5:	pop    ebp
1000cca6:	ret    0x8
1000cca9:	int3   
1000ccaa:	int3   
1000ccab:	int3   
1000ccac:	int3   
1000ccad:	int3   
1000ccae:	int3   
1000ccaf:	int3   
1000ccb0:	push   ebp
1000ccb1:	mov    ebp,esp
1000ccb3:	mov    eax,DWORD PTR [ebp+0xc]
1000ccb6:	mov    DWORD PTR [eax],0x0
1000ccbc:	mov    ecx,DWORD PTR [ebp+0x10]
1000ccbf:	mov    DWORD PTR [ecx],0x0
1000ccc5:	xor    eax,eax
1000ccc7:	pop    ebp
1000ccc8:	ret    0x18
1000cccb:	int3   
1000cccc:	int3   
1000cccd:	int3   
1000ccce:	int3   
1000cccf:	int3   
1000ccd0:	push   ebp
1000ccd1:	mov    ebp,esp
1000ccd3:	push   ecx
1000ccd4:	mov    DWORD PTR [ebp-0x4],0x0
1000ccdb:	push   0x1
1000ccdd:	mov    eax,DWORD PTR [ebp+0x8]
1000cce0:	push   eax
1000cce1:	call   0x100020f0
1000cce6:	add    esp,0x8
1000cce9:	mov    ecx,DWORD PTR [ebp-0x4]
1000ccec:	or     ecx,0x1
1000ccef:	mov    DWORD PTR [ebp-0x4],ecx
1000ccf2:	mov    eax,DWORD PTR [ebp+0x8]
1000ccf5:	mov    esp,ebp
1000ccf7:	pop    ebp
1000ccf8:	ret    
1000ccf9:	int3   
1000ccfa:	int3   
1000ccfb:	int3   
1000ccfc:	int3   
1000ccfd:	int3   
1000ccfe:	int3   
1000ccff:	int3   
1000cd00:	push   ebp
1000cd01:	mov    ebp,esp
1000cd03:	sub    esp,0xc
1000cd06:	mov    DWORD PTR [ebp-0x4],0x0
1000cd0d:	lea    eax,[ebp-0x8]
1000cd10:	push   eax
1000cd11:	call   0x1000ccd0
1000cd16:	add    esp,0x4
1000cd19:	lea    ecx,[ebp-0x8]
1000cd1c:	call   0x10003190
1000cd21:	push   eax
1000cd22:	mov    ecx,DWORD PTR [ebp+0x8]
1000cd25:	push   ecx
1000cd26:	call   DWORD PTR ds:0x1002c024
1000cd2c:	mov    edx,DWORD PTR [ebp-0x4]
1000cd2f:	mov    DWORD PTR [ebp-0xc],edx
1000cd32:	lea    ecx,[ebp-0x8]
1000cd35:	call   0x10002e90
1000cd3a:	mov    eax,DWORD PTR [ebp-0xc]
1000cd3d:	mov    esp,ebp
1000cd3f:	pop    ebp
1000cd40:	ret    0x4
1000cd43:	int3   
1000cd44:	int3   
1000cd45:	int3   
1000cd46:	int3   
1000cd47:	int3   
1000cd48:	int3   
1000cd49:	int3   
1000cd4a:	int3   
1000cd4b:	int3   
1000cd4c:	int3   
1000cd4d:	int3   
1000cd4e:	int3   
1000cd4f:	int3   
1000cd50:	push   ebp
1000cd51:	mov    ebp,esp
1000cd53:	xor    eax,eax
1000cd55:	pop    ebp
1000cd56:	ret    0x10
1000cd59:	int3   
1000cd5a:	int3   
1000cd5b:	int3   
1000cd5c:	int3   
1000cd5d:	int3   
1000cd5e:	int3   
1000cd5f:	int3   
1000cd60:	push   ebp
1000cd61:	mov    ebp,esp
1000cd63:	xor    eax,eax
1000cd65:	pop    ebp
1000cd66:	ret    0xc
1000cd69:	int3   
1000cd6a:	int3   
1000cd6b:	int3   
1000cd6c:	int3   
1000cd6d:	int3   
1000cd6e:	int3   
1000cd6f:	int3   
1000cd70:	push   ebp
1000cd71:	mov    ebp,esp
1000cd73:	sub    esp,0x2c
1000cd76:	mov    eax,ds:0x10064694
1000cd7b:	xor    eax,ebp
1000cd7d:	mov    DWORD PTR [ebp-0x1c],eax
1000cd80:	call   0x10001000
1000cd85:	mov    DWORD PTR [ebp-0x14],eax
1000cd88:	lea    eax,[ebp-0x10]
1000cd8b:	push   eax
1000cd8c:	call   0x1000ccd0
1000cd91:	add    esp,0x4
1000cd94:	lea    ecx,[ebp-0x10]
1000cd97:	call   0x10003190
1000cd9c:	mov    DWORD PTR [ebp-0xc],eax
1000cd9f:	cmp    DWORD PTR [ebp-0xc],0x0
1000cda3:	jne    0x1000cdae
1000cda5:	mov    DWORD PTR [ebp-0x24],0x0
1000cdac:	jmp    0x1000cdfd
1000cdae:	mov    ecx,DWORD PTR [ebp-0xc]
1000cdb1:	push   ecx
1000cdb2:	call   DWORD PTR ds:0x1002c028
1000cdb8:	add    eax,0x1
1000cdbb:	mov    DWORD PTR [ebp-0x4],eax
1000cdbe:	cmp    DWORD PTR [ebp-0x4],0x3fffffff
1000cdc5:	jle    0x1000cdd0
1000cdc7:	mov    DWORD PTR [ebp-0x28],0x0
1000cdce:	jmp    0x1000cdf7
1000cdd0:	mov    eax,DWORD PTR [ebp-0x4]
1000cdd3:	shl    eax,1
1000cdd5:	call   0x10015af0
1000cdda:	mov    DWORD PTR [ebp-0x2c],esp
1000cddd:	mov    edx,DWORD PTR [ebp-0x14]
1000cde0:	push   edx
1000cde1:	mov    eax,DWORD PTR [ebp-0x4]
1000cde4:	shl    eax,1
1000cde6:	push   eax
1000cde7:	mov    ecx,DWORD PTR [ebp-0xc]
1000cdea:	push   ecx
1000cdeb:	mov    edx,DWORD PTR [ebp-0x2c]
1000cdee:	push   edx
1000cdef:	call   0x10001010
1000cdf4:	mov    DWORD PTR [ebp-0x28],eax
1000cdf7:	mov    eax,DWORD PTR [ebp-0x28]
1000cdfa:	mov    DWORD PTR [ebp-0x24],eax
1000cdfd:	push   0x1
1000cdff:	mov    ecx,DWORD PTR [ebp-0x24]
1000ce02:	push   ecx
1000ce03:	call   0x1000ce40
1000ce08:	mov    DWORD PTR [ebp-0x8],eax
1000ce0b:	mov    edx,DWORD PTR [ebp-0x8]
1000ce0e:	mov    DWORD PTR [ebp-0x20],edx
1000ce11:	lea    ecx,[ebp-0x10]
1000ce14:	call   0x10002e90
1000ce19:	mov    eax,DWORD PTR [ebp-0x20]
1000ce1c:	lea    esp,[ebp-0x2c]
1000ce1f:	mov    ecx,DWORD PTR [ebp-0x1c]
1000ce22:	xor    ecx,ebp
1000ce24:	call   0x10015adb
1000ce29:	mov    esp,ebp
1000ce2b:	pop    ebp
1000ce2c:	ret    0xc
1000ce2f:	int3   
1000ce30:	push   ebp
1000ce31:	mov    ebp,esp
1000ce33:	xor    eax,eax
1000ce35:	pop    ebp
1000ce36:	ret    0xc
1000ce39:	int3   
1000ce3a:	int3   
1000ce3b:	int3   
1000ce3c:	int3   
1000ce3d:	int3   
1000ce3e:	int3   
1000ce3f:	int3   
1000ce40:	push   ebp
1000ce41:	mov    ebp,esp
1000ce43:	sub    esp,0x28
1000ce46:	cmp    DWORD PTR [ebp+0xc],0x0
1000ce4a:	je     0x1000d00c
1000ce50:	push   0x1002c460
1000ce55:	push   0xa
1000ce57:	push   0x1002c48c
1000ce5c:	call   0x10003340
1000ce61:	add    esp,0xc
1000ce64:	push   eax
1000ce65:	call   DWORD PTR ds:0x1002c048
1000ce6b:	mov    DWORD PTR [ebp-0x8],eax
1000ce6e:	cmp    DWORD PTR [ebp-0x8],0x0
1000ce72:	jne    0x1000ce85
1000ce74:	mov    DWORD PTR [ebp-0x4],0x80000048
1000ce7b:	jmp    0x1000d013
1000ce80:	jmp    0x1000d013
1000ce85:	push   0x1002c498
1000ce8a:	push   0x13
1000ce8c:	push   0x1002c4bc
1000ce91:	call   0x10003340
1000ce96:	add    esp,0xc
1000ce99:	push   eax
1000ce9a:	mov    eax,DWORD PTR [ebp-0x8]
1000ce9d:	push   eax
1000ce9e:	call   DWORD PTR ds:0x1002c044
1000cea4:	mov    DWORD PTR [ebp-0x18],eax
1000cea7:	cmp    DWORD PTR [ebp-0x18],0x0
1000ceab:	jne    0x1000cebe
1000cead:	mov    DWORD PTR [ebp-0x4],0x80000048
1000ceb4:	jmp    0x1000d000
1000ceb9:	jmp    0x1000d000
1000cebe:	mov    DWORD PTR [ebp-0x14],0x18
1000cec5:	jmp    0x1000cf08
1000cec7:	jmp    0x1000cf08
1000cec9:	mov    ecx,DWORD PTR [ebp-0x1c]
1000cecc:	push   ecx
1000cecd:	push   0x20000
1000ced2:	call   DWORD PTR [ebp-0x18]
1000ced5:	mov    DWORD PTR [ebp-0x4],eax
1000ced8:	cmp    DWORD PTR [ebp-0x4],0x0
1000cedc:	je     0x1000cee8
1000cede:	jmp    0x1000cff6
1000cee3:	jmp    0x1000cff6
1000cee8:	mov    edx,DWORD PTR [ebp-0x1c]
1000ceeb:	mov    eax,DWORD PTR [ebp-0x1c]
1000ceee:	mov    ecx,DWORD PTR [edx+0x4]
1000cef1:	cmp    ecx,DWORD PTR [eax]
1000cef3:	jbe    0x1000cf38
1000cef5:	mov    edx,DWORD PTR [ebp-0x1c]
1000cef8:	mov    eax,DWORD PTR [edx+0x4]
1000cefb:	mov    DWORD PTR [ebp-0x14],eax
1000cefe:	mov    ecx,DWORD PTR [ebp-0x1c]
1000cf01:	push   ecx
1000cf02:	call   DWORD PTR ds:0x1002c040
1000cf08:	mov    edx,DWORD PTR [ebp-0x14]
1000cf0b:	push   edx
1000cf0c:	push   0x40
1000cf0e:	call   DWORD PTR ds:0x1002c03c
1000cf14:	mov    DWORD PTR [ebp-0x1c],eax
1000cf17:	cmp    DWORD PTR [ebp-0x1c],0x0
1000cf1b:	jne    0x1000cf2e
1000cf1d:	mov    DWORD PTR [ebp-0x4],0x80000044
1000cf24:	jmp    0x1000d000
1000cf29:	jmp    0x1000d000
1000cf2e:	mov    eax,DWORD PTR [ebp-0x1c]
1000cf31:	mov    ecx,DWORD PTR [ebp-0x14]
1000cf34:	mov    DWORD PTR [eax],ecx
1000cf36:	jmp    0x1000cec9
1000cf38:	mov    edx,DWORD PTR [ebp-0x1c]
1000cf3b:	mov    eax,DWORD PTR [ebp-0x1c]
1000cf3e:	add    eax,DWORD PTR [edx+0x14]
1000cf41:	mov    DWORD PTR [ebp-0x10],eax
1000cf44:	mov    DWORD PTR [ebp-0xc],0x0
1000cf4b:	jmp    0x1000cf56
1000cf4d:	mov    ecx,DWORD PTR [ebp-0xc]
1000cf50:	add    ecx,0x1
1000cf53:	mov    DWORD PTR [ebp-0xc],ecx
1000cf56:	mov    edx,DWORD PTR [ebp-0x1c]
1000cf59:	mov    eax,DWORD PTR [ebp-0xc]
1000cf5c:	cmp    eax,DWORD PTR [edx+0xc]
1000cf5f:	jae    0x1000cfef
1000cf65:	mov    ecx,DWORD PTR [ebp-0x10]
1000cf68:	mov    edx,DWORD PTR [ebp-0x1c]
1000cf6b:	add    edx,DWORD PTR [ecx+0x8]
1000cf6e:	mov    DWORD PTR [ebp-0x24],edx
1000cf71:	mov    eax,DWORD PTR [ebp-0x24]
1000cf74:	push   eax
1000cf75:	call   DWORD PTR ds:0x1002c038
1000cf7b:	mov    ecx,DWORD PTR [ebp-0x24]
1000cf7e:	lea    edx,[ecx+eax*1-0x1]
1000cf82:	mov    DWORD PTR [ebp-0x20],edx
1000cf85:	jmp    0x1000cf90
1000cf87:	mov    eax,DWORD PTR [ebp-0x20]
1000cf8a:	sub    eax,0x1
1000cf8d:	mov    DWORD PTR [ebp-0x20],eax
1000cf90:	mov    ecx,DWORD PTR [ebp-0x20]
1000cf93:	movsx  edx,BYTE PTR [ecx]
1000cf96:	cmp    edx,0x5c
1000cf99:	je     0x1000cfa5
1000cf9b:	mov    eax,DWORD PTR [ebp-0x20]
1000cf9e:	cmp    eax,DWORD PTR [ebp-0x24]
1000cfa1:	je     0x1000cfa5
1000cfa3:	jmp    0x1000cf87
1000cfa5:	mov    ecx,DWORD PTR [ebp-0x20]
1000cfa8:	cmp    ecx,DWORD PTR [ebp-0x24]
1000cfab:	jne    0x1000cfb5
1000cfad:	mov    edx,DWORD PTR [ebp-0x20]
1000cfb0:	mov    DWORD PTR [ebp-0x28],edx
1000cfb3:	jmp    0x1000cfbe
1000cfb5:	mov    eax,DWORD PTR [ebp-0x20]
1000cfb8:	add    eax,0x1
1000cfbb:	mov    DWORD PTR [ebp-0x28],eax
1000cfbe:	mov    ecx,DWORD PTR [ebp-0x28]
1000cfc1:	mov    DWORD PTR [ebp-0x24],ecx
1000cfc4:	mov    edx,DWORD PTR [ebp+0x8]
1000cfc7:	push   edx
1000cfc8:	mov    eax,DWORD PTR [ebp-0x24]
1000cfcb:	push   eax
1000cfcc:	call   DWORD PTR ds:0x1002c034
1000cfd2:	test   eax,eax
1000cfd4:	jne    0x1000cfe1
1000cfd6:	mov    DWORD PTR [ebp-0x4],0x80000056
1000cfdd:	jmp    0x1000cff6
1000cfdf:	jmp    0x1000cff6
1000cfe1:	mov    ecx,DWORD PTR [ebp-0x10]
1000cfe4:	add    ecx,0xc
1000cfe7:	mov    DWORD PTR [ebp-0x10],ecx
1000cfea:	jmp    0x1000cf4d
1000cfef:	mov    DWORD PTR [ebp-0x4],0x0
1000cff6:	mov    edx,DWORD PTR [ebp-0x1c]
1000cff9:	push   edx
1000cffa:	call   DWORD PTR ds:0x1002c040
1000d000:	mov    eax,DWORD PTR [ebp-0x8]
1000d003:	push   eax
1000d004:	call   DWORD PTR ds:0x1002c030
1000d00a:	jmp    0x1000d013
1000d00c:	mov    DWORD PTR [ebp-0x4],0x0
1000d013:	mov    eax,DWORD PTR [ebp-0x4]
1000d016:	mov    esp,ebp
1000d018:	pop    ebp
1000d019:	ret    0x8
1000d01c:	int3   
1000d01d:	int3   
1000d01e:	int3   
1000d01f:	int3   
1000d020:	push   ebp
1000d021:	mov    ebp,esp
1000d023:	push   0x0
1000d025:	mov    eax,ds:0x10066f40
1000d02a:	push   eax
1000d02b:	call   DWORD PTR ds:0x1002c04c
1000d031:	neg    eax
1000d033:	sbb    eax,eax
1000d035:	add    eax,0x1
1000d038:	pop    ebp
1000d039:	ret    
1000d03a:	int3   
1000d03b:	int3   
1000d03c:	int3   
1000d03d:	int3   
1000d03e:	int3   
1000d03f:	int3   
1000d040:	push   ebp
1000d041:	mov    ebp,esp
1000d043:	push   0xffffffff
1000d045:	push   0x1002a060
1000d04a:	mov    eax,fs:0x0
1000d050:	push   eax
1000d051:	push   ecx
1000d052:	sub    esp,0x98
1000d058:	mov    eax,ds:0x10064694
1000d05d:	xor    eax,ebp
1000d05f:	mov    DWORD PTR [ebp-0x14],eax
1000d062:	push   ebx
1000d063:	push   esi
1000d064:	push   edi
1000d065:	push   eax
1000d066:	lea    eax,[ebp-0xc]
1000d069:	mov    fs:0x0,eax
1000d06f:	mov    DWORD PTR [ebp-0x10],esp
1000d072:	mov    DWORD PTR [ebp-0x4],0x0
1000d079:	mov    eax,DWORD PTR [ebp+0x10]
1000d07c:	push   eax
1000d07d:	lea    ecx,[ebp-0x50]
1000d080:	call   0x10002e00
1000d085:	mov    DWORD PTR [ebp-0x74],eax
1000d088:	mov    BYTE PTR [ebp-0x4],0x1
1000d08c:	push   0x0
1000d08e:	push   0x2c
1000d090:	lea    ecx,[ebp-0x50]
1000d093:	call   0x1000e130
1000d098:	mov    DWORD PTR [ebp-0x34],eax
1000d09b:	mov    ecx,DWORD PTR [ebp-0x34]
1000d09e:	push   ecx
1000d09f:	lea    edx,[ebp-0x3c]
1000d0a2:	push   edx
1000d0a3:	lea    ecx,[ebp-0x50]
1000d0a6:	call   0x10003030
1000d0ab:	mov    DWORD PTR [ebp-0x78],eax
1000d0ae:	mov    BYTE PTR [ebp-0x4],0x2
1000d0b2:	lea    ecx,[ebp-0x50]
1000d0b5:	call   0x100031e0
1000d0ba:	sub    eax,DWORD PTR [ebp-0x34]
1000d0bd:	sub    eax,0x1
1000d0c0:	push   eax
1000d0c1:	lea    eax,[ebp-0x58]
1000d0c4:	push   eax
1000d0c5:	lea    ecx,[ebp-0x50]
1000d0c8:	call   0x10002fa0
1000d0cd:	mov    DWORD PTR [ebp-0x7c],eax
1000d0d0:	mov    BYTE PTR [ebp-0x4],0x3
1000d0d4:	lea    ecx,[ebp-0x58]
1000d0d7:	call   0x1000e280
1000d0dc:	lea    ecx,[ebp-0x58]
1000d0df:	call   0x1000e1c0
1000d0e4:	lea    ecx,[ebp-0x3c]
1000d0e7:	call   0x10003190
1000d0ec:	mov    DWORD PTR [ebp-0x80],eax
1000d0ef:	mov    ecx,DWORD PTR [ebp-0x80]
1000d0f2:	push   ecx
1000d0f3:	call   0x100164ea
1000d0f8:	add    esp,0x4
1000d0fb:	mov    DWORD PTR [ebp-0x48],eax
1000d0fe:	cmp    DWORD PTR [ebp-0x48],0x0
1000d102:	jne    0x1000d119
1000d104:	mov    DWORD PTR [ebp-0x68],0x0
1000d10b:	push   0x10058b78
1000d110:	lea    edx,[ebp-0x68]
1000d113:	push   edx
1000d114:	call   0x100161ce
1000d119:	mov    eax,DWORD PTR [ebp-0x48]
1000d11c:	push   eax
1000d11d:	push   0x0
1000d11f:	push   0x400
1000d124:	call   DWORD PTR ds:0x1002c054
1000d12a:	push   eax
1000d12b:	lea    ecx,[ebp-0x44]
1000d12e:	call   0x10003290
1000d133:	mov    DWORD PTR [ebp-0x84],eax
1000d139:	mov    BYTE PTR [ebp-0x4],0x4
1000d13d:	lea    ecx,[ebp-0x44]
1000d140:	call   0x10003330
1000d145:	mov    DWORD PTR [ebp-0x88],eax
1000d14b:	cmp    DWORD PTR [ebp-0x88],0x0
1000d152:	jne    0x1000d169
1000d154:	mov    DWORD PTR [ebp-0x6c],0x0
1000d15b:	push   0x10058b78
1000d160:	lea    ecx,[ebp-0x6c]
1000d163:	push   ecx
1000d164:	call   0x100161ce
1000d169:	push   0x1
1000d16b:	push   0x1
1000d16d:	lea    ecx,[ebp-0x64]
1000d170:	call   0x10006d20
1000d175:	mov    DWORD PTR [ebp-0x8c],eax
1000d17b:	mov    BYTE PTR [ebp-0x4],0x5
1000d17f:	lea    ecx,[ebp-0x44]
1000d182:	call   0x10003330
1000d187:	mov    DWORD PTR [ebp-0x90],eax
1000d18d:	mov    edx,DWORD PTR [ebp-0x90]
1000d193:	push   edx
1000d194:	call   0x10002b10
1000d199:	add    esp,0x4
1000d19c:	mov    WORD PTR [ebp-0x92],ax
1000d1a3:	mov    ax,WORD PTR [ebp-0x92]
1000d1aa:	push   eax
1000d1ab:	lea    ecx,[ebp-0x30]
1000d1ae:	push   ecx
1000d1af:	lea    ecx,[ebp-0x64]
1000d1b2:	call   0x100073c0
1000d1b7:	mov    DWORD PTR [ebp-0x98],eax
1000d1bd:	mov    BYTE PTR [ebp-0x4],0x6
1000d1c1:	lea    ecx,[ebp-0x30]
1000d1c4:	call   0x10002d00
1000d1c9:	mov    DWORD PTR [ebp-0x9c],eax
1000d1cf:	cmp    DWORD PTR [ebp-0x9c],0x0
1000d1d6:	jne    0x1000d1ed
1000d1d8:	mov    DWORD PTR [ebp-0x70],0x0
1000d1df:	push   0x10058b78
1000d1e4:	lea    edx,[ebp-0x70]
1000d1e7:	push   edx
1000d1e8:	call   0x100161ce
1000d1ed:	call   0x10001000
1000d1f2:	mov    DWORD PTR [ebp-0x4c],eax
1000d1f5:	lea    ecx,[ebp-0x58]
1000d1f8:	call   0x10003190
1000d1fd:	mov    DWORD PTR [ebp-0xa0],eax
1000d203:	mov    eax,DWORD PTR [ebp-0xa0]
1000d209:	push   eax
1000d20a:	call   0x10010880
1000d20f:	add    esp,0x4
1000d212:	mov    DWORD PTR [ebp-0xa4],eax
1000d218:	lea    ecx,[ebp-0x30]
1000d21b:	call   0x10002cf0
1000d220:	mov    DWORD PTR [ebp-0xa8],eax
1000d226:	mov    ecx,DWORD PTR [ebp-0xa4]
1000d22c:	push   ecx
1000d22d:	mov    edx,DWORD PTR [ebp-0xa8]
1000d233:	push   edx
1000d234:	mov    eax,DWORD PTR [ebp-0x48]
1000d237:	push   eax
1000d238:	call   0x10009560
1000d23d:	add    esp,0xc
1000d240:	mov    BYTE PTR [ebp-0x4],0x5
1000d244:	lea    ecx,[ebp-0x30]
1000d247:	call   0x10002b80
1000d24c:	mov    BYTE PTR [ebp-0x4],0x4
1000d250:	lea    ecx,[ebp-0x64]
1000d253:	call   0x10006d40
1000d258:	mov    BYTE PTR [ebp-0x4],0x3
1000d25c:	lea    ecx,[ebp-0x44]
1000d25f:	call   0x100032a0
1000d264:	mov    BYTE PTR [ebp-0x4],0x2
1000d268:	lea    ecx,[ebp-0x58]
1000d26b:	call   0x10002e90
1000d270:	mov    BYTE PTR [ebp-0x4],0x1
1000d274:	lea    ecx,[ebp-0x3c]
1000d277:	call   0x10002e90
1000d27c:	mov    BYTE PTR [ebp-0x4],0x0
1000d280:	lea    ecx,[ebp-0x50]
1000d283:	call   0x10002e90
1000d288:	jmp    0x1000d29f
1000d28a:	push   0x0
1000d28c:	call   DWORD PTR ds:0x1002c050
1000d292:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d299:	mov    eax,0x1000d2a6
1000d29e:	ret    
1000d29f:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d2a6:	mov    ecx,DWORD PTR [ebp-0xc]
1000d2a9:	mov    DWORD PTR fs:0x0,ecx
1000d2b0:	pop    ecx
1000d2b1:	pop    edi
1000d2b2:	pop    esi
1000d2b3:	pop    ebx
1000d2b4:	mov    ecx,DWORD PTR [ebp-0x14]
1000d2b7:	xor    ecx,ebp
1000d2b9:	call   0x10015adb
1000d2be:	mov    esp,ebp
1000d2c0:	pop    ebp
1000d2c1:	ret    0x10
1000d2c4:	int3   
1000d2c5:	int3   
1000d2c6:	int3   
1000d2c7:	int3   
1000d2c8:	int3   
1000d2c9:	int3   
1000d2ca:	int3   
1000d2cb:	int3   
1000d2cc:	int3   
1000d2cd:	int3   
1000d2ce:	int3   
1000d2cf:	int3   
1000d2d0:	push   ebp
1000d2d1:	mov    ebp,esp
1000d2d3:	push   0xffffffff
1000d2d5:	push   0x1002a0cf
1000d2da:	mov    eax,fs:0x0
1000d2e0:	push   eax
1000d2e1:	push   ecx
1000d2e2:	mov    eax,0x10e8
1000d2e7:	call   0x10016500
1000d2ec:	mov    eax,ds:0x10064694
1000d2f1:	xor    eax,ebp
1000d2f3:	mov    DWORD PTR [ebp-0x30],eax
1000d2f6:	push   ebx
1000d2f7:	push   esi
1000d2f8:	push   edi
1000d2f9:	push   eax
1000d2fa:	lea    eax,[ebp-0xc]
1000d2fd:	mov    fs:0x0,eax
1000d303:	mov    DWORD PTR [ebp-0x10],esp
1000d306:	mov    DWORD PTR [ebp-0x4],0x0
1000d30d:	push   ecx
1000d30e:	mov    eax,esp
1000d310:	mov    DWORD PTR [ebp-0x1090],esp
1000d316:	push   eax
1000d317:	call   0x1000f430
1000d31c:	add    esp,0x4
1000d31f:	mov    DWORD PTR [ebp-0x10a4],eax
1000d325:	mov    ecx,DWORD PTR [ebp+0x8]
1000d328:	push   ecx
1000d329:	call   0x10002940
1000d32e:	add    esp,0x8
1000d331:	mov    BYTE PTR [ebp-0x10a5],al
1000d337:	movzx  edx,BYTE PTR [ebp-0x10a5]
1000d33e:	test   edx,edx
1000d340:	je     0x1000d349
1000d342:	mov    al,0x1
1000d344:	jmp    0x1000d72d
1000d349:	mov    eax,DWORD PTR [ebp+0x8]
1000d34c:	push   eax
1000d34d:	push   0x0
1000d34f:	push   0x410
1000d354:	call   DWORD PTR ds:0x1002c054
1000d35a:	push   eax
1000d35b:	lea    ecx,[ebp-0x18]
1000d35e:	call   0x10003290
1000d363:	mov    DWORD PTR [ebp-0x10ac],eax
1000d369:	mov    BYTE PTR [ebp-0x4],0x1
1000d36d:	lea    ecx,[ebp-0x18]
1000d370:	call   0x10003330
1000d375:	mov    DWORD PTR [ebp-0x10b0],eax
1000d37b:	cmp    DWORD PTR [ebp-0x10b0],0x0
1000d382:	jne    0x1000d3a2
1000d384:	mov    BYTE PTR [ebp-0x1091],0x0
1000d38b:	mov    BYTE PTR [ebp-0x4],0x0
1000d38f:	lea    ecx,[ebp-0x18]
1000d392:	call   0x100032a0
1000d397:	mov    al,BYTE PTR [ebp-0x1091]
1000d39d:	jmp    0x1000d72d
1000d3a2:	lea    ecx,[ebp-0x18]
1000d3a5:	call   0x10003330
1000d3aa:	mov    DWORD PTR [ebp-0x10b4],eax
1000d3b0:	lea    ecx,[ebp-0x1c]
1000d3b3:	push   ecx
1000d3b4:	push   0xf01ff
1000d3b9:	mov    edx,DWORD PTR [ebp-0x10b4]
1000d3bf:	push   edx
1000d3c0:	call   DWORD PTR ds:0x1002c014
1000d3c6:	push   0x0
1000d3c8:	lea    ecx,[ebp-0x1034]
1000d3ce:	call   0x10003290
1000d3d3:	mov    DWORD PTR [ebp-0x10b8],eax
1000d3d9:	mov    BYTE PTR [ebp-0x4],0x2
1000d3dd:	mov    eax,DWORD PTR [ebp-0x1c]
1000d3e0:	push   eax
1000d3e1:	lea    ecx,[ebp-0x1034]
1000d3e7:	call   0x10003d90
1000d3ec:	lea    ecx,[ebp-0x18]
1000d3ef:	call   0x10003330
1000d3f4:	mov    DWORD PTR [ebp-0x10bc],eax
1000d3fa:	push   0x1000
1000d3ff:	lea    ecx,[ebp-0x1030]
1000d405:	push   ecx
1000d406:	push   0x0
1000d408:	mov    edx,DWORD PTR [ebp-0x10bc]
1000d40e:	push   edx
1000d40f:	call   0x10012508
1000d414:	test   eax,eax
1000d416:	jne    0x1000d445
1000d418:	mov    BYTE PTR [ebp-0x1092],0x0
1000d41f:	mov    BYTE PTR [ebp-0x4],0x1
1000d423:	lea    ecx,[ebp-0x1034]
1000d429:	call   0x100032a0
1000d42e:	mov    BYTE PTR [ebp-0x4],0x0
1000d432:	lea    ecx,[ebp-0x18]
1000d435:	call   0x100032a0
1000d43a:	mov    al,BYTE PTR [ebp-0x1092]
1000d440:	jmp    0x1000d72d
1000d445:	call   0x10011e80
1000d44a:	mov    BYTE PTR [ebp-0x10bd],al
1000d450:	movzx  eax,BYTE PTR [ebp-0x10bd]
1000d457:	test   eax,eax
1000d459:	jne    0x1000d488
1000d45b:	mov    BYTE PTR [ebp-0x1093],0x1
1000d462:	mov    BYTE PTR [ebp-0x4],0x1
1000d466:	lea    ecx,[ebp-0x1034]
1000d46c:	call   0x100032a0
1000d471:	mov    BYTE PTR [ebp-0x4],0x0
1000d475:	lea    ecx,[ebp-0x18]
1000d478:	call   0x100032a0
1000d47d:	mov    al,BYTE PTR [ebp-0x1093]
1000d483:	jmp    0x1000d72d
1000d488:	push   0x1
1000d48a:	push   0x1
1000d48c:	lea    ecx,[ebp-0x108c]
1000d492:	call   0x10006d20
1000d497:	mov    DWORD PTR [ebp-0x10c4],eax
1000d49d:	mov    BYTE PTR [ebp-0x4],0x3
1000d4a1:	mov    ecx,DWORD PTR [ebp+0x8]
1000d4a4:	push   ecx
1000d4a5:	lea    ecx,[ebp-0x108c]
1000d4ab:	call   0x100072f0
1000d4b0:	mov    BYTE PTR [ebp-0x10c5],al
1000d4b6:	movzx  edx,BYTE PTR [ebp-0x10c5]
1000d4bd:	test   edx,edx
1000d4bf:	jne    0x1000d4fd
1000d4c1:	mov    BYTE PTR [ebp-0x1094],0x1
1000d4c8:	mov    BYTE PTR [ebp-0x4],0x2
1000d4cc:	lea    ecx,[ebp-0x108c]
1000d4d2:	call   0x10006d40
1000d4d7:	mov    BYTE PTR [ebp-0x4],0x1
1000d4db:	lea    ecx,[ebp-0x1034]
1000d4e1:	call   0x100032a0
1000d4e6:	mov    BYTE PTR [ebp-0x4],0x0
1000d4ea:	lea    ecx,[ebp-0x18]
1000d4ed:	call   0x100032a0
1000d4f2:	mov    al,BYTE PTR [ebp-0x1094]
1000d4f8:	jmp    0x1000d72d
1000d4fd:	lea    ecx,[ebp-0x14]
1000d500:	call   0x10002d10
1000d505:	mov    BYTE PTR [ebp-0x4],0x4
1000d509:	mov    DWORD PTR [ebp-0x1080],0x0
1000d513:	push   0x40
1000d515:	push   0x0
1000d517:	lea    eax,[ebp-0x107c]
1000d51d:	push   eax
1000d51e:	call   0x10016530
1000d523:	add    esp,0xc
1000d526:	mov    DWORD PTR [ebp-0x2c],0x0
1000d52d:	xor    ecx,ecx
1000d52f:	mov    DWORD PTR [ebp-0x28],ecx
1000d532:	mov    DWORD PTR [ebp-0x24],ecx
1000d535:	mov    DWORD PTR [ebp-0x20],ecx
1000d538:	mov    DWORD PTR [ebp-0x1080],0x44
1000d542:	lea    edx,[ebp-0x1098]
1000d548:	push   edx
1000d549:	call   0x1000f370
1000d54e:	add    esp,0x4
1000d551:	mov    DWORD PTR [ebp-0x10cc],eax
1000d557:	mov    eax,DWORD PTR [ebp-0x10cc]
1000d55d:	mov    DWORD PTR [ebp-0x10d0],eax
1000d563:	mov    BYTE PTR [ebp-0x4],0x5
1000d567:	mov    ecx,DWORD PTR [ebp-0x10d0]
1000d56d:	call   0x10003190
1000d572:	mov    DWORD PTR [ebp-0x10d4],eax
1000d578:	push   0x1002c88c
1000d57d:	push   0x4
1000d57f:	push   0x1002c8b8
1000d584:	call   0x10003540
1000d589:	add    esp,0xc
1000d58c:	mov    DWORD PTR [ebp-0x10d8],eax
1000d592:	push   0x1
1000d594:	push   0x0
1000d596:	lea    ecx,[ebp-0x109c]
1000d59c:	push   ecx
1000d59d:	call   0x10002050
1000d5a2:	add    esp,0xc
1000d5a5:	mov    DWORD PTR [ebp-0x10dc],eax
1000d5ab:	mov    edx,DWORD PTR [ebp-0x10dc]
1000d5b1:	mov    DWORD PTR [ebp-0x10e0],edx
1000d5b7:	mov    BYTE PTR [ebp-0x4],0x6
1000d5bb:	mov    eax,DWORD PTR [ebp-0x10d8]
1000d5c1:	push   eax
1000d5c2:	mov    ecx,DWORD PTR [ebp-0x10e0]
1000d5c8:	push   ecx
1000d5c9:	lea    edx,[ebp-0x10a0]
1000d5cf:	push   edx
1000d5d0:	call   0x100030b0
1000d5d5:	add    esp,0xc
1000d5d8:	mov    DWORD PTR [ebp-0x10e4],eax
1000d5de:	mov    eax,DWORD PTR [ebp-0x10e4]
1000d5e4:	mov    DWORD PTR [ebp-0x10e8],eax
1000d5ea:	mov    BYTE PTR [ebp-0x4],0x7
1000d5ee:	push   0x1002c8c4
1000d5f3:	push   0x13
1000d5f5:	push   0x1002c8fc
1000d5fa:	call   0x10003540
1000d5ff:	add    esp,0xc
1000d602:	mov    DWORD PTR [ebp-0x10ec],eax
1000d608:	mov    ecx,DWORD PTR [ebp-0x10d4]
1000d60e:	push   ecx
1000d60f:	mov    edx,DWORD PTR [ebp+0x8]
1000d612:	push   edx
1000d613:	mov    eax,DWORD PTR [ebp-0x10e8]
1000d619:	mov    ecx,DWORD PTR [eax]
1000d61b:	push   ecx
1000d61c:	mov    edx,DWORD PTR [ebp-0x10ec]
1000d622:	push   edx
1000d623:	lea    eax,[ebp-0x14]
1000d626:	push   eax
1000d627:	call   0x1000aa40
1000d62c:	add    esp,0x14
1000d62f:	mov    BYTE PTR [ebp-0x4],0x6
1000d633:	lea    ecx,[ebp-0x10a0]
1000d639:	call   0x10002e90
1000d63e:	mov    BYTE PTR [ebp-0x4],0x5
1000d642:	lea    ecx,[ebp-0x109c]
1000d648:	call   0x10002e90
1000d64d:	mov    BYTE PTR [ebp-0x4],0x4
1000d651:	lea    ecx,[ebp-0x1098]
1000d657:	call   0x10002e90
1000d65c:	lea    ecx,[ebp-0x14]
1000d65f:	call   0x10003190
1000d664:	mov    DWORD PTR [ebp-0x10f0],eax
1000d66a:	push   0x1002c924
1000d66f:	push   0xc
1000d671:	push   0x1002c948
1000d676:	call   0x10003540
1000d67b:	add    esp,0xc
1000d67e:	mov    DWORD PTR [ebp-0x10f4],eax
1000d684:	lea    ecx,[ebp-0x1034]
1000d68a:	call   0x10003330
1000d68f:	mov    DWORD PTR [ebp-0x10f8],eax
1000d695:	lea    ecx,[ebp-0x2c]
1000d698:	push   ecx
1000d699:	lea    edx,[ebp-0x1080]
1000d69f:	push   edx
1000d6a0:	push   0x0
1000d6a2:	push   0x0
1000d6a4:	push   0x0
1000d6a6:	push   0x1
1000d6a8:	push   0x0
1000d6aa:	push   0x0
1000d6ac:	mov    eax,DWORD PTR [ebp-0x10f0]
1000d6b2:	push   eax
1000d6b3:	mov    ecx,DWORD PTR [ebp-0x10f4]
1000d6b9:	push   ecx
1000d6ba:	mov    edx,DWORD PTR [ebp-0x10f8]
1000d6c0:	push   edx
1000d6c1:	call   DWORD PTR ds:0x1002c018
1000d6c7:	test   eax,eax
1000d6c9:	je     0x1000d6df
1000d6cb:	mov    eax,DWORD PTR [ebp-0x28]
1000d6ce:	push   eax
1000d6cf:	call   DWORD PTR ds:0x1002c058
1000d6d5:	mov    ecx,DWORD PTR [ebp-0x2c]
1000d6d8:	push   ecx
1000d6d9:	call   DWORD PTR ds:0x1002c058
1000d6df:	mov    BYTE PTR [ebp-0x4],0x3
1000d6e3:	lea    ecx,[ebp-0x14]
1000d6e6:	call   0x10002e90
1000d6eb:	mov    BYTE PTR [ebp-0x4],0x2
1000d6ef:	lea    ecx,[ebp-0x108c]
1000d6f5:	call   0x10006d40
1000d6fa:	mov    BYTE PTR [ebp-0x4],0x1
1000d6fe:	lea    ecx,[ebp-0x1034]
1000d704:	call   0x100032a0
1000d709:	mov    BYTE PTR [ebp-0x4],0x0
1000d70d:	lea    ecx,[ebp-0x18]
1000d710:	call   0x100032a0
1000d715:	jmp    0x1000d724
1000d717:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d71e:	mov    eax,0x1000d72b
1000d723:	ret    
1000d724:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d72b:	mov    al,0x1
1000d72d:	mov    ecx,DWORD PTR [ebp-0xc]
1000d730:	mov    DWORD PTR fs:0x0,ecx
1000d737:	pop    ecx
1000d738:	pop    edi
1000d739:	pop    esi
1000d73a:	pop    ebx
1000d73b:	mov    ecx,DWORD PTR [ebp-0x30]
1000d73e:	xor    ecx,ebp
1000d740:	call   0x10015adb
1000d745:	mov    esp,ebp
1000d747:	pop    ebp
1000d748:	ret    
1000d749:	int3   
1000d74a:	int3   
1000d74b:	int3   
1000d74c:	int3   
1000d74d:	int3   
1000d74e:	int3   
1000d74f:	int3   
1000d750:	push   ebp
1000d751:	mov    ebp,esp
1000d753:	push   0xffffffff
1000d755:	push   0x1002a0ff
1000d75a:	mov    eax,fs:0x0
1000d760:	push   eax
1000d761:	sub    esp,0x23c
1000d767:	mov    eax,ds:0x10064694
1000d76c:	xor    eax,ebp
1000d76e:	mov    DWORD PTR [ebp-0x14],eax
1000d771:	push   eax
1000d772:	lea    eax,[ebp-0xc]
1000d775:	mov    fs:0x0,eax
1000d77b:	mov    DWORD PTR [ebp-0x244],0x0
1000d785:	push   0x228
1000d78a:	push   0x0
1000d78c:	lea    eax,[ebp-0x240]
1000d792:	push   eax
1000d793:	call   0x10016530
1000d798:	add    esp,0xc
1000d79b:	push   0x0
1000d79d:	lea    ecx,[ebp-0x10]
1000d7a0:	call   0x10003290
1000d7a5:	mov    DWORD PTR [ebp-0x4],0x0
1000d7ac:	push   0x0
1000d7ae:	push   0x2
1000d7b0:	call   0x10015390
1000d7b5:	push   eax
1000d7b6:	lea    ecx,[ebp-0x10]
1000d7b9:	call   0x10003d90
1000d7be:	lea    ecx,[ebp-0x10]
1000d7c1:	call   0x10003330
1000d7c6:	cmp    eax,0xffffffff
1000d7c9:	jne    0x1000d7ec
1000d7cb:	mov    BYTE PTR [ebp-0x245],0x0
1000d7d2:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d7d9:	lea    ecx,[ebp-0x10]
1000d7dc:	call   0x100032a0
1000d7e1:	mov    al,BYTE PTR [ebp-0x245]
1000d7e7:	jmp    0x1000d8ed
1000d7ec:	mov    DWORD PTR [ebp-0x244],0x22c
1000d7f6:	lea    ecx,[ebp-0x244]
1000d7fc:	push   ecx
1000d7fd:	lea    ecx,[ebp-0x10]
1000d800:	call   0x10003330
1000d805:	push   eax
1000d806:	call   0x1001538a
1000d80b:	test   eax,eax
1000d80d:	jne    0x1000d830
1000d80f:	mov    BYTE PTR [ebp-0x246],0x0
1000d816:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d81d:	lea    ecx,[ebp-0x10]
1000d820:	call   0x100032a0
1000d825:	mov    al,BYTE PTR [ebp-0x246]
1000d82b:	jmp    0x1000d8ed
1000d830:	push   0x1002c964
1000d835:	push   0xc
1000d837:	push   0x1002c998
1000d83c:	call   0x10003540
1000d841:	add    esp,0xc
1000d844:	push   eax
1000d845:	lea    edx,[ebp-0x220]
1000d84b:	push   edx
1000d84c:	call   0x1001673b
1000d851:	add    esp,0x8
1000d854:	test   eax,eax
1000d856:	je     0x1000d880
1000d858:	push   0x1002c9b4
1000d85d:	push   0xb
1000d85f:	push   0x1002c9e0
1000d864:	call   0x10003540
1000d869:	add    esp,0xc
1000d86c:	push   eax
1000d86d:	lea    eax,[ebp-0x220]
1000d873:	push   eax
1000d874:	call   0x1001673b
1000d879:	add    esp,0x8
1000d87c:	test   eax,eax
1000d87e:	jne    0x1000d8b4
1000d880:	mov    ecx,DWORD PTR [ebp-0x23c]
1000d886:	push   ecx
1000d887:	call   0x1000d2d0
1000d88c:	add    esp,0x4
1000d88f:	movzx  edx,al
1000d892:	test   edx,edx
1000d894:	jne    0x1000d8b4
1000d896:	mov    BYTE PTR [ebp-0x247],0x0
1000d89d:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d8a4:	lea    ecx,[ebp-0x10]
1000d8a7:	call   0x100032a0
1000d8ac:	mov    al,BYTE PTR [ebp-0x247]
1000d8b2:	jmp    0x1000d8ed
1000d8b4:	lea    eax,[ebp-0x244]
1000d8ba:	push   eax
1000d8bb:	lea    ecx,[ebp-0x10]
1000d8be:	call   0x10003330
1000d8c3:	push   eax
1000d8c4:	call   0x10015384
1000d8c9:	test   eax,eax
1000d8cb:	jne    0x1000d830
1000d8d1:	mov    BYTE PTR [ebp-0x248],0x1
1000d8d8:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000d8df:	lea    ecx,[ebp-0x10]
1000d8e2:	call   0x100032a0
1000d8e7:	mov    al,BYTE PTR [ebp-0x248]
1000d8ed:	mov    ecx,DWORD PTR [ebp-0xc]
1000d8f0:	mov    DWORD PTR fs:0x0,ecx
1000d8f7:	pop    ecx
1000d8f8:	mov    ecx,DWORD PTR [ebp-0x14]
1000d8fb:	xor    ecx,ebp
1000d8fd:	call   0x10015adb
1000d902:	mov    esp,ebp
1000d904:	pop    ebp
1000d905:	ret    
1000d906:	int3   
1000d907:	int3   
1000d908:	int3   
1000d909:	int3   
1000d90a:	int3   
1000d90b:	int3   
1000d90c:	int3   
1000d90d:	int3   
1000d90e:	int3   
1000d90f:	int3   
1000d910:	push   ebp
1000d911:	mov    ebp,esp
1000d913:	push   0xffffffff
1000d915:	push   0x1002a158
1000d91a:	mov    eax,fs:0x0
1000d920:	push   eax
1000d921:	sub    esp,0x24
1000d924:	mov    eax,ds:0x10064694
1000d929:	xor    eax,ebp
1000d92b:	push   eax
1000d92c:	lea    eax,[ebp-0xc]
1000d92f:	mov    fs:0x0,eax
1000d935:	mov    DWORD PTR [ebp-0x30],0x0
1000d93c:	push   0x0
1000d93e:	lea    ecx,[ebp-0x10]
1000d941:	call   0x10003290
1000d946:	mov    DWORD PTR [ebp-0x4],0x1
1000d94d:	mov    eax,DWORD PTR [ebp+0x10]
1000d950:	mov    DWORD PTR [eax],0x0
1000d956:	mov    DWORD PTR [ebp-0x18],0x400
1000d95d:	mov    DWORD PTR [ebp-0x14],0x0
1000d964:	push   0x0
1000d966:	lea    ecx,[ebp-0x1c]
1000d969:	call   0x10003290
1000d96e:	mov    BYTE PTR [ebp-0x4],0x2
1000d972:	mov    DWORD PTR [ebp-0x20],0x0
1000d979:	push   0x0
1000d97b:	lea    ecx,[ebp-0x20]
1000d97e:	push   ecx
1000d97f:	push   0x4
1000d981:	lea    edx,[ebp-0x28]
1000d984:	push   edx
1000d985:	mov    eax,DWORD PTR [ebp+0xc]
1000d988:	push   eax
1000d989:	call   DWORD PTR ds:0x1002c068
1000d98f:	test   eax,eax
1000d991:	je     0x1000d999
1000d993:	cmp    DWORD PTR [ebp-0x20],0x4
1000d997:	je     0x1000d9ce
1000d999:	lea    ecx,[ebp-0x10]
1000d99c:	push   ecx
1000d99d:	mov    ecx,DWORD PTR [ebp+0x8]
1000d9a0:	call   0x100032d0
1000d9a5:	mov    edx,DWORD PTR [ebp-0x30]
1000d9a8:	or     edx,0x1
1000d9ab:	mov    DWORD PTR [ebp-0x30],edx
1000d9ae:	mov    BYTE PTR [ebp-0x4],0x1
1000d9b2:	lea    ecx,[ebp-0x1c]
1000d9b5:	call   0x10003320
1000d9ba:	mov    BYTE PTR [ebp-0x4],0x0
1000d9be:	lea    ecx,[ebp-0x10]
1000d9c1:	call   0x10003320
1000d9c6:	mov    eax,DWORD PTR [ebp+0x8]
1000d9c9:	jmp    0x1000daed
1000d9ce:	cmp    DWORD PTR [ebp-0x28],0x0
1000d9d2:	jne    0x1000d9d9
1000d9d4:	jmp    0x1000daa9
1000d9d9:	mov    eax,DWORD PTR [ebp-0x14]
1000d9dc:	add    eax,DWORD PTR [ebp-0x28]
1000d9df:	push   eax
1000d9e0:	call   0x100159f5
1000d9e5:	add    esp,0x4
1000d9e8:	mov    DWORD PTR [ebp-0x2c],eax
1000d9eb:	mov    ecx,DWORD PTR [ebp-0x2c]
1000d9ee:	push   ecx
1000d9ef:	lea    ecx,[ebp-0x24]
1000d9f2:	call   0x10003290
1000d9f7:	mov    BYTE PTR [ebp-0x4],0x3
1000d9fb:	mov    edx,DWORD PTR [ebp-0x14]
1000d9fe:	push   edx
1000d9ff:	lea    ecx,[ebp-0x1c]
1000da02:	call   0x10003330
1000da07:	push   eax
1000da08:	lea    ecx,[ebp-0x24]
1000da0b:	call   0x10003330
1000da10:	push   eax
1000da11:	call   0x100167d0
1000da16:	add    esp,0xc
1000da19:	lea    eax,[ebp-0x24]
1000da1c:	push   eax
1000da1d:	lea    ecx,[ebp-0x1c]
1000da20:	call   0x100032f0
1000da25:	push   0x0
1000da27:	lea    ecx,[ebp-0x20]
1000da2a:	push   ecx
1000da2b:	mov    edx,DWORD PTR [ebp-0x28]
1000da2e:	push   edx
1000da2f:	lea    ecx,[ebp-0x1c]
1000da32:	call   0x10003330
1000da37:	add    eax,DWORD PTR [ebp-0x14]
1000da3a:	push   eax
1000da3b:	mov    eax,DWORD PTR [ebp+0xc]
1000da3e:	push   eax
1000da3f:	call   DWORD PTR ds:0x1002c068
1000da45:	test   eax,eax
1000da47:	je     0x1000da51
1000da49:	mov    ecx,DWORD PTR [ebp-0x20]
1000da4c:	cmp    ecx,DWORD PTR [ebp-0x28]
1000da4f:	je     0x1000da8f
1000da51:	lea    edx,[ebp-0x10]
1000da54:	push   edx
1000da55:	mov    ecx,DWORD PTR [ebp+0x8]
1000da58:	call   0x100032d0
1000da5d:	mov    eax,DWORD PTR [ebp-0x30]
1000da60:	or     eax,0x1
1000da63:	mov    DWORD PTR [ebp-0x30],eax
1000da66:	mov    BYTE PTR [ebp-0x4],0x2
1000da6a:	lea    ecx,[ebp-0x24]
1000da6d:	call   0x10003320
1000da72:	mov    BYTE PTR [ebp-0x4],0x1
1000da76:	lea    ecx,[ebp-0x1c]
1000da79:	call   0x10003320
1000da7e:	mov    BYTE PTR [ebp-0x4],0x0
1000da82:	lea    ecx,[ebp-0x10]
1000da85:	call   0x10003320
1000da8a:	mov    eax,DWORD PTR [ebp+0x8]
1000da8d:	jmp    0x1000daed
1000da8f:	mov    ecx,DWORD PTR [ebp-0x14]
1000da92:	add    ecx,DWORD PTR [ebp-0x28]
1000da95:	mov    DWORD PTR [ebp-0x14],ecx
1000da98:	mov    BYTE PTR [ebp-0x4],0x2
1000da9c:	lea    ecx,[ebp-0x24]
1000da9f:	call   0x10003320
1000daa4:	jmp    0x1000d979
1000daa9:	lea    edx,[ebp-0x1c]
1000daac:	push   edx
1000daad:	lea    ecx,[ebp-0x10]
1000dab0:	call   0x100032f0
1000dab5:	mov    eax,DWORD PTR [ebp+0x10]
1000dab8:	mov    ecx,DWORD PTR [ebp-0x14]
1000dabb:	mov    DWORD PTR [eax],ecx
1000dabd:	lea    edx,[ebp-0x10]
1000dac0:	push   edx
1000dac1:	mov    ecx,DWORD PTR [ebp+0x8]
1000dac4:	call   0x100032d0
1000dac9:	mov    eax,DWORD PTR [ebp-0x30]
1000dacc:	or     eax,0x1
1000dacf:	mov    DWORD PTR [ebp-0x30],eax
1000dad2:	mov    BYTE PTR [ebp-0x4],0x1
1000dad6:	lea    ecx,[ebp-0x1c]
1000dad9:	call   0x10003320
1000dade:	mov    BYTE PTR [ebp-0x4],0x0
1000dae2:	lea    ecx,[ebp-0x10]
1000dae5:	call   0x10003320
1000daea:	mov    eax,DWORD PTR [ebp+0x8]
1000daed:	mov    ecx,DWORD PTR [ebp-0xc]
1000daf0:	mov    DWORD PTR fs:0x0,ecx
1000daf7:	pop    ecx
1000daf8:	mov    esp,ebp
1000dafa:	pop    ebp
1000dafb:	ret    
1000dafc:	int3   
1000dafd:	int3   
1000dafe:	int3   
1000daff:	int3   
1000db00:	push   ebp
1000db01:	mov    ebp,esp
1000db03:	push   0xffffffff
1000db05:	push   0x1002a17b
1000db0a:	mov    eax,fs:0x0
1000db10:	push   eax
1000db11:	sub    esp,0x20
1000db14:	mov    eax,ds:0x10064694
1000db19:	xor    eax,ebp
1000db1b:	push   eax
1000db1c:	lea    eax,[ebp-0xc]
1000db1f:	mov    fs:0x0,eax
1000db25:	mov    DWORD PTR [ebp-0x14],0x1
1000db2c:	push   0x1
1000db2e:	lea    eax,[ebp-0x14]
1000db31:	push   eax
1000db32:	lea    ecx,[ebp-0x1d]
1000db35:	push   ecx
1000db36:	call   0x1001250e
1000db3b:	mov    DWORD PTR [ebp-0x1c],eax
1000db3e:	cmp    DWORD PTR [ebp-0x1c],0x7a
1000db42:	je     0x1000db4b
1000db44:	xor    al,al
1000db46:	jmp    0x1000dc14
1000db4b:	mov    edx,DWORD PTR [ebp-0x14]
1000db4e:	push   edx
1000db4f:	call   0x100159f5
1000db54:	add    esp,0x4
1000db57:	mov    DWORD PTR [ebp-0x28],eax
1000db5a:	mov    eax,DWORD PTR [ebp-0x28]
1000db5d:	push   eax
1000db5e:	lea    ecx,[ebp-0x10]
1000db61:	call   0x10003290
1000db66:	mov    DWORD PTR [ebp-0x4],0x0
1000db6d:	lea    ecx,[ebp-0x10]
1000db70:	call   0x10003330
1000db75:	mov    DWORD PTR [ebp-0x18],eax
1000db78:	push   0x1
1000db7a:	lea    ecx,[ebp-0x14]
1000db7d:	push   ecx
1000db7e:	mov    edx,DWORD PTR [ebp-0x18]
1000db81:	push   edx
1000db82:	call   0x1001250e
1000db87:	mov    DWORD PTR [ebp-0x1c],eax
1000db8a:	cmp    DWORD PTR [ebp-0x1c],0x0
1000db8e:	je     0x1000dba8
1000db90:	mov    BYTE PTR [ebp-0x29],0x0
1000db94:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000db9b:	lea    ecx,[ebp-0x10]
1000db9e:	call   0x10003320
1000dba3:	mov    al,BYTE PTR [ebp-0x29]
1000dba6:	jmp    0x1000dc14
1000dba8:	mov    DWORD PTR [ebp-0x24],0x0
1000dbaf:	jmp    0x1000dbba
1000dbb1:	mov    eax,DWORD PTR [ebp-0x24]
1000dbb4:	add    eax,0x1
1000dbb7:	mov    DWORD PTR [ebp-0x24],eax
1000dbba:	mov    ecx,DWORD PTR [ebp-0x18]
1000dbbd:	mov    edx,DWORD PTR [ebp-0x24]
1000dbc0:	cmp    edx,DWORD PTR [ecx]
1000dbc2:	je     0x1000dbfe
1000dbc4:	mov    eax,DWORD PTR [ebp-0x24]
1000dbc7:	imul   eax,eax,0x38
1000dbca:	mov    ecx,DWORD PTR [ebp-0x18]
1000dbcd:	cmp    DWORD PTR [ecx+eax*1+0x4],0x0
1000dbd2:	jne    0x1000dbfc
1000dbd4:	mov    edx,DWORD PTR [ebp-0x24]
1000dbd7:	imul   edx,edx,0x38
1000dbda:	mov    eax,DWORD PTR [ebp-0x18]
1000dbdd:	cmp    DWORD PTR [eax+edx*1+0x8],0x0
1000dbe2:	jne    0x1000dbfc
1000dbe4:	mov    BYTE PTR [ebp-0x2a],0x1
1000dbe8:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000dbef:	lea    ecx,[ebp-0x10]
1000dbf2:	call   0x10003320
1000dbf7:	mov    al,BYTE PTR [ebp-0x2a]
1000dbfa:	jmp    0x1000dc14
1000dbfc:	jmp    0x1000dbb1
1000dbfe:	mov    BYTE PTR [ebp-0x2b],0x0
1000dc02:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000dc09:	lea    ecx,[ebp-0x10]
1000dc0c:	call   0x10003320
1000dc11:	mov    al,BYTE PTR [ebp-0x2b]
1000dc14:	mov    ecx,DWORD PTR [ebp-0xc]
1000dc17:	mov    DWORD PTR fs:0x0,ecx
1000dc1e:	pop    ecx
1000dc1f:	mov    esp,ebp
1000dc21:	pop    ebp
1000dc22:	ret    
1000dc23:	int3   
1000dc24:	int3   
1000dc25:	int3   
1000dc26:	int3   
1000dc27:	int3   
1000dc28:	int3   
1000dc29:	int3   
1000dc2a:	int3   
1000dc2b:	int3   
1000dc2c:	int3   
1000dc2d:	int3   
1000dc2e:	int3   
1000dc2f:	int3   
1000dc30:	push   ebp
1000dc31:	mov    ebp,esp
1000dc33:	push   0xffffffff
1000dc35:	push   0x1002a19e
1000dc3a:	mov    eax,fs:0x0
1000dc40:	push   eax
1000dc41:	sub    esp,0x18
1000dc44:	mov    eax,ds:0x10064694
1000dc49:	xor    eax,ebp
1000dc4b:	push   eax
1000dc4c:	lea    eax,[ebp-0xc]
1000dc4f:	mov    fs:0x0,eax
1000dc55:	lea    ecx,[ebp-0xd]
1000dc58:	call   0x10006c60
1000dc5d:	mov    DWORD PTR [ebp-0x4],0x0
1000dc64:	mov    DWORD PTR [ebp-0x14],0x7530
1000dc6b:	mov    eax,ds:0x10065e38
1000dc70:	mov    DWORD PTR [ebp-0x20],eax
1000dc73:	mov    ecx,DWORD PTR ds:0x10066f40
1000dc79:	mov    DWORD PTR [ebp-0x1c],ecx
1000dc7c:	mov    edx,DWORD PTR [ebp-0x14]
1000dc7f:	push   edx
1000dc80:	push   0x0
1000dc82:	lea    eax,[ebp-0x20]
1000dc85:	push   eax
1000dc86:	push   0x2
1000dc88:	call   DWORD PTR ds:0x1002c06c
1000dc8e:	mov    DWORD PTR [ebp-0x18],eax
1000dc91:	cmp    DWORD PTR [ebp-0x18],0x102
1000dc98:	je     0x1000dca2
1000dc9a:	cmp    DWORD PTR [ebp-0x18],0x0
1000dc9e:	je     0x1000dca2
1000dca0:	jmp    0x1000dca9
1000dca2:	call   0x1000d750
1000dca7:	jmp    0x1000dc6b
1000dca9:	mov    DWORD PTR [ebp-0x24],0x0
1000dcb0:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000dcb7:	lea    ecx,[ebp-0xd]
1000dcba:	call   0x10006c80
1000dcbf:	mov    eax,DWORD PTR [ebp-0x24]
1000dcc2:	mov    ecx,DWORD PTR [ebp-0xc]
1000dcc5:	mov    DWORD PTR fs:0x0,ecx
1000dccc:	pop    ecx
1000dccd:	mov    esp,ebp
1000dccf:	pop    ebp
1000dcd0:	ret    0x4
1000dcd3:	int3   
1000dcd4:	int3   
1000dcd5:	int3   
1000dcd6:	int3   
1000dcd7:	int3   
1000dcd8:	int3   
1000dcd9:	int3   
1000dcda:	int3   
1000dcdb:	int3   
1000dcdc:	int3   
1000dcdd:	int3   
1000dcde:	int3   
1000dcdf:	int3   
1000dce0:	push   ebp
1000dce1:	mov    ebp,esp
1000dce3:	push   0xffffffff
1000dce5:	push   0x1002a1c1
1000dcea:	mov    eax,fs:0x0
1000dcf0:	push   eax
1000dcf1:	sub    esp,0x8
1000dcf4:	mov    eax,ds:0x10064694
1000dcf9:	xor    eax,ebp
1000dcfb:	push   eax
1000dcfc:	lea    eax,[ebp-0xc]
1000dcff:	mov    fs:0x0,eax
1000dd05:	mov    BYTE PTR [ebp-0x11],0x0
1000dd09:	mov    al,BYTE PTR [ebp-0x11]
1000dd0c:	push   eax
1000dd0d:	lea    ecx,[ebp-0x10]
1000dd10:	push   ecx
1000dd11:	call   0x10001b80
1000dd16:	add    esp,0x8
1000dd19:	mov    DWORD PTR [ebp-0x4],0x0
1000dd20:	push   0x1002c9f8
1000dd25:	push   0xc
1000dd27:	push   0x1002ca30
1000dd2c:	call   0x10003540
1000dd31:	add    esp,0xc
1000dd34:	push   eax
1000dd35:	lea    ecx,[ebp-0x10]
1000dd38:	call   0x10002ed0
1000dd3d:	lea    ecx,[ebp-0x10]
1000dd40:	call   0x10003190
1000dd45:	push   eax
1000dd46:	call   0x1000e760
1000dd4b:	add    esp,0x4
1000dd4e:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000dd55:	lea    ecx,[ebp-0x10]
1000dd58:	call   0x10002e90
1000dd5d:	mov    ecx,DWORD PTR [ebp-0xc]
1000dd60:	mov    DWORD PTR fs:0x0,ecx
1000dd67:	pop    ecx
1000dd68:	mov    esp,ebp
1000dd6a:	pop    ebp
1000dd6b:	ret    
1000dd6c:	int3   
1000dd6d:	int3   
1000dd6e:	int3   
1000dd6f:	int3   
1000dd70:	push   ebp
1000dd71:	mov    ebp,esp
1000dd73:	sub    esp,0xc
1000dd76:	mov    DWORD PTR [ebp-0x8],0x0
1000dd7d:	push   0x3c
1000dd7f:	call   0x10016c12
1000dd84:	add    esp,0x4
1000dd87:	mov    DWORD PTR [ebp-0x4],eax
1000dd8a:	cmp    DWORD PTR [ebp-0x4],0x0
1000dd8e:	jne    0x1000dd97
1000dd90:	mov    al,0x1
1000dd92:	jmp    0x1000de3f
1000dd97:	push   0x0
1000dd99:	lea    eax,[ebp-0x8]
1000dd9c:	push   eax
1000dd9d:	mov    ecx,DWORD PTR [ebp-0x4]
1000dda0:	push   ecx
1000dda1:	call   0x1001250e
1000dda6:	cmp    eax,0x7a
1000dda9:	jne    0x1000ddd0
1000ddab:	mov    edx,DWORD PTR [ebp-0x4]
1000ddae:	push   edx
1000ddaf:	call   0x10016b35
1000ddb4:	add    esp,0x4
1000ddb7:	mov    eax,DWORD PTR [ebp-0x8]
1000ddba:	push   eax
1000ddbb:	call   0x10016c12
1000ddc0:	add    esp,0x4
1000ddc3:	mov    DWORD PTR [ebp-0x4],eax
1000ddc6:	cmp    DWORD PTR [ebp-0x4],0x0
1000ddca:	jne    0x1000ddd0
1000ddcc:	mov    al,0x1
1000ddce:	jmp    0x1000de3f
1000ddd0:	push   0x0
1000ddd2:	lea    ecx,[ebp-0x8]
1000ddd5:	push   ecx
1000ddd6:	mov    edx,DWORD PTR [ebp-0x4]
1000ddd9:	push   edx
1000ddda:	call   0x1001250e
1000dddf:	test   eax,eax
1000dde1:	je     0x1000ddf3
1000dde3:	mov    eax,DWORD PTR [ebp-0x4]
1000dde6:	push   eax
1000dde7:	call   0x10016b35
1000ddec:	add    esp,0x4
1000ddef:	mov    al,0x1
1000ddf1:	jmp    0x1000de3f
1000ddf3:	mov    DWORD PTR [ebp-0xc],0x0
1000ddfa:	jmp    0x1000de05
1000ddfc:	mov    ecx,DWORD PTR [ebp-0xc]
1000ddff:	add    ecx,0x1
1000de02:	mov    DWORD PTR [ebp-0xc],ecx
1000de05:	mov    edx,DWORD PTR [ebp-0x4]
1000de08:	mov    eax,DWORD PTR [ebp-0xc]
1000de0b:	cmp    eax,DWORD PTR [edx]
1000de0d:	jae    0x1000de31
1000de0f:	mov    ecx,DWORD PTR [ebp-0xc]
1000de12:	imul   ecx,ecx,0x38
1000de15:	mov    edx,DWORD PTR [ebp-0x4]
1000de18:	cmp    DWORD PTR [edx+ecx*1+0x4],0x0
1000de1d:	jne    0x1000de2f
1000de1f:	mov    eax,DWORD PTR [ebp-0x4]
1000de22:	push   eax
1000de23:	call   0x10016b35
1000de28:	add    esp,0x4
1000de2b:	mov    al,0x1
1000de2d:	jmp    0x1000de3f
1000de2f:	jmp    0x1000ddfc
1000de31:	mov    ecx,DWORD PTR [ebp-0x4]
1000de34:	push   ecx
1000de35:	call   0x10016b35
1000de3a:	add    esp,0x4
1000de3d:	xor    al,al
1000de3f:	mov    esp,ebp
1000de41:	pop    ebp
1000de42:	ret    
1000de43:	int3   
1000de44:	int3   
1000de45:	int3   
1000de46:	int3   
1000de47:	int3   
1000de48:	int3   
1000de49:	int3   
1000de4a:	int3   
1000de4b:	int3   
1000de4c:	int3   
1000de4d:	int3   
1000de4e:	int3   
1000de4f:	int3   
1000de50:	push   ebp
1000de51:	mov    ebp,esp
1000de53:	sub    esp,0x8
1000de56:	mov    DWORD PTR [ebp-0x8],0x3e8
1000de5d:	mov    DWORD PTR [ebp-0x4],0x0
1000de64:	call   0x1000dd70
1000de69:	movzx  eax,al
1000de6c:	test   eax,eax
1000de6e:	je     0x1000de74
1000de70:	jmp    0x1000de9d
1000de72:	jmp    0x1000de90
1000de74:	cmp    DWORD PTR [ebp+0x8],0xffffffff
1000de78:	je     0x1000de90
1000de7a:	mov    ecx,DWORD PTR [ebp-0x4]
1000de7d:	add    ecx,0x3e8
1000de83:	mov    DWORD PTR [ebp-0x4],ecx
1000de86:	mov    edx,DWORD PTR [ebp-0x4]
1000de89:	cmp    edx,DWORD PTR [ebp+0x8]
1000de8c:	jbe    0x1000de90
1000de8e:	jmp    0x1000de9d
1000de90:	push   0x3e8
1000de95:	call   DWORD PTR ds:0x1002c070
1000de9b:	jmp    0x1000de64
1000de9d:	mov    esp,ebp
1000de9f:	pop    ebp
1000dea0:	ret    
1000dea1:	int3   
1000dea2:	int3   
1000dea3:	int3   
1000dea4:	int3   
1000dea5:	int3   
1000dea6:	int3   
1000dea7:	int3   
1000dea8:	int3   
1000dea9:	int3   
1000deaa:	int3   
1000deab:	int3   
1000deac:	int3   
1000dead:	int3   
1000deae:	int3   
1000deaf:	int3   
1000deb0:	push   ebp
1000deb1:	mov    ebp,esp
1000deb3:	push   0xffffffff
1000deb5:	push   0x1002a1ec
1000deba:	mov    eax,fs:0x0
1000dec0:	push   eax
1000dec1:	sub    esp,0x1c
1000dec4:	mov    eax,ds:0x10064694
1000dec9:	xor    eax,ebp
1000decb:	push   eax
1000decc:	lea    eax,[ebp-0xc]
1000decf:	mov    fs:0x0,eax
1000ded5:	lea    ecx,[ebp-0xd]
1000ded8:	call   0x10006c60
1000dedd:	mov    DWORD PTR [ebp-0x4],0x0
1000dee4:	mov    DWORD PTR [ebp-0x14],0x7530
1000deeb:	push   0x927c0
1000def0:	call   0x1000de50
1000def5:	add    esp,0x4
1000def8:	call   0x1000dce0
1000defd:	push   0x1
1000deff:	push   0x1
1000df01:	lea    ecx,[ebp-0x24]
1000df04:	call   0x10006d20
1000df09:	mov    BYTE PTR [ebp-0x4],0x1
1000df0d:	mov    eax,DWORD PTR [ebp-0x14]
1000df10:	push   eax
1000df11:	mov    ecx,DWORD PTR ds:0x10066f40
1000df17:	push   ecx
1000df18:	call   DWORD PTR ds:0x1002c04c
1000df1e:	mov    DWORD PTR [ebp-0x18],eax
1000df21:	cmp    DWORD PTR [ebp-0x18],0x102
1000df28:	je     0x1000df38
1000df2a:	mov    BYTE PTR [ebp-0x4],0x0
1000df2e:	lea    ecx,[ebp-0x24]
1000df31:	call   0x10006d40
1000df36:	jmp    0x1000df46
1000df38:	mov    BYTE PTR [ebp-0x4],0x0
1000df3c:	lea    ecx,[ebp-0x24]
1000df3f:	call   0x10006d40
1000df44:	jmp    0x1000def8
1000df46:	mov    DWORD PTR [ebp-0x28],0x0
1000df4d:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000df54:	lea    ecx,[ebp-0xd]
1000df57:	call   0x10006c80
1000df5c:	mov    eax,DWORD PTR [ebp-0x28]
1000df5f:	mov    ecx,DWORD PTR [ebp-0xc]
1000df62:	mov    DWORD PTR fs:0x0,ecx
1000df69:	pop    ecx
1000df6a:	mov    esp,ebp
1000df6c:	pop    ebp
1000df6d:	ret    0x4
1000df70:	push   ebp
1000df71:	mov    ebp,esp
1000df73:	push   0xffffffff
1000df75:	push   0x1002a20f
1000df7a:	mov    eax,fs:0x0
1000df80:	push   eax
1000df81:	push   ecx
1000df82:	mov    eax,ds:0x10064694
1000df87:	xor    eax,ebp
1000df89:	push   eax
1000df8a:	lea    eax,[ebp-0xc]
1000df8d:	mov    fs:0x0,eax
1000df93:	push   0x0
1000df95:	push   0x0
1000df97:	push   0x0
1000df99:	push   0x1000deb0
1000df9e:	push   0x0
1000dfa0:	push   0x0
1000dfa2:	call   DWORD PTR ds:0x1002c074
1000dfa8:	push   eax
1000dfa9:	lea    ecx,[ebp-0x10]
1000dfac:	call   0x10003290
1000dfb1:	mov    DWORD PTR [ebp-0x4],0x0
1000dfb8:	mov    ecx,0x10065dd4
1000dfbd:	call   0x1000ac70
1000dfc2:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000dfc9:	lea    ecx,[ebp-0x10]
1000dfcc:	call   0x100032a0
1000dfd1:	mov    ecx,DWORD PTR [ebp-0xc]
1000dfd4:	mov    DWORD PTR fs:0x0,ecx
1000dfdb:	pop    ecx
1000dfdc:	mov    esp,ebp
1000dfde:	pop    ebp
1000dfdf:	ret    
1000dfe0:	push   ebp
1000dfe1:	mov    ebp,esp
1000dfe3:	push   0xffffffff
1000dfe5:	push   0x1002a232
1000dfea:	mov    eax,fs:0x0
1000dff0:	push   eax
1000dff1:	push   ecx
1000dff2:	sub    esp,0x24
1000dff5:	mov    eax,ds:0x10064694
1000dffa:	xor    eax,ebp
1000dffc:	mov    DWORD PTR [ebp-0x14],eax
1000dfff:	push   ebx
1000e000:	push   esi
1000e001:	push   edi
1000e002:	push   eax
1000e003:	lea    eax,[ebp-0xc]
1000e006:	mov    fs:0x0,eax
1000e00c:	mov    DWORD PTR [ebp-0x10],esp
1000e00f:	cmp    DWORD PTR [ebp+0xc],0x1
1000e013:	jne    0x1000e027
1000e015:	mov    eax,ds:0x10065dcc
1000e01a:	add    eax,0x1
1000e01d:	mov    ds:0x10065dcc,eax
1000e022:	jmp    0x1000e0b5
1000e027:	cmp    DWORD PTR [ebp+0xc],0x0
1000e02b:	jne    0x1000e0b5
1000e031:	mov    ecx,DWORD PTR ds:0x10065dcc
1000e037:	sub    ecx,0x1
1000e03a:	mov    DWORD PTR ds:0x10065dcc,ecx
1000e040:	jne    0x1000e0b5
1000e042:	call   0x10006c90
1000e047:	mov    DWORD PTR [ebp-0x4],0x0
1000e04e:	push   0x1
1000e050:	push   0x1
1000e052:	lea    ecx,[ebp-0x30]
1000e055:	call   0x10006d20
1000e05a:	mov    DWORD PTR [ebp-0x34],eax
1000e05d:	mov    BYTE PTR [ebp-0x4],0x1
1000e061:	mov    DWORD PTR [ebp-0x24],0x0
1000e068:	xor    edx,edx
1000e06a:	mov    DWORD PTR [ebp-0x20],edx
1000e06d:	mov    DWORD PTR [ebp-0x1c],edx
1000e070:	mov    DWORD PTR [ebp-0x18],edx
1000e073:	lea    eax,[ebp-0x24]
1000e076:	push   eax
1000e077:	lea    ecx,[ebp-0x30]
1000e07a:	call   0x10006d70
1000e07f:	mov    BYTE PTR [ebp-0x4],0x0
1000e083:	lea    ecx,[ebp-0x30]
1000e086:	call   0x10006d40
1000e08b:	jmp    0x1000e09a
1000e08d:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e094:	mov    eax,0x1000e0a1
1000e099:	ret    
1000e09a:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e0a1:	push   0xffffffff
1000e0a3:	call   0x10006ca0
1000e0a8:	add    esp,0x4
1000e0ab:	push   0x1
1000e0ad:	call   0x1000e4e0
1000e0b2:	add    esp,0x4
1000e0b5:	mov    eax,0x1
1000e0ba:	mov    ecx,DWORD PTR [ebp-0xc]
1000e0bd:	mov    DWORD PTR fs:0x0,ecx
1000e0c4:	pop    ecx
1000e0c5:	pop    edi
1000e0c6:	pop    esi
1000e0c7:	pop    ebx
1000e0c8:	mov    ecx,DWORD PTR [ebp-0x14]
1000e0cb:	xor    ecx,ebp
1000e0cd:	call   0x10015adb
1000e0d2:	mov    esp,ebp
1000e0d4:	pop    ebp
1000e0d5:	ret    0xc
1000e0d8:	int3   
1000e0d9:	int3   
1000e0da:	int3   
1000e0db:	int3   
1000e0dc:	int3   
1000e0dd:	int3   
1000e0de:	int3   
1000e0df:	int3   
1000e0e0:	push   ebp
1000e0e1:	mov    ebp,esp
1000e0e3:	movzx  eax,BYTE PTR ds:0x10065dd0
1000e0ea:	test   eax,eax
1000e0ec:	jne    0x1000e10e
1000e0ee:	mov    BYTE PTR ds:0x10065dd0,0x1
1000e0f5:	call   0x100020e0
1000e0fa:	push   eax
1000e0fb:	call   0x1000b390
1000e100:	add    esp,0x4
1000e103:	movzx  ecx,al
1000e106:	test   ecx,ecx
1000e108:	jne    0x1000e10e
1000e10a:	xor    eax,eax
1000e10c:	jmp    0x1000e11f
1000e10e:	mov    edx,DWORD PTR [ebp+0x10]
1000e111:	push   edx
1000e112:	mov    eax,DWORD PTR [ebp+0xc]
1000e115:	push   eax
1000e116:	mov    ecx,DWORD PTR [ebp+0x8]
1000e119:	push   ecx
1000e11a:	call   0x10016fa4
1000e11f:	pop    ebp
1000e120:	ret    0xc
1000e123:	int3   
1000e124:	int3   
1000e125:	int3   
1000e126:	int3   
1000e127:	int3   
1000e128:	int3   
1000e129:	int3   
1000e12a:	int3   
1000e12b:	int3   
1000e12c:	int3   
1000e12d:	int3   
1000e12e:	int3   
1000e12f:	int3   
1000e130:	push   ebp
1000e131:	mov    ebp,esp
1000e133:	sub    esp,0x10
1000e136:	mov    DWORD PTR [ebp-0xc],ecx
1000e139:	mov    ecx,DWORD PTR [ebp-0xc]
1000e13c:	call   0x100031e0
1000e141:	mov    DWORD PTR [ebp-0x8],eax
1000e144:	cmp    DWORD PTR [ebp+0xc],0x0
1000e148:	jl     0x1000e152
1000e14a:	mov    eax,DWORD PTR [ebp+0xc]
1000e14d:	cmp    eax,DWORD PTR [ebp-0x8]
1000e150:	jl     0x1000e157
1000e152:	or     eax,0xffffffff
1000e155:	jmp    0x1000e19a
1000e157:	mov    cx,WORD PTR [ebp+0x8]
1000e15b:	push   ecx
1000e15c:	mov    ecx,DWORD PTR [ebp-0xc]
1000e15f:	call   0x10003330
1000e164:	mov    edx,DWORD PTR [ebp+0xc]
1000e167:	lea    eax,[eax+edx*2]
1000e16a:	push   eax
1000e16b:	call   0x1000e1a0
1000e170:	add    esp,0x8
1000e173:	mov    DWORD PTR [ebp-0x4],eax
1000e176:	cmp    DWORD PTR [ebp-0x4],0x0
1000e17a:	jne    0x1000e185
1000e17c:	mov    DWORD PTR [ebp-0x10],0xffffffff
1000e183:	jmp    0x1000e197
1000e185:	mov    ecx,DWORD PTR [ebp-0xc]
1000e188:	call   0x10003330
1000e18d:	mov    ecx,DWORD PTR [ebp-0x4]
1000e190:	sub    ecx,eax
1000e192:	sar    ecx,1
1000e194:	mov    DWORD PTR [ebp-0x10],ecx
1000e197:	mov    eax,DWORD PTR [ebp-0x10]
1000e19a:	mov    esp,ebp
1000e19c:	pop    ebp
1000e19d:	ret    0x8
1000e1a0:	push   ebp
1000e1a1:	mov    ebp,esp
1000e1a3:	mov    ax,WORD PTR [ebp+0xc]
1000e1a7:	push   eax
1000e1a8:	mov    ecx,DWORD PTR [ebp+0x8]
1000e1ab:	push   ecx
1000e1ac:	call   0x10016fc5
1000e1b1:	add    esp,0x8
1000e1b4:	pop    ebp
1000e1b5:	ret    
1000e1b6:	int3   
1000e1b7:	int3   
1000e1b8:	int3   
1000e1b9:	int3   
1000e1ba:	int3   
1000e1bb:	int3   
1000e1bc:	int3   
1000e1bd:	int3   
1000e1be:	int3   
1000e1bf:	int3   
1000e1c0:	push   ebp
1000e1c1:	mov    ebp,esp
1000e1c3:	sub    esp,0x10
1000e1c6:	mov    DWORD PTR [ebp-0x10],ecx
1000e1c9:	mov    ecx,DWORD PTR [ebp-0x10]
1000e1cc:	call   0x10003330
1000e1d1:	mov    DWORD PTR [ebp-0x4],eax
1000e1d4:	mov    DWORD PTR [ebp-0x8],0x0
1000e1db:	mov    eax,DWORD PTR [ebp-0x4]
1000e1de:	movzx  ecx,WORD PTR [eax]
1000e1e1:	test   ecx,ecx
1000e1e3:	je     0x1000e21e
1000e1e5:	mov    edx,DWORD PTR [ebp-0x4]
1000e1e8:	mov    ax,WORD PTR [edx]
1000e1eb:	push   eax
1000e1ec:	call   0x1000e260
1000e1f1:	add    esp,0x4
1000e1f4:	test   eax,eax
1000e1f6:	je     0x1000e206
1000e1f8:	cmp    DWORD PTR [ebp-0x8],0x0
1000e1fc:	jne    0x1000e204
1000e1fe:	mov    ecx,DWORD PTR [ebp-0x4]
1000e201:	mov    DWORD PTR [ebp-0x8],ecx
1000e204:	jmp    0x1000e20d
1000e206:	mov    DWORD PTR [ebp-0x8],0x0
1000e20d:	mov    edx,DWORD PTR [ebp-0x4]
1000e210:	push   edx
1000e211:	call   0x1000e250
1000e216:	add    esp,0x4
1000e219:	mov    DWORD PTR [ebp-0x4],eax
1000e21c:	jmp    0x1000e1db
1000e21e:	cmp    DWORD PTR [ebp-0x8],0x0
1000e222:	je     0x1000e242
1000e224:	mov    ecx,DWORD PTR [ebp-0x10]
1000e227:	call   0x10003330
1000e22c:	mov    ecx,DWORD PTR [ebp-0x8]
1000e22f:	sub    ecx,eax
1000e231:	sar    ecx,1
1000e233:	mov    DWORD PTR [ebp-0xc],ecx
1000e236:	mov    edx,DWORD PTR [ebp-0xc]
1000e239:	push   edx
1000e23a:	mov    ecx,DWORD PTR [ebp-0x10]
1000e23d:	call   0x10003240
1000e242:	mov    eax,DWORD PTR [ebp-0x10]
1000e245:	mov    esp,ebp
1000e247:	pop    ebp
1000e248:	ret    
1000e249:	int3   
1000e24a:	int3   
1000e24b:	int3   
1000e24c:	int3   
1000e24d:	int3   
1000e24e:	int3   
1000e24f:	int3   
1000e250:	push   ebp
1000e251:	mov    ebp,esp
1000e253:	mov    eax,DWORD PTR [ebp+0x8]
1000e256:	add    eax,0x2
1000e259:	pop    ebp
1000e25a:	ret    
1000e25b:	int3   
1000e25c:	int3   
1000e25d:	int3   
1000e25e:	int3   
1000e25f:	int3   
1000e260:	push   ebp
1000e261:	mov    ebp,esp
1000e263:	mov    ax,WORD PTR [ebp+0x8]
1000e267:	push   eax
1000e268:	call   0x1001702b
1000e26d:	add    esp,0x4
1000e270:	pop    ebp
1000e271:	ret    
1000e272:	int3   
1000e273:	int3   
1000e274:	int3   
1000e275:	int3   
1000e276:	int3   
1000e277:	int3   
1000e278:	int3   
1000e279:	int3   
1000e27a:	int3   
1000e27b:	int3   
1000e27c:	int3   
1000e27d:	int3   
1000e27e:	int3   
1000e27f:	int3   
1000e280:	push   ebp
1000e281:	mov    ebp,esp
1000e283:	sub    esp,0x14
1000e286:	mov    DWORD PTR [ebp-0x14],ecx
1000e289:	mov    ecx,DWORD PTR [ebp-0x14]
1000e28c:	call   0x10003330
1000e291:	mov    DWORD PTR [ebp-0x4],eax
1000e294:	mov    eax,DWORD PTR [ebp-0x4]
1000e297:	mov    cx,WORD PTR [eax]
1000e29a:	push   ecx
1000e29b:	call   0x1000e260
1000e2a0:	add    esp,0x4
1000e2a3:	test   eax,eax
1000e2a5:	je     0x1000e2b8
1000e2a7:	mov    edx,DWORD PTR [ebp-0x4]
1000e2aa:	push   edx
1000e2ab:	call   0x1000e250
1000e2b0:	add    esp,0x4
1000e2b3:	mov    DWORD PTR [ebp-0x4],eax
1000e2b6:	jmp    0x1000e294
1000e2b8:	mov    ecx,DWORD PTR [ebp-0x14]
1000e2bb:	call   0x10003330
1000e2c0:	cmp    DWORD PTR [ebp-0x4],eax
1000e2c3:	je     0x1000e331
1000e2c5:	mov    ecx,DWORD PTR [ebp-0x14]
1000e2c8:	call   0x10003330
1000e2cd:	mov    ecx,DWORD PTR [ebp-0x4]
1000e2d0:	sub    ecx,eax
1000e2d2:	sar    ecx,1
1000e2d4:	mov    DWORD PTR [ebp-0x10],ecx
1000e2d7:	mov    ecx,DWORD PTR [ebp-0x14]
1000e2da:	call   0x100031e0
1000e2df:	push   eax
1000e2e0:	mov    ecx,DWORD PTR [ebp-0x14]
1000e2e3:	call   0x100031b0
1000e2e8:	mov    DWORD PTR [ebp-0xc],eax
1000e2eb:	mov    edx,DWORD PTR [ebp-0x10]
1000e2ee:	mov    eax,DWORD PTR [ebp-0xc]
1000e2f1:	lea    ecx,[eax+edx*2]
1000e2f4:	mov    DWORD PTR [ebp-0x4],ecx
1000e2f7:	mov    ecx,DWORD PTR [ebp-0x14]
1000e2fa:	call   0x100031e0
1000e2ff:	sub    eax,DWORD PTR [ebp-0x10]
1000e302:	mov    DWORD PTR [ebp-0x8],eax
1000e305:	mov    edx,DWORD PTR [ebp-0x8]
1000e308:	lea    eax,[edx+edx*1+0x2]
1000e30c:	push   eax
1000e30d:	mov    ecx,DWORD PTR [ebp-0x4]
1000e310:	push   ecx
1000e311:	mov    edx,DWORD PTR [ebp-0x8]
1000e314:	lea    eax,[edx+edx*1+0x2]
1000e318:	push   eax
1000e319:	mov    ecx,DWORD PTR [ebp-0xc]
1000e31c:	push   ecx
1000e31d:	call   0x10001110
1000e322:	add    esp,0x10
1000e325:	mov    edx,DWORD PTR [ebp-0x8]
1000e328:	push   edx
1000e329:	mov    ecx,DWORD PTR [ebp-0x14]
1000e32c:	call   0x10003c50
1000e331:	mov    eax,DWORD PTR [ebp-0x14]
1000e334:	mov    esp,ebp
1000e336:	pop    ebp
1000e337:	ret    
1000e338:	int3   
1000e339:	int3   
1000e33a:	int3   
1000e33b:	int3   
1000e33c:	int3   
1000e33d:	int3   
1000e33e:	int3   
1000e33f:	int3   
1000e340:	push   ebp
1000e341:	mov    ebp,esp
1000e343:	push   ecx
1000e344:	mov    DWORD PTR [ebp-0x4],ecx
1000e347:	mov    ecx,DWORD PTR [ebp-0x4]
1000e34a:	call   0x1000e400
1000e34f:	mov    eax,DWORD PTR [ebp-0x4]
1000e352:	mov    DWORD PTR [eax],0x1002ca50
1000e358:	mov    eax,DWORD PTR [ebp-0x4]
1000e35b:	mov    esp,ebp
1000e35d:	pop    ebp
1000e35e:	ret    
1000e35f:	int3   
1000e360:	push   ebp
1000e361:	mov    ebp,esp
1000e363:	push   ecx
1000e364:	mov    DWORD PTR [ebp-0x4],ecx
1000e367:	mov    ecx,DWORD PTR [ebp-0x4]
1000e36a:	call   0x1000e390
1000e36f:	mov    eax,DWORD PTR [ebp+0x8]
1000e372:	and    eax,0x1
1000e375:	je     0x1000e383
1000e377:	mov    ecx,DWORD PTR [ebp-0x4]
1000e37a:	push   ecx
1000e37b:	call   0x10015ad6
1000e380:	add    esp,0x4
1000e383:	mov    eax,DWORD PTR [ebp-0x4]
1000e386:	mov    esp,ebp
1000e388:	pop    ebp
1000e389:	ret    0x4
1000e38c:	int3   
1000e38d:	int3   
1000e38e:	int3   
1000e38f:	int3   
1000e390:	push   ebp
1000e391:	mov    ebp,esp
1000e393:	push   ecx
1000e394:	mov    DWORD PTR [ebp-0x4],ecx
1000e397:	mov    ecx,DWORD PTR [ebp-0x4]
1000e39a:	call   0x1000e3b0
1000e39f:	mov    esp,ebp
1000e3a1:	pop    ebp
1000e3a2:	ret    
1000e3a3:	int3   
1000e3a4:	int3   
1000e3a5:	int3   
1000e3a6:	int3   
1000e3a7:	int3   
1000e3a8:	int3   
1000e3a9:	int3   
1000e3aa:	int3   
1000e3ab:	int3   
1000e3ac:	int3   
1000e3ad:	int3   
1000e3ae:	int3   
1000e3af:	int3   
1000e3b0:	push   ebp
1000e3b1:	mov    ebp,esp
1000e3b3:	push   ecx
1000e3b4:	mov    DWORD PTR [ebp-0x4],ecx
1000e3b7:	mov    eax,DWORD PTR [ebp-0x4]
1000e3ba:	mov    DWORD PTR [eax],0x1002ca5c
1000e3c0:	mov    ecx,DWORD PTR [ebp-0x4]
1000e3c3:	add    ecx,0x4
1000e3c6:	call   0x100032a0
1000e3cb:	mov    esp,ebp
1000e3cd:	pop    ebp
1000e3ce:	ret    
1000e3cf:	int3   
1000e3d0:	push   ebp
1000e3d1:	mov    ebp,esp
1000e3d3:	push   ecx
1000e3d4:	mov    DWORD PTR [ebp-0x4],ecx
1000e3d7:	mov    ecx,DWORD PTR [ebp-0x4]
1000e3da:	call   0x1000e3b0
1000e3df:	mov    eax,DWORD PTR [ebp+0x8]
1000e3e2:	and    eax,0x1
1000e3e5:	je     0x1000e3f3
1000e3e7:	mov    ecx,DWORD PTR [ebp-0x4]
1000e3ea:	push   ecx
1000e3eb:	call   0x10015ad6
1000e3f0:	add    esp,0x4
1000e3f3:	mov    eax,DWORD PTR [ebp-0x4]
1000e3f6:	mov    esp,ebp
1000e3f8:	pop    ebp
1000e3f9:	ret    0x4
1000e3fc:	int3   
1000e3fd:	int3   
1000e3fe:	int3   
1000e3ff:	int3   
1000e400:	push   ebp
1000e401:	mov    ebp,esp
1000e403:	push   ecx
1000e404:	mov    DWORD PTR [ebp-0x4],ecx
1000e407:	mov    eax,DWORD PTR [ebp-0x4]
1000e40a:	mov    DWORD PTR [eax],0x1002ca5c
1000e410:	push   0x0
1000e412:	mov    ecx,DWORD PTR [ebp-0x4]
1000e415:	add    ecx,0x4
1000e418:	call   0x10003290
1000e41d:	mov    eax,DWORD PTR [ebp-0x4]
1000e420:	mov    esp,ebp
1000e422:	pop    ebp
1000e423:	ret    
1000e424:	int3   
1000e425:	int3   
1000e426:	int3   
1000e427:	int3   
1000e428:	int3   
1000e429:	int3   
1000e42a:	int3   
1000e42b:	int3   
1000e42c:	int3   
1000e42d:	int3   
1000e42e:	int3   
1000e42f:	int3   
1000e430:	push   ebp
1000e431:	mov    ebp,esp
1000e433:	push   ecx
1000e434:	mov    BYTE PTR [ebp-0x1],0x1
1000e438:	mov    ecx,0x10065dec
1000e43d:	call   0x10002d00
1000e442:	test   eax,eax
1000e444:	jne    0x1000e44a
1000e446:	mov    BYTE PTR [ebp-0x1],0x0
1000e44a:	mov    al,BYTE PTR [ebp-0x1]
1000e44d:	mov    esp,ebp
1000e44f:	pop    ebp
1000e450:	ret    
1000e451:	int3   
1000e452:	int3   
1000e453:	int3   
1000e454:	int3   
1000e455:	int3   
1000e456:	int3   
1000e457:	int3   
1000e458:	int3   
1000e459:	int3   
1000e45a:	int3   
1000e45b:	int3   
1000e45c:	int3   
1000e45d:	int3   
1000e45e:	int3   
1000e45f:	int3   
1000e460:	push   ebp
1000e461:	mov    ebp,esp
1000e463:	push   0x0
1000e465:	push   0x2
1000e467:	mov    eax,ds:0x10065e14
1000e46c:	push   eax
1000e46d:	mov    ecx,DWORD PTR ds:0x10065e10
1000e473:	push   ecx
1000e474:	call   0x10017270
1000e479:	mov    ds:0x10065e10,eax
1000e47e:	mov    DWORD PTR ds:0x10065e14,edx
1000e484:	mov    edx,DWORD PTR ds:0x10065e14
1000e48a:	cmp    edx,DWORD PTR ds:0x1005b06c
1000e490:	jl     0x1000e4b9
1000e492:	jg     0x1000e4a1
1000e494:	mov    eax,ds:0x10065e10
1000e499:	cmp    eax,DWORD PTR ds:0x1005b068
1000e49f:	jbe    0x1000e4b9
1000e4a1:	mov    ecx,DWORD PTR ds:0x1005b068
1000e4a7:	mov    DWORD PTR ds:0x10065e10,ecx
1000e4ad:	mov    edx,DWORD PTR ds:0x1005b06c
1000e4b3:	mov    DWORD PTR ds:0x10065e14,edx
1000e4b9:	pop    ebp
1000e4ba:	ret    
1000e4bb:	int3   
1000e4bc:	int3   
1000e4bd:	int3   
1000e4be:	int3   
1000e4bf:	int3   
1000e4c0:	push   ebp
1000e4c1:	mov    ebp,esp
1000e4c3:	mov    eax,ds:0x1005b068
1000e4c8:	mov    ds:0x10065e10,eax
1000e4cd:	mov    ecx,DWORD PTR ds:0x1005b06c
1000e4d3:	mov    DWORD PTR ds:0x10065e14,ecx
1000e4d9:	pop    ebp
1000e4da:	ret    
1000e4db:	int3   
1000e4dc:	int3   
1000e4dd:	int3   
1000e4de:	int3   
1000e4df:	int3   
1000e4e0:	push   ebp
1000e4e1:	mov    ebp,esp
1000e4e3:	sub    esp,0xc
1000e4e6:	mov    DWORD PTR ds:0x10066058,0x0
1000e4f0:	lea    eax,[ebp-0x8]
1000e4f3:	push   eax
1000e4f4:	call   0x1000f530
1000e4f9:	add    esp,0x4
1000e4fc:	mov    DWORD PTR [ebp-0xc],eax
1000e4ff:	mov    ecx,DWORD PTR [ebp-0xc]
1000e502:	call   0x10003330
1000e507:	push   eax
1000e508:	call   DWORD PTR ds:0x1002c098
1000e50e:	mov    DWORD PTR [ebp-0x4],eax
1000e511:	lea    ecx,[ebp-0x8]
1000e514:	call   0x10002e90
1000e519:	cmp    DWORD PTR [ebp-0x4],0x0
1000e51d:	je     0x1000e535
1000e51f:	mov    ecx,DWORD PTR [ebp-0x4]
1000e522:	push   ecx
1000e523:	call   DWORD PTR ds:0x1002c030
1000e529:	movzx  edx,BYTE PTR [ebp+0x8]
1000e52d:	test   edx,edx
1000e52f:	je     0x1000e533
1000e531:	jmp    0x1000e535
1000e533:	jmp    0x1000e4f0
1000e535:	mov    esp,ebp
1000e537:	pop    ebp
1000e538:	ret    
1000e539:	int3   
1000e53a:	int3   
1000e53b:	int3   
1000e53c:	int3   
1000e53d:	int3   
1000e53e:	int3   
1000e53f:	int3   
1000e540:	push   ebp
1000e541:	mov    ebp,esp
1000e543:	push   0xffffffff
1000e545:	push   0x1002a270
1000e54a:	mov    eax,fs:0x0
1000e550:	push   eax
1000e551:	push   ecx
1000e552:	sub    esp,0x44
1000e555:	push   ebx
1000e556:	push   esi
1000e557:	push   edi
1000e558:	mov    eax,ds:0x10064694
1000e55d:	xor    eax,ebp
1000e55f:	push   eax
1000e560:	lea    eax,[ebp-0xc]
1000e563:	mov    fs:0x0,eax
1000e569:	mov    DWORD PTR [ebp-0x10],esp
1000e56c:	mov    DWORD PTR [ebp-0x4],0x1
1000e573:	mov    BYTE PTR [ebp-0x4],0x2
1000e577:	call   0x10001000
1000e57c:	mov    DWORD PTR [ebp-0x28],eax
1000e57f:	mov    ecx,0x10065dec
1000e584:	call   0x10002d00
1000e589:	mov    DWORD PTR [ebp-0x34],eax
1000e58c:	cmp    DWORD PTR [ebp-0x34],0x0
1000e590:	jne    0x1000e5a0
1000e592:	mov    eax,DWORD PTR [ebp+0x8]
1000e595:	push   eax
1000e596:	mov    ecx,0x10065dec
1000e59b:	call   0x10002bb0
1000e5a0:	mov    ecx,0x10065e1c
1000e5a5:	call   0x10002d00
1000e5aa:	mov    DWORD PTR [ebp-0x38],eax
1000e5ad:	cmp    DWORD PTR [ebp-0x38],0x0
1000e5b1:	jne    0x1000e5c1
1000e5b3:	mov    ecx,DWORD PTR [ebp+0xc]
1000e5b6:	push   ecx
1000e5b7:	mov    ecx,0x10065e1c
1000e5bc:	call   0x10002bb0
1000e5c1:	mov    ecx,DWORD PTR [ebp+0x8]
1000e5c4:	call   0x10002d00
1000e5c9:	mov    DWORD PTR [ebp-0x3c],eax
1000e5cc:	cmp    DWORD PTR [ebp-0x3c],0x0
1000e5d0:	je     0x1000e5f9
1000e5d2:	mov    ecx,DWORD PTR [ebp+0x8]
1000e5d5:	call   0x10002cf0
1000e5da:	mov    DWORD PTR [ebp-0x40],eax
1000e5dd:	lea    ecx,[ebp+0x14]
1000e5e0:	call   0x10003330
1000e5e5:	push   eax
1000e5e6:	mov    edx,DWORD PTR [ebp-0x40]
1000e5e9:	push   edx
1000e5ea:	call   DWORD PTR ds:0x1002c0a0
1000e5f0:	push   eax
1000e5f1:	call   0x10009560
1000e5f6:	add    esp,0xc
1000e5f9:	lea    ecx,[ebp+0x14]
1000e5fc:	call   0x10003330
1000e601:	push   eax
1000e602:	call   DWORD PTR ds:0x1002c098
1000e608:	mov    DWORD PTR [ebp-0x20],eax
1000e60b:	cmp    DWORD PTR [ebp-0x20],0x0
1000e60f:	jne    0x1000e63a
1000e611:	mov    BYTE PTR [ebp-0x2d],0x0
1000e615:	mov    BYTE PTR [ebp-0x4],0x0
1000e619:	lea    ecx,[ebp+0x14]
1000e61c:	call   0x10002e90
1000e621:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e628:	lea    ecx,[ebp+0x18]
1000e62b:	call   0x10002e90
1000e630:	mov    al,BYTE PTR [ebp-0x2d]
1000e633:	jmp    0x1000e740
1000e638:	jmp    0x1000e656
1000e63a:	mov    ecx,DWORD PTR [ebp+0x8]
1000e63d:	call   0x10002d00
1000e642:	mov    DWORD PTR [ebp-0x44],eax
1000e645:	cmp    DWORD PTR [ebp-0x44],0x0
1000e649:	jne    0x1000e656
1000e64b:	mov    ecx,DWORD PTR [ebp+0xc]
1000e64e:	call   0x10002d00
1000e653:	mov    DWORD PTR [ebp-0x48],eax
1000e656:	push   0x1004ff30
1000e65b:	mov    eax,DWORD PTR [ebp-0x20]
1000e65e:	push   eax
1000e65f:	call   DWORD PTR ds:0x1002c044
1000e665:	mov    DWORD PTR [ebp-0x14],eax
1000e668:	cmp    DWORD PTR [ebp-0x14],0x0
1000e66c:	jne    0x1000e695
1000e66e:	mov    BYTE PTR [ebp-0x2e],0x0
1000e672:	mov    BYTE PTR [ebp-0x4],0x0
1000e676:	lea    ecx,[ebp+0x14]
1000e679:	call   0x10002e90
1000e67e:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e685:	lea    ecx,[ebp+0x18]
1000e688:	call   0x10002e90
1000e68d:	mov    al,BYTE PTR [ebp-0x2e]
1000e690:	jmp    0x1000e740
1000e695:	mov    ecx,DWORD PTR [ebp+0x10]
1000e698:	call   0x10002d00
1000e69d:	mov    DWORD PTR [ebp-0x4c],eax
1000e6a0:	mov    ecx,DWORD PTR [ebp+0x10]
1000e6a3:	call   0x10002cf0
1000e6a8:	mov    DWORD PTR [ebp-0x50],eax
1000e6ab:	mov    ecx,DWORD PTR [ebp-0x4c]
1000e6ae:	push   ecx
1000e6af:	mov    edx,DWORD PTR [ebp-0x50]
1000e6b2:	push   edx
1000e6b3:	push   0x10066058
1000e6b8:	call   DWORD PTR [ebp-0x14]
1000e6bb:	add    esp,0xc
1000e6be:	mov    BYTE PTR [ebp-0x51],al
1000e6c1:	mov    al,BYTE PTR [ebp-0x51]
1000e6c4:	mov    BYTE PTR [ebp-0x15],al
1000e6c7:	movzx  ecx,BYTE PTR [ebp-0x15]
1000e6cb:	test   ecx,ecx
1000e6cd:	je     0x1000e6dc
1000e6cf:	mov    edx,DWORD PTR ds:0x10065e38
1000e6d5:	push   edx
1000e6d6:	call   DWORD PTR ds:0x1002c09c
1000e6dc:	mov    al,BYTE PTR [ebp-0x15]
1000e6df:	mov    BYTE PTR [ebp-0x2f],al
1000e6e2:	mov    BYTE PTR [ebp-0x4],0x0
1000e6e6:	lea    ecx,[ebp+0x14]
1000e6e9:	call   0x10002e90
1000e6ee:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e6f5:	lea    ecx,[ebp+0x18]
1000e6f8:	call   0x10002e90
1000e6fd:	mov    al,BYTE PTR [ebp-0x2f]
1000e700:	jmp    0x1000e740
1000e702:	mov    BYTE PTR [ebp-0x30],0x0
1000e706:	mov    DWORD PTR [ebp-0x4],0x1
1000e70d:	mov    eax,0x1000e722
1000e712:	ret    
1000e713:	mov    eax,0x1000e719
1000e718:	ret    
1000e719:	mov    DWORD PTR [ebp-0x4],0x1
1000e720:	jmp    0x1000e740
1000e722:	mov    BYTE PTR [ebp-0x4],0x0
1000e726:	lea    ecx,[ebp+0x14]
1000e729:	call   0x10002e90
1000e72e:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e735:	lea    ecx,[ebp+0x18]
1000e738:	call   0x10002e90
1000e73d:	mov    al,BYTE PTR [ebp-0x30]
1000e740:	mov    ecx,DWORD PTR [ebp-0xc]
1000e743:	mov    DWORD PTR fs:0x0,ecx
1000e74a:	pop    ecx
1000e74b:	pop    edi
1000e74c:	pop    esi
1000e74d:	pop    ebx
1000e74e:	mov    esp,ebp
1000e750:	pop    ebp
1000e751:	ret    
1000e752:	int3   
1000e753:	int3   
1000e754:	int3   
1000e755:	int3   
1000e756:	int3   
1000e757:	int3   
1000e758:	int3   
1000e759:	int3   
1000e75a:	int3   
1000e75b:	int3   
1000e75c:	int3   
1000e75d:	int3   
1000e75e:	int3   
1000e75f:	int3   
1000e760:	push   ebp
1000e761:	mov    ebp,esp
1000e763:	push   0xffffffff
1000e765:	push   0x1002a2ab
1000e76a:	mov    eax,fs:0x0
1000e770:	push   eax
1000e771:	sub    esp,0x78
1000e774:	mov    eax,ds:0x10064694
1000e779:	xor    eax,ebp
1000e77b:	mov    DWORD PTR [ebp-0x10],eax
1000e77e:	push   eax
1000e77f:	lea    eax,[ebp-0xc]
1000e782:	mov    fs:0x0,eax
1000e788:	lea    ecx,[ebp-0x50]
1000e78b:	call   0x1000f7b0
1000e790:	mov    DWORD PTR [ebp-0x4],0x0
1000e797:	push   0xffffffff
1000e799:	mov    eax,ds:0x10065e3c
1000e79e:	push   eax
1000e79f:	lea    ecx,[ebp-0x50]
1000e7a2:	call   0x1000f7f0
1000e7a7:	test   eax,eax
1000e7a9:	je     0x1000e7c6
1000e7ab:	mov    BYTE PTR [ebp-0x51],0x0
1000e7af:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e7b6:	lea    ecx,[ebp-0x50]
1000e7b9:	call   0x1000f7d0
1000e7be:	mov    al,BYTE PTR [ebp-0x51]
1000e7c1:	jmp    0x1000e8f5
1000e7c6:	call   0x10001a90
1000e7cb:	mov    DWORD PTR [ebp-0x5c],eax
1000e7ce:	mov    DWORD PTR [ebp-0x58],edx
1000e7d1:	mov    ecx,DWORD PTR ds:0x10065de0
1000e7d7:	add    ecx,DWORD PTR ds:0x10065e10
1000e7dd:	mov    edx,DWORD PTR ds:0x10065de4
1000e7e3:	adc    edx,DWORD PTR ds:0x10065e14
1000e7e9:	mov    DWORD PTR [ebp-0x7c],ecx
1000e7ec:	mov    DWORD PTR [ebp-0x78],edx
1000e7ef:	mov    eax,DWORD PTR [ebp-0x78]
1000e7f2:	cmp    eax,DWORD PTR [ebp-0x58]
1000e7f5:	jb     0x1000e81c
1000e7f7:	ja     0x1000e801
1000e7f9:	mov    ecx,DWORD PTR [ebp-0x7c]
1000e7fc:	cmp    ecx,DWORD PTR [ebp-0x5c]
1000e7ff:	jbe    0x1000e81c
1000e801:	mov    BYTE PTR [ebp-0x5d],0x0
1000e805:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e80c:	lea    ecx,[ebp-0x50]
1000e80f:	call   0x1000f7d0
1000e814:	mov    al,BYTE PTR [ebp-0x5d]
1000e817:	jmp    0x1000e8f5
1000e81c:	call   0x1000e460
1000e821:	call   0x10001a90
1000e826:	mov    DWORD PTR [ebp-0x6c],eax
1000e829:	mov    DWORD PTR [ebp-0x68],edx
1000e82c:	mov    edx,DWORD PTR [ebp-0x6c]
1000e82f:	mov    DWORD PTR ds:0x10065de0,edx
1000e835:	mov    eax,DWORD PTR [ebp-0x68]
1000e838:	mov    ds:0x10065de4,eax
1000e83d:	push   0x25
1000e83f:	push   0x1004ff08
1000e844:	push   0x2333e
1000e849:	push   0x1002cbc8
1000e84e:	lea    ecx,[ebp-0x4c]
1000e851:	push   ecx
1000e852:	call   0x1000b590
1000e857:	add    esp,0x14
1000e85a:	mov    BYTE PTR [ebp-0x4],0x1
1000e85e:	push   0x0
1000e860:	lea    edx,[ebp-0x4c]
1000e863:	push   edx
1000e864:	lea    ecx,[ebp-0x30]
1000e867:	call   0x1000f630
1000e86c:	mov    BYTE PTR [ebp-0x4],0x2
1000e870:	push   0x493e0
1000e875:	lea    eax,[ebp-0x70]
1000e878:	push   eax
1000e879:	lea    ecx,[ebp-0x30]
1000e87c:	call   0x1000f710
1000e881:	mov    DWORD PTR [ebp-0x80],eax
1000e884:	mov    ecx,DWORD PTR [ebp-0x80]
1000e887:	mov    DWORD PTR [ebp-0x84],ecx
1000e88d:	mov    BYTE PTR [ebp-0x4],0x3
1000e891:	mov    ecx,DWORD PTR [ebp-0x84]
1000e897:	call   0x10003190
1000e89c:	push   eax
1000e89d:	call   0x10010880
1000e8a2:	add    esp,0x4
1000e8a5:	push   eax
1000e8a6:	mov    edx,DWORD PTR [ebp+0x8]
1000e8a9:	push   edx
1000e8aa:	lea    ecx,[ebp-0x4c]
1000e8ad:	call   0x10002cf0
1000e8b2:	push   eax
1000e8b3:	call   0x10009930
1000e8b8:	add    esp,0x10
1000e8bb:	mov    BYTE PTR [ebp-0x4],0x2
1000e8bf:	lea    ecx,[ebp-0x70]
1000e8c2:	call   0x10002e90
1000e8c7:	mov    BYTE PTR [ebp-0x71],0x0
1000e8cb:	mov    BYTE PTR [ebp-0x4],0x1
1000e8cf:	lea    ecx,[ebp-0x30]
1000e8d2:	call   0x1000f740
1000e8d7:	mov    BYTE PTR [ebp-0x4],0x0
1000e8db:	lea    ecx,[ebp-0x4c]
1000e8de:	call   0x10002b80
1000e8e3:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e8ea:	lea    ecx,[ebp-0x50]
1000e8ed:	call   0x1000f7d0
1000e8f2:	mov    al,BYTE PTR [ebp-0x71]
1000e8f5:	mov    ecx,DWORD PTR [ebp-0xc]
1000e8f8:	mov    DWORD PTR fs:0x0,ecx
1000e8ff:	pop    ecx
1000e900:	mov    ecx,DWORD PTR [ebp-0x10]
1000e903:	xor    ecx,ebp
1000e905:	call   0x10015adb
1000e90a:	mov    esp,ebp
1000e90c:	pop    ebp
1000e90d:	ret    
1000e90e:	int3   
1000e90f:	int3   
1000e910:	push   ebp
1000e911:	mov    ebp,esp
1000e913:	push   0xffffffff
1000e915:	push   0x1002a300
1000e91a:	mov    eax,fs:0x0
1000e920:	push   eax
1000e921:	sub    esp,0x34
1000e924:	mov    eax,ds:0x10064694
1000e929:	xor    eax,ebp
1000e92b:	push   eax
1000e92c:	lea    eax,[ebp-0xc]
1000e92f:	mov    fs:0x0,eax
1000e935:	lea    ecx,[ebp-0x1c]
1000e938:	call   0x10002d10
1000e93d:	mov    DWORD PTR [ebp-0x4],0x0
1000e944:	push   0x104
1000e949:	lea    ecx,[ebp-0x1c]
1000e94c:	call   0x100031b0
1000e951:	push   eax
1000e952:	push   0x104
1000e957:	call   DWORD PTR ds:0x1002c0c0
1000e95d:	mov    DWORD PTR [ebp-0x10],eax
1000e960:	cmp    DWORD PTR [ebp-0x10],0x0
1000e964:	je     0x1000e96f
1000e966:	cmp    DWORD PTR [ebp-0x10],0x104
1000e96d:	jbe    0x1000e98a
1000e96f:	mov    BYTE PTR [ebp-0x29],0x0
1000e973:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e97a:	lea    ecx,[ebp-0x1c]
1000e97d:	call   0x10002e90
1000e982:	mov    al,BYTE PTR [ebp-0x29]
1000e985:	jmp    0x1000eba9
1000e98a:	push   0xffffffff
1000e98c:	lea    ecx,[ebp-0x1c]
1000e98f:	call   0x100031f0
1000e994:	lea    ecx,[ebp-0x20]
1000e997:	call   0x10002d10
1000e99c:	mov    BYTE PTR [ebp-0x4],0x1
1000e9a0:	push   0x104
1000e9a5:	lea    ecx,[ebp-0x20]
1000e9a8:	call   0x100031b0
1000e9ad:	push   eax
1000e9ae:	push   0x0
1000e9b0:	push   0x1004ff3c
1000e9b5:	lea    ecx,[ebp-0x1c]
1000e9b8:	call   0x10003330
1000e9bd:	push   eax
1000e9be:	call   DWORD PTR ds:0x1002c0bc
1000e9c4:	test   eax,eax
1000e9c6:	jne    0x1000e9ef
1000e9c8:	mov    BYTE PTR [ebp-0x2a],0x0
1000e9cc:	mov    BYTE PTR [ebp-0x4],0x0
1000e9d0:	lea    ecx,[ebp-0x20]
1000e9d3:	call   0x10002e90
1000e9d8:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000e9df:	lea    ecx,[ebp-0x1c]
1000e9e2:	call   0x10002e90
1000e9e7:	mov    al,BYTE PTR [ebp-0x2a]
1000e9ea:	jmp    0x1000eba9
1000e9ef:	push   0xffffffff
1000e9f1:	lea    ecx,[ebp-0x20]
1000e9f4:	call   0x100031f0
1000e9f9:	lea    ecx,[ebp-0x20]
1000e9fc:	call   0x10003330
1000ea01:	push   eax
1000ea02:	call   DWORD PTR ds:0x1002c0b8
1000ea08:	push   0x0
1000ea0a:	lea    ecx,[ebp-0x20]
1000ea0d:	call   0x10003330
1000ea12:	push   eax
1000ea13:	call   DWORD PTR ds:0x1002c0b4
1000ea19:	push   0x1004ff40
1000ea1e:	lea    ecx,[ebp-0x30]
1000ea21:	call   0x10002e00
1000ea26:	mov    BYTE PTR [ebp-0x4],0x2
1000ea2a:	mov    eax,DWORD PTR [ebp+0x10]
1000ea2d:	push   eax
1000ea2e:	lea    ecx,[ebp-0x30]
1000ea31:	push   ecx
1000ea32:	lea    edx,[ebp-0x20]
1000ea35:	push   edx
1000ea36:	lea    eax,[ebp-0x34]
1000ea39:	push   eax
1000ea3a:	call   0x1000b680
1000ea3f:	add    esp,0xc
1000ea42:	mov    DWORD PTR [ebp-0x3c],eax
1000ea45:	mov    ecx,DWORD PTR [ebp-0x3c]
1000ea48:	mov    DWORD PTR [ebp-0x40],ecx
1000ea4b:	mov    BYTE PTR [ebp-0x4],0x3
1000ea4f:	mov    edx,DWORD PTR [ebp-0x40]
1000ea52:	push   edx
1000ea53:	lea    eax,[ebp-0x18]
1000ea56:	push   eax
1000ea57:	call   0x1000b680
1000ea5c:	add    esp,0xc
1000ea5f:	mov    BYTE PTR [ebp-0x4],0x5
1000ea63:	lea    ecx,[ebp-0x34]
1000ea66:	call   0x10002e90
1000ea6b:	mov    BYTE PTR [ebp-0x4],0x6
1000ea6f:	lea    ecx,[ebp-0x30]
1000ea72:	call   0x10002e90
1000ea77:	push   0x0
1000ea79:	push   0x80
1000ea7e:	push   0x2
1000ea80:	push   0x0
1000ea82:	push   0x0
1000ea84:	push   0x40000000
1000ea89:	lea    ecx,[ebp-0x18]
1000ea8c:	call   0x10003330
1000ea91:	push   eax
1000ea92:	call   DWORD PTR ds:0x1002c0b0
1000ea98:	push   eax
1000ea99:	lea    ecx,[ebp-0x14]
1000ea9c:	call   0x10003290
1000eaa1:	mov    BYTE PTR [ebp-0x4],0x7
1000eaa5:	lea    ecx,[ebp-0x14]
1000eaa8:	call   0x10003330
1000eaad:	cmp    eax,0xffffffff
1000eab0:	jne    0x1000eafa
1000eab2:	call   DWORD PTR ds:0x1002c07c
1000eab8:	mov    DWORD PTR [ebp-0x28],eax
1000eabb:	mov    BYTE PTR [ebp-0x35],0x0
1000eabf:	mov    BYTE PTR [ebp-0x4],0x6
1000eac3:	lea    ecx,[ebp-0x14]
1000eac6:	call   0x100032a0
1000eacb:	mov    BYTE PTR [ebp-0x4],0x1
1000eacf:	lea    ecx,[ebp-0x18]
1000ead2:	call   0x10002e90
1000ead7:	mov    BYTE PTR [ebp-0x4],0x0
1000eadb:	lea    ecx,[ebp-0x20]
1000eade:	call   0x10002e90
1000eae3:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000eaea:	lea    ecx,[ebp-0x1c]
1000eaed:	call   0x10002e90
1000eaf2:	mov    al,BYTE PTR [ebp-0x35]
1000eaf5:	jmp    0x1000eba9
1000eafa:	push   0x0
1000eafc:	lea    ecx,[ebp-0x24]
1000eaff:	push   ecx
1000eb00:	mov    edx,DWORD PTR [ebp+0xc]
1000eb03:	push   edx
1000eb04:	mov    eax,DWORD PTR [ebp+0x8]
1000eb07:	push   eax
1000eb08:	lea    ecx,[ebp-0x14]
1000eb0b:	call   0x10003330
1000eb10:	push   eax
1000eb11:	call   DWORD PTR ds:0x1002c0ac
1000eb17:	test   eax,eax
1000eb19:	jne    0x1000eb57
1000eb1b:	mov    BYTE PTR [ebp-0x36],0x0
1000eb1f:	mov    BYTE PTR [ebp-0x4],0x6
1000eb23:	lea    ecx,[ebp-0x14]
1000eb26:	call   0x100032a0
1000eb2b:	mov    BYTE PTR [ebp-0x4],0x1
1000eb2f:	lea    ecx,[ebp-0x18]
1000eb32:	call   0x10002e90
1000eb37:	mov    BYTE PTR [ebp-0x4],0x0
1000eb3b:	lea    ecx,[ebp-0x20]
1000eb3e:	call   0x10002e90
1000eb43:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000eb4a:	lea    ecx,[ebp-0x1c]
1000eb4d:	call   0x10002e90
1000eb52:	mov    al,BYTE PTR [ebp-0x36]
1000eb55:	jmp    0x1000eba9
1000eb57:	lea    ecx,[ebp-0x18]
1000eb5a:	push   ecx
1000eb5b:	mov    ecx,DWORD PTR [ebp+0x18]
1000eb5e:	call   0x10002eb0
1000eb63:	lea    edx,[ebp-0x20]
1000eb66:	push   edx
1000eb67:	mov    ecx,DWORD PTR [ebp+0x14]
1000eb6a:	call   0x10002eb0
1000eb6f:	mov    BYTE PTR [ebp-0x37],0x1
1000eb73:	mov    BYTE PTR [ebp-0x4],0x6
1000eb77:	lea    ecx,[ebp-0x14]
1000eb7a:	call   0x100032a0
1000eb7f:	mov    BYTE PTR [ebp-0x4],0x1
1000eb83:	lea    ecx,[ebp-0x18]
1000eb86:	call   0x10002e90
1000eb8b:	mov    BYTE PTR [ebp-0x4],0x0
1000eb8f:	lea    ecx,[ebp-0x20]
1000eb92:	call   0x10002e90
1000eb97:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000eb9e:	lea    ecx,[ebp-0x1c]
1000eba1:	call   0x10002e90
1000eba6:	mov    al,BYTE PTR [ebp-0x37]
1000eba9:	mov    ecx,DWORD PTR [ebp-0xc]
1000ebac:	mov    DWORD PTR fs:0x0,ecx
1000ebb3:	pop    ecx
1000ebb4:	mov    esp,ebp
1000ebb6:	pop    ebp
1000ebb7:	ret    
1000ebb8:	int3   
1000ebb9:	int3   
1000ebba:	int3   
1000ebbb:	int3   
1000ebbc:	int3   
1000ebbd:	int3   
1000ebbe:	int3   
1000ebbf:	int3   
1000ebc0:	push   ebp
1000ebc1:	mov    ebp,esp
1000ebc3:	push   0xffffffff
1000ebc5:	push   0x1002a367
1000ebca:	mov    eax,fs:0x0
1000ebd0:	push   eax
1000ebd1:	push   ecx
1000ebd2:	mov    eax,0x1138
1000ebd7:	call   0x10016500
1000ebdc:	mov    eax,ds:0x10064694
1000ebe1:	xor    eax,ebp
1000ebe3:	mov    DWORD PTR [ebp-0x20],eax
1000ebe6:	push   ebx
1000ebe7:	push   esi
1000ebe8:	push   edi
1000ebe9:	push   eax
1000ebea:	lea    eax,[ebp-0xc]
1000ebed:	mov    fs:0x0,eax
1000ebf3:	mov    DWORD PTR [ebp-0x10],esp
1000ebf6:	mov    DWORD PTR [ebp-0x4],0x0
1000ebfd:	mov    ecx,DWORD PTR [ebp+0x8]
1000ec00:	call   0x1000c060
1000ec05:	mov    DWORD PTR [ebp-0x1108],eax
1000ec0b:	mov    eax,DWORD PTR [ebp-0x1108]
1000ec11:	mov    DWORD PTR [ebp-0x48],eax
1000ec14:	lea    ecx,[ebp-0x10cc]
1000ec1a:	push   ecx
1000ec1b:	mov    ecx,DWORD PTR [ebp+0x8]
1000ec1e:	call   0x1000bfb0
1000ec23:	mov    DWORD PTR [ebp-0x110c],eax
1000ec29:	mov    BYTE PTR [ebp-0x4],0x1
1000ec2d:	cmp    DWORD PTR [ebp-0x48],0x2
1000ec31:	je     0x1000ec54
1000ec33:	mov    BYTE PTR [ebp-0x10f9],0x1
1000ec3a:	mov    BYTE PTR [ebp-0x4],0x0
1000ec3e:	lea    ecx,[ebp-0x10cc]
1000ec44:	call   0x10002b80
1000ec49:	mov    al,BYTE PTR [ebp-0x10f9]
1000ec4f:	jmp    0x1000f021
1000ec54:	lea    ecx,[ebp-0x10cc]
1000ec5a:	call   0x10002d00
1000ec5f:	mov    DWORD PTR [ebp-0x1110],eax
1000ec65:	cmp    DWORD PTR [ebp-0x1110],0x0
1000ec6c:	jne    0x1000ec8f
1000ec6e:	mov    BYTE PTR [ebp-0x10fa],0x1
1000ec75:	mov    BYTE PTR [ebp-0x4],0x0
1000ec79:	lea    ecx,[ebp-0x10cc]
1000ec7f:	call   0x10002b80
1000ec84:	mov    al,BYTE PTR [ebp-0x10fa]
1000ec8a:	jmp    0x1000f021
1000ec8f:	push   0x1004ff44
1000ec94:	push   0xc
1000ec96:	push   0x1004ff74
1000ec9b:	call   0x10003540
1000eca0:	add    esp,0xc
1000eca3:	mov    DWORD PTR [ebp-0x1114],eax
1000eca9:	mov    edx,DWORD PTR [ebp-0x1114]
1000ecaf:	push   edx
1000ecb0:	lea    ecx,[ebp-0x10d0]
1000ecb6:	call   0x10002d50
1000ecbb:	mov    DWORD PTR [ebp-0x1118],eax
1000ecc1:	mov    BYTE PTR [ebp-0x4],0x2
1000ecc5:	lea    ecx,[ebp-0x40]
1000ecc8:	call   0x10002d10
1000eccd:	mov    BYTE PTR [ebp-0x4],0x3
1000ecd1:	lea    ecx,[ebp-0x18]
1000ecd4:	call   0x10002d10
1000ecd9:	mov    BYTE PTR [ebp-0x4],0x4
1000ecdd:	lea    ecx,[ebp-0x10cc]
1000ece3:	call   0x10002d00
1000ece8:	mov    DWORD PTR [ebp-0x111c],eax
1000ecee:	lea    ecx,[ebp-0x10cc]
1000ecf4:	call   0x10002cf0
1000ecf9:	mov    DWORD PTR [ebp-0x1120],eax
1000ecff:	lea    eax,[ebp-0x18]
1000ed02:	push   eax
1000ed03:	lea    ecx,[ebp-0x40]
1000ed06:	push   ecx
1000ed07:	lea    edx,[ebp-0x10d0]
1000ed0d:	push   edx
1000ed0e:	mov    eax,DWORD PTR [ebp-0x111c]
1000ed14:	push   eax
1000ed15:	mov    ecx,DWORD PTR [ebp-0x1120]
1000ed1b:	push   ecx
1000ed1c:	call   0x1000e910
1000ed21:	add    esp,0x14
1000ed24:	mov    BYTE PTR [ebp-0x1121],al
1000ed2a:	movzx  edx,BYTE PTR [ebp-0x1121]
1000ed31:	test   edx,edx
1000ed33:	jne    0x1000ed7d
1000ed35:	mov    BYTE PTR [ebp-0x10fb],0x1
1000ed3c:	mov    BYTE PTR [ebp-0x4],0x3
1000ed40:	lea    ecx,[ebp-0x18]
1000ed43:	call   0x10002e90
1000ed48:	mov    BYTE PTR [ebp-0x4],0x2
1000ed4c:	lea    ecx,[ebp-0x40]
1000ed4f:	call   0x10002e90
1000ed54:	mov    BYTE PTR [ebp-0x4],0x1
1000ed58:	lea    ecx,[ebp-0x10d0]
1000ed5e:	call   0x10002e90
1000ed63:	mov    BYTE PTR [ebp-0x4],0x0
1000ed67:	lea    ecx,[ebp-0x10cc]
1000ed6d:	call   0x10002b80
1000ed72:	mov    al,BYTE PTR [ebp-0x10fb]
1000ed78:	jmp    0x1000f021
1000ed7d:	call   0x10001000
1000ed82:	mov    DWORD PTR [ebp-0x10ac],eax
1000ed88:	push   0x0
1000ed8a:	lea    eax,[ebp-0x1100]
1000ed90:	push   eax
1000ed91:	call   0x10001b80
1000ed96:	add    esp,0x8
1000ed99:	mov    DWORD PTR [ebp-0x1128],eax
1000ed9f:	mov    ecx,DWORD PTR [ebp-0x1128]
1000eda5:	mov    DWORD PTR [ebp-0x112c],ecx
1000edab:	mov    BYTE PTR [ebp-0x4],0x5
1000edaf:	push   0x1004ff90
1000edb4:	mov    edx,DWORD PTR [ebp-0x112c]
1000edba:	push   edx
1000edbb:	lea    eax,[ebp-0x44]
1000edbe:	push   eax
1000edbf:	call   0x100030b0
1000edc4:	add    esp,0xc
1000edc7:	mov    DWORD PTR [ebp-0x1130],eax
1000edcd:	mov    BYTE PTR [ebp-0x4],0x7
1000edd1:	lea    ecx,[ebp-0x1100]
1000edd7:	call   0x10002e90
1000eddc:	lea    ecx,[ebp-0x18]
1000eddf:	call   0x10003330
1000ede4:	mov    DWORD PTR [ebp-0x4c],eax
1000ede7:	cmp    DWORD PTR [ebp-0x4c],0x0
1000edeb:	jne    0x1000edf9
1000eded:	mov    DWORD PTR [ebp-0x1134],0x0
1000edf7:	jmp    0x1000ee60
1000edf9:	mov    ecx,DWORD PTR [ebp-0x4c]
1000edfc:	push   ecx
1000edfd:	call   DWORD PTR ds:0x1002c028
1000ee03:	add    eax,0x1
1000ee06:	mov    DWORD PTR [ebp-0x14],eax
1000ee09:	cmp    DWORD PTR [ebp-0x14],0x3fffffff
1000ee10:	jle    0x1000ee1e
1000ee12:	mov    DWORD PTR [ebp-0x1138],0x0
1000ee1c:	jmp    0x1000ee54
1000ee1e:	mov    eax,DWORD PTR [ebp-0x14]
1000ee21:	shl    eax,1
1000ee23:	call   0x10015af0
1000ee28:	mov    DWORD PTR [ebp-0x113c],esp
1000ee2e:	mov    DWORD PTR [ebp-0x10],esp
1000ee31:	mov    edx,DWORD PTR [ebp-0x10ac]
1000ee37:	push   edx
1000ee38:	mov    eax,DWORD PTR [ebp-0x14]
1000ee3b:	shl    eax,1
1000ee3d:	push   eax
1000ee3e:	mov    ecx,DWORD PTR [ebp-0x4c]
1000ee41:	push   ecx
1000ee42:	mov    edx,DWORD PTR [ebp-0x113c]
1000ee48:	push   edx
1000ee49:	call   0x10001010
1000ee4e:	mov    DWORD PTR [ebp-0x1138],eax
1000ee54:	mov    eax,DWORD PTR [ebp-0x1138]
1000ee5a:	mov    DWORD PTR [ebp-0x1134],eax
1000ee60:	mov    ecx,DWORD PTR [ebp-0x1134]
1000ee66:	push   ecx
1000ee67:	lea    ecx,[ebp-0x1104]
1000ee6d:	call   0x10002e00
1000ee72:	mov    DWORD PTR [ebp-0x1140],eax
1000ee78:	mov    BYTE PTR [ebp-0x4],0x8
1000ee7c:	lea    edx,[ebp-0x44]
1000ee7f:	push   edx
1000ee80:	lea    eax,[ebp-0x1104]
1000ee86:	push   eax
1000ee87:	call   0x10002080
1000ee8c:	add    esp,0x8
1000ee8f:	mov    BYTE PTR [ebp-0x4],0x7
1000ee93:	lea    ecx,[ebp-0x1104]
1000ee99:	call   0x10002e90
1000ee9e:	mov    DWORD PTR [ebp-0x10a8],0x0
1000eea8:	push   0x40
1000eeaa:	push   0x0
1000eeac:	lea    ecx,[ebp-0x10a4]
1000eeb2:	push   ecx
1000eeb3:	call   0x10016530
1000eeb8:	add    esp,0xc
1000eebb:	mov    DWORD PTR [ebp-0x60],0x0
1000eec2:	xor    edx,edx
1000eec4:	mov    DWORD PTR [ebp-0x5c],edx
1000eec7:	mov    DWORD PTR [ebp-0x58],edx
1000eeca:	mov    DWORD PTR [ebp-0x54],edx
1000eecd:	mov    DWORD PTR [ebp-0x10a8],0x44
1000eed7:	mov    DWORD PTR [ebp-0x50],0x1000
1000eede:	lea    eax,[ebp-0x3c]
1000eee1:	push   eax
1000eee2:	call   0x1000bbb0
1000eee7:	add    esp,0x4
1000eeea:	mov    DWORD PTR [ebp-0x1144],eax
1000eef0:	mov    BYTE PTR [ebp-0x4],0x9
1000eef4:	mov    DWORD PTR [ebp-0x1c],0x0
1000eefb:	mov    DWORD PTR [ebp-0x1c],0x400
1000ef02:	lea    ecx,[ebp-0x3c]
1000ef05:	call   0x10002cf0
1000ef0a:	mov    DWORD PTR [ebp-0x1148],eax
1000ef10:	lea    ecx,[ebp-0x60]
1000ef13:	push   ecx
1000ef14:	lea    edx,[ebp-0x10a8]
1000ef1a:	push   edx
1000ef1b:	push   0x0
1000ef1d:	mov    eax,DWORD PTR [ebp-0x1148]
1000ef23:	push   eax
1000ef24:	mov    ecx,DWORD PTR [ebp-0x1c]
1000ef27:	push   ecx
1000ef28:	push   0x1
1000ef2a:	push   0x0
1000ef2c:	push   0x0
1000ef2e:	push   0x0
1000ef30:	lea    ecx,[ebp-0x18]
1000ef33:	call   0x10003330
1000ef38:	push   eax
1000ef39:	call   DWORD PTR ds:0x1002c0c4
1000ef3f:	test   eax,eax
1000ef41:	je     0x1000ef57
1000ef43:	mov    edx,DWORD PTR [ebp-0x5c]
1000ef46:	push   edx
1000ef47:	call   DWORD PTR ds:0x1002c058
1000ef4d:	mov    eax,DWORD PTR [ebp-0x60]
1000ef50:	push   eax
1000ef51:	call   DWORD PTR ds:0x1002c058
1000ef57:	lea    ecx,[ebp-0x18]
1000ef5a:	call   0x10003330
1000ef5f:	push   eax
1000ef60:	call   DWORD PTR ds:0x1002c0b8
1000ef66:	test   eax,eax
1000ef68:	jne    0x1000ef7d
1000ef6a:	push   0x4
1000ef6c:	push   0x0
1000ef6e:	lea    ecx,[ebp-0x18]
1000ef71:	call   0x10003330
1000ef76:	push   eax
1000ef77:	call   DWORD PTR ds:0x1002c0a4
1000ef7d:	lea    ecx,[ebp-0x40]
1000ef80:	call   0x10003330
1000ef85:	push   eax
1000ef86:	call   DWORD PTR ds:0x1002c0b8
1000ef8c:	test   eax,eax
1000ef8e:	jne    0x1000efa3
1000ef90:	push   0x4
1000ef92:	push   0x0
1000ef94:	lea    ecx,[ebp-0x40]
1000ef97:	call   0x10003330
1000ef9c:	push   eax
1000ef9d:	call   DWORD PTR ds:0x1002c0a4
1000efa3:	mov    BYTE PTR [ebp-0x4],0x7
1000efa7:	lea    ecx,[ebp-0x3c]
1000efaa:	call   0x10002b80
1000efaf:	mov    BYTE PTR [ebp-0x4],0x4
1000efb3:	lea    ecx,[ebp-0x44]
1000efb6:	call   0x10002e90
1000efbb:	mov    BYTE PTR [ebp-0x4],0x3
1000efbf:	lea    ecx,[ebp-0x18]
1000efc2:	call   0x10002e90
1000efc7:	mov    BYTE PTR [ebp-0x4],0x2
1000efcb:	lea    ecx,[ebp-0x40]
1000efce:	call   0x10002e90
1000efd3:	mov    BYTE PTR [ebp-0x4],0x1
1000efd7:	lea    ecx,[ebp-0x10d0]
1000efdd:	call   0x10002e90
1000efe2:	mov    BYTE PTR [ebp-0x4],0x0
1000efe6:	lea    ecx,[ebp-0x10cc]
1000efec:	call   0x10002b80
1000eff1:	jmp    0x1000f018
1000eff3:	lea    ecx,[ebp-0x10f8]
1000eff9:	call   0x1000be30
1000effe:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f005:	mov    eax,0x1000f01f
1000f00a:	ret    
1000f00b:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f012:	mov    eax,0x1000f01f
1000f017:	ret    
1000f018:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f01f:	mov    al,0x1
1000f021:	lea    esp,[ebp-0x1158]
1000f027:	mov    ecx,DWORD PTR [ebp-0xc]
1000f02a:	mov    DWORD PTR fs:0x0,ecx
1000f031:	pop    ecx
1000f032:	pop    edi
1000f033:	pop    esi
1000f034:	pop    ebx
1000f035:	mov    ecx,DWORD PTR [ebp-0x20]
1000f038:	xor    ecx,ebp
1000f03a:	call   0x10015adb
1000f03f:	mov    esp,ebp
1000f041:	pop    ebp
1000f042:	ret    
1000f043:	int3   
1000f044:	int3   
1000f045:	int3   
1000f046:	int3   
1000f047:	int3   
1000f048:	int3   
1000f049:	int3   
1000f04a:	int3   
1000f04b:	int3   
1000f04c:	int3   
1000f04d:	int3   
1000f04e:	int3   
1000f04f:	int3   
1000f050:	push   ebp
1000f051:	mov    ebp,esp
1000f053:	push   0xffffffff
1000f055:	push   0x1002a3c5
1000f05a:	mov    eax,fs:0x0
1000f060:	push   eax
1000f061:	sub    esp,0x84
1000f067:	mov    eax,ds:0x10064694
1000f06c:	xor    eax,ebp
1000f06e:	mov    DWORD PTR [ebp-0x10],eax
1000f071:	push   eax
1000f072:	lea    eax,[ebp-0xc]
1000f075:	mov    fs:0x0,eax
1000f07b:	lea    eax,[ebp-0x64]
1000f07e:	push   eax
1000f07f:	mov    ecx,DWORD PTR [ebp+0x8]
1000f082:	call   0x1000bfb0
1000f087:	mov    DWORD PTR [ebp-0x4],0x0
1000f08e:	lea    ecx,[ebp-0x48]
1000f091:	push   ecx
1000f092:	mov    ecx,DWORD PTR [ebp+0x8]
1000f095:	call   0x1000bfb0
1000f09a:	mov    BYTE PTR [ebp-0x4],0x1
1000f09e:	mov    ecx,DWORD PTR [ebp+0x8]
1000f0a1:	call   0x1000c220
1000f0a6:	push   eax
1000f0a7:	lea    edx,[ebp-0x2c]
1000f0aa:	push   edx
1000f0ab:	mov    ecx,DWORD PTR [ebp+0x8]
1000f0ae:	call   0x1000c160
1000f0b3:	mov    BYTE PTR [ebp-0x4],0x2
1000f0b7:	call   0x1000e430
1000f0bc:	movzx  eax,al
1000f0bf:	test   eax,eax
1000f0c1:	jne    0x1000f0fe
1000f0c3:	lea    ecx,[ebp-0x64]
1000f0c6:	call   0x1000f880
1000f0cb:	movzx  ecx,al
1000f0ce:	test   ecx,ecx
1000f0d0:	je     0x1000f0fe
1000f0d2:	mov    BYTE PTR [ebp-0x4],0x1
1000f0d6:	lea    ecx,[ebp-0x2c]
1000f0d9:	call   0x10002b80
1000f0de:	mov    BYTE PTR [ebp-0x4],0x0
1000f0e2:	lea    ecx,[ebp-0x48]
1000f0e5:	call   0x10002b80
1000f0ea:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f0f1:	lea    ecx,[ebp-0x64]
1000f0f4:	call   0x10002b80
1000f0f9:	jmp    0x1000f265
1000f0fe:	mov    ecx,0x10065e18
1000f103:	call   0x1000f8c0
1000f108:	test   eax,eax
1000f10a:	jne    0x1000f157
1000f10c:	push   0x20
1000f10e:	call   0x10016414
1000f113:	add    esp,0x4
1000f116:	mov    DWORD PTR [ebp-0x6c],eax
1000f119:	mov    BYTE PTR [ebp-0x4],0x3
1000f11d:	cmp    DWORD PTR [ebp-0x6c],0x0
1000f121:	je     0x1000f136
1000f123:	push   0x1
1000f125:	lea    edx,[ebp-0x64]
1000f128:	push   edx
1000f129:	mov    ecx,DWORD PTR [ebp-0x6c]
1000f12c:	call   0x1000f630
1000f131:	mov    DWORD PTR [ebp-0x80],eax
1000f134:	jmp    0x1000f13d
1000f136:	mov    DWORD PTR [ebp-0x80],0x0
1000f13d:	mov    eax,DWORD PTR [ebp-0x80]
1000f140:	mov    DWORD PTR [ebp-0x68],eax
1000f143:	mov    BYTE PTR [ebp-0x4],0x2
1000f147:	mov    ecx,DWORD PTR [ebp-0x68]
1000f14a:	push   ecx
1000f14b:	mov    ecx,0x10065e18
1000f150:	call   0x1000f8d0
1000f155:	jmp    0x1000f164
1000f157:	push   0x1002ca77
1000f15c:	lea    ecx,[ebp-0x64]
1000f15f:	call   0x10002bd0
1000f164:	mov    ecx,0x10065e0c
1000f169:	call   0x1000f8c0
1000f16e:	test   eax,eax
1000f170:	jne    0x1000f1c6
1000f172:	push   0x20
1000f174:	call   0x10016414
1000f179:	add    esp,0x4
1000f17c:	mov    DWORD PTR [ebp-0x74],eax
1000f17f:	mov    BYTE PTR [ebp-0x4],0x4
1000f183:	cmp    DWORD PTR [ebp-0x74],0x0
1000f187:	je     0x1000f19f
1000f189:	push   0x1
1000f18b:	lea    edx,[ebp-0x48]
1000f18e:	push   edx
1000f18f:	mov    ecx,DWORD PTR [ebp-0x74]
1000f192:	call   0x1000f630
1000f197:	mov    DWORD PTR [ebp-0x84],eax
1000f19d:	jmp    0x1000f1a9
1000f19f:	mov    DWORD PTR [ebp-0x84],0x0
1000f1a9:	mov    eax,DWORD PTR [ebp-0x84]
1000f1af:	mov    DWORD PTR [ebp-0x70],eax
1000f1b2:	mov    BYTE PTR [ebp-0x4],0x2
1000f1b6:	mov    ecx,DWORD PTR [ebp-0x70]
1000f1b9:	push   ecx
1000f1ba:	mov    ecx,0x10065e0c
1000f1bf:	call   0x1000f8d0
1000f1c4:	jmp    0x1000f1d3
1000f1c6:	push   0x1002cad2
1000f1cb:	lea    ecx,[ebp-0x48]
1000f1ce:	call   0x10002bd0
1000f1d3:	mov    BYTE PTR ds:0x10065de8,0x1
1000f1da:	push   ecx
1000f1db:	mov    edx,esp
1000f1dd:	mov    DWORD PTR [ebp-0x78],esp
1000f1e0:	push   edx
1000f1e1:	mov    ecx,0x10065e0c
1000f1e6:	call   0x1000f8a0
1000f1eb:	mov    ecx,eax
1000f1ed:	call   0x1000f710
1000f1f2:	mov    DWORD PTR [ebp-0x88],eax
1000f1f8:	mov    eax,DWORD PTR [ebp-0x88]
1000f1fe:	mov    DWORD PTR [ebp-0x8c],eax
1000f204:	mov    BYTE PTR [ebp-0x4],0x5
1000f208:	push   ecx
1000f209:	mov    ecx,esp
1000f20b:	mov    DWORD PTR [ebp-0x7c],esp
1000f20e:	push   ecx
1000f20f:	mov    ecx,0x10065e18
1000f214:	call   0x1000f8a0
1000f219:	mov    ecx,eax
1000f21b:	call   0x1000f710
1000f220:	mov    DWORD PTR [ebp-0x90],eax
1000f226:	lea    edx,[ebp-0x2c]
1000f229:	push   edx
1000f22a:	lea    eax,[ebp-0x48]
1000f22d:	push   eax
1000f22e:	lea    ecx,[ebp-0x64]
1000f231:	push   ecx
1000f232:	mov    BYTE PTR [ebp-0x4],0x2
1000f236:	call   0x1000e540
1000f23b:	add    esp,0x14
1000f23e:	mov    BYTE PTR [ebp-0x4],0x1
1000f242:	lea    ecx,[ebp-0x2c]
1000f245:	call   0x10002b80
1000f24a:	mov    BYTE PTR [ebp-0x4],0x0
1000f24e:	lea    ecx,[ebp-0x48]
1000f251:	call   0x10002b80
1000f256:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f25d:	lea    ecx,[ebp-0x64]
1000f260:	call   0x10002b80
1000f265:	mov    ecx,DWORD PTR [ebp-0xc]
1000f268:	mov    DWORD PTR fs:0x0,ecx
1000f26f:	pop    ecx
1000f270:	mov    ecx,DWORD PTR [ebp-0x10]
1000f273:	xor    ecx,ebp
1000f275:	call   0x10015adb
1000f27a:	mov    esp,ebp
1000f27c:	pop    ebp
1000f27d:	ret    
1000f27e:	int3   
1000f27f:	int3   
1000f280:	push   ebp
1000f281:	mov    ebp,esp
1000f283:	push   0xffffffff
1000f285:	push   0x1002a3f5
1000f28a:	mov    eax,fs:0x0
1000f290:	push   eax
1000f291:	push   ecx
1000f292:	sub    esp,0x5c
1000f295:	mov    eax,ds:0x10064694
1000f29a:	xor    eax,ebp
1000f29c:	mov    DWORD PTR [ebp-0x24],eax
1000f29f:	push   ebx
1000f2a0:	push   esi
1000f2a1:	push   edi
1000f2a2:	push   eax
1000f2a3:	lea    eax,[ebp-0xc]
1000f2a6:	mov    fs:0x0,eax
1000f2ac:	mov    DWORD PTR [ebp-0x10],esp
1000f2af:	call   0x1000e4c0
1000f2b4:	mov    DWORD PTR [ebp-0x4],0x0
1000f2bb:	mov    eax,DWORD PTR [ebp+0xc]
1000f2be:	push   eax
1000f2bf:	mov    ecx,DWORD PTR [ebp+0x8]
1000f2c2:	push   ecx
1000f2c3:	lea    ecx,[ebp-0x20]
1000f2c6:	call   0x1000bf90
1000f2cb:	lea    ecx,[ebp-0x20]
1000f2ce:	call   0x1000c060
1000f2d3:	mov    DWORD PTR [ebp-0x6c],eax
1000f2d6:	mov    edx,DWORD PTR [ebp-0x6c]
1000f2d9:	mov    DWORD PTR [ebp-0x14],edx
1000f2dc:	cmp    DWORD PTR [ebp-0x14],0x0
1000f2e0:	jne    0x1000f2fa
1000f2e2:	lea    eax,[ebp-0x20]
1000f2e5:	push   eax
1000f2e6:	call   0x1000ebc0
1000f2eb:	add    esp,0x4
1000f2ee:	lea    ecx,[ebp-0x20]
1000f2f1:	push   ecx
1000f2f2:	call   0x1000f050
1000f2f7:	add    esp,0x4
1000f2fa:	jmp    0x1000f34b
1000f2fc:	lea    ecx,[ebp-0x4c]
1000f2ff:	call   0x1000be30
1000f304:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f30b:	mov    eax,0x1000f352
1000f310:	ret    
1000f311:	push   0x1002cad3
1000f316:	lea    ecx,[ebp-0x68]
1000f319:	call   0x10002b40
1000f31e:	mov    BYTE PTR [ebp-0x4],0x2
1000f322:	lea    edx,[ebp-0x68]
1000f325:	push   edx
1000f326:	push   0x0
1000f328:	push   0x4
1000f32a:	call   0x1000c240
1000f32f:	add    esp,0xc
1000f332:	mov    BYTE PTR [ebp-0x4],0x1
1000f336:	lea    ecx,[ebp-0x68]
1000f339:	call   0x10002b80
1000f33e:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f345:	mov    eax,0x1000f352
1000f34a:	ret    
1000f34b:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f352:	mov    ecx,DWORD PTR [ebp-0xc]
1000f355:	mov    DWORD PTR fs:0x0,ecx
1000f35c:	pop    ecx
1000f35d:	pop    edi
1000f35e:	pop    esi
1000f35f:	pop    ebx
1000f360:	mov    ecx,DWORD PTR [ebp-0x24]
1000f363:	xor    ecx,ebp
1000f365:	call   0x10015adb
1000f36a:	mov    esp,ebp
1000f36c:	pop    ebp
1000f36d:	ret    
1000f36e:	int3   
1000f36f:	int3   
1000f370:	push   ebp
1000f371:	mov    ebp,esp
1000f373:	push   ecx
1000f374:	mov    DWORD PTR [ebp-0x4],0x0
1000f37b:	mov    ecx,0x10065e18
1000f380:	call   0x1000f8c0
1000f385:	test   eax,eax
1000f387:	jne    0x1000f39f
1000f389:	mov    ecx,DWORD PTR [ebp+0x8]
1000f38c:	call   0x10002d10
1000f391:	mov    eax,DWORD PTR [ebp-0x4]
1000f394:	or     eax,0x1
1000f397:	mov    DWORD PTR [ebp-0x4],eax
1000f39a:	mov    eax,DWORD PTR [ebp+0x8]
1000f39d:	jmp    0x1000f3c0
1000f39f:	mov    ecx,DWORD PTR [ebp+0x8]
1000f3a2:	push   ecx
1000f3a3:	mov    ecx,0x10065e18
1000f3a8:	call   0x1000f8a0
1000f3ad:	mov    ecx,eax
1000f3af:	call   0x1000f710
1000f3b4:	mov    edx,DWORD PTR [ebp-0x4]
1000f3b7:	or     edx,0x1
1000f3ba:	mov    DWORD PTR [ebp-0x4],edx
1000f3bd:	mov    eax,DWORD PTR [ebp+0x8]
1000f3c0:	mov    esp,ebp
1000f3c2:	pop    ebp
1000f3c3:	ret    
1000f3c4:	int3   
1000f3c5:	int3   
1000f3c6:	int3   
1000f3c7:	int3   
1000f3c8:	int3   
1000f3c9:	int3   
1000f3ca:	int3   
1000f3cb:	int3   
1000f3cc:	int3   
1000f3cd:	int3   
1000f3ce:	int3   
1000f3cf:	int3   
1000f3d0:	push   ebp
1000f3d1:	mov    ebp,esp
1000f3d3:	sub    esp,0x8
1000f3d6:	mov    DWORD PTR [ebp-0x8],0x0
1000f3dd:	mov    DWORD PTR [ebp-0x4],0x10065e18
1000f3e4:	mov    ecx,DWORD PTR [ebp-0x4]
1000f3e7:	call   0x1000f8c0
1000f3ec:	test   eax,eax
1000f3ee:	jne    0x1000f406
1000f3f0:	mov    ecx,DWORD PTR [ebp+0x8]
1000f3f3:	call   0x10002d10
1000f3f8:	mov    eax,DWORD PTR [ebp-0x8]
1000f3fb:	or     eax,0x1
1000f3fe:	mov    DWORD PTR [ebp-0x8],eax
1000f401:	mov    eax,DWORD PTR [ebp+0x8]
1000f404:	jmp    0x1000f425
1000f406:	mov    ecx,DWORD PTR [ebp+0x8]
1000f409:	push   ecx
1000f40a:	mov    ecx,DWORD PTR [ebp-0x4]
1000f40d:	call   0x1000f8a0
1000f412:	mov    ecx,eax
1000f414:	call   0x1000f710
1000f419:	mov    edx,DWORD PTR [ebp-0x8]
1000f41c:	or     edx,0x1
1000f41f:	mov    DWORD PTR [ebp-0x8],edx
1000f422:	mov    eax,DWORD PTR [ebp+0x8]
1000f425:	mov    esp,ebp
1000f427:	pop    ebp
1000f428:	ret    
1000f429:	int3   
1000f42a:	int3   
1000f42b:	int3   
1000f42c:	int3   
1000f42d:	int3   
1000f42e:	int3   
1000f42f:	int3   
1000f430:	push   ebp
1000f431:	mov    ebp,esp
1000f433:	push   0xffffffff
1000f435:	push   0x1002a42a
1000f43a:	mov    eax,fs:0x0
1000f440:	push   eax
1000f441:	sub    esp,0x18
1000f444:	mov    eax,ds:0x10064694
1000f449:	xor    eax,ebp
1000f44b:	push   eax
1000f44c:	lea    eax,[ebp-0xc]
1000f44f:	mov    fs:0x0,eax
1000f455:	mov    DWORD PTR [ebp-0x1c],0x0
1000f45c:	mov    ecx,0x10065e18
1000f461:	call   0x1000f8c0
1000f466:	test   eax,eax
1000f468:	jne    0x1000f483
1000f46a:	mov    ecx,DWORD PTR [ebp+0x8]
1000f46d:	call   0x10002d10
1000f472:	mov    eax,DWORD PTR [ebp-0x1c]
1000f475:	or     eax,0x1
1000f478:	mov    DWORD PTR [ebp-0x1c],eax
1000f47b:	mov    eax,DWORD PTR [ebp+0x8]
1000f47e:	jmp    0x1000f519
1000f483:	lea    ecx,[ebp-0x14]
1000f486:	push   ecx
1000f487:	mov    ecx,0x10065e18
1000f48c:	call   0x1000f8a0
1000f491:	mov    ecx,eax
1000f493:	call   0x1000f710
1000f498:	mov    DWORD PTR [ebp-0x4],0x0
1000f49f:	push   0x5c
1000f4a1:	lea    ecx,[ebp-0x14]
1000f4a4:	call   0x10002f70
1000f4a9:	mov    DWORD PTR [ebp-0x10],eax
1000f4ac:	cmp    DWORD PTR [ebp-0x10],0xffffffff
1000f4b0:	je     0x1000f4f2
1000f4b2:	lea    ecx,[ebp-0x14]
1000f4b5:	call   0x100031e0
1000f4ba:	sub    eax,DWORD PTR [ebp-0x10]
1000f4bd:	sub    eax,0x1
1000f4c0:	push   eax
1000f4c1:	lea    edx,[ebp-0x18]
1000f4c4:	push   edx
1000f4c5:	lea    ecx,[ebp-0x14]
1000f4c8:	call   0x10002fa0
1000f4cd:	mov    DWORD PTR [ebp-0x20],eax
1000f4d0:	mov    eax,DWORD PTR [ebp-0x20]
1000f4d3:	mov    DWORD PTR [ebp-0x24],eax
1000f4d6:	mov    BYTE PTR [ebp-0x4],0x1
1000f4da:	mov    ecx,DWORD PTR [ebp-0x24]
1000f4dd:	push   ecx
1000f4de:	lea    ecx,[ebp-0x14]
1000f4e1:	call   0x10002eb0
1000f4e6:	mov    BYTE PTR [ebp-0x4],0x0
1000f4ea:	lea    ecx,[ebp-0x18]
1000f4ed:	call   0x10002e90
1000f4f2:	lea    edx,[ebp-0x14]
1000f4f5:	push   edx
1000f4f6:	mov    ecx,DWORD PTR [ebp+0x8]
1000f4f9:	call   0x10002d30
1000f4fe:	mov    eax,DWORD PTR [ebp-0x1c]
1000f501:	or     eax,0x1
1000f504:	mov    DWORD PTR [ebp-0x1c],eax
1000f507:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f50e:	lea    ecx,[ebp-0x14]
1000f511:	call   0x10002e90
1000f516:	mov    eax,DWORD PTR [ebp+0x8]
1000f519:	mov    ecx,DWORD PTR [ebp-0xc]
1000f51c:	mov    DWORD PTR fs:0x0,ecx
1000f523:	pop    ecx
1000f524:	mov    esp,ebp
1000f526:	pop    ebp
1000f527:	ret    
1000f528:	int3   
1000f529:	int3   
1000f52a:	int3   
1000f52b:	int3   
1000f52c:	int3   
1000f52d:	int3   
1000f52e:	int3   
1000f52f:	int3   
1000f530:	push   ebp
1000f531:	mov    ebp,esp
1000f533:	push   0xffffffff
1000f535:	push   0x1002a455
1000f53a:	mov    eax,fs:0x0
1000f540:	push   eax
1000f541:	sub    esp,0x1c
1000f544:	mov    eax,ds:0x10064694
1000f549:	xor    eax,ebp
1000f54b:	push   eax
1000f54c:	lea    eax,[ebp-0xc]
1000f54f:	mov    fs:0x0,eax
1000f555:	mov    DWORD PTR [ebp-0x20],0x0
1000f55c:	mov    DWORD PTR [ebp-0x14],0x10065e18
1000f563:	mov    ecx,DWORD PTR [ebp-0x14]
1000f566:	call   0x1000f8c0
1000f56b:	test   eax,eax
1000f56d:	jne    0x1000f588
1000f56f:	mov    ecx,DWORD PTR [ebp+0x8]
1000f572:	call   0x10002d10
1000f577:	mov    eax,DWORD PTR [ebp-0x20]
1000f57a:	or     eax,0x1
1000f57d:	mov    DWORD PTR [ebp-0x20],eax
1000f580:	mov    eax,DWORD PTR [ebp+0x8]
1000f583:	jmp    0x1000f61c
1000f588:	lea    ecx,[ebp-0x18]
1000f58b:	push   ecx
1000f58c:	mov    ecx,DWORD PTR [ebp-0x14]
1000f58f:	call   0x1000f8a0
1000f594:	mov    ecx,eax
1000f596:	call   0x1000f710
1000f59b:	mov    DWORD PTR [ebp-0x4],0x0
1000f5a2:	push   0x5c
1000f5a4:	lea    ecx,[ebp-0x18]
1000f5a7:	call   0x10002f70
1000f5ac:	mov    DWORD PTR [ebp-0x10],eax
1000f5af:	cmp    DWORD PTR [ebp-0x10],0xffffffff
1000f5b3:	je     0x1000f5f5
1000f5b5:	lea    ecx,[ebp-0x18]
1000f5b8:	call   0x100031e0
1000f5bd:	sub    eax,DWORD PTR [ebp-0x10]
1000f5c0:	sub    eax,0x1
1000f5c3:	push   eax
1000f5c4:	lea    edx,[ebp-0x1c]
1000f5c7:	push   edx
1000f5c8:	lea    ecx,[ebp-0x18]
1000f5cb:	call   0x10002fa0
1000f5d0:	mov    DWORD PTR [ebp-0x24],eax
1000f5d3:	mov    eax,DWORD PTR [ebp-0x24]
1000f5d6:	mov    DWORD PTR [ebp-0x28],eax
1000f5d9:	mov    BYTE PTR [ebp-0x4],0x1
1000f5dd:	mov    ecx,DWORD PTR [ebp-0x28]
1000f5e0:	push   ecx
1000f5e1:	lea    ecx,[ebp-0x18]
1000f5e4:	call   0x10002eb0
1000f5e9:	mov    BYTE PTR [ebp-0x4],0x0
1000f5ed:	lea    ecx,[ebp-0x1c]
1000f5f0:	call   0x10002e90
1000f5f5:	lea    edx,[ebp-0x18]
1000f5f8:	push   edx
1000f5f9:	mov    ecx,DWORD PTR [ebp+0x8]
1000f5fc:	call   0x10002d30
1000f601:	mov    eax,DWORD PTR [ebp-0x20]
1000f604:	or     eax,0x1
1000f607:	mov    DWORD PTR [ebp-0x20],eax
1000f60a:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f611:	lea    ecx,[ebp-0x18]
1000f614:	call   0x10002e90
1000f619:	mov    eax,DWORD PTR [ebp+0x8]
1000f61c:	mov    ecx,DWORD PTR [ebp-0xc]
1000f61f:	mov    DWORD PTR fs:0x0,ecx
1000f626:	pop    ecx
1000f627:	mov    esp,ebp
1000f629:	pop    ebp
1000f62a:	ret    
1000f62b:	int3   
1000f62c:	int3   
1000f62d:	int3   
1000f62e:	int3   
1000f62f:	int3   
1000f630:	push   ebp
1000f631:	mov    ebp,esp
1000f633:	push   0xffffffff
1000f635:	push   0x1002a493
1000f63a:	mov    eax,fs:0x0
1000f640:	push   eax
1000f641:	sub    esp,0x1c
1000f644:	mov    eax,ds:0x10064694
1000f649:	xor    eax,ebp
1000f64b:	push   eax
1000f64c:	lea    eax,[ebp-0xc]
1000f64f:	mov    fs:0x0,eax
1000f655:	mov    DWORD PTR [ebp-0x18],ecx
1000f658:	mov    ecx,DWORD PTR [ebp-0x18]
1000f65b:	call   0x10002d10
1000f660:	mov    DWORD PTR [ebp-0x4],0x0
1000f667:	mov    ecx,DWORD PTR [ebp-0x18]
1000f66a:	add    ecx,0x4
1000f66d:	call   0x10002b20
1000f672:	mov    BYTE PTR [ebp-0x4],0x1
1000f676:	movzx  eax,BYTE PTR [ebp+0xc]
1000f67a:	test   eax,eax
1000f67c:	je     0x1000f6b3
1000f67e:	push   0x1
1000f680:	lea    ecx,[ebp-0x10]
1000f683:	push   ecx
1000f684:	call   0x100026a0
1000f689:	add    esp,0x8
1000f68c:	mov    DWORD PTR [ebp-0x1c],eax
1000f68f:	mov    edx,DWORD PTR [ebp-0x1c]
1000f692:	mov    DWORD PTR [ebp-0x20],edx
1000f695:	mov    BYTE PTR [ebp-0x4],0x2
1000f699:	mov    eax,DWORD PTR [ebp-0x20]
1000f69c:	push   eax
1000f69d:	mov    ecx,DWORD PTR [ebp-0x18]
1000f6a0:	call   0x10002eb0
1000f6a5:	mov    BYTE PTR [ebp-0x4],0x1
1000f6a9:	lea    ecx,[ebp-0x10]
1000f6ac:	call   0x10002e90
1000f6b1:	jmp    0x1000f6e6
1000f6b3:	push   0x1
1000f6b5:	lea    ecx,[ebp-0x14]
1000f6b8:	push   ecx
1000f6b9:	call   0x100027f0
1000f6be:	add    esp,0x8
1000f6c1:	mov    DWORD PTR [ebp-0x24],eax
1000f6c4:	mov    edx,DWORD PTR [ebp-0x24]
1000f6c7:	mov    DWORD PTR [ebp-0x28],edx
1000f6ca:	mov    BYTE PTR [ebp-0x4],0x3
1000f6ce:	mov    eax,DWORD PTR [ebp-0x28]
1000f6d1:	push   eax
1000f6d2:	mov    ecx,DWORD PTR [ebp-0x18]
1000f6d5:	call   0x10002eb0
1000f6da:	mov    BYTE PTR [ebp-0x4],0x1
1000f6de:	lea    ecx,[ebp-0x14]
1000f6e1:	call   0x10002e90
1000f6e6:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f6ed:	mov    eax,DWORD PTR [ebp-0x18]
1000f6f0:	mov    ecx,DWORD PTR [ebp-0xc]
1000f6f3:	mov    DWORD PTR fs:0x0,ecx
1000f6fa:	pop    ecx
1000f6fb:	mov    esp,ebp
1000f6fd:	pop    ebp
1000f6fe:	ret    0x8
1000f701:	int3   
1000f702:	int3   
1000f703:	int3   
1000f704:	int3   
1000f705:	int3   
1000f706:	int3   
1000f707:	int3   
1000f708:	int3   
1000f709:	int3   
1000f70a:	int3   
1000f70b:	int3   
1000f70c:	int3   
1000f70d:	int3   
1000f70e:	int3   
1000f70f:	int3   
1000f710:	push   ebp
1000f711:	mov    ebp,esp
1000f713:	sub    esp,0x8
1000f716:	mov    DWORD PTR [ebp-0x8],ecx
1000f719:	mov    DWORD PTR [ebp-0x4],0x0
1000f720:	mov    eax,DWORD PTR [ebp-0x8]
1000f723:	push   eax
1000f724:	mov    ecx,DWORD PTR [ebp+0x8]
1000f727:	call   0x10002d30
1000f72c:	mov    ecx,DWORD PTR [ebp-0x4]
1000f72f:	or     ecx,0x1
1000f732:	mov    DWORD PTR [ebp-0x4],ecx
1000f735:	mov    eax,DWORD PTR [ebp+0x8]
1000f738:	mov    esp,ebp
1000f73a:	pop    ebp
1000f73b:	ret    0x4
1000f73e:	int3   
1000f73f:	int3   
1000f740:	push   ebp
1000f741:	mov    ebp,esp
1000f743:	push   0xffffffff
1000f745:	push   0x1002a4b8
1000f74a:	mov    eax,fs:0x0
1000f750:	push   eax
1000f751:	push   ecx
1000f752:	mov    eax,ds:0x10064694
1000f757:	xor    eax,ebp
1000f759:	push   eax
1000f75a:	lea    eax,[ebp-0xc]
1000f75d:	mov    fs:0x0,eax
1000f763:	mov    DWORD PTR [ebp-0x10],ecx
1000f766:	mov    DWORD PTR [ebp-0x4],0x0
1000f76d:	push   0x4
1000f76f:	push   0x0
1000f771:	mov    ecx,DWORD PTR [ebp-0x10]
1000f774:	call   0x10003330
1000f779:	push   eax
1000f77a:	call   DWORD PTR ds:0x1002c0a4
1000f780:	mov    ecx,DWORD PTR [ebp-0x10]
1000f783:	add    ecx,0x4
1000f786:	call   0x10002b80
1000f78b:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000f792:	mov    ecx,DWORD PTR [ebp-0x10]
1000f795:	call   0x10002e90
1000f79a:	mov    ecx,DWORD PTR [ebp-0xc]
1000f79d:	mov    DWORD PTR fs:0x0,ecx
1000f7a4:	pop    ecx
1000f7a5:	mov    esp,ebp
1000f7a7:	pop    ebp
1000f7a8:	ret    
1000f7a9:	int3   
1000f7aa:	int3   
1000f7ab:	int3   
1000f7ac:	int3   
1000f7ad:	int3   
1000f7ae:	int3   
1000f7af:	int3   
1000f7b0:	push   ebp
1000f7b1:	mov    ebp,esp
1000f7b3:	push   ecx
1000f7b4:	mov    DWORD PTR [ebp-0x4],ecx
1000f7b7:	mov    eax,DWORD PTR [ebp-0x4]
1000f7ba:	mov    DWORD PTR [eax],0x0
1000f7c0:	mov    eax,DWORD PTR [ebp-0x4]
1000f7c3:	mov    esp,ebp
1000f7c5:	pop    ebp
1000f7c6:	ret    
1000f7c7:	int3   
1000f7c8:	int3   
1000f7c9:	int3   
1000f7ca:	int3   
1000f7cb:	int3   
1000f7cc:	int3   
1000f7cd:	int3   
1000f7ce:	int3   
1000f7cf:	int3   
1000f7d0:	push   ebp
1000f7d1:	mov    ebp,esp
1000f7d3:	push   ecx
1000f7d4:	mov    DWORD PTR [ebp-0x4],ecx
1000f7d7:	mov    ecx,DWORD PTR [ebp-0x4]
1000f7da:	call   0x1000f850
1000f7df:	mov    esp,ebp
1000f7e1:	pop    ebp
1000f7e2:	ret    
1000f7e3:	int3   
1000f7e4:	int3   
1000f7e5:	int3   
1000f7e6:	int3   
1000f7e7:	int3   
1000f7e8:	int3   
1000f7e9:	int3   
1000f7ea:	int3   
1000f7eb:	int3   
1000f7ec:	int3   
1000f7ed:	int3   
1000f7ee:	int3   
1000f7ef:	int3   
1000f7f0:	push   ebp
1000f7f1:	mov    ebp,esp
1000f7f3:	sub    esp,0x8
1000f7f6:	mov    DWORD PTR [ebp-0x4],ecx
1000f7f9:	mov    eax,DWORD PTR [ebp+0xc]
1000f7fc:	push   eax
1000f7fd:	mov    ecx,DWORD PTR [ebp+0x8]
1000f800:	push   ecx
1000f801:	call   0x10006cf0
1000f806:	add    esp,0x8
1000f809:	mov    DWORD PTR [ebp-0x8],eax
1000f80c:	cmp    DWORD PTR [ebp-0x8],0x0
1000f810:	je     0x1000f823
1000f812:	cmp    DWORD PTR [ebp-0x8],0x1
1000f816:	je     0x1000f82f
1000f818:	cmp    DWORD PTR [ebp-0x8],0x102
1000f81f:	je     0x1000f836
1000f821:	jmp    0x1000f83d
1000f823:	mov    edx,DWORD PTR [ebp-0x4]
1000f826:	mov    eax,DWORD PTR [ebp+0x8]
1000f829:	mov    DWORD PTR [edx],eax
1000f82b:	xor    eax,eax
1000f82d:	jmp    0x1000f842
1000f82f:	mov    eax,0x1
1000f834:	jmp    0x1000f842
1000f836:	mov    eax,0x2
1000f83b:	jmp    0x1000f842
1000f83d:	mov    eax,0x3
1000f842:	mov    esp,ebp
1000f844:	pop    ebp
1000f845:	ret    0x8
1000f848:	int3   
1000f849:	int3   
1000f84a:	int3   
1000f84b:	int3   
1000f84c:	int3   
1000f84d:	int3   
1000f84e:	int3   
1000f84f:	int3   
1000f850:	push   ebp
1000f851:	mov    ebp,esp
1000f853:	push   ecx
1000f854:	mov    DWORD PTR [ebp-0x4],ecx
1000f857:	mov    eax,DWORD PTR [ebp-0x4]
1000f85a:	cmp    DWORD PTR [eax],0x0
1000f85d:	je     0x1000f874
1000f85f:	mov    ecx,DWORD PTR [ebp-0x4]
1000f862:	mov    edx,DWORD PTR [ecx]
1000f864:	push   edx
1000f865:	call   DWORD PTR ds:0x1002c0a8
1000f86b:	mov    eax,DWORD PTR [ebp-0x4]
1000f86e:	mov    DWORD PTR [eax],0x0
1000f874:	mov    esp,ebp
1000f876:	pop    ebp
1000f877:	ret    
1000f878:	int3   
1000f879:	int3   
1000f87a:	int3   
1000f87b:	int3   
1000f87c:	int3   
1000f87d:	int3   
1000f87e:	int3   
1000f87f:	int3   
1000f880:	push   ebp
1000f881:	mov    ebp,esp
1000f883:	push   ecx
1000f884:	mov    DWORD PTR [ebp-0x4],ecx
1000f887:	mov    eax,DWORD PTR [ebp-0x4]
1000f88a:	xor    ecx,ecx
1000f88c:	cmp    DWORD PTR [eax+0x14],0x0
1000f890:	sete   cl
1000f893:	mov    al,cl
1000f895:	mov    esp,ebp
1000f897:	pop    ebp
1000f898:	ret    
1000f899:	int3   
1000f89a:	int3   
1000f89b:	int3   
1000f89c:	int3   
1000f89d:	int3   
1000f89e:	int3   
1000f89f:	int3   
1000f8a0:	push   ebp
1000f8a1:	mov    ebp,esp
1000f8a3:	push   ecx
1000f8a4:	mov    DWORD PTR [ebp-0x4],ecx
1000f8a7:	mov    ecx,DWORD PTR [ebp-0x4]
1000f8aa:	call   0x1000f8c0
1000f8af:	mov    esp,ebp
1000f8b1:	pop    ebp
1000f8b2:	ret    
1000f8b3:	int3   
1000f8b4:	int3   
1000f8b5:	int3   
1000f8b6:	int3   
1000f8b7:	int3   
1000f8b8:	int3   
1000f8b9:	int3   
1000f8ba:	int3   
1000f8bb:	int3   
1000f8bc:	int3   
1000f8bd:	int3   
1000f8be:	int3   
1000f8bf:	int3   
1000f8c0:	push   ebp
1000f8c1:	mov    ebp,esp
1000f8c3:	push   ecx
1000f8c4:	mov    DWORD PTR [ebp-0x4],ecx
1000f8c7:	mov    eax,DWORD PTR [ebp-0x4]
1000f8ca:	mov    eax,DWORD PTR [eax]
1000f8cc:	mov    esp,ebp
1000f8ce:	pop    ebp
1000f8cf:	ret    
1000f8d0:	push   ebp
1000f8d1:	mov    ebp,esp
1000f8d3:	sub    esp,0x10
1000f8d6:	mov    DWORD PTR [ebp-0xc],ecx
1000f8d9:	mov    eax,DWORD PTR [ebp-0xc]
1000f8dc:	mov    ecx,DWORD PTR [ebp+0x8]
1000f8df:	cmp    ecx,DWORD PTR [eax]
1000f8e1:	je     0x1000f90d
1000f8e3:	mov    edx,DWORD PTR [ebp-0xc]
1000f8e6:	mov    eax,DWORD PTR [edx]
1000f8e8:	mov    DWORD PTR [ebp-0x8],eax
1000f8eb:	mov    ecx,DWORD PTR [ebp-0x8]
1000f8ee:	mov    DWORD PTR [ebp-0x4],ecx
1000f8f1:	cmp    DWORD PTR [ebp-0x4],0x0
1000f8f5:	je     0x1000f906
1000f8f7:	push   0x1
1000f8f9:	mov    ecx,DWORD PTR [ebp-0x4]
1000f8fc:	call   0x1000f920
1000f901:	mov    DWORD PTR [ebp-0x10],eax
1000f904:	jmp    0x1000f90d
1000f906:	mov    DWORD PTR [ebp-0x10],0x0
1000f90d:	mov    edx,DWORD PTR [ebp-0xc]
1000f910:	mov    eax,DWORD PTR [ebp+0x8]
1000f913:	mov    DWORD PTR [edx],eax
1000f915:	mov    esp,ebp
1000f917:	pop    ebp
1000f918:	ret    0x4
1000f91b:	int3   
1000f91c:	int3   
1000f91d:	int3   
1000f91e:	int3   
1000f91f:	int3   
1000f920:	push   ebp
1000f921:	mov    ebp,esp
1000f923:	push   ecx
1000f924:	mov    DWORD PTR [ebp-0x4],ecx
1000f927:	mov    ecx,DWORD PTR [ebp-0x4]
1000f92a:	call   0x1000f740
1000f92f:	mov    eax,DWORD PTR [ebp+0x8]
1000f932:	and    eax,0x1
1000f935:	je     0x1000f943
1000f937:	mov    ecx,DWORD PTR [ebp-0x4]
1000f93a:	push   ecx
1000f93b:	call   0x10015ad6
1000f940:	add    esp,0x4
1000f943:	mov    eax,DWORD PTR [ebp-0x4]
1000f946:	mov    esp,ebp
1000f948:	pop    ebp
1000f949:	ret    0x4
1000f94c:	int3   
1000f94d:	int3   
1000f94e:	int3   
1000f94f:	int3   
1000f950:	push   ebp
1000f951:	mov    ebp,esp
1000f953:	push   ecx
1000f954:	mov    DWORD PTR [ebp-0x4],ecx
1000f957:	mov    eax,DWORD PTR [ebp-0x4]
1000f95a:	mov    ecx,DWORD PTR [ebp+0x8]
1000f95d:	mov    DWORD PTR [eax],ecx
1000f95f:	mov    eax,DWORD PTR [ebp-0x4]
1000f962:	mov    esp,ebp
1000f964:	pop    ebp
1000f965:	ret    0x4
1000f968:	int3   
1000f969:	int3   
1000f96a:	int3   
1000f96b:	int3   
1000f96c:	int3   
1000f96d:	int3   
1000f96e:	int3   
1000f96f:	int3   
1000f970:	push   ebp
1000f971:	mov    ebp,esp
1000f973:	sub    esp,0x10
1000f976:	mov    DWORD PTR [ebp-0xc],ecx
1000f979:	mov    eax,DWORD PTR [ebp-0xc]
1000f97c:	mov    ecx,DWORD PTR [eax]
1000f97e:	mov    DWORD PTR [ebp-0x8],ecx
1000f981:	mov    edx,DWORD PTR [ebp-0x8]
1000f984:	mov    DWORD PTR [ebp-0x4],edx
1000f987:	cmp    DWORD PTR [ebp-0x4],0x0
1000f98b:	je     0x1000f99c
1000f98d:	push   0x1
1000f98f:	mov    ecx,DWORD PTR [ebp-0x4]
1000f992:	call   0x1000f920
1000f997:	mov    DWORD PTR [ebp-0x10],eax
1000f99a:	jmp    0x1000f9a3
1000f99c:	mov    DWORD PTR [ebp-0x10],0x0
1000f9a3:	mov    esp,ebp
1000f9a5:	pop    ebp
1000f9a6:	ret    
1000f9a7:	int3   
1000f9a8:	int3   
1000f9a9:	int3   
1000f9aa:	int3   
1000f9ab:	int3   
1000f9ac:	int3   
1000f9ad:	int3   
1000f9ae:	int3   
1000f9af:	int3   
1000f9b0:	push   ebp
1000f9b1:	mov    ebp,esp
1000f9b3:	push   0xffffffff
1000f9b5:	push   0x1002a4e8
1000f9ba:	mov    eax,fs:0x0
1000f9c0:	push   eax
1000f9c1:	push   ecx
1000f9c2:	mov    eax,ds:0x10064694
1000f9c7:	xor    eax,ebp
1000f9c9:	push   eax
1000f9ca:	lea    eax,[ebp-0xc]
1000f9cd:	mov    fs:0x0,eax
1000f9d3:	cmp    DWORD PTR [ebp+0x8],0x40
1000f9d7:	jg     0x1000f9df
1000f9d9:	cmp    DWORD PTR [ebp+0x8],0x0
1000f9dd:	jge    0x1000f9e1
1000f9df:	jmp    0x1000fa3b
1000f9e1:	lea    ecx,[ebp-0x10]
1000f9e4:	call   0x1000f7b0
1000f9e9:	mov    DWORD PTR [ebp-0x4],0x0
1000f9f0:	push   0xffffffff
1000f9f2:	mov    eax,ds:0x10065f44
1000f9f7:	push   eax
1000f9f8:	lea    ecx,[ebp-0x10]
1000f9fb:	call   0x1000f7f0
1000fa00:	test   eax,eax
1000fa02:	je     0x1000fa15
1000fa04:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000fa0b:	lea    ecx,[ebp-0x10]
1000fa0e:	call   0x1000f7d0
1000fa13:	jmp    0x1000fa3b
1000fa15:	mov    ecx,DWORD PTR [ebp+0x8]
1000fa18:	mov    edx,DWORD PTR [ecx*4+0x10065e40]
1000fa1f:	add    edx,0x1
1000fa22:	mov    eax,DWORD PTR [ebp+0x8]
1000fa25:	mov    DWORD PTR [eax*4+0x10065e40],edx
1000fa2c:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000fa33:	lea    ecx,[ebp-0x10]
1000fa36:	call   0x1000f7d0
1000fa3b:	mov    ecx,DWORD PTR [ebp-0xc]
1000fa3e:	mov    DWORD PTR fs:0x0,ecx
1000fa45:	pop    ecx
1000fa46:	mov    esp,ebp
1000fa48:	pop    ebp
1000fa49:	ret    
1000fa4a:	int3   
1000fa4b:	int3   
1000fa4c:	int3   
1000fa4d:	int3   
1000fa4e:	int3   
1000fa4f:	int3   
1000fa50:	push   ebp
1000fa51:	mov    ebp,esp
1000fa53:	push   0xffffffff
1000fa55:	push   0x1002a50b
1000fa5a:	mov    eax,fs:0x0
1000fa60:	push   eax
1000fa61:	sub    esp,0xc
1000fa64:	mov    eax,ds:0x10064694
1000fa69:	xor    eax,ebp
1000fa6b:	push   eax
1000fa6c:	lea    eax,[ebp-0xc]
1000fa6f:	mov    fs:0x0,eax
1000fa75:	cmp    DWORD PTR [ebp+0x8],0x40
1000fa79:	jg     0x1000fa81
1000fa7b:	cmp    DWORD PTR [ebp+0x8],0x0
1000fa7f:	jge    0x1000fa85
1000fa81:	xor    eax,eax
1000fa83:	jmp    0x1000fae2
1000fa85:	lea    ecx,[ebp-0x10]
1000fa88:	call   0x1000f7b0
1000fa8d:	mov    DWORD PTR [ebp-0x4],0x0
1000fa94:	push   0xffffffff
1000fa96:	mov    eax,ds:0x10065f44
1000fa9b:	push   eax
1000fa9c:	lea    ecx,[ebp-0x10]
1000fa9f:	call   0x1000f7f0
1000faa4:	test   eax,eax
1000faa6:	je     0x1000fac3
1000faa8:	mov    DWORD PTR [ebp-0x14],0x0
1000faaf:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000fab6:	lea    ecx,[ebp-0x10]
1000fab9:	call   0x1000f7d0
1000fabe:	mov    eax,DWORD PTR [ebp-0x14]
1000fac1:	jmp    0x1000fae2
1000fac3:	mov    ecx,DWORD PTR [ebp+0x8]
1000fac6:	mov    edx,DWORD PTR [ecx*4+0x10065e40]
1000facd:	mov    DWORD PTR [ebp-0x18],edx
1000fad0:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000fad7:	lea    ecx,[ebp-0x10]
1000fada:	call   0x1000f7d0
1000fadf:	mov    eax,DWORD PTR [ebp-0x18]
1000fae2:	mov    ecx,DWORD PTR [ebp-0xc]
1000fae5:	mov    DWORD PTR fs:0x0,ecx
1000faec:	pop    ecx
1000faed:	mov    esp,ebp
1000faef:	pop    ebp
1000faf0:	ret    
1000faf1:	int3   
1000faf2:	int3   
1000faf3:	int3   
1000faf4:	int3   
1000faf5:	int3   
1000faf6:	int3   
1000faf7:	int3   
1000faf8:	int3   
1000faf9:	int3   
1000fafa:	int3   
1000fafb:	int3   
1000fafc:	int3   
1000fafd:	int3   
1000fafe:	int3   
1000faff:	int3   
1000fb00:	push   ebp
1000fb01:	mov    ebp,esp
1000fb03:	push   ecx
1000fb04:	mov    DWORD PTR [ebp-0x4],ecx
1000fb07:	push   0x100
1000fb0c:	push   0x0
1000fb0e:	push   0x10065e40
1000fb13:	call   0x10016530
1000fb18:	add    esp,0xc
1000fb1b:	mov    eax,DWORD PTR [ebp-0x4]
1000fb1e:	mov    esp,ebp
1000fb20:	pop    ebp
1000fb21:	ret    
1000fb22:	int3   
1000fb23:	int3   
1000fb24:	int3   
1000fb25:	int3   
1000fb26:	int3   
1000fb27:	int3   
1000fb28:	int3   
1000fb29:	int3   
1000fb2a:	int3   
1000fb2b:	int3   
1000fb2c:	int3   
1000fb2d:	int3   
1000fb2e:	int3   
1000fb2f:	int3   
1000fb30:	push   ebp
1000fb31:	mov    ebp,esp
1000fb33:	sub    esp,0x30
1000fb36:	lea    eax,[ebp-0x8]
1000fb39:	push   eax
1000fb3a:	mov    ecx,0x10065f4c
1000fb3f:	call   0x1000fd10
1000fb44:	call   0x10001a90
1000fb49:	mov    DWORD PTR [ebp-0x18],eax
1000fb4c:	mov    DWORD PTR [ebp-0x14],edx
1000fb4f:	mov    ecx,DWORD PTR [ebp-0x18]
1000fb52:	mov    DWORD PTR [ebp-0x10],ecx
1000fb55:	mov    edx,DWORD PTR [ebp-0x14]
1000fb58:	mov    DWORD PTR [ebp-0xc],edx
1000fb5b:	lea    eax,[ebp-0x20]
1000fb5e:	push   eax
1000fb5f:	mov    ecx,0x10065f4c
1000fb64:	call   0x1000fd40
1000fb69:	push   eax
1000fb6a:	lea    ecx,[ebp-0x8]
1000fb6d:	call   0x10010810
1000fb72:	movzx  ecx,al
1000fb75:	test   ecx,ecx
1000fb77:	je     0x1000fbd5
1000fb79:	lea    ecx,[ebp-0x8]
1000fb7c:	call   0x10010790
1000fb81:	mov    edx,DWORD PTR [eax+0x8]
1000fb84:	add    edx,0x23c34600
1000fb8a:	mov    eax,DWORD PTR [eax+0xc]
1000fb8d:	adc    eax,0x0
1000fb90:	mov    DWORD PTR [ebp-0x30],edx
1000fb93:	mov    DWORD PTR [ebp-0x2c],eax
1000fb96:	mov    ecx,DWORD PTR [ebp-0x2c]
1000fb99:	cmp    ecx,DWORD PTR [ebp-0xc]
1000fb9c:	ja     0x1000fbcb
1000fb9e:	jb     0x1000fba8
1000fba0:	mov    edx,DWORD PTR [ebp-0x30]
1000fba3:	cmp    edx,DWORD PTR [ebp-0x10]
1000fba6:	jae    0x1000fbcb
1000fba8:	mov    eax,DWORD PTR [ebp-0x4]
1000fbab:	push   eax
1000fbac:	mov    ecx,DWORD PTR [ebp-0x8]
1000fbaf:	push   ecx
1000fbb0:	lea    edx,[ebp-0x28]
1000fbb3:	push   edx
1000fbb4:	mov    ecx,0x10065f4c
1000fbb9:	call   0x1000ff30
1000fbbe:	mov    ecx,DWORD PTR [eax]
1000fbc0:	mov    edx,DWORD PTR [eax+0x4]
1000fbc3:	mov    DWORD PTR [ebp-0x8],ecx
1000fbc6:	mov    DWORD PTR [ebp-0x4],edx
1000fbc9:	jmp    0x1000fbd3
1000fbcb:	lea    ecx,[ebp-0x8]
1000fbce:	call   0x100107b0
1000fbd3:	jmp    0x1000fb5b
1000fbd5:	mov    esp,ebp
1000fbd7:	pop    ebp
1000fbd8:	ret    
1000fbd9:	int3   
1000fbda:	int3   
1000fbdb:	int3   
1000fbdc:	int3   
1000fbdd:	int3   
1000fbde:	int3   
1000fbdf:	int3   
1000fbe0:	push   ebp
1000fbe1:	mov    ebp,esp
1000fbe3:	push   0xffffffff
1000fbe5:	push   0x1002a538
1000fbea:	mov    eax,fs:0x0
1000fbf0:	push   eax
1000fbf1:	sub    esp,0x58
1000fbf4:	mov    eax,ds:0x10064694
1000fbf9:	xor    eax,ebp
1000fbfb:	push   eax
1000fbfc:	lea    eax,[ebp-0xc]
1000fbff:	mov    fs:0x0,eax
1000fc05:	cmp    DWORD PTR [ebp+0xc],0x4
1000fc09:	je     0x1000fc12
1000fc0b:	xor    al,al
1000fc0d:	jmp    0x1000fcfa
1000fc12:	mov    eax,DWORD PTR [ebp+0x8]
1000fc15:	mov    ecx,DWORD PTR [eax]
1000fc17:	mov    DWORD PTR [ebp-0x1c],ecx
1000fc1a:	mov    edx,DWORD PTR [ebp+0x8]
1000fc1d:	mov    DWORD PTR [ebp-0x20],edx
1000fc20:	mov    eax,DWORD PTR [ebp-0x20]
1000fc23:	mov    DWORD PTR [eax],0x0
1000fc29:	lea    ecx,[ebp-0x18]
1000fc2c:	call   0x1000f7b0
1000fc31:	mov    DWORD PTR [ebp-0x4],0x0
1000fc38:	push   0xffffffff
1000fc3a:	mov    ecx,DWORD PTR ds:0x10065f48
1000fc40:	push   ecx
1000fc41:	lea    ecx,[ebp-0x18]
1000fc44:	call   0x1000f7f0
1000fc49:	test   eax,eax
1000fc4b:	je     0x1000fc68
1000fc4d:	mov    BYTE PTR [ebp-0x21],0x0
1000fc51:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000fc58:	lea    ecx,[ebp-0x18]
1000fc5b:	call   0x1000f7d0
1000fc60:	mov    al,BYTE PTR [ebp-0x21]
1000fc63:	jmp    0x1000fcfa
1000fc68:	call   0x1000fb30
1000fc6d:	lea    edx,[ebp-0x1c]
1000fc70:	push   edx
1000fc71:	lea    eax,[ebp-0x14]
1000fc74:	push   eax
1000fc75:	mov    ecx,0x10065f4c
1000fc7a:	call   0x10010700
1000fc7f:	lea    ecx,[ebp-0x2c]
1000fc82:	push   ecx
1000fc83:	mov    ecx,0x10065f4c
1000fc88:	call   0x1000fd40
1000fc8d:	push   eax
1000fc8e:	lea    ecx,[ebp-0x14]
1000fc91:	call   0x100107d0
1000fc96:	movzx  edx,al
1000fc99:	test   edx,edx
1000fc9b:	je     0x1000fca6
1000fc9d:	mov    eax,DWORD PTR [ebp-0x20]
1000fca0:	mov    DWORD PTR [eax],0x1
1000fca6:	call   0x10001a90
1000fcab:	mov    DWORD PTR [ebp-0x44],eax
1000fcae:	mov    DWORD PTR [ebp-0x40],edx
1000fcb1:	mov    ecx,DWORD PTR [ebp-0x40]
1000fcb4:	push   ecx
1000fcb5:	mov    edx,DWORD PTR [ebp-0x44]
1000fcb8:	push   edx
1000fcb9:	mov    eax,DWORD PTR [ebp-0x1c]
1000fcbc:	push   eax
1000fcbd:	lea    ecx,[ebp-0x54]
1000fcc0:	push   ecx
1000fcc1:	call   0x100116b0
1000fcc6:	add    esp,0x10
1000fcc9:	push   eax
1000fcca:	lea    ecx,[ebp-0x3c]
1000fccd:	call   0x100116d0
1000fcd2:	lea    edx,[ebp-0x3c]
1000fcd5:	push   edx
1000fcd6:	lea    eax,[ebp-0x60]
1000fcd9:	push   eax
1000fcda:	mov    ecx,0x10065f4c
1000fcdf:	call   0x1000fd70
1000fce4:	mov    BYTE PTR [ebp-0x61],0x1
1000fce8:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000fcef:	lea    ecx,[ebp-0x18]
1000fcf2:	call   0x1000f7d0
1000fcf7:	mov    al,BYTE PTR [ebp-0x61]
1000fcfa:	mov    ecx,DWORD PTR [ebp-0xc]
1000fcfd:	mov    DWORD PTR fs:0x0,ecx
1000fd04:	pop    ecx
1000fd05:	mov    esp,ebp
1000fd07:	pop    ebp
1000fd08:	ret    
1000fd09:	int3   
1000fd0a:	int3   
1000fd0b:	int3   
1000fd0c:	int3   
1000fd0d:	int3   
1000fd0e:	int3   
1000fd0f:	int3   
1000fd10:	push   ebp
1000fd11:	mov    ebp,esp
1000fd13:	push   ecx
1000fd14:	mov    DWORD PTR [ebp-0x4],ecx
1000fd17:	mov    eax,DWORD PTR [ebp-0x4]
1000fd1a:	push   eax
1000fd1b:	mov    ecx,DWORD PTR [ebp-0x4]
1000fd1e:	call   0x10010d60
1000fd23:	mov    ecx,DWORD PTR [eax]
1000fd25:	push   ecx
1000fd26:	mov    ecx,DWORD PTR [ebp+0x8]
1000fd29:	call   0x10011100
1000fd2e:	mov    eax,DWORD PTR [ebp+0x8]
1000fd31:	mov    esp,ebp
1000fd33:	pop    ebp
1000fd34:	ret    0x4
1000fd37:	int3   
1000fd38:	int3   
1000fd39:	int3   
1000fd3a:	int3   
1000fd3b:	int3   
1000fd3c:	int3   
1000fd3d:	int3   
1000fd3e:	int3   
1000fd3f:	int3   
1000fd40:	push   ebp
1000fd41:	mov    ebp,esp
1000fd43:	push   ecx
1000fd44:	mov    DWORD PTR [ebp-0x4],ecx
1000fd47:	mov    eax,DWORD PTR [ebp-0x4]
1000fd4a:	push   eax
1000fd4b:	mov    ecx,DWORD PTR [ebp-0x4]
1000fd4e:	mov    edx,DWORD PTR [ecx+0x4]
1000fd51:	push   edx
1000fd52:	mov    ecx,DWORD PTR [ebp+0x8]
1000fd55:	call   0x10011100
1000fd5a:	mov    eax,DWORD PTR [ebp+0x8]
1000fd5d:	mov    esp,ebp
1000fd5f:	pop    ebp
1000fd60:	ret    0x4
1000fd63:	int3   
1000fd64:	int3   
1000fd65:	int3   
1000fd66:	int3   
1000fd67:	int3   
1000fd68:	int3   
1000fd69:	int3   
1000fd6a:	int3   
1000fd6b:	int3   
1000fd6c:	int3   
1000fd6d:	int3   
1000fd6e:	int3   
1000fd6f:	int3   
1000fd70:	push   ebp
1000fd71:	mov    ebp,esp
1000fd73:	sub    esp,0x4c
1000fd76:	mov    DWORD PTR [ebp-0x48],ecx
1000fd79:	mov    ecx,DWORD PTR [ebp-0x48]
1000fd7c:	call   0x10010f50
1000fd81:	mov    eax,DWORD PTR [eax]
1000fd83:	mov    DWORD PTR [ebp-0xc],eax
1000fd86:	mov    ecx,DWORD PTR [ebp-0x48]
1000fd89:	mov    edx,DWORD PTR [ecx+0x4]
1000fd8c:	mov    DWORD PTR [ebp-0x8],edx
1000fd8f:	mov    BYTE PTR [ebp-0x1],0x1
1000fd93:	mov    eax,DWORD PTR [ebp-0xc]
1000fd96:	push   eax
1000fd97:	call   0x10010850
1000fd9c:	add    esp,0x4
1000fd9f:	movsx  ecx,BYTE PTR [eax]
1000fda2:	test   ecx,ecx
1000fda4:	jne    0x1000fe05
1000fda6:	mov    edx,DWORD PTR [ebp-0xc]
1000fda9:	mov    DWORD PTR [ebp-0x8],edx
1000fdac:	mov    eax,DWORD PTR [ebp-0xc]
1000fdaf:	push   eax
1000fdb0:	call   0x10010860
1000fdb5:	add    esp,0x4
1000fdb8:	push   eax
1000fdb9:	mov    ecx,DWORD PTR [ebp+0xc]
1000fdbc:	push   ecx
1000fdbd:	call   0x10010880
1000fdc2:	add    esp,0x4
1000fdc5:	push   eax
1000fdc6:	mov    ecx,DWORD PTR [ebp-0x48]
1000fdc9:	call   0x100110a0
1000fdce:	mov    BYTE PTR [ebp-0x1],al
1000fdd1:	movzx  edx,BYTE PTR [ebp-0x1]
1000fdd5:	test   edx,edx
1000fdd7:	je     0x1000fdec
1000fdd9:	mov    eax,DWORD PTR [ebp-0xc]
1000fddc:	push   eax
1000fddd:	call   0x10010880
1000fde2:	add    esp,0x4
1000fde5:	mov    ecx,DWORD PTR [eax]
1000fde7:	mov    DWORD PTR [ebp-0x4c],ecx
1000fdea:	jmp    0x1000fdfd
1000fdec:	mov    edx,DWORD PTR [ebp-0xc]
1000fdef:	push   edx
1000fdf0:	call   0x100108a0
1000fdf5:	add    esp,0x4
1000fdf8:	mov    eax,DWORD PTR [eax]
1000fdfa:	mov    DWORD PTR [ebp-0x4c],eax
1000fdfd:	mov    ecx,DWORD PTR [ebp-0x4c]
1000fe00:	mov    DWORD PTR [ebp-0xc],ecx
1000fe03:	jmp    0x1000fd93
1000fe05:	xor    edx,edx
1000fe07:	je     0x1000fe3f
1000fe09:	mov    BYTE PTR [ebp-0x15],0x1
1000fe0d:	lea    eax,[ebp-0x15]
1000fe10:	push   eax
1000fe11:	mov    ecx,DWORD PTR [ebp+0xc]
1000fe14:	push   ecx
1000fe15:	mov    edx,DWORD PTR [ebp-0x8]
1000fe18:	push   edx
1000fe19:	mov    al,BYTE PTR [ebp-0x1]
1000fe1c:	push   eax
1000fe1d:	lea    ecx,[ebp-0x20]
1000fe20:	push   ecx
1000fe21:	mov    ecx,DWORD PTR [ebp-0x48]
1000fe24:	call   0x100108e0
1000fe29:	push   eax
1000fe2a:	mov    ecx,DWORD PTR [ebp+0x8]
1000fe2d:	call   0x100111c0
1000fe32:	mov    eax,DWORD PTR [ebp+0x8]
1000fe35:	jmp    0x1000ff20
1000fe3a:	jmp    0x1000ff20
1000fe3f:	mov    edx,DWORD PTR [ebp-0x48]
1000fe42:	push   edx
1000fe43:	mov    eax,DWORD PTR [ebp-0x8]
1000fe46:	push   eax
1000fe47:	lea    ecx,[ebp-0x14]
1000fe4a:	call   0x10011100
1000fe4f:	movzx  ecx,BYTE PTR [ebp-0x1]
1000fe53:	test   ecx,ecx
1000fe55:	jne    0x1000fe59
1000fe57:	jmp    0x1000feab
1000fe59:	lea    edx,[ebp-0x28]
1000fe5c:	push   edx
1000fe5d:	mov    ecx,DWORD PTR [ebp-0x48]
1000fe60:	call   0x1000fd10
1000fe65:	push   eax
1000fe66:	lea    ecx,[ebp-0x14]
1000fe69:	call   0x100107d0
1000fe6e:	movzx  eax,al
1000fe71:	test   eax,eax
1000fe73:	je     0x1000fea3
1000fe75:	mov    BYTE PTR [ebp-0x29],0x1
1000fe79:	lea    ecx,[ebp-0x29]
1000fe7c:	push   ecx
1000fe7d:	mov    edx,DWORD PTR [ebp+0xc]
1000fe80:	push   edx
1000fe81:	mov    eax,DWORD PTR [ebp-0x8]
1000fe84:	push   eax
1000fe85:	push   0x1
1000fe87:	lea    ecx,[ebp-0x34]
1000fe8a:	push   ecx
1000fe8b:	mov    ecx,DWORD PTR [ebp-0x48]
1000fe8e:	call   0x100108e0
1000fe93:	push   eax
1000fe94:	mov    ecx,DWORD PTR [ebp+0x8]
1000fe97:	call   0x100111c0
1000fe9c:	mov    eax,DWORD PTR [ebp+0x8]
1000fe9f:	jmp    0x1000ff20
1000fea1:	jmp    0x1000feab
1000fea3:	lea    ecx,[ebp-0x14]
1000fea6:	call   0x10011120
1000feab:	mov    edx,DWORD PTR [ebp+0xc]
1000feae:	push   edx
1000feaf:	call   0x10010880
1000feb4:	add    esp,0x4
1000feb7:	push   eax
1000feb8:	lea    ecx,[ebp-0x14]
1000febb:	call   0x100111a0
1000fec0:	push   eax
1000fec1:	call   0x10010860
1000fec6:	add    esp,0x4
1000fec9:	push   eax
1000feca:	mov    ecx,DWORD PTR [ebp-0x48]
1000fecd:	call   0x100110a0
1000fed2:	movzx  eax,al
1000fed5:	test   eax,eax
1000fed7:	je     0x1000ff09
1000fed9:	mov    BYTE PTR [ebp-0x35],0x1
1000fedd:	lea    ecx,[ebp-0x35]
1000fee0:	push   ecx
1000fee1:	mov    edx,DWORD PTR [ebp+0xc]
1000fee4:	push   edx
1000fee5:	mov    eax,DWORD PTR [ebp-0x8]
1000fee8:	push   eax
1000fee9:	mov    cl,BYTE PTR [ebp-0x1]
1000feec:	push   ecx
1000feed:	lea    edx,[ebp-0x40]
1000fef0:	push   edx
1000fef1:	mov    ecx,DWORD PTR [ebp-0x48]
1000fef4:	call   0x100108e0
1000fef9:	push   eax
1000fefa:	mov    ecx,DWORD PTR [ebp+0x8]
1000fefd:	call   0x100111c0
1000ff02:	mov    eax,DWORD PTR [ebp+0x8]
1000ff05:	jmp    0x1000ff20
1000ff07:	jmp    0x1000ff20
1000ff09:	mov    BYTE PTR [ebp-0x41],0x0
1000ff0d:	lea    eax,[ebp-0x41]
1000ff10:	push   eax
1000ff11:	lea    ecx,[ebp-0x14]
1000ff14:	push   ecx
1000ff15:	mov    ecx,DWORD PTR [ebp+0x8]
1000ff18:	call   0x100111c0
1000ff1d:	mov    eax,DWORD PTR [ebp+0x8]
1000ff20:	mov    esp,ebp
1000ff22:	pop    ebp
1000ff23:	ret    0x8
1000ff26:	int3   
1000ff27:	int3   
1000ff28:	int3   
1000ff29:	int3   
1000ff2a:	int3   
1000ff2b:	int3   
1000ff2c:	int3   
1000ff2d:	int3   
1000ff2e:	int3   
1000ff2f:	int3   
1000ff30:	push   ebp
1000ff31:	mov    ebp,esp
1000ff33:	push   0xffffffff
1000ff35:	push   0x1002a568
1000ff3a:	mov    eax,fs:0x0
1000ff40:	push   eax
1000ff41:	sub    esp,0x60
1000ff44:	push   esi
1000ff45:	mov    eax,ds:0x10064694
1000ff4a:	xor    eax,ebp
1000ff4c:	push   eax
1000ff4d:	lea    eax,[ebp-0xc]
1000ff50:	mov    fs:0x0,eax
1000ff56:	mov    DWORD PTR [ebp-0x64],ecx
1000ff59:	lea    ecx,[ebp+0xc]
1000ff5c:	call   0x100111a0
1000ff61:	push   eax
1000ff62:	call   0x10010850
1000ff67:	add    esp,0x4
1000ff6a:	movsx  eax,BYTE PTR [eax]
1000ff6d:	test   eax,eax
1000ff6f:	je     0x1000ffae
1000ff71:	push   0x10055934
1000ff76:	lea    ecx,[ebp-0x60]
1000ff79:	call   0x10002b40
1000ff7e:	mov    DWORD PTR [ebp-0x4],0x0
1000ff85:	lea    ecx,[ebp-0x60]
1000ff88:	push   ecx
1000ff89:	lea    ecx,[ebp-0x44]
1000ff8c:	call   0x100013e0
1000ff91:	push   0x10058ad0
1000ff96:	lea    edx,[ebp-0x44]
1000ff99:	push   edx
1000ff9a:	call   0x100161ce
1000ff9f:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000ffa6:	lea    ecx,[ebp-0x60]
1000ffa9:	call   0x10002b80
1000ffae:	lea    ecx,[ebp+0xc]
1000ffb1:	call   0x100111a0
1000ffb6:	mov    DWORD PTR [ebp-0x10],eax
1000ffb9:	lea    ecx,[ebp+0xc]
1000ffbc:	call   0x100107b0
1000ffc1:	mov    eax,DWORD PTR [ebp-0x10]
1000ffc4:	mov    DWORD PTR [ebp-0x18],eax
1000ffc7:	mov    ecx,DWORD PTR [ebp-0x18]
1000ffca:	push   ecx
1000ffcb:	call   0x10010880
1000ffd0:	add    esp,0x4
1000ffd3:	mov    edx,DWORD PTR [eax]
1000ffd5:	push   edx
1000ffd6:	call   0x10010850
1000ffdb:	add    esp,0x4
1000ffde:	movsx  eax,BYTE PTR [eax]
1000ffe1:	test   eax,eax
1000ffe3:	je     0x1000fff8
1000ffe5:	mov    ecx,DWORD PTR [ebp-0x18]
1000ffe8:	push   ecx
1000ffe9:	call   0x100108a0
1000ffee:	add    esp,0x4
1000fff1:	mov    edx,DWORD PTR [eax]
1000fff3:	mov    DWORD PTR [ebp-0x14],edx
1000fff6:	jmp    0x10010045
1000fff8:	mov    eax,DWORD PTR [ebp-0x18]
1000fffb:	push   eax
1000fffc:	call   0x100108a0
10010001:	add    esp,0x4
10010004:	mov    ecx,DWORD PTR [eax]
10010006:	push   ecx
10010007:	call   0x10010850
1001000c:	add    esp,0x4
1001000f:	movsx  edx,BYTE PTR [eax]
10010012:	test   edx,edx
10010014:	je     0x10010029
10010016:	mov    eax,DWORD PTR [ebp-0x18]
10010019:	push   eax
1001001a:	call   0x10010880
1001001f:	add    esp,0x4
10010022:	mov    ecx,DWORD PTR [eax]
10010024:	mov    DWORD PTR [ebp-0x14],ecx
10010027:	jmp    0x10010045
10010029:	lea    ecx,[ebp+0xc]
1001002c:	call   0x100111a0
10010031:	mov    DWORD PTR [ebp-0x18],eax
10010034:	mov    edx,DWORD PTR [ebp-0x18]
10010037:	push   edx
10010038:	call   0x100108a0
1001003d:	add    esp,0x4
10010040:	mov    eax,DWORD PTR [eax]
10010042:	mov    DWORD PTR [ebp-0x14],eax
10010045:	mov    ecx,DWORD PTR [ebp-0x18]
10010048:	cmp    ecx,DWORD PTR [ebp-0x10]
1001004b:	jne    0x1001016c
10010051:	mov    edx,DWORD PTR [ebp-0x10]
10010054:	push   edx
10010055:	call   0x10010890
1001005a:	add    esp,0x4
1001005d:	mov    eax,DWORD PTR [eax]
1001005f:	mov    DWORD PTR [ebp-0x1c],eax
10010062:	mov    ecx,DWORD PTR [ebp-0x14]
10010065:	push   ecx
10010066:	call   0x10010850
1001006b:	add    esp,0x4
1001006e:	movsx  edx,BYTE PTR [eax]
10010071:	test   edx,edx
10010073:	jne    0x10010086
10010075:	mov    eax,DWORD PTR [ebp-0x14]
10010078:	push   eax
10010079:	call   0x10010890
1001007e:	add    esp,0x4
10010081:	mov    ecx,DWORD PTR [ebp-0x1c]
10010084:	mov    DWORD PTR [eax],ecx
10010086:	mov    ecx,DWORD PTR [ebp-0x64]
10010089:	call   0x10010f50
1001008e:	mov    edx,DWORD PTR [eax]
10010090:	cmp    edx,DWORD PTR [ebp-0x10]
10010093:	jne    0x100100a4
10010095:	mov    ecx,DWORD PTR [ebp-0x64]
10010098:	call   0x10010f50
1001009d:	mov    ecx,DWORD PTR [ebp-0x14]
100100a0:	mov    DWORD PTR [eax],ecx
100100a2:	jmp    0x100100db
100100a4:	mov    edx,DWORD PTR [ebp-0x1c]
100100a7:	push   edx
100100a8:	call   0x10010880
100100ad:	add    esp,0x4
100100b0:	mov    eax,DWORD PTR [eax]
100100b2:	cmp    eax,DWORD PTR [ebp-0x10]
100100b5:	jne    0x100100ca
100100b7:	mov    ecx,DWORD PTR [ebp-0x1c]
100100ba:	push   ecx
100100bb:	call   0x10010880
100100c0:	add    esp,0x4
100100c3:	mov    edx,DWORD PTR [ebp-0x14]
100100c6:	mov    DWORD PTR [eax],edx
100100c8:	jmp    0x100100db
100100ca:	mov    eax,DWORD PTR [ebp-0x1c]
100100cd:	push   eax
100100ce:	call   0x100108a0
100100d3:	add    esp,0x4
100100d6:	mov    ecx,DWORD PTR [ebp-0x14]
100100d9:	mov    DWORD PTR [eax],ecx
100100db:	mov    ecx,DWORD PTR [ebp-0x64]
100100de:	call   0x10010d60
100100e3:	mov    edx,DWORD PTR [eax]
100100e5:	cmp    edx,DWORD PTR [ebp-0x10]
100100e8:	jne    0x10010121
100100ea:	mov    eax,DWORD PTR [ebp-0x14]
100100ed:	push   eax
100100ee:	call   0x10010850
100100f3:	add    esp,0x4
100100f6:	movsx  ecx,BYTE PTR [eax]
100100f9:	test   ecx,ecx
100100fb:	je     0x10010105
100100fd:	mov    edx,DWORD PTR [ebp-0x1c]
10010100:	mov    DWORD PTR [ebp-0x68],edx
10010103:	jmp    0x10010114
10010105:	mov    eax,DWORD PTR [ebp-0x14]
10010108:	push   eax
10010109:	call   0x10010ef0
1001010e:	add    esp,0x4
10010111:	mov    DWORD PTR [ebp-0x68],eax
10010114:	mov    ecx,DWORD PTR [ebp-0x64]
10010117:	call   0x10010d60
1001011c:	mov    ecx,DWORD PTR [ebp-0x68]
1001011f:	mov    DWORD PTR [eax],ecx
10010121:	mov    ecx,DWORD PTR [ebp-0x64]
10010124:	call   0x10010f30
10010129:	mov    edx,DWORD PTR [eax]
1001012b:	cmp    edx,DWORD PTR [ebp-0x10]
1001012e:	jne    0x10010167
10010130:	mov    eax,DWORD PTR [ebp-0x14]
10010133:	push   eax
10010134:	call   0x10010850
10010139:	add    esp,0x4
1001013c:	movsx  ecx,BYTE PTR [eax]
1001013f:	test   ecx,ecx
10010141:	je     0x1001014b
10010143:	mov    edx,DWORD PTR [ebp-0x1c]
10010146:	mov    DWORD PTR [ebp-0x6c],edx
10010149:	jmp    0x1001015a
1001014b:	mov    eax,DWORD PTR [ebp-0x14]
1001014e:	push   eax
1001014f:	call   0x10010eb0
10010154:	add    esp,0x4
10010157:	mov    DWORD PTR [ebp-0x6c],eax
1001015a:	mov    ecx,DWORD PTR [ebp-0x64]
1001015d:	call   0x10010f30
10010162:	mov    ecx,DWORD PTR [ebp-0x6c]
10010165:	mov    DWORD PTR [eax],ecx
10010167:	jmp    0x100102fa
1001016c:	mov    edx,DWORD PTR [ebp-0x10]
1001016f:	push   edx
10010170:	call   0x10010880
10010175:	add    esp,0x4
10010178:	mov    eax,DWORD PTR [eax]
1001017a:	push   eax
1001017b:	call   0x10010890
10010180:	add    esp,0x4
10010183:	mov    ecx,DWORD PTR [ebp-0x18]
10010186:	mov    DWORD PTR [eax],ecx
10010188:	mov    edx,DWORD PTR [ebp-0x10]
1001018b:	push   edx
1001018c:	call   0x10010880
10010191:	add    esp,0x4
10010194:	mov    esi,eax
10010196:	mov    eax,DWORD PTR [ebp-0x18]
10010199:	push   eax
1001019a:	call   0x10010880
1001019f:	add    esp,0x4
100101a2:	mov    ecx,DWORD PTR [esi]
100101a4:	mov    DWORD PTR [eax],ecx
100101a6:	mov    edx,DWORD PTR [ebp-0x10]
100101a9:	push   edx
100101aa:	call   0x100108a0
100101af:	add    esp,0x4
100101b2:	mov    ecx,DWORD PTR [ebp-0x18]
100101b5:	cmp    ecx,DWORD PTR [eax]
100101b7:	jne    0x100101c4
100101b9:	mov    edx,DWORD PTR [ebp-0x18]
100101bc:	mov    DWORD PTR [ebp-0x1c],edx
100101bf:	jmp    0x10010244
100101c4:	mov    eax,DWORD PTR [ebp-0x18]
100101c7:	push   eax
100101c8:	call   0x10010890
100101cd:	add    esp,0x4
100101d0:	mov    ecx,DWORD PTR [eax]
100101d2:	mov    DWORD PTR [ebp-0x1c],ecx
100101d5:	mov    edx,DWORD PTR [ebp-0x14]
100101d8:	push   edx
100101d9:	call   0x10010850
100101de:	add    esp,0x4
100101e1:	movsx  eax,BYTE PTR [eax]
100101e4:	test   eax,eax
100101e6:	jne    0x100101f9
100101e8:	mov    ecx,DWORD PTR [ebp-0x14]
100101eb:	push   ecx
100101ec:	call   0x10010890
100101f1:	add    esp,0x4
100101f4:	mov    edx,DWORD PTR [ebp-0x1c]
100101f7:	mov    DWORD PTR [eax],edx
100101f9:	mov    eax,DWORD PTR [ebp-0x1c]
100101fc:	push   eax
100101fd:	call   0x10010880
10010202:	add    esp,0x4
10010205:	mov    ecx,DWORD PTR [ebp-0x14]
10010208:	mov    DWORD PTR [eax],ecx
1001020a:	mov    edx,DWORD PTR [ebp-0x10]
1001020d:	push   edx
1001020e:	call   0x100108a0
10010213:	add    esp,0x4
10010216:	mov    esi,eax
10010218:	mov    eax,DWORD PTR [ebp-0x18]
1001021b:	push   eax
1001021c:	call   0x100108a0
10010221:	add    esp,0x4
10010224:	mov    ecx,DWORD PTR [esi]
10010226:	mov    DWORD PTR [eax],ecx
10010228:	mov    edx,DWORD PTR [ebp-0x10]
1001022b:	push   edx
1001022c:	call   0x100108a0
10010231:	add    esp,0x4
10010234:	mov    eax,DWORD PTR [eax]
10010236:	push   eax
10010237:	call   0x10010890
1001023c:	add    esp,0x4
1001023f:	mov    ecx,DWORD PTR [ebp-0x18]
10010242:	mov    DWORD PTR [eax],ecx
10010244:	mov    ecx,DWORD PTR [ebp-0x64]
10010247:	call   0x10010f50
1001024c:	mov    edx,DWORD PTR [eax]
1001024e:	cmp    edx,DWORD PTR [ebp-0x10]
10010251:	jne    0x10010262
10010253:	mov    ecx,DWORD PTR [ebp-0x64]
10010256:	call   0x10010f50
1001025b:	mov    ecx,DWORD PTR [ebp-0x18]
1001025e:	mov    DWORD PTR [eax],ecx
10010260:	jmp    0x100102ba
10010262:	mov    edx,DWORD PTR [ebp-0x10]
10010265:	push   edx
10010266:	call   0x10010890
1001026b:	add    esp,0x4
1001026e:	mov    eax,DWORD PTR [eax]
10010270:	push   eax
10010271:	call   0x10010880
10010276:	add    esp,0x4
10010279:	mov    ecx,DWORD PTR [eax]
1001027b:	cmp    ecx,DWORD PTR [ebp-0x10]
1001027e:	jne    0x1001029e
10010280:	mov    edx,DWORD PTR [ebp-0x10]
10010283:	push   edx
10010284:	call   0x10010890
10010289:	add    esp,0x4
1001028c:	mov    eax,DWORD PTR [eax]
1001028e:	push   eax
1001028f:	call   0x10010880
10010294:	add    esp,0x4
10010297:	mov    ecx,DWORD PTR [ebp-0x18]
1001029a:	mov    DWORD PTR [eax],ecx
1001029c:	jmp    0x100102ba
1001029e:	mov    edx,DWORD PTR [ebp-0x10]
100102a1:	push   edx
100102a2:	call   0x10010890
100102a7:	add    esp,0x4
100102aa:	mov    eax,DWORD PTR [eax]
100102ac:	push   eax
100102ad:	call   0x100108a0
100102b2:	add    esp,0x4
100102b5:	mov    ecx,DWORD PTR [ebp-0x18]
100102b8:	mov    DWORD PTR [eax],ecx
100102ba:	mov    edx,DWORD PTR [ebp-0x10]
100102bd:	push   edx
100102be:	call   0x10010890
100102c3:	add    esp,0x4
100102c6:	mov    esi,eax
100102c8:	mov    eax,DWORD PTR [ebp-0x18]
100102cb:	push   eax
100102cc:	call   0x10010890
100102d1:	add    esp,0x4
100102d4:	mov    ecx,DWORD PTR [esi]
100102d6:	mov    DWORD PTR [eax],ecx
100102d8:	mov    edx,DWORD PTR [ebp-0x10]
100102db:	push   edx
100102dc:	call   0x10010840
100102e1:	add    esp,0x4
100102e4:	push   eax
100102e5:	mov    eax,DWORD PTR [ebp-0x18]
100102e8:	push   eax
100102e9:	call   0x10010840
100102ee:	add    esp,0x4
100102f1:	push   eax
100102f2:	call   0x10006b90
100102f7:	add    esp,0x8
100102fa:	mov    ecx,DWORD PTR [ebp-0x10]
100102fd:	push   ecx
100102fe:	call   0x10010840
10010303:	add    esp,0x4
10010306:	movsx  edx,BYTE PTR [eax]
10010309:	cmp    edx,0x1
1001030c:	jne    0x100106a1
10010312:	jmp    0x10010325
10010314:	mov    eax,DWORD PTR [ebp-0x14]
10010317:	push   eax
10010318:	call   0x10010890
1001031d:	add    esp,0x4
10010320:	mov    ecx,DWORD PTR [eax]
10010322:	mov    DWORD PTR [ebp-0x1c],ecx
10010325:	mov    ecx,DWORD PTR [ebp-0x64]
10010328:	call   0x10010f50
1001032d:	mov    edx,DWORD PTR [ebp-0x14]
10010330:	cmp    edx,DWORD PTR [eax]
10010332:	je     0x10010692
10010338:	mov    eax,DWORD PTR [ebp-0x14]
1001033b:	push   eax
1001033c:	call   0x10010840
10010341:	add    esp,0x4
10010344:	movsx  ecx,BYTE PTR [eax]
10010347:	cmp    ecx,0x1
1001034a:	jne    0x10010692
10010350:	mov    edx,DWORD PTR [ebp-0x1c]
10010353:	push   edx
10010354:	call   0x10010880
10010359:	add    esp,0x4
1001035c:	mov    ecx,DWORD PTR [ebp-0x14]
1001035f:	cmp    ecx,DWORD PTR [eax]
10010361:	jne    0x100104fe
10010367:	mov    edx,DWORD PTR [ebp-0x1c]
1001036a:	push   edx
1001036b:	call   0x100108a0
10010370:	add    esp,0x4
10010373:	mov    eax,DWORD PTR [eax]
10010375:	mov    DWORD PTR [ebp-0x18],eax
10010378:	mov    ecx,DWORD PTR [ebp-0x18]
1001037b:	push   ecx
1001037c:	call   0x10010840
10010381:	add    esp,0x4
10010384:	movsx  edx,BYTE PTR [eax]
10010387:	test   edx,edx
10010389:	jne    0x100103c6
1001038b:	mov    eax,DWORD PTR [ebp-0x18]
1001038e:	push   eax
1001038f:	call   0x10010840
10010394:	add    esp,0x4
10010397:	mov    BYTE PTR [eax],0x1
1001039a:	mov    ecx,DWORD PTR [ebp-0x1c]
1001039d:	push   ecx
1001039e:	call   0x10010840
100103a3:	add    esp,0x4
100103a6:	mov    BYTE PTR [eax],0x0
100103a9:	mov    edx,DWORD PTR [ebp-0x1c]
100103ac:	push   edx
100103ad:	mov    ecx,DWORD PTR [ebp-0x64]
100103b0:	call   0x10010d80
100103b5:	mov    eax,DWORD PTR [ebp-0x1c]
100103b8:	push   eax
100103b9:	call   0x100108a0
100103be:	add    esp,0x4
100103c1:	mov    ecx,DWORD PTR [eax]
100103c3:	mov    DWORD PTR [ebp-0x18],ecx
100103c6:	mov    edx,DWORD PTR [ebp-0x18]
100103c9:	push   edx
100103ca:	call   0x10010850
100103cf:	add    esp,0x4
100103d2:	movsx  eax,BYTE PTR [eax]
100103d5:	test   eax,eax
100103d7:	je     0x100103e4
100103d9:	mov    ecx,DWORD PTR [ebp-0x1c]
100103dc:	mov    DWORD PTR [ebp-0x14],ecx
100103df:	jmp    0x100104f9
100103e4:	mov    edx,DWORD PTR [ebp-0x18]
100103e7:	push   edx
100103e8:	call   0x10010880
100103ed:	add    esp,0x4
100103f0:	mov    eax,DWORD PTR [eax]
100103f2:	push   eax
100103f3:	call   0x10010840
100103f8:	add    esp,0x4
100103fb:	movsx  ecx,BYTE PTR [eax]
100103fe:	cmp    ecx,0x1
10010401:	jne    0x1001043c
10010403:	mov    edx,DWORD PTR [ebp-0x18]
10010406:	push   edx
10010407:	call   0x100108a0
1001040c:	add    esp,0x4
1001040f:	mov    eax,DWORD PTR [eax]
10010411:	push   eax
10010412:	call   0x10010840
10010417:	add    esp,0x4
1001041a:	movsx  ecx,BYTE PTR [eax]
1001041d:	cmp    ecx,0x1
10010420:	jne    0x1001043c
10010422:	mov    edx,DWORD PTR [ebp-0x18]
10010425:	push   edx
10010426:	call   0x10010840
1001042b:	add    esp,0x4
1001042e:	mov    BYTE PTR [eax],0x0
10010431:	mov    eax,DWORD PTR [ebp-0x1c]
10010434:	mov    DWORD PTR [ebp-0x14],eax
10010437:	jmp    0x100104f9
1001043c:	mov    ecx,DWORD PTR [ebp-0x18]
1001043f:	push   ecx
10010440:	call   0x100108a0
10010445:	add    esp,0x4
10010448:	mov    edx,DWORD PTR [eax]
1001044a:	push   edx
1001044b:	call   0x10010840
10010450:	add    esp,0x4
10010453:	movsx  eax,BYTE PTR [eax]
10010456:	cmp    eax,0x1
10010459:	jne    0x100104a1
1001045b:	mov    ecx,DWORD PTR [ebp-0x18]
1001045e:	push   ecx
1001045f:	call   0x10010880
10010464:	add    esp,0x4
10010467:	mov    edx,DWORD PTR [eax]
10010469:	push   edx
1001046a:	call   0x10010840
1001046f:	add    esp,0x4
10010472:	mov    BYTE PTR [eax],0x1
10010475:	mov    eax,DWORD PTR [ebp-0x18]
10010478:	push   eax
10010479:	call   0x10010840
1001047e:	add    esp,0x4
10010481:	mov    BYTE PTR [eax],0x0
10010484:	mov    ecx,DWORD PTR [ebp-0x18]
10010487:	push   ecx
10010488:	mov    ecx,DWORD PTR [ebp-0x64]
1001048b:	call   0x10010f70
10010490:	mov    edx,DWORD PTR [ebp-0x1c]
10010493:	push   edx
10010494:	call   0x100108a0
10010499:	add    esp,0x4
1001049c:	mov    eax,DWORD PTR [eax]
1001049e:	mov    DWORD PTR [ebp-0x18],eax
100104a1:	mov    ecx,DWORD PTR [ebp-0x1c]
100104a4:	push   ecx
100104a5:	call   0x10010840
100104aa:	add    esp,0x4
100104ad:	mov    esi,eax
100104af:	mov    edx,DWORD PTR [ebp-0x18]
100104b2:	push   edx
100104b3:	call   0x10010840
100104b8:	add    esp,0x4
100104bb:	mov    cl,BYTE PTR [esi]
100104bd:	mov    BYTE PTR [eax],cl
100104bf:	mov    edx,DWORD PTR [ebp-0x1c]
100104c2:	push   edx
100104c3:	call   0x10010840
100104c8:	add    esp,0x4
100104cb:	mov    BYTE PTR [eax],0x1
100104ce:	mov    eax,DWORD PTR [ebp-0x18]
100104d1:	push   eax
100104d2:	call   0x100108a0
100104d7:	add    esp,0x4
100104da:	mov    ecx,DWORD PTR [eax]
100104dc:	push   ecx
100104dd:	call   0x10010840
100104e2:	add    esp,0x4
100104e5:	mov    BYTE PTR [eax],0x1
100104e8:	mov    edx,DWORD PTR [ebp-0x1c]
100104eb:	push   edx
100104ec:	mov    ecx,DWORD PTR [ebp-0x64]
100104ef:	call   0x10010d80
100104f4:	jmp    0x10010692
100104f9:	jmp    0x1001068d
100104fe:	mov    eax,DWORD PTR [ebp-0x1c]
10010501:	push   eax
10010502:	call   0x10010880
10010507:	add    esp,0x4
1001050a:	mov    ecx,DWORD PTR [eax]
1001050c:	mov    DWORD PTR [ebp-0x18],ecx
1001050f:	mov    edx,DWORD PTR [ebp-0x18]
10010512:	push   edx
10010513:	call   0x10010840
10010518:	add    esp,0x4
1001051b:	movsx  eax,BYTE PTR [eax]
1001051e:	test   eax,eax
10010520:	jne    0x1001055d
10010522:	mov    ecx,DWORD PTR [ebp-0x18]
10010525:	push   ecx
10010526:	call   0x10010840
1001052b:	add    esp,0x4
1001052e:	mov    BYTE PTR [eax],0x1
10010531:	mov    edx,DWORD PTR [ebp-0x1c]
10010534:	push   edx
10010535:	call   0x10010840
1001053a:	add    esp,0x4
1001053d:	mov    BYTE PTR [eax],0x0
10010540:	mov    eax,DWORD PTR [ebp-0x1c]
10010543:	push   eax
10010544:	mov    ecx,DWORD PTR [ebp-0x64]
10010547:	call   0x10010f70
1001054c:	mov    ecx,DWORD PTR [ebp-0x1c]
1001054f:	push   ecx
10010550:	call   0x10010880
10010555:	add    esp,0x4
10010558:	mov    edx,DWORD PTR [eax]
1001055a:	mov    DWORD PTR [ebp-0x18],edx
1001055d:	mov    eax,DWORD PTR [ebp-0x18]
10010560:	push   eax
10010561:	call   0x10010850
10010566:	add    esp,0x4
10010569:	movsx  ecx,BYTE PTR [eax]
1001056c:	test   ecx,ecx
1001056e:	je     0x1001057b
10010570:	mov    edx,DWORD PTR [ebp-0x1c]
10010573:	mov    DWORD PTR [ebp-0x14],edx
10010576:	jmp    0x1001068d
1001057b:	mov    eax,DWORD PTR [ebp-0x18]
1001057e:	push   eax
1001057f:	call   0x100108a0
10010584:	add    esp,0x4
10010587:	mov    ecx,DWORD PTR [eax]
10010589:	push   ecx
1001058a:	call   0x10010840
1001058f:	add    esp,0x4
10010592:	movsx  edx,BYTE PTR [eax]
10010595:	cmp    edx,0x1
10010598:	jne    0x100105d3
1001059a:	mov    eax,DWORD PTR [ebp-0x18]
1001059d:	push   eax
1001059e:	call   0x10010880
100105a3:	add    esp,0x4
100105a6:	mov    ecx,DWORD PTR [eax]
100105a8:	push   ecx
100105a9:	call   0x10010840
100105ae:	add    esp,0x4
100105b1:	movsx  edx,BYTE PTR [eax]
100105b4:	cmp    edx,0x1
100105b7:	jne    0x100105d3
100105b9:	mov    eax,DWORD PTR [ebp-0x18]
100105bc:	push   eax
100105bd:	call   0x10010840
100105c2:	add    esp,0x4
100105c5:	mov    BYTE PTR [eax],0x0
100105c8:	mov    ecx,DWORD PTR [ebp-0x1c]
100105cb:	mov    DWORD PTR [ebp-0x14],ecx
100105ce:	jmp    0x1001068d
100105d3:	mov    edx,DWORD PTR [ebp-0x18]
100105d6:	push   edx
100105d7:	call   0x10010880
100105dc:	add    esp,0x4
100105df:	mov    eax,DWORD PTR [eax]
100105e1:	push   eax
100105e2:	call   0x10010840
100105e7:	add    esp,0x4
100105ea:	movsx  ecx,BYTE PTR [eax]
100105ed:	cmp    ecx,0x1
100105f0:	jne    0x10010638
100105f2:	mov    edx,DWORD PTR [ebp-0x18]
100105f5:	push   edx
100105f6:	call   0x100108a0
100105fb:	add    esp,0x4
100105fe:	mov    eax,DWORD PTR [eax]
10010600:	push   eax
10010601:	call   0x10010840
10010606:	add    esp,0x4
10010609:	mov    BYTE PTR [eax],0x1
1001060c:	mov    ecx,DWORD PTR [ebp-0x18]
1001060f:	push   ecx
10010610:	call   0x10010840
10010615:	add    esp,0x4
10010618:	mov    BYTE PTR [eax],0x0
1001061b:	mov    edx,DWORD PTR [ebp-0x18]
1001061e:	push   edx
1001061f:	mov    ecx,DWORD PTR [ebp-0x64]
10010622:	call   0x10010d80
10010627:	mov    eax,DWORD PTR [ebp-0x1c]
1001062a:	push   eax
1001062b:	call   0x10010880
10010630:	add    esp,0x4
10010633:	mov    ecx,DWORD PTR [eax]
10010635:	mov    DWORD PTR [ebp-0x18],ecx
10010638:	mov    edx,DWORD PTR [ebp-0x1c]
1001063b:	push   edx
1001063c:	call   0x10010840
10010641:	add    esp,0x4
10010644:	mov    esi,eax
10010646:	mov    eax,DWORD PTR [ebp-0x18]
10010649:	push   eax
1001064a:	call   0x10010840
1001064f:	add    esp,0x4
10010652:	mov    cl,BYTE PTR [esi]
10010654:	mov    BYTE PTR [eax],cl
10010656:	mov    edx,DWORD PTR [ebp-0x1c]
10010659:	push   edx
1001065a:	call   0x10010840
1001065f:	add    esp,0x4
10010662:	mov    BYTE PTR [eax],0x1
10010665:	mov    eax,DWORD PTR [ebp-0x18]
10010668:	push   eax
10010669:	call   0x10010880
1001066e:	add    esp,0x4
10010671:	mov    ecx,DWORD PTR [eax]
10010673:	push   ecx
10010674:	call   0x10010840
10010679:	add    esp,0x4
1001067c:	mov    BYTE PTR [eax],0x1
1001067f:	mov    edx,DWORD PTR [ebp-0x1c]
10010682:	push   edx
10010683:	mov    ecx,DWORD PTR [ebp-0x64]
10010686:	call   0x10010f70
1001068b:	jmp    0x10010692
1001068d:	jmp    0x10010314
10010692:	mov    eax,DWORD PTR [ebp-0x14]
10010695:	push   eax
10010696:	call   0x10010840
1001069b:	add    esp,0x4
1001069e:	mov    BYTE PTR [eax],0x1
100106a1:	mov    ecx,DWORD PTR [ebp-0x10]
100106a4:	push   ecx
100106a5:	mov    ecx,DWORD PTR [ebp-0x64]
100106a8:	add    ecx,0x1
100106ab:	call   0x100110e0
100106b0:	push   0x1
100106b2:	mov    edx,DWORD PTR [ebp-0x10]
100106b5:	push   edx
100106b6:	mov    ecx,DWORD PTR [ebp-0x64]
100106b9:	add    ecx,0x1
100106bc:	call   0x100110c0
100106c1:	mov    eax,DWORD PTR [ebp-0x64]
100106c4:	cmp    DWORD PTR [eax+0x8],0x0
100106c8:	jbe    0x100106d9
100106ca:	mov    ecx,DWORD PTR [ebp-0x64]
100106cd:	mov    edx,DWORD PTR [ecx+0x8]
100106d0:	sub    edx,0x1
100106d3:	mov    eax,DWORD PTR [ebp-0x64]
100106d6:	mov    DWORD PTR [eax+0x8],edx
100106d9:	mov    ecx,DWORD PTR [ebp+0x8]
100106dc:	mov    edx,DWORD PTR [ebp+0xc]
100106df:	mov    DWORD PTR [ecx],edx
100106e1:	mov    eax,DWORD PTR [ebp+0x10]
100106e4:	mov    DWORD PTR [ecx+0x4],eax
100106e7:	mov    eax,DWORD PTR [ebp+0x8]
100106ea:	mov    ecx,DWORD PTR [ebp-0xc]
100106ed:	mov    DWORD PTR fs:0x0,ecx
100106f4:	pop    ecx
100106f5:	pop    esi
100106f6:	mov    esp,ebp
100106f8:	pop    ebp
100106f9:	ret    0xc
100106fc:	int3   
100106fd:	int3   
100106fe:	int3   
100106ff:	int3   
10010700:	push   ebp
10010701:	mov    ebp,esp
10010703:	sub    esp,0x24
10010706:	mov    DWORD PTR [ebp-0x20],ecx
10010709:	mov    eax,DWORD PTR [ebp+0xc]
1001070c:	push   eax
1001070d:	lea    ecx,[ebp-0x8]
10010710:	push   ecx
10010711:	mov    ecx,DWORD PTR [ebp-0x20]
10010714:	call   0x100108b0
10010719:	lea    edx,[ebp-0x14]
1001071c:	push   edx
1001071d:	mov    ecx,DWORD PTR [ebp-0x20]
10010720:	call   0x1000fd40
10010725:	push   eax
10010726:	lea    ecx,[ebp-0x8]
10010729:	call   0x100107d0
1001072e:	movzx  eax,al
10010731:	test   eax,eax
10010733:	jne    0x10010762
10010735:	lea    ecx,[ebp-0x8]
10010738:	call   0x100111a0
1001073d:	push   eax
1001073e:	call   0x10010860
10010743:	add    esp,0x4
10010746:	push   eax
10010747:	mov    ecx,DWORD PTR [ebp+0xc]
1001074a:	push   ecx
1001074b:	mov    ecx,DWORD PTR [ebp-0x20]
1001074e:	call   0x100110a0
10010753:	movzx  edx,al
10010756:	test   edx,edx
10010758:	jne    0x10010762
1001075a:	lea    eax,[ebp-0x8]
1001075d:	mov    DWORD PTR [ebp-0x24],eax
10010760:	jmp    0x10010771
10010762:	lea    ecx,[ebp-0x1c]
10010765:	push   ecx
10010766:	mov    ecx,DWORD PTR [ebp-0x20]
10010769:	call   0x1000fd40
1001076e:	mov    DWORD PTR [ebp-0x24],eax
10010771:	mov    edx,DWORD PTR [ebp-0x24]
10010774:	mov    DWORD PTR [ebp-0xc],edx
10010777:	mov    eax,DWORD PTR [ebp-0xc]
1001077a:	mov    ecx,DWORD PTR [eax]
1001077c:	mov    edx,DWORD PTR [eax+0x4]
1001077f:	mov    eax,DWORD PTR [ebp+0x8]
10010782:	mov    DWORD PTR [eax],ecx
10010784:	mov    DWORD PTR [eax+0x4],edx
10010787:	mov    eax,DWORD PTR [ebp+0x8]
1001078a:	mov    esp,ebp
1001078c:	pop    ebp
1001078d:	ret    0x8
10010790:	push   ebp
10010791:	mov    ebp,esp
10010793:	push   ecx
10010794:	mov    DWORD PTR [ebp-0x4],ecx
10010797:	mov    ecx,DWORD PTR [ebp-0x4]
1001079a:	call   0x10011140
1001079f:	mov    esp,ebp
100107a1:	pop    ebp
100107a2:	ret    
100107a3:	int3   
100107a4:	int3   
100107a5:	int3   
100107a6:	int3   
100107a7:	int3   
100107a8:	int3   
100107a9:	int3   
100107aa:	int3   
100107ab:	int3   
100107ac:	int3   
100107ad:	int3   
100107ae:	int3   
100107af:	int3   
100107b0:	push   ebp
100107b1:	mov    ebp,esp
100107b3:	push   ecx
100107b4:	mov    DWORD PTR [ebp-0x4],ecx
100107b7:	mov    ecx,DWORD PTR [ebp-0x4]
100107ba:	call   0x10011180
100107bf:	mov    eax,DWORD PTR [ebp-0x4]
100107c2:	mov    esp,ebp
100107c4:	pop    ebp
100107c5:	ret    
100107c6:	int3   
100107c7:	int3   
100107c8:	int3   
100107c9:	int3   
100107ca:	int3   
100107cb:	int3   
100107cc:	int3   
100107cd:	int3   
100107ce:	int3   
100107cf:	int3   
100107d0:	push   ebp
100107d1:	mov    ebp,esp
100107d3:	push   ecx
100107d4:	mov    DWORD PTR [ebp-0x4],ecx
100107d7:	mov    eax,DWORD PTR [ebp-0x4]
100107da:	cmp    DWORD PTR [eax],0x0
100107dd:	je     0x100107eb
100107df:	mov    ecx,DWORD PTR [ebp-0x4]
100107e2:	mov    edx,DWORD PTR [ebp+0x8]
100107e5:	mov    eax,DWORD PTR [ecx]
100107e7:	cmp    eax,DWORD PTR [edx]
100107e9:	je     0x100107f0
100107eb:	call   0x10016143
100107f0:	mov    ecx,DWORD PTR [ebp-0x4]
100107f3:	mov    edx,DWORD PTR [ebp+0x8]
100107f6:	mov    eax,DWORD PTR [ecx+0x4]
100107f9:	xor    ecx,ecx
100107fb:	cmp    eax,DWORD PTR [edx+0x4]
100107fe:	sete   cl
10010801:	mov    al,cl
10010803:	mov    esp,ebp
10010805:	pop    ebp
10010806:	ret    0x4
10010809:	int3   
1001080a:	int3   
1001080b:	int3   
1001080c:	int3   
1001080d:	int3   
1001080e:	int3   
1001080f:	int3   
10010810:	push   ebp
10010811:	mov    ebp,esp
10010813:	push   ecx
10010814:	mov    DWORD PTR [ebp-0x4],ecx
10010817:	mov    eax,DWORD PTR [ebp+0x8]
1001081a:	push   eax
1001081b:	mov    ecx,DWORD PTR [ebp-0x4]
1001081e:	call   0x100107d0
10010823:	movzx  eax,al
10010826:	neg    eax
10010828:	sbb    eax,eax
1001082a:	add    eax,0x1
1001082d:	mov    esp,ebp
1001082f:	pop    ebp
10010830:	ret    0x4
10010833:	int3   
10010834:	int3   
10010835:	int3   
10010836:	int3   
10010837:	int3   
10010838:	int3   
10010839:	int3   
1001083a:	int3   
1001083b:	int3   
1001083c:	int3   
1001083d:	int3   
1001083e:	int3   
1001083f:	int3   
10010840:	push   ebp
10010841:	mov    ebp,esp
10010843:	mov    eax,DWORD PTR [ebp+0x8]
10010846:	add    eax,0x20
10010849:	pop    ebp
1001084a:	ret    
1001084b:	int3   
1001084c:	int3   
1001084d:	int3   
1001084e:	int3   
1001084f:	int3   
10010850:	push   ebp
10010851:	mov    ebp,esp
10010853:	mov    eax,DWORD PTR [ebp+0x8]
10010856:	add    eax,0x21
10010859:	pop    ebp
1001085a:	ret    
1001085b:	int3   
1001085c:	int3   
1001085d:	int3   
1001085e:	int3   
1001085f:	int3   
10010860:	push   ebp
10010861:	mov    ebp,esp
10010863:	mov    eax,DWORD PTR [ebp+0x8]
10010866:	push   eax
10010867:	call   0x100111f0
1001086c:	add    esp,0x4
1001086f:	push   eax
10010870:	call   0x10010880
10010875:	add    esp,0x4
10010878:	pop    ebp
10010879:	ret    
1001087a:	int3   
1001087b:	int3   
1001087c:	int3   
1001087d:	int3   
1001087e:	int3   
1001087f:	int3   
10010880:	push   ebp
10010881:	mov    ebp,esp
10010883:	mov    eax,DWORD PTR [ebp+0x8]
10010886:	pop    ebp
10010887:	ret    
10010888:	int3   
10010889:	int3   
1001088a:	int3   
1001088b:	int3   
1001088c:	int3   
1001088d:	int3   
1001088e:	int3   
1001088f:	int3   
10010890:	push   ebp
10010891:	mov    ebp,esp
10010893:	mov    eax,DWORD PTR [ebp+0x8]
10010896:	add    eax,0x4
10010899:	pop    ebp
1001089a:	ret    
1001089b:	int3   
1001089c:	int3   
1001089d:	int3   
1001089e:	int3   
1001089f:	int3   
100108a0:	push   ebp
100108a1:	mov    ebp,esp
100108a3:	mov    eax,DWORD PTR [ebp+0x8]
100108a6:	add    eax,0x8
100108a9:	pop    ebp
100108aa:	ret    
100108ab:	int3   
100108ac:	int3   
100108ad:	int3   
100108ae:	int3   
100108af:	int3   
100108b0:	push   ebp
100108b1:	mov    ebp,esp
100108b3:	push   ecx
100108b4:	mov    DWORD PTR [ebp-0x4],ecx
100108b7:	mov    eax,DWORD PTR [ebp-0x4]
100108ba:	push   eax
100108bb:	mov    ecx,DWORD PTR [ebp+0xc]
100108be:	push   ecx
100108bf:	mov    ecx,DWORD PTR [ebp-0x4]
100108c2:	call   0x10011220
100108c7:	push   eax
100108c8:	mov    ecx,DWORD PTR [ebp+0x8]
100108cb:	call   0x10011100
100108d0:	mov    eax,DWORD PTR [ebp+0x8]
100108d3:	mov    esp,ebp
100108d5:	pop    ebp
100108d6:	ret    0x8
100108d9:	int3   
100108da:	int3   
100108db:	int3   
100108dc:	int3   
100108dd:	int3   
100108de:	int3   
100108df:	int3   
100108e0:	push   ebp
100108e1:	mov    ebp,esp
100108e3:	push   0xffffffff
100108e5:	push   0x1002a598
100108ea:	mov    eax,fs:0x0
100108f0:	push   eax
100108f1:	sub    esp,0x50
100108f4:	push   esi
100108f5:	mov    eax,ds:0x10064694
100108fa:	xor    eax,ebp
100108fc:	push   eax
100108fd:	lea    eax,[ebp-0xc]
10010900:	mov    fs:0x0,eax
10010906:	mov    DWORD PTR [ebp-0x5c],ecx
10010909:	mov    ecx,DWORD PTR [ebp-0x5c]
1001090c:	call   0x10011200
10010911:	sub    eax,0x1
10010914:	mov    ecx,DWORD PTR [ebp-0x5c]
10010917:	cmp    eax,DWORD PTR [ecx+0x8]
1001091a:	ja     0x10010959
1001091c:	push   0x10055920
10010921:	lea    ecx,[ebp-0x58]
10010924:	call   0x10002b40
10010929:	mov    DWORD PTR [ebp-0x4],0x0
10010930:	lea    edx,[ebp-0x58]
10010933:	push   edx
10010934:	lea    ecx,[ebp-0x3c]
10010937:	call   0x100013c0
1001093c:	push   0x10058b0c
10010941:	lea    eax,[ebp-0x3c]
10010944:	push   eax
10010945:	call   0x100161ce
1001094a:	mov    DWORD PTR [ebp-0x4],0xffffffff
10010951:	lea    ecx,[ebp-0x58]
10010954:	call   0x10002b80
10010959:	push   0x0
1001095b:	mov    ecx,DWORD PTR [ebp+0x14]
1001095e:	push   ecx
1001095f:	mov    edx,DWORD PTR [ebp-0x5c]
10010962:	mov    eax,DWORD PTR [edx+0x4]
10010965:	push   eax
10010966:	mov    ecx,DWORD PTR [ebp+0x10]
10010969:	push   ecx
1001096a:	mov    edx,DWORD PTR [ebp-0x5c]
1001096d:	mov    eax,DWORD PTR [edx+0x4]
10010970:	push   eax
10010971:	mov    ecx,DWORD PTR [ebp-0x5c]
10010974:	call   0x100112b0
10010979:	mov    DWORD PTR [ebp-0x10],eax
1001097c:	mov    ecx,DWORD PTR [ebp-0x5c]
1001097f:	mov    edx,DWORD PTR [ecx+0x8]
10010982:	add    edx,0x1
10010985:	mov    eax,DWORD PTR [ebp-0x5c]
10010988:	mov    DWORD PTR [eax+0x8],edx
1001098b:	mov    ecx,DWORD PTR [ebp-0x5c]
1001098e:	mov    edx,DWORD PTR [ebp+0x10]
10010991:	cmp    edx,DWORD PTR [ecx+0x4]
10010994:	jne    0x100109bf
10010996:	mov    ecx,DWORD PTR [ebp-0x5c]
10010999:	call   0x10010f50
1001099e:	mov    ecx,DWORD PTR [ebp-0x10]
100109a1:	mov    DWORD PTR [eax],ecx
100109a3:	mov    ecx,DWORD PTR [ebp-0x5c]
100109a6:	call   0x10010d60
100109ab:	mov    edx,DWORD PTR [ebp-0x10]
100109ae:	mov    DWORD PTR [eax],edx
100109b0:	mov    ecx,DWORD PTR [ebp-0x5c]
100109b3:	call   0x10010f30
100109b8:	mov    ecx,DWORD PTR [ebp-0x10]
100109bb:	mov    DWORD PTR [eax],ecx
100109bd:	jmp    0x10010a23
100109bf:	movzx  edx,BYTE PTR [ebp+0xc]
100109c3:	test   edx,edx
100109c5:	je     0x100109f6
100109c7:	mov    eax,DWORD PTR [ebp+0x10]
100109ca:	push   eax
100109cb:	call   0x10010880
100109d0:	add    esp,0x4
100109d3:	mov    ecx,DWORD PTR [ebp-0x10]
100109d6:	mov    DWORD PTR [eax],ecx
100109d8:	mov    ecx,DWORD PTR [ebp-0x5c]
100109db:	call   0x10010d60
100109e0:	mov    edx,DWORD PTR [ebp+0x10]
100109e3:	cmp    edx,DWORD PTR [eax]
100109e5:	jne    0x100109f4
100109e7:	mov    ecx,DWORD PTR [ebp-0x5c]
100109ea:	call   0x10010d60
100109ef:	mov    ecx,DWORD PTR [ebp-0x10]
100109f2:	mov    DWORD PTR [eax],ecx
100109f4:	jmp    0x10010a23
100109f6:	mov    edx,DWORD PTR [ebp+0x10]
100109f9:	push   edx
100109fa:	call   0x100108a0
100109ff:	add    esp,0x4
10010a02:	mov    ecx,DWORD PTR [ebp-0x10]
10010a05:	mov    DWORD PTR [eax],ecx
10010a07:	mov    ecx,DWORD PTR [ebp-0x5c]
10010a0a:	call   0x10010f30
10010a0f:	mov    edx,DWORD PTR [ebp+0x10]
10010a12:	cmp    edx,DWORD PTR [eax]
10010a14:	jne    0x10010a23
10010a16:	mov    ecx,DWORD PTR [ebp-0x5c]
10010a19:	call   0x10010f30
10010a1e:	mov    ecx,DWORD PTR [ebp-0x10]
10010a21:	mov    DWORD PTR [eax],ecx
10010a23:	mov    edx,DWORD PTR [ebp-0x10]
10010a26:	mov    DWORD PTR [ebp-0x14],edx
10010a29:	mov    eax,DWORD PTR [ebp-0x14]
10010a2c:	push   eax
10010a2d:	call   0x10010890
10010a32:	add    esp,0x4
10010a35:	mov    ecx,DWORD PTR [eax]
10010a37:	push   ecx
10010a38:	call   0x10010840
10010a3d:	add    esp,0x4
10010a40:	movsx  edx,BYTE PTR [eax]
10010a43:	test   edx,edx
10010a45:	jne    0x10010d19
10010a4b:	mov    eax,DWORD PTR [ebp-0x14]
10010a4e:	push   eax
10010a4f:	call   0x10010890
10010a54:	add    esp,0x4
10010a57:	mov    esi,eax
10010a59:	mov    ecx,DWORD PTR [ebp-0x14]
10010a5c:	push   ecx
10010a5d:	call   0x10010890
10010a62:	add    esp,0x4
10010a65:	mov    edx,DWORD PTR [eax]
10010a67:	push   edx
10010a68:	call   0x10010890
10010a6d:	add    esp,0x4
10010a70:	mov    eax,DWORD PTR [eax]
10010a72:	push   eax
10010a73:	call   0x10010880
10010a78:	add    esp,0x4
10010a7b:	mov    ecx,DWORD PTR [esi]
10010a7d:	cmp    ecx,DWORD PTR [eax]
10010a7f:	jne    0x10010bcf
10010a85:	mov    edx,DWORD PTR [ebp-0x14]
10010a88:	push   edx
10010a89:	call   0x10010890
10010a8e:	add    esp,0x4
10010a91:	mov    eax,DWORD PTR [eax]
10010a93:	push   eax
10010a94:	call   0x10010890
10010a99:	add    esp,0x4
10010a9c:	mov    ecx,DWORD PTR [eax]
10010a9e:	push   ecx
10010a9f:	call   0x100108a0
10010aa4:	add    esp,0x4
10010aa7:	mov    edx,DWORD PTR [eax]
10010aa9:	mov    DWORD PTR [ebp+0x10],edx
10010aac:	mov    eax,DWORD PTR [ebp+0x10]
10010aaf:	push   eax
10010ab0:	call   0x10010840
10010ab5:	add    esp,0x4
10010ab8:	movsx  ecx,BYTE PTR [eax]
10010abb:	test   ecx,ecx
10010abd:	jne    0x10010b2e
10010abf:	mov    edx,DWORD PTR [ebp-0x14]
10010ac2:	push   edx
10010ac3:	call   0x10010890
10010ac8:	add    esp,0x4
10010acb:	mov    eax,DWORD PTR [eax]
10010acd:	push   eax
10010ace:	call   0x10010840
10010ad3:	add    esp,0x4
10010ad6:	mov    BYTE PTR [eax],0x1
10010ad9:	mov    ecx,DWORD PTR [ebp+0x10]
10010adc:	push   ecx
10010add:	call   0x10010840
10010ae2:	add    esp,0x4
10010ae5:	mov    BYTE PTR [eax],0x1
10010ae8:	mov    edx,DWORD PTR [ebp-0x14]
10010aeb:	push   edx
10010aec:	call   0x10010890
10010af1:	add    esp,0x4
10010af4:	mov    eax,DWORD PTR [eax]
10010af6:	push   eax
10010af7:	call   0x10010890
10010afc:	add    esp,0x4
10010aff:	mov    ecx,DWORD PTR [eax]
10010b01:	push   ecx
10010b02:	call   0x10010840
10010b07:	add    esp,0x4
10010b0a:	mov    BYTE PTR [eax],0x0
10010b0d:	mov    edx,DWORD PTR [ebp-0x14]
10010b10:	push   edx
10010b11:	call   0x10010890
10010b16:	add    esp,0x4
10010b19:	mov    eax,DWORD PTR [eax]
10010b1b:	push   eax
10010b1c:	call   0x10010890
10010b21:	add    esp,0x4
10010b24:	mov    ecx,DWORD PTR [eax]
10010b26:	mov    DWORD PTR [ebp-0x14],ecx
10010b29:	jmp    0x10010bca
10010b2e:	mov    edx,DWORD PTR [ebp-0x14]
10010b31:	push   edx
10010b32:	call   0x10010890
10010b37:	add    esp,0x4
10010b3a:	mov    eax,DWORD PTR [eax]
10010b3c:	push   eax
10010b3d:	call   0x100108a0
10010b42:	add    esp,0x4
10010b45:	mov    ecx,DWORD PTR [ebp-0x14]
10010b48:	cmp    ecx,DWORD PTR [eax]
10010b4a:	jne    0x10010b69
10010b4c:	mov    edx,DWORD PTR [ebp-0x14]
10010b4f:	push   edx
10010b50:	call   0x10010890
10010b55:	add    esp,0x4
10010b58:	mov    eax,DWORD PTR [eax]
10010b5a:	mov    DWORD PTR [ebp-0x14],eax
10010b5d:	mov    ecx,DWORD PTR [ebp-0x14]
10010b60:	push   ecx
10010b61:	mov    ecx,DWORD PTR [ebp-0x5c]
10010b64:	call   0x10010d80
10010b69:	mov    edx,DWORD PTR [ebp-0x14]
10010b6c:	push   edx
10010b6d:	call   0x10010890
10010b72:	add    esp,0x4
10010b75:	mov    eax,DWORD PTR [eax]
10010b77:	push   eax
10010b78:	call   0x10010840
10010b7d:	add    esp,0x4
10010b80:	mov    BYTE PTR [eax],0x1
10010b83:	mov    ecx,DWORD PTR [ebp-0x14]
10010b86:	push   ecx
10010b87:	call   0x10010890
10010b8c:	add    esp,0x4
10010b8f:	mov    edx,DWORD PTR [eax]
10010b91:	push   edx
10010b92:	call   0x10010890
10010b97:	add    esp,0x4
10010b9a:	mov    eax,DWORD PTR [eax]
10010b9c:	push   eax
10010b9d:	call   0x10010840
10010ba2:	add    esp,0x4
10010ba5:	mov    BYTE PTR [eax],0x0
10010ba8:	mov    ecx,DWORD PTR [ebp-0x14]
10010bab:	push   ecx
10010bac:	call   0x10010890
10010bb1:	add    esp,0x4
10010bb4:	mov    edx,DWORD PTR [eax]
10010bb6:	push   edx
10010bb7:	call   0x10010890
10010bbc:	add    esp,0x4
10010bbf:	mov    eax,DWORD PTR [eax]
10010bc1:	push   eax
10010bc2:	mov    ecx,DWORD PTR [ebp-0x5c]
10010bc5:	call   0x10010f70
10010bca:	jmp    0x10010d14
10010bcf:	mov    ecx,DWORD PTR [ebp-0x14]
10010bd2:	push   ecx
10010bd3:	call   0x10010890
10010bd8:	add    esp,0x4
10010bdb:	mov    edx,DWORD PTR [eax]
10010bdd:	push   edx
10010bde:	call   0x10010890
10010be3:	add    esp,0x4
10010be6:	mov    eax,DWORD PTR [eax]
10010be8:	push   eax
10010be9:	call   0x10010880
10010bee:	add    esp,0x4
10010bf1:	mov    ecx,DWORD PTR [eax]
10010bf3:	mov    DWORD PTR [ebp+0x10],ecx
10010bf6:	mov    edx,DWORD PTR [ebp+0x10]
10010bf9:	push   edx
10010bfa:	call   0x10010840
10010bff:	add    esp,0x4
10010c02:	movsx  eax,BYTE PTR [eax]
10010c05:	test   eax,eax
10010c07:	jne    0x10010c78
10010c09:	mov    ecx,DWORD PTR [ebp-0x14]
10010c0c:	push   ecx
10010c0d:	call   0x10010890
10010c12:	add    esp,0x4
10010c15:	mov    edx,DWORD PTR [eax]
10010c17:	push   edx
10010c18:	call   0x10010840
10010c1d:	add    esp,0x4
10010c20:	mov    BYTE PTR [eax],0x1
10010c23:	mov    eax,DWORD PTR [ebp+0x10]
10010c26:	push   eax
10010c27:	call   0x10010840
10010c2c:	add    esp,0x4
10010c2f:	mov    BYTE PTR [eax],0x1
10010c32:	mov    ecx,DWORD PTR [ebp-0x14]
10010c35:	push   ecx
10010c36:	call   0x10010890
10010c3b:	add    esp,0x4
10010c3e:	mov    edx,DWORD PTR [eax]
10010c40:	push   edx
10010c41:	call   0x10010890
10010c46:	add    esp,0x4
10010c49:	mov    eax,DWORD PTR [eax]
10010c4b:	push   eax
10010c4c:	call   0x10010840
10010c51:	add    esp,0x4
10010c54:	mov    BYTE PTR [eax],0x0
10010c57:	mov    ecx,DWORD PTR [ebp-0x14]
10010c5a:	push   ecx
10010c5b:	call   0x10010890
10010c60:	add    esp,0x4
10010c63:	mov    edx,DWORD PTR [eax]
10010c65:	push   edx
10010c66:	call   0x10010890
10010c6b:	add    esp,0x4
10010c6e:	mov    eax,DWORD PTR [eax]
10010c70:	mov    DWORD PTR [ebp-0x14],eax
10010c73:	jmp    0x10010d14
10010c78:	mov    ecx,DWORD PTR [ebp-0x14]
10010c7b:	push   ecx
10010c7c:	call   0x10010890
10010c81:	add    esp,0x4
10010c84:	mov    edx,DWORD PTR [eax]
10010c86:	push   edx
10010c87:	call   0x10010880
10010c8c:	add    esp,0x4
10010c8f:	mov    ecx,DWORD PTR [ebp-0x14]
10010c92:	cmp    ecx,DWORD PTR [eax]
10010c94:	jne    0x10010cb3
10010c96:	mov    edx,DWORD PTR [ebp-0x14]
10010c99:	push   edx
10010c9a:	call   0x10010890
10010c9f:	add    esp,0x4
10010ca2:	mov    eax,DWORD PTR [eax]
10010ca4:	mov    DWORD PTR [ebp-0x14],eax
10010ca7:	mov    ecx,DWORD PTR [ebp-0x14]
10010caa:	push   ecx
10010cab:	mov    ecx,DWORD PTR [ebp-0x5c]
10010cae:	call   0x10010f70
10010cb3:	mov    edx,DWORD PTR [ebp-0x14]
10010cb6:	push   edx
10010cb7:	call   0x10010890
10010cbc:	add    esp,0x4
10010cbf:	mov    eax,DWORD PTR [eax]
10010cc1:	push   eax
10010cc2:	call   0x10010840
10010cc7:	add    esp,0x4
10010cca:	mov    BYTE PTR [eax],0x1
10010ccd:	mov    ecx,DWORD PTR [ebp-0x14]
10010cd0:	push   ecx
10010cd1:	call   0x10010890
10010cd6:	add    esp,0x4
10010cd9:	mov    edx,DWORD PTR [eax]
10010cdb:	push   edx
10010cdc:	call   0x10010890
10010ce1:	add    esp,0x4
10010ce4:	mov    eax,DWORD PTR [eax]
10010ce6:	push   eax
10010ce7:	call   0x10010840
10010cec:	add    esp,0x4
10010cef:	mov    BYTE PTR [eax],0x0
10010cf2:	mov    ecx,DWORD PTR [ebp-0x14]
10010cf5:	push   ecx
10010cf6:	call   0x10010890
10010cfb:	add    esp,0x4
10010cfe:	mov    edx,DWORD PTR [eax]
10010d00:	push   edx
10010d01:	call   0x10010890
10010d06:	add    esp,0x4
10010d09:	mov    eax,DWORD PTR [eax]
10010d0b:	push   eax
10010d0c:	mov    ecx,DWORD PTR [ebp-0x5c]
10010d0f:	call   0x10010d80
10010d14:	jmp    0x10010a29
10010d19:	mov    ecx,DWORD PTR [ebp-0x5c]
10010d1c:	call   0x10010f50
10010d21:	mov    ecx,DWORD PTR [eax]
10010d23:	push   ecx
10010d24:	call   0x10010840
10010d29:	add    esp,0x4
10010d2c:	mov    BYTE PTR [eax],0x1
10010d2f:	mov    edx,DWORD PTR [ebp-0x5c]
10010d32:	push   edx
10010d33:	mov    eax,DWORD PTR [ebp-0x10]
10010d36:	push   eax
10010d37:	mov    ecx,DWORD PTR [ebp+0x8]
10010d3a:	call   0x10011100
10010d3f:	mov    eax,DWORD PTR [ebp+0x8]
10010d42:	mov    ecx,DWORD PTR [ebp-0xc]
10010d45:	mov    DWORD PTR fs:0x0,ecx
10010d4c:	pop    ecx
10010d4d:	pop    esi
10010d4e:	mov    esp,ebp
10010d50:	pop    ebp
10010d51:	ret    0x10
10010d54:	int3   
10010d55:	int3   
10010d56:	int3   
10010d57:	int3   
10010d58:	int3   
10010d59:	int3   
10010d5a:	int3   
10010d5b:	int3   
10010d5c:	int3   
10010d5d:	int3   
10010d5e:	int3   
10010d5f:	int3   
10010d60:	push   ebp
10010d61:	mov    ebp,esp
10010d63:	push   ecx
10010d64:	mov    DWORD PTR [ebp-0x4],ecx
10010d67:	mov    eax,DWORD PTR [ebp-0x4]
10010d6a:	mov    ecx,DWORD PTR [eax+0x4]
10010d6d:	push   ecx
10010d6e:	call   0x10010880
10010d73:	add    esp,0x4
10010d76:	mov    esp,ebp
10010d78:	pop    ebp
10010d79:	ret    
10010d7a:	int3   
10010d7b:	int3   
10010d7c:	int3   
10010d7d:	int3   
10010d7e:	int3   
10010d7f:	int3   
10010d80:	push   ebp
10010d81:	mov    ebp,esp
10010d83:	sub    esp,0x8
10010d86:	push   esi
10010d87:	mov    DWORD PTR [ebp-0x8],ecx
10010d8a:	mov    eax,DWORD PTR [ebp+0x8]
10010d8d:	push   eax
10010d8e:	call   0x100108a0
10010d93:	add    esp,0x4
10010d96:	mov    ecx,DWORD PTR [eax]
10010d98:	mov    DWORD PTR [ebp-0x4],ecx
10010d9b:	mov    edx,DWORD PTR [ebp-0x4]
10010d9e:	push   edx
10010d9f:	call   0x10010880
10010da4:	add    esp,0x4
10010da7:	mov    esi,eax
10010da9:	mov    eax,DWORD PTR [ebp+0x8]
10010dac:	push   eax
10010dad:	call   0x100108a0
10010db2:	add    esp,0x4
10010db5:	mov    ecx,DWORD PTR [esi]
10010db7:	mov    DWORD PTR [eax],ecx
10010db9:	mov    edx,DWORD PTR [ebp-0x4]
10010dbc:	push   edx
10010dbd:	call   0x10010880
10010dc2:	add    esp,0x4
10010dc5:	mov    eax,DWORD PTR [eax]
10010dc7:	push   eax
10010dc8:	call   0x10010850
10010dcd:	add    esp,0x4
10010dd0:	movsx  ecx,BYTE PTR [eax]
10010dd3:	test   ecx,ecx
10010dd5:	jne    0x10010df3
10010dd7:	mov    edx,DWORD PTR [ebp-0x4]
10010dda:	push   edx
10010ddb:	call   0x10010880
10010de0:	add    esp,0x4
10010de3:	mov    eax,DWORD PTR [eax]
10010de5:	push   eax
10010de6:	call   0x10010890
10010deb:	add    esp,0x4
10010dee:	mov    ecx,DWORD PTR [ebp+0x8]
10010df1:	mov    DWORD PTR [eax],ecx
10010df3:	mov    edx,DWORD PTR [ebp+0x8]
10010df6:	push   edx
10010df7:	call   0x10010890
10010dfc:	add    esp,0x4
10010dff:	mov    esi,eax
10010e01:	mov    eax,DWORD PTR [ebp-0x4]
10010e04:	push   eax
10010e05:	call   0x10010890
10010e0a:	add    esp,0x4
10010e0d:	mov    ecx,DWORD PTR [esi]
10010e0f:	mov    DWORD PTR [eax],ecx
10010e11:	mov    ecx,DWORD PTR [ebp-0x8]
10010e14:	call   0x10010f50
10010e19:	mov    edx,DWORD PTR [ebp+0x8]
10010e1c:	cmp    edx,DWORD PTR [eax]
10010e1e:	jne    0x10010e2f
10010e20:	mov    ecx,DWORD PTR [ebp-0x8]
10010e23:	call   0x10010f50
10010e28:	mov    ecx,DWORD PTR [ebp-0x4]
10010e2b:	mov    DWORD PTR [eax],ecx
10010e2d:	jmp    0x10010e87
10010e2f:	mov    edx,DWORD PTR [ebp+0x8]
10010e32:	push   edx
10010e33:	call   0x10010890
10010e38:	add    esp,0x4
10010e3b:	mov    eax,DWORD PTR [eax]
10010e3d:	push   eax
10010e3e:	call   0x10010880
10010e43:	add    esp,0x4
10010e46:	mov    ecx,DWORD PTR [ebp+0x8]
10010e49:	cmp    ecx,DWORD PTR [eax]
10010e4b:	jne    0x10010e6b
10010e4d:	mov    edx,DWORD PTR [ebp+0x8]
10010e50:	push   edx
10010e51:	call   0x10010890
10010e56:	add    esp,0x4
10010e59:	mov    eax,DWORD PTR [eax]
10010e5b:	push   eax
10010e5c:	call   0x10010880
10010e61:	add    esp,0x4
10010e64:	mov    ecx,DWORD PTR [ebp-0x4]
10010e67:	mov    DWORD PTR [eax],ecx
10010e69:	jmp    0x10010e87
10010e6b:	mov    edx,DWORD PTR [ebp+0x8]
10010e6e:	push   edx
10010e6f:	call   0x10010890
10010e74:	add    esp,0x4
10010e77:	mov    eax,DWORD PTR [eax]
10010e79:	push   eax
10010e7a:	call   0x100108a0
10010e7f:	add    esp,0x4
10010e82:	mov    ecx,DWORD PTR [ebp-0x4]
10010e85:	mov    DWORD PTR [eax],ecx
10010e87:	mov    edx,DWORD PTR [ebp-0x4]
10010e8a:	push   edx
10010e8b:	call   0x10010880
10010e90:	add    esp,0x4
10010e93:	mov    ecx,DWORD PTR [ebp+0x8]
10010e96:	mov    DWORD PTR [eax],ecx
10010e98:	mov    edx,DWORD PTR [ebp+0x8]
10010e9b:	push   edx
10010e9c:	call   0x10010890
10010ea1:	add    esp,0x4
10010ea4:	mov    ecx,DWORD PTR [ebp-0x4]
10010ea7:	mov    DWORD PTR [eax],ecx
10010ea9:	pop    esi
10010eaa:	mov    esp,ebp
10010eac:	pop    ebp
10010ead:	ret    0x4
10010eb0:	push   ebp
10010eb1:	mov    ebp,esp
10010eb3:	mov    eax,DWORD PTR [ebp+0x8]
10010eb6:	push   eax
10010eb7:	call   0x100108a0
10010ebc:	add    esp,0x4
10010ebf:	mov    ecx,DWORD PTR [eax]
10010ec1:	push   ecx
10010ec2:	call   0x10010850
10010ec7:	add    esp,0x4
10010eca:	movsx  edx,BYTE PTR [eax]
10010ecd:	test   edx,edx
10010ecf:	jne    0x10010ee4
10010ed1:	mov    eax,DWORD PTR [ebp+0x8]
10010ed4:	push   eax
10010ed5:	call   0x100108a0
10010eda:	add    esp,0x4
10010edd:	mov    ecx,DWORD PTR [eax]
10010edf:	mov    DWORD PTR [ebp+0x8],ecx
10010ee2:	jmp    0x10010eb3
10010ee4:	mov    eax,DWORD PTR [ebp+0x8]
10010ee7:	pop    ebp
10010ee8:	ret    
10010ee9:	int3   
10010eea:	int3   
10010eeb:	int3   
10010eec:	int3   
10010eed:	int3   
10010eee:	int3   
10010eef:	int3   
10010ef0:	push   ebp
10010ef1:	mov    ebp,esp
10010ef3:	mov    eax,DWORD PTR [ebp+0x8]
10010ef6:	push   eax
10010ef7:	call   0x10010880
10010efc:	add    esp,0x4
10010eff:	mov    ecx,DWORD PTR [eax]
10010f01:	push   ecx
10010f02:	call   0x10010850
10010f07:	add    esp,0x4
10010f0a:	movsx  edx,BYTE PTR [eax]
10010f0d:	test   edx,edx
10010f0f:	jne    0x10010f24
10010f11:	mov    eax,DWORD PTR [ebp+0x8]
10010f14:	push   eax
10010f15:	call   0x10010880
10010f1a:	add    esp,0x4
10010f1d:	mov    ecx,DWORD PTR [eax]
10010f1f:	mov    DWORD PTR [ebp+0x8],ecx
10010f22:	jmp    0x10010ef3
10010f24:	mov    eax,DWORD PTR [ebp+0x8]
10010f27:	pop    ebp
10010f28:	ret    
10010f29:	int3   
10010f2a:	int3   
10010f2b:	int3   
10010f2c:	int3   
10010f2d:	int3   
10010f2e:	int3   
10010f2f:	int3   
10010f30:	push   ebp
10010f31:	mov    ebp,esp
10010f33:	push   ecx
10010f34:	mov    DWORD PTR [ebp-0x4],ecx
10010f37:	mov    eax,DWORD PTR [ebp-0x4]
10010f3a:	mov    ecx,DWORD PTR [eax+0x4]
10010f3d:	push   ecx
10010f3e:	call   0x100108a0
10010f43:	add    esp,0x4
10010f46:	mov    esp,ebp
10010f48:	pop    ebp
10010f49:	ret    
10010f4a:	int3   
10010f4b:	int3   
10010f4c:	int3   
10010f4d:	int3   
10010f4e:	int3   
10010f4f:	int3   
10010f50:	push   ebp
10010f51:	mov    ebp,esp
10010f53:	push   ecx
10010f54:	mov    DWORD PTR [ebp-0x4],ecx
10010f57:	mov    eax,DWORD PTR [ebp-0x4]
10010f5a:	mov    ecx,DWORD PTR [eax+0x4]
10010f5d:	push   ecx
10010f5e:	call   0x10010890
10010f63:	add    esp,0x4
10010f66:	mov    esp,ebp
10010f68:	pop    ebp
10010f69:	ret    
10010f6a:	int3   
10010f6b:	int3   
10010f6c:	int3   
10010f6d:	int3   
10010f6e:	int3   
10010f6f:	int3   
10010f70:	push   ebp
10010f71:	mov    ebp,esp
10010f73:	sub    esp,0x8
10010f76:	push   esi
10010f77:	mov    DWORD PTR [ebp-0x8],ecx
10010f7a:	mov    eax,DWORD PTR [ebp+0x8]
10010f7d:	push   eax
10010f7e:	call   0x10010880
10010f83:	add    esp,0x4
10010f86:	mov    ecx,DWORD PTR [eax]
10010f88:	mov    DWORD PTR [ebp-0x4],ecx
10010f8b:	mov    edx,DWORD PTR [ebp-0x4]
10010f8e:	push   edx
10010f8f:	call   0x100108a0
10010f94:	add    esp,0x4
10010f97:	mov    esi,eax
10010f99:	mov    eax,DWORD PTR [ebp+0x8]
10010f9c:	push   eax
10010f9d:	call   0x10010880
10010fa2:	add    esp,0x4
10010fa5:	mov    ecx,DWORD PTR [esi]
10010fa7:	mov    DWORD PTR [eax],ecx
10010fa9:	mov    edx,DWORD PTR [ebp-0x4]
10010fac:	push   edx
10010fad:	call   0x100108a0
10010fb2:	add    esp,0x4
10010fb5:	mov    eax,DWORD PTR [eax]
10010fb7:	push   eax
10010fb8:	call   0x10010850
10010fbd:	add    esp,0x4
10010fc0:	movsx  ecx,BYTE PTR [eax]
10010fc3:	test   ecx,ecx
10010fc5:	jne    0x10010fe3
10010fc7:	mov    edx,DWORD PTR [ebp-0x4]
10010fca:	push   edx
10010fcb:	call   0x100108a0
10010fd0:	add    esp,0x4
10010fd3:	mov    eax,DWORD PTR [eax]
10010fd5:	push   eax
10010fd6:	call   0x10010890
10010fdb:	add    esp,0x4
10010fde:	mov    ecx,DWORD PTR [ebp+0x8]
10010fe1:	mov    DWORD PTR [eax],ecx
10010fe3:	mov    edx,DWORD PTR [ebp+0x8]
10010fe6:	push   edx
10010fe7:	call   0x10010890
10010fec:	add    esp,0x4
10010fef:	mov    esi,eax
10010ff1:	mov    eax,DWORD PTR [ebp-0x4]
10010ff4:	push   eax
10010ff5:	call   0x10010890
10010ffa:	add    esp,0x4
10010ffd:	mov    ecx,DWORD PTR [esi]
10010fff:	mov    DWORD PTR [eax],ecx
10011001:	mov    ecx,DWORD PTR [ebp-0x8]
10011004:	call   0x10010f50
10011009:	mov    edx,DWORD PTR [ebp+0x8]
1001100c:	cmp    edx,DWORD PTR [eax]
1001100e:	jne    0x1001101f
10011010:	mov    ecx,DWORD PTR [ebp-0x8]
10011013:	call   0x10010f50
10011018:	mov    ecx,DWORD PTR [ebp-0x4]
1001101b:	mov    DWORD PTR [eax],ecx
1001101d:	jmp    0x10011077
1001101f:	mov    edx,DWORD PTR [ebp+0x8]
10011022:	push   edx
10011023:	call   0x10010890
10011028:	add    esp,0x4
1001102b:	mov    eax,DWORD PTR [eax]
1001102d:	push   eax
1001102e:	call   0x100108a0
10011033:	add    esp,0x4
10011036:	mov    ecx,DWORD PTR [ebp+0x8]
10011039:	cmp    ecx,DWORD PTR [eax]
1001103b:	jne    0x1001105b
1001103d:	mov    edx,DWORD PTR [ebp+0x8]
10011040:	push   edx
10011041:	call   0x10010890
10011046:	add    esp,0x4
10011049:	mov    eax,DWORD PTR [eax]
1001104b:	push   eax
1001104c:	call   0x100108a0
10011051:	add    esp,0x4
10011054:	mov    ecx,DWORD PTR [ebp-0x4]
10011057:	mov    DWORD PTR [eax],ecx
10011059:	jmp    0x10011077
1001105b:	mov    edx,DWORD PTR [ebp+0x8]
1001105e:	push   edx
1001105f:	call   0x10010890
10011064:	add    esp,0x4
10011067:	mov    eax,DWORD PTR [eax]
10011069:	push   eax
1001106a:	call   0x10010880
1001106f:	add    esp,0x4
10011072:	mov    ecx,DWORD PTR [ebp-0x4]
10011075:	mov    DWORD PTR [eax],ecx
10011077:	mov    edx,DWORD PTR [ebp-0x4]
1001107a:	push   edx
1001107b:	call   0x100108a0
10011080:	add    esp,0x4
10011083:	mov    ecx,DWORD PTR [ebp+0x8]
10011086:	mov    DWORD PTR [eax],ecx
10011088:	mov    edx,DWORD PTR [ebp+0x8]
1001108b:	push   edx
1001108c:	call   0x10010890
10011091:	add    esp,0x4
10011094:	mov    ecx,DWORD PTR [ebp-0x4]
10011097:	mov    DWORD PTR [eax],ecx
10011099:	pop    esi
1001109a:	mov    esp,ebp
1001109c:	pop    ebp
1001109d:	ret    0x4
100110a0:	push   ebp
100110a1:	mov    ebp,esp
100110a3:	push   ecx
100110a4:	mov    DWORD PTR [ebp-0x4],ecx
100110a7:	mov    eax,DWORD PTR [ebp+0x8]
100110aa:	mov    ecx,DWORD PTR [ebp+0xc]
100110ad:	mov    edx,DWORD PTR [eax]
100110af:	cmp    edx,DWORD PTR [ecx]
100110b1:	sbb    eax,eax
100110b3:	neg    eax
100110b5:	mov    esp,ebp
100110b7:	pop    ebp
100110b8:	ret    0x8
100110bb:	int3   
100110bc:	int3   
100110bd:	int3   
100110be:	int3   
100110bf:	int3   
100110c0:	push   ebp
100110c1:	mov    ebp,esp
100110c3:	push   ecx
100110c4:	mov    DWORD PTR [ebp-0x4],ecx
100110c7:	mov    eax,DWORD PTR [ebp+0x8]
100110ca:	push   eax
100110cb:	call   0x10015ad6
100110d0:	add    esp,0x4
100110d3:	mov    esp,ebp
100110d5:	pop    ebp
100110d6:	ret    0x8
100110d9:	int3   
100110da:	int3   
100110db:	int3   
100110dc:	int3   
100110dd:	int3   
100110de:	int3   
100110df:	int3   
100110e0:	push   ebp
100110e1:	mov    ebp,esp
100110e3:	push   ecx
100110e4:	mov    DWORD PTR [ebp-0x4],ecx
100110e7:	mov    eax,DWORD PTR [ebp+0x8]
100110ea:	push   eax
100110eb:	call   0x10011700
100110f0:	add    esp,0x4
100110f3:	mov    esp,ebp
100110f5:	pop    ebp
100110f6:	ret    0x4
100110f9:	int3   
100110fa:	int3   
100110fb:	int3   
100110fc:	int3   
100110fd:	int3   
100110fe:	int3   
100110ff:	int3   
10011100:	push   ebp
10011101:	mov    ebp,esp
10011103:	push   ecx
10011104:	mov    DWORD PTR [ebp-0x4],ecx
10011107:	mov    eax,DWORD PTR [ebp+0xc]
1001110a:	push   eax
1001110b:	mov    ecx,DWORD PTR [ebp+0x8]
1001110e:	push   ecx
1001110f:	mov    ecx,DWORD PTR [ebp-0x4]
10011112:	call   0x10011390
10011117:	mov    eax,DWORD PTR [ebp-0x4]
1001111a:	mov    esp,ebp
1001111c:	pop    ebp
1001111d:	ret    0x8
10011120:	push   ebp
10011121:	mov    ebp,esp
10011123:	push   ecx
10011124:	mov    DWORD PTR [ebp-0x4],ecx
10011127:	mov    ecx,DWORD PTR [ebp-0x4]
1001112a:	call   0x100113d0
1001112f:	mov    eax,DWORD PTR [ebp-0x4]
10011132:	mov    esp,ebp
10011134:	pop    ebp
10011135:	ret    
10011136:	int3   
10011137:	int3   
10011138:	int3   
10011139:	int3   
1001113a:	int3   
1001113b:	int3   
1001113c:	int3   
1001113d:	int3   
1001113e:	int3   
1001113f:	int3   
10011140:	push   ebp
10011141:	mov    ebp,esp
10011143:	push   ecx
10011144:	mov    DWORD PTR [ebp-0x4],ecx
10011147:	mov    eax,DWORD PTR [ebp-0x4]
1001114a:	cmp    DWORD PTR [eax],0x0
1001114d:	jne    0x10011154
1001114f:	call   0x10016143
10011154:	mov    ecx,DWORD PTR [ebp-0x4]
10011157:	mov    edx,DWORD PTR [ecx]
10011159:	mov    eax,DWORD PTR [ebp-0x4]
1001115c:	mov    ecx,DWORD PTR [eax+0x4]
1001115f:	cmp    ecx,DWORD PTR [edx+0x4]
10011162:	jne    0x10011169
10011164:	call   0x10016143
10011169:	mov    edx,DWORD PTR [ebp-0x4]
1001116c:	mov    eax,DWORD PTR [edx+0x4]
1001116f:	push   eax
10011170:	call   0x100111f0
10011175:	add    esp,0x4
10011178:	mov    esp,ebp
1001117a:	pop    ebp
1001117b:	ret    
1001117c:	int3   
1001117d:	int3   
1001117e:	int3   
1001117f:	int3   
10011180:	push   ebp
10011181:	mov    ebp,esp
10011183:	push   ecx
10011184:	mov    DWORD PTR [ebp-0x4],ecx
10011187:	mov    ecx,DWORD PTR [ebp-0x4]
1001118a:	call   0x100113f0
1001118f:	mov    eax,DWORD PTR [ebp-0x4]
10011192:	mov    esp,ebp
10011194:	pop    ebp
10011195:	ret    
10011196:	int3   
10011197:	int3   
10011198:	int3   
10011199:	int3   
1001119a:	int3   
1001119b:	int3   
1001119c:	int3   
1001119d:	int3   
1001119e:	int3   
1001119f:	int3   
100111a0:	push   ebp
100111a1:	mov    ebp,esp
100111a3:	push   ecx
100111a4:	mov    DWORD PTR [ebp-0x4],ecx
100111a7:	mov    eax,DWORD PTR [ebp-0x4]
100111aa:	mov    eax,DWORD PTR [eax+0x4]
100111ad:	mov    esp,ebp
100111af:	pop    ebp
100111b0:	ret    
100111b1:	int3   
100111b2:	int3   
100111b3:	int3   
100111b4:	int3   
100111b5:	int3   
100111b6:	int3   
100111b7:	int3   
100111b8:	int3   
100111b9:	int3   
100111ba:	int3   
100111bb:	int3   
100111bc:	int3   
100111bd:	int3   
100111be:	int3   
100111bf:	int3   
100111c0:	push   ebp
100111c1:	mov    ebp,esp
100111c3:	push   ecx
100111c4:	mov    DWORD PTR [ebp-0x4],ecx
100111c7:	mov    eax,DWORD PTR [ebp+0x8]
100111ca:	mov    ecx,DWORD PTR [eax]
100111cc:	mov    edx,DWORD PTR [eax+0x4]
100111cf:	mov    eax,DWORD PTR [ebp-0x4]
100111d2:	mov    DWORD PTR [eax],ecx
100111d4:	mov    DWORD PTR [eax+0x4],edx
100111d7:	mov    ecx,DWORD PTR [ebp-0x4]
100111da:	mov    edx,DWORD PTR [ebp+0xc]
100111dd:	mov    al,BYTE PTR [edx]
100111df:	mov    BYTE PTR [ecx+0x8],al
100111e2:	mov    eax,DWORD PTR [ebp-0x4]
100111e5:	mov    esp,ebp
100111e7:	pop    ebp
100111e8:	ret    0x8
100111eb:	int3   
100111ec:	int3   
100111ed:	int3   
100111ee:	int3   
100111ef:	int3   
100111f0:	push   ebp
100111f1:	mov    ebp,esp
100111f3:	mov    eax,DWORD PTR [ebp+0x8]
100111f6:	add    eax,0x10
100111f9:	pop    ebp
100111fa:	ret    
100111fb:	int3   
100111fc:	int3   
100111fd:	int3   
100111fe:	int3   
100111ff:	int3   
10011200:	push   ebp
10011201:	mov    ebp,esp
10011203:	push   ecx
10011204:	mov    DWORD PTR [ebp-0x4],ecx
10011207:	mov    ecx,DWORD PTR [ebp-0x4]
1001120a:	add    ecx,0x3
1001120d:	call   0x100114e0
10011212:	mov    esp,ebp
10011214:	pop    ebp
10011215:	ret    
10011216:	int3   
10011217:	int3   
10011218:	int3   
10011219:	int3   
1001121a:	int3   
1001121b:	int3   
1001121c:	int3   
1001121d:	int3   
1001121e:	int3   
1001121f:	int3   
10011220:	push   ebp
10011221:	mov    ebp,esp
10011223:	sub    esp,0xc
10011226:	mov    DWORD PTR [ebp-0xc],ecx
10011229:	mov    ecx,DWORD PTR [ebp-0xc]
1001122c:	call   0x10010f50
10011231:	mov    eax,DWORD PTR [eax]
10011233:	mov    DWORD PTR [ebp-0x8],eax
10011236:	mov    ecx,DWORD PTR [ebp-0xc]
10011239:	mov    edx,DWORD PTR [ecx+0x4]
1001123c:	mov    DWORD PTR [ebp-0x4],edx
1001123f:	mov    eax,DWORD PTR [ebp-0x8]
10011242:	push   eax
10011243:	call   0x10010850
10011248:	add    esp,0x4
1001124b:	movsx  ecx,BYTE PTR [eax]
1001124e:	test   ecx,ecx
10011250:	jne    0x1001129e
10011252:	mov    edx,DWORD PTR [ebp+0x8]
10011255:	push   edx
10011256:	mov    eax,DWORD PTR [ebp-0x8]
10011259:	push   eax
1001125a:	call   0x10010860
1001125f:	add    esp,0x4
10011262:	push   eax
10011263:	mov    ecx,DWORD PTR [ebp-0xc]
10011266:	call   0x100110a0
1001126b:	movzx  ecx,al
1001126e:	test   ecx,ecx
10011270:	je     0x10011285
10011272:	mov    edx,DWORD PTR [ebp-0x8]
10011275:	push   edx
10011276:	call   0x100108a0
1001127b:	add    esp,0x4
1001127e:	mov    eax,DWORD PTR [eax]
10011280:	mov    DWORD PTR [ebp-0x8],eax
10011283:	jmp    0x1001129c
10011285:	mov    ecx,DWORD PTR [ebp-0x8]
10011288:	mov    DWORD PTR [ebp-0x4],ecx
1001128b:	mov    edx,DWORD PTR [ebp-0x8]
1001128e:	push   edx
1001128f:	call   0x10010880
10011294:	add    esp,0x4
10011297:	mov    eax,DWORD PTR [eax]
10011299:	mov    DWORD PTR [ebp-0x8],eax
1001129c:	jmp    0x1001123f
1001129e:	mov    eax,DWORD PTR [ebp-0x4]
100112a1:	mov    esp,ebp
100112a3:	pop    ebp
100112a4:	ret    0x4
100112a7:	int3   
100112a8:	int3   
100112a9:	int3   
100112aa:	int3   
100112ab:	int3   
100112ac:	int3   
100112ad:	int3   
100112ae:	int3   
100112af:	int3   
100112b0:	push   ebp
100112b1:	mov    ebp,esp
100112b3:	push   0xffffffff
100112b5:	push   0x1002a5d1
100112ba:	mov    eax,fs:0x0
100112c0:	push   eax
100112c1:	push   ecx
100112c2:	sub    esp,0x18
100112c5:	push   ebx
100112c6:	push   esi
100112c7:	push   edi
100112c8:	mov    eax,ds:0x10064694
100112cd:	xor    eax,ebp
100112cf:	push   eax
100112d0:	lea    eax,[ebp-0xc]
100112d3:	mov    fs:0x0,eax
100112d9:	mov    DWORD PTR [ebp-0x10],esp
100112dc:	mov    DWORD PTR [ebp-0x20],ecx
100112df:	push   0x1
100112e1:	mov    ecx,DWORD PTR [ebp-0x20]
100112e4:	add    ecx,0x1
100112e7:	call   0x10011510
100112ec:	mov    DWORD PTR [ebp-0x14],eax
100112ef:	mov    DWORD PTR [ebp-0x4],0x0
100112f6:	mov    eax,DWORD PTR [ebp-0x14]
100112f9:	push   eax
100112fa:	push   0x28
100112fc:	call   0x10001230
10011301:	add    esp,0x8
10011304:	mov    DWORD PTR [ebp-0x1c],eax
10011307:	mov    BYTE PTR [ebp-0x4],0x1
1001130b:	cmp    DWORD PTR [ebp-0x1c],0x0
1001130f:	je     0x10011338
10011311:	mov    cl,BYTE PTR [ebp+0x18]
10011314:	push   ecx
10011315:	mov    edx,DWORD PTR [ebp+0x14]
10011318:	push   edx
10011319:	mov    eax,DWORD PTR [ebp+0x10]
1001131c:	push   eax
1001131d:	mov    ecx,DWORD PTR [ebp+0xc]
10011320:	push   ecx
10011321:	mov    edx,DWORD PTR [ebp+0x8]
10011324:	push   edx
10011325:	mov    ecx,DWORD PTR [ebp-0x1c]
10011328:	call   0x10011650
1001132d:	mov    DWORD PTR [ebp-0x24],eax
10011330:	mov    eax,DWORD PTR [ebp-0x24]
10011333:	mov    DWORD PTR [ebp-0x28],eax
10011336:	jmp    0x1001133f
10011338:	mov    DWORD PTR [ebp-0x28],0x0
1001133f:	mov    ecx,DWORD PTR [ebp-0x28]
10011342:	mov    DWORD PTR [ebp-0x18],ecx
10011345:	mov    BYTE PTR [ebp-0x4],0x0
10011349:	jmp    0x10011372
1001134b:	push   0x1
1001134d:	mov    edx,DWORD PTR [ebp-0x14]
10011350:	push   edx
10011351:	mov    ecx,DWORD PTR [ebp-0x20]
10011354:	add    ecx,0x1
10011357:	call   0x100110c0
1001135c:	push   0x0
1001135e:	push   0x0
10011360:	call   0x100161ce
10011365:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001136c:	mov    eax,0x10011379
10011371:	ret    
10011372:	mov    DWORD PTR [ebp-0x4],0xffffffff
10011379:	mov    eax,DWORD PTR [ebp-0x14]
1001137c:	mov    ecx,DWORD PTR [ebp-0xc]
1001137f:	mov    DWORD PTR fs:0x0,ecx
10011386:	pop    ecx
10011387:	pop    edi
10011388:	pop    esi
10011389:	pop    ebx
1001138a:	mov    esp,ebp
1001138c:	pop    ebp
1001138d:	ret    0x14
10011390:	push   ebp
10011391:	mov    ebp,esp
10011393:	push   ecx
10011394:	mov    DWORD PTR [ebp-0x4],ecx
10011397:	mov    ecx,DWORD PTR [ebp-0x4]
1001139a:	call   0x100114c0
1001139f:	mov    eax,DWORD PTR [ebp-0x4]
100113a2:	mov    ecx,DWORD PTR [ebp+0x8]
100113a5:	mov    DWORD PTR [eax+0x4],ecx
100113a8:	cmp    DWORD PTR [ebp+0xc],0x0
100113ac:	jne    0x100113b3
100113ae:	call   0x10016143
100113b3:	mov    edx,DWORD PTR [ebp-0x4]
100113b6:	mov    eax,DWORD PTR [ebp+0xc]
100113b9:	mov    DWORD PTR [edx],eax
100113bb:	mov    eax,DWORD PTR [ebp-0x4]
100113be:	mov    esp,ebp
100113c0:	pop    ebp
100113c1:	ret    0x8
100113c4:	int3   
100113c5:	int3   
100113c6:	int3   
100113c7:	int3   
100113c8:	int3   
100113c9:	int3   
100113ca:	int3   
100113cb:	int3   
100113cc:	int3   
100113cd:	int3   
100113ce:	int3   
100113cf:	int3   
100113d0:	push   ebp
100113d1:	mov    ebp,esp
100113d3:	push   ecx
100113d4:	mov    DWORD PTR [ebp-0x4],ecx
100113d7:	mov    ecx,DWORD PTR [ebp-0x4]
100113da:	call   0x10011530
100113df:	mov    eax,DWORD PTR [ebp-0x4]
100113e2:	mov    esp,ebp
100113e4:	pop    ebp
100113e5:	ret    
100113e6:	int3   
100113e7:	int3   
100113e8:	int3   
100113e9:	int3   
100113ea:	int3   
100113eb:	int3   
100113ec:	int3   
100113ed:	int3   
100113ee:	int3   
100113ef:	int3   
100113f0:	push   ebp
100113f1:	mov    ebp,esp
100113f3:	sub    esp,0x8
100113f6:	mov    DWORD PTR [ebp-0x8],ecx
100113f9:	mov    eax,DWORD PTR [ebp-0x8]
100113fc:	cmp    DWORD PTR [eax],0x0
100113ff:	jne    0x10011406
10011401:	call   0x10016143
10011406:	mov    ecx,DWORD PTR [ebp-0x8]
10011409:	mov    edx,DWORD PTR [ecx+0x4]
1001140c:	push   edx
1001140d:	call   0x10010850
10011412:	add    esp,0x4
10011415:	movsx  eax,BYTE PTR [eax]
10011418:	test   eax,eax
1001141a:	je     0x10011426
1001141c:	call   0x10016143
10011421:	jmp    0x100114ba
10011426:	mov    ecx,DWORD PTR [ebp-0x8]
10011429:	mov    edx,DWORD PTR [ecx+0x4]
1001142c:	push   edx
1001142d:	call   0x100108a0
10011432:	add    esp,0x4
10011435:	mov    eax,DWORD PTR [eax]
10011437:	push   eax
10011438:	call   0x10010850
1001143d:	add    esp,0x4
10011440:	movsx  ecx,BYTE PTR [eax]
10011443:	test   ecx,ecx
10011445:	jne    0x10011469
10011447:	mov    edx,DWORD PTR [ebp-0x8]
1001144a:	mov    eax,DWORD PTR [edx+0x4]
1001144d:	push   eax
1001144e:	call   0x100108a0
10011453:	add    esp,0x4
10011456:	mov    ecx,DWORD PTR [eax]
10011458:	push   ecx
10011459:	call   0x10010ef0
1001145e:	add    esp,0x4
10011461:	mov    edx,DWORD PTR [ebp-0x8]
10011464:	mov    DWORD PTR [edx+0x4],eax
10011467:	jmp    0x100114ba
10011469:	mov    eax,DWORD PTR [ebp-0x8]
1001146c:	mov    ecx,DWORD PTR [eax+0x4]
1001146f:	push   ecx
10011470:	call   0x10010890
10011475:	add    esp,0x4
10011478:	mov    edx,DWORD PTR [eax]
1001147a:	mov    DWORD PTR [ebp-0x4],edx
1001147d:	mov    eax,DWORD PTR [ebp-0x4]
10011480:	push   eax
10011481:	call   0x10010850
10011486:	add    esp,0x4
10011489:	movsx  ecx,BYTE PTR [eax]
1001148c:	test   ecx,ecx
1001148e:	jne    0x100114b1
10011490:	mov    edx,DWORD PTR [ebp-0x4]
10011493:	push   edx
10011494:	call   0x100108a0
10011499:	add    esp,0x4
1001149c:	mov    ecx,DWORD PTR [ebp-0x8]
1001149f:	mov    edx,DWORD PTR [ecx+0x4]
100114a2:	cmp    edx,DWORD PTR [eax]
100114a4:	jne    0x100114b1
100114a6:	mov    eax,DWORD PTR [ebp-0x8]
100114a9:	mov    ecx,DWORD PTR [ebp-0x4]
100114ac:	mov    DWORD PTR [eax+0x4],ecx
100114af:	jmp    0x10011469
100114b1:	mov    edx,DWORD PTR [ebp-0x8]
100114b4:	mov    eax,DWORD PTR [ebp-0x4]
100114b7:	mov    DWORD PTR [edx+0x4],eax
100114ba:	mov    esp,ebp
100114bc:	pop    ebp
100114bd:	ret    
100114be:	int3   
100114bf:	int3   
100114c0:	push   ebp
100114c1:	mov    ebp,esp
100114c3:	push   ecx
100114c4:	mov    DWORD PTR [ebp-0x4],ecx
100114c7:	mov    ecx,DWORD PTR [ebp-0x4]
100114ca:	call   0x10001340
100114cf:	mov    eax,DWORD PTR [ebp-0x4]
100114d2:	mov    esp,ebp
100114d4:	pop    ebp
100114d5:	ret    
100114d6:	int3   
100114d7:	int3   
100114d8:	int3   
100114d9:	int3   
100114da:	int3   
100114db:	int3   
100114dc:	int3   
100114dd:	int3   
100114de:	int3   
100114df:	int3   
100114e0:	push   ebp
100114e1:	mov    ebp,esp
100114e3:	sub    esp,0xc
100114e6:	mov    DWORD PTR [ebp-0x8],ecx
100114e9:	mov    DWORD PTR [ebp-0x4],0xfffffff
100114f0:	cmp    DWORD PTR [ebp-0x4],0x0
100114f4:	jbe    0x100114fe
100114f6:	mov    eax,DWORD PTR [ebp-0x4]
100114f9:	mov    DWORD PTR [ebp-0xc],eax
100114fc:	jmp    0x10011505
100114fe:	mov    DWORD PTR [ebp-0xc],0x1
10011505:	mov    eax,DWORD PTR [ebp-0xc]
10011508:	mov    esp,ebp
1001150a:	pop    ebp
1001150b:	ret    
1001150c:	int3   
1001150d:	int3   
1001150e:	int3   
1001150f:	int3   
10011510:	push   ebp
10011511:	mov    ebp,esp
10011513:	push   ecx
10011514:	mov    DWORD PTR [ebp-0x4],ecx
10011517:	push   0x0
10011519:	mov    eax,DWORD PTR [ebp+0x8]
1001151c:	push   eax
1001151d:	call   0x10011710
10011522:	add    esp,0x8
10011525:	mov    esp,ebp
10011527:	pop    ebp
10011528:	ret    0x4
1001152b:	int3   
1001152c:	int3   
1001152d:	int3   
1001152e:	int3   
1001152f:	int3   
10011530:	push   ebp
10011531:	mov    ebp,esp
10011533:	sub    esp,0x8
10011536:	mov    DWORD PTR [ebp-0x8],ecx
10011539:	mov    eax,DWORD PTR [ebp-0x8]
1001153c:	cmp    DWORD PTR [eax],0x0
1001153f:	jne    0x10011546
10011541:	call   0x10016143
10011546:	mov    ecx,DWORD PTR [ebp-0x8]
10011549:	mov    edx,DWORD PTR [ecx+0x4]
1001154c:	push   edx
1001154d:	call   0x10010850
10011552:	add    esp,0x4
10011555:	movsx  eax,BYTE PTR [eax]
10011558:	test   eax,eax
1001155a:	je     0x10011593
1001155c:	mov    ecx,DWORD PTR [ebp-0x8]
1001155f:	mov    edx,DWORD PTR [ecx+0x4]
10011562:	push   edx
10011563:	call   0x100108a0
10011568:	add    esp,0x4
1001156b:	mov    ecx,DWORD PTR [ebp-0x8]
1001156e:	mov    edx,DWORD PTR [eax]
10011570:	mov    DWORD PTR [ecx+0x4],edx
10011573:	mov    eax,DWORD PTR [ebp-0x8]
10011576:	mov    ecx,DWORD PTR [eax+0x4]
10011579:	push   ecx
1001157a:	call   0x10010850
1001157f:	add    esp,0x4
10011582:	movsx  edx,BYTE PTR [eax]
10011585:	test   edx,edx
10011587:	je     0x1001158e
10011589:	call   0x10016143
1001158e:	jmp    0x10011644
10011593:	mov    eax,DWORD PTR [ebp-0x8]
10011596:	mov    ecx,DWORD PTR [eax+0x4]
10011599:	push   ecx
1001159a:	call   0x10010880
1001159f:	add    esp,0x4
100115a2:	mov    edx,DWORD PTR [eax]
100115a4:	push   edx
100115a5:	call   0x10010850
100115aa:	add    esp,0x4
100115ad:	movsx  eax,BYTE PTR [eax]
100115b0:	test   eax,eax
100115b2:	jne    0x100115d6
100115b4:	mov    ecx,DWORD PTR [ebp-0x8]
100115b7:	mov    edx,DWORD PTR [ecx+0x4]
100115ba:	push   edx
100115bb:	call   0x10010880
100115c0:	add    esp,0x4
100115c3:	mov    eax,DWORD PTR [eax]
100115c5:	push   eax
100115c6:	call   0x10010eb0
100115cb:	add    esp,0x4
100115ce:	mov    ecx,DWORD PTR [ebp-0x8]
100115d1:	mov    DWORD PTR [ecx+0x4],eax
100115d4:	jmp    0x10011644
100115d6:	mov    edx,DWORD PTR [ebp-0x8]
100115d9:	mov    eax,DWORD PTR [edx+0x4]
100115dc:	push   eax
100115dd:	call   0x10010890
100115e2:	add    esp,0x4
100115e5:	mov    ecx,DWORD PTR [eax]
100115e7:	mov    DWORD PTR [ebp-0x4],ecx
100115ea:	mov    edx,DWORD PTR [ebp-0x4]
100115ed:	push   edx
100115ee:	call   0x10010850
100115f3:	add    esp,0x4
100115f6:	movsx  eax,BYTE PTR [eax]
100115f9:	test   eax,eax
100115fb:	jne    0x1001161e
100115fd:	mov    ecx,DWORD PTR [ebp-0x4]
10011600:	push   ecx
10011601:	call   0x10010880
10011606:	add    esp,0x4
10011609:	mov    edx,DWORD PTR [ebp-0x8]
1001160c:	mov    ecx,DWORD PTR [edx+0x4]
1001160f:	cmp    ecx,DWORD PTR [eax]
10011611:	jne    0x1001161e
10011613:	mov    edx,DWORD PTR [ebp-0x8]
10011616:	mov    eax,DWORD PTR [ebp-0x4]
10011619:	mov    DWORD PTR [edx+0x4],eax
1001161c:	jmp    0x100115d6
1001161e:	mov    ecx,DWORD PTR [ebp-0x8]
10011621:	mov    edx,DWORD PTR [ecx+0x4]
10011624:	push   edx
10011625:	call   0x10010850
1001162a:	add    esp,0x4
1001162d:	movsx  eax,BYTE PTR [eax]
10011630:	test   eax,eax
10011632:	je     0x1001163b
10011634:	call   0x10016143
10011639:	jmp    0x10011644
1001163b:	mov    ecx,DWORD PTR [ebp-0x8]
1001163e:	mov    edx,DWORD PTR [ebp-0x4]
10011641:	mov    DWORD PTR [ecx+0x4],edx
10011644:	mov    esp,ebp
10011646:	pop    ebp
10011647:	ret    
10011648:	int3   
10011649:	int3   
1001164a:	int3   
1001164b:	int3   
1001164c:	int3   
1001164d:	int3   
1001164e:	int3   
1001164f:	int3   
10011650:	push   ebp
10011651:	mov    ebp,esp
10011653:	push   ecx
10011654:	mov    DWORD PTR [ebp-0x4],ecx
10011657:	mov    eax,DWORD PTR [ebp-0x4]
1001165a:	mov    ecx,DWORD PTR [ebp+0x8]
1001165d:	mov    DWORD PTR [eax],ecx
1001165f:	mov    edx,DWORD PTR [ebp-0x4]
10011662:	mov    eax,DWORD PTR [ebp+0xc]
10011665:	mov    DWORD PTR [edx+0x4],eax
10011668:	mov    ecx,DWORD PTR [ebp-0x4]
1001166b:	mov    edx,DWORD PTR [ebp+0x10]
1001166e:	mov    DWORD PTR [ecx+0x8],edx
10011671:	mov    eax,DWORD PTR [ebp+0x14]
10011674:	mov    ecx,DWORD PTR [ebp-0x4]
10011677:	add    ecx,0x10
1001167a:	mov    edx,DWORD PTR [eax]
1001167c:	mov    DWORD PTR [ecx],edx
1001167e:	mov    edx,DWORD PTR [eax+0x4]
10011681:	mov    DWORD PTR [ecx+0x4],edx
10011684:	mov    edx,DWORD PTR [eax+0x8]
10011687:	mov    DWORD PTR [ecx+0x8],edx
1001168a:	mov    eax,DWORD PTR [eax+0xc]
1001168d:	mov    DWORD PTR [ecx+0xc],eax
10011690:	mov    ecx,DWORD PTR [ebp-0x4]
10011693:	mov    dl,BYTE PTR [ebp+0x18]
10011696:	mov    BYTE PTR [ecx+0x20],dl
10011699:	mov    eax,DWORD PTR [ebp-0x4]
1001169c:	mov    BYTE PTR [eax+0x21],0x0
100116a0:	mov    eax,DWORD PTR [ebp-0x4]
100116a3:	mov    esp,ebp
100116a5:	pop    ebp
100116a6:	ret    0x14
100116a9:	int3   
100116aa:	int3   
100116ab:	int3   
100116ac:	int3   
100116ad:	int3   
100116ae:	int3   
100116af:	int3   
100116b0:	push   ebp
100116b1:	mov    ebp,esp
100116b3:	lea    eax,[ebp+0x10]
100116b6:	push   eax
100116b7:	lea    ecx,[ebp+0xc]
100116ba:	push   ecx
100116bb:	mov    ecx,DWORD PTR [ebp+0x8]
100116be:	call   0x10011760
100116c3:	mov    eax,DWORD PTR [ebp+0x8]
100116c6:	pop    ebp
100116c7:	ret    
100116c8:	int3   
100116c9:	int3   
100116ca:	int3   
100116cb:	int3   
100116cc:	int3   
100116cd:	int3   
100116ce:	int3   
100116cf:	int3   
100116d0:	push   ebp
100116d1:	mov    ebp,esp
100116d3:	push   ecx
100116d4:	mov    DWORD PTR [ebp-0x4],ecx
100116d7:	mov    eax,DWORD PTR [ebp-0x4]
100116da:	mov    ecx,DWORD PTR [ebp+0x8]
100116dd:	mov    edx,DWORD PTR [ecx]
100116df:	mov    DWORD PTR [eax],edx
100116e1:	mov    eax,DWORD PTR [ebp-0x4]
100116e4:	mov    ecx,DWORD PTR [ebp+0x8]
100116e7:	mov    edx,DWORD PTR [ecx+0x8]
100116ea:	mov    DWORD PTR [eax+0x8],edx
100116ed:	mov    ecx,DWORD PTR [ecx+0xc]
100116f0:	mov    DWORD PTR [eax+0xc],ecx
100116f3:	mov    eax,DWORD PTR [ebp-0x4]
100116f6:	mov    esp,ebp
100116f8:	pop    ebp
100116f9:	ret    0x4
100116fc:	int3   
100116fd:	int3   
100116fe:	int3   
100116ff:	int3   
10011700:	push   ebp
10011701:	mov    ebp,esp
10011703:	pop    ebp
10011704:	ret    
10011705:	int3   
10011706:	int3   
10011707:	int3   
10011708:	int3   
10011709:	int3   
1001170a:	int3   
1001170b:	int3   
1001170c:	int3   
1001170d:	int3   
1001170e:	int3   
1001170f:	int3   
10011710:	push   ebp
10011711:	mov    ebp,esp
10011713:	sub    esp,0xc
10011716:	cmp    DWORD PTR [ebp+0x8],0x0
1001171a:	ja     0x10011725
1001171c:	mov    DWORD PTR [ebp+0x8],0x0
10011723:	jmp    0x1001174a
10011725:	or     eax,0xffffffff
10011728:	xor    edx,edx
1001172a:	div    DWORD PTR [ebp+0x8]
1001172d:	cmp    eax,0x28
10011730:	jae    0x1001174a
10011732:	push   0x0
10011734:	lea    ecx,[ebp-0xc]
10011737:	call   0x10001250
1001173c:	push   0x10058b44
10011741:	lea    eax,[ebp-0xc]
10011744:	push   eax
10011745:	call   0x100161ce
1001174a:	mov    ecx,DWORD PTR [ebp+0x8]
1001174d:	imul   ecx,ecx,0x28
10011750:	push   ecx
10011751:	call   0x10016414
10011756:	add    esp,0x4
10011759:	mov    esp,ebp
1001175b:	pop    ebp
1001175c:	ret    
1001175d:	int3   
1001175e:	int3   
1001175f:	int3   
10011760:	push   ebp
10011761:	mov    ebp,esp
10011763:	push   ecx
10011764:	mov    DWORD PTR [ebp-0x4],ecx
10011767:	mov    eax,DWORD PTR [ebp-0x4]
1001176a:	mov    ecx,DWORD PTR [ebp+0x8]
1001176d:	mov    edx,DWORD PTR [ecx]
1001176f:	mov    DWORD PTR [eax],edx
10011771:	mov    eax,DWORD PTR [ebp-0x4]
10011774:	mov    ecx,DWORD PTR [ebp+0xc]
10011777:	mov    edx,DWORD PTR [ecx]
10011779:	mov    DWORD PTR [eax+0x8],edx
1001177c:	mov    ecx,DWORD PTR [ecx+0x4]
1001177f:	mov    DWORD PTR [eax+0xc],ecx
10011782:	mov    eax,DWORD PTR [ebp-0x4]
10011785:	mov    esp,ebp
10011787:	pop    ebp
10011788:	ret    0x8
1001178b:	int3   
1001178c:	int3   
1001178d:	int3   
1001178e:	int3   
1001178f:	int3   
10011790:	push   ebp
10011791:	mov    ebp,esp
10011793:	sub    esp,0x8
10011796:	mov    DWORD PTR [ebp-0x8],ecx
10011799:	lea    ecx,[ebp-0x1]
1001179c:	call   0x10011800
100117a1:	push   eax
100117a2:	lea    eax,[ebp-0x2]
100117a5:	push   eax
100117a6:	mov    ecx,DWORD PTR [ebp-0x8]
100117a9:	call   0x100117c0
100117ae:	mov    eax,DWORD PTR [ebp-0x8]
100117b1:	mov    esp,ebp
100117b3:	pop    ebp
100117b4:	ret    
100117b5:	int3   
100117b6:	int3   
100117b7:	int3   
100117b8:	int3   
100117b9:	int3   
100117ba:	int3   
100117bb:	int3   
100117bc:	int3   
100117bd:	int3   
100117be:	int3   
100117bf:	int3   
100117c0:	push   ebp
100117c1:	mov    ebp,esp
100117c3:	sub    esp,0x8
100117c6:	mov    DWORD PTR [ebp-0x8],ecx
100117c9:	push   ecx
100117ca:	mov    ecx,esp
100117cc:	mov    eax,DWORD PTR [ebp+0xc]
100117cf:	push   eax
100117d0:	call   0x10011ad0
100117d5:	mov    ecx,DWORD PTR [ebp+0x8]
100117d8:	push   ecx
100117d9:	mov    ecx,DWORD PTR [ebp-0x8]
100117dc:	call   0x10011880
100117e1:	mov    ecx,DWORD PTR [ebp-0x8]
100117e4:	call   0x10011810
100117e9:	mov    eax,DWORD PTR [ebp-0x8]
100117ec:	mov    esp,ebp
100117ee:	pop    ebp
100117ef:	ret    0x8
100117f2:	int3   
100117f3:	int3   
100117f4:	int3   
100117f5:	int3   
100117f6:	int3   
100117f7:	int3   
100117f8:	int3   
100117f9:	int3   
100117fa:	int3   
100117fb:	int3   
100117fc:	int3   
100117fd:	int3   
100117fe:	int3   
100117ff:	int3   
10011800:	push   ebp
10011801:	mov    ebp,esp
10011803:	push   ecx
10011804:	mov    DWORD PTR [ebp-0x4],ecx
10011807:	mov    eax,DWORD PTR [ebp-0x4]
1001180a:	mov    esp,ebp
1001180c:	pop    ebp
1001180d:	ret    
1001180e:	int3   
1001180f:	int3   
10011810:	push   ebp
10011811:	mov    ebp,esp
10011813:	push   ecx
10011814:	mov    DWORD PTR [ebp-0x4],ecx
10011817:	mov    ecx,DWORD PTR [ebp-0x4]
1001181a:	call   0x100118c0
1001181f:	mov    ecx,DWORD PTR [ebp-0x4]
10011822:	mov    DWORD PTR [ecx+0x4],eax
10011825:	mov    edx,DWORD PTR [ebp-0x4]
10011828:	mov    eax,DWORD PTR [edx+0x4]
1001182b:	push   eax
1001182c:	call   0x10010850
10011831:	add    esp,0x4
10011834:	mov    BYTE PTR [eax],0x1
10011837:	mov    ecx,DWORD PTR [ebp-0x4]
1001183a:	call   0x10010f50
1001183f:	mov    ecx,DWORD PTR [ebp-0x4]
10011842:	mov    edx,DWORD PTR [ecx+0x4]
10011845:	mov    DWORD PTR [eax],edx
10011847:	mov    ecx,DWORD PTR [ebp-0x4]
1001184a:	call   0x10010d60
1001184f:	mov    ecx,DWORD PTR [ebp-0x4]
10011852:	mov    edx,DWORD PTR [ecx+0x4]
10011855:	mov    DWORD PTR [eax],edx
10011857:	mov    ecx,DWORD PTR [ebp-0x4]
1001185a:	call   0x10010f30
1001185f:	mov    ecx,DWORD PTR [ebp-0x4]
10011862:	mov    edx,DWORD PTR [ecx+0x4]
10011865:	mov    DWORD PTR [eax],edx
10011867:	mov    eax,DWORD PTR [ebp-0x4]
1001186a:	mov    DWORD PTR [eax+0x8],0x0
10011871:	mov    esp,ebp
10011873:	pop    ebp
10011874:	ret    
10011875:	int3   
10011876:	int3   
10011877:	int3   
10011878:	int3   
10011879:	int3   
1001187a:	int3   
1001187b:	int3   
1001187c:	int3   
1001187d:	int3   
1001187e:	int3   
1001187f:	int3   
10011880:	push   ebp
10011881:	mov    ebp,esp
10011883:	sub    esp,0x8
10011886:	mov    DWORD PTR [ebp-0x8],ecx
10011889:	push   ecx
1001188a:	mov    ecx,esp
1001188c:	lea    eax,[ebp+0xc]
1001188f:	push   eax
10011890:	call   0x10011ad0
10011895:	mov    ecx,DWORD PTR [ebp+0x8]
10011898:	push   ecx
10011899:	mov    ecx,DWORD PTR [ebp-0x8]
1001189c:	call   0x10011a40
100118a1:	lea    edx,[ebp+0xc]
100118a4:	push   edx
100118a5:	mov    ecx,DWORD PTR [ebp-0x8]
100118a8:	add    ecx,0x3
100118ab:	call   0x10011ad0
100118b0:	mov    eax,DWORD PTR [ebp-0x8]
100118b3:	mov    esp,ebp
100118b5:	pop    ebp
100118b6:	ret    0x8
100118b9:	int3   
100118ba:	int3   
100118bb:	int3   
100118bc:	int3   
100118bd:	int3   
100118be:	int3   
100118bf:	int3   
100118c0:	push   ebp
100118c1:	mov    ebp,esp
100118c3:	push   0xffffffff
100118c5:	push   0x1002a5f0
100118ca:	mov    eax,fs:0x0
100118d0:	push   eax
100118d1:	push   ecx
100118d2:	sub    esp,0x24
100118d5:	push   ebx
100118d6:	push   esi
100118d7:	push   edi
100118d8:	mov    eax,ds:0x10064694
100118dd:	xor    eax,ebp
100118df:	push   eax
100118e0:	lea    eax,[ebp-0xc]
100118e3:	mov    fs:0x0,eax
100118e9:	mov    DWORD PTR [ebp-0x10],esp
100118ec:	mov    DWORD PTR [ebp-0x28],ecx
100118ef:	push   0x1
100118f1:	mov    ecx,DWORD PTR [ebp-0x28]
100118f4:	add    ecx,0x1
100118f7:	call   0x10011510
100118fc:	mov    DWORD PTR [ebp-0x18],eax
100118ff:	mov    DWORD PTR [ebp-0x14],0x0
10011906:	mov    DWORD PTR [ebp-0x4],0x0
1001190d:	mov    DWORD PTR [ebp-0x1c],0x0
10011914:	mov    eax,DWORD PTR [ebp-0x18]
10011917:	push   eax
10011918:	call   0x10010880
1001191d:	add    esp,0x4
10011920:	mov    DWORD PTR [ebp-0x2c],eax
10011923:	lea    ecx,[ebp-0x1c]
10011926:	push   ecx
10011927:	mov    edx,DWORD PTR [ebp-0x2c]
1001192a:	push   edx
1001192b:	mov    ecx,DWORD PTR [ebp-0x28]
1001192e:	add    ecx,0x2
10011931:	call   0x10011ab0
10011936:	mov    eax,DWORD PTR [ebp-0x14]
10011939:	add    eax,0x1
1001193c:	mov    DWORD PTR [ebp-0x14],eax
1001193f:	mov    DWORD PTR [ebp-0x20],0x0
10011946:	mov    ecx,DWORD PTR [ebp-0x18]
10011949:	push   ecx
1001194a:	call   0x10010890
1001194f:	add    esp,0x4
10011952:	mov    DWORD PTR [ebp-0x30],eax
10011955:	lea    edx,[ebp-0x20]
10011958:	push   edx
10011959:	mov    eax,DWORD PTR [ebp-0x30]
1001195c:	push   eax
1001195d:	mov    ecx,DWORD PTR [ebp-0x28]
10011960:	add    ecx,0x2
10011963:	call   0x10011ab0
10011968:	mov    ecx,DWORD PTR [ebp-0x14]
1001196b:	add    ecx,0x1
1001196e:	mov    DWORD PTR [ebp-0x14],ecx
10011971:	mov    DWORD PTR [ebp-0x24],0x0
10011978:	mov    edx,DWORD PTR [ebp-0x18]
1001197b:	push   edx
1001197c:	call   0x100108a0
10011981:	add    esp,0x4
10011984:	mov    DWORD PTR [ebp-0x34],eax
10011987:	lea    eax,[ebp-0x24]
1001198a:	push   eax
1001198b:	mov    ecx,DWORD PTR [ebp-0x34]
1001198e:	push   ecx
1001198f:	mov    ecx,DWORD PTR [ebp-0x28]
10011992:	add    ecx,0x2
10011995:	call   0x10011ab0
1001199a:	jmp    0x100119ff
1001199c:	cmp    DWORD PTR [ebp-0x14],0x1
100119a0:	jle    0x100119ba
100119a2:	mov    edx,DWORD PTR [ebp-0x18]
100119a5:	push   edx
100119a6:	call   0x10010890
100119ab:	add    esp,0x4
100119ae:	push   eax
100119af:	mov    ecx,DWORD PTR [ebp-0x28]
100119b2:	add    ecx,0x2
100119b5:	call   0x100110e0
100119ba:	cmp    DWORD PTR [ebp-0x14],0x0
100119be:	jle    0x100119d8
100119c0:	mov    eax,DWORD PTR [ebp-0x18]
100119c3:	push   eax
100119c4:	call   0x10010880
100119c9:	add    esp,0x4
100119cc:	push   eax
100119cd:	mov    ecx,DWORD PTR [ebp-0x28]
100119d0:	add    ecx,0x2
100119d3:	call   0x100110e0
100119d8:	push   0x1
100119da:	mov    ecx,DWORD PTR [ebp-0x18]
100119dd:	push   ecx
100119de:	mov    ecx,DWORD PTR [ebp-0x28]
100119e1:	add    ecx,0x1
100119e4:	call   0x100110c0
100119e9:	push   0x0
100119eb:	push   0x0
100119ed:	call   0x100161ce
100119f2:	mov    DWORD PTR [ebp-0x4],0xffffffff
100119f9:	mov    eax,0x10011a06
100119fe:	ret    
100119ff:	mov    DWORD PTR [ebp-0x4],0xffffffff
10011a06:	mov    edx,DWORD PTR [ebp-0x18]
10011a09:	push   edx
10011a0a:	call   0x10010840
10011a0f:	add    esp,0x4
10011a12:	mov    BYTE PTR [eax],0x1
10011a15:	mov    eax,DWORD PTR [ebp-0x18]
10011a18:	push   eax
10011a19:	call   0x10010850
10011a1e:	add    esp,0x4
10011a21:	mov    BYTE PTR [eax],0x0
10011a24:	mov    eax,DWORD PTR [ebp-0x18]
10011a27:	mov    ecx,DWORD PTR [ebp-0xc]
10011a2a:	mov    DWORD PTR fs:0x0,ecx
10011a31:	pop    ecx
10011a32:	pop    edi
10011a33:	pop    esi
10011a34:	pop    ebx
10011a35:	mov    esp,ebp
10011a37:	pop    ebp
10011a38:	ret    
10011a39:	int3   
10011a3a:	int3   
10011a3b:	int3   
10011a3c:	int3   
10011a3d:	int3   
10011a3e:	int3   
10011a3f:	int3   
10011a40:	push   ebp
10011a41:	mov    ebp,esp
10011a43:	sub    esp,0x8
10011a46:	mov    DWORD PTR [ebp-0x8],ecx
10011a49:	push   ecx
10011a4a:	mov    ecx,esp
10011a4c:	lea    eax,[ebp+0xc]
10011a4f:	push   eax
10011a50:	call   0x10011ad0
10011a55:	mov    ecx,DWORD PTR [ebp+0x8]
10011a58:	push   ecx
10011a59:	mov    ecx,DWORD PTR [ebp-0x8]
10011a5c:	call   0x10011a80
10011a61:	lea    edx,[ebp+0xc]
10011a64:	push   edx
10011a65:	mov    ecx,DWORD PTR [ebp-0x8]
10011a68:	add    ecx,0x2
10011a6b:	call   0x10011ad0
10011a70:	mov    eax,DWORD PTR [ebp-0x8]
10011a73:	mov    esp,ebp
10011a75:	pop    ebp
10011a76:	ret    0x8
10011a79:	int3   
10011a7a:	int3   
10011a7b:	int3   
10011a7c:	int3   
10011a7d:	int3   
10011a7e:	int3   
10011a7f:	int3   
10011a80:	push   ebp
10011a81:	mov    ebp,esp
10011a83:	push   ecx
10011a84:	mov    DWORD PTR [ebp-0x4],ecx
10011a87:	mov    eax,DWORD PTR [ebp+0x8]
10011a8a:	mov    cl,BYTE PTR [eax]
10011a8c:	push   ecx
10011a8d:	mov    ecx,DWORD PTR [ebp-0x4]
10011a90:	call   0x10011ad0
10011a95:	lea    edx,[ebp+0xc]
10011a98:	push   edx
10011a99:	mov    ecx,DWORD PTR [ebp-0x4]
10011a9c:	add    ecx,0x1
10011a9f:	call   0x10011ad0
10011aa4:	mov    eax,DWORD PTR [ebp-0x4]
10011aa7:	mov    esp,ebp
10011aa9:	pop    ebp
10011aaa:	ret    0x8
10011aad:	int3   
10011aae:	int3   
10011aaf:	int3   
10011ab0:	push   ebp
10011ab1:	mov    ebp,esp
10011ab3:	push   ecx
10011ab4:	mov    DWORD PTR [ebp-0x4],ecx
10011ab7:	mov    eax,DWORD PTR [ebp+0xc]
10011aba:	push   eax
10011abb:	mov    ecx,DWORD PTR [ebp+0x8]
10011abe:	push   ecx
10011abf:	call   0x10011ae0
10011ac4:	add    esp,0x8
10011ac7:	mov    esp,ebp
10011ac9:	pop    ebp
10011aca:	ret    0x8
10011acd:	int3   
10011ace:	int3   
10011acf:	int3   
10011ad0:	push   ebp
10011ad1:	mov    ebp,esp
10011ad3:	push   ecx
10011ad4:	mov    DWORD PTR [ebp-0x4],ecx
10011ad7:	mov    eax,DWORD PTR [ebp-0x4]
10011ada:	mov    esp,ebp
10011adc:	pop    ebp
10011add:	ret    0x4
10011ae0:	push   ebp
10011ae1:	mov    ebp,esp
10011ae3:	sub    esp,0xc
10011ae6:	mov    eax,DWORD PTR [ebp+0x8]
10011ae9:	mov    DWORD PTR [ebp-0x4],eax
10011aec:	mov    ecx,DWORD PTR [ebp-0x4]
10011aef:	push   ecx
10011af0:	push   0x4
10011af2:	call   0x10001230
10011af7:	add    esp,0x8
10011afa:	mov    DWORD PTR [ebp-0x8],eax
10011afd:	cmp    DWORD PTR [ebp-0x8],0x0
10011b01:	je     0x10011b15
10011b03:	mov    edx,DWORD PTR [ebp-0x8]
10011b06:	mov    eax,DWORD PTR [ebp+0xc]
10011b09:	mov    ecx,DWORD PTR [eax]
10011b0b:	mov    DWORD PTR [edx],ecx
10011b0d:	mov    edx,DWORD PTR [ebp-0x8]
10011b10:	mov    DWORD PTR [ebp-0xc],edx
10011b13:	jmp    0x10011b1c
10011b15:	mov    DWORD PTR [ebp-0xc],0x0
10011b1c:	mov    esp,ebp
10011b1e:	pop    ebp
10011b1f:	ret    
10011b20:	push   ebp
10011b21:	mov    ebp,esp
10011b23:	push   ecx
10011b24:	mov    DWORD PTR [ebp-0x4],ecx
10011b27:	mov    ecx,DWORD PTR [ebp-0x4]
10011b2a:	call   0x10011b40
10011b2f:	mov    esp,ebp
10011b31:	pop    ebp
10011b32:	ret    
10011b33:	int3   
10011b34:	int3   
10011b35:	int3   
10011b36:	int3   
10011b37:	int3   
10011b38:	int3   
10011b39:	int3   
10011b3a:	int3   
10011b3b:	int3   
10011b3c:	int3   
10011b3d:	int3   
10011b3e:	int3   
10011b3f:	int3   
10011b40:	push   ebp
10011b41:	mov    ebp,esp
10011b43:	push   ecx
10011b44:	mov    DWORD PTR [ebp-0x4],ecx
10011b47:	mov    ecx,DWORD PTR [ebp-0x4]
10011b4a:	call   0x10011b60
10011b4f:	mov    esp,ebp
10011b51:	pop    ebp
10011b52:	ret    
10011b53:	int3   
10011b54:	int3   
10011b55:	int3   
10011b56:	int3   
10011b57:	int3   
10011b58:	int3   
10011b59:	int3   
10011b5a:	int3   
10011b5b:	int3   
10011b5c:	int3   
10011b5d:	int3   
10011b5e:	int3   
10011b5f:	int3   
10011b60:	push   ebp
10011b61:	mov    ebp,esp
10011b63:	sub    esp,0x1c
10011b66:	mov    DWORD PTR [ebp-0x1c],ecx
10011b69:	lea    eax,[ebp-0x8]
10011b6c:	push   eax
10011b6d:	mov    ecx,DWORD PTR [ebp-0x1c]
10011b70:	call   0x1000fd40
10011b75:	mov    ecx,DWORD PTR [eax+0x4]
10011b78:	push   ecx
10011b79:	mov    edx,DWORD PTR [eax]
10011b7b:	push   edx
10011b7c:	lea    eax,[ebp-0x10]
10011b7f:	push   eax
10011b80:	mov    ecx,DWORD PTR [ebp-0x1c]
10011b83:	call   0x1000fd10
10011b88:	mov    ecx,DWORD PTR [eax+0x4]
10011b8b:	push   ecx
10011b8c:	mov    edx,DWORD PTR [eax]
10011b8e:	push   edx
10011b8f:	lea    eax,[ebp-0x18]
10011b92:	push   eax
10011b93:	mov    ecx,DWORD PTR [ebp-0x1c]
10011b96:	call   0x10011c20
10011b9b:	mov    ecx,DWORD PTR [ebp-0x1c]
10011b9e:	mov    edx,DWORD PTR [ecx+0x4]
10011ba1:	push   edx
10011ba2:	call   0x10010880
10011ba7:	add    esp,0x4
10011baa:	push   eax
10011bab:	mov    ecx,DWORD PTR [ebp-0x1c]
10011bae:	add    ecx,0x2
10011bb1:	call   0x100110e0
10011bb6:	mov    eax,DWORD PTR [ebp-0x1c]
10011bb9:	mov    ecx,DWORD PTR [eax+0x4]
10011bbc:	push   ecx
10011bbd:	call   0x10010890
10011bc2:	add    esp,0x4
10011bc5:	push   eax
10011bc6:	mov    ecx,DWORD PTR [ebp-0x1c]
10011bc9:	add    ecx,0x2
10011bcc:	call   0x100110e0
10011bd1:	mov    edx,DWORD PTR [ebp-0x1c]
10011bd4:	mov    eax,DWORD PTR [edx+0x4]
10011bd7:	push   eax
10011bd8:	call   0x100108a0
10011bdd:	add    esp,0x4
10011be0:	push   eax
10011be1:	mov    ecx,DWORD PTR [ebp-0x1c]
10011be4:	add    ecx,0x2
10011be7:	call   0x100110e0
10011bec:	push   0x1
10011bee:	mov    ecx,DWORD PTR [ebp-0x1c]
10011bf1:	mov    edx,DWORD PTR [ecx+0x4]
10011bf4:	push   edx
10011bf5:	mov    ecx,DWORD PTR [ebp-0x1c]
10011bf8:	add    ecx,0x1
10011bfb:	call   0x100110c0
10011c00:	mov    eax,DWORD PTR [ebp-0x1c]
10011c03:	mov    DWORD PTR [eax+0x4],0x0
10011c0a:	mov    ecx,DWORD PTR [ebp-0x1c]
10011c0d:	mov    DWORD PTR [ecx+0x8],0x0
10011c14:	mov    esp,ebp
10011c16:	pop    ebp
10011c17:	ret    
10011c18:	int3   
10011c19:	int3   
10011c1a:	int3   
10011c1b:	int3   
10011c1c:	int3   
10011c1d:	int3   
10011c1e:	int3   
10011c1f:	int3   
10011c20:	push   ebp
10011c21:	mov    ebp,esp
10011c23:	sub    esp,0x24
10011c26:	mov    DWORD PTR [ebp-0x24],ecx
10011c29:	lea    eax,[ebp-0x8]
10011c2c:	push   eax
10011c2d:	mov    ecx,DWORD PTR [ebp-0x24]
10011c30:	call   0x1000fd10
10011c35:	push   eax
10011c36:	lea    ecx,[ebp+0xc]
10011c39:	call   0x100107d0
10011c3e:	movzx  ecx,al
10011c41:	test   ecx,ecx
10011c43:	je     0x10011c7c
10011c45:	lea    edx,[ebp-0x10]
10011c48:	push   edx
10011c49:	mov    ecx,DWORD PTR [ebp-0x24]
10011c4c:	call   0x1000fd40
10011c51:	push   eax
10011c52:	lea    ecx,[ebp+0x14]
10011c55:	call   0x100107d0
10011c5a:	movzx  eax,al
10011c5d:	test   eax,eax
10011c5f:	je     0x10011c7c
10011c61:	mov    ecx,DWORD PTR [ebp-0x24]
10011c64:	call   0x10011cd0
10011c69:	mov    ecx,DWORD PTR [ebp+0x8]
10011c6c:	push   ecx
10011c6d:	mov    ecx,DWORD PTR [ebp-0x24]
10011c70:	call   0x1000fd10
10011c75:	mov    eax,DWORD PTR [ebp+0x8]
10011c78:	jmp    0x10011cc3
10011c7a:	jmp    0x10011cc3
10011c7c:	lea    edx,[ebp+0x14]
10011c7f:	push   edx
10011c80:	lea    ecx,[ebp+0xc]
10011c83:	call   0x10010810
10011c88:	movzx  eax,al
10011c8b:	test   eax,eax
10011c8d:	je     0x10011cb2
10011c8f:	push   0x0
10011c91:	lea    ecx,[ebp-0x18]
10011c94:	push   ecx
10011c95:	lea    ecx,[ebp+0xc]
10011c98:	call   0x10011d30
10011c9d:	mov    edx,DWORD PTR [eax+0x4]
10011ca0:	push   edx
10011ca1:	mov    eax,DWORD PTR [eax]
10011ca3:	push   eax
10011ca4:	lea    ecx,[ebp-0x20]
10011ca7:	push   ecx
10011ca8:	mov    ecx,DWORD PTR [ebp-0x24]
10011cab:	call   0x1000ff30
10011cb0:	jmp    0x10011c7c
10011cb2:	mov    edx,DWORD PTR [ebp+0x8]
10011cb5:	mov    eax,DWORD PTR [ebp+0xc]
10011cb8:	mov    DWORD PTR [edx],eax
10011cba:	mov    ecx,DWORD PTR [ebp+0x10]
10011cbd:	mov    DWORD PTR [edx+0x4],ecx
10011cc0:	mov    eax,DWORD PTR [ebp+0x8]
10011cc3:	mov    esp,ebp
10011cc5:	pop    ebp
10011cc6:	ret    0x14
10011cc9:	int3   
10011cca:	int3   
10011ccb:	int3   
10011ccc:	int3   
10011ccd:	int3   
10011cce:	int3   
10011ccf:	int3   
10011cd0:	push   ebp
10011cd1:	mov    ebp,esp
10011cd3:	push   ecx
10011cd4:	mov    DWORD PTR [ebp-0x4],ecx
10011cd7:	mov    ecx,DWORD PTR [ebp-0x4]
10011cda:	call   0x10010f50
10011cdf:	mov    eax,DWORD PTR [eax]
10011ce1:	push   eax
10011ce2:	mov    ecx,DWORD PTR [ebp-0x4]
10011ce5:	call   0x10011d70
10011cea:	mov    ecx,DWORD PTR [ebp-0x4]
10011ced:	call   0x10010f50
10011cf2:	mov    ecx,DWORD PTR [ebp-0x4]
10011cf5:	mov    edx,DWORD PTR [ecx+0x4]
10011cf8:	mov    DWORD PTR [eax],edx
10011cfa:	mov    eax,DWORD PTR [ebp-0x4]
10011cfd:	mov    DWORD PTR [eax+0x8],0x0
10011d04:	mov    ecx,DWORD PTR [ebp-0x4]
10011d07:	call   0x10010d60
10011d0c:	mov    ecx,DWORD PTR [ebp-0x4]
10011d0f:	mov    edx,DWORD PTR [ecx+0x4]
10011d12:	mov    DWORD PTR [eax],edx
10011d14:	mov    ecx,DWORD PTR [ebp-0x4]
10011d17:	call   0x10010f30
10011d1c:	mov    ecx,DWORD PTR [ebp-0x4]
10011d1f:	mov    edx,DWORD PTR [ecx+0x4]
10011d22:	mov    DWORD PTR [eax],edx
10011d24:	mov    esp,ebp
10011d26:	pop    ebp
10011d27:	ret    
10011d28:	int3   
10011d29:	int3   
10011d2a:	int3   
10011d2b:	int3   
10011d2c:	int3   
10011d2d:	int3   
10011d2e:	int3   
10011d2f:	int3   
10011d30:	push   ebp
10011d31:	mov    ebp,esp
10011d33:	sub    esp,0xc
10011d36:	mov    DWORD PTR [ebp-0xc],ecx
10011d39:	mov    eax,DWORD PTR [ebp-0xc]
10011d3c:	mov    ecx,DWORD PTR [eax]
10011d3e:	mov    edx,DWORD PTR [eax+0x4]
10011d41:	mov    DWORD PTR [ebp-0x8],ecx
10011d44:	mov    DWORD PTR [ebp-0x4],edx
10011d47:	mov    ecx,DWORD PTR [ebp-0xc]
10011d4a:	call   0x100107b0
10011d4f:	mov    eax,DWORD PTR [ebp+0x8]
10011d52:	mov    ecx,DWORD PTR [ebp-0x8]
10011d55:	mov    DWORD PTR [eax],ecx
10011d57:	mov    edx,DWORD PTR [ebp-0x4]
10011d5a:	mov    DWORD PTR [eax+0x4],edx
10011d5d:	mov    eax,DWORD PTR [ebp+0x8]
10011d60:	mov    esp,ebp
10011d62:	pop    ebp
10011d63:	ret    0x8
10011d66:	int3   
10011d67:	int3   
10011d68:	int3   
10011d69:	int3   
10011d6a:	int3   
10011d6b:	int3   
10011d6c:	int3   
10011d6d:	int3   
10011d6e:	int3   
10011d6f:	int3   
10011d70:	push   ebp
10011d71:	mov    ebp,esp
10011d73:	sub    esp,0x8
10011d76:	mov    DWORD PTR [ebp-0x8],ecx
10011d79:	mov    eax,DWORD PTR [ebp+0x8]
10011d7c:	mov    DWORD PTR [ebp-0x4],eax
10011d7f:	jmp    0x10011d87
10011d81:	mov    ecx,DWORD PTR [ebp-0x4]
10011d84:	mov    DWORD PTR [ebp+0x8],ecx
10011d87:	mov    edx,DWORD PTR [ebp-0x4]
10011d8a:	push   edx
10011d8b:	call   0x10010850
10011d90:	add    esp,0x4
10011d93:	movsx  eax,BYTE PTR [eax]
10011d96:	test   eax,eax
10011d98:	jne    0x10011de4
10011d9a:	mov    ecx,DWORD PTR [ebp-0x4]
10011d9d:	push   ecx
10011d9e:	call   0x100108a0
10011da3:	add    esp,0x4
10011da6:	mov    edx,DWORD PTR [eax]
10011da8:	push   edx
10011da9:	mov    ecx,DWORD PTR [ebp-0x8]
10011dac:	call   0x10011d70
10011db1:	mov    eax,DWORD PTR [ebp-0x4]
10011db4:	push   eax
10011db5:	call   0x10010880
10011dba:	add    esp,0x4
10011dbd:	mov    ecx,DWORD PTR [eax]
10011dbf:	mov    DWORD PTR [ebp-0x4],ecx
10011dc2:	mov    edx,DWORD PTR [ebp+0x8]
10011dc5:	push   edx
10011dc6:	mov    ecx,DWORD PTR [ebp-0x8]
10011dc9:	add    ecx,0x1
10011dcc:	call   0x100110e0
10011dd1:	push   0x1
10011dd3:	mov    eax,DWORD PTR [ebp+0x8]
10011dd6:	push   eax
10011dd7:	mov    ecx,DWORD PTR [ebp-0x8]
10011dda:	add    ecx,0x1
10011ddd:	call   0x100110c0
10011de2:	jmp    0x10011d81
10011de4:	mov    esp,ebp
10011de6:	pop    ebp
10011de7:	ret    0x4
10011dea:	int3   
10011deb:	int3   
10011dec:	int3   
10011ded:	int3   
10011dee:	int3   
10011def:	int3   
10011df0:	push   ebp
10011df1:	mov    ebp,esp
10011df3:	cmp    DWORD PTR [ebp+0xc],0xb4
10011dfa:	je     0x10011e00
10011dfc:	xor    al,al
10011dfe:	jmp    0x10011e18
10011e00:	push   0xb4
10011e05:	mov    eax,DWORD PTR [ebp+0x8]
10011e08:	push   eax
10011e09:	push   0x10066060
10011e0e:	call   0x100167d0
10011e13:	add    esp,0xc
10011e16:	mov    al,0x1
10011e18:	pop    ebp
10011e19:	ret    
10011e1a:	int3   
10011e1b:	int3   
10011e1c:	int3   
10011e1d:	int3   
10011e1e:	int3   
10011e1f:	int3   
10011e20:	push   ebp
10011e21:	mov    ebp,esp
10011e23:	push   ecx
10011e24:	mov    eax,DWORD PTR [ebp+0x8]
10011e27:	mov    DWORD PTR [ebp-0x4],eax
10011e2a:	mov    ecx,DWORD PTR [ebp-0x4]
10011e2d:	cmp    DWORD PTR [ecx+0x4],0xb4
10011e34:	jae    0x10011e4d
10011e36:	mov    edx,DWORD PTR [ebp-0x4]
10011e39:	mov    DWORD PTR [edx+0x4],0xb4
10011e40:	mov    eax,DWORD PTR [ebp-0x4]
10011e43:	mov    DWORD PTR [eax],0x1
10011e49:	mov    al,0x1
10011e4b:	jmp    0x10011e7b
10011e4d:	mov    ecx,DWORD PTR [ebp-0x4]
10011e50:	mov    DWORD PTR [ecx],0x0
10011e56:	mov    edx,DWORD PTR [ebp-0x4]
10011e59:	mov    DWORD PTR [edx+0x4],0xb4
10011e60:	push   0xb4
10011e65:	push   0x10066060
10011e6a:	mov    eax,DWORD PTR [ebp-0x4]
10011e6d:	add    eax,0x8
10011e70:	push   eax
10011e71:	call   0x100167d0
10011e76:	add    esp,0xc
10011e79:	mov    al,0x1
10011e7b:	mov    esp,ebp
10011e7d:	pop    ebp
10011e7e:	ret    
10011e7f:	int3   
10011e80:	push   ebp
10011e81:	mov    ebp,esp
10011e83:	push   0xffffffff
10011e85:	push   0x1002a618
10011e8a:	mov    eax,fs:0x0
10011e90:	push   eax
10011e91:	sub    esp,0xc
10011e94:	mov    eax,ds:0x10064694
10011e99:	xor    eax,ebp
10011e9b:	push   eax
10011e9c:	lea    eax,[ebp-0xc]
10011e9f:	mov    fs:0x0,eax
10011ea5:	lea    eax,[ebp-0x14]
10011ea8:	push   eax
10011ea9:	call   0x1000f3d0
10011eae:	add    esp,0x4
10011eb1:	mov    DWORD PTR [ebp-0x4],0x0
10011eb8:	lea    ecx,[ebp-0x14]
10011ebb:	call   0x10003190
10011ec0:	push   eax
10011ec1:	call   0x10010880
10011ec6:	add    esp,0x4
10011ec9:	push   eax
10011eca:	call   DWORD PTR ds:0x1002c098
10011ed0:	mov    DWORD PTR [ebp-0x10],eax
10011ed3:	xor    ecx,ecx
10011ed5:	cmp    DWORD PTR [ebp-0x10],0x0
10011ed9:	setne  cl
10011edc:	mov    BYTE PTR [ebp-0x15],cl
10011edf:	mov    DWORD PTR [ebp-0x4],0xffffffff
10011ee6:	lea    ecx,[ebp-0x14]
10011ee9:	call   0x10002e90
10011eee:	mov    al,BYTE PTR [ebp-0x15]
10011ef1:	mov    ecx,DWORD PTR [ebp-0xc]
10011ef4:	mov    DWORD PTR fs:0x0,ecx
10011efb:	pop    ecx
10011efc:	mov    esp,ebp
10011efe:	pop    ebp
10011eff:	ret    
10011f00:	push   ebp
10011f01:	mov    ebp,esp
10011f03:	sub    esp,0x18
10011f06:	cmp    DWORD PTR [ebp+0xc],0xa
10011f0a:	jae    0x10011f13
10011f0c:	xor    al,al
10011f0e:	jmp    0x10011fe9
10011f13:	mov    eax,DWORD PTR [ebp+0x8]
10011f16:	mov    DWORD PTR [ebp-0x8],eax
10011f19:	mov    ecx,DWORD PTR [ebp-0x8]
10011f1c:	mov    dx,WORD PTR [ecx+0x8]
10011f20:	mov    WORD PTR [ebp-0x4],dx
10011f24:	call   DWORD PTR ds:0x1002c0d0
10011f2a:	push   eax
10011f2b:	call   0x10002b10
10011f30:	add    esp,0x4
10011f33:	mov    WORD PTR [ebp-0x14],ax
10011f37:	mov    DWORD PTR [ebp-0x10],0x0
10011f3e:	mov    DWORD PTR [ebp-0xc],0x0
10011f45:	movzx  eax,WORD PTR [ebp-0x4]
10011f49:	mov    DWORD PTR [ebp-0x18],eax
10011f4c:	cmp    DWORD PTR [ebp-0x18],0x0
10011f50:	je     0x10011f5a
10011f52:	cmp    DWORD PTR [ebp-0x18],0x9
10011f56:	je     0x10011f63
10011f58:	jmp    0x10011f6a
10011f5a:	mov    DWORD PTR [ebp-0x10],0x10065dec
10011f61:	jmp    0x10011f6a
10011f63:	mov    DWORD PTR [ebp-0x10],0x10065e1c
10011f6a:	cmp    DWORD PTR [ebp-0x10],0x0
10011f6e:	jne    0x10011f74
10011f70:	xor    al,al
10011f72:	jmp    0x10011fe9
10011f74:	mov    ecx,DWORD PTR [ebp-0x10]
10011f77:	call   0x10002d00
10011f7c:	test   eax,eax
10011f7e:	jne    0x10011f84
10011f80:	xor    al,al
10011f82:	jmp    0x10011fe9
10011f84:	mov    ecx,DWORD PTR [ebp-0x10]
10011f87:	call   0x10002d00
10011f8c:	mov    ecx,DWORD PTR [ebp-0x8]
10011f8f:	cmp    eax,DWORD PTR [ecx+0x4]
10011f92:	jbe    0x10011faf
10011f94:	mov    ecx,DWORD PTR [ebp-0x10]
10011f97:	call   0x10002d00
10011f9c:	mov    edx,DWORD PTR [ebp-0x8]
10011f9f:	mov    DWORD PTR [edx+0x4],eax
10011fa2:	mov    eax,DWORD PTR [ebp-0x8]
10011fa5:	mov    DWORD PTR [eax],0x1
10011fab:	mov    al,0x1
10011fad:	jmp    0x10011fe9
10011faf:	mov    ecx,DWORD PTR [ebp-0x8]
10011fb2:	mov    DWORD PTR [ecx],0x0
10011fb8:	mov    ecx,DWORD PTR [ebp-0x10]
10011fbb:	call   0x10002d00
10011fc0:	mov    edx,DWORD PTR [ebp-0x8]
10011fc3:	mov    DWORD PTR [edx+0x4],eax
10011fc6:	mov    ecx,DWORD PTR [ebp-0x10]
10011fc9:	call   0x10002d00
10011fce:	push   eax
10011fcf:	mov    ecx,DWORD PTR [ebp-0x10]
10011fd2:	call   0x10002cf0
10011fd7:	push   eax
10011fd8:	mov    eax,DWORD PTR [ebp-0x8]
10011fdb:	add    eax,0x8
10011fde:	push   eax
10011fdf:	call   0x100167d0
10011fe4:	add    esp,0xc
10011fe7:	mov    al,0x1
10011fe9:	mov    esp,ebp
10011feb:	pop    ebp
10011fec:	ret    
10011fed:	int3   
10011fee:	int3   
10011fef:	int3   
10011ff0:	push   ebp
10011ff1:	mov    ebp,esp
10011ff3:	push   ecx
10011ff4:	mov    eax,DWORD PTR [ebp+0x8]
10011ff7:	mov    DWORD PTR [ebp-0x4],eax
10011ffa:	mov    ecx,DWORD PTR [ebp-0x4]
10011ffd:	mov    DWORD PTR [ecx],0x1
10012003:	mov    ecx,0x10065dec
10012008:	call   0x10002d00
1001200d:	test   eax,eax
1001200f:	jne    0x1001201a
10012011:	mov    edx,DWORD PTR [ebp-0x4]
10012014:	mov    DWORD PTR [edx],0x0
1001201a:	mov    al,0x1
1001201c:	mov    esp,ebp
1001201e:	pop    ebp
1001201f:	ret    
10012020:	push   ebp
10012021:	mov    ebp,esp
10012023:	push   0xffffffff
10012025:	push   0x1002a643
1001202a:	mov    eax,fs:0x0
10012030:	push   eax
10012031:	push   ecx
10012032:	sub    esp,0x64
10012035:	push   ebx
10012036:	push   esi
10012037:	push   edi
10012038:	mov    eax,ds:0x10064694
1001203d:	xor    eax,ebp
1001203f:	push   eax
10012040:	lea    eax,[ebp-0xc]
10012043:	mov    fs:0x0,eax
10012049:	mov    DWORD PTR [ebp-0x10],esp
1001204c:	mov    DWORD PTR [ebp-0x44],ecx
1001204f:	mov    BYTE PTR [ebp-0x11],0x0
10012053:	mov    eax,DWORD PTR [ebp+0x8]
10012056:	mov    DWORD PTR [ebp-0x48],eax
10012059:	cmp    DWORD PTR [ebp-0x48],0x1000
10012060:	ja     0x10012088
10012062:	cmp    DWORD PTR [ebp-0x48],0x1000
10012069:	je     0x10012096
1001206b:	mov    ecx,DWORD PTR [ebp-0x48]
1001206e:	sub    ecx,0x1
10012071:	mov    DWORD PTR [ebp-0x48],ecx
10012074:	cmp    DWORD PTR [ebp-0x48],0x9
10012078:	ja     0x100124a0
1001207e:	mov    edx,DWORD PTR [ebp-0x48]
10012081:	jmp    DWORD PTR [edx*4+0x100124e0]
10012088:	cmp    DWORD PTR [ebp-0x48],0x1001
1001208f:	je     0x100120ee
10012091:	jmp    0x100124a0
10012096:	mov    DWORD PTR [ebp-0x4],0x0
1001209d:	mov    eax,DWORD PTR [ebp+0xc]
100120a0:	mov    DWORD PTR [ebp-0x18],eax
100120a3:	mov    ecx,DWORD PTR [ebp-0x18]
100120a6:	cmp    DWORD PTR [ecx],0x0
100120a9:	jl     0x100120cf
100120ab:	mov    edx,DWORD PTR [ebp-0x18]
100120ae:	cmp    DWORD PTR [edx],0x20
100120b1:	jge    0x100120cf
100120b3:	mov    eax,DWORD PTR [ebp-0x18]
100120b6:	mov    ecx,DWORD PTR [eax]
100120b8:	mov    edx,DWORD PTR [ecx*8+0x10065f58]
100120bf:	mov    eax,DWORD PTR [ecx*8+0x10065f5c]
100120c6:	mov    ecx,DWORD PTR [ebp-0x18]
100120c9:	mov    DWORD PTR [ecx+0x8],edx
100120cc:	mov    DWORD PTR [ecx+0xc],eax
100120cf:	mov    BYTE PTR [ebp-0x11],0x1
100120d3:	jmp    0x100120e2
100120d5:	mov    DWORD PTR [ebp-0x4],0xffffffff
100120dc:	mov    eax,0x100120e9
100120e1:	ret    
100120e2:	mov    DWORD PTR [ebp-0x4],0xffffffff
100120e9:	jmp    0x100124c9
100120ee:	mov    DWORD PTR [ebp-0x4],0x2
100120f5:	mov    edx,DWORD PTR [ebp+0xc]
100120f8:	mov    DWORD PTR [ebp-0x1c],edx
100120fb:	mov    eax,DWORD PTR [ebp-0x1c]
100120fe:	cmp    DWORD PTR [eax],0x0
10012101:	jl     0x10012127
10012103:	mov    ecx,DWORD PTR [ebp-0x1c]
10012106:	cmp    DWORD PTR [ecx],0x20
10012109:	jge    0x10012127
1001210b:	mov    edx,DWORD PTR [ebp-0x1c]
1001210e:	mov    eax,DWORD PTR [edx]
10012110:	mov    ecx,DWORD PTR [ebp-0x1c]
10012113:	mov    edx,DWORD PTR [ecx+0x8]
10012116:	mov    ecx,DWORD PTR [ecx+0xc]
10012119:	mov    DWORD PTR [eax*8+0x10065f58],edx
10012120:	mov    DWORD PTR [eax*8+0x10065f5c],ecx
10012127:	mov    BYTE PTR [ebp-0x11],0x1
1001212b:	mov    edx,DWORD PTR [ebp+0x18]
1001212e:	mov    DWORD PTR [edx],0x0
10012134:	jmp    0x10012143
10012136:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001213d:	mov    eax,0x1001214a
10012142:	ret    
10012143:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001214a:	jmp    0x100124c9
1001214f:	mov    DWORD PTR [ebp-0x4],0x4
10012156:	call   0x10001000
1001215b:	mov    DWORD PTR [ebp-0x2c],eax
1001215e:	mov    eax,DWORD PTR [ebp+0xc]
10012161:	mov    DWORD PTR [ebp-0x24],eax
10012164:	mov    ecx,DWORD PTR ds:0x1005b07c
1001216a:	push   ecx
1001216b:	mov    edx,DWORD PTR [ebp-0x24]
1001216e:	push   edx
1001216f:	call   0x100172d4
10012174:	add    esp,0x8
10012177:	push   0x1
10012179:	push   0x0
1001217b:	lea    eax,[ebp-0x3c]
1001217e:	push   eax
1001217f:	call   0x10002050
10012184:	add    esp,0xc
10012187:	mov    DWORD PTR [ebp-0x4c],eax
1001218a:	mov    ecx,DWORD PTR [ebp-0x4c]
1001218d:	mov    DWORD PTR [ebp-0x50],ecx
10012190:	mov    BYTE PTR [ebp-0x4],0x5
10012194:	mov    ecx,DWORD PTR [ebp-0x50]
10012197:	call   0x10003190
1001219c:	mov    DWORD PTR [ebp-0x54],eax
1001219f:	mov    edx,DWORD PTR [ebp-0x54]
100121a2:	push   edx
100121a3:	call   0x10010880
100121a8:	add    esp,0x4
100121ab:	mov    DWORD PTR [ebp-0x58],eax
100121ae:	mov    eax,DWORD PTR [ebp-0x58]
100121b1:	push   eax
100121b2:	mov    ecx,DWORD PTR [ebp-0x24]
100121b5:	add    ecx,0x50
100121b8:	push   ecx
100121b9:	call   0x100172d4
100121be:	add    esp,0x8
100121c1:	mov    BYTE PTR [ebp-0x4],0x4
100121c5:	lea    ecx,[ebp-0x3c]
100121c8:	call   0x10002e90
100121cd:	push   0x1
100121cf:	push   0x2
100121d1:	lea    edx,[ebp-0x40]
100121d4:	push   edx
100121d5:	call   0x10002050
100121da:	add    esp,0xc
100121dd:	mov    DWORD PTR [ebp-0x5c],eax
100121e0:	mov    eax,DWORD PTR [ebp-0x5c]
100121e3:	mov    DWORD PTR [ebp-0x60],eax
100121e6:	mov    BYTE PTR [ebp-0x4],0x6
100121ea:	mov    ecx,DWORD PTR [ebp-0x60]
100121ed:	call   0x10003190
100121f2:	mov    DWORD PTR [ebp-0x64],eax
100121f5:	mov    ecx,DWORD PTR [ebp-0x64]
100121f8:	push   ecx
100121f9:	call   0x10010880
100121fe:	add    esp,0x4
10012201:	mov    DWORD PTR [ebp-0x68],eax
10012204:	mov    edx,DWORD PTR [ebp-0x68]
10012207:	push   edx
10012208:	mov    eax,DWORD PTR [ebp-0x24]
1001220b:	add    eax,0x90
10012210:	push   eax
10012211:	call   0x100172d4
10012216:	add    esp,0x8
10012219:	mov    BYTE PTR [ebp-0x4],0x4
1001221d:	lea    ecx,[ebp-0x40]
10012220:	call   0x10002e90
10012225:	push   0x1005b080
1001222a:	mov    ecx,DWORD PTR [ebp-0x24]
1001222d:	add    ecx,0xd0
10012233:	push   ecx
10012234:	call   0x100172d4
10012239:	add    esp,0x8
1001223c:	mov    edx,DWORD PTR [ebp-0x24]
1001223f:	add    edx,0x40
10012242:	mov    eax,ds:0x1005b00c
10012247:	mov    DWORD PTR [edx],eax
10012249:	mov    ecx,DWORD PTR ds:0x1005b010
1001224f:	mov    DWORD PTR [edx+0x4],ecx
10012252:	mov    eax,ds:0x1005b014
10012257:	mov    DWORD PTR [edx+0x8],eax
1001225a:	mov    ecx,DWORD PTR ds:0x1005b018
10012260:	mov    DWORD PTR [edx+0xc],ecx
10012263:	mov    BYTE PTR [ebp-0x11],0x1
10012267:	jmp    0x10012276
10012269:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012270:	mov    eax,0x1001227d
10012275:	ret    
10012276:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001227d:	jmp    0x100124c9
10012282:	mov    DWORD PTR [ebp-0x4],0x8
10012289:	mov    edx,DWORD PTR [ebp+0xc]
1001228c:	mov    DWORD PTR [ebp-0x34],edx
1001228f:	mov    eax,DWORD PTR [ebp-0x34]
10012292:	mov    ecx,DWORD PTR [eax]
10012294:	push   ecx
10012295:	call   0x1000f9b0
1001229a:	add    esp,0x4
1001229d:	mov    BYTE PTR [ebp-0x11],0x1
100122a1:	mov    edx,DWORD PTR [ebp+0x18]
100122a4:	mov    DWORD PTR [edx],0x0
100122aa:	jmp    0x100122b9
100122ac:	mov    DWORD PTR [ebp-0x4],0xffffffff
100122b3:	mov    eax,0x100122c0
100122b8:	ret    
100122b9:	mov    DWORD PTR [ebp-0x4],0xffffffff
100122c0:	jmp    0x100124c9
100122c5:	mov    DWORD PTR [ebp-0x4],0xa
100122cc:	mov    eax,DWORD PTR [ebp+0xc]
100122cf:	mov    DWORD PTR [ebp-0x38],eax
100122d2:	mov    ecx,DWORD PTR [ebp-0x38]
100122d5:	mov    edx,DWORD PTR [ecx]
100122d7:	push   edx
100122d8:	call   0x1000fa50
100122dd:	add    esp,0x4
100122e0:	mov    DWORD PTR [ebp-0x6c],eax
100122e3:	mov    eax,DWORD PTR [ebp-0x38]
100122e6:	mov    ecx,DWORD PTR [ebp-0x6c]
100122e9:	mov    DWORD PTR [eax],ecx
100122eb:	mov    BYTE PTR [ebp-0x11],0x1
100122ef:	jmp    0x100122fe
100122f1:	mov    DWORD PTR [ebp-0x4],0xffffffff
100122f8:	mov    eax,0x10012305
100122fd:	ret    
100122fe:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012305:	jmp    0x100124c9
1001230a:	mov    DWORD PTR [ebp-0x4],0xc
10012311:	mov    edx,DWORD PTR [ebp+0x10]
10012314:	push   edx
10012315:	mov    eax,DWORD PTR [ebp+0xc]
10012318:	push   eax
10012319:	call   0x10011df0
1001231e:	add    esp,0x8
10012321:	mov    BYTE PTR [ebp-0x6d],al
10012324:	mov    cl,BYTE PTR [ebp-0x6d]
10012327:	mov    BYTE PTR [ebp-0x11],cl
1001232a:	mov    edx,DWORD PTR [ebp+0x18]
1001232d:	mov    DWORD PTR [edx],0x0
10012333:	jmp    0x1001234b
10012335:	mov    eax,DWORD PTR [ebp+0x18]
10012338:	mov    DWORD PTR [eax],0x0
1001233e:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012345:	mov    eax,0x10012352
1001234a:	ret    
1001234b:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012352:	jmp    0x100124c9
10012357:	mov    DWORD PTR [ebp-0x4],0xe
1001235e:	mov    ecx,DWORD PTR [ebp+0x10]
10012361:	push   ecx
10012362:	mov    edx,DWORD PTR [ebp+0xc]
10012365:	push   edx
10012366:	call   0x10011e20
1001236b:	add    esp,0x8
1001236e:	mov    BYTE PTR [ebp-0x6e],al
10012371:	mov    al,BYTE PTR [ebp-0x6e]
10012374:	mov    BYTE PTR [ebp-0x11],al
10012377:	jmp    0x1001238f
10012379:	mov    ecx,DWORD PTR [ebp+0x18]
1001237c:	mov    DWORD PTR [ecx],0x0
10012382:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012389:	mov    eax,0x10012396
1001238e:	ret    
1001238f:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012396:	jmp    0x100124c9
1001239b:	mov    DWORD PTR [ebp-0x4],0x10
100123a2:	mov    edx,DWORD PTR [ebp+0x10]
100123a5:	push   edx
100123a6:	mov    eax,DWORD PTR [ebp+0xc]
100123a9:	push   eax
100123aa:	call   0x1000fbe0
100123af:	add    esp,0x8
100123b2:	mov    BYTE PTR [ebp-0x6f],al
100123b5:	mov    cl,BYTE PTR [ebp-0x6f]
100123b8:	mov    BYTE PTR [ebp-0x11],cl
100123bb:	jmp    0x100123d3
100123bd:	mov    edx,DWORD PTR [ebp+0x18]
100123c0:	mov    DWORD PTR [edx],0x0
100123c6:	mov    DWORD PTR [ebp-0x4],0xffffffff
100123cd:	mov    eax,0x100123da
100123d2:	ret    
100123d3:	mov    DWORD PTR [ebp-0x4],0xffffffff
100123da:	jmp    0x100124c9
100123df:	mov    DWORD PTR [ebp-0x4],0x12
100123e6:	mov    eax,DWORD PTR [ebp+0x10]
100123e9:	push   eax
100123ea:	mov    ecx,DWORD PTR [ebp+0xc]
100123ed:	push   ecx
100123ee:	call   0x10011f00
100123f3:	add    esp,0x8
100123f6:	mov    BYTE PTR [ebp-0x70],al
100123f9:	mov    dl,BYTE PTR [ebp-0x70]
100123fc:	mov    BYTE PTR [ebp-0x11],dl
100123ff:	jmp    0x10012417
10012401:	mov    eax,DWORD PTR [ebp+0x18]
10012404:	mov    DWORD PTR [eax],0x0
1001240a:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012411:	mov    eax,0x1001241e
10012416:	ret    
10012417:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001241e:	jmp    0x100124c9
10012423:	mov    DWORD PTR [ebp-0x4],0x14
1001242a:	mov    ecx,DWORD PTR [ebp+0x10]
1001242d:	push   ecx
1001242e:	mov    edx,DWORD PTR [ebp+0xc]
10012431:	push   edx
10012432:	call   0x10011ff0
10012437:	add    esp,0x8
1001243a:	mov    BYTE PTR [ebp-0x71],al
1001243d:	mov    al,BYTE PTR [ebp-0x71]
10012440:	mov    BYTE PTR [ebp-0x11],al
10012443:	jmp    0x1001245b
10012445:	mov    ecx,DWORD PTR [ebp+0x18]
10012448:	mov    DWORD PTR [ecx],0x0
1001244e:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012455:	mov    eax,0x10012462
1001245a:	ret    
1001245b:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012462:	jmp    0x100124c9
10012464:	mov    DWORD PTR [ebp-0x4],0x16
1001246b:	mov    edx,DWORD PTR [ebp+0x10]
1001246e:	push   edx
1001246f:	mov    eax,DWORD PTR [ebp+0xc]
10012472:	push   eax
10012473:	call   0x1000f280
10012478:	add    esp,0x8
1001247b:	mov    BYTE PTR [ebp-0x11],0x1
1001247f:	mov    ecx,DWORD PTR [ebp+0x18]
10012482:	mov    DWORD PTR [ecx],0x0
10012488:	jmp    0x10012497
1001248a:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012491:	mov    eax,0x1001249e
10012496:	ret    
10012497:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001249e:	jmp    0x100124c9
100124a0:	cmp    DWORD PTR ds:0x10066058,0x0
100124a7:	je     0x100124c9
100124a9:	mov    edx,DWORD PTR [ebp+0x18]
100124ac:	push   edx
100124ad:	mov    eax,DWORD PTR [ebp+0x14]
100124b0:	push   eax
100124b1:	mov    ecx,DWORD PTR [ebp+0x10]
100124b4:	push   ecx
100124b5:	mov    edx,DWORD PTR [ebp+0xc]
100124b8:	push   edx
100124b9:	mov    eax,DWORD PTR [ebp+0x8]
100124bc:	push   eax
100124bd:	call   DWORD PTR ds:0x10066058
100124c3:	add    esp,0x14
100124c6:	mov    BYTE PTR [ebp-0x11],al
100124c9:	mov    al,BYTE PTR [ebp-0x11]
100124cc:	mov    ecx,DWORD PTR [ebp-0xc]
100124cf:	mov    DWORD PTR fs:0x0,ecx
100124d6:	pop    ecx
100124d7:	pop    edi
100124d8:	pop    esi
100124d9:	pop    ebx
100124da:	mov    esp,ebp
100124dc:	pop    ebp
100124dd:	ret    0x14
100124e0:	dec    edi
100124e1:	and    DWORD PTR [ecx],eax
100124e3:	adc    BYTE PTR [ebx-0x20effedd],bl
100124e9:	and    eax,DWORD PTR [ecx]
100124eb:	adc    BYTE PTR [ebx],ah
100124ed:	and    al,0x1
100124ef:	adc    BYTE PTR [esp+0x1],ah
100124f3:	adc    BYTE PTR [eax-0x7deffedc],ah
100124f9:	and    al,BYTE PTR [ecx]
100124fb:	adc    ch,al
100124fd:	and    al,BYTE PTR [ecx]
100124ff:	adc    BYTE PTR [edx],cl
10012501:	and    eax,DWORD PTR [ecx]
10012503:	adc    BYTE PTR [edi+0x23],dl
10012506:	add    DWORD PTR [eax],edx
10012508:	jmp    DWORD PTR ds:0x1002c23c
1001250e:	jmp    DWORD PTR ds:0x1002c24c
10012514:	int3   
10012515:	int3   
10012516:	int3   
10012517:	int3   
10012518:	int3   
10012519:	int3   
1001251a:	int3   
1001251b:	int3   
1001251c:	int3   
1001251d:	int3   
1001251e:	int3   
1001251f:	int3   
10012520:	push   edi
10012521:	mov    edi,DWORD PTR [esp+0x14]
10012525:	test   edi,edi
10012527:	jne    0x1001252e
10012529:	lea    eax,[edi+0x1]
1001252c:	pop    edi
1001252d:	ret    
1001252e:	mov    eax,DWORD PTR [esp+0x8]
10012532:	test   eax,eax
10012534:	push   esi
10012535:	mov    DWORD PTR [edi],0x0
1001253b:	je     0x1001258d
1001253d:	mov    esi,DWORD PTR [eax+0x14]
10012540:	test   esi,esi
10012542:	jl     0x1001258d
10012544:	mov    ecx,DWORD PTR [eax+0x18]
10012547:	test   ecx,ecx
10012549:	je     0x10012555
1001254b:	cmp    ecx,0x1
1001254e:	je     0x10012555
10012550:	cmp    ecx,0x2
10012553:	jne    0x1001258d
10012555:	cmp    DWORD PTR [eax+0x10],0x0
10012559:	je     0x1001258d
1001255b:	mov    ecx,DWORD PTR [esp+0x10]
1001255f:	test   ecx,ecx
10012561:	je     0x1001258d
10012563:	mov    edx,DWORD PTR [eax+0x1c]
10012566:	and    edx,0x3
10012569:	cmp    dl,0x3
1001256c:	je     0x1001258d
1001256e:	test   esi,esi
10012570:	jne    0x10012578
10012572:	lea    eax,[esi+0x1]
10012575:	pop    esi
10012576:	pop    edi
10012577:	ret    
10012578:	mov    edx,DWORD PTR [esp+0x14]
1001257c:	push   edi
1001257d:	push   edx
1001257e:	push   ecx
1001257f:	push   0x0
10012581:	push   eax
10012582:	call   0x10012a90
10012587:	add    esp,0x14
1001258a:	pop    esi
1001258b:	pop    edi
1001258c:	ret    
1001258d:	pop    esi
1001258e:	mov    eax,0x3
10012593:	pop    edi
10012594:	ret    
10012595:	int3   
10012596:	int3   
10012597:	int3   
10012598:	int3   
10012599:	int3   
1001259a:	int3   
1001259b:	int3   
1001259c:	int3   
1001259d:	int3   
1001259e:	int3   
1001259f:	int3   
100125a0:	test   DWORD PTR [esp+0x4],0x4000
100125a8:	je     0x100125b1
100125aa:	mov    eax,DWORD PTR [eax*4+0x1005b0c0]
100125b1:	ret    
100125b2:	int3   
100125b3:	int3   
100125b4:	int3   
100125b5:	int3   
100125b6:	int3   
100125b7:	int3   
100125b8:	int3   
100125b9:	int3   
100125ba:	int3   
100125bb:	int3   
100125bc:	int3   
100125bd:	int3   
100125be:	int3   
100125bf:	int3   
100125c0:	test   ecx,0x2000
100125c6:	je     0x100125d0
100125c8:	mov    eax,DWORD PTR [eax*4+0x1005b0cc]
100125cf:	ret    
100125d0:	cmp    eax,0x2
100125d3:	jne    0x100125fd
100125d5:	and    edx,0x3000000
100125db:	cmp    edx,0x1000000
100125e1:	je     0x100125f8
100125e3:	test   ecx,0x2000000
100125e9:	je     0x100125f2
100125eb:	test   BYTE PTR [esp+0x4],0x8
100125f0:	jne    0x100125f8
100125f2:	mov    eax,0x1
100125f7:	ret    
100125f8:	mov    eax,0x2
100125fd:	ret    
100125fe:	int3   
100125ff:	int3   
10012600:	sub    esp,0x18
10012603:	mov    edx,DWORD PTR [ebx+0x10]
10012606:	push   ebp
10012607:	mov    ebp,DWORD PTR [esp+0x20]
1001260b:	mov    ecx,DWORD PTR [ebp+0x28]
1001260e:	push   esi
1001260f:	xor    eax,eax
10012611:	push   ebp
10012612:	push   ebx
10012613:	mov    DWORD PTR [esp+0x10],eax
10012617:	mov    DWORD PTR [esp+0x1c],ecx
1001261b:	mov    DWORD PTR [esp+0x24],edx
1001261f:	mov    BYTE PTR [esp+0x2c],al
10012623:	mov    DWORD PTR [esp+0x20],eax
10012627:	call   0x10015050
1001262c:	mov    esi,eax
1001262e:	add    esp,0x8
10012631:	test   esi,esi
10012633:	je     0x10012830
10012639:	cmp    DWORD PTR [ebp+0x18],0x1
1001263d:	jne    0x10012669
1001263f:	mov    eax,DWORD PTR [ebp+0x0]
10012642:	test   eax,0x2000
10012647:	je     0x10012669
10012649:	cmp    DWORD PTR [ebp+0x20],0x0
1001264d:	jne    0x10012669
1001264f:	test   BYTE PTR [esp+0x14],0x8
10012654:	je     0x10012669
10012656:	and    eax,0xffffdfff
1001265b:	push   0x3
1001265d:	push   ebp
1001265e:	mov    DWORD PTR [ebp+0x0],eax
10012661:	call   0x100149a0
10012666:	add    esp,0x8
10012669:	mov    eax,DWORD PTR [ebx+0x18]
1001266c:	cmp    eax,0x2
1001266f:	jne    0x10012682
10012671:	test   DWORD PTR [esi+0x8],0x800000
10012678:	jne    0x10012830
1001267e:	cmp    eax,eax
10012680:	je     0x1001268f
10012682:	test   DWORD PTR [esi+0x8],0x8000000
10012689:	jne    0x10012830
1001268f:	mov    ecx,DWORD PTR [esi+0x8]
10012692:	test   cl,0x1
10012695:	je     0x100126e1
10012697:	not    ecx
10012699:	test   ecx,0x40000000
1001269f:	je     0x100126af
100126a1:	add    DWORD PTR [ebx+0x10],0x1
100126a5:	add    DWORD PTR [ebx+0x14],0xffffffff
100126a9:	js     0x10012830
100126af:	mov    ecx,DWORD PTR [ebx+0x10]
100126b2:	movzx  edx,BYTE PTR [ecx]
100126b5:	mov    ecx,DWORD PTR [esi+0x8]
100126b8:	test   ecx,0x10000000
100126be:	mov    DWORD PTR [esp+0x8],edx
100126c2:	je     0x100126cd
100126c4:	test   dl,0x38
100126c7:	jne    0x10012830
100126cd:	test   ecx,0x100000
100126d3:	je     0x100126e1
100126d5:	cmp    edx,0xc0
100126db:	jb     0x10012830
100126e1:	mov    edx,DWORD PTR [esp+0x14]
100126e5:	add    DWORD PTR [ebx+0x10],0x1
100126e9:	mov    ecx,DWORD PTR [ebp+0x0]
100126ec:	push   edx
100126ed:	mov    edx,DWORD PTR [esi+0x8]
100126f0:	call   0x100125c0
100126f5:	mov    DWORD PTR [esp+0x14],eax
100126f9:	mov    eax,ecx
100126fb:	push   eax
100126fc:	mov    eax,DWORD PTR [ebx+0x18]
100126ff:	call   0x100125a0
10012704:	push   0x40
10012706:	push   0x0
10012708:	push   edi
10012709:	mov    DWORD PTR [esp+0x20],eax
1001270d:	call   0x10016530
10012712:	mov    BYTE PTR [edi+0xd],0xff
10012716:	mov    al,BYTE PTR [esi+0x3]
10012719:	add    esp,0x14
1001271c:	test   al,al
1001271e:	je     0x100127ea
10012724:	mov    edx,DWORD PTR [esp+0xc]
10012728:	lea    ecx,[esp+0x18]
1001272c:	push   ecx
1001272d:	mov    ecx,DWORD PTR [esp+0x14]
10012731:	push   edx
10012732:	mov    edx,DWORD PTR [esp+0x10]
10012736:	push   ecx
10012737:	push   ebp
10012738:	push   edx
10012739:	push   0x0
1001273b:	movzx  eax,al
1001273e:	push   eax
1001273f:	push   esi
10012740:	push   edi
10012741:	push   ebx
10012742:	call   0x100137b0
10012747:	add    esp,0x28
1001274a:	test   eax,eax
1001274c:	je     0x10012830
10012752:	mov    al,BYTE PTR [esi+0x2]
10012755:	test   al,al
10012757:	je     0x100127ea
1001275d:	mov    ecx,DWORD PTR [esp+0xc]
10012761:	mov    edx,DWORD PTR [esp+0x10]
10012765:	push   0x0
10012767:	push   ecx
10012768:	mov    ecx,DWORD PTR [esp+0x10]
1001276c:	push   edx
1001276d:	push   ebp
1001276e:	push   ecx
1001276f:	push   0x1
10012771:	movzx  edx,al
10012774:	push   edx
10012775:	push   esi
10012776:	push   edi
10012777:	push   ebx
10012778:	call   0x100137b0
1001277d:	add    esp,0x28
10012780:	test   eax,eax
10012782:	je     0x10012830
10012788:	test   DWORD PTR [esi+0x8],0x20000
1001278f:	je     0x100127ea
10012791:	mov    eax,DWORD PTR [esp+0xc]
10012795:	mov    ecx,DWORD PTR [esp+0x10]
10012799:	mov    edx,DWORD PTR [esp+0x8]
1001279d:	push   0x0
1001279f:	push   eax
100127a0:	movzx  eax,BYTE PTR [esi+0x10]
100127a4:	push   ecx
100127a5:	push   ebp
100127a6:	push   edx
100127a7:	push   0x2
100127a9:	push   eax
100127aa:	push   esi
100127ab:	push   edi
100127ac:	push   ebx
100127ad:	call   0x100137b0
100127b2:	add    esp,0x28
100127b5:	test   eax,eax
100127b7:	je     0x10012830
100127b9:	test   DWORD PTR [esi+0x8],0x40000
100127c0:	je     0x100127ea
100127c2:	mov    ecx,DWORD PTR [esp+0xc]
100127c6:	mov    edx,DWORD PTR [esp+0x10]
100127ca:	mov    eax,DWORD PTR [esp+0x8]
100127ce:	push   0x0
100127d0:	push   ecx
100127d1:	movzx  ecx,BYTE PTR [esi+0x11]
100127d5:	push   edx
100127d6:	push   ebp
100127d7:	push   eax
100127d8:	push   0x3
100127da:	push   ecx
100127db:	push   esi
100127dc:	push   edi
100127dd:	push   ebx
100127de:	call   0x100137b0
100127e3:	add    esp,0x28
100127e6:	test   eax,eax
100127e8:	je     0x10012830
100127ea:	test   DWORD PTR [esi+0x8],0x200000
100127f1:	je     0x10012802
100127f3:	push   ebx
100127f4:	call   0x10015340
100127f9:	mov    esi,eax
100127fb:	add    esp,0x4
100127fe:	test   esi,esi
10012800:	je     0x10012830
10012802:	test   DWORD PTR [esi+0x8],0x400000
10012809:	je     0x10012825
1001280b:	add    DWORD PTR [ebx+0x14],0xffffffff
1001280f:	js     0x10012830
10012811:	mov    eax,DWORD PTR [ebx+0x10]
10012814:	mov    cl,BYTE PTR [eax]
10012816:	add    eax,0x1
10012819:	cmp    cl,0x8
1001281c:	mov    BYTE PTR [esp+0x24],cl
10012820:	mov    DWORD PTR [ebx+0x10],eax
10012823:	jae    0x10012830
10012825:	mov    edx,DWORD PTR [ebx+0x10]
10012828:	sub    edx,DWORD PTR [ebp+0x8]
1001282b:	cmp    edx,0xf
1001282e:	jle    0x10012875
10012830:	push   0x40
10012832:	push   0x0
10012834:	push   edi
10012835:	call   0x10016530
1001283a:	mov    eax,DWORD PTR [esp+0x28]
1001283e:	mov    BYTE PTR [edi+0xd],0xff
10012842:	mov    BYTE PTR [edi+0x8],0x1
10012846:	add    esp,0xc
10012849:	mov    DWORD PTR [ebp+0x4],0x0
10012850:	cmp    BYTE PTR [eax],0x9b
10012853:	jne    0x1001286a
10012855:	or     BYTE PTR [edi+0x3a],0x8
10012859:	pop    esi
1001285a:	mov    WORD PTR [edi+0x10],0x3db
10012860:	mov    eax,0x1
10012865:	pop    ebp
10012866:	add    esp,0x18
10012869:	ret    
1001286a:	pop    esi
1001286b:	mov    eax,0x3
10012870:	pop    ebp
10012871:	add    esp,0x18
10012874:	ret    
10012875:	mov    edx,0x1
1001287a:	cmp    DWORD PTR [esp+0x18],edx
1001287e:	jne    0x10012890
10012880:	test   BYTE PTR [esi+0x8],0x10
10012884:	je     0x10012890
10012886:	or     DWORD PTR [ebp+0x4],0x10
1001288a:	or     WORD PTR [edi+0xa],dx
1001288e:	jmp    0x100128bb
10012890:	mov    eax,DWORD PTR [esi+0x8]
10012893:	test   al,0x20
10012895:	je     0x100128a8
10012897:	test   BYTE PTR [ebp+0x0],0x20
1001289b:	je     0x100128a8
1001289d:	or     DWORD PTR [ebp+0x4],0x20
100128a1:	or     WORD PTR [edi+0xa],0x2
100128a6:	jmp    0x100128bb
100128a8:	test   al,0x40
100128aa:	je     0x100128bb
100128ac:	test   BYTE PTR [ebp+0x0],0x40
100128b0:	je     0x100128bb
100128b2:	or     DWORD PTR [ebp+0x4],0x40
100128b6:	or     WORD PTR [edi+0xa],0x4
100128bb:	mov    eax,DWORD PTR [esi+0x8]
100128be:	mov    ecx,eax
100128c0:	and    ecx,0x14000
100128c6:	cmp    ecx,0x14000
100128cc:	jne    0x100128ff
100128ce:	mov    eax,DWORD PTR [esp+0xc]
100128d2:	or     DWORD PTR [ebp+0x4],0x4000
100128d9:	test   eax,eax
100128db:	je     0x100129db
100128e1:	cmp    eax,edx
100128e3:	jne    0x100128f2
100128e5:	mov    ax,WORD PTR [esi+0x12]
100128e9:	mov    WORD PTR [edi+0x10],ax
100128ed:	jmp    0x100129e3
100128f2:	mov    cx,WORD PTR [esi+0x14]
100128f6:	mov    WORD PTR [edi+0x10],cx
100128fa:	jmp    0x100129e3
100128ff:	mov    ecx,eax
10012901:	and    ecx,0xc000
10012907:	cmp    ecx,0xc000
1001290d:	jne    0x10012923
1001290f:	mov    dx,WORD PTR [esi+0x4]
10012913:	mov    WORD PTR [edi+0x10],dx
10012917:	or     DWORD PTR [ebp+0x4],0x4000
1001291e:	jmp    0x100129e3
10012923:	mov    ecx,DWORD PTR [esp+0x10]
10012927:	test   ecx,ecx
10012929:	jne    0x1001294d
1001292b:	test   eax,0x10000
10012930:	je     0x10012940
10012932:	test   eax,0x1000008
10012937:	jne    0x10012940
10012939:	or     DWORD PTR [ebp+0x4],0x2000
10012940:	mov    ax,WORD PTR [esi+0x4]
10012944:	mov    WORD PTR [edi+0x10],ax
10012948:	jmp    0x100129e3
1001294d:	cmp    ecx,edx
1001294f:	jne    0x100129a2
10012951:	or     WORD PTR [edi+0xa],0x100
10012957:	test   DWORD PTR [esi+0x8],0x10000
1001295e:	je     0x100129db
10012960:	or     DWORD PTR [ebp+0x4],0x2000
10012967:	mov    eax,DWORD PTR [esi+0x8]
1001296a:	test   eax,0x80000
1001296f:	je     0x1001298b
10012971:	cmp    DWORD PTR [esp+0x8],0xc0
10012979:	jb     0x10012985
1001297b:	mov    cx,WORD PTR [esi+0x4]
1001297f:	mov    WORD PTR [edi+0x10],cx
10012983:	jmp    0x100129e3
10012985:	mov    dx,WORD PTR [esi+0x12]
10012989:	jmp    0x100129df
1001298b:	test   eax,0x400000
10012990:	je     0x100129d1
10012992:	movzx  ax,BYTE PTR [esp+0x24]
10012998:	add    ax,WORD PTR [esi+0x4]
1001299c:	mov    WORD PTR [edi+0x10],ax
100129a0:	jmp    0x100129e3
100129a2:	or     WORD PTR [edi+0xa],0x200
100129a8:	mov    eax,DWORD PTR [esi+0x8]
100129ab:	test   eax,0x4010000
100129b0:	je     0x100129db
100129b2:	test   eax,0x4000000
100129b7:	je     0x100129d1
100129b9:	test   BYTE PTR [esp+0x14],0x8
100129be:	je     0x100129d1
100129c0:	or     DWORD PTR [ebp+0x4],0x2000000
100129c7:	mov    ax,WORD PTR [esi+0x14]
100129cb:	mov    WORD PTR [edi+0x10],ax
100129cf:	jmp    0x100129e3
100129d1:	mov    cx,WORD PTR [esi+0x12]
100129d5:	mov    WORD PTR [edi+0x10],cx
100129d9:	jmp    0x100129e3
100129db:	mov    dx,WORD PTR [esi+0x4]
100129df:	mov    WORD PTR [edi+0x10],dx
100129e3:	test   DWORD PTR [esi+0x8],0x8000
100129ea:	je     0x100129fc
100129ec:	test   DWORD PTR [ebp+0x0],0x2000
100129f3:	je     0x100129fc
100129f5:	or     DWORD PTR [ebp+0x4],0x2000
100129fc:	test   DWORD PTR [esi+0x8],0x20000000
10012a03:	je     0x10012a26
10012a05:	mov    eax,DWORD PTR [esi+0xc]
10012a08:	test   al,0x4
10012a0a:	je     0x10012a13
10012a0c:	test   BYTE PTR [esp+0x14],0x8
10012a11:	jne    0x10012a1e
10012a13:	test   al,0x8
10012a15:	je     0x10012a26
10012a17:	test   BYTE PTR [esp+0x14],0x10
10012a1c:	je     0x10012a26
10012a1e:	mov    ax,WORD PTR [esi+0x12]
10012a22:	mov    WORD PTR [edi+0x10],ax
10012a26:	mov    eax,DWORD PTR [esp+0xc]
10012a2a:	and    eax,0x3
10012a2d:	shl    eax,0xa
10012a30:	or     WORD PTR [edi+0xa],ax
10012a34:	test   DWORD PTR [esi+0x8],0x80000000
10012a3b:	movzx  eax,WORD PTR [edi+0xa]
10012a3f:	je     0x10012a48
10012a41:	or     eax,0x40
10012a44:	mov    WORD PTR [edi+0xa],ax
10012a48:	push   ebp
10012a49:	call   0x100149e0
10012a4e:	mov    WORD PTR [edi+0x38],ax
10012a52:	mov    cl,BYTE PTR [esi+0x1]
10012a55:	add    esp,0x4
10012a58:	cmp    BYTE PTR [edi+0xc],0x0
10012a5c:	mov    BYTE PTR [edi+0x3a],cl
10012a5f:	jne    0x10012a65
10012a61:	mov    BYTE PTR [edi+0xc],0xff
10012a65:	mov    al,BYTE PTR [edi+0xd]
10012a68:	cmp    al,0xff
10012a6a:	je     0x10012a7b
10012a6c:	movzx  edx,al
10012a6f:	mov    ax,WORD PTR [edx*2+0x1005b0d8]
10012a77:	or     WORD PTR [edi+0x3c],ax
10012a7b:	mov    cl,BYTE PTR [ebx+0x10]
10012a7e:	sub    cl,BYTE PTR [esp+0x1c]
10012a82:	pop    esi
10012a83:	mov    BYTE PTR [edi+0x8],cl
10012a86:	mov    eax,0x1
10012a8b:	pop    ebp
10012a8c:	add    esp,0x18
10012a8f:	ret    
10012a90:	sub    esp,0x90
10012a96:	push   ebx
10012a97:	push   ebp
10012a98:	push   esi
10012a99:	or     eax,0xffffffff
10012a9c:	push   edi
10012a9d:	mov    edi,DWORD PTR [esp+0xa4]
10012aa4:	mov    ebp,DWORD PTR [edi]
10012aa6:	mov    ecx,DWORD PTR [edi+0x4]
10012aa9:	mov    ebx,DWORD PTR [edi+0x10]
10012aac:	mov    edx,DWORD PTR [edi+0x14]
10012aaf:	mov    DWORD PTR [esp+0x2c],eax
10012ab3:	mov    DWORD PTR [esp+0x30],eax
10012ab7:	mov    eax,DWORD PTR [edi+0x1c]
10012aba:	xor    esi,esi
10012abc:	test   al,0x2
10012abe:	mov    DWORD PTR [esp+0x1c],ebp
10012ac2:	mov    DWORD PTR [esp+0x20],ecx
10012ac6:	mov    DWORD PTR [esp+0x18],ebx
10012aca:	mov    DWORD PTR [esp+0x14],edx
10012ace:	je     0x10012ada
10012ad0:	mov    DWORD PTR [esp+0x2c],0xffffffff
10012ad8:	jmp    0x10012ae6
10012ada:	test   al,0x1
10012adc:	je     0x10012aea
10012ade:	mov    DWORD PTR [esp+0x2c],0xffff
10012ae6:	mov    DWORD PTR [esp+0x30],esi
10012aea:	test   edx,edx
10012aec:	mov    eax,DWORD PTR [esp+0xb4]
10012af3:	mov    DWORD PTR [eax],esi
10012af5:	mov    eax,DWORD PTR [edi+0x18]
10012af8:	mov    DWORD PTR [esp+0x98],eax
10012aff:	mov    DWORD PTR [edi+0x8],ebp
10012b02:	mov    DWORD PTR [edi+0xc],ecx
10012b05:	jg     0x10012b28
10012b07:	pop    edi
10012b08:	pop    esi
10012b09:	pop    ebp
10012b0a:	mov    eax,0x1
10012b0f:	pop    ebx
10012b10:	add    esp,0x90
10012b16:	ret    
10012b17:	jmp    0x10012b20
10012b19:	lea    esp,[esp+0x0]
10012b20:	mov    ecx,DWORD PTR [esp+0x20]
10012b24:	mov    ebp,DWORD PTR [esp+0x1c]
10012b28:	push   0x2c
10012b2a:	mov    DWORD PTR [esp+0x3c],ecx
10012b2e:	lea    ecx,[esp+0x44]
10012b32:	push   0x0
10012b34:	push   ecx
10012b35:	call   0x10016530
10012b3a:	mov    edx,DWORD PTR [esp+0xa4]
10012b41:	or     eax,0xffffffff
10012b44:	mov    DWORD PTR [esp+0x78],eax
10012b48:	mov    DWORD PTR [esp+0x7c],eax
10012b4c:	mov    DWORD PTR [esp+0x80],eax
10012b53:	mov    DWORD PTR [esp+0x84],eax
10012b5a:	mov    DWORD PTR [esp+0x88],eax
10012b61:	mov    DWORD PTR [esp+0x54],ebx
10012b65:	mov    DWORD PTR [esp+0x58],ebx
10012b69:	movzx  eax,BYTE PTR [ebx]
10012b6c:	push   edx
10012b6d:	push   eax
10012b6e:	mov    DWORD PTR [esp+0x38],0x0
10012b76:	call   0x10014890
10012b7b:	add    esp,0x14
10012b7e:	test   eax,eax
10012b80:	je     0x10012cae
10012b86:	mov    ecx,DWORD PTR [esp+0x98]
10012b8d:	mov    eax,DWORD PTR [esp+0x14]
10012b91:	push   ecx
10012b92:	lea    edx,[esp+0x44]
10012b96:	push   edx
10012b97:	push   eax
10012b98:	push   ebx
10012b99:	call   0x10014a70
10012b9e:	mov    ecx,DWORD PTR [esp+0x5c]
10012ba2:	mov    eax,ecx
10012ba4:	sub    eax,DWORD PTR [esp+0x58]
10012ba8:	add    esp,0x10
10012bab:	sub    DWORD PTR [esp+0x14],eax
10012baf:	mov    DWORD PTR [esp+0x24],eax
10012bb3:	je     0x10012bbe
10012bb5:	cmp    eax,0xf
10012bb8:	jne    0x10012c96
10012bbe:	mov    edx,DWORD PTR [edi+0x1c]
10012bc1:	not    edx
10012bc3:	test   dl,0x4
10012bc6:	je     0x10012c8b
10012bcc:	sub    ecx,ebx
10012bce:	lea    edx,[ecx+esi*1]
10012bd1:	cmp    edx,DWORD PTR [esp+0xb0]
10012bd8:	ja     0x10012fb1
10012bde:	cmp    ebx,DWORD PTR [esp+0x4c]
10012be2:	jae    0x10012c82
10012be8:	mov    edx,DWORD PTR [esp+0xac]
10012bef:	mov    edi,esi
10012bf1:	imul   edi,edi,0xa8
10012bf7:	mov    eax,esi
10012bf9:	shl    eax,0x6
10012bfc:	add    eax,edx
10012bfe:	add    edi,edx
10012c00:	add    esi,ecx
10012c02:	mov    DWORD PTR [esp+0x10],esi
10012c06:	jmp    0x10012c14
10012c08:	jmp    0x10012c10
10012c0a:	lea    ebx,[ebx+0x0]
10012c10:	mov    eax,DWORD PTR [esp+0x28]
10012c14:	cmp    DWORD PTR [esp+0xa8],0x0
10012c1c:	mov    esi,edi
10012c1e:	jne    0x10012c22
10012c20:	mov    esi,eax
10012c22:	push   0x40
10012c24:	add    eax,0x40
10012c27:	push   0x0
10012c29:	push   esi
10012c2a:	add    edi,0xa8
10012c30:	mov    DWORD PTR [esp+0x34],eax
10012c34:	call   0x10016530
10012c39:	mov    ecx,DWORD PTR [esp+0x38]
10012c3d:	mov    edx,DWORD PTR [esp+0x3c]
10012c41:	and    edx,DWORD PTR [esp+0x44]
10012c45:	mov    WORD PTR [esi+0xa],0xffff
10012c4b:	mov    al,BYTE PTR [ebx]
10012c4d:	and    ecx,ebp
10012c4f:	add    esp,0xc
10012c52:	add    ebx,0x1
10012c55:	add    ebp,0x1
10012c58:	adc    DWORD PTR [esp+0x38],0x0
10012c5d:	cmp    ebx,DWORD PTR [esp+0x4c]
10012c61:	mov    BYTE PTR [esi+0x30],al
10012c64:	mov    BYTE PTR [esi+0x8],0x1
10012c68:	mov    DWORD PTR [esi],ecx
10012c6a:	mov    DWORD PTR [esi+0x4],edx
10012c6d:	jb     0x10012c10
10012c6f:	mov    eax,DWORD PTR [esp+0x24]
10012c73:	mov    esi,DWORD PTR [esp+0x10]
10012c77:	mov    ebx,DWORD PTR [esp+0x18]
10012c7b:	mov    edi,DWORD PTR [esp+0xa4]
10012c82:	mov    ecx,DWORD PTR [esp+0xb4]
10012c89:	mov    DWORD PTR [ecx],esi
10012c8b:	cmp    DWORD PTR [esp+0x14],0x0
10012c90:	je     0x10012b07
10012c96:	add    ebx,eax
10012c98:	add    DWORD PTR [esp+0x1c],eax
10012c9c:	mov    DWORD PTR [esp+0x18],ebx
10012ca0:	adc    DWORD PTR [esp+0x20],0x0
10012ca5:	cmp    eax,0xf
10012ca8:	je     0x10012f96
10012cae:	cmp    DWORD PTR [esp+0x98],0x2
10012cb6:	jne    0x10012d0b
10012cb8:	test   DWORD PTR [esp+0x40],0x2000000
10012cc0:	je     0x10012cea
10012cc2:	add    ebx,0xffffffff
10012cc5:	cmp    DWORD PTR [esp+0x54],ebx
10012cc9:	je     0x10012cea
10012ccb:	and    DWORD PTR [esp+0x40],0xfdffffff
10012cd3:	lea    edx,[esp+0x40]
10012cd7:	push   0x0
10012cd9:	push   edx
10012cda:	mov    DWORD PTR [esp+0x60],0x0
10012ce2:	call   0x100149a0
10012ce7:	add    esp,0x8
10012cea:	test   DWORD PTR [esp+0x40],0x780
10012cf2:	je     0x10012d0b
10012cf4:	and    DWORD PTR [esp+0x40],0xfffff87f
10012cfc:	lea    eax,[esp+0x40]
10012d00:	push   0x2
10012d02:	push   eax
10012d03:	call   0x100149a0
10012d08:	add    esp,0x8
10012d0b:	lea    eax,[esi+0x1]
10012d0e:	cmp    eax,DWORD PTR [esp+0xb0]
10012d15:	ja     0x10012fb1
10012d1b:	cmp    DWORD PTR [esp+0xa8],0x0
10012d23:	je     0x10012d2d
10012d25:	imul   esi,esi,0xa8
10012d2b:	jmp    0x10012d30
10012d2d:	shl    esi,0x6
10012d30:	add    esi,DWORD PTR [esp+0xac]
10012d37:	mov    ecx,DWORD PTR [esp+0x18]
10012d3b:	mov    edx,DWORD PTR [esp+0x14]
10012d3f:	mov    DWORD PTR [esp+0x10],eax
10012d43:	lea    eax,[esp+0x40]
10012d47:	mov    edi,esi
10012d49:	push   eax
10012d4a:	lea    ebx,[esp+0x84]
10012d51:	mov    DWORD PTR [esp+0x94],ecx
10012d58:	mov    DWORD PTR [esp+0x98],edx
10012d5f:	call   0x10012600
10012d64:	mov    ecx,DWORD PTR [esp+0xa8]
10012d6b:	add    esp,0x4
10012d6e:	test   BYTE PTR [ecx+0x1c],0x4
10012d72:	mov    DWORD PTR [esp+0x28],eax
10012d76:	je     0x10012d86
10012d78:	test   BYTE PTR [edi+0x3a],0x7
10012d7c:	jne    0x10012d86
10012d7e:	mov    DWORD PTR [esp+0x28],0x4
10012d86:	mov    ecx,DWORD PTR [esp+0x30]
10012d8a:	and    DWORD PTR [edi+0x2c],ecx
10012d8d:	mov    eax,DWORD PTR [esp+0x2c]
10012d91:	and    DWORD PTR [edi+0x28],eax
10012d94:	mov    esi,ecx
10012d96:	mov    cl,BYTE PTR [edi+0x8]
10012d99:	and    esi,DWORD PTR [esp+0x38]
10012d9d:	movzx  ebx,cl
10012da0:	sub    DWORD PTR [esp+0x14],ebx
10012da4:	mov    edx,eax
10012da6:	and    edx,ebp
10012da8:	mov    DWORD PTR [edi],edx
10012daa:	mov    eax,ebx
10012dac:	cdq    
10012dad:	add    DWORD PTR [esp+0x1c],eax
10012db1:	mov    eax,DWORD PTR [esp+0x24]
10012db5:	mov    DWORD PTR [edi+0x4],esi
10012db8:	adc    DWORD PTR [esp+0x20],edx
10012dbc:	mov    edx,DWORD PTR [esp+0x28]
10012dc0:	add    DWORD PTR [esp+0x18],ebx
10012dc4:	add    cl,al
10012dc6:	cmp    edx,0x3
10012dc9:	mov    BYTE PTR [edi+0x8],cl
10012dcc:	jne    0x10012eb9
10012dd2:	mov    ecx,DWORD PTR [esp+0xa4]
10012dd9:	mov    ecx,DWORD PTR [ecx+0x1c]
10012ddc:	not    ecx
10012dde:	test   cl,0x4
10012de1:	je     0x10012ec3
10012de7:	mov    esi,DWORD PTR [esp+0x10]
10012deb:	sub    esi,0x1
10012dee:	lea    ecx,[eax+0x1]
10012df1:	test   ecx,ecx
10012df3:	mov    DWORD PTR [esp+0x10],esi
10012df7:	jbe    0x10012ec3
10012dfd:	lea    eax,[eax+esi*1+0x1]
10012e01:	cmp    eax,DWORD PTR [esp+0xb0]
10012e08:	ja     0x10012fb1
10012e0e:	mov    ecx,DWORD PTR [esp+0x4c]
10012e12:	mov    ebx,DWORD PTR [esp+0x48]
10012e16:	add    ecx,0x1
10012e19:	cmp    ebx,ecx
10012e1b:	mov    DWORD PTR [esp+0x3c],ecx
10012e1f:	jae    0x10012ec3
10012e25:	mov    edx,DWORD PTR [esp+0xac]
10012e2c:	mov    eax,esi
10012e2e:	imul   esi,esi,0xa8
10012e34:	shl    eax,0x6
10012e37:	sub    ecx,ebx
10012e39:	add    eax,edx
10012e3b:	add    esi,edx
10012e3d:	add    DWORD PTR [esp+0x10],ecx
10012e41:	jmp    0x10012e54
10012e43:	jmp    0x10012e50
10012e45:	lea    esp,[esp+0x0]
10012e4c:	lea    esp,[esp+0x0]
10012e50:	mov    eax,DWORD PTR [esp+0x24]
10012e54:	cmp    DWORD PTR [esp+0xa8],0x0
10012e5c:	mov    edi,esi
10012e5e:	jne    0x10012e62
10012e60:	mov    edi,eax
10012e62:	push   0x40
10012e64:	add    eax,0x40
10012e67:	push   0x0
10012e69:	push   edi
10012e6a:	add    esi,0xa8
10012e70:	mov    DWORD PTR [esp+0x30],eax
10012e74:	call   0x10016530
10012e79:	mov    eax,DWORD PTR [esp+0x44]
10012e7d:	mov    edx,DWORD PTR [esp+0x38]
10012e81:	mov    WORD PTR [edi+0xa],0xffff
10012e87:	mov    cl,BYTE PTR [ebx]
10012e89:	mov    BYTE PTR [edi+0x30],cl
10012e8c:	mov    ecx,DWORD PTR [esp+0x3c]
10012e90:	and    ecx,eax
10012e92:	and    edx,ebp
10012e94:	add    esp,0xc
10012e97:	add    ebx,0x1
10012e9a:	add    ebp,0x1
10012e9d:	adc    eax,0x0
10012ea0:	cmp    ebx,DWORD PTR [esp+0x3c]
10012ea4:	mov    BYTE PTR [edi+0x8],0x1
10012ea8:	mov    DWORD PTR [edi],edx
10012eaa:	mov    DWORD PTR [edi+0x4],ecx
10012ead:	mov    DWORD PTR [esp+0x38],eax
10012eb1:	jb     0x10012e50
10012eb3:	mov    edx,DWORD PTR [esp+0x28]
10012eb7:	jmp    0x10012ec3
10012eb9:	cmp    edx,0x4
10012ebc:	jne    0x10012ec3
10012ebe:	sub    DWORD PTR [esp+0x10],0x1
10012ec3:	cmp    edx,0x1
10012ec6:	mov    eax,DWORD PTR [esp+0xb4]
10012ecd:	mov    ecx,DWORD PTR [esp+0x10]
10012ed1:	mov    DWORD PTR [eax],ecx
10012ed3:	mov    ecx,DWORD PTR [esp+0x1c]
10012ed7:	mov    eax,DWORD PTR [esp+0xa4]
10012ede:	mov    DWORD PTR [eax+0x8],ecx
10012ee1:	mov    ecx,DWORD PTR [esp+0x20]
10012ee5:	mov    DWORD PTR [eax+0xc],ecx
10012ee8:	jne    0x10012f87
10012eee:	mov    eax,DWORD PTR [eax+0x1c]
10012ef1:	test   eax,0x3f8
10012ef6:	je     0x10012f87
10012efc:	test   al,0x8
10012efe:	je     0x10012f0f
10012f00:	mov    dl,BYTE PTR [edi+0x3a]
10012f03:	and    dl,0x7
10012f06:	cmp    dl,0x1
10012f09:	je     0x10012b07
10012f0f:	test   al,0x10
10012f11:	je     0x10012f22
10012f13:	mov    cl,BYTE PTR [edi+0x3a]
10012f16:	and    cl,0x7
10012f19:	cmp    cl,0x2
10012f1c:	je     0x10012b07
10012f22:	test   al,0x20
10012f24:	je     0x10012f35
10012f26:	mov    dl,BYTE PTR [edi+0x3a]
10012f29:	and    dl,0x7
10012f2c:	cmp    dl,0x3
10012f2f:	je     0x10012b07
10012f35:	test   al,0x40
10012f37:	je     0x10012f48
10012f39:	mov    cl,BYTE PTR [edi+0x3a]
10012f3c:	and    cl,0x7
10012f3f:	cmp    cl,0x4
10012f42:	je     0x10012b07
10012f48:	test   al,al
10012f4a:	jns    0x10012f5b
10012f4c:	mov    dl,BYTE PTR [edi+0x3a]
10012f4f:	and    dl,0x7
10012f52:	cmp    dl,0x5
10012f55:	je     0x10012b07
10012f5b:	test   eax,0x100
10012f60:	je     0x10012f71
10012f62:	mov    cl,BYTE PTR [edi+0x3a]
10012f65:	and    cl,0x7
10012f68:	cmp    cl,0x6
10012f6b:	je     0x10012b07
10012f71:	test   eax,0x200
10012f76:	je     0x10012f87
10012f78:	mov    dl,BYTE PTR [edi+0x3a]
10012f7b:	and    dl,0x7
10012f7e:	cmp    dl,0x7
10012f81:	je     0x10012b07
10012f87:	mov    esi,DWORD PTR [esp+0x10]
10012f8b:	mov    ebx,DWORD PTR [esp+0x18]
10012f8f:	mov    edi,DWORD PTR [esp+0xa4]
10012f96:	cmp    DWORD PTR [esp+0x14],0x0
10012f9b:	jg     0x10012b20
10012fa1:	pop    edi
10012fa2:	pop    esi
10012fa3:	pop    ebp
10012fa4:	mov    eax,0x1
10012fa9:	pop    ebx
10012faa:	add    esp,0x90
10012fb0:	ret    
10012fb1:	pop    edi
10012fb2:	pop    esi
10012fb3:	pop    ebp
10012fb4:	mov    eax,0x2
10012fb9:	pop    ebx
10012fba:	add    esp,0x90
10012fc0:	ret    
10012fc1:	int3   
10012fc2:	int3   
10012fc3:	int3   
10012fc4:	int3   
10012fc5:	int3   
10012fc6:	int3   
10012fc7:	int3   
10012fc8:	int3   
10012fc9:	int3   
10012fca:	int3   
10012fcb:	int3   
10012fcc:	int3   
10012fcd:	int3   
10012fce:	int3   
10012fcf:	int3   
10012fd0:	lea    ecx,[eax-0x4]
10012fd3:	cmp    ecx,0x3
10012fd6:	ja     0x10012fdc
10012fd8:	add    eax,0x3c
10012fdb:	ret    
10012fdc:	add    eax,0x30
10012fdf:	ret    
10012fe0:	mov    cl,BYTE PTR [esp+0x4]
10012fe4:	mov    BYTE PTR [eax],cl
10012fe6:	mov    WORD PTR [eax+0x2],dx
10012fea:	ret    0x4
10012fed:	int3   
10012fee:	int3   
10012fef:	int3   
10012ff0:	mov    cl,BYTE PTR [esp+0x4]
10012ff4:	mov    dl,BYTE PTR [esp+0xc]
10012ff8:	mov    BYTE PTR [eax],cl
10012ffa:	mov    cx,WORD PTR [esp+0x8]
10012fff:	mov    BYTE PTR [eax+0x1],dl
10013002:	mov    WORD PTR [eax+0x2],cx
10013006:	ret    0xc
10013009:	int3   
1001300a:	int3   
1001300b:	int3   
1001300c:	int3   
1001300d:	int3   
1001300e:	int3   
1001300f:	int3   
10013010:	sub    DWORD PTR [eax+0x14],esi
10013013:	jns    0x10013018
10013015:	xor    eax,eax
10013017:	ret    
10013018:	lea    edx,[esi-0x1]
1001301b:	cmp    edx,0x7
1001301e:	ja     0x10013068
10013020:	jmp    DWORD PTR [edx*4+0x10013074]
10013027:	mov    edx,DWORD PTR [eax+0x10]
1001302a:	mov    dl,BYTE PTR [edx]
1001302c:	mov    BYTE PTR [ecx],dl
1001302e:	add    DWORD PTR [eax+0x10],esi
10013031:	mov    eax,0x1
10013036:	ret    
10013037:	mov    edx,DWORD PTR [eax+0x10]
1001303a:	mov    dx,WORD PTR [edx]
1001303d:	mov    WORD PTR [ecx],dx
10013040:	add    DWORD PTR [eax+0x10],esi
10013043:	mov    eax,0x1
10013048:	ret    
10013049:	mov    edx,DWORD PTR [eax+0x10]
1001304c:	mov    edx,DWORD PTR [edx]
1001304e:	mov    DWORD PTR [ecx],edx
10013050:	add    DWORD PTR [eax+0x10],esi
10013053:	mov    eax,0x1
10013058:	ret    
10013059:	mov    edx,DWORD PTR [eax+0x10]
1001305c:	push   edi
1001305d:	mov    edi,DWORD PTR [edx]
1001305f:	mov    DWORD PTR [ecx],edi
10013061:	mov    edx,DWORD PTR [edx+0x4]
10013064:	mov    DWORD PTR [ecx+0x4],edx
10013067:	pop    edi
10013068:	add    DWORD PTR [eax+0x10],esi
1001306b:	mov    eax,0x1
10013070:	ret    
10013071:	lea    ecx,[ecx+0x0]
10013074:	daa    
10013075:	xor    BYTE PTR [ecx],al
10013077:	adc    BYTE PTR [edi],dh
10013079:	xor    BYTE PTR [ecx],al
1001307b:	adc    BYTE PTR [eax+0x30],ch
1001307e:	add    DWORD PTR [eax],edx
10013080:	dec    ecx
10013081:	xor    BYTE PTR [ecx],al
10013083:	adc    BYTE PTR [eax+0x30],ch
10013086:	add    DWORD PTR [eax],edx
10013088:	push   0x68100130
1001308d:	xor    BYTE PTR [ecx],al
1001308f:	adc    BYTE PTR [ecx+0x30],bl
10013092:	add    DWORD PTR [eax],edx
10013094:	int3   
10013095:	int3   
10013096:	int3   
10013097:	int3   
10013098:	int3   
10013099:	int3   
1001309a:	int3   
1001309b:	int3   
1001309c:	int3   
1001309d:	int3   
1001309e:	int3   
1001309f:	int3   
100130a0:	sub    DWORD PTR [ecx+0x14],edi
100130a3:	jns    0x100130a8
100130a5:	xor    eax,eax
100130a7:	ret    
100130a8:	lea    eax,[edi-0x1]
100130ab:	cmp    eax,0x7
100130ae:	ja     0x10013102
100130b0:	jmp    DWORD PTR [eax*4+0x1001310c]
100130b7:	mov    eax,DWORD PTR [ecx+0x10]
100130ba:	movsx  eax,BYTE PTR [eax]
100130bd:	cdq    
100130be:	mov    DWORD PTR [esi],eax
100130c0:	mov    DWORD PTR [esi+0x4],edx
100130c3:	add    DWORD PTR [ecx+0x10],edi
100130c6:	mov    eax,0x1
100130cb:	ret    
100130cc:	mov    edx,DWORD PTR [ecx+0x10]
100130cf:	movsx  eax,WORD PTR [edx]
100130d2:	cdq    
100130d3:	mov    DWORD PTR [esi],eax
100130d5:	mov    DWORD PTR [esi+0x4],edx
100130d8:	add    DWORD PTR [ecx+0x10],edi
100130db:	mov    eax,0x1
100130e0:	ret    
100130e1:	mov    eax,DWORD PTR [ecx+0x10]
100130e4:	mov    eax,DWORD PTR [eax]
100130e6:	cdq    
100130e7:	mov    DWORD PTR [esi],eax
100130e9:	mov    DWORD PTR [esi+0x4],edx
100130ec:	add    DWORD PTR [ecx+0x10],edi
100130ef:	mov    eax,0x1
100130f4:	ret    
100130f5:	mov    eax,DWORD PTR [ecx+0x10]
100130f8:	mov    edx,DWORD PTR [eax]
100130fa:	mov    DWORD PTR [esi],edx
100130fc:	mov    eax,DWORD PTR [eax+0x4]
100130ff:	mov    DWORD PTR [esi+0x4],eax
10013102:	add    DWORD PTR [ecx+0x10],edi
10013105:	mov    eax,0x1
1001310a:	ret    
1001310b:	nop
1001310c:	mov    bh,0x30
1001310e:	add    DWORD PTR [eax],edx
10013110:	int3   
10013111:	xor    BYTE PTR [ecx],al
10013113:	adc    BYTE PTR [edx],al
10013115:	xor    DWORD PTR [ecx],eax
10013117:	adc    cl,ah
10013119:	xor    BYTE PTR [ecx],al
1001311b:	adc    BYTE PTR [edx],al
1001311d:	xor    DWORD PTR [ecx],eax
1001311f:	adc    BYTE PTR [edx],al
10013121:	xor    DWORD PTR [ecx],eax
10013123:	adc    BYTE PTR [edx],al
10013125:	xor    DWORD PTR [ecx],eax
10013127:	adc    ch,dh
10013129:	xor    BYTE PTR [ecx],al
1001312b:	adc    ah,cl
1001312d:	int3   
1001312e:	int3   
1001312f:	int3   
10013130:	mov    eax,DWORD PTR [edi+0x28]
10013133:	push   ebx
10013134:	push   ebp
10013135:	push   esi
10013136:	mov    esi,edx
10013138:	mov    ebx,edx
1001313a:	shr    esi,0x6
1001313d:	shr    ebx,0x3
10013140:	and    esi,0x3
10013143:	and    ebx,0x7
10013146:	and    edx,0x7
10013149:	test   al,0x2
1001314b:	je     0x10013157
1001314d:	or     DWORD PTR [edi+0x4],0x2000000
10013154:	add    ebx,0x8
10013157:	cmp    ebx,0x4
1001315a:	jne    0x1001316f
1001315c:	mov    ecx,DWORD PTR [esp+0x10]
10013160:	mov    ebp,DWORD PTR [esp+0x14]
10013164:	mov    BYTE PTR [ecx+ebp*4+0x12],0x6
10013169:	lea    ebp,[ecx+ebp*4+0x13]
1001316d:	jmp    0x10013183
1001316f:	mov    ebp,DWORD PTR [esp+0x10]
10013173:	mov    ecx,DWORD PTR [esp+0x14]
10013177:	mov    BYTE PTR [ebp+ecx*4+0x12],0x7
1001317c:	mov    ecx,DWORD PTR [esp+0x10]
10013180:	add    ebp,0xd
10013183:	cmp    edx,0x5
10013186:	je     0x100131ca
10013188:	test   al,0x1
1001318a:	je     0x10013193
1001318c:	or     DWORD PTR [edi+0x4],0x2000000
10013193:	and    al,0x1
10013195:	add    al,al
10013197:	add    al,al
10013199:	add    al,al
1001319b:	cmp    DWORD PTR [esp+0x18],0x2
100131a0:	sete   cl
100131a3:	sub    cl,0x1
100131a6:	and    ecx,0x10
100131a9:	add    al,cl
100131ab:	mov    ecx,DWORD PTR [esp+0x10]
100131af:	add    al,dl
100131b1:	cmp    ebx,0x4
100131b4:	mov    BYTE PTR [ebp+0x0],al
100131b7:	je     0x1001322d
100131b9:	cmp    DWORD PTR [esp+0x18],0x2
100131be:	jne    0x10013205
100131c0:	mov    eax,DWORD PTR [esp+0x14]
100131c4:	mov    BYTE PTR [ecx+eax*4+0x13],bl
100131c8:	jmp    0x10013210
100131ca:	cmp    DWORD PTR [esp+0x1c],0x0
100131cf:	je     0x100131f3
100131d1:	test   al,0x1
100131d3:	je     0x100131dc
100131d5:	or     DWORD PTR [edi+0x4],0x2000000
100131dc:	and    al,0x1
100131de:	add    al,al
100131e0:	add    al,al
100131e2:	add    al,al
100131e4:	cmp    DWORD PTR [esp+0x18],0x2
100131e9:	jne    0x100131ef
100131eb:	add    al,0x5
100131ed:	jmp    0x100131b1
100131ef:	add    al,0x15
100131f1:	jmp    0x100131b1
100131f3:	cmp    ebx,0x4
100131f6:	jne    0x100131b9
100131f8:	mov    edx,DWORD PTR [esp+0x14]
100131fc:	pop    esi
100131fd:	pop    ebp
100131fe:	mov    BYTE PTR [ecx+edx*4+0x12],0x5
10013203:	pop    ebx
10013204:	ret    
10013205:	mov    edx,DWORD PTR [esp+0x14]
10013209:	add    bl,0x10
1001320c:	mov    BYTE PTR [ecx+edx*4+0x13],bl
10013210:	test   esi,esi
10013212:	je     0x10013228
10013214:	mov    ecx,esi
10013216:	mov    eax,0x1
1001321b:	shl    eax,cl
1001321d:	mov    ecx,DWORD PTR [esp+0x10]
10013221:	pop    esi
10013222:	pop    ebp
10013223:	mov    BYTE PTR [ecx+0xe],al
10013226:	pop    ebx
10013227:	ret    
10013228:	xor    eax,eax
1001322a:	mov    BYTE PTR [ecx+0xe],al
1001322d:	pop    esi
1001322e:	pop    ebp
1001322f:	pop    ebx
10013230:	ret    
10013231:	int3   
10013232:	int3   
10013233:	int3   
10013234:	int3   
10013235:	int3   
10013236:	int3   
10013237:	int3   
10013238:	int3   
10013239:	int3   
1001323a:	int3   
1001323b:	int3   
1001323c:	int3   
1001323d:	int3   
1001323e:	int3   
1001323f:	int3   
10013240:	mov    edx,DWORD PTR [esp+0x20]
10013244:	push   ebx
10013245:	push   ebp
10013246:	mov    ebp,DWORD PTR [esp+0x1c]
1001324a:	push   esi
1001324b:	xor    esi,esi
1001324d:	cmp    edx,0x3
10013250:	push   edi
10013251:	mov    edi,DWORD PTR [esp+0x1c]
10013255:	mov    ebx,ecx
10013257:	mov    ecx,DWORD PTR [ebp+0x28]
1001325a:	mov    DWORD PTR [esp+0x24],esi
1001325e:	jne    0x10013479
10013264:	mov    edx,DWORD PTR [esp+0x18]
10013268:	mov    eax,DWORD PTR [esp+0x20]
1001326c:	mov    BYTE PTR [edx+eax*4+0x12],0x1
10013271:	lea    eax,[edx+eax*4+0x14]
10013275:	movzx  edx,WORD PTR [eax]
10013278:	lea    esi,[edi-0xf]
1001327b:	cmp    esi,0x4c
1001327e:	mov    DWORD PTR [esp+0x30],eax
10013282:	ja     0x100134cb
10013288:	movzx  eax,BYTE PTR [esi+0x10013760]
1001328f:	jmp    DWORD PTR [eax*4+0x1001372c]
10013296:	mov    eax,DWORD PTR [esp+0x28]
1001329a:	sub    eax,0x0
1001329d:	je     0x10013310
1001329f:	sub    eax,0x1
100132a2:	je     0x100132d1
100132a4:	sub    eax,0x1
100132a7:	jne    0x100132f3
100132a9:	cmp    edi,0x1c
100132ac:	mov    eax,0x2000000
100132b1:	jne    0x100132b6
100132b3:	or     DWORD PTR [ebp+0x4],eax
100132b6:	test   DWORD PTR [esp+0x34],eax
100132ba:	je     0x100132bf
100132bc:	or     DWORD PTR [ebp+0x4],eax
100132bf:	test   cl,0x1
100132c2:	je     0x100132ca
100132c4:	or     DWORD PTR [ebp+0x4],eax
100132c7:	add    ebx,0x8
100132ca:	mov    edx,0x40
100132cf:	jmp    0x100132f3
100132d1:	or     DWORD PTR [ebp+0x4],0x2000
100132d8:	test   cl,0x1
100132db:	mov    eax,DWORD PTR [ebp+0x4]
100132de:	je     0x100132eb
100132e0:	or     eax,0x2000000
100132e5:	mov    DWORD PTR [ebp+0x4],eax
100132e8:	add    ebx,0x8
100132eb:	mov    edx,0x20
100132f0:	add    ebx,0x10
100132f3:	mov    eax,DWORD PTR [esp+0x30]
100132f7:	mov    ecx,DWORD PTR [esp+0x18]
100132fb:	pop    edi
100132fc:	mov    WORD PTR [eax],dx
100132ff:	mov    edx,DWORD PTR [esp+0x1c]
10013303:	pop    esi
10013304:	pop    ebp
10013305:	mov    BYTE PTR [ecx+edx*4+0x13],bl
10013309:	mov    eax,0x1
1001330e:	pop    ebx
1001330f:	ret    
10013310:	or     DWORD PTR [ebp+0x4],0x2000
10013317:	test   cl,0x1
1001331a:	mov    eax,DWORD PTR [ebp+0x4]
1001331d:	je     0x1001332a
1001331f:	or     eax,0x2000000
10013324:	mov    DWORD PTR [ebp+0x4],eax
10013327:	add    ebx,0x8
1001332a:	mov    edx,0x10
1001332f:	add    ebx,0x20
10013332:	jmp    0x100132f3
10013334:	test   cl,0x1
10013337:	mov    eax,0x2000000
1001333c:	je     0x10013344
1001333e:	or     DWORD PTR [ebp+0x4],eax
10013341:	add    ebx,0x8
10013344:	mov    edx,DWORD PTR [esp+0x14]
10013348:	cmp    DWORD PTR [edx+0x18],0x2
1001334c:	jne    0x10013364
1001334e:	mov    edx,DWORD PTR [esp+0x34]
10013352:	and    edx,0x3000000
10013358:	cmp    edx,0x1000000
1001335e:	je     0x1001346f
10013364:	test   cl,0x8
10013367:	je     0x100132eb
10013369:	or     DWORD PTR [ebp+0x4],eax
1001336c:	mov    edx,0x40
10013371:	jmp    0x100132f3
10013373:	test   cl,0x1
10013376:	je     0x10013382
10013378:	or     DWORD PTR [ebp+0x4],0x2000000
1001337f:	add    ebx,0x8
10013382:	test   DWORD PTR [ebp+0x0],0x2000
10013389:	je     0x100132eb
1001338f:	or     DWORD PTR [ebp+0x4],0x2000
10013396:	mov    edx,0x10
1001339b:	add    ebx,0x20
1001339e:	jmp    0x100132f3
100133a3:	test   cl,0x1
100133a6:	je     0x100133b2
100133a8:	or     DWORD PTR [ebp+0x4],0x2000000
100133af:	add    ebx,0x8
100133b2:	add    ebx,0x20
100133b5:	jmp    0x100132f3
100133ba:	cmp    DWORD PTR [ebp+0x18],0x1
100133be:	jne    0x100133d9
100133c0:	or     DWORD PTR [ebp+0x4],0x2000000
100133c7:	and    ecx,0x1
100133ca:	lea    eax,[ebx+ecx*8]
100133cd:	call   0x10012fd0
100133d2:	mov    ebx,eax
100133d4:	jmp    0x100132f3
100133d9:	add    ebx,0x30
100133dc:	jmp    0x100132f3
100133e1:	mov    edx,0x40
100133e6:	add    ebx,0x53
100133e9:	jmp    0x100132f3
100133ee:	test   cl,0x1
100133f1:	je     0x100133fd
100133f3:	or     DWORD PTR [ebp+0x4],0x2000000
100133fa:	add    ebx,0x8
100133fd:	mov    edx,0x80
10013402:	add    ebx,0x5b
10013405:	jmp    0x100132f3
1001340a:	test   cl,0x1
1001340d:	je     0x100132eb
10013413:	or     DWORD PTR [ebp+0x4],0x2000000
1001341a:	jmp    0x100132e8
1001341f:	test   cl,0x1
10013422:	je     0x10013427
10013424:	add    ebx,0x8
10013427:	add    ebx,0x6b
1001342a:	jmp    0x100132f3
1001342f:	test   cl,0x1
10013432:	je     0x10013437
10013434:	add    ebx,0x8
10013437:	test   cl,0x10
1001343a:	je     0x100133fd
1001343c:	mov    edx,0x100
10013441:	add    ebx,0x6b
10013444:	jmp    0x100132f3
10013449:	test   cl,0x1
1001344c:	je     0x100133fd
1001344e:	add    ebx,0x8
10013451:	mov    edx,0x80
10013456:	add    ebx,0x5b
10013459:	jmp    0x100132f3
1001345e:	test   cl,0x1
10013461:	je     0x10013466
10013463:	add    ebx,0x8
10013466:	test   cl,0x8
10013469:	je     0x100132eb
1001346f:	mov    edx,0x40
10013474:	jmp    0x100132f3
10013479:	or     DWORD PTR [ebp+0x4],0x4000
10013480:	test   eax,eax
10013482:	je     0x10013490
10013484:	test   BYTE PTR [ebp+0x0],0x10
10013488:	je     0x10013490
1001348a:	mov    DWORD PTR [eax],0x1
10013490:	cmp    DWORD PTR [esp+0x2c],esi
10013494:	jne    0x100135a5
1001349a:	test   edx,edx
1001349c:	jne    0x100134d2
1001349e:	cmp    ebx,0x6
100134a1:	jne    0x100134d2
100134a3:	mov    eax,DWORD PTR [esp+0x18]
100134a7:	mov    ecx,DWORD PTR [esp+0x20]
100134ab:	mov    BYTE PTR [eax+ecx*4+0x12],0x5
100134b0:	mov    ecx,DWORD PTR [esp+0x14]
100134b4:	lea    esi,[eax+0x28]
100134b7:	lea    edi,[edx+0x2]
100134ba:	mov    BYTE PTR [eax+0xf],0x10
100134be:	call   0x100130a0
100134c3:	test   eax,eax
100134c5:	jne    0x1001356e
100134cb:	pop    edi
100134cc:	pop    esi
100134cd:	pop    ebp
100134ce:	xor    eax,eax
100134d0:	pop    ebx
100134d1:	ret    
100134d2:	cmp    ebx,0x4
100134d5:	jae    0x100134f9
100134d7:	mov    esi,DWORD PTR [esp+0x18]
100134db:	mov    edi,DWORD PTR [esp+0x20]
100134df:	mov    BYTE PTR [esi+edi*4+0x12],0x7
100134e4:	mov    al,BYTE PTR [ebx+0x1005b200]
100134ea:	mov    BYTE PTR [esi+0xd],al
100134ed:	mov    cl,BYTE PTR [ebx+0x1005b208]
100134f3:	mov    BYTE PTR [esi+edi*4+0x13],cl
100134f7:	jmp    0x10013510
100134f9:	mov    edi,DWORD PTR [esp+0x18]
100134fd:	mov    esi,DWORD PTR [esp+0x20]
10013501:	mov    BYTE PTR [edi+esi*4+0x12],0x6
10013506:	mov    al,BYTE PTR [ebx+0x1005b200]
1001350c:	mov    BYTE PTR [edi+esi*4+0x13],al
10013510:	cmp    edx,0x1
10013513:	jne    0x10013534
10013515:	mov    eax,DWORD PTR [esp+0x18]
10013519:	mov    ecx,DWORD PTR [esp+0x14]
1001351d:	lea    esi,[eax+0x28]
10013520:	mov    edi,edx
10013522:	mov    BYTE PTR [eax+0xf],0x8
10013526:	call   0x100130a0
1001352b:	test   eax,eax
1001352d:	jne    0x10013557
1001352f:	pop    edi
10013530:	pop    esi
10013531:	pop    ebp
10013532:	pop    ebx
10013533:	ret    
10013534:	cmp    edx,0x2
10013537:	jne    0x1001355b
10013539:	mov    eax,DWORD PTR [esp+0x18]
1001353d:	mov    ecx,DWORD PTR [esp+0x14]
10013541:	lea    esi,[eax+0x28]
10013544:	mov    edi,edx
10013546:	mov    BYTE PTR [eax+0xf],0x10
1001354a:	call   0x100130a0
1001354f:	test   eax,eax
10013551:	je     0x100134cb
10013557:	mov    edx,DWORD PTR [esp+0x30]
1001355b:	cmp    ebx,0x2
1001355e:	je     0x10013593
10013560:	cmp    ebx,0x3
10013563:	je     0x10013593
10013565:	cmp    ebx,0x6
10013568:	jne    0x1001356e
1001356a:	test   edx,edx
1001356c:	jne    0x10013593
1001356e:	mov    ecx,DWORD PTR [esp+0x18]
10013572:	mov    edx,DWORD PTR [esp+0x14]
10013576:	mov    eax,DWORD PTR [edx+0x18]
10013579:	push   ecx
1001357a:	push   eax
1001357b:	push   ebp
1001357c:	push   0x200
10013581:	call   0x10014dc0
10013586:	add    esp,0x10
10013589:	pop    edi
1001358a:	pop    esi
1001358b:	pop    ebp
1001358c:	mov    eax,0x1
10013591:	pop    ebx
10013592:	ret    
10013593:	mov    ecx,DWORD PTR [esp+0x18]
10013597:	mov    edx,DWORD PTR [esp+0x14]
1001359b:	mov    eax,DWORD PTR [edx+0x18]
1001359e:	push   ecx
1001359f:	push   eax
100135a0:	jmp    0x10013712
100135a5:	test   edx,edx
100135a7:	jne    0x100135fa
100135a9:	cmp    ebx,0x5
100135ac:	jne    0x100135fa
100135ae:	mov    ebx,DWORD PTR [esp+0x18]
100135b2:	mov    ecx,DWORD PTR [esp+0x14]
100135b6:	lea    esi,[ebx+0x28]
100135b9:	lea    edi,[edx+0x4]
100135bc:	mov    BYTE PTR [ebx+0xf],0x20
100135c0:	call   0x100130a0
100135c5:	test   eax,eax
100135c7:	je     0x100134cb
100135cd:	cmp    DWORD PTR [ecx+0x18],0x2
100135d1:	jne    0x100135ec
100135d3:	mov    eax,DWORD PTR [esp+0x20]
100135d7:	mov    BYTE PTR [ebx+eax*4+0x12],0x6
100135dc:	mov    BYTE PTR [ebx+eax*4+0x13],0x4a
100135e1:	or     WORD PTR [ebx+0xa],0x80
100135e7:	jmp    0x100136c3
100135ec:	mov    ecx,DWORD PTR [esp+0x20]
100135f0:	mov    BYTE PTR [ebx+ecx*4+0x12],0x5
100135f5:	jmp    0x100136c3
100135fa:	cmp    ebx,0x4
100135fd:	jne    0x10013641
100135ff:	mov    eax,DWORD PTR [esp+0x14]
10013603:	lea    esi,[ebx-0x3]
10013606:	lea    ecx,[esp+0x24]
1001360a:	call   0x10013010
1001360f:	test   eax,eax
10013611:	je     0x100134cb
10013617:	mov    edx,DWORD PTR [esp+0x30]
1001361b:	mov    eax,DWORD PTR [esp+0x2c]
1001361f:	mov    ecx,DWORD PTR [esp+0x20]
10013623:	mov    esi,DWORD PTR [esp+0x24]
10013627:	push   edx
10013628:	mov    edx,DWORD PTR [esp+0x1c]
1001362c:	push   eax
1001362d:	push   ecx
1001362e:	push   edx
1001362f:	mov    edx,esi
10013631:	mov    edi,ebp
10013633:	call   0x10013130
10013638:	mov    edx,DWORD PTR [esp+0x40]
1001363c:	add    esp,0x10
1001363f:	jmp    0x1001366b
10013641:	test   cl,0x1
10013644:	mov    edi,DWORD PTR [esp+0x18]
10013648:	mov    eax,DWORD PTR [esp+0x20]
1001364c:	mov    BYTE PTR [edi+eax*4+0x12],0x6
10013651:	je     0x1001365d
10013653:	or     DWORD PTR [ebp+0x4],0x2000000
1001365a:	add    ebx,0x8
1001365d:	cmp    DWORD PTR [esp+0x2c],0x2
10013662:	je     0x10013667
10013664:	add    bl,0x10
10013667:	mov    BYTE PTR [edi+eax*4+0x13],bl
1001366b:	cmp    edx,0x1
1001366e:	jne    0x1001368f
10013670:	mov    eax,DWORD PTR [esp+0x18]
10013674:	mov    ecx,DWORD PTR [esp+0x14]
10013678:	lea    esi,[eax+0x28]
1001367b:	mov    edi,edx
1001367d:	mov    BYTE PTR [eax+0xf],0x8
10013681:	call   0x100130a0
10013686:	test   eax,eax
10013688:	jne    0x100136bf
1001368a:	pop    edi
1001368b:	pop    esi
1001368c:	pop    ebp
1001368d:	pop    ebx
1001368e:	ret    
1001368f:	cmp    edx,0x2
10013692:	je     0x1001369d
10013694:	mov    eax,esi
10013696:	and    eax,0x7
10013699:	cmp    al,0x5
1001369b:	jne    0x100136bf
1001369d:	mov    ebx,DWORD PTR [esp+0x18]
100136a1:	mov    ecx,DWORD PTR [esp+0x14]
100136a5:	lea    esi,[ebx+0x28]
100136a8:	mov    edi,0x4
100136ad:	mov    BYTE PTR [ebx+0xf],0x20
100136b1:	call   0x100130a0
100136b6:	test   eax,eax
100136b8:	jne    0x100136c3
100136ba:	pop    edi
100136bb:	pop    esi
100136bc:	pop    ebp
100136bd:	pop    ebx
100136be:	ret    
100136bf:	mov    ebx,DWORD PTR [esp+0x18]
100136c3:	mov    al,BYTE PTR [ebx+0xd]
100136c6:	cmp    al,0xff
100136c8:	mov    ecx,DWORD PTR [esp+0x20]
100136cc:	movzx  ecx,BYTE PTR [ebx+ecx*4+0x13]
100136d1:	je     0x100136d8
100136d3:	movzx  ecx,al
100136d6:	jmp    0x100136de
100136d8:	cmp    BYTE PTR [ebx+0xe],0x2
100136dc:	jae    0x100136e8
100136de:	cmp    ecx,0x15
100136e1:	je     0x10013709
100136e3:	cmp    ecx,0x14
100136e6:	je     0x10013709
100136e8:	mov    edx,DWORD PTR [esp+0x14]
100136ec:	mov    eax,DWORD PTR [edx+0x18]
100136ef:	push   ebx
100136f0:	push   eax
100136f1:	push   ebp
100136f2:	push   0x200
100136f7:	call   0x10014dc0
100136fc:	add    esp,0x10
100136ff:	pop    edi
10013700:	pop    esi
10013701:	pop    ebp
10013702:	mov    eax,0x1
10013707:	pop    ebx
10013708:	ret    
10013709:	mov    ecx,DWORD PTR [esp+0x14]
1001370d:	mov    edx,DWORD PTR [ecx+0x18]
10013710:	push   ebx
10013711:	push   edx
10013712:	push   ebp
10013713:	push   0x100
10013718:	call   0x10014dc0
1001371d:	add    esp,0x10
10013720:	pop    edi
10013721:	pop    esi
10013722:	pop    ebp
10013723:	mov    eax,0x1
10013728:	pop    ebx
10013729:	ret    
1001372a:	mov    edi,edi
1001372c:	mov    edx,0xa3100133
10013731:	xor    eax,DWORD PTR [ecx]
10013733:	adc    BYTE PTR [esi+0x34100132],dl
10013739:	xor    eax,DWORD PTR [ecx]
1001373b:	adc    BYTE PTR [ebx+0x33],dh
1001373e:	add    DWORD PTR [eax],edx
10013740:	or     dh,BYTE PTR [ecx+eax*1]
10013743:	adc    cl,ah
10013745:	xor    eax,DWORD PTR [ecx]
10013747:	adc    dh,ch
10013749:	xor    eax,DWORD PTR [ecx]
1001374b:	adc    BYTE PTR [esi+0x34],bl
1001374e:	add    DWORD PTR [eax],edx
10013750:	dec    ecx
10013751:	xor    al,0x1
10013753:	adc    BYTE PTR [edi],bl
10013755:	xor    al,0x1
10013757:	adc    BYTE PTR [edi],ch
10013759:	xor    al,0x1
1001375b:	adc    bl,cl
1001375d:	xor    al,0x1
1001375f:	adc    BYTE PTR [eax],al
10013761:	add    DWORD PTR [edx],eax
10013763:	add    eax,DWORD PTR [esp+ecx*1]
10013766:	or     al,0xc
10013768:	or     al,0x5
1001376a:	add    eax,0xc020303
1001376f:	or     al,0xc
10013771:	or     al,0xc
10013773:	or     al,0xc
10013775:	or     al,0xc
10013777:	or     al,0xc
10013779:	or     al,0xc
1001377b:	or     al,0xc
1001377d:	or     al,0xc
1001377f:	or     al,0xc
10013781:	or     al,0xc
10013783:	or     al,0xc
10013785:	or     al,0xc
10013787:	or     al,0xc
10013789:	or     al,0xc
1001378b:	or     al,0xc
1001378d:	or     al,0xc
1001378f:	or     al,0xc
10013791:	or     al,0xc
10013793:	push   es
10013794:	push   es
10013795:	or     al,0xc
10013797:	pop    es
10013798:	pop    es
10013799:	pop    es
1001379a:	pop    es
1001379b:	or     al,0x5
1001379d:	or     BYTE PTR [eax],cl
1001379f:	or     al,0x8
100137a1:	or     DWORD PTR [esp+ecx*1],ecx
100137a4:	or     al,0xc
100137a6:	or     al,0xa
100137a8:	or     al,0xc
100137aa:	or     ecx,DWORD PTR [ebx]
100137ac:	or     esp,ecx
100137ae:	int3   
100137af:	int3   
100137b0:	sub    esp,0xc
100137b3:	mov    ecx,DWORD PTR [esp+0x18]
100137b7:	mov    edx,DWORD PTR [ecx+0x8]
100137ba:	mov    ecx,DWORD PTR [esp+0x14]
100137be:	push   ebx
100137bf:	push   ebp
100137c0:	mov    ebp,DWORD PTR [esp+0x30]
100137c4:	mov    eax,DWORD PTR [ebp+0x24]
100137c7:	push   esi
100137c8:	mov    esi,DWORD PTR [esp+0x30]
100137cc:	mov    DWORD PTR [esp+0x34],edx
100137d0:	mov    edx,DWORD PTR [esp+0x2c]
100137d4:	lea    ebx,[ecx+edx*4+0x12]
100137d8:	push   edi
100137d9:	mov    edi,esi
100137db:	mov    edx,esi
100137dd:	and    esi,0x7
100137e0:	mov    DWORD PTR [esp+0x34],esi
100137e4:	mov    esi,DWORD PTR [esp+0x2c]
100137e8:	shr    edi,0x6
100137eb:	shr    edx,0x3
100137ee:	mov    DWORD PTR [esp+0x18],eax
100137f2:	mov    eax,DWORD PTR [ebp+0x28]
100137f5:	and    edx,0x7
100137f8:	add    esi,0xffffffec
100137fb:	xor    ecx,ecx
100137fd:	and    edi,0x3
10013800:	cmp    esi,0x48
10013803:	mov    DWORD PTR [esp+0x14],eax
10013807:	mov    DWORD PTR [esp+0x10],edx
1001380b:	ja     0x1001396c
10013811:	movzx  esi,BYTE PTR [esi+0x10014680]
10013818:	jmp    DWORD PTR [esi*4+0x1001464c]
1001381f:	mov    eax,DWORD PTR [esp+0x44]
10013823:	test   eax,eax
10013825:	je     0x10013833
10013827:	test   BYTE PTR [ebp+0x0],0x10
1001382b:	je     0x10013833
1001382d:	mov    DWORD PTR [eax],0x1
10013833:	cmp    DWORD PTR [esp+0x3c],0x2
10013838:	jne    0x10013859
1001383a:	or     DWORD PTR [ebp+0x4],0x2000000
10013841:	mov    ecx,0x6
10013846:	jmp    0x100138e5
1001384b:	cmp    DWORD PTR [esp+0x3c],0x2
10013850:	jne    0x1001389b
10013852:	or     DWORD PTR [ebp+0x4],0x2000000
10013859:	mov    ecx,0x4
1001385e:	jmp    0x100138e5
10013863:	mov    eax,DWORD PTR [esp+0x3c]
10013867:	sub    eax,0x0
1001386a:	je     0x100138a2
1001386c:	sub    eax,0x1
1001386f:	je     0x10013894
10013871:	sub    eax,0x1
10013874:	jne    0x100138e5
10013876:	mov    eax,DWORD PTR [esp+0x38]
1001387a:	and    eax,0x3000000
1001387f:	cmp    eax,0x3000000
10013884:	jne    0x10013859
10013886:	or     DWORD PTR [ebp+0x4],0x2000000
1001388d:	mov    ecx,0x4
10013892:	jmp    0x100138e5
10013894:	or     DWORD PTR [ebp+0x4],0x2000
1001389b:	mov    ecx,0x3
100138a0:	jmp    0x100138e5
100138a2:	or     DWORD PTR [ebp+0x4],0x2000
100138a9:	mov    ecx,0x2
100138ae:	jmp    0x100138e5
100138b0:	mov    edx,DWORD PTR [esp+0x20]
100138b4:	xor    ecx,ecx
100138b6:	cmp    DWORD PTR [edx+0x18],0x2
100138ba:	sete   cl
100138bd:	add    ecx,0x3
100138c0:	jmp    0x100138e5
100138c2:	cmp    edi,0x3
100138c5:	jne    0x10013902
100138c7:	lea    eax,[edi-0x2]
100138ca:	pop    edi
100138cb:	pop    esi
100138cc:	pop    ebp
100138cd:	pop    ebx
100138ce:	add    esp,0xc
100138d1:	ret    
100138d2:	mov    ecx,0x5
100138d7:	jmp    0x100138e5
100138d9:	movzx  ecx,al
100138dc:	and    ecx,0x10
100138df:	or     ecx,0x60
100138e2:	shr    ecx,0x4
100138e5:	cmp    edi,0x3
100138e8:	jne    0x10013902
100138ea:	mov    eax,DWORD PTR [esp+0x44]
100138ee:	test   eax,eax
100138f0:	je     0x100138f8
100138f2:	mov    DWORD PTR [eax],0x0
100138f8:	xor    eax,eax
100138fa:	pop    edi
100138fb:	pop    esi
100138fc:	pop    ebp
100138fd:	pop    ebx
100138fe:	add    esp,0xc
10013901:	ret    
10013902:	mov    ax,WORD PTR [ecx*2+0x1005b1f0]
1001390a:	mov    ecx,DWORD PTR [esp+0x38]
1001390e:	mov    edx,DWORD PTR [esp+0x40]
10013912:	mov    esi,DWORD PTR [esp+0x24]
10013916:	push   ecx
10013917:	mov    ecx,DWORD PTR [esp+0x34]
1001391b:	push   edi
1001391c:	push   edx
1001391d:	mov    edx,DWORD PTR [esp+0x38]
10013921:	mov    WORD PTR [ebx+0x2],ax
10013925:	mov    eax,DWORD PTR [esp+0x48]
10013929:	push   eax
1001392a:	mov    eax,DWORD PTR [esp+0x30]
1001392e:	push   ebp
1001392f:	push   ecx
10013930:	mov    ecx,DWORD PTR [esp+0x4c]
10013934:	push   edx
10013935:	push   esi
10013936:	push   eax
10013937:	mov    eax,DWORD PTR [esp+0x68]
1001393b:	call   0x10013240
10013940:	mov    cl,BYTE PTR [ebx]
10013942:	add    esp,0x24
10013945:	cmp    cl,0x1
10013948:	je     0x10013954
1001394a:	cmp    cl,0x6
1001394d:	je     0x10013954
1001394f:	cmp    cl,0x7
10013952:	jne    0x100138fa
10013954:	movzx  ecx,BYTE PTR [ebx+0x1]
10013958:	mov    dx,WORD PTR [ecx*2+0x1005b0d8]
10013960:	or     WORD PTR [esi+0x3c],dx
10013964:	pop    edi
10013965:	pop    esi
10013966:	pop    ebp
10013967:	pop    ebx
10013968:	add    esp,0xc
1001396b:	ret    
1001396c:	mov    esi,DWORD PTR [esp+0x2c]
10013970:	lea    ecx,[esi-0xf]
10013973:	cmp    ecx,0x4c
10013976:	ja     0x10013ae6
1001397c:	movzx  ecx,BYTE PTR [ecx+0x1001470c]
10013983:	mov    esi,0x2000
10013988:	jmp    DWORD PTR [ecx*4+0x100146cc]
1001398f:	or     DWORD PTR [ebp+0x4],esi
10013992:	mov    ecx,DWORD PTR [esp+0x3c]
10013996:	cmp    ecx,0x1
10013999:	mov    eax,DWORD PTR [ebp+0x4]
1001399c:	jne    0x100139b0
1001399e:	mov    eax,0x3
100139a3:	mov    ax,WORD PTR [eax*2+0x1005b1f0]
100139ab:	jmp    0x1001390a
100139b0:	cmp    ecx,0x2
100139b3:	jne    0x100139d9
100139b5:	test   DWORD PTR [esp+0x38],0x1000000
100139bd:	jne    0x100139c7
100139bf:	or     eax,0x2000000
100139c4:	mov    DWORD PTR [ebp+0x4],eax
100139c7:	mov    eax,0x4
100139cc:	mov    ax,WORD PTR [eax*2+0x1005b1f0]
100139d4:	jmp    0x1001390a
100139d9:	cmp    DWORD PTR [esp+0x2c],0x10
100139de:	je     0x100139e3
100139e0:	or     DWORD PTR [ebp+0x4],esi
100139e3:	mov    eax,0x2
100139e8:	mov    ax,WORD PTR [eax*2+0x1005b1f0]
100139f0:	jmp    0x1001390a
100139f5:	cmp    DWORD PTR [esp+0x3c],0x2
100139fa:	jne    0x1001399e
100139fc:	mov    edx,DWORD PTR [esp+0x38]
10013a00:	and    edx,0x3000000
10013a06:	cmp    edx,0x3000000
10013a0c:	mov    eax,0x4
10013a11:	jne    0x10013ad5
10013a17:	or     DWORD PTR [ebp+0x4],0x2000000
10013a1e:	mov    ax,WORD PTR [eax*2+0x1005b1f0]
10013a26:	jmp    0x1001390a
10013a2b:	test   DWORD PTR [ebp+0x0],esi
10013a2e:	je     0x1001399e
10013a34:	or     DWORD PTR [ebp+0x4],esi
10013a37:	mov    eax,0x2
10013a3c:	mov    ax,WORD PTR [eax*2+0x1005b1f0]
10013a44:	jmp    0x1001390a
10013a49:	and    al,0x8
10013a4b:	neg    al
10013a4d:	sbb    eax,eax
10013a4f:	neg    eax
10013a51:	add    eax,0x3
10013a54:	mov    ax,WORD PTR [eax*2+0x1005b1f0]
10013a5c:	jmp    0x1001390a
10013a61:	and    al,0x10
10013a63:	neg    al
10013a65:	sbb    eax,eax
10013a67:	and    eax,0x3
10013a6a:	add    eax,0x4
10013a6d:	mov    ax,WORD PTR [eax*2+0x1005b1f0]
10013a75:	jmp    0x1001390a
10013a7a:	movzx  eax,al
10013a7d:	and    eax,0x10
10013a80:	or     eax,0x60
10013a83:	shr    eax,0x4
10013a86:	mov    ax,WORD PTR [eax*2+0x1005b1f0]
10013a8e:	jmp    0x1001390a
10013a93:	movzx  eax,al
10013a96:	and    eax,0x10
10013a99:	or     eax,0x20
10013a9c:	shr    eax,0x3
10013a9f:	mov    ax,WORD PTR [eax*2+0x1005b1f0]
10013aa7:	jmp    0x1001390a
10013aac:	mov    eax,0x1
10013ab1:	mov    ax,WORD PTR [eax*2+0x1005b1f0]
10013ab9:	jmp    0x1001390a
10013abe:	mov    eax,0x6
10013ac3:	mov    ax,WORD PTR [eax*2+0x1005b1f0]
10013acb:	jmp    0x1001390a
10013ad0:	mov    eax,0x7
10013ad5:	mov    ax,WORD PTR [eax*2+0x1005b1f0]
10013add:	jmp    0x1001390a
10013ae2:	mov    esi,DWORD PTR [esp+0x2c]
10013ae6:	lea    ecx,[esi-0x1]
10013ae9:	cmp    ecx,0x57
10013aec:	ja     0x100138f8
10013af2:	movzx  ecx,BYTE PTR [ecx+0x1001482c]
10013af9:	jmp    DWORD PTR [ecx*4+0x1001475c]
10013b00:	push   0x2
10013b02:	mov    edx,0x8
10013b07:	mov    eax,ebx
10013b09:	call   0x10012fe0
10013b0e:	mov    ecx,DWORD PTR [esp+0x24]
10013b12:	add    ecx,0x30
10013b15:	mov    esi,0x1
10013b1a:	mov    eax,DWORD PTR [esp+0x20]
10013b1e:	call   0x10013010
10013b23:	test   eax,eax
10013b25:	jne    0x10013d0d
10013b2b:	pop    edi
10013b2c:	pop    esi
10013b2d:	pop    ebp
10013b2e:	pop    ebx
10013b2f:	add    esp,0xc
10013b32:	ret    
10013b33:	mov    eax,DWORD PTR [esp+0x3c]
10013b37:	test   eax,eax
10013b39:	jne    0x10013b5c
10013b3b:	or     DWORD PTR [ebp+0x4],0x2000
10013b42:	push   0x2
10013b44:	mov    edx,0x10
10013b49:	mov    eax,ebx
10013b4b:	call   0x10012fe0
10013b50:	mov    ecx,DWORD PTR [esp+0x24]
10013b54:	add    ecx,0x30
10013b57:	lea    esi,[edx-0xe]
10013b5a:	jmp    0x10013b1a
10013b5c:	cmp    eax,0x2
10013b5f:	jne    0x10013b92
10013b61:	mov    eax,DWORD PTR [esp+0x38]
10013b65:	and    eax,0x3000000
10013b6a:	cmp    eax,0x3000000
10013b6f:	jne    0x10013b92
10013b71:	or     DWORD PTR [ebp+0x4],0x2000000
10013b78:	push   0x2
10013b7a:	mov    edx,0x40
10013b7f:	mov    eax,ebx
10013b81:	call   0x10012fe0
10013b86:	mov    ecx,DWORD PTR [esp+0x24]
10013b8a:	add    ecx,0x30
10013b8d:	lea    esi,[edx-0x38]
10013b90:	jmp    0x10013b1a
10013b92:	or     DWORD PTR [ebp+0x4],0x2000
10013b99:	mov    eax,DWORD PTR [esp+0x20]
10013b9d:	mov    ecx,DWORD PTR [esp+0x24]
10013ba1:	mov    BYTE PTR [ebx],0x2
10013ba4:	cmp    DWORD PTR [eax+0x18],0x2
10013ba8:	jne    0x10013bc9
10013baa:	mov    edx,0x20
10013baf:	mov    WORD PTR [ebx+0x2],dx
10013bb3:	or     WORD PTR [ecx+0xa],dx
10013bb7:	lea    esi,[ecx+0x30]
10013bba:	lea    edi,[edx-0x1c]
10013bbd:	mov    ecx,eax
10013bbf:	call   0x100130a0
10013bc4:	jmp    0x10013b23
10013bc9:	mov    WORD PTR [ebx+0x2],0x20
10013bcf:	add    ecx,0x30
10013bd2:	mov    esi,0x4
10013bd7:	jmp    0x10013b1e
10013bdc:	mov    ecx,DWORD PTR [esp+0x20]
10013be0:	mov    esi,0x2000
10013be5:	test   DWORD PTR [esp+0x38],esi
10013be9:	mov    BYTE PTR [ebx],0x2
10013bec:	je     0x10013c15
10013bee:	test   DWORD PTR [ebp+0x0],esi
10013bf1:	je     0x10013c15
10013bf3:	or     DWORD PTR [ebp+0x4],esi
10013bf6:	mov    eax,DWORD PTR [ecx+0x18]
10013bf9:	test   eax,eax
10013bfb:	je     0x10013c0d
10013bfd:	add    eax,0xffffffff
10013c00:	cmp    eax,0x1
10013c03:	ja     0x10013c1b
10013c05:	mov    WORD PTR [ebx+0x2],0x10
10013c0b:	jmp    0x10013c1b
10013c0d:	mov    WORD PTR [ebx+0x2],0x20
10013c13:	jmp    0x10013c1b
10013c15:	mov    WORD PTR [ebx+0x2],0x8
10013c1b:	mov    eax,DWORD PTR [esp+0x24]
10013c1f:	or     WORD PTR [eax+0xa],0x20
10013c24:	lea    esi,[eax+0x30]
10013c27:	mov    edi,0x1
10013c2c:	call   0x100130a0
10013c31:	jmp    0x10013b23
10013c36:	push   0x3
10013c38:	jmp    0x10013b44
10013c3d:	push   0x3
10013c3f:	jmp    0x10013b02
10013c44:	push   0x4
10013c46:	mov    edx,0x8
10013c4b:	mov    eax,ebx
10013c4d:	call   0x10012fe0
10013c52:	mov    ecx,DWORD PTR [esp+0x24]
10013c56:	add    ecx,0x34
10013c59:	jmp    0x10013b15
10013c5e:	push   0x1
10013c60:	mov    edx,0x8
10013c65:	mov    eax,ebx
10013c67:	call   0x10012fe0
10013c6c:	cmp    DWORD PTR [ebp+0x18],0x0
10013c70:	je     0x10013c91
10013c72:	mov    eax,DWORD PTR [esp+0x14]
10013c76:	mov    edx,DWORD PTR [esp+0x10]
10013c7a:	or     DWORD PTR [ebp+0x4],0x2000000
10013c81:	and    eax,0x4
10013c84:	lea    eax,[edx+eax*2]
10013c87:	call   0x10012fd0
10013c8c:	mov    BYTE PTR [ebx+0x1],al
10013c8f:	jmp    0x10013d0d
10013c91:	mov    al,BYTE PTR [esp+0x10]
10013c95:	add    al,0x30
10013c97:	mov    BYTE PTR [ebx+0x1],al
10013c9a:	jmp    0x10013d0d
10013c9c:	mov    ecx,DWORD PTR [esp+0x3c]
10013ca0:	sub    ecx,0x0
10013ca3:	je     0x10013cce
10013ca5:	sub    ecx,0x1
10013ca8:	je     0x10013cc1
10013caa:	sub    ecx,0x1
10013cad:	jne    0x10013d0d
10013caf:	or     DWORD PTR [ebp+0x4],0x2000000
10013cb6:	and    eax,0x4
10013cb9:	lea    eax,[edx+eax*2]
10013cbc:	push   eax
10013cbd:	push   0x40
10013cbf:	jmp    0x10013d04
10013cc1:	test   al,0x4
10013cc3:	jne    0x10013cf4
10013cc5:	or     DWORD PTR [ebp+0x4],0x2000
10013ccc:	jmp    0x10013cfe
10013cce:	or     DWORD PTR [ebp+0x4],0x2000
10013cd5:	test   al,0x4
10013cd7:	mov    ecx,DWORD PTR [ebp+0x4]
10013cda:	je     0x10013ce8
10013cdc:	or     ecx,0x2000000
10013ce2:	mov    DWORD PTR [ebp+0x4],ecx
10013ce5:	add    edx,0x8
10013ce8:	add    edx,0x20
10013ceb:	push   edx
10013cec:	push   0x10
10013cee:	jmp    0x10013d04
10013cf0:	test   al,0x4
10013cf2:	je     0x10013cfe
10013cf4:	or     DWORD PTR [ebp+0x4],0x2000000
10013cfb:	add    edx,0x8
10013cfe:	add    edx,0x10
10013d01:	push   edx
10013d02:	push   0x20
10013d04:	mov    eax,ebx
10013d06:	push   0x1
10013d08:	call   0x10012ff0
10013d0d:	mov    al,BYTE PTR [ebx]
10013d0f:	cmp    al,0x1
10013d11:	je     0x10013d1b
10013d13:	cmp    al,0x6
10013d15:	je     0x10013d1b
10013d17:	cmp    al,0x7
10013d19:	jne    0x10013d2f
10013d1b:	movzx  ecx,BYTE PTR [ebx+0x1]
10013d1f:	mov    dx,WORD PTR [ecx*2+0x1005b0d8]
10013d27:	mov    eax,DWORD PTR [esp+0x24]
10013d2b:	or     WORD PTR [eax+0x3c],dx
10013d2f:	pop    edi
10013d30:	pop    esi
10013d31:	pop    ebp
10013d32:	mov    eax,0x1
10013d37:	pop    ebx
10013d38:	add    esp,0xc
10013d3b:	ret    
10013d3c:	test   al,0x4
10013d3e:	mov    edi,0x2000000
10013d43:	je     0x10013d4b
10013d45:	or     DWORD PTR [ebp+0x4],edi
10013d48:	add    edx,0x8
10013d4b:	mov    ecx,DWORD PTR [esp+0x20]
10013d4f:	cmp    DWORD PTR [ecx+0x18],0x2
10013d53:	jne    0x10013d6c
10013d55:	mov    esi,DWORD PTR [esp+0x38]
10013d59:	and    esi,0x3000000
10013d5f:	cmp    esi,0x1000000
10013d65:	jne    0x10013d6c
10013d67:	push   edx
10013d68:	push   0x40
10013d6a:	jmp    0x10013d04
10013d6c:	test   al,0x8
10013d6e:	mov    eax,ebx
10013d70:	je     0x10013d7a
10013d72:	or     DWORD PTR [ebp+0x4],edi
10013d75:	push   edx
10013d76:	push   0x40
10013d78:	jmp    0x10013d06
10013d7a:	add    edx,0x10
10013d7d:	push   edx
10013d7e:	push   0x20
10013d80:	jmp    0x10013d06
10013d82:	test   al,0x1
10013d84:	mov    eax,DWORD PTR [esp+0x34]
10013d88:	je     0x10013d94
10013d8a:	or     DWORD PTR [ebp+0x4],0x2000000
10013d91:	add    eax,0x8
10013d94:	mov    edx,DWORD PTR [esp+0x20]
10013d98:	cmp    DWORD PTR [edx+0x18],0x2
10013d9c:	jne    0x10013da6
10013d9e:	push   eax
10013d9f:	push   0x40
10013da1:	jmp    0x10013d04
10013da6:	add    eax,0x10
10013da9:	push   eax
10013daa:	jmp    0x10013d02
10013daf:	add    edx,0x53
10013db2:	push   edx
10013db3:	push   0x40
10013db5:	jmp    0x10013d04
10013dba:	mov    eax,DWORD PTR [esp+0x34]
10013dbe:	add    eax,0x53
10013dc1:	push   eax
10013dc2:	push   0x40
10013dc4:	jmp    0x10013d04
10013dc9:	xor    eax,eax
10013dcb:	mov    DWORD PTR [esp+0x10],eax
10013dcf:	mov    DWORD PTR [esp+0x14],eax
10013dd3:	mov    edx,eax
10013dd5:	test   al,0x4
10013dd7:	je     0x10013de3
10013dd9:	or     DWORD PTR [ebp+0x4],0x2000000
10013de0:	add    edx,0x8
10013de3:	add    edx,0x5b
10013de6:	push   edx
10013de7:	push   0x80
10013dec:	jmp    0x10013d04
10013df1:	test   al,0x1
10013df3:	je     0x10013e01
10013df5:	or     DWORD PTR [ebp+0x4],0x2000000
10013dfc:	add    DWORD PTR [esp+0x34],0x8
10013e01:	mov    ecx,DWORD PTR [esp+0x34]
10013e05:	add    ecx,0x5b
10013e08:	push   ecx
10013e09:	push   0x80
10013e0e:	jmp    0x10013d04
10013e13:	test   al,0x4
10013e15:	mov    eax,DWORD PTR [esp+0x20]
10013e19:	je     0x10013e27
10013e1b:	or     DWORD PTR [ebp+0x4],0x2000000
10013e22:	add    edx,0x8
10013e25:	jmp    0x10013e3a
10013e27:	cmp    DWORD PTR [eax+0x18],0x1
10013e2b:	jne    0x10013e3a
10013e2d:	test   BYTE PTR [ebp+0x0],0x10
10013e31:	je     0x10013e3a
10013e33:	add    edx,0x8
10013e36:	or     DWORD PTR [ebp+0x4],0x10
10013e3a:	cmp    edx,0x9
10013e3d:	jae    0x100138f8
10013e43:	cmp    edx,0x1
10013e46:	je     0x100138f8
10013e4c:	cmp    edx,0x5
10013e4f:	jb     0x10013e5a
10013e51:	cmp    edx,0x7
10013e54:	jbe    0x100138f8
10013e5a:	mov    BYTE PTR [ebx],0x1
10013e5d:	mov    eax,DWORD PTR [eax+0x18]
10013e60:	sub    eax,0x2
10013e63:	neg    eax
10013e65:	sbb    eax,eax
10013e67:	and    eax,0xffffffe0
10013e6a:	add    eax,0x40
10013e6d:	add    dl,0x7b
10013e70:	mov    WORD PTR [ebx+0x2],ax
10013e74:	mov    BYTE PTR [ebx+0x1],dl
10013e77:	jmp    0x10013d1b
10013e7c:	cmp    edx,0x4
10013e7f:	je     0x100138f8
10013e85:	cmp    edx,0x5
10013e88:	je     0x100138f8
10013e8e:	test   al,0x4
10013e90:	jne    0x100138f8
10013e96:	mov    ecx,DWORD PTR [esp+0x20]
10013e9a:	mov    BYTE PTR [ebx],0x1
10013e9d:	mov    eax,DWORD PTR [ecx+0x18]
10013ea0:	sub    eax,0x2
10013ea3:	neg    eax
10013ea5:	sbb    eax,eax
10013ea7:	and    eax,0xffffffe0
10013eaa:	add    eax,0x40
10013ead:	sub    dl,0x7c
10013eb0:	mov    WORD PTR [ebx+0x2],ax
10013eb4:	mov    BYTE PTR [ebx+0x1],dl
10013eb7:	jmp    0x10013d1b
10013ebc:	cmp    DWORD PTR [esp+0x44],0x0
10013ec1:	je     0x10013ecc
10013ec3:	cmp    edx,0x1
10013ec6:	je     0x100138f8
10013ecc:	cmp    edx,0x5
10013ecf:	ja     0x100138f8
10013ed5:	add    edx,0x44
10013ed8:	push   edx
10013ed9:	push   0x10
10013edb:	jmp    0x10013d04
10013ee0:	mov    eax,DWORD PTR [esp+0x38]
10013ee4:	mov    BYTE PTR [ebx],0x1
10013ee7:	mov    WORD PTR [ebx+0x2],0x10
10013eed:	or     DWORD PTR [ebp+0x4],0x2000
10013ef4:	and    eax,0x1f80
10013ef9:	cmp    eax,0x400
10013efe:	ja     0x10013f3f
10013f00:	je     0x10013f36
10013f02:	cmp    eax,0x80
10013f07:	je     0x10013f2d
10013f09:	cmp    eax,0x100
10013f0e:	je     0x10013f24
10013f10:	cmp    eax,0x200
10013f15:	jne    0x10013d0d
10013f1b:	mov    BYTE PTR [ebx+0x1],0x47
10013f1f:	jmp    0x10013d0d
10013f24:	mov    BYTE PTR [ebx+0x1],0x46
10013f28:	jmp    0x10013d0d
10013f2d:	mov    BYTE PTR [ebx+0x1],0x45
10013f31:	jmp    0x10013d0d
10013f36:	mov    BYTE PTR [ebx+0x1],0x44
10013f3a:	jmp    0x10013d0d
10013f3f:	cmp    eax,0x800
10013f44:	je     0x10013f5a
10013f46:	cmp    eax,0x1000
10013f4b:	jne    0x10013d0d
10013f51:	mov    BYTE PTR [ebx+0x1],0x49
10013f55:	jmp    0x10013d0d
10013f5a:	mov    BYTE PTR [ebx+0x1],0x48
10013f5e:	jmp    0x10013d0d
10013f63:	push   0x30
10013f65:	push   0x8
10013f67:	jmp    0x10013d04
10013f6c:	mov    eax,DWORD PTR [esp+0x3c]
10013f70:	test   eax,eax
10013f72:	jne    0x10013f84
10013f74:	or     DWORD PTR [ebp+0x4],0x2000
10013f7b:	push   0x20
10013f7d:	push   0x10
10013f7f:	jmp    0x10013d04
10013f84:	cmp    eax,0x1
10013f87:	jne    0x10013f97
10013f89:	or     DWORD PTR [ebp+0x4],0x2000
10013f90:	push   0x10
10013f92:	jmp    0x10013d02
10013f97:	mov    eax,DWORD PTR [esp+0x38]
10013f9b:	not    eax
10013f9d:	test   eax,0x1000000
10013fa2:	je     0x10013fab
10013fa4:	or     DWORD PTR [ebp+0x4],0x2000000
10013fab:	push   0x0
10013fad:	push   0x40
10013faf:	jmp    0x10013d04
10013fb4:	or     DWORD PTR [ebp+0x4],0x2000
10013fbb:	cmp    DWORD PTR [esp+0x3c],0x0
10013fc0:	mov    esi,DWORD PTR [esp+0x20]
10013fc4:	jne    0x10013fff
10013fc6:	add    DWORD PTR [esi+0x14],0xfffffffc
10013fca:	js     0x100138f8
10013fd0:	push   0x9
10013fd2:	mov    edx,0x10
10013fd7:	mov    eax,ebx
10013fd9:	call   0x10012fe0
10013fde:	mov    ecx,DWORD PTR [esi+0x10]
10013fe1:	movzx  edx,WORD PTR [ecx]
10013fe4:	mov    eax,DWORD PTR [esp+0x24]
10013fe8:	mov    DWORD PTR [eax+0x34],edx
10013feb:	mov    ecx,DWORD PTR [esi+0x10]
10013fee:	mov    dx,WORD PTR [ecx+0x2]
10013ff2:	mov    WORD PTR [eax+0x30],dx
10013ff6:	add    DWORD PTR [esi+0x10],0x4
10013ffa:	jmp    0x10013d0d
10013fff:	add    DWORD PTR [esi+0x14],0xfffffffa
10014003:	js     0x100138f8
10014009:	push   0x9
1001400b:	mov    edx,0x20
10014010:	mov    eax,ebx
10014012:	call   0x10012fe0
10014017:	mov    eax,DWORD PTR [esi+0x10]
1001401a:	mov    ecx,DWORD PTR [eax]
1001401c:	mov    eax,DWORD PTR [esp+0x24]
10014020:	mov    DWORD PTR [eax+0x34],ecx
10014023:	mov    edx,DWORD PTR [esi+0x10]
10014026:	mov    cx,WORD PTR [edx+0x4]
1001402a:	mov    WORD PTR [eax+0x30],cx
1001402e:	add    DWORD PTR [esi+0x10],0x6
10014032:	jmp    0x10013d0d
10014037:	cmp    esi,0x28
1001403a:	push   0x8
1001403c:	mov    eax,ebx
1001403e:	jne    0x10014067
10014040:	lea    edx,[esi-0x20]
10014043:	call   0x10012fe0
10014048:	lea    edi,[esi-0x27]
1001404b:	mov    esi,DWORD PTR [esp+0x24]
1001404f:	mov    ecx,DWORD PTR [esp+0x20]
10014053:	add    esi,0x30
10014056:	call   0x100130a0
1001405b:	test   eax,eax
1001405d:	jne    0x100140a9
1001405f:	pop    edi
10014060:	pop    esi
10014061:	pop    ebp
10014062:	pop    ebx
10014063:	add    esp,0xc
10014066:	ret    
10014067:	or     DWORD PTR [ebp+0x4],0x2000
1001406e:	cmp    DWORD PTR [esp+0x40],0x0
10014073:	jne    0x10014084
10014075:	mov    edx,0x10
1001407a:	call   0x10012fe0
1001407f:	lea    edi,[edx-0xe]
10014082:	jmp    0x1001404b
10014084:	mov    edx,0x20
10014089:	call   0x10012fe0
1001408e:	mov    esi,DWORD PTR [esp+0x24]
10014092:	mov    ecx,DWORD PTR [esp+0x20]
10014096:	add    esi,0x30
10014099:	lea    edi,[edx-0x1c]
1001409c:	call   0x100130a0
100140a1:	test   eax,eax
100140a3:	je     0x100138f8
100140a9:	mov    edx,DWORD PTR [esp+0x28]
100140ad:	movzx  eax,WORD PTR [edx+0x4]
100140b1:	cmp    ax,0x18
100140b5:	jb     0x10013d0d
100140bb:	cmp    ax,0x27
100140bf:	ja     0x10013d0d
100140c5:	mov    eax,DWORD PTR [ebp+0x0]
100140c8:	test   al,al
100140ca:	jns    0x100140e1
100140cc:	mov    eax,DWORD PTR [esp+0x24]
100140d0:	or     DWORD PTR [ebp+0x4],0x80
100140d7:	or     WORD PTR [eax+0xa],0x10
100140dc:	jmp    0x10013d0d
100140e1:	test   eax,0x200
100140e6:	je     0x10013d0d
100140ec:	mov    eax,DWORD PTR [esp+0x24]
100140f0:	or     DWORD PTR [ebp+0x4],0x200
100140f7:	or     WORD PTR [eax+0xa],0x8
100140fc:	jmp    0x10013d0d
10014101:	mov    WORD PTR [ebx+0x2],0x8
10014107:	cmp    WORD PTR [ebx+0x2],0x0
1001410c:	mov    BYTE PTR [ebx],0x5
1001410f:	jne    0x1001413a
10014111:	mov    eax,DWORD PTR [esp+0x3c]
10014115:	sub    eax,0x0
10014118:	je     0x10014134
1001411a:	sub    eax,0x1
1001411d:	je     0x1001412c
1001411f:	sub    eax,0x1
10014122:	jne    0x1001413a
10014124:	mov    WORD PTR [ebx+0x2],0x40
1001412a:	jmp    0x1001413a
1001412c:	mov    WORD PTR [ebx+0x2],0x20
10014132:	jmp    0x1001413a
10014134:	mov    WORD PTR [ebx+0x2],0x10
1001413a:	mov    eax,DWORD PTR [esp+0x24]
1001413e:	mov    edi,DWORD PTR [esp+0x20]
10014142:	mov    ecx,DWORD PTR [edi+0x18]
10014145:	push   eax
10014146:	push   ecx
10014147:	push   ebp
10014148:	push   0x200
1001414d:	call   0x10014dc0
10014152:	mov    eax,DWORD PTR [esp+0x50]
10014156:	add    esp,0x10
10014159:	test   eax,eax
1001415b:	jne    0x1001417b
1001415d:	mov    eax,DWORD PTR [esp+0x24]
10014161:	or     DWORD PTR [ebp+0x4],0x4000
10014168:	mov    BYTE PTR [eax+0xf],0x10
1001416c:	lea    ecx,[eax+0x28]
1001416f:	mov    esi,0x2
10014174:	mov    eax,edi
10014176:	jmp    0x10013b1e
1001417b:	cmp    eax,0x1
1001417e:	mov    eax,DWORD PTR [esp+0x24]
10014182:	lea    ecx,[eax+0x28]
10014185:	jne    0x1001419e
10014187:	or     DWORD PTR [ebp+0x4],0x4000
1001418e:	mov    BYTE PTR [eax+0xf],0x20
10014192:	mov    esi,0x4
10014197:	mov    eax,edi
10014199:	jmp    0x10013b1e
1001419e:	mov    BYTE PTR [eax+0xf],0x40
100141a2:	mov    esi,0x8
100141a7:	mov    eax,edi
100141a9:	jmp    0x10013b1e
100141ae:	push   0x2
100141b0:	mov    edx,0x8
100141b5:	mov    eax,ebx
100141b7:	call   0x10012fe0
100141bc:	mov    edx,DWORD PTR [esp+0x24]
100141c0:	mov    BYTE PTR [edx+0x30],0x1
100141c4:	jmp    0x10013d0d
100141c9:	push   0x31
100141cb:	push   0x8
100141cd:	jmp    0x10013d04
100141d2:	mov    eax,DWORD PTR [esp+0x20]
100141d6:	mov    ecx,DWORD PTR [eax+0x10]
100141d9:	movzx  edx,BYTE PTR [ecx-0x1]
100141dd:	and    edx,0x7
100141e0:	add    edx,0x4b
100141e3:	jmp    0x10013d01
100141e8:	push   0x4b
100141ea:	push   0x20
100141ec:	push   0x1
100141ee:	mov    eax,ebx
100141f0:	call   0x10012ff0
100141f5:	mov    eax,DWORD PTR [esp+0x20]
100141f9:	mov    ecx,DWORD PTR [eax+0x10]
100141fc:	movzx  edx,BYTE PTR [ecx-0x1]
10014200:	and    edx,0x7
10014203:	add    edx,0x4b
10014206:	push   edx
10014207:	push   0x20
10014209:	lea    eax,[ebx+0x4]
1001420c:	jmp    0x10013d06
10014211:	mov    eax,DWORD PTR [esp+0x20]
10014215:	mov    ecx,DWORD PTR [eax+0x10]
10014218:	movzx  edx,BYTE PTR [ecx-0x1]
1001421c:	and    edx,0x7
1001421f:	add    edx,0x4b
10014222:	push   edx
10014223:	push   0x20
10014225:	push   0x1
10014227:	mov    eax,ebx
10014229:	call   0x10012ff0
1001422e:	push   0x4b
10014230:	push   0x20
10014232:	lea    eax,[ebx+0x4]
10014235:	jmp    0x10013d06
1001423a:	push   0x1
1001423c:	mov    edx,0x8
10014241:	mov    eax,ebx
10014243:	call   0x10012fe0
10014248:	mov    eax,DWORD PTR [esp+0x20]
1001424c:	mov    ecx,DWORD PTR [eax+0x10]
1001424f:	movzx  eax,BYTE PTR [ecx-0x1]
10014253:	and    eax,0x7
10014256:	test   BYTE PTR [esp+0x14],0x1
1001425b:	je     0x10014273
1001425d:	or     DWORD PTR [ebp+0x4],0x2000000
10014264:	add    eax,edx
10014266:	call   0x10012fd0
1001426b:	mov    BYTE PTR [ebx+0x1],al
1001426e:	jmp    0x10013d0d
10014273:	cmp    DWORD PTR [ebp+0x18],0x1
10014277:	jne    0x10013c95
1001427d:	or     DWORD PTR [ebp+0x4],0x2000000
10014284:	call   0x10012fd0
10014289:	mov    BYTE PTR [ebx+0x1],al
1001428c:	jmp    0x10013d0d
10014291:	mov    edx,DWORD PTR [esp+0x20]
10014295:	mov    ecx,DWORD PTR [edx+0x10]
10014298:	movzx  ecx,BYTE PTR [ecx-0x1]
1001429c:	mov    edx,DWORD PTR [esp+0x3c]
100142a0:	and    ecx,0x7
100142a3:	sub    edx,0x0
100142a6:	je     0x10014315
100142a8:	sub    edx,0x1
100142ab:	je     0x100142ee
100142ad:	sub    edx,0x1
100142b0:	jne    0x10013d0d
100142b6:	mov    edx,DWORD PTR [esp+0x38]
100142ba:	test   edx,0x1000000
100142c0:	mov    edi,0x2000000
100142c5:	je     0x100142dd
100142c7:	test   edi,edx
100142c9:	jne    0x100142dd
100142cb:	test   al,0x1
100142cd:	je     0x100142e6
100142cf:	or     DWORD PTR [ebp+0x4],edi
100142d2:	add    ecx,0x8
100142d5:	push   ecx
100142d6:	push   0x40
100142d8:	jmp    0x10013d04
100142dd:	or     DWORD PTR [ebp+0x4],edi
100142e0:	and    eax,0x1
100142e3:	lea    ecx,[ecx+eax*8]
100142e6:	push   ecx
100142e7:	push   0x40
100142e9:	jmp    0x10013d04
100142ee:	test   al,0x1
100142f0:	je     0x10014305
100142f2:	or     DWORD PTR [ebp+0x4],0x2000000
100142f9:	add    ecx,0x8
100142fc:	add    ecx,0x10
100142ff:	push   ecx
10014300:	jmp    0x10013d02
10014305:	or     DWORD PTR [ebp+0x4],0x2000
1001430c:	add    ecx,0x10
1001430f:	push   ecx
10014310:	jmp    0x10013d02
10014315:	or     DWORD PTR [ebp+0x4],0x2000
1001431c:	test   al,0x1
1001431e:	mov    edx,DWORD PTR [ebp+0x4]
10014321:	je     0x1001432f
10014323:	or     edx,0x2000000
10014329:	mov    DWORD PTR [ebp+0x4],edx
1001432c:	add    ecx,0x8
1001432f:	add    ecx,0x20
10014332:	push   ecx
10014333:	push   0x10
10014335:	jmp    0x10013d04
1001433a:	or     DWORD PTR [ebp+0x4],0x4000
10014341:	mov    edx,DWORD PTR [esp+0x38]
10014345:	test   dl,0x4
10014348:	mov    BYTE PTR [ebx],0x6
1001434b:	je     0x1001438c
1001434d:	or     DWORD PTR [ebp+0x4],0x2000
10014354:	mov    ecx,DWORD PTR [esp+0x3c]
10014358:	test   ecx,ecx
1001435a:	mov    eax,DWORD PTR [ebp+0x4]
1001435d:	jne    0x10014367
1001435f:	mov    WORD PTR [ebx+0x2],0x10
10014365:	jmp    0x10014392
10014367:	cmp    ecx,0x2
1001436a:	jne    0x10014384
1001436c:	test   edx,0x1000000
10014372:	je     0x10014384
10014374:	or     eax,0x2000000
10014379:	mov    DWORD PTR [ebp+0x4],eax
1001437c:	mov    WORD PTR [ebx+0x2],0x40
10014382:	jmp    0x10014392
10014384:	mov    WORD PTR [ebx+0x2],0x20
1001438a:	jmp    0x10014392
1001438c:	mov    WORD PTR [ebx+0x2],0x8
10014392:	mov    eax,DWORD PTR [esp+0x24]
10014396:	mov    edx,DWORD PTR [esp+0x20]
1001439a:	push   eax
1001439b:	mov    BYTE PTR [eax+0xc],0x0
1001439f:	mov    eax,DWORD PTR [edx+0x18]
100143a2:	push   eax
100143a3:	push   ebp
100143a4:	push   0x200
100143a9:	call   0x10014dc0
100143ae:	mov    eax,DWORD PTR [esp+0x50]
100143b2:	add    esp,0x10
100143b5:	test   eax,eax
100143b7:	jne    0x100143c2
100143b9:	mov    BYTE PTR [ebx+0x1],0x26
100143bd:	jmp    0x10013d0d
100143c2:	sub    eax,0x1
100143c5:	neg    eax
100143c7:	sbb    al,al
100143c9:	and    al,0xf0
100143cb:	add    al,0x16
100143cd:	mov    BYTE PTR [ebx+0x1],al
100143d0:	jmp    0x10013d0d
100143d5:	or     DWORD PTR [ebp+0x4],0x4000
100143dc:	mov    edx,DWORD PTR [esp+0x38]
100143e0:	test   dl,0x4
100143e3:	mov    BYTE PTR [ebx],0x6
100143e6:	je     0x10014427
100143e8:	or     DWORD PTR [ebp+0x4],0x2000
100143ef:	mov    ecx,DWORD PTR [esp+0x3c]
100143f3:	test   ecx,ecx
100143f5:	mov    eax,DWORD PTR [ebp+0x4]
100143f8:	jne    0x10014402
100143fa:	mov    WORD PTR [ebx+0x2],0x10
10014400:	jmp    0x1001442d
10014402:	cmp    ecx,0x2
10014405:	jne    0x1001441f
10014407:	test   edx,0x1000000
1001440d:	je     0x1001441f
1001440f:	or     eax,0x2000000
10014414:	mov    DWORD PTR [ebp+0x4],eax
10014417:	mov    WORD PTR [ebx+0x2],0x40
1001441d:	jmp    0x1001442d
1001441f:	mov    WORD PTR [ebx+0x2],0x20
10014425:	jmp    0x1001442d
10014427:	mov    WORD PTR [ebx+0x2],0x8
1001442d:	cmp    DWORD PTR [esp+0x30],0x0
10014432:	jne    0x10014446
10014434:	mov    ecx,DWORD PTR [esp+0x20]
10014438:	cmp    DWORD PTR [ecx+0x18],0x2
1001443c:	je     0x10014446
1001443e:	mov    edx,DWORD PTR [esp+0x24]
10014442:	mov    BYTE PTR [edx+0xc],0xc4
10014446:	mov    eax,DWORD PTR [esp+0x40]
1001444a:	test   eax,eax
1001444c:	jne    0x10014457
1001444e:	mov    BYTE PTR [ebx+0x1],0x27
10014452:	jmp    0x10013d0d
10014457:	sub    eax,0x1
1001445a:	neg    eax
1001445c:	sbb    al,al
1001445e:	and    al,0xf0
10014460:	add    al,0x17
10014462:	mov    BYTE PTR [ebx+0x1],al
10014465:	jmp    0x10013d0d
1001446a:	push   0x22
1001446c:	push   0x10
1001446e:	jmp    0x10013d04
10014473:	push   0x11
10014475:	jmp    0x10013d02
1001447a:	mov    eax,DWORD PTR [esp+0x20]
1001447e:	or     DWORD PTR [ebp+0x4],0x4000
10014485:	mov    edi,DWORD PTR [esp+0x24]
10014489:	mov    ecx,DWORD PTR [eax+0x18]
1001448c:	push   edi
1001448d:	push   ecx
1001448e:	push   ebp
1001448f:	push   0x200
10014494:	call   0x10014dc0
10014499:	add    esp,0x10
1001449c:	push   0x30
1001449e:	push   0x8
100144a0:	push   0x7
100144a2:	mov    eax,ebx
100144a4:	call   0x10012ff0
100144a9:	mov    eax,DWORD PTR [esp+0x40]
100144ad:	test   eax,eax
100144af:	jne    0x100144ba
100144b1:	mov    BYTE PTR [edi+0xd],0x23
100144b5:	jmp    0x10013d0d
100144ba:	cmp    eax,0x1
100144bd:	jne    0x100144c8
100144bf:	mov    BYTE PTR [edi+0xd],0x13
100144c3:	jmp    0x10013d0d
100144c8:	or     DWORD PTR [ebp+0x4],0x2000000
100144cf:	mov    BYTE PTR [edi+0xd],0x3
100144d3:	jmp    0x10013d0d
100144d8:	mov    eax,DWORD PTR [esp+0x40]
100144dc:	cmp    eax,0x2
100144df:	jne    0x100144ee
100144e1:	push   0x0
100144e3:	push   0x40
100144e5:	push   0x6
100144e7:	mov    eax,ebx
100144e9:	jmp    0x10013d08
100144ee:	or     DWORD PTR [ebp+0x4],0x4000
100144f5:	cmp    eax,0x1
100144f8:	mov    eax,ebx
100144fa:	jne    0x10014507
100144fc:	push   0x10
100144fe:	push   0x20
10014500:	push   0x6
10014502:	jmp    0x10013d08
10014507:	push   0x20
10014509:	push   0x10
1001450b:	push   0x6
1001450d:	jmp    0x10013d08
10014512:	mov    edx,DWORD PTR [esp+0x18]
10014516:	add    edx,0x5b
10014519:	push   edx
1001451a:	push   0x80
1001451f:	jmp    0x10013d04
10014524:	mov    edi,DWORD PTR [esp+0x20]
10014528:	add    DWORD PTR [edi+0x14],0xffffffff
1001452c:	js     0x100138f8
10014532:	mov    esi,0x1
10014537:	cmp    DWORD PTR [edi+0x18],esi
1001453a:	jne    0x1001454a
1001453c:	mov    eax,DWORD PTR [edi+0x10]
1001453f:	movzx  eax,BYTE PTR [eax]
10014542:	shr    eax,0x4
10014545:	and    eax,0x7
10014548:	jmp    0x10014553
1001454a:	mov    ecx,DWORD PTR [edi+0x10]
1001454d:	movzx  eax,BYTE PTR [ecx]
10014550:	shr    eax,0x4
10014553:	add    eax,0x5b
10014556:	push   eax
10014557:	push   0x80
1001455c:	push   esi
1001455d:	mov    eax,ebx
1001455f:	call   0x10012ff0
10014564:	add    DWORD PTR [edi+0x10],esi
10014567:	jmp    0x10013d0d
1001456c:	test   al,0x4
1001456e:	je     0x10014573
10014570:	add    edx,0x8
10014573:	test   al,0x10
10014575:	mov    eax,ebx
10014577:	je     0x10014587
10014579:	add    edx,0x6b
1001457c:	push   edx
1001457d:	push   0x100
10014582:	jmp    0x10013d06
10014587:	add    edx,0x5b
1001458a:	push   edx
1001458b:	push   0x80
10014590:	jmp    0x10013d06
10014595:	mov    edi,DWORD PTR [esp+0x20]
10014599:	add    DWORD PTR [edi+0x14],0xffffffff
1001459d:	js     0x100138f8
100145a3:	mov    esi,0x1
100145a8:	cmp    DWORD PTR [edi+0x18],esi
100145ab:	jne    0x100145bb
100145ad:	mov    edx,DWORD PTR [edi+0x10]
100145b0:	movzx  eax,BYTE PTR [edx]
100145b3:	shr    eax,0x4
100145b6:	and    eax,0x7
100145b9:	jmp    0x100145c4
100145bb:	mov    eax,DWORD PTR [edi+0x10]
100145be:	movzx  eax,BYTE PTR [eax]
100145c1:	shr    eax,0x4
100145c4:	test   BYTE PTR [ebp+0x28],0x10
100145c8:	je     0x10014553
100145ca:	add    eax,0x6b
100145cd:	push   eax
100145ce:	push   0x100
100145d3:	push   esi
100145d4:	mov    eax,ebx
100145d6:	call   0x10012ff0
100145db:	add    DWORD PTR [edi+0x10],esi
100145de:	jmp    0x10013d0d
100145e3:	test   al,0x4
100145e5:	je     0x100145ea
100145e7:	add    edx,0x8
100145ea:	add    edx,0x6b
100145ed:	push   edx
100145ee:	push   0x100
100145f3:	jmp    0x10013d04
100145f8:	mov    ecx,DWORD PTR [esp+0x18]
100145fc:	add    ecx,0x6b
100145ff:	push   ecx
10014600:	push   0x100
10014605:	jmp    0x10013d04
1001460a:	test   al,0x10
1001460c:	je     0x10014620
1001460e:	mov    edx,DWORD PTR [esp+0x18]
10014612:	add    edx,0x6b
10014615:	push   edx
10014616:	push   0x100
1001461b:	jmp    0x10013d04
10014620:	mov    eax,DWORD PTR [esp+0x18]
10014624:	add    eax,0x5b
10014627:	push   eax
10014628:	push   0x80
1001462d:	jmp    0x10013d04
10014632:	test   al,0x4
10014634:	je     0x10014639
10014636:	add    edx,0x8
10014639:	test   al,0x8
1001463b:	je     0x10013cfe
10014641:	push   edx
10014642:	push   0x40
10014644:	jmp    0x10013d04
10014649:	lea    ecx,[ecx+0x0]
1001464c:	test   eax,0x9b100138
10014651:	cmp    BYTE PTR [ecx],al
10014653:	adc    BYTE PTR [ecx+0x38],bl
10014656:	add    DWORD PTR [eax],edx
10014658:	sar    BYTE PTR [eax],cl
1001465a:	add    DWORD PTR [eax],edx
1001465c:	arpl   WORD PTR [eax],di
1001465e:	add    DWORD PTR [eax],edx
10014660:	mov    al,0x38
10014662:	add    DWORD PTR [eax],edx
10014664:	in     eax,0x38
10014666:	add    DWORD PTR [eax],edx
10014668:	ret    0x138
1001466b:	adc    BYTE PTR [ebx+0x38],cl
1001466e:	add    DWORD PTR [eax],edx
10014670:	inc    ecx
10014671:	cmp    BYTE PTR [ecx],al
10014673:	adc    BYTE PTR [edi],bl
10014675:	cmp    BYTE PTR [ecx],al
10014677:	adc    cl,bl
10014679:	cmp    BYTE PTR [ecx],al
1001467b:	adc    BYTE PTR [ecx+edi*1+0x1],ch
1001467f:	adc    BYTE PTR [eax],al
10014681:	add    DWORD PTR [edx],eax
10014683:	add    ecx,DWORD PTR [esp+ecx*1]
10014686:	or     al,0xc
10014688:	or     al,0xc
1001468a:	or     al,0xc
1001468c:	or     al,0xc
1001468e:	or     al,0xc
10014690:	or     al,0x4
10014692:	or     al,0x5
10014694:	or     al,0xc
10014696:	push   es
10014697:	pop    es
10014698:	add    DWORD PTR [eax],ecx
1001469a:	add    cl,BYTE PTR [ecx]
1001469c:	or     cl,BYTE PTR [esp+ecx*1]
1001469f:	or     al,0xc
100146a1:	or     al,0xc
100146a3:	or     al,0xc
100146a5:	or     al,0xc
100146a7:	or     al,0xc
100146a9:	or     al,0xc
100146ab:	or     al,0xc
100146ad:	or     al,0xc
100146af:	or     al,0xc
100146b1:	or     al,0xc
100146b3:	or     al,0xc
100146b5:	or     al,0xc
100146b7:	or     al,0xc
100146b9:	or     al,0xc
100146bb:	or     al,0xc
100146bd:	or     al,0xc
100146bf:	or     al,0xc
100146c1:	or     al,0xc
100146c3:	or     al,0xc
100146c5:	or     al,0xc
100146c7:	or     al,0xb
100146c9:	lea    ecx,[ecx+0x0]
100146cc:	lods   al,BYTE PTR ds:[esi]
100146cd:	cmp    al,BYTE PTR [ecx]
100146cf:	adc    cl,bl
100146d1:	cmp    DWORD PTR [ecx],eax
100146d3:	adc    BYTE PTR [edi-0xaeffec7],cl
100146d9:	cmp    DWORD PTR [ecx],eax
100146db:	adc    BYTE PTR [ebx],ch
100146dd:	cmp    al,BYTE PTR [ecx]
100146df:	adc    bl,ah
100146e1:	cmp    DWORD PTR [ecx],eax
100146e3:	adc    al,ah
100146e5:	cmp    DWORD PTR [ecx],eax
100146e7:	adc    BYTE PTR [esi-0x38effec7],bl
100146ed:	cmp    DWORD PTR [ecx],eax
100146ef:	adc    BYTE PTR [esi+0x4910013a],bh
100146f5:	cmp    al,BYTE PTR [ecx]
100146f7:	adc    al,dl
100146f9:	cmp    al,BYTE PTR [ecx]
100146fb:	adc    BYTE PTR [ecx+0x3a],ah
100146fe:	add    DWORD PTR [eax],edx
10014700:	jp     0x1001473c
10014702:	add    DWORD PTR [eax],edx
10014704:	xchg   ebx,eax
10014705:	cmp    al,BYTE PTR [ecx]
10014707:	adc    dl,ah
10014709:	cmp    al,BYTE PTR [ecx]
1001470b:	adc    BYTE PTR [eax],al
1001470d:	add    DWORD PTR [edx],eax
1001470f:	add    eax,DWORD PTR [edi+ecx*1]
10014712:	(bad)  
10014713:	(bad)  
10014714:	sldt   WORD PTR ds:0xf060500
1001471b:	(bad)  
1001471c:	(bad)  
1001471d:	(bad)  
1001471e:	(bad)  
1001471f:	(bad)  
10014720:	(bad)  
10014721:	(bad)  
10014722:	(bad)  
10014723:	(bad)  
10014724:	(bad)  
10014725:	(bad)  
10014726:	(bad)  
10014727:	(bad)  
10014728:	(bad)  
10014729:	(bad)  
1001472a:	(bad)  
1001472b:	(bad)  
1001472c:	(bad)  
1001472d:	(bad)  
1001472e:	(bad)  
1001472f:	(bad)  
10014730:	(bad)  
10014731:	(bad)  
10014732:	(bad)  
10014733:	(bad)  
10014734:	(bad)  
10014735:	(bad)  
10014736:	(bad)  
10014737:	(bad)  
10014738:	(bad)  
10014739:	(bad)  
1001473a:	(bad)  
1001473b:	(bad)  
1001473c:	(bad)  
1001473d:	(bad)  
1001473e:	sysret 
10014740:	or     BYTE PTR [edi],cl
10014742:	syscall 
10014744:	pop    es
10014745:	or     BYTE PTR [ecx],cl
10014747:	sysret 
10014749:	add    BYTE PTR ds:0xf0a0a0f,al
1001474f:	(bad)  
10014750:	(bad)  
10014751:	(bad)  
10014752:	ud2    
10014754:	(bad)  
10014755:	(bad)  
10014757:	or     eax,0x498d0e
1001475c:	add    BYTE PTR [ebx],bh
1001475e:	add    DWORD PTR [eax],edx
10014760:	inc    edx
10014761:	cmp    eax,DWORD PTR [ecx]
10014763:	adc    BYTE PTR [ebx],dh
10014765:	cmp    eax,DWORD PTR [ecx]
10014767:	adc    BYTE PTR [ecx-0x23effec5],bl
1001476d:	cmp    eax,DWORD PTR [ecx]
1001476f:	adc    BYTE PTR [esi],dh
10014771:	cmp    al,0x1
10014773:	adc    BYTE PTR ds:0x4410013c,bh
10014779:	cmp    al,0x1
1001477b:	adc    BYTE PTR [esi+0x3c],bl
1001477e:	add    DWORD PTR [eax],edx
10014780:	call   0xac1148c1
10014785:	cmp    al,0x1
10014787:	adc    al,dh
10014789:	cmp    al,0x1
1001478b:	adc    BYTE PTR [edi*1+0x3d821001],bh
10014792:	add    DWORD PTR [eax],edx
10014794:	adc    edi,DWORD PTR [esi]
10014796:	add    DWORD PTR [eax],edx
10014798:	jl     0x100147d8
1001479a:	add    DWORD PTR [eax],edx
1001479c:	mov    esp,0xe010013e
100147a1:	add    DWORD PTR ds:[eax],edx
100147a4:	arpl   WORD PTR [edi],di
100147a6:	add    DWORD PTR [eax],edx
100147a8:	jnp    0x100147e9
100147aa:	add    DWORD PTR [eax],edx
100147ac:	ins    BYTE PTR es:[edi],dx
100147ad:	aas    
100147ae:	add    DWORD PTR [eax],edx
100147b0:	mov    ah,0x3f
100147b2:	add    DWORD PTR [eax],edx
100147b4:	aaa    
100147b5:	inc    eax
100147b6:	add    DWORD PTR [eax],edx
100147b8:	add    DWORD PTR [ecx+0x1],eax
100147bb:	adc    BYTE PTR [edi],al
100147bd:	inc    ecx
100147be:	add    DWORD PTR [eax],edx
100147c0:	scas   al,BYTE PTR es:[edi]
100147c1:	inc    ecx
100147c2:	add    DWORD PTR [eax],edx
100147c4:	leave  
100147c5:	inc    ecx
100147c6:	add    DWORD PTR [eax],edx
100147c8:	cmp    al,BYTE PTR [edx+0x1]
100147cb:	adc    BYTE PTR [ecx+0x3a100142],dl
100147d1:	inc    ebx
100147d2:	add    DWORD PTR [eax],edx
100147d4:	aad    0x43
100147d6:	add    DWORD PTR [eax],edx
100147d8:	jp     0x1001481e
100147da:	add    DWORD PTR [eax],edx
100147dc:	fadd   DWORD PTR [ecx+eax*1+0x10]
100147e0:	push   0x44
100147e2:	add    DWORD PTR [eax],edx
100147e4:	jae    0x1001482a
100147e6:	add    DWORD PTR [eax],edx
100147e8:	rol    BYTE PTR [ecx+0x1],cl
100147eb:	adc    al,ch
100147ed:	inc    ecx
100147ee:	add    DWORD PTR [eax],edx
100147f0:	adc    DWORD PTR [edx+0x1],eax
100147f3:	adc    BYTE PTR [edi-0x45effec3],ch
100147f9:	cmp    eax,0x3dd51001
100147fe:	add    DWORD PTR [eax],edx
10014800:	icebp  
10014801:	cmp    eax,0x3dc91001
10014806:	add    DWORD PTR [eax],edx
10014808:	xor    al,BYTE PTR [esi+0x1]
1001480b:	adc    BYTE PTR [edx],dl
1001480d:	inc    ebp
1001480e:	add    DWORD PTR [eax],edx
10014810:	and    al,0x45
10014812:	add    DWORD PTR [eax],edx
10014814:	ins    BYTE PTR es:[edi],dx
10014815:	inc    ebp
10014816:	add    DWORD PTR [eax],edx
10014818:	xchg   ebp,eax
10014819:	inc    ebp
1001481a:	add    DWORD PTR [eax],edx
1001481c:	jecxz  0x10014863
1001481e:	add    DWORD PTR [eax],edx
10014820:	clc    
10014821:	inc    ebp
10014822:	add    DWORD PTR [eax],edx
10014824:	or     al,BYTE PTR [esi+0x1]
10014827:	adc    al,bh
10014829:	cmp    BYTE PTR [ecx],al
1001482b:	adc    BYTE PTR [eax],al
1001482d:	add    DWORD PTR [edx],eax
1001482f:	add    eax,DWORD PTR [eax*1+0x9080706]
10014836:	or     cl,BYTE PTR [ebx]
10014838:	or     al,0xd
1001483a:	xor    esi,DWORD PTR [ebx]
1001483c:	xor    esi,DWORD PTR [ebx]
1001483e:	xor    esi,DWORD PTR [ebx]
10014840:	xor    esi,DWORD PTR [ebx]
10014842:	xor    esi,DWORD PTR [ebx]
10014844:	xor    esi,DWORD PTR [ebx]
10014846:	xor    esi,DWORD PTR [ebx]
10014848:	push   cs
10014849:	movups xmm2,XMMWORD PTR [ecx]
1001484c:	adc    dl,BYTE PTR [ebx]
1001484e:	adc    al,0x14
10014850:	xor    edx,DWORD PTR ds:0x33161633
10014856:	xor    esi,DWORD PTR [ebx]
10014858:	xor    esi,DWORD PTR [ebx]
1001485a:	xor    esi,DWORD PTR [ebx]
1001485c:	pop    ss
1001485d:	sbb    BYTE PTR [ecx],bl
1001485f:	sbb    bl,BYTE PTR [ebx]
10014861:	sbb    al,0x1d
10014863:	push   ds
10014864:	pop    ds
10014865:	and    BYTE PTR [ecx],ah
10014867:	and    ah,BYTE PTR [ebx]
10014869:	and    al,0x25
1001486b:	es daa 
1001486d:	xor    esi,DWORD PTR [ebx]
1001486f:	sub    BYTE PTR [ecx],ch
10014871:	xor    esi,DWORD PTR [ebx]
10014873:	xor    esi,DWORD PTR [ebx]
10014875:	sub    dh,BYTE PTR [ebx]
10014877:	xor    esi,DWORD PTR [ebx]
10014879:	sub    esi,DWORD PTR [ebx]
1001487b:	xor    ebp,DWORD PTR [ebp*1+0x33302f2e]
10014882:	xor    DWORD PTR [edx],esi
10014884:	int3   
10014885:	int3   
10014886:	int3   
10014887:	int3   
10014888:	int3   
10014889:	int3   
1001488a:	int3   
1001488b:	int3   
1001488c:	int3   
1001488d:	int3   
1001488e:	int3   
1001488f:	int3   
10014890:	mov    eax,DWORD PTR [esp+0x4]
10014894:	add    eax,0xffffffda
10014897:	cmp    eax,0xcd
1001489c:	ja     0x100148bd
1001489e:	movzx  eax,BYTE PTR [eax+0x100148cc]
100148a5:	jmp    DWORD PTR [eax*4+0x100148c0]
100148ac:	xor    eax,eax
100148ae:	cmp    DWORD PTR [esp+0x8],0x2
100148b3:	sete   al
100148b6:	ret    
100148b7:	mov    eax,0x1
100148bc:	ret    
100148bd:	xor    eax,eax
100148bf:	ret    
100148c0:	mov    bh,0x48
100148c2:	add    DWORD PTR [eax],edx
100148c4:	lods   al,BYTE PTR ds:[esi]
100148c5:	dec    eax
100148c6:	add    DWORD PTR [eax],edx
100148c8:	mov    ebp,0x100148
100148cd:	add    al,BYTE PTR [edx]
100148cf:	add    al,BYTE PTR [edx]
100148d1:	add    al,BYTE PTR [edx]
100148d3:	add    al,BYTE PTR [eax]
100148d5:	add    al,BYTE PTR [edx]
100148d7:	add    al,BYTE PTR [edx]
100148d9:	add    al,BYTE PTR [edx]
100148db:	add    al,BYTE PTR [eax]
100148dd:	add    al,BYTE PTR [edx]
100148df:	add    al,BYTE PTR [edx]
100148e1:	add    al,BYTE PTR [edx]
100148e3:	add    al,BYTE PTR [eax]
100148e5:	add    al,BYTE PTR [ecx]
100148e7:	add    DWORD PTR [ecx],eax
100148e9:	add    DWORD PTR [ecx],eax
100148eb:	add    DWORD PTR [ecx],eax
100148ed:	add    DWORD PTR [ecx],eax
100148ef:	add    DWORD PTR [ecx],eax
100148f1:	add    DWORD PTR [ecx],eax
100148f3:	add    DWORD PTR [ecx],eax
100148f5:	add    DWORD PTR [edx],eax
100148f7:	add    al,BYTE PTR [edx]
100148f9:	add    al,BYTE PTR [edx]
100148fb:	add    al,BYTE PTR [edx]
100148fd:	add    al,BYTE PTR [edx]
100148ff:	add    al,BYTE PTR [edx]
10014901:	add    al,BYTE PTR [edx]
10014903:	add    al,BYTE PTR [edx]
10014905:	add    al,BYTE PTR [edx]
10014907:	add    al,BYTE PTR [edx]
10014909:	add    al,BYTE PTR [eax]
1001490b:	add    BYTE PTR [eax],al
1001490d:	add    BYTE PTR [edx],al
1001490f:	add    al,BYTE PTR [edx]
10014911:	add    al,BYTE PTR [edx]
10014913:	add    al,BYTE PTR [edx]
10014915:	add    al,BYTE PTR [edx]
10014917:	add    al,BYTE PTR [edx]
10014919:	add    al,BYTE PTR [edx]
1001491b:	add    al,BYTE PTR [edx]
1001491d:	add    al,BYTE PTR [edx]
1001491f:	add    al,BYTE PTR [edx]
10014921:	add    al,BYTE PTR [edx]
10014923:	add    al,BYTE PTR [edx]
10014925:	add    al,BYTE PTR [edx]
10014927:	add    al,BYTE PTR [edx]
10014929:	add    al,BYTE PTR [edx]
1001492b:	add    al,BYTE PTR [edx]
1001492d:	add    al,BYTE PTR [edx]
1001492f:	add    al,BYTE PTR [edx]
10014931:	add    al,BYTE PTR [edx]
10014933:	add    al,BYTE PTR [edx]
10014935:	add    al,BYTE PTR [edx]
10014937:	add    al,BYTE PTR [edx]
10014939:	add    al,BYTE PTR [edx]
1001493b:	add    al,BYTE PTR [edx]
1001493d:	add    al,BYTE PTR [edx]
1001493f:	add    al,BYTE PTR [edx]
10014941:	add    al,BYTE PTR [edx]
10014943:	add    al,BYTE PTR [edx]
10014945:	add    al,BYTE PTR [edx]
10014947:	add    al,BYTE PTR [edx]
10014949:	add    al,BYTE PTR [edx]
1001494b:	add    al,BYTE PTR [edx]
1001494d:	add    al,BYTE PTR [edx]
1001494f:	add    al,BYTE PTR [edx]
10014951:	add    al,BYTE PTR [edx]
10014953:	add    al,BYTE PTR [edx]
10014955:	add    al,BYTE PTR [edx]
10014957:	add    al,BYTE PTR [edx]
10014959:	add    al,BYTE PTR [edx]
1001495b:	add    al,BYTE PTR [edx]
1001495d:	add    al,BYTE PTR [edx]
1001495f:	add    al,BYTE PTR [edx]
10014961:	add    al,BYTE PTR [edx]
10014963:	add    al,BYTE PTR [edx]
10014965:	add    al,BYTE PTR [edx]
10014967:	add    al,BYTE PTR [edx]
10014969:	add    al,BYTE PTR [eax]
1001496b:	add    BYTE PTR [edx],al
1001496d:	add    al,BYTE PTR [edx]
1001496f:	add    al,BYTE PTR [edx]
10014971:	add    al,BYTE PTR [edx]
10014973:	add    al,BYTE PTR [edx]
10014975:	add    al,BYTE PTR [edx]
10014977:	add    al,BYTE PTR [edx]
10014979:	add    al,BYTE PTR [edx]
1001497b:	add    al,BYTE PTR [edx]
1001497d:	add    al,BYTE PTR [edx]
1001497f:	add    al,BYTE PTR [edx]
10014981:	add    al,BYTE PTR [edx]
10014983:	add    al,BYTE PTR [edx]
10014985:	add    al,BYTE PTR [edx]
10014987:	add    al,BYTE PTR [edx]
10014989:	add    al,BYTE PTR [edx]
1001498b:	add    al,BYTE PTR [edx]
1001498d:	add    al,BYTE PTR [edx]
1001498f:	add    al,BYTE PTR [edx]
10014991:	add    al,BYTE PTR [edx]
10014993:	add    al,BYTE PTR [edx]
10014995:	add    al,BYTE PTR [eax]
10014997:	add    al,BYTE PTR [eax]
10014999:	add    ah,cl
1001499b:	int3   
1001499c:	int3   
1001499d:	int3   
1001499e:	int3   
1001499f:	int3   
100149a0:	mov    eax,DWORD PTR [esp+0x4]
100149a4:	mov    ecx,DWORD PTR [esp+0x8]
100149a8:	mov    ecx,DWORD PTR [eax+ecx*4+0x2c]
100149ac:	cmp    ecx,0xffffffff
100149af:	je     0x100149bc
100149b1:	mov    edx,0x1
100149b6:	shl    edx,cl
100149b8:	or     WORD PTR [eax+0x1c],dx
100149bc:	ret    
100149bd:	int3   
100149be:	int3   
100149bf:	int3   
100149c0:	push   esi
100149c1:	push   edi
100149c2:	mov    edi,DWORD PTR [esp+0xc]
100149c6:	xor    esi,esi
100149c8:	push   esi
100149c9:	push   edi
100149ca:	call   0x100149a0
100149cf:	add    esi,0x1
100149d2:	add    esp,0x8
100149d5:	cmp    esi,0x5
100149d8:	jl     0x100149c8
100149da:	pop    edi
100149db:	pop    esi
100149dc:	ret    
100149dd:	int3   
100149de:	int3   
100149df:	int3   
100149e0:	push   ebx
100149e1:	push   esi
100149e2:	mov    esi,DWORD PTR [esp+0xc]
100149e6:	mov    ebx,DWORD PTR [esi+0x4]
100149e9:	xor    ebx,DWORD PTR [esi]
100149eb:	test   ebx,0x2000000
100149f1:	je     0x100149fe
100149f3:	push   0x0
100149f5:	push   esi
100149f6:	call   0x100149a0
100149fb:	add    esp,0x8
100149fe:	test   ebx,0x1f80
10014a04:	je     0x10014a11
10014a06:	push   0x2
10014a08:	push   esi
10014a09:	call   0x100149a0
10014a0e:	add    esp,0x8
10014a11:	test   bl,0x70
10014a14:	je     0x10014a21
10014a16:	push   0x1
10014a18:	push   esi
10014a19:	call   0x100149a0
10014a1e:	add    esp,0x8
10014a21:	test   ebx,0x2000
10014a27:	je     0x10014a34
10014a29:	push   0x3
10014a2b:	push   esi
10014a2c:	call   0x100149a0
10014a31:	add    esp,0x8
10014a34:	test   ebx,0x4000
10014a3a:	je     0x10014a47
10014a3c:	push   0x4
10014a3e:	push   esi
10014a3f:	call   0x100149a0
10014a44:	add    esp,0x8
10014a47:	mov    ax,WORD PTR [esi+0x1c]
10014a4b:	pop    esi
10014a4c:	pop    ebx
10014a4d:	ret    
10014a4e:	int3   
10014a4f:	int3   
10014a50:	push   esi
10014a51:	mov    esi,DWORD PTR [esp+0x10]
10014a55:	push   edi
10014a56:	mov    edi,DWORD PTR [esp+0xc]
10014a5a:	push   esi
10014a5b:	push   edi
10014a5c:	call   0x100149a0
10014a61:	mov    eax,DWORD PTR [esp+0x18]
10014a65:	add    esp,0x8
10014a68:	mov    DWORD PTR [edi+esi*4+0x2c],eax
10014a6c:	pop    edi
10014a6d:	pop    esi
10014a6e:	ret    
10014a6f:	int3   
10014a70:	push   ebx
10014a71:	mov    ebx,DWORD PTR [esp+0x8]
10014a75:	push   esi
10014a76:	mov    esi,DWORD PTR [esp+0x14]
10014a7a:	push   edi
10014a7b:	xor    edi,edi
10014a7d:	cmp    DWORD PTR [esp+0x14],edi
10014a81:	jle    0x10014bd7
10014a87:	mov    eax,ebx
10014a89:	sub    eax,DWORD PTR [esi+0x8]
10014a8c:	cmp    eax,0xf
10014a8f:	jge    0x10014bd7
10014a95:	movzx  eax,BYTE PTR [ebx]
10014a98:	add    eax,0xffffffda
10014a9b:	cmp    eax,0xcd
10014aa0:	ja     0x10014bd7
10014aa6:	movzx  ecx,BYTE PTR [eax+0x10014ce4]
10014aad:	jmp    DWORD PTR [ecx*4+0x10014cb0]
10014ab4:	cmp    DWORD PTR [esp+0x1c],0x2
10014ab9:	jne    0x10014bd7
10014abf:	or     DWORD PTR [esi],0x2000000
10014ac5:	movzx  edx,BYTE PTR [ebx]
10014ac8:	push   0x0
10014aca:	and    edx,0xf
10014acd:	push   edi
10014ace:	push   esi
10014acf:	mov    DWORD PTR [esi+0x28],edx
10014ad2:	mov    DWORD PTR [esi+0x14],ebx
10014ad5:	mov    DWORD PTR [esi+0x18],0x1
10014adc:	call   0x10014a50
10014ae1:	add    esp,0xc
10014ae4:	jmp    0x10014bbe
10014ae9:	or     DWORD PTR [esi],0x10
10014aec:	push   0x1
10014aee:	push   esi
10014aef:	call   0x100149a0
10014af4:	mov    DWORD PTR [esi+0x30],edi
10014af7:	jmp    0x10014bbb
10014afc:	or     DWORD PTR [esi],0x20
10014aff:	push   0x1
10014b01:	push   esi
10014b02:	call   0x100149a0
10014b07:	mov    DWORD PTR [esi+0x30],edi
10014b0a:	jmp    0x10014bbb
10014b0f:	or     DWORD PTR [esi],0x40
10014b12:	push   0x1
10014b14:	push   esi
10014b15:	call   0x100149a0
10014b1a:	mov    DWORD PTR [esi+0x30],edi
10014b1d:	jmp    0x10014bbb
10014b22:	or     DWORD PTR [esi],0x80
10014b28:	push   0x2
10014b2a:	push   esi
10014b2b:	call   0x100149a0
10014b30:	mov    DWORD PTR [esi+0x34],edi
10014b33:	jmp    0x10014bbb
10014b38:	or     DWORD PTR [esi],0x100
10014b3e:	push   0x2
10014b40:	push   esi
10014b41:	call   0x100149a0
10014b46:	mov    DWORD PTR [esi+0x34],edi
10014b49:	jmp    0x10014bbb
10014b4b:	or     DWORD PTR [esi],0x200
10014b51:	push   0x2
10014b53:	push   esi
10014b54:	call   0x100149a0
10014b59:	mov    DWORD PTR [esi+0x34],edi
10014b5c:	jmp    0x10014bbb
10014b5e:	or     DWORD PTR [esi],0x400
10014b64:	push   0x2
10014b66:	push   esi
10014b67:	call   0x100149a0
10014b6c:	mov    DWORD PTR [esi+0x34],edi
10014b6f:	jmp    0x10014bbb
10014b71:	or     DWORD PTR [esi],0x800
10014b77:	push   0x2
10014b79:	push   esi
10014b7a:	call   0x100149a0
10014b7f:	mov    DWORD PTR [esi+0x34],edi
10014b82:	jmp    0x10014bbb
10014b84:	or     DWORD PTR [esi],0x1000
10014b8a:	push   0x2
10014b8c:	push   esi
10014b8d:	call   0x100149a0
10014b92:	mov    DWORD PTR [esi+0x34],edi
10014b95:	jmp    0x10014bbb
10014b97:	or     DWORD PTR [esi],0x2000
10014b9d:	push   0x3
10014b9f:	push   esi
10014ba0:	call   0x100149a0
10014ba5:	mov    DWORD PTR [esi+0x38],edi
10014ba8:	jmp    0x10014bbb
10014baa:	or     DWORD PTR [esi],0x4000
10014bb0:	push   0x4
10014bb2:	push   esi
10014bb3:	call   0x100149a0
10014bb8:	mov    DWORD PTR [esi+0x3c],edi
10014bbb:	add    esp,0x8
10014bbe:	mov    eax,DWORD PTR [esp+0x14]
10014bc2:	sub    eax,0x1
10014bc5:	add    ebx,0x1
10014bc8:	add    edi,0x1
10014bcb:	test   eax,eax
10014bcd:	mov    DWORD PTR [esp+0x14],eax
10014bd1:	jg     0x10014a87
10014bd7:	mov    eax,0x2
10014bdc:	cmp    DWORD PTR [esp+0x14],eax
10014be0:	mov    dl,0xc0
10014be2:	jl     0x10014c31
10014be4:	cmp    BYTE PTR [ebx],0xc5
10014be7:	jne    0x10014c31
10014be9:	mov    ecx,ebx
10014beb:	sub    ecx,DWORD PTR [esi+0x8]
10014bee:	cmp    ecx,0xd
10014bf1:	jg     0x10014c31
10014bf3:	cmp    DWORD PTR [esp+0x1c],eax
10014bf7:	je     0x10014bfe
10014bf9:	cmp    BYTE PTR [ebx+0x1],dl
10014bfc:	jb     0x10014c31
10014bfe:	or     DWORD PTR [esi],0x20000000
10014c04:	lea    eax,[ebx+0x1]
10014c07:	mov    edi,0x2
10014c0c:	mov    DWORD PTR [esi+0x10],eax
10014c0f:	mov    DWORD PTR [esi+0x18],edi
10014c12:	mov    al,BYTE PTR [eax]
10014c14:	movzx  ecx,al
10014c17:	not    ecx
10014c19:	test   cl,cl
10014c1b:	jns    0x10014c27
10014c1d:	cmp    DWORD PTR [esp+0x1c],edi
10014c21:	jne    0x10014c27
10014c23:	or     DWORD PTR [esi+0x28],0x4
10014c27:	test   al,0x4
10014c29:	je     0x10014c2f
10014c2b:	or     DWORD PTR [esi+0x28],0x10
10014c2f:	add    ebx,edi
10014c31:	mov    edi,0x3
10014c36:	cmp    DWORD PTR [esp+0x14],edi
10014c3a:	jl     0x10014ca8
10014c3c:	cmp    BYTE PTR [ebx],0xc4
10014c3f:	jne    0x10014ca8
10014c41:	mov    eax,ebx
10014c43:	sub    eax,DWORD PTR [esi+0x8]
10014c46:	cmp    eax,0xc
10014c49:	jg     0x10014ca8
10014c4b:	mov    ecx,DWORD PTR [esi]
10014c4d:	mov    eax,ecx
10014c4f:	not    eax
10014c51:	test   eax,0x20000000
10014c56:	je     0x10014ca8
10014c58:	cmp    DWORD PTR [esp+0x1c],0x2
10014c5d:	je     0x10014c64
10014c5f:	cmp    BYTE PTR [ebx+0x1],dl
10014c62:	jb     0x10014ca8
10014c64:	or     ecx,0x20000000
10014c6a:	lea    eax,[ebx+0x1]
10014c6d:	mov    DWORD PTR [esi],ecx
10014c6f:	mov    DWORD PTR [esi+0x10],eax
10014c72:	mov    DWORD PTR [esi+0x18],edi
10014c75:	movzx  ecx,BYTE PTR [eax]
10014c78:	not    ecx
10014c7a:	sar    ecx,0x5
10014c7d:	and    ecx,0x7
10014c80:	or     DWORD PTR [esi+0x28],ecx
10014c83:	mov    al,BYTE PTR [eax+0x1]
10014c86:	test   al,0x4
10014c88:	mov    ecx,DWORD PTR [esi+0x28]
10014c8b:	je     0x10014c93
10014c8d:	or     ecx,0x10
10014c90:	mov    DWORD PTR [esi+0x28],ecx
10014c93:	test   al,al
10014c95:	jns    0x10014c9b
10014c97:	or     DWORD PTR [esi+0x28],0x8
10014c9b:	cmp    DWORD PTR [esp+0x1c],0x2
10014ca0:	je     0x10014ca6
10014ca2:	and    DWORD PTR [esi+0x28],0xfffffff0
10014ca6:	add    ebx,edi
10014ca8:	pop    edi
10014ca9:	mov    DWORD PTR [esi+0xc],ebx
10014cac:	pop    esi
10014cad:	pop    ebx
10014cae:	ret    
10014caf:	nop
10014cb0:	pop    esi
10014cb1:	dec    ebx
10014cb2:	add    DWORD PTR [eax],edx
10014cb4:	and    cl,BYTE PTR [ebx+0x1]
10014cb7:	adc    BYTE PTR [eax],bh
10014cb9:	dec    ebx
10014cba:	add    DWORD PTR [eax],edx
10014cbc:	dec    ebx
10014cbd:	dec    ebx
10014cbe:	add    DWORD PTR [eax],edx
10014cc0:	mov    ah,0x4a
10014cc2:	add    DWORD PTR [eax],edx
10014cc4:	jno    0x10014d11
10014cc6:	add    DWORD PTR [eax],edx
10014cc8:	test   BYTE PTR [ebx+0x1],cl
10014ccb:	adc    BYTE PTR [edi-0x55effeb5],dl
10014cd1:	dec    ebx
10014cd2:	add    DWORD PTR [eax],edx
10014cd4:	jmp    0xc114e23
10014cd9:	dec    edx
10014cda:	add    DWORD PTR [eax],edx
10014cdc:	cmovnp eax,DWORD PTR [ecx]
10014cdf:	adc    bh,dl
10014ce1:	dec    ebx
10014ce2:	add    DWORD PTR [eax],edx
10014ce4:	add    BYTE PTR [esp+ecx*1],cl
10014ce7:	or     al,0xc
10014ce9:	or     al,0xc
10014ceb:	or     al,0x1
10014ced:	or     al,0xc
10014cef:	or     al,0xc
10014cf1:	or     al,0xc
10014cf3:	or     al,0x2
10014cf5:	or     al,0xc
10014cf7:	or     al,0xc
10014cf9:	or     al,0xc
10014cfb:	or     al,0x3
10014cfd:	or     al,0x4
10014cff:	add    al,0x4
10014d01:	add    al,0x4
10014d03:	add    al,0x4
10014d05:	add    al,0x4
10014d07:	add    al,0x4
10014d09:	add    al,0x4
10014d0b:	add    al,0x4
10014d0d:	add    al,0xc
10014d0f:	or     al,0xc
10014d11:	or     al,0xc
10014d13:	or     al,0xc
10014d15:	or     al,0xc
10014d17:	or     al,0xc
10014d19:	or     al,0xc
10014d1b:	or     al,0xc
10014d1d:	or     al,0xc
10014d1f:	or     al,0xc
10014d21:	or     al,0x5
10014d23:	push   es
10014d24:	pop    es
10014d25:	or     BYTE PTR [esp+ecx*1],cl
10014d28:	or     al,0xc
10014d2a:	or     al,0xc
10014d2c:	or     al,0xc
10014d2e:	or     al,0xc
10014d30:	or     al,0xc
10014d32:	or     al,0xc
10014d34:	or     al,0xc
10014d36:	or     al,0xc
10014d38:	or     al,0xc
10014d3a:	or     al,0xc
10014d3c:	or     al,0xc
10014d3e:	or     al,0xc
10014d40:	or     al,0xc
10014d42:	or     al,0xc
10014d44:	or     al,0xc
10014d46:	or     al,0xc
10014d48:	or     al,0xc
10014d4a:	or     al,0xc
10014d4c:	or     al,0xc
10014d4e:	or     al,0xc
10014d50:	or     al,0xc
10014d52:	or     al,0xc
10014d54:	or     al,0xc
10014d56:	or     al,0xc
10014d58:	or     al,0xc
10014d5a:	or     al,0xc
10014d5c:	or     al,0xc
10014d5e:	or     al,0xc
10014d60:	or     al,0xc
10014d62:	or     al,0xc
10014d64:	or     al,0xc
10014d66:	or     al,0xc
10014d68:	or     al,0xc
10014d6a:	or     al,0xc
10014d6c:	or     al,0xc
10014d6e:	or     al,0xc
10014d70:	or     al,0xc
10014d72:	or     al,0xc
10014d74:	or     al,0xc
10014d76:	or     al,0xc
10014d78:	or     al,0xc
10014d7a:	or     al,0xc
10014d7c:	or     al,0xc
10014d7e:	or     al,0xc
10014d80:	or     al,0xc
10014d82:	or     al,0xc
10014d84:	or     al,0xc
10014d86:	or     al,0xc
10014d88:	or     al,0xc
10014d8a:	or     al,0xc
10014d8c:	or     al,0xc
10014d8e:	or     al,0xc
10014d90:	or     al,0xc
10014d92:	or     al,0xc
10014d94:	or     al,0xc
10014d96:	or     al,0xc
10014d98:	or     al,0xc
10014d9a:	or     al,0xc
10014d9c:	or     al,0xc
10014d9e:	or     al,0xc
10014da0:	or     al,0xc
10014da2:	or     al,0xc
10014da4:	or     al,0xc
10014da6:	or     al,0xc
10014da8:	or     al,0xc
10014daa:	or     al,0xc
10014dac:	or     al,0xc
10014dae:	or     DWORD PTR [edx+ecx*1],ecx
10014db1:	or     ecx,esp
10014db3:	int3   
10014db4:	int3   
10014db5:	int3   
10014db6:	int3   
10014db7:	int3   
10014db8:	int3   
10014db9:	int3   
10014dba:	int3   
10014dbb:	int3   
10014dbc:	int3   
10014dbd:	int3   
10014dbe:	int3   
10014dbf:	int3   
10014dc0:	push   esi
10014dc1:	mov    esi,DWORD PTR [esp+0xc]
10014dc5:	mov    eax,DWORD PTR [esi]
10014dc7:	push   edi
10014dc8:	mov    edi,DWORD PTR [esp+0x14]
10014dcc:	cmp    edi,0x2
10014dcf:	jne    0x10014dd8
10014dd1:	and    eax,0x1800
10014dd6:	jmp    0x10014ddd
10014dd8:	and    eax,0x1f80
10014ddd:	test   eax,eax
10014ddf:	mov    ecx,DWORD PTR [esp+0x18]
10014de3:	mov    edx,DWORD PTR [esp+0xc]
10014de7:	je     0x10014df2
10014de9:	cmp    eax,edx
10014deb:	je     0x10014df2
10014ded:	or     DWORD PTR [esi+0x4],eax
10014df0:	jmp    0x10014df8
10014df2:	or     BYTE PTR [ecx+0xc],0x80
10014df6:	mov    eax,edx
10014df8:	cmp    eax,0x400
10014dfd:	ja     0x10014e2e
10014dff:	je     0x10014e28
10014e01:	cmp    eax,0x80
10014e06:	je     0x10014e22
10014e08:	cmp    eax,0x100
10014e0d:	je     0x10014e1c
10014e0f:	cmp    eax,0x200
10014e14:	jne    0x10014e46
10014e16:	or     BYTE PTR [ecx+0xc],0x47
10014e1a:	jmp    0x10014e46
10014e1c:	or     BYTE PTR [ecx+0xc],0x46
10014e20:	jmp    0x10014e46
10014e22:	or     BYTE PTR [ecx+0xc],0x45
10014e26:	jmp    0x10014e46
10014e28:	or     BYTE PTR [ecx+0xc],0x44
10014e2c:	jmp    0x10014e46
10014e2e:	cmp    eax,0x800
10014e33:	je     0x10014e42
10014e35:	cmp    eax,0x1000
10014e3a:	jne    0x10014e46
10014e3c:	or     BYTE PTR [ecx+0xc],0x49
10014e40:	jmp    0x10014e46
10014e42:	or     BYTE PTR [ecx+0xc],0x48
10014e46:	cmp    edi,0x2
10014e49:	pop    edi
10014e4a:	pop    esi
10014e4b:	jne    0x10014e58
10014e4d:	test   eax,0x780
10014e52:	je     0x10014e58
10014e54:	mov    BYTE PTR [ecx+0xc],0xff
10014e58:	ret    
10014e59:	int3   
10014e5a:	int3   
10014e5b:	int3   
10014e5c:	int3   
10014e5d:	int3   
10014e5e:	int3   
10014e5f:	int3   
10014e60:	mov    ecx,DWORD PTR [esi]
10014e62:	mov    eax,ecx
10014e64:	and    eax,0x2060
10014e69:	cmp    eax,0x40
10014e6c:	push   edi
10014e6d:	ja     0x10014eaf
10014e6f:	je     0x10014e9d
10014e71:	test   eax,eax
10014e73:	je     0x10014e8f
10014e75:	cmp    eax,0x20
10014e78:	jne    0x10014eb6
10014e7a:	mov    eax,DWORD PTR [edx+0x4]
10014e7d:	movzx  eax,BYTE PTR [eax+0x3]
10014e81:	mov    edi,DWORD PTR [edx+0x8]
10014e84:	mov    eax,DWORD PTR [edi+eax*4]
10014e87:	and    ecx,0xffffffdf
10014e8a:	jmp    0x10014f16
10014e8f:	mov    ecx,DWORD PTR [edx+0x4]
10014e92:	movzx  eax,BYTE PTR [ecx]
10014e95:	mov    ecx,DWORD PTR [edx+0x8]
10014e98:	mov    eax,DWORD PTR [ecx+eax*4]
10014e9b:	jmp    0x10014f18
10014e9d:	mov    eax,DWORD PTR [edx+0x4]
10014ea0:	movzx  eax,BYTE PTR [eax+0x2]
10014ea4:	mov    edi,DWORD PTR [edx+0x8]
10014ea7:	mov    eax,DWORD PTR [edi+eax*4]
10014eaa:	and    ecx,0xffffffbf
10014ead:	jmp    0x10014f16
10014eaf:	cmp    eax,0x2000
10014eb4:	je     0x10014efc
10014eb6:	mov    eax,ecx
10014eb8:	and    eax,0x60
10014ebb:	cmp    al,0x60
10014ebd:	je     0x10014ef8
10014ebf:	test   cl,0x20
10014ec2:	je     0x10014ed0
10014ec4:	mov    eax,DWORD PTR [edx+0x4]
10014ec7:	movzx  eax,BYTE PTR [eax+0x3]
10014ecb:	and    ecx,0xffffffdf
10014ece:	jmp    0x10014edf
10014ed0:	test   cl,0x40
10014ed3:	je     0x10014ef8
10014ed5:	mov    eax,DWORD PTR [edx+0x4]
10014ed8:	movzx  eax,BYTE PTR [eax+0x2]
10014edc:	and    ecx,0xffffffbf
10014edf:	mov    edi,DWORD PTR [edx+0x8]
10014ee2:	mov    eax,DWORD PTR [edi+eax*4]
10014ee5:	test   eax,eax
10014ee7:	mov    DWORD PTR [esi],ecx
10014ee9:	je     0x10014ef8
10014eeb:	mov    ecx,DWORD PTR [eax+0x8]
10014eee:	not    ecx
10014ef0:	test   ecx,0x2000
10014ef6:	je     0x10014f18
10014ef8:	xor    eax,eax
10014efa:	pop    edi
10014efb:	ret    
10014efc:	mov    eax,DWORD PTR [edx+0x4]
10014eff:	movzx  eax,BYTE PTR [eax+0x1]
10014f03:	mov    edi,DWORD PTR [edx+0x8]
10014f06:	mov    eax,DWORD PTR [edi+eax*4]
10014f09:	mov    DWORD PTR [esi+0x20],0x1
10014f10:	and    ecx,0xffffdfff
10014f16:	mov    DWORD PTR [esi],ecx
10014f18:	test   eax,eax
10014f1a:	jne    0x10014f28
10014f1c:	mov    ecx,DWORD PTR [edx+0x4]
10014f1f:	movzx  eax,BYTE PTR [ecx]
10014f22:	mov    ecx,DWORD PTR [edx+0x8]
10014f25:	mov    eax,DWORD PTR [ecx+eax*4]
10014f28:	pop    edi
10014f29:	ret    
10014f2a:	int3   
10014f2b:	int3   
10014f2c:	int3   
10014f2d:	int3   
10014f2e:	int3   
10014f2f:	int3   
10014f30:	test   DWORD PTR [edx],0x2002070
10014f36:	mov    ecx,DWORD PTR [edx+0x10]
10014f39:	mov    al,BYTE PTR [ecx]
10014f3b:	push   ebx
10014f3c:	mov    ebx,0x4
10014f41:	je     0x10014f47
10014f43:	xor    eax,eax
10014f45:	pop    ebx
10014f46:	ret    
10014f47:	cmp    DWORD PTR [edx+0x18],0x2
10014f4b:	push   ebp
10014f4c:	push   esi
10014f4d:	jne    0x10014f68
10014f4f:	movzx  ecx,al
10014f52:	mov    eax,ecx
10014f54:	not    eax
10014f56:	sar    eax,0x3
10014f59:	and    al,0xf
10014f5b:	movzx  esi,al
10014f5e:	mov    DWORD PTR [edx+0x24],esi
10014f61:	mov    esi,0x1
10014f66:	jmp    0x10014f80
10014f68:	movzx  ecx,BYTE PTR [ecx+0x1]
10014f6c:	and    eax,0x1f
10014f6f:	mov    esi,eax
10014f71:	mov    eax,ecx
10014f73:	not    eax
10014f75:	sar    eax,0x3
10014f78:	and    al,0xf
10014f7a:	movzx  ebp,al
10014f7d:	mov    DWORD PTR [edx+0x24],ebp
10014f80:	and    ecx,0x3
10014f83:	sub    esi,0x1
10014f86:	je     0x10014fa4
10014f88:	sub    esi,0x1
10014f8b:	je     0x10014f9d
10014f8d:	sub    esi,0x1
10014f90:	jne    0x10015041
10014f96:	mov    edx,0x10060484
10014f9b:	jmp    0x10014fa9
10014f9d:	mov    edx,0x10061ff4
10014fa2:	jmp    0x10014fa9
10014fa4:	mov    edx,0x10063870
10014fa9:	test   al,al
10014fab:	jne    0x10014fb2
10014fad:	mov    ebx,0x8
10014fb2:	add    ebx,ecx
10014fb4:	add    DWORD PTR [edi+0x14],0xffffffff
10014fb8:	mov    esi,DWORD PTR [edi+0x14]
10014fbb:	js     0x10015041
10014fc1:	mov    ecx,DWORD PTR [edi+0x10]
10014fc4:	movzx  eax,BYTE PTR [ecx]
10014fc7:	mov    ebp,DWORD PTR [edx+0x4]
10014fca:	movzx  eax,BYTE PTR [eax+ebp*1]
10014fce:	mov    edx,DWORD PTR [edx+0x8]
10014fd1:	mov    eax,DWORD PTR [edx+eax*4]
10014fd4:	test   eax,eax
10014fd6:	je     0x10015041
10014fd8:	mov    dl,BYTE PTR [eax]
10014fda:	cmp    dl,0x5
10014fdd:	je     0x10015030
10014fdf:	cmp    dl,0x1
10014fe2:	je     0x10015041
10014fe4:	cmp    dl,0x4
10014fe7:	je     0x10015041
10014fe9:	lea    edx,[ecx+0x1]
10014fec:	lea    ecx,[esi-0x1]
10014fef:	test   ecx,ecx
10014ff1:	mov    DWORD PTR [edi+0x10],edx
10014ff4:	mov    DWORD PTR [edi+0x14],ecx
10014ff7:	jl     0x10015041
10014ff9:	mov    cl,BYTE PTR [eax]
10014ffb:	cmp    cl,0x2
10014ffe:	jne    0x10015012
10015000:	movzx  ecx,BYTE PTR [edx]
10015003:	mov    edx,DWORD PTR [eax+0x4]
10015006:	shr    ecx,0x3
10015009:	and    ecx,0x7
1001500c:	movzx  ecx,BYTE PTR [ecx+edx*1]
10015010:	jmp    0x10015021
10015012:	cmp    cl,0x3
10015015:	jne    0x10015041
10015017:	movzx  ecx,BYTE PTR [edx]
1001501a:	mov    edx,DWORD PTR [eax+0x4]
1001501d:	movzx  ecx,BYTE PTR [edx+ecx*1]
10015021:	mov    edx,DWORD PTR [eax+0x8]
10015024:	mov    eax,DWORD PTR [edx+ecx*4]
10015027:	test   eax,eax
10015029:	je     0x10015041
1001502b:	cmp    BYTE PTR [eax],0x5
1001502e:	jne    0x10015041
10015030:	mov    ecx,DWORD PTR [eax+0x4]
10015033:	movzx  edx,BYTE PTR [ecx+ebx*1]
10015037:	mov    eax,DWORD PTR [eax+0x8]
1001503a:	mov    eax,DWORD PTR [eax+edx*4]
1001503d:	pop    esi
1001503e:	pop    ebp
1001503f:	pop    ebx
10015040:	ret    
10015041:	pop    esi
10015042:	pop    ebp
10015043:	xor    eax,eax
10015045:	pop    ebx
10015046:	ret    
10015047:	int3   
10015048:	int3   
10015049:	int3   
1001504a:	int3   
1001504b:	int3   
1001504c:	int3   
1001504d:	int3   
1001504e:	int3   
1001504f:	int3   
10015050:	sub    esp,0x8
10015053:	push   ebx
10015054:	push   esi
10015055:	mov    esi,DWORD PTR [esp+0x18]
10015059:	mov    eax,DWORD PTR [esi+0x28]
1001505c:	xor    ebx,ebx
1001505e:	test   DWORD PTR [esi],0x20000000
10015064:	push   edi
10015065:	mov    edi,DWORD PTR [esp+0x18]
10015069:	mov    DWORD PTR [esp+0x10],eax
1001506d:	je     0x1001509f
1001506f:	mov    edx,esi
10015071:	call   0x10014f30
10015076:	test   eax,eax
10015078:	je     0x10015338
1001507e:	test   BYTE PTR [eax+0xc],0x10
10015082:	je     0x10015338
10015088:	mov    ecx,DWORD PTR [esi+0x28]
1001508b:	not    ecx
1001508d:	test   cl,0x10
10015090:	je     0x10015338
10015096:	pop    edi
10015097:	pop    esi
10015098:	xor    eax,eax
1001509a:	pop    ebx
1001509b:	add    esp,0x8
1001509e:	ret    
1001509f:	push   ebp
100150a0:	or     ebp,0xffffffff
100150a3:	add    DWORD PTR [edi+0x14],ebp
100150a6:	mov    eax,DWORD PTR [edi+0x14]
100150a9:	js     0x10015335
100150af:	mov    edx,DWORD PTR [edi+0x10]
100150b2:	movzx  ecx,BYTE PTR [edx]
100150b5:	cmp    ecx,0x9b
100150bb:	mov    DWORD PTR [esp+0x10],ecx
100150bf:	jne    0x100150e6
100150c1:	push   esi
100150c2:	lea    ebx,[ebp+0x2]
100150c5:	call   0x100149c0
100150ca:	add    DWORD PTR [edi+0x10],ebx
100150cd:	mov    ecx,DWORD PTR [edi+0x10]
100150d0:	add    esp,0x4
100150d3:	add    DWORD PTR [edi+0x14],ebp
100150d6:	mov    eax,DWORD PTR [edi+0x14]
100150d9:	js     0x10015335
100150df:	movzx  ecx,BYTE PTR [ecx]
100150e2:	mov    DWORD PTR [esp+0x10],ecx
100150e6:	mov    edx,DWORD PTR ds:0x100645d0
100150ec:	movzx  edx,BYTE PTR [edx+ecx*1]
100150f0:	mov    ebp,DWORD PTR ds:0x100645d4
100150f6:	mov    ebp,DWORD PTR [ebp+edx*4+0x0]
100150fa:	test   ebp,ebp
100150fc:	je     0x10015335
10015102:	cmp    BYTE PTR [ebp+0x0],0x1
10015106:	jne    0x1001519a
1001510c:	test   ebx,ebx
1001510e:	jne    0x1001519a
10015114:	mov    eax,ecx
10015116:	sub    eax,0x63
10015119:	je     0x1001517e
1001511b:	sub    eax,0x2a
1001511e:	je     0x10015163
10015120:	sub    eax,0x3
10015123:	jne    0x10015174
10015125:	test   BYTE PTR [esi],0x40
10015128:	je     0x1001513b
1001512a:	or     DWORD PTR [esi+0x4],0x40
1001512e:	pop    ebp
1001512f:	pop    edi
10015130:	pop    esi
10015131:	mov    eax,0x10064608
10015136:	pop    ebx
10015137:	add    esp,0x8
1001513a:	ret    
1001513b:	mov    eax,DWORD PTR [esp+0x14]
1001513f:	test   al,0x8
10015141:	je     0x1001514a
10015143:	or     DWORD PTR [esi+0x4],0x2000000
1001514a:	cmp    DWORD PTR [edi+0x18],0x2
1001514e:	jne    0x10015156
10015150:	not    eax
10015152:	test   al,0x1
10015154:	je     0x10015174
10015156:	pop    ebp
10015157:	pop    edi
10015158:	pop    esi
10015159:	mov    eax,0x100645fc
1001515e:	pop    ebx
1001515f:	add    esp,0x8
10015162:	ret    
10015163:	and    DWORD PTR [esi],0xffffe07f
10015169:	push   0x2
1001516b:	push   esi
1001516c:	call   0x100149a0
10015171:	add    esp,0x8
10015174:	mov    eax,ebp
10015176:	pop    ebp
10015177:	pop    edi
10015178:	pop    esi
10015179:	pop    ebx
1001517a:	add    esp,0x8
1001517d:	ret    
1001517e:	cmp    DWORD PTR [edi+0x18],0x2
10015182:	mov    eax,0x100645e4
10015187:	je     0x10015337
1001518d:	pop    ebp
1001518e:	pop    edi
1001518f:	pop    esi
10015190:	mov    eax,0x100645d8
10015195:	pop    ebx
10015196:	add    esp,0x8
10015199:	ret    
1001519a:	add    DWORD PTR [edi+0x10],0x1
1001519e:	mov    esi,DWORD PTR [edi+0x10]
100151a1:	lea    edx,[eax-0x1]
100151a4:	test   edx,edx
100151a6:	mov    DWORD PTR [edi+0x14],edx
100151a9:	jl     0x10015335
100151af:	mov    cl,BYTE PTR [ebp+0x0]
100151b2:	cmp    cl,0x2
100151b5:	movzx  eax,BYTE PTR [esi]
100151b8:	jne    0x100151d9
100151ba:	test   ebx,ebx
100151bc:	jne    0x100151d9
100151be:	mov    ecx,DWORD PTR [ebp+0x4]
100151c1:	shr    eax,0x3
100151c4:	and    eax,0x7
100151c7:	movzx  edx,BYTE PTR [eax+ecx*1]
100151cb:	mov    eax,DWORD PTR [ebp+0x8]
100151ce:	mov    eax,DWORD PTR [eax+edx*4]
100151d1:	pop    ebp
100151d2:	pop    edi
100151d3:	pop    esi
100151d4:	pop    ebx
100151d5:	add    esp,0x8
100151d8:	ret    
100151d9:	cmp    cl,0x4
100151dc:	jne    0x10015242
100151de:	cmp    eax,0xc0
100151e3:	jae    0x100151ed
100151e5:	shr    eax,0x3
100151e8:	and    eax,0x7
100151eb:	jmp    0x100151f2
100151ed:	sub    eax,0xb8
100151f2:	mov    ecx,DWORD PTR [ebp+0x4]
100151f5:	movzx  edx,BYTE PTR [ecx+eax*1]
100151f9:	mov    eax,DWORD PTR [ebp+0x8]
100151fc:	mov    eax,DWORD PTR [eax+edx*4]
100151ff:	test   eax,eax
10015201:	je     0x10015335
10015207:	cmp    BYTE PTR [eax],0x1
1001520a:	jne    0x1001522d
1001520c:	mov    ecx,DWORD PTR [eax+0x8]
1001520f:	not    ecx
10015211:	test   ecx,0x2000
10015217:	je     0x10015337
1001521d:	test   ebx,ebx
1001521f:	jne    0x10015335
10015225:	pop    ebp
10015226:	pop    edi
10015227:	pop    esi
10015228:	pop    ebx
10015229:	add    esp,0x8
1001522c:	ret    
1001522d:	mov    edx,DWORD PTR [eax+0x4]
10015230:	movzx  ecx,BYTE PTR [edx+ebx*1]
10015234:	mov    edx,DWORD PTR [eax+0x8]
10015237:	mov    eax,DWORD PTR [edx+ecx*4]
1001523a:	pop    ebp
1001523b:	pop    edi
1001523c:	pop    esi
1001523d:	pop    ebx
1001523e:	add    esp,0x8
10015241:	ret    
10015242:	test   ebx,ebx
10015244:	jne    0x10015335
1001524a:	cmp    cl,0x3
1001524d:	jne    0x1001529f
1001524f:	mov    ecx,DWORD PTR [ebp+0x4]
10015252:	movzx  ecx,BYTE PTR [ecx+eax*1]
10015256:	mov    ebx,DWORD PTR [ebp+0x8]
10015259:	mov    ebp,DWORD PTR [ebx+ecx*4]
1001525c:	test   ebp,ebp
1001525e:	je     0x10015335
10015264:	cmp    DWORD PTR [esp+0x10],0xf
10015269:	jne    0x1001527d
1001526b:	cmp    eax,0xf
1001526e:	jne    0x1001527d
10015270:	pop    ebp
10015271:	pop    edi
10015272:	pop    esi
10015273:	mov    eax,0x1005b20c
10015278:	pop    ebx
10015279:	add    esp,0x8
1001527c:	ret    
1001527d:	mov    al,BYTE PTR [ebp+0x0]
10015280:	cmp    al,0x1
10015282:	je     0x10015174
10015288:	cmp    al,0x5
1001528a:	jne    0x1001529f
1001528c:	mov    esi,DWORD PTR [esp+0x20]
10015290:	mov    edx,ebp
10015292:	call   0x10014e60
10015297:	pop    ebp
10015298:	pop    edi
10015299:	pop    esi
1001529a:	pop    ebx
1001529b:	add    esp,0x8
1001529e:	ret    
1001529f:	lea    ecx,[edx-0x1]
100152a2:	test   ecx,ecx
100152a4:	lea    eax,[esi+0x1]
100152a7:	mov    DWORD PTR [edi+0x10],eax
100152aa:	mov    DWORD PTR [edi+0x14],ecx
100152ad:	jl     0x10015335
100152b3:	movzx  ecx,BYTE PTR [eax]
100152b6:	mov    edi,DWORD PTR [ebp+0x4]
100152b9:	mov    esi,DWORD PTR [ebp+0x8]
100152bc:	mov    edx,ecx
100152be:	shr    edx,0x3
100152c1:	and    edx,0x7
100152c4:	movzx  eax,BYTE PTR [edx+edi*1]
100152c8:	mov    dl,BYTE PTR [ebp+0x0]
100152cb:	cmp    dl,0x2
100152ce:	mov    eax,DWORD PTR [esi+eax*4]
100152d1:	jne    0x100152ef
100152d3:	test   eax,eax
100152d5:	je     0x10015335
100152d7:	cmp    BYTE PTR [eax],0x1
100152da:	je     0x10015337
100152dc:	mov    esi,DWORD PTR [esp+0x20]
100152e0:	mov    edx,eax
100152e2:	call   0x10014e60
100152e7:	pop    ebp
100152e8:	pop    edi
100152e9:	pop    esi
100152ea:	pop    ebx
100152eb:	add    esp,0x8
100152ee:	ret    
100152ef:	cmp    dl,0x4
100152f2:	jne    0x10015319
100152f4:	test   eax,eax
100152f6:	je     0x100152fe
100152f8:	test   BYTE PTR [eax+0x8],0x2
100152fc:	jne    0x10015337
100152fe:	cmp    ecx,0xc0
10015304:	jb     0x10015337
10015306:	movzx  ecx,BYTE PTR [edi+ecx*1-0xb8]
1001530e:	mov    eax,DWORD PTR [esi+ecx*4]
10015311:	pop    ebp
10015312:	pop    edi
10015313:	pop    esi
10015314:	pop    ebx
10015315:	add    esp,0x8
10015318:	ret    
10015319:	cmp    dl,0x3
1001531c:	jne    0x10015335
1001531e:	movzx  edx,BYTE PTR [edi+ecx*1]
10015322:	mov    eax,DWORD PTR [esi+edx*4]
10015325:	test   eax,eax
10015327:	je     0x10015335
10015329:	mov    cl,BYTE PTR [eax]
1001532b:	cmp    cl,0x1
1001532e:	je     0x10015337
10015330:	cmp    cl,0x5
10015333:	je     0x100152dc
10015335:	xor    eax,eax
10015337:	pop    ebp
10015338:	pop    edi
10015339:	pop    esi
1001533a:	pop    ebx
1001533b:	add    esp,0x8
1001533e:	ret    
1001533f:	int3   
10015340:	mov    ecx,DWORD PTR [esp+0x4]
10015344:	push   esi
10015345:	mov    esi,DWORD PTR [ecx+0x14]
10015348:	cmp    esi,0x1
1001534b:	jl     0x1001537f
1001534d:	mov    edx,DWORD PTR [ecx+0x10]
10015350:	movzx  eax,BYTE PTR [edx]
10015353:	push   edi
10015354:	mov    edi,DWORD PTR ds:0x10062af8
1001535a:	movzx  eax,BYTE PTR [eax+edi*1]
1001535e:	mov    edi,DWORD PTR ds:0x10062afc
10015364:	mov    eax,DWORD PTR [edi+eax*4]
10015367:	test   eax,eax
10015369:	pop    edi
1001536a:	je     0x1001537f
1001536c:	cmp    BYTE PTR [eax],0x1
1001536f:	jne    0x1001537f
10015371:	add    esi,0xffffffff
10015374:	add    edx,0x1
10015377:	mov    DWORD PTR [ecx+0x14],esi
1001537a:	mov    DWORD PTR [ecx+0x10],edx
1001537d:	pop    esi
1001537e:	ret    
1001537f:	xor    eax,eax
10015381:	pop    esi
10015382:	ret    
10015383:	int3   
10015384:	jmp    DWORD PTR ds:0x1002c05c
1001538a:	jmp    DWORD PTR ds:0x1002c060
10015390:	jmp    DWORD PTR ds:0x1002c064
10015396:	jmp    DWORD PTR ds:0x1002c0f0
1001539c:	jmp    DWORD PTR ds:0x1002c0f4
100153a2:	jmp    DWORD PTR ds:0x1002c114
100153a8:	jmp    DWORD PTR ds:0x1002c130
100153ae:	push   ebp
100153af:	mov    ebp,esp
100153b1:	sub    esp,0xc
100153b4:	mov    eax,ds:0x10064694
100153b9:	xor    eax,ebp
100153bb:	mov    DWORD PTR [ebp-0x4],eax
100153be:	push   esi
100153bf:	xor    esi,esi
100153c1:	call   DWORD PTR ds:0x1002c1bc
100153c7:	push   0x7
100153c9:	lea    ecx,[ebp-0xc]
100153cc:	push   ecx
100153cd:	push   0x1004
100153d2:	push   eax
100153d3:	call   DWORD PTR ds:0x1002c1b8
100153d9:	test   eax,eax
100153db:	je     0x100153fc
100153dd:	mov    cl,BYTE PTR [ebp-0xc]
100153e0:	test   cl,cl
100153e2:	lea    eax,[ebp-0xc]
100153e5:	je     0x100153fc
100153e7:	imul   esi,esi,0xa
100153ea:	movsx  ecx,cl
100153ed:	inc    eax
100153ee:	lea    esi,[esi+ecx*1-0x30]
100153f2:	mov    cl,BYTE PTR [eax]
100153f4:	test   cl,cl
100153f6:	jne    0x100153e7
100153f8:	test   esi,esi
100153fa:	jne    0x10015404
100153fc:	call   DWORD PTR ds:0x1002c1b4
10015402:	mov    esi,eax
10015404:	mov    ecx,DWORD PTR [ebp-0x4]
10015407:	mov    eax,esi
10015409:	xor    ecx,ebp
1001540b:	pop    esi
1001540c:	call   0x10015adb
10015411:	leave  
10015412:	ret    
10015413:	push   0x3
10015415:	pop    eax
10015416:	ret    
10015417:	push   ebp
10015418:	mov    ebp,esp
1001541a:	sub    esp,0x98
10015420:	mov    eax,ds:0x10064694
10015425:	xor    eax,ebp
10015427:	mov    DWORD PTR [ebp-0x4],eax
1001542a:	lea    eax,[ebp-0x98]
10015430:	push   eax
10015431:	mov    DWORD PTR [ebp-0x98],0x94
1001543b:	call   DWORD PTR ds:0x1002c1c0
10015441:	cmp    DWORD PTR [ebp-0x88],0x2
10015448:	jne    0x10015458
1001544a:	cmp    DWORD PTR [ebp-0x94],0x5
10015451:	mov    eax,0x10015413
10015456:	jae    0x1001545d
10015458:	mov    eax,0x100153ae
1001545d:	push   eax
1001545e:	push   0x10064614
10015463:	call   DWORD PTR ds:0x1002c1b0
10015469:	call   DWORD PTR ds:0x10064614
1001546f:	mov    ecx,DWORD PTR [ebp-0x4]
10015472:	xor    ecx,ebp
10015474:	call   0x10015adb
10015479:	leave  
1001547a:	ret    
1001547b:	cmp    BYTE PTR [ecx+0x8],0x0
1001547f:	mov    DWORD PTR [ecx],0x100503e8
10015485:	je     0x10015495
10015487:	mov    ecx,DWORD PTR [ecx+0x4]
1001548a:	test   ecx,ecx
1001548c:	je     0x10015495
1001548e:	push   ecx
1001548f:	call   DWORD PTR ds:0x1002c1c4
10015495:	ret    
10015496:	push   DWORD PTR [esp+0x4]
1001549a:	push   0x0
1001549c:	push   DWORD PTR [ecx+0x4]
1001549f:	call   DWORD PTR ds:0x1002c1c8
100154a5:	ret    0x4
100154a8:	cmp    DWORD PTR [esp+0x4],0x0
100154ad:	je     0x100154be
100154af:	push   DWORD PTR [esp+0x4]
100154b3:	push   0x0
100154b5:	push   DWORD PTR [ecx+0x4]
100154b8:	call   DWORD PTR ds:0x1002c1cc
100154be:	ret    0x4
100154c1:	push   ebp
100154c2:	mov    ebp,esp
100154c4:	xor    eax,eax
100154c6:	cmp    DWORD PTR [ebp+0x8],eax
100154c9:	jne    0x100154d4
100154cb:	push   DWORD PTR [ebp+0xc]
100154ce:	mov    eax,DWORD PTR [ecx]
100154d0:	call   DWORD PTR [eax]
100154d2:	jmp    0x100154f5
100154d4:	cmp    DWORD PTR [ebp+0xc],eax
100154d7:	jne    0x100154e5
100154d9:	push   DWORD PTR [ebp+0x8]
100154dc:	mov    eax,DWORD PTR [ecx]
100154de:	call   DWORD PTR [eax+0x4]
100154e1:	xor    eax,eax
100154e3:	jmp    0x100154f5
100154e5:	push   DWORD PTR [ebp+0xc]
100154e8:	push   DWORD PTR [ebp+0x8]
100154eb:	push   eax
100154ec:	push   DWORD PTR [ecx+0x4]
100154ef:	call   DWORD PTR ds:0x1002c1d0
100154f5:	pop    ebp
100154f6:	ret    0x8
100154f9:	push   DWORD PTR [esp+0x4]
100154fd:	push   0x0
100154ff:	push   DWORD PTR [ecx+0x4]
10015502:	call   DWORD PTR ds:0x1002c1d4
10015508:	ret    0x4
1001550b:	push   esi
1001550c:	mov    esi,ecx
1001550e:	call   0x1001547b
10015513:	test   BYTE PTR [esp+0x8],0x1
10015518:	je     0x10015521
1001551a:	push   esi
1001551b:	call   0x10015ad6
10015520:	pop    ecx
10015521:	mov    eax,esi
10015523:	pop    esi
10015524:	ret    0x4
10015527:	mov    eax,ecx
10015529:	mov    ecx,DWORD PTR [esp+0x4]
1001552d:	mov    DWORD PTR [eax+0x4],ecx
10015530:	mov    DWORD PTR [eax],0x100503fc
10015536:	xor    ecx,ecx
10015538:	mov    DWORD PTR [eax+0x14],0x2
1001553f:	mov    DWORD PTR [eax+0xc],ecx
10015542:	mov    DWORD PTR [eax+0x10],ecx
10015545:	mov    WORD PTR [eax+0x18],cx
10015549:	mov    WORD PTR [eax+0x1a],cx
1001554d:	mov    DWORD PTR [eax+0x8],eax
10015550:	ret    0x4
10015553:	mov    eax,DWORD PTR [esp+0x8]
10015557:	mul    DWORD PTR [esp+0xc]
1001555b:	test   edx,edx
1001555d:	ja     0x10015564
1001555f:	cmp    eax,0xffffffff
10015562:	jbe    0x1001556a
10015564:	mov    eax,0x80070057
10015569:	ret    
1001556a:	mov    ecx,DWORD PTR [esp+0x4]
1001556e:	mov    DWORD PTR [ecx],eax
10015570:	xor    eax,eax
10015572:	ret    
10015573:	mov    ecx,DWORD PTR [ecx+0x4]
10015576:	mov    eax,DWORD PTR [ecx]
10015578:	jmp    DWORD PTR [eax+0x4]
1001557b:	xor    edx,edx
1001557d:	lea    eax,[ecx+0x14]
10015580:	inc    edx
10015581:	lock xadd DWORD PTR [eax],edx
10015585:	lea    eax,[ecx+0x8]
10015588:	ret    
10015589:	mov    eax,ecx
1001558b:	ret    
1001558c:	test   BYTE PTR [esp+0x4],0x1
10015591:	push   esi
10015592:	mov    esi,ecx
10015594:	mov    DWORD PTR [esi],0x100503fc
1001559a:	je     0x100155a3
1001559c:	push   esi
1001559d:	call   0x10015ad6
100155a2:	pop    ecx
100155a3:	mov    eax,esi
100155a5:	pop    esi
100155a6:	ret    0x4
100155a9:	mov    eax,DWORD PTR [esp+0x8]
100155ad:	mov    ecx,DWORD PTR [esp+0xc]
100155b1:	or     edx,0xffffffff
100155b4:	sub    edx,eax
100155b6:	cmp    edx,ecx
100155b8:	jae    0x100155c0
100155ba:	mov    eax,0x80070057
100155bf:	ret    
100155c0:	add    eax,ecx
100155c2:	mov    ecx,DWORD PTR [esp+0x4]
100155c6:	mov    DWORD PTR [ecx],eax
100155c8:	xor    eax,eax
100155ca:	ret    
100155cb:	push   ebp
100155cc:	mov    ebp,esp
100155ce:	push   esi
100155cf:	mov    esi,DWORD PTR [ebp+0x8]
100155d2:	push   edi
100155d3:	push   DWORD PTR [ebp+0xc]
100155d6:	add    esi,0x8
100155d9:	and    esi,0xfffffff8
100155dc:	lea    eax,[ebp+0x8]
100155df:	push   esi
100155e0:	push   eax
100155e1:	mov    edi,ecx
100155e3:	call   0x10015553
100155e8:	add    esp,0xc
100155eb:	test   eax,eax
100155ed:	jl     0x10015625
100155ef:	push   DWORD PTR [ebp+0x8]
100155f2:	lea    eax,[ebp+0x8]
100155f5:	push   0x10
100155f7:	push   eax
100155f8:	call   0x100155a9
100155fd:	add    esp,0xc
10015600:	test   eax,eax
10015602:	jl     0x10015625
10015604:	mov    ecx,DWORD PTR [edi+0x4]
10015607:	push   DWORD PTR [ebp+0x8]
1001560a:	mov    eax,DWORD PTR [ecx]
1001560c:	call   DWORD PTR [eax]
1001560e:	test   eax,eax
10015610:	je     0x10015625
10015612:	dec    esi
10015613:	and    DWORD PTR [eax+0x4],0x0
10015617:	mov    DWORD PTR [eax],edi
10015619:	mov    DWORD PTR [eax+0xc],0x1
10015620:	mov    DWORD PTR [eax+0x8],esi
10015623:	jmp    0x10015627
10015625:	xor    eax,eax
10015627:	pop    edi
10015628:	pop    esi
10015629:	pop    ebp
1001562a:	ret    0x8
1001562d:	push   ebp
1001562e:	mov    ebp,esp
10015630:	push   esi
10015631:	mov    esi,DWORD PTR [ebp+0xc]
10015634:	push   edi
10015635:	push   DWORD PTR [ebp+0x10]
10015638:	add    esi,0x8
1001563b:	and    esi,0xfffffff8
1001563e:	lea    eax,[ebp+0xc]
10015641:	push   esi
10015642:	push   eax
10015643:	mov    edi,ecx
10015645:	call   0x10015553
1001564a:	add    esp,0xc
1001564d:	test   eax,eax
1001564f:	jl     0x1001567e
10015651:	push   DWORD PTR [ebp+0xc]
10015654:	lea    eax,[ebp+0xc]
10015657:	push   0x10
10015659:	push   eax
1001565a:	call   0x10006ab0
1001565f:	add    esp,0xc
10015662:	test   eax,eax
10015664:	jl     0x1001567e
10015666:	push   DWORD PTR [ebp+0xc]
10015669:	mov    ecx,DWORD PTR [edi+0x4]
1001566c:	push   DWORD PTR [ebp+0x8]
1001566f:	mov    eax,DWORD PTR [ecx]
10015671:	call   DWORD PTR [eax+0x8]
10015674:	test   eax,eax
10015676:	je     0x1001567e
10015678:	dec    esi
10015679:	mov    DWORD PTR [eax+0x8],esi
1001567c:	jmp    0x10015680
1001567e:	xor    eax,eax
10015680:	pop    edi
10015681:	pop    esi
10015682:	pop    ebp
10015683:	ret    0xc
10015686:	push   esi
10015687:	push   0x18
10015689:	mov    esi,ecx
1001568b:	push   0x0
1001568d:	push   esi
1001568e:	call   0x10016530
10015693:	add    esp,0xc
10015696:	mov    eax,esi
10015698:	pop    esi
10015699:	ret    
1001569a:	push   0xc
1001569c:	push   0x100583c8
100156a1:	call   0x10017a38
100156a6:	and    DWORD PTR [ebp-0x4],0x0
100156aa:	push   ecx
100156ab:	call   DWORD PTR ds:0x1002c1e8
100156b1:	and    DWORD PTR [ebp-0x1c],0x0
100156b5:	jmp    0x100156d5
100156b7:	mov    eax,DWORD PTR [ebp-0x14]
100156ba:	mov    eax,DWORD PTR [eax]
100156bc:	mov    eax,DWORD PTR [eax]
100156be:	xor    ecx,ecx
100156c0:	cmp    eax,0xc0000017
100156c5:	sete   cl
100156c8:	mov    eax,ecx
100156ca:	ret    
100156cb:	mov    esp,DWORD PTR [ebp-0x18]
100156ce:	mov    DWORD PTR [ebp-0x1c],0x8007000e
100156d5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100156dc:	mov    eax,DWORD PTR [ebp-0x1c]
100156df:	call   0x10017a7d
100156e4:	ret    
100156e5:	mov    eax,DWORD PTR [esp+0x4]
100156e9:	test   eax,eax
100156eb:	jne    0x100156f4
100156ed:	mov    eax,0x80070057
100156f2:	jmp    0x10015705
100156f4:	cmp    DWORD PTR [eax],0x2c
100156f7:	jne    0x100156ed
100156f9:	and    DWORD PTR [eax+0x1c],0x0
100156fd:	lea    ecx,[eax+0x4]
10015700:	call   0x1001569a
10015705:	ret    0x4
10015708:	push   esi
10015709:	mov    esi,ecx
1001570b:	mov    eax,DWORD PTR [esi]
1001570d:	test   eax,eax
1001570f:	je     0x1001571b
10015711:	push   eax
10015712:	call   0x10016b35
10015717:	and    DWORD PTR [esi],0x0
1001571a:	pop    ecx
1001571b:	and    DWORD PTR [esi+0x4],0x0
1001571f:	and    DWORD PTR [esi+0x8],0x0
10015723:	pop    esi
10015724:	ret    
10015725:	mov    eax,DWORD PTR [esp+0x4]
10015729:	test   eax,eax
1001572b:	jl     0x1001573a
1001572d:	cmp    eax,DWORD PTR [ecx+0x4]
10015730:	jge    0x1001573a
10015732:	mov    ecx,DWORD PTR [ecx]
10015734:	lea    eax,[ecx+eax*2]
10015737:	ret    0x4
1001573a:	push   0x0
1001573c:	push   0x0
1001573e:	push   0x1
10015740:	push   0xc000008c
10015745:	call   DWORD PTR ds:0x1002c1dc
1001574b:	int3   
1001574c:	mov    eax,DWORD PTR [esp+0x4]
10015750:	test   eax,eax
10015752:	jl     0x10015761
10015754:	cmp    eax,DWORD PTR [ecx+0x4]
10015757:	jge    0x10015761
10015759:	mov    ecx,DWORD PTR [ecx]
1001575b:	lea    eax,[ecx+eax*4]
1001575e:	ret    0x4
10015761:	push   0x0
10015763:	push   0x0
10015765:	push   0x1
10015767:	push   0xc000008c
1001576c:	call   DWORD PTR ds:0x1002c1dc
10015772:	int3   
10015773:	push   esi
10015774:	mov    esi,ecx
10015776:	lea    ecx,[esi+0x4]
10015779:	call   0x10015686
1001577e:	xor    eax,eax
10015780:	mov    DWORD PTR [esi+0x20],eax
10015783:	mov    DWORD PTR [esi+0x24],eax
10015786:	mov    DWORD PTR [esi+0x28],eax
10015789:	mov    eax,esi
1001578b:	pop    esi
1001578c:	ret    
1001578d:	push   esi
1001578e:	mov    esi,DWORD PTR [esp+0x8]
10015792:	test   esi,esi
10015794:	jne    0x1001579d
10015796:	mov    eax,0x80070057
1001579b:	jmp    0x100157e9
1001579d:	mov    eax,DWORD PTR [esi]
1001579f:	test   eax,eax
100157a1:	je     0x100157e7
100157a3:	cmp    eax,0x2c
100157a6:	jne    0x10015796
100157a8:	push   edi
100157a9:	xor    edi,edi
100157ab:	cmp    DWORD PTR [esi+0x24],edi
100157ae:	jle    0x100157d1
100157b0:	push   ebx
100157b1:	lea    ebx,[esi+0x20]
100157b4:	push   edi
100157b5:	mov    ecx,ebx
100157b7:	call   0x10015725
100157bc:	movzx  eax,WORD PTR [eax]
100157bf:	push   DWORD PTR [esp+0x14]
100157c3:	push   eax
100157c4:	call   DWORD PTR ds:0x1002c244
100157ca:	inc    edi
100157cb:	cmp    edi,DWORD PTR [esi+0x24]
100157ce:	jl     0x100157b4
100157d0:	pop    ebx
100157d1:	lea    ecx,[esi+0x20]
100157d4:	call   0x10015708
100157d9:	lea    eax,[esi+0x4]
100157dc:	push   eax
100157dd:	call   DWORD PTR ds:0x1002c1ec
100157e3:	and    DWORD PTR [esi],0x0
100157e6:	pop    edi
100157e7:	xor    eax,eax
100157e9:	pop    esi
100157ea:	ret    0x8
100157ed:	push   esi
100157ee:	mov    esi,ecx
100157f0:	cmp    BYTE PTR [esi+0x4],0x0
100157f4:	je     0x10015802
100157f6:	push   DWORD PTR [esi]
100157f8:	call   DWORD PTR ds:0x1002c1e4
100157fe:	mov    BYTE PTR [esi+0x4],0x0
10015802:	pop    esi
10015803:	ret    
10015804:	push   esi
10015805:	mov    esi,ecx
10015807:	lea    ecx,[esi+0x18]
1001580a:	call   0x10015686
1001580f:	xor    eax,eax
10015811:	mov    DWORD PTR [esi+0x30],eax
10015814:	mov    DWORD PTR [esi+0x34],eax
10015817:	mov    DWORD PTR [esi+0x38],eax
1001581a:	mov    eax,esi
1001581c:	pop    esi
1001581d:	ret    
1001581e:	push   esi
1001581f:	mov    esi,ecx
10015821:	lea    eax,[esi+0x18]
10015824:	push   eax
10015825:	call   DWORD PTR ds:0x1002c1ec
1001582b:	lea    ecx,[esi+0x30]
1001582e:	pop    esi
1001582f:	jmp    0x10015708
10015834:	push   ebp
10015835:	mov    ebp,esp
10015837:	push   ecx
10015838:	push   ecx
10015839:	push   esi
1001583a:	mov    esi,ecx
1001583c:	lea    eax,[esi+0x18]
1001583f:	push   eax
10015840:	mov    DWORD PTR [ebp-0x8],eax
10015843:	call   DWORD PTR ds:0x1002c1e0
10015849:	mov    eax,DWORD PTR [esi+0x34]
1001584c:	mov    ecx,DWORD PTR [ebp+0x8]
1001584f:	cmp    ecx,eax
10015851:	mov    BYTE PTR [ebp-0x4],0x1
10015855:	jg     0x1001587b
10015857:	test   ecx,ecx
10015859:	jl     0x1001587b
1001585b:	cmp    ecx,eax
1001585d:	jne    0x1001586e
1001585f:	mov    esi,DWORD PTR [esi+0x8]
10015862:	lea    ecx,[ebp-0x8]
10015865:	call   0x100157ed
1001586a:	mov    eax,esi
1001586c:	jmp    0x10015885
1001586e:	push   ecx
1001586f:	lea    ecx,[esi+0x30]
10015872:	call   0x1001574c
10015877:	mov    esi,DWORD PTR [eax]
10015879:	jmp    0x10015862
1001587b:	lea    ecx,[ebp-0x8]
1001587e:	call   0x100157ed
10015883:	xor    eax,eax
10015885:	pop    esi
10015886:	leave  
10015887:	ret    0x4
1001588a:	push   esi
1001588b:	mov    esi,ecx
1001588d:	call   0x10015773
10015892:	push   esi
10015893:	mov    DWORD PTR [esi],0x2c
10015899:	call   0x100156e5
1001589e:	test   eax,eax
100158a0:	jge    0x100158ac
100158a2:	mov    BYTE PTR ds:0x10066dc8,0x1
100158a9:	and    DWORD PTR [esi],0x0
100158ac:	mov    eax,esi
100158ae:	pop    esi
100158af:	ret    
100158b0:	push   ebp
100158b1:	lea    ebp,[esp-0x78]
100158b5:	sub    esp,0x98
100158bb:	mov    eax,ds:0x10064694
100158c0:	xor    eax,ebp
100158c2:	mov    DWORD PTR [ebp+0x74],eax
100158c5:	push   esi
100158c6:	mov    esi,ecx
100158c8:	call   0x10015804
100158cd:	mov    eax,0x10000000
100158d2:	push   0x94
100158d7:	mov    DWORD PTR [esi+0x8],eax
100158da:	mov    DWORD PTR [esi+0x4],eax
100158dd:	lea    eax,[ebp-0x20]
100158e0:	push   0x0
100158e2:	push   eax
100158e3:	mov    DWORD PTR [esi],0x3c
100158e9:	mov    BYTE PTR [esi+0xc],0x0
100158ed:	call   0x10016530
100158f2:	add    esp,0xc
100158f5:	lea    eax,[ebp-0x20]
100158f8:	push   eax
100158f9:	mov    DWORD PTR [ebp-0x20],0x94
10015900:	call   DWORD PTR ds:0x1002c1c0
10015906:	cmp    DWORD PTR [ebp-0x10],0x2
1001590a:	jne    0x10015914
1001590c:	cmp    DWORD PTR [ebp-0x1c],0x5
10015910:	jb     0x1001592c
10015912:	jmp    0x10015928
10015914:	cmp    DWORD PTR [ebp-0x10],0x1
10015918:	jne    0x1001592c
1001591a:	cmp    DWORD PTR [ebp-0x1c],0x4
1001591e:	ja     0x10015928
10015920:	jne    0x1001592c
10015922:	cmp    DWORD PTR [ebp-0x18],0x0
10015926:	jbe    0x1001592c
10015928:	mov    BYTE PTR [esi+0xc],0x1
1001592c:	lea    ecx,[esi+0x18]
1001592f:	mov    DWORD PTR [esi+0x10],0x800
10015936:	mov    DWORD PTR [esi+0x14],0x10050424
1001593d:	call   0x1001569a
10015942:	test   eax,eax
10015944:	jge    0x1001594d
10015946:	mov    BYTE PTR ds:0x10066dc8,0x1
1001594d:	mov    ecx,DWORD PTR [ebp+0x74]
10015950:	mov    eax,esi
10015952:	xor    ecx,ebp
10015954:	pop    esi
10015955:	call   0x10015adb
1001595a:	add    ebp,0x78
1001595d:	leave  
1001595e:	ret    
1001595f:	push   esi
10015960:	push   DWORD PTR ds:0x10066140
10015966:	mov    esi,ecx
10015968:	push   esi
10015969:	call   0x1001578d
1001596e:	lea    ecx,[esi+0x20]
10015971:	pop    esi
10015972:	jmp    0x10015708
10015977:	push   0x44
10015979:	mov    eax,0x1002a666
1001597e:	call   0x10017e51
10015983:	push   0x10050434
10015988:	lea    ecx,[ebp-0x28]
1001598b:	call   0x10002b40
10015990:	and    DWORD PTR [ebp-0x4],0x0
10015994:	lea    eax,[ebp-0x28]
10015997:	push   eax
10015998:	lea    ecx,[ebp-0x50]
1001599b:	call   0x10001350
100159a0:	push   0x10058b0c
100159a5:	lea    eax,[ebp-0x50]
100159a8:	push   eax
100159a9:	mov    DWORD PTR [ebp-0x50],0x1002c4d4
100159b0:	call   0x100161ce
100159b5:	int3   
100159b6:	push   0x44
100159b8:	mov    eax,0x1002a689
100159bd:	call   0x10017e51
100159c2:	push   0x10050444
100159c7:	lea    ecx,[ebp-0x28]
100159ca:	call   0x10002b40
100159cf:	and    DWORD PTR [ebp-0x4],0x0
100159d3:	lea    eax,[ebp-0x28]
100159d6:	push   eax
100159d7:	lea    ecx,[ebp-0x50]
100159da:	call   0x10001350
100159df:	push   0x10058ad0
100159e4:	lea    eax,[ebp-0x50]
100159e7:	push   eax
100159e8:	mov    DWORD PTR [ebp-0x50],0x1002c4f8
100159ef:	call   0x100161ce
100159f4:	int3   
100159f5:	jmp    0x10016414
100159fa:	push   edi
100159fb:	push   0x1006462c
10015a00:	mov    edi,ecx
10015a02:	call   DWORD PTR ds:0x1002c0e0
10015a08:	test   eax,eax
10015a0a:	jne    0x10015a25
10015a0c:	push   esi
10015a0d:	mov    esi,0x10066210
10015a12:	push   esi
10015a13:	call   0x10015aaa
10015a18:	add    esi,0x18
10015a1b:	cmp    esi,0x10066270
10015a21:	pop    ecx
10015a22:	jl     0x10015a12
10015a24:	pop    esi
10015a25:	mov    eax,edi
10015a27:	pop    edi
10015a28:	ret    
10015a29:	push   0x1006462c
10015a2e:	call   DWORD PTR ds:0x1002c0ec
10015a34:	test   eax,eax
10015a36:	jge    0x10015a51
10015a38:	push   esi
10015a39:	mov    esi,0x10066210
10015a3e:	push   esi
10015a3f:	call   0x10015ab5
10015a44:	add    esi,0x18
10015a47:	cmp    esi,0x10066270
10015a4d:	pop    ecx
10015a4e:	jl     0x10015a3e
10015a50:	pop    esi
10015a51:	ret    
10015a52:	mov    eax,DWORD PTR [esp+0x4]
10015a56:	and    eax,0x3
10015a59:	push   esi
10015a5a:	mov    esi,ecx
10015a5c:	mov    DWORD PTR [esi],eax
10015a5e:	imul   eax,eax,0x18
10015a61:	add    eax,0x10066210
10015a66:	push   eax
10015a67:	call   0x10015ac0
10015a6c:	pop    ecx
10015a6d:	mov    eax,esi
10015a6f:	pop    esi
10015a70:	ret    0x4
10015a73:	mov    eax,DWORD PTR [ecx]
10015a75:	imul   eax,eax,0x18
10015a78:	add    eax,0x10066210
10015a7d:	push   eax
10015a7e:	call   0x10015acb
10015a83:	pop    ecx
10015a84:	ret    
10015a85:	jmp    0x10015a9f
10015a87:	mov    ecx,DWORD PTR [eax*4+0x10066294]
10015a8e:	inc    eax
10015a8f:	test   ecx,ecx
10015a91:	mov    ds:0x10064634,eax
10015a96:	je     0x10015aa4
10015a98:	call   DWORD PTR [eax*4+0x10066290]
10015a9f:	mov    eax,ds:0x10064634
10015aa4:	cmp    eax,0xa
10015aa7:	jb     0x10015a87
10015aa9:	ret    
10015aaa:	push   DWORD PTR [esp+0x4]
10015aae:	call   DWORD PTR ds:0x1002c1e8
10015ab4:	ret    
10015ab5:	push   DWORD PTR [esp+0x4]
10015ab9:	call   DWORD PTR ds:0x1002c1ec
10015abf:	ret    
10015ac0:	push   DWORD PTR [esp+0x4]
10015ac4:	call   DWORD PTR ds:0x1002c1e0
10015aca:	ret    
10015acb:	push   DWORD PTR [esp+0x4]
10015acf:	call   DWORD PTR ds:0x1002c1e4
10015ad5:	ret    
10015ad6:	jmp    0x10016b35
10015adb:	cmp    ecx,DWORD PTR ds:0x10064694
10015ae1:	jne    0x10015ae5
10015ae3:	repz ret 
10015ae5:	jmp    0x10018789
10015aea:	int3   
10015aeb:	int3   
10015aec:	int3   
10015aed:	int3   
10015aee:	int3   
10015aef:	int3   
10015af0:	push   ecx
10015af1:	lea    ecx,[esp+0x8]
10015af5:	sub    ecx,eax
10015af7:	and    ecx,0xf
10015afa:	add    eax,ecx
10015afc:	sbb    ecx,ecx
10015afe:	or     eax,ecx
10015b00:	pop    ecx
10015b01:	jmp    0x10016500
10015b06:	push   ecx
10015b07:	lea    ecx,[esp+0x8]
10015b0b:	sub    ecx,eax
10015b0d:	and    ecx,0x7
10015b10:	add    eax,ecx
10015b12:	sbb    ecx,ecx
10015b14:	or     eax,ecx
10015b16:	pop    ecx
10015b17:	jmp    0x10016500
10015b1c:	push   ebp
10015b1d:	mov    ebp,esp
10015b1f:	push   ecx
10015b20:	push   ebx
10015b21:	mov    eax,DWORD PTR [ebp+0xc]
10015b24:	add    eax,0xc
10015b27:	mov    DWORD PTR [ebp-0x4],eax
10015b2a:	mov    ebx,DWORD PTR fs:0x0
10015b31:	mov    eax,DWORD PTR [ebx]
10015b33:	mov    fs:0x0,eax
10015b39:	mov    eax,DWORD PTR [ebp+0x8]
10015b3c:	mov    ebx,DWORD PTR [ebp+0xc]
10015b3f:	mov    ebp,DWORD PTR [ebp-0x4]
10015b42:	mov    esp,DWORD PTR [ebx-0x4]
10015b45:	jmp    eax
10015b47:	pop    ebx
10015b48:	leave  
10015b49:	ret    0x8
10015b4c:	pop    eax
10015b4d:	pop    ecx
10015b4e:	xchg   DWORD PTR [esp],eax
10015b51:	jmp    eax
10015b53:	push   ebp
10015b54:	mov    ebp,esp
10015b56:	push   ecx
10015b57:	push   ecx
10015b58:	push   ebx
10015b59:	push   esi
10015b5a:	push   edi
10015b5b:	mov    esi,DWORD PTR fs:0x0
10015b62:	mov    DWORD PTR [ebp-0x4],esi
10015b65:	mov    DWORD PTR [ebp-0x8],0x10015b7c
10015b6c:	push   0x0
10015b6e:	push   DWORD PTR [ebp+0xc]
10015b71:	push   DWORD PTR [ebp-0x8]
10015b74:	push   DWORD PTR [ebp+0x8]
10015b77:	call   0x1002a01e
10015b7c:	mov    eax,DWORD PTR [ebp+0xc]
10015b7f:	mov    eax,DWORD PTR [eax+0x4]
10015b82:	and    eax,0xfffffffd
10015b85:	mov    ecx,DWORD PTR [ebp+0xc]
10015b88:	mov    DWORD PTR [ecx+0x4],eax
10015b8b:	mov    edi,DWORD PTR fs:0x0
10015b92:	mov    ebx,DWORD PTR [ebp-0x4]
10015b95:	mov    DWORD PTR [ebx],edi
10015b97:	mov    DWORD PTR fs:0x0,ebx
10015b9e:	pop    edi
10015b9f:	pop    esi
10015ba0:	pop    ebx
10015ba1:	leave  
10015ba2:	ret    0x8
10015ba5:	push   ebp
10015ba6:	mov    ebp,esp
10015ba8:	sub    esp,0x8
10015bab:	push   ebx
10015bac:	push   esi
10015bad:	push   edi
10015bae:	cld    
10015baf:	mov    DWORD PTR [ebp-0x4],eax
10015bb2:	xor    eax,eax
10015bb4:	push   eax
10015bb5:	push   eax
10015bb6:	push   eax
10015bb7:	push   DWORD PTR [ebp-0x4]
10015bba:	push   DWORD PTR [ebp+0x14]
10015bbd:	push   DWORD PTR [ebp+0x10]
10015bc0:	push   DWORD PTR [ebp+0xc]
10015bc3:	push   DWORD PTR [ebp+0x8]
10015bc6:	call   0x10019433
10015bcb:	add    esp,0x20
10015bce:	mov    DWORD PTR [ebp-0x8],eax
10015bd1:	pop    edi
10015bd2:	pop    esi
10015bd3:	pop    ebx
10015bd4:	mov    eax,DWORD PTR [ebp-0x8]
10015bd7:	mov    esp,ebp
10015bd9:	pop    ebp
10015bda:	ret    
10015bdb:	push   esi
10015bdc:	cld    
10015bdd:	mov    esi,DWORD PTR [esp+0xc]
10015be1:	mov    ecx,DWORD PTR [esi+0x8]
10015be4:	xor    ecx,esi
10015be6:	call   0x10015adb
10015beb:	push   0x0
10015bed:	push   esi
10015bee:	push   DWORD PTR [esi+0x14]
10015bf1:	push   DWORD PTR [esi+0xc]
10015bf4:	push   0x0
10015bf6:	push   DWORD PTR [esp+0x24]
10015bfa:	push   DWORD PTR [esi+0x10]
10015bfd:	push   DWORD PTR [esp+0x24]
10015c01:	call   0x10019433
10015c06:	add    esp,0x20
10015c09:	pop    esi
10015c0a:	ret    
10015c0b:	push   ebp
10015c0c:	mov    ebp,esp
10015c0e:	sub    esp,0x38
10015c11:	push   ebx
10015c12:	cmp    DWORD PTR [ebp+0x8],0x123
10015c19:	jne    0x10015c2d
10015c1b:	mov    eax,0x10015cb4
10015c20:	mov    ecx,DWORD PTR [ebp+0xc]
10015c23:	mov    DWORD PTR [ecx],eax
10015c25:	xor    eax,eax
10015c27:	inc    eax
10015c28:	jmp    0x10015cdd
10015c2d:	and    DWORD PTR [ebp-0x28],0x0
10015c31:	mov    DWORD PTR [ebp-0x24],0x10015ce0
10015c38:	mov    eax,ds:0x10064694
10015c3d:	lea    ecx,[ebp-0x28]
10015c40:	xor    eax,ecx
10015c42:	mov    DWORD PTR [ebp-0x20],eax
10015c45:	mov    eax,DWORD PTR [ebp+0x18]
10015c48:	mov    DWORD PTR [ebp-0x1c],eax
10015c4b:	mov    eax,DWORD PTR [ebp+0xc]
10015c4e:	mov    DWORD PTR [ebp-0x18],eax
10015c51:	mov    eax,DWORD PTR [ebp+0x1c]
10015c54:	mov    DWORD PTR [ebp-0x14],eax
10015c57:	mov    eax,DWORD PTR [ebp+0x20]
10015c5a:	mov    DWORD PTR [ebp-0x10],eax
10015c5d:	and    DWORD PTR [ebp-0xc],0x0
10015c61:	and    DWORD PTR [ebp-0x8],0x0
10015c65:	and    DWORD PTR [ebp-0x4],0x0
10015c69:	mov    DWORD PTR [ebp-0xc],esp
10015c6c:	mov    DWORD PTR [ebp-0x8],ebp
10015c6f:	mov    eax,fs:0x0
10015c75:	mov    DWORD PTR [ebp-0x28],eax
10015c78:	lea    eax,[ebp-0x28]
10015c7b:	mov    fs:0x0,eax
10015c81:	mov    DWORD PTR [ebp-0x38],0x1
10015c88:	mov    eax,DWORD PTR [ebp+0x8]
10015c8b:	mov    DWORD PTR [ebp-0x34],eax
10015c8e:	mov    eax,DWORD PTR [ebp+0x10]
10015c91:	mov    DWORD PTR [ebp-0x30],eax
10015c94:	call   0x10019816
10015c99:	mov    eax,DWORD PTR [eax+0x80]
10015c9f:	mov    DWORD PTR [ebp-0x2c],eax
10015ca2:	lea    eax,[ebp-0x34]
10015ca5:	push   eax
10015ca6:	mov    eax,DWORD PTR [ebp+0x8]
10015ca9:	push   DWORD PTR [eax]
10015cab:	call   DWORD PTR [ebp-0x2c]
10015cae:	pop    ecx
10015caf:	pop    ecx
10015cb0:	and    DWORD PTR [ebp-0x38],0x0
10015cb4:	cmp    DWORD PTR [ebp-0x4],0x0
10015cb8:	je     0x10015cd1
10015cba:	mov    ebx,DWORD PTR fs:0x0
10015cc1:	mov    eax,DWORD PTR [ebx]
10015cc3:	mov    ebx,DWORD PTR [ebp-0x28]
10015cc6:	mov    DWORD PTR [ebx],eax
10015cc8:	mov    DWORD PTR fs:0x0,ebx
10015ccf:	jmp    0x10015cda
10015cd1:	mov    eax,DWORD PTR [ebp-0x28]
10015cd4:	mov    fs:0x0,eax
10015cda:	mov    eax,DWORD PTR [ebp-0x38]
10015cdd:	pop    ebx
10015cde:	leave  
10015cdf:	ret    
10015ce0:	push   ebp
10015ce1:	mov    ebp,esp
10015ce3:	push   ecx
10015ce4:	push   ebx
10015ce5:	cld    
10015ce6:	mov    eax,DWORD PTR [ebp+0xc]
10015ce9:	mov    ecx,DWORD PTR [eax+0x8]
10015cec:	xor    ecx,DWORD PTR [ebp+0xc]
10015cef:	call   0x10015adb
10015cf4:	mov    eax,DWORD PTR [ebp+0x8]
10015cf7:	mov    eax,DWORD PTR [eax+0x4]
10015cfa:	and    eax,0x66
10015cfd:	je     0x10015d10
10015cff:	mov    eax,DWORD PTR [ebp+0xc]
10015d02:	mov    DWORD PTR [eax+0x24],0x1
10015d09:	xor    eax,eax
10015d0b:	inc    eax
10015d0c:	jmp    0x10015d7a
10015d0e:	jmp    0x10015d7a
10015d10:	push   0x1
10015d12:	mov    eax,DWORD PTR [ebp+0xc]
10015d15:	push   DWORD PTR [eax+0x18]
10015d18:	mov    eax,DWORD PTR [ebp+0xc]
10015d1b:	push   DWORD PTR [eax+0x14]
10015d1e:	mov    eax,DWORD PTR [ebp+0xc]
10015d21:	push   DWORD PTR [eax+0xc]
10015d24:	push   0x0
10015d26:	push   DWORD PTR [ebp+0x10]
10015d29:	mov    eax,DWORD PTR [ebp+0xc]
10015d2c:	push   DWORD PTR [eax+0x10]
10015d2f:	push   DWORD PTR [ebp+0x8]
10015d32:	call   0x10019433
10015d37:	add    esp,0x20
10015d3a:	mov    eax,DWORD PTR [ebp+0xc]
10015d3d:	cmp    DWORD PTR [eax+0x24],0x0
10015d41:	jne    0x10015d4e
10015d43:	push   DWORD PTR [ebp+0x8]
10015d46:	push   DWORD PTR [ebp+0xc]
10015d49:	call   0x10015b53
10015d4e:	push   0x0
10015d50:	push   0x0
10015d52:	push   0x0
10015d54:	push   0x0
10015d56:	push   0x0
10015d58:	lea    eax,[ebp-0x4]
10015d5b:	push   eax
10015d5c:	push   0x123
10015d61:	call   0x10015c0b
10015d66:	add    esp,0x1c
10015d69:	mov    eax,DWORD PTR [ebp-0x4]
10015d6c:	mov    ebx,DWORD PTR [ebp+0xc]
10015d6f:	mov    esp,DWORD PTR [ebx+0x1c]
10015d72:	mov    ebp,DWORD PTR [ebx+0x20]
10015d75:	jmp    eax
10015d77:	xor    eax,eax
10015d79:	inc    eax
10015d7a:	pop    ebx
10015d7b:	leave  
10015d7c:	ret    
10015d7d:	push   ebp
10015d7e:	mov    ebp,esp
10015d80:	push   ecx
10015d81:	push   ebx
10015d82:	push   esi
10015d83:	push   edi
10015d84:	mov    edi,DWORD PTR [ebp+0x8]
10015d87:	mov    eax,DWORD PTR [edi+0x10]
10015d8a:	mov    esi,DWORD PTR [edi+0xc]
10015d8d:	mov    DWORD PTR [ebp-0x4],eax
10015d90:	mov    ebx,esi
10015d92:	jmp    0x10015dc1
10015d94:	cmp    esi,0xffffffff
10015d97:	jne    0x10015d9e
10015d99:	call   0x10019b88
10015d9e:	mov    ecx,DWORD PTR [ebp-0x4]
10015da1:	dec    esi
10015da2:	mov    eax,esi
10015da4:	imul   eax,eax,0x14
10015da7:	add    eax,ecx
10015da9:	mov    ecx,DWORD PTR [ebp+0x10]
10015dac:	cmp    DWORD PTR [eax+0x4],ecx
10015daf:	jge    0x10015db6
10015db1:	cmp    ecx,DWORD PTR [eax+0x8]
10015db4:	jle    0x10015dbb
10015db6:	cmp    esi,0xffffffff
10015db9:	jne    0x10015dc4
10015dbb:	dec    DWORD PTR [ebp+0xc]
10015dbe:	mov    ebx,DWORD PTR [ebp+0x8]
10015dc1:	mov    DWORD PTR [ebp+0x8],esi
10015dc4:	cmp    DWORD PTR [ebp+0xc],0x0
10015dc8:	jge    0x10015d94
10015dca:	mov    eax,DWORD PTR [ebp+0x14]
10015dcd:	inc    esi
10015dce:	mov    DWORD PTR [eax],esi
10015dd0:	mov    eax,DWORD PTR [ebp+0x18]
10015dd3:	mov    DWORD PTR [eax],ebx
10015dd5:	cmp    ebx,DWORD PTR [edi+0xc]
10015dd8:	ja     0x10015dde
10015dda:	cmp    esi,ebx
10015ddc:	jbe    0x10015de3
10015dde:	call   0x10019b88
10015de3:	mov    eax,esi
10015de5:	imul   eax,eax,0x14
10015de8:	add    eax,DWORD PTR [ebp-0x4]
10015deb:	pop    edi
10015dec:	pop    esi
10015ded:	pop    ebx
10015dee:	leave  
10015def:	ret    
10015df0:	mov    eax,DWORD PTR [esp+0x8]
10015df4:	push   esi
10015df5:	mov    esi,DWORD PTR [esp+0x8]
10015df9:	mov    DWORD PTR [esi],eax
10015dfb:	call   0x10019816
10015e00:	mov    eax,DWORD PTR [eax+0x98]
10015e06:	mov    DWORD PTR [esi+0x4],eax
10015e09:	call   0x10019816
10015e0e:	mov    DWORD PTR [eax+0x98],esi
10015e14:	mov    eax,esi
10015e16:	pop    esi
10015e17:	ret    
10015e18:	call   0x10019816
10015e1d:	mov    eax,DWORD PTR [eax+0x98]
10015e23:	jmp    0x10015e30
10015e25:	mov    ecx,DWORD PTR [eax]
10015e27:	cmp    ecx,DWORD PTR [esp+0x4]
10015e2b:	je     0x10015e36
10015e2d:	mov    eax,DWORD PTR [eax+0x4]
10015e30:	test   eax,eax
10015e32:	jne    0x10015e25
10015e34:	inc    eax
10015e35:	ret    
10015e36:	xor    eax,eax
10015e38:	ret    
10015e39:	push   esi
10015e3a:	call   0x10019816
10015e3f:	mov    esi,DWORD PTR [esp+0x8]
10015e43:	cmp    esi,DWORD PTR [eax+0x98]
10015e49:	jne    0x10015e5b
10015e4b:	call   0x10019816
10015e50:	mov    ecx,DWORD PTR [esi+0x4]
10015e53:	mov    DWORD PTR [eax+0x98],ecx
10015e59:	pop    esi
10015e5a:	ret    
10015e5b:	call   0x10019816
10015e60:	mov    eax,DWORD PTR [eax+0x98]
10015e66:	jmp    0x10015e71
10015e68:	mov    ecx,DWORD PTR [eax+0x4]
10015e6b:	cmp    esi,ecx
10015e6d:	je     0x10015e7d
10015e6f:	mov    eax,ecx
10015e71:	cmp    DWORD PTR [eax+0x4],0x0
10015e75:	jne    0x10015e68
10015e77:	pop    esi
10015e78:	jmp    0x10019b88
10015e7d:	mov    ecx,DWORD PTR [esi+0x4]
10015e80:	mov    DWORD PTR [eax+0x4],ecx
10015e83:	pop    esi
10015e84:	ret    
10015e85:	push   ebp
10015e86:	mov    ebp,esp
10015e88:	sub    esp,0x18
10015e8b:	mov    eax,ds:0x10064694
10015e90:	and    DWORD PTR [ebp-0x18],0x0
10015e94:	lea    ecx,[ebp-0x18]
10015e97:	xor    eax,ecx
10015e99:	mov    ecx,DWORD PTR [ebp+0x8]
10015e9c:	mov    DWORD PTR [ebp-0x10],eax
10015e9f:	mov    eax,DWORD PTR [ebp+0xc]
10015ea2:	mov    DWORD PTR [ebp-0xc],eax
10015ea5:	mov    eax,DWORD PTR [ebp+0x14]
10015ea8:	inc    eax
10015ea9:	mov    DWORD PTR [ebp-0x14],0x10015bdb
10015eb0:	mov    DWORD PTR [ebp-0x8],ecx
10015eb3:	mov    DWORD PTR [ebp-0x4],eax
10015eb6:	mov    eax,fs:0x0
10015ebc:	mov    DWORD PTR [ebp-0x18],eax
10015ebf:	lea    eax,[ebp-0x18]
10015ec2:	mov    fs:0x0,eax
10015ec8:	push   DWORD PTR [ebp+0x18]
10015ecb:	push   ecx
10015ecc:	push   DWORD PTR [ebp+0x10]
10015ecf:	call   0x10019bd0
10015ed4:	mov    ecx,eax
10015ed6:	mov    eax,DWORD PTR [ebp-0x18]
10015ed9:	mov    fs:0x0,eax
10015edf:	mov    eax,ecx
10015ee1:	leave  
10015ee2:	ret    
10015ee3:	push   ecx
10015ee4:	push   ebx
10015ee5:	push   ebp
10015ee6:	push   esi
10015ee7:	push   edi
10015ee8:	push   DWORD PTR ds:0x100680b0
10015eee:	call   0x100195fa
10015ef3:	push   DWORD PTR ds:0x100680ac
10015ef9:	mov    esi,eax
10015efb:	mov    DWORD PTR [esp+0x18],esi
10015eff:	call   0x100195fa
10015f04:	mov    edi,eax
10015f06:	cmp    edi,esi
10015f08:	pop    ecx
10015f09:	pop    ecx
10015f0a:	jb     0x10015f94
10015f10:	mov    ebx,edi
10015f12:	sub    ebx,esi
10015f14:	lea    ebp,[ebx+0x4]
10015f17:	cmp    ebp,0x4
10015f1a:	jb     0x10015f94
10015f1c:	push   esi
10015f1d:	call   0x10019c1c
10015f22:	mov    esi,eax
10015f24:	cmp    esi,ebp
10015f26:	pop    ecx
10015f27:	jae    0x10015f73
10015f29:	mov    eax,0x800
10015f2e:	cmp    esi,eax
10015f30:	jae    0x10015f34
10015f32:	mov    eax,esi
10015f34:	add    eax,esi
10015f36:	cmp    eax,esi
10015f38:	jb     0x10015f4a
10015f3a:	push   eax
10015f3b:	push   DWORD PTR [esp+0x14]
10015f3f:	call   0x1001862d
10015f44:	test   eax,eax
10015f46:	pop    ecx
10015f47:	pop    ecx
10015f48:	jne    0x10015f61
10015f4a:	lea    eax,[esi+0x10]
10015f4d:	cmp    eax,esi
10015f4f:	jb     0x10015f94
10015f51:	push   eax
10015f52:	push   DWORD PTR [esp+0x14]
10015f56:	call   0x1001862d
10015f5b:	test   eax,eax
10015f5d:	pop    ecx
10015f5e:	pop    ecx
10015f5f:	je     0x10015f94
10015f61:	sar    ebx,0x2
10015f64:	push   eax
10015f65:	lea    edi,[eax+ebx*4]
10015f68:	call   0x10019583
10015f6d:	pop    ecx
10015f6e:	mov    ds:0x100680b0,eax
10015f73:	push   DWORD PTR [esp+0x18]
10015f77:	call   0x10019583
10015f7c:	mov    DWORD PTR [edi],eax
10015f7e:	add    edi,0x4
10015f81:	push   edi
10015f82:	call   0x10019583
10015f87:	pop    ecx
10015f88:	mov    ds:0x100680ac,eax
10015f8d:	mov    eax,DWORD PTR [esp+0x1c]
10015f91:	pop    ecx
10015f92:	jmp    0x10015f96
10015f94:	xor    eax,eax
10015f96:	pop    edi
10015f97:	pop    esi
10015f98:	pop    ebp
10015f99:	pop    ebx
10015f9a:	pop    ecx
10015f9b:	ret    
10015f9c:	push   esi
10015f9d:	push   0x4
10015f9f:	push   0x20
10015fa1:	call   0x100185e5
10015fa6:	mov    esi,eax
10015fa8:	push   esi
10015fa9:	call   0x10019583
10015fae:	add    esp,0xc
10015fb1:	test   esi,esi
10015fb3:	mov    ds:0x100680b0,eax
10015fb8:	mov    ds:0x100680ac,eax
10015fbd:	jne    0x10015fc4
10015fbf:	push   0x18
10015fc1:	pop    eax
10015fc2:	pop    esi
10015fc3:	ret    
10015fc4:	and    DWORD PTR [esi],0x0
10015fc7:	xor    eax,eax
10015fc9:	pop    esi
10015fca:	ret    
10015fcb:	push   0xc
10015fcd:	push   0x10058440
10015fd2:	call   0x10017a38
10015fd7:	call   0x10019d1e
10015fdc:	and    DWORD PTR [ebp-0x4],0x0
10015fe0:	push   DWORD PTR [ebp+0x8]
10015fe3:	call   0x10015ee3
10015fe8:	pop    ecx
10015fe9:	mov    DWORD PTR [ebp-0x1c],eax
10015fec:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10015ff3:	call   0x10016001
10015ff8:	mov    eax,DWORD PTR [ebp-0x1c]
10015ffb:	call   0x10017a7d
10016000:	ret    
10016001:	call   0x10019d27
10016006:	ret    
10016007:	push   DWORD PTR [esp+0x4]
1001600b:	call   0x10015fcb
10016010:	neg    eax
10016012:	sbb    eax,eax
10016014:	neg    eax
10016016:	pop    ecx
10016017:	dec    eax
10016018:	ret    
10016019:	mov    eax,DWORD PTR [esp+0x4]
1001601d:	mov    ds:0x100662c0,eax
10016022:	ret    
10016023:	push   ebp
10016024:	lea    ebp,[esp-0x2a8]
1001602b:	sub    esp,0x328
10016031:	mov    eax,ds:0x10064694
10016036:	xor    eax,ebp
10016038:	mov    DWORD PTR [ebp+0x2a4],eax
1001603e:	push   esi
1001603f:	mov    DWORD PTR [ebp+0x88],eax
10016045:	mov    DWORD PTR [ebp+0x84],ecx
1001604b:	mov    DWORD PTR [ebp+0x80],edx
10016051:	mov    DWORD PTR [ebp+0x7c],ebx
10016054:	mov    DWORD PTR [ebp+0x78],esi
10016057:	mov    DWORD PTR [ebp+0x74],edi
1001605a:	data16 mov WORD PTR [ebp+0xa0],ss
10016061:	data16 mov WORD PTR [ebp+0x94],cs
10016068:	data16 mov WORD PTR [ebp+0x70],ds
1001606c:	data16 mov WORD PTR [ebp+0x6c],es
10016070:	data16 mov WORD PTR [ebp+0x68],fs
10016074:	data16 mov WORD PTR [ebp+0x64],gs
10016078:	pushf  
10016079:	pop    DWORD PTR [ebp+0x98]
1001607f:	mov    esi,DWORD PTR [ebp+0x2ac]
10016085:	lea    eax,[ebp+0x2ac]
1001608b:	mov    DWORD PTR [ebp+0x9c],eax
10016091:	mov    DWORD PTR [ebp-0x28],0x10001
10016098:	mov    DWORD PTR [ebp+0x90],esi
1001609e:	mov    eax,DWORD PTR [eax-0x4]
100160a1:	push   0x50
100160a3:	mov    DWORD PTR [ebp+0x8c],eax
100160a9:	lea    eax,[ebp-0x80]
100160ac:	push   0x0
100160ae:	push   eax
100160af:	call   0x10016530
100160b4:	lea    eax,[ebp-0x80]
100160b7:	mov    DWORD PTR [ebp-0x30],eax
100160ba:	lea    eax,[ebp-0x28]
100160bd:	add    esp,0xc
100160c0:	mov    DWORD PTR [ebp-0x80],0xc000000d
100160c7:	mov    DWORD PTR [ebp-0x74],esi
100160ca:	mov    DWORD PTR [ebp-0x2c],eax
100160cd:	call   DWORD PTR ds:0x1002c1fc
100160d3:	push   0x0
100160d5:	mov    esi,eax
100160d7:	call   DWORD PTR ds:0x1002c1f8
100160dd:	lea    eax,[ebp-0x30]
100160e0:	push   eax
100160e1:	call   DWORD PTR ds:0x1002c1f4
100160e7:	test   eax,eax
100160e9:	jne    0x100160f7
100160eb:	test   esi,esi
100160ed:	jne    0x100160f7
100160ef:	push   0x2
100160f1:	call   0x10019fbb
100160f6:	pop    ecx
100160f7:	push   0xc000000d
100160fc:	call   DWORD PTR ds:0x1002c0d0
10016102:	push   eax
10016103:	call   DWORD PTR ds:0x1002c120
10016109:	mov    ecx,DWORD PTR [ebp+0x2a4]
1001610f:	xor    ecx,ebp
10016111:	pop    esi
10016112:	call   0x10015adb
10016117:	add    ebp,0x2a8
1001611d:	leave  
1001611e:	ret    
1001611f:	push   ebp
10016120:	mov    ebp,esp
10016122:	push   DWORD PTR ds:0x100662c0
10016128:	call   0x100195fa
1001612d:	test   eax,eax
1001612f:	pop    ecx
10016130:	je     0x10016135
10016132:	pop    ebp
10016133:	jmp    eax
10016135:	push   0x2
10016137:	call   0x10019fbb
1001613c:	pop    ecx
1001613d:	pop    ebp
1001613e:	jmp    0x10016023
10016143:	xor    eax,eax
10016145:	push   eax
10016146:	push   eax
10016147:	push   eax
10016148:	push   eax
10016149:	push   eax
1001614a:	call   0x1001611f
1001614f:	add    esp,0x14
10016152:	ret    
10016153:	push   ebp
10016154:	mov    ebp,esp
10016156:	push   esi
10016157:	mov    esi,DWORD PTR [ebp+0x14]
1001615a:	push   edi
1001615b:	xor    edi,edi
1001615d:	cmp    esi,edi
1001615f:	jne    0x10016165
10016161:	xor    eax,eax
10016163:	jmp    0x100161ca
10016165:	cmp    DWORD PTR [ebp+0x8],edi
10016168:	jne    0x10016185
1001616a:	call   0x10019ffe
1001616f:	push   0x16
10016171:	pop    esi
10016172:	mov    DWORD PTR [eax],esi
10016174:	push   edi
10016175:	push   edi
10016176:	push   edi
10016177:	push   edi
10016178:	push   edi
10016179:	call   0x1001611f
1001617e:	add    esp,0x14
10016181:	mov    eax,esi
10016183:	jmp    0x100161ca
10016185:	cmp    DWORD PTR [ebp+0x10],edi
10016188:	je     0x100161a0
1001618a:	cmp    DWORD PTR [ebp+0xc],esi
1001618d:	jb     0x100161a0
1001618f:	push   esi
10016190:	push   DWORD PTR [ebp+0x10]
10016193:	push   DWORD PTR [ebp+0x8]
10016196:	call   0x100167d0
1001619b:	add    esp,0xc
1001619e:	jmp    0x10016161
100161a0:	push   DWORD PTR [ebp+0xc]
100161a3:	push   edi
100161a4:	push   DWORD PTR [ebp+0x8]
100161a7:	call   0x10016530
100161ac:	add    esp,0xc
100161af:	cmp    DWORD PTR [ebp+0x10],edi
100161b2:	je     0x1001616a
100161b4:	cmp    DWORD PTR [ebp+0xc],esi
100161b7:	jae    0x100161c7
100161b9:	call   0x10019ffe
100161be:	push   0x22
100161c0:	pop    ecx
100161c1:	mov    DWORD PTR [eax],ecx
100161c3:	mov    esi,ecx
100161c5:	jmp    0x10016174
100161c7:	push   0x16
100161c9:	pop    eax
100161ca:	pop    edi
100161cb:	pop    esi
100161cc:	pop    ebp
100161cd:	ret    
100161ce:	push   ebp
100161cf:	mov    ebp,esp
100161d1:	sub    esp,0x20
100161d4:	mov    eax,DWORD PTR [ebp+0x8]
100161d7:	push   esi
100161d8:	push   edi
100161d9:	push   0x8
100161db:	pop    ecx
100161dc:	mov    esi,0x10050464
100161e1:	lea    edi,[ebp-0x20]
100161e4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100161e6:	mov    DWORD PTR [ebp-0x8],eax
100161e9:	mov    eax,DWORD PTR [ebp+0xc]
100161ec:	test   eax,eax
100161ee:	pop    edi
100161ef:	mov    DWORD PTR [ebp-0x4],eax
100161f2:	pop    esi
100161f3:	je     0x10016201
100161f5:	test   BYTE PTR [eax],0x8
100161f8:	je     0x10016201
100161fa:	mov    DWORD PTR [ebp-0xc],0x1994000
10016201:	lea    eax,[ebp-0xc]
10016204:	push   eax
10016205:	push   DWORD PTR [ebp-0x10]
10016208:	push   DWORD PTR [ebp-0x1c]
1001620b:	push   DWORD PTR [ebp-0x20]
1001620e:	call   DWORD PTR ds:0x1002c1dc
10016214:	leave  
10016215:	ret    0x8
10016218:	push   ecx
10016219:	mov    DWORD PTR [ecx],0x10050488
1001621f:	call   0x1001a042
10016224:	pop    ecx
10016225:	ret    
10016226:	push   esi
10016227:	mov    esi,ecx
10016229:	call   0x10016218
1001622e:	test   BYTE PTR [esp+0x8],0x1
10016233:	je     0x1001623c
10016235:	push   esi
10016236:	call   0x10015ad6
1001623b:	pop    ecx
1001623c:	mov    eax,esi
1001623e:	pop    esi
1001623f:	ret    0x4
10016242:	mov    eax,DWORD PTR [esp+0x4]
10016246:	add    ecx,0x9
10016249:	push   ecx
1001624a:	add    eax,0x9
1001624d:	push   eax
1001624e:	call   0x1001a0c0
10016253:	neg    eax
10016255:	pop    ecx
10016256:	sbb    eax,eax
10016258:	pop    ecx
10016259:	inc    eax
1001625a:	ret    0x4
1001625d:	mov    eax,ecx
1001625f:	and    DWORD PTR [eax+0x4],0x0
10016263:	and    DWORD PTR [eax+0x8],0x0
10016267:	mov    DWORD PTR [eax],0x10050490
1001626d:	ret    
1001626e:	push   ebx
1001626f:	mov    ebx,DWORD PTR [esp+0x8]
10016273:	push   esi
10016274:	push   edi
10016275:	mov    edi,ecx
10016277:	mov    DWORD PTR [edi],0x10050490
1001627d:	mov    eax,DWORD PTR [ebx]
1001627f:	test   eax,eax
10016281:	je     0x100162a9
10016283:	push   eax
10016284:	call   0x10016370
10016289:	mov    esi,eax
1001628b:	inc    esi
1001628c:	push   esi
1001628d:	call   0x10016c12
10016292:	test   eax,eax
10016294:	pop    ecx
10016295:	pop    ecx
10016296:	mov    DWORD PTR [edi+0x4],eax
10016299:	je     0x100162ad
1001629b:	push   DWORD PTR [ebx]
1001629d:	push   esi
1001629e:	push   eax
1001629f:	call   0x1001a148
100162a4:	add    esp,0xc
100162a7:	jmp    0x100162ad
100162a9:	and    DWORD PTR [edi+0x4],0x0
100162ad:	mov    DWORD PTR [edi+0x8],0x1
100162b4:	mov    eax,edi
100162b6:	pop    edi
100162b7:	pop    esi
100162b8:	pop    ebx
100162b9:	ret    0x4
100162bc:	mov    eax,ecx
100162be:	mov    ecx,DWORD PTR [esp+0x4]
100162c2:	mov    DWORD PTR [eax],0x10050490
100162c8:	mov    ecx,DWORD PTR [ecx]
100162ca:	and    DWORD PTR [eax+0x8],0x0
100162ce:	mov    DWORD PTR [eax+0x4],ecx
100162d1:	ret    0x8
100162d4:	push   ebx
100162d5:	mov    ebx,DWORD PTR [esp+0x8]
100162d9:	push   esi
100162da:	mov    esi,ecx
100162dc:	mov    DWORD PTR [esi],0x10050490
100162e2:	mov    eax,DWORD PTR [ebx+0x8]
100162e5:	mov    DWORD PTR [esi+0x8],eax
100162e8:	test   eax,eax
100162ea:	mov    eax,DWORD PTR [ebx+0x4]
100162ed:	push   edi
100162ee:	je     0x10016321
100162f0:	test   eax,eax
100162f2:	je     0x1001631b
100162f4:	push   eax
100162f5:	call   0x10016370
100162fa:	mov    edi,eax
100162fc:	inc    edi
100162fd:	push   edi
100162fe:	call   0x10016c12
10016303:	test   eax,eax
10016305:	pop    ecx
10016306:	pop    ecx
10016307:	mov    DWORD PTR [esi+0x4],eax
1001630a:	je     0x10016324
1001630c:	push   DWORD PTR [ebx+0x4]
1001630f:	push   edi
10016310:	push   eax
10016311:	call   0x1001a148
10016316:	add    esp,0xc
10016319:	jmp    0x10016324
1001631b:	and    DWORD PTR [esi+0x4],0x0
1001631f:	jmp    0x10016324
10016321:	mov    DWORD PTR [esi+0x4],eax
10016324:	pop    edi
10016325:	mov    eax,esi
10016327:	pop    esi
10016328:	pop    ebx
10016329:	ret    0x4
1001632c:	cmp    DWORD PTR [ecx+0x8],0x0
10016330:	mov    DWORD PTR [ecx],0x10050490
10016336:	je     0x10016341
10016338:	push   DWORD PTR [ecx+0x4]
1001633b:	call   0x10016b35
10016340:	pop    ecx
10016341:	ret    
10016342:	mov    eax,DWORD PTR [ecx+0x4]
10016345:	test   eax,eax
10016347:	jne    0x1001634e
10016349:	mov    eax,0x10050498
1001634e:	ret    
1001634f:	push   esi
10016350:	mov    esi,ecx
10016352:	call   0x1001632c
10016357:	test   BYTE PTR [esp+0x8],0x1
1001635c:	je     0x10016365
1001635e:	push   esi
1001635f:	call   0x10015ad6
10016364:	pop    ecx
10016365:	mov    eax,esi
10016367:	pop    esi
10016368:	ret    0x4
1001636b:	int3   
1001636c:	int3   
1001636d:	int3   
1001636e:	int3   
1001636f:	int3   
10016370:	mov    ecx,DWORD PTR [esp+0x4]
10016374:	test   ecx,0x3
1001637a:	je     0x100163a0
1001637c:	mov    al,BYTE PTR [ecx]
1001637e:	add    ecx,0x1
10016381:	test   al,al
10016383:	je     0x100163d3
10016385:	test   ecx,0x3
1001638b:	jne    0x1001637c
1001638d:	add    eax,0x0
10016392:	lea    esp,[esp+0x0]
10016399:	lea    esp,[esp+0x0]
100163a0:	mov    eax,DWORD PTR [ecx]
100163a2:	mov    edx,0x7efefeff
100163a7:	add    edx,eax
100163a9:	xor    eax,0xffffffff
100163ac:	xor    eax,edx
100163ae:	add    ecx,0x4
100163b1:	test   eax,0x81010100
100163b6:	je     0x100163a0
100163b8:	mov    eax,DWORD PTR [ecx-0x4]
100163bb:	test   al,al
100163bd:	je     0x100163f1
100163bf:	test   ah,ah
100163c1:	je     0x100163e7
100163c3:	test   eax,0xff0000
100163c8:	je     0x100163dd
100163ca:	test   eax,0xff000000
100163cf:	je     0x100163d3
100163d1:	jmp    0x100163a0
100163d3:	lea    eax,[ecx-0x1]
100163d6:	mov    ecx,DWORD PTR [esp+0x4]
100163da:	sub    eax,ecx
100163dc:	ret    
100163dd:	lea    eax,[ecx-0x2]
100163e0:	mov    ecx,DWORD PTR [esp+0x4]
100163e4:	sub    eax,ecx
100163e6:	ret    
100163e7:	lea    eax,[ecx-0x3]
100163ea:	mov    ecx,DWORD PTR [esp+0x4]
100163ee:	sub    eax,ecx
100163f0:	ret    
100163f1:	lea    eax,[ecx-0x4]
100163f4:	mov    ecx,DWORD PTR [esp+0x4]
100163f8:	sub    eax,ecx
100163fa:	ret    
100163fb:	push   esi
100163fc:	push   0x1
100163fe:	push   0x100646c0
10016403:	mov    esi,ecx
10016405:	call   0x100162bc
1001640a:	mov    DWORD PTR [esi],0x1002c4ec
10016410:	mov    eax,esi
10016412:	pop    esi
10016413:	ret    
10016414:	push   ebp
10016415:	mov    ebp,esp
10016417:	sub    esp,0xc
1001641a:	jmp    0x10016429
1001641c:	push   DWORD PTR [ebp+0x8]
1001641f:	call   0x1001a1b7
10016424:	test   eax,eax
10016426:	pop    ecx
10016427:	je     0x10016438
10016429:	push   DWORD PTR [ebp+0x8]
1001642c:	call   0x10016c12
10016431:	test   eax,eax
10016433:	pop    ecx
10016434:	je     0x1001641c
10016436:	leave  
10016437:	ret    
10016438:	test   BYTE PTR ds:0x100662d0,0x1
1001643f:	mov    esi,0x100662c4
10016444:	jne    0x1001645f
10016446:	or     DWORD PTR ds:0x100662d0,0x1
1001644d:	mov    ecx,esi
1001644f:	call   0x100163fb
10016454:	push   0x1002bc40
10016459:	call   0x10016007
1001645e:	pop    ecx
1001645f:	push   esi
10016460:	lea    ecx,[ebp-0xc]
10016463:	call   0x100162d4
10016468:	push   0x10058b44
1001646d:	lea    eax,[ebp-0xc]
10016470:	push   eax
10016471:	mov    DWORD PTR [ebp-0xc],0x1002c4ec
10016478:	call   0x100161ce
1001647d:	int3   
1001647e:	push   ebp
1001647f:	mov    ebp,esp
10016481:	mov    eax,DWORD PTR [ebp+0x14]
10016484:	push   esi
10016485:	push   edi
10016486:	xor    edi,edi
10016488:	cmp    eax,edi
1001648a:	je     0x100164d3
1001648c:	cmp    DWORD PTR [ebp+0x8],edi
1001648f:	jne    0x100164ac
10016491:	call   0x10019ffe
10016496:	push   0x16
10016498:	pop    esi
10016499:	mov    DWORD PTR [eax],esi
1001649b:	push   edi
1001649c:	push   edi
1001649d:	push   edi
1001649e:	push   edi
1001649f:	push   edi
100164a0:	call   0x1001611f
100164a5:	add    esp,0x14
100164a8:	mov    eax,esi
100164aa:	jmp    0x100164d5
100164ac:	cmp    DWORD PTR [ebp+0x10],edi
100164af:	je     0x10016491
100164b1:	cmp    DWORD PTR [ebp+0xc],eax
100164b4:	jae    0x100164c4
100164b6:	call   0x10019ffe
100164bb:	push   0x22
100164bd:	pop    ecx
100164be:	mov    DWORD PTR [eax],ecx
100164c0:	mov    esi,ecx
100164c2:	jmp    0x1001649b
100164c4:	push   eax
100164c5:	push   DWORD PTR [ebp+0x10]
100164c8:	push   DWORD PTR [ebp+0x8]
100164cb:	call   0x1001a1e0
100164d0:	add    esp,0xc
100164d3:	xor    eax,eax
100164d5:	pop    edi
100164d6:	pop    esi
100164d7:	pop    ebp
100164d8:	ret    
100164d9:	push   0xa
100164db:	push   0x0
100164dd:	push   DWORD PTR [esp+0xc]
100164e1:	call   0x1001a73c
100164e6:	add    esp,0xc
100164e9:	ret    
100164ea:	jmp    0x100164d9
100164ef:	push   0xa
100164f1:	push   0x0
100164f3:	push   DWORD PTR [esp+0xc]
100164f7:	call   0x1001aa15
100164fc:	add    esp,0xc
100164ff:	ret    
10016500:	push   ecx
10016501:	lea    ecx,[esp+0x4]
10016505:	sub    ecx,eax
10016507:	sbb    eax,eax
10016509:	not    eax
1001650b:	and    ecx,eax
1001650d:	mov    eax,esp
1001650f:	and    eax,0xfffff000
10016514:	cmp    ecx,eax
10016516:	jb     0x10016522
10016518:	mov    eax,ecx
1001651a:	pop    ecx
1001651b:	xchg   esp,eax
1001651c:	mov    eax,DWORD PTR [eax]
1001651e:	mov    DWORD PTR [esp],eax
10016521:	ret    
10016522:	sub    eax,0x1000
10016527:	test   DWORD PTR [eax],eax
10016529:	jmp    0x10016514
1001652b:	int3   
1001652c:	int3   
1001652d:	int3   
1001652e:	int3   
1001652f:	int3   
10016530:	mov    edx,DWORD PTR [esp+0xc]
10016534:	mov    ecx,DWORD PTR [esp+0x4]
10016538:	test   edx,edx
1001653a:	je     0x100165a5
1001653c:	xor    eax,eax
1001653e:	mov    al,BYTE PTR [esp+0x8]
10016542:	test   al,al
10016544:	jne    0x1001655c
10016546:	cmp    edx,0x100
1001654c:	jb     0x1001655c
1001654e:	cmp    DWORD PTR ds:0x100680a0,0x0
10016555:	je     0x1001655c
10016557:	jmp    0x1001aa95
1001655c:	push   edi
1001655d:	mov    edi,ecx
1001655f:	cmp    edx,0x4
10016562:	jb     0x10016595
10016564:	neg    ecx
10016566:	and    ecx,0x3
10016569:	je     0x10016577
1001656b:	sub    edx,ecx
1001656d:	mov    BYTE PTR [edi],al
1001656f:	add    edi,0x1
10016572:	sub    ecx,0x1
10016575:	jne    0x1001656d
10016577:	mov    ecx,eax
10016579:	shl    eax,0x8
1001657c:	add    eax,ecx
1001657e:	mov    ecx,eax
10016580:	shl    eax,0x10
10016583:	add    eax,ecx
10016585:	mov    ecx,edx
10016587:	and    edx,0x3
1001658a:	shr    ecx,0x2
1001658d:	je     0x10016595
1001658f:	rep stos DWORD PTR es:[edi],eax
10016591:	test   edx,edx
10016593:	je     0x1001659f
10016595:	mov    BYTE PTR [edi],al
10016597:	add    edi,0x1
1001659a:	sub    edx,0x1
1001659d:	jne    0x10016595
1001659f:	mov    eax,DWORD PTR [esp+0x8]
100165a3:	pop    edi
100165a4:	ret    
100165a5:	mov    eax,DWORD PTR [esp+0x4]
100165a9:	ret    
100165aa:	mov    eax,DWORD PTR [esp+0x4]
100165ae:	test   eax,eax
100165b0:	push   esi
100165b1:	mov    esi,ecx
100165b3:	mov    BYTE PTR [esi+0xc],0x0
100165b7:	jne    0x1001661c
100165b9:	call   0x10019816
100165be:	mov    DWORD PTR [esi+0x8],eax
100165c1:	mov    ecx,DWORD PTR [eax+0x6c]
100165c4:	mov    DWORD PTR [esi],ecx
100165c6:	mov    ecx,DWORD PTR [eax+0x68]
100165c9:	mov    DWORD PTR [esi+0x4],ecx
100165cc:	mov    ecx,DWORD PTR [esi]
100165ce:	cmp    ecx,DWORD PTR ds:0x10064f98
100165d4:	je     0x100165e8
100165d6:	mov    ecx,DWORD PTR ds:0x10064eb0
100165dc:	test   DWORD PTR [eax+0x70],ecx
100165df:	jne    0x100165e8
100165e1:	call   0x1001814a
100165e6:	mov    DWORD PTR [esi],eax
100165e8:	mov    eax,DWORD PTR [esi+0x4]
100165eb:	cmp    eax,DWORD PTR ds:0x10064db8
100165f1:	je     0x10016609
100165f3:	mov    eax,DWORD PTR [esi+0x8]
100165f6:	mov    ecx,DWORD PTR ds:0x10064eb0
100165fc:	test   DWORD PTR [eax+0x70],ecx
100165ff:	jne    0x10016609
10016601:	call   0x1001ad46
10016606:	mov    DWORD PTR [esi+0x4],eax
10016609:	mov    eax,DWORD PTR [esi+0x8]
1001660c:	test   BYTE PTR [eax+0x70],0x2
10016610:	jne    0x10016626
10016612:	or     DWORD PTR [eax+0x70],0x2
10016616:	mov    BYTE PTR [esi+0xc],0x1
1001661a:	jmp    0x10016626
1001661c:	mov    ecx,DWORD PTR [eax]
1001661e:	mov    DWORD PTR [esi],ecx
10016620:	mov    eax,DWORD PTR [eax+0x4]
10016623:	mov    DWORD PTR [esi+0x4],eax
10016626:	mov    eax,esi
10016628:	pop    esi
10016629:	ret    0x4
1001662c:	push   ebp
1001662d:	mov    ebp,esp
1001662f:	sub    esp,0x10
10016632:	push   ebx
10016633:	push   esi
10016634:	push   DWORD PTR [ebp+0x10]
10016637:	lea    ecx,[ebp-0x10]
1001663a:	call   0x100165aa
1001663f:	mov    ebx,DWORD PTR [ebp+0x8]
10016642:	xor    esi,esi
10016644:	cmp    ebx,esi
10016646:	jne    0x10016677
10016648:	call   0x10019ffe
1001664d:	push   esi
1001664e:	push   esi
1001664f:	push   esi
10016650:	push   esi
10016651:	push   esi
10016652:	mov    DWORD PTR [eax],0x16
10016658:	call   0x1001611f
1001665d:	add    esp,0x14
10016660:	cmp    BYTE PTR [ebp-0x4],0x0
10016664:	je     0x1001666d
10016666:	mov    eax,DWORD PTR [ebp-0x8]
10016669:	and    DWORD PTR [eax+0x70],0xfffffffd
1001666d:	mov    eax,0x7fffffff
10016672:	jmp    0x10016737
10016677:	push   edi
10016678:	mov    edi,DWORD PTR [ebp+0xc]
1001667b:	cmp    edi,esi
1001667d:	jne    0x100166ae
1001667f:	call   0x10019ffe
10016684:	push   esi
10016685:	push   esi
10016686:	push   esi
10016687:	push   esi
10016688:	push   esi
10016689:	mov    DWORD PTR [eax],0x16
1001668f:	call   0x1001611f
10016694:	add    esp,0x14
10016697:	cmp    BYTE PTR [ebp-0x4],0x0
1001669b:	je     0x100166a4
1001669d:	mov    eax,DWORD PTR [ebp-0x8]
100166a0:	and    DWORD PTR [eax+0x70],0xfffffffd
100166a4:	mov    eax,0x7fffffff
100166a9:	jmp    0x10016736
100166ae:	mov    eax,DWORD PTR [ebp-0x10]
100166b1:	cmp    DWORD PTR [eax+0x14],esi
100166b4:	jne    0x100166f0
100166b6:	movzx  eax,WORD PTR [ebx]
100166b9:	cmp    ax,0x41
100166bd:	jb     0x100166c8
100166bf:	cmp    ax,0x5a
100166c3:	ja     0x100166c8
100166c5:	add    eax,0x20
100166c8:	movzx  esi,ax
100166cb:	movzx  eax,WORD PTR [edi]
100166ce:	cmp    ax,0x41
100166d2:	jb     0x100166dd
100166d4:	cmp    ax,0x5a
100166d8:	ja     0x100166dd
100166da:	add    eax,0x20
100166dd:	inc    ebx
100166de:	inc    ebx
100166df:	inc    edi
100166e0:	inc    edi
100166e1:	test   si,si
100166e4:	movzx  eax,ax
100166e7:	je     0x10016721
100166e9:	cmp    si,ax
100166ec:	je     0x100166b6
100166ee:	jmp    0x10016721
100166f0:	movzx  eax,WORD PTR [ebx]
100166f3:	lea    ecx,[ebp-0x10]
100166f6:	push   ecx
100166f7:	push   eax
100166f8:	call   0x1001b1f5
100166fd:	movzx  esi,ax
10016700:	movzx  eax,WORD PTR [edi]
10016703:	lea    ecx,[ebp-0x10]
10016706:	push   ecx
10016707:	inc    ebx
10016708:	push   eax
10016709:	inc    ebx
1001670a:	call   0x1001b1f5
1001670f:	add    esp,0x10
10016712:	inc    edi
10016713:	inc    edi
10016714:	test   si,si
10016717:	movzx  eax,ax
1001671a:	je     0x10016721
1001671c:	cmp    si,ax
1001671f:	je     0x100166f0
10016721:	movzx  ecx,ax
10016724:	movzx  eax,si
10016727:	sub    eax,ecx
10016729:	cmp    BYTE PTR [ebp-0x4],0x0
1001672d:	je     0x10016736
1001672f:	mov    ecx,DWORD PTR [ebp-0x8]
10016732:	and    DWORD PTR [ecx+0x70],0xfffffffd
10016736:	pop    edi
10016737:	pop    esi
10016738:	pop    ebx
10016739:	leave  
1001673a:	ret    
1001673b:	push   esi
1001673c:	xor    esi,esi
1001673e:	cmp    DWORD PTR ds:0x100662e8,esi
10016744:	push   edi
10016745:	jne    0x100167b8
10016747:	mov    edi,DWORD PTR [esp+0xc]
1001674b:	cmp    edi,esi
1001674d:	jne    0x1001676e
1001674f:	call   0x10019ffe
10016754:	push   esi
10016755:	push   esi
10016756:	push   esi
10016757:	push   esi
10016758:	push   esi
10016759:	mov    DWORD PTR [eax],0x16
1001675f:	call   0x1001611f
10016764:	add    esp,0x14
10016767:	mov    eax,0x7fffffff
1001676c:	jmp    0x100167c9
1001676e:	mov    edx,DWORD PTR [esp+0x10]
10016772:	cmp    edx,esi
10016774:	je     0x1001674f
10016776:	movzx  eax,WORD PTR [edi]
10016779:	cmp    ax,0x41
1001677d:	jb     0x10016788
1001677f:	cmp    ax,0x5a
10016783:	ja     0x10016788
10016785:	add    eax,0x20
10016788:	movzx  ecx,ax
1001678b:	movzx  eax,WORD PTR [edx]
1001678e:	cmp    ax,0x41
10016792:	jb     0x1001679d
10016794:	cmp    ax,0x5a
10016798:	ja     0x1001679d
1001679a:	add    eax,0x20
1001679d:	inc    edi
1001679e:	inc    edi
1001679f:	inc    edx
100167a0:	inc    edx
100167a1:	cmp    cx,si
100167a4:	movzx  eax,ax
100167a7:	je     0x100167ae
100167a9:	cmp    cx,ax
100167ac:	je     0x10016776
100167ae:	movzx  edx,ax
100167b1:	movzx  eax,cx
100167b4:	sub    eax,edx
100167b6:	jmp    0x100167c9
100167b8:	push   esi
100167b9:	push   DWORD PTR [esp+0x14]
100167bd:	push   DWORD PTR [esp+0x14]
100167c1:	call   0x1001662c
100167c6:	add    esp,0xc
100167c9:	pop    edi
100167ca:	pop    esi
100167cb:	ret    
100167cc:	int3   
100167cd:	int3   
100167ce:	int3   
100167cf:	int3   
100167d0:	push   ebp
100167d1:	mov    ebp,esp
100167d3:	push   edi
100167d4:	push   esi
100167d5:	mov    esi,DWORD PTR [ebp+0xc]
100167d8:	mov    ecx,DWORD PTR [ebp+0x10]
100167db:	mov    edi,DWORD PTR [ebp+0x8]
100167de:	mov    eax,ecx
100167e0:	mov    edx,ecx
100167e2:	add    eax,esi
100167e4:	cmp    edi,esi
100167e6:	jbe    0x100167f0
100167e8:	cmp    edi,eax
100167ea:	jb     0x10016994
100167f0:	cmp    ecx,0x100
100167f6:	jb     0x10016817
100167f8:	cmp    DWORD PTR ds:0x100680a0,0x0
100167ff:	je     0x10016817
10016801:	push   edi
10016802:	push   esi
10016803:	and    edi,0xf
10016806:	and    esi,0xf
10016809:	cmp    edi,esi
1001680b:	pop    esi
1001680c:	pop    edi
1001680d:	jne    0x10016817
1001680f:	pop    esi
10016810:	pop    edi
10016811:	pop    ebp
10016812:	jmp    0x1001b329
10016817:	test   edi,0x3
1001681d:	jne    0x10016834
1001681f:	shr    ecx,0x2
10016822:	and    edx,0x3
10016825:	cmp    ecx,0x8
10016828:	jb     0x10016854
1001682a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001682c:	jmp    DWORD PTR [edx*4+0x10016944]
10016833:	nop
10016834:	mov    eax,edi
10016836:	mov    edx,0x3
1001683b:	sub    ecx,0x4
1001683e:	jb     0x1001684c
10016840:	and    eax,0x3
10016843:	add    ecx,eax
10016845:	jmp    DWORD PTR [eax*4+0x10016858]
1001684c:	jmp    DWORD PTR [ecx*4+0x10016954]
10016853:	nop
10016854:	jmp    DWORD PTR [ecx*4+0x100168d8]
1001685b:	nop
1001685c:	push   0x94100168
10016861:	push   0x68b81001
10016866:	add    DWORD PTR [eax],edx
10016868:	and    edx,ecx
1001686a:	mov    al,BYTE PTR [esi]
1001686c:	mov    BYTE PTR [edi],al
1001686e:	mov    al,BYTE PTR [esi+0x1]
10016871:	mov    BYTE PTR [edi+0x1],al
10016874:	mov    al,BYTE PTR [esi+0x2]
10016877:	shr    ecx,0x2
1001687a:	mov    BYTE PTR [edi+0x2],al
1001687d:	add    esi,0x3
10016880:	add    edi,0x3
10016883:	cmp    ecx,0x8
10016886:	jb     0x10016854
10016888:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001688a:	jmp    DWORD PTR [edx*4+0x10016944]
10016891:	lea    ecx,[ecx+0x0]
10016894:	and    edx,ecx
10016896:	mov    al,BYTE PTR [esi]
10016898:	mov    BYTE PTR [edi],al
1001689a:	mov    al,BYTE PTR [esi+0x1]
1001689d:	shr    ecx,0x2
100168a0:	mov    BYTE PTR [edi+0x1],al
100168a3:	add    esi,0x2
100168a6:	add    edi,0x2
100168a9:	cmp    ecx,0x8
100168ac:	jb     0x10016854
100168ae:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100168b0:	jmp    DWORD PTR [edx*4+0x10016944]
100168b7:	nop
100168b8:	and    edx,ecx
100168ba:	mov    al,BYTE PTR [esi]
100168bc:	mov    BYTE PTR [edi],al
100168be:	add    esi,0x1
100168c1:	shr    ecx,0x2
100168c4:	add    edi,0x1
100168c7:	cmp    ecx,0x8
100168ca:	jb     0x10016854
100168cc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100168ce:	jmp    DWORD PTR [edx*4+0x10016944]
100168d5:	lea    ecx,[ecx+0x0]
100168d8:	cmp    ebp,DWORD PTR [ecx+0x1]
100168db:	adc    BYTE PTR [eax],ch
100168dd:	imul   eax,DWORD PTR [ecx],0x1692010
100168e3:	adc    BYTE PTR [eax],bl
100168e5:	imul   eax,DWORD PTR [ecx],0x1691010
100168eb:	adc    BYTE PTR [eax],cl
100168ed:	imul   eax,DWORD PTR [ecx],0x1690010
100168f3:	adc    al,bh
100168f5:	push   0x448b1001
100168fa:	mov    fs,esp
100168fc:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
10016900:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
10016904:	mov    DWORD PTR [edi+ecx*4-0x18],eax
10016908:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
1001690c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
10016910:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
10016914:	mov    DWORD PTR [edi+ecx*4-0x10],eax
10016918:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
1001691c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
10016920:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
10016924:	mov    DWORD PTR [edi+ecx*4-0x8],eax
10016928:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
1001692c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
10016930:	lea    eax,[ecx*4+0x0]
10016937:	add    esi,eax
10016939:	add    edi,eax
1001693b:	jmp    DWORD PTR [edx*4+0x10016944]
10016942:	mov    edi,edi
10016944:	push   esp
10016945:	imul   eax,DWORD PTR [ecx],0x1695c10
1001694b:	adc    BYTE PTR [eax+0x69],ch
1001694e:	add    DWORD PTR [eax],edx
10016950:	jl     0x100169bb
10016952:	add    DWORD PTR [eax],edx
10016954:	mov    eax,DWORD PTR [ebp+0x8]
10016957:	pop    esi
10016958:	pop    edi
10016959:	leave  
1001695a:	ret    
1001695b:	nop
1001695c:	mov    al,BYTE PTR [esi]
1001695e:	mov    BYTE PTR [edi],al
10016960:	mov    eax,DWORD PTR [ebp+0x8]
10016963:	pop    esi
10016964:	pop    edi
10016965:	leave  
10016966:	ret    
10016967:	nop
10016968:	mov    al,BYTE PTR [esi]
1001696a:	mov    BYTE PTR [edi],al
1001696c:	mov    al,BYTE PTR [esi+0x1]
1001696f:	mov    BYTE PTR [edi+0x1],al
10016972:	mov    eax,DWORD PTR [ebp+0x8]
10016975:	pop    esi
10016976:	pop    edi
10016977:	leave  
10016978:	ret    
10016979:	lea    ecx,[ecx+0x0]
1001697c:	mov    al,BYTE PTR [esi]
1001697e:	mov    BYTE PTR [edi],al
10016980:	mov    al,BYTE PTR [esi+0x1]
10016983:	mov    BYTE PTR [edi+0x1],al
10016986:	mov    al,BYTE PTR [esi+0x2]
10016989:	mov    BYTE PTR [edi+0x2],al
1001698c:	mov    eax,DWORD PTR [ebp+0x8]
1001698f:	pop    esi
10016990:	pop    edi
10016991:	leave  
10016992:	ret    
10016993:	nop
10016994:	lea    esi,[ecx+esi*1-0x4]
10016998:	lea    edi,[ecx+edi*1-0x4]
1001699c:	test   edi,0x3
100169a2:	jne    0x100169c8
100169a4:	shr    ecx,0x2
100169a7:	and    edx,0x3
100169aa:	cmp    ecx,0x8
100169ad:	jb     0x100169bc
100169af:	std    
100169b0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100169b2:	cld    
100169b3:	jmp    DWORD PTR [edx*4+0x10016ae0]
100169ba:	mov    edi,edi
100169bc:	neg    ecx
100169be:	jmp    DWORD PTR [ecx*4+0x10016a90]
100169c5:	lea    ecx,[ecx+0x0]
100169c8:	mov    eax,edi
100169ca:	mov    edx,0x3
100169cf:	cmp    ecx,0x4
100169d2:	jb     0x100169e0
100169d4:	and    eax,0x3
100169d7:	sub    ecx,eax
100169d9:	jmp    DWORD PTR [eax*4+0x100169e4]
100169e0:	jmp    DWORD PTR [ecx*4+0x10016ae0]
100169e7:	nop
100169e8:	hlt    
100169e9:	imul   eax,DWORD PTR [ecx],0x16a1810
100169ef:	adc    BYTE PTR [eax+0x6a],al
100169f2:	add    DWORD PTR [eax],edx
100169f4:	mov    al,BYTE PTR [esi+0x3]
100169f7:	and    edx,ecx
100169f9:	mov    BYTE PTR [edi+0x3],al
100169fc:	sub    esi,0x1
100169ff:	shr    ecx,0x2
10016a02:	sub    edi,0x1
10016a05:	cmp    ecx,0x8
10016a08:	jb     0x100169bc
10016a0a:	std    
10016a0b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016a0d:	cld    
10016a0e:	jmp    DWORD PTR [edx*4+0x10016ae0]
10016a15:	lea    ecx,[ecx+0x0]
10016a18:	mov    al,BYTE PTR [esi+0x3]
10016a1b:	and    edx,ecx
10016a1d:	mov    BYTE PTR [edi+0x3],al
10016a20:	mov    al,BYTE PTR [esi+0x2]
10016a23:	shr    ecx,0x2
10016a26:	mov    BYTE PTR [edi+0x2],al
10016a29:	sub    esi,0x2
10016a2c:	sub    edi,0x2
10016a2f:	cmp    ecx,0x8
10016a32:	jb     0x100169bc
10016a34:	std    
10016a35:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016a37:	cld    
10016a38:	jmp    DWORD PTR [edx*4+0x10016ae0]
10016a3f:	nop
10016a40:	mov    al,BYTE PTR [esi+0x3]
10016a43:	and    edx,ecx
10016a45:	mov    BYTE PTR [edi+0x3],al
10016a48:	mov    al,BYTE PTR [esi+0x2]
10016a4b:	mov    BYTE PTR [edi+0x2],al
10016a4e:	mov    al,BYTE PTR [esi+0x1]
10016a51:	shr    ecx,0x2
10016a54:	mov    BYTE PTR [edi+0x1],al
10016a57:	sub    esi,0x3
10016a5a:	sub    edi,0x3
10016a5d:	cmp    ecx,0x8
10016a60:	jb     0x100169bc
10016a66:	std    
10016a67:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10016a69:	cld    
10016a6a:	jmp    DWORD PTR [edx*4+0x10016ae0]
10016a71:	lea    ecx,[ecx+0x0]
10016a74:	xchg   esp,eax
10016a75:	push   0x1
10016a77:	adc    BYTE PTR [edx+ebp*2+0x6aa41001],bl
10016a7e:	add    DWORD PTR [eax],edx
10016a80:	lods   al,BYTE PTR ds:[esi]
10016a81:	push   0x1
10016a83:	adc    BYTE PTR [edx+ebp*2+0x6abc1001],dh
10016a8a:	add    DWORD PTR [eax],edx
10016a8c:	les    ebp,FWORD PTR [edx+0x1]
10016a8f:	adc    bh,dl
10016a91:	push   0x1
10016a93:	adc    BYTE PTR [ebx-0x76e371bc],cl
10016a99:	inc    esp
10016a9a:	(bad)  
10016a9b:	sbb    al,0x8b
10016a9d:	inc    esp
10016a9e:	mov    ds,WORD PTR [eax]
10016aa0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
10016aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
10016aa8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
10016aac:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
10016ab0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
10016ab4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
10016ab8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
10016abc:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
10016ac0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
10016ac4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
10016ac8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
10016acc:	lea    eax,[ecx*4+0x0]
10016ad3:	add    esi,eax
10016ad5:	add    edi,eax
10016ad7:	jmp    DWORD PTR [edx*4+0x10016ae0]
10016ade:	mov    edi,edi
10016ae0:	lock push 0x1
10016ae3:	adc    al,bh
10016ae5:	push   0x1
10016ae7:	adc    BYTE PTR [eax],cl
10016ae9:	imul   eax,DWORD PTR [ecx],0x10
10016aec:	sbb    al,0x6b
10016aee:	add    DWORD PTR [eax],edx
10016af0:	mov    eax,DWORD PTR [ebp+0x8]
10016af3:	pop    esi
10016af4:	pop    edi
10016af5:	leave  
10016af6:	ret    
10016af7:	nop
10016af8:	mov    al,BYTE PTR [esi+0x3]
10016afb:	mov    BYTE PTR [edi+0x3],al
10016afe:	mov    eax,DWORD PTR [ebp+0x8]
10016b01:	pop    esi
10016b02:	pop    edi
10016b03:	leave  
10016b04:	ret    
10016b05:	lea    ecx,[ecx+0x0]
10016b08:	mov    al,BYTE PTR [esi+0x3]
10016b0b:	mov    BYTE PTR [edi+0x3],al
10016b0e:	mov    al,BYTE PTR [esi+0x2]
10016b11:	mov    BYTE PTR [edi+0x2],al
10016b14:	mov    eax,DWORD PTR [ebp+0x8]
10016b17:	pop    esi
10016b18:	pop    edi
10016b19:	leave  
10016b1a:	ret    
10016b1b:	nop
10016b1c:	mov    al,BYTE PTR [esi+0x3]
10016b1f:	mov    BYTE PTR [edi+0x3],al
10016b22:	mov    al,BYTE PTR [esi+0x2]
10016b25:	mov    BYTE PTR [edi+0x2],al
10016b28:	mov    al,BYTE PTR [esi+0x1]
10016b2b:	mov    BYTE PTR [edi+0x1],al
10016b2e:	mov    eax,DWORD PTR [ebp+0x8]
10016b31:	pop    esi
10016b32:	pop    edi
10016b33:	leave  
10016b34:	ret    
10016b35:	push   0xc
10016b37:	push   0x10058460
10016b3c:	call   0x10017a38
10016b41:	mov    esi,DWORD PTR [ebp+0x8]
10016b44:	test   esi,esi
10016b46:	je     0x10016bbd
10016b48:	cmp    DWORD PTR ds:0x10068098,0x3
10016b4f:	jne    0x10016b94
10016b51:	push   0x4
10016b53:	call   0x1001b6ab
10016b58:	pop    ecx
10016b59:	and    DWORD PTR [ebp-0x4],0x0
10016b5d:	push   esi
10016b5e:	call   0x1001b724
10016b63:	pop    ecx
10016b64:	mov    DWORD PTR [ebp-0x1c],eax
10016b67:	test   eax,eax
10016b69:	je     0x10016b74
10016b6b:	push   esi
10016b6c:	push   eax
10016b6d:	call   0x1001b74f
10016b72:	pop    ecx
10016b73:	pop    ecx
10016b74:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10016b7b:	call   0x10016b8b
10016b80:	cmp    DWORD PTR [ebp-0x1c],0x0
10016b84:	jne    0x10016bbd
10016b86:	push   DWORD PTR [ebp+0x8]
10016b89:	jmp    0x10016b95
10016b8b:	push   0x4
10016b8d:	call   0x1001b5d3
10016b92:	pop    ecx
10016b93:	ret    
10016b94:	push   esi
10016b95:	push   0x0
10016b97:	push   DWORD PTR ds:0x100666c0
10016b9d:	call   DWORD PTR ds:0x1002c1cc
10016ba3:	test   eax,eax
10016ba5:	jne    0x10016bbd
10016ba7:	call   0x10019ffe
10016bac:	mov    esi,eax
10016bae:	call   DWORD PTR ds:0x1002c07c
10016bb4:	push   eax
10016bb5:	call   0x10019fc3
10016bba:	mov    DWORD PTR [esi],eax
10016bbc:	pop    ecx
10016bbd:	call   0x10017a7d
10016bc2:	ret    
10016bc3:	push   0xc
10016bc5:	push   0x10058480
10016bca:	call   0x10017a38
10016bcf:	and    DWORD PTR [ebp-0x1c],0x0
10016bd3:	mov    esi,DWORD PTR [ebp+0x8]
10016bd6:	cmp    esi,DWORD PTR ds:0x10068088
10016bdc:	ja     0x10016c00
10016bde:	push   0x4
10016be0:	call   0x1001b6ab
10016be5:	pop    ecx
10016be6:	and    DWORD PTR [ebp-0x4],0x0
10016bea:	push   esi
10016beb:	call   0x1001bef8
10016bf0:	pop    ecx
10016bf1:	mov    DWORD PTR [ebp-0x1c],eax
10016bf4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10016bfb:	call   0x10016c09
10016c00:	mov    eax,DWORD PTR [ebp-0x1c]
10016c03:	call   0x10017a7d
10016c08:	ret    
10016c09:	push   0x4
10016c0b:	call   0x1001b5d3
10016c10:	pop    ecx
10016c11:	ret    
10016c12:	push   ebp
10016c13:	mov    ebp,DWORD PTR [esp+0x8]
10016c17:	cmp    ebp,0xffffffe0
10016c1a:	ja     0x10016cbf
10016c20:	push   ebx
10016c21:	mov    ebx,DWORD PTR ds:0x1002c1c8
10016c27:	push   esi
10016c28:	push   edi
10016c29:	xor    esi,esi
10016c2b:	cmp    DWORD PTR ds:0x100666c0,esi
10016c31:	mov    edi,ebp
10016c33:	jne    0x10016c4d
10016c35:	call   0x1001c37b
10016c3a:	push   0x1e
10016c3c:	call   0x1001c1db
10016c41:	push   0xff
10016c46:	call   0x10019d09
10016c4b:	pop    ecx
10016c4c:	pop    ecx
10016c4d:	mov    eax,ds:0x10068098
10016c52:	cmp    eax,0x1
10016c55:	jne    0x10016c65
10016c57:	cmp    ebp,esi
10016c59:	je     0x10016c5f
10016c5b:	mov    eax,ebp
10016c5d:	jmp    0x10016c62
10016c5f:	xor    eax,eax
10016c61:	inc    eax
10016c62:	push   eax
10016c63:	jmp    0x10016c83
10016c65:	cmp    eax,0x3
10016c68:	jne    0x10016c75
10016c6a:	push   ebp
10016c6b:	call   0x10016bc3
10016c70:	cmp    eax,esi
10016c72:	pop    ecx
10016c73:	jne    0x10016c8c
10016c75:	cmp    ebp,esi
10016c77:	jne    0x10016c7c
10016c79:	xor    edi,edi
10016c7b:	inc    edi
10016c7c:	add    edi,0xf
10016c7f:	and    edi,0xfffffff0
10016c82:	push   edi
10016c83:	push   esi
10016c84:	push   DWORD PTR ds:0x100666c0
10016c8a:	call   ebx
10016c8c:	mov    esi,eax
10016c8e:	test   esi,esi
10016c90:	jne    0x10016cb8
10016c92:	cmp    DWORD PTR ds:0x10066b34,eax
10016c98:	push   0xc
10016c9a:	pop    edi
10016c9b:	je     0x10016caa
10016c9d:	push   ebp
10016c9e:	call   0x1001a1b7
10016ca3:	test   eax,eax
10016ca5:	pop    ecx
10016ca6:	jne    0x10016c29
10016ca8:	jmp    0x10016cb1
10016caa:	call   0x10019ffe
10016caf:	mov    DWORD PTR [eax],edi
10016cb1:	call   0x10019ffe
10016cb6:	mov    DWORD PTR [eax],edi
10016cb8:	pop    edi
10016cb9:	mov    eax,esi
10016cbb:	pop    esi
10016cbc:	pop    ebx
10016cbd:	pop    ebp
10016cbe:	ret    
10016cbf:	push   ebp
10016cc0:	call   0x1001a1b7
10016cc5:	pop    ecx
10016cc6:	call   0x10019ffe
10016ccb:	mov    DWORD PTR [eax],0xc
10016cd1:	xor    eax,eax
10016cd3:	pop    ebp
10016cd4:	ret    
10016cd5:	push   ebp
10016cd6:	mov    ebp,esp
10016cd8:	push   ecx
10016cd9:	mov    eax,DWORD PTR [ebp+0xc]
10016cdc:	cmp    eax,0x1
10016cdf:	push   ebx
10016ce0:	push   esi
10016ce1:	push   edi
10016ce2:	jne    0x10016dff
10016ce8:	mov    ebx,DWORD PTR ds:0x1002c1d8
10016cee:	mov    edi,0x94
10016cf3:	push   edi
10016cf4:	push   0x0
10016cf6:	call   ebx
10016cf8:	push   eax
10016cf9:	call   DWORD PTR ds:0x1002c1c8
10016cff:	mov    esi,eax
10016d01:	test   esi,esi
10016d03:	jne    0x10016d0c
10016d05:	xor    eax,eax
10016d07:	jmp    0x10016ea7
10016d0c:	push   esi
10016d0d:	mov    DWORD PTR [esi],edi
10016d0f:	call   DWORD PTR ds:0x1002c1c0
10016d15:	test   eax,eax
10016d17:	push   esi
10016d18:	push   0x0
10016d1a:	jne    0x10016d27
10016d1c:	call   ebx
10016d1e:	push   eax
10016d1f:	call   DWORD PTR ds:0x1002c1cc
10016d25:	jmp    0x10016d05
10016d27:	mov    eax,DWORD PTR [esi+0x10]
10016d2a:	mov    edi,DWORD PTR [esi+0xc]
10016d2d:	mov    DWORD PTR [ebp+0xc],eax
10016d30:	mov    eax,DWORD PTR [esi+0x4]
10016d33:	mov    DWORD PTR [ebp+0x10],eax
10016d36:	mov    eax,DWORD PTR [esi+0x8]
10016d39:	mov    DWORD PTR [ebp-0x4],eax
10016d3c:	and    edi,0x7fff
10016d42:	call   ebx
10016d44:	push   eax
10016d45:	call   DWORD PTR ds:0x1002c1cc
10016d4b:	mov    eax,DWORD PTR [ebp+0xc]
10016d4e:	cmp    eax,0x2
10016d51:	je     0x10016d59
10016d53:	or     edi,0x8000
10016d59:	mov    ecx,DWORD PTR [ebp-0x4]
10016d5c:	mov    ds:0x10066634,eax
10016d61:	mov    eax,DWORD PTR [ebp+0x10]
10016d64:	mov    edx,eax
10016d66:	shl    edx,0x8
10016d69:	add    edx,ecx
10016d6b:	push   0x1
10016d6d:	mov    DWORD PTR ds:0x1006663c,edx
10016d73:	mov    ds:0x10066640,eax
10016d78:	mov    DWORD PTR ds:0x10066644,ecx
10016d7e:	mov    DWORD PTR ds:0x10066638,edi
10016d84:	call   0x1001b467
10016d89:	test   eax,eax
10016d8b:	pop    ecx
10016d8c:	je     0x10016d05
10016d92:	call   0x100199b8
10016d97:	test   eax,eax
10016d99:	jne    0x10016da5
10016d9b:	call   0x1001b4c1
10016da0:	jmp    0x10016d05
10016da5:	call   0x1001cab5
10016daa:	call   DWORD PTR ds:0x1002c200
10016db0:	mov    ds:0x100680bc,eax
10016db5:	call   0x1001c980
10016dba:	mov    ds:0x100662d8,eax
10016dbf:	call   0x1001c3b4
10016dc4:	test   eax,eax
10016dc6:	jge    0x10016dcf
10016dc8:	call   0x100196a3
10016dcd:	jmp    0x10016d9b
10016dcf:	call   0x1001c8c7
10016dd4:	test   eax,eax
10016dd6:	jl     0x10016df8
10016dd8:	call   0x1001c654
10016ddd:	test   eax,eax
10016ddf:	jl     0x10016df8
10016de1:	push   0x0
10016de3:	call   0x10019ddb
10016de8:	test   eax,eax
10016dea:	pop    ecx
10016deb:	jne    0x10016df8
10016ded:	inc    DWORD PTR ds:0x100662d4
10016df3:	jmp    0x10016ea4
10016df8:	call   0x1001c608
10016dfd:	jmp    0x10016dc8
10016dff:	xor    edi,edi
10016e01:	cmp    eax,edi
10016e03:	jne    0x10016e3a
10016e05:	cmp    DWORD PTR ds:0x100662d4,edi
10016e0b:	jle    0x10016d05
10016e11:	dec    DWORD PTR ds:0x100662d4
10016e17:	cmp    DWORD PTR ds:0x10066670,edi
10016e1d:	jne    0x10016e24
10016e1f:	call   0x10019f60
10016e24:	cmp    DWORD PTR [ebp+0x10],edi
10016e27:	jne    0x10016ea4
10016e29:	call   0x1001c608
10016e2e:	call   0x100196a3
10016e33:	call   0x1001b4c1
10016e38:	jmp    0x10016ea4
10016e3a:	cmp    eax,0x2
10016e3d:	jne    0x10016e98
10016e3f:	call   0x10019671
10016e44:	push   0x214
10016e49:	push   0x1
10016e4b:	call   0x100185e5
10016e50:	mov    esi,eax
10016e52:	cmp    esi,edi
10016e54:	pop    ecx
10016e55:	pop    ecx
10016e56:	je     0x10016d05
10016e5c:	push   esi
10016e5d:	push   DWORD PTR ds:0x10064804
10016e63:	push   DWORD PTR ds:0x10066624
10016e69:	call   0x100195fa
10016e6e:	pop    ecx
10016e6f:	call   eax
10016e71:	test   eax,eax
10016e73:	je     0x10016e8c
10016e75:	push   edi
10016e76:	push   esi
10016e77:	call   0x100196e0
10016e7c:	pop    ecx
10016e7d:	pop    ecx
10016e7e:	call   DWORD PTR ds:0x1002c138
10016e84:	or     DWORD PTR [esi+0x4],0xffffffff
10016e88:	mov    DWORD PTR [esi],eax
10016e8a:	jmp    0x10016ea4
10016e8c:	push   esi
10016e8d:	call   0x10016b35
10016e92:	pop    ecx
10016e93:	jmp    0x10016d05
10016e98:	cmp    eax,0x3
10016e9b:	jne    0x10016ea4
10016e9d:	push   edi
10016e9e:	call   0x1001994f
10016ea3:	pop    ecx
10016ea4:	xor    eax,eax
10016ea6:	inc    eax
10016ea7:	pop    edi
10016ea8:	pop    esi
10016ea9:	pop    ebx
10016eaa:	leave  
10016eab:	ret    0xc
10016eae:	push   0xc
10016eb0:	push   0x100584a0
10016eb5:	call   0x10017a38
10016eba:	mov    edi,ecx
10016ebc:	mov    esi,edx
10016ebe:	mov    ebx,DWORD PTR [ebp+0x8]
10016ec1:	xor    eax,eax
10016ec3:	inc    eax
10016ec4:	mov    DWORD PTR [ebp-0x1c],eax
10016ec7:	test   esi,esi
10016ec9:	jne    0x10016ed7
10016ecb:	cmp    DWORD PTR ds:0x100662d4,edx
10016ed1:	je     0x10016f9c
10016ed7:	and    DWORD PTR [ebp-0x4],0x0
10016edb:	cmp    esi,eax
10016edd:	je     0x10016ee4
10016edf:	cmp    esi,0x2
10016ee2:	jne    0x10016f12
10016ee4:	mov    eax,ds:0x100504ac
10016ee9:	test   eax,eax
10016eeb:	je     0x10016ef5
10016eed:	push   edi
10016eee:	push   esi
10016eef:	push   ebx
10016ef0:	call   eax
10016ef2:	mov    DWORD PTR [ebp-0x1c],eax
10016ef5:	cmp    DWORD PTR [ebp-0x1c],0x0
10016ef9:	je     0x10016f95
10016eff:	push   edi
10016f00:	push   esi
10016f01:	push   ebx
10016f02:	call   0x10016cd5
10016f07:	mov    DWORD PTR [ebp-0x1c],eax
10016f0a:	test   eax,eax
10016f0c:	je     0x10016f95
10016f12:	push   edi
10016f13:	push   esi
10016f14:	push   ebx
10016f15:	call   0x1000dfe0
10016f1a:	mov    DWORD PTR [ebp-0x1c],eax
10016f1d:	cmp    esi,0x1
10016f20:	jne    0x10016f46
10016f22:	test   eax,eax
10016f24:	jne    0x10016f46
10016f26:	push   edi
10016f27:	push   eax
10016f28:	push   ebx
10016f29:	call   0x1000dfe0
10016f2e:	push   edi
10016f2f:	push   0x0
10016f31:	push   ebx
10016f32:	call   0x10016cd5
10016f37:	mov    eax,ds:0x100504ac
10016f3c:	test   eax,eax
10016f3e:	je     0x10016f46
10016f40:	push   edi
10016f41:	push   0x0
10016f43:	push   ebx
10016f44:	call   eax
10016f46:	test   esi,esi
10016f48:	je     0x10016f4f
10016f4a:	cmp    esi,0x3
10016f4d:	jne    0x10016f75
10016f4f:	push   edi
10016f50:	push   esi
10016f51:	push   ebx
10016f52:	call   0x10016cd5
10016f57:	test   eax,eax
10016f59:	jne    0x10016f5e
10016f5b:	and    DWORD PTR [ebp-0x1c],eax
10016f5e:	cmp    DWORD PTR [ebp-0x1c],0x0
10016f62:	je     0x10016f75
10016f64:	mov    eax,ds:0x100504ac
10016f69:	test   eax,eax
10016f6b:	je     0x10016f75
10016f6d:	push   edi
10016f6e:	push   esi
10016f6f:	push   ebx
10016f70:	call   eax
10016f72:	mov    DWORD PTR [ebp-0x1c],eax
10016f75:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10016f7c:	mov    eax,DWORD PTR [ebp-0x1c]
10016f7f:	jmp    0x10016f9e
10016f81:	mov    eax,DWORD PTR [ebp-0x14]
10016f84:	mov    ecx,DWORD PTR [eax]
10016f86:	mov    ecx,DWORD PTR [ecx]
10016f88:	push   eax
10016f89:	push   ecx
10016f8a:	call   0x1001cc5b
10016f8f:	pop    ecx
10016f90:	pop    ecx
10016f91:	ret    
10016f92:	mov    esp,DWORD PTR [ebp-0x18]
10016f95:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10016f9c:	xor    eax,eax
10016f9e:	call   0x10017a7d
10016fa3:	ret    
10016fa4:	cmp    DWORD PTR [esp+0x8],0x1
10016fa9:	jne    0x10016fb0
10016fab:	call   0x1001cc76
10016fb0:	push   DWORD PTR [esp+0x4]
10016fb4:	mov    ecx,DWORD PTR [esp+0x10]
10016fb8:	mov    edx,DWORD PTR [esp+0xc]
10016fbc:	call   0x10016eae
10016fc1:	pop    ecx
10016fc2:	ret    0xc
10016fc5:	mov    eax,DWORD PTR [esp+0x4]
10016fc9:	mov    dx,WORD PTR [esp+0x8]
10016fce:	jmp    0x10016fd7
10016fd0:	cmp    cx,dx
10016fd3:	je     0x10016fe6
10016fd5:	inc    eax
10016fd6:	inc    eax
10016fd7:	movzx  ecx,WORD PTR [eax]
10016fda:	test   cx,cx
10016fdd:	jne    0x10016fd0
10016fdf:	cmp    WORD PTR [eax],dx
10016fe2:	je     0x10016fe6
10016fe4:	xor    eax,eax
10016fe6:	ret    
10016fe7:	push   ebp
10016fe8:	mov    ebp,esp
10016fea:	sub    esp,0x10
10016fed:	push   DWORD PTR [ebp+0xc]
10016ff0:	lea    ecx,[ebp-0x10]
10016ff3:	call   0x100165aa
10016ff8:	movzx  eax,BYTE PTR [ebp+0x8]
10016ffc:	mov    ecx,DWORD PTR [ebp-0x10]
10016fff:	mov    ecx,DWORD PTR [ecx+0xc8]
10017005:	movzx  eax,WORD PTR [ecx+eax*2]
10017009:	and    eax,0x8000
1001700e:	cmp    BYTE PTR [ebp-0x4],0x0
10017012:	je     0x1001701b
10017014:	mov    ecx,DWORD PTR [ebp-0x8]
10017017:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001701b:	leave  
1001701c:	ret    
1001701d:	push   0x0
1001701f:	push   DWORD PTR [esp+0x8]
10017023:	call   0x10016fe7
10017028:	pop    ecx
10017029:	pop    ecx
1001702a:	ret    
1001702b:	push   0x8
1001702d:	push   DWORD PTR [esp+0x8]
10017031:	call   0x1001cd8c
10017036:	pop    ecx
10017037:	pop    ecx
10017038:	ret    
10017039:	push   ebp
1001703a:	mov    ebp,esp
1001703c:	sub    esp,0x20
1001703f:	push   esi
10017040:	xor    esi,esi
10017042:	cmp    DWORD PTR [ebp+0xc],esi
10017045:	jne    0x10017064
10017047:	call   0x10019ffe
1001704c:	push   esi
1001704d:	push   esi
1001704e:	push   esi
1001704f:	push   esi
10017050:	push   esi
10017051:	mov    DWORD PTR [eax],0x16
10017057:	call   0x1001611f
1001705c:	add    esp,0x14
1001705f:	or     eax,0xffffffff
10017062:	jmp    0x1001708b
10017064:	push   DWORD PTR [ebp+0x14]
10017067:	lea    eax,[ebp-0x20]
1001706a:	push   DWORD PTR [ebp+0x10]
1001706d:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
10017074:	push   DWORD PTR [ebp+0xc]
10017077:	mov    DWORD PTR [ebp-0x14],0x42
1001707e:	push   eax
1001707f:	mov    DWORD PTR [ebp-0x18],esi
10017082:	mov    DWORD PTR [ebp-0x20],esi
10017085:	call   DWORD PTR [ebp+0x8]
10017088:	add    esp,0x10
1001708b:	pop    esi
1001708c:	leave  
1001708d:	ret    
1001708e:	push   DWORD PTR [esp+0x8]
10017092:	push   0x0
10017094:	push   DWORD PTR [esp+0xc]
10017098:	push   0x1001cff3
1001709d:	call   0x10017039
100170a2:	add    esp,0x10
100170a5:	ret    
100170a6:	push   ebp
100170a7:	mov    ebp,esp
100170a9:	sub    esp,0x20
100170ac:	push   ebx
100170ad:	xor    ebx,ebx
100170af:	cmp    DWORD PTR [ebp+0x14],ebx
100170b2:	jne    0x100170d4
100170b4:	call   0x10019ffe
100170b9:	push   ebx
100170ba:	push   ebx
100170bb:	push   ebx
100170bc:	push   ebx
100170bd:	push   ebx
100170be:	mov    DWORD PTR [eax],0x16
100170c4:	call   0x1001611f
100170c9:	add    esp,0x14
100170cc:	or     eax,0xffffffff
100170cf:	jmp    0x10017199
100170d4:	push   esi
100170d5:	mov    esi,DWORD PTR [ebp+0xc]
100170d8:	push   edi
100170d9:	mov    edi,DWORD PTR [ebp+0x10]
100170dc:	cmp    edi,ebx
100170de:	je     0x10017104
100170e0:	cmp    esi,ebx
100170e2:	jne    0x10017104
100170e4:	call   0x10019ffe
100170e9:	push   ebx
100170ea:	push   ebx
100170eb:	push   ebx
100170ec:	push   ebx
100170ed:	push   ebx
100170ee:	mov    DWORD PTR [eax],0x16
100170f4:	call   0x1001611f
100170f9:	add    esp,0x14
100170fc:	or     eax,0xffffffff
100170ff:	jmp    0x10017197
10017104:	cmp    edi,0x3fffffff
1001710a:	mov    DWORD PTR [ebp-0x14],0x42
10017111:	mov    DWORD PTR [ebp-0x18],esi
10017114:	mov    DWORD PTR [ebp-0x20],esi
10017117:	jbe    0x10017122
10017119:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
10017120:	jmp    0x10017128
10017122:	lea    eax,[edi+edi*1]
10017125:	mov    DWORD PTR [ebp-0x1c],eax
10017128:	push   DWORD PTR [ebp+0x1c]
1001712b:	lea    eax,[ebp-0x20]
1001712e:	push   DWORD PTR [ebp+0x18]
10017131:	push   DWORD PTR [ebp+0x14]
10017134:	push   eax
10017135:	call   DWORD PTR [ebp+0x8]
10017138:	add    esp,0x10
1001713b:	cmp    esi,ebx
1001713d:	mov    DWORD PTR [ebp+0x14],eax
10017140:	je     0x10017197
10017142:	cmp    eax,ebx
10017144:	jl     0x10017188
10017146:	dec    DWORD PTR [ebp-0x1c]
10017149:	js     0x10017155
1001714b:	mov    eax,DWORD PTR [ebp-0x20]
1001714e:	mov    BYTE PTR [eax],bl
10017150:	inc    DWORD PTR [ebp-0x20]
10017153:	jmp    0x10017166
10017155:	lea    eax,[ebp-0x20]
10017158:	push   eax
10017159:	push   ebx
1001715a:	call   0x1001cdfa
1001715f:	cmp    eax,0xffffffff
10017162:	pop    ecx
10017163:	pop    ecx
10017164:	je     0x10017188
10017166:	dec    DWORD PTR [ebp-0x1c]
10017169:	js     0x10017172
1001716b:	mov    eax,DWORD PTR [ebp-0x20]
1001716e:	mov    BYTE PTR [eax],bl
10017170:	jmp    0x10017183
10017172:	lea    eax,[ebp-0x20]
10017175:	push   eax
10017176:	push   ebx
10017177:	call   0x1001cdfa
1001717c:	cmp    eax,0xffffffff
1001717f:	pop    ecx
10017180:	pop    ecx
10017181:	je     0x10017188
10017183:	mov    eax,DWORD PTR [ebp+0x14]
10017186:	jmp    0x10017197
10017188:	xor    eax,eax
1001718a:	cmp    DWORD PTR [ebp-0x1c],ebx
1001718d:	mov    WORD PTR [esi+edi*2-0x2],bx
10017192:	setge  al
10017195:	dec    eax
10017196:	dec    eax
10017197:	pop    edi
10017198:	pop    esi
10017199:	pop    ebx
1001719a:	leave  
1001719b:	ret    
1001719c:	push   ebp
1001719d:	mov    ebp,esp
1001719f:	push   esi
100171a0:	xor    esi,esi
100171a2:	cmp    DWORD PTR [ebp+0x10],esi
100171a5:	jne    0x100171c4
100171a7:	call   0x10019ffe
100171ac:	push   esi
100171ad:	push   esi
100171ae:	push   esi
100171af:	push   esi
100171b0:	push   esi
100171b1:	mov    DWORD PTR [eax],0x16
100171b7:	call   0x1001611f
100171bc:	add    esp,0x14
100171bf:	or     eax,0xffffffff
100171c2:	jmp    0x10017220
100171c4:	push   edi
100171c5:	mov    edi,DWORD PTR [ebp+0x8]
100171c8:	cmp    edi,esi
100171ca:	je     0x100171d1
100171cc:	cmp    DWORD PTR [ebp+0xc],esi
100171cf:	ja     0x100171de
100171d1:	call   0x10019ffe
100171d6:	mov    DWORD PTR [eax],0x16
100171dc:	jmp    0x1001720f
100171de:	push   DWORD PTR [ebp+0x18]
100171e1:	push   DWORD PTR [ebp+0x14]
100171e4:	push   DWORD PTR [ebp+0x10]
100171e7:	push   DWORD PTR [ebp+0xc]
100171ea:	push   edi
100171eb:	push   0x1001d903
100171f0:	call   0x100170a6
100171f5:	add    esp,0x18
100171f8:	cmp    eax,esi
100171fa:	jge    0x100171ff
100171fc:	mov    WORD PTR [edi],si
100171ff:	cmp    eax,0xfffffffe
10017202:	jne    0x1001721f
10017204:	call   0x10019ffe
10017209:	mov    DWORD PTR [eax],0x22
1001720f:	push   esi
10017210:	push   esi
10017211:	push   esi
10017212:	push   esi
10017213:	push   esi
10017214:	call   0x1001611f
10017219:	add    esp,0x14
1001721c:	or     eax,0xffffffff
1001721f:	pop    edi
10017220:	pop    esi
10017221:	pop    ebp
10017222:	ret    
10017223:	push   DWORD PTR [esp+0x10]
10017227:	push   0x0
10017229:	push   DWORD PTR [esp+0x14]
1001722d:	push   DWORD PTR [esp+0x14]
10017231:	push   DWORD PTR [esp+0x14]
10017235:	call   0x1001719c
1001723a:	add    esp,0x14
1001723d:	ret    
1001723e:	push   DWORD PTR ds:0x10066c4c
10017244:	call   0x100195fa
10017249:	test   eax,eax
1001724b:	pop    ecx
1001724c:	je     0x10017250
1001724e:	call   eax
10017250:	push   0x19
10017252:	call   0x1001c1db
10017257:	push   0x1
10017259:	push   0x0
1001725b:	call   0x1001876b
10017260:	add    esp,0xc
10017263:	jmp    0x10018678
10017268:	int3   
10017269:	int3   
1001726a:	int3   
1001726b:	int3   
1001726c:	int3   
1001726d:	int3   
1001726e:	int3   
1001726f:	int3   
10017270:	mov    eax,DWORD PTR [esp+0x8]
10017274:	mov    ecx,DWORD PTR [esp+0x10]
10017278:	or     ecx,eax
1001727a:	mov    ecx,DWORD PTR [esp+0xc]
1001727e:	jne    0x10017289
10017280:	mov    eax,DWORD PTR [esp+0x4]
10017284:	mul    ecx
10017286:	ret    0x10
10017289:	push   ebx
1001728a:	mul    ecx
1001728c:	mov    ebx,eax
1001728e:	mov    eax,DWORD PTR [esp+0x8]
10017292:	mul    DWORD PTR [esp+0x14]
10017296:	add    ebx,eax
10017298:	mov    eax,DWORD PTR [esp+0x8]
1001729c:	mul    ecx
1001729e:	add    edx,ebx
100172a0:	pop    ebx
100172a1:	ret    0x10
100172a4:	mov    eax,DWORD PTR [esp+0x4]
100172a8:	mov    edx,eax
100172aa:	mov    cx,WORD PTR [eax]
100172ad:	inc    eax
100172ae:	inc    eax
100172af:	test   cx,cx
100172b2:	jne    0x100172aa
100172b4:	mov    cx,WORD PTR [esp+0x8]
100172b9:	dec    eax
100172ba:	dec    eax
100172bb:	cmp    eax,edx
100172bd:	je     0x100172c4
100172bf:	cmp    WORD PTR [eax],cx
100172c2:	jne    0x100172b9
100172c4:	mov    dx,WORD PTR [eax]
100172c7:	sub    dx,cx
100172ca:	neg    dx
100172cd:	sbb    edx,edx
100172cf:	not    edx
100172d1:	and    eax,edx
100172d3:	ret    
100172d4:	mov    ecx,DWORD PTR [esp+0x4]
100172d8:	mov    edx,DWORD PTR [esp+0x8]
100172dc:	movzx  eax,WORD PTR [edx]
100172df:	mov    WORD PTR [ecx],ax
100172e2:	inc    ecx
100172e3:	inc    ecx
100172e4:	inc    edx
100172e5:	inc    edx
100172e6:	test   ax,ax
100172e9:	jne    0x100172dc
100172eb:	mov    eax,DWORD PTR [esp+0x4]
100172ef:	ret    
100172f0:	cmp    DWORD PTR [esp+0x8],0x0
100172f5:	je     0x100172fd
100172f7:	mov    BYTE PTR [ecx],0x2d
100172fa:	inc    ecx
100172fb:	neg    eax
100172fd:	push   esi
100172fe:	mov    esi,ecx
10017300:	xor    edx,edx
10017302:	div    DWORD PTR [esp+0x8]
10017306:	cmp    edx,0x9
10017309:	jbe    0x10017310
1001730b:	add    dl,0x57
1001730e:	jmp    0x10017313
10017310:	add    dl,0x30
10017313:	mov    BYTE PTR [ecx],dl
10017315:	inc    ecx
10017316:	test   eax,eax
10017318:	ja     0x10017300
1001731a:	mov    BYTE PTR [ecx],0x0
1001731d:	dec    ecx
1001731e:	mov    dl,BYTE PTR [esi]
10017320:	mov    al,BYTE PTR [ecx]
10017322:	mov    BYTE PTR [ecx],dl
10017324:	dec    ecx
10017325:	mov    BYTE PTR [esi],al
10017327:	inc    esi
10017328:	cmp    esi,ecx
1001732a:	jb     0x1001731e
1001732c:	pop    esi
1001732d:	ret    0x8
10017330:	push   ebp
10017331:	mov    ebp,esp
10017333:	xor    eax,eax
10017335:	cmp    DWORD PTR [ebp+0x10],0xa
10017339:	jne    0x10017341
1001733b:	cmp    DWORD PTR [ebp+0x8],eax
1001733e:	jge    0x10017341
10017340:	inc    eax
10017341:	mov    ecx,DWORD PTR [ebp+0xc]
10017344:	push   eax
10017345:	push   DWORD PTR [ebp+0x10]
10017348:	mov    eax,DWORD PTR [ebp+0x8]
1001734b:	call   0x100172f0
10017350:	mov    eax,DWORD PTR [ebp+0xc]
10017353:	pop    ebp
10017354:	ret    
10017355:	push   ebx
10017356:	push   esi
10017357:	mov    esi,DWORD PTR [esp+0xc]
1001735b:	push   edi
1001735c:	xor    edi,edi
1001735e:	or     ebx,0xffffffff
10017361:	cmp    esi,edi
10017363:	jne    0x10017381
10017365:	call   0x10019ffe
1001736a:	push   edi
1001736b:	push   edi
1001736c:	push   edi
1001736d:	push   edi
1001736e:	push   edi
1001736f:	mov    DWORD PTR [eax],0x16
10017375:	call   0x1001611f
1001737a:	add    esp,0x14
1001737d:	or     eax,ebx
1001737f:	jmp    0x100173c3
10017381:	test   BYTE PTR [esi+0xc],0x83
10017385:	je     0x100173be
10017387:	push   esi
10017388:	call   0x1001e964
1001738d:	push   esi
1001738e:	mov    ebx,eax
10017390:	call   0x1001e938
10017395:	push   esi
10017396:	call   0x1001e90b
1001739b:	push   eax
1001739c:	call   0x1001768e
100173a1:	add    esp,0x10
100173a4:	test   eax,eax
100173a6:	jge    0x100173ad
100173a8:	or     ebx,0xffffffff
100173ab:	jmp    0x100173be
100173ad:	mov    eax,DWORD PTR [esi+0x1c]
100173b0:	cmp    eax,edi
100173b2:	je     0x100173be
100173b4:	push   eax
100173b5:	call   0x10016b35
100173ba:	pop    ecx
100173bb:	mov    DWORD PTR [esi+0x1c],edi
100173be:	mov    DWORD PTR [esi+0xc],edi
100173c1:	mov    eax,ebx
100173c3:	pop    edi
100173c4:	pop    esi
100173c5:	pop    ebx
100173c6:	ret    
100173c7:	push   0xc
100173c9:	push   0x100584c0
100173ce:	call   0x10017a38
100173d3:	or     DWORD PTR [ebp-0x1c],0xffffffff
100173d7:	xor    eax,eax
100173d9:	mov    esi,DWORD PTR [ebp+0x8]
100173dc:	xor    edi,edi
100173de:	cmp    esi,edi
100173e0:	setne  al
100173e3:	cmp    eax,edi
100173e5:	jne    0x10017404
100173e7:	call   0x10019ffe
100173ec:	mov    DWORD PTR [eax],0x16
100173f2:	push   edi
100173f3:	push   edi
100173f4:	push   edi
100173f5:	push   edi
100173f6:	push   edi
100173f7:	call   0x1001611f
100173fc:	add    esp,0x14
100173ff:	or     eax,0xffffffff
10017402:	jmp    0x10017410
10017404:	test   BYTE PTR [esi+0xc],0x40
10017408:	je     0x10017416
1001740a:	mov    DWORD PTR [esi+0xc],edi
1001740d:	mov    eax,DWORD PTR [ebp-0x1c]
10017410:	call   0x10017a7d
10017415:	ret    
10017416:	push   esi
10017417:	call   0x1001e6ec
1001741c:	pop    ecx
1001741d:	mov    DWORD PTR [ebp-0x4],edi
10017420:	push   esi
10017421:	call   0x10017355
10017426:	pop    ecx
10017427:	mov    DWORD PTR [ebp-0x1c],eax
1001742a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10017431:	call   0x1001743b
10017436:	jmp    0x1001740d
10017438:	mov    esi,DWORD PTR [ebp+0x8]
1001743b:	push   esi
1001743c:	call   0x1001e756
10017441:	pop    ecx
10017442:	ret    
10017443:	push   ebp
10017444:	mov    ebp,esp
10017446:	sub    esp,0x20
10017449:	push   ebx
1001744a:	xor    ebx,ebx
1001744c:	cmp    DWORD PTR [ebp+0xc],ebx
1001744f:	jne    0x1001746e
10017451:	call   0x10019ffe
10017456:	push   ebx
10017457:	push   ebx
10017458:	push   ebx
10017459:	push   ebx
1001745a:	push   ebx
1001745b:	mov    DWORD PTR [eax],0x16
10017461:	call   0x1001611f
10017466:	add    esp,0x14
10017469:	or     eax,0xffffffff
1001746c:	jmp    0x100174bb
1001746e:	mov    eax,DWORD PTR [ebp+0x8]
10017471:	cmp    eax,ebx
10017473:	je     0x10017451
10017475:	push   esi
10017476:	mov    DWORD PTR [ebp-0x18],eax
10017479:	mov    DWORD PTR [ebp-0x20],eax
1001747c:	lea    eax,[ebp+0x10]
1001747f:	push   eax
10017480:	push   ebx
10017481:	push   DWORD PTR [ebp+0xc]
10017484:	lea    eax,[ebp-0x20]
10017487:	push   eax
10017488:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
1001748f:	mov    DWORD PTR [ebp-0x14],0x42
10017496:	call   0x1001eb8c
1001749b:	add    esp,0x10
1001749e:	dec    DWORD PTR [ebp-0x1c]
100174a1:	mov    esi,eax
100174a3:	js     0x100174ac
100174a5:	mov    eax,DWORD PTR [ebp-0x20]
100174a8:	mov    BYTE PTR [eax],bl
100174aa:	jmp    0x100174b8
100174ac:	lea    eax,[ebp-0x20]
100174af:	push   eax
100174b0:	push   ebx
100174b1:	call   0x1001cdfa
100174b6:	pop    ecx
100174b7:	pop    ecx
100174b8:	mov    eax,esi
100174ba:	pop    esi
100174bb:	pop    ebx
100174bc:	leave  
100174bd:	ret    
100174be:	push   ebp
100174bf:	mov    ebp,esp
100174c1:	sub    esp,0x10
100174c4:	push   DWORD PTR [ebp+0xc]
100174c7:	lea    ecx,[ebp-0x10]
100174ca:	call   0x100165aa
100174cf:	mov    eax,DWORD PTR [ebp-0x10]
100174d2:	cmp    DWORD PTR [eax+0xac],0x1
100174d9:	jle    0x100174ee
100174db:	lea    eax,[ebp-0x10]
100174de:	push   eax
100174df:	push   0x4
100174e1:	push   DWORD PTR [ebp+0x8]
100174e4:	call   0x1001f520
100174e9:	add    esp,0xc
100174ec:	jmp    0x100174fe
100174ee:	mov    eax,DWORD PTR [eax+0xc8]
100174f4:	mov    ecx,DWORD PTR [ebp+0x8]
100174f7:	movzx  eax,BYTE PTR [eax+ecx*2]
100174fb:	and    eax,0x4
100174fe:	cmp    BYTE PTR [ebp-0x4],0x0
10017502:	je     0x1001750b
10017504:	mov    ecx,DWORD PTR [ebp-0x8]
10017507:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001750b:	leave  
1001750c:	ret    
1001750d:	cmp    DWORD PTR ds:0x100662e8,0x0
10017514:	jne    0x10017528
10017516:	mov    eax,DWORD PTR [esp+0x4]
1001751a:	mov    ecx,DWORD PTR ds:0x10064f88
10017520:	movzx  eax,BYTE PTR [ecx+eax*2]
10017524:	and    eax,0x4
10017527:	ret    
10017528:	push   0x0
1001752a:	push   DWORD PTR [esp+0x8]
1001752e:	call   0x100174be
10017533:	pop    ecx
10017534:	pop    ecx
10017535:	ret    
10017536:	push   0x14
10017538:	push   0x100584e0
1001753d:	call   0x10017a38
10017542:	and    DWORD PTR [ebp-0x4],0x0
10017546:	dec    DWORD PTR [ebp+0x10]
10017549:	js     0x10017585
1001754b:	mov    ecx,DWORD PTR [ebp+0x8]
1001754e:	sub    ecx,DWORD PTR [ebp+0xc]
10017551:	mov    DWORD PTR [ebp+0x8],ecx
10017554:	call   DWORD PTR [ebp+0x14]
10017557:	jmp    0x10017546
10017559:	mov    eax,DWORD PTR [ebp-0x14]
1001755c:	mov    DWORD PTR [ebp-0x1c],eax
1001755f:	mov    eax,DWORD PTR [ebp-0x1c]
10017562:	mov    eax,DWORD PTR [eax]
10017564:	mov    DWORD PTR [ebp-0x20],eax
10017567:	mov    eax,DWORD PTR [ebp-0x20]
1001756a:	cmp    DWORD PTR [eax],0xe06d7363
10017570:	je     0x1001757d
10017572:	mov    DWORD PTR [ebp-0x24],0x0
10017579:	mov    eax,DWORD PTR [ebp-0x24]
1001757c:	ret    
1001757d:	call   0x10019b3c
10017582:	mov    esp,DWORD PTR [ebp-0x18]
10017585:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001758c:	call   0x10017a7d
10017591:	ret    0x10
10017594:	push   0xc
10017596:	push   0x10058500
1001759b:	call   0x10017a38
100175a0:	and    DWORD PTR [ebp-0x1c],0x0
100175a4:	mov    esi,DWORD PTR [ebp+0xc]
100175a7:	mov    eax,esi
100175a9:	imul   eax,DWORD PTR [ebp+0x10]
100175ad:	add    DWORD PTR [ebp+0x8],eax
100175b0:	and    DWORD PTR [ebp-0x4],0x0
100175b4:	dec    DWORD PTR [ebp+0x10]
100175b7:	js     0x100175c4
100175b9:	sub    DWORD PTR [ebp+0x8],esi
100175bc:	mov    ecx,DWORD PTR [ebp+0x8]
100175bf:	call   DWORD PTR [ebp+0x14]
100175c2:	jmp    0x100175b4
100175c4:	mov    DWORD PTR [ebp-0x1c],0x1
100175cb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100175d2:	call   0x100175df
100175d7:	call   0x10017a7d
100175dc:	ret    0x10
100175df:	cmp    DWORD PTR [ebp-0x1c],0x0
100175e3:	jne    0x100175f6
100175e5:	push   DWORD PTR [ebp+0x14]
100175e8:	push   DWORD PTR [ebp+0x10]
100175eb:	push   DWORD PTR [ebp+0xc]
100175ee:	push   DWORD PTR [ebp+0x8]
100175f1:	call   0x10017536
100175f6:	ret    
100175f7:	push   esi
100175f8:	mov    esi,DWORD PTR [esp+0x8]
100175fc:	push   edi
100175fd:	push   esi
100175fe:	call   0x1001e446
10017603:	cmp    eax,0xffffffff
10017606:	pop    ecx
10017607:	je     0x10017659
10017609:	cmp    esi,0x1
1001760c:	mov    eax,ds:0x10067f80
10017611:	jne    0x1001761c
10017613:	test   BYTE PTR [eax+0x84],0x1
1001761a:	jne    0x10017627
1001761c:	cmp    esi,0x2
1001761f:	jne    0x1001763d
10017621:	test   BYTE PTR [eax+0x44],0x1
10017625:	je     0x1001763d
10017627:	push   0x2
10017629:	call   0x1001e446
1001762e:	push   0x1
10017630:	mov    edi,eax
10017632:	call   0x1001e446
10017637:	cmp    eax,edi
10017639:	pop    ecx
1001763a:	pop    ecx
1001763b:	je     0x10017659
1001763d:	push   esi
1001763e:	call   0x1001e446
10017643:	pop    ecx
10017644:	push   eax
10017645:	call   DWORD PTR ds:0x1002c058
1001764b:	test   eax,eax
1001764d:	jne    0x10017659
1001764f:	call   DWORD PTR ds:0x1002c07c
10017655:	mov    edi,eax
10017657:	jmp    0x1001765b
10017659:	xor    edi,edi
1001765b:	push   esi
1001765c:	call   0x1001e3c5
10017661:	mov    eax,esi
10017663:	sar    eax,0x5
10017666:	mov    eax,DWORD PTR [eax*4+0x10067f80]
1001766d:	and    esi,0x1f
10017670:	shl    esi,0x6
10017673:	test   edi,edi
10017675:	pop    ecx
10017676:	mov    BYTE PTR [eax+esi*1+0x4],0x0
1001767b:	je     0x10017689
1001767d:	push   edi
1001767e:	call   0x1001a024
10017683:	pop    ecx
10017684:	or     eax,0xffffffff
10017687:	jmp    0x1001768b
10017689:	xor    eax,eax
1001768b:	pop    edi
1001768c:	pop    esi
1001768d:	ret    
1001768e:	push   0x10
10017690:	push   0x10058520
10017695:	call   0x10017a38
1001769a:	mov    eax,DWORD PTR [ebp+0x8]
1001769d:	cmp    eax,0xfffffffe
100176a0:	jne    0x100176bd
100176a2:	call   0x1001a011
100176a7:	and    DWORD PTR [eax],0x0
100176aa:	call   0x10019ffe
100176af:	mov    DWORD PTR [eax],0x9
100176b5:	or     eax,0xffffffff
100176b8:	jmp    0x1001774b
100176bd:	xor    edi,edi
100176bf:	cmp    eax,edi
100176c1:	jl     0x100176cb
100176c3:	cmp    eax,DWORD PTR ds:0x10067f64
100176c9:	jb     0x100176ec
100176cb:	call   0x1001a011
100176d0:	mov    DWORD PTR [eax],edi
100176d2:	call   0x10019ffe
100176d7:	mov    DWORD PTR [eax],0x9
100176dd:	push   edi
100176de:	push   edi
100176df:	push   edi
100176e0:	push   edi
100176e1:	push   edi
100176e2:	call   0x1001611f
100176e7:	add    esp,0x14
100176ea:	jmp    0x100176b5
100176ec:	mov    ecx,eax
100176ee:	sar    ecx,0x5
100176f1:	lea    ebx,[ecx*4+0x10067f80]
100176f8:	mov    esi,eax
100176fa:	and    esi,0x1f
100176fd:	shl    esi,0x6
10017700:	mov    ecx,DWORD PTR [ebx]
10017702:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
10017707:	and    ecx,0x1
1001770a:	je     0x100176cb
1001770c:	push   eax
1001770d:	call   0x1001e4b7
10017712:	pop    ecx
10017713:	mov    DWORD PTR [ebp-0x4],edi
10017716:	mov    eax,DWORD PTR [ebx]
10017718:	test   BYTE PTR [eax+esi*1+0x4],0x1
1001771d:	je     0x1001772d
1001771f:	push   DWORD PTR [ebp+0x8]
10017722:	call   0x100175f7
10017727:	pop    ecx
10017728:	mov    DWORD PTR [ebp-0x1c],eax
1001772b:	jmp    0x1001773c
1001772d:	call   0x10019ffe
10017732:	mov    DWORD PTR [eax],0x9
10017738:	or     DWORD PTR [ebp-0x1c],0xffffffff
1001773c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10017743:	call   0x10017751
10017748:	mov    eax,DWORD PTR [ebp-0x1c]
1001774b:	call   0x10017a7d
10017750:	ret    
10017751:	push   DWORD PTR [ebp+0x8]
10017754:	call   0x1001e557
10017759:	pop    ecx
1001775a:	ret    
1001775b:	push   ebp
1001775c:	mov    ebp,esp
1001775e:	sub    esp,0x18
10017761:	push   ebx
10017762:	push   esi
10017763:	push   DWORD PTR [ebp+0xc]
10017766:	lea    ecx,[ebp-0x18]
10017769:	call   0x100165aa
1001776e:	mov    ebx,DWORD PTR [ebp+0x8]
10017771:	mov    esi,0x100
10017776:	cmp    ebx,esi
10017778:	jae    0x100177ce
1001777a:	mov    ecx,DWORD PTR [ebp-0x18]
1001777d:	cmp    DWORD PTR [ecx+0xac],0x1
10017784:	jle    0x1001779a
10017786:	lea    eax,[ebp-0x18]
10017789:	push   eax
1001778a:	push   0x1
1001778c:	push   ebx
1001778d:	call   0x1001f520
10017792:	mov    ecx,DWORD PTR [ebp-0x18]
10017795:	add    esp,0xc
10017798:	jmp    0x100177a7
1001779a:	mov    eax,DWORD PTR [ecx+0xc8]
100177a0:	movzx  eax,BYTE PTR [eax+ebx*2]
100177a4:	and    eax,0x1
100177a7:	test   eax,eax
100177a9:	je     0x100177ba
100177ab:	mov    eax,DWORD PTR [ecx+0xcc]
100177b1:	movzx  eax,BYTE PTR [eax+ebx*1]
100177b5:	jmp    0x10017861
100177ba:	cmp    BYTE PTR [ebp-0xc],0x0
100177be:	je     0x100177c7
100177c0:	mov    eax,DWORD PTR [ebp-0x10]
100177c3:	and    DWORD PTR [eax+0x70],0xfffffffd
100177c7:	mov    eax,ebx
100177c9:	jmp    0x1001786e
100177ce:	mov    eax,DWORD PTR [ebp-0x18]
100177d1:	cmp    DWORD PTR [eax+0xac],0x1
100177d8:	jle    0x1001780b
100177da:	mov    DWORD PTR [ebp+0x8],ebx
100177dd:	sar    DWORD PTR [ebp+0x8],0x8
100177e1:	lea    eax,[ebp-0x18]
100177e4:	push   eax
100177e5:	mov    eax,DWORD PTR [ebp+0x8]
100177e8:	and    eax,0xff
100177ed:	push   eax
100177ee:	call   0x10016fe7
100177f3:	test   eax,eax
100177f5:	pop    ecx
100177f6:	pop    ecx
100177f7:	je     0x1001780b
100177f9:	mov    al,BYTE PTR [ebp+0x8]
100177fc:	push   0x2
100177fe:	mov    BYTE PTR [ebp-0x4],al
10017801:	mov    BYTE PTR [ebp-0x3],bl
10017804:	mov    BYTE PTR [ebp-0x2],0x0
10017808:	pop    ecx
10017809:	jmp    0x10017820
1001780b:	call   0x10019ffe
10017810:	mov    DWORD PTR [eax],0x2a
10017816:	xor    ecx,ecx
10017818:	mov    BYTE PTR [ebp-0x4],bl
1001781b:	mov    BYTE PTR [ebp-0x3],0x0
1001781f:	inc    ecx
10017820:	mov    eax,DWORD PTR [ebp-0x18]
10017823:	push   0x1
10017825:	push   DWORD PTR [eax+0x4]
10017828:	lea    edx,[ebp-0x8]
1001782b:	push   0x3
1001782d:	push   edx
1001782e:	push   ecx
1001782f:	lea    ecx,[ebp-0x4]
10017832:	push   ecx
10017833:	push   esi
10017834:	push   DWORD PTR [eax+0x14]
10017837:	lea    eax,[ebp-0x18]
1001783a:	push   eax
1001783b:	call   0x10018562
10017840:	add    esp,0x24
10017843:	test   eax,eax
10017845:	je     0x100177ba
1001784b:	cmp    eax,0x1
1001784e:	jne    0x10017856
10017850:	movzx  eax,BYTE PTR [ebp-0x8]
10017854:	jmp    0x10017861
10017856:	movzx  ecx,BYTE PTR [ebp-0x7]
1001785a:	xor    eax,eax
1001785c:	mov    ah,BYTE PTR [ebp-0x8]
1001785f:	or     eax,ecx
10017861:	cmp    BYTE PTR [ebp-0xc],0x0
10017865:	je     0x1001786e
10017867:	mov    ecx,DWORD PTR [ebp-0x10]
1001786a:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001786e:	pop    esi
1001786f:	pop    ebx
10017870:	leave  
10017871:	ret    
10017872:	cmp    DWORD PTR ds:0x100662e8,0x0
10017879:	jne    0x1001788b
1001787b:	mov    eax,DWORD PTR [esp+0x4]
1001787f:	lea    ecx,[eax-0x41]
10017882:	cmp    ecx,0x19
10017885:	ja     0x10017898
10017887:	add    eax,0x20
1001788a:	ret    
1001788b:	push   0x0
1001788d:	push   DWORD PTR [esp+0x8]
10017891:	call   0x1001775b
10017896:	pop    ecx
10017897:	pop    ecx
10017898:	ret    
10017899:	jmp    0x10015ad6
1001789e:	mov    ecx,DWORD PTR [esp+0xc]
100178a2:	test   ecx,ecx
100178a4:	push   esi
100178a5:	push   edi
100178a6:	mov    edi,DWORD PTR [esp+0xc]
100178aa:	mov    esi,edi
100178ac:	je     0x100178d6
100178ae:	mov    edx,DWORD PTR [esp+0x10]
100178b2:	movzx  eax,WORD PTR [edx]
100178b5:	mov    WORD PTR [edi],ax
100178b8:	inc    edi
100178b9:	inc    edi
100178ba:	inc    edx
100178bb:	inc    edx
100178bc:	test   ax,ax
100178bf:	je     0x100178c4
100178c1:	dec    ecx
100178c2:	jne    0x100178b2
100178c4:	test   ecx,ecx
100178c6:	je     0x100178d6
100178c8:	dec    ecx
100178c9:	je     0x100178d6
100178cb:	xor    eax,eax
100178cd:	shr    ecx,1
100178cf:	rep stos DWORD PTR es:[edi],eax
100178d1:	adc    ecx,ecx
100178d3:	rep stos WORD PTR es:[edi],ax
100178d6:	pop    edi
100178d7:	mov    eax,esi
100178d9:	pop    esi
100178da:	ret    
100178db:	push   ebp
100178dc:	mov    ebp,esp
100178de:	cmp    DWORD PTR [ebp+0x14],0x0
100178e2:	push   ebx
100178e3:	mov    ebx,DWORD PTR [ebp+0x8]
100178e6:	push   esi
100178e7:	mov    esi,eax
100178e9:	mov    eax,DWORD PTR [ebp+0xc]
100178ec:	push   edi
100178ed:	je     0x100178fe
100178ef:	mov    WORD PTR [esi],0x2d
100178f4:	add    esi,0x2
100178f7:	neg    ebx
100178f9:	adc    eax,0x0
100178fc:	neg    eax
100178fe:	mov    edi,esi
10017900:	xor    ecx,ecx
10017902:	push   ecx
10017903:	push   DWORD PTR [ebp+0x10]
10017906:	push   eax
10017907:	push   ebx
10017908:	call   0x1001e580
1001790d:	cmp    ecx,0x9
10017910:	mov    DWORD PTR [ebp+0xc],ebx
10017913:	mov    ebx,eax
10017915:	mov    eax,edx
10017917:	jbe    0x1001791e
10017919:	add    ecx,0x57
1001791c:	jmp    0x10017921
1001791e:	add    ecx,0x30
10017921:	mov    WORD PTR [esi],cx
10017924:	inc    esi
10017925:	inc    esi
10017926:	test   eax,eax
10017928:	ja     0x10017900
1001792a:	jb     0x10017930
1001792c:	test   ebx,ebx
1001792e:	ja     0x10017900
10017930:	and    WORD PTR [esi],0x0
10017934:	dec    esi
10017935:	dec    esi
10017936:	mov    cx,WORD PTR [edi]
10017939:	movzx  eax,WORD PTR [esi]
1001793c:	mov    WORD PTR [esi],cx
1001793f:	dec    esi
10017940:	mov    WORD PTR [edi],ax
10017943:	dec    esi
10017944:	inc    edi
10017945:	inc    edi
10017946:	cmp    edi,esi
10017948:	jb     0x10017936
1001794a:	pop    edi
1001794b:	pop    esi
1001794c:	pop    ebx
1001794d:	pop    ebp
1001794e:	ret    0x10
10017951:	push   ebp
10017952:	mov    ebp,esp
10017954:	xor    eax,eax
10017956:	cmp    DWORD PTR [ebp+0x14],0xa
1001795a:	jne    0x1001796b
1001795c:	cmp    DWORD PTR [ebp+0xc],eax
1001795f:	jg     0x1001796b
10017961:	jl     0x10017968
10017963:	cmp    DWORD PTR [ebp+0x8],eax
10017966:	jae    0x1001796b
10017968:	xor    eax,eax
1001796a:	inc    eax
1001796b:	push   eax
1001796c:	push   DWORD PTR [ebp+0x14]
1001796f:	mov    eax,DWORD PTR [ebp+0x10]
10017972:	push   DWORD PTR [ebp+0xc]
10017975:	push   DWORD PTR [ebp+0x8]
10017978:	call   0x100178db
1001797d:	mov    eax,DWORD PTR [ebp+0x10]
10017980:	pop    ebp
10017981:	ret    
10017982:	push   ebp
10017983:	mov    ebp,esp
10017985:	cmp    DWORD PTR [ebp+0x10],0x0
10017989:	jne    0x1001798f
1001798b:	xor    eax,eax
1001798d:	pop    ebp
1001798e:	ret    
1001798f:	mov    edx,DWORD PTR [ebp+0xc]
10017992:	mov    ecx,DWORD PTR [ebp+0x8]
10017995:	dec    DWORD PTR [ebp+0x10]
10017998:	je     0x100179ad
1001799a:	movzx  eax,WORD PTR [ecx]
1001799d:	test   ax,ax
100179a0:	je     0x100179ad
100179a2:	cmp    ax,WORD PTR [edx]
100179a5:	jne    0x100179ad
100179a7:	inc    ecx
100179a8:	inc    ecx
100179a9:	inc    edx
100179aa:	inc    edx
100179ab:	jmp    0x10017995
100179ad:	movzx  eax,WORD PTR [ecx]
100179b0:	movzx  ecx,WORD PTR [edx]
100179b3:	sub    eax,ecx
100179b5:	pop    ebp
100179b6:	ret    
100179b7:	push   0x10
100179b9:	push   0x10058540
100179be:	call   0x10017a38
100179c3:	xor    eax,eax
100179c5:	mov    DWORD PTR [ebp-0x20],eax
100179c8:	mov    DWORD PTR [ebp-0x4],eax
100179cb:	mov    DWORD PTR [ebp-0x1c],eax
100179ce:	mov    eax,DWORD PTR [ebp-0x1c]
100179d1:	cmp    eax,DWORD PTR [ebp+0x10]
100179d4:	jge    0x100179e9
100179d6:	mov    esi,DWORD PTR [ebp+0x8]
100179d9:	mov    ecx,esi
100179db:	call   DWORD PTR [ebp+0x14]
100179de:	add    esi,DWORD PTR [ebp+0xc]
100179e1:	mov    DWORD PTR [ebp+0x8],esi
100179e4:	inc    DWORD PTR [ebp-0x1c]
100179e7:	jmp    0x100179ce
100179e9:	mov    DWORD PTR [ebp-0x20],0x1
100179f0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100179f7:	call   0x10017a04
100179fc:	call   0x10017a7d
10017a01:	ret    0x14
10017a04:	cmp    DWORD PTR [ebp-0x20],0x0
10017a08:	jne    0x10017a1b
10017a0a:	push   DWORD PTR [ebp+0x18]
10017a0d:	push   DWORD PTR [ebp-0x1c]
10017a10:	push   DWORD PTR [ebp+0xc]
10017a13:	push   DWORD PTR [ebp+0x8]
10017a16:	call   0x10017536
10017a1b:	ret    
10017a1c:	mov    eax,DWORD PTR [esp+0x4]
10017a20:	test   eax,eax
10017a22:	je     0x10017a36
10017a24:	sub    eax,0x8
10017a27:	cmp    DWORD PTR [eax],0xdddd
10017a2d:	jne    0x10017a36
10017a2f:	push   eax
10017a30:	call   0x10016b35
10017a35:	pop    ecx
10017a36:	ret    
10017a37:	int3   
10017a38:	push   0x10017aa0
10017a3d:	push   DWORD PTR fs:0x0
10017a44:	mov    eax,DWORD PTR [esp+0x10]
10017a48:	mov    DWORD PTR [esp+0x10],ebp
10017a4c:	lea    ebp,[esp+0x10]
10017a50:	sub    esp,eax
10017a52:	push   ebx
10017a53:	push   esi
10017a54:	push   edi
10017a55:	mov    eax,ds:0x10064694
10017a5a:	xor    DWORD PTR [ebp-0x4],eax
10017a5d:	xor    eax,ebp
10017a5f:	push   eax
10017a60:	mov    DWORD PTR [ebp-0x18],esp
10017a63:	push   DWORD PTR [ebp-0x8]
10017a66:	mov    eax,DWORD PTR [ebp-0x4]
10017a69:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10017a70:	mov    DWORD PTR [ebp-0x8],eax
10017a73:	lea    eax,[ebp-0x10]
10017a76:	mov    fs:0x0,eax
10017a7c:	ret    
10017a7d:	mov    ecx,DWORD PTR [ebp-0x10]
10017a80:	mov    DWORD PTR fs:0x0,ecx
10017a87:	pop    ecx
10017a88:	pop    edi
10017a89:	pop    edi
10017a8a:	pop    esi
10017a8b:	pop    ebx
10017a8c:	mov    esp,ebp
10017a8e:	pop    ebp
10017a8f:	push   ecx
10017a90:	ret    
10017a91:	int3   
10017a92:	int3   
10017a93:	int3   
10017a94:	int3   
10017a95:	int3   
10017a96:	int3   
10017a97:	int3   
10017a98:	int3   
10017a99:	int3   
10017a9a:	int3   
10017a9b:	int3   
10017a9c:	int3   
10017a9d:	int3   
10017a9e:	int3   
10017a9f:	int3   
10017aa0:	sub    esp,0x14
10017aa3:	push   ebx
10017aa4:	mov    ebx,DWORD PTR [esp+0x20]
10017aa8:	push   ebp
10017aa9:	push   esi
10017aaa:	mov    esi,DWORD PTR [ebx+0x8]
10017aad:	xor    esi,DWORD PTR ds:0x10064694
10017ab3:	push   edi
10017ab4:	mov    eax,DWORD PTR [esi]
10017ab6:	cmp    eax,0xfffffffe
10017ab9:	mov    BYTE PTR [esp+0x13],0x0
10017abe:	mov    DWORD PTR [esp+0x18],0x1
10017ac6:	lea    edi,[ebx+0x10]
10017ac9:	je     0x10017ad8
10017acb:	mov    ecx,DWORD PTR [esi+0x4]
10017ace:	add    ecx,edi
10017ad0:	xor    ecx,DWORD PTR [eax+edi*1]
10017ad3:	call   0x10015adb
10017ad8:	mov    ecx,DWORD PTR [esi+0xc]
10017adb:	mov    eax,DWORD PTR [esi+0x8]
10017ade:	add    ecx,edi
10017ae0:	xor    ecx,DWORD PTR [eax+edi*1]
10017ae3:	call   0x10015adb
10017ae8:	mov    eax,DWORD PTR [esp+0x28]
10017aec:	test   BYTE PTR [eax+0x4],0x66
10017af0:	jne    0x10017c15
10017af6:	mov    ebp,DWORD PTR [ebx+0xc]
10017af9:	cmp    ebp,0xfffffffe
10017afc:	mov    ecx,DWORD PTR [esp+0x30]
10017b00:	lea    edx,[esp+0x1c]
10017b04:	mov    DWORD PTR [esp+0x1c],eax
10017b08:	mov    DWORD PTR [esp+0x20],ecx
10017b0c:	mov    DWORD PTR [ebx-0x4],edx
10017b0f:	je     0x10017b6f
10017b11:	lea    eax,[ebp+ebp*2+0x0]
10017b15:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
10017b19:	test   ecx,ecx
10017b1b:	lea    ebx,[esi+eax*4+0x10]
10017b1f:	mov    eax,DWORD PTR [ebx]
10017b21:	mov    DWORD PTR [esp+0x14],eax
10017b25:	je     0x10017b3d
10017b27:	mov    edx,edi
10017b29:	call   0x1001e8aa
10017b2e:	test   eax,eax
10017b30:	mov    BYTE PTR [esp+0x13],0x1
10017b35:	jl     0x10017b7b
10017b37:	jg     0x10017b85
10017b39:	mov    eax,DWORD PTR [esp+0x14]
10017b3d:	cmp    eax,0xfffffffe
10017b40:	mov    ebp,eax
10017b42:	jne    0x10017b11
10017b44:	cmp    BYTE PTR [esp+0x13],0x0
10017b49:	je     0x10017b6f
10017b4b:	mov    eax,DWORD PTR [esi]
10017b4d:	cmp    eax,0xfffffffe
10017b50:	je     0x10017b5f
10017b52:	mov    ecx,DWORD PTR [esi+0x4]
10017b55:	add    ecx,edi
10017b57:	xor    ecx,DWORD PTR [eax+edi*1]
10017b5a:	call   0x10015adb
10017b5f:	mov    ecx,DWORD PTR [esi+0xc]
10017b62:	mov    eax,DWORD PTR [esi+0x8]
10017b65:	add    ecx,edi
10017b67:	xor    ecx,DWORD PTR [eax+edi*1]
10017b6a:	call   0x10015adb
10017b6f:	mov    eax,DWORD PTR [esp+0x18]
10017b73:	pop    edi
10017b74:	pop    esi
10017b75:	pop    ebp
10017b76:	pop    ebx
10017b77:	add    esp,0x14
10017b7a:	ret    
10017b7b:	mov    DWORD PTR [esp+0x18],0x0
10017b83:	jmp    0x10017b4b
10017b85:	mov    ecx,DWORD PTR [esp+0x28]
10017b89:	cmp    DWORD PTR [ecx],0xe06d7363
10017b8f:	jne    0x10017bbb
10017b91:	cmp    DWORD PTR ds:0x10050d50,0x0
10017b98:	je     0x10017bbb
10017b9a:	push   0x10050d50
10017b9f:	call   0x10020120
10017ba4:	add    esp,0x4
10017ba7:	test   eax,eax
10017ba9:	je     0x10017bbb
10017bab:	mov    edx,DWORD PTR [esp+0x28]
10017baf:	push   0x1
10017bb1:	push   edx
10017bb2:	call   DWORD PTR ds:0x10050d50
10017bb8:	add    esp,0x8
10017bbb:	mov    ecx,DWORD PTR [esp+0x2c]
10017bbf:	call   0x1001e8da
10017bc4:	mov    eax,DWORD PTR [esp+0x2c]
10017bc8:	cmp    DWORD PTR [eax+0xc],ebp
10017bcb:	je     0x10017be0
10017bcd:	push   0x10064694
10017bd2:	push   edi
10017bd3:	mov    edx,ebp
10017bd5:	mov    ecx,eax
10017bd7:	call   0x1001e8f4
10017bdc:	mov    eax,DWORD PTR [esp+0x2c]
10017be0:	mov    ecx,DWORD PTR [esp+0x14]
10017be4:	mov    DWORD PTR [eax+0xc],ecx
10017be7:	mov    eax,DWORD PTR [esi]
10017be9:	cmp    eax,0xfffffffe
10017bec:	je     0x10017bfb
10017bee:	mov    ecx,DWORD PTR [esi+0x4]
10017bf1:	add    ecx,edi
10017bf3:	xor    ecx,DWORD PTR [eax+edi*1]
10017bf6:	call   0x10015adb
10017bfb:	mov    ecx,DWORD PTR [esi+0xc]
10017bfe:	mov    edx,DWORD PTR [esi+0x8]
10017c01:	add    ecx,edi
10017c03:	xor    ecx,DWORD PTR [edx+edi*1]
10017c06:	call   0x10015adb
10017c0b:	mov    ecx,DWORD PTR [ebx+0x8]
10017c0e:	mov    edx,edi
10017c10:	jmp    0x1001e8c1
10017c15:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
10017c19:	je     0x10017b6f
10017c1f:	push   0x10064694
10017c24:	push   edi
10017c25:	mov    ecx,ebx
10017c27:	mov    edx,0xfffffffe
10017c2c:	call   0x1001e8f4
10017c31:	jmp    0x10017b4b
10017c36:	push   0x10
10017c38:	push   0x10058560
10017c3d:	call   0x10017a38
10017c42:	mov    ebx,DWORD PTR [ebp+0x8]
10017c45:	test   ebx,ebx
10017c47:	jne    0x10017c57
10017c49:	push   DWORD PTR [ebp+0xc]
10017c4c:	call   0x10016c12
10017c51:	pop    ecx
10017c52:	jmp    0x10017e23
10017c57:	mov    esi,DWORD PTR [ebp+0xc]
10017c5a:	test   esi,esi
10017c5c:	jne    0x10017c6a
10017c5e:	push   ebx
10017c5f:	call   0x10016b35
10017c64:	pop    ecx
10017c65:	jmp    0x10017e21
10017c6a:	cmp    DWORD PTR ds:0x10068098,0x3
10017c71:	jne    0x10017e0a
10017c77:	xor    edi,edi
10017c79:	mov    DWORD PTR [ebp-0x1c],edi
10017c7c:	cmp    esi,0xffffffe0
10017c7f:	ja     0x10017e0f
10017c85:	push   0x4
10017c87:	call   0x1001b6ab
10017c8c:	pop    ecx
10017c8d:	mov    DWORD PTR [ebp-0x4],edi
10017c90:	push   ebx
10017c91:	call   0x1001b724
10017c96:	pop    ecx
10017c97:	mov    DWORD PTR [ebp-0x20],eax
10017c9a:	cmp    eax,edi
10017c9c:	je     0x10017d40
10017ca2:	cmp    esi,DWORD PTR ds:0x10068088
10017ca8:	ja     0x10017cf3
10017caa:	push   esi
10017cab:	push   ebx
10017cac:	push   eax
10017cad:	call   0x1001bc19
10017cb2:	add    esp,0xc
10017cb5:	test   eax,eax
10017cb7:	je     0x10017cbe
10017cb9:	mov    DWORD PTR [ebp-0x1c],ebx
10017cbc:	jmp    0x10017cf3
10017cbe:	push   esi
10017cbf:	call   0x1001bef8
10017cc4:	pop    ecx
10017cc5:	mov    DWORD PTR [ebp-0x1c],eax
10017cc8:	cmp    eax,edi
10017cca:	je     0x10017cf3
10017ccc:	mov    eax,DWORD PTR [ebx-0x4]
10017ccf:	dec    eax
10017cd0:	cmp    eax,esi
10017cd2:	jb     0x10017cd6
10017cd4:	mov    eax,esi
10017cd6:	push   eax
10017cd7:	push   ebx
10017cd8:	push   DWORD PTR [ebp-0x1c]
10017cdb:	call   0x100167d0
10017ce0:	push   ebx
10017ce1:	call   0x1001b724
10017ce6:	mov    DWORD PTR [ebp-0x20],eax
10017ce9:	push   ebx
10017cea:	push   eax
10017ceb:	call   0x1001b74f
10017cf0:	add    esp,0x18
10017cf3:	cmp    DWORD PTR [ebp-0x1c],edi
10017cf6:	jne    0x10017d40
10017cf8:	cmp    esi,edi
10017cfa:	jne    0x10017d02
10017cfc:	xor    esi,esi
10017cfe:	inc    esi
10017cff:	mov    DWORD PTR [ebp+0xc],esi
10017d02:	add    esi,0xf
10017d05:	and    esi,0xfffffff0
10017d08:	mov    DWORD PTR [ebp+0xc],esi
10017d0b:	push   esi
10017d0c:	push   edi
10017d0d:	push   DWORD PTR ds:0x100666c0
10017d13:	call   DWORD PTR ds:0x1002c1c8
10017d19:	mov    DWORD PTR [ebp-0x1c],eax
10017d1c:	cmp    eax,edi
10017d1e:	je     0x10017d40
10017d20:	mov    eax,DWORD PTR [ebx-0x4]
10017d23:	dec    eax
10017d24:	cmp    eax,esi
10017d26:	jb     0x10017d2a
10017d28:	mov    eax,esi
10017d2a:	push   eax
10017d2b:	push   ebx
10017d2c:	push   DWORD PTR [ebp-0x1c]
10017d2f:	call   0x100167d0
10017d34:	push   ebx
10017d35:	push   DWORD PTR [ebp-0x20]
10017d38:	call   0x1001b74f
10017d3d:	add    esp,0x14
10017d40:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10017d47:	call   0x10017d7a
10017d4c:	cmp    DWORD PTR [ebp-0x20],0x0
10017d50:	jne    0x10017d83
10017d52:	test   esi,esi
10017d54:	jne    0x10017d57
10017d56:	inc    esi
10017d57:	add    esi,0xf
10017d5a:	and    esi,0xfffffff0
10017d5d:	mov    DWORD PTR [ebp+0xc],esi
10017d60:	push   esi
10017d61:	push   ebx
10017d62:	push   0x0
10017d64:	push   DWORD PTR ds:0x100666c0
10017d6a:	call   DWORD PTR ds:0x1002c1d0
10017d70:	mov    edi,eax
10017d72:	jmp    0x10017d86
10017d74:	mov    esi,DWORD PTR [ebp+0xc]
10017d77:	mov    ebx,DWORD PTR [ebp+0x8]
10017d7a:	push   0x4
10017d7c:	call   0x1001b5d3
10017d81:	pop    ecx
10017d82:	ret    
10017d83:	mov    edi,DWORD PTR [ebp-0x1c]
10017d86:	test   edi,edi
10017d88:	jne    0x10017e4d
10017d8e:	cmp    DWORD PTR ds:0x10066b34,edi
10017d94:	je     0x10017dc2
10017d96:	push   esi
10017d97:	call   0x1001a1b7
10017d9c:	pop    ecx
10017d9d:	test   eax,eax
10017d9f:	jne    0x10017c77
10017da5:	call   0x10019ffe
10017daa:	cmp    DWORD PTR [ebp-0x20],edi
10017dad:	jne    0x10017e1b
10017daf:	mov    esi,eax
10017db1:	call   DWORD PTR ds:0x1002c07c
10017db7:	push   eax
10017db8:	call   0x10019fc3
10017dbd:	pop    ecx
10017dbe:	mov    DWORD PTR [esi],eax
10017dc0:	jmp    0x10017e21
10017dc2:	test   edi,edi
10017dc4:	jne    0x10017e4d
10017dca:	call   0x10019ffe
10017dcf:	cmp    DWORD PTR [ebp-0x20],edi
10017dd2:	je     0x10017e3c
10017dd4:	mov    DWORD PTR [eax],0xc
10017dda:	jmp    0x10017e4d
10017ddc:	test   esi,esi
10017dde:	jne    0x10017de1
10017de0:	inc    esi
10017de1:	push   esi
10017de2:	push   ebx
10017de3:	push   0x0
10017de5:	push   DWORD PTR ds:0x100666c0
10017deb:	call   DWORD PTR ds:0x1002c1d0
10017df1:	mov    edi,eax
10017df3:	test   edi,edi
10017df5:	jne    0x10017e4d
10017df7:	cmp    DWORD PTR ds:0x10066b34,eax
10017dfd:	je     0x10017e33
10017dff:	push   esi
10017e00:	call   0x1001a1b7
10017e05:	pop    ecx
10017e06:	test   eax,eax
10017e08:	je     0x10017e29
10017e0a:	cmp    esi,0xffffffe0
10017e0d:	jbe    0x10017ddc
10017e0f:	push   esi
10017e10:	call   0x1001a1b7
10017e15:	pop    ecx
10017e16:	call   0x10019ffe
10017e1b:	mov    DWORD PTR [eax],0xc
10017e21:	xor    eax,eax
10017e23:	call   0x10017a7d
10017e28:	ret    
10017e29:	call   0x10019ffe
10017e2e:	jmp    0x10017daf
10017e33:	test   edi,edi
10017e35:	jne    0x10017e4d
10017e37:	call   0x10019ffe
10017e3c:	mov    esi,eax
10017e3e:	call   DWORD PTR ds:0x1002c07c
10017e44:	push   eax
10017e45:	call   0x10019fc3
10017e4a:	mov    DWORD PTR [esi],eax
10017e4c:	pop    ecx
10017e4d:	mov    eax,edi
10017e4f:	jmp    0x10017e23
10017e51:	push   eax
10017e52:	push   DWORD PTR fs:0x0
10017e59:	lea    eax,[esp+0xc]
10017e5d:	sub    esp,DWORD PTR [esp+0xc]
10017e61:	push   ebx
10017e62:	push   esi
10017e63:	push   edi
10017e64:	mov    DWORD PTR [eax],ebp
10017e66:	mov    ebp,eax
10017e68:	mov    eax,ds:0x10064694
10017e6d:	xor    eax,ebp
10017e6f:	push   eax
10017e70:	push   DWORD PTR [ebp-0x4]
10017e73:	mov    DWORD PTR [ebp-0x4],0xffffffff
10017e7a:	lea    eax,[ebp-0xc]
10017e7d:	mov    fs:0x0,eax
10017e83:	ret    
10017e84:	push   eax
10017e85:	push   DWORD PTR fs:0x0
10017e8c:	lea    eax,[esp+0xc]
10017e90:	sub    esp,DWORD PTR [esp+0xc]
10017e94:	push   ebx
10017e95:	push   esi
10017e96:	push   edi
10017e97:	mov    DWORD PTR [eax],ebp
10017e99:	mov    ebp,eax
10017e9b:	mov    eax,ds:0x10064694
10017ea0:	xor    eax,ebp
10017ea2:	push   eax
10017ea3:	mov    DWORD PTR [ebp-0x10],esp
10017ea6:	push   DWORD PTR [ebp-0x4]
10017ea9:	mov    DWORD PTR [ebp-0x4],0xffffffff
10017eb0:	lea    eax,[ebp-0xc]
10017eb3:	mov    fs:0x0,eax
10017eb9:	ret    
10017eba:	push   ebx
10017ebb:	push   ebp
10017ebc:	push   esi
10017ebd:	mov    esi,DWORD PTR [esp+0x10]
10017ec1:	mov    eax,DWORD PTR [esi+0xbc]
10017ec7:	xor    ebp,ebp
10017ec9:	cmp    eax,ebp
10017ecb:	push   edi
10017ecc:	je     0x10017f3d
10017ece:	cmp    eax,0x100655a8
10017ed3:	je     0x10017f3d
10017ed5:	mov    eax,DWORD PTR [esi+0xb0]
10017edb:	cmp    eax,ebp
10017edd:	je     0x10017f3d
10017edf:	cmp    DWORD PTR [eax],ebp
10017ee1:	jne    0x10017f3d
10017ee3:	mov    eax,DWORD PTR [esi+0xb8]
10017ee9:	cmp    eax,ebp
10017eeb:	je     0x10017f04
10017eed:	cmp    DWORD PTR [eax],ebp
10017eef:	jne    0x10017f04
10017ef1:	push   eax
10017ef2:	call   0x10016b35
10017ef7:	push   DWORD PTR [esi+0xbc]
10017efd:	call   0x100203ab
10017f02:	pop    ecx
10017f03:	pop    ecx
10017f04:	mov    eax,DWORD PTR [esi+0xb4]
10017f0a:	cmp    eax,ebp
10017f0c:	je     0x10017f25
10017f0e:	cmp    DWORD PTR [eax],ebp
10017f10:	jne    0x10017f25
10017f12:	push   eax
10017f13:	call   0x10016b35
10017f18:	push   DWORD PTR [esi+0xbc]
10017f1e:	call   0x1002036b
10017f23:	pop    ecx
10017f24:	pop    ecx
10017f25:	push   DWORD PTR [esi+0xb0]
10017f2b:	call   0x10016b35
10017f30:	push   DWORD PTR [esi+0xbc]
10017f36:	call   0x10016b35
10017f3b:	pop    ecx
10017f3c:	pop    ecx
10017f3d:	mov    eax,DWORD PTR [esi+0xc0]
10017f43:	cmp    eax,ebp
10017f45:	je     0x10017f8b
10017f47:	cmp    DWORD PTR [eax],ebp
10017f49:	jne    0x10017f8b
10017f4b:	mov    eax,DWORD PTR [esi+0xc4]
10017f51:	sub    eax,0xfe
10017f56:	push   eax
10017f57:	call   0x10016b35
10017f5c:	mov    eax,DWORD PTR [esi+0xcc]
10017f62:	mov    edi,0x80
10017f67:	sub    eax,edi
10017f69:	push   eax
10017f6a:	call   0x10016b35
10017f6f:	mov    eax,DWORD PTR [esi+0xd0]
10017f75:	sub    eax,edi
10017f77:	push   eax
10017f78:	call   0x10016b35
10017f7d:	push   DWORD PTR [esi+0xc0]
10017f83:	call   0x10016b35
10017f88:	add    esp,0x10
10017f8b:	lea    edi,[esi+0xd4]
10017f91:	mov    eax,DWORD PTR [edi]
10017f93:	cmp    eax,0x100654e8
10017f98:	je     0x10017fb1
10017f9a:	cmp    DWORD PTR [eax+0xb4],ebp
10017fa0:	jne    0x10017fb1
10017fa2:	push   eax
10017fa3:	call   0x100201db
10017fa8:	push   DWORD PTR [edi]
10017faa:	call   0x10016b35
10017faf:	pop    ecx
10017fb0:	pop    ecx
10017fb1:	push   0x6
10017fb3:	lea    edi,[esi+0x50]
10017fb6:	pop    ebx
10017fb7:	cmp    DWORD PTR [edi-0x8],0x10064eb8
10017fbe:	je     0x10017fd1
10017fc0:	mov    eax,DWORD PTR [edi]
10017fc2:	cmp    eax,ebp
10017fc4:	je     0x10017fd1
10017fc6:	cmp    DWORD PTR [eax],ebp
10017fc8:	jne    0x10017fd1
10017fca:	push   eax
10017fcb:	call   0x10016b35
10017fd0:	pop    ecx
10017fd1:	cmp    DWORD PTR [edi-0x4],ebp
10017fd4:	je     0x10017fe8
10017fd6:	mov    eax,DWORD PTR [edi+0x4]
10017fd9:	cmp    eax,ebp
10017fdb:	je     0x10017fe8
10017fdd:	cmp    DWORD PTR [eax],ebp
10017fdf:	jne    0x10017fe8
10017fe1:	push   eax
10017fe2:	call   0x10016b35
10017fe7:	pop    ecx
10017fe8:	add    edi,0x10
10017feb:	dec    ebx
10017fec:	jne    0x10017fb7
10017fee:	push   esi
10017fef:	call   0x10016b35
10017ff4:	pop    ecx
10017ff5:	pop    edi
10017ff6:	pop    esi
10017ff7:	pop    ebp
10017ff8:	pop    ebx
10017ff9:	ret    
10017ffa:	push   ebx
10017ffb:	push   ebp
10017ffc:	push   esi
10017ffd:	mov    esi,DWORD PTR [esp+0x10]
10018001:	push   edi
10018002:	mov    edi,DWORD PTR ds:0x1002c0e0
10018008:	push   esi
10018009:	call   edi
1001800b:	mov    eax,DWORD PTR [esi+0xb0]
10018011:	test   eax,eax
10018013:	je     0x10018018
10018015:	push   eax
10018016:	call   edi
10018018:	mov    eax,DWORD PTR [esi+0xb8]
1001801e:	test   eax,eax
10018020:	je     0x10018025
10018022:	push   eax
10018023:	call   edi
10018025:	mov    eax,DWORD PTR [esi+0xb4]
1001802b:	test   eax,eax
1001802d:	je     0x10018032
1001802f:	push   eax
10018030:	call   edi
10018032:	mov    eax,DWORD PTR [esi+0xc0]
10018038:	test   eax,eax
1001803a:	je     0x1001803f
1001803c:	push   eax
1001803d:	call   edi
1001803f:	push   0x6
10018041:	lea    ebx,[esi+0x50]
10018044:	pop    ebp
10018045:	cmp    DWORD PTR [ebx-0x8],0x10064eb8
1001804c:	je     0x10018057
1001804e:	mov    eax,DWORD PTR [ebx]
10018050:	test   eax,eax
10018052:	je     0x10018057
10018054:	push   eax
10018055:	call   edi
10018057:	cmp    DWORD PTR [ebx-0x4],0x0
1001805b:	je     0x10018067
1001805d:	mov    eax,DWORD PTR [ebx+0x4]
10018060:	test   eax,eax
10018062:	je     0x10018067
10018064:	push   eax
10018065:	call   edi
10018067:	add    ebx,0x10
1001806a:	dec    ebp
1001806b:	jne    0x10018045
1001806d:	mov    eax,DWORD PTR [esi+0xd4]
10018073:	add    eax,0xb4
10018078:	push   eax
10018079:	call   edi
1001807b:	pop    edi
1001807c:	pop    esi
1001807d:	pop    ebp
1001807e:	pop    ebx
1001807f:	ret    
10018080:	push   esi
10018081:	mov    esi,DWORD PTR [esp+0x8]
10018085:	test   esi,esi
10018087:	je     0x10018108
10018089:	push   ebx
1001808a:	push   ebp
1001808b:	push   edi
1001808c:	mov    edi,DWORD PTR ds:0x1002c0ec
10018092:	push   esi
10018093:	call   edi
10018095:	mov    eax,DWORD PTR [esi+0xb0]
1001809b:	test   eax,eax
1001809d:	je     0x100180a2
1001809f:	push   eax
100180a0:	call   edi
100180a2:	mov    eax,DWORD PTR [esi+0xb8]
100180a8:	test   eax,eax
100180aa:	je     0x100180af
100180ac:	push   eax
100180ad:	call   edi
100180af:	mov    eax,DWORD PTR [esi+0xb4]
100180b5:	test   eax,eax
100180b7:	je     0x100180bc
100180b9:	push   eax
100180ba:	call   edi
100180bc:	mov    eax,DWORD PTR [esi+0xc0]
100180c2:	test   eax,eax
100180c4:	je     0x100180c9
100180c6:	push   eax
100180c7:	call   edi
100180c9:	push   0x6
100180cb:	lea    ebx,[esi+0x50]
100180ce:	pop    ebp
100180cf:	cmp    DWORD PTR [ebx-0x8],0x10064eb8
100180d6:	je     0x100180e1
100180d8:	mov    eax,DWORD PTR [ebx]
100180da:	test   eax,eax
100180dc:	je     0x100180e1
100180de:	push   eax
100180df:	call   edi
100180e1:	cmp    DWORD PTR [ebx-0x4],0x0
100180e5:	je     0x100180f1
100180e7:	mov    eax,DWORD PTR [ebx+0x4]
100180ea:	test   eax,eax
100180ec:	je     0x100180f1
100180ee:	push   eax
100180ef:	call   edi
100180f1:	add    ebx,0x10
100180f4:	dec    ebp
100180f5:	jne    0x100180cf
100180f7:	mov    eax,DWORD PTR [esi+0xd4]
100180fd:	add    eax,0xb4
10018102:	push   eax
10018103:	call   edi
10018105:	pop    edi
10018106:	pop    ebp
10018107:	pop    ebx
10018108:	mov    eax,esi
1001810a:	pop    esi
1001810b:	ret    
1001810c:	test   edi,edi
1001810e:	je     0x10018147
10018110:	test   eax,eax
10018112:	je     0x10018147
10018114:	push   esi
10018115:	mov    esi,DWORD PTR [eax]
10018117:	cmp    esi,edi
10018119:	je     0x10018143
1001811b:	push   edi
1001811c:	mov    DWORD PTR [eax],edi
1001811e:	call   0x10017ffa
10018123:	test   esi,esi
10018125:	pop    ecx
10018126:	je     0x10018143
10018128:	push   esi
10018129:	call   0x10018080
1001812e:	cmp    DWORD PTR [esi],0x0
10018131:	pop    ecx
10018132:	jne    0x10018143
10018134:	cmp    esi,0x10064ec0
1001813a:	je     0x10018143
1001813c:	push   esi
1001813d:	call   0x10017eba
10018142:	pop    ecx
10018143:	mov    eax,edi
10018145:	pop    esi
10018146:	ret    
10018147:	xor    eax,eax
10018149:	ret    
1001814a:	push   0xc
1001814c:	push   0x10058580
10018151:	call   0x10017a38
10018156:	call   0x10019816
1001815b:	mov    esi,eax
1001815d:	mov    eax,ds:0x10064eb0
10018162:	test   DWORD PTR [esi+0x70],eax
10018165:	je     0x10018189
10018167:	cmp    DWORD PTR [esi+0x6c],0x0
1001816b:	je     0x10018189
1001816d:	call   0x10019816
10018172:	mov    esi,DWORD PTR [eax+0x6c]
10018175:	test   esi,esi
10018177:	jne    0x10018181
10018179:	push   0x20
1001817b:	call   0x10019cbf
10018180:	pop    ecx
10018181:	mov    eax,esi
10018183:	call   0x10017a7d
10018188:	ret    
10018189:	push   0xc
1001818b:	call   0x1001b6ab
10018190:	pop    ecx
10018191:	and    DWORD PTR [ebp-0x4],0x0
10018195:	lea    eax,[esi+0x6c]
10018198:	mov    edi,DWORD PTR ds:0x10064f98
1001819e:	call   0x1001810c
100181a3:	mov    DWORD PTR [ebp-0x1c],eax
100181a6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100181ad:	call   0x100181b4
100181b2:	jmp    0x10018175
100181b4:	push   0xc
100181b6:	call   0x1001b5d3
100181bb:	pop    ecx
100181bc:	mov    esi,DWORD PTR [ebp-0x1c]
100181bf:	ret    
100181c0:	push   ebp
100181c1:	mov    ebp,esp
100181c3:	sub    esp,0x14
100181c6:	mov    eax,ds:0x10064694
100181cb:	xor    eax,ebp
100181cd:	mov    DWORD PTR [ebp-0x4],eax
100181d0:	push   ebx
100181d1:	push   esi
100181d2:	xor    ebx,ebx
100181d4:	cmp    DWORD PTR ds:0x100662ec,ebx
100181da:	push   edi
100181db:	mov    esi,ecx
100181dd:	jne    0x10018217
100181df:	push   ebx
100181e0:	push   ebx
100181e1:	xor    edi,edi
100181e3:	inc    edi
100181e4:	push   edi
100181e5:	push   0x10057130
100181ea:	push   0x100
100181ef:	push   ebx
100181f0:	call   DWORD PTR ds:0x1002c210
100181f6:	test   eax,eax
100181f8:	je     0x10018202
100181fa:	mov    DWORD PTR ds:0x100662ec,edi
10018200:	jmp    0x10018217
10018202:	call   DWORD PTR ds:0x1002c07c
10018208:	cmp    eax,0x78
1001820b:	jne    0x10018217
1001820d:	mov    DWORD PTR ds:0x100662ec,0x2
10018217:	cmp    DWORD PTR [ebp+0x14],ebx
1001821a:	jle    0x1001823e
1001821c:	mov    ecx,DWORD PTR [ebp+0x14]
1001821f:	mov    eax,DWORD PTR [ebp+0x10]
10018222:	dec    ecx
10018223:	cmp    BYTE PTR [eax],bl
10018225:	je     0x1001822f
10018227:	inc    eax
10018228:	cmp    ecx,ebx
1001822a:	jne    0x10018222
1001822c:	or     ecx,0xffffffff
1001822f:	mov    eax,DWORD PTR [ebp+0x14]
10018232:	sub    eax,ecx
10018234:	dec    eax
10018235:	cmp    eax,DWORD PTR [ebp+0x14]
10018238:	jge    0x1001823b
1001823a:	inc    eax
1001823b:	mov    DWORD PTR [ebp+0x14],eax
1001823e:	mov    eax,ds:0x100662ec
10018243:	cmp    eax,0x2
10018246:	je     0x100183f7
1001824c:	cmp    eax,ebx
1001824e:	je     0x100183f7
10018254:	cmp    eax,0x1
10018257:	jne    0x10018428
1001825d:	cmp    DWORD PTR [ebp+0x20],ebx
10018260:	mov    DWORD PTR [ebp-0x8],ebx
10018263:	jne    0x1001826d
10018265:	mov    eax,DWORD PTR [esi]
10018267:	mov    eax,DWORD PTR [eax+0x4]
1001826a:	mov    DWORD PTR [ebp+0x20],eax
1001826d:	mov    esi,DWORD PTR ds:0x1002c080
10018273:	xor    eax,eax
10018275:	cmp    DWORD PTR [ebp+0x24],ebx
10018278:	push   ebx
10018279:	push   ebx
1001827a:	push   DWORD PTR [ebp+0x14]
1001827d:	setne  al
10018280:	push   DWORD PTR [ebp+0x10]
10018283:	lea    eax,[eax*8+0x1]
1001828a:	push   eax
1001828b:	push   DWORD PTR [ebp+0x20]
1001828e:	call   esi
10018290:	mov    edi,eax
10018292:	cmp    edi,ebx
10018294:	je     0x10018428
1001829a:	jle    0x100182df
1001829c:	push   0xffffffe0
1001829e:	xor    edx,edx
100182a0:	pop    eax
100182a1:	div    edi
100182a3:	cmp    eax,0x2
100182a6:	jb     0x100182df
100182a8:	lea    eax,[edi+edi*1+0x8]
100182ac:	cmp    eax,0x400
100182b1:	ja     0x100182c6
100182b3:	call   0x10015af0
100182b8:	mov    eax,esp
100182ba:	cmp    eax,ebx
100182bc:	je     0x100182da
100182be:	mov    DWORD PTR [eax],0xcccc
100182c4:	jmp    0x100182d7
100182c6:	push   eax
100182c7:	call   0x10016c12
100182cc:	cmp    eax,ebx
100182ce:	pop    ecx
100182cf:	je     0x100182da
100182d1:	mov    DWORD PTR [eax],0xdddd
100182d7:	add    eax,0x8
100182da:	mov    DWORD PTR [ebp-0xc],eax
100182dd:	jmp    0x100182e2
100182df:	mov    DWORD PTR [ebp-0xc],ebx
100182e2:	cmp    DWORD PTR [ebp-0xc],ebx
100182e5:	je     0x10018428
100182eb:	push   edi
100182ec:	push   DWORD PTR [ebp-0xc]
100182ef:	push   DWORD PTR [ebp+0x14]
100182f2:	push   DWORD PTR [ebp+0x10]
100182f5:	push   0x1
100182f7:	push   DWORD PTR [ebp+0x20]
100182fa:	call   esi
100182fc:	test   eax,eax
100182fe:	je     0x100183e6
10018304:	mov    esi,DWORD PTR ds:0x1002c210
1001830a:	push   ebx
1001830b:	push   ebx
1001830c:	push   edi
1001830d:	push   DWORD PTR [ebp-0xc]
10018310:	push   DWORD PTR [ebp+0xc]
10018313:	push   DWORD PTR [ebp+0x8]
10018316:	call   esi
10018318:	mov    ecx,eax
1001831a:	cmp    ecx,ebx
1001831c:	mov    DWORD PTR [ebp-0x8],ecx
1001831f:	je     0x100183e6
10018325:	test   WORD PTR [ebp+0xc],0x400
1001832b:	je     0x10018356
1001832d:	cmp    DWORD PTR [ebp+0x1c],ebx
10018330:	je     0x100183e6
10018336:	cmp    ecx,DWORD PTR [ebp+0x1c]
10018339:	jg     0x100183e6
1001833f:	push   DWORD PTR [ebp+0x1c]
10018342:	push   DWORD PTR [ebp+0x18]
10018345:	push   edi
10018346:	push   DWORD PTR [ebp-0xc]
10018349:	push   DWORD PTR [ebp+0xc]
1001834c:	push   DWORD PTR [ebp+0x8]
1001834f:	call   esi
10018351:	jmp    0x100183e6
10018356:	cmp    ecx,ebx
10018358:	jle    0x1001839f
1001835a:	push   0xffffffe0
1001835c:	xor    edx,edx
1001835e:	pop    eax
1001835f:	div    ecx
10018361:	cmp    eax,0x2
10018364:	jb     0x1001839f
10018366:	lea    eax,[ecx+ecx*1+0x8]
1001836a:	cmp    eax,0x400
1001836f:	ja     0x10018387
10018371:	call   0x10015af0
10018376:	mov    esi,esp
10018378:	cmp    esi,ebx
1001837a:	je     0x100183e6
1001837c:	mov    DWORD PTR [esi],0xcccc
10018382:	add    esi,0x8
10018385:	jmp    0x100183a1
10018387:	push   eax
10018388:	call   0x10016c12
1001838d:	cmp    eax,ebx
1001838f:	pop    ecx
10018390:	je     0x1001839b
10018392:	mov    DWORD PTR [eax],0xdddd
10018398:	add    eax,0x8
1001839b:	mov    esi,eax
1001839d:	jmp    0x100183a1
1001839f:	xor    esi,esi
100183a1:	cmp    esi,ebx
100183a3:	je     0x100183e6
100183a5:	push   DWORD PTR [ebp-0x8]
100183a8:	push   esi
100183a9:	push   edi
100183aa:	push   DWORD PTR [ebp-0xc]
100183ad:	push   DWORD PTR [ebp+0xc]
100183b0:	push   DWORD PTR [ebp+0x8]
100183b3:	call   DWORD PTR ds:0x1002c210
100183b9:	test   eax,eax
100183bb:	je     0x100183df
100183bd:	cmp    DWORD PTR [ebp+0x1c],ebx
100183c0:	push   ebx
100183c1:	push   ebx
100183c2:	jne    0x100183c8
100183c4:	push   ebx
100183c5:	push   ebx
100183c6:	jmp    0x100183ce
100183c8:	push   DWORD PTR [ebp+0x1c]
100183cb:	push   DWORD PTR [ebp+0x18]
100183ce:	push   DWORD PTR [ebp-0x8]
100183d1:	push   esi
100183d2:	push   ebx
100183d3:	push   DWORD PTR [ebp+0x20]
100183d6:	call   DWORD PTR ds:0x1002c02c
100183dc:	mov    DWORD PTR [ebp-0x8],eax
100183df:	push   esi
100183e0:	call   0x10017a1c
100183e5:	pop    ecx
100183e6:	push   DWORD PTR [ebp-0xc]
100183e9:	call   0x10017a1c
100183ee:	mov    eax,DWORD PTR [ebp-0x8]
100183f1:	pop    ecx
100183f2:	jmp    0x10018550
100183f7:	cmp    DWORD PTR [ebp+0x8],ebx
100183fa:	mov    DWORD PTR [ebp-0xc],ebx
100183fd:	mov    DWORD PTR [ebp-0x10],ebx
10018400:	jne    0x1001840a
10018402:	mov    eax,DWORD PTR [esi]
10018404:	mov    eax,DWORD PTR [eax+0x14]
10018407:	mov    DWORD PTR [ebp+0x8],eax
1001840a:	cmp    DWORD PTR [ebp+0x20],ebx
1001840d:	jne    0x10018417
1001840f:	mov    eax,DWORD PTR [esi]
10018411:	mov    eax,DWORD PTR [eax+0x4]
10018414:	mov    DWORD PTR [ebp+0x20],eax
10018417:	push   DWORD PTR [ebp+0x8]
1001841a:	call   0x100207f0
1001841f:	cmp    eax,0xffffffff
10018422:	pop    ecx
10018423:	mov    DWORD PTR [ebp-0x14],eax
10018426:	jne    0x1001842f
10018428:	xor    eax,eax
1001842a:	jmp    0x10018550
1001842f:	cmp    eax,DWORD PTR [ebp+0x20]
10018432:	je     0x10018513
10018438:	push   ebx
10018439:	push   ebx
1001843a:	lea    ecx,[ebp+0x14]
1001843d:	push   ecx
1001843e:	push   DWORD PTR [ebp+0x10]
10018441:	push   eax
10018442:	push   DWORD PTR [ebp+0x20]
10018445:	call   0x10020837
1001844a:	add    esp,0x18
1001844d:	cmp    eax,ebx
1001844f:	mov    DWORD PTR [ebp-0xc],eax
10018452:	je     0x10018428
10018454:	mov    esi,DWORD PTR ds:0x1002c20c
1001845a:	push   ebx
1001845b:	push   ebx
1001845c:	push   DWORD PTR [ebp+0x14]
1001845f:	push   eax
10018460:	push   DWORD PTR [ebp+0xc]
10018463:	push   DWORD PTR [ebp+0x8]
10018466:	call   esi
10018468:	cmp    eax,ebx
1001846a:	mov    DWORD PTR [ebp-0x8],eax
1001846d:	jne    0x10018476
1001846f:	xor    esi,esi
10018471:	jmp    0x1001852d
10018476:	jle    0x100184b5
10018478:	cmp    eax,0xffffffe0
1001847b:	ja     0x100184b5
1001847d:	add    eax,0x8
10018480:	cmp    eax,0x400
10018485:	ja     0x1001849d
10018487:	call   0x10015af0
1001848c:	mov    edi,esp
1001848e:	cmp    edi,ebx
10018490:	je     0x1001846f
10018492:	mov    DWORD PTR [edi],0xcccc
10018498:	add    edi,0x8
1001849b:	jmp    0x100184b7
1001849d:	push   eax
1001849e:	call   0x10016c12
100184a3:	cmp    eax,ebx
100184a5:	pop    ecx
100184a6:	je     0x100184b1
100184a8:	mov    DWORD PTR [eax],0xdddd
100184ae:	add    eax,0x8
100184b1:	mov    edi,eax
100184b3:	jmp    0x100184b7
100184b5:	xor    edi,edi
100184b7:	cmp    edi,ebx
100184b9:	je     0x1001846f
100184bb:	push   DWORD PTR [ebp-0x8]
100184be:	push   ebx
100184bf:	push   edi
100184c0:	call   0x10016530
100184c5:	add    esp,0xc
100184c8:	push   DWORD PTR [ebp-0x8]
100184cb:	push   edi
100184cc:	push   DWORD PTR [ebp+0x14]
100184cf:	push   DWORD PTR [ebp-0xc]
100184d2:	push   DWORD PTR [ebp+0xc]
100184d5:	push   DWORD PTR [ebp+0x8]
100184d8:	call   esi
100184da:	cmp    eax,ebx
100184dc:	mov    DWORD PTR [ebp-0x8],eax
100184df:	jne    0x100184e5
100184e1:	xor    esi,esi
100184e3:	jmp    0x1001850a
100184e5:	push   DWORD PTR [ebp+0x1c]
100184e8:	lea    eax,[ebp-0x8]
100184eb:	push   DWORD PTR [ebp+0x18]
100184ee:	push   eax
100184ef:	push   edi
100184f0:	push   DWORD PTR [ebp+0x20]
100184f3:	push   DWORD PTR [ebp-0x14]
100184f6:	call   0x10020837
100184fb:	mov    esi,eax
100184fd:	mov    DWORD PTR [ebp-0x10],esi
10018500:	add    esp,0x18
10018503:	neg    esi
10018505:	sbb    esi,esi
10018507:	and    esi,DWORD PTR [ebp-0x8]
1001850a:	push   edi
1001850b:	call   0x10017a1c
10018510:	pop    ecx
10018511:	jmp    0x1001852d
10018513:	push   DWORD PTR [ebp+0x1c]
10018516:	push   DWORD PTR [ebp+0x18]
10018519:	push   DWORD PTR [ebp+0x14]
1001851c:	push   DWORD PTR [ebp+0x10]
1001851f:	push   DWORD PTR [ebp+0xc]
10018522:	push   DWORD PTR [ebp+0x8]
10018525:	call   DWORD PTR ds:0x1002c20c
1001852b:	mov    esi,eax
1001852d:	cmp    DWORD PTR [ebp-0xc],ebx
10018530:	je     0x1001853b
10018532:	push   DWORD PTR [ebp-0xc]
10018535:	call   0x10016b35
1001853a:	pop    ecx
1001853b:	mov    eax,DWORD PTR [ebp-0x10]
1001853e:	cmp    eax,ebx
10018540:	je     0x1001854e
10018542:	cmp    DWORD PTR [ebp+0x18],eax
10018545:	je     0x1001854e
10018547:	push   eax
10018548:	call   0x10016b35
1001854d:	pop    ecx
1001854e:	mov    eax,esi
10018550:	lea    esp,[ebp-0x20]
10018553:	pop    edi
10018554:	pop    esi
10018555:	pop    ebx
10018556:	mov    ecx,DWORD PTR [ebp-0x4]
10018559:	xor    ecx,ebp
1001855b:	call   0x10015adb
10018560:	leave  
10018561:	ret    
10018562:	push   ebp
10018563:	mov    ebp,esp
10018565:	sub    esp,0x10
10018568:	push   DWORD PTR [ebp+0x8]
1001856b:	lea    ecx,[ebp-0x10]
1001856e:	call   0x100165aa
10018573:	push   DWORD PTR [ebp+0x28]
10018576:	lea    ecx,[ebp-0x10]
10018579:	push   DWORD PTR [ebp+0x24]
1001857c:	push   DWORD PTR [ebp+0x20]
1001857f:	push   DWORD PTR [ebp+0x1c]
10018582:	push   DWORD PTR [ebp+0x18]
10018585:	push   DWORD PTR [ebp+0x14]
10018588:	push   DWORD PTR [ebp+0x10]
1001858b:	push   DWORD PTR [ebp+0xc]
1001858e:	call   0x100181c0
10018593:	add    esp,0x20
10018596:	cmp    BYTE PTR [ebp-0x4],0x0
1001859a:	je     0x100185a3
1001859c:	mov    ecx,DWORD PTR [ebp-0x8]
1001859f:	and    DWORD PTR [ecx+0x70],0xfffffffd
100185a3:	leave  
100185a4:	ret    
100185a5:	push   esi
100185a6:	push   edi
100185a7:	xor    esi,esi
100185a9:	push   DWORD PTR [esp+0xc]
100185ad:	call   0x10016c12
100185b2:	mov    edi,eax
100185b4:	test   edi,edi
100185b6:	pop    ecx
100185b7:	jne    0x100185e0
100185b9:	cmp    DWORD PTR ds:0x100662f0,eax
100185bf:	jbe    0x100185e0
100185c1:	push   esi
100185c2:	call   DWORD PTR ds:0x1002c070
100185c8:	lea    eax,[esi+0x3e8]
100185ce:	cmp    eax,DWORD PTR ds:0x100662f0
100185d4:	jbe    0x100185d9
100185d6:	or     eax,0xffffffff
100185d9:	cmp    eax,0xffffffff
100185dc:	mov    esi,eax
100185de:	jne    0x100185a9
100185e0:	mov    eax,edi
100185e2:	pop    edi
100185e3:	pop    esi
100185e4:	ret    
100185e5:	push   esi
100185e6:	push   edi
100185e7:	xor    esi,esi
100185e9:	push   0x0
100185eb:	push   DWORD PTR [esp+0x14]
100185ef:	push   DWORD PTR [esp+0x14]
100185f3:	call   0x100209e9
100185f8:	mov    edi,eax
100185fa:	add    esp,0xc
100185fd:	test   edi,edi
100185ff:	jne    0x10018628
10018601:	cmp    DWORD PTR ds:0x100662f0,eax
10018607:	jbe    0x10018628
10018609:	push   esi
1001860a:	call   DWORD PTR ds:0x1002c070
10018610:	lea    eax,[esi+0x3e8]
10018616:	cmp    eax,DWORD PTR ds:0x100662f0
1001861c:	jbe    0x10018621
1001861e:	or     eax,0xffffffff
10018621:	cmp    eax,0xffffffff
10018624:	mov    esi,eax
10018626:	jne    0x100185e9
10018628:	mov    eax,edi
1001862a:	pop    edi
1001862b:	pop    esi
1001862c:	ret    
1001862d:	push   esi
1001862e:	push   edi
1001862f:	xor    esi,esi
10018631:	push   DWORD PTR [esp+0x10]
10018635:	push   DWORD PTR [esp+0x10]
10018639:	call   0x10017c36
1001863e:	mov    edi,eax
10018640:	test   edi,edi
10018642:	pop    ecx
10018643:	pop    ecx
10018644:	jne    0x10018673
10018646:	cmp    DWORD PTR [esp+0x10],eax
1001864a:	je     0x10018673
1001864c:	cmp    DWORD PTR ds:0x100662f0,eax
10018652:	jbe    0x10018673
10018654:	push   esi
10018655:	call   DWORD PTR ds:0x1002c070
1001865b:	lea    eax,[esi+0x3e8]
10018661:	cmp    eax,DWORD PTR ds:0x100662f0
10018667:	jbe    0x1001866c
10018669:	or     eax,0xffffffff
1001866c:	cmp    eax,0xffffffff
1001866f:	mov    esi,eax
10018671:	jne    0x10018631
10018673:	mov    eax,edi
10018675:	pop    edi
10018676:	pop    esi
10018677:	ret    
10018678:	push   ebp
10018679:	lea    ebp,[esp-0x2a8]
10018680:	sub    esp,0x328
10018686:	mov    eax,ds:0x10064694
1001868b:	xor    eax,ebp
1001868d:	mov    DWORD PTR [ebp+0x2a4],eax
10018693:	test   BYTE PTR ds:0x100647dc,0x1
1001869a:	push   esi
1001869b:	je     0x100186a5
1001869d:	push   0xa
1001869f:	call   0x1001c1db
100186a4:	pop    ecx
100186a5:	call   0x10020b54
100186aa:	test   eax,eax
100186ac:	je     0x100186b6
100186ae:	push   0x16
100186b0:	call   0x10020b61
100186b5:	pop    ecx
100186b6:	test   BYTE PTR ds:0x100647dc,0x2
100186bd:	je     0x10018763
100186c3:	mov    DWORD PTR [ebp+0x88],eax
100186c9:	mov    DWORD PTR [ebp+0x84],ecx
100186cf:	mov    DWORD PTR [ebp+0x80],edx
100186d5:	mov    DWORD PTR [ebp+0x7c],ebx
100186d8:	mov    DWORD PTR [ebp+0x78],esi
100186db:	mov    DWORD PTR [ebp+0x74],edi
100186de:	data16 mov WORD PTR [ebp+0xa0],ss
100186e5:	data16 mov WORD PTR [ebp+0x94],cs
100186ec:	data16 mov WORD PTR [ebp+0x70],ds
100186f0:	data16 mov WORD PTR [ebp+0x6c],es
100186f4:	data16 mov WORD PTR [ebp+0x68],fs
100186f8:	data16 mov WORD PTR [ebp+0x64],gs
100186fc:	pushf  
100186fd:	pop    DWORD PTR [ebp+0x98]
10018703:	mov    esi,DWORD PTR [ebp+0x2ac]
10018709:	lea    eax,[ebp+0x2ac]
1001870f:	mov    DWORD PTR [ebp+0x9c],eax
10018715:	mov    DWORD PTR [ebp-0x28],0x10001
1001871c:	mov    DWORD PTR [ebp+0x90],esi
10018722:	mov    eax,DWORD PTR [eax-0x4]
10018725:	push   0x50
10018727:	mov    DWORD PTR [ebp+0x8c],eax
1001872d:	lea    eax,[ebp-0x80]
10018730:	push   0x0
10018732:	push   eax
10018733:	call   0x10016530
10018738:	lea    eax,[ebp-0x80]
1001873b:	add    esp,0xc
1001873e:	mov    DWORD PTR [ebp-0x30],eax
10018741:	lea    eax,[ebp-0x28]
10018744:	push   0x0
10018746:	mov    DWORD PTR [ebp-0x80],0x40000015
1001874d:	mov    DWORD PTR [ebp-0x74],esi
10018750:	mov    DWORD PTR [ebp-0x2c],eax
10018753:	call   DWORD PTR ds:0x1002c1f8
10018759:	lea    eax,[ebp-0x30]
1001875c:	push   eax
1001875d:	call   DWORD PTR ds:0x1002c1f4
10018763:	push   0x3
10018765:	call   0x10019f4f
1001876a:	int3   
1001876b:	mov    ecx,DWORD PTR [esp+0x8]
1001876f:	mov    eax,ds:0x100647dc
10018774:	mov    edx,DWORD PTR [esp+0x4]
10018778:	and    edx,DWORD PTR [esp+0x8]
1001877c:	not    ecx
1001877e:	and    ecx,eax
10018780:	or     ecx,edx
10018782:	mov    DWORD PTR ds:0x100647dc,ecx
10018788:	ret    
10018789:	push   ebp
1001878a:	mov    ebp,esp
1001878c:	sub    esp,0x328
10018792:	mov    ds:0x10066400,eax
10018797:	mov    DWORD PTR ds:0x100663fc,ecx
1001879d:	mov    DWORD PTR ds:0x100663f8,edx
100187a3:	mov    DWORD PTR ds:0x100663f4,ebx
100187a9:	mov    DWORD PTR ds:0x100663f0,esi
100187af:	mov    DWORD PTR ds:0x100663ec,edi
100187b5:	data16 mov WORD PTR ds:0x10066418,ss
100187bc:	data16 mov WORD PTR ds:0x1006640c,cs
100187c3:	data16 mov WORD PTR ds:0x100663e8,ds
100187ca:	data16 mov WORD PTR ds:0x100663e4,es
100187d1:	data16 mov WORD PTR ds:0x100663e0,fs
100187d8:	data16 mov WORD PTR ds:0x100663dc,gs
100187df:	pushf  
100187e0:	pop    DWORD PTR ds:0x10066410
100187e6:	mov    eax,DWORD PTR [ebp+0x0]
100187e9:	mov    ds:0x10066404,eax
100187ee:	mov    eax,DWORD PTR [ebp+0x4]
100187f1:	mov    ds:0x10066408,eax
100187f6:	lea    eax,[ebp+0x8]
100187f9:	mov    ds:0x10066414,eax
100187fe:	mov    eax,DWORD PTR [ebp-0x320]
10018804:	mov    DWORD PTR ds:0x10066350,0x10001
1001880e:	mov    eax,ds:0x10066408
10018813:	mov    ds:0x10066304,eax
10018818:	mov    DWORD PTR ds:0x100662f8,0xc0000409
10018822:	mov    DWORD PTR ds:0x100662fc,0x1
1001882c:	mov    eax,ds:0x10064694
10018831:	mov    DWORD PTR [ebp-0x328],eax
10018837:	mov    eax,ds:0x10064698
1001883c:	mov    DWORD PTR [ebp-0x324],eax
10018842:	call   DWORD PTR ds:0x1002c1fc
10018848:	mov    ds:0x10066348,eax
1001884d:	push   0x1
1001884f:	call   0x10019fbb
10018854:	pop    ecx
10018855:	push   0x0
10018857:	call   DWORD PTR ds:0x1002c1f8
1001885d:	push   0x10050d48
10018862:	call   DWORD PTR ds:0x1002c1f4
10018868:	cmp    DWORD PTR ds:0x10066348,0x0
1001886f:	jne    0x10018879
10018871:	push   0x1
10018873:	call   0x10019fbb
10018878:	pop    ecx
10018879:	push   0xc0000409
1001887e:	call   DWORD PTR ds:0x1002c0d0
10018884:	push   eax
10018885:	call   DWORD PTR ds:0x1002c120
1001888b:	leave  
1001888c:	ret    
1001888d:	mov    DWORD PTR [ecx],0x10050d58
10018893:	jmp    0x1001632c
10018898:	push   esi
10018899:	mov    esi,ecx
1001889b:	mov    DWORD PTR [esi],0x10050d58
100188a1:	call   0x1001632c
100188a6:	test   BYTE PTR [esp+0x8],0x1
100188ab:	je     0x100188b4
100188ad:	push   esi
100188ae:	call   0x10015ad6
100188b3:	pop    ecx
100188b4:	mov    eax,esi
100188b6:	pop    esi
100188b7:	ret    0x4
100188ba:	push   esi
100188bb:	push   edi
100188bc:	mov    edi,DWORD PTR [esp+0xc]
100188c0:	mov    eax,DWORD PTR [edi+0x4]
100188c3:	test   eax,eax
100188c5:	je     0x10018910
100188c7:	lea    edx,[eax+0x8]
100188ca:	cmp    BYTE PTR [edx],0x0
100188cd:	je     0x10018910
100188cf:	mov    esi,DWORD PTR [esp+0x10]
100188d3:	mov    ecx,DWORD PTR [esi+0x4]
100188d6:	cmp    eax,ecx
100188d8:	je     0x100188ee
100188da:	add    ecx,0x8
100188dd:	push   ecx
100188de:	push   edx
100188df:	call   0x1001a0c0
100188e4:	test   eax,eax
100188e6:	pop    ecx
100188e7:	pop    ecx
100188e8:	je     0x100188ee
100188ea:	xor    eax,eax
100188ec:	jmp    0x10018913
100188ee:	test   BYTE PTR [esi],0x2
100188f1:	je     0x100188f8
100188f3:	test   BYTE PTR [edi],0x8
100188f6:	je     0x100188ea
100188f8:	mov    eax,DWORD PTR [esp+0x14]
100188fc:	mov    eax,DWORD PTR [eax]
100188fe:	test   al,0x1
10018900:	je     0x10018907
10018902:	test   BYTE PTR [edi],0x1
10018905:	je     0x100188ea
10018907:	test   al,0x2
10018909:	je     0x10018910
1001890b:	test   BYTE PTR [edi],0x2
1001890e:	je     0x100188ea
10018910:	xor    eax,eax
10018912:	inc    eax
10018913:	pop    edi
10018914:	pop    esi
10018915:	ret    
10018916:	mov    eax,DWORD PTR [esp+0x4]
1001891a:	mov    eax,DWORD PTR [eax]
1001891c:	mov    eax,DWORD PTR [eax]
1001891e:	cmp    eax,0xe0434f4d
10018923:	je     0x1001893d
10018925:	cmp    eax,0xe06d7363
1001892a:	jne    0x10018957
1001892c:	call   0x10019816
10018931:	and    DWORD PTR [eax+0x90],0x0
10018938:	jmp    0x10019b3c
1001893d:	call   0x10019816
10018942:	cmp    DWORD PTR [eax+0x90],0x0
10018949:	jle    0x10018957
1001894b:	call   0x10019816
10018950:	add    eax,0x90
10018955:	dec    DWORD PTR [eax]
10018957:	xor    eax,eax
10018959:	ret    
1001895a:	push   0x10
1001895c:	push   0x100585a0
10018961:	call   0x10017a38
10018966:	mov    edi,DWORD PTR [ebp+0x10]
10018969:	mov    ebx,DWORD PTR [ebp+0x8]
1001896c:	cmp    DWORD PTR [edi+0x4],0x80
10018973:	jg     0x1001897b
10018975:	movsx  esi,BYTE PTR [ebx+0x8]
10018979:	jmp    0x1001897e
1001897b:	mov    esi,DWORD PTR [ebx+0x8]
1001897e:	mov    DWORD PTR [ebp-0x1c],esi
10018981:	call   0x10019816
10018986:	add    eax,0x90
1001898b:	inc    DWORD PTR [eax]
1001898d:	and    DWORD PTR [ebp-0x4],0x0
10018991:	cmp    esi,DWORD PTR [ebp+0x14]
10018994:	je     0x100189fb
10018996:	cmp    esi,0xffffffff
10018999:	jle    0x100189a0
1001899b:	cmp    esi,DWORD PTR [edi+0x4]
1001899e:	jl     0x100189a5
100189a0:	call   0x10019b88
100189a5:	mov    eax,esi
100189a7:	shl    eax,0x3
100189aa:	mov    ecx,DWORD PTR [edi+0x8]
100189ad:	add    ecx,eax
100189af:	mov    esi,DWORD PTR [ecx]
100189b1:	mov    DWORD PTR [ebp-0x20],esi
100189b4:	mov    DWORD PTR [ebp-0x4],0x1
100189bb:	cmp    DWORD PTR [ecx+0x4],0x0
100189bf:	je     0x100189d6
100189c1:	mov    DWORD PTR [ebx+0x8],esi
100189c4:	push   0x103
100189c9:	push   ebx
100189ca:	mov    ecx,DWORD PTR [edi+0x8]
100189cd:	push   DWORD PTR [ecx+eax*1+0x4]
100189d1:	call   0x10019bd0
100189d6:	and    DWORD PTR [ebp-0x4],0x0
100189da:	jmp    0x100189f6
100189dc:	push   DWORD PTR [ebp-0x14]
100189df:	call   0x10018916
100189e4:	pop    ecx
100189e5:	ret    
100189e6:	mov    esp,DWORD PTR [ebp-0x18]
100189e9:	and    DWORD PTR [ebp-0x4],0x0
100189ed:	mov    edi,DWORD PTR [ebp+0x10]
100189f0:	mov    ebx,DWORD PTR [ebp+0x8]
100189f3:	mov    esi,DWORD PTR [ebp-0x20]
100189f6:	mov    DWORD PTR [ebp-0x1c],esi
100189f9:	jmp    0x10018991
100189fb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10018a02:	call   0x10018a20
10018a07:	cmp    esi,DWORD PTR [ebp+0x14]
10018a0a:	je     0x10018a11
10018a0c:	call   0x10019b88
10018a11:	mov    DWORD PTR [ebx+0x8],esi
10018a14:	call   0x10017a7d
10018a19:	ret    
10018a1a:	mov    ebx,DWORD PTR [ebp+0x8]
10018a1d:	mov    esi,DWORD PTR [ebp-0x1c]
10018a20:	call   0x10019816
10018a25:	cmp    DWORD PTR [eax+0x90],0x0
10018a2c:	jle    0x10018a3a
10018a2e:	call   0x10019816
10018a33:	add    eax,0x90
10018a38:	dec    DWORD PTR [eax]
10018a3a:	ret    
10018a3b:	mov    eax,DWORD PTR [eax]
10018a3d:	cmp    DWORD PTR [eax],0xe06d7363
10018a43:	jne    0x10018a7d
10018a45:	cmp    DWORD PTR [eax+0x10],0x3
10018a49:	jne    0x10018a7d
10018a4b:	mov    ecx,DWORD PTR [eax+0x14]
10018a4e:	cmp    ecx,0x19930520
10018a54:	je     0x10018a66
10018a56:	cmp    ecx,0x19930521
10018a5c:	je     0x10018a66
10018a5e:	cmp    ecx,0x19930522
10018a64:	jne    0x10018a7d
10018a66:	cmp    DWORD PTR [eax+0x1c],0x0
10018a6a:	jne    0x10018a7d
10018a6c:	call   0x10019816
10018a71:	xor    ecx,ecx
10018a73:	inc    ecx
10018a74:	mov    DWORD PTR [eax+0x20c],ecx
10018a7a:	mov    eax,ecx
10018a7c:	ret    
10018a7d:	xor    eax,eax
10018a7f:	ret    
10018a80:	push   0x8
10018a82:	push   0x100585c8
10018a87:	call   0x10017a38
10018a8c:	mov    ecx,DWORD PTR [ebp+0x8]
10018a8f:	test   ecx,ecx
10018a91:	je     0x10018abd
10018a93:	cmp    DWORD PTR [ecx],0xe06d7363
10018a99:	jne    0x10018abd
10018a9b:	mov    eax,DWORD PTR [ecx+0x1c]
10018a9e:	test   eax,eax
10018aa0:	je     0x10018abd
10018aa2:	mov    eax,DWORD PTR [eax+0x4]
10018aa5:	test   eax,eax
10018aa7:	je     0x10018abd
10018aa9:	and    DWORD PTR [ebp-0x4],0x0
10018aad:	push   eax
10018aae:	push   DWORD PTR [ecx+0x18]
10018ab1:	call   0x10015b4c
10018ab6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10018abd:	call   0x10017a7d
10018ac2:	ret    
10018ac3:	xor    eax,eax
10018ac5:	cmp    BYTE PTR [ebp+0xc],al
10018ac8:	setne  al
10018acb:	ret    
10018acc:	mov    esp,DWORD PTR [ebp-0x18]
10018acf:	jmp    0x10019b3c
10018ad4:	mov    ecx,DWORD PTR [esp+0x8]
10018ad8:	mov    eax,DWORD PTR [ecx]
10018ada:	push   esi
10018adb:	mov    esi,DWORD PTR [esp+0x8]
10018adf:	add    eax,esi
10018ae1:	cmp    DWORD PTR [ecx+0x4],0x0
10018ae5:	jl     0x10018af7
10018ae7:	mov    edx,DWORD PTR [ecx+0x4]
10018aea:	mov    ecx,DWORD PTR [ecx+0x8]
10018aed:	mov    esi,DWORD PTR [edx+esi*1]
10018af0:	mov    ecx,DWORD PTR [esi+ecx*1]
10018af3:	add    ecx,edx
10018af5:	add    eax,ecx
10018af7:	pop    esi
10018af8:	ret    
10018af9:	push   ebp
10018afa:	mov    ebp,esp
10018afc:	sub    esp,0xc
10018aff:	test   edi,edi
10018b01:	jne    0x10018b0d
10018b03:	call   0x10019b88
10018b08:	jmp    0x10019b3c
10018b0d:	and    DWORD PTR [ebp-0x8],0x0
10018b11:	cmp    DWORD PTR [edi],0x0
10018b14:	mov    BYTE PTR [ebp-0x1],0x0
10018b18:	jle    0x10018b6d
10018b1a:	push   ebx
10018b1b:	push   esi
10018b1c:	mov    eax,DWORD PTR [ebp+0x8]
10018b1f:	mov    eax,DWORD PTR [eax+0x1c]
10018b22:	mov    eax,DWORD PTR [eax+0xc]
10018b25:	mov    ebx,DWORD PTR [eax]
10018b27:	test   ebx,ebx
10018b29:	lea    esi,[eax+0x4]
10018b2c:	jle    0x10018b61
10018b2e:	mov    eax,DWORD PTR [ebp-0x8]
10018b31:	shl    eax,0x4
10018b34:	mov    DWORD PTR [ebp-0xc],eax
10018b37:	mov    ecx,DWORD PTR [ebp+0x8]
10018b3a:	push   DWORD PTR [ecx+0x1c]
10018b3d:	mov    eax,DWORD PTR [esi]
10018b3f:	push   eax
10018b40:	mov    eax,DWORD PTR [edi+0x4]
10018b43:	add    eax,DWORD PTR [ebp-0xc]
10018b46:	push   eax
10018b47:	call   0x100188ba
10018b4c:	add    esp,0xc
10018b4f:	test   eax,eax
10018b51:	jne    0x10018b5d
10018b53:	dec    ebx
10018b54:	add    esi,0x4
10018b57:	test   ebx,ebx
10018b59:	jg     0x10018b37
10018b5b:	jmp    0x10018b61
10018b5d:	mov    BYTE PTR [ebp-0x1],0x1
10018b61:	inc    DWORD PTR [ebp-0x8]
10018b64:	mov    eax,DWORD PTR [ebp-0x8]
10018b67:	cmp    eax,DWORD PTR [edi]
10018b69:	jl     0x10018b1c
10018b6b:	pop    esi
10018b6c:	pop    ebx
10018b6d:	mov    al,BYTE PTR [ebp-0x1]
10018b70:	leave  
10018b71:	ret    
10018b72:	push   0x4
10018b74:	mov    eax,0x1002a6a4
10018b79:	call   0x10017e84
10018b7e:	call   0x10019816
10018b83:	cmp    DWORD PTR [eax+0x94],0x0
10018b8a:	je     0x10018b91
10018b8c:	call   0x10019b88
10018b91:	and    DWORD PTR [ebp-0x4],0x0
10018b95:	call   0x10019b75
10018b9a:	or     DWORD PTR [ebp-0x4],0xffffffff
10018b9e:	jmp    0x10019b3c
10018ba3:	call   0x10019816
10018ba8:	mov    ecx,DWORD PTR [ebp+0x8]
10018bab:	push   0x0
10018bad:	push   0x0
10018baf:	mov    DWORD PTR [eax+0x94],ecx
10018bb5:	call   0x100161ce
10018bba:	int3   
10018bbb:	push   0x2c
10018bbd:	push   0x10058640
10018bc2:	call   0x10017a38
10018bc7:	mov    ebx,ecx
10018bc9:	mov    edi,DWORD PTR [ebp+0xc]
10018bcc:	mov    esi,DWORD PTR [ebp+0x8]
10018bcf:	mov    DWORD PTR [ebp-0x1c],ebx
10018bd2:	and    DWORD PTR [ebp-0x34],0x0
10018bd6:	mov    eax,DWORD PTR [edi-0x4]
10018bd9:	mov    DWORD PTR [ebp-0x24],eax
10018bdc:	push   DWORD PTR [esi+0x18]
10018bdf:	lea    eax,[ebp-0x3c]
10018be2:	push   eax
10018be3:	call   0x10015df0
10018be8:	pop    ecx
10018be9:	pop    ecx
10018bea:	mov    DWORD PTR [ebp-0x28],eax
10018bed:	call   0x10019816
10018bf2:	mov    eax,DWORD PTR [eax+0x88]
10018bf8:	mov    DWORD PTR [ebp-0x2c],eax
10018bfb:	call   0x10019816
10018c00:	mov    eax,DWORD PTR [eax+0x8c]
10018c06:	mov    DWORD PTR [ebp-0x30],eax
10018c09:	call   0x10019816
10018c0e:	mov    DWORD PTR [eax+0x88],esi
10018c14:	call   0x10019816
10018c19:	mov    ecx,DWORD PTR [ebp+0x10]
10018c1c:	mov    DWORD PTR [eax+0x8c],ecx
10018c22:	and    DWORD PTR [ebp-0x4],0x0
10018c26:	xor    eax,eax
10018c28:	inc    eax
10018c29:	mov    DWORD PTR [ebp+0x10],eax
10018c2c:	mov    DWORD PTR [ebp-0x4],eax
10018c2f:	push   DWORD PTR [ebp+0x1c]
10018c32:	push   DWORD PTR [ebp+0x18]
10018c35:	push   ebx
10018c36:	push   DWORD PTR [ebp+0x14]
10018c39:	push   edi
10018c3a:	call   0x10015e85
10018c3f:	add    esp,0x14
10018c42:	mov    DWORD PTR [ebp-0x1c],eax
10018c45:	and    DWORD PTR [ebp-0x4],0x0
10018c49:	jmp    0x10018cba
10018c4b:	mov    eax,DWORD PTR [ebp-0x14]
10018c4e:	call   0x10018a3b
10018c53:	ret    
10018c54:	mov    esp,DWORD PTR [ebp-0x18]
10018c57:	call   0x10019816
10018c5c:	and    DWORD PTR [eax+0x20c],0x0
10018c63:	mov    esi,DWORD PTR [ebp+0x14]
10018c66:	mov    edi,DWORD PTR [ebp+0xc]
10018c69:	cmp    DWORD PTR [esi+0x4],0x80
10018c70:	jg     0x10018c78
10018c72:	movsx  ecx,BYTE PTR [edi+0x8]
10018c76:	jmp    0x10018c7b
10018c78:	mov    ecx,DWORD PTR [edi+0x8]
10018c7b:	mov    ebx,DWORD PTR [esi+0x10]
10018c7e:	and    DWORD PTR [ebp-0x20],0x0
10018c82:	mov    eax,DWORD PTR [ebp-0x20]
10018c85:	cmp    eax,DWORD PTR [esi+0xc]
10018c88:	jae    0x10018ca2
10018c8a:	imul   eax,eax,0x14
10018c8d:	add    eax,ebx
10018c8f:	mov    edx,DWORD PTR [eax+0x4]
10018c92:	cmp    ecx,edx
10018c94:	jle    0x10018cd6
10018c96:	cmp    ecx,DWORD PTR [eax+0x8]
10018c99:	jg     0x10018cd6
10018c9b:	mov    eax,DWORD PTR [esi+0x8]
10018c9e:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10018ca2:	push   ecx
10018ca3:	push   esi
10018ca4:	push   0x0
10018ca6:	push   edi
10018ca7:	call   0x1001895a
10018cac:	add    esp,0x10
10018caf:	and    DWORD PTR [ebp-0x1c],0x0
10018cb3:	and    DWORD PTR [ebp-0x4],0x0
10018cb7:	mov    esi,DWORD PTR [ebp+0x8]
10018cba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10018cc1:	mov    DWORD PTR [ebp+0x10],0x0
10018cc8:	call   0x10018ce1
10018ccd:	mov    eax,DWORD PTR [ebp-0x1c]
10018cd0:	call   0x10017a7d
10018cd5:	ret    
10018cd6:	inc    DWORD PTR [ebp-0x20]
10018cd9:	jmp    0x10018c82
10018cdb:	mov    edi,DWORD PTR [ebp+0xc]
10018cde:	mov    esi,DWORD PTR [ebp+0x8]
10018ce1:	mov    eax,DWORD PTR [ebp-0x24]
10018ce4:	mov    DWORD PTR [edi-0x4],eax
10018ce7:	push   DWORD PTR [ebp-0x28]
10018cea:	call   0x10015e39
10018cef:	pop    ecx
10018cf0:	call   0x10019816
10018cf5:	mov    ecx,DWORD PTR [ebp-0x2c]
10018cf8:	mov    DWORD PTR [eax+0x88],ecx
10018cfe:	call   0x10019816
10018d03:	mov    ecx,DWORD PTR [ebp-0x30]
10018d06:	mov    DWORD PTR [eax+0x8c],ecx
10018d0c:	cmp    DWORD PTR [esi],0xe06d7363
10018d12:	jne    0x10018d56
10018d14:	cmp    DWORD PTR [esi+0x10],0x3
10018d18:	jne    0x10018d56
10018d1a:	mov    eax,DWORD PTR [esi+0x14]
10018d1d:	cmp    eax,0x19930520
10018d22:	je     0x10018d32
10018d24:	cmp    eax,0x19930521
10018d29:	je     0x10018d32
10018d2b:	cmp    eax,0x19930522
10018d30:	jne    0x10018d56
10018d32:	cmp    DWORD PTR [ebp-0x34],0x0
10018d36:	jne    0x10018d56
10018d38:	cmp    DWORD PTR [ebp-0x1c],0x0
10018d3c:	je     0x10018d56
10018d3e:	push   DWORD PTR [esi+0x18]
10018d41:	call   0x10015e18
10018d46:	pop    ecx
10018d47:	test   eax,eax
10018d49:	je     0x10018d56
10018d4b:	push   DWORD PTR [ebp+0x10]
10018d4e:	push   esi
10018d4f:	call   0x10018a80
10018d54:	pop    ecx
10018d55:	pop    ecx
10018d56:	ret    
10018d57:	push   0xc
10018d59:	push   0x10058668
10018d5e:	call   0x10017a38
10018d63:	xor    edx,edx
10018d65:	mov    DWORD PTR [ebp-0x1c],edx
10018d68:	mov    eax,DWORD PTR [ebp+0x10]
10018d6b:	mov    ecx,DWORD PTR [eax+0x4]
10018d6e:	cmp    ecx,edx
10018d70:	je     0x10018ece
10018d76:	cmp    BYTE PTR [ecx+0x8],dl
10018d79:	je     0x10018ece
10018d7f:	mov    ecx,DWORD PTR [eax+0x8]
10018d82:	cmp    ecx,edx
10018d84:	jne    0x10018d92
10018d86:	test   DWORD PTR [eax],0x80000000
10018d8c:	je     0x10018ece
10018d92:	mov    eax,DWORD PTR [eax]
10018d94:	mov    esi,DWORD PTR [ebp+0xc]
10018d97:	test   eax,eax
10018d99:	js     0x10018d9f
10018d9b:	lea    esi,[ecx+esi*1+0xc]
10018d9f:	mov    DWORD PTR [ebp-0x4],edx
10018da2:	xor    ebx,ebx
10018da4:	inc    ebx
10018da5:	push   ebx
10018da6:	test   al,0x8
10018da8:	je     0x10018deb
10018daa:	mov    edi,DWORD PTR [ebp+0x8]
10018dad:	push   DWORD PTR [edi+0x18]
10018db0:	call   0x10020d11
10018db5:	pop    ecx
10018db6:	pop    ecx
10018db7:	test   eax,eax
10018db9:	je     0x10018eb1
10018dbf:	push   ebx
10018dc0:	push   esi
10018dc1:	call   0x10020d11
10018dc6:	pop    ecx
10018dc7:	pop    ecx
10018dc8:	test   eax,eax
10018dca:	je     0x10018eb1
10018dd0:	mov    eax,DWORD PTR [edi+0x18]
10018dd3:	mov    DWORD PTR [esi],eax
10018dd5:	mov    ecx,DWORD PTR [ebp+0x14]
10018dd8:	add    ecx,0x8
10018ddb:	push   ecx
10018ddc:	push   eax
10018ddd:	call   0x10018ad4
10018de2:	pop    ecx
10018de3:	pop    ecx
10018de4:	mov    DWORD PTR [esi],eax
10018de6:	jmp    0x10018eb6
10018deb:	mov    edi,DWORD PTR [ebp+0x14]
10018dee:	mov    eax,DWORD PTR [ebp+0x8]
10018df1:	push   DWORD PTR [eax+0x18]
10018df4:	test   BYTE PTR [edi],bl
10018df6:	je     0x10018e40
10018df8:	call   0x10020d11
10018dfd:	pop    ecx
10018dfe:	pop    ecx
10018dff:	test   eax,eax
10018e01:	je     0x10018eb1
10018e07:	push   ebx
10018e08:	push   esi
10018e09:	call   0x10020d11
10018e0e:	pop    ecx
10018e0f:	pop    ecx
10018e10:	test   eax,eax
10018e12:	je     0x10018eb1
10018e18:	push   DWORD PTR [edi+0x14]
10018e1b:	mov    eax,DWORD PTR [ebp+0x8]
10018e1e:	push   DWORD PTR [eax+0x18]
10018e21:	push   esi
10018e22:	call   0x1001a1e0
10018e27:	add    esp,0xc
10018e2a:	cmp    DWORD PTR [edi+0x14],0x4
10018e2e:	jne    0x10018eb6
10018e34:	mov    eax,DWORD PTR [esi]
10018e36:	test   eax,eax
10018e38:	je     0x10018eb6
10018e3a:	add    edi,0x8
10018e3d:	push   edi
10018e3e:	jmp    0x10018ddc
10018e40:	cmp    DWORD PTR [edi+0x18],edx
10018e43:	jne    0x10018e7d
10018e45:	call   0x10020d11
10018e4a:	pop    ecx
10018e4b:	pop    ecx
10018e4c:	test   eax,eax
10018e4e:	je     0x10018eb1
10018e50:	push   ebx
10018e51:	push   esi
10018e52:	call   0x10020d11
10018e57:	pop    ecx
10018e58:	pop    ecx
10018e59:	test   eax,eax
10018e5b:	je     0x10018eb1
10018e5d:	push   DWORD PTR [edi+0x14]
10018e60:	add    edi,0x8
10018e63:	push   edi
10018e64:	mov    eax,DWORD PTR [ebp+0x8]
10018e67:	push   DWORD PTR [eax+0x18]
10018e6a:	call   0x10018ad4
10018e6f:	pop    ecx
10018e70:	pop    ecx
10018e71:	push   eax
10018e72:	push   esi
10018e73:	call   0x1001a1e0
10018e78:	add    esp,0xc
10018e7b:	jmp    0x10018eb6
10018e7d:	call   0x10020d11
10018e82:	pop    ecx
10018e83:	pop    ecx
10018e84:	test   eax,eax
10018e86:	je     0x10018eb1
10018e88:	push   ebx
10018e89:	push   esi
10018e8a:	call   0x10020d11
10018e8f:	pop    ecx
10018e90:	pop    ecx
10018e91:	test   eax,eax
10018e93:	je     0x10018eb1
10018e95:	push   DWORD PTR [edi+0x18]
10018e98:	call   0x10020d11
10018e9d:	pop    ecx
10018e9e:	test   eax,eax
10018ea0:	je     0x10018eb1
10018ea2:	test   BYTE PTR [edi],0x4
10018ea5:	push   0x0
10018ea7:	pop    eax
10018ea8:	setne  al
10018eab:	inc    eax
10018eac:	mov    DWORD PTR [ebp-0x1c],eax
10018eaf:	jmp    0x10018eb6
10018eb1:	call   0x10019b88
10018eb6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10018ebd:	mov    eax,DWORD PTR [ebp-0x1c]
10018ec0:	jmp    0x10018ed0
10018ec2:	xor    eax,eax
10018ec4:	inc    eax
10018ec5:	ret    
10018ec6:	mov    esp,DWORD PTR [ebp-0x18]
10018ec9:	jmp    0x10019b3c
10018ece:	xor    eax,eax
10018ed0:	call   0x10017a7d
10018ed5:	ret    
10018ed6:	push   0x8
10018ed8:	push   0x10058688
10018edd:	call   0x10017a38
10018ee2:	mov    eax,DWORD PTR [ebp+0x10]
10018ee5:	test   DWORD PTR [eax],0x80000000
10018eeb:	je     0x10018ef2
10018eed:	mov    ebx,DWORD PTR [ebp+0xc]
10018ef0:	jmp    0x10018efc
10018ef2:	mov    ecx,DWORD PTR [eax+0x8]
10018ef5:	mov    edx,DWORD PTR [ebp+0xc]
10018ef8:	lea    ebx,[ecx+edx*1+0xc]
10018efc:	and    DWORD PTR [ebp-0x4],0x0
10018f00:	mov    esi,DWORD PTR [ebp+0x14]
10018f03:	push   esi
10018f04:	push   eax
10018f05:	push   DWORD PTR [ebp+0xc]
10018f08:	mov    edi,DWORD PTR [ebp+0x8]
10018f0b:	push   edi
10018f0c:	call   0x10018d57
10018f11:	add    esp,0x10
10018f14:	dec    eax
10018f15:	je     0x10018f36
10018f17:	dec    eax
10018f18:	jne    0x10018f4e
10018f1a:	push   0x1
10018f1c:	lea    eax,[esi+0x8]
10018f1f:	push   eax
10018f20:	push   DWORD PTR [edi+0x18]
10018f23:	call   0x10018ad4
10018f28:	pop    ecx
10018f29:	pop    ecx
10018f2a:	push   eax
10018f2b:	push   DWORD PTR [esi+0x18]
10018f2e:	push   ebx
10018f2f:	call   0x10015b4c
10018f34:	jmp    0x10018f4e
10018f36:	lea    eax,[esi+0x8]
10018f39:	push   eax
10018f3a:	push   DWORD PTR [edi+0x18]
10018f3d:	call   0x10018ad4
10018f42:	pop    ecx
10018f43:	pop    ecx
10018f44:	push   eax
10018f45:	push   DWORD PTR [esi+0x18]
10018f48:	push   ebx
10018f49:	call   0x10015b4c
10018f4e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10018f55:	call   0x10017a7d
10018f5a:	ret    
10018f5b:	xor    eax,eax
10018f5d:	inc    eax
10018f5e:	ret    
10018f5f:	mov    esp,DWORD PTR [ebp-0x18]
10018f62:	jmp    0x10019b3c
10018f67:	push   ebp
10018f68:	mov    ebp,esp
10018f6a:	cmp    DWORD PTR [ebp+0x18],0x0
10018f6e:	je     0x10018f80
10018f70:	push   DWORD PTR [ebp+0x18]
10018f73:	push   ebx
10018f74:	push   esi
10018f75:	push   DWORD PTR [ebp+0x8]
10018f78:	call   0x10018ed6
10018f7d:	add    esp,0x10
10018f80:	cmp    DWORD PTR [ebp+0x20],0x0
10018f84:	push   DWORD PTR [ebp+0x8]
10018f87:	jne    0x10018f8c
10018f89:	push   esi
10018f8a:	jmp    0x10018f8f
10018f8c:	push   DWORD PTR [ebp+0x20]
10018f8f:	call   0x10015b53
10018f94:	push   DWORD PTR [edi]
10018f96:	push   DWORD PTR [ebp+0x14]
10018f99:	push   DWORD PTR [ebp+0x10]
10018f9c:	push   esi
10018f9d:	call   0x1001895a
10018fa2:	mov    eax,DWORD PTR [edi+0x4]
10018fa5:	push   0x100
10018faa:	push   DWORD PTR [ebp+0x1c]
10018fad:	inc    eax
10018fae:	push   DWORD PTR [ebp+0x14]
10018fb1:	mov    DWORD PTR [esi+0x8],eax
10018fb4:	push   DWORD PTR [ebp+0xc]
10018fb7:	mov    ecx,DWORD PTR [ebx+0xc]
10018fba:	push   esi
10018fbb:	push   DWORD PTR [ebp+0x8]
10018fbe:	call   0x10018bbb
10018fc3:	add    esp,0x28
10018fc6:	test   eax,eax
10018fc8:	je     0x10018fd1
10018fca:	push   esi
10018fcb:	push   eax
10018fcc:	call   0x10015b1c
10018fd1:	pop    ebp
10018fd2:	ret    
10018fd3:	push   ebp
10018fd4:	mov    ebp,esp
10018fd6:	push   ecx
10018fd7:	push   ecx
10018fd8:	push   esi
10018fd9:	mov    esi,DWORD PTR [ebp+0x8]
10018fdc:	cmp    DWORD PTR [esi],0x80000003
10018fe2:	je     0x100190c2
10018fe8:	push   edi
10018fe9:	call   0x10019816
10018fee:	cmp    DWORD PTR [eax+0x80],0x0
10018ff5:	je     0x10019036
10018ff7:	call   0x10019816
10018ffc:	lea    edi,[eax+0x80]
10019002:	call   0x100195f1
10019007:	cmp    DWORD PTR [edi],eax
10019009:	je     0x10019036
1001900b:	cmp    DWORD PTR [esi],0xe0434f4d
10019011:	je     0x10019036
10019013:	push   DWORD PTR [ebp+0x24]
10019016:	push   DWORD PTR [ebp+0x20]
10019019:	push   DWORD PTR [ebp+0x18]
1001901c:	push   DWORD PTR [ebp+0x14]
1001901f:	push   DWORD PTR [ebp+0x10]
10019022:	push   DWORD PTR [ebp+0xc]
10019025:	push   esi
10019026:	call   0x10015c0b
1001902b:	add    esp,0x1c
1001902e:	test   eax,eax
10019030:	jne    0x100190c1
10019036:	mov    edi,DWORD PTR [ebp+0x18]
10019039:	cmp    DWORD PTR [edi+0xc],0x0
1001903d:	jne    0x10019044
1001903f:	call   0x10019b88
10019044:	mov    esi,DWORD PTR [ebp+0x1c]
10019047:	lea    eax,[ebp-0x8]
1001904a:	push   eax
1001904b:	lea    eax,[ebp-0x4]
1001904e:	push   eax
1001904f:	push   esi
10019050:	push   DWORD PTR [ebp+0x20]
10019053:	push   edi
10019054:	call   0x10015d7d
10019059:	mov    edi,eax
1001905b:	mov    eax,DWORD PTR [ebp-0x4]
1001905e:	add    esp,0x14
10019061:	cmp    eax,DWORD PTR [ebp-0x8]
10019064:	jae    0x100190c1
10019066:	push   ebx
10019067:	cmp    esi,DWORD PTR [edi]
10019069:	jl     0x100190b2
1001906b:	cmp    esi,DWORD PTR [edi+0x4]
1001906e:	jg     0x100190b2
10019070:	mov    eax,DWORD PTR [edi+0xc]
10019073:	mov    ecx,DWORD PTR [edi+0x10]
10019076:	shl    eax,0x4
10019079:	add    eax,ecx
1001907b:	mov    ecx,DWORD PTR [eax-0xc]
1001907e:	test   ecx,ecx
10019080:	je     0x10019088
10019082:	cmp    BYTE PTR [ecx+0x8],0x0
10019086:	jne    0x100190b2
10019088:	lea    ebx,[eax-0x10]
1001908b:	test   BYTE PTR [ebx],0x40
1001908e:	jne    0x100190b2
10019090:	push   DWORD PTR [ebp+0x24]
10019093:	mov    esi,DWORD PTR [ebp+0xc]
10019096:	push   DWORD PTR [ebp+0x20]
10019099:	push   0x0
1001909b:	push   DWORD PTR [ebp+0x18]
1001909e:	push   DWORD PTR [ebp+0x14]
100190a1:	push   DWORD PTR [ebp+0x10]
100190a4:	push   DWORD PTR [ebp+0x8]
100190a7:	call   0x10018f67
100190ac:	mov    esi,DWORD PTR [ebp+0x1c]
100190af:	add    esp,0x1c
100190b2:	inc    DWORD PTR [ebp-0x4]
100190b5:	mov    eax,DWORD PTR [ebp-0x4]
100190b8:	add    edi,0x14
100190bb:	cmp    eax,DWORD PTR [ebp-0x8]
100190be:	jb     0x10019067
100190c0:	pop    ebx
100190c1:	pop    edi
100190c2:	pop    esi
100190c3:	leave  
100190c4:	ret    
100190c5:	push   ebp
100190c6:	mov    ebp,esp
100190c8:	sub    esp,0x2c
100190cb:	mov    ecx,DWORD PTR [ebp+0xc]
100190ce:	push   ebx
100190cf:	mov    ebx,DWORD PTR [ebp+0x18]
100190d2:	mov    eax,DWORD PTR [ebx+0x4]
100190d5:	cmp    eax,0x80
100190da:	push   esi
100190db:	push   edi
100190dc:	mov    BYTE PTR [ebp-0x1],0x0
100190e0:	jg     0x100190e8
100190e2:	movsx  ecx,BYTE PTR [ecx+0x8]
100190e6:	jmp    0x100190eb
100190e8:	mov    ecx,DWORD PTR [ecx+0x8]
100190eb:	cmp    ecx,0xffffffff
100190ee:	mov    DWORD PTR [ebp-0x8],ecx
100190f1:	jl     0x100190f7
100190f3:	cmp    ecx,eax
100190f5:	jl     0x100190fc
100190f7:	call   0x10019b88
100190fc:	mov    esi,DWORD PTR [ebp+0x8]
100190ff:	mov    edi,0xe06d7363
10019104:	cmp    DWORD PTR [esi],edi
10019106:	jne    0x100193d7
1001910c:	cmp    DWORD PTR [esi+0x10],0x3
10019110:	mov    ebx,0x19930520
10019115:	jne    0x10019244
1001911b:	mov    eax,DWORD PTR [esi+0x14]
1001911e:	cmp    eax,ebx
10019120:	je     0x10019134
10019122:	cmp    eax,0x19930521
10019127:	je     0x10019134
10019129:	cmp    eax,0x19930522
1001912e:	jne    0x10019244
10019134:	cmp    DWORD PTR [esi+0x1c],0x0
10019138:	jne    0x10019244
1001913e:	call   0x10019816
10019143:	cmp    DWORD PTR [eax+0x88],0x0
1001914a:	je     0x10019416
10019150:	call   0x10019816
10019155:	mov    esi,DWORD PTR [eax+0x88]
1001915b:	mov    DWORD PTR [ebp+0x8],esi
1001915e:	call   0x10019816
10019163:	mov    eax,DWORD PTR [eax+0x8c]
10019169:	push   0x1
1001916b:	push   esi
1001916c:	mov    DWORD PTR [ebp+0x10],eax
1001916f:	call   0x10020d11
10019174:	test   eax,eax
10019176:	pop    ecx
10019177:	pop    ecx
10019178:	jne    0x1001917f
1001917a:	call   0x10019b88
1001917f:	cmp    DWORD PTR [esi],edi
10019181:	jne    0x100191a9
10019183:	cmp    DWORD PTR [esi+0x10],0x3
10019187:	jne    0x100191a9
10019189:	mov    eax,DWORD PTR [esi+0x14]
1001918c:	cmp    eax,ebx
1001918e:	je     0x1001919e
10019190:	cmp    eax,0x19930521
10019195:	je     0x1001919e
10019197:	cmp    eax,0x19930522
1001919c:	jne    0x100191a9
1001919e:	cmp    DWORD PTR [esi+0x1c],0x0
100191a2:	jne    0x100191a9
100191a4:	call   0x10019b88
100191a9:	call   0x10019816
100191ae:	cmp    DWORD PTR [eax+0x94],0x0
100191b5:	je     0x10019244
100191bb:	call   0x10019816
100191c0:	mov    edi,DWORD PTR [eax+0x94]
100191c6:	call   0x10019816
100191cb:	push   DWORD PTR [ebp+0x8]
100191ce:	xor    esi,esi
100191d0:	mov    DWORD PTR [eax+0x94],esi
100191d6:	call   0x10018af9
100191db:	test   al,al
100191dd:	pop    ecx
100191de:	jne    0x1001923c
100191e0:	xor    ebx,ebx
100191e2:	cmp    DWORD PTR [edi],ebx
100191e4:	jle    0x10019203
100191e6:	mov    eax,DWORD PTR [edi+0x4]
100191e9:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
100191ed:	push   0x100647e4
100191f2:	call   0x10016242
100191f7:	test   al,al
100191f9:	jne    0x10019208
100191fb:	inc    esi
100191fc:	add    ebx,0x10
100191ff:	cmp    esi,DWORD PTR [edi]
10019201:	jl     0x100191e6
10019203:	jmp    0x10019b3c
10019208:	push   0x1
1001920a:	push   DWORD PTR [ebp+0x8]
1001920d:	call   0x10018a80
10019212:	pop    ecx
10019213:	pop    ecx
10019214:	lea    eax,[ebp+0x8]
10019217:	push   eax
10019218:	lea    ecx,[ebp-0x2c]
1001921b:	mov    DWORD PTR [ebp+0x8],0x10050d60
10019222:	call   0x1001626e
10019227:	push   0x100586a4
1001922c:	lea    eax,[ebp-0x2c]
1001922f:	push   eax
10019230:	mov    DWORD PTR [ebp-0x2c],0x10050d58
10019237:	call   0x100161ce
1001923c:	mov    esi,DWORD PTR [ebp+0x8]
1001923f:	mov    edi,0xe06d7363
10019244:	cmp    DWORD PTR [esi],edi
10019246:	jne    0x100193d4
1001924c:	cmp    DWORD PTR [esi+0x10],0x3
10019250:	jne    0x100193d4
10019256:	mov    eax,DWORD PTR [esi+0x14]
10019259:	cmp    eax,ebx
1001925b:	je     0x1001926f
1001925d:	cmp    eax,0x19930521
10019262:	je     0x1001926f
10019264:	cmp    eax,0x19930522
10019269:	jne    0x100193d4
1001926f:	mov    edi,DWORD PTR [ebp+0x18]
10019272:	cmp    DWORD PTR [edi+0xc],0x0
10019276:	jbe    0x1001933b
1001927c:	lea    eax,[ebp-0x1c]
1001927f:	push   eax
10019280:	lea    eax,[ebp-0x10]
10019283:	push   eax
10019284:	push   DWORD PTR [ebp-0x8]
10019287:	push   DWORD PTR [ebp+0x20]
1001928a:	push   edi
1001928b:	call   0x10015d7d
10019290:	add    esp,0x14
10019293:	mov    edi,eax
10019295:	mov    eax,DWORD PTR [ebp-0x10]
10019298:	cmp    eax,DWORD PTR [ebp-0x1c]
1001929b:	jae    0x10019338
100192a1:	mov    eax,DWORD PTR [ebp-0x8]
100192a4:	cmp    DWORD PTR [edi],eax
100192a6:	jg     0x1001932d
100192ac:	cmp    eax,DWORD PTR [edi+0x4]
100192af:	jg     0x1001932d
100192b1:	mov    eax,DWORD PTR [edi+0x10]
100192b4:	mov    DWORD PTR [ebp-0xc],eax
100192b7:	mov    eax,DWORD PTR [edi+0xc]
100192ba:	test   eax,eax
100192bc:	mov    DWORD PTR [ebp-0x18],eax
100192bf:	jle    0x1001932d
100192c1:	mov    eax,DWORD PTR [esi+0x1c]
100192c4:	mov    eax,DWORD PTR [eax+0xc]
100192c7:	lea    ebx,[eax+0x4]
100192ca:	mov    eax,DWORD PTR [eax]
100192cc:	test   eax,eax
100192ce:	mov    DWORD PTR [ebp-0x14],eax
100192d1:	jle    0x100192f6
100192d3:	push   DWORD PTR [esi+0x1c]
100192d6:	mov    eax,DWORD PTR [ebx]
100192d8:	push   eax
100192d9:	push   DWORD PTR [ebp-0xc]
100192dc:	mov    DWORD PTR [ebp-0x20],eax
100192df:	call   0x100188ba
100192e4:	add    esp,0xc
100192e7:	test   eax,eax
100192e9:	jne    0x10019305
100192eb:	dec    DWORD PTR [ebp-0x14]
100192ee:	add    ebx,0x4
100192f1:	cmp    DWORD PTR [ebp-0x14],eax
100192f4:	jg     0x100192d3
100192f6:	dec    DWORD PTR [ebp-0x18]
100192f9:	add    DWORD PTR [ebp-0xc],0x10
100192fd:	cmp    DWORD PTR [ebp-0x18],0x0
10019301:	jg     0x100192c1
10019303:	jmp    0x1001932d
10019305:	push   DWORD PTR [ebp+0x24]
10019308:	mov    ebx,DWORD PTR [ebp-0xc]
1001930b:	push   DWORD PTR [ebp+0x20]
1001930e:	mov    BYTE PTR [ebp-0x1],0x1
10019312:	push   DWORD PTR [ebp-0x20]
10019315:	push   DWORD PTR [ebp+0x18]
10019318:	push   DWORD PTR [ebp+0x14]
1001931b:	push   DWORD PTR [ebp+0x10]
1001931e:	push   esi
1001931f:	mov    esi,DWORD PTR [ebp+0xc]
10019322:	call   0x10018f67
10019327:	mov    esi,DWORD PTR [ebp+0x8]
1001932a:	add    esp,0x1c
1001932d:	inc    DWORD PTR [ebp-0x10]
10019330:	add    edi,0x14
10019333:	jmp    0x10019295
10019338:	mov    edi,DWORD PTR [ebp+0x18]
1001933b:	cmp    BYTE PTR [ebp+0x1c],0x0
1001933f:	je     0x1001934b
10019341:	push   0x1
10019343:	push   esi
10019344:	call   0x10018a80
10019349:	pop    ecx
1001934a:	pop    ecx
1001934b:	cmp    BYTE PTR [ebp-0x1],0x0
1001934f:	jne    0x10019403
10019355:	mov    eax,DWORD PTR [edi]
10019357:	and    eax,0x1fffffff
1001935c:	cmp    eax,0x19930521
10019361:	jb     0x10019403
10019367:	mov    edi,DWORD PTR [edi+0x1c]
1001936a:	test   edi,edi
1001936c:	je     0x10019403
10019372:	push   esi
10019373:	call   0x10018af9
10019378:	test   al,al
1001937a:	pop    ecx
1001937b:	jne    0x10019403
10019381:	call   0x10019816
10019386:	call   0x10019816
1001938b:	call   0x10019816
10019390:	mov    DWORD PTR [eax+0x88],esi
10019396:	call   0x10019816
1001939b:	cmp    DWORD PTR [ebp+0x24],0x0
1001939f:	mov    ecx,DWORD PTR [ebp+0x10]
100193a2:	mov    DWORD PTR [eax+0x8c],ecx
100193a8:	push   esi
100193a9:	jne    0x100193b0
100193ab:	push   DWORD PTR [ebp+0xc]
100193ae:	jmp    0x100193b3
100193b0:	push   DWORD PTR [ebp+0x24]
100193b3:	call   0x10015b53
100193b8:	mov    esi,DWORD PTR [ebp+0x18]
100193bb:	push   0xffffffff
100193bd:	push   esi
100193be:	push   DWORD PTR [ebp+0x14]
100193c1:	push   DWORD PTR [ebp+0xc]
100193c4:	call   0x1001895a
100193c9:	add    esp,0x10
100193cc:	push   DWORD PTR [esi+0x1c]
100193cf:	call   0x10018b72
100193d4:	mov    ebx,DWORD PTR [ebp+0x18]
100193d7:	cmp    DWORD PTR [ebx+0xc],0x0
100193db:	jbe    0x10019403
100193dd:	cmp    BYTE PTR [ebp+0x1c],0x0
100193e1:	jne    0x10019203
100193e7:	push   DWORD PTR [ebp+0x24]
100193ea:	push   DWORD PTR [ebp+0x20]
100193ed:	push   DWORD PTR [ebp-0x8]
100193f0:	push   ebx
100193f1:	push   DWORD PTR [ebp+0x14]
100193f4:	push   DWORD PTR [ebp+0x10]
100193f7:	push   DWORD PTR [ebp+0xc]
100193fa:	push   esi
100193fb:	call   0x10018fd3
10019400:	add    esp,0x20
10019403:	call   0x10019816
10019408:	cmp    DWORD PTR [eax+0x94],0x0
1001940f:	je     0x10019416
10019411:	call   0x10019b88
10019416:	pop    edi
10019417:	pop    esi
10019418:	pop    ebx
10019419:	leave  
1001941a:	ret    
1001941b:	push   esi
1001941c:	push   DWORD PTR [esp+0x8]
10019420:	mov    esi,ecx
10019422:	call   0x100162d4
10019427:	mov    DWORD PTR [esi],0x10050d58
1001942d:	mov    eax,esi
1001942f:	pop    esi
10019430:	ret    0x4
10019433:	push   ebp
10019434:	mov    ebp,esp
10019436:	push   ebx
10019437:	push   esi
10019438:	push   edi
10019439:	call   0x10019816
1001943e:	cmp    DWORD PTR [eax+0x20c],0x0
10019445:	mov    eax,DWORD PTR [ebp+0x18]
10019448:	mov    ecx,DWORD PTR [ebp+0x8]
1001944b:	mov    edi,0xe06d7363
10019450:	mov    esi,0x1fffffff
10019455:	mov    ebx,0x19930522
1001945a:	jne    0x1001947c
1001945c:	mov    edx,DWORD PTR [ecx]
1001945e:	cmp    edx,edi
10019460:	je     0x1001947c
10019462:	cmp    edx,0x80000026
10019468:	je     0x1001947c
1001946a:	mov    edx,DWORD PTR [eax]
1001946c:	and    edx,esi
1001946e:	cmp    edx,ebx
10019470:	jb     0x1001947c
10019472:	test   BYTE PTR [eax+0x20],0x1
10019476:	jne    0x1001950f
1001947c:	test   BYTE PTR [ecx+0x4],0x66
10019480:	je     0x100194a5
10019482:	cmp    DWORD PTR [eax+0x4],0x0
10019486:	je     0x1001950f
1001948c:	cmp    DWORD PTR [ebp+0x1c],0x0
10019490:	jne    0x1001950f
10019492:	push   0xffffffff
10019494:	push   eax
10019495:	push   DWORD PTR [ebp+0x14]
10019498:	push   DWORD PTR [ebp+0xc]
1001949b:	call   0x1001895a
100194a0:	add    esp,0x10
100194a3:	jmp    0x1001950f
100194a5:	cmp    DWORD PTR [eax+0xc],0x0
100194a9:	jne    0x100194bd
100194ab:	mov    edx,DWORD PTR [eax]
100194ad:	and    edx,esi
100194af:	cmp    edx,0x19930521
100194b5:	jb     0x1001950f
100194b7:	cmp    DWORD PTR [eax+0x1c],0x0
100194bb:	je     0x1001950f
100194bd:	cmp    DWORD PTR [ecx],edi
100194bf:	jne    0x100194f3
100194c1:	cmp    DWORD PTR [ecx+0x10],0x3
100194c5:	jb     0x100194f3
100194c7:	cmp    DWORD PTR [ecx+0x14],ebx
100194ca:	jbe    0x100194f3
100194cc:	mov    edx,DWORD PTR [ecx+0x1c]
100194cf:	mov    edx,DWORD PTR [edx+0x8]
100194d2:	test   edx,edx
100194d4:	je     0x100194f3
100194d6:	movzx  esi,BYTE PTR [ebp+0x24]
100194da:	push   esi
100194db:	push   DWORD PTR [ebp+0x20]
100194de:	push   DWORD PTR [ebp+0x1c]
100194e1:	push   eax
100194e2:	push   DWORD PTR [ebp+0x14]
100194e5:	push   DWORD PTR [ebp+0x10]
100194e8:	push   DWORD PTR [ebp+0xc]
100194eb:	push   ecx
100194ec:	call   edx
100194ee:	add    esp,0x20
100194f1:	jmp    0x10019512
100194f3:	push   DWORD PTR [ebp+0x20]
100194f6:	push   DWORD PTR [ebp+0x1c]
100194f9:	push   DWORD PTR [ebp+0x24]
100194fc:	push   eax
100194fd:	push   DWORD PTR [ebp+0x14]
10019500:	push   DWORD PTR [ebp+0x10]
10019503:	push   DWORD PTR [ebp+0xc]
10019506:	push   ecx
10019507:	call   0x100190c5
1001950c:	add    esp,0x20
1001950f:	xor    eax,eax
10019511:	inc    eax
10019512:	pop    edi
10019513:	pop    esi
10019514:	pop    ebx
10019515:	pop    ebp
10019516:	ret    
10019517:	push   ebp
10019518:	mov    ebp,esp
1001951a:	push   ecx
1001951b:	push   ecx
1001951c:	push   ebx
1001951d:	push   esi
1001951e:	xor    esi,esi
10019520:	lea    eax,[ebp-0x4]
10019523:	inc    esi
10019524:	xor    ebx,ebx
10019526:	push   eax
10019527:	mov    DWORD PTR [ebp-0x8],esi
1001952a:	mov    DWORD PTR [ebp-0x4],ebx
1001952d:	call   0x10019d9f
10019532:	cmp    DWORD PTR [ebp-0x4],0x5
10019536:	pop    ecx
10019537:	jle    0x1001953d
10019539:	mov    eax,esi
1001953b:	jmp    0x1001957f
1001953d:	push   edi
1001953e:	push   ebx
1001953f:	call   DWORD PTR ds:0x1002c100
10019545:	mov    esi,DWORD PTR [eax+0x3c]
10019548:	add    esi,eax
1001954a:	cmp    WORD PTR [esi+0x6],bx
1001954e:	movzx  eax,WORD PTR [esi+0x14]
10019552:	lea    edi,[eax+esi*1+0x18]
10019556:	jbe    0x1001957b
10019558:	push   edi
10019559:	push   0x10050d70
1001955e:	call   0x1001a0c0
10019563:	test   eax,eax
10019565:	pop    ecx
10019566:	pop    ecx
10019567:	je     0x10019577
10019569:	movzx  eax,WORD PTR [esi+0x6]
1001956d:	inc    ebx
1001956e:	add    edi,0x28
10019571:	cmp    ebx,eax
10019573:	jb     0x10019558
10019575:	jmp    0x1001957b
10019577:	and    DWORD PTR [ebp-0x8],0x0
1001957b:	mov    eax,DWORD PTR [ebp-0x8]
1001957e:	pop    edi
1001957f:	pop    esi
10019580:	pop    ebx
10019581:	leave  
10019582:	ret    
10019583:	push   esi
10019584:	push   DWORD PTR ds:0x10064808
1001958a:	mov    esi,DWORD PTR ds:0x1002c218
10019590:	call   esi
10019592:	test   eax,eax
10019594:	je     0x100195b7
10019596:	mov    eax,ds:0x10064804
1001959b:	cmp    eax,0xffffffff
1001959e:	je     0x100195b7
100195a0:	push   eax
100195a1:	push   DWORD PTR ds:0x10064808
100195a7:	call   esi
100195a9:	call   eax
100195ab:	test   eax,eax
100195ad:	je     0x100195b7
100195af:	mov    eax,DWORD PTR [eax+0x1f8]
100195b5:	jmp    0x100195dd
100195b7:	push   0x10050d88
100195bc:	call   DWORD PTR ds:0x1002c100
100195c2:	mov    esi,eax
100195c4:	test   esi,esi
100195c6:	je     0x100195eb
100195c8:	call   0x10019517
100195cd:	test   eax,eax
100195cf:	je     0x100195eb
100195d1:	push   0x10050d78
100195d6:	push   esi
100195d7:	call   DWORD PTR ds:0x1002c044
100195dd:	test   eax,eax
100195df:	je     0x100195eb
100195e1:	push   DWORD PTR [esp+0x8]
100195e5:	call   eax
100195e7:	mov    DWORD PTR [esp+0x8],eax
100195eb:	mov    eax,DWORD PTR [esp+0x8]
100195ef:	pop    esi
100195f0:	ret    
100195f1:	push   0x0
100195f3:	call   0x10019583
100195f8:	pop    ecx
100195f9:	ret    
100195fa:	push   esi
100195fb:	push   DWORD PTR ds:0x10064808
10019601:	mov    esi,DWORD PTR ds:0x1002c218
10019607:	call   esi
10019609:	test   eax,eax
1001960b:	je     0x1001962e
1001960d:	mov    eax,ds:0x10064804
10019612:	cmp    eax,0xffffffff
10019615:	je     0x1001962e
10019617:	push   eax
10019618:	push   DWORD PTR ds:0x10064808
1001961e:	call   esi
10019620:	call   eax
10019622:	test   eax,eax
10019624:	je     0x1001962e
10019626:	mov    eax,DWORD PTR [eax+0x1fc]
1001962c:	jmp    0x10019654
1001962e:	push   0x10050d88
10019633:	call   DWORD PTR ds:0x1002c100
10019639:	mov    esi,eax
1001963b:	test   esi,esi
1001963d:	je     0x10019662
1001963f:	call   0x10019517
10019644:	test   eax,eax
10019646:	je     0x10019662
10019648:	push   0x10050d98
1001964d:	push   esi
1001964e:	call   DWORD PTR ds:0x1002c044
10019654:	test   eax,eax
10019656:	je     0x10019662
10019658:	push   DWORD PTR [esp+0x8]
1001965c:	call   eax
1001965e:	mov    DWORD PTR [esp+0x8],eax
10019662:	mov    eax,DWORD PTR [esp+0x8]
10019666:	pop    esi
10019667:	ret    
10019668:	call   DWORD PTR ds:0x1002c21c
1001966e:	ret    0x4
10019671:	push   esi
10019672:	push   DWORD PTR ds:0x10064808
10019678:	call   DWORD PTR ds:0x1002c218
1001967e:	mov    esi,eax
10019680:	test   esi,esi
10019682:	jne    0x1001969f
10019684:	push   DWORD PTR ds:0x10066620
1001968a:	call   0x100195fa
1001968f:	pop    ecx
10019690:	mov    esi,eax
10019692:	push   esi
10019693:	push   DWORD PTR ds:0x10064808
10019699:	call   DWORD PTR ds:0x1002c220
1001969f:	mov    eax,esi
100196a1:	pop    esi
100196a2:	ret    
100196a3:	mov    eax,ds:0x10064804
100196a8:	cmp    eax,0xffffffff
100196ab:	je     0x100196c3
100196ad:	push   eax
100196ae:	push   DWORD PTR ds:0x10066628
100196b4:	call   0x100195fa
100196b9:	pop    ecx
100196ba:	call   eax
100196bc:	or     DWORD PTR ds:0x10064804,0xffffffff
100196c3:	mov    eax,ds:0x10064808
100196c8:	cmp    eax,0xffffffff
100196cb:	je     0x100196db
100196cd:	push   eax
100196ce:	call   DWORD PTR ds:0x1002c224
100196d4:	or     DWORD PTR ds:0x10064808,0xffffffff
100196db:	jmp    0x1001b57e
100196e0:	push   0xc
100196e2:	push   0x100586e0
100196e7:	call   0x10017a38
100196ec:	push   0x10050d88
100196f1:	call   DWORD PTR ds:0x1002c100
100196f7:	mov    DWORD PTR [ebp-0x1c],eax
100196fa:	mov    esi,DWORD PTR [ebp+0x8]
100196fd:	mov    DWORD PTR [esi+0x5c],0x100651c8
10019704:	xor    edi,edi
10019706:	inc    edi
10019707:	mov    DWORD PTR [esi+0x14],edi
1001970a:	test   eax,eax
1001970c:	je     0x1001973d
1001970e:	call   0x10019517
10019713:	test   eax,eax
10019715:	je     0x1001973d
10019717:	push   0x10050d78
1001971c:	push   DWORD PTR [ebp-0x1c]
1001971f:	mov    ebx,DWORD PTR ds:0x1002c044
10019725:	call   ebx
10019727:	mov    DWORD PTR [esi+0x1f8],eax
1001972d:	push   0x10050d98
10019732:	push   DWORD PTR [ebp-0x1c]
10019735:	call   ebx
10019737:	mov    DWORD PTR [esi+0x1fc],eax
1001973d:	mov    DWORD PTR [esi+0x70],edi
10019740:	mov    BYTE PTR [esi+0xc8],0x43
10019747:	mov    BYTE PTR [esi+0x14b],0x43
1001974e:	mov    eax,0x10064990
10019753:	mov    DWORD PTR [esi+0x68],eax
10019756:	push   eax
10019757:	call   DWORD PTR ds:0x1002c0e0
1001975d:	push   0xc
1001975f:	call   0x1001b6ab
10019764:	pop    ecx
10019765:	and    DWORD PTR [ebp-0x4],0x0
10019769:	mov    eax,DWORD PTR [ebp+0xc]
1001976c:	mov    DWORD PTR [esi+0x6c],eax
1001976f:	test   eax,eax
10019771:	jne    0x1001977b
10019773:	mov    eax,ds:0x10064f98
10019778:	mov    DWORD PTR [esi+0x6c],eax
1001977b:	push   DWORD PTR [esi+0x6c]
1001977e:	call   0x10017ffa
10019783:	pop    ecx
10019784:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001978b:	call   0x10019796
10019790:	call   0x10017a7d
10019795:	ret    
10019796:	push   0xc
10019798:	call   0x1001b5d3
1001979d:	pop    ecx
1001979e:	ret    
1001979f:	push   esi
100197a0:	push   edi
100197a1:	call   DWORD PTR ds:0x1002c07c
100197a7:	push   DWORD PTR ds:0x10064804
100197ad:	mov    edi,eax
100197af:	call   0x10019671
100197b4:	call   eax
100197b6:	mov    esi,eax
100197b8:	test   esi,esi
100197ba:	jne    0x1001980a
100197bc:	push   0x214
100197c1:	push   0x1
100197c3:	call   0x100185e5
100197c8:	mov    esi,eax
100197ca:	test   esi,esi
100197cc:	pop    ecx
100197cd:	pop    ecx
100197ce:	je     0x1001980a
100197d0:	push   esi
100197d1:	push   DWORD PTR ds:0x10064804
100197d7:	push   DWORD PTR ds:0x10066624
100197dd:	call   0x100195fa
100197e2:	pop    ecx
100197e3:	call   eax
100197e5:	test   eax,eax
100197e7:	je     0x10019801
100197e9:	push   0x0
100197eb:	push   esi
100197ec:	call   0x100196e0
100197f1:	pop    ecx
100197f2:	pop    ecx
100197f3:	call   DWORD PTR ds:0x1002c138
100197f9:	or     DWORD PTR [esi+0x4],0xffffffff
100197fd:	mov    DWORD PTR [esi],eax
100197ff:	jmp    0x1001980a
10019801:	push   esi
10019802:	call   0x10016b35
10019807:	pop    ecx
10019808:	xor    esi,esi
1001980a:	push   edi
1001980b:	call   DWORD PTR ds:0x1002c078
10019811:	pop    edi
10019812:	mov    eax,esi
10019814:	pop    esi
10019815:	ret    
10019816:	push   esi
10019817:	call   0x1001979f
1001981c:	mov    esi,eax
1001981e:	test   esi,esi
10019820:	jne    0x1001982a
10019822:	push   0x10
10019824:	call   0x10019cbf
10019829:	pop    ecx
1001982a:	mov    eax,esi
1001982c:	pop    esi
1001982d:	ret    
1001982e:	push   0x8
10019830:	push   0x10058700
10019835:	call   0x10017a38
1001983a:	mov    esi,DWORD PTR [ebp+0x8]
1001983d:	test   esi,esi
1001983f:	je     0x1001992f
10019845:	mov    eax,DWORD PTR [esi+0x24]
10019848:	test   eax,eax
1001984a:	je     0x10019853
1001984c:	push   eax
1001984d:	call   0x10016b35
10019852:	pop    ecx
10019853:	mov    eax,DWORD PTR [esi+0x2c]
10019856:	test   eax,eax
10019858:	je     0x10019861
1001985a:	push   eax
1001985b:	call   0x10016b35
10019860:	pop    ecx
10019861:	mov    eax,DWORD PTR [esi+0x34]
10019864:	test   eax,eax
10019866:	je     0x1001986f
10019868:	push   eax
10019869:	call   0x10016b35
1001986e:	pop    ecx
1001986f:	mov    eax,DWORD PTR [esi+0x3c]
10019872:	test   eax,eax
10019874:	je     0x1001987d
10019876:	push   eax
10019877:	call   0x10016b35
1001987c:	pop    ecx
1001987d:	mov    eax,DWORD PTR [esi+0x44]
10019880:	test   eax,eax
10019882:	je     0x1001988b
10019884:	push   eax
10019885:	call   0x10016b35
1001988a:	pop    ecx
1001988b:	mov    eax,DWORD PTR [esi+0x48]
1001988e:	test   eax,eax
10019890:	je     0x10019899
10019892:	push   eax
10019893:	call   0x10016b35
10019898:	pop    ecx
10019899:	mov    eax,DWORD PTR [esi+0x5c]
1001989c:	cmp    eax,0x100651c8
100198a1:	je     0x100198aa
100198a3:	push   eax
100198a4:	call   0x10016b35
100198a9:	pop    ecx
100198aa:	push   0xd
100198ac:	call   0x1001b6ab
100198b1:	pop    ecx
100198b2:	and    DWORD PTR [ebp-0x4],0x0
100198b6:	mov    edi,DWORD PTR [esi+0x68]
100198b9:	test   edi,edi
100198bb:	je     0x100198d7
100198bd:	push   edi
100198be:	call   DWORD PTR ds:0x1002c0ec
100198c4:	test   eax,eax
100198c6:	jne    0x100198d7
100198c8:	cmp    edi,0x10064990
100198ce:	je     0x100198d7
100198d0:	push   edi
100198d1:	call   0x10016b35
100198d6:	pop    ecx
100198d7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100198de:	call   0x1001993a
100198e3:	push   0xc
100198e5:	call   0x1001b6ab
100198ea:	pop    ecx
100198eb:	mov    DWORD PTR [ebp-0x4],0x1
100198f2:	mov    edi,DWORD PTR [esi+0x6c]
100198f5:	test   edi,edi
100198f7:	je     0x1001991c
100198f9:	push   edi
100198fa:	call   0x10018080
100198ff:	pop    ecx
10019900:	cmp    edi,DWORD PTR ds:0x10064f98
10019906:	je     0x1001991c
10019908:	cmp    edi,0x10064ec0
1001990e:	je     0x1001991c
10019910:	cmp    DWORD PTR [edi],0x0
10019913:	jne    0x1001991c
10019915:	push   edi
10019916:	call   0x10017eba
1001991b:	pop    ecx
1001991c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10019923:	call   0x10019946
10019928:	push   esi
10019929:	call   0x10016b35
1001992e:	pop    ecx
1001992f:	call   0x10017a7d
10019934:	ret    0x4
10019937:	mov    esi,DWORD PTR [ebp+0x8]
1001993a:	push   0xd
1001993c:	call   0x1001b5d3
10019941:	pop    ecx
10019942:	ret    
10019943:	mov    esi,DWORD PTR [ebp+0x8]
10019946:	push   0xc
10019948:	call   0x1001b5d3
1001994d:	pop    ecx
1001994e:	ret    
1001994f:	cmp    DWORD PTR ds:0x10064804,0xffffffff
10019956:	je     0x100199a4
10019958:	push   edi
10019959:	mov    edi,DWORD PTR [esp+0x8]
1001995d:	test   edi,edi
1001995f:	jne    0x10019987
10019961:	push   esi
10019962:	push   DWORD PTR ds:0x10064808
10019968:	mov    esi,DWORD PTR ds:0x1002c218
1001996e:	call   esi
10019970:	test   eax,eax
10019972:	je     0x10019986
10019974:	push   DWORD PTR ds:0x10064804
1001997a:	push   DWORD PTR ds:0x10064808
10019980:	call   esi
10019982:	call   eax
10019984:	mov    edi,eax
10019986:	pop    esi
10019987:	push   0x0
10019989:	push   DWORD PTR ds:0x10064804
1001998f:	push   DWORD PTR ds:0x10066624
10019995:	call   0x100195fa
1001999a:	pop    ecx
1001999b:	call   eax
1001999d:	push   edi
1001999e:	call   0x1001982e
100199a3:	pop    edi
100199a4:	mov    eax,ds:0x10064808
100199a9:	cmp    eax,0xffffffff
100199ac:	je     0x100199b7
100199ae:	push   0x0
100199b0:	push   eax
100199b1:	call   DWORD PTR ds:0x1002c220
100199b7:	ret    
100199b8:	push   edi
100199b9:	push   0x10050d88
100199be:	call   DWORD PTR ds:0x1002c100
100199c4:	mov    edi,eax
100199c6:	test   edi,edi
100199c8:	jne    0x100199d3
100199ca:	call   0x100196a3
100199cf:	xor    eax,eax
100199d1:	pop    edi
100199d2:	ret    
100199d3:	push   esi
100199d4:	mov    esi,DWORD PTR ds:0x1002c044
100199da:	push   0x10050dc8
100199df:	push   edi
100199e0:	call   esi
100199e2:	push   0x10050dbc
100199e7:	push   edi
100199e8:	mov    ds:0x1006661c,eax
100199ed:	call   esi
100199ef:	push   0x10050db0
100199f4:	push   edi
100199f5:	mov    ds:0x10066620,eax
100199fa:	call   esi
100199fc:	push   0x10050da8
10019a01:	push   edi
10019a02:	mov    ds:0x10066624,eax
10019a07:	call   esi
10019a09:	cmp    DWORD PTR ds:0x1006661c,0x0
10019a10:	mov    esi,DWORD PTR ds:0x1002c220
10019a16:	mov    ds:0x10066628,eax
10019a1b:	je     0x10019a33
10019a1d:	cmp    DWORD PTR ds:0x10066620,0x0
10019a24:	je     0x10019a33
10019a26:	cmp    DWORD PTR ds:0x10066624,0x0
10019a2d:	je     0x10019a33
10019a2f:	test   eax,eax
10019a31:	jne    0x10019a57
10019a33:	mov    eax,ds:0x1002c218
10019a38:	mov    ds:0x10066620,eax
10019a3d:	mov    eax,ds:0x1002c224
10019a42:	mov    DWORD PTR ds:0x1006661c,0x10019668
10019a4c:	mov    DWORD PTR ds:0x10066624,esi
10019a52:	mov    ds:0x10066628,eax
10019a57:	call   DWORD PTR ds:0x1002c21c
10019a5d:	cmp    eax,0xffffffff
10019a60:	mov    ds:0x10064808,eax
10019a65:	je     0x10019b37
10019a6b:	push   DWORD PTR ds:0x10066620
10019a71:	push   eax
10019a72:	call   esi
10019a74:	test   eax,eax
10019a76:	je     0x10019b37
10019a7c:	call   0x10019f6f
10019a81:	push   DWORD PTR ds:0x1006661c
10019a87:	call   0x10019583
10019a8c:	push   DWORD PTR ds:0x10066620
10019a92:	mov    ds:0x1006661c,eax
10019a97:	call   0x10019583
10019a9c:	push   DWORD PTR ds:0x10066624
10019aa2:	mov    ds:0x10066620,eax
10019aa7:	call   0x10019583
10019aac:	push   DWORD PTR ds:0x10066628
10019ab2:	mov    ds:0x10066624,eax
10019ab7:	call   0x10019583
10019abc:	add    esp,0x10
10019abf:	mov    ds:0x10066628,eax
10019ac4:	call   0x1001b535
10019ac9:	test   eax,eax
10019acb:	je     0x10019b32
10019acd:	push   0x1001982e
10019ad2:	push   DWORD PTR ds:0x1006661c
10019ad8:	call   0x100195fa
10019add:	pop    ecx
10019ade:	call   eax
10019ae0:	cmp    eax,0xffffffff
10019ae3:	mov    ds:0x10064804,eax
10019ae8:	je     0x10019b32
10019aea:	push   0x214
10019aef:	push   0x1
10019af1:	call   0x100185e5
10019af6:	mov    esi,eax
10019af8:	test   esi,esi
10019afa:	pop    ecx
10019afb:	pop    ecx
10019afc:	je     0x10019b32
10019afe:	push   esi
10019aff:	push   DWORD PTR ds:0x10064804
10019b05:	push   DWORD PTR ds:0x10066624
10019b0b:	call   0x100195fa
10019b10:	pop    ecx
10019b11:	call   eax
10019b13:	test   eax,eax
10019b15:	je     0x10019b32
10019b17:	push   0x0
10019b19:	push   esi
10019b1a:	call   0x100196e0
10019b1f:	pop    ecx
10019b20:	pop    ecx
10019b21:	call   DWORD PTR ds:0x1002c138
10019b27:	or     DWORD PTR [esi+0x4],0xffffffff
10019b2b:	mov    DWORD PTR [esi],eax
10019b2d:	xor    eax,eax
10019b2f:	inc    eax
10019b30:	jmp    0x10019b39
10019b32:	call   0x100196a3
10019b37:	xor    eax,eax
10019b39:	pop    esi
10019b3a:	pop    edi
10019b3b:	ret    
10019b3c:	push   0x8
10019b3e:	push   0x10058728
10019b43:	call   0x10017a38
10019b48:	call   0x10019816
10019b4d:	mov    eax,DWORD PTR [eax+0x78]
10019b50:	test   eax,eax
10019b52:	je     0x10019b6a
10019b54:	and    DWORD PTR [ebp-0x4],0x0
10019b58:	call   eax
10019b5a:	jmp    0x10019b63
10019b5c:	xor    eax,eax
10019b5e:	inc    eax
10019b5f:	ret    
10019b60:	mov    esp,DWORD PTR [ebp-0x18]
10019b63:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10019b6a:	call   0x10018678
10019b6f:	call   0x10017a7d
10019b74:	ret    
10019b75:	call   0x10019816
10019b7a:	mov    eax,DWORD PTR [eax+0x7c]
10019b7d:	test   eax,eax
10019b7f:	je     0x10019b83
10019b81:	call   eax
10019b83:	jmp    0x10019b3c
10019b88:	push   0x8
10019b8a:	push   0x10058748
10019b8f:	call   0x10017a38
10019b94:	push   DWORD PTR ds:0x1006662c
10019b9a:	call   0x100195fa
10019b9f:	pop    ecx
10019ba0:	test   eax,eax
10019ba2:	je     0x10019bba
10019ba4:	and    DWORD PTR [ebp-0x4],0x0
10019ba8:	call   eax
10019baa:	jmp    0x10019bb3
10019bac:	xor    eax,eax
10019bae:	inc    eax
10019baf:	ret    
10019bb0:	mov    esp,DWORD PTR [ebp-0x18]
10019bb3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10019bba:	jmp    0x10019b3c
10019bbf:	push   0x10019b3c
10019bc4:	call   0x10019583
10019bc9:	pop    ecx
10019bca:	mov    ds:0x1006662c,eax
10019bcf:	ret    
10019bd0:	push   ebp
10019bd1:	mov    ebp,esp
10019bd3:	sub    esp,0x4
10019bd6:	push   ebx
10019bd7:	push   ecx
10019bd8:	mov    eax,DWORD PTR [ebp+0xc]
10019bdb:	add    eax,0xc
10019bde:	mov    DWORD PTR [ebp-0x4],eax
10019be1:	mov    eax,DWORD PTR [ebp+0x8]
10019be4:	push   ebp
10019be5:	push   DWORD PTR [ebp+0x10]
10019be8:	mov    ecx,DWORD PTR [ebp+0x10]
10019beb:	mov    ebp,DWORD PTR [ebp-0x4]
10019bee:	call   0x10020e2c
10019bf3:	push   esi
10019bf4:	push   edi
10019bf5:	call   eax
10019bf7:	pop    edi
10019bf8:	pop    esi
10019bf9:	mov    ebx,ebp
10019bfb:	pop    ebp
10019bfc:	mov    ecx,DWORD PTR [ebp+0x10]
10019bff:	push   ebp
10019c00:	mov    ebp,ebx
10019c02:	cmp    ecx,0x100
10019c08:	jne    0x10019c0f
10019c0a:	mov    ecx,0x2
10019c0f:	push   ecx
10019c10:	call   0x10020e2c
10019c15:	pop    ebp
10019c16:	pop    ecx
10019c17:	pop    ebx
10019c18:	leave  
10019c19:	ret    0xc
10019c1c:	push   0x10
10019c1e:	push   0x10058768
10019c23:	call   0x10017a38
10019c28:	xor    eax,eax
10019c2a:	mov    ebx,DWORD PTR [ebp+0x8]
10019c2d:	xor    edi,edi
10019c2f:	cmp    ebx,edi
10019c31:	setne  al
10019c34:	cmp    eax,edi
10019c36:	jne    0x10019c55
10019c38:	call   0x10019ffe
10019c3d:	mov    DWORD PTR [eax],0x16
10019c43:	push   edi
10019c44:	push   edi
10019c45:	push   edi
10019c46:	push   edi
10019c47:	push   edi
10019c48:	call   0x1001611f
10019c4d:	add    esp,0x14
10019c50:	or     eax,0xffffffff
10019c53:	jmp    0x10019ca8
10019c55:	cmp    DWORD PTR ds:0x10068098,0x3
10019c5c:	jne    0x10019c96
10019c5e:	push   0x4
10019c60:	call   0x1001b6ab
10019c65:	pop    ecx
10019c66:	mov    DWORD PTR [ebp-0x4],edi
10019c69:	push   ebx
10019c6a:	call   0x1001b724
10019c6f:	pop    ecx
10019c70:	mov    DWORD PTR [ebp-0x20],eax
10019c73:	cmp    eax,edi
10019c75:	je     0x10019c82
10019c77:	mov    esi,DWORD PTR [ebx-0x4]
10019c7a:	sub    esi,0x9
10019c7d:	mov    DWORD PTR [ebp-0x1c],esi
10019c80:	jmp    0x10019c85
10019c82:	mov    esi,DWORD PTR [ebp-0x1c]
10019c85:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10019c8c:	call   0x10019cb6
10019c91:	cmp    DWORD PTR [ebp-0x20],edi
10019c94:	jne    0x10019ca6
10019c96:	push   ebx
10019c97:	push   edi
10019c98:	push   DWORD PTR ds:0x100666c0
10019c9e:	call   DWORD PTR ds:0x1002c1d4
10019ca4:	mov    esi,eax
10019ca6:	mov    eax,esi
10019ca8:	call   0x10017a7d
10019cad:	ret    
10019cae:	xor    edi,edi
10019cb0:	mov    ebx,DWORD PTR [ebp+0x8]
10019cb3:	mov    esi,DWORD PTR [ebp-0x1c]
10019cb6:	push   0x4
10019cb8:	call   0x1001b5d3
10019cbd:	pop    ecx
10019cbe:	ret    
10019cbf:	call   0x1001c37b
10019cc4:	push   DWORD PTR [esp+0x4]
10019cc8:	call   0x1001c1db
10019ccd:	push   DWORD PTR ds:0x10064810
10019cd3:	call   0x100195fa
10019cd8:	push   0xff
10019cdd:	call   eax
10019cdf:	add    esp,0xc
10019ce2:	ret    
10019ce3:	push   0x10050de4
10019ce8:	call   DWORD PTR ds:0x1002c100
10019cee:	test   eax,eax
10019cf0:	je     0x10019d08
10019cf2:	push   0x10050dd4
10019cf7:	push   eax
10019cf8:	call   DWORD PTR ds:0x1002c044
10019cfe:	test   eax,eax
10019d00:	je     0x10019d08
10019d02:	push   DWORD PTR [esp+0x4]
10019d06:	call   eax
10019d08:	ret    
10019d09:	push   DWORD PTR [esp+0x4]
10019d0d:	call   0x10019ce3
10019d12:	pop    ecx
10019d13:	push   DWORD PTR [esp+0x4]
10019d17:	call   DWORD PTR ds:0x1002c050
10019d1d:	int3   
10019d1e:	push   0x8
10019d20:	call   0x1001b6ab
10019d25:	pop    ecx
10019d26:	ret    
10019d27:	push   0x8
10019d29:	call   0x1001b5d3
10019d2e:	pop    ecx
10019d2f:	ret    
10019d30:	push   esi
10019d31:	mov    esi,eax
10019d33:	jmp    0x10019d40
10019d35:	mov    eax,DWORD PTR [esi]
10019d37:	test   eax,eax
10019d39:	je     0x10019d3d
10019d3b:	call   eax
10019d3d:	add    esi,0x4
10019d40:	cmp    esi,DWORD PTR [esp+0x8]
10019d44:	jb     0x10019d35
10019d46:	pop    esi
10019d47:	ret    
10019d48:	push   esi
10019d49:	mov    esi,DWORD PTR [esp+0x8]
10019d4d:	xor    eax,eax
10019d4f:	jmp    0x10019d60
10019d51:	test   eax,eax
10019d53:	jne    0x10019d66
10019d55:	mov    ecx,DWORD PTR [esi]
10019d57:	test   ecx,ecx
10019d59:	je     0x10019d5d
10019d5b:	call   ecx
10019d5d:	add    esi,0x4
10019d60:	cmp    esi,DWORD PTR [esp+0xc]
10019d64:	jb     0x10019d51
10019d66:	pop    esi
10019d67:	ret    
10019d68:	mov    ecx,DWORD PTR [esp+0x4]
10019d6c:	push   esi
10019d6d:	xor    esi,esi
10019d6f:	cmp    ecx,esi
10019d71:	jne    0x10019d90
10019d73:	call   0x10019ffe
10019d78:	push   esi
10019d79:	push   esi
10019d7a:	push   esi
10019d7b:	push   esi
10019d7c:	push   esi
10019d7d:	mov    DWORD PTR [eax],0x16
10019d83:	call   0x1001611f
10019d88:	add    esp,0x14
10019d8b:	push   0x16
10019d8d:	pop    eax
10019d8e:	pop    esi
10019d8f:	ret    
10019d90:	mov    eax,ds:0x10066634
10019d95:	cmp    eax,esi
10019d97:	je     0x10019d73
10019d99:	mov    DWORD PTR [ecx],eax
10019d9b:	xor    eax,eax
10019d9d:	pop    esi
10019d9e:	ret    
10019d9f:	mov    eax,DWORD PTR [esp+0x4]
10019da3:	push   esi
10019da4:	xor    esi,esi
10019da6:	cmp    eax,esi
10019da8:	jne    0x10019dc7
10019daa:	call   0x10019ffe
10019daf:	push   esi
10019db0:	push   esi
10019db1:	push   esi
10019db2:	push   esi
10019db3:	push   esi
10019db4:	mov    DWORD PTR [eax],0x16
10019dba:	call   0x1001611f
10019dbf:	add    esp,0x14
10019dc2:	push   0x16
10019dc4:	pop    eax
10019dc5:	pop    esi
10019dc6:	ret    
10019dc7:	cmp    DWORD PTR ds:0x10066634,esi
10019dcd:	je     0x10019daa
10019dcf:	mov    ecx,DWORD PTR ds:0x10066640
10019dd5:	mov    DWORD PTR [eax],ecx
10019dd7:	xor    eax,eax
10019dd9:	pop    esi
10019dda:	ret    
10019ddb:	cmp    DWORD PTR ds:0x10051444,0x0
10019de2:	je     0x10019dfe
10019de4:	push   0x10051444
10019de9:	call   0x10020120
10019dee:	test   eax,eax
10019df0:	pop    ecx
10019df1:	je     0x10019dfe
10019df3:	push   DWORD PTR [esp+0x4]
10019df7:	call   DWORD PTR ds:0x10051444
10019dfd:	pop    ecx
10019dfe:	call   0x10020e57
10019e03:	push   0x1002c2e4
10019e08:	push   0x1002c2cc
10019e0d:	call   0x10019d48
10019e12:	test   eax,eax
10019e14:	pop    ecx
10019e15:	pop    ecx
10019e16:	jne    0x10019e6c
10019e18:	push   esi
10019e19:	push   edi
10019e1a:	push   0x1001cad9
10019e1f:	call   0x10016007
10019e24:	mov    esi,0x1002c254
10019e29:	mov    eax,esi
10019e2b:	mov    edi,0x1002c2c8
10019e30:	cmp    eax,edi
10019e32:	pop    ecx
10019e33:	jae    0x10019e44
10019e35:	mov    eax,DWORD PTR [esi]
10019e37:	test   eax,eax
10019e39:	je     0x10019e3d
10019e3b:	call   eax
10019e3d:	add    esi,0x4
10019e40:	cmp    esi,edi
10019e42:	jb     0x10019e35
10019e44:	cmp    DWORD PTR ds:0x100680b8,0x0
10019e4b:	pop    edi
10019e4c:	pop    esi
10019e4d:	je     0x10019e6a
10019e4f:	push   0x100680b8
10019e54:	call   0x10020120
10019e59:	test   eax,eax
10019e5b:	pop    ecx
10019e5c:	je     0x10019e6a
10019e5e:	push   0x0
10019e60:	push   0x2
10019e62:	push   0x0
10019e64:	call   DWORD PTR ds:0x100680b8
10019e6a:	xor    eax,eax
10019e6c:	ret    
10019e6d:	push   0x10
10019e6f:	push   0x10058788
10019e74:	call   0x10017a38
10019e79:	push   0x8
10019e7b:	call   0x1001b6ab
10019e80:	pop    ecx
10019e81:	xor    edi,edi
10019e83:	mov    DWORD PTR [ebp-0x4],edi
10019e86:	xor    ebx,ebx
10019e88:	inc    ebx
10019e89:	cmp    DWORD PTR ds:0x10066674,ebx
10019e8f:	je     0x10019f0f
10019e91:	mov    DWORD PTR ds:0x10066670,ebx
10019e97:	mov    al,BYTE PTR [ebp+0x10]
10019e9a:	mov    ds:0x1006666c,al
10019e9f:	cmp    DWORD PTR [ebp+0xc],edi
10019ea2:	jne    0x10019eff
10019ea4:	push   DWORD PTR ds:0x100680b0
10019eaa:	call   0x100195fa
10019eaf:	mov    DWORD PTR [ebp-0x1c],eax
10019eb2:	push   DWORD PTR ds:0x100680ac
10019eb8:	call   0x100195fa
10019ebd:	pop    ecx
10019ebe:	pop    ecx
10019ebf:	mov    esi,eax
10019ec1:	mov    DWORD PTR [ebp-0x20],esi
10019ec4:	cmp    DWORD PTR [ebp-0x1c],edi
10019ec7:	je     0x10019eef
10019ec9:	sub    esi,0x4
10019ecc:	mov    DWORD PTR [ebp-0x20],esi
10019ecf:	cmp    esi,DWORD PTR [ebp-0x1c]
10019ed2:	jb     0x10019eef
10019ed4:	cmp    DWORD PTR [esi],0x0
10019ed7:	je     0x10019ec9
10019ed9:	mov    edi,DWORD PTR [esi]
10019edb:	call   0x100195f1
10019ee0:	cmp    edi,eax
10019ee2:	je     0x10019ec9
10019ee4:	push   edi
10019ee5:	call   0x100195fa
10019eea:	pop    ecx
10019eeb:	call   eax
10019eed:	jmp    0x10019ec9
10019eef:	push   0x1002c2f4
10019ef4:	mov    eax,0x1002c2e8
10019ef9:	call   0x10019d30
10019efe:	pop    ecx
10019eff:	push   0x1002c2fc
10019f04:	mov    eax,0x1002c2f8
10019f09:	call   0x10019d30
10019f0e:	pop    ecx
10019f0f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10019f16:	call   0x10019f3a
10019f1b:	cmp    DWORD PTR [ebp+0x10],0x0
10019f1f:	jne    0x10019f49
10019f21:	mov    DWORD PTR ds:0x10066674,ebx
10019f27:	push   0x8
10019f29:	call   0x1001b5d3
10019f2e:	pop    ecx
10019f2f:	push   DWORD PTR [ebp+0x8]
10019f32:	call   0x10019d09
10019f37:	xor    ebx,ebx
10019f39:	inc    ebx
10019f3a:	cmp    DWORD PTR [ebp+0x10],0x0
10019f3e:	je     0x10019f48
10019f40:	push   0x8
10019f42:	call   0x1001b5d3
10019f47:	pop    ecx
10019f48:	ret    
10019f49:	call   0x10017a7d
10019f4e:	ret    
10019f4f:	push   0x0
10019f51:	push   0x1
10019f53:	push   DWORD PTR [esp+0xc]
10019f57:	call   0x10019e6d
10019f5c:	add    esp,0xc
10019f5f:	ret    
10019f60:	push   0x1
10019f62:	push   0x0
10019f64:	push   0x0
10019f66:	call   0x10019e6d
10019f6b:	add    esp,0xc
10019f6e:	ret    
10019f6f:	push   esi
10019f70:	call   0x100195f1
10019f75:	mov    esi,eax
10019f77:	push   esi
10019f78:	call   0x1001a1ad
10019f7d:	push   esi
10019f7e:	call   0x10020e80
10019f83:	push   esi
10019f84:	call   0x10016019
10019f89:	push   esi
10019f8a:	call   0x1001e21f
10019f8f:	push   esi
10019f90:	call   0x10020e76
10019f95:	push   esi
10019f96:	call   0x10020b07
10019f9b:	push   esi
10019f9c:	call   0x1001fd0d
10019fa1:	push   esi
10019fa2:	call   0x10019bbf
10019fa7:	push   0x10019f4f
10019fac:	call   0x10019583
10019fb1:	add    esp,0x24
10019fb4:	mov    ds:0x10064810,eax
10019fb9:	pop    esi
10019fba:	ret    
10019fbb:	and    DWORD PTR ds:0x100680a4,0x0
10019fc2:	ret    
10019fc3:	mov    eax,DWORD PTR [esp+0x4]
10019fc7:	xor    ecx,ecx
10019fc9:	cmp    eax,DWORD PTR [ecx*8+0x10064818]
10019fd0:	je     0x10019fe4
10019fd2:	inc    ecx
10019fd3:	cmp    ecx,0x2d
10019fd6:	jb     0x10019fc9
10019fd8:	lea    ecx,[eax-0x13]
10019fdb:	cmp    ecx,0x11
10019fde:	ja     0x10019fec
10019fe0:	push   0xd
10019fe2:	pop    eax
10019fe3:	ret    
10019fe4:	mov    eax,DWORD PTR [ecx*8+0x1006481c]
10019feb:	ret    
10019fec:	add    eax,0xffffff44
10019ff1:	push   0xe
10019ff3:	pop    ecx
10019ff4:	cmp    ecx,eax
10019ff6:	sbb    eax,eax
10019ff8:	and    eax,ecx
10019ffa:	add    eax,0x8
10019ffd:	ret    
10019ffe:	call   0x1001979f
1001a003:	test   eax,eax
1001a005:	jne    0x1001a00d
1001a007:	mov    eax,0x10064980
1001a00c:	ret    
1001a00d:	add    eax,0x8
1001a010:	ret    
1001a011:	call   0x1001979f
1001a016:	test   eax,eax
1001a018:	jne    0x1001a020
1001a01a:	mov    eax,0x10064984
1001a01f:	ret    
1001a020:	add    eax,0xc
1001a023:	ret    
1001a024:	push   esi
1001a025:	call   0x1001a011
1001a02a:	mov    ecx,DWORD PTR [esp+0x8]
1001a02e:	push   ecx
1001a02f:	mov    DWORD PTR [eax],ecx
1001a031:	call   0x10019fc3
1001a036:	pop    ecx
1001a037:	mov    esi,eax
1001a039:	call   0x10019ffe
1001a03e:	mov    DWORD PTR [eax],esi
1001a040:	pop    esi
1001a041:	ret    
1001a042:	push   0xc
1001a044:	push   0x100587a8
1001a049:	call   0x10017a38
1001a04e:	push   0xe
1001a050:	call   0x1001b6ab
1001a055:	pop    ecx
1001a056:	and    DWORD PTR [ebp-0x4],0x0
1001a05a:	mov    esi,DWORD PTR [ebp+0x8]
1001a05d:	mov    ecx,DWORD PTR [esi+0x4]
1001a060:	test   ecx,ecx
1001a062:	je     0x1001a093
1001a064:	mov    eax,ds:0x1006667c
1001a069:	mov    edx,0x10066678
1001a06e:	mov    DWORD PTR [ebp-0x1c],eax
1001a071:	test   eax,eax
1001a073:	je     0x1001a086
1001a075:	cmp    DWORD PTR [eax],ecx
1001a077:	jne    0x1001a0a5
1001a079:	mov    ecx,DWORD PTR [eax+0x4]
1001a07c:	mov    DWORD PTR [edx+0x4],ecx
1001a07f:	push   eax
1001a080:	call   0x10016b35
1001a085:	pop    ecx
1001a086:	push   DWORD PTR [esi+0x4]
1001a089:	call   0x10016b35
1001a08e:	pop    ecx
1001a08f:	and    DWORD PTR [esi+0x4],0x0
1001a093:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001a09a:	call   0x1001a0a9
1001a09f:	call   0x10017a7d
1001a0a4:	ret    
1001a0a5:	mov    edx,eax
1001a0a7:	jmp    0x1001a06e
1001a0a9:	push   0xe
1001a0ab:	call   0x1001b5d3
1001a0b0:	pop    ecx
1001a0b1:	ret    
1001a0b2:	int3   
1001a0b3:	int3   
1001a0b4:	int3   
1001a0b5:	int3   
1001a0b6:	int3   
1001a0b7:	int3   
1001a0b8:	int3   
1001a0b9:	int3   
1001a0ba:	int3   
1001a0bb:	int3   
1001a0bc:	int3   
1001a0bd:	int3   
1001a0be:	int3   
1001a0bf:	int3   
1001a0c0:	mov    edx,DWORD PTR [esp+0x4]
1001a0c4:	mov    ecx,DWORD PTR [esp+0x8]
1001a0c8:	test   edx,0x3
1001a0ce:	jne    0x1001a10c
1001a0d0:	mov    eax,DWORD PTR [edx]
1001a0d2:	cmp    al,BYTE PTR [ecx]
1001a0d4:	jne    0x1001a104
1001a0d6:	or     al,al
1001a0d8:	je     0x1001a100
1001a0da:	cmp    ah,BYTE PTR [ecx+0x1]
1001a0dd:	jne    0x1001a104
1001a0df:	or     ah,ah
1001a0e1:	je     0x1001a100
1001a0e3:	shr    eax,0x10
1001a0e6:	cmp    al,BYTE PTR [ecx+0x2]
1001a0e9:	jne    0x1001a104
1001a0eb:	or     al,al
1001a0ed:	je     0x1001a100
1001a0ef:	cmp    ah,BYTE PTR [ecx+0x3]
1001a0f2:	jne    0x1001a104
1001a0f4:	add    ecx,0x4
1001a0f7:	add    edx,0x4
1001a0fa:	or     ah,ah
1001a0fc:	jne    0x1001a0d0
1001a0fe:	mov    edi,edi
1001a100:	xor    eax,eax
1001a102:	ret    
1001a103:	nop
1001a104:	sbb    eax,eax
1001a106:	shl    eax,1
1001a108:	add    eax,0x1
1001a10b:	ret    
1001a10c:	test   edx,0x1
1001a112:	je     0x1001a12c
1001a114:	mov    al,BYTE PTR [edx]
1001a116:	add    edx,0x1
1001a119:	cmp    al,BYTE PTR [ecx]
1001a11b:	jne    0x1001a104
1001a11d:	add    ecx,0x1
1001a120:	or     al,al
1001a122:	je     0x1001a100
1001a124:	test   edx,0x2
1001a12a:	je     0x1001a0d0
1001a12c:	mov    ax,WORD PTR [edx]
1001a12f:	add    edx,0x2
1001a132:	cmp    al,BYTE PTR [ecx]
1001a134:	jne    0x1001a104
1001a136:	or     al,al
1001a138:	je     0x1001a100
1001a13a:	cmp    ah,BYTE PTR [ecx+0x1]
1001a13d:	jne    0x1001a104
1001a13f:	or     ah,ah
1001a141:	je     0x1001a100
1001a143:	add    ecx,0x2
1001a146:	jmp    0x1001a0d0
1001a148:	mov    ecx,DWORD PTR [esp+0x4]
1001a14c:	push   ebx
1001a14d:	xor    ebx,ebx
1001a14f:	cmp    ecx,ebx
1001a151:	push   esi
1001a152:	push   edi
1001a153:	je     0x1001a15d
1001a155:	mov    edi,DWORD PTR [esp+0x14]
1001a159:	cmp    edi,ebx
1001a15b:	ja     0x1001a178
1001a15d:	call   0x10019ffe
1001a162:	push   0x16
1001a164:	pop    esi
1001a165:	mov    DWORD PTR [eax],esi
1001a167:	push   ebx
1001a168:	push   ebx
1001a169:	push   ebx
1001a16a:	push   ebx
1001a16b:	push   ebx
1001a16c:	call   0x1001611f
1001a171:	add    esp,0x14
1001a174:	mov    eax,esi
1001a176:	jmp    0x1001a1a9
1001a178:	mov    esi,DWORD PTR [esp+0x18]
1001a17c:	cmp    esi,ebx
1001a17e:	jne    0x1001a184
1001a180:	mov    BYTE PTR [ecx],bl
1001a182:	jmp    0x1001a15d
1001a184:	mov    edx,ecx
1001a186:	mov    al,BYTE PTR [esi]
1001a188:	mov    BYTE PTR [edx],al
1001a18a:	inc    edx
1001a18b:	inc    esi
1001a18c:	cmp    al,bl
1001a18e:	je     0x1001a193
1001a190:	dec    edi
1001a191:	jne    0x1001a186
1001a193:	cmp    edi,ebx
1001a195:	jne    0x1001a1a7
1001a197:	mov    BYTE PTR [ecx],bl
1001a199:	call   0x10019ffe
1001a19e:	push   0x22
1001a1a0:	pop    ecx
1001a1a1:	mov    DWORD PTR [eax],ecx
1001a1a3:	mov    esi,ecx
1001a1a5:	jmp    0x1001a167
1001a1a7:	xor    eax,eax
1001a1a9:	pop    edi
1001a1aa:	pop    esi
1001a1ab:	pop    ebx
1001a1ac:	ret    
1001a1ad:	mov    eax,DWORD PTR [esp+0x4]
1001a1b1:	mov    ds:0x10066680,eax
1001a1b6:	ret    
1001a1b7:	push   DWORD PTR ds:0x10066680
1001a1bd:	call   0x100195fa
1001a1c2:	test   eax,eax
1001a1c4:	pop    ecx
1001a1c5:	je     0x1001a1d6
1001a1c7:	push   DWORD PTR [esp+0x4]
1001a1cb:	call   eax
1001a1cd:	test   eax,eax
1001a1cf:	pop    ecx
1001a1d0:	je     0x1001a1d6
1001a1d2:	xor    eax,eax
1001a1d4:	inc    eax
1001a1d5:	ret    
1001a1d6:	xor    eax,eax
1001a1d8:	ret    
1001a1d9:	int3   
1001a1da:	int3   
1001a1db:	int3   
1001a1dc:	int3   
1001a1dd:	int3   
1001a1de:	int3   
1001a1df:	int3   
1001a1e0:	push   ebp
1001a1e1:	mov    ebp,esp
1001a1e3:	push   edi
1001a1e4:	push   esi
1001a1e5:	mov    esi,DWORD PTR [ebp+0xc]
1001a1e8:	mov    ecx,DWORD PTR [ebp+0x10]
1001a1eb:	mov    edi,DWORD PTR [ebp+0x8]
1001a1ee:	mov    eax,ecx
1001a1f0:	mov    edx,ecx
1001a1f2:	add    eax,esi
1001a1f4:	cmp    edi,esi
1001a1f6:	jbe    0x1001a200
1001a1f8:	cmp    edi,eax
1001a1fa:	jb     0x1001a3a4
1001a200:	cmp    ecx,0x100
1001a206:	jb     0x1001a227
1001a208:	cmp    DWORD PTR ds:0x100680a0,0x0
1001a20f:	je     0x1001a227
1001a211:	push   edi
1001a212:	push   esi
1001a213:	and    edi,0xf
1001a216:	and    esi,0xf
1001a219:	cmp    edi,esi
1001a21b:	pop    esi
1001a21c:	pop    edi
1001a21d:	jne    0x1001a227
1001a21f:	pop    esi
1001a220:	pop    edi
1001a221:	pop    ebp
1001a222:	jmp    0x1001b329
1001a227:	test   edi,0x3
1001a22d:	jne    0x1001a244
1001a22f:	shr    ecx,0x2
1001a232:	and    edx,0x3
1001a235:	cmp    ecx,0x8
1001a238:	jb     0x1001a264
1001a23a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a23c:	jmp    DWORD PTR [edx*4+0x1001a354]
1001a243:	nop
1001a244:	mov    eax,edi
1001a246:	mov    edx,0x3
1001a24b:	sub    ecx,0x4
1001a24e:	jb     0x1001a25c
1001a250:	and    eax,0x3
1001a253:	add    ecx,eax
1001a255:	jmp    DWORD PTR [eax*4+0x1001a268]
1001a25c:	jmp    DWORD PTR [ecx*4+0x1001a364]
1001a263:	nop
1001a264:	jmp    DWORD PTR [ecx*4+0x1001a2e8]
1001a26b:	nop
1001a26c:	js     0x1001a210
1001a26e:	add    DWORD PTR [eax],edx
1001a270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001a271:	mov    ds:0xa2c81001,al
1001a276:	add    DWORD PTR [eax],edx
1001a278:	and    edx,ecx
1001a27a:	mov    al,BYTE PTR [esi]
1001a27c:	mov    BYTE PTR [edi],al
1001a27e:	mov    al,BYTE PTR [esi+0x1]
1001a281:	mov    BYTE PTR [edi+0x1],al
1001a284:	mov    al,BYTE PTR [esi+0x2]
1001a287:	shr    ecx,0x2
1001a28a:	mov    BYTE PTR [edi+0x2],al
1001a28d:	add    esi,0x3
1001a290:	add    edi,0x3
1001a293:	cmp    ecx,0x8
1001a296:	jb     0x1001a264
1001a298:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a29a:	jmp    DWORD PTR [edx*4+0x1001a354]
1001a2a1:	lea    ecx,[ecx+0x0]
1001a2a4:	and    edx,ecx
1001a2a6:	mov    al,BYTE PTR [esi]
1001a2a8:	mov    BYTE PTR [edi],al
1001a2aa:	mov    al,BYTE PTR [esi+0x1]
1001a2ad:	shr    ecx,0x2
1001a2b0:	mov    BYTE PTR [edi+0x1],al
1001a2b3:	add    esi,0x2
1001a2b6:	add    edi,0x2
1001a2b9:	cmp    ecx,0x8
1001a2bc:	jb     0x1001a264
1001a2be:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a2c0:	jmp    DWORD PTR [edx*4+0x1001a354]
1001a2c7:	nop
1001a2c8:	and    edx,ecx
1001a2ca:	mov    al,BYTE PTR [esi]
1001a2cc:	mov    BYTE PTR [edi],al
1001a2ce:	add    esi,0x1
1001a2d1:	shr    ecx,0x2
1001a2d4:	add    edi,0x1
1001a2d7:	cmp    ecx,0x8
1001a2da:	jb     0x1001a264
1001a2dc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a2de:	jmp    DWORD PTR [edx*4+0x1001a354]
1001a2e5:	lea    ecx,[ecx+0x0]
1001a2e8:	dec    ebx
1001a2e9:	mov    ds:0xa3381001,eax
1001a2ee:	add    DWORD PTR [eax],edx
1001a2f0:	xor    BYTE PTR [ebx-0x5cd7efff],ah
1001a2f6:	add    DWORD PTR [eax],edx
1001a2f8:	and    BYTE PTR [ebx-0x5ce7efff],ah
1001a2fe:	add    DWORD PTR [eax],edx
1001a300:	adc    BYTE PTR [ebx-0x5cf7efff],ah
1001a306:	add    DWORD PTR [eax],edx
1001a308:	mov    eax,DWORD PTR [esi+ecx*4-0x1c]
1001a30c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
1001a310:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
1001a314:	mov    DWORD PTR [edi+ecx*4-0x18],eax
1001a318:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
1001a31c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
1001a320:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
1001a324:	mov    DWORD PTR [edi+ecx*4-0x10],eax
1001a328:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
1001a32c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
1001a330:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
1001a334:	mov    DWORD PTR [edi+ecx*4-0x8],eax
1001a338:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
1001a33c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
1001a340:	lea    eax,[ecx*4+0x0]
1001a347:	add    esi,eax
1001a349:	add    edi,eax
1001a34b:	jmp    DWORD PTR [edx*4+0x1001a354]
1001a352:	mov    edi,edi
1001a354:	mov    fs:0xa36c1001,eax
1001a35a:	add    DWORD PTR [eax],edx
1001a35c:	js     0x1001a301
1001a35e:	add    DWORD PTR [eax],edx
1001a360:	mov    WORD PTR [ebx+0x458b1001],fs
1001a366:	or     BYTE PTR [esi+0x5f],bl
1001a369:	leave  
1001a36a:	ret    
1001a36b:	nop
1001a36c:	mov    al,BYTE PTR [esi]
1001a36e:	mov    BYTE PTR [edi],al
1001a370:	mov    eax,DWORD PTR [ebp+0x8]
1001a373:	pop    esi
1001a374:	pop    edi
1001a375:	leave  
1001a376:	ret    
1001a377:	nop
1001a378:	mov    al,BYTE PTR [esi]
1001a37a:	mov    BYTE PTR [edi],al
1001a37c:	mov    al,BYTE PTR [esi+0x1]
1001a37f:	mov    BYTE PTR [edi+0x1],al
1001a382:	mov    eax,DWORD PTR [ebp+0x8]
1001a385:	pop    esi
1001a386:	pop    edi
1001a387:	leave  
1001a388:	ret    
1001a389:	lea    ecx,[ecx+0x0]
1001a38c:	mov    al,BYTE PTR [esi]
1001a38e:	mov    BYTE PTR [edi],al
1001a390:	mov    al,BYTE PTR [esi+0x1]
1001a393:	mov    BYTE PTR [edi+0x1],al
1001a396:	mov    al,BYTE PTR [esi+0x2]
1001a399:	mov    BYTE PTR [edi+0x2],al
1001a39c:	mov    eax,DWORD PTR [ebp+0x8]
1001a39f:	pop    esi
1001a3a0:	pop    edi
1001a3a1:	leave  
1001a3a2:	ret    
1001a3a3:	nop
1001a3a4:	lea    esi,[ecx+esi*1-0x4]
1001a3a8:	lea    edi,[ecx+edi*1-0x4]
1001a3ac:	test   edi,0x3
1001a3b2:	jne    0x1001a3d8
1001a3b4:	shr    ecx,0x2
1001a3b7:	and    edx,0x3
1001a3ba:	cmp    ecx,0x8
1001a3bd:	jb     0x1001a3cc
1001a3bf:	std    
1001a3c0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a3c2:	cld    
1001a3c3:	jmp    DWORD PTR [edx*4+0x1001a4f0]
1001a3ca:	mov    edi,edi
1001a3cc:	neg    ecx
1001a3ce:	jmp    DWORD PTR [ecx*4+0x1001a4a0]
1001a3d5:	lea    ecx,[ecx+0x0]
1001a3d8:	mov    eax,edi
1001a3da:	mov    edx,0x3
1001a3df:	cmp    ecx,0x4
1001a3e2:	jb     0x1001a3f0
1001a3e4:	and    eax,0x3
1001a3e7:	sub    ecx,eax
1001a3e9:	jmp    DWORD PTR [eax*4+0x1001a3f4]
1001a3f0:	jmp    DWORD PTR [ecx*4+0x1001a4f0]
1001a3f7:	nop
1001a3f8:	add    al,0xa4
1001a3fa:	add    DWORD PTR [eax],edx
1001a3fc:	sub    BYTE PTR [ecx+eax*1+0x1a45010],ah
1001a403:	adc    BYTE PTR [edx-0x2edcfcba],cl
1001a409:	mov    BYTE PTR [edi+0x3],al
1001a40c:	sub    esi,0x1
1001a40f:	shr    ecx,0x2
1001a412:	sub    edi,0x1
1001a415:	cmp    ecx,0x8
1001a418:	jb     0x1001a3cc
1001a41a:	std    
1001a41b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a41d:	cld    
1001a41e:	jmp    DWORD PTR [edx*4+0x1001a4f0]
1001a425:	lea    ecx,[ecx+0x0]
1001a428:	mov    al,BYTE PTR [esi+0x3]
1001a42b:	and    edx,ecx
1001a42d:	mov    BYTE PTR [edi+0x3],al
1001a430:	mov    al,BYTE PTR [esi+0x2]
1001a433:	shr    ecx,0x2
1001a436:	mov    BYTE PTR [edi+0x2],al
1001a439:	sub    esi,0x2
1001a43c:	sub    edi,0x2
1001a43f:	cmp    ecx,0x8
1001a442:	jb     0x1001a3cc
1001a444:	std    
1001a445:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a447:	cld    
1001a448:	jmp    DWORD PTR [edx*4+0x1001a4f0]
1001a44f:	nop
1001a450:	mov    al,BYTE PTR [esi+0x3]
1001a453:	and    edx,ecx
1001a455:	mov    BYTE PTR [edi+0x3],al
1001a458:	mov    al,BYTE PTR [esi+0x2]
1001a45b:	mov    BYTE PTR [edi+0x2],al
1001a45e:	mov    al,BYTE PTR [esi+0x1]
1001a461:	shr    ecx,0x2
1001a464:	mov    BYTE PTR [edi+0x1],al
1001a467:	sub    esi,0x3
1001a46a:	sub    edi,0x3
1001a46d:	cmp    ecx,0x8
1001a470:	jb     0x1001a3cc
1001a476:	std    
1001a477:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001a479:	cld    
1001a47a:	jmp    DWORD PTR [edx*4+0x1001a4f0]
1001a481:	lea    ecx,[ecx+0x0]
1001a484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001a485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001a486:	add    DWORD PTR [eax],edx
1001a488:	lods   al,BYTE PTR ds:[esi]
1001a489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001a48a:	add    DWORD PTR [eax],edx
1001a48c:	mov    ah,0xa4
1001a48e:	add    DWORD PTR [eax],edx
1001a490:	mov    esp,0xc41001a4
1001a495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001a496:	add    DWORD PTR [eax],edx
1001a498:	int3   
1001a499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001a49a:	add    DWORD PTR [eax],edx
1001a49c:	aam    0xa4
1001a49e:	add    DWORD PTR [eax],edx
1001a4a0:	out    0xa4,eax
1001a4a2:	add    DWORD PTR [eax],edx
1001a4a4:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
1001a4a8:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
1001a4ac:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
1001a4b0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
1001a4b4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
1001a4b8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
1001a4bc:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
1001a4c0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
1001a4c4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
1001a4c8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
1001a4cc:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
1001a4d0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
1001a4d4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
1001a4d8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
1001a4dc:	lea    eax,[ecx*4+0x0]
1001a4e3:	add    esi,eax
1001a4e5:	add    edi,eax
1001a4e7:	jmp    DWORD PTR [edx*4+0x1001a4f0]
1001a4ee:	mov    edi,edi
1001a4f0:	add    BYTE PTR [ebp-0x5af7efff],ah
1001a4f6:	add    DWORD PTR [eax],edx
1001a4f8:	sbb    BYTE PTR [ebp-0x5ad3efff],ah
1001a4fe:	add    DWORD PTR [eax],edx
1001a500:	mov    eax,DWORD PTR [ebp+0x8]
1001a503:	pop    esi
1001a504:	pop    edi
1001a505:	leave  
1001a506:	ret    
1001a507:	nop
1001a508:	mov    al,BYTE PTR [esi+0x3]
1001a50b:	mov    BYTE PTR [edi+0x3],al
1001a50e:	mov    eax,DWORD PTR [ebp+0x8]
1001a511:	pop    esi
1001a512:	pop    edi
1001a513:	leave  
1001a514:	ret    
1001a515:	lea    ecx,[ecx+0x0]
1001a518:	mov    al,BYTE PTR [esi+0x3]
1001a51b:	mov    BYTE PTR [edi+0x3],al
1001a51e:	mov    al,BYTE PTR [esi+0x2]
1001a521:	mov    BYTE PTR [edi+0x2],al
1001a524:	mov    eax,DWORD PTR [ebp+0x8]
1001a527:	pop    esi
1001a528:	pop    edi
1001a529:	leave  
1001a52a:	ret    
1001a52b:	nop
1001a52c:	mov    al,BYTE PTR [esi+0x3]
1001a52f:	mov    BYTE PTR [edi+0x3],al
1001a532:	mov    al,BYTE PTR [esi+0x2]
1001a535:	mov    BYTE PTR [edi+0x2],al
1001a538:	mov    al,BYTE PTR [esi+0x1]
1001a53b:	mov    BYTE PTR [edi+0x1],al
1001a53e:	mov    eax,DWORD PTR [ebp+0x8]
1001a541:	pop    esi
1001a542:	pop    edi
1001a543:	leave  
1001a544:	ret    
1001a545:	push   ebp
1001a546:	mov    ebp,esp
1001a548:	sub    esp,0x18
1001a54b:	push   ebx
1001a54c:	push   edi
1001a54d:	push   DWORD PTR [ebp+0x8]
1001a550:	lea    ecx,[ebp-0x18]
1001a553:	call   0x100165aa
1001a558:	mov    eax,DWORD PTR [ebp+0x10]
1001a55b:	mov    edi,DWORD PTR [ebp+0xc]
1001a55e:	xor    ebx,ebx
1001a560:	cmp    eax,ebx
1001a562:	je     0x1001a566
1001a564:	mov    DWORD PTR [eax],edi
1001a566:	cmp    edi,ebx
1001a568:	jne    0x1001a595
1001a56a:	call   0x10019ffe
1001a56f:	push   ebx
1001a570:	push   ebx
1001a571:	push   ebx
1001a572:	push   ebx
1001a573:	push   ebx
1001a574:	mov    DWORD PTR [eax],0x16
1001a57a:	call   0x1001611f
1001a57f:	add    esp,0x14
1001a582:	cmp    BYTE PTR [ebp-0xc],bl
1001a585:	je     0x1001a58e
1001a587:	mov    eax,DWORD PTR [ebp-0x10]
1001a58a:	and    DWORD PTR [eax+0x70],0xfffffffd
1001a58e:	xor    eax,eax
1001a590:	jmp    0x1001a738
1001a595:	cmp    DWORD PTR [ebp+0x14],ebx
1001a598:	je     0x1001a5a6
1001a59a:	cmp    DWORD PTR [ebp+0x14],0x2
1001a59e:	jl     0x1001a56a
1001a5a0:	cmp    DWORD PTR [ebp+0x14],0x24
1001a5a4:	jg     0x1001a56a
1001a5a6:	push   esi
1001a5a7:	movzx  esi,WORD PTR [edi]
1001a5aa:	mov    DWORD PTR [ebp-0x4],ebx
1001a5ad:	add    edi,0x2
1001a5b0:	jmp    0x1001a5b7
1001a5b2:	movzx  esi,WORD PTR [edi]
1001a5b5:	inc    edi
1001a5b6:	inc    edi
1001a5b7:	lea    eax,[ebp-0x18]
1001a5ba:	push   eax
1001a5bb:	push   0x8
1001a5bd:	push   esi
1001a5be:	call   0x1001cd0a
1001a5c3:	add    esp,0xc
1001a5c6:	test   eax,eax
1001a5c8:	jne    0x1001a5b2
1001a5ca:	cmp    si,0x2d
1001a5ce:	jne    0x1001a5d6
1001a5d0:	or     DWORD PTR [ebp+0x18],0x2
1001a5d4:	jmp    0x1001a5dc
1001a5d6:	cmp    si,0x2b
1001a5da:	jne    0x1001a5e1
1001a5dc:	movzx  esi,WORD PTR [edi]
1001a5df:	inc    edi
1001a5e0:	inc    edi
1001a5e1:	cmp    DWORD PTR [ebp+0x14],ebx
1001a5e4:	jne    0x1001a619
1001a5e6:	push   esi
1001a5e7:	call   0x10020f5f
1001a5ec:	test   eax,eax
1001a5ee:	pop    ecx
1001a5ef:	je     0x1001a5fa
1001a5f1:	mov    DWORD PTR [ebp+0x14],0xa
1001a5f8:	jmp    0x1001a640
1001a5fa:	movzx  eax,WORD PTR [edi]
1001a5fd:	cmp    ax,0x78
1001a601:	je     0x1001a612
1001a603:	cmp    ax,0x58
1001a607:	je     0x1001a612
1001a609:	mov    DWORD PTR [ebp+0x14],0x8
1001a610:	jmp    0x1001a640
1001a612:	mov    DWORD PTR [ebp+0x14],0x10
1001a619:	cmp    DWORD PTR [ebp+0x14],0x10
1001a61d:	jne    0x1001a640
1001a61f:	push   esi
1001a620:	call   0x10020f5f
1001a625:	test   eax,eax
1001a627:	pop    ecx
1001a628:	jne    0x1001a640
1001a62a:	movzx  eax,WORD PTR [edi]
1001a62d:	cmp    ax,0x78
1001a631:	je     0x1001a639
1001a633:	cmp    ax,0x58
1001a637:	jne    0x1001a640
1001a639:	inc    edi
1001a63a:	inc    edi
1001a63b:	movzx  esi,WORD PTR [edi]
1001a63e:	inc    edi
1001a63f:	inc    edi
1001a640:	or     eax,0xffffffff
1001a643:	xor    edx,edx
1001a645:	div    DWORD PTR [ebp+0x14]
1001a648:	mov    DWORD PTR [ebp-0x8],edx
1001a64b:	mov    ebx,eax
1001a64d:	push   esi
1001a64e:	call   0x10020f5f
1001a653:	cmp    eax,0xffffffff
1001a656:	pop    ecx
1001a657:	jne    0x1001a680
1001a659:	cmp    si,0x41
1001a65d:	jb     0x1001a665
1001a65f:	cmp    si,0x5a
1001a663:	jbe    0x1001a66e
1001a665:	lea    eax,[esi-0x61]
1001a668:	cmp    ax,0x19
1001a66c:	ja     0x1001a69f
1001a66e:	lea    eax,[esi-0x61]
1001a671:	cmp    ax,0x19
1001a675:	movzx  eax,si
1001a678:	ja     0x1001a67d
1001a67a:	sub    eax,0x20
1001a67d:	add    eax,0xffffffc9
1001a680:	cmp    eax,DWORD PTR [ebp+0x14]
1001a683:	jae    0x1001a69f
1001a685:	or     DWORD PTR [ebp+0x18],0x8
1001a689:	cmp    DWORD PTR [ebp-0x4],ebx
1001a68c:	jb     0x1001a6b7
1001a68e:	jne    0x1001a695
1001a690:	cmp    eax,DWORD PTR [ebp-0x8]
1001a693:	jbe    0x1001a6b7
1001a695:	or     DWORD PTR [ebp+0x18],0x4
1001a699:	cmp    DWORD PTR [ebp+0x10],0x0
1001a69d:	jne    0x1001a6c3
1001a69f:	mov    eax,DWORD PTR [ebp+0x18]
1001a6a2:	dec    edi
1001a6a3:	dec    edi
1001a6a4:	test   al,0x8
1001a6a6:	jne    0x1001a6ca
1001a6a8:	cmp    DWORD PTR [ebp+0x10],0x0
1001a6ac:	je     0x1001a6b1
1001a6ae:	mov    edi,DWORD PTR [ebp+0xc]
1001a6b1:	and    DWORD PTR [ebp-0x4],0x0
1001a6b5:	jmp    0x1001a715
1001a6b7:	mov    ecx,DWORD PTR [ebp-0x4]
1001a6ba:	imul   ecx,DWORD PTR [ebp+0x14]
1001a6be:	add    ecx,eax
1001a6c0:	mov    DWORD PTR [ebp-0x4],ecx
1001a6c3:	movzx  esi,WORD PTR [edi]
1001a6c6:	inc    edi
1001a6c7:	inc    edi
1001a6c8:	jmp    0x1001a64d
1001a6ca:	test   al,0x4
1001a6cc:	mov    esi,0x7fffffff
1001a6d1:	jne    0x1001a6ee
1001a6d3:	test   al,0x1
1001a6d5:	jne    0x1001a715
1001a6d7:	and    eax,0x2
1001a6da:	je     0x1001a6e5
1001a6dc:	cmp    DWORD PTR [ebp-0x4],0x80000000
1001a6e3:	ja     0x1001a6ee
1001a6e5:	test   eax,eax
1001a6e7:	jne    0x1001a715
1001a6e9:	cmp    DWORD PTR [ebp-0x4],esi
1001a6ec:	jbe    0x1001a715
1001a6ee:	call   0x10019ffe
1001a6f3:	test   BYTE PTR [ebp+0x18],0x1
1001a6f7:	mov    DWORD PTR [eax],0x22
1001a6fd:	je     0x1001a705
1001a6ff:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a703:	jmp    0x1001a715
1001a705:	mov    al,BYTE PTR [ebp+0x18]
1001a708:	and    al,0x2
1001a70a:	neg    al
1001a70c:	sbb    eax,eax
1001a70e:	neg    eax
1001a710:	add    eax,esi
1001a712:	mov    DWORD PTR [ebp-0x4],eax
1001a715:	mov    eax,DWORD PTR [ebp+0x10]
1001a718:	test   eax,eax
1001a71a:	pop    esi
1001a71b:	je     0x1001a71f
1001a71d:	mov    DWORD PTR [eax],edi
1001a71f:	test   BYTE PTR [ebp+0x18],0x2
1001a723:	je     0x1001a728
1001a725:	neg    DWORD PTR [ebp-0x4]
1001a728:	cmp    BYTE PTR [ebp-0xc],0x0
1001a72c:	je     0x1001a735
1001a72e:	mov    eax,DWORD PTR [ebp-0x10]
1001a731:	and    DWORD PTR [eax+0x70],0xfffffffd
1001a735:	mov    eax,DWORD PTR [ebp-0x4]
1001a738:	pop    edi
1001a739:	pop    ebx
1001a73a:	leave  
1001a73b:	ret    
1001a73c:	push   ebp
1001a73d:	mov    ebp,esp
1001a73f:	xor    eax,eax
1001a741:	cmp    DWORD PTR ds:0x100662e8,eax
1001a747:	push   eax
1001a748:	push   DWORD PTR [ebp+0x10]
1001a74b:	push   DWORD PTR [ebp+0xc]
1001a74e:	push   DWORD PTR [ebp+0x8]
1001a751:	jne    0x1001a75a
1001a753:	push   0x10064fa0
1001a758:	jmp    0x1001a75b
1001a75a:	push   eax
1001a75b:	call   0x1001a545
1001a760:	add    esp,0x14
1001a763:	pop    ebp
1001a764:	ret    
1001a765:	push   ebp
1001a766:	mov    ebp,esp
1001a768:	sub    esp,0x30
1001a76b:	push   ebx
1001a76c:	push   esi
1001a76d:	push   DWORD PTR [ebp+0x8]
1001a770:	lea    ecx,[ebp-0x30]
1001a773:	call   0x100165aa
1001a778:	mov    eax,DWORD PTR [ebp+0x10]
1001a77b:	mov    ebx,DWORD PTR [ebp+0xc]
1001a77e:	xor    esi,esi
1001a780:	cmp    eax,esi
1001a782:	je     0x1001a786
1001a784:	mov    DWORD PTR [eax],ebx
1001a786:	cmp    ebx,esi
1001a788:	jne    0x1001a7b8
1001a78a:	call   0x10019ffe
1001a78f:	push   esi
1001a790:	push   esi
1001a791:	push   esi
1001a792:	push   esi
1001a793:	push   esi
1001a794:	mov    DWORD PTR [eax],0x16
1001a79a:	call   0x1001611f
1001a79f:	add    esp,0x14
1001a7a2:	cmp    BYTE PTR [ebp-0x24],0x0
1001a7a6:	je     0x1001a7af
1001a7a8:	mov    eax,DWORD PTR [ebp-0x28]
1001a7ab:	and    DWORD PTR [eax+0x70],0xfffffffd
1001a7af:	xor    eax,eax
1001a7b1:	xor    edx,edx
1001a7b3:	jmp    0x1001aa11
1001a7b8:	cmp    DWORD PTR [ebp+0x14],esi
1001a7bb:	je     0x1001a7c9
1001a7bd:	cmp    DWORD PTR [ebp+0x14],0x2
1001a7c1:	jl     0x1001a78a
1001a7c3:	cmp    DWORD PTR [ebp+0x14],0x24
1001a7c7:	jg     0x1001a78a
1001a7c9:	push   edi
1001a7ca:	mov    DWORD PTR [ebp-0x8],esi
1001a7cd:	mov    DWORD PTR [ebp-0x4],esi
1001a7d0:	movzx  esi,WORD PTR [ebx]
1001a7d3:	lea    edi,[ebx+0x2]
1001a7d6:	jmp    0x1001a7dd
1001a7d8:	movzx  esi,WORD PTR [edi]
1001a7db:	inc    edi
1001a7dc:	inc    edi
1001a7dd:	lea    eax,[ebp-0x30]
1001a7e0:	push   eax
1001a7e1:	push   0x8
1001a7e3:	push   esi
1001a7e4:	call   0x1001cd0a
1001a7e9:	add    esp,0xc
1001a7ec:	test   eax,eax
1001a7ee:	jne    0x1001a7d8
1001a7f0:	cmp    si,0x2d
1001a7f4:	jne    0x1001a7fc
1001a7f6:	or     DWORD PTR [ebp+0x18],0x2
1001a7fa:	jmp    0x1001a802
1001a7fc:	cmp    si,0x2b
1001a800:	jne    0x1001a807
1001a802:	movzx  esi,WORD PTR [edi]
1001a805:	inc    edi
1001a806:	inc    edi
1001a807:	mov    eax,DWORD PTR [ebp+0x14]
1001a80a:	test   eax,eax
1001a80c:	jl     0x1001a9f6
1001a812:	cmp    eax,0x1
1001a815:	je     0x1001a9f6
1001a81b:	cmp    eax,0x24
1001a81e:	jg     0x1001a9f6
1001a824:	test   eax,eax
1001a826:	push   0x10
1001a828:	pop    ebx
1001a829:	jne    0x1001a85a
1001a82b:	push   esi
1001a82c:	call   0x10020f5f
1001a831:	test   eax,eax
1001a833:	pop    ecx
1001a834:	je     0x1001a83f
1001a836:	mov    DWORD PTR [ebp+0x14],0xa
1001a83d:	jmp    0x1001a880
1001a83f:	movzx  eax,WORD PTR [edi]
1001a842:	cmp    ax,0x78
1001a846:	je     0x1001a857
1001a848:	cmp    ax,0x58
1001a84c:	je     0x1001a857
1001a84e:	mov    DWORD PTR [ebp+0x14],0x8
1001a855:	jmp    0x1001a880
1001a857:	mov    DWORD PTR [ebp+0x14],ebx
1001a85a:	cmp    DWORD PTR [ebp+0x14],ebx
1001a85d:	jne    0x1001a880
1001a85f:	push   esi
1001a860:	call   0x10020f5f
1001a865:	test   eax,eax
1001a867:	pop    ecx
1001a868:	jne    0x1001a880
1001a86a:	movzx  eax,WORD PTR [edi]
1001a86d:	cmp    ax,0x78
1001a871:	je     0x1001a879
1001a873:	cmp    ax,0x58
1001a877:	jne    0x1001a880
1001a879:	inc    edi
1001a87a:	inc    edi
1001a87b:	movzx  esi,WORD PTR [edi]
1001a87e:	inc    edi
1001a87f:	inc    edi
1001a880:	mov    eax,DWORD PTR [ebp+0x14]
1001a883:	cdq    
1001a884:	push   edx
1001a885:	push   eax
1001a886:	push   0xffffffff
1001a888:	push   0xffffffff
1001a88a:	mov    DWORD PTR [ebp-0x20],eax
1001a88d:	mov    DWORD PTR [ebp-0x1c],edx
1001a890:	call   0x1001e580
1001a895:	mov    DWORD PTR [ebp-0x18],ecx
1001a898:	mov    DWORD PTR [ebp-0x14],ebx
1001a89b:	mov    DWORD PTR [ebp-0x10],eax
1001a89e:	mov    DWORD PTR [ebp-0xc],edx
1001a8a1:	push   esi
1001a8a2:	call   0x10020f5f
1001a8a7:	mov    ebx,eax
1001a8a9:	cmp    ebx,0xffffffff
1001a8ac:	pop    ecx
1001a8ad:	jne    0x1001a8d6
1001a8af:	cmp    si,0x41
1001a8b3:	jb     0x1001a8bb
1001a8b5:	cmp    si,0x5a
1001a8b9:	jbe    0x1001a8c4
1001a8bb:	lea    eax,[esi-0x61]
1001a8be:	cmp    ax,0x19
1001a8c2:	ja     0x1001a916
1001a8c4:	lea    eax,[esi-0x61]
1001a8c7:	cmp    ax,0x19
1001a8cb:	movzx  eax,si
1001a8ce:	ja     0x1001a8d3
1001a8d0:	sub    eax,0x20
1001a8d3:	lea    ebx,[eax-0x37]
1001a8d6:	cmp    ebx,DWORD PTR [ebp+0x14]
1001a8d9:	jae    0x1001a916
1001a8db:	mov    ecx,DWORD PTR [ebp-0x4]
1001a8de:	or     DWORD PTR [ebp+0x18],0x8
1001a8e2:	cmp    ecx,DWORD PTR [ebp-0xc]
1001a8e5:	jb     0x1001a934
1001a8e7:	ja     0x1001a8f1
1001a8e9:	mov    eax,DWORD PTR [ebp-0x8]
1001a8ec:	cmp    eax,DWORD PTR [ebp-0x10]
1001a8ef:	jb     0x1001a934
1001a8f1:	mov    eax,DWORD PTR [ebp-0x10]
1001a8f4:	cmp    DWORD PTR [ebp-0x8],eax
1001a8f7:	jne    0x1001a90c
1001a8f9:	cmp    ecx,DWORD PTR [ebp-0xc]
1001a8fc:	jne    0x1001a90c
1001a8fe:	xor    eax,eax
1001a900:	cmp    eax,DWORD PTR [ebp-0x14]
1001a903:	jb     0x1001a934
1001a905:	ja     0x1001a90c
1001a907:	cmp    ebx,DWORD PTR [ebp-0x18]
1001a90a:	jbe    0x1001a934
1001a90c:	or     DWORD PTR [ebp+0x18],0x4
1001a910:	cmp    DWORD PTR [ebp+0x10],0x0
1001a914:	jne    0x1001a94f
1001a916:	mov    eax,DWORD PTR [ebp+0x18]
1001a919:	dec    edi
1001a91a:	dec    edi
1001a91b:	test   al,0x8
1001a91d:	jne    0x1001a959
1001a91f:	xor    eax,eax
1001a921:	cmp    DWORD PTR [ebp+0x10],eax
1001a924:	je     0x1001a929
1001a926:	mov    edi,DWORD PTR [ebp+0xc]
1001a929:	mov    DWORD PTR [ebp-0x8],eax
1001a92c:	mov    DWORD PTR [ebp-0x4],eax
1001a92f:	jmp    0x1001a9bf
1001a934:	push   ecx
1001a935:	push   DWORD PTR [ebp-0x8]
1001a938:	push   DWORD PTR [ebp-0x1c]
1001a93b:	push   DWORD PTR [ebp-0x20]
1001a93e:	call   0x10017270
1001a943:	xor    ecx,ecx
1001a945:	add    eax,ebx
1001a947:	adc    edx,ecx
1001a949:	mov    DWORD PTR [ebp-0x8],eax
1001a94c:	mov    DWORD PTR [ebp-0x4],edx
1001a94f:	movzx  esi,WORD PTR [edi]
1001a952:	inc    edi
1001a953:	inc    edi
1001a954:	jmp    0x1001a8a1
1001a959:	test   al,0x4
1001a95b:	mov    esi,0x7fffffff
1001a960:	mov    ebx,0x80000000
1001a965:	jne    0x1001a98e
1001a967:	test   al,0x1
1001a969:	jne    0x1001a9bf
1001a96b:	and    eax,0x2
1001a96e:	je     0x1001a97d
1001a970:	cmp    DWORD PTR [ebp-0x4],ebx
1001a973:	ja     0x1001a98e
1001a975:	jb     0x1001a97d
1001a977:	cmp    DWORD PTR [ebp-0x8],0x0
1001a97b:	ja     0x1001a98e
1001a97d:	test   eax,eax
1001a97f:	jne    0x1001a9bf
1001a981:	cmp    DWORD PTR [ebp-0x4],esi
1001a984:	jb     0x1001a9bf
1001a986:	ja     0x1001a98e
1001a988:	cmp    DWORD PTR [ebp-0x8],0xffffffff
1001a98c:	jbe    0x1001a9bf
1001a98e:	call   0x10019ffe
1001a993:	test   BYTE PTR [ebp+0x18],0x1
1001a997:	mov    DWORD PTR [eax],0x22
1001a99d:	je     0x1001a9a9
1001a99f:	or     DWORD PTR [ebp-0x8],0xffffffff
1001a9a3:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a9a7:	jmp    0x1001a9bf
1001a9a9:	test   BYTE PTR [ebp+0x18],0x2
1001a9ad:	je     0x1001a9b8
1001a9af:	and    DWORD PTR [ebp-0x8],0x0
1001a9b3:	mov    DWORD PTR [ebp-0x4],ebx
1001a9b6:	jmp    0x1001a9bf
1001a9b8:	or     DWORD PTR [ebp-0x8],0xffffffff
1001a9bc:	mov    DWORD PTR [ebp-0x4],esi
1001a9bf:	mov    eax,DWORD PTR [ebp+0x10]
1001a9c2:	test   eax,eax
1001a9c4:	je     0x1001a9c8
1001a9c6:	mov    DWORD PTR [eax],edi
1001a9c8:	test   BYTE PTR [ebp+0x18],0x2
1001a9cc:	je     0x1001a9e1
1001a9ce:	mov    eax,DWORD PTR [ebp-0x8]
1001a9d1:	mov    ecx,DWORD PTR [ebp-0x4]
1001a9d4:	neg    eax
1001a9d6:	adc    ecx,0x0
1001a9d9:	neg    ecx
1001a9db:	mov    DWORD PTR [ebp-0x8],eax
1001a9de:	mov    DWORD PTR [ebp-0x4],ecx
1001a9e1:	cmp    BYTE PTR [ebp-0x24],0x0
1001a9e5:	je     0x1001a9ee
1001a9e7:	mov    eax,DWORD PTR [ebp-0x28]
1001a9ea:	and    DWORD PTR [eax+0x70],0xfffffffd
1001a9ee:	mov    eax,DWORD PTR [ebp-0x8]
1001a9f1:	mov    edx,DWORD PTR [ebp-0x4]
1001a9f4:	jmp    0x1001aa10
1001a9f6:	mov    eax,DWORD PTR [ebp+0x10]
1001a9f9:	test   eax,eax
1001a9fb:	je     0x1001a9ff
1001a9fd:	mov    DWORD PTR [eax],ebx
1001a9ff:	cmp    BYTE PTR [ebp-0x24],0x0
1001aa03:	je     0x1001aa0c
1001aa05:	mov    eax,DWORD PTR [ebp-0x28]
1001aa08:	and    DWORD PTR [eax+0x70],0xfffffffd
1001aa0c:	xor    eax,eax
1001aa0e:	xor    edx,edx
1001aa10:	pop    edi
1001aa11:	pop    esi
1001aa12:	pop    ebx
1001aa13:	leave  
1001aa14:	ret    
1001aa15:	push   ebp
1001aa16:	mov    ebp,esp
1001aa18:	xor    eax,eax
1001aa1a:	cmp    DWORD PTR ds:0x100662e8,eax
1001aa20:	push   eax
1001aa21:	push   DWORD PTR [ebp+0x10]
1001aa24:	push   DWORD PTR [ebp+0xc]
1001aa27:	push   DWORD PTR [ebp+0x8]
1001aa2a:	jne    0x1001aa33
1001aa2c:	push   0x10064fa0
1001aa31:	jmp    0x1001aa34
1001aa33:	push   eax
1001aa34:	call   0x1001a765
1001aa39:	add    esp,0x14
1001aa3c:	pop    ebp
1001aa3d:	ret    
1001aa3e:	push   ebp
1001aa3f:	mov    ebp,esp
1001aa41:	sub    esp,0x4
1001aa44:	mov    DWORD PTR [ebp-0x4],edi
1001aa47:	mov    edi,DWORD PTR [ebp+0x8]
1001aa4a:	mov    ecx,DWORD PTR [ebp+0xc]
1001aa4d:	shr    ecx,0x7
1001aa50:	pxor   xmm0,xmm0
1001aa54:	jmp    0x1001aa5e
1001aa56:	lea    esp,[esp+0x0]
1001aa5d:	nop
1001aa5e:	movdqa XMMWORD PTR [edi],xmm0
1001aa62:	movdqa XMMWORD PTR [edi+0x10],xmm0
1001aa67:	movdqa XMMWORD PTR [edi+0x20],xmm0
1001aa6c:	movdqa XMMWORD PTR [edi+0x30],xmm0
1001aa71:	movdqa XMMWORD PTR [edi+0x40],xmm0
1001aa76:	movdqa XMMWORD PTR [edi+0x50],xmm0
1001aa7b:	movdqa XMMWORD PTR [edi+0x60],xmm0
1001aa80:	movdqa XMMWORD PTR [edi+0x70],xmm0
1001aa85:	lea    edi,[edi+0x80]
1001aa8b:	dec    ecx
1001aa8c:	jne    0x1001aa5e
1001aa8e:	mov    edi,DWORD PTR [ebp-0x4]
1001aa91:	mov    esp,ebp
1001aa93:	pop    ebp
1001aa94:	ret    
1001aa95:	push   ebp
1001aa96:	mov    ebp,esp
1001aa98:	sub    esp,0x10
1001aa9b:	mov    DWORD PTR [ebp-0x4],edi
1001aa9e:	mov    eax,DWORD PTR [ebp+0x8]
1001aaa1:	cdq    
1001aaa2:	mov    edi,eax
1001aaa4:	xor    edi,edx
1001aaa6:	sub    edi,edx
1001aaa8:	and    edi,0xf
1001aaab:	xor    edi,edx
1001aaad:	sub    edi,edx
1001aaaf:	test   edi,edi
1001aab1:	jne    0x1001aaef
1001aab3:	mov    ecx,DWORD PTR [ebp+0x10]
1001aab6:	mov    edx,ecx
1001aab8:	and    edx,0x7f
1001aabb:	mov    DWORD PTR [ebp-0xc],edx
1001aabe:	cmp    ecx,edx
1001aac0:	je     0x1001aad4
1001aac2:	sub    ecx,edx
1001aac4:	push   ecx
1001aac5:	push   eax
1001aac6:	call   0x1001aa3e
1001aacb:	add    esp,0x8
1001aace:	mov    eax,DWORD PTR [ebp+0x8]
1001aad1:	mov    edx,DWORD PTR [ebp-0xc]
1001aad4:	test   edx,edx
1001aad6:	je     0x1001ab1d
1001aad8:	add    eax,DWORD PTR [ebp+0x10]
1001aadb:	sub    eax,edx
1001aadd:	mov    DWORD PTR [ebp-0x8],eax
1001aae0:	xor    eax,eax
1001aae2:	mov    edi,DWORD PTR [ebp-0x8]
1001aae5:	mov    ecx,DWORD PTR [ebp-0xc]
1001aae8:	rep stos BYTE PTR es:[edi],al
1001aaea:	mov    eax,DWORD PTR [ebp+0x8]
1001aaed:	jmp    0x1001ab1d
1001aaef:	neg    edi
1001aaf1:	add    edi,0x10
1001aaf4:	mov    DWORD PTR [ebp-0x10],edi
1001aaf7:	xor    eax,eax
1001aaf9:	mov    edi,DWORD PTR [ebp+0x8]
1001aafc:	mov    ecx,DWORD PTR [ebp-0x10]
1001aaff:	rep stos BYTE PTR es:[edi],al
1001ab01:	mov    eax,DWORD PTR [ebp-0x10]
1001ab04:	mov    ecx,DWORD PTR [ebp+0x8]
1001ab07:	mov    edx,DWORD PTR [ebp+0x10]
1001ab0a:	add    ecx,eax
1001ab0c:	sub    edx,eax
1001ab0e:	push   edx
1001ab0f:	push   0x0
1001ab11:	push   ecx
1001ab12:	call   0x1001aa95
1001ab17:	add    esp,0xc
1001ab1a:	mov    eax,DWORD PTR [ebp+0x8]
1001ab1d:	mov    edi,DWORD PTR [ebp-0x4]
1001ab20:	mov    esp,ebp
1001ab22:	pop    ebp
1001ab23:	ret    
1001ab24:	and    DWORD PTR ds:0x1006809c,0x0
1001ab2b:	call   0x10021131
1001ab30:	mov    ds:0x1006809c,eax
1001ab35:	xor    eax,eax
1001ab37:	ret    
1001ab38:	sub    eax,0x3a4
1001ab3d:	je     0x1001ab61
1001ab3f:	sub    eax,0x4
1001ab42:	je     0x1001ab5b
1001ab44:	sub    eax,0xd
1001ab47:	je     0x1001ab55
1001ab49:	dec    eax
1001ab4a:	je     0x1001ab4f
1001ab4c:	xor    eax,eax
1001ab4e:	ret    
1001ab4f:	mov    eax,0x404
1001ab54:	ret    
1001ab55:	mov    eax,0x412
1001ab5a:	ret    
1001ab5b:	mov    eax,0x804
1001ab60:	ret    
1001ab61:	mov    eax,0x411
1001ab66:	ret    
1001ab67:	push   ebx
1001ab68:	push   ebp
1001ab69:	push   esi
1001ab6a:	push   edi
1001ab6b:	mov    ebp,0x101
1001ab70:	mov    esi,eax
1001ab72:	push   ebp
1001ab73:	xor    edi,edi
1001ab75:	lea    ebx,[esi+0x1c]
1001ab78:	push   edi
1001ab79:	push   ebx
1001ab7a:	call   0x10016530
1001ab7f:	mov    DWORD PTR [esi+0x4],edi
1001ab82:	mov    DWORD PTR [esi+0x8],edi
1001ab85:	mov    DWORD PTR [esi+0xc],edi
1001ab88:	xor    eax,eax
1001ab8a:	lea    edi,[esi+0x10]
1001ab8d:	stos   DWORD PTR es:[edi],eax
1001ab8e:	stos   DWORD PTR es:[edi],eax
1001ab8f:	stos   DWORD PTR es:[edi],eax
1001ab90:	mov    eax,0x10064990
1001ab95:	add    esp,0xc
1001ab98:	sub    eax,esi
1001ab9a:	mov    cl,BYTE PTR [eax+ebx*1]
1001ab9d:	mov    BYTE PTR [ebx],cl
1001ab9f:	inc    ebx
1001aba0:	dec    ebp
1001aba1:	jne    0x1001ab9a
1001aba3:	lea    ecx,[esi+0x11d]
1001aba9:	mov    esi,0x100
1001abae:	mov    dl,BYTE PTR [ecx+eax*1]
1001abb1:	mov    BYTE PTR [ecx],dl
1001abb3:	inc    ecx
1001abb4:	dec    esi
1001abb5:	jne    0x1001abae
1001abb7:	pop    edi
1001abb8:	pop    esi
1001abb9:	pop    ebp
1001abba:	pop    ebx
1001abbb:	ret    
1001abbc:	push   ebp
1001abbd:	lea    ebp,[esp-0x49c]
1001abc4:	sub    esp,0x51c
1001abca:	mov    eax,ds:0x10064694
1001abcf:	xor    eax,ebp
1001abd1:	mov    DWORD PTR [ebp+0x498],eax
1001abd7:	push   ebx
1001abd8:	push   edi
1001abd9:	lea    eax,[ebp-0x7c]
1001abdc:	push   eax
1001abdd:	push   DWORD PTR [esi+0x4]
1001abe0:	call   DWORD PTR ds:0x1002c214
1001abe6:	test   eax,eax
1001abe8:	mov    edi,0x100
1001abed:	je     0x1001ace2
1001abf3:	xor    eax,eax
1001abf5:	mov    BYTE PTR [ebp+eax*1+0x398],al
1001abfc:	inc    eax
1001abfd:	cmp    eax,edi
1001abff:	jb     0x1001abf5
1001ac01:	mov    al,BYTE PTR [ebp-0x76]
1001ac04:	test   al,al
1001ac06:	mov    BYTE PTR [ebp+0x398],0x20
1001ac0d:	je     0x1001ac3a
1001ac0f:	lea    ebx,[ebp-0x75]
1001ac12:	movzx  ecx,al
1001ac15:	movzx  eax,BYTE PTR [ebx]
1001ac18:	cmp    ecx,eax
1001ac1a:	ja     0x1001ac32
1001ac1c:	sub    eax,ecx
1001ac1e:	inc    eax
1001ac1f:	push   eax
1001ac20:	lea    edx,[ebp+ecx*1+0x398]
1001ac27:	push   0x20
1001ac29:	push   edx
1001ac2a:	call   0x10016530
1001ac2f:	add    esp,0xc
1001ac32:	inc    ebx
1001ac33:	mov    al,BYTE PTR [ebx]
1001ac35:	inc    ebx
1001ac36:	test   al,al
1001ac38:	jne    0x1001ac12
1001ac3a:	push   0x0
1001ac3c:	push   DWORD PTR [esi+0xc]
1001ac3f:	lea    eax,[ebp-0x68]
1001ac42:	push   DWORD PTR [esi+0x4]
1001ac45:	push   eax
1001ac46:	push   edi
1001ac47:	lea    eax,[ebp+0x398]
1001ac4d:	push   eax
1001ac4e:	push   0x1
1001ac50:	push   0x0
1001ac52:	call   0x10020761
1001ac57:	xor    ebx,ebx
1001ac59:	push   ebx
1001ac5a:	push   DWORD PTR [esi+0x4]
1001ac5d:	lea    eax,[ebp+0x298]
1001ac63:	push   edi
1001ac64:	push   eax
1001ac65:	push   edi
1001ac66:	lea    eax,[ebp+0x398]
1001ac6c:	push   eax
1001ac6d:	push   edi
1001ac6e:	push   DWORD PTR [esi+0xc]
1001ac71:	push   ebx
1001ac72:	call   0x10018562
1001ac77:	add    esp,0x44
1001ac7a:	push   ebx
1001ac7b:	push   DWORD PTR [esi+0x4]
1001ac7e:	lea    eax,[ebp+0x198]
1001ac84:	push   edi
1001ac85:	push   eax
1001ac86:	push   edi
1001ac87:	lea    eax,[ebp+0x398]
1001ac8d:	push   eax
1001ac8e:	push   0x200
1001ac93:	push   DWORD PTR [esi+0xc]
1001ac96:	push   ebx
1001ac97:	call   0x10018562
1001ac9c:	add    esp,0x24
1001ac9f:	xor    eax,eax
1001aca1:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
1001aca6:	test   cl,0x1
1001aca9:	je     0x1001acb9
1001acab:	or     BYTE PTR [esi+eax*1+0x1d],0x10
1001acb0:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
1001acb7:	jmp    0x1001acca
1001acb9:	test   cl,0x2
1001acbc:	je     0x1001acd3
1001acbe:	or     BYTE PTR [esi+eax*1+0x1d],0x20
1001acc3:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
1001acca:	mov    BYTE PTR [esi+eax*1+0x11d],cl
1001acd1:	jmp    0x1001acdb
1001acd3:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
1001acdb:	inc    eax
1001acdc:	cmp    eax,edi
1001acde:	jb     0x1001aca1
1001ace0:	jmp    0x1001ad2f
1001ace2:	lea    eax,[esi+0x11d]
1001ace8:	mov    DWORD PTR [ebp-0x80],0xffffff9f
1001acef:	xor    ecx,ecx
1001acf1:	sub    DWORD PTR [ebp-0x80],eax
1001acf4:	mov    edx,DWORD PTR [ebp-0x80]
1001acf7:	lea    eax,[esi+ecx*1+0x11d]
1001acfe:	add    edx,eax
1001ad00:	lea    ebx,[edx+0x20]
1001ad03:	cmp    ebx,0x19
1001ad06:	ja     0x1001ad14
1001ad08:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
1001ad0d:	mov    dl,cl
1001ad0f:	add    dl,0x20
1001ad12:	jmp    0x1001ad23
1001ad14:	cmp    edx,0x19
1001ad17:	ja     0x1001ad27
1001ad19:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
1001ad1e:	mov    dl,cl
1001ad20:	sub    dl,0x20
1001ad23:	mov    BYTE PTR [eax],dl
1001ad25:	jmp    0x1001ad2a
1001ad27:	mov    BYTE PTR [eax],0x0
1001ad2a:	inc    ecx
1001ad2b:	cmp    ecx,edi
1001ad2d:	jb     0x1001acf4
1001ad2f:	mov    ecx,DWORD PTR [ebp+0x498]
1001ad35:	pop    edi
1001ad36:	xor    ecx,ebp
1001ad38:	pop    ebx
1001ad39:	call   0x10015adb
1001ad3e:	add    ebp,0x49c
1001ad44:	leave  
1001ad45:	ret    
1001ad46:	push   0xc
1001ad48:	push   0x100587c8
1001ad4d:	call   0x10017a38
1001ad52:	call   0x10019816
1001ad57:	mov    edi,eax
1001ad59:	mov    eax,ds:0x10064eb0
1001ad5e:	test   DWORD PTR [edi+0x70],eax
1001ad61:	je     0x1001ad80
1001ad63:	cmp    DWORD PTR [edi+0x6c],0x0
1001ad67:	je     0x1001ad80
1001ad69:	mov    esi,DWORD PTR [edi+0x68]
1001ad6c:	test   esi,esi
1001ad6e:	jne    0x1001ad78
1001ad70:	push   0x20
1001ad72:	call   0x10019cbf
1001ad77:	pop    ecx
1001ad78:	mov    eax,esi
1001ad7a:	call   0x10017a7d
1001ad7f:	ret    
1001ad80:	push   0xd
1001ad82:	call   0x1001b6ab
1001ad87:	pop    ecx
1001ad88:	and    DWORD PTR [ebp-0x4],0x0
1001ad8c:	mov    esi,DWORD PTR [edi+0x68]
1001ad8f:	mov    DWORD PTR [ebp-0x1c],esi
1001ad92:	cmp    esi,DWORD PTR ds:0x10064db8
1001ad98:	je     0x1001add0
1001ad9a:	test   esi,esi
1001ad9c:	je     0x1001adb8
1001ad9e:	push   esi
1001ad9f:	call   DWORD PTR ds:0x1002c0ec
1001ada5:	test   eax,eax
1001ada7:	jne    0x1001adb8
1001ada9:	cmp    esi,0x10064990
1001adaf:	je     0x1001adb8
1001adb1:	push   esi
1001adb2:	call   0x10016b35
1001adb7:	pop    ecx
1001adb8:	mov    eax,ds:0x10064db8
1001adbd:	mov    DWORD PTR [edi+0x68],eax
1001adc0:	mov    esi,DWORD PTR ds:0x10064db8
1001adc6:	mov    DWORD PTR [ebp-0x1c],esi
1001adc9:	push   esi
1001adca:	call   DWORD PTR ds:0x1002c0e0
1001add0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001add7:	call   0x1001ade1
1001addc:	jmp    0x1001ad6c
1001adde:	mov    esi,DWORD PTR [ebp-0x1c]
1001ade1:	push   0xd
1001ade3:	call   0x1001b5d3
1001ade8:	pop    ecx
1001ade9:	ret    
1001adea:	push   ebp
1001adeb:	mov    ebp,esp
1001aded:	sub    esp,0x10
1001adf0:	push   ebx
1001adf1:	xor    ebx,ebx
1001adf3:	push   ebx
1001adf4:	lea    ecx,[ebp-0x10]
1001adf7:	call   0x100165aa
1001adfc:	cmp    esi,0xfffffffe
1001adff:	mov    DWORD PTR ds:0x10066684,ebx
1001ae05:	jne    0x1001ae25
1001ae07:	mov    DWORD PTR ds:0x10066684,0x1
1001ae11:	call   DWORD PTR ds:0x1002c228
1001ae17:	cmp    BYTE PTR [ebp-0x4],bl
1001ae1a:	je     0x1001ae61
1001ae1c:	mov    ecx,DWORD PTR [ebp-0x8]
1001ae1f:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001ae23:	jmp    0x1001ae61
1001ae25:	cmp    esi,0xfffffffd
1001ae28:	jne    0x1001ae3c
1001ae2a:	mov    DWORD PTR ds:0x10066684,0x1
1001ae34:	call   DWORD PTR ds:0x1002c1b4
1001ae3a:	jmp    0x1001ae17
1001ae3c:	cmp    esi,0xfffffffc
1001ae3f:	jne    0x1001ae53
1001ae41:	mov    eax,DWORD PTR [ebp-0x10]
1001ae44:	mov    eax,DWORD PTR [eax+0x4]
1001ae47:	mov    DWORD PTR ds:0x10066684,0x1
1001ae51:	jmp    0x1001ae17
1001ae53:	cmp    BYTE PTR [ebp-0x4],bl
1001ae56:	je     0x1001ae5f
1001ae58:	mov    eax,DWORD PTR [ebp-0x8]
1001ae5b:	and    DWORD PTR [eax+0x70],0xfffffffd
1001ae5f:	mov    eax,esi
1001ae61:	pop    ebx
1001ae62:	leave  
1001ae63:	ret    
1001ae64:	push   ebp
1001ae65:	mov    ebp,esp
1001ae67:	sub    esp,0x20
1001ae6a:	mov    eax,ds:0x10064694
1001ae6f:	xor    eax,ebp
1001ae71:	mov    DWORD PTR [ebp-0x4],eax
1001ae74:	push   ebx
1001ae75:	mov    ebx,DWORD PTR [ebp+0xc]
1001ae78:	push   esi
1001ae79:	mov    esi,DWORD PTR [ebp+0x8]
1001ae7c:	push   edi
1001ae7d:	call   0x1001adea
1001ae82:	mov    edi,eax
1001ae84:	xor    esi,esi
1001ae86:	cmp    edi,esi
1001ae88:	mov    DWORD PTR [ebp+0x8],edi
1001ae8b:	jne    0x1001ae9b
1001ae8d:	mov    eax,ebx
1001ae8f:	call   0x1001ab67
1001ae94:	xor    eax,eax
1001ae96:	jmp    0x1001b02e
1001ae9b:	mov    DWORD PTR [ebp-0x1c],esi
1001ae9e:	xor    eax,eax
1001aea0:	cmp    DWORD PTR [eax+0x10064dc0],edi
1001aea6:	je     0x1001af3d
1001aeac:	inc    DWORD PTR [ebp-0x1c]
1001aeaf:	add    eax,0x30
1001aeb2:	cmp    eax,0xf0
1001aeb7:	jb     0x1001aea0
1001aeb9:	cmp    edi,0xfde8
1001aebf:	je     0x1001b02b
1001aec5:	cmp    edi,0xfde9
1001aecb:	je     0x1001b02b
1001aed1:	movzx  eax,di
1001aed4:	push   eax
1001aed5:	call   DWORD PTR ds:0x1002c22c
1001aedb:	test   eax,eax
1001aedd:	je     0x1001b02b
1001aee3:	lea    eax,[ebp-0x18]
1001aee6:	push   eax
1001aee7:	push   edi
1001aee8:	call   DWORD PTR ds:0x1002c214
1001aeee:	test   eax,eax
1001aef0:	je     0x1001b01f
1001aef6:	push   0x101
1001aefb:	lea    eax,[ebx+0x1c]
1001aefe:	push   esi
1001aeff:	push   eax
1001af00:	call   0x10016530
1001af05:	xor    edx,edx
1001af07:	inc    edx
1001af08:	add    esp,0xc
1001af0b:	cmp    DWORD PTR [ebp-0x18],edx
1001af0e:	mov    DWORD PTR [ebx+0x4],edi
1001af11:	mov    DWORD PTR [ebx+0xc],esi
1001af14:	jbe    0x1001b012
1001af1a:	cmp    BYTE PTR [ebp-0x12],0x0
1001af1e:	je     0x1001aff3
1001af24:	lea    esi,[ebp-0x11]
1001af27:	mov    cl,BYTE PTR [esi]
1001af29:	test   cl,cl
1001af2b:	je     0x1001aff3
1001af31:	movzx  eax,BYTE PTR [esi-0x1]
1001af35:	movzx  ecx,cl
1001af38:	jmp    0x1001afe3
1001af3d:	push   0x101
1001af42:	lea    eax,[ebx+0x1c]
1001af45:	push   esi
1001af46:	push   eax
1001af47:	call   0x10016530
1001af4c:	mov    ecx,DWORD PTR [ebp-0x1c]
1001af4f:	add    esp,0xc
1001af52:	imul   ecx,ecx,0x30
1001af55:	mov    DWORD PTR [ebp-0x20],esi
1001af58:	lea    esi,[ecx+0x10064dd0]
1001af5e:	mov    DWORD PTR [ebp-0x1c],esi
1001af61:	jmp    0x1001af8d
1001af63:	mov    al,BYTE PTR [esi+0x1]
1001af66:	test   al,al
1001af68:	je     0x1001af92
1001af6a:	movzx  edi,BYTE PTR [esi]
1001af6d:	movzx  eax,al
1001af70:	jmp    0x1001af84
1001af72:	mov    eax,DWORD PTR [ebp-0x20]
1001af75:	mov    al,BYTE PTR [eax+0x10064dbc]
1001af7b:	or     BYTE PTR [ebx+edi*1+0x1d],al
1001af7f:	movzx  eax,BYTE PTR [esi+0x1]
1001af83:	inc    edi
1001af84:	cmp    edi,eax
1001af86:	jbe    0x1001af72
1001af88:	mov    edi,DWORD PTR [ebp+0x8]
1001af8b:	inc    esi
1001af8c:	inc    esi
1001af8d:	cmp    BYTE PTR [esi],0x0
1001af90:	jne    0x1001af63
1001af92:	mov    esi,DWORD PTR [ebp-0x1c]
1001af95:	inc    DWORD PTR [ebp-0x20]
1001af98:	add    esi,0x8
1001af9b:	cmp    DWORD PTR [ebp-0x20],0x4
1001af9f:	mov    DWORD PTR [ebp-0x1c],esi
1001afa2:	jb     0x1001af8d
1001afa4:	mov    eax,edi
1001afa6:	mov    DWORD PTR [ebx+0x4],edi
1001afa9:	mov    DWORD PTR [ebx+0x8],0x1
1001afb0:	call   0x1001ab38
1001afb5:	push   0x6
1001afb7:	mov    DWORD PTR [ebx+0xc],eax
1001afba:	lea    eax,[ebx+0x10]
1001afbd:	lea    ecx,[ecx+0x10064dc4]
1001afc3:	pop    edx
1001afc4:	mov    si,WORD PTR [ecx]
1001afc7:	inc    ecx
1001afc8:	mov    WORD PTR [eax],si
1001afcb:	inc    ecx
1001afcc:	inc    eax
1001afcd:	inc    eax
1001afce:	dec    edx
1001afcf:	jne    0x1001afc4
1001afd1:	mov    esi,ebx
1001afd3:	call   0x1001abbc
1001afd8:	jmp    0x1001ae94
1001afdd:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
1001afe2:	inc    eax
1001afe3:	cmp    eax,ecx
1001afe5:	jbe    0x1001afdd
1001afe7:	inc    esi
1001afe8:	inc    esi
1001afe9:	cmp    BYTE PTR [esi-0x1],0x0
1001afed:	jne    0x1001af27
1001aff3:	lea    eax,[ebx+0x1e]
1001aff6:	mov    ecx,0xfe
1001affb:	or     BYTE PTR [eax],0x8
1001affe:	inc    eax
1001afff:	dec    ecx
1001b000:	jne    0x1001affb
1001b002:	mov    eax,DWORD PTR [ebx+0x4]
1001b005:	call   0x1001ab38
1001b00a:	mov    DWORD PTR [ebx+0xc],eax
1001b00d:	mov    DWORD PTR [ebx+0x8],edx
1001b010:	jmp    0x1001b015
1001b012:	mov    DWORD PTR [ebx+0x8],esi
1001b015:	xor    eax,eax
1001b017:	lea    edi,[ebx+0x10]
1001b01a:	stos   DWORD PTR es:[edi],eax
1001b01b:	stos   DWORD PTR es:[edi],eax
1001b01c:	stos   DWORD PTR es:[edi],eax
1001b01d:	jmp    0x1001afd1
1001b01f:	cmp    DWORD PTR ds:0x10066684,esi
1001b025:	jne    0x1001ae8d
1001b02b:	or     eax,0xffffffff
1001b02e:	mov    ecx,DWORD PTR [ebp-0x4]
1001b031:	pop    edi
1001b032:	pop    esi
1001b033:	xor    ecx,ebp
1001b035:	pop    ebx
1001b036:	call   0x10015adb
1001b03b:	leave  
1001b03c:	ret    
1001b03d:	push   0x14
1001b03f:	push   0x100587e8
1001b044:	call   0x10017a38
1001b049:	or     DWORD PTR [ebp-0x20],0xffffffff
1001b04d:	call   0x10019816
1001b052:	mov    edi,eax
1001b054:	mov    DWORD PTR [ebp-0x24],edi
1001b057:	call   0x1001ad46
1001b05c:	mov    ebx,DWORD PTR [edi+0x68]
1001b05f:	mov    esi,DWORD PTR [ebp+0x8]
1001b062:	call   0x1001adea
1001b067:	mov    DWORD PTR [ebp+0x8],eax
1001b06a:	cmp    eax,DWORD PTR [ebx+0x4]
1001b06d:	je     0x1001b1ca
1001b073:	push   0x220
1001b078:	call   0x100185a5
1001b07d:	pop    ecx
1001b07e:	mov    ebx,eax
1001b080:	test   ebx,ebx
1001b082:	je     0x1001b1ce
1001b088:	mov    ecx,0x88
1001b08d:	mov    esi,DWORD PTR [edi+0x68]
1001b090:	mov    edi,ebx
1001b092:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001b094:	and    DWORD PTR [ebx],0x0
1001b097:	push   ebx
1001b098:	push   DWORD PTR [ebp+0x8]
1001b09b:	call   0x1001ae64
1001b0a0:	pop    ecx
1001b0a1:	pop    ecx
1001b0a2:	mov    DWORD PTR [ebp-0x20],eax
1001b0a5:	test   eax,eax
1001b0a7:	jne    0x1001b1a9
1001b0ad:	mov    esi,DWORD PTR [ebp-0x24]
1001b0b0:	push   DWORD PTR [esi+0x68]
1001b0b3:	call   DWORD PTR ds:0x1002c0ec
1001b0b9:	test   eax,eax
1001b0bb:	jne    0x1001b0ce
1001b0bd:	mov    eax,DWORD PTR [esi+0x68]
1001b0c0:	cmp    eax,0x10064990
1001b0c5:	je     0x1001b0ce
1001b0c7:	push   eax
1001b0c8:	call   0x10016b35
1001b0cd:	pop    ecx
1001b0ce:	mov    DWORD PTR [esi+0x68],ebx
1001b0d1:	push   ebx
1001b0d2:	mov    edi,DWORD PTR ds:0x1002c0e0
1001b0d8:	call   edi
1001b0da:	test   BYTE PTR [esi+0x70],0x2
1001b0de:	jne    0x1001b1ce
1001b0e4:	test   BYTE PTR ds:0x10064eb0,0x1
1001b0eb:	jne    0x1001b1ce
1001b0f1:	push   0xd
1001b0f3:	call   0x1001b6ab
1001b0f8:	pop    ecx
1001b0f9:	and    DWORD PTR [ebp-0x4],0x0
1001b0fd:	mov    eax,DWORD PTR [ebx+0x4]
1001b100:	mov    ds:0x10066694,eax
1001b105:	mov    eax,DWORD PTR [ebx+0x8]
1001b108:	mov    ds:0x10066698,eax
1001b10d:	mov    eax,DWORD PTR [ebx+0xc]
1001b110:	mov    ds:0x1006669c,eax
1001b115:	xor    eax,eax
1001b117:	mov    DWORD PTR [ebp-0x1c],eax
1001b11a:	cmp    eax,0x5
1001b11d:	jge    0x1001b12f
1001b11f:	mov    cx,WORD PTR [ebx+eax*2+0x10]
1001b124:	mov    WORD PTR [eax*2+0x10066688],cx
1001b12c:	inc    eax
1001b12d:	jmp    0x1001b117
1001b12f:	xor    eax,eax
1001b131:	mov    DWORD PTR [ebp-0x1c],eax
1001b134:	cmp    eax,0x101
1001b139:	jge    0x1001b148
1001b13b:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
1001b13f:	mov    BYTE PTR [eax+0x10064bb0],cl
1001b145:	inc    eax
1001b146:	jmp    0x1001b131
1001b148:	xor    eax,eax
1001b14a:	mov    DWORD PTR [ebp-0x1c],eax
1001b14d:	cmp    eax,0x100
1001b152:	jge    0x1001b164
1001b154:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
1001b15b:	mov    BYTE PTR [eax+0x10064cb8],cl
1001b161:	inc    eax
1001b162:	jmp    0x1001b14a
1001b164:	push   DWORD PTR ds:0x10064db8
1001b16a:	call   DWORD PTR ds:0x1002c0ec
1001b170:	test   eax,eax
1001b172:	jne    0x1001b187
1001b174:	mov    eax,ds:0x10064db8
1001b179:	cmp    eax,0x10064990
1001b17e:	je     0x1001b187
1001b180:	push   eax
1001b181:	call   0x10016b35
1001b186:	pop    ecx
1001b187:	mov    DWORD PTR ds:0x10064db8,ebx
1001b18d:	push   ebx
1001b18e:	call   edi
1001b190:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001b197:	call   0x1001b19e
1001b19c:	jmp    0x1001b1ce
1001b19e:	push   0xd
1001b1a0:	call   0x1001b5d3
1001b1a5:	pop    ecx
1001b1a6:	ret    
1001b1a7:	jmp    0x1001b1ce
1001b1a9:	cmp    eax,0xffffffff
1001b1ac:	jne    0x1001b1ce
1001b1ae:	cmp    ebx,0x10064990
1001b1b4:	je     0x1001b1bd
1001b1b6:	push   ebx
1001b1b7:	call   0x10016b35
1001b1bc:	pop    ecx
1001b1bd:	call   0x10019ffe
1001b1c2:	mov    DWORD PTR [eax],0x16
1001b1c8:	jmp    0x1001b1ce
1001b1ca:	and    DWORD PTR [ebp-0x20],0x0
1001b1ce:	mov    eax,DWORD PTR [ebp-0x20]
1001b1d1:	call   0x10017a7d
1001b1d6:	ret    
1001b1d7:	cmp    DWORD PTR ds:0x100680b4,0x0
1001b1de:	jne    0x1001b1f2
1001b1e0:	push   0xfffffffd
1001b1e2:	call   0x1001b03d
1001b1e7:	pop    ecx
1001b1e8:	mov    DWORD PTR ds:0x100680b4,0x1
1001b1f2:	xor    eax,eax
1001b1f4:	ret    
1001b1f5:	push   ebp
1001b1f6:	mov    ebp,esp
1001b1f8:	mov    eax,0xffff
1001b1fd:	sub    esp,0x14
1001b200:	cmp    WORD PTR [ebp+0x8],ax
1001b204:	je     0x1001b2a0
1001b20a:	push   ebx
1001b20b:	push   DWORD PTR [ebp+0xc]
1001b20e:	lea    ecx,[ebp-0x14]
1001b211:	call   0x100165aa
1001b216:	mov    ecx,DWORD PTR [ebp-0x14]
1001b219:	mov    edx,DWORD PTR [ecx+0x14]
1001b21c:	xor    ebx,ebx
1001b21e:	cmp    edx,ebx
1001b220:	jne    0x1001b236
1001b222:	mov    eax,DWORD PTR [ebp+0x8]
1001b225:	lea    ecx,[eax-0x41]
1001b228:	cmp    cx,0x19
1001b22c:	ja     0x1001b231
1001b22e:	add    eax,0x20
1001b231:	movzx  eax,ax
1001b234:	jmp    0x1001b293
1001b236:	mov    eax,0x100
1001b23b:	cmp    WORD PTR [ebp+0x8],ax
1001b23f:	jae    0x1001b26a
1001b241:	lea    eax,[ebp-0x14]
1001b244:	push   eax
1001b245:	push   0x1
1001b247:	push   DWORD PTR [ebp+0x8]
1001b24a:	call   0x1001cd0a
1001b24f:	add    esp,0xc
1001b252:	test   eax,eax
1001b254:	movzx  eax,WORD PTR [ebp+0x8]
1001b258:	je     0x1001b293
1001b25a:	mov    ecx,DWORD PTR [ebp-0x14]
1001b25d:	mov    ecx,DWORD PTR [ecx+0xcc]
1001b263:	movzx  ax,BYTE PTR [ecx+eax*1]
1001b268:	jmp    0x1001b231
1001b26a:	push   DWORD PTR [ecx+0x4]
1001b26d:	lea    ecx,[ebp-0x4]
1001b270:	push   0x1
1001b272:	push   ecx
1001b273:	push   0x1
1001b275:	lea    ecx,[ebp+0x8]
1001b278:	push   ecx
1001b279:	push   eax
1001b27a:	push   edx
1001b27b:	lea    eax,[ebp-0x14]
1001b27e:	push   eax
1001b27f:	call   0x1001ffed
1001b284:	add    esp,0x20
1001b287:	test   eax,eax
1001b289:	movzx  eax,WORD PTR [ebp+0x8]
1001b28d:	je     0x1001b293
1001b28f:	movzx  eax,WORD PTR [ebp-0x4]
1001b293:	cmp    BYTE PTR [ebp-0x8],bl
1001b296:	je     0x1001b29f
1001b298:	mov    ecx,DWORD PTR [ebp-0xc]
1001b29b:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001b29f:	pop    ebx
1001b2a0:	leave  
1001b2a1:	ret    
1001b2a2:	push   ebp
1001b2a3:	mov    ebp,esp
1001b2a5:	sub    esp,0x8
1001b2a8:	mov    DWORD PTR [ebp-0x4],edi
1001b2ab:	mov    DWORD PTR [ebp-0x8],esi
1001b2ae:	mov    esi,DWORD PTR [ebp+0xc]
1001b2b1:	mov    edi,DWORD PTR [ebp+0x8]
1001b2b4:	mov    ecx,DWORD PTR [ebp+0x10]
1001b2b7:	shr    ecx,0x7
1001b2ba:	jmp    0x1001b2c2
1001b2bc:	lea    ebx,[ebx+0x0]
1001b2c2:	movdqa xmm0,XMMWORD PTR [esi]
1001b2c6:	movdqa xmm1,XMMWORD PTR [esi+0x10]
1001b2cb:	movdqa xmm2,XMMWORD PTR [esi+0x20]
1001b2d0:	movdqa xmm3,XMMWORD PTR [esi+0x30]
1001b2d5:	movdqa XMMWORD PTR [edi],xmm0
1001b2d9:	movdqa XMMWORD PTR [edi+0x10],xmm1
1001b2de:	movdqa XMMWORD PTR [edi+0x20],xmm2
1001b2e3:	movdqa XMMWORD PTR [edi+0x30],xmm3
1001b2e8:	movdqa xmm4,XMMWORD PTR [esi+0x40]
1001b2ed:	movdqa xmm5,XMMWORD PTR [esi+0x50]
1001b2f2:	movdqa xmm6,XMMWORD PTR [esi+0x60]
1001b2f7:	movdqa xmm7,XMMWORD PTR [esi+0x70]
1001b2fc:	movdqa XMMWORD PTR [edi+0x40],xmm4
1001b301:	movdqa XMMWORD PTR [edi+0x50],xmm5
1001b306:	movdqa XMMWORD PTR [edi+0x60],xmm6
1001b30b:	movdqa XMMWORD PTR [edi+0x70],xmm7
1001b310:	lea    esi,[esi+0x80]
1001b316:	lea    edi,[edi+0x80]
1001b31c:	dec    ecx
1001b31d:	jne    0x1001b2c2
1001b31f:	mov    esi,DWORD PTR [ebp-0x8]
1001b322:	mov    edi,DWORD PTR [ebp-0x4]
1001b325:	mov    esp,ebp
1001b327:	pop    ebp
1001b328:	ret    
1001b329:	push   ebp
1001b32a:	mov    ebp,esp
1001b32c:	sub    esp,0x1c
1001b32f:	mov    DWORD PTR [ebp-0xc],edi
1001b332:	mov    DWORD PTR [ebp-0x8],esi
1001b335:	mov    DWORD PTR [ebp-0x4],ebx
1001b338:	mov    ebx,DWORD PTR [ebp+0xc]
1001b33b:	mov    eax,ebx
1001b33d:	cdq    
1001b33e:	mov    ecx,eax
1001b340:	mov    eax,DWORD PTR [ebp+0x8]
1001b343:	xor    ecx,edx
1001b345:	sub    ecx,edx
1001b347:	and    ecx,0xf
1001b34a:	xor    ecx,edx
1001b34c:	sub    ecx,edx
1001b34e:	cdq    
1001b34f:	mov    edi,eax
1001b351:	xor    edi,edx
1001b353:	sub    edi,edx
1001b355:	and    edi,0xf
1001b358:	xor    edi,edx
1001b35a:	sub    edi,edx
1001b35c:	mov    edx,ecx
1001b35e:	or     edx,edi
1001b360:	jne    0x1001b3ac
1001b362:	mov    esi,DWORD PTR [ebp+0x10]
1001b365:	mov    ecx,esi
1001b367:	and    ecx,0x7f
1001b36a:	mov    DWORD PTR [ebp-0x18],ecx
1001b36d:	cmp    esi,ecx
1001b36f:	je     0x1001b384
1001b371:	sub    esi,ecx
1001b373:	push   esi
1001b374:	push   ebx
1001b375:	push   eax
1001b376:	call   0x1001b2a2
1001b37b:	add    esp,0xc
1001b37e:	mov    eax,DWORD PTR [ebp+0x8]
1001b381:	mov    ecx,DWORD PTR [ebp-0x18]
1001b384:	test   ecx,ecx
1001b386:	je     0x1001b3ff
1001b388:	mov    ebx,DWORD PTR [ebp+0x10]
1001b38b:	mov    edx,DWORD PTR [ebp+0xc]
1001b38e:	add    edx,ebx
1001b390:	sub    edx,ecx
1001b392:	mov    DWORD PTR [ebp-0x14],edx
1001b395:	add    ebx,eax
1001b397:	sub    ebx,ecx
1001b399:	mov    DWORD PTR [ebp-0x10],ebx
1001b39c:	mov    esi,DWORD PTR [ebp-0x14]
1001b39f:	mov    edi,DWORD PTR [ebp-0x10]
1001b3a2:	mov    ecx,DWORD PTR [ebp-0x18]
1001b3a5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001b3a7:	mov    eax,DWORD PTR [ebp+0x8]
1001b3aa:	jmp    0x1001b3ff
1001b3ac:	cmp    ecx,edi
1001b3ae:	jne    0x1001b3e5
1001b3b0:	neg    ecx
1001b3b2:	add    ecx,0x10
1001b3b5:	mov    DWORD PTR [ebp-0x1c],ecx
1001b3b8:	mov    esi,DWORD PTR [ebp+0xc]
1001b3bb:	mov    edi,DWORD PTR [ebp+0x8]
1001b3be:	mov    ecx,DWORD PTR [ebp-0x1c]
1001b3c1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001b3c3:	mov    ecx,DWORD PTR [ebp+0x8]
1001b3c6:	add    ecx,DWORD PTR [ebp-0x1c]
1001b3c9:	mov    edx,DWORD PTR [ebp+0xc]
1001b3cc:	add    edx,DWORD PTR [ebp-0x1c]
1001b3cf:	mov    eax,DWORD PTR [ebp+0x10]
1001b3d2:	sub    eax,DWORD PTR [ebp-0x1c]
1001b3d5:	push   eax
1001b3d6:	push   edx
1001b3d7:	push   ecx
1001b3d8:	call   0x1001b329
1001b3dd:	add    esp,0xc
1001b3e0:	mov    eax,DWORD PTR [ebp+0x8]
1001b3e3:	jmp    0x1001b3ff
1001b3e5:	mov    esi,DWORD PTR [ebp+0xc]
1001b3e8:	mov    edi,DWORD PTR [ebp+0x8]
1001b3eb:	mov    ecx,DWORD PTR [ebp+0x10]
1001b3ee:	mov    edx,ecx
1001b3f0:	shr    ecx,0x2
1001b3f3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001b3f5:	mov    ecx,edx
1001b3f7:	and    ecx,0x3
1001b3fa:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001b3fc:	mov    eax,DWORD PTR [ebp+0x8]
1001b3ff:	mov    ebx,DWORD PTR [ebp-0x4]
1001b402:	mov    esi,DWORD PTR [ebp-0x8]
1001b405:	mov    edi,DWORD PTR [ebp-0xc]
1001b408:	mov    esp,ebp
1001b40a:	pop    ebp
1001b40b:	ret    
1001b40c:	push   ebp
1001b40d:	mov    ebp,esp
1001b40f:	push   ecx
1001b410:	push   ecx
1001b411:	push   esi
1001b412:	lea    eax,[ebp-0x4]
1001b415:	xor    esi,esi
1001b417:	push   eax
1001b418:	mov    DWORD PTR [ebp-0x4],esi
1001b41b:	mov    DWORD PTR [ebp-0x8],esi
1001b41e:	call   0x10019d68
1001b423:	test   eax,eax
1001b425:	pop    ecx
1001b426:	je     0x1001b435
1001b428:	push   esi
1001b429:	push   esi
1001b42a:	push   esi
1001b42b:	push   esi
1001b42c:	push   esi
1001b42d:	call   0x10016023
1001b432:	add    esp,0x14
1001b435:	lea    eax,[ebp-0x8]
1001b438:	push   eax
1001b439:	call   0x10019d9f
1001b43e:	test   eax,eax
1001b440:	pop    ecx
1001b441:	je     0x1001b450
1001b443:	push   esi
1001b444:	push   esi
1001b445:	push   esi
1001b446:	push   esi
1001b447:	push   esi
1001b448:	call   0x10016023
1001b44d:	add    esp,0x14
1001b450:	cmp    DWORD PTR [ebp-0x4],0x2
1001b454:	pop    esi
1001b455:	jne    0x1001b462
1001b457:	cmp    DWORD PTR [ebp-0x8],0x5
1001b45b:	jb     0x1001b462
1001b45d:	xor    eax,eax
1001b45f:	inc    eax
1001b460:	leave  
1001b461:	ret    
1001b462:	push   0x3
1001b464:	pop    eax
1001b465:	leave  
1001b466:	ret    
1001b467:	xor    eax,eax
1001b469:	cmp    DWORD PTR [esp+0x4],eax
1001b46d:	push   0x0
1001b46f:	sete   al
1001b472:	push   0x1000
1001b477:	push   eax
1001b478:	call   DWORD PTR ds:0x1002c230
1001b47e:	test   eax,eax
1001b480:	mov    ds:0x100666c0,eax
1001b485:	jne    0x1001b48a
1001b487:	xor    eax,eax
1001b489:	ret    
1001b48a:	call   0x1001b40c
1001b48f:	cmp    eax,0x3
1001b492:	mov    ds:0x10068098,eax
1001b497:	jne    0x1001b4bd
1001b499:	push   0x3f8
1001b49e:	call   0x1001b6dc
1001b4a3:	test   eax,eax
1001b4a5:	pop    ecx
1001b4a6:	jne    0x1001b4bd
1001b4a8:	push   DWORD PTR ds:0x100666c0
1001b4ae:	call   DWORD PTR ds:0x1002c1c4
1001b4b4:	and    DWORD PTR ds:0x100666c0,0x0
1001b4bb:	jmp    0x1001b487
1001b4bd:	xor    eax,eax
1001b4bf:	inc    eax
1001b4c0:	ret    
1001b4c1:	push   ebp
1001b4c2:	xor    ebp,ebp
1001b4c4:	cmp    DWORD PTR ds:0x10068098,0x3
1001b4cb:	jne    0x1001b521
1001b4cd:	push   ebx
1001b4ce:	mov    ebx,DWORD PTR ds:0x1002c1cc
1001b4d4:	push   edi
1001b4d5:	xor    edi,edi
1001b4d7:	cmp    DWORD PTR ds:0x10068080,ebp
1001b4dd:	jle    0x1001b510
1001b4df:	push   esi
1001b4e0:	mov    esi,DWORD PTR ds:0x10068084
1001b4e6:	add    esi,0x10
1001b4e9:	push   0x8000
1001b4ee:	push   ebp
1001b4ef:	push   DWORD PTR [esi-0x4]
1001b4f2:	call   DWORD PTR ds:0x1002c1ac
1001b4f8:	push   DWORD PTR [esi]
1001b4fa:	push   ebp
1001b4fb:	push   DWORD PTR ds:0x100666c0
1001b501:	call   ebx
1001b503:	add    esi,0x14
1001b506:	inc    edi
1001b507:	cmp    edi,DWORD PTR ds:0x10068080
1001b50d:	jl     0x1001b4e9
1001b50f:	pop    esi
1001b510:	push   DWORD PTR ds:0x10068084
1001b516:	push   ebp
1001b517:	push   DWORD PTR ds:0x100666c0
1001b51d:	call   ebx
1001b51f:	pop    edi
1001b520:	pop    ebx
1001b521:	push   DWORD PTR ds:0x100666c0
1001b527:	call   DWORD PTR ds:0x1002c1c4
1001b52d:	mov    DWORD PTR ds:0x100666c0,ebp
1001b533:	pop    ebp
1001b534:	ret    
1001b535:	push   esi
1001b536:	push   edi
1001b537:	xor    esi,esi
1001b539:	mov    edi,0x100666c8
1001b53e:	cmp    DWORD PTR [esi*8+0x10064fb4],0x1
1001b546:	jne    0x1001b566
1001b548:	lea    eax,[esi*8+0x10064fb0]
1001b54f:	mov    DWORD PTR [eax],edi
1001b551:	push   0xfa0
1001b556:	push   DWORD PTR [eax]
1001b558:	add    edi,0x18
1001b55b:	call   0x10020e9a
1001b560:	test   eax,eax
1001b562:	pop    ecx
1001b563:	pop    ecx
1001b564:	je     0x1001b572
1001b566:	inc    esi
1001b567:	cmp    esi,0x24
1001b56a:	jl     0x1001b53e
1001b56c:	xor    eax,eax
1001b56e:	inc    eax
1001b56f:	pop    edi
1001b570:	pop    esi
1001b571:	ret    
1001b572:	and    DWORD PTR [esi*8+0x10064fb0],0x0
1001b57a:	xor    eax,eax
1001b57c:	jmp    0x1001b56f
1001b57e:	push   ebx
1001b57f:	mov    ebx,DWORD PTR ds:0x1002c1ec
1001b585:	push   esi
1001b586:	mov    esi,0x10064fb0
1001b58b:	push   edi
1001b58c:	mov    edi,DWORD PTR [esi]
1001b58e:	test   edi,edi
1001b590:	je     0x1001b5a5
1001b592:	cmp    DWORD PTR [esi+0x4],0x1
1001b596:	je     0x1001b5a5
1001b598:	push   edi
1001b599:	call   ebx
1001b59b:	push   edi
1001b59c:	call   0x10016b35
1001b5a1:	and    DWORD PTR [esi],0x0
1001b5a4:	pop    ecx
1001b5a5:	add    esi,0x8
1001b5a8:	cmp    esi,0x100650d0
1001b5ae:	jl     0x1001b58c
1001b5b0:	mov    esi,0x10064fb0
1001b5b5:	pop    edi
1001b5b6:	mov    eax,DWORD PTR [esi]
1001b5b8:	test   eax,eax
1001b5ba:	je     0x1001b5c5
1001b5bc:	cmp    DWORD PTR [esi+0x4],0x1
1001b5c0:	jne    0x1001b5c5
1001b5c2:	push   eax
1001b5c3:	call   ebx
1001b5c5:	add    esi,0x8
1001b5c8:	cmp    esi,0x100650d0
1001b5ce:	jl     0x1001b5b6
1001b5d0:	pop    esi
1001b5d1:	pop    ebx
1001b5d2:	ret    
1001b5d3:	push   ebp
1001b5d4:	mov    ebp,esp
1001b5d6:	mov    eax,DWORD PTR [ebp+0x8]
1001b5d9:	push   DWORD PTR [eax*8+0x10064fb0]
1001b5e0:	call   DWORD PTR ds:0x1002c1e4
1001b5e6:	pop    ebp
1001b5e7:	ret    
1001b5e8:	push   0xc
1001b5ea:	push   0x10058808
1001b5ef:	call   0x10017a38
1001b5f4:	xor    edi,edi
1001b5f6:	inc    edi
1001b5f7:	mov    DWORD PTR [ebp-0x1c],edi
1001b5fa:	xor    ebx,ebx
1001b5fc:	cmp    DWORD PTR ds:0x100666c0,ebx
1001b602:	jne    0x1001b61c
1001b604:	call   0x1001c37b
1001b609:	push   0x1e
1001b60b:	call   0x1001c1db
1001b610:	push   0xff
1001b615:	call   0x10019d09
1001b61a:	pop    ecx
1001b61b:	pop    ecx
1001b61c:	mov    esi,DWORD PTR [ebp+0x8]
1001b61f:	lea    esi,[esi*8+0x10064fb0]
1001b626:	cmp    DWORD PTR [esi],ebx
1001b628:	je     0x1001b62e
1001b62a:	mov    eax,edi
1001b62c:	jmp    0x1001b69c
1001b62e:	push   0x18
1001b630:	call   0x100185a5
1001b635:	pop    ecx
1001b636:	mov    edi,eax
1001b638:	cmp    edi,ebx
1001b63a:	jne    0x1001b64b
1001b63c:	call   0x10019ffe
1001b641:	mov    DWORD PTR [eax],0xc
1001b647:	xor    eax,eax
1001b649:	jmp    0x1001b69c
1001b64b:	push   0xa
1001b64d:	call   0x1001b6ab
1001b652:	pop    ecx
1001b653:	mov    DWORD PTR [ebp-0x4],ebx
1001b656:	cmp    DWORD PTR [esi],ebx
1001b658:	jne    0x1001b686
1001b65a:	push   0xfa0
1001b65f:	push   edi
1001b660:	call   0x10020e9a
1001b665:	pop    ecx
1001b666:	pop    ecx
1001b667:	test   eax,eax
1001b669:	jne    0x1001b682
1001b66b:	push   edi
1001b66c:	call   0x10016b35
1001b671:	pop    ecx
1001b672:	call   0x10019ffe
1001b677:	mov    DWORD PTR [eax],0xc
1001b67d:	mov    DWORD PTR [ebp-0x1c],ebx
1001b680:	jmp    0x1001b68d
1001b682:	mov    DWORD PTR [esi],edi
1001b684:	jmp    0x1001b68d
1001b686:	push   edi
1001b687:	call   0x10016b35
1001b68c:	pop    ecx
1001b68d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001b694:	call   0x1001b6a2
1001b699:	mov    eax,DWORD PTR [ebp-0x1c]
1001b69c:	call   0x10017a7d
1001b6a1:	ret    
1001b6a2:	push   0xa
1001b6a4:	call   0x1001b5d3
1001b6a9:	pop    ecx
1001b6aa:	ret    
1001b6ab:	push   ebp
1001b6ac:	mov    ebp,esp
1001b6ae:	mov    eax,DWORD PTR [ebp+0x8]
1001b6b1:	push   esi
1001b6b2:	lea    esi,[eax*8+0x10064fb0]
1001b6b9:	cmp    DWORD PTR [esi],0x0
1001b6bc:	jne    0x1001b6d1
1001b6be:	push   eax
1001b6bf:	call   0x1001b5e8
1001b6c4:	test   eax,eax
1001b6c6:	pop    ecx
1001b6c7:	jne    0x1001b6d1
1001b6c9:	push   0x11
1001b6cb:	call   0x10019cbf
1001b6d0:	pop    ecx
1001b6d1:	push   DWORD PTR [esi]
1001b6d3:	call   DWORD PTR ds:0x1002c1e0
1001b6d9:	pop    esi
1001b6da:	pop    ebp
1001b6db:	ret    
1001b6dc:	push   0x140
1001b6e1:	push   0x0
1001b6e3:	push   DWORD PTR ds:0x100666c0
1001b6e9:	call   DWORD PTR ds:0x1002c1c8
1001b6ef:	test   eax,eax
1001b6f1:	mov    ds:0x10068084,eax
1001b6f6:	jne    0x1001b6f9
1001b6f8:	ret    
1001b6f9:	mov    ecx,DWORD PTR [esp+0x4]
1001b6fd:	and    DWORD PTR ds:0x10066818,0x0
1001b704:	and    DWORD PTR ds:0x10068080,0x0
1001b70b:	mov    ds:0x1006808c,eax
1001b710:	xor    eax,eax
1001b712:	mov    DWORD PTR ds:0x10068088,ecx
1001b718:	mov    DWORD PTR ds:0x10068090,0x10
1001b722:	inc    eax
1001b723:	ret    
1001b724:	mov    ecx,DWORD PTR ds:0x10068080
1001b72a:	mov    eax,ds:0x10068084
1001b72f:	imul   ecx,ecx,0x14
1001b732:	add    ecx,eax
1001b734:	jmp    0x1001b748
1001b736:	mov    edx,DWORD PTR [esp+0x4]
1001b73a:	sub    edx,DWORD PTR [eax+0xc]
1001b73d:	cmp    edx,0x100000
1001b743:	jb     0x1001b74e
1001b745:	add    eax,0x14
1001b748:	cmp    eax,ecx
1001b74a:	jb     0x1001b736
1001b74c:	xor    eax,eax
1001b74e:	ret    
1001b74f:	push   ebp
1001b750:	mov    ebp,esp
1001b752:	sub    esp,0x10
1001b755:	mov    ecx,DWORD PTR [ebp+0x8]
1001b758:	mov    eax,DWORD PTR [ecx+0x10]
1001b75b:	push   esi
1001b75c:	mov    esi,DWORD PTR [ebp+0xc]
1001b75f:	push   edi
1001b760:	mov    edi,esi
1001b762:	sub    edi,DWORD PTR [ecx+0xc]
1001b765:	add    esi,0xfffffffc
1001b768:	shr    edi,0xf
1001b76b:	mov    ecx,edi
1001b76d:	imul   ecx,ecx,0x204
1001b773:	lea    ecx,[ecx+eax*1+0x144]
1001b77a:	mov    DWORD PTR [ebp-0x10],ecx
1001b77d:	mov    ecx,DWORD PTR [esi]
1001b77f:	dec    ecx
1001b780:	test   cl,0x1
1001b783:	mov    DWORD PTR [ebp-0x4],ecx
1001b786:	jne    0x1001ba5f
1001b78c:	push   ebx
1001b78d:	lea    ebx,[ecx+esi*1]
1001b790:	mov    edx,DWORD PTR [ebx]
1001b792:	mov    DWORD PTR [ebp-0xc],edx
1001b795:	mov    edx,DWORD PTR [esi-0x4]
1001b798:	mov    DWORD PTR [ebp-0x8],edx
1001b79b:	mov    edx,DWORD PTR [ebp-0xc]
1001b79e:	test   dl,0x1
1001b7a1:	mov    DWORD PTR [ebp+0xc],ebx
1001b7a4:	jne    0x1001b81a
1001b7a6:	sar    edx,0x4
1001b7a9:	dec    edx
1001b7aa:	cmp    edx,0x3f
1001b7ad:	jbe    0x1001b7b2
1001b7af:	push   0x3f
1001b7b1:	pop    edx
1001b7b2:	mov    ecx,DWORD PTR [ebx+0x4]
1001b7b5:	cmp    ecx,DWORD PTR [ebx+0x8]
1001b7b8:	jne    0x1001b7fc
1001b7ba:	cmp    edx,0x20
1001b7bd:	mov    ebx,0x80000000
1001b7c2:	jae    0x1001b7dd
1001b7c4:	mov    ecx,edx
1001b7c6:	shr    ebx,cl
1001b7c8:	lea    ecx,[edx+eax*1+0x4]
1001b7cc:	not    ebx
1001b7ce:	and    DWORD PTR [eax+edi*4+0x44],ebx
1001b7d2:	dec    BYTE PTR [ecx]
1001b7d4:	jne    0x1001b7f9
1001b7d6:	mov    ecx,DWORD PTR [ebp+0x8]
1001b7d9:	and    DWORD PTR [ecx],ebx
1001b7db:	jmp    0x1001b7f9
1001b7dd:	lea    ecx,[edx-0x20]
1001b7e0:	shr    ebx,cl
1001b7e2:	lea    ecx,[edx+eax*1+0x4]
1001b7e6:	not    ebx
1001b7e8:	and    DWORD PTR [eax+edi*4+0xc4],ebx
1001b7ef:	dec    BYTE PTR [ecx]
1001b7f1:	jne    0x1001b7f9
1001b7f3:	mov    ecx,DWORD PTR [ebp+0x8]
1001b7f6:	and    DWORD PTR [ecx+0x4],ebx
1001b7f9:	mov    ebx,DWORD PTR [ebp+0xc]
1001b7fc:	mov    edx,DWORD PTR [ebx+0x8]
1001b7ff:	mov    ebx,DWORD PTR [ebx+0x4]
1001b802:	mov    ecx,DWORD PTR [ebp-0x4]
1001b805:	add    ecx,DWORD PTR [ebp-0xc]
1001b808:	mov    DWORD PTR [edx+0x4],ebx
1001b80b:	mov    edx,DWORD PTR [ebp+0xc]
1001b80e:	mov    ebx,DWORD PTR [edx+0x4]
1001b811:	mov    edx,DWORD PTR [edx+0x8]
1001b814:	mov    DWORD PTR [ebx+0x8],edx
1001b817:	mov    DWORD PTR [ebp-0x4],ecx
1001b81a:	mov    edx,ecx
1001b81c:	sar    edx,0x4
1001b81f:	dec    edx
1001b820:	cmp    edx,0x3f
1001b823:	jbe    0x1001b828
1001b825:	push   0x3f
1001b827:	pop    edx
1001b828:	mov    ebx,DWORD PTR [ebp-0x8]
1001b82b:	and    ebx,0x1
1001b82e:	mov    DWORD PTR [ebp-0xc],ebx
1001b831:	jne    0x1001b8c6
1001b837:	sub    esi,DWORD PTR [ebp-0x8]
1001b83a:	mov    ebx,DWORD PTR [ebp-0x8]
1001b83d:	sar    ebx,0x4
1001b840:	push   0x3f
1001b842:	mov    DWORD PTR [ebp+0xc],esi
1001b845:	dec    ebx
1001b846:	pop    esi
1001b847:	cmp    ebx,esi
1001b849:	jbe    0x1001b84d
1001b84b:	mov    ebx,esi
1001b84d:	add    ecx,DWORD PTR [ebp-0x8]
1001b850:	mov    edx,ecx
1001b852:	sar    edx,0x4
1001b855:	dec    edx
1001b856:	cmp    edx,esi
1001b858:	mov    DWORD PTR [ebp-0x4],ecx
1001b85b:	jbe    0x1001b85f
1001b85d:	mov    edx,esi
1001b85f:	cmp    ebx,edx
1001b861:	je     0x1001b8c1
1001b863:	mov    ecx,DWORD PTR [ebp+0xc]
1001b866:	mov    esi,DWORD PTR [ecx+0x4]
1001b869:	cmp    esi,DWORD PTR [ecx+0x8]
1001b86c:	jne    0x1001b8a9
1001b86e:	cmp    ebx,0x20
1001b871:	mov    esi,0x80000000
1001b876:	jae    0x1001b88f
1001b878:	mov    ecx,ebx
1001b87a:	shr    esi,cl
1001b87c:	not    esi
1001b87e:	and    DWORD PTR [eax+edi*4+0x44],esi
1001b882:	dec    BYTE PTR [ebx+eax*1+0x4]
1001b886:	jne    0x1001b8a9
1001b888:	mov    ecx,DWORD PTR [ebp+0x8]
1001b88b:	and    DWORD PTR [ecx],esi
1001b88d:	jmp    0x1001b8a9
1001b88f:	lea    ecx,[ebx-0x20]
1001b892:	shr    esi,cl
1001b894:	not    esi
1001b896:	and    DWORD PTR [eax+edi*4+0xc4],esi
1001b89d:	dec    BYTE PTR [ebx+eax*1+0x4]
1001b8a1:	jne    0x1001b8a9
1001b8a3:	mov    ecx,DWORD PTR [ebp+0x8]
1001b8a6:	and    DWORD PTR [ecx+0x4],esi
1001b8a9:	mov    ecx,DWORD PTR [ebp+0xc]
1001b8ac:	mov    esi,DWORD PTR [ecx+0x8]
1001b8af:	mov    ecx,DWORD PTR [ecx+0x4]
1001b8b2:	mov    DWORD PTR [esi+0x4],ecx
1001b8b5:	mov    ecx,DWORD PTR [ebp+0xc]
1001b8b8:	mov    esi,DWORD PTR [ecx+0x4]
1001b8bb:	mov    ecx,DWORD PTR [ecx+0x8]
1001b8be:	mov    DWORD PTR [esi+0x8],ecx
1001b8c1:	mov    esi,DWORD PTR [ebp+0xc]
1001b8c4:	jmp    0x1001b8c9
1001b8c6:	mov    ebx,DWORD PTR [ebp+0x8]
1001b8c9:	cmp    DWORD PTR [ebp-0xc],0x0
1001b8cd:	jne    0x1001b8d7
1001b8cf:	cmp    ebx,edx
1001b8d1:	je     0x1001b957
1001b8d7:	mov    ecx,DWORD PTR [ebp-0x10]
1001b8da:	lea    ecx,[ecx+edx*8]
1001b8dd:	mov    ebx,DWORD PTR [ecx+0x4]
1001b8e0:	mov    DWORD PTR [esi+0x8],ecx
1001b8e3:	mov    DWORD PTR [esi+0x4],ebx
1001b8e6:	mov    DWORD PTR [ecx+0x4],esi
1001b8e9:	mov    ecx,DWORD PTR [esi+0x4]
1001b8ec:	mov    DWORD PTR [ecx+0x8],esi
1001b8ef:	mov    ecx,DWORD PTR [esi+0x4]
1001b8f2:	cmp    ecx,DWORD PTR [esi+0x8]
1001b8f5:	jne    0x1001b957
1001b8f7:	mov    cl,BYTE PTR [edx+eax*1+0x4]
1001b8fb:	mov    BYTE PTR [ebp+0xf],cl
1001b8fe:	inc    cl
1001b900:	cmp    edx,0x20
1001b903:	mov    BYTE PTR [edx+eax*1+0x4],cl
1001b907:	jae    0x1001b92e
1001b909:	cmp    BYTE PTR [ebp+0xf],0x0
1001b90d:	jne    0x1001b91d
1001b90f:	mov    ecx,edx
1001b911:	mov    ebx,0x80000000
1001b916:	shr    ebx,cl
1001b918:	mov    ecx,DWORD PTR [ebp+0x8]
1001b91b:	or     DWORD PTR [ecx],ebx
1001b91d:	mov    ebx,0x80000000
1001b922:	mov    ecx,edx
1001b924:	shr    ebx,cl
1001b926:	lea    eax,[eax+edi*4+0x44]
1001b92a:	or     DWORD PTR [eax],ebx
1001b92c:	jmp    0x1001b957
1001b92e:	cmp    BYTE PTR [ebp+0xf],0x0
1001b932:	jne    0x1001b944
1001b934:	lea    ecx,[edx-0x20]
1001b937:	mov    ebx,0x80000000
1001b93c:	shr    ebx,cl
1001b93e:	mov    ecx,DWORD PTR [ebp+0x8]
1001b941:	or     DWORD PTR [ecx+0x4],ebx
1001b944:	lea    ecx,[edx-0x20]
1001b947:	mov    edx,0x80000000
1001b94c:	shr    edx,cl
1001b94e:	lea    eax,[eax+edi*4+0xc4]
1001b955:	or     DWORD PTR [eax],edx
1001b957:	mov    eax,DWORD PTR [ebp-0x4]
1001b95a:	mov    DWORD PTR [esi],eax
1001b95c:	mov    DWORD PTR [eax+esi*1-0x4],eax
1001b960:	mov    eax,DWORD PTR [ebp-0x10]
1001b963:	dec    DWORD PTR [eax]
1001b965:	jne    0x1001ba5e
1001b96b:	mov    eax,ds:0x10066818
1001b970:	test   eax,eax
1001b972:	je     0x1001ba50
1001b978:	mov    ecx,DWORD PTR ds:0x10068094
1001b97e:	mov    esi,DWORD PTR ds:0x1002c1ac
1001b984:	push   0x4000
1001b989:	shl    ecx,0xf
1001b98c:	add    ecx,DWORD PTR [eax+0xc]
1001b98f:	mov    ebx,0x8000
1001b994:	push   ebx
1001b995:	push   ecx
1001b996:	call   esi
1001b998:	mov    ecx,DWORD PTR ds:0x10068094
1001b99e:	mov    eax,ds:0x10066818
1001b9a3:	mov    edx,0x80000000
1001b9a8:	shr    edx,cl
1001b9aa:	or     DWORD PTR [eax+0x8],edx
1001b9ad:	mov    eax,ds:0x10066818
1001b9b2:	mov    eax,DWORD PTR [eax+0x10]
1001b9b5:	mov    ecx,DWORD PTR ds:0x10068094
1001b9bb:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
1001b9c3:	mov    eax,ds:0x10066818
1001b9c8:	mov    eax,DWORD PTR [eax+0x10]
1001b9cb:	dec    BYTE PTR [eax+0x43]
1001b9ce:	mov    eax,ds:0x10066818
1001b9d3:	mov    ecx,DWORD PTR [eax+0x10]
1001b9d6:	cmp    BYTE PTR [ecx+0x43],0x0
1001b9da:	jne    0x1001b9e5
1001b9dc:	and    DWORD PTR [eax+0x4],0xfffffffe
1001b9e0:	mov    eax,ds:0x10066818
1001b9e5:	cmp    DWORD PTR [eax+0x8],0xffffffff
1001b9e9:	jne    0x1001ba50
1001b9eb:	push   ebx
1001b9ec:	push   0x0
1001b9ee:	push   DWORD PTR [eax+0xc]
1001b9f1:	call   esi
1001b9f3:	mov    eax,ds:0x10066818
1001b9f8:	push   DWORD PTR [eax+0x10]
1001b9fb:	push   0x0
1001b9fd:	push   DWORD PTR ds:0x100666c0
1001ba03:	call   DWORD PTR ds:0x1002c1cc
1001ba09:	mov    ecx,DWORD PTR ds:0x10068080
1001ba0f:	mov    eax,ds:0x10066818
1001ba14:	imul   ecx,ecx,0x14
1001ba17:	mov    edx,DWORD PTR ds:0x10068084
1001ba1d:	sub    ecx,eax
1001ba1f:	lea    ecx,[ecx+edx*1-0x14]
1001ba23:	push   ecx
1001ba24:	lea    ecx,[eax+0x14]
1001ba27:	push   ecx
1001ba28:	push   eax
1001ba29:	call   0x1001a1e0
1001ba2e:	mov    eax,DWORD PTR [ebp+0x8]
1001ba31:	add    esp,0xc
1001ba34:	dec    DWORD PTR ds:0x10068080
1001ba3a:	cmp    eax,DWORD PTR ds:0x10066818
1001ba40:	jbe    0x1001ba46
1001ba42:	sub    DWORD PTR [ebp+0x8],0x14
1001ba46:	mov    eax,ds:0x10068084
1001ba4b:	mov    ds:0x1006808c,eax
1001ba50:	mov    eax,DWORD PTR [ebp+0x8]
1001ba53:	mov    ds:0x10066818,eax
1001ba58:	mov    DWORD PTR ds:0x10068094,edi
1001ba5e:	pop    ebx
1001ba5f:	pop    edi
1001ba60:	pop    esi
1001ba61:	leave  
1001ba62:	ret    
1001ba63:	mov    eax,ds:0x10068090
1001ba68:	push   esi
1001ba69:	mov    esi,DWORD PTR ds:0x10068080
1001ba6f:	push   edi
1001ba70:	xor    edi,edi
1001ba72:	cmp    esi,eax
1001ba74:	jne    0x1001baaa
1001ba76:	add    eax,0x10
1001ba79:	imul   eax,eax,0x14
1001ba7c:	push   eax
1001ba7d:	push   DWORD PTR ds:0x10068084
1001ba83:	push   edi
1001ba84:	push   DWORD PTR ds:0x100666c0
1001ba8a:	call   DWORD PTR ds:0x1002c1d0
1001ba90:	cmp    eax,edi
1001ba92:	jne    0x1001ba98
1001ba94:	xor    eax,eax
1001ba96:	jmp    0x1001bb10
1001ba98:	add    DWORD PTR ds:0x10068090,0x10
1001ba9f:	mov    esi,DWORD PTR ds:0x10068080
1001baa5:	mov    ds:0x10068084,eax
1001baaa:	imul   esi,esi,0x14
1001baad:	add    esi,DWORD PTR ds:0x10068084
1001bab3:	push   0x41c4
1001bab8:	push   0x8
1001baba:	push   DWORD PTR ds:0x100666c0
1001bac0:	call   DWORD PTR ds:0x1002c1c8
1001bac6:	cmp    eax,edi
1001bac8:	mov    DWORD PTR [esi+0x10],eax
1001bacb:	je     0x1001ba94
1001bacd:	push   0x4
1001bacf:	push   0x2000
1001bad4:	push   0x100000
1001bad9:	push   edi
1001bada:	call   DWORD PTR ds:0x1002c208
1001bae0:	cmp    eax,edi
1001bae2:	mov    DWORD PTR [esi+0xc],eax
1001bae5:	jne    0x1001baf9
1001bae7:	push   DWORD PTR [esi+0x10]
1001baea:	push   edi
1001baeb:	push   DWORD PTR ds:0x100666c0
1001baf1:	call   DWORD PTR ds:0x1002c1cc
1001baf7:	jmp    0x1001ba94
1001baf9:	or     DWORD PTR [esi+0x8],0xffffffff
1001bafd:	mov    DWORD PTR [esi],edi
1001baff:	mov    DWORD PTR [esi+0x4],edi
1001bb02:	inc    DWORD PTR ds:0x10068080
1001bb08:	mov    eax,DWORD PTR [esi+0x10]
1001bb0b:	or     DWORD PTR [eax],0xffffffff
1001bb0e:	mov    eax,esi
1001bb10:	pop    edi
1001bb11:	pop    esi
1001bb12:	ret    
1001bb13:	push   ebp
1001bb14:	mov    ebp,esp
1001bb16:	push   ecx
1001bb17:	push   ecx
1001bb18:	mov    ecx,DWORD PTR [ebp+0x8]
1001bb1b:	mov    eax,DWORD PTR [ecx+0x8]
1001bb1e:	push   ebx
1001bb1f:	push   esi
1001bb20:	mov    esi,DWORD PTR [ecx+0x10]
1001bb23:	push   edi
1001bb24:	xor    ebx,ebx
1001bb26:	jmp    0x1001bb2b
1001bb28:	add    eax,eax
1001bb2a:	inc    ebx
1001bb2b:	test   eax,eax
1001bb2d:	jge    0x1001bb28
1001bb2f:	mov    eax,ebx
1001bb31:	imul   eax,eax,0x204
1001bb37:	lea    eax,[eax+esi*1+0x144]
1001bb3e:	push   0x3f
1001bb40:	mov    DWORD PTR [ebp-0x8],eax
1001bb43:	pop    edx
1001bb44:	mov    DWORD PTR [eax+0x8],eax
1001bb47:	mov    DWORD PTR [eax+0x4],eax
1001bb4a:	add    eax,0x8
1001bb4d:	dec    edx
1001bb4e:	jne    0x1001bb44
1001bb50:	push   0x4
1001bb52:	mov    edi,ebx
1001bb54:	push   0x1000
1001bb59:	shl    edi,0xf
1001bb5c:	add    edi,DWORD PTR [ecx+0xc]
1001bb5f:	push   0x8000
1001bb64:	push   edi
1001bb65:	call   DWORD PTR ds:0x1002c208
1001bb6b:	test   eax,eax
1001bb6d:	jne    0x1001bb77
1001bb6f:	or     eax,0xffffffff
1001bb72:	jmp    0x1001bc14
1001bb77:	lea    edx,[edi+0x7000]
1001bb7d:	cmp    edi,edx
1001bb7f:	mov    DWORD PTR [ebp-0x4],edx
1001bb82:	ja     0x1001bbc7
1001bb84:	mov    ecx,edx
1001bb86:	sub    ecx,edi
1001bb88:	shr    ecx,0xc
1001bb8b:	lea    eax,[edi+0x10]
1001bb8e:	inc    ecx
1001bb8f:	or     DWORD PTR [eax-0x8],0xffffffff
1001bb93:	or     DWORD PTR [eax+0xfec],0xffffffff
1001bb9a:	lea    edx,[eax+0xffc]
1001bba0:	mov    DWORD PTR [eax],edx
1001bba2:	lea    edx,[eax-0x1004]
1001bba8:	mov    DWORD PTR [eax-0x4],0xff0
1001bbaf:	mov    DWORD PTR [eax+0x4],edx
1001bbb2:	mov    DWORD PTR [eax+0xfe8],0xff0
1001bbbc:	add    eax,0x1000
1001bbc1:	dec    ecx
1001bbc2:	jne    0x1001bb8f
1001bbc4:	mov    edx,DWORD PTR [ebp-0x4]
1001bbc7:	mov    eax,DWORD PTR [ebp-0x8]
1001bbca:	add    eax,0x1f8
1001bbcf:	lea    ecx,[edi+0xc]
1001bbd2:	mov    DWORD PTR [eax+0x4],ecx
1001bbd5:	mov    DWORD PTR [ecx+0x8],eax
1001bbd8:	lea    ecx,[edx+0xc]
1001bbdb:	mov    DWORD PTR [eax+0x8],ecx
1001bbde:	mov    DWORD PTR [ecx+0x4],eax
1001bbe1:	and    DWORD PTR [esi+ebx*4+0x44],0x0
1001bbe6:	xor    edi,edi
1001bbe8:	inc    edi
1001bbe9:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
1001bbf0:	mov    al,BYTE PTR [esi+0x43]
1001bbf3:	mov    cl,al
1001bbf5:	inc    cl
1001bbf7:	test   al,al
1001bbf9:	mov    eax,DWORD PTR [ebp+0x8]
1001bbfc:	mov    BYTE PTR [esi+0x43],cl
1001bbff:	jne    0x1001bc04
1001bc01:	or     DWORD PTR [eax+0x4],edi
1001bc04:	mov    edx,0x80000000
1001bc09:	mov    ecx,ebx
1001bc0b:	shr    edx,cl
1001bc0d:	not    edx
1001bc0f:	and    DWORD PTR [eax+0x8],edx
1001bc12:	mov    eax,ebx
1001bc14:	pop    edi
1001bc15:	pop    esi
1001bc16:	pop    ebx
1001bc17:	leave  
1001bc18:	ret    
1001bc19:	push   ebp
1001bc1a:	mov    ebp,esp
1001bc1c:	sub    esp,0xc
1001bc1f:	mov    ecx,DWORD PTR [ebp+0x8]
1001bc22:	mov    eax,DWORD PTR [ecx+0x10]
1001bc25:	push   ebx
1001bc26:	push   esi
1001bc27:	mov    esi,DWORD PTR [ebp+0x10]
1001bc2a:	push   edi
1001bc2b:	mov    edi,DWORD PTR [ebp+0xc]
1001bc2e:	mov    edx,edi
1001bc30:	sub    edx,DWORD PTR [ecx+0xc]
1001bc33:	add    esi,0x17
1001bc36:	shr    edx,0xf
1001bc39:	mov    ecx,edx
1001bc3b:	imul   ecx,ecx,0x204
1001bc41:	lea    ecx,[ecx+eax*1+0x144]
1001bc48:	mov    DWORD PTR [ebp-0xc],ecx
1001bc4b:	mov    ecx,DWORD PTR [edi-0x4]
1001bc4e:	and    esi,0xfffffff0
1001bc51:	dec    ecx
1001bc52:	cmp    esi,ecx
1001bc54:	lea    edi,[ecx+edi*1-0x4]
1001bc58:	mov    ebx,DWORD PTR [edi]
1001bc5a:	mov    DWORD PTR [ebp+0x10],ecx
1001bc5d:	mov    DWORD PTR [ebp-0x4],ebx
1001bc60:	jle    0x1001bdbb
1001bc66:	test   bl,0x1
1001bc69:	jne    0x1001bdb4
1001bc6f:	add    ebx,ecx
1001bc71:	cmp    esi,ebx
1001bc73:	jg     0x1001bdb4
1001bc79:	mov    ecx,DWORD PTR [ebp-0x4]
1001bc7c:	sar    ecx,0x4
1001bc7f:	dec    ecx
1001bc80:	cmp    ecx,0x3f
1001bc83:	mov    DWORD PTR [ebp-0x8],ecx
1001bc86:	jbe    0x1001bc8e
1001bc88:	push   0x3f
1001bc8a:	pop    ecx
1001bc8b:	mov    DWORD PTR [ebp-0x8],ecx
1001bc8e:	mov    ebx,DWORD PTR [edi+0x4]
1001bc91:	cmp    ebx,DWORD PTR [edi+0x8]
1001bc94:	jne    0x1001bcd9
1001bc96:	cmp    ecx,0x20
1001bc99:	mov    ebx,0x80000000
1001bc9e:	jae    0x1001bcba
1001bca0:	shr    ebx,cl
1001bca2:	mov    ecx,DWORD PTR [ebp-0x8]
1001bca5:	lea    ecx,[ecx+eax*1+0x4]
1001bca9:	not    ebx
1001bcab:	and    DWORD PTR [eax+edx*4+0x44],ebx
1001bcaf:	dec    BYTE PTR [ecx]
1001bcb1:	jne    0x1001bcd9
1001bcb3:	mov    ecx,DWORD PTR [ebp+0x8]
1001bcb6:	and    DWORD PTR [ecx],ebx
1001bcb8:	jmp    0x1001bcd9
1001bcba:	add    ecx,0xffffffe0
1001bcbd:	shr    ebx,cl
1001bcbf:	mov    ecx,DWORD PTR [ebp-0x8]
1001bcc2:	lea    ecx,[ecx+eax*1+0x4]
1001bcc6:	not    ebx
1001bcc8:	and    DWORD PTR [eax+edx*4+0xc4],ebx
1001bccf:	dec    BYTE PTR [ecx]
1001bcd1:	jne    0x1001bcd9
1001bcd3:	mov    ecx,DWORD PTR [ebp+0x8]
1001bcd6:	and    DWORD PTR [ecx+0x4],ebx
1001bcd9:	mov    ecx,DWORD PTR [edi+0x8]
1001bcdc:	mov    ebx,DWORD PTR [edi+0x4]
1001bcdf:	mov    DWORD PTR [ecx+0x4],ebx
1001bce2:	mov    ecx,DWORD PTR [edi+0x4]
1001bce5:	mov    edi,DWORD PTR [edi+0x8]
1001bce8:	mov    DWORD PTR [ecx+0x8],edi
1001bceb:	mov    ecx,DWORD PTR [ebp+0x10]
1001bcee:	sub    ecx,esi
1001bcf0:	add    DWORD PTR [ebp-0x4],ecx
1001bcf3:	cmp    DWORD PTR [ebp-0x4],0x0
1001bcf7:	jle    0x1001bda2
1001bcfd:	mov    edi,DWORD PTR [ebp-0x4]
1001bd00:	mov    ecx,DWORD PTR [ebp+0xc]
1001bd03:	sar    edi,0x4
1001bd06:	dec    edi
1001bd07:	cmp    edi,0x3f
1001bd0a:	lea    ecx,[ecx+esi*1-0x4]
1001bd0e:	jbe    0x1001bd13
1001bd10:	push   0x3f
1001bd12:	pop    edi
1001bd13:	mov    ebx,DWORD PTR [ebp-0xc]
1001bd16:	lea    ebx,[ebx+edi*8]
1001bd19:	mov    DWORD PTR [ebp+0x10],ebx
1001bd1c:	mov    ebx,DWORD PTR [ebx+0x4]
1001bd1f:	mov    DWORD PTR [ecx+0x4],ebx
1001bd22:	mov    ebx,DWORD PTR [ebp+0x10]
1001bd25:	mov    DWORD PTR [ecx+0x8],ebx
1001bd28:	mov    DWORD PTR [ebx+0x4],ecx
1001bd2b:	mov    ebx,DWORD PTR [ecx+0x4]
1001bd2e:	mov    DWORD PTR [ebx+0x8],ecx
1001bd31:	mov    ebx,DWORD PTR [ecx+0x4]
1001bd34:	cmp    ebx,DWORD PTR [ecx+0x8]
1001bd37:	jne    0x1001bd90
1001bd39:	mov    cl,BYTE PTR [edi+eax*1+0x4]
1001bd3d:	mov    BYTE PTR [ebp+0x13],cl
1001bd40:	inc    cl
1001bd42:	cmp    edi,0x20
1001bd45:	mov    BYTE PTR [edi+eax*1+0x4],cl
1001bd49:	jae    0x1001bd67
1001bd4b:	cmp    BYTE PTR [ebp+0x13],0x0
1001bd4f:	jne    0x1001bd5f
1001bd51:	mov    ecx,edi
1001bd53:	mov    ebx,0x80000000
1001bd58:	shr    ebx,cl
1001bd5a:	mov    ecx,DWORD PTR [ebp+0x8]
1001bd5d:	or     DWORD PTR [ecx],ebx
1001bd5f:	lea    eax,[eax+edx*4+0x44]
1001bd63:	mov    ecx,edi
1001bd65:	jmp    0x1001bd87
1001bd67:	cmp    BYTE PTR [ebp+0x13],0x0
1001bd6b:	jne    0x1001bd7d
1001bd6d:	lea    ecx,[edi-0x20]
1001bd70:	mov    ebx,0x80000000
1001bd75:	shr    ebx,cl
1001bd77:	mov    ecx,DWORD PTR [ebp+0x8]
1001bd7a:	or     DWORD PTR [ecx+0x4],ebx
1001bd7d:	lea    eax,[eax+edx*4+0xc4]
1001bd84:	lea    ecx,[edi-0x20]
1001bd87:	mov    edx,0x80000000
1001bd8c:	shr    edx,cl
1001bd8e:	or     DWORD PTR [eax],edx
1001bd90:	mov    edx,DWORD PTR [ebp+0xc]
1001bd93:	mov    ecx,DWORD PTR [ebp-0x4]
1001bd96:	lea    eax,[edx+esi*1-0x4]
1001bd9a:	mov    DWORD PTR [eax],ecx
1001bd9c:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
1001bda0:	jmp    0x1001bda5
1001bda2:	mov    edx,DWORD PTR [ebp+0xc]
1001bda5:	lea    eax,[esi+0x1]
1001bda8:	mov    DWORD PTR [edx-0x4],eax
1001bdab:	mov    DWORD PTR [edx+esi*1-0x8],eax
1001bdaf:	jmp    0x1001bef0
1001bdb4:	xor    eax,eax
1001bdb6:	jmp    0x1001bef3
1001bdbb:	jge    0x1001bef0
1001bdc1:	mov    ebx,DWORD PTR [ebp+0xc]
1001bdc4:	sub    DWORD PTR [ebp+0x10],esi
1001bdc7:	lea    ecx,[esi+0x1]
1001bdca:	mov    DWORD PTR [ebx-0x4],ecx
1001bdcd:	lea    ebx,[ebx+esi*1-0x4]
1001bdd1:	mov    esi,DWORD PTR [ebp+0x10]
1001bdd4:	sar    esi,0x4
1001bdd7:	dec    esi
1001bdd8:	cmp    esi,0x3f
1001bddb:	mov    DWORD PTR [ebp+0xc],ebx
1001bdde:	mov    DWORD PTR [ebx-0x4],ecx
1001bde1:	jbe    0x1001bde6
1001bde3:	push   0x3f
1001bde5:	pop    esi
1001bde6:	test   BYTE PTR [ebp-0x4],0x1
1001bdea:	jne    0x1001be70
1001bdf0:	mov    esi,DWORD PTR [ebp-0x4]
1001bdf3:	sar    esi,0x4
1001bdf6:	dec    esi
1001bdf7:	cmp    esi,0x3f
1001bdfa:	jbe    0x1001bdff
1001bdfc:	push   0x3f
1001bdfe:	pop    esi
1001bdff:	mov    ecx,DWORD PTR [edi+0x4]
1001be02:	cmp    ecx,DWORD PTR [edi+0x8]
1001be05:	jne    0x1001be49
1001be07:	cmp    esi,0x20
1001be0a:	mov    ebx,0x80000000
1001be0f:	jae    0x1001be2a
1001be11:	mov    ecx,esi
1001be13:	shr    ebx,cl
1001be15:	lea    esi,[esi+eax*1+0x4]
1001be19:	not    ebx
1001be1b:	and    DWORD PTR [eax+edx*4+0x44],ebx
1001be1f:	dec    BYTE PTR [esi]
1001be21:	jne    0x1001be46
1001be23:	mov    ecx,DWORD PTR [ebp+0x8]
1001be26:	and    DWORD PTR [ecx],ebx
1001be28:	jmp    0x1001be46
1001be2a:	lea    ecx,[esi-0x20]
1001be2d:	shr    ebx,cl
1001be2f:	lea    ecx,[esi+eax*1+0x4]
1001be33:	not    ebx
1001be35:	and    DWORD PTR [eax+edx*4+0xc4],ebx
1001be3c:	dec    BYTE PTR [ecx]
1001be3e:	jne    0x1001be46
1001be40:	mov    ecx,DWORD PTR [ebp+0x8]
1001be43:	and    DWORD PTR [ecx+0x4],ebx
1001be46:	mov    ebx,DWORD PTR [ebp+0xc]
1001be49:	mov    ecx,DWORD PTR [edi+0x8]
1001be4c:	mov    esi,DWORD PTR [edi+0x4]
1001be4f:	mov    DWORD PTR [ecx+0x4],esi
1001be52:	mov    esi,DWORD PTR [edi+0x8]
1001be55:	mov    ecx,DWORD PTR [edi+0x4]
1001be58:	mov    DWORD PTR [ecx+0x8],esi
1001be5b:	mov    esi,DWORD PTR [ebp+0x10]
1001be5e:	add    esi,DWORD PTR [ebp-0x4]
1001be61:	mov    DWORD PTR [ebp+0x10],esi
1001be64:	sar    esi,0x4
1001be67:	dec    esi
1001be68:	cmp    esi,0x3f
1001be6b:	jbe    0x1001be70
1001be6d:	push   0x3f
1001be6f:	pop    esi
1001be70:	mov    ecx,DWORD PTR [ebp-0xc]
1001be73:	lea    ecx,[ecx+esi*8]
1001be76:	mov    edi,DWORD PTR [ecx+0x4]
1001be79:	mov    DWORD PTR [ebx+0x8],ecx
1001be7c:	mov    DWORD PTR [ebx+0x4],edi
1001be7f:	mov    DWORD PTR [ecx+0x4],ebx
1001be82:	mov    ecx,DWORD PTR [ebx+0x4]
1001be85:	mov    DWORD PTR [ecx+0x8],ebx
1001be88:	mov    ecx,DWORD PTR [ebx+0x4]
1001be8b:	cmp    ecx,DWORD PTR [ebx+0x8]
1001be8e:	jne    0x1001bee7
1001be90:	mov    cl,BYTE PTR [esi+eax*1+0x4]
1001be94:	mov    BYTE PTR [ebp+0xf],cl
1001be97:	inc    cl
1001be99:	cmp    esi,0x20
1001be9c:	mov    BYTE PTR [esi+eax*1+0x4],cl
1001bea0:	jae    0x1001bebe
1001bea2:	cmp    BYTE PTR [ebp+0xf],0x0
1001bea6:	jne    0x1001beb6
1001bea8:	mov    ecx,esi
1001beaa:	mov    edi,0x80000000
1001beaf:	shr    edi,cl
1001beb1:	mov    ecx,DWORD PTR [ebp+0x8]
1001beb4:	or     DWORD PTR [ecx],edi
1001beb6:	lea    eax,[eax+edx*4+0x44]
1001beba:	mov    ecx,esi
1001bebc:	jmp    0x1001bede
1001bebe:	cmp    BYTE PTR [ebp+0xf],0x0
1001bec2:	jne    0x1001bed4
1001bec4:	lea    ecx,[esi-0x20]
1001bec7:	mov    edi,0x80000000
1001becc:	shr    edi,cl
1001bece:	mov    ecx,DWORD PTR [ebp+0x8]
1001bed1:	or     DWORD PTR [ecx+0x4],edi
1001bed4:	lea    eax,[eax+edx*4+0xc4]
1001bedb:	lea    ecx,[esi-0x20]
1001bede:	mov    edx,0x80000000
1001bee3:	shr    edx,cl
1001bee5:	or     DWORD PTR [eax],edx
1001bee7:	mov    eax,DWORD PTR [ebp+0x10]
1001beea:	mov    DWORD PTR [ebx],eax
1001beec:	mov    DWORD PTR [eax+ebx*1-0x4],eax
1001bef0:	xor    eax,eax
1001bef2:	inc    eax
1001bef3:	pop    edi
1001bef4:	pop    esi
1001bef5:	pop    ebx
1001bef6:	leave  
1001bef7:	ret    
1001bef8:	push   ebp
1001bef9:	mov    ebp,esp
1001befb:	sub    esp,0x14
1001befe:	mov    eax,ds:0x10068080
1001bf03:	mov    ecx,DWORD PTR [ebp+0x8]
1001bf06:	imul   eax,eax,0x14
1001bf09:	add    eax,DWORD PTR ds:0x10068084
1001bf0f:	add    ecx,0x17
1001bf12:	and    ecx,0xfffffff0
1001bf15:	mov    DWORD PTR [ebp-0x10],ecx
1001bf18:	sar    ecx,0x4
1001bf1b:	push   ebx
1001bf1c:	dec    ecx
1001bf1d:	cmp    ecx,0x20
1001bf20:	push   esi
1001bf21:	push   edi
1001bf22:	jge    0x1001bf2f
1001bf24:	or     esi,0xffffffff
1001bf27:	shr    esi,cl
1001bf29:	or     DWORD PTR [ebp-0x8],0xffffffff
1001bf2d:	jmp    0x1001bf3c
1001bf2f:	add    ecx,0xffffffe0
1001bf32:	or     edx,0xffffffff
1001bf35:	xor    esi,esi
1001bf37:	shr    edx,cl
1001bf39:	mov    DWORD PTR [ebp-0x8],edx
1001bf3c:	mov    ecx,DWORD PTR ds:0x1006808c
1001bf42:	mov    ebx,ecx
1001bf44:	jmp    0x1001bf57
1001bf46:	mov    edx,DWORD PTR [ebx+0x4]
1001bf49:	mov    edi,DWORD PTR [ebx]
1001bf4b:	and    edx,DWORD PTR [ebp-0x8]
1001bf4e:	and    edi,esi
1001bf50:	or     edx,edi
1001bf52:	jne    0x1001bf5e
1001bf54:	add    ebx,0x14
1001bf57:	cmp    ebx,eax
1001bf59:	mov    DWORD PTR [ebp+0x8],ebx
1001bf5c:	jb     0x1001bf46
1001bf5e:	cmp    ebx,eax
1001bf60:	jne    0x1001bfe1
1001bf62:	mov    ebx,DWORD PTR ds:0x10068084
1001bf68:	jmp    0x1001bf7b
1001bf6a:	mov    edx,DWORD PTR [ebx+0x4]
1001bf6d:	mov    edi,DWORD PTR [ebx]
1001bf6f:	and    edx,DWORD PTR [ebp-0x8]
1001bf72:	and    edi,esi
1001bf74:	or     edx,edi
1001bf76:	jne    0x1001bf82
1001bf78:	add    ebx,0x14
1001bf7b:	cmp    ebx,ecx
1001bf7d:	mov    DWORD PTR [ebp+0x8],ebx
1001bf80:	jb     0x1001bf6a
1001bf82:	cmp    ebx,ecx
1001bf84:	jne    0x1001bfe1
1001bf86:	jmp    0x1001bf94
1001bf88:	cmp    DWORD PTR [ebx+0x8],0x0
1001bf8c:	jne    0x1001bf98
1001bf8e:	add    ebx,0x14
1001bf91:	mov    DWORD PTR [ebp+0x8],ebx
1001bf94:	cmp    ebx,eax
1001bf96:	jb     0x1001bf88
1001bf98:	cmp    ebx,eax
1001bf9a:	jne    0x1001bfcd
1001bf9c:	mov    ebx,DWORD PTR ds:0x10068084
1001bfa2:	jmp    0x1001bfad
1001bfa4:	cmp    DWORD PTR [ebx+0x8],0x0
1001bfa8:	jne    0x1001bfb4
1001bfaa:	add    ebx,0x14
1001bfad:	cmp    ebx,ecx
1001bfaf:	mov    DWORD PTR [ebp+0x8],ebx
1001bfb2:	jb     0x1001bfa4
1001bfb4:	cmp    ebx,ecx
1001bfb6:	jne    0x1001bfcd
1001bfb8:	call   0x1001ba63
1001bfbd:	mov    ebx,eax
1001bfbf:	test   ebx,ebx
1001bfc1:	mov    DWORD PTR [ebp+0x8],ebx
1001bfc4:	jne    0x1001bfcd
1001bfc6:	xor    eax,eax
1001bfc8:	jmp    0x1001c1d6
1001bfcd:	push   ebx
1001bfce:	call   0x1001bb13
1001bfd3:	pop    ecx
1001bfd4:	mov    ecx,DWORD PTR [ebx+0x10]
1001bfd7:	mov    DWORD PTR [ecx],eax
1001bfd9:	mov    eax,DWORD PTR [ebx+0x10]
1001bfdc:	cmp    DWORD PTR [eax],0xffffffff
1001bfdf:	je     0x1001bfc6
1001bfe1:	mov    DWORD PTR ds:0x1006808c,ebx
1001bfe7:	mov    eax,DWORD PTR [ebx+0x10]
1001bfea:	mov    edx,DWORD PTR [eax]
1001bfec:	cmp    edx,0xffffffff
1001bfef:	mov    DWORD PTR [ebp-0x4],edx
1001bff2:	je     0x1001c008
1001bff4:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
1001bffb:	mov    edi,DWORD PTR [eax+edx*4+0x44]
1001bfff:	and    ecx,DWORD PTR [ebp-0x8]
1001c002:	and    edi,esi
1001c004:	or     ecx,edi
1001c006:	jne    0x1001c031
1001c008:	and    DWORD PTR [ebp-0x4],0x0
1001c00c:	mov    edx,DWORD PTR [eax+0xc4]
1001c012:	lea    ecx,[eax+0x44]
1001c015:	mov    edi,DWORD PTR [ecx]
1001c017:	and    edx,DWORD PTR [ebp-0x8]
1001c01a:	and    edi,esi
1001c01c:	or     edx,edi
1001c01e:	jne    0x1001c02e
1001c020:	inc    DWORD PTR [ebp-0x4]
1001c023:	mov    edx,DWORD PTR [ecx+0x84]
1001c029:	add    ecx,0x4
1001c02c:	jmp    0x1001c015
1001c02e:	mov    edx,DWORD PTR [ebp-0x4]
1001c031:	mov    ecx,edx
1001c033:	imul   ecx,ecx,0x204
1001c039:	lea    ecx,[ecx+eax*1+0x144]
1001c040:	mov    DWORD PTR [ebp-0xc],ecx
1001c043:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
1001c047:	xor    edi,edi
1001c049:	and    ecx,esi
1001c04b:	jne    0x1001c05f
1001c04d:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
1001c054:	and    ecx,DWORD PTR [ebp-0x8]
1001c057:	push   0x20
1001c059:	pop    edi
1001c05a:	jmp    0x1001c05f
1001c05c:	add    ecx,ecx
1001c05e:	inc    edi
1001c05f:	test   ecx,ecx
1001c061:	jge    0x1001c05c
1001c063:	mov    ecx,DWORD PTR [ebp-0xc]
1001c066:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
1001c06a:	mov    ecx,DWORD PTR [edx]
1001c06c:	sub    ecx,DWORD PTR [ebp-0x10]
1001c06f:	mov    esi,ecx
1001c071:	sar    esi,0x4
1001c074:	dec    esi
1001c075:	cmp    esi,0x3f
1001c078:	mov    DWORD PTR [ebp-0x8],ecx
1001c07b:	jle    0x1001c080
1001c07d:	push   0x3f
1001c07f:	pop    esi
1001c080:	cmp    esi,edi
1001c082:	je     0x1001c189
1001c088:	mov    ecx,DWORD PTR [edx+0x4]
1001c08b:	cmp    ecx,DWORD PTR [edx+0x8]
1001c08e:	jne    0x1001c0ec
1001c090:	cmp    edi,0x20
1001c093:	mov    ebx,0x80000000
1001c098:	jge    0x1001c0c0
1001c09a:	mov    ecx,edi
1001c09c:	shr    ebx,cl
1001c09e:	mov    ecx,DWORD PTR [ebp-0x4]
1001c0a1:	lea    edi,[eax+edi*1+0x4]
1001c0a5:	not    ebx
1001c0a7:	mov    DWORD PTR [ebp-0x14],ebx
1001c0aa:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
1001c0ae:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
1001c0b2:	dec    BYTE PTR [edi]
1001c0b4:	jne    0x1001c0e9
1001c0b6:	mov    ecx,DWORD PTR [ebp-0x14]
1001c0b9:	mov    ebx,DWORD PTR [ebp+0x8]
1001c0bc:	and    DWORD PTR [ebx],ecx
1001c0be:	jmp    0x1001c0ec
1001c0c0:	lea    ecx,[edi-0x20]
1001c0c3:	shr    ebx,cl
1001c0c5:	mov    ecx,DWORD PTR [ebp-0x4]
1001c0c8:	lea    ecx,[eax+ecx*4+0xc4]
1001c0cf:	lea    edi,[eax+edi*1+0x4]
1001c0d3:	not    ebx
1001c0d5:	and    DWORD PTR [ecx],ebx
1001c0d7:	dec    BYTE PTR [edi]
1001c0d9:	mov    DWORD PTR [ebp-0x14],ebx
1001c0dc:	jne    0x1001c0e9
1001c0de:	mov    ebx,DWORD PTR [ebp+0x8]
1001c0e1:	mov    ecx,DWORD PTR [ebp-0x14]
1001c0e4:	and    DWORD PTR [ebx+0x4],ecx
1001c0e7:	jmp    0x1001c0ec
1001c0e9:	mov    ebx,DWORD PTR [ebp+0x8]
1001c0ec:	cmp    DWORD PTR [ebp-0x8],0x0
1001c0f0:	mov    ecx,DWORD PTR [edx+0x8]
1001c0f3:	mov    edi,DWORD PTR [edx+0x4]
1001c0f6:	mov    DWORD PTR [ecx+0x4],edi
1001c0f9:	mov    ecx,DWORD PTR [edx+0x4]
1001c0fc:	mov    edi,DWORD PTR [edx+0x8]
1001c0ff:	mov    DWORD PTR [ecx+0x8],edi
1001c102:	je     0x1001c195
1001c108:	mov    ecx,DWORD PTR [ebp-0xc]
1001c10b:	lea    ecx,[ecx+esi*8]
1001c10e:	mov    edi,DWORD PTR [ecx+0x4]
1001c111:	mov    DWORD PTR [edx+0x8],ecx
1001c114:	mov    DWORD PTR [edx+0x4],edi
1001c117:	mov    DWORD PTR [ecx+0x4],edx
1001c11a:	mov    ecx,DWORD PTR [edx+0x4]
1001c11d:	mov    DWORD PTR [ecx+0x8],edx
1001c120:	mov    ecx,DWORD PTR [edx+0x4]
1001c123:	cmp    ecx,DWORD PTR [edx+0x8]
1001c126:	jne    0x1001c186
1001c128:	mov    cl,BYTE PTR [esi+eax*1+0x4]
1001c12c:	mov    BYTE PTR [ebp+0xb],cl
1001c12f:	inc    cl
1001c131:	cmp    esi,0x20
1001c134:	mov    BYTE PTR [esi+eax*1+0x4],cl
1001c138:	jge    0x1001c15d
1001c13a:	cmp    BYTE PTR [ebp+0xb],0x0
1001c13e:	jne    0x1001c14b
1001c140:	mov    edi,0x80000000
1001c145:	mov    ecx,esi
1001c147:	shr    edi,cl
1001c149:	or     DWORD PTR [ebx],edi
1001c14b:	mov    ecx,esi
1001c14d:	mov    edi,0x80000000
1001c152:	shr    edi,cl
1001c154:	mov    ecx,DWORD PTR [ebp-0x4]
1001c157:	or     DWORD PTR [eax+ecx*4+0x44],edi
1001c15b:	jmp    0x1001c186
1001c15d:	cmp    BYTE PTR [ebp+0xb],0x0
1001c161:	jne    0x1001c170
1001c163:	lea    ecx,[esi-0x20]
1001c166:	mov    edi,0x80000000
1001c16b:	shr    edi,cl
1001c16d:	or     DWORD PTR [ebx+0x4],edi
1001c170:	mov    ecx,DWORD PTR [ebp-0x4]
1001c173:	lea    edi,[eax+ecx*4+0xc4]
1001c17a:	lea    ecx,[esi-0x20]
1001c17d:	mov    esi,0x80000000
1001c182:	shr    esi,cl
1001c184:	or     DWORD PTR [edi],esi
1001c186:	mov    ecx,DWORD PTR [ebp-0x8]
1001c189:	test   ecx,ecx
1001c18b:	je     0x1001c198
1001c18d:	mov    DWORD PTR [edx],ecx
1001c18f:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
1001c193:	jmp    0x1001c198
1001c195:	mov    ecx,DWORD PTR [ebp-0x8]
1001c198:	mov    esi,DWORD PTR [ebp-0x10]
1001c19b:	add    edx,ecx
1001c19d:	lea    ecx,[esi+0x1]
1001c1a0:	mov    DWORD PTR [edx],ecx
1001c1a2:	mov    DWORD PTR [edx+esi*1-0x4],ecx
1001c1a6:	mov    esi,DWORD PTR [ebp-0xc]
1001c1a9:	mov    ecx,DWORD PTR [esi]
1001c1ab:	test   ecx,ecx
1001c1ad:	lea    edi,[ecx+0x1]
1001c1b0:	mov    DWORD PTR [esi],edi
1001c1b2:	jne    0x1001c1ce
1001c1b4:	cmp    ebx,DWORD PTR ds:0x10066818
1001c1ba:	jne    0x1001c1ce
1001c1bc:	mov    ecx,DWORD PTR [ebp-0x4]
1001c1bf:	cmp    ecx,DWORD PTR ds:0x10068094
1001c1c5:	jne    0x1001c1ce
1001c1c7:	and    DWORD PTR ds:0x10066818,0x0
1001c1ce:	mov    ecx,DWORD PTR [ebp-0x4]
1001c1d1:	mov    DWORD PTR [eax],ecx
1001c1d3:	lea    eax,[edx+0x4]
1001c1d6:	pop    edi
1001c1d7:	pop    esi
1001c1d8:	pop    ebx
1001c1d9:	leave  
1001c1da:	ret    
1001c1db:	push   ecx
1001c1dc:	push   ebx
1001c1dd:	mov    ebx,DWORD PTR [esp+0xc]
1001c1e1:	push   esi
1001c1e2:	push   edi
1001c1e3:	xor    esi,esi
1001c1e5:	xor    edi,edi
1001c1e7:	cmp    ebx,DWORD PTR [edi*8+0x100650d0]
1001c1ee:	je     0x1001c1f6
1001c1f0:	inc    edi
1001c1f1:	cmp    edi,0x17
1001c1f4:	jb     0x1001c1e7
1001c1f6:	cmp    edi,0x17
1001c1f9:	jae    0x1001c376
1001c1ff:	push   ebp
1001c200:	push   0x3
1001c202:	call   0x1002135b
1001c207:	cmp    eax,0x1
1001c20a:	pop    ecx
1001c20b:	je     0x1001c342
1001c211:	push   0x3
1001c213:	call   0x1002135b
1001c218:	test   eax,eax
1001c21a:	pop    ecx
1001c21b:	jne    0x1001c22a
1001c21d:	cmp    DWORD PTR ds:0x100662e4,0x1
1001c224:	je     0x1001c342
1001c22a:	cmp    ebx,0xfc
1001c230:	je     0x1001c375
1001c236:	push   0x10051390
1001c23b:	mov    ebx,0x314
1001c240:	push   ebx
1001c241:	mov    ebp,0x10066820
1001c246:	push   ebp
1001c247:	call   0x1001a148
1001c24c:	add    esp,0xc
1001c24f:	test   eax,eax
1001c251:	je     0x1001c260
1001c253:	push   esi
1001c254:	push   esi
1001c255:	push   esi
1001c256:	push   esi
1001c257:	push   esi
1001c258:	call   0x10016023
1001c25d:	add    esp,0x14
1001c260:	push   0x104
1001c265:	mov    esi,0x10066839
1001c26a:	push   esi
1001c26b:	push   0x0
1001c26d:	mov    BYTE PTR ds:0x1006693d,0x0
1001c274:	call   DWORD PTR ds:0x1002c158
1001c27a:	test   eax,eax
1001c27c:	jne    0x1001c2a4
1001c27e:	push   0x10051378
1001c283:	push   0x2fb
1001c288:	push   esi
1001c289:	call   0x1001a148
1001c28e:	add    esp,0xc
1001c291:	test   eax,eax
1001c293:	je     0x1001c2a4
1001c295:	xor    eax,eax
1001c297:	push   eax
1001c298:	push   eax
1001c299:	push   eax
1001c29a:	push   eax
1001c29b:	push   eax
1001c29c:	call   0x10016023
1001c2a1:	add    esp,0x14
1001c2a4:	push   esi
1001c2a5:	call   0x10016370
1001c2aa:	inc    eax
1001c2ab:	cmp    eax,0x3c
1001c2ae:	pop    ecx
1001c2af:	jbe    0x1001c2e9
1001c2b1:	push   esi
1001c2b2:	call   0x10016370
1001c2b7:	sub    esi,0x3b
1001c2ba:	add    eax,esi
1001c2bc:	push   0x3
1001c2be:	mov    ecx,0x10066b34
1001c2c3:	push   0x10051374
1001c2c8:	sub    ecx,eax
1001c2ca:	push   ecx
1001c2cb:	push   eax
1001c2cc:	call   0x100204f6
1001c2d1:	add    esp,0x14
1001c2d4:	test   eax,eax
1001c2d6:	je     0x1001c2e9
1001c2d8:	xor    esi,esi
1001c2da:	push   esi
1001c2db:	push   esi
1001c2dc:	push   esi
1001c2dd:	push   esi
1001c2de:	push   esi
1001c2df:	call   0x10016023
1001c2e4:	add    esp,0x14
1001c2e7:	jmp    0x1001c2eb
1001c2e9:	xor    esi,esi
1001c2eb:	push   0x10051370
1001c2f0:	push   ebx
1001c2f1:	push   ebp
1001c2f2:	call   0x10020434
1001c2f7:	add    esp,0xc
1001c2fa:	test   eax,eax
1001c2fc:	je     0x1001c30b
1001c2fe:	push   esi
1001c2ff:	push   esi
1001c300:	push   esi
1001c301:	push   esi
1001c302:	push   esi
1001c303:	call   0x10016023
1001c308:	add    esp,0x14
1001c30b:	push   DWORD PTR [edi*8+0x100650d4]
1001c312:	push   ebx
1001c313:	push   ebp
1001c314:	call   0x10020434
1001c319:	add    esp,0xc
1001c31c:	test   eax,eax
1001c31e:	je     0x1001c32d
1001c320:	push   esi
1001c321:	push   esi
1001c322:	push   esi
1001c323:	push   esi
1001c324:	push   esi
1001c325:	call   0x10016023
1001c32a:	add    esp,0x14
1001c32d:	push   0x12010
1001c332:	push   0x10051348
1001c337:	push   ebp
1001c338:	call   0x1002119e
1001c33d:	add    esp,0xc
1001c340:	jmp    0x1001c375
1001c342:	push   0xfffffff4
1001c344:	call   DWORD PTR ds:0x1002c1a8
1001c34a:	mov    ebp,eax
1001c34c:	cmp    ebp,esi
1001c34e:	je     0x1001c375
1001c350:	cmp    ebp,0xffffffff
1001c353:	je     0x1001c375
1001c355:	push   0x0
1001c357:	lea    eax,[esp+0x14]
1001c35b:	push   eax
1001c35c:	lea    esi,[edi*8+0x100650d4]
1001c363:	push   DWORD PTR [esi]
1001c365:	call   0x10016370
1001c36a:	pop    ecx
1001c36b:	push   eax
1001c36c:	push   DWORD PTR [esi]
1001c36e:	push   ebp
1001c36f:	call   DWORD PTR ds:0x1002c0ac
1001c375:	pop    ebp
1001c376:	pop    edi
1001c377:	pop    esi
1001c378:	pop    ebx
1001c379:	pop    ecx
1001c37a:	ret    
1001c37b:	push   0x3
1001c37d:	call   0x1002135b
1001c382:	cmp    eax,0x1
1001c385:	pop    ecx
1001c386:	je     0x1001c39d
1001c388:	push   0x3
1001c38a:	call   0x1002135b
1001c38f:	test   eax,eax
1001c391:	pop    ecx
1001c392:	jne    0x1001c3b3
1001c394:	cmp    DWORD PTR ds:0x100662e4,0x1
1001c39b:	jne    0x1001c3b3
1001c39d:	push   0xfc
1001c3a2:	call   0x1001c1db
1001c3a7:	push   0xff
1001c3ac:	call   0x1001c1db
1001c3b1:	pop    ecx
1001c3b2:	pop    ecx
1001c3b3:	ret    
1001c3b4:	push   0x54
1001c3b6:	push   0x10058828
1001c3bb:	call   0x10017a38
1001c3c0:	xor    edi,edi
1001c3c2:	mov    DWORD PTR [ebp-0x4],edi
1001c3c5:	lea    eax,[ebp-0x64]
1001c3c8:	push   eax
1001c3c9:	call   DWORD PTR ds:0x1002c188
1001c3cf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001c3d6:	push   0x40
1001c3d8:	push   0x20
1001c3da:	pop    esi
1001c3db:	push   esi
1001c3dc:	call   0x100185e5
1001c3e1:	pop    ecx
1001c3e2:	pop    ecx
1001c3e3:	cmp    eax,edi
1001c3e5:	je     0x1001c5ff
1001c3eb:	mov    ds:0x10067f80,eax
1001c3f0:	mov    DWORD PTR ds:0x10067f64,esi
1001c3f6:	lea    ecx,[eax+0x800]
1001c3fc:	jmp    0x1001c42e
1001c3fe:	mov    BYTE PTR [eax+0x4],0x0
1001c402:	or     DWORD PTR [eax],0xffffffff
1001c405:	mov    BYTE PTR [eax+0x5],0xa
1001c409:	mov    DWORD PTR [eax+0x8],edi
1001c40c:	mov    BYTE PTR [eax+0x24],0x0
1001c410:	mov    BYTE PTR [eax+0x25],0xa
1001c414:	mov    BYTE PTR [eax+0x26],0xa
1001c418:	mov    DWORD PTR [eax+0x38],edi
1001c41b:	mov    BYTE PTR [eax+0x34],0x0
1001c41f:	add    eax,0x40
1001c422:	mov    ecx,DWORD PTR ds:0x10067f80
1001c428:	add    ecx,0x800
1001c42e:	cmp    eax,ecx
1001c430:	jb     0x1001c3fe
1001c432:	cmp    WORD PTR [ebp-0x32],di
1001c436:	je     0x1001c546
1001c43c:	mov    eax,DWORD PTR [ebp-0x30]
1001c43f:	cmp    eax,edi
1001c441:	je     0x1001c546
1001c447:	mov    edi,DWORD PTR [eax]
1001c449:	lea    ebx,[eax+0x4]
1001c44c:	lea    eax,[ebx+edi*1]
1001c44f:	mov    DWORD PTR [ebp-0x1c],eax
1001c452:	mov    esi,0x800
1001c457:	cmp    edi,esi
1001c459:	jl     0x1001c45d
1001c45b:	mov    edi,esi
1001c45d:	mov    DWORD PTR [ebp-0x20],0x1
1001c464:	jmp    0x1001c4c1
1001c466:	push   0x40
1001c468:	push   0x20
1001c46a:	call   0x100185e5
1001c46f:	pop    ecx
1001c470:	pop    ecx
1001c471:	test   eax,eax
1001c473:	je     0x1001c4cb
1001c475:	mov    ecx,DWORD PTR [ebp-0x20]
1001c478:	lea    ecx,[ecx*4+0x10067f80]
1001c47f:	mov    DWORD PTR [ecx],eax
1001c481:	add    DWORD PTR ds:0x10067f64,0x20
1001c488:	lea    edx,[eax+0x800]
1001c48e:	jmp    0x1001c4ba
1001c490:	mov    BYTE PTR [eax+0x4],0x0
1001c494:	or     DWORD PTR [eax],0xffffffff
1001c497:	mov    BYTE PTR [eax+0x5],0xa
1001c49b:	and    DWORD PTR [eax+0x8],0x0
1001c49f:	and    BYTE PTR [eax+0x24],0x80
1001c4a3:	mov    BYTE PTR [eax+0x25],0xa
1001c4a7:	mov    BYTE PTR [eax+0x26],0xa
1001c4ab:	and    DWORD PTR [eax+0x38],0x0
1001c4af:	mov    BYTE PTR [eax+0x34],0x0
1001c4b3:	add    eax,0x40
1001c4b6:	mov    edx,DWORD PTR [ecx]
1001c4b8:	add    edx,esi
1001c4ba:	cmp    eax,edx
1001c4bc:	jb     0x1001c490
1001c4be:	inc    DWORD PTR [ebp-0x20]
1001c4c1:	cmp    DWORD PTR ds:0x10067f64,edi
1001c4c7:	jl     0x1001c466
1001c4c9:	jmp    0x1001c4d1
1001c4cb:	mov    edi,DWORD PTR ds:0x10067f64
1001c4d1:	and    DWORD PTR [ebp-0x20],0x0
1001c4d5:	test   edi,edi
1001c4d7:	jle    0x1001c546
1001c4d9:	mov    eax,DWORD PTR [ebp-0x1c]
1001c4dc:	mov    ecx,DWORD PTR [eax]
1001c4de:	cmp    ecx,0xffffffff
1001c4e1:	je     0x1001c539
1001c4e3:	cmp    ecx,0xfffffffe
1001c4e6:	je     0x1001c539
1001c4e8:	mov    al,BYTE PTR [ebx]
1001c4ea:	test   al,0x1
1001c4ec:	je     0x1001c539
1001c4ee:	test   al,0x8
1001c4f0:	jne    0x1001c4fd
1001c4f2:	push   ecx
1001c4f3:	call   DWORD PTR ds:0x1002c0d4
1001c4f9:	test   eax,eax
1001c4fb:	je     0x1001c539
1001c4fd:	mov    esi,DWORD PTR [ebp-0x20]
1001c500:	mov    eax,esi
1001c502:	sar    eax,0x5
1001c505:	and    esi,0x1f
1001c508:	shl    esi,0x6
1001c50b:	add    esi,DWORD PTR [eax*4+0x10067f80]
1001c512:	mov    eax,DWORD PTR [ebp-0x1c]
1001c515:	mov    eax,DWORD PTR [eax]
1001c517:	mov    DWORD PTR [esi],eax
1001c519:	mov    al,BYTE PTR [ebx]
1001c51b:	mov    BYTE PTR [esi+0x4],al
1001c51e:	push   0xfa0
1001c523:	lea    eax,[esi+0xc]
1001c526:	push   eax
1001c527:	call   0x10020e9a
1001c52c:	pop    ecx
1001c52d:	pop    ecx
1001c52e:	test   eax,eax
1001c530:	je     0x1001c5ff
1001c536:	inc    DWORD PTR [esi+0x8]
1001c539:	inc    DWORD PTR [ebp-0x20]
1001c53c:	inc    ebx
1001c53d:	add    DWORD PTR [ebp-0x1c],0x4
1001c541:	cmp    DWORD PTR [ebp-0x20],edi
1001c544:	jl     0x1001c4d9
1001c546:	xor    ebx,ebx
1001c548:	mov    esi,ebx
1001c54a:	shl    esi,0x6
1001c54d:	add    esi,DWORD PTR ds:0x10067f80
1001c553:	mov    eax,DWORD PTR [esi]
1001c555:	cmp    eax,0xffffffff
1001c558:	je     0x1001c565
1001c55a:	cmp    eax,0xfffffffe
1001c55d:	je     0x1001c565
1001c55f:	or     BYTE PTR [esi+0x4],0x80
1001c563:	jmp    0x1001c5d7
1001c565:	mov    BYTE PTR [esi+0x4],0x81
1001c569:	test   ebx,ebx
1001c56b:	jne    0x1001c572
1001c56d:	push   0xfffffff6
1001c56f:	pop    eax
1001c570:	jmp    0x1001c57c
1001c572:	mov    eax,ebx
1001c574:	dec    eax
1001c575:	neg    eax
1001c577:	sbb    eax,eax
1001c579:	add    eax,0xfffffff5
1001c57c:	push   eax
1001c57d:	call   DWORD PTR ds:0x1002c1a8
1001c583:	mov    edi,eax
1001c585:	cmp    edi,0xffffffff
1001c588:	je     0x1001c5cd
1001c58a:	test   edi,edi
1001c58c:	je     0x1001c5cd
1001c58e:	push   edi
1001c58f:	call   DWORD PTR ds:0x1002c0d4
1001c595:	test   eax,eax
1001c597:	je     0x1001c5cd
1001c599:	mov    DWORD PTR [esi],edi
1001c59b:	and    eax,0xff
1001c5a0:	cmp    eax,0x2
1001c5a3:	jne    0x1001c5ab
1001c5a5:	or     BYTE PTR [esi+0x4],0x40
1001c5a9:	jmp    0x1001c5b4
1001c5ab:	cmp    eax,0x3
1001c5ae:	jne    0x1001c5b4
1001c5b0:	or     BYTE PTR [esi+0x4],0x8
1001c5b4:	push   0xfa0
1001c5b9:	lea    eax,[esi+0xc]
1001c5bc:	push   eax
1001c5bd:	call   0x10020e9a
1001c5c2:	pop    ecx
1001c5c3:	pop    ecx
1001c5c4:	test   eax,eax
1001c5c6:	je     0x1001c5ff
1001c5c8:	inc    DWORD PTR [esi+0x8]
1001c5cb:	jmp    0x1001c5d7
1001c5cd:	or     BYTE PTR [esi+0x4],0x40
1001c5d1:	mov    DWORD PTR [esi],0xfffffffe
1001c5d7:	inc    ebx
1001c5d8:	cmp    ebx,0x3
1001c5db:	jl     0x1001c548
1001c5e1:	push   DWORD PTR ds:0x10067f64
1001c5e7:	call   DWORD PTR ds:0x1002c020
1001c5ed:	xor    eax,eax
1001c5ef:	jmp    0x1001c602
1001c5f1:	xor    eax,eax
1001c5f3:	inc    eax
1001c5f4:	ret    
1001c5f5:	mov    esp,DWORD PTR [ebp-0x18]
1001c5f8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001c5ff:	or     eax,0xffffffff
1001c602:	call   0x10017a7d
1001c607:	ret    
1001c608:	push   esi
1001c609:	push   edi
1001c60a:	mov    esi,0x10067f80
1001c60f:	mov    edi,DWORD PTR [esi]
1001c611:	test   edi,edi
1001c613:	je     0x1001c646
1001c615:	lea    eax,[edi+0x800]
1001c61b:	jmp    0x1001c637
1001c61d:	cmp    DWORD PTR [edi+0x8],0x0
1001c621:	je     0x1001c62d
1001c623:	lea    eax,[edi+0xc]
1001c626:	push   eax
1001c627:	call   DWORD PTR ds:0x1002c1ec
1001c62d:	mov    eax,DWORD PTR [esi]
1001c62f:	add    edi,0x40
1001c632:	add    eax,0x800
1001c637:	cmp    edi,eax
1001c639:	jb     0x1001c61d
1001c63b:	push   DWORD PTR [esi]
1001c63d:	call   0x10016b35
1001c642:	and    DWORD PTR [esi],0x0
1001c645:	pop    ecx
1001c646:	add    esi,0x4
1001c649:	cmp    esi,0x10068080
1001c64f:	jl     0x1001c60f
1001c651:	pop    edi
1001c652:	pop    esi
1001c653:	ret    
1001c654:	push   ebx
1001c655:	xor    ebx,ebx
1001c657:	cmp    DWORD PTR ds:0x100680b4,ebx
1001c65d:	push   esi
1001c65e:	push   edi
1001c65f:	jne    0x1001c666
1001c661:	call   0x1001b1d7
1001c666:	mov    esi,DWORD PTR ds:0x100662d8
1001c66c:	xor    edi,edi
1001c66e:	cmp    esi,ebx
1001c670:	jne    0x1001c68a
1001c672:	or     eax,0xffffffff
1001c675:	jmp    0x1001c715
1001c67a:	cmp    al,0x3d
1001c67c:	je     0x1001c67f
1001c67e:	inc    edi
1001c67f:	push   esi
1001c680:	call   0x10016370
1001c685:	pop    ecx
1001c686:	lea    esi,[esi+eax*1+0x1]
1001c68a:	mov    al,BYTE PTR [esi]
1001c68c:	cmp    al,bl
1001c68e:	jne    0x1001c67a
1001c690:	push   0x4
1001c692:	inc    edi
1001c693:	push   edi
1001c694:	call   0x100185e5
1001c699:	mov    edi,eax
1001c69b:	cmp    edi,ebx
1001c69d:	pop    ecx
1001c69e:	pop    ecx
1001c69f:	mov    DWORD PTR ds:0x10066654,edi
1001c6a5:	je     0x1001c672
1001c6a7:	mov    esi,DWORD PTR ds:0x100662d8
1001c6ad:	push   ebp
1001c6ae:	jmp    0x1001c6f0
1001c6b0:	push   esi
1001c6b1:	call   0x10016370
1001c6b6:	mov    ebp,eax
1001c6b8:	inc    ebp
1001c6b9:	cmp    BYTE PTR [esi],0x3d
1001c6bc:	pop    ecx
1001c6bd:	je     0x1001c6ee
1001c6bf:	push   0x1
1001c6c1:	push   ebp
1001c6c2:	call   0x100185e5
1001c6c7:	cmp    eax,ebx
1001c6c9:	pop    ecx
1001c6ca:	pop    ecx
1001c6cb:	mov    DWORD PTR [edi],eax
1001c6cd:	je     0x1001c719
1001c6cf:	push   esi
1001c6d0:	push   ebp
1001c6d1:	push   eax
1001c6d2:	call   0x1001a148
1001c6d7:	add    esp,0xc
1001c6da:	test   eax,eax
1001c6dc:	je     0x1001c6eb
1001c6de:	push   ebx
1001c6df:	push   ebx
1001c6e0:	push   ebx
1001c6e1:	push   ebx
1001c6e2:	push   ebx
1001c6e3:	call   0x10016023
1001c6e8:	add    esp,0x14
1001c6eb:	add    edi,0x4
1001c6ee:	add    esi,ebp
1001c6f0:	cmp    BYTE PTR [esi],bl
1001c6f2:	jne    0x1001c6b0
1001c6f4:	push   DWORD PTR ds:0x100662d8
1001c6fa:	call   0x10016b35
1001c6ff:	mov    DWORD PTR ds:0x100662d8,ebx
1001c705:	mov    DWORD PTR [edi],ebx
1001c707:	mov    DWORD PTR ds:0x100680a8,0x1
1001c711:	xor    eax,eax
1001c713:	pop    ecx
1001c714:	pop    ebp
1001c715:	pop    edi
1001c716:	pop    esi
1001c717:	pop    ebx
1001c718:	ret    
1001c719:	push   DWORD PTR ds:0x10066654
1001c71f:	call   0x10016b35
1001c724:	mov    DWORD PTR ds:0x10066654,ebx
1001c72a:	or     eax,0xffffffff
1001c72d:	jmp    0x1001c713
1001c72f:	push   ebp
1001c730:	mov    ebp,esp
1001c732:	push   ecx
1001c733:	mov    ecx,DWORD PTR [ebp+0x10]
1001c736:	push   ebx
1001c737:	xor    eax,eax
1001c739:	cmp    DWORD PTR [ebp+0x8],eax
1001c73c:	push   esi
1001c73d:	mov    DWORD PTR [edi],eax
1001c73f:	mov    esi,edx
1001c741:	mov    edx,DWORD PTR [ebp+0xc]
1001c744:	mov    DWORD PTR [ecx],0x1
1001c74a:	je     0x1001c755
1001c74c:	mov    ebx,DWORD PTR [ebp+0x8]
1001c74f:	add    DWORD PTR [ebp+0x8],0x4
1001c753:	mov    DWORD PTR [ebx],edx
1001c755:	mov    DWORD PTR [ebp-0x4],eax
1001c758:	cmp    BYTE PTR [esi],0x22
1001c75b:	jne    0x1001c76d
1001c75d:	xor    eax,eax
1001c75f:	cmp    DWORD PTR [ebp-0x4],eax
1001c762:	mov    bl,0x22
1001c764:	sete   al
1001c767:	inc    esi
1001c768:	mov    DWORD PTR [ebp-0x4],eax
1001c76b:	jmp    0x1001c7a9
1001c76d:	inc    DWORD PTR [edi]
1001c76f:	test   edx,edx
1001c771:	je     0x1001c77b
1001c773:	mov    al,BYTE PTR [esi]
1001c775:	mov    BYTE PTR [edx],al
1001c777:	inc    edx
1001c778:	mov    DWORD PTR [ebp+0xc],edx
1001c77b:	mov    bl,BYTE PTR [esi]
1001c77d:	movzx  eax,bl
1001c780:	push   eax
1001c781:	inc    esi
1001c782:	call   0x1002007e
1001c787:	test   eax,eax
1001c789:	pop    ecx
1001c78a:	je     0x1001c79f
1001c78c:	inc    DWORD PTR [edi]
1001c78e:	cmp    DWORD PTR [ebp+0xc],0x0
1001c792:	je     0x1001c79e
1001c794:	mov    ecx,DWORD PTR [ebp+0xc]
1001c797:	mov    al,BYTE PTR [esi]
1001c799:	inc    DWORD PTR [ebp+0xc]
1001c79c:	mov    BYTE PTR [ecx],al
1001c79e:	inc    esi
1001c79f:	test   bl,bl
1001c7a1:	mov    edx,DWORD PTR [ebp+0xc]
1001c7a4:	mov    ecx,DWORD PTR [ebp+0x10]
1001c7a7:	je     0x1001c7db
1001c7a9:	cmp    DWORD PTR [ebp-0x4],0x0
1001c7ad:	jne    0x1001c758
1001c7af:	cmp    bl,0x20
1001c7b2:	je     0x1001c7b9
1001c7b4:	cmp    bl,0x9
1001c7b7:	jne    0x1001c758
1001c7b9:	test   edx,edx
1001c7bb:	je     0x1001c7c1
1001c7bd:	mov    BYTE PTR [edx-0x1],0x0
1001c7c1:	and    DWORD PTR [ebp-0x4],0x0
1001c7c5:	cmp    BYTE PTR [esi],0x0
1001c7c8:	je     0x1001c8b7
1001c7ce:	mov    al,BYTE PTR [esi]
1001c7d0:	cmp    al,0x20
1001c7d2:	je     0x1001c7d8
1001c7d4:	cmp    al,0x9
1001c7d6:	jne    0x1001c7de
1001c7d8:	inc    esi
1001c7d9:	jmp    0x1001c7ce
1001c7db:	dec    esi
1001c7dc:	jmp    0x1001c7c1
1001c7de:	cmp    BYTE PTR [esi],0x0
1001c7e1:	je     0x1001c8b7
1001c7e7:	cmp    DWORD PTR [ebp+0x8],0x0
1001c7eb:	je     0x1001c7f6
1001c7ed:	mov    eax,DWORD PTR [ebp+0x8]
1001c7f0:	add    DWORD PTR [ebp+0x8],0x4
1001c7f4:	mov    DWORD PTR [eax],edx
1001c7f6:	inc    DWORD PTR [ecx]
1001c7f8:	xor    ebx,ebx
1001c7fa:	inc    ebx
1001c7fb:	xor    ecx,ecx
1001c7fd:	jmp    0x1001c801
1001c7ff:	inc    esi
1001c800:	inc    ecx
1001c801:	cmp    BYTE PTR [esi],0x5c
1001c804:	je     0x1001c7ff
1001c806:	cmp    BYTE PTR [esi],0x22
1001c809:	jne    0x1001c831
1001c80b:	test   cl,0x1
1001c80e:	jne    0x1001c82f
1001c810:	cmp    DWORD PTR [ebp-0x4],0x0
1001c814:	je     0x1001c822
1001c816:	lea    eax,[esi+0x1]
1001c819:	cmp    BYTE PTR [eax],0x22
1001c81c:	jne    0x1001c822
1001c81e:	mov    esi,eax
1001c820:	jmp    0x1001c82f
1001c822:	xor    eax,eax
1001c824:	xor    ebx,ebx
1001c826:	cmp    DWORD PTR [ebp-0x4],eax
1001c829:	sete   al
1001c82c:	mov    DWORD PTR [ebp-0x4],eax
1001c82f:	shr    ecx,1
1001c831:	test   ecx,ecx
1001c833:	je     0x1001c847
1001c835:	dec    ecx
1001c836:	test   edx,edx
1001c838:	je     0x1001c83e
1001c83a:	mov    BYTE PTR [edx],0x5c
1001c83d:	inc    edx
1001c83e:	inc    DWORD PTR [edi]
1001c840:	test   ecx,ecx
1001c842:	jne    0x1001c835
1001c844:	mov    DWORD PTR [ebp+0xc],edx
1001c847:	mov    al,BYTE PTR [esi]
1001c849:	test   al,al
1001c84b:	je     0x1001c8a2
1001c84d:	cmp    DWORD PTR [ebp-0x4],0x0
1001c851:	jne    0x1001c85b
1001c853:	cmp    al,0x20
1001c855:	je     0x1001c8a2
1001c857:	cmp    al,0x9
1001c859:	je     0x1001c8a2
1001c85b:	test   ebx,ebx
1001c85d:	je     0x1001c89c
1001c85f:	test   edx,edx
1001c861:	movsx  eax,al
1001c864:	push   eax
1001c865:	je     0x1001c88a
1001c867:	call   0x1002007e
1001c86c:	test   eax,eax
1001c86e:	pop    ecx
1001c86f:	je     0x1001c87e
1001c871:	mov    al,BYTE PTR [esi]
1001c873:	mov    ecx,DWORD PTR [ebp+0xc]
1001c876:	inc    DWORD PTR [ebp+0xc]
1001c879:	mov    BYTE PTR [ecx],al
1001c87b:	inc    esi
1001c87c:	inc    DWORD PTR [edi]
1001c87e:	mov    ecx,DWORD PTR [ebp+0xc]
1001c881:	mov    al,BYTE PTR [esi]
1001c883:	inc    DWORD PTR [ebp+0xc]
1001c886:	mov    BYTE PTR [ecx],al
1001c888:	jmp    0x1001c897
1001c88a:	call   0x1002007e
1001c88f:	test   eax,eax
1001c891:	pop    ecx
1001c892:	je     0x1001c897
1001c894:	inc    esi
1001c895:	inc    DWORD PTR [edi]
1001c897:	inc    DWORD PTR [edi]
1001c899:	mov    edx,DWORD PTR [ebp+0xc]
1001c89c:	inc    esi
1001c89d:	jmp    0x1001c7f8
1001c8a2:	test   edx,edx
1001c8a4:	je     0x1001c8ad
1001c8a6:	mov    BYTE PTR [edx],0x0
1001c8a9:	inc    edx
1001c8aa:	mov    DWORD PTR [ebp+0xc],edx
1001c8ad:	inc    DWORD PTR [edi]
1001c8af:	mov    ecx,DWORD PTR [ebp+0x10]
1001c8b2:	jmp    0x1001c7c5
1001c8b7:	mov    eax,DWORD PTR [ebp+0x8]
1001c8ba:	test   eax,eax
1001c8bc:	pop    esi
1001c8bd:	pop    ebx
1001c8be:	je     0x1001c8c3
1001c8c0:	and    DWORD PTR [eax],0x0
1001c8c3:	inc    DWORD PTR [ecx]
1001c8c5:	leave  
1001c8c6:	ret    
1001c8c7:	push   ebp
1001c8c8:	mov    ebp,esp
1001c8ca:	sub    esp,0xc
1001c8cd:	push   ebx
1001c8ce:	xor    ebx,ebx
1001c8d0:	cmp    DWORD PTR ds:0x100680b4,ebx
1001c8d6:	push   esi
1001c8d7:	push   edi
1001c8d8:	jne    0x1001c8df
1001c8da:	call   0x1001b1d7
1001c8df:	push   0x104
1001c8e4:	mov    esi,0x10066b38
1001c8e9:	push   esi
1001c8ea:	push   ebx
1001c8eb:	mov    BYTE PTR ds:0x10066c3c,bl
1001c8f1:	call   DWORD PTR ds:0x1002c158
1001c8f7:	mov    eax,ds:0x100680bc
1001c8fc:	cmp    eax,ebx
1001c8fe:	mov    DWORD PTR ds:0x10066664,esi
1001c904:	je     0x1001c90d
1001c906:	cmp    BYTE PTR [eax],bl
1001c908:	mov    DWORD PTR [ebp-0x4],eax
1001c90b:	jne    0x1001c910
1001c90d:	mov    DWORD PTR [ebp-0x4],esi
1001c910:	mov    edx,DWORD PTR [ebp-0x4]
1001c913:	lea    eax,[ebp-0x8]
1001c916:	push   eax
1001c917:	push   ebx
1001c918:	push   ebx
1001c919:	lea    edi,[ebp-0xc]
1001c91c:	call   0x1001c72f
1001c921:	mov    eax,DWORD PTR [ebp-0x8]
1001c924:	add    esp,0xc
1001c927:	cmp    eax,0x3fffffff
1001c92c:	jae    0x1001c978
1001c92e:	mov    ecx,DWORD PTR [ebp-0xc]
1001c931:	cmp    ecx,0xffffffff
1001c934:	jae    0x1001c978
1001c936:	mov    edi,eax
1001c938:	shl    edi,0x2
1001c93b:	lea    eax,[edi+ecx*1]
1001c93e:	cmp    eax,ecx
1001c940:	jb     0x1001c978
1001c942:	push   eax
1001c943:	call   0x100185a5
1001c948:	mov    esi,eax
1001c94a:	cmp    esi,ebx
1001c94c:	pop    ecx
1001c94d:	je     0x1001c978
1001c94f:	mov    edx,DWORD PTR [ebp-0x4]
1001c952:	lea    eax,[ebp-0x8]
1001c955:	push   eax
1001c956:	add    edi,esi
1001c958:	push   edi
1001c959:	push   esi
1001c95a:	lea    edi,[ebp-0xc]
1001c95d:	call   0x1001c72f
1001c962:	mov    eax,DWORD PTR [ebp-0x8]
1001c965:	add    esp,0xc
1001c968:	dec    eax
1001c969:	mov    ds:0x10066648,eax
1001c96e:	mov    DWORD PTR ds:0x1006664c,esi
1001c974:	xor    eax,eax
1001c976:	jmp    0x1001c97b
1001c978:	or     eax,0xffffffff
1001c97b:	pop    edi
1001c97c:	pop    esi
1001c97d:	pop    ebx
1001c97e:	leave  
1001c97f:	ret    
1001c980:	push   ecx
1001c981:	push   ecx
1001c982:	mov    eax,ds:0x10066c40
1001c987:	push   ebx
1001c988:	push   ebp
1001c989:	push   esi
1001c98a:	push   edi
1001c98b:	mov    edi,DWORD PTR ds:0x1002c19c
1001c991:	xor    ebx,ebx
1001c993:	xor    esi,esi
1001c995:	cmp    eax,ebx
1001c997:	push   0x2
1001c999:	pop    ebp
1001c99a:	jne    0x1001c9c9
1001c99c:	call   edi
1001c99e:	mov    esi,eax
1001c9a0:	cmp    esi,ebx
1001c9a2:	je     0x1001c9b0
1001c9a4:	mov    DWORD PTR ds:0x10066c40,0x1
1001c9ae:	jmp    0x1001c9d2
1001c9b0:	call   DWORD PTR ds:0x1002c07c
1001c9b6:	cmp    eax,0x78
1001c9b9:	jne    0x1001c9c4
1001c9bb:	mov    eax,ebp
1001c9bd:	mov    ds:0x10066c40,eax
1001c9c2:	jmp    0x1001c9c9
1001c9c4:	mov    eax,ds:0x10066c40
1001c9c9:	cmp    eax,0x1
1001c9cc:	jne    0x1001ca56
1001c9d2:	cmp    esi,ebx
1001c9d4:	jne    0x1001c9e5
1001c9d6:	call   edi
1001c9d8:	mov    esi,eax
1001c9da:	cmp    esi,ebx
1001c9dc:	jne    0x1001c9e5
1001c9de:	xor    eax,eax
1001c9e0:	jmp    0x1001caae
1001c9e5:	cmp    WORD PTR [esi],bx
1001c9e8:	mov    eax,esi
1001c9ea:	je     0x1001c9fa
1001c9ec:	add    eax,ebp
1001c9ee:	cmp    WORD PTR [eax],bx
1001c9f1:	jne    0x1001c9ec
1001c9f3:	add    eax,ebp
1001c9f5:	cmp    WORD PTR [eax],bx
1001c9f8:	jne    0x1001c9ec
1001c9fa:	mov    edi,DWORD PTR ds:0x1002c02c
1001ca00:	push   ebx
1001ca01:	push   ebx
1001ca02:	push   ebx
1001ca03:	sub    eax,esi
1001ca05:	push   ebx
1001ca06:	sar    eax,1
1001ca08:	inc    eax
1001ca09:	push   eax
1001ca0a:	push   esi
1001ca0b:	push   ebx
1001ca0c:	push   ebx
1001ca0d:	mov    DWORD PTR [esp+0x34],eax
1001ca11:	call   edi
1001ca13:	mov    ebp,eax
1001ca15:	cmp    ebp,ebx
1001ca17:	je     0x1001ca4b
1001ca19:	push   ebp
1001ca1a:	call   0x100185a5
1001ca1f:	cmp    eax,ebx
1001ca21:	pop    ecx
1001ca22:	mov    DWORD PTR [esp+0x10],eax
1001ca26:	je     0x1001ca4b
1001ca28:	push   ebx
1001ca29:	push   ebx
1001ca2a:	push   ebp
1001ca2b:	push   eax
1001ca2c:	push   DWORD PTR [esp+0x24]
1001ca30:	push   esi
1001ca31:	push   ebx
1001ca32:	push   ebx
1001ca33:	call   edi
1001ca35:	test   eax,eax
1001ca37:	jne    0x1001ca47
1001ca39:	push   DWORD PTR [esp+0x10]
1001ca3d:	call   0x10016b35
1001ca42:	pop    ecx
1001ca43:	mov    DWORD PTR [esp+0x10],ebx
1001ca47:	mov    ebx,DWORD PTR [esp+0x10]
1001ca4b:	push   esi
1001ca4c:	call   DWORD PTR ds:0x1002c194
1001ca52:	mov    eax,ebx
1001ca54:	jmp    0x1001caae
1001ca56:	cmp    eax,ebp
1001ca58:	je     0x1001ca5e
1001ca5a:	cmp    eax,ebx
1001ca5c:	jne    0x1001c9de
1001ca5e:	call   DWORD PTR ds:0x1002c190
1001ca64:	mov    esi,eax
1001ca66:	cmp    esi,ebx
1001ca68:	je     0x1001c9de
1001ca6e:	cmp    BYTE PTR [esi],bl
1001ca70:	je     0x1001ca7c
1001ca72:	inc    eax
1001ca73:	cmp    BYTE PTR [eax],bl
1001ca75:	jne    0x1001ca72
1001ca77:	inc    eax
1001ca78:	cmp    BYTE PTR [eax],bl
1001ca7a:	jne    0x1001ca72
1001ca7c:	sub    eax,esi
1001ca7e:	inc    eax
1001ca7f:	mov    ebp,eax
1001ca81:	push   ebp
1001ca82:	call   0x100185a5
1001ca87:	mov    edi,eax
1001ca89:	cmp    edi,ebx
1001ca8b:	pop    ecx
1001ca8c:	jne    0x1001ca9a
1001ca8e:	push   esi
1001ca8f:	call   DWORD PTR ds:0x1002c18c
1001ca95:	jmp    0x1001c9de
1001ca9a:	push   ebp
1001ca9b:	push   esi
1001ca9c:	push   edi
1001ca9d:	call   0x100167d0
1001caa2:	add    esp,0xc
1001caa5:	push   esi
1001caa6:	call   DWORD PTR ds:0x1002c18c
1001caac:	mov    eax,edi
1001caae:	pop    edi
1001caaf:	pop    esi
1001cab0:	pop    ebp
1001cab1:	pop    ebx
1001cab2:	pop    ecx
1001cab3:	pop    ecx
1001cab4:	ret    
1001cab5:	push   esi
1001cab6:	push   edi
1001cab7:	mov    eax,0x10057960
1001cabc:	mov    edi,0x10057960
1001cac1:	cmp    eax,edi
1001cac3:	mov    esi,eax
1001cac5:	jae    0x1001cad6
1001cac7:	mov    eax,DWORD PTR [esi]
1001cac9:	test   eax,eax
1001cacb:	je     0x1001cacf
1001cacd:	call   eax
1001cacf:	add    esi,0x4
1001cad2:	cmp    esi,edi
1001cad4:	jb     0x1001cac7
1001cad6:	pop    edi
1001cad7:	pop    esi
1001cad8:	ret    
1001cad9:	push   esi
1001cada:	push   edi
1001cadb:	mov    eax,0x10057968
1001cae0:	mov    edi,0x10057968
1001cae5:	cmp    eax,edi
1001cae7:	mov    esi,eax
1001cae9:	jae    0x1001cafa
1001caeb:	mov    eax,DWORD PTR [esi]
1001caed:	test   eax,eax
1001caef:	je     0x1001caf3
1001caf1:	call   eax
1001caf3:	add    esi,0x4
1001caf6:	cmp    esi,edi
1001caf8:	jb     0x1001caeb
1001cafa:	pop    edi
1001cafb:	pop    esi
1001cafc:	ret    
1001cafd:	push   ebp
1001cafe:	mov    ebp,esp
1001cb00:	push   ecx
1001cb01:	push   ecx
1001cb02:	push   esi
1001cb03:	call   0x1001979f
1001cb08:	mov    esi,eax
1001cb0a:	test   esi,esi
1001cb0c:	je     0x1001cc58
1001cb12:	mov    edx,DWORD PTR [esi+0x5c]
1001cb15:	mov    eax,ds:0x1006524c
1001cb1a:	push   edi
1001cb1b:	mov    edi,DWORD PTR [ebp+0x8]
1001cb1e:	mov    ecx,edx
1001cb20:	push   ebx
1001cb21:	cmp    DWORD PTR [ecx],edi
1001cb23:	je     0x1001cb33
1001cb25:	mov    ebx,eax
1001cb27:	imul   ebx,ebx,0xc
1001cb2a:	add    ecx,0xc
1001cb2d:	add    ebx,edx
1001cb2f:	cmp    ecx,ebx
1001cb31:	jb     0x1001cb21
1001cb33:	imul   eax,eax,0xc
1001cb36:	add    eax,edx
1001cb38:	cmp    ecx,eax
1001cb3a:	jae    0x1001cb44
1001cb3c:	cmp    DWORD PTR [ecx],edi
1001cb3e:	jne    0x1001cb44
1001cb40:	mov    eax,ecx
1001cb42:	jmp    0x1001cb46
1001cb44:	xor    eax,eax
1001cb46:	test   eax,eax
1001cb48:	je     0x1001cb54
1001cb4a:	mov    ebx,DWORD PTR [eax+0x8]
1001cb4d:	test   ebx,ebx
1001cb4f:	mov    DWORD PTR [ebp-0x4],ebx
1001cb52:	jne    0x1001cb5b
1001cb54:	xor    eax,eax
1001cb56:	jmp    0x1001cc56
1001cb5b:	cmp    ebx,0x5
1001cb5e:	jne    0x1001cb6c
1001cb60:	and    DWORD PTR [eax+0x8],0x0
1001cb64:	xor    eax,eax
1001cb66:	inc    eax
1001cb67:	jmp    0x1001cc56
1001cb6c:	cmp    ebx,0x1
1001cb6f:	je     0x1001cc53
1001cb75:	mov    ecx,DWORD PTR [esi+0x60]
1001cb78:	mov    DWORD PTR [ebp-0x8],ecx
1001cb7b:	mov    ecx,DWORD PTR [ebp+0xc]
1001cb7e:	mov    DWORD PTR [esi+0x60],ecx
1001cb81:	mov    ecx,DWORD PTR [eax+0x4]
1001cb84:	cmp    ecx,0x8
1001cb87:	jne    0x1001cc45
1001cb8d:	mov    ecx,DWORD PTR ds:0x10065240
1001cb93:	mov    edi,DWORD PTR ds:0x10065244
1001cb99:	mov    edx,ecx
1001cb9b:	add    edi,ecx
1001cb9d:	cmp    edx,edi
1001cb9f:	jge    0x1001cbc5
1001cba1:	imul   ecx,ecx,0xc
1001cba4:	mov    edi,DWORD PTR [esi+0x5c]
1001cba7:	and    DWORD PTR [ecx+edi*1+0x8],0x0
1001cbac:	mov    edi,DWORD PTR ds:0x10065240
1001cbb2:	mov    ebx,DWORD PTR ds:0x10065244
1001cbb8:	inc    edx
1001cbb9:	add    ebx,edi
1001cbbb:	add    ecx,0xc
1001cbbe:	cmp    edx,ebx
1001cbc0:	jl     0x1001cba4
1001cbc2:	mov    ebx,DWORD PTR [ebp-0x4]
1001cbc5:	mov    eax,DWORD PTR [eax]
1001cbc7:	cmp    eax,0xc000008e
1001cbcc:	mov    edi,DWORD PTR [esi+0x64]
1001cbcf:	jne    0x1001cbda
1001cbd1:	mov    DWORD PTR [esi+0x64],0x83
1001cbd8:	jmp    0x1001cc38
1001cbda:	cmp    eax,0xc0000090
1001cbdf:	jne    0x1001cbea
1001cbe1:	mov    DWORD PTR [esi+0x64],0x81
1001cbe8:	jmp    0x1001cc38
1001cbea:	cmp    eax,0xc0000091
1001cbef:	jne    0x1001cbfa
1001cbf1:	mov    DWORD PTR [esi+0x64],0x84
1001cbf8:	jmp    0x1001cc38
1001cbfa:	cmp    eax,0xc0000093
1001cbff:	jne    0x1001cc0a
1001cc01:	mov    DWORD PTR [esi+0x64],0x85
1001cc08:	jmp    0x1001cc38
1001cc0a:	cmp    eax,0xc000008d
1001cc0f:	jne    0x1001cc1a
1001cc11:	mov    DWORD PTR [esi+0x64],0x82
1001cc18:	jmp    0x1001cc38
1001cc1a:	cmp    eax,0xc000008f
1001cc1f:	jne    0x1001cc2a
1001cc21:	mov    DWORD PTR [esi+0x64],0x86
1001cc28:	jmp    0x1001cc38
1001cc2a:	cmp    eax,0xc0000092
1001cc2f:	jne    0x1001cc38
1001cc31:	mov    DWORD PTR [esi+0x64],0x8a
1001cc38:	push   DWORD PTR [esi+0x64]
1001cc3b:	push   0x8
1001cc3d:	call   ebx
1001cc3f:	pop    ecx
1001cc40:	mov    DWORD PTR [esi+0x64],edi
1001cc43:	jmp    0x1001cc4c
1001cc45:	and    DWORD PTR [eax+0x8],0x0
1001cc49:	push   ecx
1001cc4a:	call   ebx
1001cc4c:	mov    eax,DWORD PTR [ebp-0x8]
1001cc4f:	pop    ecx
1001cc50:	mov    DWORD PTR [esi+0x60],eax
1001cc53:	or     eax,0xffffffff
1001cc56:	pop    ebx
1001cc57:	pop    edi
1001cc58:	pop    esi
1001cc59:	leave  
1001cc5a:	ret    
1001cc5b:	mov    eax,0xe06d7363
1001cc60:	cmp    DWORD PTR [esp+0x4],eax
1001cc64:	jne    0x1001cc73
1001cc66:	push   DWORD PTR [esp+0x8]
1001cc6a:	push   eax
1001cc6b:	call   0x1001cafd
1001cc70:	pop    ecx
1001cc71:	pop    ecx
1001cc72:	ret    
1001cc73:	xor    eax,eax
1001cc75:	ret    
1001cc76:	push   ebp
1001cc77:	mov    ebp,esp
1001cc79:	sub    esp,0x10
1001cc7c:	mov    eax,ds:0x10064694
1001cc81:	and    DWORD PTR [ebp-0x8],0x0
1001cc85:	and    DWORD PTR [ebp-0x4],0x0
1001cc89:	push   ebx
1001cc8a:	push   edi
1001cc8b:	mov    edi,0xbb40e64e
1001cc90:	cmp    eax,edi
1001cc92:	mov    ebx,0xffff0000
1001cc97:	je     0x1001cca6
1001cc99:	test   ebx,eax
1001cc9b:	je     0x1001cca6
1001cc9d:	not    eax
1001cc9f:	mov    ds:0x10064698,eax
1001cca4:	jmp    0x1001cd06
1001cca6:	push   esi
1001cca7:	lea    eax,[ebp-0x8]
1001ccaa:	push   eax
1001ccab:	call   DWORD PTR ds:0x1002c234
1001ccb1:	mov    esi,DWORD PTR [ebp-0x4]
1001ccb4:	xor    esi,DWORD PTR [ebp-0x8]
1001ccb7:	call   DWORD PTR ds:0x1002c0a0
1001ccbd:	xor    esi,eax
1001ccbf:	call   DWORD PTR ds:0x1002c138
1001ccc5:	xor    esi,eax
1001ccc7:	call   DWORD PTR ds:0x1002c164
1001cccd:	xor    esi,eax
1001cccf:	lea    eax,[ebp-0x10]
1001ccd2:	push   eax
1001ccd3:	call   DWORD PTR ds:0x1002c198
1001ccd9:	mov    eax,DWORD PTR [ebp-0xc]
1001ccdc:	xor    eax,DWORD PTR [ebp-0x10]
1001ccdf:	xor    esi,eax
1001cce1:	cmp    esi,edi
1001cce3:	jne    0x1001ccec
1001cce5:	mov    esi,0xbb40e64f
1001ccea:	jmp    0x1001ccf7
1001ccec:	test   ebx,esi
1001ccee:	jne    0x1001ccf7
1001ccf0:	mov    eax,esi
1001ccf2:	shl    eax,0x10
1001ccf5:	or     esi,eax
1001ccf7:	mov    DWORD PTR ds:0x10064694,esi
1001ccfd:	not    esi
1001ccff:	mov    DWORD PTR ds:0x10064698,esi
1001cd05:	pop    esi
1001cd06:	pop    edi
1001cd07:	pop    ebx
1001cd08:	leave  
1001cd09:	ret    
1001cd0a:	push   ebp
1001cd0b:	mov    ebp,esp
1001cd0d:	sub    esp,0x14
1001cd10:	cmp    WORD PTR [ebp+0x8],0xffff
1001cd16:	jne    0x1001cd1e
1001cd18:	and    DWORD PTR [ebp-0x4],0x0
1001cd1c:	jmp    0x1001cd80
1001cd1e:	cmp    WORD PTR [ebp+0x8],0x100
1001cd24:	jae    0x1001cd40
1001cd26:	movzx  eax,WORD PTR [ebp+0x8]
1001cd2a:	mov    ecx,DWORD PTR ds:0x100647d8
1001cd30:	mov    ax,WORD PTR [ecx+eax*2]
1001cd34:	and    ax,WORD PTR [ebp+0xc]
1001cd38:	movzx  eax,ax
1001cd3b:	mov    DWORD PTR [ebp-0x4],eax
1001cd3e:	jmp    0x1001cd80
1001cd40:	push   DWORD PTR [ebp+0x10]
1001cd43:	lea    ecx,[ebp-0x14]
1001cd46:	call   0x100165aa
1001cd4b:	mov    eax,DWORD PTR [ebp-0x14]
1001cd4e:	push   DWORD PTR [eax+0x14]
1001cd51:	push   DWORD PTR [eax+0x4]
1001cd54:	lea    eax,[ebp-0x4]
1001cd57:	push   eax
1001cd58:	push   0x1
1001cd5a:	lea    eax,[ebp+0x8]
1001cd5d:	push   eax
1001cd5e:	lea    eax,[ebp-0x14]
1001cd61:	push   0x1
1001cd63:	push   eax
1001cd64:	call   0x100215c5
1001cd69:	add    esp,0x1c
1001cd6c:	test   eax,eax
1001cd6e:	jne    0x1001cd73
1001cd70:	and    DWORD PTR [ebp-0x4],eax
1001cd73:	cmp    BYTE PTR [ebp-0x8],0x0
1001cd77:	je     0x1001cd80
1001cd79:	mov    eax,DWORD PTR [ebp-0xc]
1001cd7c:	and    DWORD PTR [eax+0x70],0xfffffffd
1001cd80:	movzx  eax,WORD PTR [ebp-0x4]
1001cd84:	movzx  ecx,WORD PTR [ebp+0xc]
1001cd88:	and    eax,ecx
1001cd8a:	leave  
1001cd8b:	ret    
1001cd8c:	push   ebp
1001cd8d:	mov    ebp,esp
1001cd8f:	push   ecx
1001cd90:	cmp    WORD PTR [ebp+0x8],0xffff
1001cd96:	jne    0x1001cd9c
1001cd98:	xor    eax,eax
1001cd9a:	leave  
1001cd9b:	ret    
1001cd9c:	cmp    WORD PTR [ebp+0x8],0x100
1001cda2:	jae    0x1001cdba
1001cda4:	movzx  eax,WORD PTR [ebp+0x8]
1001cda8:	mov    ecx,DWORD PTR ds:0x100647d8
1001cdae:	movzx  eax,WORD PTR [ecx+eax*2]
1001cdb2:	movzx  ecx,WORD PTR [ebp+0xc]
1001cdb6:	and    eax,ecx
1001cdb8:	leave  
1001cdb9:	ret    
1001cdba:	cmp    DWORD PTR ds:0x100662e8,0x0
1001cdc1:	jne    0x1001cde8
1001cdc3:	push   DWORD PTR ds:0x10064ed4
1001cdc9:	lea    eax,[ebp-0x4]
1001cdcc:	push   DWORD PTR ds:0x10064ec4
1001cdd2:	push   eax
1001cdd3:	push   0x1
1001cdd5:	lea    eax,[ebp+0x8]
1001cdd8:	push   eax
1001cdd9:	push   0x1
1001cddb:	push   0x10064fa0
1001cde0:	call   0x100215c5
1001cde5:	add    esp,0x1c
1001cde8:	push   0x0
1001cdea:	push   DWORD PTR [ebp+0xc]
1001cded:	push   DWORD PTR [ebp+0x8]
1001cdf0:	call   0x1001cd0a
1001cdf5:	add    esp,0xc
1001cdf8:	leave  
1001cdf9:	ret    
1001cdfa:	push   ebp
1001cdfb:	mov    ebp,esp
1001cdfd:	push   ecx
1001cdfe:	push   esi
1001cdff:	mov    esi,DWORD PTR [ebp+0xc]
1001ce02:	push   esi
1001ce03:	call   0x1001e90b
1001ce08:	mov    DWORD PTR [ebp+0xc],eax
1001ce0b:	mov    eax,DWORD PTR [esi+0xc]
1001ce0e:	test   al,0x82
1001ce10:	pop    ecx
1001ce11:	jne    0x1001ce2a
1001ce13:	call   0x10019ffe
1001ce18:	mov    DWORD PTR [eax],0x9
1001ce1e:	or     DWORD PTR [esi+0xc],0x20
1001ce22:	or     eax,0xffffffff
1001ce25:	jmp    0x1001cf57
1001ce2a:	test   al,0x40
1001ce2c:	je     0x1001ce3b
1001ce2e:	call   0x10019ffe
1001ce33:	mov    DWORD PTR [eax],0x22
1001ce39:	jmp    0x1001ce1e
1001ce3b:	push   ebx
1001ce3c:	xor    ebx,ebx
1001ce3e:	test   al,0x1
1001ce40:	je     0x1001ce58
1001ce42:	test   al,0x10
1001ce44:	mov    DWORD PTR [esi+0x4],ebx
1001ce47:	je     0x1001ced2
1001ce4d:	mov    ecx,DWORD PTR [esi+0x8]
1001ce50:	and    eax,0xfffffffe
1001ce53:	mov    DWORD PTR [esi],ecx
1001ce55:	mov    DWORD PTR [esi+0xc],eax
1001ce58:	mov    eax,DWORD PTR [esi+0xc]
1001ce5b:	and    eax,0xffffffef
1001ce5e:	or     eax,0x2
1001ce61:	test   ax,0x10c
1001ce65:	mov    DWORD PTR [esi+0xc],eax
1001ce68:	mov    DWORD PTR [esi+0x4],ebx
1001ce6b:	mov    DWORD PTR [ebp-0x4],ebx
1001ce6e:	jne    0x1001ce9c
1001ce70:	call   0x1001e615
1001ce75:	add    eax,0x20
1001ce78:	cmp    esi,eax
1001ce7a:	je     0x1001ce88
1001ce7c:	call   0x1001e615
1001ce81:	add    eax,0x40
1001ce84:	cmp    esi,eax
1001ce86:	jne    0x1001ce95
1001ce88:	push   DWORD PTR [ebp+0xc]
1001ce8b:	call   0x10021647
1001ce90:	test   eax,eax
1001ce92:	pop    ecx
1001ce93:	jne    0x1001ce9c
1001ce95:	push   esi
1001ce96:	call   0x10021603
1001ce9b:	pop    ecx
1001ce9c:	test   WORD PTR [esi+0xc],0x108
1001cea2:	push   edi
1001cea3:	je     0x1001cf29
1001cea9:	mov    eax,DWORD PTR [esi+0x8]
1001ceac:	mov    edi,DWORD PTR [esi]
1001ceae:	lea    ecx,[eax+0x1]
1001ceb1:	mov    DWORD PTR [esi],ecx
1001ceb3:	mov    ecx,DWORD PTR [esi+0x18]
1001ceb6:	sub    edi,eax
1001ceb8:	dec    ecx
1001ceb9:	cmp    edi,ebx
1001cebb:	mov    DWORD PTR [esi+0x4],ecx
1001cebe:	jle    0x1001cedd
1001cec0:	push   edi
1001cec1:	push   eax
1001cec2:	push   DWORD PTR [ebp+0xc]
1001cec5:	call   0x1001fbf8
1001ceca:	add    esp,0xc
1001cecd:	mov    DWORD PTR [ebp-0x4],eax
1001ced0:	jmp    0x1001cf1f
1001ced2:	or     eax,0x20
1001ced5:	mov    DWORD PTR [esi+0xc],eax
1001ced8:	or     eax,0xffffffff
1001cedb:	jmp    0x1001cf56
1001cedd:	mov    ecx,DWORD PTR [ebp+0xc]
1001cee0:	cmp    ecx,0xffffffff
1001cee3:	je     0x1001cf00
1001cee5:	cmp    ecx,0xfffffffe
1001cee8:	je     0x1001cf00
1001ceea:	mov    eax,ecx
1001ceec:	and    eax,0x1f
1001ceef:	mov    edx,ecx
1001cef1:	sar    edx,0x5
1001cef4:	shl    eax,0x6
1001cef7:	add    eax,DWORD PTR [edx*4+0x10067f80]
1001cefe:	jmp    0x1001cf05
1001cf00:	mov    eax,0x10065188
1001cf05:	test   BYTE PTR [eax+0x4],0x20
1001cf09:	je     0x1001cf1f
1001cf0b:	push   0x2
1001cf0d:	push   ebx
1001cf0e:	push   ebx
1001cf0f:	push   ecx
1001cf10:	call   0x1001e2ac
1001cf15:	and    eax,edx
1001cf17:	add    esp,0x10
1001cf1a:	cmp    eax,0xffffffff
1001cf1d:	je     0x1001cf44
1001cf1f:	mov    eax,DWORD PTR [esi+0x8]
1001cf22:	mov    cl,BYTE PTR [ebp+0x8]
1001cf25:	mov    BYTE PTR [eax],cl
1001cf27:	jmp    0x1001cf3f
1001cf29:	xor    edi,edi
1001cf2b:	inc    edi
1001cf2c:	push   edi
1001cf2d:	lea    eax,[ebp+0x8]
1001cf30:	push   eax
1001cf31:	push   DWORD PTR [ebp+0xc]
1001cf34:	call   0x1001fbf8
1001cf39:	add    esp,0xc
1001cf3c:	mov    DWORD PTR [ebp-0x4],eax
1001cf3f:	cmp    DWORD PTR [ebp-0x4],edi
1001cf42:	je     0x1001cf4d
1001cf44:	or     DWORD PTR [esi+0xc],0x20
1001cf48:	or     eax,0xffffffff
1001cf4b:	jmp    0x1001cf55
1001cf4d:	mov    eax,DWORD PTR [ebp+0x8]
1001cf50:	and    eax,0xff
1001cf55:	pop    edi
1001cf56:	pop    ebx
1001cf57:	pop    esi
1001cf58:	leave  
1001cf59:	ret    
1001cf5a:	test   BYTE PTR [eax+0xc],0x40
1001cf5e:	je     0x1001cf66
1001cf60:	cmp    DWORD PTR [eax+0x8],0x0
1001cf64:	je     0x1001cf7c
1001cf66:	push   eax
1001cf67:	push   DWORD PTR [esp+0x8]
1001cf6b:	call   0x100216a5
1001cf70:	cmp    ax,0xffff
1001cf74:	pop    ecx
1001cf75:	pop    ecx
1001cf76:	jne    0x1001cf7c
1001cf78:	or     DWORD PTR [esi],0xffffffff
1001cf7b:	ret    
1001cf7c:	inc    DWORD PTR [esi]
1001cf7e:	ret    
1001cf7f:	push   ebp
1001cf80:	mov    ebp,esp
1001cf82:	push   esi
1001cf83:	mov    esi,eax
1001cf85:	jmp    0x1001cf9b
1001cf87:	push   DWORD PTR [ebp+0x8]
1001cf8a:	mov    eax,DWORD PTR [ebp+0x10]
1001cf8d:	dec    DWORD PTR [ebp+0xc]
1001cf90:	call   0x1001cf5a
1001cf95:	cmp    DWORD PTR [esi],0xffffffff
1001cf98:	pop    ecx
1001cf99:	je     0x1001cfa1
1001cf9b:	cmp    DWORD PTR [ebp+0xc],0x0
1001cf9f:	jg     0x1001cf87
1001cfa1:	pop    esi
1001cfa2:	pop    ebp
1001cfa3:	ret    
1001cfa4:	test   BYTE PTR [edi+0xc],0x40
1001cfa8:	push   ebx
1001cfa9:	push   esi
1001cfaa:	mov    esi,eax
1001cfac:	mov    ebx,ecx
1001cfae:	je     0x1001cfe9
1001cfb0:	cmp    DWORD PTR [edi+0x8],0x0
1001cfb4:	jne    0x1001cfe9
1001cfb6:	mov    eax,DWORD PTR [esp+0xc]
1001cfba:	add    DWORD PTR [esi],eax
1001cfbc:	jmp    0x1001cff0
1001cfbe:	movzx  eax,WORD PTR [ebx]
1001cfc1:	dec    DWORD PTR [esp+0xc]
1001cfc5:	push   eax
1001cfc6:	mov    eax,edi
1001cfc8:	call   0x1001cf5a
1001cfcd:	inc    ebx
1001cfce:	inc    ebx
1001cfcf:	cmp    DWORD PTR [esi],0xffffffff
1001cfd2:	pop    ecx
1001cfd3:	jne    0x1001cfe9
1001cfd5:	call   0x10019ffe
1001cfda:	cmp    DWORD PTR [eax],0x2a
1001cfdd:	jne    0x1001cff0
1001cfdf:	push   0x3f
1001cfe1:	mov    eax,edi
1001cfe3:	call   0x1001cf5a
1001cfe8:	pop    ecx
1001cfe9:	cmp    DWORD PTR [esp+0xc],0x0
1001cfee:	jg     0x1001cfbe
1001cff0:	pop    esi
1001cff1:	pop    ebx
1001cff2:	ret    
1001cff3:	push   ebp
1001cff4:	lea    ebp,[esp-0x3f4]
1001cffb:	sub    esp,0x474
1001d001:	mov    eax,ds:0x10064694
1001d006:	xor    eax,ebp
1001d008:	mov    DWORD PTR [ebp+0x3f0],eax
1001d00e:	mov    eax,DWORD PTR [ebp+0x3fc]
1001d014:	push   ebx
1001d015:	mov    ebx,DWORD PTR [ebp+0x408]
1001d01b:	push   esi
1001d01c:	mov    esi,DWORD PTR [ebp+0x400]
1001d022:	push   edi
1001d023:	push   DWORD PTR [ebp+0x404]
1001d029:	xor    edi,edi
1001d02b:	lea    ecx,[ebp-0x64]
1001d02e:	mov    DWORD PTR [ebp-0x3c],eax
1001d031:	mov    DWORD PTR [ebp-0x28],ebx
1001d034:	mov    DWORD PTR [ebp-0x54],edi
1001d037:	mov    DWORD PTR [ebp-0x14],edi
1001d03a:	mov    DWORD PTR [ebp-0x38],edi
1001d03d:	mov    DWORD PTR [ebp-0x18],edi
1001d040:	mov    DWORD PTR [ebp-0x30],edi
1001d043:	mov    DWORD PTR [ebp-0x48],edi
1001d046:	mov    DWORD PTR [ebp-0x34],edi
1001d049:	call   0x100165aa
1001d04e:	cmp    DWORD PTR [ebp-0x3c],edi
1001d051:	jne    0x1001d080
1001d053:	call   0x10019ffe
1001d058:	push   edi
1001d059:	push   edi
1001d05a:	push   edi
1001d05b:	push   edi
1001d05c:	mov    DWORD PTR [eax],0x16
1001d062:	push   edi
1001d063:	call   0x1001611f
1001d068:	add    esp,0x14
1001d06b:	cmp    BYTE PTR [ebp-0x58],0x0
1001d06f:	je     0x1001d078
1001d071:	mov    eax,DWORD PTR [ebp-0x5c]
1001d074:	and    DWORD PTR [eax+0x70],0xfffffffd
1001d078:	or     eax,0xffffffff
1001d07b:	jmp    0x1001d8cb
1001d080:	cmp    esi,edi
1001d082:	je     0x1001d053
1001d084:	movzx  edx,WORD PTR [esi]
1001d087:	xor    ecx,ecx
1001d089:	cmp    dx,di
1001d08c:	mov    DWORD PTR [ebp-0x2c],edi
1001d08f:	mov    DWORD PTR [ebp-0x20],edi
1001d092:	mov    DWORD PTR [ebp-0x50],edi
1001d095:	mov    DWORD PTR [ebp-0x24],edx
1001d098:	je     0x1001d8bb
1001d09e:	push   0x2
1001d0a0:	pop    edi
1001d0a1:	add    esi,edi
1001d0a3:	cmp    DWORD PTR [ebp-0x2c],0x0
1001d0a7:	mov    DWORD PTR [ebp-0x4c],esi
1001d0aa:	jl     0x1001d8bb
1001d0b0:	lea    eax,[edx-0x20]
1001d0b3:	cmp    ax,0x58
1001d0b7:	ja     0x1001d0c8
1001d0b9:	movzx  eax,dx
1001d0bc:	movzx  eax,BYTE PTR [eax+0x100513c8]
1001d0c3:	and    eax,0xf
1001d0c6:	jmp    0x1001d0ca
1001d0c8:	xor    eax,eax
1001d0ca:	movsx  eax,BYTE PTR [ecx+eax*8+0x100513e8]
1001d0d2:	push   0x7
1001d0d4:	sar    eax,0x4
1001d0d7:	pop    ecx
1001d0d8:	cmp    eax,ecx
1001d0da:	mov    DWORD PTR [ebp-0x68],eax
1001d0dd:	ja     0x1001d889
1001d0e3:	jmp    DWORD PTR [eax*4+0x1001d8e3]
1001d0ea:	xor    eax,eax
1001d0ec:	or     DWORD PTR [ebp-0x18],0xffffffff
1001d0f0:	mov    DWORD PTR [ebp-0x6c],eax
1001d0f3:	mov    DWORD PTR [ebp-0x48],eax
1001d0f6:	mov    DWORD PTR [ebp-0x38],eax
1001d0f9:	mov    DWORD PTR [ebp-0x30],eax
1001d0fc:	mov    DWORD PTR [ebp-0x14],eax
1001d0ff:	mov    DWORD PTR [ebp-0x34],eax
1001d102:	jmp    0x1001d889
1001d107:	movzx  eax,dx
1001d10a:	sub    eax,0x20
1001d10d:	je     0x1001d14d
1001d10f:	sub    eax,0x3
1001d112:	je     0x1001d141
1001d114:	sub    eax,0x8
1001d117:	je     0x1001d138
1001d119:	sub    eax,edi
1001d11b:	je     0x1001d12f
1001d11d:	sub    eax,0x3
1001d120:	jne    0x1001d889
1001d126:	or     DWORD PTR [ebp-0x14],0x8
1001d12a:	jmp    0x1001d889
1001d12f:	or     DWORD PTR [ebp-0x14],0x4
1001d133:	jmp    0x1001d889
1001d138:	or     DWORD PTR [ebp-0x14],0x1
1001d13c:	jmp    0x1001d889
1001d141:	or     DWORD PTR [ebp-0x14],0x80
1001d148:	jmp    0x1001d889
1001d14d:	or     DWORD PTR [ebp-0x14],edi
1001d150:	jmp    0x1001d889
1001d155:	cmp    dx,0x2a
1001d159:	jne    0x1001d17b
1001d15b:	add    ebx,0x4
1001d15e:	mov    DWORD PTR [ebp-0x28],ebx
1001d161:	mov    ebx,DWORD PTR [ebx-0x4]
1001d164:	test   ebx,ebx
1001d166:	mov    DWORD PTR [ebp-0x38],ebx
1001d169:	jge    0x1001d889
1001d16f:	or     DWORD PTR [ebp-0x14],0x4
1001d173:	neg    DWORD PTR [ebp-0x38]
1001d176:	jmp    0x1001d889
1001d17b:	mov    eax,DWORD PTR [ebp-0x38]
1001d17e:	imul   eax,eax,0xa
1001d181:	movzx  ecx,dx
1001d184:	lea    eax,[eax+ecx*1-0x30]
1001d188:	mov    DWORD PTR [ebp-0x38],eax
1001d18b:	jmp    0x1001d889
1001d190:	and    DWORD PTR [ebp-0x18],0x0
1001d194:	jmp    0x1001d889
1001d199:	cmp    dx,0x2a
1001d19d:	jne    0x1001d1bc
1001d19f:	add    ebx,0x4
1001d1a2:	mov    DWORD PTR [ebp-0x28],ebx
1001d1a5:	mov    ebx,DWORD PTR [ebx-0x4]
1001d1a8:	test   ebx,ebx
1001d1aa:	mov    DWORD PTR [ebp-0x18],ebx
1001d1ad:	jge    0x1001d889
1001d1b3:	or     DWORD PTR [ebp-0x18],0xffffffff
1001d1b7:	jmp    0x1001d889
1001d1bc:	mov    eax,DWORD PTR [ebp-0x18]
1001d1bf:	imul   eax,eax,0xa
1001d1c2:	movzx  ecx,dx
1001d1c5:	lea    eax,[eax+ecx*1-0x30]
1001d1c9:	mov    DWORD PTR [ebp-0x18],eax
1001d1cc:	jmp    0x1001d889
1001d1d1:	movzx  eax,dx
1001d1d4:	cmp    eax,0x49
1001d1d7:	je     0x1001d221
1001d1d9:	cmp    eax,0x68
1001d1dc:	je     0x1001d218
1001d1de:	cmp    eax,0x6c
1001d1e1:	je     0x1001d1f8
1001d1e3:	cmp    eax,0x77
1001d1e6:	jne    0x1001d889
1001d1ec:	or     DWORD PTR [ebp-0x14],0x800
1001d1f3:	jmp    0x1001d889
1001d1f8:	cmp    WORD PTR [esi],0x6c
1001d1fc:	jne    0x1001d20f
1001d1fe:	add    esi,edi
1001d200:	or     DWORD PTR [ebp-0x14],0x1000
1001d207:	mov    DWORD PTR [ebp-0x4c],esi
1001d20a:	jmp    0x1001d889
1001d20f:	or     DWORD PTR [ebp-0x14],0x10
1001d213:	jmp    0x1001d889
1001d218:	or     DWORD PTR [ebp-0x14],0x20
1001d21c:	jmp    0x1001d889
1001d221:	movzx  eax,WORD PTR [esi]
1001d224:	cmp    ax,0x36
1001d228:	jne    0x1001d243
1001d22a:	cmp    WORD PTR [esi+0x2],0x34
1001d22f:	jne    0x1001d243
1001d231:	add    esi,0x4
1001d234:	or     DWORD PTR [ebp-0x14],0x8000
1001d23b:	mov    DWORD PTR [ebp-0x4c],esi
1001d23e:	jmp    0x1001d889
1001d243:	cmp    ax,0x33
1001d247:	jne    0x1001d262
1001d249:	cmp    WORD PTR [esi+0x2],0x32
1001d24e:	jne    0x1001d262
1001d250:	add    esi,0x4
1001d253:	and    DWORD PTR [ebp-0x14],0xffff7fff
1001d25a:	mov    DWORD PTR [ebp-0x4c],esi
1001d25d:	jmp    0x1001d889
1001d262:	cmp    ax,0x64
1001d266:	je     0x1001d889
1001d26c:	cmp    ax,0x69
1001d270:	je     0x1001d889
1001d276:	cmp    ax,0x6f
1001d27a:	je     0x1001d889
1001d280:	cmp    ax,0x75
1001d284:	je     0x1001d889
1001d28a:	cmp    ax,0x78
1001d28e:	je     0x1001d889
1001d294:	cmp    ax,0x58
1001d298:	je     0x1001d889
1001d29e:	and    DWORD PTR [ebp-0x68],0x0
1001d2a2:	mov    eax,DWORD PTR [ebp-0x3c]
1001d2a5:	push   edx
1001d2a6:	lea    esi,[ebp-0x2c]
1001d2a9:	mov    DWORD PTR [ebp-0x34],0x1
1001d2b0:	call   0x1001cf5a
1001d2b5:	jmp    0x1001d888
1001d2ba:	movzx  eax,dx
1001d2bd:	cmp    eax,0x64
1001d2c0:	jg     0x1001d46d
1001d2c6:	je     0x1001d4ec
1001d2cc:	cmp    eax,0x53
1001d2cf:	jg     0x1001d3ac
1001d2d5:	je     0x1001d336
1001d2d7:	sub    eax,0x41
1001d2da:	je     0x1001d2ec
1001d2dc:	sub    eax,edi
1001d2de:	je     0x1001d321
1001d2e0:	sub    eax,edi
1001d2e2:	je     0x1001d2ec
1001d2e4:	sub    eax,edi
1001d2e6:	jne    0x1001d76d
1001d2ec:	add    edx,0x20
1001d2ef:	mov    DWORD PTR [ebp-0x6c],0x1
1001d2f6:	mov    DWORD PTR [ebp-0x24],edx
1001d2f9:	or     DWORD PTR [ebp-0x14],0x40
1001d2fd:	cmp    DWORD PTR [ebp-0x18],0x0
1001d301:	lea    esi,[ebp-0x10]
1001d304:	mov    eax,0x200
1001d309:	mov    DWORD PTR [ebp-0x1c],esi
1001d30c:	mov    DWORD PTR [ebp-0x20],eax
1001d30f:	jge    0x1001d510
1001d315:	mov    DWORD PTR [ebp-0x18],0x6
1001d31c:	jmp    0x1001d55d
1001d321:	test   WORD PTR [ebp-0x14],0x830
1001d327:	jne    0x1001d3c9
1001d32d:	or     DWORD PTR [ebp-0x14],0x20
1001d331:	jmp    0x1001d3c9
1001d336:	test   WORD PTR [ebp-0x14],0x830
1001d33c:	jne    0x1001d342
1001d33e:	or     DWORD PTR [ebp-0x14],0x20
1001d342:	mov    edi,DWORD PTR [ebp-0x18]
1001d345:	cmp    edi,0xffffffff
1001d348:	jne    0x1001d34f
1001d34a:	mov    edi,0x7fffffff
1001d34f:	add    ebx,0x4
1001d352:	test   BYTE PTR [ebp-0x14],0x20
1001d356:	mov    DWORD PTR [ebp-0x28],ebx
1001d359:	mov    ebx,DWORD PTR [ebx-0x4]
1001d35c:	mov    DWORD PTR [ebp-0x1c],ebx
1001d35f:	je     0x1001d740
1001d365:	test   ebx,ebx
1001d367:	jne    0x1001d371
1001d369:	mov    eax,ds:0x100654d0
1001d36e:	mov    DWORD PTR [ebp-0x1c],eax
1001d371:	and    DWORD PTR [ebp-0x20],0x0
1001d375:	test   edi,edi
1001d377:	mov    esi,DWORD PTR [ebp-0x1c]
1001d37a:	jle    0x1001d76d
1001d380:	mov    al,BYTE PTR [esi]
1001d382:	test   al,al
1001d384:	je     0x1001d76d
1001d38a:	lea    ecx,[ebp-0x64]
1001d38d:	movzx  eax,al
1001d390:	push   ecx
1001d391:	push   eax
1001d392:	call   0x10016fe7
1001d397:	test   eax,eax
1001d399:	pop    ecx
1001d39a:	pop    ecx
1001d39b:	je     0x1001d39e
1001d39d:	inc    esi
1001d39e:	inc    esi
1001d39f:	inc    DWORD PTR [ebp-0x20]
1001d3a2:	cmp    DWORD PTR [ebp-0x20],edi
1001d3a5:	jl     0x1001d380
1001d3a7:	jmp    0x1001d76d
1001d3ac:	sub    eax,0x58
1001d3af:	je     0x1001d5f8
1001d3b5:	sub    eax,edi
1001d3b7:	je     0x1001d420
1001d3b9:	sub    eax,ecx
1001d3bb:	je     0x1001d2f9
1001d3c1:	sub    eax,edi
1001d3c3:	jne    0x1001d76d
1001d3c9:	movzx  eax,WORD PTR [ebx]
1001d3cc:	add    ebx,0x4
1001d3cf:	xor    esi,esi
1001d3d1:	inc    esi
1001d3d2:	test   BYTE PTR [ebp-0x14],0x20
1001d3d6:	mov    DWORD PTR [ebp-0x34],esi
1001d3d9:	mov    DWORD PTR [ebp-0x28],ebx
1001d3dc:	mov    DWORD PTR [ebp-0x70],eax
1001d3df:	je     0x1001d40e
1001d3e1:	mov    BYTE PTR [ebp-0x40],al
1001d3e4:	lea    eax,[ebp-0x64]
1001d3e7:	push   eax
1001d3e8:	mov    eax,DWORD PTR [ebp-0x64]
1001d3eb:	mov    BYTE PTR [ebp-0x3f],0x0
1001d3ef:	push   DWORD PTR [eax+0xac]
1001d3f5:	lea    eax,[ebp-0x40]
1001d3f8:	push   eax
1001d3f9:	lea    eax,[ebp-0x10]
1001d3fc:	push   eax
1001d3fd:	call   0x10021899
1001d402:	add    esp,0x10
1001d405:	test   eax,eax
1001d407:	jge    0x1001d412
1001d409:	mov    DWORD PTR [ebp-0x48],esi
1001d40c:	jmp    0x1001d412
1001d40e:	mov    WORD PTR [ebp-0x10],ax
1001d412:	lea    eax,[ebp-0x10]
1001d415:	mov    DWORD PTR [ebp-0x1c],eax
1001d418:	mov    DWORD PTR [ebp-0x20],esi
1001d41b:	jmp    0x1001d76d
1001d420:	mov    eax,DWORD PTR [ebx]
1001d422:	add    ebx,0x4
1001d425:	test   eax,eax
1001d427:	mov    DWORD PTR [ebp-0x28],ebx
1001d42a:	je     0x1001d459
1001d42c:	mov    ecx,DWORD PTR [eax+0x4]
1001d42f:	test   ecx,ecx
1001d431:	je     0x1001d459
1001d433:	test   WORD PTR [ebp-0x14],0x800
1001d439:	movsx  eax,WORD PTR [eax]
1001d43c:	mov    DWORD PTR [ebp-0x1c],ecx
1001d43f:	je     0x1001d450
1001d441:	cdq    
1001d442:	sub    eax,edx
1001d444:	mov    DWORD PTR [ebp-0x34],0x1
1001d44b:	jmp    0x1001d768
1001d450:	and    DWORD PTR [ebp-0x34],0x0
1001d454:	jmp    0x1001d76a
1001d459:	mov    eax,ds:0x100654d0
1001d45e:	mov    DWORD PTR [ebp-0x1c],eax
1001d461:	push   eax
1001d462:	call   0x10016370
1001d467:	pop    ecx
1001d468:	jmp    0x1001d76a
1001d46d:	cmp    eax,0x70
1001d470:	jg     0x1001d5fd
1001d476:	je     0x1001d5f1
1001d47c:	cmp    eax,0x65
1001d47f:	jl     0x1001d76d
1001d485:	cmp    eax,0x67
1001d488:	jle    0x1001d2f9
1001d48e:	cmp    eax,0x69
1001d491:	je     0x1001d4ec
1001d493:	cmp    eax,0x6e
1001d496:	je     0x1001d4b7
1001d498:	cmp    eax,0x6f
1001d49b:	jne    0x1001d76d
1001d4a1:	test   BYTE PTR [ebp-0x14],0x80
1001d4a5:	mov    DWORD PTR [ebp-0x24],0x8
1001d4ac:	je     0x1001d4f7
1001d4ae:	or     DWORD PTR [ebp-0x14],0x200
1001d4b5:	jmp    0x1001d4f7
1001d4b7:	mov    esi,DWORD PTR [ebx]
1001d4b9:	add    ebx,0x4
1001d4bc:	mov    DWORD PTR [ebp-0x28],ebx
1001d4bf:	call   0x10021883
1001d4c4:	test   eax,eax
1001d4c6:	je     0x1001d8a4
1001d4cc:	test   BYTE PTR [ebp-0x14],0x20
1001d4d0:	je     0x1001d4db
1001d4d2:	mov    ax,WORD PTR [ebp-0x2c]
1001d4d6:	mov    WORD PTR [esi],ax
1001d4d9:	jmp    0x1001d4e0
1001d4db:	mov    eax,DWORD PTR [ebp-0x2c]
1001d4de:	mov    DWORD PTR [esi],eax
1001d4e0:	mov    DWORD PTR [ebp-0x48],0x1
1001d4e7:	jmp    0x1001d876
1001d4ec:	or     DWORD PTR [ebp-0x14],0x40
1001d4f0:	mov    DWORD PTR [ebp-0x24],0xa
1001d4f7:	test   WORD PTR [ebp-0x14],0x8000
1001d4fd:	je     0x1001d647
1001d503:	mov    eax,DWORD PTR [ebx]
1001d505:	mov    edx,DWORD PTR [ebx+0x4]
1001d508:	add    ebx,0x8
1001d50b:	jmp    0x1001d680
1001d510:	jne    0x1001d521
1001d512:	cmp    dx,0x67
1001d516:	jne    0x1001d55d
1001d518:	mov    DWORD PTR [ebp-0x18],0x1
1001d51f:	jmp    0x1001d55d
1001d521:	cmp    DWORD PTR [ebp-0x18],eax
1001d524:	jle    0x1001d529
1001d526:	mov    DWORD PTR [ebp-0x18],eax
1001d529:	cmp    DWORD PTR [ebp-0x18],0xa3
1001d530:	jle    0x1001d55d
1001d532:	mov    edi,DWORD PTR [ebp-0x18]
1001d535:	add    edi,0x15d
1001d53b:	push   edi
1001d53c:	call   0x100185a5
1001d541:	test   eax,eax
1001d543:	mov    edx,DWORD PTR [ebp-0x24]
1001d546:	pop    ecx
1001d547:	mov    DWORD PTR [ebp-0x50],eax
1001d54a:	je     0x1001d556
1001d54c:	mov    DWORD PTR [ebp-0x1c],eax
1001d54f:	mov    DWORD PTR [ebp-0x20],edi
1001d552:	mov    esi,eax
1001d554:	jmp    0x1001d55d
1001d556:	mov    DWORD PTR [ebp-0x18],0xa3
1001d55d:	mov    eax,DWORD PTR [ebx]
1001d55f:	add    ebx,0x8
1001d562:	mov    DWORD PTR [ebp-0x78],eax
1001d565:	mov    eax,DWORD PTR [ebx-0x4]
1001d568:	mov    DWORD PTR [ebp-0x74],eax
1001d56b:	lea    eax,[ebp-0x64]
1001d56e:	push   eax
1001d56f:	push   DWORD PTR [ebp-0x6c]
1001d572:	movsx  eax,dl
1001d575:	push   DWORD PTR [ebp-0x18]
1001d578:	mov    DWORD PTR [ebp-0x28],ebx
1001d57b:	push   eax
1001d57c:	push   DWORD PTR [ebp-0x20]
1001d57f:	lea    eax,[ebp-0x78]
1001d582:	push   esi
1001d583:	push   eax
1001d584:	push   DWORD PTR ds:0x10065618
1001d58a:	call   0x100195fa
1001d58f:	pop    ecx
1001d590:	call   eax
1001d592:	mov    ebx,DWORD PTR [ebp-0x14]
1001d595:	add    esp,0x1c
1001d598:	and    ebx,0x80
1001d59e:	je     0x1001d5bb
1001d5a0:	cmp    DWORD PTR [ebp-0x18],0x0
1001d5a4:	jne    0x1001d5bb
1001d5a6:	lea    eax,[ebp-0x64]
1001d5a9:	push   eax
1001d5aa:	push   esi
1001d5ab:	push   DWORD PTR ds:0x10065624
1001d5b1:	call   0x100195fa
1001d5b6:	pop    ecx
1001d5b7:	call   eax
1001d5b9:	pop    ecx
1001d5ba:	pop    ecx
1001d5bb:	cmp    WORD PTR [ebp-0x24],0x67
1001d5c0:	jne    0x1001d5db
1001d5c2:	test   ebx,ebx
1001d5c4:	jne    0x1001d5db
1001d5c6:	lea    eax,[ebp-0x64]
1001d5c9:	push   eax
1001d5ca:	push   esi
1001d5cb:	push   DWORD PTR ds:0x10065620
1001d5d1:	call   0x100195fa
1001d5d6:	pop    ecx
1001d5d7:	call   eax
1001d5d9:	pop    ecx
1001d5da:	pop    ecx
1001d5db:	cmp    BYTE PTR [esi],0x2d
1001d5de:	jne    0x1001d5eb
1001d5e0:	or     DWORD PTR [ebp-0x14],0x100
1001d5e7:	inc    esi
1001d5e8:	mov    DWORD PTR [ebp-0x1c],esi
1001d5eb:	push   esi
1001d5ec:	jmp    0x1001d462
1001d5f1:	mov    DWORD PTR [ebp-0x18],0x8
1001d5f8:	mov    DWORD PTR [ebp-0x54],ecx
1001d5fb:	jmp    0x1001d61e
1001d5fd:	sub    eax,0x73
1001d600:	je     0x1001d342
1001d606:	sub    eax,edi
1001d608:	je     0x1001d4f0
1001d60e:	sub    eax,0x3
1001d611:	jne    0x1001d76d
1001d617:	mov    DWORD PTR [ebp-0x54],0x27
1001d61e:	test   BYTE PTR [ebp-0x14],0x80
1001d622:	mov    DWORD PTR [ebp-0x24],0x10
1001d629:	je     0x1001d4f7
1001d62f:	mov    eax,DWORD PTR [ebp-0x54]
1001d632:	add    eax,0x51
1001d635:	mov    WORD PTR [ebp-0x44],0x30
1001d63b:	mov    WORD PTR [ebp-0x42],ax
1001d63f:	mov    DWORD PTR [ebp-0x30],edi
1001d642:	jmp    0x1001d4f7
1001d647:	test   WORD PTR [ebp-0x14],0x1000
1001d64d:	jne    0x1001d503
1001d653:	add    ebx,0x4
1001d656:	test   BYTE PTR [ebp-0x14],0x20
1001d65a:	je     0x1001d672
1001d65c:	test   BYTE PTR [ebp-0x14],0x40
1001d660:	mov    DWORD PTR [ebp-0x28],ebx
1001d663:	je     0x1001d66b
1001d665:	movsx  eax,WORD PTR [ebx-0x4]
1001d669:	jmp    0x1001d66f
1001d66b:	movzx  eax,WORD PTR [ebx-0x4]
1001d66f:	cdq    
1001d670:	jmp    0x1001d683
1001d672:	test   BYTE PTR [ebp-0x14],0x40
1001d676:	mov    eax,DWORD PTR [ebx-0x4]
1001d679:	je     0x1001d67e
1001d67b:	cdq    
1001d67c:	jmp    0x1001d680
1001d67e:	xor    edx,edx
1001d680:	mov    DWORD PTR [ebp-0x28],ebx
1001d683:	test   BYTE PTR [ebp-0x14],0x40
1001d687:	je     0x1001d6a1
1001d689:	test   edx,edx
1001d68b:	jg     0x1001d6a1
1001d68d:	jl     0x1001d693
1001d68f:	test   eax,eax
1001d691:	jae    0x1001d6a1
1001d693:	neg    eax
1001d695:	adc    edx,0x0
1001d698:	neg    edx
1001d69a:	or     DWORD PTR [ebp-0x14],0x100
1001d6a1:	test   WORD PTR [ebp-0x14],0x9000
1001d6a7:	mov    ebx,edx
1001d6a9:	mov    edi,eax
1001d6ab:	jne    0x1001d6af
1001d6ad:	xor    ebx,ebx
1001d6af:	cmp    DWORD PTR [ebp-0x18],0x0
1001d6b3:	jge    0x1001d6be
1001d6b5:	mov    DWORD PTR [ebp-0x18],0x1
1001d6bc:	jmp    0x1001d6cf
1001d6be:	and    DWORD PTR [ebp-0x14],0xfffffff7
1001d6c2:	mov    eax,0x200
1001d6c7:	cmp    DWORD PTR [ebp-0x18],eax
1001d6ca:	jle    0x1001d6cf
1001d6cc:	mov    DWORD PTR [ebp-0x18],eax
1001d6cf:	mov    eax,edi
1001d6d1:	or     eax,ebx
1001d6d3:	jne    0x1001d6d8
1001d6d5:	and    DWORD PTR [ebp-0x30],eax
1001d6d8:	lea    esi,[ebp+0x1ef]
1001d6de:	mov    eax,DWORD PTR [ebp-0x18]
1001d6e1:	dec    DWORD PTR [ebp-0x18]
1001d6e4:	test   eax,eax
1001d6e6:	jg     0x1001d6ee
1001d6e8:	mov    eax,edi
1001d6ea:	or     eax,ebx
1001d6ec:	je     0x1001d712
1001d6ee:	mov    eax,DWORD PTR [ebp-0x24]
1001d6f1:	cdq    
1001d6f2:	push   edx
1001d6f3:	push   eax
1001d6f4:	push   ebx
1001d6f5:	push   edi
1001d6f6:	call   0x1001e580
1001d6fb:	add    ecx,0x30
1001d6fe:	cmp    ecx,0x39
1001d701:	mov    DWORD PTR [ebp-0x7c],ebx
1001d704:	mov    edi,eax
1001d706:	mov    ebx,edx
1001d708:	jle    0x1001d70d
1001d70a:	add    ecx,DWORD PTR [ebp-0x54]
1001d70d:	mov    BYTE PTR [esi],cl
1001d70f:	dec    esi
1001d710:	jmp    0x1001d6de
1001d712:	lea    eax,[ebp+0x1ef]
1001d718:	sub    eax,esi
1001d71a:	inc    esi
1001d71b:	test   WORD PTR [ebp-0x14],0x200
1001d721:	mov    DWORD PTR [ebp-0x20],eax
1001d724:	mov    DWORD PTR [ebp-0x1c],esi
1001d727:	je     0x1001d76d
1001d729:	test   eax,eax
1001d72b:	je     0x1001d734
1001d72d:	mov    ecx,esi
1001d72f:	cmp    BYTE PTR [ecx],0x30
1001d732:	je     0x1001d76d
1001d734:	dec    DWORD PTR [ebp-0x1c]
1001d737:	mov    ecx,DWORD PTR [ebp-0x1c]
1001d73a:	mov    BYTE PTR [ecx],0x30
1001d73d:	inc    eax
1001d73e:	jmp    0x1001d76a
1001d740:	test   ebx,ebx
1001d742:	jne    0x1001d74c
1001d744:	mov    eax,ds:0x100654d4
1001d749:	mov    DWORD PTR [ebp-0x1c],eax
1001d74c:	mov    eax,DWORD PTR [ebp-0x1c]
1001d74f:	mov    DWORD PTR [ebp-0x34],0x1
1001d756:	jmp    0x1001d761
1001d758:	dec    edi
1001d759:	cmp    WORD PTR [eax],0x0
1001d75d:	je     0x1001d765
1001d75f:	inc    eax
1001d760:	inc    eax
1001d761:	test   edi,edi
1001d763:	jne    0x1001d758
1001d765:	sub    eax,DWORD PTR [ebp-0x1c]
1001d768:	sar    eax,1
1001d76a:	mov    DWORD PTR [ebp-0x20],eax
1001d76d:	cmp    DWORD PTR [ebp-0x48],0x0
1001d771:	jne    0x1001d876
1001d777:	mov    eax,DWORD PTR [ebp-0x14]
1001d77a:	test   al,0x40
1001d77c:	je     0x1001d7a9
1001d77e:	test   ax,0x100
1001d782:	je     0x1001d78c
1001d784:	mov    WORD PTR [ebp-0x44],0x2d
1001d78a:	jmp    0x1001d7a2
1001d78c:	test   al,0x1
1001d78e:	je     0x1001d798
1001d790:	mov    WORD PTR [ebp-0x44],0x2b
1001d796:	jmp    0x1001d7a2
1001d798:	test   al,0x2
1001d79a:	je     0x1001d7a9
1001d79c:	mov    WORD PTR [ebp-0x44],0x20
1001d7a2:	mov    DWORD PTR [ebp-0x30],0x1
1001d7a9:	mov    ebx,DWORD PTR [ebp-0x38]
1001d7ac:	mov    esi,DWORD PTR [ebp-0x20]
1001d7af:	sub    ebx,esi
1001d7b1:	sub    ebx,DWORD PTR [ebp-0x30]
1001d7b4:	test   BYTE PTR [ebp-0x14],0xc
1001d7b8:	jne    0x1001d7cb
1001d7ba:	push   DWORD PTR [ebp-0x3c]
1001d7bd:	lea    eax,[ebp-0x2c]
1001d7c0:	push   ebx
1001d7c1:	push   0x20
1001d7c3:	call   0x1001cf7f
1001d7c8:	add    esp,0xc
1001d7cb:	push   DWORD PTR [ebp-0x30]
1001d7ce:	mov    edi,DWORD PTR [ebp-0x3c]
1001d7d1:	lea    eax,[ebp-0x2c]
1001d7d4:	lea    ecx,[ebp-0x44]
1001d7d7:	call   0x1001cfa4
1001d7dc:	test   BYTE PTR [ebp-0x14],0x8
1001d7e0:	pop    ecx
1001d7e1:	je     0x1001d7f8
1001d7e3:	test   BYTE PTR [ebp-0x14],0x4
1001d7e7:	jne    0x1001d7f8
1001d7e9:	push   edi
1001d7ea:	push   ebx
1001d7eb:	push   0x30
1001d7ed:	lea    eax,[ebp-0x2c]
1001d7f0:	call   0x1001cf7f
1001d7f5:	add    esp,0xc
1001d7f8:	cmp    DWORD PTR [ebp-0x34],0x0
1001d7fc:	jne    0x1001d84c
1001d7fe:	test   esi,esi
1001d800:	jle    0x1001d84c
1001d802:	mov    edi,DWORD PTR [ebp-0x1c]
1001d805:	mov    DWORD PTR [ebp-0x24],esi
1001d808:	dec    DWORD PTR [ebp-0x24]
1001d80b:	lea    eax,[ebp-0x64]
1001d80e:	push   eax
1001d80f:	mov    eax,DWORD PTR [ebp-0x64]
1001d812:	push   DWORD PTR [eax+0xac]
1001d818:	lea    eax,[ebp-0x70]
1001d81b:	push   edi
1001d81c:	push   eax
1001d81d:	call   0x10021899
1001d822:	add    esp,0x10
1001d825:	test   eax,eax
1001d827:	mov    DWORD PTR [ebp-0x7c],eax
1001d82a:	jle    0x1001d846
1001d82c:	push   DWORD PTR [ebp-0x70]
1001d82f:	mov    eax,DWORD PTR [ebp-0x3c]
1001d832:	lea    esi,[ebp-0x2c]
1001d835:	call   0x1001cf5a
1001d83a:	add    edi,DWORD PTR [ebp-0x7c]
1001d83d:	cmp    DWORD PTR [ebp-0x24],0x0
1001d841:	pop    ecx
1001d842:	jg     0x1001d808
1001d844:	jmp    0x1001d859
1001d846:	or     DWORD PTR [ebp-0x2c],0xffffffff
1001d84a:	jmp    0x1001d859
1001d84c:	mov    ecx,DWORD PTR [ebp-0x1c]
1001d84f:	push   esi
1001d850:	lea    eax,[ebp-0x2c]
1001d853:	call   0x1001cfa4
1001d858:	pop    ecx
1001d859:	cmp    DWORD PTR [ebp-0x2c],0x0
1001d85d:	jl     0x1001d876
1001d85f:	test   BYTE PTR [ebp-0x14],0x4
1001d863:	je     0x1001d876
1001d865:	push   DWORD PTR [ebp-0x3c]
1001d868:	lea    eax,[ebp-0x2c]
1001d86b:	push   ebx
1001d86c:	push   0x20
1001d86e:	call   0x1001cf7f
1001d873:	add    esp,0xc
1001d876:	cmp    DWORD PTR [ebp-0x50],0x0
1001d87a:	je     0x1001d889
1001d87c:	push   DWORD PTR [ebp-0x50]
1001d87f:	call   0x10016b35
1001d884:	and    DWORD PTR [ebp-0x50],0x0
1001d888:	pop    ecx
1001d889:	mov    esi,DWORD PTR [ebp-0x4c]
1001d88c:	movzx  eax,WORD PTR [esi]
1001d88f:	test   ax,ax
1001d892:	mov    DWORD PTR [ebp-0x24],eax
1001d895:	je     0x1001d8bb
1001d897:	mov    ecx,DWORD PTR [ebp-0x68]
1001d89a:	mov    ebx,DWORD PTR [ebp-0x28]
1001d89d:	mov    edx,eax
1001d89f:	jmp    0x1001d09e
1001d8a4:	call   0x10019ffe
1001d8a9:	mov    DWORD PTR [eax],0x16
1001d8af:	xor    eax,eax
1001d8b1:	push   eax
1001d8b2:	push   eax
1001d8b3:	push   eax
1001d8b4:	push   eax
1001d8b5:	push   eax
1001d8b6:	jmp    0x1001d063
1001d8bb:	cmp    BYTE PTR [ebp-0x58],0x0
1001d8bf:	je     0x1001d8c8
1001d8c1:	mov    eax,DWORD PTR [ebp-0x5c]
1001d8c4:	and    DWORD PTR [eax+0x70],0xfffffffd
1001d8c8:	mov    eax,DWORD PTR [ebp-0x2c]
1001d8cb:	mov    ecx,DWORD PTR [ebp+0x3f0]
1001d8d1:	pop    edi
1001d8d2:	pop    esi
1001d8d3:	xor    ecx,ebp
1001d8d5:	pop    ebx
1001d8d6:	call   0x10015adb
1001d8db:	add    ebp,0x3f4
1001d8e1:	leave  
1001d8e2:	ret    
1001d8e3:	mov    ds:0xea1001d2,al
1001d8e8:	rol    BYTE PTR [ecx],1
1001d8ea:	adc    BYTE PTR [edi],al
1001d8ec:	rol    DWORD PTR [ecx],1
1001d8ee:	adc    BYTE PTR [ebp-0x2f],dl
1001d8f1:	add    DWORD PTR [eax],edx
1001d8f3:	nop
1001d8f4:	rol    DWORD PTR [ecx],1
1001d8f6:	adc    BYTE PTR [ecx-0x2eeffe2f],bl
1001d8fc:	rol    DWORD PTR [ecx],1
1001d8fe:	adc    BYTE PTR [edx+0x551001d2],bh
1001d904:	lea    ebp,[esp-0x3f4]
1001d90b:	sub    esp,0x474
1001d911:	mov    eax,ds:0x10064694
1001d916:	xor    eax,ebp
1001d918:	mov    DWORD PTR [ebp+0x3f0],eax
1001d91e:	push   ebx
1001d91f:	mov    ebx,DWORD PTR [ebp+0x408]
1001d925:	push   esi
1001d926:	mov    esi,DWORD PTR [ebp+0x3fc]
1001d92c:	xor    eax,eax
1001d92e:	push   edi
1001d92f:	push   DWORD PTR [ebp+0x404]
1001d935:	mov    edi,DWORD PTR [ebp+0x400]
1001d93b:	lea    ecx,[ebp-0x58]
1001d93e:	mov    DWORD PTR [ebp-0x48],esi
1001d941:	mov    DWORD PTR [ebp-0x24],ebx
1001d944:	mov    DWORD PTR [ebp-0x60],eax
1001d947:	mov    DWORD PTR [ebp-0x14],eax
1001d94a:	mov    DWORD PTR [ebp-0x38],eax
1001d94d:	mov    DWORD PTR [ebp-0x18],eax
1001d950:	mov    DWORD PTR [ebp-0x30],eax
1001d953:	mov    DWORD PTR [ebp-0x5c],eax
1001d956:	mov    DWORD PTR [ebp-0x34],eax
1001d959:	call   0x100165aa
1001d95e:	test   esi,esi
1001d960:	jne    0x1001d991
1001d962:	call   0x10019ffe
1001d967:	mov    DWORD PTR [eax],0x16
1001d96d:	xor    eax,eax
1001d96f:	push   eax
1001d970:	push   eax
1001d971:	push   eax
1001d972:	push   eax
1001d973:	push   eax
1001d974:	call   0x1001611f
1001d979:	add    esp,0x14
1001d97c:	cmp    BYTE PTR [ebp-0x4c],0x0
1001d980:	je     0x1001d989
1001d982:	mov    eax,DWORD PTR [ebp-0x50]
1001d985:	and    DWORD PTR [eax+0x70],0xfffffffd
1001d989:	or     eax,0xffffffff
1001d98c:	jmp    0x1001e1e7
1001d991:	xor    esi,esi
1001d993:	cmp    edi,esi
1001d995:	jne    0x1001d9a9
1001d997:	call   0x10019ffe
1001d99c:	push   esi
1001d99d:	push   esi
1001d99e:	push   esi
1001d99f:	push   esi
1001d9a0:	mov    DWORD PTR [eax],0x16
1001d9a6:	push   esi
1001d9a7:	jmp    0x1001d974
1001d9a9:	movzx  ecx,WORD PTR [edi]
1001d9ac:	cmp    cx,si
1001d9af:	mov    DWORD PTR [ebp-0x2c],esi
1001d9b2:	mov    DWORD PTR [ebp-0x20],esi
1001d9b5:	mov    DWORD PTR [ebp-0x40],esi
1001d9b8:	mov    DWORD PTR [ebp-0x64],esi
1001d9bb:	mov    DWORD PTR [ebp-0x28],ecx
1001d9be:	je     0x1001e1d7
1001d9c4:	push   0x2
1001d9c6:	pop    esi
1001d9c7:	add    edi,esi
1001d9c9:	xor    eax,eax
1001d9cb:	cmp    DWORD PTR [ebp-0x2c],eax
1001d9ce:	mov    DWORD PTR [ebp-0x6c],edi
1001d9d1:	jl     0x1001e1c7
1001d9d7:	lea    edx,[ecx-0x20]
1001d9da:	cmp    dx,0x58
1001d9de:	ja     0x1001d9ed
1001d9e0:	movzx  eax,cx
1001d9e3:	movzx  eax,BYTE PTR [eax+0x10051430]
1001d9ea:	and    eax,0xf
1001d9ed:	mov    edx,DWORD PTR [ebp-0x40]
1001d9f0:	imul   eax,eax,0x9
1001d9f3:	movzx  eax,BYTE PTR [eax+edx*1+0x10051450]
1001d9fb:	push   0x8
1001d9fd:	shr    eax,0x4
1001da00:	pop    edx
1001da01:	cmp    eax,edx
1001da03:	mov    DWORD PTR [ebp-0x40],eax
1001da06:	je     0x1001d962
1001da0c:	cmp    eax,0x7
1001da0f:	ja     0x1001e1af
1001da15:	jmp    DWORD PTR [eax*4+0x1001e1ff]
1001da1c:	xor    eax,eax
1001da1e:	or     DWORD PTR [ebp-0x18],0xffffffff
1001da22:	mov    DWORD PTR [ebp-0x68],eax
1001da25:	mov    DWORD PTR [ebp-0x5c],eax
1001da28:	mov    DWORD PTR [ebp-0x38],eax
1001da2b:	mov    DWORD PTR [ebp-0x30],eax
1001da2e:	mov    DWORD PTR [ebp-0x14],eax
1001da31:	mov    DWORD PTR [ebp-0x34],eax
1001da34:	jmp    0x1001e1b5
1001da39:	movzx  eax,cx
1001da3c:	sub    eax,0x20
1001da3f:	je     0x1001da7d
1001da41:	sub    eax,0x3
1001da44:	je     0x1001da71
1001da46:	sub    eax,edx
1001da48:	je     0x1001da68
1001da4a:	sub    eax,esi
1001da4c:	je     0x1001da5f
1001da4e:	sub    eax,0x3
1001da51:	jne    0x1001e1af
1001da57:	or     DWORD PTR [ebp-0x14],edx
1001da5a:	jmp    0x1001e1b5
1001da5f:	or     DWORD PTR [ebp-0x14],0x4
1001da63:	jmp    0x1001e1b5
1001da68:	or     DWORD PTR [ebp-0x14],0x1
1001da6c:	jmp    0x1001e1b5
1001da71:	or     DWORD PTR [ebp-0x14],0x80
1001da78:	jmp    0x1001e1b5
1001da7d:	or     DWORD PTR [ebp-0x14],esi
1001da80:	jmp    0x1001e1b5
1001da85:	cmp    cx,0x2a
1001da89:	jne    0x1001daaa
1001da8b:	mov    eax,DWORD PTR [ebx]
1001da8d:	add    ebx,0x4
1001da90:	test   eax,eax
1001da92:	mov    DWORD PTR [ebp-0x24],ebx
1001da95:	mov    DWORD PTR [ebp-0x38],eax
1001da98:	jge    0x1001e1b5
1001da9e:	or     DWORD PTR [ebp-0x14],0x4
1001daa2:	neg    DWORD PTR [ebp-0x38]
1001daa5:	jmp    0x1001e1b5
1001daaa:	mov    eax,DWORD PTR [ebp-0x38]
1001daad:	imul   eax,eax,0xa
1001dab0:	movzx  ecx,cx
1001dab3:	lea    eax,[eax+ecx*1-0x30]
1001dab7:	mov    DWORD PTR [ebp-0x38],eax
1001daba:	jmp    0x1001e1b5
1001dabf:	and    DWORD PTR [ebp-0x18],0x0
1001dac3:	jmp    0x1001e1b5
1001dac8:	cmp    cx,0x2a
1001dacc:	jne    0x1001daea
1001dace:	mov    eax,DWORD PTR [ebx]
1001dad0:	add    ebx,0x4
1001dad3:	test   eax,eax
1001dad5:	mov    DWORD PTR [ebp-0x24],ebx
1001dad8:	mov    DWORD PTR [ebp-0x18],eax
1001dadb:	jge    0x1001e1b5
1001dae1:	or     DWORD PTR [ebp-0x18],0xffffffff
1001dae5:	jmp    0x1001e1b5
1001daea:	mov    eax,DWORD PTR [ebp-0x18]
1001daed:	imul   eax,eax,0xa
1001daf0:	movzx  ecx,cx
1001daf3:	lea    eax,[eax+ecx*1-0x30]
1001daf7:	mov    DWORD PTR [ebp-0x18],eax
1001dafa:	jmp    0x1001e1b5
1001daff:	movzx  eax,cx
1001db02:	cmp    eax,0x49
1001db05:	je     0x1001db4c
1001db07:	cmp    eax,0x68
1001db0a:	je     0x1001db43
1001db0c:	cmp    eax,0x6c
1001db0f:	je     0x1001db26
1001db11:	cmp    eax,0x77
1001db14:	jne    0x1001e1b5
1001db1a:	or     DWORD PTR [ebp-0x14],0x800
1001db21:	jmp    0x1001e1b5
1001db26:	cmp    WORD PTR [edi],0x6c
1001db2a:	jne    0x1001db3a
1001db2c:	add    edi,esi
1001db2e:	or     DWORD PTR [ebp-0x14],0x1000
1001db35:	jmp    0x1001e1b5
1001db3a:	or     DWORD PTR [ebp-0x14],0x10
1001db3e:	jmp    0x1001e1b5
1001db43:	or     DWORD PTR [ebp-0x14],0x20
1001db47:	jmp    0x1001e1b5
1001db4c:	movzx  eax,WORD PTR [edi]
1001db4f:	cmp    ax,0x36
1001db53:	jne    0x1001db6b
1001db55:	cmp    WORD PTR [edi+0x2],0x34
1001db5a:	jne    0x1001db6b
1001db5c:	add    edi,0x4
1001db5f:	or     DWORD PTR [ebp-0x14],0x8000
1001db66:	jmp    0x1001e1b5
1001db6b:	cmp    ax,0x33
1001db6f:	jne    0x1001db87
1001db71:	cmp    WORD PTR [edi+0x2],0x32
1001db76:	jne    0x1001db87
1001db78:	add    edi,0x4
1001db7b:	and    DWORD PTR [ebp-0x14],0xffff7fff
1001db82:	jmp    0x1001e1b5
1001db87:	cmp    ax,0x64
1001db8b:	je     0x1001e1b5
1001db91:	cmp    ax,0x69
1001db95:	je     0x1001e1b5
1001db9b:	cmp    ax,0x6f
1001db9f:	je     0x1001e1b5
1001dba5:	cmp    ax,0x75
1001dba9:	je     0x1001e1b5
1001dbaf:	cmp    ax,0x78
1001dbb3:	je     0x1001e1b5
1001dbb9:	cmp    ax,0x58
1001dbbd:	je     0x1001e1b5
1001dbc3:	and    DWORD PTR [ebp-0x40],0x0
1001dbc7:	mov    eax,DWORD PTR [ebp-0x48]
1001dbca:	push   ecx
1001dbcb:	lea    esi,[ebp-0x2c]
1001dbce:	mov    DWORD PTR [ebp-0x34],0x1
1001dbd5:	call   0x1001cf5a
1001dbda:	pop    ecx
1001dbdb:	jmp    0x1001e1b5
1001dbe0:	movzx  eax,cx
1001dbe3:	cmp    eax,0x64
1001dbe6:	jg     0x1001dd94
1001dbec:	je     0x1001de0f
1001dbf2:	cmp    eax,0x53
1001dbf5:	jg     0x1001dcd2
1001dbfb:	je     0x1001dc5c
1001dbfd:	sub    eax,0x41
1001dc00:	je     0x1001dc12
1001dc02:	sub    eax,esi
1001dc04:	je     0x1001dc47
1001dc06:	sub    eax,esi
1001dc08:	je     0x1001dc12
1001dc0a:	sub    eax,esi
1001dc0c:	jne    0x1001e093
1001dc12:	add    ecx,0x20
1001dc15:	mov    DWORD PTR [ebp-0x68],0x1
1001dc1c:	mov    DWORD PTR [ebp-0x28],ecx
1001dc1f:	or     DWORD PTR [ebp-0x14],0x40
1001dc23:	cmp    DWORD PTR [ebp-0x18],0x0
1001dc27:	lea    esi,[ebp-0x10]
1001dc2a:	mov    eax,0x200
1001dc2f:	mov    DWORD PTR [ebp-0x1c],esi
1001dc32:	mov    DWORD PTR [ebp-0x20],eax
1001dc35:	jge    0x1001de33
1001dc3b:	mov    DWORD PTR [ebp-0x18],0x6
1001dc42:	jmp    0x1001de83
1001dc47:	test   WORD PTR [ebp-0x14],0x830
1001dc4d:	jne    0x1001dcf0
1001dc53:	or     DWORD PTR [ebp-0x14],0x20
1001dc57:	jmp    0x1001dcf0
1001dc5c:	test   WORD PTR [ebp-0x14],0x830
1001dc62:	jne    0x1001dc68
1001dc64:	or     DWORD PTR [ebp-0x14],0x20
1001dc68:	mov    edi,DWORD PTR [ebp-0x18]
1001dc6b:	cmp    edi,0xffffffff
1001dc6e:	jne    0x1001dc75
1001dc70:	mov    edi,0x7fffffff
1001dc75:	add    ebx,0x4
1001dc78:	test   BYTE PTR [ebp-0x14],0x20
1001dc7c:	mov    DWORD PTR [ebp-0x24],ebx
1001dc7f:	mov    ebx,DWORD PTR [ebx-0x4]
1001dc82:	mov    DWORD PTR [ebp-0x1c],ebx
1001dc85:	je     0x1001e066
1001dc8b:	test   ebx,ebx
1001dc8d:	jne    0x1001dc97
1001dc8f:	mov    eax,ds:0x100654d0
1001dc94:	mov    DWORD PTR [ebp-0x1c],eax
1001dc97:	and    DWORD PTR [ebp-0x20],0x0
1001dc9b:	test   edi,edi
1001dc9d:	mov    esi,DWORD PTR [ebp-0x1c]
1001dca0:	jle    0x1001e093
1001dca6:	mov    al,BYTE PTR [esi]
1001dca8:	test   al,al
1001dcaa:	je     0x1001e093
1001dcb0:	lea    ecx,[ebp-0x58]
1001dcb3:	movzx  eax,al
1001dcb6:	push   ecx
1001dcb7:	push   eax
1001dcb8:	call   0x10016fe7
1001dcbd:	test   eax,eax
1001dcbf:	pop    ecx
1001dcc0:	pop    ecx
1001dcc1:	je     0x1001dcc4
1001dcc3:	inc    esi
1001dcc4:	inc    esi
1001dcc5:	inc    DWORD PTR [ebp-0x20]
1001dcc8:	cmp    DWORD PTR [ebp-0x20],edi
1001dccb:	jl     0x1001dca6
1001dccd:	jmp    0x1001e093
1001dcd2:	sub    eax,0x58
1001dcd5:	je     0x1001df1a
1001dcdb:	sub    eax,esi
1001dcdd:	je     0x1001dd47
1001dcdf:	sub    eax,0x7
1001dce2:	je     0x1001dc1f
1001dce8:	sub    eax,esi
1001dcea:	jne    0x1001e093
1001dcf0:	movzx  eax,WORD PTR [ebx]
1001dcf3:	add    ebx,0x4
1001dcf6:	xor    esi,esi
1001dcf8:	inc    esi
1001dcf9:	test   BYTE PTR [ebp-0x14],0x20
1001dcfd:	mov    DWORD PTR [ebp-0x34],esi
1001dd00:	mov    DWORD PTR [ebp-0x24],ebx
1001dd03:	mov    DWORD PTR [ebp-0x70],eax
1001dd06:	je     0x1001dd35
1001dd08:	mov    BYTE PTR [ebp-0x44],al
1001dd0b:	lea    eax,[ebp-0x58]
1001dd0e:	push   eax
1001dd0f:	mov    eax,DWORD PTR [ebp-0x58]
1001dd12:	mov    BYTE PTR [ebp-0x43],0x0
1001dd16:	push   DWORD PTR [eax+0xac]
1001dd1c:	lea    eax,[ebp-0x44]
1001dd1f:	push   eax
1001dd20:	lea    eax,[ebp-0x10]
1001dd23:	push   eax
1001dd24:	call   0x10021899
1001dd29:	add    esp,0x10
1001dd2c:	test   eax,eax
1001dd2e:	jge    0x1001dd39
1001dd30:	mov    DWORD PTR [ebp-0x5c],esi
1001dd33:	jmp    0x1001dd39
1001dd35:	mov    WORD PTR [ebp-0x10],ax
1001dd39:	lea    eax,[ebp-0x10]
1001dd3c:	mov    DWORD PTR [ebp-0x1c],eax
1001dd3f:	mov    DWORD PTR [ebp-0x20],esi
1001dd42:	jmp    0x1001e093
1001dd47:	mov    eax,DWORD PTR [ebx]
1001dd49:	add    ebx,0x4
1001dd4c:	test   eax,eax
1001dd4e:	mov    DWORD PTR [ebp-0x24],ebx
1001dd51:	je     0x1001dd80
1001dd53:	mov    ecx,DWORD PTR [eax+0x4]
1001dd56:	test   ecx,ecx
1001dd58:	je     0x1001dd80
1001dd5a:	test   WORD PTR [ebp-0x14],0x800
1001dd60:	movsx  eax,WORD PTR [eax]
1001dd63:	mov    DWORD PTR [ebp-0x1c],ecx
1001dd66:	je     0x1001dd77
1001dd68:	cdq    
1001dd69:	sub    eax,edx
1001dd6b:	mov    DWORD PTR [ebp-0x34],0x1
1001dd72:	jmp    0x1001e08e
1001dd77:	and    DWORD PTR [ebp-0x34],0x0
1001dd7b:	jmp    0x1001e090
1001dd80:	mov    eax,ds:0x100654d0
1001dd85:	mov    DWORD PTR [ebp-0x1c],eax
1001dd88:	push   eax
1001dd89:	call   0x10016370
1001dd8e:	pop    ecx
1001dd8f:	jmp    0x1001e090
1001dd94:	cmp    eax,0x70
1001dd97:	jg     0x1001df23
1001dd9d:	je     0x1001df17
1001dda3:	cmp    eax,0x65
1001dda6:	jl     0x1001e093
1001ddac:	cmp    eax,0x67
1001ddaf:	jle    0x1001dc1f
1001ddb5:	cmp    eax,0x69
1001ddb8:	je     0x1001de0f
1001ddba:	cmp    eax,0x6e
1001ddbd:	je     0x1001ddda
1001ddbf:	cmp    eax,0x6f
1001ddc2:	jne    0x1001e093
1001ddc8:	test   BYTE PTR [ebp-0x14],0x80
1001ddcc:	mov    DWORD PTR [ebp-0x28],edx
1001ddcf:	je     0x1001de1a
1001ddd1:	or     DWORD PTR [ebp-0x14],0x200
1001ddd8:	jmp    0x1001de1a
1001ddda:	mov    esi,DWORD PTR [ebx]
1001dddc:	add    ebx,0x4
1001dddf:	mov    DWORD PTR [ebp-0x24],ebx
1001dde2:	call   0x10021883
1001dde7:	test   eax,eax
1001dde9:	je     0x1001d962
1001ddef:	test   BYTE PTR [ebp-0x14],0x20
1001ddf3:	je     0x1001ddfe
1001ddf5:	mov    ax,WORD PTR [ebp-0x2c]
1001ddf9:	mov    WORD PTR [esi],ax
1001ddfc:	jmp    0x1001de03
1001ddfe:	mov    eax,DWORD PTR [ebp-0x2c]
1001de01:	mov    DWORD PTR [esi],eax
1001de03:	mov    DWORD PTR [ebp-0x5c],0x1
1001de0a:	jmp    0x1001e19c
1001de0f:	or     DWORD PTR [ebp-0x14],0x40
1001de13:	mov    DWORD PTR [ebp-0x28],0xa
1001de1a:	test   WORD PTR [ebp-0x14],0x8000
1001de20:	je     0x1001df6d
1001de26:	add    ebx,edx
1001de28:	mov    eax,DWORD PTR [ebx-0x8]
1001de2b:	mov    edx,DWORD PTR [ebx-0x4]
1001de2e:	jmp    0x1001dfa6
1001de33:	jne    0x1001de44
1001de35:	cmp    cx,0x67
1001de39:	jne    0x1001de83
1001de3b:	mov    DWORD PTR [ebp-0x18],0x1
1001de42:	jmp    0x1001de83
1001de44:	cmp    DWORD PTR [ebp-0x18],eax
1001de47:	jle    0x1001de4c
1001de49:	mov    DWORD PTR [ebp-0x18],eax
1001de4c:	cmp    DWORD PTR [ebp-0x18],0xa3
1001de53:	jle    0x1001de83
1001de55:	mov    edi,DWORD PTR [ebp-0x18]
1001de58:	add    edi,0x15d
1001de5e:	push   edi
1001de5f:	call   0x100185a5
1001de64:	test   eax,eax
1001de66:	pop    ecx
1001de67:	mov    ecx,DWORD PTR [ebp-0x28]
1001de6a:	push   0x8
1001de6c:	mov    DWORD PTR [ebp-0x64],eax
1001de6f:	pop    edx
1001de70:	je     0x1001de7c
1001de72:	mov    DWORD PTR [ebp-0x1c],eax
1001de75:	mov    DWORD PTR [ebp-0x20],edi
1001de78:	mov    esi,eax
1001de7a:	jmp    0x1001de83
1001de7c:	mov    DWORD PTR [ebp-0x18],0xa3
1001de83:	add    ebx,edx
1001de85:	mov    eax,DWORD PTR [ebx-0x8]
1001de88:	mov    DWORD PTR [ebp-0x78],eax
1001de8b:	mov    eax,DWORD PTR [ebx-0x4]
1001de8e:	mov    DWORD PTR [ebp-0x74],eax
1001de91:	lea    eax,[ebp-0x58]
1001de94:	push   eax
1001de95:	push   DWORD PTR [ebp-0x68]
1001de98:	movsx  eax,cl
1001de9b:	push   DWORD PTR [ebp-0x18]
1001de9e:	mov    DWORD PTR [ebp-0x24],ebx
1001dea1:	push   eax
1001dea2:	push   DWORD PTR [ebp-0x20]
1001dea5:	lea    eax,[ebp-0x78]
1001dea8:	push   esi
1001dea9:	push   eax
1001deaa:	push   DWORD PTR ds:0x10065618
1001deb0:	call   0x100195fa
1001deb5:	pop    ecx
1001deb6:	call   eax
1001deb8:	mov    ebx,DWORD PTR [ebp-0x14]
1001debb:	add    esp,0x1c
1001debe:	and    ebx,0x80
1001dec4:	je     0x1001dee1
1001dec6:	cmp    DWORD PTR [ebp-0x18],0x0
1001deca:	jne    0x1001dee1
1001decc:	lea    eax,[ebp-0x58]
1001decf:	push   eax
1001ded0:	push   esi
1001ded1:	push   DWORD PTR ds:0x10065624
1001ded7:	call   0x100195fa
1001dedc:	pop    ecx
1001dedd:	call   eax
1001dedf:	pop    ecx
1001dee0:	pop    ecx
1001dee1:	cmp    WORD PTR [ebp-0x28],0x67
1001dee6:	jne    0x1001df01
1001dee8:	test   ebx,ebx
1001deea:	jne    0x1001df01
1001deec:	lea    eax,[ebp-0x58]
1001deef:	push   eax
1001def0:	push   esi
1001def1:	push   DWORD PTR ds:0x10065620
1001def7:	call   0x100195fa
1001defc:	pop    ecx
1001defd:	call   eax
1001deff:	pop    ecx
1001df00:	pop    ecx
1001df01:	cmp    BYTE PTR [esi],0x2d
1001df04:	jne    0x1001df11
1001df06:	or     DWORD PTR [ebp-0x14],0x100
1001df0d:	inc    esi
1001df0e:	mov    DWORD PTR [ebp-0x1c],esi
1001df11:	push   esi
1001df12:	jmp    0x1001dd89
1001df17:	mov    DWORD PTR [ebp-0x18],edx
1001df1a:	mov    DWORD PTR [ebp-0x60],0x7
1001df21:	jmp    0x1001df44
1001df23:	sub    eax,0x73
1001df26:	je     0x1001dc68
1001df2c:	sub    eax,esi
1001df2e:	je     0x1001de13
1001df34:	sub    eax,0x3
1001df37:	jne    0x1001e093
1001df3d:	mov    DWORD PTR [ebp-0x60],0x27
1001df44:	test   BYTE PTR [ebp-0x14],0x80
1001df48:	mov    DWORD PTR [ebp-0x28],0x10
1001df4f:	je     0x1001de1a
1001df55:	mov    eax,DWORD PTR [ebp-0x60]
1001df58:	add    eax,0x51
1001df5b:	mov    WORD PTR [ebp-0x3c],0x30
1001df61:	mov    WORD PTR [ebp-0x3a],ax
1001df65:	mov    DWORD PTR [ebp-0x30],esi
1001df68:	jmp    0x1001de1a
1001df6d:	test   WORD PTR [ebp-0x14],0x1000
1001df73:	jne    0x1001de26
1001df79:	add    ebx,0x4
1001df7c:	test   BYTE PTR [ebp-0x14],0x20
1001df80:	je     0x1001df98
1001df82:	test   BYTE PTR [ebp-0x14],0x40
1001df86:	mov    DWORD PTR [ebp-0x24],ebx
1001df89:	je     0x1001df91
1001df8b:	movsx  eax,WORD PTR [ebx-0x4]
1001df8f:	jmp    0x1001df95
1001df91:	movzx  eax,WORD PTR [ebx-0x4]
1001df95:	cdq    
1001df96:	jmp    0x1001dfa9
1001df98:	test   BYTE PTR [ebp-0x14],0x40
1001df9c:	mov    eax,DWORD PTR [ebx-0x4]
1001df9f:	je     0x1001dfa4
1001dfa1:	cdq    
1001dfa2:	jmp    0x1001dfa6
1001dfa4:	xor    edx,edx
1001dfa6:	mov    DWORD PTR [ebp-0x24],ebx
1001dfa9:	test   BYTE PTR [ebp-0x14],0x40
1001dfad:	je     0x1001dfc7
1001dfaf:	test   edx,edx
1001dfb1:	jg     0x1001dfc7
1001dfb3:	jl     0x1001dfb9
1001dfb5:	test   eax,eax
1001dfb7:	jae    0x1001dfc7
1001dfb9:	neg    eax
1001dfbb:	adc    edx,0x0
1001dfbe:	neg    edx
1001dfc0:	or     DWORD PTR [ebp-0x14],0x100
1001dfc7:	test   WORD PTR [ebp-0x14],0x9000
1001dfcd:	mov    ebx,edx
1001dfcf:	mov    edi,eax
1001dfd1:	jne    0x1001dfd5
1001dfd3:	xor    ebx,ebx
1001dfd5:	cmp    DWORD PTR [ebp-0x18],0x0
1001dfd9:	jge    0x1001dfe4
1001dfdb:	mov    DWORD PTR [ebp-0x18],0x1
1001dfe2:	jmp    0x1001dff5
1001dfe4:	and    DWORD PTR [ebp-0x14],0xfffffff7
1001dfe8:	mov    eax,0x200
1001dfed:	cmp    DWORD PTR [ebp-0x18],eax
1001dff0:	jle    0x1001dff5
1001dff2:	mov    DWORD PTR [ebp-0x18],eax
1001dff5:	mov    eax,edi
1001dff7:	or     eax,ebx
1001dff9:	jne    0x1001dffe
1001dffb:	and    DWORD PTR [ebp-0x30],eax
1001dffe:	lea    esi,[ebp+0x1ef]
1001e004:	mov    eax,DWORD PTR [ebp-0x18]
1001e007:	dec    DWORD PTR [ebp-0x18]
1001e00a:	test   eax,eax
1001e00c:	jg     0x1001e014
1001e00e:	mov    eax,edi
1001e010:	or     eax,ebx
1001e012:	je     0x1001e038
1001e014:	mov    eax,DWORD PTR [ebp-0x28]
1001e017:	cdq    
1001e018:	push   edx
1001e019:	push   eax
1001e01a:	push   ebx
1001e01b:	push   edi
1001e01c:	call   0x1001e580
1001e021:	add    ecx,0x30
1001e024:	cmp    ecx,0x39
1001e027:	mov    DWORD PTR [ebp-0x7c],ebx
1001e02a:	mov    edi,eax
1001e02c:	mov    ebx,edx
1001e02e:	jle    0x1001e033
1001e030:	add    ecx,DWORD PTR [ebp-0x60]
1001e033:	mov    BYTE PTR [esi],cl
1001e035:	dec    esi
1001e036:	jmp    0x1001e004
1001e038:	lea    eax,[ebp+0x1ef]
1001e03e:	sub    eax,esi
1001e040:	inc    esi
1001e041:	test   WORD PTR [ebp-0x14],0x200
1001e047:	mov    DWORD PTR [ebp-0x20],eax
1001e04a:	mov    DWORD PTR [ebp-0x1c],esi
1001e04d:	je     0x1001e093
1001e04f:	test   eax,eax
1001e051:	je     0x1001e05a
1001e053:	mov    ecx,esi
1001e055:	cmp    BYTE PTR [ecx],0x30
1001e058:	je     0x1001e093
1001e05a:	dec    DWORD PTR [ebp-0x1c]
1001e05d:	mov    ecx,DWORD PTR [ebp-0x1c]
1001e060:	mov    BYTE PTR [ecx],0x30
1001e063:	inc    eax
1001e064:	jmp    0x1001e090
1001e066:	test   ebx,ebx
1001e068:	jne    0x1001e072
1001e06a:	mov    eax,ds:0x100654d4
1001e06f:	mov    DWORD PTR [ebp-0x1c],eax
1001e072:	mov    eax,DWORD PTR [ebp-0x1c]
1001e075:	mov    DWORD PTR [ebp-0x34],0x1
1001e07c:	jmp    0x1001e087
1001e07e:	dec    edi
1001e07f:	cmp    WORD PTR [eax],0x0
1001e083:	je     0x1001e08b
1001e085:	add    eax,esi
1001e087:	test   edi,edi
1001e089:	jne    0x1001e07e
1001e08b:	sub    eax,DWORD PTR [ebp-0x1c]
1001e08e:	sar    eax,1
1001e090:	mov    DWORD PTR [ebp-0x20],eax
1001e093:	cmp    DWORD PTR [ebp-0x5c],0x0
1001e097:	jne    0x1001e19c
1001e09d:	mov    eax,DWORD PTR [ebp-0x14]
1001e0a0:	test   al,0x40
1001e0a2:	je     0x1001e0cf
1001e0a4:	test   ax,0x100
1001e0a8:	je     0x1001e0b2
1001e0aa:	mov    WORD PTR [ebp-0x3c],0x2d
1001e0b0:	jmp    0x1001e0c8
1001e0b2:	test   al,0x1
1001e0b4:	je     0x1001e0be
1001e0b6:	mov    WORD PTR [ebp-0x3c],0x2b
1001e0bc:	jmp    0x1001e0c8
1001e0be:	test   al,0x2
1001e0c0:	je     0x1001e0cf
1001e0c2:	mov    WORD PTR [ebp-0x3c],0x20
1001e0c8:	mov    DWORD PTR [ebp-0x30],0x1
1001e0cf:	mov    ebx,DWORD PTR [ebp-0x38]
1001e0d2:	mov    esi,DWORD PTR [ebp-0x20]
1001e0d5:	sub    ebx,esi
1001e0d7:	sub    ebx,DWORD PTR [ebp-0x30]
1001e0da:	test   BYTE PTR [ebp-0x14],0xc
1001e0de:	jne    0x1001e0f1
1001e0e0:	push   DWORD PTR [ebp-0x48]
1001e0e3:	lea    eax,[ebp-0x2c]
1001e0e6:	push   ebx
1001e0e7:	push   0x20
1001e0e9:	call   0x1001cf7f
1001e0ee:	add    esp,0xc
1001e0f1:	push   DWORD PTR [ebp-0x30]
1001e0f4:	mov    edi,DWORD PTR [ebp-0x48]
1001e0f7:	lea    eax,[ebp-0x2c]
1001e0fa:	lea    ecx,[ebp-0x3c]
1001e0fd:	call   0x1001cfa4
1001e102:	test   BYTE PTR [ebp-0x14],0x8
1001e106:	pop    ecx
1001e107:	je     0x1001e11e
1001e109:	test   BYTE PTR [ebp-0x14],0x4
1001e10d:	jne    0x1001e11e
1001e10f:	push   edi
1001e110:	push   ebx
1001e111:	push   0x30
1001e113:	lea    eax,[ebp-0x2c]
1001e116:	call   0x1001cf7f
1001e11b:	add    esp,0xc
1001e11e:	cmp    DWORD PTR [ebp-0x34],0x0
1001e122:	jne    0x1001e172
1001e124:	test   esi,esi
1001e126:	jle    0x1001e172
1001e128:	mov    edi,DWORD PTR [ebp-0x1c]
1001e12b:	mov    DWORD PTR [ebp-0x28],esi
1001e12e:	dec    DWORD PTR [ebp-0x28]
1001e131:	lea    eax,[ebp-0x58]
1001e134:	push   eax
1001e135:	mov    eax,DWORD PTR [ebp-0x58]
1001e138:	push   DWORD PTR [eax+0xac]
1001e13e:	lea    eax,[ebp-0x70]
1001e141:	push   edi
1001e142:	push   eax
1001e143:	call   0x10021899
1001e148:	add    esp,0x10
1001e14b:	test   eax,eax
1001e14d:	mov    DWORD PTR [ebp-0x7c],eax
1001e150:	jle    0x1001e16c
1001e152:	push   DWORD PTR [ebp-0x70]
1001e155:	mov    eax,DWORD PTR [ebp-0x48]
1001e158:	lea    esi,[ebp-0x2c]
1001e15b:	call   0x1001cf5a
1001e160:	add    edi,DWORD PTR [ebp-0x7c]
1001e163:	cmp    DWORD PTR [ebp-0x28],0x0
1001e167:	pop    ecx
1001e168:	jg     0x1001e12e
1001e16a:	jmp    0x1001e17f
1001e16c:	or     DWORD PTR [ebp-0x2c],0xffffffff
1001e170:	jmp    0x1001e17f
1001e172:	mov    ecx,DWORD PTR [ebp-0x1c]
1001e175:	push   esi
1001e176:	lea    eax,[ebp-0x2c]
1001e179:	call   0x1001cfa4
1001e17e:	pop    ecx
1001e17f:	cmp    DWORD PTR [ebp-0x2c],0x0
1001e183:	jl     0x1001e19c
1001e185:	test   BYTE PTR [ebp-0x14],0x4
1001e189:	je     0x1001e19c
1001e18b:	push   DWORD PTR [ebp-0x48]
1001e18e:	lea    eax,[ebp-0x2c]
1001e191:	push   ebx
1001e192:	push   0x20
1001e194:	call   0x1001cf7f
1001e199:	add    esp,0xc
1001e19c:	cmp    DWORD PTR [ebp-0x64],0x0
1001e1a0:	je     0x1001e1af
1001e1a2:	push   DWORD PTR [ebp-0x64]
1001e1a5:	call   0x10016b35
1001e1aa:	and    DWORD PTR [ebp-0x64],0x0
1001e1ae:	pop    ecx
1001e1af:	mov    edi,DWORD PTR [ebp-0x6c]
1001e1b2:	mov    ebx,DWORD PTR [ebp-0x24]
1001e1b5:	movzx  eax,WORD PTR [edi]
1001e1b8:	test   ax,ax
1001e1bb:	mov    DWORD PTR [ebp-0x28],eax
1001e1be:	je     0x1001e1c7
1001e1c0:	mov    ecx,eax
1001e1c2:	jmp    0x1001d9c4
1001e1c7:	cmp    DWORD PTR [ebp-0x40],0x0
1001e1cb:	je     0x1001e1d7
1001e1cd:	cmp    DWORD PTR [ebp-0x40],0x7
1001e1d1:	jne    0x1001d962
1001e1d7:	cmp    BYTE PTR [ebp-0x4c],0x0
1001e1db:	je     0x1001e1e4
1001e1dd:	mov    eax,DWORD PTR [ebp-0x50]
1001e1e0:	and    DWORD PTR [eax+0x70],0xfffffffd
1001e1e4:	mov    eax,DWORD PTR [ebp-0x2c]
1001e1e7:	mov    ecx,DWORD PTR [ebp+0x3f0]
1001e1ed:	pop    edi
1001e1ee:	pop    esi
1001e1ef:	xor    ecx,ebp
1001e1f1:	pop    ebx
1001e1f2:	call   0x10015adb
1001e1f7:	add    ebp,0x3f4
1001e1fd:	leave  
1001e1fe:	ret    
1001e1ff:	(bad)  
1001e200:	fild   DWORD PTR [ecx]
1001e202:	adc    BYTE PTR [edx+ebx*8],bl
1001e205:	add    DWORD PTR [eax],edx
1001e207:	cmp    edx,ebx
1001e209:	add    DWORD PTR [eax],edx
1001e20b:	test   edx,ebx
1001e20d:	add    DWORD PTR [eax],edx
1001e20f:	mov    edi,0xc81001da
1001e214:	fiadd  DWORD PTR [ecx]
1001e216:	adc    bh,bh
1001e218:	fiadd  DWORD PTR [ecx]
1001e21a:	adc    al,ah
1001e21c:	fild   DWORD PTR [ecx]
1001e21e:	adc    BYTE PTR [ebx-0x5cfbdbbc],cl
1001e224:	dec    esp
1001e225:	ins    BYTE PTR es:[edi],dx
1001e226:	push   es
1001e227:	adc    bl,al
1001e229:	push   ebp
1001e22a:	mov    ebp,esp
1001e22c:	push   ecx
1001e22d:	push   ecx
1001e22e:	mov    eax,DWORD PTR [ebp+0xc]
1001e231:	push   esi
1001e232:	mov    esi,DWORD PTR [ebp+0x8]
1001e235:	mov    DWORD PTR [ebp-0x8],eax
1001e238:	mov    eax,DWORD PTR [ebp+0x10]
1001e23b:	push   edi
1001e23c:	push   esi
1001e23d:	mov    DWORD PTR [ebp-0x4],eax
1001e240:	call   0x1001e446
1001e245:	or     edi,0xffffffff
1001e248:	cmp    eax,edi
1001e24a:	pop    ecx
1001e24b:	jne    0x1001e25e
1001e24d:	call   0x10019ffe
1001e252:	mov    DWORD PTR [eax],0x9
1001e258:	mov    eax,edi
1001e25a:	mov    edx,edi
1001e25c:	jmp    0x1001e2a8
1001e25e:	push   DWORD PTR [ebp+0x14]
1001e261:	lea    ecx,[ebp-0x4]
1001e264:	push   ecx
1001e265:	push   DWORD PTR [ebp-0x8]
1001e268:	push   eax
1001e269:	call   DWORD PTR ds:0x1002c204
1001e26f:	cmp    eax,edi
1001e271:	mov    DWORD PTR [ebp-0x8],eax
1001e274:	jne    0x1001e289
1001e276:	call   DWORD PTR ds:0x1002c07c
1001e27c:	test   eax,eax
1001e27e:	je     0x1001e289
1001e280:	push   eax
1001e281:	call   0x1001a024
1001e286:	pop    ecx
1001e287:	jmp    0x1001e258
1001e289:	mov    eax,esi
1001e28b:	sar    eax,0x5
1001e28e:	mov    eax,DWORD PTR [eax*4+0x10067f80]
1001e295:	and    esi,0x1f
1001e298:	shl    esi,0x6
1001e29b:	lea    eax,[eax+esi*1+0x4]
1001e29f:	and    BYTE PTR [eax],0xfd
1001e2a2:	mov    eax,DWORD PTR [ebp-0x8]
1001e2a5:	mov    edx,DWORD PTR [ebp-0x4]
1001e2a8:	pop    edi
1001e2a9:	pop    esi
1001e2aa:	leave  
1001e2ab:	ret    
1001e2ac:	push   0x14
1001e2ae:	push   0x10058848
1001e2b3:	call   0x10017a38
1001e2b8:	or     esi,0xffffffff
1001e2bb:	mov    DWORD PTR [ebp-0x24],esi
1001e2be:	mov    DWORD PTR [ebp-0x20],esi
1001e2c1:	mov    eax,DWORD PTR [ebp+0x8]
1001e2c4:	cmp    eax,0xfffffffe
1001e2c7:	jne    0x1001e2e5
1001e2c9:	call   0x1001a011
1001e2ce:	and    DWORD PTR [eax],0x0
1001e2d1:	call   0x10019ffe
1001e2d6:	mov    DWORD PTR [eax],0x9
1001e2dc:	mov    eax,esi
1001e2de:	mov    edx,esi
1001e2e0:	jmp    0x1001e3b5
1001e2e5:	xor    edi,edi
1001e2e7:	cmp    eax,edi
1001e2e9:	jl     0x1001e2f3
1001e2eb:	cmp    eax,DWORD PTR ds:0x10067f64
1001e2f1:	jb     0x1001e314
1001e2f3:	call   0x1001a011
1001e2f8:	mov    DWORD PTR [eax],edi
1001e2fa:	call   0x10019ffe
1001e2ff:	mov    DWORD PTR [eax],0x9
1001e305:	push   edi
1001e306:	push   edi
1001e307:	push   edi
1001e308:	push   edi
1001e309:	push   edi
1001e30a:	call   0x1001611f
1001e30f:	add    esp,0x14
1001e312:	jmp    0x1001e2dc
1001e314:	mov    ecx,eax
1001e316:	sar    ecx,0x5
1001e319:	lea    ebx,[ecx*4+0x10067f80]
1001e320:	mov    esi,eax
1001e322:	and    esi,0x1f
1001e325:	shl    esi,0x6
1001e328:	mov    ecx,DWORD PTR [ebx]
1001e32a:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1001e32f:	and    ecx,0x1
1001e332:	jne    0x1001e35a
1001e334:	call   0x1001a011
1001e339:	mov    DWORD PTR [eax],edi
1001e33b:	call   0x10019ffe
1001e340:	mov    DWORD PTR [eax],0x9
1001e346:	push   edi
1001e347:	push   edi
1001e348:	push   edi
1001e349:	push   edi
1001e34a:	push   edi
1001e34b:	call   0x1001611f
1001e350:	add    esp,0x14
1001e353:	or     edx,0xffffffff
1001e356:	mov    eax,edx
1001e358:	jmp    0x1001e3b5
1001e35a:	push   eax
1001e35b:	call   0x1001e4b7
1001e360:	pop    ecx
1001e361:	mov    DWORD PTR [ebp-0x4],edi
1001e364:	mov    eax,DWORD PTR [ebx]
1001e366:	test   BYTE PTR [eax+esi*1+0x4],0x1
1001e36b:	je     0x1001e389
1001e36d:	push   DWORD PTR [ebp+0x14]
1001e370:	push   DWORD PTR [ebp+0x10]
1001e373:	push   DWORD PTR [ebp+0xc]
1001e376:	push   DWORD PTR [ebp+0x8]
1001e379:	call   0x1001e229
1001e37e:	add    esp,0x10
1001e381:	mov    DWORD PTR [ebp-0x24],eax
1001e384:	mov    DWORD PTR [ebp-0x20],edx
1001e387:	jmp    0x1001e3a3
1001e389:	call   0x10019ffe
1001e38e:	mov    DWORD PTR [eax],0x9
1001e394:	call   0x1001a011
1001e399:	mov    DWORD PTR [eax],edi
1001e39b:	or     DWORD PTR [ebp-0x24],0xffffffff
1001e39f:	or     DWORD PTR [ebp-0x20],0xffffffff
1001e3a3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001e3aa:	call   0x1001e3bb
1001e3af:	mov    eax,DWORD PTR [ebp-0x24]
1001e3b2:	mov    edx,DWORD PTR [ebp-0x20]
1001e3b5:	call   0x10017a7d
1001e3ba:	ret    
1001e3bb:	push   DWORD PTR [ebp+0x8]
1001e3be:	call   0x1001e557
1001e3c3:	pop    ecx
1001e3c4:	ret    
1001e3c5:	mov    ecx,DWORD PTR [esp+0x4]
1001e3c9:	push   ebx
1001e3ca:	xor    ebx,ebx
1001e3cc:	cmp    ecx,ebx
1001e3ce:	push   esi
1001e3cf:	push   edi
1001e3d0:	jl     0x1001e42d
1001e3d2:	cmp    ecx,DWORD PTR ds:0x10067f64
1001e3d8:	jae    0x1001e42d
1001e3da:	mov    eax,ecx
1001e3dc:	sar    eax,0x5
1001e3df:	mov    esi,ecx
1001e3e1:	lea    edi,[eax*4+0x10067f80]
1001e3e8:	mov    eax,DWORD PTR [edi]
1001e3ea:	and    esi,0x1f
1001e3ed:	shl    esi,0x6
1001e3f0:	add    eax,esi
1001e3f2:	test   BYTE PTR [eax+0x4],0x1
1001e3f6:	je     0x1001e42d
1001e3f8:	cmp    DWORD PTR [eax],0xffffffff
1001e3fb:	je     0x1001e42d
1001e3fd:	cmp    DWORD PTR ds:0x100662e4,0x1
1001e404:	jne    0x1001e423
1001e406:	sub    ecx,ebx
1001e408:	je     0x1001e41a
1001e40a:	dec    ecx
1001e40b:	je     0x1001e415
1001e40d:	dec    ecx
1001e40e:	jne    0x1001e423
1001e410:	push   ebx
1001e411:	push   0xfffffff4
1001e413:	jmp    0x1001e41d
1001e415:	push   ebx
1001e416:	push   0xfffffff5
1001e418:	jmp    0x1001e41d
1001e41a:	push   ebx
1001e41b:	push   0xfffffff6
1001e41d:	call   DWORD PTR ds:0x1002c1a4
1001e423:	mov    eax,DWORD PTR [edi]
1001e425:	or     DWORD PTR [esi+eax*1],0xffffffff
1001e429:	xor    eax,eax
1001e42b:	jmp    0x1001e442
1001e42d:	call   0x10019ffe
1001e432:	mov    DWORD PTR [eax],0x9
1001e438:	call   0x1001a011
1001e43d:	mov    DWORD PTR [eax],ebx
1001e43f:	or     eax,0xffffffff
1001e442:	pop    edi
1001e443:	pop    esi
1001e444:	pop    ebx
1001e445:	ret    
1001e446:	mov    eax,DWORD PTR [esp+0x4]
1001e44a:	cmp    eax,0xfffffffe
1001e44d:	jne    0x1001e466
1001e44f:	call   0x1001a011
1001e454:	and    DWORD PTR [eax],0x0
1001e457:	call   0x10019ffe
1001e45c:	mov    DWORD PTR [eax],0x9
1001e462:	or     eax,0xffffffff
1001e465:	ret    
1001e466:	push   esi
1001e467:	xor    esi,esi
1001e469:	cmp    eax,esi
1001e46b:	jl     0x1001e48f
1001e46d:	cmp    eax,DWORD PTR ds:0x10067f64
1001e473:	jae    0x1001e48f
1001e475:	mov    ecx,eax
1001e477:	and    eax,0x1f
1001e47a:	sar    ecx,0x5
1001e47d:	mov    ecx,DWORD PTR [ecx*4+0x10067f80]
1001e484:	shl    eax,0x6
1001e487:	add    eax,ecx
1001e489:	test   BYTE PTR [eax+0x4],0x1
1001e48d:	jne    0x1001e4b3
1001e48f:	call   0x1001a011
1001e494:	mov    DWORD PTR [eax],esi
1001e496:	call   0x10019ffe
1001e49b:	push   esi
1001e49c:	push   esi
1001e49d:	push   esi
1001e49e:	push   esi
1001e49f:	push   esi
1001e4a0:	mov    DWORD PTR [eax],0x9
1001e4a6:	call   0x1001611f
1001e4ab:	add    esp,0x14
1001e4ae:	or     eax,0xffffffff
1001e4b1:	pop    esi
1001e4b2:	ret    
1001e4b3:	mov    eax,DWORD PTR [eax]
1001e4b5:	pop    esi
1001e4b6:	ret    
1001e4b7:	push   0xc
1001e4b9:	push   0x10058868
1001e4be:	call   0x10017a38
1001e4c3:	mov    edi,DWORD PTR [ebp+0x8]
1001e4c6:	mov    eax,edi
1001e4c8:	sar    eax,0x5
1001e4cb:	mov    esi,edi
1001e4cd:	and    esi,0x1f
1001e4d0:	shl    esi,0x6
1001e4d3:	add    esi,DWORD PTR [eax*4+0x10067f80]
1001e4da:	mov    DWORD PTR [ebp-0x1c],0x1
1001e4e1:	xor    ebx,ebx
1001e4e3:	cmp    DWORD PTR [esi+0x8],ebx
1001e4e6:	jne    0x1001e51e
1001e4e8:	push   0xa
1001e4ea:	call   0x1001b6ab
1001e4ef:	pop    ecx
1001e4f0:	mov    DWORD PTR [ebp-0x4],ebx
1001e4f3:	cmp    DWORD PTR [esi+0x8],ebx
1001e4f6:	jne    0x1001e512
1001e4f8:	push   0xfa0
1001e4fd:	lea    eax,[esi+0xc]
1001e500:	push   eax
1001e501:	call   0x10020e9a
1001e506:	pop    ecx
1001e507:	pop    ecx
1001e508:	test   eax,eax
1001e50a:	jne    0x1001e50f
1001e50c:	mov    DWORD PTR [ebp-0x1c],ebx
1001e50f:	inc    DWORD PTR [esi+0x8]
1001e512:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001e519:	call   0x1001e54e
1001e51e:	cmp    DWORD PTR [ebp-0x1c],ebx
1001e521:	je     0x1001e540
1001e523:	mov    eax,edi
1001e525:	sar    eax,0x5
1001e528:	and    edi,0x1f
1001e52b:	shl    edi,0x6
1001e52e:	mov    eax,DWORD PTR [eax*4+0x10067f80]
1001e535:	lea    eax,[eax+edi*1+0xc]
1001e539:	push   eax
1001e53a:	call   DWORD PTR ds:0x1002c1e0
1001e540:	mov    eax,DWORD PTR [ebp-0x1c]
1001e543:	call   0x10017a7d
1001e548:	ret    
1001e549:	xor    ebx,ebx
1001e54b:	mov    edi,DWORD PTR [ebp+0x8]
1001e54e:	push   0xa
1001e550:	call   0x1001b5d3
1001e555:	pop    ecx
1001e556:	ret    
1001e557:	mov    eax,DWORD PTR [esp+0x4]
1001e55b:	mov    ecx,eax
1001e55d:	and    eax,0x1f
1001e560:	sar    ecx,0x5
1001e563:	mov    ecx,DWORD PTR [ecx*4+0x10067f80]
1001e56a:	shl    eax,0x6
1001e56d:	lea    eax,[ecx+eax*1+0xc]
1001e571:	push   eax
1001e572:	call   DWORD PTR ds:0x1002c1e4
1001e578:	ret    
1001e579:	int3   
1001e57a:	int3   
1001e57b:	int3   
1001e57c:	int3   
1001e57d:	int3   
1001e57e:	int3   
1001e57f:	int3   
1001e580:	push   esi
1001e581:	mov    eax,DWORD PTR [esp+0x14]
1001e585:	or     eax,eax
1001e587:	jne    0x1001e5b1
1001e589:	mov    ecx,DWORD PTR [esp+0x10]
1001e58d:	mov    eax,DWORD PTR [esp+0xc]
1001e591:	xor    edx,edx
1001e593:	div    ecx
1001e595:	mov    ebx,eax
1001e597:	mov    eax,DWORD PTR [esp+0x8]
1001e59b:	div    ecx
1001e59d:	mov    esi,eax
1001e59f:	mov    eax,ebx
1001e5a1:	mul    DWORD PTR [esp+0x10]
1001e5a5:	mov    ecx,eax
1001e5a7:	mov    eax,esi
1001e5a9:	mul    DWORD PTR [esp+0x10]
1001e5ad:	add    edx,ecx
1001e5af:	jmp    0x1001e5f8
1001e5b1:	mov    ecx,eax
1001e5b3:	mov    ebx,DWORD PTR [esp+0x10]
1001e5b7:	mov    edx,DWORD PTR [esp+0xc]
1001e5bb:	mov    eax,DWORD PTR [esp+0x8]
1001e5bf:	shr    ecx,1
1001e5c1:	rcr    ebx,1
1001e5c3:	shr    edx,1
1001e5c5:	rcr    eax,1
1001e5c7:	or     ecx,ecx
1001e5c9:	jne    0x1001e5bf
1001e5cb:	div    ebx
1001e5cd:	mov    esi,eax
1001e5cf:	mul    DWORD PTR [esp+0x14]
1001e5d3:	mov    ecx,eax
1001e5d5:	mov    eax,DWORD PTR [esp+0x10]
1001e5d9:	mul    esi
1001e5db:	add    edx,ecx
1001e5dd:	jb     0x1001e5ed
1001e5df:	cmp    edx,DWORD PTR [esp+0xc]
1001e5e3:	ja     0x1001e5ed
1001e5e5:	jb     0x1001e5f6
1001e5e7:	cmp    eax,DWORD PTR [esp+0x8]
1001e5eb:	jbe    0x1001e5f6
1001e5ed:	dec    esi
1001e5ee:	sub    eax,DWORD PTR [esp+0x10]
1001e5f2:	sbb    edx,DWORD PTR [esp+0x14]
1001e5f6:	xor    ebx,ebx
1001e5f8:	sub    eax,DWORD PTR [esp+0x8]
1001e5fc:	sbb    edx,DWORD PTR [esp+0xc]
1001e600:	neg    edx
1001e602:	neg    eax
1001e604:	sbb    edx,0x0
1001e607:	mov    ecx,edx
1001e609:	mov    edx,ebx
1001e60b:	mov    ebx,ecx
1001e60d:	mov    ecx,eax
1001e60f:	mov    eax,esi
1001e611:	pop    esi
1001e612:	ret    0x10
1001e615:	mov    eax,0x10065250
1001e61a:	ret    
1001e61b:	mov    eax,ds:0x10067f60
1001e620:	test   eax,eax
1001e622:	push   esi
1001e623:	push   0x14
1001e625:	pop    esi
1001e626:	jne    0x1001e62f
1001e628:	mov    eax,0x200
1001e62d:	jmp    0x1001e635
1001e62f:	cmp    eax,esi
1001e631:	jge    0x1001e63a
1001e633:	mov    eax,esi
1001e635:	mov    ds:0x10067f60,eax
1001e63a:	push   0x4
1001e63c:	push   eax
1001e63d:	call   0x100185e5
1001e642:	test   eax,eax
1001e644:	pop    ecx
1001e645:	pop    ecx
1001e646:	mov    ds:0x10066f58,eax
1001e64b:	jne    0x1001e66b
1001e64d:	push   0x4
1001e64f:	push   esi
1001e650:	mov    DWORD PTR ds:0x10067f60,esi
1001e656:	call   0x100185e5
1001e65b:	test   eax,eax
1001e65d:	pop    ecx
1001e65e:	pop    ecx
1001e65f:	mov    ds:0x10066f58,eax
1001e664:	jne    0x1001e66b
1001e666:	push   0x1a
1001e668:	pop    eax
1001e669:	pop    esi
1001e66a:	ret    
1001e66b:	xor    edx,edx
1001e66d:	mov    ecx,0x10065250
1001e672:	jmp    0x1001e679
1001e674:	mov    eax,ds:0x10066f58
1001e679:	mov    DWORD PTR [edx+eax*1],ecx
1001e67c:	add    ecx,0x20
1001e67f:	add    edx,0x4
1001e682:	cmp    ecx,0x100654d0
1001e688:	jl     0x1001e674
1001e68a:	push   0xfffffffe
1001e68c:	pop    esi
1001e68d:	xor    edx,edx
1001e68f:	mov    ecx,0x10065260
1001e694:	push   edi
1001e695:	mov    eax,edx
1001e697:	sar    eax,0x5
1001e69a:	mov    eax,DWORD PTR [eax*4+0x10067f80]
1001e6a1:	mov    edi,edx
1001e6a3:	and    edi,0x1f
1001e6a6:	shl    edi,0x6
1001e6a9:	mov    eax,DWORD PTR [edi+eax*1]
1001e6ac:	cmp    eax,0xffffffff
1001e6af:	je     0x1001e6b9
1001e6b1:	cmp    eax,esi
1001e6b3:	je     0x1001e6b9
1001e6b5:	test   eax,eax
1001e6b7:	jne    0x1001e6bb
1001e6b9:	mov    DWORD PTR [ecx],esi
1001e6bb:	add    ecx,0x20
1001e6be:	inc    edx
1001e6bf:	cmp    ecx,0x100652c0
1001e6c5:	jl     0x1001e695
1001e6c7:	pop    edi
1001e6c8:	xor    eax,eax
1001e6ca:	pop    esi
1001e6cb:	ret    
1001e6cc:	call   0x1001eae2
1001e6d1:	cmp    BYTE PTR ds:0x1006666c,0x0
1001e6d8:	je     0x1001e6df
1001e6da:	call   0x100219c3
1001e6df:	push   DWORD PTR ds:0x10066f58
1001e6e5:	call   0x10016b35
1001e6ea:	pop    ecx
1001e6eb:	ret    
1001e6ec:	push   esi
1001e6ed:	mov    esi,DWORD PTR [esp+0x8]
1001e6f1:	mov    eax,0x10065250
1001e6f6:	cmp    esi,eax
1001e6f8:	jb     0x1001e71c
1001e6fa:	cmp    esi,0x100654b0
1001e700:	ja     0x1001e71c
1001e702:	mov    ecx,esi
1001e704:	sub    ecx,eax
1001e706:	sar    ecx,0x5
1001e709:	add    ecx,0x10
1001e70c:	push   ecx
1001e70d:	call   0x1001b6ab
1001e712:	or     DWORD PTR [esi+0xc],0x8000
1001e719:	pop    ecx
1001e71a:	pop    esi
1001e71b:	ret    
1001e71c:	add    esi,0x20
1001e71f:	push   esi
1001e720:	call   DWORD PTR ds:0x1002c1e0
1001e726:	pop    esi
1001e727:	ret    
1001e728:	mov    eax,DWORD PTR [esp+0x4]
1001e72c:	cmp    eax,0x14
1001e72f:	jge    0x1001e747
1001e731:	add    eax,0x10
1001e734:	push   eax
1001e735:	call   0x1001b6ab
1001e73a:	mov    eax,DWORD PTR [esp+0xc]
1001e73e:	or     DWORD PTR [eax+0xc],0x8000
1001e745:	pop    ecx
1001e746:	ret    
1001e747:	mov    eax,DWORD PTR [esp+0x8]
1001e74b:	add    eax,0x20
1001e74e:	push   eax
1001e74f:	call   DWORD PTR ds:0x1002c1e0
1001e755:	ret    
1001e756:	mov    eax,DWORD PTR [esp+0x4]
1001e75a:	mov    ecx,0x10065250
1001e75f:	cmp    eax,ecx
1001e761:	jb     0x1001e781
1001e763:	cmp    eax,0x100654b0
1001e768:	ja     0x1001e781
1001e76a:	and    DWORD PTR [eax+0xc],0xffff7fff
1001e771:	sub    eax,ecx
1001e773:	sar    eax,0x5
1001e776:	add    eax,0x10
1001e779:	push   eax
1001e77a:	call   0x1001b5d3
1001e77f:	pop    ecx
1001e780:	ret    
1001e781:	add    eax,0x20
1001e784:	push   eax
1001e785:	call   DWORD PTR ds:0x1002c1e4
1001e78b:	ret    
1001e78c:	mov    ecx,DWORD PTR [esp+0x4]
1001e790:	cmp    ecx,0x14
1001e793:	mov    eax,DWORD PTR [esp+0x8]
1001e797:	jge    0x1001e7ab
1001e799:	and    DWORD PTR [eax+0xc],0xffff7fff
1001e7a0:	add    ecx,0x10
1001e7a3:	push   ecx
1001e7a4:	call   0x1001b5d3
1001e7a9:	pop    ecx
1001e7aa:	ret    
1001e7ab:	add    eax,0x20
1001e7ae:	push   eax
1001e7af:	call   DWORD PTR ds:0x1002c1e4
1001e7b5:	ret    
1001e7b6:	int3   
1001e7b7:	int3   
1001e7b8:	push   ebx
1001e7b9:	push   esi
1001e7ba:	push   edi
1001e7bb:	mov    edx,DWORD PTR [esp+0x10]
1001e7bf:	mov    eax,DWORD PTR [esp+0x14]
1001e7c3:	mov    ecx,DWORD PTR [esp+0x18]
1001e7c7:	push   ebp
1001e7c8:	push   edx
1001e7c9:	push   eax
1001e7ca:	push   ecx
1001e7cb:	push   ecx
1001e7cc:	push   0x1001e848
1001e7d1:	push   DWORD PTR fs:0x0
1001e7d8:	mov    eax,ds:0x10064694
1001e7dd:	xor    eax,esp
1001e7df:	mov    DWORD PTR [esp+0x8],eax
1001e7e3:	mov    DWORD PTR fs:0x0,esp
1001e7ea:	mov    eax,DWORD PTR [esp+0x30]
1001e7ee:	mov    ebx,DWORD PTR [eax+0x8]
1001e7f1:	mov    ecx,DWORD PTR [esp+0x2c]
1001e7f5:	xor    ebx,DWORD PTR [ecx]
1001e7f7:	mov    esi,DWORD PTR [eax+0xc]
1001e7fa:	cmp    esi,0xfffffffe
1001e7fd:	je     0x1001e83a
1001e7ff:	mov    edx,DWORD PTR [esp+0x34]
1001e803:	cmp    edx,0xfffffffe
1001e806:	je     0x1001e80c
1001e808:	cmp    esi,edx
1001e80a:	jbe    0x1001e83a
1001e80c:	lea    esi,[esi+esi*2]
1001e80f:	lea    ebx,[ebx+esi*4+0x10]
1001e813:	mov    ecx,DWORD PTR [ebx]
1001e815:	mov    DWORD PTR [eax+0xc],ecx
1001e818:	cmp    DWORD PTR [ebx+0x4],0x0
1001e81c:	jne    0x1001e7ea
1001e81e:	push   0x101
1001e823:	mov    eax,DWORD PTR [ebx+0x8]
1001e826:	call   0x10020e35
1001e82b:	mov    ecx,0x1
1001e830:	mov    eax,DWORD PTR [ebx+0x8]
1001e833:	call   0x10020e54
1001e838:	jmp    0x1001e7ea
1001e83a:	pop    DWORD PTR fs:0x0
1001e841:	add    esp,0x18
1001e844:	pop    edi
1001e845:	pop    esi
1001e846:	pop    ebx
1001e847:	ret    
1001e848:	mov    ecx,DWORD PTR [esp+0x4]
1001e84c:	test   DWORD PTR [ecx+0x4],0x6
1001e853:	mov    eax,0x1
1001e858:	je     0x1001e88d
1001e85a:	mov    eax,DWORD PTR [esp+0x8]
1001e85e:	mov    ecx,DWORD PTR [eax+0x8]
1001e861:	xor    ecx,eax
1001e863:	call   0x10015adb
1001e868:	push   ebp
1001e869:	mov    ebp,DWORD PTR [eax+0x18]
1001e86c:	push   DWORD PTR [eax+0xc]
1001e86f:	push   DWORD PTR [eax+0x10]
1001e872:	push   DWORD PTR [eax+0x14]
1001e875:	call   0x1001e7b8
1001e87a:	add    esp,0xc
1001e87d:	pop    ebp
1001e87e:	mov    eax,DWORD PTR [esp+0x8]
1001e882:	mov    edx,DWORD PTR [esp+0x10]
1001e886:	mov    DWORD PTR [edx],eax
1001e888:	mov    eax,0x3
1001e88d:	ret    
1001e88e:	push   ebp
1001e88f:	mov    ecx,DWORD PTR [esp+0x8]
1001e893:	mov    ebp,DWORD PTR [ecx]
1001e895:	push   DWORD PTR [ecx+0x1c]
1001e898:	push   DWORD PTR [ecx+0x18]
1001e89b:	push   DWORD PTR [ecx+0x28]
1001e89e:	call   0x1001e7b8
1001e8a3:	add    esp,0xc
1001e8a6:	pop    ebp
1001e8a7:	ret    0x4
1001e8aa:	push   ebp
1001e8ab:	push   esi
1001e8ac:	push   edi
1001e8ad:	push   ebx
1001e8ae:	mov    ebp,edx
1001e8b0:	xor    eax,eax
1001e8b2:	xor    ebx,ebx
1001e8b4:	xor    edx,edx
1001e8b6:	xor    esi,esi
1001e8b8:	xor    edi,edi
1001e8ba:	call   ecx
1001e8bc:	pop    ebx
1001e8bd:	pop    edi
1001e8be:	pop    esi
1001e8bf:	pop    ebp
1001e8c0:	ret    
1001e8c1:	mov    ebp,edx
1001e8c3:	mov    esi,ecx
1001e8c5:	mov    eax,ecx
1001e8c7:	push   0x1
1001e8c9:	call   0x10020e35
1001e8ce:	xor    eax,eax
1001e8d0:	xor    ebx,ebx
1001e8d2:	xor    ecx,ecx
1001e8d4:	xor    edx,edx
1001e8d6:	xor    edi,edi
1001e8d8:	jmp    esi
1001e8da:	push   ebp
1001e8db:	mov    ebp,esp
1001e8dd:	push   ebx
1001e8de:	push   esi
1001e8df:	push   edi
1001e8e0:	push   0x0
1001e8e2:	push   0x0
1001e8e4:	push   0x1001e8ef
1001e8e9:	push   ecx
1001e8ea:	call   0x1002a01e
1001e8ef:	pop    edi
1001e8f0:	pop    esi
1001e8f1:	pop    ebx
1001e8f2:	pop    ebp
1001e8f3:	ret    
1001e8f4:	push   ebp
1001e8f5:	mov    ebp,DWORD PTR [esp+0x8]
1001e8f9:	push   edx
1001e8fa:	push   ecx
1001e8fb:	push   DWORD PTR [esp+0x14]
1001e8ff:	call   0x1001e7b8
1001e904:	add    esp,0xc
1001e907:	pop    ebp
1001e908:	ret    0x8
1001e90b:	mov    eax,DWORD PTR [esp+0x4]
1001e90f:	push   esi
1001e910:	xor    esi,esi
1001e912:	cmp    eax,esi
1001e914:	jne    0x1001e933
1001e916:	call   0x10019ffe
1001e91b:	push   esi
1001e91c:	push   esi
1001e91d:	push   esi
1001e91e:	push   esi
1001e91f:	push   esi
1001e920:	mov    DWORD PTR [eax],0x16
1001e926:	call   0x1001611f
1001e92b:	add    esp,0x14
1001e92e:	or     eax,0xffffffff
1001e931:	pop    esi
1001e932:	ret    
1001e933:	mov    eax,DWORD PTR [eax+0x10]
1001e936:	pop    esi
1001e937:	ret    
1001e938:	push   esi
1001e939:	mov    esi,DWORD PTR [esp+0x8]
1001e93d:	mov    eax,DWORD PTR [esi+0xc]
1001e940:	test   al,0x83
1001e942:	je     0x1001e962
1001e944:	test   al,0x8
1001e946:	je     0x1001e962
1001e948:	push   DWORD PTR [esi+0x8]
1001e94b:	call   0x10016b35
1001e950:	and    DWORD PTR [esi+0xc],0xfffffbf7
1001e957:	xor    eax,eax
1001e959:	pop    ecx
1001e95a:	mov    DWORD PTR [esi],eax
1001e95c:	mov    DWORD PTR [esi+0x8],eax
1001e95f:	mov    DWORD PTR [esi+0x4],eax
1001e962:	pop    esi
1001e963:	ret    
1001e964:	push   ebx
1001e965:	push   esi
1001e966:	mov    esi,DWORD PTR [esp+0xc]
1001e96a:	mov    eax,DWORD PTR [esi+0xc]
1001e96d:	mov    ecx,eax
1001e96f:	and    cl,0x3
1001e972:	xor    ebx,ebx
1001e974:	cmp    cl,0x2
1001e977:	jne    0x1001e9b8
1001e979:	test   ax,0x108
1001e97d:	je     0x1001e9b8
1001e97f:	mov    eax,DWORD PTR [esi+0x8]
1001e982:	push   edi
1001e983:	mov    edi,DWORD PTR [esi]
1001e985:	sub    edi,eax
1001e987:	test   edi,edi
1001e989:	jle    0x1001e9b7
1001e98b:	push   edi
1001e98c:	push   eax
1001e98d:	push   esi
1001e98e:	call   0x1001e90b
1001e993:	pop    ecx
1001e994:	push   eax
1001e995:	call   0x1001fbf8
1001e99a:	add    esp,0xc
1001e99d:	cmp    eax,edi
1001e99f:	jne    0x1001e9b0
1001e9a1:	mov    eax,DWORD PTR [esi+0xc]
1001e9a4:	test   al,al
1001e9a6:	jns    0x1001e9b7
1001e9a8:	and    eax,0xfffffffd
1001e9ab:	mov    DWORD PTR [esi+0xc],eax
1001e9ae:	jmp    0x1001e9b7
1001e9b0:	or     DWORD PTR [esi+0xc],0x20
1001e9b4:	or     ebx,0xffffffff
1001e9b7:	pop    edi
1001e9b8:	mov    eax,DWORD PTR [esi+0x8]
1001e9bb:	and    DWORD PTR [esi+0x4],0x0
1001e9bf:	mov    DWORD PTR [esi],eax
1001e9c1:	pop    esi
1001e9c2:	mov    eax,ebx
1001e9c4:	pop    ebx
1001e9c5:	ret    
1001e9c6:	push   esi
1001e9c7:	mov    esi,DWORD PTR [esp+0x8]
1001e9cb:	test   esi,esi
1001e9cd:	jne    0x1001e9d8
1001e9cf:	push   esi
1001e9d0:	call   0x1001ea08
1001e9d5:	pop    ecx
1001e9d6:	pop    esi
1001e9d7:	ret    
1001e9d8:	push   esi
1001e9d9:	call   0x1001e964
1001e9de:	test   eax,eax
1001e9e0:	pop    ecx
1001e9e1:	je     0x1001e9e8
1001e9e3:	or     eax,0xffffffff
1001e9e6:	pop    esi
1001e9e7:	ret    
1001e9e8:	test   WORD PTR [esi+0xc],0x4000
1001e9ee:	je     0x1001ea04
1001e9f0:	push   esi
1001e9f1:	call   0x1001e90b
1001e9f6:	push   eax
1001e9f7:	call   0x10021a62
1001e9fc:	pop    ecx
1001e9fd:	pop    ecx
1001e9fe:	neg    eax
1001ea00:	sbb    eax,eax
1001ea02:	pop    esi
1001ea03:	ret    
1001ea04:	xor    eax,eax
1001ea06:	pop    esi
1001ea07:	ret    
1001ea08:	push   0x14
1001ea0a:	push   0x10058888
1001ea0f:	call   0x10017a38
1001ea14:	xor    edi,edi
1001ea16:	mov    DWORD PTR [ebp-0x1c],edi
1001ea19:	mov    DWORD PTR [ebp-0x24],edi
1001ea1c:	push   0x1
1001ea1e:	call   0x1001b6ab
1001ea23:	pop    ecx
1001ea24:	mov    DWORD PTR [ebp-0x4],edi
1001ea27:	xor    esi,esi
1001ea29:	mov    DWORD PTR [ebp-0x20],esi
1001ea2c:	cmp    esi,DWORD PTR ds:0x10067f60
1001ea32:	jge    0x1001eabb
1001ea38:	mov    eax,ds:0x10066f58
1001ea3d:	lea    eax,[eax+esi*4]
1001ea40:	cmp    DWORD PTR [eax],edi
1001ea42:	je     0x1001eaa2
1001ea44:	mov    eax,DWORD PTR [eax]
1001ea46:	test   BYTE PTR [eax+0xc],0x83
1001ea4a:	je     0x1001eaa2
1001ea4c:	push   eax
1001ea4d:	push   esi
1001ea4e:	call   0x1001e728
1001ea53:	pop    ecx
1001ea54:	pop    ecx
1001ea55:	xor    edx,edx
1001ea57:	inc    edx
1001ea58:	mov    DWORD PTR [ebp-0x4],edx
1001ea5b:	mov    eax,ds:0x10066f58
1001ea60:	mov    eax,DWORD PTR [eax+esi*4]
1001ea63:	mov    ecx,DWORD PTR [eax+0xc]
1001ea66:	test   cl,0x83
1001ea69:	je     0x1001ea9a
1001ea6b:	cmp    DWORD PTR [ebp+0x8],edx
1001ea6e:	jne    0x1001ea81
1001ea70:	push   eax
1001ea71:	call   0x1001e9c6
1001ea76:	pop    ecx
1001ea77:	cmp    eax,0xffffffff
1001ea7a:	je     0x1001ea9a
1001ea7c:	inc    DWORD PTR [ebp-0x1c]
1001ea7f:	jmp    0x1001ea9a
1001ea81:	cmp    DWORD PTR [ebp+0x8],edi
1001ea84:	jne    0x1001ea9a
1001ea86:	test   cl,0x2
1001ea89:	je     0x1001ea9a
1001ea8b:	push   eax
1001ea8c:	call   0x1001e9c6
1001ea91:	pop    ecx
1001ea92:	cmp    eax,0xffffffff
1001ea95:	jne    0x1001ea9a
1001ea97:	or     DWORD PTR [ebp-0x24],eax
1001ea9a:	mov    DWORD PTR [ebp-0x4],edi
1001ea9d:	call   0x1001eaaa
1001eaa2:	inc    esi
1001eaa3:	jmp    0x1001ea29
1001eaa5:	xor    edi,edi
1001eaa7:	mov    esi,DWORD PTR [ebp-0x20]
1001eaaa:	mov    eax,ds:0x10066f58
1001eaaf:	push   DWORD PTR [eax+esi*4]
1001eab2:	push   esi
1001eab3:	call   0x1001e78c
1001eab8:	pop    ecx
1001eab9:	pop    ecx
1001eaba:	ret    
1001eabb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001eac2:	call   0x1001ead9
1001eac7:	cmp    DWORD PTR [ebp+0x8],0x1
1001eacb:	mov    eax,DWORD PTR [ebp-0x1c]
1001eace:	je     0x1001ead3
1001ead0:	mov    eax,DWORD PTR [ebp-0x24]
1001ead3:	call   0x10017a7d
1001ead8:	ret    
1001ead9:	push   0x1
1001eadb:	call   0x1001b5d3
1001eae0:	pop    ecx
1001eae1:	ret    
1001eae2:	push   0x1
1001eae4:	call   0x1001ea08
1001eae9:	pop    ecx
1001eaea:	ret    
1001eaeb:	test   BYTE PTR [ecx+0xc],0x40
1001eaef:	je     0x1001eaf7
1001eaf1:	cmp    DWORD PTR [ecx+0x8],0x0
1001eaf5:	je     0x1001eb1b
1001eaf7:	dec    DWORD PTR [ecx+0x4]
1001eafa:	js     0x1001eb07
1001eafc:	mov    edx,DWORD PTR [ecx]
1001eafe:	mov    BYTE PTR [edx],al
1001eb00:	inc    DWORD PTR [ecx]
1001eb02:	movzx  eax,al
1001eb05:	jmp    0x1001eb13
1001eb07:	movsx  eax,al
1001eb0a:	push   ecx
1001eb0b:	push   eax
1001eb0c:	call   0x1001cdfa
1001eb11:	pop    ecx
1001eb12:	pop    ecx
1001eb13:	cmp    eax,0xffffffff
1001eb16:	jne    0x1001eb1b
1001eb18:	or     DWORD PTR [esi],eax
1001eb1a:	ret    
1001eb1b:	inc    DWORD PTR [esi]
1001eb1d:	ret    
1001eb1e:	push   ebp
1001eb1f:	mov    ebp,esp
1001eb21:	push   esi
1001eb22:	mov    esi,eax
1001eb24:	jmp    0x1001eb39
1001eb26:	mov    ecx,DWORD PTR [ebp+0x10]
1001eb29:	mov    al,BYTE PTR [ebp+0x8]
1001eb2c:	dec    DWORD PTR [ebp+0xc]
1001eb2f:	call   0x1001eaeb
1001eb34:	cmp    DWORD PTR [esi],0xffffffff
1001eb37:	je     0x1001eb3f
1001eb39:	cmp    DWORD PTR [ebp+0xc],0x0
1001eb3d:	jg     0x1001eb26
1001eb3f:	pop    esi
1001eb40:	pop    ebp
1001eb41:	ret    
1001eb42:	test   BYTE PTR [edi+0xc],0x40
1001eb46:	push   ebx
1001eb47:	push   esi
1001eb48:	mov    esi,eax
1001eb4a:	mov    ebx,ecx
1001eb4c:	je     0x1001eb82
1001eb4e:	cmp    DWORD PTR [edi+0x8],0x0
1001eb52:	jne    0x1001eb82
1001eb54:	mov    eax,DWORD PTR [esp+0xc]
1001eb58:	add    DWORD PTR [esi],eax
1001eb5a:	jmp    0x1001eb89
1001eb5c:	mov    al,BYTE PTR [ebx]
1001eb5e:	dec    DWORD PTR [esp+0xc]
1001eb62:	mov    ecx,edi
1001eb64:	call   0x1001eaeb
1001eb69:	inc    ebx
1001eb6a:	cmp    DWORD PTR [esi],0xffffffff
1001eb6d:	jne    0x1001eb82
1001eb6f:	call   0x10019ffe
1001eb74:	cmp    DWORD PTR [eax],0x2a
1001eb77:	jne    0x1001eb89
1001eb79:	mov    ecx,edi
1001eb7b:	mov    al,0x3f
1001eb7d:	call   0x1001eaeb
1001eb82:	cmp    DWORD PTR [esp+0xc],0x0
1001eb87:	jg     0x1001eb5c
1001eb89:	pop    esi
1001eb8a:	pop    ebx
1001eb8b:	ret    
1001eb8c:	push   ebp
1001eb8d:	lea    ebp,[esp-0x1f8]
1001eb94:	sub    esp,0x278
1001eb9a:	mov    eax,ds:0x10064694
1001eb9f:	xor    eax,ebp
1001eba1:	mov    DWORD PTR [ebp+0x1f4],eax
1001eba7:	mov    eax,DWORD PTR [ebp+0x200]
1001ebad:	push   ebx
1001ebae:	mov    ebx,DWORD PTR [ebp+0x204]
1001ebb4:	push   esi
1001ebb5:	xor    esi,esi
1001ebb7:	push   edi
1001ebb8:	mov    edi,DWORD PTR [ebp+0x20c]
1001ebbe:	push   DWORD PTR [ebp+0x208]
1001ebc4:	lea    ecx,[ebp-0x64]
1001ebc7:	mov    DWORD PTR [ebp-0x30],eax
1001ebca:	mov    DWORD PTR [ebp-0x2c],edi
1001ebcd:	mov    DWORD PTR [ebp-0x4c],esi
1001ebd0:	mov    DWORD PTR [ebp-0x18],esi
1001ebd3:	mov    DWORD PTR [ebp-0x40],esi
1001ebd6:	mov    DWORD PTR [ebp-0x20],esi
1001ebd9:	mov    DWORD PTR [ebp-0x3c],esi
1001ebdc:	mov    DWORD PTR [ebp-0x50],esi
1001ebdf:	mov    DWORD PTR [ebp-0x44],esi
1001ebe2:	call   0x100165aa
1001ebe7:	cmp    DWORD PTR [ebp-0x30],esi
1001ebea:	jne    0x1001ec19
1001ebec:	call   0x10019ffe
1001ebf1:	push   esi
1001ebf2:	push   esi
1001ebf3:	push   esi
1001ebf4:	push   esi
1001ebf5:	mov    DWORD PTR [eax],0x16
1001ebfb:	push   esi
1001ebfc:	call   0x1001611f
1001ec01:	add    esp,0x14
1001ec04:	cmp    BYTE PTR [ebp-0x58],0x0
1001ec08:	je     0x1001ec11
1001ec0a:	mov    eax,DWORD PTR [ebp-0x5c]
1001ec0d:	and    DWORD PTR [eax+0x70],0xfffffffd
1001ec11:	or     eax,0xffffffff
1001ec14:	jmp    0x1001f4e8
1001ec19:	mov    eax,DWORD PTR [ebp-0x30]
1001ec1c:	test   BYTE PTR [eax+0xc],0x40
1001ec20:	jne    0x1001ecca
1001ec26:	push   eax
1001ec27:	call   0x1001e90b
1001ec2c:	cmp    eax,0xffffffff
1001ec2f:	pop    ecx
1001ec30:	je     0x1001ec68
1001ec32:	push   DWORD PTR [ebp-0x30]
1001ec35:	call   0x1001e90b
1001ec3a:	cmp    eax,0xfffffffe
1001ec3d:	pop    ecx
1001ec3e:	je     0x1001ec68
1001ec40:	push   DWORD PTR [ebp-0x30]
1001ec43:	call   0x1001e90b
1001ec48:	push   DWORD PTR [ebp-0x30]
1001ec4b:	sar    eax,0x5
1001ec4e:	lea    esi,[eax*4+0x10067f80]
1001ec55:	call   0x1001e90b
1001ec5a:	and    eax,0x1f
1001ec5d:	shl    eax,0x6
1001ec60:	add    eax,DWORD PTR [esi]
1001ec62:	pop    ecx
1001ec63:	pop    ecx
1001ec64:	xor    esi,esi
1001ec66:	jmp    0x1001ec6d
1001ec68:	mov    eax,0x10065188
1001ec6d:	test   BYTE PTR [eax+0x24],0x7f
1001ec71:	jne    0x1001ebec
1001ec77:	push   DWORD PTR [ebp-0x30]
1001ec7a:	call   0x1001e90b
1001ec7f:	cmp    eax,0xffffffff
1001ec82:	pop    ecx
1001ec83:	je     0x1001ecbb
1001ec85:	push   DWORD PTR [ebp-0x30]
1001ec88:	call   0x1001e90b
1001ec8d:	cmp    eax,0xfffffffe
1001ec90:	pop    ecx
1001ec91:	je     0x1001ecbb
1001ec93:	push   DWORD PTR [ebp-0x30]
1001ec96:	call   0x1001e90b
1001ec9b:	push   DWORD PTR [ebp-0x30]
1001ec9e:	sar    eax,0x5
1001eca1:	lea    esi,[eax*4+0x10067f80]
1001eca8:	call   0x1001e90b
1001ecad:	and    eax,0x1f
1001ecb0:	shl    eax,0x6
1001ecb3:	add    eax,DWORD PTR [esi]
1001ecb5:	pop    ecx
1001ecb6:	pop    ecx
1001ecb7:	xor    esi,esi
1001ecb9:	jmp    0x1001ecc0
1001ecbb:	mov    eax,0x10065188
1001ecc0:	test   BYTE PTR [eax+0x24],0x80
1001ecc4:	jne    0x1001ebec
1001ecca:	cmp    ebx,esi
1001eccc:	je     0x1001ebec
1001ecd2:	mov    dl,BYTE PTR [ebx]
1001ecd4:	xor    ecx,ecx
1001ecd6:	test   dl,dl
1001ecd8:	mov    DWORD PTR [ebp-0x34],esi
1001ecdb:	mov    DWORD PTR [ebp-0x28],esi
1001ecde:	mov    DWORD PTR [ebp-0x54],esi
1001ece1:	mov    BYTE PTR [ebp-0x19],dl
1001ece4:	je     0x1001f4d8
1001ecea:	inc    ebx
1001eceb:	cmp    DWORD PTR [ebp-0x34],0x0
1001ecef:	mov    DWORD PTR [ebp-0x48],ebx
1001ecf2:	jl     0x1001f4d8
1001ecf8:	mov    al,dl
1001ecfa:	sub    al,0x20
1001ecfc:	cmp    al,0x58
1001ecfe:	ja     0x1001ed11
1001ed00:	movsx  eax,dl
1001ed03:	movzx  eax,BYTE PTR [eax+0x100513c8]
1001ed0a:	and    eax,0xf
1001ed0d:	xor    esi,esi
1001ed0f:	jmp    0x1001ed15
1001ed11:	xor    esi,esi
1001ed13:	xor    eax,eax
1001ed15:	movsx  eax,BYTE PTR [ecx+eax*8+0x100513e8]
1001ed1d:	push   0x7
1001ed1f:	sar    eax,0x4
1001ed22:	pop    ecx
1001ed23:	cmp    eax,ecx
1001ed25:	mov    DWORD PTR [ebp-0x74],eax
1001ed28:	ja     0x1001f4a8
1001ed2e:	jmp    DWORD PTR [eax*4+0x1001f500]
1001ed35:	or     DWORD PTR [ebp-0x20],0xffffffff
1001ed39:	mov    DWORD PTR [ebp-0x78],esi
1001ed3c:	mov    DWORD PTR [ebp-0x50],esi
1001ed3f:	mov    DWORD PTR [ebp-0x40],esi
1001ed42:	mov    DWORD PTR [ebp-0x3c],esi
1001ed45:	mov    DWORD PTR [ebp-0x18],esi
1001ed48:	mov    DWORD PTR [ebp-0x44],esi
1001ed4b:	jmp    0x1001f4a8
1001ed50:	movsx  eax,dl
1001ed53:	sub    eax,0x20
1001ed56:	je     0x1001ed96
1001ed58:	sub    eax,0x3
1001ed5b:	je     0x1001ed8a
1001ed5d:	sub    eax,0x8
1001ed60:	je     0x1001ed81
1001ed62:	dec    eax
1001ed63:	dec    eax
1001ed64:	je     0x1001ed78
1001ed66:	sub    eax,0x3
1001ed69:	jne    0x1001f4a8
1001ed6f:	or     DWORD PTR [ebp-0x18],0x8
1001ed73:	jmp    0x1001f4a8
1001ed78:	or     DWORD PTR [ebp-0x18],0x4
1001ed7c:	jmp    0x1001f4a8
1001ed81:	or     DWORD PTR [ebp-0x18],0x1
1001ed85:	jmp    0x1001f4a8
1001ed8a:	or     DWORD PTR [ebp-0x18],0x80
1001ed91:	jmp    0x1001f4a8
1001ed96:	or     DWORD PTR [ebp-0x18],0x2
1001ed9a:	jmp    0x1001f4a8
1001ed9f:	cmp    dl,0x2a
1001eda2:	jne    0x1001edc4
1001eda4:	add    edi,0x4
1001eda7:	mov    DWORD PTR [ebp-0x2c],edi
1001edaa:	mov    edi,DWORD PTR [edi-0x4]
1001edad:	cmp    edi,esi
1001edaf:	mov    DWORD PTR [ebp-0x40],edi
1001edb2:	jge    0x1001f4a8
1001edb8:	or     DWORD PTR [ebp-0x18],0x4
1001edbc:	neg    DWORD PTR [ebp-0x40]
1001edbf:	jmp    0x1001f4a8
1001edc4:	mov    eax,DWORD PTR [ebp-0x40]
1001edc7:	imul   eax,eax,0xa
1001edca:	movsx  ecx,dl
1001edcd:	lea    eax,[eax+ecx*1-0x30]
1001edd1:	mov    DWORD PTR [ebp-0x40],eax
1001edd4:	jmp    0x1001f4a8
1001edd9:	mov    DWORD PTR [ebp-0x20],esi
1001eddc:	jmp    0x1001f4a8
1001ede1:	cmp    dl,0x2a
1001ede4:	jne    0x1001ee03
1001ede6:	add    edi,0x4
1001ede9:	mov    DWORD PTR [ebp-0x2c],edi
1001edec:	mov    edi,DWORD PTR [edi-0x4]
1001edef:	cmp    edi,esi
1001edf1:	mov    DWORD PTR [ebp-0x20],edi
1001edf4:	jge    0x1001f4a8
1001edfa:	or     DWORD PTR [ebp-0x20],0xffffffff
1001edfe:	jmp    0x1001f4a8
1001ee03:	mov    eax,DWORD PTR [ebp-0x20]
1001ee06:	imul   eax,eax,0xa
1001ee09:	movsx  ecx,dl
1001ee0c:	lea    eax,[eax+ecx*1-0x30]
1001ee10:	mov    DWORD PTR [ebp-0x20],eax
1001ee13:	jmp    0x1001f4a8
1001ee18:	cmp    dl,0x49
1001ee1b:	je     0x1001ee63
1001ee1d:	cmp    dl,0x68
1001ee20:	je     0x1001ee5a
1001ee22:	cmp    dl,0x6c
1001ee25:	je     0x1001ee3c
1001ee27:	cmp    dl,0x77
1001ee2a:	jne    0x1001f4a8
1001ee30:	or     DWORD PTR [ebp-0x18],0x800
1001ee37:	jmp    0x1001f4a8
1001ee3c:	cmp    BYTE PTR [ebx],0x6c
1001ee3f:	jne    0x1001ee51
1001ee41:	inc    ebx
1001ee42:	or     DWORD PTR [ebp-0x18],0x1000
1001ee49:	mov    DWORD PTR [ebp-0x48],ebx
1001ee4c:	jmp    0x1001f4a8
1001ee51:	or     DWORD PTR [ebp-0x18],0x10
1001ee55:	jmp    0x1001f4a8
1001ee5a:	or     DWORD PTR [ebp-0x18],0x20
1001ee5e:	jmp    0x1001f4a8
1001ee63:	mov    al,BYTE PTR [ebx]
1001ee65:	cmp    al,0x36
1001ee67:	jne    0x1001ee80
1001ee69:	cmp    BYTE PTR [ebx+0x1],0x34
1001ee6d:	jne    0x1001ee80
1001ee6f:	inc    ebx
1001ee70:	inc    ebx
1001ee71:	or     DWORD PTR [ebp-0x18],0x8000
1001ee78:	mov    DWORD PTR [ebp-0x48],ebx
1001ee7b:	jmp    0x1001f4a8
1001ee80:	cmp    al,0x33
1001ee82:	jne    0x1001ee9b
1001ee84:	cmp    BYTE PTR [ebx+0x1],0x32
1001ee88:	jne    0x1001ee9b
1001ee8a:	inc    ebx
1001ee8b:	inc    ebx
1001ee8c:	and    DWORD PTR [ebp-0x18],0xffff7fff
1001ee93:	mov    DWORD PTR [ebp-0x48],ebx
1001ee96:	jmp    0x1001f4a8
1001ee9b:	cmp    al,0x64
1001ee9d:	je     0x1001f4a8
1001eea3:	cmp    al,0x69
1001eea5:	je     0x1001f4a8
1001eeab:	cmp    al,0x6f
1001eead:	je     0x1001f4a8
1001eeb3:	cmp    al,0x75
1001eeb5:	je     0x1001f4a8
1001eebb:	cmp    al,0x78
1001eebd:	je     0x1001f4a8
1001eec3:	cmp    al,0x58
1001eec5:	je     0x1001f4a8
1001eecb:	mov    DWORD PTR [ebp-0x74],esi
1001eece:	lea    eax,[ebp-0x64]
1001eed1:	push   eax
1001eed2:	movzx  eax,dl
1001eed5:	push   eax
1001eed6:	mov    DWORD PTR [ebp-0x44],esi
1001eed9:	call   0x10016fe7
1001eede:	pop    ecx
1001eedf:	test   eax,eax
1001eee1:	mov    al,BYTE PTR [ebp-0x19]
1001eee4:	pop    ecx
1001eee5:	je     0x1001ef00
1001eee7:	mov    ecx,DWORD PTR [ebp-0x30]
1001eeea:	lea    esi,[ebp-0x34]
1001eeed:	call   0x1001eaeb
1001eef2:	mov    al,BYTE PTR [ebx]
1001eef4:	inc    ebx
1001eef5:	test   al,al
1001eef7:	mov    DWORD PTR [ebp-0x48],ebx
1001eefa:	je     0x1001f4c1
1001ef00:	mov    ecx,DWORD PTR [ebp-0x30]
1001ef03:	lea    esi,[ebp-0x34]
1001ef06:	call   0x1001eaeb
1001ef0b:	jmp    0x1001f4a8
1001ef10:	movsx  eax,dl
1001ef13:	cmp    eax,0x64
1001ef16:	jg     0x1001f08e
1001ef1c:	je     0x1001f10d
1001ef22:	cmp    eax,0x53
1001ef25:	jg     0x1001efd6
1001ef2b:	je     0x1001ef87
1001ef2d:	sub    eax,0x41
1001ef30:	je     0x1001ef42
1001ef32:	dec    eax
1001ef33:	dec    eax
1001ef34:	je     0x1001ef76
1001ef36:	dec    eax
1001ef37:	dec    eax
1001ef38:	je     0x1001ef42
1001ef3a:	dec    eax
1001ef3b:	dec    eax
1001ef3c:	jne    0x1001f390
1001ef42:	add    dl,0x20
1001ef45:	mov    DWORD PTR [ebp-0x78],0x1
1001ef4c:	mov    BYTE PTR [ebp-0x19],dl
1001ef4f:	or     DWORD PTR [ebp-0x18],0x40
1001ef53:	cmp    DWORD PTR [ebp-0x20],esi
1001ef56:	lea    ebx,[ebp-0x14]
1001ef59:	mov    eax,0x200
1001ef5e:	mov    DWORD PTR [ebp-0x24],ebx
1001ef61:	mov    DWORD PTR [ebp-0x68],eax
1001ef64:	jge    0x1001f131
1001ef6a:	mov    DWORD PTR [ebp-0x20],0x6
1001ef71:	jmp    0x1001f17f
1001ef76:	test   WORD PTR [ebp-0x18],0x830
1001ef7c:	jne    0x1001eff3
1001ef7e:	or     DWORD PTR [ebp-0x18],0x800
1001ef85:	jmp    0x1001eff3
1001ef87:	test   WORD PTR [ebp-0x18],0x830
1001ef8d:	jne    0x1001ef96
1001ef8f:	or     DWORD PTR [ebp-0x18],0x800
1001ef96:	mov    ecx,DWORD PTR [ebp-0x20]
1001ef99:	cmp    ecx,0xffffffff
1001ef9c:	jne    0x1001efa3
1001ef9e:	mov    ecx,0x7fffffff
1001efa3:	add    edi,0x4
1001efa6:	test   WORD PTR [ebp-0x18],0x810
1001efac:	mov    DWORD PTR [ebp-0x2c],edi
1001efaf:	mov    edi,DWORD PTR [edi-0x4]
1001efb2:	mov    DWORD PTR [ebp-0x24],edi
1001efb5:	je     0x1001f36e
1001efbb:	cmp    edi,esi
1001efbd:	jne    0x1001efc7
1001efbf:	mov    eax,ds:0x100654d4
1001efc4:	mov    DWORD PTR [ebp-0x24],eax
1001efc7:	mov    eax,DWORD PTR [ebp-0x24]
1001efca:	mov    DWORD PTR [ebp-0x44],0x1
1001efd1:	jmp    0x1001f363
1001efd6:	sub    eax,0x58
1001efd9:	je     0x1001f218
1001efdf:	dec    eax
1001efe0:	dec    eax
1001efe1:	je     0x1001f040
1001efe3:	sub    eax,ecx
1001efe5:	je     0x1001ef4f
1001efeb:	dec    eax
1001efec:	dec    eax
1001efed:	jne    0x1001f390
1001eff3:	add    edi,0x4
1001eff6:	test   WORD PTR [ebp-0x18],0x810
1001effc:	mov    DWORD PTR [ebp-0x2c],edi
1001efff:	je     0x1001f028
1001f001:	movzx  eax,WORD PTR [edi-0x4]
1001f005:	push   eax
1001f006:	push   0x200
1001f00b:	lea    eax,[ebp-0x14]
1001f00e:	push   eax
1001f00f:	lea    eax,[ebp-0x28]
1001f012:	push   eax
1001f013:	call   0x10021ca2
1001f018:	add    esp,0x10
1001f01b:	test   eax,eax
1001f01d:	je     0x1001f035
1001f01f:	mov    DWORD PTR [ebp-0x50],0x1
1001f026:	jmp    0x1001f035
1001f028:	mov    al,BYTE PTR [edi-0x4]
1001f02b:	mov    BYTE PTR [ebp-0x14],al
1001f02e:	mov    DWORD PTR [ebp-0x28],0x1
1001f035:	lea    eax,[ebp-0x14]
1001f038:	mov    DWORD PTR [ebp-0x24],eax
1001f03b:	jmp    0x1001f390
1001f040:	mov    eax,DWORD PTR [edi]
1001f042:	add    edi,0x4
1001f045:	cmp    eax,esi
1001f047:	mov    DWORD PTR [ebp-0x2c],edi
1001f04a:	je     0x1001f07a
1001f04c:	mov    ecx,DWORD PTR [eax+0x4]
1001f04f:	cmp    ecx,esi
1001f051:	je     0x1001f07a
1001f053:	test   WORD PTR [ebp-0x18],0x800
1001f059:	movsx  eax,WORD PTR [eax]
1001f05c:	mov    DWORD PTR [ebp-0x24],ecx
1001f05f:	je     0x1001f072
1001f061:	cdq    
1001f062:	sub    eax,edx
1001f064:	sar    eax,1
1001f066:	mov    DWORD PTR [ebp-0x44],0x1
1001f06d:	jmp    0x1001f38d
1001f072:	mov    DWORD PTR [ebp-0x44],esi
1001f075:	jmp    0x1001f38d
1001f07a:	mov    eax,ds:0x100654d0
1001f07f:	mov    DWORD PTR [ebp-0x24],eax
1001f082:	push   eax
1001f083:	call   0x10016370
1001f088:	pop    ecx
1001f089:	jmp    0x1001f38d
1001f08e:	cmp    eax,0x70
1001f091:	jg     0x1001f21d
1001f097:	je     0x1001f211
1001f09d:	cmp    eax,0x65
1001f0a0:	jl     0x1001f390
1001f0a6:	cmp    eax,0x67
1001f0a9:	jle    0x1001ef4f
1001f0af:	cmp    eax,0x69
1001f0b2:	je     0x1001f10d
1001f0b4:	cmp    eax,0x6e
1001f0b7:	je     0x1001f0d8
1001f0b9:	cmp    eax,0x6f
1001f0bc:	jne    0x1001f390
1001f0c2:	test   BYTE PTR [ebp-0x18],0x80
1001f0c6:	mov    DWORD PTR [ebp-0x28],0x8
1001f0cd:	je     0x1001f118
1001f0cf:	or     DWORD PTR [ebp-0x18],0x200
1001f0d6:	jmp    0x1001f118
1001f0d8:	mov    esi,DWORD PTR [edi]
1001f0da:	add    edi,0x4
1001f0dd:	mov    DWORD PTR [ebp-0x2c],edi
1001f0e0:	call   0x10021883
1001f0e5:	test   eax,eax
1001f0e7:	je     0x1001f4c1
1001f0ed:	test   BYTE PTR [ebp-0x18],0x20
1001f0f1:	je     0x1001f0fc
1001f0f3:	mov    ax,WORD PTR [ebp-0x34]
1001f0f7:	mov    WORD PTR [esi],ax
1001f0fa:	jmp    0x1001f101
1001f0fc:	mov    eax,DWORD PTR [ebp-0x34]
1001f0ff:	mov    DWORD PTR [esi],eax
1001f101:	mov    DWORD PTR [ebp-0x50],0x1
1001f108:	jmp    0x1001f495
1001f10d:	or     DWORD PTR [ebp-0x18],0x40
1001f111:	mov    DWORD PTR [ebp-0x28],0xa
1001f118:	mov    ecx,DWORD PTR [ebp-0x18]
1001f11b:	test   cx,cx
1001f11e:	jns    0x1001f267
1001f124:	mov    eax,DWORD PTR [edi]
1001f126:	mov    edx,DWORD PTR [edi+0x4]
1001f129:	add    edi,0x8
1001f12c:	jmp    0x1001f29c
1001f131:	jne    0x1001f141
1001f133:	cmp    dl,0x67
1001f136:	jne    0x1001f17f
1001f138:	mov    DWORD PTR [ebp-0x20],0x1
1001f13f:	jmp    0x1001f17f
1001f141:	cmp    DWORD PTR [ebp-0x20],eax
1001f144:	jle    0x1001f149
1001f146:	mov    DWORD PTR [ebp-0x20],eax
1001f149:	cmp    DWORD PTR [ebp-0x20],0xa3
1001f150:	jle    0x1001f17f
1001f152:	mov    esi,DWORD PTR [ebp-0x20]
1001f155:	add    esi,0x15d
1001f15b:	push   esi
1001f15c:	call   0x100185a5
1001f161:	test   eax,eax
1001f163:	mov    dl,BYTE PTR [ebp-0x19]
1001f166:	pop    ecx
1001f167:	mov    DWORD PTR [ebp-0x54],eax
1001f16a:	je     0x1001f176
1001f16c:	mov    DWORD PTR [ebp-0x24],eax
1001f16f:	mov    DWORD PTR [ebp-0x68],esi
1001f172:	mov    ebx,eax
1001f174:	jmp    0x1001f17d
1001f176:	mov    DWORD PTR [ebp-0x20],0xa3
1001f17d:	xor    esi,esi
1001f17f:	mov    eax,DWORD PTR [edi]
1001f181:	add    edi,0x8
1001f184:	mov    DWORD PTR [ebp-0x80],eax
1001f187:	mov    eax,DWORD PTR [edi-0x4]
1001f18a:	mov    DWORD PTR [ebp-0x7c],eax
1001f18d:	lea    eax,[ebp-0x64]
1001f190:	push   eax
1001f191:	push   DWORD PTR [ebp-0x78]
1001f194:	movsx  eax,dl
1001f197:	push   DWORD PTR [ebp-0x20]
1001f19a:	mov    DWORD PTR [ebp-0x2c],edi
1001f19d:	push   eax
1001f19e:	push   DWORD PTR [ebp-0x68]
1001f1a1:	lea    eax,[ebp-0x80]
1001f1a4:	push   ebx
1001f1a5:	push   eax
1001f1a6:	push   DWORD PTR ds:0x10065618
1001f1ac:	call   0x100195fa
1001f1b1:	pop    ecx
1001f1b2:	call   eax
1001f1b4:	mov    edi,DWORD PTR [ebp-0x18]
1001f1b7:	add    esp,0x1c
1001f1ba:	and    edi,0x80
1001f1c0:	je     0x1001f1dc
1001f1c2:	cmp    DWORD PTR [ebp-0x20],esi
1001f1c5:	jne    0x1001f1dc
1001f1c7:	lea    eax,[ebp-0x64]
1001f1ca:	push   eax
1001f1cb:	push   ebx
1001f1cc:	push   DWORD PTR ds:0x10065624
1001f1d2:	call   0x100195fa
1001f1d7:	pop    ecx
1001f1d8:	call   eax
1001f1da:	pop    ecx
1001f1db:	pop    ecx
1001f1dc:	cmp    BYTE PTR [ebp-0x19],0x67
1001f1e0:	jne    0x1001f1fb
1001f1e2:	cmp    edi,esi
1001f1e4:	jne    0x1001f1fb
1001f1e6:	lea    eax,[ebp-0x64]
1001f1e9:	push   eax
1001f1ea:	push   ebx
1001f1eb:	push   DWORD PTR ds:0x10065620
1001f1f1:	call   0x100195fa
1001f1f6:	pop    ecx
1001f1f7:	call   eax
1001f1f9:	pop    ecx
1001f1fa:	pop    ecx
1001f1fb:	cmp    BYTE PTR [ebx],0x2d
1001f1fe:	jne    0x1001f20b
1001f200:	or     DWORD PTR [ebp-0x18],0x100
1001f207:	inc    ebx
1001f208:	mov    DWORD PTR [ebp-0x24],ebx
1001f20b:	push   ebx
1001f20c:	jmp    0x1001f083
1001f211:	mov    DWORD PTR [ebp-0x20],0x8
1001f218:	mov    DWORD PTR [ebp-0x4c],ecx
1001f21b:	jmp    0x1001f23e
1001f21d:	sub    eax,0x73
1001f220:	je     0x1001ef96
1001f226:	dec    eax
1001f227:	dec    eax
1001f228:	je     0x1001f111
1001f22e:	sub    eax,0x3
1001f231:	jne    0x1001f390
1001f237:	mov    DWORD PTR [ebp-0x4c],0x27
1001f23e:	test   BYTE PTR [ebp-0x18],0x80
1001f242:	mov    DWORD PTR [ebp-0x28],0x10
1001f249:	je     0x1001f118
1001f24f:	mov    al,BYTE PTR [ebp-0x4c]
1001f252:	add    al,0x51
1001f254:	mov    BYTE PTR [ebp-0x38],0x30
1001f258:	mov    BYTE PTR [ebp-0x37],al
1001f25b:	mov    DWORD PTR [ebp-0x3c],0x2
1001f262:	jmp    0x1001f118
1001f267:	test   cx,0x1000
1001f26c:	jne    0x1001f124
1001f272:	add    edi,0x4
1001f275:	test   cl,0x20
1001f278:	je     0x1001f28f
1001f27a:	test   cl,0x40
1001f27d:	mov    DWORD PTR [ebp-0x2c],edi
1001f280:	je     0x1001f288
1001f282:	movsx  eax,WORD PTR [edi-0x4]
1001f286:	jmp    0x1001f28c
1001f288:	movzx  eax,WORD PTR [edi-0x4]
1001f28c:	cdq    
1001f28d:	jmp    0x1001f29f
1001f28f:	test   cl,0x40
1001f292:	mov    eax,DWORD PTR [edi-0x4]
1001f295:	je     0x1001f29a
1001f297:	cdq    
1001f298:	jmp    0x1001f29c
1001f29a:	xor    edx,edx
1001f29c:	mov    DWORD PTR [ebp-0x2c],edi
1001f29f:	test   cl,0x40
1001f2a2:	je     0x1001f2bc
1001f2a4:	cmp    edx,esi
1001f2a6:	jg     0x1001f2bc
1001f2a8:	jl     0x1001f2ae
1001f2aa:	cmp    eax,esi
1001f2ac:	jae    0x1001f2bc
1001f2ae:	neg    eax
1001f2b0:	adc    edx,0x0
1001f2b3:	neg    edx
1001f2b5:	or     DWORD PTR [ebp-0x18],0x100
1001f2bc:	test   WORD PTR [ebp-0x18],0x9000
1001f2c2:	mov    ebx,edx
1001f2c4:	mov    edi,eax
1001f2c6:	jne    0x1001f2ca
1001f2c8:	xor    ebx,ebx
1001f2ca:	cmp    DWORD PTR [ebp-0x20],0x0
1001f2ce:	jge    0x1001f2d9
1001f2d0:	mov    DWORD PTR [ebp-0x20],0x1
1001f2d7:	jmp    0x1001f2ea
1001f2d9:	and    DWORD PTR [ebp-0x18],0xfffffff7
1001f2dd:	mov    eax,0x200
1001f2e2:	cmp    DWORD PTR [ebp-0x20],eax
1001f2e5:	jle    0x1001f2ea
1001f2e7:	mov    DWORD PTR [ebp-0x20],eax
1001f2ea:	mov    eax,edi
1001f2ec:	or     eax,ebx
1001f2ee:	jne    0x1001f2f3
1001f2f0:	and    DWORD PTR [ebp-0x3c],eax
1001f2f3:	lea    esi,[ebp+0x1eb]
1001f2f9:	mov    eax,DWORD PTR [ebp-0x20]
1001f2fc:	dec    DWORD PTR [ebp-0x20]
1001f2ff:	test   eax,eax
1001f301:	jg     0x1001f309
1001f303:	mov    eax,edi
1001f305:	or     eax,ebx
1001f307:	je     0x1001f32d
1001f309:	mov    eax,DWORD PTR [ebp-0x28]
1001f30c:	cdq    
1001f30d:	push   edx
1001f30e:	push   eax
1001f30f:	push   ebx
1001f310:	push   edi
1001f311:	call   0x1001e580
1001f316:	add    ecx,0x30
1001f319:	cmp    ecx,0x39
1001f31c:	mov    DWORD PTR [ebp-0x68],ebx
1001f31f:	mov    edi,eax
1001f321:	mov    ebx,edx
1001f323:	jle    0x1001f328
1001f325:	add    ecx,DWORD PTR [ebp-0x4c]
1001f328:	mov    BYTE PTR [esi],cl
1001f32a:	dec    esi
1001f32b:	jmp    0x1001f2f9
1001f32d:	lea    eax,[ebp+0x1eb]
1001f333:	sub    eax,esi
1001f335:	inc    esi
1001f336:	test   WORD PTR [ebp-0x18],0x200
1001f33c:	mov    DWORD PTR [ebp-0x28],eax
1001f33f:	mov    DWORD PTR [ebp-0x24],esi
1001f342:	je     0x1001f390
1001f344:	test   eax,eax
1001f346:	je     0x1001f34f
1001f348:	mov    ecx,esi
1001f34a:	cmp    BYTE PTR [ecx],0x30
1001f34d:	je     0x1001f390
1001f34f:	dec    DWORD PTR [ebp-0x24]
1001f352:	mov    ecx,DWORD PTR [ebp-0x24]
1001f355:	mov    BYTE PTR [ecx],0x30
1001f358:	inc    eax
1001f359:	jmp    0x1001f38d
1001f35b:	dec    ecx
1001f35c:	cmp    WORD PTR [eax],si
1001f35f:	je     0x1001f367
1001f361:	inc    eax
1001f362:	inc    eax
1001f363:	cmp    ecx,esi
1001f365:	jne    0x1001f35b
1001f367:	sub    eax,DWORD PTR [ebp-0x24]
1001f36a:	sar    eax,1
1001f36c:	jmp    0x1001f38d
1001f36e:	cmp    edi,esi
1001f370:	jne    0x1001f37a
1001f372:	mov    eax,ds:0x100654d0
1001f377:	mov    DWORD PTR [ebp-0x24],eax
1001f37a:	mov    eax,DWORD PTR [ebp-0x24]
1001f37d:	jmp    0x1001f386
1001f37f:	dec    ecx
1001f380:	cmp    BYTE PTR [eax],0x0
1001f383:	je     0x1001f38a
1001f385:	inc    eax
1001f386:	cmp    ecx,esi
1001f388:	jne    0x1001f37f
1001f38a:	sub    eax,DWORD PTR [ebp-0x24]
1001f38d:	mov    DWORD PTR [ebp-0x28],eax
1001f390:	cmp    DWORD PTR [ebp-0x50],0x0
1001f394:	jne    0x1001f495
1001f39a:	mov    eax,DWORD PTR [ebp-0x18]
1001f39d:	test   al,0x40
1001f39f:	je     0x1001f3c6
1001f3a1:	test   ax,0x100
1001f3a5:	je     0x1001f3ad
1001f3a7:	mov    BYTE PTR [ebp-0x38],0x2d
1001f3ab:	jmp    0x1001f3bf
1001f3ad:	test   al,0x1
1001f3af:	je     0x1001f3b7
1001f3b1:	mov    BYTE PTR [ebp-0x38],0x2b
1001f3b5:	jmp    0x1001f3bf
1001f3b7:	test   al,0x2
1001f3b9:	je     0x1001f3c6
1001f3bb:	mov    BYTE PTR [ebp-0x38],0x20
1001f3bf:	mov    DWORD PTR [ebp-0x3c],0x1
1001f3c6:	mov    ebx,DWORD PTR [ebp-0x40]
1001f3c9:	sub    ebx,DWORD PTR [ebp-0x28]
1001f3cc:	sub    ebx,DWORD PTR [ebp-0x3c]
1001f3cf:	test   BYTE PTR [ebp-0x18],0xc
1001f3d3:	jne    0x1001f3e6
1001f3d5:	push   DWORD PTR [ebp-0x30]
1001f3d8:	lea    eax,[ebp-0x34]
1001f3db:	push   ebx
1001f3dc:	push   0x20
1001f3de:	call   0x1001eb1e
1001f3e3:	add    esp,0xc
1001f3e6:	push   DWORD PTR [ebp-0x3c]
1001f3e9:	mov    edi,DWORD PTR [ebp-0x30]
1001f3ec:	lea    eax,[ebp-0x34]
1001f3ef:	lea    ecx,[ebp-0x38]
1001f3f2:	call   0x1001eb42
1001f3f7:	test   BYTE PTR [ebp-0x18],0x8
1001f3fb:	pop    ecx
1001f3fc:	je     0x1001f413
1001f3fe:	test   BYTE PTR [ebp-0x18],0x4
1001f402:	jne    0x1001f413
1001f404:	push   edi
1001f405:	push   ebx
1001f406:	push   0x30
1001f408:	lea    eax,[ebp-0x34]
1001f40b:	call   0x1001eb1e
1001f410:	add    esp,0xc
1001f413:	cmp    DWORD PTR [ebp-0x44],0x0
1001f417:	mov    eax,DWORD PTR [ebp-0x28]
1001f41a:	je     0x1001f46d
1001f41c:	test   eax,eax
1001f41e:	jle    0x1001f46d
1001f420:	mov    esi,DWORD PTR [ebp-0x24]
1001f423:	mov    DWORD PTR [ebp-0x68],eax
1001f426:	movzx  eax,WORD PTR [esi]
1001f429:	dec    DWORD PTR [ebp-0x68]
1001f42c:	push   eax
1001f42d:	push   0x6
1001f42f:	lea    eax,[ebp+0x1ec]
1001f435:	push   eax
1001f436:	lea    eax,[ebp-0x70]
1001f439:	inc    esi
1001f43a:	push   eax
1001f43b:	inc    esi
1001f43c:	call   0x10021ca2
1001f441:	add    esp,0x10
1001f444:	test   eax,eax
1001f446:	jne    0x1001f467
1001f448:	cmp    DWORD PTR [ebp-0x70],eax
1001f44b:	je     0x1001f467
1001f44d:	push   DWORD PTR [ebp-0x70]
1001f450:	lea    eax,[ebp-0x34]
1001f453:	lea    ecx,[ebp+0x1ec]
1001f459:	call   0x1001eb42
1001f45e:	cmp    DWORD PTR [ebp-0x68],0x0
1001f462:	pop    ecx
1001f463:	jne    0x1001f426
1001f465:	jmp    0x1001f47a
1001f467:	or     DWORD PTR [ebp-0x34],0xffffffff
1001f46b:	jmp    0x1001f47a
1001f46d:	mov    ecx,DWORD PTR [ebp-0x24]
1001f470:	push   eax
1001f471:	lea    eax,[ebp-0x34]
1001f474:	call   0x1001eb42
1001f479:	pop    ecx
1001f47a:	cmp    DWORD PTR [ebp-0x34],0x0
1001f47e:	jl     0x1001f495
1001f480:	test   BYTE PTR [ebp-0x18],0x4
1001f484:	je     0x1001f495
1001f486:	push   edi
1001f487:	push   ebx
1001f488:	push   0x20
1001f48a:	lea    eax,[ebp-0x34]
1001f48d:	call   0x1001eb1e
1001f492:	add    esp,0xc
1001f495:	cmp    DWORD PTR [ebp-0x54],0x0
1001f499:	je     0x1001f4a8
1001f49b:	push   DWORD PTR [ebp-0x54]
1001f49e:	call   0x10016b35
1001f4a3:	and    DWORD PTR [ebp-0x54],0x0
1001f4a7:	pop    ecx
1001f4a8:	mov    ebx,DWORD PTR [ebp-0x48]
1001f4ab:	mov    al,BYTE PTR [ebx]
1001f4ad:	test   al,al
1001f4af:	mov    BYTE PTR [ebp-0x19],al
1001f4b2:	je     0x1001f4d8
1001f4b4:	mov    ecx,DWORD PTR [ebp-0x74]
1001f4b7:	mov    edi,DWORD PTR [ebp-0x2c]
1001f4ba:	mov    dl,al
1001f4bc:	jmp    0x1001ecea
1001f4c1:	call   0x10019ffe
1001f4c6:	mov    DWORD PTR [eax],0x16
1001f4cc:	xor    eax,eax
1001f4ce:	push   eax
1001f4cf:	push   eax
1001f4d0:	push   eax
1001f4d1:	push   eax
1001f4d2:	push   eax
1001f4d3:	jmp    0x1001ebfc
1001f4d8:	cmp    BYTE PTR [ebp-0x58],0x0
1001f4dc:	je     0x1001f4e5
1001f4de:	mov    eax,DWORD PTR [ebp-0x5c]
1001f4e1:	and    DWORD PTR [eax+0x70],0xfffffffd
1001f4e5:	mov    eax,DWORD PTR [ebp-0x34]
1001f4e8:	mov    ecx,DWORD PTR [ebp+0x1f4]
1001f4ee:	pop    edi
1001f4ef:	pop    esi
1001f4f0:	xor    ecx,ebp
1001f4f2:	pop    ebx
1001f4f3:	call   0x10015adb
1001f4f8:	add    ebp,0x1f8
1001f4fe:	leave  
1001f4ff:	ret    
1001f500:	into   
1001f501:	out    dx,al
1001f502:	add    DWORD PTR [eax],edx
1001f504:	xor    eax,0x501001ed
1001f509:	in     eax,dx
1001f50a:	add    DWORD PTR [eax],edx
1001f50c:	lahf   
1001f50d:	in     eax,dx
1001f50e:	add    DWORD PTR [eax],edx
1001f510:	fldln2 
1001f512:	add    DWORD PTR [eax],edx
1001f514:	loope  0x1001f503
1001f516:	add    DWORD PTR [eax],edx
1001f518:	sbb    dh,ch
1001f51a:	add    DWORD PTR [eax],edx
1001f51c:	adc    bh,ch
1001f51e:	add    DWORD PTR [eax],edx
1001f520:	push   ebp
1001f521:	mov    ebp,esp
1001f523:	sub    esp,0x18
1001f526:	push   ebx
1001f527:	push   DWORD PTR [ebp+0x10]
1001f52a:	lea    ecx,[ebp-0x18]
1001f52d:	call   0x100165aa
1001f532:	mov    ebx,DWORD PTR [ebp+0x8]
1001f535:	lea    eax,[ebx+0x1]
1001f538:	cmp    eax,0x100
1001f53d:	ja     0x1001f54e
1001f53f:	mov    eax,DWORD PTR [ebp-0x18]
1001f542:	mov    eax,DWORD PTR [eax+0xc8]
1001f548:	movzx  eax,WORD PTR [eax+ebx*2]
1001f54c:	jmp    0x1001f5c3
1001f54e:	mov    DWORD PTR [ebp+0x8],ebx
1001f551:	sar    DWORD PTR [ebp+0x8],0x8
1001f555:	lea    eax,[ebp-0x18]
1001f558:	push   eax
1001f559:	mov    eax,DWORD PTR [ebp+0x8]
1001f55c:	and    eax,0xff
1001f561:	push   eax
1001f562:	call   0x10016fe7
1001f567:	test   eax,eax
1001f569:	pop    ecx
1001f56a:	pop    ecx
1001f56b:	je     0x1001f57f
1001f56d:	mov    al,BYTE PTR [ebp+0x8]
1001f570:	push   0x2
1001f572:	mov    BYTE PTR [ebp-0x8],al
1001f575:	mov    BYTE PTR [ebp-0x7],bl
1001f578:	mov    BYTE PTR [ebp-0x6],0x0
1001f57c:	pop    ecx
1001f57d:	jmp    0x1001f589
1001f57f:	xor    ecx,ecx
1001f581:	mov    BYTE PTR [ebp-0x8],bl
1001f584:	mov    BYTE PTR [ebp-0x7],0x0
1001f588:	inc    ecx
1001f589:	mov    eax,DWORD PTR [ebp-0x18]
1001f58c:	push   0x1
1001f58e:	push   DWORD PTR [eax+0x14]
1001f591:	push   DWORD PTR [eax+0x4]
1001f594:	lea    eax,[ebp-0x4]
1001f597:	push   eax
1001f598:	push   ecx
1001f599:	lea    eax,[ebp-0x8]
1001f59c:	push   eax
1001f59d:	lea    eax,[ebp-0x18]
1001f5a0:	push   0x1
1001f5a2:	push   eax
1001f5a3:	call   0x10020761
1001f5a8:	add    esp,0x20
1001f5ab:	test   eax,eax
1001f5ad:	jne    0x1001f5bf
1001f5af:	cmp    BYTE PTR [ebp-0xc],al
1001f5b2:	je     0x1001f5bb
1001f5b4:	mov    eax,DWORD PTR [ebp-0x10]
1001f5b7:	and    DWORD PTR [eax+0x70],0xfffffffd
1001f5bb:	xor    eax,eax
1001f5bd:	jmp    0x1001f5d3
1001f5bf:	movzx  eax,WORD PTR [ebp-0x4]
1001f5c3:	and    eax,DWORD PTR [ebp+0xc]
1001f5c6:	cmp    BYTE PTR [ebp-0xc],0x0
1001f5ca:	je     0x1001f5d3
1001f5cc:	mov    ecx,DWORD PTR [ebp-0x10]
1001f5cf:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001f5d3:	pop    ebx
1001f5d4:	leave  
1001f5d5:	ret    
1001f5d6:	push   ebp
1001f5d7:	lea    ebp,[esp-0x514]
1001f5de:	sub    esp,0x590
1001f5e4:	mov    eax,ds:0x10064694
1001f5e9:	xor    eax,ebp
1001f5eb:	mov    DWORD PTR [ebp+0x510],eax
1001f5f1:	mov    eax,DWORD PTR [ebp+0x520]
1001f5f7:	push   esi
1001f5f8:	xor    esi,esi
1001f5fa:	cmp    DWORD PTR [ebp+0x524],esi
1001f600:	mov    DWORD PTR [ebp-0x64],eax
1001f603:	mov    DWORD PTR [ebp-0x60],esi
1001f606:	mov    DWORD PTR [ebp-0x68],esi
1001f609:	jne    0x1001f612
1001f60b:	xor    eax,eax
1001f60d:	jmp    0x1001fbe2
1001f612:	cmp    eax,esi
1001f614:	jne    0x1001f63d
1001f616:	call   0x1001a011
1001f61b:	mov    DWORD PTR [eax],esi
1001f61d:	call   0x10019ffe
1001f622:	push   esi
1001f623:	push   esi
1001f624:	push   esi
1001f625:	push   esi
1001f626:	push   esi
1001f627:	mov    DWORD PTR [eax],0x16
1001f62d:	call   0x1001611f
1001f632:	add    esp,0x14
1001f635:	or     eax,0xffffffff
1001f638:	jmp    0x1001fbe2
1001f63d:	push   ebx
1001f63e:	push   edi
1001f63f:	mov    edi,DWORD PTR [ebp+0x51c]
1001f645:	mov    eax,edi
1001f647:	sar    eax,0x5
1001f64a:	lea    esi,[eax*4+0x10067f80]
1001f651:	mov    eax,DWORD PTR [esi]
1001f653:	and    edi,0x1f
1001f656:	shl    edi,0x6
1001f659:	add    eax,edi
1001f65b:	mov    bl,BYTE PTR [eax+0x24]
1001f65e:	add    bl,bl
1001f660:	sar    bl,1
1001f662:	cmp    bl,0x2
1001f665:	mov    DWORD PTR [ebp-0x70],esi
1001f668:	mov    BYTE PTR [ebp-0x71],bl
1001f66b:	je     0x1001f672
1001f66d:	cmp    bl,0x1
1001f670:	jne    0x1001f6a5
1001f672:	mov    ecx,DWORD PTR [ebp+0x524]
1001f678:	not    ecx
1001f67a:	test   cl,0x1
1001f67d:	jne    0x1001f6a5
1001f67f:	call   0x1001a011
1001f684:	xor    esi,esi
1001f686:	mov    DWORD PTR [eax],esi
1001f688:	call   0x10019ffe
1001f68d:	push   esi
1001f68e:	push   esi
1001f68f:	push   esi
1001f690:	push   esi
1001f691:	push   esi
1001f692:	mov    DWORD PTR [eax],0x16
1001f698:	call   0x1001611f
1001f69d:	add    esp,0x14
1001f6a0:	jmp    0x1001fbd5
1001f6a5:	test   BYTE PTR [eax+0x4],0x20
1001f6a9:	je     0x1001f6bf
1001f6ab:	push   0x2
1001f6ad:	push   0x0
1001f6af:	push   0x0
1001f6b1:	push   DWORD PTR [ebp+0x51c]
1001f6b7:	call   0x1001e229
1001f6bc:	add    esp,0x10
1001f6bf:	push   DWORD PTR [ebp+0x51c]
1001f6c5:	call   0x10021647
1001f6ca:	test   eax,eax
1001f6cc:	pop    ecx
1001f6cd:	je     0x1001f90c
1001f6d3:	mov    eax,DWORD PTR [esi]
1001f6d5:	test   BYTE PTR [edi+eax*1+0x4],0x80
1001f6da:	je     0x1001f90c
1001f6e0:	call   0x10019816
1001f6e5:	mov    eax,DWORD PTR [eax+0x6c]
1001f6e8:	xor    ecx,ecx
1001f6ea:	cmp    DWORD PTR [eax+0x14],ecx
1001f6ed:	lea    eax,[ebp-0x7c]
1001f6f0:	sete   cl
1001f6f3:	push   eax
1001f6f4:	mov    eax,DWORD PTR [esi]
1001f6f6:	push   DWORD PTR [edi+eax*1]
1001f6f9:	mov    DWORD PTR [ebp-0x78],ecx
1001f6fc:	call   DWORD PTR ds:0x1002c170
1001f702:	test   eax,eax
1001f704:	je     0x1001f90c
1001f70a:	xor    ecx,ecx
1001f70c:	cmp    DWORD PTR [ebp-0x78],ecx
1001f70f:	je     0x1001f719
1001f711:	test   bl,bl
1001f713:	je     0x1001f90e
1001f719:	call   DWORD PTR ds:0x1002c1a0
1001f71f:	mov    ebx,DWORD PTR [ebp-0x64]
1001f722:	mov    DWORD PTR [ebp-0x7c],eax
1001f725:	xor    eax,eax
1001f727:	cmp    DWORD PTR [ebp+0x524],eax
1001f72d:	mov    DWORD PTR [ebp-0x5c],eax
1001f730:	jbe    0x1001fb7d
1001f736:	mov    DWORD PTR [ebp-0x54],eax
1001f739:	mov    al,BYTE PTR [ebp-0x71]
1001f73c:	test   al,al
1001f73e:	jne    0x1001f881
1001f744:	mov    cl,BYTE PTR [ebx]
1001f746:	mov    esi,DWORD PTR [ebp-0x70]
1001f749:	xor    eax,eax
1001f74b:	cmp    cl,0xa
1001f74e:	sete   al
1001f751:	mov    DWORD PTR [ebp-0x78],eax
1001f754:	mov    eax,DWORD PTR [esi]
1001f756:	add    eax,edi
1001f758:	cmp    DWORD PTR [eax+0x38],0x0
1001f75c:	je     0x1001f77c
1001f75e:	mov    dl,BYTE PTR [eax+0x34]
1001f761:	mov    BYTE PTR [ebp+0x508],dl
1001f767:	mov    BYTE PTR [ebp+0x509],cl
1001f76d:	and    DWORD PTR [eax+0x38],0x0
1001f771:	push   0x2
1001f773:	lea    eax,[ebp+0x508]
1001f779:	push   eax
1001f77a:	jmp    0x1001f7c1
1001f77c:	movsx  eax,cl
1001f77f:	push   eax
1001f780:	call   0x1001701d
1001f785:	test   eax,eax
1001f787:	pop    ecx
1001f788:	je     0x1001f7be
1001f78a:	mov    ecx,DWORD PTR [ebp-0x64]
1001f78d:	sub    ecx,ebx
1001f78f:	add    ecx,DWORD PTR [ebp+0x524]
1001f795:	xor    eax,eax
1001f797:	inc    eax
1001f798:	cmp    ecx,eax
1001f79a:	jbe    0x1001f8f6
1001f7a0:	push   0x2
1001f7a2:	lea    eax,[ebp-0x58]
1001f7a5:	push   ebx
1001f7a6:	push   eax
1001f7a7:	call   0x100219ac
1001f7ac:	add    esp,0xc
1001f7af:	cmp    eax,0xffffffff
1001f7b2:	je     0x1001fb77
1001f7b8:	inc    ebx
1001f7b9:	inc    DWORD PTR [ebp-0x54]
1001f7bc:	jmp    0x1001f7d6
1001f7be:	push   0x1
1001f7c0:	push   ebx
1001f7c1:	lea    eax,[ebp-0x58]
1001f7c4:	push   eax
1001f7c5:	call   0x100219ac
1001f7ca:	add    esp,0xc
1001f7cd:	cmp    eax,0xffffffff
1001f7d0:	je     0x1001fb77
1001f7d6:	xor    eax,eax
1001f7d8:	push   eax
1001f7d9:	push   eax
1001f7da:	push   0x5
1001f7dc:	lea    ecx,[ebp+0x508]
1001f7e2:	push   ecx
1001f7e3:	push   0x1
1001f7e5:	lea    ecx,[ebp-0x58]
1001f7e8:	push   ecx
1001f7e9:	push   eax
1001f7ea:	push   DWORD PTR [ebp-0x7c]
1001f7ed:	inc    ebx
1001f7ee:	inc    DWORD PTR [ebp-0x54]
1001f7f1:	call   DWORD PTR ds:0x1002c02c
1001f7f7:	mov    esi,eax
1001f7f9:	test   esi,esi
1001f7fb:	je     0x1001fb77
1001f801:	push   0x0
1001f803:	lea    eax,[ebp-0x5c]
1001f806:	push   eax
1001f807:	push   esi
1001f808:	lea    eax,[ebp+0x508]
1001f80e:	push   eax
1001f80f:	mov    eax,DWORD PTR [ebp-0x70]
1001f812:	mov    eax,DWORD PTR [eax]
1001f814:	push   DWORD PTR [edi+eax*1]
1001f817:	call   DWORD PTR ds:0x1002c0ac
1001f81d:	test   eax,eax
1001f81f:	je     0x1001fb6e
1001f825:	mov    eax,DWORD PTR [ebp-0x54]
1001f828:	mov    ecx,DWORD PTR [ebp-0x68]
1001f82b:	add    eax,ecx
1001f82d:	cmp    DWORD PTR [ebp-0x5c],esi
1001f830:	mov    DWORD PTR [ebp-0x60],eax
1001f833:	jl     0x1001fb77
1001f839:	cmp    DWORD PTR [ebp-0x78],0x0
1001f83d:	je     0x1001f8e2
1001f843:	push   0x0
1001f845:	lea    eax,[ebp-0x5c]
1001f848:	push   eax
1001f849:	push   0x1
1001f84b:	lea    eax,[ebp+0x508]
1001f851:	push   eax
1001f852:	mov    eax,DWORD PTR [ebp-0x70]
1001f855:	mov    eax,DWORD PTR [eax]
1001f857:	mov    BYTE PTR [ebp+0x508],0xd
1001f85e:	push   DWORD PTR [edi+eax*1]
1001f861:	call   DWORD PTR ds:0x1002c0ac
1001f867:	test   eax,eax
1001f869:	je     0x1001fb6e
1001f86f:	cmp    DWORD PTR [ebp-0x5c],0x1
1001f873:	jl     0x1001fb77
1001f879:	inc    DWORD PTR [ebp-0x68]
1001f87c:	inc    DWORD PTR [ebp-0x60]
1001f87f:	jmp    0x1001f8e2
1001f881:	cmp    al,0x1
1001f883:	je     0x1001f889
1001f885:	cmp    al,0x2
1001f887:	jne    0x1001f8a1
1001f889:	movzx  esi,WORD PTR [ebx]
1001f88c:	xor    ecx,ecx
1001f88e:	cmp    si,0xa
1001f892:	sete   cl
1001f895:	inc    ebx
1001f896:	inc    ebx
1001f897:	add    DWORD PTR [ebp-0x54],0x2
1001f89b:	mov    DWORD PTR [ebp-0x58],esi
1001f89e:	mov    DWORD PTR [ebp-0x78],ecx
1001f8a1:	cmp    al,0x1
1001f8a3:	je     0x1001f8a9
1001f8a5:	cmp    al,0x2
1001f8a7:	jne    0x1001f8e2
1001f8a9:	push   DWORD PTR [ebp-0x58]
1001f8ac:	call   0x10021cbd
1001f8b1:	cmp    ax,WORD PTR [ebp-0x58]
1001f8b5:	pop    ecx
1001f8b6:	jne    0x1001fb6e
1001f8bc:	inc    DWORD PTR [ebp-0x60]
1001f8bf:	cmp    DWORD PTR [ebp-0x78],0x0
1001f8c3:	je     0x1001f8e2
1001f8c5:	push   0xd
1001f8c7:	pop    eax
1001f8c8:	push   eax
1001f8c9:	mov    DWORD PTR [ebp-0x58],eax
1001f8cc:	call   0x10021cbd
1001f8d1:	cmp    ax,WORD PTR [ebp-0x58]
1001f8d5:	pop    ecx
1001f8d6:	jne    0x1001fb6e
1001f8dc:	inc    DWORD PTR [ebp-0x60]
1001f8df:	inc    DWORD PTR [ebp-0x68]
1001f8e2:	mov    eax,DWORD PTR [ebp+0x524]
1001f8e8:	cmp    DWORD PTR [ebp-0x54],eax
1001f8eb:	jb     0x1001f739
1001f8f1:	jmp    0x1001fb77
1001f8f6:	mov    ecx,DWORD PTR [esi]
1001f8f8:	mov    dl,BYTE PTR [ebx]
1001f8fa:	inc    DWORD PTR [ebp-0x60]
1001f8fd:	mov    BYTE PTR [edi+ecx*1+0x34],dl
1001f901:	mov    ecx,DWORD PTR [esi]
1001f903:	mov    DWORD PTR [edi+ecx*1+0x38],eax
1001f907:	jmp    0x1001fb77
1001f90c:	xor    ecx,ecx
1001f90e:	mov    eax,DWORD PTR [esi]
1001f910:	add    eax,edi
1001f912:	test   BYTE PTR [eax+0x4],0x80
1001f916:	je     0x1001fb47
1001f91c:	test   bl,bl
1001f91e:	mov    eax,DWORD PTR [ebp-0x64]
1001f921:	mov    DWORD PTR [ebp-0x58],ecx
1001f924:	jne    0x1001f9c0
1001f92a:	cmp    DWORD PTR [ebp+0x524],ecx
1001f930:	mov    DWORD PTR [ebp-0x5c],eax
1001f933:	jbe    0x1001fbad
1001f939:	jmp    0x1001f93e
1001f93b:	mov    esi,DWORD PTR [ebp-0x70]
1001f93e:	mov    ecx,DWORD PTR [ebp-0x5c]
1001f941:	and    DWORD PTR [ebp-0x54],0x0
1001f945:	sub    ecx,DWORD PTR [ebp-0x64]
1001f948:	lea    eax,[ebp-0x50]
1001f94b:	cmp    ecx,DWORD PTR [ebp+0x524]
1001f951:	jae    0x1001f97a
1001f953:	mov    edx,DWORD PTR [ebp-0x5c]
1001f956:	inc    DWORD PTR [ebp-0x5c]
1001f959:	mov    dl,BYTE PTR [edx]
1001f95b:	inc    ecx
1001f95c:	cmp    dl,0xa
1001f95f:	jne    0x1001f96b
1001f961:	inc    DWORD PTR [ebp-0x68]
1001f964:	mov    BYTE PTR [eax],0xd
1001f967:	inc    eax
1001f968:	inc    DWORD PTR [ebp-0x54]
1001f96b:	mov    BYTE PTR [eax],dl
1001f96d:	inc    eax
1001f96e:	inc    DWORD PTR [ebp-0x54]
1001f971:	cmp    DWORD PTR [ebp-0x54],0x400
1001f978:	jb     0x1001f94b
1001f97a:	mov    ebx,eax
1001f97c:	lea    eax,[ebp-0x50]
1001f97f:	sub    ebx,eax
1001f981:	push   0x0
1001f983:	lea    eax,[ebp-0x6c]
1001f986:	push   eax
1001f987:	push   ebx
1001f988:	lea    eax,[ebp-0x50]
1001f98b:	push   eax
1001f98c:	mov    eax,DWORD PTR [esi]
1001f98e:	push   DWORD PTR [edi+eax*1]
1001f991:	call   DWORD PTR ds:0x1002c0ac
1001f997:	test   eax,eax
1001f999:	je     0x1001fb6e
1001f99f:	mov    eax,DWORD PTR [ebp-0x6c]
1001f9a2:	add    DWORD PTR [ebp-0x60],eax
1001f9a5:	cmp    eax,ebx
1001f9a7:	jl     0x1001fb77
1001f9ad:	mov    eax,DWORD PTR [ebp-0x5c]
1001f9b0:	sub    eax,DWORD PTR [ebp-0x64]
1001f9b3:	cmp    eax,DWORD PTR [ebp+0x524]
1001f9b9:	jb     0x1001f93b
1001f9bb:	jmp    0x1001fb77
1001f9c0:	cmp    bl,0x2
1001f9c3:	mov    DWORD PTR [ebp-0x54],eax
1001f9c6:	jne    0x1001fa6f
1001f9cc:	cmp    DWORD PTR [ebp+0x524],ecx
1001f9d2:	jbe    0x1001fbad
1001f9d8:	jmp    0x1001f9dd
1001f9da:	mov    esi,DWORD PTR [ebp-0x70]
1001f9dd:	mov    ecx,DWORD PTR [ebp-0x54]
1001f9e0:	and    DWORD PTR [ebp-0x5c],0x0
1001f9e4:	sub    ecx,DWORD PTR [ebp-0x64]
1001f9e7:	lea    eax,[ebp-0x50]
1001f9ea:	cmp    ecx,DWORD PTR [ebp+0x524]
1001f9f0:	jae    0x1001fa25
1001f9f2:	mov    edx,DWORD PTR [ebp-0x54]
1001f9f5:	add    DWORD PTR [ebp-0x54],0x2
1001f9f9:	movzx  edx,WORD PTR [edx]
1001f9fc:	inc    ecx
1001f9fd:	inc    ecx
1001f9fe:	cmp    dx,0xa
1001fa02:	jne    0x1001fa13
1001fa04:	add    DWORD PTR [ebp-0x68],0x2
1001fa08:	mov    WORD PTR [eax],0xd
1001fa0d:	inc    eax
1001fa0e:	inc    eax
1001fa0f:	add    DWORD PTR [ebp-0x5c],0x2
1001fa13:	add    DWORD PTR [ebp-0x5c],0x2
1001fa17:	mov    WORD PTR [eax],dx
1001fa1a:	inc    eax
1001fa1b:	inc    eax
1001fa1c:	cmp    DWORD PTR [ebp-0x5c],0x3ff
1001fa23:	jb     0x1001f9ea
1001fa25:	mov    ebx,eax
1001fa27:	lea    eax,[ebp-0x50]
1001fa2a:	sub    ebx,eax
1001fa2c:	push   0x0
1001fa2e:	lea    eax,[ebp-0x6c]
1001fa31:	push   eax
1001fa32:	push   ebx
1001fa33:	lea    eax,[ebp-0x50]
1001fa36:	push   eax
1001fa37:	mov    eax,DWORD PTR [esi]
1001fa39:	push   DWORD PTR [edi+eax*1]
1001fa3c:	call   DWORD PTR ds:0x1002c0ac
1001fa42:	test   eax,eax
1001fa44:	je     0x1001fb6e
1001fa4a:	mov    eax,DWORD PTR [ebp-0x6c]
1001fa4d:	add    DWORD PTR [ebp-0x60],eax
1001fa50:	cmp    eax,ebx
1001fa52:	jl     0x1001fb77
1001fa58:	mov    eax,DWORD PTR [ebp-0x54]
1001fa5b:	sub    eax,DWORD PTR [ebp-0x64]
1001fa5e:	cmp    eax,DWORD PTR [ebp+0x524]
1001fa64:	jb     0x1001f9da
1001fa6a:	jmp    0x1001fb77
1001fa6f:	cmp    DWORD PTR [ebp+0x524],ecx
1001fa75:	jbe    0x1001fbad
1001fa7b:	mov    ecx,DWORD PTR [ebp-0x54]
1001fa7e:	and    DWORD PTR [ebp-0x5c],0x0
1001fa82:	sub    ecx,DWORD PTR [ebp-0x64]
1001fa85:	push   0x2
1001fa87:	lea    eax,[ebp+0x3b4]
1001fa8d:	pop    esi
1001fa8e:	cmp    ecx,DWORD PTR [ebp+0x524]
1001fa94:	jae    0x1001fac2
1001fa96:	mov    edx,DWORD PTR [ebp-0x54]
1001fa99:	movzx  edx,WORD PTR [edx]
1001fa9c:	add    DWORD PTR [ebp-0x54],esi
1001fa9f:	add    ecx,esi
1001faa1:	cmp    dx,0xa
1001faa5:	jne    0x1001fab1
1001faa7:	mov    WORD PTR [eax],0xd
1001faac:	add    eax,esi
1001faae:	add    DWORD PTR [ebp-0x5c],esi
1001fab1:	add    DWORD PTR [ebp-0x5c],esi
1001fab4:	mov    WORD PTR [eax],dx
1001fab7:	add    eax,esi
1001fab9:	cmp    DWORD PTR [ebp-0x5c],0x152
1001fac0:	jb     0x1001fa8e
1001fac2:	xor    esi,esi
1001fac4:	push   esi
1001fac5:	push   esi
1001fac6:	push   0x2ab
1001facb:	lea    ecx,[ebp+0x104]
1001fad1:	push   ecx
1001fad2:	lea    ecx,[ebp+0x3b4]
1001fad8:	sub    eax,ecx
1001fada:	cdq    
1001fadb:	sub    eax,edx
1001fadd:	sar    eax,1
1001fadf:	push   eax
1001fae0:	mov    eax,ecx
1001fae2:	push   eax
1001fae3:	push   esi
1001fae4:	push   0xfde9
1001fae9:	call   DWORD PTR ds:0x1002c02c
1001faef:	mov    ebx,eax
1001faf1:	cmp    ebx,esi
1001faf3:	je     0x1001fb6e
1001faf5:	push   0x0
1001faf7:	lea    eax,[ebp-0x6c]
1001fafa:	push   eax
1001fafb:	mov    eax,ebx
1001fafd:	sub    eax,esi
1001faff:	push   eax
1001fb00:	lea    eax,[ebp+esi*1+0x104]
1001fb07:	push   eax
1001fb08:	mov    eax,DWORD PTR [ebp-0x70]
1001fb0b:	mov    eax,DWORD PTR [eax]
1001fb0d:	push   DWORD PTR [edi+eax*1]
1001fb10:	call   DWORD PTR ds:0x1002c0ac
1001fb16:	test   eax,eax
1001fb18:	je     0x1001fb23
1001fb1a:	add    esi,DWORD PTR [ebp-0x6c]
1001fb1d:	cmp    ebx,esi
1001fb1f:	jg     0x1001faf5
1001fb21:	jmp    0x1001fb2c
1001fb23:	call   DWORD PTR ds:0x1002c07c
1001fb29:	mov    DWORD PTR [ebp-0x58],eax
1001fb2c:	cmp    ebx,esi
1001fb2e:	jg     0x1001fb77
1001fb30:	mov    eax,DWORD PTR [ebp-0x54]
1001fb33:	sub    eax,DWORD PTR [ebp-0x64]
1001fb36:	cmp    eax,DWORD PTR [ebp+0x524]
1001fb3c:	mov    DWORD PTR [ebp-0x60],eax
1001fb3f:	jb     0x1001fa7b
1001fb45:	jmp    0x1001fb77
1001fb47:	push   0x0
1001fb49:	lea    ecx,[ebp-0x6c]
1001fb4c:	push   ecx
1001fb4d:	push   DWORD PTR [ebp+0x524]
1001fb53:	push   DWORD PTR [ebp-0x64]
1001fb56:	push   DWORD PTR [eax]
1001fb58:	call   DWORD PTR ds:0x1002c0ac
1001fb5e:	test   eax,eax
1001fb60:	je     0x1001fb6e
1001fb62:	mov    eax,DWORD PTR [ebp-0x6c]
1001fb65:	and    DWORD PTR [ebp-0x58],0x0
1001fb69:	mov    DWORD PTR [ebp-0x60],eax
1001fb6c:	jmp    0x1001fb77
1001fb6e:	call   DWORD PTR ds:0x1002c07c
1001fb74:	mov    DWORD PTR [ebp-0x58],eax
1001fb77:	cmp    DWORD PTR [ebp-0x60],0x0
1001fb7b:	jne    0x1001fbda
1001fb7d:	cmp    DWORD PTR [ebp-0x58],0x0
1001fb81:	je     0x1001fbaa
1001fb83:	push   0x5
1001fb85:	pop    esi
1001fb86:	cmp    DWORD PTR [ebp-0x58],esi
1001fb89:	jne    0x1001fb9f
1001fb8b:	call   0x10019ffe
1001fb90:	mov    DWORD PTR [eax],0x9
1001fb96:	call   0x1001a011
1001fb9b:	mov    DWORD PTR [eax],esi
1001fb9d:	jmp    0x1001fbd5
1001fb9f:	push   DWORD PTR [ebp-0x58]
1001fba2:	call   0x1001a024
1001fba7:	pop    ecx
1001fba8:	jmp    0x1001fbd5
1001fbaa:	mov    esi,DWORD PTR [ebp-0x70]
1001fbad:	mov    eax,DWORD PTR [esi]
1001fbaf:	test   BYTE PTR [edi+eax*1+0x4],0x40
1001fbb4:	je     0x1001fbc2
1001fbb6:	mov    eax,DWORD PTR [ebp-0x64]
1001fbb9:	cmp    BYTE PTR [eax],0x1a
1001fbbc:	jne    0x1001fbc2
1001fbbe:	xor    eax,eax
1001fbc0:	jmp    0x1001fbe0
1001fbc2:	call   0x10019ffe
1001fbc7:	mov    DWORD PTR [eax],0x1c
1001fbcd:	call   0x1001a011
1001fbd2:	and    DWORD PTR [eax],0x0
1001fbd5:	or     eax,0xffffffff
1001fbd8:	jmp    0x1001fbe0
1001fbda:	mov    eax,DWORD PTR [ebp-0x60]
1001fbdd:	sub    eax,DWORD PTR [ebp-0x68]
1001fbe0:	pop    edi
1001fbe1:	pop    ebx
1001fbe2:	mov    ecx,DWORD PTR [ebp+0x510]
1001fbe8:	xor    ecx,ebp
1001fbea:	pop    esi
1001fbeb:	call   0x10015adb
1001fbf0:	add    ebp,0x514
1001fbf6:	leave  
1001fbf7:	ret    
1001fbf8:	push   0x10
1001fbfa:	push   0x100588b0
1001fbff:	call   0x10017a38
1001fc04:	mov    eax,DWORD PTR [ebp+0x8]
1001fc07:	cmp    eax,0xfffffffe
1001fc0a:	jne    0x1001fc27
1001fc0c:	call   0x1001a011
1001fc11:	and    DWORD PTR [eax],0x0
1001fc14:	call   0x10019ffe
1001fc19:	mov    DWORD PTR [eax],0x9
1001fc1f:	or     eax,0xffffffff
1001fc22:	jmp    0x1001fcc4
1001fc27:	xor    edi,edi
1001fc29:	cmp    eax,edi
1001fc2b:	jl     0x1001fc35
1001fc2d:	cmp    eax,DWORD PTR ds:0x10067f64
1001fc33:	jb     0x1001fc56
1001fc35:	call   0x1001a011
1001fc3a:	mov    DWORD PTR [eax],edi
1001fc3c:	call   0x10019ffe
1001fc41:	mov    DWORD PTR [eax],0x9
1001fc47:	push   edi
1001fc48:	push   edi
1001fc49:	push   edi
1001fc4a:	push   edi
1001fc4b:	push   edi
1001fc4c:	call   0x1001611f
1001fc51:	add    esp,0x14
1001fc54:	jmp    0x1001fc1f
1001fc56:	mov    ecx,eax
1001fc58:	sar    ecx,0x5
1001fc5b:	lea    ebx,[ecx*4+0x10067f80]
1001fc62:	mov    esi,eax
1001fc64:	and    esi,0x1f
1001fc67:	shl    esi,0x6
1001fc6a:	mov    ecx,DWORD PTR [ebx]
1001fc6c:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1001fc71:	and    ecx,0x1
1001fc74:	je     0x1001fc35
1001fc76:	push   eax
1001fc77:	call   0x1001e4b7
1001fc7c:	pop    ecx
1001fc7d:	mov    DWORD PTR [ebp-0x4],edi
1001fc80:	mov    eax,DWORD PTR [ebx]
1001fc82:	test   BYTE PTR [eax+esi*1+0x4],0x1
1001fc87:	je     0x1001fc9f
1001fc89:	push   DWORD PTR [ebp+0x10]
1001fc8c:	push   DWORD PTR [ebp+0xc]
1001fc8f:	push   DWORD PTR [ebp+0x8]
1001fc92:	call   0x1001f5d6
1001fc97:	add    esp,0xc
1001fc9a:	mov    DWORD PTR [ebp-0x1c],eax
1001fc9d:	jmp    0x1001fcb5
1001fc9f:	call   0x10019ffe
1001fca4:	mov    DWORD PTR [eax],0x9
1001fcaa:	call   0x1001a011
1001fcaf:	mov    DWORD PTR [eax],edi
1001fcb1:	or     DWORD PTR [ebp-0x1c],0xffffffff
1001fcb5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001fcbc:	call   0x1001fcca
1001fcc1:	mov    eax,DWORD PTR [ebp-0x1c]
1001fcc4:	call   0x10017a7d
1001fcc9:	ret    
1001fcca:	push   DWORD PTR [ebp+0x8]
1001fccd:	call   0x1001e557
1001fcd2:	pop    ecx
1001fcd3:	ret    
1001fcd4:	int3   
1001fcd5:	int3   
1001fcd6:	int3   
1001fcd7:	int3   
1001fcd8:	int3   
1001fcd9:	int3   
1001fcda:	int3   
1001fcdb:	int3   
1001fcdc:	int3   
1001fcdd:	int3   
1001fcde:	int3   
1001fcdf:	int3   
1001fce0:	push   ebp
1001fce1:	mov    ebp,esp
1001fce3:	push   edi
1001fce4:	mov    edi,DWORD PTR [ebp+0x8]
1001fce7:	xor    eax,eax
1001fce9:	or     ecx,0xffffffff
1001fcec:	repnz scas al,BYTE PTR es:[edi]
1001fcee:	add    ecx,0x1
1001fcf1:	neg    ecx
1001fcf3:	sub    edi,0x1
1001fcf6:	mov    al,BYTE PTR [ebp+0xc]
1001fcf9:	std    
1001fcfa:	repnz scas al,BYTE PTR es:[edi]
1001fcfc:	add    edi,0x1
1001fcff:	cmp    BYTE PTR [edi],al
1001fd01:	je     0x1001fd07
1001fd03:	xor    eax,eax
1001fd05:	jmp    0x1001fd09
1001fd07:	mov    eax,edi
1001fd09:	cld    
1001fd0a:	pop    edi
1001fd0b:	leave  
1001fd0c:	ret    
1001fd0d:	ret    
1001fd0e:	mov    eax,0x10023290
1001fd13:	mov    ds:0x10065600,eax
1001fd18:	mov    DWORD PTR ds:0x10065604,0x1002298c
1001fd22:	mov    DWORD PTR ds:0x10065608,0x1002294a
1001fd2c:	mov    DWORD PTR ds:0x1006560c,0x1002297e
1001fd36:	mov    DWORD PTR ds:0x10065610,0x100228f4
1001fd40:	mov    ds:0x10065614,eax
1001fd45:	mov    DWORD PTR ds:0x10065618,0x1002320a
1001fd4f:	mov    DWORD PTR ds:0x1006561c,0x1002290a
1001fd59:	mov    DWORD PTR ds:0x10065620,0x10022874
1001fd63:	mov    DWORD PTR ds:0x10065624,0x10022803
1001fd6d:	ret    
1001fd6e:	call   0x1001fd0e
1001fd73:	call   0x10023316
1001fd78:	cmp    DWORD PTR [esp+0x4],0x0
1001fd7d:	mov    ds:0x10066c58,eax
1001fd82:	je     0x1001fd89
1001fd84:	call   0x100232b1
1001fd89:	fnclex 
1001fd8b:	ret    
1001fd8c:	push   ebp
1001fd8d:	mov    ebp,esp
1001fd8f:	sub    esp,0x10
1001fd92:	mov    eax,ds:0x10064694
1001fd97:	xor    eax,ebp
1001fd99:	mov    DWORD PTR [ebp-0x4],eax
1001fd9c:	push   ebx
1001fd9d:	push   esi
1001fd9e:	mov    esi,DWORD PTR ds:0x1002c210
1001fda4:	xor    ebx,ebx
1001fda6:	cmp    DWORD PTR ds:0x10066c5c,ebx
1001fdac:	push   edi
1001fdad:	mov    edi,ecx
1001fdaf:	jne    0x1001fde7
1001fdb1:	push   ebx
1001fdb2:	push   ebx
1001fdb3:	push   0x1
1001fdb5:	push   0x10057130
1001fdba:	push   0x100
1001fdbf:	push   ebx
1001fdc0:	call   esi
1001fdc2:	test   eax,eax
1001fdc4:	je     0x1001fdd2
1001fdc6:	mov    DWORD PTR ds:0x10066c5c,0x1
1001fdd0:	jmp    0x1001fde7
1001fdd2:	call   DWORD PTR ds:0x1002c07c
1001fdd8:	cmp    eax,0x78
1001fddb:	jne    0x1001fde7
1001fddd:	mov    DWORD PTR ds:0x10066c5c,0x2
1001fde7:	cmp    DWORD PTR [ebp+0x14],ebx
1001fdea:	jle    0x1001fe09
1001fdec:	mov    ecx,DWORD PTR [ebp+0x14]
1001fdef:	mov    eax,DWORD PTR [ebp+0x10]
1001fdf2:	dec    ecx
1001fdf3:	cmp    WORD PTR [eax],bx
1001fdf6:	je     0x1001fe01
1001fdf8:	inc    eax
1001fdf9:	inc    eax
1001fdfa:	cmp    ecx,ebx
1001fdfc:	jne    0x1001fdf2
1001fdfe:	or     ecx,0xffffffff
1001fe01:	or     eax,0xffffffff
1001fe04:	sub    eax,ecx
1001fe06:	add    DWORD PTR [ebp+0x14],eax
1001fe09:	mov    eax,ds:0x10066c5c
1001fe0e:	cmp    eax,0x1
1001fe11:	jne    0x1001fe2c
1001fe13:	push   DWORD PTR [ebp+0x1c]
1001fe16:	push   DWORD PTR [ebp+0x18]
1001fe19:	push   DWORD PTR [ebp+0x14]
1001fe1c:	push   DWORD PTR [ebp+0x10]
1001fe1f:	push   DWORD PTR [ebp+0xc]
1001fe22:	push   DWORD PTR [ebp+0x8]
1001fe25:	call   esi
1001fe27:	jmp    0x1001ffdb
1001fe2c:	cmp    eax,0x2
1001fe2f:	je     0x1001fe35
1001fe31:	cmp    eax,ebx
1001fe33:	jne    0x1001fe87
1001fe35:	cmp    DWORD PTR [ebp+0x8],ebx
1001fe38:	mov    DWORD PTR [ebp-0xc],ebx
1001fe3b:	jne    0x1001fe45
1001fe3d:	mov    eax,DWORD PTR [edi]
1001fe3f:	mov    eax,DWORD PTR [eax+0x14]
1001fe42:	mov    DWORD PTR [ebp+0x8],eax
1001fe45:	cmp    DWORD PTR [ebp+0x20],ebx
1001fe48:	jne    0x1001fe52
1001fe4a:	mov    eax,DWORD PTR [edi]
1001fe4c:	mov    eax,DWORD PTR [eax+0x4]
1001fe4f:	mov    DWORD PTR [ebp+0x20],eax
1001fe52:	push   DWORD PTR [ebp+0x8]
1001fe55:	call   0x100207f0
1001fe5a:	cmp    DWORD PTR [ebp+0x20],eax
1001fe5d:	pop    ecx
1001fe5e:	je     0x1001fe68
1001fe60:	cmp    eax,0xffffffff
1001fe63:	je     0x1001fe68
1001fe65:	mov    DWORD PTR [ebp+0x20],eax
1001fe68:	mov    esi,DWORD PTR ds:0x1002c02c
1001fe6e:	push   ebx
1001fe6f:	push   ebx
1001fe70:	push   ebx
1001fe71:	push   ebx
1001fe72:	push   DWORD PTR [ebp+0x14]
1001fe75:	push   DWORD PTR [ebp+0x10]
1001fe78:	push   ebx
1001fe79:	push   DWORD PTR [ebp+0x20]
1001fe7c:	call   esi
1001fe7e:	mov    edi,eax
1001fe80:	cmp    edi,ebx
1001fe82:	mov    DWORD PTR [ebp-0x10],edi
1001fe85:	jne    0x1001fe8e
1001fe87:	xor    eax,eax
1001fe89:	jmp    0x1001ffdb
1001fe8e:	jle    0x1001fed2
1001fe90:	push   0xffffffe0
1001fe92:	xor    edx,edx
1001fe94:	pop    eax
1001fe95:	div    edi
1001fe97:	cmp    eax,0x1
1001fe9a:	jb     0x1001fed2
1001fe9c:	lea    eax,[edi+0x8]
1001fe9f:	cmp    eax,0x400
1001fea4:	ja     0x1001feb9
1001fea6:	call   0x10015af0
1001feab:	mov    eax,esp
1001fead:	cmp    eax,ebx
1001feaf:	je     0x1001fecd
1001feb1:	mov    DWORD PTR [eax],0xcccc
1001feb7:	jmp    0x1001feca
1001feb9:	push   eax
1001feba:	call   0x10016c12
1001febf:	cmp    eax,ebx
1001fec1:	pop    ecx
1001fec2:	je     0x1001fecd
1001fec4:	mov    DWORD PTR [eax],0xdddd
1001feca:	add    eax,0x8
1001fecd:	mov    DWORD PTR [ebp-0x8],eax
1001fed0:	jmp    0x1001fed5
1001fed2:	mov    DWORD PTR [ebp-0x8],ebx
1001fed5:	cmp    DWORD PTR [ebp-0x8],ebx
1001fed8:	je     0x1001fe87
1001feda:	push   ebx
1001fedb:	push   ebx
1001fedc:	push   edi
1001fedd:	push   DWORD PTR [ebp-0x8]
1001fee0:	push   DWORD PTR [ebp+0x14]
1001fee3:	push   DWORD PTR [ebp+0x10]
1001fee6:	push   ebx
1001fee7:	push   DWORD PTR [ebp+0x20]
1001feea:	call   esi
1001feec:	test   eax,eax
1001feee:	je     0x1001ffcf
1001fef4:	push   ebx
1001fef5:	push   ebx
1001fef6:	push   edi
1001fef7:	push   DWORD PTR [ebp-0x8]
1001fefa:	mov    edi,DWORD PTR ds:0x1002c20c
1001ff00:	push   DWORD PTR [ebp+0xc]
1001ff03:	push   DWORD PTR [ebp+0x8]
1001ff06:	call   edi
1001ff08:	mov    esi,eax
1001ff0a:	cmp    esi,ebx
1001ff0c:	je     0x1001ffcf
1001ff12:	jle    0x1001ff53
1001ff14:	push   0xffffffe0
1001ff16:	xor    edx,edx
1001ff18:	pop    eax
1001ff19:	div    esi
1001ff1b:	cmp    eax,0x1
1001ff1e:	jb     0x1001ff53
1001ff20:	lea    eax,[esi+0x8]
1001ff23:	cmp    eax,0x400
1001ff28:	ja     0x1001ff3d
1001ff2a:	call   0x10015af0
1001ff2f:	mov    eax,esp
1001ff31:	cmp    eax,ebx
1001ff33:	je     0x1001ff51
1001ff35:	mov    DWORD PTR [eax],0xcccc
1001ff3b:	jmp    0x1001ff4e
1001ff3d:	push   eax
1001ff3e:	call   0x10016c12
1001ff43:	cmp    eax,ebx
1001ff45:	pop    ecx
1001ff46:	je     0x1001ff51
1001ff48:	mov    DWORD PTR [eax],0xdddd
1001ff4e:	add    eax,0x8
1001ff51:	mov    ebx,eax
1001ff53:	test   ebx,ebx
1001ff55:	je     0x1001ffcf
1001ff57:	push   esi
1001ff58:	push   ebx
1001ff59:	push   DWORD PTR [ebp-0x10]
1001ff5c:	push   DWORD PTR [ebp-0x8]
1001ff5f:	push   DWORD PTR [ebp+0xc]
1001ff62:	push   DWORD PTR [ebp+0x8]
1001ff65:	call   edi
1001ff67:	test   eax,eax
1001ff69:	je     0x1001ffc8
1001ff6b:	test   WORD PTR [ebp+0xc],0x400
1001ff71:	je     0x1001ffa7
1001ff73:	mov    eax,DWORD PTR [ebp+0x1c]
1001ff76:	xor    edi,edi
1001ff78:	cmp    eax,edi
1001ff7a:	mov    DWORD PTR [ebp-0xc],esi
1001ff7d:	je     0x1001ffc8
1001ff7f:	cmp    eax,esi
1001ff81:	jg     0x1001ff86
1001ff83:	lea    esi,[eax-0x1]
1001ff86:	push   esi
1001ff87:	push   ebx
1001ff88:	push   eax
1001ff89:	push   DWORD PTR [ebp+0x18]
1001ff8c:	call   0x100204f6
1001ff91:	add    esp,0x10
1001ff94:	test   eax,eax
1001ff96:	je     0x1001ffc8
1001ff98:	push   edi
1001ff99:	push   edi
1001ff9a:	push   edi
1001ff9b:	push   edi
1001ff9c:	push   edi
1001ff9d:	call   0x10016023
1001ffa2:	add    esp,0x14
1001ffa5:	jmp    0x1001ffc8
1001ffa7:	xor    eax,eax
1001ffa9:	cmp    DWORD PTR [ebp+0x1c],eax
1001ffac:	jne    0x1001ffb2
1001ffae:	push   eax
1001ffaf:	push   eax
1001ffb0:	jmp    0x1001ffb8
1001ffb2:	push   DWORD PTR [ebp+0x1c]
1001ffb5:	push   DWORD PTR [ebp+0x18]
1001ffb8:	push   esi
1001ffb9:	push   ebx
1001ffba:	push   0x1
1001ffbc:	push   DWORD PTR [ebp+0x20]
1001ffbf:	call   DWORD PTR ds:0x1002c080
1001ffc5:	mov    DWORD PTR [ebp-0xc],eax
1001ffc8:	push   ebx
1001ffc9:	call   0x10017a1c
1001ffce:	pop    ecx
1001ffcf:	push   DWORD PTR [ebp-0x8]
1001ffd2:	call   0x10017a1c
1001ffd7:	mov    eax,DWORD PTR [ebp-0xc]
1001ffda:	pop    ecx
1001ffdb:	lea    esp,[ebp-0x1c]
1001ffde:	pop    edi
1001ffdf:	pop    esi
1001ffe0:	pop    ebx
1001ffe1:	mov    ecx,DWORD PTR [ebp-0x4]
1001ffe4:	xor    ecx,ebp
1001ffe6:	call   0x10015adb
1001ffeb:	leave  
1001ffec:	ret    
1001ffed:	push   ebp
1001ffee:	mov    ebp,esp
1001fff0:	sub    esp,0x10
1001fff3:	push   DWORD PTR [ebp+0x8]
1001fff6:	lea    ecx,[ebp-0x10]
1001fff9:	call   0x100165aa
1001fffe:	push   DWORD PTR [ebp+0x24]
10020001:	lea    ecx,[ebp-0x10]
10020004:	push   DWORD PTR [ebp+0x20]
10020007:	push   DWORD PTR [ebp+0x1c]
1002000a:	push   DWORD PTR [ebp+0x18]
1002000d:	push   DWORD PTR [ebp+0x14]
10020010:	push   DWORD PTR [ebp+0x10]
10020013:	push   DWORD PTR [ebp+0xc]
10020016:	call   0x1001fd8c
1002001b:	add    esp,0x1c
1002001e:	cmp    BYTE PTR [ebp-0x4],0x0
10020022:	je     0x1002002b
10020024:	mov    ecx,DWORD PTR [ebp-0x8]
10020027:	and    DWORD PTR [ecx+0x70],0xfffffffd
1002002b:	leave  
1002002c:	ret    
1002002d:	push   ebp
1002002e:	mov    ebp,esp
10020030:	sub    esp,0x10
10020033:	push   DWORD PTR [ebp+0x8]
10020036:	lea    ecx,[ebp-0x10]
10020039:	call   0x100165aa
1002003e:	movzx  eax,BYTE PTR [ebp+0xc]
10020042:	mov    ecx,DWORD PTR [ebp-0xc]
10020045:	mov    dl,BYTE PTR [ebp+0x14]
10020048:	test   BYTE PTR [ecx+eax*1+0x1d],dl
1002004c:	jne    0x1002006c
1002004e:	cmp    DWORD PTR [ebp+0x10],0x0
10020052:	je     0x10020066
10020054:	mov    ecx,DWORD PTR [ebp-0x10]
10020057:	mov    ecx,DWORD PTR [ecx+0xc8]
1002005d:	movzx  eax,WORD PTR [ecx+eax*2]
10020061:	and    eax,DWORD PTR [ebp+0x10]
10020064:	jmp    0x10020068
10020066:	xor    eax,eax
10020068:	test   eax,eax
1002006a:	je     0x1002006f
1002006c:	xor    eax,eax
1002006e:	inc    eax
1002006f:	cmp    BYTE PTR [ebp-0x4],0x0
10020073:	je     0x1002007c
10020075:	mov    ecx,DWORD PTR [ebp-0x8]
10020078:	and    DWORD PTR [ecx+0x70],0xfffffffd
1002007c:	leave  
1002007d:	ret    
1002007e:	push   0x4
10020080:	push   0x0
10020082:	push   DWORD PTR [esp+0xc]
10020086:	push   0x0
10020088:	call   0x1002002d
1002008d:	add    esp,0x10
10020090:	ret    
10020091:	int3   
10020092:	int3   
10020093:	int3   
10020094:	int3   
10020095:	int3   
10020096:	int3   
10020097:	int3   
10020098:	int3   
10020099:	int3   
1002009a:	int3   
1002009b:	int3   
1002009c:	int3   
1002009d:	int3   
1002009e:	int3   
1002009f:	int3   
100200a0:	mov    ecx,DWORD PTR [esp+0x4]
100200a4:	cmp    WORD PTR [ecx],0x5a4d
100200a9:	je     0x100200ae
100200ab:	xor    eax,eax
100200ad:	ret    
100200ae:	mov    eax,DWORD PTR [ecx+0x3c]
100200b1:	add    eax,ecx
100200b3:	cmp    DWORD PTR [eax],0x4550
100200b9:	jne    0x100200ab
100200bb:	xor    ecx,ecx
100200bd:	cmp    WORD PTR [eax+0x18],0x10b
100200c3:	sete   cl
100200c6:	mov    eax,ecx
100200c8:	ret    
100200c9:	int3   
100200ca:	int3   
100200cb:	int3   
100200cc:	int3   
100200cd:	int3   
100200ce:	int3   
100200cf:	int3   
100200d0:	mov    eax,DWORD PTR [esp+0x4]
100200d4:	mov    ecx,DWORD PTR [eax+0x3c]
100200d7:	add    ecx,eax
100200d9:	movzx  eax,WORD PTR [ecx+0x14]
100200dd:	push   ebx
100200de:	push   esi
100200df:	movzx  esi,WORD PTR [ecx+0x6]
100200e3:	xor    edx,edx
100200e5:	test   esi,esi
100200e7:	push   edi
100200e8:	lea    eax,[eax+ecx*1+0x18]
100200ec:	jbe    0x1002010c
100200ee:	mov    edi,DWORD PTR [esp+0x14]
100200f2:	mov    ecx,DWORD PTR [eax+0xc]
100200f5:	cmp    edi,ecx
100200f7:	jb     0x10020102
100200f9:	mov    ebx,DWORD PTR [eax+0x8]
100200fc:	add    ebx,ecx
100200fe:	cmp    edi,ebx
10020100:	jb     0x1002010e
10020102:	add    edx,0x1
10020105:	add    eax,0x28
10020108:	cmp    edx,esi
1002010a:	jb     0x100200f2
1002010c:	xor    eax,eax
1002010e:	pop    edi
1002010f:	pop    esi
10020110:	pop    ebx
10020111:	ret    
10020112:	int3   
10020113:	int3   
10020114:	int3   
10020115:	int3   
10020116:	int3   
10020117:	int3   
10020118:	int3   
10020119:	int3   
1002011a:	int3   
1002011b:	int3   
1002011c:	int3   
1002011d:	int3   
1002011e:	int3   
1002011f:	int3   
10020120:	push   ebp
10020121:	mov    ebp,esp
10020123:	push   0xfffffffe
10020125:	push   0x100588d0
1002012a:	push   0x10017aa0
1002012f:	mov    eax,fs:0x0
10020135:	push   eax
10020136:	sub    esp,0x8
10020139:	push   ebx
1002013a:	push   esi
1002013b:	push   edi
1002013c:	mov    eax,ds:0x10064694
10020141:	xor    DWORD PTR [ebp-0x8],eax
10020144:	xor    eax,ebp
10020146:	push   eax
10020147:	lea    eax,[ebp-0x10]
1002014a:	mov    fs:0x0,eax
10020150:	mov    DWORD PTR [ebp-0x18],esp
10020153:	mov    DWORD PTR [ebp-0x4],0x0
1002015a:	push   0x10000000
1002015f:	call   0x100200a0
10020164:	add    esp,0x4
10020167:	test   eax,eax
10020169:	je     0x100201c0
1002016b:	mov    eax,DWORD PTR [ebp+0x8]
1002016e:	sub    eax,0x10000000
10020173:	push   eax
10020174:	push   0x10000000
10020179:	call   0x100200d0
1002017e:	add    esp,0x8
10020181:	test   eax,eax
10020183:	je     0x100201c0
10020185:	mov    eax,DWORD PTR [eax+0x24]
10020188:	shr    eax,0x1f
1002018b:	not    eax
1002018d:	and    eax,0x1
10020190:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10020197:	mov    ecx,DWORD PTR [ebp-0x10]
1002019a:	mov    DWORD PTR fs:0x0,ecx
100201a1:	pop    ecx
100201a2:	pop    edi
100201a3:	pop    esi
100201a4:	pop    ebx
100201a5:	mov    esp,ebp
100201a7:	pop    ebp
100201a8:	ret    
100201a9:	mov    eax,DWORD PTR [ebp-0x14]
100201ac:	mov    ecx,DWORD PTR [eax]
100201ae:	mov    eax,DWORD PTR [ecx]
100201b0:	xor    edx,edx
100201b2:	cmp    eax,0xc0000005
100201b7:	sete   dl
100201ba:	mov    eax,edx
100201bc:	ret    
100201bd:	mov    esp,DWORD PTR [ebp-0x18]
100201c0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100201c7:	xor    eax,eax
100201c9:	mov    ecx,DWORD PTR [ebp-0x10]
100201cc:	mov    DWORD PTR fs:0x0,ecx
100201d3:	pop    ecx
100201d4:	pop    edi
100201d5:	pop    esi
100201d6:	pop    ebx
100201d7:	mov    esp,ebp
100201d9:	pop    ebp
100201da:	ret    
100201db:	push   esi
100201dc:	mov    esi,DWORD PTR [esp+0x8]
100201e0:	test   esi,esi
100201e2:	je     0x10020369
100201e8:	push   DWORD PTR [esi+0x4]
100201eb:	call   0x10016b35
100201f0:	push   DWORD PTR [esi+0x8]
100201f3:	call   0x10016b35
100201f8:	push   DWORD PTR [esi+0xc]
100201fb:	call   0x10016b35
10020200:	push   DWORD PTR [esi+0x10]
10020203:	call   0x10016b35
10020208:	push   DWORD PTR [esi+0x14]
1002020b:	call   0x10016b35
10020210:	push   DWORD PTR [esi+0x18]
10020213:	call   0x10016b35
10020218:	push   DWORD PTR [esi]
1002021a:	call   0x10016b35
1002021f:	push   DWORD PTR [esi+0x20]
10020222:	call   0x10016b35
10020227:	push   DWORD PTR [esi+0x24]
1002022a:	call   0x10016b35
1002022f:	push   DWORD PTR [esi+0x28]
10020232:	call   0x10016b35
10020237:	push   DWORD PTR [esi+0x2c]
1002023a:	call   0x10016b35
1002023f:	push   DWORD PTR [esi+0x30]
10020242:	call   0x10016b35
10020247:	push   DWORD PTR [esi+0x34]
1002024a:	call   0x10016b35
1002024f:	push   DWORD PTR [esi+0x1c]
10020252:	call   0x10016b35
10020257:	push   DWORD PTR [esi+0x38]
1002025a:	call   0x10016b35
1002025f:	push   DWORD PTR [esi+0x3c]
10020262:	call   0x10016b35
10020267:	add    esp,0x40
1002026a:	push   DWORD PTR [esi+0x40]
1002026d:	call   0x10016b35
10020272:	push   DWORD PTR [esi+0x44]
10020275:	call   0x10016b35
1002027a:	push   DWORD PTR [esi+0x48]
1002027d:	call   0x10016b35
10020282:	push   DWORD PTR [esi+0x4c]
10020285:	call   0x10016b35
1002028a:	push   DWORD PTR [esi+0x50]
1002028d:	call   0x10016b35
10020292:	push   DWORD PTR [esi+0x54]
10020295:	call   0x10016b35
1002029a:	push   DWORD PTR [esi+0x58]
1002029d:	call   0x10016b35
100202a2:	push   DWORD PTR [esi+0x5c]
100202a5:	call   0x10016b35
100202aa:	push   DWORD PTR [esi+0x60]
100202ad:	call   0x10016b35
100202b2:	push   DWORD PTR [esi+0x64]
100202b5:	call   0x10016b35
100202ba:	push   DWORD PTR [esi+0x68]
100202bd:	call   0x10016b35
100202c2:	push   DWORD PTR [esi+0x6c]
100202c5:	call   0x10016b35
100202ca:	push   DWORD PTR [esi+0x70]
100202cd:	call   0x10016b35
100202d2:	push   DWORD PTR [esi+0x74]
100202d5:	call   0x10016b35
100202da:	push   DWORD PTR [esi+0x78]
100202dd:	call   0x10016b35
100202e2:	push   DWORD PTR [esi+0x7c]
100202e5:	call   0x10016b35
100202ea:	add    esp,0x40
100202ed:	push   DWORD PTR [esi+0x80]
100202f3:	call   0x10016b35
100202f8:	push   DWORD PTR [esi+0x84]
100202fe:	call   0x10016b35
10020303:	push   DWORD PTR [esi+0x88]
10020309:	call   0x10016b35
1002030e:	push   DWORD PTR [esi+0x8c]
10020314:	call   0x10016b35
10020319:	push   DWORD PTR [esi+0x90]
1002031f:	call   0x10016b35
10020324:	push   DWORD PTR [esi+0x94]
1002032a:	call   0x10016b35
1002032f:	push   DWORD PTR [esi+0x98]
10020335:	call   0x10016b35
1002033a:	push   DWORD PTR [esi+0x9c]
10020340:	call   0x10016b35
10020345:	push   DWORD PTR [esi+0xa0]
1002034b:	call   0x10016b35
10020350:	push   DWORD PTR [esi+0xa4]
10020356:	call   0x10016b35
1002035b:	push   DWORD PTR [esi+0xa8]
10020361:	call   0x10016b35
10020366:	add    esp,0x2c
10020369:	pop    esi
1002036a:	ret    
1002036b:	push   esi
1002036c:	mov    esi,DWORD PTR [esp+0x8]
10020370:	test   esi,esi
10020372:	je     0x100203a9
10020374:	mov    eax,DWORD PTR [esi]
10020376:	cmp    eax,DWORD PTR ds:0x100655a8
1002037c:	je     0x10020385
1002037e:	push   eax
1002037f:	call   0x10016b35
10020384:	pop    ecx
10020385:	mov    eax,DWORD PTR [esi+0x4]
10020388:	cmp    eax,DWORD PTR ds:0x100655ac
1002038e:	je     0x10020397
10020390:	push   eax
10020391:	call   0x10016b35
10020396:	pop    ecx
10020397:	mov    esi,DWORD PTR [esi+0x8]
1002039a:	cmp    esi,DWORD PTR ds:0x100655b0
100203a0:	je     0x100203a9
100203a2:	push   esi
100203a3:	call   0x10016b35
100203a8:	pop    ecx
100203a9:	pop    esi
100203aa:	ret    
100203ab:	push   esi
100203ac:	mov    esi,DWORD PTR [esp+0x8]
100203b0:	test   esi,esi
100203b2:	je     0x10020432
100203b4:	mov    eax,DWORD PTR [esi+0xc]
100203b7:	cmp    eax,DWORD PTR ds:0x100655b4
100203bd:	je     0x100203c6
100203bf:	push   eax
100203c0:	call   0x10016b35
100203c5:	pop    ecx
100203c6:	mov    eax,DWORD PTR [esi+0x10]
100203c9:	cmp    eax,DWORD PTR ds:0x100655b8
100203cf:	je     0x100203d8
100203d1:	push   eax
100203d2:	call   0x10016b35
100203d7:	pop    ecx
100203d8:	mov    eax,DWORD PTR [esi+0x14]
100203db:	cmp    eax,DWORD PTR ds:0x100655bc
100203e1:	je     0x100203ea
100203e3:	push   eax
100203e4:	call   0x10016b35
100203e9:	pop    ecx
100203ea:	mov    eax,DWORD PTR [esi+0x18]
100203ed:	cmp    eax,DWORD PTR ds:0x100655c0
100203f3:	je     0x100203fc
100203f5:	push   eax
100203f6:	call   0x10016b35
100203fb:	pop    ecx
100203fc:	mov    eax,DWORD PTR [esi+0x1c]
100203ff:	cmp    eax,DWORD PTR ds:0x100655c4
10020405:	je     0x1002040e
10020407:	push   eax
10020408:	call   0x10016b35
1002040d:	pop    ecx
1002040e:	mov    eax,DWORD PTR [esi+0x20]
10020411:	cmp    eax,DWORD PTR ds:0x100655c8
10020417:	je     0x10020420
10020419:	push   eax
1002041a:	call   0x10016b35
1002041f:	pop    ecx
10020420:	mov    esi,DWORD PTR [esi+0x24]
10020423:	cmp    esi,DWORD PTR ds:0x100655cc
10020429:	je     0x10020432
1002042b:	push   esi
1002042c:	call   0x10016b35
10020431:	pop    ecx
10020432:	pop    esi
10020433:	ret    
10020434:	mov    eax,DWORD PTR [esp+0x4]
10020438:	push   ebx
10020439:	xor    ebx,ebx
1002043b:	cmp    eax,ebx
1002043d:	push   esi
1002043e:	push   edi
1002043f:	je     0x10020449
10020441:	mov    edi,DWORD PTR [esp+0x14]
10020445:	cmp    edi,ebx
10020447:	ja     0x10020464
10020449:	call   0x10019ffe
1002044e:	push   0x16
10020450:	pop    esi
10020451:	mov    DWORD PTR [eax],esi
10020453:	push   ebx
10020454:	push   ebx
10020455:	push   ebx
10020456:	push   ebx
10020457:	push   ebx
10020458:	call   0x1001611f
1002045d:	add    esp,0x14
10020460:	mov    eax,esi
10020462:	jmp    0x100204a1
10020464:	mov    esi,DWORD PTR [esp+0x18]
10020468:	cmp    esi,ebx
1002046a:	jne    0x10020470
1002046c:	mov    BYTE PTR [eax],bl
1002046e:	jmp    0x10020449
10020470:	mov    edx,eax
10020472:	cmp    BYTE PTR [edx],bl
10020474:	je     0x1002047a
10020476:	inc    edx
10020477:	dec    edi
10020478:	jne    0x10020472
1002047a:	cmp    edi,ebx
1002047c:	je     0x1002046c
1002047e:	mov    cl,BYTE PTR [esi]
10020480:	mov    BYTE PTR [edx],cl
10020482:	inc    edx
10020483:	inc    esi
10020484:	cmp    cl,bl
10020486:	je     0x1002048b
10020488:	dec    edi
10020489:	jne    0x1002047e
1002048b:	cmp    edi,ebx
1002048d:	jne    0x1002049f
1002048f:	mov    BYTE PTR [eax],bl
10020491:	call   0x10019ffe
10020496:	push   0x22
10020498:	pop    ecx
10020499:	mov    DWORD PTR [eax],ecx
1002049b:	mov    esi,ecx
1002049d:	jmp    0x10020453
1002049f:	xor    eax,eax
100204a1:	pop    edi
100204a2:	pop    esi
100204a3:	pop    ebx
100204a4:	ret    
100204a5:	int3   
100204a6:	int3   
100204a7:	int3   
100204a8:	int3   
100204a9:	int3   
100204aa:	int3   
100204ab:	int3   
100204ac:	int3   
100204ad:	int3   
100204ae:	int3   
100204af:	int3   
100204b0:	push   ebp
100204b1:	mov    ebp,esp
100204b3:	push   esi
100204b4:	xor    eax,eax
100204b6:	push   eax
100204b7:	push   eax
100204b8:	push   eax
100204b9:	push   eax
100204ba:	push   eax
100204bb:	push   eax
100204bc:	push   eax
100204bd:	push   eax
100204be:	mov    edx,DWORD PTR [ebp+0xc]
100204c1:	lea    ecx,[ecx+0x0]
100204c4:	mov    al,BYTE PTR [edx]
100204c6:	or     al,al
100204c8:	je     0x100204d3
100204ca:	add    edx,0x1
100204cd:	bts    DWORD PTR [esp],eax
100204d1:	jmp    0x100204c4
100204d3:	mov    esi,DWORD PTR [ebp+0x8]
100204d6:	or     ecx,0xffffffff
100204d9:	lea    ecx,[ecx+0x0]
100204dc:	add    ecx,0x1
100204df:	mov    al,BYTE PTR [esi]
100204e1:	or     al,al
100204e3:	je     0x100204ee
100204e5:	add    esi,0x1
100204e8:	bt     DWORD PTR [esp],eax
100204ec:	jae    0x100204dc
100204ee:	mov    eax,ecx
100204f0:	add    esp,0x20
100204f3:	pop    esi
100204f4:	leave  
100204f5:	ret    
100204f6:	push   ebp
100204f7:	mov    ebp,esp
100204f9:	push   ebx
100204fa:	push   esi
100204fb:	mov    esi,DWORD PTR [ebp+0x8]
100204fe:	xor    ebx,ebx
10020500:	cmp    DWORD PTR [ebp+0x14],ebx
10020503:	push   edi
10020504:	jne    0x10020516
10020506:	cmp    esi,ebx
10020508:	jne    0x1002051a
1002050a:	cmp    DWORD PTR [ebp+0xc],ebx
1002050d:	jne    0x10020521
1002050f:	xor    eax,eax
10020511:	pop    edi
10020512:	pop    esi
10020513:	pop    ebx
10020514:	pop    ebp
10020515:	ret    
10020516:	cmp    esi,ebx
10020518:	je     0x10020521
1002051a:	mov    edi,DWORD PTR [ebp+0xc]
1002051d:	cmp    edi,ebx
1002051f:	ja     0x1002053c
10020521:	call   0x10019ffe
10020526:	push   0x16
10020528:	pop    esi
10020529:	mov    DWORD PTR [eax],esi
1002052b:	push   ebx
1002052c:	push   ebx
1002052d:	push   ebx
1002052e:	push   ebx
1002052f:	push   ebx
10020530:	call   0x1001611f
10020535:	add    esp,0x14
10020538:	mov    eax,esi
1002053a:	jmp    0x10020511
1002053c:	cmp    DWORD PTR [ebp+0x14],ebx
1002053f:	jne    0x10020545
10020541:	mov    BYTE PTR [esi],bl
10020543:	jmp    0x1002050f
10020545:	mov    edx,DWORD PTR [ebp+0x10]
10020548:	cmp    edx,ebx
1002054a:	jne    0x10020550
1002054c:	mov    BYTE PTR [esi],bl
1002054e:	jmp    0x10020521
10020550:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10020554:	mov    eax,esi
10020556:	jne    0x10020567
10020558:	mov    cl,BYTE PTR [edx]
1002055a:	mov    BYTE PTR [eax],cl
1002055c:	inc    eax
1002055d:	inc    edx
1002055e:	cmp    cl,bl
10020560:	je     0x10020580
10020562:	dec    edi
10020563:	jne    0x10020558
10020565:	jmp    0x10020580
10020567:	mov    cl,BYTE PTR [edx]
10020569:	mov    BYTE PTR [eax],cl
1002056b:	inc    eax
1002056c:	inc    edx
1002056d:	cmp    cl,bl
1002056f:	je     0x10020579
10020571:	dec    edi
10020572:	je     0x10020579
10020574:	dec    DWORD PTR [ebp+0x14]
10020577:	jne    0x10020567
10020579:	cmp    DWORD PTR [ebp+0x14],ebx
1002057c:	jne    0x10020580
1002057e:	mov    BYTE PTR [eax],bl
10020580:	cmp    edi,ebx
10020582:	jne    0x1002050f
10020584:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10020588:	jne    0x10020599
1002058a:	mov    eax,DWORD PTR [ebp+0xc]
1002058d:	push   0x50
1002058f:	mov    BYTE PTR [esi+eax*1-0x1],bl
10020593:	pop    eax
10020594:	jmp    0x10020511
10020599:	mov    BYTE PTR [esi],bl
1002059b:	call   0x10019ffe
100205a0:	push   0x22
100205a2:	pop    ecx
100205a3:	mov    DWORD PTR [eax],ecx
100205a5:	mov    esi,ecx
100205a7:	jmp    0x1002052b
100205a9:	push   ebp
100205aa:	mov    ebp,esp
100205ac:	push   ecx
100205ad:	push   ecx
100205ae:	mov    eax,ds:0x10064694
100205b3:	xor    eax,ebp
100205b5:	mov    DWORD PTR [ebp-0x4],eax
100205b8:	mov    eax,ds:0x10066c64
100205bd:	push   ebx
100205be:	push   esi
100205bf:	xor    ebx,ebx
100205c1:	cmp    eax,ebx
100205c3:	push   edi
100205c4:	mov    edi,ecx
100205c6:	jne    0x10020602
100205c8:	lea    eax,[ebp-0x8]
100205cb:	push   eax
100205cc:	xor    esi,esi
100205ce:	inc    esi
100205cf:	push   esi
100205d0:	push   0x10057130
100205d5:	push   esi
100205d6:	call   DWORD PTR ds:0x1002c178
100205dc:	test   eax,eax
100205de:	je     0x100205e8
100205e0:	mov    DWORD PTR ds:0x10066c64,esi
100205e6:	jmp    0x1002061c
100205e8:	call   DWORD PTR ds:0x1002c07c
100205ee:	cmp    eax,0x78
100205f1:	jne    0x100205fd
100205f3:	push   0x2
100205f5:	pop    eax
100205f6:	mov    ds:0x10066c64,eax
100205fb:	jmp    0x10020602
100205fd:	mov    eax,ds:0x10066c64
10020602:	cmp    eax,0x2
10020605:	je     0x100206da
1002060b:	cmp    eax,ebx
1002060d:	je     0x100206da
10020613:	cmp    eax,0x1
10020616:	jne    0x10020704
1002061c:	cmp    DWORD PTR [ebp+0x18],ebx
1002061f:	mov    DWORD PTR [ebp-0x8],ebx
10020622:	jne    0x1002062c
10020624:	mov    eax,DWORD PTR [edi]
10020626:	mov    eax,DWORD PTR [eax+0x4]
10020629:	mov    DWORD PTR [ebp+0x18],eax
1002062c:	mov    esi,DWORD PTR ds:0x1002c080
10020632:	xor    eax,eax
10020634:	cmp    DWORD PTR [ebp+0x20],ebx
10020637:	push   ebx
10020638:	push   ebx
10020639:	push   DWORD PTR [ebp+0x10]
1002063c:	setne  al
1002063f:	push   DWORD PTR [ebp+0xc]
10020642:	lea    eax,[eax*8+0x1]
10020649:	push   eax
1002064a:	push   DWORD PTR [ebp+0x18]
1002064d:	call   esi
1002064f:	mov    edi,eax
10020651:	cmp    edi,ebx
10020653:	je     0x10020704
10020659:	jle    0x10020697
1002065b:	cmp    edi,0x7ffffff0
10020661:	ja     0x10020697
10020663:	lea    eax,[edi+edi*1+0x8]
10020667:	cmp    eax,0x400
1002066c:	ja     0x10020681
1002066e:	call   0x10015af0
10020673:	mov    eax,esp
10020675:	cmp    eax,ebx
10020677:	je     0x10020695
10020679:	mov    DWORD PTR [eax],0xcccc
1002067f:	jmp    0x10020692
10020681:	push   eax
10020682:	call   0x10016c12
10020687:	cmp    eax,ebx
10020689:	pop    ecx
1002068a:	je     0x10020695
1002068c:	mov    DWORD PTR [eax],0xdddd
10020692:	add    eax,0x8
10020695:	mov    ebx,eax
10020697:	test   ebx,ebx
10020699:	je     0x10020704
1002069b:	lea    eax,[edi+edi*1]
1002069e:	push   eax
1002069f:	push   0x0
100206a1:	push   ebx
100206a2:	call   0x10016530
100206a7:	add    esp,0xc
100206aa:	push   edi
100206ab:	push   ebx
100206ac:	push   DWORD PTR [ebp+0x10]
100206af:	push   DWORD PTR [ebp+0xc]
100206b2:	push   0x1
100206b4:	push   DWORD PTR [ebp+0x18]
100206b7:	call   esi
100206b9:	test   eax,eax
100206bb:	je     0x100206ce
100206bd:	push   DWORD PTR [ebp+0x14]
100206c0:	push   eax
100206c1:	push   ebx
100206c2:	push   DWORD PTR [ebp+0x8]
100206c5:	call   DWORD PTR ds:0x1002c178
100206cb:	mov    DWORD PTR [ebp-0x8],eax
100206ce:	push   ebx
100206cf:	call   0x10017a1c
100206d4:	mov    eax,DWORD PTR [ebp-0x8]
100206d7:	pop    ecx
100206d8:	jmp    0x1002074f
100206da:	xor    esi,esi
100206dc:	cmp    DWORD PTR [ebp+0x1c],ebx
100206df:	jne    0x100206e9
100206e1:	mov    eax,DWORD PTR [edi]
100206e3:	mov    eax,DWORD PTR [eax+0x14]
100206e6:	mov    DWORD PTR [ebp+0x1c],eax
100206e9:	cmp    DWORD PTR [ebp+0x18],ebx
100206ec:	jne    0x100206f6
100206ee:	mov    eax,DWORD PTR [edi]
100206f0:	mov    eax,DWORD PTR [eax+0x4]
100206f3:	mov    DWORD PTR [ebp+0x18],eax
100206f6:	push   DWORD PTR [ebp+0x1c]
100206f9:	call   0x100207f0
100206fe:	cmp    eax,0xffffffff
10020701:	pop    ecx
10020702:	jne    0x10020708
10020704:	xor    eax,eax
10020706:	jmp    0x1002074f
10020708:	cmp    eax,DWORD PTR [ebp+0x18]
1002070b:	je     0x1002072b
1002070d:	push   ebx
1002070e:	push   ebx
1002070f:	lea    ecx,[ebp+0x10]
10020712:	push   ecx
10020713:	push   DWORD PTR [ebp+0xc]
10020716:	push   eax
10020717:	push   DWORD PTR [ebp+0x18]
1002071a:	call   0x10020837
1002071f:	mov    esi,eax
10020721:	add    esp,0x18
10020724:	cmp    esi,ebx
10020726:	je     0x10020704
10020728:	mov    DWORD PTR [ebp+0xc],esi
1002072b:	push   DWORD PTR [ebp+0x14]
1002072e:	push   DWORD PTR [ebp+0x10]
10020731:	push   DWORD PTR [ebp+0xc]
10020734:	push   DWORD PTR [ebp+0x8]
10020737:	push   DWORD PTR [ebp+0x1c]
1002073a:	call   DWORD PTR ds:0x1002c174
10020740:	cmp    esi,ebx
10020742:	mov    edi,eax
10020744:	je     0x1002074d
10020746:	push   esi
10020747:	call   0x10016b35
1002074c:	pop    ecx
1002074d:	mov    eax,edi
1002074f:	lea    esp,[ebp-0x14]
10020752:	pop    edi
10020753:	pop    esi
10020754:	pop    ebx
10020755:	mov    ecx,DWORD PTR [ebp-0x4]
10020758:	xor    ecx,ebp
1002075a:	call   0x10015adb
1002075f:	leave  
10020760:	ret    
10020761:	push   ebp
10020762:	mov    ebp,esp
10020764:	sub    esp,0x10
10020767:	push   DWORD PTR [ebp+0x8]
1002076a:	lea    ecx,[ebp-0x10]
1002076d:	call   0x100165aa
10020772:	push   DWORD PTR [ebp+0x24]
10020775:	lea    ecx,[ebp-0x10]
10020778:	push   DWORD PTR [ebp+0x20]
1002077b:	push   DWORD PTR [ebp+0x1c]
1002077e:	push   DWORD PTR [ebp+0x18]
10020781:	push   DWORD PTR [ebp+0x14]
10020784:	push   DWORD PTR [ebp+0x10]
10020787:	push   DWORD PTR [ebp+0xc]
1002078a:	call   0x100205a9
1002078f:	add    esp,0x1c
10020792:	cmp    BYTE PTR [ebp-0x4],0x0
10020796:	je     0x1002079f
10020798:	mov    ecx,DWORD PTR [ebp-0x8]
1002079b:	and    DWORD PTR [ecx+0x70],0xfffffffd
1002079f:	leave  
100207a0:	ret    
100207a1:	int3   
100207a2:	int3   
100207a3:	int3   
100207a4:	int3   
100207a5:	int3   
100207a6:	int3   
100207a7:	int3   
100207a8:	int3   
100207a9:	int3   
100207aa:	int3   
100207ab:	int3   
100207ac:	int3   
100207ad:	int3   
100207ae:	int3   
100207af:	int3   
100207b0:	push   ebp
100207b1:	mov    ebp,esp
100207b3:	push   esi
100207b4:	xor    eax,eax
100207b6:	push   eax
100207b7:	push   eax
100207b8:	push   eax
100207b9:	push   eax
100207ba:	push   eax
100207bb:	push   eax
100207bc:	push   eax
100207bd:	push   eax
100207be:	mov    edx,DWORD PTR [ebp+0xc]
100207c1:	lea    ecx,[ecx+0x0]
100207c4:	mov    al,BYTE PTR [edx]
100207c6:	or     al,al
100207c8:	je     0x100207d3
100207ca:	add    edx,0x1
100207cd:	bts    DWORD PTR [esp],eax
100207d1:	jmp    0x100207c4
100207d3:	mov    esi,DWORD PTR [ebp+0x8]
100207d6:	mov    edi,edi
100207d8:	mov    al,BYTE PTR [esi]
100207da:	or     al,al
100207dc:	je     0x100207ea
100207de:	add    esi,0x1
100207e1:	bt     DWORD PTR [esp],eax
100207e5:	jae    0x100207d8
100207e7:	lea    eax,[esi-0x1]
100207ea:	add    esp,0x20
100207ed:	pop    esi
100207ee:	leave  
100207ef:	ret    
100207f0:	push   ebp
100207f1:	mov    ebp,esp
100207f3:	sub    esp,0xc
100207f6:	mov    eax,ds:0x10064694
100207fb:	xor    eax,ebp
100207fd:	mov    DWORD PTR [ebp-0x4],eax
10020800:	push   0x6
10020802:	lea    eax,[ebp-0xc]
10020805:	push   eax
10020806:	push   0x1004
1002080b:	push   DWORD PTR [ebp+0x8]
1002080e:	mov    BYTE PTR [ebp-0x6],0x0
10020812:	call   DWORD PTR ds:0x1002c1b8
10020818:	test   eax,eax
1002081a:	jne    0x10020821
1002081c:	or     eax,0xffffffff
1002081f:	jmp    0x1002082b
10020821:	lea    eax,[ebp-0xc]
10020824:	push   eax
10020825:	call   0x1002375f
1002082a:	pop    ecx
1002082b:	mov    ecx,DWORD PTR [ebp-0x4]
1002082e:	xor    ecx,ebp
10020830:	call   0x10015adb
10020835:	leave  
10020836:	ret    
10020837:	push   ebp
10020838:	mov    ebp,esp
1002083a:	sub    esp,0x34
1002083d:	mov    eax,ds:0x10064694
10020842:	xor    eax,ebp
10020844:	mov    DWORD PTR [ebp-0x4],eax
10020847:	mov    eax,DWORD PTR [ebp+0x10]
1002084a:	mov    ecx,DWORD PTR [ebp+0x18]
1002084d:	mov    DWORD PTR [ebp-0x28],eax
10020850:	mov    eax,DWORD PTR [ebp+0x14]
10020853:	push   ebx
10020854:	mov    DWORD PTR [ebp-0x30],eax
10020857:	mov    eax,DWORD PTR [eax]
10020859:	push   esi
1002085a:	mov    DWORD PTR [ebp-0x24],eax
1002085d:	mov    eax,DWORD PTR [ebp+0x8]
10020860:	push   edi
10020861:	xor    edi,edi
10020863:	cmp    eax,DWORD PTR [ebp+0xc]
10020866:	mov    DWORD PTR [ebp-0x34],ecx
10020869:	mov    DWORD PTR [ebp-0x20],edi
1002086c:	mov    DWORD PTR [ebp-0x2c],edi
1002086f:	je     0x100209d4
10020875:	mov    esi,DWORD PTR ds:0x1002c214
1002087b:	lea    ecx,[ebp-0x18]
1002087e:	push   ecx
1002087f:	push   eax
10020880:	call   esi
10020882:	test   eax,eax
10020884:	mov    ebx,DWORD PTR ds:0x1002c080
1002088a:	je     0x100208ea
1002088c:	cmp    DWORD PTR [ebp-0x18],0x1
10020890:	jne    0x100208ea
10020892:	lea    eax,[ebp-0x18]
10020895:	push   eax
10020896:	push   DWORD PTR [ebp+0xc]
10020899:	call   esi
1002089b:	test   eax,eax
1002089d:	je     0x100208ea
1002089f:	cmp    DWORD PTR [ebp-0x18],0x1
100208a3:	jne    0x100208ea
100208a5:	mov    esi,DWORD PTR [ebp-0x24]
100208a8:	cmp    esi,0xffffffff
100208ab:	mov    DWORD PTR [ebp-0x2c],0x1
100208b2:	jne    0x100208c0
100208b4:	push   DWORD PTR [ebp-0x28]
100208b7:	call   0x10016370
100208bc:	mov    esi,eax
100208be:	pop    ecx
100208bf:	inc    esi
100208c0:	cmp    esi,edi
100208c2:	jle    0x1002091f
100208c4:	cmp    esi,0x7ffffff0
100208ca:	ja     0x1002091f
100208cc:	lea    eax,[esi+esi*1+0x8]
100208d0:	cmp    eax,0x400
100208d5:	ja     0x10020906
100208d7:	call   0x10015af0
100208dc:	mov    eax,esp
100208de:	cmp    eax,edi
100208e0:	je     0x1002091a
100208e2:	mov    DWORD PTR [eax],0xcccc
100208e8:	jmp    0x10020917
100208ea:	push   edi
100208eb:	push   edi
100208ec:	push   DWORD PTR [ebp-0x24]
100208ef:	push   DWORD PTR [ebp-0x28]
100208f2:	push   0x1
100208f4:	push   DWORD PTR [ebp+0x8]
100208f7:	call   ebx
100208f9:	mov    esi,eax
100208fb:	cmp    esi,edi
100208fd:	jne    0x100208c2
100208ff:	xor    eax,eax
10020901:	jmp    0x100209d7
10020906:	push   eax
10020907:	call   0x10016c12
1002090c:	cmp    eax,edi
1002090e:	pop    ecx
1002090f:	je     0x1002091a
10020911:	mov    DWORD PTR [eax],0xdddd
10020917:	add    eax,0x8
1002091a:	mov    DWORD PTR [ebp-0x1c],eax
1002091d:	jmp    0x10020922
1002091f:	mov    DWORD PTR [ebp-0x1c],edi
10020922:	cmp    DWORD PTR [ebp-0x1c],edi
10020925:	je     0x100208ff
10020927:	lea    eax,[esi+esi*1]
1002092a:	push   eax
1002092b:	push   edi
1002092c:	push   DWORD PTR [ebp-0x1c]
1002092f:	call   0x10016530
10020934:	add    esp,0xc
10020937:	push   esi
10020938:	push   DWORD PTR [ebp-0x1c]
1002093b:	push   DWORD PTR [ebp-0x24]
1002093e:	push   DWORD PTR [ebp-0x28]
10020941:	push   0x1
10020943:	push   DWORD PTR [ebp+0x8]
10020946:	call   ebx
10020948:	test   eax,eax
1002094a:	je     0x100209cb
1002094c:	mov    ebx,DWORD PTR [ebp-0x34]
1002094f:	cmp    ebx,edi
10020951:	je     0x10020970
10020953:	push   edi
10020954:	push   edi
10020955:	push   DWORD PTR [ebp+0x1c]
10020958:	push   ebx
10020959:	push   esi
1002095a:	push   DWORD PTR [ebp-0x1c]
1002095d:	push   edi
1002095e:	push   DWORD PTR [ebp+0xc]
10020961:	call   DWORD PTR ds:0x1002c02c
10020967:	test   eax,eax
10020969:	je     0x100209cb
1002096b:	mov    DWORD PTR [ebp-0x20],ebx
1002096e:	jmp    0x100209cb
10020970:	cmp    DWORD PTR [ebp-0x2c],edi
10020973:	mov    ebx,DWORD PTR ds:0x1002c02c
10020979:	jne    0x1002098f
1002097b:	push   edi
1002097c:	push   edi
1002097d:	push   edi
1002097e:	push   edi
1002097f:	push   esi
10020980:	push   DWORD PTR [ebp-0x1c]
10020983:	push   edi
10020984:	push   DWORD PTR [ebp+0xc]
10020987:	call   ebx
10020989:	mov    esi,eax
1002098b:	cmp    esi,edi
1002098d:	je     0x100209cb
1002098f:	push   esi
10020990:	push   0x1
10020992:	call   0x100185e5
10020997:	cmp    eax,edi
10020999:	pop    ecx
1002099a:	pop    ecx
1002099b:	mov    DWORD PTR [ebp-0x20],eax
1002099e:	je     0x100209cb
100209a0:	push   edi
100209a1:	push   edi
100209a2:	push   esi
100209a3:	push   eax
100209a4:	push   esi
100209a5:	push   DWORD PTR [ebp-0x1c]
100209a8:	push   edi
100209a9:	push   DWORD PTR [ebp+0xc]
100209ac:	call   ebx
100209ae:	cmp    eax,edi
100209b0:	jne    0x100209c0
100209b2:	push   DWORD PTR [ebp-0x20]
100209b5:	call   0x10016b35
100209ba:	pop    ecx
100209bb:	mov    DWORD PTR [ebp-0x20],edi
100209be:	jmp    0x100209cb
100209c0:	cmp    DWORD PTR [ebp-0x24],0xffffffff
100209c4:	je     0x100209cb
100209c6:	mov    ecx,DWORD PTR [ebp-0x30]
100209c9:	mov    DWORD PTR [ecx],eax
100209cb:	push   DWORD PTR [ebp-0x1c]
100209ce:	call   0x10017a1c
100209d3:	pop    ecx
100209d4:	mov    eax,DWORD PTR [ebp-0x20]
100209d7:	lea    esp,[ebp-0x40]
100209da:	pop    edi
100209db:	pop    esi
100209dc:	pop    ebx
100209dd:	mov    ecx,DWORD PTR [ebp-0x4]
100209e0:	xor    ecx,ebp
100209e2:	call   0x10015adb
100209e7:	leave  
100209e8:	ret    
100209e9:	push   0xc
100209eb:	push   0x100588f0
100209f0:	call   0x10017a38
100209f5:	mov    ecx,DWORD PTR [ebp+0x8]
100209f8:	xor    edi,edi
100209fa:	cmp    ecx,edi
100209fc:	jbe    0x10020a2c
100209fe:	push   0xffffffe0
10020a00:	pop    eax
10020a01:	xor    edx,edx
10020a03:	div    ecx
10020a05:	cmp    eax,DWORD PTR [ebp+0xc]
10020a08:	sbb    eax,eax
10020a0a:	inc    eax
10020a0b:	jne    0x10020a2c
10020a0d:	call   0x10019ffe
10020a12:	mov    DWORD PTR [eax],0xc
10020a18:	push   edi
10020a19:	push   edi
10020a1a:	push   edi
10020a1b:	push   edi
10020a1c:	push   edi
10020a1d:	call   0x1001611f
10020a22:	add    esp,0x14
10020a25:	xor    eax,eax
10020a27:	jmp    0x10020b01
10020a2c:	imul   ecx,DWORD PTR [ebp+0xc]
10020a30:	mov    esi,ecx
10020a32:	mov    DWORD PTR [ebp+0x8],esi
10020a35:	cmp    esi,edi
10020a37:	jne    0x10020a3c
10020a39:	xor    esi,esi
10020a3b:	inc    esi
10020a3c:	xor    ebx,ebx
10020a3e:	mov    DWORD PTR [ebp-0x1c],ebx
10020a41:	cmp    esi,0xffffffe0
10020a44:	ja     0x10020aaf
10020a46:	cmp    DWORD PTR ds:0x10068098,0x3
10020a4d:	jne    0x10020a9a
10020a4f:	add    esi,0xf
10020a52:	and    esi,0xfffffff0
10020a55:	mov    DWORD PTR [ebp+0xc],esi
10020a58:	mov    eax,DWORD PTR [ebp+0x8]
10020a5b:	cmp    eax,DWORD PTR ds:0x10068088
10020a61:	ja     0x10020a9a
10020a63:	push   0x4
10020a65:	call   0x1001b6ab
10020a6a:	pop    ecx
10020a6b:	mov    DWORD PTR [ebp-0x4],edi
10020a6e:	push   DWORD PTR [ebp+0x8]
10020a71:	call   0x1001bef8
10020a76:	pop    ecx
10020a77:	mov    DWORD PTR [ebp-0x1c],eax
10020a7a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10020a81:	call   0x10020ae5
10020a86:	mov    ebx,DWORD PTR [ebp-0x1c]
10020a89:	cmp    ebx,edi
10020a8b:	je     0x10020a9e
10020a8d:	push   DWORD PTR [ebp+0x8]
10020a90:	push   edi
10020a91:	push   ebx
10020a92:	call   0x10016530
10020a97:	add    esp,0xc
10020a9a:	cmp    ebx,edi
10020a9c:	jne    0x10020aff
10020a9e:	push   esi
10020a9f:	push   0x8
10020aa1:	push   DWORD PTR ds:0x100666c0
10020aa7:	call   DWORD PTR ds:0x1002c1c8
10020aad:	mov    ebx,eax
10020aaf:	cmp    ebx,edi
10020ab1:	jne    0x10020aff
10020ab3:	cmp    DWORD PTR ds:0x10066b34,edi
10020ab9:	je     0x10020aee
10020abb:	push   esi
10020abc:	call   0x1001a1b7
10020ac1:	pop    ecx
10020ac2:	test   eax,eax
10020ac4:	jne    0x10020a3c
10020aca:	mov    eax,DWORD PTR [ebp+0x10]
10020acd:	cmp    eax,edi
10020acf:	je     0x10020a25
10020ad5:	mov    DWORD PTR [eax],0xc
10020adb:	jmp    0x10020a25
10020ae0:	xor    edi,edi
10020ae2:	mov    esi,DWORD PTR [ebp+0xc]
10020ae5:	push   0x4
10020ae7:	call   0x1001b5d3
10020aec:	pop    ecx
10020aed:	ret    
10020aee:	cmp    ebx,edi
10020af0:	jne    0x10020aff
10020af2:	mov    eax,DWORD PTR [ebp+0x10]
10020af5:	cmp    eax,edi
10020af7:	je     0x10020aff
10020af9:	mov    DWORD PTR [eax],0xc
10020aff:	mov    eax,ebx
10020b01:	call   0x10017a7d
10020b06:	ret    
10020b07:	mov    eax,DWORD PTR [esp+0x4]
10020b0b:	mov    ds:0x10066c68,eax
10020b10:	mov    ds:0x10066c6c,eax
10020b15:	mov    ds:0x10066c70,eax
10020b1a:	mov    ds:0x10066c74,eax
10020b1f:	ret    
10020b20:	mov    eax,DWORD PTR [esp+0x4]
10020b24:	mov    ecx,DWORD PTR ds:0x1006524c
10020b2a:	push   esi
10020b2b:	cmp    DWORD PTR [eax+0x4],edx
10020b2e:	je     0x10020b40
10020b30:	mov    esi,ecx
10020b32:	imul   esi,esi,0xc
10020b35:	add    esi,DWORD PTR [esp+0x8]
10020b39:	add    eax,0xc
10020b3c:	cmp    eax,esi
10020b3e:	jb     0x10020b2b
10020b40:	imul   ecx,ecx,0xc
10020b43:	add    ecx,DWORD PTR [esp+0x8]
10020b47:	pop    esi
10020b48:	cmp    eax,ecx
10020b4a:	jae    0x10020b51
10020b4c:	cmp    DWORD PTR [eax+0x4],edx
10020b4f:	je     0x10020b53
10020b51:	xor    eax,eax
10020b53:	ret    
10020b54:	push   DWORD PTR ds:0x10066c70
10020b5a:	call   0x100195fa
10020b5f:	pop    ecx
10020b60:	ret    
10020b61:	push   0x20
10020b63:	push   0x10058910
10020b68:	call   0x10017a38
10020b6d:	xor    edi,edi
10020b6f:	mov    DWORD PTR [ebp-0x1c],edi
10020b72:	mov    DWORD PTR [ebp-0x28],edi
10020b75:	mov    ebx,DWORD PTR [ebp+0x8]
10020b78:	cmp    ebx,0xb
10020b7b:	jg     0x10020bc9
10020b7d:	je     0x10020b94
10020b7f:	mov    eax,ebx
10020b81:	push   0x2
10020b83:	pop    ecx
10020b84:	sub    eax,ecx
10020b86:	je     0x10020baa
10020b88:	sub    eax,ecx
10020b8a:	je     0x10020b94
10020b8c:	sub    eax,ecx
10020b8e:	je     0x10020bf4
10020b90:	sub    eax,ecx
10020b92:	jne    0x10020bd8
10020b94:	call   0x1001979f
10020b99:	mov    edi,eax
10020b9b:	mov    DWORD PTR [ebp-0x28],edi
10020b9e:	test   edi,edi
10020ba0:	jne    0x10020bb6
10020ba2:	or     eax,0xffffffff
10020ba5:	jmp    0x10020d0b
10020baa:	mov    esi,0x10066c68
10020baf:	mov    eax,ds:0x10066c68
10020bb4:	jmp    0x10020c16
10020bb6:	push   DWORD PTR [edi+0x5c]
10020bb9:	mov    edx,ebx
10020bbb:	call   0x10020b20
10020bc0:	mov    esi,eax
10020bc2:	add    esi,0x8
10020bc5:	mov    eax,DWORD PTR [esi]
10020bc7:	jmp    0x10020c23
10020bc9:	mov    eax,ebx
10020bcb:	sub    eax,0xf
10020bce:	je     0x10020c0c
10020bd0:	sub    eax,0x6
10020bd3:	je     0x10020c00
10020bd5:	dec    eax
10020bd6:	je     0x10020bf4
10020bd8:	call   0x10019ffe
10020bdd:	mov    DWORD PTR [eax],0x16
10020be3:	xor    eax,eax
10020be5:	push   eax
10020be6:	push   eax
10020be7:	push   eax
10020be8:	push   eax
10020be9:	push   eax
10020bea:	call   0x1001611f
10020bef:	add    esp,0x14
10020bf2:	jmp    0x10020ba2
10020bf4:	mov    esi,0x10066c70
10020bf9:	mov    eax,ds:0x10066c70
10020bfe:	jmp    0x10020c16
10020c00:	mov    esi,0x10066c6c
10020c05:	mov    eax,ds:0x10066c6c
10020c0a:	jmp    0x10020c16
10020c0c:	mov    esi,0x10066c74
10020c11:	mov    eax,ds:0x10066c74
10020c16:	mov    DWORD PTR [ebp-0x1c],0x1
10020c1d:	push   eax
10020c1e:	call   0x100195fa
10020c23:	mov    DWORD PTR [ebp-0x20],eax
10020c26:	pop    ecx
10020c27:	xor    eax,eax
10020c29:	cmp    DWORD PTR [ebp-0x20],0x1
10020c2d:	je     0x10020d0b
10020c33:	cmp    DWORD PTR [ebp-0x20],eax
10020c36:	jne    0x10020c3f
10020c38:	push   0x3
10020c3a:	call   0x10019f4f
10020c3f:	cmp    DWORD PTR [ebp-0x1c],eax
10020c42:	je     0x10020c4b
10020c44:	push   eax
10020c45:	call   0x1001b6ab
10020c4a:	pop    ecx
10020c4b:	xor    eax,eax
10020c4d:	mov    DWORD PTR [ebp-0x4],eax
10020c50:	cmp    ebx,0x8
10020c53:	je     0x10020c5f
10020c55:	cmp    ebx,0xb
10020c58:	je     0x10020c5f
10020c5a:	cmp    ebx,0x4
10020c5d:	jne    0x10020c7a
10020c5f:	mov    ecx,DWORD PTR [edi+0x60]
10020c62:	mov    DWORD PTR [ebp-0x2c],ecx
10020c65:	mov    DWORD PTR [edi+0x60],eax
10020c68:	cmp    ebx,0x8
10020c6b:	jne    0x10020cad
10020c6d:	mov    ecx,DWORD PTR [edi+0x64]
10020c70:	mov    DWORD PTR [ebp-0x30],ecx
10020c73:	mov    DWORD PTR [edi+0x64],0x8c
10020c7a:	cmp    ebx,0x8
10020c7d:	jne    0x10020cad
10020c7f:	mov    ecx,DWORD PTR ds:0x10065240
10020c85:	mov    DWORD PTR [ebp-0x24],ecx
10020c88:	mov    ecx,DWORD PTR ds:0x10065244
10020c8e:	mov    edx,DWORD PTR ds:0x10065240
10020c94:	add    ecx,edx
10020c96:	cmp    DWORD PTR [ebp-0x24],ecx
10020c99:	jge    0x10020cb4
10020c9b:	mov    ecx,DWORD PTR [ebp-0x24]
10020c9e:	imul   ecx,ecx,0xc
10020ca1:	mov    edx,DWORD PTR [edi+0x5c]
10020ca4:	mov    DWORD PTR [ecx+edx*1+0x8],eax
10020ca8:	inc    DWORD PTR [ebp-0x24]
10020cab:	jmp    0x10020c88
10020cad:	call   0x100195f1
10020cb2:	mov    DWORD PTR [esi],eax
10020cb4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10020cbb:	call   0x10020cd5
10020cc0:	cmp    ebx,0x8
10020cc3:	jne    0x10020ce4
10020cc5:	push   DWORD PTR [edi+0x64]
10020cc8:	push   ebx
10020cc9:	call   DWORD PTR [ebp-0x20]
10020ccc:	pop    ecx
10020ccd:	jmp    0x10020ce8
10020ccf:	mov    ebx,DWORD PTR [ebp+0x8]
10020cd2:	mov    edi,DWORD PTR [ebp-0x28]
10020cd5:	cmp    DWORD PTR [ebp-0x1c],0x0
10020cd9:	je     0x10020ce3
10020cdb:	push   0x0
10020cdd:	call   0x1001b5d3
10020ce2:	pop    ecx
10020ce3:	ret    
10020ce4:	push   ebx
10020ce5:	call   DWORD PTR [ebp-0x20]
10020ce8:	pop    ecx
10020ce9:	cmp    ebx,0x8
10020cec:	je     0x10020cf8
10020cee:	cmp    ebx,0xb
10020cf1:	je     0x10020cf8
10020cf3:	cmp    ebx,0x4
10020cf6:	jne    0x10020d09
10020cf8:	mov    eax,DWORD PTR [ebp-0x2c]
10020cfb:	mov    DWORD PTR [edi+0x60],eax
10020cfe:	cmp    ebx,0x8
10020d01:	jne    0x10020d09
10020d03:	mov    eax,DWORD PTR [ebp-0x30]
10020d06:	mov    DWORD PTR [edi+0x64],eax
10020d09:	xor    eax,eax
10020d0b:	call   0x10017a7d
10020d10:	ret    
10020d11:	xor    eax,eax
10020d13:	inc    eax
10020d14:	cmp    DWORD PTR [esp+0x4],0x0
10020d19:	jne    0x10020d1d
10020d1b:	xor    eax,eax
10020d1d:	ret    
10020d1e:	int3   
10020d1f:	int3   
10020d20:	push   ebp
10020d21:	mov    ebp,esp
10020d23:	push   ebx
10020d24:	push   esi
10020d25:	push   edi
10020d26:	push   ebp
10020d27:	push   0x0
10020d29:	push   0x0
10020d2b:	push   0x10020d38
10020d30:	push   DWORD PTR [ebp+0x8]
10020d33:	call   0x1002a01e
10020d38:	pop    ebp
10020d39:	pop    edi
10020d3a:	pop    esi
10020d3b:	pop    ebx
10020d3c:	mov    esp,ebp
10020d3e:	pop    ebp
10020d3f:	ret    
10020d40:	mov    ecx,DWORD PTR [esp+0x4]
10020d44:	test   DWORD PTR [ecx+0x4],0x6
10020d4b:	mov    eax,0x1
10020d50:	je     0x10020d84
10020d52:	mov    eax,DWORD PTR [esp+0x14]
10020d56:	mov    ecx,DWORD PTR [eax-0x4]
10020d59:	xor    ecx,eax
10020d5b:	call   0x10015adb
10020d60:	push   ebp
10020d61:	mov    ebp,DWORD PTR [eax+0x10]
10020d64:	mov    edx,DWORD PTR [eax+0x28]
10020d67:	push   edx
10020d68:	mov    edx,DWORD PTR [eax+0x24]
10020d6b:	push   edx
10020d6c:	call   0x10020d85
10020d71:	add    esp,0x8
10020d74:	pop    ebp
10020d75:	mov    eax,DWORD PTR [esp+0x8]
10020d79:	mov    edx,DWORD PTR [esp+0x10]
10020d7d:	mov    DWORD PTR [edx],eax
10020d7f:	mov    eax,0x3
10020d84:	ret    
10020d85:	push   ebx
10020d86:	push   esi
10020d87:	push   edi
10020d88:	mov    eax,DWORD PTR [esp+0x10]
10020d8c:	push   ebp
10020d8d:	push   eax
10020d8e:	push   0xfffffffe
10020d90:	push   0x10020d40
10020d95:	push   DWORD PTR fs:0x0
10020d9c:	mov    eax,ds:0x10064694
10020da1:	xor    eax,esp
10020da3:	push   eax
10020da4:	lea    eax,[esp+0x4]
10020da8:	mov    fs:0x0,eax
10020dae:	mov    eax,DWORD PTR [esp+0x28]
10020db2:	mov    ebx,DWORD PTR [eax+0x8]
10020db5:	mov    esi,DWORD PTR [eax+0xc]
10020db8:	cmp    esi,0xffffffff
10020dbb:	je     0x10020df7
10020dbd:	cmp    DWORD PTR [esp+0x2c],0xffffffff
10020dc2:	je     0x10020dca
10020dc4:	cmp    esi,DWORD PTR [esp+0x2c]
10020dc8:	jbe    0x10020df7
10020dca:	lea    esi,[esi+esi*2]
10020dcd:	mov    ecx,DWORD PTR [ebx+esi*4]
10020dd0:	mov    DWORD PTR [esp+0xc],ecx
10020dd4:	mov    DWORD PTR [eax+0xc],ecx
10020dd7:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
10020ddc:	jne    0x10020df5
10020dde:	push   0x101
10020de3:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
10020de7:	call   0x10020e35
10020dec:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
10020df0:	call   0x10020e54
10020df5:	jmp    0x10020dae
10020df7:	mov    ecx,DWORD PTR [esp+0x4]
10020dfb:	mov    DWORD PTR fs:0x0,ecx
10020e02:	add    esp,0x18
10020e05:	pop    edi
10020e06:	pop    esi
10020e07:	pop    ebx
10020e08:	ret    
10020e09:	xor    eax,eax
10020e0b:	mov    ecx,DWORD PTR fs:0x0
10020e12:	cmp    DWORD PTR [ecx+0x4],0x10020d40
10020e19:	jne    0x10020e2b
10020e1b:	mov    edx,DWORD PTR [ecx+0xc]
10020e1e:	mov    edx,DWORD PTR [edx+0xc]
10020e21:	cmp    DWORD PTR [ecx+0x8],edx
10020e24:	jne    0x10020e2b
10020e26:	mov    eax,0x1
10020e2b:	ret    
10020e2c:	push   ebx
10020e2d:	push   ecx
10020e2e:	mov    ebx,0x100655f0
10020e33:	jmp    0x10020e40
10020e35:	push   ebx
10020e36:	push   ecx
10020e37:	mov    ebx,0x100655f0
10020e3c:	mov    ecx,DWORD PTR [esp+0xc]
10020e40:	mov    DWORD PTR [ebx+0x8],ecx
10020e43:	mov    DWORD PTR [ebx+0x4],eax
10020e46:	mov    DWORD PTR [ebx+0xc],ebp
10020e49:	push   ebp
10020e4a:	push   ecx
10020e4b:	push   eax
10020e4c:	pop    eax
10020e4d:	pop    ecx
10020e4e:	pop    ebp
10020e4f:	pop    ecx
10020e50:	pop    ebx
10020e51:	ret    0x4
10020e54:	call   eax
10020e56:	ret    
10020e57:	push   esi
10020e58:	push   edi
10020e59:	xor    edi,edi
10020e5b:	lea    esi,[edi+0x10065600]
10020e61:	push   DWORD PTR [esi]
10020e63:	call   0x10019583
10020e68:	add    edi,0x4
10020e6b:	cmp    edi,0x28
10020e6e:	pop    ecx
10020e6f:	mov    DWORD PTR [esi],eax
10020e71:	jb     0x10020e5b
10020e73:	pop    edi
10020e74:	pop    esi
10020e75:	ret    
10020e76:	mov    eax,DWORD PTR [esp+0x4]
10020e7a:	mov    ds:0x10066c7c,eax
10020e7f:	ret    
10020e80:	mov    eax,DWORD PTR [esp+0x4]
10020e84:	mov    ds:0x10066c80,eax
10020e89:	ret    
10020e8a:	push   DWORD PTR [esp+0x4]
10020e8e:	call   DWORD PTR ds:0x1002c1e8
10020e94:	xor    eax,eax
10020e96:	inc    eax
10020e97:	ret    0x8
10020e9a:	push   0x14
10020e9c:	push   0x10058930
10020ea1:	call   0x10017a38
10020ea6:	xor    edi,edi
10020ea8:	mov    DWORD PTR [ebp-0x1c],edi
10020eab:	push   DWORD PTR ds:0x10066c80
10020eb1:	call   0x100195fa
10020eb6:	pop    ecx
10020eb7:	mov    esi,eax
10020eb9:	cmp    esi,edi
10020ebb:	jne    0x10020f10
10020ebd:	lea    eax,[ebp-0x1c]
10020ec0:	push   eax
10020ec1:	call   0x10019d68
10020ec6:	pop    ecx
10020ec7:	cmp    eax,edi
10020ec9:	je     0x10020ed8
10020ecb:	push   edi
10020ecc:	push   edi
10020ecd:	push   edi
10020ece:	push   edi
10020ecf:	push   edi
10020ed0:	call   0x10016023
10020ed5:	add    esp,0x14
10020ed8:	cmp    DWORD PTR [ebp-0x1c],0x1
10020edc:	je     0x10020eff
10020ede:	push   0x100504b0
10020ee3:	call   DWORD PTR ds:0x1002c100
10020ee9:	cmp    eax,edi
10020eeb:	je     0x10020eff
10020eed:	push   0x100515d8
10020ef2:	push   eax
10020ef3:	call   DWORD PTR ds:0x1002c044
10020ef9:	mov    esi,eax
10020efb:	cmp    esi,edi
10020efd:	jne    0x10020f04
10020eff:	mov    esi,0x10020e8a
10020f04:	push   esi
10020f05:	call   0x10019583
10020f0a:	pop    ecx
10020f0b:	mov    ds:0x10066c80,eax
10020f10:	mov    DWORD PTR [ebp-0x4],edi
10020f13:	push   DWORD PTR [ebp+0xc]
10020f16:	push   DWORD PTR [ebp+0x8]
10020f19:	call   esi
10020f1b:	mov    DWORD PTR [ebp-0x20],eax
10020f1e:	jmp    0x10020f4f
10020f20:	mov    eax,DWORD PTR [ebp-0x14]
10020f23:	mov    eax,DWORD PTR [eax]
10020f25:	mov    eax,DWORD PTR [eax]
10020f27:	mov    DWORD PTR [ebp-0x24],eax
10020f2a:	xor    ecx,ecx
10020f2c:	cmp    eax,0xc0000017
10020f31:	sete   cl
10020f34:	mov    eax,ecx
10020f36:	ret    
10020f37:	mov    esp,DWORD PTR [ebp-0x18]
10020f3a:	cmp    DWORD PTR [ebp-0x24],0xc0000017
10020f41:	jne    0x10020f4b
10020f43:	push   0x8
10020f45:	call   DWORD PTR ds:0x1002c078
10020f4b:	and    DWORD PTR [ebp-0x20],0x0
10020f4f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10020f56:	mov    eax,DWORD PTR [ebp-0x20]
10020f59:	call   0x10017a7d
10020f5e:	ret    
10020f5f:	mov    ax,WORD PTR [esp+0x4]
10020f64:	cmp    ax,0x30
10020f68:	jb     0x100210dd
10020f6e:	cmp    ax,0x3a
10020f72:	jae    0x10020f7b
10020f74:	movzx  eax,ax
10020f77:	sub    eax,0x30
10020f7a:	ret    
10020f7b:	mov    ecx,0xff10
10020f80:	cmp    ax,cx
10020f83:	jae    0x100210d3
10020f89:	mov    ecx,0x660
10020f8e:	cmp    ax,cx
10020f91:	jb     0x100210dd
10020f97:	cmp    ax,0x66a
10020f9b:	jae    0x10020fa3
10020f9d:	movzx  eax,ax
10020fa0:	sub    eax,ecx
10020fa2:	ret    
10020fa3:	mov    ecx,0x6f0
10020fa8:	cmp    ax,cx
10020fab:	jb     0x100210dd
10020fb1:	cmp    ax,0x6fa
10020fb5:	jb     0x10020f9d
10020fb7:	mov    ecx,0x966
10020fbc:	cmp    ax,cx
10020fbf:	jb     0x100210dd
10020fc5:	cmp    ax,0x970
10020fc9:	jb     0x10020f9d
10020fcb:	mov    ecx,0x9e6
10020fd0:	cmp    ax,cx
10020fd3:	jb     0x100210dd
10020fd9:	cmp    ax,0x9f0
10020fdd:	jb     0x10020f9d
10020fdf:	mov    ecx,0xa66
10020fe4:	cmp    ax,cx
10020fe7:	jb     0x100210dd
10020fed:	cmp    ax,0xa70
10020ff1:	jb     0x10020f9d
10020ff3:	mov    ecx,0xae6
10020ff8:	cmp    ax,cx
10020ffb:	jb     0x100210dd
10021001:	cmp    ax,0xaf0
10021005:	jb     0x10020f9d
10021007:	mov    ecx,0xb66
1002100c:	cmp    ax,cx
1002100f:	jb     0x100210dd
10021015:	cmp    ax,0xb70
10021019:	jb     0x10020f9d
1002101b:	mov    ecx,0xc66
10021020:	cmp    ax,cx
10021023:	jb     0x100210dd
10021029:	cmp    ax,0xc70
1002102d:	jb     0x10020f9d
10021033:	mov    ecx,0xce6
10021038:	cmp    ax,cx
1002103b:	jb     0x100210dd
10021041:	cmp    ax,0xcf0
10021045:	jb     0x10020f9d
1002104b:	mov    ecx,0xd66
10021050:	cmp    ax,cx
10021053:	jb     0x100210dd
10021059:	cmp    ax,0xd70
1002105d:	jb     0x10020f9d
10021063:	mov    ecx,0xe50
10021068:	cmp    ax,cx
1002106b:	jb     0x100210dd
1002106d:	cmp    ax,0xe5a
10021071:	jb     0x10020f9d
10021077:	mov    ecx,0xed0
1002107c:	cmp    ax,cx
1002107f:	jb     0x100210dd
10021081:	cmp    ax,0xeda
10021085:	jb     0x10020f9d
1002108b:	add    ecx,0x50
1002108e:	cmp    ax,cx
10021091:	jb     0x100210dd
10021093:	cmp    ax,0xf2a
10021097:	jb     0x10020f9d
1002109d:	mov    ecx,0x1040
100210a2:	cmp    ax,cx
100210a5:	jb     0x100210dd
100210a7:	cmp    ax,0x104a
100210ab:	jb     0x10020f9d
100210b1:	mov    ecx,0x17e0
100210b6:	cmp    ax,cx
100210b9:	jb     0x100210dd
100210bb:	cmp    ax,0x17ea
100210bf:	jb     0x10020f9d
100210c5:	add    ecx,0x30
100210c8:	cmp    ax,cx
100210cb:	jb     0x100210dd
100210cd:	cmp    ax,0x181a
100210d1:	jmp    0x100210d7
100210d3:	cmp    ax,0xff1a
100210d7:	jb     0x10020f9d
100210dd:	or     eax,0xffffffff
100210e0:	ret    
100210e1:	push   0xc
100210e3:	push   0x10058950
100210e8:	call   0x10017a38
100210ed:	and    DWORD PTR [ebp-0x4],0x0
100210f1:	movapd xmm0,xmm1
100210f5:	mov    DWORD PTR [ebp-0x1c],0x1
100210fc:	jmp    0x10021121
100210fe:	mov    eax,DWORD PTR [ebp-0x14]
10021101:	mov    eax,DWORD PTR [eax]
10021103:	mov    eax,DWORD PTR [eax]
10021105:	cmp    eax,0xc0000005
1002110a:	je     0x10021116
1002110c:	cmp    eax,0xc000001d
10021111:	je     0x10021116
10021113:	xor    eax,eax
10021115:	ret    
10021116:	xor    eax,eax
10021118:	inc    eax
10021119:	ret    
1002111a:	mov    esp,DWORD PTR [ebp-0x18]
1002111d:	and    DWORD PTR [ebp-0x1c],0x0
10021121:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10021128:	mov    eax,DWORD PTR [ebp-0x1c]
1002112b:	call   0x10017a7d
10021130:	ret    
10021131:	push   ebp
10021132:	mov    ebp,esp
10021134:	sub    esp,0x18
10021137:	xor    eax,eax
10021139:	push   ebx
1002113a:	mov    DWORD PTR [ebp-0x4],eax
1002113d:	mov    DWORD PTR [ebp-0xc],eax
10021140:	mov    DWORD PTR [ebp-0x8],eax
10021143:	push   ebx
10021144:	pushf  
10021145:	pop    eax
10021146:	mov    ecx,eax
10021148:	xor    eax,0x200000
1002114d:	push   eax
1002114e:	popf   
1002114f:	pushf  
10021150:	pop    edx
10021151:	sub    edx,ecx
10021153:	je     0x10021174
10021155:	push   ecx
10021156:	popf   
10021157:	xor    eax,eax
10021159:	cpuid  
1002115b:	mov    DWORD PTR [ebp-0xc],eax
1002115e:	mov    DWORD PTR [ebp-0x18],ebx
10021161:	mov    DWORD PTR [ebp-0x14],edx
10021164:	mov    DWORD PTR [ebp-0x10],ecx
10021167:	mov    eax,0x1
1002116c:	cpuid  
1002116e:	mov    DWORD PTR [ebp-0x4],edx
10021171:	mov    DWORD PTR [ebp-0x8],eax
10021174:	pop    ebx
10021175:	test   DWORD PTR [ebp-0x4],0x4000000
1002117c:	je     0x1002118c
1002117e:	call   0x100210e1
10021183:	test   eax,eax
10021185:	je     0x1002118c
10021187:	xor    eax,eax
10021189:	inc    eax
1002118a:	jmp    0x1002118e
1002118c:	xor    eax,eax
1002118e:	pop    ebx
1002118f:	leave  
10021190:	ret    
10021191:	call   0x10021131
10021196:	mov    ds:0x100680a0,eax
1002119b:	xor    eax,eax
1002119d:	ret    
1002119e:	push   ebp
1002119f:	mov    ebp,esp
100211a1:	sub    esp,0x20
100211a4:	push   ebx
100211a5:	push   esi
100211a6:	push   edi
100211a7:	call   0x100195f1
100211ac:	xor    ebx,ebx
100211ae:	cmp    DWORD PTR ds:0x10066cc0,ebx
100211b4:	mov    DWORD PTR [ebp-0x8],eax
100211b7:	mov    DWORD PTR [ebp-0x4],ebx
100211ba:	mov    DWORD PTR [ebp-0xc],ebx
100211bd:	mov    DWORD PTR [ebp-0x10],ebx
100211c0:	jne    0x10021274
100211c6:	push   0x10051d74
100211cb:	call   DWORD PTR ds:0x1002c048
100211d1:	mov    edi,eax
100211d3:	cmp    edi,ebx
100211d5:	je     0x10021354
100211db:	mov    esi,DWORD PTR ds:0x1002c044
100211e1:	push   0x10051d68
100211e6:	push   edi
100211e7:	call   esi
100211e9:	cmp    eax,ebx
100211eb:	je     0x10021354
100211f1:	push   eax
100211f2:	call   0x10019583
100211f7:	mov    DWORD PTR [esp],0x10051d58
100211fe:	push   edi
100211ff:	mov    ds:0x10066cc0,eax
10021204:	call   esi
10021206:	push   eax
10021207:	call   0x10019583
1002120c:	mov    DWORD PTR [esp],0x10051d44
10021213:	push   edi
10021214:	mov    ds:0x10066cc4,eax
10021219:	call   esi
1002121b:	push   eax
1002121c:	call   0x10019583
10021221:	mov    ds:0x10066cc8,eax
10021226:	lea    eax,[ebp-0xc]
10021229:	push   eax
1002122a:	call   0x10019d68
1002122f:	test   eax,eax
10021231:	pop    ecx
10021232:	pop    ecx
10021233:	je     0x10021242
10021235:	push   ebx
10021236:	push   ebx
10021237:	push   ebx
10021238:	push   ebx
10021239:	push   ebx
1002123a:	call   0x10016023
1002123f:	add    esp,0x14
10021242:	cmp    DWORD PTR [ebp-0xc],0x2
10021246:	jne    0x10021274
10021248:	push   0x10051d28
1002124d:	push   edi
1002124e:	call   esi
10021250:	push   eax
10021251:	call   0x10019583
10021256:	cmp    eax,ebx
10021258:	pop    ecx
10021259:	mov    ds:0x10066cd0,eax
1002125e:	je     0x10021274
10021260:	push   0x10051d10
10021265:	push   edi
10021266:	call   esi
10021268:	push   eax
10021269:	call   0x10019583
1002126e:	pop    ecx
1002126f:	mov    ds:0x10066ccc,eax
10021274:	mov    eax,ds:0x10066ccc
10021279:	mov    ecx,DWORD PTR [ebp-0x8]
1002127c:	cmp    eax,ecx
1002127e:	je     0x100212f9
10021280:	cmp    DWORD PTR ds:0x10066cd0,ecx
10021286:	je     0x100212f9
10021288:	push   eax
10021289:	call   0x100195fa
1002128e:	push   DWORD PTR ds:0x10066cd0
10021294:	mov    esi,eax
10021296:	call   0x100195fa
1002129b:	cmp    esi,ebx
1002129d:	pop    ecx
1002129e:	pop    ecx
1002129f:	mov    edi,eax
100212a1:	je     0x100212f9
100212a3:	cmp    edi,ebx
100212a5:	je     0x100212f9
100212a7:	call   esi
100212a9:	cmp    eax,ebx
100212ab:	je     0x100212c6
100212ad:	lea    ecx,[ebp-0x14]
100212b0:	push   ecx
100212b1:	push   0xc
100212b3:	lea    ecx,[ebp-0x20]
100212b6:	push   ecx
100212b7:	push   0x1
100212b9:	push   eax
100212ba:	call   edi
100212bc:	test   eax,eax
100212be:	je     0x100212c6
100212c0:	test   BYTE PTR [ebp-0x18],0x1
100212c4:	jne    0x100212f9
100212c6:	lea    eax,[ebp-0x10]
100212c9:	push   eax
100212ca:	call   0x10019d9f
100212cf:	test   eax,eax
100212d1:	pop    ecx
100212d2:	je     0x100212e1
100212d4:	push   ebx
100212d5:	push   ebx
100212d6:	push   ebx
100212d7:	push   ebx
100212d8:	push   ebx
100212d9:	call   0x10016023
100212de:	add    esp,0x14
100212e1:	cmp    DWORD PTR [ebp-0x10],0x4
100212e5:	jb     0x100212f0
100212e7:	or     DWORD PTR [ebp+0x10],0x200000
100212ee:	jmp    0x10021334
100212f0:	or     DWORD PTR [ebp+0x10],0x40000
100212f7:	jmp    0x10021334
100212f9:	mov    eax,ds:0x10066cc4
100212fe:	cmp    eax,DWORD PTR [ebp-0x8]
10021301:	je     0x10021334
10021303:	push   eax
10021304:	call   0x100195fa
10021309:	cmp    eax,ebx
1002130b:	pop    ecx
1002130c:	je     0x10021334
1002130e:	call   eax
10021310:	cmp    eax,ebx
10021312:	mov    DWORD PTR [ebp-0x4],eax
10021315:	je     0x10021334
10021317:	mov    eax,ds:0x10066cc8
1002131c:	cmp    eax,DWORD PTR [ebp-0x8]
1002131f:	je     0x10021334
10021321:	push   eax
10021322:	call   0x100195fa
10021327:	cmp    eax,ebx
10021329:	pop    ecx
1002132a:	je     0x10021334
1002132c:	push   DWORD PTR [ebp-0x4]
1002132f:	call   eax
10021331:	mov    DWORD PTR [ebp-0x4],eax
10021334:	push   DWORD PTR ds:0x10066cc0
1002133a:	call   0x100195fa
1002133f:	cmp    eax,ebx
10021341:	pop    ecx
10021342:	je     0x10021354
10021344:	push   DWORD PTR [ebp+0x10]
10021347:	push   DWORD PTR [ebp+0xc]
1002134a:	push   DWORD PTR [ebp+0x8]
1002134d:	push   DWORD PTR [ebp-0x4]
10021350:	call   eax
10021352:	jmp    0x10021356
10021354:	xor    eax,eax
10021356:	pop    edi
10021357:	pop    esi
10021358:	pop    ebx
10021359:	leave  
1002135a:	ret    
1002135b:	mov    ecx,DWORD PTR [esp+0x4]
1002135f:	push   esi
10021360:	xor    esi,esi
10021362:	cmp    ecx,esi
10021364:	jl     0x10021384
10021366:	cmp    ecx,0x2
10021369:	jle    0x10021377
1002136b:	cmp    ecx,0x3
1002136e:	jne    0x10021384
10021370:	mov    eax,ds:0x100662e0
10021375:	pop    esi
10021376:	ret    
10021377:	mov    eax,ds:0x100662e0
1002137c:	mov    DWORD PTR ds:0x100662e0,ecx
10021382:	pop    esi
10021383:	ret    
10021384:	call   0x10019ffe
10021389:	push   esi
1002138a:	push   esi
1002138b:	push   esi
1002138c:	push   esi
1002138d:	push   esi
1002138e:	mov    DWORD PTR [eax],0x16
10021394:	call   0x1001611f
10021399:	add    esp,0x14
1002139c:	or     eax,0xffffffff
1002139f:	pop    esi
100213a0:	ret    
100213a1:	push   ebp
100213a2:	mov    ebp,esp
100213a4:	sub    esp,0x10
100213a7:	mov    eax,ds:0x10064694
100213ac:	xor    eax,ebp
100213ae:	mov    DWORD PTR [ebp-0x4],eax
100213b1:	cmp    DWORD PTR [ebp+0x14],0xffffffff
100213b5:	push   ebx
100213b6:	push   esi
100213b7:	push   edi
100213b8:	jge    0x100213c1
100213ba:	xor    eax,eax
100213bc:	jmp    0x100215b3
100213c1:	mov    eax,ds:0x10066cd4
100213c6:	mov    esi,DWORD PTR ds:0x1002c178
100213cc:	xor    ebx,ebx
100213ce:	xor    edi,edi
100213d0:	inc    ebx
100213d1:	cmp    eax,edi
100213d3:	jne    0x10021408
100213d5:	lea    eax,[ebp-0x8]
100213d8:	push   eax
100213d9:	push   ebx
100213da:	push   0x10057130
100213df:	push   ebx
100213e0:	call   esi
100213e2:	test   eax,eax
100213e4:	je     0x100213ee
100213e6:	mov    DWORD PTR ds:0x10066cd4,ebx
100213ec:	jmp    0x1002140c
100213ee:	call   DWORD PTR ds:0x1002c07c
100213f4:	cmp    eax,0x78
100213f7:	jne    0x10021403
100213f9:	push   0x2
100213fb:	pop    eax
100213fc:	mov    ds:0x10066cd4,eax
10021401:	jmp    0x10021408
10021403:	mov    eax,ds:0x10066cd4
10021408:	cmp    eax,ebx
1002140a:	jne    0x1002141f
1002140c:	push   DWORD PTR [ebp+0x18]
1002140f:	push   DWORD PTR [ebp+0x14]
10021412:	push   DWORD PTR [ebp+0x10]
10021415:	push   DWORD PTR [ebp+0xc]
10021418:	call   esi
1002141a:	jmp    0x100215b3
1002141f:	cmp    eax,0x2
10021422:	je     0x10021428
10021424:	cmp    eax,edi
10021426:	jne    0x100213ba
10021428:	cmp    DWORD PTR [ebp+0x20],edi
1002142b:	mov    DWORD PTR [ebp-0xc],edi
1002142e:	jne    0x1002143b
10021430:	mov    eax,DWORD PTR [ebp+0x8]
10021433:	mov    eax,DWORD PTR [eax]
10021435:	mov    eax,DWORD PTR [eax+0x14]
10021438:	mov    DWORD PTR [ebp+0x20],eax
1002143b:	cmp    DWORD PTR [ebp+0x1c],edi
1002143e:	jne    0x1002144b
10021440:	mov    eax,DWORD PTR [ebp+0x8]
10021443:	mov    eax,DWORD PTR [eax]
10021445:	mov    eax,DWORD PTR [eax+0x4]
10021448:	mov    DWORD PTR [ebp+0x1c],eax
1002144b:	push   DWORD PTR [ebp+0x20]
1002144e:	call   0x100207f0
10021453:	cmp    DWORD PTR [ebp+0x1c],eax
10021456:	pop    ecx
10021457:	je     0x10021461
10021459:	cmp    eax,0xffffffff
1002145c:	je     0x10021461
1002145e:	mov    DWORD PTR [ebp+0x1c],eax
10021461:	mov    ebx,DWORD PTR ds:0x1002c02c
10021467:	push   edi
10021468:	push   edi
10021469:	push   edi
1002146a:	push   edi
1002146b:	push   DWORD PTR [ebp+0x14]
1002146e:	push   DWORD PTR [ebp+0x10]
10021471:	push   edi
10021472:	push   DWORD PTR [ebp+0x1c]
10021475:	call   ebx
10021477:	mov    esi,eax
10021479:	cmp    esi,edi
1002147b:	mov    DWORD PTR [ebp-0x10],esi
1002147e:	je     0x100213ba
10021484:	jle    0x100214c1
10021486:	cmp    esi,0xffffffe0
10021489:	ja     0x100214c1
1002148b:	lea    eax,[esi+0x8]
1002148e:	cmp    eax,0x400
10021493:	ja     0x100214a8
10021495:	call   0x10015af0
1002149a:	mov    eax,esp
1002149c:	cmp    eax,edi
1002149e:	je     0x100214bc
100214a0:	mov    DWORD PTR [eax],0xcccc
100214a6:	jmp    0x100214b9
100214a8:	push   eax
100214a9:	call   0x10016c12
100214ae:	cmp    eax,edi
100214b0:	pop    ecx
100214b1:	je     0x100214bc
100214b3:	mov    DWORD PTR [eax],0xdddd
100214b9:	add    eax,0x8
100214bc:	mov    DWORD PTR [ebp-0x8],eax
100214bf:	jmp    0x100214c4
100214c1:	mov    DWORD PTR [ebp-0x8],edi
100214c4:	cmp    DWORD PTR [ebp-0x8],edi
100214c7:	je     0x100213ba
100214cd:	push   esi
100214ce:	push   edi
100214cf:	push   DWORD PTR [ebp-0x8]
100214d2:	call   0x10016530
100214d7:	add    esp,0xc
100214da:	push   edi
100214db:	push   edi
100214dc:	push   esi
100214dd:	push   DWORD PTR [ebp-0x8]
100214e0:	push   DWORD PTR [ebp+0x14]
100214e3:	push   DWORD PTR [ebp+0x10]
100214e6:	push   edi
100214e7:	push   DWORD PTR [ebp+0x1c]
100214ea:	call   ebx
100214ec:	test   eax,eax
100214ee:	je     0x100215a7
100214f4:	lea    eax,[esi+0x1]
100214f7:	cmp    eax,edi
100214f9:	jle    0x1002153f
100214fb:	cmp    eax,0x7ffffff0
10021500:	ja     0x1002153f
10021502:	lea    eax,[esi+esi*1+0xa]
10021506:	cmp    eax,0x400
1002150b:	ja     0x10021527
1002150d:	call   0x10015af0
10021512:	mov    ebx,esp
10021514:	cmp    ebx,edi
10021516:	je     0x100215a7
1002151c:	mov    DWORD PTR [ebx],0xcccc
10021522:	add    ebx,0x8
10021525:	jmp    0x10021541
10021527:	push   eax
10021528:	call   0x10016c12
1002152d:	cmp    eax,edi
1002152f:	pop    ecx
10021530:	je     0x1002153b
10021532:	mov    DWORD PTR [eax],0xdddd
10021538:	add    eax,0x8
1002153b:	mov    ebx,eax
1002153d:	jmp    0x10021541
1002153f:	xor    ebx,ebx
10021541:	cmp    ebx,edi
10021543:	je     0x100215a7
10021545:	cmp    DWORD PTR [ebp+0x20],edi
10021548:	jne    0x10021555
1002154a:	mov    eax,DWORD PTR [ebp+0x8]
1002154d:	mov    eax,DWORD PTR [eax]
1002154f:	mov    eax,DWORD PTR [eax+0x14]
10021552:	mov    DWORD PTR [ebp+0x20],eax
10021555:	mov    edi,DWORD PTR [ebp+0x14]
10021558:	push   ebx
10021559:	push   DWORD PTR [ebp-0x10]
1002155c:	add    edi,edi
1002155e:	push   DWORD PTR [ebp-0x8]
10021561:	lea    esi,[edi+ebx*1]
10021564:	push   DWORD PTR [ebp+0xc]
10021567:	or     WORD PTR [esi],0xffff
1002156c:	push   DWORD PTR [ebp+0x20]
1002156f:	or     WORD PTR [esi-0x2],0xffff
10021575:	call   DWORD PTR ds:0x1002c174
1002157b:	cmp    WORD PTR [esi-0x2],0xffff
10021581:	mov    DWORD PTR [ebp-0xc],eax
10021584:	je     0x1002159c
10021586:	cmp    WORD PTR [esi],0xffff
1002158b:	jne    0x1002159c
1002158d:	push   edi
1002158e:	push   ebx
1002158f:	push   DWORD PTR [ebp+0x18]
10021592:	call   0x1001a1e0
10021597:	add    esp,0xc
1002159a:	jmp    0x100215a0
1002159c:	and    DWORD PTR [ebp-0xc],0x0
100215a0:	push   ebx
100215a1:	call   0x10017a1c
100215a6:	pop    ecx
100215a7:	push   DWORD PTR [ebp-0x8]
100215aa:	call   0x10017a1c
100215af:	mov    eax,DWORD PTR [ebp-0xc]
100215b2:	pop    ecx
100215b3:	lea    esp,[ebp-0x1c]
100215b6:	pop    edi
100215b7:	pop    esi
100215b8:	pop    ebx
100215b9:	mov    ecx,DWORD PTR [ebp-0x4]
100215bc:	xor    ecx,ebp
100215be:	call   0x10015adb
100215c3:	leave  
100215c4:	ret    
100215c5:	push   ebp
100215c6:	mov    ebp,esp
100215c8:	sub    esp,0x10
100215cb:	push   DWORD PTR [ebp+0x8]
100215ce:	lea    ecx,[ebp-0x10]
100215d1:	call   0x100165aa
100215d6:	push   DWORD PTR [ebp+0x20]
100215d9:	lea    eax,[ebp-0x10]
100215dc:	push   DWORD PTR [ebp+0x1c]
100215df:	push   DWORD PTR [ebp+0x18]
100215e2:	push   DWORD PTR [ebp+0x14]
100215e5:	push   DWORD PTR [ebp+0x10]
100215e8:	push   DWORD PTR [ebp+0xc]
100215eb:	push   eax
100215ec:	call   0x100213a1
100215f1:	add    esp,0x1c
100215f4:	cmp    BYTE PTR [ebp-0x4],0x0
100215f8:	je     0x10021601
100215fa:	mov    ecx,DWORD PTR [ebp-0x8]
100215fd:	and    DWORD PTR [ecx+0x70],0xfffffffd
10021601:	leave  
10021602:	ret    
10021603:	inc    DWORD PTR ds:0x10066c50
10021609:	push   0x1000
1002160e:	call   0x100185a5
10021613:	test   eax,eax
10021615:	pop    ecx
10021616:	mov    ecx,DWORD PTR [esp+0x4]
1002161a:	mov    DWORD PTR [ecx+0x8],eax
1002161d:	je     0x1002162c
1002161f:	or     DWORD PTR [ecx+0xc],0x8
10021623:	mov    DWORD PTR [ecx+0x18],0x1000
1002162a:	jmp    0x1002163d
1002162c:	or     DWORD PTR [ecx+0xc],0x4
10021630:	lea    eax,[ecx+0x14]
10021633:	mov    DWORD PTR [ecx+0x8],eax
10021636:	mov    DWORD PTR [ecx+0x18],0x2
1002163d:	mov    eax,DWORD PTR [ecx+0x8]
10021640:	and    DWORD PTR [ecx+0x4],0x0
10021644:	mov    DWORD PTR [ecx],eax
10021646:	ret    
10021647:	mov    eax,DWORD PTR [esp+0x4]
1002164b:	cmp    eax,0xfffffffe
1002164e:	jne    0x1002165e
10021650:	call   0x10019ffe
10021655:	mov    DWORD PTR [eax],0x9
1002165b:	xor    eax,eax
1002165d:	ret    
1002165e:	push   esi
1002165f:	xor    esi,esi
10021661:	cmp    eax,esi
10021663:	jl     0x1002166d
10021665:	cmp    eax,DWORD PTR ds:0x10067f64
1002166b:	jb     0x10021689
1002166d:	call   0x10019ffe
10021672:	push   esi
10021673:	push   esi
10021674:	push   esi
10021675:	push   esi
10021676:	push   esi
10021677:	mov    DWORD PTR [eax],0x9
1002167d:	call   0x1001611f
10021682:	add    esp,0x14
10021685:	xor    eax,eax
10021687:	pop    esi
10021688:	ret    
10021689:	mov    ecx,eax
1002168b:	and    eax,0x1f
1002168e:	sar    ecx,0x5
10021691:	mov    ecx,DWORD PTR [ecx*4+0x10067f80]
10021698:	shl    eax,0x6
1002169b:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
100216a0:	and    eax,0x40
100216a3:	pop    esi
100216a4:	ret    
100216a5:	push   ebp
100216a6:	mov    ebp,esp
100216a8:	sub    esp,0x10
100216ab:	mov    eax,ds:0x10064694
100216b0:	xor    eax,ebp
100216b2:	mov    DWORD PTR [ebp-0x4],eax
100216b5:	push   ebx
100216b6:	push   esi
100216b7:	mov    esi,DWORD PTR [ebp+0xc]
100216ba:	test   BYTE PTR [esi+0xc],0x40
100216be:	push   edi
100216bf:	jne    0x10021854
100216c5:	push   esi
100216c6:	call   0x1001e90b
100216cb:	cmp    eax,0xffffffff
100216ce:	pop    ecx
100216cf:	mov    edi,0x10065188
100216d4:	je     0x10021704
100216d6:	push   esi
100216d7:	call   0x1001e90b
100216dc:	cmp    eax,0xfffffffe
100216df:	pop    ecx
100216e0:	je     0x10021704
100216e2:	push   esi
100216e3:	call   0x1001e90b
100216e8:	sar    eax,0x5
100216eb:	push   esi
100216ec:	lea    ebx,[eax*4+0x10067f80]
100216f3:	call   0x1001e90b
100216f8:	and    eax,0x1f
100216fb:	pop    ecx
100216fc:	shl    eax,0x6
100216ff:	add    eax,DWORD PTR [ebx]
10021701:	pop    ecx
10021702:	jmp    0x10021706
10021704:	mov    eax,edi
10021706:	mov    al,BYTE PTR [eax+0x24]
10021709:	and    al,0x7f
1002170b:	cmp    al,0x2
1002170d:	je     0x10021854
10021713:	push   esi
10021714:	call   0x1001e90b
10021719:	cmp    eax,0xffffffff
1002171c:	pop    ecx
1002171d:	je     0x1002174d
1002171f:	push   esi
10021720:	call   0x1001e90b
10021725:	cmp    eax,0xfffffffe
10021728:	pop    ecx
10021729:	je     0x1002174d
1002172b:	push   esi
1002172c:	call   0x1001e90b
10021731:	sar    eax,0x5
10021734:	push   esi
10021735:	lea    ebx,[eax*4+0x10067f80]
1002173c:	call   0x1001e90b
10021741:	and    eax,0x1f
10021744:	pop    ecx
10021745:	shl    eax,0x6
10021748:	add    eax,DWORD PTR [ebx]
1002174a:	pop    ecx
1002174b:	jmp    0x1002174f
1002174d:	mov    eax,edi
1002174f:	mov    al,BYTE PTR [eax+0x24]
10021752:	and    al,0x7f
10021754:	cmp    al,0x1
10021756:	jne    0x100217b4
10021758:	dec    DWORD PTR [esi+0x4]
1002175b:	mov    ebx,DWORD PTR [ebp+0x8]
1002175e:	js     0x1002176e
10021760:	mov    eax,DWORD PTR [esi]
10021762:	mov    BYTE PTR [eax],bl
10021764:	mov    ecx,DWORD PTR [esi]
10021766:	movzx  eax,BYTE PTR [ecx]
10021769:	inc    ecx
1002176a:	mov    DWORD PTR [esi],ecx
1002176c:	jmp    0x1002177a
1002176e:	movsx  eax,bl
10021771:	push   esi
10021772:	push   eax
10021773:	call   0x1001cdfa
10021778:	pop    ecx
10021779:	pop    ecx
1002177a:	cmp    eax,0xffffffff
1002177d:	jne    0x10021788
1002177f:	or     ax,0xffff
10021783:	jmp    0x10021874
10021788:	dec    DWORD PTR [esi+0x4]
1002178b:	js     0x1002179b
1002178d:	mov    eax,DWORD PTR [esi]
1002178f:	mov    BYTE PTR [eax],bh
10021791:	mov    ecx,DWORD PTR [esi]
10021793:	movzx  eax,BYTE PTR [ecx]
10021796:	inc    ecx
10021797:	mov    DWORD PTR [esi],ecx
10021799:	jmp    0x100217a7
1002179b:	movsx  eax,bh
1002179e:	push   esi
1002179f:	push   eax
100217a0:	call   0x1001cdfa
100217a5:	pop    ecx
100217a6:	pop    ecx
100217a7:	cmp    eax,0xffffffff
100217aa:	je     0x1002177f
100217ac:	mov    ax,bx
100217af:	jmp    0x10021874
100217b4:	push   esi
100217b5:	call   0x1001e90b
100217ba:	cmp    eax,0xffffffff
100217bd:	pop    ecx
100217be:	je     0x100217ee
100217c0:	push   esi
100217c1:	call   0x1001e90b
100217c6:	cmp    eax,0xfffffffe
100217c9:	pop    ecx
100217ca:	je     0x100217ee
100217cc:	push   esi
100217cd:	call   0x1001e90b
100217d2:	sar    eax,0x5
100217d5:	push   esi
100217d6:	lea    ebx,[eax*4+0x10067f80]
100217dd:	call   0x1001e90b
100217e2:	and    eax,0x1f
100217e5:	pop    ecx
100217e6:	shl    eax,0x6
100217e9:	add    eax,DWORD PTR [ebx]
100217eb:	pop    ecx
100217ec:	jmp    0x100217f0
100217ee:	mov    eax,edi
100217f0:	test   BYTE PTR [eax+0x4],0x80
100217f4:	je     0x10021854
100217f6:	push   DWORD PTR [ebp+0x8]
100217f9:	lea    eax,[ebp-0xc]
100217fc:	push   0x5
100217fe:	push   eax
100217ff:	lea    eax,[ebp-0x10]
10021802:	push   eax
10021803:	call   0x10021ca2
10021808:	add    esp,0x10
1002180b:	test   eax,eax
1002180d:	jne    0x1002177f
10021813:	xor    ebx,ebx
10021815:	cmp    DWORD PTR [ebp-0x10],ebx
10021818:	jle    0x1002184e
1002181a:	dec    DWORD PTR [esi+0x4]
1002181d:	js     0x10021831
1002181f:	mov    eax,DWORD PTR [esi]
10021821:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
10021825:	mov    BYTE PTR [eax],cl
10021827:	mov    ecx,DWORD PTR [esi]
10021829:	movzx  eax,BYTE PTR [ecx]
1002182c:	inc    ecx
1002182d:	mov    DWORD PTR [esi],ecx
1002182f:	jmp    0x1002183f
10021831:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
10021836:	push   esi
10021837:	push   eax
10021838:	call   0x1001cdfa
1002183d:	pop    ecx
1002183e:	pop    ecx
1002183f:	cmp    eax,0xffffffff
10021842:	je     0x1002177f
10021848:	inc    ebx
10021849:	cmp    ebx,DWORD PTR [ebp-0x10]
1002184c:	jl     0x1002181a
1002184e:	mov    ax,WORD PTR [ebp+0x8]
10021852:	jmp    0x10021874
10021854:	add    DWORD PTR [esi+0x4],0xfffffffe
10021858:	js     0x10021867
1002185a:	mov    ecx,DWORD PTR [esi]
1002185c:	mov    eax,DWORD PTR [ebp+0x8]
1002185f:	mov    WORD PTR [ecx],ax
10021862:	add    DWORD PTR [esi],0x2
10021865:	jmp    0x10021874
10021867:	movzx  eax,WORD PTR [ebp+0x8]
1002186b:	push   esi
1002186c:	push   eax
1002186d:	call   0x10023779
10021872:	pop    ecx
10021873:	pop    ecx
10021874:	mov    ecx,DWORD PTR [ebp-0x4]
10021877:	pop    edi
10021878:	pop    esi
10021879:	xor    ecx,ebp
1002187b:	pop    ebx
1002187c:	call   0x10015adb
10021881:	leave  
10021882:	ret    
10021883:	mov    eax,ds:0x10064694
10021888:	or     eax,0x1
1002188b:	xor    ecx,ecx
1002188d:	cmp    DWORD PTR ds:0x10066cd8,eax
10021893:	sete   cl
10021896:	mov    eax,ecx
10021898:	ret    
10021899:	push   ebp
1002189a:	mov    ebp,esp
1002189c:	sub    esp,0x10
1002189f:	push   ebx
100218a0:	push   esi
100218a1:	mov    esi,DWORD PTR [ebp+0xc]
100218a4:	xor    ebx,ebx
100218a6:	cmp    esi,ebx
100218a8:	je     0x100218bd
100218aa:	cmp    DWORD PTR [ebp+0x10],ebx
100218ad:	je     0x100218bd
100218af:	cmp    BYTE PTR [esi],bl
100218b1:	jne    0x100218c3
100218b3:	mov    eax,DWORD PTR [ebp+0x8]
100218b6:	cmp    eax,ebx
100218b8:	je     0x100218bd
100218ba:	mov    WORD PTR [eax],bx
100218bd:	xor    eax,eax
100218bf:	pop    esi
100218c0:	pop    ebx
100218c1:	leave  
100218c2:	ret    
100218c3:	push   DWORD PTR [ebp+0x14]
100218c6:	lea    ecx,[ebp-0x10]
100218c9:	call   0x100165aa
100218ce:	mov    eax,DWORD PTR [ebp-0x10]
100218d1:	cmp    DWORD PTR [eax+0x14],ebx
100218d4:	jne    0x100218f5
100218d6:	mov    eax,DWORD PTR [ebp+0x8]
100218d9:	cmp    eax,ebx
100218db:	je     0x100218e4
100218dd:	movzx  cx,BYTE PTR [esi]
100218e1:	mov    WORD PTR [eax],cx
100218e4:	cmp    BYTE PTR [ebp-0x4],bl
100218e7:	je     0x100218f0
100218e9:	mov    eax,DWORD PTR [ebp-0x8]
100218ec:	and    DWORD PTR [eax+0x70],0xfffffffd
100218f0:	xor    eax,eax
100218f2:	inc    eax
100218f3:	jmp    0x100218bf
100218f5:	lea    eax,[ebp-0x10]
100218f8:	push   eax
100218f9:	movzx  eax,BYTE PTR [esi]
100218fc:	push   eax
100218fd:	call   0x10016fe7
10021902:	test   eax,eax
10021904:	pop    ecx
10021905:	pop    ecx
10021906:	je     0x10021985
10021908:	mov    eax,DWORD PTR [ebp-0x10]
1002190b:	mov    ecx,DWORD PTR [eax+0xac]
10021911:	cmp    ecx,0x1
10021914:	jle    0x1002193b
10021916:	cmp    DWORD PTR [ebp+0x10],ecx
10021919:	jl     0x1002193b
1002191b:	xor    edx,edx
1002191d:	cmp    DWORD PTR [ebp+0x8],ebx
10021920:	setne  dl
10021923:	push   edx
10021924:	push   DWORD PTR [ebp+0x8]
10021927:	push   ecx
10021928:	push   esi
10021929:	push   0x9
1002192b:	push   DWORD PTR [eax+0x4]
1002192e:	call   DWORD PTR ds:0x1002c080
10021934:	test   eax,eax
10021936:	mov    eax,DWORD PTR [ebp-0x10]
10021939:	jne    0x1002194b
1002193b:	mov    ecx,DWORD PTR [ebp+0x10]
1002193e:	cmp    ecx,DWORD PTR [eax+0xac]
10021944:	jb     0x10021966
10021946:	cmp    BYTE PTR [esi+0x1],bl
10021949:	je     0x10021966
1002194b:	cmp    BYTE PTR [ebp-0x4],bl
1002194e:	mov    eax,DWORD PTR [eax+0xac]
10021954:	je     0x100218bf
1002195a:	mov    ecx,DWORD PTR [ebp-0x8]
1002195d:	and    DWORD PTR [ecx+0x70],0xfffffffd
10021961:	jmp    0x100218bf
10021966:	call   0x10019ffe
1002196b:	mov    DWORD PTR [eax],0x2a
10021971:	cmp    BYTE PTR [ebp-0x4],bl
10021974:	je     0x1002197d
10021976:	mov    eax,DWORD PTR [ebp-0x8]
10021979:	and    DWORD PTR [eax+0x70],0xfffffffd
1002197d:	or     eax,0xffffffff
10021980:	jmp    0x100218bf
10021985:	xor    eax,eax
10021987:	cmp    DWORD PTR [ebp+0x8],ebx
1002198a:	setne  al
1002198d:	push   eax
1002198e:	push   DWORD PTR [ebp+0x8]
10021991:	mov    eax,DWORD PTR [ebp-0x10]
10021994:	push   0x1
10021996:	push   esi
10021997:	push   0x9
10021999:	push   DWORD PTR [eax+0x4]
1002199c:	call   DWORD PTR ds:0x1002c080
100219a2:	test   eax,eax
100219a4:	jne    0x100218e4
100219aa:	jmp    0x10021966
100219ac:	push   0x0
100219ae:	push   DWORD PTR [esp+0x10]
100219b2:	push   DWORD PTR [esp+0x10]
100219b6:	push   DWORD PTR [esp+0x10]
100219ba:	call   0x10021899
100219bf:	add    esp,0x10
100219c2:	ret    
100219c3:	push   0x10
100219c5:	push   0x10058970
100219ca:	call   0x10017a38
100219cf:	xor    ebx,ebx
100219d1:	mov    DWORD PTR [ebp-0x1c],ebx
100219d4:	push   0x1
100219d6:	call   0x1001b6ab
100219db:	pop    ecx
100219dc:	mov    DWORD PTR [ebp-0x4],ebx
100219df:	push   0x3
100219e1:	pop    edi
100219e2:	mov    DWORD PTR [ebp-0x20],edi
100219e5:	cmp    edi,DWORD PTR ds:0x10067f60
100219eb:	jge    0x10021a44
100219ed:	mov    esi,edi
100219ef:	shl    esi,0x2
100219f2:	mov    eax,ds:0x10066f58
100219f7:	add    eax,esi
100219f9:	cmp    DWORD PTR [eax],ebx
100219fb:	je     0x10021a41
100219fd:	mov    eax,DWORD PTR [eax]
100219ff:	test   BYTE PTR [eax+0xc],0x83
10021a03:	je     0x10021a14
10021a05:	push   eax
10021a06:	call   0x100173c7
10021a0b:	pop    ecx
10021a0c:	cmp    eax,0xffffffff
10021a0f:	je     0x10021a14
10021a11:	inc    DWORD PTR [ebp-0x1c]
10021a14:	cmp    edi,0x14
10021a17:	jl     0x10021a41
10021a19:	mov    eax,ds:0x10066f58
10021a1e:	mov    eax,DWORD PTR [esi+eax*1]
10021a21:	add    eax,0x20
10021a24:	push   eax
10021a25:	call   DWORD PTR ds:0x1002c1ec
10021a2b:	mov    eax,ds:0x10066f58
10021a30:	push   DWORD PTR [esi+eax*1]
10021a33:	call   0x10016b35
10021a38:	pop    ecx
10021a39:	mov    eax,ds:0x10066f58
10021a3e:	mov    DWORD PTR [esi+eax*1],ebx
10021a41:	inc    edi
10021a42:	jmp    0x100219e2
10021a44:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10021a4b:	call   0x10021a59
10021a50:	mov    eax,DWORD PTR [ebp-0x1c]
10021a53:	call   0x10017a7d
10021a58:	ret    
10021a59:	push   0x1
10021a5b:	call   0x1001b5d3
10021a60:	pop    ecx
10021a61:	ret    
10021a62:	push   0x10
10021a64:	push   0x10058990
10021a69:	call   0x10017a38
10021a6e:	mov    eax,DWORD PTR [ebp+0x8]
10021a71:	cmp    eax,0xfffffffe
10021a74:	jne    0x10021a89
10021a76:	call   0x10019ffe
10021a7b:	mov    DWORD PTR [eax],0x9
10021a81:	or     eax,0xffffffff
10021a84:	jmp    0x10021b33
10021a89:	xor    ebx,ebx
10021a8b:	cmp    eax,ebx
10021a8d:	jl     0x10021a97
10021a8f:	cmp    eax,DWORD PTR ds:0x10067f64
10021a95:	jb     0x10021ab1
10021a97:	call   0x10019ffe
10021a9c:	mov    DWORD PTR [eax],0x9
10021aa2:	push   ebx
10021aa3:	push   ebx
10021aa4:	push   ebx
10021aa5:	push   ebx
10021aa6:	push   ebx
10021aa7:	call   0x1001611f
10021aac:	add    esp,0x14
10021aaf:	jmp    0x10021a81
10021ab1:	mov    ecx,eax
10021ab3:	sar    ecx,0x5
10021ab6:	lea    edi,[ecx*4+0x10067f80]
10021abd:	mov    esi,eax
10021abf:	and    esi,0x1f
10021ac2:	shl    esi,0x6
10021ac5:	mov    ecx,DWORD PTR [edi]
10021ac7:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
10021acc:	and    ecx,0x1
10021acf:	je     0x10021a97
10021ad1:	push   eax
10021ad2:	call   0x1001e4b7
10021ad7:	pop    ecx
10021ad8:	mov    DWORD PTR [ebp-0x4],ebx
10021adb:	mov    eax,DWORD PTR [edi]
10021add:	test   BYTE PTR [esi+eax*1+0x4],0x1
10021ae2:	je     0x10021b15
10021ae4:	push   DWORD PTR [ebp+0x8]
10021ae7:	call   0x1001e446
10021aec:	pop    ecx
10021aed:	push   eax
10021aee:	call   DWORD PTR ds:0x1002c154
10021af4:	test   eax,eax
10021af6:	jne    0x10021b03
10021af8:	call   DWORD PTR ds:0x1002c07c
10021afe:	mov    DWORD PTR [ebp-0x1c],eax
10021b01:	jmp    0x10021b06
10021b03:	mov    DWORD PTR [ebp-0x1c],ebx
10021b06:	cmp    DWORD PTR [ebp-0x1c],ebx
10021b09:	je     0x10021b24
10021b0b:	call   0x1001a011
10021b10:	mov    ecx,DWORD PTR [ebp-0x1c]
10021b13:	mov    DWORD PTR [eax],ecx
10021b15:	call   0x10019ffe
10021b1a:	mov    DWORD PTR [eax],0x9
10021b20:	or     DWORD PTR [ebp-0x1c],0xffffffff
10021b24:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10021b2b:	call   0x10021b39
10021b30:	mov    eax,DWORD PTR [ebp-0x1c]
10021b33:	call   0x10017a7d
10021b38:	ret    
10021b39:	push   DWORD PTR [ebp+0x8]
10021b3c:	call   0x1001e557
10021b41:	pop    ecx
10021b42:	ret    
10021b43:	push   ebp
10021b44:	mov    ebp,esp
10021b46:	sub    esp,0x10
10021b49:	push   ebx
10021b4a:	push   esi
10021b4b:	mov    esi,DWORD PTR [ebp+0xc]
10021b4e:	xor    ebx,ebx
10021b50:	cmp    esi,ebx
10021b52:	push   edi
10021b53:	mov    edi,DWORD PTR [ebp+0x10]
10021b56:	jne    0x10021b69
10021b58:	cmp    edi,ebx
10021b5a:	jbe    0x10021b69
10021b5c:	mov    eax,DWORD PTR [ebp+0x8]
10021b5f:	cmp    eax,ebx
10021b61:	je     0x10021b65
10021b63:	mov    DWORD PTR [eax],ebx
10021b65:	xor    eax,eax
10021b67:	jmp    0x10021be8
10021b69:	mov    eax,DWORD PTR [ebp+0x8]
10021b6c:	cmp    eax,ebx
10021b6e:	je     0x10021b73
10021b70:	or     DWORD PTR [eax],0xffffffff
10021b73:	cmp    edi,0x7fffffff
10021b79:	jbe    0x10021b96
10021b7b:	call   0x10019ffe
10021b80:	push   0x16
10021b82:	pop    esi
10021b83:	push   ebx
10021b84:	push   ebx
10021b85:	push   ebx
10021b86:	push   ebx
10021b87:	push   ebx
10021b88:	mov    DWORD PTR [eax],esi
10021b8a:	call   0x1001611f
10021b8f:	add    esp,0x14
10021b92:	mov    eax,esi
10021b94:	jmp    0x10021be8
10021b96:	push   DWORD PTR [ebp+0x18]
10021b99:	lea    ecx,[ebp-0x10]
10021b9c:	call   0x100165aa
10021ba1:	mov    eax,DWORD PTR [ebp-0x10]
10021ba4:	cmp    DWORD PTR [eax+0x14],ebx
10021ba7:	jne    0x10021c41
10021bad:	mov    ax,WORD PTR [ebp+0x14]
10021bb1:	cmp    ax,0xff
10021bb5:	jbe    0x10021bed
10021bb7:	cmp    esi,ebx
10021bb9:	je     0x10021bca
10021bbb:	cmp    edi,ebx
10021bbd:	jbe    0x10021bca
10021bbf:	push   edi
10021bc0:	push   ebx
10021bc1:	push   esi
10021bc2:	call   0x10016530
10021bc7:	add    esp,0xc
10021bca:	call   0x10019ffe
10021bcf:	mov    DWORD PTR [eax],0x2a
10021bd5:	call   0x10019ffe
10021bda:	cmp    BYTE PTR [ebp-0x4],bl
10021bdd:	mov    eax,DWORD PTR [eax]
10021bdf:	je     0x10021be8
10021be1:	mov    ecx,DWORD PTR [ebp-0x8]
10021be4:	and    DWORD PTR [ecx+0x70],0xfffffffd
10021be8:	pop    edi
10021be9:	pop    esi
10021bea:	pop    ebx
10021beb:	leave  
10021bec:	ret    
10021bed:	cmp    esi,ebx
10021bef:	je     0x10021c1f
10021bf1:	cmp    edi,ebx
10021bf3:	ja     0x10021c1d
10021bf5:	call   0x10019ffe
10021bfa:	push   0x22
10021bfc:	pop    esi
10021bfd:	push   ebx
10021bfe:	push   ebx
10021bff:	push   ebx
10021c00:	push   ebx
10021c01:	push   ebx
10021c02:	mov    DWORD PTR [eax],esi
10021c04:	call   0x1001611f
10021c09:	add    esp,0x14
10021c0c:	cmp    BYTE PTR [ebp-0x4],bl
10021c0f:	je     0x10021b92
10021c11:	mov    eax,DWORD PTR [ebp-0x8]
10021c14:	and    DWORD PTR [eax+0x70],0xfffffffd
10021c18:	jmp    0x10021b92
10021c1d:	mov    BYTE PTR [esi],al
10021c1f:	mov    eax,DWORD PTR [ebp+0x8]
10021c22:	cmp    eax,ebx
10021c24:	je     0x10021c2c
10021c26:	mov    DWORD PTR [eax],0x1
10021c2c:	cmp    BYTE PTR [ebp-0x4],bl
10021c2f:	je     0x10021b65
10021c35:	mov    eax,DWORD PTR [ebp-0x8]
10021c38:	and    DWORD PTR [eax+0x70],0xfffffffd
10021c3c:	jmp    0x10021b65
10021c41:	lea    ecx,[ebp+0xc]
10021c44:	push   ecx
10021c45:	push   ebx
10021c46:	push   edi
10021c47:	push   esi
10021c48:	push   0x1
10021c4a:	lea    ecx,[ebp+0x14]
10021c4d:	push   ecx
10021c4e:	push   ebx
10021c4f:	mov    DWORD PTR [ebp+0xc],ebx
10021c52:	push   DWORD PTR [eax+0x4]
10021c55:	call   DWORD PTR ds:0x1002c02c
10021c5b:	cmp    eax,ebx
10021c5d:	je     0x10021c73
10021c5f:	cmp    DWORD PTR [ebp+0xc],ebx
10021c62:	jne    0x10021bca
10021c68:	mov    ecx,DWORD PTR [ebp+0x8]
10021c6b:	cmp    ecx,ebx
10021c6d:	je     0x10021c2c
10021c6f:	mov    DWORD PTR [ecx],eax
10021c71:	jmp    0x10021c2c
10021c73:	call   DWORD PTR ds:0x1002c07c
10021c79:	cmp    eax,0x7a
10021c7c:	jne    0x10021bca
10021c82:	cmp    esi,ebx
10021c84:	je     0x10021bf5
10021c8a:	cmp    edi,ebx
10021c8c:	jbe    0x10021bf5
10021c92:	push   edi
10021c93:	push   ebx
10021c94:	push   esi
10021c95:	call   0x10016530
10021c9a:	add    esp,0xc
10021c9d:	jmp    0x10021bf5
10021ca2:	push   0x0
10021ca4:	push   DWORD PTR [esp+0x14]
10021ca8:	push   DWORD PTR [esp+0x14]
10021cac:	push   DWORD PTR [esp+0x14]
10021cb0:	push   DWORD PTR [esp+0x14]
10021cb4:	call   0x10021b43
10021cb9:	add    esp,0x14
10021cbc:	ret    
10021cbd:	push   ebp
10021cbe:	mov    ebp,esp
10021cc0:	sub    esp,0x10
10021cc3:	mov    eax,ds:0x10064694
10021cc8:	xor    eax,ebp
10021cca:	mov    DWORD PTR [ebp-0x4],eax
10021ccd:	push   esi
10021cce:	xor    esi,esi
10021cd0:	cmp    DWORD PTR ds:0x10065628,esi
10021cd6:	je     0x10021d26
10021cd8:	cmp    DWORD PTR ds:0x100659d4,0xfffffffe
10021cdf:	jne    0x10021ce6
10021ce1:	call   0x100238e9
10021ce6:	mov    eax,ds:0x100659d4
10021ceb:	cmp    eax,0xffffffff
10021cee:	jne    0x10021cf6
10021cf0:	or     ax,0xffff
10021cf4:	jmp    0x10021d66
10021cf6:	push   esi
10021cf7:	lea    ecx,[ebp-0x10]
10021cfa:	push   ecx
10021cfb:	push   0x1
10021cfd:	lea    ecx,[ebp+0x8]
10021d00:	push   ecx
10021d01:	push   eax
10021d02:	call   DWORD PTR ds:0x1002c184
10021d08:	test   eax,eax
10021d0a:	jne    0x10021d73
10021d0c:	cmp    DWORD PTR ds:0x10065628,0x2
10021d13:	jne    0x10021cf0
10021d15:	call   DWORD PTR ds:0x1002c07c
10021d1b:	cmp    eax,0x78
10021d1e:	jne    0x10021cf0
10021d20:	mov    DWORD PTR ds:0x10065628,esi
10021d26:	push   esi
10021d27:	push   esi
10021d28:	push   0x5
10021d2a:	lea    eax,[ebp-0xc]
10021d2d:	push   eax
10021d2e:	push   0x1
10021d30:	lea    eax,[ebp+0x8]
10021d33:	push   eax
10021d34:	push   esi
10021d35:	call   DWORD PTR ds:0x1002c180
10021d3b:	push   eax
10021d3c:	call   DWORD PTR ds:0x1002c02c
10021d42:	mov    ecx,DWORD PTR ds:0x100659d4
10021d48:	cmp    ecx,0xffffffff
10021d4b:	je     0x10021cf0
10021d4d:	push   esi
10021d4e:	lea    edx,[ebp-0x10]
10021d51:	push   edx
10021d52:	push   eax
10021d53:	lea    eax,[ebp-0xc]
10021d56:	push   eax
10021d57:	push   ecx
10021d58:	call   DWORD PTR ds:0x1002c17c
10021d5e:	test   eax,eax
10021d60:	je     0x10021cf0
10021d62:	mov    ax,WORD PTR [ebp+0x8]
10021d66:	mov    ecx,DWORD PTR [ebp-0x4]
10021d69:	xor    ecx,ebp
10021d6b:	pop    esi
10021d6c:	call   0x10015adb
10021d71:	leave  
10021d72:	ret    
10021d73:	mov    DWORD PTR ds:0x10065628,0x1
10021d7d:	jmp    0x10021d62
10021d7f:	push   ebp
10021d80:	mov    ebp,esp
10021d82:	sub    esp,0x2c
10021d85:	mov    eax,DWORD PTR [ebp+0x8]
10021d88:	movzx  ecx,WORD PTR [eax+0xa]
10021d8c:	push   ebx
10021d8d:	mov    ebx,ecx
10021d8f:	and    ecx,0x8000
10021d95:	mov    DWORD PTR [ebp-0x14],ecx
10021d98:	mov    ecx,DWORD PTR [eax+0x6]
10021d9b:	mov    DWORD PTR [ebp-0x20],ecx
10021d9e:	mov    ecx,DWORD PTR [eax+0x2]
10021da1:	movzx  eax,WORD PTR [eax]
10021da4:	and    ebx,0x7fff
10021daa:	sub    ebx,0x3fff
10021db0:	shl    eax,0x10
10021db3:	cmp    ebx,0xffffc001
10021db9:	push   edi
10021dba:	mov    DWORD PTR [ebp-0x1c],ecx
10021dbd:	mov    DWORD PTR [ebp-0x18],eax
10021dc0:	jne    0x10021de9
10021dc2:	xor    ebx,ebx
10021dc4:	xor    eax,eax
10021dc6:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
10021dca:	jne    0x10021dd9
10021dcc:	inc    eax
10021dcd:	cmp    eax,0x3
10021dd0:	jl     0x10021dc6
10021dd2:	xor    eax,eax
10021dd4:	jmp    0x1002227e
10021dd9:	xor    eax,eax
10021ddb:	lea    edi,[ebp-0x20]
10021dde:	stos   DWORD PTR es:[edi],eax
10021ddf:	stos   DWORD PTR es:[edi],eax
10021de0:	push   0x2
10021de2:	stos   DWORD PTR es:[edi],eax
10021de3:	pop    eax
10021de4:	jmp    0x1002227e
10021de9:	and    DWORD PTR [ebp+0x8],0x0
10021ded:	push   esi
10021dee:	lea    esi,[ebp-0x20]
10021df1:	lea    edi,[ebp-0x2c]
10021df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021df5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021df7:	mov    esi,DWORD PTR ds:0x10065634
10021dfd:	dec    esi
10021dfe:	lea    ecx,[esi+0x1]
10021e01:	mov    eax,ecx
10021e03:	cdq    
10021e04:	and    edx,0x1f
10021e07:	add    eax,edx
10021e09:	sar    eax,0x5
10021e0c:	mov    edx,ecx
10021e0e:	and    edx,0x8000001f
10021e14:	mov    DWORD PTR [ebp-0x10],ebx
10021e17:	mov    DWORD PTR [ebp-0xc],eax
10021e1a:	jns    0x10021e21
10021e1c:	dec    edx
10021e1d:	or     edx,0xffffffe0
10021e20:	inc    edx
10021e21:	lea    edi,[ebp+eax*4-0x20]
10021e25:	push   0x1f
10021e27:	xor    eax,eax
10021e29:	pop    ecx
10021e2a:	sub    ecx,edx
10021e2c:	inc    eax
10021e2d:	shl    eax,cl
10021e2f:	mov    DWORD PTR [ebp-0x8],ecx
10021e32:	test   DWORD PTR [edi],eax
10021e34:	je     0x10021ec7
10021e3a:	mov    eax,DWORD PTR [ebp-0xc]
10021e3d:	or     edx,0xffffffff
10021e40:	shl    edx,cl
10021e42:	not    edx
10021e44:	test   DWORD PTR [ebp+eax*4-0x20],edx
10021e48:	jmp    0x10021e4f
10021e4a:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
10021e4f:	jne    0x10021e59
10021e51:	inc    eax
10021e52:	cmp    eax,0x3
10021e55:	jl     0x10021e4a
10021e57:	jmp    0x10021ec7
10021e59:	mov    eax,esi
10021e5b:	cdq    
10021e5c:	push   0x1f
10021e5e:	pop    ecx
10021e5f:	and    edx,ecx
10021e61:	add    eax,edx
10021e63:	sar    eax,0x5
10021e66:	and    esi,0x8000001f
10021e6c:	jns    0x10021e73
10021e6e:	dec    esi
10021e6f:	or     esi,0xffffffe0
10021e72:	inc    esi
10021e73:	and    DWORD PTR [ebp-0x4],0x0
10021e77:	sub    ecx,esi
10021e79:	xor    edx,edx
10021e7b:	inc    edx
10021e7c:	shl    edx,cl
10021e7e:	lea    ecx,[ebp+eax*4-0x20]
10021e82:	mov    esi,DWORD PTR [ecx]
10021e84:	add    esi,edx
10021e86:	mov    DWORD PTR [ebp+0x8],esi
10021e89:	mov    esi,DWORD PTR [ecx]
10021e8b:	cmp    DWORD PTR [ebp+0x8],esi
10021e8e:	jb     0x10021eb2
10021e90:	cmp    DWORD PTR [ebp+0x8],edx
10021e93:	jmp    0x10021eb0
10021e95:	test   ecx,ecx
10021e97:	je     0x10021ec4
10021e99:	and    DWORD PTR [ebp-0x4],0x0
10021e9d:	lea    ecx,[ebp+eax*4-0x20]
10021ea1:	mov    edx,DWORD PTR [ecx]
10021ea3:	lea    esi,[edx+0x1]
10021ea6:	cmp    esi,edx
10021ea8:	mov    DWORD PTR [ebp+0x8],esi
10021eab:	jb     0x10021eb2
10021ead:	cmp    esi,0x1
10021eb0:	jae    0x10021eb9
10021eb2:	mov    DWORD PTR [ebp-0x4],0x1
10021eb9:	dec    eax
10021eba:	mov    edx,DWORD PTR [ebp+0x8]
10021ebd:	mov    DWORD PTR [ecx],edx
10021ebf:	mov    ecx,DWORD PTR [ebp-0x4]
10021ec2:	jns    0x10021e95
10021ec4:	mov    DWORD PTR [ebp+0x8],ecx
10021ec7:	mov    ecx,DWORD PTR [ebp-0x8]
10021eca:	or     eax,0xffffffff
10021ecd:	shl    eax,cl
10021ecf:	and    DWORD PTR [edi],eax
10021ed1:	mov    eax,DWORD PTR [ebp-0xc]
10021ed4:	inc    eax
10021ed5:	cmp    eax,0x3
10021ed8:	jge    0x10021ee7
10021eda:	push   0x3
10021edc:	pop    ecx
10021edd:	lea    edi,[ebp+eax*4-0x20]
10021ee1:	sub    ecx,eax
10021ee3:	xor    eax,eax
10021ee5:	rep stos DWORD PTR es:[edi],eax
10021ee7:	cmp    DWORD PTR [ebp+0x8],0x0
10021eeb:	je     0x10021eee
10021eed:	inc    ebx
10021eee:	mov    eax,ds:0x10065630
10021ef3:	mov    ecx,eax
10021ef5:	sub    ecx,DWORD PTR ds:0x10065634
10021efb:	cmp    ebx,ecx
10021efd:	jge    0x10021f0c
10021eff:	xor    eax,eax
10021f01:	lea    edi,[ebp-0x20]
10021f04:	stos   DWORD PTR es:[edi],eax
10021f05:	stos   DWORD PTR es:[edi],eax
10021f06:	stos   DWORD PTR es:[edi],eax
10021f07:	jmp    0x10022119
10021f0c:	cmp    ebx,eax
10021f0e:	jg     0x10022123
10021f14:	sub    eax,DWORD PTR [ebp-0x10]
10021f17:	lea    esi,[ebp-0x2c]
10021f1a:	mov    ecx,eax
10021f1c:	lea    edi,[ebp-0x20]
10021f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021f20:	cdq    
10021f21:	and    edx,0x1f
10021f24:	add    eax,edx
10021f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021f27:	mov    edx,ecx
10021f29:	sar    eax,0x5
10021f2c:	and    edx,0x8000001f
10021f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021f33:	jns    0x10021f3a
10021f35:	dec    edx
10021f36:	or     edx,0xffffffe0
10021f39:	inc    edx
10021f3a:	and    DWORD PTR [ebp-0xc],0x0
10021f3e:	and    DWORD PTR [ebp+0x8],0x0
10021f42:	or     edi,0xffffffff
10021f45:	mov    ecx,edx
10021f47:	shl    edi,cl
10021f49:	mov    DWORD PTR [ebp-0x4],0x20
10021f50:	sub    DWORD PTR [ebp-0x4],edx
10021f53:	not    edi
10021f55:	mov    ebx,DWORD PTR [ebp+0x8]
10021f58:	lea    ebx,[ebp+ebx*4-0x20]
10021f5c:	mov    esi,DWORD PTR [ebx]
10021f5e:	mov    ecx,esi
10021f60:	and    ecx,edi
10021f62:	mov    DWORD PTR [ebp-0x10],ecx
10021f65:	mov    ecx,edx
10021f67:	shr    esi,cl
10021f69:	mov    ecx,DWORD PTR [ebp-0x4]
10021f6c:	or     esi,DWORD PTR [ebp-0xc]
10021f6f:	mov    DWORD PTR [ebx],esi
10021f71:	mov    esi,DWORD PTR [ebp-0x10]
10021f74:	shl    esi,cl
10021f76:	inc    DWORD PTR [ebp+0x8]
10021f79:	cmp    DWORD PTR [ebp+0x8],0x3
10021f7d:	mov    DWORD PTR [ebp-0xc],esi
10021f80:	jl     0x10021f55
10021f82:	mov    esi,eax
10021f84:	push   0x2
10021f86:	shl    esi,0x2
10021f89:	lea    ecx,[ebp-0x18]
10021f8c:	pop    edx
10021f8d:	sub    ecx,esi
10021f8f:	cmp    edx,eax
10021f91:	jl     0x10021f9b
10021f93:	mov    esi,DWORD PTR [ecx]
10021f95:	mov    DWORD PTR [ebp+edx*4-0x20],esi
10021f99:	jmp    0x10021fa0
10021f9b:	and    DWORD PTR [ebp+edx*4-0x20],0x0
10021fa0:	dec    edx
10021fa1:	sub    ecx,0x4
10021fa4:	test   edx,edx
10021fa6:	jge    0x10021f8f
10021fa8:	mov    esi,DWORD PTR ds:0x10065634
10021fae:	dec    esi
10021faf:	lea    ecx,[esi+0x1]
10021fb2:	mov    eax,ecx
10021fb4:	cdq    
10021fb5:	and    edx,0x1f
10021fb8:	add    eax,edx
10021fba:	sar    eax,0x5
10021fbd:	mov    edx,ecx
10021fbf:	and    edx,0x8000001f
10021fc5:	mov    DWORD PTR [ebp-0xc],eax
10021fc8:	jns    0x10021fcf
10021fca:	dec    edx
10021fcb:	or     edx,0xffffffe0
10021fce:	inc    edx
10021fcf:	push   0x1f
10021fd1:	pop    ecx
10021fd2:	sub    ecx,edx
10021fd4:	xor    edx,edx
10021fd6:	inc    edx
10021fd7:	shl    edx,cl
10021fd9:	lea    ebx,[ebp+eax*4-0x20]
10021fdd:	mov    DWORD PTR [ebp-0x10],ecx
10021fe0:	test   DWORD PTR [ebx],edx
10021fe2:	je     0x1002206a
10021fe8:	or     edx,0xffffffff
10021feb:	shl    edx,cl
10021fed:	not    edx
10021fef:	test   DWORD PTR [ebp+eax*4-0x20],edx
10021ff3:	jmp    0x10021ffa
10021ff5:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
10021ffa:	jne    0x10022004
10021ffc:	inc    eax
10021ffd:	cmp    eax,0x3
10022000:	jl     0x10021ff5
10022002:	jmp    0x1002206a
10022004:	mov    eax,esi
10022006:	cdq    
10022007:	push   0x1f
10022009:	pop    ecx
1002200a:	and    edx,ecx
1002200c:	add    eax,edx
1002200e:	sar    eax,0x5
10022011:	and    esi,0x8000001f
10022017:	jns    0x1002201e
10022019:	dec    esi
1002201a:	or     esi,0xffffffe0
1002201d:	inc    esi
1002201e:	and    DWORD PTR [ebp+0x8],0x0
10022022:	xor    edx,edx
10022024:	sub    ecx,esi
10022026:	inc    edx
10022027:	shl    edx,cl
10022029:	lea    ecx,[ebp+eax*4-0x20]
1002202d:	mov    esi,DWORD PTR [ecx]
1002202f:	lea    edi,[esi+edx*1]
10022032:	cmp    edi,esi
10022034:	jb     0x1002203a
10022036:	cmp    edi,edx
10022038:	jae    0x10022041
1002203a:	mov    DWORD PTR [ebp+0x8],0x1
10022041:	mov    DWORD PTR [ecx],edi
10022043:	mov    ecx,DWORD PTR [ebp+0x8]
10022046:	jmp    0x10022067
10022048:	test   ecx,ecx
1002204a:	je     0x1002206a
1002204c:	lea    ecx,[ebp+eax*4-0x20]
10022050:	mov    edx,DWORD PTR [ecx]
10022052:	lea    esi,[edx+0x1]
10022055:	xor    edi,edi
10022057:	cmp    esi,edx
10022059:	jb     0x10022060
1002205b:	cmp    esi,0x1
1002205e:	jae    0x10022063
10022060:	xor    edi,edi
10022062:	inc    edi
10022063:	mov    DWORD PTR [ecx],esi
10022065:	mov    ecx,edi
10022067:	dec    eax
10022068:	jns    0x10022048
1002206a:	mov    ecx,DWORD PTR [ebp-0x10]
1002206d:	or     eax,0xffffffff
10022070:	shl    eax,cl
10022072:	and    DWORD PTR [ebx],eax
10022074:	mov    eax,DWORD PTR [ebp-0xc]
10022077:	inc    eax
10022078:	cmp    eax,0x3
1002207b:	jge    0x1002208a
1002207d:	push   0x3
1002207f:	pop    ecx
10022080:	lea    edi,[ebp+eax*4-0x20]
10022084:	sub    ecx,eax
10022086:	xor    eax,eax
10022088:	rep stos DWORD PTR es:[edi],eax
1002208a:	mov    ecx,DWORD PTR ds:0x10065638
10022090:	inc    ecx
10022091:	mov    eax,ecx
10022093:	cdq    
10022094:	and    edx,0x1f
10022097:	add    eax,edx
10022099:	mov    edx,ecx
1002209b:	sar    eax,0x5
1002209e:	and    edx,0x8000001f
100220a4:	jns    0x100220ab
100220a6:	dec    edx
100220a7:	or     edx,0xffffffe0
100220aa:	inc    edx
100220ab:	and    DWORD PTR [ebp-0xc],0x0
100220af:	and    DWORD PTR [ebp+0x8],0x0
100220b3:	or     edi,0xffffffff
100220b6:	mov    ecx,edx
100220b8:	shl    edi,cl
100220ba:	mov    DWORD PTR [ebp-0x4],0x20
100220c1:	sub    DWORD PTR [ebp-0x4],edx
100220c4:	not    edi
100220c6:	mov    ebx,DWORD PTR [ebp+0x8]
100220c9:	lea    ebx,[ebp+ebx*4-0x20]
100220cd:	mov    esi,DWORD PTR [ebx]
100220cf:	mov    ecx,esi
100220d1:	and    ecx,edi
100220d3:	mov    DWORD PTR [ebp-0x10],ecx
100220d6:	mov    ecx,edx
100220d8:	shr    esi,cl
100220da:	mov    ecx,DWORD PTR [ebp-0x4]
100220dd:	or     esi,DWORD PTR [ebp-0xc]
100220e0:	mov    DWORD PTR [ebx],esi
100220e2:	mov    esi,DWORD PTR [ebp-0x10]
100220e5:	shl    esi,cl
100220e7:	inc    DWORD PTR [ebp+0x8]
100220ea:	cmp    DWORD PTR [ebp+0x8],0x3
100220ee:	mov    DWORD PTR [ebp-0xc],esi
100220f1:	jl     0x100220c6
100220f3:	mov    esi,eax
100220f5:	push   0x2
100220f7:	shl    esi,0x2
100220fa:	lea    ecx,[ebp-0x18]
100220fd:	pop    edx
100220fe:	sub    ecx,esi
10022100:	cmp    edx,eax
10022102:	jl     0x1002210c
10022104:	mov    esi,DWORD PTR [ecx]
10022106:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1002210a:	jmp    0x10022111
1002210c:	and    DWORD PTR [ebp+edx*4-0x20],0x0
10022111:	dec    edx
10022112:	sub    ecx,0x4
10022115:	test   edx,edx
10022117:	jge    0x10022100
10022119:	push   0x2
1002211b:	xor    ebx,ebx
1002211d:	pop    eax
1002211e:	jmp    0x1002227d
10022123:	cmp    ebx,DWORD PTR ds:0x1006562c
10022129:	mov    ecx,DWORD PTR ds:0x10065638
1002212f:	jl     0x100221e2
10022135:	xor    eax,eax
10022137:	lea    edi,[ebp-0x20]
1002213a:	stos   DWORD PTR es:[edi],eax
1002213b:	stos   DWORD PTR es:[edi],eax
1002213c:	stos   DWORD PTR es:[edi],eax
1002213d:	or     DWORD PTR [ebp-0x20],0x80000000
10022144:	mov    eax,ecx
10022146:	cdq    
10022147:	and    edx,0x1f
1002214a:	add    eax,edx
1002214c:	mov    edx,ecx
1002214e:	sar    eax,0x5
10022151:	and    edx,0x8000001f
10022157:	jns    0x1002215e
10022159:	dec    edx
1002215a:	or     edx,0xffffffe0
1002215d:	inc    edx
1002215e:	and    DWORD PTR [ebp-0xc],0x0
10022162:	and    DWORD PTR [ebp+0x8],0x0
10022166:	or     edi,0xffffffff
10022169:	mov    ecx,edx
1002216b:	shl    edi,cl
1002216d:	mov    DWORD PTR [ebp-0x4],0x20
10022174:	sub    DWORD PTR [ebp-0x4],edx
10022177:	not    edi
10022179:	mov    ebx,DWORD PTR [ebp+0x8]
1002217c:	lea    ebx,[ebp+ebx*4-0x20]
10022180:	mov    esi,DWORD PTR [ebx]
10022182:	mov    ecx,esi
10022184:	and    ecx,edi
10022186:	mov    DWORD PTR [ebp-0x10],ecx
10022189:	mov    ecx,edx
1002218b:	shr    esi,cl
1002218d:	mov    ecx,DWORD PTR [ebp-0x4]
10022190:	or     esi,DWORD PTR [ebp-0xc]
10022193:	mov    DWORD PTR [ebx],esi
10022195:	mov    esi,DWORD PTR [ebp-0x10]
10022198:	shl    esi,cl
1002219a:	inc    DWORD PTR [ebp+0x8]
1002219d:	cmp    DWORD PTR [ebp+0x8],0x3
100221a1:	mov    DWORD PTR [ebp-0xc],esi
100221a4:	jl     0x10022179
100221a6:	mov    esi,eax
100221a8:	push   0x2
100221aa:	shl    esi,0x2
100221ad:	lea    ecx,[ebp-0x18]
100221b0:	pop    edx
100221b1:	sub    ecx,esi
100221b3:	cmp    edx,eax
100221b5:	jl     0x100221bf
100221b7:	mov    esi,DWORD PTR [ecx]
100221b9:	mov    DWORD PTR [ebp+edx*4-0x20],esi
100221bd:	jmp    0x100221c4
100221bf:	and    DWORD PTR [ebp+edx*4-0x20],0x0
100221c4:	dec    edx
100221c5:	sub    ecx,0x4
100221c8:	test   edx,edx
100221ca:	jge    0x100221b3
100221cc:	mov    eax,ds:0x1006562c
100221d1:	mov    ecx,DWORD PTR ds:0x10065640
100221d7:	lea    ebx,[ecx+eax*1]
100221da:	xor    eax,eax
100221dc:	inc    eax
100221dd:	jmp    0x1002227d
100221e2:	mov    eax,ds:0x10065640
100221e7:	and    DWORD PTR [ebp-0x20],0x7fffffff
100221ee:	add    ebx,eax
100221f0:	mov    eax,ecx
100221f2:	cdq    
100221f3:	and    edx,0x1f
100221f6:	add    eax,edx
100221f8:	mov    edx,ecx
100221fa:	sar    eax,0x5
100221fd:	and    edx,0x8000001f
10022203:	jns    0x1002220a
10022205:	dec    edx
10022206:	or     edx,0xffffffe0
10022209:	inc    edx
1002220a:	and    DWORD PTR [ebp-0xc],0x0
1002220e:	and    DWORD PTR [ebp+0x8],0x0
10022212:	or     esi,0xffffffff
10022215:	mov    ecx,edx
10022217:	shl    esi,cl
10022219:	mov    DWORD PTR [ebp-0x4],0x20
10022220:	sub    DWORD PTR [ebp-0x4],edx
10022223:	not    esi
10022225:	mov    ecx,DWORD PTR [ebp+0x8]
10022228:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
1002222c:	mov    ecx,edi
1002222e:	and    ecx,esi
10022230:	mov    DWORD PTR [ebp-0x10],ecx
10022233:	mov    ecx,edx
10022235:	shr    edi,cl
10022237:	mov    ecx,DWORD PTR [ebp+0x8]
1002223a:	or     edi,DWORD PTR [ebp-0xc]
1002223d:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
10022241:	mov    edi,DWORD PTR [ebp-0x10]
10022244:	mov    ecx,DWORD PTR [ebp-0x4]
10022247:	shl    edi,cl
10022249:	inc    DWORD PTR [ebp+0x8]
1002224c:	cmp    DWORD PTR [ebp+0x8],0x3
10022250:	mov    DWORD PTR [ebp-0xc],edi
10022253:	jl     0x10022225
10022255:	mov    esi,eax
10022257:	push   0x2
10022259:	shl    esi,0x2
1002225c:	lea    ecx,[ebp-0x18]
1002225f:	pop    edx
10022260:	sub    ecx,esi
10022262:	cmp    edx,eax
10022264:	jl     0x1002226e
10022266:	mov    esi,DWORD PTR [ecx]
10022268:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1002226c:	jmp    0x10022273
1002226e:	and    DWORD PTR [ebp+edx*4-0x20],0x0
10022273:	dec    edx
10022274:	sub    ecx,0x4
10022277:	test   edx,edx
10022279:	jge    0x10022262
1002227b:	xor    eax,eax
1002227d:	pop    esi
1002227e:	push   0x1f
10022280:	pop    ecx
10022281:	sub    ecx,DWORD PTR ds:0x10065638
10022287:	shl    ebx,cl
10022289:	mov    ecx,DWORD PTR [ebp-0x14]
1002228c:	neg    ecx
1002228e:	sbb    ecx,ecx
10022290:	and    ecx,0x80000000
10022296:	or     ebx,ecx
10022298:	mov    ecx,DWORD PTR ds:0x1006563c
1002229e:	or     ebx,DWORD PTR [ebp-0x20]
100222a1:	cmp    ecx,0x40
100222a4:	jne    0x100222b3
100222a6:	mov    ecx,DWORD PTR [ebp+0xc]
100222a9:	mov    edx,DWORD PTR [ebp-0x1c]
100222ac:	mov    DWORD PTR [ecx+0x4],ebx
100222af:	mov    DWORD PTR [ecx],edx
100222b1:	jmp    0x100222bd
100222b3:	cmp    ecx,0x20
100222b6:	jne    0x100222bd
100222b8:	mov    ecx,DWORD PTR [ebp+0xc]
100222bb:	mov    DWORD PTR [ecx],ebx
100222bd:	pop    edi
100222be:	pop    ebx
100222bf:	leave  
100222c0:	ret    
100222c1:	push   ebp
100222c2:	mov    ebp,esp
100222c4:	sub    esp,0x2c
100222c7:	mov    eax,DWORD PTR [ebp+0x8]
100222ca:	movzx  ecx,WORD PTR [eax+0xa]
100222ce:	push   ebx
100222cf:	mov    ebx,ecx
100222d1:	and    ecx,0x8000
100222d7:	mov    DWORD PTR [ebp-0x14],ecx
100222da:	mov    ecx,DWORD PTR [eax+0x6]
100222dd:	mov    DWORD PTR [ebp-0x20],ecx
100222e0:	mov    ecx,DWORD PTR [eax+0x2]
100222e3:	movzx  eax,WORD PTR [eax]
100222e6:	and    ebx,0x7fff
100222ec:	sub    ebx,0x3fff
100222f2:	shl    eax,0x10
100222f5:	cmp    ebx,0xffffc001
100222fb:	push   edi
100222fc:	mov    DWORD PTR [ebp-0x1c],ecx
100222ff:	mov    DWORD PTR [ebp-0x18],eax
10022302:	jne    0x1002232b
10022304:	xor    ebx,ebx
10022306:	xor    eax,eax
10022308:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
1002230c:	jne    0x1002231b
1002230e:	inc    eax
1002230f:	cmp    eax,0x3
10022312:	jl     0x10022308
10022314:	xor    eax,eax
10022316:	jmp    0x100227c0
1002231b:	xor    eax,eax
1002231d:	lea    edi,[ebp-0x20]
10022320:	stos   DWORD PTR es:[edi],eax
10022321:	stos   DWORD PTR es:[edi],eax
10022322:	push   0x2
10022324:	stos   DWORD PTR es:[edi],eax
10022325:	pop    eax
10022326:	jmp    0x100227c0
1002232b:	and    DWORD PTR [ebp+0x8],0x0
1002232f:	push   esi
10022330:	lea    esi,[ebp-0x20]
10022333:	lea    edi,[ebp-0x2c]
10022336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022339:	mov    esi,DWORD PTR ds:0x1006564c
1002233f:	dec    esi
10022340:	lea    ecx,[esi+0x1]
10022343:	mov    eax,ecx
10022345:	cdq    
10022346:	and    edx,0x1f
10022349:	add    eax,edx
1002234b:	sar    eax,0x5
1002234e:	mov    edx,ecx
10022350:	and    edx,0x8000001f
10022356:	mov    DWORD PTR [ebp-0x10],ebx
10022359:	mov    DWORD PTR [ebp-0xc],eax
1002235c:	jns    0x10022363
1002235e:	dec    edx
1002235f:	or     edx,0xffffffe0
10022362:	inc    edx
10022363:	lea    edi,[ebp+eax*4-0x20]
10022367:	push   0x1f
10022369:	xor    eax,eax
1002236b:	pop    ecx
1002236c:	sub    ecx,edx
1002236e:	inc    eax
1002236f:	shl    eax,cl
10022371:	mov    DWORD PTR [ebp-0x8],ecx
10022374:	test   DWORD PTR [edi],eax
10022376:	je     0x10022409
1002237c:	mov    eax,DWORD PTR [ebp-0xc]
1002237f:	or     edx,0xffffffff
10022382:	shl    edx,cl
10022384:	not    edx
10022386:	test   DWORD PTR [ebp+eax*4-0x20],edx
1002238a:	jmp    0x10022391
1002238c:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
10022391:	jne    0x1002239b
10022393:	inc    eax
10022394:	cmp    eax,0x3
10022397:	jl     0x1002238c
10022399:	jmp    0x10022409
1002239b:	mov    eax,esi
1002239d:	cdq    
1002239e:	push   0x1f
100223a0:	pop    ecx
100223a1:	and    edx,ecx
100223a3:	add    eax,edx
100223a5:	sar    eax,0x5
100223a8:	and    esi,0x8000001f
100223ae:	jns    0x100223b5
100223b0:	dec    esi
100223b1:	or     esi,0xffffffe0
100223b4:	inc    esi
100223b5:	and    DWORD PTR [ebp-0x4],0x0
100223b9:	sub    ecx,esi
100223bb:	xor    edx,edx
100223bd:	inc    edx
100223be:	shl    edx,cl
100223c0:	lea    ecx,[ebp+eax*4-0x20]
100223c4:	mov    esi,DWORD PTR [ecx]
100223c6:	add    esi,edx
100223c8:	mov    DWORD PTR [ebp+0x8],esi
100223cb:	mov    esi,DWORD PTR [ecx]
100223cd:	cmp    DWORD PTR [ebp+0x8],esi
100223d0:	jb     0x100223f4
100223d2:	cmp    DWORD PTR [ebp+0x8],edx
100223d5:	jmp    0x100223f2
100223d7:	test   ecx,ecx
100223d9:	je     0x10022406
100223db:	and    DWORD PTR [ebp-0x4],0x0
100223df:	lea    ecx,[ebp+eax*4-0x20]
100223e3:	mov    edx,DWORD PTR [ecx]
100223e5:	lea    esi,[edx+0x1]
100223e8:	cmp    esi,edx
100223ea:	mov    DWORD PTR [ebp+0x8],esi
100223ed:	jb     0x100223f4
100223ef:	cmp    esi,0x1
100223f2:	jae    0x100223fb
100223f4:	mov    DWORD PTR [ebp-0x4],0x1
100223fb:	dec    eax
100223fc:	mov    edx,DWORD PTR [ebp+0x8]
100223ff:	mov    DWORD PTR [ecx],edx
10022401:	mov    ecx,DWORD PTR [ebp-0x4]
10022404:	jns    0x100223d7
10022406:	mov    DWORD PTR [ebp+0x8],ecx
10022409:	mov    ecx,DWORD PTR [ebp-0x8]
1002240c:	or     eax,0xffffffff
1002240f:	shl    eax,cl
10022411:	and    DWORD PTR [edi],eax
10022413:	mov    eax,DWORD PTR [ebp-0xc]
10022416:	inc    eax
10022417:	cmp    eax,0x3
1002241a:	jge    0x10022429
1002241c:	push   0x3
1002241e:	pop    ecx
1002241f:	lea    edi,[ebp+eax*4-0x20]
10022423:	sub    ecx,eax
10022425:	xor    eax,eax
10022427:	rep stos DWORD PTR es:[edi],eax
10022429:	cmp    DWORD PTR [ebp+0x8],0x0
1002242d:	je     0x10022430
1002242f:	inc    ebx
10022430:	mov    eax,ds:0x10065648
10022435:	mov    ecx,eax
10022437:	sub    ecx,DWORD PTR ds:0x1006564c
1002243d:	cmp    ebx,ecx
1002243f:	jge    0x1002244e
10022441:	xor    eax,eax
10022443:	lea    edi,[ebp-0x20]
10022446:	stos   DWORD PTR es:[edi],eax
10022447:	stos   DWORD PTR es:[edi],eax
10022448:	stos   DWORD PTR es:[edi],eax
10022449:	jmp    0x1002265b
1002244e:	cmp    ebx,eax
10022450:	jg     0x10022665
10022456:	sub    eax,DWORD PTR [ebp-0x10]
10022459:	lea    esi,[ebp-0x2c]
1002245c:	mov    ecx,eax
1002245e:	lea    edi,[ebp-0x20]
10022461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022462:	cdq    
10022463:	and    edx,0x1f
10022466:	add    eax,edx
10022468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022469:	mov    edx,ecx
1002246b:	sar    eax,0x5
1002246e:	and    edx,0x8000001f
10022474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022475:	jns    0x1002247c
10022477:	dec    edx
10022478:	or     edx,0xffffffe0
1002247b:	inc    edx
1002247c:	and    DWORD PTR [ebp-0xc],0x0
10022480:	and    DWORD PTR [ebp+0x8],0x0
10022484:	or     edi,0xffffffff
10022487:	mov    ecx,edx
10022489:	shl    edi,cl
1002248b:	mov    DWORD PTR [ebp-0x4],0x20
10022492:	sub    DWORD PTR [ebp-0x4],edx
10022495:	not    edi
10022497:	mov    ebx,DWORD PTR [ebp+0x8]
1002249a:	lea    ebx,[ebp+ebx*4-0x20]
1002249e:	mov    esi,DWORD PTR [ebx]
100224a0:	mov    ecx,esi
100224a2:	and    ecx,edi
100224a4:	mov    DWORD PTR [ebp-0x10],ecx
100224a7:	mov    ecx,edx
100224a9:	shr    esi,cl
100224ab:	mov    ecx,DWORD PTR [ebp-0x4]
100224ae:	or     esi,DWORD PTR [ebp-0xc]
100224b1:	mov    DWORD PTR [ebx],esi
100224b3:	mov    esi,DWORD PTR [ebp-0x10]
100224b6:	shl    esi,cl
100224b8:	inc    DWORD PTR [ebp+0x8]
100224bb:	cmp    DWORD PTR [ebp+0x8],0x3
100224bf:	mov    DWORD PTR [ebp-0xc],esi
100224c2:	jl     0x10022497
100224c4:	mov    esi,eax
100224c6:	push   0x2
100224c8:	shl    esi,0x2
100224cb:	lea    ecx,[ebp-0x18]
100224ce:	pop    edx
100224cf:	sub    ecx,esi
100224d1:	cmp    edx,eax
100224d3:	jl     0x100224dd
100224d5:	mov    esi,DWORD PTR [ecx]
100224d7:	mov    DWORD PTR [ebp+edx*4-0x20],esi
100224db:	jmp    0x100224e2
100224dd:	and    DWORD PTR [ebp+edx*4-0x20],0x0
100224e2:	dec    edx
100224e3:	sub    ecx,0x4
100224e6:	test   edx,edx
100224e8:	jge    0x100224d1
100224ea:	mov    esi,DWORD PTR ds:0x1006564c
100224f0:	dec    esi
100224f1:	lea    ecx,[esi+0x1]
100224f4:	mov    eax,ecx
100224f6:	cdq    
100224f7:	and    edx,0x1f
100224fa:	add    eax,edx
100224fc:	sar    eax,0x5
100224ff:	mov    edx,ecx
10022501:	and    edx,0x8000001f
10022507:	mov    DWORD PTR [ebp-0xc],eax
1002250a:	jns    0x10022511
1002250c:	dec    edx
1002250d:	or     edx,0xffffffe0
10022510:	inc    edx
10022511:	push   0x1f
10022513:	pop    ecx
10022514:	sub    ecx,edx
10022516:	xor    edx,edx
10022518:	inc    edx
10022519:	shl    edx,cl
1002251b:	lea    ebx,[ebp+eax*4-0x20]
1002251f:	mov    DWORD PTR [ebp-0x10],ecx
10022522:	test   DWORD PTR [ebx],edx
10022524:	je     0x100225ac
1002252a:	or     edx,0xffffffff
1002252d:	shl    edx,cl
1002252f:	not    edx
10022531:	test   DWORD PTR [ebp+eax*4-0x20],edx
10022535:	jmp    0x1002253c
10022537:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1002253c:	jne    0x10022546
1002253e:	inc    eax
1002253f:	cmp    eax,0x3
10022542:	jl     0x10022537
10022544:	jmp    0x100225ac
10022546:	mov    eax,esi
10022548:	cdq    
10022549:	push   0x1f
1002254b:	pop    ecx
1002254c:	and    edx,ecx
1002254e:	add    eax,edx
10022550:	sar    eax,0x5
10022553:	and    esi,0x8000001f
10022559:	jns    0x10022560
1002255b:	dec    esi
1002255c:	or     esi,0xffffffe0
1002255f:	inc    esi
10022560:	and    DWORD PTR [ebp+0x8],0x0
10022564:	xor    edx,edx
10022566:	sub    ecx,esi
10022568:	inc    edx
10022569:	shl    edx,cl
1002256b:	lea    ecx,[ebp+eax*4-0x20]
1002256f:	mov    esi,DWORD PTR [ecx]
10022571:	lea    edi,[esi+edx*1]
10022574:	cmp    edi,esi
10022576:	jb     0x1002257c
10022578:	cmp    edi,edx
1002257a:	jae    0x10022583
1002257c:	mov    DWORD PTR [ebp+0x8],0x1
10022583:	mov    DWORD PTR [ecx],edi
10022585:	mov    ecx,DWORD PTR [ebp+0x8]
10022588:	jmp    0x100225a9
1002258a:	test   ecx,ecx
1002258c:	je     0x100225ac
1002258e:	lea    ecx,[ebp+eax*4-0x20]
10022592:	mov    edx,DWORD PTR [ecx]
10022594:	lea    esi,[edx+0x1]
10022597:	xor    edi,edi
10022599:	cmp    esi,edx
1002259b:	jb     0x100225a2
1002259d:	cmp    esi,0x1
100225a0:	jae    0x100225a5
100225a2:	xor    edi,edi
100225a4:	inc    edi
100225a5:	mov    DWORD PTR [ecx],esi
100225a7:	mov    ecx,edi
100225a9:	dec    eax
100225aa:	jns    0x1002258a
100225ac:	mov    ecx,DWORD PTR [ebp-0x10]
100225af:	or     eax,0xffffffff
100225b2:	shl    eax,cl
100225b4:	and    DWORD PTR [ebx],eax
100225b6:	mov    eax,DWORD PTR [ebp-0xc]
100225b9:	inc    eax
100225ba:	cmp    eax,0x3
100225bd:	jge    0x100225cc
100225bf:	push   0x3
100225c1:	pop    ecx
100225c2:	lea    edi,[ebp+eax*4-0x20]
100225c6:	sub    ecx,eax
100225c8:	xor    eax,eax
100225ca:	rep stos DWORD PTR es:[edi],eax
100225cc:	mov    ecx,DWORD PTR ds:0x10065650
100225d2:	inc    ecx
100225d3:	mov    eax,ecx
100225d5:	cdq    
100225d6:	and    edx,0x1f
100225d9:	add    eax,edx
100225db:	mov    edx,ecx
100225dd:	sar    eax,0x5
100225e0:	and    edx,0x8000001f
100225e6:	jns    0x100225ed
100225e8:	dec    edx
100225e9:	or     edx,0xffffffe0
100225ec:	inc    edx
100225ed:	and    DWORD PTR [ebp-0xc],0x0
100225f1:	and    DWORD PTR [ebp+0x8],0x0
100225f5:	or     edi,0xffffffff
100225f8:	mov    ecx,edx
100225fa:	shl    edi,cl
100225fc:	mov    DWORD PTR [ebp-0x4],0x20
10022603:	sub    DWORD PTR [ebp-0x4],edx
10022606:	not    edi
10022608:	mov    ebx,DWORD PTR [ebp+0x8]
1002260b:	lea    ebx,[ebp+ebx*4-0x20]
1002260f:	mov    esi,DWORD PTR [ebx]
10022611:	mov    ecx,esi
10022613:	and    ecx,edi
10022615:	mov    DWORD PTR [ebp-0x10],ecx
10022618:	mov    ecx,edx
1002261a:	shr    esi,cl
1002261c:	mov    ecx,DWORD PTR [ebp-0x4]
1002261f:	or     esi,DWORD PTR [ebp-0xc]
10022622:	mov    DWORD PTR [ebx],esi
10022624:	mov    esi,DWORD PTR [ebp-0x10]
10022627:	shl    esi,cl
10022629:	inc    DWORD PTR [ebp+0x8]
1002262c:	cmp    DWORD PTR [ebp+0x8],0x3
10022630:	mov    DWORD PTR [ebp-0xc],esi
10022633:	jl     0x10022608
10022635:	mov    esi,eax
10022637:	push   0x2
10022639:	shl    esi,0x2
1002263c:	lea    ecx,[ebp-0x18]
1002263f:	pop    edx
10022640:	sub    ecx,esi
10022642:	cmp    edx,eax
10022644:	jl     0x1002264e
10022646:	mov    esi,DWORD PTR [ecx]
10022648:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1002264c:	jmp    0x10022653
1002264e:	and    DWORD PTR [ebp+edx*4-0x20],0x0
10022653:	dec    edx
10022654:	sub    ecx,0x4
10022657:	test   edx,edx
10022659:	jge    0x10022642
1002265b:	push   0x2
1002265d:	xor    ebx,ebx
1002265f:	pop    eax
10022660:	jmp    0x100227bf
10022665:	cmp    ebx,DWORD PTR ds:0x10065644
1002266b:	mov    ecx,DWORD PTR ds:0x10065650
10022671:	jl     0x10022724
10022677:	xor    eax,eax
10022679:	lea    edi,[ebp-0x20]
1002267c:	stos   DWORD PTR es:[edi],eax
1002267d:	stos   DWORD PTR es:[edi],eax
1002267e:	stos   DWORD PTR es:[edi],eax
1002267f:	or     DWORD PTR [ebp-0x20],0x80000000
10022686:	mov    eax,ecx
10022688:	cdq    
10022689:	and    edx,0x1f
1002268c:	add    eax,edx
1002268e:	mov    edx,ecx
10022690:	sar    eax,0x5
10022693:	and    edx,0x8000001f
10022699:	jns    0x100226a0
1002269b:	dec    edx
1002269c:	or     edx,0xffffffe0
1002269f:	inc    edx
100226a0:	and    DWORD PTR [ebp-0xc],0x0
100226a4:	and    DWORD PTR [ebp+0x8],0x0
100226a8:	or     edi,0xffffffff
100226ab:	mov    ecx,edx
100226ad:	shl    edi,cl
100226af:	mov    DWORD PTR [ebp-0x4],0x20
100226b6:	sub    DWORD PTR [ebp-0x4],edx
100226b9:	not    edi
100226bb:	mov    ebx,DWORD PTR [ebp+0x8]
100226be:	lea    ebx,[ebp+ebx*4-0x20]
100226c2:	mov    esi,DWORD PTR [ebx]
100226c4:	mov    ecx,esi
100226c6:	and    ecx,edi
100226c8:	mov    DWORD PTR [ebp-0x10],ecx
100226cb:	mov    ecx,edx
100226cd:	shr    esi,cl
100226cf:	mov    ecx,DWORD PTR [ebp-0x4]
100226d2:	or     esi,DWORD PTR [ebp-0xc]
100226d5:	mov    DWORD PTR [ebx],esi
100226d7:	mov    esi,DWORD PTR [ebp-0x10]
100226da:	shl    esi,cl
100226dc:	inc    DWORD PTR [ebp+0x8]
100226df:	cmp    DWORD PTR [ebp+0x8],0x3
100226e3:	mov    DWORD PTR [ebp-0xc],esi
100226e6:	jl     0x100226bb
100226e8:	mov    esi,eax
100226ea:	push   0x2
100226ec:	shl    esi,0x2
100226ef:	lea    ecx,[ebp-0x18]
100226f2:	pop    edx
100226f3:	sub    ecx,esi
100226f5:	cmp    edx,eax
100226f7:	jl     0x10022701
100226f9:	mov    esi,DWORD PTR [ecx]
100226fb:	mov    DWORD PTR [ebp+edx*4-0x20],esi
100226ff:	jmp    0x10022706
10022701:	and    DWORD PTR [ebp+edx*4-0x20],0x0
10022706:	dec    edx
10022707:	sub    ecx,0x4
1002270a:	test   edx,edx
1002270c:	jge    0x100226f5
1002270e:	mov    eax,ds:0x10065644
10022713:	mov    ecx,DWORD PTR ds:0x10065658
10022719:	lea    ebx,[ecx+eax*1]
1002271c:	xor    eax,eax
1002271e:	inc    eax
1002271f:	jmp    0x100227bf
10022724:	mov    eax,ds:0x10065658
10022729:	and    DWORD PTR [ebp-0x20],0x7fffffff
10022730:	add    ebx,eax
10022732:	mov    eax,ecx
10022734:	cdq    
10022735:	and    edx,0x1f
10022738:	add    eax,edx
1002273a:	mov    edx,ecx
1002273c:	sar    eax,0x5
1002273f:	and    edx,0x8000001f
10022745:	jns    0x1002274c
10022747:	dec    edx
10022748:	or     edx,0xffffffe0
1002274b:	inc    edx
1002274c:	and    DWORD PTR [ebp-0xc],0x0
10022750:	and    DWORD PTR [ebp+0x8],0x0
10022754:	or     esi,0xffffffff
10022757:	mov    ecx,edx
10022759:	shl    esi,cl
1002275b:	mov    DWORD PTR [ebp-0x4],0x20
10022762:	sub    DWORD PTR [ebp-0x4],edx
10022765:	not    esi
10022767:	mov    ecx,DWORD PTR [ebp+0x8]
1002276a:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
1002276e:	mov    ecx,edi
10022770:	and    ecx,esi
10022772:	mov    DWORD PTR [ebp-0x10],ecx
10022775:	mov    ecx,edx
10022777:	shr    edi,cl
10022779:	mov    ecx,DWORD PTR [ebp+0x8]
1002277c:	or     edi,DWORD PTR [ebp-0xc]
1002277f:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
10022783:	mov    edi,DWORD PTR [ebp-0x10]
10022786:	mov    ecx,DWORD PTR [ebp-0x4]
10022789:	shl    edi,cl
1002278b:	inc    DWORD PTR [ebp+0x8]
1002278e:	cmp    DWORD PTR [ebp+0x8],0x3
10022792:	mov    DWORD PTR [ebp-0xc],edi
10022795:	jl     0x10022767
10022797:	mov    esi,eax
10022799:	push   0x2
1002279b:	shl    esi,0x2
1002279e:	lea    ecx,[ebp-0x18]
100227a1:	pop    edx
100227a2:	sub    ecx,esi
100227a4:	cmp    edx,eax
100227a6:	jl     0x100227b0
100227a8:	mov    esi,DWORD PTR [ecx]
100227aa:	mov    DWORD PTR [ebp+edx*4-0x20],esi
100227ae:	jmp    0x100227b5
100227b0:	and    DWORD PTR [ebp+edx*4-0x20],0x0
100227b5:	dec    edx
100227b6:	sub    ecx,0x4
100227b9:	test   edx,edx
100227bb:	jge    0x100227a4
100227bd:	xor    eax,eax
100227bf:	pop    esi
100227c0:	push   0x1f
100227c2:	pop    ecx
100227c3:	sub    ecx,DWORD PTR ds:0x10065650
100227c9:	shl    ebx,cl
100227cb:	mov    ecx,DWORD PTR [ebp-0x14]
100227ce:	neg    ecx
100227d0:	sbb    ecx,ecx
100227d2:	and    ecx,0x80000000
100227d8:	or     ebx,ecx
100227da:	mov    ecx,DWORD PTR ds:0x10065654
100227e0:	or     ebx,DWORD PTR [ebp-0x20]
100227e3:	cmp    ecx,0x40
100227e6:	jne    0x100227f5
100227e8:	mov    ecx,DWORD PTR [ebp+0xc]
100227eb:	mov    edx,DWORD PTR [ebp-0x1c]
100227ee:	mov    DWORD PTR [ecx+0x4],ebx
100227f1:	mov    DWORD PTR [ecx],edx
100227f3:	jmp    0x100227ff
100227f5:	cmp    ecx,0x20
100227f8:	jne    0x100227ff
100227fa:	mov    ecx,DWORD PTR [ebp+0xc]
100227fd:	mov    DWORD PTR [ecx],ebx
100227ff:	pop    edi
10022800:	pop    ebx
10022801:	leave  
10022802:	ret    
10022803:	push   ebp
10022804:	mov    ebp,esp
10022806:	sub    esp,0x10
10022809:	push   esi
1002280a:	push   DWORD PTR [ebp+0xc]
1002280d:	lea    ecx,[ebp-0x10]
10022810:	call   0x100165aa
10022815:	mov    esi,DWORD PTR [ebp+0x8]
10022818:	movsx  eax,BYTE PTR [esi]
1002281b:	push   eax
1002281c:	call   0x10017872
10022821:	cmp    eax,0x65
10022824:	jmp    0x10022832
10022826:	inc    esi
10022827:	movzx  eax,BYTE PTR [esi]
1002282a:	push   eax
1002282b:	call   0x1001750d
10022830:	test   eax,eax
10022832:	pop    ecx
10022833:	jne    0x10022826
10022835:	movsx  eax,BYTE PTR [esi]
10022838:	push   eax
10022839:	call   0x10017872
1002283e:	cmp    eax,0x78
10022841:	pop    ecx
10022842:	jne    0x10022846
10022844:	inc    esi
10022845:	inc    esi
10022846:	mov    ecx,DWORD PTR [ebp-0x10]
10022849:	mov    ecx,DWORD PTR [ecx+0xbc]
1002284f:	mov    ecx,DWORD PTR [ecx]
10022851:	mov    al,BYTE PTR [esi]
10022853:	mov    cl,BYTE PTR [ecx]
10022855:	mov    BYTE PTR [esi],cl
10022857:	inc    esi
10022858:	mov    cl,BYTE PTR [esi]
1002285a:	mov    BYTE PTR [esi],al
1002285c:	mov    al,cl
1002285e:	mov    cl,BYTE PTR [esi]
10022860:	inc    esi
10022861:	test   cl,cl
10022863:	jne    0x10022858
10022865:	cmp    BYTE PTR [ebp-0x4],cl
10022868:	pop    esi
10022869:	je     0x10022872
1002286b:	mov    eax,DWORD PTR [ebp-0x8]
1002286e:	and    DWORD PTR [eax+0x70],0xfffffffd
10022872:	leave  
10022873:	ret    
10022874:	push   ebp
10022875:	mov    ebp,esp
10022877:	sub    esp,0x10
1002287a:	push   esi
1002287b:	push   DWORD PTR [ebp+0xc]
1002287e:	lea    ecx,[ebp-0x10]
10022881:	call   0x100165aa
10022886:	mov    eax,DWORD PTR [ebp+0x8]
10022889:	mov    cl,BYTE PTR [eax]
1002288b:	test   cl,cl
1002288d:	mov    esi,DWORD PTR [ebp-0x10]
10022890:	je     0x100228a7
10022892:	mov    edx,DWORD PTR [esi+0xbc]
10022898:	mov    edx,DWORD PTR [edx]
1002289a:	mov    dl,BYTE PTR [edx]
1002289c:	cmp    cl,dl
1002289e:	je     0x100228a7
100228a0:	inc    eax
100228a1:	mov    cl,BYTE PTR [eax]
100228a3:	test   cl,cl
100228a5:	jne    0x1002289c
100228a7:	mov    cl,BYTE PTR [eax]
100228a9:	inc    eax
100228aa:	test   cl,cl
100228ac:	je     0x100228e4
100228ae:	jmp    0x100228bb
100228b0:	cmp    cl,0x65
100228b3:	je     0x100228c1
100228b5:	cmp    cl,0x45
100228b8:	je     0x100228c1
100228ba:	inc    eax
100228bb:	mov    cl,BYTE PTR [eax]
100228bd:	test   cl,cl
100228bf:	jne    0x100228b0
100228c1:	mov    edx,eax
100228c3:	dec    eax
100228c4:	cmp    BYTE PTR [eax],0x30
100228c7:	je     0x100228c3
100228c9:	mov    ecx,DWORD PTR [esi+0xbc]
100228cf:	mov    ecx,DWORD PTR [ecx]
100228d1:	push   ebx
100228d2:	mov    bl,BYTE PTR [eax]
100228d4:	cmp    bl,BYTE PTR [ecx]
100228d6:	pop    ebx
100228d7:	jne    0x100228da
100228d9:	dec    eax
100228da:	mov    cl,BYTE PTR [edx]
100228dc:	inc    eax
100228dd:	inc    edx
100228de:	test   cl,cl
100228e0:	mov    BYTE PTR [eax],cl
100228e2:	jne    0x100228da
100228e4:	cmp    BYTE PTR [ebp-0x4],0x0
100228e8:	pop    esi
100228e9:	je     0x100228f2
100228eb:	mov    eax,DWORD PTR [ebp-0x8]
100228ee:	and    DWORD PTR [eax+0x70],0xfffffffd
100228f2:	leave  
100228f3:	ret    
100228f4:	fldz   
100228f6:	mov    eax,DWORD PTR [esp+0x4]
100228fa:	fcomp  QWORD PTR [eax]
100228fc:	fnstsw ax
100228fe:	test   ah,0x41
10022901:	jp     0x10022907
10022903:	xor    eax,eax
10022905:	inc    eax
10022906:	ret    
10022907:	xor    eax,eax
10022909:	ret    
1002290a:	push   ebp
1002290b:	mov    ebp,esp
1002290d:	push   ecx
1002290e:	push   ecx
1002290f:	cmp    DWORD PTR [ebp+0x8],0x0
10022913:	push   DWORD PTR [ebp+0x14]
10022916:	push   DWORD PTR [ebp+0x10]
10022919:	je     0x10022934
1002291b:	lea    eax,[ebp-0x8]
1002291e:	push   eax
1002291f:	call   0x10023935
10022924:	mov    ecx,DWORD PTR [ebp-0x8]
10022927:	mov    eax,DWORD PTR [ebp+0xc]
1002292a:	mov    DWORD PTR [eax],ecx
1002292c:	mov    ecx,DWORD PTR [ebp-0x4]
1002292f:	mov    DWORD PTR [eax+0x4],ecx
10022932:	jmp    0x10022945
10022934:	lea    eax,[ebp+0x8]
10022937:	push   eax
10022938:	call   0x100239db
1002293d:	mov    eax,DWORD PTR [ebp+0xc]
10022940:	mov    ecx,DWORD PTR [ebp+0x8]
10022943:	mov    DWORD PTR [eax],ecx
10022945:	add    esp,0xc
10022948:	leave  
10022949:	ret    
1002294a:	push   0x0
1002294c:	push   DWORD PTR [esp+0x10]
10022950:	push   DWORD PTR [esp+0x10]
10022954:	push   DWORD PTR [esp+0x10]
10022958:	call   0x1002290a
1002295d:	add    esp,0x10
10022960:	ret    
10022961:	test   edi,edi
10022963:	push   esi
10022964:	mov    esi,eax
10022966:	je     0x1002297c
10022968:	push   esi
10022969:	call   0x10016370
1002296e:	inc    eax
1002296f:	push   eax
10022970:	push   esi
10022971:	add    esi,edi
10022973:	push   esi
10022974:	call   0x1001a1e0
10022979:	add    esp,0x10
1002297c:	pop    esi
1002297d:	ret    
1002297e:	push   0x0
10022980:	push   DWORD PTR [esp+0x8]
10022984:	call   0x10022803
10022989:	pop    ecx
1002298a:	pop    ecx
1002298b:	ret    
1002298c:	push   0x0
1002298e:	push   DWORD PTR [esp+0x8]
10022992:	call   0x10022874
10022997:	pop    ecx
10022998:	pop    ecx
10022999:	ret    
1002299a:	push   ebp
1002299b:	mov    ebp,esp
1002299d:	sub    esp,0x10
100229a0:	push   ebx
100229a1:	push   esi
100229a2:	push   edi
100229a3:	push   DWORD PTR [ebp+0x1c]
100229a6:	lea    ecx,[ebp-0x10]
100229a9:	mov    ebx,eax
100229ab:	call   0x100165aa
100229b0:	xor    esi,esi
100229b2:	cmp    ebx,esi
100229b4:	jne    0x100229e1
100229b6:	call   0x10019ffe
100229bb:	push   0x16
100229bd:	pop    edi
100229be:	push   esi
100229bf:	push   esi
100229c0:	push   esi
100229c1:	push   esi
100229c2:	push   esi
100229c3:	mov    DWORD PTR [eax],edi
100229c5:	call   0x1001611f
100229ca:	add    esp,0x14
100229cd:	cmp    BYTE PTR [ebp-0x4],0x0
100229d1:	je     0x100229da
100229d3:	mov    eax,DWORD PTR [ebp-0x8]
100229d6:	and    DWORD PTR [eax+0x70],0xfffffffd
100229da:	mov    eax,edi
100229dc:	jmp    0x10022b02
100229e1:	cmp    DWORD PTR [ebp+0x8],esi
100229e4:	jbe    0x100229b6
100229e6:	cmp    DWORD PTR [ebp+0xc],esi
100229e9:	jle    0x100229f0
100229eb:	mov    eax,DWORD PTR [ebp+0xc]
100229ee:	jmp    0x100229f2
100229f0:	xor    eax,eax
100229f2:	add    eax,0x9
100229f5:	cmp    DWORD PTR [ebp+0x8],eax
100229f8:	ja     0x10022a03
100229fa:	call   0x10019ffe
100229ff:	push   0x22
10022a01:	jmp    0x100229bd
10022a03:	cmp    BYTE PTR [ebp+0x18],0x0
10022a07:	je     0x10022a27
10022a09:	mov    edx,DWORD PTR [ebp+0x14]
10022a0c:	xor    eax,eax
10022a0e:	cmp    DWORD PTR [ebp+0xc],esi
10022a11:	setg   al
10022a14:	xor    ecx,ecx
10022a16:	cmp    DWORD PTR [edx],0x2d
10022a19:	sete   cl
10022a1c:	mov    edi,eax
10022a1e:	add    ecx,ebx
10022a20:	mov    eax,ecx
10022a22:	call   0x10022961
10022a27:	mov    edi,DWORD PTR [ebp+0x14]
10022a2a:	cmp    DWORD PTR [edi],0x2d
10022a2d:	mov    esi,ebx
10022a2f:	jne    0x10022a37
10022a31:	mov    BYTE PTR [ebx],0x2d
10022a34:	lea    esi,[ebx+0x1]
10022a37:	cmp    DWORD PTR [ebp+0xc],0x0
10022a3b:	jle    0x10022a55
10022a3d:	lea    eax,[esi+0x1]
10022a40:	mov    cl,BYTE PTR [eax]
10022a42:	mov    BYTE PTR [esi],cl
10022a44:	mov    esi,eax
10022a46:	mov    eax,DWORD PTR [ebp-0x10]
10022a49:	mov    eax,DWORD PTR [eax+0xbc]
10022a4f:	mov    eax,DWORD PTR [eax]
10022a51:	mov    al,BYTE PTR [eax]
10022a53:	mov    BYTE PTR [esi],al
10022a55:	xor    eax,eax
10022a57:	cmp    BYTE PTR [ebp+0x18],al
10022a5a:	sete   al
10022a5d:	add    eax,DWORD PTR [ebp+0xc]
10022a60:	add    esi,eax
10022a62:	cmp    DWORD PTR [ebp+0x8],0xffffffff
10022a66:	jne    0x10022a6d
10022a68:	or     ebx,0xffffffff
10022a6b:	jmp    0x10022a72
10022a6d:	sub    ebx,esi
10022a6f:	add    ebx,DWORD PTR [ebp+0x8]
10022a72:	push   0x10051d80
10022a77:	push   ebx
10022a78:	push   esi
10022a79:	call   0x1001a148
10022a7e:	add    esp,0xc
10022a81:	xor    ebx,ebx
10022a83:	test   eax,eax
10022a85:	je     0x10022a94
10022a87:	push   ebx
10022a88:	push   ebx
10022a89:	push   ebx
10022a8a:	push   ebx
10022a8b:	push   ebx
10022a8c:	call   0x10016023
10022a91:	add    esp,0x14
10022a94:	cmp    DWORD PTR [ebp+0x10],ebx
10022a97:	lea    ecx,[esi+0x2]
10022a9a:	je     0x10022a9f
10022a9c:	mov    BYTE PTR [esi],0x45
10022a9f:	mov    eax,DWORD PTR [edi+0xc]
10022aa2:	inc    esi
10022aa3:	cmp    BYTE PTR [eax],0x30
10022aa6:	je     0x10022ad6
10022aa8:	mov    eax,DWORD PTR [edi+0x4]
10022aab:	dec    eax
10022aac:	jns    0x10022ab3
10022aae:	neg    eax
10022ab0:	mov    BYTE PTR [esi],0x2d
10022ab3:	inc    esi
10022ab4:	cmp    eax,0x64
10022ab7:	jl     0x10022ac3
10022ab9:	cdq    
10022aba:	push   0x64
10022abc:	pop    edi
10022abd:	idiv   edi
10022abf:	add    BYTE PTR [esi],al
10022ac1:	mov    eax,edx
10022ac3:	inc    esi
10022ac4:	cmp    eax,0xa
10022ac7:	jl     0x10022ad3
10022ac9:	cdq    
10022aca:	push   0xa
10022acc:	pop    edi
10022acd:	idiv   edi
10022acf:	add    BYTE PTR [esi],al
10022ad1:	mov    eax,edx
10022ad3:	add    BYTE PTR [esi+0x1],al
10022ad6:	test   BYTE PTR ds:0x10066da4,0x1
10022add:	je     0x10022af3
10022adf:	cmp    BYTE PTR [ecx],0x30
10022ae2:	jne    0x10022af3
10022ae4:	push   0x3
10022ae6:	lea    eax,[ecx+0x1]
10022ae9:	push   eax
10022aea:	push   ecx
10022aeb:	call   0x1001a1e0
10022af0:	add    esp,0xc
10022af3:	cmp    BYTE PTR [ebp-0x4],0x0
10022af7:	je     0x10022b00
10022af9:	mov    eax,DWORD PTR [ebp-0x8]
10022afc:	and    DWORD PTR [eax+0x70],0xfffffffd
10022b00:	xor    eax,eax
10022b02:	pop    edi
10022b03:	pop    esi
10022b04:	pop    ebx
10022b05:	leave  
10022b06:	ret    
10022b07:	push   ebp
10022b08:	mov    ebp,esp
10022b0a:	sub    esp,0x2c
10022b0d:	mov    eax,ds:0x10064694
10022b12:	xor    eax,ebp
10022b14:	mov    DWORD PTR [ebp-0x4],eax
10022b17:	mov    eax,DWORD PTR [ebp+0x8]
10022b1a:	push   ebx
10022b1b:	push   esi
10022b1c:	push   edi
10022b1d:	mov    edi,DWORD PTR [ebp+0xc]
10022b20:	push   0x16
10022b22:	pop    esi
10022b23:	push   esi
10022b24:	lea    ecx,[ebp-0x1c]
10022b27:	push   ecx
10022b28:	lea    ecx,[ebp-0x2c]
10022b2b:	push   ecx
10022b2c:	push   DWORD PTR [eax+0x4]
10022b2f:	push   DWORD PTR [eax]
10022b31:	call   0x10023bf9
10022b36:	xor    ebx,ebx
10022b38:	add    esp,0x14
10022b3b:	cmp    edi,ebx
10022b3d:	jne    0x10022b57
10022b3f:	call   0x10019ffe
10022b44:	push   ebx
10022b45:	push   ebx
10022b46:	push   ebx
10022b47:	push   ebx
10022b48:	push   ebx
10022b49:	mov    DWORD PTR [eax],esi
10022b4b:	call   0x1001611f
10022b50:	add    esp,0x14
10022b53:	mov    eax,esi
10022b55:	jmp    0x10022bc6
10022b57:	mov    eax,DWORD PTR [ebp+0x10]
10022b5a:	cmp    eax,ebx
10022b5c:	jbe    0x10022b3f
10022b5e:	cmp    eax,0xffffffff
10022b61:	mov    esi,DWORD PTR [ebp+0x14]
10022b64:	jne    0x10022b6b
10022b66:	or     eax,0xffffffff
10022b69:	jmp    0x10022b7f
10022b6b:	xor    ecx,ecx
10022b6d:	cmp    DWORD PTR [ebp-0x2c],0x2d
10022b71:	sete   cl
10022b74:	sub    eax,ecx
10022b76:	xor    ecx,ecx
10022b78:	cmp    esi,ebx
10022b7a:	setg   cl
10022b7d:	sub    eax,ecx
10022b7f:	lea    ecx,[ebp-0x2c]
10022b82:	push   ecx
10022b83:	lea    ecx,[esi+0x1]
10022b86:	push   ecx
10022b87:	push   eax
10022b88:	xor    eax,eax
10022b8a:	cmp    DWORD PTR [ebp-0x2c],0x2d
10022b8e:	sete   al
10022b91:	xor    ecx,ecx
10022b93:	cmp    esi,ebx
10022b95:	setg   cl
10022b98:	add    eax,edi
10022b9a:	add    ecx,eax
10022b9c:	push   ecx
10022b9d:	call   0x10023a81
10022ba2:	add    esp,0x10
10022ba5:	cmp    eax,ebx
10022ba7:	je     0x10022bad
10022ba9:	mov    BYTE PTR [edi],bl
10022bab:	jmp    0x10022bc6
10022bad:	push   DWORD PTR [ebp+0x1c]
10022bb0:	lea    eax,[ebp-0x2c]
10022bb3:	push   ebx
10022bb4:	push   eax
10022bb5:	push   DWORD PTR [ebp+0x18]
10022bb8:	mov    eax,edi
10022bba:	push   esi
10022bbb:	push   DWORD PTR [ebp+0x10]
10022bbe:	call   0x1002299a
10022bc3:	add    esp,0x18
10022bc6:	mov    ecx,DWORD PTR [ebp-0x4]
10022bc9:	pop    edi
10022bca:	pop    esi
10022bcb:	xor    ecx,ebp
10022bcd:	pop    ebx
10022bce:	call   0x10015adb
10022bd3:	leave  
10022bd4:	ret    
10022bd5:	push   ebp
10022bd6:	mov    ebp,esp
10022bd8:	push   0x0
10022bda:	push   DWORD PTR [ebp+0x18]
10022bdd:	push   DWORD PTR [ebp+0x14]
10022be0:	push   DWORD PTR [ebp+0x10]
10022be3:	push   DWORD PTR [ebp+0xc]
10022be6:	push   DWORD PTR [ebp+0x8]
10022be9:	call   0x10022b07
10022bee:	add    esp,0x18
10022bf1:	pop    ebp
10022bf2:	ret    
10022bf3:	push   ebp
10022bf4:	mov    ebp,esp
10022bf6:	sub    esp,0x24
10022bf9:	push   esi
10022bfa:	push   edi
10022bfb:	push   DWORD PTR [ebp+0x1c]
10022bfe:	lea    ecx,[ebp-0x24]
10022c01:	mov    DWORD PTR [ebp-0x14],0x3ff
10022c08:	xor    edi,edi
10022c0a:	mov    DWORD PTR [ebp-0x4],0x30
10022c11:	call   0x100165aa
10022c16:	cmp    DWORD PTR [ebp+0x14],edi
10022c19:	jge    0x10022c1e
10022c1b:	mov    DWORD PTR [ebp+0x14],edi
10022c1e:	mov    esi,DWORD PTR [ebp+0xc]
10022c21:	cmp    esi,edi
10022c23:	jne    0x10022c50
10022c25:	call   0x10019ffe
10022c2a:	push   0x16
10022c2c:	pop    esi
10022c2d:	push   edi
10022c2e:	push   edi
10022c2f:	push   edi
10022c30:	push   edi
10022c31:	push   edi
10022c32:	mov    DWORD PTR [eax],esi
10022c34:	call   0x1001611f
10022c39:	add    esp,0x14
10022c3c:	cmp    BYTE PTR [ebp-0x18],0x0
10022c40:	je     0x10022c49
10022c42:	mov    eax,DWORD PTR [ebp-0x1c]
10022c45:	and    DWORD PTR [eax+0x70],0xfffffffd
10022c49:	mov    eax,esi
10022c4b:	jmp    0x10022f60
10022c50:	cmp    DWORD PTR [ebp+0x10],edi
10022c53:	jbe    0x10022c25
10022c55:	mov    eax,DWORD PTR [ebp+0x14]
10022c58:	add    eax,0xb
10022c5b:	cmp    DWORD PTR [ebp+0x10],eax
10022c5e:	mov    BYTE PTR [esi],0x0
10022c61:	ja     0x10022c6c
10022c63:	call   0x10019ffe
10022c68:	push   0x22
10022c6a:	jmp    0x10022c2c
10022c6c:	mov    edi,DWORD PTR [ebp+0x8]
10022c6f:	mov    eax,DWORD PTR [edi]
10022c71:	mov    DWORD PTR [ebp-0xc],eax
10022c74:	mov    eax,DWORD PTR [edi+0x4]
10022c77:	mov    ecx,eax
10022c79:	shr    ecx,0x14
10022c7c:	mov    edx,0x7ff
10022c81:	push   ebx
10022c82:	and    ecx,edx
10022c84:	xor    ebx,ebx
10022c86:	cmp    ecx,edx
10022c88:	jne    0x10022d1e
10022c8e:	test   ebx,ebx
10022c90:	jne    0x10022d1e
10022c96:	mov    eax,DWORD PTR [ebp+0x10]
10022c99:	cmp    eax,0xffffffff
10022c9c:	jne    0x10022ca2
10022c9e:	or     eax,eax
10022ca0:	jmp    0x10022ca5
10022ca2:	add    eax,0xfffffffe
10022ca5:	push   0x0
10022ca7:	push   DWORD PTR [ebp+0x14]
10022caa:	lea    ebx,[esi+0x2]
10022cad:	push   eax
10022cae:	push   ebx
10022caf:	push   edi
10022cb0:	call   0x10022bd5
10022cb5:	add    esp,0x14
10022cb8:	test   eax,eax
10022cba:	je     0x10022cd5
10022cbc:	cmp    BYTE PTR [ebp-0x18],0x0
10022cc0:	mov    BYTE PTR [esi],0x0
10022cc3:	je     0x10022f5f
10022cc9:	mov    ecx,DWORD PTR [ebp-0x1c]
10022ccc:	and    DWORD PTR [ecx+0x70],0xfffffffd
10022cd0:	jmp    0x10022f5f
10022cd5:	cmp    BYTE PTR [ebx],0x2d
10022cd8:	jne    0x10022cde
10022cda:	mov    BYTE PTR [esi],0x2d
10022cdd:	inc    esi
10022cde:	mov    BYTE PTR [esi],0x30
10022ce1:	inc    esi
10022ce2:	cmp    DWORD PTR [ebp+0x18],0x0
10022ce6:	push   0x65
10022ce8:	sete   al
10022ceb:	dec    al
10022ced:	and    al,0xe0
10022cef:	add    al,0x78
10022cf1:	mov    BYTE PTR [esi],al
10022cf3:	inc    esi
10022cf4:	push   esi
10022cf5:	call   0x1001fce0
10022cfa:	test   eax,eax
10022cfc:	pop    ecx
10022cfd:	pop    ecx
10022cfe:	je     0x10022f50
10022d04:	cmp    DWORD PTR [ebp+0x18],0x0
10022d08:	sete   cl
10022d0b:	dec    cl
10022d0d:	and    cl,0xe0
10022d10:	add    cl,0x70
10022d13:	mov    BYTE PTR [eax],cl
10022d15:	mov    BYTE PTR [eax+0x3],0x0
10022d19:	jmp    0x10022f50
10022d1e:	and    eax,0x80000000
10022d23:	xor    ecx,ecx
10022d25:	or     ecx,eax
10022d27:	je     0x10022d2d
10022d29:	mov    BYTE PTR [esi],0x2d
10022d2c:	inc    esi
10022d2d:	mov    ebx,DWORD PTR [ebp+0x18]
10022d30:	mov    BYTE PTR [esi],0x30
10022d33:	inc    esi
10022d34:	test   ebx,ebx
10022d36:	sete   al
10022d39:	dec    al
10022d3b:	and    al,0xe0
10022d3d:	add    al,0x78
10022d3f:	mov    BYTE PTR [esi],al
10022d41:	mov    ecx,DWORD PTR [edi+0x4]
10022d44:	inc    esi
10022d45:	neg    ebx
10022d47:	sbb    ebx,ebx
10022d49:	and    ebx,0xffffffe0
10022d4c:	and    ecx,0x7ff00000
10022d52:	xor    eax,eax
10022d54:	add    ebx,0x27
10022d57:	xor    edx,edx
10022d59:	or     eax,ecx
10022d5b:	jne    0x10022d7e
10022d5d:	mov    BYTE PTR [esi],0x30
10022d60:	mov    ecx,DWORD PTR [edi+0x4]
10022d63:	mov    eax,DWORD PTR [edi]
10022d65:	and    ecx,0xfffff
10022d6b:	inc    esi
10022d6c:	or     eax,ecx
10022d6e:	jne    0x10022d75
10022d70:	mov    DWORD PTR [ebp-0x14],edx
10022d73:	jmp    0x10022d82
10022d75:	mov    DWORD PTR [ebp-0x14],0x3fe
10022d7c:	jmp    0x10022d82
10022d7e:	mov    BYTE PTR [esi],0x31
10022d81:	inc    esi
10022d82:	mov    eax,esi
10022d84:	inc    esi
10022d85:	cmp    DWORD PTR [ebp+0x14],edx
10022d88:	mov    DWORD PTR [ebp+0xc],eax
10022d8b:	jne    0x10022d91
10022d8d:	mov    BYTE PTR [eax],dl
10022d8f:	jmp    0x10022da0
10022d91:	mov    ecx,DWORD PTR [ebp-0x24]
10022d94:	mov    ecx,DWORD PTR [ecx+0xbc]
10022d9a:	mov    ecx,DWORD PTR [ecx]
10022d9c:	mov    cl,BYTE PTR [ecx]
10022d9e:	mov    BYTE PTR [eax],cl
10022da0:	mov    ecx,DWORD PTR [edi+0x4]
10022da3:	mov    eax,DWORD PTR [edi]
10022da5:	and    ecx,0xfffff
10022dab:	mov    DWORD PTR [ebp-0x8],ecx
10022dae:	ja     0x10022db8
10022db0:	cmp    eax,edx
10022db2:	jbe    0x10022e6d
10022db8:	mov    DWORD PTR [ebp-0xc],edx
10022dbb:	mov    DWORD PTR [ebp-0x8],0xf0000
10022dc2:	cmp    DWORD PTR [ebp+0x14],0x0
10022dc6:	jle    0x10022e15
10022dc8:	mov    edx,DWORD PTR [edi+0x4]
10022dcb:	and    edx,DWORD PTR [ebp-0x8]
10022dce:	mov    eax,DWORD PTR [edi]
10022dd0:	movsx  ecx,WORD PTR [ebp-0x4]
10022dd4:	and    eax,DWORD PTR [ebp-0xc]
10022dd7:	and    edx,0xfffff
10022ddd:	call   0x10023d70
10022de2:	add    ax,0x30
10022de6:	movzx  eax,ax
10022de9:	cmp    ax,0x39
10022ded:	jbe    0x10022df1
10022def:	add    eax,ebx
10022df1:	mov    ecx,DWORD PTR [ebp-0x8]
10022df4:	sub    DWORD PTR [ebp-0x4],0x4
10022df8:	mov    BYTE PTR [esi],al
10022dfa:	mov    eax,DWORD PTR [ebp-0xc]
10022dfd:	shrd   eax,ecx,0x4
10022e01:	shr    ecx,0x4
10022e04:	inc    esi
10022e05:	dec    DWORD PTR [ebp+0x14]
10022e08:	cmp    WORD PTR [ebp-0x4],0x0
10022e0d:	mov    DWORD PTR [ebp-0xc],eax
10022e10:	mov    DWORD PTR [ebp-0x8],ecx
10022e13:	jge    0x10022dc2
10022e15:	cmp    WORD PTR [ebp-0x4],0x0
10022e1a:	jl     0x10022e6d
10022e1c:	mov    edx,DWORD PTR [edi+0x4]
10022e1f:	and    edx,DWORD PTR [ebp-0x8]
10022e22:	mov    eax,DWORD PTR [edi]
10022e24:	movsx  ecx,WORD PTR [ebp-0x4]
10022e28:	and    eax,DWORD PTR [ebp-0xc]
10022e2b:	and    edx,0xfffff
10022e31:	call   0x10023d70
10022e36:	cmp    ax,0x8
10022e3a:	jbe    0x10022e6d
10022e3c:	lea    eax,[esi-0x1]
10022e3f:	mov    cl,BYTE PTR [eax]
10022e41:	cmp    cl,0x66
10022e44:	je     0x10022e4b
10022e46:	cmp    cl,0x46
10022e49:	jne    0x10022e51
10022e4b:	mov    BYTE PTR [eax],0x30
10022e4e:	dec    eax
10022e4f:	jmp    0x10022e3f
10022e51:	cmp    eax,DWORD PTR [ebp+0xc]
10022e54:	je     0x10022e6a
10022e56:	mov    cl,BYTE PTR [eax]
10022e58:	cmp    cl,0x39
10022e5b:	jne    0x10022e64
10022e5d:	add    bl,0x3a
10022e60:	mov    BYTE PTR [eax],bl
10022e62:	jmp    0x10022e6d
10022e64:	inc    cl
10022e66:	mov    BYTE PTR [eax],cl
10022e68:	jmp    0x10022e6d
10022e6a:	inc    BYTE PTR [eax-0x1]
10022e6d:	cmp    DWORD PTR [ebp+0x14],0x0
10022e71:	jle    0x10022e84
10022e73:	push   DWORD PTR [ebp+0x14]
10022e76:	push   0x30
10022e78:	push   esi
10022e79:	call   0x10016530
10022e7e:	add    esp,0xc
10022e81:	add    esi,DWORD PTR [ebp+0x14]
10022e84:	mov    eax,DWORD PTR [ebp+0xc]
10022e87:	cmp    BYTE PTR [eax],0x0
10022e8a:	jne    0x10022e8e
10022e8c:	mov    esi,eax
10022e8e:	cmp    DWORD PTR [ebp+0x18],0x0
10022e92:	mov    cl,0x34
10022e94:	sete   al
10022e97:	dec    al
10022e99:	and    al,0xe0
10022e9b:	add    al,0x70
10022e9d:	mov    BYTE PTR [esi],al
10022e9f:	mov    eax,DWORD PTR [edi]
10022ea1:	mov    edx,DWORD PTR [edi+0x4]
10022ea4:	inc    esi
10022ea5:	call   0x10023d70
10022eaa:	xor    ebx,ebx
10022eac:	and    eax,0x7ff
10022eb1:	and    edx,ebx
10022eb3:	sub    eax,DWORD PTR [ebp-0x14]
10022eb6:	push   ebx
10022eb7:	pop    ecx
10022eb8:	sbb    edx,ecx
10022eba:	js     0x10022ec8
10022ebc:	jg     0x10022ec2
10022ebe:	cmp    eax,ebx
10022ec0:	jb     0x10022ec8
10022ec2:	mov    BYTE PTR [esi],0x2b
10022ec5:	inc    esi
10022ec6:	jmp    0x10022ed2
10022ec8:	mov    BYTE PTR [esi],0x2d
10022ecb:	inc    esi
10022ecc:	neg    eax
10022ece:	adc    edx,ebx
10022ed0:	neg    edx
10022ed2:	cmp    edx,ebx
10022ed4:	mov    edi,esi
10022ed6:	mov    BYTE PTR [esi],0x30
10022ed9:	jl     0x10022eff
10022edb:	mov    ecx,0x3e8
10022ee0:	jg     0x10022ee6
10022ee2:	cmp    eax,ecx
10022ee4:	jb     0x10022eff
10022ee6:	push   ebx
10022ee7:	push   ecx
10022ee8:	push   edx
10022ee9:	push   eax
10022eea:	call   0x10023c90
10022eef:	add    al,0x30
10022ef1:	mov    BYTE PTR [esi],al
10022ef3:	inc    esi
10022ef4:	cmp    esi,edi
10022ef6:	mov    DWORD PTR [ebp-0x10],edx
10022ef9:	mov    eax,ecx
10022efb:	mov    edx,ebx
10022efd:	jne    0x10022f0a
10022eff:	test   edx,edx
10022f01:	jl     0x10022f21
10022f03:	jg     0x10022f0a
10022f05:	cmp    eax,0x64
10022f08:	jb     0x10022f21
10022f0a:	push   0x0
10022f0c:	push   0x64
10022f0e:	push   edx
10022f0f:	push   eax
10022f10:	call   0x10023c90
10022f15:	add    al,0x30
10022f17:	mov    BYTE PTR [esi],al
10022f19:	mov    DWORD PTR [ebp-0x10],edx
10022f1c:	inc    esi
10022f1d:	mov    eax,ecx
10022f1f:	mov    edx,ebx
10022f21:	cmp    esi,edi
10022f23:	jne    0x10022f30
10022f25:	test   edx,edx
10022f27:	jl     0x10022f48
10022f29:	jg     0x10022f30
10022f2b:	cmp    eax,0xa
10022f2e:	jb     0x10022f48
10022f30:	push   0x0
10022f32:	push   0xa
10022f34:	push   edx
10022f35:	push   eax
10022f36:	call   0x10023c90
10022f3b:	add    al,0x30
10022f3d:	mov    BYTE PTR [esi],al
10022f3f:	mov    DWORD PTR [ebp-0x10],edx
10022f42:	inc    esi
10022f43:	mov    eax,ecx
10022f45:	mov    DWORD PTR [ebp-0x10],ebx
10022f48:	add    al,0x30
10022f4a:	mov    BYTE PTR [esi],al
10022f4c:	mov    BYTE PTR [esi+0x1],0x0
10022f50:	cmp    BYTE PTR [ebp-0x18],0x0
10022f54:	je     0x10022f5d
10022f56:	mov    eax,DWORD PTR [ebp-0x1c]
10022f59:	and    DWORD PTR [eax+0x70],0xfffffffd
10022f5d:	xor    eax,eax
10022f5f:	pop    ebx
10022f60:	pop    edi
10022f61:	pop    esi
10022f62:	leave  
10022f63:	ret    
10022f64:	push   ebp
10022f65:	mov    ebp,esp
10022f67:	sub    esp,0x10
10022f6a:	push   ebx
10022f6b:	push   esi
10022f6c:	push   edi
10022f6d:	push   DWORD PTR [ebp+0x14]
10022f70:	mov    ebx,eax
10022f72:	mov    esi,DWORD PTR [ebx+0x4]
10022f75:	mov    edi,ecx
10022f77:	lea    ecx,[ebp-0x10]
10022f7a:	dec    esi
10022f7b:	call   0x100165aa
10022f80:	test   edi,edi
10022f82:	jne    0x10022fb1
10022f84:	call   0x10019ffe
10022f89:	push   0x16
10022f8b:	pop    esi
10022f8c:	mov    DWORD PTR [eax],esi
10022f8e:	xor    eax,eax
10022f90:	push   eax
10022f91:	push   eax
10022f92:	push   eax
10022f93:	push   eax
10022f94:	push   eax
10022f95:	call   0x1001611f
10022f9a:	add    esp,0x14
10022f9d:	cmp    BYTE PTR [ebp-0x4],0x0
10022fa1:	je     0x10022faa
10022fa3:	mov    eax,DWORD PTR [ebp-0x8]
10022fa6:	and    DWORD PTR [eax+0x70],0xfffffffd
10022faa:	mov    eax,esi
10022fac:	jmp    0x10023054
10022fb1:	cmp    DWORD PTR [ebp+0x8],0x0
10022fb5:	jbe    0x10022f84
10022fb7:	cmp    BYTE PTR [ebp+0x10],0x0
10022fbb:	je     0x10022fd5
10022fbd:	cmp    esi,DWORD PTR [ebp+0xc]
10022fc0:	jne    0x10022fd5
10022fc2:	xor    eax,eax
10022fc4:	cmp    DWORD PTR [ebx],0x2d
10022fc7:	sete   al
10022fca:	add    eax,esi
10022fcc:	add    eax,edi
10022fce:	mov    BYTE PTR [eax],0x30
10022fd1:	mov    BYTE PTR [eax+0x1],0x0
10022fd5:	cmp    DWORD PTR [ebx],0x2d
10022fd8:	mov    esi,edi
10022fda:	jne    0x10022fe2
10022fdc:	mov    BYTE PTR [edi],0x2d
10022fdf:	lea    esi,[edi+0x1]
10022fe2:	mov    eax,DWORD PTR [ebx+0x4]
10022fe5:	xor    edi,edi
10022fe7:	inc    edi
10022fe8:	test   eax,eax
10022fea:	jg     0x10022ff9
10022fec:	mov    eax,esi
10022fee:	call   0x10022961
10022ff3:	mov    BYTE PTR [esi],0x30
10022ff6:	inc    esi
10022ff7:	jmp    0x10022ffb
10022ff9:	add    esi,eax
10022ffb:	cmp    DWORD PTR [ebp+0xc],0x0
10022fff:	jle    0x10023045
10023001:	mov    eax,esi
10023003:	call   0x10022961
10023008:	mov    eax,DWORD PTR [ebp-0x10]
1002300b:	mov    eax,DWORD PTR [eax+0xbc]
10023011:	mov    eax,DWORD PTR [eax]
10023013:	mov    al,BYTE PTR [eax]
10023015:	mov    BYTE PTR [esi],al
10023017:	mov    ebx,DWORD PTR [ebx+0x4]
1002301a:	inc    esi
1002301b:	test   ebx,ebx
1002301d:	jge    0x10023045
1002301f:	neg    ebx
10023021:	cmp    BYTE PTR [ebp+0x10],0x0
10023025:	jne    0x1002302c
10023027:	cmp    DWORD PTR [ebp+0xc],ebx
1002302a:	jl     0x1002302f
1002302c:	mov    DWORD PTR [ebp+0xc],ebx
1002302f:	mov    edi,DWORD PTR [ebp+0xc]
10023032:	mov    eax,esi
10023034:	call   0x10022961
10023039:	push   edi
1002303a:	push   0x30
1002303c:	push   esi
1002303d:	call   0x10016530
10023042:	add    esp,0xc
10023045:	cmp    BYTE PTR [ebp-0x4],0x0
10023049:	je     0x10023052
1002304b:	mov    eax,DWORD PTR [ebp-0x8]
1002304e:	and    DWORD PTR [eax+0x70],0xfffffffd
10023052:	xor    eax,eax
10023054:	pop    edi
10023055:	pop    esi
10023056:	pop    ebx
10023057:	leave  
10023058:	ret    
10023059:	push   ebp
1002305a:	mov    ebp,esp
1002305c:	sub    esp,0x2c
1002305f:	mov    eax,ds:0x10064694
10023064:	xor    eax,ebp
10023066:	mov    DWORD PTR [ebp-0x4],eax
10023069:	mov    eax,DWORD PTR [ebp+0x8]
1002306c:	push   ebx
1002306d:	push   esi
1002306e:	push   edi
1002306f:	mov    edi,DWORD PTR [ebp+0xc]
10023072:	push   0x16
10023074:	pop    esi
10023075:	push   esi
10023076:	lea    ecx,[ebp-0x1c]
10023079:	push   ecx
1002307a:	lea    ecx,[ebp-0x2c]
1002307d:	push   ecx
1002307e:	push   DWORD PTR [eax+0x4]
10023081:	push   DWORD PTR [eax]
10023083:	call   0x10023bf9
10023088:	xor    ebx,ebx
1002308a:	add    esp,0x14
1002308d:	cmp    edi,ebx
1002308f:	jne    0x100230a9
10023091:	call   0x10019ffe
10023096:	push   ebx
10023097:	push   ebx
10023098:	push   ebx
10023099:	push   ebx
1002309a:	push   ebx
1002309b:	mov    DWORD PTR [eax],esi
1002309d:	call   0x1001611f
100230a2:	add    esp,0x14
100230a5:	mov    eax,esi
100230a7:	jmp    0x10023103
100230a9:	mov    eax,DWORD PTR [ebp+0x10]
100230ac:	cmp    eax,ebx
100230ae:	jbe    0x10023091
100230b0:	cmp    eax,0xffffffff
100230b3:	jne    0x100230b9
100230b5:	or     eax,eax
100230b7:	jmp    0x100230c4
100230b9:	xor    ecx,ecx
100230bb:	cmp    DWORD PTR [ebp-0x2c],0x2d
100230bf:	sete   cl
100230c2:	sub    eax,ecx
100230c4:	mov    esi,DWORD PTR [ebp+0x14]
100230c7:	lea    ecx,[ebp-0x2c]
100230ca:	push   ecx
100230cb:	mov    ecx,DWORD PTR [ebp-0x28]
100230ce:	add    ecx,esi
100230d0:	push   ecx
100230d1:	push   eax
100230d2:	xor    eax,eax
100230d4:	cmp    DWORD PTR [ebp-0x2c],0x2d
100230d8:	sete   al
100230db:	add    eax,edi
100230dd:	push   eax
100230de:	call   0x10023a81
100230e3:	add    esp,0x10
100230e6:	cmp    eax,ebx
100230e8:	je     0x100230ee
100230ea:	mov    BYTE PTR [edi],bl
100230ec:	jmp    0x10023103
100230ee:	push   DWORD PTR [ebp+0x18]
100230f1:	lea    eax,[ebp-0x2c]
100230f4:	push   ebx
100230f5:	push   esi
100230f6:	push   DWORD PTR [ebp+0x10]
100230f9:	mov    ecx,edi
100230fb:	call   0x10022f64
10023100:	add    esp,0x10
10023103:	mov    ecx,DWORD PTR [ebp-0x4]
10023106:	pop    edi
10023107:	pop    esi
10023108:	xor    ecx,ebp
1002310a:	pop    ebx
1002310b:	call   0x10015adb
10023110:	leave  
10023111:	ret    
10023112:	push   ebp
10023113:	mov    ebp,esp
10023115:	sub    esp,0x30
10023118:	mov    eax,ds:0x10064694
1002311d:	xor    eax,ebp
1002311f:	mov    DWORD PTR [ebp-0x4],eax
10023122:	mov    eax,DWORD PTR [ebp+0x8]
10023125:	push   ebx
10023126:	push   esi
10023127:	mov    esi,DWORD PTR [ebp+0xc]
1002312a:	push   edi
1002312b:	push   0x16
1002312d:	pop    edi
1002312e:	push   edi
1002312f:	lea    ecx,[ebp-0x1c]
10023132:	push   ecx
10023133:	lea    ecx,[ebp-0x30]
10023136:	push   ecx
10023137:	push   DWORD PTR [eax+0x4]
1002313a:	push   DWORD PTR [eax]
1002313c:	call   0x10023bf9
10023141:	xor    ebx,ebx
10023143:	add    esp,0x14
10023146:	cmp    esi,ebx
10023148:	jne    0x10023165
1002314a:	call   0x10019ffe
1002314f:	push   ebx
10023150:	push   ebx
10023151:	push   ebx
10023152:	push   ebx
10023153:	push   ebx
10023154:	mov    DWORD PTR [eax],edi
10023156:	call   0x1001611f
1002315b:	add    esp,0x14
1002315e:	mov    eax,edi
10023160:	jmp    0x100231fb
10023165:	mov    ecx,DWORD PTR [ebp+0x10]
10023168:	cmp    ecx,ebx
1002316a:	jbe    0x1002314a
1002316c:	mov    eax,DWORD PTR [ebp-0x2c]
1002316f:	dec    eax
10023170:	mov    DWORD PTR [ebp-0x20],eax
10023173:	xor    eax,eax
10023175:	cmp    DWORD PTR [ebp-0x30],0x2d
10023179:	sete   al
1002317c:	cmp    ecx,0xffffffff
1002317f:	lea    edi,[eax+esi*1]
10023182:	jne    0x10023188
10023184:	or     ecx,ecx
10023186:	jmp    0x1002318a
10023188:	sub    ecx,eax
1002318a:	lea    eax,[ebp-0x30]
1002318d:	push   eax
1002318e:	push   DWORD PTR [ebp+0x14]
10023191:	push   ecx
10023192:	push   edi
10023193:	call   0x10023a81
10023198:	add    esp,0x10
1002319b:	cmp    eax,ebx
1002319d:	je     0x100231a3
1002319f:	mov    BYTE PTR [esi],bl
100231a1:	jmp    0x100231fb
100231a3:	mov    eax,DWORD PTR [ebp-0x2c]
100231a6:	dec    eax
100231a7:	cmp    DWORD PTR [ebp-0x20],eax
100231aa:	setl   cl
100231ad:	cmp    eax,0xfffffffc
100231b0:	jl     0x100231df
100231b2:	cmp    eax,DWORD PTR [ebp+0x14]
100231b5:	jge    0x100231df
100231b7:	cmp    cl,bl
100231b9:	je     0x100231c5
100231bb:	mov    al,BYTE PTR [edi]
100231bd:	inc    edi
100231be:	test   al,al
100231c0:	jne    0x100231bb
100231c2:	mov    BYTE PTR [edi-0x2],bl
100231c5:	push   DWORD PTR [ebp+0x1c]
100231c8:	lea    eax,[ebp-0x30]
100231cb:	push   0x1
100231cd:	push   DWORD PTR [ebp+0x14]
100231d0:	mov    ecx,esi
100231d2:	push   DWORD PTR [ebp+0x10]
100231d5:	call   0x10022f64
100231da:	add    esp,0x10
100231dd:	jmp    0x100231fb
100231df:	push   DWORD PTR [ebp+0x1c]
100231e2:	lea    eax,[ebp-0x30]
100231e5:	push   0x1
100231e7:	push   eax
100231e8:	push   DWORD PTR [ebp+0x18]
100231eb:	mov    eax,esi
100231ed:	push   DWORD PTR [ebp+0x14]
100231f0:	push   DWORD PTR [ebp+0x10]
100231f3:	call   0x1002299a
100231f8:	add    esp,0x18
100231fb:	mov    ecx,DWORD PTR [ebp-0x4]
100231fe:	pop    edi
100231ff:	pop    esi
10023200:	xor    ecx,ebp
10023202:	pop    ebx
10023203:	call   0x10015adb
10023208:	leave  
10023209:	ret    
1002320a:	push   ebp
1002320b:	mov    ebp,esp
1002320d:	mov    eax,DWORD PTR [ebp+0x14]
10023210:	cmp    eax,0x65
10023213:	je     0x10023274
10023215:	cmp    eax,0x45
10023218:	je     0x10023274
1002321a:	cmp    eax,0x66
1002321d:	jne    0x10023238
1002321f:	push   DWORD PTR [ebp+0x20]
10023222:	push   DWORD PTR [ebp+0x18]
10023225:	push   DWORD PTR [ebp+0x10]
10023228:	push   DWORD PTR [ebp+0xc]
1002322b:	push   DWORD PTR [ebp+0x8]
1002322e:	call   0x10023059
10023233:	add    esp,0x14
10023236:	pop    ebp
10023237:	ret    
10023238:	cmp    eax,0x61
1002323b:	je     0x1002325b
1002323d:	cmp    eax,0x41
10023240:	je     0x1002325b
10023242:	push   DWORD PTR [ebp+0x20]
10023245:	push   DWORD PTR [ebp+0x1c]
10023248:	push   DWORD PTR [ebp+0x18]
1002324b:	push   DWORD PTR [ebp+0x10]
1002324e:	push   DWORD PTR [ebp+0xc]
10023251:	push   DWORD PTR [ebp+0x8]
10023254:	call   0x10023112
10023259:	jmp    0x1002328b
1002325b:	push   DWORD PTR [ebp+0x20]
1002325e:	push   DWORD PTR [ebp+0x1c]
10023261:	push   DWORD PTR [ebp+0x18]
10023264:	push   DWORD PTR [ebp+0x10]
10023267:	push   DWORD PTR [ebp+0xc]
1002326a:	push   DWORD PTR [ebp+0x8]
1002326d:	call   0x10022bf3
10023272:	jmp    0x1002328b
10023274:	push   DWORD PTR [ebp+0x20]
10023277:	push   DWORD PTR [ebp+0x1c]
1002327a:	push   DWORD PTR [ebp+0x18]
1002327d:	push   DWORD PTR [ebp+0x10]
10023280:	push   DWORD PTR [ebp+0xc]
10023283:	push   DWORD PTR [ebp+0x8]
10023286:	call   0x10022b07
1002328b:	add    esp,0x18
1002328e:	pop    ebp
1002328f:	ret    
10023290:	push   ebp
10023291:	mov    ebp,esp
10023293:	push   0x0
10023295:	push   DWORD PTR [ebp+0x1c]
10023298:	push   DWORD PTR [ebp+0x18]
1002329b:	push   DWORD PTR [ebp+0x14]
1002329e:	push   DWORD PTR [ebp+0x10]
100232a1:	push   DWORD PTR [ebp+0xc]
100232a4:	push   DWORD PTR [ebp+0x8]
100232a7:	call   0x1002320a
100232ac:	add    esp,0x1c
100232af:	pop    ebp
100232b0:	ret    
100232b1:	push   esi
100232b2:	push   0x30000
100232b7:	push   0x10000
100232bc:	xor    esi,esi
100232be:	push   esi
100232bf:	call   0x10023d8f
100232c4:	add    esp,0xc
100232c7:	test   eax,eax
100232c9:	je     0x100232d8
100232cb:	push   esi
100232cc:	push   esi
100232cd:	push   esi
100232ce:	push   esi
100232cf:	push   esi
100232d0:	call   0x10016023
100232d5:	add    esp,0x14
100232d8:	pop    esi
100232d9:	ret    
100232da:	push   ebp
100232db:	mov    ebp,esp
100232dd:	sub    esp,0x18
100232e0:	fld    QWORD PTR ds:0x10051d90
100232e6:	fstp   QWORD PTR [ebp-0x10]
100232e9:	fld    QWORD PTR ds:0x10051d88
100232ef:	fstp   QWORD PTR [ebp-0x18]
100232f2:	fld    QWORD PTR [ebp-0x18]
100232f5:	fdiv   QWORD PTR [ebp-0x10]
100232f8:	fmul   QWORD PTR [ebp-0x10]
100232fb:	fsubr  QWORD PTR [ebp-0x18]
100232fe:	fstp   QWORD PTR [ebp-0x8]
10023301:	fld1   
10023303:	fcomp  QWORD PTR [ebp-0x8]
10023306:	fnstsw ax
10023308:	test   ah,0x5
1002330b:	jp     0x10023312
1002330d:	xor    eax,eax
1002330f:	inc    eax
10023310:	leave  
10023311:	ret    
10023312:	xor    eax,eax
10023314:	leave  
10023315:	ret    
10023316:	push   0x10051db4
1002331b:	call   DWORD PTR ds:0x1002c100
10023321:	test   eax,eax
10023323:	je     0x1002333a
10023325:	push   0x10051d98
1002332a:	push   eax
1002332b:	call   DWORD PTR ds:0x1002c044
10023331:	test   eax,eax
10023333:	je     0x1002333a
10023335:	push   0x0
10023337:	call   eax
10023339:	ret    
1002333a:	jmp    0x100232da
1002333f:	push   ebp
10023340:	mov    ebp,esp
10023342:	sub    esp,0x18
10023345:	mov    eax,ds:0x10064694
1002334a:	xor    eax,ebp
1002334c:	mov    DWORD PTR [ebp-0x4],eax
1002334f:	mov    eax,DWORD PTR [ebp+0x10]
10023352:	push   ebx
10023353:	push   esi
10023354:	xor    esi,esi
10023356:	cmp    DWORD PTR [ebp+0xc],esi
10023359:	push   edi
1002335a:	mov    DWORD PTR [ebp-0x18],0x404e
10023361:	mov    DWORD PTR [eax],esi
10023363:	mov    DWORD PTR [eax+0x4],esi
10023366:	mov    DWORD PTR [eax+0x8],esi
10023369:	jbe    0x100234b5
1002336f:	mov    edx,DWORD PTR [eax]
10023371:	mov    ebx,DWORD PTR [eax+0x4]
10023374:	mov    esi,eax
10023376:	lea    edi,[ebp-0x10]
10023379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002337a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002337b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002337c:	mov    ecx,edx
1002337e:	shr    ecx,0x1f
10023381:	lea    edi,[edx+edx*1]
10023384:	lea    edx,[ebx+ebx*1]
10023387:	or     edx,ecx
10023389:	mov    ecx,DWORD PTR [eax+0x8]
1002338c:	mov    esi,ebx
1002338e:	shr    esi,0x1f
10023391:	add    ecx,ecx
10023393:	or     ecx,esi
10023395:	mov    DWORD PTR [ebp-0x14],edi
10023398:	mov    esi,edi
1002339a:	and    DWORD PTR [ebp-0x14],0x0
1002339e:	mov    ebx,edx
100233a0:	shr    ebx,0x1f
100233a3:	add    ecx,ecx
100233a5:	shr    edi,0x1f
100233a8:	or     ecx,ebx
100233aa:	mov    ebx,DWORD PTR [ebp-0x10]
100233ad:	add    esi,esi
100233af:	add    edx,edx
100233b1:	or     edx,edi
100233b3:	lea    edi,[esi+ebx*1]
100233b6:	cmp    edi,esi
100233b8:	mov    DWORD PTR [eax],esi
100233ba:	mov    DWORD PTR [eax+0x4],edx
100233bd:	mov    DWORD PTR [eax+0x8],ecx
100233c0:	jb     0x100233c6
100233c2:	cmp    edi,ebx
100233c4:	jae    0x100233cd
100233c6:	mov    DWORD PTR [ebp-0x14],0x1
100233cd:	xor    ebx,ebx
100233cf:	cmp    DWORD PTR [ebp-0x14],ebx
100233d2:	mov    DWORD PTR [eax],edi
100233d4:	je     0x100233f0
100233d6:	lea    esi,[edx+0x1]
100233d9:	cmp    esi,edx
100233db:	jb     0x100233e2
100233dd:	cmp    esi,0x1
100233e0:	jae    0x100233e5
100233e2:	xor    ebx,ebx
100233e4:	inc    ebx
100233e5:	test   ebx,ebx
100233e7:	mov    DWORD PTR [eax+0x4],esi
100233ea:	je     0x100233f0
100233ec:	inc    ecx
100233ed:	mov    DWORD PTR [eax+0x8],ecx
100233f0:	mov    ecx,DWORD PTR [eax+0x4]
100233f3:	mov    edx,DWORD PTR [ebp-0xc]
100233f6:	lea    ebx,[ecx+edx*1]
100233f9:	xor    esi,esi
100233fb:	cmp    ebx,ecx
100233fd:	jb     0x10023403
100233ff:	cmp    ebx,edx
10023401:	jae    0x10023406
10023403:	xor    esi,esi
10023405:	inc    esi
10023406:	test   esi,esi
10023408:	mov    DWORD PTR [eax+0x4],ebx
1002340b:	je     0x10023410
1002340d:	inc    DWORD PTR [eax+0x8]
10023410:	mov    ecx,DWORD PTR [ebp-0x8]
10023413:	add    DWORD PTR [eax+0x8],ecx
10023416:	and    DWORD PTR [ebp-0x14],0x0
1002341a:	lea    ecx,[edi+edi*1]
1002341d:	mov    edx,edi
1002341f:	shr    edx,0x1f
10023422:	lea    edi,[ebx+ebx*1]
10023425:	or     edi,edx
10023427:	mov    edx,DWORD PTR [eax+0x8]
1002342a:	mov    esi,ebx
1002342c:	shr    esi,0x1f
1002342f:	lea    ebx,[edx+edx*1]
10023432:	mov    edx,DWORD PTR [ebp+0x8]
10023435:	or     ebx,esi
10023437:	mov    DWORD PTR [eax],ecx
10023439:	mov    DWORD PTR [eax+0x4],edi
1002343c:	mov    DWORD PTR [eax+0x8],ebx
1002343f:	movsx  edx,BYTE PTR [edx]
10023442:	lea    esi,[ecx+edx*1]
10023445:	cmp    esi,ecx
10023447:	mov    DWORD PTR [ebp-0x10],edx
1002344a:	jb     0x10023450
1002344c:	cmp    esi,edx
1002344e:	jae    0x10023457
10023450:	mov    DWORD PTR [ebp-0x14],0x1
10023457:	cmp    DWORD PTR [ebp-0x14],0x0
1002345b:	mov    DWORD PTR [eax],esi
1002345d:	je     0x1002347b
1002345f:	lea    ecx,[edi+0x1]
10023462:	xor    edx,edx
10023464:	cmp    ecx,edi
10023466:	jb     0x1002346d
10023468:	cmp    ecx,0x1
1002346b:	jae    0x10023470
1002346d:	xor    edx,edx
1002346f:	inc    edx
10023470:	test   edx,edx
10023472:	mov    DWORD PTR [eax+0x4],ecx
10023475:	je     0x1002347b
10023477:	inc    ebx
10023478:	mov    DWORD PTR [eax+0x8],ebx
1002347b:	dec    DWORD PTR [ebp+0xc]
1002347e:	inc    DWORD PTR [ebp+0x8]
10023481:	cmp    DWORD PTR [ebp+0xc],0x0
10023485:	ja     0x1002336f
1002348b:	xor    esi,esi
1002348d:	jmp    0x100234b5
1002348f:	mov    ecx,DWORD PTR [eax+0x4]
10023492:	mov    edx,ecx
10023494:	shr    edx,0x10
10023497:	mov    DWORD PTR [eax+0x8],edx
1002349a:	mov    edx,DWORD PTR [eax]
1002349c:	mov    edi,edx
1002349e:	shl    ecx,0x10
100234a1:	shr    edi,0x10
100234a4:	or     ecx,edi
100234a6:	shl    edx,0x10
100234a9:	add    DWORD PTR [ebp-0x18],0xfff0
100234b0:	mov    DWORD PTR [eax+0x4],ecx
100234b3:	mov    DWORD PTR [eax],edx
100234b5:	cmp    DWORD PTR [eax+0x8],esi
100234b8:	je     0x1002348f
100234ba:	mov    ebx,0x8000
100234bf:	test   DWORD PTR [eax+0x8],ebx
100234c2:	jne    0x100234f4
100234c4:	mov    esi,DWORD PTR [eax]
100234c6:	mov    edi,DWORD PTR [eax+0x4]
100234c9:	add    DWORD PTR [ebp-0x18],0xffff
100234d0:	mov    ecx,esi
100234d2:	add    esi,esi
100234d4:	shr    ecx,0x1f
100234d7:	mov    DWORD PTR [eax],esi
100234d9:	lea    esi,[edi+edi*1]
100234dc:	or     esi,ecx
100234de:	mov    ecx,DWORD PTR [eax+0x8]
100234e1:	mov    edx,edi
100234e3:	shr    edx,0x1f
100234e6:	add    ecx,ecx
100234e8:	or     ecx,edx
100234ea:	test   ebx,ecx
100234ec:	mov    DWORD PTR [eax+0x4],esi
100234ef:	mov    DWORD PTR [eax+0x8],ecx
100234f2:	je     0x100234c4
100234f4:	mov    cx,WORD PTR [ebp-0x18]
100234f8:	mov    WORD PTR [eax+0xa],cx
100234fc:	mov    ecx,DWORD PTR [ebp-0x4]
100234ff:	pop    edi
10023500:	pop    esi
10023501:	xor    ecx,ebp
10023503:	pop    ebx
10023504:	call   0x10015adb
10023509:	leave  
1002350a:	ret    
1002350b:	push   ebp
1002350c:	mov    ebp,esp
1002350e:	sub    esp,0x14
10023511:	push   esi
10023512:	push   edi
10023513:	push   DWORD PTR [ebp+0x8]
10023516:	lea    ecx,[ebp-0x14]
10023519:	call   0x100165aa
1002351e:	mov    eax,DWORD PTR [ebp+0x10]
10023521:	mov    esi,DWORD PTR [ebp+0xc]
10023524:	xor    edi,edi
10023526:	cmp    eax,edi
10023528:	je     0x1002352c
1002352a:	mov    DWORD PTR [eax],esi
1002352c:	cmp    esi,edi
1002352e:	jne    0x1002355c
10023530:	call   0x10019ffe
10023535:	push   edi
10023536:	push   edi
10023537:	push   edi
10023538:	push   edi
10023539:	push   edi
1002353a:	mov    DWORD PTR [eax],0x16
10023540:	call   0x1001611f
10023545:	add    esp,0x14
10023548:	cmp    BYTE PTR [ebp-0x8],0x0
1002354c:	je     0x10023555
1002354e:	mov    eax,DWORD PTR [ebp-0xc]
10023551:	and    DWORD PTR [eax+0x70],0xfffffffd
10023555:	xor    eax,eax
10023557:	jmp    0x10023732
1002355c:	cmp    DWORD PTR [ebp+0x14],edi
1002355f:	je     0x1002356d
10023561:	cmp    DWORD PTR [ebp+0x14],0x2
10023565:	jl     0x10023530
10023567:	cmp    DWORD PTR [ebp+0x14],0x24
1002356b:	jg     0x10023530
1002356d:	mov    ecx,DWORD PTR [ebp-0x14]
10023570:	push   ebx
10023571:	mov    bl,BYTE PTR [esi]
10023573:	mov    DWORD PTR [ebp-0x4],edi
10023576:	lea    edi,[esi+0x1]
10023579:	cmp    DWORD PTR [ecx+0xac],0x1
10023580:	jle    0x10023599
10023582:	lea    eax,[ebp-0x14]
10023585:	push   eax
10023586:	movzx  eax,bl
10023589:	push   0x8
1002358b:	push   eax
1002358c:	call   0x1001f520
10023591:	mov    ecx,DWORD PTR [ebp-0x14]
10023594:	add    esp,0xc
10023597:	jmp    0x100235a9
10023599:	mov    edx,DWORD PTR [ecx+0xc8]
1002359f:	movzx  eax,bl
100235a2:	movzx  eax,BYTE PTR [edx+eax*2]
100235a6:	and    eax,0x8
100235a9:	test   eax,eax
100235ab:	je     0x100235b2
100235ad:	mov    bl,BYTE PTR [edi]
100235af:	inc    edi
100235b0:	jmp    0x10023579
100235b2:	cmp    bl,0x2d
100235b5:	jne    0x100235bd
100235b7:	or     DWORD PTR [ebp+0x18],0x2
100235bb:	jmp    0x100235c2
100235bd:	cmp    bl,0x2b
100235c0:	jne    0x100235c5
100235c2:	mov    bl,BYTE PTR [edi]
100235c4:	inc    edi
100235c5:	mov    eax,DWORD PTR [ebp+0x14]
100235c8:	test   eax,eax
100235ca:	jl     0x10023719
100235d0:	cmp    eax,0x1
100235d3:	je     0x10023719
100235d9:	cmp    eax,0x24
100235dc:	jg     0x10023719
100235e2:	test   eax,eax
100235e4:	jne    0x10023610
100235e6:	cmp    bl,0x30
100235e9:	je     0x100235f4
100235eb:	mov    DWORD PTR [ebp+0x14],0xa
100235f2:	jmp    0x10023628
100235f4:	mov    al,BYTE PTR [edi]
100235f6:	cmp    al,0x78
100235f8:	je     0x10023607
100235fa:	cmp    al,0x58
100235fc:	je     0x10023607
100235fe:	mov    DWORD PTR [ebp+0x14],0x8
10023605:	jmp    0x10023628
10023607:	mov    DWORD PTR [ebp+0x14],0x10
1002360e:	jmp    0x1002361a
10023610:	cmp    eax,0x10
10023613:	jne    0x10023628
10023615:	cmp    bl,0x30
10023618:	jne    0x10023628
1002361a:	mov    al,BYTE PTR [edi]
1002361c:	cmp    al,0x78
1002361e:	je     0x10023624
10023620:	cmp    al,0x58
10023622:	jne    0x10023628
10023624:	inc    edi
10023625:	mov    bl,BYTE PTR [edi]
10023627:	inc    edi
10023628:	mov    esi,DWORD PTR [ecx+0xc8]
1002362e:	or     eax,0xffffffff
10023631:	xor    edx,edx
10023633:	div    DWORD PTR [ebp+0x14]
10023636:	movzx  ecx,bl
10023639:	movzx  ecx,WORD PTR [esi+ecx*2]
1002363d:	test   cl,0x4
10023640:	je     0x1002364a
10023642:	movsx  ecx,bl
10023645:	sub    ecx,0x30
10023648:	jmp    0x10023664
1002364a:	test   cx,0x103
1002364f:	je     0x10023682
10023651:	mov    cl,bl
10023653:	sub    cl,0x61
10023656:	cmp    cl,0x19
10023659:	movsx  ecx,bl
1002365c:	ja     0x10023661
1002365e:	sub    ecx,0x20
10023661:	add    ecx,0xffffffc9
10023664:	cmp    ecx,DWORD PTR [ebp+0x14]
10023667:	jae    0x10023682
10023669:	or     DWORD PTR [ebp+0x18],0x8
1002366d:	cmp    DWORD PTR [ebp-0x4],eax
10023670:	jb     0x10023699
10023672:	jne    0x10023678
10023674:	cmp    ecx,edx
10023676:	jbe    0x10023699
10023678:	or     DWORD PTR [ebp+0x18],0x4
1002367c:	cmp    DWORD PTR [ebp+0x10],0x0
10023680:	jne    0x100236a5
10023682:	mov    eax,DWORD PTR [ebp+0x18]
10023685:	dec    edi
10023686:	test   al,0x8
10023688:	jne    0x100236aa
1002368a:	cmp    DWORD PTR [ebp+0x10],0x0
1002368e:	je     0x10023693
10023690:	mov    edi,DWORD PTR [ebp+0xc]
10023693:	and    DWORD PTR [ebp-0x4],0x0
10023697:	jmp    0x100236f5
10023699:	mov    ebx,DWORD PTR [ebp-0x4]
1002369c:	imul   ebx,DWORD PTR [ebp+0x14]
100236a0:	add    ebx,ecx
100236a2:	mov    DWORD PTR [ebp-0x4],ebx
100236a5:	mov    bl,BYTE PTR [edi]
100236a7:	inc    edi
100236a8:	jmp    0x10023636
100236aa:	test   al,0x4
100236ac:	mov    esi,0x7fffffff
100236b1:	jne    0x100236ce
100236b3:	test   al,0x1
100236b5:	jne    0x100236f5
100236b7:	and    eax,0x2
100236ba:	je     0x100236c5
100236bc:	cmp    DWORD PTR [ebp-0x4],0x80000000
100236c3:	ja     0x100236ce
100236c5:	test   eax,eax
100236c7:	jne    0x100236f5
100236c9:	cmp    DWORD PTR [ebp-0x4],esi
100236cc:	jbe    0x100236f5
100236ce:	call   0x10019ffe
100236d3:	test   BYTE PTR [ebp+0x18],0x1
100236d7:	mov    DWORD PTR [eax],0x22
100236dd:	je     0x100236e5
100236df:	or     DWORD PTR [ebp-0x4],0xffffffff
100236e3:	jmp    0x100236f5
100236e5:	mov    al,BYTE PTR [ebp+0x18]
100236e8:	and    al,0x2
100236ea:	neg    al
100236ec:	sbb    eax,eax
100236ee:	neg    eax
100236f0:	add    eax,esi
100236f2:	mov    DWORD PTR [ebp-0x4],eax
100236f5:	mov    eax,DWORD PTR [ebp+0x10]
100236f8:	test   eax,eax
100236fa:	je     0x100236fe
100236fc:	mov    DWORD PTR [eax],edi
100236fe:	test   BYTE PTR [ebp+0x18],0x2
10023702:	je     0x10023707
10023704:	neg    DWORD PTR [ebp-0x4]
10023707:	cmp    BYTE PTR [ebp-0x8],0x0
1002370b:	je     0x10023714
1002370d:	mov    eax,DWORD PTR [ebp-0xc]
10023710:	and    DWORD PTR [eax+0x70],0xfffffffd
10023714:	mov    eax,DWORD PTR [ebp-0x4]
10023717:	jmp    0x10023731
10023719:	mov    eax,DWORD PTR [ebp+0x10]
1002371c:	test   eax,eax
1002371e:	je     0x10023722
10023720:	mov    DWORD PTR [eax],esi
10023722:	cmp    BYTE PTR [ebp-0x8],0x0
10023726:	je     0x1002372f
10023728:	mov    eax,DWORD PTR [ebp-0xc]
1002372b:	and    DWORD PTR [eax+0x70],0xfffffffd
1002372f:	xor    eax,eax
10023731:	pop    ebx
10023732:	pop    edi
10023733:	pop    esi
10023734:	leave  
10023735:	ret    
10023736:	push   ebp
10023737:	mov    ebp,esp
10023739:	xor    eax,eax
1002373b:	cmp    DWORD PTR ds:0x100662e8,eax
10023741:	push   eax
10023742:	push   DWORD PTR [ebp+0x10]
10023745:	push   DWORD PTR [ebp+0xc]
10023748:	push   DWORD PTR [ebp+0x8]
1002374b:	jne    0x10023754
1002374d:	push   0x10064fa0
10023752:	jmp    0x10023755
10023754:	push   eax
10023755:	call   0x1002350b
1002375a:	add    esp,0x14
1002375d:	pop    ebp
1002375e:	ret    
1002375f:	push   0xa
10023761:	push   0x0
10023763:	push   DWORD PTR [esp+0xc]
10023767:	call   0x10023736
1002376c:	add    esp,0xc
1002376f:	ret    
10023770:	push   0x2
10023772:	call   0x10019cbf
10023777:	pop    ecx
10023778:	ret    
10023779:	push   ebp
1002377a:	mov    ebp,esp
1002377c:	push   ecx
1002377d:	push   esi
1002377e:	mov    esi,DWORD PTR [ebp+0xc]
10023781:	push   esi
10023782:	call   0x1001e90b
10023787:	mov    DWORD PTR [ebp+0xc],eax
1002378a:	mov    eax,DWORD PTR [esi+0xc]
1002378d:	test   al,0x82
1002378f:	pop    ecx
10023790:	jne    0x100237ab
10023792:	call   0x10019ffe
10023797:	mov    DWORD PTR [eax],0x9
1002379d:	or     DWORD PTR [esi+0xc],0x20
100237a1:	mov    eax,0xffff
100237a6:	jmp    0x100238e6
100237ab:	test   al,0x40
100237ad:	je     0x100237bc
100237af:	call   0x10019ffe
100237b4:	mov    DWORD PTR [eax],0x22
100237ba:	jmp    0x1002379d
100237bc:	test   al,0x1
100237be:	je     0x100237d7
100237c0:	and    DWORD PTR [esi+0x4],0x0
100237c4:	test   al,0x10
100237c6:	je     0x10023857
100237cc:	mov    ecx,DWORD PTR [esi+0x8]
100237cf:	and    eax,0xfffffffe
100237d2:	mov    DWORD PTR [esi],ecx
100237d4:	mov    DWORD PTR [esi+0xc],eax
100237d7:	mov    eax,DWORD PTR [esi+0xc]
100237da:	and    DWORD PTR [esi+0x4],0x0
100237de:	and    DWORD PTR [ebp-0x4],0x0
100237e2:	push   ebx
100237e3:	push   0x2
100237e5:	and    eax,0xffffffef
100237e8:	pop    ebx
100237e9:	or     eax,ebx
100237eb:	test   ax,0x10c
100237ef:	mov    DWORD PTR [esi+0xc],eax
100237f2:	jne    0x10023820
100237f4:	call   0x1001e615
100237f9:	add    eax,0x20
100237fc:	cmp    esi,eax
100237fe:	je     0x1002380c
10023800:	call   0x1001e615
10023805:	add    eax,0x40
10023808:	cmp    esi,eax
1002380a:	jne    0x10023819
1002380c:	push   DWORD PTR [ebp+0xc]
1002380f:	call   0x10021647
10023814:	test   eax,eax
10023816:	pop    ecx
10023817:	jne    0x10023820
10023819:	push   esi
1002381a:	call   0x10021603
1002381f:	pop    ecx
10023820:	test   WORD PTR [esi+0xc],0x108
10023826:	push   edi
10023827:	je     0x100238b0
1002382d:	mov    eax,DWORD PTR [esi+0x8]
10023830:	mov    edi,DWORD PTR [esi]
10023832:	lea    ecx,[eax+0x2]
10023835:	mov    DWORD PTR [esi],ecx
10023837:	mov    ecx,DWORD PTR [esi+0x18]
1002383a:	sub    edi,eax
1002383c:	sub    ecx,ebx
1002383e:	test   edi,edi
10023840:	mov    DWORD PTR [esi+0x4],ecx
10023843:	jle    0x10023862
10023845:	push   edi
10023846:	push   eax
10023847:	push   DWORD PTR [ebp+0xc]
1002384a:	call   0x1001fbf8
1002384f:	add    esp,0xc
10023852:	mov    DWORD PTR [ebp-0x4],eax
10023855:	jmp    0x100238a5
10023857:	or     eax,0x20
1002385a:	mov    DWORD PTR [esi+0xc],eax
1002385d:	jmp    0x100237a1
10023862:	mov    ecx,DWORD PTR [ebp+0xc]
10023865:	cmp    ecx,0xffffffff
10023868:	je     0x10023885
1002386a:	cmp    ecx,0xfffffffe
1002386d:	je     0x10023885
1002386f:	mov    eax,ecx
10023871:	and    eax,0x1f
10023874:	mov    edx,ecx
10023876:	sar    edx,0x5
10023879:	shl    eax,0x6
1002387c:	add    eax,DWORD PTR [edx*4+0x10067f80]
10023883:	jmp    0x1002388a
10023885:	mov    eax,0x10065188
1002388a:	test   BYTE PTR [eax+0x4],0x20
1002388e:	je     0x100238a5
10023890:	push   ebx
10023891:	push   0x0
10023893:	push   0x0
10023895:	push   ecx
10023896:	call   0x1001e2ac
1002389b:	and    eax,edx
1002389d:	add    esp,0x10
100238a0:	cmp    eax,0xffffffff
100238a3:	je     0x100238d2
100238a5:	mov    eax,DWORD PTR [esi+0x8]
100238a8:	mov    ebx,DWORD PTR [ebp+0x8]
100238ab:	mov    WORD PTR [eax],bx
100238ae:	jmp    0x100238cd
100238b0:	push   0x2
100238b2:	lea    eax,[ebp-0x4]
100238b5:	push   eax
100238b6:	push   DWORD PTR [ebp+0xc]
100238b9:	mov    edi,ebx
100238bb:	mov    ebx,DWORD PTR [ebp+0x8]
100238be:	mov    WORD PTR [ebp-0x4],bx
100238c2:	call   0x1001fbf8
100238c7:	add    esp,0xc
100238ca:	mov    DWORD PTR [ebp-0x4],eax
100238cd:	cmp    DWORD PTR [ebp-0x4],edi
100238d0:	je     0x100238dd
100238d2:	or     DWORD PTR [esi+0xc],0x20
100238d6:	mov    eax,0xffff
100238db:	jmp    0x100238e4
100238dd:	mov    eax,ebx
100238df:	and    eax,0xffff
100238e4:	pop    edi
100238e5:	pop    ebx
100238e6:	pop    esi
100238e7:	leave  
100238e8:	ret    
100238e9:	xor    eax,eax
100238eb:	push   eax
100238ec:	push   eax
100238ed:	push   0x3
100238ef:	push   eax
100238f0:	push   0x3
100238f2:	push   0x40000000
100238f7:	push   0x10051e00
100238fc:	call   DWORD PTR ds:0x1002c16c
10023902:	mov    ds:0x100659d4,eax
10023907:	ret    
10023908:	mov    eax,ds:0x100659d4
1002390d:	cmp    eax,0xffffffff
10023910:	push   esi
10023911:	mov    esi,DWORD PTR ds:0x1002c058
10023917:	je     0x10023921
10023919:	cmp    eax,0xfffffffe
1002391c:	je     0x10023921
1002391e:	push   eax
1002391f:	call   esi
10023921:	mov    eax,ds:0x100659d0
10023926:	cmp    eax,0xffffffff
10023929:	je     0x10023933
1002392b:	cmp    eax,0xfffffffe
1002392e:	je     0x10023933
10023930:	push   eax
10023931:	call   esi
10023933:	pop    esi
10023934:	ret    
10023935:	push   ebp
10023936:	mov    ebp,esp
10023938:	sub    esp,0x28
1002393b:	mov    eax,ds:0x10064694
10023940:	xor    eax,ebp
10023942:	mov    DWORD PTR [ebp-0x4],eax
10023945:	push   ebx
10023946:	push   esi
10023947:	mov    esi,DWORD PTR [ebp+0x8]
1002394a:	push   edi
1002394b:	push   DWORD PTR [ebp+0x10]
1002394e:	mov    edi,DWORD PTR [ebp+0xc]
10023951:	lea    ecx,[ebp-0x24]
10023954:	call   0x100165aa
10023959:	lea    eax,[ebp-0x24]
1002395c:	push   eax
1002395d:	xor    ebx,ebx
1002395f:	push   ebx
10023960:	push   ebx
10023961:	push   ebx
10023962:	push   ebx
10023963:	push   edi
10023964:	lea    eax,[ebp-0x28]
10023967:	push   eax
10023968:	lea    eax,[ebp-0x10]
1002396b:	push   eax
1002396c:	call   0x10023e61
10023971:	mov    DWORD PTR [ebp-0x14],eax
10023974:	lea    eax,[ebp-0x10]
10023977:	push   esi
10023978:	push   eax
10023979:	call   0x10021d7f
1002397e:	add    esp,0x28
10023981:	test   BYTE PTR [ebp-0x14],0x3
10023985:	jne    0x100239b2
10023987:	cmp    eax,0x1
1002398a:	jne    0x1002399d
1002398c:	cmp    BYTE PTR [ebp-0x18],bl
1002398f:	je     0x10023998
10023991:	mov    eax,DWORD PTR [ebp-0x1c]
10023994:	and    DWORD PTR [eax+0x70],0xfffffffd
10023998:	push   0x3
1002399a:	pop    eax
1002399b:	jmp    0x100239cc
1002399d:	cmp    eax,0x2
100239a0:	jne    0x100239be
100239a2:	cmp    BYTE PTR [ebp-0x18],bl
100239a5:	je     0x100239ae
100239a7:	mov    eax,DWORD PTR [ebp-0x1c]
100239aa:	and    DWORD PTR [eax+0x70],0xfffffffd
100239ae:	push   0x4
100239b0:	jmp    0x1002399a
100239b2:	test   BYTE PTR [ebp-0x14],0x1
100239b6:	jne    0x100239a2
100239b8:	test   BYTE PTR [ebp-0x14],0x2
100239bc:	jne    0x1002398c
100239be:	cmp    BYTE PTR [ebp-0x18],bl
100239c1:	je     0x100239ca
100239c3:	mov    eax,DWORD PTR [ebp-0x1c]
100239c6:	and    DWORD PTR [eax+0x70],0xfffffffd
100239ca:	xor    eax,eax
100239cc:	mov    ecx,DWORD PTR [ebp-0x4]
100239cf:	pop    edi
100239d0:	pop    esi
100239d1:	xor    ecx,ebp
100239d3:	pop    ebx
100239d4:	call   0x10015adb
100239d9:	leave  
100239da:	ret    
100239db:	push   ebp
100239dc:	mov    ebp,esp
100239de:	sub    esp,0x28
100239e1:	mov    eax,ds:0x10064694
100239e6:	xor    eax,ebp
100239e8:	mov    DWORD PTR [ebp-0x4],eax
100239eb:	push   ebx
100239ec:	push   esi
100239ed:	mov    esi,DWORD PTR [ebp+0x8]
100239f0:	push   edi
100239f1:	push   DWORD PTR [ebp+0x10]
100239f4:	mov    edi,DWORD PTR [ebp+0xc]
100239f7:	lea    ecx,[ebp-0x24]
100239fa:	call   0x100165aa
100239ff:	lea    eax,[ebp-0x24]
10023a02:	push   eax
10023a03:	xor    ebx,ebx
10023a05:	push   ebx
10023a06:	push   ebx
10023a07:	push   ebx
10023a08:	push   ebx
10023a09:	push   edi
10023a0a:	lea    eax,[ebp-0x28]
10023a0d:	push   eax
10023a0e:	lea    eax,[ebp-0x10]
10023a11:	push   eax
10023a12:	call   0x10023e61
10023a17:	mov    DWORD PTR [ebp-0x14],eax
10023a1a:	lea    eax,[ebp-0x10]
10023a1d:	push   esi
10023a1e:	push   eax
10023a1f:	call   0x100222c1
10023a24:	add    esp,0x28
10023a27:	test   BYTE PTR [ebp-0x14],0x3
10023a2b:	jne    0x10023a58
10023a2d:	cmp    eax,0x1
10023a30:	jne    0x10023a43
10023a32:	cmp    BYTE PTR [ebp-0x18],bl
10023a35:	je     0x10023a3e
10023a37:	mov    eax,DWORD PTR [ebp-0x1c]
10023a3a:	and    DWORD PTR [eax+0x70],0xfffffffd
10023a3e:	push   0x3
10023a40:	pop    eax
10023a41:	jmp    0x10023a72
10023a43:	cmp    eax,0x2
10023a46:	jne    0x10023a64
10023a48:	cmp    BYTE PTR [ebp-0x18],bl
10023a4b:	je     0x10023a54
10023a4d:	mov    eax,DWORD PTR [ebp-0x1c]
10023a50:	and    DWORD PTR [eax+0x70],0xfffffffd
10023a54:	push   0x4
10023a56:	jmp    0x10023a40
10023a58:	test   BYTE PTR [ebp-0x14],0x1
10023a5c:	jne    0x10023a48
10023a5e:	test   BYTE PTR [ebp-0x14],0x2
10023a62:	jne    0x10023a32
10023a64:	cmp    BYTE PTR [ebp-0x18],bl
10023a67:	je     0x10023a70
10023a69:	mov    eax,DWORD PTR [ebp-0x1c]
10023a6c:	and    DWORD PTR [eax+0x70],0xfffffffd
10023a70:	xor    eax,eax
10023a72:	mov    ecx,DWORD PTR [ebp-0x4]
10023a75:	pop    edi
10023a76:	pop    esi
10023a77:	xor    ecx,ebp
10023a79:	pop    ebx
10023a7a:	call   0x10015adb
10023a7f:	leave  
10023a80:	ret    
10023a81:	push   ebp
10023a82:	mov    ebp,esp
10023a84:	mov    ecx,DWORD PTR [ebp+0x14]
10023a87:	push   ebx
10023a88:	push   esi
10023a89:	mov    esi,DWORD PTR [ebp+0x8]
10023a8c:	xor    ebx,ebx
10023a8e:	cmp    esi,ebx
10023a90:	push   edi
10023a91:	mov    edi,DWORD PTR [ecx+0xc]
10023a94:	jne    0x10023ab4
10023a96:	call   0x10019ffe
10023a9b:	push   0x16
10023a9d:	pop    esi
10023a9e:	mov    DWORD PTR [eax],esi
10023aa0:	push   ebx
10023aa1:	push   ebx
10023aa2:	push   ebx
10023aa3:	push   ebx
10023aa4:	push   ebx
10023aa5:	call   0x1001611f
10023aaa:	add    esp,0x14
10023aad:	mov    eax,esi
10023aaf:	jmp    0x10023b39
10023ab4:	cmp    DWORD PTR [ebp+0xc],ebx
10023ab7:	jbe    0x10023a96
10023ab9:	mov    edx,DWORD PTR [ebp+0x10]
10023abc:	cmp    edx,ebx
10023abe:	mov    BYTE PTR [esi],bl
10023ac0:	jle    0x10023ac6
10023ac2:	mov    eax,edx
10023ac4:	jmp    0x10023ac8
10023ac6:	xor    eax,eax
10023ac8:	inc    eax
10023ac9:	cmp    DWORD PTR [ebp+0xc],eax
10023acc:	ja     0x10023adc
10023ace:	call   0x10019ffe
10023ad3:	push   0x22
10023ad5:	pop    ecx
10023ad6:	mov    DWORD PTR [eax],ecx
10023ad8:	mov    esi,ecx
10023ada:	jmp    0x10023aa0
10023adc:	cmp    edx,ebx
10023ade:	mov    BYTE PTR [esi],0x30
10023ae1:	lea    eax,[esi+0x1]
10023ae4:	jle    0x10023b00
10023ae6:	mov    cl,BYTE PTR [edi]
10023ae8:	cmp    cl,bl
10023aea:	je     0x10023af2
10023aec:	movsx  ecx,cl
10023aef:	inc    edi
10023af0:	jmp    0x10023af5
10023af2:	push   0x30
10023af4:	pop    ecx
10023af5:	mov    BYTE PTR [eax],cl
10023af7:	inc    eax
10023af8:	dec    edx
10023af9:	cmp    edx,ebx
10023afb:	jg     0x10023ae6
10023afd:	mov    ecx,DWORD PTR [ebp+0x14]
10023b00:	cmp    edx,ebx
10023b02:	mov    BYTE PTR [eax],bl
10023b04:	jl     0x10023b18
10023b06:	cmp    BYTE PTR [edi],0x35
10023b09:	jl     0x10023b18
10023b0b:	jmp    0x10023b10
10023b0d:	mov    BYTE PTR [eax],0x30
10023b10:	dec    eax
10023b11:	cmp    BYTE PTR [eax],0x39
10023b14:	je     0x10023b0d
10023b16:	inc    BYTE PTR [eax]
10023b18:	cmp    BYTE PTR [esi],0x31
10023b1b:	jne    0x10023b22
10023b1d:	inc    DWORD PTR [ecx+0x4]
10023b20:	jmp    0x10023b37
10023b22:	lea    edi,[esi+0x1]
10023b25:	push   edi
10023b26:	call   0x10016370
10023b2b:	inc    eax
10023b2c:	push   eax
10023b2d:	push   edi
10023b2e:	push   esi
10023b2f:	call   0x1001a1e0
10023b34:	add    esp,0x10
10023b37:	xor    eax,eax
10023b39:	pop    edi
10023b3a:	pop    esi
10023b3b:	pop    ebx
10023b3c:	pop    ebp
10023b3d:	ret    
10023b3e:	push   ebp
10023b3f:	mov    ebp,esp
10023b41:	push   ecx
10023b42:	mov    edx,DWORD PTR [ebp+0xc]
10023b45:	movzx  eax,WORD PTR [edx+0x6]
10023b49:	push   ebx
10023b4a:	mov    ecx,eax
10023b4c:	push   esi
10023b4d:	push   edi
10023b4e:	shr    ecx,0x4
10023b51:	and    eax,0x8000
10023b56:	mov    edi,0x7ff
10023b5b:	and    ecx,edi
10023b5d:	mov    DWORD PTR [ebp+0xc],eax
10023b60:	mov    eax,DWORD PTR [edx+0x4]
10023b63:	mov    edx,DWORD PTR [edx]
10023b65:	movzx  ebx,cx
10023b68:	mov    esi,0x80000000
10023b6d:	and    eax,0xfffff
10023b72:	test   ebx,ebx
10023b74:	mov    DWORD PTR [ebp-0x4],esi
10023b77:	je     0x10023b8c
10023b79:	cmp    ebx,edi
10023b7b:	je     0x10023b85
10023b7d:	add    ecx,0x3c00
10023b83:	jmp    0x10023bad
10023b85:	mov    edi,0x7fff
10023b8a:	jmp    0x10023bb0
10023b8c:	xor    ebx,ebx
10023b8e:	cmp    eax,ebx
10023b90:	jne    0x10023ba4
10023b92:	cmp    edx,ebx
10023b94:	jne    0x10023ba4
10023b96:	mov    eax,DWORD PTR [ebp+0x8]
10023b99:	mov    cx,WORD PTR [ebp+0xc]
10023b9d:	mov    DWORD PTR [eax+0x4],ebx
10023ba0:	mov    DWORD PTR [eax],ebx
10023ba2:	jmp    0x10023bf0
10023ba4:	add    ecx,0x3c01
10023baa:	mov    DWORD PTR [ebp-0x4],ebx
10023bad:	movzx  edi,cx
10023bb0:	mov    ecx,edx
10023bb2:	shr    ecx,0x15
10023bb5:	shl    eax,0xb
10023bb8:	or     ecx,eax
10023bba:	or     ecx,DWORD PTR [ebp-0x4]
10023bbd:	mov    eax,DWORD PTR [ebp+0x8]
10023bc0:	shl    edx,0xb
10023bc3:	test   esi,ecx
10023bc5:	mov    DWORD PTR [eax+0x4],ecx
10023bc8:	mov    DWORD PTR [eax],edx
10023bca:	jne    0x10023beb
10023bcc:	mov    ecx,DWORD PTR [eax]
10023bce:	mov    edx,DWORD PTR [eax+0x4]
10023bd1:	mov    ebx,ecx
10023bd3:	add    edx,edx
10023bd5:	shr    ebx,0x1f
10023bd8:	or     edx,ebx
10023bda:	add    ecx,ecx
10023bdc:	add    edi,0xffff
10023be2:	test   esi,edx
10023be4:	mov    DWORD PTR [eax+0x4],edx
10023be7:	mov    DWORD PTR [eax],ecx
10023be9:	je     0x10023bcc
10023beb:	mov    ecx,DWORD PTR [ebp+0xc]
10023bee:	or     ecx,edi
10023bf0:	pop    edi
10023bf1:	pop    esi
10023bf2:	mov    WORD PTR [eax+0x8],cx
10023bf6:	pop    ebx
10023bf7:	leave  
10023bf8:	ret    
10023bf9:	push   ebp
10023bfa:	mov    ebp,esp
10023bfc:	sub    esp,0x30
10023bff:	mov    eax,ds:0x10064694
10023c04:	xor    eax,ebp
10023c06:	mov    DWORD PTR [ebp-0x4],eax
10023c09:	mov    eax,DWORD PTR [ebp+0x14]
10023c0c:	push   ebx
10023c0d:	mov    ebx,DWORD PTR [ebp+0x10]
10023c10:	push   esi
10023c11:	mov    DWORD PTR [ebp-0x30],eax
10023c14:	push   edi
10023c15:	lea    eax,[ebp+0x8]
10023c18:	push   eax
10023c19:	lea    eax,[ebp-0x10]
10023c1c:	push   eax
10023c1d:	call   0x10023b3e
10023c22:	pop    ecx
10023c23:	pop    ecx
10023c24:	lea    eax,[ebp-0x2c]
10023c27:	push   eax
10023c28:	push   0x0
10023c2a:	push   0x11
10023c2c:	sub    esp,0xc
10023c2f:	lea    esi,[ebp-0x10]
10023c32:	mov    edi,esp
10023c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10023c36:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
10023c38:	call   0x10024521
10023c3d:	mov    esi,DWORD PTR [ebp-0x30]
10023c40:	mov    DWORD PTR [ebx+0x8],eax
10023c43:	movsx  eax,BYTE PTR [ebp-0x2a]
10023c47:	mov    DWORD PTR [ebx],eax
10023c49:	movsx  eax,WORD PTR [ebp-0x2c]
10023c4d:	mov    DWORD PTR [ebx+0x4],eax
10023c50:	lea    eax,[ebp-0x28]
10023c53:	push   eax
10023c54:	push   DWORD PTR [ebp+0x18]
10023c57:	push   esi
10023c58:	call   0x1001a148
10023c5d:	add    esp,0x24
10023c60:	test   eax,eax
10023c62:	je     0x10023c73
10023c64:	xor    eax,eax
10023c66:	push   eax
10023c67:	push   eax
10023c68:	push   eax
10023c69:	push   eax
10023c6a:	push   eax
10023c6b:	call   0x10016023
10023c70:	add    esp,0x14
10023c73:	mov    ecx,DWORD PTR [ebp-0x4]
10023c76:	pop    edi
10023c77:	mov    DWORD PTR [ebx+0xc],esi
10023c7a:	pop    esi
10023c7b:	mov    eax,ebx
10023c7d:	xor    ecx,ebp
10023c7f:	pop    ebx
10023c80:	call   0x10015adb
10023c85:	leave  
10023c86:	ret    
10023c87:	int3   
10023c88:	int3   
10023c89:	int3   
10023c8a:	int3   
10023c8b:	int3   
10023c8c:	int3   
10023c8d:	int3   
10023c8e:	int3   
10023c8f:	int3   
10023c90:	push   edi
10023c91:	push   esi
10023c92:	push   ebp
10023c93:	xor    edi,edi
10023c95:	xor    ebp,ebp
10023c97:	mov    eax,DWORD PTR [esp+0x14]
10023c9b:	or     eax,eax
10023c9d:	jge    0x10023cb4
10023c9f:	inc    edi
10023ca0:	inc    ebp
10023ca1:	mov    edx,DWORD PTR [esp+0x10]
10023ca5:	neg    eax
10023ca7:	neg    edx
10023ca9:	sbb    eax,0x0
10023cac:	mov    DWORD PTR [esp+0x14],eax
10023cb0:	mov    DWORD PTR [esp+0x10],edx
10023cb4:	mov    eax,DWORD PTR [esp+0x1c]
10023cb8:	or     eax,eax
10023cba:	jge    0x10023cd0
10023cbc:	inc    edi
10023cbd:	mov    edx,DWORD PTR [esp+0x18]
10023cc1:	neg    eax
10023cc3:	neg    edx
10023cc5:	sbb    eax,0x0
10023cc8:	mov    DWORD PTR [esp+0x1c],eax
10023ccc:	mov    DWORD PTR [esp+0x18],edx
10023cd0:	or     eax,eax
10023cd2:	jne    0x10023cfc
10023cd4:	mov    ecx,DWORD PTR [esp+0x18]
10023cd8:	mov    eax,DWORD PTR [esp+0x14]
10023cdc:	xor    edx,edx
10023cde:	div    ecx
10023ce0:	mov    ebx,eax
10023ce2:	mov    eax,DWORD PTR [esp+0x10]
10023ce6:	div    ecx
10023ce8:	mov    esi,eax
10023cea:	mov    eax,ebx
10023cec:	mul    DWORD PTR [esp+0x18]
10023cf0:	mov    ecx,eax
10023cf2:	mov    eax,esi
10023cf4:	mul    DWORD PTR [esp+0x18]
10023cf8:	add    edx,ecx
10023cfa:	jmp    0x10023d43
10023cfc:	mov    ebx,eax
10023cfe:	mov    ecx,DWORD PTR [esp+0x18]
10023d02:	mov    edx,DWORD PTR [esp+0x14]
10023d06:	mov    eax,DWORD PTR [esp+0x10]
10023d0a:	shr    ebx,1
10023d0c:	rcr    ecx,1
10023d0e:	shr    edx,1
10023d10:	rcr    eax,1
10023d12:	or     ebx,ebx
10023d14:	jne    0x10023d0a
10023d16:	div    ecx
10023d18:	mov    esi,eax
10023d1a:	mul    DWORD PTR [esp+0x1c]
10023d1e:	mov    ecx,eax
10023d20:	mov    eax,DWORD PTR [esp+0x18]
10023d24:	mul    esi
10023d26:	add    edx,ecx
10023d28:	jb     0x10023d38
10023d2a:	cmp    edx,DWORD PTR [esp+0x14]
10023d2e:	ja     0x10023d38
10023d30:	jb     0x10023d41
10023d32:	cmp    eax,DWORD PTR [esp+0x10]
10023d36:	jbe    0x10023d41
10023d38:	dec    esi
10023d39:	sub    eax,DWORD PTR [esp+0x18]
10023d3d:	sbb    edx,DWORD PTR [esp+0x1c]
10023d41:	xor    ebx,ebx
10023d43:	sub    eax,DWORD PTR [esp+0x10]
10023d47:	sbb    edx,DWORD PTR [esp+0x14]
10023d4b:	dec    ebp
10023d4c:	jns    0x10023d55
10023d4e:	neg    edx
10023d50:	neg    eax
10023d52:	sbb    edx,0x0
10023d55:	mov    ecx,edx
10023d57:	mov    edx,ebx
10023d59:	mov    ebx,ecx
10023d5b:	mov    ecx,eax
10023d5d:	mov    eax,esi
10023d5f:	dec    edi
10023d60:	jne    0x10023d69
10023d62:	neg    edx
10023d64:	neg    eax
10023d66:	sbb    edx,0x0
10023d69:	pop    ebp
10023d6a:	pop    esi
10023d6b:	pop    edi
10023d6c:	ret    0x10
10023d6f:	int3   
10023d70:	cmp    cl,0x40
10023d73:	jae    0x10023d8a
10023d75:	cmp    cl,0x20
10023d78:	jae    0x10023d80
10023d7a:	shrd   eax,edx,cl
10023d7d:	shr    edx,cl
10023d7f:	ret    
10023d80:	mov    eax,edx
10023d82:	xor    edx,edx
10023d84:	and    cl,0x1f
10023d87:	shr    eax,cl
10023d89:	ret    
10023d8a:	xor    eax,eax
10023d8c:	xor    edx,edx
10023d8e:	ret    
10023d8f:	push   ebp
10023d90:	mov    ebp,esp
10023d92:	mov    eax,DWORD PTR [ebp+0x10]
10023d95:	mov    ecx,DWORD PTR [ebp+0xc]
10023d98:	and    eax,0xfff7ffff
10023d9d:	and    ecx,eax
10023d9f:	test   ecx,0xfcf0fce0
10023da5:	push   esi
10023da6:	je     0x10023dd9
10023da8:	push   edi
10023da9:	mov    edi,DWORD PTR [ebp+0x8]
10023dac:	xor    esi,esi
10023dae:	cmp    edi,esi
10023db0:	je     0x10023dbd
10023db2:	push   esi
10023db3:	push   esi
10023db4:	call   0x10024f15
10023db9:	pop    ecx
10023dba:	pop    ecx
10023dbb:	mov    DWORD PTR [edi],eax
10023dbd:	call   0x10019ffe
10023dc2:	push   0x16
10023dc4:	pop    edi
10023dc5:	push   esi
10023dc6:	push   esi
10023dc7:	push   esi
10023dc8:	push   esi
10023dc9:	push   esi
10023dca:	mov    DWORD PTR [eax],edi
10023dcc:	call   0x1001611f
10023dd1:	add    esp,0x14
10023dd4:	mov    eax,edi
10023dd6:	pop    edi
10023dd7:	jmp    0x10023df6
10023dd9:	mov    esi,DWORD PTR [ebp+0x8]
10023ddc:	test   esi,esi
10023dde:	push   eax
10023ddf:	push   DWORD PTR [ebp+0xc]
10023de2:	je     0x10023ded
10023de4:	call   0x10024f15
10023de9:	mov    DWORD PTR [esi],eax
10023deb:	jmp    0x10023df2
10023ded:	call   0x10024f15
10023df2:	pop    ecx
10023df3:	pop    ecx
10023df4:	xor    eax,eax
10023df6:	pop    esi
10023df7:	pop    ebp
10023df8:	ret    
10023df9:	int3   
10023dfa:	int3   
10023dfb:	int3   
10023dfc:	int3   
10023dfd:	int3   
10023dfe:	int3   
10023dff:	int3   
10023e00:	push   ebp
10023e01:	mov    ebp,esp
10023e03:	push   edi
10023e04:	push   esi
10023e05:	push   ebx
10023e06:	mov    ecx,DWORD PTR [ebp+0x10]
10023e09:	or     ecx,ecx
10023e0b:	je     0x10023e5a
10023e0d:	mov    esi,DWORD PTR [ebp+0x8]
10023e10:	mov    edi,DWORD PTR [ebp+0xc]
10023e13:	mov    bh,0x41
10023e15:	mov    bl,0x5a
10023e17:	mov    dh,0x20
10023e19:	lea    ecx,[ecx+0x0]
10023e1c:	mov    ah,BYTE PTR [esi]
10023e1e:	or     ah,ah
10023e20:	mov    al,BYTE PTR [edi]
10023e22:	je     0x10023e4b
10023e24:	or     al,al
10023e26:	je     0x10023e4b
10023e28:	add    esi,0x1
10023e2b:	add    edi,0x1
10023e2e:	cmp    ah,bh
10023e30:	jb     0x10023e38
10023e32:	cmp    ah,bl
10023e34:	ja     0x10023e38
10023e36:	add    ah,dh
10023e38:	cmp    al,bh
10023e3a:	jb     0x10023e42
10023e3c:	cmp    al,bl
10023e3e:	ja     0x10023e42
10023e40:	add    al,dh
10023e42:	cmp    ah,al
10023e44:	jne    0x10023e51
10023e46:	sub    ecx,0x1
10023e49:	jne    0x10023e1c
10023e4b:	xor    ecx,ecx
10023e4d:	cmp    ah,al
10023e4f:	je     0x10023e5a
10023e51:	mov    ecx,0xffffffff
10023e56:	jb     0x10023e5a
10023e58:	neg    ecx
10023e5a:	mov    eax,ecx
10023e5c:	pop    ebx
10023e5d:	pop    esi
10023e5e:	pop    edi
10023e5f:	leave  
10023e60:	ret    
10023e61:	push   ebp
10023e62:	mov    ebp,esp
10023e64:	sub    esp,0x7c
10023e67:	mov    eax,ds:0x10064694
10023e6c:	xor    eax,ebp
10023e6e:	mov    DWORD PTR [ebp-0x4],eax
10023e71:	mov    eax,DWORD PTR [ebp+0x8]
10023e74:	push   ebx
10023e75:	xor    ebx,ebx
10023e77:	push   esi
10023e78:	xor    esi,esi
10023e7a:	mov    DWORD PTR [ebp-0x7c],eax
10023e7d:	mov    eax,DWORD PTR [ebp+0xc]
10023e80:	inc    esi
10023e81:	xor    ecx,ecx
10023e83:	cmp    DWORD PTR [ebp+0x24],ebx
10023e86:	push   edi
10023e87:	mov    DWORD PTR [ebp-0x70],eax
10023e8a:	lea    edi,[ebp-0x20]
10023e8d:	mov    DWORD PTR [ebp-0x74],ebx
10023e90:	mov    DWORD PTR [ebp-0x68],esi
10023e93:	mov    DWORD PTR [ebp-0x4c],ebx
10023e96:	mov    DWORD PTR [ebp-0x58],ebx
10023e99:	mov    DWORD PTR [ebp-0x5c],ebx
10023e9c:	mov    DWORD PTR [ebp-0x60],ebx
10023e9f:	mov    DWORD PTR [ebp-0x64],ebx
10023ea2:	mov    DWORD PTR [ebp-0x50],ebx
10023ea5:	mov    DWORD PTR [ebp-0x6c],ebx
10023ea8:	jne    0x10023ec9
10023eaa:	call   0x10019ffe
10023eaf:	push   ebx
10023eb0:	push   ebx
10023eb1:	push   ebx
10023eb2:	push   ebx
10023eb3:	push   ebx
10023eb4:	mov    DWORD PTR [eax],0x16
10023eba:	call   0x1001611f
10023ebf:	add    esp,0x14
10023ec2:	xor    eax,eax
10023ec4:	jmp    0x100244e2
10023ec9:	mov    edx,DWORD PTR [ebp+0x10]
10023ecc:	mov    DWORD PTR [ebp-0x54],edx
10023ecf:	mov    al,BYTE PTR [edx]
10023ed1:	cmp    al,0x20
10023ed3:	je     0x10023ee1
10023ed5:	cmp    al,0x9
10023ed7:	je     0x10023ee1
10023ed9:	cmp    al,0xa
10023edb:	je     0x10023ee1
10023edd:	cmp    al,0xd
10023edf:	jne    0x10023ee4
10023ee1:	inc    edx
10023ee2:	jmp    0x10023ecf
10023ee4:	mov    bl,0x30
10023ee6:	mov    al,BYTE PTR [edx]
10023ee8:	inc    edx
10023ee9:	cmp    ecx,0xb
10023eec:	ja     0x10024121
10023ef2:	jmp    DWORD PTR [ecx*4+0x100244f1]
10023ef9:	mov    cl,al
10023efb:	sub    cl,0x31
10023efe:	cmp    cl,0x8
10023f01:	ja     0x10023f09
10023f03:	push   0x3
10023f05:	pop    ecx
10023f06:	dec    edx
10023f07:	jmp    0x10023ee6
10023f09:	mov    ecx,DWORD PTR [ebp+0x24]
10023f0c:	mov    ecx,DWORD PTR [ecx]
10023f0e:	mov    ecx,DWORD PTR [ecx+0xbc]
10023f14:	mov    ecx,DWORD PTR [ecx]
10023f16:	cmp    al,BYTE PTR [ecx]
10023f18:	jne    0x10023f1f
10023f1a:	push   0x5
10023f1c:	pop    ecx
10023f1d:	jmp    0x10023ee6
10023f1f:	movsx  eax,al
10023f22:	sub    eax,0x2b
10023f25:	je     0x10023f44
10023f27:	dec    eax
10023f28:	dec    eax
10023f29:	je     0x10023f38
10023f2b:	sub    eax,0x3
10023f2e:	jne    0x100240bf
10023f34:	mov    ecx,esi
10023f36:	jmp    0x10023ee6
10023f38:	push   0x2
10023f3a:	pop    ecx
10023f3b:	mov    DWORD PTR [ebp-0x74],0x8000
10023f42:	jmp    0x10023ee6
10023f44:	and    DWORD PTR [ebp-0x74],0x0
10023f48:	push   0x2
10023f4a:	pop    ecx
10023f4b:	jmp    0x10023ee6
10023f4d:	mov    cl,al
10023f4f:	sub    cl,0x31
10023f52:	cmp    cl,0x8
10023f55:	mov    DWORD PTR [ebp-0x58],esi
10023f58:	jbe    0x10023f03
10023f5a:	mov    ecx,DWORD PTR [ebp+0x24]
10023f5d:	mov    ecx,DWORD PTR [ecx]
10023f5f:	mov    ecx,DWORD PTR [ecx+0xbc]
10023f65:	mov    ecx,DWORD PTR [ecx]
10023f67:	cmp    al,BYTE PTR [ecx]
10023f69:	jne    0x10023f6f
10023f6b:	push   0x4
10023f6d:	jmp    0x10023f1c
10023f6f:	cmp    al,0x2b
10023f71:	je     0x10023f9b
10023f73:	cmp    al,0x2d
10023f75:	je     0x10023f9b
10023f77:	cmp    al,bl
10023f79:	je     0x10023f34
10023f7b:	cmp    al,0x43
10023f7d:	jle    0x100240bf
10023f83:	cmp    al,0x45
10023f85:	jle    0x10023f97
10023f87:	cmp    al,0x63
10023f89:	jle    0x100240bf
10023f8f:	cmp    al,0x65
10023f91:	jg     0x100240bf
10023f97:	push   0x6
10023f99:	jmp    0x10023f1c
10023f9b:	dec    edx
10023f9c:	push   0xb
10023f9e:	jmp    0x10023f1c
10023fa3:	mov    cl,al
10023fa5:	sub    cl,0x31
10023fa8:	cmp    cl,0x8
10023fab:	jbe    0x10023f03
10023fb1:	mov    ecx,DWORD PTR [ebp+0x24]
10023fb4:	mov    ecx,DWORD PTR [ecx]
10023fb6:	mov    ecx,DWORD PTR [ecx+0xbc]
10023fbc:	mov    ecx,DWORD PTR [ecx]
10023fbe:	cmp    al,BYTE PTR [ecx]
10023fc0:	je     0x10023f1a
10023fc6:	cmp    al,bl
10023fc8:	je     0x10023f34
10023fce:	mov    edx,DWORD PTR [ebp-0x54]
10023fd1:	jmp    0x100240ea
10023fd6:	mov    DWORD PTR [ebp-0x58],esi
10023fd9:	jmp    0x10023ff5
10023fdb:	cmp    al,0x39
10023fdd:	jg     0x10023ff9
10023fdf:	cmp    DWORD PTR [ebp-0x4c],0x19
10023fe3:	jae    0x10023fef
10023fe5:	inc    DWORD PTR [ebp-0x4c]
10023fe8:	sub    al,bl
10023fea:	mov    BYTE PTR [edi],al
10023fec:	inc    edi
10023fed:	jmp    0x10023ff2
10023fef:	inc    DWORD PTR [ebp-0x50]
10023ff2:	mov    al,BYTE PTR [edx]
10023ff4:	inc    edx
10023ff5:	cmp    al,bl
10023ff7:	jge    0x10023fdb
10023ff9:	mov    ecx,DWORD PTR [ebp+0x24]
10023ffc:	mov    ecx,DWORD PTR [ecx]
10023ffe:	mov    ecx,DWORD PTR [ecx+0xbc]
10024004:	mov    ecx,DWORD PTR [ecx]
10024006:	cmp    al,BYTE PTR [ecx]
10024008:	je     0x10023f6b
1002400e:	cmp    al,0x2b
10024010:	je     0x10023f9b
10024012:	cmp    al,0x2d
10024014:	je     0x10023f9b
10024016:	jmp    0x10023f7b
1002401b:	cmp    DWORD PTR [ebp-0x4c],0x0
1002401f:	mov    DWORD PTR [ebp-0x58],esi
10024022:	mov    DWORD PTR [ebp-0x5c],esi
10024025:	jne    0x1002404d
10024027:	jmp    0x1002402f
10024029:	dec    DWORD PTR [ebp-0x50]
1002402c:	mov    al,BYTE PTR [edx]
1002402e:	inc    edx
1002402f:	cmp    al,bl
10024031:	je     0x10024029
10024033:	jmp    0x1002404d
10024035:	cmp    al,0x39
10024037:	jg     0x1002400e
10024039:	cmp    DWORD PTR [ebp-0x4c],0x19
1002403d:	jae    0x1002404a
1002403f:	inc    DWORD PTR [ebp-0x4c]
10024042:	sub    al,bl
10024044:	mov    BYTE PTR [edi],al
10024046:	inc    edi
10024047:	dec    DWORD PTR [ebp-0x50]
1002404a:	mov    al,BYTE PTR [edx]
1002404c:	inc    edx
1002404d:	cmp    al,bl
1002404f:	jge    0x10024035
10024051:	jmp    0x1002400e
10024053:	sub    al,bl
10024055:	cmp    al,0x9
10024057:	mov    DWORD PTR [ebp-0x5c],esi
1002405a:	ja     0x10023fce
10024060:	push   0x4
10024062:	jmp    0x10023f05
10024067:	lea    ecx,[edx-0x2]
1002406a:	mov    DWORD PTR [ebp-0x54],ecx
1002406d:	mov    cl,al
1002406f:	sub    cl,0x31
10024072:	cmp    cl,0x8
10024075:	ja     0x1002407e
10024077:	push   0x9
10024079:	jmp    0x10023f05
1002407e:	movsx  eax,al
10024081:	sub    eax,0x2b
10024084:	je     0x100240a6
10024086:	dec    eax
10024087:	dec    eax
10024088:	je     0x1002409a
1002408a:	sub    eax,0x3
1002408d:	jne    0x10023fce
10024093:	push   0x8
10024095:	jmp    0x10023f1c
1002409a:	or     DWORD PTR [ebp-0x68],0xffffffff
1002409e:	push   0x7
100240a0:	pop    ecx
100240a1:	jmp    0x10023ee6
100240a6:	push   0x7
100240a8:	jmp    0x10023f1c
100240ad:	mov    DWORD PTR [ebp-0x60],esi
100240b0:	jmp    0x100240b5
100240b2:	mov    al,BYTE PTR [edx]
100240b4:	inc    edx
100240b5:	cmp    al,bl
100240b7:	je     0x100240b2
100240b9:	sub    al,0x31
100240bb:	cmp    al,0x8
100240bd:	jbe    0x10024077
100240bf:	dec    edx
100240c0:	jmp    0x100240ea
100240c2:	mov    cl,al
100240c4:	sub    cl,0x31
100240c7:	cmp    cl,0x8
100240ca:	jbe    0x10024077
100240cc:	cmp    al,bl
100240ce:	jmp    0x1002408d
100240d0:	cmp    DWORD PTR [ebp+0x20],0x0
100240d4:	je     0x1002411d
100240d6:	movsx  eax,al
100240d9:	sub    eax,0x2b
100240dc:	lea    ecx,[edx-0x1]
100240df:	mov    DWORD PTR [ebp-0x54],ecx
100240e2:	je     0x100240a6
100240e4:	dec    eax
100240e5:	dec    eax
100240e6:	je     0x1002409a
100240e8:	mov    edx,ecx
100240ea:	cmp    DWORD PTR [ebp-0x58],0x0
100240ee:	mov    eax,DWORD PTR [ebp-0x70]
100240f1:	mov    DWORD PTR [eax],edx
100240f3:	je     0x1002449d
100240f9:	push   0x18
100240fb:	pop    eax
100240fc:	cmp    DWORD PTR [ebp-0x4c],eax
100240ff:	jbe    0x10024111
10024101:	cmp    BYTE PTR [ebp-0x9],0x5
10024105:	jl     0x1002410a
10024107:	inc    BYTE PTR [ebp-0x9]
1002410a:	dec    edi
1002410b:	inc    DWORD PTR [ebp-0x50]
1002410e:	mov    DWORD PTR [ebp-0x4c],eax
10024111:	cmp    DWORD PTR [ebp-0x4c],0x0
10024115:	jbe    0x100244c4
1002411b:	jmp    0x10024176
1002411d:	push   0xa
1002411f:	pop    ecx
10024120:	dec    edx
10024121:	cmp    ecx,0xa
10024124:	jne    0x10023ee6
1002412a:	jmp    0x100240ea
1002412c:	mov    DWORD PTR [ebp-0x60],esi
1002412f:	xor    ecx,ecx
10024131:	jmp    0x1002414c
10024133:	cmp    al,0x39
10024135:	jg     0x10024157
10024137:	imul   ecx,ecx,0xa
1002413a:	movsx  esi,al
1002413d:	lea    ecx,[ecx+esi*1-0x30]
10024141:	cmp    ecx,0x1450
10024147:	jg     0x10024152
10024149:	mov    al,BYTE PTR [edx]
1002414b:	inc    edx
1002414c:	cmp    al,bl
1002414e:	jge    0x10024133
10024150:	jmp    0x10024157
10024152:	mov    ecx,0x1451
10024157:	mov    DWORD PTR [ebp-0x64],ecx
1002415a:	jmp    0x10024167
1002415c:	cmp    al,0x39
1002415e:	jg     0x100240bf
10024164:	mov    al,BYTE PTR [edx]
10024166:	inc    edx
10024167:	cmp    al,bl
10024169:	jge    0x1002415c
1002416b:	jmp    0x100240bf
10024170:	dec    DWORD PTR [ebp-0x4c]
10024173:	inc    DWORD PTR [ebp-0x50]
10024176:	dec    edi
10024177:	cmp    BYTE PTR [edi],0x0
1002417a:	je     0x10024170
1002417c:	lea    eax,[ebp-0x3c]
1002417f:	push   eax
10024180:	push   DWORD PTR [ebp-0x4c]
10024183:	lea    eax,[ebp-0x20]
10024186:	push   eax
10024187:	call   0x1002333f
1002418c:	mov    eax,DWORD PTR [ebp-0x64]
1002418f:	xor    ecx,ecx
10024191:	add    esp,0xc
10024194:	cmp    DWORD PTR [ebp-0x68],ecx
10024197:	jge    0x1002419b
10024199:	neg    eax
1002419b:	add    eax,DWORD PTR [ebp-0x50]
1002419e:	cmp    DWORD PTR [ebp-0x60],ecx
100241a1:	jne    0x100241a6
100241a3:	add    eax,DWORD PTR [ebp+0x18]
100241a6:	cmp    DWORD PTR [ebp-0x5c],ecx
100241a9:	jne    0x100241ae
100241ab:	sub    eax,DWORD PTR [ebp+0x1c]
100241ae:	cmp    eax,0x1450
100241b3:	jg     0x100244a6
100241b9:	cmp    eax,0xffffebb0
100241be:	jl     0x100244bd
100241c4:	mov    esi,0x10065660
100241c9:	sub    esi,0x60
100241cc:	cmp    eax,ecx
100241ce:	mov    DWORD PTR [ebp-0x54],eax
100241d1:	je     0x1002448b
100241d7:	jge    0x100241e6
100241d9:	neg    eax
100241db:	mov    esi,0x100657c0
100241e0:	mov    DWORD PTR [ebp-0x54],eax
100241e3:	sub    esi,0x60
100241e6:	cmp    DWORD PTR [ebp+0x14],ecx
100241e9:	jne    0x100241ef
100241eb:	mov    WORD PTR [ebp-0x3c],cx
100241ef:	cmp    DWORD PTR [ebp-0x54],ecx
100241f2:	je     0x1002448b
100241f8:	mov    eax,DWORD PTR [ebp-0x54]
100241fb:	sar    DWORD PTR [ebp-0x54],0x3
100241ff:	add    esi,0x54
10024202:	and    eax,0x7
10024205:	test   eax,eax
10024207:	mov    DWORD PTR [ebp-0x4c],esi
1002420a:	je     0x10024481
10024210:	imul   eax,eax,0xc
10024213:	add    eax,esi
10024215:	mov    ebx,eax
10024217:	cmp    WORD PTR [ebx],0x8000
1002421c:	mov    DWORD PTR [ebp-0x70],ebx
1002421f:	jb     0x10024235
10024221:	mov    esi,ebx
10024223:	lea    edi,[ebp-0x48]
10024226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024229:	dec    DWORD PTR [ebp-0x46]
1002422c:	mov    esi,DWORD PTR [ebp-0x4c]
1002422f:	lea    ebx,[ebp-0x48]
10024232:	mov    DWORD PTR [ebp-0x70],ebx
10024235:	movzx  edx,WORD PTR [ebx+0xa]
10024239:	mov    ecx,DWORD PTR [ebp-0x32]
1002423c:	xor    eax,eax
1002423e:	mov    DWORD PTR [ebp-0x50],eax
10024241:	mov    DWORD PTR [ebp-0x2c],eax
10024244:	mov    DWORD PTR [ebp-0x28],eax
10024247:	mov    DWORD PTR [ebp-0x24],eax
1002424a:	mov    eax,edx
1002424c:	mov    edi,0x7fff
10024251:	xor    eax,ecx
10024253:	and    ecx,edi
10024255:	and    edx,edi
10024257:	and    eax,0x8000
1002425c:	cmp    cx,0x7fff
10024261:	lea    edi,[edx+ecx*1]
10024264:	movzx  edi,di
10024267:	jae    0x10024467
1002426d:	cmp    dx,0x7fff
10024272:	jae    0x10024467
10024278:	cmp    di,0xbffd
1002427d:	ja     0x10024467
10024283:	cmp    di,0x3fbf
10024288:	ja     0x10024297
1002428a:	xor    eax,eax
1002428c:	mov    DWORD PTR [ebp-0x38],eax
1002428f:	mov    DWORD PTR [ebp-0x3c],eax
10024292:	jmp    0x1002447e
10024297:	test   cx,cx
1002429a:	jne    0x100242bb
1002429c:	inc    edi
1002429d:	test   DWORD PTR [ebp-0x34],0x7fffffff
100242a4:	jne    0x100242bb
100242a6:	cmp    DWORD PTR [ebp-0x38],0x0
100242aa:	jne    0x100242bb
100242ac:	cmp    DWORD PTR [ebp-0x3c],0x0
100242b0:	jne    0x100242bb
100242b2:	and    WORD PTR [ebp-0x32],cx
100242b6:	jmp    0x10024481
100242bb:	xor    ecx,ecx
100242bd:	cmp    dx,cx
100242c0:	jne    0x100242e3
100242c2:	inc    edi
100242c3:	test   DWORD PTR [ebx+0x8],0x7fffffff
100242ca:	jne    0x100242e3
100242cc:	cmp    DWORD PTR [ebx+0x4],ecx
100242cf:	jne    0x100242e3
100242d1:	cmp    DWORD PTR [ebx],ecx
100242d3:	jne    0x100242e3
100242d5:	mov    DWORD PTR [ebp-0x34],ecx
100242d8:	mov    DWORD PTR [ebp-0x38],ecx
100242db:	mov    DWORD PTR [ebp-0x3c],ecx
100242de:	jmp    0x10024481
100242e3:	and    DWORD PTR [ebp-0x68],ecx
100242e6:	lea    esi,[ebp-0x28]
100242e9:	mov    DWORD PTR [ebp-0x58],0x5
100242f0:	mov    ecx,DWORD PTR [ebp-0x68]
100242f3:	mov    edx,DWORD PTR [ebp-0x58]
100242f6:	add    ecx,ecx
100242f8:	test   edx,edx
100242fa:	mov    DWORD PTR [ebp-0x64],edx
100242fd:	jle    0x10024354
100242ff:	lea    ecx,[ebp+ecx*1-0x3c]
10024303:	add    ebx,0x8
10024306:	mov    DWORD PTR [ebp-0x5c],ecx
10024309:	mov    DWORD PTR [ebp-0x60],ebx
1002430c:	mov    ecx,DWORD PTR [ebp-0x60]
1002430f:	mov    edx,DWORD PTR [ebp-0x5c]
10024312:	movzx  edx,WORD PTR [edx]
10024315:	movzx  ecx,WORD PTR [ecx]
10024318:	and    DWORD PTR [ebp-0x78],0x0
1002431c:	imul   ecx,edx
1002431f:	mov    edx,DWORD PTR [esi-0x4]
10024322:	lea    ebx,[edx+ecx*1]
10024325:	cmp    ebx,edx
10024327:	jb     0x1002432d
10024329:	cmp    ebx,ecx
1002432b:	jae    0x10024334
1002432d:	mov    DWORD PTR [ebp-0x78],0x1
10024334:	cmp    DWORD PTR [ebp-0x78],0x0
10024338:	mov    DWORD PTR [esi-0x4],ebx
1002433b:	je     0x10024340
1002433d:	inc    WORD PTR [esi]
10024340:	add    DWORD PTR [ebp-0x5c],0x2
10024344:	sub    DWORD PTR [ebp-0x60],0x2
10024348:	dec    DWORD PTR [ebp-0x64]
1002434b:	cmp    DWORD PTR [ebp-0x64],0x0
1002434f:	jg     0x1002430c
10024351:	mov    ebx,DWORD PTR [ebp-0x70]
10024354:	inc    esi
10024355:	inc    esi
10024356:	inc    DWORD PTR [ebp-0x68]
10024359:	dec    DWORD PTR [ebp-0x58]
1002435c:	cmp    DWORD PTR [ebp-0x58],0x0
10024360:	jg     0x100242f0
10024362:	add    edi,0xc002
10024368:	test   di,di
1002436b:	jle    0x100243a8
1002436d:	test   DWORD PTR [ebp-0x24],0x80000000
10024374:	jne    0x100243a3
10024376:	mov    esi,DWORD PTR [ebp-0x28]
10024379:	mov    ecx,DWORD PTR [ebp-0x2c]
1002437c:	shl    DWORD PTR [ebp-0x2c],1
1002437f:	shr    ecx,0x1f
10024382:	mov    edx,esi
10024384:	add    esi,esi
10024386:	or     esi,ecx
10024388:	mov    ecx,DWORD PTR [ebp-0x24]
1002438b:	shr    edx,0x1f
1002438e:	add    ecx,ecx
10024390:	or     ecx,edx
10024392:	add    edi,0xffff
10024398:	test   di,di
1002439b:	mov    DWORD PTR [ebp-0x28],esi
1002439e:	mov    DWORD PTR [ebp-0x24],ecx
100243a1:	jg     0x1002436d
100243a3:	test   di,di
100243a6:	jg     0x100243f5
100243a8:	add    edi,0xffff
100243ae:	test   di,di
100243b1:	jge    0x100243f5
100243b3:	mov    ecx,edi
100243b5:	neg    ecx
100243b7:	movzx  esi,cx
100243ba:	add    edi,esi
100243bc:	test   BYTE PTR [ebp-0x2c],0x1
100243c0:	je     0x100243c5
100243c2:	inc    DWORD PTR [ebp-0x50]
100243c5:	mov    ecx,DWORD PTR [ebp-0x24]
100243c8:	mov    ebx,DWORD PTR [ebp-0x28]
100243cb:	mov    edx,DWORD PTR [ebp-0x28]
100243ce:	shr    DWORD PTR [ebp-0x24],1
100243d1:	shl    ecx,0x1f
100243d4:	shr    ebx,1
100243d6:	or     ebx,ecx
100243d8:	mov    ecx,DWORD PTR [ebp-0x2c]
100243db:	shl    edx,0x1f
100243de:	shr    ecx,1
100243e0:	or     ecx,edx
100243e2:	dec    esi
100243e3:	mov    DWORD PTR [ebp-0x28],ebx
100243e6:	mov    DWORD PTR [ebp-0x2c],ecx
100243e9:	jne    0x100243bc
100243eb:	cmp    DWORD PTR [ebp-0x50],esi
100243ee:	je     0x100243f5
100243f0:	or     WORD PTR [ebp-0x2c],0x1
100243f5:	cmp    WORD PTR [ebp-0x2c],0x8000
100243fb:	ja     0x1002440e
100243fd:	mov    ecx,DWORD PTR [ebp-0x2c]
10024400:	and    ecx,0x1ffff
10024406:	cmp    ecx,0x18000
1002440c:	jne    0x10024441
1002440e:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
10024412:	jne    0x1002443e
10024414:	and    DWORD PTR [ebp-0x2a],0x0
10024418:	cmp    DWORD PTR [ebp-0x26],0xffffffff
1002441c:	jne    0x10024439
1002441e:	and    DWORD PTR [ebp-0x26],0x0
10024422:	cmp    WORD PTR [ebp-0x22],0xffff
10024428:	jne    0x10024433
1002442a:	mov    WORD PTR [ebp-0x22],0x8000
10024430:	inc    edi
10024431:	jmp    0x10024441
10024433:	inc    WORD PTR [ebp-0x22]
10024437:	jmp    0x10024441
10024439:	inc    DWORD PTR [ebp-0x26]
1002443c:	jmp    0x10024441
1002443e:	inc    DWORD PTR [ebp-0x2a]
10024441:	cmp    di,0x7fff
10024446:	mov    esi,DWORD PTR [ebp-0x4c]
10024449:	jae    0x10024467
1002444b:	mov    cx,WORD PTR [ebp-0x2a]
1002444f:	mov    WORD PTR [ebp-0x3c],cx
10024453:	mov    ecx,DWORD PTR [ebp-0x28]
10024456:	mov    DWORD PTR [ebp-0x3a],ecx
10024459:	mov    ecx,DWORD PTR [ebp-0x24]
1002445c:	or     edi,eax
1002445e:	mov    DWORD PTR [ebp-0x36],ecx
10024461:	mov    WORD PTR [ebp-0x32],di
10024465:	jmp    0x10024481
10024467:	neg    ax
1002446a:	sbb    eax,eax
1002446c:	and    DWORD PTR [ebp-0x38],0x0
10024470:	and    eax,0x80000000
10024475:	add    eax,0x7fff8000
1002447a:	and    DWORD PTR [ebp-0x3c],0x0
1002447e:	mov    DWORD PTR [ebp-0x34],eax
10024481:	cmp    DWORD PTR [ebp-0x54],0x0
10024485:	jne    0x100241f8
1002448b:	mov    eax,DWORD PTR [ebp-0x34]
1002448e:	movzx  ecx,WORD PTR [ebp-0x3c]
10024492:	mov    esi,DWORD PTR [ebp-0x3a]
10024495:	mov    edx,DWORD PTR [ebp-0x36]
10024498:	shr    eax,0x10
1002449b:	jmp    0x100244cc
1002449d:	mov    DWORD PTR [ebp-0x6c],0x4
100244a4:	jmp    0x100244c4
100244a6:	xor    esi,esi
100244a8:	mov    eax,0x7fff
100244ad:	mov    edx,0x80000000
100244b2:	xor    ecx,ecx
100244b4:	mov    DWORD PTR [ebp-0x6c],0x2
100244bb:	jmp    0x100244cc
100244bd:	mov    DWORD PTR [ebp-0x6c],0x1
100244c4:	xor    ecx,ecx
100244c6:	xor    eax,eax
100244c8:	xor    edx,edx
100244ca:	xor    esi,esi
100244cc:	mov    edi,DWORD PTR [ebp-0x7c]
100244cf:	or     eax,DWORD PTR [ebp-0x74]
100244d2:	mov    WORD PTR [edi],cx
100244d5:	mov    WORD PTR [edi+0xa],ax
100244d9:	mov    eax,DWORD PTR [ebp-0x6c]
100244dc:	mov    DWORD PTR [edi+0x2],esi
100244df:	mov    DWORD PTR [edi+0x6],edx
100244e2:	mov    ecx,DWORD PTR [ebp-0x4]
100244e5:	pop    edi
100244e6:	pop    esi
100244e7:	xor    ecx,ebp
100244e9:	pop    ebx
100244ea:	call   0x10015adb
100244ef:	leave  
100244f0:	ret    
100244f1:	stc    
100244f2:	add    dl,BYTE PTR ds:[eax]
100244f5:	dec    ebp
100244f6:	aas    
100244f7:	add    dl,BYTE PTR [eax]
100244f9:	mov    ds:0xd610023f,eax
100244fe:	aas    
100244ff:	add    dl,BYTE PTR [eax]
10024501:	sbb    eax,DWORD PTR [eax+0x2]
10024504:	adc    BYTE PTR [ebx+0x40],dl
10024507:	add    dl,BYTE PTR [eax]
10024509:	addr16 inc eax
1002450b:	add    dl,BYTE PTR [eax]
1002450d:	ret    0x240
10024510:	adc    BYTE PTR [ebp+0x2c100240],ch
10024516:	inc    ecx
10024517:	add    dl,BYTE PTR [eax]
10024519:	and    DWORD PTR [ecx+0x2],eax
1002451c:	adc    al,dl
1002451e:	inc    eax
1002451f:	add    dl,BYTE PTR [eax]
10024521:	push   ebp
10024522:	mov    ebp,esp
10024524:	sub    esp,0x74
10024527:	mov    eax,ds:0x10064694
1002452c:	xor    eax,ebp
1002452e:	mov    DWORD PTR [ebp-0x4],eax
10024531:	push   ebx
10024532:	mov    ebx,DWORD PTR [ebp+0x1c]
10024535:	push   esi
10024536:	push   edi
10024537:	lea    esi,[ebp+0x8]
1002453a:	lea    edi,[ebp-0x10]
1002453d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002453e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002453f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
10024541:	mov    edx,DWORD PTR [ebp-0x8]
10024544:	mov    ecx,edx
10024546:	mov    eax,0x8000
1002454b:	and    ecx,eax
1002454d:	and    edx,0x7fff
10024553:	test   cx,cx
10024556:	mov    DWORD PTR [ebp-0x60],ebx
10024559:	mov    BYTE PTR [ebp-0x30],0xcc
1002455d:	mov    BYTE PTR [ebp-0x2f],0xcc
10024561:	mov    BYTE PTR [ebp-0x2e],0xcc
10024565:	mov    BYTE PTR [ebp-0x2d],0xcc
10024569:	mov    BYTE PTR [ebp-0x2c],0xcc
1002456d:	mov    BYTE PTR [ebp-0x2b],0xcc
10024571:	mov    BYTE PTR [ebp-0x2a],0xcc
10024575:	mov    BYTE PTR [ebp-0x29],0xcc
10024579:	mov    BYTE PTR [ebp-0x28],0xcc
1002457d:	mov    BYTE PTR [ebp-0x27],0xcc
10024581:	mov    BYTE PTR [ebp-0x26],0xfb
10024585:	mov    BYTE PTR [ebp-0x25],0x3f
10024589:	mov    DWORD PTR [ebp-0x74],0x1
10024590:	mov    DWORD PTR [ebp-0x6c],ecx
10024593:	je     0x1002459b
10024595:	mov    BYTE PTR [ebx+0x2],0x2d
10024599:	jmp    0x1002459f
1002459b:	mov    BYTE PTR [ebx+0x2],0x20
1002459f:	test   dx,dx
100245a2:	mov    esi,DWORD PTR [ebp-0xc]
100245a5:	mov    edi,DWORD PTR [ebp-0x10]
100245a8:	jne    0x100245d8
100245aa:	test   esi,esi
100245ac:	jne    0x100245d8
100245ae:	test   edi,edi
100245b0:	jne    0x100245d8
100245b2:	and    WORD PTR [ebx],di
100245b5:	cmp    cx,ax
100245b8:	setne  al
100245bb:	dec    al
100245bd:	and    al,0xd
100245bf:	add    al,0x20
100245c1:	mov    BYTE PTR [ebx+0x2],al
100245c4:	mov    BYTE PTR [ebx+0x3],0x1
100245c8:	mov    BYTE PTR [ebx+0x4],0x30
100245cc:	mov    BYTE PTR [ebx+0x5],0x0
100245d0:	xor    eax,eax
100245d2:	inc    eax
100245d3:	jmp    0x10024d9f
100245d8:	cmp    dx,0x7fff
100245dd:	jne    0x10024681
100245e3:	mov    eax,0x80000000
100245e8:	cmp    esi,eax
100245ea:	mov    WORD PTR [ebx],0x1
100245ef:	jne    0x100245f5
100245f1:	test   edi,edi
100245f3:	je     0x10024604
100245f5:	test   esi,0x40000000
100245fb:	jne    0x10024604
100245fd:	push   0x10051e20
10024602:	jmp    0x10024655
10024604:	test   cx,cx
10024607:	je     0x1002461c
10024609:	cmp    esi,0xc0000000
1002460f:	jne    0x1002461c
10024611:	test   edi,edi
10024613:	jne    0x10024650
10024615:	push   0x10051e18
1002461a:	jmp    0x10024629
1002461c:	cmp    esi,eax
1002461e:	jne    0x10024650
10024620:	test   edi,edi
10024622:	jne    0x10024650
10024624:	push   0x10051e10
10024629:	lea    eax,[ebx+0x4]
1002462c:	push   0x16
1002462e:	push   eax
1002462f:	call   0x1001a148
10024634:	add    esp,0xc
10024637:	xor    esi,esi
10024639:	test   eax,eax
1002463b:	je     0x1002464a
1002463d:	push   esi
1002463e:	push   esi
1002463f:	push   esi
10024640:	push   esi
10024641:	push   esi
10024642:	call   0x10016023
10024647:	add    esp,0x14
1002464a:	mov    BYTE PTR [ebx+0x3],0x5
1002464e:	jmp    0x1002467a
10024650:	push   0x10051e08
10024655:	lea    eax,[ebx+0x4]
10024658:	push   0x16
1002465a:	push   eax
1002465b:	call   0x1001a148
10024660:	add    esp,0xc
10024663:	xor    esi,esi
10024665:	test   eax,eax
10024667:	je     0x10024676
10024669:	push   esi
1002466a:	push   esi
1002466b:	push   esi
1002466c:	push   esi
1002466d:	push   esi
1002466e:	call   0x10016023
10024673:	add    esp,0x14
10024676:	mov    BYTE PTR [ebx+0x3],0x6
1002467a:	xor    eax,eax
1002467c:	jmp    0x10024d9f
10024681:	movzx  ecx,dx
10024684:	mov    ebx,ecx
10024686:	imul   ecx,ecx,0x4d10
1002468c:	shr    ebx,0x8
1002468f:	mov    eax,esi
10024691:	shr    eax,0x18
10024694:	lea    eax,[ebx+eax*2]
10024697:	imul   eax,eax,0x4d
1002469a:	lea    eax,[eax+ecx*1-0x134312f4]
100246a1:	sar    eax,0x10
100246a4:	movzx  ecx,ax
100246a7:	movsx  ebx,cx
100246aa:	mov    DWORD PTR [ebp-0x4c],ecx
100246ad:	xor    eax,eax
100246af:	mov    ecx,0x10065660
100246b4:	neg    ebx
100246b6:	sub    ecx,0x60
100246b9:	cmp    ebx,eax
100246bb:	mov    WORD PTR [ebp-0x16],dx
100246bf:	mov    DWORD PTR [ebp-0x1a],esi
100246c2:	mov    DWORD PTR [ebp-0x1e],edi
100246c5:	mov    WORD PTR [ebp-0x20],ax
100246c9:	mov    DWORD PTR [ebp-0x68],ecx
100246cc:	je     0x10024980
100246d2:	jge    0x100246e1
100246d4:	mov    ecx,0x100657c0
100246d9:	neg    ebx
100246db:	sub    ecx,0x60
100246de:	mov    DWORD PTR [ebp-0x68],ecx
100246e1:	cmp    ebx,eax
100246e3:	je     0x10024980
100246e9:	add    DWORD PTR [ebp-0x68],0x54
100246ed:	mov    ecx,ebx
100246ef:	and    ecx,0x7
100246f2:	sar    ebx,0x3
100246f5:	test   ecx,ecx
100246f7:	je     0x10024976
100246fd:	imul   ecx,ecx,0xc
10024700:	add    ecx,DWORD PTR [ebp-0x68]
10024703:	cmp    WORD PTR [ecx],0x8000
10024708:	mov    DWORD PTR [ebp-0x64],ecx
1002470b:	jb     0x10024720
1002470d:	mov    esi,ecx
1002470f:	lea    edi,[ebp-0x3c]
10024712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024714:	lea    eax,[ebp-0x3c]
10024717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024718:	dec    DWORD PTR [ebp-0x3a]
1002471b:	mov    DWORD PTR [ebp-0x64],eax
1002471e:	mov    ecx,eax
10024720:	movzx  edi,WORD PTR [ecx+0xa]
10024724:	mov    edx,DWORD PTR [ebp-0x16]
10024727:	xor    eax,eax
10024729:	mov    ecx,edi
1002472b:	mov    esi,0x7fff
10024730:	xor    ecx,edx
10024732:	and    edx,esi
10024734:	and    edi,esi
10024736:	mov    DWORD PTR [ebp-0x48],eax
10024739:	mov    DWORD PTR [ebp-0x10],eax
1002473c:	mov    DWORD PTR [ebp-0xc],eax
1002473f:	mov    DWORD PTR [ebp-0x8],eax
10024742:	and    ecx,0x8000
10024748:	cmp    dx,si
1002474b:	lea    eax,[edi+edx*1]
1002474e:	movzx  eax,ax
10024751:	jae    0x1002495a
10024757:	cmp    di,si
1002475a:	jae    0x1002495a
10024760:	cmp    ax,0xbffd
10024764:	ja     0x1002495a
1002476a:	cmp    ax,0x3fbf
1002476e:	ja     0x10024780
10024770:	xor    eax,eax
10024772:	mov    DWORD PTR [ebp-0x18],eax
10024775:	mov    DWORD PTR [ebp-0x1c],eax
10024778:	mov    DWORD PTR [ebp-0x20],eax
1002477b:	jmp    0x10024976
10024780:	xor    esi,esi
10024782:	cmp    dx,si
10024785:	jne    0x100247a4
10024787:	inc    eax
10024788:	test   DWORD PTR [ebp-0x18],0x7fffffff
1002478f:	jne    0x100247a4
10024791:	cmp    DWORD PTR [ebp-0x1c],esi
10024794:	jne    0x100247a4
10024796:	cmp    DWORD PTR [ebp-0x20],esi
10024799:	jne    0x100247a4
1002479b:	mov    WORD PTR [ebp-0x16],si
1002479f:	jmp    0x10024976
100247a4:	cmp    di,si
100247a7:	jne    0x100247cd
100247a9:	mov    edx,DWORD PTR [ebp-0x64]
100247ac:	inc    eax
100247ad:	test   DWORD PTR [edx+0x8],0x7fffffff
100247b4:	jne    0x100247cd
100247b6:	cmp    DWORD PTR [edx+0x4],esi
100247b9:	jne    0x100247cd
100247bb:	cmp    DWORD PTR [edx],esi
100247bd:	jne    0x100247cd
100247bf:	mov    DWORD PTR [ebp-0x18],esi
100247c2:	mov    DWORD PTR [ebp-0x1c],esi
100247c5:	mov    DWORD PTR [ebp-0x20],esi
100247c8:	jmp    0x10024976
100247cd:	lea    edi,[ebp-0xc]
100247d0:	mov    DWORD PTR [ebp-0x5c],esi
100247d3:	mov    DWORD PTR [ebp-0x44],edi
100247d6:	mov    DWORD PTR [ebp-0x40],0x5
100247dd:	mov    edx,DWORD PTR [ebp-0x5c]
100247e0:	mov    esi,DWORD PTR [ebp-0x40]
100247e3:	add    edx,edx
100247e5:	test   esi,esi
100247e7:	mov    DWORD PTR [ebp-0x50],esi
100247ea:	jle    0x10024844
100247ec:	lea    edx,[ebp+edx*1-0x20]
100247f0:	mov    DWORD PTR [ebp-0x58],edx
100247f3:	mov    edx,DWORD PTR [ebp-0x64]
100247f6:	add    edx,0x8
100247f9:	mov    DWORD PTR [ebp-0x54],edx
100247fc:	mov    edx,DWORD PTR [ebp-0x58]
100247ff:	mov    esi,DWORD PTR [ebp-0x54]
10024802:	movzx  esi,WORD PTR [esi]
10024805:	movzx  edx,WORD PTR [edx]
10024808:	mov    edi,DWORD PTR [edi-0x4]
1002480b:	imul   edx,esi
1002480e:	and    DWORD PTR [ebp-0x70],0x0
10024812:	lea    esi,[edi+edx*1]
10024815:	cmp    esi,edi
10024817:	jb     0x1002481d
10024819:	cmp    esi,edx
1002481b:	jae    0x10024824
1002481d:	mov    DWORD PTR [ebp-0x70],0x1
10024824:	cmp    DWORD PTR [ebp-0x70],0x0
10024828:	mov    edi,DWORD PTR [ebp-0x44]
1002482b:	mov    DWORD PTR [edi-0x4],esi
1002482e:	je     0x10024833
10024830:	inc    WORD PTR [edi]
10024833:	add    DWORD PTR [ebp-0x58],0x2
10024837:	sub    DWORD PTR [ebp-0x54],0x2
1002483b:	dec    DWORD PTR [ebp-0x50]
1002483e:	cmp    DWORD PTR [ebp-0x50],0x0
10024842:	jg     0x100247fc
10024844:	inc    edi
10024845:	inc    edi
10024846:	inc    DWORD PTR [ebp-0x5c]
10024849:	dec    DWORD PTR [ebp-0x40]
1002484c:	cmp    DWORD PTR [ebp-0x40],0x0
10024850:	mov    DWORD PTR [ebp-0x44],edi
10024853:	jg     0x100247dd
10024855:	add    eax,0xc002
1002485a:	test   ax,ax
1002485d:	jle    0x1002489a
1002485f:	test   DWORD PTR [ebp-0x8],0x80000000
10024866:	jne    0x10024895
10024868:	mov    edx,DWORD PTR [ebp-0x10]
1002486b:	mov    edi,DWORD PTR [ebp-0xc]
1002486e:	mov    esi,DWORD PTR [ebp-0xc]
10024871:	shl    DWORD PTR [ebp-0x10],1
10024874:	shr    edx,0x1f
10024877:	add    edi,edi
10024879:	or     edi,edx
1002487b:	mov    edx,DWORD PTR [ebp-0x8]
1002487e:	shr    esi,0x1f
10024881:	add    edx,edx
10024883:	or     edx,esi
10024885:	add    eax,0xffff
1002488a:	test   ax,ax
1002488d:	mov    DWORD PTR [ebp-0xc],edi
10024890:	mov    DWORD PTR [ebp-0x8],edx
10024893:	jg     0x1002485f
10024895:	test   ax,ax
10024898:	jg     0x100248ec
1002489a:	add    eax,0xffff
1002489f:	test   ax,ax
100248a2:	jge    0x100248ec
100248a4:	mov    edx,eax
100248a6:	neg    edx
100248a8:	movzx  edx,dx
100248ab:	mov    DWORD PTR [ebp-0x44],edx
100248ae:	add    eax,edx
100248b0:	test   BYTE PTR [ebp-0x10],0x1
100248b4:	je     0x100248b9
100248b6:	inc    DWORD PTR [ebp-0x48]
100248b9:	mov    edx,DWORD PTR [ebp-0x8]
100248bc:	mov    edi,DWORD PTR [ebp-0xc]
100248bf:	mov    esi,DWORD PTR [ebp-0xc]
100248c2:	shr    DWORD PTR [ebp-0x8],1
100248c5:	shl    edx,0x1f
100248c8:	shr    edi,1
100248ca:	or     edi,edx
100248cc:	mov    edx,DWORD PTR [ebp-0x10]
100248cf:	shl    esi,0x1f
100248d2:	shr    edx,1
100248d4:	or     edx,esi
100248d6:	dec    DWORD PTR [ebp-0x44]
100248d9:	mov    DWORD PTR [ebp-0xc],edi
100248dc:	mov    DWORD PTR [ebp-0x10],edx
100248df:	jne    0x100248b0
100248e1:	cmp    DWORD PTR [ebp-0x48],0x0
100248e5:	je     0x100248ec
100248e7:	or     WORD PTR [ebp-0x10],0x1
100248ec:	cmp    WORD PTR [ebp-0x10],0x8000
100248f2:	ja     0x10024905
100248f4:	mov    edx,DWORD PTR [ebp-0x10]
100248f7:	and    edx,0x1ffff
100248fd:	cmp    edx,0x18000
10024903:	jne    0x10024938
10024905:	cmp    DWORD PTR [ebp-0xe],0xffffffff
10024909:	jne    0x10024935
1002490b:	and    DWORD PTR [ebp-0xe],0x0
1002490f:	cmp    DWORD PTR [ebp-0xa],0xffffffff
10024913:	jne    0x10024930
10024915:	and    DWORD PTR [ebp-0xa],0x0
10024919:	cmp    WORD PTR [ebp-0x6],0xffff
1002491f:	jne    0x1002492a
10024921:	mov    WORD PTR [ebp-0x6],0x8000
10024927:	inc    eax
10024928:	jmp    0x10024938
1002492a:	inc    WORD PTR [ebp-0x6]
1002492e:	jmp    0x10024938
10024930:	inc    DWORD PTR [ebp-0xa]
10024933:	jmp    0x10024938
10024935:	inc    DWORD PTR [ebp-0xe]
10024938:	cmp    ax,0x7fff
1002493c:	jae    0x1002495a
1002493e:	mov    dx,WORD PTR [ebp-0xe]
10024942:	mov    WORD PTR [ebp-0x20],dx
10024946:	mov    edx,DWORD PTR [ebp-0xc]
10024949:	mov    DWORD PTR [ebp-0x1e],edx
1002494c:	mov    edx,DWORD PTR [ebp-0x8]
1002494f:	or     eax,ecx
10024951:	mov    DWORD PTR [ebp-0x1a],edx
10024954:	mov    WORD PTR [ebp-0x16],ax
10024958:	jmp    0x10024976
1002495a:	neg    cx
1002495d:	sbb    ecx,ecx
1002495f:	and    DWORD PTR [ebp-0x1c],0x0
10024963:	and    ecx,0x80000000
10024969:	add    ecx,0x7fff8000
1002496f:	and    DWORD PTR [ebp-0x20],0x0
10024973:	mov    DWORD PTR [ebp-0x18],ecx
10024976:	test   ebx,ebx
10024978:	jne    0x100246e9
1002497e:	xor    eax,eax
10024980:	mov    ecx,DWORD PTR [ebp-0x18]
10024983:	shr    ecx,0x10
10024986:	cmp    cx,0x3fff
1002498b:	mov    ebx,0x7fff
10024990:	jb     0x10024bde
10024996:	mov    esi,DWORD PTR [ebp-0x26]
10024999:	inc    DWORD PTR [ebp-0x4c]
1002499c:	movzx  edx,cx
1002499f:	mov    ecx,esi
100249a1:	xor    ecx,edx
100249a3:	and    edx,ebx
100249a5:	and    esi,ebx
100249a7:	and    ecx,0x8000
100249ad:	cmp    dx,bx
100249b0:	lea    edi,[esi+edx*1]
100249b3:	mov    DWORD PTR [ebp-0x58],eax
100249b6:	mov    DWORD PTR [ebp-0x10],eax
100249b9:	mov    DWORD PTR [ebp-0xc],eax
100249bc:	mov    DWORD PTR [ebp-0x8],eax
100249bf:	movzx  edi,di
100249c2:	jae    0x10024bc4
100249c8:	cmp    si,bx
100249cb:	jae    0x10024bc4
100249d1:	cmp    di,0xbffd
100249d6:	ja     0x10024bc4
100249dc:	cmp    di,0x3fbf
100249e1:	ja     0x100249eb
100249e3:	mov    DWORD PTR [ebp-0x18],eax
100249e6:	jmp    0x10024bd8
100249eb:	cmp    dx,ax
100249ee:	jne    0x10024a0d
100249f0:	inc    edi
100249f1:	test   DWORD PTR [ebp-0x18],0x7fffffff
100249f8:	jne    0x10024a0d
100249fa:	cmp    DWORD PTR [ebp-0x1c],eax
100249fd:	jne    0x10024a0d
100249ff:	cmp    DWORD PTR [ebp-0x20],eax
10024a02:	jne    0x10024a0d
10024a04:	mov    WORD PTR [ebp-0x16],ax
10024a08:	jmp    0x10024bde
10024a0d:	cmp    si,ax
10024a10:	jne    0x10024a26
10024a12:	inc    edi
10024a13:	test   DWORD PTR [ebp-0x28],0x7fffffff
10024a1a:	jne    0x10024a26
10024a1c:	cmp    DWORD PTR [ebp-0x2c],eax
10024a1f:	jne    0x10024a26
10024a21:	cmp    DWORD PTR [ebp-0x30],eax
10024a24:	je     0x100249e3
10024a26:	and    DWORD PTR [ebp-0x54],0x0
10024a2a:	lea    eax,[ebp-0xc]
10024a2d:	mov    DWORD PTR [ebp-0x40],0x5
10024a34:	mov    edx,DWORD PTR [ebp-0x54]
10024a37:	mov    esi,DWORD PTR [ebp-0x40]
10024a3a:	add    edx,edx
10024a3c:	test   esi,esi
10024a3e:	mov    DWORD PTR [ebp-0x50],esi
10024a41:	jle    0x10024a95
10024a43:	lea    esi,[ebp-0x28]
10024a46:	lea    edx,[ebp+edx*1-0x20]
10024a4a:	mov    DWORD PTR [ebp-0x5c],esi
10024a4d:	mov    DWORD PTR [ebp-0x48],edx
10024a50:	mov    edx,DWORD PTR [ebp-0x5c]
10024a53:	mov    esi,DWORD PTR [ebp-0x48]
10024a56:	movzx  esi,WORD PTR [esi]
10024a59:	movzx  edx,WORD PTR [edx]
10024a5c:	and    DWORD PTR [ebp-0x44],0x0
10024a60:	imul   edx,esi
10024a63:	mov    esi,DWORD PTR [eax-0x4]
10024a66:	lea    ebx,[esi+edx*1]
10024a69:	cmp    ebx,esi
10024a6b:	jb     0x10024a71
10024a6d:	cmp    ebx,edx
10024a6f:	jae    0x10024a78
10024a71:	mov    DWORD PTR [ebp-0x44],0x1
10024a78:	cmp    DWORD PTR [ebp-0x44],0x0
10024a7c:	mov    DWORD PTR [eax-0x4],ebx
10024a7f:	je     0x10024a84
10024a81:	inc    WORD PTR [eax]
10024a84:	add    DWORD PTR [ebp-0x48],0x2
10024a88:	sub    DWORD PTR [ebp-0x5c],0x2
10024a8c:	dec    DWORD PTR [ebp-0x50]
10024a8f:	cmp    DWORD PTR [ebp-0x50],0x0
10024a93:	jg     0x10024a50
10024a95:	inc    eax
10024a96:	inc    eax
10024a97:	inc    DWORD PTR [ebp-0x54]
10024a9a:	dec    DWORD PTR [ebp-0x40]
10024a9d:	cmp    DWORD PTR [ebp-0x40],0x0
10024aa1:	jg     0x10024a34
10024aa3:	add    edi,0xc002
10024aa9:	xor    eax,eax
10024aab:	cmp    di,ax
10024aae:	jle    0x10024aec
10024ab0:	test   DWORD PTR [ebp-0x8],0x80000000
10024ab7:	jne    0x10024ae7
10024ab9:	mov    edx,DWORD PTR [ebp-0x10]
10024abc:	mov    ebx,DWORD PTR [ebp-0xc]
10024abf:	mov    esi,DWORD PTR [ebp-0xc]
10024ac2:	shl    DWORD PTR [ebp-0x10],1
10024ac5:	shr    edx,0x1f
10024ac8:	add    ebx,ebx
10024aca:	or     ebx,edx
10024acc:	mov    edx,DWORD PTR [ebp-0x8]
10024acf:	shr    esi,0x1f
10024ad2:	add    edx,edx
10024ad4:	or     edx,esi
10024ad6:	add    edi,0xffff
10024adc:	cmp    di,ax
10024adf:	mov    DWORD PTR [ebp-0xc],ebx
10024ae2:	mov    DWORD PTR [ebp-0x8],edx
10024ae5:	jg     0x10024ab0
10024ae7:	cmp    di,ax
10024aea:	jg     0x10024b39
10024aec:	add    edi,0xffff
10024af2:	cmp    di,ax
10024af5:	jge    0x10024b39
10024af7:	mov    eax,edi
10024af9:	neg    eax
10024afb:	movzx  eax,ax
10024afe:	add    edi,eax
10024b00:	test   BYTE PTR [ebp-0x10],0x1
10024b04:	je     0x10024b09
10024b06:	inc    DWORD PTR [ebp-0x58]
10024b09:	mov    edx,DWORD PTR [ebp-0x8]
10024b0c:	mov    ebx,DWORD PTR [ebp-0xc]
10024b0f:	mov    esi,DWORD PTR [ebp-0xc]
10024b12:	shr    DWORD PTR [ebp-0x8],1
10024b15:	shl    edx,0x1f
10024b18:	shr    ebx,1
10024b1a:	or     ebx,edx
10024b1c:	mov    edx,DWORD PTR [ebp-0x10]
10024b1f:	shl    esi,0x1f
10024b22:	shr    edx,1
10024b24:	or     edx,esi
10024b26:	dec    eax
10024b27:	mov    DWORD PTR [ebp-0xc],ebx
10024b2a:	mov    DWORD PTR [ebp-0x10],edx
10024b2d:	jne    0x10024b00
10024b2f:	cmp    DWORD PTR [ebp-0x58],eax
10024b32:	je     0x10024b39
10024b34:	or     WORD PTR [ebp-0x10],0x1
10024b39:	cmp    WORD PTR [ebp-0x10],0x8000
10024b3f:	ja     0x10024b52
10024b41:	mov    edx,DWORD PTR [ebp-0x10]
10024b44:	and    edx,0x1ffff
10024b4a:	cmp    edx,0x18000
10024b50:	jne    0x10024b83
10024b52:	cmp    DWORD PTR [ebp-0xe],0xffffffff
10024b56:	jne    0x10024b80
10024b58:	cmp    DWORD PTR [ebp-0xa],0xffffffff
10024b5c:	mov    DWORD PTR [ebp-0xe],eax
10024b5f:	jne    0x10024b7b
10024b61:	cmp    WORD PTR [ebp-0x6],0xffff
10024b67:	mov    DWORD PTR [ebp-0xa],eax
10024b6a:	jne    0x10024b75
10024b6c:	mov    WORD PTR [ebp-0x6],0x8000
10024b72:	inc    edi
10024b73:	jmp    0x10024b83
10024b75:	inc    WORD PTR [ebp-0x6]
10024b79:	jmp    0x10024b83
10024b7b:	inc    DWORD PTR [ebp-0xa]
10024b7e:	jmp    0x10024b83
10024b80:	inc    DWORD PTR [ebp-0xe]
10024b83:	cmp    di,0x7fff
10024b88:	jb     0x10024ba8
10024b8a:	neg    cx
10024b8d:	mov    DWORD PTR [ebp-0x1c],eax
10024b90:	mov    DWORD PTR [ebp-0x20],eax
10024b93:	sbb    ecx,ecx
10024b95:	and    ecx,0x80000000
10024b9b:	add    ecx,0x7fff8000
10024ba1:	mov    DWORD PTR [ebp-0x18],ecx
10024ba4:	xor    eax,eax
10024ba6:	jmp    0x10024bde
10024ba8:	mov    ax,WORD PTR [ebp-0xe]
10024bac:	mov    WORD PTR [ebp-0x20],ax
10024bb0:	mov    eax,DWORD PTR [ebp-0xc]
10024bb3:	mov    DWORD PTR [ebp-0x1e],eax
10024bb6:	mov    eax,DWORD PTR [ebp-0x8]
10024bb9:	or     edi,ecx
10024bbb:	mov    DWORD PTR [ebp-0x1a],eax
10024bbe:	mov    WORD PTR [ebp-0x16],di
10024bc2:	jmp    0x10024ba4
10024bc4:	neg    cx
10024bc7:	sbb    ecx,ecx
10024bc9:	and    ecx,0x80000000
10024bcf:	add    ecx,0x7fff8000
10024bd5:	mov    DWORD PTR [ebp-0x18],ecx
10024bd8:	mov    DWORD PTR [ebp-0x1c],eax
10024bdb:	mov    DWORD PTR [ebp-0x20],eax
10024bde:	test   BYTE PTR [ebp+0x18],0x1
10024be2:	mov    edx,DWORD PTR [ebp-0x60]
10024be5:	mov    ecx,DWORD PTR [ebp-0x4c]
10024be8:	mov    WORD PTR [edx],cx
10024beb:	je     0x10024c1f
10024bed:	movsx  ecx,cx
10024bf0:	add    DWORD PTR [ebp+0x14],ecx
10024bf3:	cmp    DWORD PTR [ebp+0x14],eax
10024bf6:	jg     0x10024c1f
10024bf8:	and    WORD PTR [edx],0x0
10024bfc:	cmp    WORD PTR [ebp-0x6c],0x8000
10024c02:	mov    BYTE PTR [edx+0x3],0x1
10024c06:	setne  al
10024c09:	dec    al
10024c0b:	and    al,0xd
10024c0d:	add    al,0x20
10024c0f:	mov    BYTE PTR [edx+0x2],al
10024c12:	mov    BYTE PTR [edx+0x4],0x30
10024c16:	mov    BYTE PTR [edx+0x5],0x0
10024c1a:	jmp    0x100245d0
10024c1f:	push   0x15
10024c21:	pop    ecx
10024c22:	cmp    DWORD PTR [ebp+0x14],ecx
10024c25:	jle    0x10024c2a
10024c27:	mov    DWORD PTR [ebp+0x14],ecx
10024c2a:	mov    esi,DWORD PTR [ebp-0x18]
10024c2d:	shr    esi,0x10
10024c30:	push   0x8
10024c32:	sub    esi,0x3ffe
10024c38:	mov    WORD PTR [ebp-0x16],ax
10024c3c:	pop    ebx
10024c3d:	mov    eax,DWORD PTR [ebp-0x20]
10024c40:	mov    edi,DWORD PTR [ebp-0x1c]
10024c43:	mov    ecx,DWORD PTR [ebp-0x1c]
10024c46:	shl    DWORD PTR [ebp-0x20],1
10024c49:	shr    eax,0x1f
10024c4c:	add    edi,edi
10024c4e:	or     edi,eax
10024c50:	mov    eax,DWORD PTR [ebp-0x18]
10024c53:	shr    ecx,0x1f
10024c56:	add    eax,eax
10024c58:	or     eax,ecx
10024c5a:	dec    ebx
10024c5b:	mov    DWORD PTR [ebp-0x1c],edi
10024c5e:	mov    DWORD PTR [ebp-0x18],eax
10024c61:	jne    0x10024c3d
10024c63:	test   esi,esi
10024c65:	jge    0x10024c99
10024c67:	neg    esi
10024c69:	and    esi,0xff
10024c6f:	jle    0x10024c99
10024c71:	mov    eax,DWORD PTR [ebp-0x18]
10024c74:	mov    edi,DWORD PTR [ebp-0x1c]
10024c77:	mov    ecx,DWORD PTR [ebp-0x1c]
10024c7a:	shr    DWORD PTR [ebp-0x18],1
10024c7d:	shl    eax,0x1f
10024c80:	shr    edi,1
10024c82:	or     edi,eax
10024c84:	mov    eax,DWORD PTR [ebp-0x20]
10024c87:	shl    ecx,0x1f
10024c8a:	shr    eax,1
10024c8c:	or     eax,ecx
10024c8e:	dec    esi
10024c8f:	test   esi,esi
10024c91:	mov    DWORD PTR [ebp-0x1c],edi
10024c94:	mov    DWORD PTR [ebp-0x20],eax
10024c97:	jg     0x10024c71
10024c99:	mov    eax,DWORD PTR [ebp+0x14]
10024c9c:	inc    eax
10024c9d:	test   eax,eax
10024c9f:	lea    ebx,[edx+0x4]
10024ca2:	mov    DWORD PTR [ebp-0x40],ebx
10024ca5:	mov    DWORD PTR [ebp-0x4c],eax
10024ca8:	jle    0x10024d63
10024cae:	mov    edx,DWORD PTR [ebp-0x20]
10024cb1:	mov    eax,DWORD PTR [ebp-0x1c]
10024cb4:	lea    esi,[ebp-0x20]
10024cb7:	lea    edi,[ebp-0x3c]
10024cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024cbd:	shl    DWORD PTR [ebp-0x20],1
10024cc0:	mov    edi,DWORD PTR [ebp-0x20]
10024cc3:	shl    DWORD PTR [ebp-0x20],1
10024cc6:	shr    edx,0x1f
10024cc9:	lea    ecx,[eax+eax*1]
10024ccc:	or     ecx,edx
10024cce:	mov    edx,DWORD PTR [ebp-0x18]
10024cd1:	mov    esi,eax
10024cd3:	shr    esi,0x1f
10024cd6:	add    edx,edx
10024cd8:	or     edx,esi
10024cda:	mov    eax,ecx
10024cdc:	lea    esi,[ecx+ecx*1]
10024cdf:	shr    eax,0x1f
10024ce2:	lea    ecx,[edx+edx*1]
10024ce5:	mov    edx,DWORD PTR [ebp-0x3c]
10024ce8:	shr    edi,0x1f
10024ceb:	or     ecx,eax
10024ced:	mov    eax,DWORD PTR [ebp-0x20]
10024cf0:	or     esi,edi
10024cf2:	lea    edi,[edx+eax*1]
10024cf5:	cmp    edi,eax
10024cf7:	jb     0x10024cfd
10024cf9:	cmp    edi,edx
10024cfb:	jae    0x10024d15
10024cfd:	lea    eax,[esi+0x1]
10024d00:	xor    edx,edx
10024d02:	cmp    eax,esi
10024d04:	jb     0x10024d0b
10024d06:	cmp    eax,0x1
10024d09:	jae    0x10024d0e
10024d0b:	xor    edx,edx
10024d0d:	inc    edx
10024d0e:	test   edx,edx
10024d10:	mov    esi,eax
10024d12:	je     0x10024d15
10024d14:	inc    ecx
10024d15:	mov    eax,DWORD PTR [ebp-0x38]
10024d18:	lea    edx,[eax+esi*1]
10024d1b:	cmp    edx,esi
10024d1d:	mov    DWORD PTR [ebp-0x44],edx
10024d20:	jb     0x10024d26
10024d22:	cmp    edx,eax
10024d24:	jae    0x10024d27
10024d26:	inc    ecx
10024d27:	add    ecx,DWORD PTR [ebp-0x34]
10024d2a:	shr    edx,0x1f
10024d2d:	add    ecx,ecx
10024d2f:	or     ecx,edx
10024d31:	lea    esi,[edi+edi*1]
10024d34:	mov    DWORD PTR [ebp-0x20],esi
10024d37:	mov    esi,DWORD PTR [ebp-0x44]
10024d3a:	mov    DWORD PTR [ebp-0x18],ecx
10024d3d:	shr    ecx,0x18
10024d40:	add    esi,esi
10024d42:	add    cl,0x30
10024d45:	mov    eax,edi
10024d47:	shr    eax,0x1f
10024d4a:	or     esi,eax
10024d4c:	mov    BYTE PTR [ebx],cl
10024d4e:	inc    ebx
10024d4f:	dec    DWORD PTR [ebp-0x4c]
10024d52:	cmp    DWORD PTR [ebp-0x4c],0x0
10024d56:	mov    DWORD PTR [ebp-0x1c],esi
10024d59:	mov    BYTE PTR [ebp-0x15],0x0
10024d5d:	jg     0x10024cae
10024d63:	dec    ebx
10024d64:	mov    al,BYTE PTR [ebx]
10024d66:	dec    ebx
10024d67:	cmp    al,0x35
10024d69:	jge    0x10024d79
10024d6b:	mov    ecx,DWORD PTR [ebp-0x40]
10024d6e:	jmp    0x10024db4
10024d70:	cmp    BYTE PTR [ebx],0x39
10024d73:	jne    0x10024d7e
10024d75:	mov    BYTE PTR [ebx],0x30
10024d78:	dec    ebx
10024d79:	cmp    ebx,DWORD PTR [ebp-0x40]
10024d7c:	jae    0x10024d70
10024d7e:	cmp    ebx,DWORD PTR [ebp-0x40]
10024d81:	mov    eax,DWORD PTR [ebp-0x60]
10024d84:	jae    0x10024d8a
10024d86:	inc    ebx
10024d87:	inc    WORD PTR [eax]
10024d8a:	inc    BYTE PTR [ebx]
10024d8c:	sub    bl,al
10024d8e:	sub    bl,0x3
10024d91:	movsx  ecx,bl
10024d94:	mov    BYTE PTR [eax+0x3],bl
10024d97:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
10024d9c:	mov    eax,DWORD PTR [ebp-0x74]
10024d9f:	mov    ecx,DWORD PTR [ebp-0x4]
10024da2:	pop    edi
10024da3:	pop    esi
10024da4:	xor    ecx,ebp
10024da6:	pop    ebx
10024da7:	call   0x10015adb
10024dac:	leave  
10024dad:	ret    
10024dae:	cmp    BYTE PTR [ebx],0x30
10024db1:	jne    0x10024db8
10024db3:	dec    ebx
10024db4:	cmp    ebx,ecx
10024db6:	jae    0x10024dae
10024db8:	cmp    ebx,ecx
10024dba:	mov    eax,DWORD PTR [ebp-0x60]
10024dbd:	jae    0x10024d8c
10024dbf:	and    WORD PTR [eax],0x0
10024dc3:	cmp    WORD PTR [ebp-0x6c],0x8000
10024dc9:	mov    BYTE PTR [eax+0x3],0x1
10024dcd:	setne  dl
10024dd0:	dec    dl
10024dd2:	and    dl,0xd
10024dd5:	add    dl,0x20
10024dd8:	mov    BYTE PTR [eax+0x2],dl
10024ddb:	mov    BYTE PTR [ecx],0x30
10024dde:	mov    BYTE PTR [eax+0x5],0x0
10024de2:	jmp    0x100245d0
10024de7:	xor    eax,eax
10024de9:	test   bl,0x10
10024dec:	je     0x10024def
10024dee:	inc    eax
10024def:	test   bl,0x8
10024df2:	je     0x10024df7
10024df4:	or     eax,0x4
10024df7:	test   bl,0x4
10024dfa:	je     0x10024dff
10024dfc:	or     eax,0x8
10024dff:	test   bl,0x2
10024e02:	je     0x10024e07
10024e04:	or     eax,0x10
10024e07:	test   bl,0x1
10024e0a:	je     0x10024e0f
10024e0c:	or     eax,0x20
10024e0f:	test   ebx,0x80000
10024e15:	je     0x10024e1a
10024e17:	or     eax,0x2
10024e1a:	mov    ecx,ebx
10024e1c:	mov    edx,0x300
10024e21:	and    ecx,edx
10024e23:	push   esi
10024e24:	mov    esi,0x200
10024e29:	je     0x10024e4e
10024e2b:	cmp    ecx,0x100
10024e31:	je     0x10024e49
10024e33:	cmp    ecx,esi
10024e35:	je     0x10024e42
10024e37:	cmp    ecx,edx
10024e39:	jne    0x10024e4e
10024e3b:	or     eax,0xc00
10024e40:	jmp    0x10024e4e
10024e42:	or     eax,0x800
10024e47:	jmp    0x10024e4e
10024e49:	or     eax,0x400
10024e4e:	mov    ecx,ebx
10024e50:	and    ecx,0x30000
10024e56:	je     0x10024e64
10024e58:	cmp    ecx,0x10000
10024e5e:	jne    0x10024e66
10024e60:	or     eax,esi
10024e62:	jmp    0x10024e66
10024e64:	or     eax,edx
10024e66:	test   ebx,0x40000
10024e6c:	pop    esi
10024e6d:	je     0x10024e74
10024e6f:	or     eax,0x1000
10024e74:	ret    
10024e75:	xor    eax,eax
10024e77:	test   dl,0x10
10024e7a:	je     0x10024e81
10024e7c:	mov    eax,0x80
10024e81:	test   dl,0x8
10024e84:	push   ebx
10024e85:	push   esi
10024e86:	push   edi
10024e87:	mov    ebx,0x200
10024e8c:	je     0x10024e90
10024e8e:	or     eax,ebx
10024e90:	test   dl,0x4
10024e93:	je     0x10024e9a
10024e95:	or     eax,0x400
10024e9a:	test   dl,0x2
10024e9d:	je     0x10024ea4
10024e9f:	or     eax,0x800
10024ea4:	test   dl,0x1
10024ea7:	je     0x10024eae
10024ea9:	or     eax,0x1000
10024eae:	test   edx,0x80000
10024eb4:	mov    edi,0x100
10024eb9:	je     0x10024ebd
10024ebb:	or     eax,edi
10024ebd:	mov    ecx,edx
10024ebf:	mov    esi,0x300
10024ec4:	and    ecx,esi
10024ec6:	je     0x10024ee7
10024ec8:	cmp    ecx,edi
10024eca:	je     0x10024ee2
10024ecc:	cmp    ecx,ebx
10024ece:	je     0x10024edb
10024ed0:	cmp    ecx,esi
10024ed2:	jne    0x10024ee7
10024ed4:	or     eax,0x6000
10024ed9:	jmp    0x10024ee7
10024edb:	or     eax,0x4000
10024ee0:	jmp    0x10024ee7
10024ee2:	or     eax,0x2000
10024ee7:	mov    ecx,0x3000000
10024eec:	pop    edi
10024eed:	and    edx,ecx
10024eef:	cmp    edx,0x1000000
10024ef5:	pop    esi
10024ef6:	pop    ebx
10024ef7:	je     0x10024f0f
10024ef9:	cmp    edx,0x2000000
10024eff:	je     0x10024f0b
10024f01:	cmp    edx,ecx
10024f03:	jne    0x10024f14
10024f05:	or     eax,0x8000
10024f0a:	ret    
10024f0b:	or     eax,0x40
10024f0e:	ret    
10024f0f:	or     eax,0x8040
10024f14:	ret    
10024f15:	sub    esp,0x10
10024f18:	push   ebx
10024f19:	push   ebp
10024f1a:	push   esi
10024f1b:	push   edi
10024f1c:	fstcw  WORD PTR [esp+0x14]
10024f21:	mov    ebx,DWORD PTR [esp+0x14]
10024f25:	xor    edx,edx
10024f27:	test   bl,0x1
10024f2a:	je     0x10024f2f
10024f2c:	push   0x10
10024f2e:	pop    edx
10024f2f:	test   bl,0x4
10024f32:	je     0x10024f37
10024f34:	or     edx,0x8
10024f37:	test   bl,0x8
10024f3a:	je     0x10024f3f
10024f3c:	or     edx,0x4
10024f3f:	test   bl,0x10
10024f42:	je     0x10024f47
10024f44:	or     edx,0x2
10024f47:	test   bl,0x20
10024f4a:	je     0x10024f4f
10024f4c:	or     edx,0x1
10024f4f:	test   bl,0x2
10024f52:	je     0x10024f5a
10024f54:	or     edx,0x80000
10024f5a:	movzx  ecx,bx
10024f5d:	mov    eax,ecx
10024f5f:	mov    edi,0xc00
10024f64:	and    eax,edi
10024f66:	mov    ebp,0x300
10024f6b:	mov    esi,0x200
10024f70:	je     0x10024f92
10024f72:	cmp    eax,0x400
10024f77:	je     0x10024f8c
10024f79:	cmp    eax,0x800
10024f7e:	je     0x10024f88
10024f80:	cmp    eax,edi
10024f82:	jne    0x10024f92
10024f84:	or     edx,ebp
10024f86:	jmp    0x10024f92
10024f88:	or     edx,esi
10024f8a:	jmp    0x10024f92
10024f8c:	or     edx,0x100
10024f92:	and    ecx,ebp
10024f94:	je     0x10024fa2
10024f96:	cmp    ecx,esi
10024f98:	jne    0x10024fa8
10024f9a:	or     edx,0x10000
10024fa0:	jmp    0x10024fa8
10024fa2:	or     edx,0x20000
10024fa8:	test   bx,0x1000
10024fad:	je     0x10024fb5
10024faf:	or     edx,0x40000
10024fb5:	mov    esi,DWORD PTR [esp+0x28]
10024fb9:	mov    ecx,DWORD PTR [esp+0x24]
10024fbd:	mov    eax,esi
10024fbf:	not    eax
10024fc1:	and    eax,edx
10024fc3:	and    ecx,esi
10024fc5:	or     eax,ecx
10024fc7:	cmp    eax,edx
10024fc9:	mov    DWORD PTR [esp+0x1c],eax
10024fcd:	je     0x1002507d
10024fd3:	mov    ebx,eax
10024fd5:	call   0x10024de7
10024fda:	movzx  eax,ax
10024fdd:	mov    DWORD PTR [esp+0x10],eax
10024fe1:	fldcw  WORD PTR [esp+0x10]
10024fe5:	fstcw  WORD PTR [esp+0x10]
10024fea:	mov    ebx,DWORD PTR [esp+0x10]
10024fee:	xor    edx,edx
10024ff0:	test   bl,0x1
10024ff3:	je     0x10024ff8
10024ff5:	push   0x10
10024ff7:	pop    edx
10024ff8:	test   bl,0x4
10024ffb:	je     0x10025000
10024ffd:	or     edx,0x8
10025000:	test   bl,0x8
10025003:	je     0x10025008
10025005:	or     edx,0x4
10025008:	test   bl,0x10
1002500b:	je     0x10025010
1002500d:	or     edx,0x2
10025010:	test   bl,0x20
10025013:	je     0x10025018
10025015:	or     edx,0x1
10025018:	test   bl,0x2
1002501b:	je     0x10025023
1002501d:	or     edx,0x80000
10025023:	movzx  ecx,bx
10025026:	mov    eax,ecx
10025028:	and    eax,edi
1002502a:	je     0x10025050
1002502c:	cmp    eax,0x400
10025031:	je     0x1002504a
10025033:	cmp    eax,0x800
10025038:	je     0x10025042
1002503a:	cmp    eax,edi
1002503c:	jne    0x10025050
1002503e:	or     edx,ebp
10025040:	jmp    0x10025050
10025042:	or     edx,0x200
10025048:	jmp    0x10025050
1002504a:	or     edx,0x100
10025050:	and    ecx,ebp
10025052:	je     0x10025064
10025054:	cmp    ecx,0x200
1002505a:	jne    0x1002506a
1002505c:	or     edx,0x10000
10025062:	jmp    0x1002506a
10025064:	or     edx,0x20000
1002506a:	test   bx,0x1000
1002506f:	je     0x10025077
10025071:	or     edx,0x40000
10025077:	mov    eax,edx
10025079:	mov    DWORD PTR [esp+0x1c],edx
1002507d:	cmp    DWORD PTR ds:0x100680a0,0x0
10025084:	je     0x10025210
1002508a:	and    esi,0x308031f
10025090:	mov    edi,esi
10025092:	stmxcsr DWORD PTR [esp+0x18]
10025097:	mov    eax,DWORD PTR [esp+0x18]
1002509b:	xor    esi,esi
1002509d:	test   al,al
1002509f:	jns    0x100250a4
100250a1:	push   0x10
100250a3:	pop    esi
100250a4:	test   ax,0x200
100250a8:	je     0x100250ad
100250aa:	or     esi,0x8
100250ad:	test   ax,0x400
100250b1:	je     0x100250b6
100250b3:	or     esi,0x4
100250b6:	test   ax,0x800
100250ba:	je     0x100250bf
100250bc:	or     esi,0x2
100250bf:	test   ax,0x1000
100250c3:	je     0x100250c8
100250c5:	or     esi,0x1
100250c8:	test   ax,0x100
100250cc:	je     0x100250d4
100250ce:	or     esi,0x80000
100250d4:	mov    ecx,eax
100250d6:	mov    ebp,0x6000
100250db:	and    ecx,ebp
100250dd:	je     0x10025109
100250df:	cmp    ecx,0x2000
100250e5:	je     0x10025103
100250e7:	cmp    ecx,0x4000
100250ed:	je     0x100250fb
100250ef:	cmp    ecx,ebp
100250f1:	jne    0x10025109
100250f3:	or     esi,0x300
100250f9:	jmp    0x10025109
100250fb:	or     esi,0x200
10025101:	jmp    0x10025109
10025103:	or     esi,0x100
10025109:	mov    ebx,0x8040
1002510e:	and    eax,ebx
10025110:	sub    eax,0x40
10025113:	je     0x10025131
10025115:	sub    eax,0x7fc0
1002511a:	je     0x10025129
1002511c:	sub    eax,0x40
1002511f:	jne    0x10025137
10025121:	or     esi,0x1000000
10025127:	jmp    0x10025137
10025129:	or     esi,0x3000000
1002512f:	jmp    0x10025137
10025131:	or     esi,0x2000000
10025137:	mov    edx,edi
10025139:	and    edi,DWORD PTR [esp+0x24]
1002513d:	not    edx
1002513f:	and    edx,esi
10025141:	or     edx,edi
10025143:	cmp    edx,esi
10025145:	jne    0x1002514e
10025147:	mov    eax,esi
10025149:	jmp    0x100251f9
1002514e:	call   0x10024e75
10025153:	push   eax
10025154:	mov    DWORD PTR [esp+0x2c],eax
10025158:	call   0x10025218
1002515d:	pop    ecx
1002515e:	stmxcsr DWORD PTR [esp+0x28]
10025163:	mov    eax,DWORD PTR [esp+0x28]
10025167:	xor    edx,edx
10025169:	test   al,al
1002516b:	jns    0x10025170
1002516d:	push   0x10
1002516f:	pop    edx
10025170:	mov    edi,0x200
10025175:	test   edi,eax
10025177:	je     0x1002517c
10025179:	or     edx,0x8
1002517c:	test   ax,0x400
10025180:	je     0x10025185
10025182:	or     edx,0x4
10025185:	test   ax,0x800
10025189:	je     0x1002518e
1002518b:	or     edx,0x2
1002518e:	test   ax,0x1000
10025192:	je     0x10025197
10025194:	or     edx,0x1
10025197:	mov    esi,0x100
1002519c:	test   esi,eax
1002519e:	je     0x100251a6
100251a0:	or     edx,0x80000
100251a6:	mov    ecx,eax
100251a8:	and    ecx,ebp
100251aa:	je     0x100251ce
100251ac:	cmp    ecx,0x2000
100251b2:	je     0x100251cc
100251b4:	cmp    ecx,0x4000
100251ba:	je     0x100251c8
100251bc:	cmp    ecx,ebp
100251be:	jne    0x100251ce
100251c0:	or     edx,0x300
100251c6:	jmp    0x100251ce
100251c8:	or     edx,edi
100251ca:	jmp    0x100251ce
100251cc:	or     edx,esi
100251ce:	and    eax,ebx
100251d0:	sub    eax,0x40
100251d3:	je     0x100251f1
100251d5:	sub    eax,0x7fc0
100251da:	je     0x100251e9
100251dc:	sub    eax,0x40
100251df:	jne    0x100251f7
100251e1:	or     edx,0x1000000
100251e7:	jmp    0x100251f7
100251e9:	or     edx,0x3000000
100251ef:	jmp    0x100251f7
100251f1:	or     edx,0x2000000
100251f7:	mov    eax,edx
100251f9:	mov    ecx,DWORD PTR [esp+0x1c]
100251fd:	mov    edx,eax
100251ff:	xor    edx,ecx
10025201:	or     eax,ecx
10025203:	test   edx,0x8031f
10025209:	je     0x10025210
1002520b:	or     eax,0x80000000
10025210:	pop    edi
10025211:	pop    esi
10025212:	pop    ebp
10025213:	pop    ebx
10025214:	add    esp,0x10
10025217:	ret    
10025218:	push   0x8
1002521a:	push   0x100589b0
1002521f:	call   0x10017a38
10025224:	xor    eax,eax
10025226:	cmp    DWORD PTR ds:0x100680a0,eax
1002522c:	je     0x10025284
1002522e:	test   BYTE PTR [ebp+0x8],0x40
10025232:	je     0x1002527c
10025234:	cmp    DWORD PTR ds:0x10065a68,eax
1002523a:	je     0x1002527c
1002523c:	mov    DWORD PTR [ebp-0x4],eax
1002523f:	ldmxcsr DWORD PTR [ebp+0x8]
10025243:	jmp    0x10025273
10025245:	mov    eax,DWORD PTR [ebp-0x14]
10025248:	mov    eax,DWORD PTR [eax]
1002524a:	mov    eax,DWORD PTR [eax]
1002524c:	cmp    eax,0xc0000005
10025251:	je     0x1002525d
10025253:	cmp    eax,0xc000001d
10025258:	je     0x1002525d
1002525a:	xor    eax,eax
1002525c:	ret    
1002525d:	xor    eax,eax
1002525f:	inc    eax
10025260:	ret    
10025261:	mov    esp,DWORD PTR [ebp-0x18]
10025264:	and    DWORD PTR ds:0x10065a68,0x0
1002526b:	and    DWORD PTR [ebp+0x8],0xffffffbf
1002526f:	ldmxcsr DWORD PTR [ebp+0x8]
10025273:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1002527a:	jmp    0x10025284
1002527c:	and    DWORD PTR [ebp+0x8],0xffffffbf
10025280:	ldmxcsr DWORD PTR [ebp+0x8]
10025284:	call   0x10017a7d
10025289:	ret    
1002528a:	int3   
1002528b:	int3   
1002528c:	int3   
1002528d:	int3   
1002528e:	int3   
1002528f:	int3   
10025290:	lea    eax,[edx-0x1]
10025293:	pop    ebx
10025294:	ret    
10025295:	lea    esp,[esp+0x0]
1002529c:	lea    esp,[esp+0x0]
100252a0:	xor    eax,eax
100252a2:	mov    al,BYTE PTR [esp+0x8]
100252a6:	push   ebx
100252a7:	mov    ebx,eax
100252a9:	shl    eax,0x8
100252ac:	mov    edx,DWORD PTR [esp+0x8]
100252b0:	test   edx,0x3
100252b6:	je     0x100252cd
100252b8:	mov    cl,BYTE PTR [edx]
100252ba:	add    edx,0x1
100252bd:	cmp    cl,bl
100252bf:	je     0x10025290
100252c1:	test   cl,cl
100252c3:	je     0x10025316
100252c5:	test   edx,0x3
100252cb:	jne    0x100252b8
100252cd:	or     ebx,eax
100252cf:	push   edi
100252d0:	mov    eax,ebx
100252d2:	shl    ebx,0x10
100252d5:	push   esi
100252d6:	or     ebx,eax
100252d8:	mov    ecx,DWORD PTR [edx]
100252da:	mov    edi,0x7efefeff
100252df:	mov    eax,ecx
100252e1:	mov    esi,edi
100252e3:	xor    ecx,ebx
100252e5:	add    esi,eax
100252e7:	add    edi,ecx
100252e9:	xor    ecx,0xffffffff
100252ec:	xor    eax,0xffffffff
100252ef:	xor    ecx,edi
100252f1:	xor    eax,esi
100252f3:	add    edx,0x4
100252f6:	and    ecx,0x81010100
100252fc:	jne    0x1002531a
100252fe:	and    eax,0x81010100
10025303:	je     0x100252d8
10025305:	and    eax,0x1010100
1002530a:	jne    0x10025314
1002530c:	and    esi,0x80000000
10025312:	jne    0x100252d8
10025314:	pop    esi
10025315:	pop    edi
10025316:	pop    ebx
10025317:	xor    eax,eax
10025319:	ret    
1002531a:	mov    eax,DWORD PTR [edx-0x4]
1002531d:	cmp    al,bl
1002531f:	je     0x10025357
10025321:	test   al,al
10025323:	je     0x10025314
10025325:	cmp    ah,bl
10025327:	je     0x10025350
10025329:	test   ah,ah
1002532b:	je     0x10025314
1002532d:	shr    eax,0x10
10025330:	cmp    al,bl
10025332:	je     0x10025349
10025334:	test   al,al
10025336:	je     0x10025314
10025338:	cmp    ah,bl
1002533a:	je     0x10025342
1002533c:	test   ah,ah
1002533e:	je     0x10025314
10025340:	jmp    0x100252d8
10025342:	pop    esi
10025343:	pop    edi
10025344:	lea    eax,[edx-0x1]
10025347:	pop    ebx
10025348:	ret    
10025349:	lea    eax,[edx-0x2]
1002534c:	pop    esi
1002534d:	pop    edi
1002534e:	pop    ebx
1002534f:	ret    
10025350:	lea    eax,[edx-0x3]
10025353:	pop    esi
10025354:	pop    edi
10025355:	pop    ebx
10025356:	ret    
10025357:	lea    eax,[edx-0x4]
1002535a:	pop    esi
1002535b:	pop    edi
1002535c:	pop    ebx
1002535d:	ret    
1002535e:	int3   
1002535f:	int3   
10025360:	push   esi
10025361:	mov    esi,ecx
10025363:	mov    eax,DWORD PTR [esi+0x8]
10025366:	test   eax,eax
10025368:	mov    DWORD PTR [esi],0x10051e2c
1002536e:	je     0x10025378
10025370:	mov    ecx,DWORD PTR [eax]
10025372:	mov    edx,DWORD PTR [ecx+0x8]
10025375:	push   eax
10025376:	call   edx
10025378:	cmp    DWORD PTR [esi+0xc],0x0
1002537c:	je     0x10025395
1002537e:	call   DWORD PTR ds:0x1002c1d8
10025384:	test   eax,eax
10025386:	je     0x10025395
10025388:	mov    ecx,DWORD PTR [esi+0xc]
1002538b:	push   ecx
1002538c:	push   0x0
1002538e:	push   eax
1002538f:	call   DWORD PTR ds:0x1002c1cc
10025395:	pop    esi
10025396:	ret    
10025397:	int3   
10025398:	int3   
10025399:	int3   
1002539a:	int3   
1002539b:	int3   
1002539c:	int3   
1002539d:	int3   
1002539e:	int3   
1002539f:	int3   
100253a0:	sub    esp,0x10
100253a3:	mov    eax,DWORD PTR [esp+0x14]
100253a7:	mov    ecx,DWORD PTR [esp+0x18]
100253ab:	push   0x100589cc
100253b0:	lea    edx,[esp+0x4]
100253b4:	push   edx
100253b5:	mov    DWORD PTR [esp+0x8],0x10051e2c
100253bd:	mov    DWORD PTR [esp+0xc],eax
100253c1:	mov    DWORD PTR [esp+0x10],ecx
100253c5:	mov    DWORD PTR [esp+0x14],0x0
100253cd:	call   0x100161ce
100253d2:	int3   
100253d3:	int3   
100253d4:	int3   
100253d5:	int3   
100253d6:	int3   
100253d7:	int3   
100253d8:	int3   
100253d9:	int3   
100253da:	int3   
100253db:	int3   
100253dc:	int3   
100253dd:	int3   
100253de:	int3   
100253df:	int3   
100253e0:	mov    eax,DWORD PTR [esp+0x4]
100253e4:	push   esi
100253e5:	mov    esi,ecx
100253e7:	mov    DWORD PTR [esi],0x10051e2c
100253ed:	mov    ecx,DWORD PTR [eax+0x4]
100253f0:	mov    DWORD PTR [esi+0x4],ecx
100253f3:	mov    edx,DWORD PTR [eax+0x8]
100253f6:	mov    eax,edx
100253f8:	test   eax,eax
100253fa:	mov    DWORD PTR [esi+0x8],edx
100253fd:	mov    DWORD PTR [esi+0xc],0x0
10025404:	je     0x1002540e
10025406:	mov    ecx,DWORD PTR [eax]
10025408:	mov    edx,DWORD PTR [ecx+0x4]
1002540b:	push   eax
1002540c:	call   edx
1002540e:	mov    eax,esi
10025410:	pop    esi
10025411:	ret    0x4
10025414:	int3   
10025415:	int3   
10025416:	int3   
10025417:	int3   
10025418:	int3   
10025419:	int3   
1002541a:	int3   
1002541b:	int3   
1002541c:	int3   
1002541d:	int3   
1002541e:	int3   
1002541f:	int3   
10025420:	push   esi
10025421:	mov    esi,ecx
10025423:	mov    eax,DWORD PTR [esi+0x8]
10025426:	test   eax,eax
10025428:	mov    DWORD PTR [esi],0x10051e2c
1002542e:	je     0x10025438
10025430:	mov    ecx,DWORD PTR [eax]
10025432:	mov    edx,DWORD PTR [ecx+0x8]
10025435:	push   eax
10025436:	call   edx
10025438:	cmp    DWORD PTR [esi+0xc],0x0
1002543c:	je     0x10025455
1002543e:	call   DWORD PTR ds:0x1002c1d8
10025444:	test   eax,eax
10025446:	je     0x10025455
10025448:	mov    ecx,DWORD PTR [esi+0xc]
1002544b:	push   ecx
1002544c:	push   0x0
1002544e:	push   eax
1002544f:	call   DWORD PTR ds:0x1002c1cc
10025455:	test   BYTE PTR [esp+0x8],0x1
1002545a:	je     0x10025465
1002545c:	push   esi
1002545d:	call   0x10015ad6
10025462:	add    esp,0x4
10025465:	mov    eax,esi
10025467:	pop    esi
10025468:	ret    0x4
1002546b:	int3   
1002546c:	int3   
1002546d:	int3   
1002546e:	int3   
1002546f:	int3   
10025470:	push   esi
10025471:	mov    esi,eax
10025473:	mov    eax,DWORD PTR [esi+0x1c]
10025476:	mov    ecx,DWORD PTR [esi+0x10]
10025479:	push   edi
1002547a:	mov    edi,DWORD PTR [eax+0x14]
1002547d:	cmp    edi,ecx
1002547f:	jbe    0x10025483
10025481:	mov    edi,ecx
10025483:	test   edi,edi
10025485:	je     0x100254bc
10025487:	mov    eax,DWORD PTR [eax+0x10]
1002548a:	mov    ecx,DWORD PTR [esi+0xc]
1002548d:	push   edi
1002548e:	push   eax
1002548f:	push   ecx
10025490:	call   0x100167d0
10025495:	mov    eax,DWORD PTR [esi+0x1c]
10025498:	add    DWORD PTR [esi+0xc],edi
1002549b:	add    DWORD PTR [eax+0x10],edi
1002549e:	add    DWORD PTR [esi+0x14],edi
100254a1:	sub    DWORD PTR [esi+0x10],edi
100254a4:	mov    eax,DWORD PTR [esi+0x1c]
100254a7:	sub    DWORD PTR [eax+0x14],edi
100254aa:	mov    esi,DWORD PTR [esi+0x1c]
100254ad:	add    esp,0xc
100254b0:	cmp    DWORD PTR [esi+0x14],0x0
100254b4:	jne    0x100254bc
100254b6:	mov    edx,DWORD PTR [esi+0x8]
100254b9:	mov    DWORD PTR [esi+0x10],edx
100254bc:	pop    edi
100254bd:	pop    esi
100254be:	ret    
100254bf:	int3   
100254c0:	mov    eax,DWORD PTR [esi+0x4]
100254c3:	push   edi
100254c4:	mov    edi,eax
100254c6:	cmp    edi,ecx
100254c8:	jbe    0x100254cc
100254ca:	mov    edi,ecx
100254cc:	test   edi,edi
100254ce:	jne    0x100254d4
100254d0:	xor    eax,eax
100254d2:	pop    edi
100254d3:	ret    
100254d4:	sub    eax,edi
100254d6:	mov    DWORD PTR [esi+0x4],eax
100254d9:	mov    eax,DWORD PTR [esi+0x1c]
100254dc:	mov    eax,DWORD PTR [eax+0x18]
100254df:	cmp    eax,0x1
100254e2:	jne    0x100254f3
100254e4:	mov    ecx,DWORD PTR [esi]
100254e6:	mov    edx,DWORD PTR [esi+0x30]
100254e9:	push   edi
100254ea:	push   ecx
100254eb:	push   edx
100254ec:	call   0x10027930
100254f1:	jmp    0x10025505
100254f3:	cmp    eax,0x2
100254f6:	jne    0x1002550b
100254f8:	mov    eax,DWORD PTR [esi]
100254fa:	mov    ecx,DWORD PTR [esi+0x30]
100254fd:	push   edi
100254fe:	push   eax
100254ff:	push   ecx
10025500:	call   0x10029620
10025505:	mov    DWORD PTR [esi+0x30],eax
10025508:	add    esp,0xc
1002550b:	mov    edx,DWORD PTR [esi]
1002550d:	mov    eax,DWORD PTR [esp+0x8]
10025511:	push   edi
10025512:	push   edx
10025513:	push   eax
10025514:	call   0x100167d0
10025519:	add    DWORD PTR [esi],edi
1002551b:	add    DWORD PTR [esi+0x8],edi
1002551e:	add    esp,0xc
10025521:	mov    eax,edi
10025523:	pop    edi
10025524:	ret    
10025525:	int3   
10025526:	int3   
10025527:	int3   
10025528:	int3   
10025529:	int3   
1002552a:	int3   
1002552b:	int3   
1002552c:	int3   
1002552d:	int3   
1002552e:	int3   
1002552f:	int3   
10025530:	sub    esp,0x14
10025533:	mov    ecx,DWORD PTR [edi+0x7c]
10025536:	mov    edx,DWORD PTR [edi+0x6c]
10025539:	push   ebx
1002553a:	push   ebp
1002553b:	mov    ebp,DWORD PTR [edi+0x78]
1002553e:	push   esi
1002553f:	mov    esi,DWORD PTR [edi+0x90]
10025545:	mov    DWORD PTR [esp+0x10],ecx
10025549:	mov    ecx,DWORD PTR [edi+0x38]
1002554c:	mov    DWORD PTR [esp+0x14],esi
10025550:	mov    esi,DWORD PTR [edi+0x2c]
10025553:	lea    ebx,[esi-0x106]
10025559:	add    ecx,edx
1002555b:	cmp    edx,ebx
1002555d:	jbe    0x1002556d
1002555f:	sub    edx,esi
10025561:	add    edx,0x106
10025567:	mov    DWORD PTR [esp+0x18],edx
1002556b:	jmp    0x10025575
1002556d:	mov    DWORD PTR [esp+0x18],0x0
10025575:	cmp    ebp,DWORD PTR [edi+0x8c]
1002557b:	movzx  edx,BYTE PTR [ecx+ebp*1-0x1]
10025580:	mov    BYTE PTR [esp+0xe],dl
10025584:	movzx  edx,BYTE PTR [ecx+ebp*1]
10025588:	lea    esi,[ecx+0x102]
1002558e:	mov    BYTE PTR [esp+0xf],dl
10025592:	jb     0x10025599
10025594:	shr    DWORD PTR [esp+0x10],0x2
10025599:	mov    edx,DWORD PTR [edi+0x74]
1002559c:	cmp    DWORD PTR [esp+0x14],edx
100255a0:	jbe    0x100255a6
100255a2:	mov    DWORD PTR [esp+0x14],edx
100255a6:	mov    edx,DWORD PTR [edi+0x38]
100255a9:	mov    bl,BYTE PTR [esp+0xf]
100255ad:	add    edx,eax
100255af:	cmp    BYTE PTR [edx+ebp*1],bl
100255b2:	jne    0x1002567f
100255b8:	mov    bl,BYTE PTR [esp+0xe]
100255bc:	cmp    BYTE PTR [edx+ebp*1-0x1],bl
100255c0:	jne    0x1002567f
100255c6:	mov    bl,BYTE PTR [edx]
100255c8:	cmp    bl,BYTE PTR [ecx]
100255ca:	jne    0x1002567f
100255d0:	mov    bl,BYTE PTR [edx+0x1]
100255d3:	add    edx,0x1
100255d6:	cmp    bl,BYTE PTR [ecx+0x1]
100255d9:	jne    0x1002567f
100255df:	add    ecx,0x2
100255e2:	add    edx,0x1
100255e5:	mov    bl,BYTE PTR [ecx+0x1]
100255e8:	add    ecx,0x1
100255eb:	add    edx,0x1
100255ee:	cmp    bl,BYTE PTR [edx]
100255f0:	jne    0x10025651
100255f2:	mov    bl,BYTE PTR [ecx+0x1]
100255f5:	add    ecx,0x1
100255f8:	add    edx,0x1
100255fb:	cmp    bl,BYTE PTR [edx]
100255fd:	jne    0x10025651
100255ff:	mov    bl,BYTE PTR [ecx+0x1]
10025602:	add    ecx,0x1
10025605:	add    edx,0x1
10025608:	cmp    bl,BYTE PTR [edx]
1002560a:	jne    0x10025651
1002560c:	mov    bl,BYTE PTR [ecx+0x1]
1002560f:	add    ecx,0x1
10025612:	add    edx,0x1
10025615:	cmp    bl,BYTE PTR [edx]
10025617:	jne    0x10025651
10025619:	mov    bl,BYTE PTR [ecx+0x1]
1002561c:	add    ecx,0x1
1002561f:	add    edx,0x1
10025622:	cmp    bl,BYTE PTR [edx]
10025624:	jne    0x10025651
10025626:	mov    bl,BYTE PTR [ecx+0x1]
10025629:	add    ecx,0x1
1002562c:	add    edx,0x1
1002562f:	cmp    bl,BYTE PTR [edx]
10025631:	jne    0x10025651
10025633:	mov    bl,BYTE PTR [ecx+0x1]
10025636:	add    ecx,0x1
10025639:	add    edx,0x1
1002563c:	cmp    bl,BYTE PTR [edx]
1002563e:	jne    0x10025651
10025640:	mov    bl,BYTE PTR [ecx+0x1]
10025643:	add    ecx,0x1
10025646:	add    edx,0x1
10025649:	cmp    bl,BYTE PTR [edx]
1002564b:	jne    0x10025651
1002564d:	cmp    ecx,esi
1002564f:	jb     0x100255e5
10025651:	mov    edx,ecx
10025653:	sub    edx,esi
10025655:	add    edx,0x102
1002565b:	cmp    edx,ebp
1002565d:	lea    ecx,[esi-0x102]
10025663:	jle    0x1002567f
10025665:	cmp    edx,DWORD PTR [esp+0x14]
10025669:	mov    DWORD PTR [edi+0x70],eax
1002566c:	mov    ebp,edx
1002566e:	jge    0x1002569c
10025670:	mov    bl,BYTE PTR [edx+ecx*1-0x1]
10025674:	mov    dl,BYTE PTR [edx+ecx*1]
10025677:	mov    BYTE PTR [esp+0xe],bl
1002567b:	mov    BYTE PTR [esp+0xf],dl
1002567f:	mov    edx,DWORD PTR [edi+0x34]
10025682:	and    edx,eax
10025684:	mov    eax,DWORD PTR [edi+0x40]
10025687:	movzx  eax,WORD PTR [eax+edx*2]
1002568b:	cmp    eax,DWORD PTR [esp+0x18]
1002568f:	jbe    0x1002569c
10025691:	sub    DWORD PTR [esp+0x10],0x1
10025696:	jne    0x100255a6
1002569c:	mov    eax,DWORD PTR [edi+0x74]
1002569f:	cmp    ebp,eax
100256a1:	ja     0x100256a5
100256a3:	mov    eax,ebp
100256a5:	pop    esi
100256a6:	pop    ebp
100256a7:	pop    ebx
100256a8:	add    esp,0x14
100256ab:	ret    
100256ac:	int3   
100256ad:	int3   
100256ae:	int3   
100256af:	int3   
100256b0:	mov    ecx,DWORD PTR [esi+0x38]
100256b3:	mov    eax,DWORD PTR [esi+0x6c]
100256b6:	push   ebp
100256b7:	mov    ebp,DWORD PTR [esp+0x8]
100256bb:	mov    dl,BYTE PTR [ecx+ebp*1]
100256be:	add    eax,ecx
100256c0:	add    ecx,ebp
100256c2:	cmp    dl,BYTE PTR [eax]
100256c4:	push   edi
100256c5:	lea    edi,[eax+0x102]
100256cb:	jne    0x1002576a
100256d1:	mov    dl,BYTE PTR [ecx+0x1]
100256d4:	cmp    dl,BYTE PTR [eax+0x1]
100256d7:	jne    0x1002576a
100256dd:	add    eax,0x2
100256e0:	add    ecx,0x2
100256e3:	mov    dl,BYTE PTR [eax+0x1]
100256e6:	add    eax,0x1
100256e9:	add    ecx,0x1
100256ec:	cmp    dl,BYTE PTR [ecx]
100256ee:	jne    0x1002574f
100256f0:	mov    dl,BYTE PTR [eax+0x1]
100256f3:	add    eax,0x1
100256f6:	add    ecx,0x1
100256f9:	cmp    dl,BYTE PTR [ecx]
100256fb:	jne    0x1002574f
100256fd:	mov    dl,BYTE PTR [eax+0x1]
10025700:	add    eax,0x1
10025703:	add    ecx,0x1
10025706:	cmp    dl,BYTE PTR [ecx]
10025708:	jne    0x1002574f
1002570a:	mov    dl,BYTE PTR [eax+0x1]
1002570d:	add    eax,0x1
10025710:	add    ecx,0x1
10025713:	cmp    dl,BYTE PTR [ecx]
10025715:	jne    0x1002574f
10025717:	mov    dl,BYTE PTR [eax+0x1]
1002571a:	add    eax,0x1
1002571d:	add    ecx,0x1
10025720:	cmp    dl,BYTE PTR [ecx]
10025722:	jne    0x1002574f
10025724:	mov    dl,BYTE PTR [eax+0x1]
10025727:	add    eax,0x1
1002572a:	add    ecx,0x1
1002572d:	cmp    dl,BYTE PTR [ecx]
1002572f:	jne    0x1002574f
10025731:	mov    dl,BYTE PTR [eax+0x1]
10025734:	add    eax,0x1
10025737:	add    ecx,0x1
1002573a:	cmp    dl,BYTE PTR [ecx]
1002573c:	jne    0x1002574f
1002573e:	mov    dl,BYTE PTR [eax+0x1]
10025741:	add    eax,0x1
10025744:	add    ecx,0x1
10025747:	cmp    dl,BYTE PTR [ecx]
10025749:	jne    0x1002574f
1002574b:	cmp    eax,edi
1002574d:	jb     0x100256e3
1002574f:	sub    eax,edi
10025751:	add    eax,0x102
10025756:	cmp    eax,0x3
10025759:	jl     0x1002576a
1002575b:	mov    ecx,DWORD PTR [esi+0x74]
1002575e:	cmp    eax,ecx
10025760:	mov    DWORD PTR [esi+0x70],ebp
10025763:	jbe    0x1002576f
10025765:	pop    edi
10025766:	mov    eax,ecx
10025768:	pop    ebp
10025769:	ret    
1002576a:	mov    eax,0x2
1002576f:	pop    edi
10025770:	pop    ebp
10025771:	ret    
10025772:	int3   
10025773:	int3   
10025774:	int3   
10025775:	int3   
10025776:	int3   
10025777:	int3   
10025778:	int3   
10025779:	int3   
1002577a:	int3   
1002577b:	int3   
1002577c:	int3   
1002577d:	int3   
1002577e:	int3   
1002577f:	int3   
10025780:	push   ebx
10025781:	mov    ebx,DWORD PTR [edi+0x2c]
10025784:	push   ebp
10025785:	push   esi
10025786:	mov    ebp,DWORD PTR [edi+0x3c]
10025789:	sub    ebp,DWORD PTR [edi+0x74]
1002578c:	mov    eax,DWORD PTR [edi+0x6c]
1002578f:	mov    ecx,DWORD PTR [edi+0x2c]
10025792:	lea    edx,[ebx+ecx*1-0x106]
10025799:	sub    ebp,eax
1002579b:	cmp    eax,edx
1002579d:	jb     0x100257fe
1002579f:	mov    eax,DWORD PTR [edi+0x38]
100257a2:	push   ebx
100257a3:	lea    ecx,[eax+ebx*1]
100257a6:	push   ecx
100257a7:	push   eax
100257a8:	call   0x100167d0
100257ad:	mov    edx,DWORD PTR [edi+0x4c]
100257b0:	mov    eax,DWORD PTR [edi+0x44]
100257b3:	sub    DWORD PTR [edi+0x70],ebx
100257b6:	sub    DWORD PTR [edi+0x6c],ebx
100257b9:	add    esp,0xc
100257bc:	sub    DWORD PTR [edi+0x5c],ebx
100257bf:	lea    ecx,[eax+edx*2]
100257c2:	movzx  eax,WORD PTR [ecx-0x2]
100257c6:	sub    ecx,0x2
100257c9:	cmp    eax,ebx
100257cb:	jb     0x100257d1
100257cd:	sub    eax,ebx
100257cf:	jmp    0x100257d3
100257d1:	xor    eax,eax
100257d3:	sub    edx,0x1
100257d6:	mov    WORD PTR [ecx],ax
100257d9:	jne    0x100257c2
100257db:	mov    ecx,DWORD PTR [edi+0x40]
100257de:	mov    edx,ebx
100257e0:	lea    ecx,[ecx+ebx*2]
100257e3:	movzx  eax,WORD PTR [ecx-0x2]
100257e7:	sub    ecx,0x2
100257ea:	cmp    eax,ebx
100257ec:	jb     0x100257f2
100257ee:	sub    eax,ebx
100257f0:	jmp    0x100257f4
100257f2:	xor    eax,eax
100257f4:	sub    edx,0x1
100257f7:	mov    WORD PTR [ecx],ax
100257fa:	jne    0x100257e3
100257fc:	add    ebp,ebx
100257fe:	mov    esi,DWORD PTR [edi]
10025800:	cmp    DWORD PTR [esi+0x4],0x0
10025804:	je     0x10025859
10025806:	mov    edx,DWORD PTR [edi+0x74]
10025809:	add    edx,DWORD PTR [edi+0x6c]
1002580c:	mov    ecx,ebp
1002580e:	add    edx,DWORD PTR [edi+0x38]
10025811:	push   edx
10025812:	call   0x100254c0
10025817:	add    DWORD PTR [edi+0x74],eax
1002581a:	mov    edx,DWORD PTR [edi+0x74]
1002581d:	add    esp,0x4
10025820:	cmp    edx,0x3
10025823:	jb     0x10025845
10025825:	mov    eax,DWORD PTR [edi+0x6c]
10025828:	mov    ecx,DWORD PTR [edi+0x38]
1002582b:	lea    esi,[eax+ecx*1]
1002582e:	movzx  eax,BYTE PTR [esi]
10025831:	mov    ecx,DWORD PTR [edi+0x58]
10025834:	mov    DWORD PTR [edi+0x48],eax
10025837:	shl    eax,cl
10025839:	movzx  ecx,BYTE PTR [esi+0x1]
1002583d:	xor    eax,ecx
1002583f:	and    eax,DWORD PTR [edi+0x54]
10025842:	mov    DWORD PTR [edi+0x48],eax
10025845:	cmp    edx,0x106
1002584b:	jae    0x10025859
1002584d:	mov    edx,DWORD PTR [edi]
1002584f:	cmp    DWORD PTR [edx+0x4],0x0
10025853:	jne    0x10025786
10025859:	pop    esi
1002585a:	pop    ebp
1002585b:	pop    ebx
1002585c:	ret    
1002585d:	int3   
1002585e:	int3   
1002585f:	int3   
10025860:	push   esi
10025861:	push   edi
10025862:	mov    edi,DWORD PTR [esp+0xc]
10025866:	mov    eax,DWORD PTR [edi+0xc]
10025869:	mov    esi,0xffff
1002586e:	add    eax,0xfffffffb
10025871:	cmp    eax,esi
10025873:	jae    0x10025877
10025875:	mov    esi,eax
10025877:	mov    eax,DWORD PTR [edi+0x74]
1002587a:	cmp    eax,0x1
1002587d:	ja     0x1002588f
1002587f:	call   0x10025780
10025884:	mov    eax,DWORD PTR [edi+0x74]
10025887:	test   eax,eax
10025889:	je     0x1002592d
1002588f:	add    DWORD PTR [edi+0x6c],eax
10025892:	mov    ecx,DWORD PTR [edi+0x5c]
10025895:	mov    edx,DWORD PTR [edi+0x6c]
10025898:	mov    DWORD PTR [edi+0x74],0x0
1002589f:	lea    eax,[ecx+esi*1]
100258a2:	je     0x100258a8
100258a4:	cmp    edx,eax
100258a6:	jb     0x100258e1
100258a8:	sub    edx,eax
100258aa:	test   ecx,ecx
100258ac:	mov    DWORD PTR [edi+0x74],edx
100258af:	mov    DWORD PTR [edi+0x6c],eax
100258b2:	jl     0x100258bb
100258b4:	mov    edx,DWORD PTR [edi+0x38]
100258b7:	add    edx,ecx
100258b9:	jmp    0x100258bd
100258bb:	xor    edx,edx
100258bd:	push   0x0
100258bf:	sub    eax,ecx
100258c1:	push   eax
100258c2:	push   edx
100258c3:	push   edi
100258c4:	call   0x10029170
100258c9:	mov    eax,DWORD PTR [edi+0x6c]
100258cc:	mov    DWORD PTR [edi+0x5c],eax
100258cf:	mov    eax,DWORD PTR [edi]
100258d1:	add    esp,0x10
100258d4:	call   0x10025470
100258d9:	mov    ecx,DWORD PTR [edi]
100258db:	cmp    DWORD PTR [ecx+0x10],0x0
100258df:	je     0x10025928
100258e1:	mov    ecx,DWORD PTR [edi+0x5c]
100258e4:	mov    edx,DWORD PTR [edi+0x6c]
100258e7:	mov    eax,DWORD PTR [edi+0x2c]
100258ea:	sub    edx,ecx
100258ec:	sub    eax,0x106
100258f1:	cmp    edx,eax
100258f3:	jb     0x10025877
100258f5:	test   ecx,ecx
100258f7:	jl     0x10025900
100258f9:	mov    eax,DWORD PTR [edi+0x38]
100258fc:	add    eax,ecx
100258fe:	jmp    0x10025902
10025900:	xor    eax,eax
10025902:	push   0x0
10025904:	push   edx
10025905:	push   eax
10025906:	push   edi
10025907:	call   0x10029170
1002590c:	mov    ecx,DWORD PTR [edi+0x6c]
1002590f:	mov    eax,DWORD PTR [edi]
10025911:	add    esp,0x10
10025914:	mov    DWORD PTR [edi+0x5c],ecx
10025917:	call   0x10025470
1002591c:	mov    edx,DWORD PTR [edi]
1002591e:	cmp    DWORD PTR [edx+0x10],0x0
10025922:	jne    0x10025877
10025928:	pop    edi
10025929:	xor    eax,eax
1002592b:	pop    esi
1002592c:	ret    
1002592d:	mov    esi,DWORD PTR [esp+0x10]
10025931:	test   esi,esi
10025933:	je     0x10025928
10025935:	mov    ecx,DWORD PTR [edi+0x5c]
10025938:	test   ecx,ecx
1002593a:	jl     0x10025943
1002593c:	mov    eax,DWORD PTR [edi+0x38]
1002593f:	add    eax,ecx
10025941:	jmp    0x10025945
10025943:	xor    eax,eax
10025945:	xor    edx,edx
10025947:	cmp    esi,0x4
1002594a:	sete   dl
1002594d:	push   edx
1002594e:	mov    edx,DWORD PTR [edi+0x6c]
10025951:	sub    edx,ecx
10025953:	push   edx
10025954:	push   eax
10025955:	push   edi
10025956:	call   0x10029170
1002595b:	mov    eax,DWORD PTR [edi+0x6c]
1002595e:	mov    DWORD PTR [edi+0x5c],eax
10025961:	mov    eax,DWORD PTR [edi]
10025963:	add    esp,0x10
10025966:	call   0x10025470
1002596b:	mov    ecx,DWORD PTR [edi]
1002596d:	xor    eax,eax
1002596f:	cmp    DWORD PTR [ecx+0x10],eax
10025972:	jne    0x10025983
10025974:	cmp    esi,0x4
10025977:	setne  al
1002597a:	pop    edi
1002597b:	pop    esi
1002597c:	sub    eax,0x1
1002597f:	and    eax,0x2
10025982:	ret    
10025983:	cmp    esi,0x4
10025986:	sete   al
10025989:	pop    edi
1002598a:	pop    esi
1002598b:	lea    eax,[eax+eax*1+0x1]
1002598f:	ret    
10025990:	push   ebx
10025991:	push   ebp
10025992:	push   esi
10025993:	xor    ebp,ebp
10025995:	push   edi
10025996:	mov    edi,DWORD PTR [esp+0x14]
1002599a:	lea    ebx,[ebp+0x1]
1002599d:	lea    ecx,[ecx+0x0]
100259a0:	mov    eax,DWORD PTR [edi+0x74]
100259a3:	cmp    eax,0x106
100259a8:	jae    0x100259cd
100259aa:	call   0x10025780
100259af:	mov    eax,DWORD PTR [edi+0x74]
100259b2:	cmp    eax,0x106
100259b7:	mov    esi,DWORD PTR [esp+0x18]
100259bb:	jae    0x100259c5
100259bd:	test   esi,esi
100259bf:	je     0x10025c44
100259c5:	test   eax,eax
100259c7:	je     0x10025c4b
100259cd:	cmp    eax,0x3
100259d0:	jb     0x10025a1b
100259d2:	mov    eax,DWORD PTR [edi+0x48]
100259d5:	mov    ecx,DWORD PTR [edi+0x58]
100259d8:	mov    edx,DWORD PTR [edi+0x6c]
100259db:	mov    esi,DWORD PTR [edi+0x34]
100259de:	shl    eax,cl
100259e0:	mov    ecx,DWORD PTR [edi+0x38]
100259e3:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
100259e8:	xor    eax,ecx
100259ea:	and    eax,DWORD PTR [edi+0x54]
100259ed:	mov    ecx,DWORD PTR [edi+0x44]
100259f0:	mov    DWORD PTR [edi+0x48],eax
100259f3:	mov    ax,WORD PTR [ecx+eax*2]
100259f7:	and    esi,edx
100259f9:	mov    edx,DWORD PTR [edi+0x40]
100259fc:	mov    WORD PTR [edx+esi*2],ax
10025a00:	mov    ecx,DWORD PTR [edi+0x6c]
10025a03:	and    ecx,DWORD PTR [edi+0x34]
10025a06:	mov    edx,DWORD PTR [edi+0x40]
10025a09:	movzx  ebp,WORD PTR [edx+ecx*2]
10025a0d:	mov    eax,DWORD PTR [edi+0x48]
10025a10:	mov    ecx,DWORD PTR [edi+0x44]
10025a13:	mov    dx,WORD PTR [edi+0x6c]
10025a17:	mov    WORD PTR [ecx+eax*2],dx
10025a1b:	test   ebp,ebp
10025a1d:	je     0x10025a61
10025a1f:	mov    eax,DWORD PTR [edi+0x6c]
10025a22:	mov    ecx,DWORD PTR [edi+0x2c]
10025a25:	sub    eax,ebp
10025a27:	sub    ecx,0x106
10025a2d:	cmp    eax,ecx
10025a2f:	ja     0x10025a61
10025a31:	mov    ecx,DWORD PTR [edi+0x88]
10025a37:	cmp    ecx,0x2
10025a3a:	je     0x10025a4a
10025a3c:	cmp    ecx,0x3
10025a3f:	je     0x10025a4f
10025a41:	mov    eax,ebp
10025a43:	call   0x10025530
10025a48:	jmp    0x10025a5e
10025a4a:	cmp    ecx,0x3
10025a4d:	jne    0x10025a61
10025a4f:	cmp    eax,ebx
10025a51:	jne    0x10025a61
10025a53:	push   ebp
10025a54:	mov    esi,edi
10025a56:	call   0x100256b0
10025a5b:	add    esp,0x4
10025a5e:	mov    DWORD PTR [edi+0x60],eax
10025a61:	cmp    DWORD PTR [edi+0x60],0x3
10025a65:	jb     0x10025ba3
10025a6b:	mov    dx,WORD PTR [edi+0x6c]
10025a6f:	sub    dx,WORD PTR [edi+0x70]
10025a73:	mov    al,BYTE PTR [edi+0x60]
10025a76:	mov    esi,DWORD PTR [edi+0x16a4]
10025a7c:	movzx  ecx,dx
10025a7f:	mov    edx,DWORD PTR [edi+0x16a0]
10025a85:	mov    WORD PTR [esi+edx*2],cx
10025a89:	mov    edx,DWORD PTR [edi+0x1698]
10025a8f:	mov    esi,DWORD PTR [edi+0x16a0]
10025a95:	sub    al,0x3
10025a97:	mov    BYTE PTR [edx+esi*1],al
10025a9a:	add    DWORD PTR [edi+0x16a0],ebx
10025aa0:	movzx  eax,al
10025aa3:	movzx  edx,BYTE PTR [eax+0x10053198]
10025aaa:	add    WORD PTR [edi+edx*4+0x498],bx
10025ab2:	lea    eax,[edi+edx*4+0x498]
10025ab9:	add    ecx,0xffff
10025abf:	cmp    cx,0x100
10025ac4:	jae    0x10025ad2
10025ac6:	movzx  eax,cx
10025ac9:	movzx  eax,BYTE PTR [eax+0x10052f98]
10025ad0:	jmp    0x10025adf
10025ad2:	movzx  ecx,cx
10025ad5:	shr    ecx,0x7
10025ad8:	movzx  eax,BYTE PTR [ecx+0x10053098]
10025adf:	add    WORD PTR [edi+eax*4+0x988],bx
10025ae7:	mov    edx,DWORD PTR [edi+0x169c]
10025aed:	xor    eax,eax
10025aef:	sub    edx,ebx
10025af1:	cmp    DWORD PTR [edi+0x16a0],edx
10025af7:	sete   al
10025afa:	mov    esi,eax
10025afc:	mov    eax,DWORD PTR [edi+0x60]
10025aff:	sub    DWORD PTR [edi+0x74],eax
10025b02:	cmp    eax,DWORD PTR [edi+0x80]
10025b08:	mov    ecx,DWORD PTR [edi+0x74]
10025b0b:	ja     0x10025b77
10025b0d:	cmp    ecx,0x3
10025b10:	jb     0x10025b77
10025b12:	add    eax,0xffffffff
10025b15:	mov    DWORD PTR [edi+0x60],eax
10025b18:	jmp    0x10025b20
10025b1a:	lea    ebx,[ebx+0x0]
10025b20:	add    DWORD PTR [edi+0x6c],ebx
10025b23:	mov    edx,DWORD PTR [edi+0x6c]
10025b26:	mov    ecx,DWORD PTR [edi+0x38]
10025b29:	movzx  eax,BYTE PTR [edx+ecx*1+0x2]
10025b2e:	mov    ebp,DWORD PTR [edi+0x48]
10025b31:	mov    ecx,DWORD PTR [edi+0x58]
10025b34:	shl    ebp,cl
10025b36:	mov    ecx,DWORD PTR [edi+0x44]
10025b39:	xor    eax,ebp
10025b3b:	and    eax,DWORD PTR [edi+0x54]
10025b3e:	mov    ebp,DWORD PTR [edi+0x34]
10025b41:	and    ebp,edx
10025b43:	mov    edx,DWORD PTR [edi+0x40]
10025b46:	mov    DWORD PTR [edi+0x48],eax
10025b49:	mov    ax,WORD PTR [ecx+eax*2]
10025b4d:	mov    WORD PTR [edx+ebp*2],ax
10025b51:	mov    ecx,DWORD PTR [edi+0x6c]
10025b54:	and    ecx,DWORD PTR [edi+0x34]
10025b57:	mov    edx,DWORD PTR [edi+0x40]
10025b5a:	movzx  ebp,WORD PTR [edx+ecx*2]
10025b5e:	mov    eax,DWORD PTR [edi+0x48]
10025b61:	mov    ecx,DWORD PTR [edi+0x44]
10025b64:	mov    dx,WORD PTR [edi+0x6c]
10025b68:	mov    WORD PTR [ecx+eax*2],dx
10025b6c:	add    DWORD PTR [edi+0x60],0xffffffff
10025b70:	jne    0x10025b20
10025b72:	jmp    0x10025bfe
10025b77:	add    DWORD PTR [edi+0x6c],eax
10025b7a:	mov    eax,DWORD PTR [edi+0x6c]
10025b7d:	mov    ecx,DWORD PTR [edi+0x38]
10025b80:	lea    edx,[eax+ecx*1]
10025b83:	mov    ecx,DWORD PTR [edi+0x58]
10025b86:	mov    DWORD PTR [edi+0x60],0x0
10025b8d:	movzx  eax,BYTE PTR [edx]
10025b90:	mov    DWORD PTR [edi+0x48],eax
10025b93:	movzx  edx,BYTE PTR [edx+0x1]
10025b97:	shl    eax,cl
10025b99:	xor    eax,edx
10025b9b:	and    eax,DWORD PTR [edi+0x54]
10025b9e:	mov    DWORD PTR [edi+0x48],eax
10025ba1:	jmp    0x10025c01
10025ba3:	mov    eax,DWORD PTR [edi+0x6c]
10025ba6:	mov    ecx,DWORD PTR [edi+0x38]
10025ba9:	mov    al,BYTE PTR [eax+ecx*1]
10025bac:	mov    edx,DWORD PTR [edi+0x16a0]
10025bb2:	mov    ecx,DWORD PTR [edi+0x16a4]
10025bb8:	mov    WORD PTR [ecx+edx*2],0x0
10025bbe:	mov    ecx,DWORD PTR [edi+0x16a0]
10025bc4:	mov    edx,DWORD PTR [edi+0x1698]
10025bca:	mov    BYTE PTR [edx+ecx*1],al
10025bcd:	add    DWORD PTR [edi+0x16a0],ebx
10025bd3:	movzx  edx,al
10025bd6:	add    WORD PTR [edi+edx*4+0x94],bx
10025bde:	lea    eax,[edi+edx*4+0x94]
10025be5:	mov    eax,DWORD PTR [edi+0x169c]
10025beb:	xor    ecx,ecx
10025bed:	sub    eax,ebx
10025bef:	cmp    DWORD PTR [edi+0x16a0],eax
10025bf5:	sete   cl
10025bf8:	add    DWORD PTR [edi+0x74],0xffffffff
10025bfc:	mov    esi,ecx
10025bfe:	add    DWORD PTR [edi+0x6c],ebx
10025c01:	test   esi,esi
10025c03:	je     0x100259a0
10025c09:	mov    ecx,DWORD PTR [edi+0x5c]
10025c0c:	test   ecx,ecx
10025c0e:	jl     0x10025c17
10025c10:	mov    eax,DWORD PTR [edi+0x38]
10025c13:	add    eax,ecx
10025c15:	jmp    0x10025c19
10025c17:	xor    eax,eax
10025c19:	mov    edx,DWORD PTR [edi+0x6c]
10025c1c:	push   0x0
10025c1e:	sub    edx,ecx
10025c20:	push   edx
10025c21:	push   eax
10025c22:	push   edi
10025c23:	call   0x10029170
10025c28:	mov    eax,DWORD PTR [edi+0x6c]
10025c2b:	mov    DWORD PTR [edi+0x5c],eax
10025c2e:	mov    eax,DWORD PTR [edi]
10025c30:	add    esp,0x10
10025c33:	call   0x10025470
10025c38:	mov    ecx,DWORD PTR [edi]
10025c3a:	cmp    DWORD PTR [ecx+0x10],0x0
10025c3e:	jne    0x100259a0
10025c44:	pop    edi
10025c45:	pop    esi
10025c46:	pop    ebp
10025c47:	xor    eax,eax
10025c49:	pop    ebx
10025c4a:	ret    
10025c4b:	mov    ecx,DWORD PTR [edi+0x5c]
10025c4e:	test   ecx,ecx
10025c50:	jl     0x10025c59
10025c52:	mov    eax,DWORD PTR [edi+0x38]
10025c55:	add    eax,ecx
10025c57:	jmp    0x10025c5b
10025c59:	xor    eax,eax
10025c5b:	xor    edx,edx
10025c5d:	cmp    esi,0x4
10025c60:	sete   dl
10025c63:	push   edx
10025c64:	mov    edx,DWORD PTR [edi+0x6c]
10025c67:	sub    edx,ecx
10025c69:	push   edx
10025c6a:	push   eax
10025c6b:	push   edi
10025c6c:	call   0x10029170
10025c71:	mov    eax,DWORD PTR [edi+0x6c]
10025c74:	mov    DWORD PTR [edi+0x5c],eax
10025c77:	mov    eax,DWORD PTR [edi]
10025c79:	add    esp,0x10
10025c7c:	call   0x10025470
10025c81:	mov    ecx,DWORD PTR [edi]
10025c83:	xor    eax,eax
10025c85:	cmp    DWORD PTR [ecx+0x10],eax
10025c88:	jne    0x10025c9b
10025c8a:	cmp    esi,0x4
10025c8d:	setne  al
10025c90:	pop    edi
10025c91:	pop    esi
10025c92:	pop    ebp
10025c93:	pop    ebx
10025c94:	sub    eax,0x1
10025c97:	and    eax,0x2
10025c9a:	ret    
10025c9b:	cmp    esi,0x4
10025c9e:	sete   al
10025ca1:	pop    edi
10025ca2:	pop    esi
10025ca3:	pop    ebp
10025ca4:	pop    ebx
10025ca5:	lea    eax,[eax+eax*1+0x1]
10025ca9:	ret    
10025caa:	int3   
10025cab:	int3   
10025cac:	int3   
10025cad:	int3   
10025cae:	int3   
10025caf:	int3   
10025cb0:	push   ecx
10025cb1:	push   ebx
10025cb2:	push   ebp
10025cb3:	push   esi
10025cb4:	push   edi
10025cb5:	mov    edi,DWORD PTR [esp+0x18]
10025cb9:	mov    DWORD PTR [esp+0x10],0x0
10025cc1:	mov    ebp,0x1
10025cc6:	mov    eax,DWORD PTR [edi+0x74]
10025cc9:	cmp    eax,0x106
10025cce:	jae    0x10025cf3
10025cd0:	call   0x10025780
10025cd5:	mov    eax,DWORD PTR [edi+0x74]
10025cd8:	cmp    eax,0x106
10025cdd:	mov    esi,DWORD PTR [esp+0x1c]
10025ce1:	jae    0x10025ceb
10025ce3:	test   esi,esi
10025ce5:	je     0x10025f46
10025ceb:	test   eax,eax
10025ced:	je     0x10025ffb
10025cf3:	cmp    eax,0x3
10025cf6:	jb     0x10025d45
10025cf8:	mov    eax,DWORD PTR [edi+0x48]
10025cfb:	mov    ecx,DWORD PTR [edi+0x58]
10025cfe:	mov    edx,DWORD PTR [edi+0x6c]
10025d01:	mov    esi,DWORD PTR [edi+0x34]
10025d04:	shl    eax,cl
10025d06:	mov    ecx,DWORD PTR [edi+0x38]
10025d09:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
10025d0e:	xor    eax,ecx
10025d10:	and    eax,DWORD PTR [edi+0x54]
10025d13:	mov    ecx,DWORD PTR [edi+0x44]
10025d16:	mov    DWORD PTR [edi+0x48],eax
10025d19:	movzx  eax,WORD PTR [ecx+eax*2]
10025d1d:	and    esi,edx
10025d1f:	mov    edx,DWORD PTR [edi+0x40]
10025d22:	mov    WORD PTR [edx+esi*2],ax
10025d26:	mov    ecx,DWORD PTR [edi+0x6c]
10025d29:	and    ecx,DWORD PTR [edi+0x34]
10025d2c:	mov    edx,DWORD PTR [edi+0x40]
10025d2f:	movzx  eax,WORD PTR [edx+ecx*2]
10025d33:	mov    ecx,DWORD PTR [edi+0x48]
10025d36:	mov    edx,DWORD PTR [edi+0x44]
10025d39:	mov    DWORD PTR [esp+0x10],eax
10025d3d:	movzx  eax,WORD PTR [edi+0x6c]
10025d41:	mov    WORD PTR [edx+ecx*2],ax
10025d45:	mov    edx,DWORD PTR [edi+0x70]
10025d48:	mov    ecx,DWORD PTR [edi+0x60]
10025d4b:	mov    DWORD PTR [edi+0x64],edx
10025d4e:	mov    edx,DWORD PTR [esp+0x10]
10025d52:	test   edx,edx
10025d54:	mov    ebx,0x2
10025d59:	mov    DWORD PTR [edi+0x78],ecx
10025d5c:	mov    DWORD PTR [edi+0x60],ebx
10025d5f:	je     0x10025dd2
10025d61:	mov    eax,ecx
10025d63:	cmp    eax,DWORD PTR [edi+0x80]
10025d69:	jae    0x10025dd2
10025d6b:	mov    eax,DWORD PTR [edi+0x6c]
10025d6e:	mov    ecx,DWORD PTR [edi+0x2c]
10025d71:	sub    eax,edx
10025d73:	sub    ecx,0x106
10025d79:	cmp    eax,ecx
10025d7b:	ja     0x10025dd2
10025d7d:	mov    ecx,DWORD PTR [edi+0x88]
10025d83:	cmp    ecx,ebx
10025d85:	je     0x10025d95
10025d87:	cmp    ecx,0x3
10025d8a:	je     0x10025d9a
10025d8c:	mov    eax,edx
10025d8e:	call   0x10025530
10025d93:	jmp    0x10025da9
10025d95:	cmp    ecx,0x3
10025d98:	jne    0x10025dac
10025d9a:	cmp    eax,ebp
10025d9c:	jne    0x10025dac
10025d9e:	push   edx
10025d9f:	mov    esi,edi
10025da1:	call   0x100256b0
10025da6:	add    esp,0x4
10025da9:	mov    DWORD PTR [edi+0x60],eax
10025dac:	mov    eax,DWORD PTR [edi+0x60]
10025daf:	cmp    eax,0x5
10025db2:	ja     0x10025dd2
10025db4:	cmp    DWORD PTR [edi+0x88],ebp
10025dba:	je     0x10025dcf
10025dbc:	cmp    eax,0x3
10025dbf:	jne    0x10025dd2
10025dc1:	mov    edx,DWORD PTR [edi+0x6c]
10025dc4:	sub    edx,DWORD PTR [edi+0x70]
10025dc7:	cmp    edx,0x1000
10025dcd:	jbe    0x10025dd2
10025dcf:	mov    DWORD PTR [edi+0x60],ebx
10025dd2:	mov    eax,DWORD PTR [edi+0x78]
10025dd5:	cmp    eax,0x3
10025dd8:	jb     0x10025f4e
10025dde:	cmp    DWORD PTR [edi+0x60],eax
10025de1:	ja     0x10025f4e
10025de7:	mov    dx,WORD PTR [edi+0x6c]
10025deb:	sub    dx,WORD PTR [edi+0x64]
10025def:	mov    eax,DWORD PTR [edi+0x6c]
10025df2:	mov    ecx,DWORD PTR [edi+0x74]
10025df5:	mov    ebx,DWORD PTR [edi+0x16a4]
10025dfb:	lea    esi,[eax+ecx*1-0x3]
10025dff:	mov    al,BYTE PTR [edi+0x78]
10025e02:	sub    dx,bp
10025e05:	movzx  ecx,dx
10025e08:	mov    edx,DWORD PTR [edi+0x16a0]
10025e0e:	mov    WORD PTR [ebx+edx*2],cx
10025e12:	mov    edx,DWORD PTR [edi+0x1698]
10025e18:	mov    ebx,DWORD PTR [edi+0x16a0]
10025e1e:	sub    al,0x3
10025e20:	mov    BYTE PTR [edx+ebx*1],al
10025e23:	add    DWORD PTR [edi+0x16a0],ebp
10025e29:	movzx  eax,al
10025e2c:	movzx  edx,BYTE PTR [eax+0x10053198]
10025e33:	add    WORD PTR [edi+edx*4+0x498],bp
10025e3b:	lea    eax,[edi+edx*4+0x498]
10025e42:	add    ecx,0xffff
10025e48:	cmp    cx,0x100
10025e4d:	jae    0x10025e5b
10025e4f:	movzx  eax,cx
10025e52:	movzx  eax,BYTE PTR [eax+0x10052f98]
10025e59:	jmp    0x10025e68
10025e5b:	movzx  ecx,cx
10025e5e:	shr    ecx,0x7
10025e61:	movzx  eax,BYTE PTR [ecx+0x10053098]
10025e68:	add    WORD PTR [edi+eax*4+0x988],bp
10025e70:	mov    edx,DWORD PTR [edi+0x169c]
10025e76:	mov    eax,DWORD PTR [edi+0x78]
10025e79:	sub    edx,ebp
10025e7b:	xor    ebx,ebx
10025e7d:	cmp    DWORD PTR [edi+0x16a0],edx
10025e83:	mov    ecx,ebp
10025e85:	sete   bl
10025e88:	sub    ecx,eax
10025e8a:	add    DWORD PTR [edi+0x74],ecx
10025e8d:	add    eax,0xfffffffe
10025e90:	mov    DWORD PTR [edi+0x78],eax
10025e93:	add    DWORD PTR [edi+0x6c],ebp
10025e96:	mov    edx,DWORD PTR [edi+0x6c]
10025e99:	cmp    edx,esi
10025e9b:	ja     0x10025eec
10025e9d:	mov    eax,DWORD PTR [edi+0x48]
10025ea0:	mov    ecx,DWORD PTR [edi+0x58]
10025ea3:	mov    ebp,DWORD PTR [edi+0x34]
10025ea6:	shl    eax,cl
10025ea8:	mov    ecx,DWORD PTR [edi+0x38]
10025eab:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
10025eb0:	xor    eax,ecx
10025eb2:	and    eax,DWORD PTR [edi+0x54]
10025eb5:	mov    ecx,DWORD PTR [edi+0x44]
10025eb8:	mov    DWORD PTR [edi+0x48],eax
10025ebb:	movzx  eax,WORD PTR [ecx+eax*2]
10025ebf:	and    ebp,edx
10025ec1:	mov    edx,DWORD PTR [edi+0x40]
10025ec4:	mov    WORD PTR [edx+ebp*2],ax
10025ec8:	mov    ecx,DWORD PTR [edi+0x6c]
10025ecb:	and    ecx,DWORD PTR [edi+0x34]
10025ece:	mov    edx,DWORD PTR [edi+0x40]
10025ed1:	movzx  eax,WORD PTR [edx+ecx*2]
10025ed5:	mov    ecx,DWORD PTR [edi+0x48]
10025ed8:	mov    edx,DWORD PTR [edi+0x44]
10025edb:	mov    DWORD PTR [esp+0x10],eax
10025edf:	movzx  eax,WORD PTR [edi+0x6c]
10025ee3:	mov    WORD PTR [edx+ecx*2],ax
10025ee7:	mov    ebp,0x1
10025eec:	add    DWORD PTR [edi+0x78],0xffffffff
10025ef0:	jne    0x10025e93
10025ef2:	add    DWORD PTR [edi+0x6c],ebp
10025ef5:	test   ebx,ebx
10025ef7:	mov    eax,DWORD PTR [edi+0x6c]
10025efa:	mov    DWORD PTR [edi+0x68],0x0
10025f01:	mov    DWORD PTR [edi+0x60],0x2
10025f08:	je     0x10025cc6
10025f0e:	mov    edx,DWORD PTR [edi+0x5c]
10025f11:	test   edx,edx
10025f13:	jl     0x10025f1c
10025f15:	mov    ecx,DWORD PTR [edi+0x38]
10025f18:	add    ecx,edx
10025f1a:	jmp    0x10025f1e
10025f1c:	xor    ecx,ecx
10025f1e:	push   0x0
10025f20:	sub    eax,edx
10025f22:	push   eax
10025f23:	push   ecx
10025f24:	push   edi
10025f25:	call   0x10029170
10025f2a:	mov    ecx,DWORD PTR [edi+0x6c]
10025f2d:	mov    eax,DWORD PTR [edi]
10025f2f:	add    esp,0x10
10025f32:	mov    DWORD PTR [edi+0x5c],ecx
10025f35:	call   0x10025470
10025f3a:	mov    edx,DWORD PTR [edi]
10025f3c:	cmp    DWORD PTR [edx+0x10],0x0
10025f40:	jne    0x10025cc6
10025f46:	pop    edi
10025f47:	pop    esi
10025f48:	pop    ebp
10025f49:	xor    eax,eax
10025f4b:	pop    ebx
10025f4c:	pop    ecx
10025f4d:	ret    
10025f4e:	cmp    DWORD PTR [edi+0x68],0x0
10025f52:	je     0x10025fec
10025f58:	mov    eax,DWORD PTR [edi+0x6c]
10025f5b:	mov    ecx,DWORD PTR [edi+0x38]
10025f5e:	mov    al,BYTE PTR [eax+ecx*1-0x1]
10025f62:	mov    edx,DWORD PTR [edi+0x16a0]
10025f68:	mov    ecx,DWORD PTR [edi+0x16a4]
10025f6e:	mov    WORD PTR [ecx+edx*2],0x0
10025f74:	mov    edx,DWORD PTR [edi+0x1698]
10025f7a:	mov    ecx,DWORD PTR [edi+0x16a0]
10025f80:	mov    BYTE PTR [edx+ecx*1],al
10025f83:	add    DWORD PTR [edi+0x16a0],ebp
10025f89:	movzx  edx,al
10025f8c:	add    WORD PTR [edi+edx*4+0x94],bp
10025f94:	lea    eax,[edi+edx*4+0x94]
10025f9b:	mov    eax,DWORD PTR [edi+0x169c]
10025fa1:	sub    eax,ebp
10025fa3:	cmp    DWORD PTR [edi+0x16a0],eax
10025fa9:	jne    0x10025fda
10025fab:	mov    ecx,DWORD PTR [edi+0x5c]
10025fae:	test   ecx,ecx
10025fb0:	jl     0x10025fb9
10025fb2:	mov    eax,DWORD PTR [edi+0x38]
10025fb5:	add    eax,ecx
10025fb7:	jmp    0x10025fbb
10025fb9:	xor    eax,eax
10025fbb:	mov    edx,DWORD PTR [edi+0x6c]
10025fbe:	push   0x0
10025fc0:	sub    edx,ecx
10025fc2:	push   edx
10025fc3:	push   eax
10025fc4:	push   edi
10025fc5:	call   0x10029170
10025fca:	mov    eax,DWORD PTR [edi+0x6c]
10025fcd:	mov    DWORD PTR [edi+0x5c],eax
10025fd0:	mov    eax,DWORD PTR [edi]
10025fd2:	add    esp,0x10
10025fd5:	call   0x10025470
10025fda:	mov    ecx,DWORD PTR [edi]
10025fdc:	add    DWORD PTR [edi+0x6c],ebp
10025fdf:	add    DWORD PTR [edi+0x74],0xffffffff
10025fe3:	cmp    DWORD PTR [ecx+0x10],0x0
10025fe7:	jmp    0x10025f40
10025fec:	add    DWORD PTR [edi+0x6c],ebp
10025fef:	add    DWORD PTR [edi+0x74],0xffffffff
10025ff3:	mov    DWORD PTR [edi+0x68],ebp
10025ff6:	jmp    0x10025cc6
10025ffb:	cmp    DWORD PTR [edi+0x68],0x0
10025fff:	je     0x1002604b
10026001:	mov    edx,DWORD PTR [edi+0x6c]
10026004:	mov    eax,DWORD PTR [edi+0x38]
10026007:	mov    al,BYTE PTR [edx+eax*1-0x1]
1002600b:	mov    ecx,DWORD PTR [edi+0x16a0]
10026011:	mov    edx,DWORD PTR [edi+0x16a4]
10026017:	mov    WORD PTR [edx+ecx*2],0x0
1002601d:	mov    edx,DWORD PTR [edi+0x16a0]
10026023:	mov    ecx,DWORD PTR [edi+0x1698]
10026029:	mov    BYTE PTR [ecx+edx*1],al
1002602c:	add    DWORD PTR [edi+0x16a0],ebp
10026032:	movzx  eax,al
10026035:	add    WORD PTR [edi+eax*4+0x94],bp
1002603d:	lea    eax,[edi+eax*4+0x94]
10026044:	mov    DWORD PTR [edi+0x68],0x0
1002604b:	mov    ecx,DWORD PTR [edi+0x5c]
1002604e:	test   ecx,ecx
10026050:	jl     0x10026059
10026052:	mov    eax,DWORD PTR [edi+0x38]
10026055:	add    eax,ecx
10026057:	jmp    0x1002605b
10026059:	xor    eax,eax
1002605b:	xor    edx,edx
1002605d:	cmp    esi,0x4
10026060:	sete   dl
10026063:	push   edx
10026064:	mov    edx,DWORD PTR [edi+0x6c]
10026067:	sub    edx,ecx
10026069:	push   edx
1002606a:	push   eax
1002606b:	push   edi
1002606c:	call   0x10029170
10026071:	mov    eax,DWORD PTR [edi+0x6c]
10026074:	mov    DWORD PTR [edi+0x5c],eax
10026077:	mov    eax,DWORD PTR [edi]
10026079:	add    esp,0x10
1002607c:	call   0x10025470
10026081:	mov    ecx,DWORD PTR [edi]
10026083:	xor    eax,eax
10026085:	cmp    DWORD PTR [ecx+0x10],eax
10026088:	jne    0x1002609c
1002608a:	cmp    esi,0x4
1002608d:	setne  al
10026090:	pop    edi
10026091:	pop    esi
10026092:	pop    ebp
10026093:	pop    ebx
10026094:	sub    eax,0x1
10026097:	and    eax,0x2
1002609a:	pop    ecx
1002609b:	ret    
1002609c:	cmp    esi,0x4
1002609f:	sete   al
100260a2:	pop    edi
100260a3:	pop    esi
100260a4:	pop    ebp
100260a5:	pop    ebx
100260a6:	lea    eax,[eax+eax*1+0x1]
100260aa:	pop    ecx
100260ab:	ret    
100260ac:	int3   
100260ad:	int3   
100260ae:	int3   
100260af:	int3   
100260b0:	mov    edx,DWORD PTR [esp+0x4]
100260b4:	xor    ecx,ecx
100260b6:	cmp    edx,ecx
100260b8:	je     0x10026107
100260ba:	mov    eax,DWORD PTR [edx+0x1c]
100260bd:	cmp    eax,ecx
100260bf:	je     0x10026107
100260c1:	mov    DWORD PTR [eax+0x1c],ecx
100260c4:	mov    DWORD PTR [edx+0x14],ecx
100260c7:	mov    DWORD PTR [edx+0x8],ecx
100260ca:	mov    DWORD PTR [edx+0x18],ecx
100260cd:	mov    DWORD PTR [edx+0x30],0x1
100260d4:	mov    DWORD PTR [eax],ecx
100260d6:	mov    DWORD PTR [eax+0x4],ecx
100260d9:	mov    DWORD PTR [eax+0xc],ecx
100260dc:	mov    DWORD PTR [eax+0x20],ecx
100260df:	mov    DWORD PTR [eax+0x28],ecx
100260e2:	mov    DWORD PTR [eax+0x2c],ecx
100260e5:	mov    DWORD PTR [eax+0x30],ecx
100260e8:	mov    DWORD PTR [eax+0x38],ecx
100260eb:	mov    DWORD PTR [eax+0x3c],ecx
100260ee:	lea    ecx,[eax+0x530]
100260f4:	mov    DWORD PTR [eax+0x14],0x8000
100260fb:	mov    DWORD PTR [eax+0x6c],ecx
100260fe:	mov    DWORD PTR [eax+0x50],ecx
10026101:	mov    DWORD PTR [eax+0x4c],ecx
10026104:	xor    eax,eax
10026106:	ret    
10026107:	mov    eax,0xfffffffe
1002610c:	ret    
1002610d:	int3   
1002610e:	int3   
1002610f:	int3   
10026110:	mov    eax,DWORD PTR [esp+0xc]
10026114:	push   edi
10026115:	xor    edi,edi
10026117:	cmp    eax,edi
10026119:	je     0x100261d4
1002611f:	cmp    BYTE PTR [eax],0x31
10026122:	jne    0x100261d4
10026128:	cmp    DWORD PTR [esp+0x14],0x38
1002612d:	jne    0x100261d4
10026133:	push   esi
10026134:	mov    esi,DWORD PTR [esp+0xc]
10026138:	cmp    esi,edi
1002613a:	je     0x100261cc
10026140:	cmp    DWORD PTR [esi+0x20],edi
10026143:	mov    DWORD PTR [esi+0x18],edi
10026146:	jne    0x10026152
10026148:	mov    DWORD PTR [esi+0x20],0x10029640
1002614f:	mov    DWORD PTR [esi+0x28],edi
10026152:	cmp    DWORD PTR [esi+0x24],edi
10026155:	jne    0x1002615e
10026157:	mov    DWORD PTR [esi+0x24],0x10029660
1002615e:	mov    eax,DWORD PTR [esi+0x28]
10026161:	mov    ecx,DWORD PTR [esi+0x20]
10026164:	push   0x2530
10026169:	push   0x1
1002616b:	push   eax
1002616c:	call   ecx
1002616e:	add    esp,0xc
10026171:	cmp    eax,edi
10026173:	jne    0x1002617d
10026175:	pop    esi
10026176:	mov    eax,0xfffffffc
1002617b:	pop    edi
1002617c:	ret    
1002617d:	mov    ecx,DWORD PTR [esp+0x10]
10026181:	cmp    ecx,edi
10026183:	mov    DWORD PTR [esi+0x1c],eax
10026186:	jge    0x1002618f
10026188:	mov    DWORD PTR [eax+0x8],edi
1002618b:	neg    ecx
1002618d:	jmp    0x100261a2
1002618f:	mov    edx,ecx
10026191:	sar    edx,0x4
10026194:	add    edx,0x1
10026197:	cmp    ecx,0x30
1002619a:	mov    DWORD PTR [eax+0x8],edx
1002619d:	jge    0x100261a2
1002619f:	and    ecx,0xf
100261a2:	lea    edx,[ecx-0x8]
100261a5:	cmp    edx,0x7
100261a8:	ja     0x100261bc
100261aa:	push   esi
100261ab:	mov    DWORD PTR [eax+0x24],ecx
100261ae:	mov    DWORD PTR [eax+0x34],edi
100261b1:	call   0x100260b0
100261b6:	add    esp,0x4
100261b9:	pop    esi
100261ba:	pop    edi
100261bb:	ret    
100261bc:	mov    ecx,DWORD PTR [esi+0x24]
100261bf:	push   eax
100261c0:	mov    eax,DWORD PTR [esi+0x28]
100261c3:	push   eax
100261c4:	call   ecx
100261c6:	add    esp,0x8
100261c9:	mov    DWORD PTR [esi+0x1c],edi
100261cc:	pop    esi
100261cd:	mov    eax,0xfffffffe
100261d2:	pop    edi
100261d3:	ret    
100261d4:	mov    eax,0xfffffffa
100261d9:	pop    edi
100261da:	ret    
100261db:	int3   
100261dc:	int3   
100261dd:	int3   
100261de:	int3   
100261df:	int3   
100261e0:	mov    DWORD PTR [eax+0x4c],0x10051ee8
100261e7:	mov    DWORD PTR [eax+0x54],0x9
100261ee:	mov    DWORD PTR [eax+0x50],0x100526e8
100261f5:	mov    DWORD PTR [eax+0x58],0x5
100261fc:	ret    
100261fd:	int3   
100261fe:	int3   
100261ff:	int3   
10026200:	push   ebp
10026201:	push   esi
10026202:	mov    esi,DWORD PTR [ebx+0x1c]
10026205:	xor    ebp,ebp
10026207:	cmp    DWORD PTR [esi+0x34],ebp
1002620a:	push   edi
1002620b:	mov    edi,eax
1002620d:	jne    0x10026236
1002620f:	mov    ecx,DWORD PTR [esi+0x24]
10026212:	mov    edx,DWORD PTR [ebx+0x20]
10026215:	mov    eax,0x1
1002621a:	shl    eax,cl
1002621c:	mov    ecx,DWORD PTR [ebx+0x28]
1002621f:	push   0x1
10026221:	push   eax
10026222:	push   ecx
10026223:	call   edx
10026225:	add    esp,0xc
10026228:	cmp    eax,ebp
1002622a:	mov    DWORD PTR [esi+0x34],eax
1002622d:	jne    0x10026236
1002622f:	pop    edi
10026230:	pop    esi
10026231:	lea    eax,[ebp+0x1]
10026234:	pop    ebp
10026235:	ret    
10026236:	cmp    DWORD PTR [esi+0x28],ebp
10026239:	jne    0x1002624e
1002623b:	mov    ecx,DWORD PTR [esi+0x24]
1002623e:	mov    eax,0x1
10026243:	shl    eax,cl
10026245:	mov    DWORD PTR [esi+0x30],ebp
10026248:	mov    DWORD PTR [esi+0x2c],ebp
1002624b:	mov    DWORD PTR [esi+0x28],eax
1002624e:	sub    edi,DWORD PTR [ebx+0x10]
10026251:	mov    eax,DWORD PTR [esi+0x28]
10026254:	cmp    edi,eax
10026256:	jb     0x1002627a
10026258:	mov    ecx,DWORD PTR [ebx+0xc]
1002625b:	mov    edx,DWORD PTR [esi+0x34]
1002625e:	push   eax
1002625f:	sub    ecx,eax
10026261:	push   ecx
10026262:	push   edx
10026263:	call   0x100167d0
10026268:	mov    eax,DWORD PTR [esi+0x28]
1002626b:	add    esp,0xc
1002626e:	pop    edi
1002626f:	mov    DWORD PTR [esi+0x30],ebp
10026272:	mov    DWORD PTR [esi+0x2c],eax
10026275:	pop    esi
10026276:	xor    eax,eax
10026278:	pop    ebp
10026279:	ret    
1002627a:	sub    eax,DWORD PTR [esi+0x30]
1002627d:	mov    ebp,eax
1002627f:	cmp    ebp,edi
10026281:	jbe    0x10026285
10026283:	mov    ebp,edi
10026285:	mov    ecx,DWORD PTR [ebx+0xc]
10026288:	mov    edx,DWORD PTR [esi+0x34]
1002628b:	add    edx,DWORD PTR [esi+0x30]
1002628e:	push   ebp
1002628f:	sub    ecx,edi
10026291:	push   ecx
10026292:	push   edx
10026293:	call   0x100167d0
10026298:	add    esp,0xc
1002629b:	sub    edi,ebp
1002629d:	je     0x100262c1
1002629f:	mov    eax,DWORD PTR [ebx+0xc]
100262a2:	mov    ecx,DWORD PTR [esi+0x34]
100262a5:	push   edi
100262a6:	sub    eax,edi
100262a8:	push   eax
100262a9:	push   ecx
100262aa:	call   0x100167d0
100262af:	mov    edx,DWORD PTR [esi+0x28]
100262b2:	add    esp,0xc
100262b5:	mov    DWORD PTR [esi+0x30],edi
100262b8:	pop    edi
100262b9:	mov    DWORD PTR [esi+0x2c],edx
100262bc:	pop    esi
100262bd:	xor    eax,eax
100262bf:	pop    ebp
100262c0:	ret    
100262c1:	add    DWORD PTR [esi+0x30],ebp
100262c4:	mov    ecx,DWORD PTR [esi+0x30]
100262c7:	mov    eax,DWORD PTR [esi+0x28]
100262ca:	cmp    ecx,eax
100262cc:	jne    0x100262d5
100262ce:	mov    DWORD PTR [esi+0x30],0x0
100262d5:	mov    ecx,DWORD PTR [esi+0x2c]
100262d8:	cmp    ecx,eax
100262da:	jae    0x100262e1
100262dc:	add    ecx,ebp
100262de:	mov    DWORD PTR [esi+0x2c],ecx
100262e1:	pop    edi
100262e2:	pop    esi
100262e3:	xor    eax,eax
100262e5:	pop    ebp
100262e6:	ret    
100262e7:	int3   
100262e8:	int3   
100262e9:	int3   
100262ea:	int3   
100262eb:	int3   
100262ec:	int3   
100262ed:	int3   
100262ee:	int3   
100262ef:	int3   
100262f0:	mov    eax,DWORD PTR [esp+0x4]
100262f4:	sub    esp,0x2c
100262f7:	test   eax,eax
100262f9:	push   edi
100262fa:	je     0x1002784c
10026300:	mov    edi,DWORD PTR [eax+0x1c]
10026303:	test   edi,edi
10026305:	je     0x1002784c
1002630b:	cmp    DWORD PTR [eax+0xc],0x0
1002630f:	je     0x1002784c
10026315:	cmp    DWORD PTR [eax],0x0
10026318:	jne    0x10026324
1002631a:	cmp    DWORD PTR [eax+0x4],0x0
1002631e:	jne    0x1002784c
10026324:	cmp    DWORD PTR [edi],0xb
10026327:	jne    0x1002632f
10026329:	mov    DWORD PTR [edi],0xc
1002632f:	mov    ecx,DWORD PTR [eax+0xc]
10026332:	mov    edx,DWORD PTR [eax+0x4]
10026335:	push   ebx
10026336:	mov    ebx,DWORD PTR [edi+0x38]
10026339:	push   ebp
1002633a:	mov    ebp,DWORD PTR [eax]
1002633c:	mov    DWORD PTR [esp+0x24],ecx
10026340:	mov    ecx,DWORD PTR [eax+0x10]
10026343:	mov    eax,DWORD PTR [edi]
10026345:	cmp    eax,0x1c
10026348:	push   esi
10026349:	mov    esi,DWORD PTR [edi+0x3c]
1002634c:	mov    DWORD PTR [esp+0x1c],ecx
10026350:	mov    DWORD PTR [esp+0x10],edx
10026354:	mov    DWORD PTR [esp+0x18],ebx
10026358:	mov    DWORD PTR [esp+0x38],edx
1002635c:	mov    DWORD PTR [esp+0x2c],ecx
10026360:	mov    DWORD PTR [esp+0x30],0x0
10026368:	ja     0x100276f9
1002636e:	mov    edi,edi
10026370:	jmp    DWORD PTR [eax*4+0x10027858]
10026377:	cmp    DWORD PTR [edi+0x8],0x0
1002637b:	jne    0x10026388
1002637d:	mov    DWORD PTR [edi],0xc
10026383:	jmp    0x100276ee
10026388:	cmp    esi,0x10
1002638b:	jae    0x100263b8
1002638d:	lea    ecx,[ecx+0x0]
10026390:	test   edx,edx
10026392:	je     0x1002774c
10026398:	movzx  eax,BYTE PTR [ebp+0x0]
1002639c:	mov    ecx,esi
1002639e:	shl    eax,cl
100263a0:	sub    edx,0x1
100263a3:	add    esi,0x8
100263a6:	add    ebp,0x1
100263a9:	add    ebx,eax
100263ab:	cmp    esi,0x10
100263ae:	mov    DWORD PTR [esp+0x10],edx
100263b2:	mov    DWORD PTR [esp+0x18],ebx
100263b6:	jb     0x10026390
100263b8:	test   BYTE PTR [edi+0x8],0x2
100263bc:	je     0x1002640b
100263be:	cmp    ebx,0x8b1f
100263c4:	jne    0x1002640b
100263c6:	push   0x0
100263c8:	push   0x0
100263ca:	push   0x0
100263cc:	call   0x10029620
100263d1:	mov    DWORD PTR [edi+0x18],eax
100263d4:	push   0x2
100263d6:	lea    ecx,[esp+0x30]
100263da:	mov    BYTE PTR [esp+0x30],0x1f
100263df:	mov    BYTE PTR [esp+0x31],0x8b
100263e4:	mov    edx,DWORD PTR [edi+0x18]
100263e7:	push   ecx
100263e8:	push   edx
100263e9:	call   0x10029620
100263ee:	mov    edx,DWORD PTR [esp+0x28]
100263f2:	xor    ebx,ebx
100263f4:	add    esp,0x18
100263f7:	mov    DWORD PTR [edi+0x18],eax
100263fa:	mov    DWORD PTR [esp+0x18],ebx
100263fe:	xor    esi,esi
10026400:	mov    DWORD PTR [edi],0x1
10026406:	jmp    0x100276ee
1002640b:	mov    eax,DWORD PTR [edi+0x20]
1002640e:	test   eax,eax
10026410:	mov    DWORD PTR [edi+0x10],0x0
10026417:	je     0x10026420
10026419:	mov    DWORD PTR [eax+0x30],0xffffffff
10026420:	test   BYTE PTR [edi+0x8],0x1
10026424:	je     0x100264d1
1002642a:	movzx  eax,bl
1002642d:	shl    eax,0x8
10026430:	mov    ecx,ebx
10026432:	shr    ecx,0x8
10026435:	add    eax,ecx
10026437:	xor    edx,edx
10026439:	mov    ecx,0x1f
1002643e:	div    ecx
10026440:	test   edx,edx
10026442:	jne    0x100264d1
10026448:	mov    edx,ebx
1002644a:	and    dl,0xf
1002644d:	cmp    dl,0x8
10026450:	je     0x10026466
10026452:	mov    eax,DWORD PTR [esp+0x40]
10026456:	mov    edx,DWORD PTR [esp+0x10]
1002645a:	mov    DWORD PTR [eax+0x18],0x10052934
10026461:	jmp    0x100276e8
10026466:	shr    ebx,0x4
10026469:	mov    ecx,ebx
1002646b:	and    ecx,0xf
1002646e:	add    ecx,0x8
10026471:	sub    esi,0x4
10026474:	cmp    ecx,DWORD PTR [edi+0x24]
10026477:	mov    DWORD PTR [esp+0x18],ebx
1002647b:	jbe    0x10026491
1002647d:	mov    ecx,DWORD PTR [esp+0x40]
10026481:	mov    edx,DWORD PTR [esp+0x10]
10026485:	mov    DWORD PTR [ecx+0x18],0x10052920
1002648c:	jmp    0x100276e8
10026491:	mov    edx,0x1
10026496:	shl    edx,cl
10026498:	push   0x0
1002649a:	push   0x0
1002649c:	push   0x0
1002649e:	mov    DWORD PTR [edi+0x14],edx
100264a1:	call   0x10027930
100264a6:	mov    ecx,DWORD PTR [esp+0x4c]
100264aa:	mov    edx,DWORD PTR [esp+0x1c]
100264ae:	shr    ebx,0x8
100264b1:	not    ebx
100264b3:	and    ebx,0x2
100264b6:	or     ebx,0x9
100264b9:	mov    DWORD PTR [edi+0x18],eax
100264bc:	mov    DWORD PTR [ecx+0x30],eax
100264bf:	mov    DWORD PTR [edi],ebx
100264c1:	xor    ebx,ebx
100264c3:	add    esp,0xc
100264c6:	mov    DWORD PTR [esp+0x18],ebx
100264ca:	xor    esi,esi
100264cc:	jmp    0x100276ee
100264d1:	mov    edx,DWORD PTR [esp+0x40]
100264d5:	mov    DWORD PTR [edx+0x18],0x10052908
100264dc:	mov    edx,DWORD PTR [esp+0x10]
100264e0:	jmp    0x100276e8
100264e5:	cmp    esi,0x10
100264e8:	jae    0x10026518
100264ea:	lea    ebx,[ebx+0x0]
100264f0:	test   edx,edx
100264f2:	je     0x1002774c
100264f8:	movzx  eax,BYTE PTR [ebp+0x0]
100264fc:	mov    ecx,esi
100264fe:	shl    eax,cl
10026500:	sub    edx,0x1
10026503:	add    esi,0x8
10026506:	add    ebp,0x1
10026509:	add    ebx,eax
1002650b:	cmp    esi,0x10
1002650e:	mov    DWORD PTR [esp+0x10],edx
10026512:	mov    DWORD PTR [esp+0x18],ebx
10026516:	jb     0x100264f0
10026518:	cmp    bl,0x8
1002651b:	mov    DWORD PTR [edi+0x10],ebx
1002651e:	je     0x10026530
10026520:	mov    ecx,DWORD PTR [esp+0x40]
10026524:	mov    DWORD PTR [ecx+0x18],0x10052934
1002652b:	jmp    0x100276e8
10026530:	test   ebx,0xe000
10026536:	je     0x10026548
10026538:	mov    eax,DWORD PTR [esp+0x40]
1002653c:	mov    DWORD PTR [eax+0x18],0x100528ec
10026543:	jmp    0x100276e8
10026548:	mov    eax,DWORD PTR [edi+0x20]
1002654b:	test   eax,eax
1002654d:	je     0x10026559
1002654f:	mov    ecx,ebx
10026551:	shr    ecx,0x8
10026554:	and    ecx,0x1
10026557:	mov    DWORD PTR [eax],ecx
10026559:	test   DWORD PTR [edi+0x10],0x200
10026560:	je     0x10026587
10026562:	mov    BYTE PTR [esp+0x20],bl
10026566:	shr    ebx,0x8
10026569:	push   0x2
1002656b:	lea    edx,[esp+0x24]
1002656f:	mov    BYTE PTR [esp+0x25],bl
10026573:	mov    eax,DWORD PTR [edi+0x18]
10026576:	push   edx
10026577:	push   eax
10026578:	call   0x10029620
1002657d:	mov    edx,DWORD PTR [esp+0x1c]
10026581:	add    esp,0xc
10026584:	mov    DWORD PTR [edi+0x18],eax
10026587:	xor    ebx,ebx
10026589:	xor    esi,esi
1002658b:	mov    DWORD PTR [edi],0x2
10026591:	jmp    0x10026598
10026593:	cmp    esi,0x20
10026596:	jae    0x100265bc
10026598:	test   edx,edx
1002659a:	je     0x1002774c
100265a0:	movzx  eax,BYTE PTR [ebp+0x0]
100265a4:	mov    ecx,esi
100265a6:	shl    eax,cl
100265a8:	sub    edx,0x1
100265ab:	add    esi,0x8
100265ae:	add    ebp,0x1
100265b1:	add    ebx,eax
100265b3:	cmp    esi,0x20
100265b6:	mov    DWORD PTR [esp+0x10],edx
100265ba:	jb     0x10026598
100265bc:	mov    eax,DWORD PTR [edi+0x20]
100265bf:	test   eax,eax
100265c1:	je     0x100265c6
100265c3:	mov    DWORD PTR [eax+0x4],ebx
100265c6:	test   DWORD PTR [edi+0x10],0x200
100265cd:	je     0x10026606
100265cf:	mov    BYTE PTR [esp+0x20],bl
100265d3:	mov    ecx,ebx
100265d5:	mov    edx,ebx
100265d7:	shr    ecx,0x8
100265da:	shr    edx,0x10
100265dd:	shr    ebx,0x18
100265e0:	push   0x4
100265e2:	lea    eax,[esp+0x24]
100265e6:	mov    BYTE PTR [esp+0x25],cl
100265ea:	mov    BYTE PTR [esp+0x26],dl
100265ee:	mov    BYTE PTR [esp+0x27],bl
100265f2:	mov    ecx,DWORD PTR [edi+0x18]
100265f5:	push   eax
100265f6:	push   ecx
100265f7:	call   0x10029620
100265fc:	mov    edx,DWORD PTR [esp+0x1c]
10026600:	add    esp,0xc
10026603:	mov    DWORD PTR [edi+0x18],eax
10026606:	xor    ebx,ebx
10026608:	xor    esi,esi
1002660a:	mov    DWORD PTR [edi],0x3
10026610:	jmp    0x10026617
10026612:	cmp    esi,0x10
10026615:	jae    0x1002663b
10026617:	test   edx,edx
10026619:	je     0x1002774c
1002661f:	movzx  eax,BYTE PTR [ebp+0x0]
10026623:	mov    ecx,esi
10026625:	shl    eax,cl
10026627:	sub    edx,0x1
1002662a:	add    esi,0x8
1002662d:	add    ebp,0x1
10026630:	add    ebx,eax
10026632:	cmp    esi,0x10
10026635:	mov    DWORD PTR [esp+0x10],edx
10026639:	jb     0x10026617
1002663b:	mov    eax,DWORD PTR [edi+0x20]
1002663e:	test   eax,eax
10026640:	je     0x10026658
10026642:	mov    ecx,ebx
10026644:	and    ecx,0xff
1002664a:	mov    DWORD PTR [eax+0x8],ecx
1002664d:	mov    ecx,DWORD PTR [edi+0x20]
10026650:	mov    eax,ebx
10026652:	shr    eax,0x8
10026655:	mov    DWORD PTR [ecx+0xc],eax
10026658:	test   DWORD PTR [edi+0x10],0x200
1002665f:	je     0x10026686
10026661:	mov    BYTE PTR [esp+0x20],bl
10026665:	shr    ebx,0x8
10026668:	push   0x2
1002666a:	lea    edx,[esp+0x24]
1002666e:	mov    BYTE PTR [esp+0x25],bl
10026672:	mov    eax,DWORD PTR [edi+0x18]
10026675:	push   edx
10026676:	push   eax
10026677:	call   0x10029620
1002667c:	mov    edx,DWORD PTR [esp+0x1c]
10026680:	add    esp,0xc
10026683:	mov    DWORD PTR [edi+0x18],eax
10026686:	xor    ebx,ebx
10026688:	mov    DWORD PTR [esp+0x18],ebx
1002668c:	xor    esi,esi
1002668e:	mov    DWORD PTR [edi],0x4
10026694:	test   DWORD PTR [edi+0x10],0x400
1002669b:	je     0x1002670b
1002669d:	cmp    esi,0x10
100266a0:	jae    0x100266c6
100266a2:	test   edx,edx
100266a4:	je     0x1002774c
100266aa:	movzx  eax,BYTE PTR [ebp+0x0]
100266ae:	mov    ecx,esi
100266b0:	shl    eax,cl
100266b2:	sub    edx,0x1
100266b5:	add    esi,0x8
100266b8:	add    ebp,0x1
100266bb:	add    ebx,eax
100266bd:	cmp    esi,0x10
100266c0:	mov    DWORD PTR [esp+0x10],edx
100266c4:	jb     0x100266a2
100266c6:	mov    eax,DWORD PTR [edi+0x20]
100266c9:	test   eax,eax
100266cb:	mov    DWORD PTR [edi+0x40],ebx
100266ce:	je     0x100266d3
100266d0:	mov    DWORD PTR [eax+0x14],ebx
100266d3:	test   DWORD PTR [edi+0x10],0x200
100266da:	je     0x10026701
100266dc:	mov    BYTE PTR [esp+0x20],bl
100266e0:	shr    ebx,0x8
100266e3:	push   0x2
100266e5:	lea    ecx,[esp+0x24]
100266e9:	mov    BYTE PTR [esp+0x25],bl
100266ed:	mov    edx,DWORD PTR [edi+0x18]
100266f0:	push   ecx
100266f1:	push   edx
100266f2:	call   0x10029620
100266f7:	mov    edx,DWORD PTR [esp+0x1c]
100266fb:	add    esp,0xc
100266fe:	mov    DWORD PTR [edi+0x18],eax
10026701:	xor    ebx,ebx
10026703:	mov    DWORD PTR [esp+0x18],ebx
10026707:	xor    esi,esi
10026709:	jmp    0x10026719
1002670b:	mov    eax,DWORD PTR [edi+0x20]
1002670e:	test   eax,eax
10026710:	je     0x10026719
10026712:	mov    DWORD PTR [eax+0x10],0x0
10026719:	mov    DWORD PTR [edi],0x5
1002671f:	test   DWORD PTR [edi+0x10],0x400
10026726:	je     0x100267ce
1002672c:	mov    eax,DWORD PTR [edi+0x40]
1002672f:	cmp    eax,edx
10026731:	mov    DWORD PTR [esp+0x14],eax
10026735:	jbe    0x1002673d
10026737:	mov    eax,edx
10026739:	mov    DWORD PTR [esp+0x14],edx
1002673d:	test   eax,eax
1002673f:	je     0x100267c4
10026745:	mov    ecx,DWORD PTR [edi+0x20]
10026748:	test   ecx,ecx
1002674a:	je     0x10026793
1002674c:	mov    ecx,DWORD PTR [ecx+0x10]
1002674f:	test   ecx,ecx
10026751:	mov    DWORD PTR [esp+0x34],ecx
10026755:	je     0x10026793
10026757:	mov    ecx,DWORD PTR [edi+0x20]
1002675a:	mov    ecx,DWORD PTR [ecx+0x14]
1002675d:	sub    ecx,DWORD PTR [edi+0x40]
10026760:	mov    edx,DWORD PTR [edi+0x20]
10026763:	mov    edx,DWORD PTR [edx+0x18]
10026766:	mov    DWORD PTR [esp+0x24],ecx
1002676a:	add    ecx,eax
1002676c:	cmp    ecx,edx
1002676e:	jbe    0x10026776
10026770:	sub    edx,DWORD PTR [esp+0x24]
10026774:	mov    eax,edx
10026776:	mov    edx,DWORD PTR [esp+0x34]
1002677a:	push   eax
1002677b:	mov    eax,DWORD PTR [esp+0x28]
1002677f:	add    edx,eax
10026781:	push   ebp
10026782:	push   edx
10026783:	call   0x100167d0
10026788:	mov    eax,DWORD PTR [esp+0x20]
1002678c:	mov    edx,DWORD PTR [esp+0x1c]
10026790:	add    esp,0xc
10026793:	test   DWORD PTR [edi+0x10],0x200
1002679a:	je     0x100267b9
1002679c:	mov    ecx,DWORD PTR [esp+0x14]
100267a0:	mov    edx,DWORD PTR [edi+0x18]
100267a3:	push   ecx
100267a4:	push   ebp
100267a5:	push   edx
100267a6:	call   0x10029620
100267ab:	mov    edx,DWORD PTR [esp+0x1c]
100267af:	mov    DWORD PTR [edi+0x18],eax
100267b2:	mov    eax,DWORD PTR [esp+0x20]
100267b6:	add    esp,0xc
100267b9:	sub    edx,eax
100267bb:	add    ebp,eax
100267bd:	sub    DWORD PTR [edi+0x40],eax
100267c0:	mov    DWORD PTR [esp+0x10],edx
100267c4:	cmp    DWORD PTR [edi+0x40],0x0
100267c8:	jne    0x1002774c
100267ce:	mov    DWORD PTR [edi+0x40],0x0
100267d5:	mov    DWORD PTR [edi],0x6
100267db:	test   DWORD PTR [edi+0x10],0x800
100267e2:	je     0x10026878
100267e8:	test   edx,edx
100267ea:	je     0x1002774c
100267f0:	xor    eax,eax
100267f2:	movzx  ecx,BYTE PTR [eax+ebp*1]
100267f6:	add    eax,0x1
100267f9:	mov    DWORD PTR [esp+0x14],eax
100267fd:	mov    eax,DWORD PTR [edi+0x20]
10026800:	test   eax,eax
10026802:	mov    DWORD PTR [esp+0x24],ecx
10026806:	je     0x1002682e
10026808:	mov    ecx,DWORD PTR [eax+0x1c]
1002680b:	test   ecx,ecx
1002680d:	mov    DWORD PTR [esp+0x34],ecx
10026811:	je     0x1002682e
10026813:	mov    ecx,DWORD PTR [edi+0x40]
10026816:	cmp    ecx,DWORD PTR [eax+0x20]
10026819:	jae    0x1002682e
1002681b:	mov    edx,DWORD PTR [esp+0x34]
1002681f:	mov    al,BYTE PTR [esp+0x24]
10026823:	mov    BYTE PTR [edx+ecx*1],al
10026826:	add    DWORD PTR [edi+0x40],0x1
1002682a:	mov    edx,DWORD PTR [esp+0x10]
1002682e:	cmp    DWORD PTR [esp+0x24],0x0
10026833:	je     0x1002683d
10026835:	mov    eax,DWORD PTR [esp+0x14]
10026839:	cmp    eax,edx
1002683b:	jb     0x100267f2
1002683d:	test   DWORD PTR [edi+0x10],0x200
10026844:	je     0x1002685f
10026846:	mov    ecx,DWORD PTR [esp+0x14]
1002684a:	mov    edx,DWORD PTR [edi+0x18]
1002684d:	push   ecx
1002684e:	push   ebp
1002684f:	push   edx
10026850:	call   0x10029620
10026855:	mov    edx,DWORD PTR [esp+0x1c]
10026859:	add    esp,0xc
1002685c:	mov    DWORD PTR [edi+0x18],eax
1002685f:	mov    eax,DWORD PTR [esp+0x14]
10026863:	sub    edx,eax
10026865:	add    ebp,eax
10026867:	cmp    DWORD PTR [esp+0x24],0x0
1002686c:	mov    DWORD PTR [esp+0x10],edx
10026870:	jne    0x1002774c
10026876:	jmp    0x10026886
10026878:	mov    eax,DWORD PTR [edi+0x20]
1002687b:	test   eax,eax
1002687d:	je     0x10026886
1002687f:	mov    DWORD PTR [eax+0x1c],0x0
10026886:	mov    DWORD PTR [edi+0x40],0x0
1002688d:	mov    DWORD PTR [edi],0x7
10026893:	test   DWORD PTR [edi+0x10],0x1000
1002689a:	je     0x10026936
100268a0:	test   edx,edx
100268a2:	je     0x1002774c
100268a8:	xor    eax,eax
100268aa:	lea    ebx,[ebx+0x0]
100268b0:	movzx  ecx,BYTE PTR [eax+ebp*1]
100268b4:	add    eax,0x1
100268b7:	mov    DWORD PTR [esp+0x14],eax
100268bb:	mov    eax,DWORD PTR [edi+0x20]
100268be:	test   eax,eax
100268c0:	mov    DWORD PTR [esp+0x24],ecx
100268c4:	je     0x100268ec
100268c6:	mov    ecx,DWORD PTR [eax+0x24]
100268c9:	test   ecx,ecx
100268cb:	mov    DWORD PTR [esp+0x34],ecx
100268cf:	je     0x100268ec
100268d1:	mov    ecx,DWORD PTR [edi+0x40]
100268d4:	cmp    ecx,DWORD PTR [eax+0x28]
100268d7:	jae    0x100268ec
100268d9:	mov    edx,DWORD PTR [esp+0x34]
100268dd:	mov    al,BYTE PTR [esp+0x24]
100268e1:	mov    BYTE PTR [edx+ecx*1],al
100268e4:	add    DWORD PTR [edi+0x40],0x1
100268e8:	mov    edx,DWORD PTR [esp+0x10]
100268ec:	cmp    DWORD PTR [esp+0x24],0x0
100268f1:	je     0x100268fb
100268f3:	mov    eax,DWORD PTR [esp+0x14]
100268f7:	cmp    eax,edx
100268f9:	jb     0x100268b0
100268fb:	test   DWORD PTR [edi+0x10],0x200
10026902:	je     0x1002691d
10026904:	mov    ecx,DWORD PTR [esp+0x14]
10026908:	mov    edx,DWORD PTR [edi+0x18]
1002690b:	push   ecx
1002690c:	push   ebp
1002690d:	push   edx
1002690e:	call   0x10029620
10026913:	mov    edx,DWORD PTR [esp+0x1c]
10026917:	add    esp,0xc
1002691a:	mov    DWORD PTR [edi+0x18],eax
1002691d:	mov    eax,DWORD PTR [esp+0x14]
10026921:	sub    edx,eax
10026923:	add    ebp,eax
10026925:	cmp    DWORD PTR [esp+0x24],0x0
1002692a:	mov    DWORD PTR [esp+0x10],edx
1002692e:	jne    0x1002774c
10026934:	jmp    0x10026944
10026936:	mov    eax,DWORD PTR [edi+0x20]
10026939:	test   eax,eax
1002693b:	je     0x10026944
1002693d:	mov    DWORD PTR [eax+0x24],0x0
10026944:	mov    DWORD PTR [edi],0x8
1002694a:	test   DWORD PTR [edi+0x10],0x200
10026951:	je     0x100269a0
10026953:	cmp    esi,0x10
10026956:	jae    0x10026980
10026958:	test   edx,edx
1002695a:	je     0x1002774c
10026960:	movzx  eax,BYTE PTR [ebp+0x0]
10026964:	mov    ecx,esi
10026966:	shl    eax,cl
10026968:	sub    edx,0x1
1002696b:	add    esi,0x8
1002696e:	add    ebp,0x1
10026971:	add    ebx,eax
10026973:	cmp    esi,0x10
10026976:	mov    DWORD PTR [esp+0x10],edx
1002697a:	mov    DWORD PTR [esp+0x18],ebx
1002697e:	jb     0x10026958
10026980:	movzx  ecx,WORD PTR [edi+0x18]
10026984:	cmp    ebx,ecx
10026986:	je     0x10026998
10026988:	mov    eax,DWORD PTR [esp+0x40]
1002698c:	mov    DWORD PTR [eax+0x18],0x100528d8
10026993:	jmp    0x100276e8
10026998:	xor    ebx,ebx
1002699a:	mov    DWORD PTR [esp+0x18],ebx
1002699e:	xor    esi,esi
100269a0:	mov    eax,DWORD PTR [edi+0x20]
100269a3:	test   eax,eax
100269a5:	je     0x100269bd
100269a7:	mov    ecx,DWORD PTR [edi+0x10]
100269aa:	sar    ecx,0x9
100269ad:	and    ecx,0x1
100269b0:	mov    DWORD PTR [eax+0x2c],ecx
100269b3:	mov    edx,DWORD PTR [edi+0x20]
100269b6:	mov    DWORD PTR [edx+0x30],0x1
100269bd:	push   0x0
100269bf:	push   0x0
100269c1:	push   0x0
100269c3:	call   0x10029620
100269c8:	mov    ecx,DWORD PTR [esp+0x4c]
100269cc:	mov    edx,DWORD PTR [esp+0x1c]
100269d0:	mov    DWORD PTR [edi+0x18],eax
100269d3:	mov    DWORD PTR [ecx+0x30],eax
100269d6:	add    esp,0xc
100269d9:	mov    DWORD PTR [edi],0xb
100269df:	jmp    0x100276ee
100269e4:	cmp    esi,0x20
100269e7:	jae    0x10026a18
100269e9:	lea    esp,[esp+0x0]
100269f0:	test   edx,edx
100269f2:	je     0x1002774c
100269f8:	movzx  eax,BYTE PTR [ebp+0x0]
100269fc:	mov    ecx,esi
100269fe:	shl    eax,cl
10026a00:	sub    edx,0x1
10026a03:	add    esi,0x8
10026a06:	add    ebp,0x1
10026a09:	add    ebx,eax
10026a0b:	cmp    esi,0x20
10026a0e:	mov    DWORD PTR [esp+0x10],edx
10026a12:	mov    DWORD PTR [esp+0x18],ebx
10026a16:	jb     0x100269f0
10026a18:	mov    ecx,ebx
10026a1a:	and    ecx,0xff00
10026a20:	mov    eax,ebx
10026a22:	shl    eax,0x10
10026a25:	add    ecx,eax
10026a27:	xor    eax,eax
10026a29:	mov    ah,BYTE PTR [esp+0x1a]
10026a2d:	shl    ecx,0x8
10026a30:	shr    ebx,0x18
10026a33:	add    ecx,eax
10026a35:	lea    eax,[ecx+ebx*1]
10026a38:	mov    ecx,DWORD PTR [esp+0x40]
10026a3c:	mov    DWORD PTR [edi+0x18],eax
10026a3f:	mov    DWORD PTR [ecx+0x30],eax
10026a42:	xor    ebx,ebx
10026a44:	xor    esi,esi
10026a46:	mov    DWORD PTR [edi],0xa
10026a4c:	cmp    DWORD PTR [edi+0xc],0x0
10026a50:	je     0x10027706
10026a56:	push   0x0
10026a58:	push   0x0
10026a5a:	push   0x0
10026a5c:	call   0x10027930
10026a61:	mov    edx,DWORD PTR [esp+0x4c]
10026a65:	mov    DWORD PTR [edi+0x18],eax
10026a68:	mov    DWORD PTR [edx+0x30],eax
10026a6b:	mov    edx,DWORD PTR [esp+0x1c]
10026a6f:	add    esp,0xc
10026a72:	mov    DWORD PTR [edi],0xb
10026a78:	cmp    DWORD PTR [esp+0x44],0x5
10026a7d:	je     0x1002774c
10026a83:	cmp    DWORD PTR [edi+0x4],0x0
10026a87:	je     0x10026aa1
10026a89:	mov    ecx,esi
10026a8b:	and    ecx,0x7
10026a8e:	shr    ebx,cl
10026a90:	sub    esi,ecx
10026a92:	mov    DWORD PTR [edi],0x18
10026a98:	mov    DWORD PTR [esp+0x18],ebx
10026a9c:	jmp    0x100276ee
10026aa1:	cmp    esi,0x3
10026aa4:	jae    0x10026aca
10026aa6:	test   edx,edx
10026aa8:	je     0x1002774c
10026aae:	movzx  eax,BYTE PTR [ebp+0x0]
10026ab2:	mov    ecx,esi
10026ab4:	shl    eax,cl
10026ab6:	sub    edx,0x1
10026ab9:	add    esi,0x8
10026abc:	add    ebp,0x1
10026abf:	add    ebx,eax
10026ac1:	cmp    esi,0x3
10026ac4:	mov    DWORD PTR [esp+0x10],edx
10026ac8:	jb     0x10026aa6
10026aca:	mov    ecx,ebx
10026acc:	shr    ebx,1
10026ace:	mov    eax,ebx
10026ad0:	and    ecx,0x1
10026ad3:	and    eax,0x3
10026ad6:	sub    esi,0x1
10026ad9:	cmp    eax,0x3
10026adc:	mov    DWORD PTR [edi+0x4],ecx
10026adf:	ja     0x10026b3f
10026ae1:	jmp    DWORD PTR [eax*4+0x100278cc]
10026ae8:	shr    ebx,0x2
10026aeb:	mov    DWORD PTR [edi],0xd
10026af1:	mov    DWORD PTR [esp+0x18],ebx
10026af5:	sub    esi,0x2
10026af8:	jmp    0x100276ee
10026afd:	mov    eax,edi
10026aff:	call   0x100261e0
10026b04:	shr    ebx,0x2
10026b07:	mov    DWORD PTR [edi],0x12
10026b0d:	mov    DWORD PTR [esp+0x18],ebx
10026b11:	sub    esi,0x2
10026b14:	jmp    0x100276ee
10026b19:	shr    ebx,0x2
10026b1c:	mov    DWORD PTR [edi],0xf
10026b22:	mov    DWORD PTR [esp+0x18],ebx
10026b26:	sub    esi,0x2
10026b29:	jmp    0x100276ee
10026b2e:	mov    eax,DWORD PTR [esp+0x40]
10026b32:	mov    DWORD PTR [eax+0x18],0x100528c4
10026b39:	mov    DWORD PTR [edi],0x1b
10026b3f:	shr    ebx,0x2
10026b42:	mov    DWORD PTR [esp+0x18],ebx
10026b46:	sub    esi,0x2
10026b49:	jmp    0x100276ee
10026b4e:	mov    ecx,esi
10026b50:	and    ecx,0x7
10026b53:	shr    ebx,cl
10026b55:	sub    esi,ecx
10026b57:	cmp    esi,0x20
10026b5a:	mov    DWORD PTR [esp+0x18],ebx
10026b5e:	jae    0x10026b88
10026b60:	test   edx,edx
10026b62:	je     0x1002774c
10026b68:	movzx  eax,BYTE PTR [ebp+0x0]
10026b6c:	mov    ecx,esi
10026b6e:	shl    eax,cl
10026b70:	sub    edx,0x1
10026b73:	add    esi,0x8
10026b76:	add    ebp,0x1
10026b79:	add    ebx,eax
10026b7b:	cmp    esi,0x20
10026b7e:	mov    DWORD PTR [esp+0x10],edx
10026b82:	mov    DWORD PTR [esp+0x18],ebx
10026b86:	jb     0x10026b60
10026b88:	mov    ecx,ebx
10026b8a:	mov    eax,ebx
10026b8c:	not    ecx
10026b8e:	and    eax,0xffff
10026b93:	shr    ecx,0x10
10026b96:	cmp    eax,ecx
10026b98:	je     0x10026baa
10026b9a:	mov    eax,DWORD PTR [esp+0x40]
10026b9e:	mov    DWORD PTR [eax+0x18],0x100528a4
10026ba5:	jmp    0x100276e8
10026baa:	xor    ebx,ebx
10026bac:	mov    DWORD PTR [edi+0x40],eax
10026baf:	mov    DWORD PTR [esp+0x18],ebx
10026bb3:	xor    esi,esi
10026bb5:	mov    DWORD PTR [edi],0xe
10026bbb:	mov    eax,DWORD PTR [edi+0x40]
10026bbe:	test   eax,eax
10026bc0:	mov    DWORD PTR [esp+0x14],eax
10026bc4:	je     0x1002727c
10026bca:	cmp    eax,edx
10026bcc:	jbe    0x10026bd4
10026bce:	mov    eax,edx
10026bd0:	mov    DWORD PTR [esp+0x14],edx
10026bd4:	mov    ecx,DWORD PTR [esp+0x1c]
10026bd8:	cmp    eax,ecx
10026bda:	jbe    0x10026be2
10026bdc:	mov    eax,ecx
10026bde:	mov    DWORD PTR [esp+0x14],eax
10026be2:	test   eax,eax
10026be4:	je     0x1002774c
10026bea:	mov    ecx,DWORD PTR [esp+0x14]
10026bee:	mov    edx,DWORD PTR [esp+0x28]
10026bf2:	push   ecx
10026bf3:	push   ebp
10026bf4:	push   edx
10026bf5:	call   0x100167d0
10026bfa:	mov    eax,DWORD PTR [esp+0x20]
10026bfe:	sub    DWORD PTR [esp+0x1c],eax
10026c02:	sub    DWORD PTR [esp+0x28],eax
10026c06:	add    DWORD PTR [esp+0x34],eax
10026c0a:	mov    edx,DWORD PTR [esp+0x1c]
10026c0e:	add    esp,0xc
10026c11:	add    ebp,eax
10026c13:	sub    DWORD PTR [edi+0x40],eax
10026c16:	jmp    0x100276ee
10026c1b:	cmp    esi,0xe
10026c1e:	jae    0x10026c44
10026c20:	test   edx,edx
10026c22:	je     0x1002774c
10026c28:	movzx  eax,BYTE PTR [ebp+0x0]
10026c2c:	mov    ecx,esi
10026c2e:	shl    eax,cl
10026c30:	sub    edx,0x1
10026c33:	add    esi,0x8
10026c36:	add    ebp,0x1
10026c39:	add    ebx,eax
10026c3b:	cmp    esi,0xe
10026c3e:	mov    DWORD PTR [esp+0x10],edx
10026c42:	jb     0x10026c20
10026c44:	mov    ecx,ebx
10026c46:	and    ecx,0x1f
10026c49:	shr    ebx,0x5
10026c4c:	add    ecx,0x101
10026c52:	mov    eax,ebx
10026c54:	mov    DWORD PTR [edi+0x60],ecx
10026c57:	shr    ebx,0x5
10026c5a:	mov    ecx,ebx
10026c5c:	and    eax,0x1f
10026c5f:	and    ecx,0xf
10026c62:	add    eax,0x1
10026c65:	add    ecx,0x4
10026c68:	shr    ebx,0x4
10026c6b:	sub    esi,0xe
10026c6e:	cmp    DWORD PTR [edi+0x60],0x11e
10026c75:	mov    DWORD PTR [edi+0x64],eax
10026c78:	mov    DWORD PTR [edi+0x5c],ecx
10026c7b:	mov    DWORD PTR [esp+0x18],ebx
10026c7f:	ja     0x10026d75
10026c85:	cmp    eax,0x1e
10026c88:	ja     0x10026d75
10026c8e:	mov    DWORD PTR [edi+0x68],0x0
10026c95:	mov    DWORD PTR [edi],0x10
10026c9b:	mov    ecx,DWORD PTR [edi+0x68]
10026c9e:	cmp    ecx,DWORD PTR [edi+0x5c]
10026ca1:	jae    0x10026cf8
10026ca3:	cmp    esi,0x3
10026ca6:	jae    0x10026ccc
10026ca8:	test   edx,edx
10026caa:	je     0x1002774c
10026cb0:	movzx  eax,BYTE PTR [ebp+0x0]
10026cb4:	mov    ecx,esi
10026cb6:	shl    eax,cl
10026cb8:	sub    edx,0x1
10026cbb:	add    esi,0x8
10026cbe:	add    ebp,0x1
10026cc1:	add    ebx,eax
10026cc3:	cmp    esi,0x3
10026cc6:	mov    DWORD PTR [esp+0x10],edx
10026cca:	jb     0x10026ca8
10026ccc:	mov    eax,DWORD PTR [edi+0x68]
10026ccf:	movzx  eax,WORD PTR [eax*2+0x10052768]
10026cd7:	movzx  ecx,bl
10026cda:	and    ecx,0x7
10026cdd:	mov    WORD PTR [edi+eax*2+0x70],cx
10026ce2:	add    DWORD PTR [edi+0x68],0x1
10026ce6:	mov    ecx,DWORD PTR [edi+0x68]
10026ce9:	shr    ebx,0x3
10026cec:	sub    esi,0x3
10026cef:	cmp    ecx,DWORD PTR [edi+0x5c]
10026cf2:	mov    DWORD PTR [esp+0x18],ebx
10026cf6:	jb     0x10026ca3
10026cf8:	cmp    DWORD PTR [edi+0x68],0x13
10026cfc:	jae    0x10026d29
10026cfe:	mov    ecx,0x1
10026d03:	xor    eax,eax
10026d05:	jmp    0x10026d10
10026d07:	lea    esp,[esp+0x0]
10026d0e:	mov    edi,edi
10026d10:	mov    edx,DWORD PTR [edi+0x68]
10026d13:	movzx  edx,WORD PTR [edx*2+0x10052768]
10026d1b:	mov    WORD PTR [edi+edx*2+0x70],ax
10026d20:	add    DWORD PTR [edi+0x68],ecx
10026d23:	cmp    DWORD PTR [edi+0x68],0x13
10026d27:	jb     0x10026d10
10026d29:	lea    eax,[edi+0x530]
10026d2f:	lea    ecx,[edi+0x6c]
10026d32:	mov    DWORD PTR [ecx],eax
10026d34:	mov    DWORD PTR [edi+0x4c],eax
10026d37:	lea    edx,[edi+0x2f0]
10026d3d:	push   edx
10026d3e:	lea    eax,[edi+0x54]
10026d41:	push   eax
10026d42:	push   ecx
10026d43:	mov    DWORD PTR [eax],0x7
10026d49:	push   0x13
10026d4b:	lea    eax,[edi+0x70]
10026d4e:	push   eax
10026d4f:	push   0x0
10026d51:	call   0x10029b30
10026d56:	mov    edx,DWORD PTR [esp+0x28]
10026d5a:	add    esp,0x18
10026d5d:	test   eax,eax
10026d5f:	mov    DWORD PTR [esp+0x30],eax
10026d63:	je     0x10026d85
10026d65:	mov    ecx,DWORD PTR [esp+0x40]
10026d69:	mov    DWORD PTR [ecx+0x18],0x10052888
10026d70:	jmp    0x100276e8
10026d75:	mov    eax,DWORD PTR [esp+0x40]
10026d79:	mov    DWORD PTR [eax+0x18],0x10052864
10026d80:	jmp    0x100276e8
10026d85:	mov    DWORD PTR [edi+0x68],0x0
10026d8c:	mov    DWORD PTR [edi],0x11
10026d92:	mov    eax,DWORD PTR [edi+0x64]
10026d95:	add    eax,DWORD PTR [edi+0x60]
10026d98:	cmp    DWORD PTR [edi+0x68],eax
10026d9b:	jae    0x10026fd9
10026da1:	mov    ecx,DWORD PTR [edi+0x54]
10026da4:	mov    eax,0x1
10026da9:	shl    eax,cl
10026dab:	mov    ecx,DWORD PTR [edi+0x4c]
10026dae:	sub    eax,0x1
10026db1:	and    eax,ebx
10026db3:	mov    eax,DWORD PTR [ecx+eax*4]
10026db6:	mov    ecx,eax
10026db8:	shr    ecx,0x8
10026dbb:	movzx  ecx,cl
10026dbe:	cmp    ecx,esi
10026dc0:	mov    DWORD PTR [esp+0x14],eax
10026dc4:	jbe    0x10026e0a
10026dc6:	test   edx,edx
10026dc8:	je     0x1002774c
10026dce:	movzx  eax,BYTE PTR [ebp+0x0]
10026dd2:	mov    ecx,esi
10026dd4:	shl    eax,cl
10026dd6:	mov    ecx,DWORD PTR [edi+0x54]
10026dd9:	sub    edx,0x1
10026ddc:	add    esi,0x8
10026ddf:	add    ebx,eax
10026de1:	mov    eax,0x1
10026de6:	shl    eax,cl
10026de8:	mov    ecx,DWORD PTR [edi+0x4c]
10026deb:	add    ebp,0x1
10026dee:	mov    DWORD PTR [esp+0x10],edx
10026df2:	sub    eax,0x1
10026df5:	and    eax,ebx
10026df7:	mov    eax,DWORD PTR [ecx+eax*4]
10026dfa:	mov    ecx,eax
10026dfc:	shr    ecx,0x8
10026dff:	movzx  ecx,cl
10026e02:	cmp    ecx,esi
10026e04:	mov    DWORD PTR [esp+0x14],eax
10026e08:	ja     0x10026dc6
10026e0a:	mov    ecx,eax
10026e0c:	shr    ecx,0x10
10026e0f:	cmp    ecx,0x10
10026e12:	jae    0x10026e6b
10026e14:	mov    ecx,eax
10026e16:	shr    ecx,0x8
10026e19:	movzx  ecx,cl
10026e1c:	cmp    esi,ecx
10026e1e:	jae    0x10026e4a
10026e20:	test   edx,edx
10026e22:	je     0x1002774c
10026e28:	movzx  eax,BYTE PTR [ebp+0x0]
10026e2c:	mov    ecx,esi
10026e2e:	shl    eax,cl
10026e30:	sub    edx,0x1
10026e33:	add    esi,0x8
10026e36:	add    ebp,0x1
10026e39:	add    ebx,eax
10026e3b:	mov    eax,DWORD PTR [esp+0x14]
10026e3f:	movzx  ecx,ah
10026e42:	cmp    esi,ecx
10026e44:	mov    DWORD PTR [esp+0x10],edx
10026e48:	jb     0x10026e20
10026e4a:	movzx  ecx,ah
10026e4d:	mov    eax,DWORD PTR [edi+0x68]
10026e50:	shr    ebx,cl
10026e52:	sub    esi,ecx
10026e54:	mov    cx,WORD PTR [esp+0x16]
10026e59:	mov    WORD PTR [edi+eax*2+0x70],cx
10026e5e:	add    DWORD PTR [edi+0x68],0x1
10026e62:	mov    DWORD PTR [esp+0x18],ebx
10026e66:	jmp    0x10026fca
10026e6b:	mov    cx,WORD PTR [esp+0x16]
10026e70:	cmp    cx,0x10
10026e74:	jne    0x10026ee1
10026e76:	movzx  ecx,ah
10026e79:	lea    eax,[ecx+0x2]
10026e7c:	cmp    esi,eax
10026e7e:	mov    DWORD PTR [esp+0x24],ecx
10026e82:	jae    0x10026eae
10026e84:	test   edx,edx
10026e86:	je     0x1002774c
10026e8c:	movzx  eax,BYTE PTR [ebp+0x0]
10026e90:	mov    ecx,esi
10026e92:	shl    eax,cl
10026e94:	mov    ecx,DWORD PTR [esp+0x24]
10026e98:	sub    edx,0x1
10026e9b:	add    esi,0x8
10026e9e:	add    ebx,eax
10026ea0:	lea    eax,[ecx+0x2]
10026ea3:	add    ebp,0x1
10026ea6:	cmp    esi,eax
10026ea8:	mov    DWORD PTR [esp+0x10],edx
10026eac:	jb     0x10026e84
10026eae:	mov    eax,DWORD PTR [edi+0x68]
10026eb1:	shr    ebx,cl
10026eb3:	sub    esi,ecx
10026eb5:	test   eax,eax
10026eb7:	mov    DWORD PTR [esp+0x18],ebx
10026ebb:	je     0x10027030
10026ec1:	movzx  ecx,WORD PTR [edi+eax*2+0x6e]
10026ec6:	mov    eax,ebx
10026ec8:	and    eax,0x3
10026ecb:	add    eax,0x3
10026ece:	shr    ebx,0x2
10026ed1:	mov    DWORD PTR [esp+0x24],ecx
10026ed5:	mov    DWORD PTR [esp+0x14],eax
10026ed9:	sub    esi,0x2
10026edc:	jmp    0x10026f90
10026ee1:	cmp    cx,0x11
10026ee5:	movzx  ecx,ah
10026ee8:	mov    DWORD PTR [esp+0x24],ecx
10026eec:	jne    0x10026f37
10026eee:	lea    eax,[ecx+0x3]
10026ef1:	cmp    esi,eax
10026ef3:	jae    0x10026f1f
10026ef5:	test   edx,edx
10026ef7:	je     0x1002774c
10026efd:	movzx  eax,BYTE PTR [ebp+0x0]
10026f01:	mov    ecx,esi
10026f03:	shl    eax,cl
10026f05:	mov    ecx,DWORD PTR [esp+0x24]
10026f09:	sub    edx,0x1
10026f0c:	add    esi,0x8
10026f0f:	add    ebx,eax
10026f11:	lea    eax,[ecx+0x3]
10026f14:	add    ebp,0x1
10026f17:	cmp    esi,eax
10026f19:	mov    DWORD PTR [esp+0x10],edx
10026f1d:	jb     0x10026ef5
10026f1f:	shr    ebx,cl
10026f21:	mov    eax,ebx
10026f23:	and    eax,0x7
10026f26:	add    eax,0x3
10026f29:	mov    DWORD PTR [esp+0x14],eax
10026f2d:	shr    ebx,0x3
10026f30:	mov    eax,0xfffffffd
10026f35:	jmp    0x10026f80
10026f37:	lea    eax,[ecx+0x7]
10026f3a:	cmp    esi,eax
10026f3c:	jae    0x10026f6a
10026f3e:	mov    edi,edi
10026f40:	test   edx,edx
10026f42:	je     0x1002774c
10026f48:	movzx  eax,BYTE PTR [ebp+0x0]
10026f4c:	mov    ecx,esi
10026f4e:	shl    eax,cl
10026f50:	mov    ecx,DWORD PTR [esp+0x24]
10026f54:	sub    edx,0x1
10026f57:	add    esi,0x8
10026f5a:	add    ebx,eax
10026f5c:	lea    eax,[ecx+0x7]
10026f5f:	add    ebp,0x1
10026f62:	cmp    esi,eax
10026f64:	mov    DWORD PTR [esp+0x10],edx
10026f68:	jb     0x10026f40
10026f6a:	shr    ebx,cl
10026f6c:	mov    eax,ebx
10026f6e:	and    eax,0x7f
10026f71:	add    eax,0xb
10026f74:	mov    DWORD PTR [esp+0x14],eax
10026f78:	shr    ebx,0x7
10026f7b:	mov    eax,0xfffffff9
10026f80:	sub    eax,ecx
10026f82:	add    esi,eax
10026f84:	mov    eax,DWORD PTR [esp+0x14]
10026f88:	mov    DWORD PTR [esp+0x24],0x0
10026f90:	mov    ecx,DWORD PTR [edi+0x68]
10026f93:	add    ecx,eax
10026f95:	mov    eax,DWORD PTR [edi+0x64]
10026f98:	add    eax,DWORD PTR [edi+0x60]
10026f9b:	mov    DWORD PTR [esp+0x18],ebx
10026f9f:	cmp    ecx,eax
10026fa1:	ja     0x10027040
10026fa7:	cmp    DWORD PTR [esp+0x14],0x0
10026fac:	je     0x10026fca
10026fae:	mov    eax,DWORD PTR [esp+0x24]
10026fb2:	mov    ecx,DWORD PTR [edi+0x68]
10026fb5:	sub    DWORD PTR [esp+0x14],0x1
10026fba:	mov    WORD PTR [edi+ecx*2+0x70],ax
10026fbf:	add    DWORD PTR [edi+0x68],0x1
10026fc3:	cmp    DWORD PTR [esp+0x14],0x0
10026fc8:	jne    0x10026fb2
10026fca:	mov    eax,DWORD PTR [edi+0x64]
10026fcd:	add    eax,DWORD PTR [edi+0x60]
10026fd0:	cmp    DWORD PTR [edi+0x68],eax
10026fd3:	jb     0x10026da1
10026fd9:	cmp    DWORD PTR [edi],0x1b
10026fdc:	je     0x100276ee
10026fe2:	lea    eax,[edi+0x530]
10026fe8:	lea    ecx,[edi+0x6c]
10026feb:	mov    DWORD PTR [ecx],eax
10026fed:	lea    edx,[edi+0x2f0]
10026ff3:	push   edx
10026ff4:	mov    DWORD PTR [edi+0x4c],eax
10026ff7:	lea    eax,[edi+0x54]
10026ffa:	push   eax
10026ffb:	push   ecx
10026ffc:	mov    ecx,DWORD PTR [edi+0x60]
10026fff:	push   ecx
10027000:	lea    edx,[edi+0x70]
10027003:	push   edx
10027004:	push   0x1
10027006:	mov    DWORD PTR [eax],0x9
1002700c:	call   0x10029b30
10027011:	add    esp,0x18
10027014:	test   eax,eax
10027016:	mov    DWORD PTR [esp+0x30],eax
1002701a:	je     0x10027050
1002701c:	mov    eax,DWORD PTR [esp+0x40]
10027020:	mov    edx,DWORD PTR [esp+0x10]
10027024:	mov    DWORD PTR [eax+0x18],0x10052848
1002702b:	jmp    0x100276e8
10027030:	mov    ecx,DWORD PTR [esp+0x40]
10027034:	mov    DWORD PTR [ecx+0x18],0x1005282c
1002703b:	jmp    0x100276e8
10027040:	mov    eax,DWORD PTR [esp+0x40]
10027044:	mov    DWORD PTR [eax+0x18],0x1005282c
1002704b:	jmp    0x100276e8
10027050:	mov    edx,DWORD PTR [edi+0x6c]
10027053:	lea    ecx,[edi+0x6c]
10027056:	mov    DWORD PTR [edi+0x50],edx
10027059:	lea    edx,[edi+0x2f0]
1002705f:	push   edx
10027060:	lea    eax,[edi+0x58]
10027063:	push   eax
10027064:	push   ecx
10027065:	mov    ecx,DWORD PTR [edi+0x60]
10027068:	mov    DWORD PTR [eax],0x6
1002706e:	mov    eax,DWORD PTR [edi+0x64]
10027071:	push   eax
10027072:	lea    edx,[edi+ecx*2+0x70]
10027076:	push   edx
10027077:	push   0x2
10027079:	call   0x10029b30
1002707e:	mov    edx,DWORD PTR [esp+0x28]
10027082:	add    esp,0x18
10027085:	test   eax,eax
10027087:	mov    DWORD PTR [esp+0x30],eax
1002708b:	je     0x1002709d
1002708d:	mov    eax,DWORD PTR [esp+0x40]
10027091:	mov    DWORD PTR [eax+0x18],0x10052814
10027098:	jmp    0x100276e8
1002709d:	mov    DWORD PTR [edi],0x12
100270a3:	cmp    edx,0x6
100270a6:	jb     0x10027111
100270ac:	cmp    DWORD PTR [esp+0x1c],0x102
100270b4:	jb     0x10027111
100270b6:	mov    eax,DWORD PTR [esp+0x40]
100270ba:	mov    edx,DWORD PTR [esp+0x1c]
100270be:	mov    ecx,DWORD PTR [esp+0x28]
100270c2:	mov    DWORD PTR [eax+0x10],edx
100270c5:	mov    edx,DWORD PTR [esp+0x2c]
100270c9:	mov    DWORD PTR [eax+0xc],ecx
100270cc:	mov    ecx,DWORD PTR [esp+0x10]
100270d0:	push   edx
100270d1:	mov    DWORD PTR [eax],ebp
100270d3:	mov    DWORD PTR [eax+0x4],ecx
100270d6:	push   eax
100270d7:	mov    DWORD PTR [edi+0x38],ebx
100270da:	mov    DWORD PTR [edi+0x3c],esi
100270dd:	call   0x10029670
100270e2:	mov    eax,DWORD PTR [esp+0x48]
100270e6:	mov    edx,DWORD PTR [eax+0x10]
100270e9:	mov    ecx,DWORD PTR [eax+0xc]
100270ec:	mov    ebp,DWORD PTR [eax]
100270ee:	mov    eax,DWORD PTR [eax+0x4]
100270f1:	mov    ebx,DWORD PTR [edi+0x38]
100270f4:	mov    esi,DWORD PTR [edi+0x3c]
100270f7:	mov    DWORD PTR [esp+0x24],edx
100270fb:	add    esp,0x8
100270fe:	mov    DWORD PTR [esp+0x28],ecx
10027102:	mov    DWORD PTR [esp+0x10],eax
10027106:	mov    DWORD PTR [esp+0x18],ebx
1002710a:	mov    edx,eax
1002710c:	jmp    0x100276ee
10027111:	mov    ecx,DWORD PTR [edi+0x54]
10027114:	mov    eax,0x1
10027119:	shl    eax,cl
1002711b:	sub    eax,0x1
1002711e:	and    eax,ebx
10027120:	mov    ecx,eax
10027122:	mov    eax,DWORD PTR [edi+0x4c]
10027125:	mov    eax,DWORD PTR [eax+ecx*4]
10027128:	mov    ecx,eax
1002712a:	shr    ecx,0x8
1002712d:	movzx  ecx,cl
10027130:	cmp    ecx,esi
10027132:	mov    DWORD PTR [esp+0x14],eax
10027136:	jbe    0x1002717c
10027138:	test   edx,edx
1002713a:	je     0x1002774c
10027140:	movzx  eax,BYTE PTR [ebp+0x0]
10027144:	mov    ecx,esi
10027146:	shl    eax,cl
10027148:	mov    ecx,DWORD PTR [edi+0x54]
1002714b:	sub    edx,0x1
1002714e:	add    esi,0x8
10027151:	add    ebx,eax
10027153:	mov    eax,0x1
10027158:	shl    eax,cl
1002715a:	mov    ecx,DWORD PTR [edi+0x4c]
1002715d:	add    ebp,0x1
10027160:	mov    DWORD PTR [esp+0x10],edx
10027164:	sub    eax,0x1
10027167:	and    eax,ebx
10027169:	mov    eax,DWORD PTR [ecx+eax*4]
1002716c:	mov    ecx,eax
1002716e:	shr    ecx,0x8
10027171:	movzx  ecx,cl
10027174:	cmp    ecx,esi
10027176:	mov    DWORD PTR [esp+0x14],eax
1002717a:	ja     0x10027138
1002717c:	test   al,al
1002717e:	je     0x1002724d
10027184:	test   al,0xf0
10027186:	jne    0x1002724d
1002718c:	mov    ecx,eax
1002718e:	shr    ecx,0x8
10027191:	mov    DWORD PTR [esp+0x34],ecx
10027195:	movzx  ecx,cl
10027198:	mov    DWORD PTR [esp+0x24],ecx
1002719c:	movzx  ecx,al
1002719f:	add    ecx,DWORD PTR [esp+0x24]
100271a3:	mov    DWORD PTR [esp+0x18],eax
100271a7:	mov    eax,0x1
100271ac:	shl    eax,cl
100271ae:	mov    ecx,DWORD PTR [esp+0x24]
100271b2:	sub    eax,0x1
100271b5:	and    eax,ebx
100271b7:	shr    eax,cl
100271b9:	mov    ecx,DWORD PTR [esp+0x14]
100271bd:	shr    ecx,0x10
100271c0:	add    eax,ecx
100271c2:	mov    ecx,eax
100271c4:	mov    eax,DWORD PTR [edi+0x4c]
100271c7:	mov    eax,DWORD PTR [eax+ecx*4]
100271ca:	movzx  ecx,BYTE PTR [esp+0x34]
100271cf:	mov    DWORD PTR [esp+0x14],eax
100271d3:	shr    eax,0x8
100271d6:	movzx  eax,al
100271d9:	add    eax,ecx
100271db:	cmp    eax,esi
100271dd:	jbe    0x10027240
100271e3:	test   edx,edx
100271e5:	je     0x1002774c
100271eb:	movzx  eax,BYTE PTR [ebp+0x0]
100271ef:	mov    ecx,esi
100271f1:	shl    eax,cl
100271f3:	mov    ecx,DWORD PTR [esp+0x18]
100271f7:	sub    edx,0x1
100271fa:	add    esi,0x8
100271fd:	add    ebx,eax
100271ff:	movzx  eax,ch
10027202:	add    ecx,eax
10027204:	mov    DWORD PTR [esp+0x24],eax
10027208:	mov    eax,0x1
1002720d:	shl    eax,cl
1002720f:	mov    ecx,DWORD PTR [esp+0x24]
10027213:	add    ebp,0x1
10027216:	mov    DWORD PTR [esp+0x10],edx
1002721a:	sub    eax,0x1
1002721d:	and    eax,ebx
1002721f:	shr    eax,cl
10027221:	movzx  ecx,WORD PTR [esp+0x1a]
10027226:	add    eax,ecx
10027228:	mov    ecx,DWORD PTR [edi+0x4c]
1002722b:	mov    eax,DWORD PTR [ecx+eax*4]
1002722e:	mov    DWORD PTR [esp+0x14],eax
10027232:	shr    eax,0x8
10027235:	movzx  eax,al
10027238:	add    eax,DWORD PTR [esp+0x24]
1002723c:	cmp    eax,esi
1002723e:	ja     0x100271e3
10027240:	movzx  ecx,BYTE PTR [esp+0x19]
10027245:	mov    eax,DWORD PTR [esp+0x14]
10027249:	shr    ebx,cl
1002724b:	sub    esi,ecx
1002724d:	mov    ecx,eax
1002724f:	shr    ecx,0x8
10027252:	movzx  ecx,cl
10027255:	shr    ebx,cl
10027257:	sub    esi,ecx
10027259:	mov    DWORD PTR [esp+0x24],ecx
1002725d:	mov    ecx,eax
1002725f:	shr    ecx,0x10
10027262:	test   al,al
10027264:	mov    DWORD PTR [esp+0x18],ebx
10027268:	mov    DWORD PTR [edi+0x40],ecx
1002726b:	jne    0x10027278
1002726d:	mov    DWORD PTR [edi],0x17
10027273:	jmp    0x100276ee
10027278:	test   al,0x20
1002727a:	je     0x10027287
1002727c:	mov    DWORD PTR [edi],0xb
10027282:	jmp    0x100276ee
10027287:	test   al,0x40
10027289:	je     0x1002729b
1002728b:	mov    eax,DWORD PTR [esp+0x40]
1002728f:	mov    DWORD PTR [eax+0x18],0x100527f8
10027296:	jmp    0x100276e8
1002729b:	and    eax,0xf
1002729e:	mov    DWORD PTR [edi+0x48],eax
100272a1:	mov    DWORD PTR [edi],0x13
100272a7:	mov    eax,DWORD PTR [edi+0x48]
100272aa:	test   eax,eax
100272ac:	je     0x100272ec
100272ae:	cmp    esi,eax
100272b0:	jae    0x100272d6
100272b2:	test   edx,edx
100272b4:	je     0x1002774c
100272ba:	movzx  eax,BYTE PTR [ebp+0x0]
100272be:	mov    ecx,esi
100272c0:	shl    eax,cl
100272c2:	sub    edx,0x1
100272c5:	add    esi,0x8
100272c8:	add    ebp,0x1
100272cb:	add    ebx,eax
100272cd:	cmp    esi,DWORD PTR [edi+0x48]
100272d0:	mov    DWORD PTR [esp+0x10],edx
100272d4:	jb     0x100272b2
100272d6:	mov    ecx,DWORD PTR [edi+0x48]
100272d9:	mov    eax,0x1
100272de:	shl    eax,cl
100272e0:	sub    eax,0x1
100272e3:	and    eax,ebx
100272e5:	add    DWORD PTR [edi+0x40],eax
100272e8:	shr    ebx,cl
100272ea:	sub    esi,ecx
100272ec:	mov    DWORD PTR [edi],0x14
100272f2:	mov    ecx,DWORD PTR [edi+0x58]
100272f5:	mov    eax,0x1
100272fa:	shl    eax,cl
100272fc:	sub    eax,0x1
100272ff:	and    eax,ebx
10027301:	mov    ecx,eax
10027303:	mov    eax,DWORD PTR [edi+0x50]
10027306:	mov    eax,DWORD PTR [eax+ecx*4]
10027309:	mov    ecx,eax
1002730b:	shr    ecx,0x8
1002730e:	movzx  ecx,cl
10027311:	cmp    ecx,esi
10027313:	mov    DWORD PTR [esp+0x14],eax
10027317:	jbe    0x10027364
10027319:	lea    esp,[esp+0x0]
10027320:	test   edx,edx
10027322:	je     0x1002774c
10027328:	movzx  eax,BYTE PTR [ebp+0x0]
1002732c:	mov    ecx,esi
1002732e:	shl    eax,cl
10027330:	mov    ecx,DWORD PTR [edi+0x58]
10027333:	sub    edx,0x1
10027336:	add    esi,0x8
10027339:	add    ebx,eax
1002733b:	mov    eax,0x1
10027340:	shl    eax,cl
10027342:	mov    ecx,DWORD PTR [edi+0x50]
10027345:	add    ebp,0x1
10027348:	mov    DWORD PTR [esp+0x10],edx
1002734c:	sub    eax,0x1
1002734f:	and    eax,ebx
10027351:	mov    eax,DWORD PTR [ecx+eax*4]
10027354:	mov    ecx,eax
10027356:	shr    ecx,0x8
10027359:	movzx  ecx,cl
1002735c:	cmp    ecx,esi
1002735e:	mov    DWORD PTR [esp+0x14],eax
10027362:	ja     0x10027320
10027364:	test   al,0xf0
10027366:	jne    0x1002742d
1002736c:	mov    ecx,eax
1002736e:	shr    ecx,0x8
10027371:	mov    DWORD PTR [esp+0x34],ecx
10027375:	movzx  ecx,cl
10027378:	mov    DWORD PTR [esp+0x24],ecx
1002737c:	movzx  ecx,al
1002737f:	add    ecx,DWORD PTR [esp+0x24]
10027383:	mov    DWORD PTR [esp+0x18],eax
10027387:	mov    eax,0x1
1002738c:	shl    eax,cl
1002738e:	mov    ecx,DWORD PTR [esp+0x24]
10027392:	sub    eax,0x1
10027395:	and    eax,ebx
10027397:	shr    eax,cl
10027399:	mov    ecx,DWORD PTR [esp+0x14]
1002739d:	shr    ecx,0x10
100273a0:	add    eax,ecx
100273a2:	mov    ecx,eax
100273a4:	mov    eax,DWORD PTR [edi+0x50]
100273a7:	mov    eax,DWORD PTR [eax+ecx*4]
100273aa:	movzx  ecx,BYTE PTR [esp+0x34]
100273af:	mov    DWORD PTR [esp+0x14],eax
100273b3:	shr    eax,0x8
100273b6:	movzx  eax,al
100273b9:	add    eax,ecx
100273bb:	cmp    eax,esi
100273bd:	jbe    0x10027420
100273c3:	test   edx,edx
100273c5:	je     0x1002774c
100273cb:	movzx  eax,BYTE PTR [ebp+0x0]
100273cf:	mov    ecx,esi
100273d1:	shl    eax,cl
100273d3:	mov    ecx,DWORD PTR [esp+0x18]
100273d7:	sub    edx,0x1
100273da:	add    esi,0x8
100273dd:	add    ebx,eax
100273df:	movzx  eax,ch
100273e2:	add    ecx,eax
100273e4:	mov    DWORD PTR [esp+0x24],eax
100273e8:	mov    eax,0x1
100273ed:	shl    eax,cl
100273ef:	mov    ecx,DWORD PTR [esp+0x24]
100273f3:	add    ebp,0x1
100273f6:	mov    DWORD PTR [esp+0x10],edx
100273fa:	sub    eax,0x1
100273fd:	and    eax,ebx
100273ff:	shr    eax,cl
10027401:	movzx  ecx,WORD PTR [esp+0x1a]
10027406:	add    eax,ecx
10027408:	mov    ecx,DWORD PTR [edi+0x50]
1002740b:	mov    eax,DWORD PTR [ecx+eax*4]
1002740e:	mov    DWORD PTR [esp+0x14],eax
10027412:	shr    eax,0x8
10027415:	movzx  eax,al
10027418:	add    eax,DWORD PTR [esp+0x24]
1002741c:	cmp    eax,esi
1002741e:	ja     0x100273c3
10027420:	movzx  ecx,BYTE PTR [esp+0x19]
10027425:	mov    eax,DWORD PTR [esp+0x14]
10027429:	shr    ebx,cl
1002742b:	sub    esi,ecx
1002742d:	mov    ecx,eax
1002742f:	shr    ecx,0x8
10027432:	movzx  ecx,cl
10027435:	shr    ebx,cl
10027437:	sub    esi,ecx
10027439:	test   al,0x40
1002743b:	mov    DWORD PTR [esp+0x24],ecx
1002743f:	mov    DWORD PTR [esp+0x18],ebx
10027443:	je     0x10027455
10027445:	mov    eax,DWORD PTR [esp+0x40]
10027449:	mov    DWORD PTR [eax+0x18],0x100527e0
10027450:	jmp    0x100276e8
10027455:	mov    ecx,eax
10027457:	shr    ecx,0x10
1002745a:	and    eax,0xf
1002745d:	mov    DWORD PTR [edi+0x44],ecx
10027460:	mov    DWORD PTR [edi+0x48],eax
10027463:	mov    DWORD PTR [edi],0x15
10027469:	mov    eax,DWORD PTR [edi+0x48]
1002746c:	test   eax,eax
1002746e:	je     0x100274b2
10027470:	cmp    esi,eax
10027472:	jae    0x10027498
10027474:	test   edx,edx
10027476:	je     0x1002774c
1002747c:	movzx  eax,BYTE PTR [ebp+0x0]
10027480:	mov    ecx,esi
10027482:	shl    eax,cl
10027484:	sub    edx,0x1
10027487:	add    esi,0x8
1002748a:	add    ebp,0x1
1002748d:	add    ebx,eax
1002748f:	cmp    esi,DWORD PTR [edi+0x48]
10027492:	mov    DWORD PTR [esp+0x10],edx
10027496:	jb     0x10027474
10027498:	mov    ecx,DWORD PTR [edi+0x48]
1002749b:	mov    eax,0x1
100274a0:	shl    eax,cl
100274a2:	sub    eax,0x1
100274a5:	and    eax,ebx
100274a7:	add    DWORD PTR [edi+0x44],eax
100274aa:	shr    ebx,cl
100274ac:	sub    esi,ecx
100274ae:	mov    DWORD PTR [esp+0x18],ebx
100274b2:	mov    ecx,DWORD PTR [edi+0x2c]
100274b5:	sub    ecx,DWORD PTR [esp+0x1c]
100274b9:	add    ecx,DWORD PTR [esp+0x2c]
100274bd:	cmp    DWORD PTR [edi+0x44],ecx
100274c0:	jbe    0x100274d2
100274c2:	mov    eax,DWORD PTR [esp+0x40]
100274c6:	mov    DWORD PTR [eax+0x18],0x100527c0
100274cd:	jmp    0x100276e8
100274d2:	mov    DWORD PTR [edi],0x16
100274d8:	cmp    DWORD PTR [esp+0x1c],0x0
100274dd:	je     0x1002774c
100274e3:	mov    ecx,DWORD PTR [esp+0x2c]
100274e7:	sub    ecx,DWORD PTR [esp+0x1c]
100274eb:	mov    eax,DWORD PTR [edi+0x44]
100274ee:	cmp    eax,ecx
100274f0:	jbe    0x1002752e
100274f2:	sub    eax,ecx
100274f4:	mov    ecx,DWORD PTR [edi+0x30]
100274f7:	cmp    eax,ecx
100274f9:	mov    DWORD PTR [esp+0x14],eax
100274fd:	jbe    0x1002750f
100274ff:	sub    eax,ecx
10027501:	mov    ecx,DWORD PTR [edi+0x34]
10027504:	add    ecx,DWORD PTR [edi+0x28]
10027507:	mov    DWORD PTR [esp+0x14],eax
1002750b:	sub    ecx,eax
1002750d:	jmp    0x1002751b
1002750f:	mov    ecx,DWORD PTR [edi+0x34]
10027512:	sub    ecx,eax
10027514:	add    ecx,DWORD PTR [edi+0x30]
10027517:	mov    eax,DWORD PTR [esp+0x14]
1002751b:	mov    DWORD PTR [esp+0x24],ecx
1002751f:	mov    ecx,DWORD PTR [edi+0x40]
10027522:	cmp    eax,ecx
10027524:	mov    DWORD PTR [esp+0x34],ecx
10027528:	jbe    0x10027543
1002752a:	mov    eax,ecx
1002752c:	jmp    0x1002753f
1002752e:	mov    ecx,DWORD PTR [esp+0x28]
10027532:	sub    ecx,eax
10027534:	mov    eax,DWORD PTR [edi+0x40]
10027537:	mov    DWORD PTR [esp+0x24],ecx
1002753b:	mov    DWORD PTR [esp+0x34],eax
1002753f:	mov    DWORD PTR [esp+0x14],eax
10027543:	mov    ecx,DWORD PTR [esp+0x1c]
10027547:	cmp    eax,ecx
10027549:	jbe    0x10027551
1002754b:	mov    eax,ecx
1002754d:	mov    DWORD PTR [esp+0x14],eax
10027551:	sub    ecx,eax
10027553:	mov    DWORD PTR [esp+0x1c],ecx
10027557:	mov    ecx,DWORD PTR [esp+0x34]
1002755b:	sub    ecx,eax
1002755d:	mov    eax,DWORD PTR [esp+0x28]
10027561:	mov    DWORD PTR [edi+0x40],ecx
10027564:	mov    ecx,DWORD PTR [esp+0x24]
10027568:	mov    cl,BYTE PTR [ecx]
1002756a:	add    DWORD PTR [esp+0x24],0x1
1002756f:	mov    BYTE PTR [eax],cl
10027571:	add    eax,0x1
10027574:	sub    DWORD PTR [esp+0x14],0x1
10027579:	jne    0x10027564
1002757b:	cmp    DWORD PTR [edi+0x40],0x0
1002757f:	mov    DWORD PTR [esp+0x28],eax
10027583:	jne    0x100276ee
10027589:	mov    DWORD PTR [edi],0x12
1002758f:	jmp    0x100276ee
10027594:	cmp    DWORD PTR [esp+0x1c],0x0
10027599:	je     0x1002774c
1002759f:	mov    eax,DWORD PTR [esp+0x28]
100275a3:	mov    cl,BYTE PTR [edi+0x40]
100275a6:	mov    BYTE PTR [eax],cl
100275a8:	add    eax,0x1
100275ab:	sub    DWORD PTR [esp+0x1c],0x1
100275b0:	mov    DWORD PTR [esp+0x28],eax
100275b4:	mov    DWORD PTR [edi],0x12
100275ba:	jmp    0x100276ee
100275bf:	cmp    DWORD PTR [edi+0x8],0x0
100275c3:	je     0x1002768c
100275c9:	cmp    esi,0x20
100275cc:	jae    0x100275f8
100275ce:	mov    edi,edi
100275d0:	test   edx,edx
100275d2:	je     0x1002774c
100275d8:	movzx  eax,BYTE PTR [ebp+0x0]
100275dc:	mov    ecx,esi
100275de:	shl    eax,cl
100275e0:	sub    edx,0x1
100275e3:	add    esi,0x8
100275e6:	add    ebp,0x1
100275e9:	add    ebx,eax
100275eb:	cmp    esi,0x20
100275ee:	mov    DWORD PTR [esp+0x10],edx
100275f2:	mov    DWORD PTR [esp+0x18],ebx
100275f6:	jb     0x100275d0
100275f8:	mov    eax,DWORD PTR [esp+0x2c]
100275fc:	sub    eax,DWORD PTR [esp+0x1c]
10027600:	mov    ecx,DWORD PTR [esp+0x40]
10027604:	add    DWORD PTR [ecx+0x14],eax
10027607:	add    DWORD PTR [edi+0x1c],eax
1002760a:	test   eax,eax
1002760c:	mov    DWORD PTR [esp+0x2c],eax
10027610:	je     0x10027641
10027612:	mov    ecx,DWORD PTR [esp+0x28]
10027616:	mov    edx,DWORD PTR [edi+0x18]
10027619:	push   eax
1002761a:	sub    ecx,eax
1002761c:	cmp    DWORD PTR [edi+0x10],0x0
10027620:	push   ecx
10027621:	push   edx
10027622:	je     0x1002762b
10027624:	call   0x10029620
10027629:	jmp    0x10027630
1002762b:	call   0x10027930
10027630:	mov    ecx,DWORD PTR [esp+0x4c]
10027634:	mov    edx,DWORD PTR [esp+0x1c]
10027638:	mov    DWORD PTR [edi+0x18],eax
1002763b:	add    esp,0xc
1002763e:	mov    DWORD PTR [ecx+0x30],eax
10027641:	cmp    DWORD PTR [edi+0x10],0x0
10027645:	mov    eax,DWORD PTR [esp+0x1c]
10027649:	mov    DWORD PTR [esp+0x2c],eax
1002764d:	mov    eax,ebx
1002764f:	jne    0x1002766f
10027651:	and    eax,0xff00
10027656:	mov    ecx,ebx
10027658:	shl    ecx,0x10
1002765b:	add    eax,ecx
1002765d:	xor    ecx,ecx
1002765f:	mov    ch,BYTE PTR [esp+0x1a]
10027663:	shl    eax,0x8
10027666:	add    eax,ecx
10027668:	mov    ecx,ebx
1002766a:	shr    ecx,0x18
1002766d:	add    eax,ecx
1002766f:	cmp    eax,DWORD PTR [edi+0x18]
10027672:	je     0x10027684
10027674:	mov    eax,DWORD PTR [esp+0x40]
10027678:	mov    DWORD PTR [eax+0x18],0x100527a8
1002767f:	jmp    0x100276e8
10027684:	xor    ebx,ebx
10027686:	mov    DWORD PTR [esp+0x18],ebx
1002768a:	xor    esi,esi
1002768c:	mov    DWORD PTR [edi],0x19
10027692:	cmp    DWORD PTR [edi+0x8],0x0
10027696:	je     0x10027734
1002769c:	cmp    DWORD PTR [edi+0x10],0x0
100276a0:	je     0x10027734
100276a6:	cmp    esi,0x20
100276a9:	jae    0x100276d8
100276ab:	jmp    0x100276b0
100276ad:	lea    ecx,[ecx+0x0]
100276b0:	test   edx,edx
100276b2:	je     0x1002774c
100276b8:	movzx  eax,BYTE PTR [ebp+0x0]
100276bc:	mov    ecx,esi
100276be:	shl    eax,cl
100276c0:	sub    edx,0x1
100276c3:	add    esi,0x8
100276c6:	add    ebp,0x1
100276c9:	add    ebx,eax
100276cb:	cmp    esi,0x20
100276ce:	mov    DWORD PTR [esp+0x10],edx
100276d2:	mov    DWORD PTR [esp+0x18],ebx
100276d6:	jb     0x100276b0
100276d8:	cmp    ebx,DWORD PTR [edi+0x1c]
100276db:	je     0x10027730
100276dd:	mov    ecx,DWORD PTR [esp+0x40]
100276e1:	mov    DWORD PTR [ecx+0x18],0x10052790
100276e8:	mov    DWORD PTR [edi],0x1b
100276ee:	mov    eax,DWORD PTR [edi]
100276f0:	cmp    eax,0x1c
100276f3:	jbe    0x10026370
100276f9:	mov    eax,0xfffffffe
100276fe:	pop    esi
100276ff:	pop    ebp
10027700:	pop    ebx
10027701:	pop    edi
10027702:	add    esp,0x2c
10027705:	ret    
10027706:	mov    eax,DWORD PTR [esp+0x40]
1002770a:	mov    ecx,DWORD PTR [esp+0x28]
1002770e:	mov    DWORD PTR [eax+0xc],ecx
10027711:	mov    ecx,DWORD PTR [esp+0x1c]
10027715:	mov    DWORD PTR [eax],ebp
10027717:	mov    DWORD PTR [eax+0x10],ecx
1002771a:	mov    DWORD PTR [eax+0x4],edx
1002771d:	mov    DWORD PTR [edi+0x3c],esi
10027720:	pop    esi
10027721:	pop    ebp
10027722:	mov    DWORD PTR [edi+0x38],ebx
10027725:	pop    ebx
10027726:	mov    eax,0x2
1002772b:	pop    edi
1002772c:	add    esp,0x2c
1002772f:	ret    
10027730:	xor    ebx,ebx
10027732:	xor    esi,esi
10027734:	mov    DWORD PTR [edi],0x1a
1002773a:	mov    DWORD PTR [esp+0x30],0x1
10027742:	jmp    0x1002774c
10027744:	mov    DWORD PTR [esp+0x30],0xfffffffd
1002774c:	mov    eax,DWORD PTR [esp+0x40]
10027750:	mov    ecx,DWORD PTR [esp+0x28]
10027754:	mov    DWORD PTR [eax+0xc],ecx
10027757:	mov    ecx,DWORD PTR [esp+0x1c]
1002775b:	mov    DWORD PTR [eax+0x10],ecx
1002775e:	mov    DWORD PTR [eax],ebp
10027760:	mov    DWORD PTR [eax+0x4],edx
10027763:	cmp    DWORD PTR [edi+0x28],0x0
10027767:	mov    DWORD PTR [edi+0x38],ebx
1002776a:	mov    DWORD PTR [edi+0x3c],esi
1002776d:	jne    0x1002777d
1002776f:	cmp    DWORD PTR [edi],0x18
10027772:	jge    0x100277a1
10027774:	mov    edx,DWORD PTR [esp+0x2c]
10027778:	cmp    edx,DWORD PTR [eax+0x10]
1002777b:	je     0x100277a1
1002777d:	mov    eax,DWORD PTR [esp+0x2c]
10027781:	mov    ebx,DWORD PTR [esp+0x40]
10027785:	call   0x10026200
1002778a:	test   eax,eax
1002778c:	je     0x100277a1
1002778e:	mov    DWORD PTR [edi],0x1c
10027794:	pop    esi
10027795:	pop    ebp
10027796:	pop    ebx
10027797:	mov    eax,0xfffffffc
1002779c:	pop    edi
1002779d:	add    esp,0x2c
100277a0:	ret    
100277a1:	mov    esi,DWORD PTR [esp+0x40]
100277a5:	mov    ebp,DWORD PTR [esp+0x38]
100277a9:	sub    ebp,DWORD PTR [esi+0x4]
100277ac:	mov    ebx,DWORD PTR [esp+0x2c]
100277b0:	sub    ebx,DWORD PTR [esi+0x10]
100277b3:	add    DWORD PTR [esi+0x8],ebp
100277b6:	add    DWORD PTR [esi+0x14],ebx
100277b9:	add    DWORD PTR [edi+0x1c],ebx
100277bc:	cmp    DWORD PTR [edi+0x8],0x0
100277c0:	je     0x100277f6
100277c2:	test   ebx,ebx
100277c4:	je     0x100277f6
100277c6:	cmp    DWORD PTR [edi+0x10],0x0
100277ca:	push   ebx
100277cb:	je     0x100277de
100277cd:	mov    ecx,DWORD PTR [esi+0xc]
100277d0:	mov    edx,DWORD PTR [edi+0x18]
100277d3:	sub    ecx,ebx
100277d5:	push   ecx
100277d6:	push   edx
100277d7:	call   0x10029620
100277dc:	jmp    0x100277ed
100277de:	mov    eax,DWORD PTR [esi+0xc]
100277e1:	mov    ecx,DWORD PTR [edi+0x18]
100277e4:	sub    eax,ebx
100277e6:	push   eax
100277e7:	push   ecx
100277e8:	call   0x10027930
100277ed:	mov    DWORD PTR [edi+0x18],eax
100277f0:	add    esp,0xc
100277f3:	mov    DWORD PTR [esi+0x30],eax
100277f6:	mov    edx,DWORD PTR [edi+0x4]
100277f9:	neg    edx
100277fb:	sbb    edx,edx
100277fd:	and    edx,0x40
10027800:	xor    eax,eax
10027802:	cmp    DWORD PTR [edi],0xb
10027805:	setne  al
10027808:	sub    eax,0x1
1002780b:	and    eax,0x80
10027810:	add    edx,eax
10027812:	add    edx,DWORD PTR [edi+0x3c]
10027815:	test   ebp,ebp
10027817:	mov    DWORD PTR [esi+0x2c],edx
1002781a:	jne    0x10027820
1002781c:	test   ebx,ebx
1002781e:	je     0x10027827
10027820:	cmp    DWORD PTR [esp+0x44],0x4
10027825:	jne    0x10027840
10027827:	mov    eax,DWORD PTR [esp+0x30]
1002782b:	test   eax,eax
1002782d:	jne    0x100276fe
10027833:	pop    esi
10027834:	pop    ebp
10027835:	pop    ebx
10027836:	mov    eax,0xfffffffb
1002783b:	pop    edi
1002783c:	add    esp,0x2c
1002783f:	ret    
10027840:	mov    eax,DWORD PTR [esp+0x30]
10027844:	pop    esi
10027845:	pop    ebp
10027846:	pop    ebx
10027847:	pop    edi
10027848:	add    esp,0x2c
1002784b:	ret    
1002784c:	mov    eax,0xfffffffe
10027851:	pop    edi
10027852:	add    esp,0x2c
10027855:	ret    
10027856:	mov    edi,edi
10027858:	ja     0x100278bd
1002785a:	add    dl,BYTE PTR [eax]
1002785c:	in     eax,0x64
1002785e:	add    dl,BYTE PTR [eax]
10027860:	xchg   ebx,eax
10027861:	add    dl,BYTE PTR gs:[eax]
10027864:	adc    ah,BYTE PTR [esi+0x2]
10027867:	adc    BYTE PTR [esi+eiz*2+0x671f1002],dl
1002786e:	add    dl,BYTE PTR [eax]
10027870:	(bad)  [edi+0x2]
10027873:	adc    BYTE PTR [ebx+0x4a100268],dl
10027879:	imul   eax,DWORD PTR [edx],0x269e410
1002787f:	adc    BYTE PTR [edx+ebp*2+0x2],cl
10027883:	adc    BYTE PTR [eax+0x6a],bh
10027886:	add    dl,BYTE PTR [eax]
10027888:	sub    DWORD PTR [edx+0x2],0x10
1002788c:	dec    esi
1002788d:	imul   eax,DWORD PTR [edx],0x10
10027890:	mov    ebx,0x1b10026b
10027895:	ins    BYTE PTR es:[edi],dx
10027896:	add    dl,BYTE PTR [eax]
10027898:	fwait
10027899:	ins    BYTE PTR es:[edi],dx
1002789a:	add    dl,BYTE PTR [eax]
1002789c:	xchg   edx,eax
1002789d:	ins    DWORD PTR es:[edi],dx
1002789e:	add    dl,BYTE PTR [eax]
100278a0:	mov    ds:0xa7100270,eax
100278a5:	jb     0x100278a9
100278a7:	adc    dl,dh
100278a9:	jb     0x100278ad
100278ab:	adc    BYTE PTR [ecx+0x74],ch
100278ae:	add    dl,BYTE PTR [eax]
100278b0:	fdiv   DWORD PTR [edx+eax*1+0x10]
100278b4:	xchg   esp,eax
100278b5:	jne    0x100278b9
100278b7:	adc    BYTE PTR [edi-0x6deffd8b],bh
100278bd:	jbe    0x100278c1
100278bf:	adc    BYTE PTR [edx],bh
100278c1:	ja     0x100278c5
100278c3:	adc    BYTE PTR [edi+esi*2+0x2],al
100278c7:	adc    BYTE PTR [edi+esi*2+0x6ae81002],dl
100278ce:	add    dl,BYTE PTR [eax]
100278d0:	std    
100278d1:	push   0x2
100278d3:	adc    BYTE PTR [ecx],bl
100278d5:	imul   eax,DWORD PTR [edx],0x10
100278d8:	imul   eax,DWORD PTR cs:[edx],0x10
100278dc:	int3   
100278dd:	int3   
100278de:	int3   
100278df:	int3   
100278e0:	push   esi
100278e1:	mov    esi,DWORD PTR [esp+0x8]
100278e5:	test   esi,esi
100278e7:	je     0x10027923
100278e9:	mov    eax,DWORD PTR [esi+0x1c]
100278ec:	test   eax,eax
100278ee:	je     0x10027923
100278f0:	mov    ecx,DWORD PTR [esi+0x24]
100278f3:	test   ecx,ecx
100278f5:	je     0x10027923
100278f7:	mov    eax,DWORD PTR [eax+0x34]
100278fa:	test   eax,eax
100278fc:	je     0x10027908
100278fe:	push   eax
100278ff:	mov    eax,DWORD PTR [esi+0x28]
10027902:	push   eax
10027903:	call   ecx
10027905:	add    esp,0x8
10027908:	mov    ecx,DWORD PTR [esi+0x1c]
1002790b:	mov    edx,DWORD PTR [esi+0x28]
1002790e:	mov    eax,DWORD PTR [esi+0x24]
10027911:	push   ecx
10027912:	push   edx
10027913:	call   eax
10027915:	add    esp,0x8
10027918:	mov    DWORD PTR [esi+0x1c],0x0
1002791f:	xor    eax,eax
10027921:	pop    esi
10027922:	ret    
10027923:	mov    eax,0xfffffffe
10027928:	pop    esi
10027929:	ret    
1002792a:	int3   
1002792b:	int3   
1002792c:	int3   
1002792d:	int3   
1002792e:	int3   
1002792f:	int3   
10027930:	mov    ecx,DWORD PTR [esp+0x4]
10027934:	push   ebx
10027935:	mov    ebx,DWORD PTR [esp+0x10]
10027939:	push   edi
1002793a:	mov    edi,ecx
1002793c:	shr    edi,0x10
1002793f:	and    ecx,0xffff
10027945:	cmp    ebx,0x1
10027948:	jne    0x1002797b
1002794a:	mov    eax,DWORD PTR [esp+0x10]
1002794e:	movzx  edx,BYTE PTR [eax]
10027951:	add    ecx,edx
10027953:	cmp    ecx,0xfff1
10027959:	jb     0x10027961
1002795b:	sub    ecx,0xfff1
10027961:	add    edi,ecx
10027963:	cmp    edi,0xfff1
10027969:	jb     0x10027971
1002796b:	sub    edi,0xfff1
10027971:	mov    eax,edi
10027973:	shl    eax,0x10
10027976:	pop    edi
10027977:	or     eax,ecx
10027979:	pop    ebx
1002797a:	ret    
1002797b:	push   esi
1002797c:	mov    esi,DWORD PTR [esp+0x14]
10027980:	test   esi,esi
10027982:	jne    0x1002798b
10027984:	lea    eax,[esi+0x1]
10027987:	pop    esi
10027988:	pop    edi
10027989:	pop    ebx
1002798a:	ret    
1002798b:	cmp    ebx,0x10
1002798e:	jae    0x100279cf
10027990:	test   ebx,ebx
10027992:	je     0x100279a5
10027994:	movzx  eax,BYTE PTR [esi]
10027997:	add    ecx,eax
10027999:	sub    ebx,0x1
1002799c:	add    esi,0x1
1002799f:	add    edi,ecx
100279a1:	test   ebx,ebx
100279a3:	jne    0x10027994
100279a5:	cmp    ecx,0xfff1
100279ab:	jb     0x100279b3
100279ad:	sub    ecx,0xfff1
100279b3:	mov    eax,0x80078071
100279b8:	mul    edi
100279ba:	shr    edx,0xf
100279bd:	mov    eax,edx
100279bf:	shl    eax,0x4
100279c2:	sub    eax,edx
100279c4:	add    eax,edi
100279c6:	pop    esi
100279c7:	shl    eax,0x10
100279ca:	pop    edi
100279cb:	or     eax,ecx
100279cd:	pop    ebx
100279ce:	ret    
100279cf:	cmp    ebx,0x15b0
100279d5:	jb     0x10027ab9
100279db:	mov    eax,0x5e6ea9af
100279e0:	mul    ebx
100279e2:	push   ebp
100279e3:	mov    ebp,edx
100279e5:	shr    ebp,0xb
100279e8:	jmp    0x100279f0
100279ea:	lea    ebx,[ebx+0x0]
100279f0:	sub    ebx,0x15b0
100279f6:	mov    eax,0x15b
100279fb:	jmp    0x10027a00
100279fd:	lea    ecx,[ecx+0x0]
10027a00:	movzx  edx,BYTE PTR [esi]
10027a03:	add    ecx,edx
10027a05:	movzx  edx,BYTE PTR [esi+0x1]
10027a09:	add    edi,ecx
10027a0b:	add    ecx,edx
10027a0d:	movzx  edx,BYTE PTR [esi+0x2]
10027a11:	add    edi,ecx
10027a13:	add    ecx,edx
10027a15:	movzx  edx,BYTE PTR [esi+0x3]
10027a19:	add    edi,ecx
10027a1b:	add    ecx,edx
10027a1d:	movzx  edx,BYTE PTR [esi+0x4]
10027a21:	add    edi,ecx
10027a23:	add    ecx,edx
10027a25:	movzx  edx,BYTE PTR [esi+0x5]
10027a29:	add    edi,ecx
10027a2b:	add    ecx,edx
10027a2d:	movzx  edx,BYTE PTR [esi+0x6]
10027a31:	add    edi,ecx
10027a33:	add    ecx,edx
10027a35:	movzx  edx,BYTE PTR [esi+0x7]
10027a39:	add    edi,ecx
10027a3b:	add    ecx,edx
10027a3d:	movzx  edx,BYTE PTR [esi+0x8]
10027a41:	add    edi,ecx
10027a43:	add    ecx,edx
10027a45:	movzx  edx,BYTE PTR [esi+0x9]
10027a49:	add    edi,ecx
10027a4b:	add    ecx,edx
10027a4d:	movzx  edx,BYTE PTR [esi+0xa]
10027a51:	add    edi,ecx
10027a53:	add    ecx,edx
10027a55:	movzx  edx,BYTE PTR [esi+0xb]
10027a59:	add    edi,ecx
10027a5b:	add    ecx,edx
10027a5d:	movzx  edx,BYTE PTR [esi+0xc]
10027a61:	add    edi,ecx
10027a63:	add    ecx,edx
10027a65:	movzx  edx,BYTE PTR [esi+0xd]
10027a69:	add    edi,ecx
10027a6b:	add    ecx,edx
10027a6d:	movzx  edx,BYTE PTR [esi+0xe]
10027a71:	add    edi,ecx
10027a73:	add    ecx,edx
10027a75:	movzx  edx,BYTE PTR [esi+0xf]
10027a79:	add    edi,ecx
10027a7b:	add    ecx,edx
10027a7d:	add    edi,ecx
10027a7f:	add    esi,0x10
10027a82:	sub    eax,0x1
10027a85:	jne    0x10027a00
10027a8b:	mov    eax,0x80078071
10027a90:	mul    ecx
10027a92:	shr    edx,0xf
10027a95:	imul   edx,edx,0xffff000f
10027a9b:	add    ecx,edx
10027a9d:	mov    eax,0x80078071
10027aa2:	mul    edi
10027aa4:	shr    edx,0xf
10027aa7:	imul   edx,edx,0xffff000f
10027aad:	add    edi,edx
10027aaf:	sub    ebp,0x1
10027ab2:	jne    0x100279f0
10027ab8:	pop    ebp
10027ab9:	test   ebx,ebx
10027abb:	je     0x10027b97
10027ac1:	cmp    ebx,0x10
10027ac4:	jb     0x10027b5e
10027aca:	mov    eax,ebx
10027acc:	shr    eax,0x4
10027acf:	nop
10027ad0:	movzx  edx,BYTE PTR [esi]
10027ad3:	add    ecx,edx
10027ad5:	movzx  edx,BYTE PTR [esi+0x1]
10027ad9:	add    edi,ecx
10027adb:	add    ecx,edx
10027add:	movzx  edx,BYTE PTR [esi+0x2]
10027ae1:	add    edi,ecx
10027ae3:	add    ecx,edx
10027ae5:	movzx  edx,BYTE PTR [esi+0x3]
10027ae9:	add    edi,ecx
10027aeb:	add    ecx,edx
10027aed:	movzx  edx,BYTE PTR [esi+0x4]
10027af1:	add    edi,ecx
10027af3:	add    ecx,edx
10027af5:	movzx  edx,BYTE PTR [esi+0x5]
10027af9:	add    edi,ecx
10027afb:	add    ecx,edx
10027afd:	movzx  edx,BYTE PTR [esi+0x6]
10027b01:	add    edi,ecx
10027b03:	add    ecx,edx
10027b05:	movzx  edx,BYTE PTR [esi+0x7]
10027b09:	add    edi,ecx
10027b0b:	add    ecx,edx
10027b0d:	movzx  edx,BYTE PTR [esi+0x8]
10027b11:	add    edi,ecx
10027b13:	add    ecx,edx
10027b15:	movzx  edx,BYTE PTR [esi+0x9]
10027b19:	add    edi,ecx
10027b1b:	add    ecx,edx
10027b1d:	movzx  edx,BYTE PTR [esi+0xa]
10027b21:	add    edi,ecx
10027b23:	add    ecx,edx
10027b25:	movzx  edx,BYTE PTR [esi+0xb]
10027b29:	add    edi,ecx
10027b2b:	add    ecx,edx
10027b2d:	movzx  edx,BYTE PTR [esi+0xc]
10027b31:	add    edi,ecx
10027b33:	add    ecx,edx
10027b35:	movzx  edx,BYTE PTR [esi+0xd]
10027b39:	add    edi,ecx
10027b3b:	add    ecx,edx
10027b3d:	movzx  edx,BYTE PTR [esi+0xe]
10027b41:	add    edi,ecx
10027b43:	add    ecx,edx
10027b45:	movzx  edx,BYTE PTR [esi+0xf]
10027b49:	add    edi,ecx
10027b4b:	add    ecx,edx
10027b4d:	sub    ebx,0x10
10027b50:	add    edi,ecx
10027b52:	add    esi,0x10
10027b55:	sub    eax,0x1
10027b58:	jne    0x10027ad0
10027b5e:	test   ebx,ebx
10027b60:	je     0x10027b73
10027b62:	movzx  eax,BYTE PTR [esi]
10027b65:	add    ecx,eax
10027b67:	sub    ebx,0x1
10027b6a:	add    esi,0x1
10027b6d:	add    edi,ecx
10027b6f:	test   ebx,ebx
10027b71:	jne    0x10027b62
10027b73:	mov    eax,0x80078071
10027b78:	mul    ecx
10027b7a:	shr    edx,0xf
10027b7d:	imul   edx,edx,0xffff000f
10027b83:	add    ecx,edx
10027b85:	mov    eax,0x80078071
10027b8a:	mul    edi
10027b8c:	shr    edx,0xf
10027b8f:	imul   edx,edx,0xffff000f
10027b95:	add    edi,edx
10027b97:	mov    eax,edi
10027b99:	pop    esi
10027b9a:	shl    eax,0x10
10027b9d:	pop    edi
10027b9e:	or     eax,ecx
10027ba0:	pop    ebx
10027ba1:	ret    
10027ba2:	int3   
10027ba3:	int3   
10027ba4:	int3   
10027ba5:	int3   
10027ba6:	int3   
10027ba7:	int3   
10027ba8:	int3   
10027ba9:	int3   
10027baa:	int3   
10027bab:	int3   
10027bac:	int3   
10027bad:	int3   
10027bae:	int3   
10027baf:	int3   
10027bb0:	push   esi
10027bb1:	lea    eax,[edx+0x94]
10027bb7:	mov    ecx,0x11e
10027bbc:	xor    esi,esi
10027bbe:	mov    edi,edi
10027bc0:	mov    WORD PTR [eax],si
10027bc3:	add    eax,0x4
10027bc6:	sub    ecx,0x1
10027bc9:	jne    0x10027bc0
10027bcb:	lea    eax,[edx+0x988]
10027bd1:	mov    ecx,0x1e
10027bd6:	mov    WORD PTR [eax],si
10027bd9:	add    eax,0x4
10027bdc:	sub    ecx,0x1
10027bdf:	jne    0x10027bd6
10027be1:	lea    eax,[edx+0xa7c]
10027be7:	mov    ecx,0x13
10027bec:	lea    esp,[esp+0x0]
10027bf0:	mov    WORD PTR [eax],si
10027bf3:	add    eax,0x4
10027bf6:	sub    ecx,0x1
10027bf9:	jne    0x10027bf0
10027bfb:	mov    DWORD PTR [edx+0x16ac],esi
10027c01:	mov    DWORD PTR [edx+0x16a8],esi
10027c07:	mov    DWORD PTR [edx+0x16b0],esi
10027c0d:	mov    DWORD PTR [edx+0x16a0],esi
10027c13:	mov    WORD PTR [edx+0x494],0x1
10027c1c:	pop    esi
10027c1d:	ret    
10027c1e:	int3   
10027c1f:	int3   
10027c20:	push   ecx
10027c21:	mov    edx,DWORD PTR [eax+0x1450]
10027c27:	push   ebp
10027c28:	push   esi
10027c29:	mov    esi,DWORD PTR [esp+0x10]
10027c2d:	mov    ebp,DWORD PTR [eax+esi*4+0xb5c]
10027c34:	lea    ecx,[esi+esi*1]
10027c37:	cmp    ecx,edx
10027c39:	mov    DWORD PTR [esp+0x8],ebp
10027c3d:	jg     0x10027cdb
10027c43:	push   ebx
10027c44:	jge    0x10027c7a
10027c46:	mov    esi,DWORD PTR [eax+ecx*4+0xb60]
10027c4d:	mov    ebp,DWORD PTR [eax+ecx*4+0xb5c]
10027c54:	movzx  edx,WORD PTR [edi+esi*4]
10027c58:	movzx  ebx,WORD PTR [edi+ebp*4]
10027c5c:	cmp    dx,bx
10027c5f:	jb     0x10027c73
10027c61:	jne    0x10027c76
10027c63:	mov    dl,BYTE PTR [esi+eax*1+0x1458]
10027c6a:	cmp    dl,BYTE PTR [eax+ebp*1+0x1458]
10027c71:	ja     0x10027c76
10027c73:	add    ecx,0x1
10027c76:	mov    ebp,DWORD PTR [esp+0xc]
10027c7a:	mov    esi,DWORD PTR [eax+ecx*4+0xb5c]
10027c81:	movzx  edx,WORD PTR [edi+ebp*4]
10027c85:	movzx  ebx,WORD PTR [edi+esi*4]
10027c89:	cmp    dx,bx
10027c8c:	jb     0x10027cbb
10027c8e:	jne    0x10027ca0
10027c90:	mov    dl,BYTE PTR [eax+ebp*1+0x1458]
10027c97:	cmp    dl,BYTE PTR [esi+eax*1+0x1458]
10027c9e:	jbe    0x10027ccb
10027ca0:	mov    edx,DWORD PTR [esp+0x14]
10027ca4:	mov    DWORD PTR [eax+edx*4+0xb5c],esi
10027cab:	mov    edx,DWORD PTR [eax+0x1450]
10027cb1:	mov    DWORD PTR [esp+0x14],ecx
10027cb5:	add    ecx,ecx
10027cb7:	cmp    ecx,edx
10027cb9:	jle    0x10027c44
10027cbb:	mov    ecx,DWORD PTR [esp+0x14]
10027cbf:	pop    ebx
10027cc0:	pop    esi
10027cc1:	mov    DWORD PTR [eax+ecx*4+0xb5c],ebp
10027cc8:	pop    ebp
10027cc9:	pop    ecx
10027cca:	ret    
10027ccb:	mov    edx,DWORD PTR [esp+0x14]
10027ccf:	pop    ebx
10027cd0:	pop    esi
10027cd1:	mov    DWORD PTR [eax+edx*4+0xb5c],ebp
10027cd8:	pop    ebp
10027cd9:	pop    ecx
10027cda:	ret    
10027cdb:	mov    DWORD PTR [eax+esi*4+0xb5c],ebp
10027ce2:	pop    esi
10027ce3:	pop    ebp
10027ce4:	pop    ecx
10027ce5:	ret    
10027ce6:	int3   
10027ce7:	int3   
10027ce8:	int3   
10027ce9:	int3   
10027cea:	int3   
10027ceb:	int3   
10027cec:	int3   
10027ced:	int3   
10027cee:	int3   
10027cef:	int3   
10027cf0:	sub    esp,0x20
10027cf3:	mov    edx,DWORD PTR [ecx+0x4]
10027cf6:	push   ebx
10027cf7:	mov    ebx,DWORD PTR [ecx]
10027cf9:	mov    ecx,DWORD PTR [ecx+0x8]
10027cfc:	mov    DWORD PTR [esp+0x18],edx
10027d00:	mov    edx,DWORD PTR [ecx+0x4]
10027d03:	push   ebp
10027d04:	mov    ebp,DWORD PTR [ecx]
10027d06:	mov    DWORD PTR [esp+0x24],edx
10027d0a:	mov    edx,DWORD PTR [ecx+0x8]
10027d0d:	push   esi
10027d0e:	mov    esi,DWORD PTR [ecx+0x10]
10027d11:	xor    ecx,ecx
10027d13:	mov    DWORD PTR [eax+0xb3c],ecx
10027d19:	mov    DWORD PTR [eax+0xb40],ecx
10027d1f:	mov    DWORD PTR [eax+0xb44],ecx
10027d25:	mov    DWORD PTR [eax+0xb48],ecx
10027d2b:	mov    DWORD PTR [eax+0xb4c],ecx
10027d31:	mov    DWORD PTR [eax+0xb50],ecx
10027d37:	mov    DWORD PTR [eax+0xb54],ecx
10027d3d:	mov    DWORD PTR [eax+0xb58],ecx
10027d43:	mov    DWORD PTR [esp+0x24],edx
10027d47:	mov    edx,DWORD PTR [eax+0x1454]
10027d4d:	mov    edx,DWORD PTR [eax+edx*4+0xb5c]
10027d54:	push   edi
10027d55:	mov    WORD PTR [ebx+edx*4+0x2],cx
10027d5a:	mov    edi,DWORD PTR [eax+0x1454]
10027d60:	add    edi,0x1
10027d63:	cmp    edi,0x23d
10027d69:	mov    DWORD PTR [esp+0x1c],esi
10027d6d:	mov    DWORD PTR [esp+0x18],ecx
10027d71:	jge    0x10027eff
10027d77:	lea    ecx,[eax+edi*4+0xb5c]
10027d7e:	mov    DWORD PTR [esp+0x14],ecx
10027d82:	mov    ecx,0x23d
10027d87:	sub    ecx,edi
10027d89:	add    edi,ecx
10027d8b:	mov    DWORD PTR [esp+0x20],ecx
10027d8f:	mov    DWORD PTR [esp+0x10],edi
10027d93:	jmp    0x10027d99
10027d95:	mov    esi,DWORD PTR [esp+0x1c]
10027d99:	mov    edx,DWORD PTR [esp+0x14]
10027d9d:	mov    edx,DWORD PTR [edx]
10027d9f:	movzx  ecx,WORD PTR [ebx+edx*4+0x2]
10027da4:	movzx  ecx,WORD PTR [ebx+ecx*4+0x2]
10027da9:	add    ecx,0x1
10027dac:	cmp    ecx,esi
10027dae:	jle    0x10027db7
10027db0:	add    DWORD PTR [esp+0x18],0x1
10027db5:	mov    ecx,esi
10027db7:	cmp    edx,DWORD PTR [esp+0x24]
10027dbb:	mov    WORD PTR [ebx+edx*4+0x2],cx
10027dc0:	jg     0x10027e0a
10027dc2:	mov    edi,DWORD PTR [esp+0x28]
10027dc6:	add    WORD PTR [eax+ecx*2+0xb3c],0x1
10027dcf:	xor    esi,esi
10027dd1:	cmp    edx,edi
10027dd3:	jl     0x10027de0
10027dd5:	mov    esi,edx
10027dd7:	sub    esi,edi
10027dd9:	mov    edi,DWORD PTR [esp+0x2c]
10027ddd:	mov    esi,DWORD PTR [edi+esi*4]
10027de0:	movzx  edi,WORD PTR [ebx+edx*4]
10027de4:	movzx  edi,di
10027de7:	add    ecx,esi
10027de9:	imul   ecx,edi
10027dec:	add    DWORD PTR [eax+0x16a8],ecx
10027df2:	test   ebp,ebp
10027df4:	je     0x10027e06
10027df6:	movzx  edx,WORD PTR [ebp+edx*4+0x2]
10027dfb:	add    edx,esi
10027dfd:	imul   edx,edi
10027e00:	add    DWORD PTR [eax+0x16ac],edx
10027e06:	mov    edi,DWORD PTR [esp+0x10]
10027e0a:	add    DWORD PTR [esp+0x14],0x4
10027e0f:	sub    DWORD PTR [esp+0x20],0x1
10027e14:	jne    0x10027d95
10027e1a:	mov    ebp,DWORD PTR [esp+0x18]
10027e1e:	test   ebp,ebp
10027e20:	je     0x10027eff
10027e26:	mov    ecx,DWORD PTR [esp+0x1c]
10027e2a:	lea    edx,[ecx-0x1]
10027e2d:	mov    DWORD PTR [esp+0x2c],edx
10027e31:	lea    esi,[eax+ecx*2+0xb3c]
10027e38:	jmp    0x10027e40
10027e3a:	lea    ebx,[ebx+0x0]
10027e40:	mov    ecx,DWORD PTR [esp+0x2c]
10027e44:	cmp    WORD PTR [eax+ecx*2+0xb3c],0x0
10027e4d:	lea    edx,[eax+ecx*2+0xb3c]
10027e54:	jne    0x10027e62
10027e56:	sub    edx,0x2
10027e59:	sub    ecx,0x1
10027e5c:	cmp    WORD PTR [edx],0x0
10027e60:	je     0x10027e56
10027e62:	add    WORD PTR [eax+ecx*2+0xb3c],0xffff
10027e6c:	add    WORD PTR [eax+ecx*2+0xb3e],0x2
10027e75:	add    WORD PTR [esi],0xffff
10027e7a:	sub    ebp,0x2
10027e7d:	test   ebp,ebp
10027e7f:	jg     0x10027e40
10027e81:	mov    edx,DWORD PTR [esp+0x1c]
10027e85:	test   edx,edx
10027e87:	je     0x10027eff
10027e89:	mov    DWORD PTR [esp+0x20],esi
10027e8d:	lea    ecx,[ecx+0x0]
10027e90:	movzx  esi,WORD PTR [esi]
10027e93:	test   esi,esi
10027e95:	mov    DWORD PTR [esp+0x1c],esi
10027e99:	je     0x10027eed
10027e9b:	lea    ebp,[eax+edi*4+0xb5c]
10027ea2:	mov    ecx,DWORD PTR [ebp-0x4]
10027ea5:	sub    DWORD PTR [esp+0x10],0x1
10027eaa:	sub    ebp,0x4
10027ead:	cmp    ecx,DWORD PTR [esp+0x24]
10027eb1:	mov    DWORD PTR [esp+0x2c],ebp
10027eb5:	jg     0x10027ee5
10027eb7:	movzx  edi,WORD PTR [ebx+ecx*4+0x2]
10027ebc:	cmp    edi,edx
10027ebe:	lea    esi,[ebx+ecx*4+0x2]
10027ec2:	je     0x10027edc
10027ec4:	movzx  ecx,WORD PTR [ebx+ecx*4]
10027ec8:	mov    ebp,edx
10027eca:	sub    ebp,edi
10027ecc:	imul   ebp,ecx
10027ecf:	add    DWORD PTR [eax+0x16a8],ebp
10027ed5:	mov    ebp,DWORD PTR [esp+0x2c]
10027ed9:	mov    WORD PTR [esi],dx
10027edc:	sub    DWORD PTR [esp+0x1c],0x1
10027ee1:	mov    esi,DWORD PTR [esp+0x1c]
10027ee5:	test   esi,esi
10027ee7:	jne    0x10027ea2
10027ee9:	mov    edi,DWORD PTR [esp+0x10]
10027eed:	mov    esi,DWORD PTR [esp+0x20]
10027ef1:	sub    edx,0x1
10027ef4:	sub    esi,0x2
10027ef7:	test   edx,edx
10027ef9:	mov    DWORD PTR [esp+0x20],esi
10027efd:	jne    0x10027e90
10027eff:	pop    edi
10027f00:	pop    esi
10027f01:	pop    ebp
10027f02:	pop    ebx
10027f03:	add    esp,0x20
10027f06:	ret    
10027f07:	int3   
10027f08:	int3   
10027f09:	int3   
10027f0a:	int3   
10027f0b:	int3   
10027f0c:	int3   
10027f0d:	int3   
10027f0e:	int3   
10027f0f:	int3   
10027f10:	sub    esp,0xc
10027f13:	push   ebx
10027f14:	push   ebp
10027f15:	mov    ebp,DWORD PTR [esp+0x18]
10027f19:	push   esi
10027f1a:	push   edi
10027f1b:	movzx  edi,WORD PTR [eax+0x2]
10027f1f:	xor    edx,edx
10027f21:	test   edi,edi
10027f23:	mov    ebx,ecx
10027f25:	mov    DWORD PTR [esp+0x14],0xffffffff
10027f2d:	lea    ecx,[edx+0x7]
10027f30:	lea    esi,[edx+0x4]
10027f33:	jne    0x10027f3d
10027f35:	mov    ecx,0x8a
10027f3a:	lea    esi,[edx+0x3]
10027f3d:	test   ebx,ebx
10027f3f:	mov    WORD PTR [eax+ebx*4+0x6],0xffff
10027f46:	jl     0x10027fea
10027f4c:	add    eax,0x6
10027f4f:	add    ebx,0x1
10027f52:	mov    DWORD PTR [esp+0x18],ebx
10027f56:	mov    DWORD PTR [esp+0x10],eax
10027f5a:	mov    ebx,0x1
10027f5f:	nop
10027f60:	mov    eax,edi
10027f62:	mov    edi,DWORD PTR [esp+0x10]
10027f66:	movzx  edi,WORD PTR [edi]
10027f69:	add    edx,ebx
10027f6b:	cmp    edx,ecx
10027f6d:	jge    0x10027f73
10027f6f:	cmp    eax,edi
10027f71:	je     0x10027fdb
10027f73:	cmp    edx,esi
10027f75:	jge    0x10027f81
10027f77:	add    WORD PTR [ebp+eax*4+0xa7c],dx
10027f7f:	jmp    0x10027fb1
10027f81:	test   eax,eax
10027f83:	je     0x10027f9c
10027f85:	cmp    eax,DWORD PTR [esp+0x14]
10027f89:	je     0x10027f93
10027f8b:	add    WORD PTR [ebp+eax*4+0xa7c],bx
10027f93:	add    WORD PTR [ebp+0xabc],bx
10027f9a:	jmp    0x10027fb1
10027f9c:	cmp    edx,0xa
10027f9f:	jg     0x10027faa
10027fa1:	add    WORD PTR [ebp+0xac0],bx
10027fa8:	jmp    0x10027fb1
10027faa:	add    WORD PTR [ebp+0xac4],bx
10027fb1:	xor    edx,edx
10027fb3:	test   edi,edi
10027fb5:	mov    DWORD PTR [esp+0x14],eax
10027fb9:	jne    0x10027fc5
10027fbb:	mov    ecx,0x8a
10027fc0:	lea    esi,[edx+0x3]
10027fc3:	jmp    0x10027fdb
10027fc5:	cmp    eax,edi
10027fc7:	jne    0x10027fd3
10027fc9:	mov    ecx,0x6
10027fce:	lea    esi,[ecx-0x3]
10027fd1:	jmp    0x10027fdb
10027fd3:	mov    ecx,0x7
10027fd8:	lea    esi,[ecx-0x3]
10027fdb:	add    DWORD PTR [esp+0x10],0x4
10027fe0:	sub    DWORD PTR [esp+0x18],ebx
10027fe4:	jne    0x10027f60
10027fea:	pop    edi
10027feb:	pop    esi
10027fec:	pop    ebp
10027fed:	pop    ebx
10027fee:	add    esp,0xc
10027ff1:	ret    
10027ff2:	int3   
10027ff3:	int3   
10027ff4:	int3   
10027ff5:	int3   
10027ff6:	int3   
10027ff7:	int3   
10027ff8:	int3   
10027ff9:	int3   
10027ffa:	int3   
10027ffb:	int3   
10027ffc:	int3   
10027ffd:	int3   
10027ffe:	int3   
10027fff:	int3   
10028000:	sub    esp,0x18
10028003:	push   ebx
10028004:	push   ebp
10028005:	movzx  ebp,WORD PTR [edx+0x2]
10028009:	push   esi
1002800a:	xor    esi,esi
1002800c:	test   ebp,ebp
1002800e:	push   edi
1002800f:	mov    ebx,ecx
10028011:	mov    DWORD PTR [esp+0x1c],0xffffffff
10028019:	mov    DWORD PTR [esp+0x14],ebp
1002801d:	lea    ecx,[esi+0x7]
10028020:	lea    edi,[esi+0x4]
10028023:	jne    0x1002802d
10028025:	mov    ecx,0x8a
1002802a:	lea    edi,[ebp+0x3]
1002802d:	test   ebx,ebx
1002802f:	jl     0x10028503
10028035:	add    edx,0x6
10028038:	add    ebx,0x1
1002803b:	mov    DWORD PTR [esp+0x18],edx
1002803f:	mov    DWORD PTR [esp+0x20],ebx
10028043:	mov    ebp,0x1
10028048:	jmp    0x10028050
1002804a:	lea    ebx,[ebx+0x0]
10028050:	mov    ebx,DWORD PTR [esp+0x18]
10028054:	movzx  ebx,WORD PTR [ebx]
10028057:	mov    edx,DWORD PTR [esp+0x14]
1002805b:	add    esi,ebp
1002805d:	cmp    esi,ecx
1002805f:	mov    DWORD PTR [esp+0x24],edx
10028063:	mov    DWORD PTR [esp+0x14],ebx
10028067:	mov    DWORD PTR [esp+0x10],esi
1002806b:	jge    0x10028075
1002806d:	cmp    edx,ebx
1002806f:	je     0x100284f4
10028075:	cmp    esi,edi
10028077:	jge    0x1002811f
1002807d:	lea    ecx,[ecx+0x0]
10028080:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
10028088:	mov    ecx,DWORD PTR [eax+0x16bc]
1002808e:	mov    ebx,0x10
10028093:	sub    ebx,edi
10028095:	cmp    ecx,ebx
10028097:	jle    0x100280f4
10028099:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
100280a1:	mov    edx,esi
100280a3:	shl    edx,cl
100280a5:	mov    ecx,DWORD PTR [eax+0x8]
100280a8:	or     WORD PTR [eax+0x16b8],dx
100280af:	movzx  ebx,BYTE PTR [eax+0x16b8]
100280b6:	mov    edx,DWORD PTR [eax+0x14]
100280b9:	mov    BYTE PTR [ecx+edx*1],bl
100280bc:	add    DWORD PTR [eax+0x14],ebp
100280bf:	mov    ecx,DWORD PTR [eax+0x14]
100280c2:	movzx  ebx,BYTE PTR [eax+0x16b9]
100280c9:	mov    edx,DWORD PTR [eax+0x8]
100280cc:	mov    BYTE PTR [ecx+edx*1],bl
100280cf:	mov    edx,DWORD PTR [eax+0x16bc]
100280d5:	add    DWORD PTR [eax+0x14],ebp
100280d8:	mov    cl,0x10
100280da:	sub    cl,dl
100280dc:	shr    si,cl
100280df:	lea    ecx,[edx+edi*1-0x10]
100280e3:	mov    edx,DWORD PTR [esp+0x24]
100280e7:	mov    WORD PTR [eax+0x16b8],si
100280ee:	mov    esi,DWORD PTR [esp+0x10]
100280f2:	jmp    0x10028108
100280f4:	mov    bx,WORD PTR [eax+edx*4+0xa7c]
100280fc:	shl    bx,cl
100280ff:	or     WORD PTR [eax+0x16b8],bx
10028106:	add    ecx,edi
10028108:	sub    esi,ebp
1002810a:	mov    DWORD PTR [eax+0x16bc],ecx
10028110:	mov    DWORD PTR [esp+0x10],esi
10028114:	jne    0x10028080
1002811a:	jmp    0x100284c6
1002811f:	test   edx,edx
10028121:	je     0x100282cc
10028127:	cmp    edx,DWORD PTR [esp+0x1c]
1002812b:	je     0x100281cd
10028131:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
10028139:	mov    ecx,DWORD PTR [eax+0x16bc]
1002813f:	mov    ebx,0x10
10028144:	sub    ebx,edi
10028146:	cmp    ecx,ebx
10028148:	mov    DWORD PTR [esp+0x1c],edi
1002814c:	jle    0x100281a9
1002814e:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
10028156:	mov    edi,esi
10028158:	shl    edi,cl
1002815a:	mov    ecx,DWORD PTR [eax+0x8]
1002815d:	or     WORD PTR [eax+0x16b8],di
10028164:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002816b:	mov    edi,DWORD PTR [eax+0x14]
1002816e:	mov    BYTE PTR [ecx+edi*1],bl
10028171:	add    DWORD PTR [eax+0x14],ebp
10028174:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002817b:	mov    ecx,DWORD PTR [eax+0x8]
1002817e:	mov    edi,DWORD PTR [eax+0x14]
10028181:	mov    BYTE PTR [edi+ecx*1],bl
10028184:	mov    ebx,DWORD PTR [eax+0x16bc]
1002818a:	add    DWORD PTR [eax+0x14],ebp
1002818d:	mov    cl,0x10
1002818f:	sub    cl,bl
10028191:	shr    si,cl
10028194:	mov    ecx,DWORD PTR [esp+0x1c]
10028198:	lea    ecx,[ebx+ecx*1-0x10]
1002819c:	mov    WORD PTR [eax+0x16b8],si
100281a3:	mov    esi,DWORD PTR [esp+0x10]
100281a7:	jmp    0x100281c1
100281a9:	mov    di,WORD PTR [eax+edx*4+0xa7c]
100281b1:	shl    di,cl
100281b4:	or     WORD PTR [eax+0x16b8],di
100281bb:	mov    edi,DWORD PTR [esp+0x1c]
100281bf:	add    ecx,edi
100281c1:	sub    esi,ebp
100281c3:	mov    DWORD PTR [eax+0x16bc],ecx
100281c9:	mov    DWORD PTR [esp+0x10],esi
100281cd:	movzx  edi,WORD PTR [eax+0xabe]
100281d4:	mov    ecx,DWORD PTR [eax+0x16bc]
100281da:	mov    ebx,0x10
100281df:	sub    ebx,edi
100281e1:	cmp    ecx,ebx
100281e3:	mov    DWORD PTR [esp+0x1c],edi
100281e7:	jle    0x10028243
100281e9:	movzx  esi,WORD PTR [eax+0xabc]
100281f0:	mov    edi,esi
100281f2:	shl    edi,cl
100281f4:	mov    ecx,DWORD PTR [eax+0x8]
100281f7:	or     WORD PTR [eax+0x16b8],di
100281fe:	movzx  ebx,BYTE PTR [eax+0x16b8]
10028205:	mov    edi,DWORD PTR [eax+0x14]
10028208:	mov    BYTE PTR [ecx+edi*1],bl
1002820b:	add    DWORD PTR [eax+0x14],ebp
1002820e:	movzx  ebx,BYTE PTR [eax+0x16b9]
10028215:	mov    ecx,DWORD PTR [eax+0x8]
10028218:	mov    edi,DWORD PTR [eax+0x14]
1002821b:	mov    BYTE PTR [edi+ecx*1],bl
1002821e:	mov    ebx,DWORD PTR [eax+0x16bc]
10028224:	add    DWORD PTR [eax+0x14],ebp
10028227:	mov    cl,0x10
10028229:	sub    cl,bl
1002822b:	shr    si,cl
1002822e:	mov    ecx,DWORD PTR [esp+0x1c]
10028232:	lea    ecx,[ebx+ecx*1-0x10]
10028236:	mov    WORD PTR [eax+0x16b8],si
1002823d:	mov    esi,DWORD PTR [esp+0x10]
10028241:	jmp    0x1002825a
10028243:	mov    di,WORD PTR [eax+0xabc]
1002824a:	shl    di,cl
1002824d:	or     WORD PTR [eax+0x16b8],di
10028254:	mov    edi,DWORD PTR [esp+0x1c]
10028258:	add    ecx,edi
1002825a:	add    esi,0xfffffffd
1002825d:	cmp    ecx,0xe
10028260:	mov    DWORD PTR [eax+0x16bc],ecx
10028266:	jle    0x100282bb
10028268:	mov    edi,esi
1002826a:	shl    edi,cl
1002826c:	mov    ecx,DWORD PTR [eax+0x8]
1002826f:	or     WORD PTR [eax+0x16b8],di
10028276:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002827d:	mov    edi,DWORD PTR [eax+0x14]
10028280:	mov    BYTE PTR [ecx+edi*1],bl
10028283:	add    DWORD PTR [eax+0x14],ebp
10028286:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002828d:	mov    edi,DWORD PTR [eax+0x14]
10028290:	mov    ecx,DWORD PTR [eax+0x8]
10028293:	mov    BYTE PTR [edi+ecx*1],bl
10028296:	mov    ebx,DWORD PTR [eax+0x16bc]
1002829c:	add    DWORD PTR [eax+0x14],ebp
1002829f:	mov    cl,0x10
100282a1:	sub    cl,bl
100282a3:	shr    si,cl
100282a6:	add    ebx,0xfffffff2
100282a9:	mov    DWORD PTR [eax+0x16bc],ebx
100282af:	mov    WORD PTR [eax+0x16b8],si
100282b6:	jmp    0x100284c6
100282bb:	shl    esi,cl
100282bd:	or     WORD PTR [eax+0x16b8],si
100282c4:	add    ecx,0x2
100282c7:	jmp    0x100284c0
100282cc:	cmp    esi,0xa
100282cf:	mov    ecx,DWORD PTR [eax+0x16bc]
100282d5:	mov    ebx,0x10
100282da:	jg     0x100283d4
100282e0:	movzx  edi,WORD PTR [eax+0xac2]
100282e7:	sub    ebx,edi
100282e9:	cmp    ecx,ebx
100282eb:	mov    DWORD PTR [esp+0x1c],edi
100282ef:	jle    0x1002834b
100282f1:	movzx  esi,WORD PTR [eax+0xac0]
100282f8:	mov    edi,esi
100282fa:	shl    edi,cl
100282fc:	mov    ecx,DWORD PTR [eax+0x8]
100282ff:	or     WORD PTR [eax+0x16b8],di
10028306:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002830d:	mov    edi,DWORD PTR [eax+0x14]
10028310:	mov    BYTE PTR [ecx+edi*1],bl
10028313:	add    DWORD PTR [eax+0x14],ebp
10028316:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002831d:	mov    ecx,DWORD PTR [eax+0x8]
10028320:	mov    edi,DWORD PTR [eax+0x14]
10028323:	mov    BYTE PTR [edi+ecx*1],bl
10028326:	mov    ebx,DWORD PTR [eax+0x16bc]
1002832c:	add    DWORD PTR [eax+0x14],ebp
1002832f:	mov    cl,0x10
10028331:	sub    cl,bl
10028333:	shr    si,cl
10028336:	mov    ecx,DWORD PTR [esp+0x1c]
1002833a:	lea    ecx,[ebx+ecx*1-0x10]
1002833e:	mov    WORD PTR [eax+0x16b8],si
10028345:	mov    esi,DWORD PTR [esp+0x10]
10028349:	jmp    0x10028362
1002834b:	mov    di,WORD PTR [eax+0xac0]
10028352:	shl    di,cl
10028355:	or     WORD PTR [eax+0x16b8],di
1002835c:	mov    edi,DWORD PTR [esp+0x1c]
10028360:	add    ecx,edi
10028362:	add    esi,0xfffffffd
10028365:	cmp    ecx,0xd
10028368:	mov    DWORD PTR [eax+0x16bc],ecx
1002836e:	jle    0x100283c3
10028370:	mov    edi,esi
10028372:	shl    edi,cl
10028374:	mov    ecx,DWORD PTR [eax+0x8]
10028377:	or     WORD PTR [eax+0x16b8],di
1002837e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10028385:	mov    edi,DWORD PTR [eax+0x14]
10028388:	mov    BYTE PTR [ecx+edi*1],bl
1002838b:	add    DWORD PTR [eax+0x14],ebp
1002838e:	movzx  ebx,BYTE PTR [eax+0x16b9]
10028395:	mov    edi,DWORD PTR [eax+0x14]
10028398:	mov    ecx,DWORD PTR [eax+0x8]
1002839b:	mov    BYTE PTR [edi+ecx*1],bl
1002839e:	mov    ebx,DWORD PTR [eax+0x16bc]
100283a4:	add    DWORD PTR [eax+0x14],ebp
100283a7:	mov    cl,0x10
100283a9:	sub    cl,bl
100283ab:	shr    si,cl
100283ae:	add    ebx,0xfffffff3
100283b1:	mov    DWORD PTR [eax+0x16bc],ebx
100283b7:	mov    WORD PTR [eax+0x16b8],si
100283be:	jmp    0x100284c6
100283c3:	shl    esi,cl
100283c5:	or     WORD PTR [eax+0x16b8],si
100283cc:	add    ecx,0x3
100283cf:	jmp    0x100284c0
100283d4:	movzx  edi,WORD PTR [eax+0xac6]
100283db:	sub    ebx,edi
100283dd:	cmp    ecx,ebx
100283df:	mov    DWORD PTR [esp+0x1c],edi
100283e3:	jle    0x1002843f
100283e5:	movzx  esi,WORD PTR [eax+0xac4]
100283ec:	mov    edi,esi
100283ee:	shl    edi,cl
100283f0:	mov    ecx,DWORD PTR [eax+0x8]
100283f3:	or     WORD PTR [eax+0x16b8],di
100283fa:	movzx  ebx,BYTE PTR [eax+0x16b8]
10028401:	mov    edi,DWORD PTR [eax+0x14]
10028404:	mov    BYTE PTR [ecx+edi*1],bl
10028407:	add    DWORD PTR [eax+0x14],ebp
1002840a:	movzx  ebx,BYTE PTR [eax+0x16b9]
10028411:	mov    ecx,DWORD PTR [eax+0x8]
10028414:	mov    edi,DWORD PTR [eax+0x14]
10028417:	mov    BYTE PTR [edi+ecx*1],bl
1002841a:	mov    ebx,DWORD PTR [eax+0x16bc]
10028420:	add    DWORD PTR [eax+0x14],ebp
10028423:	mov    cl,0x10
10028425:	sub    cl,bl
10028427:	shr    si,cl
1002842a:	mov    ecx,DWORD PTR [esp+0x1c]
1002842e:	lea    ecx,[ebx+ecx*1-0x10]
10028432:	mov    WORD PTR [eax+0x16b8],si
10028439:	mov    esi,DWORD PTR [esp+0x10]
1002843d:	jmp    0x10028456
1002843f:	mov    di,WORD PTR [eax+0xac4]
10028446:	shl    di,cl
10028449:	or     WORD PTR [eax+0x16b8],di
10028450:	mov    edi,DWORD PTR [esp+0x1c]
10028454:	add    ecx,edi
10028456:	add    esi,0xfffffff5
10028459:	cmp    ecx,0x9
1002845c:	mov    DWORD PTR [eax+0x16bc],ecx
10028462:	jle    0x100284b4
10028464:	mov    edi,esi
10028466:	shl    edi,cl
10028468:	mov    ecx,DWORD PTR [eax+0x8]
1002846b:	or     WORD PTR [eax+0x16b8],di
10028472:	movzx  ebx,BYTE PTR [eax+0x16b8]
10028479:	mov    edi,DWORD PTR [eax+0x14]
1002847c:	mov    BYTE PTR [ecx+edi*1],bl
1002847f:	add    DWORD PTR [eax+0x14],ebp
10028482:	movzx  ebx,BYTE PTR [eax+0x16b9]
10028489:	mov    edi,DWORD PTR [eax+0x14]
1002848c:	mov    ecx,DWORD PTR [eax+0x8]
1002848f:	mov    BYTE PTR [edi+ecx*1],bl
10028492:	mov    ebx,DWORD PTR [eax+0x16bc]
10028498:	add    DWORD PTR [eax+0x14],ebp
1002849b:	mov    cl,0x10
1002849d:	sub    cl,bl
1002849f:	shr    si,cl
100284a2:	add    ebx,0xfffffff7
100284a5:	mov    DWORD PTR [eax+0x16bc],ebx
100284ab:	mov    WORD PTR [eax+0x16b8],si
100284b2:	jmp    0x100284c6
100284b4:	shl    esi,cl
100284b6:	or     WORD PTR [eax+0x16b8],si
100284bd:	add    ecx,0x7
100284c0:	mov    DWORD PTR [eax+0x16bc],ecx
100284c6:	mov    ecx,DWORD PTR [esp+0x14]
100284ca:	xor    esi,esi
100284cc:	test   ecx,ecx
100284ce:	mov    DWORD PTR [esp+0x1c],edx
100284d2:	jne    0x100284de
100284d4:	mov    ecx,0x8a
100284d9:	lea    edi,[esi+0x3]
100284dc:	jmp    0x100284f4
100284de:	cmp    edx,ecx
100284e0:	jne    0x100284ec
100284e2:	mov    ecx,0x6
100284e7:	lea    edi,[ecx-0x3]
100284ea:	jmp    0x100284f4
100284ec:	mov    ecx,0x7
100284f1:	lea    edi,[ecx-0x3]
100284f4:	add    DWORD PTR [esp+0x18],0x4
100284f9:	sub    DWORD PTR [esp+0x20],ebp
100284fd:	jne    0x10028050
10028503:	pop    edi
10028504:	pop    esi
10028505:	pop    ebp
10028506:	pop    ebx
10028507:	add    esp,0x18
1002850a:	ret    
1002850b:	int3   
1002850c:	int3   
1002850d:	int3   
1002850e:	int3   
1002850f:	int3   
10028510:	push   ecx
10028511:	mov    ecx,DWORD PTR [eax+0x16bc]
10028517:	cmp    ecx,0xb
1002851a:	push   ebx
1002851b:	mov    ebx,DWORD PTR [esp+0x14]
1002851f:	push   ebp
10028520:	push   esi
10028521:	push   edi
10028522:	mov    ebp,0x1
10028527:	jle    0x10028587
10028529:	mov    esi,DWORD PTR [esp+0x18]
1002852d:	add    esi,0xfffffeff
10028533:	mov    edx,esi
10028535:	shl    edx,cl
10028537:	mov    ecx,DWORD PTR [eax+0x14]
1002853a:	or     WORD PTR [eax+0x16b8],dx
10028541:	movzx  ebx,BYTE PTR [eax+0x16b8]
10028548:	mov    edx,DWORD PTR [eax+0x8]
1002854b:	mov    BYTE PTR [ecx+edx*1],bl
1002854e:	add    DWORD PTR [eax+0x14],ebp
10028551:	movzx  ebx,BYTE PTR [eax+0x16b9]
10028558:	mov    ecx,DWORD PTR [eax+0x14]
1002855b:	mov    edx,DWORD PTR [eax+0x8]
1002855e:	mov    BYTE PTR [ecx+edx*1],bl
10028561:	mov    edx,DWORD PTR [eax+0x16bc]
10028567:	add    DWORD PTR [eax+0x14],ebp
1002856a:	mov    ebx,DWORD PTR [esp+0x20]
1002856e:	mov    cl,0x10
10028570:	sub    cl,dl
10028572:	shr    si,cl
10028575:	add    edx,0xfffffff5
10028578:	mov    DWORD PTR [eax+0x16bc],edx
1002857e:	mov    WORD PTR [eax+0x16b8],si
10028585:	jmp    0x100285a3
10028587:	mov    edx,DWORD PTR [esp+0x18]
1002858b:	add    edx,0xfffffeff
10028591:	shl    edx,cl
10028593:	or     WORD PTR [eax+0x16b8],dx
1002859a:	add    ecx,0x5
1002859d:	mov    DWORD PTR [eax+0x16bc],ecx
100285a3:	mov    ecx,DWORD PTR [eax+0x16bc]
100285a9:	cmp    ecx,0xb
100285ac:	jle    0x1002860d
100285ae:	mov    esi,DWORD PTR [esp+0x1c]
100285b2:	add    esi,0xffffffff
100285b5:	mov    edx,esi
100285b7:	shl    edx,cl
100285b9:	mov    ecx,DWORD PTR [eax+0x14]
100285bc:	mov    DWORD PTR [esp+0x10],ebx
100285c0:	or     WORD PTR [eax+0x16b8],dx
100285c7:	movzx  ebx,BYTE PTR [eax+0x16b8]
100285ce:	mov    edx,DWORD PTR [eax+0x8]
100285d1:	mov    BYTE PTR [ecx+edx*1],bl
100285d4:	add    DWORD PTR [eax+0x14],ebp
100285d7:	movzx  ebx,BYTE PTR [eax+0x16b9]
100285de:	mov    ecx,DWORD PTR [eax+0x14]
100285e1:	mov    edx,DWORD PTR [eax+0x8]
100285e4:	mov    BYTE PTR [ecx+edx*1],bl
100285e7:	mov    edx,DWORD PTR [eax+0x16bc]
100285ed:	add    DWORD PTR [eax+0x14],ebp
100285f0:	mov    ebx,DWORD PTR [esp+0x10]
100285f4:	mov    cl,0x10
100285f6:	sub    cl,dl
100285f8:	shr    si,cl
100285fb:	add    edx,0xfffffff5
100285fe:	mov    DWORD PTR [eax+0x16bc],edx
10028604:	mov    WORD PTR [eax+0x16b8],si
1002860b:	jmp    0x10028626
1002860d:	mov    edx,DWORD PTR [esp+0x1c]
10028611:	add    edx,0xffffffff
10028614:	shl    edx,cl
10028616:	or     WORD PTR [eax+0x16b8],dx
1002861d:	add    ecx,0x5
10028620:	mov    DWORD PTR [eax+0x16bc],ecx
10028626:	mov    ecx,DWORD PTR [eax+0x16bc]
1002862c:	cmp    ecx,0xc
1002862f:	jle    0x1002868c
10028631:	lea    esi,[ebx-0x4]
10028634:	mov    edx,esi
10028636:	shl    edx,cl
10028638:	mov    ecx,DWORD PTR [eax+0x14]
1002863b:	mov    DWORD PTR [esp+0x10],ebx
1002863f:	or     WORD PTR [eax+0x16b8],dx
10028646:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002864d:	mov    edx,DWORD PTR [eax+0x8]
10028650:	mov    BYTE PTR [ecx+edx*1],bl
10028653:	add    DWORD PTR [eax+0x14],ebp
10028656:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002865d:	mov    ecx,DWORD PTR [eax+0x14]
10028660:	mov    edx,DWORD PTR [eax+0x8]
10028663:	mov    BYTE PTR [ecx+edx*1],bl
10028666:	mov    edx,DWORD PTR [eax+0x16bc]
1002866c:	add    DWORD PTR [eax+0x14],ebp
1002866f:	mov    ebx,DWORD PTR [esp+0x10]
10028673:	mov    cl,0x10
10028675:	sub    cl,dl
10028677:	shr    si,cl
1002867a:	add    edx,0xfffffff4
1002867d:	mov    DWORD PTR [eax+0x16bc],edx
10028683:	mov    WORD PTR [eax+0x16b8],si
1002868a:	jmp    0x100286a1
1002868c:	lea    edx,[ebx-0x4]
1002868f:	shl    edx,cl
10028691:	or     WORD PTR [eax+0x16b8],dx
10028698:	add    ecx,0x4
1002869b:	mov    DWORD PTR [eax+0x16bc],ecx
100286a1:	xor    edi,edi
100286a3:	test   ebx,ebx
100286a5:	jle    0x10028743
100286ab:	jmp    0x100286b0
100286ad:	lea    ecx,[ecx+0x0]
100286b0:	mov    ecx,DWORD PTR [eax+0x16bc]
100286b6:	cmp    ecx,0xd
100286b9:	movzx  edx,BYTE PTR [edi+0x100529c4]
100286c0:	jle    0x1002871e
100286c2:	movzx  esi,WORD PTR [eax+edx*4+0xa7e]
100286ca:	mov    edx,esi
100286cc:	shl    edx,cl
100286ce:	mov    ecx,DWORD PTR [eax+0x14]
100286d1:	or     WORD PTR [eax+0x16b8],dx
100286d8:	movzx  ebx,BYTE PTR [eax+0x16b8]
100286df:	mov    edx,DWORD PTR [eax+0x8]
100286e2:	mov    BYTE PTR [ecx+edx*1],bl
100286e5:	add    DWORD PTR [eax+0x14],ebp
100286e8:	movzx  ebx,BYTE PTR [eax+0x16b9]
100286ef:	mov    ecx,DWORD PTR [eax+0x14]
100286f2:	mov    edx,DWORD PTR [eax+0x8]
100286f5:	mov    BYTE PTR [ecx+edx*1],bl
100286f8:	mov    edx,DWORD PTR [eax+0x16bc]
100286fe:	add    DWORD PTR [eax+0x14],ebp
10028701:	mov    ebx,DWORD PTR [esp+0x20]
10028705:	mov    cl,0x10
10028707:	sub    cl,dl
10028709:	shr    si,cl
1002870c:	add    edx,0xfffffff3
1002870f:	mov    DWORD PTR [eax+0x16bc],edx
10028715:	mov    WORD PTR [eax+0x16b8],si
1002871c:	jmp    0x10028739
1002871e:	mov    dx,WORD PTR [eax+edx*4+0xa7e]
10028726:	shl    dx,cl
10028729:	or     WORD PTR [eax+0x16b8],dx
10028730:	add    ecx,0x3
10028733:	mov    DWORD PTR [eax+0x16bc],ecx
10028739:	add    edi,ebp
1002873b:	cmp    edi,ebx
1002873d:	jl     0x100286b0
10028743:	mov    ecx,DWORD PTR [esp+0x18]
10028747:	add    ecx,0xffffffff
1002874a:	lea    edx,[eax+0x94]
10028750:	call   0x10028000
10028755:	mov    ecx,DWORD PTR [esp+0x1c]
10028759:	pop    edi
1002875a:	pop    esi
1002875b:	pop    ebp
1002875c:	add    ecx,0xffffffff
1002875f:	lea    edx,[eax+0x988]
10028765:	pop    ebx
10028766:	add    esp,0x4
10028769:	jmp    0x10028000
1002876e:	int3   
1002876f:	int3   
10028770:	sub    esp,0xc
10028773:	push   ebx
10028774:	mov    ebx,DWORD PTR [esp+0x14]
10028778:	push   ebp
10028779:	xor    ecx,ecx
1002877b:	cmp    DWORD PTR [eax+0x16a0],ecx
10028781:	push   esi
10028782:	push   edi
10028783:	je     0x10028ac2
10028789:	lea    esp,[esp+0x0]
10028790:	mov    edx,DWORD PTR [eax+0x16a4]
10028796:	movzx  ebp,WORD PTR [edx+ecx*2]
1002879a:	mov    edx,DWORD PTR [eax+0x1698]
100287a0:	movzx  esi,BYTE PTR [ecx+edx*1]
100287a4:	add    ecx,0x1
100287a7:	test   ebp,ebp
100287a9:	mov    DWORD PTR [esp+0x18],ecx
100287ad:	mov    ecx,DWORD PTR [eax+0x16bc]
100287b3:	jne    0x1002883a
100287b9:	movzx  edi,WORD PTR [ebx+esi*4+0x2]
100287be:	mov    edx,0x10
100287c3:	sub    edx,edi
100287c5:	cmp    ecx,edx
100287c7:	jle    0x10028825
100287c9:	movzx  esi,WORD PTR [ebx+esi*4]
100287cd:	mov    edx,esi
100287cf:	shl    edx,cl
100287d1:	mov    ecx,DWORD PTR [eax+0x8]
100287d4:	mov    DWORD PTR [esp+0x10],ebx
100287d8:	or     WORD PTR [eax+0x16b8],dx
100287df:	movzx  ebx,BYTE PTR [eax+0x16b8]
100287e6:	mov    edx,DWORD PTR [eax+0x14]
100287e9:	mov    BYTE PTR [ecx+edx*1],bl
100287ec:	add    DWORD PTR [eax+0x14],0x1
100287f0:	movzx  ebx,BYTE PTR [eax+0x16b9]
100287f7:	mov    ecx,DWORD PTR [eax+0x14]
100287fa:	mov    edx,DWORD PTR [eax+0x8]
100287fd:	mov    BYTE PTR [ecx+edx*1],bl
10028800:	mov    edx,DWORD PTR [eax+0x16bc]
10028806:	add    DWORD PTR [eax+0x14],0x1
1002880a:	mov    ebx,DWORD PTR [esp+0x10]
1002880e:	mov    cl,0x10
10028810:	sub    cl,dl
10028812:	shr    si,cl
10028815:	lea    ecx,[edx+edi*1-0x10]
10028819:	mov    WORD PTR [eax+0x16b8],si
10028820:	jmp    0x10028aac
10028825:	mov    dx,WORD PTR [ebx+esi*4]
10028829:	shl    dx,cl
1002882c:	or     WORD PTR [eax+0x16b8],dx
10028833:	add    ecx,edi
10028835:	jmp    0x10028aac
1002883a:	movzx  edx,BYTE PTR [esi+0x10053198]
10028841:	movzx  edi,WORD PTR [ebx+edx*4+0x406]
10028849:	mov    ebx,0x10
1002884e:	sub    ebx,edi
10028850:	cmp    ecx,ebx
10028852:	mov    DWORD PTR [esp+0x10],edi
10028856:	mov    edi,DWORD PTR [esp+0x20]
1002885a:	mov    DWORD PTR [esp+0x14],edx
1002885e:	jle    0x100288c3
10028860:	movzx  edi,WORD PTR [edi+edx*4+0x404]
10028868:	mov    edx,edi
1002886a:	shl    edx,cl
1002886c:	mov    ecx,DWORD PTR [eax+0x8]
1002886f:	or     WORD PTR [eax+0x16b8],dx
10028876:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002887d:	mov    edx,DWORD PTR [eax+0x14]
10028880:	mov    BYTE PTR [ecx+edx*1],bl
10028883:	add    DWORD PTR [eax+0x14],0x1
10028887:	mov    ecx,DWORD PTR [eax+0x14]
1002888a:	movzx  ebx,BYTE PTR [eax+0x16b9]
10028891:	mov    edx,DWORD PTR [eax+0x8]
10028894:	mov    BYTE PTR [ecx+edx*1],bl
10028897:	mov    edx,DWORD PTR [eax+0x16bc]
1002889d:	add    DWORD PTR [eax+0x14],0x1
100288a1:	mov    cl,0x10
100288a3:	sub    cl,dl
100288a5:	shr    di,cl
100288a8:	mov    ecx,DWORD PTR [esp+0x10]
100288ac:	lea    edx,[edx+ecx*1-0x10]
100288b0:	mov    DWORD PTR [eax+0x16bc],edx
100288b6:	mov    edx,DWORD PTR [esp+0x14]
100288ba:	mov    WORD PTR [eax+0x16b8],di
100288c1:	jmp    0x100288e1
100288c3:	mov    di,WORD PTR [edi+edx*4+0x404]
100288cb:	shl    di,cl
100288ce:	or     WORD PTR [eax+0x16b8],di
100288d5:	mov    edi,DWORD PTR [esp+0x10]
100288d9:	add    ecx,edi
100288db:	mov    DWORD PTR [eax+0x16bc],ecx
100288e1:	mov    edi,DWORD PTR [edx*4+0x10052950]
100288e8:	test   edi,edi
100288ea:	mov    ebx,DWORD PTR [esp+0x20]
100288ee:	je     0x1002896a
100288f0:	sub    esi,DWORD PTR [edx*4+0x10053298]
100288f7:	mov    ecx,DWORD PTR [eax+0x16bc]
100288fd:	mov    edx,0x10
10028902:	sub    edx,edi
10028904:	cmp    ecx,edx
10028906:	jle    0x10028959
10028908:	mov    edx,esi
1002890a:	shl    edx,cl
1002890c:	mov    ecx,DWORD PTR [eax+0x8]
1002890f:	or     WORD PTR [eax+0x16b8],dx
10028916:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002891d:	mov    edx,DWORD PTR [eax+0x14]
10028920:	mov    BYTE PTR [ecx+edx*1],bl
10028923:	add    DWORD PTR [eax+0x14],0x1
10028927:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002892e:	mov    ecx,DWORD PTR [eax+0x14]
10028931:	mov    edx,DWORD PTR [eax+0x8]
10028934:	mov    BYTE PTR [ecx+edx*1],bl
10028937:	mov    edx,DWORD PTR [eax+0x16bc]
1002893d:	add    DWORD PTR [eax+0x14],0x1
10028941:	mov    ebx,DWORD PTR [esp+0x20]
10028945:	mov    cl,0x10
10028947:	sub    cl,dl
10028949:	shr    si,cl
1002894c:	lea    ecx,[edx+edi*1-0x10]
10028950:	mov    WORD PTR [eax+0x16b8],si
10028957:	jmp    0x10028964
10028959:	shl    esi,cl
1002895b:	or     WORD PTR [eax+0x16b8],si
10028962:	add    ecx,edi
10028964:	mov    DWORD PTR [eax+0x16bc],ecx
1002896a:	sub    ebp,0x1
1002896d:	cmp    ebp,0x100
10028973:	jae    0x1002897e
10028975:	movzx  edi,BYTE PTR [ebp+0x10052f98]
1002897c:	jmp    0x1002898a
1002897e:	mov    edx,ebp
10028980:	shr    edx,0x7
10028983:	movzx  edi,BYTE PTR [edx+0x10053098]
1002898a:	mov    ecx,DWORD PTR [esp+0x24]
1002898e:	movzx  edx,WORD PTR [ecx+edi*4+0x2]
10028993:	mov    ecx,DWORD PTR [eax+0x16bc]
10028999:	mov    esi,0x10
1002899e:	sub    esi,edx
100289a0:	cmp    ecx,esi
100289a2:	mov    DWORD PTR [esp+0x14],edx
100289a6:	jle    0x10028a0b
100289a8:	mov    edx,DWORD PTR [esp+0x24]
100289ac:	movzx  esi,WORD PTR [edx+edi*4]
100289b0:	mov    edx,esi
100289b2:	shl    edx,cl
100289b4:	mov    ecx,DWORD PTR [eax+0x8]
100289b7:	or     WORD PTR [eax+0x16b8],dx
100289be:	movzx  ebx,BYTE PTR [eax+0x16b8]
100289c5:	mov    edx,DWORD PTR [eax+0x14]
100289c8:	mov    BYTE PTR [ecx+edx*1],bl
100289cb:	add    DWORD PTR [eax+0x14],0x1
100289cf:	movzx  ebx,BYTE PTR [eax+0x16b9]
100289d6:	mov    ecx,DWORD PTR [eax+0x14]
100289d9:	mov    edx,DWORD PTR [eax+0x8]
100289dc:	mov    BYTE PTR [ecx+edx*1],bl
100289df:	mov    edx,DWORD PTR [eax+0x16bc]
100289e5:	add    DWORD PTR [eax+0x14],0x1
100289e9:	mov    ebx,DWORD PTR [esp+0x20]
100289ed:	mov    cl,0x10
100289ef:	sub    cl,dl
100289f1:	shr    si,cl
100289f4:	mov    ecx,DWORD PTR [esp+0x14]
100289f8:	lea    edx,[edx+ecx*1-0x10]
100289fc:	mov    DWORD PTR [eax+0x16bc],edx
10028a02:	mov    WORD PTR [eax+0x16b8],si
10028a09:	jmp    0x10028a25
10028a0b:	mov    esi,DWORD PTR [esp+0x24]
10028a0f:	mov    si,WORD PTR [esi+edi*4]
10028a13:	shl    si,cl
10028a16:	or     WORD PTR [eax+0x16b8],si
10028a1d:	add    ecx,edx
10028a1f:	mov    DWORD PTR [eax+0x16bc],ecx
10028a25:	mov    esi,DWORD PTR [edi*4+0x100529d8]
10028a2c:	test   esi,esi
10028a2e:	je     0x10028ab2
10028a34:	mov    ecx,DWORD PTR [eax+0x16bc]
10028a3a:	sub    ebp,DWORD PTR [edi*4+0x10053310]
10028a41:	mov    edx,0x10
10028a46:	sub    edx,esi
10028a48:	cmp    ecx,edx
10028a4a:	jle    0x10028aa1
10028a4c:	mov    edx,ebp
10028a4e:	shl    edx,cl
10028a50:	mov    ecx,DWORD PTR [eax+0x8]
10028a53:	mov    DWORD PTR [esp+0x14],ebx
10028a57:	or     WORD PTR [eax+0x16b8],dx
10028a5e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10028a65:	mov    edx,DWORD PTR [eax+0x14]
10028a68:	mov    BYTE PTR [ecx+edx*1],bl
10028a6b:	add    DWORD PTR [eax+0x14],0x1
10028a6f:	movzx  ebx,BYTE PTR [eax+0x16b9]
10028a76:	mov    ecx,DWORD PTR [eax+0x14]
10028a79:	mov    edx,DWORD PTR [eax+0x8]
10028a7c:	mov    BYTE PTR [ecx+edx*1],bl
10028a7f:	mov    edx,DWORD PTR [eax+0x16bc]
10028a85:	add    DWORD PTR [eax+0x14],0x1
10028a89:	mov    ebx,DWORD PTR [esp+0x14]
10028a8d:	mov    cl,0x10
10028a8f:	sub    cl,dl
10028a91:	shr    bp,cl
10028a94:	lea    ecx,[edx+esi*1-0x10]
10028a98:	mov    WORD PTR [eax+0x16b8],bp
10028a9f:	jmp    0x10028aac
10028aa1:	shl    ebp,cl
10028aa3:	or     WORD PTR [eax+0x16b8],bp
10028aaa:	add    ecx,esi
10028aac:	mov    DWORD PTR [eax+0x16bc],ecx
10028ab2:	mov    ecx,DWORD PTR [esp+0x18]
10028ab6:	cmp    ecx,DWORD PTR [eax+0x16a0]
10028abc:	jb     0x10028790
10028ac2:	movzx  edi,WORD PTR [ebx+0x402]
10028ac9:	mov    ecx,DWORD PTR [eax+0x16bc]
10028acf:	mov    edx,0x10
10028ad4:	sub    edx,edi
10028ad6:	cmp    ecx,edx
10028ad8:	jle    0x10028b4d
10028ada:	movzx  esi,WORD PTR [ebx+0x400]
10028ae1:	mov    edx,esi
10028ae3:	shl    edx,cl
10028ae5:	mov    ecx,DWORD PTR [eax+0x8]
10028ae8:	mov    DWORD PTR [esp+0x20],ebx
10028aec:	or     WORD PTR [eax+0x16b8],dx
10028af3:	mov    edx,DWORD PTR [eax+0x14]
10028af6:	mov    bl,BYTE PTR [eax+0x16b8]
10028afc:	mov    BYTE PTR [ecx+edx*1],bl
10028aff:	add    DWORD PTR [eax+0x14],0x1
10028b03:	mov    ebp,DWORD PTR [eax+0x14]
10028b06:	mov    ecx,DWORD PTR [eax+0x8]
10028b09:	mov    dl,BYTE PTR [eax+0x16b9]
10028b0f:	mov    ebx,DWORD PTR [esp+0x20]
10028b13:	mov    BYTE PTR [ecx+ebp*1],dl
10028b16:	mov    edx,DWORD PTR [eax+0x16bc]
10028b1c:	add    DWORD PTR [eax+0x14],0x1
10028b20:	mov    cl,0x10
10028b22:	sub    cl,dl
10028b24:	shr    si,cl
10028b27:	lea    ecx,[edx+edi*1-0x10]
10028b2b:	pop    edi
10028b2c:	mov    DWORD PTR [eax+0x16bc],ecx
10028b32:	mov    WORD PTR [eax+0x16b8],si
10028b39:	movzx  edx,WORD PTR [ebx+0x402]
10028b40:	pop    esi
10028b41:	pop    ebp
10028b42:	mov    DWORD PTR [eax+0x16b4],edx
10028b48:	pop    ebx
10028b49:	add    esp,0xc
10028b4c:	ret    
10028b4d:	mov    dx,WORD PTR [ebx+0x400]
10028b54:	shl    dx,cl
10028b57:	or     WORD PTR [eax+0x16b8],dx
10028b5e:	add    ecx,edi
10028b60:	pop    edi
10028b61:	mov    DWORD PTR [eax+0x16bc],ecx
10028b67:	movzx  ecx,WORD PTR [ebx+0x402]
10028b6e:	pop    esi
10028b6f:	pop    ebp
10028b70:	mov    DWORD PTR [eax+0x16b4],ecx
10028b76:	pop    ebx
10028b77:	add    esp,0xc
10028b7a:	ret    
10028b7b:	int3   
10028b7c:	int3   
10028b7d:	int3   
10028b7e:	int3   
10028b7f:	int3   
10028b80:	xor    eax,eax
10028b82:	lea    ecx,[edx+0x94]
10028b88:	cmp    WORD PTR [ecx],0x0
10028b8c:	jne    0x10028b99
10028b8e:	add    eax,0x1
10028b91:	add    ecx,0x4
10028b94:	cmp    eax,0x9
10028b97:	jl     0x10028b88
10028b99:	cmp    eax,0x9
10028b9c:	jne    0x10028c3d
10028ba2:	mov    eax,0xe
10028ba7:	lea    ecx,[edx+0xd0]
10028bad:	lea    ecx,[ecx+0x0]
10028bb0:	cmp    WORD PTR [ecx-0x4],0x0
10028bb5:	jne    0x10028c3d
10028bbb:	cmp    WORD PTR [ecx],0x0
10028bbf:	jne    0x10028bf6
10028bc1:	cmp    WORD PTR [ecx+0x4],0x0
10028bc6:	jne    0x10028c07
10028bc8:	cmp    WORD PTR [ecx+0x8],0x0
10028bcd:	jne    0x10028c18
10028bcf:	cmp    WORD PTR [ecx+0xc],0x0
10028bd4:	jne    0x10028c29
10028bd6:	cmp    WORD PTR [ecx+0x10],0x0
10028bdb:	jne    0x10028c3a
10028bdd:	add    eax,0x6
10028be0:	add    ecx,0x18
10028be3:	cmp    eax,0x20
10028be6:	jl     0x10028bb0
10028be8:	mov    edx,DWORD PTR [edx]
10028bea:	xor    ecx,ecx
10028bec:	cmp    eax,0x20
10028bef:	sete   cl
10028bf2:	mov    DWORD PTR [edx+0x2c],ecx
10028bf5:	ret    
10028bf6:	mov    edx,DWORD PTR [edx]
10028bf8:	xor    ecx,ecx
10028bfa:	add    eax,0x1
10028bfd:	cmp    eax,0x20
10028c00:	sete   cl
10028c03:	mov    DWORD PTR [edx+0x2c],ecx
10028c06:	ret    
10028c07:	mov    edx,DWORD PTR [edx]
10028c09:	xor    ecx,ecx
10028c0b:	add    eax,0x2
10028c0e:	cmp    eax,0x20
10028c11:	sete   cl
10028c14:	mov    DWORD PTR [edx+0x2c],ecx
10028c17:	ret    
10028c18:	mov    edx,DWORD PTR [edx]
10028c1a:	xor    ecx,ecx
10028c1c:	add    eax,0x3
10028c1f:	cmp    eax,0x20
10028c22:	sete   cl
10028c25:	mov    DWORD PTR [edx+0x2c],ecx
10028c28:	ret    
10028c29:	mov    edx,DWORD PTR [edx]
10028c2b:	xor    ecx,ecx
10028c2d:	add    eax,0x4
10028c30:	cmp    eax,0x20
10028c33:	sete   cl
10028c36:	mov    DWORD PTR [edx+0x2c],ecx
10028c39:	ret    
10028c3a:	add    eax,0x5
10028c3d:	mov    edx,DWORD PTR [edx]
10028c3f:	xor    ecx,ecx
10028c41:	cmp    eax,0x20
10028c44:	sete   cl
10028c47:	mov    DWORD PTR [edx+0x2c],ecx
10028c4a:	ret    
10028c4b:	int3   
10028c4c:	int3   
10028c4d:	int3   
10028c4e:	int3   
10028c4f:	int3   
10028c50:	xor    eax,eax
10028c52:	push   esi
10028c53:	mov    esi,ecx
10028c55:	and    esi,0x1
10028c58:	or     eax,esi
10028c5a:	sub    edx,0x1
10028c5d:	shr    ecx,1
10028c5f:	add    eax,eax
10028c61:	test   edx,edx
10028c63:	jg     0x10028c53
10028c65:	shr    eax,1
10028c67:	pop    esi
10028c68:	ret    
10028c69:	int3   
10028c6a:	int3   
10028c6b:	int3   
10028c6c:	int3   
10028c6d:	int3   
10028c6e:	int3   
10028c6f:	int3   
10028c70:	mov    edx,DWORD PTR [eax+0x16bc]
10028c76:	cmp    edx,0x8
10028c79:	push   ebx
10028c7a:	push   esi
10028c7b:	jle    0x10028cba
10028c7d:	movzx  ebx,BYTE PTR [eax+0x16b8]
10028c84:	mov    edx,DWORD PTR [eax+0x14]
10028c87:	mov    ecx,DWORD PTR [eax+0x8]
10028c8a:	mov    BYTE PTR [ecx+edx*1],bl
10028c8d:	movzx  ebx,BYTE PTR [eax+0x16b9]
10028c94:	mov    edx,DWORD PTR [eax+0x8]
10028c97:	mov    esi,0x1
10028c9c:	add    DWORD PTR [eax+0x14],esi
10028c9f:	mov    ecx,DWORD PTR [eax+0x14]
10028ca2:	mov    BYTE PTR [ecx+edx*1],bl
10028ca5:	add    DWORD PTR [eax+0x14],esi
10028ca8:	xor    ecx,ecx
10028caa:	pop    esi
10028cab:	mov    WORD PTR [eax+0x16b8],cx
10028cb2:	mov    DWORD PTR [eax+0x16bc],ecx
10028cb8:	pop    ebx
10028cb9:	ret    
10028cba:	xor    ecx,ecx
10028cbc:	cmp    edx,ecx
10028cbe:	jle    0x10028cd3
10028cc0:	mov    esi,DWORD PTR [eax+0x14]
10028cc3:	mov    edx,DWORD PTR [eax+0x8]
10028cc6:	mov    bl,BYTE PTR [eax+0x16b8]
10028ccc:	mov    BYTE PTR [edx+esi*1],bl
10028ccf:	add    DWORD PTR [eax+0x14],0x1
10028cd3:	pop    esi
10028cd4:	mov    WORD PTR [eax+0x16b8],cx
10028cdb:	mov    DWORD PTR [eax+0x16bc],ecx
10028ce1:	pop    ebx
10028ce2:	ret    
10028ce3:	int3   
10028ce4:	int3   
10028ce5:	int3   
10028ce6:	int3   
10028ce7:	int3   
10028ce8:	int3   
10028ce9:	int3   
10028cea:	int3   
10028ceb:	int3   
10028cec:	int3   
10028ced:	int3   
10028cee:	int3   
10028cef:	int3   
10028cf0:	push   ebx
10028cf1:	push   esi
10028cf2:	push   edi
10028cf3:	mov    ebx,ecx
10028cf5:	mov    esi,edx
10028cf7:	call   0x10028c70
10028cfc:	cmp    DWORD PTR [esp+0x10],0x0
10028d01:	mov    DWORD PTR [eax+0x16b4],0x8
10028d0b:	mov    edi,0x1
10028d10:	je     0x10028d4c
10028d12:	mov    ecx,DWORD PTR [eax+0x14]
10028d15:	mov    edx,DWORD PTR [eax+0x8]
10028d18:	mov    BYTE PTR [ecx+edx*1],bl
10028d1b:	add    DWORD PTR [eax+0x14],edi
10028d1e:	mov    ecx,DWORD PTR [eax+0x14]
10028d21:	mov    edx,DWORD PTR [eax+0x8]
10028d24:	mov    BYTE PTR [ecx+edx*1],bh
10028d27:	add    DWORD PTR [eax+0x14],edi
10028d2a:	mov    edx,DWORD PTR [eax+0x8]
10028d2d:	push   ebp
10028d2e:	mov    ebp,DWORD PTR [eax+0x14]
10028d31:	mov    cl,bl
10028d33:	not    cl
10028d35:	mov    BYTE PTR [edx+ebp*1],cl
10028d38:	add    DWORD PTR [eax+0x14],edi
10028d3b:	mov    ebp,DWORD PTR [eax+0x14]
10028d3e:	mov    edx,DWORD PTR [eax+0x8]
10028d41:	mov    ecx,ebx
10028d43:	not    ecx
10028d45:	mov    BYTE PTR [edx+ebp*1],ch
10028d48:	add    DWORD PTR [eax+0x14],edi
10028d4b:	pop    ebp
10028d4c:	test   ebx,ebx
10028d4e:	je     0x10028d6e
10028d50:	mov    ecx,DWORD PTR [eax+0x14]
10028d53:	mov    edx,DWORD PTR [eax+0x8]
10028d56:	sub    ebx,edi
10028d58:	mov    DWORD PTR [esp+0x10],ebx
10028d5c:	mov    bl,BYTE PTR [esi]
10028d5e:	mov    BYTE PTR [ecx+edx*1],bl
10028d61:	mov    ebx,DWORD PTR [esp+0x10]
10028d65:	add    DWORD PTR [eax+0x14],edi
10028d68:	add    esi,edi
10028d6a:	test   ebx,ebx
10028d6c:	jne    0x10028d50
10028d6e:	pop    edi
10028d6f:	pop    esi
10028d70:	pop    ebx
10028d71:	ret    
10028d72:	int3   
10028d73:	int3   
10028d74:	int3   
10028d75:	int3   
10028d76:	int3   
10028d77:	int3   
10028d78:	int3   
10028d79:	int3   
10028d7a:	int3   
10028d7b:	int3   
10028d7c:	int3   
10028d7d:	int3   
10028d7e:	int3   
10028d7f:	int3   
10028d80:	sub    esp,0x24
10028d83:	mov    eax,ds:0x10064694
10028d88:	xor    eax,esp
10028d8a:	mov    DWORD PTR [esp+0x20],eax
10028d8e:	push   esi
10028d8f:	lea    esi,[esp+0x6]
10028d93:	xor    ecx,ecx
10028d95:	mov    eax,0x1
10028d9a:	sub    edx,esi
10028d9c:	lea    esp,[esp+0x0]
10028da0:	lea    esi,[edx+eax*2]
10028da3:	mov    si,WORD PTR [esp+esi*1+0x4]
10028da8:	add    si,cx
10028dab:	add    si,si
10028dae:	movzx  ecx,si
10028db1:	mov    WORD PTR [esp+eax*2+0x4],cx
10028db6:	add    eax,0x1
10028db9:	cmp    eax,0xf
10028dbc:	jle    0x10028da0
10028dbe:	xor    esi,esi
10028dc0:	test   ebx,ebx
10028dc2:	jl     0x10028ded
10028dc4:	movzx  edx,WORD PTR [edi+esi*4+0x2]
10028dc9:	test   edx,edx
10028dcb:	je     0x10028de6
10028dcd:	movzx  eax,WORD PTR [esp+edx*2+0x4]
10028dd2:	movzx  ecx,ax
10028dd5:	add    eax,0x1
10028dd8:	mov    WORD PTR [esp+edx*2+0x4],ax
10028ddd:	call   0x10028c50
10028de2:	mov    WORD PTR [edi+esi*4],ax
10028de6:	add    esi,0x1
10028de9:	cmp    esi,ebx
10028deb:	jle    0x10028dc4
10028ded:	mov    ecx,DWORD PTR [esp+0x24]
10028df1:	pop    esi
10028df2:	xor    ecx,esp
10028df4:	call   0x10015adb
10028df9:	add    esp,0x24
10028dfc:	ret    
10028dfd:	int3   
10028dfe:	int3   
10028dff:	int3   
10028e00:	sub    esp,0x8
10028e03:	mov    eax,DWORD PTR [esp+0xc]
10028e07:	push   ebx
10028e08:	push   ebp
10028e09:	push   edi
10028e0a:	mov    edi,DWORD PTR [eax]
10028e0c:	mov    eax,DWORD PTR [eax+0x8]
10028e0f:	mov    ecx,DWORD PTR [eax+0xc]
10028e12:	mov    ebp,DWORD PTR [eax]
10028e14:	xor    edx,edx
10028e16:	or     ebx,0xffffffff
10028e19:	xor    eax,eax
10028e1b:	cmp    ecx,edx
10028e1d:	mov    DWORD PTR [esp+0x10],ecx
10028e21:	mov    DWORD PTR [esp+0xc],ebx
10028e25:	mov    DWORD PTR [esi+0x1450],edx
10028e2b:	mov    DWORD PTR [esi+0x1454],0x23d
10028e35:	jle    0x10028e6e
10028e37:	cmp    WORD PTR [edi+eax*4],dx
10028e3b:	je     0x10028e60
10028e3d:	add    DWORD PTR [esi+0x1450],0x1
10028e44:	mov    ecx,DWORD PTR [esi+0x1450]
10028e4a:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
10028e51:	mov    DWORD PTR [esp+0xc],eax
10028e55:	mov    BYTE PTR [eax+esi*1+0x1458],dl
10028e5c:	mov    ebx,eax
10028e5e:	jmp    0x10028e65
10028e60:	mov    WORD PTR [edi+eax*4+0x2],dx
10028e65:	add    eax,0x1
10028e68:	cmp    eax,DWORD PTR [esp+0x10]
10028e6c:	jl     0x10028e37
10028e6e:	cmp    DWORD PTR [esi+0x1450],0x2
10028e75:	jge    0x10028ec9
10028e77:	cmp    ebx,0x2
10028e7a:	jge    0x10028e83
10028e7c:	add    ebx,0x1
10028e7f:	mov    eax,ebx
10028e81:	jmp    0x10028e85
10028e83:	xor    eax,eax
10028e85:	add    DWORD PTR [esi+0x1450],0x1
10028e8c:	mov    ecx,DWORD PTR [esi+0x1450]
10028e92:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
10028e99:	mov    WORD PTR [edi+eax*4],0x1
10028e9f:	mov    BYTE PTR [esi+eax*1+0x1458],dl
10028ea6:	add    DWORD PTR [esi+0x16a8],0xffffffff
10028ead:	cmp    ebp,edx
10028eaf:	je     0x10028ebc
10028eb1:	movzx  eax,WORD PTR [ebp+eax*4+0x2]
10028eb6:	sub    DWORD PTR [esi+0x16ac],eax
10028ebc:	cmp    DWORD PTR [esi+0x1450],0x2
10028ec3:	jl     0x10028e77
10028ec5:	mov    DWORD PTR [esp+0xc],ebx
10028ec9:	mov    ecx,DWORD PTR [esp+0x18]
10028ecd:	mov    DWORD PTR [ecx+0x4],ebx
10028ed0:	mov    eax,DWORD PTR [esi+0x1450]
10028ed6:	cdq    
10028ed7:	sub    eax,edx
10028ed9:	mov    ebp,eax
10028edb:	sar    ebp,1
10028edd:	cmp    ebp,0x1
10028ee0:	jl     0x10028ef5
10028ee2:	push   ebp
10028ee3:	mov    eax,esi
10028ee5:	call   0x10027c20
10028eea:	sub    ebp,0x1
10028eed:	add    esp,0x4
10028ef0:	cmp    ebp,0x1
10028ef3:	jge    0x10028ee2
10028ef5:	mov    ebx,DWORD PTR [esp+0x10]
10028ef9:	lea    esp,[esp+0x0]
10028f00:	mov    eax,DWORD PTR [esi+0x1450]
10028f06:	mov    edx,DWORD PTR [esi+eax*4+0xb5c]
10028f0d:	mov    ebp,DWORD PTR [esi+0xb60]
10028f13:	add    eax,0xffffffff
10028f16:	mov    DWORD PTR [esi+0x1450],eax
10028f1c:	push   0x1
10028f1e:	mov    eax,esi
10028f20:	mov    DWORD PTR [esi+0xb60],edx
10028f26:	call   0x10027c20
10028f2b:	mov    eax,DWORD PTR [esi+0xb60]
10028f31:	or     edx,0xffffffff
10028f34:	add    DWORD PTR [esi+0x1454],edx
10028f3a:	mov    ecx,DWORD PTR [esi+0x1454]
10028f40:	mov    DWORD PTR [esi+ecx*4+0xb5c],ebp
10028f47:	add    DWORD PTR [esi+0x1454],edx
10028f4d:	mov    ecx,DWORD PTR [esi+0x1454]
10028f53:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
10028f5a:	mov    cx,WORD PTR [edi+eax*4]
10028f5e:	add    cx,WORD PTR [edi+ebp*4]
10028f62:	add    esp,0x4
10028f65:	mov    WORD PTR [edi+ebx*4],cx
10028f69:	mov    cl,BYTE PTR [esi+eax*1+0x1458]
10028f70:	mov    dl,BYTE PTR [esi+ebp*1+0x1458]
10028f77:	cmp    dl,cl
10028f79:	jb     0x10028f80
10028f7b:	movzx  ecx,dl
10028f7e:	jmp    0x10028f83
10028f80:	movzx  ecx,cl
10028f83:	add    cl,0x1
10028f86:	mov    BYTE PTR [esi+ebx*1+0x1458],cl
10028f8d:	movzx  ecx,bx
10028f90:	mov    WORD PTR [edi+eax*4+0x2],cx
10028f95:	mov    WORD PTR [edi+ebp*4+0x2],cx
10028f9a:	mov    DWORD PTR [esi+0xb60],ebx
10028fa0:	push   0x1
10028fa2:	mov    eax,esi
10028fa4:	add    ebx,0x1
10028fa7:	call   0x10027c20
10028fac:	add    esp,0x4
10028faf:	cmp    DWORD PTR [esi+0x1450],0x2
10028fb6:	jge    0x10028f00
10028fbc:	add    DWORD PTR [esi+0x1454],0xffffffff
10028fc3:	mov    eax,DWORD PTR [esi+0x1454]
10028fc9:	mov    edx,DWORD PTR [esi+0xb60]
10028fcf:	mov    ecx,DWORD PTR [esp+0x18]
10028fd3:	mov    DWORD PTR [esi+eax*4+0xb5c],edx
10028fda:	mov    eax,esi
10028fdc:	call   0x10027cf0
10028fe1:	mov    ebx,DWORD PTR [esp+0xc]
10028fe5:	lea    edx,[esi+0xb3c]
10028feb:	call   0x10028d80
10028ff0:	pop    edi
10028ff1:	pop    ebp
10028ff2:	pop    ebx
10028ff3:	add    esp,0x8
10028ff6:	ret    
10028ff7:	int3   
10028ff8:	int3   
10028ff9:	int3   
10028ffa:	int3   
10028ffb:	int3   
10028ffc:	int3   
10028ffd:	int3   
10028ffe:	int3   
10028fff:	int3   
10029000:	push   esi
10029001:	mov    esi,eax
10029003:	mov    ecx,DWORD PTR [esi+0xb1c]
10029009:	lea    eax,[esi+0x94]
1002900f:	push   esi
10029010:	call   0x10027f10
10029015:	mov    ecx,DWORD PTR [esi+0xb28]
1002901b:	lea    eax,[esi+0x988]
10029021:	push   esi
10029022:	call   0x10027f10
10029027:	lea    eax,[esi+0xb30]
1002902d:	push   eax
1002902e:	call   0x10028e00
10029033:	add    esp,0xc
10029036:	mov    eax,0x12
1002903b:	jmp    0x10029040
1002903d:	lea    ecx,[ecx+0x0]
10029040:	movzx  ecx,BYTE PTR [eax+0x100529c4]
10029047:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
10029050:	jne    0x100290bd
10029052:	movzx  edx,BYTE PTR [eax+0x100529c3]
10029059:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
10029062:	jne    0x1002909c
10029064:	movzx  ecx,BYTE PTR [eax+0x100529c2]
1002906b:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
10029074:	jne    0x100290ab
10029076:	movzx  edx,BYTE PTR [eax+0x100529c1]
1002907d:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
10029086:	jne    0x100290ba
10029088:	sub    eax,0x4
1002908b:	cmp    eax,0x3
1002908e:	jge    0x10029040
10029090:	lea    ecx,[eax+eax*2+0x11]
10029094:	add    DWORD PTR [esi+0x16a8],ecx
1002909a:	pop    esi
1002909b:	ret    
1002909c:	sub    eax,0x1
1002909f:	lea    ecx,[eax+eax*2+0x11]
100290a3:	add    DWORD PTR [esi+0x16a8],ecx
100290a9:	pop    esi
100290aa:	ret    
100290ab:	sub    eax,0x2
100290ae:	lea    ecx,[eax+eax*2+0x11]
100290b2:	add    DWORD PTR [esi+0x16a8],ecx
100290b8:	pop    esi
100290b9:	ret    
100290ba:	sub    eax,0x3
100290bd:	lea    ecx,[eax+eax*2+0x11]
100290c1:	add    DWORD PTR [esi+0x16a8],ecx
100290c7:	pop    esi
100290c8:	ret    
100290c9:	int3   
100290ca:	int3   
100290cb:	int3   
100290cc:	int3   
100290cd:	int3   
100290ce:	int3   
100290cf:	int3   
100290d0:	mov    eax,DWORD PTR [esp+0x4]
100290d4:	mov    ecx,DWORD PTR [eax+0x16bc]
100290da:	cmp    ecx,0xd
100290dd:	jle    0x10029148
100290df:	push   ebx
100290e0:	push   esi
100290e1:	mov    esi,DWORD PTR [esp+0x18]
100290e5:	mov    edx,esi
100290e7:	shl    edx,cl
100290e9:	mov    ecx,DWORD PTR [eax+0x8]
100290ec:	or     WORD PTR [eax+0x16b8],dx
100290f3:	movzx  ebx,BYTE PTR [eax+0x16b8]
100290fa:	mov    edx,DWORD PTR [eax+0x14]
100290fd:	mov    BYTE PTR [ecx+edx*1],bl
10029100:	movzx  ebx,BYTE PTR [eax+0x16b9]
10029107:	add    DWORD PTR [eax+0x14],0x1
1002910b:	mov    ecx,DWORD PTR [eax+0x14]
1002910e:	mov    edx,DWORD PTR [eax+0x8]
10029111:	mov    BYTE PTR [ecx+edx*1],bl
10029114:	mov    edx,DWORD PTR [eax+0x16bc]
1002911a:	add    DWORD PTR [eax+0x14],0x1
1002911e:	mov    cl,0x10
10029120:	sub    cl,dl
10029122:	shr    si,cl
10029125:	mov    ecx,DWORD PTR [esp+0x14]
10029129:	add    edx,0xfffffff3
1002912c:	mov    DWORD PTR [eax+0x16bc],edx
10029132:	mov    edx,DWORD PTR [esp+0x10]
10029136:	mov    WORD PTR [eax+0x16b8],si
1002913d:	pop    esi
1002913e:	pop    ebx
1002913f:	push   0x1
10029141:	call   0x10028cf0
10029146:	pop    ecx
10029147:	ret    
10029148:	mov    edx,DWORD PTR [esp+0x10]
1002914c:	shl    edx,cl
1002914e:	add    ecx,0x3
10029151:	mov    DWORD PTR [eax+0x16bc],ecx
10029157:	mov    ecx,DWORD PTR [esp+0xc]
1002915b:	or     WORD PTR [eax+0x16b8],dx
10029162:	mov    edx,DWORD PTR [esp+0x8]
10029166:	push   0x1
10029168:	call   0x10028cf0
1002916d:	pop    ecx
1002916e:	ret    
1002916f:	int3   
10029170:	push   ecx
10029171:	push   ebx
10029172:	mov    ebx,DWORD PTR [esp+0x14]
10029176:	push   esi
10029177:	mov    esi,DWORD PTR [esp+0x10]
1002917b:	cmp    DWORD PTR [esi+0x84],0x0
10029182:	push   edi
10029183:	mov    DWORD PTR [esp+0xc],0x0
1002918b:	jle    0x100291e4
1002918d:	test   ebx,ebx
1002918f:	jbe    0x100291a0
10029191:	mov    eax,DWORD PTR [esi]
10029193:	cmp    DWORD PTR [eax+0x2c],0x2
10029197:	jne    0x100291a0
10029199:	mov    edx,esi
1002919b:	call   0x10028b80
100291a0:	lea    ecx,[esi+0xb18]
100291a6:	push   ecx
100291a7:	call   0x10028e00
100291ac:	lea    edx,[esi+0xb24]
100291b2:	push   edx
100291b3:	call   0x10028e00
100291b8:	add    esp,0x8
100291bb:	mov    eax,esi
100291bd:	call   0x10029000
100291c2:	mov    edx,DWORD PTR [esi+0x16a8]
100291c8:	mov    ecx,DWORD PTR [esi+0x16ac]
100291ce:	add    edx,0xa
100291d1:	add    ecx,0xa
100291d4:	shr    edx,0x3
100291d7:	shr    ecx,0x3
100291da:	cmp    ecx,edx
100291dc:	mov    DWORD PTR [esp+0xc],eax
100291e0:	ja     0x100291e9
100291e2:	jmp    0x100291e7
100291e4:	lea    ecx,[ebx+0x5]
100291e7:	mov    edx,ecx
100291e9:	lea    eax,[ebx+0x4]
100291ec:	cmp    eax,edx
100291ee:	ja     0x1002920d
100291f0:	mov    eax,DWORD PTR [esp+0x18]
100291f4:	test   eax,eax
100291f6:	je     0x1002920d
100291f8:	mov    edi,DWORD PTR [esp+0x20]
100291fc:	push   edi
100291fd:	push   ebx
100291fe:	push   eax
100291ff:	push   esi
10029200:	call   0x100290d0
10029205:	add    esp,0x10
10029208:	jmp    0x10029362
1002920d:	cmp    DWORD PTR [esi+0x88],0x4
10029214:	je     0x100292d8
1002921a:	cmp    ecx,edx
1002921c:	je     0x100292d8
10029222:	mov    ecx,DWORD PTR [esi+0x16bc]
10029228:	cmp    ecx,0xd
1002922b:	mov    edi,DWORD PTR [esp+0x20]
1002922f:	lea    edx,[edi+0x4]
10029232:	jle    0x10029286
10029234:	mov    eax,edx
10029236:	shl    eax,cl
10029238:	mov    ecx,DWORD PTR [esi+0x8]
1002923b:	or     WORD PTR [esi+0x16b8],ax
10029242:	movzx  ebx,BYTE PTR [esi+0x16b8]
10029249:	mov    eax,DWORD PTR [esi+0x14]
1002924c:	mov    BYTE PTR [ecx+eax*1],bl
1002924f:	add    DWORD PTR [esi+0x14],0x1
10029253:	movzx  ebx,BYTE PTR [esi+0x16b9]
1002925a:	mov    ecx,DWORD PTR [esi+0x14]
1002925d:	mov    eax,DWORD PTR [esi+0x8]
10029260:	mov    BYTE PTR [ecx+eax*1],bl
10029263:	mov    ebx,DWORD PTR [esi+0x16bc]
10029269:	add    DWORD PTR [esi+0x14],0x1
1002926d:	mov    cl,0x10
1002926f:	sub    cl,bl
10029271:	shr    dx,cl
10029274:	add    ebx,0xfffffff3
10029277:	mov    DWORD PTR [esi+0x16bc],ebx
1002927d:	mov    WORD PTR [esi+0x16b8],dx
10029284:	jmp    0x10029298
10029286:	shl    edx,cl
10029288:	or     WORD PTR [esi+0x16b8],dx
1002928f:	add    ecx,0x3
10029292:	mov    DWORD PTR [esi+0x16bc],ecx
10029298:	mov    eax,DWORD PTR [esp+0xc]
1002929c:	mov    ecx,DWORD PTR [esi+0xb28]
100292a2:	mov    edx,DWORD PTR [esi+0xb1c]
100292a8:	add    eax,0x1
100292ab:	push   eax
100292ac:	add    ecx,0x1
100292af:	push   ecx
100292b0:	add    edx,0x1
100292b3:	push   edx
100292b4:	mov    eax,esi
100292b6:	call   0x10028510
100292bb:	lea    eax,[esi+0x988]
100292c1:	push   eax
100292c2:	lea    ecx,[esi+0x94]
100292c8:	push   ecx
100292c9:	mov    eax,esi
100292cb:	call   0x10028770
100292d0:	add    esp,0x14
100292d3:	jmp    0x10029362
100292d8:	mov    ecx,DWORD PTR [esi+0x16bc]
100292de:	cmp    ecx,0xd
100292e1:	mov    edi,DWORD PTR [esp+0x20]
100292e5:	lea    eax,[edi+0x2]
100292e8:	jle    0x1002933c
100292ea:	mov    edx,eax
100292ec:	shl    edx,cl
100292ee:	mov    ecx,DWORD PTR [esi+0x8]
100292f1:	or     WORD PTR [esi+0x16b8],dx
100292f8:	movzx  ebx,BYTE PTR [esi+0x16b8]
100292ff:	mov    edx,DWORD PTR [esi+0x14]
10029302:	mov    BYTE PTR [ecx+edx*1],bl
10029305:	add    DWORD PTR [esi+0x14],0x1
10029309:	movzx  ebx,BYTE PTR [esi+0x16b9]
10029310:	mov    ecx,DWORD PTR [esi+0x14]
10029313:	mov    edx,DWORD PTR [esi+0x8]
10029316:	mov    BYTE PTR [ecx+edx*1],bl
10029319:	mov    edx,DWORD PTR [esi+0x16bc]
1002931f:	add    DWORD PTR [esi+0x14],0x1
10029323:	mov    cl,0x10
10029325:	sub    cl,dl
10029327:	shr    ax,cl
1002932a:	add    edx,0xfffffff3
1002932d:	mov    DWORD PTR [esi+0x16bc],edx
10029333:	mov    WORD PTR [esi+0x16b8],ax
1002933a:	jmp    0x1002934e
1002933c:	shl    eax,cl
1002933e:	or     WORD PTR [esi+0x16b8],ax
10029345:	add    ecx,0x3
10029348:	mov    DWORD PTR [esi+0x16bc],ecx
1002934e:	push   0x10052f20
10029353:	push   0x10052aa0
10029358:	mov    eax,esi
1002935a:	call   0x10028770
1002935f:	add    esp,0x8
10029362:	mov    edx,esi
10029364:	call   0x10027bb0
10029369:	test   edi,edi
1002936b:	pop    edi
1002936c:	je     0x1002937a
1002936e:	mov    eax,esi
10029370:	pop    esi
10029371:	pop    ebx
10029372:	add    esp,0x4
10029375:	jmp    0x10028c70
1002937a:	pop    esi
1002937b:	pop    ebx
1002937c:	pop    ecx
1002937d:	ret    
1002937e:	int3   
1002937f:	int3   
10029380:	push   esi
10029381:	mov    esi,edx
10029383:	test   esi,esi
10029385:	not    eax
10029387:	je     0x100293b2
10029389:	lea    esp,[esp+0x0]
10029390:	test   cl,0x3
10029393:	je     0x100293b2
10029395:	movzx  edx,BYTE PTR [ecx]
10029398:	xor    edx,eax
1002939a:	and    edx,0xff
100293a0:	shr    eax,0x8
100293a3:	xor    eax,DWORD PTR [edx*4+0x10053388]
100293aa:	add    ecx,0x1
100293ad:	sub    esi,0x1
100293b0:	jne    0x10029390
100293b2:	cmp    esi,0x20
100293b5:	push   ebx
100293b6:	push   edi
100293b7:	jb     0x1002959c
100293bd:	mov    edi,esi
100293bf:	shr    edi,0x5
100293c2:	xor    eax,DWORD PTR [ecx]
100293c4:	add    ecx,0x4
100293c7:	mov    edx,eax
100293c9:	shr    edx,0x10
100293cc:	movzx  ebx,ah
100293cf:	and    edx,0xff
100293d5:	mov    edx,DWORD PTR [edx*4+0x10053788]
100293dc:	xor    edx,DWORD PTR [ebx*4+0x10053b88]
100293e3:	mov    ebx,eax
100293e5:	and    eax,0xff
100293ea:	shr    ebx,0x18
100293ed:	xor    edx,DWORD PTR [ebx*4+0x10053388]
100293f4:	add    ecx,0x4
100293f7:	xor    edx,DWORD PTR [eax*4+0x10053f88]
100293fe:	add    ecx,0x4
10029401:	xor    edx,DWORD PTR [ecx-0x8]
10029404:	add    ecx,0x4
10029407:	mov    eax,edx
10029409:	shr    eax,0x10
1002940c:	and    eax,0xff
10029411:	mov    eax,DWORD PTR [eax*4+0x10053788]
10029418:	movzx  ebx,dh
1002941b:	xor    eax,DWORD PTR [ebx*4+0x10053b88]
10029422:	mov    ebx,edx
10029424:	and    edx,0xff
1002942a:	shr    ebx,0x18
1002942d:	xor    eax,DWORD PTR [ebx*4+0x10053388]
10029434:	add    ecx,0x4
10029437:	xor    eax,DWORD PTR [edx*4+0x10053f88]
1002943e:	add    ecx,0x4
10029441:	xor    eax,DWORD PTR [ecx-0x10]
10029444:	mov    edx,eax
10029446:	shr    edx,0x10
10029449:	movzx  ebx,ah
1002944c:	and    edx,0xff
10029452:	mov    edx,DWORD PTR [edx*4+0x10053788]
10029459:	xor    edx,DWORD PTR [ebx*4+0x10053b88]
10029460:	mov    ebx,eax
10029462:	and    eax,0xff
10029467:	shr    ebx,0x18
1002946a:	xor    edx,DWORD PTR [ebx*4+0x10053388]
10029471:	xor    edx,DWORD PTR [eax*4+0x10053f88]
10029478:	xor    edx,DWORD PTR [ecx-0xc]
1002947b:	mov    eax,edx
1002947d:	shr    eax,0x10
10029480:	and    eax,0xff
10029485:	mov    eax,DWORD PTR [eax*4+0x10053788]
1002948c:	movzx  ebx,dh
1002948f:	xor    eax,DWORD PTR [ebx*4+0x10053b88]
10029496:	mov    ebx,edx
10029498:	and    edx,0xff
1002949e:	shr    ebx,0x18
100294a1:	xor    eax,DWORD PTR [ebx*4+0x10053388]
100294a8:	xor    eax,DWORD PTR [edx*4+0x10053f88]
100294af:	xor    eax,DWORD PTR [ecx-0x8]
100294b2:	mov    edx,eax
100294b4:	shr    edx,0x10
100294b7:	movzx  ebx,ah
100294ba:	and    edx,0xff
100294c0:	mov    edx,DWORD PTR [edx*4+0x10053788]
100294c7:	xor    edx,DWORD PTR [ebx*4+0x10053b88]
100294ce:	mov    ebx,eax
100294d0:	and    eax,0xff
100294d5:	shr    ebx,0x18
100294d8:	xor    edx,DWORD PTR [ebx*4+0x10053388]
100294df:	xor    edx,DWORD PTR [eax*4+0x10053f88]
100294e6:	xor    edx,DWORD PTR [ecx-0x4]
100294e9:	mov    eax,edx
100294eb:	shr    eax,0x10
100294ee:	and    eax,0xff
100294f3:	mov    eax,DWORD PTR [eax*4+0x10053788]
100294fa:	movzx  ebx,dh
100294fd:	xor    eax,DWORD PTR [ebx*4+0x10053b88]
10029504:	mov    ebx,edx
10029506:	shr    ebx,0x18
10029509:	xor    eax,DWORD PTR [ebx*4+0x10053388]
10029510:	and    edx,0xff
10029516:	xor    eax,DWORD PTR [edx*4+0x10053f88]
1002951d:	xor    eax,DWORD PTR [ecx]
1002951f:	add    ecx,0x4
10029522:	mov    edx,eax
10029524:	shr    edx,0x10
10029527:	movzx  ebx,ah
1002952a:	and    edx,0xff
10029530:	mov    edx,DWORD PTR [edx*4+0x10053788]
10029537:	xor    edx,DWORD PTR [ebx*4+0x10053b88]
1002953e:	mov    ebx,eax
10029540:	and    eax,0xff
10029545:	shr    ebx,0x18
10029548:	xor    edx,DWORD PTR [ebx*4+0x10053388]
1002954f:	add    ecx,0x4
10029552:	xor    edx,DWORD PTR [eax*4+0x10053f88]
10029559:	sub    esi,0x20
1002955c:	xor    edx,DWORD PTR [ecx-0x4]
1002955f:	mov    eax,edx
10029561:	shr    eax,0x10
10029564:	and    eax,0xff
10029569:	mov    eax,DWORD PTR [eax*4+0x10053788]
10029570:	movzx  ebx,dh
10029573:	xor    eax,DWORD PTR [ebx*4+0x10053b88]
1002957a:	mov    ebx,edx
1002957c:	shr    ebx,0x18
1002957f:	xor    eax,DWORD PTR [ebx*4+0x10053388]
10029586:	and    edx,0xff
1002958c:	xor    eax,DWORD PTR [edx*4+0x10053f88]
10029593:	sub    edi,0x1
10029596:	jne    0x100293c2
1002959c:	cmp    esi,0x4
1002959f:	jb     0x100295e9
100295a1:	mov    edx,esi
100295a3:	shr    edx,0x2
100295a6:	xor    eax,DWORD PTR [ecx]
100295a8:	add    ecx,0x4
100295ab:	mov    edi,eax
100295ad:	shr    edi,0x10
100295b0:	and    edi,0xff
100295b6:	mov    edi,DWORD PTR [edi*4+0x10053788]
100295bd:	movzx  ebx,ah
100295c0:	xor    edi,DWORD PTR [ebx*4+0x10053b88]
100295c7:	mov    ebx,eax
100295c9:	shr    ebx,0x18
100295cc:	xor    edi,DWORD PTR [ebx*4+0x10053388]
100295d3:	and    eax,0xff
100295d8:	xor    edi,DWORD PTR [eax*4+0x10053f88]
100295df:	sub    esi,0x4
100295e2:	sub    edx,0x1
100295e5:	mov    eax,edi
100295e7:	jne    0x100295a6
100295e9:	test   esi,esi
100295eb:	pop    edi
100295ec:	pop    ebx
100295ed:	je     0x1002960d
100295ef:	nop
100295f0:	movzx  edx,BYTE PTR [ecx]
100295f3:	xor    edx,eax
100295f5:	and    edx,0xff
100295fb:	shr    eax,0x8
100295fe:	xor    eax,DWORD PTR [edx*4+0x10053388]
10029605:	add    ecx,0x1
10029608:	sub    esi,0x1
1002960b:	jne    0x100295f0
1002960d:	not    eax
1002960f:	pop    esi
10029610:	ret    
10029611:	int3   
10029612:	int3   
10029613:	int3   
10029614:	int3   
10029615:	int3   
10029616:	int3   
10029617:	int3   
10029618:	int3   
10029619:	int3   
1002961a:	int3   
1002961b:	int3   
1002961c:	int3   
1002961d:	int3   
1002961e:	int3   
1002961f:	int3   
10029620:	mov    ecx,DWORD PTR [esp+0x8]
10029624:	test   ecx,ecx
10029626:	jne    0x1002962b
10029628:	xor    eax,eax
1002962a:	ret    
1002962b:	mov    edx,DWORD PTR [esp+0xc]
1002962f:	mov    eax,DWORD PTR [esp+0x4]
10029633:	jmp    0x10029380
10029638:	int3   
10029639:	int3   
1002963a:	int3   
1002963b:	int3   
1002963c:	int3   
1002963d:	int3   
1002963e:	int3   
1002963f:	int3   
10029640:	mov    eax,DWORD PTR [esp+0x8]
10029644:	imul   eax,DWORD PTR [esp+0xc]
10029649:	push   eax
1002964a:	call   0x10016c12
1002964f:	add    esp,0x4
10029652:	ret    
10029653:	int3   
10029654:	int3   
10029655:	int3   
10029656:	int3   
10029657:	int3   
10029658:	int3   
10029659:	int3   
1002965a:	int3   
1002965b:	int3   
1002965c:	int3   
1002965d:	int3   
1002965e:	int3   
1002965f:	int3   
10029660:	mov    eax,DWORD PTR [esp+0x8]
10029664:	push   eax
10029665:	call   0x10016b35
1002966a:	pop    ecx
1002966b:	ret    
1002966c:	int3   
1002966d:	int3   
1002966e:	int3   
1002966f:	int3   
10029670:	sub    esp,0x3c
10029673:	push   ebx
10029674:	push   ebp
10029675:	push   esi
10029676:	push   edi
10029677:	mov    ecx,DWORD PTR [esp+0x50]
1002967b:	mov    eax,DWORD PTR [ecx+0x1c]
1002967e:	mov    edx,DWORD PTR [ecx+0x4]
10029681:	mov    ebx,DWORD PTR [eax+0x38]
10029684:	mov    ebp,DWORD PTR [ecx]
10029686:	sub    ebp,0x1
10029689:	lea    edx,[edx+ebp*1-0x5]
1002968d:	mov    DWORD PTR [esp+0x14],edx
10029691:	mov    esi,DWORD PTR [ecx+0xc]
10029694:	mov    ecx,DWORD PTR [ecx+0x10]
10029697:	mov    edx,ecx
10029699:	sub    edx,DWORD PTR [esp+0x54]
1002969d:	sub    esi,0x1
100296a0:	add    edx,esi
100296a2:	lea    ecx,[ecx+esi*1-0x101]
100296a9:	mov    DWORD PTR [esp+0x38],edx
100296ad:	mov    edx,DWORD PTR [eax+0x28]
100296b0:	mov    DWORD PTR [esp+0x2c],ecx
100296b4:	mov    ecx,DWORD PTR [eax+0x2c]
100296b7:	mov    DWORD PTR [esp+0x28],edx
100296bb:	mov    edx,DWORD PTR [eax+0x30]
100296be:	mov    DWORD PTR [esp+0x3c],ecx
100296c2:	mov    ecx,DWORD PTR [eax+0x34]
100296c5:	mov    DWORD PTR [esp+0x44],edx
100296c9:	mov    edx,DWORD PTR [eax+0x4c]
100296cc:	mov    DWORD PTR [esp+0x40],ecx
100296d0:	mov    ecx,DWORD PTR [eax+0x50]
100296d3:	mov    DWORD PTR [esp+0x20],edx
100296d7:	mov    DWORD PTR [esp+0x24],ecx
100296db:	mov    ecx,DWORD PTR [eax+0x54]
100296de:	mov    edx,0x1
100296e3:	shl    edx,cl
100296e5:	mov    ecx,DWORD PTR [eax+0x58]
100296e8:	mov    DWORD PTR [esp+0x18],eax
100296ec:	mov    edi,DWORD PTR [eax+0x3c]
100296ef:	mov    DWORD PTR [esp+0x54],0x1
100296f7:	mov    eax,DWORD PTR [esp+0x54]
100296fb:	shl    eax,cl
100296fd:	sub    edx,0x1
10029700:	mov    DWORD PTR [esp+0x10],ebp
10029704:	mov    DWORD PTR [esp+0x48],edx
10029708:	sub    eax,0x1
1002970b:	mov    DWORD PTR [esp+0x30],eax
1002970f:	nop
10029710:	cmp    edi,0xf
10029713:	jae    0x10029739
10029715:	movzx  eax,BYTE PTR [ebp+0x1]
10029719:	add    ebp,0x1
1002971c:	mov    ecx,edi
1002971e:	shl    eax,cl
10029720:	add    ebp,0x1
10029723:	add    edi,0x8
10029726:	mov    ecx,edi
10029728:	add    ebx,eax
1002972a:	movzx  eax,BYTE PTR [ebp+0x0]
1002972e:	shl    eax,cl
10029730:	mov    DWORD PTR [esp+0x10],ebp
10029734:	add    ebx,eax
10029736:	add    edi,0x8
10029739:	mov    ecx,DWORD PTR [esp+0x20]
1002973d:	and    edx,ebx
1002973f:	mov    eax,DWORD PTR [ecx+edx*4]
10029742:	mov    edx,eax
10029744:	shr    edx,0x8
10029747:	movzx  ecx,dl
1002974a:	movzx  edx,al
1002974d:	shr    ebx,cl
1002974f:	sub    edi,ecx
10029751:	test   edx,edx
10029753:	je     0x10029798
10029755:	test   dl,0x10
10029758:	jne    0x100297a5
1002975a:	test   dl,0x40
1002975d:	jne    0x10029aaa
10029763:	mov    ecx,0x1
10029768:	mov    DWORD PTR [esp+0x54],ecx
1002976c:	mov    ecx,edx
1002976e:	mov    edx,DWORD PTR [esp+0x54]
10029772:	shl    edx,cl
10029774:	shr    eax,0x10
10029777:	sub    edx,0x1
1002977a:	and    edx,ebx
1002977c:	add    edx,eax
1002977e:	mov    eax,DWORD PTR [esp+0x20]
10029782:	mov    eax,DWORD PTR [eax+edx*4]
10029785:	mov    ecx,eax
10029787:	shr    ecx,0x8
1002978a:	movzx  ecx,cl
1002978d:	movzx  edx,al
10029790:	shr    ebx,cl
10029792:	sub    edi,ecx
10029794:	test   edx,edx
10029796:	jne    0x10029755
10029798:	add    esi,0x1
1002979b:	shr    eax,0x10
1002979e:	mov    BYTE PTR [esi],al
100297a0:	jmp    0x10029a05
100297a5:	shr    eax,0x10
100297a8:	and    edx,0xf
100297ab:	mov    DWORD PTR [esp+0x54],eax
100297af:	je     0x100297df
100297b1:	cmp    edi,edx
100297b3:	jae    0x100297c9
100297b5:	movzx  eax,BYTE PTR [ebp+0x1]
100297b9:	add    ebp,0x1
100297bc:	mov    ecx,edi
100297be:	shl    eax,cl
100297c0:	mov    DWORD PTR [esp+0x10],ebp
100297c4:	add    ebx,eax
100297c6:	add    edi,0x8
100297c9:	mov    ecx,edx
100297cb:	mov    eax,0x1
100297d0:	shl    eax,cl
100297d2:	sub    eax,0x1
100297d5:	and    eax,ebx
100297d7:	add    DWORD PTR [esp+0x54],eax
100297db:	shr    ebx,cl
100297dd:	sub    edi,edx
100297df:	cmp    edi,0xf
100297e2:	jae    0x10029808
100297e4:	movzx  edx,BYTE PTR [ebp+0x1]
100297e8:	add    ebp,0x1
100297eb:	movzx  eax,BYTE PTR [ebp+0x1]
100297ef:	mov    ecx,edi
100297f1:	add    ebp,0x1
100297f4:	shl    edx,cl
100297f6:	add    edi,0x8
100297f9:	mov    ecx,edi
100297fb:	shl    eax,cl
100297fd:	add    ebx,edx
100297ff:	mov    DWORD PTR [esp+0x10],ebp
10029803:	add    ebx,eax
10029805:	add    edi,0x8
10029808:	mov    ecx,DWORD PTR [esp+0x30]
1002980c:	mov    edx,DWORD PTR [esp+0x24]
10029810:	and    ecx,ebx
10029812:	mov    edx,DWORD PTR [edx+ecx*4]
10029815:	mov    eax,edx
10029817:	shr    eax,0x8
1002981a:	movzx  ecx,al
1002981d:	movzx  eax,dl
10029820:	shr    ebx,cl
10029822:	sub    edi,ecx
10029824:	test   al,0x10
10029826:	mov    DWORD PTR [esp+0x1c],edx
1002982a:	jne    0x1002986b
1002982c:	lea    esp,[esp+0x0]
10029830:	test   al,0x40
10029832:	jne    0x10029a9d
10029838:	mov    ecx,eax
1002983a:	movzx  eax,WORD PTR [esp+0x1e]
1002983f:	mov    edx,0x1
10029844:	shl    edx,cl
10029846:	mov    ecx,DWORD PTR [esp+0x24]
1002984a:	sub    edx,0x1
1002984d:	and    edx,ebx
1002984f:	add    edx,eax
10029851:	mov    edx,DWORD PTR [ecx+edx*4]
10029854:	mov    eax,edx
10029856:	shr    eax,0x8
10029859:	movzx  ecx,al
1002985c:	movzx  eax,dl
1002985f:	shr    ebx,cl
10029861:	sub    edi,ecx
10029863:	test   al,0x10
10029865:	mov    DWORD PTR [esp+0x1c],edx
10029869:	je     0x10029830
1002986b:	shr    edx,0x10
1002986e:	and    eax,0xf
10029871:	cmp    edi,eax
10029873:	mov    DWORD PTR [esp+0x1c],edx
10029877:	jae    0x100298a5
10029879:	movzx  edx,BYTE PTR [ebp+0x1]
1002987d:	add    ebp,0x1
10029880:	mov    ecx,edi
10029882:	shl    edx,cl
10029884:	add    edi,0x8
10029887:	mov    DWORD PTR [esp+0x10],ebp
1002988b:	add    ebx,edx
1002988d:	cmp    edi,eax
1002988f:	jae    0x100298a5
10029891:	movzx  edx,BYTE PTR [ebp+0x1]
10029895:	add    ebp,0x1
10029898:	mov    ecx,edi
1002989a:	shl    edx,cl
1002989c:	mov    DWORD PTR [esp+0x10],ebp
100298a0:	add    ebx,edx
100298a2:	add    edi,0x8
100298a5:	mov    ecx,0x1
100298aa:	mov    edx,ecx
100298ac:	mov    ecx,eax
100298ae:	shl    edx,cl
100298b0:	sub    edi,eax
100298b2:	sub    edx,0x1
100298b5:	and    edx,ebx
100298b7:	mov    ecx,edx
100298b9:	mov    edx,DWORD PTR [esp+0x1c]
100298bd:	add    edx,ecx
100298bf:	mov    ecx,eax
100298c1:	mov    eax,esi
100298c3:	sub    eax,DWORD PTR [esp+0x38]
100298c7:	shr    ebx,cl
100298c9:	cmp    edx,eax
100298cb:	mov    DWORD PTR [esp+0x1c],edx
100298cf:	jbe    0x10029a24
100298d5:	mov    ebp,edx
100298d7:	sub    ebp,eax
100298d9:	cmp    ebp,DWORD PTR [esp+0x3c]
100298dd:	ja     0x10029a82
100298e3:	mov    ecx,DWORD PTR [esp+0x40]
100298e7:	mov    eax,DWORD PTR [esp+0x44]
100298eb:	add    ecx,0xffffffff
100298ee:	test   eax,eax
100298f0:	mov    DWORD PTR [esp+0x34],ecx
100298f4:	jne    0x10029922
100298f6:	mov    eax,DWORD PTR [esp+0x28]
100298fa:	sub    eax,ebp
100298fc:	add    ecx,eax
100298fe:	cmp    ebp,DWORD PTR [esp+0x54]
10029902:	jae    0x1002999a
10029908:	sub    DWORD PTR [esp+0x54],ebp
1002990c:	lea    esp,[esp+0x0]
10029910:	mov    al,BYTE PTR [ecx+0x1]
10029913:	add    ecx,0x1
10029916:	add    esi,0x1
10029919:	sub    ebp,0x1
1002991c:	mov    BYTE PTR [esi],al
1002991e:	jne    0x10029910
10029920:	jmp    0x10029996
10029922:	cmp    eax,ebp
10029924:	jae    0x10029978
10029926:	mov    edx,eax
10029928:	sub    edx,ebp
1002992a:	add    edx,DWORD PTR [esp+0x28]
1002992e:	sub    ebp,eax
10029930:	add    ecx,edx
10029932:	cmp    ebp,DWORD PTR [esp+0x54]
10029936:	jae    0x1002999a
10029938:	sub    DWORD PTR [esp+0x54],ebp
1002993c:	lea    esp,[esp+0x0]
10029940:	mov    dl,BYTE PTR [ecx+0x1]
10029943:	add    ecx,0x1
10029946:	add    esi,0x1
10029949:	sub    ebp,0x1
1002994c:	mov    BYTE PTR [esi],dl
1002994e:	jne    0x10029940
10029950:	cmp    eax,DWORD PTR [esp+0x54]
10029954:	mov    ecx,DWORD PTR [esp+0x34]
10029958:	jae    0x1002999a
1002995a:	sub    DWORD PTR [esp+0x54],eax
1002995e:	mov    ebp,eax
10029960:	mov    al,BYTE PTR [ecx+0x1]
10029963:	add    ecx,0x1
10029966:	add    esi,0x1
10029969:	sub    ebp,0x1
1002996c:	mov    BYTE PTR [esi],al
1002996e:	jne    0x10029960
10029970:	mov    ecx,esi
10029972:	sub    ecx,DWORD PTR [esp+0x1c]
10029976:	jmp    0x1002999a
10029978:	sub    eax,ebp
1002997a:	add    ecx,eax
1002997c:	cmp    ebp,DWORD PTR [esp+0x54]
10029980:	jae    0x1002999a
10029982:	sub    DWORD PTR [esp+0x54],ebp
10029986:	mov    al,BYTE PTR [ecx+0x1]
10029989:	add    ecx,0x1
1002998c:	add    esi,0x1
1002998f:	sub    ebp,0x1
10029992:	mov    BYTE PTR [esi],al
10029994:	jne    0x10029986
10029996:	mov    ecx,esi
10029998:	sub    ecx,edx
1002999a:	mov    eax,DWORD PTR [esp+0x54]
1002999e:	cmp    eax,0x2
100299a1:	jbe    0x100299e1
100299a3:	lea    edx,[eax-0x3]
100299a6:	mov    eax,0xaaaaaaab
100299ab:	mul    edx
100299ad:	mov    ebp,edx
100299af:	shr    ebp,1
100299b1:	add    ebp,0x1
100299b4:	movzx  eax,BYTE PTR [ecx+0x1]
100299b8:	sub    DWORD PTR [esp+0x54],0x3
100299bd:	add    ecx,0x1
100299c0:	add    esi,0x1
100299c3:	mov    BYTE PTR [esi],al
100299c5:	mov    dl,BYTE PTR [ecx+0x1]
100299c8:	add    ecx,0x1
100299cb:	add    esi,0x1
100299ce:	mov    BYTE PTR [esi],dl
100299d0:	movzx  eax,BYTE PTR [ecx+0x1]
100299d4:	add    ecx,0x1
100299d7:	add    esi,0x1
100299da:	sub    ebp,0x1
100299dd:	mov    BYTE PTR [esi],al
100299df:	jne    0x100299b4
100299e1:	mov    ebp,DWORD PTR [esp+0x54]
100299e5:	test   ebp,ebp
100299e7:	je     0x10029a01
100299e9:	mov    dl,BYTE PTR [ecx+0x1]
100299ec:	add    ecx,0x1
100299ef:	add    esi,0x1
100299f2:	cmp    ebp,0x1
100299f5:	mov    BYTE PTR [esi],dl
100299f7:	jbe    0x10029a01
100299f9:	mov    al,BYTE PTR [ecx+0x1]
100299fc:	add    esi,0x1
100299ff:	mov    BYTE PTR [esi],al
10029a01:	mov    ebp,DWORD PTR [esp+0x10]
10029a05:	mov    edx,DWORD PTR [esp+0x14]
10029a09:	cmp    ebp,edx
10029a0b:	jae    0x10029ad4
10029a11:	cmp    esi,DWORD PTR [esp+0x2c]
10029a15:	jae    0x10029ad4
10029a1b:	mov    edx,DWORD PTR [esp+0x48]
10029a1f:	jmp    0x10029710
10029a24:	mov    eax,esi
10029a26:	sub    eax,edx
10029a28:	jmp    0x10029a30
10029a2a:	lea    ebx,[ebx+0x0]
10029a30:	movzx  ecx,BYTE PTR [eax+0x1]
10029a34:	add    eax,0x1
10029a37:	mov    BYTE PTR [esi+0x1],cl
10029a3a:	mov    dl,BYTE PTR [eax+0x1]
10029a3d:	add    esi,0x1
10029a40:	add    eax,0x1
10029a43:	add    esi,0x1
10029a46:	mov    BYTE PTR [esi],dl
10029a48:	movzx  ecx,BYTE PTR [eax+0x1]
10029a4c:	add    eax,0x1
10029a4f:	add    esi,0x1
10029a52:	mov    BYTE PTR [esi],cl
10029a54:	mov    ecx,DWORD PTR [esp+0x54]
10029a58:	sub    ecx,0x3
10029a5b:	cmp    ecx,0x2
10029a5e:	mov    DWORD PTR [esp+0x54],ecx
10029a62:	ja     0x10029a30
10029a64:	test   ecx,ecx
10029a66:	je     0x10029a05
10029a68:	mov    dl,BYTE PTR [eax+0x1]
10029a6b:	add    eax,0x1
10029a6e:	add    esi,0x1
10029a71:	cmp    ecx,0x1
10029a74:	mov    BYTE PTR [esi],dl
10029a76:	jbe    0x10029a05
10029a78:	mov    al,BYTE PTR [eax+0x1]
10029a7b:	add    esi,0x1
10029a7e:	mov    BYTE PTR [esi],al
10029a80:	jmp    0x10029a05
10029a82:	mov    ecx,DWORD PTR [esp+0x50]
10029a86:	mov    edx,DWORD PTR [esp+0x18]
10029a8a:	mov    ebp,DWORD PTR [esp+0x10]
10029a8e:	mov    DWORD PTR [ecx+0x18],0x100527c0
10029a95:	mov    DWORD PTR [edx],0x1b
10029a9b:	jmp    0x10029ad0
10029a9d:	mov    eax,DWORD PTR [esp+0x50]
10029aa1:	mov    DWORD PTR [eax+0x18],0x100527e0
10029aa8:	jmp    0x10029ac6
10029aaa:	test   dl,0x20
10029aad:	je     0x10029abb
10029aaf:	mov    edx,DWORD PTR [esp+0x18]
10029ab3:	mov    DWORD PTR [edx],0xb
10029ab9:	jmp    0x10029ad0
10029abb:	mov    eax,DWORD PTR [esp+0x50]
10029abf:	mov    DWORD PTR [eax+0x18],0x100527f8
10029ac6:	mov    ecx,DWORD PTR [esp+0x18]
10029aca:	mov    DWORD PTR [ecx],0x1b
10029ad0:	mov    edx,DWORD PTR [esp+0x14]
10029ad4:	mov    eax,edi
10029ad6:	shr    eax,0x3
10029ad9:	sub    ebp,eax
10029adb:	add    eax,eax
10029add:	add    eax,eax
10029adf:	add    eax,eax
10029ae1:	sub    edi,eax
10029ae3:	mov    ecx,edi
10029ae5:	mov    eax,0x1
10029aea:	shl    eax,cl
10029aec:	mov    ecx,DWORD PTR [esp+0x50]
10029af0:	sub    edx,ebp
10029af2:	add    edx,0x5
10029af5:	sub    eax,0x1
10029af8:	and    ebx,eax
10029afa:	lea    eax,[ebp+0x1]
10029afd:	mov    DWORD PTR [ecx],eax
10029aff:	lea    eax,[esi+0x1]
10029b02:	mov    DWORD PTR [ecx+0xc],eax
10029b05:	mov    eax,DWORD PTR [esp+0x2c]
10029b09:	sub    eax,esi
10029b0b:	add    eax,0x101
10029b10:	mov    DWORD PTR [ecx+0x10],eax
10029b13:	mov    eax,DWORD PTR [esp+0x18]
10029b17:	mov    DWORD PTR [ecx+0x4],edx
10029b1a:	mov    DWORD PTR [eax+0x3c],edi
10029b1d:	pop    edi
10029b1e:	pop    esi
10029b1f:	pop    ebp
10029b20:	mov    DWORD PTR [eax+0x38],ebx
10029b23:	pop    ebx
10029b24:	add    esp,0x3c
10029b27:	ret    
10029b28:	int3   
10029b29:	int3   
10029b2a:	int3   
10029b2b:	int3   
10029b2c:	int3   
10029b2d:	int3   
10029b2e:	int3   
10029b2f:	int3   
10029b30:	sub    esp,0x8c
10029b36:	mov    eax,ds:0x10064694
10029b3b:	xor    eax,esp
10029b3d:	mov    DWORD PTR [esp+0x88],eax
10029b44:	mov    eax,DWORD PTR [esp+0xa4]
10029b4b:	mov    edx,DWORD PTR [esp+0xa0]
10029b52:	push   ebx
10029b53:	mov    ebx,DWORD PTR [esp+0xa0]
10029b5a:	push   ebp
10029b5b:	mov    ebp,DWORD PTR [esp+0x9c]
10029b62:	push   esi
10029b63:	mov    esi,DWORD PTR [esp+0xa4]
10029b6a:	mov    DWORD PTR [esp+0x18],eax
10029b6e:	xor    eax,eax
10029b70:	test   esi,esi
10029b72:	mov    DWORD PTR [esp+0x50],ebp
10029b76:	mov    DWORD PTR [esp+0x38],ebx
10029b7a:	mov    DWORD PTR [esp+0x48],edx
10029b7e:	mov    DWORD PTR [esp+0x54],eax
10029b82:	mov    DWORD PTR [esp+0x58],eax
10029b86:	mov    DWORD PTR [esp+0x5c],eax
10029b8a:	mov    DWORD PTR [esp+0x60],eax
10029b8e:	mov    DWORD PTR [esp+0x64],eax
10029b92:	mov    DWORD PTR [esp+0x68],eax
10029b96:	mov    DWORD PTR [esp+0x6c],eax
10029b9a:	mov    DWORD PTR [esp+0x70],eax
10029b9e:	jbe    0x10029bb6
10029ba0:	movzx  ecx,WORD PTR [ebp+eax*2+0x0]
10029ba5:	add    WORD PTR [esp+ecx*2+0x54],0x1
10029bab:	lea    ecx,[esp+ecx*2+0x54]
10029baf:	add    eax,0x1
10029bb2:	cmp    eax,esi
10029bb4:	jb     0x10029ba0
10029bb6:	mov    eax,DWORD PTR [edx]
10029bb8:	mov    DWORD PTR [esp+0x10],eax
10029bbc:	mov    ecx,0xf
10029bc1:	cmp    WORD PTR [esp+ecx*2+0x54],0x0
10029bc7:	jne    0x10029bd1
10029bc9:	sub    ecx,0x1
10029bcc:	cmp    ecx,0x1
10029bcf:	jae    0x10029bc1
10029bd1:	cmp    eax,ecx
10029bd3:	mov    DWORD PTR [esp+0x1c],ecx
10029bd7:	jbe    0x10029bdf
10029bd9:	mov    DWORD PTR [esp+0x10],ecx
10029bdd:	mov    eax,ecx
10029bdf:	test   ecx,ecx
10029be1:	jne    0x10029c24
10029be3:	mov    WORD PTR [esp+0xe],cx
10029be8:	mov    ecx,DWORD PTR [ebx]
10029bea:	mov    BYTE PTR [esp+0xc],0x40
10029bef:	mov    BYTE PTR [esp+0xd],0x1
10029bf4:	mov    eax,DWORD PTR [esp+0xc]
10029bf8:	mov    DWORD PTR [ecx],eax
10029bfa:	add    DWORD PTR [ebx],0x4
10029bfd:	mov    ecx,DWORD PTR [ebx]
10029bff:	pop    esi
10029c00:	mov    DWORD PTR [ecx],eax
10029c02:	add    DWORD PTR [ebx],0x4
10029c05:	pop    ebp
10029c06:	mov    DWORD PTR [edx],0x1
10029c0c:	xor    eax,eax
10029c0e:	pop    ebx
10029c0f:	mov    ecx,DWORD PTR [esp+0x88]
10029c16:	xor    ecx,esp
10029c18:	call   0x10015adb
10029c1d:	add    esp,0x8c
10029c23:	ret    
10029c24:	mov    esi,0x1
10029c29:	lea    esp,[esp+0x0]
10029c30:	cmp    WORD PTR [esp+esi*2+0x54],0x0
10029c36:	jne    0x10029c74
10029c38:	cmp    WORD PTR [esp+esi*2+0x56],0x0
10029c3e:	jne    0x10029c62
10029c40:	cmp    WORD PTR [esp+esi*2+0x58],0x0
10029c46:	jne    0x10029c67
10029c48:	cmp    WORD PTR [esp+esi*2+0x5a],0x0
10029c4e:	jne    0x10029c6c
10029c50:	cmp    WORD PTR [esp+esi*2+0x5c],0x0
10029c56:	jne    0x10029c71
10029c58:	add    esi,0x5
10029c5b:	cmp    esi,0xf
10029c5e:	jbe    0x10029c30
10029c60:	jmp    0x10029c74
10029c62:	add    esi,0x1
10029c65:	jmp    0x10029c74
10029c67:	add    esi,0x2
10029c6a:	jmp    0x10029c74
10029c6c:	add    esi,0x3
10029c6f:	jmp    0x10029c74
10029c71:	add    esi,0x4
10029c74:	cmp    eax,esi
10029c76:	jae    0x10029c7c
10029c78:	mov    DWORD PTR [esp+0x10],esi
10029c7c:	mov    edx,0x1
10029c81:	mov    eax,edx
10029c83:	push   edi
10029c84:	movzx  edi,WORD PTR [esp+eax*2+0x58]
10029c89:	add    edx,edx
10029c8b:	sub    edx,edi
10029c8d:	js     0x10029cab
10029c8f:	add    eax,0x1
10029c92:	cmp    eax,0xf
10029c95:	jbe    0x10029c84
10029c97:	test   edx,edx
10029c99:	mov    edi,DWORD PTR [esp+0xa0]
10029ca0:	jle    0x10029cb3
10029ca2:	test   edi,edi
10029ca4:	je     0x10029cab
10029ca6:	cmp    ecx,0x1
10029ca9:	je     0x10029cb3
10029cab:	or     eax,0xffffffff
10029cae:	jmp    0x1002a005
10029cb3:	mov    WORD PTR [esp+0x7a],0x0
10029cba:	mov    eax,0x2
10029cbf:	nop
10029cc0:	mov    cx,WORD PTR [esp+eax*1+0x78]
10029cc5:	add    cx,WORD PTR [esp+eax*1+0x58]
10029cca:	add    eax,0x2
10029ccd:	cmp    eax,0x1e
10029cd0:	mov    WORD PTR [esp+eax*1+0x78],cx
10029cd5:	jb     0x10029cc0
10029cd7:	mov    ecx,DWORD PTR [esp+0x1c]
10029cdb:	xor    eax,eax
10029cdd:	cmp    DWORD PTR [esp+0xa8],eax
10029ce4:	jbe    0x10029d17
10029ce6:	cmp    WORD PTR [ebp+eax*2+0x0],0x0
10029cec:	je     0x10029d0b
10029cee:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
10029cf3:	movzx  edx,WORD PTR [esp+edx*2+0x78]
10029cf8:	mov    WORD PTR [ecx+edx*2],ax
10029cfc:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
10029d01:	add    WORD PTR [esp+edx*2+0x78],0x1
10029d07:	lea    edx,[esp+edx*2+0x78]
10029d0b:	add    eax,0x1
10029d0e:	cmp    eax,DWORD PTR [esp+0xa8]
10029d15:	jb     0x10029ce6
10029d17:	mov    eax,edi
10029d19:	sub    eax,0x0
10029d1c:	mov    edx,0xffffffff
10029d21:	je     0x10029d64
10029d23:	sub    eax,0x1
10029d26:	je     0x10029d3e
10029d28:	mov    DWORD PTR [esp+0x2c],0x100554e0
10029d30:	mov    DWORD PTR [esp+0x38],0x10055520
10029d38:	mov    DWORD PTR [esp+0x30],edx
10029d3c:	jmp    0x10029d74
10029d3e:	mov    eax,0x10055460
10029d43:	sub    eax,0x202
10029d48:	mov    DWORD PTR [esp+0x2c],eax
10029d4c:	mov    eax,0x100554a0
10029d51:	sub    eax,0x202
10029d56:	mov    DWORD PTR [esp+0x38],eax
10029d5a:	mov    DWORD PTR [esp+0x30],0x100
10029d62:	jmp    0x10029d74
10029d64:	mov    DWORD PTR [esp+0x38],ecx
10029d68:	mov    DWORD PTR [esp+0x2c],ecx
10029d6c:	mov    DWORD PTR [esp+0x30],0x13
10029d74:	mov    eax,DWORD PTR [ebx]
10029d76:	mov    ecx,DWORD PTR [esp+0x14]
10029d7a:	mov    DWORD PTR [esp+0x24],eax
10029d7e:	mov    eax,0x1
10029d83:	shl    eax,cl
10029d85:	xor    ebp,ebp
10029d87:	xor    ebx,ebx
10029d89:	cmp    edi,0x1
10029d8c:	lea    ecx,[eax-0x1]
10029d8f:	mov    DWORD PTR [esp+0x18],esi
10029d93:	mov    DWORD PTR [esp+0x34],edx
10029d97:	mov    DWORD PTR [esp+0x44],eax
10029d9b:	mov    DWORD PTR [esp+0x28],eax
10029d9f:	mov    DWORD PTR [esp+0x40],ecx
10029da3:	jne    0x10029db0
10029da5:	cmp    eax,0x5b0
10029daa:	jae    0x1002a000
10029db0:	mov    edx,DWORD PTR [esp+0x1c]
10029db4:	mov    DWORD PTR [esp+0x1c],edx
10029db8:	jmp    0x10029dc0
10029dba:	lea    ebx,[ebx+0x0]
10029dc0:	mov    al,BYTE PTR [esp+0x18]
10029dc4:	mov    esi,DWORD PTR [esp+0x1c]
10029dc8:	mov    edx,DWORD PTR [esp+0x30]
10029dcc:	sub    al,bl
10029dce:	mov    BYTE PTR [esp+0x11],al
10029dd2:	movzx  eax,WORD PTR [esi]
10029dd5:	movzx  ecx,ax
10029dd8:	cmp    ecx,edx
10029dda:	jge    0x10029de8
10029ddc:	mov    BYTE PTR [esp+0x10],0x0
10029de1:	mov    WORD PTR [esp+0x12],ax
10029de6:	jmp    0x10029e15
10029de8:	jle    0x10029e09
10029dea:	movzx  eax,WORD PTR [esi]
10029ded:	mov    ecx,DWORD PTR [esp+0x38]
10029df1:	add    eax,eax
10029df3:	mov    dl,BYTE PTR [eax+ecx*1]
10029df6:	mov    ecx,DWORD PTR [esp+0x2c]
10029dfa:	mov    BYTE PTR [esp+0x10],dl
10029dfe:	mov    dx,WORD PTR [eax+ecx*1]
10029e02:	mov    WORD PTR [esp+0x12],dx
10029e07:	jmp    0x10029e15
10029e09:	mov    BYTE PTR [esp+0x10],0x60
10029e0e:	mov    WORD PTR [esp+0x12],0x0
10029e15:	mov    ecx,DWORD PTR [esp+0x18]
10029e19:	mov    eax,DWORD PTR [esp+0x44]
10029e1d:	sub    ecx,ebx
10029e1f:	mov    edx,0x1
10029e24:	shl    edx,cl
10029e26:	mov    ecx,ebx
10029e28:	mov    edi,ebp
10029e2a:	shr    edi,cl
10029e2c:	mov    ecx,DWORD PTR [esp+0x24]
10029e30:	mov    DWORD PTR [esp+0x50],eax
10029e34:	lea    esi,[edx*4+0x0]
10029e3b:	add    edi,eax
10029e3d:	lea    ecx,[ecx+edi*4]
10029e40:	mov    edi,DWORD PTR [esp+0x10]
10029e44:	sub    eax,edx
10029e46:	sub    ecx,esi
10029e48:	test   eax,eax
10029e4a:	mov    DWORD PTR [ecx],edi
10029e4c:	jne    0x10029e44
10029e4e:	mov    edx,DWORD PTR [esp+0x18]
10029e52:	lea    ecx,[edx-0x1]
10029e55:	mov    eax,0x1
10029e5a:	shl    eax,cl
10029e5c:	test   ebp,eax
10029e5e:	je     0x10029e66
10029e60:	shr    eax,1
10029e62:	test   ebp,eax
10029e64:	jne    0x10029e60
10029e66:	test   eax,eax
10029e68:	je     0x10029e75
10029e6a:	lea    ecx,[eax-0x1]
10029e6d:	and    ecx,ebp
10029e6f:	add    ecx,eax
10029e71:	mov    ebp,ecx
10029e73:	jmp    0x10029e77
10029e75:	xor    ebp,ebp
10029e77:	add    WORD PTR [esp+edx*2+0x58],0xffff
10029e7e:	movzx  eax,WORD PTR [esp+edx*2+0x58]
10029e83:	add    DWORD PTR [esp+0x1c],0x2
10029e88:	test   ax,ax
10029e8b:	jne    0x10029eaa
10029e8d:	cmp    edx,DWORD PTR [esp+0x20]
10029e91:	je     0x10029f73
10029e97:	mov    edx,DWORD PTR [esp+0x1c]
10029e9b:	movzx  eax,WORD PTR [edx]
10029e9e:	mov    ecx,DWORD PTR [esp+0x54]
10029ea2:	movzx  edx,WORD PTR [ecx+eax*2]
10029ea6:	mov    DWORD PTR [esp+0x18],edx
10029eaa:	cmp    edx,DWORD PTR [esp+0x14]
10029eae:	jbe    0x10029dc0
10029eb4:	mov    esi,DWORD PTR [esp+0x40]
10029eb8:	and    esi,ebp
10029eba:	cmp    esi,DWORD PTR [esp+0x34]
10029ebe:	mov    DWORD PTR [esp+0x48],esi
10029ec2:	je     0x10029dc0
10029ec8:	test   ebx,ebx
10029eca:	jne    0x10029ed0
10029ecc:	mov    ebx,DWORD PTR [esp+0x14]
10029ed0:	mov    eax,DWORD PTR [esp+0x24]
10029ed4:	mov    ecx,DWORD PTR [esp+0x50]
10029ed8:	lea    edx,[eax+ecx*4]
10029edb:	mov    ecx,DWORD PTR [esp+0x18]
10029edf:	sub    ecx,ebx
10029ee1:	mov    DWORD PTR [esp+0x24],edx
10029ee5:	mov    eax,0x1
10029eea:	lea    edx,[ebx+ecx*1]
10029eed:	shl    eax,cl
10029eef:	cmp    edx,DWORD PTR [esp+0x20]
10029ef3:	jae    0x10029f1e
10029ef5:	lea    esi,[esp+edx*2+0x58]
10029ef9:	lea    esp,[esp+0x0]
10029f00:	movzx  edi,WORD PTR [esi]
10029f03:	sub    eax,edi
10029f05:	test   eax,eax
10029f07:	jle    0x10029f1a
10029f09:	add    edx,0x1
10029f0c:	add    ecx,0x1
10029f0f:	add    esi,0x2
10029f12:	add    eax,eax
10029f14:	cmp    edx,DWORD PTR [esp+0x20]
10029f18:	jb     0x10029f00
10029f1a:	mov    esi,DWORD PTR [esp+0x48]
10029f1e:	mov    eax,0x1
10029f23:	shl    eax,cl
10029f25:	add    DWORD PTR [esp+0x28],eax
10029f29:	cmp    DWORD PTR [esp+0xa0],0x1
10029f31:	mov    DWORD PTR [esp+0x44],eax
10029f35:	jne    0x10029f45
10029f37:	cmp    DWORD PTR [esp+0x28],0x5b0
10029f3f:	jae    0x1002a000
10029f45:	mov    edx,esi
10029f47:	mov    esi,DWORD PTR [esp+0x3c]
10029f4b:	mov    eax,DWORD PTR [esi]
10029f4d:	mov    BYTE PTR [eax+edx*4],cl
10029f50:	mov    ecx,DWORD PTR [esi]
10029f52:	mov    al,BYTE PTR [esp+0x14]
10029f56:	mov    BYTE PTR [ecx+edx*4+0x1],al
10029f5a:	mov    eax,DWORD PTR [esi]
10029f5c:	mov    ecx,DWORD PTR [esp+0x24]
10029f60:	sub    ecx,eax
10029f62:	sar    ecx,0x2
10029f65:	mov    DWORD PTR [esp+0x34],edx
10029f69:	mov    WORD PTR [eax+edx*4+0x2],cx
10029f6e:	jmp    0x10029dc0
10029f73:	mov    edi,DWORD PTR [esp+0x3c]
10029f77:	mov    al,dl
10029f79:	sub    al,bl
10029f7b:	test   ebp,ebp
10029f7d:	mov    BYTE PTR [esp+0x10],0x40
10029f82:	mov    BYTE PTR [esp+0x11],al
10029f86:	mov    WORD PTR [esp+0x12],0x0
10029f8d:	je     0x10029fe5
10029f8f:	mov    esi,DWORD PTR [esp+0x24]
10029f93:	test   ebx,ebx
10029f95:	je     0x10029fb5
10029f97:	mov    ecx,DWORD PTR [esp+0x40]
10029f9b:	and    ecx,ebp
10029f9d:	cmp    ecx,DWORD PTR [esp+0x34]
10029fa1:	je     0x10029fb5
10029fa3:	mov    eax,DWORD PTR [esp+0x14]
10029fa7:	mov    esi,DWORD PTR [edi]
10029fa9:	xor    ebx,ebx
10029fab:	mov    DWORD PTR [esp+0x18],eax
10029faf:	mov    BYTE PTR [esp+0x11],al
10029fb3:	mov    edx,eax
10029fb5:	mov    ecx,ebx
10029fb7:	mov    eax,ebp
10029fb9:	shr    eax,cl
10029fbb:	mov    ecx,DWORD PTR [esp+0x10]
10029fbf:	mov    DWORD PTR [esi+eax*4],ecx
10029fc2:	lea    ecx,[edx-0x1]
10029fc5:	mov    eax,0x1
10029fca:	shl    eax,cl
10029fcc:	test   ebp,eax
10029fce:	je     0x10029fd6
10029fd0:	shr    eax,1
10029fd2:	test   ebp,eax
10029fd4:	jne    0x10029fd0
10029fd6:	test   eax,eax
10029fd8:	je     0x10029fe5
10029fda:	lea    ecx,[eax-0x1]
10029fdd:	and    ecx,ebp
10029fdf:	add    ecx,eax
10029fe1:	mov    ebp,ecx
10029fe3:	jne    0x10029f93
10029fe5:	mov    edx,DWORD PTR [esp+0x28]
10029fe9:	mov    ecx,DWORD PTR [esp+0x4c]
10029fed:	lea    eax,[edx*4+0x0]
10029ff4:	add    DWORD PTR [edi],eax
10029ff6:	mov    edx,DWORD PTR [esp+0x14]
10029ffa:	mov    DWORD PTR [ecx],edx
10029ffc:	xor    eax,eax
10029ffe:	jmp    0x1002a005
1002a000:	mov    eax,0x1
1002a005:	mov    ecx,DWORD PTR [esp+0x98]
1002a00c:	pop    edi
1002a00d:	pop    esi
1002a00e:	pop    ebp
1002a00f:	pop    ebx
1002a010:	xor    ecx,esp
1002a012:	call   0x10015adb
1002a017:	add    esp,0x8c
1002a01d:	ret    
1002a01e:	jmp    DWORD PTR ds:0x1002c1f0
1002a024:	int3   
1002a025:	int3   
1002a026:	int3   
1002a027:	int3   
1002a028:	int3   
1002a029:	int3   
1002a02a:	int3   
1002a02b:	int3   
1002a02c:	int3   
1002a02d:	int3   
1002a02e:	int3   
1002a02f:	int3   
1002a030:	lea    ecx,[ebp-0x50]
1002a033:	jmp    0x10002e90
1002a038:	lea    ecx,[ebp-0x3c]
1002a03b:	jmp    0x10002e90
1002a040:	lea    ecx,[ebp-0x58]
1002a043:	jmp    0x10002e90
1002a048:	lea    ecx,[ebp-0x44]
1002a04b:	jmp    0x100032a0
1002a050:	lea    ecx,[ebp-0x64]
1002a053:	jmp    0x10006d40
1002a058:	lea    ecx,[ebp-0x30]
1002a05b:	jmp    0x10002b80
1002a060:	mov    edx,DWORD PTR [esp+0x8]
1002a064:	lea    eax,[edx+0xc]
1002a067:	mov    ecx,DWORD PTR [edx-0xac]
1002a06d:	xor    ecx,eax
1002a06f:	call   0x10015adb
1002a074:	mov    ecx,DWORD PTR [edx-0x8]
1002a077:	xor    ecx,eax
1002a079:	call   0x10015adb
1002a07e:	mov    eax,0x10057994
1002a083:	jmp    0x10015ba5
1002a088:	lea    ecx,[ebp-0x18]
1002a08b:	jmp    0x100032a0
1002a090:	lea    ecx,[ebp-0x1034]
1002a096:	jmp    0x100032a0
1002a09b:	lea    ecx,[ebp-0x108c]
1002a0a1:	jmp    0x10006d40
1002a0a6:	lea    ecx,[ebp-0x14]
1002a0a9:	jmp    0x10002e90
1002a0ae:	lea    ecx,[ebp-0x1098]
1002a0b4:	jmp    0x10002e90
1002a0b9:	lea    ecx,[ebp-0x109c]
1002a0bf:	jmp    0x10002e90
1002a0c4:	lea    ecx,[ebp-0x10a0]
1002a0ca:	jmp    0x10002e90
1002a0cf:	mov    edx,DWORD PTR [esp+0x8]
1002a0d3:	lea    eax,[edx+0xc]
1002a0d6:	mov    ecx,DWORD PTR [edx-0x10fc]
1002a0dc:	xor    ecx,eax
1002a0de:	call   0x10015adb
1002a0e3:	mov    ecx,DWORD PTR [edx-0x24]
1002a0e6:	xor    ecx,eax
1002a0e8:	call   0x10015adb
1002a0ed:	mov    eax,0x10057a1c
1002a0f2:	jmp    0x10015ba5
1002a0f7:	lea    ecx,[ebp-0x10]
1002a0fa:	jmp    0x100032a0
1002a0ff:	mov    edx,DWORD PTR [esp+0x8]
1002a103:	lea    eax,[edx+0xc]
1002a106:	mov    ecx,DWORD PTR [edx-0x240]
1002a10c:	xor    ecx,eax
1002a10e:	call   0x10015adb
1002a113:	mov    ecx,DWORD PTR [edx-0x8]
1002a116:	xor    ecx,eax
1002a118:	call   0x10015adb
1002a11d:	mov    eax,0x10057a90
1002a122:	jmp    0x10015ba5
1002a127:	lea    ecx,[ebp-0x10]
1002a12a:	jmp    0x10003320
1002a12f:	lea    ecx,[ebp-0x1c]
1002a132:	jmp    0x10003320
1002a137:	mov    eax,DWORD PTR [ebp-0x30]
1002a13a:	and    eax,0x1
1002a13d:	je     0x1002a14f
1002a143:	and    DWORD PTR [ebp-0x30],0xfffffffe
1002a147:	mov    ecx,DWORD PTR [ebp+0x8]
1002a14a:	jmp    0x10003320
1002a14f:	ret    
1002a150:	lea    ecx,[ebp-0x24]
1002a153:	jmp    0x10003320
1002a158:	mov    edx,DWORD PTR [esp+0x8]
1002a15c:	lea    eax,[edx+0xc]
1002a15f:	mov    ecx,DWORD PTR [edx-0x28]
1002a162:	xor    ecx,eax
1002a164:	call   0x10015adb
1002a169:	mov    eax,0x10057ad4
1002a16e:	jmp    0x10015ba5
1002a173:	lea    ecx,[ebp-0x10]
1002a176:	jmp    0x10003320
1002a17b:	mov    edx,DWORD PTR [esp+0x8]
1002a17f:	lea    eax,[edx+0xc]
1002a182:	mov    ecx,DWORD PTR [edx-0x24]
1002a185:	xor    ecx,eax
1002a187:	call   0x10015adb
1002a18c:	mov    eax,0x10057b00
1002a191:	jmp    0x10015ba5
1002a196:	lea    ecx,[ebp-0xd]
1002a199:	jmp    0x10006c80
1002a19e:	mov    edx,DWORD PTR [esp+0x8]
1002a1a2:	lea    eax,[edx+0xc]
1002a1a5:	mov    ecx,DWORD PTR [edx-0x1c]
1002a1a8:	xor    ecx,eax
1002a1aa:	call   0x10015adb
1002a1af:	mov    eax,0x10057b2c
1002a1b4:	jmp    0x10015ba5
1002a1b9:	lea    ecx,[ebp-0x10]
1002a1bc:	jmp    0x10002e90
1002a1c1:	mov    edx,DWORD PTR [esp+0x8]
1002a1c5:	lea    eax,[edx+0xc]
1002a1c8:	mov    ecx,DWORD PTR [edx-0xc]
1002a1cb:	xor    ecx,eax
1002a1cd:	call   0x10015adb
1002a1d2:	mov    eax,0x10057b58
1002a1d7:	jmp    0x10015ba5
1002a1dc:	lea    ecx,[ebp-0xd]
1002a1df:	jmp    0x10006c80
1002a1e4:	lea    ecx,[ebp-0x24]
1002a1e7:	jmp    0x10006d40
1002a1ec:	mov    edx,DWORD PTR [esp+0x8]
1002a1f0:	lea    eax,[edx+0xc]
1002a1f3:	mov    ecx,DWORD PTR [edx-0x20]
1002a1f6:	xor    ecx,eax
1002a1f8:	call   0x10015adb
1002a1fd:	mov    eax,0x10057b8c
1002a202:	jmp    0x10015ba5
1002a207:	lea    ecx,[ebp-0x10]
1002a20a:	jmp    0x100032a0
1002a20f:	mov    edx,DWORD PTR [esp+0x8]
1002a213:	lea    eax,[edx+0xc]
1002a216:	mov    ecx,DWORD PTR [edx-0x8]
1002a219:	xor    ecx,eax
1002a21b:	call   0x10015adb
1002a220:	mov    eax,0x10057bb8
1002a225:	jmp    0x10015ba5
1002a22a:	lea    ecx,[ebp-0x30]
1002a22d:	jmp    0x10006d40
1002a232:	mov    edx,DWORD PTR [esp+0x8]
1002a236:	lea    eax,[edx+0xc]
1002a239:	mov    ecx,DWORD PTR [edx-0x38]
1002a23c:	xor    ecx,eax
1002a23e:	call   0x10015adb
1002a243:	mov    ecx,DWORD PTR [edx-0x8]
1002a246:	xor    ecx,eax
1002a248:	call   0x10015adb
1002a24d:	mov    eax,0x10057c18
1002a252:	jmp    0x10015ba5
1002a257:	int3   
1002a258:	int3   
1002a259:	int3   
1002a25a:	int3   
1002a25b:	int3   
1002a25c:	int3   
1002a25d:	int3   
1002a25e:	int3   
1002a25f:	int3   
1002a260:	lea    ecx,[ebp+0x18]
1002a263:	jmp    0x10002e90
1002a268:	lea    ecx,[ebp+0x14]
1002a26b:	jmp    0x10002e90
1002a270:	mov    edx,DWORD PTR [esp+0x8]
1002a274:	lea    eax,[edx+0xc]
1002a277:	mov    ecx,DWORD PTR [edx-0x58]
1002a27a:	xor    ecx,eax
1002a27c:	call   0x10015adb
1002a281:	mov    eax,0x10057c80
1002a286:	jmp    0x10015ba5
1002a28b:	lea    ecx,[ebp-0x50]
1002a28e:	jmp    0x1000f7d0
1002a293:	lea    ecx,[ebp-0x4c]
1002a296:	jmp    0x10002b80
1002a29b:	lea    ecx,[ebp-0x30]
1002a29e:	jmp    0x1000f740
1002a2a3:	lea    ecx,[ebp-0x70]
1002a2a6:	jmp    0x10002e90
1002a2ab:	mov    edx,DWORD PTR [esp+0x8]
1002a2af:	lea    eax,[edx+0xc]
1002a2b2:	mov    ecx,DWORD PTR [edx-0x7c]
1002a2b5:	xor    ecx,eax
1002a2b7:	call   0x10015adb
1002a2bc:	mov    ecx,DWORD PTR [edx-0x4]
1002a2bf:	xor    ecx,eax
1002a2c1:	call   0x10015adb
1002a2c6:	mov    eax,0x10057cc4
1002a2cb:	jmp    0x10015ba5
1002a2d0:	lea    ecx,[ebp-0x1c]
1002a2d3:	jmp    0x10002e90
1002a2d8:	lea    ecx,[ebp-0x20]
1002a2db:	jmp    0x10002e90
1002a2e0:	lea    ecx,[ebp-0x30]
1002a2e3:	jmp    0x10002e90
1002a2e8:	lea    ecx,[ebp-0x34]
1002a2eb:	jmp    0x10002e90
1002a2f0:	lea    ecx,[ebp-0x18]
1002a2f3:	jmp    0x10002e90
1002a2f8:	lea    ecx,[ebp-0x14]
1002a2fb:	jmp    0x100032a0
1002a300:	mov    edx,DWORD PTR [esp+0x8]
1002a304:	lea    eax,[edx+0xc]
1002a307:	mov    ecx,DWORD PTR [edx-0x38]
1002a30a:	xor    ecx,eax
1002a30c:	call   0x10015adb
1002a311:	mov    eax,0x10057ce8
1002a316:	jmp    0x10015ba5
1002a31b:	lea    ecx,[ebp-0x10cc]
1002a321:	jmp    0x10002b80
1002a326:	lea    ecx,[ebp-0x10d0]
1002a32c:	jmp    0x10002e90
1002a331:	lea    ecx,[ebp-0x40]
1002a334:	jmp    0x10002e90
1002a339:	lea    ecx,[ebp-0x18]
1002a33c:	jmp    0x10002e90
1002a341:	lea    ecx,[ebp-0x1100]
1002a347:	jmp    0x10002e90
1002a34c:	lea    ecx,[ebp-0x44]
1002a34f:	jmp    0x10002e90
1002a354:	lea    ecx,[ebp-0x1104]
1002a35a:	jmp    0x10002e90
1002a35f:	lea    ecx,[ebp-0x3c]
1002a362:	jmp    0x10002b80
1002a367:	mov    edx,DWORD PTR [esp+0x8]
1002a36b:	lea    eax,[edx+0xc]
1002a36e:	mov    ecx,DWORD PTR [edx-0x114c]
1002a374:	xor    ecx,eax
1002a376:	call   0x10015adb
1002a37b:	mov    ecx,DWORD PTR [edx-0x14]
1002a37e:	xor    ecx,eax
1002a380:	call   0x10015adb
1002a385:	mov    eax,0x10057d80
1002a38a:	jmp    0x10015ba5
1002a38f:	lea    ecx,[ebp-0x64]
1002a392:	jmp    0x10002b80
1002a397:	lea    ecx,[ebp-0x48]
1002a39a:	jmp    0x10002b80
1002a39f:	lea    ecx,[ebp-0x2c]
1002a3a2:	jmp    0x10002b80
1002a3a7:	mov    eax,DWORD PTR [ebp-0x6c]
1002a3aa:	push   eax
1002a3ab:	call   0x10015ad6
1002a3b0:	pop    ecx
1002a3b1:	ret    
1002a3b2:	mov    eax,DWORD PTR [ebp-0x74]
1002a3b5:	push   eax
1002a3b6:	call   0x10015ad6
1002a3bb:	pop    ecx
1002a3bc:	ret    
1002a3bd:	mov    ecx,DWORD PTR [ebp-0x78]
1002a3c0:	jmp    0x10002e90
1002a3c5:	mov    edx,DWORD PTR [esp+0x8]
1002a3c9:	lea    eax,[edx+0xc]
1002a3cc:	mov    ecx,DWORD PTR [edx-0x88]
1002a3d2:	xor    ecx,eax
1002a3d4:	call   0x10015adb
1002a3d9:	mov    ecx,DWORD PTR [edx-0x4]
1002a3dc:	xor    ecx,eax
1002a3de:	call   0x10015adb
1002a3e3:	mov    eax,0x10057dfc
1002a3e8:	jmp    0x10015ba5
1002a3ed:	lea    ecx,[ebp-0x68]
1002a3f0:	jmp    0x10002b80
1002a3f5:	mov    edx,DWORD PTR [esp+0x8]
1002a3f9:	lea    eax,[edx+0xc]
1002a3fc:	mov    ecx,DWORD PTR [edx-0x70]
1002a3ff:	xor    ecx,eax
1002a401:	call   0x10015adb
1002a406:	mov    ecx,DWORD PTR [edx-0x18]
1002a409:	xor    ecx,eax
1002a40b:	call   0x10015adb
1002a410:	mov    eax,0x10057e9c
1002a415:	jmp    0x10015ba5
1002a41a:	lea    ecx,[ebp-0x14]
1002a41d:	jmp    0x10002e90
1002a422:	lea    ecx,[ebp-0x18]
1002a425:	jmp    0x10002e90
1002a42a:	mov    edx,DWORD PTR [esp+0x8]
1002a42e:	lea    eax,[edx+0xc]
1002a431:	mov    ecx,DWORD PTR [edx-0x1c]
1002a434:	xor    ecx,eax
1002a436:	call   0x10015adb
1002a43b:	mov    eax,0x10057ed0
1002a440:	jmp    0x10015ba5
1002a445:	lea    ecx,[ebp-0x18]
1002a448:	jmp    0x10002e90
1002a44d:	lea    ecx,[ebp-0x1c]
1002a450:	jmp    0x10002e90
1002a455:	mov    edx,DWORD PTR [esp+0x8]
1002a459:	lea    eax,[edx+0xc]
1002a45c:	mov    ecx,DWORD PTR [edx-0x20]
1002a45f:	xor    ecx,eax
1002a461:	call   0x10015adb
1002a466:	mov    eax,0x10057f04
1002a46b:	jmp    0x10015ba5
1002a470:	mov    ecx,DWORD PTR [ebp-0x18]
1002a473:	jmp    0x10002e90
1002a478:	mov    ecx,DWORD PTR [ebp-0x18]
1002a47b:	add    ecx,0x4
1002a47e:	jmp    0x10002b80
1002a483:	lea    ecx,[ebp-0x10]
1002a486:	jmp    0x10002e90
1002a48b:	lea    ecx,[ebp-0x14]
1002a48e:	jmp    0x10002e90
1002a493:	mov    edx,DWORD PTR [esp+0x8]
1002a497:	lea    eax,[edx+0xc]
1002a49a:	mov    ecx,DWORD PTR [edx-0x20]
1002a49d:	xor    ecx,eax
1002a49f:	call   0x10015adb
1002a4a4:	mov    eax,0x10057f48
1002a4a9:	jmp    0x10015ba5
1002a4ae:	int3   
1002a4af:	int3   
1002a4b0:	mov    ecx,DWORD PTR [ebp-0x10]
1002a4b3:	jmp    0x10002e90
1002a4b8:	mov    edx,DWORD PTR [esp+0x8]
1002a4bc:	lea    eax,[edx+0xc]
1002a4bf:	mov    ecx,DWORD PTR [edx-0x8]
1002a4c2:	xor    ecx,eax
1002a4c4:	call   0x10015adb
1002a4c9:	mov    eax,0x10057f74
1002a4ce:	jmp    0x10015ba5
1002a4d3:	int3   
1002a4d4:	int3   
1002a4d5:	int3   
1002a4d6:	int3   
1002a4d7:	int3   
1002a4d8:	int3   
1002a4d9:	int3   
1002a4da:	int3   
1002a4db:	int3   
1002a4dc:	int3   
1002a4dd:	int3   
1002a4de:	int3   
1002a4df:	int3   
1002a4e0:	lea    ecx,[ebp-0x10]
1002a4e3:	jmp    0x1000f7d0
1002a4e8:	mov    edx,DWORD PTR [esp+0x8]
1002a4ec:	lea    eax,[edx+0xc]
1002a4ef:	mov    ecx,DWORD PTR [edx-0x8]
1002a4f2:	xor    ecx,eax
1002a4f4:	call   0x10015adb
1002a4f9:	mov    eax,0x10057fa0
1002a4fe:	jmp    0x10015ba5
1002a503:	lea    ecx,[ebp-0x10]
1002a506:	jmp    0x1000f7d0
1002a50b:	mov    edx,DWORD PTR [esp+0x8]
1002a50f:	lea    eax,[edx+0xc]
1002a512:	mov    ecx,DWORD PTR [edx-0x10]
1002a515:	xor    ecx,eax
1002a517:	call   0x10015adb
1002a51c:	mov    eax,0x10057fcc
1002a521:	jmp    0x10015ba5
1002a526:	int3   
1002a527:	int3   
1002a528:	int3   
1002a529:	int3   
1002a52a:	int3   
1002a52b:	int3   
1002a52c:	int3   
1002a52d:	int3   
1002a52e:	int3   
1002a52f:	int3   
1002a530:	lea    ecx,[ebp-0x18]
1002a533:	jmp    0x1000f7d0
1002a538:	mov    edx,DWORD PTR [esp+0x8]
1002a53c:	lea    eax,[edx+0xc]
1002a53f:	mov    ecx,DWORD PTR [edx-0x5c]
1002a542:	xor    ecx,eax
1002a544:	call   0x10015adb
1002a549:	mov    eax,0x10057ff8
1002a54e:	jmp    0x10015ba5
1002a553:	int3   
1002a554:	int3   
1002a555:	int3   
1002a556:	int3   
1002a557:	int3   
1002a558:	int3   
1002a559:	int3   
1002a55a:	int3   
1002a55b:	int3   
1002a55c:	int3   
1002a55d:	int3   
1002a55e:	int3   
1002a55f:	int3   
1002a560:	lea    ecx,[ebp-0x60]
1002a563:	jmp    0x10002b80
1002a568:	mov    edx,DWORD PTR [esp+0x8]
1002a56c:	lea    eax,[edx+0xc]
1002a56f:	mov    ecx,DWORD PTR [edx-0x68]
1002a572:	xor    ecx,eax
1002a574:	call   0x10015adb
1002a579:	mov    eax,0x10058024
1002a57e:	jmp    0x10015ba5
1002a583:	int3   
1002a584:	int3   
1002a585:	int3   
1002a586:	int3   
1002a587:	int3   
1002a588:	int3   
1002a589:	int3   
1002a58a:	int3   
1002a58b:	int3   
1002a58c:	int3   
1002a58d:	int3   
1002a58e:	int3   
1002a58f:	int3   
1002a590:	lea    ecx,[ebp-0x58]
1002a593:	jmp    0x10002b80
1002a598:	mov    edx,DWORD PTR [esp+0x8]
1002a59c:	lea    eax,[edx+0xc]
1002a59f:	mov    ecx,DWORD PTR [edx-0x58]
1002a5a2:	xor    ecx,eax
1002a5a4:	call   0x10015adb
1002a5a9:	mov    eax,0x10058050
1002a5ae:	jmp    0x10015ba5
1002a5b3:	int3   
1002a5b4:	int3   
1002a5b5:	int3   
1002a5b6:	int3   
1002a5b7:	int3   
1002a5b8:	int3   
1002a5b9:	int3   
1002a5ba:	int3   
1002a5bb:	int3   
1002a5bc:	int3   
1002a5bd:	int3   
1002a5be:	int3   
1002a5bf:	int3   
1002a5c0:	mov    eax,DWORD PTR [ebp-0x14]
1002a5c3:	push   eax
1002a5c4:	mov    ecx,DWORD PTR [ebp-0x1c]
1002a5c7:	push   ecx
1002a5c8:	call   0x10001240
1002a5cd:	add    esp,0x8
1002a5d0:	ret    
1002a5d1:	mov    edx,DWORD PTR [esp+0x8]
1002a5d5:	lea    eax,[edx+0xc]
1002a5d8:	mov    ecx,DWORD PTR [edx-0x2c]
1002a5db:	xor    ecx,eax
1002a5dd:	call   0x10015adb
1002a5e2:	mov    eax,0x100580b0
1002a5e7:	jmp    0x10015ba5
1002a5ec:	int3   
1002a5ed:	int3   
1002a5ee:	int3   
1002a5ef:	int3   
1002a5f0:	mov    edx,DWORD PTR [esp+0x8]
1002a5f4:	lea    eax,[edx+0xc]
1002a5f7:	mov    ecx,DWORD PTR [edx-0x38]
1002a5fa:	xor    ecx,eax
1002a5fc:	call   0x10015adb
1002a601:	mov    eax,0x10058108
1002a606:	jmp    0x10015ba5
1002a60b:	int3   
1002a60c:	int3   
1002a60d:	int3   
1002a60e:	int3   
1002a60f:	int3   
1002a610:	lea    ecx,[ebp-0x14]
1002a613:	jmp    0x10002e90
1002a618:	mov    edx,DWORD PTR [esp+0x8]
1002a61c:	lea    eax,[edx+0xc]
1002a61f:	mov    ecx,DWORD PTR [edx-0x10]
1002a622:	xor    ecx,eax
1002a624:	call   0x10015adb
1002a629:	mov    eax,0x10058134
1002a62e:	jmp    0x10015ba5
1002a633:	lea    ecx,[ebp-0x3c]
1002a636:	jmp    0x10002e90
1002a63b:	lea    ecx,[ebp-0x40]
1002a63e:	jmp    0x10002e90
1002a643:	mov    edx,DWORD PTR [esp+0x8]
1002a647:	lea    eax,[edx+0xc]
1002a64a:	mov    ecx,DWORD PTR [edx-0x78]
1002a64d:	xor    ecx,eax
1002a64f:	call   0x10015adb
1002a654:	mov    eax,0x10058208
1002a659:	jmp    0x10015ba5
1002a65e:	lea    ecx,[ebp-0x28]
1002a661:	jmp    0x10002b80
1002a666:	mov    edx,DWORD PTR [esp+0x8]
1002a66a:	lea    eax,[edx+0xc]
1002a66d:	mov    ecx,DWORD PTR [edx-0x54]
1002a670:	xor    ecx,eax
1002a672:	call   0x10015adb
1002a677:	mov    eax,0x100583ec
1002a67c:	jmp    0x10015ba5
1002a681:	lea    ecx,[ebp-0x28]
1002a684:	jmp    0x10002b80
1002a689:	mov    edx,DWORD PTR [esp+0x8]
1002a68d:	lea    eax,[edx+0xc]
1002a690:	mov    ecx,DWORD PTR [edx-0x54]
1002a693:	xor    ecx,eax
1002a695:	call   0x10015adb
1002a69a:	mov    eax,0x10058418
1002a69f:	jmp    0x10015ba5
1002a6a4:	mov    edx,DWORD PTR [esp+0x8]
1002a6a8:	lea    eax,[edx+0xc]
1002a6ab:	mov    ecx,DWORD PTR [edx-0x14]
1002a6ae:	xor    ecx,eax
1002a6b0:	call   0x10015adb
1002a6b5:	mov    eax,0x10058618
1002a6ba:	jmp    0x10015ba5
1002a6bf:	int3   
1002a6c0:	lea    ecx,[ebp-0x50]
1002a6c3:	jmp    0x10003320
1002a6c8:	lea    ecx,[ebp-0x4c]
1002a6cb:	jmp    0x10003320
1002a6d0:	mov    edx,DWORD PTR [esp+0x8]
1002a6d4:	lea    eax,[edx-0x5c]
1002a6d7:	mov    ecx,DWORD PTR [edx-0x60]
1002a6da:	xor    ecx,eax
1002a6dc:	call   0x10015adb
1002a6e1:	mov    eax,0x10058c24
1002a6e6:	jmp    0x10015ba5
1002a6eb:	int3   
1002a6ec:	int3   
1002a6ed:	int3   
1002a6ee:	int3   
1002a6ef:	int3   
1002a6f0:	lea    ecx,[ebp-0x3c]
1002a6f3:	jmp    0x10003320
1002a6f8:	lea    ecx,[ebp-0x58]
1002a6fb:	jmp    0x10003320
1002a700:	mov    edx,DWORD PTR [esp+0x8]
1002a704:	lea    eax,[edx-0x54]
1002a707:	mov    ecx,DWORD PTR [edx-0x58]
1002a70a:	xor    ecx,eax
1002a70c:	call   0x10015adb
1002a711:	add    eax,0x8
1002a714:	mov    ecx,DWORD PTR [edx-0x8]
1002a717:	xor    ecx,eax
1002a719:	call   0x10015adb
1002a71e:	mov    eax,0x10058c58
1002a723:	jmp    0x10015ba5
1002a728:	int3   
1002a729:	int3   
1002a72a:	int3   
1002a72b:	int3   
1002a72c:	int3   
1002a72d:	int3   
1002a72e:	int3   
1002a72f:	int3   
1002a730:	mov    ecx,DWORD PTR [ebp+0x4]
1002a733:	jmp    0x10003320
1002a738:	mov    edx,DWORD PTR [esp+0x8]
1002a73c:	lea    eax,[edx-0xc]
1002a73f:	mov    ecx,DWORD PTR [edx-0x10]
1002a742:	xor    ecx,eax
1002a744:	call   0x10015adb
1002a749:	mov    eax,0x10058c84
1002a74e:	jmp    0x10015ba5
1002a753:	int3   
1002a754:	int3   
1002a755:	int3   
1002a756:	int3   
1002a757:	int3   
1002a758:	int3   
1002a759:	int3   
1002a75a:	int3   
1002a75b:	int3   
1002a75c:	int3   
1002a75d:	int3   
1002a75e:	int3   
1002a75f:	int3   
1002a760:	lea    ecx,[ebp-0x11]
1002a763:	jmp    0x10006c80
1002a768:	lea    eax,[ebp+0x4]
1002a76b:	jmp    0x100078a0
1002a770:	lea    ecx,[ebp-0x10]
1002a773:	jmp    0x100032a0
1002a778:	mov    edx,DWORD PTR [esp+0x8]
1002a77c:	lea    eax,[edx-0x14]
1002a77f:	mov    ecx,DWORD PTR [edx-0x18]
1002a782:	xor    ecx,eax
1002a784:	call   0x10015adb
1002a789:	mov    eax,0x10058cc0
1002a78e:	jmp    0x10015ba5
1002a793:	int3   
1002a794:	int3   
1002a795:	int3   
1002a796:	int3   
1002a797:	int3   
1002a798:	int3   
1002a799:	int3   
1002a79a:	int3   
1002a79b:	int3   
1002a79c:	int3   
1002a79d:	int3   
1002a79e:	int3   
1002a79f:	int3   
1002a7a0:	lea    ecx,[ebp+0x8]
1002a7a3:	jmp    0x10002e90
1002a7a8:	lea    ecx,[ebp-0x43c]
1002a7ae:	jmp    0x100032a0
1002a7b3:	mov    edx,DWORD PTR [esp+0x8]
1002a7b7:	lea    eax,[edx-0x444]
1002a7bd:	mov    ecx,DWORD PTR [edx-0x448]
1002a7c3:	xor    ecx,eax
1002a7c5:	call   0x10015adb
1002a7ca:	add    eax,0x10
1002a7cd:	mov    ecx,DWORD PTR [edx-0x4]
1002a7d0:	xor    ecx,eax
1002a7d2:	call   0x10015adb
1002a7d7:	mov    eax,0x10058cf4
1002a7dc:	jmp    0x10015ba5
1002a7e1:	int3   
1002a7e2:	int3   
1002a7e3:	int3   
1002a7e4:	int3   
1002a7e5:	int3   
1002a7e6:	int3   
1002a7e7:	int3   
1002a7e8:	int3   
1002a7e9:	int3   
1002a7ea:	int3   
1002a7eb:	int3   
1002a7ec:	int3   
1002a7ed:	int3   
1002a7ee:	int3   
1002a7ef:	int3   
1002a7f0:	mov    edx,DWORD PTR [esp+0x8]
1002a7f4:	lea    eax,[edx+0xc]
1002a7f7:	mov    ecx,DWORD PTR [edx-0x1c]
1002a7fa:	xor    ecx,eax
1002a7fc:	call   0x10015adb
1002a801:	mov    eax,0x10058d80
1002a806:	jmp    0x10015ba5
1002a80b:	int3   
1002a80c:	int3   
1002a80d:	int3   
1002a80e:	int3   
1002a80f:	int3   
1002a810:	mov    edx,DWORD PTR [esp+0x8]
1002a814:	lea    eax,[edx+0xc]
1002a817:	mov    ecx,DWORD PTR [edx-0x2c]
1002a81a:	xor    ecx,eax
1002a81c:	call   0x10015adb
1002a821:	mov    eax,0x10058e0c
1002a826:	jmp    0x10015ba5
1002a82b:	int3   
1002a82c:	int3   
1002a82d:	int3   
1002a82e:	int3   
1002a82f:	int3   
1002a830:	lea    ecx,[ebp+0x8]
1002a833:	jmp    0x100042a0
1002a838:	mov    edx,DWORD PTR [esp+0x8]
1002a83c:	lea    eax,[edx-0x14]
1002a83f:	mov    ecx,DWORD PTR [edx-0x18]
1002a842:	xor    ecx,eax
1002a844:	call   0x10015adb
1002a849:	mov    eax,0x10058e38
1002a84e:	jmp    0x10015ba5
1002a853:	int3   
1002a854:	int3   
1002a855:	int3   
1002a856:	int3   
1002a857:	int3   
1002a858:	int3   
1002a859:	int3   
1002a85a:	int3   
1002a85b:	int3   
1002a85c:	int3   
1002a85d:	int3   
1002a85e:	int3   
1002a85f:	int3   
1002a860:	mov    ecx,DWORD PTR [ebp-0x10]
1002a863:	jmp    0x1001632c
1002a868:	mov    edx,DWORD PTR [esp+0x8]
1002a86c:	lea    eax,[edx-0xc]
1002a86f:	mov    ecx,DWORD PTR [edx-0x10]
1002a872:	xor    ecx,eax
1002a874:	call   0x10015adb
1002a879:	mov    eax,0x10058e64
1002a87e:	jmp    0x10015ba5
1002a883:	int3   
1002a884:	int3   
1002a885:	int3   
1002a886:	int3   
1002a887:	int3   
1002a888:	int3   
1002a889:	int3   
1002a88a:	int3   
1002a88b:	int3   
1002a88c:	int3   
1002a88d:	int3   
1002a88e:	int3   
1002a88f:	int3   
1002a890:	mov    ecx,DWORD PTR [ebp-0x10]
1002a893:	jmp    0x1001632c
1002a898:	mov    edx,DWORD PTR [esp+0x8]
1002a89c:	lea    eax,[edx-0xc]
1002a89f:	mov    ecx,DWORD PTR [edx-0x10]
1002a8a2:	xor    ecx,eax
1002a8a4:	call   0x10015adb
1002a8a9:	mov    eax,0x10058e90
1002a8ae:	jmp    0x10015ba5
1002a8b3:	int3   
1002a8b4:	int3   
1002a8b5:	int3   
1002a8b6:	int3   
1002a8b7:	int3   
1002a8b8:	int3   
1002a8b9:	int3   
1002a8ba:	int3   
1002a8bb:	int3   
1002a8bc:	int3   
1002a8bd:	int3   
1002a8be:	int3   
1002a8bf:	int3   
1002a8c0:	mov    ecx,DWORD PTR [ebp+0x4]
1002a8c3:	jmp    0x1001632c
1002a8c8:	mov    edx,DWORD PTR [esp+0x8]
1002a8cc:	lea    eax,[edx-0x4]
1002a8cf:	mov    ecx,DWORD PTR [edx-0x8]
1002a8d2:	xor    ecx,eax
1002a8d4:	call   0x10015adb
1002a8d9:	mov    eax,0x10058ebc
1002a8de:	jmp    0x10015ba5
1002a8e3:	int3   
1002a8e4:	int3   
1002a8e5:	int3   
1002a8e6:	int3   
1002a8e7:	int3   
1002a8e8:	int3   
1002a8e9:	int3   
1002a8ea:	int3   
1002a8eb:	int3   
1002a8ec:	int3   
1002a8ed:	int3   
1002a8ee:	int3   
1002a8ef:	int3   
1002a8f0:	mov    ecx,DWORD PTR [ebp-0x10]
1002a8f3:	jmp    0x1001632c
1002a8f8:	mov    edx,DWORD PTR [esp+0x8]
1002a8fc:	lea    eax,[edx-0x8]
1002a8ff:	mov    ecx,DWORD PTR [edx-0xc]
1002a902:	xor    ecx,eax
1002a904:	call   0x10015adb
1002a909:	mov    eax,0x10058ee8
1002a90e:	jmp    0x10015ba5
1002a913:	int3   
1002a914:	int3   
1002a915:	int3   
1002a916:	int3   
1002a917:	int3   
1002a918:	int3   
1002a919:	int3   
1002a91a:	int3   
1002a91b:	int3   
1002a91c:	int3   
1002a91d:	int3   
1002a91e:	int3   
1002a91f:	int3   
1002a920:	mov    ecx,DWORD PTR [ebp+0x4]
1002a923:	jmp    0x100079a0
1002a928:	mov    edx,DWORD PTR [esp+0x8]
1002a92c:	lea    eax,[edx-0x4]
1002a92f:	mov    ecx,DWORD PTR [edx-0x8]
1002a932:	xor    ecx,eax
1002a934:	call   0x10015adb
1002a939:	mov    eax,0x10058f14
1002a93e:	jmp    0x10015ba5
1002a943:	int3   
1002a944:	int3   
1002a945:	int3   
1002a946:	int3   
1002a947:	int3   
1002a948:	int3   
1002a949:	int3   
1002a94a:	int3   
1002a94b:	int3   
1002a94c:	int3   
1002a94d:	int3   
1002a94e:	int3   
1002a94f:	int3   
1002a950:	mov    ecx,DWORD PTR [ebp-0x10]
1002a953:	jmp    0x100042a0
1002a958:	mov    edx,DWORD PTR [esp+0x8]
1002a95c:	lea    eax,[edx-0x10]
1002a95f:	mov    ecx,DWORD PTR [edx-0x14]
1002a962:	xor    ecx,eax
1002a964:	call   0x10015adb
1002a969:	mov    eax,0x10058f40
1002a96e:	jmp    0x10015ba5
1002a973:	int3   
1002a974:	int3   
1002a975:	int3   
1002a976:	int3   
1002a977:	int3   
1002a978:	int3   
1002a979:	int3   
1002a97a:	int3   
1002a97b:	int3   
1002a97c:	int3   
1002a97d:	int3   
1002a97e:	int3   
1002a97f:	int3   
1002a980:	mov    ecx,DWORD PTR [ebp-0x10]
1002a983:	jmp    0x10002b80
1002a988:	mov    edx,DWORD PTR [esp+0x8]
1002a98c:	lea    eax,[edx-0x10]
1002a98f:	mov    ecx,DWORD PTR [edx-0x14]
1002a992:	xor    ecx,eax
1002a994:	call   0x10015adb
1002a999:	mov    eax,0x10058f6c
1002a99e:	jmp    0x10015ba5
1002a9a3:	int3   
1002a9a4:	int3   
1002a9a5:	int3   
1002a9a6:	int3   
1002a9a7:	int3   
1002a9a8:	int3   
1002a9a9:	int3   
1002a9aa:	int3   
1002a9ab:	int3   
1002a9ac:	int3   
1002a9ad:	int3   
1002a9ae:	int3   
1002a9af:	int3   
1002a9b0:	mov    eax,DWORD PTR [ebp-0x14]
1002a9b3:	push   eax
1002a9b4:	mov    ecx,DWORD PTR [ebp-0x18]
1002a9b7:	push   ecx
1002a9b8:	call   0x10001240
1002a9bd:	add    esp,0x8
1002a9c0:	ret    
1002a9c1:	mov    edx,DWORD PTR [esp+0x8]
1002a9c5:	lea    eax,[edx+0xc]
1002a9c8:	mov    ecx,DWORD PTR [edx-0x1c]
1002a9cb:	xor    ecx,eax
1002a9cd:	call   0x10015adb
1002a9d2:	mov    eax,0x10058fcc
1002a9d7:	jmp    0x10015ba5
1002a9dc:	int3   
1002a9dd:	int3   
1002a9de:	int3   
1002a9df:	int3   
1002a9e0:	mov    eax,DWORD PTR [ebp-0x14]
1002a9e3:	push   eax
1002a9e4:	mov    ecx,DWORD PTR [ebp-0x18]
1002a9e7:	push   ecx
1002a9e8:	call   0x10001240
1002a9ed:	add    esp,0x8
1002a9f0:	ret    
1002a9f1:	mov    edx,DWORD PTR [esp+0x8]
1002a9f5:	lea    eax,[edx+0xc]
1002a9f8:	mov    ecx,DWORD PTR [edx-0x1c]
1002a9fb:	xor    ecx,eax
1002a9fd:	call   0x10015adb
1002aa02:	mov    eax,0x1005902c
1002aa07:	jmp    0x10015ba5
1002aa0c:	int3   
1002aa0d:	int3   
1002aa0e:	int3   
1002aa0f:	int3   
1002aa10:	mov    ecx,DWORD PTR [ebp-0x10]
1002aa13:	jmp    0x100042a0
1002aa18:	mov    edx,DWORD PTR [esp+0x8]
1002aa1c:	lea    eax,[edx-0xc]
1002aa1f:	mov    ecx,DWORD PTR [edx-0x10]
1002aa22:	xor    ecx,eax
1002aa24:	call   0x10015adb
1002aa29:	mov    eax,0x10059058
1002aa2e:	jmp    0x10015ba5
1002aa33:	int3   
1002aa34:	int3   
1002aa35:	int3   
1002aa36:	int3   
1002aa37:	int3   
1002aa38:	int3   
1002aa39:	int3   
1002aa3a:	int3   
1002aa3b:	int3   
1002aa3c:	int3   
1002aa3d:	int3   
1002aa3e:	int3   
1002aa3f:	int3   
1002aa40:	mov    ecx,DWORD PTR [ebp-0x10]
1002aa43:	jmp    0x10002b80
1002aa48:	mov    edx,DWORD PTR [esp+0x8]
1002aa4c:	lea    eax,[edx-0xc]
1002aa4f:	mov    ecx,DWORD PTR [edx-0x10]
1002aa52:	xor    ecx,eax
1002aa54:	call   0x10015adb
1002aa59:	mov    eax,0x10059084
1002aa5e:	jmp    0x10015ba5
1002aa63:	int3   
1002aa64:	int3   
1002aa65:	int3   
1002aa66:	int3   
1002aa67:	int3   
1002aa68:	int3   
1002aa69:	int3   
1002aa6a:	int3   
1002aa6b:	int3   
1002aa6c:	int3   
1002aa6d:	int3   
1002aa6e:	int3   
1002aa6f:	int3   
1002aa70:	lea    ecx,[ebp+0x8]
1002aa73:	jmp    0x10002b80
1002aa78:	mov    edx,DWORD PTR [esp+0x8]
1002aa7c:	lea    eax,[edx-0x14]
1002aa7f:	mov    ecx,DWORD PTR [edx-0x18]
1002aa82:	xor    ecx,eax
1002aa84:	call   0x10015adb
1002aa89:	mov    eax,0x100590b0
1002aa8e:	jmp    0x10015ba5
1002aa93:	int3   
1002aa94:	int3   
1002aa95:	int3   
1002aa96:	int3   
1002aa97:	int3   
1002aa98:	int3   
1002aa99:	int3   
1002aa9a:	int3   
1002aa9b:	int3   
1002aa9c:	int3   
1002aa9d:	int3   
1002aa9e:	int3   
1002aa9f:	int3   
1002aaa0:	mov    eax,DWORD PTR [ebp-0x10]
1002aaa3:	and    eax,0x1
1002aaa6:	je     0x1002aab8
1002aaac:	and    DWORD PTR [ebp-0x10],0xfffffffe
1002aab0:	mov    ecx,DWORD PTR [ebp+0x4]
1002aab3:	jmp    0x10002e90
1002aab8:	ret    
1002aab9:	mov    edx,DWORD PTR [esp+0x8]
1002aabd:	lea    eax,[edx-0x10]
1002aac0:	mov    ecx,DWORD PTR [edx-0x14]
1002aac3:	xor    ecx,eax
1002aac5:	call   0x10015adb
1002aaca:	mov    eax,0x100590dc
1002aacf:	jmp    0x10015ba5
1002aad4:	int3   
1002aad5:	int3   
1002aad6:	int3   
1002aad7:	int3   
1002aad8:	int3   
1002aad9:	int3   
1002aada:	int3   
1002aadb:	int3   
1002aadc:	int3   
1002aadd:	int3   
1002aade:	int3   
1002aadf:	int3   
1002aae0:	lea    ecx,[ebp-0x10]
1002aae3:	jmp    0x10002e90
1002aae8:	mov    edx,DWORD PTR [esp+0x8]
1002aaec:	lea    eax,[edx-0xc]
1002aaef:	mov    ecx,DWORD PTR [edx-0x10]
1002aaf2:	xor    ecx,eax
1002aaf4:	call   0x10015adb
1002aaf9:	mov    eax,0x10059108
1002aafe:	jmp    0x10015ba5
1002ab03:	int3   
1002ab04:	int3   
1002ab05:	int3   
1002ab06:	int3   
1002ab07:	int3   
1002ab08:	int3   
1002ab09:	int3   
1002ab0a:	int3   
1002ab0b:	int3   
1002ab0c:	int3   
1002ab0d:	int3   
1002ab0e:	int3   
1002ab0f:	int3   
1002ab10:	mov    eax,DWORD PTR [ebp-0x10]
1002ab13:	and    eax,0x1
1002ab16:	je     0x1002ab28
1002ab1c:	and    DWORD PTR [ebp-0x10],0xfffffffe
1002ab20:	mov    ecx,DWORD PTR [ebp+0x4]
1002ab23:	jmp    0x10002e90
1002ab28:	ret    
1002ab29:	mov    edx,DWORD PTR [esp+0x8]
1002ab2d:	lea    eax,[edx-0xc]
1002ab30:	mov    ecx,DWORD PTR [edx-0x10]
1002ab33:	xor    ecx,eax
1002ab35:	call   0x10015adb
1002ab3a:	mov    eax,0x10059134
1002ab3f:	jmp    0x10015ba5
1002ab44:	int3   
1002ab45:	int3   
1002ab46:	int3   
1002ab47:	int3   
1002ab48:	int3   
1002ab49:	int3   
1002ab4a:	int3   
1002ab4b:	int3   
1002ab4c:	int3   
1002ab4d:	int3   
1002ab4e:	int3   
1002ab4f:	int3   
1002ab50:	lea    eax,[ebp-0x14]
1002ab53:	jmp    0x100078a0
1002ab58:	lea    ecx,[ebp-0x10]
1002ab5b:	jmp    0x10003320
1002ab60:	mov    edx,DWORD PTR [esp+0x8]
1002ab64:	lea    eax,[edx-0x1c]
1002ab67:	mov    ecx,DWORD PTR [edx-0x20]
1002ab6a:	xor    ecx,eax
1002ab6c:	call   0x10015adb
1002ab71:	mov    eax,0x10059168
1002ab76:	jmp    0x10015ba5
1002ab7b:	int3   
1002ab7c:	int3   
1002ab7d:	int3   
1002ab7e:	int3   
1002ab7f:	int3   
1002ab80:	lea    ecx,[ebp+0x4]
1002ab83:	jmp    0x10002e90
1002ab88:	mov    eax,DWORD PTR [ebp-0x10]
1002ab8b:	push   eax
1002ab8c:	call   0x10015ad6
1002ab91:	pop    ecx
1002ab92:	ret    
1002ab93:	mov    edx,DWORD PTR [esp+0x8]
1002ab97:	lea    eax,[edx-0x8]
1002ab9a:	mov    ecx,DWORD PTR [edx-0xc]
1002ab9d:	xor    ecx,eax
1002ab9f:	call   0x10015adb
1002aba4:	mov    eax,0x1005919c
1002aba9:	jmp    0x10015ba5
1002abae:	int3   
1002abaf:	int3   
1002abb0:	lea    ecx,[ebp-0x28]
1002abb3:	jmp    0x10002b80
1002abb8:	mov    edx,DWORD PTR [esp+0x8]
1002abbc:	lea    eax,[edx-0x28]
1002abbf:	mov    ecx,DWORD PTR [edx-0x2c]
1002abc2:	xor    ecx,eax
1002abc4:	call   0x10015adb
1002abc9:	mov    eax,0x100591c8
1002abce:	jmp    0x10015ba5
1002abd3:	int3   
1002abd4:	int3   
1002abd5:	int3   
1002abd6:	int3   
1002abd7:	int3   
1002abd8:	int3   
1002abd9:	int3   
1002abda:	int3   
1002abdb:	int3   
1002abdc:	int3   
1002abdd:	int3   
1002abde:	int3   
1002abdf:	int3   
1002abe0:	mov    ecx,DWORD PTR [ebp-0x10]
1002abe3:	jmp    0x10002e90
1002abe8:	mov    edx,DWORD PTR [esp+0x8]
1002abec:	lea    eax,[edx-0xc]
1002abef:	mov    ecx,DWORD PTR [edx-0x10]
1002abf2:	xor    ecx,eax
1002abf4:	call   0x10015adb
1002abf9:	mov    eax,0x100591f4
1002abfe:	jmp    0x10015ba5
1002ac03:	int3   
1002ac04:	int3   
1002ac05:	int3   
1002ac06:	int3   
1002ac07:	int3   
1002ac08:	int3   
1002ac09:	int3   
1002ac0a:	int3   
1002ac0b:	int3   
1002ac0c:	int3   
1002ac0d:	int3   
1002ac0e:	int3   
1002ac0f:	int3   
1002ac10:	mov    ecx,DWORD PTR [ebp-0x10]
1002ac13:	jmp    0x10002e90
1002ac18:	mov    edx,DWORD PTR [esp+0x8]
1002ac1c:	lea    eax,[edx-0xc]
1002ac1f:	mov    ecx,DWORD PTR [edx-0x10]
1002ac22:	xor    ecx,eax
1002ac24:	call   0x10015adb
1002ac29:	mov    eax,0x10059220
1002ac2e:	jmp    0x10015ba5
1002ac33:	int3   
1002ac34:	int3   
1002ac35:	int3   
1002ac36:	int3   
1002ac37:	int3   
1002ac38:	int3   
1002ac39:	int3   
1002ac3a:	int3   
1002ac3b:	int3   
1002ac3c:	int3   
1002ac3d:	int3   
1002ac3e:	int3   
1002ac3f:	int3   
1002ac40:	lea    ecx,[ebp-0x50]
1002ac43:	jmp    0x10002b80
1002ac48:	mov    edx,DWORD PTR [esp+0x8]
1002ac4c:	lea    eax,[edx+0xc]
1002ac4f:	mov    ecx,DWORD PTR [edx-0x70]
1002ac52:	xor    ecx,eax
1002ac54:	call   0x10015adb
1002ac59:	mov    eax,0x1005924c
1002ac5e:	jmp    0x10015ba5
1002ac63:	int3   
1002ac64:	int3   
1002ac65:	int3   
1002ac66:	int3   
1002ac67:	int3   
1002ac68:	int3   
1002ac69:	int3   
1002ac6a:	int3   
1002ac6b:	int3   
1002ac6c:	int3   
1002ac6d:	int3   
1002ac6e:	int3   
1002ac6f:	int3   
1002ac70:	lea    ecx,[ebp-0x54]
1002ac73:	jmp    0x10002b80
1002ac78:	mov    edx,DWORD PTR [esp+0x8]
1002ac7c:	lea    eax,[edx-0x48]
1002ac7f:	mov    ecx,DWORD PTR [edx-0x4c]
1002ac82:	xor    ecx,eax
1002ac84:	call   0x10015adb
1002ac89:	mov    eax,0x10059278
1002ac8e:	jmp    0x10015ba5
1002ac93:	int3   
1002ac94:	int3   
1002ac95:	int3   
1002ac96:	int3   
1002ac97:	int3   
1002ac98:	int3   
1002ac99:	int3   
1002ac9a:	int3   
1002ac9b:	int3   
1002ac9c:	int3   
1002ac9d:	int3   
1002ac9e:	int3   
1002ac9f:	int3   
1002aca0:	lea    ecx,[ebp-0x98]
1002aca6:	jmp    0x10002b80
1002acab:	lea    ecx,[ebp-0x98]
1002acb1:	jmp    0x10002b80
1002acb6:	lea    ecx,[ebp-0x7c]
1002acb9:	jmp    0x10002b80
1002acbe:	mov    edx,DWORD PTR [esp+0x8]
1002acc2:	lea    eax,[edx-0xa8]
1002acc8:	mov    ecx,DWORD PTR [edx-0xac]
1002acce:	xor    ecx,eax
1002acd0:	call   0x10015adb
1002acd5:	mov    eax,0x100592b4
1002acda:	jmp    0x10015ba5
1002acdf:	int3   
1002ace0:	mov    ecx,DWORD PTR [ebp+0x4]
1002ace3:	jmp    0x100032a0
1002ace8:	mov    ecx,DWORD PTR [ebp+0x4]
1002aceb:	add    ecx,0x894
1002acf1:	jmp    0x10009f60
1002acf6:	mov    eax,DWORD PTR [ebp-0x2c]
1002acf9:	push   eax
1002acfa:	call   0x10015ad6
1002acff:	pop    ecx
1002ad00:	ret    
1002ad01:	mov    eax,DWORD PTR [ebp-0x30]
1002ad04:	and    eax,0x1
1002ad07:	je     0x1002ad19
1002ad0d:	and    DWORD PTR [ebp-0x30],0xfffffffe
1002ad11:	lea    ecx,[ebp-0x28]
1002ad14:	jmp    0x10002b80
1002ad19:	ret    
1002ad1a:	mov    edx,DWORD PTR [esp+0x8]
1002ad1e:	lea    eax,[edx-0x34]
1002ad21:	mov    ecx,DWORD PTR [edx-0x38]
1002ad24:	xor    ecx,eax
1002ad26:	call   0x10015adb
1002ad2b:	mov    eax,0x10059300
1002ad30:	jmp    0x10015ba5
1002ad35:	int3   
1002ad36:	int3   
1002ad37:	int3   
1002ad38:	int3   
1002ad39:	int3   
1002ad3a:	int3   
1002ad3b:	int3   
1002ad3c:	int3   
1002ad3d:	int3   
1002ad3e:	int3   
1002ad3f:	int3   
1002ad40:	lea    ecx,[ebp-0x2c]
1002ad43:	jmp    0x100032a0
1002ad48:	mov    edx,DWORD PTR [esp+0x8]
1002ad4c:	lea    eax,[edx-0x38]
1002ad4f:	mov    ecx,DWORD PTR [edx-0x3c]
1002ad52:	xor    ecx,eax
1002ad54:	call   0x10015adb
1002ad59:	mov    eax,0x1005932c
1002ad5e:	jmp    0x10015ba5
1002ad63:	int3   
1002ad64:	int3   
1002ad65:	int3   
1002ad66:	int3   
1002ad67:	int3   
1002ad68:	int3   
1002ad69:	int3   
1002ad6a:	int3   
1002ad6b:	int3   
1002ad6c:	int3   
1002ad6d:	int3   
1002ad6e:	int3   
1002ad6f:	int3   
1002ad70:	lea    ecx,[ebp-0x54]
1002ad73:	jmp    0x10002b80
1002ad78:	mov    edx,DWORD PTR [esp+0x8]
1002ad7c:	lea    eax,[edx-0x5c]
1002ad7f:	mov    ecx,DWORD PTR [edx-0x60]
1002ad82:	xor    ecx,eax
1002ad84:	call   0x10015adb
1002ad89:	mov    eax,0x10059358
1002ad8e:	jmp    0x10015ba5
1002ad93:	int3   
1002ad94:	int3   
1002ad95:	int3   
1002ad96:	int3   
1002ad97:	int3   
1002ad98:	int3   
1002ad99:	int3   
1002ad9a:	int3   
1002ad9b:	int3   
1002ad9c:	int3   
1002ad9d:	int3   
1002ad9e:	int3   
1002ad9f:	int3   
1002ada0:	lea    ecx,[ebp-0x54]
1002ada3:	jmp    0x10002b80
1002ada8:	mov    edx,DWORD PTR [esp+0x8]
1002adac:	lea    eax,[edx-0x5c]
1002adaf:	mov    ecx,DWORD PTR [edx-0x60]
1002adb2:	xor    ecx,eax
1002adb4:	call   0x10015adb
1002adb9:	mov    eax,0x10059384
1002adbe:	jmp    0x10015ba5
1002adc3:	int3   
1002adc4:	int3   
1002adc5:	int3   
1002adc6:	int3   
1002adc7:	int3   
1002adc8:	int3   
1002adc9:	int3   
1002adca:	int3   
1002adcb:	int3   
1002adcc:	int3   
1002adcd:	int3   
1002adce:	int3   
1002adcf:	int3   
1002add0:	lea    ecx,[ebp-0x54]
1002add3:	jmp    0x10002b80
1002add8:	mov    edx,DWORD PTR [esp+0x8]
1002addc:	lea    eax,[edx-0x5c]
1002addf:	mov    ecx,DWORD PTR [edx-0x60]
1002ade2:	xor    ecx,eax
1002ade4:	call   0x10015adb
1002ade9:	mov    eax,0x100593b0
1002adee:	jmp    0x10015ba5
1002adf3:	int3   
1002adf4:	int3   
1002adf5:	int3   
1002adf6:	int3   
1002adf7:	int3   
1002adf8:	int3   
1002adf9:	int3   
1002adfa:	int3   
1002adfb:	int3   
1002adfc:	int3   
1002adfd:	int3   
1002adfe:	int3   
1002adff:	int3   
1002ae00:	lea    ecx,[ebp-0x54]
1002ae03:	jmp    0x10002b80
1002ae08:	mov    edx,DWORD PTR [esp+0x8]
1002ae0c:	lea    eax,[edx-0x5c]
1002ae0f:	mov    ecx,DWORD PTR [edx-0x60]
1002ae12:	xor    ecx,eax
1002ae14:	call   0x10015adb
1002ae19:	mov    eax,0x100593dc
1002ae1e:	jmp    0x10015ba5
1002ae23:	int3   
1002ae24:	int3   
1002ae25:	int3   
1002ae26:	int3   
1002ae27:	int3   
1002ae28:	int3   
1002ae29:	int3   
1002ae2a:	int3   
1002ae2b:	int3   
1002ae2c:	int3   
1002ae2d:	int3   
1002ae2e:	int3   
1002ae2f:	int3   
1002ae30:	lea    ecx,[ebp-0x64]
1002ae33:	jmp    0x100042a0
1002ae38:	lea    ecx,[ebp-0x48]
1002ae3b:	jmp    0x10004520
1002ae40:	mov    edx,DWORD PTR [esp+0x8]
1002ae44:	lea    eax,[edx-0x6c]
1002ae47:	mov    ecx,DWORD PTR [edx-0x70]
1002ae4a:	xor    ecx,eax
1002ae4c:	call   0x10015adb
1002ae51:	mov    eax,0x10059410
1002ae56:	jmp    0x10015ba5
1002ae5b:	int3   
1002ae5c:	int3   
1002ae5d:	int3   
1002ae5e:	int3   
1002ae5f:	int3   
1002ae60:	lea    ecx,[ebp-0x64]
1002ae63:	jmp    0x10002b80
1002ae68:	lea    ecx,[ebp-0x48]
1002ae6b:	jmp    0x100044d0
1002ae70:	mov    edx,DWORD PTR [esp+0x8]
1002ae74:	lea    eax,[edx-0x6c]
1002ae77:	mov    ecx,DWORD PTR [edx-0x70]
1002ae7a:	xor    ecx,eax
1002ae7c:	call   0x10015adb
1002ae81:	mov    eax,0x10059444
1002ae86:	jmp    0x10015ba5
1002ae8b:	int3   
1002ae8c:	int3   
1002ae8d:	int3   
1002ae8e:	int3   
1002ae8f:	int3   
1002ae90:	mov    eax,ds:0x10066db4
1002ae95:	and    eax,0xfffffffe
1002ae98:	mov    ds:0x10066db4,eax
1002ae9d:	ret    
1002ae9e:	mov    edx,DWORD PTR [esp+0x8]
1002aea2:	lea    eax,[edx]
1002aea4:	mov    ecx,DWORD PTR [edx-0x4]
1002aea7:	xor    ecx,eax
1002aea9:	call   0x10015adb
1002aeae:	mov    eax,0x10059470
1002aeb3:	jmp    0x10015ba5
1002aeb8:	int3   
1002aeb9:	int3   
1002aeba:	int3   
1002aebb:	int3   
1002aebc:	int3   
1002aebd:	int3   
1002aebe:	int3   
1002aebf:	int3   
1002aec0:	mov    eax,ds:0x10066dc4
1002aec5:	and    eax,0xfffffffe
1002aec8:	mov    ds:0x10066dc4,eax
1002aecd:	ret    
1002aece:	mov    edx,DWORD PTR [esp+0x8]
1002aed2:	lea    eax,[edx]
1002aed4:	mov    ecx,DWORD PTR [edx-0x4]
1002aed7:	xor    ecx,eax
1002aed9:	call   0x10015adb
1002aede:	mov    eax,0x1005949c
1002aee3:	jmp    0x10015ba5
1002aee8:	int3   
1002aee9:	int3   
1002aeea:	int3   
1002aeeb:	int3   
1002aeec:	int3   
1002aeed:	int3   
1002aeee:	int3   
1002aeef:	int3   
1002aef0:	lea    ecx,[ebp-0x4c]
1002aef3:	jmp    0x100042a0
1002aef8:	lea    ecx,[ebp-0x30]
1002aefb:	jmp    0x100042a0
1002af00:	mov    edx,DWORD PTR [esp+0x8]
1002af04:	lea    eax,[edx-0x5c]
1002af07:	mov    ecx,DWORD PTR [edx-0x60]
1002af0a:	xor    ecx,eax
1002af0c:	call   0x10015adb
1002af11:	add    eax,0xc
1002af14:	mov    ecx,DWORD PTR [edx-0x8]
1002af17:	xor    ecx,eax
1002af19:	call   0x10015adb
1002af1e:	mov    eax,0x100594d0
1002af23:	jmp    0x10015ba5
1002af28:	int3   
1002af29:	int3   
1002af2a:	int3   
1002af2b:	int3   
1002af2c:	int3   
1002af2d:	int3   
1002af2e:	int3   
1002af2f:	int3   
1002af30:	lea    ecx,[ebp-0x4c]
1002af33:	jmp    0x10002b80
1002af38:	lea    ecx,[ebp-0x30]
1002af3b:	jmp    0x10002b80
1002af40:	mov    edx,DWORD PTR [esp+0x8]
1002af44:	lea    eax,[edx-0x5c]
1002af47:	mov    ecx,DWORD PTR [edx-0x60]
1002af4a:	xor    ecx,eax
1002af4c:	call   0x10015adb
1002af51:	add    eax,0xc
1002af54:	mov    ecx,DWORD PTR [edx-0x8]
1002af57:	xor    ecx,eax
1002af59:	call   0x10015adb
1002af5e:	mov    eax,0x10059504
1002af63:	jmp    0x10015ba5
1002af68:	int3   
1002af69:	int3   
1002af6a:	int3   
1002af6b:	int3   
1002af6c:	int3   
1002af6d:	int3   
1002af6e:	int3   
1002af6f:	int3   
1002af70:	mov    eax,DWORD PTR [ebp-0x54]
1002af73:	and    eax,0x1
1002af76:	je     0x1002af88
1002af7c:	and    DWORD PTR [ebp-0x54],0xfffffffe
1002af80:	mov    ecx,DWORD PTR [ebp+0x4]
1002af83:	jmp    0x10002e90
1002af88:	ret    
1002af89:	lea    ecx,[ebp-0x50]
1002af8c:	jmp    0x10002b80
1002af91:	mov    edx,DWORD PTR [esp+0x8]
1002af95:	lea    eax,[edx-0x54]
1002af98:	mov    ecx,DWORD PTR [edx-0x58]
1002af9b:	xor    ecx,eax
1002af9d:	call   0x10015adb
1002afa2:	mov    eax,0x10059538
1002afa7:	jmp    0x10015ba5
1002afac:	int3   
1002afad:	int3   
1002afae:	int3   
1002afaf:	int3   
1002afb0:	lea    ecx,[ebp-0x28]
1002afb3:	jmp    0x10002b80
1002afb8:	mov    edx,DWORD PTR [esp+0x8]
1002afbc:	lea    eax,[edx-0x20]
1002afbf:	mov    ecx,DWORD PTR [edx-0x24]
1002afc2:	xor    ecx,eax
1002afc4:	call   0x10015adb
1002afc9:	mov    eax,0x10059564
1002afce:	jmp    0x10015ba5
1002afd3:	int3   
1002afd4:	int3   
1002afd5:	int3   
1002afd6:	int3   
1002afd7:	int3   
1002afd8:	int3   
1002afd9:	int3   
1002afda:	int3   
1002afdb:	int3   
1002afdc:	int3   
1002afdd:	int3   
1002afde:	int3   
1002afdf:	int3   
1002afe0:	mov    eax,DWORD PTR [ebp-0x34]
1002afe3:	and    eax,0x1
1002afe6:	je     0x1002aff8
1002afec:	and    DWORD PTR [ebp-0x34],0xfffffffe
1002aff0:	mov    ecx,DWORD PTR [ebp-0x30]
1002aff3:	jmp    0x10002b80
1002aff8:	ret    
1002aff9:	lea    ecx,[ebp-0x2c]
1002affc:	jmp    0x10002b80
1002b001:	lea    ecx,[ebp-0x38]
1002b004:	jmp    0x10002e90
1002b009:	lea    ecx,[ebp-0x2c]
1002b00c:	jmp    0x10002b80
1002b011:	lea    ecx,[ebp-0x38]
1002b014:	jmp    0x10002e90
1002b019:	lea    ecx,[ebp-0x2c]
1002b01c:	jmp    0x10002b80
1002b021:	lea    ecx,[ebp-0x2c]
1002b024:	jmp    0x10002b80
1002b029:	mov    edx,DWORD PTR [esp+0x8]
1002b02d:	lea    eax,[edx-0x3c]
1002b030:	mov    ecx,DWORD PTR [edx-0x40]
1002b033:	xor    ecx,eax
1002b035:	call   0x10015adb
1002b03a:	add    eax,0x10
1002b03d:	mov    ecx,DWORD PTR [edx-0x4]
1002b040:	xor    ecx,eax
1002b042:	call   0x10015adb
1002b047:	mov    eax,0x100595c0
1002b04c:	jmp    0x10015ba5
1002b051:	int3   
1002b052:	int3   
1002b053:	int3   
1002b054:	int3   
1002b055:	int3   
1002b056:	int3   
1002b057:	int3   
1002b058:	int3   
1002b059:	int3   
1002b05a:	int3   
1002b05b:	int3   
1002b05c:	int3   
1002b05d:	int3   
1002b05e:	int3   
1002b05f:	int3   
1002b060:	lea    ecx,[ebp-0x28]
1002b063:	jmp    0x1000a150
1002b068:	lea    ecx,[ebp-0xf8]
1002b06e:	jmp    0x10002b80
1002b073:	lea    eax,[ebp-0x38]
1002b076:	jmp    0x100078a0
1002b07b:	mov    edx,DWORD PTR [esp+0x8]
1002b07f:	lea    eax,[edx+0xc]
1002b082:	mov    ecx,DWORD PTR [edx-0x234]
1002b088:	xor    ecx,eax
1002b08a:	call   0x10015adb
1002b08f:	mov    ecx,DWORD PTR [edx-0x30]
1002b092:	xor    ecx,eax
1002b094:	call   0x10015adb
1002b099:	mov    eax,0x10059638
1002b09e:	jmp    0x10015ba5
1002b0a3:	int3   
1002b0a4:	int3   
1002b0a5:	int3   
1002b0a6:	int3   
1002b0a7:	int3   
1002b0a8:	int3   
1002b0a9:	int3   
1002b0aa:	int3   
1002b0ab:	int3   
1002b0ac:	int3   
1002b0ad:	int3   
1002b0ae:	int3   
1002b0af:	int3   
1002b0b0:	lea    ecx,[ebp-0x1040]
1002b0b6:	jmp    0x1000a150
1002b0bb:	lea    ecx,[ebp-0x106c]
1002b0c1:	jmp    0x10002b80
1002b0c6:	lea    eax,[ebp-0x104c]
1002b0cc:	jmp    0x100078a0
1002b0d1:	mov    edx,DWORD PTR [esp+0x8]
1002b0d5:	lea    eax,[edx+0xc]
1002b0d8:	mov    ecx,DWORD PTR [edx-0x1070]
1002b0de:	xor    ecx,eax
1002b0e0:	call   0x10015adb
1002b0e5:	mov    ecx,DWORD PTR [edx-0xc]
1002b0e8:	xor    ecx,eax
1002b0ea:	call   0x10015adb
1002b0ef:	mov    eax,0x100596b0
1002b0f4:	jmp    0x10015ba5
1002b0f9:	int3   
1002b0fa:	int3   
1002b0fb:	int3   
1002b0fc:	int3   
1002b0fd:	int3   
1002b0fe:	int3   
1002b0ff:	int3   
1002b100:	lea    ecx,[ebp-0x103c]
1002b106:	jmp    0x1000a150
1002b10b:	lea    ecx,[ebp-0x106c]
1002b111:	jmp    0x10002b80
1002b116:	lea    eax,[ebp-0x1044]
1002b11c:	jmp    0x100078a0
1002b121:	mov    edx,DWORD PTR [esp+0x8]
1002b125:	lea    eax,[edx+0xc]
1002b128:	mov    ecx,DWORD PTR [edx-0x1074]
1002b12e:	xor    ecx,eax
1002b130:	call   0x10015adb
1002b135:	mov    ecx,DWORD PTR [edx-0x8]
1002b138:	xor    ecx,eax
1002b13a:	call   0x10015adb
1002b13f:	mov    eax,0x10059728
1002b144:	jmp    0x10015ba5
1002b149:	int3   
1002b14a:	int3   
1002b14b:	int3   
1002b14c:	int3   
1002b14d:	int3   
1002b14e:	int3   
1002b14f:	int3   
1002b150:	lea    ecx,[ebp-0x28]
1002b153:	jmp    0x10002b80
1002b158:	mov    edx,DWORD PTR [esp+0x8]
1002b15c:	lea    eax,[edx-0x28]
1002b15f:	mov    ecx,DWORD PTR [edx-0x2c]
1002b162:	xor    ecx,eax
1002b164:	call   0x10015adb
1002b169:	mov    eax,0x10059754
1002b16e:	jmp    0x10015ba5
1002b173:	int3   
1002b174:	int3   
1002b175:	int3   
1002b176:	int3   
1002b177:	int3   
1002b178:	int3   
1002b179:	int3   
1002b17a:	int3   
1002b17b:	int3   
1002b17c:	int3   
1002b17d:	int3   
1002b17e:	int3   
1002b17f:	int3   
1002b180:	lea    ecx,[ebp-0xb0]
1002b186:	jmp    0x1000a150
1002b18b:	lea    eax,[ebp-0x64]
1002b18e:	jmp    0x10007b40
1002b193:	lea    ecx,[ebp-0xac]
1002b199:	jmp    0x10002b80
1002b19e:	lea    ecx,[ebp-0xac]
1002b1a4:	jmp    0x10002b80
1002b1a9:	lea    ecx,[ebp-0xac]
1002b1af:	jmp    0x10002b80
1002b1b4:	lea    ecx,[ebp-0xac]
1002b1ba:	jmp    0x10002b80
1002b1bf:	lea    ecx,[ebp-0xac]
1002b1c5:	jmp    0x10002b80
1002b1ca:	lea    ecx,[ebp-0xac]
1002b1d0:	jmp    0x10002b80
1002b1d5:	lea    ecx,[ebp-0xac]
1002b1db:	jmp    0x10002b80
1002b1e0:	lea    ecx,[ebp-0xac]
1002b1e6:	jmp    0x10002b80
1002b1eb:	lea    ecx,[ebp-0xac]
1002b1f1:	jmp    0x10002b80
1002b1f6:	lea    ecx,[ebp-0x50]
1002b1f9:	jmp    0x10002b80
1002b1fe:	mov    edx,DWORD PTR [esp+0x8]
1002b202:	lea    eax,[edx-0xb4]
1002b208:	mov    ecx,DWORD PTR [edx-0xb8]
1002b20e:	xor    ecx,eax
1002b210:	call   0x10015adb
1002b215:	mov    eax,0x100597d8
1002b21a:	jmp    0x10015ba5
1002b21f:	int3   
1002b220:	lea    ecx,[ebp-0x18]
1002b223:	jmp    0x100032a0
1002b228:	lea    ecx,[ebp-0x1c]
1002b22b:	jmp    0x10002e90
1002b230:	mov    eax,ds:0x10066f50
1002b235:	and    eax,0xfffffffe
1002b238:	mov    ds:0x10066f50,eax
1002b23d:	ret    
1002b23e:	mov    edx,DWORD PTR [esp+0x8]
1002b242:	lea    eax,[edx-0x24]
1002b245:	mov    ecx,DWORD PTR [edx-0x28]
1002b248:	xor    ecx,eax
1002b24a:	call   0x10015adb
1002b24f:	mov    eax,0x10059814
1002b254:	jmp    0x10015ba5
1002b259:	int3   
1002b25a:	int3   
1002b25b:	int3   
1002b25c:	int3   
1002b25d:	int3   
1002b25e:	int3   
1002b25f:	int3   
1002b260:	lea    ecx,[ebp-0x10]
1002b263:	jmp    0x100032a0
1002b268:	mov    edx,DWORD PTR [esp+0x8]
1002b26c:	lea    eax,[edx-0x14]
1002b26f:	mov    ecx,DWORD PTR [edx-0x18]
1002b272:	xor    ecx,eax
1002b274:	call   0x10015adb
1002b279:	mov    eax,0x10059840
1002b27e:	jmp    0x10015ba5
1002b283:	int3   
1002b284:	int3   
1002b285:	int3   
1002b286:	int3   
1002b287:	int3   
1002b288:	int3   
1002b289:	int3   
1002b28a:	int3   
1002b28b:	int3   
1002b28c:	int3   
1002b28d:	int3   
1002b28e:	int3   
1002b28f:	int3   
1002b290:	lea    ecx,[ebp-0x54]
1002b293:	jmp    0x10002b80
1002b298:	mov    edx,DWORD PTR [esp+0x8]
1002b29c:	lea    eax,[edx-0x54]
1002b29f:	mov    ecx,DWORD PTR [edx-0x58]
1002b2a2:	xor    ecx,eax
1002b2a4:	call   0x10015adb
1002b2a9:	mov    eax,0x1005986c
1002b2ae:	jmp    0x10015ba5
1002b2b3:	int3   
1002b2b4:	int3   
1002b2b5:	int3   
1002b2b6:	int3   
1002b2b7:	int3   
1002b2b8:	int3   
1002b2b9:	int3   
1002b2ba:	int3   
1002b2bb:	int3   
1002b2bc:	int3   
1002b2bd:	int3   
1002b2be:	int3   
1002b2bf:	int3   
1002b2c0:	lea    ecx,[ebp-0x58]
1002b2c3:	jmp    0x10003320
1002b2c8:	lea    eax,[ebp-0x5c]
1002b2cb:	jmp    0x100078a0
1002b2d0:	lea    ecx,[ebp-0x54]
1002b2d3:	jmp    0x10002b80
1002b2d8:	lea    ecx,[ebp-0x54]
1002b2db:	jmp    0x10002b80
1002b2e0:	lea    ecx,[ebp-0x54]
1002b2e3:	jmp    0x10002b80
1002b2e8:	mov    edx,DWORD PTR [esp+0x8]
1002b2ec:	lea    eax,[edx-0x5c]
1002b2ef:	mov    ecx,DWORD PTR [edx-0x60]
1002b2f2:	xor    ecx,eax
1002b2f4:	call   0x10015adb
1002b2f9:	mov    eax,0x100598b8
1002b2fe:	jmp    0x10015ba5
1002b303:	int3   
1002b304:	int3   
1002b305:	int3   
1002b306:	int3   
1002b307:	int3   
1002b308:	int3   
1002b309:	int3   
1002b30a:	int3   
1002b30b:	int3   
1002b30c:	int3   
1002b30d:	int3   
1002b30e:	int3   
1002b30f:	int3   
1002b310:	lea    ecx,[ebp-0x16c]
1002b316:	jmp    0x10002b80
1002b31b:	mov    edx,DWORD PTR [esp+0x8]
1002b31f:	lea    eax,[edx-0x174]
1002b325:	mov    ecx,DWORD PTR [edx-0x178]
1002b32b:	xor    ecx,eax
1002b32d:	call   0x10015adb
1002b332:	add    eax,0x8
1002b335:	mov    ecx,DWORD PTR [edx-0x8]
1002b338:	xor    ecx,eax
1002b33a:	call   0x10015adb
1002b33f:	mov    eax,0x100598e4
1002b344:	jmp    0x10015ba5
1002b349:	int3   
1002b34a:	int3   
1002b34b:	int3   
1002b34c:	int3   
1002b34d:	int3   
1002b34e:	int3   
1002b34f:	int3   
1002b350:	lea    ecx,[ebp-0x10]
1002b353:	jmp    0x10002e90
1002b358:	lea    ecx,[ebp-0x14]
1002b35b:	jmp    0x10002e90
1002b360:	lea    ecx,[ebp-0x18]
1002b363:	jmp    0x10002e90
1002b368:	lea    ecx,[ebp-0x1c]
1002b36b:	jmp    0x10002e90
1002b370:	mov    edx,DWORD PTR [esp+0x8]
1002b374:	lea    eax,[edx-0x18]
1002b377:	mov    ecx,DWORD PTR [edx-0x1c]
1002b37a:	xor    ecx,eax
1002b37c:	call   0x10015adb
1002b381:	mov    eax,0x10059928
1002b386:	jmp    0x10015ba5
1002b38b:	int3   
1002b38c:	int3   
1002b38d:	int3   
1002b38e:	int3   
1002b38f:	int3   
1002b390:	mov    eax,ds:0x10066f54
1002b395:	and    eax,0xfffffffe
1002b398:	mov    ds:0x10066f54,eax
1002b39d:	ret    
1002b39e:	mov    eax,DWORD PTR [ebp-0x30]
1002b3a1:	and    eax,0x1
1002b3a4:	je     0x1002b3b6
1002b3aa:	and    DWORD PTR [ebp-0x30],0xfffffffe
1002b3ae:	mov    ecx,DWORD PTR [ebp-0x34]
1002b3b1:	jmp    0x10002e90
1002b3b6:	ret    
1002b3b7:	lea    ecx,[ebp-0x50]
1002b3ba:	jmp    0x10002b80
1002b3bf:	mov    edx,DWORD PTR [esp+0x8]
1002b3c3:	lea    eax,[edx+0xc]
1002b3c6:	mov    ecx,DWORD PTR [edx-0xa20]
1002b3cc:	xor    ecx,eax
1002b3ce:	call   0x10015adb
1002b3d3:	mov    ecx,DWORD PTR [edx-0x8]
1002b3d6:	xor    ecx,eax
1002b3d8:	call   0x10015adb
1002b3dd:	mov    eax,0x10059964
1002b3e2:	jmp    0x10015ba5
1002b3e7:	int3   
1002b3e8:	int3   
1002b3e9:	int3   
1002b3ea:	int3   
1002b3eb:	int3   
1002b3ec:	int3   
1002b3ed:	int3   
1002b3ee:	int3   
1002b3ef:	int3   
1002b3f0:	mov    eax,DWORD PTR [ebp-0x58]
1002b3f3:	and    eax,0x1
1002b3f6:	je     0x1002b408
1002b3fc:	and    DWORD PTR [ebp-0x58],0xfffffffe
1002b400:	mov    ecx,DWORD PTR [ebp+0x4]
1002b403:	jmp    0x10002e90
1002b408:	ret    
1002b409:	lea    ecx,[ebp-0x54]
1002b40c:	jmp    0x10002b80
1002b411:	mov    edx,DWORD PTR [esp+0x8]
1002b415:	lea    eax,[edx-0x60]
1002b418:	mov    ecx,DWORD PTR [edx-0x64]
1002b41b:	xor    ecx,eax
1002b41d:	call   0x10015adb
1002b422:	mov    eax,0x10059998
1002b427:	jmp    0x10015ba5
1002b42c:	int3   
1002b42d:	int3   
1002b42e:	int3   
1002b42f:	int3   
1002b430:	lea    ecx,[ebp-0x1c]
1002b433:	jmp    0x10006d40
1002b438:	mov    edx,DWORD PTR [esp+0x8]
1002b43c:	lea    eax,[edx+0xc]
1002b43f:	mov    ecx,DWORD PTR [edx-0x20]
1002b442:	xor    ecx,eax
1002b444:	call   0x10015adb
1002b449:	mov    eax,0x100599f8
1002b44e:	jmp    0x10015ba5
1002b453:	int3   
1002b454:	int3   
1002b455:	int3   
1002b456:	int3   
1002b457:	int3   
1002b458:	int3   
1002b459:	int3   
1002b45a:	int3   
1002b45b:	int3   
1002b45c:	int3   
1002b45d:	int3   
1002b45e:	int3   
1002b45f:	int3   
1002b460:	lea    ecx,[ebp-0x40]
1002b463:	jmp    0x1000c230
1002b468:	mov    edx,DWORD PTR [esp+0x8]
1002b46c:	lea    eax,[edx-0x44]
1002b46f:	mov    ecx,DWORD PTR [edx-0x48]
1002b472:	xor    ecx,eax
1002b474:	call   0x10015adb
1002b479:	mov    eax,0x10059a24
1002b47e:	jmp    0x10015ba5
1002b483:	int3   
1002b484:	int3   
1002b485:	int3   
1002b486:	int3   
1002b487:	int3   
1002b488:	int3   
1002b489:	int3   
1002b48a:	int3   
1002b48b:	int3   
1002b48c:	int3   
1002b48d:	int3   
1002b48e:	int3   
1002b48f:	int3   
1002b490:	lea    eax,[ebp-0x10]
1002b493:	jmp    0x1000bd60
1002b498:	mov    edx,DWORD PTR [esp+0x8]
1002b49c:	lea    eax,[edx-0x34]
1002b49f:	mov    ecx,DWORD PTR [edx-0x38]
1002b4a2:	xor    ecx,eax
1002b4a4:	call   0x10015adb
1002b4a9:	mov    eax,0x10059a50
1002b4ae:	jmp    0x10015ba5
1002b4b3:	int3   
1002b4b4:	int3   
1002b4b5:	int3   
1002b4b6:	int3   
1002b4b7:	int3   
1002b4b8:	int3   
1002b4b9:	int3   
1002b4ba:	int3   
1002b4bb:	int3   
1002b4bc:	int3   
1002b4bd:	int3   
1002b4be:	int3   
1002b4bf:	int3   
1002b4c0:	lea    ecx,[ebp-0x94]
1002b4c6:	jmp    0x10002e90
1002b4cb:	mov    edx,DWORD PTR [esp+0x8]
1002b4cf:	lea    eax,[edx-0x8c]
1002b4d5:	mov    ecx,DWORD PTR [edx-0x90]
1002b4db:	xor    ecx,eax
1002b4dd:	call   0x10015adb
1002b4e2:	add    eax,0x4
1002b4e5:	mov    ecx,DWORD PTR [edx-0x4]
1002b4e8:	xor    ecx,eax
1002b4ea:	call   0x10015adb
1002b4ef:	mov    eax,0x10059a7c
1002b4f4:	jmp    0x10015ba5
1002b4f9:	int3   
1002b4fa:	int3   
1002b4fb:	int3   
1002b4fc:	int3   
1002b4fd:	int3   
1002b4fe:	int3   
1002b4ff:	int3   
1002b500:	lea    ecx,[ebp-0x10]
1002b503:	jmp    0x10002e90
1002b508:	mov    edx,DWORD PTR [esp+0x8]
1002b50c:	lea    eax,[edx-0xc]
1002b50f:	mov    ecx,DWORD PTR [edx-0x10]
1002b512:	xor    ecx,eax
1002b514:	call   0x10015adb
1002b519:	mov    eax,0x10059aa8
1002b51e:	jmp    0x10015ba5
1002b523:	int3   
1002b524:	int3   
1002b525:	int3   
1002b526:	int3   
1002b527:	int3   
1002b528:	int3   
1002b529:	int3   
1002b52a:	int3   
1002b52b:	int3   
1002b52c:	int3   
1002b52d:	int3   
1002b52e:	int3   
1002b52f:	int3   
1002b530:	lea    ecx,[ebp-0x7c]
1002b533:	jmp    0x10002e90
1002b538:	lea    ecx,[ebp-0xa4]
1002b53e:	jmp    0x10002b80
1002b543:	lea    ecx,[ebp-0xe8]
1002b549:	jmp    0x10002b80
1002b54e:	lea    ecx,[ebp-0x104]
1002b554:	jmp    0x10002b80
1002b559:	lea    ecx,[ebp-0x13c]
1002b55f:	jmp    0x10002b80
1002b564:	lea    ecx,[ebp-0x120]
1002b56a:	jmp    0x10002b80
1002b56f:	mov    edx,DWORD PTR [esp+0x8]
1002b573:	lea    eax,[edx+0xc]
1002b576:	mov    ecx,DWORD PTR [edx-0x144]
1002b57c:	xor    ecx,eax
1002b57e:	call   0x10015adb
1002b583:	mov    ecx,DWORD PTR [edx-0x4]
1002b586:	xor    ecx,eax
1002b588:	call   0x10015adb
1002b58d:	mov    eax,0x10059afc
1002b592:	jmp    0x10015ba5
1002b597:	int3   
1002b598:	int3   
1002b599:	int3   
1002b59a:	int3   
1002b59b:	int3   
1002b59c:	int3   
1002b59d:	int3   
1002b59e:	int3   
1002b59f:	int3   
1002b5a0:	lea    ecx,[ebp-0x3c]
1002b5a3:	jmp    0x10003320
1002b5a8:	mov    edx,DWORD PTR [esp+0x8]
1002b5ac:	lea    eax,[edx-0x3c]
1002b5af:	mov    ecx,DWORD PTR [edx-0x40]
1002b5b2:	xor    ecx,eax
1002b5b4:	call   0x10015adb
1002b5b9:	mov    eax,0x10059b28
1002b5be:	jmp    0x10015ba5
1002b5c3:	int3   
1002b5c4:	int3   
1002b5c5:	int3   
1002b5c6:	int3   
1002b5c7:	int3   
1002b5c8:	int3   
1002b5c9:	int3   
1002b5ca:	int3   
1002b5cb:	int3   
1002b5cc:	int3   
1002b5cd:	int3   
1002b5ce:	int3   
1002b5cf:	int3   
1002b5d0:	lea    ecx,[ebp-0x40]
1002b5d3:	jmp    0x1000c230
1002b5d8:	mov    edx,DWORD PTR [esp+0x8]
1002b5dc:	lea    eax,[edx-0x44]
1002b5df:	mov    ecx,DWORD PTR [edx-0x48]
1002b5e2:	xor    ecx,eax
1002b5e4:	call   0x10015adb
1002b5e9:	mov    eax,0x10059b54
1002b5ee:	jmp    0x10015ba5
1002b5f3:	int3   
1002b5f4:	int3   
1002b5f5:	int3   
1002b5f6:	int3   
1002b5f7:	int3   
1002b5f8:	int3   
1002b5f9:	int3   
1002b5fa:	int3   
1002b5fb:	int3   
1002b5fc:	int3   
1002b5fd:	int3   
1002b5fe:	int3   
1002b5ff:	int3   
1002b600:	lea    ecx,[ebp-0x29]
1002b603:	jmp    0x10006c80
1002b608:	push   0x100032a0
1002b60d:	push   0x4
1002b60f:	push   0x4
1002b611:	lea    eax,[ebp-0x1c]
1002b614:	push   eax
1002b615:	call   0x10017594
1002b61a:	ret    
1002b61b:	lea    ecx,[ebp-0x28]
1002b61e:	jmp    0x10002e90
1002b623:	mov    edx,DWORD PTR [esp+0x8]
1002b627:	lea    eax,[edx-0x30]
1002b62a:	mov    ecx,DWORD PTR [edx-0x34]
1002b62d:	xor    ecx,eax
1002b62f:	call   0x10015adb
1002b634:	mov    eax,0x10059b90
1002b639:	jmp    0x10015ba5
1002b63e:	int3   
1002b63f:	int3   
1002b640:	lea    ecx,[ebp-0x85c]
1002b646:	jmp    0x10002b80
1002b64b:	lea    eax,[ebp-0x870]
1002b651:	jmp    0x10007b40
1002b656:	lea    ecx,[ebp-0x87c]
1002b65c:	jmp    0x10002e90
1002b661:	mov    edx,DWORD PTR [esp+0x8]
1002b665:	lea    eax,[edx-0x87c]
1002b66b:	mov    ecx,DWORD PTR [edx-0x880]
1002b671:	xor    ecx,eax
1002b673:	call   0x10015adb
1002b678:	add    eax,0x8
1002b67b:	mov    ecx,DWORD PTR [edx-0x8]
1002b67e:	xor    ecx,eax
1002b680:	call   0x10015adb
1002b685:	mov    eax,0x10059bcc
1002b68a:	jmp    0x10015ba5
1002b68f:	int3   
1002b690:	lea    esi,[ebp-0x8b0]
1002b696:	jmp    0x100096d0
1002b69b:	lea    ecx,[ebp-0x8dc]
1002b6a1:	jmp    0x10002b80
1002b6a6:	mov    edx,DWORD PTR [esp+0x8]
1002b6aa:	lea    eax,[edx+0xc]
1002b6ad:	mov    ecx,DWORD PTR [edx-0x924]
1002b6b3:	xor    ecx,eax
1002b6b5:	call   0x10015adb
1002b6ba:	mov    ecx,DWORD PTR [edx-0xc]
1002b6bd:	xor    ecx,eax
1002b6bf:	call   0x10015adb
1002b6c4:	mov    eax,0x10059c34
1002b6c9:	jmp    0x10015ba5
1002b6ce:	int3   
1002b6cf:	int3   
1002b6d0:	lea    esi,[ebp-0x8ac]
1002b6d6:	jmp    0x100096d0
1002b6db:	lea    ecx,[ebp-0x8c8]
1002b6e1:	jmp    0x10002b80
1002b6e6:	mov    edx,DWORD PTR [esp+0x8]
1002b6ea:	lea    eax,[edx+0xc]
1002b6ed:	mov    ecx,DWORD PTR [edx-0x8cc]
1002b6f3:	xor    ecx,eax
1002b6f5:	call   0x10015adb
1002b6fa:	mov    ecx,DWORD PTR [edx-0x8]
1002b6fd:	xor    ecx,eax
1002b6ff:	call   0x10015adb
1002b704:	mov    eax,0x10059c9c
1002b709:	jmp    0x10015ba5
1002b70e:	int3   
1002b70f:	int3   
1002b710:	mov    eax,DWORD PTR [ebp-0x18]
1002b713:	and    eax,0x1
1002b716:	je     0x1002b728
1002b71c:	and    DWORD PTR [ebp-0x18],0xfffffffe
1002b720:	mov    ecx,DWORD PTR [ebp+0x4]
1002b723:	jmp    0x10002e90
1002b728:	ret    
1002b729:	lea    ecx,[ebp-0x14]
1002b72c:	jmp    0x10002e90
1002b731:	lea    ecx,[ebp-0x10]
1002b734:	jmp    0x10002e90
1002b739:	lea    ecx,[ebp-0x14]
1002b73c:	jmp    0x10002e90
1002b741:	mov    edx,DWORD PTR [esp+0x8]
1002b745:	lea    eax,[edx-0x14]
1002b748:	mov    ecx,DWORD PTR [edx-0x18]
1002b74b:	xor    ecx,eax
1002b74d:	call   0x10015adb
1002b752:	mov    eax,0x10059ce0
1002b757:	jmp    0x10015ba5
1002b75c:	int3   
1002b75d:	int3   
1002b75e:	int3   
1002b75f:	int3   
1002b760:	mov    eax,DWORD PTR [ebp-0x18]
1002b763:	and    eax,0x1
1002b766:	je     0x1002b778
1002b76c:	and    DWORD PTR [ebp-0x18],0xfffffffe
1002b770:	mov    ecx,DWORD PTR [ebp+0x4]
1002b773:	jmp    0x10002e90
1002b778:	ret    
1002b779:	lea    ecx,[ebp-0x14]
1002b77c:	jmp    0x10002e90
1002b781:	lea    ecx,[ebp-0x10]
1002b784:	jmp    0x10002e90
1002b789:	lea    ecx,[ebp-0x14]
1002b78c:	jmp    0x10002e90
1002b791:	mov    edx,DWORD PTR [esp+0x8]
1002b795:	lea    eax,[edx-0x14]
1002b798:	mov    ecx,DWORD PTR [edx-0x18]
1002b79b:	xor    ecx,eax
1002b79d:	call   0x10015adb
1002b7a2:	mov    eax,0x10059d24
1002b7a7:	jmp    0x10015ba5
1002b7ac:	int3   
1002b7ad:	int3   
1002b7ae:	int3   
1002b7af:	int3   
1002b7b0:	lea    ecx,[ebp-0x6c]
1002b7b3:	jmp    0x100032a0
1002b7b8:	lea    ecx,[ebp-0x68]
1002b7bb:	jmp    0x100032a0
1002b7c0:	mov    edx,DWORD PTR [esp+0x8]
1002b7c4:	lea    eax,[edx+0xc]
1002b7c7:	mov    ecx,DWORD PTR [edx-0x98]
1002b7cd:	xor    ecx,eax
1002b7cf:	call   0x10015adb
1002b7d4:	mov    eax,0x10059d58
1002b7d9:	jmp    0x10015ba5
1002b7de:	int3   
1002b7df:	int3   
1002b7e0:	push   edi
1002b7e1:	mov    edi,0x10066f3c
1002b7e6:	call   0x100017f0
1002b7eb:	pop    edi
1002b7ec:	ret    
1002b7ed:	int3   
1002b7ee:	int3   
1002b7ef:	int3   
1002b7f0:	push   0x0
1002b7f2:	push   0x0
1002b7f4:	push   0x1
1002b7f6:	push   0x0
1002b7f8:	call   DWORD PTR ds:0x1002c0cc
1002b7fe:	mov    ds:0x10066f40,eax
1002b803:	ret    
1002b804:	int3   
1002b805:	int3   
1002b806:	int3   
1002b807:	int3   
1002b808:	int3   
1002b809:	int3   
1002b80a:	int3   
1002b80b:	int3   
1002b80c:	int3   
1002b80d:	int3   
1002b80e:	int3   
1002b80f:	int3   
1002b810:	push   0x100570b0
1002b815:	push   0xf
1002b817:	push   0x100570e8
1002b81c:	call   0x10003540
1002b821:	add    esp,0xc
1002b824:	mov    ds:0x10066f44,eax
1002b829:	ret    
1002b82a:	int3   
1002b82b:	int3   
1002b82c:	int3   
1002b82d:	int3   
1002b82e:	int3   
1002b82f:	int3   
1002b830:	push   edi
1002b831:	mov    edi,0x10066f48
1002b836:	call   0x100017f0
1002b83b:	pop    edi
1002b83c:	ret    
1002b83d:	int3   
1002b83e:	int3   
1002b83f:	int3   
1002b840:	push   ebp
1002b841:	mov    ebp,esp
1002b843:	push   0x1002c660
1002b848:	push   0x10
1002b84a:	push   0x1002c698
1002b84f:	call   0x10003340
1002b854:	add    esp,0xc
1002b857:	mov    ds:0x10065dc8,eax
1002b85c:	pop    ebp
1002b85d:	ret    
1002b85e:	int3   
1002b85f:	int3   
1002b860:	push   ebp
1002b861:	mov    ebp,esp
1002b863:	push   0x1002c6ac
1002b868:	push   0x10
1002b86a:	push   0x1002c6d0
1002b86f:	call   0x10003340
1002b874:	add    esp,0xc
1002b877:	mov    ds:0x10065dc4,eax
1002b87c:	pop    ebp
1002b87d:	ret    
1002b87e:	int3   
1002b87f:	int3   
1002b880:	push   ebp
1002b881:	mov    ebp,esp
1002b883:	push   0x1002c6e4
1002b888:	push   0x10
1002b88a:	push   0x1002c718
1002b88f:	call   0x10003340
1002b894:	add    esp,0xc
1002b897:	mov    ds:0x10065dc0,eax
1002b89c:	pop    ebp
1002b89d:	ret    
1002b89e:	int3   
1002b89f:	int3   
1002b8a0:	push   ebp
1002b8a1:	mov    ebp,esp
1002b8a3:	mov    ecx,0x10065dd4
1002b8a8:	call   0x1000e340
1002b8ad:	push   0x1002bb80
1002b8b2:	call   0x10016007
1002b8b7:	add    esp,0x4
1002b8ba:	pop    ebp
1002b8bb:	ret    
1002b8bc:	int3   
1002b8bd:	int3   
1002b8be:	int3   
1002b8bf:	int3   
1002b8c0:	push   ebp
1002b8c1:	mov    ebp,esp
1002b8c3:	push   0x0
1002b8c5:	push   0x0
1002b8c7:	push   0x0
1002b8c9:	call   DWORD PTR ds:0x1002c0c8
1002b8cf:	mov    ds:0x10065e3c,eax
1002b8d4:	pop    ebp
1002b8d5:	ret    
1002b8d6:	int3   
1002b8d7:	int3   
1002b8d8:	int3   
1002b8d9:	int3   
1002b8da:	int3   
1002b8db:	int3   
1002b8dc:	int3   
1002b8dd:	int3   
1002b8de:	int3   
1002b8df:	int3   
1002b8e0:	push   ebp
1002b8e1:	mov    ebp,esp
1002b8e3:	push   0x0
1002b8e5:	mov    ecx,0x10065e08
1002b8ea:	call   0x10003290
1002b8ef:	push   0x1002bb90
1002b8f4:	call   0x10016007
1002b8f9:	add    esp,0x4
1002b8fc:	pop    ebp
1002b8fd:	ret    
1002b8fe:	int3   
1002b8ff:	int3   
1002b900:	push   ebp
1002b901:	mov    ebp,esp
1002b903:	mov    ecx,0x10065dec
1002b908:	call   0x10002b20
1002b90d:	push   0x1002bba0
1002b912:	call   0x10016007
1002b917:	add    esp,0x4
1002b91a:	pop    ebp
1002b91b:	ret    
1002b91c:	int3   
1002b91d:	int3   
1002b91e:	int3   
1002b91f:	int3   
1002b920:	push   ebp
1002b921:	mov    ebp,esp
1002b923:	mov    ecx,0x10065e1c
1002b928:	call   0x10002b20
1002b92d:	push   0x1002bbb0
1002b932:	call   0x10016007
1002b937:	add    esp,0x4
1002b93a:	pop    ebp
1002b93b:	ret    
1002b93c:	int3   
1002b93d:	int3   
1002b93e:	int3   
1002b93f:	int3   
1002b940:	push   ebp
1002b941:	mov    ebp,esp
1002b943:	push   0x0
1002b945:	push   0x0
1002b947:	push   0x0
1002b949:	push   0x0
1002b94b:	call   DWORD PTR ds:0x1002c0cc
1002b951:	mov    ds:0x10065e38,eax
1002b956:	pop    ebp
1002b957:	ret    
1002b958:	int3   
1002b959:	int3   
1002b95a:	int3   
1002b95b:	int3   
1002b95c:	int3   
1002b95d:	int3   
1002b95e:	int3   
1002b95f:	int3   
1002b960:	push   ebp
1002b961:	mov    ebp,esp
1002b963:	mov    eax,ds:0x1005b060
1002b968:	mov    ds:0x10065e10,eax
1002b96d:	mov    ecx,DWORD PTR ds:0x1005b064
1002b973:	mov    DWORD PTR ds:0x10065e14,ecx
1002b979:	pop    ebp
1002b97a:	ret    
1002b97b:	int3   
1002b97c:	int3   
1002b97d:	int3   
1002b97e:	int3   
1002b97f:	int3   
1002b980:	push   ebp
1002b981:	mov    ebp,esp
1002b983:	push   0x0
1002b985:	mov    ecx,0x10065e18
1002b98a:	call   0x1000f950
1002b98f:	push   0x1002bbc0
1002b994:	call   0x10016007
1002b999:	add    esp,0x4
1002b99c:	pop    ebp
1002b99d:	ret    
1002b99e:	int3   
1002b99f:	int3   
1002b9a0:	push   ebp
1002b9a1:	mov    ebp,esp
1002b9a3:	push   0x0
1002b9a5:	mov    ecx,0x10065e0c
1002b9aa:	call   0x1000f950
1002b9af:	push   0x1002bbd0
1002b9b4:	call   0x10016007
1002b9b9:	add    esp,0x4
1002b9bc:	pop    ebp
1002b9bd:	ret    
1002b9be:	int3   
1002b9bf:	int3   
1002b9c0:	push   ebp
1002b9c1:	mov    ebp,esp
1002b9c3:	push   0x0
1002b9c5:	push   0x0
1002b9c7:	push   0x0
1002b9c9:	call   DWORD PTR ds:0x1002c0c8
1002b9cf:	mov    ds:0x10065f44,eax
1002b9d4:	pop    ebp
1002b9d5:	ret    
1002b9d6:	int3   
1002b9d7:	int3   
1002b9d8:	int3   
1002b9d9:	int3   
1002b9da:	int3   
1002b9db:	int3   
1002b9dc:	int3   
1002b9dd:	int3   
1002b9de:	int3   
1002b9df:	int3   
1002b9e0:	push   ebp
1002b9e1:	mov    ebp,esp
1002b9e3:	mov    ecx,0x10065f40
1002b9e8:	call   0x1000fb00
1002b9ed:	pop    ebp
1002b9ee:	ret    
1002b9ef:	int3   
1002b9f0:	push   ebp
1002b9f1:	mov    ebp,esp
1002b9f3:	push   0x0
1002b9f5:	push   0x0
1002b9f7:	push   0x0
1002b9f9:	call   DWORD PTR ds:0x1002c0c8
1002b9ff:	mov    ds:0x10065f48,eax
1002ba04:	pop    ebp
1002ba05:	ret    
1002ba06:	int3   
1002ba07:	int3   
1002ba08:	int3   
1002ba09:	int3   
1002ba0a:	int3   
1002ba0b:	int3   
1002ba0c:	int3   
1002ba0d:	int3   
1002ba0e:	int3   
1002ba0f:	int3   
1002ba10:	push   ebp
1002ba11:	mov    ebp,esp
1002ba13:	mov    ecx,0x10065f4c
1002ba18:	call   0x10011790
1002ba1d:	push   0x1002bbe0
1002ba22:	call   0x10016007
1002ba27:	add    esp,0x4
1002ba2a:	pop    ebp
1002ba2b:	ret    
1002ba2c:	call   DWORD PTR ds:0x1002c1d8
1002ba32:	push   0x1002bbef
1002ba37:	mov    DWORD PTR ds:0x10066114,0x100503e8
1002ba41:	mov    ds:0x10066118,eax
1002ba46:	mov    BYTE PTR ds:0x1006611c,0x0
1002ba4d:	call   0x10016007
1002ba52:	pop    ecx
1002ba53:	ret    
1002ba54:	push   0x10066114
1002ba59:	mov    ecx,0x10066120
1002ba5e:	call   0x10015527
1002ba63:	push   0x1002bbf9
1002ba68:	call   0x10016007
1002ba6d:	pop    ecx
1002ba6e:	ret    
1002ba6f:	mov    ecx,0x1006613c
1002ba74:	call   0x100158b0
1002ba79:	push   0x1002bc04
1002ba7e:	call   0x10016007
1002ba83:	pop    ecx
1002ba84:	ret    
1002ba85:	mov    ecx,0x10066178
1002ba8a:	call   0x1001588a
1002ba8f:	push   0x1002bc0e
1002ba94:	call   0x10016007
1002ba99:	pop    ecx
1002ba9a:	ret    
1002ba9b:	push   0x1002bc18
1002baa0:	call   0x10016007
1002baa5:	pop    ecx
1002baa6:	ret    
1002baa7:	mov    ecx,0x10066270
1002baac:	call   0x100159fa
1002bab1:	push   0x1002bc22
1002bab6:	call   0x10016007
1002babb:	pop    ecx
1002babc:	ret    
1002babd:	mov    ecx,0x100662bc
1002bac2:	call   0x100159fa
1002bac7:	push   0x1002bc2c
1002bacc:	call   0x10016007
1002bad1:	pop    ecx
1002bad2:	ret    
1002bad3:	push   0x1002bc36
1002bad8:	call   0x10016007
1002badd:	pop    ecx
1002bade:	ret    
1002badf:	int3   
1002bae0:	push   ebp
1002bae1:	mov    ebp,esp
1002bae3:	and    esp,0xfffffff8
1002bae6:	mov    eax,ds:0x10066dac
1002baeb:	mov    edx,DWORD PTR [eax]
1002baed:	sub    esp,0xc
1002baf0:	push   esi
1002baf1:	push   eax
1002baf2:	mov    ecx,0x10066da8
1002baf7:	push   ecx
1002baf8:	push   edx
1002baf9:	mov    esi,ecx
1002bafb:	push   esi
1002bafc:	lea    eax,[esp+0x18]
1002bb00:	push   eax
1002bb01:	call   0x10005ee0
1002bb06:	mov    ecx,DWORD PTR ds:0x10066dac
1002bb0c:	push   ecx
1002bb0d:	call   0x10015ad6
1002bb12:	add    esp,0x4
1002bb15:	xor    eax,eax
1002bb17:	mov    ds:0x10066dac,eax
1002bb1c:	mov    ds:0x10066db0,eax
1002bb21:	pop    esi
1002bb22:	mov    esp,ebp
1002bb24:	pop    ebp
1002bb25:	ret    
1002bb26:	int3   
1002bb27:	int3   
1002bb28:	int3   
1002bb29:	int3   
1002bb2a:	int3   
1002bb2b:	int3   
1002bb2c:	int3   
1002bb2d:	int3   
1002bb2e:	int3   
1002bb2f:	int3   
1002bb30:	push   ebp
1002bb31:	mov    ebp,esp
1002bb33:	and    esp,0xfffffff8
1002bb36:	mov    eax,ds:0x10066dbc
1002bb3b:	mov    edx,DWORD PTR [eax]
1002bb3d:	sub    esp,0xc
1002bb40:	push   esi
1002bb41:	push   eax
1002bb42:	mov    ecx,0x10066db8
1002bb47:	push   ecx
1002bb48:	push   edx
1002bb49:	mov    esi,ecx
1002bb4b:	push   esi
1002bb4c:	lea    eax,[esp+0x18]
1002bb50:	push   eax
1002bb51:	call   0x10005b30
1002bb56:	mov    ecx,DWORD PTR ds:0x10066dbc
1002bb5c:	push   ecx
1002bb5d:	call   0x10015ad6
1002bb62:	add    esp,0x4
1002bb65:	xor    eax,eax
1002bb67:	mov    ds:0x10066dbc,eax
1002bb6c:	mov    ds:0x10066dc0,eax
1002bb71:	pop    esi
1002bb72:	mov    esp,ebp
1002bb74:	pop    ebp
1002bb75:	ret    
1002bb76:	int3   
1002bb77:	int3   
1002bb78:	int3   
1002bb79:	int3   
1002bb7a:	int3   
1002bb7b:	int3   
1002bb7c:	int3   
1002bb7d:	int3   
1002bb7e:	int3   
1002bb7f:	int3   
1002bb80:	push   ebp
1002bb81:	mov    ebp,esp
1002bb83:	mov    ecx,0x10065dd4
1002bb88:	call   0x1000e390
1002bb8d:	pop    ebp
1002bb8e:	ret    
1002bb8f:	int3   
1002bb90:	push   ebp
1002bb91:	mov    ebp,esp
1002bb93:	mov    ecx,0x10065e08
1002bb98:	call   0x100032a0
1002bb9d:	pop    ebp
1002bb9e:	ret    
1002bb9f:	int3   
1002bba0:	push   ebp
1002bba1:	mov    ebp,esp
1002bba3:	mov    ecx,0x10065dec
1002bba8:	call   0x10002b80
1002bbad:	pop    ebp
1002bbae:	ret    
1002bbaf:	int3   
1002bbb0:	push   ebp
1002bbb1:	mov    ebp,esp
1002bbb3:	mov    ecx,0x10065e1c
1002bbb8:	call   0x10002b80
1002bbbd:	pop    ebp
1002bbbe:	ret    
1002bbbf:	int3   
1002bbc0:	push   ebp
1002bbc1:	mov    ebp,esp
1002bbc3:	mov    ecx,0x10065e18
1002bbc8:	call   0x1000f970
1002bbcd:	pop    ebp
1002bbce:	ret    
1002bbcf:	int3   
1002bbd0:	push   ebp
1002bbd1:	mov    ebp,esp
1002bbd3:	mov    ecx,0x10065e0c
1002bbd8:	call   0x1000f970
1002bbdd:	pop    ebp
1002bbde:	ret    
1002bbdf:	int3   
1002bbe0:	push   ebp
1002bbe1:	mov    ebp,esp
1002bbe3:	mov    ecx,0x10065f4c
1002bbe8:	call   0x10011b20
1002bbed:	pop    ebp
1002bbee:	ret    
1002bbef:	mov    ecx,0x10066114
1002bbf4:	jmp    0x1001547b
1002bbf9:	mov    DWORD PTR ds:0x10066120,0x100503fc
1002bc03:	ret    
1002bc04:	mov    ecx,0x1006613c
1002bc09:	jmp    0x1001581e
1002bc0e:	mov    ecx,0x10066178
1002bc13:	jmp    0x1001595f
1002bc18:	mov    ecx,0x100661c4
1002bc1d:	jmp    0x10001590
1002bc22:	mov    ecx,0x10066270
1002bc27:	jmp    0x10015a29
1002bc2c:	mov    ecx,0x100662bc
1002bc31:	jmp    0x10015a29
1002bc36:	mov    ecx,0x100662bd
1002bc3b:	jmp    0x10015a85
1002bc40:	mov    DWORD PTR ds:0x100662c4,0x1002c4ec
1002bc4a:	mov    ecx,0x100662c4
1002bc4f:	jmp    0x1001632c
