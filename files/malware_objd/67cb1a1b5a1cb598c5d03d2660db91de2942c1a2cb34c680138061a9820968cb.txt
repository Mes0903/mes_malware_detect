
67cb1a1b5a1cb598c5d03d2660db91de2942c1a2cb34c680138061a9820968cb.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [esi],esi
  402e93:	mov    BYTE PTR [esi+eiz*2],dh
  402e96:	jl     0x402f14
  402e98:	jl     0x402f16
  402e9a:	loopne 0x402efb
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax-0x57],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	add    ecx,DWORD PTR [esi]
  402f43:	(bad)  
  402f44:	and    al,0xe3
  402f46:	inc    ebx
  402f47:	enter  0xef4e,0xcc
  402f4b:	jle    0x402f9a
  402f4d:	and    eax,0x50100a3b
  402f52:	mov    eax,0xe228768
  402f57:	dec    ebx
  402f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f59:	mov    ch,0xaa
  402f5b:	jecxz  0x402f00
  402f5d:	loopne 0x402f7b
  402f5f:	in     eax,0x81
  402f61:	imul   edi,DWORD PTR [esi+0x55f85858],0xffffff9f
  402f68:	sti    
  402f69:	jae    0x402fd1
  402f6b:	lods   eax,DWORD PTR ds:[esi]
  402f6c:	mov    edi,0xbffe0602
  402f71:	xor    eax,0x5db0af6a
  402f76:	popa   
  402f77:	mov    gs,WORD PTR [esi+0x6d33809c]
  402f7d:	or     al,0x43
  402f7f:	(bad)  
  402f80:	mov    ds:0x5d5a10d1,al
  402f85:	leave  
  402f86:	mov    esp,DWORD PTR [esi]
  402f88:	dec    edi
  402f89:	dec    eax
  402f8a:	adc    BYTE PTR [ecx-0x6a58efae],0xda
  402f91:	sub    BYTE PTR [edx],ah
  402f93:	jns    0x402f25
  402f95:	jl     0x402fc4
  402f97:	and    ecx,DWORD PTR [eax+esi*2+0x35481856]
  402f9e:	xchg   BYTE PTR [ecx+0x5f2e00a6],cl
  402fa4:	cmp    dh,ah
  402fa6:	jbe    0x402f85
  402fa8:	xchg   ecx,eax
  402fa9:	push   es
  402faa:	sub    bl,ah
  402fac:	jp     0x402f79
  402fae:	adc    eax,DWORD PTR [esi]
  402fb0:	cmp    BYTE PTR [esi+0x2acdc1c4],bl
  402fb6:	retf   0x4db9
  402fb9:	mov    edx,ds
  402fbb:	sbb    ebx,DWORD PTR [esi+0x6fb41a43]
  402fc1:	data16 jae 0x403041
  402fc4:	cwde   
  402fc5:	std    
  402fc6:	fld    DWORD PTR [edx+0x54dab52e]
  402fcc:	pop    esp
  402fcd:	ret    
  402fce:	clc    
  402fcf:	dec    ecx
  402fd0:	jb     0x402f8a
  402fd2:	xor    BYTE PTR [edi+ebx*2],ch
  402fd5:	push   ebp
  402fd6:	gs jge 0x402fef
  402fd9:	sub    ch,BYTE PTR [ebx+0x3b]
  402fdc:	ds mov edi,0xc8645a05
  402fe2:	aam    0xd4
  402fe4:	call   0xdd99:0xc85fa11e
  402feb:	test   DWORD PTR ss:[edi],edi
  402fee:	dec    ecx
  402fef:	popa   
  402ff0:	out    0x9,al
  402ff2:	add    al,0xe3
  402ff4:	pop    ebp
  402ff5:	mov    eax,ds:0x168eee72
  402ffa:	xor    al,0x63
  402ffc:	retf   
  402ffd:	dec    BYTE PTR [eax*4+0x3ffcbf5]
  403004:	xor    al,0xfb
  403006:	xchg   ebx,eax
  403007:	not    BYTE PTR [edx-0x3a]
  40300a:	(bad)  
  40300b:	cli    
  40300c:	xchg   ecx,eax
  40300d:	adc    esp,esp
  40300f:	imul   ebx,DWORD PTR [eax+eax*1+0x510cfd47],0x57505cf9
  40301a:	dec    esp
  40301b:	sti    
  40301c:	cmp    dl,al
  40301e:	cmp    eax,0x87a4f5a7
  403023:	sahf   
  403024:	aam    0xc9
  403026:	mov    eax,0x1893310a
  40302b:	leave  
  40302c:	sub    ebp,DWORD PTR [edi]
  40302e:	cmp    bh,BYTE PTR [ebp+0x42]
  403031:	aas    
  403032:	and    al,0x4d
  403034:	xchg   ax,ax
  403036:	popf   
  403037:	sbb    BYTE PTR gs:[edx-0x2b],dh
  40303b:	inc    eax
  40303c:	or     ebp,esp
  40303e:	mov    bh,0xbe
  403040:	sahf   
  403041:	(bad)
  403044:	das    
  403045:	loopne 0x40300e
  403047:	sahf   
  403048:	sti    
  403049:	sub    DWORD PTR [edx-0x7e],ecx
  40304c:	pop    eax
  40304d:	ja     0x4030a5
  40304f:	ror    BYTE PTR [ebp-0xb04a3a1],0x8f
  403056:	fsub   QWORD PTR ds:0x13635be3
  40305c:	mov    cl,0x68
  40305e:	(bad)  
  40305f:	rol    BYTE PTR [edi],0xd7
  403062:	mov    bh,0x9e
  403064:	pop    esp
  403065:	imul   esi,DWORD PTR [ebx+0x619bb661],0xc9220f70
  40306f:	sbb    al,0xb1
  403071:	pop    eax
  403072:	jo     0x402ff9
  403074:	imul   edx,esi,0x9006b0c3
  40307a:	cmc    
  40307b:	push   esp
  40307c:	push   es
  40307d:	sbb    DWORD PTR [esi],edx
  40307f:	sub    al,0x4a
  403081:	sub    DWORD PTR [ecx-0x3a],edx
  403084:	mov    ch,0xcb
  403086:	gs mov dl,0xc6
  403089:	sahf   
  40308a:	outs   dx,DWORD PTR ds:[esi]
  40308b:	xchg   edx,eax
  40308c:	adc    DWORD PTR [eax],0xed1c76fb
  403092:	xchg   DWORD PTR [ecx],edi
  403094:	mov    bh,0x5e
  403096:	test   al,0xb4
  403098:	xor    DWORD PTR [ecx],edx
  40309a:	jg     0x4030e0
  40309c:	pop    esi
  40309d:	sub    bl,ch
  40309f:	jns    0x4030f1
  4030a1:	jge    0x4030ee
  4030a3:	lahf   
  4030a4:	ror    DWORD PTR [esi-0x31],0xb
  4030a8:	xchg   esi,eax
  4030a9:	jmp    0x86d49816
  4030ae:	(bad)
  4030b1:	ret    0x78c4
  4030b4:	dec    edi
  4030b5:	je     0x40308f
  4030b7:	xor    DWORD PTR fs:[edx],edx
  4030ba:	inc    edi
  4030bb:	lods   al,BYTE PTR ds:[esi]
  4030bc:	sbb    dl,BYTE PTR [esi+0x67b55008]
  4030c2:	shl    BYTE PTR [eax+edi*2],0x53
  4030c6:	ror    DWORD PTR [ecx],1
  4030c8:	mov    esi,edi
  4030ca:	mov    esp,0x948b38b1
  4030cf:	loop   0x403051
  4030d1:	dec    ebp
  4030d2:	in     al,dx
  4030d3:	sbb    al,0x1f
  4030d5:	dec    eax
  4030d6:	jo     0x4030fd
  4030d8:	add    DWORD PTR [ecx-0x583c8b56],0x68
  4030df:	adc    bl,BYTE PTR [edx+edi*1-0x66]
  4030e3:	repz shr DWORD PTR [edi+0xf],1
  4030e7:	cmp    DWORD PTR [ebx],edx
  4030e9:	loope  0x40308e
  4030eb:	dec    ecx
  4030ec:	jmp    0xc48ea74a
  4030f1:	fnstcw WORD PTR [ecx-0x25]
  4030f4:	mov    BYTE PTR [edi-0x44],cl
  4030f7:	mov    dl,0xb7
  4030f9:	mov    dh,0xc4
  4030fb:	xor    al,0x97
  4030fd:	out    dx,eax
  4030fe:	ret    0x116b
  403101:	mov    esp,0x7adb0c8e
  403106:	and    ebp,ebp
  403108:	adc    BYTE PTR [esi-0x71],al
  40310b:	fdivr  QWORD PTR [ebx]
  40310d:	pusha  
  40310e:	data16 rol dl,1
  403111:	cli    
  403112:	xchg   ecx,eax
  403113:	stos   DWORD PTR es:[edi],eax
  403114:	sbb    DWORD PTR [edi+0x767a5a13],ebp
  40311a:	sub    DWORD PTR [eax+0x62],0x42
  40311e:	push   ebp
  40311f:	jmp    0xa3c:0x1bc20ddc
  403126:	test   eax,0x768d214c
  40312b:	fstp   DWORD PTR [ebx+0x26891da4]
  403131:	mov    esi,0x13f6cbb6
  403136:	lods   eax,DWORD PTR ds:[esi]
  403137:	mov    dl,0x8
  403139:	rcr    BYTE PTR [ebp+0x3b213e21],1
  40313f:	scas   al,BYTE PTR es:[edi]
  403140:	sub    ebp,ecx
  403142:	cmp    eax,0x9474c0cb
  403147:	cmp    eax,0x363084f3
  40314c:	cmc    
  40314d:	pop    ebp
  40314e:	pop    esi
  40314f:	call   0x150b:0xca217c8f
  403156:	loope  0x40317f
  403158:	nop
  403159:	aas    
  40315a:	imul   esi,DWORD PTR [ebx+0x2ac1f9b6],0xe943f1c9
  403164:	nop
  403165:	iret   
  403166:	sar    bh,cl
  403168:	push   esi
  403169:	dec    ebx
  40316a:	pop    ebx
  40316b:	mov    ?,WORD PTR [ecx+0x6f]
  40316e:	jl     0x40311b
  403170:	(bad)  
  403171:	mov    bh,0x97
  403173:	sbb    al,0xdb
  403175:	test   BYTE PTR [edi-0x6b1c0596],bl
  40317b:	pop    edi
  40317c:	ror    DWORD PTR [ebp-0x2db5bf9a],1
  403182:	add    edx,eax
  403184:	out    dx,eax
  403185:	inc    edx
  403186:	(bad)  
  403188:	sub    DWORD PTR [edi],eax
  40318a:	test   eax,0xce8d2468
  40318f:	jmp    0x11ed:0xcc71078c
  403196:	sub    eax,0x47f221
  40319b:	repz cmp DWORD PTR [eax+0x3f3ca587],ecx
  4031a2:	inc    ecx
  4031a3:	lahf   
  4031a4:	scas   eax,DWORD PTR es:[edi]
  4031a5:	std    
  4031a6:	inc    esp
  4031a7:	arpl   di,sp
  4031a9:	sbb    al,0x2
  4031ab:	idiv   BYTE PTR [ecx+0x7b]
  4031ae:	cmp    al,0x9
  4031b0:	(bad)  
  4031b3:	push   0xffffffa4
  4031b5:	cmp    BYTE PTR [edx],0x72
  4031b8:	dec    esi
  4031b9:	retf   
  4031ba:	dec    edi
  4031bb:	push   esp
  4031bc:	rcl    BYTE PTR [edx+0x2357608e],1
  4031c2:	xor    edi,DWORD PTR [edx-0x41]
  4031c5:	mov    ch,0xce
  4031c7:	xor    DWORD PTR [ebx],ecx
  4031c9:	test   ebx,ecx
  4031cb:	mov    ds,WORD PTR [edx]
  4031cd:	push   ebx
  4031ce:	adc    BYTE PTR [esi-0x1b],bh
  4031d1:	adc    ebx,DWORD PTR [edx+0xa9a5f25]
  4031d7:	and    al,0x7e
  4031d9:	daa    
  4031da:	(bad)  
  4031db:	mov    eax,0x15d84a7c
  4031e0:	dec    edi
  4031e1:	dec    eax
  4031e2:	add    ch,0xda
  4031e5:	cld    
  4031e6:	xchg   edi,eax
  4031e7:	mov    eax,ds:0x9eec69f5
  4031ec:	popf   
  4031ed:	icebp  
  4031ee:	aam    0x34
  4031f0:	jo     0x4031aa
  4031f2:	js     0x4031b1
  4031f4:	enter  0xd657,0xcc
  4031f8:	dec    edi
  4031f9:	(bad)  
  4031fa:	jb     0x4031c3
  4031fc:	call   0xb09a:0xc74b8797
  403203:	(bad)  [ecx]
  403205:	xlat   BYTE PTR ds:[ebx]
  403206:	xchg   BYTE PTR ds:0x85647423,cl
  40320c:	jnp    0x403196
  40320e:	jns    0x40325f
  403210:	cmp    eax,ebp
  403212:	jns    0x4031b5
  403214:	outs   dx,DWORD PTR ds:[esi]
  403215:	outs   dx,BYTE PTR ds:[esi]
  403216:	add    DWORD PTR [edi],edx
  403218:	or     eax,eax
  40321a:	call   0xe066:0x174b3c02
  403221:	push   edi
  403222:	sbb    DWORD PTR [eax+0x3920ba0e],esi
  403228:	and    dl,BYTE PTR [edx+edx*2]
  40322b:	push   edx
  40322c:	xchg   DWORD PTR [edx+0x50408b0d],eax
  403232:	mov    edx,0x44473b17
  403237:	xchg   esp,eax
  403238:	out    dx,al
  403239:	mov    al,0xc2
  40323b:	(bad)  
  40323c:	lahf   
  40323d:	scas   al,BYTE PTR es:[edi]
  40323e:	movsx  ecx,WORD PTR [ebx-0x4b]
  403242:	jg     0x4031c8
  403244:	int    0x95
  403246:	xchg   ebx,eax
  403247:	jnp    0x403227
  403249:	mov    cl,0xd0
  40324b:	lea    ecx,[edx]
  40324d:	pusha  
  40324e:	enter  0x87ab,0x4d
  403252:	repz cmp eax,0x88475fa0
  403258:	xor    bh,bh
  40325a:	inc    BYTE PTR [eax-0x20058787]
  403260:	sti    
  403261:	cwde   
  403262:	cli    
  403263:	arpl   WORD PTR [ebp+0x5b1ddb6d],di
  403269:	mov    BYTE PTR [esi-0x42],0x77
  40326d:	ficom  DWORD PTR [esi-0x4e41c7ea]
  403273:	pop    es
  403274:	aaa    
  403275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403276:	adc    al,0xdd
  403278:	or     dl,BYTE PTR [ecx+ecx*1+0x7b886cd5]
  40327f:	loope  0x403233
  403281:	jmp    DWORD PTR [edi]
  403283:	dec    esi
  403284:	inc    BYTE PTR [edx]
  403286:	fwait
  403287:	push   edx
  403288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40328a:	stos   BYTE PTR es:[edi],al
  40328b:	mov    esi,0x1ab98537
  403290:	inc    esp
  403291:	test   DWORD PTR [esi],0x21850ff0
  403297:	sub    DWORD PTR [eax+0x77],ecx
  40329a:	in     eax,0x6
  40329c:	dec    ecx
  40329d:	das    
  40329e:	mov    eax,DWORD PTR [ebp+0x31]
  4032a1:	jecxz  0x4032af
  4032a3:	dec    ebp
  4032a4:	js     0x40326e
  4032a6:	mov    ch,0x1b
  4032a8:	lods   al,BYTE PTR ds:[esi]
  4032a9:	xor    al,0xf3
  4032ab:	jno    0x403248
  4032ad:	sbb    DWORD PTR [edx-0x7b28215c],eax
  4032b3:	add    eax,0x8210595d
  4032b8:	add    BYTE PTR [edi-0x1c0254f7],dh
  4032be:	jmp    0x4032ba
  4032c0:	cld    
  4032c1:	xchg   edx,eax
  4032c2:	adc    DWORD PTR [esi-0x5e0fd837],ecx
  4032c8:	and    eax,0x95503dcf
  4032cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ce:	enter  0xe2b5,0xa2
  4032d2:	pop    esp
  4032d3:	mov    WORD PTR [edi],fs
  4032d5:	out    0x42,eax
  4032d7:	test   BYTE PTR [ebx],al
  4032d9:	(bad)  
  4032da:	out    0x7c,eax
  4032dc:	add    eax,0xc6127397
  4032e1:	pop    edx
  4032e2:	push   edi
  4032e3:	or     cl,bl
  4032e5:	xchg   ecx,eax
  4032e6:	fimul  DWORD PTR [edi+0x3]
  4032e9:	into   
  4032ea:	in     eax,0xe
  4032ec:	mov    cl,0xc2
  4032ee:	mov    eax,ds:0x1491ff27
  4032f3:	mov    eax,ds:0x773d618
  4032f8:	rol    DWORD PTR [edx-0x5755d48f],0xe0
  4032ff:	push   es
  403300:	pop    es
  403301:	int    0xc1
  403303:	mov    ds:0xbe2903ec,al
  403308:	add    cl,BYTE PTR [edi]
  40330a:	add    cl,cl
  40330c:	cmp    DWORD PTR [ecx-0x22e90ba2],ebx
  403312:	mov    ecx,0xb09632df
  403317:	cwde   
  403318:	cld    
  403319:	loop   0x4032bb
  40331b:	imul   DWORD PTR [esi+0x2e]
  40331e:	(bad)  
  40331f:	(bad)  
  403320:	outs   dx,BYTE PTR ds:[esi]
  403321:	cwde   
  403322:	jne    0x403339
  403324:	call   0x861a:0x84c3d6
  40332b:	dec    eax
  40332c:	xor    eax,0x7bcb48d1
  403331:	mov    cl,0xa4
  403333:	mov    bl,0x2
  403335:	sahf   
  403336:	int3   
  403337:	cs pop edi
  403339:	inc    esi
  40333a:	sbb    eax,0x3e3f70dd
  40333f:	push   ecx
  403340:	or     DWORD PTR [edi+0x37c6d27c],esp
  403346:	cmp    DWORD PTR [esi+0x1d],0x4bdd17b0
  40334d:	aad    0x2e
  40334f:	xchg   BYTE PTR [ebx+edi*8],dh
  403352:	nop
  403353:	es jo  0x403329
  403356:	push   esp
  403357:	jb     0x40338f
  403359:	push   0xea2d5645
  40335e:	sar    dl,cl
  403360:	pop    es
  403361:	and    al,0xb7
  403363:	enter  0x7283,0xe8
  403367:	cmp    DWORD PTR [eax],esi
  403369:	xchg   ecx,eax
  40336a:	sub    DWORD PTR [ecx+0x34],ebp
  40336d:	lock fcomp st(0)
  403370:	or     ch,bh
  403372:	jmp    0xc71b1ab7
  403377:	mov    ds:0xbc1a3016,eax
  40337c:	or     ebx,DWORD PTR [ebp+0x41]
  40337f:	adc    ebp,DWORD PTR [esi]
  403381:	push   es
  403382:	(bad)  
  403384:	lods   eax,DWORD PTR ds:[esi]
  403385:	cmc    
  403386:	ret    0x3e72
  403389:	in     eax,dx
  40338a:	stos   DWORD PTR es:[edi],eax
  40338b:	add    BYTE PTR [ebp+ecx*2+0x4c],dh
  40338f:	sbb    BYTE PTR [ebp-0x47],al
  403392:	arpl   WORD PTR [ebp-0x4e3bb3a7],cx
  403398:	addr16 push ecx
  40339a:	fsubr  QWORD PTR [edi-0x54e87af8]
  4033a0:	aad    0xb
  4033a2:	retf   
  4033a3:	aad    0x47
  4033a5:	pusha  
  4033a6:	inc    ebp
  4033a7:	pop    edi
  4033a8:	pop    ebp
  4033a9:	(bad)  
  4033aa:	arpl   WORD PTR ds:0x665547f1,dx
  4033b0:	xor    DWORD PTR [edi+0x24],eax
  4033b3:	and    bl,BYTE PTR [edx+0x50]
  4033b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033b7:	idiv   BYTE PTR [esi+0x20]
  4033ba:	xchg   ebp,eax
  4033bb:	dec    ebx
  4033bc:	call   0xc02de0c4
  4033c1:	dec    ebp
  4033c2:	fs sbb edx,edi
  4033c5:	test   al,0xf0
  4033c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033c8:	(bad)  
  4033c9:	mov    esp,0x95046e42
  4033ce:	or     ebp,eax
  4033d0:	sbb    al,dh
  4033d2:	das    
  4033d3:	sbb    eax,DWORD PTR [esi-0x70]
  4033d6:	das    
  4033d7:	in     eax,0x42
  4033d9:	or     DWORD PTR [esi+0x52],edi
  4033dc:	mov    eax,0x7872ec65
  4033e1:	adc    ch,0xc2
  4033e4:	sbb    al,0x5f
  4033e6:	fsub   st(3),st
  4033e8:	push   edi
  4033e9:	iret   
  4033ea:	xchg   ecx,eax
  4033eb:	dec    ebx
  4033ec:	bound  esp,QWORD PTR [edx+0x32]
  4033ef:	adc    DWORD PTR [edi+0x6d641725],edx
  4033f5:	pop    ebp
  4033f6:	and    eax,0x664e82e
  4033fb:	in     eax,0xdd
  4033fd:	sub    esp,0x3a
  403400:	or     BYTE PTR [ebp-0x7e9d22fd],ch
  403406:	xchg   ecx,eax
  403407:	jns    0x403474
  403409:	shl    DWORD PTR [edi],1
  40340b:	mov    ds:0x9571c8f0,eax
  403410:	cmp    DWORD PTR [edi+0xf6c1cd1],ecx
  403416:	cmp    DWORD PTR [ebx+0x467ae71d],esp
  40341c:	imul   esi,DWORD PTR [ebx],0x3dbb504d
  403422:	data16 aaa 
  403424:	jne    0x4033b9
  403426:	and    DWORD PTR [ebp+0xea88d98],ebp
  40342c:	jns    0x403468
  40342e:	add    al,0x32
  403430:	ret    
  403431:	cmp    edi,DWORD PTR [ecx-0x42e1e135]
  403437:	xor    al,0x9e
  403439:	(bad)  
  40343a:	ins    BYTE PTR es:[edi],dx
  40343b:	cmp    eax,0xa45c57a7
  403440:	aam    0x95
  403442:	aaa    
  403443:	loope  0x4033d2
  403445:	add    edx,DWORD PTR [esi-0x15c2f184]
  40344b:	and    ch,bl
  40344d:	xchg   ecx,eax
  40344e:	loop   0x403402
  403450:	jo     0x4034aa
  403452:	mov    dl,0x31
  403454:	ds xor eax,0x11ef8e29
  40345a:	adc    al,0x84
  40345c:	push   ss
  40345d:	dec    ecx
  40345e:	loop   0x40342d
  403460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403461:	test   BYTE PTR [ecx],bh
  403463:	or     eax,0xa34508d2
  403468:	ficom  DWORD PTR [edx-0x4b1b4e99]
  40346e:	jle    0x40349c
  403470:	cmp    eax,0x6b0c5860
  403475:	pop    esp
  403476:	dec    eax
  403477:	push   ds
  403478:	jge    0x4034de
  40347a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40347b:	sub    edx,esp
  40347d:	outs   dx,BYTE PTR ds:[esi]
  40347e:	mov    eax,ds:0xf515fccf
  403483:	adc    DWORD PTR [ebx-0x66],esi
  403486:	push   esi
  403487:	pop    eax
  403488:	sbb    DWORD PTR [eax],0x51
  40348b:	or     eax,0xe9e39298
  403490:	jl     0x403511
  403492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403493:	and    BYTE PTR [eax],al
  403495:	mov    ds:0xdd622ae8,eax
  40349a:	(bad)  
  40349b:	xor    al,0x13
  40349d:	mov    bh,0x4c
  40349f:	es cmp ebp,ecx
  4034a2:	add    edi,DWORD PTR [edi+0x13]
  4034a5:	in     eax,0x14
  4034a7:	push   edi
  4034a8:	cmp    al,dl
  4034aa:	push   cs
  4034ab:	lods   eax,DWORD PTR ds:[esi]
  4034ac:	mov    es,WORD PTR [edx-0x21]
  4034af:	psllw  mm3,QWORD PTR [eax-0x70]
  4034b3:	jmp    0x3e5bf20
  4034b8:	ret    0x1088
  4034bb:	inc    edi
  4034bc:	aaa    
  4034bd:	dec    esp
  4034be:	mov    ds:0x1a647358,eax
  4034c3:	cld    
  4034c4:	iret   
  4034c5:	pop    es
  4034c6:	test   eax,0x6a0718af
  4034cb:	push   es
  4034cc:	test   DWORD PTR [edi-0x58],eax
  4034cf:	xchg   esp,eax
  4034d0:	add    DWORD PTR [ecx+0x6f],edi
  4034d3:	mov    edx,0x3f473341
  4034d8:	test   ebp,ebp
  4034da:	inc    eax
  4034db:	xor    bl,al
  4034dd:	cmp    DWORD PTR [ecx],eax
  4034df:	(bad)
  4034e3:	stc    
  4034e4:	nop
  4034e5:	outs   dx,BYTE PTR ds:[esi]
  4034e6:	mov    ah,BYTE PTR [ebx-0x37f33445]
  4034ec:	mov    ebx,0x171d3c81
  4034f1:	sbb    al,0x4c
  4034f3:	lods   al,BYTE PTR ds:[esi]
  4034f4:	push   cs
  4034f5:	sti    
  4034f6:	jge    0x40356c
  4034f8:	xor    eax,0x2b5df91c
  4034fd:	mov    ds:0x27a78abd,eax
  403502:	adc    al,0xc4
  403504:	out    0xd8,eax
  403506:	dec    esi
  403507:	add    edi,DWORD PTR ds:0xc0f2ec84
  40350d:	call   0x4e00a592
  403512:	inc    edx
  403513:	pop    ecx
  403514:	fisub  DWORD PTR [esi-0x2]
  403517:	push   esi
  403518:	sahf   
  403519:	mov    DWORD PTR [ebx+0x2d],esi
  40351c:	push   ecx
  40351d:	in     al,dx
  40351e:	push   esi
  40351f:	repnz mov dl,0x6d
  403522:	dec    edx
  403523:	mov    ds:0x7b4fd713,eax
  403528:	in     eax,0x7a
  40352a:	loope  0x40353c
  40352c:	iret   
  40352d:	nop
  40352e:	pop    ds
  40352f:	mov    ds:0x9ea31c,eax
  403534:	retf   0xd6ba
  403537:	ins    BYTE PTR es:[edi],dx
  403538:	xor    esi,DWORD PTR ds:0xe3a5c0dc
  40353e:	add    BYTE PTR [eax-0x3f9312ba],0xf5
  403545:	pop    ebp
  403546:	mov    edi,0xafe728cf
  40354b:	cmp    DWORD PTR [edi+0x0],esi
  40354e:	xchg   ecx,eax
  40354f:	loopne 0x403535
  403551:	mov    al,ds:0xb7c5236d
  403556:	xlat   BYTE PTR ds:[ebx]
  403557:	dec    esp
  403558:	clc    
  403559:	pop    esi
  40355a:	ja     0x403589
  40355c:	pop    esi
  40355d:	sbb    DWORD PTR [esp+ecx*4],0xffffff84
  403561:	jg     0x4035d1
  403563:	mov    edi,0x98e326be
  403568:	aam    0x2a
  40356a:	mov    dh,0x14
  40356c:	ins    BYTE PTR es:[edi],dx
  40356d:	aaa    
  40356e:	shl    DWORD PTR [ecx],cl
  403570:	add    DWORD PTR [ebp+0x40b652ad],esp
  403576:	adc    esp,edx
  403578:	ja     0x4035ad
  40357a:	stos   DWORD PTR es:[edi],eax
  40357b:	mov    edx,0xd8e4e9ff
  403580:	add    al,0xfa
  403582:	jo     0x40351a
  403584:	out    dx,eax
  403585:	mov    edx,0x72c25bc3
  40358a:	rcl    DWORD PTR [ebp+eax*1+0x65a8c29d],cl
  403591:	mov    eax,ds:0x748508a7
  403596:	clc    
  403597:	repnz jecxz 0x40360c
  40359a:	push   cs
  40359b:	dec    ebp
  40359c:	adc    ah,ch
  40359e:	mov    cl,0x49
  4035a0:	sub    DWORD PTR [edi],esi
  4035a2:	ins    BYTE PTR es:[edi],dx
  4035a3:	(bad)
  4035a6:	(bad)  
  4035a7:	sub    esp,esi
  4035a9:	mov    eax,0x619fa9f8
  4035ae:	rol    DWORD PTR [ebx-0x3f],1
  4035b1:	or     ebp,DWORD PTR [eax]
  4035b3:	cld    
  4035b4:	sbb    eax,0x706ac60b
  4035b9:	pop    ecx
  4035ba:	outs   dx,BYTE PTR ds:[esi]
  4035bb:	cmp    al,0x44
  4035bd:	mov    al,0x81
  4035bf:	pop    ds
  4035c0:	xor    ebp,ebx
  4035c2:	adc    edx,DWORD PTR [edx+0x15]
  4035c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035c6:	pop    ss
  4035c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035c8:	add    ecx,DWORD PTR [edi-0x3804d2f6]
  4035ce:	leave  
  4035cf:	push   ebx
  4035d0:	inc    esi
  4035d1:	jns    0x4035d2
  4035d3:	jmp    DWORD PTR [esi-0x51]
  4035d6:	call   0x6bfb:0x698aedfb
  4035dd:	aaa    
  4035de:	rol    BYTE PTR [edx+0x26d3e59b],cl
  4035e4:	test   BYTE PTR fs:0xf029dacc,cl
  4035eb:	adc    DWORD PTR [edi],0x27cdffed
  4035f1:	jp     0x4035fe
  4035f3:	inc    ecx
  4035f4:	inc    ebp
  4035f5:	push   cs
  4035f6:	je     0x4035f6
  4035f8:	and    al,0xb0
  4035fa:	jle    0x403607
  4035fc:	xor    eax,0xbe3ba3b2
  403601:	test   eax,0x1d044d5a
  403606:	xchg   ebp,eax
  403607:	addr16 pop edx
  403609:	jl     0x403674
  40360b:	sub    DWORD PTR [edx],ecx
  40360d:	gs clc 
  40360f:	jae    0x4035ec
  403611:	add    eax,0x9c06185
  403616:	push   ss
  403617:	xchg   ebx,eax
  403618:	enter  0xf774,0xe8
  40361c:	stos   DWORD PTR es:[edi],eax
  40361d:	loopne 0x403614
  40361f:	fs push ds
  403621:	mul    esp
  403623:	pop    ecx
  403624:	scas   al,BYTE PTR es:[edi]
  403625:	iret   
  403626:	cwde   
  403627:	dec    DWORD PTR [esi-0x68df4ce6]
  40362d:	pusha  
  40362e:	mul    BYTE PTR [edi+0x7b008bf3]
  403634:	shr    al,0x3b
  403637:	scas   eax,DWORD PTR es:[edi]
  403638:	repz mov ?,WORD PTR [edx-0x56]
  40363c:	aam    0x94
  40363e:	fidiv  WORD PTR [eax]
  403640:	sub    ah,BYTE PTR [edx]
  403642:	jb     0x4035d4
  403644:	jno    0x4035fd
  403646:	popa   
  403647:	das    
  403648:	scas   eax,DWORD PTR es:[edi]
  403649:	in     eax,dx
  40364a:	or     ecx,DWORD PTR [esi]
  40364c:	push   0xfa92450a
  403651:	pop    esi
  403652:	pop    esi
  403653:	pop    ss
  403654:	add    ecx,DWORD PTR [edx-0x60b09809]
  40365a:	inc    eax
  40365b:	or     al,0x1
  40365d:	ror    DWORD PTR [ecx+eiz*8+0x62],cl
  403661:	pop    es
  403662:	push   cs
  403663:	arpl   WORD PTR [ebp-0xf75f419],dx
  403669:	cmp    eax,0x306ba253
  40366e:	icebp  
  40366f:	pop    edi
  403670:	dec    esp
  403671:	jmp    0x4035f4
  403673:	pop    esi
  403674:	adc    al,0x6f
  403676:	add    eax,0x1beb6d64
  40367b:	mov    DWORD PTR ds:0xa3616c3f,esi
  403681:	rol    DWORD PTR [esi],1
  403683:	mov    eax,ds:0x6cacbc3c
  403688:	mov    ebx,0x47c0b827
  40368d:	mov    si,0x5f1
  403691:	dec    esi
  403692:	lods   al,BYTE PTR ds:[esi]
  403693:	fsubr  DWORD PTR ds:[esi-0x4290d2a9]
  40369a:	sbb    al,0xa2
  40369c:	sbb    eax,0x39153f0e
  4036a1:	bound  edi,QWORD PTR [edx+0x29]
  4036a4:	ins    DWORD PTR es:[edi],dx
  4036a5:	enter  0x54f9,0x56
  4036a9:	mov    eax,ds:0x3f129a5a
  4036ae:	ret    
  4036af:	sub    DWORD PTR [ebp+0x42cdf7b7],esp
  4036b5:	push   edi
  4036b6:	jmp    0x4918bf6e
  4036bb:	nop
  4036bc:	nop
  4036bd:	xchg   esi,eax
  4036be:	fstp   QWORD PTR [esi]
  4036c0:	adc    al,0xc
  4036c2:	and    DWORD PTR [edx-0x36861871],0xffffffa4
  4036c9:	stos   BYTE PTR es:[edi],al
  4036ca:	clc    
  4036cb:	sbb    eax,0xf34da832
  4036d0:	sbb    al,0x65
  4036d2:	and    al,0x6
  4036d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036d5:	or     DWORD PTR [ebx-0x30],0x626f6bc4
  4036dc:	cli    
  4036dd:	inc    ecx
  4036de:	sbb    al,0x11
  4036e0:	add    al,0xcb
  4036e2:	mov    eax,DWORD PTR [edi+eiz*2+0x3c]
  4036e6:	clc    
  4036e7:	stos   BYTE PTR es:[edi],al
  4036e8:	adc    dl,BYTE PTR [ebp-0x45e1d71]
  4036ee:	or     ebp,DWORD PTR [ebp-0x3e]
  4036f1:	cmp    eax,0xc900e7de
  4036f6:	hlt    
  4036f7:	mov    esi,0x3edbbc3
  4036fc:	xchg   edi,eax
  4036fd:	(bad)  
  4036fe:	or     ch,bl
  403700:	retf   0x5da1
  403703:	sti    
  403704:	js     0x4036e7
  403706:	pop    ecx
  403707:	clc    
  403708:	mov    ecx,0x3fb409c
  40370d:	xor    eax,0xee0063ff
  403712:	cmc    
  403713:	xlat   BYTE PTR ds:[ebx]
  403714:	sbb    edi,ebp
  403716:	cmc    
  403717:	pusha  
  403718:	adc    ebp,DWORD PTR [ecx+0x43]
  40371b:	and    BYTE PTR [edx+0x7e83c91c],ch
  403721:	mov    al,ds:0x98905468
  403726:	pop    edi
  403727:	(bad)  
  403729:	jp     0x4036f0
  40372b:	mov    eax,ds:0xc709e6cc
  403730:	and    ebp,esi
  403732:	and    bl,BYTE PTR [ebx+0x1e9e183e]
  403738:	mov    es,WORD PTR [ebx+0x21be4963]
  40373e:	ins    BYTE PTR es:[edi],dx
  40373f:	push   0x546828a1
  403744:	sbb    BYTE PTR [ebx-0x5b],cl
  403747:	sti    
  403748:	retf   
  403749:	mov    edx,0x31fdcb62
  40374e:	imul   ecx,DWORD PTR [edi+0x6c],0xffffffbb
  403752:	sub    BYTE PTR [edx+0x41238845],bl
  403758:	les    esi,FWORD PTR [ecx+esi*1-0x2ce38746]
  40375f:	fs pop ebx
  403761:	(bad)  
  403762:	jle    0x403740
  403764:	lods   eax,DWORD PTR ds:[esi]
  403765:	das    
  403766:	mov    eax,ds:0x1d18cf50
  40376b:	imul   edi,DWORD PTR [eax],0xfb5a1329
  403771:	(bad)  
  403772:	out    dx,al
  403773:	rol    bh,cl
  403775:	push   bp
  403777:	push   esi
  403778:	dec    edx
  403779:	(bad)  
  40377b:	sbb    eax,0x6a2926f8
  403780:	ins    BYTE PTR es:[edi],dx
  403781:	xor    ebx,DWORD PTR [esi+0x820e487]
  403787:	jge    0x40379f
  403789:	dec    ebx
  40378a:	pop    ebx
  40378b:	jne    0x40379d
  40378d:	mov    bh,0x92
  40378f:	(bad)
  403793:	push   ecx
  403794:	pop    ecx
  403795:	aad    0xef
  403797:	int3   
  403798:	popa   
  403799:	or     ebp,DWORD PTR [ebx+0x2]
  40379c:	int3   
  40379d:	push   cs
  40379e:	repz ret 
  4037a0:	push   DWORD PTR [eax]
  4037a2:	pushf  
  4037a3:	add    BYTE PTR [ebx],dl
  4037a5:	sub    dl,al
  4037a7:	push   edi
  4037a8:	sbb    eax,0x3a6c87b7
  4037ad:	idiv   BYTE PTR [edi]
  4037af:	cmp    ah,BYTE PTR [esi-0x72]
  4037b2:	cmp    edi,DWORD PTR [ebx]
  4037b4:	test   eax,0xbd97d308
  4037b9:	sbb    al,0x17
  4037bb:	rcr    bh,1
  4037bd:	fwait
  4037be:	cmc    
  4037bf:	and    ebp,DWORD PTR [esp+edx*8+0x73]
  4037c3:	stc    
  4037c4:	bound  ebx,QWORD PTR [edx+0x6f84f29a]
  4037ca:	or     al,0xdd
  4037cc:	addr16 inc ecx
  4037ce:	jp     0x4037d7
  4037d0:	ficomp DWORD PTR [ecx]
  4037d2:	scas   eax,DWORD PTR es:[edi]
  4037d3:	push   ebp
  4037d4:	popa   
  4037d5:	xor    al,0x35
  4037d7:	in     eax,dx
  4037d8:	fisttp DWORD PTR [edx]
  4037da:	les    edi,FWORD PTR [edx]
  4037dc:	outs   dx,DWORD PTR ds:[esi]
  4037dd:	stos   DWORD PTR es:[edi],eax
  4037de:	stos   DWORD PTR es:[edi],eax
  4037df:	div    DWORD PTR [edx-0x223c2d69]
  4037e5:	dec    ebx
  4037e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037e7:	popa   
  4037e8:	jnp    0x4037d0
  4037ea:	lahf   
  4037eb:	xchg   edx,eax
  4037ec:	stos   DWORD PTR es:[edi],eax
  4037ed:	iret   
  4037ee:	aaa    
  4037ef:	adc    ch,BYTE PTR [esi+ebp*8-0x3e9b6cdc]
  4037f6:	in     al,0x70
  4037f8:	dec    edx
  4037f9:	pop    es
  4037fa:	lock mov edi,0x6067df94
  403800:	in     al,0x46
  403802:	cmp    dh,BYTE PTR [eax]
  403804:	or     eax,ecx
  403806:	mov    ds:0xbd7074ba,al
  40380b:	leave  
  40380c:	sub    al,dh
  40380e:	in     eax,dx
  40380f:	es push ss
  403811:	mov    ebx,0x507db4f0
  403816:	and    BYTE PTR [ecx+ebp*8-0x20],ah
  40381a:	xchg   edx,eax
  40381b:	sub    dh,BYTE PTR [ebx+ecx*4]
  40381e:	pusha  
  40381f:	aas    
  403820:	retf   0x96cc
  403823:	push   ss
  403824:	jnp    0x40383e
  403826:	ja     0x403831
  403828:	fild   DWORD PTR [ebp+0x6b]
  40382b:	adc    al,0x9e
  40382d:	rol    bh,1
  40382f:	mul    BYTE PTR [esp+ebx*2]
  403832:	gs inc edx
  403834:	clc    
  403835:	dec    edx
  403836:	arpl   ax,ax
  403838:	xor    al,0x23
  40383a:	xchg   BYTE PTR [esi-0x410bad25],ch
  403840:	sbb    dl,0x45
  403843:	test   BYTE PTR [ebp+0x1b],bl
  403846:	xchg   ecx,eax
  403847:	sti    
  403848:	mov    dl,0x7
  40384a:	mov    edi,0x94d81da4
  40384f:	in     eax,0x28
  403851:	push   es
  403852:	imul   eax
  403854:	cmp    bh,BYTE PTR ds:0x7f67de00
  40385a:	mov    ecx,0x1a079e22
  40385f:	pushf  
  403860:	or     al,0xdf
  403862:	mov    cl,0x2d
  403864:	in     eax,dx
  403865:	jno    0x4038e1
  403867:	xor    al,0xd2
  403869:	out    0x47,eax
  40386b:	xor    dh,ah
  40386d:	adc    al,0xec
  40386f:	fwait
  403870:	clc    
  403871:	xchg   esi,eax
  403872:	dec    edi
  403873:	push   es
  403874:	sar    BYTE PTR [ebx],cl
  403876:	pop    esp
  403877:	mov    cs,WORD PTR [ecx+0x72]
  40387a:	dec    eax
  40387b:	xlat   BYTE PTR ds:[ebx]
  40387c:	push   0x71
  40387e:	pushw  0xffda
  403881:	add    eax,0x56993594
  403886:	gs ret 
  403888:	ss jnp 0x403906
  40388b:	call   0x78695a
  403890:	xchg   edi,eax
  403891:	sub    ecx,DWORD PTR [ebp-0x8083850]
  403897:	das    
  403898:	sahf   
  403899:	out    dx,al
  40389a:	rcr    ah,1
  40389c:	icebp  
  40389d:	inc    ebx
  40389e:	mov    ds:0xc3207cb,al
  4038a3:	mov    al,ds:0x4d44a026
  4038a8:	add    ch,bh
  4038aa:	ja     0x40388c
  4038ac:	xor    ebx,DWORD PTR [ecx+ebp*8-0x36]
  4038b0:	dec    eax
  4038b1:	out    0x4,al
  4038b3:	sub    al,0x9a
  4038b5:	jns    0x40391c
  4038b7:	pop    esi
  4038b8:	cmc    
  4038b9:	dec    ebp
  4038ba:	retf   
  4038bb:	mov    al,ds:0x50b49cbe
  4038c0:	xchg   BYTE PTR ds:0x84ce5fd,bh
  4038c6:	sub    ebp,edx
  4038c8:	sbb    BYTE PTR [esi],ch
  4038ca:	stos   DWORD PTR es:[edi],eax
  4038cb:	jnp    0x4038c6
  4038cd:	and    BYTE PTR [ecx+edx*8-0x13],ch
  4038d1:	push   esp
  4038d2:	ret    0x96fb
  4038d5:	add    eax,0x656b2c20
  4038da:	repz aam 0xc2
  4038dd:	dec    esp
  4038de:	sub    eax,DWORD PTR ds:0x8062519
  4038e4:	pop    ss
  4038e5:	mov    ch,0xe3
  4038e7:	es inc esp
  4038e9:	pop    ebx
  4038ea:	hlt    
  4038eb:	int    0x2
  4038ed:	es mov ecx,0x31d19bbe
  4038f3:	mov    DWORD PTR [ecx-0x6c],edx
  4038f6:	xchg   esp,eax
  4038f7:	jno    0x40393f
  4038f9:	and    BYTE PTR [ecx-0x40f6c093],cl
  4038ff:	stc    
  403900:	stos   DWORD PTR es:[edi],eax
  403901:	lahf   
  403902:	pop    ebx
  403903:	dec    ebp
  403904:	mov    ebx,0xc164ae67
  403909:	retf   
  40390a:	lock mov dl,0x56
  40390d:	(bad)  
  40390e:	xchg   ecx,eax
  40390f:	inc    esi
  403910:	ins    DWORD PTR es:[edi],dx
  403911:	jge    0x4038eb
  403913:	in     al,dx
  403914:	hlt    
  403915:	or     ebx,DWORD PTR [ebp+0x5e5005f9]
  40391b:	std    
  40391c:	cli    
  40391d:	out    dx,al
  40391e:	jmp    DWORD PTR [eax+0x2050aad]
  403924:	in     al,dx
  403925:	in     al,0x1d
  403927:	sbb    edx,DWORD PTR ds:0x9910d85b
  40392d:	mov    ds:0x909f4640,eax
  403932:	push   esi
  403933:	call   0xb72bbbb6
  403938:	arpl   WORD PTR [edi],bx
  40393a:	and    BYTE PTR [eax+ebp*8+0xc],al
  40393e:	mov    bh,0x97
  403940:	pop    ss
  403941:	xchg   ecx,eax
  403942:	push   ebx
  403943:	push   ds
  403944:	jmp    0x4038ec
  403946:	out    dx,al
  403947:	or     eax,0x6291edc8
  40394c:	cmp    bl,dl
  40394e:	and    al,0x47
  403950:	cli    
  403951:	and    cx,WORD PTR cs:[edx+0x57]
  403956:	imul   ecx,eax,0xffffffdb
  403959:	int    0xda
  40395b:	pop    eax
  40395c:	jb     0x40390e
  40395e:	ret    0x9f9b
  403961:	jp     0x40390c
  403963:	data16 cmp ah,BYTE PTR ds:0xe89cc699
  40396a:	test   BYTE PTR [ecx+0xc],al
  40396d:	sub    edx,esp
  40396f:	stos   BYTE PTR es:[edi],al
  403970:	pushf  
  403971:	add    eax,0xe31a2185
  403976:	loope  0x403971
  403978:	mov    ah,0xad
  40397a:	cmp    dl,0x39
  40397d:	in     al,dx
  40397e:	popa   
  40397f:	cmc    
  403980:	in     al,0x4e
  403982:	xchg   edi,eax
  403983:	retf   
  403984:	inc    esi
  403985:	(bad)  
  403986:	imul   edx,DWORD PTR es:[edi-0x34106463],0xac359dbf
  403991:	out    dx,eax
  403992:	std    
  403993:	gs or  al,0xd9
  403996:	sbb    BYTE PTR [edi+0x48],bl
  403999:	lods   eax,DWORD PTR ds:[esi]
  40399a:	xchg   esi,eax
  40399b:	jnp    0x40391e
  40399d:	xlat   BYTE PTR ds:[ebx]
  40399e:	in     al,0x44
  4039a0:	je     0x40393d
  4039a2:	scas   eax,DWORD PTR es:[edi]
  4039a3:	jle    0x403951
  4039a5:	sub    al,0x13
  4039a7:	stos   DWORD PTR es:[edi],eax
  4039a8:	cs jp  0x4039fc
  4039ab:	in     al,0x80
  4039ad:	and    eax,0x98881aa2
  4039b2:	xchg   esi,eax
  4039b3:	push   cs
  4039b4:	in     eax,0x1c
  4039b6:	push   0xb508f437
  4039bb:	out    0xe0,al
  4039bd:	jmp    esp
  4039bf:	mov    edi,edi
  4039c1:	push   edi
  4039c2:	push   ebp
  4039c3:	stos   BYTE PTR es:[edi],al
  4039c4:	sub    al,0xe1
  4039c6:	ds shr ecx,1
  4039c9:	setg   BYTE PTR [ecx]
  4039cc:	aad    0x8d
  4039ce:	stc    
  4039cf:	add    al,0x97
  4039d1:	sbb    DWORD PTR [esi],esi
  4039d3:	mov    bh,0xf1
  4039d5:	shl    DWORD PTR [ebp+0x3a13a40c],1
  4039db:	clc    
  4039dc:	ret    
  4039dd:	(bad)  
  4039de:	push   0x850d0efc
  4039e3:	ds jnp 0x4039b0
  4039e6:	pop    ecx
  4039e7:	cmp    eax,0x462e8203
  4039ec:	inc    eax
  4039ed:	xor    eax,0x964fce64
  4039f2:	dec    edx
  4039f3:	dec    eax
  4039f4:	mov    bl,0x9c
  4039f6:	pop    ecx
  4039f7:	adc    eax,0x82ff1b45
  4039fc:	stc    
  4039fd:	shr    ah,0x9c
  403a00:	inc    eax
  403a01:	test   al,0xbe
  403a03:	jb     0x403a27
  403a05:	mov    ds:0xe1d4dc72,al
  403a0a:	adc    dh,BYTE PTR [edx+0x10]
  403a0d:	sub    eax,0xbb1b5729
  403a12:	mov    edi,esi
  403a14:	(bad)  
  403a15:	je     0x403a44
  403a17:	icebp  
  403a18:	loop   0x403a92
  403a1a:	push   ds
  403a1b:	in     al,dx
  403a1c:	aas    
  403a1d:	add    edx,DWORD PTR [ebx-0x3d]
  403a20:	inc    edi
  403a21:	(bad)  
  403a22:	jge    0x4039f4
  403a24:	xchg   edi,eax
  403a25:	aam    0x5c
  403a27:	lea    esp,[esi-0x59c64c97]
  403a2d:	inc    ebx
  403a2e:	adc    eax,0xc5ddb284
  403a33:	js     0x4039c4
  403a35:	into   
  403a36:	ret    0x2f60
  403a39:	(bad)  
  403a3a:	push   ecx
  403a3b:	xlat   BYTE PTR ds:[ebx]
  403a3c:	cs adc al,cl
  403a3f:	push   cs
  403a40:	mov    edi,0x714ca6
  403a45:	lds    esi,FWORD PTR [ecx]
  403a47:	idiv   BYTE PTR [ecx-0xc2157c1]
  403a4d:	fcmovnbe st,st(1)
  403a4f:	sbb    al,0xa5
  403a51:	sub    eax,0x5237f510
  403a56:	and    bh,dh
  403a58:	mov    dl,0xc5
  403a5a:	test   DWORD PTR [eax-0x4f],eax
  403a5d:	adc    al,0x60
  403a5f:	push   ebx
  403a60:	pinsrw xmm3,WORD PTR [ebx+0x24],0x2c
  403a66:	inc    esp
  403a67:	mov    bl,0xf8
  403a69:	or     BYTE PTR [edx+0x6bcf08e8],0x7d
  403a70:	nop
  403a71:	clc    
  403a72:	mov    dl,0xea
  403a74:	ss dec edx
  403a76:	cmp    dh,BYTE PTR [edx+eiz*4]
  403a79:	push   edx
  403a7a:	out    0x8e,eax
  403a7c:	dec    esp
  403a7d:	jp     0x403a5f
  403a7f:	out    dx,al
  403a80:	out    0x23,al
  403a82:	pop    ss
  403a83:	push   ebx
  403a84:	addr16 addr16 test eax,0x9834a53e
  403a8b:	sub    eax,0xac3217c3
  403a90:	add    al,0x7d
  403a92:	addr16 and al,0x5e
  403a95:	js     0x403afe
  403a97:	(bad)  
  403a98:	or     al,0x50
  403a9a:	or     edx,0xffffffb2
  403a9d:	test   ebp,esp
  403a9f:	cs cld 
  403aa1:	pop    ds
  403aa2:	sub    ecx,DWORD PTR ds:0xa99436ce
  403aa8:	jp     0x403aa1
  403aaa:	add    eax,0x9dbe6064
  403aaf:	stc    
  403ab0:	jbe    0x403a89
  403ab2:	(bad)  
  403ab3:	into   
  403ab4:	enter  0xfbb2,0xd2
  403ab8:	add    al,0x4e
  403aba:	mov    al,ds:0x9d592d23
  403abf:	pop    ecx
  403ac0:	stos   BYTE PTR es:[edi],al
  403ac1:	fidiv  WORD PTR [ebp+0x55a2ae08]
  403ac7:	sub    al,ch
  403ac9:	icebp  
  403aca:	pop    es
  403acb:	and    al,0x61
  403acd:	jge    0x403b43
  403acf:	std    
  403ad0:	xchg   dh,cl
  403ad2:	lods   eax,DWORD PTR ds:[esi]
  403ad3:	unpckhps xmm4,XMMWORD PTR [esi-0x4f35b49b]
  403ada:	stc    
  403adb:	jle    0x403b1f
  403add:	push   ds
  403ade:	push   es
  403adf:	inc    eax
  403ae0:	dec    edx
  403ae1:	jae    0x403b56
  403ae3:	scas   al,BYTE PTR es:[di]
  403ae5:	iret   
  403ae6:	dec    ebx
  403ae7:	dec    esp
  403ae8:	jae    0x403af5
  403aea:	cld    
  403aeb:	popa   
  403aec:	test   eax,0xeb6b58cc
  403af1:	xor    eax,0xb26d75a9
  403af6:	in     eax,dx
  403af7:	mov    esp,0x8e4e009b
  403afc:	arpl   WORD PTR [edi],sp
  403afe:	ficomp WORD PTR [esi+0x497e4df7]
  403b04:	dec    esp
  403b05:	ror    BYTE PTR ds:0x27a33817,1
  403b0b:	mov    ?,WORD PTR [edi-0x6a]
  403b0e:	fdivr  DWORD PTR [esi-0x37]
  403b11:	addr16 mov dh,0xb1
  403b14:	into   
  403b15:	es xchg esp,eax
  403b17:	leave  
  403b18:	push   eax
  403b19:	inc    esi
  403b1a:	or     al,0x75
  403b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b1d:	mov    al,BYTE PTR [edx]
  403b1f:	sub    dh,dl
  403b21:	inc    esi
  403b22:	test   bh,dh
  403b24:	add    esp,DWORD PTR [eax-0xf]
  403b27:	shl    DWORD PTR [ebp-0x1d2c585b],1
  403b2d:	out    dx,al
  403b2e:	aad    0xed
  403b30:	pop    ss
  403b31:	lods   al,BYTE PTR ds:[esi]
  403b32:	aaa    
  403b33:	dec    ebx
  403b34:	in     eax,0xd5
  403b36:	out    dx,eax
  403b37:	lea    esp,[ecx]
  403b39:	mov    esp,eax
  403b3b:	leave  
  403b3c:	out    0xe,al
  403b3e:	outs   dx,BYTE PTR ds:[esi]
  403b3f:	xlat   BYTE PTR ds:[ebx]
  403b40:	in     eax,0xd5
  403b42:	xchg   edi,eax
  403b43:	test   edx,edi
  403b45:	sbb    ebx,DWORD PTR [esi+eax*8-0x2c]
  403b49:	push   edx
  403b4a:	inc    ecx
  403b4b:	(bad)  
  403b4c:	or     DWORD PTR [ebp-0x74],esp
  403b4f:	xchg   esi,eax
  403b50:	jo     0x403b69
  403b52:	mov    dl,0xe8
  403b54:	or     ah,BYTE PTR [ebx]
  403b56:	adc    eax,0x59c892b8
  403b5b:	clc    
  403b5c:	mov    ds:0x90ca67ff,al
  403b61:	xor    ecx,DWORD PTR [edi+edx*2-0x7d8f20cb]
  403b68:	cli    
  403b69:	pop    ss
  403b6a:	lods   al,BYTE PTR ds:[esi]
  403b6b:	jnp    0x403b29
  403b6d:	pushf  
  403b6e:	mov    ebx,0x2fc2a212
  403b73:	fidivr WORD PTR [eax+0x64]
  403b76:	nop
  403b77:	out    0x55,al
  403b79:	test   BYTE PTR [edx],dl
  403b7b:	int    0x2d
  403b7d:	fidivr WORD PTR [edi]
  403b7f:	aad    0x66
  403b81:	xchg   BYTE PTR [edi+0x7ad0ea3b],al
  403b87:	xchg   ecx,eax
  403b88:	shr    DWORD PTR [ebx+0x32],cl
  403b8b:	sub    al,0x13
  403b8d:	push   0xfffffff1
  403b8f:	xor    al,0xd7
  403b91:	lds    ebx,FWORD PTR [edi-0x16]
  403b94:	xchg   edx,eax
  403b95:	and    BYTE PTR [edi-0x24],ch
  403b98:	out    dx,al
  403b99:	fwait
  403b9a:	inc    edi
  403b9b:	cmp    ch,BYTE PTR [edi+0x5d]
  403b9e:	(bad)  
  403ba0:	jmp    0x403b5e
  403ba2:	arpl   WORD PTR [edi],si
  403ba4:	mov    eax,0x83ebd531
  403ba9:	(bad)  
  403bab:	dec    eax
  403bac:	inc    esi
  403bad:	xor    eax,0x30763666
  403bb2:	pop    esi
  403bb3:	push   ecx
  403bb4:	inc    edx
  403bb5:	retf   0x3c2e
  403bb8:	inc    ebp
  403bb9:	ror    BYTE PTR [ecx],cl
  403bbb:	mov    dl,0x33
  403bbd:	mov    ebx,0x457cd135
  403bc2:	(bad)  
  403bc3:	cmp    al,BYTE PTR [eax+0x288f3826]
  403bc9:	sub    ch,BYTE PTR [edx]
  403bcb:	stos   BYTE PTR es:[edi],al
  403bcc:	nop
  403bcd:	sti    
  403bce:	pop    ebp
  403bcf:	pusha  
  403bd0:	xchg   esi,eax
  403bd1:	je     0x403c3c
  403bd3:	out    dx,al
  403bd4:	jmp    0x8a6755dc
  403bd9:	(bad)  
  403bda:	pop    esp
  403bdb:	push   esi
  403bdd:	push   cs
  403bde:	dec    esp
  403bdf:	and    DWORD PTR [edx],eax
  403be1:	mov    ah,0xc2
  403be3:	mov    ebx,0x8da4788d
  403be8:	cmp    ebp,DWORD PTR [ebx-0x77aab3a4]
  403bee:	mov    al,ds:0xdfdf3658
  403bf3:	mov    ah,0x8c
  403bf5:	cmp    BYTE PTR [eiz*2-0x3f068db6],0x8e
  403bfd:	jecxz  0x403c1e
  403bff:	sub    edi,DWORD PTR [edi-0x24]
  403c02:	sub    eax,0xfe3956c3
  403c07:	dec    ecx
  403c08:	enter  0x99e4,0x67
  403c0c:	inc    esi
  403c0d:	and    DWORD PTR [ecx],esp
  403c0f:	std    
  403c10:	jp     0x403bc4
  403c12:	ins    BYTE PTR es:[edi],dx
  403c13:	dec    ecx
  403c14:	jbe    0x403c43
  403c16:	popa   
  403c17:	aas    
  403c18:	(bad)  
  403c19:	mov    dl,0xb4
  403c1b:	mov    ecx,0x3dbce996
  403c20:	sar    DWORD PTR [ebx-0x612a2058],1
  403c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c27:	shl    DWORD PTR gs:[edx],cl
  403c2a:	shl    DWORD PTR [edx],1
  403c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c2d:	lock imul edi,DWORD PTR [ebx-0x46],0xacaadbf1
  403c35:	aad    0xf4
  403c37:	adc    DWORD PTR [ebp-0x55],edx
  403c3a:	(bad)  
  403c3b:	xchg   ebp,eax
  403c3c:	(bad)  
  403c3d:	jnp    0x403c15
  403c3f:	pop    eax
  403c40:	ins    DWORD PTR es:[edi],dx
  403c41:	xchg   edx,eax
  403c42:	sbb    ecx,eax
  403c44:	cmp    al,0x56
  403c46:	and    ecx,edx
  403c48:	daa    
  403c49:	sbb    DWORD PTR [ebx-0x4b],esp
  403c4c:	push   esi
  403c4d:	jns    0x403bd7
  403c4f:	cmp    BYTE PTR [ebp+esi*2-0x2050dca4],al
  403c56:	mov    cl,0xb5
  403c58:	ja     0x403be4
  403c5a:	and    al,0xbd
  403c5c:	fst    DWORD PTR [esi]
  403c5e:	fadd   DWORD PTR [edi]
  403c60:	mov    cs,ebp
  403c62:	jo     0x403ca8
  403c64:	aas    
  403c65:	jle    0x403bf4
  403c67:	shl    bl,0xf8
  403c6a:	sub    DWORD PTR [eax-0x37ca9f32],eax
  403c70:	loopne 0x403c77
  403c72:	pusha  
  403c73:	(bad)  
  403c74:	xor    BYTE PTR ds:0x37300c32,dh
  403c7a:	lods   al,BYTE PTR ds:[esi]
  403c7b:	int    0xe5
  403c7d:	adc    ch,BYTE PTR [ebp+0x5a]
  403c80:	(bad)  [edx]
  403c82:	push   ebp
  403c83:	in     eax,dx
  403c84:	test   BYTE PTR [ecx+0x5],ah
  403c87:	xchg   ebp,eax
  403c88:	out    0x1f,eax
  403c8a:	sbb    DWORD PTR [ebp+0x31],edx
  403c8d:	cmp    eax,0x104b4012
  403c92:	fdivr  QWORD PTR [ebx-0x33]
  403c95:	add    al,0x7c
  403c97:	and    eax,0x4170f8b3
  403c9c:	xor    BYTE PTR [ebx+0x7cba002a],bh
  403ca2:	(bad)
  403ca5:	dec    ebp
  403ca6:	mov    ebp,0xfbff5a51
  403cab:	cmp    bh,ch
  403cad:	in     eax,dx
  403cae:	(bad)  
  403caf:	std    
  403cb0:	push   edx
  403cb1:	imul   ecx,ebx,0x45ae6582
  403cb7:	add    ch,cl
  403cb9:	imul   esi,DWORD PTR [edx+0x3f],0x645fbc20
  403cc0:	sub    bl,dl
  403cc2:	stos   BYTE PTR es:[edi],al
  403cc3:	mov    ah,0x33
  403cc5:	add    BYTE PTR [eax+0x7cc9df16],ch
  403ccb:	and    bl,BYTE PTR [ebp-0x616fb336]
  403cd1:	adc    ch,BYTE PTR [esi-0x67dd76c3]
  403cd7:	fwait
  403cd8:	add    BYTE PTR [ebx+edi*1],cl
  403cdb:	sahf   
  403cdc:	mov    cl,0x20
  403cde:	mov    ecx,0x5eb48759
  403ce3:	stc    
  403ce4:	cwde   
  403ce5:	pop    esi
  403ce6:	jns    0x403d42
  403ce8:	(bad)  
  403ce9:	(bad)  
  403cea:	out    dx,eax
  403ceb:	scas   al,BYTE PTR es:[edi]
  403cec:	cmp    al,0xf5
  403cee:	ins    BYTE PTR es:[edi],dx
  403cef:	mov    ch,0xc1
  403cf1:	sar    BYTE PTR [ebx],0xd0
  403cf4:	push   ebx
  403cf5:	pop    ecx
  403cf6:	and    bl,BYTE PTR [ecx+0x31]
  403cf9:	and    edx,DWORD PTR [edx-0x582ac745]
  403cff:	xor    esp,0xffffffa7
  403d02:	into   
  403d03:	add    bh,bh
  403d05:	int    0x8b
  403d07:	outs   dx,BYTE PTR ds:[esi]
  403d08:	stc    
  403d09:	test   BYTE PTR [ecx-0x4b356bcc],dl
  403d0f:	rcr    DWORD PTR [esi],0x64
  403d12:	aam    0xfa
  403d14:	dec    esp
  403d15:	jge    0x403d5d
  403d17:	rcl    DWORD PTR [edi+0x57e57357],1
  403d1d:	and    eax,0x9ef4d964
  403d22:	pop    ss
  403d23:	nop
  403d24:	out    dx,al
  403d25:	inc    edi
  403d26:	mov    ds:0x5e631884,eax
  403d2b:	fsubr  QWORD PTR [ecx+ecx*4-0x23]
  403d2f:	add    DWORD PTR [ebx+0x4d],esi
  403d32:	stos   BYTE PTR es:[edi],al
  403d33:	jno    0x403d3f
  403d35:	jnp    0x403d6a
  403d37:	jle    0x403ccd
  403d39:	dec    bx
  403d3b:	pop    es
  403d3c:	and    al,0xb3
  403d3e:	call   0x4dfbe048
  403d43:	sbb    ebx,DWORD PTR [eax+0x11]
  403d46:	mov    dh,0xd2
  403d48:	adc    BYTE PTR ds:[ebx-0x32],ch
  403d4c:	out    0x7b,eax
  403d4e:	mov    ?,WORD PTR [ecx+esi*4]
  403d51:	stc    
  403d52:	xor    dl,0x5b
  403d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d56:	or     eax,0xd9681b32
  403d5b:	nop
  403d5c:	fld    DWORD PTR [esi+ebp*1-0x48]
  403d60:	adc    ebx,edi
  403d62:	pop    eax
  403d63:	add    bl,BYTE PTR [edi-0x26]
  403d66:	dec    ecx
  403d67:	shl    DWORD PTR [eax+0x42abf716],cl
  403d6d:	jnp    0x403d13
  403d6f:	or     dh,0xd6
  403d72:	jne    0x403d0b
  403d74:	fucomi st,st(4)
  403d76:	push   ecx
  403d77:	xor    eax,0x9673c486
  403d7c:	aas    
  403d7d:	inc    ebp
  403d7e:	push   edx
  403d7f:	in     al,dx
  403d80:	loop   0x403d15
  403d82:	cmc    
  403d83:	fdivr  DWORD PTR [ebx+esi*8]
  403d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d87:	jg     0x403d77
  403d89:	sub    DWORD PTR [edi+0x69de4607],edi
  403d8f:	cmp    DWORD PTR [eax],ebp
  403d91:	shl    BYTE PTR [ecx+0x73e026c8],0xe4
  403d98:	xlat   BYTE PTR ds:[ebx]
  403d99:	pop    ss
  403d9a:	cmp    al,0xaa
  403d9c:	(bad)  
  403d9d:	clc    
  403d9e:	pop    esi
  403d9f:	(bad)  
  403da0:	cdq    
  403da1:	cmp    DWORD PTR [edi+0x20d22f66],eax
  403da7:	in     eax,0xa3
  403da9:	mov    ch,BYTE PTR [ebx]
  403dab:	inc    ebp
  403dac:	mov    BYTE PTR [esi],bh
  403dae:	lds    ecx,FWORD PTR [ebx]
  403db0:	jns    0x403daf
  403db2:	loop   0x403d85
  403db4:	daa    
  403db5:	call   0x2fc855c5
  403dba:	outs   dx,BYTE PTR ds:[esi]
  403dbb:	xchg   edi,eax
  403dbc:	lock scas eax,DWORD PTR es:[edi]
  403dbe:	sar    DWORD PTR ds:0x3b73f265,0xb7
  403dc5:	inc    ecx
  403dc6:	or     esp,DWORD PTR [ebx-0x22f4c559]
  403dcc:	es cwde 
  403dce:	push   edi
  403dcf:	sbb    ecx,ebx
  403dd1:	push   es
  403dd2:	xchg   esp,eax
  403dd3:	xlat   BYTE PTR ds:[ebx]
  403dd4:	pop    es
  403dd5:	lea    ebp,[ecx-0x420e37f8]
  403ddb:	add    DWORD PTR [edi],0xfed0846
  403de1:	add    esi,DWORD PTR [edx]
  403de3:	ds push cs
  403de5:	test   DWORD PTR [edi-0x4aec7aed],esi
  403deb:	int3   
  403dec:	das    
  403ded:	ins    BYTE PTR es:[edi],dx
  403dee:	nop
  403def:	sahf   
  403df0:	jbe    0x403e1f
  403df2:	xchg   esi,eax
  403df3:	jmp    0x403e11
  403df5:	add    eax,0xd21a1b
  403dfa:	cmp    al,0xae
  403dfc:	loop   0x403ddb
  403dfe:	jle    0x403e1c
  403e00:	outs   dx,BYTE PTR ds:[esi]
  403e01:	xor    eax,0x45c3214e
  403e06:	cli    
  403e07:	pusha  
  403e08:	push   es
  403e09:	adc    DWORD PTR [edx-0x5104bcd3],edi
  403e0f:	and    eax,0xf83a58d6
  403e14:	jbe    0x403dc3
  403e16:	sub    esi,eax
  403e18:	mov    cl,0xca
  403e1a:	dec    edi
  403e1b:	add    bl,BYTE PTR [esi-0x1f]
  403e1e:	(bad)  
  403e1f:	lock in al,dx
  403e21:	xor    al,0x46
  403e23:	inc    ebx
  403e24:	loop   0x403e12
  403e26:	pop    ebp
  403e27:	aaa    
  403e28:	sar    dh,1
  403e2a:	mov    esi,0x14ccdbb4
  403e2f:	push   ebp
  403e30:	cmp    al,0xce
  403e32:	ficomp DWORD PTR [ecx+0x44]
  403e35:	pop    es
  403e36:	not    BYTE PTR [esi]
  403e38:	cs cmp eax,esp
  403e3b:	pop    ds
  403e3c:	mov    edi,0x821edc4a
  403e41:	xchg   esi,eax
  403e42:	loopne 0x403e74
  403e44:	les    esi,FWORD PTR [esi+0x20a3307b]
  403e4a:	scas   al,BYTE PTR es:[edi]
  403e4b:	cmp    DWORD PTR [eax],ebx
  403e4d:	out    dx,eax
  403e4e:	push   eax
  403e4f:	sbb    cl,cl
  403e51:	jge    0x403e62
  403e53:	sub    bh,BYTE PTR [edx-0x52]
  403e56:	adc    DWORD PTR [eax+0x201718d0],esp
  403e5c:	sub    cl,dh
  403e5e:	fsubr  DWORD PTR [ecx+0x4be10786]
  403e64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e65:	fdiv   DWORD PTR [edx+0x1f]
  403e68:	ja     0x403ea5
  403e6a:	jg     0x403ec4
  403e6c:	mov    esi,0xa83dc68a
  403e71:	add    al,0xfa
  403e73:	pop    es
  403e74:	push   ds
  403e75:	test   al,0x53
  403e77:	push   es
  403e78:	jns    0x403ed8
  403e7a:	pusha  
  403e7b:	daa    
  403e7c:	sbb    BYTE PTR ds:[ebp+0x7f],al
  403e80:	fidivr DWORD PTR [ecx-0x7b]
  403e83:	inc    edi
  403e84:	cdq    
  403e85:	mov    bl,BYTE PTR [edi]
  403e87:	sbb    al,0xac
  403e89:	or     dl,dh
  403e8b:	test   al,0x64
  403e8d:	push   edx
  403e8e:	popa   
  403e8f:	xchg   esi,eax
  403e90:	xchg   BYTE PTR ds:0xeeb1aed2,cl
  403e96:	lea    ecx,[ebp+0x32]
  403e99:	mov    ebp,0x9eca986
  403e9e:	outs   dx,BYTE PTR ds:[esi]
  403e9f:	xchg   ecx,eax
  403ea0:	aaa    
  403ea1:	mov    ebp,0xb68ffa57
  403ea6:	inc    esp
  403ea7:	sbb    esi,DWORD PTR [ebx+0x41]
  403eaa:	add    eax,0xb8a7b5d7
  403eaf:	scas   al,BYTE PTR es:[edi]
  403eb0:	(bad)  
  403eb1:	es pop ds
  403eb3:	push   0x8698cb62
  403eb8:	xor    ebp,DWORD PTR [ecx]
  403eba:	mov    dl,0xba
  403ebc:	jb     0x403f15
  403ebe:	call   0x8685:0x91a4dcbc
  403ec5:	push   esi
  403ec6:	dec    ebx
  403ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ec8:	push   cs
  403ec9:	push   0x216f23c
  403ece:	test   eax,0x5a1ae220
  403ed3:	add    eax,0x1f5dc539
  403ed8:	xor    dh,BYTE PTR [edx+0x1d]
  403edb:	mov    ecx,0x5b1497cd
  403ee0:	add    ch,ah
  403ee2:	push   cs
  403ee3:	test   BYTE PTR [edi-0x28953ffe],bh
  403ee9:	push   ds
  403eea:	push   ds
  403eeb:	xlat   BYTE PTR ds:[ebx]
  403eec:	shl    DWORD PTR ds:0xdac95b17,1
  403ef2:	or     BYTE PTR ds:[edi-0x7cc17649],0xd4
  403efa:	or     ah,dh
  403efc:	int3   
  403efd:	add    eax,0x63ba648b
  403f02:	nop
  403f03:	stc    
  403f04:	popf   
  403f05:	sbb    esp,DWORD PTR [esi]
  403f07:	xchg   ebp,eax
  403f08:	aad    0xf2
  403f0a:	in     eax,0x25
  403f0c:	add    bh,BYTE PTR [edx]
  403f0e:	or     al,0x68
  403f10:	mov    DWORD PTR [edx+0x31],esp
  403f13:	xor    al,0xfb
  403f15:	scas   eax,DWORD PTR es:[edi]
  403f16:	adc    al,0x6d
  403f18:	loope  0x403f41
  403f1a:	inc    eax
  403f1b:	out    dx,eax
  403f1c:	les    ebp,FWORD PTR [edi+0x42e0df15]
  403f22:	mov    ebp,0xd088d8ce
  403f27:	inc    edx
  403f28:	and    edi,eax
  403f2a:	push   ss
  403f2b:	imul   ebx,DWORD PTR [ebx-0x5c],0x10
  403f2f:	and    ah,ch
  403f31:	int    0xc2
  403f33:	mov    edi,DWORD PTR [edx+0x65b222c0]
  403f39:	icebp  
  403f3a:	sti    
  403f3b:	dec    esp
  403f3c:	xor    bh,BYTE PTR [ebx]
  403f3e:	arpl   dx,dx
  403f40:	sub    eax,0xdb0bf75
  403f45:	popa   
  403f46:	cmc    
  403f47:	pop    ebx
  403f48:	or     DWORD PTR [eax+0x7d],edi
  403f4b:	mov    esi,DWORD PTR [edx-0x42]
  403f4e:	push   edi
  403f4f:	mov    ebp,0xbb31dff3
  403f54:	sbb    cl,bh
  403f56:	jno    0x403f57
  403f58:	imul   ch
  403f5a:	mov    cs,ecx
  403f5c:	xchg   ebx,eax
  403f5d:	inc    esi
  403f5e:	and    al,0x81
  403f60:	push   esi
  403f61:	jg     0x403eef
  403f63:	in     al,dx
  403f64:	pop    ebx
  403f65:	mov    esi,0xf9ae39a3
  403f6a:	ret    
  403f6b:	jmp    0xb0cd:0x1bef0f5
  403f72:	add    ch,BYTE PTR [ebx+edi*8]
  403f75:	mov    esi,0xfc67dcd0
  403f7a:	mov    edi,0x25b3ee5c
  403f7f:	jmp    0x91dc888a
  403f84:	pop    es
  403f85:	dec    eax
  403f86:	ret    
  403f87:	mov    ah,0x74
  403f89:	test   BYTE PTR [ebx],ch
  403f8b:	dec    ebx
  403f8c:	mov    gs,WORD PTR [edx+0x7b6db0da]
  403f92:	loopne 0x403f37
  403f94:	imul   edi,DWORD PTR [esp+ebx*8+0x26d9beb3],0xfc27ca05
  403f9f:	lods   al,BYTE PTR ds:[esi]
  403fa0:	or     bh,BYTE PTR [ebp+0x3d3a85a2]
  403fa6:	push   0x917ae074
  403fab:	and    bl,cl
  403fad:	xchg   DWORD PTR fs:[esi],esi
  403fb0:	and    BYTE PTR [ecx+0x2],bh
  403fb3:	ret    0x9c5e
  403fb6:	or     ebp,DWORD PTR [esi]
  403fb8:	loopne 0x404002
  403fba:	xor    eax,0xd446964f
  403fbf:	(bad)  
  403fc0:	jb     0x403f64
  403fc2:	outs   dx,DWORD PTR ds:[esi]
  403fc3:	(bad)  
  403fc4:	(bad)  
  403fc5:	push   esi
  403fc6:	mov    eax,ds:0xa2f9f42b
  403fcb:	test   BYTE PTR [esi+0x29a89e59],ah
  403fd1:	push   esp
  403fd2:	cmp    DWORD PTR [ebx],ecx
  403fd4:	push   ebp
  403fd5:	jne    0x403fc7
  403fd7:	and    esi,DWORD PTR [ecx]
  403fd9:	in     eax,dx
  403fda:	test   BYTE PTR [ebx],dh
  403fdc:	leave  
  403fdd:	cmp    DWORD PTR [eax],ebp
  403fdf:	and    DWORD PTR [esi-0x5c],0x47594229
  403fe6:	xlat   BYTE PTR ds:[ebx]
  403fe7:	rcl    DWORD PTR [edx+0x47263a77],0xbc
  403fee:	adc    BYTE PTR [eax],ch
  403ff0:	call   0x6d5b:0x9bed044d
  403ff7:	xor    al,0x47
  403ff9:	mov    al,ds:0x84be3610
  403ffe:	push   ebp
  403fff:	arpl   WORD PTR [edx+0xa],dx
  404002:	mov    al,dh
  404004:	cmp    eax,0x2675ece7
  404009:	push   ds
  40400a:	dec    esp
  40400b:	lock add al,0xc2
  40400e:	shl    BYTE PTR ss:[eax+edi*1],0x2b
  404013:	scas   al,BYTE PTR es:[edi]
  404014:	mov    ch,0x79
  404016:	in     eax,dx
  404017:	add    DWORD PTR [eax-0x14],edx
  40401a:	in     al,dx
  40401b:	inc    esi
  40401c:	dec    ecx
  40401d:	cdq    
  40401e:	into   
  40401f:	dec    esp
  404020:	scas   eax,DWORD PTR es:[edi]
  404021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404022:	add    al,0xa3
  404024:	(bad)  [ebp+0x4753edd5]
  40402a:	hlt    
  40402b:	(bad)  
  40402c:	cdq    
  40402d:	xchg   esi,eax
  40402e:	aad    0x83
  404030:	fwait
  404031:	jmp    0xefb4:0x8d5176f5
  404038:	loope  0x403ffb
  40403a:	jp     0x403fd6
  40403c:	mov    BYTE PTR [esi+0x6ccdffbf],cl
  404042:	maskmovq mm7,(bad)
  404043:	idiv   DWORD PTR [ebp+0x7068f30b]
  404049:	je     0x4040c4
  40404b:	loope  0x4040b1
  40404d:	outs   dx,DWORD PTR ds:[esi]
  40404e:	cmp    al,BYTE PTR [edi+0x3c]
  404051:	divps  xmm4,XMMWORD PTR [ebx-0x520d4729]
  404058:	push   cs
  404059:	jnp    0x404043
  40405b:	mov    eax,DWORD PTR [edi+0x418f8368]
  404061:	push   ss
  404062:	fcom   DWORD PTR [ebx]
  404064:	addr16 out dx,eax
  404066:	fistp  QWORD PTR [eax-0x7bdabecf]
  40406c:	jp     0x404084
  40406e:	mov    ecx,0xa478e069
  404073:	shl    BYTE PTR [ebp+0x55],0x84
  404077:	es scas al,BYTE PTR es:[edi]
  404079:	xor    eax,0x34940748
  40407e:	fisub  WORD PTR [esi]
  404080:	lahf   
  404081:	xchg   edx,eax
  404082:	fmulp  st(5),st
  404084:	lock mov eax,0xa78f0c1b
  40408a:	fiadd  DWORD PTR [ecx+0xf17b219]
  404090:	xor    al,0xc6
  404092:	popf   
  404093:	shr    eax,0x9
  404096:	adc    DWORD PTR [ebp+0x62d2d590],edx
  40409c:	fdiv   DWORD PTR [eax+0x41]
  40409f:	pop    esp
  4040a0:	push   ebx
  4040a1:	adc    DWORD PTR [ebx+0x60],esp
  4040a4:	pop    es
  4040a5:	ins    BYTE PTR es:[edi],dx
  4040a6:	inc    edi
  4040a7:	scas   al,BYTE PTR es:[edi]
  4040a8:	cmp    BYTE PTR [edi-0x3ebbe353],al
  4040ae:	add    eax,0xbaf929b2
  4040b3:	outs   dx,BYTE PTR ds:[esi]
  4040b4:	fisub  DWORD PTR [ebx]
  4040b6:	pop    esi
  4040b7:	sub    al,0xd
  4040b9:	stos   BYTE PTR es:[edi],al
  4040ba:	pop    ss
  4040bb:	cmp    ebp,DWORD PTR [esi+0x324fe2fc]
  4040c1:	lods   eax,DWORD PTR ds:[esi]
  4040c2:	out    0x96,eax
  4040c4:	or     al,0xf4
  4040c6:	sbb    eax,0x77f3aa35
  4040cb:	out    0x57,eax
  4040cd:	(bad)  
  4040ce:	std    
  4040cf:	in     al,dx
  4040d0:	daa    
  4040d1:	mov    esi,0xb24b4ad2
  4040d6:	std    
  4040d7:	std    
  4040d8:	out    dx,al
  4040d9:	addr16 repz fs ja 0x4040c5
  4040de:	lea    edi,ds:0xd302c5c4
  4040e4:	add    esp,DWORD PTR ds:0x1252f42f
  4040ea:	sbb    eax,0xfecd2907
  4040ef:	(bad)  
  4040f0:	xor    al,0x95
  4040f2:	mov    DWORD PTR [edi+0xd],esi
  4040f5:	mov    DWORD PTR [ebp-0x30],eax
  4040f8:	lahf   
  4040f9:	mov    bl,0x43
  4040fb:	xchg   ebp,eax
  4040fc:	mov    bh,0xef
  4040fe:	push   0x770365f5
  404103:	sbb    BYTE PTR [eax-0x9],cl
  404106:	and    cl,BYTE PTR [edx+0x2]
  404109:	adc    eax,0xeefc4e6b
  40410e:	adc    DWORD PTR [esp+ebx*8-0x6c8f34d1],esp
  404115:	cdq    
  404116:	jns    0x4040db
  404118:	iret   
  404119:	cmp    al,0x5e
  40411b:	xchg   esi,eax
  40411c:	cmp    dh,BYTE PTR [eax+0x5f]
  40411f:	int    0xcc
  404121:	ins    BYTE PTR es:[edi],dx
  404122:	adc    DWORD PTR [eax+0x47],eax
  404125:	push   edx
  404126:	mov    ebp,0xd7f52ac8
  40412b:	cmp    eax,0x9d117792
  404130:	sar    edx,1
  404132:	aam    0xb9
  404134:	and    al,0x66
  404136:	add    eax,0x962dd0b4
  40413b:	and    ebx,DWORD PTR [esi+0x20]
  40413e:	and    al,0xb6
  404140:	imul   esp,DWORD PTR [ebx],0x2677735f
  404146:	mov    eax,ds:0x1be97e42
  40414b:	jl     0x40415e
  40414d:	jmp    0x4041a9
  40414f:	stc    
  404150:	test   BYTE PTR [ecx+0x6d],ah
  404153:	xor    al,BYTE PTR [ebx-0x1de84a0e]
  404159:	in     al,0xe8
  40415b:	cld    
  40415c:	addr16 add eax,0x101a061f
  404162:	sbb    BYTE PTR [edi+0xb9957d0],bh
  404168:	jecxz  0x404188
  40416a:	ins    DWORD PTR es:[edi],dx
  40416b:	mov    dh,BYTE PTR [ebx]
  40416d:	pop    esp
  40416e:	or     DWORD PTR [ecx-0x71],0xffffffbc
  404172:	mov    ds:0xc32fc035,al
  404177:	lods   eax,DWORD PTR ds:[esi]
  404178:	or     edx,DWORD PTR [esi]
  40417a:	ret    0x8303
  40417d:	mov    dl,0x74
  40417f:	push   es
  404180:	sub    eax,0x93d710fc
  404185:	lock cld 
  404187:	js     0x404192
  404189:	(bad)  
  40418a:	in     al,0x46
  40418c:	rcl    ch,0x89
  40418f:	cld    
  404190:	xchg   BYTE PTR [ebx-0x257008b1],bl
  404196:	rcr    DWORD PTR [esi],0xbc
  404199:	loope  0x4041d5
  40419b:	leave  
  40419c:	lods   eax,DWORD PTR ds:[esi]
  40419d:	(bad)  
  40419e:	mov    esi,0x9bfd0082
  4041a3:	fist   DWORD PTR [ebx+0x2d11cf49]
  4041a9:	sbb    DWORD PTR [edi+0x4a],ebx
  4041ac:	icebp  
  4041ad:	xchg   ecx,eax
  4041ae:	cmp    edi,DWORD PTR [ebx]
  4041b0:	scas   al,BYTE PTR es:[edi]
  4041b1:	sar    BYTE PTR [esi],0x6
  4041b4:	or     ah,ch
  4041b6:	dec    ebp
  4041b7:	push   edx
  4041b8:	adc    ebp,DWORD PTR [ebx+0x5b6c5e88]
  4041be:	adc    esi,esi
  4041c0:	fistp  QWORD PTR [edi]
  4041c2:	in     al,0x7c
  4041c4:	cmc    
  4041c5:	shl    eax,1
  4041c7:	mov    bl,0x18
  4041c9:	cld    
  4041ca:	sti    
  4041cb:	rcl    BYTE PTR [edi],0x4a
  4041ce:	popa   
  4041cf:	neg    BYTE PTR [ecx+ebx*4+0x58]
  4041d3:	test   eax,0x3b11c30e
  4041d8:	popf   
  4041d9:	xchg   BYTE PTR ds:0xe6df807d,dh
  4041df:	push   ebp
  4041e0:	xchg   esp,eax
  4041e1:	(bad)  
  4041e2:	popa   
  4041e3:	sub    al,bl
  4041e5:	xor    al,0x82
  4041e7:	add    esi,ecx
  4041e9:	test   DWORD PTR [edi],ecx
  4041eb:	dec    ecx
  4041ec:	add    dl,al
  4041ee:	std    
  4041ef:	push   edx
  4041f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041f1:	add    BYTE PTR [ebp+eax*1-0x13],al
  4041f5:	bound  ecx,QWORD PTR [edi-0x48c37e2b]
  4041fb:	push   ebp
  4041fc:	test   DWORD PTR [ebx+eiz*1],ebp
  4041ff:	clc    
  404200:	or     al,0xa9
  404202:	addr16 loopne 0x40426d
  404205:	(bad)  
  404207:	jmp    0xf49e:0x6a5e72ed
  40420e:	cmp    BYTE PTR [eax+0x38],cl
  404211:	pusha  
  404212:	lods   eax,DWORD PTR ds:[esi]
  404213:	dec    esp
  404214:	sub    eax,0x9c0add8
  404219:	add    edi,DWORD PTR [ebx]
  40421b:	test   BYTE PTR [ebp+0x24],dl
  40421e:	sub    al,0xba
  404220:	jns    0x404250
  404222:	xchg   edi,eax
  404223:	or     BYTE PTR [esi-0x1110e3b3],ch
  404229:	fst    DWORD PTR [edi+0x57da4b53]
  40422f:	(bad)  
  404230:	outs   dx,DWORD PTR ds:[esi]
  404231:	cmp    BYTE PTR [ebx+0x37],0x73
  404235:	inc    edx
  404236:	aad    0x15
  404238:	jo     0x4041fa
  40423a:	inc    esp
  40423b:	stos   DWORD PTR es:[edi],eax
  40423c:	mov    dl,0x9b
  40423e:	mov    cl,0xe
  404240:	pop    ss
  404241:	dec    edx
  404242:	mov    ds:0x8a84829,al
  404247:	ins    DWORD PTR es:[edi],dx
  404248:	ror    ebp,1
  40424a:	mov    bl,0x4e
  40424c:	adc    eax,0x618fe173
  404251:	js     0x4041f2
  404253:	imul   edi,DWORD PTR [edx-0x7a2efca9],0x6a1ab41
  40425d:	lahf   
  40425e:	fnstcw WORD PTR [ebp+0x19]
  404261:	bt     eax,esp
  404264:	adc    cl,BYTE PTR [edx+edi*8]
  404267:	bound  ebx,QWORD PTR [edx]
  404269:	push   cs
  40426a:	rcr    esi,0x14
  40426d:	sbb    al,0x3b
  40426f:	or     al,0xc7
  404271:	in     al,dx
  404272:	scas   al,BYTE PTR es:[edi]
  404273:	sub    bl,BYTE PTR [edi]
  404275:	jo     0x4042e1
  404277:	inc    edi
  404278:	mov    bl,0x2c
  40427a:	mov    WORD PTR [eax-0x5e2636cc],?
  404280:	xor    ch,BYTE PTR [edx+0x54]
  404283:	rcl    BYTE PTR [edx-0x6a2c171f],0x9e
  40428a:	stos   BYTE PTR es:[edi],al
  40428b:	out    dx,al
  40428c:	pop    esp
  40428d:	xchg   esp,eax
  40428e:	out    0xc2,eax
  404290:	jnp    0x4042c9
  404292:	mov    edx,0x2d4e5acc
  404297:	push   eax
  404298:	repnz scas eax,DWORD PTR es:[edi]
  40429a:	cmp    bh,bh
  40429c:	mov    ?,WORD PTR [eax+0x45afa2ef]
  4042a2:	out    dx,al
  4042a3:	fsubr  DWORD PTR [ecx+esi*2]
  4042a6:	mov    eax,0x81146816
  4042ab:	lods   eax,DWORD PTR ds:[esi]
  4042ac:	add    al,0xeb
  4042ae:	dec    ebp
  4042af:	dec    eax
  4042b0:	add    BYTE PTR ds:0x24061409,0x4d
  4042b7:	call   0xd335d0ba
  4042bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042bd:	cdq    
  4042be:	test   al,0x60
  4042c0:	and    al,0x35
  4042c2:	add    al,0x7f
  4042c4:	pop    esi
  4042c5:	lods   al,BYTE PTR ds:[esi]
  4042c6:	mov    ch,0x92
  4042c8:	jb     0x40426c
  4042ca:	sbb    edx,edi
  4042cc:	loopne 0x40429d
  4042ce:	repnz stos DWORD PTR es:[edi],eax
  4042d0:	jmp    0x4042e5
  4042d2:	cmp    BYTE PTR [esp+ecx*8],0x3
  4042d6:	std    
  4042d7:	psrlw  mm1,QWORD PTR [edx+eax*1]
  4042db:	js     0x404302
  4042dd:	adc    BYTE PTR ds:0xffabe2f1,al
  4042e3:	dec    ebp
  4042e4:	mov    al,0x1c
  4042e6:	popa   
  4042e7:	cmp    bh,ah
  4042e9:	pushf  
  4042ea:	call   0x3a5bb106
  4042ef:	jbe    0x4042e8
  4042f1:	jecxz  0x40427b
  4042f3:	jns    0x404280
  4042f5:	imul   edi,edi,0xe7fe5359
  4042fb:	inc    ebx
  4042fc:	mov    DWORD PTR [ebp+0x5a],ebx
  4042ff:	mov    ebx,0x2f94d96e
  404304:	mov    edi,0x830cb2e4
  404309:	mov    ecx,DWORD PTR [edi]
  40430b:	in     eax,dx
  40430c:	inc    esi
  40430d:	out    0x63,al
  40430f:	out    0xce,al
  404311:	fucomp st(3)
  404313:	out    0x1b,al
  404315:	mov    ?,WORD PTR [ebp-0x1e333717]
  40431b:	imul   eax,DWORD PTR [eax-0x6c],0x3ff0db0b
  404322:	mov    gs,WORD PTR [edi+edx*1-0x2283ae80]
  404329:	iret   
  40432a:	dec    eax
  40432b:	cmp    BYTE PTR [ebx],0xe6
  40432e:	mov    es,WORD PTR [eax+ecx*8+0x60]
  404332:	inc    edx
  404333:	jne    0x4043ae
  404335:	aad    0x2e
  404337:	imul   esi,edx,0xffffff9d
  40433a:	mov    dl,dh
  40433c:	xlat   BYTE PTR ds:[ebx]
  40433d:	inc    ecx
  40433e:	adc    al,0xdb
  404340:	popf   
  404341:	and    DWORD PTR [ecx],ecx
  404343:	sahf   
  404344:	mov    ds:0x31c49d4f,al
  404349:	fnsave [eax*1-0x5b7f1954]
  404350:	cmp    eax,0x56aed5d9
  404355:	jnp    0x40431e
  404357:	gs pop ecx
  404359:	out    0xe5,eax
  40435b:	into   
  40435c:	sub    DWORD PTR [esi+0x6229fc25],0x7214a084
  404366:	fcmovne st,st(3)
  404368:	aas    
  404369:	mov    ecx,0xb3dbf935
  40436e:	lock inc ebp
  404370:	sub    al,0x48
  404372:	scas   eax,DWORD PTR es:[edi]
  404373:	aam    0x2e
  404375:	dec    ecx
  404376:	stos   BYTE PTR es:[edi],al
  404377:	push   DWORD PTR [eax-0x5759a1e1]
  40437d:	pop    ecx
  40437e:	nop
  40437f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404380:	pop    esi
  404381:	test   al,0xa3
  404383:	repz push ebx
  404385:	xchg   esp,ebx
  404387:	mov    edi,0x411537af
  40438c:	add    bl,BYTE PTR [edi]
  40438e:	das    
  40438f:	pop    ecx
  404390:	xchg   esp,esp
  404392:	dec    esp
  404393:	add    eax,0xa900aa9b
  404398:	xchg   edx,eax
  404399:	in     eax,dx
  40439a:	retf   0x3564
  40439d:	test   BYTE PTR [esi],bh
  40439f:	mov    bl,0xae
  4043a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043a2:	ret    
  4043a3:	les    edi,FWORD PTR [ecx+0x7d]
  4043a6:	inc    edx
  4043a7:	pushf  
  4043a8:	dec    ecx
  4043a9:	mov    WORD PTR [ebp-0x43d69bbf],gs
  4043af:	jo     0x404341
  4043b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043b2:	aaa    
  4043b3:	addr16 or ebx,esi
  4043b6:	pop    esp
  4043b7:	cmp    esp,DWORD PTR [eax-0x7]
  4043ba:	sub    DWORD PTR [eax+0x45],eax
  4043bd:	cli    
  4043be:	xor    eax,0x222b32e1
  4043c3:	add    DWORD PTR [ecx-0x2df85e8d],edx
  4043c9:	pop    esp
  4043ca:	rol    BYTE PTR [esi+edx*4],1
  4043cd:	pop    edi
  4043ce:	push   0xb
  4043d0:	adc    eax,0x1e78571c
  4043d5:	imul   edi,DWORD PTR [edx],0x12
  4043d8:	leave  
  4043d9:	xchg   ebx,eax
  4043da:	mov    ebp,0xe03cf0c7
  4043df:	push   edx
  4043e0:	fadd   QWORD PTR [eax]
  4043e2:	shr    DWORD PTR [ecx+0x2],0x96
  4043e6:	pop    es
  4043e7:	das    
  4043e8:	scas   eax,DWORD PTR es:[edi]
  4043e9:	push   ebx
  4043ea:	mov    edx,0x8779f3c4
  4043ef:	jle    0x404450
  4043f1:	cdq    
  4043f2:	adc    bl,al
  4043f4:	inc    esi
  4043f5:	lea    ecx,[edx-0x4b]
  4043f8:	sub    BYTE PTR [ecx],bl
  4043fa:	call   0xfa2a0f3c
  4043ff:	icebp  
  404400:	ins    BYTE PTR es:[edi],dx
  404401:	cmp    BYTE PTR ds:0x7e0e9f3e,ah
  404407:	ins    BYTE PTR es:[edi],dx
  404408:	add    eax,0x26d9528b
  40440d:	fs int 0x2a
  404410:	inc    eax
  404411:	sub    esi,esp
  404413:	or     al,0x51
  404415:	lods   al,BYTE PTR ds:[esi]
  404416:	mov    ch,0xb9
  404418:	sub    esi,DWORD PTR [edi]
  40441a:	mov    ds:0x1fe0664b,al
  40441f:	sbb    dl,bh
  404421:	or     eax,0xb2f38a88
  404426:	cmp    al,0x1b
  404428:	gs ror edx,cl
  40442b:	push   ecx
  40442c:	cmp    dl,ah
  40442e:	test   BYTE PTR [ecx+ebp*8-0x6e6f55da],al
  404435:	fdivr  st(7),st
  404437:	lods   eax,DWORD PTR ds:[esi]
  404438:	push   edx
  404439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40443a:	loope  0x40444c
  40443c:	fistp  QWORD PTR [esi-0x3e14e48f]
  404442:	jo     0x4043d7
  404444:	or     DWORD PTR [eax-0x7fc9c37d],ebx
  40444a:	inc    ebx
  40444b:	mov    edi,0x6bbf7a07
  404450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404451:	dec    ecx
  404452:	in     al,0x69
  404454:	xchg   esi,eax
  404455:	fadd   DWORD PTR [edi]
  404457:	mov    edi,ss
  404459:	mov    esp,0xea52f51c
  40445e:	imul   esi,DWORD PTR [edi-0x1e50d93e],0x47
  404465:	push   esp
  404466:	mov    ds:0xec83f2ce,eax
  40446b:	mov    ebx,0x5497b958
  404470:	add    al,0x15
  404472:	lea    edi,[esi+0x1591d562]
  404478:	jae    0x40447a
  40447a:	ins    DWORD PTR es:[edi],dx
  40447b:	call   0x731e:0x767bcf03
  404482:	mov    esi,0xa42f1f28
  404487:	or     eax,DWORD PTR [eax]
  404489:	and    BYTE PTR [ebp+0x3b],bh
  40448c:	add    DWORD PTR [edx],ecx
  40448e:	cmp    BYTE PTR [edi],bl
  404490:	add    al,ah
  404492:	dec    esp
  404493:	sub    al,0xb5
  404495:	fadd   DWORD PTR [edx+0x2e]
  404498:	int    0xc3
  40449a:	jno    0x404492
  40449c:	ja     0x404516
  40449e:	mov    ss,edi
  4044a0:	pop    ebx
  4044a1:	cs jne 0x4044ae
  4044a4:	pop    es
  4044a5:	ror    DWORD PTR [di],1
  4044a8:	jbe    0x40449e
  4044aa:	popa   
  4044ab:	xchg   ecx,eax
  4044ac:	push   esi
  4044ad:	adc    dl,bl
  4044af:	sbb    al,0x3b
  4044b1:	scas   al,BYTE PTR es:[edi]
  4044b2:	cmp    eax,0xb4344dd5
  4044b7:	push   cs
  4044b8:	out    0x31,al
  4044ba:	inc    edx
  4044bb:	inc    esi
  4044bc:	sub    DWORD PTR [esp+ebp*2-0xc],edx
  4044c0:	pop    ds
  4044c1:	jmp    0x85ac:0x4fc3a4e1
  4044c8:	inc    esi
  4044c9:	jo     0x40445d
  4044cb:	fcom   DWORD PTR [ecx-0x4dc45ff8]
  4044d1:	jmp    0x4044f4
  4044d3:	jp     0x4044dc
  4044d5:	fs push edx
  4044d7:	mov    edi,ebp
  4044d9:	xor    ah,ch
  4044db:	xor    al,0x72
  4044dd:	gs dec ebx
  4044df:	add    al,0x5
  4044e1:	int3   
  4044e2:	(bad)
  4044e5:	push   eax
  4044e6:	inc    ecx
  4044e7:	call   0xbb4040b5
  4044ec:	imul   esp,DWORD PTR [edi+0x55b644e8],0xc03c5d80
  4044f6:	lock jg 0x4044bd
  4044f9:	and    DWORD PTR [eax+0x25],esi
  4044fc:	popw   ss
  4044fe:	push   ebp
  4044ff:	cmp    ebx,eax
  404501:	repnz fmul DWORD PTR [esi+0xd63b578]
  404508:	ret    0xe795
  40450b:	stc    
  40450c:	adc    cl,dl
  40450e:	mov    al,0xfd
  404510:	mov    dl,0x3e
  404512:	out    0x72,al
  404514:	retf   0xd646
  404517:	test   al,0x60
  404519:	std    
  40451a:	xor    ch,BYTE PTR [esi+eiz*2]
  40451d:	mov    fs,esp
  40451f:	es adc al,0x40
  404522:	pop    ds
  404523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404524:	mov    ch,0xed
  404526:	repz mov bh,0x1c
  404529:	iret   
  40452a:	sbb    eax,0x45a3bef4
  40452f:	jp     0x40454d
  404531:	cwde   
  404532:	into   
  404533:	adc    eax,0x596623c5
  404538:	add    ah,BYTE PTR [ecx+0x2c02894d]
  40453e:	(bad)  
  40453f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404540:	lahf   
  404541:	mov    ebx,gs
  404543:	rol    BYTE PTR [edi],cl
  404545:	adc    DWORD PTR [ecx],0xa662a9c
  40454b:	not    BYTE PTR [ebx+0x77]
  40454e:	loope  0x4045a7
  404550:	xchg   ebp,edi
  404552:	jge    0x40453b
  404554:	mov    ebx,DWORD PTR [eax+edi*2]
  404557:	and    bl,dh
  404559:	xchg   DWORD PTR [edi+0x10d10ee5],ebx
  40455f:	xor    eax,0xa70b2d6c
  404564:	data16 test al,0xae
  404567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404568:	adc    al,0x83
  40456a:	push   edi
  40456b:	xor    DWORD PTR [edi],ebx
  40456d:	mov    ah,0x8
  40456f:	xchg   al,cl
  404571:	je     0x40454b
  404573:	pusha  
  404574:	cmc    
  404575:	out    dx,eax
  404576:	cmp    al,0x5c
  404578:	mov    BYTE PTR [esi-0x43],ah
  40457b:	ss pop ds
  40457d:	xor    DWORD PTR cs:[edx+0x4],ecx
  404581:	adc    eax,0x10f18787
  404586:	pop    eax
  404587:	jne    0x4045ff
  404589:	push   ss
  40458a:	mov    DWORD PTR [eax-0x5e8df0f0],ecx
  404590:	or     dh,BYTE PTR [eax]
  404592:	(bad)  
  404593:	push   0x35
  404595:	scas   al,BYTE PTR es:[edi]
  404596:	sub    ch,bh
  404598:	(bad)  
  404599:	call   0x3827e0fc
  40459e:	mov    ebp,0x492e0790
  4045a3:	xchg   edx,eax
  4045a4:	clc    
  4045a5:	jnp    0x4045a2
  4045a7:	push   ss
  4045a8:	add    eax,0xc8864c3d
  4045ad:	pop    ss
  4045ae:	les    ecx,FWORD PTR [esi-0x54]
  4045b1:	pop    edx
  4045b2:	(bad)  
  4045b4:	fisubr DWORD PTR [eax]
  4045b6:	cwde   
  4045b7:	cmp    ebx,DWORD PTR [edx+ebp*1+0x45b29b00]
  4045be:	test   al,0xd6
  4045c0:	and    BYTE PTR [edx-0x308eaf34],ch
  4045c6:	outs   dx,BYTE PTR ds:[esi]
  4045c7:	cmp    ah,BYTE PTR [eax+ebp*1+0xb]
  4045cb:	xchg   esp,edx
  4045cd:	mov    esi,0x99246f37
  4045d2:	out    0x1d,al
  4045d4:	adc    eax,0x3dabaff8
  4045d9:	std    
  4045da:	hlt    
  4045db:	test   DWORD PTR cs:[ebx],ecx
  4045de:	inc    ecx
  4045df:	sbb    BYTE PTR [edi+ebx*4-0x3c],ah
  4045e3:	xchg   edi,eax
  4045e4:	inc    ebx
  4045e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045e6:	inc    eax
  4045e7:	je     0x4045a8
  4045e9:	mov    DWORD PTR [eax-0x3d],ecx
  4045ec:	aas    
  4045ed:	(bad)  
  4045ee:	aaa    
  4045ef:	sahf   
  4045f0:	push   es
  4045f1:	jb     0x404573
  4045f3:	push   ebp
  4045f4:	mov    bl,0xb2
  4045f6:	mov    cl,0x32
  4045f8:	sub    ebp,esi
  4045fa:	gs pop ecx
  4045fc:	sti    
  4045fd:	pop    ds
  4045fe:	and    BYTE PTR [edi+0x5a061944],0x41
  404605:	lods   al,BYTE PTR ds:[esi]
  404606:	add    BYTE PTR [edx-0x70],bh
  404609:	dec    ebp
  40460a:	test   eax,0x48b7d8cc
  40460f:	pop    esi
  404610:	test   al,0x7d
  404612:	inc    eax
  404613:	pop    esp
  404614:	mov    ss,WORD PTR [eax-0x5e]
  404617:	call   0xa303:0x6f268657
  40461e:	pop    ebx
  40461f:	push   esi
  404620:	dec    edx
  404621:	pop    ds
  404622:	dec    edx
  404623:	xor    BYTE PTR [edi],ah
  404625:	adc    DWORD PTR [ebx-0x45c8c2df],ebp
  40462b:	mov    bh,0xb6
  40462d:	scas   al,BYTE PTR es:[edi]
  40462e:	outs   dx,DWORD PTR ds:[esi]
  40462f:	push   0xffffffaa
  404631:	cdq    
  404632:	sti    
  404633:	sbb    BYTE PTR [esi-0xfa49fa8],0x5a
  40463a:	pop    ss
  40463b:	sub    BYTE PTR [edx-0x700e281c],dl
  404641:	jbe    0x404618
  404643:	fsubr  QWORD PTR [ebx]
  404645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404646:	push   esp
  404647:	iret   
  404648:	dec    ebx
  404649:	xchg   eax,edx
  40464b:	ds je  0x40466b
  40464e:	mov    dl,0x31
  404650:	dec    ebp
  404651:	popa   
  404652:	push   0xfffffff5
  404654:	aam    0x89
  404656:	inc    edi
  404657:	fidiv  WORD PTR [eax-0x4b]
  40465a:	add    eax,0xa236df42
  40465f:	adc    dh,BYTE PTR [ecx-0x5b745656]
  404665:	fst    QWORD PTR [ecx-0x387f38ed]
  40466b:	daa    
  40466c:	dec    eax
  40466d:	push   0x76
  40466f:	jecxz  0x4046c7
  404671:	(bad)  
  404672:	jg     0x404653
  404674:	or     al,0x94
  404676:	int3   
  404677:	and    esi,DWORD PTR [edi]
  404679:	sub    al,0x79
  40467b:	lods   eax,DWORD PTR ds:[esi]
  40467c:	(bad)  
  40467d:	jnp    0x404627
  40467f:	add    edx,DWORD PTR [ecx+0x7d71a759]
  404685:	adc    BYTE PTR [esp+ebx*2+0xe776377],dl
  40468c:	je     0x4046fd
  40468e:	or     al,0x84
  404690:	mov    al,ds:0x4a0eeff3
  404695:	inc    eax
  404696:	cmp    dh,BYTE PTR [edi-0x3c05337e]
  40469c:	lock or DWORD PTR [esp+ecx*1-0x39b4008f],eax
  4046a4:	dec    esi
  4046a5:	pop    es
  4046a6:	scas   al,BYTE PTR es:[edi]
  4046a7:	pop    ebx
  4046a8:	add    DWORD PTR [esi-0x3ff168e9],0xffffff9e
  4046af:	xor    eax,0x189a6c9a
  4046b4:	mov    al,ds:0x368daf7
  4046b9:	into   
  4046ba:	int3   
  4046bb:	mov    al,ds:0x5ec8ea72
  4046c0:	mov    ds:0x75cb1cf3,al
  4046c5:	pop    ss
  4046c6:	enter  0xd572,0x31
  4046ca:	jmp    0x51b9c36f
  4046cf:	and    BYTE PTR cs:[edx-0x22],0xc8
  4046d4:	sbb    BYTE PTR [edx-0x5a],bh
  4046d7:	(bad)  
  4046d8:	outs   dx,DWORD PTR ds:[esi]
  4046d9:	int3   
  4046da:	mov    eax,0xd83974fc
  4046df:	aas    
  4046e0:	sbb    BYTE PTR [esi-0x46c7738],0xe2
  4046e7:	inc    ebx
  4046e8:	pop    edx
  4046e9:	add    DWORD PTR [esi-0x32bca885],esi
  4046ef:	jo     0x40470e
  4046f1:	sbb    BYTE PTR [esi],bh
  4046f3:	mov    al,ds:0xd0df3341
  4046f8:	xor    DWORD PTR ds:0x474b12f4,0xfffffff0
  4046ff:	stos   DWORD PTR es:[edi],eax
  404700:	jne    0x40468a
  404702:	push   ss
  404703:	pop    esi
  404704:	pop    ss
  404705:	dec    edi
  404706:	mov    dl,0x4c
  404708:	xor    ah,ah
  40470a:	fst    DWORD PTR [ebx+0x7e81d024]
  404710:	mov    dl,0x6e
  404712:	mov    bl,0xec
  404714:	pop    ebx
  404715:	or     eax,0x401415e3
  40471a:	scas   al,BYTE PTR es:[edi]
  40471b:	push   ebx
  40471c:	adc    DWORD PTR [ecx+0x5958e663],0x1e55ba59
  404726:	out    0xad,eax
  404728:	xchg   esi,ebp
  40472a:	xchg   edi,eax
  40472b:	push   ebp
  40472c:	xchg   eax,ecx
  40472e:	push   ss
  40472f:	inc    edx
  404730:	out    dx,eax
  404731:	or     esi,edi
  404733:	add    edi,DWORD PTR [edx-0x1a]
  404736:	(bad)  
  404739:	push   cs
  40473a:	sbb    edx,DWORD PTR ds:0xe6fbe637
  404740:	push   DWORD PTR [edx-0x66]
  404743:	outs   dx,DWORD PTR ds:[esi]
  404744:	jmp    0x88a0dd1e
  404749:	jo     0x4047c0
  40474b:	lea    edx,[esi+0x41]
  40474e:	das    
  40474f:	je     0x4047cd
  404751:	out    0xb1,eax
  404753:	push   eax
  404754:	inc    esi
  404755:	dec    esi
  404756:	cmp    DWORD PTR [esi],0xffffff9e
  404759:	mov    eax,ds:0x819607ff
  40475e:	mov    cl,0xab
  404760:	out    0xe6,al
  404762:	mov    edi,0x9a2ae4b2
  404767:	cmp    DWORD PTR [ecx-0x68],ebx
  40476a:	mov    ebp,0xe4380e13
  40476f:	push   ecx
  404770:	mov    ch,0xbc
  404772:	mov    ebp,0x1f2ad3ef
  404777:	sbb    al,0xe0
  404779:	test   eax,0x52b6b29
  40477e:	inc    edx
  40477f:	mul    al
  404781:	mov    BYTE PTR [eax+0x69],bl
  404784:	mov    dh,0x88
  404786:	pushf  
  404787:	adc    al,0x60
  404789:	xchg   BYTE PTR [ecx],ah
  40478b:	inc    ecx
  40478c:	jmp    0x4047e3
  40478e:	cs pop eax
  404790:	sar    BYTE PTR [ecx+0x4fcf2230],cl
  404796:	jle    0x404802
  404798:	push   ebp
  404799:	out    dx,al
  40479a:	pop    esi
  40479b:	bound  esi,QWORD PTR [esi-0x72a4cfd1]
  4047a1:	lahf   
  4047a2:	push   cs
  4047a3:	and    ah,0x31
  4047a6:	and    BYTE PTR [edi+edi*8-0x8df3b27],al
  4047ad:	and    al,0x66
  4047af:	fnstsw WORD PTR fs:0x1d3691c7
  4047b6:	and    al,0xe7
  4047b8:	add    eax,0x40d31ecb
  4047bd:	sub    ebp,DWORD PTR [esi+0x65df750a]
  4047c3:	xchg   DWORD PTR [ecx+edx*8-0x3c637e1f],edx
  4047ca:	jns    0x4047bc
  4047cc:	scas   al,BYTE PTR es:[edi]
  4047cd:	xor    al,BYTE PTR [edi-0x4c7333e3]
  4047d3:	pop    ecx
  4047d4:	jnp    0x4047aa
  4047d6:	push   eax
  4047d7:	and    ebp,DWORD PTR [ebp-0x439d3576]
  4047dd:	adc    eax,0x590654a5
  4047e2:	sahf   
  4047e3:	push   ecx
  4047e4:	and    eax,DWORD PTR [eax]
  4047e6:	sub    eax,0x2f54bebd
  4047eb:	cs mov edx,0x3673017b
  4047f1:	or     edi,ebx
  4047f3:	call   0x3608:0xe82bf6bc
  4047fa:	pop    esi
  4047fb:	xchg   esp,eax
  4047fc:	bound  ebp,QWORD PTR [ebx-0x7908006b]
  404802:	in     eax,0x2b
  404804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404805:	call   FWORD PTR ds:0xa3b6405f
  40480b:	push   edi
  40480c:	cmp    cl,BYTE PTR [ecx+esi*4+0x259f2c]
  404813:	scas   al,BYTE PTR es:[edi]
  404814:	(bad)  
  404815:	push   cs
  404816:	nop
  404817:	out    dx,eax
  404818:	addr16 in al,dx
  40481a:	sti    
  40481b:	dec    esp
  40481c:	or     eax,0x7f2972a7
  404821:	sahf   
  404822:	fst    DWORD PTR [eax]
  404824:	fwait
  404825:	cmc    
  404826:	mov    ds:0x16c149b5,eax
  40482b:	mov    ebp,0x21794782
  404830:	arpl   WORD PTR ds:0x3dd98231,si
  404836:	mov    DWORD PTR [ecx],ebx
  404838:	xchg   ecx,eax
  404839:	mov    ebp,0x73ad6aef
  40483e:	ja     0x404820
  404840:	mov    edx,0x2147fb96
  404845:	sti    
  404846:	arpl   WORD PTR [ebx+0x218e6421],ax
  40484c:	jle    0x4047ce
  40484e:	scas   eax,DWORD PTR es:[edi]
  40484f:	jge    0x4048ad
  404851:	mov    edx,0x29f109db
  404856:	or     al,0xda
  404858:	pop    edi
  404859:	jae    0x4048c9
  40485b:	dec    eax
  40485c:	mov    edx,0xbf8dd8bd
  404861:	cwde   
  404862:	sar    BYTE PTR [esi-0x20],cl
  404865:	cld    
  404866:	sbb    BYTE PTR [esp+ebx*8+0x10],ah
  40486a:	es aas 
  40486c:	std    
  40486d:	xchg   DWORD PTR ds:0x8b72e281,ebx
  404873:	mov    ch,0x56
  404875:	mov    edx,0x340c9552
  40487a:	or     DWORD PTR [edx],0x60ac009c
  404880:	popa   
  404881:	std    
  404882:	mov    dh,0xce
  404884:	test   BYTE PTR [edx-0x1a],dh
  404887:	call   0xadfd:0x42533383
  40488e:	jmp    0x404833
  404890:	push   es
  404891:	test   al,0xd3
  404893:	je     0x4048b8
  404895:	imul   esp,DWORD PTR [edi],0x2badbfc6
  40489b:	out    0x67,al
  40489d:	jae    0x404912
  40489f:	xor    BYTE PTR [edi],dl
  4048a1:	xchg   ebx,eax
  4048a2:	cmp    DWORD PTR [eax-0x378b009c],eax
  4048a8:	pop    ss
  4048a9:	jge    0x40482f
  4048ab:	ss pusha 
  4048ad:	aam    0x89
  4048af:	(bad)  
  4048b0:	lods   al,BYTE PTR ds:[esi]
  4048b1:	push   0xffffff9e
  4048b3:	outs   dx,DWORD PTR ds:[esi]
  4048b4:	daa    
  4048b5:	adc    BYTE PTR [esi],0xf9
  4048b8:	xor    al,0xb1
  4048ba:	cmp    eax,0xe52acc9f
  4048bf:	hlt    
  4048c0:	push   edx
  4048c1:	xor    esp,eax
  4048c3:	mov    edi,0x910d90b0
  4048c8:	sbb    eax,0x9f4ef12e
  4048cd:	dec    ebp
  4048ce:	shl    DWORD PTR [eax],0x6d
  4048d1:	mov    eax,ds:0x38ba874b
  4048d6:	mov    bl,0x9b
  4048d8:	jp     0x4048f2
  4048da:	pusha  
  4048db:	xor    al,0xab
  4048dd:	sub    al,0xe6
  4048df:	je     0x404960
  4048e1:	add    dl,bl
  4048e3:	ins    BYTE PTR es:[edi],dx
  4048e4:	dec    ebp
  4048e5:	mov    eax,0xbf35783b
  4048ea:	xchg   ebx,eax
  4048eb:	mov    edx,DWORD PTR [ebx-0x71]
  4048ee:	(bad)  
  4048ef:	cmp    bh,BYTE PTR [edx+eiz*8]
  4048f2:	sahf   
  4048f3:	push   edx
  4048f4:	or     DWORD PTR [esi-0x36],ebp
  4048f7:	add    BYTE PTR [edi],dl
  4048f9:	mov    DWORD PTR [ebx+0x13],ecx
  4048fc:	sub    ecx,DWORD PTR [ebx-0x40]
  4048ff:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  404901:	xor    BYTE PTR [eax-0x47cab333],cl
  404907:	xchg   DWORD PTR [edx],ebx
  404909:	inc    ebx
  40490a:	adc    eax,0x166f70
  40490f:	into   
  404910:	xchg   edx,eax
  404911:	jl     0x404926
  404913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404914:	std    
  404915:	mov    ecx,DWORD PTR [edi-0x7eb44768]
  40491b:	icebp  
  40491c:	adc    eax,0x1c720e00
  404921:	mov    ds:0xf64d5c69,al
  404926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404927:	mov    bl,0x26
  404929:	dec    edx
  40492a:	cwde   
  40492b:	pop    edx
  40492c:	mov    ds:0xeb0a17cf,eax
  404931:	xlat   BYTE PTR ds:[ebx]
  404932:	jg     0x404950
  404934:	or     ecx,ebx
  404936:	mov    cl,0x70
  404938:	mov    eax,0x73391f7f
  40493d:	dec    ebp
  40493e:	test   DWORD PTR [esi+0x3e9494ce],esp
  404944:	mov    DWORD PTR [edi+eax*4],esp
  404947:	mov    ebp,0x2a5d744d
  40494c:	xor    edi,DWORD PTR [edi+0x7f]
  40494f:	stos   DWORD PTR es:[edi],eax
  404950:	ror    BYTE PTR [esi+0x16e5df0a],0x62
  404957:	add    al,0x7
  404959:	int    0x8b
  40495b:	add    ecx,edi
  40495d:	add    al,0x66
  40495f:	mov    ebx,0x699d6004
  404964:	mov    ds:0xb5a060a9,eax
  404969:	jae    0x404958
  40496b:	and    al,0x2
  40496d:	mov    eax,0x21a81e1e
  404972:	rcl    DWORD PTR [esi-0x1a],1
  404975:	push   0x3bd3778b
  40497a:	cmp    DWORD PTR [edx],0xaf6ec65b
  404980:	imul   eax,DWORD PTR [esi],0xdbb55726
  404986:	enter  0x4a40,0xd5
  40498a:	test   cl,dl
  40498c:	xor    al,0x65
  40498e:	imul   edx,DWORD PTR [esi],0x1a
  404991:	aad    0x89
  404993:	and    ebx,DWORD PTR [eax]
  404995:	sbb    edx,ecx
  404997:	int    0x22
  404999:	arpl   WORD PTR [edi+0x3b117630],si
  40499f:	js     0x404a03
  4049a1:	pop    esp
  4049a2:	xchg   edi,eax
  4049a3:	out    0x31,al
  4049a5:	into   
  4049a6:	adc    DWORD PTR [ebp-0xd2e1884],esi
  4049ac:	mov    cl,0x78
  4049ae:	jmp    0xbb44:0x3304f8b
  4049b5:	push   ds
  4049b6:	js     0x40495e
  4049b8:	xor    BYTE PTR ds:0x8e486bcc,ch
  4049be:	push   ebp
  4049bf:	dec    ebx
  4049c0:	pushf  
  4049c1:	adc    BYTE PTR [edx+0x7791649f],dl
  4049c7:	add    ebp,DWORD PTR [edx+eax*4-0x16]
  4049cb:	xchg   esi,eax
  4049cc:	test   al,0x80
  4049ce:	test   DWORD PTR [eax+0x3e],ebp
  4049d1:	add    dh,BYTE PTR ds:0x9825817b
  4049d7:	inc    edi
  4049d8:	jg     0x404a57
  4049da:	cli    
  4049db:	adc    al,BYTE PTR [ebp-0x52]
  4049de:	shr    ebp,0x1e
  4049e1:	and    eax,0xc4adf557
  4049e6:	adc    eax,DWORD PTR [ecx-0x28]
  4049e9:	shl    DWORD PTR [ebx+0x74],0x32
  4049ed:	in     eax,0xf8
  4049ef:	sub    eax,0x1181e67b
  4049f4:	mov    esi,0x5d1d328d
  4049f9:	popf   
  4049fa:	scas   al,BYTE PTR es:[edi]
  4049fb:	add    al,0x20
  4049fd:	inc    edi
  4049fe:	sbb    ch,cl
  404a00:	cs add eax,0xc7b7afc6
  404a06:	into   
  404a07:	lahf   
  404a08:	or     ebx,DWORD PTR [eax+edi*2-0x47e9a86b]
  404a0f:	xor    eax,0x2dc7446b
  404a14:	in     al,dx
  404a15:	sub    al,0xa4
  404a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a18:	mov    WORD PTR [ebx+0x8c48bc6],cs
  404a1e:	xor    eax,0x264be9d6
  404a23:	or     ebx,DWORD PTR [eax+0x5acb6fce]
  404a29:	xchg   esp,eax
  404a2a:	or     al,0x29
  404a2c:	iret   
  404a2d:	and    eax,DWORD PTR [esi+0x5e1135bc]
  404a33:	jmp    DWORD PTR [ebx]
  404a35:	mov    ebp,0xb74e69c9
  404a3a:	(bad)  
  404a3b:	add    esi,edi
  404a3d:	pop    es
  404a3e:	push   ebp
  404a3f:	imul   eax,DWORD PTR [esi+esi*2-0x79],0x26
  404a44:	lods   eax,DWORD PTR ds:[esi]
  404a45:	out    0x46,eax
  404a47:	test   eax,0x61e3f883
  404a4c:	fistp  WORD PTR [edx]
  404a4e:	mov    edx,0x6bc7bd3e
  404a53:	mov    bh,0x3c
  404a55:	test   al,0xf5
  404a57:	or     bl,ah
  404a59:	add    al,0xc2
  404a5b:	xchg   ecx,eax
  404a5c:	inc    esi
  404a5d:	sub    BYTE PTR [eax-0x68],0x6e
  404a61:	xor    al,0x82
  404a63:	dec    ebx
  404a64:	xor    esp,DWORD PTR [eax]
  404a66:	push   ebp
  404a67:	mov    eax,0x69fb7b3f
  404a6d:	enter  0x9aaf,0xf9
  404a71:	shr    edx,0xc5
  404a74:	or     al,0xfc
  404a76:	in     eax,0x66
  404a78:	xchg   edx,edi
  404a7a:	jmp    0x404aba
  404a7c:	or     al,0x52
  404a7e:	adc    al,0x86
  404a80:	cmp    BYTE PTR [esi+0x44],cl
  404a83:	inc    edi
  404a84:	imul   ebx,DWORD PTR [edi+0x18],0x7
  404a88:	ins    BYTE PTR es:[edi],dx
  404a89:	outs   dx,BYTE PTR ds:[esi]
  404a8a:	inc    eax
  404a8b:	retf   0xf846
  404a8e:	ins    DWORD PTR es:[edi],dx
  404a8f:	or     bh,al
  404a91:	mov    ds:0x1962bfad,eax
  404a96:	mov    edx,DWORD PTR [edx-0x653c02c0]
  404a9c:	adc    DWORD PTR [eax*4+0x34b1b95b],edx
  404aa3:	adc    BYTE PTR [eax],ah
  404aa5:	push   esi
  404aa6:	scas   eax,DWORD PTR es:[edi]
  404aa7:	jnp    0x404add
  404aa9:	adc    al,BYTE PTR [ebp+0xd]
  404aac:	mov    ebx,0x4047e51d
  404ab1:	jmp    0x6820:0x8008ef82
  404ab8:	ret    
  404ab9:	mov    ch,al
  404abb:	mov    al,ds:0x95a479d3
  404ac0:	fld    TBYTE PTR [edi+0x734194ce]
  404ac6:	in     eax,0x53
  404ac8:	xchg   edi,eax
  404ac9:	and    BYTE PTR [ecx],bl
  404acb:	jns    0x404a87
  404acd:	pop    esp
  404ace:	mov    bh,0x59
  404ad0:	lods   al,BYTE PTR ds:[esi]
  404ad1:	leave  
  404ad2:	xchg   ebp,eax
  404ad3:	fdivp  st(0),st
  404ad5:	dec    edi
  404ad6:	and    esp,esi
  404ad8:	mov    dl,0x70
  404ada:	dec    esp
  404adb:	add    al,0xd8
  404add:	inc    esp
  404ade:	jmp    0x4e8c3699
  404ae3:	test   al,0x2e
  404ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ae6:	std    
  404ae7:	loop   0x404a77
  404ae9:	ret    
  404aea:	fistp  QWORD PTR [edi+0x3ac5f262]
  404af0:	ja     0x404b0e
  404af2:	push   eax
  404af3:	dec    eax
  404af4:	aam    0x62
  404af6:	(bad)  
  404af7:	stc    
  404af8:	fcomp  DWORD PTR [edx]
  404afa:	retf   
  404afb:	add    BYTE PTR [esi],bl
  404afd:	outs   dx,DWORD PTR ds:[esi]
  404afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aff:	push   cs
  404b00:	cmp    eax,0xbfac3e05
  404b05:	mov    dh,0xa9
  404b07:	sub    al,0xeb
  404b09:	js     0x404b7b
  404b0b:	add    eax,0x1e140309
  404b10:	sbb    ch,BYTE PTR [ebx+0x3f84ed1c]
  404b16:	outs   dx,DWORD PTR ds:[esi]
  404b17:	in     al,0xaf
  404b19:	popa   
  404b1a:	punpckhwd mm4,QWORD PTR [ebx+0x1eb8cf26]
  404b21:	xor    edi,DWORD PTR [ebx]
  404b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b24:	shl    BYTE PTR [edx+ebp*1],1
  404b27:	push   ebp
  404b28:	leave  
  404b29:	push   esi
  404b2a:	(bad)  
  404b2b:	popa   
  404b2c:	and    BYTE PTR [edi],bh
  404b2e:	jnp    0x404ac7
  404b30:	adc    eax,ecx
  404b32:	cli    
  404b33:	cmc    
  404b34:	add    eax,0x5734f7a8
  404b39:	leave  
  404b3a:	arpl   WORD PTR [ecx-0x22],di
  404b3d:	xchg   esi,eax
  404b3e:	fbstp  TBYTE PTR [edi+0x47]
  404b41:	out    0xfb,al
  404b43:	scas   al,BYTE PTR es:[edi]
  404b44:	sbb    BYTE PTR ds:0x21ac8aed,dl
  404b4a:	or     eax,0xfdfa52c0
  404b4f:	data16 mov al,BYTE PTR [eax+0x75]
  404b53:	leave  
  404b54:	outs   dx,DWORD PTR ds:[esi]
  404b55:	inc    edx
  404b56:	push   ebp
  404b57:	mov    dh,0x1d
  404b59:	dec    edx
  404b5a:	pop    edi
  404b5b:	outs   dx,BYTE PTR ds:[esi]
  404b5c:	(bad)  
  404b5d:	retf   0x722c
  404b60:	jne    0x404bc4
  404b62:	das    
  404b63:	dec    ebx
  404b64:	sub    ecx,DWORD PTR [ebx+0x19]
  404b67:	dec    ecx
  404b68:	retf   0xc214
  404b6b:	pop    esp
  404b6c:	fimul  DWORD PTR [ecx+0x5b]
  404b6f:	mov    cl,0xe1
  404b71:	xchg   DWORD PTR [eax-0x5],ecx
  404b74:	adc    cl,dh
  404b76:	sub    eax,0xcd580b23
  404b7b:	out    0xb3,eax
  404b7d:	push   esp
  404b7e:	in     al,dx
  404b7f:	das    
  404b80:	cwde   
  404b81:	int3   
  404b82:	dec    esp
  404b83:	mov    dl,0xbb
  404b85:	lods   al,BYTE PTR ds:[esi]
  404b86:	scas   al,BYTE PTR es:[edi]
  404b87:	mov    eax,ds:0x2454b39d
  404b8c:	out    0xcc,al
  404b8e:	mov    ah,0xe1
  404b90:	mov    cl,0xf1
  404b92:	xchg   edi,edi
  404b94:	stos   DWORD PTR es:[edi],eax
  404b95:	in     eax,dx
  404b96:	mov    ebx,0x4aa8a4db
  404b9b:	add    al,0x14
  404b9d:	call   0x324c:0x561675de
  404ba4:	out    0x9f,eax
  404ba6:	fldenv [eax-0x6f610cac]
  404bac:	scas   eax,DWORD PTR es:[edi]
  404bad:	ret    
  404bae:	pusha  
  404baf:	in     eax,dx
  404bb0:	stos   BYTE PTR es:[edi],al
  404bb1:	and    ecx,DWORD PTR [eax]
  404bb3:	cmp    ah,cl
  404bb5:	sti    
  404bb6:	loopne 0x404c02
  404bb8:	aas    
  404bb9:	fist   WORD PTR [edx+0x50]
  404bbc:	mov    ebp,0x3cdb9080
  404bc1:	pop    ebx
  404bc2:	jge    0x404c37
  404bc4:	pop    es
  404bc5:	xlat   BYTE PTR ds:[ebx]
  404bc6:	or     DWORD PTR [edx-0x23],ebp
  404bc9:	call   0xa5206f42
  404bce:	fcom   QWORD PTR [eax+ebp*1]
  404bd1:	mov    esp,0x4ee0dad
  404bd6:	pop    es
  404bd7:	ret    0xb565
  404bda:	mov    gs,eax
  404bdc:	sbb    al,0xd1
  404bde:	pop    eax
  404bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404be0:	imul   eax,DWORD PTR es:[eax],0x40cc4b1d
  404be7:	adc    al,0xee
  404be9:	call   0xcf2c:0x8b882e41
  404bf0:	add    al,0x3d
  404bf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bf3:	fisub  DWORD PTR [edi-0x4225095d]
  404bf9:	mov    BYTE PTR [edx],bl
  404bfb:	push   ss
  404bfc:	(bad)  
  404bfd:	jmp    0xd079:0x53b8db55
  404c04:	sub    BYTE PTR [esi-0x38],0x48
  404c08:	add    bh,dl
  404c0a:	mov    ebx,DWORD PTR [esi+0x43]
  404c0d:	mov    dl,0x2
  404c0f:	xchg   ebx,eax
  404c10:	daa    
  404c11:	mov    esi,0xa13165
  404c16:	and    BYTE PTR [edx+ecx*2+0x1bbf29b8],0x53
  404c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c1f:	or     al,0x8b
  404c21:	pop    esp
  404c22:	mov    eax,ds:0xe324b09d
  404c27:	out    0xe3,eax
  404c29:	pushf  
  404c2a:	add    ecx,DWORD PTR [eax+eiz*2-0x62]
  404c2e:	aam    0x41
  404c30:	cmp    ecx,DWORD PTR [edx-0x50]
  404c33:	retf   0x2326
  404c36:	sub    eax,0xdd747563
  404c3b:	mov    ebx,0x4be10153
  404c40:	sub    DWORD PTR [ecx],0xffffffc0
  404c43:	fmul   DWORD PTR [eax-0x23]
  404c46:	aad    0x39
  404c48:	jge    0x404cab
  404c4a:	ret    
  404c4b:	and    DWORD PTR [eax-0x15],esi
  404c4e:	cwde   
  404c4f:	push   cs
  404c50:	pop    edi
  404c51:	mov    ebp,0x16ee354d
  404c56:	loope  0x404c27
  404c58:	repnz adc bh,BYTE PTR [eax]
  404c5b:	mov    BYTE PTR [ebp-0x4],0x87
  404c5f:	pop    edi
  404c60:	sbb    BYTE PTR [eax+0x3d],bl
  404c63:	dec    ebx
  404c64:	popa   
  404c65:	dec    dh
  404c67:	in     eax,dx
  404c68:	or     al,0x6a
  404c6a:	adc    ebp,DWORD PTR [esi]
  404c6c:	xchg   ebp,eax
  404c6d:	or     BYTE PTR gs:[esi+0x5cd9d8a7],bl
  404c74:	dec    ebx
  404c75:	push   esp
  404c76:	out    0x98,al
  404c78:	and    BYTE PTR [eax+0x7cfb732],0x55
  404c7f:	sbb    ebp,DWORD PTR [ecx+0x789fdc97]
  404c85:	fisttp WORD PTR [esi-0x6a]
  404c88:	mov    ebx,0xce8dad1e
  404c8d:	pop    ecx
  404c8e:	lods   al,BYTE PTR ds:[esi]
  404c8f:	sar    BYTE PTR [edi-0x5f0cf846],0xa2
  404c96:	outs   dx,BYTE PTR ds:[esi]
  404c97:	push   ebp
  404c98:	out    dx,al
  404c99:	dec    ecx
  404c9a:	sub    al,0xf7
  404c9c:	ficom  WORD PTR [edx-0x3f]
  404c9f:	ins    BYTE PTR es:[edi],dx
  404ca0:	xchg   DWORD PTR [eax+0x29],esi
  404ca3:	lock jmp 0xc93a6cfb
  404ca9:	mov    eax,ds:0x13a3c059
  404cae:	aaa    
  404caf:	and    al,0xc3
  404cb1:	push   cs
  404cb2:	icebp  
  404cb3:	xor    al,0xd3
  404cb5:	cdq    
  404cb6:	pop    esp
  404cb7:	sub    dl,BYTE PTR [esi+0x18]
  404cba:	mov    eax,ds:0xc1b5b240
  404cbf:	in     al,0x4
  404cc1:	ret    
  404cc2:	popf   
  404cc3:	add    DWORD PTR [edx-0x11],0x0
  404cc7:	in     al,dx
  404cc8:	inc    ecx
  404cc9:	push   ds
  404cca:	cwde   
  404ccb:	imul   ebp,ecx,0x82a43b3e
  404cd1:	(bad)
  404cd4:	sahf   
  404cd5:	adc    esi,DWORD PTR ds:0x58ad9673
  404cdb:	jp     0x404d36
  404cdd:	aad    0xb2
  404cdf:	(bad)  
  404ce0:	in     al,dx
  404ce1:	jns    0x404c9f
  404ce3:	inc    edx
  404ce5:	shl    BYTE PTR gs:[edi],1
  404ce8:	push   0xa40fb2a0
  404ced:	aas    
  404cee:	adc    ch,BYTE PTR [ebp-0xe]
  404cf1:	adc    ebx,DWORD PTR [edx]
  404cf3:	jno    0x404cd1
  404cf5:	jns    0x404ca3
  404cf7:	dec    esi
  404cf8:	in     eax,0x4
  404cfa:	ins    BYTE PTR es:[edi],dx
  404cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cfc:	mov    esi,0xd1a940e4
  404d01:	ds pop edi
  404d03:	inc    ebp
  404d04:	in     eax,dx
  404d05:	or     cl,0x3
  404d08:	loop   0x404cf3
  404d0a:	mov    esp,ds
  404d0c:	cmp    ch,BYTE PTR [edx]
  404d0e:	repnz add BYTE PTR [edx+0x73],0xab
  404d13:	add    DWORD PTR [ecx],0x51
  404d16:	js     0x404d20
  404d18:	mov    ecx,0xa3b9841f
  404d1d:	addr16 push ebx
  404d1f:	mov    ebp,0x83e7dee8
  404d24:	cld    
  404d25:	fsub   DWORD PTR [ecx+0x73]
  404d28:	cmp    DWORD PTR [edi-0x7dbc3031],ebx
  404d2e:	mov    ebp,0x7ba8ddfc
  404d33:	sub    edi,ebx
  404d35:	or     WORD PTR fs:[edi+0x22493940],bp
  404d3d:	aam    0x6c
  404d3f:	fs push 0x58
  404d42:	lea    esp,[edx-0xa1f4c9b]
  404d48:	xchg   edi,eax
  404d49:	mov    al,0xd8
  404d4b:	popa   
  404d4c:	mov    bh,BYTE PTR [esi-0x2e4a20a3]
  404d52:	push   ebx
  404d53:	imul   bl
  404d55:	and    ch,BYTE PTR [eax]
  404d57:	or     al,0x2d
  404d59:	and    BYTE PTR [edi-0x37],cl
  404d5c:	dec    eax
  404d5d:	pop    edx
  404d5e:	cld    
  404d5f:	add    bl,0x77
  404d62:	jl     0x404d45
  404d64:	jl     0x404d41
  404d66:	jmp    0x9cb6:0xddd61311
  404d6d:	fstp   TBYTE PTR [ebp-0x46]
  404d70:	lods   eax,DWORD PTR ds:[esi]
  404d71:	out    dx,eax
  404d72:	mov    bh,0x5c
  404d74:	and    DWORD PTR [eax+0x7c],eax
  404d77:	(bad)  
  404d78:	jle    0x404d34
  404d7a:	jne    0x404db4
  404d7c:	adc    al,0x7f
  404d7e:	shl    BYTE PTR [ebx-0x50],0x44
  404d82:	push   ss
  404d83:	dec    edi
  404d84:	sbb    ah,BYTE PTR [edi-0x24182d99]
  404d8a:	ret    
  404d8b:	pushf  
  404d8c:	ja     0x404d64
  404d8e:	test   al,0x2c
  404d90:	sbb    edx,DWORD PTR [ebx]
  404d92:	inc    edx
  404d93:	bound  eax,QWORD PTR [edi-0x23dc6105]
  404d99:	xchg   DWORD PTR [edx+0x50],esp
  404d9c:	daa    
  404d9d:	sbb    al,0x72
  404d9f:	inc    ebx
  404da0:	fs xchg esp,eax
  404da2:	inc    eax
  404da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404da4:	jle    0x404d83
  404da6:	or     ah,al
  404da8:	push   0xc28960cd
  404dad:	and    al,0x49
  404daf:	mov    bl,bh
  404db1:	(bad)  
  404db2:	sar    BYTE PTR [eax],cl
  404db4:	cmp    bh,ah
  404db6:	fisub  DWORD PTR [ebx+0x4d3fcf2f]
  404dbc:	cld    
  404dbd:	xchg   ebx,edi
  404dbf:	pop    esi
  404dc0:	nop
  404dc1:	out    dx,al
  404dc2:	adc    DWORD PTR [edi+0x17f82787],esi
  404dc8:	xchg   DWORD PTR [ebx+0x48b5c312],edi
  404dce:	loop   0x404d74
  404dd0:	and    BYTE PTR [ebp-0x53],al
  404dd3:	out    0x61,al
  404dd5:	test   al,0xa
  404dd7:	(bad)  
  404dd8:	into   
  404dd9:	adc    ebx,ebx
  404ddb:	push   edi
  404ddc:	stos   BYTE PTR es:[edi],al
  404ddd:	test   DWORD PTR [esi],ecx
  404ddf:	daa    
  404de0:	sti    
  404de1:	ficomp DWORD PTR [edx+0x5a720143]
  404de7:	jge    0x404d88
  404de9:	and    ch,dh
  404deb:	ins    BYTE PTR es:[edi],dx
  404dec:	mov    bh,0x82
  404dee:	shr    DWORD PTR [ebp-0x35b45efa],1
  404df4:	(bad)  
  404df6:	push   ecx
  404df7:	cmp    ebx,esi
  404df9:	mov    esi,0x84d36099
  404dfe:	dec    esp
  404dff:	mov    cl,ch
  404e01:	in     al,0x39
  404e03:	iret   
  404e04:	jbe    0x404e2c
  404e06:	mov    ebx,0x56d871ae
  404e0b:	pusha  
  404e0c:	add    al,0xb6
  404e0e:	jg     0x404df3
  404e10:	ret    0xff1d
  404e13:	inc    ebx
  404e14:	jb     0x404dcd
  404e16:	or     eax,0x3c2db528
  404e1b:	(bad)  
  404e1c:	pop    ebp
  404e1d:	mov    al,0x86
  404e1f:	arpl   WORD PTR [ecx+0x7ac8d2d8],sp
  404e25:	push   ebp
  404e26:	jnp    0x404ded
  404e28:	addr16 mov bl,0x89
  404e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e2c:	push   ss
  404e2d:	test   eax,0xe85b38e3
  404e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e33:	test   DWORD PTR [edx+edi*8+0x58],edx
  404e37:	mov    BYTE PTR [ebp-0x6921d9b1],bl
  404e3d:	add    BYTE PTR [ebp+0x2c22c12b],al
  404e43:	lds    eax,FWORD PTR [edi]
  404e45:	(bad)  
  404e47:	fiadd  DWORD PTR [eax]
  404e49:	mov    al,0x94
  404e4b:	cmp    DWORD PTR [ebx+ebx*1-0x41cf7459],edi
  404e52:	xchg   edi,eax
  404e53:	imul   esi,DWORD PTR [eax+0x14],0x12
  404e57:	lock sub bl,BYTE PTR [eax-0x3d]
  404e5b:	inc    eax
  404e5c:	pop    ecx
  404e5d:	out    0x29,eax
  404e5f:	mov    esi,0x823cfce1
  404e64:	repnz in al,dx
  404e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e68:	ins    BYTE PTR es:[edi],dx
  404e69:	dec    ebp
  404e6a:	pop    es
  404e6b:	xor    al,0x5
  404e6d:	out    dx,eax
  404e6e:	sub    ebx,edi
  404e70:	fcomip st,st(7)
  404e72:	rcl    cl,1
  404e74:	retf   
  404e75:	mov    al,ds:0x6340fba8
  404e7a:	dec    esi
  404e7b:	(bad)  
  404e7c:	divps  xmm4,XMMWORD PTR [edi-0x6d5ba874]
  404e83:	adc    BYTE PTR [ebp+0x70aa4a91],ah
  404e89:	and    BYTE PTR [esi-0x77],bl
  404e8c:	scas   al,BYTE PTR es:[edi]
  404e8d:	cmp    DWORD PTR [edi+0x37],esi
  404e90:	and    al,0x22
  404e92:	aas    
  404e93:	jl     0x404ea5
  404e95:	or     al,0xbf
  404e97:	mov    ch,0xfd
  404e99:	or     BYTE PTR [ecx+ebx*8+0x3bf0d727],0xb8
  404ea1:	mov    eax,ds:0x8799f446
  404ea6:	leave  
  404ea7:	mov    ds:0x760086ca,eax
  404eac:	jmp    FWORD PTR [eax+0x2692cd1c]
  404eb2:	xchg   ebp,eax
  404eb3:	sbb    DWORD PTR [esi+edx*8+0x6c],eax
  404eb7:	or     ebx,edx
  404eb9:	sbb    esp,ebx
  404ebb:	out    dx,al
  404ebc:	(bad)
  404ec0:	rcr    DWORD PTR [edi],0x16
  404ec3:	sub    al,0xd0
  404ec5:	push   ebp
  404ec6:	stos   DWORD PTR es:[edi],eax
  404ec7:	les    eax,FWORD PTR [edx-0x7946e68c]
  404ecd:	mov    esi,0xda2aff91
  404ed2:	aaa    
  404ed3:	jecxz  0x404e87
  404ed5:	fisub  DWORD PTR [eax+eax*1]
  404ed8:	jmp    0x404ea2
  404eda:	sbb    eax,0x27ca7b5f
  404edf:	imul   ebx,eax,0xffffffc5
  404ee2:	cmp    eax,0x3c1f3570
  404ee7:	xor    dh,0xe9
  404eea:	ror    DWORD PTR [esi-0x5c],0xdf
  404eee:	loop   0x404f1a
  404ef0:	loop   0x404ed0
  404ef2:	pop    ebp
  404ef3:	fwait
  404ef4:	add    dh,BYTE PTR [ebp-0x1633561]
  404efa:	arpl   dx,dx
  404efc:	push   eax
  404efd:	imul   ebp,DWORD PTR [ecx-0xa],0xffffffd7
  404f01:	scas   eax,DWORD PTR es:[edi]
  404f02:	fwait
  404f03:	adc    ebx,DWORD PTR [eax-0xc]
  404f06:	xchg   edi,eax
  404f07:	shr    DWORD PTR [ebp-0x29],0xc4
  404f0b:	xor    DWORD PTR fs:[ebx],esi
  404f0e:	loope  0x404f6b
  404f10:	fmul   st(5),st
  404f12:	pop    ebp
  404f13:	mov    ds:0xb16692f3,eax
  404f18:	cmp    eax,0x17657a4a
  404f1d:	cdq    
  404f1e:	sti    
  404f1f:	in     eax,0x38
  404f21:	fmul   DWORD PTR [esi]
  404f23:	(bad)  
  404f24:	into   
  404f25:	push   es
  404f26:	mov    edx,0x8044a955
  404f2b:	jo     0x404f0f
  404f2d:	cdq    
  404f2e:	dec    edx
  404f2f:	loopne 0x404f8b
  404f31:	je     0x404f7f
  404f33:	mov    ah,0xee
  404f35:	mov    dh,0xf9
  404f37:	ror    DWORD PTR [edi-0x1f],cl
  404f3a:	fwait
  404f3b:	xchg   ebp,eax
  404f3c:	push   cs
  404f3d:	adc    al,0x8f
  404f3f:	inc    edi
  404f40:	xlat   BYTE PTR ds:[ebx]
  404f41:	imul   ebx,DWORD PTR [ecx],0x46
  404f44:	jne    0x404f6c
  404f46:	pop    es
  404f47:	out    dx,al
  404f48:	cmp    bl,BYTE PTR [eax]
  404f4a:	inc    ebp
  404f4b:	and    eax,0xcbd2bac4
  404f50:	and    ecx,edi
  404f52:	xchg   ecx,eax
  404f53:	mov    dh,dl
  404f55:	lds    edi,FWORD PTR [ecx+0x75]
  404f58:	push   cs
  404f59:	test   al,0xd6
  404f5b:	das    
  404f5c:	ins    DWORD PTR es:[edi],dx
  404f5d:	sbb    dh,BYTE PTR [ebx+0x79]
  404f60:	xor    al,0x58
  404f62:	jmp    0x404fbb
  404f64:	repz aaa 
  404f66:	aaa    
  404f67:	dec    eax
  404f68:	out    dx,al
  404f69:	fdivr  DWORD PTR [ebp-0x64]
  404f6c:	aad    0xde
  404f6e:	xor    cl,BYTE PTR [edi-0x28e0d807]
  404f74:	shl    BYTE PTR [ecx-0x16],0xec
  404f78:	jns    0x404f43
  404f7a:	adc    BYTE PTR [esi+0x69f499e3],bh
  404f80:	jno    0x404f77
  404f82:	pop    ebx
  404f83:	sbb    eax,0x28903595
  404f88:	xlat   BYTE PTR ds:[ebx]
  404f89:	sub    al,0xe9
  404f8b:	scas   eax,DWORD PTR es:[edi]
  404f8c:	mov    dl,0xa8
  404f8e:	(bad)  [edx-0x1]
  404f91:	inc    edi
  404f92:	jmp    0x404f7c
  404f94:	in     al,dx
  404f95:	xchg   edx,eax
  404f96:	cld    
  404f97:	or     dh,BYTE PTR [edi+0x5c343723]
  404f9d:	in     eax,dx
  404f9e:	xor    cl,BYTE PTR ds:0xdc398a85
  404fa4:	test   eax,0x1480fb45
  404fa9:	xlat   BYTE PTR ds:[ebx]
  404faa:	push   eax
  404fab:	nop
  404fac:	pushf  
  404fad:	outs   dx,BYTE PTR ds:[esi]
  404fae:	out    dx,eax
  404faf:	mov    ds:0xbd872ea2,eax
  404fb4:	aaa    
  404fb5:	inc    ecx
  404fb6:	stos   DWORD PTR es:[edi],eax
  404fb7:	mov    bh,0x90
  404fb9:	cmp    DWORD PTR [esi+0x5],ebp
  404fbc:	ss cmp dh,ah
  404fbf:	call   0x5a374b8c
  404fc4:	add    ebp,0xd14fb311
  404fca:	mov    dh,0x35
  404fcc:	fiadd  DWORD PTR [eax-0x1e]
  404fcf:	xor    BYTE PTR gs:[ebx+eiz*2+0x1e],bh
  404fd4:	push   0x47a72a44
  404fd9:	call   0xb123:0x39144deb
  404fe0:	loop   0x404f88
  404fe2:	mov    ch,0xd7
  404fe4:	(bad)  [ebp-0x7e92a24a]
  404fea:	ins    DWORD PTR es:[edi],dx
  404feb:	fsubr  QWORD PTR [esi-0x9]
  404fee:	dec    ecx
  404fef:	iret   
  404ff0:	cli    
  404ff1:	jns    0x405071
  404ff3:	and    eax,0xec8fe95c
  404ff8:	jb     0x404fee
  404ffa:	jp     0x405005
  404ffc:	aad    0x5d
  404ffe:	je     0x405036
  405000:	inc    esp
  405001:	push   es
  405002:	or     eax,edx
  405004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405005:	push   cs
  405006:	outs   dx,BYTE PTR ds:[esi]
  405007:	scas   al,BYTE PTR es:[edi]
  405008:	stos   DWORD PTR es:[edi],eax
  405009:	fstp   QWORD PTR [ecx]
  40500b:	stos   DWORD PTR es:[edi],eax
  40500c:	bound  esp,QWORD PTR [edi-0xd3f058c]
  405012:	test   al,0xb0
  405014:	aam    0x3b
  405016:	hlt    
  405017:	mov    esp,0xc6728df7
  40501c:	mov    ch,0xb7
  40501e:	mov    ds:0x3a332fbf,eax
  405023:	pop    esp
  405024:	mov    al,0xa5
  405026:	mov    ecx,0xa02bce8a
  40502b:	shl    BYTE PTR [eax-0x1fc67d6e],1
  405031:	dec    edi
  405032:	stos   DWORD PTR es:[edi],eax
  405033:	cli    
  405034:	mov    ds:0x97d64e76,al
  405039:	mov    esi,0xbed4d0c4
  40503e:	sbb    bl,ch
  405040:	ja     0x40505d
  405042:	jmp    0x4050ab
  405044:	jle    0x405092
  405046:	shr    bh,cl
  405048:	xchg   ebp,eax
  405049:	test   BYTE PTR [eax-0x76],dl
  40504c:	sbb    al,0x39
  40504e:	cli    
  40504f:	pop    edi
  405050:	fsub   st,st(6)
  405052:	pop    esp
  405053:	dec    ebp
  405054:	adc    al,0xb6
  405056:	push   ecx
  405057:	lods   al,BYTE PTR ds:[esi]
  405058:	xor    edx,edi
  40505a:	div    DWORD PTR [ecx]
  40505c:	and    eax,0x3b6343ba
  405061:	xchg   ecx,eax
  405062:	(bad)  
  405063:	rol    BYTE PTR [edx],cl
  405065:	dec    ebp
  405066:	adc    bl,BYTE PTR [edi-0x38fda88e]
  40506c:	js     0x4050ce
  40506e:	sbb    eax,0xb565a39
  405073:	sbb    al,0x2
  405075:	jbe    0x404ffb
  405077:	stos   BYTE PTR es:[edi],al
  405078:	les    edx,FWORD PTR [ebp+0x604315e5]
  40507e:	mov    bh,0x29
  405080:	jne    0x4050a6
  405082:	dec    ebp
  405083:	daa    
  405084:	stos   DWORD PTR es:[edi],eax
  405085:	mov    bl,0xf2
  405087:	fs in  eax,0x3e
  40508a:	or     DWORD PTR [edi+ebp*2],edx
  40508d:	xor    al,0xb3
  40508f:	daa    
  405090:	mov    al,ds:0x3fd7b6f3
  405095:	mov    ch,0x33
  405097:	gs mov dh,0xda
  40509a:	fdiv   QWORD PTR [ebp+0x3]
  40509d:	xchg   ebp,eax
  40509e:	test   eax,0xc9ea222c
  4050a3:	gs jg  0x40505d
  4050a6:	lods   eax,DWORD PTR ds:[esi]
  4050a7:	or     DWORD PTR [esi],ebp
  4050a9:	jmp    DWORD PTR [ecx-0x1e032421]
  4050af:	xor    edx,DWORD PTR [edx-0x6198c352]
  4050b5:	mov    esi,0x61370d12
  4050ba:	cmp    eax,0xd5a9033a
  4050bf:	mov    esp,0x119d1b20
  4050c4:	sar    DWORD PTR [ebp-0x22389b0a],1
  4050ca:	dec    ecx
  4050cb:	cmp    dl,BYTE PTR [ecx+0x7675866f]
  4050d1:	jecxz  0x4050b2
  4050d3:	adc    dh,dl
  4050d5:	mov    esi,0x5198b4a1
  4050da:	sub    ecx,DWORD PTR [esi-0x6c]
  4050dd:	mov    ecx,0x34301659
  4050e2:	out    0xe6,al
  4050e4:	stos   BYTE PTR es:[edi],al
  4050e5:	dec    eax
  4050e6:	rol    DWORD PTR [edx],cl
  4050e8:	ins    DWORD PTR es:[edi],dx
  4050e9:	adc    al,0x3f
  4050eb:	mov    al,bl
  4050ed:	sbb    al,0x12
  4050ef:	cmp    esi,esi
  4050f1:	push   es
  4050f2:	pop    edx
  4050f4:	cmc    
  4050f5:	gs (bad) 
  4050f7:	hlt    
  4050f8:	xchg   dl,cl
  4050fa:	aas    
  4050fb:	sahf   
  4050fc:	sbb    eax,0x13a5a9fc
  405101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405102:	sbb    bl,BYTE PTR [ecx+0x23da0e55]
  405108:	pop    eax
  405109:	push   cs
  40510a:	cli    
  40510b:	stos   BYTE PTR es:[edi],al
  40510c:	cmp    BYTE PTR [esi-0x34],dh
  40510f:	int    0xd2
  405111:	cmp    DWORD PTR [edi+0x63a1f25a],ecx
  405117:	sub    al,0xed
  405119:	mov    ch,0xf1
  40511b:	sar    BYTE PTR [ebx-0xb613868],cl
  405121:	add    al,0x8e
  405123:	push   cs
  405124:	ins    BYTE PTR es:[edi],dx
  405125:	and    al,0x43
  405127:	jo     0x4050ed
  405129:	xchg   edi,eax
  40512a:	adc    al,0x2b
  40512c:	cmp    eax,0x115ff973
  405131:	lock in eax,0xfe
  405134:	ficomp DWORD PTR [edi]
  405136:	lea    esi,[edx-0x4ab30db5]
  40513c:	pop    ds
  40513d:	(bad)  
  40513e:	cmp    eax,0x5f05ecdb
  405143:	fxtract 
  405145:	lahf   
  405146:	add    ebp,DWORD PTR [eax-0x5052e81a]
  40514c:	fs in  eax,0x8e
  40514f:	add    BYTE PTR [ebx],dh
  405151:	pop    edi
  405152:	js     0x4051bb
  405154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405155:	scas   eax,DWORD PTR es:[edi]
  405156:	fnstenv [ecx]
  405158:	ins    DWORD PTR es:[edi],dx
  405159:	pop    ebx
  40515a:	test   ebp,ebx
  40515c:	outs   dx,DWORD PTR ds:[esi]
  40515d:	mov    ah,0xb5
  40515f:	hlt    
  405160:	call   0x63d2:0x6bb99cba
  405167:	test   BYTE PTR [ecx-0xe],0xfb
  40516b:	enter  0x7fab,0xfc
  40516f:	enter  0x9f1f,0xf1
  405173:	ds jmp 0x4051f5
  405176:	(bad)  
  405177:	adc    ah,BYTE PTR [edi+0x13]
  40517a:	pop    edi
  40517b:	cs dec esi
  40517d:	xchg   ebp,eax
  40517e:	fsubr  QWORD PTR [eax-0x23178ebc]
  405184:	jns    0x4051db
  405186:	dec    DWORD PTR [esi]
  405188:	das    
  405189:	aad    0x2d
  40518b:	cmp    BYTE PTR [esi],0x1a
  40518e:	cmp    dh,BYTE PTR ds:0x1a9b5ba4
  405194:	xchg   DWORD PTR [esi],esi
  405196:	push   ebx
  405197:	(bad)  
  405198:	mov    ecx,0xedd362bf
  40519d:	dec    esi
  40519e:	sub    edx,0xb6032f2
  4051a4:	pop    eax
  4051a5:	push   0xfffffffb
  4051a7:	mov    ah,0x9c
  4051a9:	xchg   edi,eax
  4051aa:	pop    ebx
  4051ab:	sbb    DWORD PTR [edi+0x48],esi
  4051ae:	inc    edx
  4051af:	int3   
  4051b0:	mov    BYTE PTR [ecx+0x7a],dl
  4051b3:	stos   DWORD PTR es:[edi],eax
  4051b4:	or     eax,0xe77e1fee
  4051b9:	hlt    
  4051ba:	ficom  DWORD PTR [ecx+0x53]
  4051bd:	aam    0xab
  4051bf:	pop    edi
  4051c0:	adc    bl,ah
  4051c2:	push   ecx
  4051c3:	dec    esp
  4051c4:	or     BYTE PTR [edx+0x7f2a9516],dh
  4051ca:	push   es
  4051cb:	mov    ds:0x96f415c9,al
  4051d0:	ret    0xe4f8
  4051d3:	cmp    al,0xbb
  4051d5:	imul   edx,DWORD PTR [eax+0x3118d8c7],0x70e4e7ab
  4051df:	pop    ebx
  4051e0:	mov    DWORD PTR [edx+ebx*8-0x75],0x19717a66
  4051e8:	lahf   
  4051e9:	aas    
  4051ea:	sub    ch,BYTE PTR [edx-0x3b80e1d8]
  4051f0:	pushf  
  4051f1:	pushf  
  4051f2:	lds    ebx,FWORD PTR [eax]
  4051f4:	push   ebp
  4051f5:	nop
  4051f6:	lods   eax,DWORD PTR ds:[esi]
  4051f7:	mul    BYTE PTR [esp+esi*8+0x22]
  4051fb:	mov    edi,0x3b76dfa2
  405200:	xor    al,0xac
  405202:	jmp    0xa648:0x95a09218
  405209:	inc    esp
  40520a:	ror    ah,0x84
  40520d:	inc    edx
  40520e:	mov    dl,0xa2
  405210:	xchg   ebx,eax
  405211:	pop    ds
  405212:	popa   
  405213:	sub    bl,BYTE PTR [ecx-0x5d12e267]
  405219:	mov    cl,0x4
  40521b:	in     eax,dx
  40521c:	psrlw  mm0,QWORD PTR [ebp+0x33496d29]
  405223:	ret    
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0x6c9794ee
  405804:	push   ebx
  405805:	dec    ebp
  405806:	loopne 0x405867
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	mov    cl,0xb
  405810:	mov    esp,0x2f1cc11d
  405815:	xchg   esp,eax
  405816:	cmp    esi,DWORD PTR [esi-0x19]
  405819:	cld    
  40581a:	ins    DWORD PTR es:[edi],dx
  40581b:	cmp    DWORD PTR [ebp+eiz*8+0x23ad1901],0xf093f5e
  405826:	jg     0x4058a2
  405828:	dec    ebx
  405829:	push   es
  40582a:	inc    edi
  40582b:	xor    dl,BYTE PTR ss:[ebx-0x73c2d23c]
  405832:	push   0x0
  405834:	mov    ?,WORD PTR [edx-0x264e62f1]
  40583a:	mov    dl,0x9d
  40583c:	push   cs
  40583d:	sbb    eax,0xc742ceb3
  405842:	push   ebx
  405843:	sbb    DWORD PTR [ebx+0x78],ebx
  405846:	inc    ebx
  405847:	mov    dl,0x2a
  405849:	or     BYTE PTR [edi-0x67],ah
  40584c:	test   eax,0x18052b33
  405851:	jno    0x4058bc
  405853:	dec    ebp
  405854:	fwait
  405855:	mov    dl,0xb
  405857:	sbb    ah,0x83
  40585a:	cld    
  40585b:	sbb    esp,DWORD PTR [edi]
  40585d:	jmp    0x405844
  40585f:	fwait
  405860:	mov    DWORD PTR fs:[ebx+0x6a],edx
  405864:	repz push ebp
  405866:	js     0x40581f
  405868:	pop    ebx
  405869:	out    dx,eax
  40586a:	icebp  
  40586b:	xchg   BYTE PTR [esi+0x50],dl
  40586e:	aam    0x3f
  405870:	mov    eax,ds:0x31ff7d83
  405875:	out    0x50,al
  405877:	daa    
  405878:	mov    bl,0xe1
  40587a:	push   edi
  40587b:	shl    BYTE PTR [esi+0x51bf059a],1
  405881:	sub    DWORD PTR [edi+0x14],ebx
  405884:	xchg   esi,eax
  405885:	std    
  405886:	test   BYTE PTR [esp+edx*8-0x77ada7b3],0xd5
  40588e:	sbb    al,0xd9
  405890:	sbb    DWORD PTR [edi-0x3c],0xffffffca
  405894:	dec    eax
  405895:	cmp    dl,BYTE PTR [edi+0x6]
  405898:	pop    ds
  405899:	data16 in al,0xaf
  40589c:	push   ss
  40589d:	inc    eax
  40589e:	test   eax,0x69e833ec
  4058a3:	and    dl,BYTE PTR [esp+ecx*1+0x5d]
  4058a7:	xchg   edx,eax
  4058a8:	jp     0x4058e2
  4058aa:	into   
  4058ab:	arpl   WORD PTR [esi+0x4e025031],si
  4058b1:	data16 xor al,0xc4
  4058b4:	outs   dx,DWORD PTR ds:[esi]
  4058b5:	and    ch,al
  4058b7:	xor    al,0x6
  4058b9:	push   eax
  4058ba:	push   esp
  4058bb:	jbe    0x4058d5
  4058bd:	out    0xb4,eax
  4058bf:	ins    DWORD PTR es:[edi],dx
  4058c0:	inc    esi
  4058c1:	shl    BYTE PTR [eax],cl
  4058c3:	arpl   di,bp
  4058c5:	(bad)
  4058c9:	dec    ecx
  4058ca:	jns    0x4058c1
  4058cc:	adc    edi,DWORD PTR [edi-0x77360cf9]
  4058d2:	xchg   esi,eax
  4058d3:	repz jmp 0x5db3:0x53c218de
  4058db:	push   cs
  4058dc:	mov    al,ds:0x113fc10d
  4058e1:	ds into 
  4058e3:	hlt    
  4058e4:	jbe    0x405924
  4058e6:	xor    DWORD PTR [esi+0x214986a4],ebp
  4058ec:	fcmovu st,st(0)
  4058ee:	fst    QWORD PTR [esi-0x33ebb7f7]
  4058f4:	xchg   DWORD PTR [esi+0x74],edx
  4058f7:	cmp    edx,DWORD PTR [ebx-0x37]
  4058fa:	and    ebp,DWORD PTR ds:0xff64976f
  405900:	add    DWORD PTR [ecx+0x78],ebp
  405903:	in     eax,dx
  405904:	inc    edi
  405905:	sahf   
  405906:	call   0xd62d:0x162d144
  40590d:	and    edi,DWORD PTR [esi]
  40590f:	int3   
  405910:	fwait
  405911:	inc    esi
  405912:	imul   esi,DWORD PTR [ecx],0xbb0a74bc
  405918:	mov    cl,0x54
  40591a:	(bad)  [edx]
  40591c:	in     eax,0xe7
  40591e:	add    al,0xf4
  405920:	or     eax,DWORD PTR [esp-0x56]
  405924:	jecxz  0x4058d9
  405926:	adc    bh,BYTE PTR [esi]
  405928:	loop   0x40593a
  40592a:	das    
  40592b:	daa    
  40592c:	aas    
  40592d:	fdiv   DWORD PTR [ecx]
  40592f:	inc    esp
  405930:	sbb    DWORD PTR [ebp+0x5b1fcacd],ebx
  405936:	xchg   BYTE PTR [ebx+ecx*2-0x5299456c],bl
  40593d:	mov    dl,0xde
  40593f:	or     al,0x94
  405941:	or     DWORD PTR [ebx+0xb6e101e],esi
  405947:	test   BYTE PTR [edx+0x38],cl
  40594a:	fnstcw WORD PTR [edx]
  40594c:	ss push ebx
  40594e:	fsubr  st(4),st
  405950:	ror    DWORD PTR [ebp+0x3541b813],cl
  405956:	sbb    eax,0x3ef59f7b
  40595b:	mov    bl,BYTE PTR [ebx]
  40595d:	into   
  40595e:	sbb    eax,0xe7a50b68
  405963:	aad    0xf5
  405965:	es jmp 0xcd38:0xd9f5ff04
  40596d:	pop    esi
  40596e:	jl     0x405950
  405970:	aam    0xb0
  405972:	mov    bl,0x5b
  405974:	or     ah,BYTE PTR [esp+eax*2-0xbcc4f60]
  40597b:	cmp    BYTE PTR [esi],0x96
  40597e:	mov    esi,0xfdeebebd
  405983:	dec    esp
  405984:	scas   al,BYTE PTR es:[edi]
  405985:	and    DWORD PTR [edi-0x5d],ebp
  405988:	mov    ecx,0x4fe1949d
  40598d:	call   0xbc19:0x7a3badc4
  405994:	adc    ah,BYTE PTR [ebp+0x3bd7f1b]
  40599a:	add    al,0x84
  40599c:	pop    esi
  40599d:	arpl   WORD PTR [esi],si
  40599f:	rcr    BYTE PTR [edi-0x703902c3],1
  4059a5:	xor    edx,DWORD PTR [esi+ebp*2]
  4059a8:	rcr    DWORD PTR [ecx+0x726302da],0x16
  4059af:	pop    ebx
  4059b0:	repnz push ebp
  4059b2:	cld    
  4059b3:	or     DWORD PTR [ebp+0x26],edx
  4059b6:	push   esi
  4059b7:	jle    0x4059b4
  4059b9:	(bad)  
  4059ba:	push   cs
  4059bb:	stc    
  4059bc:	inc    esi
  4059bd:	xor    al,BYTE PTR [eax+0x140bb415]
  4059c3:	arpl   WORD PTR [ebp-0x456e74b9],sp
  4059c9:	(bad)  
  4059cb:	xchg   edx,eax
  4059cc:	push   edi
  4059cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ce:	mov    DWORD PTR [esi+0x7f8d16ef],ebp
  4059d4:	loope  0x40596a
  4059d6:	jl     0x405997
  4059d8:	jbe    0x405979
  4059da:	cmp    edi,DWORD PTR [ebp-0x28c26095]
  4059e0:	hlt    
  4059e1:	pop    ebx
  4059e2:	push   0x35
  4059e4:	mov    eax,ds:0x32d1e9c8
  4059e9:	jbe    0x4059d9
  4059eb:	mov    esp,DWORD PTR [ebx]
  4059ed:	outs   dx,BYTE PTR ds:[esi]
  4059ee:	icebp  
  4059ef:	inc    ebx
  4059f0:	dec    ebx
  4059f1:	dec    ebp
  4059f2:	ja     0x405979
  4059f4:	sbb    DWORD PTR [ebp-0x4d],ecx
  4059f7:	mov    esi,0xb75b72b5
  4059fc:	push   ebp
  4059fd:	int    0x7b
  4059ff:	mov    ecx,0x3bacdfc6
  405a04:	int3   
  405a05:	fld    QWORD PTR [ebx]
  405a07:	mov    eax,ds:0xe93fa6f2
  405a0c:	add    eax,0x3a478227
  405a11:	dec    edi
  405a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a13:	icebp  
  405a14:	inc    ebp
  405a15:	rcr    dl,0x24
  405a18:	jns    0x405a8a
  405a1a:	push   0xe905bc57
  405a1f:	jp     0x405a66
  405a21:	pop    edx
  405a22:	add    eax,ecx
  405a24:	pop    ebx
  405a25:	loopne 0x4059a7
  405a27:	fs xor eax,0x497fe72c
  405a2d:	xchg   ebx,eax
  405a2e:	data16 arpl si,di
  405a31:	loop   0x405a69
  405a33:	adc    cl,dl
  405a35:	cmp    eax,0xb00c3989
  405a3a:	in     eax,dx
  405a3b:	repz sbb dl,ch
  405a3e:	adc    al,0x30
  405a40:	mov    edi,0x67a41659
  405a45:	mov    ds:0x239670cd,eax
  405a4a:	iret   
  405a4b:	test   al,0x39
  405a4d:	inc    esi
  405a4e:	push   eax
  405a4f:	rcl    BYTE PTR [ecx+0x36],cl
  405a52:	dec    edx
  405a53:	push   ebp
  405a54:	popf   
  405a55:	jmp    0xa7afa1e9
  405a5a:	fcmovne st,st(0)
  405a5c:	pushf  
  405a5d:	jbe    0x4059f9
  405a5f:	in     al,dx
  405a60:	imul   esp,DWORD PTR [eax+esi*1-0x4ca198bc],0x554aa805
  405a6b:	ins    BYTE PTR es:[edi],dx
  405a6c:	mov    BYTE PTR [eax+0x7d],ah
  405a6f:	sbb    esi,ebx
  405a71:	jecxz  0x405a1d
  405a73:	leave  
  405a74:	test   DWORD PTR [ebp-0x3567c3f9],0xfe0330e
  405a7e:	jmpw   0xadee
  405a82:	cwde   
  405a83:	xchg   esi,eax
  405a84:	mov    al,0xde
  405a86:	adc    BYTE PTR [eax],0x84
  405a89:	test   eax,0xde768475
  405a8e:	xor    BYTE PTR fs:[esp+eax*4],bh
  405a92:	mov    ebx,0x8796475
  405a97:	sbb    eax,0xd9ddc84a
  405a9c:	jb     0x405ace
  405a9e:	mov    WORD PTR [ebx],?
  405aa0:	or     DWORD PTR [edx-0x79e53100],edx
  405aa6:	jbe    0x405afb
  405aa8:	icebp  
  405aa9:	lock scas al,BYTE PTR es:[edi]
  405aab:	xchg   ecx,eax
  405aac:	jo     0x405b24
  405aae:	fnsave fs:[edi-0x5ae610c7]
  405ab5:	xlat   BYTE PTR ds:[ebx]
  405ab6:	cmc    
  405ab7:	mov    dl,0xf7
  405ab9:	test   eax,0x2ac09e72
  405abe:	test   DWORD PTR [eax+ebp*1+0x23],edi
  405ac2:	adc    BYTE PTR [eax-0x130bcf3c],cl
  405ac8:	std    
  405ac9:	ror    BYTE PTR [ecx+ebp*1],1
  405acc:	je     0x405b1f
  405ace:	sub    BYTE PTR [esp+edx*2],bl
  405ad1:	dec    esp
  405ad2:	fadd   st(5),st
  405ad4:	pushf  
  405ad5:	adc    DWORD PTR [edi+0x53],esi
  405ad8:	loop   0x405b2a
  405ada:	mov    bl,0xcb
  405adc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405add:	xor    eax,0xc32beaa7
  405ae2:	dec    edi
  405ae3:	pop    ebx
  405ae4:	arpl   WORD PTR [edi+0x41c48cbb],bp
  405aea:	mov    edi,0x5ddac866
  405aef:	repz push edx
  405af1:	xlat   BYTE PTR ds:[ebx]
  405af2:	nop
  405af3:	(bad)  
  405af4:	arpl   WORD PTR [eax],bp
  405af6:	cmp    eax,0x542a5149
  405afb:	test   DWORD PTR [ebx],esi
  405afd:	pop    ecx
  405afe:	test   BYTE PTR [eax+0x1a52763f],0x4e
  405b05:	dec    esi
  405b06:	xchg   edx,eax
  405b07:	shr    BYTE PTR [ecx],0xb6
  405b0a:	mov    DWORD PTR [ebp+0xb],eax
  405b0d:	pop    ds
  405b0e:	pop    ds
  405b0f:	pop    es
  405b10:	mov    eax,0x68d78e24
  405b15:	ret    
  405b16:	popa   
  405b17:	jae    0x405b19
  405b19:	popa   
  405b1a:	mov    esp,0xe8a6c65f
  405b1f:	push   cs
  405b20:	pop    es
  405b21:	jne    0x405b98
  405b23:	into   
  405b24:	scas   eax,DWORD PTR es:[edi]
  405b25:	data16 jae 0x405b26
  405b28:	push   0x9
  405b2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b2b:	and    ebp,DWORD PTR [esi+esi*8+0x6f]
  405b2f:	sbb    DWORD PTR [ebx],0x2da8f64f
  405b35:	jg     0x405acc
  405b37:	stos   DWORD PTR es:[edi],eax
  405b38:	mov    fs:0x8c260118,al
  405b3e:	stos   BYTE PTR es:[edi],al
  405b3f:	aas    
  405b40:	(bad)  
  405b41:	or     eax,0x8bcdea83
  405b46:	scas   al,BYTE PTR es:[edi]
  405b47:	sbb    eax,0xbbc94a45
  405b4c:	dec    edx
  405b4d:	fisttp DWORD PTR [ebx]
  405b4f:	dec    esp
  405b50:	adc    cl,ah
  405b52:	cmp    ah,BYTE PTR [edi-0xdf79b93]
  405b58:	adc    ah,ah
  405b5a:	sbb    al,0xd2
  405b5c:	add    ebp,DWORD PTR [eax-0x1e6c9ed2]
  405b62:	xor    ebx,0x65329e1b
  405b68:	pop    eax
  405b69:	dec    esi
  405b6a:	pusha  
  405b6b:	out    dx,al
  405b6c:	retf   
  405b6d:	fsub   QWORD PTR [eax-0x26]
  405b70:	enter  0x5797,0xf6
  405b74:	sbb    ebp,DWORD PTR es:[ebp+ebx*4+0x2b]
  405b79:	jns    0x405bbd
  405b7b:	dec    edx
  405b7c:	jne    0x405bdc
  405b7e:	cli    
  405b7f:	daa    
  405b80:	dec    ebp
  405b81:	icebp  
  405b82:	inc    eax
  405b83:	mov    esi,DWORD PTR [ebp-0x7ad1c10f]
  405b89:	(bad)  
  405b8a:	fimul  WORD PTR [ecx-0x7713cfb]
  405b90:	pushf  
  405b91:	sbb    bl,BYTE PTR [eax+0x77]
  405b94:	jns    0x405b9a
  405b96:	or     DWORD PTR [ecx+0x39233336],ecx
  405b9c:	shl    BYTE PTR [edx+edx*8-0x44],0x78
  405ba1:	mov    ebx,0x1a6498f
  405ba6:	sub    eax,0x7e67ede3
  405bab:	xchg   ecx,eax
  405bac:	xchg   BYTE PTR [edx+eax*4],bh
  405baf:	xor    esi,DWORD PTR [eax-0x69]
  405bb2:	push   edi
  405bb3:	arpl   bx,bx
  405bb5:	xchg   ebx,eax
  405bb6:	mov    ds:0xa9825aef,al
  405bbb:	pop    ebx
  405bbc:	not    DWORD PTR [edi]
  405bbe:	imul   edi,ebp,0x24866d55
  405bc4:	into   
  405bc5:	adc    bh,bl
  405bc7:	adc    ebx,esp
  405bc9:	cmp    ebp,ebp
  405bcb:	dec    ebx
  405bcc:	ret    0xb8a
  405bcf:	sub    DWORD PTR [edi],eax
  405bd1:	mov    dh,BYTE PTR [edx-0x3f]
  405bd4:	lods   al,BYTE PTR ds:[esi]
  405bd5:	push   cs
  405bd6:	adc    BYTE PTR [ebx],bl
  405bd8:	pop    esp
  405bd9:	push   0x781e0d0c
  405bde:	(bad)
  405be2:	add    edx,esp
  405be4:	mov    ecx,0x5921780d
  405be9:	(bad)  
  405bea:	vcmpsd xmm0,xmm4,QWORD PTR [edi+0x4e227f4b],0xf5
  405bf3:	mov    eax,DWORD PTR [eax-0x4a28cb42]
  405bf9:	and    eax,0x1d057211
  405bfe:	fbstp  TBYTE PTR [edx-0xd]
  405c01:	es enter 0xdf6b,0xbe
  405c06:	pop    ebp
  405c07:	neg    DWORD PTR [ebp-0x5f6e823e]
  405c0d:	adc    DWORD PTR [ebp-0x22],edx
  405c10:	jg     0x405ba1
  405c12:	fild   WORD PTR [edx+ecx*4-0x59fd82e6]
  405c19:	pop    edx
  405c1a:	shl    BYTE PTR [eax],0xaf
  405c1d:	mov    esp,0x7e33226e
  405c22:	mov    al,0x64
  405c24:	mov    cl,0xa1
  405c26:	jo     0x405c99
  405c28:	repnz sub esp,ecx
  405c2b:	sti    
  405c2c:	repz mov ebp,0x9809b8a7
  405c32:	push   eax
  405c33:	enter  0x639c,0x7e
  405c37:	jb     0x405c43
  405c39:	mov    dl,0xa7
  405c3b:	ss (bad) 
  405c3d:	(bad)  
  405c3e:	xchg   esi,eax
  405c3f:	pop    esi
  405c40:	fnstsw WORD PTR ds:0xd0e1aef1
  405c46:	and    DWORD PTR [ebx-0x4ba4d5fe],edi
  405c4c:	mov    cl,BYTE PTR es:[edx-0x250bb9ca]
  405c53:	pushf  
  405c54:	xor    eax,0x8a6f90e8
  405c59:	mov    ebx,0xcca26816
  405c5e:	sub    cl,bh
  405c60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c61:	mov    esi,0x3425320e
  405c66:	pushf  
  405c67:	pop    ss
  405c68:	inc    eax
  405c69:	and    DWORD PTR [edi],ebp
  405c6b:	scas   eax,DWORD PTR es:[edi]
  405c6c:	shl    DWORD PTR [ebx],cl
  405c6e:	or     al,0x3
  405c70:	push   eax
  405c71:	fbstp  TBYTE PTR [edx-0x2b]
  405c74:	mov    ebp,0xde97f94b
  405c79:	js     0x405c5f
  405c7b:	dec    ebx
  405c7c:	xchg   ebx,eax
  405c7d:	xchg   edx,eax
  405c7e:	inc    eax
  405c7f:	xchg   ecx,eax
  405c80:	adc    BYTE PTR [ecx+0x623e4752],0x7b
  405c87:	mov    eax,0x9437bcf5
  405c8c:	int3   
  405c8d:	repz es mov dh,0x6e
  405c91:	rol    BYTE PTR [ebx-0x6],1
  405c94:	mov    al,0x7e
  405c96:	cmp    cl,bh
  405c98:	adc    cl,0x7d
  405c9b:	arpl   bp,bp
  405c9d:	jmp    0x405c9b
  405c9f:	jg     0x405cf8
  405ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ca2:	rcr    ebx,1
  405ca4:	imul   DWORD PTR [ebx]
  405ca6:	mov    ds:0xdfc62ece,al
  405cab:	sbb    eax,0x2a08bf74
  405cb0:	inc    ebp
  405cb1:	or     dl,BYTE PTR [edx-0xebddad0]
  405cb7:	mov    es,WORD PTR [edi+0x75024c07]
  405cbd:	pop    ds
  405cbe:	dec    esp
  405cbf:	in     al,dx
  405cc0:	repz push esp
  405cc2:	mov    al,0x48
  405cc4:	fs leave 
  405cc6:	mov    edi,0x5bbfbd7b
  405ccb:	dec    ebp
  405ccc:	imul   ebp,ebx,0xe6a87cbd
  405cd2:	push   eax
  405cd3:	sub    DWORD PTR [ecx-0x7cdbbfac],ebp
  405cd9:	cmp    BYTE PTR [edi+0x42ba847],ah
  405cdf:	dec    ebx
  405ce0:	sub    al,BYTE PTR [eax-0x4d]
  405ce3:	push   ebx
  405ce4:	jl     0x405d36
  405ce6:	sti    
  405ce7:	jecxz  0x405c8b
  405ce9:	jp     0x405ca7
  405ceb:	pop    ds
  405cec:	xabort 0x3f
  405cef:	mov    ecx,0x8273a712
  405cf4:	retf   
  405cf5:	(bad)  
  405cf6:	or     al,0xc7
  405cf8:	sbb    BYTE PTR [eax],ch
  405cfa:	aam    0x29
  405cfc:	retf   
  405cfd:	xchg   esp,eax
  405cfe:	sbb    ch,BYTE PTR [edx-0x68]
  405d01:	mov    ebp,DWORD PTR [edi+ecx*2+0x204668dc]
  405d08:	jp     0x405c91
  405d0a:	jae    0x405d67
  405d0c:	push   0x4f
  405d0e:	scas   eax,DWORD PTR es:[edi]
  405d0f:	and    dh,BYTE PTR [ebp+0x411913f5]
  405d15:	icebp  
  405d16:	push   0x488db9c2
  405d1b:	jp     0x405ca8
  405d1d:	es or  eax,esp
  405d20:	das    
  405d21:	pop    esi
  405d22:	pushf  
  405d23:	dec    eax
  405d24:	addr16 into 
  405d26:	or     dl,BYTE PTR ds:0xbfe239c
  405d2c:	add    BYTE PTR [esi+0xa],ah
  405d2f:	jbe    0x405cba
  405d31:	jge    0x405d38
  405d33:	lds    ebx,FWORD PTR [esi+0x5b412712]
  405d39:	stos   BYTE PTR es:[edi],al
  405d3a:	out    0x81,al
  405d3c:	out    dx,eax
  405d3d:	(bad)  
  405d3e:	adc    bl,dl
  405d40:	cmp    dh,dl
  405d42:	dec    ecx
  405d43:	fsubr  QWORD PTR ds:0xb24f1d67
  405d49:	fstp   QWORD PTR [ecx]
  405d4b:	clc    
  405d4c:	sub    esp,DWORD PTR ds:0x2d145954
  405d52:	inc    edx
  405d53:	cwde   
  405d54:	xchg   edx,eax
  405d55:	inc    esi
  405d56:	jp     0x405d87
  405d58:	ja     0x405db5
  405d5a:	ds aas 
  405d5c:	in     al,dx
  405d5d:	xchg   DWORD PTR [esi-0x1a],esi
  405d60:	std    
  405d61:	push   ds
  405d62:	je     0x405d93
  405d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d65:	mov    dh,al
  405d67:	inc    edx
  405d68:	in     al,0xe2
  405d6a:	sub    BYTE PTR [ebx],cl
  405d6c:	dec    esi
  405d6d:	sahf   
  405d6e:	add    BYTE PTR [ebx],cl
  405d70:	ret    0x1ebd
  405d73:	scas   eax,DWORD PTR es:[edi]
  405d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d75:	jnp    0x405d12
  405d77:	mov    edi,0xf6dbf2b2
  405d7c:	push   eax
  405d7d:	mov    bl,BYTE PTR ds:0x587c9388
  405d83:	test   BYTE PTR [eax-0x2c],0xa8
  405d87:	mov    al,ds:0x298bbd48
  405d8c:	adc    eax,0xa835f475
  405d91:	fsubr  DWORD PTR [edx-0x76]
  405d94:	lea    esp,[eax+0x12449c58]
  405d9a:	cmp    DWORD PTR [eax+0x5c],edx
  405d9d:	ja     0x405de6
  405d9f:	cmp    esp,esp
  405da1:	jl     0x405d4d
  405da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405da4:	push   ss
  405da5:	mov    al,0x18
  405da7:	lods   eax,DWORD PTR ds:[esi]
  405da8:	rol    edi,0xe1
  405dab:	ret    0x1a2b
  405dae:	or     al,0x75
  405db0:	xor    edi,eax
  405db2:	adc    BYTE PTR [ebp+0x49],cl
  405db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405db6:	cli    
  405db7:	pusha  
  405db8:	or     DWORD PTR [eax+ebp*4+0x66fbb175],edx
  405dbf:	or     dl,BYTE PTR [ebp+eax*8+0x7a]
  405dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dc4:	adc    edx,DWORD PTR [ecx]
  405dc6:	dec    esp
  405dc7:	pop    esp
  405dc8:	cmp    eax,0xd92c048e
  405dcd:	xchg   ebp,ecx
  405dcf:	inc    edx
  405dd0:	ins    DWORD PTR es:[edi],dx
  405dd1:	aaa    
  405dd2:	out    dx,al
  405dd3:	cmp    bh,BYTE PTR [edx]
  405dd5:	(bad)  ds:0xaff089a4
  405ddb:	mov    al,0x1f
  405ddd:	rcr    DWORD PTR [esi],1
  405ddf:	mov    eax,0x7d5996ea
  405de4:	inc    ebp
  405de5:	push   esp
  405de6:	test   eax,0xe2134244
  405deb:	jl     0x405ddd
  405ded:	mov    dl,0xa4
  405def:	pop    esp
  405df0:	in     al,dx
  405df1:	aad    0xb
  405df3:	fidiv  DWORD PTR [ecx-0x62]
  405df6:	sbb    eax,ecx
  405df8:	pop    es
  405df9:	dec    ebx
  405dfa:	(bad)  
  405dfb:	mov    ecx,0x9beda0ab
  405e00:	adc    BYTE PTR [eax+0x6],bl
  405e03:	and    BYTE PTR ds:0xa6ac3571,0xd6
  405e0a:	std    
  405e0b:	mov    ch,0xed
  405e0d:	(bad)
  405e10:	retf   0xb37a
  405e13:	push   es
  405e14:	dec    edi
  405e15:	fwait
  405e16:	lods   eax,DWORD PTR ds:[esi]
  405e17:	xor    al,0xf2
  405e19:	in     eax,0xa7
  405e1b:	jb     0x405e03
  405e1d:	adc    al,0x97
  405e1f:	icebp  
  405e20:	(bad)  [ecx-0x2c6fa668]
  405e26:	cmp    edx,ebx
  405e28:	mov    bl,0xec
  405e2a:	push   esi
  405e2b:	pusha  
  405e2c:	xchg   esi,eax
  405e2d:	leave  
  405e2e:	(bad)  
  405e2f:	push   ss
  405e30:	sbb    ch,0x84
  405e33:	dec    ebx
  405e34:	inc    esp
  405e35:	xchg   esp,eax
  405e36:	mov    ebp,DWORD PTR [edi+0x2b]
  405e39:	jbe    0x405e38
  405e3b:	loop   0x405dd3
  405e3d:	loopne 0x405dec
  405e3f:	out    0x1e,eax
  405e41:	and    dl,BYTE PTR [ebp-0x13635b6f]
  405e47:	dec    edi
  405e48:	ror    dh,cl
  405e4a:	icebp  
  405e4b:	inc    edi
  405e4c:	ins    DWORD PTR es:[edi],dx
  405e4d:	dec    ebx
  405e4e:	jo     0x405e6b
  405e50:	in     al,0x35
  405e52:	lahf   
  405e53:	xchg   edi,eax
  405e54:	sub    eax,0x1bcfa46e
  405e59:	sub    ecx,edi
  405e5b:	push   ss
  405e5c:	pusha  
  405e5d:	lods   eax,DWORD PTR ds:[esi]
  405e5e:	lock and bl,BYTE PTR [edi-0x6940c2b9]
  405e65:	test   BYTE PTR [eax-0x72],al
  405e68:	jp     0x405e15
  405e6a:	faddp  st(2),st
  405e6c:	(bad)  
  405e6d:	jb     0x405e80
  405e6f:	mov    esp,0x4b0989bf
  405e74:	adc    ch,BYTE PTR [ecx-0x3638a7cb]
  405e7a:	dec    edi
  405e7b:	mov    dh,0x74
  405e7d:	sbb    DWORD PTR ds:0xd664e0e7,edi
  405e83:	outs   dx,DWORD PTR ds:[esi]
  405e84:	mov    esp,0xaf5e8be9
  405e89:	xlat   BYTE PTR ds:[ebx]
  405e8a:	js     0x405ee2
  405e8c:	mov    ds:0xcab2eec8,eax
  405e91:	cmp    al,0x5d
  405e93:	xchg   esi,eax
  405e94:	dec    esi
  405e95:	pop    ss
  405e96:	jno    0x405ea4
  405e98:	(bad)  
  405e99:	cmp    ebp,esp
  405e9b:	mov    bl,ch
  405e9d:	cmp    bh,BYTE PTR [eax-0x51]
  405ea0:	ror    DWORD PTR [edx],1
  405ea2:	push   0x51
  405ea4:	nop
  405ea5:	inc    ebx
  405ea6:	pop    ecx
  405ea7:	dec    ecx
  405ea8:	popf   
  405ea9:	mov    WORD PTR [eax+0x68],?
  405eac:	stos   BYTE PTR es:[edi],al
  405ead:	div    BYTE PTR [ebx]
  405eaf:	mov    ch,0x49
  405eb1:	mov    ah,0xd5
  405eb3:	call   0x81283d2a
  405eb8:	or     dh,BYTE PTR [edi-0x12242c4a]
  405ebe:	test   al,0xfd
  405ec0:	or     esp,ebx
  405ec2:	pop    edx
  405ec3:	jo     0x405e69
  405ec5:	and    eax,0x11b7504e
  405eca:	inc    edx
  405ecb:	in     eax,dx
  405ecc:	dec    ecx
  405ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ece:	fistp  QWORD PTR [esi+0xfbad687]
  405ed4:	in     al,dx
  405ed5:	pop    ebp
  405ed6:	xor    BYTE PTR ds:0xa4f161aa,dh
  405edc:	daa    
  405edd:	cmp    dl,bl
  405edf:	cmp    esi,DWORD PTR [esi+0x7e]
  405ee2:	aaa    
  405ee3:	sbb    DWORD PTR [eax+0x23b260a3],ebp
  405ee9:	lods   eax,DWORD PTR ds:[esi]
  405eea:	test   eax,0x1ff0aaa4
  405eef:	dec    ebp
  405ef0:	mov    BYTE PTR [ecx-0x5e68b68c],dl
  405ef6:	inc    esi
  405ef7:	cs jnp 0x405efa
  405efa:	(bad)  
  405efb:	jg     0x405ee3
  405efd:	pop    ss
  405efe:	rcr    esp,0xa2
  405f01:	sub    DWORD PTR ds:0xfc27c8b8,edi
  405f07:	and    BYTE PTR [esi+0x6c],cl
  405f0a:	test   DWORD PTR [edi],edx
  405f0c:	xchg   ebp,eax
  405f0d:	inc    ecx
  405f0e:	or     esp,DWORD PTR [eax-0x2ae7ad0]
  405f14:	into   
  405f15:	sbb    eax,0x88b71f76
  405f1a:	jecxz  0x405ed8
  405f1c:	pop    edx
  405f1d:	and    dh,BYTE PTR [edi]
  405f1f:	push   0x58
  405f21:	jae    0x405f71
  405f23:	test   eax,0x60ce7dd8
  405f28:	(bad)  
  405f29:	int3   
  405f2a:	push   edi
  405f2b:	or     ecx,edx
  405f2d:	mov    bh,0x3b
  405f2f:	cmc    
  405f30:	dec    ebp
  405f31:	sub    ebp,ebp
  405f33:	lock and edx,ebx
  405f36:	int    0xd3
  405f38:	mov    dh,0x7a
  405f3a:	out    dx,al
  405f3b:	repnz fsubr DWORD PTR [eax]
  405f3e:	inc    ebp
  405f3f:	sbb    bl,BYTE PTR [edi]
  405f41:	cmp    al,0xe6
  405f43:	out    0xc3,eax
  405f45:	scas   al,BYTE PTR es:[edi]
  405f46:	cmp    al,0xc2
  405f48:	retf   
  405f49:	mov    ecx,0xff462acc
  405f4e:	lock fcomp DWORD PTR [ebp-0x1eec0a74]
  405f55:	lea    ecx,[esi+0x1f]
  405f58:	add    eax,0x94f076c1
  405f5d:	rcr    DWORD PTR [ebp+0x1a0d19f4],cl
  405f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f64:	arpl   WORD PTR [ebx],dx
  405f66:	mov    ecx,0x17f9ef4a
  405f6b:	jno    0x405fba
  405f6d:	and    eax,0x3b0a5b22
  405f72:	sub    al,0x0
  405f74:	ins    DWORD PTR es:[edi],dx
  405f75:	xor    ch,BYTE PTR [edx+edi*8+0x7f]
  405f79:	and    DWORD PTR [ebx],edi
  405f7b:	jmp    0x18c30109
  405f80:	push   ecx
  405f81:	icebp  
  405f82:	int3   
  405f83:	(bad)  
  405f84:	add    BYTE PTR ds:0x68f160ec,dl
  405f8a:	loope  0x405f2c
  405f8c:	mov    eax,ds:0x5faedd00
  405f91:	ins    BYTE PTR es:[edi],dx
  405f92:	xor    DWORD PTR [edx-0x24],esi
  405f95:	adc    cl,BYTE PTR [eax+0x69f58a83]
  405f9b:	stos   BYTE PTR es:[edi],al
  405f9c:	call   0x1e7a1371
  405fa1:	cmp    al,BYTE PTR fs:[ebx+edi*1]
  405fa5:	push   ss
  405fa6:	(bad)
  405fa9:	test   edi,edi
  405fab:	push   ds
  405fac:	jge    0x405f83
  405fae:	faddp  st(0),st
  405fb0:	fdivr  QWORD PTR [bp+si]
  405fb3:	sbb    BYTE PTR [edx+0x5],al
  405fb6:	sbb    BYTE PTR [ecx+0x15],dl
  405fb9:	jne    0x405fdf
  405fbb:	mov    ds:0xbd76a291,al
  405fc0:	add    eax,0x6436b2b6
  405fc5:	jnp    0x405f60
  405fc7:	pop    ss
  405fc8:	pusha  
  405fc9:	cmp    BYTE PTR [eax-0x1c],dh
  405fcc:	test   DWORD PTR [edi],ebp
  405fce:	fimul  DWORD PTR [ebx]
  405fd0:	loopne 0x405fe9
  405fd2:	imul   eax,DWORD PTR [ebp+0x2e],0x5d9d3439
  405fd9:	int    0xe
  405fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fdc:	sub    al,cl
  405fde:	and    edx,DWORD PTR [ebp+ecx*1-0x9]
  405fe2:	popf   
  405fe3:	fnstsw WORD PTR [ecx-0x57]
  405fe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fe7:	xor    eax,0x7a8398fb
  405fec:	mov    dl,0x85
  405fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fef:	stos   DWORD PTR es:[edi],eax
  405ff0:	cmp    ah,bl
  405ff2:	inc    ebx
  405ff3:	rcl    DWORD PTR [eax],0x34
  405ff6:	inc    DWORD PTR [esi+0x4d1a5292]
  405ffc:	test   DWORD PTR [esi],0x902df397
  406002:	fcom   QWORD PTR [ebp-0x12]
  406005:	sub    eax,0x14c9a8c2
  40600a:	or     ebp,DWORD PTR [edx-0x3e67d472]
  406010:	or     al,0x48
  406012:	sub    al,0x17
  406014:	sub    al,0x6
  406016:	push   ss
  406017:	add    BYTE PTR [eax],cl
  406019:	fwait
  40601a:	mov    cl,0x15
  40601c:	ja     0x406027
  40601e:	pop    es
  40601f:	into   
  406020:	adc    al,0x78
  406022:	and    ebp,DWORD PTR [edi+0x41]
  406025:	push   ecx
  406026:	popa   
  406027:	bound  edi,QWORD PTR [edi-0x50bd1fad]
  40602d:	scas   al,BYTE PTR es:[edi]
  40602e:	in     al,dx
  40602f:	dec    esp
  406030:	push   edi
  406031:	test   al,0xab
  406033:	int3   
  406034:	xor    BYTE PTR [esi+edi*1-0x35],ah
  406038:	and    al,0x70
  40603a:	xchg   edx,eax
  40603b:	fistp  WORD PTR [ebx-0x28cdd3b4]
  406041:	sbb    BYTE PTR [ebx+0xbcaf240],cl
  406047:	xor    BYTE PTR [ebx+0x1179c4d5],bl
  40604d:	fidiv  WORD PTR [edx]
  40604f:	jo     0x40607c
  406051:	cmp    eax,0x24cdf5ff
  406056:	mov    ds,WORD PTR [ebp+0x1b1e61b3]
  40605c:	xor    cl,BYTE PTR [ebx]
  40605e:	mov    esp,0x2c84c044
  406063:	mov    eax,ds:0xf944cfb2
  406068:	clc    
  406069:	enter  0x737d,0x2b
  40606d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40606e:	dec    DWORD PTR [ecx-0x70]
  406071:	and    al,0xbc
  406073:	push   eax
  406074:	cmp    DWORD PTR [eax-0xc],ebx
  406077:	adc    al,BYTE PTR [ebp-0x41]
  40607a:	pop    edi
  40607b:	jg     0x406040
  40607d:	sub    ebp,edx
  40607f:	jno    0x4060c7
  406081:	jae    0x406049
  406083:	adc    eax,0x6dcba359
  406088:	dec    ebp
  406089:	or     ah,BYTE PTR [ebx+0x4155ea41]
  40608f:	xchg   ebp,eax
  406090:	jne    0x40605e
  406092:	sub    BYTE PTR [ebx],dl
  406094:	(bad)  
  406097:	xchg   edx,eax
  406098:	cld    
  406099:	xor    DWORD PTR [ebp+0x53df49f2],edx
  40609f:	xchg   edx,eax
  4060a0:	pop    ss
  4060a1:	sub    al,0x6c
  4060a3:	xor    cl,ch
  4060a5:	jle    0x406068
  4060a7:	push   ebp
  4060a8:	loopne 0x4060ef
  4060aa:	loope  0x4060d3
  4060ac:	repz dec ebp
  4060ae:	leave  
  4060af:	(bad)  
  4060b0:	ret    0x38ec
  4060b3:	test   DWORD PTR [eax-0x54e70a96],ebp
  4060b9:	daa    
  4060ba:	fimul  WORD PTR [edi]
  4060bc:	cwde   
  4060bd:	call   0x21aa:0xcaa5d732
  4060c4:	cmp    al,0x11
  4060c6:	mov    ecx,0xba091d53
  4060cb:	test   ebp,esi
  4060cd:	arpl   ax,sp
  4060cf:	and    ch,dl
  4060d1:	xor    al,0x96
  4060d3:	jmp    0x2f4d:0x14ee2f1a
  4060da:	pandn  mm7,QWORD PTR [edx]
  4060dd:	inc    edi
  4060de:	cmc    
  4060df:	lock sub al,bh
  4060e2:	sti    
  4060e3:	jns    0x40606b
  4060e5:	div    DWORD PTR [ebx+ebp*4]
  4060e8:	mov    dl,BYTE PTR [eax+0x16]
  4060eb:	dec    eax
  4060ec:	push   ss
  4060ed:	push   edi
  4060ee:	sub    bl,BYTE PTR [ebx+0x3e1051ef]
  4060f4:	mov    esi,0x45b5e2ef
  4060f9:	cmp    al,BYTE PTR [ebx+0x77]
  4060fc:	stos   BYTE PTR es:[edi],al
  4060fd:	out    0xe6,al
  4060ff:	cmp    bl,BYTE PTR [ebp-0x3f703d09]
  406105:	imul   edx,DWORD PTR [ebp+0x41ef5601],0xc238ca72
  40610f:	jp     0x406135
  406111:	loop   0x4060f8
  406113:	je     0x40611a
  406115:	dec    edi
  406116:	scas   eax,DWORD PTR es:[edi]
  406117:	mov    ecx,0x115554ee
  40611c:	aad    0x36
  40611e:	aas    
  40611f:	addr16 es dec esi
  406122:	inc    ecx
  406123:	lea    eax,[esp+ebx*1+0x62812b00]
  40612a:	in     eax,0x25
  40612c:	mov    edi,DWORD PTR [ebx-0x6e]
  40612f:	cmp    dl,BYTE PTR [ebx-0x58766ce8]
  406135:	mov    dl,0xa
  406137:	enter  0x98a2,0xef
  40613b:	imul   eax,ebx,0xffffffe1
  40613e:	fidivr WORD PTR [bx+si-0x7d37]
  406143:	sbb    BYTE PTR [ebx-0x1b5478b5],0x41
  40614a:	nop
  40614b:	add    edx,DWORD PTR [ecx+0x65999f74]
  406151:	mov    bh,0x4a
  406153:	mov    DWORD PTR [edx+ebp*8],eax
  406156:	mov    ds:0xd77ee4b8,eax
  40615b:	xchg   esp,eax
  40615c:	mov    DWORD PTR [ecx],0x21939627
  406162:	loopne 0x40617d
  406164:	leave  
  406165:	bound  ebx,QWORD PTR [esi]
  406167:	call   0x326c:0xf4775a26
  40616e:	xchg   ebx,eax
  40616f:	ins    BYTE PTR es:[edi],dx
  406170:	fbld   TBYTE PTR [eax+0x28f552fb]
  406176:	sbb    DWORD PTR [ebp-0x4f],esi
  406179:	icebp  
  40617a:	mov    ds:0x13e9aad8,eax
  40617f:	sbb    BYTE PTR [edi-0x21],ch
  406182:	sbb    al,0x9c
  406184:	test   al,0xcd
  406186:	int3   
  406187:	lds    ebp,FWORD PTR [ebp+eiz*1-0x31]
  40618b:	pop    esi
  40618c:	add    ebx,DWORD PTR [ecx+eiz*4]
  40618f:	out    dx,al
  406190:	mov    ebx,0x4efaf668
  406195:	or     DWORD PTR [ebx-0x18916c76],ebx
  40619b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40619c:	xchg   esp,eax
  40619d:	icebp  
  40619e:	pop    eax
  40619f:	dec    edx
  4061a0:	jmp    0x4061cc
  4061a2:	mov    al,ds:0xb8284a38
  4061a7:	sbb    al,dl
  4061a9:	arpl   si,ax
  4061ab:	jmp    0x2401:0xa6854b70
  4061b2:	leave  
  4061b3:	out    0x10,al
  4061b5:	sub    cl,dh
  4061b7:	dec    esp
  4061b8:	test   bl,0xd1
  4061bb:	fidivr WORD PTR [eax+0x67]
  4061be:	test   DWORD PTR [esp+ebp*1+0x1e],0xa034b592
  4061c6:	imul   esi,DWORD PTR [edx],0xba23da02
  4061cc:	fs sub eax,0x5cb02e04
  4061d2:	jbe    0x40622e
  4061d4:	adc    al,0xfb
  4061d6:	outs   dx,BYTE PTR ds:[esi]
  4061d7:	dec    esi
  4061d8:	(bad)  
  4061d9:	pop    edi
  4061da:	xchg   ecx,eax
  4061db:	cmc    
  4061dc:	pop    esi
  4061dd:	push   0x3d
  4061df:	out    dx,eax
  4061e0:	popf   
  4061e1:	inc    ebp
  4061e2:	mov    ebx,0x3896683f
  4061e7:	jmp    0x86c457f7
  4061ec:	daa    
  4061ed:	jg     0x40619c
  4061ef:	fs icebp 
  4061f1:	mov    dh,dh
  4061f3:	cwde   
  4061f4:	not    DWORD PTR [esi+eax*2+0x18cbf852]
  4061fb:	inc    edx
  4061fc:	outs   dx,DWORD PTR ds:[esi]
  4061fd:	scas   al,BYTE PTR es:[edi]
  4061fe:	xlat   BYTE PTR ds:[ebx]
  4061ff:	(bad)  
  406200:	imul   ebx,DWORD PTR [ecx-0x5c],0x18
  406204:	push   es
  406205:	imul   eax,DWORD PTR [eax+0x0],0xffffff9a
  406209:	nop
  40620a:	icebp  
  40620b:	push   edx
  40620c:	inc    edi
  40620e:	xor    ebx,ebx
  406210:	jl     0x4061cf
  406212:	scas   al,BYTE PTR es:[edi]
  406213:	imul   ebp,ecx,0x9c2f1f19
  406219:	sub    eax,0x501b37a6
  40621e:	add    bh,BYTE PTR [ecx]
  406220:	dec    ebp
  406221:	sti    
  406222:	es repz daa 
  406225:	xchg   esi,eax
  406226:	inc    edx
  406227:	ins    BYTE PTR es:[edi],dx
  406228:	adc    eax,0x92ca724c
  40622d:	pop    edx
  40622e:	xor    bl,ch
  406230:	sahf   
  406231:	daa    
  406232:	popf   
  406233:	fidivr DWORD PTR [edi+edx*2-0x26]
  406237:	inc    edx
  406238:	out    0x5f,eax
  40623a:	xchg   ebx,eax
  40623b:	enter  0x19f4,0x52
  40623f:	inc    ebp
  406240:	and    edx,DWORD PTR [edi]
  406242:	cwde   
  406243:	pop    ecx
  406244:	enter  0x821e,0x5e
  406248:	cmp    DWORD PTR [ecx+ebp*1],eax
  40624b:	cmp    DWORD PTR [ebp+0x4b4b097b],0x16e1aa9c
  406255:	std    
  406256:	fmul   DWORD PTR [esi+0x13f4fae0]
  40625c:	xchg   edi,eax
  40625d:	pandn  mm3,QWORD PTR [ebp-0x7c]
  406261:	in     al,0xed
  406263:	mov    DWORD PTR [edx],ecx
  406265:	test   esp,ebp
  406267:	ficom  WORD PTR [eax]
  406269:	jne    0x406287
  40626b:	sub    al,0x58
  40626d:	cmp    al,0x7e
  40626f:	push   0x32
  406271:	loop   0x4062c8
  406273:	sbb    dl,BYTE PTR [edx+esi*8-0x678af7d3]
  40627a:	add    bh,dh
  40627c:	pusha  
  40627d:	repz setno BYTE PTR [edi+ebx*8+0x3cff7f38]
  406286:	push   edi
  406287:	mov    cl,0x81
  406289:	mov    esi,0x6f39cd25
  40628e:	out    0xad,al
  406290:	enter  0x1dfd,0x4b
  406294:	iret   
  406295:	lds    esi,FWORD PTR [edi]
  406297:	mov    edi,DWORD PTR cs:[eax-0x75e851c7]
  40629e:	xor    eax,0x193e2b2d
  4062a3:	test   al,0x8c
  4062a5:	or     BYTE PTR [esi-0xf71cae3],bh
  4062ab:	test   DWORD PTR [ebx-0x66e7c6db],ebx
  4062b1:	cmp    esp,DWORD PTR [esi+0x17]
  4062b4:	mov    edx,0x743c6845
  4062b9:	(bad)  
  4062bb:	jge    0x4062c2
  4062bd:	jnp    0x40628b
  4062bf:	mov    ds:0xb83b5eac,al
  4062c4:	inc    esp
  4062c5:	push   ss
  4062c6:	cdq    
  4062c7:	pusha  
  4062c8:	iret   
  4062c9:	lods   al,BYTE PTR ds:[esi]
  4062ca:	popf   
  4062cb:	hlt    
  4062cc:	adc    ebx,esp
  4062ce:	xor    DWORD PTR [eax+0x7d],edx
  4062d1:	push   edx
  4062d2:	call   FWORD PTR [esi]
  4062d4:	shl    ebp,1
  4062d6:	into   
  4062d7:	inc    edx
  4062d8:	adc    al,0x48
  4062da:	dec    eax
  4062db:	fdiv   DWORD PTR [edi+0x11c598dc]
  4062e1:	fcmovnb st,st(2)
  4062e3:	nop
  4062e4:	pop    ecx
  4062e5:	push   ecx
  4062e6:	xor    BYTE PTR [eax-0x3c],dl
  4062e9:	sbb    ebp,ebp
  4062eb:	dec    ebp
  4062ec:	pmaxsw mm7,QWORD PTR [edi]
  4062ef:	sub    eax,0x7b785947
  4062f4:	inc    ebp
  4062f5:	push   ds
  4062f6:	jmp    0xb28c:0x50355404
  4062fd:	sti    
  4062fe:	pop    ecx
  4062ff:	scas   al,BYTE PTR es:[edi]
  406300:	in     al,0x22
  406302:	sub    al,0x66
  406304:	xlat   BYTE PTR ds:[ebx]
  406305:	push   ebp
  406306:	jle    0x4062d0
  406308:	push   esp
  406309:	call   0x9d33:0x98e25eb1
  406310:	jae    0x4062bf
  406312:	ret    
  406313:	and    BYTE PTR [eax+0x47],cl
  406316:	jae    0x40637a
  406318:	cwde   
  406319:	sbb    edx,DWORD PTR [edi+eax*2-0x5c9634e0]
  406320:	retf   0x19e3
  406323:	popf   
  406324:	dec    edx
  406325:	shl    ebx,1
  406327:	fstp   DWORD PTR [esi-0x51]
  40632a:	jmp    0xb2cfa8
  40632f:	ficomp WORD PTR [ebx-0x2bb37068]
  406335:	enter  0x4184,0x15
  406339:	sbb    BYTE PTR [ebp+0x68],dl
  40633c:	sbb    DWORD PTR [edx],ebp
  40633e:	sbb    al,bh
  406340:	xor    eax,0x3b7ea215
  406345:	jbe    0x4063c2
  406347:	leave  
  406348:	scas   eax,DWORD PTR es:[edi]
  406349:	xor    al,0xf1
  40634b:	adc    eax,0xed62684b
  406350:	fcomi  st,st(3)
  406352:	push   0x2a958bbc
  406357:	sbb    al,0x6f
  406359:	sub    DWORD PTR [edx],edi
  40635b:	push   esp
  40635c:	test   al,0xb5
  40635e:	push   esp
  40635f:	add    BYTE PTR [esi],ah
  406361:	je     0x406312
  406363:	ret    
  406364:	(bad)  
  406365:	int3   
  406366:	ins    DWORD PTR es:[edi],dx
  406367:	fwait
  406368:	push   cs
  406369:	cmp    eax,0xd9c2fe2e
  40636e:	xchg   esi,eax
  40636f:	lahf   
  406370:	pop    ecx
  406371:	(bad)  
  406373:	mov    DWORD PTR [edx+0x6a],edx
  406376:	mov    edi,?
  406378:	and    ch,dl
  40637a:	mov    WORD PTR [edx+eiz*1-0xd],ds
  40637e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40637f:	adc    BYTE PTR [ecx+0x13],ch
  406382:	push   edi
  406383:	outs   dx,DWORD PTR ds:[esi]
  406384:	add    BYTE PTR [esp+ebp*2+0x6635e8a8],al
  40638b:	mov    dl,0xd6
  40638d:	clc    
  40638e:	fdivp  st(0),st
  406390:	and    al,0x11
  406392:	mov    esi,edx
  406394:	je     0x40633b
  406396:	loopne 0x4063ec
  406398:	xor    al,0x71
  40639a:	jno    0x40634a
  40639c:	or     BYTE PTR fs:[edi+0x27e3c5c8],ah
  4063a3:	add    BYTE PTR [eax+0x9],dh
  4063a6:	retf   
  4063a7:	fidiv  DWORD PTR [ecx+0x14eef65d]
  4063ad:	inc    eax
  4063ae:	mov    ecx,DWORD PTR [eax]
  4063b0:	ret    
  4063b1:	in     eax,dx
  4063b2:	mov    esi,0x3481f44e
  4063b7:	or     edi,DWORD PTR [esi+0x53]
  4063ba:	pop    ss
  4063bb:	repz std 
  4063bd:	jne    0x4063a9
  4063bf:	mov    ds:0x2a930be4,al
  4063c4:	dec    esp
  4063c5:	jns    0x4063f9
  4063c7:	sar    BYTE PTR [eax+edi*4],1
  4063ca:	fdivr  st(6),st
  4063cc:	xchg   esp,eax
  4063cd:	fdiv   QWORD PTR [ecx+eiz*4]
  4063d0:	fnsave [edx+0x732a3c75]
  4063d6:	adc    edx,DWORD PTR [edx+0x59]
  4063d9:	ss test al,0xa8
  4063dc:	dec    edx
  4063dd:	xchg   edi,eax
  4063de:	xchg   esp,eax
  4063df:	sub    eax,0xc69d9981
  4063e4:	dec    ebx
  4063e5:	and    al,0x26
  4063e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063e8:	pop    ds
  4063e9:	lds    ecx,FWORD PTR [edx+ecx*2]
  4063ec:	or     ecx,ebp
  4063ee:	pop    edx
  4063ef:	or     esi,edx
  4063f1:	adc    dl,dl
  4063f3:	ret    
  4063f4:	frstor [edi]
  4063f6:	(bad)  
  4063f7:	rcl    BYTE PTR [edi],1
  4063f9:	adc    eax,0x4400e166
  4063fe:	jne    0x406397
  406400:	xchg   esp,eax
  406401:	adc    dh,0x19
  406404:	out    dx,al
  406405:	push   esi
  406406:	call   0x5599ed3
  40640b:	xchg   esi,eax
  40640c:	fstp   TBYTE PTR ds:0x23320b21
  406412:	(bad)  
  406414:	jae    0x4063aa
  406416:	sbb    ebx,edx
  406418:	popa   
  406419:	pushf  
  40641a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40641b:	push   esp
  40641c:	outs   dx,BYTE PTR ds:[esi]
  40641d:	mov    ecx,0x1553e740
  406422:	xor    BYTE PTR [eax-0x7],bh
  406425:	jmp    0x1cb3:0x664729c1
  40642c:	cli    
  40642d:	rcr    edx,1
  40642f:	sub    DWORD PTR [eax+ebp*1+0xd],esp
  406433:	push   eax
  406434:	mov    ebp,0x1bbbc9b4
  406439:	mov    dh,0x88
  40643b:	pop    ds
  40643c:	inc    ebx
  40643d:	add    al,0x85
  40643f:	dec    edi
  406440:	sbb    bl,BYTE PTR [edi-0x62b400b3]
  406446:	ret    
  406447:	inc    esi
  406448:	jl     0x4063d0
  40644a:	and    DWORD PTR [ebx-0x574855b7],esp
  406450:	push   0x1b
  406452:	ins    BYTE PTR es:[edi],dx
  406453:	cmp    dh,BYTE PTR [edx-0x70]
  406456:	mov    BYTE PTR [edi+ebp*2],ch
  406459:	push   eax
  40645a:	dec    ebx
  40645b:	mov    ds:0x2f964846,eax
  406460:	imul   ebx,edi,0xed78d391
  406466:	aas    
  406467:	xchg   esi,eax
  406468:	xor    DWORD PTR [ebx-0x1f4ac544],edx
  40646e:	xchg   DWORD PTR [esi],esp
  406470:	cdq    
  406471:	lahf   
  406472:	icebp  
  406473:	push   ss
  406474:	std    
  406475:	xor    eax,0x51454af5
  40647a:	cmp    esi,edx
  40647c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40647d:	cmp    eax,0xbdc6ffc4
  406482:	leave  
  406483:	stc    
  406484:	push   cs
  406485:	sub    eax,0x4bde413b
  40648a:	xchg   edx,eax
  40648b:	(bad)
  40648e:	cwde   
  40648f:	cld    
  406490:	pop    eax
  406491:	sub    BYTE PTR [ebp+0x740c32e],dl
  406497:	pop    es
  406498:	in     al,0x69
  40649a:	fcmovb st,st(2)
  40649c:	ja     0x406427
  40649e:	fst    DWORD PTR [esi]
  4064a0:	adc    DWORD PTR [ecx-0x67],esi
  4064a3:	cmp    al,0x50
  4064a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064a6:	adc    ch,bl
  4064a8:	push   esi
  4064a9:	enter  0x9c2f,0xce
  4064ad:	icebp  
  4064ae:	ficom  DWORD PTR [eax+0x607bcc00]
  4064b4:	mov    WORD PTR [ebx],?
  4064b6:	jmp    0x6df6:0x996fbd02
  4064bd:	and    eax,0x9ba13b75
  4064c2:	xchg   esi,eax
  4064c3:	push   ss
  4064c4:	sar    BYTE PTR [ecx-0x30],cl
  4064c7:	mov    WORD PTR [edi+0x30],ds
  4064ca:	repnz pop ebx
  4064cc:	mov    al,0xb3
  4064ce:	inc    DWORD PTR [ecx]
  4064d0:	push   esi
  4064d1:	or     DWORD PTR [ebx-0x2387d7bb],0xffffff8d
  4064d8:	adc    DWORD PTR [edx+0x35],ebx
  4064db:	adc    edx,DWORD PTR [ebx-0x5f]
  4064de:	pop    es
  4064df:	fnstenv [esi-0xb4fbe1]
  4064e5:	arpl   WORD PTR [ecx],cx
  4064e7:	jae    0x40648f
  4064e9:	or     DWORD PTR [esi+0x12],edx
  4064ec:	loop   0x406532
  4064ee:	jle    0x406549
  4064f0:	inc    edx
  4064f1:	dec    ebx
  4064f2:	jne    0x4064a5
  4064f4:	xor    ebp,DWORD PTR [ebx]
  4064f6:	out    dx,eax
  4064f7:	icebp  
  4064f8:	leave  
  4064f9:	mov    esi,0xb1def1ba
  4064fe:	push   0x73
  406500:	ret    
  406501:	sub    ebp,DWORD PTR [ebx]
  406503:	fcmovnbe st,st(4)
  406505:	sti    
  406506:	xor    al,0x5c
  406508:	push   es
  406509:	in     eax,0xf4
  40650b:	in     eax,dx
  40650c:	adc    BYTE PTR [edx],bh
  40650e:	sub    BYTE PTR [eax+0x1],bl
  406511:	dec    esp
  406512:	add    DWORD PTR [esp+edi*8+0x3a],esi
  406516:	fsubr  QWORD PTR [ebp-0x58]
  406519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40651a:	inc    ebx
  40651b:	popa   
  40651c:	sbb    ah,BYTE PTR [esi-0x557b441a]
  406522:	repz jnp 0x4064cc
  406525:	aad    0xe1
  406527:	in     al,dx
  406528:	xchg   esp,eax
  406529:	mov    DWORD PTR [ebx+eiz*1-0x59dd876b],esi
  406530:	jbe    0x40653e
  406532:	fbld   TBYTE PTR [ecx+edi*2-0x75]
  406536:	sbb    dl,ch
  406538:	setl   BYTE PTR ds:0x998d7f60
  40653f:	(bad)  
  406540:	test   eax,0x3a56e493
  406545:	sub    bh,BYTE PTR [edi+0x6ff5135c]
  40654b:	mov    edi,0x23ee3e5a
  406550:	inc    edi
  406551:	mov    edi,0xf39313b9
  406556:	cmp    al,0xb7
  406558:	xor    esp,eax
  40655a:	mov    edi,0x4bc085e4
  40655f:	inc    ebx
  406560:	inc    esi
  406561:	pop    edi
  406562:	mov    bl,BYTE PTR [edx]
  406564:	mov    bl,0xd0
  406566:	inc    ebp
  406567:	sbb    DWORD PTR [ecx+0x14a2cfd],esp
  40656d:	inc    ebp
  40656e:	test   eax,0xc3cf3b7c
  406573:	adc    esi,DWORD PTR ds:0x9f7e3930
  406579:	clc    
  40657a:	cmovs  ebp,DWORD PTR [ebx-0x76]
  40657e:	leave  
  40657f:	xor    cl,BYTE PTR [edx+edx*2]
  406582:	adc    dh,dh
  406584:	stc    
  406585:	js     0x4065f2
  406587:	not    BYTE PTR [edx+0x5b]
  40658a:	hlt    
  40658b:	out    dx,eax
  40658c:	nop
  40658d:	sub    DWORD PTR [ebx],ebp
  40658f:	xchg   esi,eax
  406590:	mov    bl,0xf2
  406592:	aaa    
  406593:	dec    ebp
  406594:	sbb    ecx,edx
  406596:	(bad)
  406599:	arpl   WORD PTR [ebx+edi*1-0x2a],bp
  40659d:	adc    esp,esp
  40659f:	dec    eax
  4065a0:	push   0xed2dc74e
  4065a5:	setb   dl
  4065a8:	pop    ebp
  4065a9:	fwait
  4065aa:	pop    ecx
  4065ab:	pop    ds
  4065ac:	test   BYTE PTR [ebx+edx*4],dh
  4065af:	fistp  QWORD PTR [edx-0x47]
  4065b2:	out    0x7b,al
  4065b4:	add    DWORD PTR [edx],0x9e20cc4e
  4065ba:	stos   BYTE PTR es:[edi],al
  4065bb:	lea    ebp,gs:[edx+0x7238d676]
  4065c2:	dec    ecx
  4065c3:	popa   
  4065c4:	mov    esi,DWORD PTR [edx+0x18]
  4065c7:	ins    DWORD PTR es:[edi],dx
  4065c8:	imul   ebx,DWORD PTR [esi],0x8b996ad6
  4065ce:	push   esi
  4065cf:	inc    edx
  4065d0:	or     DWORD PTR [edx+0x49],edi
  4065d3:	mov    bl,0x75
  4065d5:	aam    0x59
  4065d7:	xchg   BYTE PTR ds:0xa2a5885f,dh
  4065dd:	rol    DWORD PTR [ecx+0x7a2afa27],0xf
  4065e4:	loop   0x406603
  4065e6:	mov    bl,0x2
  4065e8:	and    BYTE PTR [eax],ch
  4065ea:	out    0x58,eax
  4065ec:	retf   0x5be2
  4065ef:	iret   
  4065f0:	in     eax,0xbc
  4065f2:	mov    ds:0x4c75bd58,eax
  4065f7:	les    edi,FWORD PTR [esi]
  4065f9:	adc    al,0xd9
  4065fb:	(bad)  
  4065fc:	fdivr  DWORD PTR [ebx+ebp*1]
  4065ff:	inc    eax
  406600:	mov    DWORD PTR [edx+esi*4],ebp
  406603:	xchg   ebx,eax
  406604:	sbb    edi,edx
  406606:	pop    ss
  406607:	or     al,BYTE PTR [edx-0x50]
  40660a:	push   eax
  40660b:	mov    ch,0xb5
  40660d:	and    BYTE PTR [esi],bh
  40660f:	mov    ebp,0xd9651d4f
  406614:	cmp    eax,0x7e21fc62
  406619:	jp     0x40666b
  40661b:	cli    
  40661c:	and    dl,BYTE PTR [eax]
  40661e:	sub    eax,0x35ad5feb
  406623:	dec    edi
  406624:	retf   0x4dc
  406627:	(bad)  
  406628:	imul   esp,eax,0x7a
  40662b:	fadd   DWORD PTR [edx-0x7b]
  40662e:	and    BYTE PTR [ebp+0x66],dh
  406631:	add    BYTE PTR [edi-0x78],0x56
  406635:	aas    
  406636:	inc    ecx
  406637:	rcl    DWORD PTR [ecx+0x55c974e3],0xd2
  40663e:	popa   
  40663f:	ins    BYTE PTR es:[edi],dx
  406640:	fndisi(8087 only) 
  406642:	jnp    0x406643
  406644:	jb     0x406618
  406646:	xor    BYTE PTR [ebp+0x6e40796b],ch
  40664c:	mov    esp,0xeb342be5
  406651:	or     dl,BYTE PTR [edx+0x3e]
  406654:	test   BYTE PTR [eax+ebp*1-0x2832b3c],dl
  40665b:	and    eax,0xc1336904
  406660:	xchg   edi,eax
  406661:	jae    0x4066ce
  406663:	inc    esi
  406664:	xor    edi,ebx
  406666:	jg     0x406655
  406668:	dec    edi
  406669:	pushf  
  40666a:	push   cs
  40666b:	xchg   ebp,eax
  40666c:	xor    DWORD PTR [edx+0x3fca9ada],ebx
  406672:	sub    al,0x12
  406674:	fcomi  st,st(3)
  406676:	dec    esi
  406677:	and    dh,BYTE PTR [esi]
  406679:	or     eax,0x373c67a0
  40667e:	sub    dh,BYTE PTR [edi-0x16]
  406681:	stos   DWORD PTR es:[edi],eax
  406682:	adc    bh,BYTE PTR [ecx]
  406684:	and    ebx,DWORD PTR [eax+0x15]
  406687:	mov    BYTE PTR [edi-0x66f8be87],ch
  40668d:	adc    edi,edi
  40668f:	retf   0x29a0
  406692:	fbstp  TBYTE PTR [eax]
  406694:	pop    ss
  406695:	jo     0x406694
  406697:	dec    esi
  406698:	ds in  eax,0x87
  40669b:	aam    0xc2
  40669d:	je     0x4066c3
  40669f:	test   eax,0x1152bd1f
  4066a4:	call   0x344fefb
  4066a9:	outs   dx,DWORD PTR ds:[esi]
  4066aa:	mov    eax,ds:0x33251efe
  4066af:	and    eax,0xf0306145
  4066b4:	xchg   DWORD PTR [eax],edi
  4066b6:	sub    esi,DWORD PTR [ecx-0x1f0554c1]
  4066bc:	jae    0x40670f
  4066be:	adc    al,0x55
  4066c0:	stos   BYTE PTR es:[edi],al
  4066c1:	test   al,0x90
  4066c3:	add    DWORD PTR [ecx+0x49],ebp
  4066c6:	or     BYTE PTR [ecx+0x21de6e74],bh
  4066cc:	or     eax,0xd45b961
  4066d1:	retf   
  4066d2:	push   ss
  4066d3:	mov    ch,0x39
  4066d5:	jmp    0x4066e0
  4066d7:	(bad)  
  4066d8:	cli    
  4066d9:	add    DWORD PTR [edx+esi*8-0x6c283eea],ebx
  4066e0:	mov    esp,0x17c4f35a
  4066e5:	sbb    al,0x34
  4066e7:	mov    ds:0xc847a80f,eax
  4066ec:	outs   dx,DWORD PTR ds:[esi]
  4066ed:	cli    
  4066ee:	mov    WORD PTR [edx+0x3ecfd96b],cs
  4066f4:	int    0xd7
  4066f6:	xchg   esi,eax
  4066f7:	scas   eax,DWORD PTR es:[edi]
  4066f8:	imul   ebp,DWORD PTR [ebx-0x14],0xfffffff0
  4066fc:	mov    al,0xbc
  4066fe:	mov    edx,0xb6c1380f
  406703:	dec    esi
  406705:	dec    edi
  406706:	fyl2xp1 
  406708:	dec    eax
  406709:	lods   al,BYTE PTR ds:[esi]
  40670a:	adc    al,BYTE PTR [ecx]
  40670c:	nop
  40670d:	sbb    bl,ah
  40670f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406710:	sub    eax,0x575ecc1d
  406715:	cmc    
  406716:	xor    eax,0xc6a724a4
  40671b:	inc    edx
  40671c:	add    ebx,DWORD PTR [esi]
  40671e:	jns    0x406758
  406720:	inc    esp
  406721:	stos   DWORD PTR es:[edi],eax
  406722:	imul   eax,DWORD PTR ds:0xf5578f5f,0x69a08ee3
  40672c:	cmp    al,0x83
  40672e:	mov    ebp,0x422d6e29
  406733:	imul   edi,DWORD PTR [edx-0x45],0x7d
  406737:	sub    dl,BYTE PTR [esi+ebp*8-0x651bedf]
  40673e:	rcr    DWORD PTR ds:0xf15ec6a5,cl
  406744:	mov    eax,ds:0x38f6adf
  406749:	out    0xd3,al
  40674b:	das    
  40674c:	adc    al,0x8e
  40674e:	call   0x35bd:0x635311dc
  406755:	and    ecx,DWORD PTR [ebp+0x513572fb]
  40675b:	ret    
  40675c:	(bad)  
  40675d:	cld    
  40675e:	inc    esp
  40675f:	and    dh,BYTE PTR [ecx]
  406761:	(bad)  
  406762:	in     al,0xa3
  406764:	inc    esp
  406765:	aas    
  406766:	pop    ecx
  406767:	hlt    
  406768:	cld    
  406769:	dec    ecx
  40676a:	xchg   edx,eax
  40676b:	gs stos DWORD PTR es:[edi],eax
  40676d:	shl    dl,1
  40676f:	adc    ecx,edi
  406771:	in     al,dx
  406772:	push   esi
  406773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406774:	sbb    DWORD PTR [edx],eax
  406776:	test   DWORD PTR [eax-0x7229f0b0],esi
  40677c:	repnz gs lahf 
  40677f:	mov    al,ds:0x57af7fc1
  406784:	mov    eax,ds:0x323ecbb8
  406789:	xchg   BYTE PTR [esi+0x5b],dl
  40678c:	je     0x406767
  40678e:	clc    
  40678f:	std    
  406790:	test   DWORD PTR [edi+0x493f5d24],edi
  406796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406797:	or     ebx,ebp
  406799:	and    al,0x4
  40679b:	jnp    0x8ce7d4a0
  4067a1:	fisttp QWORD PTR [esi]
  4067a3:	inc    ebx
  4067a4:	hlt    
  4067a5:	fs pop ebx
  4067a7:	aaa    
  4067a8:	jg     0x4067de
  4067aa:	pop    es
  4067ab:	jnp    0x4067da
  4067ad:	pop    edi
  4067ae:	std    
  4067af:	mov    ebp,0x5851c1c7
  4067b4:	cmp    eax,0x2715a51d
  4067b9:	push   ss
  4067ba:	jmp    0x40674c
  4067bc:	push   es
  4067bd:	push   edx
  4067be:	iret   
  4067bf:	(bad)  
  4067c0:	mov    eax,0x54a1a855
  4067c5:	mov    esi,0x607ffd88
  4067ca:	cmp    ch,BYTE PTR [edi]
  4067cc:	push   cs
  4067cd:	cmc    
  4067ce:	mov    eax,ds:0xe6aa668b
  4067d3:	inc    ebx
  4067d4:	xor    al,BYTE PTR [eax]
  4067d6:	scas   al,BYTE PTR es:[edi]
  4067d7:	call   0x17ad8dfd
  4067dc:	leave  
  4067dd:	dec    esp
  4067de:	in     eax,dx
  4067df:	sub    dh,BYTE PTR [ebx+0x19503d66]
  4067e5:	ficom  WORD PTR [ecx+0x29]
  4067e8:	add    al,0x9a
  4067ea:	fs jne 0x406784
  4067ed:	(bad)  
  4067ee:	and    ebx,esp
  4067f0:	xor    eax,0xa7efd531
  4067f5:	push   0x1ca748ad
  4067fa:	mov    edx,0xe4b7e2ae
  4067ff:	sbb    edx,DWORD PTR [eax]
  406801:	clc    
  406802:	lds    edi,FWORD PTR [eax]
  406804:	cmp    DWORD PTR [eax-0x44aeaceb],0xffffffbd
  40680b:	scas   al,BYTE PTR es:[edi]
  40680c:	mov    esp,0x55943b8
  406811:	xor    ah,BYTE PTR [ebx]
  406813:	or     eax,0xf8213110
  406818:	jmp    0x831:0xe4ca90de
  40681f:	pop    es
  406820:	mov    ebp,eax
  406822:	pop    esi
  406823:	xchg   ecx,eax
  406824:	adc    BYTE PTR [ebx+edx*8-0x4302785b],al
  40682b:	jnp    0x406847
  40682d:	xor    edi,edx
  40682f:	jb     0x406843
  406831:	push   edx
  406832:	xchg   esp,eax
  406833:	ins    DWORD PTR es:[edi],dx
  406834:	rol    DWORD PTR [edi-0x67c157c5],cl
  40683a:	fcmove st,st(6)
  40683c:	mov    esp,DWORD PTR [edi]
  40683e:	dec    esp
  40683f:	js     0x40683d
  406841:	jle    0x406816
  406843:	out    0xd4,al
  406845:	xor    cl,BYTE PTR [ebp+0x2292dc2c]
  40684b:	mov    dl,0x47
  40684d:	cmp    eax,0x2efe32c2
  406852:	push   esi
  406853:	and    eax,0xdaf1662d
  406858:	sahf   
  406859:	je     0x406818
  40685b:	and    BYTE PTR [esi+edi*8+0x109b2803],bl
  406862:	(bad)  
  406863:	mov    dh,0x52
  406865:	dec    edi
  406866:	retf   
  406867:	and    esp,DWORD PTR ds:0x13f9403c
  40686d:	xor    esp,DWORD PTR [edx+ebp*4-0x34a288f1]
  406874:	xor    ebp,edi
  406876:	popa   
  406877:	scas   al,BYTE PTR es:[edi]
  406878:	fcmovne st,st(4)
  40687a:	inc    ebx
  40687b:	sbb    eax,0x5716014b
  406880:	stc    
  406881:	and    al,0x1
  406883:	or     BYTE PTR [ecx-0x4e],ch
  406886:	mov    al,0x4d
  406888:	je     0x40683f
  40688a:	imul   eax,esi,0x1c
  40688d:	ret    0x1bef
  406890:	push   edi
  406891:	jmp    DWORD PTR [edx]
  406893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406894:	add    eax,0x9018138e
  406899:	jmp    0x96ae:0xc444373f
  4068a0:	cmp    dh,BYTE PTR [ecx]
  4068a2:	outs   dx,DWORD PTR ds:[esi]
  4068a3:	in     al,0x23
  4068a5:	jo     0x4068e7
  4068a7:	ja     0x406847
  4068a9:	dec    ebx
  4068aa:	in     eax,dx
  4068ab:	mov    es,WORD PTR [ebx]
  4068ad:	adc    al,BYTE PTR [ecx-0x3dd72af]
  4068b3:	jl     0x40692e
  4068b5:	adc    DWORD PTR [esi-0x7d],0x1827389b
  4068bc:	sahf   
  4068bd:	ds dec ebx
  4068bf:	or     eax,0x75b1eb1b
  4068c4:	cmc    
  4068c5:	pushf  
  4068c6:	imul   ecx,DWORD PTR [eax-0x67cd4990],0x335c8fd
  4068d0:	xor    BYTE PTR [ebx],ah
  4068d2:	inc    eax
  4068d3:	xor    al,0xff
  4068d5:	(bad)  
  4068d6:	fnsetpm(287 only) 
  4068d8:	cmc    
  4068d9:	sub    al,0x87
  4068db:	mov    ds:0xff41f023,al
  4068e0:	fnstcw WORD PTR [eax+edi*4]
  4068e3:	xor    esi,ebp
  4068e5:	adc    esi,esi
  4068e7:	les    esi,FWORD PTR [esi+0x3]
  4068ea:	cwde   
  4068eb:	loopne 0x4068e4
  4068ed:	imul   eax,DWORD PTR ds:0xa6bd5afc,0xe2a2239e
  4068f7:	lds    ebp,FWORD PTR ss:[ecx-0x2e13b749]
  4068fe:	fisttp QWORD PTR [ebx-0x7b80c95]
  406904:	sbb    DWORD PTR [esi],esi
  406906:	adc    eax,DWORD PTR ds:0x2cb3c4d2
  40690c:	(bad)  
  40690e:	push   esi
  40690f:	sub    ah,BYTE PTR [ecx-0x63]
  406912:	mov    edx,0xec20ffc1
  406917:	inc    ebp
  406918:	cmp    eax,0xa250ecc3
  40691d:	aam    0xbd
  40691f:	ret    
  406920:	and    BYTE PTR [edi-0x3a],ah
  406923:	jle    0x40692b
  406925:	or     ah,al
  406927:	idiv   edx
  406929:	jmp    0xbe2840bb
  40692e:	fsubr  QWORD PTR [edx-0x436baa19]
  406934:	aas    
  406935:	aam    0xf4
  406937:	mov    ds:0x3f5caf39,eax
  40693c:	ss es aad 0x0
  406940:	push   es
  406941:	push   esp
  406942:	push   ebx
  406943:	push   esi
  406944:	(bad)  
  406945:	(bad)  
  406946:	scas   eax,DWORD PTR es:[edi]
  406947:	lahf   
  406948:	and    ebx,ecx
  40694a:	push   esp
  40694b:	and    eax,0x7304db87
  406950:	mov    edx,0x7673bee5
  406955:	sar    DWORD PTR [ecx+edi*8],cl
  406958:	or     DWORD PTR [eax+0x25],esp
  40695b:	outs   dx,DWORD PTR ds:[esi]
  40695c:	iret   
  40695d:	or     eax,0x63276fa8
  406962:	fwait
  406963:	dec    edx
  406964:	int3   
  406965:	lahf   
  406966:	cmp    dh,BYTE PTR [edi+0x88c9022]
  40696c:	mov    ebp,0x2dce35d1
  406971:	loop   0x406999
  406973:	daa    
  406974:	xchg   BYTE PTR [esp+ebp*8],ah
  406977:	sub    ebx,DWORD PTR [ecx-0x16e93f25]
  40697d:	ret    
  40697e:	(bad)  
  40697f:	nop
  406980:	ret    
  406981:	jno    0x4069c3
  406983:	push   ebx
  406984:	sbb    DWORD PTR [edx],eax
  406986:	popf   
  406987:	outs   dx,BYTE PTR ds:[esi]
  406988:	imul   edi,DWORD PTR [ebx-0x3966ad9],0x30bacc4
  406992:	outs   dx,BYTE PTR ds:[esi]
  406993:	lods   al,BYTE PTR ds:[esi]
  406994:	xchg   ecx,eax
  406995:	jns    0x4069cd
  406997:	inc    ebp
  406998:	adc    BYTE PTR [ebp+0x75],0x2b
  40699c:	xchg   edx,eax
  40699d:	and    bh,0xb5
  4069a0:	xchg   BYTE PTR gs:[ecx-0x639c0109],ch
  4069a7:	out    dx,eax
  4069a8:	xchg   ebp,eax
  4069a9:	imul   edi,DWORD PTR [ecx-0x299f1687],0x714b3bfe
  4069b3:	cs jmp 0xc785:0xe9f99a01
  4069bb:	out    dx,al
  4069bc:	and    al,0x6e
  4069be:	add    DWORD PTR ds:0x972b1bce,edx
  4069c4:	dec    esi
  4069c5:	scas   eax,DWORD PTR es:[edi]
  4069c6:	sub    al,0xa1
  4069c8:	push   ebp
  4069c9:	sub    al,dh
  4069cb:	mov    eax,ds:0x7e35bf95
  4069d0:	and    ebx,DWORD PTR [eax-0x7b]
  4069d3:	cdq    
  4069d4:	push   ds
  4069d5:	call   0xc122:0x83cc7adb
  4069dc:	push   es
  4069dd:	mov    bl,ah
  4069df:	es js  0x4069e3
  4069e2:	jmp    0xe59c96a2
  4069e7:	sbb    BYTE PTR [edx+ebx*8],ah
  4069ea:	xchg   BYTE PTR [edx+0x77751505],dl
  4069f0:	xor    BYTE PTR [ebx],al
  4069f2:	fisttp QWORD PTR [edx]
  4069f4:	mov    al,0x97
  4069f6:	xor    ch,dh
  4069f8:	sbb    DWORD PTR [ebp+0xdd9dccc],0xffffff82
  4069ff:	inc    esp
  406a00:	mov    ebx,ecx
  406a02:	mov    dh,0xa1
  406a04:	fnsave [ecx+ebp*8]
  406a07:	xchg   edx,eax
  406a08:	ds popa 
  406a0a:	sbb    eax,0xb6bd2def
  406a0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a10:	mov    cl,0xb6
  406a12:	repz daa 
  406a14:	pusha  
  406a15:	inc    ecx
  406a16:	xchg   edi,eax
  406a17:	or     ch,BYTE PTR [ebx]
  406a19:	push   0xa3e1154e
  406a1e:	inc    ebx
  406a1f:	jle    0x406a0d
  406a21:	xchg   esi,eax
  406a22:	icebp  
  406a23:	sbb    eax,0x631fe0ad
  406a28:	mov    ch,0x2f
  406a2a:	scas   al,BYTE PTR es:[edi]
  406a2b:	into   
  406a2c:	add    BYTE PTR [esi-0x19],cl
  406a2f:	fisubr WORD PTR [eax+0x49]
  406a32:	sub    ah,BYTE PTR [ebx-0x1f]
  406a35:	cmc    
  406a36:	nop
  406a37:	dec    ebx
  406a38:	mov    ecx,0xdd982d35
  406a3d:	dec    esp
  406a3e:	iret   
  406a3f:	xchg   ebp,eax
  406a40:	gs mov ecx,0x8372de2b
  406a46:	mov    eax,0x20b6dc6f
  406a4b:	mov    ds:0x8dd79b6e,al
  406a50:	push   cs
  406a51:	push   esi
  406a52:	ffreep st(2)
  406a54:	lods   al,BYTE PTR ds:[esi]
  406a55:	jl     0x4069f3
  406a57:	call   0xe5d:0xe9886dc5
  406a5e:	push   ebx
  406a5f:	(bad)  
  406a60:	into   
  406a61:	ja     0x406a3a
  406a63:	out    0xe4,eax
  406a65:	and    BYTE PTR [edx-0x15b86499],ch
  406a6b:	fstp   QWORD PTR [ebp+0x10]
  406a6e:	(bad)  
  406a6f:	leave  
  406a70:	adc    esi,DWORD PTR [ebp-0x5b6e74f9]
  406a76:	loopne 0x406a71
  406a78:	mov    ebx,0x3f66b2e5
  406a7d:	out    0x63,eax
  406a7f:	pop    ebx
  406a80:	inc    ecx
  406a81:	shl    DWORD PTR [eax+0x624b574],cl
  406a87:	dec    eax
  406a88:	mov    dh,cl
  406a8a:	loop   0x406a69
  406a8c:	loope  0x406a7d
  406a8e:	rol    BYTE PTR [esi+0x6177c715],0xfc
  406a95:	sti    
  406a96:	(bad)  
  406a98:	and    cl,BYTE PTR [esi+0x6]
  406a9b:	(bad)  
  406a9c:	loop   0x406a3a
  406a9e:	cmp    al,0xcc
  406aa0:	jp     0x406a8b
  406aa2:	outs   dx,DWORD PTR ds:[esi]
  406aa3:	call   FWORD PTR [edi]
  406aa5:	arpl   WORD PTR [ebp+0xf],di
  406aa8:	jge    0x406a71
  406aaa:	and    edi,esp
  406aac:	rcr    BYTE PTR [ebp-0x1e],cl
  406aaf:	jmp    0x39111231
  406ab4:	aaa    
  406ab5:	push   0xffffffe4
  406ab7:	xchg   BYTE PTR fs:[edx],ch
  406aba:	lods   eax,DWORD PTR ds:[esi]
  406abb:	mov    ecx,0xfc095805
  406ac0:	je     0x406b21
  406ac2:	dec    esp
  406ac3:	adc    eax,0x9474f8e8
  406ac8:	jns    0x406a6e
  406aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406acb:	imul   ebx,DWORD PTR [edx+0x65e7c18a],0x1e
  406ad2:	ins    DWORD PTR es:[edi],dx
  406ad3:	das    
  406ad4:	fucomp st(5)
  406ad6:	push   ds
  406ad7:	in     al,0xc4
  406ad9:	pop    eax
  406ada:	leave  
  406adb:	(bad)  
  406adc:	arpl   WORD PTR [ebp-0x79f32f1d],di
  406ae2:	rol    BYTE PTR [edx],1
  406ae4:	les    esi,FWORD PTR [eax-0x1bd8ed25]
  406aea:	test   al,0x14
  406aec:	adc    BYTE PTR [edi],ah
  406aee:	xor    al,0x15
  406af0:	or     al,0x9
  406af2:	rcl    DWORD PTR es:[esi+ebx*1-0x4a9a24b1],0x14
  406afb:	mov    bh,0xea
  406afd:	dec    edx
  406afe:	push   ebp
  406aff:	inc    ecx
  406b00:	xor    ecx,eax
  406b02:	add    dl,ah
  406b04:	mov    bh,0xe4
  406b06:	adc    ecx,DWORD PTR [edi]
  406b08:	into   
  406b09:	ds in  al,dx
  406b0b:	leave  
  406b0c:	inc    ebx
  406b0d:	add    al,BYTE PTR ds:0xd5521ded
  406b13:	push   esi
  406b14:	jb     0x406b0f
  406b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b17:	gs imul esp,ebx,0xa1013083
  406b1e:	rol    BYTE PTR [eax+0x72],0x87
  406b22:	dec    ebx
  406b23:	aam    0xcb
  406b25:	sbb    eax,0xf07082f
  406b2a:	inc    eax
  406b2b:	retf   
  406b2c:	std    
  406b2d:	push   ebp
  406b2e:	test   eax,0xead24e00
  406b33:	push   ebx
  406b34:	jp     0x406b41
  406b36:	mov    cl,0x37
  406b38:	pop    edx
  406b39:	call   0xd323ac47
  406b3e:	sahf   
  406b3f:	mov    eax,ds:0x2ead9156
  406b44:	into   
  406b45:	jmp    0x6bd8e525
  406b4a:	loope  0x406b84
  406b4c:	lock out dx,eax
  406b4e:	es fsubr st,st(5)
  406b51:	outs   dx,BYTE PTR ds:[esi]
  406b52:	adc    BYTE PTR [eax],bh
  406b54:	mov    BYTE PTR [ebp-0x18],dh
  406b57:	pop    ebx
  406b58:	lds    ebx,FWORD PTR [edx]
  406b5a:	rol    DWORD PTR [edi],cl
  406b5c:	xchg   BYTE PTR [ecx],bh
  406b5e:	sub    esp,DWORD PTR ss:[ecx-0x19351036]
  406b65:	inc    ebx
  406b66:	aad    0x96
  406b68:	call   FWORD PTR [esi-0x4c]
  406b6b:	jo     0x406ba2
  406b6d:	loop   0x406b29
  406b6f:	sub    al,0x65
  406b71:	jge    0x406beb
  406b73:	(bad)  
  406b74:	fst    QWORD PTR [esi-0x64d0088e]
  406b7a:	and    bh,BYTE PTR [esi+0x53340f24]
  406b80:	sahf   
  406b81:	pop    ss
  406b82:	and    DWORD PTR [esi],0x1d
  406b85:	aam    0x72
  406b87:	push   ecx
  406b88:	push   ebp
  406b89:	inc    esp
  406b8a:	xchg   cl,al
  406b8c:	jmp    0x9c2a:0x62bb22f
  406b93:	inc    esp
  406b94:	and    DWORD PTR [edi+0xdfd87ee],0xffffffd9
  406b9b:	mov    eax,0x99b51348
  406ba0:	cmc    
  406ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ba2:	cwde   
  406ba3:	dec    ecx
  406ba4:	xlat   BYTE PTR ds:[ebx]
  406ba5:	inc    esi
  406ba6:	lods   al,BYTE PTR ds:[esi]
  406ba7:	test   BYTE PTR [ebp+0x462a3ae],cl
  406bad:	aaa    
  406bae:	inc    ebx
  406baf:	in     al,0x65
  406bb1:	sbb    dl,BYTE PTR ds:0x69a4f8a0
  406bb7:	stc    
  406bb8:	add    al,0xb6
  406bba:	imul   ebp,DWORD PTR [ecx],0xfffffffa
  406bbd:	inc    ebp
  406bbe:	jbe    0x406c20
  406bc0:	dec    ebp
  406bc1:	jbe    0x406c1a
  406bc3:	cs sub ah,al
  406bc6:	jbe    0x406b74
  406bc8:	sbb    BYTE PTR cs:[ecx+0x4d],0x16
  406bcd:	imul   edi,DWORD PTR [edx*4-0x7f465ea0],0x1dd5be8e
  406bd8:	pop    esi
  406bd9:	stc    
  406bda:	pop    ebx
  406bdb:	dec    ebx
  406bdc:	and    cl,BYTE PTR [ebp+esi*1-0x29]
  406be0:	xchg   ecx,eax
  406be1:	call   0x942e:0xdc00addc
  406be8:	stc    
  406be9:	retf   
  406bea:	loop   0x406bc6
  406bec:	in     al,dx
  406bed:	pop    ds
  406bee:	adc    BYTE PTR [edx-0x74eebd4f],cl
  406bf4:	call   DWORD PTR [edx-0x48d8880d]
  406bfa:	and    DWORD PTR [ecx-0x1e441541],0x164d3897
  406c04:	inc    ecx
  406c05:	mov    bl,0x3d
  406c07:	dec    esp
  406c08:	loopne 0x406b93
  406c0a:	into   
  406c0b:	sub    ebx,DWORD PTR [ecx-0x5c5be233]
  406c11:	jge    0x406c34
  406c13:	je     0x406bf1
  406c15:	test   eax,0x1113cabd
  406c1a:	int    0xd2
  406c1c:	inc    edi
  406c1d:	or     bl,BYTE PTR [ebp+0x601e9fb7]
  406c23:	hlt    
  406c24:	mov    dh,0xab
  406c26:	stos   DWORD PTR es:[edi],eax
  406c27:	rol    DWORD PTR [edx-0xd011cbd],1
  406c2d:	push   eax
  406c2e:	dec    ebp
  406c2f:	pop    edx
  406c30:	pop    es
  406c31:	pop    ecx
  406c32:	outs   dx,BYTE PTR ds:[esi]
  406c33:	outs   dx,BYTE PTR ds:[esi]
  406c34:	dec    esi
  406c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c36:	cmp    BYTE PTR [eax+ecx*4+0x17],ah
  406c3a:	sub    ebx,esi
  406c3c:	sub    eax,0x7935bbee
  406c41:	dec    edx
  406c42:	mov    BYTE PTR [esi-0x185a0f8],ah
  406c48:	fdiv   QWORD PTR [edx-0x29]
  406c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c4c:	pop    ebp
  406c4d:	and    BYTE PTR [ebp-0x287ee2e3],dl
  406c53:	imul   ch
  406c55:	es gs (bad) 
  406c58:	sbb    eax,0xe61c8e0d
  406c5d:	mov    bl,0xec
  406c5f:	dec    ecx
  406c60:	das    
  406c61:	lahf   
  406c62:	das    
  406c63:	or     DWORD PTR [edx-0x1863a03c],ebp
  406c69:	xchg   edi,eax
  406c6a:	js     0x406c10
  406c6c:	sub    eax,0x8b20ded5
  406c71:	mov    bh,0xa3
  406c73:	and    dh,BYTE PTR [ebp+ebx*1+0x2cad300c]
  406c7a:	adc    ebx,ebx
  406c7c:	or     edx,DWORD PTR [ebp+eax*2+0x4d8341ba]
  406c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c84:	ds enter 0xb312,0x92
  406c89:	xor    al,0x55
  406c8b:	loope  0x406cd2
  406c8d:	popf   
  406c8e:	xchg   edi,eax
  406c8f:	stos   DWORD PTR es:[edi],eax
  406c90:	mov    bl,BYTE PTR [ebx]
  406c92:	jmp    0x9d63:0x64841ae9
  406c99:	mov    bl,0xe9
  406c9b:	cdq    
  406c9c:	push   ebx
  406c9d:	ret    0x17a4
  406ca0:	mov    al,0x7c
  406ca2:	test   eax,0xc1f2ff15
  406ca7:	add    al,BYTE PTR [eax+0x1e47f900]
  406cad:	and    ecx,eax
  406caf:	mov    bl,0x64
  406cb1:	inc    edx
  406cb2:	sub    BYTE PTR [eax+0x43],al
  406cb5:	xor    dl,0x9b
  406cb8:	adc    dh,BYTE PTR [esi]
  406cba:	pushf  
  406cbb:	xor    BYTE PTR [esp+edx*8+0x32],dh
  406cbf:	jmp    0x4b7457b
  406cc4:	inc    edx
  406cc5:	fimul  DWORD PTR [esi-0x166fb2d]
  406ccb:	scas   al,BYTE PTR es:[edi]
  406ccc:	ja     0x406d06
  406cce:	mov    WORD PTR [eax-0x7d],gs
  406cd1:	mov    bl,0x54
  406cd3:	fs jno 0x406cb2
  406cd6:	push   cs
  406cd7:	das    
  406cd8:	ins    BYTE PTR es:[edi],dx
  406cd9:	xchg   ecx,ecx
  406cdb:	clc    
  406cdc:	dec    eax
  406cdd:	jl     0x406c7b
  406cdf:	call   0x6607:0x6d5ed4dc
  406ce6:	adc    al,0xcb
  406ce8:	mov    dh,0xe8
  406cea:	xchg   cl,cl
  406cec:	jp     0x406cca
  406cee:	push   cs
  406cef:	or     eax,0x45d0b811
  406cf4:	fild   WORD PTR [ebx]
  406cf6:	dec    eax
  406cf7:	inc    eax
  406cf8:	hlt    
  406cf9:	jns    0x406d3a
  406cfb:	test   eax,0x651a55fb
  406d00:	fcomp  DWORD PTR [ebp+0x640860ac]
  406d06:	pop    esp
  406d07:	push   cs
  406d08:	dec    edx
  406d09:	idiv   DWORD PTR [ecx-0x7c]
  406d0c:	add    ah,dl
  406d0e:	inc    ebx
  406d0f:	pop    esi
  406d10:	out    0x51,eax
  406d12:	sub    edx,ecx
  406d14:	jg     0x406cf6
  406d16:	add    al,0xfb
  406d18:	mov    bl,0x6
  406d1a:	jg     0x406d6d
  406d1c:	leave  
  406d1d:	lods   eax,DWORD PTR ds:[esi]
  406d1e:	mov    ebp,0x9db796f4
  406d23:	inc    edx
  406d24:	cmp    al,0x60
  406d26:	fisub  WORD PTR [ebx+ebp*8]
  406d29:	pop    ds
  406d2a:	xor    al,0x57
  406d2c:	xor    eax,0x428c52df
  406d31:	xchg   DWORD PTR [ebx+eiz*4+0x64b85ac8],ebx
  406d38:	inc    esi
  406d39:	xchg   esi,eax
  406d3a:	push   ds
  406d3b:	lahf   
  406d3c:	fidivr WORD PTR [edi-0x4c]
  406d3f:	shl    DWORD PTR [edi+0x44],1
  406d42:	lock icebp 
  406d44:	add    bh,BYTE PTR [ebx-0x75f291d8]
  406d4a:	inc    ebx
  406d4b:	hlt    
  406d4c:	xchg   DWORD PTR [ecx+0x68],ebp
  406d4f:	ds stc 
  406d51:	cs ins BYTE PTR es:[edi],dx
  406d53:	das    
  406d54:	das    
  406d55:	arpl   WORD PTR [eax+0xe],bx
  406d58:	stc    
  406d59:	and    dl,BYTE PTR [ecx-0x23]
  406d5c:	fwait
  406d5d:	mov    WORD PTR [edx+0x11],ss
  406d60:	dec    eax
  406d61:	test   eax,0x5b7628e5
  406d66:	(bad)  
  406d68:	inc    ebx
  406d69:	mov    esi,0xd2abf878
  406d6e:	lock loopne 0x406d45
  406d71:	sub    DWORD PTR ds:0xc69bdb3d,ecx
  406d77:	loop   0x406d5b
  406d79:	add    dh,BYTE PTR ds:0xfe09acd2
  406d7f:	cli    
  406d80:	add    DWORD PTR [ebp+0x24593acf],esp
  406d86:	mov    dl,0x1f
  406d88:	pop    eax
  406d89:	push   esi
  406d8a:	scas   al,BYTE PTR es:[edi]
  406d8b:	out    dx,al
  406d8c:	(bad)  
  406d8d:	pop    esp
  406d8e:	shl    DWORD PTR [esi],1
  406d90:	xor    ch,ah
  406d92:	cmp    BYTE PTR [esi+0x68f6d3bf],ch
  406d98:	js     0x406df1
  406d9a:	and    DWORD PTR ds:0x7cf0f312,eax
  406da0:	fwait
  406da1:	aaa    
  406da2:	sahf   
  406da3:	mov    edi,0x6479fc29
  406da8:	enter  0x8ea3,0xc6
  406dac:	mov    ds:0x82989d1c,al
  406db1:	scas   eax,DWORD PTR es:[edi]
  406db2:	jo     0x406de1
  406db4:	clc    
  406db5:	fiadd  DWORD PTR [eax]
  406db7:	sub    eax,0xe3b6147f
  406dbc:	pop    ds
  406dbd:	xchg   esp,eax
  406dbe:	les    ebp,FWORD PTR [ecx]
  406dc0:	aas    
  406dc1:	and    ebp,DWORD PTR [eax]
  406dc3:	sbb    DWORD PTR [ecx+0x45],ebx
  406dc6:	aad    0xbe
  406dc8:	mov    dh,BYTE PTR [edi-0x6f]
  406dcb:	icebp  
  406dcc:	scas   eax,DWORD PTR es:[edi]
  406dcd:	sub    al,0xf7
  406dcf:	rcl    BYTE PTR [edx+edi*4+0xb],cl
  406dd3:	bound  esi,QWORD PTR [eax-0x64f24bbd]
  406dd9:	pushf  
  406dda:	sar    esp,0x27
  406ddd:	retf   
  406dde:	mov    ebx,0x8b05f234
  406de3:	mov    bl,BYTE PTR [ebp-0x3a3dba31]
  406de9:	or     cl,BYTE PTR [ebx]
  406deb:	cmp    eax,0x273f0214
  406df0:	sahf   
  406df1:	or     ah,BYTE PTR [ecx-0x502ab123]
  406df7:	sar    ch,cl
  406df9:	sub    al,0x3d
  406dfb:	sti    
  406dfc:	call   0x5c01:0xae296be2
  406e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e04:	pop    eax
  406e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e06:	mov    eax,ds:0xecde250
  406e0b:	add    eax,0x61ce1e9e
  406e10:	push   0xffffffe7
  406e12:	inc    eax
  406e13:	addr16 jo 0x406e58
  406e16:	cli    
  406e17:	xchg   edi,eax
  406e18:	fild   WORD PTR [edi]
  406e1a:	je     0x406e8c
  406e1c:	fstp   QWORD PTR [esi+0x79]
  406e1f:	mov    BYTE PTR [eax+0x3a9aef00],dl
  406e25:	mov    dl,0x40
  406e27:	add    dl,ch
  406e29:	ins    DWORD PTR es:[edi],dx
  406e2a:	fild   DWORD PTR [edx]
  406e2c:	pop    esp
  406e2d:	fdivr  QWORD PTR [ebp-0x38]
  406e30:	jno    0x406ea0
  406e32:	jp     0x406e5f
  406e34:	mov    esi,DWORD PTR [eax-0x5761c782]
  406e3a:	retf   0xdc5f
  406e3d:	xchg   ebx,eax
  406e3e:	rol    BYTE PTR [ecx-0x165b0d20],cl
  406e44:	or     eax,0x14e883eb
  406e49:	loopne 0x406df2
  406e4b:	pop    ds
  406e4c:	mov    edx,0x80a6353a
  406e51:	jge    0x406ded
  406e53:	rol    ebp,cl
  406e55:	push   esp
  406e56:	cmp    DWORD PTR [ecx],ecx
  406e58:	xchg   BYTE PTR [ecx+ecx*2-0x64],bh
  406e5c:	mov    bl,0x5
  406e5e:	sbb    al,0xef
  406e60:	sti    
  406e61:	sbb    al,0x14
  406e64:	sbb    DWORD PTR [ebx-0x40b8c9f0],esp
  406e6a:	imul   edx,DWORD PTR ss:[ecx],0x5739d8c6
  406e71:	push   ebp
  406e72:	add    DWORD PTR [edi+esi*4-0x2],0x8d849fb7
  406e7a:	cmp    BYTE PTR [ebp-0x3f8c8c6],dl
  406e80:	mov    ch,0xaa
  406e82:	pop    ebx
  406e83:	ret    
  406e84:	xchg   ebx,eax
  406e85:	jne    0x406e6a
  406e87:	or     DWORD PTR [ecx-0x6d],ecx
  406e8a:	mov    ch,0x33
  406e8c:	test   BYTE PTR ds:0x5c81915d,dh
  406e92:	sub    edx,esp
  406e94:	call   0x64d0:0xb763c1f3
  406e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e9c:	std    
  406e9d:	jp     0x406e8d
  406e9f:	mov    esi,0xb57d7df8
  406ea4:	adc    bh,dh
  406ea6:	mov    cl,BYTE PTR [esi-0xe7dbf52]
  406eac:	fcmovne st,st(1)
  406eae:	hlt    
  406eaf:	mov    eax,0xa746cba4
  406eb4:	(bad)  
  406eb5:	rcl    DWORD PTR [ebx-0x57],cl
  406eb8:	jmp    0x406e4a
  406eba:	jmp    0x406f10
  406ebc:	fbld   TBYTE PTR [esi-0x62d0a0cb]
  406ec2:	dec    esp
  406ec3:	stos   BYTE PTR es:[edi],al
  406ec4:	dec    esi
  406ec5:	rcr    BYTE PTR [esp+edx*4+0x102e90ee],cl
  406ecc:	stos   BYTE PTR es:[edi],al
  406ecd:	jg     0x406e79
  406ecf:	push   ebp
  406ed0:	push   edx
  406ed1:	inc    esi
  406ed2:	xor    ebx,edi
  406ed4:	leave  
  406ed5:	out    0xd9,eax
  406ed7:	jmp    0x406ec5
  406ed9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eda:	out    0x13,al
  406edc:	sbb    DWORD PTR gs:[esi-0x68409437],eax
  406ee3:	mov    ah,0x2f
  406ee5:	ins    DWORD PTR es:[edi],dx
  406ee6:	pushf  
  406ee7:	test   DWORD PTR [edi+eax*4+0x3a0e8072],esi
  406eee:	or     DWORD PTR [ebx+0x2c],ebp
  406ef1:	sub    eax,0xd52ce88f
  406ef6:	stos   DWORD PTR es:[edi],eax
  406ef7:	fistp  WORD PTR [ecx]
  406ef9:	pushf  
  406efa:	retf   0x1fd0
  406efd:	(bad)  
  406efe:	dec    esi
  406eff:	ficomp WORD PTR [edi-0x35]
  406f02:	clc    
  406f03:	sub    edx,DWORD PTR [edi]
  406f05:	ror    DWORD PTR [ebx+eax*4],0xb1
  406f09:	mov    esi,0xfc008201
  406f0e:	into   
  406f0f:	pusha  
  406f10:	icebp  
  406f11:	shr    BYTE PTR [eax+0x5d],cl
  406f14:	add    ch,BYTE PTR [edi-0x1cc346da]
  406f1a:	add    DWORD PTR [edi],ebp
  406f1c:	call   0x31a3:0xe39ca08e
  406f23:	adc    ebx,ebx
  406f25:	loop   0x406ec1
  406f27:	cdq    
  406f28:	pop    esp
  406f29:	fwait
  406f2a:	push   ss
  406f2b:	imul   ebx,esi,0x65
  406f2e:	js     0x406f50
  406f30:	add    BYTE PTR [esp+ebx*2],al
  406f33:	add    bl,BYTE PTR [ebx-0x7]
  406f36:	xchg   DWORD PTR [esi+0x31],ecx
  406f39:	mov    ds:0x527c3be7,al
  406f3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f3f:	icebp  
  406f40:	pop    esi
  406f41:	add    bl,BYTE PTR [eax+0x62]
  406f44:	pop    edi
  406f45:	sub    bh,BYTE PTR [edi]
  406f47:	icebp  
  406f48:	out    0xc2,eax
  406f4a:	aaa    
  406f4b:	(bad)  
  406f4c:	or     BYTE PTR [edi+0x240ec8bc],ch
  406f52:	jae    0x406f2e
  406f54:	push   edx
  406f55:	enter  0x79a8,0x30
  406f59:	mov    ebp,0x706834b7
  406f5e:	ins    DWORD PTR es:[edi],dx
  406f5f:	push   esp
  406f60:	and    dh,BYTE PTR es:[edx-0x2]
  406f64:	lods   al,BYTE PTR ds:[esi]
  406f65:	or     esi,esp
  406f67:	push   ecx
  406f68:	pop    edx
  406f69:	jmp    0xd3f7:0x27aa1f7f
  406f70:	repz or BYTE PTR [ebx],bh
  406f73:	int3   
  406f74:	loope  0x406f1a
  406f76:	(bad)  
  406f77:	sbb    al,0x5
  406f79:	mov    ebp,0xaf2af060
  406f7e:	aad    0x11
  406f80:	in     al,0x71
  406f82:	sbb    al,0x8b
  406f84:	inc    bx
  406f86:	icebp  
  406f87:	mov    ebx,0x371c0d38
  406f8c:	dec    esi
  406f8d:	adc    DWORD PTR [ecx],eax
  406f8f:	xchg   ebx,eax
  406f90:	jecxz  0x406f7c
  406f92:	imul   edi,DWORD PTR [eax],0xffffffec
  406f95:	cs pop esp
  406f97:	mov    ebp,0x5cf87a73
  406f9c:	push   es
  406f9d:	gs loope 0x406f51
  406fa0:	nop
  406fa1:	aam    0xfe
  406fa3:	sub    eax,0x24f8fb4c
  406fa8:	dec    ecx
  406fa9:	ret    0xbd8a
  406fac:	fcmovb st,st(1)
  406fae:	aaa    
  406faf:	pop    eax
  406fb0:	addr16 call 0x68efa0c8
  406fb6:	mov    esi,0x1c9f81be
  406fbb:	jne    0x406f62
  406fbd:	sub    cl,BYTE PTR [ebx-0x20ee5d4d]
  406fc3:	jne    0x407044
  406fc5:	fucomip st,st(7)
  406fc7:	jno    0x406ff4
  406fc9:	fwait
  406fca:	xor    BYTE PTR [esi+0x53a8ed77],0x42
  406fd1:	dec    ebx
  406fd2:	sahf   
  406fd3:	or     ah,BYTE PTR [ebx+eax*1-0x7cdfaefe]
  406fda:	push   es
  406fdb:	sbb    edi,0x3f
  406fde:	adc    DWORD PTR [ecx],eax
  406fe0:	ficom  DWORD PTR [esi-0x65]
  406fe3:	sub    cl,BYTE PTR [ebx+0x72f69f9c]
  406fe9:	mov    esi,ss
  406feb:	(bad)  [edx+ecx*1+0x24]
  406fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ff0:	dec    eax
  406ff1:	inc    eax
  406ff2:	mov    ch,0x73
  406ff4:	scas   eax,DWORD PTR es:[edi]
  406ff5:	push   esi
  406ff6:	inc    esp
  406ff7:	stos   BYTE PTR es:[edi],al
  406ff8:	fbstp  TBYTE PTR [edi+0x1b4f0d2d]
  406ffe:	imul   eax,edx,0x4fcfb14
  407004:	sbb    bh,cl
  407006:	aam    0x47
  407008:	ds mov cl,0xb8
  40700b:	jge    0x406fa4
  40700d:	sbb    eax,0x149e0a65
  407012:	add    al,0x64
  407014:	(bad)  
  407015:	repz dec esi
  407017:	lock jecxz 0x406fc3
  40701a:	test   eax,0xd0cd0b1d
  40701f:	leave  
  407020:	ins    DWORD PTR es:[edi],dx
  407021:	sub    BYTE PTR [esi],0x38
  407024:	sbb    DWORD PTR [edi-0x2d],ebx
  407027:	push   ds
  407028:	mov    al,ds:0x9261d758
  40702d:	cmc    
  40702e:	(bad)  
  40702f:	mov    cl,0x1c
  407031:	push   edi
  407032:	fidivr DWORD PTR [edx]
  407034:	lods   al,BYTE PTR ds:[esi]
  407035:	cmp    eax,0x6eb9d156
  40703a:	push   es
  40703b:	ins    DWORD PTR es:[di],dx
  40703d:	mov    edi,0x55ef55c
  407042:	daa    
  407043:	push   DWORD PTR [esi+0x37ecda20]
  407049:	(bad)
  40704d:	xor    bl,BYTE PTR [eax+0x6d]
  407050:	jns    0x4070a7
  407052:	call   0x670c7afc
  407057:	cmp    bh,BYTE PTR ds:0xe5cb3a4e
  40705d:	stos   BYTE PTR es:[edi],al
  40705e:	enter  0xadde,0xd7
  407062:	fstp   QWORD PTR [esi]
  407064:	outs   dx,DWORD PTR ds:[esi]
  407065:	and    DWORD PTR [edi],eax
  407067:	add    DWORD PTR [edi-0x76f616c9],esi
  40706d:	cli    
  40706e:	call   0x27b44b64
  407073:	push   esi
  407074:	cdq    
  407075:	adc    cl,BYTE PTR [ecx+eax*8]
  407078:	jg     0x406ffc
  40707a:	and    esp,DWORD PTR [edi-0x1a2d7106]
  407080:	cmp    BYTE PTR gs:[esi],ch
  407083:	sbb    DWORD PTR [ebx-0x4aa0cf8f],ebp
  407089:	push   0x80162bd5
  40708e:	out    0x68,eax
  407090:	push   esp
  407091:	clc    
  407092:	push   ebp
  407093:	sbb    BYTE PTR [ecx+0x6f2f8f82],ch
  407099:	je     0x407119
  40709b:	jns    0x40702f
  40709d:	imul   ebp,ebp,0x48
  4070a0:	ficom  DWORD PTR [edi-0x27]
  4070a3:	into   
  4070a4:	call   FWORD PTR [ecx+0x13]
  4070a7:	test   edx,0x315cd3a1
  4070ad:	xchg   DWORD PTR [edx-0x7],ebp
  4070b0:	pop    ecx
  4070b1:	sub    cl,BYTE PTR [edi+0x71]
  4070b4:	shl    bh,1
  4070b6:	xchg   DWORD PTR [ecx-0x2cfa84c1],esp
  4070bc:	pop    ebp
  4070bd:	jecxz  0x407096
  4070bf:	and    BYTE PTR [ebp+0x1e0a5795],dl
  4070c5:	icebp  
  4070c6:	sub    al,0x73
  4070c8:	mov    dh,0x4
  4070ca:	jo     0x407141
  4070cc:	nop
  4070cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070ce:	push   0xffffffa2
  4070d0:	sahf   
  4070d1:	dec    ecx
  4070d2:	sub    eax,0x37f3abb5
  4070d7:	test   eax,0xc8bda5b0
  4070dc:	(bad)  
  4070dd:	jmp    0xa120:0x41599510
  4070e4:	ret    
  4070e5:	sbb    bl,ah
  4070e7:	cmp    edi,DWORD PTR [ebp+eax*2+0x76]
  4070eb:	in     eax,0x93
  4070ed:	inc    eax
  4070ee:	add    bh,al
  4070f0:	mov    dl,0x98
  4070f2:	dec    ebp
  4070f3:	jns    0x4070a5
  4070f5:	in     al,0x14
  4070f7:	mov    ebp,0xf206f978
  4070fc:	daa    
  4070fd:	cmp    dh,BYTE PTR [ecx+0x12]
  407100:	sbb    eax,0xe316f26a
  407105:	jnp    0x4070a3
  407107:	cmp    cl,ah
  407109:	push   ebp
  40710a:	test   al,0xc8
  40710c:	mov    esi,0x22cdb642
  407111:	gs and ah,ch
  407114:	mov    dh,0x72
  407116:	cmp    eax,0xef0586d7
  40711b:	jmp    0x620e33d6
  407120:	sahf   
  407121:	movntq QWORD PTR [ebx-0x133db58b],mm2
  407128:	fst    DWORD PTR [edx+esi*1-0x55]
  40712c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40712d:	dec    ebx
  40712e:	or     al,0x96
  407130:	mov    edx,0xda4cd9e
  407135:	test   al,0x36
  407137:	fsubr  QWORD PTR [edx-0x1edde3f9]
  40713d:	lods   al,BYTE PTR ds:[esi]
  40713e:	repnz aam 0x10
  407141:	cmp    dl,BYTE PTR [ecx+ecx*2]
  407144:	push   esp
  407145:	les    edx,FWORD PTR [ebp+eax*8+0x206aaa0c]
  40714c:	stc    
  40714d:	and    al,ah
  40714f:	stos   DWORD PTR es:[edi],eax
  407150:	push   ds
  407151:	ror    ecx,1
  407153:	rcr    BYTE PTR [ebx],cl
  407155:	xchg   edi,eax
  407156:	jbe    0x407185
  407158:	stos   DWORD PTR es:[edi],eax
  407159:	pop    ebx
  40715a:	mov    ecx,edi
  40715c:	mov    esp,0x2b6babd1
  407161:	sbb    ecx,DWORD PTR [edi+0x55a692a6]
  407167:	imul   eax,DWORD PTR [edx+esi*2-0x6c],0x5f23a260
  40716f:	cli    
  407170:	cwde   
  407171:	mov    ebp,0x44e98b8c
  407176:	test   BYTE PTR [ebx+0x3c8bfa5f],bh
  40717c:	or     ebx,ebp
  40717e:	outs   dx,BYTE PTR ds:[esi]
  40717f:	mov    esp,0x73ff052a
  407184:	dec    ecx
  407185:	retf   0x553d
  407188:	int3   
  407189:	and    DWORD PTR [ebx-0x3],ecx
  40718c:	adc    eax,0xbd99fc7c
  407191:	rcl    ebp,0xa4
  407194:	neg    DWORD PTR ds:0xfd3166fa
  40719a:	mov    ecx,edi
  40719c:	stos   BYTE PTR es:[edi],al
  40719d:	aaa    
  40719e:	sub    DWORD PTR [ebp+0x6b],eax
  4071a1:	xchg   ecx,eax
  4071a2:	mov    ebp,gs
  4071a4:	push   ds
  4071a5:	push   ebx
  4071a6:	sbb    al,0x10
  4071a8:	into   
  4071a9:	cmp    bh,BYTE PTR [ebp+0xf3f938]
  4071af:	ret    
  4071b0:	mov    eax,ds:0x4ca63c1b
  4071b5:	scas   eax,DWORD PTR es:[edi]
  4071b6:	mov    ch,0x10
  4071b8:	icebp  
  4071b9:	pop    esi
  4071ba:	jmp    FWORD PTR [eax]
  4071bc:	ret    0xe102
  4071bf:	call   0x196:0x91c7b678
  4071c6:	and    DWORD PTR [edi+0x45],0x47e10053
  4071cd:	mov    ds:0x97ad3a9c,al
  4071d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071d3:	sub    ah,ah
  4071d5:	pop    edx
  4071d6:	and    bh,BYTE PTR [ecx+0x6c7d5493]
  4071dc:	mov    al,bh
  4071de:	je     0x40719b
  4071e0:	xchg   esp,eax
  4071e1:	loopne 0x40725e
  4071e3:	xor    cl,BYTE PTR [ebx-0x2ed5db0b]
  4071e9:	jae    0x407230
  4071eb:	sub    al,0x1b
  4071ed:	add    eax,0xb69ec83f
  4071f2:	shl    BYTE PTR ds:0x563ff4b3,1
  4071f8:	pop    eax
  4071f9:	ss out 0x1a,al
  4071fc:	inc    edi
  4071fd:	int3   
  4071fe:	les    edi,FWORD PTR [edi-0x51d0d4ee]
  407204:	jle    0x4071f6
  407206:	call   0xd833:0xf10db12e
  40720d:	std    
  40720e:	sti    
  40720f:	sub    ecx,0x98979c05
  407215:	jo     0x4071c2
  407217:	cmp    BYTE PTR [esi-0x58],0x67
  40721b:	das    
  40721c:	cmp    BYTE PTR [ebx],bh
  40721e:	cdq    
  40721f:	xor    DWORD PTR [ebx],ebx
  407221:	push   0xffffffe0
  407223:	mov    dh,0xc5
  407225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407226:	jnp    0x4072a5
  407228:	pop    edi
  407229:	jo     0x4072a8
  40722b:	dec    ebp
  40722c:	push   ds
  40722d:	mov    ds:0xeca69963,al
  407232:	sub    eax,0x3ce8943e
  407237:	lods   al,BYTE PTR ss:[esi]
  407239:	mov    edx,DWORD PTR [ebx-0x29b64395]
  40723f:	sbb    ebp,edx
  407241:	call   0xc4f399cb
  407246:	nop
  407247:	imul   eax
  407249:	fsub   DWORD PTR [ebp+0x76]
  40724c:	rcr    DWORD PTR [esi-0x50fc18b0],0x2f
  407253:	mov    ds:0x65a52e97,al
  407258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407259:	scas   al,BYTE PTR es:[edi]
  40725a:	mulps  xmm0,XMMWORD PTR [edx-0x2b]
  40725e:	out    dx,al
  40725f:	adc    al,0x1c
  407261:	jns    0x407254
  407263:	jbe    0x407219
  407265:	ds pop eax
  407267:	cmp    al,0x98
  407269:	push   ss
  40726a:	cwde   
  40726b:	push   0xffffff8a
  40726d:	mov    al,ds:0xe1cc8b1e
  407272:	sbb    al,0xa7
  407274:	outs   dx,BYTE PTR ds:[esi]
  407275:	jo     0x4072c0
  407277:	pop    ds
  407278:	ror    BYTE PTR [edx-0x6e],cl
  40727b:	ret    0x73d
  40727e:	jo     0x4072b9
  407280:	xchg   esi,esi
  407282:	jae    0x407234
  407284:	neg    BYTE PTR [eax+0x3e7c1c84]
  40728a:	call   0x4720aefc
  40728f:	dec    ebp
  407290:	cmp    bl,BYTE PTR [edi+esi*2-0xa]
  407294:	push   0xffffffe4
  407296:	cld    
  407297:	rcr    DWORD PTR [esi+0x3],0xd8
  40729b:	into   
  40729c:	push   ebx
  40729d:	call   eax
  40729f:	cli    
  4072a0:	(bad)
  4072a5:	(bad)  
  4072a6:	out    dx,al
  4072a7:	push   ebx
  4072a8:	mov    ecx,0xaa9baa4d
  4072ad:	test   BYTE PTR [esi-0x750c8c68],bh
  4072b3:	jno    0x4072b5
  4072b5:	add    DWORD PTR [edi],esp
  4072b7:	sahf   
  4072b8:	mov    bh,0xcb
  4072ba:	int    0xfe
  4072bc:	scas   eax,DWORD PTR es:[edi]
  4072bd:	ins    DWORD PTR es:[edi],dx
  4072be:	jmp    0x43d90c19
  4072c3:	inc    ebx
  4072c4:	sub    DWORD PTR [edi],0xfffffffc
  4072c7:	mov    cs,WORD PTR [edx+0x31]
  4072ca:	inc    edi
  4072cb:	dec    edi
  4072cc:	(bad)  
  4072cd:	adc    ecx,DWORD PTR [esi-0x52a67953]
  4072d3:	pushw  0x60
  4072d6:	and    DWORD PTR [edi+0x28],ebp
  4072d9:	and    al,0xe9
  4072db:	xor    eax,0x73c3fdd7
  4072e0:	xchg   ecx,eax
  4072e1:	pop    ecx
  4072e2:	mov    dh,0xaa
  4072e4:	push   ss
  4072e5:	shr    dh,0x9b
  4072e8:	test   BYTE PTR [eax+esi*2+0x2df2f3ea],bl
  4072ef:	adc    dh,BYTE PTR [ecx+0x265a04c9]
  4072f5:	jmp    0x8a301e9d
  4072fa:	lahf   
  4072fb:	int3   
  4072fc:	dec    eax
  4072fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072fe:	daa    
  4072ff:	pop    ds
  407300:	xor    bh,BYTE PTR [edi]
  407302:	inc    ebp
  407303:	sub    BYTE PTR [edx+0x19],cl
  407306:	cwde   
  407307:	rcl    DWORD PTR [edx+0x3e6eac69],cl
  40730d:	test   DWORD PTR [eax+0x5c],0xf06bfda1
  407314:	mov    al,ds:0xa8fbfc38
  407319:	es call 0xdf90:0x50bbf385
  407321:	xchg   ebx,eax
  407322:	xchg   BYTE PTR [edi],ch
  407324:	fs xchg ebp,eax
  407326:	adc    dh,bl
  407328:	sbb    bh,BYTE PTR [esi]
  40732a:	int3   
  40732b:	adc    eax,0x14e4a70f
  407330:	in     al,0xd8
  407332:	lds    edx,FWORD PTR [edx-0x42a1ad93]
  407338:	jae    0x407340
  40733a:	jno    0x407360
  40733c:	out    dx,al
  40733d:	shl    BYTE PTR [edx+ebp*2+0x6a],1
  407341:	jb     0x4072d3
  407343:	cmp    ch,BYTE PTR [edx+0x65]
  407346:	dec    ecx
  407347:	leave  
  407348:	and    ah,BYTE PTR ds:0x8a2e64d
  40734e:	pop    ebx
  40734f:	mov    dl,0xfe
  407351:	fsub   QWORD PTR [edx-0x7c307148]
  407357:	and    dl,BYTE PTR [bp-0x335d]
  40735c:	icebp  
  40735d:	dec    esp
  40735e:	mov    eax,0x8106c129
  407363:	les    ecx,FWORD PTR [esi+0x48]
  407366:	lahf   
  407367:	cmp    dl,BYTE PTR [esi+0x67]
  40736a:	cmp    esp,DWORD PTR [ebx-0x4f]
  40736d:	jno    0x407346
  40736f:	rol    DWORD PTR [ecx-0x1173db83],0xf3
  407376:	adc    dh,BYTE PTR [edi]
  407378:	jge    0x40736e
  40737a:	(bad)  
  40737b:	std    
  40737c:	leave  
  40737d:	popf   
  40737e:	fstp   TBYTE PTR [eax+ebp*2+0x9]
  407382:	fisubr WORD PTR [ecx-0x31]
  407385:	fnstenv [ebp-0x77]
  407388:	test   cl,0x64
  40738b:	sahf   
  40738c:	aaa    
  40738d:	push   esi
  40738e:	repz pop eax
  407390:	and    BYTE PTR [esi],ch
  407392:	into   
  407393:	mul    BYTE PTR [ecx-0x69768a6c]
  407399:	sahf   
  40739a:	mov    ebp,0xb3986aca
  40739f:	and    al,0xf1
  4073a1:	add    BYTE PTR [ebp-0x72f16385],dh
  4073a7:	dec    edi
  4073a8:	or     DWORD PTR ds:0xf1865f9c,ebx
  4073ae:	mov    bh,BYTE PTR [esi+edi*8-0x2a2d92d2]
  4073b5:	sbb    DWORD PTR [edx-0x78],0x1f
  4073b9:	jne    0x407397
  4073bb:	jno    0x407354
  4073bd:	mov    DWORD PTR [ecx],ebx
  4073bf:	aaa    
  4073c0:	sar    BYTE PTR [ebp+0x693db2e1],cl
  4073c6:	js     0x4073a0
  4073c8:	cld    
  4073c9:	retf   0xb1e4
  4073cc:	sar    DWORD PTR [eax+0x7e6d22ff],cl
  4073d2:	ins    DWORD PTR es:[edi],dx
  4073d3:	mov    dl,0x4c
  4073d5:	mov    cl,0x13
  4073d7:	add    al,0xb2
  4073d9:	mov    dl,0xcf
  4073db:	cmp    al,0x4d
  4073dd:	imul   ecx,ebx,0x9fbcb9b7
  4073e3:	pusha  
  4073e4:	jmp    0x2267:0x3f561b3a
  4073eb:	pop    es
  4073ec:	inc    eax
  4073ed:	mov    edi,0xed4db71c
  4073f2:	call   0x49dc:0x6178a438
  4073f9:	inc    esp
  4073fa:	push   0x7b
  4073fc:	retf   0x2ac2
  4073ff:	dec    ebx
  407400:	jp     0x4073c6
  407402:	sbb    BYTE PTR [edi],dh
  407404:	mov    dh,0x2d
  407406:	mov    ah,0x4f
  407408:	cmp    eax,0x2130e02a
  40740d:	xor    dl,BYTE PTR [edx-0x2b]
  407410:	(bad)  
  407411:	mov    BYTE PTR [ebx],dh
  407413:	xchg   ecx,eax
  407414:	stos   DWORD PTR es:[edi],eax
  407415:	je     0x40745a
  407417:	(bad)  
  407418:	push   edi
  407419:	cmp    ebx,ecx
  40741b:	ins    DWORD PTR es:[edi],dx
  40741c:	pop    edx
  40741d:	cmp    DWORD PTR [ebx],ebp
  40741f:	xor    eax,0xbce434c8
  407424:	adc    al,0x36
  407426:	mov    ecx,0x8acf722c
  40742b:	dec    edi
  40742c:	lods   al,BYTE PTR ds:[esi]
  40742d:	jno    0x40746f
  40742f:	fucom  st(5)
  407431:	pop    ds
  407432:	mov    bl,al
  407434:	(bad)  
  407435:	jo     0x407404
  407437:	dec    edi
  407438:	dec    ebx
  407439:	sahf   
  40743a:	mov    dh,0x42
  40743c:	xchg   ebx,eax
  40743d:	rol    BYTE PTR [edi+0x72],0xa6
  407441:	daa    
  407442:	ret    
  407443:	adc    DWORD PTR [ecx],esi
  407445:	add    eax,0xfcae3921
  40744a:	jmp    0x8d0ae63b
  40744f:	push   es
  407450:	arpl   WORD PTR [ecx-0x75],bp
  407453:	pop    ecx
  407454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407455:	retf   
  407456:	mov    edi,esi
  407458:	cmc    
  407459:	data16 in al,dx
  40745b:	scas   al,BYTE PTR es:[edi]
  40745c:	jo     0x4074b6
  40745e:	addr16 in al,dx
  407460:	mov    eax,ds:0xce307887
  407465:	jb     0x40741d
  407467:	mov    bh,0x6a
  407469:	pop    ebx
  40746a:	mov    dl,0x82
  40746c:	sbb    eax,0xe4ed7195
  407471:	imul   ebx,DWORD PTR [eax+0x68dc6df],0xf51e6641
  40747b:	je     0x40740a
  40747d:	sbb    dh,BYTE PTR [edi+0x6f]
  407480:	xor    esp,DWORD PTR [esi+0x4c]
  407483:	mov    si,0xee41
  407487:	push   ecx
  407488:	dec    edx
  407489:	loope  0x407509
  40748b:	pop    esp
  40748c:	mov    ebp,0x7b7f214d
  407491:	imul   ebx,ebp,0xeeddc4b6
  407497:	repnz test BYTE PTR [edi+0x6a690e17],ch
  40749e:	and    DWORD PTR [esi+0x6a],ecx
  4074a1:	push   0x6a
  4074a3:	fnstenv [esi]
  4074a5:	xor    bh,BYTE PTR [edi+0x7f]
  4074a8:	fistp  DWORD PTR [edx-0x7c140e13]
  4074ae:	mov    gs,edx
  4074b0:	fwait
  4074b1:	daa    
  4074b2:	mov    ds:0x29e7d60b,al
  4074b7:	pop    ebp
  4074b8:	loopne 0x407521
  4074ba:	pop    ecx
  4074bb:	adc    BYTE PTR ds:0xd10d6f9f,dl
  4074c1:	lahf   
  4074c2:	inc    edi
  4074c3:	arpl   WORD PTR [edi+0x5d9da540],si
  4074c9:	mov    ds,WORD PTR [edx]
  4074cb:	xor    al,0x1d
  4074cd:	out    0x9c,al
  4074cf:	and    esi,DWORD PTR [ecx+0x4]
  4074d2:	xor    DWORD PTR [ecx+ebx*4+0x21],edi
  4074d6:	add    cl,BYTE PTR [ecx+0x1fc4d845]
  4074dc:	test   al,0x98
  4074de:	pop    edi
  4074df:	imul   edx,ebp,0xffffffae
  4074e2:	(bad)  
  4074e3:	ja     0x407519
  4074e5:	loope  0x4074b0
  4074e7:	sti    
  4074e8:	push   ecx
  4074e9:	push   edi
  4074ea:	jbe    0x4074d9
  4074ec:	daa    
  4074ed:	cmp    DWORD PTR [esi+0x11],ebx
  4074f0:	(bad)  
  4074f1:	jmp    0xc45bd07b
  4074f6:	jle    0x4074a6
  4074f8:	data16 sti 
  4074fa:	sti    
  4074fb:	into   
  4074fc:	jl     0x407517
  4074fe:	mov    dl,0xc2
  407500:	je     0x407511
  407502:	outs   dx,BYTE PTR ds:[esi]
  407503:	mov    BYTE PTR [eax+edi*2-0x4268166e],bh
  40750a:	pop    ss
  40750b:	and    al,0xea
  40750d:	mov    ebp,0x7d1433f7
  407512:	cmp    eax,0xd9807658
  407517:	xchg   ebx,eax
  407518:	xchg   edi,eax
  407519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40751a:	mov    al,ds:0xb9ac1f22
  40751f:	push   edx
  407520:	(bad)  
  407521:	push   eax
  407522:	mov    cl,0xc1
  407524:	cld    
  407525:	mov    eax,0x3e791e18
  40752a:	test   al,0x9d
  40752c:	or     DWORD PTR [edx+0x332a3e9d],0x2a
  407533:	cmp    al,0xe2
  407535:	push   esi
  407536:	pop    edi
  407537:	loopne 0x4074e2
  407539:	xlat   BYTE PTR ds:[ebx]
  40753a:	call   DWORD PTR [eax-0x29fe10b3]
  407540:	mov    ds:0xa700ff36,eax
  407545:	mov    DWORD PTR [ebx+ecx*4-0x28],edi
  407549:	jo     0x407508
  40754b:	sbb    edi,DWORD PTR [ecx+0x10abdbdc]
  407551:	and    BYTE PTR [edi-0x46],dl
  407554:	ja     0x40758a
  407556:	imul   esi,DWORD PTR [ebx+0x5afebbc5],0x7bb176d2
  407560:	mov    esi,0x2f7d3421
  407565:	inc    eax
  407566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407567:	add    dl,ah
  407569:	or     esi,esp
  40756b:	sub    eax,0x32f8d258
  407570:	dec    esi
  407571:	popf   
  407572:	mov    dh,BYTE PTR [edi]
  407574:	into   
  407575:	(bad)  
  407576:	ror    esp,1
  407578:	and    al,0x9a
  40757a:	jge    0x4075e5
  40757c:	mov    ds:0xbf8f2e6c,eax
  407581:	cmp    ebp,DWORD PTR [eax-0x54]
  407584:	dec    edx
  407585:	mov    esp,0x7eb362c5
  40758a:	loopne 0x4075cd
  40758c:	push   0x60355548
  407591:	cmp    eax,DWORD PTR [eax+0x50]
  407594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407595:	mov    ch,0xab
  407597:	adc    BYTE PTR [edi+0x4d],bh
  40759a:	add    ebx,DWORD PTR [ebx+0x55ee4671]
  4075a0:	stc    
  4075a1:	repnz mov ebp,0xde7df6b6
  4075a7:	mov    ch,0x19
  4075a9:	jne    0x407550
  4075ab:	cmc    
  4075ac:	sbb    eax,0x3e1de59a
  4075b1:	xchg   esp,eax
  4075b2:	adc    eax,0xdd63e601
  4075b7:	add    al,0xa
  4075b9:	mov    bl,0xaf
  4075bb:	les    ebx,FWORD PTR [esi]
  4075bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075be:	aaa    
  4075bf:	hlt    
  4075c0:	popa   
  4075c1:	jle    0x4075d8
  4075c3:	xchg   BYTE PTR [edx+0x43],bl
  4075c6:	mov    ebx,DWORD PTR [esi-0x1e19daae]
  4075cc:	dec    edi
  4075cd:	sti    
  4075ce:	fisub  WORD PTR [edx]
  4075d0:	pop    edx
  4075d1:	jg     0x4075c1
  4075d3:	push   ebp
  4075d4:	mov    esp,0x1b58201c
  4075d9:	jg     0x40763a
  4075db:	sub    al,0xe1
  4075dd:	mov    ?,WORD PTR [ebp-0x24631cfc]
  4075e3:	add    eax,0x31ea37c8
  4075e8:	adc    BYTE PTR [edx],dh
  4075ea:	(bad)  
  4075eb:	ins    BYTE PTR es:[edi],dx
  4075ec:	sbb    al,0x6d
  4075ee:	mov    bl,bl
  4075f0:	sti    
  4075f1:	and    BYTE PTR ds:[ebp+0x5b1fc066],dl
  4075f8:	adc    ch,BYTE PTR [eax-0x5]
  4075fb:	sub    esp,edi
  4075fd:	or     al,0x44
  4075ff:	xchg   DWORD PTR [ebx],eax
  407601:	mov    ch,0x50
  407603:	fistp  DWORD PTR [ebx-0x2a88d116]
  407609:	pop    ss
  40760a:	aam    0x9a
  40760c:	mov    dh,BYTE PTR [edi+edi*4+0x31]
  407610:	xor    eax,0x6ad60c07
  407615:	and    BYTE PTR [edi],dl
  407617:	test   eax,0x76828fc1
  40761c:	loope  0x407675
  40761e:	push   esp
  40761f:	xor    eax,DWORD PTR [ecx+edi*4+0x4d97b4e9]
  407626:	div    bl
  407628:	loopne 0x407691
  40762a:	pop    edi
  40762b:	in     eax,0x15
  40762d:	push   esi
  40762e:	hlt    
  40762f:	mov    al,ds:0x608e652
  407634:	push   cs
  407635:	std    
  407636:	imul   ecx,DWORD PTR [eax+0x6d],0x2f
  40763a:	jmp    0x7d3a:0x3a49ef82
  407641:	mov    dl,0x2c
  407643:	fs push eax
  407645:	fs pop eax
  407647:	mov    ebp,0x46c8aca0
  40764c:	enter  0xef5,0x52
  407650:	gs jl  0x4076b0
  407653:	xlat   BYTE PTR ds:[ebx]
  407654:	xlat   BYTE PTR ds:[ebx]
  407655:	adc    eax,0x49d2b99e
  40765a:	(bad)
  40765e:	test   eax,0x9085f015
  407663:	out    dx,eax
  407664:	aad    0x56
  407666:	(bad)  
  407667:	mov    bl,0xd7
  407669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40766a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40766b:	inc    BYTE PTR [esi+0x60]
  40766e:	fdivr  QWORD PTR [ebx-0x29]
  407671:	in     al,dx
  407672:	mov    edi,0x900faa80
  407677:	pop    esp
  407678:	gs xor al,0xb3
  40767b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40767c:	or     al,0x9e
  40767e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40767f:	fstp   DWORD PTR [ebx-0x3b]
  407682:	retf   0x59b6
  407685:	(bad)  
  407686:	jp     0x407690
  407688:	icebp  
  407689:	rol    BYTE PTR [ebp-0x33dc88b3],1
  40768f:	ins    DWORD PTR es:[edi],dx
  407690:	imul   ebx,DWORD PTR [ecx-0x6b],0x3ce50e33
  407697:	shl    BYTE PTR [ebp+0x6b02e97f],cl
  40769d:	std    
  40769e:	and    al,0xec
  4076a0:	dec    esi
  4076a1:	int    0xb
  4076a3:	fs xchg ebp,eax
  4076a5:	xchg   ebp,eax
  4076a6:	stos   DWORD PTR es:[edi],eax
  4076a7:	pop    edx
  4076a8:	sar    DWORD PTR [edx+0x9a9ee4c],1
  4076ae:	dec    ebp
  4076af:	stos   DWORD PTR es:[edi],eax
  4076b0:	repz pop ds
  4076b2:	dec    esi
  4076b3:	pop    eax
  4076b4:	jo     0x40765b
  4076b6:	mov    eax,gs
  4076b8:	push   ecx
  4076b9:	shr    BYTE PTR [ecx],0xbc
  4076bc:	addr16 push ecx
  4076be:	jecxz  0x4076ad
  4076c0:	and    al,0x67
  4076c2:	ret    
  4076c3:	jle    0x40764f
  4076c5:	and    eax,0x55d4f578
  4076ca:	dec    esp
  4076cb:	jmp    0xe050:0x2fc0173e
  4076d2:	scas   al,BYTE PTR es:[edi]
  4076d3:	iret   
  4076d4:	mov    ebp,0x8dae0782
  4076d9:	inc    ecx
  4076da:	retf   
  4076db:	mov    al,0xce
  4076dd:	pop    es
  4076de:	jne    0x40773f
  4076e0:	das    
  4076e1:	xor    eax,0xdb8ea824
  4076e6:	bound  ecx,QWORD PTR [ebx+0x75]
  4076e9:	and    DWORD PTR [eax],ecx
  4076eb:	sbb    al,0x39
  4076ed:	fsubr  QWORD PTR [edi+edi*2+0x7c]
  4076f1:	mov    edi,0x98ba5e39
  4076f6:	adc    ecx,ebx
  4076f8:	xchg   edi,eax
  4076f9:	call   0xa510:0xdf5a0962
  407700:	(bad)  
  407701:	pushf  
  407702:	cmp    esp,edx
  407704:	mov    ebx,0xd474b943
  407709:	lds    esi,FWORD PTR [esi+eiz*8]
  40770c:	stc    
  40770d:	pushf  
  40770e:	push   ss
  40770f:	fmul   QWORD PTR [edi+0x7e604e16]
  407715:	sar    DWORD PTR [edi-0x37cf14a0],cl
  40771b:	jae    0x407755
  40771d:	inc    ecx
  40771e:	out    0xb6,al
  407720:	add    DWORD PTR [bx+si],edx
  407723:	call   0x8f9f:0xd91df873
  40772a:	jne    0x407707
  40772c:	pusha  
  40772d:	mov    ebx,0xa7350d22
  407732:	xchg   esi,eax
  407733:	fbstp  TBYTE PTR [esi]
  407735:	mov    ah,0xfb
  407737:	sbb    al,0xf3
  407739:	push   ecx
  40773a:	jnp    0x407718
  40773c:	and    eax,0xef43929d
  407741:	sub    DWORD PTR [edx+0x4cab9398],esp
  407747:	mov    dh,0xe4
  407749:	cmp    ebx,edx
  40774b:	and    eax,0x948e6d6e
  407750:	jno    0x4077af
  407752:	xchg   edi,eax
  407753:	div    BYTE PTR [ecx]
  407755:	mov    eax,ds:0x61f6600a
  40775a:	inc    ebp
  40775b:	punpckldq mm6,DWORD PTR [edx+0x561e542c]
  407762:	pop    ecx
  407763:	push   cs
  407764:	punpckhwd mm7,QWORD PTR [eax]
  407767:	pop    esp
  407768:	mov    bh,0x21
  40776a:	retf   0x877a
  40776d:	sahf   
  40776e:	jecxz  0x407797
  407770:	pop    ds
  407771:	lds    eax,FWORD PTR [esi-0x4248d56a]
  407777:	cwde   
  407778:	push   es
  407779:	shrd   DWORD PTR es:[esi],eax,0xff
  40777e:	adc    bl,cl
  407780:	mov    bh,0x7a
  407782:	int3   
  407783:	jge    0x407707
  407785:	cmp    edx,DWORD PTR [edi+0x40]
  407788:	sub    DWORD PTR [ebx],edi
  40778a:	or     DWORD PTR [eax-0x43],esp
  40778d:	lds    edi,FWORD PTR [edi+0x13]
  407790:	and    dh,ch
  407792:	imul   ecx,DWORD PTR [ecx+0x6acae013],0x57
  407799:	jne    0x407794
  40779b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40779c:	or     BYTE PTR [ecx+0x3ef3dcd],dh
  4077a2:	lock mov ds:0x70929878,al
  4077a8:	int3   
  4077a9:	shl    BYTE PTR [edx+0x6e4e3a90],cl
  4077af:	ret    
  4077b0:	xchg   DWORD PTR ds:0xc458cd2,ebx
  4077b6:	int3   
  4077b7:	xchg   esi,eax
  4077b8:	pop    esp
  4077b9:	and    bl,dh
  4077bb:	sar    esp,cl
  4077bd:	scas   eax,DWORD PTR es:[edi]
  4077be:	adc    BYTE PTR [edi+esi*4],cl
  4077c1:	and    dl,BYTE PTR [ebx]
  4077c3:	cwde   
  4077c4:	std    
  4077c5:	ja     0x407836
  4077c7:	pushf  
  4077c8:	daa    
  4077c9:	retf   0x4cf7
  4077cc:	xor    eax,0xe3385514
  4077d1:	pop    ecx
  4077d2:	xchg   ebx,eax
  4077d3:	cmc    
  4077d4:	dec    esi
  4077d5:	(bad)  
  4077d6:	popf   
  4077d7:	lods   al,BYTE PTR ds:[esi]
  4077d8:	sbb    bh,BYTE PTR [ebp+0x2172e829]
  4077de:	dec    edi
  4077df:	sub    al,0xe1
  4077e1:	rcr    DWORD PTR [esp+esi*2-0x5a],0x8a
  4077e6:	jae    0x40780f
  4077e8:	(bad)  
  4077e9:	xchg   DWORD PTR [esi-0x56461fad],ecx
  4077ef:	push   edx
  4077f0:	fidivr WORD PTR [ebx-0x435c83b8]
  4077f6:	jecxz  0x4077bf
  4077f8:	adc    eax,0xc112c144
  4077fd:	loope  0x4077b3
  4077ff:	repz inc ecx
  407801:	pop    esi
  407802:	push   ds
  407803:	mov    edi,0x77f086f8
  407808:	shl    DWORD PTR gs:[edi+eiz*2],1
  40780c:	push   ebp
  40780d:	cmp    DWORD PTR ds:[bp+di+0x25],esi
  407812:	lea    edx,[ebx+edi*2+0x51440c49]
  407819:	test   ebp,eax
  40781b:	inc    edi
  40781c:	inc    ebp
  40781d:	and    eax,0x14cbf84e
  407822:	mov    dh,0x92
  407824:	sbb    dh,BYTE PTR [ebx]
  407826:	xlat   BYTE PTR ds:[ebx]
  407827:	add    eax,0xd6717f6f
  40782c:	cmp    eax,0xbdb884ac
  407831:	pop    esi
  407832:	retf   0x5208
  407835:	mov    al,ds:0x326d87e2
  40783a:	rol    DWORD PTR [eax+0x74],cl
  40783d:	dec    eax
  40783e:	jmp    0x407844
  407840:	sbb    al,0x99
  407842:	jns    0x407875
  407844:	inc    ecx
  407846:	lods   al,BYTE PTR ds:[esi]
  407847:	adc    edx,ebp
  407849:	push   ebp
  40784a:	xor    ch,dl
  40784c:	pushf  
  40784d:	sbb    al,0x97
  40784f:	sbb    ah,BYTE PTR [esp+edi*8-0x6ac762d8]
  407856:	cmp    bh,ah
  407858:	div    BYTE PTR [eax+0x578b7f3f]
  40785e:	xchg   ecx,eax
  40785f:	jg     0x407801
  407861:	scas   eax,DWORD PTR es:[edi]
  407862:	in     eax,dx
  407863:	int    0x7b
  407865:	dec    edx
  407866:	fidiv  WORD PTR [esi]
  407868:	arpl   WORD PTR [eax-0x34],ax
  40786b:	pop    ss
  40786c:	call   DWORD PTR [esi+0x5fd92705]
  407872:	adc    ch,BYTE PTR [ebp+0x7f7d5ac5]
  407878:	pop    ebp
  407879:	jnp    0x407817
  40787b:	retf   
  40787c:	dec    ecx
  40787d:	mov    bl,0xe
  407880:	fstp   QWORD PTR es:[ebx-0x55e31868]
  407887:	mov    eax,ds:0xc8ae902b
  40788c:	stos   BYTE PTR es:[edi],al
  40788d:	xchg   esp,eax
  40788e:	lahf   
  40788f:	stc    
  407890:	inc    ebx
  407891:	cwde   
  407892:	sbb    edx,esp
  407894:	cmp    esp,DWORD PTR [ebp-0x47957120]
  40789a:	fsubp  st(3),st
  40789c:	sub    dl,BYTE PTR ds:0xff57dc55
  4078a2:	aas    
  4078a3:	arpl   WORD PTR es:[ebx],sp
  4078a6:	xchg   ecx,eax
  4078a7:	and    BYTE PTR [edx+0x49f4b42a],0x9a
  4078ae:	aaa    
  4078af:	ret    
  4078b0:	add    ebp,DWORD PTR [ebp-0x14]
  4078b3:	sbb    ebx,DWORD PTR [ebp+0x3e]
  4078b6:	das    
  4078b7:	test   eax,0x1285dbbb
  4078bc:	dec    eax
  4078bd:	ret    0x2733
  4078c0:	in     al,0x1
  4078c2:	pushf  
  4078c3:	cld    
  4078c4:	ror    esp,0x1e
  4078c7:	and    BYTE PTR [ebp+0x0],0x3c
  4078cb:	jecxz  0x407947
  4078cd:	icebp  
  4078ce:	ss sbb al,0x2a
  4078d1:	test   eax,0x266d7d72
  4078d6:	and    DWORD PTR [ebx+0x38b76f1f],edx
  4078dc:	xor    al,0xaf
  4078de:	shl    BYTE PTR [ebp+0x4014f838],0x23
  4078e5:	repz and al,0x95
  4078e8:	jle    0x4078b5
  4078ea:	sub    al,0xbb
  4078ec:	push   ds
  4078ed:	jbe    0x4078fc
  4078ef:	cmp    DWORD PTR [esi+edx*4+0x78],ebp
  4078f3:	jmp    0x5532:0xdd3988df
  4078fa:	jae    0x407963
  4078fc:	cdq    
  4078fd:	jecxz  0x407928
  4078ff:	jno    0x407941
  407901:	sti    
  407902:	retf   0xeb63
  407905:	jmp    0x3275:0xa442432b
  40790c:	adc    esp,edx
  40790e:	aam    0x25
  407910:	pop    ebx
  407911:	adc    eax,DWORD PTR [eax+ebx*2]
  407914:	mov    al,ds:0x87601098
  407919:	retf   0xce02
  40791c:	inc    ecx
  40791d:	cwde   
  40791e:	jle    0x407907
  407920:	mov    BYTE PTR [ecx-0x4da6c716],ah
  407926:	or     eax,0x9694e04e
  40792b:	xchg   edi,eax
  40792c:	sub    BYTE PTR ds:[ebx+0x7102a385],bl
  407933:	push   ebp
  407934:	pop    ebx
  407935:	xor    DWORD PTR [edi-0x2b],esp
  407938:	push   ecx
  407939:	jns    0x4078c6
  40793b:	add    eax,0xec5293a1
  407940:	mov    esp,0x6313aeed
  407945:	(bad)  
  407946:	push   esp
  407947:	iret   
  407948:	jecxz  0x407901
  40794a:	sbb    dl,bh
  40794c:	mov    esi,0x63a0c550
  407951:	hlt    
  407952:	retf   
  407953:	push   ss
  407954:	ins    BYTE PTR es:[edi],dx
  407955:	into   
  407956:	pop    esi
  407957:	loopne 0x4078f2
  407959:	dec    esp
  40795a:	es pop ecx
  40795c:	cmp    DWORD PTR [ecx-0x3a],edi
  40795f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407960:	xchg   DWORD PTR [ebx-0x16],ebp
  407963:	imul   ecx,DWORD PTR cs:[ebp-0x49],0x77
  407968:	pop    edi
  407969:	xchg   BYTE PTR [edx+esi*2-0x25],bl
  40796d:	addr16 jb 0x40790b
  407970:	mov    ebp,0x28e09489
  407975:	daa    
  407976:	push   ebx
  407977:	inc    eax
  407978:	out    0xb7,al
  40797a:	pushf  
  40797b:	sti    
  40797c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40797d:	clc    
  40797e:	repz mov ebx,0x6fce89e0
  407984:	add    DWORD PTR [ecx],ebx
  407986:	in     al,dx
  407987:	adc    al,0x54
  407989:	int    0x1a
  40798b:	test   ch,ch
  40798d:	scas   eax,DWORD PTR es:[edi]
  40798e:	cwde   
  40798f:	lahf   
  407990:	(bad)  
  407991:	xlat   BYTE PTR ds:[ebx]
  407992:	add    al,0x7d
  407994:	jle    0x4079f7
  407996:	xor    al,BYTE PTR [edx-0x79]
  407999:	pusha  
  40799a:	add    bh,BYTE PTR [ebp+0x7a725740]
  4079a0:	repz push es
  4079a2:	mov    eax,0xfe9d8117
  4079a7:	or     edx,ebp
  4079a9:	das    
  4079aa:	push   edi
  4079ab:	test   al,0x1a
  4079ad:	push   eax
  4079ae:	jmp    0x3aaa:0x2c94e16b
  4079b5:	sahf   
  4079b6:	mov    ebp,0x24e17c76
  4079bb:	retf   0x8d7d
  4079be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079bf:	add    BYTE PTR [eax],ch
  4079c1:	pop    esi
  4079c2:	dec    ebp
  4079c3:	mov    al,ds:0x1a8994da
  4079c8:	push   ebp
  4079c9:	xchg   ebx,eax
  4079ca:	repz cmc 
  4079cc:	out    0xfc,eax
  4079ce:	mov    DWORD PTR [esi+eax*1+0xd406018],esi
  4079d5:	cmp    bh,BYTE PTR [esi]
  4079d7:	lods   al,BYTE PTR ds:[esi]
  4079d8:	mov    edx,0x20966360
  4079dd:	push   ds
  4079de:	jge    0x4079bc
  4079e0:	(bad)  
  4079e1:	push   0x3b
  4079e3:	cmovb  esp,ebp
  4079e6:	repnz fistp QWORD PTR [ecx+ecx*1+0x50]
  4079eb:	bound  edx,QWORD PTR [eax-0x71005c6a]
  4079f1:	sahf   
  4079f2:	pushf  
  4079f3:	adc    al,BYTE PTR [edi-0x14]
  4079f6:	shl    BYTE PTR [ecx],1
  4079f8:	push   0x32186d88
  4079fd:	out    0x36,eax
  4079ff:	jmp    0x991a:0xf0f7095
  407a06:	add    edx,eax
  407a08:	enter  0xb7a0,0x74
  407a0c:	mov    al,0x23
  407a0e:	inc    esp
  407a0f:	pop    ss
  407a10:	sub    BYTE PTR [eax],bl
  407a12:	push   es
  407a13:	mov    bh,0x6a
  407a15:	mov    WORD PTR [ecx+0x57],ss
  407a18:	smsw   WORD PTR [esi]
  407a1b:	cmp    cl,BYTE PTR [bx+si+0x22d0]
  407a20:	push   esp
  407a21:	outs   dx,BYTE PTR ds:[esi]
  407a22:	loop   0x407a14
  407a24:	dec    BYTE PTR [eax+0xa12290]
  407a2a:	mov    esp,0xd5a9da4d
  407a2f:	pushf  
  407a30:	enter  0x9cf9,0xf8
  407a34:	xchg   dx,ax
  407a36:	and    eax,0x37a65c53
  407a3b:	dec    eax
  407a3c:	fbld   TBYTE PTR [ebx+0x63]
  407a3f:	pop    eax
  407a40:	pop    eax
  407a41:	push   esi
  407a42:	out    dx,eax
  407a43:	push   esp
  407a44:	push   0xffffffaa
  407a46:	mov    al,ds:0xccae4c13
  407a4b:	dec    eax
  407a4c:	lds    ebx,FWORD PTR [eax-0x221143a9]
  407a52:	cwde   
  407a53:	push   0xffffffbb
  407a55:	sub    eax,0x71ae42ea
  407a5a:	and    al,0x1
  407a5c:	ds mov al,0x42
  407a5f:	ret    0x2747
  407a62:	xchg   esp,eax
  407a63:	push   eax
  407a64:	sti    
  407a65:	popf   
  407a66:	jle    0x407a7e
  407a68:	sbb    al,0xc7
  407a6a:	sahf   
  407a6b:	cmc    
  407a6c:	adc    al,0x67
  407a6e:	mul    dh
  407a70:	lods   al,BYTE PTR ds:[esi]
  407a71:	mov    ch,0x96
  407a73:	sbb    al,0x26
  407a75:	aam    0xb8
  407a77:	lock or BYTE PTR es:[edx],bh
  407a7b:	xchg   ebx,eax
  407a7c:	pusha  
  407a7d:	test   eax,0x4aba6a58
  407a82:	out    0xe5,eax
  407a84:	pop    ecx
  407a85:	xchg   BYTE PTR [edx+ebp*2],dh
  407a88:	xor    DWORD PTR [ebx-0x79eff172],esi
  407a8e:	hlt    
  407a8f:	jg     0x407ace
  407a91:	aam    0xa5
  407a93:	adc    eax,0x9abd1fd
  407a98:	sbb    eax,0xff794e6c
  407a9d:	inc    esp
  407a9e:	mov    al,0x67
  407aa0:	jbe    0x407b03
  407aa2:	pop    ebp
  407aa3:	(bad)  
  407aa4:	mov    edx,0x133195d3
  407aa9:	(bad)  
  407aaa:	xor    edi,DWORD PTR [edx]
  407aac:	adc    al,0x90
  407aae:	test   edi,esp
  407ab0:	adc    DWORD PTR [edi],edi
  407ab2:	(bad)  
  407ab3:	stc    
  407ab4:	and    al,0xf9
  407ab6:	dec    ebp
  407ab7:	retf   0xf71e
  407aba:	sar    DWORD PTR [ecx],0x1a
  407abd:	jb     0x407af3
  407abf:	mov    eax,0xe4b2e593
  407ac4:	arpl   WORD PTR [ebx+eax*4+0x4f2300b8],cx
  407acb:	cmc    
  407acc:	test   BYTE PTR [edx-0x742404d9],bl
  407ad2:	fdivr  QWORD PTR [esi+edx*8-0x62cecb6d]
  407ad9:	mov    ebx,0x922a47ef
  407ade:	xor    edi,esp
  407ae0:	bound  esi,QWORD PTR [ecx-0x6f]
  407ae3:	xor    ebp,DWORD PTR [ecx+0x19]
  407ae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ae7:	ficom  DWORD PTR [ebx-0x58]
  407aea:	test   eax,0x219e3166
  407aef:	dec    esp
  407af0:	cli    
  407af1:	sahf   
  407af2:	adc    eax,0x81af87fc
  407af7:	inc    ebx
  407af8:	pop    ecx
  407af9:	or     ch,BYTE PTR [edx+0x558ecad8]
  407aff:	mov    esp,edi
  407b01:	xor    DWORD PTR [ebp+0x2b584e8c],ecx
  407b07:	ja     0x407b74
  407b09:	adc    al,0xa1
  407b0b:	test   BYTE PTR [ebp+0x48],ah
  407b0e:	in     al,dx
  407b0f:	jne    0x407b4a
  407b11:	hlt    
  407b12:	add    edx,DWORD PTR [edi-0x435faff3]
  407b18:	xchg   edx,eax
  407b19:	or     DWORD PTR [ebx],esp
  407b1b:	aas    
  407b1c:	data16 ins BYTE PTR es:[edi],dx
  407b1e:	push   edx
  407b1f:	pop    ebx
  407b20:	mov    ds:0xc9d99e7f,eax
  407b25:	aas    
  407b26:	xchg   edi,eax
  407b27:	mov    WORD PTR [esp+esi*8+0xae1da0a],cs
  407b2e:	jbe    0x407acf
  407b30:	xchg   esp,eax
  407b31:	loop   0x407ae0
  407b33:	adc    eax,0x8d1a8a26
  407b38:	inc    ebx
  407b39:	out    dx,eax
  407b3a:	push   0x54
  407b3c:	adc    eax,0xc781f933
  407b41:	(bad)  [edx+0x32]
  407b44:	add    bh,dh
  407b46:	xlat   BYTE PTR ds:[ebx]
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0x29b070e0
  407e5b:	fldcw  WORD PTR [ebx]
  407e5d:	iret   
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	jb     0x407e4f
  407e67:	hlt    
  407e68:	dec    esi
  407e69:	xor    DWORD PTR [edx+0x4ef35820],edx
  407e6f:	popf   
  407e70:	or     BYTE PTR [esi-0x36],0x25
  407e74:	sar    BYTE PTR [ecx],0x1d
  407e77:	scas   eax,DWORD PTR es:[edi]
  407e78:	pop    es
  407e79:	fldenv [ebx+0x30]
  407e7c:	inc    ecx
  407e7d:	jb     0x407e1a
  407e7f:	lahf   
  407e80:	es cmp eax,0xe905db11
  407e86:	adc    DWORD PTR [esi+0x3559a535],ebp
  407e8c:	pusha  
  407e8d:	daa    
  407e8e:	(bad)  
  407e8f:	cmp    esp,DWORD PTR [esi]
  407e91:	sbb    eax,0x6e419ed8
  407e96:	push   0xaef3c4ab
  407e9b:	pop    ds
  407e9c:	out    dx,eax
  407e9d:	push   ds
  407e9e:	lods   eax,DWORD PTR ds:[esi]
  407e9f:	pop    ds
  407ea0:	adc    al,0x1a
  407ea2:	and    al,0xe0
  407ea4:	imul   eax,DWORD PTR [eax+0x2c24f77],0xffffffd4
  407eab:	push   ss
  407eac:	pop    edi
  407ead:	adc    al,0x98
  407eaf:	mov    ss,WORD PTR [ecx-0x52]
  407eb2:	mov    dh,0xb1
  407eb4:	imul   ecx,DWORD PTR [eax+0x63],0xff5df219
  407ebb:	sbb    BYTE PTR [ebx+0x20784123],0xeb
  407ec2:	xchg   ecx,eax
  407ec3:	retf   0x1549
  407ec6:	pop    esp
  407ec7:	fwait
  407ec8:	lea    ecx,[eax+0x32b5be30]
  407ece:	pop    edx
  407ecf:	xlat   BYTE PTR ds:[ebx]
  407ed0:	cmp    BYTE PTR ds:0x6270de7d,bl
  407ed6:	xlat   BYTE PTR ds:[ebx]
  407ed7:	stos   BYTE PTR es:[edi],al
  407ed8:	or     DWORD PTR [esp+esi*8-0x1ec2339],esi
  407edf:	inc    eax
  407ee0:	add    ebx,DWORD PTR [ebp+esi*4-0x20]
  407ee4:	add    ecx,0x55
  407ee7:	pop    esi
  407ee8:	push   ebx
  407ee9:	xchg   ecx,eax
  407eea:	add    DWORD PTR [edx-0x6b],ebx
  407eed:	scas   al,BYTE PTR es:[edi]
  407eee:	dec    esp
  407eef:	fisubr WORD PTR [eax-0x57290c17]
  407ef5:	pop    esp
  407ef6:	sub    BYTE PTR [edx],bh
  407ef8:	repz lea edi,[ecx]
  407efb:	repz or al,0xee
  407efe:	xor    al,0x97
  407f00:	jmp    0x407f72
  407f02:	rcl    DWORD PTR [ebx-0x5fec96a5],cl
  407f08:	ret    
  407f09:	ret    0x3eb0
  407f0c:	ins    BYTE PTR es:[edi],dx
  407f0d:	mov    edi,0xc678a293
  407f12:	mov    al,0x36
  407f14:	bound  ebp,QWORD PTR [eax-0x767aa187]
  407f1a:	pop    ebp
  407f1b:	inc    esp
  407f1c:	mov    esi,DWORD PTR [edx-0xfde7a55]
  407f22:	pop    edx
  407f23:	aad    0x5
  407f25:	cmp    BYTE PTR [ebp+edi*8-0x39],ah
  407f29:	test   DWORD PTR [eax-0x2b],ebp
  407f2c:	push   0xd1ef89f8
  407f31:	inc    esp
  407f32:	add    BYTE PTR [ecx-0x48073c3b],cl
  407f38:	jmp    0xd493:0xe1e3160
  407f3f:	in     al,0x7b
  407f41:	xor    edi,DWORD PTR [ebp+0x24]
  407f44:	mov    ds:0xe45f86e5,al
  407f49:	loope  0x407f89
  407f4b:	dec    edi
  407f4c:	pop    esp
  407f4d:	inc    eax
  407f4e:	(bad)  
  407f4f:	or     esp,DWORD PTR [edx+0x74]
  407f52:	lods   eax,DWORD PTR ds:[esi]
  407f53:	mul    BYTE PTR [edi+edx*4+0x6]
  407f57:	push   esi
  407f58:	test   BYTE PTR [esi-0x23b4f30],0x98
  407f5f:	dec    ax
  407f61:	inc    edi
  407f62:	call   0x611f0de5
  407f67:	ss jnp 0x407f2b
  407f6a:	aaa    
  407f6b:	aas    
  407f6c:	cdq    
  407f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f6e:	les    eax,FWORD PTR [edx+0x5421e074]
  407f74:	data16 jl 0x407f3f
  407f77:	fs jb  0x407f72
  407f7a:	xor    al,BYTE PTR ds:0x41e8762
  407f80:	sub    al,0xc8
  407f82:	xchg   edx,eax
  407f83:	into   
  407f84:	jns    0x407f21
  407f86:	jl     0x407f4d
  407f88:	pop    es
  407f89:	cs cmp eax,0x2030fd34
  407f8f:	and    DWORD PTR [ebp+0x44bedc47],eax
  407f95:	pop    edi
  407f96:	(bad)
  407f9a:	mov    edx,0x5dcf1d72
  407f9f:	imul   esp,DWORD PTR [eax-0x3a162823],0xa6bf225e
  407fa9:	mov    ah,0x4c
  407fab:	fldenv [eax+0x54eddcb5]
  407fb1:	sub    BYTE PTR [ecx+0x56c1d8ef],dl
  407fb7:	(bad)  
  407fb8:	es in  al,dx
  407fba:	addr16 js 0x407f5f
  407fbd:	stos   BYTE PTR es:[edi],al
  407fbe:	scas   al,BYTE PTR es:[edi]
  407fbf:	fdiv   DWORD PTR [edi+0x237fefc9]
  407fc5:	in     eax,0x74
  407fc7:	sbb    BYTE PTR [ebp-0x38],dh
  407fca:	sbb    eax,0xc91af8f
  407fcf:	loope  0x408036
  407fd1:	xchg   edx,eax
  407fd2:	pop    eax
  407fd3:	push   ebx
  407fd4:	pop    ss
  407fd5:	mov    bl,0xd0
  407fd7:	mov    ds:0x8c8ccd26,eax
  407fdc:	(bad)  
  407fdd:	jp     0x407fd3
  407fdf:	dec    edx
  407fe0:	xchg   ecx,eax
  407fe1:	cmp    eax,0x71596d5
  407fe6:	in     al,dx
  407fe7:	push   cs
  407fe8:	je     0x407faf
  407fea:	neg    DWORD PTR [ebx+0x38]
  407fed:	mov    edx,0x6e6d4520
  407ff2:	sbb    al,0x8b
  407ff4:	push   edx
  407ff5:	ss scas eax,DWORD PTR es:[edi]
  407ff7:	xchg   esp,eax
  407ff8:	jmp    0xe4ea1658
  407ffd:	or     bh,ah
  407fff:	ja     0x408022
  408001:	mov    eax,ds:0xeea25a80
  408006:	(bad)  
  408007:	mov    ebp,0x83f12cee
  40800c:	or     eax,0x449130b
  408011:	add    eax,0x1a0e4e50
  408016:	imul   ebp,DWORD PTR [ebp-0x5f],0xffffff85
  40801a:	dec    edx
  40801b:	mov    ebp,0xcc767860
  408020:	xor    DWORD PTR [edi-0x4f0301a3],esp
  408026:	dec    ebp
  408027:	jl     0x407faf
  408029:	sbb    eax,0x3d82ea4c
  40802e:	pop    ebp
  40802f:	jae    0x4080aa
  408031:	ins    DWORD PTR es:[edi],dx
  408032:	pop    es
  408033:	out    0x57,al
  408035:	xor    eax,0x8b59a155
  40803a:	out    0xa5,al
  40803c:	xchg   esp,eax
  40803d:	pop    ebx
  40803e:	lahf   
  40803f:	adc    al,0x96
  408041:	fdivp  st(6),st
  408043:	rcl    eax,cl
  408045:	and    eax,0xf72e0af0
  40804a:	mov    ds:0x98e7ce0b,al
  40804f:	sub    al,0x60
  408051:	cmp    dh,BYTE PTR [edx+0x5f798e74]
  408057:	pop    ebx
  408058:	test   al,0xc5
  40805a:	jecxz  0x4080d6
  40805c:	into   
  40805d:	hlt    
  40805e:	mov    ebx,0xa41b0293
  408063:	xor    al,0xe3
  408065:	adc    DWORD PTR [edx+0x40],edx
  408068:	das    
  408069:	dec    edx
  40806a:	mov    eax,ds:0xbf2881a5
  40806f:	int    0x9f
  408071:	scas   eax,DWORD PTR es:[edi]
  408072:	pusha  
  408073:	pop    ebx
  408074:	cld    
  408075:	jecxz  0x40809e
  408077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408078:	sahf   
  408079:	or     DWORD PTR [edx+0x53f9ef24],eax
  40807f:	test   BYTE PTR [edi+0x17],bl
  408082:	mov    ds:0xc70d2dca,eax
  408087:	xchg   DWORD PTR [esi+0x37],ebx
  40808a:	mov    ch,dh
  40808c:	jge    0x40804c
  40808e:	nop
  40808f:	aad    0x7c
  408091:	hlt    
  408092:	stos   DWORD PTR es:[edi],eax
  408093:	(bad)  
  408094:	mov    edx,0xaca513e1
  408099:	outs   dx,BYTE PTR ds:[esi]
  40809a:	dec    edx
  40809b:	fadd   DWORD PTR ss:0x7f1f2b4f
  4080a2:	sbb    esi,DWORD PTR [edx]
  4080a4:	in     al,dx
  4080a5:	dec    ebx
  4080a6:	mov    al,ds:0x2fd0b5f8
  4080ab:	out    dx,al
  4080ac:	mov    dh,0x3d
  4080ae:	(bad)  
  4080af:	(bad)  
  4080b0:	outs   dx,DWORD PTR ds:[esi]
  4080b1:	leave  
  4080b2:	stos   BYTE PTR es:[edi],al
  4080b3:	jns    0x4080c5
  4080b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080b6:	in     al,0xd3
  4080b8:	xchg   esp,eax
  4080b9:	call   0xe675:0xc1da409a
  4080c0:	mov    DWORD PTR [esi+0x32],edx
  4080c3:	out    dx,al
  4080c4:	inc    ecx
  4080c5:	(bad)  
  4080c6:	loope  0x408143
  4080c8:	call   0x336f:0x1cfbbaab
  4080cf:	fsub   DWORD PTR [ebx+0x75]
  4080d2:	jno    0x408066
  4080d4:	cmp    al,0x6f
  4080d6:	and    DWORD PTR [ebp+0x8433969],ebx
  4080dc:	or     BYTE PTR [esi+0x18],0x53
  4080e0:	aad    0xb3
  4080e2:	pop    ds
  4080e3:	mov    WORD PTR [eax+0x22],fs
  4080e6:	lock and DWORD PTR [eax],ebx
  4080e9:	inc    esi
  4080ea:	mov    ecx,DWORD PTR [ecx+edx*8+0x1b]
  4080ee:	inc    ecx
  4080ef:	jns    0x40813a
  4080f1:	shl    DWORD PTR [ebp-0x50],1
  4080f4:	call   0xfd68:0x2394f6c3
  4080fb:	fstp   DWORD PTR [bx+di-0x3e]
  4080ff:	gs mov bh,0xaa
  408102:	push   ds
  408103:	dec    eax
  408104:	cmp    edi,esi
  408106:	sbb    BYTE PTR [ebp-0x42],ah
  408109:	aaa    
  40810a:	mov    ecx,0x10393de3
  40810f:	loope  0x408155
  408111:	mov    cl,cl
  408113:	jno    0x4080a4
  408115:	icebp  
  408116:	aam    0x6d
  408118:	hlt    
  408119:	push   ss
  40811a:	sbb    BYTE PTR [esi-0x435405a],dh
  408120:	sub    DWORD PTR [edi],edi
  408122:	dec    ebx
  408123:	pop    DWORD PTR [eax]
  408125:	and    al,0x10
  408127:	retf   0x1405
  40812a:	sahf   
  40812b:	out    dx,eax
  40812c:	jg     0x4080ba
  40812e:	das    
  40812f:	jb     0x408191
  408131:	fsubr  st,st(3)
  408133:	mov    al,0x15
  408135:	ja     0x4081a8
  408137:	and    BYTE PTR [esi-0x76],ch
  40813a:	pop    esp
  40813b:	int    0x6d
  40813d:	pop    ecx
  40813e:	js     0x408196
  408140:	or     edx,DWORD PTR [ecx-0x7009806a]
  408146:	push   esi
  408147:	shl    DWORD PTR [esi+0x39890c9e],1
  40814d:	mov    eax,0xcf65038f
  408152:	cli    
  408153:	scas   eax,DWORD PTR es:[edi]
  408154:	xchg   edi,eax
  408155:	push   ecx
  408156:	mov    al,ds:0x46a1dae7
  40815b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40815d:	add    BYTE PTR [edi-0x7],cl
  408160:	and    ebx,DWORD PTR [ebx]
  408162:	dec    ebx
  408163:	in     al,0x4b
  408165:	and    DWORD PTR [edx+0x799583fe],edi
  40816b:	and    BYTE PTR [eax],0x9a
  40816e:	sub    DWORD PTR [edx-0x5b9d91a1],eax
  408174:	xchg   DWORD PTR [esi-0x441a2dfb],edi
  40817a:	ds int 0xef
  40817d:	lahf   
  40817e:	lock or eax,0xa9eb7f82
  408184:	dec    ebp
  408185:	loop   0x408146
  408187:	xchg   DWORD PTR [esi],ecx
  408189:	jmp    0x47afab4b
  40818e:	and    ch,BYTE PTR [ebp-0x3d]
  408191:	jbe    0x40815a
  408193:	jmp    DWORD PTR [edi]
  408195:	scas   al,BYTE PTR es:[edi]
  408196:	clc    
  408197:	popa   
  408198:	push   esi
  408199:	sub    eax,DWORD PTR [ebp+0x3975b299]
  40819f:	sbb    edi,DWORD PTR [edx+0x37]
  4081a2:	jmp    0x40818a
  4081a4:	(bad)  
  4081a5:	ja     0x4081e1
  4081a7:	jae    0x408179
  4081a9:	fmul   DWORD PTR [edx]
  4081ab:	ss call 0xae84:0x53bc077e
  4081b3:	jbe    0x408171
  4081b5:	jg     0x408230
  4081b7:	pushf  
  4081b8:	push   ebp
  4081b9:	mov    eax,0x94aa67a9
  4081be:	loopne 0x408157
  4081c0:	fwait
  4081c1:	sbb    eax,0xc7b9ce68
  4081c6:	out    dx,al
  4081c7:	sar    BYTE PTR [edi+eax*2+0x7b],1
  4081cb:	arpl   WORD PTR [esi+0x62656a29],ax
  4081d1:	cmp    DWORD PTR [ecx-0x4630bdba],ebx
  4081d7:	stc    
  4081d8:	xor    al,0xfd
  4081da:	cmp    ah,BYTE PTR [edx-0x6f]
  4081dd:	mov    esp,0x3f098ca5
  4081e2:	call   0xffb9498d
  4081e7:	(bad)  [edx]
  4081ea:	out    0xbd,al
  4081ec:	imul   ebx,esp,0x78
  4081ef:	and    ecx,DWORD PTR [ecx]
  4081f1:	inc    edi
  4081f2:	push   edx
  4081f3:	nop
  4081f4:	or     al,0xa1
  4081f6:	push   esi
  4081f7:	(bad)  
  4081f8:	jecxz  0x408275
  4081fa:	div    BYTE PTR [eax+0x55f337a0]
  408200:	adc    al,BYTE PTR [di]
  408203:	(bad)  
  408204:	enter  0xa994,0x14
  408208:	mov    eax,ds:0x582e7e26
  40820d:	sub    DWORD PTR [edx+0x9],esp
  408210:	repz mov bh,0x63
  408213:	cwde   
  408214:	mov    WORD PTR [edx],?
  408216:	fisttp QWORD PTR [ecx-0x52c355fe]
  40821c:	pop    edx
  40821d:	dec    edi
  40821e:	push   ecx
  40821f:	push   esp
  408220:	mov    ebx,0x72af3d43
  408225:	dec    ecx
  408226:	imul   ebp,DWORD PTR [edx+edi*1-0x4c],0x6a01377e
  40822e:	aas    
  40822f:	aad    0x5d
  408231:	dec    esi
  408232:	out    dx,al
  408233:	aam    0x98
  408235:	sbb    al,0x13
  408237:	gs imul ebx,DWORD PTR ss:[ecx-0x542c7812],0xf0267d18
  408243:	cmp    eax,0x86579337
  408248:	sahf   
  408249:	jmp    esp
  40824b:	inc    ecx
  40824c:	pushf  
  40824d:	jo     0x4081ea
  40824f:	outs   dx,DWORD PTR ds:[esi]
  408250:	test   eax,0x3c6192fb
  408255:	jnp    0x4082b5
  408257:	(bad)  
  408258:	xchg   ebp,eax
  408259:	adc    DWORD PTR [edi],edx
  40825b:	jge    0x408226
  40825d:	inc    esp
  40825e:	jmp    0x70c8:0x5c80ff0d
  408265:	ja     0x408284
  408267:	sbb    eax,0x6391dc54
  40826c:	push   esi
  40826d:	enter  0x6acb,0x6e
  408271:	sub    esp,eax
  408273:	jmp    0x4082bd
  408275:	or     eax,0xe4a48daf
  40827a:	cld    
  40827b:	mov    ebx,0xb8ea41e1
  408280:	(bad)  
  408281:	aas    
  408282:	(bad)  
  408283:	lods   eax,DWORD PTR ds:[esi]
  408284:	push   edi
  408285:	adc    al,0x8
  408287:	lock out dx,al
  408289:	jb     0x4082f3
  40828b:	adc    esi,DWORD PTR [edi+edx*4-0x47925024]
  408292:	fimul  WORD PTR [esi-0x40]
  408295:	in     al,dx
  408296:	adc    bl,BYTE PTR [ebp-0x12]
  408299:	mov    edi,0xa6f23e21
  40829e:	pusha  
  40829f:	fisubr DWORD PTR [ebp+0x65]
  4082a2:	mov    dh,0xf6
  4082a4:	xchg   esi,eax
  4082a5:	xchg   ecx,eax
  4082a6:	pop    es
  4082a7:	scas   al,BYTE PTR es:[edi]
  4082a8:	sti    
  4082a9:	adc    al,0x4c
  4082ab:	dec    BYTE PTR [ebx-0x17]
  4082ae:	dec    ecx
  4082af:	outs   dx,DWORD PTR ds:[esi]
  4082b0:	inc    eax
  4082b1:	call   0xf53cb6a4
  4082b6:	cdq    
  4082b7:	out    0x98,eax
  4082b9:	cdq    
  4082ba:	mov    cl,dh
  4082bc:	xor    eax,0x1b7db9fd
  4082c1:	(bad)  
  4082c2:	jecxz  0x408309
  4082c4:	xor    eax,0x8320a19e
  4082c9:	xlat   BYTE PTR ds:[ebx]
  4082ca:	pop    ds
  4082cb:	inc    edi
  4082cc:	and    BYTE PTR [eax+0x40],0x50
  4082d0:	and    BYTE PTR [edx],ch
  4082d2:	retf   0x2ac6
  4082d5:	fcom   DWORD PTR [edx]
  4082d7:	dec    ebp
  4082d8:	or     bl,BYTE PTR ds:0x66879263
  4082de:	call   0x545b:0x81a1ce87
  4082e5:	jge    0x4082c8
  4082e7:	aam    0x32
  4082e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082ea:	pushf  
  4082eb:	pop    eax
  4082ec:	xor    ebp,DWORD PTR [ebx+0x3c]
  4082ef:	jecxz  0x40833a
  4082f1:	aaa    
  4082f2:	push   es
  4082f3:	sub    eax,0xc838919a
  4082f9:	test   BYTE PTR [edi-0x3955a835],dh
  4082ff:	stos   DWORD PTR es:[edi],eax
  408300:	mov    bl,0x30
  408302:	and    al,0x55
  408304:	inc    edi
  408305:	mov    ebp,0xef36c4b3
  40830a:	jge    0x40831d
  40830c:	mov    dl,0x7
  40830e:	jecxz  0x40836d
  408310:	xchg   DWORD PTR ds:0xfe7b378e,ebx
  408316:	sub    eax,0xbae9c6d7
  40831b:	pop    ecx
  40831c:	out    0x69,al
  40831e:	(bad)  [ebx+ebx*8]
  408321:	inc    ebp
  408322:	test   al,0x77
  408324:	jmp    0x408313
  408326:	push   ebp
  408327:	xlat   BYTE PTR ds:[ebx]
  408328:	loope  0x4082e6
  40832a:	ret    0x6fad
  40832d:	xor    eax,0x92162f79
  408332:	xor    esp,esp
  408334:	data16 test al,0x6f
  408337:	dec    eax
  408338:	sbb    BYTE PTR [edi-0x4],bl
  40833b:	xchg   esi,eax
  40833c:	or     bl,BYTE PTR [eax]
  40833e:	mov    ch,BYTE PTR [esi-0x5b3dd17e]
  408344:	pop    eax
  408345:	cmp    eax,0xb4b8e8e9
  40834a:	test   al,0xe5
  40834c:	xor    BYTE PTR ds:0xd8f49497,ah
  408352:	je     0x408300
  408354:	test   al,0x92
  408356:	adc    dh,BYTE PTR [ebx]
  408358:	lea    ecx,[ecx-0x429de9e6]
  40835e:	or     eax,0x432dc346
  408363:	add    eax,0xfc33c64a
  408368:	pop    ss
  408369:	imul   esi,edx,0xffffff8c
  40836c:	pusha  
  40836d:	pop    edx
  40836e:	(bad)  
  40836f:	aam    0xfa
  408371:	dec    ebx
  408372:	ins    BYTE PTR es:[edi],dx
  408373:	mov    eax,0x49fbcafc
  408378:	or     ecx,ebp
  40837a:	adc    BYTE PTR [di-0x7b07],ch
  40837f:	mov    ds:0x4d71fbe5,al
  408384:	mov    BYTE PTR [eax],ch
  408386:	js     0x40830f
  408388:	ins    WORD PTR es:[edi],dx
  40838a:	neg    DWORD PTR [edi+0x5c]
  40838d:	xchg   ebp,eax
  40838e:	pop    ss
  40838f:	fst    DWORD PTR [ecx]
  408391:	inc    esp
  408392:	std    
  408393:	xchg   edi,eax
  408394:	cmc    
  408395:	mov    ds:0x1938666c,al
  40839a:	mov    BYTE PTR [ebx+0x131f4836],bl
  4083a0:	arpl   WORD PTR [ebx+0x73798b25],si
  4083a6:	add    DWORD PTR [esi+0x60],esp
  4083a9:	mov    ebp,0xa2e9a4bb
  4083ae:	mov    ds:0xba5db9e6,eax
  4083b3:	jns    0x4083f7
  4083b5:	rep stos DWORD PTR es:[edi],eax
  4083b7:	xlat   BYTE PTR ds:[ebx]
  4083b8:	aaa    
  4083b9:	pop    edx
  4083ba:	sub    bl,al
  4083bc:	lahf   
  4083bd:	(bad)
  4083c0:	retf   0x3fb1
  4083c3:	(bad)  
  4083c4:	mov    edx,0x95168eb7
  4083c9:	pop    ebp
  4083ca:	xchg   esi,eax
  4083cb:	lds    esp,FWORD PTR [ebx]
  4083cd:	jae    0x408412
  4083cf:	sbb    esi,DWORD PTR [eax-0x7c]
  4083d2:	ret    0xe7a
  4083d5:	dec    esi
  4083d7:	ja     0x408456
  4083d9:	dec    edi
  4083da:	mov    esp,0x3bc3977c
  4083df:	data16 js 0x408442
  4083e2:	or     edi,edi
  4083e4:	stos   DWORD PTR es:[edi],eax
  4083e5:	scas   al,BYTE PTR es:[edi]
  4083e6:	lods   eax,DWORD PTR ds:[esi]
  4083e7:	rcl    BYTE PTR [edi],1
  4083e9:	(bad)  
  4083ea:	and    ch,ch
  4083ec:	adc    cl,BYTE PTR [edi-0x5a]
  4083ef:	fsub   st(3),st
  4083f1:	jmp    0xf1d0:0x291a9144
  4083f8:	(bad)  
  4083fa:	cmp    eax,0x5ebcc1a
  4083ff:	out    dx,al
  408400:	outs   dx,DWORD PTR ds:[esi]
  408401:	or     ebp,DWORD PTR [edx-0x1a998be]
  408407:	push   cs
  408408:	cmc    
  408409:	iret   
  40840a:	pop    eax
  40840b:	pop    edi
  40840c:	sbb    al,0x89
  40840e:	retf   
  40840f:	int    0xa1
  408411:	pop    esp
  408412:	mov    ebx,0x68b3940d
  408417:	vunpcklps xmm2,xmm2,XMMWORD PTR [ecx-0x5980c4f2]
  40841f:	nop
  408420:	imul   eax,DWORD PTR [esi],0x3abd75f0
  408426:	(bad)  
  408427:	mov    bl,0x76
  408429:	cwde   
  40842a:	je     0x408485
  40842c:	stc    
  40842d:	push   es
  40842e:	call   0xef6becb3
  408433:	add    BYTE PTR [edx-0xb],al
  408436:	hlt    
  408437:	aas    
  408438:	scas   eax,DWORD PTR es:[edi]
  408439:	aas    
  40843a:	adc    ebx,eax
  40843c:	sub    eax,DWORD PTR [ebx]
  40843e:	xor    eax,0x185132a9
  408443:	cmp    BYTE PTR [ecx],ah
  408445:	adc    cl,bh
  408447:	add    al,0xa2
  408449:	or     BYTE PTR [edx],0xd8
  40844c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40844d:	xlat   BYTE PTR ds:[ebx]
  40844e:	bound  ebx,QWORD PTR [ecx-0x1]
  408451:	nop
  408452:	add    eax,0xe4358a4
  408457:	xor    eax,0x845a574c
  40845c:	mul    al
  40845e:	jno    0x40841e
  408460:	sbb    edx,esp
  408462:	jae    0x408442
  408464:	aad    0xfd
  408466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408467:	inc    edi
  408468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408469:	into   
  40846a:	adc    BYTE PTR [edi],al
  40846c:	jo     0x4083f5
  40846e:	fisttp DWORD PTR [ebp-0x26]
  408471:	shl    BYTE PTR [edi],cl
  408473:	or     DWORD PTR [ebx+eiz*1],edx
  408476:	loopne 0x408451
  408478:	(bad)  [eax-0x43]
  40847b:	push   ds
  40847c:	and    DWORD PTR [edi],0x15
  40847f:	lea    edi,[edi+0x456d1aa0]
  408485:	xchg   DWORD PTR ds:0xe4b5f3b5,eax
  40848b:	retf   
  40848c:	mov    ds:0x6a4f9f0c,al
  408491:	into   
  408492:	rol    BYTE PTR [ecx],1
  408494:	cwde   
  408495:	adc    BYTE PTR [ebx+eax*2+0x3d],bh
  408499:	in     al,dx
  40849a:	push   0x59
  40849c:	jg     0x408510
  40849e:	int    0x56
  4084a0:	xor    dh,0x2a
  4084a3:	and    al,0xc3
  4084a5:	neg    DWORD PTR [ecx]
  4084a7:	mov    dl,0x3c
  4084a9:	sub    eax,0xaaf223eb
  4084ae:	test   BYTE PTR [esi*1+0x189b6eab],al
  4084b5:	sar    DWORD PTR [eax],cl
  4084b7:	or     eax,0x8b4589a0
  4084bc:	mov    esp,DWORD PTR [esi-0x1523d20c]
  4084c2:	out    dx,al
  4084c3:	pop    ebp
  4084c4:	imul   edx,edx,0x1858967d
  4084ca:	stc    
  4084cb:	push   ds
  4084cc:	(bad)  
  4084cd:	pusha  
  4084ce:	das    
  4084cf:	fadd   QWORD PTR [esi-0x53]
  4084d2:	ins    BYTE PTR es:[edi],dx
  4084d3:	jge    0x4084bf
  4084d5:	retf   
  4084d6:	xor    bl,ah
  4084d8:	pop    ecx
  4084d9:	int    0xab
  4084db:	jb     0x408463
  4084dd:	and    al,0x29
  4084df:	mul    DWORD PTR [edx]
  4084e1:	lea    ebp,[ebp+0x1374ccdc]
  4084e7:	sub    al,BYTE PTR [edx]
  4084e9:	aam    0xec
  4084eb:	pop    DWORD PTR [ebx-0x28]
  4084ee:	test   DWORD PTR [ebp+0x7],0x1d9f05f2
  4084f5:	xchg   esp,eax
  4084f6:	mov    ah,BYTE PTR [ecx-0xfa43080]
  4084fc:	mov    edi,0x5a0ffae6
  408501:	sub    dl,al
  408503:	sub    BYTE PTR [ebp+0x2d],al
  408506:	mov    ds:0x298bfa79,al
  40850b:	lods   eax,DWORD PTR ds:[esi]
  40850c:	daa    
  40850d:	jo     0x408585
  40850f:	mov    eax,ds:0x3f2ea03e
  408514:	pop    esi
  408515:	call   0x990aced4
  40851a:	push   ebx
  40851b:	xlat   BYTE PTR ds:[ebx]
  40851c:	adc    cl,dh
  40851e:	sbb    edi,DWORD PTR [esi]
  408520:	sahf   
  408521:	or     DWORD PTR [edi],eax
  408523:	aaa    
  408524:	add    edi,DWORD PTR [edi+0x32]
  408527:	mov    bh,0xab
  408529:	mov    ebp,0x81d8f505
  40852e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40852f:	lock std 
  408531:	dec    edi
  408532:	cmc    
  408533:	push   ds
  408534:	cli    
  408535:	xor    al,0xc1
  408537:	stos   DWORD PTR es:[edi],eax
  408538:	and    al,0x2e
  40853a:	xor    eax,0x815db5ab
  40853f:	outs   dx,BYTE PTR ds:[esi]
  408540:	dec    edx
  408541:	js     0x408572
  408543:	test   eax,0xcb1cd1ce
  408548:	inc    edi
  408549:	xchg   DWORD PTR [ecx],eax
  40854b:	outs   dx,DWORD PTR ds:[esi]
  40854c:	add    bh,BYTE PTR [eax]
  40854e:	outs   dx,BYTE PTR ds:[esi]
  40854f:	mov    dl,0xd9
  408551:	dec    esi
  408552:	cmp    DWORD PTR [edi],ebp
  408554:	in     eax,0x63
  408556:	pop    ss
  408557:	rcr    DWORD PTR [ecx-0x54],1
  40855a:	sbb    eax,0x22f350cd
  40855f:	inc    ebp
  408560:	mov    WORD PTR [eax-0x10],?
  408563:	inc    esi
  408564:	cmc    
  408565:	in     eax,dx
  408566:	rcr    BYTE PTR [esi-0x237ee4b7],1
  40856c:	pop    es
  40856d:	mov    eax,ds:0x7be7d711
  408572:	stos   BYTE PTR es:[edi],al
  408573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408574:	bound  ebx,QWORD PTR [eax]
  408576:	mov    ds:0x9f1ca17f,eax
  40857b:	push   ecx
  40857c:	pop    es
  40857d:	mov    eax,0x1fd45d19
  408582:	aam    0xab
  408584:	cmc    
  408585:	aaa    
  408586:	jne    0x4085a5
  408588:	fistp  WORD PTR [ebx+0x3f94b396]
  40858e:	jmp    0xab0ff8b4
  408593:	loope  0x4085f8
  408595:	mov    ds:0x8ba11ef5,al
  40859a:	loop   0x408612
  40859c:	and    BYTE PTR [esi-0x63e18336],bh
  4085a2:	add    al,dl
  4085a4:	repnz jecxz 0x40858b
  4085a7:	call   0x159:0x1dab9326
  4085ae:	sar    DWORD PTR [di],1
  4085b1:	mov    ecx,0x38ded85
  4085b6:	and    al,0xbc
  4085b8:	mov    ebp,0xf5184584
  4085bd:	cld    
  4085be:	or     ch,BYTE PTR fs:[eax+0xe8fe4d1]
  4085c5:	in     eax,0x10
  4085c7:	std    
  4085c8:	dec    edx
  4085c9:	ins    DWORD PTR es:[edi],dx
  4085ca:	dec    ebp
  4085cb:	adc    BYTE PTR [ecx+0x15],0x47
  4085cf:	jle    0x40855b
  4085d1:	adc    eax,0x6c543a66
  4085d6:	scas   eax,DWORD PTR es:[edi]
  4085d7:	adc    al,cl
  4085d9:	inc    ebx
  4085da:	dec    ecx
  4085db:	leave  
  4085dc:	test   al,0xba
  4085de:	test   ebx,0x817d0e76
  4085e4:	and    BYTE PTR [ecx-0x44],dh
  4085e7:	push   ax
  4085e9:	fild   QWORD PTR [eax+0x40668d77]
  4085ef:	nop
  4085f0:	in     eax,dx
  4085f1:	arpl   sp,sp
  4085f3:	or     dh,BYTE PTR [ecx+0x77]
  4085f6:	cli    
  4085f7:	jmp    0x40865c
  4085f9:	ds in  al,0xdf
  4085fc:	ret    0x74d3
  4085ff:	sbb    eax,0xc8f90585
  408604:	jne    0x4085f6
  408606:	fisttp WORD PTR [edx]
  408608:	je     0x4085b4
  40860a:	sub    DWORD PTR [esi+ebp*2],eax
  40860d:	ds push cs
  40860f:	mov    dh,0x72
  408611:	out    dx,eax
  408612:	sub    eax,0x3378c4b1
  408617:	push   0xffffffad
  408619:	sbb    ebx,DWORD PTR [esi+0x1eade2e7]
  40861f:	push   0xf63ee39
  408624:	jge    0x4085f1
  408626:	imul   ebx,edx,0x42501cb8
  40862c:	call   0x13a5ed49
  408631:	mov    ch,0x14
  408633:	push   ebx
  408634:	sahf   
  408635:	sbb    esi,ebx
  408637:	add    al,ah
  408639:	jp     0x408640
  40863b:	mov    ds:0xf38314d6,al
  408640:	mov    al,ds:0xd37a411b
  408645:	mov    bh,0xea
  408647:	mov    ebx,edi
  408649:	push   ebp
  40864a:	out    0xb5,eax
  40864c:	cmp    DWORD PTR [edx+eiz*8-0x1a17b9ea],edi
  408653:	fs stos BYTE PTR es:[edi],al
  408655:	push   cs
  408656:	jg     0x4086b5
  408658:	in     eax,0x39
  40865a:	mov    cl,0x57
  40865c:	inc    edx
  40865d:	mov    ch,0x6e
  40865f:	out    0x62,al
  408661:	xchg   ecx,eax
  408662:	pop    es
  408663:	pop    eax
  408664:	les    esi,FWORD PTR [edx]
  408666:	pop    edi
  408667:	dec    ebp
  408668:	xor    BYTE PTR [eax+0x27],ch
  40866b:	jp     0x408677
  40866d:	dec    esi
  40866e:	nop
  40866f:	hlt    
  408670:	push   ss
  408671:	sbb    eax,0xe57da69b
  408676:	cwde   
  408677:	mov    ah,0x3f
  408679:	mov    DWORD PTR ds:0x21b7fa77,ebx
  40867f:	mov    bl,ah
  408681:	arpl   WORD PTR [esi+0x3482ac3c],bp
  408687:	enter  0x9a32,0xd5
  40868b:	mov    edi,0x76e469cb
  408690:	mov    bh,0xb
  408692:	xor    edx,esp
  408694:	bound  edx,QWORD PTR [edx]
  408696:	adc    BYTE PTR [esp+ecx*4],al
  408699:	std    
  40869a:	imul   BYTE PTR [eax+0x7a]
  40869d:	xchg   ebx,eax
  40869e:	sbb    bl,0x72
  4086a1:	xchg   esp,eax
  4086a2:	add    eax,0xfcb715f2
  4086a7:	cli    
  4086a8:	loope  0x408720
  4086aa:	mov    ds:0xc9f96ce,eax
  4086af:	sahf   
  4086b0:	stos   DWORD PTR es:[edi],eax
  4086b1:	or     al,0xd7
  4086b3:	in     eax,dx
  4086b4:	or     DWORD PTR [ecx],ebx
  4086b6:	idiv   BYTE PTR [ebx]
  4086b8:	std    
  4086b9:	retf   0xd531
  4086bc:	and    al,0x4b
  4086be:	int3   
  4086bf:	mov    bl,0x15
  4086c1:	and    ch,0x73
  4086c4:	mov    ecx,0x46cfa243
  4086c9:	clc    
  4086ca:	xchg   edi,eax
  4086cb:	inc    ebx
  4086cc:	xchg   ecx,eax
  4086cd:	dec    edi
  4086ce:	mov    cl,0x73
  4086d0:	push   ebx
  4086d1:	fbld   TBYTE PTR [edx-0x31]
  4086d4:	jae    0x4086ab
  4086d6:	das    
  4086d7:	push   ss
  4086d8:	mov    ah,0xa7
  4086da:	xchg   esi,eax
  4086db:	add    eax,0xc1c3f671
  4086e0:	dec    ebx
  4086e1:	sbb    ebp,DWORD PTR [esp+ecx*2]
  4086e4:	ins    DWORD PTR es:[edi],dx
  4086e5:	pop    ebp
  4086e6:	push   ss
  4086e7:	sub    DWORD PTR [ecx+0x5f],esp
  4086ea:	popf   
  4086eb:	inc    ebx
  4086ec:	icebp  
  4086ed:	mov    ds,WORD PTR [esi]
  4086ef:	push   edx
  4086f0:	rcl    DWORD PTR [esi],cl
  4086f2:	adc    ebp,esp
  4086f4:	test   BYTE PTR [edi+0x43],0x6f
  4086f8:	stos   BYTE PTR es:[edi],al
  4086f9:	jle    0x4086a4
  4086fb:	ds dec esp
  4086fd:	fcmovu st,st(5)
  4086ff:	jno    0x4086a4
  408701:	mov    ebx,0xc583639f
  408706:	call   0x749ec912
  40870b:	sub    DWORD PTR [ebx+0x7c5eeee3],esp
  408711:	test   BYTE PTR [edi-0x6e],dh
  408714:	sub    bl,BYTE PTR [esi-0x76]
  408717:	add    ebx,DWORD PTR [eax+ecx*1]
  40871a:	js     0x4086d0
  40871c:	repz scas al,BYTE PTR es:[edi]
  40871e:	stos   BYTE PTR es:[edi],al
  40871f:	sub    dh,BYTE PTR [esi]
  408721:	paddd  mm7,QWORD PTR [eax+0x68a99a31]
  408728:	sub    al,0x2e
  40872a:	jns    0x408743
  40872c:	popf   
  40872d:	and    BYTE PTR [ebx+0x5e59eaa9],dl
  408733:	ret    0xa900
  408736:	(bad)  
  408737:	mov    ds,WORD PTR [ecx+0x2f]
  40873a:	shl    DWORD PTR [edx+0x60359dbb],cl
  408740:	(bad)  
  408741:	adc    ebx,DWORD PTR [ecx+eiz*1-0x6afa39b9]
  408748:	and    ecx,DWORD PTR [edx]
  40874a:	mov    dh,0x25
  40874c:	push   edx
  40874d:	pushf  
  40874e:	daa    
  40874f:	mov    dh,0xd8
  408751:	sbb    al,0x36
  408753:	mov    ebx,DWORD PTR [eax-0x63d964ff]
  408759:	push   ss
  40875a:	mov    DWORD PTR [esi-0x3619866],ecx
  408760:	lea    edi,[eax]
  408762:	or     DWORD PTR ds:0xb383d011,edx
  408768:	jae    0x4087bb
  40876a:	retf   0xcbf9
  40876d:	idiv   dh
  40876f:	or     bh,BYTE PTR [edx+0x59967e46]
  408775:	jmp    0x1dcffb4e
  40877a:	jecxz  0x4087f2
  40877c:	iret   
  40877d:	std    
  40877e:	dec    edx
  40877f:	loop   0x408756
  408781:	inc    edx
  408782:	ldmxcsr DWORD PTR [edi-0x149af3b1]
  408789:	sub    eax,0x993bc45
  40878e:	add    DWORD PTR [esi+ebx*8+0xe],esp
  408792:	xchg   ebp,eax
  408793:	xchg   edx,eax
  408794:	leave  
  408795:	pop    edi
  408796:	jno    0x408752
  408798:	jne    0x408772
  40879a:	jbe    0x408781
  40879c:	xor    ah,BYTE PTR [esi-0x70]
  40879f:	xor    eax,DWORD PTR [eax+eiz*1]
  4087a2:	dec    ebp
  4087a3:	push   ss
  4087a4:	ret    
  4087a5:	add    bh,0xef
  4087a8:	in     eax,dx
  4087a9:	popa   
  4087aa:	and    eax,0xb242f01f
  4087af:	jl     0x4087f7
  4087b1:	repnz pop esp
  4087b3:	xor    BYTE PTR [ecx-0x37464fbb],bl
  4087b9:	dec    edi
  4087ba:	(bad)  
  4087bb:	jae    0x4087eb
  4087bd:	push   eax
  4087be:	(bad)  
  4087bf:	xor    al,ah
  4087c1:	test   DWORD PTR [esi+eiz*2-0x4d],ecx
  4087c5:	je     0x40879d
  4087c7:	inc    eax
  4087c8:	xchg   ecx,eax
  4087c9:	cwde   
  4087ca:	or     DWORD PTR [ebx-0xa],esp
  4087cd:	sub    ebx,edi
  4087cf:	cmp    ebx,DWORD PTR [ecx-0x4ab25d17]
  4087d5:	repz mov bl,0x3e
  4087d8:	popf   
  4087d9:	ror    BYTE PTR [ebp+0x46c21584],cl
  4087df:	cmc    
  4087e0:	inc    ebp
  4087e1:	mul    dh
  4087e3:	mov    al,ds:0xadebf3ce
  4087e8:	aaa    
  4087e9:	xchg   edi,eax
  4087ea:	repnz xchg ebx,eax
  4087ec:	sub    BYTE PTR [ebp-0x65c7cade],al
  4087f2:	inc    ebp
  4087f3:	push   esp
  4087f4:	(bad)  
  4087f5:	in     eax,0xf4
  4087f7:	inc    esi
  4087f8:	jbe    0x408806
  4087fa:	and    edi,DWORD PTR [ecx]
  4087fc:	dec    edi
  4087fd:	movq2dq xmm0,mm2
  408801:	adc    dl,ch
  408803:	pop    ebp
  408804:	cmp    ah,BYTE PTR [edx-0x631c8e3e]
  40880a:	or     dh,BYTE PTR [ecx-0x6b]
  40880d:	sbb    bh,BYTE PTR [ecx]
  40880f:	arpl   WORD PTR [edi],di
  408811:	lods   al,BYTE PTR ds:[esi]
  408812:	sub    bh,ch
  408814:	sbb    ecx,ecx
  408816:	stos   BYTE PTR es:[edi],al
  408817:	inc    ecx
  408818:	and    eax,0xbb38d3ce
  40881d:	pavgw  mm4,mm6
  408820:	sub    ah,BYTE PTR ds:0xb2ecaf23
  408826:	pushf  
  408827:	or     bl,BYTE PTR [ebx+esi*1]
  40882a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40882b:	pop    esi
  40882c:	into   
  40882d:	gs out 0x18,eax
  408830:	push   DWORD PTR [esi]
  408832:	inc    ebp
  408833:	ins    BYTE PTR es:[edi],dx
  408834:	imul   ebx,ebx,0xf4786684
  40883a:	daa    
  40883b:	dec    ebp
  40883c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40883d:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40883f:	mov    ebx,0xf264c674
  408844:	cwde   
  408845:	push   edx
  408846:	sub    al,0x76
  408848:	js     0x4087d0
  40884a:	inc    eax
  40884b:	stc    
  40884c:	or     DWORD PTR [ecx-0x5c],edx
  40884f:	mov    edi,0xdf436267
  408854:	arpl   WORD PTR [ebx-0x1bd1bc70],si
  40885a:	adc    ebx,edx
  40885c:	jne    0x4088dd
  40885e:	rol    DWORD PTR [esi-0x3ab761a8],cl
  408864:	pop    eax
  408865:	adc    edx,ecx
  408867:	js     0x40886f
  408869:	int    0x85
  40886b:	(bad)  
  40886c:	mov    cl,0xee
  40886e:	mov    ah,BYTE PTR [ecx+eax*8+0x4b]
  408872:	jg     0x4088af
  408874:	xor    DWORD PTR [edx+0x6e],ebx
  408877:	in     eax,0x73
  408879:	pop    edi
  40887a:	lock xor DWORD PTR [ebx+edx*2-0x53a85535],0xffffffc2
  408883:	cmp    eax,DWORD PTR ds:0x7ef10de0
  408889:	in     eax,0xed
  40888b:	popf   
  40888c:	push   0xffffffff
  40888e:	scas   al,BYTE PTR es:[edi]
  40888f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408890:	(bad)  
  408892:	(bad)  
  408894:	jmp    0x422c1b66
  408899:	mov    ds:0x33653b5e,eax
  40889e:	aad    0x72
  4088a0:	cmp    eax,0x22906036
  4088a5:	push   ss
  4088a6:	or     eax,0x91bff08f
  4088ab:	fldenv [ecx-0x14]
  4088ae:	nop
  4088af:	arpl   WORD PTR [eax+eax*8+0x3c],sp
  4088b3:	xchg   esp,eax
  4088b4:	aaa    
  4088b5:	lahf   
  4088b6:	mov    edx,0xf4778a3b
  4088bb:	pushf  
  4088bc:	mov    DWORD PTR [eax+0x3e],esp
  4088bf:	pusha  
  4088c0:	fcom   DWORD PTR [edx+0x4b]
  4088c3:	test   dh,dh
  4088c5:	daa    
  4088c6:	imul   ebp,DWORD PTR [eax-0x4a],0xffffffa4
  4088ca:	imul   edi,DWORD PTR [ecx-0x1e203808],0xfffffff8
  4088d1:	aam    0x37
  4088d3:	mov    eax,0xeee0f299
  4088d8:	jno    0x408922
  4088da:	shr    dl,cl
  4088dc:	cmp    BYTE PTR [ebx],al
  4088de:	and    dl,BYTE PTR ds:0x8d8e0b0e
  4088e4:	xor    edx,ecx
  4088e6:	loope  0x4088e4
  4088e8:	out    dx,al
  4088e9:	out    dx,al
  4088ea:	(bad)  
  4088eb:	popa   
  4088ec:	(bad)  
  4088ee:	jno    0x40888c
  4088f0:	mov    ds:0xbb817d0c,eax
  4088f5:	popa   
  4088f6:	mov    bh,ah
  4088f8:	mov    BYTE PTR [eax-0x2e],dl
  4088fb:	repz dec esp
  4088fd:	jp     0x40895e
  4088ff:	sbb    BYTE PTR [eax-0x7ac56e09],ch
  408905:	pop    edx
  408906:	mov    eax,0xbd72b8a6
  40890b:	cs aas 
  40890d:	fidiv  DWORD PTR [ebp+ebx*1-0x1f]
  408911:	test   al,0xfa
  408913:	push   es
  408914:	cdq    
  408915:	popf   
  408916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408917:	cmp    ebp,DWORD PTR [edx-0x58]
  40891a:	xor    eax,0x5e0f6c57
  40891f:	inc    esp
  408920:	into   
  408921:	(bad)  
  408922:	cmovp  ebx,ebx
  408925:	sub    eax,0x35820580
  40892a:	lods   al,BYTE PTR ds:[esi]
  40892b:	sub    al,0x2a
  40892d:	lahf   
  40892e:	mov    bl,0x85
  408930:	mov    eax,0x3d259c59
  408935:	lds    eax,FWORD PTR fs:[ecx]
  408938:	inc    edi
  408939:	cmp    BYTE PTR [edx],cl
  40893b:	and    eax,DWORD PTR [edx+edx*4-0x80]
  40893f:	in     al,dx
  408940:	jno    0x40894f
  408942:	adc    esi,DWORD PTR [ecx]
  408944:	dec    ebp
  408945:	push   0xd2da2ab2
  40894a:	sbb    eax,0x98b2cfae
  40894f:	sbb    ah,ch
  408951:	loop   0x408900
  408953:	jle    0x4089d2
  408955:	pop    ds
  408956:	jno    0x408977
  408958:	pop    ecx
  408959:	pop    es
  40895a:	lock inc esi
  40895d:	push   edx
  40895e:	pop    ds
  40895f:	add    DWORD PTR [ebx+0x2],edx
  408962:	inc    ebp
  408963:	jno    0x40896b
  408965:	ret    0x491
  408968:	ror    BYTE PTR [ebp-0x65],1
  40896b:	inc    ecx
  40896c:	dec    ecx
  40896d:	jno    0x40898e
  40896f:	dec    ebp
  408970:	jae    0x408919
  408972:	mov    ah,BYTE PTR [eax]
  408974:	fistp  DWORD PTR [eax+0x5ef5bda6]
  40897a:	(bad)
  40897d:	and    ebx,esi
  40897f:	cmc    
  408980:	or     dl,BYTE PTR [esi]
  408982:	inc    ebp
  408983:	mov    edi,0xd27e0eeb
  408988:	mov    eax,ebx
  40898a:	dec    eax
  40898b:	xor    al,0xf9
  40898d:	or     eax,0xcef97d3c
  408992:	outs   dx,BYTE PTR ds:[esi]
  408993:	push   esp
  408994:	push   eax
  408995:	jmp    edi
  408997:	jmp    0xd4525dc6
  40899c:	add    ebp,DWORD PTR [ecx-0x2cb82caa]
  4089a2:	loopne 0x4089bf
  4089a4:	sbb    eax,0xa1818536
  4089a9:	cmp    ecx,DWORD PTR ds:0xef81e6b8
  4089af:	cld    
  4089b0:	adc    dl,BYTE PTR [ebx+0x7e]
  4089b3:	push   ecx
  4089b4:	dec    esi
  4089b5:	or     al,0x6a
  4089b7:	cld    
  4089b8:	std    
  4089b9:	mov    eax,0x420f75f2
  4089be:	(bad)  
  4089bf:	hlt    
  4089c0:	fidiv  DWORD PTR [eax+0x2a]
  4089c3:	stos   DWORD PTR es:[edi],eax
  4089c4:	clc    
  4089c5:	ss cs mov ebx,0x1230c401
  4089cc:	add    eax,0x36a6b4fc
  4089d1:	fnsave [edi+0xa92debf]
  4089d7:	mov    eax,ds:0x9b086317
  4089dc:	and    BYTE PTR [edx+0x28],dh
  4089df:	or     DWORD PTR [esi+0x30],ebp
  4089e2:	mov    bh,0x2c
  4089e4:	jmp    0xc7cd902b
  4089e9:	data16 aam 0x2d
  4089ec:	add    eax,0x52e8cbbc
  4089f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089f2:	lahf   
  4089f3:	loopne 0x408a1d
  4089f5:	dec    BYTE PTR [ebp+0x4f35c969]
  4089fb:	or     eax,0xa16f876e
  408a00:	rol    esp,cl
  408a02:	imul   esp,DWORD PTR [eax-0x6fcb543a],0x2f33960d
  408a0c:	fadd   st,st(3)
  408a0e:	xor    eax,esi
  408a10:	push   es
  408a11:	dec    ebp
  408a12:	xchg   BYTE PTR [ecx+esi*1],cl
  408a15:	ss ret 
  408a17:	sub    al,0xc2
  408a19:	mov    ecx,eax
  408a1b:	shl    DWORD PTR [ebx+eax*1],cl
  408a1e:	dec    ecx
  408a1f:	int    0xb3
  408a21:	mov    ds:0xfb2b3f8f,al
  408a26:	sbb    DWORD PTR [esi-0x7131f03],esp
  408a2c:	cmp    DWORD PTR [eax-0x1c30298b],ebx
  408a32:	or     DWORD PTR [ebx+edx*4+0x7a],edi
  408a36:	pushf  
  408a37:	add    eax,0x3145fcbb
  408a3c:	mov    eax,0x1dcdb421
  408a41:	ret    0x4312
  408a44:	loop   0x408a69
  408a46:	jo     0x408a9c
  408a48:	int    0xd9
  408a4a:	int    0xe3
  408a4c:	sahf   
  408a4d:	sbb    BYTE PTR [ebx+0x3d81e58a],cl
  408a53:	in     eax,dx
  408a54:	jle    0x408a25
  408a56:	mov    edx,0x31faaff8
  408a5b:	imul   esi,DWORD PTR [esi],0xffffffdd
  408a5e:	dec    ebp
  408a5f:	xchg   esp,eax
  408a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a61:	jno    0x408a96
  408a63:	dec    edx
  408a64:	inc    eax
  408a65:	out    dx,al
  408a66:	adc    edi,0xffffff9e
  408a69:	cmp    BYTE PTR [eiz*1+0x27e9cfab],bh
  408a70:	dec    ecx
  408a71:	stc    
  408a72:	sbb    al,0x5e
  408a74:	pop    ds
  408a75:	add    al,0xb
  408a77:	or     eax,0xf2df4abf
  408a7c:	and    al,0x8
  408a7e:	out    0xdd,eax
  408a80:	dec    esi
  408a81:	out    dx,eax
  408a82:	add    al,0x52
  408a84:	jmp    0x408a1a
  408a86:	add    DWORD PTR [ebp-0x60a2f8fa],esp
  408a8c:	pop    es
  408a8d:	dec    edx
  408a8e:	fimul  DWORD PTR [edi-0xeb1bf31]
  408a94:	retf   
  408a95:	xlat   BYTE PTR ds:[ebx]
  408a96:	aam    0xca
  408a98:	data16 jo 0x408a46
  408a9b:	mov    ebp,0x18cf3691
  408aa0:	fstp   DWORD PTR [ebx-0x67039957]
  408aa6:	imul   ecx,DWORD PTR [edx-0x45],0xffffffa6
  408aaa:	clc    
  408aab:	cmp    al,0x11
  408aad:	sbb    BYTE PTR [ebx+0x58],dl
  408ab0:	pop    ss
  408ab1:	adc    bh,cl
  408ab3:	push   es
  408ab4:	sbb    eax,0xbafaae5a
  408ab9:	aam    0xd6
  408abb:	leave  
  408abc:	mov    ah,0x9f
  408abe:	es nop
  408ac0:	jecxz  0x408aac
  408ac2:	pusha  
  408ac3:	mov    edi,0x5b09f167
  408ac8:	in     eax,dx
  408ac9:	push   DWORD PTR [esi-0x51]
  408acc:	jae    0x408a63
  408ace:	das    
  408acf:	lahf   
  408ad0:	inc    esp
  408ad1:	mov    DWORD PTR [eax],ebx
  408ad3:	ror    BYTE PTR [ebx-0x3b],0xb7
  408ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ad8:	push   0xffffffca
  408ada:	inc    edi
  408adb:	jmp    0x835f:0x86434a8b
  408ae2:	fdivr  QWORD PTR [esi+0x50]
  408ae5:	out    dx,al
  408ae6:	adc    dl,al
  408ae8:	jne    0x408ae9
  408aea:	dec    esp
  408aeb:	loopne 0x408b4e
  408aed:	jnp    0x408aff
  408aef:	jne    0x408a97
  408af1:	mov    dl,cl
  408af3:	or     eax,0xa1688660
  408af8:	cmp    al,0x21
  408afa:	sbb    ecx,DWORD PTR [eax+ebp*4-0x56cb0784]
  408b01:	shl    BYTE PTR [ecx],cl
  408b03:	xor    eax,0x8e67c953
  408b08:	ins    DWORD PTR es:[edi],dx
  408b09:	loopne 0x408b53
  408b0b:	rcr    bh,cl
  408b0d:	gs cmp ax,0x15a1
  408b12:	mov    edi,0x71b127e5
  408b17:	pop    ecx
  408b18:	xchg   ecx,eax
  408b19:	or     BYTE PTR [edi-0xa8571a4],0xf0
  408b20:	push   esp
  408b21:	push   esp
  408b22:	push   eax
  408b23:	jno    0x408b8b
  408b25:	mov    ecx,0x90da239f
  408b2a:	(bad)  
  408b2b:	out    dx,al
  408b2c:	jl     0x408b46
  408b2e:	loop   0x408ada
  408b30:	mov    dl,0x5c
  408b32:	cmp    BYTE PTR [esi-0x65c02ebb],bl
  408b38:	lods   al,BYTE PTR ds:[esi]
  408b39:	fs inc ebp
  408b3b:	out    0x24,eax
  408b3d:	cmp    al,BYTE PTR [esi+0x40]
  408b40:	inc    esp
  408b41:	cwde   
  408b42:	sub    DWORD PTR [ecx+0x43bd03cd],esp
  408b48:	std    
  408b49:	daa    
  408b4a:	repz dec eax
  408b4c:	stc    
  408b4d:	cmp    ch,dh
  408b4f:	xor    DWORD PTR [edi],0xcb5ea438
  408b55:	mov    bh,0x4b
  408b57:	repz cmp BYTE PTR [esp+ebp*8-0x17e2cf59],0xa1
  408b60:	inc    ecx
  408b61:	neg    BYTE PTR [edi+0xc3396e9]
  408b67:	(bad)  
  408b68:	pop    esi
  408b69:	mov    ebx,0x5801a224
  408b6e:	jge    0x408b1b
  408b70:	(bad)  
  408b72:	imul   edi,ecx,0x1a2cb83f
  408b78:	dec    edi
  408b79:	push   es
  408b7a:	push   ebx
  408b7b:	mov    ch,0x9e
  408b7d:	and    bl,BYTE PTR ds:[edx-0x3c]
  408b81:	push   0x3e2f14e2
  408b86:	ds push cs
  408b88:	cmp    edi,DWORD PTR [esi]
  408b8a:	cmp    ch,BYTE PTR [eax-0x256ee4da]
  408b90:	lds    ecx,FWORD PTR [ebx]
  408b92:	jmp    0x7924:0x3d6392bc
  408b99:	sahf   
  408b9a:	cdq    
  408b9b:	mov    edi,0x88f4b9a3
  408ba0:	push   ecx
  408ba1:	adc    ecx,ecx
  408ba3:	sub    dl,ah
  408ba5:	lods   eax,DWORD PTR ds:[esi]
  408ba6:	icebp  
  408ba7:	lock int 0x2e
  408baa:	cmp    eax,DWORD PTR [esi+0x28959740]
  408bb0:	sub    dh,0xe0
  408bb3:	fwait
  408bb4:	icebp  
  408bb5:	sbb    al,0x4b
  408bb7:	idiv   esp
  408bb9:	xor    al,ah
  408bbb:	imul   ebx,ecx,0xce1ca8d5
  408bc1:	mul    ecx
  408bc3:	fldcw  WORD PTR [ebx-0x45]
  408bc6:	into   
  408bc7:	lds    ebx,FWORD PTR [eax*8-0x1d71067a]
  408bce:	push   0x71
  408bd0:	jl     0x408b82
  408bd2:	mov    eax,0x96eb04ef
  408bd7:	jo     0x408bcd
  408bd9:	fld    DWORD PTR [ecx+0x62a88f1d]
  408bdf:	retf   0x4e0e
  408be2:	repz test BYTE PTR [esi-0x38],ch
  408be6:	pop    eax
  408be7:	(bad)  
  408be8:	fsubp  st(7),st
  408bea:	mov    ebp,0x6b84c367
  408bef:	imul   ebx
  408bf1:	retf   
  408bf2:	iret   
  408bf3:	aad    0xf9
  408bf5:	pop    eax
  408bf6:	mov    bl,0x6e
  408bf8:	leave  
  408bf9:	cmp    dl,BYTE PTR [ebx+0x222cae21]
  408bff:	mov    BYTE PTR [ecx-0x2f8e220f],0x50
  408c06:	push   esp
  408c07:	stc    
  408c08:	out    dx,eax
  408c09:	nop
  408c0a:	sub    BYTE PTR [ebx-0x9441184],0x9a
  408c11:	fsubr  st(4),st
  408c13:	jbe    0x408c19
  408c15:	xchg   BYTE PTR [esi+0x7f6da2e5],al
  408c1b:	add    DWORD PTR [eax],esi
  408c1d:	or     ah,BYTE PTR [ebx+eiz*8+0x5ba0384]
  408c24:	mov    bh,dl
  408c26:	gs cdq 
  408c28:	hlt    
  408c29:	mov    ch,0xa1
  408c2b:	xchg   ebp,eax
  408c2c:	outs   dx,BYTE PTR ds:[esi]
  408c2d:	jmp    0x77734fe3
  408c32:	xor    eax,0x2137087f
  408c37:	or     esi,ebx
  408c39:	mov    ebp,DWORD PTR [edx+0x2f]
  408c3c:	add    cl,dh
  408c3e:	mov    eax,ds:0x5a91482a
  408c43:	aad    0x10
  408c45:	fiadd  WORD PTR [edx-0x6d]
  408c48:	adc    eax,0x5e9b6b2f
  408c4d:	push   esp
  408c4e:	mov    eax,ds:0xd9e30e0e
  408c53:	scas   al,BYTE PTR es:[edi]
  408c54:	mov    cs,esp
  408c56:	outs   dx,DWORD PTR ds:[esi]
  408c57:	mov    ecx,DWORD PTR [ebx+0x58eefd39]
  408c5d:	cmp    al,0x7f
  408c5f:	aad    0x91
  408c61:	mov    eax,ds:0xfa15831b
  408c66:	push   ecx
  408c67:	retf   0xaedd
  408c6a:	push   ss
  408c6b:	dec    esp
  408c6c:	gs stos BYTE PTR es:[edi],al
  408c6e:	loop   0x408c0b
  408c70:	fstp   TBYTE PTR [edi+0x62]
  408c73:	mov    esp,0xf0a95da
  408c78:	test   DWORD PTR [ebx],esp
  408c7a:	aas    
  408c7b:	dec    ebx
  408c7c:	inc    ecx
  408c7d:	sbb    ch,al
  408c7f:	fsin   
  408c81:	rol    DWORD PTR [edx+0x3],cl
  408c84:	outs   dx,DWORD PTR ds:[esi]
  408c85:	xchg   ebx,eax
  408c86:	mov    eax,ds:0x463e0aa8
  408c8b:	adc    edx,DWORD PTR [edi-0x14b00cdd]
  408c91:	add    dh,BYTE PTR [esi+0x1bcd245b]
  408c97:	cmp    edi,ebp
  408c99:	std    
  408c9a:	or     DWORD PTR [ebp-0x41],0xb263b623
  408ca1:	sbb    DWORD PTR [eax],esp
  408ca3:	scas   eax,DWORD PTR es:[edi]
  408ca4:	nop
  408ca5:	fucomi st,st(6)
  408ca7:	pop    ebx
  408ca8:	inc    eax
  408ca9:	dec    esi
  408caa:	sub    dl,BYTE PTR [edi-0x5e3ab853]
  408cb0:	pop    ss
  408cb1:	jnp    0x408c91
  408cb3:	and    eax,0xfafcb739
  408cb8:	(bad)  
  408cb9:	adc    al,dl
  408cbb:	dec    edx
  408cbc:	add    DWORD PTR [eax-0x52],esi
  408cbf:	scas   eax,DWORD PTR es:[edi]
  408cc0:	(bad)
  408cc4:	nop
  408cc5:	cdq    
  408cc6:	sti    
  408cc7:	push   ds
  408cc8:	sub    DWORD PTR [edi+0xe],ecx
  408ccb:	ja     0x408d00
  408ccd:	imul   DWORD PTR [ebp+0x67fe64a7]
  408cd3:	sub    dl,BYTE PTR [edx-0x5fb6dcad]
  408cd9:	outs   dx,BYTE PTR ds:[esi]
  408cda:	mov    eax,ds:0x2e976d05
  408cdf:	test   al,0xb1
  408ce1:	in     eax,dx
  408ce2:	dec    eax
  408ce3:	jae    0x408c6d
  408ce5:	xchg   edx,eax
  408ce6:	and    DWORD PTR [edi],edi
  408ce8:	adc    eax,0xeba8eb77
  408ced:	and    eax,0x80b67d5f
  408cf2:	jno    0x408ca3
  408cf4:	icebp  
  408cf5:	push   ebp
  408cf6:	sti    
  408cf7:	ins    BYTE PTR es:[edi],dx
  408cf8:	sub    edi,esi
  408cfa:	dec    edx
  408cfb:	mov    edi,0x2728ee96
  408d00:	inc    ebx
  408d01:	loopne 0x408c86
  408d03:	lods   eax,DWORD PTR ds:[esi]
  408d04:	popf   
  408d05:	mov    bl,BYTE PTR [eax-0x2]
  408d08:	test   eax,0xdc802f6e
  408d0d:	sbb    eax,0x92b4c96a
  408d12:	cmp    ebx,DWORD PTR [esi+edi*4-0x3a6f161c]
  408d19:	jle    0x408d97
  408d1b:	out    0xd8,al
  408d1d:	dec    edi
  408d1e:	add    al,0xa9
  408d20:	(bad)  
  408d21:	jmp    0x408d0e
  408d23:	xchg   esi,eax
  408d24:	cmp    BYTE PTR [eax-0x14e14f59],0x9b
  408d2b:	popa   
  408d2c:	inc    edi
  408d2d:	adc    ah,bh
  408d2f:	adc    DWORD PTR [ebx+0x322c5c4e],esp
  408d35:	out    0xb7,eax
  408d37:	iret   
  408d38:	push   0x34b8cfb7
  408d3d:	shl    DWORD PTR [eax+esi*1-0x7e],cl
  408d41:	pop    ds
  408d42:	jb     0x408d34
  408d44:	or     eax,ebx
  408d46:	ins    BYTE PTR es:[edi],dx
  408d47:	mov    ebx,0x2966dc37
  408d4c:	mov    ecx,gs
  408d4e:	mov    bh,0x17
  408d50:	(bad)
  408d53:	cmp    al,0x6d
  408d55:	jmp    0x5a18:0xae62c93b
  408d5c:	arpl   dx,bx
  408d5e:	ret    0x34b8
  408d61:	out    0x71,eax
  408d63:	pop    es
  408d64:	jne    0x408d1a
  408d66:	push   0xc25a940a
  408d6b:	sbb    eax,0xb3d937b
  408d70:	xchg   ebx,eax
  408d71:	sub    cl,BYTE PTR [edi+esi*1-0x24]
  408d75:	inc    esp
  408d76:	call   FWORD PTR [ebx-0x73e38735]
  408d7c:	xchg   esi,eax
  408d7d:	add    dh,bl
  408d7f:	ret    0xf63f
  408d82:	jl     0x408d81
  408d84:	fnstcw WORD PTR [ecx-0x41]
  408d87:	sub    dl,BYTE PTR [edi+0x3f]
  408d8a:	mov    ecx,0x662d4bc0
  408d8f:	mov    dh,0x77
  408d91:	xchg   cl,bh
  408d93:	imul   ebx,DWORD PTR [ecx],0x5f75f53c
  408d99:	xor    DWORD PTR ds:[ecx+0x63],esp
  408d9d:	imul   edi,DWORD PTR [edx+0x6f],0xffffffbf
  408da1:	aam    0x26
  408da3:	aad    0x6e
  408da5:	pop    edi
  408da6:	and    eax,0xb914824
  408dab:	sahf   
  408dac:	mov    ah,0x6d
  408dae:	int3   
  408daf:	pop    edx
  408db0:	mov    edx,0xea47efe6
  408db5:	popf   
  408db6:	dec    ebx
  408db7:	jecxz  0x408da5
  408db9:	inc    cl
  408dbb:	int3   
  408dbc:	cmp    edx,DWORD PTR [ebp-0x4d]
  408dbf:	add    DWORD PTR [edi+edx*4-0x66fdf359],ecx
  408dc6:	aam    0x73
  408dc8:	mov    DWORD PTR [esp+eax*2-0xc1bdc2e],ebp
  408dcf:	cmp    ebp,DWORD PTR [ebx]
  408dd1:	push   ds
  408dd2:	mov    ecx,0x20c0dcb
  408dd7:	inc    ebx
  408dd8:	or     BYTE PTR [eax+esi*1],0x59
  408ddc:	pop    esi
  408ddd:	dec    esp
  408dde:	out    dx,al
  408ddf:	cmc    
  408de0:	ins    BYTE PTR es:[edi],dx
  408de1:	mov    ebx,0xa9900e23
  408de6:	jb     0x408e49
  408de8:	sub    ecx,0x27e679fe
  408dee:	out    0x3,al
  408df0:	or     dh,BYTE PTR [ebp-0x2860315f]
  408df6:	mov    bh,0x4c
  408df8:	mov    bh,0x4d
  408dfa:	inc    esp
  408dfb:	push   esi
  408dfc:	daa    
  408dfd:	scas   eax,DWORD PTR es:[edi]
  408dfe:	pushw  es
  408e00:	mov    WORD PTR [ecx],ss
  408e02:	imul   ebx,DWORD PTR [ecx+0x64],0xf789cf93
  408e09:	mov    cl,bh
  408e0b:	js     0x408e68
  408e0d:	mov    al,0xdb
  408e0f:	inc    esi
  408e10:	daa    
  408e11:	(bad)  
  408e12:	mov    esi,0xab45030e
  408e17:	pop    eax
  408e18:	or     DWORD PTR [edi],edi
  408e1a:	mov    esi,0x768f1dfd
  408e1f:	push   ss
  408e20:	fucomip st,st(5)
  408e22:	fucomip st,st(2)
  408e24:	loop   0x408de8
  408e26:	xchg   ebx,eax
  408e27:	shr    BYTE PTR [esi+0x7ecb2af5],0x93
  408e2e:	(bad)  
  408e2f:	out    0x8c,eax
  408e31:	mov    dh,0xaf
  408e33:	pop    esi
  408e34:	stos   BYTE PTR es:[edi],al
  408e35:	push   edx
  408e36:	(bad)  
  408e37:	repz mov dl,BYTE PTR [eax+0x50]
  408e3b:	jp     0x408eab
  408e3d:	xor    edx,ecx
  408e3f:	stos   DWORD PTR es:[edi],eax
  408e40:	aam    0x8e
  408e42:	adc    eax,esp
  408e44:	xchg   esi,eax
  408e45:	sub    bl,bl
  408e47:	ror    BYTE PTR [edi-0x2d63a287],1
  408e4d:	xchg   esi,eax
  408e4e:	mov    eax,0x87e9194a
  408e53:	fsub   DWORD PTR [ebx-0x18]
  408e56:	stc    
  408e57:	add    eax,0x76ac98b2
  408e5c:	xor    ah,BYTE PTR [edi]
  408e5e:	test   BYTE PTR [edx+0xa],dh
  408e61:	test   eax,0x4b18989d
  408e66:	add    DWORD PTR ds:[eax-0x7913abe9],ebx
  408e6d:	mov    ebp,0x4b576838
  408e72:	pop    ecx
  408e73:	pop    esp
  408e74:	sbb    al,dl
  408e76:	ret    0x3acd
  408e79:	jae    0x408e90
  408e7b:	xchg   edi,eax
  408e7c:	mov    ch,0xd
  408e7e:	mov    ds:0x8d792f7c,al
  408e83:	fisub  WORD PTR [esi+eiz*1]
  408e86:	fnstenv [ebp+0x3a]
  408e89:	mov    ds:0x276c02f5,eax
  408e8e:	(bad)  
  408e8f:	out    0x39,al
  408e91:	jbe    0x408ed2
  408e93:	fldpi  
  408e95:	jns    0x408ec6
  408e97:	fwait
  408e98:	dec    esp
  408e99:	push   ebp
  408e9a:	dec    edx
  408e9b:	xor    dh,BYTE PTR [esp+edi*4+0x2db9d262]
  408ea2:	xchg   edx,eax
  408ea3:	loopne 0x408ea1
  408ea5:	loopne 0x408f26
  408ea7:	add    ecx,edi
  408ea9:	mov    bh,0x92
  408eab:	mov    WORD PTR ds:0x3c9895db,?
  408eb1:	dec    edi
  408eb2:	cmp    edi,DWORD PTR [edx]
  408eb4:	or     esp,DWORD PTR [ebx-0x2737e183]
  408eba:	jp     0x408e7d
  408ebc:	out    dx,eax
  408ebd:	add    al,0x51
  408ebf:	push   es
  408ec0:	xchg   DWORD PTR [ebx+0x7248ff39],esp
  408ec6:	xor    ch,BYTE PTR [eax-0x52]
  408ec9:	scas   al,BYTE PTR es:[edi]
  408eca:	dec    ecx
  408ecb:	xor    edi,ebp
  408ecd:	xor    DWORD PTR [esi+0x1b3b1ed2],0x40
  408ed4:	dec    edx
  408ed5:	mov    edi,ebx
  408ed7:	pop    ebx
  408ed8:	mov    WORD PTR ds:[ebp+eax*2+0x683e6c18],?
  408ee0:	pop    edx
  408ee1:	(bad)  
  408ee3:	popa   
  408ee4:	and    esp,DWORD PTR [eax]
  408ee6:	in     eax,0xfd
  408ee8:	enter  0xa492,0x1
  408eec:	rcl    ebp,cl
  408eee:	jmp    0x36513c7d
  408ef3:	inc    edx
  408ef4:	inc    ebx
  408ef5:	mov    eax,ds:0x7fd44a0
  408efa:	xchg   edx,eax
  408efb:	lahf   
  408efc:	ror    DWORD PTR [edi-0x6cf4e374],1
  408f02:	fwait
  408f03:	inc    edi
  408f04:	xlat   BYTE PTR ds:[ebx]
  408f05:	(bad)  
  408f06:	aam    0x7e
  408f08:	lea    ebx,[ecx+esi*4]
  408f0b:	(bad)
  408f0f:	push   cs
  408f10:	arpl   bx,bp
  408f12:	test   BYTE PTR [esi],ah
  408f14:	adc    BYTE PTR [esi],bl
  408f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f17:	mov    eax,ds:0xd64bc3c4
  408f1c:	mov    ds:0xf52a9b0,eax
  408f21:	les    ecx,FWORD PTR [edi+esi*4-0x5741b3e4]
  408f28:	icebp  
  408f29:	shr    DWORD PTR [ecx],cl
  408f2b:	int    0xb7
  408f2d:	ss sbb bl,dl
  408f30:	xchg   ecx,eax
  408f31:	xor    dh,al
  408f33:	or     DWORD PTR [eax+0x6a699d16],ebp
  408f39:	xchg   DWORD PTR [edi+0x39],ebx
  408f3c:	sbb    al,0x4b
  408f3e:	(bad)  
  408f3f:	xchg   esi,eax
  408f40:	jb     0x408ef4
  408f42:	jge    0x408f19
  408f44:	xchg   esp,eax
  408f45:	les    esi,FWORD PTR [ebx*4+0x5f9b8249]
  408f4c:	sbb    esi,DWORD PTR [ecx+0x78567878]
  408f52:	(bad)  
  408f53:	pop    edx
  408f54:	test   al,0x89
  408f56:	jmp    0x5b06:0xc01565f2
  408f5d:	xchg   esp,esi
  408f5f:	adc    al,BYTE PTR [ebp+eiz*8+0x6149bd6d]
  408f66:	fcom   DWORD PTR [eax+0x7e]
  408f69:	aam    0x2b
  408f6b:	xchg   edi,eax
  408f6c:	fwait
  408f6d:	push   ss
  408f6e:	mov    ?,WORD PTR [esi-0x74847ecf]
  408f74:	pop    es
  408f75:	(bad)  
  408f77:	xlat   BYTE PTR ds:[ebx]
  408f78:	shl    DWORD PTR [ebx+edi*2-0x23da18f6],1
  408f7f:	jp     0x408f6c
  408f81:	lea    edx,[ebx-0xa83f96]
  408f87:	rol    BYTE PTR ds:0xcca73538,0x4
  408f8e:	js     0x408f61
  408f90:	loop   0x408f97
  408f92:	outs   dx,BYTE PTR ds:[esi]
  408f93:	add    cl,BYTE PTR [edi+edx*1+0x23]
  408f97:	cli    
  408f98:	pop    esi
  408f99:	adc    BYTE PTR [eax-0x26],bh
  408f9c:	out    dx,al
  408f9d:	add    ebp,ebx
  408f9f:	outs   dx,BYTE PTR ds:[esi]
  408fa0:	inc    ebx
  408fa1:	add    DWORD PTR [esi],ebp
  408fa3:	scas   al,BYTE PTR es:[edi]
  408fa4:	pop    ebx
  408fa5:	jb     0x408f90
  408fa7:	and    DWORD PTR [edi+ecx*8-0x34],edi
  408fab:	sub    eax,ebp
  408fad:	out    0x1e,al
  408faf:	nop
  408fb0:	rcl    bh,1
  408fb2:	hlt    
  408fb3:	xor    DWORD PTR [esi+0x791b8c26],esi
  408fb9:	out    0xb4,al
  408fbb:	xor    ecx,DWORD PTR [eax+edi*2-0x4849a2c9]
  408fc2:	mov    bl,0x14
  408fc4:	inc    eax
  408fc5:	mov    eax,ds:0xee25048d
  408fca:	add    ebp,ebx
  408fcc:	pushf  
  408fcd:	sub    ebp,ecx
  408fcf:	push   esi
  408fd0:	adc    ch,BYTE PTR [ebx-0x6b6f2bc6]
  408fd6:	add    al,0xc8
  408fd8:	jle    0x409018
  408fda:	xor    DWORD PTR [ecx+0xedd9c6b],0xb657534f
  408fe4:	jge    0x408fa1
  408fe6:	shr    DWORD PTR [ebx+0x556ec223],1
  408fec:	push   cs
  408fed:	stos   BYTE PTR es:[edi],al
  408fee:	in     eax,0x9c
  408ff0:	mov    dl,0xbd
  408ff2:	add    esp,DWORD PTR [esi-0x5c3fe7bc]
  408ff8:	adc    BYTE PTR [eax],dh
  408ffa:	stos   BYTE PTR es:[edi],al
  408ffb:	rcr    dl,cl
  408ffd:	push   ebx
  408ffe:	hlt    
  408fff:	and    al,0x8c
  409001:	or     esp,esp
  409003:	xchg   ecx,eax
  409004:	call   0xcc913bb6
  409009:	add    BYTE PTR [ebp+0x18ce888c],0xa0
  409010:	out    dx,eax
  409011:	fdiv   QWORD PTR [edx+0x155ac99d]
  409017:	enter  0x1499,0x86
  40901b:	js     0x409076
  40901d:	mov    eax,ds:0x6d9383ee
  409022:	mov    BYTE PTR [eax+0x3b],0x74
  409026:	aam    0x36
  409028:	loopne 0x408fde
  40902a:	sar    BYTE PTR [edx-0x2e],1
  40902d:	retf   0x56d0
  409030:	push   ebp
  409031:	out    0x2b,al
  409033:	pop    ebp
  409034:	mov    eax,ds:0x731608b0
  409039:	das    
  40903a:	push   0x291f419b
  40903f:	cli    
  409040:	js     0x409090
  409042:	hlt    
  409043:	mov    al,0x13
  409045:	jmp    0x3f7d:0x1f2eddc2
  40904c:	adc    ah,BYTE PTR [esi-0x64]
  40904f:	psubb  mm6,QWORD PTR [esi+0x2e9ba910]
  409056:	dec    ecx
  409057:	addr16 xchg edx,eax
  409059:	cdq    
  40905a:	xchg   ebx,eax
  40905b:	adc    bh,cl
  40905d:	adc    ah,bl
  40905f:	push   esi
  409060:	add    DWORD PTR [ebp-0x68a42a0],edx
  409066:	mov    ds:0xfc193086,eax
  40906b:	adc    dh,ah
  40906d:	in     al,dx
  40906e:	int3   
  40906f:	xchg   BYTE PTR [esp+ecx*2],al
  409072:	in     eax,dx
  409073:	jecxz  0x40903a
  409075:	retf   0x2696
  409078:	mov    edx,0xcacaea57
  40907d:	aas    
  40907e:	fs test al,0x68
  409081:	es pop esp
  409083:	add    ebp,DWORD PTR [eax-0xf968850]
  409089:	push   edx
  40908a:	sub    eax,0x57ac6778
  40908f:	dec    edi
  409090:	outs   dx,BYTE PTR ds:[esi]
  409091:	(bad)  
  409092:	mov    esi,0x11b2e910
  409097:	enter  0x81a,0x5e
  40909b:	bnd jns 0x409062
  40909e:	and    DWORD PTR [ecx+0x6030fb46],ecx
  4090a4:	add    DWORD PTR [ebx+ebp*2],ecx
  4090a7:	ins    DWORD PTR es:[edi],dx
  4090a8:	xchg   edi,eax
  4090a9:	sbb    DWORD PTR [ecx],eax
  4090ab:	mov    BYTE PTR [esi],bh
  4090ad:	ins    BYTE PTR es:[edi],dx
  4090ae:	or     DWORD PTR [ebp-0x4d925b9b],0x2957347d
  4090b8:	retf   
  4090b9:	push   es
  4090ba:	jp     0x4090ab
  4090bc:	jae    0x4090bd
  4090be:	dec    ebx
  4090bf:	(bad)  
  4090c0:	fbld   TBYTE PTR [ecx]
  4090c2:	xchg   ecx,eax
  4090c3:	sahf   
  4090c4:	push   ss
  4090c5:	fimul  DWORD PTR [eax-0xd703168]
  4090cb:	es mov bl,ch
  4090ce:	dec    esi
  4090cf:	inc    edx
  4090d0:	push   edx
  4090d1:	jg     0x40906a
  4090d3:	icebp  
  4090d4:	mov    al,ds:0x9c77df03
  4090d9:	add    ch,BYTE PTR [esp+ebp*1+0x358dced7]
  4090e0:	cmp    esi,DWORD PTR [ebx+0x5b]
  4090e3:	jns    0x4090e6
  4090e5:	mov    ah,0x8
  4090e7:	xchg   edx,eax
  4090e8:	in     eax,dx
  4090e9:	push   0xbbd0086e
  4090ee:	and    al,0xfd
  4090f0:	lods   eax,DWORD PTR ds:[esi]
  4090f1:	scas   al,BYTE PTR es:[edi]
  4090f2:	call   0xe3a10c2a
  4090f7:	xor    ecx,DWORD PTR [ebx]
  4090f9:	mov    edx,0x4784f75b
  4090fe:	mov    ds:0xe3e735a9,al
  409103:	mov    dh,0x18
  409105:	adc    BYTE PTR [ebx+0x4f0c61ce],ch
  40910b:	inc    ebx
  40910c:	repnz dec esp
  40910e:	push   esi
  40910f:	push   0xffffff84
  409111:	sahf   
  409112:	xor    eax,0xcbe64391
  409117:	ss pop eax
  409119:	loop   0x40911e
  40911b:	in     al,dx
  40911c:	xchg   ebp,eax
  40911d:	(bad)  
  40911e:	mov    ch,0xdf
  409120:	cmp    esi,DWORD PTR [edx]
  409122:	jg     0x40917f
  409124:	lahf   
  409125:	iret   
  409126:	or     DWORD PTR [edi+0x3e7e7477],eax
  40912c:	shr    DWORD PTR [esi],1
  40912e:	lea    ebp,[eax]
  409130:	push   esi
  409131:	loopne 0x409195
  409133:	mov    ds:0xecdcb317,eax
  409138:	aam    0x48
  40913a:	dec    edi
  40913b:	add    BYTE PTR [edx+edx*1+0x51],ah
  40913f:	(bad)  
  409140:	jle    0x409155
  409142:	pop    edx
  409143:	jmp    DWORD PTR [esi]
  409145:	jns    0x4090f5
  409147:	(bad)  
  409148:	pop    edx
  409149:	xor    ecx,ebp
  40914b:	(bad)  
  40914c:	imul   ebp,DWORD PTR [edi],0x4b
  40914f:	addr16 mov bh,bl
  409152:	sbb    al,0x69
  409154:	test   al,0x1d
  409156:	loopne 0x409172
  409158:	into   
  409159:	iret   
  40915a:	loope  0x40913f
  40915c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40915d:	iret   
  40915e:	cli    
  40915f:	mov    bh,0x27
  409161:	hlt    
  409162:	loop   0x40912a
  409164:	mov    eax,0x1b3c58c9
  409169:	inc    esp
  40916a:	shr    DWORD PTR [esi+esi*8-0x41d8c750],0xeb
  409172:	sub    BYTE PTR [ebp-0xd],dh
  409175:	loopne 0x40912a
  409177:	mov    dh,0x3
  409179:	pop    edi
  40917a:	fmul   DWORD PTR [eax]
  40917c:	popf   
  40917d:	cmp    BYTE PTR [ecx-0x39],bh
  409180:	rol    DWORD PTR [ebx-0x4a46f7d8],0x1d
  409187:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409188:	adc    bh,BYTE PTR [esi]
  40918a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40918b:	mov    cl,0xb7
  40918d:	dec    ebp
  40918e:	out    dx,al
  40918f:	add    al,0xe4
  409191:	inc    ebp
  409192:	mov    BYTE PTR [edi],cl
  409194:	adc    BYTE PTR [eax],ch
  409196:	popa   
  409197:	rol    ch,cl
  409199:	loop   0x40914f
  40919b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40919c:	pop    es
  40919d:	xchg   ecx,eax
  40919e:	mov    WORD PTR [eax-0x64],ss
  4091a1:	into   
  4091a2:	movhps xmm4,QWORD PTR [edx+0x11]
  4091a6:	sub    al,0x74
  4091a8:	call   0x221aa985
  4091ad:	rcl    DWORD PTR [eax+edx*4-0x49],0x89
  4091b2:	jbe    0x4091fc
  4091b4:	inc    esi
  4091b5:	pushf  
  4091b6:	push   cs
  4091b7:	(bad)  
  4091b8:	fst    st(6)
  4091ba:	cmc    
  4091bb:	lock inc ecx
  4091bd:	or     BYTE PTR [esi],0xc8
  4091c0:	loope  0x40923e
  4091c2:	aam    0x40
  4091c4:	or     al,0xb5
  4091c6:	mov    edi,0x34d4bf52
  4091cb:	or     BYTE PTR [ecx+0x3e],bl
  4091ce:	sbb    eax,0x42410291
  4091d3:	mov    al,BYTE PTR [ebx]
  4091d5:	stos   BYTE PTR es:[edi],al
  4091d6:	jmp    0xbfd1810
  4091db:	pusha  
  4091dc:	pop    ebp
  4091dd:	in     eax,0xdb
  4091df:	cs shl ebx,1
  4091e2:	(bad)  
  4091e3:	and    al,0xf3
  4091e5:	mov    ds:0x4c99b6fb,al
  4091ea:	and    eax,0xc83af7d4
  4091ef:	xlat   BYTE PTR ds:[ebx]
  4091f0:	pop    ebx
  4091f1:	cld    
  4091f2:	nop
  4091f3:	aaa    
  4091f4:	popa   
  4091f5:	test   BYTE PTR [edi+0x2f],bl
  4091f8:	jb     0x409188
  4091fa:	inc    ecx
  4091fb:	xchg   ecx,eax
  4091fc:	outs   dx,BYTE PTR ds:[esi]
  4091fd:	out    0xa0,al
  4091ff:	mov    eax,0x90fe9069
  409204:	push   edx
  409205:	(bad)  
  409207:	xchg   edi,eax
  409208:	jp     0x4091f8
  40920a:	lahf   
  40920b:	fnstsw WORD PTR [esi+0x2c]
  40920e:	xchg   esp,eax
  40920f:	push   ebx
  409210:	popf   
  409211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409212:	gs jge 0x40926e
  409215:	fld    DWORD PTR [ebp-0x7d]
  409218:	jne    0x40928c
  40921a:	ret    
  40921b:	inc    esi
  40921c:	mov    edx,0x9d3b980f
  409221:	and    BYTE PTR [eax],0x9b
  409224:	mov    ebx,0xf1660a01
  409229:	mov    esp,0x91623cc5
  40922e:	imul   esp,ebx,0xc7657aca
  409234:	stc    
  409235:	push   ebp
  409236:	dec    ecx
  409237:	imul   ebp,DWORD PTR [eax-0x272c4102],0xffffffb6
  40923e:	dec    ecx
  40923f:	out    dx,eax
  409240:	fidivr WORD PTR [edx-0x4f]
  409243:	loope  0x409280
  409245:	mov    eax,0x5d062bfc
  40924a:	mov    ds:0xb5c5d1dc,eax
  40924f:	dec    ebx
  409250:	nop
  409251:	sub    dh,bh
  409253:	dec    ebx
  409254:	push   esp
  409255:	sbb    DWORD PTR [ecx+ebx*8+0x528fd7f5],eax
  40925c:	dec    eax
  40925d:	pop    esp
  40925e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40925f:	les    ebx,FWORD PTR [ebx+0x6dd79944]
  409265:	inc    edi
  409266:	test   eax,0x91b66c7
  40926b:	mov    bl,0x1d
  40926d:	sub    eax,0xf8e5dc7d
  409272:	cwde   
  409273:	push   0x8f567427
  409278:	gs retf 
  40927a:	inc    ebp
  40927b:	adc    BYTE PTR [esi+0x3d],dh
  40927e:	rol    BYTE PTR [ecx-0x46636ff7],0x3a
  409285:	repnz lods al,BYTE PTR ds:[esi]
  409287:	out    dx,eax
  409288:	mov    ah,0x7b
  40928a:	fdivr  st(2),st
  40928c:	ins    DWORD PTR es:[edi],dx
  40928d:	fwait
  40928e:	jae    0x409285
  409290:	mov    dl,0x12
  409292:	jo     0x409226
  409294:	cld    
  409295:	icebp  
  409296:	pop    esi
  409297:	mov    esi,0x9544f1d7
  40929c:	cmp    edx,DWORD PTR [ecx+0x20]
  40929f:	and    bh,al
  4092a1:	cmp    edi,DWORD PTR [eax]
  4092a3:	cmp    DWORD PTR [ecx],edx
  4092a5:	xchg   esi,eax
  4092a6:	adc    BYTE PTR [ebp+0x6d],bl
  4092a9:	and    ch,ah
  4092ab:	mov    ah,0x76
  4092ad:	and    eax,0x76228cd0
  4092b2:	sub    DWORD PTR [eax+0xcd9444b],ebp
  4092b8:	push   edi
  4092b9:	retf   
  4092ba:	out    0xba,al
  4092bc:	pop    ebp
  4092bd:	ds dec esi
  4092bf:	jmp    0x87d:0x85a8cbeb
  4092c6:	(bad)  
  4092c7:	push   ebx
  4092c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092c9:	imul   ebp,DWORD PTR [esi+0x18],0x84f9d28c
  4092d0:	sub    DWORD PTR [ebx],ebp
  4092d2:	dec    eax
  4092d3:	push   ecx
  4092d4:	push   0x79df73e2
  4092d9:	popf   
  4092da:	mov    ebx,0xc45e3407
  4092df:	(bad)  
  4092e1:	cmp    al,BYTE PTR cs:[ebx-0x3f870556]
  4092e8:	mov    eax,ebp
  4092ea:	xchg   ebx,eax
  4092eb:	jns    0x40931f
  4092ed:	data16 sahf 
  4092ef:	mov    dl,0x41
  4092f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092f2:	fdivr  st(7),st
  4092f4:	imul   eax,DWORD PTR [ecx],0x40
  4092f7:	xor    BYTE PTR [ecx],0x4f
  4092fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092fb:	or     esi,ebp
  4092fd:	mov    edx,0x6c7f7ed5
  409302:	aam    0xf5
  409304:	imul   DWORD PTR ds:0xd0766bd5
  40930a:	and    al,0x99
  40930c:	test   ebx,eax
  40930e:	sbb    BYTE PTR [esi+edx*4-0x51],al
  409312:	jp     0x409307
  409314:	cmp    cl,bl
  409316:	fisub  DWORD PTR [esi]
  409318:	cmp    al,0x43
  40931a:	fiadd  WORD PTR [ebx+0x64]
  40931d:	lea    edx,[edi+0x8]
  409320:	aas    
  409321:	jge    0x40938f
  409323:	loope  0x40936b
  409325:	add    al,0x5e
  409327:	ss jo  0x4092f7
  40932a:	mov    esp,0xa422ded0
  40932f:	add    BYTE PTR [edx+0x2f],dh
  409332:	sub    al,0x6d
  409334:	into   
  409335:	pop    ebx
  409336:	push   ebp
  409337:	xchg   esi,eax
  409338:	pop    ecx
  409339:	jmp    DWORD PTR [esi+0x4a174e53]
  40933f:	iret   
  409340:	ds pop es
  409342:	adc    DWORD PTR [esi],ebx
  409344:	cmp    al,0x64
  409346:	inc    esi
  409347:	xor    DWORD PTR ds:0x5e05e67b,eax
  40934d:	inc    esp
  40934e:	mov    BYTE PTR [ebp-0x58374162],cl
  409354:	push   eax
  409355:	scas   eax,DWORD PTR es:[edi]
  409356:	sbb    al,0xbd
  409358:	imul   ebp,DWORD PTR [ebp+0x8d1da10],0xffffff91
  40935f:	in     al,dx
  409360:	in     al,0x35
  409362:	jp     0x40937b
  409364:	jns    0x4093d1
  409366:	push   esp
  409367:	mov    bl,0xf
  409369:	fidivr DWORD PTR [esi-0x584f8918]
  40936f:	jle    0x409324
  409371:	les    esp,FWORD PTR [ebx-0x7f]
  409374:	mov    edx,0xea02301e
  409379:	and    edi,eax
  40937b:	add    eax,0x9c8bee83
  409380:	push   ebp
  409381:	fidivr WORD PTR [edx+edi*1+0x5d71190e]
  409388:	xchg   BYTE PTR [eax],bh
  40938a:	ss push eax
  40938c:	imul   esi,eax,0xffffffc7
  40938f:	neg    cl
  409391:	jbe    0x409324
  409393:	add    BYTE PTR [ebx+0x5513ee16],dl
  409399:	jecxz  0x409390
  40939b:	popa   
  40939c:	std    
  40939d:	mov    ecx,ecx
  40939f:	adc    al,0xa4
  4093a1:	stc    
  4093a2:	lock sbb al,0x3e
  4093a5:	inc    ecx
  4093a6:	add    eax,0xc0a57771
  4093ab:	repnz add edx,ebp
  4093ae:	pop    ss
  4093af:	and    DWORD PTR [ecx-0x1c],eax
  4093b2:	popa   
  4093b3:	push   edx
  4093b4:	jl     0x4093d6
  4093b6:	mov    bl,cl
  4093b8:	pop    di
  4093ba:	lods   eax,DWORD PTR ds:[esi]
  4093bb:	fwait
  4093bc:	ret    0x9d46
  4093bf:	sbb    BYTE PTR [eax-0x1],ch
  4093c2:	out    0x97,eax
  4093c4:	adc    BYTE PTR [edx],dl
  4093c6:	test   ecx,0x222158a5
  4093cc:	stc    
  4093cd:	mov    dh,0x96
  4093cf:	xchg   esi,eax
  4093d0:	fisttp DWORD PTR [ecx+0x25]
  4093d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093d4:	in     al,0x9b
  4093d6:	ficomp DWORD PTR [edi]
  4093d8:	iret   
  4093d9:	mov    edi,0xa909b117
  4093de:	std    
  4093df:	lock int 0x5f
  4093e2:	test   DWORD PTR [ecx],ebx
  4093e4:	nop    esp
  4093e7:	mov    dh,0x5
  4093e9:	mov    esp,0x55c0dc60
  4093ee:	into   
  4093ef:	sbb    DWORD PTR [esi-0x5f],0x7b4e4a0c
  4093f6:	int    0xb0
  4093f8:	stos   DWORD PTR es:[edi],eax
  4093f9:	and    dl,BYTE PTR [ebp-0x43c068fc]
  4093ff:	pushf  
  409400:	pop    edi
  409401:	test   eax,0xb62c4397
  409406:	jecxz  0x409455
  409408:	adc    bh,BYTE PTR [edx+0x1c]
  40940b:	fcomp  DWORD PTR [ebx+0x13a9a7b7]
  409411:	fcomp  DWORD PTR [eax]
  409413:	mov    eax,0xbe55ff6d
  409418:	out    0x72,al
  40941a:	stos   BYTE PTR es:[edi],al
  40941b:	and    BYTE PTR [esi],0xf3
  40941e:	pusha  
  40941f:	push   esp
  409420:	retf   
  409421:	pop    ecx
  409422:	pop    eax
  409423:	jb     0x4093f0
  409425:	mov    al,0xb4
  409427:	out    0xcf,eax
  409429:	xor    eax,0x93289cd5
  40942e:	and    BYTE PTR [edx+0x2e],al
  409431:	sub    eax,0x19961259
  409436:	aam    0xa1
  409438:	in     eax,dx
  409439:	ret    
  40943a:	cmp    eax,DWORD PTR [ecx+0x3b2c29a0]
  409440:	mov    cs,ecx
  409442:	cwde   
  409443:	std    
  409444:	lods   eax,DWORD PTR ds:[esi]
  409445:	push   ss
  409446:	mov    WORD PTR [edx+0x79],cs
  409449:	nop
  40944a:	fnsave [eax+0xa]
  40944d:	stc    
  40944e:	aam    0x5
  409450:	jecxz  0x40947f
  409452:	mov    bl,0xc2
  409454:	mov    eax,ds:0x26e18f3d
  409459:	cmp    al,0xaf
  40945b:	jecxz  0x409406
  40945d:	ret    0xf5c1
  409460:	scas   eax,DWORD PTR es:[edi]
  409461:	pop    ss
  409462:	mov    ecx,0x5d6fe3e
  409467:	in     al,0xe7
  409469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40946a:	pop    edi
  40946b:	(bad)  
  40946c:	in     al,dx
  40946d:	inc    esi
  40946e:	out    0xaa,al
  409470:	dec    eax
  409471:	repz dec ecx
  409473:	pop    ebx
  409474:	or     cl,al
  409476:	mov    ebx,0x193d6474
  40947b:	int3   
  40947c:	or     esi,DWORD PTR [edi+eax*2-0x2ce5c467]
  409483:	mov    ebx,0x5865f703
  409488:	push   ss
  409489:	xchg   DWORD PTR [edx+0x5d],edx
  40948c:	xchg   ebx,eax
  40948d:	cdq    
  40948e:	dec    ecx
  40948f:	mov    DWORD PTR [ecx+eiz*2+0x0],esi
  409493:	mov    al,ds:0x570e4c9e
  409498:	(bad)  
  409499:	sbb    al,0xf2
  40949b:	mov    cl,BYTE PTR ss:[edi+edi*8-0x1b]
  4094a0:	shl    al,cl
  4094a2:	adc    BYTE PTR [ecx-0x2cf59f4d],cl
  4094a8:	sti    
  4094a9:	ins    BYTE PTR es:[edi],dx
  4094aa:	test   al,0x8d
  4094ac:	mov    dl,0x80
  4094af:	and    ebp,DWORD PTR [eax-0x1fc1ec47]
  4094b5:	cli    
  4094b6:	in     al,dx
  4094b7:	xlat   BYTE PTR ds:[ebx]
  4094b8:	mov    dl,0x69
  4094ba:	test   al,0xb
  4094bc:	jge    0x409534
  4094be:	cmp    al,0x64
  4094c0:	mov    eax,0x7f26cd18
  4094c5:	add    BYTE PTR [ebp-0x41],cl
  4094c8:	gs mov ebx,0x3981d367
  4094ce:	pop    esp
  4094cf:	lahf   
  4094d0:	and    BYTE PTR [eax],0xa
  4094d3:	sub    ecx,edi
  4094d5:	aad    0x40
  4094d7:	jnp    0x409475
  4094d9:	cmp    al,0xc2
  4094db:	xchg   edx,eax
  4094dc:	outs   dx,BYTE PTR ds:[esi]
  4094dd:	mov    WORD PTR [ecx],ds
  4094df:	xor    bh,0xfb
  4094e2:	dec    esp
  4094e3:	(bad)  
  4094e4:	std    
  4094e5:	imul   BYTE PTR [esp+ebp*2-0x391fbe9a]
  4094ec:	dec    edx
  4094ed:	std    
  4094ee:	loop   0x4094b0
  4094f0:	ss icebp 
  4094f2:	jecxz  0x409492
  4094f4:	xchg   ebx,eax
  4094f5:	mov    BYTE PTR [edi-0x14],dh
  4094f8:	mov    edi,0x47af16e3
  4094fd:	fadd   DWORD PTR [eax]
  4094ff:	sbb    al,0xe5
  409501:	sti    
  409502:	or     dl,BYTE PTR [ecx-0x42]
  409505:	mov    ebp,0x3bc62e4e
  40950a:	sub    eax,0xc7ff183e
  40950f:	ret    
  409510:	mov    bl,0xf7
  409512:	aas    
  409513:	(bad)  
  409514:	out    dx,eax
  409515:	inc    esi
  409516:	mov    ebp,0x7ab16f18
  40951b:	enter  0xefa4,0x3f
  40951f:	iret   
  409520:	test   BYTE PTR [bx+di-0x19],bl
  409524:	stos   BYTE PTR es:[edi],al
  409525:	sub    BYTE PTR [ebp+ebx*8-0x7a771ddf],0x8c
  40952d:	retf   
  40952e:	adc    al,0xf4
  409530:	mov    edx,0x97aed05b
  409535:	or     esp,DWORD PTR gs:[eax]
  409538:	inc    edi
  409539:	or     BYTE PTR [eax-0x14df22e2],0x50
  409540:	mov    bh,0x40
  409542:	add    esi,DWORD PTR [esi]
  409544:	ins    BYTE PTR es:[edi],dx
  409545:	or     al,0xba
  409547:	mov    bl,0x78
  409549:	cmp    BYTE PTR [ecx-0xf],al
  40954c:	xchg   BYTE PTR [eax+0x779c5d3f],dh
  409552:	std    
  409553:	inc    edi
  409554:	mov    ds:0x69aea654,eax
  409559:	test   eax,0x172e40c9
  40955e:	(bad)  
  40955f:	imul   eax,DWORD PTR [edx],0xffffff81
  409562:	ins    BYTE PTR es:[edi],dx
  409563:	imul   ecx,ebx,0xffffff8d
  409566:	js     0x40958c
  409568:	mov    eax,0x6cc0c291
  40956d:	mov    al,0x40
  40956f:	mov    BYTE PTR [edi+0x7aa7eb92],dh
  409575:	in     eax,0xa8
  409577:	mov    al,0x3
  409579:	imul   edi,DWORD PTR [eax],0xfaa11994
  40957f:	mov    esp,DWORD PTR [esi-0x37]
  409582:	mov    dl,BYTE PTR [edi+0x1e97ce66]
  409588:	scas   eax,DWORD PTR es:[edi]
  409589:	sub    BYTE PTR [edx+0x2f7d9fa7],dl
  40958f:	retf   
  409590:	or     eax,0xecdbb536
  409595:	or     DWORD PTR [edx],esp
  409597:	mov    eax,0x6ef6923a
  40959c:	lahf   
  40959d:	push   edx
  40959e:	lock dec edi
  4095a0:	or     ebp,DWORD PTR [edi+0x64]
  4095a3:	push   0x30
  4095a5:	xchg   edx,eax
  4095a6:	in     eax,dx
  4095a7:	mov    ebx,0xb9093b8b
  4095ac:	sahf   
  4095ad:	fistp  DWORD PTR [ecx]
  4095af:	cs int3 
  4095b1:	fiadd  WORD PTR [ebx+0x7f]
  4095b4:	lahf   
  4095b5:	into   
  4095b6:	cmp    eax,0x6f
  4095b9:	or     BYTE PTR [ebx],ch
  4095bb:	xlat   BYTE PTR ds:[ebx]
  4095bc:	inc    esi
  4095bd:	pop    ecx
  4095be:	pusha  
  4095bf:	push   esi
  4095c0:	outs   dx,BYTE PTR ds:[esi]
  4095c1:	arpl   WORD PTR [eax+0x11f3c22e],dx
  4095c7:	and    al,0x83
  4095c9:	jns    0x409579
  4095cb:	pushf  
  4095cc:	mov    esp,0x29d66393
  4095d1:	sbb    BYTE PTR [edi-0x5c],bh
  4095d4:	call   0x9709:0xa916017d
  4095db:	and    ebp,edi
  4095dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095de:	xchg   BYTE PTR [ebx-0x55],bh
  4095e1:	pmaxub mm1,QWORD PTR ds:0xcdb5d452
  4095e8:	inc    edx
  4095e9:	ss dec ebp
  4095eb:	stos   DWORD PTR es:[edi],eax
  4095ec:	dec    ebp
  4095ed:	add    BYTE PTR [edi],bl
  4095ef:	dec    edx
  4095f0:	mov    eax,ds:0xa80f6a4f
  4095f5:	lahf   
  4095f6:	call   0x9790:0x9f7616ee
  4095fd:	ja     0x4095d4
  4095ff:	in     eax,0xa3
  409601:	call   0x832cf1ab
  409606:	sub    al,0xd1
  409608:	arpl   bp,bx
  40960a:	into   
  40960b:	inc    edx
  40960c:	and    ecx,DWORD PTR [ebx+eax*4]
  40960f:	pop    ds
  409610:	jno    0x409640
  409612:	sbb    dl,0x1
  409615:	pop    edx
  409616:	mov    edx,0x2cfb0b3e
  40961b:	pop    eax
  40961c:	in     al,dx
  40961d:	add    edi,edi
  40961f:	lsl    sp,WORD PTR [ecx+0x1d]
  409624:	int    0xe2
  409626:	sbb    ch,ch
  409628:	adc    bh,BYTE PTR [ebp+0x2b8bc972]
  40962e:	inc    ecx
  40962f:	stc    
  409630:	mov    ds:0xbccfaa54,eax
  409635:	rcl    eax,1
  409637:	mov    al,0xbc
  409639:	mov    esp,0x2b58fe75
  40963e:	push   edi
  40963f:	add    ebp,ebx
  409641:	dec    eax
  409642:	loop   0x409674
  409644:	push   0x9a3de815
  409649:	pop    edx
  40964a:	mov    dh,0x98
  40964c:	sub    al,0xbc
  40964e:	in     al,dx
  40964f:	or     DWORD PTR [eax+0x6f],edx
  409652:	pop    ss
  409653:	pop    es
  409654:	aas    
  409655:	push   edx
  409656:	adc    eax,0x6061b57d
  40965b:	call   0x9188:0xf740d3b4
  409662:	mul    BYTE PTR [ebx+0x6a]
  409665:	xor    cl,BYTE PTR [ecx+0x41]
  409668:	jo     0x4096e8
  40966a:	or     ch,BYTE PTR [esi]
  40966c:	or     al,0x11
  40966e:	test   BYTE PTR [esi-0x25ecfebb],ch
  409674:	adc    bh,dl
  409676:	xor    ebp,DWORD PTR [ecx-0x73801eb0]
  40967c:	scas   eax,DWORD PTR es:[edi]
  40967d:	push   cs
  40967e:	int    0xc1
  409680:	dec    edx
  409681:	jmp    0x409624
  409683:	fwait
  409684:	add    esi,DWORD PTR [edx-0x8e80409]
  40968a:	inc    esp
  40968b:	or     edx,DWORD PTR [ebx]
  40968d:	fs inc edi
  40968f:	scas   eax,DWORD PTR es:[edi]
  409690:	loope  0x40963a
  409692:	pop    edx
  409693:	(bad)  
  409694:	rcl    BYTE PTR [esi],1
  409696:	xchg   ebx,eax
  409697:	or     dh,al
  409699:	pop    eax
  40969a:	pop    es
  40969b:	jb     0x4096a1
  40969d:	out    0x35,eax
  40969f:	jae    0x4096ff
  4096a1:	sha256msg1 xmm6,XMMWORD PTR ds:0x5a4632bf
  4096a9:	mov    ebp,0xd229eba7
  4096ae:	inc    ebx
  4096af:	cmc    
  4096b0:	clc    
  4096b1:	pop    ecx
  4096b2:	pop    edx
  4096b3:	sub    eax,0x841c2b14
  4096b8:	mov    ebp,0xbe377bf5
  4096bd:	mov    eax,0x601cf421
  4096c2:	xor    dh,0xf2
  4096c5:	dec    ebp
  4096c6:	push   es
  4096c7:	or     DWORD PTR gs:[edx+0x4e],eax
  4096cb:	push   ds
  4096cc:	ja     0xb67678bf
  4096d2:	or     ah,BYTE PTR [esi]
  4096d4:	mov    edx,0x2598bea8
  4096d9:	xor    DWORD PTR [ebx+0x7c3fb1ad],esp
  4096df:	cli    
  4096e0:	xlat   BYTE PTR ds:[ebx]
  4096e1:	ret    0x66f9
  4096e4:	dec    edi
  4096e5:	xchg   ebp,eax
  4096e6:	pusha  
  4096e7:	ret    0x16a7
  4096ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096eb:	fmul   QWORD PTR [edx+ebp*2]
  4096ee:	ror    cl,1
  4096f0:	mov    ds:0x65eb3f72,al
  4096f5:	lods   al,BYTE PTR ds:[esi]
  4096f6:	rcr    BYTE PTR [edx-0x1dd54ce5],0xdc
  4096fd:	xor    al,0xea
  4096ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409700:	ins    DWORD PTR es:[edi],dx
  409701:	mov    eax,ds:0xe88049d6
  409706:	sar    BYTE PTR [edi+eiz*4-0xe],1
  40970a:	dec    edi
  40970b:	pop    edx
  40970c:	jae    0x409779
  40970e:	mov    dl,0x68
  409710:	sub    BYTE PTR [esi-0x19],dl
  409713:	push   cs
  409714:	sahf   
  409715:	in     eax,dx
  409716:	test   BYTE PTR [ecx+0x23d0e1d0],ch
  40971c:	dec    edx
  40971d:	imul   ebx,DWORD PTR [edi+0x3042ffb1],0x66869c4
  409727:	xchg   ebp,eax
  409728:	dec    esi
  409729:	fs pusha 
  40972b:	sbb    DWORD PTR [esi+0x871544f],esp
  409731:	xchg   DWORD PTR [ecx+0x43],edi
  409734:	xor    eax,0xcdd5d88
  409739:	dec    ecx
  40973a:	mov    al,ds:0xfb9fa5e3
  40973f:	imul   esp,ecx,0xffffff8a
  409742:	loop   0x4097c2
  409744:	rol    DWORD PTR [edi],1
  409746:	xor    ch,bl
  409748:	jle    0x4096fb
  40974a:	mov    eax,0xf93c4b4d
  40974f:	fcomi  st,st(1)
  409751:	shl    eax,0x2
  409754:	fidivr DWORD PTR [ebp+0x77]
  409757:	dec    ebx
  409758:	cmp    eax,0x300dc209
  40975d:	or     eax,0xf6322221
  409762:	inc    ch
  409764:	or     edx,ecx
  409766:	jg     0x4097e7
  409768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409769:	ret    0x289a
  40976c:	adc    BYTE PTR [edi+0x31],0x2f
  409770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409771:	sbb    bl,dl
  409773:	loop   0x4097a9
  409775:	rol    BYTE PTR [esi+ebp*4],cl
  409778:	std    
  409779:	adc    DWORD PTR [edx-0x640d5ef5],0x26ba1177
  409783:	and    ebx,edi
  409785:	(bad)  
  409786:	cli    
  409787:	je     0x409807
  409789:	icebp  
  40978a:	or     eax,0x92374e1a
  40978f:	(bad)  
  409790:	out    dx,al
  409791:	adc    BYTE PTR [ecx-0x7e],bh
  409794:	push   cs
  409795:	dec    eax
  409796:	das    
  409797:	ss pop ecx
  409799:	stos   BYTE PTR es:[edi],al
  40979a:	test   cl,0x9d
  40979d:	adc    DWORD PTR [ebx-0x54],eax
  4097a0:	sbb    BYTE PTR [ecx],bh
  4097a2:	cld    
  4097a3:	xor    DWORD PTR [esi+0x11424602],ebx
  4097a9:	mov    ebp,0xf485badc
  4097ae:	adc    eax,0xe0f89eaf
  4097b3:	pushf  
  4097b4:	lods   al,BYTE PTR ds:[esi]
  4097b5:	(bad)  
  4097b7:	add    dh,ah
  4097b9:	mov    ecx,0xfe2f8060
  4097be:	test   eax,edi
  4097c0:	pushf  
  4097c1:	adc    bl,BYTE PTR ds:[edi-0x1bb966f5]
  4097c8:	pop    es
  4097c9:	inc    ecx
  4097ca:	adc    BYTE PTR [ebp+0x5f4c6076],cl
  4097d0:	mov    ds:0x90ee40a8,al
  4097d5:	jg     0x40976b
  4097d7:	cli    
  4097d8:	mov    dh,BYTE PTR [edi-0x60c809d1]
  4097de:	fdiv   st,st(4)
  4097e0:	push   esi
  4097e1:	jge    0x4097f3
  4097e3:	pop    ebx
  4097e4:	push   cs
  4097e5:	aad    0xcc
  4097e7:	push   ss
  4097e8:	out    0x86,al
  4097ea:	repnz xor ebx,edx
  4097ed:	clc    
  4097ee:	call   0xc18196f8
  4097f3:	xchg   dl,ah
  4097f5:	xor    BYTE PTR [edi+ebp*1-0x272f287f],ch
  4097fc:	jp     0x409840
  4097fe:	inc    esp
  4097ff:	enter  0xae2c,0x13
  409803:	mov    ebp,0xb0b82802
  409808:	inc    edx
  409809:	stos   DWORD PTR es:[edi],eax
  40980a:	push   cs
  40980b:	jno    0x409841
  40980d:	add    ch,dl
  40980f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409810:	sbb    eax,0xd6d9da14
  409815:	cmc    
  409816:	and    eax,DWORD PTR [esi+0x58]
  409819:	inc    eax
  40981a:	shl    BYTE PTR [eax+0x1e],1
  40981d:	xchg   BYTE PTR [ecx-0x63f68450],cl
  409823:	pop    ebx
  409824:	cmp    cl,bh
  409826:	adc    BYTE PTR [edx],bh
  409828:	jno    0x409836
  40982a:	(bad)  [ebp-0x3dfa8656]
  409830:	retf   0x9c2b
  409833:	sbb    edx,ebp
  409835:	test   DWORD PTR [ebx-0x316be396],ebx
  40983b:	mov    al,0x86
  40983d:	sub    dh,bh
  40983f:	(bad)  
  409840:	pop    edi
  409841:	cmp    DWORD PTR [edx+0x14e9adc1],eax
  409847:	aaa    
  409848:	xchg   edi,eax
  409849:	pushf  
  40984a:	loope  0x4097fa
  40984c:	pop    esi
  40984d:	ret    
  40984e:	push   eax
  40984f:	cmp    bh,BYTE PTR [ebx-0x4b9e2658]
  409855:	mov    ebx,0xb3008209
  40985a:	cld    
  40985b:	xchg   BYTE PTR [edx+0x69],ch
  40985e:	retf   
  40985f:	cdq    
  409860:	shr    ch,1
  409862:	(bad)  
  409863:	lods   al,BYTE PTR ds:[esi]
  409864:	aas    
  409865:	cmp    al,0xf8
  409867:	mov    edi,0x5bad58b7
  40986c:	jl     0x4098ca
  40986e:	pop    ds
  40986f:	dec    esi
  409870:	fisttp WORD PTR [edi+eax*1]
  409873:	mov    dl,0xd4
  409875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409876:	rcl    DWORD PTR [edi+0x647b2f0d],1
  40987c:	nop
  40987d:	cmp    al,0x6
  40987f:	cmp    dl,BYTE PTR [esp+eax*2+0x46]
  409883:	pop    esi
  409884:	test   DWORD PTR [esi+0x761dca1d],ebx
  40988a:	push   edx
  40988b:	ins    DWORD PTR es:[edi],dx
  40988c:	or     edx,esi
  40988e:	dec    esp
  40988f:	shl    DWORD PTR [ecx],0xb2
  409892:	or     DWORD PTR [ecx+0x3434e9f0],ebx
  409898:	jmp    0xe50d:0x9a2db094
  40989f:	add    DWORD PTR [edx+0x57],ebp
  4098a2:	out    0x73,al
  4098a4:	clc    
  4098a5:	ret    0x4162
  4098a8:	(bad)  
  4098a9:	fisubr WORD PTR [ecx+0x1f]
  4098ac:	daa    
  4098ad:	inc    eax
  4098ae:	pop    ebx
  4098af:	cmp    eax,0x510044bc
  4098b4:	sbb    eax,0x7c5e85ac
  4098b9:	xor    ebp,DWORD PTR [ebx+0x6b]
  4098bc:	lods   eax,DWORD PTR ds:[esi]
  4098bd:	jno    0x409894
  4098bf:	push   cs
  4098c0:	frndint 
  4098c2:	dec    ecx
  4098c3:	in     al,dx
  4098c4:	cli    
  4098c5:	sbb    ch,BYTE PTR [ebp-0x1353ebb9]
  4098cb:	xchg   edi,eax
  4098cc:	inc    ecx
  4098cd:	lods   eax,DWORD PTR ds:[esi]
  4098ce:	(bad)  
  4098cf:	out    dx,al
  4098d0:	shl    BYTE PTR [ebp-0x12],cl
  4098d3:	jg     0x4098a2
  4098d5:	mov    bh,0x42
  4098d7:	inc    ebp
  4098d8:	and    ch,BYTE PTR [edi-0x30f8fc39]
  4098de:	int    0xf1
  4098e0:	cs pop esp
  4098e2:	imul   ebx,DWORD PTR [esi+0x7f19c0ff],0xfef6595e
  4098ec:	mov    fs,WORD PTR [esi+0x41]
  4098ef:	adc    DWORD PTR [eax-0x708695e5],0xffffff81
  4098f6:	mov    al,0xac
  4098f8:	sti    
  4098f9:	ficom  DWORD PTR [ebx+edx*2-0x33e29ab4]
  409900:	ja     0x40993f
  409902:	jbe    0x40994e
  409904:	test   BYTE PTR [eax+0x49],ch
  409907:	sbb    DWORD PTR [esi],ebp
  409909:	pushfw 
  40990b:	aam    0x28
  40990d:	out    dx,eax
  40990e:	push   0xb3ab61d
  409913:	fdivr  QWORD PTR [ecx]
  409915:	retf   
  409916:	test   eax,0x82a29902
  40991b:	mov    ebx,DWORD PTR [ecx]
  40991d:	jmp    0x4098e1
  40991f:	je     0x4098dc
  409921:	push   edi
  409922:	je     0x40991a
  409924:	cld    
  409925:	imul   ecx,DWORD PTR [edi-0x6808e2ff],0xe435b04c
  40992f:	push   eax
  409930:	sub    al,BYTE PTR [eax+0x4f]
  409933:	sbb    BYTE PTR [ebp+0xf6e7b48],cl
  409939:	call   0x7282:0xbd5c5355
  409940:	ror    BYTE PTR ds:0xb3f8e9df,1
  409946:	push   es
  409947:	adc    al,0x32
  409949:	sti    
  40994a:	imul   ebx,DWORD PTR [edi],0xffffffc1
  40994d:	dec    esp
  40994e:	xor    eax,0xb5d9b09a
  409953:	lods   eax,DWORD PTR ds:[esi]
  409954:	jl     0x409985
  409956:	xlat   BYTE PTR ds:[ebx]
  409957:	mov    bl,BYTE PTR [esi-0x78]
  40995a:	and    BYTE PTR [eax],bl
  40995c:	sahf   
  40995d:	loope  0x4099d7
  40995f:	rcl    ebp,0x8d
  409962:	inc    BYTE PTR [edi+0x14]
  409965:	aad    0xc7
  409967:	fnsave [di+0x28]
  40996b:	cwde   
  40996c:	lods   al,BYTE PTR ds:[esi]
  40996d:	push   ebp
  40996e:	push   ss
  40996f:	and    BYTE PTR [ebp+edx*1+0x78],bh
  409973:	(bad)  
  409975:	outs   dx,BYTE PTR ds:[esi]
  409976:	cli    
  409977:	sub    al,0xd9
  409979:	cmc    
  40997a:	pop    eax
  40997b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40997c:	(bad)  
  40997d:	cs cld 
  40997f:	xor    al,0x89
  409981:	push   eax
  409982:	stc    
  409983:	xchg   ebp,eax
  409984:	or     cl,BYTE PTR ds:0x8566b931
  40998a:	nop
  40998b:	sub    eax,edi
  40998d:	retf   
  40998e:	imul   BYTE PTR [eax-0x63]
  409991:	retf   
  409992:	or     eax,0x1b5eab77
  409997:	outs   dx,DWORD PTR ds:[esi]
  409998:	popf   
  409999:	mov    cl,0x9a
  40999b:	retf   0x8a53
  40999e:	fsubr  QWORD PTR [eax]
  4099a0:	dec    eax
  4099a1:	adc    DWORD PTR [ebp-0x6dc03634],edx
  4099a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099a8:	inc    ebx
  4099a9:	and    bh,BYTE PTR [eax-0x37f28a1b]
  4099af:	pushf  
  4099b0:	in     al,dx
  4099b1:	ja     0x409a02
  4099b3:	cmp    al,0x25
  4099b5:	dec    ebp
  4099b6:	or     eax,0xa2937752
  4099bb:	pop    es
  4099bc:	add    al,BYTE PTR [ecx+0x76]
  4099bf:	repnz imul BYTE PTR [edi-0x4f]
  4099c3:	out    0x4c,al
  4099c5:	jae    0x4099bb
  4099c7:	je     0x4099ea
  4099c9:	or     al,0x29
  4099cb:	scas   al,BYTE PTR es:[edi]
  4099cc:	xchg   ebp,eax
  4099cd:	mov    esi,0xcc1e6da2
  4099d2:	or     BYTE PTR [edi-0x2c8cb9c3],al
  4099d8:	and    edx,esp
  4099da:	mov    bh,0x9c
  4099dc:	jmp    0x14be8198
  4099e1:	fs and cl,0x30
  4099e5:	cmp    bh,dl
  4099e7:	adc    al,0x8e
  4099e9:	mov    bh,0xff
  4099eb:	stc    
  4099ec:	push   ecx
  4099ed:	idiv   BYTE PTR [ebp-0x1912c64b]
  4099f3:	inc    eax
  4099f4:	sub    ecx,0x938279f2
  4099fa:	xchg   ebx,edi
  4099fc:	or     bh,bh
  4099fe:	inc    esi
  4099ff:	mov    edi,0xe4396e78
  409a04:	ja     0x4099be
  409a06:	xchg   edx,eax
  409a07:	adc    edi,DWORD PTR [ebx]
  409a09:	dec    edi
  409a0a:	adc    bh,BYTE PTR [edx+0x5d77b386]
  409a10:	or     bl,ch
  409a12:	int    0xb3
  409a14:	inc    DWORD PTR [edx]
  409a16:	inc    esp
  409a17:	and    DWORD PTR [esi-0x21027990],ebx
  409a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a1e:	lea    eax,[ebp+edx*2-0x71]
  409a22:	cmp    BYTE PTR [esi],ch
  409a24:	pop    es
  409a25:	stc    
  409a26:	or     BYTE PTR [ecx],0x29
  409a29:	mov    BYTE PTR [esi-0x26],0x9b
  409a2d:	sbb    eax,0x411706aa
  409a32:	sar    BYTE PTR [eax+0x790c6899],cl
  409a38:	inc    esp
  409a39:	and    al,0x29
  409a3b:	push   esi
  409a3c:	ret    
  409a3d:	mov    ecx,0xaf8dfcb
  409a42:	mov    esp,0x10efedc9
  409a47:	xchg   BYTE PTR [ebp+0x53],bh
  409a4a:	test   DWORD PTR [edi],0x976e58f9
  409a50:	dec    DWORD PTR [eax+0xb]
  409a53:	mov    cl,0x2d
  409a55:	cmp    BYTE PTR [ecx+0x12],ch
  409a58:	dec    esi
  409a59:	dec    edx
  409a5a:	mov    bl,bl
  409a5c:	or     dl,al
  409a5e:	ins    DWORD PTR es:[edi],dx
  409a5f:	gs mov esp,0x3823b81b
  409a65:	lds    eax,FWORD PTR [eax-0x48]
  409a68:	loope  0x409a0d
  409a6a:	adc    DWORD PTR [ebp-0x57beacee],ebx
  409a70:	mov    al,ds:0x9bde80b7
  409a75:	jecxz  0x409adb
  409a77:	into   
  409a78:	xchg   edx,eax
  409a79:	out    0xc7,al
  409a7b:	dec    ebp
  409a7c:	xor    dl,BYTE PTR [esi]
  409a7e:	(bad)  
  409a7f:	retf   
  409a80:	ror    DWORD PTR [esi-0x4cc70370],1
  409a86:	mov    esp,0x3a9be0ee
  409a8b:	push   esp
  409a8c:	out    0x6e,eax
  409a8e:	ficom  DWORD PTR [ecx-0x3b]
  409a91:	adc    dh,BYTE PTR [ebx-0x7d]
  409a94:	ins    BYTE PTR es:[edi],dx
  409a95:	or     ah,BYTE PTR [esi+0x74]
  409a98:	mov    ch,0x54
  409a9a:	test   eax,0xbdf375cc
  409a9f:	in     eax,dx
  409aa0:	jmp    0x2d6d:0x9d589f12
  409aa7:	jmp    FWORD PTR [ecx-0x12]
  409aaa:	(bad)  
  409aac:	mov    bl,0x1d
  409aae:	push   es
  409aaf:	dec    bh
  409ab1:	es das 
  409ab3:	(bad)  
  409ab4:	scas   eax,DWORD PTR es:[edi]
  409ab5:	ficom  WORD PTR [ecx+0x4a1c8986]
  409abb:	lock fld1 
  409abe:	push   esi
  409abf:	enter  0x7f69,0x28
  409ac3:	inc    esp
  409ac4:	cmp    BYTE PTR [eax+eax*1+0x1a],0x62
  409ac9:	mov    dx,0xaa0d
  409acd:	mov    esi,0xc2bce0
  409ad2:	loope  0x409a5d
  409ad4:	pop    esi
  409ad5:	pop    esi
  409ad6:	adc    al,0x9e
  409ad8:	in     al,dx
  409ad9:	pop    edx
  409ada:	push   edi
  409adb:	mov    BYTE PTR [edx+ebx*1-0x3f],ch
  409adf:	mov    ecx,0xbe107294
  409ae4:	clc    
  409ae5:	sbb    al,0xab
  409ae7:	jnp    0x409b07
  409ae9:	frstor [edi+0x362f8993]
  409aef:	push   0xffffffb0
  409af1:	inc    edi
  409af2:	pop    ebx
  409af3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409af4:	enter  0x76f9,0xcd
  409af8:	xor    ebx,ecx
  409afa:	add    eax,0x680cec26
  409aff:	jmp    0x656c0bd2
  409b04:	repz push esi
  409b06:	bound  ebx,QWORD PTR [ebp+0x4632fd07]
  409b0c:	pop    ecx
  409b0d:	jmp    0xe4d324eb
  409b12:	xchg   BYTE PTR [esi],cl
  409b14:	mov    bl,0x4e
  409b16:	push   0x89525d80
  409b1b:	int3   
  409b1c:	sub    al,0x8b
  409b1e:	push   esi
  409b1f:	xchg   ebp,eax
  409b20:	sar    BYTE PTR [esi+0x637b5350],1
  409b26:	sar    DWORD PTR [ecx],0x10
  409b29:	dec    edi
  409b2a:	push   0xffffffde
  409b2c:	fwait
  409b2d:	jecxz  0x409b0c
  409b2f:	mov    ebx,0x8f3976e2
  409b34:	bound  edi,QWORD PTR [eax-0x35bfb7ef]
  409b3a:	mov    ds:0xd0528dd,al
  409b3f:	rsm    
  409b41:	inc    ebp
  409b42:	nop
  409b43:	aas    
  409b44:	xchg   edi,eax
  409b45:	pop    es
  409b46:	xor    BYTE PTR ds:0xcf1b440d,0xc8
  409b4d:	xchg   ebx,eax
  409b4e:	int    0xd6
  409b50:	stos   BYTE PTR es:[edi],al
  409b51:	sub    ebx,ecx
  409b53:	jle    0x409b34
  409b55:	or     al,0xc2
  409b57:	leave  
  409b58:	jb     0x409bd4
  409b5a:	fbld   TBYTE PTR [ebp+0xa]
  409b5d:	shr    BYTE PTR [eax+0x29],1
  409b60:	mov    esp,eax
  409b62:	std    
  409b63:	ret    
  409b64:	fstp   DWORD PTR [ebx+edx*4-0x7eb1cb1b]
  409b6b:	cwde   
  409b6c:	retf   0x3eee
  409b6f:	lock pop edx
  409b71:	lock xor BYTE PTR [ecx],al
  409b74:	sbb    eax,0xc1104b50
  409b79:	mov    ?,edi
  409b7b:	sub    cl,BYTE PTR [eax+0x4321236f]
  409b81:	push   ss
  409b82:	pop    esp
  409b83:	out    dx,al
  409b84:	pop    esp
  409b85:	adc    DWORD PTR [edi],esp
  409b87:	daa    
  409b88:	adc    ecx,DWORD PTR ds:0x6ad9785d
  409b8e:	mov    edx,0x1f70fd87
  409b93:	mov    ds:0x2ed3da3,eax
  409b98:	mov    esi,0x62aeac3b
  409b9d:	ficom  WORD PTR ss:[ecx+edx*1-0x21]
  409ba3:	inc    edx
  409ba4:	jmp    0x689a33be
  409ba9:	js     0x409b49
  409bab:	shl    BYTE PTR [esi+0xc],cl
  409bae:	xor    ebx,esi
  409bb0:	popa   
  409bb1:	push   esi
  409bb2:	xchg   edx,eax
  409bb3:	mov    ?,WORD PTR [eax-0x5c46d24b]
  409bb9:	mov    ah,0xf2
  409bbb:	pop    ecx
  409bbc:	push   cs
  409bbd:	cs aam 0xb8
  409bc0:	adc    ecx,DWORD PTR ds:0x9bbc3af5
  409bc6:	pop    es
  409bc7:	pop    ds
  409bc8:	or     dl,BYTE PTR [ebx-0x59ea7fa0]
  409bce:	and    esi,esi
  409bd0:	ja     0x409bf9
  409bd2:	mov    bl,0x22
  409bd4:	outs   dx,DWORD PTR ds:[esi]
  409bd5:	mov    ebp,0xf893e43
  409bda:	mov    es,WORD PTR [esi]
  409bdc:	sti    
  409bdd:	pop    ebp
  409bde:	xchg   edi,eax
  409bdf:	inc    eax
  409be0:	jp     0x409c49
  409be2:	cmc    
  409be3:	lods   eax,DWORD PTR ds:[esi]
  409be4:	xchg   edx,eax
  409be5:	dec    ecx
  409be6:	mov    esi,0xc6f6be42
  409beb:	xor    ebp,ebp
  409bed:	shr    BYTE PTR [esp+ebp*1],cl
  409bf0:	das    
  409bf1:	push   0x9bd0a889
  409bf6:	icebp  
  409bf7:	int    0xef
  409bf9:	dec    ebp
  409bfa:	and    al,0xb3
  409bfc:	(bad)  
  409bfd:	in     al,dx
  409bfe:	cmp    bh,BYTE PTR [eax+0x9c7678c]
  409c04:	out    dx,al
  409c05:	aaa    
  409c06:	test   eax,0x4c0a6862
  409c0b:	xchg   esi,eax
  409c0c:	ficomp WORD PTR [esi+0x37]
  409c0f:	pop    ds
  409c10:	outs   dx,BYTE PTR ds:[esi]
  409c11:	jo     0x409bcb
  409c13:	lock imul ebp,DWORD PTR [esp+edi*4-0x72],0x1eda9ae2
  409c1c:	inc    ecx
  409c1d:	inc    edi
  409c1e:	iret   
  409c1f:	jne    0x409c03
  409c21:	xor    al,0xb6
  409c23:	and    eax,0x56afb0fb
  409c28:	fcom   QWORD PTR [esi+0x23ad12f8]
  409c2e:	mov    bh,0x88
  409c30:	call   0xbaf02ef1
  409c35:	iret   
  409c36:	sbb    al,0xff
  409c38:	xor    dl,0x6c
  409c3b:	sar    BYTE PTR [edx-0xa88b52c],cl
  409c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c42:	adc    eax,0xec5698e
  409c47:	lahf   
  409c48:	(bad)  
  409c49:	pusha  
  409c4a:	ins    BYTE PTR es:[edi],dx
  409c4b:	daa    
  409c4c:	jl     0x409cc3
  409c4e:	pop    ss
  409c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c50:	cdq    
  409c51:	mov    ds:0xbca8a271,eax
  409c56:	push   0x5e
  409c58:	jle    0x409c12
  409c5a:	sbb    eax,0x48a37a0b
  409c5f:	push   edx
  409c60:	ds cli 
  409c62:	dec    si
  409c64:	ja     0x409c1e
  409c66:	mov    eax,DWORD PTR es:[esp+ebp*1+0x4d]
  409c6b:	pop    ebp
  409c6c:	jb     0x409c8c
  409c6e:	in     al,dx
  409c6f:	dec    esi
  409c70:	sti    
  409c71:	add    eax,0xb5e2e20f
  409c76:	xchg   ecx,eax
  409c77:	cld    
  409c78:	leave  
  409c79:	daa    
  409c7a:	ja     0x409ce9
  409c7c:	(bad)  
  409c7e:	mov    dl,0x3d
  409c80:	pop    esp
  409c81:	xor    eax,0x9644c7a8
  409c86:	jne    0x409cd8
  409c88:	imul   eax,DWORD PTR [esi],0x994f4db8
  409c8e:	xor    eax,0xad2766b2
  409c93:	pop    eax
  409c94:	aam    0x7
  409c96:	sub    al,0x2b
  409c98:	xlat   BYTE PTR ds:[ebx]
  409c99:	bound  ecx,QWORD PTR [ecx+ebx*1]
  409c9c:	push   0xffffffab
  409c9e:	mov    edx,0xbb0ee224
  409ca3:	xor    esi,DWORD PTR [ecx-0x3ef35258]
  409ca9:	mov    WORD PTR [ecx+0x4a],cs
  409cac:	dec    edi
  409cad:	mov    ds:0x3edfe118,al
  409cb2:	call   0xa7fb:0xf78bb19e
  409cb9:	rol    esp,1
  409cbb:	pop    edi
  409cbc:	out    dx,al
  409cbd:	sub    al,0x79
  409cbf:	(bad)  
  409cc0:	jecxz  0x409ca6
  409cc2:	(bad)  
  409cc3:	in     al,0xfc
  409cc5:	call   0xce72ae1c
  409cca:	jmp    0x409cfd
  409ccc:	shl    ah,cl
  409cce:	cmp    esp,DWORD PTR [eax+eax*2]
  409cd1:	data16 cmp BYTE PTR [edx+0x2b],al
  409cd5:	push   ds
  409cd6:	out    dx,eax
  409cd7:	adc    BYTE PTR [ebx],0xf9
  409cda:	xor    edi,DWORD PTR gs:[ebp+0x5b]
  409cde:	or     eax,0xa799633f
  409ce3:	sbb    al,0x3e
  409ce5:	xchg   ecx,eax
  409ce6:	ror    BYTE PTR [eax-0x37],1
  409ce9:	jns    0x1f6613c6
  409cef:	popf   
  409cf0:	dec    eax
  409cf1:	div    dl
  409cf3:	mov    ah,0x49
  409cf5:	stos   BYTE PTR es:[edi],al
  409cf6:	and    eax,0x1863a804
  409cfb:	adc    DWORD PTR [eax+0x1c507a13],0xfffffff5
  409d02:	repnz mov ecx,0x8b855845
  409d08:	lods   al,BYTE PTR ds:[esi]
  409d09:	in     eax,dx
  409d0a:	ret    0x86d8
  409d0d:	outs   dx,DWORD PTR ds:[esi]
  409d0e:	jae    0x409cab
  409d10:	or     dl,BYTE PTR [edx+0x4e]
  409d13:	push   cs
  409d14:	lods   al,BYTE PTR ds:[esi]
  409d15:	push   0x511b54d3
  409d1a:	mov    ds:0x3193a9df,al
  409d1f:	mov    esi,0xd5095681
  409d24:	sub    esi,ebp
  409d26:	push   esi
  409d27:	js     0x409ca9
  409d29:	sub    DWORD PTR [esp+ebx*1-0x28],eax
  409d2d:	cmp    DWORD PTR [ecx+0x786416ee],esp
  409d33:	ins    BYTE PTR es:[edi],dx
  409d34:	xchg   esi,eax
  409d35:	cmp    BYTE PTR [esi],dl
  409d37:	xchg   ebp,ebp
  409d39:	xchg   esp,eax
  409d3a:	loop   0x409cbc
  409d3c:	leave  
  409d3d:	inc    edi
  409d3e:	es jmp 0xad6d:0xb4496f3e
  409d46:	in     al,0xf9
  409d48:	add    ebx,DWORD PTR [ecx-0x3a]
  409d4b:	pop    edi
  409d4c:	xor    eax,0xf51aa14e
  409d51:	call   0x8e0aa8f9
  409d56:	clc    
  409d57:	es shl dh,0xae
  409d5b:	push   esi
  409d5c:	jmp    0x3a1b9d88
  409d61:	and    al,BYTE PTR [eax]
  409d63:	iret   
  409d64:	idiv   BYTE PTR [edi+0x60]
  409d67:	ja     0x409d4d
  409d69:	and    DWORD PTR ds:0x1da3c342,ecx
  409d6f:	and    BYTE PTR [edx+eax*4-0x1f],0x49
  409d74:	test   DWORD PTR [edx],eax
  409d76:	cmp    ebx,ebp
  409d78:	mov    ds:0x649791a0,eax
  409d7d:	clc    
  409d7e:	(bad)  
  409d7f:	xchg   ebx,eax
  409d80:	ja     0x409d12
  409d82:	dec    ebp
  409d83:	xor    al,0xac
  409d85:	in     al,dx
  409d86:	je     0x409da7
  409d88:	sbb    ah,0x12
  409d8b:	mov    al,0x98
  409d8d:	aas    
  409d8e:	pop    eax
  409d8f:	sbb    dh,BYTE PTR [ecx-0x266334b4]
  409d95:	mov    bl,0xa0
  409d97:	ret    
  409d98:	mov    eax,0xe1b7111e
  409d9d:	mov    ds:0x2c4d8ad8,al
  409da2:	xchg   ecx,eax
  409da3:	je     0x409d43
  409da5:	mov    eax,ds:0x7b498880
  409daa:	sbb    ebp,DWORD PTR [ebx+0x2d]
  409dad:	call   0x2dd9:0xf95df391
  409db4:	ret    0x55d7
  409db7:	stos   BYTE PTR es:[edi],al
  409db8:	mov    gs,WORD PTR [ecx]
  409dba:	in     al,0xda
  409dbc:	jl     0x409e1a
  409dbe:	lds    ebx,FWORD PTR [ecx]
  409dc0:	or     DWORD PTR [edi+0x7e],eax
  409dc3:	fbld   TBYTE PTR [ebx-0x39049138]
  409dc9:	lds    eax,FWORD PTR ds:0x2ed68d0e
  409dcf:	outs   dx,BYTE PTR ds:[esi]
  409dd0:	outs   dx,DWORD PTR ds:[esi]
  409dd1:	inc    ebx
  409dd2:	dec    eax
  409dd3:	popa   
  409dd4:	jb     0x409d66
  409dd6:	mov    eax,0xf0ab25c0
  409ddb:	(bad)  
  409ddc:	xlat   BYTE PTR ds:[ebx]
  409ddd:	inc    esi
  409dde:	jmp    0x5314:0x8ab3c046
  409de5:	push   ebx
  409de6:	jae    0x409e4a
  409de8:	mov    bl,0xa2
  409dea:	xchg   ecx,eax
  409deb:	inc    edx
  409dec:	repnz mov eax,0xff97b4a5
  409df2:	pop    esp
  409df3:	es enter 0x4daa,0xcd
  409df8:	ds mov cl,0xd9
  409dfb:	push   ecx
  409dfc:	jge    0x409e15
  409dfe:	std    
  409dff:	enterw 0x3ec6,0x1a
  409e04:	sbb    eax,0xfa7ab2f5
  409e09:	imul   edx,DWORD PTR [esi],0xfffffff1
  409e0c:	dec    ecx
  409e0d:	mov    ch,0xeb
  409e0f:	adc    al,0xaa
  409e11:	mov    ds:0x89bd255b,eax
  409e16:	push   esp
  409e17:	and    cl,dl
  409e19:	mov    edi,0x4c31add8
  409e1e:	add    ebx,DWORD PTR [ecx+0x1f]
  409e21:	js     0x409e7f
  409e23:	daa    
  409e24:	jne    0x409e47
  409e26:	iret   
  409e27:	in     eax,dx
  409e28:	xlat   BYTE PTR ds:[ebx]
  409e29:	jb     0x409e02
  409e2b:	mov    eax,ds:0xd46ea6a
  409e30:	mov    DWORD PTR ds:[esi-0x72],ebx
  409e34:	dec    edx
  409e35:	pusha  
  409e36:	pusha  
  409e37:	ins    BYTE PTR es:[edi],dx
  409e38:	jl     0x409df0
  409e3a:	popa   
  409e3b:	out    0x19,eax
  409e3d:	cmp    dh,dl
  409e3f:	or     DWORD PTR [ebx],esi
  409e41:	jne    0x409de7
  409e43:	fwait
  409e44:	sub    bl,BYTE PTR [ebp+0x22f3c4f2]
  409e4a:	rcl    bl,1
  409e4c:	dec    esi
  409e4d:	push   eax
  409e4e:	cmp    dh,BYTE PTR [edx+ecx*1-0x36]
  409e52:	or     DWORD PTR [ebx-0x4f8a174f],edi
  409e58:	outs   dx,DWORD PTR ds:[esi]
  409e59:	cmc    
  409e5a:	push   esp
  409e5b:	sbb    edx,DWORD PTR [edx-0x78]
  409e5e:	(bad)  
  409e5f:	cmp    al,BYTE PTR [ebx]
  409e61:	or     ah,BYTE PTR [ecx]
  409e63:	sub    al,0xd2
  409e65:	sub    al,0x62
  409e67:	aad    0x3b
  409e69:	jns    0x409e8e
  409e6b:	jg     0x409dfa
  409e6d:	mov    eax,0x3dfce8ac
  409e72:	push   0x36
  409e74:	icebp  
  409e75:	add    BYTE PTR [edi+0x6d],dl
  409e78:	into   
  409e79:	aas    
  409e7a:	xor    eax,0x89d8dd27
  409e7f:	shl    DWORD PTR [esi],cl
  409e81:	out    dx,eax
  409e82:	inc    edi
  409e83:	jmp    0x4ee5:0xa6245764
  409e8a:	push   ebx
  409e8b:	mov    ecx,0xf63ed120
  409e90:	pop    esp
  409e91:	add    esp,ecx
  409e93:	shl    edi,1
  409e95:	lock mov esi,0x42f6248a
  409e9b:	cmp    eax,0xaa3f65f0
  409ea0:	fild   WORD PTR [edx]
  409ea2:	push   edi
  409ea3:	adc    dh,BYTE PTR [esi-0x42e30f4e]
  409ea9:	or     ebx,edx
  409eab:	fwait
  409eac:	sub    BYTE PTR [esi+ecx*8],ah
  409eaf:	cmp    eax,0xb32ac562
  409eb4:	sub    DWORD PTR [edi+0x3a],edx
  409eb7:	icebp  
  409eb8:	pop    sp
  409eba:	(bad)  
  409ebb:	(bad)  ds:0xc3a3482c
  409ec1:	inc    esi
  409ec2:	lods   eax,DWORD PTR ds:[esi]
  409ec3:	cwde   
  409ec4:	(bad)  
  409ec5:	jle    0x409ebd
  409ec7:	in     eax,0xeb
  409ec9:	ins    BYTE PTR es:[edi],dx
  409eca:	imul   edi,DWORD PTR [edx+edi*2+0x5f],0xbb5347b7
  409ed2:	xor    cl,al
  409ed4:	cmp    bl,BYTE PTR [esi+0x12]
  409ed7:	(bad)  
  409ed8:	lahf   
  409ed9:	xchg   edi,eax
  409eda:	out    dx,al
  409edb:	jns    0x409e5f
  409edd:	stos   BYTE PTR es:[edi],al
  409ede:	xchg   DWORD PTR [esi-0x2c54eaec],edx
  409ee4:	fcom   DWORD PTR es:[edi+0x71]
  409ee8:	mov    bh,0xdc
  409eea:	jecxz  0x409ed4
  409eec:	and    ebx,DWORD PTR [ebx+0x71]
  409eef:	cdq    
  409ef0:	imul   ebx,DWORD PTR [ebx+0x11983410],0xe2f8b783
  409efa:	pop    edi
  409efb:	jg     0x409e83
  409efd:	pop    esi
  409efe:	xor    dh,BYTE PTR [esi+0x25056c02]
  409f04:	(bad)  
  409f05:	rcr    BYTE PTR [ebp+0x7a],0x41
  409f09:	ror    ebx,cl
  409f0b:	dec    ebp
  409f0c:	sub    esp,DWORD PTR [ebx]
  409f0e:	leave  
  409f0f:	or     eax,0x5276ecdc
  409f14:	(bad)  
  409f15:	sub    al,0xb5
  409f17:	repz pop ss
  409f19:	xor    DWORD PTR ds:0x4b48f7fa,0x6b
  409f20:	(bad)  
  409f21:	repnz adc BYTE PTR [edx+0x63],0x3b
  409f26:	gs jl  0x409f8b
  409f29:	mov    bl,0xc5
  409f2b:	inc    edi
  409f2c:	nop
  409f2d:	in     al,0xc6
  409f2f:	mov    cl,0x9e
  409f31:	sub    al,0x21
  409f33:	inc    esi
  409f34:	jnp    0x409ece
  409f36:	jne    0x409ec2
  409f38:	mov    al,ds:0xa510513b
  409f3d:	scas   al,BYTE PTR es:[edi]
  409f3e:	les    ebp,FWORD PTR [edi-0x71]
  409f41:	out    dx,al
  409f42:	inc    esp
  409f43:	cmc    
  409f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f45:	push   0xffffffdd
  409f47:	cld    
  409f48:	dec    edi
  409f49:	sub    cl,ah
  409f4b:	sub    BYTE PTR [esi+0xcfb0009],dl
  409f51:	out    0x7a,al
  409f53:	jg     0x409f55
  409f55:	daa    
  409f56:	jmp    0x409f03
  409f58:	and    al,0x2
  409f5a:	outs   dx,BYTE PTR ss:[esi]
  409f5c:	dec    edi
  409f5d:	test   BYTE PTR [ebp-0x668e75ec],dl
  409f63:	imul   ebx,esi,0x38
  409f66:	mov    BYTE PTR [ebp-0x191550c4],0x30
  409f6d:	sti    
  409f6e:	and    DWORD PTR [edi+ebp*1+0x18600f9d],ebx
  409f75:	sub    edi,DWORD PTR [esi-0x1fc0a904]
  409f7b:	sub    cl,BYTE PTR [esi+edi*1+0x1882bdf6]
  409f82:	pop    ecx
  409f83:	ret    
  409f84:	iret   
  409f85:	call   0xfa4470ad
  409f8a:	sahf   
  409f8b:	popf   
  409f8c:	sbb    esp,DWORD PTR [ebx]
  409f8e:	fsub   DWORD PTR [eax+edi*8+0x39]
  409f92:	mov    dl,0x86
  409f94:	fdiv   DWORD PTR ds:0x49b0ad45
  409f9a:	pop    ecx
  409f9b:	data16 mov dh,0x4a
  409f9e:	add    BYTE PTR [ebp-0x614a0e91],dl
  409fa4:	jno    0x409faf
  409fa6:	shl    esp,cl
  409fa8:	cld    
  409fa9:	cld    
  409faa:	data16 cmp bh,bh
  409fad:	ins    BYTE PTR es:[edi],dx
  409fae:	or     dl,dl
  409fb0:	mov    edx,0xd06c93a4
  409fb5:	stos   BYTE PTR es:[edi],al
  409fb6:	icebp  
  409fb7:	push   esi
  409fb8:	lahf   
  409fb9:	sbb    DWORD PTR [ecx],ecx
  409fbb:	sbb    eax,0xce7120fd
  409fc0:	aam    0x13
  409fc2:	mov    eax,ds:0xabb8a623
  409fc7:	das    
  409fc8:	retf   0x5c46
  409fcb:	out    dx,eax
  409fcc:	repz sub DWORD PTR [ecx],ebx
  409fcf:	out    0xd6,eax
  409fd1:	ror    BYTE PTR [ebx+0x3d],cl
  409fd4:	jmp    0xa39b:0xf26d74b8
  409fdb:	jmp    0x981e:0x6805e7ca
  409fe2:	cmp    BYTE PTR [ecx+ecx*2+0x3768b001],ch
  409fe9:	cs jle 0x40a027
  409fec:	in     al,0x4b
  409fee:	leave  
  409fef:	jne    0x409fc0
  409ff1:	xchg   esi,eax
  409ff2:	or     BYTE PTR [eax+eiz*8],dh
  409ff5:	popf   
  409ff6:	out    dx,al
  409ff7:	xlat   BYTE PTR ds:[ebx]
  409ff8:	jmp    0x40a041
  409ffa:	add    ah,BYTE PTR [ecx]
  409ffc:	aam    0xbd
  409ffe:	scas   eax,DWORD PTR es:[edi]
  409fff:	sbb    dh,BYTE PTR [ecx]
  40a001:	xlat   BYTE PTR ds:[ebx]
  40a002:	jmp    0x40a04c
  40a004:	data16 mov ch,0x2c
  40a007:	mov    ecx,0xa1c529e5
  40a00c:	adc    dl,dh
  40a00e:	pushf  
  40a00f:	or     DWORD PTR [edx+0x65c176b5],ebp
  40a015:	aaa    
  40a016:	push   0xffffffc7
  40a018:	or     DWORD PTR [ebp+0x2e],edi
  40a01b:	sbb    eax,ebx
  40a01d:	test   al,0xdb
  40a01f:	push   es
  40a020:	jmp    0x40a01f
  40a022:	dec    ebp
  40a023:	push   0x3f65c24d
  40a028:	push   edi
  40a029:	sbb    BYTE PTR [edi-0x73],bl
  40a02c:	sbb    al,0x9
  40a02e:	fcom   QWORD PTR [ecx]
  40a030:	mov    ah,0x22
  40a032:	int    0xdf
  40a034:	sub    BYTE PTR [ecx+esi*1],bh
  40a037:	sti    
  40a038:	jecxz  0x409fc4
  40a03a:	mov    ds:0xdb7e4ad5,eax
  40a03f:	sub    al,BYTE PTR [edi]
  40a041:	xchg   ecx,eax
  40a042:	ret    
  40a043:	jl     0x409ffe
  40a045:	and    BYTE PTR [edx],dl
  40a047:	lea    esp,[ecx-0x22]
  40a04a:	dec    ecx
  40a04b:	xchg   ebx,eax
  40a04c:	jle    0x40a0cd
  40a04e:	not    ah
  40a050:	enter  0x3629,0x35
  40a054:	leave  
  40a055:	dec    ebp
  40a056:	clc    
  40a057:	out    0x95,eax
  40a059:	fsubr  QWORD PTR [ecx-0x602b981f]
  40a05f:	add    eax,esp
  40a061:	call   0x4006f10d
  40a066:	cmc    
  40a067:	pop    eax
  40a068:	fstp   QWORD PTR [eax-0x16]
  40a06b:	push   ebp
  40a06c:	cwde   
  40a06d:	inc    edx
  40a06f:	lea    edi,ds:0x25270a4b
  40a075:	mov    dh,BYTE PTR [esi+0x3abb2da8]
  40a07b:	ds xchg edx,eax
  40a07d:	sahf   
  40a07e:	enter  0xf3a9,0xfb
  40a082:	sub    al,BYTE PTR [ecx-0x51]
  40a085:	lea    ecx,[esi+0x4a]
  40a088:	cmc    
  40a089:	shr    edx,1
  40a08b:	test   eax,0x5f3ef050
  40a090:	and    al,0xb9
  40a092:	adc    dh,bh
  40a094:	push   eax
  40a095:	ss push ebp
  40a097:	in     eax,0x3
  40a099:	(bad)  
  40a09a:	clc    
  40a09b:	imul   ebp,ebp,0x3d
  40a09e:	adc    al,0xab
  40a0a0:	test   al,0x1f
  40a0a2:	int    0xa2
  40a0a4:	inc    ebx
  40a0a5:	push   ds
  40a0a6:	add    esi,DWORD PTR [edi+eax*2]
  40a0a9:	popf   
  40a0aa:	mov    ecx,0x5cfbe5c5
  40a0af:	rcr    dh,cl
  40a0b1:	lds    eax,FWORD PTR [esi+eiz*2]
  40a0b4:	stos   DWORD PTR es:[edi],eax
  40a0b5:	pop    edx
  40a0b6:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0b8:	sub    ebp,edi
  40a0ba:	stos   DWORD PTR es:[edi],eax
  40a0bb:	push   ecx
  40a0bc:	mov    al,BYTE PTR [ecx+edi*2]
  40a0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0c0:	dec    ebx
  40a0c1:	push   eax
  40a0c2:	push   cs
  40a0c3:	rcl    DWORD PTR [edx],cl
  40a0c5:	mov    bl,0x36
  40a0c7:	mov    dl,0xed
  40a0c9:	call   0x3b1ec022
  40a0ce:	rcr    BYTE PTR [ecx+eiz*2-0x41],1
  40a0d2:	or     eax,0xe07a6173
  40a0d7:	mov    ebx,0x5b7d2af9
  40a0dc:	jmp    0x4a5b2e5
  40a0e1:	stc    
  40a0e2:	xchg   ecx,eax
  40a0e3:	sub    eax,DWORD PTR [ecx+0x4ceb63ab]
  40a0e9:	mov    ds:0x36108d9c,al
  40a0ee:	inc    ebx
  40a0ef:	and    DWORD PTR [ebx+0x11129eb3],0xffffffae
  40a0f6:	enter  0xb4a7,0xd3
  40a0fa:	(bad)  
  40a0fb:	cli    
  40a0fc:	into   
  40a0fd:	sub    dl,bl
  40a0ff:	scas   al,BYTE PTR es:[edi]
  40a100:	ret    0x2060
  40a103:	out    0xc9,al
  40a105:	cmp    DWORD PTR [edi+0x4f],edx
  40a108:	aad    0x67
  40a10a:	sub    bl,BYTE PTR [ebx-0x1275e79e]
  40a110:	iret   
  40a111:	std    
  40a112:	sub    dl,BYTE PTR [ecx+0x376280d6]
  40a118:	adc    al,0xb
  40a11a:	(bad)  
  40a11b:	aam    0x7d
  40a11d:	xor    ax,0x134f
  40a121:	mov    esi,0x825a95ca
  40a126:	div    DWORD PTR [esi-0x5d]
  40a129:	pop    edx
  40a12a:	mov    dh,0xa5
  40a12c:	sub    bl,bh
  40a12e:	(bad)  
  40a12f:	jne    0x40a154
  40a131:	mov    DWORD PTR [edx+0x54edebbb],eax
  40a137:	scas   al,BYTE PTR es:[edi]
  40a138:	jge    0x40a117
  40a13a:	pop    ebx
  40a13b:	or     cl,0x7e
  40a13e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a13f:	cli    
  40a140:	icebp  
  40a141:	push   ebx
  40a142:	jmp    0xbf15:0xdc16c320
  40a149:	retf   
  40a14a:	dec    ecx
  40a14b:	stc    
  40a14c:	inc    eax
  40a14d:	pop    edx
  40a14e:	lds    ebp,FWORD PTR [edi+0x34]
  40a151:	aaa    
  40a152:	mov    WORD PTR [edi-0x3390ea4e],es
  40a158:	test   DWORD PTR ds:0x66b6f760,esp
  40a15e:	mov    al,ds:0xb1985582
  40a163:	jge    0x40a128
  40a165:	adc    edx,DWORD PTR [eax+0x5d96cb38]
  40a16b:	rcl    BYTE PTR [ecx],cl
  40a16d:	fisub  WORD PTR [edi+0x6ab00439]
  40a173:	inc    eax
  40a174:	xor    DWORD PTR [ecx],ecx
  40a176:	mov    eax,ds:0x889925c5
  40a17b:	pop    ss
  40a17c:	shr    BYTE PTR [di-0x58a4],0xd5
  40a182:	pop    ebx
  40a183:	mov    al,ds:0x42c870b6
  40a188:	cmp    ebp,esp
  40a18a:	jle    0x40a1d5
  40a18c:	int    0x79
  40a18e:	cs scas eax,DWORD PTR es:[edi]
  40a190:	repnz out dx,al
  40a192:	push   0x136ae678
  40a197:	repz adc DWORD PTR fs:[ecx],eax
  40a19b:	fst    QWORD PTR [ebx]
  40a19d:	mov    ?,edx
  40a19f:	sub    DWORD PTR [edi+ecx*4],esp
  40a1a2:	push   es
  40a1a3:	mov    esi,0xdbcc6c10
  40a1a8:	retf   
  40a1a9:	sub    dh,ah
  40a1ab:	jecxz  0x40a182
  40a1ad:	in     al,0xde
  40a1af:	dec    edx
  40a1b0:	and    al,0xac
  40a1b2:	jb     0x40a225
  40a1b4:	fdiv   DWORD PTR [edx+edi*8]
  40a1b7:	sub    eax,0x494e0ccc
  40a1bc:	lock popf 
  40a1be:	jle    0x40a23d
  40a1c0:	addr16 mov dl,0x1d
  40a1c3:	push   esi
  40a1c4:	nop
  40a1c5:	les    edx,FWORD PTR ds:0xecbdf03b
  40a1cb:	jbe    0x40a1aa
  40a1cd:	icebp  
  40a1ce:	push   ds
  40a1cf:	xor    eax,0x6c779e60
  40a1d4:	shl    BYTE PTR [eax-0x2e820a73],cl
  40a1da:	add    DWORD PTR [eax],ecx
  40a1dc:	adc    bh,ah
  40a1de:	adc    ebx,0x799f3f7b
  40a1e4:	jns    0x40a189
  40a1e6:	sbb    al,0x6c
  40a1e8:	vpunpcklqdq xmm5,xmm4,XMMWORD PTR [edx-0x7f16e089]
  40a1f0:	call   0xbd6d:0x12d20dc
  40a1f7:	adc    DWORD PTR [edi+edi*4],edx
  40a1fa:	pop    ebp
  40a1fb:	inc    ecx
  40a1fc:	sbb    eax,0x850ff03b
  40a201:	push   ss
  40a202:	add    BYTE PTR [eax],al
  40a204:	add    BYTE PTR [ebx+0x758bfc45],cl
  40a20a:	clc    
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	add    DWORD PTR [eax+0x6276d3e],ebx
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	cli    
  40a5f5:	mul    bl
  40a5f7:	mov    ch,0x20
  40a5f9:	sub    edx,DWORD PTR [ebp+0x3e945969]
  40a5ff:	pop    esp
  40a600:	jb     0x40a5a2
  40a602:	rol    edi,1
  40a604:	adc    BYTE PTR [eax-0x5],ah
  40a607:	mov    al,ds:0x5cfa050b
  40a60c:	dec    ebx
  40a60d:	int    0x34
  40a60f:	pop    ds
  40a610:	lea    esi,[edi+0x3dd8ea0]
  40a616:	sahf   
  40a617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a618:	out    dx,al
  40a619:	or     eax,0x97a6522
  40a61e:	mov    esp,0x8764654e
  40a623:	push   ebp
  40a624:	(bad)  
  40a626:	adc    al,0xef
  40a628:	cdq    
  40a629:	enter  0x1eec,0x2c
  40a62d:	sub    ebx,ebx
  40a62f:	imul   esi,DWORD PTR [eax+eax*1],0x6c344432
  40a636:	xchg   esp,eax
  40a637:	or     DWORD PTR [esi],ebx
  40a639:	lds    edi,FWORD PTR [edx-0x2d957bac]
  40a63f:	in     al,dx
  40a640:	ds add al,0xab
  40a644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a645:	sbb    DWORD PTR [edi+0x5b737986],ebp
  40a64b:	leave  
  40a64c:	jae    0x40a64b
  40a64e:	xchg   esi,eax
  40a64f:	test   DWORD PTR [eax+edi*8],ecx
  40a652:	ror    BYTE PTR [esi],cl
  40a654:	(bad)  
  40a655:	cmc    
  40a656:	jge    0x40a648
  40a658:	arpl   di,bx
  40a65a:	add    eax,0x5ac88952
  40a65f:	add    eax,0xc886c68b
  40a664:	lahf   
  40a665:	imul   eax,DWORD PTR [edx+0x18],0x3faaec48
  40a66c:	(bad)  
  40a66d:	push   ds
  40a66e:	mov    ch,0x8d
  40a670:	loopne 0x40a6dc
  40a672:	repz js 0x40a645
  40a675:	lea    ebp,[edi-0x74]
  40a678:	pop    edx
  40a679:	or     BYTE PTR [ebp+0x14],ch
  40a67c:	fadd   QWORD PTR [esi+0x62]
  40a67f:	cmp    eax,DWORD PTR [edi-0x2d]
  40a682:	icebp  
  40a683:	adc    al,dl
  40a685:	or     DWORD PTR [edi],ecx
  40a687:	ins    BYTE PTR es:[edi],dx
  40a688:	xchg   edi,eax
  40a689:	cli    
  40a68a:	jns    0x40a65f
  40a68c:	sub    bl,0xb6
  40a68f:	pop    ebp
  40a690:	adc    al,0xe8
  40a692:	xchg   ebx,eax
  40a693:	sbb    al,0x1
  40a695:	inc    esp
  40a696:	add    dl,bh
  40a698:	dec    esp
  40a699:	cmp    eax,0x9db11a75
  40a69e:	dec    ebp
  40a69f:	xchg   esi,eax
  40a6a0:	jbe    0x40a64d
  40a6a2:	std    
  40a6a3:	int    0xa9
  40a6a5:	nop
  40a6a6:	jecxz  0x40a6bc
  40a6a8:	cmp    BYTE PTR [esi-0x6ab680b0],0xb8
  40a6af:	jecxz  0x40a685
  40a6b1:	mov    cl,0xcb
  40a6b3:	or     dh,BYTE PTR [edx-0x3c086584]
  40a6b9:	cmp    BYTE PTR [eax-0x5c884818],0x93
  40a6c0:	xchg   esp,eax
  40a6c1:	fistp  DWORD PTR [eax+0x25]
  40a6c4:	xchg   ecx,eax
  40a6c5:	adc    esp,DWORD PTR ds:0xa71d0d2d
  40a6cb:	jmp    0x40a6b7
  40a6cd:	fisub  DWORD PTR [edx+0x662cba35]
  40a6d3:	bnd jmp 0x40a6e8
  40a6d6:	sbb    DWORD PTR [eax],0x90e3c6ae
  40a6dc:	fadd   DWORD PTR [ebx+0x4bb82cb9]
  40a6e2:	adc    al,0xc
  40a6e4:	and    ch,BYTE PTR cs:[esi+0x9ad90b5]
  40a6eb:	cmp    eax,0xbf59ecd
  40a6f0:	push   0xffffffeb
  40a6f2:	xor    al,0xc8
  40a6f4:	clc    
  40a6f5:	mov    esp,0xe1c3cdf3
  40a6fa:	(bad)  
  40a6fb:	mov    cl,0xf9
  40a6fd:	xor    ah,BYTE PTR ds:0x2a74c72
  40a703:	push   0x491198cd
  40a708:	inc    esi
  40a709:	or     ah,BYTE PTR [ebx+0x2cae7069]
  40a70f:	sub    BYTE PTR [esi+0x7b8b3fb7],al
  40a715:	jle    0x40a78d
  40a717:	leave  
  40a718:	mov    edx,0x7e4353d9
  40a71d:	push   cs
  40a71e:	mov    ecx,DWORD PTR cs:[eax+0x33]
  40a722:	cmp    ch,BYTE PTR [ebx-0x74d794b5]
  40a728:	push   esp
  40a729:	inc    ebx
  40a72a:	pop    edi
  40a72b:	inc    esi
  40a72c:	cmp    ch,ah
  40a72e:	jg     0x40a791
  40a730:	or     DWORD PTR [ecx-0x1],eax
  40a733:	imul   DWORD PTR [eax]
  40a735:	push   eax
  40a736:	ds mov bh,0xa1
  40a739:	stc    
  40a73a:	sahf   
  40a73b:	sbb    bl,BYTE PTR [ebp-0x3a76bb42]
  40a741:	xchg   ebp,eax
  40a742:	inc    esp
  40a743:	sbb    eax,0x699394a4
  40a748:	adc    dh,BYTE PTR [ecx+0x22b2dbfa]
  40a74e:	rcr    BYTE PTR [eax],0x6d
  40a751:	push   ds
  40a752:	scas   eax,DWORD PTR es:[edi]
  40a753:	(bad)  
  40a754:	jbe    0x40a6e5
  40a756:	call   0x17bb493d
  40a75b:	sub    ah,al
  40a75d:	xor    DWORD PTR [edi+ebp*8-0x12cb3875],ebx
  40a764:	adc    BYTE PTR [ecx],0xf9
  40a767:	inc    ecx
  40a768:	scas   eax,DWORD PTR es:[edi]
  40a769:	test   DWORD PTR [ebx],edi
  40a76b:	and    eax,0x28a4adde
  40a770:	int    0x85
  40a772:	mov    edx,0xbe0d66e3
  40a777:	mov    ah,0x8d
  40a779:	push   0xffffffb7
  40a77b:	int3   
  40a77c:	outs   dx,DWORD PTR ds:[esi]
  40a77d:	loopne 0x40a7da
  40a77f:	jne    0x40a7b3
  40a781:	hlt    
  40a782:	aas    
  40a783:	dec    ebp
  40a784:	cmp    ch,BYTE PTR [ebp+0x5f5249a5]
  40a78a:	outs   dx,BYTE PTR ds:[esi]
  40a78b:	sub    eax,0x20241606
  40a790:	arpl   WORD PTR [eax+0x5ea3a5d0],dx
  40a796:	scas   al,BYTE PTR es:[edi]
  40a797:	add    edi,DWORD PTR [edx+0x3a]
  40a79a:	stc    
  40a79b:	or     dl,BYTE PTR [ebx-0x3a]
  40a79e:	mov    al,ds:0x95d4fd9a
  40a7a3:	mov    cl,0x3b
  40a7a5:	mov    DWORD PTR [edx-0x1563cb7],0xb6e2b0da
  40a7af:	mov    edi,0x922a64a
  40a7b4:	nop
  40a7b5:	std    
  40a7b6:	mov    ds:0x2eb8cc49,al
  40a7bb:	or     bh,0xfc
  40a7be:	(bad)  
  40a7c0:	out    dx,al
  40a7c1:	aaa    
  40a7c2:	mov    eax,0x7de19d41
  40a7c7:	fldenv [edx-0x6ff737a8]
  40a7cd:	mov    ah,0xf7
  40a7cf:	loope  0x40a767
  40a7d1:	inc    ecx
  40a7d2:	nop
  40a7d3:	jns    0xfd024f6c
  40a7d9:	retf   0x1139
  40a7dc:	sub    BYTE PTR [ebp-0x6f],0xd0
  40a7e0:	mov    ss,WORD PTR [eax]
  40a7e2:	adc    eax,0xaacda1fb
  40a7e7:	mov    edx,0x31c82f14
  40a7ec:	and    DWORD PTR [ebp+0x65],eax
  40a7ef:	test   eax,0x751113df
  40a7f4:	cld    
  40a7f5:	push   0x1f
  40a7f7:	(bad)  
  40a7f8:	(bad)  
  40a7f9:	jnp    0x40a84d
  40a7fb:	mov    dh,0xa7
  40a7fd:	xor    al,0xd1
  40a7ff:	test   DWORD PTR ds:0x1f678980,esi
  40a805:	jnp    0x40a7b4
  40a807:	sahf   
  40a808:	les    ecx,FWORD PTR [edi+0x61]
  40a80b:	into   
  40a80c:	das    
  40a80d:	(bad)  
  40a80e:	lock or ch,0x6
  40a812:	les    esp,FWORD PTR [esi]
  40a814:	xor    BYTE PTR [ebx-0x65],dl
  40a817:	loope  0x40a845
  40a819:	pushf  
  40a81a:	sti    
  40a81b:	bound  di,DWORD PTR [ebx]
  40a81e:	sbb    DWORD PTR [eax+edx*4+0x769040d7],esp
  40a825:	mov    dh,0x25
  40a827:	mov    al,BYTE PTR ds:[eax-0x6671522]
  40a82e:	je     0x40a896
  40a830:	inc    edi
  40a831:	sub    edx,DWORD PTR [edx]
  40a833:	sbb    al,BYTE PTR [ebx-0x6843e1a2]
  40a839:	faddp  st(1),st
  40a83b:	fiadd  WORD PTR [ebp+0x10]
  40a83e:	mov    WORD PTR [ecx],?
  40a840:	sbb    ch,al
  40a842:	pop    esi
  40a843:	adc    edx,DWORD PTR [ebx]
  40a845:	mov    dh,0x83
  40a847:	adc    bh,BYTE PTR [ebx+0x195f32a0]
  40a84d:	push   ss
  40a84e:	mov    ds,WORD PTR [edx+eax*8+0x2ff6d17e]
  40a855:	sahf   
  40a856:	pop    edi
  40a857:	jg     0x40a7f6
  40a859:	int3   
  40a85a:	lods   eax,DWORD PTR ds:[esi]
  40a85b:	repz enter 0x60cf,0x59
  40a860:	jg     0x40a875
  40a862:	add    ecx,edi
  40a864:	inc    edx
  40a865:	sbb    esp,DWORD PTR [ecx]
  40a867:	call   FWORD PTR [bp+di+0x1f4c]
  40a86c:	sti    
  40a86d:	push   esi
  40a86e:	idiv   ecx
  40a870:	mov    esi,0xc492bfd
  40a875:	sub    DWORD PTR [edx-0x58],ecx
  40a878:	aaa    
  40a879:	(bad)  
  40a87a:	icebp  
  40a87b:	stc    
  40a87c:	scas   al,BYTE PTR es:[edi]
  40a87d:	out    dx,eax
  40a87e:	dec    esi
  40a87f:	ret    
  40a880:	mov    ds:0x532cb0ea,al
  40a885:	dec    esp
  40a886:	sub    cl,bh
  40a888:	sbb    eax,0x94d757e1
  40a88d:	(bad)  
  40a88e:	or     cl,ch
  40a890:	sbb    ebx,esp
  40a892:	add    dh,BYTE PTR [eax]
  40a894:	jecxz  0x40a892
  40a896:	add    eax,0xee779145
  40a89b:	imul   edi,DWORD PTR [edi+0x61],0x9a5a5016
  40a8a2:	ret    0x59fb
  40a8a5:	shl    BYTE PTR cs:0xde81ce32,cl
  40a8ac:	push   cs
  40a8ad:	aas    
  40a8ae:	std    
  40a8af:	lock jae 0x40a859
  40a8b2:	rcl    BYTE PTR [esp+eiz*4+0x7859fb66],cl
  40a8b9:	pop    ecx
  40a8ba:	xor    al,BYTE PTR [eax+0x5b]
  40a8bd:	lds    ebp,FWORD PTR [edx+0xfb05f8]
  40a8c3:	dec    esi
  40a8c4:	jne    0x40a8f7
  40a8c6:	or     eax,0x180698e7
  40a8cb:	cmp    BYTE PTR ds:0xe3f23b9c,dh
  40a8d1:	add    BYTE PTR [edx+0xe6c07c],0xe9
  40a8d8:	or     BYTE PTR [ecx-0x2cb1274a],dl
  40a8de:	sub    BYTE PTR [esi+0x62fa73b],ah
  40a8e4:	lods   al,BYTE PTR ds:[esi]
  40a8e5:	sbb    DWORD PTR [ebp-0x35],ebx
  40a8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8e9:	fstp   QWORD PTR [ebx-0x7f]
  40a8ec:	into   
  40a8ed:	dec    ebp
  40a8ee:	iret   
  40a8ef:	xor    ebp,DWORD PTR [eax]
  40a8f1:	mov    cl,0xd4
  40a8f3:	in     al,0x9b
  40a8f5:	adc    esp,0x7c
  40a8f8:	shl    ch,0xa9
  40a8fb:	add    DWORD PTR [ebp+0x6b],edi
  40a8fe:	jns    0x40a8e4
  40a900:	mov    ebx,0xf766d434
  40a905:	and    dh,BYTE PTR [ebp-0x6c]
  40a908:	xor    dl,BYTE PTR [ebp+esi*1+0x6c3209c9]
  40a90f:	ss rol bh,0x81
  40a913:	or     cl,BYTE PTR [ebx+eiz*4]
  40a916:	iret   
  40a917:	fs xor eax,0xee915853
  40a91d:	loop   0x40a957
  40a91f:	mov    ds:0x2f8932ff,al
  40a924:	mov    ebx,0x115689fa
  40a929:	call   0xd3b0a10
  40a92e:	imul   ebp
  40a930:	adc    DWORD PTR [esi],edi
  40a932:	mov    edx,0x83696e3
  40a937:	sbb    al,0x79
  40a939:	lods   al,BYTE PTR ds:[esi]
  40a93a:	push   ecx
  40a93b:	bound  ebp,QWORD PTR [ebp-0x4d]
  40a93e:	add    esi,DWORD PTR [bx+si+0x41e9]
  40a943:	int    0xa4
  40a945:	jg     0x40a8e5
  40a947:	inc    edi
  40a948:	xlat   BYTE PTR ds:[ebx]
  40a949:	adc    al,0x8e
  40a94b:	call   0x15f4:0xf0df4d2d
  40a952:	es out 0x39,al
  40a955:	inc    ebx
  40a956:	fdiv   QWORD PTR [eax+edi*8-0x24]
  40a95a:	imul   ebx,DWORD PTR [ecx],0x3a8429ae
  40a960:	nop
  40a961:	mov    ecx,0x208d066c
  40a966:	xor    DWORD PTR ds:0x5a163ba2,esp
  40a96c:	and    bl,bh
  40a96e:	aam    0xf
  40a970:	clc    
  40a971:	aas    
  40a972:	mov    BYTE PTR [edi],dl
  40a974:	dec    eax
  40a975:	mov    eax,ds:0x873c6afe
  40a97a:	call   0xeb311ec0
  40a97f:	inc    ebp
  40a980:	xor    BYTE PTR ds:0x4eb759d8,ch
  40a986:	test   BYTE PTR [ebp+0x65],dl
  40a989:	dec    esi
  40a98a:	data16 and al,0x1b
  40a98d:	bound  ebx,QWORD PTR [ebp+edi*8-0x33]
  40a991:	dec    ecx
  40a992:	push   ebp
  40a993:	lock call 0xa522:0xb289f2a2
  40a99b:	inc    edi
  40a99c:	ja     0x40a9cb
  40a99e:	nop
  40a99f:	cmp    eax,0x2614dd1
  40a9a4:	ins    BYTE PTR es:[edi],dx
  40a9a5:	jae    0x40a969
  40a9a7:	pop    esp
  40a9a8:	aas    
  40a9a9:	ret    0x3979
  40a9ac:	or     eax,0xc9dfbc27
  40a9b1:	es frstor ds:[edx+0x7fec808e]
  40a9b9:	jecxz  0x40a9b9
  40a9bb:	iret   
  40a9bc:	ror    BYTE PTR [ebp+0x4b0461fe],1
  40a9c2:	xor    al,0x9b
  40a9c4:	outs   dx,BYTE PTR ds:[esi]
  40a9c5:	(bad)  
  40a9c6:	jno    0x40a98f
  40a9c8:	mov    al,ds:0xb0f15af6
  40a9cd:	iret   
  40a9ce:	scas   eax,DWORD PTR es:[edi]
  40a9cf:	xchg   edx,eax
  40a9d0:	les    ebx,FWORD PTR [ecx-0x56]
  40a9d3:	ins    DWORD PTR es:[edi],dx
  40a9d4:	lods   al,BYTE PTR ds:[esi]
  40a9d5:	add    dl,cl
  40a9d7:	rol    DWORD PTR [ebx-0x18],cl
  40a9da:	adc    BYTE PTR [ecx+eiz*4-0x11],dl
  40a9de:	sbb    BYTE PTR [ebp-0x5c],ah
  40a9e1:	ficomp DWORD PTR [ecx]
  40a9e3:	pop    ss
  40a9e4:	mov    ebx,DWORD PTR [esp+edi*1]
  40a9e7:	cmovle edi,DWORD PTR [eax]
  40a9ea:	jno    0x40a9d1
  40a9ec:	or     esp,DWORD PTR [edi-0x32]
  40a9ef:	adc    bl,BYTE PTR [ebp+0x22018527]
  40a9f5:	rcl    BYTE PTR [esi],0xd6
  40a9f8:	sbb    ebp,DWORD PTR [ebx]
  40a9fa:	test   DWORD PTR [eax-0x5f],esi
  40a9fd:	into   
  40a9fe:	mov    esi,0xb35c8863
  40aa03:	dec    edi
  40aa04:	daa    
  40aa05:	ficom  DWORD PTR cs:[ecx+0x1840b43]
  40aa0c:	mov    ecx,0x4b24c7ff
  40aa11:	rdtsc  
  40aa13:	aas    
  40aa14:	addr16 jg 0x40aa53
  40aa17:	jnp    0x40aa17
  40aa19:	dec    eax
  40aa1a:	es fwait
  40aa1c:	out    0xff,eax
  40aa1e:	mov    eax,ds:0xe5976fc3
  40aa23:	(bad)  
  40aa24:	stc    
  40aa25:	add    eax,0xcca5ffa7
  40aa2a:	leave  
  40aa2b:	ja     0x40a9f8
  40aa2d:	test   eax,esp
  40aa2f:	pusha  
  40aa30:	faddp  st(0),st
  40aa32:	mov    bl,BYTE PTR [ecx]
  40aa34:	fst    QWORD PTR fs:[ebx]
  40aa37:	out    0x3b,eax
  40aa39:	mov    BYTE PTR [esi+0x51],dl
  40aa3c:	mov    ds:0x5175b419,al
  40aa41:	push   edx
  40aa42:	sbb    al,dl
  40aa44:	cdq    
  40aa45:	cmc    
  40aa46:	xchg   esi,eax
  40aa47:	das    
  40aa48:	adc    eax,0x2f7523f3
  40aa4d:	mov    ebp,0x41cf3ec9
  40aa52:	sub    al,BYTE PTR [edi+0x26]
  40aa55:	push   ebp
  40aa56:	loop   0x40aad7
  40aa58:	push   esi
  40aa59:	ficomp DWORD PTR [edi]
  40aa5b:	mov    ds:0xe71c3d0d,eax
  40aa60:	arpl   WORD PTR [eax+0x19],bx
  40aa63:	mov    ?,WORD PTR [esi+0x5728bb54]
  40aa69:	scas   al,BYTE PTR es:[edi]
  40aa6a:	pop    ebp
  40aa6b:	popf   
  40aa6c:	xchg   esi,eax
  40aa6d:	inc    ecx
  40aa6e:	je     0x40aad3
  40aa70:	push   ebx
  40aa71:	psrld  mm1,QWORD PTR [eax-0x7ec23ffe]
  40aa78:	jl     0x40aaf0
  40aa7a:	mov    edi,0x35b9abc3
  40aa7f:	push   ds
  40aa80:	js     0x40aaa9
  40aa82:	push   edi
  40aa83:	stc    
  40aa84:	jns    0x40aab5
  40aa86:	xchg   BYTE PTR [edx+0x3a],bl
  40aa89:	dec    eax
  40aa8a:	sub    ch,BYTE PTR [ebp+0x0]
  40aa8d:	mov    dh,0xe2
  40aa8f:	cwde   
  40aa90:	and    al,0xd5
  40aa92:	adc    al,0x68
  40aa94:	jmp    0xeed9:0x352d463c
  40aa9b:	lock cs inc esi
  40aa9e:	dec    edx
  40aa9f:	inc    ecx
  40aaa0:	inc    ebx
  40aaa1:	push   0xd5f07f35
  40aaa6:	lods   al,BYTE PTR ds:[esi]
  40aaa7:	and    DWORD PTR [eax],0x69
  40aaaa:	out    0x0,eax
  40aaac:	repnz add edi,DWORD PTR [eax-0x335869fd]
  40aab3:	xchg   ecx,eax
  40aab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aab5:	jl     0x40aabc
  40aab7:	div    DWORD PTR [ecx]
  40aab9:	and    DWORD PTR [edx],ebp
  40aabb:	cld    
  40aabc:	jecxz  0x40aa44
  40aabe:	mov    edx,0x96ce9f55
  40aac3:	push   ds
  40aac4:	xor    eax,0xeef727d3
  40aac9:	xchg   ecx,eax
  40aaca:	scas   eax,DWORD PTR es:[edi]
  40aacb:	mov    edi,0x601ff05e
  40aad0:	push   esp
  40aad1:	sbb    ah,BYTE PTR [ebx]
  40aad3:	loop   0x40aa84
  40aad5:	in     eax,dx
  40aad6:	pop    eax
  40aad7:	je     0x40aa5c
  40aad9:	push   cs
  40aada:	mov    ebp,0x7167789d
  40aadf:	add    BYTE PTR [ecx],0xc
  40aae2:	sbb    edi,eax
  40aae4:	pop    ebp
  40aae5:	cmp    ecx,ebx
  40aae7:	or     DWORD PTR [ecx-0x67],ecx
  40aaea:	js     0x40aa98
  40aaec:	jne    0x40aa71
  40aaee:	fsubp  st(3),st
  40aaf0:	ficom  DWORD PTR [esi]
  40aaf2:	and    al,0xc1
  40aaf4:	or     BYTE PTR [ebp-0x16],al
  40aaf7:	pop    ecx
  40aaf8:	xor    bl,bl
  40aafa:	cs (bad) 
  40aafc:	btc    DWORD PTR [ebx],eax
  40aaff:	jmp    0x40aafe
  40ab01:	xlat   BYTE PTR ds:[ebx]
  40ab02:	mov    ecx,0x5065b8f2
  40ab07:	dec    eax
  40ab08:	es pop edi
  40ab0a:	mov    dl,0x1f
  40ab0c:	js     0x40ab28
  40ab0e:	fs xchg esi,eax
  40ab10:	sub    eax,0xdbff163
  40ab15:	xchg   ecx,eax
  40ab16:	jecxz  0x40ab3c
  40ab18:	std    
  40ab19:	mov    ebx,0x69fe6023
  40ab1e:	cmp    DWORD PTR [eax-0x20],edi
  40ab21:	addr16 push 0xba3041b9
  40ab27:	test   al,0xe
  40ab29:	stos   BYTE PTR es:[edi],al
  40ab2a:	mov    ebp,0x27267eb7
  40ab2f:	fadd   QWORD PTR [edi+0xb098372]
  40ab35:	mov    ecx,0xfff2e3bd
  40ab3a:	push   es
  40ab3b:	int    0xb3
  40ab3d:	and    bh,dl
  40ab3f:	stos   BYTE PTR es:[edi],al
  40ab40:	ret    
  40ab41:	xchg   ecx,eax
  40ab42:	push   eax
  40ab43:	push   edi
  40ab44:	in     eax,dx
  40ab45:	mov    edx,0xe0c3898b
  40ab4a:	loopne 0x40ab68
  40ab4c:	clc    
  40ab4d:	xlat   BYTE PTR ds:[ebx]
  40ab4e:	xchg   eax,esp
  40ab50:	push   esi
  40ab51:	or     eax,0x3bad6267
  40ab56:	in     eax,0x8a
  40ab58:	inc    ebp
  40ab59:	popa   
  40ab5a:	cwde   
  40ab5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab5c:	cs inc edx
  40ab5e:	ror    dh,cl
  40ab60:	test   al,0x55
  40ab62:	fdivr  QWORD PTR [ebx]
  40ab64:	mov    dl,0x2f
  40ab66:	sbb    ebp,DWORD PTR [edx-0x6b]
  40ab69:	outs   dx,DWORD PTR ds:[esi]
  40ab6a:	mov    ebx,0xc7c02139
  40ab6f:	test   eax,0xf9aff715
  40ab74:	shl    DWORD PTR [edx+edx*2-0x27cf44ea],1
  40ab7b:	leave  
  40ab7c:	jecxz  0x40ab57
  40ab7e:	pop    edi
  40ab7f:	test   DWORD PTR [eax],0x1e33faa8
  40ab85:	repnz mov bl,0x5
  40ab88:	sub    BYTE PTR [esi-0xd8cdfaf],bh
  40ab8e:	gs in  al,0xfc
  40ab91:	mov    al,0xfd
  40ab93:	add    edi,edx
  40ab95:	pop    eax
  40ab96:	push   eax
  40ab97:	jae    0x40abbb
  40ab99:	and    BYTE PTR [eax],al
  40ab9b:	xchg   BYTE PTR [edi+0x30],cl
  40ab9e:	in     al,dx
  40ab9f:	ins    DWORD PTR es:[edi],dx
  40aba0:	push   cs
  40aba1:	ins    DWORD PTR es:[edi],dx
  40aba2:	stos   DWORD PTR es:[edi],eax
  40aba3:	cdq    
  40aba4:	jb     0x40abd1
  40aba6:	or     ah,cl
  40aba8:	lahf   
  40aba9:	stc    
  40abaa:	mul    DWORD PTR [eax+0x5b]
  40abad:	push   ecx
  40abae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abaf:	xor    DWORD PTR [esi+0x25],edx
  40abb2:	and    DWORD PTR [ebp+0xa4d8c59],ebx
  40abb8:	push   eax
  40abb9:	sti    
  40abba:	adc    ecx,DWORD PTR [eax]
  40abbc:	ins    BYTE PTR es:[edi],dx
  40abbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abbe:	rcl    BYTE PTR ss:[edx-0x53],0x5a
  40abc3:	inc    edi
  40abc4:	cmp    al,0xd5
  40abc6:	adc    eax,0xd9d73fc7
  40abcb:	pusha  
  40abcc:	jle    0x40abac
  40abce:	pop    esp
  40abcf:	mul    DWORD PTR [eax-0x752ebccb]
  40abd5:	mov    ch,0x7e
  40abd7:	js     0x40abc1
  40abd9:	cmc    
  40abda:	push   ss
  40abdb:	fldcw  WORD PTR [eax+eax*4]
  40abde:	div    DWORD PTR [edi+0x1a1982de]
  40abe4:	xchg   esi,eax
  40abe5:	test   al,bh
  40abe7:	xor    BYTE PTR ds:0x54164581,ch
  40abed:	rcl    BYTE PTR [esi-0xe],0xd0
  40abf1:	cmp    ch,al
  40abf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abf4:	xlat   BYTE PTR ds:[ebx]
  40abf5:	mov    al,ds:0xfa0c7b4e
  40abfa:	mov    ecx,0xdf507767
  40abff:	dec    eax
  40ac00:	(bad)  [esi-0x2c]
  40ac03:	adc    edx,ebp
  40ac05:	ins    DWORD PTR es:[edi],dx
  40ac06:	jg     0x40ac2b
  40ac08:	aam    0x78
  40ac0a:	xlat   BYTE PTR ds:[ebx]
  40ac0b:	aas    
  40ac0c:	cld    
  40ac0d:	pop    ds
  40ac0e:	push   es
  40ac0f:	push   ecx
  40ac10:	ja     0x40abb6
  40ac12:	ins    BYTE PTR es:[edi],dx
  40ac13:	aam    0x43
  40ac15:	adc    eax,0x12e66c05
  40ac1a:	cli    
  40ac1b:	jo     0x40abd0
  40ac1d:	dec    ebx
  40ac1e:	push   eax
  40ac1f:	loopne 0x40ac31
  40ac21:	clc    
  40ac22:	hlt    
  40ac23:	and    BYTE PTR [edx+0x23],al
  40ac26:	jge    0x40ac73
  40ac28:	pop    edx
  40ac29:	(bad)  
  40ac2a:	les    eax,FWORD PTR gs:[edx-0x783c6cd5]
  40ac31:	sbb    DWORD PTR [edi+ebx*2+0x3e3c2cf0],edi
  40ac38:	inc    esp
  40ac39:	(bad)  
  40ac3a:	aad    0x34
  40ac3c:	js     0x40abee
  40ac3e:	jae    0x40ac63
  40ac40:	adc    BYTE PTR [esi+ebx*4-0x28576bed],0x74
  40ac48:	mov    cl,0xce
  40ac4a:	xchg   edi,eax
  40ac4b:	jl     0x40abe0
  40ac4d:	shl    BYTE PTR [edi-0x26],cl
  40ac50:	sbb    eax,0xbaaefd8d
  40ac55:	mov    al,ds:0xd68b0227
  40ac5a:	arpl   WORD PTR [esi+0x61],dx
  40ac5d:	jbe    0x40ac90
  40ac5f:	lds    ecx,FWORD PTR [esi-0x63]
  40ac62:	adc    ebp,ebx
  40ac64:	sub    eax,0xeb4a0fb
  40ac69:	or     ah,bl
  40ac6b:	fld    QWORD PTR [edx-0xd3abf55]
  40ac71:	mov    esi,0x3563ae9
  40ac76:	aas    
  40ac77:	dec    ecx
  40ac78:	out    0x3e,eax
  40ac7a:	add    eax,0x9d38fac4
  40ac7f:	outs   dx,DWORD PTR ds:[esi]
  40ac80:	rol    ch,cl
  40ac82:	xor    dh,cl
  40ac84:	push   eax
  40ac85:	in     eax,0xe0
  40ac87:	lods   eax,DWORD PTR ds:[esi]
  40ac88:	sub    BYTE PTR [edx],ah
  40ac8a:	pusha  
  40ac8b:	test   DWORD PTR [ebp+0x54],eax
  40ac8e:	adc    BYTE PTR [edx+0x57],0x33
  40ac92:	adc    cl,BYTE PTR [ebp-0x22e7d857]
  40ac98:	ror    bl,1
  40ac9a:	ins    BYTE PTR es:[edi],dx
  40ac9b:	pop    edx
  40ac9c:	mov    bl,dh
  40ac9e:	jne    0x40ad1e
  40aca0:	outs   dx,DWORD PTR ds:[esi]
  40aca1:	xchg   esp,eax
  40aca2:	mov    al,ds:0x993663ca
  40aca7:	mov    bh,0x10
  40aca9:	nop
  40acaa:	call   0x7a4571f3
  40acaf:	lahf   
  40acb0:	data16 fscale 
  40acb3:	adc    eax,0xfe21b9a2
  40acb8:	mov    esi,DWORD PTR [ebx]
  40acba:	jbe    0x40ac96
  40acbc:	loopne 0x40ac7f
  40acbe:	sbb    eax,0x744f5fa8
  40acc3:	jb     0x40ac60
  40acc5:	jnp    0x40ac7d
  40acc7:	clc    
  40acc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acc9:	push   esi
  40acca:	aad    0x99
  40accc:	xlat   BYTE PTR ds:[ebx]
  40accd:	mov    al,0xd0
  40accf:	push   ebx
  40acd0:	and    eax,0x89b31cde
  40acd5:	sub    al,0xc3
  40acd7:	in     eax,dx
  40acd8:	jae    0x40aca3
  40acda:	sub    edx,ebp
  40acdc:	push   ebx
  40acdd:	sub    BYTE PTR ds:0x19266649,cl
  40ace3:	adc    ch,BYTE PTR [edi]
  40ace5:	sti    
  40ace6:	test   eax,0xd4b9de66
  40aceb:	sub    bh,BYTE PTR [ebp-0x3ce029ee]
  40acf1:	pop    ss
  40acf2:	call   0x579e:0x4be387a9
  40acf9:	or     esp,DWORD PTR [eax-0x63ab3df5]
  40acff:	pop    eax
  40ad00:	out    0x83,eax
  40ad02:	dec    ecx
  40ad03:	imul   edx,DWORD PTR [esi-0x55eb60ea],0xffffff96
  40ad0a:	mov    WORD PTR es:[edx-0x65],es
  40ad0e:	daa    
  40ad0f:	mov    edi,0xa8f4904b
  40ad14:	mov    cl,0x15
  40ad16:	cdq    
  40ad17:	xchg   DWORD PTR [ebx+eax*1-0x2e97dca7],ebp
  40ad1e:	hlt    
  40ad1f:	test   DWORD PTR [ecx+ebp*1],esp
  40ad22:	mov    ds:0x2be81ea9,eax
  40ad27:	fld    QWORD PTR [ebx]
  40ad29:	(bad)  
  40ad2a:	xchg   BYTE PTR [ecx],bl
  40ad2c:	(bad)  
  40ad2d:	call   0x5a9b617b
  40ad32:	pop    ecx
  40ad33:	push   ecx
  40ad34:	jmp    0x40ad90
  40ad36:	push   ebx
  40ad37:	mov    ds:0xe74589c0,al
  40ad3c:	sahf   
  40ad3d:	cmp    al,0x84
  40ad3f:	dec    ebp
  40ad40:	sub    al,0x82
  40ad42:	stos   BYTE PTR es:[edi],al
  40ad43:	adc    DWORD PTR [edx*2-0x1ce619af],ecx
  40ad4a:	fsub   DWORD PTR [edx]
  40ad4c:	mov    dl,0x77
  40ad4e:	lds    ecx,FWORD PTR [esi+0x36]
  40ad51:	into   
  40ad52:	cld    
  40ad53:	ret    
  40ad54:	push   ebx
  40ad55:	bound  ecx,QWORD PTR [ecx+0x264ab7dc]
  40ad5b:	mov    al,0x77
  40ad5d:	push   ebx
  40ad5e:	push   ebp
  40ad5f:	cmp    eax,0x95af67f7
  40ad64:	aad    0xba
  40ad66:	je     0x40ad17
  40ad68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad69:	mov    ch,0xcb
  40ad6b:	jp     0x40ad72
  40ad6d:	icebp  
  40ad6e:	iret   
  40ad6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad70:	not    bh
  40ad72:	ja     0x40ad69
  40ad74:	pop    ds
  40ad75:	mov    cl,BYTE PTR [esi]
  40ad77:	gs jo  0x40ad91
  40ad7a:	sbb    bl,BYTE PTR [eax+ecx*1-0x70c2ec62]
  40ad81:	jb     0x40ad9c
  40ad83:	shl    bl,cl
  40ad85:	push   0xffffff89
  40ad87:	mov    cl,0xec
  40ad89:	cmovno ebp,DWORD PTR cs:[esi]
  40ad8d:	dec    ecx
  40ad8e:	add    BYTE PTR [ecx],al
  40ad90:	inc    ebx
  40ad91:	je     0x40ad69
  40ad93:	dec    esi
  40ad94:	mov    al,ds:0xa29c3ba
  40ad99:	xchg   ebp,eax
  40ad9a:	pop    eax
  40ad9b:	mov    edi,0x3e42a192
  40ada0:	ds xchg ecx,eax
  40ada2:	stc    
  40ada3:	es test eax,0x2099a18
  40ada9:	sub    al,0xed
  40adab:	xor    BYTE PTR [edx+0x3f],ah
  40adae:	adc    dl,dh
  40adb0:	sbb    BYTE PTR [ecx],dh
  40adb2:	rcr    BYTE PTR [ebp-0x716cc09a],cl
  40adb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adb9:	nop
  40adba:	lds    esp,FWORD PTR [esi]
  40adbc:	jb     0x40addb
  40adbe:	adc    al,0x6b
  40adc0:	pop    esp
  40adc1:	mov    al,0xe3
  40adc3:	mov    bh,0x58
  40adc5:	mov    ebx,0x978ef8de
  40adca:	jl     0x40ad9e
  40adcc:	test   al,0xec
  40adce:	jp     0x40adff
  40add0:	jns    0x40ad93
  40add2:	stc    
  40add3:	mov    WORD PTR [edx+ebp*4],?
  40add6:	jmp    0x40ade7
  40add8:	ins    BYTE PTR es:[edi],dx
  40add9:	mov    ?,WORD PTR ds:[edi+edi*2-0x4a76a143]
  40ade1:	add    esi,DWORD PTR [edi+0x58083189]
  40ade7:	xchg   esi,eax
  40ade8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ade9:	lods   eax,DWORD PTR ds:[esi]
  40adea:	xor    BYTE PTR [eax-0x46],bl
  40aded:	icebp  
  40adee:	sub    BYTE PTR [eax-0x68a64256],dl
  40adf4:	push   esi
  40adf5:	jmp    FWORD PTR [edi]
  40adf7:	xchg   DWORD PTR [eax+0x4],edx
  40adfa:	adc    edi,DWORD PTR [eax+edx*1]
  40adfd:	add    DWORD PTR [eax+ebx*8+0x129221af],esp
  40ae04:	sub    DWORD PTR [ecx-0x62ed7212],edx
  40ae0a:	xchg   si,ax
  40ae0c:	or     BYTE PTR [ecx],cl
  40ae0e:	fbstp  TBYTE PTR [esi+esi*8]
  40ae11:	push   ss
  40ae12:	jo     0x40ae1f
  40ae14:	nop
  40ae15:	add    eax,0x6653b9ef
  40ae1a:	cdq    
  40ae1b:	outs   dx,DWORD PTR ds:[esi]
  40ae1c:	or     dh,BYTE PTR [ebp+0x79]
  40ae1f:	inc    ebx
  40ae20:	js     0x40ae79
  40ae22:	addr16 mov bh,0x8b
  40ae25:	jmp    0x961e5054
  40ae2a:	arpl   WORD PTR [ecx+0x61],dx
  40ae2d:	fwait
  40ae2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae2f:	xchg   esp,eax
  40ae30:	dec    ebx
  40ae31:	inc    edx
  40ae32:	sub    al,0x34
  40ae34:	sbb    DWORD PTR [edx-0x5300691c],esp
  40ae3a:	push   ss
  40ae3b:	and    al,0xfc
  40ae3d:	sub    esi,DWORD PTR [ebx-0x215e3623]
  40ae43:	shl    DWORD PTR [esi+0x66ee984],cl
  40ae49:	cmp    DWORD PTR [edi+0x3ab2bda5],edi
  40ae4f:	push   0xe090e1f7
  40ae54:	sub    dl,BYTE PTR [edx+0x4d082e3a]
  40ae5a:	imul   esi,DWORD PTR [edi],0x66
  40ae5d:	jge    0x40ae4c
  40ae5f:	loop   0x40ae2b
  40ae61:	mov    WORD PTR [edi-0x7f326e0c],es
  40ae67:	retf   0x21d5
  40ae6a:	or     BYTE PTR [esi-0x167ac7dc],0x27
  40ae71:	sbb    eax,0x3192b8f7
  40ae76:	gs inc edx
  40ae78:	fistp  DWORD PTR [edx+0x6eb5b73f]
  40ae7e:	div    BYTE PTR [ebx+0x3e2f0a5e]
  40ae84:	push   ds
  40ae85:	or     eax,0xa84d17cd
  40ae8a:	stos   DWORD PTR es:[edi],eax
  40ae8b:	sub    dh,BYTE PTR cs:[edx-0x58738826]
  40ae92:	js     0x40ae77
  40ae94:	es retf 0x9e4
  40ae98:	loopne 0x40af0d
  40ae9a:	ins    BYTE PTR es:[edi],dx
  40ae9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae9c:	(bad)  
  40ae9d:	sub    eax,0x929938b7
  40aea2:	sub    bl,ch
  40aea4:	imul   esi,DWORD PTR [eax],0xffffffe3
  40aea7:	inc    eax
  40aea8:	inc    esi
  40aea9:	icebp  
  40aeaa:	and    dl,ch
  40aeac:	inc    edi
  40aead:	inc    edx
  40aeae:	in     al,dx
  40aeaf:	adc    al,0x51
  40aeb1:	xchg   ebx,eax
  40aeb2:	(bad)  
  40aeb4:	pop    ss
  40aeb5:	or     eax,0x739afe07
  40aeba:	mov    ecx,0x8d26c79b
  40aebf:	inc    esi
  40aec0:	mov    bl,0xff
  40aec2:	add    al,0x91
  40aec4:	xchg   esp,eax
  40aec5:	rcr    BYTE PTR [eax],cl
  40aec7:	fs ret 0x523a
  40aecb:	jno    0x40af03
  40aecd:	jp     0x40aeb2
  40aecf:	into   
  40aed0:	inc    edi
  40aed1:	add    eax,0xede455aa
  40aed6:	das    
  40aed7:	pop    edi
  40aed8:	cmp    DWORD PTR [edi-0x21],ebp
  40aedb:	add    bh,dh
  40aedd:	cld    
  40aede:	jae    0x40aea0
  40aee0:	in     eax,0xf8
  40aee2:	test   DWORD PTR [ebx-0x6c],ebx
  40aee5:	je     0x40ae96
  40aee7:	call   DWORD PTR [edi]
  40aee9:	sahf   
  40aeea:	inc    ecx
  40aeeb:	test   al,0xa3
  40aeed:	adc    eax,0xd8d15f24
  40aef2:	or     eax,ecx
  40aef4:	mov    esp,0xc0eaee45
  40aef9:	ins    DWORD PTR es:[edi],dx
  40aefa:	popa   
  40aefb:	xchg   edi,eax
  40aefc:	cmp    DWORD PTR [edi],ecx
  40aefe:	aaa    
  40aeff:	add    BYTE PTR [ecx],ch
  40af01:	loopne 0x40af71
  40af03:	push   eax
  40af04:	push   esi
  40af05:	stos   BYTE PTR es:[edi],al
  40af06:	mov    eax,ds:0xd7a19744
  40af0b:	push   es
  40af0c:	out    0x95,eax
  40af0e:	jmp    eax
  40af10:	lods   eax,DWORD PTR ds:[esi]
  40af11:	mov    cl,0x6b
  40af13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af14:	js     0x40aef7
  40af16:	and    DWORD PTR [edi],0xee0fd663
  40af1c:	pop    edi
  40af1d:	adc    eax,0x706c6972
  40af22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af23:	retf   0x4f3b
  40af26:	or     ebp,0xfa9e80af
  40af2c:	cwde   
  40af2d:	push   es
  40af2e:	dec    ecx
  40af2f:	mov    ch,BYTE PTR [eax+eax*1+0x20]
  40af33:	shl    DWORD PTR [edx],cl
  40af35:	loope  0x40aeee
  40af37:	(bad)  
  40af38:	jno    0x40af73
  40af3a:	xor    DWORD PTR [esp+ebp*4-0x445e3999],ebx
  40af41:	je     0x40af61
  40af43:	hlt    
  40af44:	jnp    0x40aeda
  40af46:	mov    fs,WORD PTR gs:0x3d5fb773
  40af4d:	and    al,al
  40af4f:	iret   
  40af50:	pop    edi
  40af51:	mov    ebx,ecx
  40af53:	dec    edi
  40af54:	inc    edx
  40af55:	xor    eax,0x43f7dc55
  40af5a:	retf   
  40af5b:	mov    bh,0xc6
  40af5d:	je     0x40af6c
  40af5f:	nop
  40af60:	pop    esp
  40af61:	jno    0x40af9a
  40af63:	jle    0x40af39
  40af65:	mov    esp,0xae844f61
  40af6a:	shr    ebp,1
  40af6c:	push   eax
  40af6d:	popf   
  40af6e:	in     eax,dx
  40af6f:	dec    ebp
  40af70:	test   BYTE PTR [edi+eiz*1],dh
  40af73:	fst    DWORD PTR [ecx]
  40af75:	ss (bad) 
  40af77:	xor    BYTE PTR [ecx],cl
  40af79:	cmp    cl,BYTE PTR [esi+ebp*4+0x5f]
  40af7d:	into   
  40af7e:	jbe    0x40af6b
  40af80:	jge    0xfe81abcd
  40af86:	sub    al,0x12
  40af88:	pop    ss
  40af89:	or     bh,BYTE PTR ds:0xf8050254
  40af8f:	fs mov edx,0x6536f588
  40af95:	inc    ebp
  40af96:	mov    eax,ds:0x45e1c7d8
  40af9b:	retf   
  40af9c:	cmp    DWORD PTR [eax+0x50],edi
  40af9f:	out    0x86,al
  40afa1:	ror    BYTE PTR [eax],0xdd
  40afa4:	pop    ecx
  40afa5:	les    esp,FWORD PTR [eax+0xb]
  40afa8:	push   ebp
  40afa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afaa:	xchg   edx,eax
  40afab:	int3   
  40afac:	dec    esi
  40afad:	xchg   edi,eax
  40afae:	jmp    0x7aa49f2f
  40afb3:	add    eax,0xd79e10d5
  40afb8:	sbb    bl,ch
  40afba:	dec    esp
  40afbb:	adc    DWORD PTR [ebp+0x2291fbca],edx
  40afc1:	push   edx
  40afc2:	scas   eax,DWORD PTR es:[edi]
  40afc3:	mov    edi,DWORD PTR [edi+0x2fdfc1a0]
  40afc9:	or     esi,DWORD PTR [ebx]
  40afcb:	(bad)  
  40afcd:	retf   
  40afce:	js     0x40afc6
  40afd0:	in     eax,0xcd
  40afd2:	je     0x40afda
  40afd4:	jl     0x40afb7
  40afd6:	stos   BYTE PTR es:[edi],al
  40afd7:	fld    QWORD PTR [ecx]
  40afd9:	mov    esp,0xd0743c09
  40afde:	lock mov al,BYTE PTR [ebp-0x80]
  40afe2:	sub    eax,edi
  40afe4:	xchg   esi,eax
  40afe5:	sbb    dh,BYTE PTR [edi-0x73]
  40afe8:	jp     0x40b020
  40afea:	jecxz  0x40afa1
  40afec:	popa   
  40afed:	data16 lahf 
  40afef:	enter  0xea95,0x10
  40aff3:	lahf   
  40aff4:	mov    dh,0x15
  40aff6:	push   ebx
  40aff7:	setg   al
  40affa:	mov    eax,0x691213d9
  40afff:	into   
  40b000:	add    BYTE PTR [ecx+0x7e9ee4c6],bh
  40b006:	rol    DWORD PTR [ebp+0x18],1
  40b009:	mov    ebx,0x1509d4ab
  40b00e:	jbe    0x40b06a
  40b010:	cli    
  40b011:	cli    
  40b012:	mov    ch,0xd8
  40b014:	ja     0x40afb0
  40b016:	sbb    cl,BYTE PTR [esi-0x4bb4ce26]
  40b01c:	and    edx,DWORD PTR [eax+0x1]
  40b01f:	out    dx,al
  40b020:	dec    ecx
  40b021:	pop    ds
  40b022:	test   bl,cl
  40b024:	or     BYTE PTR [ebx+0x58],ch
  40b027:	sub    ebx,DWORD PTR [edi+0x18936622]
  40b02d:	xor    eax,esp
  40b02f:	psllq  mm2,mm0
  40b032:	jl     0x40b03c
  40b034:	mov    al,0x51
  40b036:	dec    edi
  40b037:	ins    BYTE PTR es:[edi],dx
  40b038:	mov    esp,0x56afb84e
  40b03d:	es jle 0x40b030
  40b040:	mov    ebx,0x7964881c
  40b045:	rol    DWORD PTR [ebx],1
  40b047:	fld    DWORD PTR [ecx+0x37]
  40b04a:	frstor [edx+0x9]
  40b04d:	jmp    0x679a:0xdbb3375b
  40b054:	inc    ebx
  40b055:	stc    
  40b056:	mov    eax,ds:0x66b0f3f
  40b05b:	inc    eax
  40b05c:	and    DWORD PTR [ebx+0x917c0d5],0xffffff88
  40b063:	mov    WORD PTR [esi],fs
  40b065:	fnstcw WORD PTR [edi]
  40b067:	test   DWORD PTR ds:0xe6910225,edx
  40b06d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b06e:	push   esp
  40b06f:	add    DWORD PTR [esi+0x1a],0x568276fc
  40b076:	jnp    0x40b00a
  40b078:	mul    BYTE PTR ds:0x8265992e
  40b07e:	stos   DWORD PTR es:[edi],eax
  40b07f:	ins    DWORD PTR es:[edi],dx
  40b080:	push   ecx
  40b081:	push   ebx
  40b082:	xchg   ecx,eax
  40b083:	sub    DWORD PTR [ecx+0x4ddb764d],0x1d7e994f
  40b08d:	sbb    eax,0x6d8cdfb4
  40b092:	test   BYTE PTR [esi],bl
  40b094:	push   ecx
  40b095:	adc    DWORD PTR [esi],ebp
  40b097:	icebp  
  40b098:	sbb    ebx,DWORD PTR fs:[eax]
  40b09b:	ss repnz xchg ebp,eax
  40b09e:	test   BYTE PTR [edi],dl
  40b0a0:	ds jmp 0xc4d8:0xa4315672
  40b0a8:	js     0x40b078
  40b0aa:	adc    esi,DWORD PTR [edx]
  40b0ac:	outs   dx,BYTE PTR ds:[esi]
  40b0ad:	mov    ds:0x64aa892,al
  40b0b2:	cli    
  40b0b3:	call   0x1eab1a47
  40b0b8:	jns    0x40b098
  40b0ba:	(bad)  
  40b0bc:	pop    eax
  40b0bd:	cld    
  40b0be:	xchg   ebx,eax
  40b0c0:	mov    edx,0x3ccfdc6e
  40b0c5:	rcr    BYTE PTR [edx],1
  40b0c7:	push   0x5f
  40b0c9:	in     al,0xaa
  40b0cb:	bound  esp,QWORD PTR [ecx]
  40b0cd:	and    BYTE PTR [ecx+0x7a],dh
  40b0d0:	or     ecx,edi
  40b0d2:	cmc    
  40b0d3:	sbb    esp,edi
  40b0d5:	adc    DWORD PTR [ecx+0x40],esi
  40b0d8:	mov    ah,0xe
  40b0da:	fistp  WORD PTR [edi+0x74ced88d]
  40b0e0:	repnz mov ds:0xdb44828a,al
  40b0e6:	and    DWORD PTR [esi+0x5746cea7],ebp
  40b0ec:	jmp    0x40b0e5
  40b0ee:	inc    edx
  40b0ef:	mov    eax,0xf5acb29d
  40b0f5:	mov    edx,0x68cc8276
  40b0fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0fb:	test   DWORD PTR [ebp+0x132541a3],0x11077e75
  40b105:	add    cl,al
  40b107:	dec    esi
  40b108:	xor    eax,0xcae878c6
  40b10d:	jmp    0x4a84a02e
  40b112:	fs cbw 
  40b115:	out    0xe1,eax
  40b117:	lock nop
  40b119:	or     edx,edx
  40b11b:	or     ah,bl
  40b11d:	popa   
  40b11e:	add    BYTE PTR [ecx+0x1e],dh
  40b121:	jge    0x40b176
  40b123:	in     eax,dx
  40b124:	pop    es
  40b125:	les    eax,FWORD PTR gs:[edi+0x2e]
  40b129:	imul   ebx,DWORD PTR [edx-0x268c5810],0x7a429124
  40b133:	push   edi
  40b134:	ret    
  40b135:	jb     0x40b0e7
  40b137:	or     al,0x8a
  40b139:	sti    
  40b13a:	pop    ecx
  40b13b:	nop
  40b13c:	cmc    
  40b13d:	ror    DWORD PTR [esi-0x1dad4d4e],1
  40b143:	mov    BYTE PTR [ebx-0x46cd3bd1],ah
  40b149:	add    DWORD PTR ds:0x67ce442,0x60777f58
  40b153:	sub    bh,ah
  40b155:	scas   al,BYTE PTR es:[edi]
  40b156:	popf   
  40b157:	stos   DWORD PTR es:[edi],eax
  40b158:	retf   
  40b159:	fld    st(0)
  40b15b:	cs iret 
  40b15d:	in     al,0x7c
  40b15f:	pop    esi
  40b160:	xchg   esi,eax
  40b161:	sbb    ecx,edi
  40b163:	pop    esi
  40b164:	cld    
  40b165:	push   ebx
  40b166:	inc    ecx
  40b167:	fs ret 
  40b169:	jmp    0x7c52:0x5cb2670f
  40b170:	dec    BYTE PTR ds:0x4ec98e5d
  40b176:	jne    0x40b1c4
  40b178:	push   cs
  40b179:	lods   eax,DWORD PTR ds:[esi]
  40b17a:	xchg   ebx,eax
  40b17b:	loop   0x40b106
  40b17d:	adc    eax,0xc7028011
  40b182:	jns    0x40b196
  40b184:	retf   0xfaf7
  40b187:	pop    esp
  40b188:	(bad)  
  40b189:	push   esi
  40b18a:	popf   
  40b18b:	sub    al,0xc2
  40b18d:	pop    es
  40b18e:	push   ebp
  40b18f:	push   ss
  40b190:	cld    
  40b191:	cwde   
  40b192:	mov    ch,0xe9
  40b194:	in     al,0xf0
  40b196:	rcl    BYTE PTR [esi-0x80],0xa
  40b19a:	add    dl,BYTE PTR [edi+0x4f0c0f42]
  40b1a0:	inc    esi
  40b1a1:	int    0x98
  40b1a3:	mov    ebx,0x3f1f074a
  40b1a8:	push   esi
  40b1a9:	inc    edi
  40b1aa:	and    DWORD PTR [ebx-0x4ae38d6e],eax
  40b1b0:	jb     0x40b1af
  40b1b2:	es sbb eax,0x3aeecd3c
  40b1b8:	test   al,0xb2
  40b1ba:	or     ch,BYTE PTR [esi-0x781d9bc2]
  40b1c0:	or     DWORD PTR [ecx-0x40f8fd59],eax
  40b1c6:	jecxz  0x40b1ea
  40b1c8:	or     edi,DWORD PTR [esi-0x4c]
  40b1cb:	rcl    DWORD PTR [ebx+0x7ecfda80],cl
  40b1d1:	lods   al,BYTE PTR ds:[esi]
  40b1d2:	ror    BYTE PTR [esp+eiz*4],cl
  40b1d5:	into   
  40b1d6:	and    ch,ch
  40b1d8:	sbb    dl,dl
  40b1da:	adc    eax,0x7f9cf79e
  40b1df:	push   0xffffffc0
  40b1e1:	call   0x1e20:0xe59ac2af
  40b1e8:	cmp    esi,DWORD PTR [eax+esi*2]
  40b1eb:	(bad)  
  40b1ec:	pop    edx
  40b1ed:	stos   BYTE PTR es:[edi],al
  40b1ee:	mov    esp,0x7dccdc1d
  40b1f3:	cmp    al,0x4a
  40b1f5:	fs cmp dh,bh
  40b1f8:	pusha  
  40b1f9:	push   es
  40b1fa:	inc    edx
  40b1fb:	jmp    0x40b18b
  40b1fd:	push   0xb4fd7916
  40b202:	repnz jmp 0x4e9a:0xf0f54fb
  40b20a:	mov    es,WORD PTR [edx+0x42768755]
  40b210:	enter  0xa887,0x71
  40b214:	mov    esp,0x551d43f6
  40b219:	stos   DWORD PTR es:[edi],eax
  40b21a:	cdq    
  40b21b:	sbb    bl,BYTE PTR [ecx+0x62]
  40b21e:	into   
  40b21f:	inc    edi
  40b220:	and    ah,BYTE PTR [esi-0x3e79aae0]
  40b226:	push   ebp
  40b227:	xor    al,0x10
  40b229:	call   0x4c8c4147
  40b22e:	mov    BYTE PTR [edi],0x6d
  40b231:	jb     0x40b1cf
  40b233:	cwde   
  40b234:	and    eax,0x63f0fe83
  40b239:	jmp    0xf62d:0x4d9817f4
  40b240:	cli    
  40b241:	jne    0x40b1d9
  40b243:	nop
  40b244:	fs pop eax
  40b246:	iret   
  40b247:	jb     0x40b2ac
  40b249:	or     ebp,ebp
  40b24b:	imul   esp,DWORD PTR ds:0x9cf7f91c,0x83dc4822
  40b255:	ret    0x2239
  40b258:	sub    al,0x88
  40b25a:	and    eax,0x793ab4b0
  40b25f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b260:	leave  
  40b261:	lock adc eax,0xa26cbb54
  40b267:	xchg   DWORD PTR [edx],esi
  40b269:	adc    al,0xaf
  40b26b:	retf   0x391d
  40b26e:	shl    BYTE PTR [ebx+ebp*1],1
  40b271:	popf   
  40b272:	out    dx,eax
  40b273:	jb     0x40b26f
  40b275:	lahf   
  40b276:	outs   dx,BYTE PTR ds:[esi]
  40b277:	pop    eax
  40b278:	dec    ecx
  40b279:	sub    BYTE PTR [edx],0x54
  40b27c:	out    dx,al
  40b27d:	(bad)  
  40b27e:	loopne 0x40b2d8
  40b280:	or     dl,dl
  40b282:	call   0x76132bf5
  40b287:	ins    DWORD PTR es:[edi],dx
  40b288:	stos   DWORD PTR es:[edi],eax
  40b289:	jg     0x40b246
  40b28b:	out    0x10,eax
  40b28d:	enter  0x708,0x7a
  40b291:	cld    
  40b292:	(bad)  
  40b293:	(bad)  
  40b294:	jp     0x40b2a4
  40b296:	pop    esi
  40b297:	lds    ebp,FWORD PTR [ebp+0x3e9d75f3]
  40b29d:	cmove  esi,DWORD PTR ds:0x23f130bd
  40b2a4:	jge    0x40b2f5
  40b2a6:	retf   0xc9c4
  40b2a9:	in     eax,0xe4
  40b2ab:	inc    edx
  40b2ac:	adc    edi,esp
  40b2ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2af:	jne    0x40b284
  40b2b1:	loope  0x40b256
  40b2b3:	test   ebp,ebp
  40b2b5:	mov    esp,0xb76de14f
  40b2ba:	arpl   WORD PTR [edx],bp
  40b2bc:	adc    ebp,DWORD PTR [ecx+0xa]
  40b2bf:	xor    ebx,0xffffff8a
  40b2c2:	std    
  40b2c3:	test   al,0x6d
  40b2c5:	xchg   esp,eax
  40b2c6:	xchg   esi,eax
  40b2c7:	push   esi
  40b2c8:	jle    0x40b342
  40b2ca:	sbb    BYTE PTR [esi-0x8b68b76],0x7e
  40b2d1:	or     DWORD PTR ss:[ebp-0x38],eax
  40b2d5:	and    BYTE PTR [edx+0x75186530],dl
  40b2db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2dc:	mov    bl,0x52
  40b2de:	aam    0x9e
  40b2e0:	stos   BYTE PTR es:[edi],al
  40b2e1:	pop    ebp
  40b2e2:	mov    bh,0x24
  40b2e4:	or     DWORD PTR [eax+0x22],ecx
  40b2e7:	xor    dh,ch
  40b2e9:	adc    dl,BYTE PTR [ecx+0x5f]
  40b2ec:	pusha  
  40b2ed:	mov    bl,0xb7
  40b2ef:	das    
  40b2f0:	mov    bl,0xc7
  40b2f2:	out    0x84,eax
  40b2f4:	push   eax
  40b2f5:	jo     0x40b337
  40b2f7:	es push 0x34
  40b2fa:	xchg   edx,eax
  40b2fb:	xchg   sp,ax
  40b2fd:	mov    ds:0xbf5d2159,al
  40b302:	dec    esi
  40b303:	and    al,0x84
  40b305:	mov    ecx,0x6f8eb092
  40b30a:	sub    esp,DWORD PTR [ebp-0x63]
  40b30d:	xor    BYTE PTR [edi],ch
  40b30f:	jb     0x40b2f1
  40b311:	or     bl,BYTE PTR [esi+ecx*1-0x4b3e674b]
  40b318:	xchg   edi,eax
  40b319:	inc    eax
  40b31a:	cmc    
  40b31b:	loop   0x40b2c8
  40b31d:	xor    BYTE PTR [eax+0x69fac4d9],bh
  40b323:	popf   
  40b324:	int    0xca
  40b326:	ja     0x40b2bd
  40b328:	jmp    0xff55f944
  40b32d:	jne    0x40b2f3
  40b32f:	icebp  
  40b330:	push   0xffffffb3
  40b332:	add    DWORD PTR [edx-0x14b9abd1],0xffffff87
  40b339:	dec    ebx
  40b33a:	pop    ss
  40b33b:	or     bh,BYTE PTR [edx-0x4ce5e5ea]
  40b341:	pop    ebp
  40b342:	sub    ch,BYTE PTR [esi]
  40b344:	pop    es
  40b345:	loopne 0x40b2fb
  40b347:	sbb    BYTE PTR [esp+esi*4+0x1a41935e],0x5e
  40b34f:	popa   
  40b350:	xlat   BYTE PTR ds:[ebx]
  40b351:	jbe    0x40b2ea
  40b353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b354:	out    dx,al
  40b355:	and    al,0x65
  40b357:	mov    eax,0x37a9dd55
  40b35c:	scas   al,BYTE PTR es:[edi]
  40b35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b35e:	shl    BYTE PTR [esp+eax*4+0x8],0x69
  40b363:	leave  
  40b364:	push   es
  40b365:	retf   
  40b366:	xchg   ebp,eax
  40b367:	aaa    
  40b368:	test   eax,0xa3b08582
  40b36d:	out    dx,eax
  40b36e:	lock mov edi,0x975b2d96
  40b374:	cwde   
  40b375:	arpl   sp,sp
  40b377:	call   0xa7498751
  40b37c:	out    0x11,eax
  40b37e:	test   al,0xb3
  40b380:	dec    ebp
  40b381:	push   esi
  40b382:	sub    al,0x5
  40b384:	lods   eax,DWORD PTR ds:[esi]
  40b385:	aaa    
  40b386:	mov    edi,0x26b0ce1
  40b38b:	mov    gs,WORD PTR [edx-0x2f]
  40b38e:	lahf   
  40b38f:	add    DWORD PTR [ecx+ecx*8],ebp
  40b392:	dec    esi
  40b393:	or     al,0x4d
  40b395:	or     ebp,DWORD PTR [ebx]
  40b397:	cmp    al,0x7b
  40b399:	xchg   edx,eax
  40b39a:	(bad)  
  40b39b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b39c:	gs hlt 
  40b39e:	xor    al,BYTE PTR [eax+esi*4]
  40b3a1:	or     bl,ah
  40b3a3:	jl     0x40b36a
  40b3a5:	add    ch,0x4a
  40b3a8:	mov    ebp,0x79367a29
  40b3ad:	sahf   
  40b3ae:	push   esi
  40b3af:	in     eax,dx
  40b3b0:	cmp    bl,dh
  40b3b2:	mov    esp,0x2a3014b5
  40b3b7:	ror    DWORD PTR ds:0x6958c70,0xcf
  40b3be:	mov    eax,DWORD PTR [ecx]
  40b3c0:	and    eax,0x851d3a02
  40b3c5:	mov    esp,0xdbea959a
  40b3ca:	inc    esi
  40b3cb:	loop   0x40b3e4
  40b3cd:	ins    BYTE PTR es:[edi],dx
  40b3ce:	xchg   esp,eax
  40b3cf:	xlat   BYTE PTR ds:[ebx]
  40b3d0:	and    BYTE PTR [ebx+ecx*1+0x53],ah
  40b3d4:	adc    al,0xd9
  40b3d6:	pop    eax
  40b3d7:	cmp    eax,0xffffffc3
  40b3da:	xor    ch,BYTE PTR [ecx+0x41f19185]
  40b3e0:	jecxz  0x40b38c
  40b3e2:	repz in al,dx
  40b3e4:	cli    
  40b3e5:	ds test eax,0x56eb871f
  40b3eb:	and    BYTE PTR [esi-0x1944c910],bh
  40b3f1:	test   eax,0xe284a123
  40b3f6:	outs   dx,DWORD PTR ds:[esi]
  40b3f7:	fdivr  DWORD PTR [ebp-0x15b214db]
  40b3fd:	xor    BYTE PTR [ebp+esi*8+0x4],dl
  40b401:	(bad)  
  40b402:	leave  
  40b403:	mov    edx,0xdcefcb2c
  40b408:	mov    WORD PTR [esi+0x2e6f92b5],?
  40b40e:	or     eax,0xcdb8b357
  40b413:	and    edi,DWORD PTR [esi-0x6b2281b5]
  40b419:	jno    0x40b42a
  40b41b:	call   0x1f73:0x9c2635ac
  40b422:	jge    0x40b3f6
  40b424:	xchg   edi,eax
  40b425:	xchg   ebx,eax
  40b426:	clc    
  40b427:	aas    
  40b428:	lea    eax,[ebx+0x3b980a5e]
  40b42e:	jge    0x40b4ad
  40b430:	or     al,0x58
  40b432:	out    dx,eax
  40b433:	jne    0x40b497
  40b435:	fmul   DWORD PTR [esi]
  40b437:	int3   
  40b438:	or     dh,bl
  40b43a:	in     eax,dx
  40b43b:	fcomp  QWORD PTR [edx+0x7b57976d]
  40b441:	mov    BYTE PTR [edi-0x40],ah
  40b444:	xor    eax,0x196d9881
  40b449:	xor    al,0x7b
  40b44b:	mov    ebp,DWORD PTR [eax+0x6430627b]
  40b451:	ror    BYTE PTR [edx],0x23
  40b454:	cmp    BYTE PTR [ecx+edx*2+0x71a24d09],bl
  40b45b:	cli    
  40b45c:	cmp    DWORD PTR [edx],esp
  40b45e:	sahf   
  40b45f:	inc    edi
  40b460:	nop
  40b461:	mov    ecx,0x5cc05fa5
  40b466:	hlt    
  40b467:	dec    esi
  40b468:	mov    al,ds:0x2369647b
  40b46d:	sbb    BYTE PTR [esi+0x2],ah
  40b470:	xchg   ecx,eax
  40b471:	imul   edi,DWORD PTR [eax+0x4ca60bec],0xffffffaf
  40b478:	fild   DWORD PTR [ecx-0x2c]
  40b47b:	pop    ecx
  40b47c:	inc    edx
  40b47d:	mov    eax,0xc98a8588
  40b482:	dec    edi
  40b483:	clc    
  40b484:	dec    ecx
  40b485:	retf   0x3a11
  40b488:	xor    ecx,ebx
  40b48a:	lahf   
  40b48b:	outs   dx,DWORD PTR ds:[esi]
  40b48c:	push   ebx
  40b48d:	in     al,dx
  40b48e:	mov    bl,0xc0
  40b490:	gs cmp al,0x87
  40b493:	sbb    eax,0x8965080c
  40b498:	xor    esi,edx
  40b49a:	inc    esi
  40b49b:	mov    DWORD PTR [edx-0x234b0183],esp
  40b4a1:	or     al,0x8b
  40b4a3:	leave  
  40b4a4:	je     0x40b475
  40b4a6:	scas   al,BYTE PTR es:[edi]
  40b4a7:	and    dl,BYTE PTR [eax]
  40b4a9:	add    BYTE PTR [edx-0x20],bh
  40b4ac:	shr    DWORD PTR [ebx+0x7e496655],cl
  40b4b2:	pop    esi
  40b4b3:	sbb    DWORD PTR [eax+edx*1-0x7],edx
  40b4b7:	out    0xfe,eax
  40b4b9:	inc    esi
  40b4ba:	addr16 fwait
  40b4bc:	popf   
  40b4bd:	mov    al,0x7a
  40b4bf:	addr16 mov ds:0x27bb,eax
  40b4c3:	add    ebp,ebx
  40b4c5:	sub    esp,esi
  40b4c7:	xchg   ebx,eax
  40b4c8:	mov    ecx,0xc1ccf239
  40b4cd:	push   cs
  40b4ce:	shl    esp,cl
  40b4d0:	ins    BYTE PTR es:[edi],dx
  40b4d1:	daa    
  40b4d2:	mov    ebp,edi
  40b4d4:	jmp    0x40b53c
  40b4d6:	fild   WORD PTR ds:0x4eda7bb5
  40b4dc:	mov    eax,ds:0x2c763934
  40b4e1:	ja     0x40b4f7
  40b4e3:	xor    BYTE PTR [esi+0x436f7785],al
  40b4e9:	xchg   esi,eax
  40b4ea:	div    DWORD PTR [edx]
  40b4ec:	push   es
  40b4ed:	fcomi  st,st(5)
  40b4ef:	pop    edx
  40b4f0:	adc    eax,0xbe745167
  40b4f5:	in     eax,dx
  40b4f6:	sub    ecx,edx
  40b4f8:	dec    esp
  40b4f9:	pop    edi
  40b4fa:	mov    ch,0x71
  40b4fc:	fwait
  40b4fd:	es std 
  40b4ff:	and    esp,esp
  40b501:	cmp    DWORD PTR [ecx+0x246bbf31],0xffffffac
  40b508:	(bad)  
  40b509:	dec    ebx
  40b50a:	pop    eax
  40b50b:	cmp    ah,dh
  40b50d:	pop    edx
  40b50e:	mov    al,0xb1
  40b510:	xchg   ebp,eax
  40b511:	outs   dx,BYTE PTR ds:[esi]
  40b512:	jl     0x40b532
  40b514:	fnstcw WORD PTR [edx-0x1c]
  40b517:	dec    esi
  40b518:	sbb    BYTE PTR cs:[eax+eax*4+0x73a0a9b8],dl
  40b520:	xchg   ecx,eax
  40b521:	fcmovnu st,st(6)
  40b523:	lock js 0x40b4c7
  40b526:	cmp    BYTE PTR [ecx],dl
  40b528:	test   BYTE PTR [ebx-0x4da05ee8],dh
  40b52e:	mov    bh,0xa6
  40b530:	xchg   edx,eax
  40b531:	jge    0x40b4e0
  40b533:	dec    ebx
  40b534:	popa   
  40b535:	or     al,0xb1
  40b537:	mov    esp,0xad79915a
  40b53c:	dec    ecx
  40b53d:	out    dx,al
  40b53e:	jmp    0xc7585d7e
  40b543:	dec    edx
  40b544:	or     ebx,DWORD PTR cs:[eax]
  40b547:	ja     0x40b50e
  40b549:	or     DWORD PTR [ecx],ecx
  40b54b:	fisub  WORD PTR [eax]
  40b54d:	cli    
  40b54e:	test   DWORD PTR [ebp+0x3726f348],esi
  40b554:	push   ebx
  40b555:	jl     0x40b50a
  40b557:	pop    edi
  40b558:	sub    BYTE PTR [ebx],al
  40b55a:	pop    eax
  40b55b:	sbb    eax,0x87861279
  40b560:	and    al,0x81
  40b562:	pop    ds
  40b563:	lods   eax,DWORD PTR ds:[esi]
  40b564:	stos   BYTE PTR es:[edi],al
  40b565:	inc    ebp
  40b566:	cmp    eax,0x181d519a
  40b56b:	adc    DWORD PTR [ebx],0x59
  40b56e:	mov    eax,ds:0xe2dd358d
  40b573:	pop    edi
  40b574:	aad    0x58
  40b576:	popa   
  40b577:	and    DWORD PTR [eax],esi
  40b579:	pop    ebx
  40b57a:	test   dh,bl
  40b57c:	push   ebx
  40b57d:	(bad)  
  40b57e:	ins    DWORD PTR es:[edi],dx
  40b57f:	into   
  40b580:	in     eax,dx
  40b581:	(bad)  
  40b582:	jbe    0x40b5bd
  40b584:	cwde   
  40b585:	dec    edi
  40b586:	mov    dh,0xb0
  40b588:	and    al,0xdf
  40b58a:	popa   
  40b58b:	push   ebx
  40b58c:	jp     0x40b575
  40b58e:	push   esp
  40b58f:	push   ebp
  40b590:	jne    0x40b550
  40b592:	pop    edi
  40b593:	loopne 0x40b5ab
  40b595:	xor    cl,dl
  40b597:	in     eax,dx
  40b598:	jecxz  0x40b5e8
  40b59a:	jmp    0xfe19:0x7f08e878
  40b5a1:	mov    dl,al
  40b5a3:	sub    DWORD PTR [esp+eax*2],esi
  40b5a6:	and    al,0x29
  40b5a8:	or     bl,dh
  40b5aa:	outs   dx,DWORD PTR ds:[esi]
  40b5ab:	mov    bl,BYTE PTR [edi]
  40b5ad:	pop    edx
  40b5ae:	pop    ebp
  40b5af:	sbb    al,0x96
  40b5b1:	mov    dl,0x48
  40b5b3:	mov    edi,esi
  40b5b5:	leave  
  40b5b6:	add    cl,BYTE PTR [ebx+0x53]
  40b5b9:	adc    al,0x48
  40b5bb:	pop    es
  40b5bc:	pop    edx
  40b5bd:	or     BYTE PTR [ebp+0x30e48ca7],ah
  40b5c3:	cli    
  40b5c4:	push   es
  40b5c5:	jns    0x40b59d
  40b5c7:	and    al,0x13
  40b5c9:	pop    esp
  40b5ca:	ret    0x5dc4
  40b5cd:	xor    esi,DWORD PTR [ebx+0x5]
  40b5d0:	daa    
  40b5d1:	add    ebp,edi
  40b5d3:	sbb    eax,0xbd4ec84c
  40b5d8:	out    dx,al
  40b5d9:	shl    DWORD PTR [eax+0x3],0xb0
  40b5dd:	inc    BYTE PTR [edi-0x54f04236]
  40b5e3:	hlt    
  40b5e4:	out    0x75,al
  40b5e6:	shl    ch,cl
  40b5e8:	cmp    al,0x15
  40b5ea:	ds aas 
  40b5ec:	mov    al,ds:0xad917cbd
  40b5f1:	or     al,0x1a
  40b5f3:	jne    0x40b61a
  40b5f5:	mov    edi,0xcb7d622e
  40b5fa:	pop    edx
  40b5fb:	dec    al
  40b5fd:	cdq    
  40b5fe:	pop    esi
  40b5ff:	pop    esi
  40b600:	(bad)  
  40b601:	lock call 0xa9c9:0xc12be0a
  40b609:	repz mov edx,DWORD PTR [ecx]
  40b60c:	or     eax,0x83c2b224
  40b611:	mov    al,0xe9
  40b613:	cmp    ebp,DWORD PTR [eax]
  40b615:	inc    ecx
  40b616:	icebp  
  40b617:	pop    esp
  40b618:	inc    ecx
  40b619:	xchg   edx,eax
  40b61a:	inc    ebx
  40b61b:	stos   BYTE PTR es:[edi],al
  40b61c:	sbb    al,0xf4
  40b61e:	or     esp,DWORD PTR [esi]
  40b620:	std    
  40b621:	jae    0x40b637
  40b623:	or     BYTE PTR [ecx-0x31e9ee55],0x5b
  40b62a:	ret    
  40b62b:	mov    ebp,0x8c17bbb9
  40b630:	inc    esp
  40b631:	sbb    dh,BYTE PTR [edx-0x5a]
  40b634:	sub    eax,0xe66e1d30
  40b639:	cs pop es
  40b63b:	push   esi
  40b63c:	mov    BYTE PTR [ebx+0x24],bh
  40b63f:	scas   eax,DWORD PTR es:[edi]
  40b640:	xor    eax,0x3d22ffd
  40b645:	scas   al,BYTE PTR es:[edi]
  40b646:	add    BYTE PTR [ebx+0x3457bc9b],bl
  40b64c:	test   BYTE PTR [ebp-0x4e41bc47],dl
  40b652:	or     DWORD PTR [ebx-0x108a5f7c],ebp
  40b658:	inc    ebx
  40b659:	sahf   
  40b65a:	xchg   ebp,eax
  40b65b:	fwait
  40b65c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b65d:	pop    ecx
  40b65e:	fist   WORD PTR [esi+eiz*4]
  40b661:	cld    
  40b662:	inc    eax
  40b663:	xchg   esi,eax
  40b664:	cmp    eax,0x9421ff10
  40b669:	ins    DWORD PTR es:[edi],dx
  40b66a:	shl    dl,1
  40b66c:	mov    ds:0x94f9090b,eax
  40b671:	push   esp
  40b672:	mov    al,ds:0x665f7ed2
  40b677:	rcr    DWORD PTR [esi],1
  40b679:	xor    edx,DWORD PTR [ecx+edx*4-0x3d3986d5]
  40b680:	int3   
  40b681:	dec    edx
  40b682:	push   edi
  40b683:	jo     0x40b643
  40b685:	(bad)  
  40b686:	push   eax
  40b687:	adc    DWORD PTR [ebp+ecx*4-0x76],ebp
  40b68b:	mov    eax,ds:0x58e704cf
  40b690:	out    0x71,al
  40b692:	jmp    0x3f5bfc6f
  40b697:	jnp    0x40b6dc
  40b699:	xchg   ecx,eax
  40b69a:	pop    ecx
  40b69b:	jecxz  0x40b6d9
  40b69d:	lock push es
  40b69f:	and    al,0xce
  40b6a1:	xchg   ebx,eax
  40b6a2:	bound  edi,QWORD PTR [edx-0x49ba5377]
  40b6a8:	push   ds
  40b6a9:	xor    al,0x47
  40b6ab:	out    dx,eax
  40b6ac:	scas   al,BYTE PTR es:[edi]
  40b6ad:	fsub   QWORD PTR [ebx-0x1f]
  40b6b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6b1:	and    eax,0xa617d126
  40b6b6:	(bad)  
  40b6b7:	out    0x40,eax
  40b6b9:	mov    al,ds:0x1cb58d1
  40b6be:	dec    ecx
  40b6bf:	pop    ecx
  40b6c0:	pop    es
  40b6c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6c2:	adc    edi,0xdd39b1ba
  40b6c8:	mov    ebp,DWORD PTR [ebx-0x34]
  40b6cb:	enter  0x5cfa,0x9b
  40b6cf:	dec    ch
  40b6d1:	xchg   ecx,eax
  40b6d2:	mov    bh,BYTE PTR [ebx]
  40b6d4:	inc    eax
  40b6d5:	mov    ebx,0xda04a0cf
  40b6da:	fisttp DWORD PTR [esi+0x3d9938d9]
  40b6e0:	pop    ds
  40b6e1:	lea    eax,[eax+0x34d42af6]
  40b6e7:	pop    ds
  40b6e8:	adc    eax,0xf23ca0de
  40b6ed:	and    BYTE PTR [esi+0x1a51c507],dl
  40b6f3:	xchg   edi,eax
  40b6f4:	mov    esp,0xfaaec82e
  40b6f9:	push   es
  40b6fa:	or     al,0x41
  40b6fc:	mov    bl,0x27
  40b6fe:	jge    0x40b6be
  40b700:	(bad)  
  40b701:	retf   
  40b702:	sbb    eax,0xd6a15190
  40b707:	push   ds
  40b708:	fcom   QWORD PTR [ebx+0x24fad39a]
  40b70e:	inc    eax
  40b70f:	in     al,dx
  40b710:	stc    
  40b711:	dec    ebp
  40b712:	jbe    0x40b758
  40b714:	clc    
  40b715:	pop    eax
  40b716:	shl    DWORD PTR ds:0x2210d9e,0x0
  40b71d:	sub    al,0x43
  40b71f:	or     eax,0x106541bb
  40b724:	repz mov dh,0xed
  40b727:	out    dx,eax
  40b728:	loope  0x40b6c1
  40b72a:	mov    bl,bh
  40b72c:	jno    0x40b6f9
  40b72e:	ffreep st(0)
  40b730:	jbe    0x40b764
  40b732:	sub    al,0xe4
  40b734:	push   esp
  40b735:	aas    
  40b736:	sbb    al,0x6a
  40b738:	pop    es
  40b739:	jl     0x40b772
  40b73b:	add    al,BYTE PTR [ecx]
  40b73d:	cld    
  40b73e:	or     DWORD PTR [eax-0x5d],0xd5a0e85c
  40b745:	or     eax,0x44c423e0
  40b74a:	adc    edx,eax
  40b74c:	call   0xe6f7:0x4acd546a
  40b753:	mov    eax,0x4d24d43b
  40b758:	imul   ebx,DWORD PTR [edx],0x38
  40b75b:	mov    eax,0xd6b4aa81
  40b760:	aad    0xbe
  40b762:	aad    0xef
  40b764:	dec    ebx
  40b765:	push   cs
  40b766:	and    DWORD PTR [eax],ebx
  40b768:	in     eax,0x6
  40b76a:	ss js  0x40b7a9
  40b76d:	scas   eax,DWORD PTR es:[edi]
  40b76e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b76f:	mov    edi,0xe908b82c
  40b774:	jo     0x40b795
  40b776:	mov    BYTE PTR [edi+ebp*8],dh
  40b779:	xlat   BYTE PTR ds:[ebx]
  40b77a:	ins    DWORD PTR es:[edi],dx
  40b77b:	and    cl,BYTE PTR [edi+0x64]
  40b77e:	push   ss
  40b77f:	sbb    ch,bl
  40b781:	fcom   DWORD PTR [ebx-0x3e]
  40b784:	in     al,0xbb
  40b786:	sti    
  40b787:	fisttp DWORD PTR [ebp+0x1d22144d]
  40b78d:	pop    fs
  40b78f:	out    0x52,eax
  40b791:	ret    0xc082
  40b794:	cmc    
  40b795:	hlt    
  40b796:	pop    esp
  40b797:	addr16 pxor mm5,mm0
  40b79b:	int    0x1c
  40b79d:	adc    BYTE PTR [edi-0x1132e51f],ah
  40b7a3:	loopne 0x40b824
  40b7a5:	push   ss
  40b7a6:	mov    edx,ebx
  40b7a8:	mov    bl,0x1
  40b7aa:	adc    al,0x70
  40b7ac:	pop    ss
  40b7ad:	loope  0x40b810
  40b7af:	pop    ecx
  40b7b0:	mov    esp,esp
  40b7b2:	mov    cl,0xa8
  40b7b4:	inc    eax
  40b7b5:	dec    ebx
  40b7b6:	jle    0x40b7c6
  40b7b8:	or     al,0x2
  40b7ba:	or     al,0xd8
  40b7bc:	mov    dh,0xf1
  40b7be:	call   0x8f557ee9
  40b7c3:	lods   eax,DWORD PTR ds:[esi]
  40b7c4:	sub    dh,BYTE PTR [ebx]
  40b7c6:	cmp    ah,dl
  40b7c8:	cs sub ebp,ebx
  40b7cb:	cmc    
  40b7cc:	loope  0x40b783
  40b7ce:	push   ecx
  40b7cf:	sub    dh,BYTE PTR [ebx-0x2794429f]
  40b7d5:	mov    ebp,0x14b61e0a
  40b7da:	adc    BYTE PTR [edx],ch
  40b7dc:	cs in  eax,dx
  40b7de:	fdivr  st,st(2)
  40b7e0:	in     eax,dx
  40b7e1:	sahf   
  40b7e2:	in     al,0xc8
  40b7e4:	cmp    edi,DWORD PTR [edx]
  40b7e6:	ins    DWORD PTR es:[edi],dx
  40b7e7:	(bad)  
  40b7e8:	test   eax,0x91855359
  40b7ed:	sub    BYTE PTR [eax],bl
  40b7ef:	pop    esp
  40b7f0:	add    al,0x89
  40b7f2:	push   0xb60e2fa6
  40b7f7:	inc    edi
  40b7f8:	ins    DWORD PTR es:[edi],dx
  40b7f9:	pop    esp
  40b7fa:	mov    dh,0xd
  40b7fc:	arpl   di,bx
  40b7fe:	ffree  st(4)
  40b800:	and    eax,eax
  40b802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b803:	inc    edi
  40b804:	inc    ebx
  40b805:	rol    dl,1
  40b807:	imul   esp,edx,0xffffffb0
  40b80a:	fdivp  st(1),st
  40b80c:	aaa    
  40b80d:	pop    ss
  40b80e:	inc    eax
  40b80f:	pop    esi
  40b810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b811:	dec    ebx
  40b812:	pop    ss
  40b813:	add    ecx,ebp
  40b815:	pop    esp
  40b816:	mov    ebx,0xfd356ee0
  40b81b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b81c:	adc    ecx,DWORD PTR [esi+ebx*4-0xf5aa40e]
  40b823:	pop    ecx
  40b824:	stos   DWORD PTR es:[edi],eax
  40b825:	lock xchg ecx,eax
  40b827:	(bad)  
  40b828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b829:	js     0x40b7d1
  40b82b:	call   DWORD PTR [ebx]
  40b82d:	test   DWORD PTR [ebx-0x4d],esi
  40b830:	add    bh,BYTE PTR [eax-0x286e39ea]
  40b836:	xchg   edx,eax
  40b837:	mov    ds:0x8f690601,eax
  40b83c:	and    al,0x19
  40b83e:	inc    eax
  40b83f:	(bad)  
  40b840:	dec    edx
  40b841:	sbb    DWORD PTR [eax+0x4c],0x958e72fb
  40b848:	call   0x24b0:0x4bb2ae2
  40b84f:	xchg   ebp,eax
  40b850:	cmp    al,0x9c
  40b852:	cmp    ch,BYTE PTR [edi]
  40b854:	data16 adc BYTE PTR [edi-0x1a1ab2c0],dl
  40b85b:	push   0xba20fcef
  40b860:	fmul   QWORD PTR [eax+0x2b]
  40b863:	mov    eax,ds:0xcd9afc4a
  40b868:	mov    WORD PTR [edx],es
  40b86a:	xchg   edi,eax
  40b86b:	(bad)  
  40b86c:	push   0x40
  40b86e:	adc    dl,BYTE PTR [edi]
  40b870:	call   0x39f587e2
  40b875:	fldenv [edi-0x3]
  40b878:	mov    ds:0xbd315cbb,eax
  40b87d:	mov    ds:0x51ad69ab,al
  40b882:	pusha  
  40b883:	pop    esp
  40b884:	cs push ebx
  40b886:	fimul  WORD PTR [ebp+0x6c]
  40b889:	test   DWORD PTR [edi-0x5ba8cd5e],ebp
  40b88f:	popa   
  40b890:	(bad)  
  40b891:	adc    DWORD PTR [edx-0x77],edi
  40b894:	pop    ebp
  40b895:	ret    0xb737
  40b898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b899:	dec    esp
  40b89a:	xchg   BYTE PTR ds:0x89b9bf1f,ch
  40b8a0:	fadd   QWORD PTR [eax-0x6e5de11a]
  40b8a6:	(bad)  
  40b8a7:	ret    
  40b8a8:	adc    al,0xd5
  40b8aa:	mov    dl,0x4b
  40b8ac:	jb     0x40b861
  40b8ae:	ret    
  40b8af:	out    dx,al
  40b8b0:	jb     0x40b91e
  40b8b2:	scas   al,BYTE PTR es:[edi]
  40b8b3:	xor    BYTE PTR [edi],al
  40b8b5:	sub    ch,dl
  40b8b7:	adc    al,0xe0
  40b8b9:	nop
  40b8ba:	mov    cl,0xd
  40b8bc:	mov    al,ds:0x6997ea3b
  40b8c1:	out    dx,al
  40b8c2:	retf   0xef6e
  40b8c5:	lahf   
  40b8c6:	(bad)  
  40b8c7:	aam    0xac
  40b8c9:	mov    esi,0xf16f574e
  40b8ce:	ja     0x40b8f0
  40b8d0:	adc    DWORD PTR [ecx-0x27054fe7],ebx
  40b8d6:	xor    al,0xfe
  40b8d8:	sub    bl,BYTE PTR [edi]
  40b8da:	fyl2xp1 
  40b8dc:	sbb    al,0x85
  40b8de:	enter  0x2af,0xfc
  40b8e2:	mov    ebx,0x92df2c35
  40b8e7:	xchg   edi,eax
  40b8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8e9:	sbb    eax,0x6a7774f0
  40b8ee:	hlt    
  40b8ef:	and    DWORD PTR [ecx-0x1d624a6a],0xffffff91
  40b8f6:	fwait
  40b8f7:	adc    ebx,DWORD PTR [esi-0x5]
  40b8fa:	jne    0x40b8b7
  40b8fc:	aaa    
  40b8fd:	shr    DWORD PTR [esi+0xb],0x96
  40b901:	adc    DWORD PTR [eax],esi
  40b903:	inc    esi
  40b904:	jae    0x40b91b
  40b906:	call   0x6652cceb
  40b90b:	ror    DWORD PTR fs:0x6d0e9bff,0x59
  40b913:	(bad)  
  40b914:	nop
  40b915:	jno    0x40b8e6
  40b917:	ror    BYTE PTR [edx-0x6e],cl
  40b91a:	lds    ebx,FWORD PTR [esi]
  40b91c:	es mov dl,0xdf
  40b91f:	nop
  40b920:	out    dx,eax
  40b921:	sbb    al,0xd6
  40b923:	andps  xmm7,XMMWORD PTR [ebx+0x66b4aefb]
  40b92a:	int    0x79
  40b92c:	ja     0x40b924
  40b92e:	jo     0x40b8e5
  40b930:	pushf  
  40b931:	test   al,0xfc
  40b933:	call   0x44097b6e
  40b938:	cs xchg edx,eax
  40b93a:	jmp    0x36b2260e
  40b93f:	jle    0x40b93b
  40b941:	mov    dh,0x88
  40b943:	or     BYTE PTR [eax],ch
  40b945:	ja     0x40b941
  40b947:	jmp    0xff9242ef
  40b94c:	out    dx,al
  40b94d:	int    0x43
  40b94f:	jge    0x40b8da
  40b951:	pop    esp
  40b952:	cdq    
  40b953:	add    eax,0x69df8159
  40b958:	jae    0x40b93c
  40b95a:	jmp    0x40b903
  40b95c:	jae    0x40b950
  40b95e:	cdq    
  40b95f:	iret   
  40b960:	mov    edx,0xc072dd9f
  40b965:	mov    ecx,0x27f95cef
  40b96a:	push   es
  40b96b:	xchg   BYTE PTR [eax+0x4a42764f],ch
  40b971:	shr    DWORD PTR [edx-0x3d],cl
  40b974:	dec    eax
  40b975:	ret    
  40b976:	xchg   esp,eax
  40b977:	jb     0x40b9e2
  40b979:	in     eax,0x32
  40b97b:	xchg   BYTE PTR [ebp+0x5a],ah
  40b97e:	sbb    ebp,DWORD PTR [eax]
  40b980:	mov    BYTE PTR [esi-0x27],ch
  40b983:	pop    ebx
  40b984:	sbb    DWORD PTR [edi-0x5f9cbc13],0xffffffe9
  40b98b:	ficom  WORD PTR [esi-0x79941f16]
  40b991:	ja     0x40b94a
  40b993:	push   esi
  40b994:	xchg   DWORD PTR [esi],ecx
  40b996:	sbb    ebp,DWORD PTR [ebp-0x57]
  40b999:	or     al,0x10
  40b99b:	idiv   DWORD PTR ds:0xef50e569
  40b9a1:	adc    ch,BYTE PTR [eax-0x33]
  40b9a4:	cmc    
  40b9a5:	clc    
  40b9a6:	(bad)  
  40b9a7:	bound  ebp,QWORD PTR [eax]
  40b9a9:	cmp    BYTE PTR es:[edx+0x7d94086e],dh
  40b9b0:	push   esi
  40b9b1:	fdivr  QWORD PTR [ebp-0xf0e55a]
  40b9b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9b8:	xchg   ebx,eax
  40b9b9:	gs retf 
  40b9bb:	inc    esp
  40b9bc:	adc    DWORD PTR [eax],edi
  40b9be:	and    dh,0x73
  40b9c1:	jns    0x40ba05
  40b9c3:	pop    ecx
  40b9c4:	xor    al,BYTE PTR ds:0x15415411
  40b9ca:	pop    eax
  40b9cb:	adc    ch,BYTE PTR [esi-0x2156fee3]
  40b9d1:	into   
  40b9d2:	daa    
  40b9d3:	retf   0xc782
  40b9d6:	sbb    ch,ch
  40b9d8:	dec    edx
  40b9d9:	push   esi
  40b9da:	and    DWORD PTR [edi-0x21],ebp
  40b9dd:	call   0xa53b:0xbf259742
  40b9e4:	in     eax,dx
  40b9e5:	aaa    
  40b9e6:	xchg   esp,eax
  40b9e7:	sbb    ebp,DWORD PTR [edx]
  40b9e9:	inc    edi
  40b9ea:	mov    esp,0x8df0106c
  40b9ef:	imul   esp,DWORD PTR [ebx+ebx*8],0x25951dba
  40b9f6:	xor    DWORD PTR [ebp+0x5d],ecx
  40b9f9:	jb     0x40b9e7
  40b9fb:	cmp    al,0x78
  40b9fd:	rcl    BYTE PTR [ebx-0xb541979],0x74
  40ba04:	mov    eax,0xef1432d3
  40ba09:	jl     0x40b9ee
  40ba0b:	xchg   edi,eax
  40ba0c:	loopne 0x40b9a8
  40ba0e:	cli    
  40ba0f:	(bad)  
  40ba10:	adc    eax,0xdbd30e28
  40ba15:	imul   ebp,DWORD PTR [ebx+eiz*1-0x55f5a8d3],0xffffffa7
  40ba1d:	mov    DWORD PTR [eax-0x71],eax
  40ba20:	ins    BYTE PTR es:[edi],dx
  40ba21:	js     0x40ba33
  40ba23:	push   es
  40ba24:	xchg   esi,eax
  40ba25:	daa    
  40ba26:	add    al,BYTE PTR ds:0xf00261cf
  40ba2c:	cmp    BYTE PTR [esi+ebp*8+0x7d],ah
  40ba30:	add    dl,BYTE PTR [ebx-0x23f3ac60]
  40ba36:	push   ebp
  40ba37:	push   ebp
  40ba38:	push   es
  40ba39:	adc    eax,DWORD PTR [edx+0xf]
  40ba3c:	xchg   DWORD PTR [ecx],eax
  40ba3e:	aas    
  40ba3f:	arpl   bp,di
  40ba41:	bound  edi,QWORD PTR [ebp+0x347502f]
  40ba47:	call   0x67ba:0xffa03661
  40ba4e:	neg    DWORD PTR [eax]
  40ba50:	fld    DWORD PTR [edx+0xca746d0]
  40ba56:	add    al,0x49
  40ba58:	jp     0x40ba60
  40ba5a:	and    bl,dl
  40ba5c:	(bad)  
  40ba5d:	fist   DWORD PTR [ebp-0x67e08c4a]
  40ba63:	jmp    0x40ba49
  40ba65:	fstp   TBYTE PTR [esi-0x6d204020]
  40ba6b:	ds pusha 
  40ba6d:	xchg   esp,eax
  40ba6e:	in     eax,dx
  40ba6f:	push   esp
  40ba70:	daa    
  40ba71:	sub    edx,DWORD PTR [ebx]
  40ba73:	jno    0x40b9fc
  40ba75:	repnz pusha 
  40ba77:	and    eax,0x3579b5e2
  40ba7c:	dec    ecx
  40ba7d:	out    dx,eax
  40ba7e:	xor    ah,BYTE PTR [esi]
  40ba80:	sidtd  [ecx]
  40ba83:	mov    edi,0xbc28d8bb
  40ba88:	add    BYTE PTR [ebp-0x69],cl
  40ba8b:	and    eax,0x3a5db003
  40ba90:	(bad)  
  40ba91:	(bad)  
  40ba92:	or     eax,0x78c7aedc
  40ba97:	sub    DWORD PTR [edi+edi*1],ebp
  40ba9a:	loop   0x40ba1c
  40ba9c:	mov    eax,ds:0xe1a495c6
  40baa1:	enter  0x3dae,0x24
  40baa5:	fdiv   QWORD PTR [ebx]
  40baa7:	adc    al,0x9a
  40baa9:	iret   
  40baaa:	ins    BYTE PTR es:[edi],dx
  40baab:	mov    edi,0xd13bbe2c
  40bab0:	push   gs
  40bab2:	push   es
  40bab3:	ins    DWORD PTR es:[edi],dx
  40bab4:	dec    edi
  40bab5:	dec    ebp
  40bab6:	mov    edx,0x6cb43063
  40babb:	dec    ebx
  40babc:	adc    eax,0x6fc407e8
  40bac1:	sar    DWORD PTR [ebx+0x7cceffb9],1
  40bac7:	xchg   DWORD PTR [edi+0x7b],esi
  40baca:	xchg   edx,eax
  40bacb:	lock int 0xcd
  40bace:	xor    BYTE PTR [eax-0x21a355b],0x31
  40bad5:	fsubr  QWORD PTR [esi+0x6e]
  40bad8:	das    
  40bad9:	and    ecx,esi
  40badb:	ins    BYTE PTR es:[edi],dx
  40badc:	fbld   TBYTE PTR [ecx]
  40bade:	es cli 
  40bae0:	adc    DWORD PTR [edi-0x1],0xffffffd9
  40bae4:	in     al,dx
  40bae5:	div    DWORD PTR [ebx+0x74faee1c]
  40baeb:	sti    
  40baec:	xchg   BYTE PTR ds:0x97bf82c3,cl
  40baf2:	leave  
  40baf3:	push   ebp
  40baf4:	xchg   ecx,eax
  40baf5:	nop
  40baf6:	xchg   esp,eax
  40baf7:	mov    dh,0xde
  40baf9:	and    BYTE PTR [ecx+eiz*8+0x55feffd6],0xf9
  40bb01:	packsswb mm5,QWORD PTR [edx+0x2ff306e1]
  40bb08:	mov    ds:0xcdbcd4b3,eax
  40bb0d:	test   ecx,edi
  40bb0f:	mov    ecx,0xa27353c3
  40bb14:	pop    esp
  40bb15:	sub    al,0x95
  40bb17:	adc    eax,0x77482ffa
  40bb1c:	mov    cl,0x81
  40bb1e:	jl     0x40bb69
  40bb20:	and    bh,BYTE PTR ds:0x651fd542
  40bb26:	rcr    DWORD PTR [ebp+0x2f],cl
  40bb29:	(bad)  
  40bb2a:	mov    edi,0xf7a127a9
  40bb2f:	push   ss
  40bb30:	enter  0x3859,0x75
  40bb34:	fnstenv [edi+eax*2+0x6e246370]
  40bb3b:	cmp    edx,edi
  40bb3d:	jb     0x40baf0
  40bb3f:	sbb    ch,BYTE PTR [ebx+ebp*4+0x67]
  40bb43:	aaa    
  40bb44:	retf   0xf80f
  40bb47:	fdiv   QWORD PTR [edx]
  40bb49:	ror    DWORD PTR [ebp+0x7],1
  40bb4c:	retf   0xce1c
  40bb4f:	ins    DWORD PTR es:[edi],dx
  40bb50:	int    0x41
  40bb52:	mov    ah,0x68
  40bb54:	pop    ecx
  40bb55:	fld    TBYTE PTR [ecx-0x5b]
  40bb58:	dec    edi
  40bb59:	adc    bh,BYTE PTR [ecx+0x24]
  40bb5c:	dec    esp
  40bb5d:	mov    ebx,DWORD PTR [eax]
  40bb5f:	les    edx,FWORD PTR [ebx-0x3e863907]
  40bb65:	(bad)  
  40bb67:	pop    es
  40bb68:	jp     0x40bbc8
  40bb6a:	stc    
  40bb6b:	xchg   ecx,eax
  40bb6c:	fst    DWORD PTR [eax+0x3a]
  40bb6f:	loopne 0x40bb3e
  40bb71:	out    dx,eax
  40bb72:	mov    dl,0xb7
  40bb74:	and    BYTE PTR [ebx],bl
  40bb76:	outs   dx,BYTE PTR ds:[esi]
  40bb77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb78:	stos   BYTE PTR es:[edi],al
  40bb79:	xor    eax,0x9a2f860b
  40bb7e:	cli    
  40bb7f:	jnp    0x40bb81
  40bb81:	sbb    DWORD PTR [edx+0x55569c84],edx
  40bb87:	xor    ebp,DWORD PTR [esi+0x6a]
  40bb8a:	push   ebp
  40bb8b:	or     DWORD PTR [ebx],0xac185b83
  40bb91:	retf   0xd878
  40bb94:	sbb    dl,BYTE PTR [edx+ecx*1+0x4301937a]
  40bb9b:	pop    ds
  40bb9c:	shl    DWORD PTR ds:0x73c70b,1
  40bba2:	mov    ebx,0xf9e08127
  40bba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba8:	xor    ebx,DWORD PTR [eax-0x13]
  40bbab:	and    edx,DWORD PTR [edi+0x6215388f]
  40bbb1:	int3   
  40bbb2:	push   ebx
  40bbb3:	(bad)  
  40bbb4:	mov    esi,0x6df38ee1
  40bbb9:	push   ss
  40bbba:	in     al,dx
  40bbbb:	push   si
  40bbbd:	cdq    
  40bbbe:	sbb    esp,0x6d
  40bbc1:	cmp    al,0xd8
  40bbc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbc4:	or     DWORD PTR [eax+ecx*8-0x1938e96d],ecx
  40bbcb:	jmp    DWORD PTR [ebp+0xde14c6]
  40bbd1:	add    bh,BYTE PTR [ebx+edx*4]
  40bbd4:	mov    al,ds:0x10f291ab
  40bbd9:	rcl    ch,cl
  40bbdb:	mov    al,ds:0xae6bd5fe
  40bbe0:	lods   al,BYTE PTR ds:[esi]
  40bbe1:	jl     0x40bc0f
  40bbe3:	push   es
  40bbe4:	popf   
  40bbe5:	nop
  40bbe6:	dec    edx
  40bbe7:	rcr    BYTE PTR [esi+0x73],0x63
  40bbeb:	jle    0x40bb77
  40bbed:	and    edi,ebx
  40bbef:	outs   dx,BYTE PTR ds:[esi]
  40bbf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbf1:	add    al,0x62
  40bbf3:	test   eax,0x5f20ff26
  40bbf8:	cmc    
  40bbf9:	leave  
  40bbfa:	stos   DWORD PTR es:[edi],eax
  40bbfb:	mov    ecx,0x605f4475
  40bc00:	es mov dl,0x90
  40bc03:	add    BYTE PTR [edx],ah
  40bc05:	pop    ss
  40bc06:	and    edx,ecx
  40bc08:	bound  edx,QWORD PTR [ebx+0x54]
  40bc0b:	jp     0x40bbae
  40bc0d:	sahf   
  40bc0e:	popf   
  40bc0f:	mov    DWORD PTR [edi-0x5e428d80],ecx
  40bc15:	jnp    0x40bc23
  40bc17:	cmp    ecx,esi
  40bc19:	xchg   ebp,eax
  40bc1a:	sbb    al,0x5c
  40bc1c:	repnz adc eax,0x5ab52f46
  40bc22:	adc    BYTE PTR [ebx-0x6d],ah
  40bc25:	ds scas eax,DWORD PTR es:[edi]
  40bc27:	pop    edi
  40bc28:	xor    cl,ah
  40bc2a:	mov    ds:0x55204251,eax
  40bc2f:	ret    0x32f4
  40bc32:	(bad)  
  40bc33:	xchg   esp,eax
  40bc34:	and    eax,0x5d425170
  40bc39:	add    DWORD PTR [edi+0x1a5e16bb],edi
  40bc3f:	jmp    0x40bc79
  40bc41:	mov    ebx,0x2c31d154
  40bc46:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40bc48:	push   0x23391ceb
  40bc4d:	daa    
  40bc4e:	scas   al,BYTE PTR es:[edi]
  40bc4f:	test   eax,0xcd3e29ce
  40bc54:	out    dx,eax
  40bc55:	push   ecx
  40bc56:	mov    edi,0x2121a222
  40bc5b:	stos   DWORD PTR es:[edi],eax
  40bc5c:	add    ah,bh
  40bc5e:	arpl   ax,di
  40bc60:	mov    bl,0x54
  40bc62:	rol    DWORD PTR [edi+0x56ebd298],1
  40bc68:	dec    esp
  40bc69:	add    al,0xd9
  40bc6b:	sbb    ch,BYTE PTR [eax]
  40bc6d:	inc    esi
  40bc6e:	push   es
  40bc6f:	hlt    
  40bc70:	push   ecx
  40bc71:	outs   dx,DWORD PTR ds:[esi]
  40bc72:	jo     0x40bc52
  40bc74:	fsub   st(0),st
  40bc76:	fnsave [edi+0xdda030e]
  40bc7c:	pop    ss
  40bc7d:	int3   
  40bc7e:	cmp    al,BYTE PTR [edi+0x5697766a]
  40bc84:	pop    DWORD PTR [edx]
  40bc86:	sub    BYTE PTR [esi-0x54],dl
  40bc89:	mov    edi,0xd91ce546
  40bc8e:	jge    0x40bcc2
  40bc90:	test   eax,0x63062ac1
  40bc95:	add    BYTE PTR [ecx+0x7],dl
  40bc98:	gs and al,0x78
  40bc9b:	(bad)  
  40bc9c:	rcl    BYTE PTR [ebx],1
  40bc9e:	shl    DWORD PTR [esi-0x1b],0xd8
  40bca2:	sbb    al,0xc9
  40bca4:	dec    esi
  40bca5:	jmp    0x40bc77
  40bca7:	(bad)  
  40bca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bca9:	es push ecx
  40bcab:	cdq    
  40bcac:	scas   eax,DWORD PTR es:[edi]
  40bcad:	xchg   DWORD PTR [edi+0x51],esp
  40bcb0:	out    dx,eax
  40bcb1:	cmp    eax,0xde85489
  40bcb6:	das    
  40bcb7:	xor    ecx,DWORD PTR [ecx]
  40bcb9:	lahf   
  40bcba:	xlat   BYTE PTR ds:[ebx]
  40bcbb:	hlt    
  40bcbc:	cmp    al,0x14
  40bcbe:	or     ch,BYTE PTR [edi+0x376f2857]
  40bcc4:	inc    ebx
  40bcc5:	add    eax,0x924e5593
  40bcca:	test   eax,0x2253be6f
  40bccf:	std    
  40bcd0:	cmp    DWORD PTR [ecx+eax*4],ebx
  40bcd3:	scas   al,BYTE PTR es:[edi]
  40bcd4:	ret    
  40bcd5:	js     0x40bd26
  40bcd7:	stos   BYTE PTR es:[edi],al
  40bcd8:	dec    esp
  40bcd9:	out    dx,eax
  40bcda:	jmp    0xe49f8d33
  40bcdf:	icebp  
  40bce0:	fs push eax
  40bce2:	cld    
  40bce3:	scas   al,BYTE PTR es:[edi]
  40bce4:	test   al,0xe4
  40bce6:	xor    bh,dl
  40bce8:	jns    0x40bd14
  40bcea:	xor    bl,BYTE PTR [edx+eax*2+0x6]
  40bcee:	mov    ah,0x5
  40bcf0:	leave  
  40bcf1:	jae    0x40bd71
  40bcf3:	loope  0x40bd6f
  40bcf5:	mov    esi,0x96177ad9
  40bcfa:	test   eax,0x4095b182
  40bcff:	inc    ebx
  40bd00:	in     eax,0xe0
  40bd02:	mov    ds:0xcd0c7671,al
  40bd07:	add    eax,0x5e90d802
  40bd0c:	mov    eax,0xc81125a7
  40bd11:	inc    edx
  40bd12:	add    DWORD PTR [esi-0x1e8cf210],edi
  40bd18:	xor    eax,0x14e24fa5
  40bd1d:	arpl   WORD PTR [edx+eax*1],sp
  40bd20:	fdivr  QWORD PTR [edx]
  40bd22:	jl     0x40bca6
  40bd24:	and    eax,0xb0b46e27
  40bd29:	lea    eax,[edi-0x13]
  40bd2c:	(bad)
  40bd2f:	sbb    BYTE PTR [edi],0x87
  40bd32:	icebp  
  40bd33:	aam    0x4c
  40bd35:	inc    eax
  40bd36:	inc    ecx
  40bd37:	cmp    al,BYTE PTR [edi]
  40bd39:	pop    ecx
  40bd3a:	cmp    DWORD PTR [edx-0x5f83c5f3],esi
  40bd40:	leave  
  40bd41:	out    dx,al
  40bd42:	clc    
  40bd43:	mov    BYTE PTR [edi-0x30],dl
  40bd46:	fisub  WORD PTR [edi+0x20]
  40bd49:	mov    esi,eax
  40bd4b:	mov    eax,0x3f421921
  40bd50:	std    
  40bd51:	iret   
  40bd52:	sbb    eax,DWORD PTR [esp+eiz*4]
  40bd55:	mov    ds:0xbc134f11,al
  40bd5a:	outs   dx,BYTE PTR ss:[esi]
  40bd5c:	mov    BYTE PTR [esi+0xb378ffd],bl
  40bd62:	cmp    ecx,esi
  40bd64:	shr    BYTE PTR [eax-0x7],cl
  40bd67:	or     BYTE PTR [edi+eax*2],ch
  40bd6a:	clc    
  40bd6b:	das    
  40bd6c:	retf   0x4b2a
  40bd6f:	push   ebp
  40bd70:	ror    dh,1
  40bd72:	imul   edx,DWORD PTR [edx],0x1a
  40bd75:	(bad)  
  40bd77:	test   eax,0xcbe6095f
  40bd7c:	lods   eax,DWORD PTR ds:[esi]
  40bd7d:	repnz ss xchg esi,eax
  40bd80:	fdivr  QWORD PTR [esi-0x10201316]
  40bd86:	xchg   DWORD PTR [ebx+0x5f9c4ce6],ecx
  40bd8c:	retf   0x4c54
  40bd8f:	and    al,BYTE PTR [ecx]
  40bd91:	into   
  40bd92:	mov    esp,0x94bc4974
  40bd97:	xchg   ebx,eax
  40bd98:	repz in eax,dx
  40bd9a:	test   al,0xde
  40bd9c:	mov    dh,0xf1
  40bd9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd9f:	mov    ebp,0xb52137fd
  40bda4:	cld    
  40bda5:	bswap  ebx
  40bda7:	outs   dx,DWORD PTR ds:[esi]
  40bda8:	add    eax,0x5a068a6d
  40bdad:	nop
  40bdae:	leave  
  40bdaf:	jmp    0x6b73:0xb00e1dd3
  40bdb6:	mov    BYTE PTR [edx+0x78],0xea
  40bdba:	in     eax,dx
  40bdbb:	mov    ebp,esi
  40bdbd:	iret   
  40bdbe:	jno    0x40bdff
  40bdc0:	fs mov esp,0xd25bbcf4
  40bdc6:	inc    ebp
  40bdc7:	mov    BYTE PTR ds:0x23f0f7a5,dl
  40bdcd:	jo     0x40bdca
  40bdcf:	add    al,0x2d
  40bdd1:	and    eax,0x817d79d5
  40bdd6:	fs mov al,0xe0
  40bdd9:	push   esp
  40bdda:	xor    eax,0x15021c70
  40bddf:	cmp    eax,0x887e2545
  40bde4:	mov    BYTE PTR [eax+0x1db5aa52],dh
  40bdea:	fsubr  DWORD PTR [ebx]
  40bdec:	sbb    ah,dh
  40bdee:	repnz enter 0x2f51,0xe8
  40bdf3:	add    eax,ecx
  40bdf5:	fcmovnbe st,st(3)
  40bdf7:	xlat   BYTE PTR ds:[ebx]
  40bdf8:	dec    edx
  40bdf9:	and    edx,DWORD PTR [ecx-0x7d]
  40bdfc:	jecxz  0x40be4f
  40bdfe:	and    cl,ah
  40be00:	dec    BYTE PTR [eax]
  40be02:	std    
  40be03:	jo     0x40be0f
  40be05:	leave  
  40be06:	lea    ebp,[ebx+0x1c]
  40be09:	mov    esp,0x2b5ac53e
  40be0e:	add    cl,0xdf
  40be11:	push   eax
  40be12:	add    al,0xd4
  40be14:	add    al,0xec
  40be16:	jl     0x40bdc8
  40be18:	mov    ebx,0x8a43c2c0
  40be1d:	rcr    BYTE PTR fs:[ecx],1
  40be20:	in     al,0x8c
  40be22:	mov    cl,BYTE PTR [edi-0x30ac176c]
  40be28:	xchg   esi,eax
  40be29:	xor    al,0x56
  40be2b:	push   edx
  40be2c:	push   ds
  40be2d:	retf   
  40be2e:	aas    
  40be2f:	out    dx,eax
  40be30:	arpl   di,bx
  40be32:	lods   al,BYTE PTR ds:[esi]
  40be33:	xchg   edx,eax
  40be34:	cs adc al,0xa7
  40be37:	pop    ss
  40be38:	inc    ecx
  40be39:	inc    edi
  40be3a:	sbb    BYTE PTR [ebp-0x72],ah
  40be3d:	xchg   ecx,eax
  40be3e:	popf   
  40be3f:	nop
  40be40:	jle    0x40be84
  40be42:	sahf   
  40be43:	in     al,dx
  40be44:	jne    0x40be8a
  40be46:	ins    BYTE PTR es:[edi],dx
  40be47:	imul   esp,DWORD PTR [edi],0xffffffa7
  40be4a:	push   DWORD PTR [ebp+0x61a5a1ed]
  40be50:	xlat   BYTE PTR ds:[ebx]
  40be51:	jbe    0x40be38
  40be53:	jb     0x40be4c
  40be55:	add    DWORD PTR [esi+0x40],edi
  40be58:	pop    ss
  40be59:	arpl   WORD PTR [ecx+ebx*4-0x10f5a248],dx
  40be60:	sbb    eax,0x4d789744
  40be65:	mov    eax,ds:0xd307f7be
  40be6a:	lea    edx,[ebp+0x345d21b2]
  40be70:	retf   0xc440
  40be73:	mov    al,0xb7
  40be75:	sub    eax,0xab8065f4
  40be7a:	sbb    ecx,ebx
  40be7c:	je     0x40be6a
  40be7e:	dec    ebp
  40be7f:	or     ch,0x4c
  40be82:	ret    
  40be83:	push   ebx
  40be84:	int    0xb1
  40be86:	xchg   edi,eax
  40be87:	call   DWORD PTR ds:0xa2a641e9
  40be8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be8e:	fld    TBYTE PTR ds:0xbf324f22
  40be94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be95:	jne    0x40bf03
  40be97:	sar    BYTE PTR es:[esi-0x6e],cl
  40be9b:	imul   edx,DWORD PTR [eax-0x844bc1f],0xfc7ee968
  40bea5:	lock and esp,ecx
  40bea8:	dec    esi
  40bea9:	add    BYTE PTR [edx+0x36],bl
  40beac:	pop    ecx
  40bead:	pushf  
  40beae:	cmc    
  40beaf:	rcr    DWORD PTR [eax-0x4119c8ce],0xc0
  40beb6:	imul   ebp,DWORD PTR [edi+0x40],0x110eeb99
  40bebd:	adc    eax,0x60338949
  40bec2:	and    dl,cl
  40bec4:	mov    esi,eax
  40bec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bec7:	gs xor bl,ch
  40beca:	pop    es
  40becb:	inc    esp
  40becc:	xchg   esp,eax
  40becd:	call   0xbf17:0x933197cd
  40bed4:	jns    0x40beef
  40bed6:	clc    
  40bed7:	arpl   WORD PTR [esi],sp
  40bed9:	push   eax
  40beda:	add    DWORD PTR [esp+eiz*8+0x32405c38],ecx
  40bee1:	push   es
  40bee2:	iret   
  40bee3:	scas   eax,DWORD PTR es:[edi]
  40bee4:	cmp    BYTE PTR [eax+0x28],bh
  40bee7:	out    dx,al
  40bee8:	int    0x47
  40beea:	(bad)  
  40beeb:	fist   WORD PTR [edx+0x6271b658]
  40bef1:	xor    BYTE PTR [edi+edx*8+0x77cce702],0x53
  40bef9:	fnstsw WORD PTR [edi+ebx*1-0x56fb81c3]
  40bf00:	adc    BYTE PTR ds:[esp+edx*2],bh
  40bf04:	shr    esi,cl
  40bf06:	mov    ch,0x33
  40bf08:	das    
  40bf09:	jns    0x40bf05
  40bf0b:	fidiv  DWORD PTR ds:0x89d0a879
  40bf11:	jmp    0x269534b7
  40bf16:	gs and al,0x23
  40bf19:	pop    ds
  40bf1a:	call   0xd797e662
  40bf1f:	xchg   esp,eax
  40bf20:	sbb    al,0x1c
  40bf22:	lods   eax,DWORD PTR ds:[esi]
  40bf23:	ja     0x40bf15
  40bf25:	xchg   ebp,eax
  40bf26:	add    DWORD PTR [ebx+edi*8-0x7e],0xfffffffe
  40bf2b:	aaa    
  40bf2c:	dec    edi
  40bf2d:	xor    eax,0x20802366
  40bf32:	(bad)  
  40bf33:	push   eax
  40bf34:	int    0x64
  40bf36:	mov    eax,DWORD PTR [edi]
  40bf38:	lods   al,BYTE PTR ds:[esi]
  40bf39:	call   0x443a:0xc780d355
  40bf40:	neg    DWORD PTR [ebx+0x26006589]
  40bf46:	les    ecx,FWORD PTR [edx]
  40bf48:	xlat   BYTE PTR ds:[ebx]
  40bf49:	in     eax,0xfe
  40bf4b:	jl     0x40bf3b
  40bf4d:	call   0x7288:0x3cfea129
  40bf54:	dec    ecx
  40bf55:	vpsrld ymm3,ymm5,XMMWORD PTR [edi-0x7b983be6]
  40bf5d:	mov    bh,0x6b
  40bf5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf60:	cmp    eax,DWORD PTR [esi+ebp*4+0xd]
  40bf64:	xchg   ecx,eax
  40bf65:	sbb    al,0xbf
  40bf67:	sub    eax,0x8545ed19
  40bf6c:	xchg   ebp,eax
  40bf6d:	mov    ebp,0x730b2404
  40bf72:	add    BYTE PTR [edx],al
  40bf74:	or     al,0xf6
  40bf76:	jp     0x40bf17
  40bf78:	je     0x40bf82
  40bf7a:	ins    DWORD PTR es:[edi],dx
  40bf7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf7c:	or     al,0xe8
  40bf7e:	adc    al,0x19
  40bf80:	xchg   DWORD PTR [ebp+0x8c35161],eax
  40bf86:	adc    ecx,ebx
  40bf88:	mov    WORD PTR [ebx+eax*4+0x15],ss
  40bf8c:	or     al,0xd2
  40bf8e:	in     al,0xde
  40bf90:	daa    
  40bf91:	icebp  
  40bf92:	imul   edx,edx,0x2a
  40bf95:	les    edx,FWORD PTR [eax]
  40bf97:	push   0x69
  40bf99:	mov    ah,0x1c
  40bf9b:	mov    eax,0x2d81d12c
  40bfa0:	xchg   esi,eax
  40bfa1:	repnz iret 
  40bfa3:	xor    DWORD PTR [ebp+0x74],ebp
  40bfa6:	jae    0x40c010
  40bfa8:	jg     0x40bfaa
  40bfaa:	dec    ebp
  40bfab:	arpl   WORD PTR [edi],di
  40bfad:	test   al,0x6c
  40bfaf:	mov    ds:0xdfb06ed8,al
  40bfb4:	and    eax,0xac81df
  40bfb9:	pop    esp
  40bfba:	dec    ecx
  40bfbb:	jmp    0xc8286a16
  40bfc0:	mov    bl,0xc
  40bfc3:	xor    DWORD PTR [edx+ebp*8],edx
  40bfc6:	lahf   
  40bfc7:	aad    0x87
  40bfc9:	fcom   QWORD PTR [esi+ecx*2]
  40bfcc:	xor    ebx,edi
  40bfce:	test   DWORD PTR [edx-0xb8c0cb8],0xa9bab4e8
  40bfd8:	jl     0x40c048
  40bfda:	adc    al,0xb8
  40bfdc:	rcl    BYTE PTR [ecx],1
  40bfde:	call   DWORD PTR [ecx-0x3500e6aa]
  40bfe4:	mov    ah,0xa1
  40bfe6:	mov    ebx,0x51d07472
  40bfeb:	dec    esp
  40bfec:	pextrw ecx,(bad),0xc5
  40bfee:	push   cs
  40bfef:	xchg   esi,eax
  40bff0:	fld    QWORD PTR [edx+0x23]
  40bff3:	push   esp
  40bff4:	and    al,0xe1
  40bff6:	imul   ecx,DWORD PTR [ebx],0x96d77653
  40bffc:	mov    ebx,0xaff28681
  40c001:	cwde   
  40c002:	inc    esi
  40c003:	aas    
  40c004:	jae    0x40c00e
  40c006:	push   edx
  40c007:	sbb    DWORD PTR [edi+ecx*4+0x3b],edx
  40c00b:	xbegin 0xae38189c
  40c011:	xchg   ebx,eax
  40c012:	das    
  40c013:	cmp    esp,DWORD PTR [edx-0x61]
  40c016:	or     al,0x22
  40c018:	sahf   
  40c019:	ret    
  40c01a:	mov    ds:0x692d88a9,al
  40c01f:	imul   DWORD PTR [ecx]
  40c021:	test   ch,0xab
  40c024:	ret    0x1837
  40c027:	and    eax,DWORD PTR [eax+ebx*2]
  40c02a:	dec    BYTE PTR [edi]
  40c02c:	push   ebx
  40c02d:	shl    BYTE PTR [eax],0x47
  40c030:	stos   DWORD PTR es:[edi],eax
  40c031:	cmp    al,0xcb
  40c033:	test   DWORD PTR [edi+0x4d],edi
  40c036:	or     eax,0x80e8bd50
  40c03b:	adc    BYTE PTR [eax+0x4435e12b],0x9f
  40c042:	std    
  40c043:	cmp    BYTE PTR [ebx+0x68],dl
  40c046:	call   0x95a5:0x834ef18f
  40c04d:	adc    ch,al
  40c04f:	imul   edi,DWORD PTR [ecx+0x15],0x25
  40c053:	ds inc eax
  40c055:	mov    ds:0x3e9f591b,al
  40c05a:	out    0xbb,al
  40c05c:	or     BYTE PTR [edx-0x3a],0xe4
  40c060:	enter  0xa18a,0xa1
  40c064:	inc    edx
  40c065:	push   eax
  40c066:	fiadd  DWORD PTR [edx-0x4c]
  40c069:	nop
  40c06a:	cmp    cl,bl
  40c06c:	fsub   QWORD PTR [eax-0x62]
  40c06f:	mov    BYTE PTR [ebx],bl
  40c071:	xchg   edx,eax
  40c072:	pop    ecx
  40c073:	loope  0x40c094
  40c075:	mov    BYTE PTR [ebp+0x303be55c],al
  40c07b:	js     0x40c0dd
  40c07d:	div    BYTE PTR [ebx+0x46fc0258]
  40c083:	test   BYTE PTR [ebx-0x207bb6d0],bl
  40c089:	and    ebp,DWORD PTR ds:0x77dbf740
  40c08f:	adc    DWORD PTR [edx],edi
  40c091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c092:	mov    esp,0x2d4bcc9
  40c097:	mov    ch,0x14
  40c099:	sub    BYTE PTR ds:0x64b866b9,bh
  40c09f:	scas   eax,DWORD PTR es:[edi]
  40c0a0:	fistp  QWORD PTR [edx+0x723094a2]
  40c0a6:	dec    esp
  40c0a7:	popf   
  40c0a8:	xlat   BYTE PTR fs:[ebx]
  40c0aa:	popf   
  40c0ab:	or     edi,DWORD PTR [esi+0x6fd171ab]
  40c0b1:	mov    ebp,0x1265b8d0
  40c0b6:	xchg   esi,eax
  40c0b7:	(bad)  
  40c0b8:	xor    eax,0x36ee7e83
  40c0bd:	out    0xc3,al
  40c0bf:	aam    0x8c
  40c0c1:	xchg   cl,al
  40c0c3:	cli    
  40c0c4:	jns    0x40c0fd
  40c0c6:	call   DWORD PTR [ebx]
  40c0c8:	iret   
  40c0c9:	or     eax,0x839dac66
  40c0ce:	ins    BYTE PTR es:[edi],dx
  40c0cf:	mov    gs,WORD PTR [ebp+0x2c]
  40c0d2:	mov    ebp,0x2d5a1792
  40c0d7:	fcomp  DWORD PTR [ebp+0x6c91d06a]
  40c0dd:	jne    0x40c070
  40c0df:	adc    BYTE PTR [ecx-0x60aae034],bl
  40c0e5:	push   ss
  40c0e6:	jmp    0x33afd8bb
  40c0eb:	jp     0x40c0c4
  40c0ed:	inc    esp
  40c0ee:	add    BYTE PTR [esi+0x3f24164],bl
  40c0f4:	fisttp WORD PTR [edi-0x2852dc19]
  40c0fa:	popa   
  40c0fb:	xchg   BYTE PTR [edx-0x24533178],cl
  40c101:	or     edi,esp
  40c103:	mov    DWORD PTR [edi],esi
  40c105:	(bad)  
  40c107:	jmp    0x58987223
  40c10c:	loopne 0x40c12a
  40c10e:	cmp    ah,BYTE PTR [ebx+0x5707c84]
  40c114:	ins    BYTE PTR es:[edi],dx
  40c115:	int    0xc8
  40c117:	inc    edx
  40c118:	mov    ?,WORD PTR [ebp-0x170a0a1c]
  40c11e:	aam    0xc5
  40c120:	nop
  40c121:	lds    ebp,FWORD PTR ds:0xd918c99a
  40c127:	in     al,dx
  40c128:	fst    DWORD PTR [eax]
  40c12a:	bound  edx,QWORD PTR [edx-0x2f]
  40c12d:	pop    ebp
  40c12e:	cmp    eax,0xab48e34c
  40c133:	icebp  
  40c134:	adc    al,0x58
  40c136:	test   DWORD PTR [ecx+0x4206f9ee],0x101b82f2
  40c140:	test   al,0xc4
  40c142:	sub    ecx,esp
  40c144:	or     edi,esp
  40c146:	cli    
  40c147:	loope  0x40c190
  40c149:	pusha  
  40c14a:	jge    0x40c18e
  40c14c:	pop    eax
  40c14d:	mov    bh,0xc9
  40c14f:	popa   
  40c150:	out    dx,al
  40c151:	xor    al,0xcb
  40c153:	int3   
  40c154:	out    dx,al
  40c155:	out    dx,al
  40c156:	ja     0x40c116
  40c158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c159:	cmp    al,0x51
  40c15b:	adc    BYTE PTR [eax-0x31],ch
  40c15e:	dec    BYTE PTR [ebx+0x6a]
  40c161:	push   edx
  40c162:	cmp    BYTE PTR [edx+0x3b],0x63
  40c166:	setnp  BYTE PTR [ebp+edx*1+0x1c]
  40c16b:	js     0x40c1c7
  40c16d:	jb     0x40c117
  40c16f:	and    eax,DWORD PTR [edx+0x23]
  40c172:	sub    ch,ch
  40c174:	dec    eax
  40c175:	xchg   edi,eax
  40c176:	ror    edx,0x5a
  40c179:	(bad)  
  40c17a:	stc    
  40c17b:	outs   dx,DWORD PTR ds:[esi]
  40c17c:	aaa    
  40c17d:	scas   eax,DWORD PTR es:[edi]
  40c17e:	adc    eax,0xb1480bdc
  40c183:	aas    
  40c184:	push   ebp
  40c185:	jo     0x40c202
  40c187:	mov    ah,0xa3
  40c189:	push   ebp
  40c18a:	add    eax,0xee1bc987
  40c18f:	lock sub eax,0x515f845c
  40c195:	(bad)  
  40c196:	cdq    
  40c197:	or     edx,DWORD PTR [esi-0x4fb3eb52]
  40c19d:	pushf  
  40c19e:	inc    edx
  40c19f:	pop    ebp
  40c1a0:	imul   esp,DWORD PTR [esi],0x37
  40c1a3:	dec    esp
  40c1a4:	push   esp
  40c1a5:	push   esi
  40c1a6:	fdivr  QWORD PTR [esi-0x6587e340]
  40c1ac:	sar    BYTE PTR [esi+0x4c],1
  40c1af:	add    DWORD PTR ds:0xde4f1723,edx
  40c1b5:	mov    DWORD PTR [ebp+0x62],esi
  40c1b8:	inc    ebx
  40c1b9:	xlat   BYTE PTR ds:[ebx]
  40c1ba:	jne    0x40c1e0
  40c1bc:	cdq    
  40c1bd:	xchg   ebp,eax
  40c1be:	imul   edi,DWORD PTR [edi+0x23827c8],0x6c
  40c1c5:	mov    eax,0xd96a0f1d
  40c1ca:	data16 out 0x20,al
  40c1cd:	pop    eax
  40c1ce:	adc    al,0x6f
  40c1d0:	out    0xec,al
  40c1d2:	ret    0x7dbb
  40c1d5:	push   0x75fd5b8d
  40c1da:	pushf  
  40c1db:	sbb    dh,BYTE PTR [ebx-0x4f59fff0]
  40c1e1:	test   al,0x9a
  40c1e3:	pop    ss
  40c1e4:	ins    BYTE PTR es:[edi],dx
  40c1e5:	je     0x40c1d0
  40c1e7:	shl    al,1
  40c1e9:	ret    0xf46
  40c1ec:	out    0x72,al
  40c1ee:	jmp    0x40c237
  40c1f0:	mov    ds:0x8ac9f745,eax
  40c1f5:	push   ebx
  40c1f6:	ror    DWORD PTR [edi],1
  40c1f8:	xchg   edx,eax
  40c1f9:	out    0xa2,al
  40c1fb:	iret   
  40c1fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1fd:	mov    edx,0x83278ead
  40c202:	fisttp QWORD PTR [ebp-0xd59af27]
  40c208:	pop    ecx
  40c209:	scas   eax,DWORD PTR es:[edi]
  40c20a:	repnz mov ds:0xb0e5be3,al
  40c210:	sub    BYTE PTR [edx],0xd0
  40c213:	(bad)  
  40c214:	sbb    al,0x5b
  40c216:	sti    
  40c217:	imul   esi,DWORD PTR [edx-0x56],0x93d102cb
  40c21e:	pop    esp
  40c21f:	dec    ebx
  40c220:	stos   DWORD PTR es:[edi],eax
  40c221:	and    cl,dh
  40c223:	sbb    dl,ch
  40c225:	push   eax
  40c226:	cmp    al,0xb0
  40c228:	mov    dh,0x72
  40c22a:	lea    edi,[ecx]
  40c22c:	outs   dx,BYTE PTR ds:[esi]
  40c22d:	mov    eax,DWORD PTR [ecx]
  40c22f:	jb     0x40c1c7
  40c231:	mov    edi,0x9fa5e232
  40c236:	xor    ebp,ebp
  40c238:	shl    BYTE PTR [ebp+0xb],0xf8
  40c23c:	aad    0x61
  40c23e:	pop    ebx
  40c23f:	cdq    
  40c240:	adc    ebx,DWORD PTR [esi]
  40c242:	inc    ebx
  40c243:	stc    
  40c244:	outs   dx,BYTE PTR ds:[esi]
  40c245:	popf   
  40c246:	stos   BYTE PTR es:[edi],al
  40c247:	clc    
  40c248:	and    eax,0x446fad2f
  40c24d:	(bad)  
  40c24e:	cmp    BYTE PTR [ebp+0x2b],bl
  40c251:	out    0x75,eax
  40c253:	shl    ecx,1
  40c255:	gs scas eax,DWORD PTR es:[edi]
  40c257:	shl    DWORD PTR [ebx-0x729416e3],1
  40c25d:	mov    ebx,0x15001818
  40c262:	das    
  40c263:	jno    0x40c1ef
  40c265:	inc    eax
  40c266:	xor    esp,eax
  40c268:	aaa    
  40c269:	loope  0x40c225
  40c26b:	in     al,0xa6
  40c26d:	int3   
  40c26e:	ja     0x40c200
  40c270:	adc    edi,edi
  40c272:	ins    BYTE PTR es:[edi],dx
  40c273:	repz cmp dl,ch
  40c276:	in     eax,0x12
  40c278:	scas   eax,DWORD PTR es:[edi]
  40c279:	or     ebp,DWORD PTR [edx]
  40c27b:	(bad)  
  40c27c:	repz adc DWORD PTR [esi+0x11],0xffffff9c
  40c281:	test   BYTE PTR [eax-0x4],bl
  40c284:	int3   
  40c285:	push   0x46
  40c287:	test   al,0xbb
  40c289:	jns    0x40c241
  40c28b:	sub    eax,0x8e038fb
  40c290:	xchg   edi,eax
  40c291:	add    bh,0xf3
  40c294:	cmp    eax,0x5b54d9a2
  40c299:	push   0xfffffff2
  40c29b:	rcl    DWORD PTR [ebp+0x59],0x49
  40c29f:	popf   
  40c2a0:	sub    ah,bl
  40c2a2:	aam    0x7b
  40c2a4:	leave  
  40c2a5:	jecxz  0x40c237
  40c2a7:	add    ebp,DWORD PTR [eax+0x1c]
  40c2aa:	xor    ah,bh
  40c2ac:	or     al,0x27
  40c2ae:	mov    gs,ecx
  40c2b0:	dec    ecx
  40c2b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2b2:	fistp  QWORD PTR ds:0xdd49b61d
  40c2b8:	fwait
  40c2b9:	sbb    ebp,DWORD PTR [eax]
  40c2bb:	xor    eax,0x50bc8f65
  40c2c0:	jb     0x40c2ce
  40c2c2:	mov    eax,0x6dfe2456
  40c2c7:	xchg   ebx,eax
  40c2c8:	mov    ebx,0x1377f0d8
  40c2cd:	adc    al,0x7
  40c2cf:	inc    eax
  40c2d0:	out    0x82,eax
  40c2d2:	loopne 0x40c2fb
  40c2d4:	arpl   WORD PTR [ecx+0x279e6c25],si
  40c2da:	inc    edx
  40c2db:	stos   BYTE PTR es:[edi],al
  40c2dc:	scas   al,BYTE PTR es:[edi]
  40c2dd:	neg    BYTE PTR [ecx+edx*8]
  40c2e0:	sub    DWORD PTR [ecx],eax
  40c2e2:	cmp    dl,BYTE PTR ss:[ecx+0x6d15c640]
  40c2e9:	call   0xe462afd4
  40c2ee:	je     0x40c2b5
  40c2f0:	inc    ebp
  40c2f1:	into   
  40c2f2:	ins    BYTE PTR es:[edi],dx
  40c2f3:	inc    esi
  40c2f4:	cmp    al,0xb1
  40c2f6:	lock adc cl,BYTE PTR [ebx-0x30e88294]
  40c2fd:	mov    ch,0xc7
  40c2ff:	bound  ebp,QWORD PTR ss:[ebx]
  40c302:	rcl    BYTE PTR [ecx+0x6beac01e],1
  40c308:	inc    ecx
  40c309:	call   0x75a8:0xd45482de
  40c310:	out    0x80,eax
  40c312:	out    0x7,al
  40c314:	xchg   edx,eax
  40c315:	repnz dec ebp
  40c317:	xchg   edx,eax
  40c318:	cmp    eax,0xd9b54e90
  40c31d:	xchg   edi,eax
  40c31e:	xor    ah,BYTE PTR [edx+0x4f53833f]
  40c324:	mov    BYTE PTR [edi+esi*1],bl
  40c327:	jns    0x40c2d1
  40c329:	adc    al,0xb1
  40c32b:	addr16 dec edx
  40c32d:	call   0xa40dc1cb
  40c332:	xchg   ebx,eax
  40c333:	cmp    bh,BYTE PTR [esi-0x59]
  40c336:	idiv   DWORD PTR [ecx]
  40c338:	jne    0x40c2e6
  40c33a:	cdq    
  40c33b:	push   edx
  40c33c:	rol    ecx,0xe1
  40c33f:	inc    ecx
  40c340:	xchg   ebp,eax
  40c341:	lods   al,BYTE PTR ds:[esi]
  40c342:	cmc    
  40c343:	js     0x40c300
  40c345:	cmp    BYTE PTR [edi-0x45],0x52
  40c349:	mov    cs,ebx
  40c34b:	(bad)  
  40c34c:	into   
  40c34d:	sahf   
  40c34e:	mov    DWORD PTR [ecx-0x35],ecx
  40c351:	imul   esi,DWORD PTR [eax+ebp*2+0x65],0x62
  40c356:	pop    ds
  40c357:	add    ebx,ebp
  40c359:	and    ebp,DWORD PTR [edi]
  40c35b:	mov    ebp,0x7928b6ae
  40c360:	aas    
  40c361:	(bad)  
  40c362:	into   
  40c363:	leave  
  40c364:	repz xchg ebx,eax
  40c366:	or     ecx,0x263edacd
  40c36c:	xchg   ebx,eax
  40c36d:	lahf   
  40c36e:	add    DWORD PTR fs:[ecx+ebx*8+0x47],esi
  40c373:	lock mov ecx,0x90cad52e
  40c379:	push   edx
  40c37a:	outs   dx,DWORD PTR ds:[esi]
  40c37b:	add    ecx,DWORD PTR [esp+eiz*2-0x490c0ca3]
  40c382:	aaa    
  40c383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c384:	add    ch,BYTE PTR [eax+0x51768544]
  40c38a:	int3   
  40c38b:	inc    edi
  40c38c:	clc    
  40c38d:	sbb    eax,0xdca083f2
  40c392:	push   ebx
  40c393:	(bad)  
  40c394:	adc    BYTE PTR [ecx],dh
  40c396:	in     al,dx
  40c397:	mov    ds:0x48e80ecd,eax
  40c39c:	shr    BYTE PTR [esp+eax*2],cl
  40c39f:	clc    
  40c3a0:	(bad)  
  40c3a1:	fist   DWORD PTR [esi-0x60a6351e]
  40c3a7:	ja     0x40c357
  40c3a9:	mov    fs,WORD PTR [edi]
  40c3ab:	ss daa 
  40c3ad:	loop   0x40c406
  40c3af:	out    dx,eax
  40c3b0:	aaa    
  40c3b1:	dec    ebp
  40c3b2:	call   0xb5c6:0x99b052b
  40c3b9:	mov    bl,0x26
  40c3bb:	mov    ch,0x76
  40c3bd:	push   ecx
  40c3be:	adc    eax,0x9d24228d
  40c3c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3c4:	cmp    BYTE PTR [esi-0x637e897c],ch
  40c3ca:	ins    BYTE PTR es:[edi],dx
  40c3cb:	mov    edx,0x38194631
  40c3d0:	mov    ds:0x5570d8be,eax
  40c3d5:	repnz dec ebp
  40c3d7:	xchg   ebx,eax
  40c3d8:	pop    esi
  40c3d9:	mov    eax,ds:0x567808d9
  40c3de:	retf   
  40c3df:	mov    bh,0x91
  40c3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3e2:	fdiv   QWORD PTR [edi+edx*1-0x1e]
  40c3e6:	cmp    BYTE PTR [edi],dl
  40c3e8:	nop
  40c3e9:	sbb    BYTE PTR [edi-0x7cd56e35],bh
  40c3ef:	ins    DWORD PTR es:[edi],dx
  40c3f0:	out    dx,al
  40c3f1:	xor    edi,DWORD PTR [esi+0x33]
  40c3f4:	aad    0x23
  40c3f6:	cli    
  40c3f7:	mov    ds:0xe1ac007d,eax
  40c3fc:	popa   
  40c3fd:	lds    ebp,FWORD PTR [edx+0x60]
  40c400:	lds    ebp,FWORD PTR [eax]
  40c402:	xchg   ebx,eax
  40c403:	aam    0xd3
  40c405:	rol    DWORD PTR [eax+0x4c],cl
  40c408:	xor    esp,ebx
  40c40a:	leave  
  40c40b:	adc    al,0x2e
  40c40d:	loope  0x40c454
  40c40f:	jp     0x40c48d
  40c411:	jns    0x40c3fb
  40c413:	loope  0x40c492
  40c415:	mov    ebx,0x164c135a
  40c41a:	out    dx,eax
  40c41b:	es push es
  40c41d:	test   al,0x2d
  40c41f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c420:	pop    ds
  40c421:	mov    eax,0xef4562e2
  40c426:	loope  0x40c463
  40c428:	dec    ebp
  40c429:	mov    BYTE PTR [ebx-0x29],al
  40c42c:	push   edi
  40c42d:	add    BYTE PTR [edx],ch
  40c42f:	jae    0x40c482
  40c431:	add    al,0x26
  40c433:	sub    eax,0xa765f697
  40c438:	xchg   ebx,eax
  40c439:	loop   0x40c461
  40c43b:	jbe    0x40c420
  40c43d:	out    0x94,al
  40c43f:	push   eax
  40c440:	shl    DWORD PTR [ebx+0x1d],0x48
  40c444:	pop    ebp
  40c445:	ss pop edi
  40c447:	mov    eax,0x7e2b6215
  40c44c:	aad    0xbd
  40c44e:	aas    
  40c44f:	cs repnz jecxz 0x40c4cb
  40c453:	iret   
  40c454:	stc    
  40c455:	pop    esi
  40c456:	pop    ds
  40c457:	xchg   BYTE PTR [ebp-0x636d9fb6],ah
  40c45d:	stos   DWORD PTR es:[edi],eax
  40c45e:	jp     0x40c454
  40c460:	pop    ecx
  40c461:	mov    ds:0xbbf911d4,eax
  40c466:	pop    ds
  40c467:	add    BYTE PTR [ecx-0x30],dl
  40c46a:	xadd   DWORD PTR ds:0x45c974,eax
  40c471:	lds    esi,FWORD PTR [ebp-0x30]
  40c474:	push   ss
  40c475:	shl    DWORD PTR [eax-0x5ffc91d2],cl
  40c47b:	sub    DWORD PTR [ebp+0x6f8ce8b7],0x77
  40c482:	push   ebp
  40c483:	lds    esi,FWORD PTR [ecx]
  40c485:	out    dx,al
  40c486:	sbb    cl,BYTE PTR [ebp+ebp*1+0x20298856]
  40c48d:	ja     0x40c439
  40c48f:	jmp    0x188b:0x5c5c14cb
  40c496:	aaa    
  40c497:	dec    esp
  40c498:	cmp    BYTE PTR [edi-0x22],dh
  40c49b:	fcomp  st(4)
  40c49d:	in     al,0x8d
  40c49f:	fidiv  WORD PTR [eax]
  40c4a1:	adc    BYTE PTR [edi-0x3e],0x88
  40c4a5:	aad    0x99
  40c4a7:	pop    edi
  40c4a8:	xchg   ecx,eax
  40c4a9:	mov    ebp,0xbeea722e
  40c4ae:	jp     0x40c4e5
  40c4b0:	xlat   BYTE PTR ds:[ebx]
  40c4b1:	sub    dl,0x86
  40c4b4:	lods   al,BYTE PTR ds:[esi]
  40c4b5:	es jp  0x40c488
  40c4b8:	ds jmp 0x7dc6:0xb8ee3ffc
  40c4c0:	push   ebx
  40c4c1:	dec    esp
  40c4c2:	xchg   ebp,eax
  40c4c3:	mov    al,0x50
  40c4c5:	xchg   ecx,eax
  40c4c6:	jno    0x40c4ad
  40c4c8:	adc    al,0xf6
  40c4ca:	xor    BYTE PTR [edx-0x1c],al
  40c4cd:	stos   DWORD PTR es:[edi],eax
  40c4ce:	mul    DWORD PTR [esi+edi*8+0x7e557ba0]
  40c4d5:	mov    ch,0xae
  40c4d7:	popf   
  40c4d8:	retf   0x993e
  40c4db:	repz mov edx,0xfa9978c7
  40c4e1:	add    eax,0xb7c001f2
  40c4e6:	inc    esi
  40c4e7:	stc    
  40c4e8:	sbb    BYTE PTR [edx-0x70],0x98
  40c4ec:	cmp    ebp,DWORD PTR [edx+0x16d493a8]
  40c4f2:	retf   
  40c4f3:	scas   eax,DWORD PTR es:[edi]
  40c4f4:	repnz icebp 
  40c4f6:	push   ss
  40c4f7:	xor    BYTE PTR [ecx-0x7b],ch
  40c4fa:	or     DWORD PTR [edi+ecx*1],0x25
  40c4fe:	xor    DWORD PTR [edi+0x21],eax
  40c501:	xchg   ecx,eax
  40c502:	or     BYTE PTR [edx+0x53],bl
  40c505:	push   esi
  40c506:	sbb    BYTE PTR [eax+0xed9a17a],0xec
  40c50d:	mov    ?,WORD PTR ds:0xda4f50c7
  40c513:	pop    ebp
  40c514:	out    dx,eax
  40c515:	in     al,0xc1
  40c517:	sub    bl,cl
  40c519:	outs   dx,DWORD PTR ds:[esi]
  40c51a:	shl    BYTE PTR [eax+0x7f],cl
  40c51d:	push   eax
  40c51e:	jmp    0xc205:0xa01eff1a
  40c525:	pop    esp
  40c526:	fild   QWORD PTR [ecx-0x4c]
  40c529:	xor    eax,0xaf5661a8
  40c52e:	sub    bh,BYTE PTR [esi-0x6083491a]
  40c534:	push   ecx
  40c535:	pop    ds
  40c536:	das    
  40c537:	cmp    BYTE PTR [edi-0x645312fb],ah
  40c53d:	mov    DWORD PTR [ecx+eiz*1],eax
  40c540:	int3   
  40c541:	sbb    al,0x69
  40c543:	inc    DWORD PTR [esi+ecx*1]
  40c546:	add    BYTE PTR gs:[eax+0x390e50d0],bl
  40c54d:	mov    ecx,0x8c4920d7
  40c552:	sub    bl,BYTE PTR [ebp-0x6cae0019]
  40c558:	out    dx,al
  40c559:	sub    al,0x3d
  40c55b:	jne    0x40c59e
  40c55d:	je     0x40c5a6
  40c55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c560:	(bad)  
  40c561:	retf   
  40c562:	and    bh,bl
  40c564:	jmp    FWORD PTR ss:[ebx]
  40c567:	imul   eax,DWORD PTR [ebx+0x72c23a9c],0x207f1659
  40c571:	sub    al,0xda
  40c573:	imul   edi,DWORD PTR [edx-0x28],0xffffff88
  40c577:	icebp  
  40c578:	in     al,0xab
  40c57a:	aas    
  40c57b:	cmp    eax,0x5fee643b
  40c580:	sbb    BYTE PTR [edx-0x191feaf9],ch
  40c586:	xchg   edi,eax
  40c587:	fucomp st(2)
  40c589:	(bad)  
  40c58a:	push   esi
  40c58b:	cmp    al,0xb5
  40c58d:	inc    esi
  40c58e:	lods   al,BYTE PTR ds:[esi]
  40c58f:	imul   eax,DWORD PTR [esi-0x13b51bab],0x2d
  40c596:	xchg   edi,eax
  40c597:	dec    ebx
  40c598:	enter  0xd8db,0xa3
  40c59c:	lods   eax,DWORD PTR ds:[esi]
  40c59d:	ins    DWORD PTR es:[edi],dx
  40c59e:	es pop ss
  40c5a0:	sub    eax,0x76e0a376
  40c5a5:	mov    al,ds:0xca93e3a
  40c5aa:	clc    
  40c5ab:	addr16 push cs
  40c5ad:	faddp  st(4),st
  40c5af:	xchg   ebp,eax
  40c5b0:	or     dh,BYTE PTR [ebx+ebx*8+0x6c]
  40c5b4:	lahf   
  40c5b5:	(bad)  
  40c5b7:	stos   BYTE PTR es:[edi],al
  40c5b8:	aas    
  40c5b9:	xchg   DWORD PTR [ecx],esi
  40c5bb:	pop    ebx
  40c5bc:	mov    WORD PTR [edi],gs
  40c5be:	dec    ebp
  40c5bf:	(bad)  
  40c5c0:	popf   
  40c5c1:	mov    esp,0x3ac8b05b
  40c5c6:	inc    edi
  40c5c7:	sbb    edi,esi
  40c5c9:	xchg   edi,eax
  40c5ca:	fild   WORD PTR [esi-0x24]
  40c5cd:	add    DWORD PTR [edi+edi*8+0xe],eax
  40c5d1:	mov    eax,0x665f1953
  40c5d6:	sub    esi,DWORD PTR [edi+0x390b2a97]
  40c5dc:	enter  0x5785,0x43
  40c5e0:	je     0x40c5ca
  40c5e2:	lds    ebx,FWORD PTR [ebx+0x36a55ca6]
  40c5e8:	popa   
  40c5e9:	inc    ecx
  40c5ea:	xchg   edi,eax
  40c5eb:	mov    ah,0xd9
  40c5ed:	call   0xa3ab:0xb4a8cc97
  40c5f4:	xor    BYTE PTR [edi-0x3cda0f86],dh
  40c5fa:	add    ecx,ebx
  40c5fc:	inc    esp
  40c5fd:	cwde   
  40c5fe:	retf   0xa26
  40c601:	xor    esp,DWORD PTR [eax-0x5d400bc3]
  40c607:	mov    edx,0x2fdd097d
  40c60c:	das    
  40c60d:	fild   DWORD PTR [esi]
  40c60f:	lods   al,BYTE PTR ds:[esi]
  40c610:	sub    eax,0x761d830c
  40c615:	jle    0x40c5e5
  40c617:	xchg   ebp,eax
  40c618:	scas   al,BYTE PTR es:[edi]
  40c619:	fsub   QWORD PTR [esi]
  40c61b:	std    
  40c61c:	sub    BYTE PTR [ebx-0x46],bl
  40c61f:	adc    ah,BYTE PTR [edx+0x58fd9f46]
  40c625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c626:	aad    0x93
  40c628:	push   eax
  40c629:	rol    DWORD PTR [ebp-0x9],1
  40c62c:	inc    esi
  40c62d:	ret    
  40c62e:	bound  ebx,QWORD PTR [esi]
  40c630:	inc    ebp
  40c631:	outs   dx,DWORD PTR ds:[esi]
  40c632:	and    BYTE PTR [edi],bh
  40c634:	(bad)  
  40c635:	imul   edx,DWORD PTR [ebp+edx*4-0x3c1525f8],0xa5738e42
  40c640:	xor    eax,0xdd20bec
  40c645:	xor    eax,0x5a0e4fcc
  40c64a:	sbb    bh,bl
  40c64c:	sub    al,0xa9
  40c64e:	xor    dl,BYTE PTR [edi]
  40c650:	jl     0x40c625
  40c652:	sub    edx,DWORD PTR [ebx-0x61]
  40c655:	cmp    ecx,DWORD PTR [esi]
  40c657:	sub    DWORD PTR [edx+0x2601837e],esi
  40c65d:	xor    esi,eax
  40c65f:	inc    eax
  40c660:	fist   WORD PTR [edx-0x19e11003]
  40c666:	pop    esp
  40c667:	mov    ecx,0xd710cfad
  40c66c:	(bad)  
  40c66d:	stos   DWORD PTR es:[edi],eax
  40c66e:	repz imul DWORD PTR [eax]
  40c671:	dec    ebx
  40c672:	mov    WORD PTR [eax-0x730b0e09],fs
  40c678:	mov    bh,0x6
  40c67a:	jne    0x40c650
  40c67c:	xchg   esp,eax
  40c67d:	xchg   BYTE PTR [esi+ebp*4+0x29],bh
  40c681:	movntq QWORD PTR [ecx+edx*1-0x305a436],mm1
  40c689:	cs push ebx
  40c68b:	mov    cl,0x5f
  40c68d:	mov    eax,ds:0x3e91409
  40c692:	jbe    0x40c6fc
  40c694:	xor    DWORD PTR [eax-0x58],0x53
  40c698:	mov    ecx,0x9b1681de
  40c69d:	out    dx,al
  40c69e:	adc    ah,BYTE PTR [ecx+0x7fb1a404]
  40c6a4:	pop    eax
  40c6a5:	mov    ebp,0x8bd237ee
  40c6aa:	scas   eax,DWORD PTR es:[edi]
  40c6ab:	inc    edi
  40c6ac:	into   
  40c6ad:	rcl    BYTE PTR [edx+0x4c],1
  40c6b0:	pop    ds
  40c6b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6b2:	push   0xcd48ace7
  40c6b7:	xor    dh,dl
  40c6b9:	jp     0x40c6d6
  40c6bb:	inc    ecx
  40c6bc:	inc    esi
  40c6bd:	pop    esi
  40c6be:	mov    dh,0xc5
  40c6c0:	cli    
  40c6c1:	mov    ds:0x8ae54153,eax
  40c6c6:	jo     0x40c737
  40c6c8:	shl    ebx,0xc1
  40c6cb:	xor    DWORD PTR [ebx+esi*2],ebp
  40c6ce:	mov    ?,esp
  40c6d0:	dec    edx
  40c6d1:	and    BYTE PTR [edx+0x1341fa04],ah
  40c6d7:	lods   eax,DWORD PTR ds:[esi]
  40c6d8:	add    dh,BYTE PTR [esi-0x20]
  40c6db:	clc    
  40c6dc:	push   ss
  40c6dd:	cmp    DWORD PTR [ebx-0x5a954820],0x47b55fd
  40c6e7:	mov    ah,0x7b
  40c6e9:	test   DWORD PTR [esp+ebp*8+0x64],ebx
  40c6ed:	pop    eax
  40c6ee:	inc    edi
  40c6ef:	int    0x50
  40c6f1:	dec    ebx
  40c6f2:	out    0x17,al
  40c6f4:	sub    edx,DWORD PTR [ebp-0x74]
  40c6f7:	fwait
  40c6f8:	retf   0x4294
  40c6fb:	mov    dl,0x2f
  40c6fd:	jbe    0x40c75d
  40c6ff:	ret    0x24dd
  40c702:	xor    ebp,edx
  40c704:	xor    BYTE PTR [ebx+0x6df48d46],0x3
  40c70b:	xor    DWORD PTR [ebp-0x34],ecx
  40c70e:	push   0xffffffcd
  40c710:	loopne 0x40c6b1
  40c712:	fiadd  WORD PTR [edx+0x75]
  40c715:	mov    ebx,0x20d5187e
  40c71a:	mov    ebx,0x98eead5a
  40c71f:	sub    eax,0x57dc3968
  40c724:	ins    DWORD PTR es:[edi],dx
  40c725:	pusha  
  40c726:	scas   eax,DWORD PTR es:[edi]
  40c727:	int3   
  40c728:	pop    ebx
  40c729:	xchg   al,cl
  40c72b:	mov    ch,0x6c
  40c72d:	(bad)  
  40c72f:	mov    dl,0x4a
  40c731:	dec    esi
  40c732:	mov    ebx,0x78f7d776
  40c737:	loope  0x40c705
  40c739:	sbb    eax,0x1395ce86
  40c73e:	pop    ss
  40c73f:	xor    al,0xda
  40c741:	mov    BYTE PTR [ecx-0x2e],dl
  40c744:	test   BYTE PTR ds:[esi],cl
  40c747:	jge    0x40c747
  40c749:	(bad)  
  40c74a:	mov    esp,0xaa96d786
  40c74f:	sub    esp,0x13
  40c752:	push   edx
  40c753:	sbb    dl,bh
  40c755:	ret    
  40c756:	fcmovne st,st(5)
  40c758:	data16 jne 0x40c7d2
  40c75b:	(bad)  
  40c75c:	cli    
  40c75d:	add    al,0x65
  40c75f:	fcomp  DWORD PTR [ebx+0x5e]
  40c762:	cmp    al,0xdd
  40c764:	call   0xae3443ce
  40c769:	adc    esi,esi
  40c76b:	sbb    DWORD PTR [edi],ebx
  40c76d:	fcomp  DWORD PTR [edi]
  40c76f:	pop    ebx
  40c770:	leave  
  40c771:	add    bl,bh
  40c773:	mov    ebx,0x90dc5508
  40c778:	aam    0xd9
  40c77a:	pop    esp
  40c77b:	ja     0x40c705
  40c77d:	pop    edx
  40c77e:	lock jno 0x40c763
  40c781:	push   es
  40c782:	int3   
  40c783:	(bad)  
  40c784:	mov    ebp,0x71a51960
  40c789:	jmp    0xfe32b54e
  40c78e:	dec    eax
  40c78f:	popf   
  40c790:	sbb    eax,0xe4443d38
  40c795:	cld    
  40c796:	test   al,0x7f
  40c798:	or     BYTE PTR [edi-0x62],ch
  40c79b:	sbb    esp,eax
  40c79d:	cmp    DWORD PTR [ebp+0x69ce5aa4],ebx
  40c7a3:	mov    dl,0x6d
  40c7a5:	lahf   
  40c7a6:	stc    
  40c7a7:	mov    ebx,0xe7083f49
  40c7ac:	iret   
  40c7ad:	sahf   
  40c7ae:	ins    BYTE PTR es:[edi],dx
  40c7af:	xchg   BYTE PTR [edi+0x2f7fc8b4],bl
  40c7b5:	jcxz   0x40c837
  40c7b8:	adc    BYTE PTR [ebx-0x3b],al
  40c7bb:	mov    ecx,0xb5a78ce8
  40c7c0:	xor    DWORD PTR [edi],ecx
  40c7c2:	xlat   BYTE PTR ds:[ebx]
  40c7c3:	xor    al,0xf2
  40c7c5:	mov    bl,0xa0
  40c7c7:	xchg   ebp,eax
  40c7c8:	fwait
  40c7c9:	or     dh,BYTE PTR [ebx+ecx*2+0x6a]
  40c7cd:	aam    0xdd
  40c7cf:	and    al,0x7f
  40c7d1:	dec    edi
  40c7d2:	mov    ebx,0xa3ad9e92
  40c7d7:	aaa    
  40c7d8:	adc    al,0x32
  40c7da:	sbb    esp,DWORD PTR [ebx-0x1a9a003c]
  40c7e0:	and    DWORD PTR [ebp+esi*1+0x24],0xffffffce
  40c7e5:	frstor [eax+ebx*8-0x37924721]
  40c7ec:	add    al,0x8
  40c7ee:	daa    
  40c7ef:	inc    ebx
  40c7f0:	dec    eax
  40c7f1:	pop    eax
  40c7f2:	mov    edi,0xe075793c
  40c7f7:	inc    esp
  40c7f8:	mov    DWORD PTR [ebx],ebp
  40c7fa:	ins    BYTE PTR es:[edi],dx
  40c7fb:	ins    DWORD PTR es:[edi],dx
  40c7fc:	mov    eax,ds:0x5f8a0166
  40c801:	outs   dx,BYTE PTR ds:[esi]
  40c802:	pop    esi
  40c803:	pusha  
  40c804:	jmp    0x40c881
  40c806:	jle    0x40c881
  40c808:	xchg   edx,eax
  40c809:	retf   
  40c80a:	cmp    al,BYTE PTR [edi]
  40c80c:	(bad)  
  40c80d:	in     eax,0xff
  40c80f:	xchg   esi,eax
  40c810:	jl     0x40c86c
  40c812:	sub    eax,0x1ebe83c8
  40c817:	div    DWORD PTR ds:0xdb3406a4
  40c81d:	mov    dl,0xef
  40c81f:	mov    bh,0x29
  40c821:	pushf  
  40c822:	aam    0x2d
  40c824:	pop    edx
  40c825:	inc    esp
  40c826:	mov    ds:0x7a92629a,eax
  40c82b:	jo     0x40c842
  40c82d:	xor    al,0x8f
  40c82f:	outs   dx,DWORD PTR ds:[esi]
  40c830:	retf   0xde4e
  40c833:	shl    ecx,0x92
  40c836:	xor    cl,bh
  40c838:	or     eax,0x9c0186e9
  40c83d:	int    0xdc
  40c83f:	jecxz  0x40c7fe
  40c841:	(bad)  
  40c842:	fsub   QWORD PTR [ebp-0x30]
  40c845:	jbe    0x40c894
  40c847:	popa   
  40c848:	xchg   ecx,ebp
  40c84a:	or     al,0xc2
  40c84c:	jl     0x40c85b
  40c84e:	mov    ecx,0x60f06c71
  40c853:	mov    ebx,0x816943a3
  40c858:	aam    0x44
  40c85a:	mov    ah,0x5e
  40c85c:	fnstcw WORD PTR [ebx+0x5f]
  40c85f:	out    0x1a,eax
  40c861:	push   ebx
  40c862:	aam    0x2b
  40c864:	sub    ch,BYTE PTR [ecx+0x3]
  40c867:	hlt    
  40c868:	adc    DWORD PTR ds:0x7a354f1d,edx
  40c86e:	stc    
  40c86f:	inc    ebx
  40c870:	add    eax,0x40189323
  40c875:	push   ss
  40c876:	int3   
  40c877:	push   edx
  40c878:	pop    ecx
  40c879:	jmp    0xe2eb:0xcb6b2417
  40c880:	push   esi
  40c881:	cmp    bh,BYTE PTR [eax+eax*2-0x22831c1c]
  40c888:	or     edi,ecx
  40c88a:	or     DWORD PTR [esi-0x52],ebx
  40c88d:	sbb    BYTE PTR [edi],0x35
  40c890:	outs   dx,BYTE PTR ds:[esi]
  40c891:	retf   0x6562
  40c894:	jle    0x40c911
  40c896:	sbb    BYTE PTR [edx+esi*2+0x24],bl
  40c89a:	(bad)  
  40c89b:	cld    
  40c89c:	scas   eax,DWORD PTR es:[edi]
  40c89d:	xchg   esp,eax
  40c89e:	mov    esi,0x4b68fd66
  40c8a3:	adc    esp,DWORD PTR [eax-0x261a687]
  40c8a9:	jae    0x40c923
  40c8ab:	rol    DWORD PTR [ebx],1
  40c8ad:	sub    al,0x21
  40c8af:	xchg   ebx,eax
  40c8b0:	aad    0x11
  40c8b2:	and    al,0x6b
  40c8b4:	jns    0x40c8fd
  40c8b6:	sub    dl,BYTE PTR [esi+edx*1-0x357517a1]
  40c8bd:	jbe    0x40c914
  40c8bf:	test   DWORD PTR [eax-0x2f693cc],edx
  40c8c5:	mov    dl,0x7b
  40c8c7:	ja     0x40c8b0
  40c8c9:	jo     0x40c8fa
  40c8cb:	xchg   edi,eax
  40c8cc:	les    edi,FWORD PTR [eax-0x9]
  40c8cf:	je     0x40c87d
  40c8d1:	jne    0x40c8af
  40c8d3:	test   DWORD PTR [ebx+0x70d8f2a2],edi
  40c8d9:	jmp    0x40c8f6
  40c8db:	adc    BYTE PTR [ebx-0x1c],dl
  40c8de:	jmp    0x86a19fa3
  40c8e3:	call   0xa667:0x7bf1bf48
  40c8ea:	or     al,0x8
  40c8ec:	xchg   ebx,eax
  40c8ed:	pop    edx
  40c8ee:	add    bh,BYTE PTR [ecx+eiz*8]
  40c8f1:	sub    bl,al
  40c8f3:	pop    esi
  40c8f4:	outs   dx,DWORD PTR ds:[esi]
  40c8f5:	dec    eax
  40c8f6:	inc    esp
  40c8f7:	mov    al,ds:0x3166f6e2
  40c8fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8fd:	pop    ds
  40c8fe:	cld    
  40c8ff:	pop    esi
  40c900:	xor    edx,DWORD PTR [edx-0x1d]
  40c903:	pop    ebp
  40c904:	pop    ds
  40c905:	inc    ebp
  40c906:	mov    ecx,0xecea0c16
  40c90b:	gs in  al,0x4a
  40c90e:	xchg   esi,eax
  40c90f:	imul   eax,DWORD PTR [bp+di-0x6c],0x56
  40c914:	outs   dx,BYTE PTR ds:[esi]
  40c915:	xchg   ebx,eax
  40c916:	outs   dx,BYTE PTR ds:[esi]
  40c917:	in     al,dx
  40c918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c91a:	inc    ebx
  40c91b:	or     DWORD PTR [ebp+0x1e6387c5],edx
  40c921:	xlat   BYTE PTR ds:[ebx]
  40c922:	mov    ebp,0x4e6d1da9
  40c927:	imul   BYTE PTR [edi]
  40c929:	xchg   edx,eax
  40c92a:	mov    edi,0x44b237a1
  40c92f:	xor    ch,BYTE PTR [ebx]
  40c931:	arpl   WORD PTR [ecx-0x1b],sp
  40c934:	inc    ecx
  40c935:	sbb    al,0x12
  40c937:	mov    WORD PTR [ebx-0x2f],fs
  40c93a:	js     0x40c8f0
  40c93c:	adc    ebx,DWORD PTR ds:0xc2fc7eb8
  40c942:	js     0x40c943
  40c944:	in     eax,dx
  40c945:	push   edi
  40c946:	xchg   esp,eax
  40c947:	xor    eax,0x5f29bed9
  40c94c:	push   cs
  40c94d:	addr16 ret 0x2814
  40c951:	pop    es
  40c952:	lock gs iret 
  40c955:	sub    eax,0xdd19f028
  40c95a:	inc    edx
  40c95b:	adc    ebp,DWORD PTR [edx]
  40c95d:	dec    ebp
  40c95e:	push   ebp
  40c95f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax-0x405ddba3]
  40d00c:	popf   
  40d00d:	mov    dl,0xe9
  40d00f:	jl     0x40d08d
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	neg    BYTE PTR ds:0x56abb375
  40d01b:	enter  0xa515,0x87
  40d01f:	pop    ebx
  40d020:	loopne 0x40cfed
  40d022:	or     BYTE PTR [ebp-0x80],bh
  40d025:	shr    DWORD PTR [edi-0x2e8147a],0xfa
  40d02c:	ja     0x40cff2
  40d02e:	sbb    BYTE PTR [esi-0x4b8de66c],ah
  40d034:	scas   al,BYTE PTR es:[edi]
  40d035:	xchg   edi,eax
  40d036:	jmp    0x40cfc2
  40d038:	loop   0x40d070
  40d03a:	sar    DWORD PTR [eax+0x75],cl
  40d03d:	jmp    0xb54b9f70
  40d042:	repnz xor al,0x65
  40d045:	pop    eax
  40d046:	ins    BYTE PTR es:[edi],dx
  40d047:	popf   
  40d048:	mov    eax,0xf466a37c
  40d04d:	jg     0x40d080
  40d04f:	enter  0xb8d8,0x54
  40d053:	or     edx,DWORD PTR [edi+0x64072b8]
  40d059:	xor    DWORD PTR [ecx+0x6b23f57a],edx
  40d05f:	xchg   ebp,eax
  40d060:	pop    edi
  40d061:	pop    ecx
  40d062:	shl    esi,0x3b
  40d065:	add    esi,DWORD PTR [ecx+0x23e27674]
  40d06b:	mov    ebx,0x373ad781
  40d070:	push   0x4e2046b3
  40d075:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d077:	mov    WORD PTR [edx-0x26],gs
  40d07a:	xchg   DWORD PTR [edi],eax
  40d07c:	mov    BYTE PTR [ebp+0x2e2b567],dl
  40d082:	aaa    
  40d083:	and    BYTE PTR [ecx],bl
  40d085:	ja     0x40d0a0
  40d087:	sub    edx,DWORD PTR [esi+0x2a2e5e29]
  40d08d:	pop    es
  40d08e:	sbb    al,0x43
  40d090:	arpl   WORD PTR [edi+0x1c],cx
  40d093:	dec    edx
  40d094:	cdq    
  40d095:	sub    al,0x4
  40d097:	and    eax,0x7fd2ed49
  40d09c:	sbb    eax,0xbb66ab3e
  40d0a1:	jne    0x40d06f
  40d0a3:	xchg   esi,eax
  40d0a4:	pop    esp
  40d0a5:	stos   DWORD PTR es:[edi],eax
  40d0a6:	retf   
  40d0a7:	mov    ebx,0x472a004c
  40d0ac:	mov    bl,0x2
  40d0ae:	imul   edi,DWORD PTR gs:[edi],0x74466169
  40d0b5:	inc    eax
  40d0b6:	mov    dl,0xa0
  40d0b8:	outs   dx,BYTE PTR ds:[esi]
  40d0b9:	xchg   edi,eax
  40d0ba:	lods   eax,DWORD PTR ds:[esi]
  40d0bb:	or     DWORD PTR [esi+0x6b2fe7b6],eax
  40d0c1:	test   al,0x6
  40d0c3:	mov    cl,0x64
  40d0c5:	and    DWORD PTR [edx],0xffffffb7
  40d0c8:	adc    bl,al
  40d0ca:	mov    eax,ds:0x51833281
  40d0cf:	jb     0x40d081
  40d0d1:	clc    
  40d0d2:	mov    ebp,0x9d95d36e
  40d0d7:	gs ins BYTE PTR es:[edi],dx
  40d0d9:	mov    dh,BYTE PTR [ebx]
  40d0db:	cli    
  40d0dc:	call   DWORD PTR [esi]
  40d0de:	ret    
  40d0df:	mov    al,0x79
  40d0e1:	or     DWORD PTR [eax-0x7347555d],0x5e
  40d0e8:	dec    ecx
  40d0e9:	inc    ecx
  40d0ea:	ja     0x40d0ef
  40d0ec:	push   ds
  40d0ed:	int    0xbc
  40d0ef:	or     ch,ah
  40d0f1:	jge    0x40d0f4
  40d0f3:	mov    eax,0xfa1cc3fb
  40d0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0f9:	adc    eax,0x33154118
  40d0fe:	mov    ebx,0x46300c9
  40d103:	xchg   ebx,eax
  40d104:	xchg   BYTE PTR [edx],ch
  40d106:	inc    edi
  40d107:	jae    0x40d150
  40d109:	js     0x40d0e5
  40d10b:	neg    DWORD PTR [ebp+0x57]
  40d10e:	lods   al,BYTE PTR ds:[esi]
  40d10f:	and    ecx,DWORD PTR [ebx-0x493c3b44]
  40d115:	dec    ecx
  40d116:	xchg   edx,eax
  40d117:	pusha  
  40d118:	lahf   
  40d119:	push   ds
  40d11a:	pop    esi
  40d11b:	es jne 0x40d169
  40d11e:	mov    esi,0x48827d5c
  40d123:	mov    eax,0x2d20ea53
  40d128:	(bad)  
  40d129:	jle    0x40d18b
  40d12b:	es dec esi
  40d12d:	mov    ebp,0xdc00e1e9
  40d132:	ret    0x5d00
  40d135:	pop    es
  40d136:	int3   
  40d137:	xor    ah,dh
  40d139:	popf   
  40d13a:	ins    BYTE PTR es:[edi],dx
  40d13b:	dec    ecx
  40d13c:	popa   
  40d13d:	or     BYTE PTR ds:0xe855b196,dh
  40d143:	push   edx
  40d144:	fcom   QWORD PTR [ebx]
  40d146:	add    BYTE PTR [ebx+ebp*8],ch
  40d149:	cmp    al,0xb8
  40d14b:	sti    
  40d14c:	sbb    ebp,DWORD PTR [esi+0x16b8cd46]
  40d152:	pop    esp
  40d153:	xchg   esi,eax
  40d154:	repnz pusha 
  40d156:	imul   esp,DWORD PTR [edi-0x991dbfa],0x9ff0caae
  40d160:	or     BYTE PTR [ebp-0x7cc8517a],ch
  40d166:	and    al,0x2c
  40d168:	xchg   edx,eax
  40d169:	ja     0x40d176
  40d16b:	xchg   DWORD PTR ss:[edx+0x9819f5b],esp
  40d172:	imul   esi,eax,0x927a7eb3
  40d178:	mov    al,ds:0xc19207b9
  40d17d:	jmp    0x40d1e7
  40d17f:	hlt    
  40d180:	stos   DWORD PTR es:[edi],eax
  40d181:	cli    
  40d182:	sub    BYTE PTR [esi+0x27],bl
  40d185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d186:	cli    
  40d187:	stos   BYTE PTR es:[edi],al
  40d188:	and    bh,bh
  40d18a:	out    0x59,al
  40d18c:	outs   dx,DWORD PTR ds:[esi]
  40d18d:	lock mov ah,0xaa
  40d190:	jne    0x40d206
  40d192:	xchg   ebx,eax
  40d193:	stos   BYTE PTR es:[edi],al
  40d194:	lahf   
  40d195:	mov    al,ds:0x25153995
  40d19a:	push   esp
  40d19b:	or     al,0x84
  40d19d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d19e:	mov    al,ds:0xa73a920c
  40d1a3:	push   0x796c2e6
  40d1a8:	push   edi
  40d1a9:	add    BYTE PTR [eax-0x6d469a9e],bh
  40d1af:	out    0xa4,al
  40d1b1:	inc    esi
  40d1b2:	jb     0x40d151
  40d1b4:	int3   
  40d1b5:	jb     0x40d1b2
  40d1b7:	mov    bh,0x10
  40d1b9:	pop    eax
  40d1ba:	lea    edi,ds:0x2b796b7d
  40d1c0:	xor    al,0x22
  40d1c2:	sbb    al,BYTE PTR [eax+0x668f4e4a]
  40d1c8:	or     ecx,DWORD PTR [edx]
  40d1ca:	mov    ss,WORD PTR [ebp-0x2e1896a8]
  40d1d0:	jo     0x40d155
  40d1d2:	mov    dh,0xe0
  40d1d4:	push   ds
  40d1d5:	push   ds
  40d1d6:	push   edi
  40d1d7:	inc    esp
  40d1d8:	aaa    
  40d1d9:	nop
  40d1da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1db:	jl     0x40d1cb
  40d1dd:	mov    cl,al
  40d1df:	dec    esp
  40d1e0:	leave  
  40d1e1:	mov    ds:0xa7ca5bb5,al
  40d1e6:	pop    es
  40d1e7:	les    ecx,FWORD PTR [esi-0x27]
  40d1ea:	das    
  40d1eb:	push   ss
  40d1ec:	sbb    DWORD PTR [ebp+0x6197d558],0x63bcb2bc
  40d1f6:	adc    BYTE PTR [ecx],0xd2
  40d1f9:	pusha  
  40d1fa:	aaa    
  40d1fb:	leave  
  40d1fc:	mov    WORD PTR [eax-0x9],cs
  40d1ff:	outs   dx,BYTE PTR ds:[esi]
  40d200:	or     dh,dl
  40d202:	daa    
  40d203:	ret    0xa138
  40d206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d207:	ds out dx,al
  40d209:	imul   ebp,DWORD PTR [eax-0x2d03882b],0xffffffd0
  40d210:	fnstenv [eax+0x51]
  40d213:	inc    ebp
  40d214:	in     al,dx
  40d215:	lods   al,BYTE PTR ds:[esi]
  40d216:	aad    0xe5
  40d218:	dec    eax
  40d219:	xor    BYTE PTR [ebx-0x501af47b],0x57
  40d220:	dec    eax
  40d221:	mov    ebp,ecx
  40d223:	inc    ebp
  40d224:	fistp  QWORD PTR [esi+edi*8]
  40d227:	es int3 
  40d229:	js     0x40d2aa
  40d22b:	jns    0x40d261
  40d22d:	and    BYTE PTR [ebx-0x2e417941],al
  40d233:	ss inc eax
  40d235:	pop    esi
  40d236:	ds adc al,0xb3
  40d239:	es inc ecx
  40d23b:	inc    esi
  40d23c:	into   
  40d23d:	jb     0x40d1c3
  40d23f:	fcomi  st,st(4)
  40d241:	sbb    ah,dl
  40d243:	(bad)  
  40d244:	pop    edi
  40d245:	xor    BYTE PTR [ebp+0x37],bl
  40d248:	inc    ecx
  40d249:	xchg   DWORD PTR [ecx-0x72d3d549],edi
  40d24f:	mov    al,0x50
  40d251:	int3   
  40d252:	lahf   
  40d253:	and    BYTE PTR [esi-0x21bbf72],bl
  40d259:	mov    BYTE PTR [edi],ch
  40d25b:	rcl    BYTE PTR [esi+0x7c],cl
  40d25e:	mov    dl,0xb3
  40d260:	inc    ebp
  40d261:	popa   
  40d262:	inc    esp
  40d263:	mov    eax,0xc2ff3c06
  40d268:	add    DWORD PTR [eax-0x31],ecx
  40d26b:	icebp  
  40d26c:	sub    BYTE PTR [eax-0x3a],0xac
  40d270:	jl     0x40d27f
  40d272:	xchg   ecx,eax
  40d273:	cli    
  40d274:	scas   al,BYTE PTR es:[edi]
  40d275:	cmp    edi,DWORD PTR [edx+edx*2-0x702f53a6]
  40d27c:	ss jo  0x40d2ce
  40d27f:	test   al,0xc
  40d281:	lahf   
  40d282:	es mov ebx,0x294528f6
  40d288:	pushf  
  40d289:	and    BYTE PTR [ebp-0x44857c2f],0xc9
  40d290:	push   ebx
  40d291:	fdivp  st(3),st
  40d293:	cmp    edx,edx
  40d295:	adc    DWORD PTR [ebx-0x1b4e712],esp
  40d29b:	inc    esp
  40d29c:	mov    al,ds:0xbe3b77f6
  40d2a1:	push   es
  40d2a2:	in     al,0x88
  40d2a4:	mov    ebx,DWORD PTR [edx+0x3]
  40d2a7:	mov    fs,eax
  40d2a9:	dec    esi
  40d2aa:	out    dx,eax
  40d2ab:	fisttp WORD PTR [edi+0x5c6671b4]
  40d2b1:	imul   edi,DWORD PTR es:[eax],0xed5f3a16
  40d2b8:	jne    0x40d273
  40d2ba:	adc    al,0x1
  40d2bc:	xchg   ecx,eax
  40d2bd:	mov    edi,DWORD PTR [esi-0x1c]
  40d2c0:	mov    al,ds:0x75c02f72
  40d2c5:	pushf  
  40d2c6:	jae    0x40d2c5
  40d2c8:	hlt    
  40d2c9:	sbb    ebp,ecx
  40d2cb:	or     BYTE PTR [ebx-0x38],bl
  40d2ce:	cwde   
  40d2cf:	push   cs
  40d2d0:	xor    dl,cl
  40d2d2:	mov    ah,0xaf
  40d2d4:	fistp  WORD PTR [edi]
  40d2d6:	cwde   
  40d2d7:	loop   0x40d291
  40d2d9:	jmp    0x632c:0xa3ead013
  40d2e0:	and    cl,dh
  40d2e2:	dec    edx
  40d2e3:	(bad)  
  40d2e4:	adc    edi,ebx
  40d2e6:	cld    
  40d2e7:	push   esi
  40d2e8:	outs   dx,BYTE PTR ds:[esi]
  40d2e9:	aad    0xc6
  40d2eb:	cmc    
  40d2ec:	cmc    
  40d2ed:	adc    BYTE PTR [ecx+ecx*2+0x477cf07a],0x1b
  40d2f5:	push   ecx
  40d2f6:	xchg   esp,eax
  40d2f7:	pop    ebx
  40d2f8:	jecxz  0x40d2fc
  40d2fa:	push   edi
  40d2fb:	xchg   ch,bh
  40d2fd:	ja     0x40d2ac
  40d2ff:	dec    ebx
  40d300:	sub    eax,edx
  40d302:	cmp    ch,BYTE PTR [ebx-0x75dd4935]
  40d308:	jle    0x40d2a4
  40d30a:	add    dl,BYTE PTR [ecx]
  40d30c:	mov    ebp,0xbc064fe2
  40d311:	pop    ecx
  40d312:	ror    eax,cl
  40d314:	cld    
  40d315:	loope  0x40d306
  40d317:	sub    ebx,DWORD PTR ss:[edx-0x1]
  40d31b:	or     eax,0x28196335
  40d320:	pop    ebx
  40d321:	add    ah,ah
  40d323:	push   eax
  40d324:	sbb    ecx,DWORD PTR [edx]
  40d326:	mov    edi,DWORD PTR [ebp+ebp*2+0x6e]
  40d32a:	xor    al,0x7e
  40d32d:	hlt    
  40d32e:	(bad)  
  40d32f:	(bad)  
  40d331:	xor    al,0xad
  40d333:	adc    dh,BYTE PTR [ebx]
  40d335:	jmp    0xdf93c60b
  40d33a:	xchg   esp,ebp
  40d33c:	jmp    0x2beaedc4
  40d341:	ret    0xddcf
  40d344:	shl    dl,0x5d
  40d347:	aad    0x5a
  40d349:	out    0x38,eax
  40d34b:	sti    
  40d34c:	push   ds
  40d34d:	push   0xbdbb13f
  40d352:	addr16 (bad) 
  40d354:	xor    dl,cl
  40d356:	dec    eax
  40d357:	jmp    0xd56595f9
  40d35c:	bound  ecx,QWORD PTR [ebx+ebp*4-0x295b1254]
  40d363:	ins    BYTE PTR es:[edi],dx
  40d364:	cmp    eax,0xf603547e
  40d369:	push   edx
  40d36a:	sub    BYTE PTR [edx+0x36],dh
  40d36d:	dec    eax
  40d36e:	in     al,dx
  40d36f:	and    DWORD PTR [ebx],eax
  40d371:	sahf   
  40d372:	les    ecx,FWORD PTR [ecx-0x21a5d837]
  40d378:	push   ds
  40d379:	clc    
  40d37a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d37b:	(bad)  ds:0x8122c90b
  40d381:	call   DWORD PTR [eax-0x7f]
  40d384:	hlt    
  40d385:	in     al,dx
  40d386:	in     al,dx
  40d387:	addr16 mov al,ds:0xeac7
  40d38b:	mov    WORD PTR [ebp+0x48],ss
  40d38e:	mov    BYTE PTR [ebp+0x17],dh
  40d391:	pop    ebp
  40d392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d393:	cmc    
  40d394:	sub    edx,edi
  40d396:	js     0x40d33e
  40d398:	hlt    
  40d399:	aas    
  40d39a:	dec    edi
  40d39b:	in     al,dx
  40d39c:	add    BYTE PTR [ecx+0x7e757284],al
  40d3a2:	adc    eax,0x7fbd2be2
  40d3a7:	dec    eax
  40d3a8:	cmp    ebp,DWORD PTR [eax-0xc]
  40d3ab:	retf   0x464c
  40d3ae:	mov    DWORD PTR [edx],ebx
  40d3b0:	stc    
  40d3b1:	mov    bh,BYTE PTR [eax+0x5e366c02]
  40d3b7:	add    eax,0x61bfa557
  40d3bc:	xchg   ebp,eax
  40d3bd:	xchg   ecx,eax
  40d3be:	xchg   edi,eax
  40d3bf:	push   edi
  40d3c0:	inc    edi
  40d3c1:	or     eax,edi
  40d3c3:	iret   
  40d3c4:	adc    cl,al
  40d3c6:	out    0x9,al
  40d3c8:	(bad)  
  40d3c9:	cs ds jl 0x40d386
  40d3cd:	sub    DWORD PTR [ecx+0x4e],ebp
  40d3d0:	pop    ss
  40d3d1:	push   ds
  40d3d2:	jge    0x40d3ce
  40d3d4:	out    0xf2,eax
  40d3d6:	out    dx,al
  40d3d7:	mov    eax,0x7781dd7d
  40d3dc:	mov    BYTE PTR [esi],dl
  40d3de:	test   eax,0xed1e64b5
  40d3e3:	jp     0x40d3f3
  40d3e5:	pop    esi
  40d3e6:	aam    0xcb
  40d3e8:	aaa    
  40d3e9:	or     eax,0x596bbac5
  40d3ee:	sub    esi,ebx
  40d3f0:	bndstx [ebx+0x8a260bb],bnd0
  40d3f7:	lods   al,BYTE PTR ds:[esi]
  40d3f8:	pop    ebx
  40d3f9:	mov    bl,0x13
  40d3fb:	cmp    bh,BYTE PTR ds:0x816ac07d
  40d401:	xchg   BYTE PTR [ecx-0x50],bl
  40d404:	and    dh,BYTE PTR ds:0xc22acc20
  40d40a:	or     al,0x5d
  40d40c:	fild   DWORD PTR ds:[edi+0x59150e2e]
  40d413:	and    al,0xfe
  40d415:	inc    esi
  40d416:	(bad)  
  40d417:	stos   DWORD PTR es:[edi],eax
  40d418:	nop
  40d419:	add    BYTE PTR [ecx-0x1c56c868],ah
  40d41f:	(bad)  
  40d421:	xchg   DWORD PTR [edx+edi*8-0x735f4d23],ebx
  40d428:	mov    al,0x62
  40d42a:	xchg   esp,eax
  40d42b:	ins    DWORD PTR es:[edi],dx
  40d42c:	sbb    edx,DWORD PTR [ebx+0x38ca520f]
  40d432:	cs stc 
  40d434:	mov    ch,0x9b
  40d436:	mov    ebx,0x1900098e
  40d43b:	inc    ecx
  40d43c:	dec    esi
  40d43d:	push   edx
  40d43e:	ja     0x40d45e
  40d440:	fnstcw WORD PTR [ebx-0x53]
  40d443:	fimul  WORD PTR [ecx]
  40d445:	addr16 sub al,0xcb
  40d448:	jne    0x40d475
  40d44a:	loope  0x40d435
  40d44c:	cmp    eax,0x5df8ee6
  40d451:	test   DWORD PTR [edx+ebp*2],ecx
  40d454:	mov    cl,dl
  40d456:	and    DWORD PTR gs:[ebx+0x5a86de96],ecx
  40d45d:	jecxz  0x40d4c6
  40d45f:	jg     0x40d469
  40d461:	jg     0x40d43b
  40d463:	(bad)  
  40d464:	xlat   BYTE PTR ds:[ebx]
  40d465:	outs   dx,DWORD PTR ds:[esi]
  40d466:	lock test eax,0x35fd2042
  40d46c:	jecxz  0x40d40a
  40d46e:	sub    al,0x57
  40d470:	mov    ebp,0xf3d4b2da
  40d475:	xchg   esp,eax
  40d476:	mov    ah,0x4d
  40d478:	imul   ebp,DWORD PTR [edx-0x63],0xffffffa7
  40d47c:	call   0x82bddab9
  40d481:	sbb    BYTE PTR [edx+0x6684d22a],al
  40d487:	(bad)  
  40d488:	loop   0x40d459
  40d48a:	(bad)  
  40d48b:	jno    0x40d492
  40d48d:	jno    0x40d47c
  40d48f:	loopne 0x40d42c
  40d491:	and    esi,DWORD PTR [esi]
  40d493:	int    0xcb
  40d495:	xlat   BYTE PTR ds:[ebx]
  40d496:	in     eax,0x8f
  40d498:	(bad)  
  40d499:	jmp    0x2636f81c
  40d49e:	push   esi
  40d49f:	std    
  40d4a0:	xor    edx,DWORD PTR [edx+0x7df550a1]
  40d4a6:	adc    eax,0x7697a992
  40d4ab:	mov    BYTE PTR [ecx+edi*1-0x327b0e06],al
  40d4b2:	das    
  40d4b3:	shl    DWORD PTR ds:0x102b6153,cl
  40d4b9:	ror    BYTE PTR [ecx-0x6c],1
  40d4bc:	retf   
  40d4bd:	div    BYTE PTR [ebx+0x2a]
  40d4c0:	(bad)  
  40d4c1:	jp     0x40d4df
  40d4c3:	es inc edi
  40d4c5:	xor    eax,0x9946b8b9
  40d4ca:	push   esi
  40d4cb:	loope  0x40d488
  40d4cd:	stc    
  40d4ce:	xor    DWORD PTR [ebp-0x40abc4dd],edi
  40d4d4:	xor    ebx,DWORD PTR [edx+0x7e]
  40d4d7:	fwait
  40d4d8:	into   
  40d4d9:	mov    eax,0xd8bf8b25
  40d4de:	xchg   edx,eax
  40d4df:	pop    ss
  40d4e0:	xchg   BYTE PTR [ebx-0x3d62b1de],dh
  40d4e6:	in     eax,dx
  40d4e7:	or     eax,0xbd19b775
  40d4ec:	sub    DWORD PTR [ebx],ecx
  40d4ee:	pop    ecx
  40d4ef:	xlat   BYTE PTR ds:[ebx]
  40d4f0:	icebp  
  40d4f1:	aad    0x3b
  40d4f3:	mov    bl,0xae
  40d4f5:	cwde   
  40d4f6:	leave  
  40d4f7:	cmp    esp,esi
  40d4f9:	loop   0x40d54c
  40d4fb:	xchg   esi,eax
  40d4fc:	and    al,0x9e
  40d4fe:	push   ebx
  40d4ff:	sahf   
  40d500:	or     esi,eax
  40d502:	fcmovnu st,st(4)
  40d504:	(bad)  
  40d505:	sub    al,0x5c
  40d507:	xchg   esp,eax
  40d508:	loope  0x40d54c
  40d50a:	(bad)  
  40d50b:	out    0xe1,eax
  40d50d:	adc    BYTE PTR [esi],0xa3
  40d510:	cmc    
  40d511:	cmp    BYTE PTR [edx],al
  40d513:	dec    edx
  40d514:	mov    edx,0x1c688a8c
  40d519:	adc    DWORD PTR [ebp-0x43],0x79354ddc
  40d520:	mov    dl,0x8d
  40d522:	adc    eax,0x47691348
  40d527:	pop    ebx
  40d528:	outs   dx,DWORD PTR ds:[esi]
  40d529:	fidiv  DWORD PTR [esi]
  40d52b:	sub    BYTE PTR ds:0x3fa08038,al
  40d531:	neg    DWORD PTR [ebp-0x6d]
  40d534:	sti    
  40d535:	add    dh,BYTE PTR [edi+0x72]
  40d538:	mov    al,ds:0x2dc4f4c3
  40d53d:	js     0x40d5a5
  40d53f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d540:	inc    ebp
  40d541:	xor    al,0x78
  40d543:	imul   esi,DWORD PTR [edx-0x19],0xffffffa8
  40d547:	fstp   QWORD PTR [edx-0x161b47d3]
  40d54d:	fwait
  40d54e:	ss gs repz repz pop ecx
  40d553:	push   ecx
  40d554:	xchg   esp,eax
  40d555:	(bad)  
  40d556:	dec    esi
  40d557:	(bad)  
  40d558:	and    edx,ecx
  40d55a:	push   ebp
  40d55b:	pop    eax
  40d55c:	xor    DWORD PTR [eax-0x53],0x20a296c0
  40d563:	dec    ebx
  40d564:	mov    ah,0xd3
  40d566:	sbb    al,0xa3
  40d568:	cmp    BYTE PTR [eax],cl
  40d56a:	push   edi
  40d56b:	pop    esp
  40d56c:	sbb    al,0x32
  40d56e:	into   
  40d56f:	out    dx,al
  40d570:	enter  0x824a,0x75
  40d574:	in     eax,0xa6
  40d576:	ror    bh,cl
  40d578:	fimul  WORD PTR [edx]
  40d57a:	sbb    BYTE PTR [eax+esi*4+0x33],bl
  40d57e:	push   esp
  40d57f:	xor    eax,0x5ffba25e
  40d585:	iret   
  40d586:	add    dh,BYTE PTR [edi+0x13]
  40d589:	les    ecx,FWORD PTR [edx-0x14395217]
  40d58f:	pusha  
  40d590:	fsubr  DWORD PTR [eax+eax*4]
  40d593:	popf   
  40d594:	ins    BYTE PTR es:[edi],dx
  40d595:	adc    cl,BYTE PTR [ebx-0x33]
  40d598:	adc    bh,dh
  40d59a:	dec    esp
  40d59b:	pusha  
  40d59c:	mov    esi,0x80cd2653
  40d5a1:	cmp    edi,ebp
  40d5a3:	dec    esi
  40d5a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5a5:	cld    
  40d5a6:	cdq    
  40d5a7:	mov    ebp,0x87dd382c
  40d5ac:	sar    DWORD PTR [esi*8-0x4eceb030],0xb9
  40d5b4:	pop    ds
  40d5b5:	mov    ecx,DWORD PTR ds:0xf534d614
  40d5bb:	xor    eax,0x5e877e4d
  40d5c0:	arpl   sp,di
  40d5c2:	mov    DWORD PTR [ebx+0x7c],ecx
  40d5c5:	test   BYTE PTR [ecx],0x34
  40d5c8:	stc    
  40d5c9:	mov    al,0xe6
  40d5cb:	mov    esp,DWORD PTR [esi-0x77436bc1]
  40d5d1:	dec    ecx
  40d5d2:	mov    edi,0x8b90e43
  40d5d7:	std    
  40d5d8:	jle    0x40d64a
  40d5da:	xchg   edi,eax
  40d5db:	xlat   BYTE PTR ds:[ebx]
  40d5dc:	bound  edx,QWORD PTR [ecx-0x28d7bbc4]
  40d5e2:	cs enter 0xcf26,0x9
  40d5e7:	adc    DWORD PTR [eax-0x5aaea2ab],ebx
  40d5ed:	sbb    BYTE PTR [ebx-0x7dfb2280],cl
  40d5f3:	inc    cx
  40d5f5:	shl    BYTE PTR [edi-0x1354f13b],cl
  40d5fb:	adc    al,0x32
  40d5fd:	shr    edx,0x7
  40d600:	pop    edi
  40d601:	aas    
  40d602:	xor    DWORD PTR [edx+0x3bbc427],0xffffffb4
  40d609:	ror    BYTE PTR [edx+0x77],0xfd
  40d60d:	ins    BYTE PTR es:[edi],dx
  40d60e:	mov    ah,BYTE PTR [edi+0x380f073]
  40d614:	(bad)  
  40d615:	cmp    BYTE PTR [ebx+0x47],al
  40d618:	outs   dx,DWORD PTR ds:[esi]
  40d619:	mov    dl,0x91
  40d61b:	rcr    dh,1
  40d61d:	cli    
  40d61e:	cmc    
  40d61f:	pop    ds
  40d620:	leave  
  40d621:	mov    dl,0x3b
  40d623:	imul   edx,DWORD PTR [ebp-0x1b],0x89972f7a
  40d62a:	cmp    DWORD PTR [edi-0xa97adc9],eax
  40d630:	ror    BYTE PTR [eax],0xea
  40d633:	out    0xde,al
  40d635:	push   DWORD PTR [esi]
  40d637:	call   0x592d:0x2978f246
  40d63e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d63f:	pop    ss
  40d640:	mov    al,ds:0x5cc99b81
  40d645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d646:	xchg   BYTE PTR [esi+0x5e],cl
  40d649:	and    ecx,DWORD PTR [eax+0x5e]
  40d64c:	pop    ebx
  40d64d:	sub    esp,ecx
  40d64f:	mov    eax,es
  40d651:	out    0x56,eax
  40d653:	popf   
  40d654:	dec    edx
  40d655:	jecxz  0x40d606
  40d657:	sbb    ebx,edi
  40d659:	lock sbb BYTE PTR [esi+0x19],bh
  40d65d:	outs   dx,BYTE PTR ds:[esi]
  40d65e:	xor    al,BYTE PTR [esi-0x66]
  40d661:	aad    0x78
  40d663:	pop    eax
  40d664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d665:	mov    al,0x60
  40d667:	(bad)  
  40d668:	sti    
  40d669:	and    dh,al
  40d66b:	mov    al,0xf
  40d66d:	jno    0x40d690
  40d66f:	mov    esp,0xc59c7dc0
  40d674:	mov    ch,0xa0
  40d676:	or     edx,DWORD PTR [eax]
  40d678:	pop    edx
  40d679:	xchg   edi,eax
  40d67a:	lods   eax,DWORD PTR ds:[esi]
  40d67b:	ret    
  40d67c:	push   ss
  40d67d:	lods   al,BYTE PTR ds:[esi]
  40d67e:	xchg   ebp,eax
  40d67f:	lds    ebp,FWORD PTR [ebp+0x718ebe54]
  40d685:	shl    DWORD PTR [ebp-0x5264dee],1
  40d68b:	retf   
  40d68c:	adc    eax,0xe6b1c6cf
  40d691:	(bad)  
  40d692:	aaa    
  40d693:	dec    eax
  40d694:	mov    dl,0x2b
  40d696:	push   ds
  40d697:	(bad)  
  40d698:	adc    cl,BYTE PTR [edi+edx*8]
  40d69b:	and    eax,0xb6e1b743
  40d6a0:	jge    0x40d70b
  40d6a2:	or     ebp,0xffffffe8
  40d6a5:	xor    cl,BYTE PTR [edi+0x456a6849]
  40d6ab:	imul   ebp,DWORD PTR [ebx-0x2a56b70e],0xffffff96
  40d6b2:	jecxz  0x40d6a0
  40d6b4:	call   edi
  40d6b6:	or     al,0xfd
  40d6b8:	mov    al,ds:0x9cf9f1a2
  40d6bd:	mov    eax,ds:0xf7a81a5b
  40d6c2:	inc    edx
  40d6c3:	mov    edi,0x4bb7850f
  40d6c8:	pop    edi
  40d6c9:	loop   0x40d655
  40d6cb:	inc    eax
  40d6cc:	data16 add al,0x52
  40d6cf:	pop    edi
  40d6d0:	pop    eax
  40d6d1:	jb     0x40d74d
  40d6d3:	jns    0x40d73a
  40d6d5:	(bad)  
  40d6d6:	fiadd  WORD PTR [ebx+0x76]
  40d6d9:	or     al,0x54
  40d6db:	dec    esi
  40d6dc:	sti    
  40d6dd:	aam    0xec
  40d6df:	xor    ch,BYTE PTR [eax+0x2d]
  40d6e2:	mov    bl,0xe7
  40d6e4:	loope  0x40d749
  40d6e6:	call   0xab942e16
  40d6eb:	add    DWORD PTR [edx+0x2c3dcbc2],ebp
  40d6f1:	cmc    
  40d6f2:	mov    ebx,0x4d17349a
  40d6f7:	sbb    DWORD PTR [esi+0x6cf46606],ebp
  40d6fd:	shl    DWORD PTR [edx+ecx*2],0xa9
  40d701:	xor    dh,bh
  40d703:	sbb    esi,ebp
  40d705:	int    0xa7
  40d707:	daa    
  40d708:	or     DWORD PTR [esi+edi*2],ecx
  40d70b:	jbe    0x40d6f9
  40d70d:	jl     0x40d74d
  40d70f:	mov    al,ds:0x7257c1cf
  40d714:	jmp    0x2812:0x35391a7b
  40d71b:	xchg   esi,eax
  40d71c:	out    dx,eax
  40d71d:	jns    0x40d6e9
  40d71f:	xor    BYTE PTR [ebp+0x39],al
  40d722:	jle    0x40d6b2
  40d724:	sahf   
  40d725:	(bad)  
  40d726:	out    0x8d,eax
  40d728:	adc    eax,0x26a88164
  40d72d:	lahf   
  40d72e:	jns    0x40d75b
  40d730:	sub    eax,DWORD PTR [eax+0x4e]
  40d733:	sbb    eax,DWORD PTR [edi+edi*8+0xecc941]
  40d73a:	mov    ecx,0x94f79a69
  40d73f:	xor    BYTE PTR [edx],0xff
  40d742:	sahf   
  40d743:	fcomp  st(6)
  40d745:	cmp    ecx,DWORD PTR [ebx-0x42]
  40d748:	sar    BYTE PTR [eax+0x1639b3b1],1
  40d74e:	pop    esi
  40d750:	aam    0xe6
  40d752:	in     eax,dx
  40d753:	repz mov ds:0xc1606f07,al
  40d759:	test   al,0x4b
  40d75b:	je     0x40d77b
  40d75d:	sbb    eax,0xf169fa74
  40d762:	lods   al,BYTE PTR ds:[esi]
  40d763:	mov    DWORD PTR [esi+0x4716b586],eax
  40d769:	sub    eax,0x413cd44
  40d76e:	mov    dh,0x93
  40d770:	mov    edx,0xe750aba7
  40d775:	ja     0x40d783
  40d777:	rcr    ebp,cl
  40d779:	add    ebp,DWORD PTR [edx-0x1d]
  40d77c:	jmp    0x7bc451fb
  40d781:	xor    bh,BYTE PTR [esi+0x495dc6da]
  40d787:	inc    ebp
  40d788:	call   0x83b0:0x8454739c
  40d78f:	mov    al,ds:0x9679c3d0
  40d794:	scas   al,BYTE PTR es:[edi]
  40d795:	es pop es
  40d797:	or     BYTE PTR [edx+0x20],0xc7
  40d79b:	jns    0x40d732
  40d79d:	cld    
  40d79e:	mov    bl,0xf0
  40d7a0:	xlat   BYTE PTR ds:[ebx]
  40d7a1:	gs jne 0x40d72f
  40d7a4:	cli    
  40d7a5:	mov    BYTE PTR [esi-0x5a],al
  40d7a8:	and    bh,BYTE PTR [edi+0x59431f0c]
  40d7ae:	retf   0xcaea
  40d7b1:	or     BYTE PTR es:[ecx],cl
  40d7b4:	xchg   esp,eax
  40d7b5:	retf   
  40d7b6:	mov    dh,0xea
  40d7b8:	aam    0x64
  40d7ba:	lds    edx,FWORD PTR [esi-0x509f3c6c]
  40d7c0:	xchg   ebp,eax
  40d7c1:	or     esi,DWORD PTR [esi-0x6a]
  40d7c4:	xor    BYTE PTR [edx-0x31bce83],cl
  40d7ca:	push   eax
  40d7cb:	les    ebp,FWORD PTR [eax-0x674daa41]
  40d7d1:	test   al,0xfc
  40d7d3:	jl     0x40d84b
  40d7d5:	jbe    0x40d79a
  40d7d7:	retf   0xc454
  40d7da:	push   esi
  40d7db:	jb     0x40d83f
  40d7dd:	fwait
  40d7de:	add    DWORD PTR [edx-0x14],ebx
  40d7e1:	mov    al,ds:0xc4e14495
  40d7e6:	rcl    BYTE PTR [edi+0x60],1
  40d7e9:	dec    edx
  40d7ea:	inc    edx
  40d7eb:	or     eax,0xc99da631
  40d7f0:	cwde   
  40d7f1:	aam    0x83
  40d7f3:	in     eax,dx
  40d7f4:	sbb    edx,DWORD PTR [edi+ecx*1]
  40d7f7:	les    edi,FWORD PTR [esi+0x5ccd0e88]
  40d7fd:	dec    ecx
  40d7fe:	repnz das 
  40d800:	add    DWORD PTR cs:[edx-0x6edd53fd],edi
  40d807:	mov    bh,0x62
  40d809:	dec    esp
  40d80a:	or     al,0x18
  40d80c:	add    al,0x51
  40d80e:	ins    DWORD PTR es:[edi],dx
  40d80f:	(bad)
  40d812:	xor    ebp,edi
  40d814:	mov    BYTE PTR ds:0xcbc3f858,al
  40d81a:	cmp    cl,BYTE PTR [eax-0x3e531f7b]
  40d820:	jmp    0x6bf1:0xe618
  40d826:	sub    cl,BYTE PTR [eax+ebp*2-0x76]
  40d82a:	lahf   
  40d82b:	or     al,BYTE PTR [ebx-0x56]
  40d82e:	int3   
  40d82f:	bnd jns 0x40d86a
  40d832:	push   eax
  40d833:	add    eax,0xf54a0d79
  40d838:	sub    cl,dl
  40d83a:	or     DWORD PTR [edi],esp
  40d83c:	sbb    eax,0x7a561049
  40d841:	ds dec ecx
  40d843:	lock shl BYTE PTR [edi+eax*8+0x7b],cl
  40d848:	add    DWORD PTR [ecx],esp
  40d84a:	ret    0x8b41
  40d84d:	repz std 
  40d84f:	loopne 0x40d7ec
  40d851:	loopne 0x40d80b
  40d853:	out    dx,eax
  40d854:	std    
  40d855:	xchg   ecx,eax
  40d856:	das    
  40d857:	inc    eax
  40d858:	push   edi
  40d859:	sti    
  40d85a:	mov    BYTE PTR [esi-0x10],al
  40d85d:	retf   0xed8f
  40d860:	push   edi
  40d861:	xlat   BYTE PTR ds:[ebx]
  40d862:	daa    
  40d863:	or     eax,DWORD PTR [edi+eax*4+0x4e]
  40d867:	mov    dl,cl
  40d869:	lods   eax,DWORD PTR ds:[esi]
  40d86a:	mov    cl,0xb1
  40d86c:	lods   eax,DWORD PTR ds:[esi]
  40d86d:	ins    BYTE PTR es:[edi],dx
  40d86e:	test   DWORD PTR [edx+edi*4],edx
  40d871:	hlt    
  40d872:	pop    ebp
  40d873:	pop    ds
  40d874:	sub    DWORD PTR [edx-0x64],ebp
  40d877:	repnz cmp BYTE PTR [eax+0x22],dh
  40d87b:	mov    WORD PTR [ecx+ebp*1+0x1f],cs
  40d87f:	push   esp
  40d880:	adc    cl,BYTE PTR [eax-0x5f799d67]
  40d886:	push   edx
  40d887:	add    DWORD PTR [eax+ebx*4+0x7f],0x85f11029
  40d88f:	dec    edi
  40d890:	mov    dl,0xaa
  40d892:	fdivrp st(2),st
  40d894:	push   eax
  40d895:	mov    es,WORD PTR [esi+esi*4-0x64c5e581]
  40d89c:	bound  ecx,QWORD PTR [ebx]
  40d89e:	push   DWORD PTR [eax]
  40d8a0:	test   ch,ah
  40d8a2:	mov    bl,0xe8
  40d8a4:	call   0x32db:0xf37ff9fc
  40d8ab:	and    al,0xf7
  40d8ad:	call   0x22e0:0x2059d85f
  40d8b4:	xchg   edi,eax
  40d8b5:	mov    ebp,0x769290c9
  40d8ba:	push   ebp
  40d8bb:	test   BYTE PTR [eax],dh
  40d8bd:	xlat   BYTE PTR ds:[ebx]
  40d8be:	das    
  40d8bf:	fsubr  DWORD PTR ds:0x982c3697
  40d8c5:	xchg   esp,eax
  40d8c6:	pusha  
  40d8c7:	enter  0xfc05,0xef
  40d8cb:	xor    al,cl
  40d8cd:	fbstp  TBYTE PTR [edi-0x59834dcf]
  40d8d3:	adc    cl,BYTE PTR [ebx]
  40d8d5:	icebp  
  40d8d6:	pushf  
  40d8d7:	xor    DWORD PTR [ecx+0x35],0xe234fa0
  40d8de:	jb     0x40d944
  40d8e0:	cbw    
  40d8e2:	fnstcw WORD PTR [ebx-0x1d]
  40d8e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8e6:	sub    eax,0xbe58b0e8
  40d8eb:	jae    0x40d8cc
  40d8ed:	push   edx
  40d8ee:	test   DWORD PTR [esi+0x2d],ebp
  40d8f1:	add    al,0x29
  40d8f3:	or     esi,ebx
  40d8f5:	mov    bh,0x49
  40d8f7:	adc    eax,0x8e33bd39
  40d8fc:	jne    0x40d8db
  40d8fe:	or     al,0xef
  40d900:	mov    ds:0x4ee2a574,al
  40d905:	adc    BYTE PTR [edx-0x27],al
  40d908:	inc    eax
  40d909:	sbb    BYTE PTR [ecx+ebx*4+0x35de554],bh
  40d910:	data16 mov bl,0x9
  40d913:	out    0xd2,al
  40d915:	dec    ecx
  40d916:	mov    cl,0x5f
  40d918:	pushf  
  40d919:	ret    0x5a88
  40d91c:	inc    edx
  40d91d:	loop   0x40d959
  40d91f:	mov    cl,0x4a
  40d921:	mov    ebx,0xed4143ae
  40d926:	retf   0xeb6e
  40d929:	je     0x40d98e
  40d92b:	and    ecx,DWORD PTR [esi-0x1d]
  40d92e:	dec    esi
  40d92f:	push   ecx
  40d930:	sbb    eax,0x9ba85f2c
  40d935:	push   0xa828f216
  40d93a:	(bad)  
  40d93b:	fnsave [edx-0xf2d4a62]
  40d941:	jecxz  0x40d90d
  40d943:	and    BYTE PTR [eax+0x48],al
  40d946:	ja     0x40d904
  40d948:	(bad)  
  40d949:	ins    DWORD PTR es:[edi],dx
  40d94a:	pusha  
  40d94b:	pusha  
  40d94c:	push   es
  40d94d:	outs   dx,DWORD PTR ds:[esi]
  40d94e:	cli    
  40d94f:	add    cl,BYTE PTR [ecx+0x4f8cd6e1]
  40d955:	push   es
  40d956:	mov    dh,0x21
  40d958:	and    eax,0xe7c49260
  40d95d:	xchg   edx,eax
  40d95e:	mov    eax,0x3c2a84af
  40d963:	push   es
  40d964:	inc    edx
  40d965:	adc    eax,0x8d651d7b
  40d96a:	mov    WORD PTR [ebp+edi*8+0x10037669],cs
  40d971:	iret   
  40d972:	icebp  
  40d973:	mov    ebp,0x2019d60b
  40d978:	ins    BYTE PTR es:[edi],dx
  40d979:	ds pop ebx
  40d97b:	xor    ecx,DWORD PTR [eax-0x2f3c52a7]
  40d981:	inc    DWORD PTR [edx+0x6b6f253f]
  40d987:	xor    esi,DWORD PTR [edi-0x1a979aa7]
  40d98d:	push   es
  40d98e:	xor    BYTE PTR [ecx],ah
  40d990:	sbb    ebp,DWORD PTR [ebp+eax*8-0x6a]
  40d994:	xor    al,0xb
  40d996:	shr    bl,1
  40d998:	cmp    eax,0xa70d184f
  40d99d:	std    
  40d99e:	mov    ch,0x41
  40d9a0:	out    0x6a,al
  40d9a2:	mov    edx,0x62d79197
  40d9a7:	inc    edi
  40d9a8:	(bad)  
  40d9a9:	lods   al,BYTE PTR ds:[esi]
  40d9aa:	call   0xbb63:0x7df1220f
  40d9b1:	push   ebp
  40d9b2:	ficom  WORD PTR es:[ebx]
  40d9b5:	pop    es
  40d9b6:	or     BYTE PTR [edi-0x55],bl
  40d9b9:	aas    
  40d9ba:	scas   eax,DWORD PTR es:[edi]
  40d9bb:	aaa    
  40d9bc:	sub    eax,0x28ff9aae
  40d9c1:	or     BYTE PTR [ebx+edi*1],al
  40d9c4:	xchg   esp,eax
  40d9c5:	push   0x8f51f166
  40d9ca:	test   DWORD PTR [edi+0x5f],0x310bedbb
  40d9d1:	mov    ecx,ecx
  40d9d3:	repz clc 
  40d9d5:	xor    al,0x58
  40d9d7:	lock imul ecx,DWORD PTR [edi],0xffffffc8
  40d9db:	test   DWORD PTR [edi-0x38],esi
  40d9de:	adc    DWORD PTR [edx+0x6b],edi
  40d9e1:	dec    ebx
  40d9e2:	js     0x40d986
  40d9e4:	ja     0x40d9e9
  40d9e6:	or     eax,0x8f454519
  40d9eb:	inc    ecx
  40d9ec:	xchg   DWORD PTR [eax+0x3e],esi
  40d9ef:	and    DWORD PTR [esi+0x38],0x12
  40d9f3:	loopne 0x40da6f
  40d9f5:	pop    esi
  40d9f6:	mov    bl,0xb7
  40d9f8:	icebp  
  40d9f9:	pop    ebx
  40d9fa:	dec    ebp
  40d9fb:	cmp    DWORD PTR [esi],ebp
  40d9fd:	pop    esi
  40d9fe:	scas   eax,DWORD PTR es:[edi]
  40d9ff:	lahf   
  40da00:	cmp    DWORD PTR ds:0xb62e5110,ecx
  40da06:	ins    DWORD PTR es:[edi],dx
  40da07:	mov    eax,ds:0x860f5a27
  40da0c:	xlat   BYTE PTR ds:[ebx]
  40da0d:	enter  0x6a0,0x39
  40da11:	xor    ebx,eax
  40da13:	push   cs
  40da14:	xlat   BYTE PTR ds:[ebx]
  40da15:	fninit 
  40da17:	rcl    edi,0xad
  40da1a:	mov    dh,0xe9
  40da1c:	xlat   BYTE PTR ds:[ebx]
  40da1d:	mov    BYTE PTR [ebp+ecx*8+0x1519ad41],0x84
  40da25:	pop    ss
  40da26:	fwait
  40da27:	ins    BYTE PTR es:[edi],dx
  40da28:	je     0x40d9f3
  40da2a:	mov    DWORD PTR ds:0x438d12d9,edx
  40da30:	jns    0x40da0f
  40da32:	sbb    edi,DWORD PTR [edx-0x586c34a1]
  40da38:	inc    ebx
  40da39:	xor    DWORD PTR [ecx-0x25ca4f8e],ebp
  40da3f:	imul   ebx,esi,0x9c6d7053
  40da45:	or     esp,ebx
  40da47:	jle    0x40da55
  40da49:	dec    ebx
  40da4a:	dec    bl
  40da4c:	stos   BYTE PTR es:[edi],al
  40da4d:	push   es
  40da4e:	add    DWORD PTR [ecx],edi
  40da50:	or     ebp,DWORD PTR [ebx]
  40da52:	fnstsw WORD PTR [ebx+0x652228fd]
  40da58:	inc    ecx
  40da59:	jmp    0xdd3bfea
  40da5e:	fwait
  40da5f:	xchg   esp,eax
  40da60:	out    dx,eax
  40da61:	pop    ebx
  40da62:	mov    dl,0x5e
  40da64:	rol    edx,0x7f
  40da67:	test   BYTE PTR [edx+0x3c],bl
  40da6a:	fcomp  DWORD PTR [esi]
  40da6c:	cmp    eax,ebp
  40da6e:	pop    esp
  40da6f:	cmp    ecx,DWORD PTR [eax-0x3f]
  40da72:	xchg   ebp,eax
  40da73:	pop    esi
  40da74:	cmp    edx,eax
  40da76:	pushf  
  40da77:	pop    ds
  40da78:	call   0x3bd1eab9
  40da7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da7e:	push   ecx
  40da7f:	std    
  40da80:	mov    DWORD PTR ss:[ebp+esi*2+0x5ecee49],ebx
  40da88:	fs hlt 
  40da8a:	pop    esp
  40da8b:	lods   al,BYTE PTR ds:[esi]
  40da8c:	pop    ecx
  40da8d:	cli    
  40da8e:	jg     0x40dad4
  40da90:	outs   dx,DWORD PTR ds:[esi]
  40da91:	sar    DWORD PTR [esi+0x31],1
  40da94:	test   eax,0xf5caf5ce
  40da99:	xchg   DWORD PTR [ebx-0x590b3b9c],ebp
  40da9f:	nop
  40daa0:	dec    ecx
  40daa1:	lods   al,BYTE PTR ds:[esi]
  40daa2:	jno    0x40daf0
  40daa4:	and    ebx,DWORD PTR [eax]
  40daa6:	ror    BYTE PTR [ebp-0x2dba1ac0],cl
  40daac:	jno    0x40dabb
  40daae:	out    0x2f,al
  40dab0:	cmp    ecx,DWORD PTR ds:0xe4dac66f
  40dab6:	sbb    al,0x57
  40dab8:	pop    esi
  40dab9:	nop
  40daba:	mov    DWORD PTR [ecx-0x33d3cf95],ebx
  40dac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dac1:	popf   
  40dac2:	in     eax,0xea
  40dac4:	(bad)  
  40dac5:	mov    es,WORD PTR [edi+0x4ea39a3c]
  40dacb:	mov    ebx,0xc4676235
  40dad0:	inc    ebp
  40dad1:	sub    al,BYTE PTR [edi-0x494d2f7d]
  40dad7:	or     al,BYTE PTR [ebx]
  40dad9:	(bad)  
  40dada:	xlat   BYTE PTR ds:[ebx]
  40dadb:	push   edx
  40dadc:	ret    0x72d3
  40dadf:	cmp    DWORD PTR [ebx],0x7bd29747
  40dae5:	bound  edx,QWORD PTR [ecx-0x5f]
  40dae8:	xchg   edi,eax
  40dae9:	push   ebx
  40daea:	pop    esi
  40daeb:	shl    ecx,cl
  40daed:	pop    esi
  40daee:	(bad)  
  40daf0:	scas   eax,DWORD PTR es:[edi]
  40daf1:	pop    edi
  40daf2:	pop    eax
  40daf3:	xchg   ebp,esi
  40daf5:	ficom  WORD PTR [edx]
  40daf7:	xchg   edx,eax
  40daf8:	sbb    edi,DWORD PTR [eax-0x5f]
  40dafb:	or     esp,DWORD PTR [ebp+edi*8-0x213de3cb]
  40db02:	cmp    edx,esi
  40db04:	lahf   
  40db05:	in     al,0xce
  40db07:	sti    
  40db08:	mov    ds:0x4d1083d6,eax
  40db0d:	loope  0x40db5c
  40db0f:	pusha  
  40db10:	mov    ebx,0xc0ca7b69
  40db15:	mov    edi,0x1da0ebe7
  40db1a:	mov    es,ebx
  40db1c:	xor    dh,BYTE PTR [bx+si-0x3]
  40db20:	pop    ss
  40db21:	pop    ss
  40db22:	js     0x40db5b
  40db24:	popa   
  40db25:	div    DWORD PTR [ebx]
  40db27:	retf   0x4e12
  40db2a:	mov    bl,BYTE PTR [ebp+0x273cecf9]
  40db30:	loopne 0x40db50
  40db32:	call   0xe41fbfc
  40db37:	or     ch,dh
  40db39:	mov    dh,0x7
  40db3b:	push   edi
  40db3c:	loopne 0x40db7a
  40db3e:	mov    edi,0x994e4ba2
  40db43:	in     eax,dx
  40db44:	aad    0x2a
  40db46:	in     al,0xea
  40db48:	scas   al,BYTE PTR es:[edi]
  40db49:	jmp    0x40dae7
  40db4b:	stc    
  40db4c:	js     0x40dbbd
  40db4e:	loope  0x40db4d
  40db50:	lea    ebx,[ebp+0x3dd471be]
  40db56:	pop    es
  40db57:	retf   0x1c6d
  40db5a:	mov    ch,0x9a
  40db5c:	scas   eax,DWORD PTR es:[edi]
  40db5d:	lods   eax,DWORD PTR ds:[esi]
  40db5e:	push   ecx
  40db5f:	dec    edx
  40db60:	dec    ebp
  40db61:	pop    ecx
  40db62:	(bad)  
  40db63:	pushf  
  40db64:	retf   
  40db65:	mov    ds:0x959765a8,al
  40db6a:	rcr    DWORD PTR [esi+0x4a97dd63],cl
  40db70:	in     al,dx
  40db71:	add    DWORD PTR [ebx],0x1ed762c1
  40db77:	cld    
  40db78:	outs   dx,DWORD PTR ds:[esi]
  40db79:	cmp    ecx,ebx
  40db7b:	das    
  40db7c:	(bad)
  40db80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db82:	cmp    BYTE PTR [edx-0x20],cl
  40db85:	mov    bl,0x8e
  40db87:	mov    ds:0x74051a18,eax
  40db8c:	sub    BYTE PTR [bx+si],bl
  40db8f:	or     eax,ebx
  40db91:	xchg   edi,eax
  40db92:	stc    
  40db93:	out    dx,al
  40db94:	mov    bh,0xb2
  40db96:	pushf  
  40db97:	ja     0x40dbc1
  40db99:	cwde   
  40db9a:	sbb    ah,dh
  40db9c:	scas   eax,DWORD PTR es:[edi]
  40db9d:	mov    bl,0xb8
  40db9f:	mov    es,WORD PTR [eax-0x34]
  40dba2:	imul   BYTE PTR [esi+0x2e]
  40dba5:	mov    eax,ds:0x9bc44b69
  40dbaa:	call   0xc918:0xeb6e82c3
  40dbb1:	loop   0x40db8a
  40dbb3:	repnz or ah,BYTE PTR [esi-0x29d5fe7e]
  40dbba:	pop    edx
  40dbbb:	call   0xf9a3ebd9
  40dbc0:	cmc    
  40dbc1:	into   
  40dbc2:	xchg   dh,ah
  40dbc4:	lods   al,BYTE PTR ds:[esi]
  40dbc5:	push   edi
  40dbc6:	xchg   ebp,eax
  40dbc7:	ja     0x40dbd7
  40dbc9:	test   BYTE PTR [ebx+0x5e],al
  40dbcc:	fs (bad) 
  40dbce:	aas    
  40dbcf:	mov    dh,0x49
  40dbd1:	jno    0x40db63
  40dbd3:	mov    ds:0x6072ed07,eax
  40dbd8:	xor    BYTE PTR [ebp-0x3385c8cd],0x3e
  40dbdf:	adc    BYTE PTR [esi],dh
  40dbe1:	retf   
  40dbe2:	inc    edi
  40dbe3:	adc    al,cl
  40dbe5:	daa    
  40dbe6:	test   eax,0x9b57849e
  40dbeb:	inc    ebp
  40dbec:	mov    ebx,DWORD PTR [edx-0xb]
  40dbef:	(bad)  
  40dbf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbf2:	pop    edi
  40dbf3:	and    DWORD PTR [esi+ebp*2-0x17],esi
  40dbf7:	pop    ecx
  40dbf8:	push   eax
  40dbf9:	pop    es
  40dbfa:	adc    al,0xc0
  40dbfc:	mov    esi,0xe47da56d
  40dc01:	adc    al,0xf7
  40dc03:	jp     0x40dc3e
  40dc05:	ins    BYTE PTR es:[edi],dx
  40dc06:	mov    edx,0x55900118
  40dc0b:	add    BYTE PTR [edi+0x28],cl
  40dc0e:	or     edx,esi
  40dc10:	into   
  40dc11:	adc    eax,0x7cc79e76
  40dc16:	mov    esp,0x3409f76e
  40dc1b:	mov    edi,esi
  40dc1d:	inc    esi
  40dc1e:	lea    ecx,[ebx]
  40dc20:	call   0x9c0448f3
  40dc25:	je     0x40dc1c
  40dc27:	outs   dx,BYTE PTR ds:[esi]
  40dc28:	fld    TBYTE PTR [eax+0x49]
  40dc2b:	ds ds das 
  40dc2e:	add    al,0xec
  40dc30:	js     0x40dc3f
  40dc32:	fwait
  40dc33:	cmp    DWORD PTR [ecx+eax*2-0x25],edx
  40dc37:	pusha  
  40dc38:	shl    BYTE PTR [edx-0x2eec2cc1],1
  40dc3e:	fwait
  40dc3f:	sar    DWORD PTR [ebx-0x2a],cl
  40dc42:	mov    ch,0xa6
  40dc44:	push   edx
  40dc45:	or     DWORD PTR [edi-0x7c],esp
  40dc48:	dec    edx
  40dc49:	(bad)  
  40dc4a:	jl     0x40dcc4
  40dc4c:	mov    esp,DWORD PTR [edx-0x2330e3df]
  40dc52:	pop    edx
  40dc53:	jb     0x40dc54
  40dc55:	test   eax,0x117f56b3
  40dc5a:	sub    al,0x52
  40dc5c:	sub    al,0xbf
  40dc5e:	dec    ebx
  40dc5f:	ror    BYTE PTR [ecx],1
  40dc61:	(bad)  
  40dc62:	test   al,0xc3
  40dc64:	cli    
  40dc65:	shl    BYTE PTR [edi],1
  40dc67:	sbb    DWORD PTR [edi-0x6287ff01],edx
  40dc6d:	jp     0x40dcb4
  40dc6f:	mov    esi,0x902fade5
  40dc74:	pop    es
  40dc75:	pop    ss
  40dc76:	push   edx
  40dc77:	mov    BYTE PTR [edx-0xb4bccf5],ch
  40dc7d:	mov    bh,0x97
  40dc7f:	int    0x47
  40dc81:	xor    al,0x3d
  40dc83:	js     0x40dc05
  40dc85:	sub    al,0xaf
  40dc87:	push   esi
  40dc88:	mov    eax,0xdd1a45aa
  40dc8d:	test   eax,0x2843deee
  40dc92:	xlat   BYTE PTR ds:[ebx]
  40dc93:	xchg   ebx,eax
  40dc94:	int3   
  40dc95:	add    dh,BYTE PTR [edi]
  40dc97:	sbb    eax,0xa7b11c08
  40dc9c:	or     DWORD PTR ds:0xac2e84bb,esi
  40dca2:	inc    ebx
  40dca3:	out    dx,al
  40dca4:	cmp    eax,0xfa8701b0
  40dca9:	xlat   BYTE PTR ds:[ebx]
  40dcaa:	fcom   QWORD PTR [ecx-0x5b]
  40dcad:	icebp  
  40dcae:	pusha  
  40dcaf:	aas    
  40dcb0:	add    BYTE PTR [ecx],ah
  40dcb2:	xchg   edx,ebx
  40dcb4:	lods   al,BYTE PTR ds:[esi]
  40dcb5:	cld    
  40dcb6:	pop    ebx
  40dcb7:	and    esp,DWORD PTR [eax+0x37]
  40dcba:	add    eax,edi
  40dcbc:	ins    DWORD PTR es:[edi],dx
  40dcbd:	cdq    
  40dcbe:	leave  
  40dcbf:	jecxz  0x40dce7
  40dcc1:	arpl   cx,si
  40dcc3:	(bad)  
  40dcc4:	mov    ecx,0xd29463b6
  40dcc9:	inc    eax
  40dcca:	jae    0x40dd3a
  40dccc:	or     al,0x70
  40dcce:	or     DWORD PTR [edx-0x1f],esp
  40dcd1:	les    esi,FWORD PTR [ecx+0x2f]
  40dcd4:	test   eax,0xd27bcb77
  40dcd9:	cwde   
  40dcda:	cdq    
  40dcdb:	sbb    al,0xcd
  40dcdd:	bnd jbe 0x40dc6f
  40dce0:	fcom   QWORD PTR [ecx+0x4c]
  40dce3:	mov    edx,0x4136c66b
  40dce8:	ins    BYTE PTR es:[edi],dx
  40dce9:	mov    al,ds:0xf5346d28
  40dcee:	xlat   BYTE PTR ds:[ebx]
  40dcef:	jmp    0xe303:0xba2bb1c0
  40dcf6:	mov    esp,0x7e3c421f
  40dcfb:	retf   
  40dcfc:	fcmovbe st,st(0)
  40dcfe:	popa   
  40dcff:	(bad)  
  40dd00:	inc    ecx
  40dd01:	xchg   ebx,eax
  40dd02:	adc    ecx,eax
  40dd04:	adc    eax,0xc81a06d2
  40dd09:	push   ebp
  40dd0a:	sbb    al,0x52
  40dd0c:	xchg   ebx,eax
  40dd0d:	mov    esi,DWORD PTR [edx]
  40dd0f:	cmp    edi,edi
  40dd11:	int3   
  40dd12:	call   0x3a09b7e7
  40dd17:	clc    
  40dd18:	xchg   edi,eax
  40dd19:	fmul   st(2),st
  40dd1b:	fwait
  40dd1c:	sbb    DWORD PTR [edi-0x71cda67f],edi
  40dd22:	xor    esp,DWORD PTR [ebx+ecx*1+0x50]
  40dd26:	push   esp
  40dd27:	sti    
  40dd28:	mov    BYTE PTR [ebp+0x4],al
  40dd2b:	or     BYTE PTR [ecx+0x4d4999c],0xe1
  40dd32:	fadd   QWORD PTR [ebx+0x7ddc9424]
  40dd38:	gs mov ecx,0x12f0171f
  40dd3e:	push   0xdf337a2
  40dd43:	xchg   BYTE PTR [eax+edx*8-0x1f],dh
  40dd47:	rol    DWORD PTR [esi+eax*4+0x27e570cd],1
  40dd4e:	(bad)  
  40dd4f:	add    al,0xfc
  40dd51:	mov    bh,0x84
  40dd53:	enter  0xc837,0x87
  40dd57:	and    ebp,DWORD PTR es:[edi]
  40dd5a:	sbb    edi,DWORD PTR [edx+eax*1-0xa]
  40dd5e:	pop    ecx
  40dd5f:	in     al,dx
  40dd60:	vsubpd ymm2,ymm2,ymm1
  40dd64:	xchg   esi,eax
  40dd65:	fmul   QWORD PTR [eax+0x59affae0]
  40dd6b:	fidiv  WORD PTR [edx]
  40dd6d:	xchg   edi,eax
  40dd6e:	mov    edi,0xc3143f97
  40dd73:	and    dh,BYTE PTR [edx+0x44]
  40dd76:	jbe    0x40dde7
  40dd78:	pop    ss
  40dd79:	(bad)  
  40dd7a:	in     eax,0xd4
  40dd7c:	inc    edx
  40dd7d:	leave  
  40dd7e:	ins    BYTE PTR es:[edi],dx
  40dd7f:	imul   edx,eax,0x55dd57d1
  40dd85:	mov    al,ds:0xfe72ec2b
  40dd8a:	push   ebp
  40dd8b:	pop    esi
  40dd8c:	repnz popf 
  40dd8e:	pop    ecx
  40dd8f:	add    eax,0x666ccf9
  40dd94:	test   BYTE PTR [esp+ebp*4+0x16cd014],bl
  40dd9b:	mov    DWORD PTR [ebx+0x5e],esi
  40dd9e:	mov    dh,0xea
  40dda0:	sub    ecx,esp
  40dda2:	pusha  
  40dda3:	out    dx,eax
  40dda4:	mov    bh,0xc
  40dda6:	xor    eax,0xd6dc89ff
  40ddab:	(bad)  [ebx+ebx*8]
  40ddae:	pop    ebx
  40ddaf:	into   
  40ddb0:	mov    ch,0x36
  40ddb2:	pop    es
  40ddb3:	jge    0x40ddbf
  40ddb5:	pop    ds
  40ddb6:	or     BYTE PTR [edx-0x5260ce31],0xbf
  40ddbd:	adc    eax,0x5c68c3b5
  40ddc2:	and    al,0x2
  40ddc4:	jmp    DWORD PTR [edi+0x1e]
  40ddc7:	xor    ch,BYTE PTR [ebx-0x62]
  40ddca:	aas    
  40ddcb:	pop    ebx
  40ddcc:	in     al,dx
  40ddcd:	je     0x40dd93
  40ddcf:	jae    0x40dda9
  40ddd1:	pop    ds
  40ddd2:	pop    es
  40ddd3:	mov    ebx,0xd48f770b
  40ddd8:	inc    esp
  40ddd9:	sub    dh,BYTE PTR [bx+0x2c]
  40dddd:	cmp    al,0x4b
  40dddf:	pop    esi
  40dde0:	fnstsw WORD PTR ds:0x70bf6fb1
  40dde6:	sub    ebx,DWORD PTR [ecx]
  40dde8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dde9:	outs   dx,DWORD PTR ds:[esi]
  40ddea:	ret    
  40ddeb:	and    al,dl
  40dded:	xchg   DWORD PTR [ebp+0x5f],edi
  40ddf0:	mov    ebx,0xdf9ba998
  40ddf5:	xchg   ecx,eax
  40ddf6:	std    
  40ddf7:	add    al,dl
  40ddf9:	mov    eax,ds:0xe47d536d
  40ddfe:	or     al,0xf4
  40de00:	mov    ds:0x8cbdd0e9,al
  40de05:	jl     0x40de14
  40de07:	loopne 0x40de4d
  40de09:	pop    esi
  40de0a:	add    al,0xdf
  40de0c:	loopne 0x40dde2
  40de0e:	jl     0x40de2d
  40de10:	call   0xb5e7d296
  40de15:	jmp    0x7842d300
  40de1a:	dec    edi
  40de1b:	nop
  40de1c:	dec    esi
  40de1d:	mov    eax,0x61bd6ffa
  40de22:	sbb    dh,BYTE PTR [ebp+0x14016b3f]
  40de28:	push   ebp
  40de29:	aas    
  40de2a:	pusha  
  40de2b:	mov    esp,0x736202ae
  40de30:	push   es
  40de31:	push   ss
  40de32:	fsubrp st(0),st
  40de34:	dec    esi
  40de35:	pop    eax
  40de36:	xchg   BYTE PTR [esi],bh
  40de38:	push   ss
  40de39:	fbld   TBYTE PTR [ecx-0x41bf5359]
  40de3f:	popf   
  40de40:	out    0x7b,eax
  40de42:	call   0xc6254de6
  40de47:	add    DWORD PTR [ecx],esp
  40de49:	add    al,0x63
  40de4b:	xor    DWORD PTR [eax+0x1d],ebp
  40de4e:	int    0x6d
  40de50:	mov    bh,0xd1
  40de52:	out    dx,al
  40de53:	in     al,dx
  40de54:	sbb    eax,0x808ab3aa
  40de59:	jl     0x40ddec
  40de5b:	out    dx,al
  40de5c:	sbb    ecx,esi
  40de5e:	push   es
  40de5f:	mov    ch,al
  40de61:	mov    ah,0x4b
  40de63:	or     DWORD PTR [ebx-0x5547e5cf],esi
  40de69:	mov    dl,0x22
  40de6b:	sub    ax,0xeb95
  40de6f:	inc    edx
  40de70:	jmp    0x7e43:0x2da052c8
  40de77:	dec    esi
  40de78:	call   0x402f:0x1a3dab9f
  40de7f:	outs   dx,DWORD PTR ds:[esi]
  40de80:	jp     0x40def1
  40de82:	ja     0x40dea1
  40de84:	das    
  40de85:	dec    eax
  40de86:	ret    
  40de87:	add    eax,0x568d1dd7
  40de8c:	inc    esi
  40de8d:	and    bl,BYTE PTR [ebx]
  40de8f:	shl    DWORD PTR [edx],0x8
  40de92:	(bad)  
  40de93:	sbb    DWORD PTR [ebx+0x112b5593],ecx
  40de99:	fs sub eax,0x917a327a
  40de9f:	out    0x8b,eax
  40dea1:	idiv   edx
  40dea3:	and    esp,esi
  40dea5:	add    edx,DWORD PTR [eax+ebp*1]
  40dea8:	mov    dl,0x4
  40deaa:	ret    0xf9b
  40dead:	xor    BYTE PTR [ebx+0x4d],dl
  40deb0:	inc    esi
  40deb1:	test   DWORD PTR [eax+0x76],eax
  40deb4:	ficom  WORD PTR [ebp+0x6c]
  40deb7:	aad    0x18
  40deb9:	xchg   esi,eax
  40deba:	aaa    
  40debb:	pop    eax
  40debc:	adc    al,0x0
  40debe:	sbb    al,0x4c
  40dec0:	inc    esp
  40dec1:	inc    ebp
  40dec2:	dec    esi
  40dec3:	xchg   edx,eax
  40dec4:	push   esp
  40dec5:	and    ch,BYTE PTR [esi]
  40dec7:	mov    al,ds:0x594c6c6f
  40decc:	test   edx,ecx
  40dece:	push   edi
  40decf:	jae    0x40debf
  40ded1:	iret   
  40ded2:	adc    DWORD PTR [ecx-0x75dc2354],edi
  40ded8:	mov    ebx,0x79bd4c32
  40dedd:	xlat   BYTE PTR ds:[ebx]
  40dede:	push   edx
  40dedf:	and    esi,edx
  40dee1:	fdivr  DWORD PTR [bx+di+0x6]
  40dee5:	pop    edi
  40dee6:	pop    ss
  40dee7:	sub    DWORD PTR [edi],edi
  40dee9:	cmc    
  40deea:	outs   dx,BYTE PTR ds:[esi]
  40deeb:	adc    BYTE PTR [eax+0x1f7a12bb],cl
  40def1:	lock lds eax,FWORD PTR [eax-0x3]
  40def5:	in     eax,0x66
  40def7:	stos   DWORD PTR es:[edi],eax
  40def8:	add    esi,DWORD PTR [edx]
  40defa:	stc    
  40defb:	xor    esp,DWORD PTR [ebp+0x35]
  40defe:	add    bl,BYTE PTR ds:0x856e3cbb
  40df04:	pop    esp
  40df05:	adc    edx,DWORD PTR [edi]
  40df07:	neg    BYTE PTR [eax]
  40df09:	pop    ebx
  40df0a:	adc    eax,0x7145be43
  40df0f:	adc    DWORD PTR [esi-0x4f],eax
  40df12:	ja     0x40decb
  40df14:	sub    dh,al
  40df16:	pop    es
  40df17:	stos   BYTE PTR es:[edi],al
  40df18:	pusha  
  40df19:	hlt    
  40df1a:	add    al,0x17
  40df1c:	pop    ebp
  40df1d:	jnp    0x40dead
  40df1f:	mov    eax,0x59fc8221
  40df24:	jmp    0x40df04
  40df26:	jmp    0x7dc50847
  40df2b:	adc    BYTE PTR [ecx-0x46],0x57
  40df2f:	out    dx,al
  40df30:	cs popa 
  40df32:	dec    edi
  40df33:	dec    ebx
  40df34:	xor    ebx,DWORD PTR [esi-0x71331a5]
  40df3a:	nop
  40df3b:	pop    eax
  40df3c:	mov    ebx,0x7079b265
  40df41:	outs   dx,BYTE PTR ds:[esi]
  40df42:	push   eax
  40df43:	mov    eax,0xed20c5bd
  40df48:	mov    edi,0xdb25b254
  40df4d:	nop
  40df4e:	pmaxsw mm6,QWORD PTR [esi+0x200a0fb4]
  40df55:	loopne 0x40df88
  40df57:	mov    esi,0xbcbe27fb
  40df5c:	mov    cl,0x24
  40df5e:	out    dx,al
  40df5f:	outs   dx,BYTE PTR fs:[esi]
  40df61:	pop    es
  40df62:	sbb    DWORD PTR [ebp-0x2fd6bf1e],edi
  40df68:	data16 ss aaa 
  40df6b:	out    0x1c,al
  40df6d:	inc    esi
  40df6e:	inc    esi
  40df6f:	ins    BYTE PTR es:[edi],dx
  40df70:	pop    esp
  40df71:	xchg   DWORD PTR [edx],esp
  40df73:	pop    ebp
  40df74:	rcr    BYTE PTR [ebp+0x8],1
  40df77:	fisttp DWORD PTR [esi+0x61]
  40df7a:	sbb    DWORD PTR [edi],0xffffffa7
  40df7d:	push   ss
  40df7e:	dec    esi
  40df7f:	test   DWORD PTR [edi-0x62],eax
  40df82:	js     0x40dfc0
  40df84:	fadd   QWORD PTR [ebp+0x238f36b9]
  40df8a:	xchg   BYTE PTR [ebx+0x30],al
  40df8d:	push   ds
  40df8e:	aaa    
  40df8f:	fld    TBYTE PTR [eax-0x6e54a15f]
  40df95:	add    ebp,DWORD PTR [ebp+0x4e]
  40df98:	add    eax,DWORD PTR [ecx-0x1d]
  40df9b:	mov    bh,dl
  40df9d:	clc    
  40df9e:	mov    ds:0x6b61d5dd,al
  40dfa3:	test   dl,0xb5
  40dfa6:	push   edx
  40dfa7:	and    al,0x50
  40dfa9:	sbb    DWORD PTR [edi],0xffffffff
  40dfac:	push   esp
  40dfad:	inc    esp
  40dfae:	jmp    0x4faf262f
  40dfb3:	ret    0xb705
  40dfb6:	mov    bl,0x1e
  40dfb8:	dec    ebx
  40dfb9:	mov    ebp,0x451ea81b
  40dfbe:	jge    0x40dfe2
  40dfc0:	aas    
  40dfc1:	push   cs
  40dfc2:	cmp    BYTE PTR [ebp-0x2dda81b9],dl
  40dfc8:	sbb    DWORD PTR [edi+0x697818dd],ebp
  40dfce:	scas   al,BYTE PTR es:[edi]
  40dfcf:	test   eax,0x8ba0c3a9
  40dfd4:	jle    0x40df86
  40dfd6:	mov    bl,0x1b
  40dfd8:	lods   al,BYTE PTR ds:[esi]
  40dfd9:	popf   
  40dfda:	jmp    0xd6d23a1e
  40dfdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfe0:	xchg   ebp,eax
  40dfe1:	inc    esi
  40dfe2:	cmp    BYTE PTR [ecx],al
  40dfe4:	and    edi,0x1dc574c4
  40dfea:	sbb    al,0xdf
  40dfec:	inc    ebx
  40dfed:	les    edi,FWORD PTR [ebp-0x4]
  40dff0:	add    al,bh
  40dff2:	repnz pusha 
  40dff4:	shl    BYTE PTR [esi+0x466cff69],0xd6
  40dffb:	cli    
  40dffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dffd:	mov    ah,0xc2
  40dfff:	mov    ds:0xd321ccf2,al
  40e004:	adc    DWORD PTR ds:0xebf51644,ecx
  40e00a:	pop    edx
  40e00b:	xor    ebp,DWORD PTR [eax]
  40e00d:	nop    DWORD PTR [ecx]
  40e010:	daa    
  40e011:	cmp    eax,0x72b5dbca
  40e016:	lock fmul QWORD PTR [ebp-0x156b26d]
  40e01d:	(bad)  
  40e01e:	xchg   ecx,eax
  40e01f:	dec    edx
  40e020:	scas   eax,DWORD PTR es:[edi]
  40e021:	repnz test eax,0xfccc63a8
  40e027:	fimul  DWORD PTR [edi-0x645b04f0]
  40e02d:	bound  esp,QWORD PTR [edi]
  40e02f:	cmp    al,0xfc
  40e031:	and    al,0x1
  40e033:	cwde   
  40e034:	add    al,0xc6
  40e036:	test   BYTE PTR [edi],0x73
  40e039:	adc    ah,BYTE PTR [edi]
  40e03b:	mov    edx,DWORD PTR [edi+0x35]
  40e03e:	xor    DWORD PTR [ecx+0x34f91fb7],ebx
  40e044:	add    cl,dh
  40e046:	mov    ah,0x2c
  40e048:	ret    0x1a6c
  40e04b:	xlat   BYTE PTR ds:[ebx]
  40e04c:	jno    0x40e08f
  40e04e:	aad    0x95
  40e050:	pusha  
  40e051:	cwde   
  40e052:	retf   0x79d5
  40e055:	pop    ebx
  40e056:	xchg   edx,eax
  40e057:	inc    eax
  40e058:	cwde   
  40e059:	adc    ch,BYTE PTR [ebx]
  40e05b:	ds rcl al,0xb2
  40e05f:	sub    DWORD PTR [ebp-0x2f23c891],ecx
  40e065:	cwde   
  40e066:	mov    BYTE PTR [edi],bh
  40e068:	xchg   ebp,eax
  40e069:	jne    0x40e0e0
  40e06b:	cmp    BYTE PTR [ebx],ah
  40e06d:	mov    esi,0x16951a2f
  40e072:	push   ebx
  40e073:	pop    ds
  40e074:	push   esi
  40e075:	pop    ebx
  40e076:	repz or DWORD PTR [ecx+0x51],esi
  40e07a:	mov    eax,0xaf68127
  40e07f:	lock cdq 
  40e081:	(bad)  
  40e082:	jp     0x40e0e3
  40e084:	(bad)  
  40e086:	or     BYTE PTR [ebx+0x3],0xd8
  40e08a:	sub    bl,BYTE PTR ds:0xcdd67852
  40e090:	lods   al,BYTE PTR ds:[esi]
  40e091:	mov    ch,0xff
  40e093:	mov    esp,0x1618c3f
  40e098:	out    0x88,eax
  40e09a:	adc    BYTE PTR [esi-0x31c79f5d],dh
  40e0a0:	call   0xd2c3bd8
  40e0a5:	into   
  40e0a6:	dec    esp
  40e0a7:	cmp    BYTE PTR [ebp+0xa],al
  40e0aa:	(bad)  
  40e0ab:	mov    dh,0xe7
  40e0ad:	pushf  
  40e0ae:	rol    DWORD PTR [edx+ebx*4+0x26],1
  40e0b2:	dec    edx
  40e0b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0b4:	mov    bl,0x8c
  40e0b6:	sub    DWORD PTR [ebp+ebp*1-0x6767a4a4],0x4f
  40e0be:	xor    al,0x3b
  40e0c0:	cs je  0x40e083
  40e0c3:	xlat   BYTE PTR ds:[ebx]
  40e0c4:	xchg   esp,eax
  40e0c5:	push   ecx
  40e0c6:	fsub   DWORD PTR [esi]
  40e0c8:	and    eax,0x4f4b20d8
  40e0cd:	ja     0x40e09c
  40e0cf:	stos   BYTE PTR es:[edi],al
  40e0d0:	sub    dl,BYTE PTR ds:0xefc47121
  40e0d6:	add    bh,ah
  40e0d8:	push   ss
  40e0d9:	cdq    
  40e0da:	sahf   
  40e0db:	fcmovu st,st(7)
  40e0dd:	and    al,0x6e
  40e0df:	mov    eax,0x17575bc1
  40e0e4:	sar    eax,0xf2
  40e0e7:	daa    
  40e0e8:	in     al,0x42
  40e0ea:	out    0xfb,eax
  40e0ec:	test   eax,0x579a3937
  40e0f1:	inc    esi
  40e0f2:	popa   
  40e0f3:	call   edx
  40e0f5:	xor    bl,BYTE PTR ds:0x2a70981d
  40e0fb:	push   edx
  40e0fc:	or     al,0x5a
  40e0fe:	imul   ecx,DWORD PTR ds:0xbe701b41,0xb3d75cb3
  40e108:	outs   dx,BYTE PTR ds:[esi]
  40e109:	out    dx,al
  40e10a:	jmp    DWORD PTR [eax+0x6d]
  40e10d:	hlt    
  40e10e:	adc    al,0x8b
  40e110:	sbb    esp,ebx
  40e112:	data16 clc 
  40e114:	sbb    eax,0xd933c65d
  40e119:	loope  0x40e113
  40e11b:	xchg   ebx,eax
  40e11c:	sbb    BYTE PTR [edx],bh
  40e11e:	xchg   ebp,eax
  40e11f:	pushf  
  40e120:	clc    
  40e121:	iret   
  40e122:	stos   BYTE PTR es:[edi],al
  40e123:	sub    al,0xcf
  40e125:	imul   edi,esi,0x5d0e9379
  40e12b:	fwait
  40e12c:	add    ah,dl
  40e12e:	sar    BYTE PTR ds:0xd1397b8e,cl
  40e134:	lock mov dh,0x2e
  40e137:	ja     0x40e0f5
  40e139:	fwait
  40e13a:	add    esi,DWORD PTR [edi-0xa80667c]
  40e140:	dec    esi
  40e141:	cwde   
  40e142:	jb     0x40e0e7
  40e144:	fucomp st(3)
  40e146:	nop
  40e147:	cmp    al,0xfa
  40e149:	jae    0x40e153
  40e14b:	inc    BYTE PTR [ecx+0x71]
  40e14e:	inc    ebp
  40e14f:	push   ss
  40e150:	(bad)  
  40e151:	pushf  
  40e152:	cmp    ecx,eax
  40e154:	cli    
  40e155:	add    edx,ecx
  40e157:	fcom   QWORD PTR [ecx+0x3d86df98]
  40e15d:	jp     0x40e13a
  40e15f:	mov    ?,WORD PTR ds:0x414ade13
  40e165:	and    eax,0x96c03b3b
  40e16a:	retf   
  40e16b:	jge    0x40e196
  40e16d:	adc    DWORD PTR [ecx],0xffffffbb
  40e170:	test   DWORD PTR [eax+0x78],esp
  40e173:	add    esi,DWORD PTR [ecx-0x36]
  40e176:	popf   
  40e177:	and    esp,0x2875658c
  40e17d:	popf   
  40e17e:	pop    eax
  40e17f:	or     DWORD PTR [ebx+eiz*4-0x2d],0x3f0c196a
  40e187:	(bad)  [ecx-0xfd35ec9]
  40e18d:	loope  0x40e1ab
  40e18f:	lds    edi,FWORD PTR [esi-0x6e]
  40e192:	jge    0x40e129
  40e194:	dec    esi
  40e195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e196:	lods   al,BYTE PTR ds:[esi]
  40e197:	sti    
  40e198:	fld    TBYTE PTR [ebx+0x31e0f1bf]
  40e19e:	push   edi
  40e19f:	xchg   esi,eax
  40e1a0:	sbb    al,0x67
  40e1a2:	mov    dh,0xba
  40e1a4:	mov    esp,DWORD PTR [ebp+0x677a1f33]
  40e1aa:	inc    esi
  40e1ab:	jmp    0x67a04853
  40e1b0:	(bad)  
  40e1b1:	lods   eax,DWORD PTR ds:[esi]
  40e1b2:	ror    ebp,cl
  40e1b4:	icebp  
  40e1b5:	xchg   BYTE PTR [ebp+ecx*8+0xf849d99],al
  40e1bc:	scas   al,BYTE PTR es:[edi]
  40e1bd:	adc    DWORD PTR [ebp+0x429df162],esp
  40e1c3:	xchg   BYTE PTR ds:0xe94d9ee0,bl
  40e1c9:	fild   DWORD PTR [edx+0x1f52cfa9]
  40e1cf:	loop   0x40e17b
  40e1d1:	mov    al,0x3f
  40e1d3:	call   0x5de2:0x5d0ea8da
  40e1da:	push   edx
  40e1db:	nop
  40e1dc:	shl    esi,1
  40e1de:	mov    dl,0x95
  40e1e0:	dec    esi
  40e1e1:	int3   
  40e1e2:	jno    0x40e1cb
  40e1e4:	int    0x9c
  40e1e6:	jp     0x40e171
  40e1e8:	inc    ebp
  40e1e9:	mov    BYTE PTR [ecx-0x53],ch
  40e1ec:	or     al,0xa
  40e1ee:	ins    BYTE PTR es:[edi],dx
  40e1ef:	out    dx,eax
  40e1f0:	les    ecx,FWORD PTR [ebx-0x78c75909]
  40e1f6:	cmp    BYTE PTR [eax-0x3a],bh
  40e1f9:	pop    es
  40e1fa:	add    edx,esp
  40e1fc:	add    eax,0xb632418b
  40e201:	in     eax,0xd2
  40e203:	push   ecx
  40e204:	dec    edx
  40e205:	dec    ebx
  40e206:	mov    ebx,0x744908c5
  40e20b:	aas    
  40e20c:	outs   dx,DWORD PTR ds:[esi]
  40e20d:	lea    edx,[edx+edx*4]
  40e210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e211:	cmp    dl,BYTE PTR [ebx]
  40e213:	sbb    eax,esi
  40e215:	mov    edx,0xa8435d10
  40e21a:	ins    BYTE PTR es:[edi],dx
  40e21b:	in     al,dx
  40e21c:	(bad)  
  40e21e:	gs sub eax,esp
  40e221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e222:	call   0x7239:0x10cc983b
  40e229:	mov    DWORD PTR [edi+0x12],ebx
  40e22c:	and    ecx,DWORD PTR [esi+0x25]
  40e22f:	arpl   WORD PTR [eax+0x63],bp
  40e232:	inc    ebp
  40e233:	push   0xffffffc2
  40e235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e236:	gs sub bl,ch
  40e239:	dec    ecx
  40e23a:	call   0x2516:0xa8a39a3d
  40e241:	xchg   edi,eax
  40e242:	cdq    
  40e243:	popf   
  40e244:	scas   al,BYTE PTR es:[edi]
  40e245:	nop
  40e246:	retf   0x741d
  40e249:	repz fldenv [eax+eiz*1+0x3d5a6e24]
  40e251:	jmp    0x262e:0x41d36f01
  40e258:	(bad)  
  40e259:	aas    
  40e25a:	and    al,0xe7
  40e25c:	(bad)  
  40e25d:	or     ebx,DWORD PTR [eax]
  40e25f:	jmp    0x40e202
  40e261:	repnz push cs
  40e263:	into   
  40e264:	test   DWORD PTR [esi-0xa],eax
  40e267:	mov    BYTE PTR [edx-0x244c3cc1],dl
  40e26d:	xchg   esi,eax
  40e26e:	popf   
  40e26f:	ret    
  40e270:	jb     0x40e1f9
  40e272:	mov    bh,BYTE PTR ds:0x17932e2d
  40e278:	mov    dl,BYTE PTR [edx]
  40e27a:	shr    DWORD PTR [ebx-0x61f0b2f4],cl
  40e280:	xor    dh,BYTE PTR [esi]
  40e282:	mov    ?,eax
  40e284:	cmc    
  40e285:	mov    al,ds:0x402bac7d
  40e28a:	aaa    
  40e28b:	lods   eax,DWORD PTR ds:[esi]
  40e28c:	add    BYTE PTR [ecx+0x3c9fe2c8],bh
  40e292:	in     al,0x3a
  40e294:	pushf  
  40e295:	mov    al,ds:0x125d8be0
  40e29a:	jmp    0x40e266
  40e29c:	lods   al,BYTE PTR ds:[esi]
  40e29d:	sbb    esp,eax
  40e29f:	cmp    edx,DWORD PTR [eax]
  40e2a1:	int    0x4
  40e2a3:	fst    QWORD PTR ss:[edi+0x25]
  40e2a7:	jmp    0x5449f9a
  40e2ac:	lea    edx,[esi+0x463e3dfb]
  40e2b2:	pminub mm1,mm3
  40e2b5:	sub    eax,0x25749775
  40e2ba:	mov    edi,0xefbd1b41
  40e2bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2c1:	fsubr  DWORD PTR [ebx+0x4bfcdc73]
  40e2c7:	imul   esi,ebp,0xf927b726
  40e2cd:	punpcklbw mm2,DWORD PTR [esi-0x3f]
  40e2d1:	jbe    0x40e324
  40e2d3:	adc    ah,BYTE PTR [ecx]
  40e2d5:	add    eax,DWORD PTR [edi+0x5f]
  40e2d8:	mov    ah,0x4c
  40e2da:	jl     0x40e2bd
  40e2dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2dd:	push   ds
  40e2de:	fs xchg edx,eax
  40e2e0:	aaa    
  40e2e1:	(bad)  
  40e2e2:	or     eax,0x60867eb7
  40e2e7:	dec    ebx
  40e2e8:	bound  ecx,QWORD PTR [ecx-0x45f385fa]
  40e2ee:	retf   
  40e2ef:	adc    al,0x95
  40e2f1:	js     0x40e2ab
  40e2f3:	stos   DWORD PTR es:[edi],eax
  40e2f4:	fidiv  DWORD PTR [edi-0x7c]
  40e2f7:	or     al,0x51
  40e2f9:	fist   DWORD PTR [ebp-0x73]
  40e2fc:	cmp    eax,0xf2fa72b3
  40e301:	(bad)  
  40e303:	(bad)  
  40e304:	hlt    
  40e305:	out    dx,eax
  40e306:	lods   al,BYTE PTR ds:[esi]
  40e307:	add    ebx,ebp
  40e309:	pop    eax
  40e30a:	cmc    
  40e30b:	test   DWORD PTR [esi-0x7f],0x1cc0a22f
  40e312:	popa   
  40e313:	shl    ebx,0x7a
  40e316:	sub    eax,0x4a8ddfa3
  40e31b:	xor    edi,ecx
  40e31d:	add    ebx,DWORD PTR [edx-0x77ca09ae]
  40e323:	sbb    esi,eax
  40e325:	je     0x40e338
  40e327:	call   0x8aba51e2
  40e32c:	cli    
  40e32d:	sbb    al,0x21
  40e32f:	cld    
  40e330:	or     bl,BYTE PTR [edi-0x19]
  40e333:	cld    
  40e334:	xchg   esp,eax
  40e335:	cwde   
  40e336:	outs   dx,BYTE PTR ds:[esi]
  40e337:	scas   al,BYTE PTR es:[edi]
  40e338:	jo     0x40e318
  40e33a:	xor    BYTE PTR [ecx-0x71],dh
  40e33d:	push   esi
  40e33e:	or     BYTE PTR [ebp-0x4],dh
  40e341:	loop   0x40e3bd
  40e343:	fs mov bh,0x14
  40e346:	and    dl,BYTE PTR [eax-0x185e338c]
  40e34c:	int3   
  40e34d:	inc    ecx
  40e34e:	mov    ah,0x24
  40e350:	sub    al,0x4e
  40e352:	outs   dx,BYTE PTR ds:[esi]
  40e353:	stos   DWORD PTR es:[edi],eax
  40e354:	adc    ah,BYTE PTR [ebp+0x59]
  40e357:	loope  0x40e30e
  40e359:	pop    eax
  40e35a:	xlat   BYTE PTR ds:[ebx]
  40e35b:	adc    cl,ah
  40e35d:	xlat   BYTE PTR ds:[ebx]
  40e35e:	scas   eax,DWORD PTR es:[edi]
  40e35f:	or     BYTE PTR [eax],al
  40e361:	cmp    al,0x99
  40e363:	pushf  
  40e364:	xor    al,0xae
  40e366:	inc    esp
  40e367:	retf   0x777f
  40e36a:	xchg   BYTE PTR [edi+0x2b],al
  40e36d:	inc    edx
  40e36e:	std    
  40e36f:	xor    eax,0x7482603a
  40e374:	test   BYTE PTR ds:0xa7fda514,dh
  40e37a:	push   ecx
  40e37b:	test   al,0xac
  40e37d:	(bad)  
  40e37e:	out    0x76,eax
  40e380:	arpl   cx,cx
  40e382:	cmp    eax,0x42d87435
  40e387:	mov    ecx,0x5201ebb5
  40e38c:	jo     0x40e3d2
  40e38e:	fdiv   st,st(7)
  40e390:	outs   dx,DWORD PTR ds:[esi]
  40e391:	push   ds
  40e392:	mov    dl,0x18
  40e394:	fwait
  40e395:	(bad)
  40e39a:	dec    ebp
  40e39b:	xchg   edi,eax
  40e39c:	test   eax,0x8c7f4fd7
  40e3a1:	out    dx,al
  40e3a2:	bound  ebx,QWORD PTR [ebx]
  40e3a4:	and    al,0x1c
  40e3a6:	xor    eax,0xe7aff9ce
  40e3ab:	repz leave 
  40e3ad:	nop
  40e3ae:	jno    0x40e3ad
  40e3b0:	add    dl,cl
  40e3b2:	imul   edx,DWORD PTR [ebp+0x2e],0xffffffd1
  40e3b6:	scas   eax,DWORD PTR es:[edi]
  40e3b7:	add    al,BYTE PTR [edi]
  40e3b9:	inc    ecx
  40e3ba:	fs push ebx
  40e3bc:	enter  0xd1ae,0x9d
  40e3c0:	mov    bl,0x93
  40e3c2:	pop    ss
  40e3c3:	mov    cl,0xec
  40e3c5:	outs   dx,DWORD PTR ds:[esi]
  40e3c6:	push   ss
  40e3c7:	inc    ecx
  40e3c8:	adc    ecx,eax
  40e3ca:	sbb    DWORD PTR [ebp+eax*2-0x5d0d6c20],ebx
  40e3d1:	push   esp
  40e3d2:	int3   
  40e3d3:	pop    ss
  40e3d4:	call   FWORD PTR [esi]
  40e3d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3d7:	inc    ecx
  40e3d8:	lods   eax,DWORD PTR ds:[esi]
  40e3d9:	dec    edi
  40e3da:	and    edi,DWORD PTR [edx]
  40e3dc:	mov    eax,ds:0x5906f161
  40e3e1:	mov    ah,0xbd
  40e3e3:	xchg   esi,eax
  40e3e4:	mov    DWORD PTR [edx],edi
  40e3e6:	jns    0x40e3f6
  40e3e8:	mov    esp,0x411df87a
  40e3ed:	repnz pusha 
  40e3ef:	lods   al,BYTE PTR ds:[esi]
  40e3f0:	jo     0x40e423
  40e3f2:	fldenv es:[ebx-0x5]
  40e3f6:	sub    ch,al
  40e3f8:	mov    ds:0xa1b854cb,al
  40e3fd:	ror    DWORD PTR [esi+0x2e],1
  40e400:	inc    edx
  40e401:	clc    
  40e402:	lods   eax,DWORD PTR ds:[esi]
  40e403:	pop    eax
  40e404:	cwde   
  40e405:	cmp    BYTE PTR [ecx-0x531cd7af],ch
  40e40b:	push   ebp
  40e40c:	mov    WORD PTR [ebp+ebp*2+0x32],ds
  40e410:	xor    ah,bl
  40e412:	cmp    esi,DWORD PTR [eax+0x309c9c56]
  40e418:	aam    0x5
  40e41a:	popf   
  40e41b:	pop    edx
  40e41c:	(bad)  
  40e41e:	push   0xbaa227d2
  40e423:	arpl   WORD PTR [ebx+0x68fb9c84],di
  40e429:	cs mov edx,0x702b1395
  40e42f:	test   DWORD PTR [edi+ebp*4+0x48],edx
  40e433:	sub    BYTE PTR [edi+eiz*8-0xa],cl
  40e437:	js     0x40e49d
  40e439:	int    0x82
  40e43b:	shl    DWORD PTR [edi-0x9],cl
  40e43e:	out    dx,al
  40e43f:	mov    bl,0xe3
  40e441:	fimul  WORD PTR [edx]
  40e443:	in     eax,0x17
  40e445:	mov    DWORD PTR [ecx-0x6abcc54b],0x78711f8d
  40e44f:	out    0x32,al
  40e451:	test   al,0xdb
  40e453:	es loop 0x40e451
  40e456:	inc    eax
  40e457:	rcr    BYTE PTR [esi-0x63],0x21
  40e45b:	pop    esp
  40e45c:	(bad)  
  40e45d:	cld    
  40e45e:	loop   0x40e46d
  40e460:	ret    0x70c3
  40e463:	(bad)  
  40e464:	xor    BYTE PTR [esi-0x4ece3daa],bl
  40e46a:	das    
  40e46b:	xchg   esp,eax
  40e46c:	xor    ecx,esp
  40e46e:	jmp    0x24a7:0xc4eca228
  40e475:	ss mov ah,0x9c
  40e478:	jp     0x40e451
  40e47a:	cli    
  40e47b:	fisttp DWORD PTR [ebp+0x35b4ba2f]
  40e481:	pop    eax
  40e482:	aam    0xdc
  40e484:	jmp    0xbb76e013
  40e489:	hlt    
  40e48a:	xchg   ebx,eax
  40e48b:	mov    eax,ds:0x952e18c2
  40e490:	ret    
  40e491:	jne    0x40e466
  40e493:	mov    WORD PTR [edx+0x51],fs
  40e496:	xlat   BYTE PTR ds:[ebx]
  40e497:	xchg   esp,eax
  40e498:	push   ss
  40e499:	and    BYTE PTR [ebp+ebx*4+0xa],dh
  40e49d:	sahf   
  40e49e:	ret    0x87ad
  40e4a1:	stc    
  40e4a2:	jb     0x40e44b
  40e4a4:	pop    ebp
  40e4a5:	sub    DWORD PTR [esi],ecx
  40e4a7:	int3   
  40e4a8:	jbe    0x40e4cb
  40e4aa:	hlt    
  40e4ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ac:	xchg   edi,eax
  40e4ad:	mov    edi,DWORD PTR [eax]
  40e4af:	inc    ebp
  40e4b0:	adc    BYTE PTR [ebx-0x39],dl
  40e4b3:	pusha  
  40e4b4:	gs aaa 
  40e4b6:	shr    DWORD PTR [eax],cl
  40e4b8:	xor    BYTE PTR [eax+esi*2-0x73bbd572],0xea
  40e4c0:	std    
  40e4c1:	js     0x40e46b
  40e4c3:	mov    ebx,DWORD PTR [eax+edi*8-0x2b]
  40e4c7:	fisttp DWORD PTR [esi-0x20]
  40e4ca:	sub    dh,BYTE PTR [ebx+0x772eec92]
  40e4d0:	sti    
  40e4d1:	test   al,0x2
  40e4d3:	jb     0x40e543
  40e4d5:	jne    0x40e547
  40e4d7:	rol    BYTE PTR [edi+0xb40039b],0xa2
  40e4de:	mov    bh,0xeb
  40e4e0:	push   esp
  40e4e1:	pusha  
  40e4e2:	loop   0x40e4df
  40e4e4:	ret    
  40e4e5:	(bad)  
  40e4e6:	push   eax
  40e4e7:	and    ch,BYTE PTR [edx-0x3d]
  40e4ea:	inc    esp
  40e4eb:	and    ah,BYTE PTR [esi-0x1d]
  40e4ee:	test   DWORD PTR [esi],ebx
  40e4f0:	cdq    
  40e4f1:	mov    ebx,0x3117a8d7
  40e4f6:	xchg   BYTE PTR [si-0x19],ah
  40e4fa:	cmp    BYTE PTR [ebx+0x5d3aedea],0x0
  40e501:	mov    esp,0x602b7899
  40e506:	mov    dh,0x9b
  40e508:	out    0xe5,al
  40e50a:	or     eax,0x56eae5ac
  40e50f:	jmp    0xd7634c90
  40e514:	xor    edi,edi
  40e516:	test   eax,0x7c7c79f0
  40e51b:	and    al,0xa0
  40e51d:	cwde   
  40e51e:	xor    DWORD PTR [ebx-0x51],ebx
  40e521:	mov    bl,0x30
  40e523:	xchg   ecx,eax
  40e524:	(bad)  
  40e525:	icebp  
  40e526:	sub    DWORD PTR [eax-0x16],ecx
  40e529:	push   ebx
  40e52a:	jle    0x40e5a7
  40e52c:	push   ebx
  40e52d:	in     eax,dx
  40e52e:	inc    edx
  40e52f:	mov    dl,0xca
  40e531:	cdq    
  40e532:	or     eax,0x5fdbe0ac
  40e537:	jge    0x40e4da
  40e539:	sbb    al,0xf8
  40e53b:	dec    eax
  40e53c:	in     eax,dx
  40e53d:	fimul  DWORD PTR [ebp+0x4ae0e204]
  40e543:	lods   eax,DWORD PTR ds:[esi]
  40e544:	inc    ebx
  40e545:	mov    edx,0xfc5c0ffe
  40e54a:	rsqrtps xmm3,XMMWORD PTR [edi+0x39]
  40e54e:	arpl   WORD PTR [ebx+0x17302567],si
  40e554:	out    dx,eax
  40e555:	and    ecx,esp
  40e557:	xchg   esp,eax
  40e558:	ret    0xdd89
  40e55b:	or     dh,ah
  40e55d:	add    eax,0xb298cde
  40e562:	enter  0x3fbf,0x19
  40e566:	mov    ebx,0x2fe9cce0
  40e56b:	fimul  WORD PTR [eax-0x4e008c38]
  40e571:	mov    bh,0x8c
  40e573:	push   ebp
  40e574:	cmp    esp,DWORD PTR ds:0x7235f29c
  40e57a:	mov    BYTE PTR gs:[eax+0x35c00249],cl
  40e581:	out    dx,eax
  40e582:	inc    eax
  40e583:	out    0xea,al
  40e585:	jno    0x40e59e
  40e587:	xchg   BYTE PTR fs:[edx-0x4be39559],bh
  40e58e:	inc    esp
  40e58f:	xchg   edi,eax
  40e590:	push   0xffffffcb
  40e592:	mov    eax,ds:0xe973c539
  40e597:	retf   
  40e598:	ret    
  40e599:	inc    ecx
  40e59a:	push   ss
  40e59b:	test   ah,0x7f
  40e59e:	ins    DWORD PTR es:[edi],dx
  40e59f:	and    edx,DWORD PTR [ebx+eiz*1-0x6cb9322a]
  40e5a6:	cmp    esi,DWORD PTR [eax+0x504e602f]
  40e5ac:	add    edx,0xffffff8a
  40e5af:	popf   
  40e5b0:	add    BYTE PTR [esi-0x7f],dh
  40e5b3:	jbe    0x40e5c7
  40e5b5:	mov    al,0x62
  40e5b7:	shl    bh,cl
  40e5b9:	sub    ecx,ebx
  40e5bb:	int3   
  40e5bc:	inc    eax
  40e5bd:	sbb    ch,BYTE PTR [bx+0x59cf]
  40e5c2:	inc    ecx
  40e5c3:	jb     0x40e640
  40e5c5:	icebp  
  40e5c6:	add    al,0xd8
  40e5c8:	repnz leave 
  40e5ca:	std    
  40e5cb:	add    al,0x82
  40e5cd:	fs retf 
  40e5cf:	push   0x4483b46
  40e5d4:	aaa    
  40e5d5:	push   edx
  40e5d6:	aad    0xa6
  40e5d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5d9:	adc    bh,BYTE PTR [ecx*2-0x6b7faab5]
  40e5e0:	hlt    
  40e5e1:	call   0x5076:0x440f2a41
  40e5e8:	xchg   ebx,eax
  40e5e9:	inc    eax
  40e5ea:	mov    BYTE PTR [esi+ecx*8],dh
  40e5ed:	aam    0xb0
  40e5ef:	fucom  st(0)
  40e5f1:	jmp    0x40e5e0
  40e5f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5f4:	mov    dl,0x11
  40e5f6:	scas   al,BYTE PTR es:[edi]
  40e5f7:	gs sti 
  40e5f9:	gs es das 
  40e5fc:	call   0x9a18:0x7873dffd
  40e603:	mov    dh,0xe1
  40e605:	pop    ebx
  40e606:	jl     0x40e644
  40e608:	enter  0xddbe,0xe5
  40e60c:	adc    eax,0x564f199d
  40e611:	cdq    
  40e612:	push   ss
  40e613:	std    
  40e614:	je     0x40e668
  40e616:	sbb    eax,0xb3e733d
  40e61b:	inc    ebx
  40e61c:	xor    al,0xca
  40e61e:	pop    ebx
  40e61f:	pop    es
  40e620:	pop    es
  40e621:	xchg   DWORD PTR [esi+0x10],esi
  40e624:	test   bl,al
  40e626:	mov    BYTE PTR [ecx-0x7a8b8aa],bl
  40e62c:	and    BYTE PTR [ebp-0x14e133a0],ch
  40e632:	fsubr  DWORD PTR [ebp+ebx*2+0x56]
  40e636:	popa   
  40e637:	popa   
  40e638:	dec    ebp
  40e639:	aas    
  40e63a:	pop    esi
  40e63b:	outs   dx,BYTE PTR ds:[esi]
  40e63c:	xor    BYTE PTR [eax],0x85
  40e63f:	jno    0x40e611
  40e641:	stos   DWORD PTR es:[edi],eax
  40e642:	fisub  DWORD PTR [ecx-0x7eb49d1c]
  40e648:	leave  
  40e649:	cmp    esi,esi
  40e64b:	je     0x40e66e
  40e64d:	aaa    
  40e64e:	(bad)  
  40e64f:	mov    ah,0x2
  40e651:	fdiv   QWORD PTR [ebx+eax*1+0x401bad5e]
  40e658:	mov    bl,0x3d
  40e65a:	cmc    
  40e65b:	pushf  
  40e65c:	lds    ebx,FWORD PTR [esi+0x34]
  40e65f:	call   0xec51d293
  40e664:	xor    BYTE PTR [edi-0x718f5e26],bh
  40e66a:	cmc    
  40e66b:	adc    dh,BYTE PTR [edx+0x77]
  40e66e:	push   esi
  40e66f:	xor    BYTE PTR [edi+0x72ebd638],dh
  40e675:	aaa    
  40e676:	jb     0x40e646
  40e678:	push   ebx
  40e679:	bound  esi,QWORD PTR ds:0xebe763ae
  40e67f:	cmp    DWORD PTR [eax+0x7a],0x235297a7
  40e686:	lods   al,BYTE PTR ds:[esi]
  40e687:	or     eax,DWORD PTR [edi+0x70]
  40e68a:	or     BYTE PTR [edi],dl
  40e68c:	mov    bh,0x2a
  40e68e:	gs hlt 
  40e690:	mov    esp,0x3bdd09c9
  40e695:	lahf   
  40e696:	je     0x40e647
  40e698:	fistp  DWORD PTR [edx+0x7f880063]
  40e69e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e69f:	jae    0x40e64a
  40e6a1:	sub    dh,BYTE PTR [bp+di]
  40e6a4:	inc    edi
  40e6a5:	dec    edx
  40e6a6:	repnz rcl BYTE PTR [edx+0x3a510eab],1
  40e6ad:	call   DWORD PTR [ecx+0x57781907]
  40e6b3:	xchg   ebx,eax
  40e6b4:	not    DWORD PTR [ebp+0x3f]
  40e6b7:	jmp    0x7c14f655
  40e6bc:	rcl    bl,1
  40e6be:	jnp    0x40e6cc
  40e6c0:	or     eax,0x7abb7707
  40e6c5:	out    dx,al
  40e6c6:	inc    ebx
  40e6c7:	fucompp 
  40e6c9:	fwait
  40e6ca:	and    ch,ah
  40e6cc:	mov    ds:0x39a5402e,al
  40e6d1:	pop    esi
  40e6d2:	fmulp  st(5),st
  40e6d4:	or     esp,ebx
  40e6d6:	test   ebx,esi
  40e6d8:	xlat   BYTE PTR ds:[ebx]
  40e6d9:	adc    esp,eax
  40e6db:	enter  0x8b14,0x1f
  40e6df:	and    al,0x37
  40e6e1:	jmp    0xd60a345a
  40e6e6:	or     al,0xb5
  40e6e8:	ja     0x40e6a2
  40e6ea:	leave  
  40e6eb:	sub    BYTE PTR [edi+0x43],bh
  40e6ee:	les    ebx,FWORD PTR [edi+0x77]
  40e6f1:	mov    edx,0x2893cf03
  40e6f6:	adc    BYTE PTR gs:[edi],cl
  40e6f9:	cli    
  40e6fa:	test   DWORD PTR [edi+0x37a91111],eax
  40e700:	fs push edi
  40e702:	xchg   edx,eax
  40e703:	daa    
  40e704:	sbb    ch,BYTE PTR [eax]
  40e706:	pusha  
  40e707:	in     al,0x91
  40e709:	mov    dl,0x3
  40e70b:	xchg   ebp,eax
  40e70c:	pusha  
  40e70d:	loop   0x40e706
  40e70f:	add    eax,0x846fb5c2
  40e714:	retf   
  40e715:	mov    BYTE PTR [edx+0x5b],0xed
  40e719:	inc    edi
  40e71a:	mov    ?,WORD PTR [eax+0x29]
  40e71d:	pop    ebx
  40e71e:	es aas 
  40e720:	ds xchg ecx,eax
  40e722:	je     0x40e79e
  40e724:	sub    DWORD PTR [esi-0x6d],edx
  40e727:	adc    eax,esp
  40e729:	aaa    
  40e72a:	outs   dx,DWORD PTR ds:[esi]
  40e72b:	mov    edx,0x8fe9c6e3
  40e730:	pop    ecx
  40e731:	mov    ebp,0x4cb4fdd1
  40e736:	inc    ebp
  40e737:	pushf  
  40e738:	sti    
  40e739:	icebp  
  40e73a:	dec    edi
  40e73b:	inc    ecx
  40e73c:	jle    0x40e7ba
  40e73e:	repz xor ch,BYTE PTR [esi]
  40e741:	stos   DWORD PTR es:[edi],eax
  40e742:	inc    esp
  40e743:	add    eax,0xdcb7685b
  40e748:	dec    ebp
  40e749:	pop    es
  40e74a:	inc    edi
  40e74b:	sahf   
  40e74c:	mov    eax,0x1855c3cb
  40e751:	cs call 0x4221f504
  40e757:	mov    bl,BYTE PTR [ecx-0x6a2b8a86]
  40e75d:	shr    DWORD PTR [ecx-0x59],cl
  40e760:	popf   
  40e761:	jbe    0x40e7c8
  40e763:	mov    dh,0x12
  40e765:	mov    esp,0x48d44f16
  40e76a:	shl    BYTE PTR [esi-0x7e],1
  40e76d:	clc    
  40e76e:	imul   DWORD PTR [esi]
  40e770:	sub    eax,0xdf8d1931
  40e775:	loope  0x40e7e6
  40e777:	aas    
  40e778:	sub    al,bl
  40e77a:	idiv   BYTE PTR [esi-0x5eeb53cc]
  40e780:	popf   
  40e781:	dec    edx
  40e782:	stc    
  40e783:	dec    esi
  40e784:	ret    0xf372
  40e787:	xlat   BYTE PTR ds:[ebx]
  40e788:	adc    al,0xda
  40e78a:	jmp    0xc1788f8a
  40e78f:	enter  0x250d,0xb0
  40e793:	ja     0x40e73d
  40e795:	push   ecx
  40e796:	inc    eax
  40e797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e798:	xor    eax,eax
  40e79a:	fstp   DWORD PTR [esi-0x4e76b345]
  40e7a0:	dec    esp
  40e7a1:	dec    esp
  40e7a2:	cli    
  40e7a3:	and    eax,DWORD PTR [edi-0x47640855]
  40e7a9:	imul   eax,edi,0x24
  40e7ac:	retf   0x8384
  40e7af:	int    0x8a
  40e7b1:	fwait
  40e7b2:	jmp    0x1c43:0xa89c1eee
  40e7b9:	pop    ebx
  40e7ba:	retf   0xbe0f
  40e7bd:	stos   BYTE PTR es:[edi],al
  40e7be:	sub    cl,dh
  40e7c0:	sub    esp,DWORD PTR [esi-0x6e]
  40e7c3:	jns    0x40e779
  40e7c5:	adc    edx,DWORD PTR [ebx-0x50]
  40e7c8:	sbb    bl,BYTE PTR [edi-0x43ce3cc2]
  40e7ce:	icebp  
  40e7cf:	dec    ecx
  40e7d0:	neg    BYTE PTR [ebp-0x249d924b]
  40e7d6:	nop
  40e7d7:	fbstp  TBYTE PTR [ebp-0x77]
  40e7da:	jb     0x40e814
  40e7dc:	xor    ch,BYTE PTR [eax+edi*8+0x3a]
  40e7e0:	mov    edx,0x59f40228
  40e7e5:	and    al,0x57
  40e7e7:	mov    ch,0xb3
  40e7e9:	cmp    al,0xf3
  40e7eb:	or     BYTE PTR [ecx-0x50],bl
  40e7ee:	or     ch,BYTE PTR [esi-0x6c]
  40e7f1:	call   0x52a3:0xa7531de4
  40e7f8:	ja     0x40e7ca
  40e7fa:	test   eax,0xf028fa7b
  40e7ff:	out    dx,eax
  40e800:	mov    ds:0x4b6ff41e,al
  40e805:	ja     0x40e796
  40e807:	xchg   BYTE PTR [ebx],bh
  40e809:	inc    ecx
  40e80a:	mov    ds:0x55776ee7,eax
  40e80f:	pop    esp
  40e810:	adc    edx,DWORD PTR ds:0x4b9814f3
  40e816:	lahf   
  40e817:	mov    esp,0x736da980
  40e81c:	in     al,0x81
  40e81e:	push   edi
  40e81f:	inc    esi
  40e820:	adc    edi,ebp
  40e822:	std    
  40e823:	cmp    edi,DWORD PTR [esi]
  40e825:	ss jns 0x40e7b8
  40e828:	outs   dx,DWORD PTR ds:[esi]
  40e829:	ds jne 0x40e8a7
  40e82c:	pop    ebx
  40e82d:	in     eax,dx
  40e82e:	inc    eax
  40e82f:	loope  0x40e80e
  40e831:	push   es
  40e832:	xlat   BYTE PTR ds:[ebx]
  40e833:	fs repz and dh,al
  40e837:	sub    DWORD PTR [edi+0x24],ebp
  40e83a:	push   ebx
  40e83b:	pop    si
  40e83d:	out    0x9e,al
  40e83f:	xlat   BYTE PTR cs:[ebx]
  40e841:	jo     0x40e8bb
  40e843:	sub    BYTE PTR [esi+ebp*4-0x546ae0d0],0x92
  40e84b:	dec    ebp
  40e84c:	pop    ss
  40e84d:	and    BYTE PTR [edx],al
  40e84f:	mov    WORD PTR [ecx],cs
  40e851:	mov    cl,BYTE PTR [esi]
  40e853:	inc    esi
  40e854:	sbb    al,0x8
  40e856:	inc    edi
  40e857:	mov    ebp,0x6c6c73e6
  40e85c:	xor    al,ch
  40e85e:	(bad)  
  40e85f:	jne    0x40e80e
  40e861:	push   es
  40e862:	or     ecx,DWORD PTR [edi-0x14bccb7f]
  40e868:	rol    DWORD PTR [edi-0x3a5d810],cl
  40e86e:	jmp    0xa9d0:0xe41411d9
  40e875:	push   eax
  40e876:	add    ebx,ecx
  40e878:	cmp    BYTE PTR [edx-0x13],dh
  40e87b:	sti    
  40e87c:	ds fsub st,st(1)
  40e87f:	or     ecx,DWORD PTR [edx]
  40e881:	addr16 add eax,0x99f05fd2
  40e887:	push   ss
  40e888:	loope  0x40e8ed
  40e88a:	iret   
  40e88b:	enter  0x4bba,0x2e
  40e88f:	xlat   BYTE PTR ds:[ebx]
  40e890:	ins    DWORD PTR es:[edi],dx
  40e891:	dec    ebx
  40e892:	cdq    
  40e893:	xor    bh,bl
  40e895:	ficom  DWORD PTR [ebx+0x1d56179a]
  40e89b:	test   DWORD PTR [eax-0x61],edx
  40e89e:	push   ebp
  40e89f:	or     edi,esp
  40e8a1:	scas   al,BYTE PTR es:[edi]
  40e8a2:	leave  
  40e8a3:	hlt    
  40e8a4:	test   eax,0xa242777f
  40e8a9:	xor    BYTE PTR [esp+ebx*1-0x1b6f0c31],0xa0
  40e8b1:	fs mov cl,0x4b
  40e8b4:	xor    bh,BYTE PTR [eax-0x61]
  40e8b7:	mov    dh,0x8
  40e8b9:	jecxz  0x40e8a7
  40e8bb:	hlt    
  40e8bc:	jo     0x40e8d7
  40e8be:	sub    BYTE PTR [edi-0x19],dh
  40e8c1:	push   ds
  40e8c2:	add    DWORD PTR [edi-0x6d],esp
  40e8c5:	and    eax,0xccdb6000
  40e8ca:	xchg   BYTE PTR [edx+0x40d9247d],ah
  40e8d0:	jecxz  0x40e89f
  40e8d2:	adc    esp,DWORD PTR [eax-0x4d6b9dc7]
  40e8d8:	cdq    
  40e8d9:	ins    DWORD PTR es:[edi],dx
  40e8da:	mov    cl,0xbb
  40e8dc:	add    al,0x71
  40e8de:	sahf   
  40e8df:	outs   dx,DWORD PTR ds:[esi]
  40e8e0:	xchg   edi,eax
  40e8e1:	xor    eax,0xda39dbf1
  40e8e6:	jae    0x40e881
  40e8e8:	push   ds
  40e8e9:	add    DWORD PTR [edx],edx
  40e8eb:	or     bl,BYTE PTR [eax-0x3faab58a]
  40e8f1:	adc    dl,cl
  40e8f3:	xchg   esi,eax
  40e8f4:	mov    edx,0xac5b131a
  40e8f9:	je     0x40e8a9
  40e8fb:	cmp    bh,BYTE PTR [ecx+edx*1-0x77]
  40e8ff:	enter  0x64ab,0xbf
  40e903:	jmp    0x40e8f8
  40e905:	jb     0x40e8a4
  40e907:	push   eax
  40e908:	cmp    esi,DWORD PTR [ebx+0x46573cb0]
  40e90e:	sbb    cl,dh
  40e910:	sub    al,0xf0
  40e912:	out    dx,eax
  40e913:	xchg   DWORD PTR [edx],esp
  40e915:	ds jne 0x40e92d
  40e918:	push   esp
  40e919:	inc    esi
  40e91a:	sub    ecx,esi
  40e91c:	hlt    
  40e91d:	icebp  
  40e91e:	push   ebp
  40e91f:	dec    eax
  40e920:	icebp  
  40e921:	inc    eax
  40e922:	sbb    ecx,DWORD PTR [edx+0x1f13e7b7]
  40e928:	dec    edx
  40e929:	fs loope 0x40e8c2
  40e92c:	ds cwde 
  40e92e:	int3   
  40e92f:	das    
  40e930:	dec    edx
  40e931:	xchg   esi,eax
  40e932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e933:	test   al,0xfa
  40e935:	push   edi
  40e936:	or     esp,DWORD PTR [esi+eax*8]
  40e939:	adc    al,0xb
  40e93b:	jo     0x40e8ce
  40e93d:	jns    0x40e95e
  40e93f:	popa   
  40e940:	repz (bad) 
  40e942:	sar    BYTE PTR [esi+0x59d86393],cl
  40e948:	div    dl
  40e94a:	into   
  40e94b:	and    al,bh
  40e94d:	adc    ebx,DWORD PTR [edi+0x22]
  40e950:	cwde   
  40e951:	pop    ss
  40e952:	push   esp
  40e953:	popf   
  40e954:	call   0x4c50:0x4122c328
  40e95b:	and    ah,BYTE PTR [eax]
  40e95d:	xor    DWORD PTR [esi-0x38e02890],0xffffffdf
  40e964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e965:	sbb    DWORD PTR [edx-0x15b4fa47],ebp
  40e96b:	mov    ebp,0x604bec22
  40e970:	test   DWORD PTR [esi-0x58],0x53c245e3
  40e977:	or     DWORD PTR [ebp-0x5ddb29d7],eax
  40e97d:	call   0x5c588d9f
  40e982:	jb     0x40e9c7
  40e984:	in     al,0xfa
  40e986:	mov    ebp,0xc43ce4cd
  40e98b:	dec    edx
  40e98c:	fiadd  WORD PTR [edi-0x3f]
  40e98f:	xchg   eax,esp
  40e991:	cmc    
  40e992:	les    ecx,FWORD PTR [edi]
  40e994:	add    cl,BYTE PTR [eax-0x16f88694]
  40e99a:	shl    DWORD PTR [eax-0x14],cl
  40e99d:	push   esi
  40e99e:	jp     0x40e999
  40e9a0:	(bad)  
  40e9a1:	pop    esi
  40e9a2:	inc    esp
  40e9a3:	mov    ds:0x90a4b400,eax
  40e9a8:	mov    bl,0x32
  40e9aa:	pop    ebp
  40e9ab:	mov    edx,0x477a676a
  40e9b0:	mov    ds:0x8758202e,eax
  40e9b5:	jnp    0x40e9e3
  40e9b7:	inc    ecx
  40e9b8:	sahf   
  40e9b9:	test   DWORD PTR [ebx],esp
  40e9bb:	sbb    eax,0xaf2c6889
  40e9c0:	mov    dh,0x6b
  40e9c2:	mov    eax,ds:0x82ed3f39
  40e9c7:	fs (bad) 
  40e9ca:	(bad)  
  40e9cb:	fwait
  40e9cc:	sbb    esp,DWORD PTR [ebp-0x1e983e63]
  40e9d2:	ja     0x40e9f3
  40e9d4:	or     eax,0x6902bed5
  40e9d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9da:	mov    edi,0x9eb3047d
  40e9df:	into   
  40e9e0:	loop   0x40e99f
  40e9e2:	dec    ecx
  40e9e3:	push   0x504d5a60
  40e9e8:	mov    BYTE PTR [edi],bh
  40e9ea:	out    dx,eax
  40e9eb:	in     al,dx
  40e9ec:	stc    
  40e9ed:	pop    ds
  40e9ee:	dec    ax
  40e9f0:	mov    ds:0xdd717990,eax
  40e9f5:	cli    
  40e9f6:	inc    eax
  40e9f7:	xchg   esi,eax
  40e9f8:	sub    DWORD PTR [eax+0x50],ebp
  40e9fb:	add    al,0x6f
  40e9fd:	aad    0x43
  40e9ff:	rcr    DWORD PTR es:[ecx+0x1dca8ad6],1
  40ea06:	enter  0x356b,0xef
  40ea0a:	add    al,0x9c
  40ea0c:	push   0x3a
  40ea0e:	mov    bl,0x15
  40ea10:	sbb    esp,DWORD PTR [ecx-0x3587ac72]
  40ea16:	pop    ebp
  40ea17:	test   dh,0xea
  40ea1a:	mov    ds:0xf386e2a1,al
  40ea1f:	loope  0x40ea82
  40ea21:	jae    0x40ea28
  40ea23:	lahf   
  40ea24:	and    DWORD PTR ds:0xa32f6b02,esi
  40ea2a:	fsub   DWORD PTR [ecx+0x2d898fd]
  40ea30:	repz xor ah,BYTE PTR [edx]
  40ea33:	fimul  DWORD PTR [bp-0x2515]
  40ea38:	mov    eax,0xa9b78bf9
  40ea3d:	inc    edx
  40ea3e:	mov    ebx,0x6f3337da
  40ea43:	dec    edx
  40ea44:	int    0xf1
  40ea46:	mov    ebp,0x290ff8ca
  40ea4b:	dec    esi
  40ea4c:	rcr    BYTE PTR [ebx-0x67a0ca31],1
  40ea52:	mov    BYTE PTR [edx+0x29d02cbc],bh
  40ea58:	jg     0x40ead4
  40ea5a:	sahf   
  40ea5b:	repnz dec edi
  40ea5d:	and    DWORD PTR ds:0xa66a6e50,ebx
  40ea63:	and    ecx,esp
  40ea65:	loop   0x40eab8
  40ea67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea68:	sub    cl,bh
  40ea6a:	and    al,0xd8
  40ea6c:	push   esi
  40ea6d:	rcl    DWORD PTR [edi-0x13],1
  40ea70:	(bad)  
  40ea71:	xor    BYTE PTR [eax+esi*1-0x3a27c1ab],bl
  40ea78:	dec    edx
  40ea79:	adc    al,0xff
  40ea7b:	ficom  DWORD PTR [ecx-0x4c1c5135]
  40ea81:	push   esi
  40ea82:	je     0x40ea9c
  40ea84:	mov    dh,0x8
  40ea86:	ja     0x40ea0f
  40ea88:	call   DWORD PTR [edx-0x6f]
  40ea8b:	je     0x40ea5a
  40ea8d:	and    al,0xa5
  40ea8f:	call   0xf3f0aa77
  40ea94:	sub    esi,ebp
  40ea96:	mov    dh,BYTE PTR [eax]
  40ea98:	jae    0x40eab0
  40ea9a:	mov    edx,0x2f08bbd4
  40ea9f:	add    eax,0x6250879f
  40eaa4:	push   ebx
  40eaa5:	loop   0x40eab6
  40eaa7:	jae    0x40ea89
  40eaa9:	outs   dx,BYTE PTR ds:[esi]
  40eaaa:	fbstp  TBYTE PTR [ebp+0x2b]
  40eaad:	pushf  
  40eaae:	mov    dl,0x90
  40eab0:	mul    ch
  40eab2:	jmp    0x574d:0xe786f957
  40eab9:	std    
  40eaba:	ret    0x256
  40eabd:	outs   dx,DWORD PTR ds:[esi]
  40eabe:	dec    ebx
  40eabf:	bnd jmp 0x40eab2
  40eac2:	xchg   esi,eax
  40eac3:	sti    
  40eac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eac5:	inc    edx
  40eac6:	pop    eax
  40eac7:	(bad)  
  40eac8:	in     eax,dx
  40eac9:	pause  
  40eacb:	and    al,0x33
  40eacd:	fld    QWORD PTR [ebx-0xe]
  40ead0:	pop    ss
  40ead1:	inc    esp
  40ead2:	sub    BYTE PTR [ebx+0x72],dl
  40ead5:	add    ebp,DWORD PTR [edi+0x2d87c2fd]
  40eadb:	mov    ah,0xa0
  40eadd:	jb     0x40eaca
  40eadf:	cli    
  40eae0:	ret    
  40eae1:	mov    al,ds:0xab18d794
  40eae6:	ja     0x40eae7
  40eae8:	mov    ecx,0xf9f09b13
  40eaed:	jl     0x40ead2
  40eaef:	sar    DWORD PTR [ebx-0x7d226f30],cl
  40eaf5:	mov    bl,0x83
  40eaf7:	pop    ss
  40eaf8:	loope  0x40eac8
  40eafa:	xor    dl,BYTE PTR [ecx-0x67786a6e]
  40eb00:	imul   ebx,DWORD PTR [edi+0x59],0xdc74b62e
  40eb07:	lahf   
  40eb08:	(bad)  
  40eb09:	aam    0x5d
  40eb0b:	ins    WORD PTR es:[edi],dx
  40eb0d:	xor    ecx,esp
  40eb0f:	jmp    0x1260:0x283fa18d
  40eb16:	into   
  40eb17:	fadd   DWORD PTR [eax+0x26]
  40eb1a:	or     DWORD PTR [esi],0x3d
  40eb1d:	pop    ecx
  40eb1e:	call   DWORD PTR [ebx-0x5e78907]
  40eb24:	push   ebx
  40eb25:	cs js  0x40eb0d
  40eb28:	stc    
  40eb29:	repz push 0xffffff83
  40eb2c:	xor    DWORD PTR [edi+0x2e5de8c],ebp
  40eb32:	sti    
  40eb33:	jge    0x40eb39
  40eb35:	leave  
  40eb36:	(bad)
  40eb39:	mov    edx,0x32b9e2c3
  40eb3e:	pusha  
  40eb3f:	xchg   BYTE PTR [edx+ebx*4],al
  40eb42:	and    eax,esp
  40eb44:	aaa    
  40eb45:	aaa    
  40eb46:	shr    BYTE PTR [esi-0x7e],0xb5
  40eb4a:	mov    ds:0x2fd518b,eax
  40eb4f:	aam    0x10
  40eb51:	xchg   BYTE PTR ss:0x274eb739,dl
  40eb58:	jbe    0x40eb53
  40eb5a:	call   DWORD PTR ds:0x1a5cdefc
  40eb60:	packssdw mm7,QWORD PTR [eax+0x7c009767]
  40eb67:	sti    
  40eb68:	retf   0x4cd5
  40eb6b:	out    0x3b,eax
  40eb6d:	add    al,0xc1
  40eb6f:	repz loopne 0x40eb5b
  40eb72:	cli    
  40eb73:	cwde   
  40eb74:	add    BYTE PTR [edx],dh
  40eb76:	adc    dh,BYTE PTR [edi-0x1]
  40eb79:	push   ebx
  40eb7a:	in     eax,dx
  40eb7b:	cmp    al,0xdf
  40eb7d:	test   dl,bl
  40eb7f:	sub    bh,cl
  40eb81:	frstor [ecx+0x3b21cc80]
  40eb87:	jnp    0x40ebee
  40eb89:	mov    dh,0x5c
  40eb8b:	bound  esi,QWORD PTR [edi]
  40eb8d:	cli    
  40eb8e:	gs or  ecx,esp
  40eb91:	inc    ebx
  40eb92:	shr    DWORD PTR [eax-0x28],0x58
  40eb96:	push   0xd8b8c0c
  40eb9b:	stos   BYTE PTR es:[edi],al
  40eb9c:	xchg   ebp,eax
  40eb9d:	sbb    edi,0xffffffc2
  40eba0:	(bad)  
  40eba1:	jnp    0x40ebf9
  40eba3:	push   ds
  40eba4:	jmp    0xaf5acffb
  40eba9:	sbb    al,0x6d
  40ebab:	leave  
  40ebac:	push   cs
  40ebad:	pop    ebp
  40ebae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebaf:	lds    ecx,FWORD PTR [ebx]
  40ebb1:	outs   dx,BYTE PTR ds:[esi]
  40ebb2:	sbb    dh,bl
  40ebb4:	int3   
  40ebb5:	lds    ecx,FWORD PTR [ecx]
  40ebb7:	adc    al,0x85
  40ebb9:	outs   dx,DWORD PTR ds:[esi]
  40ebba:	push   0x795a76f
  40ebbf:	outs   dx,BYTE PTR ds:[esi]
  40ebc0:	and    dh,0xc1
  40ebc3:	dec    esi
  40ebc5:	xchg   ebx,eax
  40ebc6:	out    0x8b,eax
  40ebc8:	jg     0x40eb64
  40ebca:	add    eax,0x77beff1c
  40ebcf:	and    eax,0x40c431fd
  40ebd4:	stos   DWORD PTR es:[edi],eax
  40ebd5:	fs loope 0x40eb99
  40ebd8:	add    eax,0x6d748d70
  40ebdd:	xchg   ebx,eax
  40ebde:	retf   0xf287
  40ebe1:	in     eax,0x5
  40ebe3:	scas   al,BYTE PTR es:[edi]
  40ebe4:	and    al,0x31
  40ebe6:	pop    ebx
  40ebe7:	mov    dh,0x62
  40ebe9:	lahf   
  40ebea:	mov    ds:0x1a98be4a,al
  40ebef:	inc    esi
  40ebf0:	adc    eax,0xe5faf435
  40ebf5:	xchg   esp,eax
  40ebf6:	leave  
  40ebf7:	test   DWORD PTR [ebp+0x69],ebx
  40ebfa:	mov    bl,0xc2
  40ebfc:	popa   
  40ebfd:	xchg   ebx,eax
  40ebfe:	adc    esi,DWORD PTR [edx+0x3c]
  40ec01:	arpl   WORD PTR [ebx-0x1],bx
  40ec04:	jnp    0x40ebe4
  40ec06:	fild   QWORD PTR [esi-0x60]
  40ec0a:	stos   BYTE PTR es:[edi],al
  40ec0b:	push   edi
  40ec0c:	mov    al,0x96
  40ec0e:	add    ecx,edi
  40ec10:	in     al,dx
  40ec11:	test   BYTE PTR [esp+ebp*4],ch
  40ec14:	add    BYTE PTR [ecx-0x44],0x23
  40ec18:	sub    eax,0xb6024d22
  40ec1d:	aam    0x85
  40ec1f:	cld    
  40ec20:	cmc    
  40ec21:	mov    al,ds:0x107cc5
  40ec26:	inc    esp
  40ec27:	inc    ebx
  40ec28:	clc    
  40ec29:	pop    ebx
  40ec2a:	xor    BYTE PTR [edx+0x33fe48d1],ah
  40ec30:	mov    al,bl
  40ec32:	scas   eax,DWORD PTR es:[edi]
  40ec33:	sub    BYTE PTR [esp+edi*2+0x6b],bl
  40ec37:	stc    
  40ec38:	popa   
  40ec39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec3a:	aam    0x74
  40ec3c:	mov    bl,BYTE PTR ds:[ebx-0xe3088a6]
  40ec43:	jmp    0xa57e:0xcc1a2326
  40ec4a:	pop    ds
  40ec4b:	loopne 0x40ec58
  40ec4d:	push   ebp
  40ec4e:	pop    esp
  40ec4f:	jmp    0x303b:0x540658a2
  40ec56:	adc    bl,BYTE PTR fs:[edx-0x54]
  40ec5a:	ret    
  40ec5b:	mov    BYTE PTR [edi+ebx*8+0x7b],al
  40ec5f:	into   
  40ec60:	cwde   
  40ec61:	or     al,0x8
  40ec63:	xor    BYTE PTR [ebx],0x5b
  40ec66:	xor    dl,BYTE PTR [esi+0x3f]
  40ec69:	push   ebp
  40ec6a:	jl     0x40ec04
  40ec6c:	pop    es
  40ec6d:	std    
  40ec6e:	cmc    
  40ec6f:	and    esi,esi
  40ec71:	jae    0x40ec3f
  40ec73:	mov    esi,0x4ecb17ce
  40ec78:	repnz cli 
  40ec7a:	pop    ebx
  40ec7b:	adc    al,0x1
  40ec7d:	jmp    0xa60af481
  40ec82:	pop    esi
  40ec83:	fist   DWORD PTR [eax]
  40ec85:	mov    eax,0x4315eeb2
  40ec8a:	(bad)  
  40ec8b:	repz js 0x40eceb
  40ec8e:	out    0x8,al
  40ec90:	dec    esp
  40ec91:	pop    ss
  40ec92:	mov    dl,0xb7
  40ec94:	push   cs
  40ec95:	adc    eax,0x9b8dcf5c
  40ec9a:	dec    edx
  40ec9b:	jae    0x40ed02
  40ec9d:	ja     0x40ec37
  40ec9f:	jae    0x40ecc7
  40eca1:	and    eax,0xf6cd02d3
  40eca6:	int3   
  40eca7:	sbb    esp,DWORD PTR [eax-0x7a9d85a6]
  40ecad:	fnstsw WORD PTR [edx+0x4b6e751a]
  40ecb3:	fisubr WORD PTR [eax+0x76dfd376]
  40ecb9:	pop    ss
  40ecba:	add    al,0xeb
  40ecbc:	dec    esi
  40ecbd:	mov    es,WORD PTR [edx]
  40ecbf:	jo     0x40ecbe
  40ecc1:	stc    
  40ecc2:	mov    esi,cr4
  40ecc5:	or     eax,0x546d8423
  40ecca:	imul   esi,ebx,0x52ee7f4f
  40ecd0:	ret    
  40ecd1:	leave  
  40ecd2:	mov    bl,bl
  40ecd4:	xchg   ebp,eax
  40ecd5:	and    al,0x6
  40ecd7:	or     bl,dh
  40ecd9:	sbb    al,0xe4
  40ecdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecdc:	mov    dl,0xa8
  40ecde:	dec    eax
  40ecdf:	in     al,dx
  40ece0:	nop
  40ece1:	jb     0x40ec6e
  40ece3:	xchg   esp,eax
  40ece4:	cmp    al,BYTE PTR [esi+esi*8-0x294748cf]
  40eceb:	jmp    0x40ec80
  40eced:	cmp    DWORD PTR [edi],edx
  40ecef:	es push ecx
  40ecf1:	mov    edi,0xea4e389e
  40ecf6:	ret    
  40ecf7:	cmp    BYTE PTR [edi+0x61a35872],ah
  40ecfd:	enter  0x1f13,0x90
  40ed01:	add    BYTE PTR [eax],dl
  40ed03:	pop    ebx
  40ed04:	xchg   esp,eax
  40ed05:	fcomp  st(4)
  40ed07:	das    
  40ed08:	adc    eax,DWORD PTR [edi]
  40ed0a:	pop    esp
  40ed0b:	sub    ebp,DWORD PTR [edx+0x38e7add]
  40ed11:	add    dl,BYTE PTR [esi+0x30]
  40ed14:	scas   eax,DWORD PTR es:[edi]
  40ed15:	sub    al,0xd3
  40ed17:	repz fidiv WORD PTR [edi+ecx*2+0xb]
  40ed1c:	fwait
  40ed1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed1e:	gs jb  0x40ecbc
  40ed21:	cmp    DWORD PTR [edi-0x6e631a74],ebp
  40ed27:	jnp    0x40ed93
  40ed29:	inc    ecx
  40ed2a:	cmp    bl,BYTE PTR [esi]
  40ed2c:	out    dx,eax
  40ed2d:	push   esi
  40ed2e:	or     BYTE PTR [esi+0x2a],bh
  40ed31:	div    BYTE PTR [ebx]
  40ed33:	fstp   DWORD PTR [ebp+0x6ac6af4]
  40ed39:	sub    al,0xbc
  40ed3b:	aaa    
  40ed3c:	dec    esp
  40ed3d:	mov    eax,0x9acfa52b
  40ed42:	out    0x67,al
  40ed44:	dec    BYTE PTR [ebx-0x33e88a81]
  40ed4a:	das    
  40ed4b:	stos   DWORD PTR es:[edi],eax
  40ed4c:	ja     0x40ed9d
  40ed4e:	cmp    edi,edx
  40ed50:	sub    al,0x9e
  40ed52:	jae    0x40ed9d
  40ed54:	shr    esi,1
  40ed56:	inc    edi
  40ed57:	(bad)  
  40ed58:	xor    ecx,edi
  40ed5a:	sbb    al,0x80
  40ed5c:	ja     0x40ed64
  40ed5e:	out    0xde,al
  40ed60:	je     0x40ed02
  40ed62:	sub    BYTE PTR [ebx+0x56d434ab],bh
  40ed68:	dec    esi
  40ed69:	xchg   edi,eax
  40ed6a:	cmp    eax,DWORD PTR [edi]
  40ed6c:	or     eax,0x7760e7aa
  40ed71:	cmp    al,0xda
  40ed73:	(bad)  
  40ed74:	fistp  WORD PTR [esi-0x17]
  40ed77:	or     DWORD PTR [ebp-0x57],ebp
  40ed7a:	pop    ebp
  40ed7b:	pop    ss
  40ed7c:	je     0x40edb7
  40ed7e:	mov    bh,0x4a
  40ed80:	jo     0x40ed54
  40ed82:	adc    eax,0x463a17f9
  40ed87:	and    bl,dh
  40ed89:	jno    0x40edc2
  40ed8b:	sbb    al,0x22
  40ed8d:	pop    ss
  40ed8e:	mov    ecx,0x569c776c
  40ed93:	cmp    DWORD PTR [esi-0x75618e36],ecx
  40ed99:	jl     0x40ede9
  40ed9b:	(bad)  
  40ed9c:	repnz xor dh,dl
  40ed9f:	js     0x40edc4
  40eda1:	scas   eax,DWORD PTR es:[edi]
  40eda2:	xor    bh,BYTE PTR [ebx]
  40eda4:	shl    BYTE PTR ds:[eax+0x5bbc82f7],0xd1
  40edac:	in     eax,0xe3
  40edae:	jo     0x40edc5
  40edb0:	jl     0x40eda3
  40edb2:	mov    ch,0x57
  40edb4:	mov    eax,0x648b92fb
  40edb9:	cmp    BYTE PTR [ecx-0x56],ah
  40edbc:	jge    0x40ee0c
  40edbe:	mov    ch,0x2b
  40edc0:	mov    eax,ds:0x247a20b6
  40edc5:	inc    esp
  40edc6:	dec    ecx
  40edc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edc8:	jo     0x40edf4
  40edca:	addr16 fwait
  40edcc:	scas   al,BYTE PTR es:[edi]
  40edcd:	test   BYTE PTR [edx+0x7c31d747],al
  40edd3:	mov    eax,ds:0xc282eb6c
  40edd8:	in     al,0x72
  40edda:	cli    
  40eddb:	adc    BYTE PTR [ebx-0x64],ah
  40edde:	in     al,dx
  40eddf:	retf   0x7668
  40ede2:	mov    al,ss:0x6e7ef2f2
  40ede8:	add    DWORD PTR [ebx],esp
  40edea:	jg     0x40ed7b
  40edec:	hlt    
  40eded:	pop    ss
  40edee:	lea    ebp,[ebp+0x3d]
  40edf1:	pop    edi
  40edf2:	(bad)  
  40edf4:	imul   edx,ebx,0x44
  40edf7:	jae    0x40ee6f
  40edf9:	imul   edx,ebp,0xffffff94
  40edfc:	or     al,0xbf
  40edfe:	mov    WORD PTR [ebx],?
  40ee00:	and    BYTE PTR [ecx+0x44],0xc9
  40ee04:	add    BYTE PTR [ebx],ah
  40ee06:	jmp    0x59cf:0x1462b2bf
  40ee0d:	and    eax,ebp
  40ee0f:	(bad)  
  40ee10:	jbe    0x40edf1
  40ee12:	ds mov ebp,0x3719048e
  40ee18:	inc    eax
  40ee19:	fst    QWORD PTR ds:0xf7d95ce9
  40ee1f:	mov    ch,0xa4
  40ee21:	aaa    
  40ee22:	mov    bl,0xc6
  40ee24:	stc    
  40ee25:	xor    DWORD PTR [esi+0x6c2114dd],edx
  40ee2b:	scas   eax,DWORD PTR es:[edi]
  40ee2c:	push   es
  40ee2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee2e:	mov    eax,ds:0x7f8bbae6
  40ee33:	pop    ebx
  40ee34:	jbe    0x40ee1a
  40ee36:	retf   0xdabc
  40ee39:	xor    al,BYTE PTR [ebx+0x30]
  40ee3c:	xor    al,BYTE PTR [edi+0x7dc1fa2c]
  40ee42:	push   0xb
  40ee44:	mov    BYTE PTR [ebx-0x370fce75],dh
  40ee4a:	adc    ebx,DWORD PTR [eax+0x65f132b3]
  40ee50:	jnp    0x40ede7
  40ee52:	mov    esi,0xe6f6a8e6
  40ee57:	push   cs
  40ee58:	push   eax
  40ee59:	cmp    ebx,DWORD PTR [esi]
  40ee5b:	cmp    ah,BYTE PTR [esi+0x56]
  40ee5e:	push   0xffffffca
  40ee60:	div    ebp
  40ee62:	pusha  
  40ee63:	retf   
  40ee64:	push   cs
  40ee65:	daa    
  40ee66:	xor    al,0x55
  40ee68:	iret   
  40ee69:	jmp    0x40ee2b
  40ee6b:	jle    0x40eec6
  40ee6d:	sub    al,0x4f
  40ee6f:	mov    DWORD PTR [edi],0x42d98888
  40ee75:	xlat   BYTE PTR ds:[ebx]
  40ee76:	das    
  40ee77:	push   ebp
  40ee78:	pop    ax
  40ee7a:	sub    eax,0x4a17d7cd
  40ee7f:	ret    0xdc55
  40ee82:	mov    ch,0xef
  40ee84:	mov    bh,0x14
  40ee86:	jge    0x40ef03
  40ee88:	xor    cl,BYTE PTR [ebp+0x59a28184]
  40ee8e:	adc    bh,0xa
  40ee91:	sub    al,0x34
  40ee93:	mov    al,ds:0x5f0a0d6d
  40ee98:	pusha  
  40ee99:	hlt    
  40ee9a:	mov    ds:0x5f66fa3b,al
  40ee9f:	dec    ebp
  40eea0:	adc    bl,BYTE PTR [esi-0x2]
  40eea3:	mov    WORD PTR [esi+0x5],gs
  40eea6:	mov    DWORD PTR [edx+edx*1-0x46],esp
  40eeaa:	xor    ecx,DWORD PTR [eax-0xce983b9]
  40eeb0:	in     eax,dx
  40eeb1:	js     0x40ee87
  40eeb3:	dec    ebx
  40eeb4:	lock stc 
  40eeb6:	push   ebx
  40eeb7:	pop    eax
  40eeb8:	xor    DWORD PTR [ebx-0xf9af9ba],esp
  40eebe:	(bad)  
  40eebf:	imul   esp,ebp,0x18
  40eec2:	adc    bl,ch
  40eec4:	jmp    0x4265:0x98338101
  40eecb:	pop    edi
  40eecc:	js     0x40eecc
  40eece:	lds    eax,FWORD PTR [ebp+0x570d8fd5]
  40eed4:	dec    BYTE PTR [eax]
  40eed6:	mov    ds:0x9482a62d,al
  40eedb:	ret    
  40eedc:	push   0x30bb473d
  40eee1:	pop    ecx
  40eee2:	int    0xb3
  40eee4:	pop    ecx
  40eee5:	fnsave [ebp-0xa]
  40eee8:	ss aam 0xbf
  40eeeb:	lods   al,BYTE PTR ds:[esi]
  40eeec:	cdq    
  40eeed:	je     0x40ef63
  40eeef:	out    dx,al
  40eef0:	inc    esp
  40eef1:	cmp    esi,ebp
  40eef3:	dec    ebx
  40eef4:	inc    ecx
  40eef5:	xchg   DWORD PTR [eax-0x38],ecx
  40eef8:	inc    ecx
  40eef9:	cmp    BYTE PTR [ecx-0x26],0x64
  40eefd:	pop    edi
  40eefe:	out    dx,eax
  40eeff:	scas   eax,DWORD PTR es:[edi]
  40ef00:	pushw  ds
  40ef02:	into   
  40ef03:	pushf  
  40ef04:	int    0x33
  40ef06:	or     dh,BYTE PTR [eax-0xa]
  40ef09:	(bad)  
  40ef0a:	mov    ?,WORD PTR [edi]
  40ef0c:	sbb    ah,0x71
  40ef0f:	mov    bh,0x73
  40ef11:	into   
  40ef12:	adc    BYTE PTR [eax+0x39],cl
  40ef15:	or     DWORD PTR [edx],ebx
  40ef17:	mov    esp,0x8941756
  40ef1c:	jbe    0x40eec9
  40ef1e:	jmp    0xc604:0xb3594ab2
  40ef25:	mov    eax,0x9fa0f301
  40ef2a:	jle    0x40eeb2
  40ef2c:	mov    ch,0x8a
  40ef2e:	clc    
  40ef2f:	cmp    DWORD PTR [edi],ebp
  40ef31:	xor    eax,0xd450fc72
  40ef36:	mov    ds:0x9f6f0586,al
  40ef3b:	repz push edx
  40ef3d:	sub    eax,DWORD PTR [esi]
  40ef3f:	cli    
  40ef40:	ins    DWORD PTR es:[edi],dx
  40ef41:	(bad)  
  40ef42:	push   edx
  40ef43:	fadd   DWORD PTR [ebp-0x3d]
  40ef46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef47:	pop    esp
  40ef48:	retf   0xe700
  40ef4b:	fwait
  40ef4c:	dec    ebx
  40ef4d:	dec    esp
  40ef4e:	mov    ds:0xeec00bee,al
  40ef53:	and    al,0x4f
  40ef55:	cdq    
  40ef56:	je     0x40ef27
  40ef58:	(bad)  
  40ef59:	push   cs
  40ef5a:	repz mov ah,0x2a
  40ef5d:	pop    edi
  40ef5e:	adc    ecx,0x4c
  40ef61:	push   esi
  40ef62:	inc    eax
  40ef63:	or     edx,DWORD PTR [ecx]
  40ef65:	xor    eax,DWORD PTR [edi+0x6c]
  40ef68:	mov    esp,0x90007b20
  40ef6d:	mov    cl,0x47
  40ef6f:	or     esi,DWORD PTR [ebx]
  40ef71:	popf   
  40ef72:	std    
  40ef73:	enter  0x1339,0x9c
  40ef77:	cld    
  40ef78:	repnz iret 
  40ef7a:	lds    ecx,FWORD PTR [edx]
  40ef7c:	shr    DWORD PTR [eax-0x366e865],cl
  40ef82:	mov    al,ds:0x520c8719
  40ef87:	stc    
  40ef88:	js     0x40ef26
  40ef8a:	test   BYTE PTR [ebx-0x7d0c5a04],cl
  40ef90:	sbb    eax,0xcd79618a
  40ef95:	lea    ecx,[edi+0x66a1adb3]
  40ef9b:	imul   esi,DWORD PTR [ecx-0x2bf9c9c7],0xffffffd4
  40efa2:	push   cs
  40efa3:	sti    
  40efa4:	loop   0x40ef88
  40efa6:	outs   dx,DWORD PTR ds:[esi]
  40efa7:	mov    ds:0x7bac6e47,eax
  40efac:	loope  0x40ef2e
  40efae:	(bad)  
  40efb0:	out    dx,al
  40efb1:	bound  esi,QWORD PTR [edx]
  40efb3:	or     BYTE PTR [eax+esi*1],0x92
  40efb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efb8:	push   0xffffffad
  40efba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efbb:	xlat   BYTE PTR ds:[ebx]
  40efbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efbd:	mov    al,ds:0x894ac88d
  40efc2:	or     BYTE PTR ds:0xacfdb343,cl
  40efc8:	test   eax,0x61799fa4
  40efcd:	icebp  
  40efce:	inc    ebx
  40efcf:	xchg   ecx,eax
  40efd0:	pop    DWORD PTR [ebp-0x2d]
  40efd3:	pop    edx
  40efd4:	rol    BYTE PTR [ecx],cl
  40efd6:	and    al,0x43
  40efd8:	and    al,0x49
  40efda:	mov    ecx,0x1b346dd0
  40efdf:	add    al,0x87
  40efe1:	dec    esp
  40efe2:	int    0x87
  40efe4:	fld    QWORD PTR ds:0x770d81a0
  40efea:	popf   
  40efeb:	jp     0x40f048
  40efed:	in     eax,dx
  40efee:	pop    ss
  40efef:	imul   ebp,ebp,0x4852be1a
  40eff5:	pop    ss
  40eff6:	adc    al,0xbc
  40eff8:	sbb    BYTE PTR [ebx+0xf],dh
  40effb:	sub    eax,0x7fd1eb93
  40f000:	lock cmp ch,BYTE PTR [esi+ebp*4-0x4242a3b6]
  40f008:	cdq    
  40f009:	aaa    
  40f00a:	div    BYTE PTR [esi]
  40f00c:	inc    esi
  40f00d:	fwait
  40f00e:	jmp    0x80d1dfb5
  40f013:	dec    ebp
  40f014:	rep stos DWORD PTR es:[edi],eax
  40f016:	pop    edx
  40f017:	or     DWORD PTR [ebx+ebx*4+0xfdb4540],ebp
  40f01e:	ja     0x40f035
  40f020:	dec    ecx
  40f021:	(bad)  
  40f022:	jp     0x40f08f
  40f024:	mov    esi,DWORD PTR ds:0x7ec6ad9b
  40f02a:	or     dl,bl
  40f02c:	in     al,0x29
  40f02e:	fbld   TBYTE PTR [esi+0x3a]
  40f031:	jmp    0x40f02b
  40f033:	and    DWORD PTR [ebp+0x7b],edx
  40f036:	fcmovnu st,st(2)
  40f038:	mov    ah,0x76
  40f03a:	inc    eax
  40f03b:	jecxz  0x40f093
  40f03d:	sbb    ebp,eax
  40f03f:	xchg   cl,ah
  40f041:	fild   QWORD PTR [edx+0x38]
  40f044:	add    ebp,eax
  40f046:	dec    ecx
  40f047:	mov    edi,0xe35bd23
  40f04c:	lahf   
  40f04d:	jno    0x40f02c
  40f04f:	cmp    edi,ebx
  40f051:	je     0x40f066
  40f053:	push   eax
  40f054:	pop    ds
  40f055:	or     al,BYTE PTR [edx+0x62]
  40f058:	test   al,0x41
  40f05a:	push   0xffffffbb
  40f05c:	addr16 lahf 
  40f05e:	or     al,0xd4
  40f060:	jnp    0x40f0bc
  40f062:	call   0x2ce36b70
  40f067:	int3   
  40f068:	pop    esp
  40f069:	out    dx,al
  40f06a:	xchg   ebp,eax
  40f06b:	arpl   bx,dx
  40f06d:	xchg   edi,eax
  40f06e:	daa    
  40f06f:	add    BYTE PTR [edx+0x7e],0xc2
  40f073:	and    eax,0x890545c8
  40f078:	jb     0x40f054
  40f07a:	arpl   WORD PTR [ebp+0x3b],dx
  40f07d:	pop    es
  40f07e:	test   BYTE PTR [edx-0x32],bh
  40f081:	popa   
  40f082:	mov    edi,0x1343e432
  40f087:	test   al,0x3d
  40f089:	mov    cl,0xcb
  40f08b:	push   edi
  40f08c:	iret   
  40f08d:	dec    edx
  40f08e:	in     al,dx
  40f08f:	popf   
  40f090:	mov    bh,0xe4
  40f092:	stc    
  40f093:	xlat   BYTE PTR ds:[ebx]
  40f094:	test   BYTE PTR [ecx],dl
  40f096:	scas   al,BYTE PTR es:[edi]
  40f097:	(bad)  
  40f098:	ja     0x40f10d
  40f09a:	ss cmp edi,esi
  40f09d:	lds    ecx,FWORD PTR [ebx-0x42]
  40f0a0:	pop    ds
  40f0a1:	adc    cl,ah
  40f0a3:	add    al,0xc1
  40f0a5:	jge    0x40f04a
  40f0a7:	fwait
  40f0a8:	popf   
  40f0a9:	xor    esp,ecx
  40f0ab:	adc    DWORD PTR [ebx],esp
  40f0ad:	xor    DWORD PTR [edi],esp
  40f0af:	out    dx,al
  40f0b0:	add    al,0xc4
  40f0b3:	sti    
  40f0b4:	and    esi,DWORD PTR [esi-0x1cfc6ca4]
  40f0ba:	add    al,0x63
  40f0bc:	pop    ecx
  40f0bd:	adc    DWORD PTR [ebx],edi
  40f0bf:	mov    ah,0xb3
  40f0c1:	add    bl,BYTE PTR [edx+0x48dad8e]
  40f0c7:	add    DWORD PTR [esi],ebp
  40f0c9:	aas    
  40f0ca:	cmp    BYTE PTR [edx-0x22],0x37
  40f0ce:	jle    0x40f123
  40f0d0:	pop    ss
  40f0d1:	xor    cl,BYTE PTR [esi+0x453de3d3]
  40f0d7:	pop    ebp
  40f0d8:	jno    0x40f0b2
  40f0da:	into   
  40f0db:	xchg   edx,eax
  40f0dc:	sub    BYTE PTR [ecx],ah
  40f0de:	dec    esp
  40f0df:	idiv   DWORD PTR [ebp+0x474af3f6]
  40f0e5:	pushf  
  40f0e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0e7:	dec    edi
  40f0e8:	inc    ebx
  40f0e9:	sti    
  40f0ea:	inc    eax
  40f0eb:	sbb    BYTE PTR ds:0x237fc9af,dl
  40f0f1:	pushf  
  40f0f2:	push   ss
  40f0f3:	cdq    
  40f0f4:	dec    eax
  40f0f5:	ret    0xde2
  40f0f8:	dec    esp
  40f0f9:	inc    ebx
  40f0fa:	mov    dh,0x9c
  40f0fc:	test   al,0x7e
  40f0fe:	std    
  40f0ff:	jae    0x40f10d
  40f101:	std    
  40f102:	lods   al,BYTE PTR ds:[esi]
  40f103:	shl    DWORD PTR [eax+0xb5f5660],0x29
  40f10a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f10b:	xor    eax,0x33a3e26d
  40f110:	aas    
  40f111:	loop   0x40f0ac
  40f113:	cli    
  40f114:	add    edi,DWORD PTR [edi]
  40f116:	in     al,dx
  40f117:	or     ch,BYTE PTR [edx]
  40f119:	add    dl,BYTE PTR [ecx+0x25199229]
  40f11f:	and    eax,0x9941a6b3
  40f124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f125:	fsub   QWORD PTR [esi-0x5b]
  40f128:	inc    DWORD PTR [edx+0x40]
  40f12b:	pop    ebx
  40f12c:	xchg   esi,eax
  40f12d:	xchg   edx,eax
  40f12e:	jbe    0x40f0d9
  40f130:	mov    al,0x16
  40f132:	(bad)  
  40f133:	mov    ah,0x21
  40f135:	jge    0x40f0cc
  40f137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f138:	mov    eax,ds:0xfa797a17
  40f13d:	xor    al,0xd
  40f13f:	scas   eax,DWORD PTR es:[edi]
  40f140:	inc    edx
  40f141:	or     DWORD PTR [edx+0x7cdd6b63],ebx
  40f147:	cs mov cl,0xde
  40f14a:	sub    DWORD PTR [eax],ebp
  40f14c:	push   ebx
  40f14d:	inc    eax
  40f14e:	adc    BYTE PTR [esi-0x5bb2337a],0xb9
  40f155:	adc    dh,BYTE PTR [edi+0x2e40c680]
  40f15b:	icebp  
  40f15c:	int3   
  40f15d:	into   
  40f15e:	pop    ebx
  40f15f:	pop    ebp
  40f160:	inc    DWORD PTR [edi+0x3]
  40f163:	mov    WORD PTR [ebp-0x2d5f70ce],cs
  40f169:	cmp    al,0xc3
  40f16b:	imul   esp
  40f16d:	add    DWORD PTR [edi+0x6266fab7],edx
  40f173:	maxps  xmm6,XMMWORD PTR [edi+0x65]
  40f177:	jg     0x40f1b2
  40f179:	dec    esp
  40f17a:	retf   
  40f17b:	jge    0x40f19a
  40f17d:	ds add eax,0xdeeee918
  40f183:	rol    DWORD PTR [ebx+0x4d],cl
  40f186:	pop    es
  40f187:	loopne 0x40f1f2
  40f189:	rcr    BYTE PTR [ebp+0x9],0xb2
  40f18d:	push   edx
  40f18e:	push   ecx
  40f18f:	inc    ecx
  40f190:	xchg   edi,eax
  40f191:	mov    dl,0x1d
  40f193:	sbb    ebp,DWORD PTR [edi-0x62]
  40f196:	ret    0x8607
  40f199:	in     al,dx
  40f19a:	sub    DWORD PTR [edi],0x17
  40f19d:	push   edi
  40f19e:	lods   al,BYTE PTR ds:[esi]
  40f19f:	sub    ecx,edi
  40f1a1:	loope  0x40f1eb
  40f1a3:	pushf  
  40f1a4:	cmp    eax,0xc6dcb83e
  40f1a9:	lahf   
  40f1aa:	out    0x5a,al
  40f1ac:	push   ss
  40f1ad:	push   ebx
  40f1ae:	pop    ebp
  40f1af:	inc    eax
  40f1b0:	adc    BYTE PTR [esi],bh
  40f1b2:	mov    edi,0x345c15a4
  40f1b7:	aaa    
  40f1b8:	cs adc eax,0x44ce2f7c
  40f1be:	and    ecx,DWORD PTR [esp+eiz*8-0x5b7122c3]
  40f1c5:	jle    0x40f1ad
  40f1c7:	mov    ch,0xa7
  40f1c9:	push   ds
  40f1ca:	fst    QWORD PTR [edi-0x14]
  40f1cd:	addr16 fdivr st(3),st
  40f1d0:	add    al,0x8c
  40f1d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1d3:	jae    0x40f1c1
  40f1d5:	in     al,dx
  40f1d6:	add    bl,BYTE PTR [ecx-0x4f]
  40f1d9:	pop    ecx
  40f1da:	test   al,0x40
  40f1dc:	fwait
  40f1dd:	xor    bl,dh
  40f1df:	cmp    DWORD PTR [eax],esp
  40f1e1:	not    BYTE PTR [ebp-0x6e646bf3]
  40f1e7:	test   BYTE PTR [edx],0xd8
  40f1ea:	rcr    DWORD PTR [esi],1
  40f1ec:	cmp    eax,0xc950d128
  40f1f1:	sub    eax,0x8efce5f2
  40f1f6:	(bad)  
  40f1f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1f8:	jecxz  0x40f1a7
  40f1fa:	fidiv  DWORD PTR [ebp-0x22abff90]
  40f200:	lea    edx,[edi-0x3c77d688]
  40f206:	xchg   sp,ax
  40f208:	popa   
  40f209:	enter  0x5020,0xd
  40f20d:	sbb    BYTE PTR [ecx-0x3d],cl
  40f210:	int    0x33
  40f212:	or     eax,0xcedb10e3
  40f217:	out    0xe2,eax
  40f219:	aas    
  40f21a:	(bad)  
  40f21b:	std    
  40f21c:	mov    eax,0xd41fbe19
  40f221:	inc    ebp
  40f222:	aaa    
  40f223:	and    al,0x19
  40f225:	xchg   ebx,eax
  40f226:	and    ebx,edi
  40f228:	jmp    0x34eb7b7a
  40f22d:	popa   
  40f22e:	push   esi
  40f22f:	scas   al,BYTE PTR es:[edi]
  40f230:	jnp    0x40f200
  40f232:	mov    al,ds:0x8e722cee
  40f237:	ss jno 0x40f204
  40f23a:	mov    ebp,0x7ba45d55
  40f23f:	jp     0x40f23d
  40f241:	push   ebx
  40f242:	rcl    BYTE PTR [edi-0x66],1
  40f245:	jecxz  0x40f1e2
  40f247:	(bad)  
  40f248:	js     0x40f25c
  40f24a:	pop    eax
  40f24b:	jmp    0x40f25d
  40f24d:	jns    0x40f1db
  40f24f:	xchg   ebp,eax
  40f250:	or     BYTE PTR [esi+0x5e0b3f58],cl
  40f256:	xchg   edx,eax
  40f257:	push   esp
  40f258:	(bad)  
  40f259:	into   
  40f25a:	and    eax,0x4508cec6
  40f25f:	xor    eax,0xab8ee077
  40f264:	push   cs
  40f265:	or     esp,DWORD PTR [ebx+0x1c]
  40f268:	jns    0x40f2a2
  40f26a:	push   ebp
  40f26b:	mov    al,0xbf
  40f26d:	test   dl,ah
  40f26f:	jecxz  0x40f24a
  40f271:	in     al,0x89
  40f273:	jge    0x40f23b
  40f275:	(bad)  
  40f276:	cmp    DWORD PTR [edi],esi
  40f278:	and    bl,BYTE PTR [edi-0x4cd1f55b]
  40f27e:	push   cs
  40f27f:	pop    edx
  40f280:	sbb    al,0x22
  40f282:	repz cmc 
  40f284:	sbb    bh,BYTE PTR [eax]
  40f286:	xor    al,0x32
  40f288:	lock fwait
  40f28a:	push   0xfa831c2e
  40f28f:	dec    esi
  40f290:	or     BYTE PTR [edx],dl
  40f292:	pop    ecx
  40f293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f294:	mov    ds:0x2a4734e4,al
  40f299:	push   cs
  40f29a:	inc    ebp
  40f29b:	mov    cl,0x8b
  40f29d:	loopne 0x40f23f
  40f29f:	mov    esp,0x7993d6cc
  40f2a4:	pusha  
  40f2a5:	jmp    0x40f246
  40f2a7:	jnp    0x40f306
  40f2a9:	push   0x36
  40f2ab:	sbb    al,0x32
  40f2ad:	lods   al,BYTE PTR ds:[esi]
  40f2ae:	jnp    0x40f278
  40f2b0:	call   0xf481:0x2ee5330
  40f2b7:	in     eax,dx
  40f2b8:	retf   
  40f2b9:	sub    eax,0x8ef0ea45
  40f2be:	and    cl,BYTE PTR [eax]
  40f2c0:	rcl    DWORD PTR [eax+0x76],1
  40f2c3:	test   eax,0xe1aae82
  40f2c8:	pop    ss
  40f2c9:	xchg   ebx,eax
  40f2ca:	sub    al,0x9e
  40f2cc:	pusha  
  40f2cd:	mov    BYTE PTR [edx-0x43],0x74
  40f2d1:	mov    edx,0x83891e21
  40f2d6:	xor    esi,DWORD PTR [ebx-0x22]
  40f2d9:	leave  
  40f2da:	cmc    
  40f2db:	lahf   
  40f2dc:	idiv   DWORD PTR [bx+di-0x69ba]
  40f2e1:	bnd call 0x29f9a012
  40f2e7:	mov    bh,0xbb
  40f2e9:	lds    ebx,FWORD PTR ds:0xb65532af
  40f2ef:	fldenv [edx+0x1]
  40f2f2:	dec    ecx
  40f2f3:	mov    al,0x87
  40f2f5:	mov    ds:0x2a140f47,al
  40f2fa:	pop    ebx
  40f2fb:	fs std 
  40f2fd:	leave  
  40f2fe:	push   cs
  40f2ff:	push   edx
  40f300:	cwde   
  40f301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f302:	fisubr WORD PTR [ebx+0x51]
  40f305:	jns    0x40f2a7
  40f307:	fmulp  st(3),st
  40f309:	fstp   DWORD PTR [eax+eiz*2-0x57]
  40f30d:	int    0x5c
  40f30f:	daa    
  40f310:	loopne 0x40f2f3
  40f312:	and    al,BYTE PTR [eax-0x51667dfd]
  40f318:	cmp    edi,DWORD PTR [esi]
  40f31a:	dec    ebx
  40f31b:	sub    eax,esp
  40f31d:	mov    ds:0x10561889,eax
  40f322:	mov    ch,0x3d
  40f324:	loopne 0x40f2c2
  40f326:	aad    0xc2
  40f328:	push   eax
  40f329:	sbb    ax,0x36a0
  40f32d:	cli    
  40f32e:	iret   
  40f32f:	popf   
  40f330:	lods   eax,DWORD PTR ds:[esi]
  40f331:	pusha  
  40f332:	xchg   edi,eax
  40f333:	jg     0x40f314
  40f335:	and    BYTE PTR ds:0x3cbca69a,0xfb
  40f33c:	xchg   ecx,eax
  40f33d:	mov    eax,ds:0x95c05eb0
  40f342:	lea    esp,[edi-0x48857b66]
  40f348:	call   0x978bb03c
  40f34d:	inc    eax
  40f34e:	pop    esp
  40f34f:	loop   0x40f2f8
  40f351:	push   edx
  40f352:	je     0x40f2de
  40f354:	(bad)  
  40f355:	sbb    bl,BYTE PTR [esp+ebx*1-0xe]
  40f359:	and    bl,0x4e
  40f35c:	in     al,dx
  40f35d:	test   DWORD PTR [eax-0x61],esp
  40f360:	jg     0x40f395
  40f362:	jle    0x40f35f
  40f364:	pop    eax
  40f365:	cmp    al,0xd1
  40f367:	push   0xe275ba3c
  40f36c:	sub    BYTE PTR [edx+0x6fbefb8b],cl
  40f372:	push   ebp
  40f373:	pop    eax
  40f374:	sub    eax,0xf2e24c55
  40f379:	pop    esi
  40f37a:	retf   0xee7c
  40f37d:	xor    esi,esp
  40f37f:	test   DWORD PTR [ebx-0x7604cce6],ecx
  40f385:	cmp    cl,BYTE PTR [ebx-0x2fccf7ab]
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0x431380c6,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	dec    ebp
  40f484:	dec    ebx
  40f485:	mov    dl,0x85
  40f487:	dec    esp
  40f488:	push   ebp
  40f489:	jmp    FWORD PTR [esi]
  40f48b:	inc    eax
  40f48c:	dec    edx
  40f48d:	inc    ebp
  40f48e:	mov    al,0x42
  40f490:	dec    eax
  40f491:	aaa    
  40f492:	bound  esi,QWORD PTR [edx]
  40f494:	sahf   
  40f495:	rcr    DWORD PTR [eax],cl
  40f497:	pop    edi
  40f498:	mov    dl,0x88
  40f49a:	pop    es
  40f49b:	(bad)  [ecx+eax*2+0x7b]
  40f49f:	dec    edi
  40f4a0:	and    esi,DWORD PTR [eax]
  40f4a2:	jbe    0x40f4f9
  40f4a4:	js     0x40f50d
  40f4a6:	sbb    dl,BYTE PTR [eax]
  40f4a8:	xchg   ebx,eax
  40f4a9:	shr    ebx,0xcf
  40f4ac:	lods   al,BYTE PTR ds:[esi]
  40f4ad:	dec    ebx
  40f4ae:	xor    al,0xcc
  40f4b0:	add    al,0xe8
  40f4b2:	mov    esi,0x85c1ad63
  40f4b7:	mov    ecx,0x2b3d0880
  40f4bc:	addr16 push ebp
  40f4be:	jp     0x40f527
  40f4c0:	xor    al,0x7
  40f4c2:	fstp   QWORD PTR [ebp-0x69d2c8ea]
  40f4c8:	aad    0xbe
  40f4ca:	and    ecx,eax
  40f4cc:	lahf   
  40f4cd:	(bad)  
  40f4ce:	sbb    DWORD PTR [eax-0x64a3a134],esi
  40f4d4:	mov    bl,ah
  40f4d6:	xchg   BYTE PTR [ebp-0x4003a93],dl
  40f4dc:	(bad)  [esi-0x29e8b475]
  40f4e2:	pop    ss
  40f4e3:	jmp    0x9f11:0x1d11c9f4
  40f4ea:	lods   eax,DWORD PTR ds:[esi]
  40f4eb:	dec    ebx
  40f4ec:	repz mov esi,0x53ae1901
  40f4f2:	add    ebx,DWORD PTR [ecx-0x6d148733]
  40f4f8:	arpl   WORD PTR fs:[eax-0x1b4e15ef],si
  40f4ff:	mov    ch,0xf9
  40f501:	pop    ecx
  40f502:	add    BYTE PTR [edi+0xd388a2f],ch
  40f508:	in     al,dx
  40f509:	shl    DWORD PTR [eax-0x6f7083ae],cl
  40f50f:	pushf  
  40f510:	iret   
  40f511:	inc    ebx
  40f512:	jae    0x40f570
  40f514:	xor    dh,BYTE PTR [ebx]
  40f516:	mov    al,0xf5
  40f518:	shr    dh,0x15
  40f51b:	inc    ebx
  40f51c:	mov    dh,0x32
  40f51e:	or     al,0x2a
  40f520:	je     0x40f514
  40f522:	add    ecx,edi
  40f524:	retf   0x2bc2
  40f527:	mov    edx,0xa40b0123
  40f52c:	pop    ebp
  40f52d:	cli    
  40f52e:	xor    esi,DWORD PTR [eax]
  40f530:	pop    ds
  40f531:	popa   
  40f532:	popf   
  40f533:	jo     0x40f4c2
  40f535:	or     BYTE PTR [edx+0x1dbe6d56],bh
  40f53b:	pop    esi
  40f53c:	mov    edi,0xf5c2200b
  40f541:	xor    esi,DWORD PTR [esp+ebx*2+0x68]
  40f545:	neg    BYTE PTR [ebp-0x54d8b295]
  40f54b:	int3   
  40f54c:	fistp  QWORD PTR [ecx+0x5bfe67b6]
  40f552:	mov    ds:0x3286f9f1,al
  40f557:	mov    eax,ds:0xfb73d41c
  40f55c:	std    
  40f55d:	(bad)  
  40f55e:	jne    0x40f4ef
  40f560:	icebp  
  40f561:	push   ecx
  40f562:	or     BYTE PTR [ecx],ch
  40f564:	adc    DWORD PTR [ecx-0x18a4ff3b],edx
  40f56a:	out    dx,eax
  40f56b:	mov    dl,0x35
  40f56d:	sub    DWORD PTR [ebx+0x36],0x5e
  40f571:	test   DWORD PTR [ecx-0x57],edi
  40f574:	mov    al,0xd0
  40f576:	sbb    dh,BYTE PTR [edi]
  40f578:	push   ebp
  40f579:	mov    ds:0xe017d03f,al
  40f57e:	xor    DWORD PTR [di],edi
  40f581:	mov    eax,ds:0x1bf5479f
  40f586:	sub    al,0xd2
  40f588:	inc    edi
  40f589:	ret    
  40f58a:	imul   eax,DWORD PTR [edx],0xd0d0e5c5
  40f590:	xchg   ebx,eax
  40f591:	shr    DWORD PTR [eax+0x94c9ae7],cl
  40f597:	leave  
  40f598:	cwde   
  40f599:	mov    eax,ds:0x7a8c12be
  40f59e:	push   ebx
  40f59f:	push   es
  40f5a0:	inc    BYTE PTR [eax-0x4a]
  40f5a3:	mov    WORD PTR ds:0x8bba4ec9,ss
  40f5a9:	push   eax
  40f5aa:	and    eax,edx
  40f5ac:	xor    BYTE PTR [edi-0x3a],cl
  40f5af:	push   ebp
  40f5b0:	dec    ecx
  40f5b1:	mov    cl,0xd9
  40f5b3:	adc    eax,esp
  40f5b5:	mov    BYTE PTR [eax-0x2b],dh
  40f5b8:	jmp    0x40f639
  40f5ba:	dec    edi
  40f5bb:	mov    ebp,DWORD PTR [edi]
  40f5bd:	xchg   esi,eax
  40f5be:	xchg   ebx,eax
  40f5bf:	inc    edi
  40f5c0:	iret   
  40f5c1:	push   eax
  40f5c2:	push   0xffffffa4
  40f5c4:	inc    esi
  40f5c5:	xor    al,0xc1
  40f5c8:	push   cs
  40f5c9:	mov    eax,0x4e06cd9c
  40f5ce:	push   cs
  40f5cf:	mov    bh,0xf9
  40f5d1:	xor    DWORD PTR [ecx+0x63922a19],esi
  40f5d7:	std    
  40f5d8:	sub    al,0x40
  40f5da:	mov    BYTE PTR [esi+0x13af5844],ch
  40f5e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5e1:	call   0xd9e24dda
  40f5e6:	or     ebx,0x448cfc33
  40f5ec:	or     DWORD PTR [esi],esi
  40f5ee:	sbb    eax,0xe9d180cb
  40f5f3:	xchg   esp,eax
  40f5f4:	daa    
  40f5f5:	pusha  
  40f5f6:	(bad)  
  40f5f7:	cs push ecx
  40f5f9:	imul   ecx,DWORD PTR [edx],0x3bc957cb
  40f5ff:	scas   al,BYTE PTR es:[edi]
  40f600:	enter  0x62c4,0x8
  40f604:	nop
  40f605:	xor    BYTE PTR [edx],0xdb
  40f608:	xchg   ebx,eax
  40f609:	(bad)  
  40f60a:	ins    WORD PTR es:[edi],dx
  40f60c:	mov    ds:0x927abe2f,al
  40f611:	push   es
  40f612:	fs push esi
  40f614:	int    0x66
  40f616:	dec    edx
  40f617:	int3   
  40f618:	in     al,0xd2
  40f61a:	sbb    BYTE PTR [edx-0x39d39e43],bl
  40f620:	xchg   edx,eax
  40f621:	add    ch,dh
  40f623:	pop    ss
  40f624:	adc    dl,bl
  40f626:	call   ebp
  40f628:	shl    BYTE PTR [eax+eax*4],1
  40f62b:	mov    al,ds:0x80a13638
  40f630:	jns    0x40f687
  40f632:	and    ah,BYTE PTR ds:0xad53aa7b
  40f638:	leave  
  40f639:	xor    DWORD PTR [edx+0x4f],edi
  40f63c:	add    esi,DWORD PTR [eax]
  40f63e:	lea    ebp,[edi]
  40f640:	ins    BYTE PTR es:[edi],dx
  40f641:	ficom  DWORD PTR [edx+ebx*1]
  40f644:	xor    DWORD PTR [esi],eax
  40f646:	jecxz  0x40f621
  40f648:	scas   eax,DWORD PTR es:[edi]
  40f649:	pop    edx
  40f64a:	sar    BYTE PTR [eax],1
  40f64c:	inc    al
  40f64e:	mov    eax,?
  40f650:	xor    al,0xc8
  40f652:	add    edx,DWORD PTR ds:0xca1c9966
  40f658:	jmp    0xa35a01d7
  40f65d:	sub    ebx,edx
  40f65f:	dec    ebx
  40f660:	jne    0x40f6b0
  40f662:	push   esp
  40f663:	loope  0x40f672
  40f665:	mov    ds:0xd3880ee9,al
  40f66a:	pop    ebx
  40f66b:	jge    0x40f5fa
  40f66d:	aam    0xd2
  40f66f:	inc    esi
  40f670:	test   eax,0xfc4ea083
  40f675:	iret   
  40f676:	retf   0x5b8e
  40f679:	sbb    al,0xa4
  40f67b:	xchg   esi,eax
  40f67c:	sub    ah,bh
  40f67e:	mov    ds:0xf4472a2d,al
  40f683:	sub    ecx,DWORD PTR [ebp-0x1e]
  40f686:	(bad)  
  40f687:	in     eax,dx
  40f688:	gs lock ffreep st(1)
  40f68c:	dec    edi
  40f68d:	iret   
  40f68e:	add    ebp,DWORD PTR [ebx-0xafd0725]
  40f694:	xchg   ebp,eax
  40f695:	add    ch,bl
  40f697:	ret    0xbb6e
  40f69a:	jno    0x40f688
  40f69c:	ret    
  40f69d:	callw  0x2db6
  40f6a1:	xor    BYTE PTR fs:[esp+ebx*1],ah
  40f6a5:	cs inc edx
  40f6a7:	je     0x40f6e1
  40f6a9:	and    BYTE PTR [edx+edx*8-0x21],dh
  40f6ad:	popa   
  40f6ae:	out    dx,eax
  40f6af:	mov    edi,0xce7c65d6
  40f6b4:	jmp    0x40f66d
  40f6b6:	push   edx
  40f6b7:	(bad)  
  40f6b9:	ds xchg ecx,eax
  40f6bb:	jne    0x40f653
  40f6bd:	sub    eax,0x3c0a3536
  40f6c2:	shl    DWORD PTR [ecx],cl
  40f6c4:	int3   
  40f6c5:	mov    esi,cs
  40f6c7:	adc    DWORD PTR [edi+0x6febd6ab],ebp
  40f6cd:	cmp    dl,BYTE PTR [edx-0x2b]
  40f6d0:	sti    
  40f6d1:	mul    BYTE PTR [eax]
  40f6d3:	out    dx,al
  40f6d4:	fbstp  TBYTE PTR [eax+0x4d]
  40f6d7:	ins    DWORD PTR es:[edi],dx
  40f6d8:	mov    eax,ds:0x576a6a31
  40f6dd:	push   ebx
  40f6de:	pusha  
  40f6df:	scas   eax,DWORD PTR es:[edi]
  40f6e0:	cmp    bh,BYTE PTR [edx-0x6d]
  40f6e3:	inc    eax
  40f6e4:	or     ecx,edx
  40f6e6:	mov    ds:0x98e8d627,eax
  40f6eb:	cmp    BYTE PTR [ecx+0x80b9eb5],cl
  40f6f1:	push   ebp
  40f6f2:	dec    ebx
  40f6f3:	retf   
  40f6f4:	out    0xc9,al
  40f6f6:	jl     0x40f693
  40f6f8:	aam    0x6a
  40f6fa:	ins    DWORD PTR es:[edi],dx
  40f6fb:	out    dx,al
  40f6fc:	cli    
  40f6fd:	mov    eax,DWORD PTR ds:0xee472672
  40f703:	xor    BYTE PTR [ebp-0x7a],dl
  40f706:	xchg   edx,eax
  40f707:	add    al,0x6c
  40f709:	sub    al,0x89
  40f70b:	inc    esi
  40f70c:	ret    0xfdb5
  40f70f:	inc    eax
  40f710:	into   
  40f711:	fs popf 
  40f713:	dec    eax
  40f714:	fmul   DWORD PTR [eax+0x2a478fe4]
  40f71a:	jmp    0x10a4282c
  40f71f:	xor    eax,0x11c76ef0
  40f724:	or     BYTE PTR [edx+0x52f62392],ch
  40f72a:	dec    eax
  40f72b:	xchg   al,ch
  40f72d:	ins    BYTE PTR es:[edi],dx
  40f72e:	xor    BYTE PTR [ecx],dh
  40f730:	sbb    bl,BYTE PTR [ebp-0x428a4cb3]
  40f736:	add    eax,0x5fcc3f8d
  40f73b:	cmp    esi,edx
  40f73d:	(bad)  
  40f73f:	test   al,0x29
  40f741:	lods   eax,DWORD PTR ds:[esi]
  40f742:	xlat   BYTE PTR ds:[ebx]
  40f743:	mov    al,ds:0x5c9da04
  40f748:	sar    BYTE PTR [esi-0xd2cffb],0xe3
  40f74f:	inc    esp
  40f750:	cmp    esi,edi
  40f752:	jmp    DWORD PTR [esi+0x759c73bd]
  40f758:	mov    dl,BYTE PTR [eax+0x40]
  40f75b:	dec    eax
  40f75c:	pavgb  mm6,QWORD PTR [edx-0x21d0677]
  40f763:	push   ebx
  40f764:	rcr    dh,0x94
  40f767:	or     eax,0x4fad17d4
  40f76c:	scas   eax,DWORD PTR es:[edi]
  40f76d:	call   0x2031a3b3
  40f772:	dec    esi
  40f773:	frstor [ecx+0x1d]
  40f776:	arpl   WORD PTR [eax+0x13],ax
  40f779:	jbe    0x40f763
  40f77b:	popf   
  40f77c:	lods   al,BYTE PTR es:[esi]
  40f77e:	test   al,0x2e
  40f780:	push   esi
  40f781:	aas    
  40f782:	sbb    ebx,DWORD PTR [edx]
  40f784:	stos   BYTE PTR es:[edi],al
  40f785:	push   cs
  40f786:	cmp    eax,DWORD PTR [eax-0x6]
  40f789:	loop   0x40f758
  40f78b:	fld    DWORD PTR [edx+0x52]
  40f78e:	scas   eax,DWORD PTR es:[edi]
  40f78f:	aaa    
  40f790:	out    0xc3,eax
  40f792:	mov    ah,0x4d
  40f794:	xor    BYTE PTR [edx],ch
  40f796:	ins    DWORD PTR es:[edi],dx
  40f797:	fidiv  DWORD PTR [esi]
  40f799:	jmp    0xf8e:0xfedbc7b1
  40f7a0:	and    bh,bh
  40f7a2:	xchg   edi,eax
  40f7a3:	scas   al,BYTE PTR es:[edi]
  40f7a4:	gs add ecx,edi
  40f7a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7a8:	sbb    edx,DWORD PTR [edx-0x61900891]
  40f7ae:	stc    
  40f7af:	add    al,0x85
  40f7b1:	mov    esp,ds
  40f7b3:	(bad)  
  40f7b4:	loope  0x40f803
  40f7b6:	gs pop es
  40f7b8:	push   0xc6f60f89
  40f7bd:	mov    bh,0x47
  40f7bf:	js     0x40f763
  40f7c1:	dec    esp
  40f7c2:	ret    0x8786
  40f7c5:	(bad)  
  40f7c6:	cmp    DWORD PTR fs:[esi+ecx*4-0x3fa5c4ab],0xffffff94
  40f7cf:	xor    edx,DWORD PTR [edi+0x38]
  40f7d2:	inc    esp
  40f7d3:	push   es
  40f7d4:	shr    DWORD PTR [esp+edx*4],0xc9
  40f7d8:	mov    edi,0x8783502
  40f7dd:	and    eax,0x4fa4962f
  40f7e2:	mov    al,0x2c
  40f7e4:	and    ch,BYTE PTR [ebx+0x37d1e719]
  40f7ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7eb:	leave  
  40f7ec:	xchg   edi,eax
  40f7ed:	push   ds
  40f7ee:	and    DWORD PTR [ebx],ecx
  40f7f0:	ja     0x40f839
  40f7f2:	js     0x40f847
  40f7f4:	fcmovnb st,st(7)
  40f7f6:	sbb    DWORD PTR [ecx*1-0x6412d393],edx
  40f7fd:	cmc    
  40f7fe:	in     al,dx
  40f7ff:	push   ebp
  40f800:	xor    ebp,DWORD PTR [ebx+0x32d0c4e2]
  40f806:	jmp    0x894ac331
  40f80b:	ret    0x7e90
  40f80e:	mov    cl,0x61
  40f810:	shl    eax,1
  40f812:	push   ss
  40f813:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40f815:	push   eax
  40f816:	mov    ch,0xd
  40f818:	pop    edx
  40f819:	mov    eax,ds:0xcd2a2a32
  40f81e:	popa   
  40f81f:	pop    edi
  40f820:	lods   eax,DWORD PTR ds:[esi]
  40f821:	xchg   DWORD PTR [ecx],eax
  40f823:	cmp    edx,DWORD PTR [ecx]
  40f825:	sub    esi,ebx
  40f827:	(bad)  [ecx-0x483461a0]
  40f82d:	inc    esp
  40f82e:	ret    
  40f82f:	and    dh,BYTE PTR [ebx]
  40f831:	adc    dl,BYTE PTR [esi-0x2948c1db]
  40f837:	out    0x48,al
  40f839:	cmp    esp,DWORD PTR [ecx-0x30]
  40f83c:	push   ebx
  40f83d:	je     0x40f874
  40f83f:	inc    ecx
  40f840:	and    edx,edx
  40f842:	cmc    
  40f843:	jmp    0x40f7df
  40f845:	xchg   ecx,eax
  40f846:	cmp    al,0x35
  40f848:	cwde   
  40f849:	mov    ds:0x5d3ad4ec,al
  40f84e:	nop
  40f84f:	sbb    eax,0x9b5aa749
  40f854:	ds sub dl,ah
  40f857:	(bad)  
  40f858:	jbe    0x40f809
  40f85a:	enter  0xf2fc,0xe3
  40f85e:	inc    esp
  40f85f:	shl    bh,1
  40f861:	push   ebx
  40f862:	pop    ecx
  40f863:	dec    esi
  40f864:	mov    eax,ds:0x160ad118
  40f869:	mov    es,WORD PTR [eax+0x7d]
  40f86c:	sahf   
  40f86d:	sbb    edx,esi
  40f86f:	test   al,0x7a
  40f871:	std    
  40f872:	dec    ebp
  40f873:	jae    0x40f878
  40f875:	sbb    edi,ecx
  40f877:	ss jmp 0xc652:0x599d8e5c
  40f87f:	mov    bh,dh
  40f881:	(bad)  
  40f882:	adc    ecx,DWORD PTR [ebx+0x4c28a9ce]
  40f888:	mov    dl,0xb1
  40f88a:	xchg   ecx,eax
  40f88b:	fiadd  WORD PTR [esi-0xa4a7d31]
  40f891:	lock pop edx
  40f893:	adc    eax,0xd693ce47
  40f898:	pop    ebp
  40f899:	mov    ch,0x19
  40f89b:	add    al,0x9c
  40f89d:	pop    ecx
  40f89e:	mov    esi,0x12379cf6
  40f8a3:	outs   dx,BYTE PTR ds:[esi]
  40f8a4:	pop    esp
  40f8a5:	ds sub al,0xe
  40f8a8:	ins    DWORD PTR es:[edi],dx
  40f8a9:	jne    0x40f886
  40f8ab:	retf   
  40f8ac:	mov    dl,0xf8
  40f8ae:	repz jne 0x40f8e3
  40f8b1:	mov    ecx,0x7d3eb614
  40f8b6:	inc    ebx
  40f8b7:	aaa    
  40f8b8:	inc    ebx
  40f8b9:	cmp    ebx,0xffffffbf
  40f8bc:	int    0x48
  40f8be:	out    0xaa,eax
  40f8c0:	mov    edx,0x67e92dbb
  40f8c5:	mov    cl,0xd3
  40f8c7:	repz sbb ecx,DWORD PTR [di]
  40f8cb:	call   0xa5:0xe49dce6b
  40f8d2:	or     BYTE PTR [edx],cl
  40f8d4:	cmp    ebp,DWORD PTR [ebp-0x1ee79440]
  40f8da:	ins    BYTE PTR es:[edi],dx
  40f8db:	lahf   
  40f8dc:	popa   
  40f8dd:	xchg   edx,eax
  40f8de:	lods   al,BYTE PTR ds:[esi]
  40f8df:	retf   0xc36e
  40f8e2:	jl     0x40f902
  40f8e4:	push   edx
  40f8e5:	or     al,0xff
  40f8e7:	(bad)  
  40f8e8:	outs   dx,BYTE PTR ds:[esi]
  40f8e9:	pop    eax
  40f8ea:	and    al,0x9f
  40f8ec:	push   0xffffffbb
  40f8ee:	aas    
  40f8ef:	adc    DWORD PTR [edx-0x591c1d6d],ecx
  40f8f5:	ret    0x58b5
  40f8f8:	xchg   ebx,eax
  40f8f9:	mov    eax,ebx
  40f8fb:	push   es
  40f8fc:	fisub  DWORD PTR [edx-0x1cab3c0e]
  40f902:	mov    ds:0x1a181e7f,eax
  40f907:	mov    WORD PTR [eax+0x3e],ds
  40f90a:	fnsave ds:0xe5f80afb
  40f910:	mov    bl,ah
  40f912:	bound  ecx,QWORD PTR [ebx+0x2bf0f70d]
  40f918:	cmp    DWORD PTR ds:0xe916cfcc,esp
  40f91e:	sbb    ebx,DWORD PTR [esi-0x6d93fbbb]
  40f924:	call   0x8031068b
  40f929:	xchg   ebp,eax
  40f92a:	mov    ch,0xf6
  40f92c:	je     0x40f90e
  40f92e:	ficomp WORD PTR [eax-0x7b]
  40f931:	fwait
  40f932:	dec    edi
  40f933:	outs   dx,BYTE PTR ds:[esi]
  40f934:	iret   
  40f935:	in     eax,0x90
  40f937:	jmp    0x40f985
  40f939:	push   eax
  40f93a:	into   
  40f93b:	sub    eax,0x958a7628
  40f940:	sbb    eax,0x53b52915
  40f945:	sar    BYTE PTR [ebx+0x8ea9c09],1
  40f94b:	xchg   ebx,eax
  40f94c:	xor    DWORD PTR fs:[ebp-0x2d],0xfb515483
  40f954:	and    cl,BYTE PTR [edi+0x546db066]
  40f95a:	scas   al,BYTE PTR es:[edi]
  40f95b:	mov    edx,0xa0ef1780
  40f960:	jl     0x40f963
  40f962:	enter  0xc910,0x0
  40f966:	fadd   DWORD PTR [edi]
  40f968:	mov    bl,BYTE PTR [ecx]
  40f96a:	pop    ebp
  40f96b:	ror    DWORD PTR [edx+0x7501725d],cl
  40f971:	ja     0x40f9b5
  40f973:	lds    ebp,FWORD PTR [ecx]
  40f975:	fidiv  DWORD PTR [edx+0x7]
  40f978:	push   edx
  40f979:	dec    esi
  40f97a:	xor    BYTE PTR [ebx+ebp*8+0x2c],ch
  40f97e:	sub    edx,DWORD PTR [esi+0x4bcb4326]
  40f984:	(bad)  [ebx-0x271ed986]
  40f98a:	or     eax,0xa433870f
  40f98f:	mov    ecx,0xc050a5c
  40f994:	test   esp,esp
  40f996:	arpl   WORD PTR [ebx],bp
  40f998:	(bad)  
  40f999:	ficomp WORD PTR [ebp+0x5ebb27f]
  40f99f:	push   0xfb797ec6
  40f9a4:	imul   ebx,DWORD PTR [ecx-0x1f],0xffffffe7
  40f9a8:	or     ecx,ebx
  40f9aa:	sub    ch,0x8d
  40f9ad:	jnp    0x40f9fa
  40f9af:	mov    ebx,DWORD PTR [edi+0x5e]
  40f9b2:	(bad)  
  40f9b3:	cmp    bl,al
  40f9b5:	repz and ecx,edx
  40f9b8:	jnp    0x40f953
  40f9ba:	sub    eax,ebp
  40f9bc:	sbb    edx,edx
  40f9be:	test   DWORD PTR [edx+eiz*1-0x16],edx
  40f9c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9c3:	push   esp
  40f9c4:	or     eax,0xbf7f66b6
  40f9c9:	fidivr WORD PTR [esi]
  40f9cb:	pop    ds
  40f9cc:	scas   eax,DWORD PTR es:[edi]
  40f9cd:	add    esi,DWORD PTR [edi]
  40f9cf:	enter  0x2ecc,0xa
  40f9d3:	mov    ds:0x1f0668cf,eax
  40f9d8:	push   edx
  40f9d9:	rcl    BYTE PTR [ecx],cl
  40f9db:	les    ecx,FWORD PTR [ecx+0x3d8ee238]
  40f9e1:	lods   eax,DWORD PTR ds:[esi]
  40f9e2:	add    BYTE PTR [ecx],ah
  40f9e4:	pop    esi
  40f9e5:	arpl   WORD PTR [esi-0x36737ceb],sp
  40f9eb:	push   0xffffffaa
  40f9ed:	sub    BYTE PTR [edi-0x5d],cl
  40f9f0:	call   DWORD PTR [esi-0x17]
  40f9f3:	stos   DWORD PTR es:[edi],eax
  40f9f4:	loope  0x40fa0d
  40f9f6:	inc    edi
  40f9f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9f8:	(bad)  
  40f9f9:	xor    BYTE PTR [edx-0x3cf8af8a],ah
  40f9ff:	cmp    ebp,DWORD PTR [eax-0x65]
  40fa02:	cmp    eax,0x172d8221
  40fa07:	fmul   QWORD PTR [esi]
  40fa09:	rol    DWORD PTR [ebx-0xf],0x49
  40fa0d:	xchg   ebp,eax
  40fa0e:	rcl    BYTE PTR [edi-0x19],1
  40fa11:	(bad)  
  40fa13:	mov    bl,BYTE PTR [eax-0xaab049b]
  40fa19:	and    ebp,DWORD PTR [ebp+0x41]
  40fa1c:	mov    esp,DWORD PTR [esi]
  40fa1e:	aam    0x87
  40fa20:	xor    ch,BYTE PTR [ecx+0x69]
  40fa23:	jnp    0x40fa1a
  40fa25:	push   0x1b
  40fa27:	das    
  40fa28:	mov    eax,0x6821a953
  40fa2d:	or     DWORD PTR [ebp+ebp*1-0x511069a3],ecx
  40fa34:	mov    esi,edi
  40fa36:	mov    bl,0x48
  40fa38:	fldenv [ebp+0x1c]
  40fa3b:	pop    ds
  40fa3c:	subps  xmm3,XMMWORD PTR [ebp+edx*2-0x69e261dc]
  40fa44:	cmp    BYTE PTR [ebp+ecx*4-0x61],bh
  40fa48:	(bad)  
  40fa49:	fldenv [ebx]
  40fa4b:	(bad)  [eax-0x5635a187]
  40fa51:	popf   
  40fa52:	adc    eax,DWORD PTR [ecx]
  40fa54:	shl    BYTE PTR [edx+0x50],1
  40fa57:	adc    al,0x87
  40fa59:	mov    bh,0xf8
  40fa5b:	adc    al,al
  40fa5d:	mov    ah,BYTE PTR [eax-0x2cefbea7]
  40fa63:	mov    edx,DWORD PTR [ecx-0x49]
  40fa66:	js     0x40faca
  40fa68:	sbb    ebp,ebp
  40fa6a:	or     cl,BYTE PTR [edx+0x24]
  40fa6d:	cs jns 0x40fa5c
  40fa70:	mov    DWORD PTR [edi-0x3b],edi
  40fa73:	ret    
  40fa74:	ins    DWORD PTR es:[edi],dx
  40fa75:	mov    DWORD PTR [edi-0x64],edx
  40fa78:	mov    dh,0xc7
  40fa7a:	loopne 0x40fab5
  40fa7c:	int3   
  40fa7d:	jmp    0x40fa93
  40fa7f:	call   0x2681:0xd1a9eef3
  40fa86:	ins    DWORD PTR es:[edi],dx
  40fa87:	mov    ch,0xe2
  40fa89:	xchg   ebp,eax
  40fa8a:	daa    
  40fa8b:	out    dx,al
  40fa8c:	sub    DWORD PTR [edi-0x2dcf9fa4],esi
  40fa92:	ins    BYTE PTR es:[edi],dx
  40fa93:	pushf  
  40fa94:	adc    esp,DWORD PTR [edx]
  40fa96:	cmp    al,0xb9
  40fa98:	js     0x40fa3d
  40fa9a:	mov    ds:0x72d470d2,al
  40fa9f:	cli    
  40faa0:	test   eax,0xb13c2465
  40faa5:	data16 sahf 
  40faa7:	cwde   
  40faa8:	jle    0x40fa3d
  40faaa:	or     ecx,DWORD PTR [ebp+0x24]
  40faad:	mov    edi,0x4d0fc082
  40fab2:	lods   eax,DWORD PTR ds:[esi]
  40fab3:	test   al,0x7b
  40fab5:	xlat   BYTE PTR ds:[ebx]
  40fab6:	mov    al,ds:0xed506574
  40fabb:	fs mov esp,0x78967ced
  40fac1:	xchg   BYTE PTR [eax-0xc999ae1],bh
  40fac7:	jno    0x40fa88
  40fac9:	mov    dh,al
  40facb:	out    dx,al
  40facc:	enter  0xbccd,0x67
  40fad0:	std    
  40fad1:	cmp    al,0x9a
  40fad3:	cwde   
  40fad4:	fsubr  QWORD PTR [edx]
  40fad6:	dec    edi
  40fad7:	push   ds
  40fad8:	ret    0x1bb9
  40fadb:	push   es
  40fadc:	sar    DWORD PTR [eax+0x7692215c],cl
  40fae2:	pop    ebp
  40fae3:	(bad)  
  40fae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fae5:	mov    cs,WORD PTR [ecx+eax*8+0x6bacee68]
  40faec:	jge    0x40fa81
  40faee:	out    dx,eax
  40faef:	mov    esi,0xd23e5ba9
  40faf4:	cmp    DWORD PTR [edx],0x856e2310
  40fafa:	mov    ecx,0x64350f0b
  40faff:	sbb    ah,bh
  40fb01:	gs add al,0x7e
  40fb04:	jae    0x40faf9
  40fb06:	and    DWORD PTR [bp+di],ecx
  40fb09:	sub    esp,DWORD PTR [edx]
  40fb0b:	cs push ebp
  40fb0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb0e:	jmp    0xa98f:0xd928a15e
  40fb15:	mov    eax,ds:0x4d8f26d4
  40fb1a:	stos   DWORD PTR es:[edi],eax
  40fb1b:	add    eax,0x1a6b3362
  40fb20:	jp     0x40fb97
  40fb22:	test   al,0x6e
  40fb24:	gs (bad) 
  40fb26:	push   0xfffffff6
  40fb28:	xor    BYTE PTR [edi+0x4f],al
  40fb2b:	push   edx
  40fb2c:	dec    esp
  40fb2d:	sbb    al,0x23
  40fb2f:	sbb    BYTE PTR [ecx-0x500bd7f7],bl
  40fb35:	xchg   dh,ah
  40fb37:	addr16 xchg esp,eax
  40fb39:	sub    al,0xc3
  40fb3b:	xlat   BYTE PTR ds:[ebx]
  40fb3c:	pusha  
  40fb3d:	jbe    0x40fb2e
  40fb3f:	inc    ebp
  40fb40:	fdiv   DWORD PTR ds:0x5f7ee88
  40fb46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb47:	ss out 0xd1,al
  40fb4a:	shr    BYTE PTR [ecx+esi*1+0x36],cl
  40fb4e:	imul   DWORD PTR [ecx-0xc]
  40fb51:	push   edi
  40fb52:	arpl   WORD PTR [ebx-0x725ca9fc],bx
  40fb58:	dec    ecx
  40fb59:	ror    BYTE PTR [edx-0x43afdc8c],cl
  40fb5f:	adc    ah,BYTE PTR [ebp-0x44]
  40fb62:	rol    ah,1
  40fb64:	dec    esi
  40fb65:	push   0x60
  40fb67:	dec    edx
  40fb68:	lfs    ebx,FWORD PTR [ecx-0x7a0f334e]
  40fb6f:	ja     0x40fb7b
  40fb71:	jb     0x40fb0c
  40fb73:	mov    ds:0xd844805f,al
  40fb78:	pop    esi
  40fb79:	or     eax,0x969cfa4
  40fb7e:	aam    0x8e
  40fb80:	(bad)  
  40fb81:	adc    DWORD PTR [edi+ecx*1+0x19],ecx
  40fb85:	inc    ecx
  40fb86:	mov    ebx,0x5e8e146b
  40fb8b:	jle    0x40fc0a
  40fb8d:	xlat   BYTE PTR ds:[ebx]
  40fb8e:	xor    ah,BYTE PTR [eax+0x5d498d78]
  40fb94:	adc    edi,DWORD PTR [edi]
  40fb96:	int3   
  40fb97:	xor    al,0xd7
  40fb99:	push   es
  40fb9a:	cwde   
  40fb9b:	loop   0x40fc01
  40fb9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb9e:	imul   edi,DWORD PTR [edx-0x732a04d],0x1b52a4ed
  40fba8:	jg     0x40fbf4
  40fbaa:	mov    ds:0x5aa66a7c,eax
  40fbaf:	(bad)  
  40fbb0:	jb     0x40fbcd
  40fbb2:	mov    bl,0xb5
  40fbb4:	push   0xfffffffa
  40fbb6:	stc    
  40fbb7:	scas   eax,DWORD PTR es:[edi]
  40fbb8:	jno    0x40fb42
  40fbba:	fcomp  QWORD PTR ds:0xc0cf5835
  40fbc0:	call   0x8b76fe9e
  40fbc5:	pop    ebp
  40fbc6:	mov    esi,0xa02e8042
  40fbcb:	pop    edx
  40fbcc:	ret    
  40fbcd:	popf   
  40fbce:	and    eax,0x10395870
  40fbd3:	xlat   BYTE PTR es:[ebx]
  40fbd5:	call   0x9f88605b
  40fbda:	iret   
  40fbdb:	inc    dl
  40fbdd:	add    eax,0x23fbdae6
  40fbe2:	sahf   
  40fbe3:	aaa    
  40fbe4:	popa   
  40fbe5:	popf   
  40fbe6:	and    bh,ch
  40fbe8:	cwde   
  40fbe9:	xchg   ecx,eax
  40fbea:	and    bl,BYTE PTR [eiz*4+0xf52859e]
  40fbf1:	sbb    BYTE PTR [eax],bh
  40fbf3:	out    0x16,al
  40fbf5:	pop    ds
  40fbf6:	adc    bl,BYTE PTR [eax-0x3c38920b]
  40fbfc:	fadd   st(0),st
  40fbfe:	iret   
  40fbff:	fadd   DWORD PTR [esi-0x3f]
  40fc02:	inc    edi
  40fc03:	and    DWORD PTR [ebx+0x44],edi
  40fc06:	call   0xdcdc395c
  40fc0b:	push   esi
  40fc0c:	in     al,dx
  40fc0d:	mov    BYTE PTR [ebp-0x72cff6c4],0x6b
  40fc14:	nop
  40fc15:	sahf   
  40fc16:	or     ebx,DWORD PTR [ebx+0x1f058d54]
  40fc1c:	mov    ds:0xccc7e3e9,eax
  40fc21:	imul   ebp,DWORD PTR [ebx+0x65f7145c],0xb0acbdc2
  40fc2b:	and    BYTE PTR [eax-0x4bf2bc3d],dl
  40fc31:	dec    edi
  40fc32:	cmp    eax,0x422f76e1
  40fc37:	pop    ebp
  40fc38:	or     BYTE PTR [ebp+0x2d],0xda
  40fc3c:	cmp    DWORD PTR [ecx+0xf95e82a],ecx
  40fc42:	or     al,0x22
  40fc44:	and    BYTE PTR [ebp-0x6878119a],bh
  40fc4a:	xlat   BYTE PTR ds:[ebx]
  40fc4b:	jle    0x40fc6c
  40fc4d:	inc    ebx
  40fc4e:	sbb    DWORD PTR [edx+0x2b],esi
  40fc51:	int    0xf1
  40fc53:	mov    eax,ds:0xb56f5d89
  40fc58:	inc    eax
  40fc59:	or     al,0xab
  40fc5b:	inc    ebx
  40fc5c:	sbb    ecx,eax
  40fc5e:	mov    ch,0xdb
  40fc60:	ret    
  40fc61:	cmp    BYTE PTR [edx-0x2],ah
  40fc64:	or     ebp,esi
  40fc66:	inc    ebp
  40fc67:	cli    
  40fc68:	pop    es
  40fc69:	xchg   edi,eax
  40fc6a:	iret   
  40fc6b:	and    edi,DWORD PTR [ebx]
  40fc6d:	mov    esi,0x87d7eba7
  40fc72:	mov    DWORD PTR [edi+0x22c5c88],edi
  40fc78:	scas   al,BYTE PTR es:[edi]
  40fc79:	dec    esp
  40fc7a:	xor    DWORD PTR [ebp-0x54],edx
  40fc7d:	sbb    bh,BYTE PTR [ebp+0x3d]
  40fc80:	imul   edx,DWORD PTR [ebx],0xffffffa5
  40fc83:	hlt    
  40fc84:	push   ecx
  40fc85:	and    eax,ebx
  40fc87:	adc    ch,BYTE PTR [ebx+eax*8]
  40fc8a:	(bad)  
  40fc8b:	aas    
  40fc8c:	sbb    ebp,DWORD PTR [ebx+0x37]
  40fc8f:	inc    esi
  40fc90:	mov    BYTE PTR [esi+0x53a9883a],ch
  40fc96:	adc    al,0x82
  40fc98:	jecxz  0x40fcbd
  40fc9a:	or     eax,0x6b74d5aa
  40fc9f:	push   0x21242312
  40fca4:	sub    dl,BYTE PTR cs:[eax+0x2b]
  40fca8:	xchg   esi,eax
  40fca9:	out    dx,al
  40fcaa:	nop
  40fcab:	push   esp
  40fcac:	daa    
  40fcad:	pop    ebx
  40fcae:	pushf  
  40fcaf:	into   
  40fcb0:	push   0xefde538e
  40fcb5:	fld    TBYTE PTR ds:0x13673c28
  40fcbb:	xor    eax,0xec488a07
  40fcc0:	inc    esi
  40fcc1:	mov    BYTE PTR [edi+0x62],bl
  40fcc4:	sbb    eax,0x1d08ad9c
  40fcc9:	daa    
  40fcca:	and    eax,0xb583b3b0
  40fccf:	lods   eax,DWORD PTR ds:[esi]
  40fcd0:	ss in  al,dx
  40fcd2:	or     dh,BYTE PTR [edx]
  40fcd4:	fmul   QWORD PTR [edi-0x4317ce6e]
  40fcda:	(bad)  
  40fcdb:	mov    ebx,0x7288f52e
  40fce0:	int3   
  40fce1:	test   DWORD PTR [edi+0x16],ebx
  40fce4:	or     eax,0xbf847a15
  40fce9:	std    
  40fcea:	out    0xe3,al
  40fcec:	pop    edx
  40fced:	enter  0x7bf2,0x3d
  40fcf1:	or     eax,DWORD PTR [edx+0x5b]
  40fcf4:	retf   
  40fcf5:	inc    eax
  40fcf6:	fild   DWORD PTR [esi+esi*4]
  40fcf9:	pop    ebx
  40fcfa:	(bad)  
  40fcfb:	mov    ebp,0x903c6abf
  40fd00:	div    al
  40fd02:	jno    0x40fd34
  40fd04:	mov    eax,0x95acf868
  40fd09:	push   ecx
  40fd0a:	pop    edi
  40fd0b:	lods   al,BYTE PTR ds:[esi]
  40fd0c:	jbe    0x40fd68
  40fd0e:	xor    ebp,DWORD PTR [edi+esi*1+0x25db010e]
  40fd15:	das    
  40fd16:	jl     0x40fd4a
  40fd18:	pop    sp
  40fd1a:	adc    DWORD PTR [ebx-0x37],edx
  40fd1d:	jmp    0xc509:0x9d467fbb
  40fd24:	or     DWORD PTR [edx-0x495180e8],ebx
  40fd2a:	or     cl,dl
  40fd2c:	mov    eax,ds:0x464e665d
  40fd31:	in     al,0xc3
  40fd33:	mov    al,0x5f
  40fd35:	mov    eax,0xff3581e1
  40fd3a:	sar    ebp,1
  40fd3c:	xor    DWORD PTR [eax+edx*8-0x3d],esi
  40fd40:	retf   0xf1c1
  40fd43:	xchg   ebx,eax
  40fd44:	push   di
  40fd46:	push   ebp
  40fd47:	jp     0x40fd74
  40fd49:	(bad)  
  40fd4a:	outs   dx,BYTE PTR ds:[esi]
  40fd4b:	out    0x10,al
  40fd4d:	call   0x2acd:0x4045fc92
  40fd54:	mov    ch,0x84
  40fd56:	pop    ebx
  40fd57:	fwait
  40fd58:	std    
  40fd59:	cwde   
  40fd5a:	dec    esi
  40fd5b:	pmaddwd mm2,mm7
  40fd5e:	mov    al,0x26
  40fd60:	(bad)  
  40fd61:	push   0x4c
  40fd63:	ss inc ecx
  40fd65:	sub    al,bl
  40fd67:	and    DWORD PTR [eax+0x24d582bb],edx
  40fd6d:	xor    BYTE PTR [esi],al
  40fd6f:	pop    eax
  40fd70:	icebp  
  40fd71:	lds    ecx,FWORD PTR [esp+edx*2]
  40fd74:	mov    BYTE PTR [ecx+0x597f90a],dh
  40fd7a:	aaa    
  40fd7b:	retf   0xa55e
  40fd7e:	sbb    ebx,ebp
  40fd80:	loope  0x40fd81
  40fd82:	jp     0x40fdcd
  40fd84:	cld    
  40fd85:	pusha  
  40fd86:	inc    esp
  40fd87:	lea    edi,[ecx]
  40fd89:	cmp    DWORD PTR [eax+0x42f28df0],ebx
  40fd8f:	ror    DWORD PTR [eax-0x2204e9a4],1
  40fd95:	sub    DWORD PTR [edi-0x25e31702],ecx
  40fd9b:	dec    esi
  40fd9c:	cli    
  40fd9d:	xchg   ebp,eax
  40fd9e:	repnz inc ecx
  40fda0:	jl     0x40fd9a
  40fda2:	adc    ch,BYTE PTR [ebp+0x1c]
  40fda5:	stos   BYTE PTR es:[edi],al
  40fda6:	push   ss
  40fda7:	rcl    BYTE PTR [ebp+0x78],cl
  40fdaa:	test   al,0xc
  40fdac:	mov    ah,0xfa
  40fdae:	jcxz   0x40fd65
  40fdb1:	sub    ah,bh
  40fdb3:	inc    ecx
  40fdb4:	cmp    ebx,DWORD PTR [esp+esi*8]
  40fdb7:	inc    ebx
  40fdb8:	aas    
  40fdb9:	push   edi
  40fdba:	nop
  40fdbb:	(bad)  
  40fdbc:	push   eax
  40fdbd:	xchg   DWORD PTR [ecx+0x78],esi
  40fdc0:	push   ebx
  40fdc1:	lock sub al,0x65
  40fdc4:	jle    0x40fe3a
  40fdc6:	add    al,BYTE PTR [esi+ebp*2-0x5]
  40fdca:	sub    dl,ch
  40fdcc:	mov    DWORD PTR [ebp-0x7cc4312b],esp
  40fdd2:	sbb    al,0x84
  40fdd4:	ss pop ss
  40fdd6:	sub    eax,0x503fb280
  40fddb:	sbb    eax,0xc8cea023
  40fde0:	sbb    DWORD PTR [esi-0x4f57e81c],ecx
  40fde6:	cdq    
  40fde7:	sub    dh,BYTE PTR [ecx]
  40fde9:	into   
  40fdea:	or     dl,BYTE PTR [edx]
  40fdec:	mov    al,ds:0x4ee89b5c
  40fdf1:	dec    edi
  40fdf2:	rcr    bh,1
  40fdf4:	jno    0x40fe42
  40fdf6:	inc    esp
  40fdf7:	xor    BYTE PTR [edx],0x87
  40fdfa:	fwait
  40fdfb:	xor    al,0x4f
  40fdfd:	imul   esi,DWORD PTR [eax+0x1dd90348],0x12
  40fe04:	and    al,0xb4
  40fe06:	cld    
  40fe07:	in     eax,0xba
  40fe09:	pusha  
  40fe0a:	int3   
  40fe0b:	sub    BYTE PTR [edi+0x34],bl
  40fe0e:	push   0x25
  40fe10:	mov    al,ds:0xb3f44058
  40fe15:	ins    DWORD PTR es:[edi],dx
  40fe16:	mov    esi,0xb222fe72
  40fe1b:	aam    0x2
  40fe1d:	jmp    0x85a1:0x64c9c55c
  40fe24:	int3   
  40fe25:	add    al,0x71
  40fe27:	mov    eax,ds:0x332e112b
  40fe2c:	add    DWORD PTR [ebx+0x6f],0xa1d7c6b0
  40fe33:	cmp    eax,ebx
  40fe35:	pop    ds
  40fe36:	xor    ebp,DWORD PTR [esp+eiz*8+0x6]
  40fe3a:	push   esi
  40fe3b:	fcomp  DWORD PTR [ebp+0x58d34291]
  40fe41:	imul   ebp,DWORD PTR [edi+eax*1+0x55e5bff8],0x7fefeaba
  40fe4c:	dec    esp
  40fe4d:	lods   eax,DWORD PTR ds:[esi]
  40fe4e:	sbb    ch,BYTE PTR [ebx-0x66]
  40fe51:	pop    edx
  40fe52:	adc    eax,0xdfac169a
  40fe57:	add    BYTE PTR [eax+0x69],0xa4
  40fe5b:	xor    DWORD PTR [ecx],esi
  40fe5d:	dec    ebp
  40fe5e:	not    BYTE PTR ss:[esi+esi*1+0x7378b739]
  40fe66:	adc    DWORD PTR [edi+0x12],eax
  40fe69:	sub    BYTE PTR [ecx+0x2c],bh
  40fe6c:	hlt    
  40fe6d:	xchg   bl,cl
  40fe6f:	cmp    eax,0x327c11a3
  40fe74:	mov    al,ds:0xd1725db
  40fe79:	sbb    dl,bl
  40fe7b:	jno    0x40fef0
  40fe7d:	aad    0xd6
  40fe7f:	stc    
  40fe80:	nop
  40fe81:	test   al,0x6c
  40fe83:	ffree  st(5)
  40fe85:	xchg   esi,eax
  40fe86:	jle    0x40fea2
  40fe88:	clc    
  40fe89:	lods   eax,DWORD PTR ds:[esi]
  40fe8a:	xor    ax,0xadf9
  40fe8e:	xor    al,0xe7
  40fe90:	daa    
  40fe91:	jno    0x40fe43
  40fe93:	cli    
  40fe94:	add    al,0xc6
  40fe96:	xor    BYTE PTR [edi],bl
  40fe98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe99:	sbb    al,0x9
  40fe9b:	ds pop ebp
  40fe9d:	(bad)  
  40fe9f:	rcr    BYTE PTR [ebx-0x330fc29c],cl
  40fea5:	pop    ds
  40fea6:	das    
  40fea7:	gs loopne 0x40fef4
  40feaa:	fld    DWORD PTR [esi-0x14]
  40fead:	out    0xef,eax
  40feaf:	jmp    0x40fe8e
  40feb1:	imul   ecx,esi,0x221a237d
  40feb7:	icebp  
  40feb8:	sbb    DWORD PTR [esi],eax
  40feba:	and    al,0x6b
  40febc:	sub    eax,0x16c751fe
  40fec1:	loopne 0x40fed0
  40fec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fec4:	fs or  ebx,eax
  40fec7:	mov    ds:0x21d5a52f,eax
  40fecc:	shr    dl,cl
  40fece:	iret   
  40fecf:	cdq    
  40fed0:	mov    BYTE PTR [ebx-0x49f27a08],bl
  40fed6:	pop    ds
  40fed7:	ja     0x40fed0
  40fed9:	loope  0x40ff2f
  40fedb:	and    al,0xbc
  40fedd:	loope  0x40fe99
  40fedf:	dec    eax
  40fee0:	aad    0x16
  40fee2:	push   0x5e
  40fee4:	loop   0x40fed6
  40fee6:	arpl   ax,ax
  40fee8:	xchg   ebp,eax
  40fee9:	div    DWORD PTR [eax]
  40feeb:	ret    
  40feec:	js     0x40ff0c
  40feee:	in     eax,0x3
  40fef0:	mov    DWORD PTR [ecx],ecx
  40fef2:	leave  
  40fef3:	ins    DWORD PTR es:[edi],dx
  40fef4:	push   0x6b7798e7
  40fef9:	pushw  es
  40fefb:	xor    BYTE PTR [edx+0x50c9522e],ah
  40ff01:	xlat   BYTE PTR ds:[ebx]
  40ff02:	int    0x71
  40ff04:	iret   
  40ff05:	ret    
  40ff06:	add    DWORD PTR [eax+0x16],esp
  40ff09:	cld    
  40ff0a:	sbb    ebp,DWORD PTR [edi+0x7cf125ca]
  40ff10:	sbb    eax,0x85d6ecbc
  40ff15:	mov    eax,ds:0x8bae1367
  40ff1a:	(bad)  
  40ff1b:	imul   edi,esp,0xbccddd02
  40ff21:	test   eax,0x24bdc9c
  40ff26:	inc    edx
  40ff27:	lock aad 0xbb
  40ff2a:	and    DWORD PTR [edx+0x68428828],ebx
  40ff30:	mov    eax,ds:0xc5ad147f
  40ff35:	pop    ecx
  40ff36:	sar    DWORD PTR [edi],0x66
  40ff39:	mov    edx,esp
  40ff3b:	mov    DWORD PTR ds:0x26fedb9c,ebp
  40ff41:	jae    0x40ff43
  40ff43:	pusha  
  40ff44:	jmp    0x40fefa
  40ff46:	neg    dh
  40ff48:	leave  
  40ff49:	fadd   DWORD PTR [edx+edx*8-0x720a8465]
  40ff50:	ret    
  40ff51:	outs   dx,DWORD PTR ds:[esi]
  40ff52:	and    DWORD PTR [esi+esi*1+0xcdac41d],ebp
  40ff59:	daa    
  40ff5a:	pusha  
  40ff5b:	imul   esp,ebp,0x50
  40ff5e:	mov    bl,0xb9
  40ff60:	iret   
  40ff61:	jg     0x40ff91
  40ff63:	in     eax,0x68
  40ff65:	mov    ebp,0x8b711a57
  40ff6a:	mov    ?,WORD PTR [ecx-0x46a52945]
  40ff70:	mov    eax,ds:0x1e7914d5
  40ff75:	mov    edi,0x6602b241
  40ff7a:	mov    edi,0x8c225a0
  40ff7f:	aaa    
  40ff80:	js     0x40ff12
  40ff82:	jmp    0x4f6a0028
  40ff87:	jecxz  0x40ffca
  40ff89:	mov    eax,ds:0x1ba174a4
  40ff8e:	sub    eax,0x89fa8517
  40ff93:	pop    edx
  40ff94:	or     DWORD PTR [esi+0x78],0xa
  40ff98:	dec    eax
  40ff99:	mov    esp,0xb7e4d955
  40ff9e:	sub    al,0x71
  40ffa0:	fwait
  40ffa1:	pop    ds
  40ffa2:	lock fistp WORD PTR [ebp-0x2]
  40ffa6:	sbb    edi,esi
  40ffa8:	fucomi st,st(2)
  40ffaa:	lods   eax,DWORD PTR ds:[esi]
  40ffab:	repnz ss std 
  40ffae:	sub    ecx,DWORD PTR [ebx-0x2c88557b]
  40ffb4:	mov    ds:0xcd86c69d,eax
  40ffb9:	mov    ch,BYTE PTR [edx+0x28c6f57f]
  40ffbf:	mov    ch,0x8c
  40ffc1:	inc    esp
  40ffc2:	add    dh,dl
  40ffc4:	sub    DWORD PTR [eax+ecx*4+0x22d483a4],esp
  40ffcb:	sub    dh,BYTE PTR [edx-0x6241de4e]
  40ffd1:	dec    edx
  40ffd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffd3:	fld    DWORD PTR [ecx+0x57]
  40ffd6:	dec    eax
  40ffd7:	dec    esi
  40ffd8:	push   esi
  40ffd9:	or     eax,0x9c5dbf5e
  40ffde:	mov    bh,BYTE PTR [esp+ebx*8+0x408eccc9]
  40ffe5:	adc    ebx,DWORD PTR [ebp+0x2f8f9d58]
  40ffeb:	sub    DWORD PTR [edi+0x6b94873f],esi
  40fff1:	sbb    eax,0xa0e8a0c3
  40fff7:	mov    WORD PTR [edx],ss
  40fff9:	ja     0x40ffe5
  40fffb:	rcl    DWORD PTR [edx],1
  40fffd:	jne    0x40fff3
  40ffff:	cmc    
  410000:	mov    eax,0x3174add8
  410005:	pop    ss
  410006:	jmp    0x277bccf2
  41000b:	jb     0x40ffb1
  41000d:	mov    bh,0x3a
  41000f:	pop    ds
  410010:	dec    ecx
  410011:	into   
  410012:	mov    al,ds:0x94e055
  410017:	bndstx [edi+0x29],(bad)
  41001b:	jne    0x41009c
  41001d:	mov    eax,0x8875b1b9
  410022:	jns    0x40ffb3
  410024:	test   dh,bl
  410026:	pushf  
  410027:	iret   
  410028:	adc    edx,DWORD PTR ds:[edx+esi*1+0x3412beee]
  410030:	or     al,0x5
  410032:	fild   WORD PTR [ebp+0x13]
  410035:	pop    ebp
  410036:	retf   0x1e35
  410039:	push   cs
  41003a:	dec    ebp
  41003b:	in     eax,0xb3
  41003d:	and    DWORD PTR [eax],ebp
  41003f:	(bad)  
  410041:	mov    ecx,0xc762200c
  410046:	push   esp
  410047:	addr16 jne 0x41001c
  41004a:	push   ds
  41004b:	xchg   DWORD PTR [edi-0x19],ebp
  41004e:	out    0xab,al
  410050:	rcr    DWORD PTR [edi+eax*8-0x32],1
  410054:	cdq    
  410055:	aam    0x47
  410057:	xor    ah,BYTE PTR [ebp+0x70]
  41005a:	(bad)  
  41005b:	push   edi
  41005c:	push   esi
  41005d:	mov    al,ds:0xe57ede5d
  410062:	add    BYTE PTR [ecx-0x10bc58e6],bh
  410068:	inc    edi
  410069:	inc    ecx
  41006a:	mov    al,ds:0x5b348bc0
  41006f:	mov    ebp,0x97fd230e
  410074:	push   ebx
  410075:	fld    QWORD PTR [esi+eiz*2+0xe]
  410079:	jb     0x4100d4
  41007b:	dec    ebp
  41007c:	jmp    0x9005:0xe78c4249
  410083:	xor    bh,bh
  410085:	jg     0x4100c9
  410087:	clc    
  410088:	mov    WORD PTR cs:[ecx-0x481e24cf],es
  41008f:	ins    DWORD PTR es:[edi],dx
  410090:	adc    BYTE PTR [ebp-0x6],cl
  410093:	cld    
  410094:	ror    DWORD PTR [esi-0x8e37aae],0xa7
  41009b:	ins    BYTE PTR es:[edi],dx
  41009c:	out    0x83,eax
  41009e:	pop    es
  41009f:	sbb    edx,ecx
  4100a1:	jecxz  0x41009b
  4100a3:	push   ss
  4100a4:	outs   dx,BYTE PTR ds:[esi]
  4100a5:	faddp  st(3),st
  4100a7:	xchg   edi,eax
  4100a8:	stc    
  4100a9:	icebp  
  4100aa:	sub    BYTE PTR ds:0xe045c37f,bh
  4100b0:	or     DWORD PTR [edi+esi*8+0x1bed0ee],eax
  4100b7:	ret    0x1238
  4100ba:	in     eax,dx
  4100bb:	mov    dl,BYTE PTR [ebp+0x17]
  4100be:	xchg   ecx,eax
  4100bf:	inc    esp
  4100c0:	cs fwait
  4100c2:	dec    ebx
  4100c3:	in     al,0xef
  4100c5:	call   0xba49:0xe336e176
  4100cc:	rol    BYTE PTR [edx+0x11],cl
  4100cf:	push   esi
  4100d0:	into   
  4100d1:	enter  0x8369,0x4e
  4100d5:	and    eax,0x9d20241
  4100da:	lods   al,BYTE PTR ds:[esi]
  4100db:	jno    0x410064
  4100dd:	ds hlt 
  4100df:	mov    DWORD PTR [ecx-0x7bfb3a4a],esi
  4100e5:	xor    bh,BYTE PTR es:[eax-0x5b484eba]
  4100ec:	add    DWORD PTR [edx+0x21785135],ebp
  4100f2:	and    al,0xea
  4100f4:	add    al,0x70
  4100f6:	shl    DWORD PTR [edi-0x697d802f],1
  4100fc:	mov    ah,0x10
  4100fe:	call   0x4042:0x245c4340
  410105:	bound  edx,QWORD PTR [edi+0x1ce36245]
  41010b:	mov    eax,ds:0xe2dab854
  410110:	retf   
  410111:	lahf   
  410112:	mov    al,0xb
  410114:	jnp    0x41009d
  410116:	sahf   
  410117:	jmp    0x4100d7
  410119:	mov    ah,0x4d
  41011b:	(bad)  
  41011c:	mov    esi,DWORD PTR [edx]
  41011e:	xchg   cl,bl
  410120:	jns    0x4100d6
  410122:	sub    esp,DWORD PTR [eax-0x76949ee]
  410128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410129:	jne    0x4100f2
  41012b:	push   edx
  41012c:	mov    al,ds:0x503b9c83
  410131:	gs sahf 
  410133:	mov    BYTE PTR [ecx-0x4b],bl
  410136:	add    bh,bh
  410138:	fst    DWORD PTR [esi+0x7429421c]
  41013e:	call   0x6d49166
  410143:	daa    
  410144:	das    
  410145:	jns    0x410185
  410147:	data16 loope 0x41018f
  41014a:	test   al,0x6b
  41014c:	mov    WORD PTR [ebx-0x836cf13],?
  410152:	dec    edx
  410153:	idiv   BYTE PTR [ecx+eax*4]
  410156:	or     ebp,DWORD PTR [esi]
  410158:	cmp    esp,esi
  41015a:	cli    
  41015b:	sar    cl,1
  41015d:	or     edi,ebp
  41015f:	ins    BYTE PTR es:[edi],dx
  410160:	push   0x52ed31f1
  410165:	xrelease xchg DWORD PTR cs:[ecx+0x52174a9a],esi
  41016d:	loop   0x410174
  41016f:	sbb    bh,BYTE PTR [esi]
  410171:	cmp    ebx,DWORD PTR [edi+0xe779780]
  410177:	cmp    DWORD PTR [ebx+0x6d],ebx
  41017a:	sbb    edi,ecx
  41017c:	mov    ebp,0x5a1fb4c6
  410181:	std    
  410182:	shl    DWORD PTR [eax-0x7e],0x71
  410186:	add    DWORD PTR [ebp-0x50],ecx
  410189:	test   DWORD PTR [ebp-0x5d],0x39b8e1e4
  410190:	repz jno 0x41019b
  410193:	inc    esi
  410194:	in     al,0x9b
  410196:	cmc    
  410197:	jg     0x410214
  410199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41019a:	arpl   WORD PTR [edx+0xb],si
  41019d:	jno    0x4101ce
  41019f:	std    
  4101a0:	push   ebx
  4101a1:	in     eax,0x42
  4101a3:	jbe    0x410168
  4101a5:	sahf   
  4101a6:	jb     0x41021b
  4101a8:	nop
  4101a9:	aaa    
  4101aa:	mov    bl,0xac
  4101ac:	outs   dx,BYTE PTR ds:[esi]
  4101ad:	std    
  4101ae:	imul   ebx,ebp,0x35
  4101b1:	xchg   ebx,eax
  4101b2:	outs   dx,DWORD PTR ds:[esi]
  4101b3:	retf   
  4101b4:	inc    edx
  4101b5:	fnsave [edi+0x7e]
  4101b8:	icebp  
  4101b9:	es test eax,0xd2633587
  4101bf:	lods   al,BYTE PTR ds:[esi]
  4101c0:	push   es
  4101c1:	cmp    BYTE PTR [ebx-0xa],0xa6
  4101c5:	adc    DWORD PTR [edi],edi
  4101c7:	ret    
  4101c8:	jmp    0x73c13caa
  4101cd:	lods   al,BYTE PTR ds:[esi]
  4101ce:	add    ebx,eax
  4101d0:	retf   
  4101d1:	daa    
  4101d2:	push   dx
  4101d4:	dec    eax
  4101d5:	xchg   ebp,eax
  4101d6:	retf   
  4101d7:	mov    ebp,0xf627421d
  4101dc:	push   eax
  4101dd:	ja     0x410253
  4101df:	out    0xbc,eax
  4101e1:	clc    
  4101e2:	fstp   QWORD PTR [ebx]
  4101e4:	jbe    0x410264
  4101e6:	push   edx
  4101e7:	iret   
  4101e8:	mov    bx,0x79eb
  4101ec:	test   al,0x30
  4101ee:	xchg   edx,eax
  4101ef:	sar    BYTE PTR [edx-0x21c18111],0x7c
  4101f6:	aam    0xc6
  4101f8:	daa    
  4101f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101fa:	out    0xd5,al
  4101fc:	sahf   
  4101fd:	sbb    DWORD PTR [edx+esi*8-0x15],edx
  410201:	retf   0x60dc
  410204:	jl     0x410270
  410206:	jno    0x41018c
  410208:	not    DWORD PTR [ecx]
  41020a:	xchg   ebp,eax
  41020b:	add    al,0xea
  41020d:	mov    edx,0xbe57f9aa
  410212:	lds    eax,FWORD PTR [edx-0x64]
  410215:	xor    cl,BYTE PTR [ebp-0x3ac9d7c2]
  41021b:	stos   BYTE PTR es:[edi],al
  41021c:	dec    ebp
  41021d:	into   
  41021e:	ss mov esi,0xf1ee35ff
  410224:	push   ds
  410225:	int    0x84
  410227:	popf   
  410228:	jmp    0xf4b3fbf0
  41022d:	fwait
  41022e:	dec    eax
  41022f:	mov    WORD PTR [edx],?
  410231:	and    al,0xb2
  410233:	pop    ss
  410234:	fimul  DWORD PTR [ebp+0x7fc7f2bf]
  41023a:	mov    ecx,0xfe8924a7
  41023f:	rcl    al,1
  410241:	es mov dh,0x55
  410244:	sti    
  410245:	dec    ebp
  410246:	out    dx,eax
  410247:	fs sti 
  410249:	ds push ebx
  41024b:	add    eax,eax
  41024d:	add    DWORD PTR [esp+ecx*4],ebx
  410250:	imul   esi,eax,0x61c5cf05
  410256:	dec    esi
  410257:	(bad)  
  410258:	xchg   edi,eax
  410259:	xor    esi,0xe5ca187f
  41025f:	xchg   edx,eax
  410260:	aad    0x52
  410262:	sub    bl,dh
  410264:	aas    
  410265:	outs   dx,BYTE PTR ds:[esi]
  410266:	xlat   BYTE PTR ds:[ebx]
  410267:	adc    al,0xdf
  410269:	push   ecx
  41026a:	fmul   st,st(0)
  41026c:	sub    DWORD PTR [esi+0x468d845e],edx
  410272:	or     eax,DWORD PTR [edi-0x9]
  410275:	(bad)  
  410276:	hlt    
  410277:	or     eax,0x39d2a126
  41027c:	jno    0x4102a0
  41027e:	sub    al,0x9c
  410280:	xor    cl,BYTE PTR ss:[edi+edi*4]
  410284:	mov    bh,0xc7
  410286:	pop    eax
  410287:	or     al,0xbe
  410289:	shl    DWORD PTR [ecx-0x38],1
  41028c:	pop    ecx
  41028d:	and    BYTE PTR [ecx+0x68],dh
  410290:	std    
  410291:	aad    0x55
  410293:	lock and al,BYTE PTR [esi-0xb]
  410297:	data16 add BYTE PTR [eax-0x42907ab],ah
  41029e:	push   ss
  41029f:	sub    ebp,ebx
  4102a1:	das    
  4102a2:	ret    0x3eec
  4102a5:	mov    cl,0xf1
  4102a7:	(bad)  
  4102a8:	leave  
  4102a9:	pushf  
  4102aa:	xor    bh,cl
  4102ac:	xor    ah,cl
  4102ae:	push   eax
  4102af:	inc    esi
  4102b0:	fimul  DWORD PTR [ebx+0x4c3a7a63]
  4102b6:	sbb    eax,DWORD PTR [ecx]
  4102b8:	mov    ds:0x87482a9,ax
  4102be:	jmp    0x52560d29
  4102c3:	mov    DWORD PTR [ecx+eiz*2+0x4986f844],ecx
  4102ca:	int3   
  4102cb:	pop    es
  4102cc:	jl     0x410264
  4102ce:	sbb    al,0x3
  4102d0:	and    DWORD PTR [edx],edi
  4102d2:	push   ecx
  4102d3:	jmp    0xd4bd:0xba326ddc
  4102da:	adc    al,0x4f
  4102dc:	push   ecx
  4102dd:	cmp    DWORD PTR [edi+0x789924eb],0x82cec6ed
  4102e7:	and    dh,BYTE PTR [edx]
  4102e9:	pushw  ds
  4102eb:	jp     0x4102e9
  4102ed:	addr16 mov eax,0x2b940f70
  4102f3:	lock inc ebp
  4102f5:	mov    ds:0xcebb95ac,al
  4102fa:	sub    eax,esi
  4102fc:	jns    0x4102cf
  4102fe:	jns    0x41034f
  410300:	cmp    BYTE PTR [esi-0x1f86a71a],bl
  410306:	ss jge 0x4102a9
  410309:	dec    ebx
  41030a:	mov    edx,0x8c7c3dc9
  41030f:	inc    ebp
  410310:	dec    edi
  410311:	jno    0x4102bf
  410313:	push   ebp
  410314:	rcl    BYTE PTR [ecx],0x9f
  410317:	pop    esp
  410318:	cmp    DWORD PTR [eax+eiz*1],ebx
  41031b:	loop   0x410376
  41031d:	lods   eax,DWORD PTR ds:[esi]
  41031e:	mov    ch,0x5b
  410320:	push   0xc1ac9220
  410325:	ins    BYTE PTR es:[edi],dx
  410326:	dec    edx
  410327:	cmp    esp,edi
  410329:	(bad)  
  41032a:	repz xchg ebp,eax
  41032c:	mov    al,0xd
  41032e:	mov    bl,0x72
  410330:	add    ch,al
  410332:	je     0x4102bc
  410334:	jnp    0x41034b
  410336:	xor    eax,0xf1d80e75
  41033b:	mov    BYTE PTR [esi+ebx*1-0x55],bl
  41033f:	push   edx
  410340:	adc    bl,bh
  410342:	lock pop ss
  410344:	push   es
  410345:	sbb    al,0xb8
  410347:	enter  0x1ded,0x13
  41034b:	and    eax,0x6dd9c5d1
  410350:	nop
  410351:	adc    DWORD PTR [edx],ebp
  410353:	stc    
  410354:	cli    
  410355:	ror    esp,1
  410357:	in     al,0xd0
  410359:	(bad)  
  41035b:	adc    edx,ecx
  41035d:	dec    esi
  41035e:	mov    bh,0x8d
  410360:	inc    edi
  410361:	push   0xa6a628f0
  410366:	pop    eax
  410367:	inc    ebx
  410368:	adc    al,0xca
  41036a:	dec    eax
  41036b:	sub    DWORD PTR [ecx+0x2d49b2ab],esi
  410371:	adc    BYTE PTR [edi-0x72],bh
  410374:	or     ebx,ebx
  410376:	jge    0x41037f
  410378:	shl    ecx,1
  41037a:	call   0x483c7449
  41037f:	dec    edx
  410380:	jno    0x410359
  410382:	out    dx,eax
  410383:	aad    0x2e
  410385:	sub    DWORD PTR [esi-0x1f43f459],edi
  41038b:	add    BYTE PTR [esi-0x3f09ce7f],al
  410391:	cld    
  410392:	mov    esi,0x8b872a4c
  410397:	xchg   esp,eax
  410398:	shl    BYTE PTR [eax+0x651a2cd5],1
  41039e:	xor    bl,BYTE PTR [esi]
  4103a0:	or     BYTE PTR [edx+0x7c],0x18
  4103a4:	scas   eax,DWORD PTR es:[edi]
  4103a5:	jnp    0x41039c
  4103a7:	(bad)  
  4103a8:	mov    eax,0x2e38f023
  4103ad:	out    dx,eax
  4103ae:	pop    ecx
  4103af:	jecxz  0x4103ff
  4103b1:	mov    esi,DWORD PTR [ebp+0x76]
  4103b4:	push   eax
  4103b5:	mov    eax,0x58589bb2
  4103ba:	(bad)  
  4103bb:	jecxz  0x41042b
  4103bd:	popa   
  4103be:	repnz shr esp,1
  4103c1:	mov    DWORD PTR [edx+0x631c5ca0],ebx
  4103c7:	push   esp
  4103c8:	xor    al,ah
  4103ca:	into   
  4103cb:	push   0x60f6508f
  4103d0:	outs   dx,BYTE PTR ds:[esi]
  4103d1:	jo     0x4103c0
  4103d3:	shr    BYTE PTR [eax-0x41],1
  4103d6:	ja     0x410402
  4103d8:	inc    edx
  4103d9:	test   edi,ecx
  4103db:	mov    esp,0x2a0e09f6
  4103e0:	jmp    0x4103a6
  4103e2:	push   esi
  4103e3:	pop    DWORD PTR ds:0xde8b2dc3
  4103e9:	add    DWORD PTR gs:0xf069f6c4,0x5c
  4103f1:	xchg   esp,eax
  4103f2:	call   0xbdae3b97
  4103f7:	mov    bl,BYTE PTR [ebp+eiz*1-0x22]
  4103fb:	daa    
  4103fc:	inc    ecx
  4103fd:	data16 adc cl,BYTE PTR [esi+0x5f]
  410401:	sbb    ch,BYTE PTR [ebx+0x1f]
  410404:	xchg   edx,eax
  410405:	xor    bh,BYTE PTR [ebx]
  410407:	adc    al,0xfa
  410409:	ss sbb eax,0x52a47d8b
  41040f:	lods   al,BYTE PTR ds:[esi]
  410410:	into   
  410411:	pop    ebp
  410412:	pop    ebp
  410413:	and    DWORD PTR [esi+0x4a00c5ec],edi
  410419:	cmp    DWORD PTR [edi],ebx
  41041b:	sub    ah,BYTE PTR [edx]
  41041d:	sbb    DWORD PTR [ecx-0x1598422],edi
  410423:	inc    esp
  410424:	push   0xd07d3882
  410429:	scas   eax,DWORD PTR es:[edi]
  41042a:	inc    eax
  41042b:	retf   
  41042c:	jmp    0x4103c2
  41042e:	inc    eax
  41042f:	xchg   edi,eax
  410430:	pop    eax
  410431:	add    BYTE PTR [edi+0x37],0x2
  410435:	inc    edi
  410436:	daa    
  410437:	adc    al,0xe4
  410439:	lds    esp,FWORD PTR [edi]
  41043b:	dec    ebx
  41043c:	out    0x9c,eax
  41043e:	mov    ch,0x2b
  410440:	fild   DWORD PTR ds:0x2d3eab24
  410446:	mov    DWORD PTR [eax-0x42],esp
  410449:	shr    eax,1
  41044b:	rcr    DWORD PTR [ebx+ebx*1],cl
  41044e:	inc    ecx
  41044f:	xchg   ebp,eax
  410450:	daa    
  410451:	xlat   BYTE PTR ds:[ebx]
  410452:	(bad)  [ebp-0x74]
  410455:	mov    dl,0x4
  410457:	ret    0xb322
  41045a:	stc    
  41045b:	ja     0x4103ff
  41045d:	(bad)  
  41045e:	xor    ecx,esp
  410460:	cmp    ecx,DWORD PTR [esi]
  410462:	adc    eax,0xffffff83
  410465:	xor    BYTE PTR [edx-0x41],bh
  410468:	loopne 0x41045e
  41046a:	shl    DWORD PTR [ebp+0x310be21f],cl
  410470:	dec    esi
  410471:	stos   DWORD PTR es:[edi],eax
  410472:	mov    al,ds:0xcec6adbf
  410477:	test   BYTE PTR [esi+0x5086d7b4],dh
  41047d:	ficom  WORD PTR [eax]
  41047f:	mov    ?,ecx
  410481:	bound  esi,QWORD PTR es:[esi+0x52]
  410485:	inc    esp
  410486:	iret   
  410487:	stc    
  410488:	aas    
  410489:	sub    ecx,DWORD PTR [eax-0x4c]
  41048c:	sub    cl,BYTE PTR [esp+edx*8+0x64]
  410490:	jnp    0x410498
  410492:	pop    ds
  410493:	adc    DWORD PTR [edi],esi
  410495:	and    BYTE PTR [edi],ch
  410497:	jae    0x410483
  410499:	in     al,dx
  41049a:	pop    eax
  41049b:	sbb    BYTE PTR [ebp+0x10d11854],bh
  4104a1:	sbb    DWORD PTR es:[edx+0x3e],ebx
  4104a5:	js     0x41049a
  4104a7:	mov    esi,0x7850caf7
  4104ac:	jb     0x41044b
  4104ae:	rcl    edx,0x90
  4104b1:	push   ebp
  4104b2:	cmc    
  4104b3:	repz push esp
  4104b5:	das    
  4104b6:	ror    BYTE PTR [edx+edi*1+0x7afae6f1],cl
  4104bd:	fs jo  0x410446
  4104c0:	inc    esp
  4104c1:	sbb    DWORD PTR [ecx+0x704112f4],ebp
  4104c7:	(bad)  
  4104c9:	and    ebp,edx
  4104cb:	mov    DWORD PTR [ecx-0x196d9c11],ebx
  4104d1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104d3:	mov    eax,0x7563197b
  4104d8:	add    eax,0x355e43fb
  4104dd:	mov    ebp,0x6af32237
  4104e2:	lods   al,BYTE PTR ds:[esi]
  4104e3:	out    0x3f,al
  4104e5:	lds    ecx,FWORD PTR ds:0x36374429
  4104eb:	aaa    
  4104ec:	adc    ebp,DWORD PTR [edx+0x3bc8e18a]
  4104f2:	call   0x9bc1896e
  4104f7:	push   ebp
  4104f8:	or     bh,BYTE PTR [esi+ebx*2]
  4104fb:	cmp    BYTE PTR [eax],bh
  4104fd:	stos   BYTE PTR es:[edi],al
  4104fe:	inc    edx
  4104ff:	inc    edi
  410500:	fld    QWORD PTR [esp+eiz*2-0x7]
  410504:	stc    
  410505:	push   ecx
  410506:	pop    esp
  410507:	add    dh,0x1a
  41050a:	jne    0x41054b
  41050c:	jnp    0x4104bc
  41050e:	jne    0x410496
  410510:	fnsavew [edx-0x311c08e1]
  410517:	or     al,BYTE PTR [ebp-0xa]
  41051a:	push   edx
  41051b:	add    al,0x64
  41051d:	mov    bl,0xfd
  41051f:	xchg   edi,eax
  410520:	div    BYTE PTR [edx-0x4bedc601]
  410526:	call   0x8b8e:0xe375e82d
  41052d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41052e:	dec    ebp
  41052f:	inc    ebp
  410530:	or     BYTE PTR [ebp-0x6ac44b4d],0x9
  410537:	and    DWORD PTR [ecx+0x410ed804],esi
  41053d:	fcompp 
  41053f:	(bad)  
  410540:	jb     0x410510
  410542:	into   
  410543:	xor    al,0x8e
  410545:	imul   edi,ebx,0x6c
  410548:	mov    ch,BYTE PTR [edx+0x6965cac8]
  41054e:	cld    
  41054f:	cwde   
  410550:	lea    esp,[ebx]
  410552:	out    dx,al
  410553:	xchg   edx,eax
  410554:	test   dh,0x9a
  410557:	fwait
  410558:	adc    ch,dh
  41055a:	loope  0x410509
  41055c:	adc    DWORD PTR [edi],0xffffffa5
  41055f:	loope  0x410540
  410561:	xor    BYTE PTR [eax-0x6c],cl
  410564:	jne    0x4104f5
  410566:	ret    0x4805
  410569:	ret    0x6487
  41056c:	(bad)  
  41056d:	or     esp,DWORD PTR ss:[ecx-0x6913a1a1]
  410574:	push   es
  410575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410576:	add    eax,0x7dcad58d
  41057b:	jno    0x410538
  41057d:	bound  ecx,QWORD PTR [esi+0x1c478d]
  410583:	icebp  
  410584:	test   DWORD PTR [edx+0x5a973a14],esi
  41058a:	pop    ebp
  41058b:	test   eax,0x1b024bd9
  410590:	ds pop ss
  410592:	aaa    
  410593:	dec    edi
  410594:	cmp    dl,BYTE PTR [edx+0x8fa4d26]
  41059a:	push   esp
  41059b:	adc    DWORD PTR [ecx+esi*8],0xfffffffa
  41059f:	cmp    cl,dh
  4105a1:	pop    es
  4105a2:	in     al,0x71
  4105a4:	jno    0x410603
  4105a6:	aas    
  4105a7:	dec    eax
  4105a8:	adc    BYTE PTR [ebx+0x165c9491],ch
  4105ae:	mov    dh,0xdb
  4105b0:	icebp  
  4105b1:	gs cdq 
  4105b3:	inc    ebp
  4105b4:	fldcw  WORD PTR [esi]
  4105b6:	icebp  
  4105b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105b8:	(bad)
  4105bd:	out    dx,eax
  4105be:	jg     0x41059e
  4105c0:	or     dl,dh
  4105c2:	pop    es
  4105c3:	jmp    0x410567
  4105c5:	add    BYTE PTR [edx+0x3f],ah
  4105c8:	sub    BYTE PTR [ecx],dh
  4105ca:	and    dx,WORD PTR [ecx]
  4105cd:	jmp    DWORD PTR [esi+eiz*8]
  4105d0:	fcom   QWORD PTR [edi+eiz*4-0x5827ef9c]
  4105d7:	lahf   
  4105d8:	sar    BYTE PTR [edi+0x773926ac],0xd5
  4105df:	and    BYTE PTR [ebp+edx*8+0x5d],bl
  4105e3:	add    BYTE PTR [ebx+ecx*8+0x66ab9f10],ch
  4105ea:	mov    ch,0x15
  4105ec:	xchg   edx,eax
  4105ed:	push   es
  4105ee:	fistp  DWORD PTR [ecx]
  4105f0:	addr16 add al,0x29
  4105f3:	xchg   ebp,eax
  4105f4:	jns    0x41065c
  4105f6:	cwde   
  4105f7:	inc    ebp
  4105f8:	push   0x1e90b09a
  4105fd:	out    0xdd,al
  4105ff:	fcmovne st,st(3)
  410601:	mov    ah,0x1
  410603:	enter  0xc301,0x76
  410607:	adc    ah,BYTE PTR [ebp+0x6a2e471c]
  41060d:	aaa    
  41060e:	ss clc 
  410610:	iret   
  410611:	xor    eax,0xeacef58f
  410616:	cmp    dh,BYTE PTR [edi-0x58]
  410619:	pushf  
  41061a:	push   ds
  41061b:	mov    BYTE PTR [ecx+0x1bcba15d],al
  410621:	or     DWORD PTR [eax],esp
  410623:	pop    es
  410624:	fidiv  DWORD PTR [ebp+0x3]
  410627:	(bad)  
  410628:	dec    esi
  410629:	test   al,0x14
  41062b:	jl     0x410655
  41062d:	xchg   ecx,eax
  41062e:	mov    fs,WORD PTR [esi]
  410630:	push   edx
  410631:	xor    esp,DWORD PTR [ebx-0x21ae2627]
  410637:	sahf   
  410638:	enter  0x3b6a,0x51
  41063c:	pop    edx
  41063d:	pop    ds
  41063e:	push   ebx
  41063f:	aam    0xca
  410641:	test   DWORD PTR [edi-0x33],0x5ac4b0ab
  410648:	pop    ss
  410649:	sbb    bl,bl
  41064b:	enter  0x91a3,0xc0
  41064f:	push   cs
  410650:	jge    0x41068c
  410652:	mov    eax,0x673bf96d
  410657:	dec    edx
  410658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410659:	dec    ecx
  41065a:	mov    esi,0xdd90c652
  41065f:	stc    
  410660:	mov    esp,0x50252af2
  410665:	and    eax,0xa331b4f4
  41066a:	or     eax,0xb5fa133e
  41066f:	lahf   
  410670:	aaa    
  410671:	jno    0x4106ed
  410673:	mov    ebp,0x2e89586f
  410678:	sbb    DWORD PTR [ebp-0x1f],edx
  41067b:	bound  esp,QWORD PTR ds:0xf90ecb85
  410681:	es xor dh,cl
  410684:	in     al,0x50
  410686:	push   eax
  410687:	cmp    eax,0xf9661763
  41068c:	or     BYTE PTR [eax],bh
  41068e:	leave  
  41068f:	in     eax,dx
  410690:	cbw    
  410692:	fdiv   DWORD PTR [eax+esi*1+0x47295e6f]
  410699:	mov    dl,0xc3
  41069b:	addr16 xchg edx,eax
  41069d:	or     BYTE PTR [edi+0x57],cl
  4106a0:	mov    eax,ds:0x2dbe2a9e
  4106a5:	mov    WORD PTR [esp+eax*4-0x7],?
  4106a9:	or     edx,DWORD PTR [edi]
  4106ab:	imul   esp,eax,0xaf2f8a1d
  4106b1:	or     bh,cl
  4106b3:	mov    ah,0xac
  4106b5:	dec    ebx
  4106b6:	add    DWORD PTR [ebx-0x28d777e5],ebx
  4106bc:	retf   0x9f66
  4106bf:	and    DWORD PTR [esi-0x74947483],esp
  4106c5:	fisttp WORD PTR [ebp+0x7c]
  4106c8:	jp     0x4106ab
  4106ca:	fcom   QWORD PTR [edx+eiz*4]
  4106cd:	sub    eax,0xd7088b9e
  4106d2:	xchg   esp,eax
  4106d3:	int3   
  4106d4:	das    
  4106d5:	sbb    dl,ah
  4106d7:	mov    bl,0x3c
  4106d9:	scas   eax,DWORD PTR es:[edi]
  4106da:	sub    BYTE PTR ds:0x5d538341,dh
  4106e0:	pop    esp
  4106e1:	xchg   DWORD PTR ds:0xf9649c94,edx
  4106e7:	add    eax,0x7f4bb6ce
  4106ec:	scas   al,BYTE PTR es:[edi]
  4106ed:	add    DWORD PTR [edx+0x38fc1df0],edi
  4106f3:	xchg   ecx,eax
  4106f4:	pushf  
  4106f5:	test   al,0x58
  4106f7:	test   DWORD PTR [ebx-0x27],esp
  4106fa:	bound  ebp,QWORD PTR [ebx]
  4106fc:	call   0x4204:0x1863ba5c
  410703:	cmp    DWORD PTR [edx-0x43345dad],ebx
  410709:	inc    ebp
  41070a:	and    eax,0x5b9404f0
  41070f:	mov    ecx,0x1aedf7b2
  410714:	js     0x410771
  410716:	push   edx
  410717:	fdivr  st,st(4)
  410719:	dec    ecx
  41071a:	jle    0x410713
  41071c:	outs   dx,DWORD PTR ds:[esi]
  41071d:	xchg   DWORD PTR [ebx+0x5fb02db1],esp
  410723:	add    dl,BYTE PTR [ecx-0x1982930]
  410729:	and    edx,DWORD PTR [eax]
  41072b:	inc    edi
  41072c:	xchg   DWORD PTR [ebx],ebx
  41072e:	mov    ecx,0xc5165358
  410733:	xor    al,0xfe
  410735:	jmp    0x1c2033c6
  41073a:	shr    BYTE PTR [eax],cl
  41073c:	mov    bh,0x4b
  41073e:	aaa    
  41073f:	adc    DWORD PTR ds:0xa5d891a3,0xfffffff4
  410746:	je     0x410753
  410748:	push   ecx
  410749:	add    eax,0x5a372077
  41074e:	sbb    ebp,DWORD PTR [ecx]
  410750:	lods   eax,DWORD PTR ds:[esi]
  410751:	mov    esp,0x84044fb1
  410756:	inc    ecx
  410757:	mov    BYTE PTR cs:[esi-0x6a],bh
  41075b:	fsubr  DWORD PTR [edx+edi*1]
  41075e:	retf   0xb71f
  410761:	mov    al,ds:0x7ea0c123
  410766:	and    BYTE PTR [edi],0x80
  410769:	nop
  41076a:	lock sbb DWORD PTR [ebp-0x3d],ecx
  41076e:	cld    
  41076f:	clc    
  410770:	ss aad 0x45
  410773:	add    eax,edi
  410775:	pop    ecx
  410776:	iret   
  410777:	sbb    BYTE PTR [esi-0x3609c4b7],dh
  41077d:	or     BYTE PTR [edx+0x5368277b],ch
  410783:	nop
  410784:	mov    eax,ds:0xcd810152
  410789:	xchg   ecx,eax
  41078a:	add    ah,ch
  41078c:	dec    esp
  41078d:	inc    eax
  41078e:	je     0x410781
  410790:	test   eax,0x1c5a3a
  410795:	(bad)  [ecx-0x180b76ae]
  41079b:	jl     0x4107af
  41079d:	fsub   DWORD PTR [edx+0xb748b85]
  4107a3:	push   ebx
  4107a4:	and    dl,ah
  4107a6:	or     BYTE PTR [ebx-0x4b],0xc9
  4107aa:	fnstsw WORD PTR [ebx]
  4107ac:	sahf   
  4107ad:	xor    ebx,ecx
  4107af:	xchg   DWORD PTR [edx+0x77],esi
  4107b2:	pop    es
  4107b3:	ret    
  4107b4:	gs xchg edx,eax
  4107b6:	retf   
  4107b7:	and    DWORD PTR [ebp+0x3782075e],esi
  4107bd:	cwde   
  4107be:	mov    bl,0xd1
  4107c0:	cmp    edi,DWORD PTR [eax+0x13549438]
  4107c6:	call   0xe33c:0x2ad143a4
  4107cd:	add    BYTE PTR [esi+0x7bfd267e],0x9f
  4107d4:	sub    DWORD PTR [edi],0x8
  4107d7:	jmp    0x65e5:0xddcc966
  4107de:	push   es
  4107df:	and    BYTE PTR [eax],cl
  4107e1:	das    
  4107e2:	imul   BYTE PTR [edi+0x62]
  4107e5:	sti    
  4107e6:	sbb    DWORD PTR [ebp+0xfc48f1],ecx
  4107ec:	dec    esp
  4107ed:	aaa    
  4107ee:	addr16 mov edi,0xda71abd2
  4107f4:	xor    edx,DWORD PTR ds:0x989e4175
  4107fa:	or     DWORD PTR [ebp-0x3d],eax
  4107fd:	das    
  4107fe:	dec    cl
  410800:	or     DWORD PTR [edi+0x1c],0x2afbf01e
  410807:	shr    eax,1
  410809:	dec    ebp
  41080a:	arpl   dx,dx
  41080c:	sbb    al,BYTE PTR [edi+0x6d]
  41080f:	cmp    ah,BYTE PTR [ebx]
  410811:	xor    BYTE PTR ds:[esi],bl
  410814:	les    eax,FWORD PTR [eax+0x37ddeb5a]
  41081a:	sub    eax,0xe6dbbea3
  41081f:	or     BYTE PTR [ebx+0x3c],ah
  410822:	popa   
  410823:	jecxz  0x41087e
  410825:	pop    ebp
  410826:	pop    ebx
  410827:	sbb    BYTE PTR [eax],al
  410829:	div    DWORD PTR [ebx]
  41082b:	cmp    ecx,eax
  41082d:	sti    
  41082e:	cli    
  41082f:	inc    ebx
  410830:	in     eax,dx
  410831:	mov    dl,BYTE PTR [eax+0x20579b90]
  410837:	xor    eax,0x1b2ad6a1
  41083c:	adc    ah,cl
  41083e:	pop    ecx
  41083f:	and    DWORD PTR [edi],0xb79df44a
  410845:	dec    ebx
  410846:	call   0xbbe4f52a
  41084b:	adc    edi,DWORD PTR [eax-0x7649553e]
  410851:	(bad)  
  410852:	jmp    0x410861
  410854:	loope  0x4107fd
  410856:	fdiv   QWORD PTR [edx]
  410858:	cdq    
  410859:	mov    bl,0x9e
  41085b:	call   0xd10f:0x770232f5
  410862:	in     eax,0x3e
  410864:	push   esp
  410865:	and    BYTE PTR [esi],ah
  410867:	out    dx,eax
  410868:	repnz cmp cl,BYTE PTR gs:[ebp-0x558a31a2]
  410870:	mov    al,ds:0x2b9c8635
  410875:	je     0x410847
  410877:	aam    0x19
  410879:	pop    esi
  41087a:	add    bh,BYTE PTR [ebx-0x6019b3b3]
  410880:	test   DWORD PTR [ecx-0x30],eax
  410883:	dec    ebp
  410884:	mov    ds:0xf1ad49f6,al
  410889:	inc    esi
  41088a:	xor    eax,0x5670650e
  41088f:	mov    ebx,?
  410891:	in     al,0xd6
  410893:	push   ebp
  410894:	bound  ecx,QWORD PTR ds:[ebp-0x712c475c]
  41089b:	ins    BYTE PTR es:[edi],dx
  41089c:	test   bl,dl
  41089e:	leave  
  41089f:	cld    
  4108a0:	xor    eax,0xf929e23c
  4108a5:	sahf   
  4108a6:	mov    ah,0xd5
  4108a8:	es xchg esi,eax
  4108aa:	inc    esi
  4108ab:	sub    eax,0xd4990b0e
  4108b0:	mov    dh,0x51
  4108b2:	push   ss
  4108b3:	inc    ecx
  4108b4:	mov    bl,0xd1
  4108b6:	std    
  4108b7:	mov    esi,0x523a70f9
  4108bc:	enter  0x7df8,0x57
  4108c0:	rcl    DWORD PTR [ecx-0x65],1
  4108c3:	sub    eax,0xc15e8931
  4108c8:	ins    DWORD PTR es:[edi],dx
  4108c9:	push   edx
  4108ca:	jo     0x410856
  4108cc:	shl    DWORD PTR [esi-0x6c895e6a],1
  4108d2:	add    ecx,DWORD PTR [ebp+esi*1-0x2b]
  4108d6:	push   es
  4108d7:	cld    
  4108d8:	push   ebx
  4108d9:	cmp    eax,0xd4d86f5b
  4108de:	fld    DWORD PTR [ebp-0x4d98e3ca]
  4108e4:	adc    eax,0xe264132e
  4108e9:	sub    dh,BYTE PTR [ecx]
  4108eb:	stos   BYTE PTR es:[edi],al
  4108ec:	jl     0x410908
  4108ee:	cmc    
  4108ef:	pop    ebp
  4108f0:	sub    BYTE PTR [ecx+0x2],dh
  4108f3:	and    eax,0x2363c01e
  4108f8:	fwait
  4108f9:	mov    WORD PTR [ebx-0x33],?
  4108fc:	fwait
  4108fd:	sbb    bh,BYTE PTR [edi]
  4108ff:	cmp    DWORD PTR [edx+0x7c],0x30
  410903:	cwde   
  410904:	sti    
  410905:	mov    edx,0xecba6a28
  41090a:	test   al,0x1c
  41090c:	mov    edx,0x837cd2ca
  410911:	hlt    
  410912:	and    dl,BYTE PTR [eax]
  410914:	inc    eax
  410915:	fcmovne st,st(6)
  410917:	cmp    DWORD PTR [edi-0x29],edi
  41091a:	sub    eax,DWORD PTR [eax]
  41091c:	jge    0x410912
  41091e:	sbb    BYTE PTR [edx+0x1a831fe4],bl
  410924:	mov    bl,0xeb
  410926:	push   0x46875a20
  41092b:	rcl    DWORD PTR [esi+0x3cf42028],0x83
  410932:	out    dx,eax
  410933:	sub    edi,DWORD PTR [esi+ebp*8-0x5f]
  410937:	adc    edi,DWORD PTR [edi]
  410939:	fnsave [ebp+0x7]
  41093c:	neg    bh
  41093e:	aad    0xaa
  410940:	test   ecx,0x77653dd
  410946:	(bad)  
  410947:	lods   al,BYTE PTR ds:[esi]
  410948:	mov    ds:0xd1626212,al
  41094d:	in     eax,0x15
  41094f:	fld    QWORD PTR [ecx]
  410951:	inc    ebp
  410952:	inc    esp
  410953:	dec    edx
  410954:	shl    DWORD PTR [eax+0x4eddafe2],cl
  41095a:	loop   0x4109b2
  41095c:	and    eax,0x56f72913
  410961:	sahf   
  410962:	das    
  410963:	shr    BYTE PTR [ebp-0x43],cl
  410966:	iret   
  410967:	test   eax,0x748ba00e
  41096c:	sub    DWORD PTR [eax+0x6b35a3dd],ecx
  410972:	mov    edx,0xc57b8fe6
  410977:	add    al,dl
  410979:	push   es
  41097a:	mov    esp,0xfa7807b2
  41097f:	nop
  410980:	pop    ecx
  410981:	imul   esi,DWORD PTR [eax],0x3d085188
  410987:	addr16 push ebx
  410989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41098a:	xor    eax,eax
  41098c:	out    0xcb,eax
  41098e:	aaa    
  41098f:	imul   ebx,ebx,0xe5e6f2f6
  410995:	jb     0x410925
  410997:	das    
  410998:	mov    edi,0x5f274fc
  41099d:	dec    ebx
  41099e:	pop    esi
  41099f:	jbe    0x4109b3
  4109a1:	call   0xb1db:0x14c740f4
  4109a8:	cmp    al,BYTE PTR [edx+edi*8]
  4109ab:	frstor [ecx]
  4109ad:	int3   
  4109ae:	imul   edx,DWORD PTR [ebx],0x6b44dc04
  4109b4:	xchg   esp,eax
  4109b5:	out    dx,al
  4109b6:	xchg   esi,esp
  4109b8:	out    0x54,eax
  4109ba:	pop    esi
  4109bb:	ret    0xebe2
  4109be:	push   esp
  4109bf:	add    ch,BYTE PTR [ebp-0x6]
  4109c2:	jmp    0x6e9b8fe8
  4109c7:	out    0xfd,al
  4109c9:	pusha  
  4109ca:	jmp    0x410a47
  4109cc:	sbb    eax,0x7a966bc
  4109d1:	loopne 0x4109cf
  4109d3:	gs out 0x94,al
  4109d6:	imul   eax,ebx,0x47
  4109d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109da:	(bad)  
  4109db:	les    edi,FWORD PTR [edx-0x41]
  4109de:	(bad)  
  4109e0:	adc    al,0x41
  4109e2:	fmul   QWORD PTR [ebx]
  4109e4:	push   0xcbfd9b8e
  4109e9:	mov    dl,BYTE PTR [esi]
  4109eb:	shl    BYTE PTR [ecx],1
  4109ed:	adc    eax,0xc5d8cac2
  4109f2:	jmp    0xe9a5b2b0
  4109f7:	setg   BYTE PTR [ecx+0x437e3866]
  4109fe:	repnz mov ebx,0x5cdaa518
  410a04:	test   DWORD PTR [edx+0x6c867846],edx
  410a0a:	dec    ebp
  410a0b:	repnz das 
  410a0d:	jne    0x410998
  410a0f:	adc    BYTE PTR [edi+eiz*1],cl
  410a12:	sbb    ebp,DWORD PTR ds:0xfe8c6900
  410a18:	push   0xffffff88
  410a1a:	mov    dh,0x2b
  410a1c:	pusha  
  410a1d:	jb     0x410a9a
  410a1f:	jo     0x4109eb
  410a21:	stos   DWORD PTR es:[edi],eax
  410a22:	in     eax,dx
  410a23:	inc    ebp
  410a24:	or     DWORD PTR [ebx+ebp*8],esp
  410a27:	cmp    cl,BYTE PTR [ebp-0x4e56fef1]
  410a2d:	repnz lods eax,DWORD PTR ds:[esi]
  410a2f:	sub    edi,ebp
  410a31:	push   ecx
  410a32:	clc    
  410a33:	scas   al,BYTE PTR es:[edi]
  410a34:	repnz hlt 
  410a36:	js     0x410a77
  410a38:	ror    DWORD PTR [ebx+edx*2+0x3e],0xb9
  410a3d:	repnz mov edx,DWORD PTR [edi]
  410a40:	sbb    DWORD PTR [esi+0x37],edx
  410a43:	cdq    
  410a44:	popf   
  410a45:	cmp    edi,edi
  410a47:	pop    ecx
  410a48:	repnz sbb eax,0xf5a4e823
  410a4e:	aas    
  410a4f:	or     al,0xa8
  410a51:	(bad)  
  410a53:	xchg   esp,eax
  410a54:	push   ds
  410a55:	or     ebp,edi
  410a57:	out    dx,eax
  410a58:	rol    BYTE PTR [eax],cl
  410a5a:	push   esi
  410a5b:	inc    eax
  410a5c:	imul   ecx,DWORD PTR [bp+si-0x6aab],0x3e
  410a62:	outs   dx,DWORD PTR ds:[esi]
  410a63:	(bad)  
  410a65:	sub    edi,ebp
  410a67:	imul   edx,DWORD PTR [ebp-0x417afec4],0xffffff9f
  410a6e:	js     0x410a17
  410a70:	dec    ecx
  410a71:	jnp    0x410a0b
  410a73:	les    esi,FWORD PTR [edi-0x20]
  410a76:	arpl   WORD PTR [esi-0x6581a4e0],dx
  410a7c:	adc    DWORD PTR [edx-0x54],eax
  410a7f:	cmp    eax,0x308347a4
  410a84:	sbb    al,0x13
  410a86:	retf   0x2c11
  410a89:	int3   
  410a8a:	adc    dh,BYTE PTR [eax]
  410a8c:	pop    ds
  410a8d:	sbb    bh,cl
  410a8f:	pop    esi
  410a90:	push   0x52
  410a92:	sub    ebx,ebp
  410a94:	dec    BYTE PTR [esi+0x36]
  410a97:	push   0x35
  410a99:	adc    BYTE PTR [eax-0x13af1cfe],0x12
  410aa0:	add    ch,dh
  410aa2:	rol    ch,0xb5
  410aa5:	mov    ah,0x0
  410aa7:	jmp    0xb099:0x33033a55
  410aae:	push   cs
  410aaf:	sbb    ebx,DWORD PTR es:[esi+0x546e3599]
  410ab6:	inc    esi
  410ab7:	inc    eax
  410ab8:	jmp    0x410ab8
  410aba:	es xchg esi,eax
  410abc:	xlat   BYTE PTR ds:[ebx]
  410abd:	lods   eax,DWORD PTR ds:[esi]
  410abe:	imul   esi,DWORD PTR [ebp-0x5f],0xffffffb8
  410ac2:	mov    dl,0xe7
  410ac4:	mov    bh,0xcc
  410ac6:	dec    esp
  410ac7:	test   BYTE PTR [ebx-0x5c],cl
  410aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410acb:	cmp    al,cl
  410acd:	xchg   edx,eax
  410ace:	sbb    al,0x46
  410ad0:	mov    ebp,0xe1d563b1
  410ad5:	bound  ebp,QWORD PTR [edx]
  410ad7:	loope  0x410a63
  410ad9:	bound  edx,QWORD PTR [edi-0x3082b606]
  410adf:	adc    esi,edx
  410ae1:	scas   al,BYTE PTR es:[edi]
  410ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ae3:	outs   dx,DWORD PTR ds:[esi]
  410ae4:	ins    BYTE PTR es:[edi],dx
  410ae5:	mov    al,0x42
  410ae7:	push   esp
  410ae8:	dec    eax
  410ae9:	aaa    
  410aea:	icebp  
  410aeb:	xchg   BYTE PTR [esi-0x6e5adb8f],dl
  410af1:	mov    cs,WORD PTR ds:0x5317304c
  410af7:	push   es
  410af8:	cmp    BYTE PTR [ebp-0x6b8dcb7b],dl
  410afe:	pop    ds
  410aff:	arpl   WORD PTR [ebp-0x23],sp
  410b02:	dec    edi
  410b03:	idiv   BYTE PTR [eax+0x53bd2d97]
  410b09:	mov    edx,0x4ff2ab6d
  410b0e:	sar    DWORD PTR [esi-0x5e],0x6e
  410b12:	adc    al,0x95
  410b14:	push   ds
  410b15:	(bad)  
  410b16:	sahf   
  410b17:	jnp    0x410b0f
  410b19:	mov    cl,0x8a
  410b1b:	mov    esp,0xad3a267f
  410b20:	sti    
  410b21:	test   eax,0x4aceff3
  410b26:	pop    ebx
  410b27:	fld    DWORD PTR [ebx+0x74]
  410b2a:	das    
  410b2b:	mov    ebp,0x3a63e29c
  410b30:	mov    ebx,0x65895e8b
  410b35:	pop    ecx
  410b36:	(bad)  
  410b37:	cdq    
  410b38:	jns    0x410aef
  410b3a:	scas   eax,DWORD PTR es:[edi]
  410b3b:	pop    ebp
  410b3c:	mov    esi,0x141e69c1
  410b41:	xchg   edi,eax
  410b43:	in     al,0x3c
  410b45:	pop    esi
  410b46:	or     esi,DWORD PTR [eax-0x77153b8d]
  410b4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b4d:	shr    BYTE PTR ds:0x973e2715,0x32
  410b54:	mov    eax,0x265b144
  410b59:	retf   
  410b5a:	inc    ebx
  410b5b:	inc    eax
  410b5c:	mov    edi,0xe452c2e6
  410b61:	(bad)  
  410b62:	out    0x12,eax
  410b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b65:	xchg   ebp,eax
  410b66:	xchg   esi,eax
  410b67:	mov    ecx,DWORD PTR [esi+0x37]
  410b6a:	fstp   QWORD PTR [edx]
  410b6c:	inc    ecx
  410b6d:	stos   DWORD PTR es:[edi],eax
  410b6e:	frstor [ebp+0x7432466d]
  410b74:	adc    ebp,DWORD PTR [ebx+0x3]
  410b77:	sub    eax,0x81db184b
  410b7c:	enter  0x926f,0x3a
  410b80:	imul   ecx,ebx,0xc3ca9f2f
  410b86:	cmp    DWORD PTR [ebx-0x70],edi
  410b89:	pop    es
  410b8a:	je     0x410b0e
  410b8c:	xor    BYTE PTR [esi-0x3b66807e],0x42
  410b93:	daa    
  410b94:	dec    ecx
  410b95:	std    
  410b96:	inc    edi
  410b97:	push   0x83cb7e2c
  410b9c:	sar    DWORD PTR [eax-0x64213e33],1
  410ba2:	push   0x4a
  410ba4:	adc    BYTE PTR [esi-0x30],dl
  410ba7:	mov    dl,0x90
  410ba9:	xchg   ecx,eax
  410baa:	mov    ds,WORD PTR [ebx+0xb]
  410bad:	outs   dx,DWORD PTR ds:[esi]
  410bae:	fidiv  DWORD PTR [edx+0x109cc8c9]
  410bb4:	fist   WORD PTR [esi]
  410bb6:	aas    
  410bb7:	ds push ds
  410bb9:	fld    QWORD PTR [edx-0x53447ebf]
  410bbf:	je     0x410c05
  410bc1:	xor    al,0x83
  410bc3:	xchg   ebx,eax
  410bc4:	(bad)  
  410bc5:	stc    
  410bc6:	adc    BYTE PTR [ebx-0x4e],dl
  410bc9:	and    DWORD PTR [esi],edi
  410bcb:	ins    BYTE PTR es:[edi],dx
  410bcc:	test   eax,0x1b68ae78
  410bd1:	mov    dh,ah
  410bd3:	or     edx,DWORD PTR [ecx+edi*8+0x68]
  410bd7:	loope  0x410bd7
  410bd9:	xor    ebx,DWORD PTR [edx-0x53]
  410bdc:	mov    ds:0xc9bc2ff3,eax
  410be1:	xchg   edi,eax
  410be2:	stos   DWORD PTR es:[edi],eax
  410be3:	jne    0x410bb0
  410be5:	scas   eax,DWORD PTR es:[edi]
  410be6:	inc    esi
  410be7:	jne    0x410c23
  410be9:	scas   al,BYTE PTR es:[edi]
  410bea:	push   cs
  410beb:	loopne 0x410beb
  410bed:	add    BYTE PTR [ecx-0x59df9265],ah
  410bf3:	add    DWORD PTR ds:0x69bc10d4,ecx
  410bf9:	or     dh,dh
  410bfb:	sbb    bl,BYTE PTR [edi-0x32]
  410bfe:	fisubr WORD PTR ds:0x75e7f5cc
  410c04:	sub    al,0xbd
  410c06:	or     bl,cl
  410c08:	mov    al,ds:0x9c4d0151
  410c0d:	cdq    
  410c0e:	pop    edx
  410c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c10:	inc    DWORD PTR [esi+0x68]
  410c13:	add    al,0xad
  410c15:	mov    ecx,0x232a3e25
  410c1a:	out    dx,al
  410c1b:	push   ss
  410c1c:	xchg   DWORD PTR [ecx-0x69c36cd],eax
  410c22:	inc    edi
  410c23:	aad    0x1a
  410c25:	and    eax,ebx
  410c27:	sbb    ch,BYTE PTR [esi+0x2aab8c11]
  410c2d:	in     al,dx
  410c2e:	sbb    dh,BYTE PTR [edi-0x5c]
  410c31:	xchg   DWORD PTR [esi-0x5046bed5],ebp
  410c37:	pop    ebx
  410c38:	mov    ebp,0xb16975df
  410c3d:	mov    ch,0x57
  410c3f:	outs   dx,BYTE PTR ds:[esi]
  410c40:	dec    edi
  410c41:	leave  
  410c42:	sbb    al,0x6b
  410c44:	jle    0x410be2
  410c46:	and    esp,ebp
  410c48:	sti    
  410c49:	(bad)  
  410c4b:	inc    edi
  410c4c:	mov    cl,0xa8
  410c4e:	ret    
  410c4f:	fxch   st(1)
  410c51:	xlat   BYTE PTR ds:[ebx]
  410c52:	neg    BYTE PTR [ebp+0x53bbc455]
  410c58:	add    ch,BYTE PTR [ebp-0x366660b8]
  410c5e:	push   0x67abb86b
  410c63:	cli    
  410c64:	mov    ebx,0x9fbe3c12
  410c69:	xchg   edx,eax
  410c6a:	ja     0x410c58
  410c6c:	icebp  
  410c6d:	js     0x410c8c
  410c6f:	ins    BYTE PTR es:[edi],dx
  410c70:	sub    ah,0x58
  410c73:	mov    ah,0x4
  410c75:	cli    
  410c76:	dec    esp
  410c77:	aam    0xbe
  410c79:	and    ebp,edx
  410c7b:	xor    bl,BYTE PTR [esi+eax*2]
  410c7e:	or     bh,BYTE PTR ds:0xf7a1106
  410c84:	adc    ah,BYTE PTR [ebp-0x46]
  410c87:	jns    0x410c69
  410c89:	jg     0x410cc2
  410c8b:	stos   DWORD PTR es:[edi],eax
  410c8c:	ret    0x771c
  410c8f:	mov    edi,0xdd4a4609
  410c94:	call   0xc6e5:0xafdd4420
  410c9b:	rol    DWORD PTR [esi],0xd9
  410c9e:	cmp    ch,BYTE PTR [edi+0x5250c586]
  410ca4:	jnp    0x410ca2
  410ca6:	pop    ebx
  410ca7:	xchg   esp,eax
  410ca8:	pop    ss
  410ca9:	lea    ebx,[edi+0x247e75c4]
  410caf:	fbld   TBYTE PTR [ebx]
  410cb1:	mov    edi,0x2a054ba6
  410cb6:	call   0x3d1e:0x2212fa3
  410cbd:	lea    esi,[ecx+0x65e1e85d]
  410cc3:	adc    eax,0xe6cb8e94
  410cc8:	mov    ch,0x13
  410cca:	push   ecx
  410ccb:	dec    esi
  410ccc:	aaa    
  410ccd:	mov    bl,0xe8
  410ccf:	loope  0x410d02
  410cd1:	push   0xffffffd2
  410cd3:	mov    ebx,0x50d99aa9
  410cd8:	in     al,0xc
  410cda:	cli    
  410cdb:	(bad)  
  410cdc:	(bad)  
  410cdd:	stc    
  410cde:	inc    esi
  410cdf:	(bad)  
  410ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ce1:	jecxz  0x410cfe
  410ce3:	imul   ebx,DWORD PTR [edi],0x5f06151d
  410ce9:	jg     0x410d5e
  410ceb:	lods   al,BYTE PTR ds:[esi]
  410cec:	out    0xbe,al
  410cee:	leave  
  410cef:	lea    edi,[edx+ebp*1]
  410cf2:	mov    dh,0x7f
  410cf4:	adc    BYTE PTR [edi-0x12d5af98],dl
  410cfa:	mov    al,0x60
  410cfc:	dec    eax
  410cfd:	pop    ebx
  410cfe:	push   edx
  410cff:	jae    0x410cf4
  410d01:	mov    ebp,0xc822c968
  410d06:	mov    ds:0xa1f95903,al
  410d0b:	out    dx,al
  410d0c:	fstp   DWORD PTR [ebx+ecx*8]
  410d0f:	mov    ?,ecx
  410d11:	inc    esp
  410d12:	ins    DWORD PTR es:[edi],dx
  410d13:	imul   esi,DWORD PTR [edi+0x6ca5afad],0xffffffcb
  410d1a:	push   0xc0ed842e
  410d1f:	xor    BYTE PTR [ebp+0x1dbb65cf],ch
  410d25:	mov    ecx,0xc6196ffe
  410d2a:	addr16 inc ebp
  410d2c:	sbb    BYTE PTR [esi+0x5f],ah
  410d2f:	jo     0x410cb4
  410d31:	pop    ebp
  410d32:	bnd jb 0x410d35
  410d35:	imul   esi,DWORD PTR [ebx+0x28317b1d],0xaadce7cf
  410d3f:	pop    es
  410d40:	add    BYTE PTR [ecx+0x4a2a3c0f],bh
  410d46:	sbb    al,0xbc
  410d48:	test   eax,0x4831782c
  410d4d:	es (bad) 
  410d4f:	mov    esi,0xda168115
  410d54:	(bad)  
  410d55:	fiadd  DWORD PTR [ebp+0x6d4d182b]
  410d5b:	in     eax,dx
  410d5c:	inc    edi
  410d5d:	cmovno esi,ebx
  410d60:	xor    BYTE PTR [edi+0x6fa9f837],bh
  410d66:	or     ebx,DWORD PTR [eax]
  410d68:	rcl    BYTE PTR [edi+0x1c],0xbb
  410d6c:	fdivr  DWORD PTR [edx]
  410d6e:	outs   dx,DWORD PTR ds:[esi]
  410d6f:	(bad)  
  410d70:	xchg   edx,eax
  410d71:	(bad)  
  410d72:	jae    0x410d77
  410d74:	push   ds
  410d75:	pop    esi
  410d76:	jl     0x410dbf
  410d78:	push   esi
  410d79:	popa   
  410d7a:	inc    edx
  410d7b:	and    bl,BYTE PTR [edi-0x6bd94972]
  410d81:	xchg   esi,eax
  410d82:	inc    esp
  410d83:	and    DWORD PTR [edx],edi
  410d85:	fwait
  410d86:	mov    gs,WORD PTR [esi+eax*8+0x3b]
  410d8a:	push   esi
  410d8b:	les    eax,FWORD PTR [ecx]
  410d8d:	xchg   ebp,eax
  410d8e:	cld    
  410d8f:	pop    edx
  410d90:	stc    
  410d91:	and    ecx,esi
  410d93:	aam    0x32
  410d95:	jno    0x410dfb
  410d97:	mov    ebp,0x76079b3e
  410d9c:	je     0x410d3d
  410d9e:	lock cmp ah,BYTE PTR [ecx-0x3bfe6370]
  410da5:	test   ch,dh
  410da7:	fild   DWORD PTR [esi+edi*8-0x18]
  410dab:	sub    BYTE PTR [ecx-0x3fd14b59],ah
  410db1:	mov    edx,0x2b0caf05
  410db6:	sar    bl,1
  410db8:	adc    al,0xb6
  410dba:	pop    eax
  410dbb:	retf   
  410dbc:	clc    
  410dbd:	ja     0x410dfe
  410dbf:	xor    al,0xa
  410dc1:	sub    ecx,DWORD PTR [edi+0x5c]
  410dc4:	ret    0xcedc
  410dc7:	xor    eax,0x247eb26e
  410dcc:	outs   dx,BYTE PTR ds:[esi]
  410dcd:	sbb    bx,si
  410dd0:	jge    0x410e19
  410dd2:	stos   BYTE PTR es:[edi],al
  410dd3:	xchg   esi,eax
  410dd4:	adc    eax,0x191c4cef
  410dd9:	lea    edx,[eax+0x63fb6b08]
  410ddf:	mov    BYTE PTR [ecx],dl
  410de1:	mov    ah,0x21
  410de3:	inc    esi
  410de4:	and    DWORD PTR [esi],edx
  410de6:	das    
  410de7:	dec    esi
  410de8:	ins    DWORD PTR es:[edi],dx
  410de9:	es mov ecx,0x8b372a22
  410def:	jns    0x410dd2
  410df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410df2:	iret   
  410df3:	pop    eax
  410df4:	in     eax,dx
  410df5:	push   esi
  410df6:	xchg   DWORD PTR [ecx-0x4b],edi
  410df9:	imul   ecx,DWORD PTR [edi],0xffffff81
  410dfc:	mov    esp,0x1274c91a
  410e01:	jns    0x410e2d
  410e03:	aas    
  410e04:	xor    dh,BYTE PTR [ecx+0x1e5db2bb]
  410e0a:	jle    0x410dcb
  410e0c:	xchg   esp,eax
  410e0d:	push   ebx
  410e0e:	dec    edi
  410e0f:	pop    ecx
  410e10:	sbb    BYTE PTR [ecx+esi*4],cl
  410e13:	shl    DWORD PTR [edx],cl
  410e15:	or     ecx,edx
  410e17:	retf   
  410e18:	les    ecx,FWORD PTR [edx-0x62bb073d]
  410e1e:	and    al,0x57
  410e20:	loop   0x410db9
  410e22:	xor    eax,0x9f9ac14c
  410e27:	test   eax,0xb59d6b72
  410e2c:	add    ch,dh
  410e2e:	outs   dx,BYTE PTR ds:[esi]
  410e2f:	les    ebp,FWORD PTR [esi+0x52]
  410e32:	push   edx
  410e33:	adc    ecx,ecx
  410e35:	fnstcw WORD PTR [esp+eiz*2+0x3a]
  410e39:	sbb    ecx,DWORD PTR [esi+edi*1-0x34]
  410e3d:	pop    ecx
  410e3e:	stc    
  410e3f:	mov    edi,0x585cf4eb
  410e44:	div    DWORD PTR [edi+0x2416687d]
  410e4a:	nop
  410e4b:	jae    0x410e8f
  410e4d:	loopne 0x410ea3
  410e4f:	ins    DWORD PTR es:[edi],dx
  410e50:	repz push edi
  410e52:	mov    esp,0x4171c60d
  410e57:	jmp    0x410dee
  410e59:	mov    esp,0xe3d0366a
  410e5e:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  410e60:	xchg   ebx,eax
  410e61:	mov    bh,BYTE PTR [ecx-0x7b]
  410e64:	dec    ecx
  410e65:	jnp    0x410ed3
  410e67:	push   ebx
  410e68:	pop    ss
  410e69:	jg     0x410ea6
  410e6b:	test   al,0x39
  410e6d:	xchg   ebx,eax
  410e6e:	mov    ebx,0x42b4ee28
  410e73:	test   ebp,edx
  410e75:	xlat   BYTE PTR ds:[ebx]
  410e76:	pop    ebp
  410e78:	mov    ch,BYTE PTR [edi+0x4100a04f]
  410e7e:	dec    esi
  410e7f:	xchg   BYTE PTR [eax+eiz*2+0x28],dh
  410e83:	mov    edi,DWORD PTR [edx-0x29]
  410e86:	lods   eax,DWORD PTR ds:[esi]
  410e87:	retf   0x94dd
  410e8a:	cmp    DWORD PTR [edx+0x1c6d5128],ebx
  410e90:	out    0xad,al
  410e92:	fimul  WORD PTR [ebx+0x1b51328e]
  410e98:	and    BYTE PTR [esi-0x20],bh
  410e9b:	jnp    0x410f09
  410e9d:	divps  xmm4,XMMWORD PTR [edi]
  410ea0:	aas    
  410ea1:	xor    BYTE PTR [edx],0xd6
  410ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ea5:	mov    cl,0x7d
  410ea7:	pop    ebp
  410ea8:	sbb    BYTE PTR [ebx-0x4164a588],0x32
  410eaf:	pop    esp
  410eb0:	repnz adc eax,0xe3c9ba9
  410eb6:	mov    dh,0x1
  410eb8:	jo     0x410e8a
  410eba:	xor    dl,BYTE PTR [edi+0x532de208]
  410ec0:	sti    
  410ec1:	call   0x2471c354
  410ec6:	dec    ecx
  410ec7:	or     ah,BYTE PTR [edi-0x47]
  410eca:	lea    edi,[edi-0x6b387daa]
  410ed0:	jmp    0xe134:0x9a44c2a0
  410ed7:	xor    DWORD PTR [edi+ecx*2],edi
  410eda:	sub    eax,0xd63a7d83
  410edf:	xchg   edi,eax
  410ee0:	mov    eax,gs:0xac57881f
  410ee6:	pop    eax
  410ee7:	repz pop es
  410ee9:	inc    eax
  410eea:	ss in  eax,0x5c
  410eed:	pusha  
  410eee:	loope  0x410f33
  410ef0:	in     al,0xc9
  410ef2:	shl    DWORD PTR [eax+0x76],1
  410ef5:	lsl    esp,ax
  410ef8:	xchg   DWORD PTR [ebp+0x16],esp
  410efb:	jge    0x410f14
  410efd:	iret   
  410efe:	jno    0x410ec5
  410f00:	(bad)  
  410f01:	fidivr WORD PTR [ecx+0x28]
  410f04:	fwait
  410f05:	add    eax,0x2f616dfa
  410f0a:	call   0x4a855210
  410f0f:	iret   
  410f10:	fwait
  410f11:	push   edi
  410f12:	adc    al,0xa0
  410f14:	inc    esp
  410f15:	sub    BYTE PTR [ebp-0x63f53ac],dh
  410f1b:	je     0x410f97
  410f1d:	and    cl,BYTE PTR [edx-0x52]
  410f20:	mov    DWORD PTR [eax+0x25],esi
  410f23:	call   0xb1a07b3a
  410f28:	inc    edx
  410f29:	ret    
  410f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f2b:	add    DWORD PTR [ebx+0x15],ebx
  410f2e:	gs push 0x3c3c1bb1
  410f34:	xchg   BYTE PTR ds:[ebp-0x50],bh
  410f38:	enter  0x31c1,0x66
  410f3c:	sub    eax,0xe145021b
  410f41:	enter  0x34c9,0x62
  410f45:	pop    ecx
  410f46:	xor    esp,esp
  410f48:	ins    BYTE PTR es:[edi],dx
  410f49:	out    dx,al
  410f4a:	outs   dx,DWORD PTR gs:[esi]
  410f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f4d:	and    al,0x5e
  410f4f:	(bad)  
  410f50:	xchg   esi,eax
  410f51:	cs popf 
  410f53:	stc    
  410f54:	out    0xc7,eax
  410f56:	mov    eax,0x557f6e4f
  410f5b:	pop    esp
  410f5c:	push   esi
  410f5d:	mov    al,0x47
  410f5f:	outs   dx,BYTE PTR ds:[esi]
  410f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f61:	icebp  
  410f62:	lock mov WORD PTR [esi],es
  410f65:	mov    ecx,0xca4260fb
  410f6a:	je     0x410f0e
  410f6c:	pop    esp
  410f6d:	ficomp DWORD PTR [ecx]
  410f6f:	xchg   ecx,eax
  410f70:	or     bl,BYTE PTR ds:0x403eadf4
  410f76:	gs pop esi
  410f78:	test   BYTE PTR [edx-0x5d9848fa],0xe6
  410f7f:	repnz sbb BYTE PTR [ebp+eax*2-0x2d],dh
  410f84:	loop   0x410f45
  410f86:	jmp    0x7d949873
  410f8b:	dec    eax
  410f8d:	or     eax,0xca770483
  410f92:	inc    edi
  410f93:	xor    DWORD PTR [esp+eiz*4],0xc5252397
  410f9a:	inc    edi
  410f9b:	mov    esp,0x661ca0a8
  410fa1:	mov    edx,0xe7d5d40a
  410fa6:	xchg   esi,eax
  410fa7:	ret    0xc770
  410faa:	cmp    DWORD PTR [esi],esp
  410fac:	sbb    ebp,DWORD PTR [ebx]
  410fae:	dec    esp
  410faf:	mov    bl,0xad
  410fb1:	push   ebx
  410fb2:	pop    ss
  410fb3:	xchg   ecx,eax
  410fb4:	mov    esp,DWORD PTR [ecx]
  410fb6:	arpl   WORD PTR [edx+0x5c],bp
  410fb9:	(bad)  
  410fba:	jl     0x410fdd
  410fbc:	(bad)  
  410fbd:	sbb    DWORD PTR [esi+0x72d4c880],eax
  410fc3:	scas   eax,DWORD PTR es:[edi]
  410fc4:	jge    0x411033
  410fc6:	jmp    0x52f1d191
  410fcb:	mov    edi,0x3f29f968
  410fd0:	or     al,0x38
  410fd2:	adc    al,BYTE PTR [ebx+0x77f13d]
  410fd8:	cld    
  410fd9:	jg     0x410f97
  410fdb:	adc    eax,esp
  410fdd:	dec    edi
  410fde:	dec    edx
  410fdf:	jb     0x41105c
  410fe1:	mov    bh,0xda
  410fe3:	ds (bad) 
  410fe5:	mov    bh,0xa8
  410fe7:	fwait
  410fe8:	xor    DWORD PTR [esi+0x47],ebx
  410feb:	adc    al,0xa9
  410fed:	ficomp DWORD PTR [esi+0x23]
  410ff0:	sub    esi,ebx
  410ff2:	aaa    
  410ff3:	inc    edx
  410ff4:	adc    esp,DWORD PTR [ebx+0x7b31dc2c]
  410ffa:	inc    edx
  410ffb:	mov    ch,0xb1
  410ffd:	and    eax,ecx
  410fff:	cmp    BYTE PTR [edx-0x7273d2ae],ch
  411005:	jge    0x410fb2
  411007:	cmp    dl,bh
  411009:	sbb    al,0x23
  41100b:	jno    0x411053
  41100d:	sub    al,0xee
  41100f:	jo     0x410fdf
  411011:	add    BYTE PTR [esi-0x18],bl
  411014:	(bad)  
  411015:	jno    0x41101e
  411017:	rcl    esp,0x5a
  41101a:	xor    eax,0x1f0d085
  41101f:	in     al,dx
  411020:	dec    ecx
  411021:	mov    edx,0xb2fd00ae
  411026:	pop    edx
  411027:	sbb    ebx,eax
  411029:	mov    cl,BYTE PTR [edi-0x37]
  41102c:	push   ebx
  41102d:	lahf   
  41102e:	ror    BYTE PTR [edx],0x87
  411031:	xchg   esi,eax
  411032:	jnp    0x4110b3
  411034:	cmp    DWORD PTR [edi+0x5223d8b6],ecx
  41103a:	push   eax
  41103b:	in     eax,dx
  41103c:	xor    al,0x7e
  41103e:	cmp    al,0xd2
  411040:	adc    edx,DWORD PTR [edi-0x43]
  411043:	and    DWORD PTR [edi],0x84d0d06a
  411049:	xchg   edi,eax
  41104a:	call   0x7a0e5e32
  41104f:	pop    ebp
  411050:	push   0x28
  411052:	sbb    BYTE PTR [ebp+0x6a88ea67],dl
  411058:	inc    edx
  411059:	stc    
  41105a:	pushf  
  41105b:	cdq    
  41105c:	mov    ah,0x85
  41105e:	fiadd  WORD PTR [edi+0x5acd3318]
  411064:	xor    ebx,DWORD PTR [eax+0x4c]
  411067:	cmp    al,bh
  411069:	adc    BYTE PTR [eax],cl
  41106b:	in     eax,dx
  41106c:	outs   dx,DWORD PTR ds:[esi]
  41106d:	pop    edi
  41106e:	and    eax,DWORD PTR [ebx-0xf]
  411071:	jbe    0x4110ee
  411073:	mov    edx,0x60b60c89
  411078:	dec    eax
  411079:	pushf  
  41107a:	mov    ds:0xbd958ccf,al
  41107f:	push   0x5
  411081:	xchg   ebx,eax
  411082:	dec    esi
  411083:	sar    BYTE PTR [edx+0x62],0x36
  411087:	push   ebp
  411088:	loopne 0x411031
  41108a:	xchg   DWORD PTR [ecx-0x1de44bb8],esi
  411090:	push   esp
  411091:	or     BYTE PTR ds:[edx+0x532d76b],al
  411098:	ins    DWORD PTR es:[edi],dx
  411099:	out    0x33,eax
  41109b:	pop    esp
  41109c:	jno    0x4110cb
  41109e:	mov    DWORD PTR [eax],edx
  4110a0:	xchg   ebx,eax
  4110a1:	or     eax,0xc2626f84
  4110a6:	fmul   QWORD PTR [eax-0x3e]
  4110a9:	dec    ebx
  4110aa:	push   cs
  4110ab:	popa   
  4110ac:	push   es
  4110ad:	sbb    eax,0x365b5e78
  4110b2:	dec    esi
  4110b3:	lods   al,BYTE PTR ds:[esi]
  4110b4:	add    BYTE PTR [esi+0x70],ch
  4110b7:	push   DWORD PTR [ecx-0x57]
  4110ba:	cmp    bl,BYTE PTR [eax+0x23]
  4110bd:	jb     0x411130
  4110bf:	cmp    eax,ebp
  4110c1:	add    ah,BYTE PTR [ecx]
  4110c3:	aad    0x2
  4110c5:	rcl    dl,1
  4110c7:	idiv   BYTE PTR [edi+edi*4-0x63]
  4110cb:	adc    eax,0xad347627
  4110d0:	sar    ecx,0x61
  4110d3:	fidiv  DWORD PTR [esi+0x6b3d11cf]
  4110d9:	stos   BYTE PTR es:[edi],al
  4110da:	push   edx
  4110db:	fst    st(4)
  4110dd:	cmp    al,0x45
  4110df:	inc    edx
  4110e0:	lods   al,BYTE PTR ds:[esi]
  4110e1:	add    al,BYTE PTR [esp+esi*1]
  4110e4:	adc    esi,edx
  4110e6:	push   0x9
  4110e8:	out    0xc,al
  4110ea:	add    eax,0xec2d8af5
  4110ef:	sbb    ax,0x30c6
  4110f3:	inc    ecx
  4110f4:	jbe    0x4110c1
  4110f6:	(bad)  
  4110f7:	dec    edx
  4110f8:	and    DWORD PTR [ecx],edi
  4110fa:	popf   
  4110fb:	cmp    BYTE PTR [edx-0xd59f9c1],dh
  411101:	aam    0x0
  411103:	xchg   edi,eax
  411104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411105:	inc    edi
  411106:	mov    ds:0xbe95adb4,eax
  41110b:	and    esp,esi
  41110d:	cmp    dl,al
  41110f:	jo     0x41115b
  411111:	out    dx,al
  411112:	xchg   edx,eax
  411113:	pop    ebp
  411114:	loope  0x4110da
  411116:	sar    ebp,cl
  411118:	xor    ah,ah
  41111a:	adc    al,0x2e
  41111c:	jnp    0x411111
  41111e:	mov    cr2,ebx
  411121:	pop    edx
  411122:	jmp    0x411139
  411124:	fcom   DWORD PTR [ecx-0x5d83c67d]
  41112a:	enter  0x7e6a,0x66
  41112e:	cli    
  41112f:	mov    ebp,0xa79bdad8
  411134:	gs sub BYTE PTR cs:[esi-0x13203fba],0xba
  41113d:	jne    0x41114d
  41113f:	mov    BYTE PTR [ebp+0x3d90889a],0x4b
  411146:	mov    bh,0xd8
  411148:	xchg   edx,eax
  411149:	call   0xf70469f2
  41114e:	stc    
  41114f:	mov    bh,0xbc
  411151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411152:	dec    eax
  411153:	mov    eax,ds:0x2a429ee6
  411158:	xlat   BYTE PTR ds:[ebx]
  411159:	lods   al,BYTE PTR ds:[esi]
  41115a:	dec    edx
  41115b:	xor    esp,ebx
  41115d:	dec    eax
  41115e:	push   eax
  41115f:	push   ebp
  411160:	push   ebx
  411161:	inc    ebx
  411162:	jmp    0x95f60969
  411167:	test   al,0xde
  41116a:	(bad)  [ebp-0x28]
  41116d:	imul   edi,DWORD PTR [edx+0x70],0xfffffff4
  411171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411172:	inc    edx
  411174:	adc    BYTE PTR [ecx+ecx*2-0x8],al
  411178:	or     DWORD PTR [ebp+0x39],0xffffffd3
  41117c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41117d:	test   eax,0x49dbc72c
  411182:	push   es
  411183:	mov    esi,DWORD PTR [esi]
  411185:	mov    cl,0xb3
  411187:	mov    ds:0xcaa8908e,eax
  41118c:	retf   
  41118d:	call   0x32553f9
  411192:	pop    eax
  411193:	mov    ch,al
  411195:	sahf   
  411196:	xchg   ebx,eax
  411197:	(bad)  
  411198:	out    dx,eax
  411199:	cmp    eax,0x905fedd0
  41119e:	jge    0x411176
  4111a0:	lahf   
  4111a1:	xchg   esi,eax
  4111a2:	clc    
  4111a3:	xchg   ebp,eax
  4111a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111a6:	jbe    0x4111f3
  4111a8:	aam    0xe8
  4111aa:	sub    eax,0x565444
  4111af:	mov    edx,0x15300794
  4111b4:	and    al,0x83
  4111b6:	lea    esi,[ebp-0x17c8db12]
  4111bc:	inc    edx
  4111bd:	data16 je 0x41120e
  4111c0:	(bad)  
  4111c2:	push   ds
  4111c3:	push   edi
  4111c4:	adc    BYTE PTR [ecx-0x12],bh
  4111c7:	xchg   edx,eax
  4111c8:	or     esi,eax
  4111ca:	or     al,0xbd
  4111cc:	in     eax,dx
  4111cd:	in     eax,0x92
  4111cf:	mov    eax,0xb8dd4221
  4111d4:	call   0x2034:0x294b0285
  4111db:	leave  
  4111dc:	xchg   esi,eax
  4111dd:	cmc    
  4111de:	sub    BYTE PTR [esp+eax*8-0x983e29a],bl
  4111e5:	pop    esp
  4111e6:	pushf  
  4111e7:	rol    ch,cl
  4111e9:	or     al,0x5e
  4111eb:	adc    cl,BYTE PTR [esi-0x40cf51e6]
  4111f1:	and    DWORD PTR [ebx-0x4],esi
  4111f4:	inc    edi
  4111f5:	sti    
  4111f6:	jb     0x4111dc
  4111f8:	test   al,0xb8
  4111fa:	scas   al,BYTE PTR es:[edi]
  4111fb:	dec    esi
  4111fc:	mov    bh,0xc8
  4111fe:	in     eax,dx
  4111ff:	jge    0x41118c
  411201:	mov    dl,0xe2
  411203:	jg     0x4111f6
  411205:	(bad)  
  411206:	mov    al,0xc7
  411208:	unpcklps xmm7,XMMWORD PTR [esi]
  41120b:	retf   0xec79
  41120e:	mov    cl,0x7
  411210:	xchg   DWORD PTR [ebp+0x790d0fa4],ebx
  411216:	retf   
  411217:	sub    al,BYTE PTR [ebx]
  411219:	mov    esi,0x80b8984
  41121e:	or     eax,0x103d04bc
  411223:	mov    ah,0x64
  411225:	lods   al,BYTE PTR ds:[esi]
  411226:	mov    es,WORD PTR [esi+0x50]
  411229:	in     eax,dx
  41122a:	dec    eax
  41122b:	iret   
  41122c:	mov    ecx,0xb35b9b79
  411231:	pusha  
  411232:	jge    0x411290
  411234:	inc    edx
  411235:	or     eax,0x240df270
  41123a:	mov    WORD PTR [esi-0x846ff06],di
  411241:	(bad)  
  411243:	jbe    0x41122d
  411245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411246:	inc    edi
  411247:	pop    edi
  411248:	push   0xffffffc6
  41124a:	dec    esi
  41124b:	repnz or DWORD PTR fs:[esi+ecx*2+0x6f],esi
  411251:	popf   
  411252:	shl    BYTE PTR [ebx],0xdc
  411255:	mov    bh,0xc9
  411257:	mov    cl,0x1a
  411259:	dec    edx
  41125a:	mov    ah,BYTE PTR [eax]
  41125c:	loop   0x41120d
  41125e:	loope  0x41123e
  411260:	push   0x7fadc7b8
  411265:	inc    ebx
  411266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411267:	pop    ecx
  411268:	sub    al,BYTE PTR [edi-0x10c7cf97]
  41126e:	or     al,BYTE PTR [ecx+0x7c]
  411271:	pop    eax
  411273:	mov    gs,WORD PTR [esi+0x74]
  411276:	push   edi
  411277:	fs xchg esp,eax
  411279:	xchg   edi,eax
  41127a:	xchg   ecx,eax
  41127b:	and    DWORD PTR [esp+ecx*4+0x5d],0x36a775c0
  411283:	xchg   esp,eax
  411284:	pop    ds
  411285:	fst    QWORD PTR [esi+0x2]
  411288:	ret    
  411289:	ror    DWORD PTR [edi-0x61],cl
  41128c:	retf   0x608e
  41128f:	aaa    
  411290:	rcl    DWORD PTR [eax-0x56],1
  411293:	cdq    
  411294:	sbb    al,0x2a
  411296:	mov    esp,0x65d9b56
  41129b:	jno    0x41128c
  41129d:	cs loop 0x41128f
  4112a0:	ror    dh,0x3f
  4112a3:	add    edi,DWORD PTR [ecx*4+0x7f90233f]
  4112aa:	adc    dl,BYTE PTR [eax]
  4112ac:	jle    0x411263
  4112ae:	sbb    dl,BYTE PTR [ecx-0x1f]
  4112b1:	xchg   esi,eax
  4112b2:	call   0xae48:0xc7f4e46f
  4112b9:	xchg   ecx,esp
  4112bb:	test   al,0x2a
  4112bd:	and    eax,DWORD PTR [edi+0x4c]
  4112c0:	loop   0x4112d8
  4112c2:	xor    al,bh
  4112c4:	ins    DWORD PTR es:[edi],dx
  4112c5:	outs   dx,DWORD PTR ds:[esi]
  4112c6:	and    ebp,esp
  4112c8:	scas   eax,DWORD PTR es:[edi]
  4112c9:	push   ds
  4112ca:	scas   al,BYTE PTR es:[edi]
  4112cb:	pop    DWORD PTR [ebx+0xc1cc41c]
  4112d1:	fisttp WORD PTR [ebx+edx*8+0x373d2cc6]
  4112d8:	or     eax,0x3f566597
  4112dd:	call   0x9e53e3bc
  4112e2:	les    edx,FWORD PTR ds:0x9ff722e
  4112e8:	ins    BYTE PTR es:[edi],dx
  4112e9:	mov    eax,0xca63d389
  4112ee:	inc    ebp
  4112ef:	int3   
  4112f0:	jmp    0x411360
  4112f2:	nop
  4112f3:	sbb    eax,0x8492f119
  4112f8:	clc    
  4112f9:	imul   esi,DWORD PTR [ebx],0x4fb123f6
  4112ff:	pop    ebp
  411300:	in     al,dx
  411301:	aad    0xe8
  411303:	mov    ?,ebp
  411305:	sbb    eax,0xaa97e469
  41130a:	enter  0x6733,0x9c
  41130e:	fst    DWORD PTR [ebp+0x52]
  411311:	pop    es
  411312:	jp     0x41133d
  411314:	stos   DWORD PTR es:[edi],eax
  411315:	in     al,0x66
  411317:	add    eax,0x16cc8319
  41131c:	xor    bl,BYTE PTR [esi-0x94c31c3]
  411322:	jae    0x41138e
  411324:	sbb    eax,0x49989a09
  411329:	cmp    DWORD PTR [ebp+0x2b3e1e08],esi
  41132f:	push   DWORD PTR [edx-0x62c1f89d]
  411335:	loopne 0x411386
  411337:	fdiv   DWORD PTR [edx]
  411339:	das    
  41133a:	push   ecx
  41133b:	sbb    eax,0xfb2ff100
  411340:	das    
  411341:	fwait
  411342:	cld    
  411343:	dec    edi
  411344:	out    dx,al
  411345:	ds push ebx
  411347:	xor    bh,BYTE PTR [esi-0x61d17d88]
  41134d:	mov    dh,BYTE PTR [ebx]
  41134f:	jb     0x41131d
  411351:	ss sub eax,0x4798c992
  411357:	mov    ecx,0x294187e9
  41135c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41135d:	inc    ebx
  41135e:	push   0x8ba49cdd
  411363:	lds    ebx,FWORD PTR [ecx]
  411365:	dec    eax
  411366:	imul   esi,DWORD PTR [ebx],0xafab5c86
  41136c:	cwde   
  41136d:	xchg   esp,eax
  41136e:	xchg   esp,eax
  41136f:	mov    edi,0x1360967f
  411374:	pop    eax
  411375:	lahf   
  411376:	rcr    BYTE PTR [esi+eax*8],1
  411379:	(bad)  [ecx+eax*4+0x17c83c63]
  411380:	lods   eax,DWORD PTR ds:[esi]
  411381:	inc    edx
  411382:	push   0x33e7346d
  411387:	arpl   WORD PTR [eax-0x68dcb1d6],ax
  41138d:	add    al,0xad
  41138f:	sbb    DWORD PTR [ecx+0x276c07],eax
  411395:	xlat   BYTE PTR ds:[ebx]
  411396:	stc    
  411397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411398:	leave  
  411399:	loop   0x411323
  41139b:	mov    eax,ds:0xddbf70e4
  4113a0:	add    bl,ch
  4113a2:	cmp    al,0x26
  4113a4:	fild   QWORD PTR [edi+0x45]
  4113a7:	ja     0x4113da
  4113a9:	ror    DWORD PTR [edx+0x18b4055f],1
  4113af:	adc    ah,BYTE PTR [edx]
  4113b1:	add    BYTE PTR [eax-0x8],bl
  4113b4:	sub    dh,BYTE PTR [edi+ecx*2-0x63cc46d7]
  4113bb:	cmp    esi,DWORD PTR [edx+0x60cdadf5]
  4113c1:	cli    
  4113c2:	ret    0x76e0
  4113c5:	xor    al,0x39
  4113c7:	xor    ah,ah
  4113c9:	sbb    edi,ebx
  4113cb:	cmc    
  4113cc:	mov    ebp,0x2785fdfd
  4113d1:	jnp    0x411410
  4113d3:	sub    ch,0xfe
  4113d6:	nop
  4113d7:	dec    ecx
  4113d8:	jo     0x4113ca
  4113da:	and    DWORD PTR [edx],0x2f
  4113dd:	inc    ebp
  4113de:	mov    al,0x5c
  4113e0:	jns    0x411365
  4113e2:	ret    0xe8e0
  4113e5:	jb     0x411415
  4113e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113e8:	iret   
  4113e9:	scas   al,BYTE PTR es:[edi]
  4113ea:	push   esi
  4113eb:	xchg   edi,eax
  4113ec:	jp     0x411415
  4113ee:	retf   0xc6cd
  4113f1:	pushf  
  4113f2:	push   ds
  4113f3:	sub    cl,ch
  4113f5:	popf   
  4113f6:	mov    edx,ss
  4113f8:	or     al,0x33
  4113fa:	fisubr DWORD PTR [esi]
  4113fc:	daa    
  4113fd:	or     al,0x67
  4113ff:	mov    ah,0x84
  411401:	lahf   
  411402:	(bad)  
  411403:	int    0xe6
  411405:	cwde   
  411406:	inc    eax
  411407:	scas   al,BYTE PTR es:[edi]
  411408:	or     eax,0x1b33460d
  41140d:	(bad)
  411412:	loope  0x41145a
  411414:	xchg   DWORD PTR [eax+esi*8],eax
  411417:	sti    
  411418:	mov    dl,0xfe
  41141a:	inc    edx
  41141b:	fxch   st(1)
  41141d:	call   0xbdf11b63
  411422:	fmul   DWORD PTR [eax]
  411424:	sub    eax,0x18
  411427:	mov    ds:0x43c6b6b4,al
  41142c:	test   DWORD PTR [ebx+0x63fe483c],ebp
  411432:	jmp    0x7ccd6885
  411437:	cmp    ebp,DWORD PTR [eax+0x7d]
  41143a:	xchg   edi,eax
  41143b:	push   ebx
  41143c:	xchg   al,ch
  41143e:	dec    esp
  41143f:	les    esp,FWORD PTR [ebx+ecx*1-0x59df00dc]
  411446:	cmp    eax,0xdcf583cb
  41144b:	inc    ecx
  41144c:	pop    edi
  41144d:	loop   0x4113fb
  41144f:	test   DWORD PTR [ecx],0xcfd8da29
  411455:	mov    ebx,DWORD PTR [edx-0x3]
  411458:	fwait
  411459:	mov    dl,0xf1
  41145b:	xchg   DWORD PTR [ebx],eax
  41145d:	dec    ecx
  41145e:	mov    ecx,0x8fce1e60
  411463:	inc    ebp
  411464:	inc    esi
  411465:	(bad)  
  411466:	ficomp DWORD PTR fs:[eax+0x14]
  41146a:	push   ebx
  41146b:	scas   al,BYTE PTR es:[edi]
  41146c:	sbb    eax,0xb3cf9fbe
  411472:	push   cs
  411473:	add    ah,BYTE PTR ds:0x4651b28d
  411479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41147a:	xchg   edi,eax
  41147b:	mov    cl,0x77
  41147d:	out    0xb4,eax
  41147f:	or     DWORD PTR [ebx+0x599b9a14],eax
  411485:	jnp    0x4114cc
  411487:	mov    bh,bh
  411489:	jecxz  0x411492
  41148b:	jge    0x41150b
  41148d:	int3   
  41148e:	int    0x3e
  411490:	lods   eax,DWORD PTR ds:[esi]
  411491:	sbb    eax,0xd9b040db
  411496:	lods   eax,DWORD PTR gs:[esi]
  411498:	cmp    edx,ebx
  41149a:	stos   DWORD PTR es:[edi],eax
  41149b:	bnd jnp 0x41145b
  41149e:	cmc    
  41149f:	data16 fidivr WORD PTR [ebx+edx*2]
  4114a3:	jcxz   0x411474
  4114a6:	aad    0x31
  4114a8:	mov    ch,0x7d
  4114aa:	dec    ecx
  4114ab:	jecxz  0x41143a
  4114ad:	test   al,0xe1
  4114af:	pop    ss
  4114b0:	sub    ebp,ebx
  4114b2:	mov    ch,BYTE PTR [ebx]
  4114b4:	dec    esi
  4114b5:	mov    ch,0x48
  4114b7:	dec    ecx
  4114b8:	xchg   edx,eax
  4114b9:	test   DWORD PTR [edx],edx
  4114bb:	bound  esi,QWORD PTR [esi]
  4114bd:	aas    
  4114be:	std    
  4114bf:	push   0x2b298b64
  4114c4:	mov    ds,WORD PTR [eax-0x41]
  4114c7:	frstor [ebx+esi*1]
  4114ca:	dec    edx
  4114cb:	pushf  
  4114cc:	xchg   esi,eax
  4114cd:	jo     0x411475
  4114cf:	fs mov ch,0x7f
  4114d2:	pop    ebx
  4114d3:	or     eax,0x60509759
  4114d8:	sar    BYTE PTR [ecx],cl
  4114da:	imul   ebp,ecx,0x3
  4114dd:	mov    ebx,0x9d4d95da
  4114e2:	imul   esp,ebx,0xdfe5c135
  4114e8:	or     DWORD PTR [esi+0x6],ebx
  4114eb:	xor    eax,0x73fd50da
  4114f0:	out    0x2c,eax
  4114f2:	push   ebp
  4114f3:	or     BYTE PTR [ebp-0x42],bl
  4114f6:	mov    DWORD PTR ds:0xa7f647b3,edx
  4114fc:	or     BYTE PTR [ebp+ecx*2-0x1d],ch
  411500:	xchg   edi,eax
  411501:	jp     0x411512
  411503:	mov    edx,DWORD PTR [ebp-0x3a]
  411506:	push   0x70
  411508:	sub    edx,DWORD PTR [eax-0x5cff2520]
  41150e:	adc    DWORD PTR [ebx+0x17],0x3c
  411512:	jno    0x4114cd
  411514:	ds pop es
  411516:	xchg   edx,eax
  411517:	xchg   esi,eax
  411518:	out    0x5,eax
  41151a:	xor    ecx,edi
  41151c:	xchg   esi,eax
  41151d:	dec    edi
  41151e:	sub    BYTE PTR [ecx+0x12],dh
  411521:	div    DWORD PTR [ebx]
  411523:	xor    eax,0xe6055106
  411528:	and    BYTE PTR [eax+0x7a568e42],dl
  41152e:	add    BYTE PTR [edi+0x45af4bef],bl
  411534:	lds    esi,FWORD PTR [esi+0x33a385a1]
  41153a:	pop    ds
  41153b:	pop    edx
  41153c:	inc    edx
  41153d:	mov    ch,0x61
  41153f:	inc    ebp
  411540:	inc    eax
  411541:	fnstenv [edx-0x77405adf]
  411547:	sbb    BYTE PTR [ebx+0x65ba3c90],dl
  41154d:	pop    ecx
  41154e:	fisttp QWORD PTR [ecx+0x6bffd646]
  411554:	int3   
  411555:	add    esi,0xffffff91
  411558:	(bad)  
  411559:	imul   ebp,edi,0x33
  41155c:	jbe    0x411545
  41155e:	xor    eax,0x115ba513
  411563:	push   cs
  411564:	out    0xd3,al
  411566:	pop    ebx
  411567:	inc    edx
  411568:	lods   al,BYTE PTR ds:[esi]
  411569:	dec    edx
  41156a:	loopne 0x411548
  41156c:	jns    0x4115bf
  41156e:	dec    eax
  41156f:	jp     0x4115be
  411571:	lods   eax,DWORD PTR ds:[esi]
  411572:	jae    0x4115c8
  411574:	lock cmp ebp,DWORD PTR [ecx]
  411577:	xor    BYTE PTR [ebx],ch
  411579:	cmp    BYTE PTR [esi],cl
  41157b:	mov    eax,ss:0x7f915635
  411581:	les    edx,FWORD PTR [esi]
  411583:	mov    ecx,0x334f895d
  411588:	jmp    0x8b01:0xbbc3da01
  41158f:	add    al,0xeb
  411591:	enter  0xf577,0xe5
  411595:	sub    ax,0xc6de
  411599:	mov    edi,0xed96249c
  41159e:	push   ss
  41159f:	jge    0x4115cb
  4115a1:	inc    esp
  4115a2:	inc    esi
  4115a3:	jmp    0xe655:0xbcd63a4a
  4115aa:	xor    al,0xa1
  4115ac:	aas    
  4115ad:	aam    0xd2
  4115af:	pushf  
  4115b0:	data16 aam 0x65
  4115b3:	aas    
  4115b4:	addr16 dec ebx
  4115b6:	sbb    DWORD PTR [edx+0x3fc870dd],esp
  4115bc:	mov    ebx,0xfff3c633
  4115c1:	cmp    eax,0x344e3e29
  4115c6:	xchg   edx,eax
  4115c7:	repnz pop ebp
  4115c9:	jle    0x411580
  4115cb:	sub    DWORD PTR [esi],edi
  4115cd:	or     ch,ch
  4115cf:	lods   eax,DWORD PTR ds:[esi]
  4115d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115d1:	sbb    esi,esp
  4115d3:	mov    cl,BYTE PTR [edi-0x1b]
  4115d6:	cli    
  4115d7:	sbb    ah,ah
  4115d9:	iret   
  4115da:	data16 mov al,ds:0xbcfe71dc
  4115e0:	lock gs mov ah,0x10
  4115e4:	lea    ecx,[ecx]
  4115e6:	scas   al,BYTE PTR es:[edi]
  4115e7:	test   DWORD PTR [eax-0x58],esp
  4115ea:	shr    BYTE PTR [esi+esi*1],1
  4115ed:	enter  0x8a82,0x59
  4115f1:	les    esi,FWORD PTR [edi-0x285e22e2]
  4115f7:	fimul  WORD PTR [edx+0x12]
  4115fa:	add    al,BYTE PTR [ecx+0x31]
  4115fd:	dec    BYTE PTR [ebx-0x427ab22b]
  411603:	mov    edx,0x4420ec4e
  411608:	in     al,dx
  411609:	or     al,0x6c
  41160b:	bound  edx,QWORD PTR [eax-0x48]
  41160e:	xor    ebx,edi
  411610:	popf   
  411611:	jb     0x41165a
  411613:	ins    BYTE PTR es:[edi],dx
  411614:	push   ds
  411615:	xchg   edi,eax
  411616:	add    eax,0xf766c5d0
  41161b:	out    0xb0,al
  41161d:	je     0x411646
  41161f:	ss cmp dh,0x80
  411623:	das    
  411624:	outs   dx,BYTE PTR ds:[esi]
  411625:	or     al,0x70
  411627:	outs   dx,BYTE PTR ds:[esi]
  411628:	mov    cl,BYTE PTR cs:[ebx-0x645da21]
  41162f:	ins    DWORD PTR es:[edi],dx
  411630:	ins    DWORD PTR es:[edi],dx
  411631:	cmp    DWORD PTR [esi-0x3e4aa52f],esp
  411637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411638:	loop   0x4115d8
  41163a:	cmp    esp,DWORD PTR [esi+0x3af1e55e]
  411640:	jno    0x41163e
  411642:	sub    bh,BYTE PTR [ebx+0x6502d56a]
  411648:	or     edx,DWORD PTR ds:0x3fd615c4
  41164e:	ror    DWORD PTR [edx],0xc2
  411651:	inc    ecx
  411652:	repnz inc esi
  411654:	xchg   DWORD PTR [edi+0x2be0bf1f],ecx
  41165a:	fbstp  TBYTE PTR [edi-0x534f9ee1]
  411660:	push   0xfe10da01
  411665:	fdivr  QWORD PTR [esi]
  411667:	pop    ebx
  411668:	jl     0x41169a
  41166a:	sbb    DWORD PTR [eax+0x74],edi
  41166d:	out    0xe4,al
  41166f:	inc    ebx
  411670:	out    0x86,eax
  411672:	jns    0x4116a0
  411674:	xor    BYTE PTR [ebx+0x65d283a0],ah
  41167a:	imul   ecx,DWORD PTR [ecx-0x2b],0xffffffd9
  41167e:	sbb    cl,BYTE PTR [ebp+0x1d]
  411681:	xor    al,al
  411683:	fcomip st,st(1)
  411685:	ins    BYTE PTR es:[edi],dx
  411686:	aaa    
  411687:	sub    eax,0x75ffd020
  41168c:	gs pop edx
  41168e:	int    0x73
  411690:	adc    eax,0xd4817a4e
  411695:	mov    al,ds:0xa2be9be
  41169a:	sti    
  41169b:	clc    
  41169c:	jns    0x4116c8
  41169e:	push   0xffffffe0
  4116a0:	cs jmp 0x4116b7
  4116a3:	sbb    esp,eax
  4116a5:	mov    ss,eax
  4116a7:	pop    es
  4116a8:	ss (bad) 
  4116aa:	aas    
  4116ab:	mov    bh,0x65
  4116ad:	icebp  
  4116ae:	cmp    DWORD PTR [ebx-0x38],0xe6a3e428
  4116b5:	das    
  4116b6:	xor    DWORD PTR [ebp+0x59],esi
  4116b9:	xor    ebx,ecx
  4116bb:	sub    al,0xa4
  4116bd:	scas   eax,DWORD PTR es:[edi]
  4116be:	fcmovbe st,st(5)
  4116c0:	pop    ebp
  4116c1:	out    dx,al
  4116c2:	leave  
  4116c3:	xor    al,BYTE PTR [eax-0x61]
  4116c6:	outs   dx,BYTE PTR ds:[esi]
  4116c7:	inc    edi
  4116c8:	js     0x4116b6
  4116ca:	pushf  
  4116cb:	test   al,0xd7
  4116cd:	pop    ss
  4116ce:	out    dx,eax
  4116cf:	adc    DWORD PTR [edi+0x61],esp
  4116d2:	adc    DWORD PTR ds:0xb054c582,ebx
  4116d8:	nop
  4116d9:	xchg   ebp,eax
  4116da:	iret   
  4116db:	mov    esp,0x49a46ea3
  4116e0:	stc    
  4116e1:	test   al,0x38
  4116e3:	retf   0x912d
  4116e6:	xchg   esi,eax
  4116e7:	aas    
  4116e8:	lods   eax,DWORD PTR ds:[esi]
  4116e9:	mov    cl,0x4f
  4116eb:	xchg   DWORD PTR [esi+0x44cf707e],ebx
  4116f1:	xchg   ebp,eax
  4116f2:	fld    DWORD PTR [ebp-0x73105e5a]
  4116f8:	(bad)
  4116fb:	sbb    eax,0x5dfaefa9
  411700:	rol    BYTE PTR [edx],cl
  411702:	in     al,0xb1
  411704:	jb     0x4116d5
  411706:	in     al,dx
  411707:	in     al,0x55
  411709:	in     eax,dx
  41170a:	fs sbb al,0x1e
  41170d:	clc    
  41170e:	in     al,0x1d
  411710:	int    0xf3
  411712:	push   0xc22665b4
  411717:	inc    ebp
  411718:	push   0x3cafeb1b
  41171d:	push   edx
  41171e:	fld    QWORD PTR [edx]
  411720:	add    DWORD PTR [eax+0x313cae00],0x7e
  411727:	clc    
  411728:	call   0x7656:0xc96faa73
  41172f:	fcomp  DWORD PTR [ecx+0x5e]
  411732:	dec    esp
  411733:	(bad)  
  411734:	data16 arpl dx,dx
  411737:	mov    ebx,0xd113ee9
  41173c:	inc    esp
  41173d:	pop    edi
  41173e:	and    al,BYTE PTR [esi-0x30eb5ae]
  411744:	aam    0x1
  411746:	dec    edi
  411747:	imul   edi,DWORD PTR [ebp+0x6452707a],0x75
  41174e:	xor    edx,DWORD PTR [eax+esi*1]
  411751:	stos   DWORD PTR es:[edi],eax
  411752:	dec    ebp
  411753:	jp     0x4117c5
  411755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411756:	test   BYTE PTR [ebx-0x1c],bh
  411759:	scas   eax,DWORD PTR es:[edi]
  41175a:	dec    ecx
  41175b:	mov    ebp,0xa5178c59
  411760:	xchg   ecx,eax
  411761:	push   esp
  411762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411763:	jbe    0x41178f
  411765:	pop    ss
  411766:	xor    dh,BYTE PTR [edi+0x13]
  411769:	ss cmp eax,0x1d1ff166
  41176f:	mov    gs,esi
  411771:	gs xchg ah,cl
  411774:	outs   dx,BYTE PTR ds:[esi]
  411775:	push   ebx
  411776:	push   edi
  411777:	mov    ds:0x4586c6df,al
  41177c:	pop    ds
  41177d:	sti    
  41177e:	(bad)  
  41177f:	sub    eax,0xb82f94a6
  411784:	inc    edi
  411785:	and    al,0x9e
  411787:	(bad)  
  411788:	loopne 0x41172f
  41178a:	outs   dx,DWORD PTR ds:[esi]
  41178b:	xchg   esp,eax
  41178c:	enter  0x2bdc,0xed
  411790:	in     eax,0xfc
  411792:	outs   dx,DWORD PTR ds:[esi]
  411793:	jne    0x4117c5
  411795:	imul   dl
  411797:	call   0x9d93:0x8c3c2c7c
  41179e:	xor    eax,DWORD PTR [esp+ecx*4]
  4117a1:	pop    ds
  4117a2:	cmp    BYTE PTR ds:0x9034643a,dh
  4117a8:	mov    ebx,0x2b9eb052
  4117ad:	cld    
  4117ae:	ret    
  4117af:	loope  0x4117f5
  4117b1:	mov    ch,0x9a
  4117b3:	loop   0x41176a
  4117b5:	and    esi,ecx
  4117b7:	pcmpeqw mm7,QWORD PTR [esp+eiz*4]
  4117bb:	test   DWORD PTR [esi+0x61132af],0x14632e43
  4117c5:	cmp    BYTE PTR [edi-0x70a2de4a],dh
  4117cb:	retf   
  4117cc:	xchg   BYTE PTR [ecx-0x69],al
  4117cf:	cdq    
  4117d0:	(bad)  
  4117d2:	inc    esp
  4117d3:	xchg   esi,eax
  4117d4:	mov    dl,0x2
  4117d6:	dec    eax
  4117d7:	mov    edx,0x166323fb
  4117dc:	push   eax
  4117dd:	cmp    ch,ah
  4117df:	data16 jnp 0x4117a6
  4117e2:	cmp    eax,0xd9ee539c
  4117e7:	outs   dx,BYTE PTR ds:[esi]
  4117e8:	leave  
  4117e9:	inc    ebx
  4117ea:	clc    
  4117eb:	mov    eax,ds:0xce2b9a0f
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	mov    ch,0x40
  41186e:	frstor [ebx-0x18]
  411871:	nop
  411872:	jl     0x4118f0
  411874:	pop    es
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	pop    eax
  411879:	fsub   QWORD PTR [eax]
  41187b:	popf   
  41187c:	push   esp
  41187d:	push   ecx
  41187e:	cmp    esp,esi
  411880:	mov    BYTE PTR [edx+ebp*4],ah
  411883:	pop    ss
  411884:	and    DWORD PTR [ebp-0x4feb577b],ecx
  41188a:	sub    al,0x98
  41188c:	inc    ebx
  41188d:	lahf   
  41188e:	adc    DWORD PTR cs:[edx+0x5fcf3334],ebx
  411895:	cmp    DWORD PTR [edx*4+0x4ce4722e],edx
  41189c:	pop    esp
  41189d:	je     0x411896
  41189f:	out    dx,al
  4118a0:	mov    bh,bl
  4118a2:	loope  0x41185f
  4118a4:	pop    ecx
  4118a5:	lods   eax,DWORD PTR ds:[esi]
  4118a6:	mov    ds:0xfb80d845,al
  4118ab:	jg     0x4118fa
  4118ad:	adc    eax,DWORD PTR [ecx]
  4118af:	loope  0x4118d0
  4118b1:	or     ebx,edx
  4118b3:	outs   dx,DWORD PTR ds:[esi]
  4118b4:	nop
  4118b5:	inc    esi
  4118b6:	mov    bl,al
  4118b8:	jmp    0x41185d
  4118ba:	inc    ebx
  4118bb:	daa    
  4118bc:	cmp    edi,DWORD PTR [edi]
  4118be:	and    edi,esp
  4118c0:	out    0xd7,al
  4118c2:	(bad)  
  4118c3:	adc    BYTE PTR [ebx+0x69],cl
  4118c6:	mov    esi,DWORD PTR [ebx+0x36]
  4118c9:	xor    ebp,DWORD PTR [edi*1-0x29e648b7]
  4118d0:	les    esp,FWORD PTR [ecx]
  4118d2:	(bad)  
  4118d3:	repz out 0x84,al
  4118d6:	popa   
  4118d7:	push   ss
  4118d8:	dec    ebx
  4118d9:	nop
  4118da:	stc    
  4118db:	daa    
  4118dc:	push   cs
  4118dd:	jo     0x4118b5
  4118df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118e0:	or     eax,0x44b4eaf6
  4118e5:	fiadd  WORD PTR [eax]
  4118e7:	adc    eax,0x60b0b19c
  4118ec:	add    edx,0x5
  4118ef:	repnz (bad)
  4118f2:	std    
  4118f3:	ret    
  4118f4:	xchg   esi,eax
  4118f5:	push   ds
  4118f6:	clc    
  4118f7:	outs   dx,BYTE PTR ds:[esi]
  4118f8:	and    BYTE PTR [ebx],dh
  4118fa:	dec    edx
  4118fb:	fdiv   DWORD PTR [esi+0x13354772]
  411901:	int    0xf3
  411903:	mov    edi,0x616a5545
  411908:	xchg   ecx,eax
  411909:	pop    es
  41190a:	dec    eax
  41190b:	cmp    al,0xc9
  41190d:	or     eax,0x4a109ce8
  411912:	or     al,0x80
  411914:	sbb    cl,dh
  411916:	ds mov esi,0x88fbcf27
  41191c:	jp     0x4118ef
  41191e:	jbe    0x41199c
  411920:	lock cmp al,0x8b
  411923:	cwde   
  411924:	or     eax,0x69d0838d
  411929:	push   edi
  41192a:	in     eax,dx
  41192b:	or     cl,BYTE PTR [ebx+0x0]
  41192e:	sbb    eax,DWORD PTR [esp+esi*4]
  411931:	fcomp  DWORD PTR [ebp+0x17]
  411934:	test   al,0x96
  411936:	enter  0x7edd,0x6f
  41193a:	cmc    
  41193b:	mov    al,ds:0xfbf5806
  411940:	jo     0x4118f7
  411942:	xchg   BYTE PTR [esp+eax*1-0x21],bh
  411946:	in     al,0x40
  411948:	ins    BYTE PTR es:[edi],dx
  411949:	mov    ds:0x5ec7b5f0,al
  41194e:	leave  
  41194f:	and    al,ch
  411951:	std    
  411952:	out    dx,al
  411953:	mov    gs,WORD PTR [esi]
  411955:	test   BYTE PTR [edi],cl
  411957:	pop    edx
  411958:	pop    esi
  411959:	xchg   esp,eax
  41195a:	leave  
  41195b:	push   es
  41195c:	xor    bl,BYTE PTR [ebx-0x46d55db5]
  411962:	mov    edi,0x4be983b0
  411967:	icebp  
  411968:	scas   al,BYTE PTR es:[edi]
  411969:	pxor   mm1,QWORD PTR [edx]
  41196c:	inc    esi
  41196d:	repnz rcr BYTE PTR [eax],0xf1
  411971:	stos   DWORD PTR es:[edi],eax
  411972:	call   0x2208b78e
  411977:	xor    al,0x85
  411979:	out    dx,al
  41197a:	dec    ebp
  41197b:	sbb    ebp,0x5d16892e
  411981:	sar    dh,cl
  411983:	loope  0x411967
  411985:	xchg   esi,eax
  411986:	pop    edx
  411987:	imul   ebp,DWORD PTR ds:0x598d9d77,0x413cd378
  411991:	hlt    
  411992:	mov    eax,0xb4cc5c70
  411997:	arpl   WORD PTR [ebx-0x16406752],ax
  41199d:	sahf   
  41199e:	jmp    0x4440c46f
  4119a3:	test   BYTE PTR [esi-0x647a0718],bh
  4119a9:	lea    edx,[esi+0xad56c2c]
  4119af:	scas   eax,DWORD PTR es:[edi]
  4119b0:	jp     0x411a1c
  4119b2:	mov    ebp,DWORD PTR [ecx]
  4119b4:	sbb    esp,DWORD PTR [esp+eax*2+0x156d00b3]
  4119bb:	dec    edx
  4119bc:	and    edx,edi
  4119be:	jno    0x41198f
  4119c0:	inc    eax
  4119c1:	pop    eax
  4119c2:	mov    bl,0x27
  4119c4:	in     eax,dx
  4119c5:	fst    QWORD PTR [ebp-0x28]
  4119c8:	div    DWORD PTR [ebx+ecx*8]
  4119cb:	in     al,0xd1
  4119cd:	loop   0x411a46
  4119cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119d0:	pusha  
  4119d1:	test   al,0x72
  4119d3:	jae    0x411a1c
  4119d5:	jne    0x411959
  4119d7:	imul   eax,DWORD PTR [esp+eiz*8+0x23],0xfffffff9
  4119dc:	sbb    DWORD PTR [eax],edx
  4119de:	dec    esp
  4119df:	mov    esp,0xe6bf7c8b
  4119e4:	jb     0x41196d
  4119e6:	ret    0x7d79
  4119e9:	jo     0x411a2f
  4119eb:	pop    edi
  4119ec:	repnz xor eax,DWORD PTR [esi-0x61]
  4119f0:	mov    eax,ds:0x35b6cbd
  4119f5:	lea    edi,[esi+0x1]
  4119f8:	test   al,0xdc
  4119fa:	mov    ds:0x34de431c,al
  4119ff:	jle    0x411a1b
  411a01:	loopne 0x4119f0
  411a03:	sub    al,0x66
  411a05:	in     al,dx
  411a06:	pop    edx
  411a07:	jb     0x4119e5
  411a09:	cwde   
  411a0a:	ret    0xd218
  411a0d:	ror    DWORD PTR [eax-0x43161e73],cl
  411a13:	cwde   
  411a14:	mov    ds:0x2f3dee4,eax
  411a19:	jo     0x4119d2
  411a1b:	clc    
  411a1c:	inc    ecx
  411a1d:	loopne 0x4119b5
  411a1f:	ins    DWORD PTR es:[edi],dx
  411a20:	nop
  411a21:	ret    0x240
  411a24:	jecxz  0x411a75
  411a26:	push   0xffffff8f
  411a28:	mov    bl,0x9c
  411a2a:	out    dx,al
  411a2b:	lock stc 
  411a2d:	mov    ecx,0xd89e38d5
  411a32:	aas    
  411a33:	fmul   DWORD PTR [ebx-0x3879f5bf]
  411a39:	(bad)  
  411a3a:	or     DWORD PTR [ebp+eax*2+0x21],ebx
  411a3e:	not    DWORD PTR es:[edi-0x1aec4630]
  411a45:	sub    DWORD PTR [edi-0x351a22ba],ebx
  411a4b:	xchg   esp,eax
  411a4c:	js     0x411a49
  411a4e:	stos   BYTE PTR es:[edi],al
  411a4f:	aad    0x4a
  411a51:	fbld   TBYTE PTR [edx]
  411a53:	hlt    
  411a54:	pop    ds
  411a55:	outs   dx,BYTE PTR ds:[esi]
  411a56:	and    cl,BYTE PTR [edx]
  411a58:	sub    ebx,DWORD PTR [esi]
  411a5a:	in     eax,0x9e
  411a5c:	pop    es
  411a5d:	mov    eax,0xc1940833
  411a62:	fadd   DWORD PTR [edi+0x63bc0be5]
  411a68:	not    BYTE PTR [esp+eax*4+0x627742bf]
  411a6f:	push   0x44
  411a71:	cld    
  411a72:	out    0x42,eax
  411a74:	out    0xf8,eax
  411a76:	ror    esi,1
  411a78:	lds    ebp,FWORD PTR [edx+0x7]
  411a7b:	daa    
  411a7c:	mov    ch,0x1c
  411a7e:	iret   
  411a7f:	xchg   esi,eax
  411a80:	pop    es
  411a81:	test   al,0x7f
  411a83:	outs   dx,DWORD PTR ds:[esi]
  411a84:	sar    BYTE PTR [ecx],0x2
  411a87:	dec    eax
  411a88:	imul   ebp,esi,0xffffff82
  411a8b:	push   es
  411a8c:	shr    BYTE PTR [ebp-0x43],1
  411a8f:	in     al,0x4c
  411a91:	jmp    0xdccf95ca
  411a96:	and    eax,0x8d29437d
  411a9b:	lods   eax,DWORD PTR ss:[esi]
  411a9d:	mov    eax,ds:0x29101d4a
  411aa2:	inc    esp
  411aa3:	lea    ebp,[ebx]
  411aa5:	leave  
  411aa6:	dec    edi
  411aa7:	outs   dx,BYTE PTR ds:[esi]
  411aa8:	xor    al,0xe8
  411aaa:	sub    BYTE PTR [edx],0x65
  411aad:	cmp    BYTE PTR [esi+0xb],bl
  411ab0:	xor    al,0x78
  411ab2:	(bad)  
  411ab4:	push   eax
  411ab5:	mov    al,0xec
  411ab7:	mov    edx,0xb06f7c57
  411abc:	push   ds
  411abd:	and    DWORD PTR [ebx],0x4b01fb9c
  411ac3:	ret    0x1178
  411ac6:	sbb    eax,0x8f0fcf80
  411acb:	ja     0x411afe
  411acd:	jbe    0x411af6
  411acf:	push   0x25e0d582
  411ad4:	ret    
  411ad5:	stos   DWORD PTR es:[edi],eax
  411ad6:	ror    BYTE PTR [ebp-0x7e],cl
  411ad9:	pop    ebx
  411ada:	inc    edx
  411adb:	iret   
  411adc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411add:	dec    edx
  411ade:	sbb    ebp,DWORD PTR [ecx]
  411ae0:	mov    ebx,0xdc53c100
  411ae5:	sub    DWORD PTR [esi+0x69],edi
  411ae8:	test   DWORD PTR [eax-0x7f1d77c6],ebx
  411aee:	je     0x411ab6
  411af0:	out    0x34,eax
  411af2:	inc    ebx
  411af3:	cmp    dh,BYTE PTR [ebx]
  411af5:	pop    esp
  411af6:	aad    0x80
  411af8:	xor    ah,bh
  411afa:	push   esi
  411afb:	jno    0x411aee
  411afd:	in     al,0x48
  411aff:	jno    0x411aeb
  411b01:	mov    cl,0x11
  411b03:	cmp    eax,0xc9143412
  411b08:	in     eax,0x46
  411b0a:	dec    eax
  411b0b:	mov    bh,BYTE PTR [eax]
  411b0d:	cmp    BYTE PTR [edx-0x52],dl
  411b10:	pop    ss
  411b11:	cs sub ax,0x3556
  411b16:	or     al,BYTE PTR [edx-0x7c08670]
  411b1c:	cmp    dh,al
  411b1e:	lahf   
  411b1f:	pop    ebx
  411b20:	clc    
  411b21:	jg     0x411b48
  411b23:	and    ch,al
  411b25:	dec    esi
  411b26:	xor    DWORD PTR [ebx-0x72],0x2f
  411b2a:	lahf   
  411b2b:	test   al,0xf5
  411b2d:	js     0x411b3a
  411b2f:	stc    
  411b30:	mov    gs,WORD PTR [esp+ecx*1+0x76]
  411b34:	aad    0xd9
  411b36:	xor    eax,0x41b784b4
  411b3b:	dec    esi
  411b3c:	aaa    
  411b3d:	fwait
  411b3e:	xor    eax,0xc7cc949b
  411b43:	or     eax,DWORD PTR [esi+esi*8+0x4c]
  411b47:	jmp    0x74f3ff10
  411b4c:	xchg   DWORD PTR [edi],eax
  411b4e:	inc    edi
  411b4f:	adc    eax,0xe5448139
  411b54:	add    dl,0x91
  411b57:	cmc    
  411b58:	add    DWORD PTR [ebx+0x154f0056],0x19
  411b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b60:	dec    eax
  411b61:	add    DWORD PTR [eax+0x78],esi
  411b64:	or     ch,dl
  411b66:	clc    
  411b67:	xor    edx,DWORD PTR [ebx+eiz*2-0x6e137753]
  411b6e:	imul   edx,DWORD PTR [ebp-0x1f],0x6c
  411b72:	push   esp
  411b73:	test   BYTE PTR [edi-0x2f],0x8d
  411b77:	ret    
  411b78:	mov    eax,0x836d35ce
  411b7d:	jae    0x411b58
  411b7f:	dec    edx
  411b80:	mov    ah,0x4f
  411b82:	sub    dl,cl
  411b84:	xchg   esp,eax
  411b85:	mov    esi,DWORD PTR [edx]
  411b87:	addr16 mov ebx,0x31ac4ff8
  411b8d:	rcl    BYTE PTR [ebp-0x71a5a390],cl
  411b93:	mov    ebx,0xfa831dfe
  411b98:	and    al,0xe4
  411b9a:	sub    dl,BYTE PTR [ebx-0x56]
  411b9d:	out    dx,eax
  411b9e:	xchg   esp,eax
  411b9f:	rol    esp,cl
  411ba1:	jmp    0x9439b4e4
  411ba6:	add    DWORD PTR ds:0xefa7a13a,esi
  411bac:	lea    edi,[edi+edi*4-0xb32b261]
  411bb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bb4:	jle    0x411b9d
  411bb6:	pop    esp
  411bb7:	mov    ds:0xf475a7a2,eax
  411bbc:	push   0xffffffc4
  411bbe:	inc    esi
  411bbf:	loopne 0x411be8
  411bc1:	or     eax,0xa113bfbd
  411bc6:	mov    edi,0xc07729c2
  411bcb:	add    ebx,ecx
  411bcd:	into   
  411bce:	dec    esp
  411bcf:	ss push es
  411bd1:	loope  0x411bde
  411bd3:	test   eax,0x1c2aff35
  411bd8:	cwde   
  411bd9:	mov    esp,0xbb8ac3d9
  411bde:	dec    ecx
  411bdf:	push   0xffffff99
  411be1:	pusha  
  411be2:	sbb    DWORD PTR [ebx-0x76a19d4c],ebp
  411be8:	mov    esi,0xe160020e
  411bed:	adc    eax,ebx
  411bef:	loopne 0x411c59
  411bf1:	scas   al,BYTE PTR es:[edi]
  411bf2:	pop    eax
  411bf3:	add    BYTE PTR [edi+0x47],dl
  411bf6:	cli    
  411bf7:	sub    DWORD PTR [edx],esi
  411bf9:	in     eax,0xfe
  411bfb:	ret    0xde2f
  411bfe:	das    
  411bff:	adc    al,0xd6
  411c01:	pop    edi
  411c02:	cmp    BYTE PTR [esi+0x6e],ah
  411c05:	adc    cl,bl
  411c07:	mov    cl,0x66
  411c09:	mov    ecx,0x79e85e01
  411c0e:	mov    ecx,0x3a29a8a7
  411c13:	jmp    0x411c79
  411c15:	mov    dh,BYTE PTR cs:[edi+0x19]
  411c19:	and    BYTE PTR [ebp-0x46],bl
  411c1c:	mov    al,0xb3
  411c1e:	icebp  
  411c1f:	xchg   BYTE PTR [edi+0x4f],dh
  411c22:	mov    ah,0x27
  411c24:	sub    ebx,DWORD PTR [edx+0x60]
  411c27:	sub    bl,ch
  411c29:	mov    eax,0xddd2d997
  411c2e:	sahf   
  411c2f:	out    0x9d,al
  411c31:	nop
  411c32:	in     al,dx
  411c33:	mov    ebp,0x6cd0e6d0
  411c38:	(bad)  
  411c39:	mov    esi,0x77e5545c
  411c3e:	push   esi
  411c3f:	retf   0x3d91
  411c42:	fisubr DWORD PTR [edi+0x13]
  411c45:	jbe    0x411bef
  411c47:	pop    eax
  411c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c49:	push   DWORD PTR [edi-0x1af0ec89]
  411c4f:	rol    DWORD PTR [eax+esi*4-0x69],cl
  411c53:	(bad)  [ebx]
  411c55:	test   BYTE PTR [edi],cl
  411c57:	pop    ecx
  411c58:	jns    0x411c16
  411c5a:	outs   dx,BYTE PTR ds:[esi]
  411c5b:	xor    DWORD PTR [eax+0x651d87c7],0x1b2e06ac
  411c65:	xor    eax,0xcd3da9f6
  411c6a:	push   0x38
  411c6c:	into   
  411c6d:	mov    eax,ds:0x3a5b9b3f
  411c72:	inc    edi
  411c73:	and    eax,ebp
  411c75:	dec    ecx
  411c76:	cmp    al,0xf3
  411c78:	inc    ecx
  411c79:	push   eax
  411c7a:	and    al,BYTE PTR [ebp+0x1f9457e7]
  411c80:	pop    ecx
  411c81:	shl    DWORD PTR [edi],cl
  411c83:	shl    DWORD PTR [eax+0x25],1
  411c86:	std    
  411c87:	cmp    al,0x30
  411c89:	mov    eax,esi
  411c8b:	push   0xc285c543
  411c90:	loopne 0x411cb4
  411c92:	imul   ebp,DWORD PTR [edi-0x42],0x31922bcb
  411c99:	icebp  
  411c9a:	clc    
  411c9b:	scas   al,BYTE PTR es:[edi]
  411c9c:	not    BYTE PTR [ecx-0x66e8f1ac]
  411ca2:	and    al,0xa8
  411ca4:	call   0x43d4684f
  411ca9:	outs   dx,BYTE PTR ds:[esi]
  411caa:	pop    DWORD PTR [ebx-0x519dd8bf]
  411cb0:	jp     0x411c56
  411cb2:	neg    BYTE PTR [ecx-0x634f3e02]
  411cb8:	cld    
  411cb9:	rcr    DWORD PTR ds:0xe14c24cf,0xd1
  411cc0:	ret    0xcff0
  411cc3:	pop    esi
  411cc4:	mov    es,WORD PTR [edx+0x5ff7ed5]
  411cca:	jnp    0x411d31
  411ccc:	and    eax,0x1934583f
  411cd1:	test   eax,0x6497b488
  411cd6:	jae    0x411c68
  411cd8:	push   es
  411cd9:	jnp    0x411cd5
  411cdb:	loope  0x411d31
  411cdd:	in     eax,0xdf
  411cdf:	aaa    
  411ce0:	mov    edx,0xc0cb96e5
  411ce5:	jmp    0xe0dd2a21
  411cea:	arpl   dx,bx
  411cec:	mov    al,0xc1
  411cee:	sub    DWORD PTR [edx-0x60],esp
  411cf1:	push   0x98da66e2
  411cf6:	cmp    eax,0x1a9c3d91
  411cfb:	imul   ecx,DWORD PTR [eax-0x107036d5],0xe64d134f
  411d05:	inc    eax
  411d06:	test   DWORD PTR [eax],edi
  411d08:	mov    bl,0xc2
  411d0a:	adc    DWORD PTR [ebp+0x67],eax
  411d0d:	or     al,0x34
  411d0f:	jle    0x411c95
  411d11:	popa   
  411d12:	loop   0x411d61
  411d14:	xor    DWORD PTR [edx],ebp
  411d16:	mov    ebp,0x52b55469
  411d1b:	shl    DWORD PTR [edx-0x58],1
  411d1e:	cmp    edi,esp
  411d20:	add    DWORD PTR [ecx-0x3e3beeeb],edx
  411d26:	add    cl,BYTE PTR [esp+edx*8]
  411d29:	mov    al,ds:0x963e0590
  411d2e:	stos   DWORD PTR es:[edi],eax
  411d2f:	daa    
  411d30:	dec    eax
  411d31:	or     eax,0xd5abf1bd
  411d36:	aad    0x74
  411d38:	inc    ecx
  411d39:	iret   
  411d3a:	scas   eax,DWORD PTR es:[edi]
  411d3b:	pusha  
  411d3c:	pop    edi
  411d3d:	push   eax
  411d3e:	popa   
  411d3f:	and    BYTE PTR [ecx+esi*2],ah
  411d42:	and    BYTE PTR [ebp+0x43c1f981],dl
  411d48:	adc    ah,BYTE PTR [ebx+0x43]
  411d4b:	mov    ch,0xaa
  411d4d:	xlat   BYTE PTR ds:[ebx]
  411d4e:	and    DWORD PTR [ebp+0x2b0a0c0c],edi
  411d54:	add    dl,BYTE PTR gs:[esi+0x18e496cd]
  411d5b:	xor    bl,dh
  411d5d:	sub    al,0x2b
  411d5f:	imul   eax,DWORD PTR [ebx-0x399d0ac0],0xffffffb0
  411d66:	test   DWORD PTR [esi],esp
  411d68:	fld    QWORD PTR [eax+ebp*1-0x5b]
  411d6c:	or     esi,ebp
  411d6e:	cld    
  411d6f:	mov    ah,0x86
  411d71:	jp     0x411d91
  411d73:	in     eax,0x5b
  411d75:	dec    ebp
  411d76:	xor    al,0x60
  411d78:	cmp    esp,ecx
  411d7a:	or     eax,0x3882d8ed
  411d7f:	sub    al,0x6a
  411d81:	int    0x63
  411d83:	jl     0x411de6
  411d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d86:	pop    eax
  411d87:	adc    ebp,eax
  411d89:	ja     0x411de6
  411d8b:	xor    DWORD PTR [ebp-0x625f2d52],eax
  411d91:	sbb    al,0x93
  411d93:	call   0x3f30:0xf390d856
  411d9a:	inc    ecx
  411d9b:	inc    esp
  411d9c:	push   edi
  411d9d:	mov    ds,WORD PTR [edx]
  411d9f:	adc    bh,cl
  411da1:	sar    BYTE PTR [ebx-0x30],1
  411da4:	dec    esi
  411da5:	hlt    
  411da6:	dec    ebx
  411da7:	inc    edx
  411da8:	cld    
  411da9:	das    
  411daa:	or     BYTE PTR [ecx+eax*8],ch
  411dad:	pop    ecx
  411dae:	das    
  411daf:	jnp    0x411d6d
  411db1:	test   eax,0xaf8f3c62
  411db6:	jle    0x411e04
  411db8:	cwde   
  411db9:	or     ah,BYTE PTR [edx]
  411dbb:	rcr    BYTE PTR ss:[edi-0x5710ed89],cl
  411dc2:	bound  esi,QWORD PTR [eax+eiz*4]
  411dc5:	(bad)  
  411dc6:	xchg   edx,eax
  411dc7:	jno    0x411e17
  411dc9:	mov    fs,WORD PTR [ebp-0x6f146b7]
  411dcf:	sahf   
  411dd0:	out    dx,al
  411dd1:	test   DWORD PTR [esp+ecx*1],edi
  411dd4:	push   ebx
  411dd5:	xchg   esi,eax
  411dd6:	outs   dx,BYTE PTR ds:[esi]
  411dd7:	inc    eax
  411dd8:	push   ds
  411dd9:	sti    
  411dda:	bound  ebp,QWORD PTR [edx]
  411ddc:	pop    ebx
  411ddd:	stos   DWORD PTR es:[edi],eax
  411dde:	sub    dl,dl
  411de0:	dec    ebp
  411de1:	(bad)  
  411de2:	fsubp  st(1),st
  411de4:	dec    ebp
  411de5:	pop    es
  411de6:	xor    al,0xee
  411de8:	imul   ecx,DWORD PTR [esi],0xffffffb2
  411deb:	ja     0x411e1a
  411ded:	inc    ebp
  411dee:	sub    DWORD PTR [esi],0xda97e6da
  411df4:	mov    bh,bl
  411df6:	fsub   st(1),st
  411df8:	cmp    al,cl
  411dfa:	iret   
  411dfb:	jle    0x411e63
  411dfd:	push   0x8fc1cfbd
  411e02:	pop    esi
  411e03:	mov    ch,0xf6
  411e05:	xor    DWORD PTR [esi],esp
  411e07:	cwde   
  411e08:	xor    al,0xee
  411e0a:	icebp  
  411e0b:	adc    edx,0x6cea0d9d
  411e11:	push   esp
  411e12:	loope  0x411e8d
  411e14:	popf   
  411e15:	jne    0x411df9
  411e17:	fcom   QWORD PTR [ecx]
  411e19:	outs   dx,DWORD PTR ds:[esi]
  411e1a:	cld    
  411e1b:	jle    0x411da4
  411e1d:	data16 es (bad) 
  411e20:	out    0xe4,eax
  411e22:	adc    eax,0xad527e10
  411e27:	and    DWORD PTR [edx-0x7f045556],ebp
  411e2d:	pop    ebp
  411e2e:	cwde   
  411e2f:	(bad)  
  411e30:	inc    esp
  411e31:	xchg   BYTE PTR [ecx],cl
  411e33:	mov    al,ds:0x67339bfb
  411e38:	cs (bad) 
  411e3a:	js     0x411e56
  411e3c:	mov    edx,0xbd81ee9
  411e41:	imul   esp,DWORD PTR [ecx],0xffffffa2
  411e44:	arpl   WORD PTR [ebx+0x74],cx
  411e47:	adc    ch,BYTE PTR [ebx-0x6e]
  411e4a:	adc    eax,0xbfa01163
  411e4f:	popf   
  411e50:	shr    edx,0xfe
  411e53:	mov    esp,0x1a4ee8b
  411e58:	lahf   
  411e59:	fidivr WORD PTR [edi-0x73]
  411e5c:	pop    edi
  411e5d:	xor    edx,DWORD PTR [ecx+0x7ebd54d7]
  411e63:	pop    esi
  411e64:	aam    0xd3
  411e66:	nop
  411e67:	daa    
  411e68:	dec    eax
  411e69:	inc    esi
  411e6a:	out    0x4,eax
  411e6c:	inc    esi
  411e6d:	jns    0x411e41
  411e6f:	call   0x5f01:0xbc6ed35a
  411e76:	jg     0x411ec5
  411e78:	loopne 0x411e85
  411e7a:	sbb    ah,BYTE PTR [ecx]
  411e7c:	fidiv  DWORD PTR ds:0xb8e55af6
  411e82:	mov    ds:0x1eedd1f,eax
  411e87:	jne    0x411ee3
  411e89:	lds    edx,FWORD PTR [esi+esi*4-0x3c735a26]
  411e90:	in     eax,dx
  411e91:	rcl    DWORD PTR [ebp+0x7345e21],0x87
  411e98:	test   BYTE PTR [ebp+0x51],bl
  411e9b:	leave  
  411e9c:	aad    0xa7
  411e9e:	ror    BYTE PTR [edx+0x63],cl
  411ea1:	in     eax,0x24
  411ea3:	push   0xffffffb1
  411ea5:	xlat   BYTE PTR ds:[ebx]
  411ea6:	(bad)
  411ea9:	gs push es
  411eab:	(bad)  
  411eac:	sbb    al,0x4a
  411eae:	xchg   edi,eax
  411eaf:	and    esp,DWORD PTR [edi+0x58]
  411eb2:	xlat   BYTE PTR ds:[ebx]
  411eb3:	rol    DWORD PTR [ecx-0xb68a9b5],0x1b
  411eba:	inc    esi
  411ebb:	mov    bh,0x80
  411ebd:	adc    eax,0x439dc402
  411ec2:	test   eax,0x37c860e8
  411ec7:	in     al,0x1
  411ec9:	xor    eax,0xfaf5822
  411ece:	mov    edx,ecx
  411ed0:	jb     0x411edd
  411ed2:	pop    esi
  411ed3:	mov    eax,ds:0x13eff124
  411ed8:	jmp    0x411f34
  411eda:	mov    edi,0x15f796ed
  411edf:	jmp    0x411efd
  411ee1:	gs mov ch,0x84
  411ee4:	imul   DWORD PTR [ebx+0x4e]
  411ee7:	stos   DWORD PTR es:[edi],eax
  411ee8:	inc    ecx
  411ee9:	xchg   edx,eax
  411eea:	mov    dh,0xc5
  411eec:	lock aas 
  411eee:	cmp    DWORD PTR [edi-0x2caa7727],0x55
  411ef5:	and    eax,0xe111e4e2
  411efa:	inc    ebp
  411efb:	mov    ch,0xa7
  411efd:	repz out dx,al
  411eff:	xrelease mov DWORD PTR [eax+ebp*1+0x47b4bf67],ecx
  411f07:	sti    
  411f08:	scas   eax,DWORD PTR es:[edi]
  411f09:	dec    esi
  411f0a:	xchg   ebx,eax
  411f0b:	mov    esp,0xa2d5c04d
  411f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f11:	pop    esp
  411f12:	xor    esi,DWORD PTR [edi]
  411f14:	js     0x411f4c
  411f16:	mov    dh,0xd0
  411f18:	push   es
  411f19:	push   esp
  411f1a:	cmc    
  411f1b:	loopne 0x411ef5
  411f1d:	leave  
  411f1e:	inc    ebp
  411f1f:	call   0x50e6:0xedf45d
  411f26:	push   ds
  411f27:	dec    eax
  411f28:	jo     0x411eeb
  411f2a:	jge    0x411f50
  411f2c:	dec    esi
  411f2d:	addr16 aaa 
  411f2f:	das    
  411f30:	sub    eax,0x3fc2c094
  411f35:	nop
  411f36:	push   esp
  411f37:	jo     0x411f1d
  411f39:	add    eax,0xa23c1489
  411f3e:	lahf   
  411f3f:	daa    
  411f40:	(bad)  
  411f41:	dec    esi
  411f42:	mov    bl,0x7d
  411f44:	fwait
  411f45:	or     edx,ebp
  411f47:	ret    
  411f48:	hlt    
  411f49:	add    DWORD PTR [eax+0x29],edx
  411f4c:	dec    edx
  411f4d:	imul   edi,DWORD PTR [edx],0x2ea76dbf
  411f53:	pop    ds
  411f54:	aad    0xe1
  411f56:	std    
  411f57:	adc    BYTE PTR [esi-0x2f5f294a],bh
  411f5d:	fwait
  411f5e:	ds js  0x411f41
  411f61:	fisubr WORD PTR [edi]
  411f63:	leave  
  411f64:	inc    edi
  411f65:	sbb    edx,DWORD PTR [eax-0x11]
  411f68:	loop   0x411f27
  411f6a:	mov    ebx,0x84409ea6
  411f6f:	(bad)  
  411f70:	push   0xffffffbd
  411f72:	cwde   
  411f73:	aas    
  411f74:	loopne 0x411f78
  411f76:	addr16 sub al,0x4e
  411f79:	lods   eax,DWORD PTR ds:[esi]
  411f7a:	inc    ebp
  411f7b:	ds test al,al
  411f7e:	sbb    bl,ah
  411f80:	xchg   esp,ebx
  411f82:	ins    BYTE PTR es:[edi],dx
  411f83:	pop    ebx
  411f84:	out    dx,eax
  411f85:	pop    eax
  411f86:	pop    ss
  411f87:	adc    BYTE PTR [ebp+0x7a],bl
  411f8a:	pop    edx
  411f8b:	adc    eax,0xf41fffd8
  411f90:	or     edi,DWORD PTR ds:0x9df2f2e1
  411f96:	or     DWORD PTR [ebx+0x625c9a1],eax
  411f9c:	rol    DWORD PTR [ebp-0x2a],1
  411f9f:	stc    
  411fa0:	div    DWORD PTR [ebp+0x4a]
  411fa3:	int    0x9
  411fa5:	mov    esi,0x27ff82af
  411faa:	and    BYTE PTR [edx-0x49],bh
  411fad:	jecxz  0x41201f
  411faf:	xchg   ecx,eax
  411fb0:	jp     0x411f3c
  411fb2:	cmc    
  411fb3:	sahf   
  411fb4:	mov    bh,0xd6
  411fb6:	inc    ebx
  411fb7:	pop    esp
  411fb8:	in     eax,0xd2
  411fba:	cmp    eax,0xfa137289
  411fbf:	push   edx
  411fc0:	lods   eax,DWORD PTR ds:[esi]
  411fc1:	xchg   esi,eax
  411fc2:	pcmpeqd mm5,QWORD PTR [edi+0x722080e0]
  411fc9:	sbb    al,0xf3
  411fcb:	fwait
  411fcc:	jbe    0x411f50
  411fce:	push   es
  411fcf:	jp     0x412039
  411fd1:	sbb    BYTE PTR [ebx-0x29a2f99a],al
  411fd7:	std    
  411fd8:	cwde   
  411fd9:	mov    fs,WORD PTR [edx-0x63]
  411fdc:	popf   
  411fdd:	pusha  
  411fde:	jge    0x41200a
  411fe0:	sbb    bh,BYTE PTR [eax+0x1d045f9c]
  411fe6:	pop    esp
  411fe7:	push   edx
  411fe8:	mov    ch,dl
  411fea:	popa   
  411feb:	mov    ebp,0xe97789ed
  411ff0:	nop
  411ff1:	xchg   edx,eax
  411ff2:	jnp    0x412067
  411ff4:	add    BYTE PTR [edx],0x52
  411ff7:	dec    ecx
  411ff8:	xor    DWORD PTR [ecx-0x5e],ebx
  411ffb:	jno    0x412005
  411ffd:	push   edx
  411ffe:	and    eax,0xdbc19de
  412003:	cli    
  412004:	inc    esp
  412005:	das    
  412006:	xlat   BYTE PTR ds:[ebx]
  412007:	push   edx
  412008:	jmp    0xdb91bd9c
  41200d:	fidivr DWORD PTR [edi-0x7f]
  412010:	inc    edx
  412011:	lahf   
  412012:	jl     0x411f97
  412014:	mov    esi,0xd65df3ab
  412019:	xchg   esp,eax
  41201a:	das    
  41201b:	in     eax,dx
  41201c:	test   eax,0xdb9bfd4d
  412021:	imul   ecx,DWORD PTR [ebx],0x1d
  412024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412025:	out    0x2c,al
  412027:	cli    
  412028:	loop   0x412063
  41202a:	out    0xe5,al
  41202c:	sub    eax,0x82ba920d
  412031:	fdivp  st(5),st
  412033:	jno    0x411fd6
  412035:	hlt    
  412036:	xlat   BYTE PTR ds:[ebx]
  412037:	leave  
  412038:	add    DWORD PTR [esi],0x34
  41203b:	call   0x30c6:0x4d7e93d3
  412042:	sbb    BYTE PTR [ebp-0x51],al
  412045:	xchg   DWORD PTR [edx+0x77],ebx
  412048:	jmp    0xfa65:0xe8ddae3c
  41204f:	jno    0x411ffd
  412051:	rol    al,cl
  412053:	mov    WORD PTR [edi+0x43],ss
  412056:	xor    edx,DWORD PTR [edx+0x24ee3abf]
  41205c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41205d:	mov    ebp,db6
  412060:	sub    ecx,DWORD PTR [esi]
  412062:	retf   
  412063:	fld    DWORD PTR [edx]
  412065:	mov    ah,0x42
  412067:	cmp    al,0xae
  412069:	add    al,0x0
  41206b:	imul   edi,DWORD PTR [esi+0x2e],0x28533c23
  412072:	or     BYTE PTR [ecx],al
  412074:	pop    esi
  412075:	sbb    BYTE PTR [ecx],ah
  412077:	std    
  412078:	jne    0x4120e5
  41207a:	in     al,dx
  41207b:	adc    eax,0xd15a594c
  412080:	adc    eax,0x69ee574f
  412085:	xchg   edi,eax
  412086:	rcr    dh,cl
  412088:	in     al,dx
  412089:	call   0x40d8:0xf3313985
  412090:	cmc    
  412091:	mov    esp,DWORD PTR [ecx]
  412093:	push   ebp
  412094:	cs ja  0x41201f
  412097:	addr16 out 0x71,al
  41209a:	mov    esp,0xabdd0752
  41209f:	sub    DWORD PTR [edi],ecx
  4120a1:	or     al,0x6b
  4120a3:	test   eax,0xb22f06e7
  4120a8:	ror    DWORD PTR [eax],1
  4120aa:	or     eax,esp
  4120ac:	mov    ds,eax
  4120ae:	and    ecx,DWORD PTR [esi]
  4120b0:	jae    0x4120f7
  4120b2:	xchg   DWORD PTR [ecx+0x4c5e4639],esi
  4120b8:	push   0x33
  4120ba:	xchg   esi,eax
  4120bb:	mov    DWORD PTR [ebp+0x1c783e50],0xcdd47380
  4120c5:	push   ds
  4120c6:	dec    ebp
  4120c7:	sub    ebx,ebx
  4120c9:	jo     0x412118
  4120cb:	jo     0x412064
  4120cd:	sahf   
  4120ce:	mov    bh,0x8a
  4120d0:	in     eax,dx
  4120d1:	or     DWORD PTR [ebx-0x6f],0x80259a62
  4120d8:	sub    esi,DWORD PTR [esi+0x38]
  4120db:	add    bh,BYTE PTR [ecx+esi*1-0x2fdd2271]
  4120e2:	aaa    
  4120e3:	and    edi,DWORD PTR [ebx]
  4120e5:	xor    ebx,edx
  4120e7:	call   0x555e8dba
  4120ec:	icebp  
  4120ed:	add    bh,cl
  4120ef:	fstp   QWORD PTR [eax]
  4120f1:	cli    
  4120f2:	push   ebx
  4120f3:	sar    BYTE PTR [ebx+0x7343fc64],cl
  4120f9:	jmp    0x12732cc8
  4120fe:	stc    
  4120ff:	jp     0x4120a2
  412101:	(bad)  
  412102:	fidivr WORD PTR [edx+0x2a65f2ed]
  412108:	push   0xd7278148
  41210d:	xor    ah,BYTE PTR [esi]
  41210f:	xchg   al,ah
  412111:	push   ss
  412112:	out    dx,eax
  412113:	into   
  412114:	jbe    0x412178
  412116:	add    ch,BYTE PTR [edx+eiz*4+0xf]
  41211a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41211b:	pop    ss
  41211c:	xlat   BYTE PTR ds:[ebx]
  41211d:	mov    BYTE PTR [ebx+ebp*2],al
  412120:	(bad)  
  412122:	data16 aam 0xd8
  412125:	rep outs dx,BYTE PTR ds:[esi]
  412127:	cld    
  412128:	sti    
  412129:	sbb    WORD PTR [edi],ax
  41212c:	xchg   ebp,edi
  41212e:	and    edi,edx
  412130:	adc    al,0xc7
  412132:	mov    bl,BYTE PTR [esi-0x34]
  412135:	icebp  
  412136:	bound  edx,QWORD PTR [ecx-0x6d]
  412139:	scas   eax,DWORD PTR es:[edi]
  41213a:	sub    ebx,DWORD PTR [eax]
  41213c:	(bad)  
  41213d:	xchg   ebp,eax
  41213e:	pushf  
  41213f:	nop
  412140:	imul   esi,DWORD PTR [ebp+0x20],0xfffffff9
  412144:	(bad)  [ebx+0x5932a777]
  41214a:	daa    
  41214b:	shr    edi,cl
  41214d:	jg     0x41219b
  41214f:	jno    0x412160
  412151:	inc    eax
  412152:	shl    ebp,0x20
  412155:	sbb    BYTE PTR [eax+0x5a],bh
  412158:	dec    ecx
  412159:	(bad)  
  41215a:	in     eax,dx
  41215b:	xchg   esp,eax
  41215c:	xchg   DWORD PTR [ecx],eax
  41215e:	adc    al,BYTE PTR [edi+eiz*2]
  412161:	adc    ebp,esi
  412163:	xchg   ebx,eax
  412164:	mov    esp,0xab25ee59
  412169:	mov    ds:0x713ca2b9,eax
  41216e:	ss cwde 
  412170:	mov    al,0x79
  412172:	test   al,0xa9
  412174:	stos   BYTE PTR es:[edi],al
  412175:	xchg   edx,eax
  412176:	push   ds
  412177:	jmp    0x41213d
  412179:	sub    al,0xd7
  41217b:	push   0xffffffba
  41217d:	mov    ds:0x63b1fe28,eax
  412182:	mov    ah,0xfe
  412184:	xchg   edi,eax
  412185:	adc    DWORD PTR [edx+0x55f6942c],eax
  41218b:	inc    ebp
  41218c:	xor    DWORD PTR [edi],edi
  41218e:	cmc    
  41218f:	pop    ecx
  412190:	mov    bl,0x1b
  412192:	ja     0x4121d1
  412194:	ret    
  412195:	jne    0x4121c7
  412197:	jae    0x41218f
  412199:	(bad)  
  41219b:	mov    ch,0x13
  41219d:	mov    DWORD PTR [edx-0x70],ecx
  4121a0:	fwait
  4121a1:	sbb    eax,0x322b46c
  4121a6:	jae    0x412162
  4121a8:	fcmovnu st,st(1)
  4121aa:	mov    edi,edi
  4121ac:	xchg   esi,esp
  4121ae:	xor    al,0x63
  4121b1:	jns    0x412225
  4121b3:	cmc    
  4121b4:	xor    BYTE PTR [esp+edx*8-0xd479f25],al
  4121bb:	fild   QWORD PTR [edx+ebp*8-0x27]
  4121bf:	fnsave [esi]
  4121c1:	push   ebp
  4121c2:	mov    ah,0x2d
  4121c4:	iret   
  4121c5:	gs pop ebx
  4121c7:	imul   ah
  4121c9:	outs   dx,BYTE PTR ds:[esi]
  4121ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121cb:	mov    ecx,edx
  4121cd:	fistp  QWORD PTR [edi]
  4121cf:	add    eax,0x5ad17a5c
  4121d4:	and    ch,dh
  4121d6:	dec    eax
  4121d7:	push   esp
  4121d8:	aaa    
  4121d9:	cwde   
  4121da:	hlt    
  4121db:	shl    esp,cl
  4121dd:	outs   dx,DWORD PTR ds:[esi]
  4121de:	xchg   ecx,eax
  4121df:	push   ebx
  4121e0:	xchg   ebx,eax
  4121e1:	cmp    eax,0xc77f188d
  4121e6:	sub    al,0x4c
  4121e8:	xor    cl,BYTE PTR [ebp+0x30]
  4121eb:	mov    edx,DWORD PTR [esi+ecx*8+0x7ca1c5f4]
  4121f2:	dec    esp
  4121f3:	out    dx,eax
  4121f4:	pop    esp
  4121f5:	push   esp
  4121f6:	repz jecxz 0x4121c0
  4121f9:	idiv   BYTE PTR [ebx-0x3c]
  4121fc:	cmp    DWORD PTR [edi-0xeeab485],edx
  412202:	xchg   cl,dl
  412204:	ret    
  412205:	into   
  412206:	sbb    DWORD PTR [ecx],0x33522871
  41220c:	mov    ds:0x4795ba45,eax
  412211:	and    eax,0xaf18211c
  412216:	xor    edi,ebp
  412218:	mov    al,BYTE PTR [edi]
  41221a:	mov    dh,0x6f
  41221c:	fldcw  WORD PTR fs:0x58559b1f
  412223:	mov    dh,0x4b
  412225:	jl     0x4121cd
  412227:	imul   eax,esi,0x76
  41222a:	jl     0x41225f
  41222c:	outs   dx,BYTE PTR ds:[esi]
  41222d:	adc    dh,0x64
  412230:	in     eax,0xdb
  412232:	loope  0x4121c0
  412234:	inc    esp
  412235:	push   esp
  412236:	xor    cl,BYTE PTR ds:0x3614f2d0
  41223c:	sub    DWORD PTR [ecx-0x62c9374e],ecx
  412242:	repz dec esp
  412244:	adc    eax,0x7376614f
  412249:	test   BYTE PTR [edi],bl
  41224b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41224c:	xchg   edx,eax
  41224d:	dec    ebp
  41224e:	enter  0x3679,0x11
  412252:	inc    esp
  412253:	add    bh,bh
  412255:	add    al,0xe4
  412257:	adc    ecx,ecx
  412259:	imul   edi,DWORD PTR [esp+ebx*8-0x25],0x78c1da5
  412261:	mov    ah,0x7c
  412263:	mov    ds:0x5f450f44,al
  412268:	rol    ebp,cl
  41226a:	ins    BYTE PTR es:[edi],dx
  41226b:	out    0xa6,eax
  41226d:	mov    ebp,0x88ad9713
  412272:	ffreep st(7)
  412274:	mov    al,0x1a
  412276:	inc    ebx
  412277:	outs   dx,BYTE PTR ds:[esi]
  412278:	mov    ah,0xc5
  41227a:	or     al,BYTE PTR [esi+ecx*1]
  41227d:	aad    0x74
  41227f:	mul    BYTE PTR ds:0xc710cf7b
  412285:	addr16 pusha 
  412287:	test   BYTE PTR [edi+0x17f8385e],cl
  41228d:	icebp  
  41228e:	jne    0x41228a
  412290:	jns    0x412234
  412292:	out    dx,al
  412293:	pop    es
  412294:	sub    al,0x3b
  412296:	lds    ebx,FWORD PTR [edi]
  412298:	jmp    0x412231
  41229a:	in     al,dx
  41229b:	jg     0x412278
  41229d:	outs   dx,DWORD PTR ds:[esi]
  41229e:	jnp    0x412299
  4122a0:	sbb    DWORD PTR [edx+0x2754f930],edx
  4122a6:	(bad)  
  4122a7:	int    0xcc
  4122a9:	shl    BYTE PTR ds:0xe095781c,1
  4122af:	(bad)  
  4122b1:	or     al,0x78
  4122b3:	sbb    DWORD PTR [ecx],esi
  4122b5:	scas   al,BYTE PTR es:[edi]
  4122b6:	sbb    al,0x41
  4122b8:	or     ebp,eax
  4122ba:	in     eax,0x8c
  4122bc:	pop    esi
  4122bd:	mov    ds:0xaeb6dc95,al
  4122c2:	mov    esp,0xdf8a18b4
  4122c7:	add    eax,0xe6bb307b
  4122cc:	jge    0x412313
  4122ce:	pop    es
  4122cf:	adc    al,0xa5
  4122d1:	mov    ebx,0xc4845d75
  4122d6:	fnsave [ecx+0x5714ac0c]
  4122dc:	pop    ss
  4122dd:	xchg   esi,eax
  4122de:	ror    BYTE PTR [eax+0x67],cl
  4122e1:	into   
  4122e2:	ror    DWORD PTR [edi-0x3f],0xa6
  4122e6:	pop    ecx
  4122e7:	popf   
  4122e8:	dec    edx
  4122e9:	or     ch,ch
  4122eb:	ror    DWORD PTR [eax+0x4d064c6e],0x60
  4122f2:	hlt    
  4122f3:	mov    dh,0x8d
  4122f5:	cdq    
  4122f6:	fist   WORD PTR ds:[eax+esi*2]
  4122fa:	xchg   esi,eax
  4122fb:	xchg   edx,eax
  4122fc:	dec    ecx
  4122fd:	pop    ebp
  4122fe:	not    BYTE PTR [ebx+0x2fbbf58e]
  412304:	repz add al,0x92
  412307:	enter  0x6ba0,0x4c
  41230b:	mov    DWORD PTR [ecx+0x37],edx
  41230e:	xlat   BYTE PTR ds:[ebx]
  41230f:	and    esi,DWORD PTR [edi-0xb]
  412312:	mov    esi,0x5230ed8d
  412317:	dec    esp
  412318:	xor    al,0x85
  41231a:	cmp    eax,0x4dcc2e63
  41231f:	call   0x3f09:0xca3a4802
  412326:	div    BYTE PTR [edx-0x70272ca3]
  41232c:	pop    edi
  41232d:	add    DWORD PTR [esi],esi
  41232f:	es call 0xb95408a8
  412335:	pop    edx
  412336:	ret    0x33d7
  412339:	pop    ebx
  41233a:	pop    ebx
  41233b:	ja     0x41232e
  41233d:	rcr    DWORD PTR [eax+0x1e],0xe9
  412341:	enter  0xb2b8,0x65
  412345:	xchg   ecx,eax
  412346:	mov    esi,DWORD PTR [edx-0xe]
  412349:	aaa    
  41234a:	xchg   ebp,eax
  41234b:	clc    
  41234c:	sub    al,0xf3
  41234e:	sub    ah,BYTE PTR [eax]
  412350:	push   edx
  412351:	(bad)  
  412352:	out    0x28,eax
  412354:	rcr    esi,1
  412356:	xor    edx,DWORD PTR ds:0x148765ca
  41235c:	sub    al,0xa6
  41235e:	pop    ebp
  41235f:	mov    ebp,0x5d84cb35
  412364:	adc    DWORD PTR [eax-0x7129020f],esp
  41236a:	or     BYTE PTR es:[ebp+0x20bc0e96],dl
  412371:	adc    BYTE PTR [esi+0x53],0x10
  412375:	sbb    bl,BYTE PTR [edx]
  412377:	jmp    0x708f:0x75f78e10
  41237e:	out    dx,al
  41237f:	inc    eax
  412380:	mov    ah,0xb0
  412382:	adc    eax,0xbe2db5af
  412387:	adc    ebp,eax
  412389:	pop    ecx
  41238a:	xchg   edi,eax
  41238b:	mov    ebp,esi
  41238d:	mov    al,0xe9
  41238f:	rol    ebp,cl
  412391:	aam    0x97
  412393:	pushf  
  412394:	test   eax,0x3c67b953
  412399:	xchg   dh,dl
  41239b:	jns    0x4123f3
  41239d:	cmp    dl,BYTE PTR [edx-0x1b0da34c]
  4123a3:	test   DWORD PTR [esi+0x11bb2e25],0x37004e41
  4123ad:	sbb    eax,DWORD PTR [edx+0x46687769]
  4123b3:	push   edi
  4123b4:	shl    DWORD PTR [eax+0x3b],0x83
  4123b8:	cwde   
  4123b9:	jmp    0x8f4ce6f6
  4123be:	enter  0x9ebe,0x88
  4123c2:	mov    WORD PTR [ebx],es
  4123c4:	sbb    ch,BYTE PTR [ebx+0x2f380483]
  4123ca:	xchg   ebx,eax
  4123cb:	pushf  
  4123cc:	push   ds
  4123cd:	sbb    eax,DWORD PTR [esi+0x53]
  4123d0:	or     bh,BYTE PTR [ecx]
  4123d2:	out    0x15,al
  4123d4:	sub    bh,0xd6
  4123d7:	sbb    eax,0x19e12ca5
  4123dc:	je     0x41239b
  4123de:	aas    
  4123df:	xor    al,0xf2
  4123e1:	cdq    
  4123e2:	xchg   esp,eax
  4123e3:	es in  al,0x1b
  4123e6:	push   esp
  4123e7:	push   ecx
  4123e8:	aam    0xb0
  4123ea:	gs pop ss
  4123ec:	and    BYTE PTR [ebx+0x752dfd49],dl
  4123f2:	push   ss
  4123f3:	jb     0x412397
  4123f5:	mov    ah,0xe5
  4123f7:	xchg   edi,eax
  4123f8:	mov    ch,0x18
  4123fa:	dec    esi
  4123fb:	ficom  DWORD PTR [edx-0x3205168d]
  412401:	ss inc ecx
  412403:	sub    ebx,ebp
  412405:	popf   
  412406:	das    
  412407:	xor    eax,0x1a2c65f5
  41240c:	enter  0x5f4b,0xc2
  412410:	add    bl,dl
  412412:	dec    eax
  412413:	jno    0x412453
  412415:	push   eax
  412416:	test   BYTE PTR [ebx-0x7a],cl
  412419:	push   eax
  41241a:	ror    DWORD PTR [edi],cl
  41241c:	lock or DWORD PTR [ebx],ebx
  41241f:	addr16 dec edx
  412421:	aam    0xe6
  412423:	cli    
  412424:	fsub   DWORD PTR [esi+0x77]
  412427:	dec    ebx
  412428:	fnstsw WORD PTR [ecx+0x649275ce]
  41242e:	fld    QWORD PTR [ebp-0x27]
  412431:	retf   0x8a51
  412434:	push   0xffffffd2
  412436:	gs (bad) 
  412438:	int3   
  412439:	pop    es
  41243a:	lods   al,BYTE PTR ds:[esi]
  41243b:	scas   eax,DWORD PTR es:[edi]
  41243c:	test   BYTE PTR [edi],ch
  41243e:	or     edi,DWORD PTR [eax+0x1ccf838]
  412444:	cdq    
  412445:	push   cs
  412446:	inc    edx
  412447:	inc    edx
  412448:	and    al,0x27
  41244a:	push   0x83509cbe
  41244f:	xchg   ebp,eax
  412450:	shl    DWORD PTR [ebp-0x4d],cl
  412453:	fild   QWORD PTR [esi]
  412455:	gs xchg edi,eax
  412457:	jg     0x412446
  412459:	push   eax
  41245a:	rcl    BYTE PTR [esi],1
  41245c:	mov    al,ds:0xf3db5680
  412461:	lods   eax,DWORD PTR ds:[esi]
  412462:	jns    0x412407
  412464:	push   esi
  412465:	sub    ebx,DWORD PTR [ecx]
  412467:	dec    esi
  412468:	div    BYTE PTR [ecx+0x6e]
  41246b:	std    
  41246c:	and    al,0x90
  41246e:	lods   eax,DWORD PTR ds:[esi]
  41246f:	and    BYTE PTR [ebp-0x13940f48],cl
  412475:	jno    0x41241f
  412477:	repnz (bad) 
  412479:	jns    0x41240b
  41247b:	aas    
  41247c:	stc    
  41247d:	shl    BYTE PTR ds:0x50f5951c,0x27
  412484:	les    esi,FWORD PTR [ebx]
  412486:	ja     0x412424
  412488:	cs dec ecx
  41248a:	dec    edi
  41248b:	ror    DWORD PTR [edi+edi*8],1
  41248e:	aas    
  41248f:	fwait
  412490:	out    0x2a,al
  412492:	mov    ecx,0xae7ee503
  412497:	scas   eax,DWORD PTR es:[edi]
  412498:	(bad)  
  412499:	pushf  
  41249a:	repnz aaa 
  41249c:	jle    0x41245a
  41249e:	retf   0x2a9e
  4124a1:	ss pop ecx
  4124a3:	out    0x28,al
  4124a5:	daa    
  4124a6:	nop
  4124a7:	xchg   al,bh
  4124a9:	mov    eax,ebp
  4124ab:	aam    0x68
  4124ad:	jnp    0x41246f
  4124af:	xchg   esp,eax
  4124b0:	jae    0x4124f9
  4124b2:	push   ss
  4124b3:	ds pop ss
  4124b5:	mov    ds:0xe9575397,eax
  4124ba:	mov    dh,0xde
  4124bc:	jle    0x412475
  4124be:	iret   
  4124bf:	cmovno esi,DWORD PTR [edx]
  4124c2:	xchg   DWORD PTR [edx+0x75],esi
  4124c5:	or     bl,al
  4124c7:	scas   al,BYTE PTR es:[edi]
  4124c8:	mov    dh,0xb6
  4124ca:	jnp    0x4124f8
  4124cc:	clc    
  4124cd:	push   esp
  4124ce:	jg     0x4124d4
  4124d0:	ds adc eax,0x6a3a5377
  4124d6:	mul    BYTE PTR [edi]
  4124d8:	mov    ah,0x18
  4124da:	lea    edx,[ebx-0x32]
  4124dd:	mov    edi,esp
  4124df:	jecxz  0x4124a7
  4124e1:	inc    edx
  4124e2:	or     al,BYTE PTR [esi-0x12d62416]
  4124e8:	std    
  4124e9:	cmp    BYTE PTR cs:[eax],bh
  4124ec:	mov    ch,0x68
  4124ee:	dec    esp
  4124ef:	outs   dx,BYTE PTR ds:[esi]
  4124f0:	inc    esi
  4124f1:	ficomp DWORD PTR [esi+0x34]
  4124f4:	mov    ds:0xfa04423e,eax
  4124f9:	lods   eax,DWORD PTR ds:[esi]
  4124fa:	xchg   ebp,eax
  4124fb:	loope  0x412564
  4124fd:	(bad)  
  4124fe:	jle    0x41248d
  412500:	dec    esi
  412501:	(bad)  [ecx+0xb499c44]
  412507:	test   DWORD PTR [edi],ebp
  412509:	stos   BYTE PTR es:[edi],al
  41250a:	pop    ecx
  41250b:	xor    dl,BYTE PTR [ebx+0x66]
  41250e:	les    edx,FWORD PTR [edx-0x4fb7b9b3]
  412514:	in     al,dx
  412515:	int    0x9a
  412517:	shl    esi,1
  412519:	in     al,dx
  41251a:	push   esi
  41251b:	in     al,0x4a
  41251d:	fist   DWORD PTR [edi-0x20ffb5ca]
  412523:	pop    esi
  412524:	retf   
  412525:	or     ch,dh
  412527:	sbb    eax,0x8e48f18
  41252c:	xor    ah,BYTE PTR [esi-0x63753089]
  412532:	pusha  
  412533:	ss mov ah,0xcc
  412536:	(bad)  
  412537:	sbb    DWORD PTR [edi-0x7de53cdd],esp
  41253d:	scas   eax,DWORD PTR es:[edi]
  41253e:	into   
  41253f:	je     0x4124e2
  412541:	jmp    0x41252c
  412543:	mov    dh,0x68
  412545:	push   edi
  412546:	das    
  412547:	out    0xde,al
  412549:	jb     0x412535
  41254b:	in     eax,dx
  41254c:	and    DWORD PTR [ecx],edi
  41254e:	mov    edx,0x79c9158f
  412553:	mov    ah,0x70
  412555:	ss in  eax,dx
  412557:	mov    BYTE PTR [esi],ch
  412559:	in     eax,0x47
  41255b:	mov    edx,DWORD PTR [ebx]
  41255d:	fs jbe 0x412517
  412560:	nop
  412561:	or     DWORD PTR [ebx-0x2f],ebp
  412564:	and    ebp,DWORD PTR [ecx-0x76a518a]
  41256a:	lock stc 
  41256c:	nop
  41256d:	mov    eax,0x535ed065
  412572:	stos   DWORD PTR es:[edi],eax
  412573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412574:	(bad)  
  412575:	mov    bl,dl
  412577:	adc    cl,BYTE PTR ds:0xcf72172d
  41257d:	cs pop eax
  41257f:	xchg   ebx,eax
  412580:	hlt    
  412581:	mov    esi,0x1f144361
  412586:	mov    al,0x6
  412588:	pop    ss
  412589:	inc    edx
  41258a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41258b:	and    al,0x73
  41258d:	cmp    edx,0x383c0065
  412593:	sbb    al,0x29
  412595:	aad    0xf7
  412597:	fdivr  st,st(6)
  412599:	int    0x9a
  41259b:	lock fdivrp st(0),st
  41259e:	ds jns 0x412617
  4125a1:	ins    BYTE PTR es:[edi],dx
  4125a2:	xchg   esp,edx
  4125a4:	push   DWORD PTR [edx+0xb]
  4125a7:	fcmovbe st,st(2)
  4125a9:	xchg   edi,eax
  4125ab:	sbb    DWORD PTR [ebx-0x57],esp
  4125ae:	inc    ecx
  4125af:	das    
  4125b0:	sbb    al,0x40
  4125b2:	out    dx,al
  4125b3:	ret    0xf052
  4125b6:	mov    al,0x1d
  4125b8:	dec    ebp
  4125b9:	mov    ah,dl
  4125bb:	(bad)  
  4125bc:	push   ebx
  4125bd:	shr    DWORD PTR [edi+0x7],1
  4125c0:	jne    0x4125b2
  4125c2:	fadd   QWORD PTR [eax]
  4125c4:	sbb    eax,0x775dcc46
  4125c9:	mov    dl,0x6f
  4125cb:	inc    eax
  4125cc:	inc    ecx
  4125cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125ce:	push   ds
  4125cf:	mov    WORD PTR [ebx-0x27],?
  4125d2:	push   es
  4125d3:	xchg   ebx,eax
  4125d4:	psllw  mm5,QWORD PTR [esi]
  4125d7:	and    eax,0x5a52ec90
  4125dc:	in     eax,0x43
  4125de:	push   ss
  4125df:	ja     0x412574
  4125e1:	jp     0x412635
  4125e3:	loop   0x41262b
  4125e5:	clc    
  4125e6:	lea    esi,[ebp+0x27]
  4125e9:	daa    
  4125ea:	popf   
  4125eb:	inc    bl
  4125ed:	sub    ch,BYTE PTR ds:0x4ec4c843
  4125f3:	and    esi,edx
  4125f5:	aad    0xd3
  4125f7:	pushf  
  4125f8:	jb     0x412596
  4125fa:	psubb  mm6,mm3
  4125fd:	in     eax,0xae
  4125ff:	in     eax,dx
  412600:	outs   dx,BYTE PTR ds:[esi]
  412601:	out    0xaa,al
  412603:	mov    eax,ds:0x84a97c38
  412608:	ins    DWORD PTR es:[edi],dx
  412609:	loopne 0x412608
  41260b:	push   esi
  41260c:	and    BYTE PTR [ebx+0x1dc797b8],ah
  412612:	jne    0x41267d
  412614:	mov    dh,0x38
  412616:	mov    al,0x96
  412618:	mov    ds:0x9ad746fc,al
  41261d:	add    esp,eax
  41261f:	cmp    BYTE PTR [ebx+0xc525ad9],bh
  412625:	ja     0x41269b
  412627:	pop    es
  412628:	sahf   
  412629:	jp     0x4126a6
  41262b:	stc    
  41262c:	cmp    DWORD PTR [esi-0x4e],ebp
  41262f:	jg     0x412603
  412631:	stos   BYTE PTR es:[edi],al
  412632:	or     DWORD PTR [eax],eax
  412634:	xchg   ebp,eax
  412635:	addr16 dec ebp
  412637:	add    DWORD PTR [ebp+0x2004a318],ebp
  41263d:	jmp    0x2c42:0x19d3c098
  412644:	mov    esp,DWORD PTR [ecx+esi*8+0x729740cc]
  41264b:	inc    esi
  41264c:	and    al,0xc6
  41264e:	adc    al,cl
  412650:	push   cs
  412651:	mov    ds:0x59724e7d,al
  412656:	jb     0x412688
  412658:	loop   0x412610
  41265a:	and    bh,BYTE PTR [esi+0x36032a47]
  412660:	lods   al,BYTE PTR ds:[esi]
  412661:	mov    dh,0x73
  412663:	add    dh,BYTE PTR ds:0xefb83088
  412669:	and    cl,ch
  41266b:	xor    ebp,DWORD PTR [ecx+0xd4c9e2a]
  412671:	xor    DWORD PTR [ebp+0x525e652d],eax
  412677:	popa   
  412678:	push   esi
  412679:	sub    DWORD PTR [edi+0x10],eax
  41267c:	jnp    0x412646
  41267e:	inc    esp
  41267f:	add    al,0x3c
  412681:	iret   
  412682:	inc    ebp
  412683:	loopne 0x412634
  412685:	in     al,0x55
  412687:	push   edx
  412688:	pop    esp
  412689:	aaa    
  41268a:	dec    edx
  41268b:	xor    eax,ebx
  41268d:	sti    
  41268e:	pop    ds
  41268f:	arpl   WORD PTR [ebx+ebx*4+0x526f62fc],di
  412696:	xor    esp,DWORD PTR [esi+0x52d69758]
  41269c:	jb     0x4126cf
  41269e:	xchg   edi,eax
  41269f:	cmp    al,0x84
  4126a1:	test   DWORD PTR [ecx-0x74],ebp
  4126a4:	ror    DWORD PTR [edx],0xef
  4126a7:	cwde   
  4126a8:	int3   
  4126a9:	inc    ebx
  4126aa:	clc    
  4126ab:	and    BYTE PTR [esi+ebx*1+0x7d],cl
  4126af:	push   edx
  4126b0:	rcr    al,0xae
  4126b3:	mov    cl,0xdd
  4126b5:	cmp    cl,bl
  4126b7:	test   al,0x87
  4126b9:	not    BYTE PTR [ebp+0x64]
  4126bc:	adc    eax,0xa2561e48
  4126c1:	in     eax,0xb4
  4126c3:	test   cl,ch
  4126c5:	test   BYTE PTR [eax-0x607395f4],0xc8
  4126cc:	retf   0x4bd5
  4126cf:	fisub  DWORD PTR ds:0x9fb458f8
  4126d5:	or     DWORD PTR [edx],0xfffffff8
  4126d8:	test   DWORD PTR [esp+ecx*1-0x6a52613a],ebp
  4126df:	inc    ebx
  4126e0:	icebp  
  4126e1:	hlt    
  4126e2:	pop    eax
  4126e3:	adc    bl,0xad
  4126e6:	clc    
  4126e7:	(bad)  
  4126e8:	cwde   
  4126e9:	cmp    DWORD PTR [esi+eiz*4],ebp
  4126ec:	dec    edi
  4126ed:	or     dl,BYTE PTR [esi+ecx*4]
  4126f0:	pop    ebx
  4126f1:	enter  0x16fc,0x63
  4126f5:	xchg   DWORD PTR [edi-0x840e57],ecx
  4126fb:	adc    cl,BYTE PTR [eax+0x4ab13885]
  412701:	out    dx,eax
  412702:	ja     0x4126d9
  412704:	cmp    dh,BYTE PTR [ecx]
  412706:	jae    0x412692
  412708:	pop    ebx
  412709:	out    0xab,eax
  41270b:	mov    edi,0x7d977d57
  412710:	jle    0x412715
  412712:	mov    WORD PTR [esi],gs
  412714:	push   ss
  412715:	push   es
  412716:	es mov dl,0xab
  412719:	mov    edx,0x9945aa6b
  41271e:	pop    ss
  41271f:	scas   eax,DWORD PTR es:[edi]
  412720:	add    eax,0x9590ba80
  412725:	sahf   
  412726:	psubd  mm2,mm7
  412729:	jbe    0x412701
  41272b:	cwde   
  41272c:	pop    edi
  41272d:	dec    edi
  41272e:	mov    al,0x31
  412730:	cmc    
  412731:	clc    
  412732:	xor    esi,ebx
  412734:	xchg   BYTE PTR [ebx-0x77a3c3fc],bh
  41273a:	xchg   esp,eax
  41273b:	dec    edi
  41273c:	or     dl,BYTE PTR [ecx*2+0x54aad5ba]
  412743:	adc    esi,ebp
  412745:	out    dx,al
  412746:	or     DWORD PTR [edi+0xf7a89ce],edx
  41274c:	pop    ss
  41274d:	std    
  41274e:	pop    esp
  41274f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412750:	cdq    
  412751:	adc    cl,ch
  412753:	push   ebp
  412754:	jnp    0x41275d
  412756:	fwait
  412757:	pop    eax
  412758:	js     0x412705
  41275a:	push   0x3c34dcee
  41275f:	hlt    
  412760:	jecxz  0x41271b
  412762:	popa   
  412763:	pop    es
  412764:	jns    0x41279b
  412766:	inc    edi
  412767:	cmp    al,0x51
  412769:	rcr    ch,1
  41276b:	xchg   ebp,eax
  41276c:	loope  0x41277b
  41276e:	cmp    BYTE PTR [edx+0x71],bl
  412771:	(bad)  
  412772:	push   cs
  412773:	inc    ebp
  412774:	fldcw  WORD PTR [ebx-0x21]
  412777:	or     bl,BYTE PTR [edi]
  412779:	cwde   
  41277a:	mov    dh,0xf0
  41277c:	ret    
  41277d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41277e:	sahf   
  41277f:	mov    ds:0xea70eb2,eax
  412784:	jmp    0xf514839e
  412789:	jle    0x4127e7
  41278b:	je     0xcf099d01
  412791:	ja     0x4127ae
  412793:	jp     0x4127bd
  412795:	jmp    edi
  412797:	sbb    BYTE PTR [eax+0x69],dh
  41279a:	or     al,0x2
  41279c:	inc    ebp
  41279d:	scas   eax,DWORD PTR es:[edi]
  41279e:	push   ebx
  41279f:	push   es
  4127a0:	arpl   WORD PTR [edi],cx
  4127a2:	retf   
  4127a3:	hlt    
  4127a4:	test   al,0xf9
  4127a6:	rol    DWORD PTR ss:0xc8092c0c,1
  4127ad:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127af:	sub    DWORD PTR [edx-0x4e9dc47b],ebp
  4127b5:	jmp    0x16a7:0xa02e9a2a
  4127bc:	bound  ebp,QWORD PTR [edi]
  4127be:	xchg   ecx,eax
  4127bf:	outs   dx,BYTE PTR ds:[esi]
  4127c0:	xchg   edx,eax
  4127c1:	mov    eax,0xf9c25ab1
  4127c6:	outs   dx,BYTE PTR ds:[esi]
  4127c7:	in     al,dx
  4127c8:	out    0xb2,eax
  4127ca:	ror    dh,0x23
  4127cd:	rol    BYTE PTR [edi-0x3e],cl
  4127d0:	mov    edx,0x58e08a54
  4127d5:	into   
  4127d6:	scas   eax,DWORD PTR es:[edi]
  4127d7:	or     al,0x38
  4127d9:	jmp    0x691f:0x1dddd08
  4127e0:	mov    DWORD PTR [ebx],eax
  4127e2:	icebp  
  4127e3:	rcl    bl,cl
  4127e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127e6:	push   ss
  4127e7:	cmp    BYTE PTR [ebx],bl
  4127e9:	mov    dh,BYTE PTR [esi]
  4127eb:	push   ebp
  4127ec:	or     ch,bl
  4127ee:	lock mov ecx,0xd5a09283
  4127f4:	adc    BYTE PTR [ebx],bh
  4127f6:	sub    eax,0x12d3ffba
  4127fb:	dec    eax
  4127fc:	jge    0x412800
  4127fe:	pop    edi
  4127ff:	int3   
  412800:	push   edi
  412801:	adc    eax,0x93937b0a
  412806:	add    cl,BYTE PTR [eax+eiz*1+0x3f]
  41280a:	fdivrp st(4),st
  41280c:	sahf   
  41280d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41280e:	jae    0x4127cf
  412810:	sub    al,0x75
  412812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412813:	inc    esi
  412814:	pop    es
  412815:	inc    ebp
  412816:	sub    eax,0x42b59add
  41281b:	gs in  eax,0xc2
  41281e:	fld    TBYTE PTR [eax]
  412820:	nop
  412821:	cmp    al,0x6e
  412823:	sti    
  412824:	mov    ds:0x45820f70,al
  412829:	(bad)  
  41282a:	adc    BYTE PTR [ecx-0x69],dl
  41282d:	inc    edi
  41282e:	popf   
  41282f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412830:	or     bl,bl
  412832:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412834:	pop    edx
  412835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412836:	in     eax,0x3c
  412838:	cdq    
  412839:	sub    DWORD PTR [eax+0x5c14619d],0x11
  412840:	std    
  412841:	leave  
  412842:	addr16 ja 0x4127cb
  412845:	or     eax,0x29a0de24
  41284a:	add    al,0x9b
  41284c:	cmp    al,0x81
  41284e:	pop    es
  41284f:	mov    DWORD PTR [eax+0x3e],0x5eaede4a
  412856:	aas    
  412857:	xchg   ebp,eax
  412858:	loope  0x41282c
  41285a:	dec    edi
  41285b:	loopne 0x412809
  41285d:	mov    ebx,0x3214cb80
  412862:	jnp    0x4127f1
  412864:	or     BYTE PTR [edi+0x3e],0xb9
  412868:	aad    0x36
  41286a:	adc    ecx,DWORD PTR [eax+0x55]
  41286d:	or     DWORD PTR [edx+0xf67cc0c],ecx
  412873:	daa    
  412874:	sub    dl,BYTE PTR [ebx-0x48]
  412877:	test   eax,0x7bb485da
  41287c:	jmp    DWORD PTR [esi]
  41287e:	jb     0x4128ae
  412880:	neg    BYTE PTR [edx-0x2211be4b]
  412886:	es test al,0x10
  412889:	jle    0x412813
  41288b:	mov    al,ds:0x7e934625
  412890:	push   0xffffff9f
  412892:	or     BYTE PTR [ebx-0x6074358a],0x4f
  412899:	push   ebx
  41289a:	cmp    eax,0xfb33887d
  41289f:	ret    0x7ba0
  4128a2:	push   ebp
  4128a3:	sbb    cl,BYTE PTR [esi]
  4128a5:	fs das 
  4128a7:	rol    ebx,0xc4
  4128aa:	test   BYTE PTR [ecx-0xae1efc0],al
  4128b0:	pop    edx
  4128b1:	(bad)  
  4128b2:	pushf  
  4128b3:	sbb    esi,DWORD PTR [edx+0x44]
  4128b6:	outs   dx,BYTE PTR ds:[esi]
  4128b7:	xor    ebx,DWORD PTR [edi+eiz*2+0x6c]
  4128bb:	add    bl,dl
  4128bd:	inc    edx
  4128be:	or     bh,al
  4128c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128c1:	addr16 dec edi
  4128c3:	mov    ebp,0x2c5b58fb
  4128c8:	mov    esi,0x192504a5
  4128cd:	inc    ebp
  4128ce:	stos   DWORD PTR es:[edi],eax
  4128cf:	retf   0x247d
  4128d2:	fisubr DWORD PTR ds:0x4d604713
  4128d8:	mov    edx,0x858ae72f
  4128dd:	inc    edx
  4128de:	add    DWORD PTR [eax-0x71],edi
  4128e1:	jmp    0x4b4f:0x209f4496
  4128e8:	fld    st(4)
  4128ea:	adc    edx,DWORD PTR es:[ebx]
  4128ed:	loope  0x412889
  4128ef:	xor    ebx,DWORD PTR [edx]
  4128f1:	mov    edi,0x1838ef45
  4128f6:	ror    eax,1
  4128f8:	out    dx,al
  4128f9:	arpl   WORD PTR [edi+eax*2-0xe2306d3],sp
  412900:	call   0xeec9:0x24e72e6f
  412907:	xlat   BYTE PTR ds:[ebx]
  412908:	and    DWORD PTR [ecx+edx*2-0x63],esi
  41290c:	or     al,0xe5
  41290e:	adc    edx,ecx
  412910:	fwait
  412911:	mov    cl,0x7c
  412913:	adc    ch,BYTE PTR [edi]
  412915:	pop    esp
  412916:	sbb    DWORD PTR [edi*1+0x28725ca5],0xffffff89
  41291e:	jne    0x4128ff
  412920:	push   ds
  412921:	pushf  
  412922:	cld    
  412923:	mov    ch,0x10
  412925:	loop   0x412972
  412927:	shl    dh,cl
  412929:	pop    ebp
  41292a:	or     esp,DWORD PTR fs:[ecx+eax*2]
  41292e:	loope  0x4128f4
  412930:	loopne 0x4128d2
  412932:	enter  0x4adf,0xbe
  412936:	xchg   esi,eax
  412937:	cwde   
  412938:	mov    eax,0x1ef21a42
  41293d:	pop    edi
  41293e:	loope  0x41296c
  412940:	pusha  
  412941:	mov    edi,0x80cc8f6a
  412946:	jne    0x4129ba
  412948:	push   ebx
  412949:	repnz xchg esi,eax
  41294b:	cli    
  41294c:	cld    
  41294d:	mov    al,0x51
  41294f:	lea    ebx,[ecx-0x56]
  412952:	fisttp WORD PTR [esi+edi*8]
  412955:	cmp    esp,DWORD PTR [ebx]
  412957:	dec    esi
  412958:	adc    eax,0x4a
  41295b:	xor    bh,dh
  41295d:	pop    ebp
  41295e:	dec    ecx
  41295f:	push   ecx
  412960:	xor    DWORD PTR [esi+0x32d3cc84],esi
  412966:	sub    DWORD PTR [eax-0x5],esp
  412969:	push   0x79
  41296b:	dec    eax
  41296c:	mov    cl,0xc1
  41296e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41296f:	aam    0x68
  412971:	jmp    0x41297e
  412973:	mov    BYTE PTR [edi+0x586b00aa],ch
  412979:	shl    DWORD PTR [esi+eax*8-0x6c030985],1
  412980:	nop
  412981:	inc    ebp
  412982:	stc    
  412983:	xchg   edi,eax
  412984:	mov    ch,0x67
  412986:	adc    eax,0x5478347d
  41298b:	dec    esp
  41298c:	mov    BYTE PTR [eax+0x12ccb237],bl
  412992:	pop    ds
  412993:	xor    eax,0xdbffec28
  412998:	in     al,0x28
  41299a:	and    dl,BYTE PTR [ebx+edx*4+0x20]
  41299e:	fs cmp esi,edi
  4129a1:	xchg   edx,eax
  4129a2:	ror    DWORD PTR [ebx],cl
  4129a4:	inc    edi
  4129a5:	ds pop edi
  4129a7:	test   DWORD PTR [ebp-0x52],edx
  4129aa:	cmp    esp,DWORD PTR [edi+0x4cbab081]
  4129b0:	(bad)  
  4129b1:	out    0xc7,eax
  4129b3:	or     BYTE PTR [esi+0x3c46423],0x6e
  4129ba:	sub    ebp,edi
  4129bc:	loope  0x4129d7
  4129be:	and    DWORD PTR [esi-0x78],ecx
  4129c1:	xchg   esp,eax
  4129c2:	stc    
  4129c3:	add    al,0xdd
  4129c5:	inc    edx
  4129c6:	xor    DWORD PTR [edx+0x40],ebx
  4129c9:	sbb    eax,0x1198ffb8
  4129ce:	push   ebx
  4129cf:	outs   dx,DWORD PTR ds:[esi]
  4129d0:	xor    ah,al
  4129d2:	and    ebp,esp
  4129d4:	jecxz  0x412a0f
  4129d6:	mov    ecx,0x680585fe
  4129db:	mov    esp,0x13090073
  4129e0:	leave  
  4129e1:	pop    es
  4129e2:	cmp    ch,BYTE PTR [eax]
  4129e4:	xlat   BYTE PTR ds:[ebx]
  4129e5:	jmp    0x412a2f
  4129e7:	sbb    DWORD PTR [ecx-0x29],ebp
  4129ea:	push   edi
  4129eb:	pop    ebp
  4129ec:	cmp    bh,BYTE PTR [ebp+ebp*1+0x3e]
  4129f0:	test   al,0x61
  4129f2:	adc    al,0xcd
  4129f4:	fst    st(7)
  4129f6:	loopne 0x412a0d
  4129f8:	ds mov al,0xd9
  4129fb:	outs   dx,DWORD PTR ds:[esi]
  4129fc:	je     0x412a0b
  4129fe:	call   0x690d:0x5ce7658e
  412a05:	fistp  DWORD PTR ds:0x58b502e3
  412a0b:	fdiv   DWORD PTR [edi+0x6411612c]
  412a11:	fwait
  412a12:	xchg   edx,eax
  412a13:	ret    
  412a14:	sbb    esp,ecx
  412a16:	iret   
  412a17:	inc    edx
  412a18:	es in  al,0x58
  412a1b:	sub    eax,0x493deffc
  412a20:	xchg   esp,eax
  412a21:	test   al,0xcf
  412a23:	pop    ebx
  412a24:	xor    dh,BYTE PTR [edx-0x19]
  412a27:	adc    DWORD PTR [edx+0x17],edi
  412a2a:	sbb    edi,DWORD PTR [esi+0x13]
  412a2d:	cmp    al,0x59
  412a2f:	jl     0x412a79
  412a31:	adc    al,0x3c
  412a33:	repnz imul edi,esi,0xffffffc7
  412a37:	jl     0x412a36
  412a39:	jbe    0x4129da
  412a3b:	jae    0x412aac
  412a3d:	imul   ecx,DWORD PTR [ecx+eiz*4],0x5d5b1cf3
  412a44:	pop    ebx
  412a45:	scas   eax,DWORD PTR es:[edi]
  412a46:	xchg   ebp,eax
  412a47:	jae    0x4129e6
  412a49:	jae    0x412ab8
  412a4b:	test   DWORD PTR [edi+0x324a2bcd],edi
  412a51:	bound  edx,QWORD PTR [esi-0x22]
  412a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a55:	out    dx,al
  412a56:	(bad)  
  412a58:	fsubr  QWORD PTR [esi]
  412a5a:	push   ebx
  412a5b:	stos   DWORD PTR es:[edi],eax
  412a5c:	call   0xfdaa:0xde75e09e
  412a63:	js     0x412a3d
  412a65:	jmp    0x11d32ca5
  412a6a:	pusha  
  412a6b:	mov    BYTE PTR [edx],ch
  412a6d:	jg     0x412a98
  412a6f:	fldcw  WORD PTR [esi-0x1071c0aa]
  412a75:	inc    ebx
  412a76:	fdivp  st(1),st
  412a78:	adc    BYTE PTR [ebx],dh
  412a7a:	retf   0xe717
  412a7d:	sar    BYTE PTR [ecx-0x1e972e32],0x2d
  412a84:	(bad)
  412a88:	adc    BYTE PTR [eax+ecx*8+0x4a],dh
  412a8c:	and    bl,al
  412a8e:	(bad)  
  412a90:	popa   
  412a91:	bound  edx,QWORD PTR [edx]
  412a93:	push   0xffffffc3
  412a95:	mov    ah,0x53
  412a97:	lods   al,BYTE PTR ds:[esi]
  412a98:	sub    ch,BYTE PTR [edx-0x4c80ecb2]
  412a9e:	push   cs
  412a9f:	dec    esp
  412aa0:	imul   ebx,DWORD PTR [ebp+esi*8-0x16],0x54038c14
  412aa8:	mov    edi,edx
  412aaa:	xor    BYTE PTR [ebx+0x11],0x52
  412aae:	test   al,0xa7
  412ab0:	jge    0x412a64
  412ab2:	push   esp
  412ab3:	loopne 0x412a87
  412ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ab6:	call   0x373767b4
  412abb:	xchg   esp,eax
  412abc:	pop    ecx
  412abd:	sti    
  412abe:	arpl   WORD PTR [edx],cx
  412ac0:	sbb    al,0x20
  412ac2:	sahf   
  412ac3:	jg     0x412b0a
  412ac5:	shr    DWORD PTR [ecx],0x1a
  412ac8:	inc    esp
  412ac9:	pop    esi
  412aca:	pusha  
  412acb:	aad    0xca
  412acd:	out    0x5f,eax
  412acf:	xlat   BYTE PTR ds:[ebx]
  412ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ad1:	outs   dx,BYTE PTR ds:[esi]
  412ad2:	pmulhuw mm7,QWORD PTR [ebx+0x5cdf5177]
  412ad9:	enter  0x69c2,0x2a
  412add:	dec    eax
  412ade:	outs   dx,DWORD PTR ds:[esi]
  412adf:	out    dx,al
  412ae0:	test   DWORD PTR [edi-0x5a],edi
  412ae3:	jbe    0x412aa9
  412ae5:	push   eax
  412ae6:	jp     0x412b3d
  412ae8:	jnp    0x412b51
  412aea:	push   esi
  412aeb:	or     bl,0x96
  412aee:	xchg   ebx,eax
  412aef:	sbb    ecx,DWORD PTR [ecx+ebx*4-0x6588d2d1]
  412af6:	test   eax,0x86c23303
  412afb:	adc    al,0x44
  412afd:	(bad)  
  412afe:	(bad)  [ebx]
  412b00:	popa   
  412b01:	and    BYTE PTR [ebx-0x2c],bl
  412b04:	cmp    esi,DWORD PTR [esi]
  412b06:	es jg  0x412b87
  412b09:	mov    ebx,0x1f3d19c4
  412b0e:	mov    ecx,0x2607f06
  412b13:	pop    edx
  412b14:	ins    BYTE PTR es:[edi],dx
  412b15:	mov    dh,0x62
  412b17:	mov    BYTE PTR [ebx],bl
  412b19:	scas   al,BYTE PTR es:[edi]
  412b1a:	test   BYTE PTR ds:[edx],0x35
  412b1e:	out    dx,al
  412b1f:	call   0xe0e25ef0
  412b24:	rcl    DWORD PTR [ebp+eax*4+0x32],cl
  412b28:	fadd   QWORD PTR [ebx]
  412b2a:	xor    DWORD PTR ss:[eax+ebp*4+0x69c799e],0xa98c0ae6
  412b36:	(bad)  
  412b37:	adc    al,0x34
  412b39:	arpl   dx,si
  412b3b:	pop    ds
  412b3c:	fild   DWORD PTR [ecx+0x2]
  412b3f:	push   esp
  412b40:	xor    ebp,edx
  412b42:	test   eax,0xae896f94
  412b47:	inc    edi
  412b48:	shl    DWORD PTR gs:[eax+0x1d],1
  412b4c:	out    0xa8,al
  412b4e:	fimul  DWORD PTR [esi]
  412b50:	cmp    BYTE PTR [ebx],0xf5
  412b53:	inc    edi
  412b54:	cmc    
  412b55:	xchg   esi,eax
  412b56:	cmc    
  412b57:	sbb    DWORD PTR [esi],esi
  412b59:	xor    DWORD PTR [esi],ebx
  412b5b:	mov    edi,0x475f9fbc
  412b60:	and    BYTE PTR [ecx-0x63],ah
  412b63:	retfw  
  412b65:	dec    ecx
  412b66:	jns    0x412b16
  412b68:	jecxz  0x412b9c
  412b6a:	sub    BYTE PTR [edx],al
  412b6c:	pop    edi
  412b6d:	jno    0x412ba4
  412b6f:	(bad)  
  412b70:	retf   0xb4dc
  412b73:	sub    eax,DWORD PTR [eax]
  412b75:	mov    ds:0xffd0e0d9,al
  412b7a:	(bad)  
  412b7b:	fisubr WORD PTR [edi-0x30]
  412b7e:	dec    ebx
  412b7f:	aad    0x10
  412b81:	scas   eax,DWORD PTR es:[edi]
  412b82:	sbb    BYTE PTR [ebp+0x40],bh
  412b85:	jl     0x412b40
  412b87:	mov    ecx,0xae04b782
  412b8c:	int    0x91
  412b8e:	sbb    al,0x51
  412b90:	test   DWORD PTR [ebp-0x56],ebp
  412b93:	push   ebp
  412b94:	inc    ecx
  412b95:	pop    ss
  412b96:	add    al,0x48
  412b98:	push   0x711b1ad5
  412b9d:	ds loope 0x412b51
  412ba0:	add    eax,0xf962e6af
  412ba5:	dec    ecx
  412ba6:	sbb    ebp,edx
  412ba8:	scas   eax,DWORD PTR es:[edi]
  412ba9:	je     0x412b5c
  412bab:	inc    eax
  412bac:	int    0xc6
  412bae:	or     DWORD PTR [ecx],esp
  412bb0:	mov    edi,0xb8f69740
  412bb5:	imul   DWORD PTR [edx+0x5546e04c]
  412bbb:	cwde   
  412bbc:	sub    eax,0xb5bcdf42
  412bc1:	xor    BYTE PTR [ecx-0x35fff29d],dh
  412bc7:	imul   edx,ebp,0x2ad15086
  412bcd:	add    DWORD PTR [edx-0x4e7875f8],esp
  412bd3:	lods   eax,DWORD PTR ds:[esi]
  412bd4:	jae    0x412bff
  412bd6:	cmp    BYTE PTR [ebx+0x2ff0eb3f],cl
  412bdc:	xchg   esi,eax
  412bdd:	pop    esi
  412bde:	sub    ah,BYTE PTR [ebx-0xc20e1dc]
  412be4:	mov    ch,0x84
  412be6:	gs and esi,edi
  412be9:	dec    esp
  412bea:	xchg   BYTE PTR [ebx-0x222ae347],dl
  412bf0:	mov    ds:0xa419fec1,eax
  412bf5:	push   edx
  412bf6:	(bad)  
  412bf7:	mov    BYTE PTR [ebx],bh
  412bf9:	(bad)  
  412bfa:	fwait
  412bfb:	loop   0x412c3e
  412bfd:	mov    eax,ebp
  412bff:	adc    DWORD PTR [ebx-0x3fb4fd4],esi
  412c05:	add    al,0x89
  412c07:	inc    eax
  412c08:	push   edx
  412c09:	add    ebx,DWORD PTR [ebp-0x78]
  412c0c:	add    DWORD PTR [edx],0xffffff91
  412c0f:	mov    edx,0xe2dc94fa
  412c14:	or     cl,ch
  412c16:	rcr    DWORD PTR [ebx-0x2561ad13],cl
  412c1c:	cmp    eax,0x91be118f
  412c21:	fild   QWORD PTR [eax-0x16e0c051]
  412c27:	xor    DWORD PTR [eax],esp
  412c29:	aaa    
  412c2a:	or     al,0x32
  412c2c:	inc    ebp
  412c2d:	dec    eax
  412c2e:	or     BYTE PTR [esi+esi*8+0x5c],cl
  412c32:	sbb    DWORD PTR [ebp-0x56],eax
  412c35:	dec    ecx
  412c36:	mov    bh,0xd5
  412c38:	(bad)  
  412c39:	mov    edi,0x37b0966a
  412c3e:	mov    ds:0xda26e80,al
  412c43:	iret   
  412c44:	mov    esp,0x5ce7100c
  412c49:	imul   BYTE PTR [edi+0x6b]
  412c4c:	scas   al,BYTE PTR es:[edi]
  412c4d:	xor    al,0xd1
  412c4f:	sbb    ebx,DWORD PTR [eax]
  412c51:	int    0x2a
  412c53:	mov    al,ds:0x1375f214
  412c58:	adc    eax,0xadc1ab78
  412c5d:	push   ss
  412c5e:	arpl   WORD PTR [edx],ax
  412c60:	es push esp
  412c62:	and    DWORD PTR [ebx+ebp*8-0x4c],esi
  412c66:	sub    bh,BYTE PTR [eax]
  412c68:	test   DWORD PTR [eax],ebp
  412c6a:	cvtps2pi mm5,xmm7
  412c6d:	call   0xe84dda29
  412c72:	test   eax,0x197cc482
  412c77:	push   cs
  412c78:	fstp   QWORD PTR [edi]
  412c7a:	push   edx
  412c7b:	sbb    DWORD PTR ds:0x50b7d98f,edi
  412c81:	popa   
  412c82:	add    al,0x5f
  412c84:	mov    dh,0xb5
  412c86:	imul   ebp,DWORD PTR [ebp+0x53],0x6e
  412c8a:	in     eax,dx
  412c8b:	icebp  
  412c8c:	mov    ebp,0xf8df0afe
  412c91:	jae    0x412cb0
  412c93:	push   esp
  412c94:	pop    es
  412c95:	mov    dh,0x3f
  412c97:	fbstp  TBYTE PTR [esi]
  412c99:	loopne 0x412c80
  412c9b:	or     dh,BYTE PTR [ecx+ebx*2-0x77]
  412c9f:	xor    al,0xae
  412ca1:	(bad)  
  412ca2:	sbb    eax,0x41c81473
  412ca7:	or     al,0xb3
  412ca9:	in     al,dx
  412caa:	mov    WORD PTR [esi+ecx*4-0x24],ds
  412cae:	cmp    eax,ebx
  412cb0:	pop    ebp
  412cb1:	sub    al,0x29
  412cb3:	repz in eax,0x27
  412cb6:	nop
  412cb7:	aam    0x61
  412cb9:	sbb    eax,0xad705884
  412cbe:	es (bad) 
  412cc0:	pop    edx
  412cc1:	xacquire xchg BYTE PTR [ebp-0x16f62e62],al
  412cc8:	aaa    
  412cc9:	jnp    0x412c60
  412ccb:	push   cs
  412ccc:	sbb    eax,DWORD PTR [eax]
  412cce:	pushf  
  412ccf:	mov    ds:0x359ce5d7,al
  412cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cd5:	fnsave [eax+ebx*2+0x2d8a7cff]
  412cdc:	jb     0x412cae
  412cde:	rol    ebp,cl
  412ce0:	mov    al,0x9a
  412ce2:	xchg   esi,eax
  412ce3:	mov    bh,cl
  412ce5:	pop    ecx
  412ce6:	mov    cs,esp
  412ce8:	adc    ch,BYTE PTR [ecx+0x3424c65f]
  412cee:	mov    edx,0x42d1cb7e
  412cf3:	xchg   BYTE PTR [edx+0x50],dh
  412cf6:	inc    esp
  412cf7:	push   ss
  412cf8:	xchg   esp,eax
  412cf9:	mov    ds:0xe1ae76a7,al
  412cfe:	cmc    
  412cff:	xchg   BYTE PTR [eax-0x6c],dh
  412d02:	pop    ds
  412d03:	in     eax,dx
  412d04:	jg     0x412d62
  412d06:	mov    BYTE PTR [edx],bl
  412d08:	jnp    0x412cae
  412d0a:	shl    DWORD PTR [edx+0x5d18fd5c],0xfb
  412d11:	enter  0xee15,0xde
  412d15:	jno    0x412cfb
  412d17:	mov    al,0xa2
  412d19:	jb     0x412cf6
  412d1b:	stos   DWORD PTR es:[edi],eax
  412d1c:	sar    edx,0x4b
  412d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d20:	iret   
  412d21:	and    al,0xa
  412d23:	pop    ds
  412d24:	dec    ecx
  412d25:	fstp   st(6)
  412d27:	add    eax,0x24c8f6e7
  412d2c:	imul   ebx,DWORD PTR [ecx-0x5c5a92bd],0xf6f982c5
  412d36:	aad    0x2e
  412d38:	xor    ch,bl
  412d3a:	pop    edx
  412d3b:	pause  
  412d3d:	mov    ah,0x78
  412d3f:	inc    ecx
  412d40:	sub    BYTE PTR [ebx*4+0x15fba7c7],bh
  412d47:	and    esp,0x2f
  412d4a:	mov    ch,dl
  412d4c:	sbb    al,BYTE PTR [ecx+ebx*4+0x6c]
  412d50:	repnz shr BYTE PTR [edi-0x31],cl
  412d54:	jecxz  0x412d3e
  412d56:	imul   esi,esp,0xffffffab
  412d59:	ins    BYTE PTR es:[edi],dx
  412d5a:	leave  
  412d5b:	dec    esi
  412d5c:	enter  0xe9a5,0x1e
  412d60:	mov    ds:0x267b4a7e,al
  412d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d66:	mov    ecx,0x6af11eac
  412d6b:	sub    DWORD PTR [eax+0x49f5e643],eax
  412d71:	fild   WORD PTR [ecx-0x22]
  412d74:	and    BYTE PTR [ecx+0x70],cl
  412d77:	popf   
  412d78:	ror    edx,1
  412d7a:	xchg   esi,eax
  412d7b:	daa    
  412d7c:	out    dx,al
  412d7d:	dec    ecx
  412d7e:	jecxz  0x412d11
  412d80:	or     ch,BYTE PTR [ecx]
  412d82:	in     al,0x1
  412d84:	cmc    
  412d85:	shl    WORD PTR [ebp-0x4e87de12],1
  412d8c:	enter  0xbd0a,0x6
  412d90:	pop    eax
  412d91:	js     0x412d73
  412d93:	pop    edi
  412d94:	push   0xffffffd0
  412d96:	sbb    al,0x22
  412d98:	jno    0x412e09
  412d9a:	ficom  DWORD PTR [esi-0x78]
  412d9d:	xor    eax,ebx
  412d9f:	xor    al,0xd
  412da1:	in     al,0x6a
  412da3:	out    dx,eax
  412da4:	sbb    al,cl
  412da6:	xchg   DWORD PTR [eax-0x5e],ecx
  412da9:	(bad)  
  412daa:	mov    ebx,es
  412dac:	stos   DWORD PTR es:[edi],eax
  412dad:	xor    DWORD PTR [edi-0x1f7bb6b9],ebx
  412db3:	mov    DWORD PTR [edi-0x64],ebx
  412db6:	sub    ah,BYTE PTR [ebp+0x2e]
  412db9:	loop   0x412e34
  412dbb:	loope  0x412da8
  412dbd:	arpl   WORD PTR ds:[bp-0x74],sp
  412dc2:	add    DWORD PTR [esi-0x20],esi
  412dc5:	or     eax,DWORD PTR [ebx]
  412dc7:	in     al,dx
  412dc8:	xchg   ebp,eax
  412dc9:	call   0x85638876
  412dce:	(bad)  
  412dd0:	sub    ebp,ebx
  412dd2:	loop   0x412d88
  412dd4:	ins    DWORD PTR es:[edi],dx
  412dd5:	jl     0x412d9e
  412dd7:	iret   
  412dd8:	or     ch,BYTE PTR [edx+0x121481d8]
  412dde:	dec    edx
  412ddf:	jbe    0x412d72
  412de1:	pop    edi
  412de2:	out    dx,al
  412de3:	imul   ebp,DWORD PTR [ebx-0x3dd8efac],0xffffffcb
  412dea:	ss clc 
  412dec:	int    0x94
  412dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412def:	add    eax,0x4bd123eb
  412df4:	push   edi
  412df5:	adc    al,0x27
  412df7:	push   DWORD PTR [edi+0x7ba38046]
  412dfd:	ficomp DWORD PTR [ebx+0x7a52d163]
  412e03:	lods   eax,DWORD PTR ds:[esi]
  412e04:	dec    ebx
  412e05:	mov    eax,0x2f2bf951
  412e0a:	sub    ch,BYTE PTR [eax]
  412e0c:	aad    0x6a
  412e0e:	push   esi
  412e0f:	mov    ah,BYTE PTR [ebp+0x45c1e1b6]
  412e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e16:	and    eax,0x291cef5a
  412e1b:	inc    esp
  412e1c:	xor    ebx,edx
  412e1e:	add    BYTE PTR [ebx-0x80],bh
  412e21:	and    al,BYTE PTR [ebx-0x244abf83]
  412e27:	xchg   ecx,eax
  412e28:	mov    dh,0x33
  412e2a:	push   ebx
  412e2b:	mov    eax,0x45e268fd
  412e30:	jns    0x412e43
  412e32:	icebp  
  412e33:	loopne 0x412e3e
  412e35:	jl     0x412de4
  412e37:	add    BYTE PTR [ebp+eax*2-0x6],dh
  412e3b:	and    al,0xf6
  412e3d:	ins    BYTE PTR es:[edi],dx
  412e3e:	das    
  412e3f:	cli    
  412e40:	jae    0x412e45
  412e42:	pop    es
  412e43:	jp     0x412ebf
  412e45:	mov    cl,0x34
  412e47:	mov    ds:0x30905bc,eax
  412e4c:	add    DWORD PTR [edx],0x1b
  412e4f:	add    ch,ah
  412e51:	retf   
  412e52:	sub    eax,0x126f3c48
  412e57:	cmp    eax,0x4b38c1d5
  412e5c:	inc    esp
  412e5d:	das    
  412e5e:	ds jno 0x412e30
  412e61:	sbb    al,0x18
  412e63:	sbb    ch,BYTE PTR [eax+0x52ef6eac]
  412e69:	int3   
  412e6a:	outs   dx,BYTE PTR ds:[esi]
  412e6b:	mov    BYTE PTR [esi-0x1e420e49],cl
  412e71:	mov    BYTE PTR [edi+0x16],bl
  412e74:	push   0xffffffa2
  412e76:	out    dx,al
  412e77:	cld    
  412e78:	(bad)  
  412e79:	pop    ds
  412e7a:	lahf   
  412e7b:	inc    esp
  412e7c:	jg     0x412e15
  412e7e:	or     ecx,0x3dbddb71
  412e84:	push   esi
  412e85:	push   ds
  412e86:	fld    QWORD PTR [ebp+0x25efce0d]
  412e8c:	aad    0xeb
  412e8e:	mov    ebp,0x4a0680fd
  412e93:	test   eax,0x6fdf8db0
  412e98:	sahf   
  412e99:	out    dx,al
  412e9a:	sbb    edx,DWORD PTR [edi+eax*8]
  412e9d:	pop    esi
  412e9e:	mov    esi,0xbf806599
  412ea3:	mov    dh,0xe9
  412ea5:	mov    cl,0x3b
  412ea7:	xor    esi,DWORD PTR [esi+0x7150322e]
  412ead:	xchg   ebx,eax
  412eae:	es jp  0xcd2b5fba
  412eb5:	add    DWORD PTR [ecx],0xa3a5ab63
  412ebb:	loop   0x412e9f
  412ebd:	out    0xde,al
  412ebf:	lea    eax,[edi]
  412ec1:	add    eax,0xf3268a8
  412ec6:	not    DWORD PTR [edi-0x1c0e627e]
  412ecc:	lods   eax,DWORD PTR ds:[esi]
  412ecd:	sbb    ecx,DWORD PTR [ecx-0x27]
  412ed0:	mov    esp,0xb5dd5d0c
  412ed5:	ins    DWORD PTR es:[edi],dx
  412ed6:	clc    
  412ed7:	outs   dx,BYTE PTR ds:[esi]
  412ed8:	push   edx
  412ed9:	fnsave [ebp-0x6568f8e4]
  412edf:	gs cld 
  412ee1:	jecxz  0x412eea
  412ee3:	mov    edx,ebp
  412ee5:	imul   DWORD PTR [esi]
  412ee7:	int3   
  412ee8:	jo     0x412f0e
  412eea:	cs push esp
  412eec:	jmp    0x3e7:0xd59a5204
  412ef3:	mov    WORD PTR ds:0xf2d9,gs
  412ef8:	jno    0x412f60
  412efa:	test   BYTE PTR [ecx],0xc3
  412efd:	xchg   DWORD PTR [ebx-0x3e9664d3],edx
  412f03:	daa    
  412f04:	mov    edi,0xafe40268
  412f09:	xor    edi,DWORD PTR [ebp+0x26e4c481]
  412f0f:	lods   eax,DWORD PTR ds:[esi]
  412f10:	in     eax,0x45
  412f12:	mov    al,ds:0xf8559a8b
  412f17:	push   ecx
  412f18:	sar    DWORD PTR [ebp+edi*2-0x77e7b4a],cl
  412f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f20:	pop    ecx
  412f21:	pushf  
  412f22:	clc    
  412f23:	sbb    BYTE PTR [edx],al
  412f25:	mov    bl,0x19
  412f27:	add    BYTE PTR [ebp-0x1d],cl
  412f2a:	jns    0x412f68
  412f2c:	into   
  412f2d:	xor    BYTE PTR [ecx-0x67],cl
  412f30:	or     al,0x2f
  412f32:	xchg   esp,eax
  412f33:	cmp    al,0x28
  412f35:	pusha  
  412f36:	xchg   ebx,eax
  412f37:	popa   
  412f38:	loope  0x412f14
  412f3a:	add    al,0x2f
  412f3c:	push   edi
  412f3d:	sub    ch,BYTE PTR [ecx-0x6c3e3805]
  412f43:	stc    
  412f44:	adc    eax,DWORD PTR [esi]
  412f46:	add    BYTE PTR [ecx+0x6f],dh
  412f49:	mov    eax,0x62214b64
  412f4e:	test   bh,dl
  412f50:	push   es
  412f51:	fst    QWORD PTR ds:[eax+0xe]
  412f55:	add    BYTE PTR [ebx+0x7],ah
  412f58:	xor    eax,0xf04ba313
  412f5d:	lahf   
  412f5e:	xchg   ebx,eax
  412f5f:	cmp    eax,0xab46cbbb
  412f64:	pop    es
  412f65:	aaa    
  412f66:	in     al,dx
  412f67:	pop    ebx
  412f68:	push   ebx
  412f69:	jmp    0x160:0x2bd04949
  412f70:	mov    esi,0x91e58c88
  412f75:	imul   ebp,DWORD PTR ss:[eax*2-0x2023f2ad],0x4c3751fd
  412f81:	mov    ebp,0x1c6d53e1
  412f86:	les    ecx,FWORD PTR [eax+ecx*8-0x1e87135d]
  412f8d:	out    dx,al
  412f8e:	fs pop ebx
  412f90:	or     eax,0x642b8dfe
  412f95:	in     al,0xd3
  412f97:	iret   
  412f98:	push   0x1e
  412f9a:	sub    ebx,DWORD PTR [ecx]
  412f9c:	jg     0x412f7b
  412f9e:	xchg   edi,eax
  412f9f:	mov    ecx,edi
  412fa1:	sub    DWORD PTR [ecx-0x45],esp
  412fa4:	stos   DWORD PTR es:[edi],eax
  412fa5:	mov    bl,0x66
  412fa7:	push   cs
  412fa8:	jge    0x412fe3
  412faa:	aaa    
  412fab:	push   edi
  412fac:	not    cl
  412fae:	mov    bl,0xf5
  412fb0:	pop    ss
  412fb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fb2:	and    ch,BYTE PTR [edi-0x4d71a940]
  412fb8:	imul   esi,DWORD PTR [ebp+0x605f76e],0xa
  412fbf:	loope  0x412f6b
  412fc1:	dec    edx
  412fc2:	in     eax,dx
  412fc3:	es out dx,eax
  412fc5:	(bad)  
  412fc7:	xor    DWORD PTR [eax-0x25],esp
  412fca:	in     eax,0x9b
  412fcc:	jecxz  0x412f63
  412fce:	in     eax,dx
  412fcf:	inc    edx
  412fd0:	jg     0x412ffa
  412fd2:	shl    DWORD PTR [ebp-0x1e],cl
  412fd5:	xchg   BYTE PTR [edi+0x1bd05ff2],dh
  412fdb:	mov    cl,0x56
  412fdd:	(bad)  
  412fde:	in     eax,dx
  412fdf:	(bad)  
  412fe0:	inc    ebx
  412fe1:	inc    ebp
  412fe2:	inc    edi
  412fe3:	repnz pop eax
  412fe5:	cld    
  412fe6:	aam    0xe1
  412fe8:	push   edi
  412fe9:	in     al,0xa1
  412feb:	or     BYTE PTR [ebx+0x54ef552b],dh
  412ff1:	jl     0x412fa4
  412ff3:	pop    esp
  412ff4:	xor    ch,BYTE PTR [edx+edx*2-0x27351155]
  412ffb:	int3   
  412ffc:	xchg   edi,eax
  412ffd:	mov    ah,0x9
  412fff:	jns    0x413004
  413001:	pop    ss
  413002:	les    ebx,FWORD PTR [eax+ebx*1-0x6f]
  413006:	rcl    BYTE PTR [edi],1
  413008:	retf   
  413009:	and    eax,0x6a5f6b66
  41300e:	aam    0x65
  413010:	mov    ecx,0x154d4d25
  413015:	pop    esi
  413016:	stc    
  413017:	fld    DWORD PTR [ebx-0x60]
  41301a:	push   0x77dfb978
  41301f:	push   eax
  413020:	mov    bh,0x28
  413022:	sub    bh,BYTE PTR [ebp+eiz*8+0x9]
  413026:	adc    DWORD PTR [edx-0x6a],0xada60aaa
  41302d:	xor    DWORD PTR [edx+0x3a],esp
  413030:	out    dx,eax
  413031:	(bad)  
  413032:	sbb    al,0x49
  413034:	in     eax,dx
  413035:	ret    0xd4ca
  413038:	inc    ebx
  413039:	out    dx,al
  41303a:	cmp    BYTE PTR [edi+0x40],dh
  41303d:	ins    BYTE PTR es:[edi],dx
  41303e:	sub    ah,BYTE PTR [ebx]
  413040:	add    BYTE PTR [edi+0x3b398f03],bl
  413046:	adc    al,dh
  413048:	and    DWORD PTR [edx],edi
  41304a:	pop    ebx
  41304b:	cmc    
  41304c:	shl    BYTE PTR [edi-0x7ed38e39],cl
  413052:	cmp    eax,0x888a5cb4
  413057:	add    al,bh
  413059:	out    dx,al
  41305a:	push   0xffffffdc
  41305c:	add    al,BYTE PTR [edi+0x40]
  41305f:	mov    ds:0x8657fa98,eax
  413064:	les    esi,FWORD PTR [ebx-0x633cf7c4]
  41306a:	mov    ecx,DWORD PTR [eax+0xe77a0f2]
  413070:	sbb    di,cx
  413073:	stos   DWORD PTR es:[edi],eax
  413074:	xor    al,0x91
  413076:	(bad)  
  413077:	and    ah,BYTE PTR [edi]
  413079:	pop    ds
  41307a:	pushf  
  41307b:	ss mul DWORD PTR ds:[ebx-0x71f24088]
  413083:	(bad)  
  413085:	cmp    DWORD PTR [edx-0x22e82913],esi
  41308b:	test   eax,0x7d5081ea
  413090:	into   
  413091:	aam    0x35
  413093:	pop    es
  413094:	adc    DWORD PTR [ebp+0x38401d7a],esp
  41309a:	aam    0x8a
  41309c:	cld    
  41309d:	arpl   WORD PTR [ecx+0x6ceb2ca3],bp
  4130a3:	ret    
  4130a4:	mov    al,ds:0xa4d0828d
  4130a9:	xor    bl,ah
  4130ab:	jb     0x413099
  4130ad:	xchg   edi,eax
  4130ae:	cwde   
  4130af:	sbb    al,0xb5
  4130b1:	rol    DWORD PTR [ebp+0xd],0xd6
  4130b5:	pop    ebx
  4130b6:	es pop ebp
  4130b8:	out    dx,eax
  4130b9:	xchg   BYTE PTR [esi],dh
  4130bb:	outs   dx,DWORD PTR ds:[esi]
  4130bc:	mov    DWORD PTR [esi-0x27],edi
  4130bf:	and    dh,cl
  4130c1:	(bad)  
  4130c2:	mov    al,0xa1
  4130c4:	or     al,0xc2
  4130c6:	add    al,0x84
  4130c8:	jo     0x413141
  4130ca:	scas   al,BYTE PTR es:[edi]
  4130cb:	aad    0xf9
  4130cd:	scas   al,BYTE PTR es:[edi]
  4130ce:	inc    edx
  4130cf:	ins    BYTE PTR es:[edi],dx
  4130d0:	loopne 0x4130ee
  4130d2:	or     al,0xdf
  4130d4:	mov    dl,0x2e
  4130d6:	inc    edx
  4130d7:	inc    esi
  4130d8:	mov    bh,0x58
  4130da:	inc    ecx
  4130db:	aaa    
  4130dc:	lock (bad) [ebx]
  4130df:	mov    BYTE PTR [esi+0x5334bb56],dl
  4130e5:	sbb    esp,edi
  4130e7:	adc    eax,0x16812e18
  4130ec:	adc    DWORD PTR [esi+0x51],eax
  4130ef:	mov    ch,0x9
  4130f1:	adc    ecx,esp
  4130f3:	push   0x7d358aa0
  4130f8:	mov    bl,0xe1
  4130fa:	inc    ebx
  4130fb:	int3   
  4130fc:	outs   dx,DWORD PTR ds:[esi]
  4130fd:	enter  0x7384,0x24
  413101:	or     esp,ebp
  413103:	and    al,0x19
  413105:	cmp    esi,DWORD PTR [esi-0x4d]
  413108:	or     BYTE PTR [edi+0x28],bl
  41310b:	inc    cx
  41310d:	out    0x16,eax
  41310f:	iret   
  413110:	das    
  413111:	xor    eax,0xfaa1a11f
  413116:	push   esp
  413117:	cwde   
  413118:	xchg   BYTE PTR [esi-0x56],al
  41311b:	js     0x41314b
  41311d:	mov    esp,0xc372c1aa
  413122:	mov    ds:0x4491d95d,eax
  413127:	pop    esp
  413128:	sbb    bl,BYTE PTR [eax-0xf]
  41312b:	jmp    FWORD PTR [esi+0x7c]
  41312e:	js     0x41310a
  413130:	mov    ch,0x39
  413132:	jecxz  0x41312b
  413134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413135:	sub    BYTE PTR [esi],bl
  413137:	mov    cl,0x7f
  413139:	sub    DWORD PTR [edx],edx
  41313b:	retf   
  41313c:	call   0xbf98:0x88b19949
  413143:	fidiv  WORD PTR [esi+edi*2+0x6d]
  413147:	adc    cl,BYTE PTR [ecx-0x1a]
  41314a:	mov    al,ds:0xb1b26fe6
  41314f:	add    eax,0xfb130924
  413154:	in     al,dx
  413155:	lods   eax,DWORD PTR ds:[esi]
  413156:	pop    ecx
  413157:	or     DWORD PTR [ecx-0x28],ebx
  41315a:	xor    al,0x7
  41315c:	inc    edx
  41315d:	mov    DWORD PTR [edx-0x10991f60],ecx
  413163:	(bad)  
  413164:	push   ss
  413165:	push   cs
  413166:	inc    edi
  413167:	daa    
  413168:	outs   dx,BYTE PTR ds:[esi]
  413169:	push   ebp
  41316a:	jge    0x4131b1
  41316c:	push   ds
  41316d:	pop    ebx
  41316e:	(bad)  
  41316f:	sbb    al,0xe9
  413171:	inc    esp
  413172:	lds    ecx,FWORD PTR [eax-0x5e9fd28c]
  413178:	jb     0x413125
  41317a:	fild   WORD PTR [ebx+0x7fcf9463]
  413180:	jno    0x413166
  413182:	ror    esi,cl
  413184:	xor    eax,0x91e10b8f
  413189:	jmp    0x81990a9f
  41318e:	pop    ecx
  41318f:	fldcw  WORD PTR ds:[ebx]
  413192:	mov    DWORD PTR [esi],edx
  413194:	fld    TBYTE PTR [edx-0x22d4836a]
  41319a:	(bad)  
  41319b:	cs int3 
  41319d:	push   ss
  41319e:	fdiv   QWORD PTR ds:0xd61ba81c
  4131a4:	scas   al,BYTE PTR es:[edi]
  4131a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131a6:	or     eax,0xd1860840
  4131ab:	out    0x4d,eax
  4131ad:	pop    esi
  4131ae:	fistp  QWORD PTR [edx]
  4131b0:	cdq    
  4131b1:	lea    esi,[ecx-0x10e47633]
  4131b7:	daa    
  4131b8:	sub    edi,DWORD PTR [eax-0x1a826e1f]
  4131be:	jb     0x4131c6
  4131c0:	inc    esi
  4131c1:	jl     0x413188
  4131c3:	aas    
  4131c4:	les    ecx,FWORD PTR [ebx]
  4131c6:	sbb    eax,0x53d8a4a0
  4131cb:	ror    BYTE PTR [eax+0x100366b1],1
  4131d1:	xchg   BYTE PTR [ebx-0x3b],ah
  4131d4:	cmp    al,0x16
  4131d6:	test   al,0xc6
  4131d8:	jb     0x41320b
  4131da:	adc    dh,BYTE PTR [esp+ebx*4-0xcfc2561]
  4131e1:	sub    esp,edx
  4131e3:	(bad)
  4131e8:	scas   eax,DWORD PTR es:[edi]
  4131e9:	arpl   WORD PTR [esp+ebx*8+0x51],bx
  4131ed:	adc    BYTE PTR [ebx+edi*2],cl
  4131f0:	pusha  
  4131f1:	and    ebp,DWORD PTR [ecx]
  4131f3:	and    BYTE PTR [esp+esi*1+0x575f2a00],ah
  4131fa:	pop    ds
  4131fb:	and    eax,0x36f4c1af
  413200:	add    BYTE PTR [eax+esi*2+0x3b],dh
  413204:	jmp    0x7c17:0xda9c2053
  41320b:	mov    bh,0xa6
  41320d:	push   ecx
  41320e:	mov    cl,0x7e
  413210:	pop    ebp
  413211:	test   al,0xf1
  413213:	icebp  
  413214:	lods   eax,DWORD PTR ds:[esi]
  413215:	add    BYTE PTR [ecx],ch
  413217:	and    ah,dh
  413219:	mov    eax,0x508e67ba
  41321e:	jle    0x413264
  413220:	imul   edx,DWORD PTR [ebx-0x23],0x1e1cf2b
  413227:	dec    ebx
  413228:	icebp  
  413229:	ret    
  41322a:	push   ebp
  41322b:	mov    ds:0x8350585a,eax
  413230:	(bad)  
  413231:	sti    
  413232:	pop    eax
  413233:	pop    esp
  413234:	fnstenv [esi-0x3b]
  413237:	out    0xa7,eax
  413239:	inc    ecx
  41323a:	adc    eax,0xe4a5a334
  41323f:	xor    DWORD PTR [eax+edi*2],eax
  413242:	push   esp
  413243:	xlat   BYTE PTR ds:[ebx]
  413244:	in     eax,0xb0
  413246:	sub    esp,DWORD PTR [ebx+edi*4+0x33]
  41324a:	aam    0x39
  41324c:	rcl    DWORD PTR [ebp+0x7b97579f],0xcf
  413253:	dec    edx
  413254:	adc    ch,cl
  413256:	(bad)  
  413258:	jmp    0x413269
  41325a:	push   esp
  41325b:	fisubr DWORD PTR [eax+0x14]
  41325e:	cmp    BYTE PTR [esi],dl
  413260:	add    BYTE PTR [edx+0x61758847],ah
  413266:	scas   eax,DWORD PTR es:[edi]
  413267:	cmp    bl,BYTE PTR [edx+0x242e3994]
  41326d:	cmp    di,WORD PTR [ecx-0xd]
  413271:	not    bl
  413273:	retf   0xe2d3
  413276:	ror    BYTE PTR [ebx+0x44832cb4],0x9e
  41327d:	aad    0xb7
  41327f:	ins    DWORD PTR es:[edi],dx
  413280:	jmp    0x413214
  413282:	xor    bl,BYTE PTR [ebx-0x2c]
  413285:	jns    0x4132f8
  413287:	dec    ebx
  413288:	iret   
  413289:	mov    edi,0x83098d16
  41328e:	js     0x413250
  413290:	xor    al,0xff
  413292:	adc    al,0x25
  413294:	mov    esi,0x26f69165
  413299:	in     eax,dx
  41329a:	shr    edx,1
  41329c:	pop    esi
  41329d:	test   DWORD PTR [ebp-0x6328bddf],esi
  4132a3:	jp     0x4132e9
  4132a5:	add    DWORD PTR [esi],0xffffffcf
  4132a8:	and    bl,bl
  4132aa:	mov    dl,0x70
  4132ac:	push   cs
  4132ad:	xor    eax,0x310fbdde
  4132b2:	add    DWORD PTR [ecx],ebp
  4132b4:	pcmpgtw mm0,QWORD PTR fs:[ebx+0x7b3372b0]
  4132bc:	fisttp WORD PTR [eax+ecx*8]
  4132bf:	in     al,0x6c
  4132c1:	fidiv  WORD PTR [ecx]
  4132c3:	xchg   BYTE PTR [edx+0x774b7390],ah
  4132c9:	loope  0x4132e1
  4132cb:	mov    eax,ds:0xd35f4e54
  4132d0:	cli    
  4132d1:	arpl   cx,bp
  4132d3:	pop    es
  4132d4:	aaa    
  4132d5:	mov    ecx,0x65aac55e
  4132da:	icebp  
  4132db:	mov    al,ds:0x748f063a
  4132e0:	push   es
  4132e1:	push   edx
  4132e2:	cmp    bh,BYTE PTR [ebx+0x21]
  4132e5:	fisubr DWORD PTR [edi-0x15]
  4132e8:	sub    al,0x70
  4132ea:	cmp    al,0x3d
  4132ec:	(bad)  
  4132ed:	fwait
  4132ee:	jmp    0x61792b60
  4132f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132f4:	mov    edx,0x44489ba2
  4132f9:	fdivr  QWORD PTR [edx+0x2a]
  4132fc:	in     eax,0xdc
  4132fe:	jmp    0xf7e3d7b9
  413303:	out    dx,eax
  413304:	xor    esp,edx
  413306:	rcl    DWORD PTR [edx-0x5cb3aa0d],cl
  41330c:	data16 aad 0x9
  41330f:	inc    eax
  413310:	push   0xe1adaf46
  413315:	pop    es
  413316:	jbe    0x4132cc
  413318:	and    BYTE PTR [ebx],ah
  41331a:	mov    DWORD PTR [eax],ebp
  41331c:	xlat   BYTE PTR ds:[ebx]
  41331d:	daa    
  41331e:	lods   eax,DWORD PTR ds:[esi]
  41331f:	cmp    al,0x2
  413321:	(bad)  
  413322:	jmp    0xd859:0xae866076
  413329:	cmc    
  41332a:	adc    ecx,DWORD PTR [eax-0x7e61dd12]
  413330:	es cdq 
  413332:	mov    ah,0x92
  413334:	je     0x41332d
  413336:	mov    ah,0xa
  413338:	xor    DWORD PTR [eax-0x554635a5],ebx
  41333e:	sbb    BYTE PTR [esi+0xe85de75],ch
  413344:	jmp    0x3e18:0x4b449861
  41334b:	stos   DWORD PTR es:[edi],eax
  41334c:	xor    ebx,DWORD PTR [ecx+0x795f7c9a]
  413352:	lock and eax,0x974372b3
  413358:	push   ss
  413359:	pop    ecx
  41335a:	shl    BYTE PTR [ecx],0x48
  41335d:	inc    ebp
  41335e:	adc    eax,0x6916e0ff
  413363:	call   DWORD PTR [ebx+ecx*4-0x6d]
  413367:	mov    ds:0xd6f98b9b,eax
  41336c:	sub    DWORD PTR [edi-0x10],eax
  41336f:	retf   0x879
  413372:	xlat   BYTE PTR ds:[ebx]
  413373:	fcomp  QWORD PTR [ebx]
  413375:	retf   0x66a0
  413378:	loopne 0x4133b2
  41337a:	push   ecx
  41337b:	dec    ebx
  41337c:	outs   dx,DWORD PTR ds:[esi]
  41337d:	inc    esp
  41337e:	xchg   edx,eax
  41337f:	(bad)  
  413380:	mov    ebp,0x47c12628
  413385:	add    BYTE PTR [esi-0x6e0a6635],ch
  41338b:	xchg   DWORD PTR [ecx-0x50f192ef],ebp
  413391:	pop    esp
  413392:	call   0x806ccbe9
  413397:	mov    ah,0x17
  413399:	mov    esp,DWORD PTR [edx-0x60]
  41339c:	scas   al,BYTE PTR es:[edi]
  41339d:	fsub   DWORD PTR [ebp+0x5ef2eda9]
  4133a3:	jmp    0x41335e
  4133a5:	pop    ds
  4133a6:	or     ebx,ebp
  4133a8:	js     0x4133f6
  4133aa:	lahf   
  4133ab:	(bad)  
  4133ac:	repz inc edx
  4133ae:	mov    esi,DWORD PTR [ebx-0x7e02bc40]
  4133b4:	pop    edx
  4133b5:	pop    eax
  4133b6:	cli    
  4133b7:	xchg   ecx,eax
  4133b8:	mov    bh,0x62
  4133ba:	in     eax,dx
  4133bb:	inc    edi
  4133bc:	cmp    DWORD PTR [esi-0x5662ad3a],0xf
  4133c3:	or     DWORD PTR [edi+0x700c21dd],0xffffffa0
  4133ca:	push   edi
  4133cb:	(bad)  
  4133cc:	cmp    ebx,DWORD PTR [edx]
  4133ce:	stc    
  4133cf:	shl    ecx,cl
  4133d1:	mov    ah,0x55
  4133d3:	pop    ss
  4133d4:	dec    ebp
  4133d5:	jle    0x413382
  4133d7:	into   
  4133d8:	mov    edi,DWORD PTR [ecx+0x79]
  4133db:	or     al,0xcc
  4133dd:	push   ss
  4133de:	xchg   ecx,eax
  4133df:	mov    esi,0xe25f6cb0
  4133e4:	inc    eax
  4133e5:	sbb    al,BYTE PTR [edi]
  4133e7:	pop    ds
  4133e8:	fs jmp 0xd189:0x53498f98
  4133f0:	out    0xe5,eax
  4133f2:	dec    ebx
  4133f3:	pop    eax
  4133f4:	ds lahf 
  4133f6:	gs pop eax
  4133f8:	stos   BYTE PTR es:[edi],al
  4133f9:	add    esp,DWORD PTR [edi+0x18]
  4133fc:	pop    edi
  4133fd:	pop    ecx
  4133fe:	adc    eax,0x8777812
  413403:	sahf   
  413404:	(bad)  
  413405:	imul   edx,DWORD PTR [esi+0x72c37c56],0xffffffe0
  41340c:	aad    0xb2
  41340e:	popf   
  41340f:	add    eax,0x486edd51
  413414:	jg     0x413495
  413416:	mov    dh,0xa9
  413418:	jb     0x4133bb
  41341a:	fsubrp st(4),st
  41341c:	pusha  
  41341d:	pushf  
  41341e:	or     BYTE PTR [ebp+0x7c],dl
  413421:	(bad)  
  413423:	hlt    
  413424:	push   ebx
  413425:	xchg   ebp,eax
  413426:	out    0xb4,eax
  413428:	in     al,dx
  413429:	sbb    cl,BYTE PTR [eax-0x55037035]
  41342f:	jbe    0x413403
  413431:	jg     0x4134a0
  413433:	leave  
  413434:	loopne 0x413438
  413436:	cmp    BYTE PTR [esi+ebx*4+0x50],0x6c
  41343b:	test   ecx,edx
  41343d:	nop
  41343e:	adc    eax,0x5ff4d272
  413443:	retf   0x208e
  413446:	and    BYTE PTR [ecx+0x2976c22b],al
  41344c:	push   cs
  41344d:	outs   dx,DWORD PTR ds:[esi]
  41344e:	mov    ebp,DWORD PTR [edx+0x10252a0c]
  413454:	sub    bl,bh
  413456:	pop    ss
  413457:	jg     0x413426
  413459:	adc    al,ch
  41345b:	inc    ebx
  41345c:	pop    esi
  41345d:	push   cs
  41345e:	cmp    DWORD PTR [ebp+0x4042c0b8],0x13
  413465:	mov    edx,0x1daf995e
  41346a:	xor    DWORD PTR [ecx],esp
  41346c:	xchg   ebx,eax
  41346d:	jo     0x41346a
  41346f:	xchg   edx,eax
  413470:	jecxz  0x4134ec
  413472:	jne    0x41348f
  413474:	daa    
  413475:	test   DWORD PTR [eax+edi*2+0x194fcfec],0x76603467
  413480:	cmp    DWORD PTR [ecx-0x259db775],0x3f
  413487:	xor    bh,BYTE PTR [edx+0x7deaaa24]
  41348d:	gs pop edx
  41348f:	mov    WORD PTR [edi+0x7b],cs
  413492:	inc    edi
  413493:	clc    
  413494:	repnz mov ecx,0x6781020d
  41349a:	mov    eax,ds:0x9f8a4c73
  41349f:	std    
  4134a0:	in     eax,0x5f
  4134a2:	xor    al,0x60
  4134a4:	mov    ds:0xeadba1e0,eax
  4134a9:	pushf  
  4134aa:	pop    ds
  4134ab:	adc    DWORD PTR ds:0x88cd2607,edi
  4134b1:	adc    dh,al
  4134b3:	push   edx
  4134b4:	rcr    DWORD PTR [ebx+0x50],0x6c
  4134b8:	add    al,0x15
  4134ba:	sub    bh,BYTE PTR [ebx+0x78]
  4134bd:	retf   
  4134be:	pop    eax
  4134bf:	ss mov bl,0x87
  4134c2:	or     eax,0x39fcf7a6
  4134c7:	pop    ds
  4134c8:	cmp    ebx,ecx
  4134ca:	ins    BYTE PTR es:[edi],dx
  4134cb:	(bad)  
  4134cc:	std    
  4134cd:	pop    edx
  4134ce:	imul   edx,DWORD PTR [edi+edx*1+0x296526eb],0x4f
  4134d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134d7:	jmp    0xf7e9:0xffa0a117
  4134de:	in     al,0xb4
  4134e0:	sbb    cl,BYTE PTR [ebp-0x4e26ea75]
  4134e6:	dec    edi
  4134e7:	dec    ebx
  4134e8:	xchg   ebx,eax
  4134e9:	inc    esp
  4134ea:	or     DWORD PTR [esi+0x5fe95771],0x56
  4134f1:	dec    ecx
  4134f2:	add    esp,DWORD PTR [ebx+eiz*4]
  4134f5:	add    bh,dh
  4134f7:	pop    ebx
  4134f8:	adc    esi,DWORD PTR [ebp-0x33]
  4134fb:	fdivr  QWORD PTR [ecx+0x35]
  4134fe:	sbb    al,0xb5
  413500:	dec    ebx
  413501:	lock outs dx,DWORD PTR ds:[esi]
  413503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413504:	or     eax,0xbd36e752
  413509:	xchg   BYTE PTR [esi+eiz*8+0x45],al
  41350d:	or     al,0x36
  41350f:	xchg   ecx,eax
  413510:	push   ebp
  413511:	fbstp  TBYTE PTR [eax-0x573c6e62]
  413517:	mov    ss,edx
  413519:	sbb    esi,0x5ad2b56f
  41351f:	inc    edx
  413520:	inc    edi
  413521:	sub    ebx,DWORD PTR [ebx-0x1e]
  413524:	lods   eax,DWORD PTR ds:[esi]
  413526:	in     al,dx
  413527:	push   ss
  413528:	inc    eax
  413529:	test   DWORD PTR [edx],ecx
  41352b:	sbb    ah,BYTE PTR [ebp+0xc878544]
  413531:	cmp    bl,BYTE PTR [ebp+0x7ac6d939]
  413537:	std    
  413538:	mov    ebp,0xdf851143
  41353d:	(bad)  
  41353e:	out    0x39,al
  413540:	rcl    DWORD PTR [eax+0x1ee6c2c6],0x69
  413547:	mov    ecx,0xfeba01e6
  41354c:	jno    0x413562
  41354e:	sbb    eax,0xc9516da1
  413553:	jp     0x413579
  413555:	push   edx
  413556:	into   
  413557:	arpl   WORD PTR [ebx+0x67a8ca02],sp
  41355d:	ins    DWORD PTR es:[edi],dx
  41355e:	mov    edi,0x855367a5
  413563:	(bad)  
  413564:	pop    ecx
  413565:	jnp    0x413535
  413567:	fdivrp st(3),st
  413569:	in     al,0x13
  41356b:	aam    0x62
  41356d:	adc    eax,0x44d2cb1e
  413572:	jns    0x41358a
  413574:	xor    ebx,DWORD PTR [edi]
  413576:	sub    eax,0xc772a3c
  41357b:	push   ebx
  41357c:	push   ebx
  41357d:	xor    ah,BYTE PTR [eax-0x3]
  413580:	xchg   DWORD PTR [ebx+0x4d],ebx
  413583:	mov    dh,0x39
  413585:	std    
  413586:	lea    edi,[edx-0x55]
  413589:	mov    bh,0x2c
  41358b:	and    esp,DWORD PTR [edx-0x2f]
  41358e:	retf   
  41358f:	shl    DWORD PTR [ebx-0x5296226d],0x93
  413596:	cdq    
  413597:	push   ds
  413598:	mov    ebx,ss
  41359a:	mov    esp,gs
  41359c:	cmp    DWORD PTR [edx+0x43613536],0x87640f09
  4135a6:	mov    ebp,0x383c3c4c
  4135ab:	enter  0x4660,0x33
  4135af:	js     0x4135a4
  4135b1:	scas   al,BYTE PTR es:[edi]
  4135b2:	push   0xffffffbd
  4135b4:	out    0xb3,eax
  4135b6:	sub    eax,0x6a2d8eec
  4135bb:	stos   BYTE PTR es:[edi],al
  4135bc:	sbb    dh,dl
  4135be:	repnz push edi
  4135c0:	add    edi,DWORD PTR [edi+edx*4+0x26]
  4135c4:	pop    esp
  4135c6:	out    0x12,al
  4135c8:	bound  ebx,QWORD PTR [bx+si-0x1855]
  4135cd:	jp     0x41363c
  4135cf:	pushf  
  4135d0:	fsubr  DWORD PTR [eax+0x2e]
  4135d3:	out    0xdb,eax
  4135d5:	and    eax,0xf1d3c7a6
  4135da:	mov    dh,0xaa
  4135dc:	out    0x1f,al
  4135de:	xor    bh,BYTE PTR [edx-0x6b86de78]
  4135e4:	ret    
  4135e5:	xor    cl,BYTE PTR [ebp-0x50]
  4135e8:	and    DWORD PTR [ebp-0x34],esi
  4135eb:	retf   0x347a
  4135ee:	inc    edx
  4135ef:	mov    al,ds:0xadb30fbf
  4135f4:	sub    ecx,DWORD PTR [eax+0x4]
  4135f7:	clc    
  4135f8:	and    eax,DWORD PTR ds:0x40bafa45
  4135fe:	loope  0x4135c6
  413600:	or     dl,BYTE PTR [edi-0x51]
  413603:	test   DWORD PTR [edx],ebp
  413605:	push   edx
  413606:	stos   DWORD PTR es:[edi],eax
  413607:	sbb    BYTE PTR ds:0x5671821b,cl
  41360d:	mov    ch,0x89
  41360f:	pusha  
  413610:	add    eax,0xa7a239c7
  413615:	adc    eax,0x43407920
  41361a:	(bad)  
  41361b:	sti    
  41361c:	jg     0x41364a
  41361e:	test   BYTE PTR [eax+0x5238bcb9],al
  413624:	mov    edx,0xe8491e8f
  413629:	adc    eax,DWORD PTR [ebp+0x24]
  41362c:	nop
  41362d:	aaa    
  41362e:	pop    ds
  41362f:	adc    al,0x46
  413631:	pop    es
  413632:	jae    0x4135fc
  413634:	stos   BYTE PTR es:[edi],al
  413635:	ins    BYTE PTR es:[edi],dx
  413636:	pop    esi
  413637:	mov    ch,BYTE PTR [ebx+0x6b]
  41363a:	test   eax,0xfdcfaf9
  41363f:	sar    DWORD PTR [ebp-0x73c0aeab],1
  413645:	(bad)  
  413646:	xchg   esp,eax
  413647:	retf   
  413648:	test   al,0x8f
  41364a:	xchg   edi,ecx
  41364c:	pushw  es
  41364e:	ds loope 0x413652
  413651:	jno    0x41369e
  413653:	xor    eax,0x7be1f053
  413658:	sbb    al,0xf9
  41365a:	or     BYTE PTR [ebx+edi*1],dl
  41365d:	sti    
  41365e:	cwde   
  41365f:	cmp    dl,0xdc
  413662:	cmp    al,BYTE PTR [ecx]
  413664:	retf   
  413665:	ins    BYTE PTR es:[edi],dx
  413666:	jns    0x413697
  413668:	inc    ecx
  413669:	enter  0x24c8,0xc0
  41366d:	push   esp
  41366e:	repz in al,dx
  413670:	inc    ecx
  413671:	mov    ch,0x26
  413673:	cmp    eax,0x63f3f077
  413678:	adc    BYTE PTR [edi],dl
  41367a:	test   eax,0x659a162f
  41367f:	pop    es
  413680:	call   0x1b40:0x15c17da6
  413687:	push   es
  413688:	cmp    ah,0xca
  41368b:	pop    ebp
  41368c:	mov    eax,0xe0301e32
  413691:	mov    eax,ds:0x2d0ab997
  413696:	retf   0x3427
  413699:	scas   eax,DWORD PTR es:[edi]
  41369a:	xchg   ebx,eax
  41369b:	repz test BYTE PTR [eax-0x2c],bh
  41369f:	lods   eax,DWORD PTR ds:[esi]
  4136a0:	sub    ch,ah
  4136a2:	mov    eax,0x936f0963
  4136a7:	and    BYTE PTR [eax],ch
  4136a9:	ret    0x7a3a
  4136ac:	and    DWORD PTR [edi-0x7c2b48cf],0x5a
  4136b3:	adc    ah,BYTE PTR [esi]
  4136b5:	jae    0x413637
  4136b7:	loop   0x41364d
  4136b9:	aaa    
  4136ba:	pusha  
  4136bb:	fld    TBYTE PTR [eax]
  4136bd:	sub    DWORD PTR [esi-0x7eee87a9],edi
  4136c3:	xchg   ebp,eax
  4136c4:	data16 jle 0x413703
  4136c7:	jmp    0xac73:0xc7f9d05d
  4136ce:	pop    esi
  4136cf:	in     al,0x95
  4136d1:	xchg   edx,eax
  4136d2:	or     edi,DWORD PTR [esp+eiz*8-0x4a]
  4136d6:	or     DWORD PTR [ecx],edx
  4136d8:	out    dx,al
  4136d9:	push   ebp
  4136da:	pop    esp
  4136db:	fsubr  DWORD PTR [esp+0x60]
  4136df:	inc    edi
  4136e0:	or     cl,bh
  4136e2:	xchg   BYTE PTR [ebx],dl
  4136e4:	push   es
  4136e5:	xchg   edx,eax
  4136e6:	dec    ebx
  4136e7:	jg     0x413684
  4136e9:	sbb    esi,ebp
  4136eb:	inc    ebx
  4136ec:	ja     0x413746
  4136ee:	push   ebx
  4136ef:	mov    DWORD PTR [ecx+edi*8-0x7c],0xcad4f51a
  4136f7:	push   cs
  4136f8:	push   ecx
  4136f9:	or     DWORD PTR [edx],ebx
  4136fb:	jmp    esp
  4136fd:	push   edi
  4136fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136ff:	mov    esp,0x4c7d32f3
  413704:	ret    
  413705:	lods   eax,DWORD PTR ds:[esi]
  413706:	inc    ebp
  413707:	das    
  413708:	mov    cl,0xa1
  41370a:	fs push ds
  41370c:	mov    ds:0x7d8c5caa,eax
  413711:	pop    ecx
  413712:	rcr    BYTE PTR [edi-0x4a4a68f5],0x4e
  413719:	lock adc eax,0xc51b9b65
  41371f:	jb     0x41378a
  413721:	call   0x5f3b55c2
  413726:	out    0x3a,al
  413728:	xor    eax,0x23403b11
  41372d:	xor    eax,DWORD PTR [ecx]
  41372f:	cmp    eax,0xa68c2c43
  413734:	dec    eax
  413735:	(bad)  
  413737:	jecxz  0x413711
  413739:	pop    eax
  41373a:	cmp    DWORD PTR [ebp+0x2d],esp
  41373d:	dec    esp
  41373e:	dec    edi
  41373f:	stc    
  413740:	xchg   edx,eax
  413741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413742:	xlat   BYTE PTR ds:[ebx]
  413743:	sbb    DWORD PTR [ecx],ebx
  413745:	mov    esp,0x6b15cac8
  41374a:	or     ebx,ebx
  41374c:	jge    0x413753
  41374e:	es test al,0xae
  413751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413752:	cdq    
  413753:	fwait
  413754:	xor    dh,BYTE PTR [edx+0x5d]
  413757:	mov    esi,0xac5bfcac
  41375c:	aam    0x64
  41375e:	shr    DWORD PTR [ecx+0x53],0xa4
  413762:	hlt    
  413763:	test   ebp,ecx
  413765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413766:	jmp    0x68d7:0x2cd7b165
  41376d:	inc    ebp
  41376e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41376f:	outs   dx,DWORD PTR ds:[esi]
  413770:	fsubp  st(4),st
  413772:	lock xchg ecx,eax
  413774:	add    BYTE PTR [ebx-0x57],al
  413777:	mov    ah,0x0
  413779:	mov    bh,0xff
  41377b:	jno    0x4137a2
  41377d:	not    BYTE PTR [ebx-0x42]
  413780:	(bad)  
  413782:	shr    BYTE PTR ds:0xe6963260,0x58
  413789:	mov    edx,0xdf91cc15
  41378e:	outs   dx,DWORD PTR ds:[esi]
  41378f:	jmp    0x3f601848
  413794:	mov    WORD PTR [edi-0x40],cs
  413797:	retf   
  413798:	mov    ch,0xe
  41379a:	jmp    0x5a06098b
  41379f:	leave  
  4137a0:	ds or  al,0xe3
  4137a3:	pop    edx
  4137a4:	loopne 0x41374b
  4137a6:	sub    DWORD PTR [ecx],ebx
  4137a8:	or     ch,al
  4137aa:	repz fdivr QWORD PTR [edx]
  4137ad:	ja     0x413780
  4137af:	lods   al,BYTE PTR ds:[esi]
  4137b0:	ret    0x19e6
  4137b3:	je     0x413740
  4137b5:	mov    DWORD PTR [edx],edx
  4137b7:	xor    DWORD PTR [ecx+0x4c],ebx
  4137ba:	in     eax,0xb
  4137bc:	jnp    0x413807
  4137be:	inc    edi
  4137bf:	int3   
  4137c0:	mov    ds:0x243ec80c,al
  4137c5:	add    DWORD PTR [esp+edi*8],eax
  4137c8:	push   ecx
  4137c9:	(bad)  
  4137ca:	mov    eax,0xe9005100
  4137cf:	pop    ecx
  4137d0:	nop
  4137d1:	mov    ds:0xb1d38e4e,al
  4137d6:	mov    edx,es
  4137d8:	test   al,0x90
  4137da:	popf   
  4137db:	pop    esp
  4137dc:	xchg   dh,cl
  4137de:	imul   ebx,DWORD PTR ds:[ebx],0xfffffff6
  4137e2:	inc    ecx
  4137e3:	jb     0x4137a6
  4137e5:	xor    edx,DWORD PTR [edi]
  4137e7:	xchg   edi,eax
  4137e8:	pop    eax
  4137e9:	mov    al,0x3e
  4137eb:	nop
  4137ec:	cmc    
  4137ed:	ret    0x6b9c
  4137f0:	(bad)  ds:0x4841cc0f
  4137f6:	push   ebx
  4137f7:	xchg   ebx,eax
  4137f8:	xor    ebp,DWORD PTR [edi-0x4fa2adb5]
  4137fe:	xor    eax,0xe5afe64b
  413803:	fdivr  QWORD PTR [ebx-0x3f]
  413806:	je     0x41382f
  413808:	jecxz  0x4137f2
  41380a:	mov    esi,0x270be2f8
  41380f:	or     al,0x7c
  413811:	mov    dh,0xc0
  413813:	jno    0x413800
  413815:	outs   dx,BYTE PTR ds:[esi]
  413816:	mov    al,ds:0xb0b8bf3a
  41381b:	les    esp,FWORD PTR [edi+0x47]
  41381e:	sub    al,0x54
  413820:	lock cwde 
  413822:	enter  0x5e11,0x6d
  413826:	and    ecx,DWORD PTR [edx+eiz*8-0x2809b5f9]
  41382d:	mov    esp,0xb49f6159
  413832:	jge    0x413845
  413834:	out    0x73,eax
  413836:	or     DWORD PTR [edx+eiz*2],0xf5906da0
  41383d:	cli    
  41383e:	add    eax,0x938c7499
  413844:	jp     0x4138c4
  413846:	xlat   BYTE PTR ds:[ebx]
  413847:	scas   al,BYTE PTR es:[edi]
  413848:	mov    es,WORD PTR [ebx+0x16]
  41384b:	pop    ebx
  41384c:	stc    
  41384d:	jle    0x41386a
  41384f:	xchg   edi,eax
  413850:	mov    al,0x67
  413852:	loop   0x413805
  413854:	aas    
  413855:	pop    edx
  413856:	mov    ds:0x7f82b9da,al
  41385b:	stc    
  41385c:	cs jne 0x413873
  41385f:	xor    eax,0x40e1bf05
  413864:	in     al,0xdb
  413866:	lea    edi,[ebx]
  413868:	jl     0x4138ba
  41386a:	mov    eax,0x39fbd2a9
  41386f:	bound  edx,QWORD PTR [eax+ebp*4+0x301f41c4]
  413876:	cwde   
  413877:	mov    cl,0x87
  413879:	jmp    0xf8f49d10
  41387e:	push   esp
  41387f:	cmp    al,0x74
  413881:	jmp    0x6fdb:0x4eb582c4
  413888:	sub    edi,DWORD PTR [edx]
  41388a:	mov    bh,0xd7
  41388c:	pop    ebx
  41388d:	jbe    0x413821
  41388f:	push   cs
  413890:	jnp    0x413864
  413892:	lock mov esi,DWORD PTR [edi]
  413895:	dec    ebx
  413896:	out    0xe,eax
  413898:	mov    dl,0xaf
  41389a:	nop
  41389b:	stos   DWORD PTR es:[edi],eax
  41389c:	mov    ebp,0x91f29f5b
  4138a1:	hlt    
  4138a2:	test   dl,cl
  4138a4:	jp     0x413846
  4138a6:	shl    BYTE PTR [ecx+0x74],1
  4138a9:	arpl   WORD PTR [esi+0x5eb3f624],si
  4138af:	iret   
  4138b0:	mov    ds:0x88df2dc5,al
  4138b5:	sub    DWORD PTR [eax-0x69],0x3
  4138b9:	push   ebp
  4138ba:	nop
  4138bb:	jnp    0x4138e8
  4138bd:	and    esp,DWORD PTR [edi]
  4138bf:	or     ebp,ebp
  4138c1:	push   es
  4138c2:	repz aad 0xfa
  4138c5:	mov    edi,0x41a9f22
  4138ca:	jmp    0x4138b2
  4138cc:	outs   dx,DWORD PTR ds:[esi]
  4138cd:	mov    edi,0xe08daa
  4138d2:	or     al,0x19
  4138d4:	hlt    
  4138d5:	imul   ch
  4138d7:	jmp    0x4abc:0xb1c22595
  4138de:	push   0x2b
  4138e0:	fidiv  WORD PTR [edx]
  4138e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138e3:	(bad)  
  4138e6:	clc    
  4138e7:	add    ebp,edi
  4138e9:	jo     0x4138a0
  4138eb:	rsqrtps xmm3,XMMWORD PTR [ebx+ebp*1+0x627d76a9]
  4138f3:	xor    cl,dh
  4138f5:	mov    ch,0xba
  4138f7:	js     0x413893
  4138f9:	retf   0xde40
  4138fc:	mov    BYTE PTR [ebx+0x6c],cl
  4138ff:	fst    st(6)
  413901:	stos   DWORD PTR es:[edi],eax
  413902:	jne    0x41389d
  413904:	sahf   
  413905:	push   ds
  413906:	mov    eax,0xb942951e
  41390b:	neg    BYTE PTR [ebx-0x615e7442]
  413911:	loop   0x413969
  413913:	add    al,0x0
  413915:	mov    esp,0x8e2a6c90
  41391a:	jo     0x4138d9
  41391c:	xchg   di,ax
  41391e:	fwait
  41391f:	daa    
  413920:	(bad)  
  413922:	adc    DWORD PTR [esp+edi*2-0x3791fe82],ebx
  413929:	fstp   DWORD PTR fs:0xbb0de8a9
  413930:	(bad)  
  413931:	leave  
  413932:	inc    esp
  413933:	pop    es
  413934:	cmc    
  413935:	(bad)
  413938:	cwde   
  413939:	cli    
  41393a:	stos   BYTE PTR es:[edi],al
  41393b:	push   edx
  41393c:	pop    esi
  41393d:	aas    
  41393e:	sti    
  41393f:	pusha  
  413940:	add    ebp,esp
  413942:	mov    eax,es:0xe565e3e8
  413948:	sbb    BYTE PTR [edx+0x7a],0x45
  41394c:	fistp  QWORD PTR [ecx]
  41394e:	xchg   ebx,eax
  41394f:	jbe    0x41391f
  413951:	in     eax,dx
  413952:	in     al,dx
  413953:	xchg   ebx,eax
  413954:	push   ebx
  413955:	inc    esp
  413956:	gs add eax,0x2ba55f03
  41395c:	mov    eax,DWORD PTR [edi+0x44642869]
  413962:	add    edx,DWORD PTR [ecx]
  413964:	push   eax
  413965:	in     al,dx
  413966:	pop    eax
  413967:	push   es
  413968:	leave  
  413969:	ret    
  41396a:	jp     0x413956
  41396c:	sub    al,0x73
  41396e:	cmp    ecx,eax
  413970:	fstp   DWORD PTR [edi+0xd12554f]
  413976:	je     0x413923
  413978:	mov    eax,0xbfd577b7
  41397d:	loop   0x413924
  41397f:	push   cs
  413980:	adc    al,0x2d
  413982:	xchg   ebx,eax
  413983:	jbe    0x413905
  413985:	cmp    al,0x54
  413987:	pop    ebx
  413988:	push   0x13
  41398a:	cdq    
  41398b:	push   cs
  41398c:	add    DWORD PTR [eax],ebx
  41398e:	aam    0x9b
  413990:	mov    edi,0xb2024c8b
  413995:	daa    
  413996:	sbb    DWORD PTR ds:0x5a09e6f4,ecx
  41399c:	(bad)  
  41399d:	pop    edi
  41399e:	inc    ebp
  41399f:	dec    ebx
  4139a0:	mov    edi,0x4bc18119
  4139a5:	mov    esi,0x58b8a322
  4139aa:	retf   0x68ec
  4139ad:	xchg   ebx,eax
  4139ae:	imul   eax,DWORD PTR [esi+0x1a2cd485],0xffffff97
  4139b5:	dec    ebp
  4139b6:	sahf   
  4139b7:	push   esp
  4139b8:	mov    edx,0x825bd088
  4139bd:	sub    al,0x53
  4139bf:	inc    esi
  4139c0:	aas    
  4139c1:	retf   0x3b28
  4139c4:	jb     0x41397a
  4139c6:	fwait
  4139c7:	mov    edi,DWORD PTR [ecx+0x26]
  4139ca:	push   edx
  4139cb:	cwde   
  4139cc:	mov    al,0x14
  4139ce:	or     al,0xac
  4139d0:	sub    BYTE PTR [edx-0x496f7bb6],0x3a
  4139d7:	sub    eax,0x6cb9424f
  4139dc:	mov    dh,0xb1
  4139de:	neg    ch
  4139e0:	cmp    al,0xc2
  4139e2:	mov    ecx,0x7964790b
  4139e7:	loopne 0x413a04
  4139e9:	mov    edi,0x2ac790fa
  4139ee:	addr16 pop edx
  4139f0:	lea    ecx,[esi+0x4b90f972]
  4139f6:	pusha  
  4139f7:	or     DWORD PTR [eax+0x2d],0x30d12a5c
  4139fe:	xchg   BYTE PTR [edx-0x7],ah
  413a01:	lahf   
  413a02:	(bad)  
  413a03:	jmp    0x4139a3
  413a05:	mov    eax,ds:0x29f37eec
  413a0a:	xor    eax,0x85b60b56
  413a0f:	cmp    bh,BYTE PTR [eax]
  413a11:	xchg   ebx,eax
  413a12:	aam    0xe2
  413a14:	adc    eax,0x59d7b61d
  413a19:	jmp    0xe2d1348f
  413a1e:	test   al,0x63
  413a20:	dec    ecx
  413a21:	lods   al,BYTE PTR ds:[esi]
  413a22:	dec    ebx
  413a23:	xchg   esp,eax
  413a24:	(bad)  
  413a25:	inc    bx
  413a27:	cwde   
  413a28:	lds    esp,FWORD PTR [edx-0x69fd9b6f]
  413a2e:	aaa    
  413a2f:	scas   al,BYTE PTR es:[edi]
  413a30:	int3   
  413a31:	sar    DWORD PTR [edx+0x1e6e0532],cl
  413a37:	push   ss
  413a38:	push   eax
  413a39:	repnz (bad) 
  413a3b:	mov    ds:0x540806f,al
  413a40:	(bad)  
  413a41:	cwde   
  413a42:	and    BYTE PTR [esi],ch
  413a44:	mov    ds:0x4e5cde8b,al
  413a49:	out    0x74,eax
  413a4b:	jmp    0xaf0f5a3
  413a50:	xchg   ecx,eax
  413a51:	sahf   
  413a52:	sub    bl,bl
  413a54:	pop    ds
  413a55:	inc    ebx
  413a56:	adc    al,0x7f
  413a58:	push   ebx
  413a59:	sub    esp,DWORD PTR [eax-0x10]
  413a5c:	cwde   
  413a5d:	icebp  
  413a5e:	sbb    al,0xc9
  413a60:	adc    ecx,DWORD PTR [ebx-0x5b8f1516]
  413a66:	fnsave [esi+0x3782d5bf]
  413a6c:	shl    DWORD PTR [esi-0x7ac3ff83],0xb3
  413a73:	and    eax,0x7ea29a33
  413a78:	test   eax,0xbb27dc37
  413a7d:	clts   
  413a7f:	ins    BYTE PTR es:[edi],dx
  413a80:	repz dec edi
  413a82:	cld    
  413a83:	into   
  413a84:	inc    ebx
  413a85:	jo     0x413af9
  413a87:	push   0x36
  413a89:	frstor [esi+0x2e265d6e]
  413a8f:	cmp    ebp,edx
  413a91:	jmp    0x1f67e4e8
  413a96:	sbb    al,0xe8
  413a98:	xchg   edx,eax
  413a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a9a:	cwde   
  413a9b:	and    dl,bl
  413a9d:	sub    ah,BYTE PTR [esi-0x3d]
  413aa0:	dec    eax
  413aa1:	and    BYTE PTR [edi],ah
  413aa3:	outs   dx,DWORD PTR ds:[esi]
  413aa4:	xlat   BYTE PTR ds:[ebx]
  413aa5:	xchg   edi,eax
  413aa6:	mov    ds:0xa6feda79,eax
  413aab:	mov    edi,0xcb749218
  413ab0:	repnz lea ecx,[ebp+0x21ce169b]
  413ab7:	lahf   
  413ab8:	cmp    eax,0x8a654796
  413abd:	cli    
  413abe:	iret   
  413abf:	xlat   BYTE PTR ds:[ebx]
  413ac0:	ins    DWORD PTR es:[edi],dx
  413ac1:	pop    ecx
  413ac2:	outs   dx,BYTE PTR ds:[esi]
  413ac3:	jg     0x413b06
  413ac5:	fstp   st(2)
  413ac7:	add    eax,0x1ee5cca1
  413acc:	xchg   edi,eax
  413acd:	cmp    al,0x12
  413acf:	mov    ebp,0x8651cb26
  413ad4:	cmp    bl,BYTE PTR [ecx]
  413ad6:	push   ds
  413ad7:	test   al,0x33
  413ad9:	cwde   
  413ada:	xlat   BYTE PTR ds:[ebx]
  413adb:	outs   dx,BYTE PTR ds:[esi]
  413adc:	dec    ecx
  413add:	mov    al,0x5e
  413adf:	xchg   edi,eax
  413ae0:	cs cdq 
  413ae2:	test   BYTE PTR [eax+0x2b2d506d],cl
  413ae8:	imul   eax,DWORD PTR [edi-0x4f],0x73
  413aec:	in     al,0xc2
  413aee:	sub    eax,0xa07b433c
  413af3:	(bad)  
  413af4:	stos   BYTE PTR es:[edi],al
  413af5:	sbb    eax,0xe6abf310
  413afa:	icebp  
  413afb:	leave  
  413afc:	mov    DWORD PTR [ebx+0x4af3080b],eax
  413b02:	xchg   ebp,eax
  413b03:	ss aam 0x4d
  413b06:	mov    al,ds:0x66186c65
  413b0b:	scas   eax,DWORD PTR es:[edi]
  413b0c:	push   ds
  413b0d:	xor    BYTE PTR [edx],0x98
  413b10:	aad    0xc5
  413b12:	fisubr WORD PTR [ebp+0x150c9904]
  413b18:	mov    ds:0xc2319a7e,eax
  413b1e:	sbb    BYTE PTR [ebp+esi*1+0x327f448b],ch
  413b25:	xor    BYTE PTR [ebx+0x1c],cl
  413b28:	sub    ecx,DWORD PTR [ecx-0x60]
  413b2b:	int3   
  413b2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b2d:	aam    0xca
  413b2f:	mov    dl,0x9a
  413b31:	mov    ebx,0xb138cc22
  413b36:	push   cs
  413b37:	dec    ebp
  413b38:	push   es
  413b39:	adc    DWORD PTR [edi+ecx*2-0x28],0xe01d98f5
  413b41:	mov    esi,esi
  413b43:	pop    ecx
  413b44:	inc    ebx
  413b45:	inc    esp
  413b46:	retf   0x2eae
  413b49:	xor    BYTE PTR [ebx+0x74],bl
  413b4c:	sti    
  413b4d:	push   ecx
  413b4e:	inc    eax
  413b4f:	sbb    BYTE PTR [eax+0x66],bh
  413b52:	fcmovnu st,st(4)
  413b54:	xor    edx,ecx
  413b56:	xor    eax,0xd2cff149
  413b5b:	and    eax,0x887d618f
  413b60:	sahf   
  413b61:	mov    edi,0xfd80ba05
  413b66:	fcomp  DWORD PTR [edi]
  413b68:	mov    esp,0xf9e716ed
  413b6d:	mov    al,0xc7
  413b6f:	adc    eax,0xc31088be
  413b74:	push   cs
  413b75:	mov    esp,DWORD PTR [ecx]
  413b77:	sti    
  413b78:	xchg   esp,eax
  413b79:	scas   al,BYTE PTR es:[edi]
  413b7a:	test   al,0x1
  413b7c:	pop    ecx
  413b7d:	push   esi
  413b7e:	fst    DWORD PTR [ecx-0x7660977]
  413b84:	pop    ebp
  413b85:	and    ah,dh
  413b87:	pop    esi
  413b88:	xlat   BYTE PTR ds:[ebx]
  413b89:	add    dh,al
  413b8b:	stos   BYTE PTR es:[edi],al
  413b8c:	push   eax
  413b8d:	add    eax,0xb52f192b
  413b92:	rol    esi,cl
  413b94:	out    dx,al
  413b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b96:	dec    eax
  413b98:	mov    dl,0x42
  413b9a:	xor    eax,0xe734d2bc
  413b9f:	or     eax,esi
  413ba1:	cmp    cl,ch
  413ba3:	dec    eax
  413ba4:	lea    ax,[edx]
  413ba7:	xor    al,BYTE PTR [eax+0x5d747a1f]
  413bad:	adc    dh,bh
  413baf:	xchg   ebp,eax
  413bb0:	and    al,0x29
  413bb2:	push   ebx
  413bb3:	cld    
  413bb4:	and    bh,dl
  413bb6:	scas   eax,DWORD PTR es:[edi]
  413bb7:	jnp    0x413b8a
  413bb9:	lods   al,BYTE PTR ds:[esi]
  413bba:	xchg   edi,eax
  413bbb:	adc    eax,0xad963888
  413bc0:	scas   eax,DWORD PTR es:[edi]
  413bc1:	lods   eax,DWORD PTR ds:[esi]
  413bc2:	popf   
  413bc3:	ror    BYTE PTR [edx+0x2f9d3473],cl
  413bc9:	push   0x8e31e0a9
  413bce:	xor    DWORD PTR [edx-0x48018463],edx
  413bd4:	mov    bl,0x4e
  413bd6:	sbb    ah,BYTE PTR [ebx+0x6be9c38f]
  413bdc:	imul   ebp,DWORD PTR [ecx+0x65],0xb9b991c9
  413be3:	mov    ecx,DWORD PTR [ebp-0x8]
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	jmp    0x413cf3
  413d46:	pop    edx
  413d47:	push   esi
  413d48:	ja     0x413d3c
  413d4a:	test   DWORD PTR [edx-0x78],ecx
  413d4d:	jne    0x413d51
  413d4f:	push   ss
  413d50:	sbb    al,0xbd
  413d52:	mov    al,0xde
  413d54:	add    DWORD PTR [eax],eax
  413d56:	add    BYTE PTR [eax],al
  413d58:	inc    ebp
  413d59:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
